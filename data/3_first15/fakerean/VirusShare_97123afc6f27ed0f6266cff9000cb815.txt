sbb
add
mov
push
dec
add
pop
lcall
loop
cltd
xor
loop
inc
or
mov
ja
leave
mov
dec
cmc
mov
into
scas
cmc
mov
aaa
ret
addr16
xchg
ss
cmp
inc
into
xor
sub
in
mov
cmp
ret
lea
mov
and
push
or
mov
sub
pop
xchg
cmp
stos
and
jp
call
aad
sbb
nop
mov
cli
nop
sbb
out
adc
cmpsl
and
mov
int
js
aad
push
and
insb
inc
and
movsl
popa
mov
mov
cmp
into
inc
int3
rorb
ds
enter
dec
push
aaa
enter
js
pop
inc
jge
sbb
or
sub
jns
pop
sbb
aad
lcall
push
in
loopne
xchg
adc
inc
mov
sub
repnz
xchg
mov
mov
outsl
push
dec
and
mov
sbb
repnz
loope
std
xchg
jle
sbb
sbb
inc
push
ss
inc
dec
clc
int3
sbb
sub
xchg
test
imul
ficompl
dec
imul
xor
test
mov
lret
cmp
in
add
cmc
imul
push
and
add
dec
je
push
paddd
lret
dec
dec
enter
inc
aam
loop
mov
data16
testb
jbe
and
inc
xchg
inc
pop
push
dec
clc
cld
fimull
addr16
repz
jecxz
subb
push
cwtl
pop
out
dec
fcmovne
push
movl
fnsave
pop
sub
mov
out
sub
lds
imul
pop
sahf
cmpsl
push
xchg
out
mov
out
mov
cmpl
movsl
xor
xor
xor
push
subb
arpl
stos
xchg
fsqrt
je
or
and
push
in
ret
out
aam
call
scas
inc
in
sbb
jne
adc
syscall
popa
imul
push
and
inc
xchg
gs
cwtl
and
add
and
imul
fisubl
push
data16
mov
sti
adc
in
jne
lcall
jge
and
and
adc
mov
iret
arpl
ljmp
xchg
mov
adc
xchg
shlb
hlt
pushf
test
fdivr
xchg
cltd
cwtl
bound
pop
std
dec
repnz
pop
mov
or
out
add
clc
mov
jle
fmuls
enter
xchg
aas
dec
cmp
add
pop
ss
inc
mov
sarl
inc
mov
cmp
jge
mov
mov
push
pop
aaa
sbbl
repz
jo
sub
repnz
cmp
adc
push
mov
test
pop
aam
fstps
pop
aam
mov
inc
push
push
test
pop
jne
push
repnz
stos
pop
int3
jb
adc
push
jo
mov
or
ss
pop
call
ret
lret
fisubs
je
stos
mov
out
dec
sbb
xchg
pop
dec
lret
pop
ja
jp
inc
pushf
fwait
and
mov
xchg
cld
aaa
mov
cmpsl
cltd
mov
pop
popf
scas
mov
int
call
jl
cmc
arpl
inc
cmpsb
xchg
sti
jge
cmpsb
out
jmp
cmpsb
jecxz
aaa
pop
pop
testb
mov
push
cli
in
fmuls
cmp
pop
aas
mov
mov
cmpsl
jnp
int3
mov
test
dec
mov
bound
in
leave
clc
jae
std
std
pop
dec
out
cld
test
sbbl
fs
pop
jnp
mov
and
das
out
int3
in
in
xor
push
pop
rcrb
jmp
add
cmp
in
dec
fistpll
xchg
std
pop
dec
cltd
pop
jo
xchg
push
std
aaa
or
push
fmuls
lods
lret
sbb
fbld
idivb
mov
std
clc
popa
iret
adc
push
jb
nop
push
fildll
pushf
stos
lods
cmp
imul
cwtl
mov
jbe
insl
sbb
sbb
cmp
adc
pop
iret
popa
ret
xor
in
daa
ds
lcall
adc
sbb
bound
add
sbb
in
mov
fyl2x
sbb
addr16
fisttpl
xchg
jo
js
mov
mov
cmp
js
lods
lahf
adc
aam
mov
push
adcl
pop
mov
push
mov
sub
xsavec
rorl
hlt
cli
imul
icebp
popf
not
mov
push
test
mov
mov
adc
rcr
repz
popf
jmp
mov
loop
mov
xor
hlt
mov
lcall
les
adc
repz
les
jbe
rorl
pop
faddp
cmp
jmp
rorl
jbe
sbbb
jle
lds
dec
fcoms
and
sub
ret
rorl
jle
test
test
cmp
ror
movb
dec
and
dec
push
out
push
pushf
push
mov
mov
jmp
or
mov
jnp
ret
cmp
out
mov
sub
lcall
push
out
cmp
pushf
in
test
mov
loope
adc
and
repnz
js
ja
dec
mov
mov
out
or
fistpll
jo
sbb
fdivl
mov
and
es
mov
or
inc
adc
icebp
shll
xchg
xor
mov
pop
inc
adc
mov
dec
xorl
outsl
int
adc
mov
mov
mov
mov
and
xor
repnz
movsl
sbb
movd
pushf
das
call
inc
insl
jp
jns
sti
mov
dec
movsl
data16
jbe
notb
loop
and
ret
movsl
fidivs
push
cld
push
pop
bound
les
call
mov
jg
or
dec
aas
nop
and
popa
sub
xor
repz
dec
mov
aad
ljmp
cld
pop
hlt
lock
lahf
dec
rcll
push
push
loope
cld
fwait
lods
jnp
bound
cmp
out
add
icebp
aas
jecxz
mov
in
sub
gs
roll
xchg
imul
adc
cs
dec
mov
xchg
pop
shl
out
pop
lret
dec
xchg
stos
cmp
jnp
push
insb
or
andb
push
lds
mov
enter
lock
push
inc
loop
add
pop
fadds
bound
sbb
push
cltd
push
fcoms
inc
addb
out
jo
enter
xchg
iret
filds
imul
cltd
ficomps
in
out
ljmp
push
mov
fistps
or
into
dec
adc
pop
inc
or
aaa
in
pop
pusha
cmp
stos
ljmp
mov
xchg
adc
xchg
and
xlat
mov
lcall
pop
mov
bound
cltd
cmp
fistpl
test
cmp
inc
mov
xlat
test
sub
jnp
data16
cmp
fcmove
and
call
mov
aas
xor
mov
jno
std
sub
jp
ljmp
xchg
jmp
dec
xor
dec
jns
xorb
mov
fcomi
jbe
cs
inc
icebp
dec
inc
lods
inc
and
xorl
das
fidivrs
mov
in
mov
pop
sub
jnp
dec
icebp
xchg
scas
push
sbb
cmc
mov
fsts
add
jbe,pt
push
push
das
cld
pop
data16
add
mov
outsl
and
jle
popf
xor
jmp
test
jecxz
pop
out
mov
mov
andb
insl
and
mov
dec
dec
out
add
xorb
cmp
jge
sub
push
cld
jnp
data16
hlt
inc
pop
imul
iret
inc
and
cltd
rcll
repnz
repnz
sahf
rep
cltd
stos
cmp
outsl
shl
jecxz
clc
cmp
push
cmp
lret
popf
shl
test
push
pop
inc
or
mov
imull
mov
out
jnp
adc
push
jmp
push
mov
mov
jae
push
xor
sti
mov
mov
push
push
mov
inc
mov
in
aam
pushf
mov
inc
cs
mov
inc
mov
clc
sbb
jnp
inc
mov
sbb
cmc
sbb
out
aaa
jns
xchg
push
out
cmp
pushf
aad
xchg
mov
xlat
xor
inc
push
or
outsb
jne
mov
or
pop
push
xchg
mov
sbb
mov
sub
or
mov
push
scas
cmp
xchg
adc
lock
lahf
mov
jo
out
out
jbe
std
jbe
push
push
mov
push
loope
loope
sbb
pop
pop
cmp
repz
xor
mov
mov
dec
jnp
aaa
mov
lods
jp
gs
and
loopne
lret
sahf
hlt
std
enter
int
mov
loop
pop
xchg
cmc
xor
or
jle
imul
icebp
pop
cli
push
pop
add
push
push
pop
add
jns
into
pop
pop
pop
int3
cmp
or
cmc
mov
sub
inc
shl
add
adc
hlt
xchg
xor
jg
xor
aas
loope
lods
notl
xor
lock
xchg
je
or
inc
pop
push
mov
ret
dec
loope
adc
xor
jle
addr16
icebp
inc
mov
xchg
inc
stos
sub
pop
out
push
cmp
ss
jns
loope
xchg
lea
sbb
hlt
popf
or
mov
xor
mov
inc
pop
or
daa
test
dec
clc
lahf
dec
loope
mov
fs
in
xchg
enter
pop
xor
mov
pop
xor
outsb
pop
pop
jne
lret
sub
xor
cmp
ljmp
rorb
push
sub
add
enter
pop
jp
lret
imull
les
fsts
icebp
repnz
arpl
push
popf
pop
cld
je
jb
adc
add
push
sti
jno
dec
dec
sub
std
clc
adc
pop
mov
daa
insb
adc
mov
loop
ret
cmp
cmp
ljmp
and
xor
je
and
sub
repnz
rclb
cmp
mov
xchg
mov
xor
enter
addb
out
clc
cwtl
inc
jmp
sahf
jge
clc
inc
push
cmpsl
jge
aam
jmp
mov
push
xchg
adc
pushf
jo
fistl
add
sahf
push
sbb
ret
mov
add
stc
js
in
jb
xor
sahf
stc
iret
cwtl
or
sbb
ss
jg
ja
sub
pop
scas
insl
mov
outsl
dec
idivl
pop
sbb
lods
cld
pop
cmc
cmp
outsb
xor
icebp
jp
or
testb
je
xchg
xchg
pop
sbb
movsb
leave
aas
movl
dec
movsl
repnz
adcb
push
ret
inc
push
gs
dec
imul
mov
pushf
push
sti
xor
idivb
xchg
and
gs
icebp
movl
jae
push
movsl
pop
add
ss
cld
or
add
dec
lods
scas
jge
xchg
push
xor
sub
movsb
mov
call
mov
xor
and
out
loopne
lea
adc
int
dec
jp
jae
arpl
mov
mov
mov
pop
sbb
adc
daa
lahf
push
loope
jbe
inc
out
sbb
jl
or
repnz
cli
adc
sbb
mov
inc
pushf
ja
sbb
cmp
sbb
jne
push
insl
xor
cld
mov
inc
inc
or
in
adc
xchg
adc
mov
inc
sbb
dec
mov
scas
mov
sbb
ffreep
mov
cmp
ss
rclb
xchg
jecxz
or
inc
fwait
lret
int3
xchg
nop
mov
nop
xor
xor
loope
movsb
mov
jo
out
xchg
xchg
cld
pop
outsb
aaa
lods
movsl
int
fadds
addr16
inc
cld
sti
adc
xor
mov
mov
inc
mov
cmp
adc
mov
leave
iret
dec
xor
out
xlat
pop
test
pop
sub
lock
sbb
jb
xor
push
shr
ljmp
dec
push
loop
ficomps
sarb
pop
pusha
push
nop
addl
mov
dec
and
add
leave
xchg
leave
cmp
jb
dec
sbb
testl
outsl
mov
dec
insb
mov
ljmp
imul
testb
mov
xlat
test
shrl
push
cmpsl
or
xor
mov
addb
hlt
loop
outsb
rolb
fidivl
mov
jbe
push
and
push
in
dec
add
fdivrl
ds
and
mov
mov
dec
xor
gs
ret
mov
shl
push
push
imul
js
shll
lock
daa
xlat
sbb
jne
jo
cmp
ss
stc
xlat
sarl
or
add
out
xor
gs
dec
ret
ret
and
sbb
push
push
mov
in
pop
je
leave
push
sub
xchg
sbb
bound
outsb
or
sbb
aas
test
cmpl
test
push
popa
stos
jg
adc
shl
inc
xchg
popa
dec
leave
add
nop
or
push
arpl
mov
shlb
sbb
leave
push
std
and
stos
sbb
xor
fnstenv
andb
push
sub
call
jne
jmp
mov
inc
sub
dec
stos
mov
push
rclb
in
test
jp
movsl
vmovntps
mov
cltd
pop
xor
in
notb
mov
cmp
jmp
outsb
rclb
adc
xor
sub
int3
popl
sbb
cmc
nop
mov
aas
lret
push
lods
rclb
inc
xor
ret
mov
sti
mov
andb
bound
add
cli
es
mov
mov
mov
mov
pop
jns
cmp
jae
enter
fcomps
jae
adc
repnz
das
addr16
adc
jp
js
jno
cmp
mov
cmpsb
inc
mov
imul
cltd
out
outsl
fldcw
outsl
add
mov
mov
movsl
jp
adc
cs
sbb
pop
push
adc
orb
rorb
lahf
in
xchg
cs
test
cmp
stc
cmpsb
jnp
jns
mov
jle
cli
mov
mov
scas
in
jmp
or
imul
iret
repnz
iret
call
js
add
jbe
movlhps
sahf
mov
pusha
ss
mov
std
and
icebp
lock
std
sarb
lock
leave
push
cmpsb
inc
je
add
lret
and
push
sti
xchg
stc
aad
jp
mov
adc
cmp
jecxz
adc
push
xchg
mov
jb
mov
lock
and
mov
das
cmp
lods
repz
push
out
cltd
inc
cmp
dec
sarb
imul
aad
push
cmp
mov
push
or
icebp
roll
das
es
movsl
push
or
sahf
adc
fs
push
cmpsb
mov
ss
push
out
inc
adc
xchg
es
repz
and
out
lret
mov
lock
call
mov
jle
cmp
in
mov
enter
mov
imul
js
cmpsl
rcl
jno
inc
xchg
shll
cli
or
fisttps
inc
mov
push
cmp
xchg
js
lahf
daa
test
add
repz
clc
sub
push
mov
xchg
shll
mov
and
mov
lahf
pop
cmp
fldcw
in
iret
cmp
repz
sbbl
cmc
push
pusha
add
daa
aas
outsb
mov
icebp
sbb
andb
mov
dec
xor
xchg
clc
push
fsubrp
push
aas
fdivrs
mov
and
test
push
xchg
push
pop
js
pop
or
movsb
dec
negb
pop
mov
ret
icebp
sbb
add
jl
jmp
mov
fidivs
xchg
bound
mov
arpl
stc
stos
lock
clc
sub
inc
fsub
cli
xorl
fisubs
cld
lret
push
pop
dec
cld
mov
test
cmp
xchg
mov
xor
ja
dec
sub
test
xchg
cmpsb
cs
cli
les
in
in
outsb
mov
xchg
cmp
mov
js
mov
lods
mov
loop
sti
mov
ret
lods
pop
add
loopne
out
outsb
dec
push
loop
int
add
push
push
ljmp
mov
add
sbb
pop
mov
or
adc
testl
cs
adc
movsb
insb
subl
sub
popf
sub
xchg
sub
push
jmp
pop
das
daa
push
test
orb
js
cmc
fs
and
mov
std
adcl
sub
test
inc
ds
fdivs
into
pop
or
push
shrb
jge
ljmp
rolb
push
fwait
inc
outsb
cmpsl
adc
cltd
in
nop
movsl
test
rcr
mov
lahf
bound
ljmp
sbb
adc
inc
cmpsl
ljmp
aam
mov
xchg
repz
and
es
call
fimuls
sbb
cmpsl
adc
mov
lret
jns
mov
cs
aaa
in
loope
arpl
fsub
mov
dec
sbb
test
xchg
out
pop
mov
mov
fiaddl
dec
js
pop
rorl
sbb
das
movb
or
fcoml
push
xor
pop
sbb
adc
stos
in
jmp
in
mov
dec
outsl
lret
leave
fiadds
scas
dec
mov
fsub
lods
fcmovne
add
std
test
adc
mov
or
stc
sub
inc
dec
mov
mov
leave
mov
sbb
dec
mov
in
cwtl
mov
sub
pop
in
jno
fstps
stc
add
rolb
shrl
or
sbb
das
adc
jnp
lods
sub
jp
and
gs
adc
aad
pop
inc
jle
rcll
sbb
push
aaa
shr
in
xchg
ljmp
insl
pop
cwtl
dec
jp
data16
imul
rol
jge
fs
mov
or
out
xchg
and
iret
sbb
or
shl
outsl
loope
xor
es
repz
pop
cmc
loop
mov
inc
repnz
mov
sti
ret
sti
mov
sahf
pop
shr
cmpsl
mov
dec
mov
adc
fcmovnu
gs
mov
pop
fisubl
aad
ss
mov
lea
aad
outsb
sbb
nop
test
pop
inc
fidivrs
cmpl
ret
xor
repnz
out
in
mov
jne
jge
sbb
or
cmc
adc
fnsave
enter
pusha
repz
cli
stc
mov
shr
mov
ret
push
or
inc
push
xchg
loope
inc
ror
cmp
das
inc
mov
shl
call
mov
out
ss
or
sbb
out
pusha
jecxz
fidivrs
lods
mov
sbb
xor
cmp
and
add
pop
mov
sub
sti
and
pop
clc
ds
dec
jl
mov
inc
test
scas
cs
cltd
repnz
xchg
push
dec
adc
and
push
roll
test
lret
inc
xchg
fldl
aas
xor
sbb
stos
out
lock
ja
jb
inc
adc
pop
jecxz
and
jmp
fsubp
mov
rcrl
jbe
or
shrb
adc
rcll
add
mov
mov
inc
mov
pushf
sub
dec
cmp
sbb
rorb
xchg
lods
xor
mov
add
int
xor
cmp
push
sbb
xor
bound
pop
mov
push
adc
lea
add
push
das
adc
sbb
xchg
mov
out
mov
xor
mov
mov
push
sbb
adc
pop
jae
scas
addr16
dec
inc
sub
jo
xor
and
mov
xchg
int
mov
add
mov
test
mov
mov
sub
pop
push
incb
mov
and
cmp
loope
dec
sub
imul
push
sbb
add
xchg
pop
cmp
inc
call
outsl
cli
jbe
pop
lods
stos
push
add
lahf
in
cwtl
dec
xchg
push
movl
push
jo
mov
fwait
pop
xchg
dec
jae
or
rclb
nop
fldcw
jmp
mov
sbb
xor
or
scas
repz
jg
lods
lods
mov
popf
loopne
dec
dec
js
cmp
ds
and
adc
inc
fdivrl
sbb
dec
xchg
pusha
jp
gs
js
stc
sub
mov
push
sahf
lret
testb
xor
mov
popf
lods
jns
xchg
adc
push
fcompl
inc
jl
cmpb
push
mov
out
inc
lods
push
fwait
cs
daa
pushf
mov
dec
jne
repnz
stc
aam
push
push
stc
sub
in
imul
mov
cmp
sahf
pop
fs
or
rorl
test
mov
shlb
adc
into
es
movsl
inc
insb
aad
xchg
ret
dec
into
jmp
cmp
enter
aas
xor
inc
mov
ret
popa
mov
fwait
mov
cmpsl
push
insb
test
adc
push
jns
cmp
adc
or
or
add
insl
ss
cmpsl
and
xchg
mov
insb
or
mov
push
and
sbb
outsb
cmc
out
mov
xchg
or
push
je
test
xor
movsb
mov
outsl
repnz
add
push
int3
xor
lock
nop
jbe
xchg
incb
lret
aaa
mov
mov
mov
cmpsb
sub
shll
adc
cmpsb
jno
fistpll
and
lock
call
cmp
cmp
fnstsw
gs
cmpsb
repz
pushf
icebp
mov
push
shrb
sub
xor
adcl
sarl
jl
pop
sbb
xchg
pop
mov
mov
mov
dec
imul
fists
movzwl
adc
ret
pop
inc
push
popa
fnstenv
sub
insb
add
sbbb
xlat
stos
nop
test
adc
cltd
ds
dec
xchg
xor
push
push
sbb
outsb
jae
and
push
mov
mov
fmuls
mov
pusha
mov
pop
jo
test
cmp
mov
movsb
arpl
push
test
divb
les
cmp
pop
add
jmp
leave
in
clc
xor
mov
and
lds
roll
xchg
pop
aas
shl
add
test
mov
push
enter
push
into
mov
cld
mov
pop
push
gs
sbb
and
xchg
inc
fdivrp
xchg
push
icebp
xchg
lahf
aad
test
mov
jp
add
sub
mov
je
push
repz
fwait
xchg
inc
sub
in
nop
dec
push
inc
mov
inc
push
scas
sub
cmp
xchg
dec
repz
sbb
mov
pop
je
mov
and
mov
js
fidivs
pop
add
cltd
mov
pop
test
cmc
sub
cmc
test
imul
mov
mov
jmp
movsb
out
shl
cld
jl
mov
sub
jb
lock
out
int3
std
adc
sbbl
push
rol
pop
mov
cmpsb
mov
enter
cmp
loopne
or
fisubrl
shl
loop
leave
pop
out
mov
xor
dec
je
pushf
aam
rcrl
inc
jo
or
cmp
int
pop
cmp
and
pand
cli
sbb
dec
cmp
cmpsb
mov
fnstcw
das
dec
or
dec
addl
mov
test
mov
test
popf
xor
std
mov
aad
mov
pop
mov
lret
jecxz
adc
pushl
mov
cmpsb
sbb
and
mov
jae,pt
or
inc
addr16
sbb
cmp
mov
inc
leave
lahf
xchg
scas
sbb
and
jb
inc
inc
inc
loopne
sub
cld
iret
test
sbb
xchg
mov
cmpsl
dec
stos
mov
cli
cmp
fstpt
je
ret
cld
xchg
xchg
fmul
sti
push
pop
mov
mov
jge
into
daa
jno
std
push
ficompl
cmp
lods
or
popf
and
outsb
stos
rol
dec
sbb
push
negl
xchg
aaa
nop
xchg
es
stos
inc
mulb
xorl
lea
shl
sub
arpl
jo
lods
add
fcomp
pop
data16
fcomp
std
int3
jg
sar
ds
pop
ret
inc
inc
push
mov
jbe
lret
movsb
addr16
mov
sub
mov
shll
pop
cwtl
arpl
loope
jb
push
ljmp
pop
pop
pop
lods
leave
or
cmp
jl
push
mov
add
mov
dec
add
xchg
dec
imul
pop
inc
insb
adc
into
lahf
mov
in
movsl
sbb
push
and
test
or
and
arpl
push
mov
dec
aad
mov
fisubrs
fwait
push
pop
xchg
rcll
popf
ret
cmpsl
xchg
or
loope
es
mov
push
mov
mov
pop
push
push
cmc
stos
nop
dec
cmc
scas
into
je
mov
xlat
lcall
pop
jge
pop
out
pushl
add
outsb
mov
dec
adc
mov
jmp
mov
cwtl
sub
fistl
sbbl
ljmp
int
push
and
xchg
push
int
mov
cli
ja
out
in
xor
sbb
stc
outsb
pop
test
sti
pop
xor
sti
movb
sar
cmp
lea
add
mov
lock
int3
mov
mov
ret
sub
out
test
push
lcall
cld
xor
lock
pop
add
mov
je
out
push
enter
insb
mov
cs
int
test
dec
fsts
lock
dec
jl
into
pop
int3
rcrb
idivb
sub
sbb
jecxz
fidivrs
pusha
enter
in
scas
rorb
inc
mov
xchg
jl
aam
into
adcl
xchg
mov
inc
pop
fxch
xor
in
dec
addb
add
xchg
xor
adc
out
jmp
and
mov
mov
mov
sarl
jnp
lea
scas
mov
idivl
pop
hlt
mov
adc
mov
leave
fsubrl
leave
out
je
adc
in
std
sub
jne
pop
sbb
dec
and
mov
cmpsb
jge
cmpsl
sbb
test
mov
push
jne
add
movsl
mov
das
mov
dec
cld
gs
pop
adc
jp
mov
push
inc
and
cmp
sbb
lock
aad
pop
int3
jnp
push
push
mov
mov
aaa
ret
fistl
mov
ficoml
sbb
cmp
sti
arpl
and
xor
cli
ret
xchg
outsb
ret
ss
sbbl
pop
jb
sahf
arpl
pop
adc
pop
mov
movsb
stc
dec
jl
arpl
nop
stos
fildl
cmp
or
push
and
dec
pusha
mov
and
rol
adcb
sbb
adc
sbb
jnp
idivb
adc
xchg
rcl
fbld
jno
sub
filds
mov
out
rorl
std
mov
cwtl
mov
rolb
xor
es
or
push
dec
arpl
imul
in
push
xor
shl
std
dec
adc
push
in
jmp
sbb
jmp
push
pop
jmp
add
cmp
jmpw
and
xchg
and
jno
cltd
mov
sub
lods
sti
sti
cmp
mov
add
mov
int3
push
inc
xchg
scas
cli
lea
cmpsb
or
cmc
scas
scas
add
jne
add
sub
inc
cmpsb
cmp
dec
jno
sbb
fsubr
and
xor
inc
push
jno
sarb
xor
inc
repz
xchg
rcr
loop
mov
adc
arpl
nop
fwait
fs
mov
add
lret
addr16
out
iret
pop
hlt
lods
xor
mov
leave
add
lea
add
lahf
imulb
cmpsb
mov
mov
inc
or
sbb
and
shrb
in
sub
in
mov
cld
pop
or
sbb
add
dec
and
xor
dec
leave
je
mov
push
and
mov
stc
mov
adc
mov
mov
nop
sbb
pop
mov
mov
scas
bound
int3
lahf
inc
fstpt
push
pusha
jae
fistl
lea
outsb
mov
pop
movsl
enter
dec
shlb
sbb
xchg
fsubl
xchg
pop
push
test
mov
dec
xchg
inc
push
mov
mov
les
ret
out
mov
cs
loop
pop
testl
into
adc
fs
push
sbb
les
pop
pop
mov
mov
popf
ds
sbb
pop
std
lret
leave
mov
cli
test
into
dec
and
jne
xchg
cmp
stc
mov
lods
arpl
mov
add
cmp
lahf
sub
push
aad
or
mov
in
cmp
jno
aaa
js
enter
cmpsl
inc
adc
fiaddl
imul
xor
sub
jg
push
xchg
cmp
cld
xchg
adc
dec
orl
insl
or
dec
inc
pop
cmp
sbb
aas
lret
sub
push
sahf
adc
mov
insl
movntps
movsb
mov
mov
mov
jmp
out
or
les
push
in
mov
mov
cld
mov
xor
mov
into
xchg
push
sbb
inc
xchg
inc
jp
inc
int3
sub
pusha
ret
or
loope
idiv
mov
ficoms
flds
test
push
fwait
clc
xor
dec
pop
mov
and
lods
pop
ret
sub
or
fs
pop
cmp
and
fcoms
jo
jle
das
add
jb
push
push
adc
int3
test
imul
jb
popf
call
leave
fsubl
aad
mov
stc
insb
pop
mov
cld
sbb
dec
xchg
push
push
and
bound
imul
ljmp
movsl
push
lea
jmp
cld
push
push
loopne
lret
xchg
call
ret
inc
filds
mov
cmpsb
sbbl
jnp
sahf
xchg
adc
cmp
inc
add
out
iret
mov
loop
xor
gs
mov
movl
cmp
mov
jb
add
imul
clc
daa
subb
repnz
sub
xor
fmull
mov
fs
inc
push
mov
das
cmp
xchg
das
sub
or
mov
push
pop
or
cli
lods
repz
popa
or
lds
add
fdivs
into
insl
pop
push
xchg
stos
jmp
xor
hlt
in
inc
xchg
push
rclb
es
mov
adc
pop
cld
push
testl
fstpt
add
leave
cmp
xor
jno
rcr
cmp
and
test
ret
push
mov
insb
xchg
mov
enter
enter
dec
popaw
jl
mov
hlt
add
les
mov
test
out
mov
stc
movsb
dec
subb
ja
shrb
adc
cmp
adc
rcrb
xor
stc
or
cltd
fs
cmp
insl
test
sbb
loope
fs
cli
mov
cltd
mov
loop
int3
popl
cltd
pop
out
negl
adcl
pop
ror
dec
dec
outsl
ja
gs
cmpsl
repz
xchg
bound
testl
jo
pop
inc
divb
int
mov
mov
push
fisttps
dec
lock
xchg
aaa
movsl
xchg
push
das
pop
or
int
pop
and
pop
mov
outsl
dec
mov
cld
jno
and
or
push
push
ja
das
adc
push
pop
lods
in
movsl
and
fists
jns
push
jne
stos
mov
repnz
mov
jns
popa
cmpsl
jno
idivl
stc
fidivl
inc
scas
jbe
pop
fsubr
decl
out
inc
ret
cmc
xchg
fdivrp
mov
mov
imul
cmpsl
cmc
inc
xorb
or
jge
xor
and
outsl
mov
jge
lods
jge
inc
pop
xchg
imul
and
pop
fidivl
int
pop
mov
ljmp
xor
bound
inc
mov
xchg
adc
adc
xor
mov
pop
cmp
adc
push
mov
add
xchg
mov
mov
push
mov
jp
outsb
cld
shlb
scas
stos
xchg
pusha
cltd
xchg
dec
jae
ficomps
jmp
xor
pop
jge
sbb
mov
hlt
data16
pop
aad
stos
mov
mov
stos
jg
jge
xor
jno
cmpsb
inc
xchg
and
xor
inc
loopne
pop
dec
loop
lret
popf
mov
aaa
dec
leave
scas
mov
cmpsl
xchg
and
std
sbb
sub
jnp
cmpsl
sub
xchg
jno
jno
cs
push
cmp
cmp
mov
movsl
cmp
jle
je
dec
and
push
sti
out
add
inc
xor
cli
inc
sbb
test
int
notb
jle
mov
add
xchg
add
and
jmp
xchg
jp
cli
cld
andb
mov
adc
xchg
and
fcmovnbe
pop
mov
adc
aas
fistpl
add
xchg
lods
xchg
or
pop
lea
fists
dec
mov
push
mov
cltd
ret
mov
test
icebp
push
std
daa
push
lock
push
cld
arpl
insb
xchg
inc
andb
rcrb
std
cltd
or
stc
cmp
inc
lahf
jecxz
loopne
out
js
mov
xchg
xor
mov
mov
xor
adc
data16
xor
arpl
lcall
test
or
sbb
jmp
popf
out
jmp
cld
test
lret
stos
cmp
jbe
scas
je
and
addr16
cmpsb
jno
xchg
imul
icebp
mov
mov
push
mov
in
dec
sarl
pusha
std
push
cmp
cld
rorl
sarl
inc
test
ficoms
mov
in
les
dec
xchg
sti
jmp
lcall
cmp
cltd
mov
cmp
xor
dec
lock
jo
cli
jmp
mov
clc
jmp
insb
mov
movsb
and
xchg
add
rolb
cmpsl
cmpsb
fwait
or
jge
xchg
pusha
lds
lret
icebp
xchg
jle
dec
imul
dec
pop
sub
paddusw
ja
adc
push
xor
orl
adc
test
ror
adc
mov
rorb
std
movsb
fisubrl
shrl
call
or
pop
fistpl
daa
push
jno
dec
xchg
pop
outsb
daa
shlb
cmpsl
addr16
pop
out
mov
repnz
lods
out
imul
ljmp
ja
mov
mull
pop
and
fadds
outsl
and
xor
or
stos
lods
flds
fistpl
inc
lahf
pushf
sbb
push
scas
adc
pop
push
push
add
mov
sbb
loop
mov
mov
aam
inc
in
mov
gs
cltd
popa
gs
dec
fidivl
mov
xlat
stos
nop
push
pusha
shll
pop
sub
jbe
outsl
push
icebp
imul
pop
cmp
sub
aas
enter
popf
shrb
xor
enter
popa
cmp
pop
pop
mov
sub
cli
inc
pop
pop
ret
or
jecxz
push
jmp
ds
jg
clc
dec
jno
sub
pushf
dec
jle
mov
sub
fcomi
lock
lods
xchg
int
aaa
push
inc
jne
fdivrl
fsubrp
jbe
jmp
add
xchg
ljmp
divb
adc
dec
shl
sarb
in
ss
jg
cld
jge
push
das
xchg
enter
add
mov
adc
cmp
dec
jns
adc
cmc
xchg
push
xor
mov
cli
int3
mov
adc
xchg
adc
push
int3
cmp
mov
mov
cmpsl
popf
fldl
and
pop
out
sbb
sarb
pusha
repz
mov
inc
scas
aaa
fs
leave
pop
movsb
ds
sub
xchg
mov
xchg
lock
fadd
fadds
dec
xchg
outsl
ficoms
pop
jbe
cli
in
jnp
mov
push
test
outsl
xchg
jbe
dec
mov
mov
incb
xchg
dec
lea
cmp
add
inc
xchg
pop
push
test
imul
jle
xor
pop
sbb
push
mov
lods
mov
jp
push
cld
jo
push
adc
mov
and
outsl
push
setg
xchg
jle
cmp
loopne
xorb
es
ljmp
aaa
adc
cmc
cmp
bound
scas
adc
addr16
add
out
jecxz
dec
mov
ja
sub
mov
mov
and
sti
adc
rorl
xchg
lcall
subb
popf
mov
insl
dec
push
mov
loop
out
lret
ja
xchg
sbb
pop
out
data16
xor
xlat
ds
in
jp
jnp
push
inc
into
mov
adc
or
pop
push
scas
testl
jle
pop
xor
inc
in
dec
pop
cltd
int3
out
xchg
repz
and
jnp
shrl
push
mov
jmp
mov
sbb
or
ds
out
dec
mov
dec
clc
gs
adc
pop
mov
clc
subl
or
pushf
inc
push
mov
xchg
icebp
xor
sub
jnp
xchg
add
scas
int
push
rcrl
xorl
gs
ljmp
dec
sbb
fdiv
mov
jb
pop
es
xchg
pop
je
cmc
cmp
mov
sbb
dec
mov
je
cmp
mov
xor
cs
and
rolb
push
and
clc
ret
dec
mov
inc
out
fdivrs
pop
std
cmp
xchg
adc
cmpsb
pop
and
dec
rorb
jle
pushf
repnz
push
mov
or
or
lahf
mov
aas
or
mov
pop
mov
ldmxcsr
push
mov
push
adc
shlb
and
js
inc
jmp
xchg
inc
jge
mov
dec
sbb
repnz
jle
mov
push
xor
mov
fcoms
mov
push
call
add
sub
int
jae,pt
shlb
push
fidivrs
push
add
sbb
jb
mov
setbe
mov
cmpsl
loope
subb
mov
sbbb
dec
outsl
iret
mov
sbbl
icebp
lret
mov
xor
mov
out
push
leave
cltd
fbstp
or
jge
cwtl
mov
testl
jecxz
add
lahf
dec
cmpsb
inc
into
dec
fistl
push
xchg
mov
sbb
lret
lahf
inc
fimull
pop
test
xchg
movsb
mov
shrl
movsl
mov
add
stos
xchg
cmp
out
jb
shll
adc
popf
les
imul
dec
das
lcall
adc
imul
and
cmpsb
std
repz
and
xor
mov
sbb
xor
mov
mov
and
or
pop
testb
pushf
sub
scas
fs
xorl
xchg
sbb
lahf
mov
pop
arpl
scas
push
mov
sub
das
mov
xchg
cmpsl
sbb
jmp
xchg
movsb
push
add
testb
xchg
inc
jno
stos
repnz
mov
mov
imul
or
cmp
mov
mov
sahf
jb
mov
std
sub
bound
xor
cmp
lods
sbb
dec
mov
jbe
or
loop
loop
push
in
jmp
sbb
mov
or
xchg
mov
pop
dec
mov
mov
adc
jo
repz
sbb
aam
fmuls
leave
mov
out
jmp
das
adc
mov
cld
mov
jg
les
or
and
mov
jbe
jo
repnz
out
fstl
jns
inc
xor
aad
subb
stos
xor
out
nop
mov
push
jb
and
rcrb
sbb
push
mov
jecxz
sub
dec
and
jge
inc
dec
mov
rcrb
sti
jae
adc
pop
lcall
fwait
jecxz
shrb
scas
sahf
xor
mov
or
add
test
inc
add
daa
xlat
sub
fidivl
jo
lret
data16
loop
mov
lock
jecxz
pop
sahf
xorb
and
rcll
pushl
aad
inc
push
lahf
ret
ds
inc
sub
mov
mov
mov
push
xchg
cli
dec
jmp
add
cmc
cmpsl
mov
xor
sbb
cmp
rorb
or
jo
mov
jns
imul
adc
icebp
and
mov
cmp
or
cmp
test
outsl
xchg
and
push
or
cmp
dec
mov
outsb
jmp
ljmp
test
dec
lock
adc
mov
cmpl
push
pop
out
or
xchg
push
or
jae
sbb
push
hlt
in
subb
pop
adc
xor
fildl
jb
or
xor
repnz
out
sub
push
shl
add
fs
lods
daa
popa
out
and
jle
jne
fldenv
fwait
cwtl
sbb
jecxz
lahf
pop
and
nop
push
lret
xor
sbb
jge
repnz
fs
push
popa
or
dec
stos
adc
fnstenv
or
pop
test
or
call
push
xchg
pop
or
js
maxps
daa
subb
lds
inc
sbb
xchg
push
and
pusha
icebp
sub
cli
ret
lahf
insb
jecxz
inc
jae
jnp
sti
loope
mov
pushf
movsb
xor
inc
mov
xchg
push
mov
dec
add
sub
lock
xor
mov
xchg
mov
rorl
stc
aas
add
jmp
jae
xlat
nop
jns
stos
pusha
aaa
adc
fldt
jle
lods
sub
sbb
or
aad
popf
lcall
sti
xor
inc
shrl
test
or
int3
sbb
or
inc
sub
outsb
pop
es
add
xor
popa
push
jp
icebp
jns
xchg
stc
mov
dec
or
and
cmpsb
adc
mov
pop
push
add
decb
pop
leave
into
pushf
loope
js
xchg
and
in
cmpsl
in
test
add
lcall
mov
mov
test
icebp
sub
repnz
leave
lret
dec
push
pop
andl
and
daa
lahf
pop
push
mov
repz
sub
test
dec
inc
nop
mov
rcrb
push
xor
out
pushf
mov
insb
les
fucomp
mov
push
movsl
dec
clc
test
and
test
or
int
sub
in
sub
call
adc
mov
fldl
les
pop
sar
pop
out
sarl
mov
sbb
out
out
jns
xor
add
repz
mov
int3
outsb
mov
das
mov
shlb
or
in
push
das
ja
hlt
data16
inc
dec
cmpsl
mov
push
iret
push
in
out
ljmp
sbb
pop
hlt
add
add
push
aam
add
jg
inc
out
out
dec
adc
sub
rclb
mov
das
push
ljmp
dec
fidivrs
or
xchg
adc
and
jp
aad
jmp
shlb
jp
pushf
sbb
repz
adc
loopne
sub
dec
or
out
mov
jns
and
into
addl
push
popa
addr16
push
scas
push
test
rolb
push
dec
inc
int
sbb
mov
cld
fdivl
pushf
cmp
xchg
loop
pop
pop
jo
sbb
fimuls
xor
out
jg
cmpsl
sbb
leave
outsl
fs
dec
mov
xchg
notb
cmc
aas
fdivl
xlat
fdivrl
mov
cmc
js
repz
sub
popa
pop
mov
in
lea
stc
pop
clc
pop
sbb
aas
jge
mov
leave
lea
cld
cmp
filds
out
or
or
xorb
aam
and
outsl
js
aad
in
mov
ret
lds
jno
mov
sub
jb
sbb
or
add
jnp
sub
lahf
stos
testb
rcrl
arpl
or
xor
les
mov
gs
enter
test
into
cmp
mov
xchg
push
imul
pop
in
sbb
mov
fsubrs
fbstp
pop
cmp
std
inc
cld
in
sub
outsb
mov
mov
sub
imul
faddl
adc
sahf
lret
sub
ret
pop
add
call
add
mov
adc
in
push
mov
jmp
xchg
pop
test
sub
in
js
rorl
jecxz
mov
jmp
sub
call
push
arpl
ss
fmul
jg
call
jmp
mov
or
mov
cld
shlb
add
dec
dec
jmp
test
pop
repz
filds
cmp
or
xchg
jns
cli
xor
xchg
add
pop
nop
jne
fistl
cli
cmp
orps
idivb
sbb
cmp
nop
sub
push
rep
adc
fs
dec
mov
scas
bnd
sbb
mov
jns
fxam
xchg
pop
sub
fidivrl
call
rcll
arpl
movsb
daa
add
filds
dec
outsb
add
out
ds
jp
pop
fnstenv
pop
insl
xlat
dec
push
call
popf
sbb
push
xchg
dec
inc
mov
push
ds
mov
in
jecxz
and
jae
cmpsb
cmp
lock
orl
std
fistpll
lock
int
in
add
out
insb
push
stos
pop
inc
sub
pop
test
cld
gs
int3
xor
cmp
inc
dec
fisttps
dec
std
ret
fcomi
ss
mov
push
lods
nop
std
or
shrl
lea
leave
ljmp
ljmp
xchg
sbb
xor
adc
adc
xchg
dec
mov
jns
dec
or
xchg
sub
mov
adc
jecxz
push
mov
aas
mov
popa
cmp
mov
sbbl
xor
adc
jnp
lcall
jl
sbb
pop
popa
and
dec
int
mov
or
cli
loopne
sub
lods
icebp
jae
mov
push
int3
dec
xchg
push
jbe
repnz
mov
imul
les
fildl
rcrb
pop
or
push
push
lds
xor
dec
arpl
cltd
js,pt
pop
lahf
filds
mov
xor
or
jg
es
movsl
mov
mov
movsl
jge
out
imul
adc
sbb
sub
cmp
jmp
sub
cmp
xchg
mov
cmp
lds
dec
mov
rol
sbbl
add
nop
and
cmp
dec
rclb
insb
cli
inc
or
cmpsb
xchg
lcall
aas
hlt
and
push
jmp
sub
adc
out
jecxz
clc
inc
cs
scas
arpl
dec
into
into
movsb
mov
mov
push
es
push
call
mov
and
push
aam
jb
fxch
push
fs
push
dec
and
lods
inc
push
sub
mov
jp
stc
push
or
sbb
mov
push
out
je
pop
inc
push
repnz
mov
cmpb
in
movsl
jl
xchg
adc
lods
shll
imul
sbb
xor
jg
push
lods
inc
cmp
jge
xchg
jo
dec
dec
inc
lods
sarl
into
aaa
out
les
adc
push
or
ror
insl
xor
mov
or
mov
test
in
stos
and
fsubrl
cmp
dec
push
addr16
sub
pop
xchg
hlt
xorl
inc
aam
nop
ret
pop
test
into
pushf
jae
dec
cmp
cmpsb
ficomps
sbb
push
lret
pop
cmp
fs
xor
int
adc
loop
mov
cmc
sub
inc
jns
scas
add
xchg
lods
popa
xchg
push
fbstp
push
add
cmp
shlb
mov
outsl
aad
mov
mov
nop
add
test
cld
int3
sarl
repnz
pop
mov
adc
xor
rcrl
add
ret
adc
scas
mov
outsb
mov
clc
cmp
push
les
leave
mov
push
popf
jl
test
int
cmp
adc
lahf
test
adc
test
shll
xchg
stc
inc
xor
loopne
rolb
jp
out
sbb
push
pop
arpl
mov
mov
adcb
dec
push
push
insl
or
xchg
pop
out
fisubrl
fistpll
jmp
cmc
fistps
cmp
aas
out
dec
add
fwait
pusha
jnp
int
xor
xchg
sarb
in
or
aad
fnstsw
push
mov
mov
loope
repz
push
pop
xor
mov
xchg
pop
push
addb
or
jne
mov
adc
cld
fisttpl
add
cmp
popa
fdivr
repnz
aad
in
es
mov
les
insl
sub
cmpl
test
sbb
ret
lret
test
bound
jmp
pop
sbb
inc
jecxz
pop
hlt
push
jno
mov
mov
sbb
icebp
xor
enter
jmp
add
sti
movsl
jbe
push
mov
mov
push
and
jno
cmp
imull
imul
mov
insb
pop
cmp
and
cmp
xchg
jg
pushf
ret
ds
sbbl
fdivrl
or
sub
ret
push
aam
test
lds
push
mov
insl
cmpsl
and
sub
clc
stc
clc
mov
aad
fstp
cmp
add
or
jmp
dec
cli
fcomps
xlat
jl
shlb
sbb
sbb
movsb
jp
loopne
mov
sbb
ficomps
inc
outsb
xchg
mov
sti
rclb
sbb
cwtl
pop
sbb
dec
rep
and
xchg
scas
xchg
mov
push
and
jne
xchg
mov
out
test
cmp
fdiv
pop
je
in
movsb
mov
test
or
xlat
sahf
subl
push
and
popa
or
aas
jge
dec
jg
mov
icebp
in
xchg
mov
xor
jp
dec
pop
sub
aam
push
inc
call
int
popf
cmp
adc
pop
ljmp
cwtl
dec
jp
and
insl
iret
out
push
cmp
fbld
je
sub
notl
or
add
test
jmp
mov
mov
in
mov
jge
adc
sbb
dec
and
mov
shl
jns
add
xor
fadd
cld
xchg
mov
xchg
sahf
jne
cwtl
arpl
fwait
xor
outsl
dec
gs
loopne
fsubs
cmp
bound
scas
popa
xchg
shlb
add
sti
or
pop
std
jne
mov
pop
push
and
js
xchg
sbb
adc
fisubl
inc
and
mov
in
sbb
ja
int
pop
push
in
and
xchg
bnd
adc
aad
jg
hlt
mov
cmp
je
inc
subl
cs
jnp
gs
mov
aam
xor
jmp
jecxz
cmc
shrl
push
push
mov
arpl
and
or
add
aas
aad
out
lock
mov
fsubrs
mov
repz
into
pop
jnp
push
aam
mov
hlt
xchg
test
inc
or
mov
stc
pop
adc
pushf
sub
in
js
addr16
lcall
jno
std
sbb
pop
ljmp
js
popf
xchg
mov
ret
inc
add
mov
test
push
rcl
orl
sbb
lea
mov
mov
clc
push
dec
dec
leave
push
lcall
pop
sub
fsubrl
pusha
adc
dec
xchg
int3
add
xchg
and
loopne
sarb
pusha
clc
clc
pop
adc
xor
or
pop
gs
lret
adc
add
sbb
mov
add
dec
lock
pop
arpl
adc
and
inc
mov
cli
lds
add
loop
inc
cli
push
sbb
cmp
jmp
pushl
adc
sar
aaa
out
add
test
mov
mov
add
cli
xor
add
xchg
pop
pop
pop
add
push
xchg
inc
dec
test
rorb
sbb
mov
xchg
mov
or
cmpsl
sub
xor
faddl
xchg
and
cmpsl
dec
js
ljmp
loopne
and
lods
nop
mov
xor
and
inc
or
xchg
push
jl
pop
xor
insb
loop
dec
mov
cmp
dec
pop
sbb
mov
sub
jo
cltd
pop
jo
jae
fildl
mov
int3
pushf
cli
outsb
in
das
xchg
sti
stc
jecxz
inc
push
add
sbb
add
inc
call
inc
fs
sarb
push
xchg
pop
or
out
shll
push
cmp
inc
add
xchg
and
xchg
add
outsl
sbb
or
addr16
xchg
cltd
push
adc
cltd
imul
add
js
imul
ss
xor
adc
jp
cmp
mov
adc
lret
mov
fstps
fdivrs
cmpl
fnsave
cli
stc
insl
adc
or
pop
inc
out
adc
lock
mov
imul
ds
loopne
sbb
pop
jbe
or
psubsw
inc
ret
out
jp
and
sbb
or
out
xchg
adc
fs
mov
fdivl
or
jae
mov
sarb
or
jo
xor
xchg
mov
adc
mov
fld
pop
in
inc
fcomps
add
push
loopne
inc
movsl
dec
ss
xchg
pop
adc
mov
jecxz
sbb
xchg
or
mov
jecxz
mov
jp
sub
orb
sbb
or
mov
pop
mov
xor
sub
add
sbb
jb
add
mov
mov
dec
mov
or
fldt
xchg
hlt
add
pop
leave
fs
mov
out
mov
push
mov
fisttps
cltd
daa
push
mov
xchg
lret
addr16
icebp
adc
leave
mov
xor
push
jbe
pop
out
add
scas
inc
int3
and
cmp
loope
xlat
stos
push
scas
xchg
sahf
es
mov
dec
pop
icebp
jne
pop
jl
icebp
popf
jbe
jge
pusha
js
lret
xchg
cli
int3
push
leave
cmpl
aad
jmp
fidivrl
mov
repz
lods
or
sub
outsl
loop
dec
enter
jecxz,pn
pop
fldenv
pop
cmp
rorb
div
ss
dec
outsl
mov
mov
xchg
imul
and
push
insl
clc
aam
sbb
cltd
call
out
sub
dec
adc
push
jo
fs
and
push
mov
cmc
mov
and
lods
push
jecxz
xor
lret
scas
bound
xlat
popf
mov
das
mov
rcll
push
arpl
iret
or
jge
mov
push
insl
loopne
fidivs
scas
mov
js
mov
xchg
outsb
cmp
or
add
stos
mov
jae,pn
sub
xchg
scas
sub
mov
ss
mov
mov
or
xor
popa
xor
movsb
iret
xlat
and
sbb
lahf
mov
mov
push
xchg
cmp
adc
rclb
imul
cmpsl
push
push
xchg
jnp
mov
aam
pop
fiaddl
fisttpll
lods
hlt
imul
into
mov
call
addr16
adc
sub
arpl
mov
out
test
dec
leave
or
or
mov
addb
pop
push
loopne
std
xchg
lds
adc
lea
scas
clc
cmpsl
scas
cmp
shlb
xor
cmp
xor
push
lahf
push
pop
adc
stos
mov
int
mov
addr16
rorl
jge
or
fisubs
jg
adc
call
mov
and
outsb
loope
sub
and
stos
aad
je
mov
xchg
in
mov
repnz
fisttps
xlat
sbb
loope
mov
std
decb
cmpsl
xor
sbb
subb
or
or
in
xor
jmp
cmp
mov
xchg
addb
dec
xor
pop
sub
js
add
mov
in
rcrb
sub
jo
test
xor
dec
call
add
add
xchg
ret
xchg
mov
jge
aad
lods
inc
fldt
push
mov
sbb
lahf
fs
pop
int
push
push
mov
inc
fdivr
mov
insl
das
push
cmc
in
js
arpl
sub
negb
lods
jne
std
stc
adc
orl
inc
orb
xchg
iret
push
repnz
dec
xor
andb
mov
push
outsl
movsb
ror
into
inc
or
pop
xchg
out
mov
dec
cwtl
or
popf
popf
and
lahf
xor
xor
testb
outsl
sub
pop
fwait
jg
nop
add
fsubrl
pop
mov
das
scas
xor
shrl
roll
out
jno
loop
jae
imul
xchg
sbb
or
and
movsb
dec
sbb
push
jg
fnsave
pop
mov
push
sarl
test
lea
or
mov
cmp
or
adc
and
push
das
jb
daa
xor
adc
sti
mov
xlat
sbb
pop
xorl
lds
add
xorl
xor
cmp
pmaddwd
mov
pusha
rcl
add
shll
inc
push
sbb
add
push
hlt
rorb
sahf
lret
xor
fisubl
in
nop
rolb
mov
fisubrs
aaa
mov
and
lods
jle
adc
mov
xchg
xorb
aas
aas
push
lods
in
mov
inc
pop
dec
out
xchg
stc
dec
dec
pop
repz
cli
int3
aam
cmpsl
and
stc
sub
or
and
int3
iret
adc
jl
dec
or
pop
mov
movsb
adcb
fidivl
push
push
mov
cmp
or
frstor
aad
and
hlt
mulb
push
xor
inc
xchg
mov
or
mov
aad
sarb
push
fmull
imul
jp
dec
add
bound
in
mov
add
xor
int
in
jne
xchg
insb
loope
jg
sbb
xor
into
or
sub
jle
mov
hlt
inc
test
push
aam
mov
imul
cld
mov
and
ret
mov
dec
stos
ss
test
pop
inc
jl
popa
dec
xchg
mov
cmc
mov
pushf
push
mulps
daa
inc
mov
xor
mov
shll
ret
aad
fidivrl
inc
mov
xor
pop
in
fsubrp
or
ja
icebp
adc
inc
cli
cmp
push
push
movsb
pop
mov
xchg
test
mov
sbb
or
sub
xor
adcb
inc
cli
test
mov
xchg
popf
cmp
pop
jecxz
lret
mov
xchg
rcl
call
dec
jle
sbb
ret
push
rcrb
jnp
jne
lock
sub
lret
jp
cmp
adc
movsl
push
xchg
imul
xor
nop
ret
loope
out
lahf
inc
pop
cmp
jp
jbe,pt
fdivr
stc
arpl
cmp
jno
mov
pop
leave
jo
xor
adc
mov
dec
pop
jecxz
das
adc
test
pop
movsb
sbbb
sbb
sub
rclb
mov
out
xor
cmp
add
mov
lret
and
shll
ja
and
push
jns
push
cmp
mov
ret
mov
pop
shld
pop
inc
mov
outsl
sub
pop
sbb
or
adc
xorb
dec
and
xchg
in
sub
icebp
pop
fidivs
lcall
mov
inc
and
cmp
pop
addr16
adcl
subb
loope
xor
mov
enter
xor
data16
xchg
pop
mov
stos
mov
mov
js
aas
or
pop
testb
cmp
dec
cmp
fdiv
sub
add
dec
mov
sbb
mov
jle
dec
ss
pop
sti
cltd
and
aas
jle
sahf
bnd
mov
mov
sbb
cmp
sbb
xchg
aas
push
cmp
fmull
fisubrs
rol
lds
je
sub
ret
cmpsb
out
stos
popa
push
ret
push
sbb
add
repnz
cld
into
pop
aam
cli
dec
rorb
sub
xchg
aas
shll
xchg
add
push
std
adcb
std
dec
scas
out
sub
dec
inc
cli
mov
adc
sarl
stos
hlt
fists
pop
mov
loope
mov
aad
cltd
stos
fldcw
cmc
xchg
pop
ja
lcall
subb
push
pop
mov
xor
cmp
mov
loopne
cmp
aaa
mov
leave
jo
xchg
pop
enter
xor
fs
hlt
adc
mov
popl
sbb
ljmp
sar
imul
ret
pop
jmp
int3
xor
testb
jno
cmc
inc
jns
add
cmp
pop
das
push
inc
ds
dec
in
sub
add
fs
je
rclb
mov
lret
int
mov
into
insb
nop
fsubrl
jne
mov
movb
insb
push
push
cmp
scas
xchg
xor
or
and
adc
pop
xchg
xor
dec
fisttps
mov
pop
dec
dec
cmpl
fildll
pop
test
or
repz
mov
lcall
cmpsb
fs
cs
xor
mov
xor
addl
ja
setnp
sbb
inc
adc
testb
movsl
xor
mov
mov
adc
cmp
scas
shlb
addr16
sbb
dec
adcb
imul
addb
adc
or
jl
ficoms
das
imul
sti
sbb
movsb
mov
outsb
out
pop
pop
inc
cmc
mov
ror
or
sub
xor
mov
enter
out
clc
es
mov
dec
mov
aam
loope
lods
xor
sti
mov
loope
hlt
loope
sbb
arpl
adc
stos
movsb
stos
jnp
gs
cmp
int
sbb
adc
shr
sbb
sbb
sbb
hlt
sub
out
lods
in
rcll
repz
sub
cmpsl
inc
push
test
pop
jle
xchg
and
sbb
fmull
imul
xor
loopne
aad
enter
add
add
cmp
mov
cli
xor
dec
enter
dec
hlt
adc
test
jno
in
jbe
negb
push
and
loope
frstor
dec
jne
jge
gs
dec
xlat
loope
dec
fstps
xchg
mov
add
sbb
fwait
or
cmp
lock
lahf
jne
jbe,pn
daa
pop
push
mov
daa
xchg
ficomps
in
adcl
call
add
out
gs
inc
packssdw
jo
jb
sbb
inc
jle
adc
mov
mov
test
xchg
bound
repnz
rcrb
sti
rorb
pop
pusha
rclb
xor
cli
sbbb
push
loopne
xor
stos
cmp
ret
fistl
push
xor
xlat
fst
imul
lret
arpl
jp
mov
sbb
jbe
or
mov
jmp
fs
loop
xchg
clc
adc
sub
fdivl
pop
stos
fistl
cmp
outsb
stc
fcom
call
and
mov
dec
enter
orl
outsb
push
xchg
adc
cld
cmp
mov
xlat
and
rolb
imul
mov
pop
in
xor
dec
push
fcomi
mov
cmc
cli
jl
das
std
push
and
hlt
mov
jo
lahf
jnp
pop
mov
std
mov
xchg
fstps
insl
es
jmp
in
xor
xchg
dec
jne
or
nop
outsb
movsb
pop
sbb
sbb
in
xchg
push
addr16
fidivs
sub
test
jbe
xchg
adc
aad
aam
aas
inc
dec
mov
adc
cmp
out
push
push
popf
jl
sbbl
fdiv
les
popl
adc
cmp
cs
dec
in
xchg
jg
iret
sahf
insl
dec
dec
inc
push
cmc
lock
jmp
mov
ja
loopne
lds
xor
mov
push
dec
push
xor
dec
add
sub
lahf
xchg
jb
mov
sub
adc
or
pop
leave
je
ljmp
xchg
mov
mov
and
mov
imul
negb
xchg
mov
ja
hlt
jmp
lahf
movsb
leave
adc
dec
jns
sub
scas
sub
in
lds
inc
sahf
or
pop
out
pop
pop
sbb
mov
out
sub
jns
xchg
jns
push
inc
mov
popf
insb
dec
in
inc
cmpsl
jmp
sbb
cwtl
mov
jbe
out
xor
mov
stc
or
arpl
fimull
sub
mov
aam
cmp
sub
out
lcall
sti
imul
push
rorb
mov
or
test
jnp
xchg
sbb
jmp
push
inc
jnp
call
cmp
push
cwtl
sbb
popa
sub
sbb
adc
add
and
adc
sub
xchg
sti
add
xchg
repz
or
add
pop
scas
pushf
cmp
sub
mov
jnp
mov
movsb
movsl
mov
push
and
cmp
into
lahf
int3
testb
leave
or
in
xchg
das
data16
push
ja
inc
es
loope
push
adc
mov
mov
sbb
gs
lcallw
sarb
scas
ret
pop
and
jno
cwtl
pop
or
imul
orl
loopne
cmp
inc
and
out
and
xor
dec
shlb
xor
and
mov
mov
scas
aam
stos
cmp
mov
sub
lds
insl
or
cmp
sub
incb
push
inc
adc
in
sbb
mov
imull
frstor
scas
std
pusha
push
icebp
lods
fistl
pop
push
loope
fildll
dec
sub
pop
je
cmp
addr16
clc
imul
mov
inc
xor
inc
mov
sti
int
or
gs
stos
daa
testb
mov
sbb
cmpsl
shl
test
add
and
add
mulb
xor
lds
scas
test
out
cltd
test
xchg
xchg
sbb
push
addr16
cmp
dec
stos
mov
sub
and
sub
lcall
xlat
sbb
fstps
popa
jb
xor
nop
mov
dec
push
out
and
jns
dec
addr16
adc
movb
cmpl
out
adc
mull
out
fistps
cmp
icebp
cmp
adc
dec
repnz
mov
xchg
push
das
out
int
dec
repnz
inc
cmp
adc
pop
adc
inc
xor
sbb
mov
xchg
or
adc
lods
and
es
out
mov
inc
push
aad
pop
adc
push
or
mov
ror
fwait
adc
movsl
cs
dec
stos
mov
inc
or
movsl
shr
cwtl
jmp
xchg
sub
pop
in
dec
add
pop
jp
jae
and
dec
mov
jno
cmp
out
inc
pop
push
jle
mov
fisubs
out
or
pop
daa
xor
sbb
lret
adc
out
shlb
push
loopne
dec
or
in
dec
cmpsb
fcomps
dec
sbb
pop
xor
pusha
sahf
ret
add
fs
fdivrs
shl
scas
popf
addr16
call
cmp
cmp
jb
shr
or
fisubl
push
xchg
lods
cltd
fisubrl
jle
imul
rorb
jno
jge
mov
gs
pop
push
fsubs
pop
push
sbb
scas
jl
ds
in
rclb
imul
jne
iret
or
cmpsl
mov
popa
add
inc
pop
inc
insl
xchg
mov
lds
cmpb
or
mov
loop
data16
fbld
pop
push
jns
pop
jno
loopne
mov
mov
lcall
sub
and
fs
aas
pop
jns
sub
xchg
add
jp
ret
cmp
jp
pop
aas
mov
mov
or
xchg
hlt
out
popf
stos
mov
mov
inc
sbb
xor
inc
daa
call
jne
stc
sahf
lret
mov
ds
jns
mov
insl
mov
inc
dec
add
aaa
popa
mov
mov
dec
mov
clc
pop
adc
mov
or
sub
nop
int3
mov
stc
fadds
and
jne
cmpsb
cmpsl
push
out
and
add
pop
mov
add
cmpb
adc
dec
mov
mov
scas
ret
jge
or
mov
xor
mov
xchg
dec
stc
or
or
sbb
dec
bnd
mov
jbe
fs
mov
call
hlt
mov
jne
and
dec
mov
js
mov
pop
pop
idivb
xchg
gs
cmp
movsb
fidivrl
sub
add
movsb
xor
fldz
lods
loopne
cmpsb
mov
pop
mov
push
loope
in
lock
mov
or
cs
add
pop
in
mov
cmp
or
mov
xor
and
loopne
push
mov
jle
test
mov
push
mov
xor
adc
or
fisubrs
jmp
pushf
fmulp
cmp
enter
pop
in
sbb
cmp
daa
sbb
sbb
aam
cmpsl
and
in
and
xchg
or
or
enter
cwtl
cmp
popf
sub
push
int3
sub
fs
mov
jmp
inc
lods
rclb
add
fcompl
push
jle
int3
mov
fs
hlt
xchg
int
jp
sahf
xor
inc
out
push
pop
xchg
jne
ret
mov
jns
adc
add
sbb
sti
cmp
push
shr
jge
out
scas
dec
std
pop
cmpxchg
xchg
sbb
xlat
cmp
or
ss
jo
mov
sub
ret
push
sahf
lods
push
xchg
in
adc
mov
stos
pop
shl
xchg
inc
std
test
fcmovne
xorl
cltd
nop
xchg
xchg
lock
lret
ja
loope
pusha
aad
mul
pop
lods
and
pop
call
ljmp
stc
mov
jae
cmp
jl
mov
insb
js
mov
negl
insb
rcrl
push
pop
jns
lea
inc
mov
fmuls
add
mov
sbbl
push
insb
mov
xlat
ret
lahf
loop
push
pop
adc
and
aad
mov
jmp
and
adc
fcoms
inc
ja
outsl
adc
pop
dec
fists
ret
mov
dec
movsb
shrl
cld
daa
xor
xlat
mov
int
and
xor
insl
aas
xor
data16
int3
or
scas
stos
daa
out
pusha
adc
xor
or
mov
inc
ret
inc
decb
rcll
and
pop
mov
mov
cli
push
icebp
mov
cmpsb
fldl
cmp
mov
lahf
dec
stos
scas
cld
sub
cmp
testb
inc
stos
aaa
clc
jmp
iret
push
fisttpl
out
mov
repnz
frstor
jmp
jne
fstps
sub
dec
jno
insb
mov
inc
sbb
pop
fwait
nop
add
inc
inc
lods
or
scas
adc
sarl
add
aas
clc
arpl
add
jae
adc
sub
fxtract
out
inc
xchg
add
mov
and
aad
cld
cli
pop
xor
add
xor
mov
test
xor
mov
fcoml
inc
mov
jge
sub
movsl
or
jp
xlat
jae
fsubrl
mov
fisubl
pop
insl
lcall
sbb
enter
jmp
mov
jp
in
mov
mov
pop
jo
xor
lock
loop
adcb
mov
pop
int
push
mov
shrl
lock
inc
add
inc
sbb
leave
or
xor
xor
stos
gs
cld
fdivrs
push
shlb
iret
jno
lret
and
bound
fcomps
mov
push
rorb
sbb
cmpsl
enter
add
push
xchg
pop
into
jne
xchg
es
outsl
sbb
jl
cmc
mov
es
in
or
xor
in
jo
adc
xor
cmpsb
stos
shll
mov
mov
add
stc
mov
push
popa
enter
xchg
pop
ljmp
inc
and
fwait
subb
mov
xlat
xchg
and
cmp
lahf
pushf
ljmp
mov
mov
jmp
adc
sarb
push
fmull
out
mov
sbb
jae
or
pushf
mov
cmpsl
sub
std
lock
sbb
push
mov
inc
pop
mov
je
aas
or
jo
shlb
xchg
xchg
push
jb
push
test
xor
mov
sub
aas
and
adc
push
push
add
fiadds
aaa
sbb
loopne
das
lods
fs
repz
lahf
sti
mov
xor
xor
push
jl
and
imul
mov
sub
fisttps
imul
sbbb
pop
ljmp
jp
std
test
xchg
mov
and
pop
or
jg
push
xchg
movsb
fwait
sub
and
mov
mov
push
jae
movl
xor
roll
mov
popa
ret
imul
xchg
shll
push
pushf
mov
or
mov
ja
xor
scas
mov
adc
int
stos
xchg
jbe
xchg
sub
dec
lds
or
gs
sub
ret
jg
jns
mov
cltd
pop
dec
ret
into
or
sbb
push
add
test
in
imul
sahf
xor
mov
push
aad
outsb
test
addr16
pop
push
test
ja
rcr
cmp
pop
dec
or
push
mov
cmp
mov
cltd
jecxz
adc
lock
adc
mov
push
mov
fadds
fildll
sub
ret
cmp
cli
loop
add
push
sub
sbb
inc
cmp
cmp
popw
sahf
imulb
roll
mov
jge
nop
lds
sti
fwait
inc
dec
mov
jl
mov
das
xor
test
cmpsl
stc
aad
and
pop
sub
xchg
lcall
loopne
test
fs
mov
repz
ljmp
push
rorl
push
add
sahf
das
ljmp
shrl
cmpsl
jecxz
mov
push
xlat
jle
push
lock
jle
xchg
xor
mov
sub
pusha
pop
ds
or
mov
cmpsl
push
xor
out
testl
pop
inc
in
movsb
scas
pop
xor
sub
mov
jge
or
mov
fsubs
fidivrs
arpl
pop
sahf
aas
cmp
mov
pop
aas
adc
test
movsl
mov
lds
icebp
dec
xor
out
or
lahf
ficomps
xchg
mov
lahf
jecxz
mov
icebp
push
or
leave
mov
xorl
loopne
push
iret
mov
stc
dec
push
pop
je
add
xchg
mov
and
dec
dec
jne
enter
les
jp
gs
mov
pop
pop
sub
mov
and
mov
push
fsubr
add
cmpsb
pop
bound
add
icebp
lea
repnz
cwtl
ret
cltd
inc
add
and
imulb
lcall
dec
enter
dec
out
mov
add
dec
jns
in
aas
dec
pop
shrb
daa
jecxz
cmpsb
add
lret
arpl
or
jbe
in
pop
xchg
pop
sti
mov
mov
arpl
fisubrs
cltd
fisttps
xchg
jno
ret
or
cmp
ret
outsl
cmp
and
and
lea
nop
lea
mov
mov
mov
xor
cltd
ficoml
add
insl
sub
sub
sbb
out
je
jbe
pop
inc
hlt
jne
sbb
in
addr16
imul
adc
xchg
cwtl
mov
leave
cmp
xor
js
adc
push
mov
sbb
lods
popf
push
cmp
ljmp
filds
or
pop
idivb
xor
xor
jne
push
push
test
xorb
cmpsl
or
idivb
pop
xchg
aas
mov
add
add
cs
pop
fdiv
xchg
dec
jmp
dec
cmp
lods
mov
scas
pop
and
gs
cmpsl
inc
add
jmp
push
xchg
out
jb
mov
xchg
mov
out
out
adc
mov
sti
mov
sub
dec
add
mov
mov
lcall
not
pushf
inc
xlat
or
dec
or
cmp
js,pt
mov
push
iret
movsl
rorb
cmp
or
push
add
fisubrl
jmp
xchg
push
push
inc
ret
pushf
lret
cmp
nop
and
inc
and
inc
out
mov
pop
push
pop
xchg
fdiv
dec
jno
dec
push
jnp
pushf
push
adc
jbe
ja
test
fdivl
xchg
jnp
xchg
imul
adc
inc
outsl
inc
aad
cltd
mov
loope
dec
add
pop
outsl
sub
movl
adc
movsl
mov
rclb
xorl
cld
mov
jne
xor
add
inc
movsl
enter
stos
pushf
scas
mov
mov
or
enter
fdivrs
xor
jnp
or
xchg
orb
out
add
adc
js
stos
mov
insb
xor
and
sbb
jg
mov
adc
mov
movsl
push
dec
mov
sahf
adc
jp
sub
stos
sbb
push
inc
sbbl
loop
divb
mov
int3
cmp
adc
or
add
jmp
mov
pcmpeqw
lock
dec
push
lret
dec
push
js
sahf
sbb
cwtl
das
xorl
mov
lds
sub
daa
push
xor
xchg
mov
lcall
inc
sahf
mov
movsb
mov
bound
adc
mov
sbb
enter
mov
xchg
add
pop
sub
cli
lods
jnp
ss
ja
enter
scas
cld
sbb
andl
adc
sub
fs
push
div
dec
je
and
stc
scas
dec
xlat
sub
sub
mov
sbb
shr
cmp
das
pop
xchg
or
inc
inc
mov
shr
mov
adc
jmp
cmp
pop
aad
negb
out
mov
loop
mov
daa
cmp
or
mov
pop
mov
andps
andb
xchg
fwait
sbbl
out
dec
inc
fwait
mov
repnz
inc
hlt
repz
ja
popa
ss
ss
adc
jae
sbb
sbb
in
sub
pop
movsb
xor
sub
out
jne
pop
or
dec
or
pushf
fstp
out
ja
jmp
mov
dec
movsl
xor
in
push
cmp
bound
bound
or
and
sbb
outsl
ja
pop
popa
pushf
test
out
fs
mov
pusha
push
dec
aaa
sbb
cld
pop
loop
dec
int3
mov
pushf
mov
dec
shlb
jge
fsts
dec
xchg
addr16
push
xor
cmp
sbb
or
jge
push
lret
aam
lcall
dec
xchg
subb
xchg
cs
dec
fcmovu
dec
mov
ss
mov
add
outsb
add
testl
mov
dec
add
pop
sahf
ds
aaa
stos
and
loopne
out
iret
or
sbb
repz
lcall
jnp
js
jl
mov
mov
stos
int3
es
sbb
mov
push
dec
cmpsl
loope
xchg
inc
mov
or
sbb
and
cwtl
mov
pop
mov
pop
inc
dec
loopne
mov
decl
mov
add
pop
dec
lahf
mov
xchg
jl
dec
pop
and
stc
fucomp
jecxz
jne
push
aas
mov
mov
mov
jns
dec
rsqrtps
cmp
aaa
dec
push
call
cltd
stos
mov
imul
sbb
dec
dec
int3
xchg
std
push
adc
mov
mov
out
out
pop
dec
lock
adc
fisubrs
jmp
test
xor
adc
icebp
mov
mov
enter
mov
adc
movsb
pop
ficomps
jb
mov
pop
sti
and
lods
dec
call
lods
inc
xchg
xchg
add
mov
push
mov
ficoml
insl
adc
cmc
adc
pushf
jle
xchg
xor
jnp
dec
stos
jae
inc
scas
arpl
sbb
inc
mov
int
loope
roll
push
call
nop
xor
in
jbe
push
outsl
sahf
scas
insb
aam
mov
inc
adc
pop
jns
mov
add
sbb
clc
pushf
xchg
sahf
jmp
mov
or
dec
and
cli
and
dec
in
mov
and
add
in
jge
fwait
ljmp
cmp
into
fwait
lcall
frstor
mov
in
jecxz
popf
or
jle
push
dec
mov
pop
stos
cmp
mov
mov
xor
aad
icebp
divl
aaa
and
sbb
orl
lahf
inc
push
or
push
xchg
sbb
push
int3
rorb
es
pop
movb
not
dec
jae
or
lea
stos
jecxz
stos
icebp
lea
pusha
mov
push
lret
mov
pop
cmp
jmp
xchg
test
pop
mov
push
ret
aaa
stc
push
popf
dec
lods
inc
imul
scas
jnp
push
mov
mov
clc
lods
ds
mov
clc
or
jno
mov
movsb
aas
daa
push
jbe
out
cmp
and
cmp
shlb
mov
ljmp
stos
sub
xchg
sub
ja
jb
stos
dec
cmp
inc
js
int3
sbb
xchg
dec
inc
pop
and
iret
jmp
fwait
mov
mov
add
cmc
in
jne
lock
cmpsb
fistpl
and
xchg
adcl
shll
les
insl
aam
out
mov
inc
and
lds
add
ds
inc
and
sbb
push
push
pop
lahf
gs
sbb
xor
and
push
stos
fsin
loopne
sub
lds
pop
lods
lods
push
mov
cli
pusha
sbb
pop
lret
repz
xchg
dec
cmp
mov
push
scas
clc
xlat
std
xor
lcall
pop
popl
mov
jmp
out
enter
mov
or
nop
cli
add
lcall
dec
jae
popf
fldl
jae
xchg
fs
inc
aam
scas
push
dec
fmul
cmc
mov
mov
mov
xchg
lods
ds
dec
outsb
sub
movsb
and
popf
shll
lock
and
add
or
jns
cli
pop
loop
xor
cmp
arpl
mov
loopne
rcrb
icebp
int
sbbl
pop
call
jae
adc
ficoms
cmp
dec
loopne
ret
dec
push
pop
hlt
push
jbe
test
sahf
mov
sbb
lahf
sbb
jbe
and
dec
inc
pop
pushf
inc
sbb
xor
inc
in
sub
xchg
aam
gs
push
lods
ret
add
xchg
pop
pop
jbe
inc
ljmp
sbb
in
insl
lods
sub
push
xor
in
push
clc
pop
and
les
or
xlat
daa
xchg
out
out
out
stos
xchg
jne,pt
stos
pop
ss
call
mov
shrb
in
enter
mov
lahf
push
lcall
sub
mov
inc
nop
sbb
pop
sub
ja
inc
daa
inc
mov
cmp
jns
or
test
jae
xor
jg
daa
lods
jbe
cmp
test
jg
push
pop
addb
movsl
jmp
and
les
cmp
adc
jns
inc
bound
mulb
push
lods
mov
add
into
mov
clc
pop
cmc
dec
mov
pop
lret
popa
lods
add
out
ds
mov
int3
dec
pop
std
adc
push
adc
shrl
and
popa
fisubl
or
mov
push
movsl
inc
mov
adc
lcall
arpl
aad
xlat
sbb
jg
rolb
jecxz
adc
std
push
lahf
push
ljmp
push
xor
fcmovnu
push
lods
mov
fdivl
cmp
popa
pop
xchg
test
xchg
nop
stos
mov
jne
inc
xor
mov
xor
pop
cmp
js
pop
call
mov
shrl
sub
fildl
fdivrp
loopne
push
jno
add
push
test
pop
sqrtps
mov
mov
stos
das
test
and
enter
lcall
xchg
mov
mov
scas
sub
jb
scas
inc
and
xor
data16
imul
std
or
add
fisttpl
and
pop
add
push
scas
add
inc
inc
sub
mov
cmovp
xchg
mov
jg
mov
or
scas
cmp
fimuls
add
js
out
cltd
xor
cli
cmp
and
xlat
enter
xor
loopne
push
push
outsb
inc
pop
jbe
loopne
dec
in
insl
hlt
push
jmp
push
cmp
inc
bound
shl
cmp
or
rol
mov
mov
inc
fsubp
je
cwtl
add
xchg
xchg
push
sar
cmpsl
ret
and
out
pop
pop
jno
push
bound
inc
add
iret
lret
mov
mov
cmp
mov
or
xchg
mov
dec
in
and
outsb
lret
push
ja
out
xchg
out
and
mov
xor
les
je
and
jp
inc
add
call
pop
push
shrb
xorb
mov
pop
cmp
dec
daa
fadds
inc
and
inc
adc
popa
fs
pop
push
dec
push
js
cmp
out
xorl
mov
call
sub
mov
xor
xchg
xchg
adc
ljmp
cltd
cs
ret
test
lcall
imul
fldl
repz
inc
cs
sarl
jb
push
insl
push
xchg
or
mov
dec
cmp
ret
xor
aam
adc
aas
sub
and
jb
mov
mov
jne
or
jecxz
inc
xchg
sarl
jle
popf
iret
insl
insb
add
xor
xor
cmp
dec
das
scas
adc
pop
cmpsb
add
xchg
outsl
or
push
mov
jmp
int3
xchg
outsb
hlt
hlt
repnz
inc
nop
pop
rolb
adc
push
loop
add
das
fs
pop
fwait
cmpsb
mov
xchg
cld
push
test
outsb
mov
cmpsl
push
jne
jl
dec
popa
adc
lods
icebp
pop
loop
movhps
inc
sub
pop
jae
sub
addb
jns
or
loopne
xor
icebp
push
mov
stos
push
cmpl
hlt
idivl
dec
adc
ja
inc
call
lods
jge
arpl
pop
lret
dec
mov
mov
cmp
xor
mov
xchg
push
mov
rorb
inc
add
mov
push
inc
cli
push
jecxz
cmp
cmc
stos
xchg
push
add
out
sub
in
sahf
rorb
sbb
subb
cmp
cmpsl
call
aas
mov
or
inc
out
sarb
push
pop
jb
add
dec
aas
push
fldt
arpl
jns
push
rclb
std
cmp
les
jno
pop
mov
outsb
push
jecxz
xorl
cmpl
mov
adc
daa
std
push
stc
stc
sahf
mov
data16
jb
sub
rorb
cmc
and
push
and
and
dec
sbb
mov
call
insl
add
inc
jle
xor
cltd
mov
insl
mov
jecxz
lahf
mov
xchg
frstor
and
lods
xchg
mov
inc
pop
add
into
jne
dec
adc
or
xor
test
mov
push
pop
mov
sti
test
xor
popf
mov
imul
lods
push
jbe
add
adc
jge
dec
mov
cmpsb
lods
ja
into
test
pop
in
and
ss
adc
pop
add
mov
bnd
ret
enter
sub
das
xchg
jecxz
mov
jge
js
and
testl
ret
mov
jbe
mov
pusha
xor
lea
ret
in
mov
cld
push
jo
out
lar
pop
adc
sbb
jbe
jecxz
pop
outsb
sub
push
cmp
sbb
mov
lret
add
sub
js
stos
mov
adc
sbb
lods
call
andb
jo
test
ljmp
push
loop
pop
mov
jne
adc
jl
jge
pop
out
imul
xchg
mov
push
mov
icebp
mov
cld
dec
add
insl
lcall
cmc
sbb
pushf
and
loopne
ljmp
fisubrs
xchg
and
fnsave
pop
sub
adc
pop
lcall
lods
es
mov
ljmp
mov
inc
les
inc
or
stc
in
mov
mov
jge
xor
ficoms
sbb
stc
es
sbb
xor
insl
mov
adc
lret
pop
cmpsl
and
fldcw
call
sbb
lret
xchg
xor
jne
cwtl
inc
mov
scas
movsl
lods
jl
in
out
les
enter
cmp
jns
repz
add
inc
cltd
pushf
outsl
mov
insb
add
mov
shlb
loopne
sbb
ss
sub
lods
insl
mov
aad
out
lods
cmc
clc
xor
ja
add
jnp
daa
test
xchg
rcr
inc
pop
xor
out
mov
outsl
outsl
aad
mov
pop
dec
inc
and
mov
lea
jns
stos
mov
mov
idivl
pop
rcr
push
lret
add
xor
mov
insl
pop
xchg
imul
ds
dec
aad
fbld
popf
je
cmp
mov
mov
fldt
js
xlat
pushf
sahf
lahf
mov
bound
int
pop
dec
jnp
and
xchg
fimull
adcb
mov
sub
in
jnp
add
pop
cmp
push
add
jle
pop
in
pop
scas
sbb
or
nop
ret
mov
aas
xchg
pop
cld
inc
jo
xorb
daa
dec
jns
push
inc
jo
pop
mov
pop
and
mov
jno
xor
pop
mov
adc
cmp
push
addr16
outsb
fmuls
adc
int3
sub
sbb
dec
adc
out
lods
stos
into
test
xor
xchg
inc
jb
jp
sti
push
inc
xlat
mov
push
push
mov
ficoms
fwait
in
stos
fnstsw
ret
fimuls
mov
lahf
mov
xchg
out
cwtl
mov
testb
adc
jl
int3
fisubl
adc
push
or
or
xchg
xor
popf
jbe
jo
aad
pop
add
dec
xchg
jle
imul
xchg
insl
outsl
dec
inc
imul
rclb
fxtract
popf
rorb
inc
push
cmp
pushf
movsb
jl
test
mov
sarb
aam
dec
inc
xor
test
data16
pusha
xchg
out
jne
rcl
lea
data16
and
shlb
pop
mov
mov
les
jns
inc
loopne
mov
int
ret
pushf
adc
sub
add
ja
pop
dec
ffree
xor
cltd
es
mov
jae
xchg
outsb
and
ret
mov
ss
dec
popa
pop
pushf
stc
std
shlb
loope
pop
dec
cmpsl
cmp
cwtl
leave
ret
sub
add
mov
mov
daa
fmull
inc
adc
dec
outsb
jne
js
or
imul
cmp
add
int
frstor
adc
dec
and
xchg
clc
adc
xlat
shll
dec
in
loope
sahf
cmp
mov
pop
add
mov
sbb
cmp
sahf
mov
jmp
adc
xchg
dec
jp,pt
mov
iret
shlb
int
jo
mov
dec
shlb
xchg
add
xor
sbb
and
imul
loopne
ljmp
sbb
jo
dec
mov
jmp
test
stc
jb
xchg
dec
push
push
ss
xchg
mulb
shll
lret
add
sub
pop
jnp
xchg
retw
dec
xchg
add
daa
jecxz
xor
mov
push
mov
les
and
stos
mov
xchg
push
shrb
lret
nop
inc
lea
mov
pop
and
mov
jge
ljmp
or
push
shll
mov
mov
and
jp
sub
int3
jbe
push
sbb
mov
sahf
or
sub
pop
lahf
sub
test
lds
call
fistl
mov
sub
fisttpll
aad
jp
movsb
pusha
gs
call
daa
fisubrs
xchg
pop
push
cli
into
add
mov
push
sbb
pop
lahf
jnp
mov
repnz
dec
imulb
js
xor
mov
out
add
bnd
cwtl
jge
std
jae
pop
lock
add
nop
sub
sahf
dec
js
cmp
popf
dec
cmp
aad
pop
cmp
sete
push
sbb
sbb
cli
lret
mov
or
pop
jecxz
push
or
loop
pop
mov
repz
sub
rorl
mov
in
mov
mov
call
icebp
scas
dec
mov
xchg
test
sbb
and
test
xor
frstor
mov
dec
out
cwtl
fs
rcrb
in
mov
xlat
sub
sub
mov
cltd
sahf
lret
lret
loop
insb
xor
repz
add
mov
int
in
lods
jecxz
or
fsubrl
mov
pushl
mov
jp
sbb
jo
enter
and
push
imul
loope
push
test
call
movsb
dec
inc
cmovb
push
jp
mov
out
push
rcll
cmpsl
ss
in
test
xlat
push
sub
outsl
pop
or
push
outsb
mov
and
xchg
cmp
bound
lock
outsb
mov
or
or
movb
pop
lods
mov
push
and
nop
lods
add
sub
add
cmc
mov
xorl
push
in
mov
adc
and
adc
popa
lret
int3
mov
fsub
sbb
mov
inc
movsb
sub
sub
inc
jle
xchg
jno
mov
int
push
ljmp
inc
gs
jge
adc
pop
cmpsl
stos
bound
push
jno
sbb
fisttps
mov
push
push
sbb
sub
xchg
mov
dec
out
arpl
shll
movsb
rcr
call
movsb
outsb
nop
mov
das
addb
jge
cmp
mov
adc
mov
dec
in
push
mov
cmp
or
pop
cs
clc
lods
xchg
add
pop
mov
adc
pop
imul
lods
mov
cmpsb
mov
mov
sti
dec
stc
sbb
ss
sbb
fimuls
mov
sbb
inc
mov
dec
lods
dec
enter
call
cmp
xor
push
push
insb
push
and
ret
lods
push
jb
pop
loope
mov
xor
inc
mov
cli
cld
ret
mov
testb
push
out
mov
mov
nop
add
sub
out
in
sbb
aaa
cmp
pop
pop
jge
fwait
mov
dec
rorl
xor
cs
ret
push
inc
iret
xor
and
sub
and
pop
mov
in
ficompl
sub
aam
pusha
xlat
sbb
xchg
pop
mov
add
movsl
jmp
xchg
fsubl
push
icebp
sub
movsb
rcrb
std
pop
paddusw
sar
or
bound
sahf
cmp
inc
add
sbb
stos
add
lods
jb
repz
pop
lea
and
or
adc
test
sti
aas
adc
sub
cmp
cmp
mov
mov
in
push
pop
push
stos
das
jae
jb
cs
mov
pusha
test
pop
nop
test
fildl
ljmp
dec
fsubs
lcall
add
push
dec
jle
js
ficoml
or
pusha
mov
sbb
std
sti
pop
pop
jl
shlb
sub
adc
mov
mov
div
stc
test
mov
sub
cwtl
xor
xchg
sbb
mov
cmp
cmp
scas
push
in
mov
iret
addr16
mov
hlt
lret
xchg
cmp
inc
int3
mov
cmp
out
add
push
aas
dec
mov
push
inc
enter
jo
push
sbbb
jge
adc
inc
sub
add
mov
push
mov
adc
std
jbe
repnz
addr16
cld
sub
mov
xor
add
shlb
xor
test
mov
adc
andl
or
lods
insb
std
mov
xor
insb
or
je
push
add
dec
test
out
jb
jmp
cmpsl
stos
jp
or
and
enter
lahf
outsl
lock
or
test
inc
push
movsb
jmp
sub
pop
push
insl
test
daa
hlt
fiadds
pop
iret
jp
out
sbb
mov
test
mov
xor
bound
imul
mov
lahf
mov
adc
sub
mov
ja
repnz
mov
xor
das
dec
mov
adc
jo
fs
movl
imul
push
and
orl
mov
aaa
sbb
sbb
sub
adc
sahf
pop
inc
ret
adc
cmp
jb
mov
testl
jnp
push
sbb
idivl
pop
mov
xchg
cld
mov
push
add
call
inc
push
popf
sub
xchg
es
aas
push
repnz
cld
mov
jl
imul
sti
mov
lahf
mov
and
sub
outsb
inc
test
outsb
jge
or
hlt
and
jp
in
or
mov
aaa
sub
rolb
jb
notl
or
mov
jnp
jb
push
fidivrs
fsubl
mov
adc
cld
pop
movsb
or
xchg
retw
push
sbb
mov
dec
mov
rorb
mov
gs
aam
pushf
push
xor
mov
sti
into
stos
decb
and
push
or
stc
jge
sbb
push
xchg
and
in
fildl
jle
repz
add
push
sbb
sbb
mov
jecxz
leave
mov
adc
or
xor
push
jecxz
mov
dec
pop
loope
jno
push
inc
shrl
cmpsb
cmp
jo
popa
aas
mov
mov
stos
ret
adc
movsl
inc
cmp
dec
and
cmp
inc
mov
dec
cmp
into
mov
jg
mov
adc
rclb
popa
stos
pand
mov
add
mul
aas
ret
mov
xchg
pop
mov
pushl
into
xchg
popf
das
and
jg
inc
or
fldcw
pusha
fstpt
je
das
cld
jb
shrb
rorb
and
mov
xor
popa
ds
dec
ret
cmp
insl
push
inc
pusha
push
inc
push
dec
cmp
pop
sti
roll
jp
mov
mov
cld
repnz
js
ja
popa
push
mov
mov
push
gs
pop
inc
or
xor
xor
dec
mov
fs
push
xlat
mov
pop
push
push
cmpsb
sbb
leave
xchg
jmp
jb
adc
shlb
lret
xchg
add
insl
and
mov
pop
notl
mov
test
adc
xor
jl
add
mov
push
push
mov
bnd
sti
mov
xchg
dec
cmpsl
dec
lods
lret
push
ss
sbb
cmp
adcl
or
fisttps
aas
mov
jmp
xchg
in
mov
push
lret
lods
cmpsb
fisttpll
fisubs
call
add
jge
pop
wrmsr
ret
je
mov
jnp
cwtl
rcrl
adc
lods
nop
loop
push
xchg
xor
dec
cmp
mov
push
out
sarl
cli
sub
cmp
xchg
mov
cmp
xchg
aaa
repz
in
aad
pop
scas
loop
aam
out
in
xchg
sti
mov
leave
xor
push
jecxz
or
dec
icebp
fisubrs
cmc
sub
pop
test
sub
cmp
orb
pop
mov
mov
lea
xchg
cli
sbb
mov
mov
push
xchg
es
pop
or
loopne
pushf
jmp
rclb
jne
pop
test
adc
dec
mov
pop
add
stos
popf
pop
repnz
inc
out
data16
test
dec
pop
popf
out
xchg
in
sbb
fldenv
pop
add
mov
in
pop
mov
negb
gs
jo
mov
movsl
sbb
scas
insb
mov
ret
inc
aam
repz
cmp
xor
cmp
insl
popf
xchg
daa
test
jecxz
and
or
adc
lret
test
enter
push
push
adc
das
inc
mulb
xchg
out
rclb
pusha
xor
aam
pop
dec
flds
push
inc
rcrl
insl
out
and
dec
xchg
dec
mov
imul
jp
or
pop
ret
mov
push
xor
out
mov
dec
mov
insb
adc
test
test
mov
leave
or
push
scas
and
mov
mov
fsubrl
rorl
nop
jne
cmp
enter
or
add
shrb
push
into
xor
xchg
imul
mov
arpl
fistpll
adc
loop
cmpsl
scas
fyl2xp1
push
inc
leave
xchg
inc
pop
or
mov
imul
outsb
or
sbb
insl
popa
cld
not
xlat
mov
aaa
lods
adc
push
and
js
popl
mov
dec
mov
stos
adc
push
leave
mov
push
cmp
inc
notb
push
movsl
push
lds
fs
xor
nop
or
data16
das
adc
aaa
xchg
loop
jge
repz
xchg
jbe
loop
lea
push
push
repz
push
push
jl
sahf
inc
pushf
sbb
pop
in
jmp
mov
mov
cmp
mov
xchg
in
fdivrl
and
pop
insb
or
loope
xchg
mov
add
and
push
push
jl
add
push
repz
mov
push
outsb
mov
jge
je
sub
or
test
insb
cmp
aad
stc
hlt
test
push
int
aaa
adc
addb
sahf
loope
jnp
cmpl
movsl
mov
add
pop
fldt
sub
sub
jb
jnp
cmp
adc
jno
push
movsl
fbstp
push
leave
mov
or
jg
pop
cwtl
mov
mov
daa
xchg
mov
jmp
insb
cmc
test
je
mov
inc
xchg
jmp
dec
pop
or
xchg
mov
rcrl
mov
sub
sbb
and
push
aam
xchg
out
dec
sbb
sub
add
and
fwait
push
and
dec
js
mov
pop
cmp
and
sbb
push
test
repz
xchg
or
sbb
notl
lock
sbb
insl
movsl
jno
push
add
shrl
and
mov
flds
je
push
sbb
shl
pop
xchg
or
mov
cmc
pop
cmp
sub
call
jns
sub
dec
dec
je
repz
lock
mov
pushf
sub
push
repz
and
ljmp
xchg
sub
aas
stc
fwait
stos
dec
in
inc
xchg
adc
pop
test
pop
or
inc
jp
pop
dec
jo
jno
imul
cli
insl
cmpsb
loop
fsubrp
sbb
clc
mov
push
push
movsl
cmp
push
sub
jns
movsl
push
loopne
int3
dec
cld
dec
movsb
mov
xchg
sbb
test
int3
cld
ja
loope
push
or
mov
in
and
aam
mov
fistpl
and
cmp
rolb
daa
xor
in
sarl
movsb
leave
sub
imul
mov
mov
dec
push
dec
lds
xchg
and
adcb
hlt
fnstsw
mov
ret
push
mov
daa
sti
push
or
adc
jo
test
aad
pop
pop
aad
dec
in
jle
mov
inc
pop
xchg
loope
pop
mov
and
jmp
sub
push
cmpsl
stos
fs
add
jge
sub
adc
imul
stc
lods
mov
dec
mov
mov
shll
dec
rclb
nop
repz
xor
cmpsl
loope
dec
add
or
fadds
sbb
aam
std
jecxz
out
sub
inc
lret
out
movsl
inc
in
dec
mov
icebp
ja
xor
mov
arpl
hlt
push
xchg
sarl
mov
imul
add
xor
adc
fidivrs
mov
jecxz
jecxz
cs
movsb
dec
xor
js
fnstsw
das
push
stos
xchg
bound
int3
sub
fsts
xchg
outsb
inc
and
dec
pop
sar
push
adc
xchg
leave
mov
rorb
sbb
mov
stos
jne
adc
lds
sbb
lock
pop
sbbb
jbe
lea
fsub
and
ds
jbe
or
sub
xchg
xor
push
adc
popa
adc
repnz
jge
outsl
shll
jno
clc
jge
mov
inc
rolb
mov
dec
and
push
push
lret
xor
out
mov
gs
mov
data16
dec
sti
loope
lock
or
xor
movsl
std
and
inc
jge
unpcklps
push
mov
rcrb
hlt
mov
sar
sub
jecxz
out
jo
xchg
xchg
in
lahf
push
mov
mov
orb
push
sub
lahf
fnstsw
pop
scas
das
dec
arpl
into
jmp
adc
mov
adc
loop
inc
imull
xor
push
jae
es
inc
xor
aad
push
scas
gs
mov
orl
adcb
mov
mov
cmp
outsl
dec
xor
ret
fs
add
addr16
and
out
incl
stos
out
aas
sub
or
mov
in
out
xor
mov
addl
ret
sbb
pop
and
out
andb
clc
and
test
hlt
mov
sub
dec
daa
pop
scas
add
mov
lret
cltd
aad
les
dec
lods
cmp
imul
imul
push
hlt
mov
mov
adc
and
xchg
fistpl
dec
jns
adc
jno
sbb
push
scas
and
jle
das
sub
adc
ret
lock
inc
insb
jno
sbb
cmp
movsb
fdivrs
call
repnz
adc
out
xlat
cltd
lods
daa
out
push
aaa
add
addr16
es
out
incl
imul
adc
insl
int
inc
test
outsl
mov
mov
adc
or
and
xchg
pop
mov
lock
pmullw
pusha
and
xchg
xchg
pop
mov
xor
imul
cmp
imul
scas
lret
bound
or
pop
cmp
jbe
push
push
xor
cli
push
pop
inc
cmpsb
sbb
lret
jp
mov
cli
fsubp
xchg
sbb
push
or
or
data16
int3
xchg
stos
pop
jp
jge
inc
popa
adc
enter
jmp
pop
mov
bound
jo
les
and
test
mov
scas
stos
cmpb
shrl
cs
out
and
xor
cmp
push
sbb
lock
iret
and
mov
mov
fisttpl
bound
repnz
sbb
cmp
arpl
lcall
in
stc
faddl
lods
adc
bnd
push
inc
test
mov
xor
pop
inc
mov
icebp
pop
sub
pop
in
ret
sbb
pop
and
push
add
pushf
inc
cld
addl
fisubs
dec
jo
jbe
movb
loope
sub
xchg
mov
ret
nop
scas
inc
cmp
rolb
loopne
push
ss
or
dec
popf
scas
int
and
xchg
jbe
outsl
mov
test
in
mov
push
leave
mov
sti
enter
sub
aaa
push
mov
mov
xor
mov
cmc
arpl
xor
imull
pop
leave
mov
adc
es
call
or
sbb
out
pop
inc
arpl
pop
jecxz
xor
xchg
lcall
lods
ds
or
movsl
and
mov
testb
insl
in
add
xchg
ljmp
repz
sbb
repnz
scas
cmp
fisttpll
mov
dec
xchg
cmp
add
mov
test
cs
leave
lret
pop
jno
and
clc
pushf
es
mov
dec
adc
mov
push
mov
jmp
int3
insb
mov
shrl
sub
fcoms
mov
sub
pushf
stos
cmpl
addb
mov
jge
xchg
and
xchg
mov
jo
cmc
adc
jmp
in
dec
cmp
mov
mov
jns
dec
adc
mov
stos
lcall
sub
insl
cmp
mov
xchg
push
adc
test
les
adc
cmc
fcomps
sub
jne
push
mov
jne
cli
mov
shlb
xchg
add
and
andl
add
mov
imul
ret
ds
or
std
pop
test
fcmovbe
dec
push
repz
adc
inc
add
jecxz
jmp
cmp
arpl
ss
fs
iret
sub
movsb
xchg
out
and
mov
icebp
fcomps
jmp
imul
imul
jl
andb
dec
data16
cmp
adc
adc
mov
shrb
push
dec
pop
or
cmpsb
rorl
js
cwtl
rorb
mov
jno
sbb
stc
xlat
loopne
sub
mov
scas
mov
insb
xchg
sarl
andl
rorl
xor
pop
mov
rorb
ret
sarb
sbb
fdivrs
mov
mov
ficoml
cwtl
idivb
push
clc
and
inc
imul
jbe
or
jle
xor
je
lret
and
and
mov
es
gs
mov
sbb
adc
pop
icebp
and
in
mov
cmpsb
mov
pop
inc
orl
pop
fcomps
ss
push
daa
cli
mov
mov
bound
add
cs
pop
call
scas
sbb
dec
pop
in
sbb
and
mov
cli
inc
pop
mov
xchg
fwait
sbb
punpckhbw
push
mov
movsl
outsb
rcll
mov
rorb
jns
mov
fcmovnb
into
mov
inc
fadds
dec
cmpsb
test
ror
jg
cmp
jl
and
jo
stos
lret
fisttps
xchg
ja
nop
imul
dec
cmp
inc
into
aam
mov
jno
or
xor
and
pop
test
call
sub
fs
push
orb
lahf
pop
arpl
mov
mov
push
pop
push
cmp
into
jae
int3
pop
jb
fwait
inc
in
jbe
ror
jo
jae
jle
ret
scas
mov
sbb
xchg
adc
and
rcl
jmp
pusha
mov
enter
add
and
add
dec
pop
insb
rorb
and
and
lock
xor
sbb
add
mov
pop
iret
jle
and
inc
jb
lods
movsl
stos
ljmp
jne
fidivs
out
pop
je
push
rcll
ljmp
out
push
mov
cwtl
xor
addl
nop
imul
test
faddl
je
jno
and
ret
mov
ret
adc
xchg
cmc
popf
or
into
dec
into
ds
inc
rcl
int3
cmc
jo
popf
in
imull
push
or
pop
fdivs
mov
lods
fisubrs
add
inc
das
xchg
cmp
mov
rorb
xchg
add
call
mov
and
ret
mov
mov
mov
jmp
mov
add
lret
cmp
adc
negb
dec
mov
xchg
cmpb
dec
les
iret
add
mov
push
sub
xchg
dec
and
ficoml
pop
mov
pop
cltd
aaa
cmp
and
mov
lods
cwtl
and
jnp
xlat
stc
sbb
out
lcall
lods
inc
dec
cmp
aaa
mov
in
fwait
int
lret
jbe
mov
jae
mov
adc
sbb
jne
das
or
cmpsb
cmp
xor
fisubl
aas
loop
gs
jle
jg
fwait
xchg
jg
ret
loop
xor
jl
mov
cmp
inc
push
test
xchg
aaa
cmpsb
insb
sub
je
pop
push
inc
and
sub
pop
pop
shll
push
aam
adc
jge
pop
or
add
adc
cmp
mov
xchg
and
ss
xchg
mov
mov
std
cli
aaa
enter
aas
push
stos
ljmp
lds
stos
cmp
pop
inc
sahf
sub
sbb
mov
inc
shrb
mov
in
shlb
mov
jns
negl
jmp
roll
add
data16
lods
mov
xor
xchg
xchg
push
cld
outsb
repnz
and
push
aad
std
adc
int
push
fdivrl
dec
add
xchg
add
xchg
pop
push
mov
in
int
imul
lock
mov
gs
dec
test
mov
inc
test
jmp
dec
into
ljmp
mov
push
setae
pusha
orl
mov
xchg
out
jge
push
push
xchg
adc
lahf
mov
jl
imul
jno
jno
outsb
add
scas
into
jl
xchg
sbb
lods
or
lcall
iret
fwait
mov
lods
sub
pushf
mov
sahf
ret
pop
pop
push
pop
and
jb
into
pop
add
std
mov
insl
imul
and
cmp
test
getsec
adc
or
cmpsl
pop
rcrl
popa
fs
pop
frstor
call
or
out
push
ret
push
dec
pusha
add
fistpl
lods
sbb
dec
adc
xor
add
or
les
jbe
test
ss
mov
aaa
mov
mov
mov
mov
push
inc
outsb
and
arpl
popf
adc
leave
pop
add
int
mov
cmc
mov
pusha
pop
mov
mov
out
push
adc
jno
add
rolb
clc
mov
mov
ja
movsl
mov
iret
inc
lret
cltd
xchg
push
in
cmp
lea
pop
sub
push
push
and
sub
pop
jns
lock
or
inc
fistps
repnz
pop
sub
push
lock
mov
inc
repnz
lea
cli
xor
int3
pushf
in
mov
sti
and
dec
push
push
adc
xchg
mov
inc
lret
loop
shlb
jae
cmp
cmp
or
ja
pop
add
mov
cmp
pop
mov
aas
repnz
push
std
xchg
mov
mov
call
ss
scas
push
fmul
movsl
iret
fsubrl
mov
out
xchg
out
adc
xlat
pop
jnp
enter
stos
test
pop
popf
ljmp
adc
scas
jmp
sub
out
jbe
testl
jnp
ds
inc
cmpps
out
adc
xor
mov
popf
jmp
insb
sbb
pop
or
stos
fwait
mov
mov
ss
andl
jns
pop
jne
adcl
sti
sub
stos
push
test
sbb
and
shrb
bnd
mov
enter
xchg
inc
push
ljmp
test
int
iret
fists
bound
fcos
pop
add
inc
dec
and
imul
pusha
cltd
xor
mov
imul
test
popa
and
fstpl
mov
cld
scas
or
pcmpeqb
fisttpll
inc
and
add
pmuludq
jns
lea
es
mov
add
daa
mov
loope
sub
jnp
inc
popf
outsb
lahf
pop
mov
out
inc
into
inc
lds
rorl
ja
sub
push
or
mov
mov
popa
mov
ja
iret
dec
jmp
cli
xchg
ja
repnz
mov
mov
xchg
daa
adc
xchg
jmp
mov
jo
imul
fcomps
repnz
add
dec
pop
xchg
sbb
pushf
cmp
movsl
mov
or
add
in
cmp
add
fistps
ljmp
cmc
lods
dec
mov
insb
cmp
in
insb
test
pop
adc
jbe
into
jl,pn
push
xor
push
ret
stos
lcall
lahf
ljmp
lock
scas
and
pop
cwtl
lds
xor
cmc
push
in
cmpsb
mov
lods
addr16
jo
xchg
inc
jl
je
jns
inc
jne
ficomps
ljmp
les
inc
pop
int
jge
jnp
in
bnd
add
sbb
sti
mov
gs
rcrl
xchg
mov
xor
movsl
mov
lahf
pop
dec
shr
add
jb
adc
jns
push
cld
jbe
and
push
ds
xchg
inc
jbe
andb
dec
dec
aad
or
out
outsl
jg
xchg
dec
mov
sarb
pop
movsl
or
xchg
add
push
pushf
adc
mov
xchg
sbb
push
ret
mov
cmp
test
loope
pop
cmpsl
dec
adc
fimuls
and
mov
or
aam
cltd
ret
mov
pop
mov
or
push
mov
or
rcrl
lahf
popa
xor
cmp
add
inc
push
sbb
sub
icebp
inc
lods
xor
adc
aam
xor
jbe
push
mov
data16
add
cmp
ljmp
sarl
out
xchg
push
xchg
and
faddl
out
std
dec
xchg
gs
push
push
mov
das
test
mov
dec
xchg
or
cmpsl
inc
sahf
repz
jmp
ljmp
jnp
inc
nop
xchg
mov
and
test
adc
cltd
jbe
push
in
nop
aam
mov
sbb
xchg
popa
rorl
addb
dec
mov
mov
testl
loop
je
shll
sarb
push
mov
jae
mov
dec
cmpsl
mov
sti
cmp
ss
movsb
cli
cmp
push
xchg
mov
test
and
loopne
out
pop
aad
loopne
les
sarl
mov
imul
pop
or
aam
scas
loope
fwait
push
pusha
cld
daa
insl
pop
xorb
stc
sbb
mov
aam
testb
insl
jl
fidivl
enter
loope
sti
in
mov
add
push
sub
out
std
insb
iret
mov
xchg
leave
mov
jl
cld
adc
or
adc
cltd
inc
lds
mov
out
rclb
popf
shr
ljmp
data16
js
arpl
leave
mov
clc
sub
adc
jbe
mov
mov
push
insl
and
shll
nop
xchg
test
in
stos
rcrb
dec
call
push
repnz
aaa
popa
das
mov
dec
mov
sub
jo
lahf
hlt
dec
xchg
iret
and
mov
andl
lods
sbb
in
icebp
xor
push
sub
pop
sub
sti
fnstcw
jnp
mov
mov
mov
fmul
cltd
jge
popf
sahf
or
test
add
lret
push
cwtl
std
mov
adc
es
adc
add
add
lret
lret
subl
pushf
insl
dec
inc
jae
push
loope,pn
or
and
mov
popa
jb
adc
ljmp
pop
push
inc
xlat
into
repnz
lret
jns
mov
push
daa
push
add
and
push
or
xor
mov
jmp
mov
mov
cltd
adc
mov
ret
aad
scas
in
in
push
cs
sub
fdivp
outsb
addr16
repnz
sub
mov
outsl
je
mov
mov
or
je
inc
dec
ss
pop
cmp
bound
pushf
xor
or
sub
push
push
aaa
dec
xor
insb
mov
sub
mov
push
imul
rorb
lahf
or
popf
xor
xchg
loopne
and
xchg
loop
out
es
dec
fadd
jge
dec
dec
sub
push
sbb
cmc
lods
andl
lret
aad
pop
hlt
fiadds
sti
test
push
push
jle
cmpsl
mov
jge
outsb
in
mov
mull
ss
shl
aaa
or
in
clc
push
out
into
lcall
movsl
scas
sub
inc
cmc
jle
bound
sub
aas
push
inc
or
stc
jle
and
or
addb
jns
push
mov
cmp
mov
enter
inc
cmp
mov
sahf
or
aam
imul
adc
xor
in
cmc
cli
test
jg
arpl
push
into
fmull
je
or
ret
jle
jg
sbb
push
sbb
hlt
and
icebp
scas
lods
int3
pop
jo
mov
ss
cmp
loop
lret
and
sbb
xchg
mov
sub
xor
rcll
mov
test
mov
mov
ds
mov
or
popa
testb
in
sub
push
mov
ret
aam
pop
mov
mov
sbb
test
fimuls
push
loopne
lock
xchg
pop
cmc
mov
cli
xlat
pop
enter
bound
push
stos
int
iret
enter
dec
int
pop
mov
sbb
lcall
mov
xchg
rclb
add
ljmp
ss
hlt
js
scas
xchg
mov
or
lods
push
push
push
xchg
inc
es
xchg
add
movsb
sub
out
notb
mov
adc
ret
int3
rol
mov
das
aad
adc
fs
and
jae
dec
cs
cmp
out
mov
sub
lock
outsl
lods
jns
inc
xchg
sub
dec
mov
jle
inc
loope
cmpsl
loop
es
push
sahf
or
pop
mov
jmp
inc
inc
lock
fsubrl
les
push
ret
int3
stos
adc
loope
repnz
fdivs
ret
lock
add
fs
repz
xor
fisttpl
fsub
lret
pop
mov
and
outsl
lret
sub
jns
mov
pop
jle
lret
push
lcall
insl
jae
xor
xlat
dec
fidivl
clc
and
test
and
lea
je
fs
xor
xchg
mov
movsl
sbb
leave
pop
add
jl
and
data16
mov
ret
jne
inc
out
rcrl
insb
in
sbb
cmpsl
fstps
adc
mov
inc
mov
pop
pusha
or
dec
test
inc
jne
jno
in
mov
pushf
into
scas
lds
nop
lret
lea
test
xchg
mov
mov
ret
lret
push
dec
sbb
and
frstor
rcrl
sub
shll
cmp
loop
fldenv
inc
stos
jne
cmp
int
fwait
mov
loope
scas
iret
push
scas
or
cmp
xchg
sbb
and
and
lods
xor
push
adc
jp
pop
xor
loope
inc
jo
mov
fcmovnu
int3
shl
es
adc
sbb
scas
daa
ficompl
cmpsb
pop
mov
je
test
push
mov
scas
out
adc
ucomiss
js
nop
subb
mov
ljmp
jecxz
shr
lahf
addr16
not
xlat
mov
add
adc
push
ds
mov
test
aas
add
lea
daa
xchg
dec
push
sub
push
jl
jg
and
es
out
nop
pop
push
iret
insb
hlt
lds
je
mov
fsubrs
mov
push
inc
xor
mov
jmp
adc
movsl
jecxz
aaa
idivb
lods
or
rcll
imul
cmp
fdivrl
cwtl
mov
jae
push
mov
inc
scas
mov
loop
cmp
mov
jnp
orl
ja
mov
jae
or
inc
jmp
pop
pop
or
mov
data16
dec
mov
push
xchg
cmpsl
lods
ljmp
dec
negl
movsb
stos
addb
xor
cmp
pusha
and
bound
movsb
and
adc
sbb
fcomi
push
sbb
sub
mov
in
push
and
mov
or
or
sbb
xchg
shlb
test
jg
adc
inc
adc
dec
pushf
push
inc
je
int
mov
dec
xorb
lds
xor
lods
loope
sub
mov
test
fs
ret
sub
bound
outsb
sahf
rclb
pop
adc
fwait
jb
sub
cmc
ret
cmpsl
lret
or
sarl
xorb
xchg
in
in
push
scas
addr16
sub
xor
jg
inc
mov
shlb
push
cmpsl
rclb
adc
inc
sub
inc
mov
ja
pop
cmc
daa
clc
cmp
iret
xor
addr16
cmc
xor
sub
psubusb
rclb
cmp
push
mov
dec
data16
cmpsl
mov
mov
pop
cs
sbb
pop
push
inc
mov
add
fdivr
mov
rorb
neg
dec
add
push
xchg
sti
ret
pop
fs
leave
fucomip
lret
pop
ficompl
dec
cmp
out
fwait
arpl
push
jbe
adc
bound
pop
das
mov
sbb
movsl
inc
push
pop
sub
roll
and
or
movsl
imul
dec
mov
and
pop
cmc
inc
mov
inc
test
out
sub
jg
roll
add
jne
inc
dec
daa
fwait
dec
xchg
ljmp
adc
leave
lret
arpl
js
pop
test
aam
dec
push
adc
and
push
leave
cmpsb
adc
movsl
jno
inc
sbb
xor
outsb
xchg
scas
dec
fnstcw
mov
xchg
mov
test
sbb
arpl
imul
xchg
fisttpll
mov
js
les
sbb
scas
pop
movsl
mov
loop
push
loopne
pushf
arpl
inc
cld
and
adc
xchg
push
je
adc
dec
lods
mov
popa
les
outsl
add
out
inc
mov
xchg
loop
repnz
sahf
push
movl
mov
roll
pop
test
repnz
mulb
lods
xor
pop
or
and
dec
pop
cmc
mov
mov
jge
pop
sbb
dec
adc
sbbl
pop
test
js
cmp
sbb
add
push
dec
add
sub
dec
aam
es
jge
add
repnz
mov
int3
sbb
pop
inc
mov
shr
call
push
stos
inc
fldt
lods
loopne
movsb
xchg
sbb
int
xor
sub
mov
add
js
int3
ss
cmp
dec
aas
test
mov
jp
mov
das
lcall
jae
jnp
stc
jmp
fnsave
pop
xchg
popa
scas
popf
stc
mov
xor
lret
rorb
dec
pop
lret
jo
or
and
lcall
aam
or
hlt
adcb
pop
int3
and
xor
cwtl
xchg
pop
out
push
int
movsl
sarb
fs
and
dec
fs
xchg
cmp
cmp
inc
xor
sarb
sbb
lock
pop
test
jae
imul
cmp
rorl
int
je
stos
add
dec
mov
leave
punpckhbw
icebp
jno
and
jp
jge
fdivrs
xor
mov
hlt
adc
inc
and
push
and
cmp
sbb
push
mov
and
cmp
dec
mov
cmp
sahf
fsubs
icebp
inc
mov
outsl
adc
clc
mov
scas
aaa
mov
sbbb
jbe,pt
mov
lret
loope
in
mov
and
and
dec
test
pusha
jo
mov
mov
add
lds
ja
jae
mov
test
adc
popa
nop
cmpsb
add
sahf
lods
xchg
add
push
fs
in
orl
inc
mov
cmp
push
out
test
cmp
cmp
xchg
xchg
sub
and
mov
sub
shll
sub
test
pop
lds
fucom
inc
xor
leave
ror
sbb
xlat
mov
or
subl
lahf
in
cmp
movsl
xlat
int
out
lcall
fnsave
orb
and
arpl
dec
aaa
mov
cmp
out
push
adc
mov
clc
pop
test
cwtl
lcall
xchg
stc
popa
sahf
sbb
mov
jnp
nop
iret
or
ljmp
or
sub
jo
jl
xor
jbe
push
mov
nop
arpl
mov
shr
jae
scas
cmp
lret
movsl
sahf
shll
add
lods
clc
cmpsl
push
cmp
mov
lahf
fidivs
xchg
stos
sahf
fistps
iret
and
add
aas
out
lods
mov
arpl
mov
ljmp
pop
xchg
jge
ja
lods
and
ja
add
jp
dec
ss
testl
out
pop
and
pop
dec
xchg
negb
push
xchg
adc
fld
cmpsb
jbe
inc
jns
xchg
ss
push
and
inc
imul
and
leave
lret
loope
adc
shll
jbe
mov
xchg
xchg
inc
sbb
push
mov
fstpt
jp
insl
fmul
cmp
cmp
leave
jnp
push
push
daa
jb
sbb
movsb
inc
xchg
popa
push
shll
sarb
cld
inc
pop
fistpl
adc
outsl
into
lret
cmpsb
push
sarb
arpl
fsub
pop
arpl
sub
push
push
fldl
push
pop
pop
jecxz
inc
xchg
cmp
push
push
xchg
std
fs
inc
fidivrl
test
in
push
mov
pop
inc
mov
lcall
add
test
rclb
sarb
mov
int3
insl
ret
out
call
adc
imul
cmp
fnstenv
dec
cmc
data16
in
aad
sub
into
lods
or
xchg
je
fbstp
lret
dec
pushf
mov
cmp
in
jmp
mov
sbb
mov
dec
inc
daa
popa
ret
pop
std
sahf
loope
iret
shrl
enter
stos
dec
dec
mov
in
dec
ret
fiaddl
mov
aaa
mov
sarb
dec
cmp
fstps
cmp
rclb
xchg
push
jns
pop
inc
push
push
insb
stos
pop
call
mov
adc
or
xor
cmpsb
or
mov
sbb
xchg
or
sbb
jo
fnstcw
sub
pop
adc
jg
xor
and
into
jmp
mov
je
imul
fimull
aas
add
out
push
icebp
xchg
xor
mov
fildll
aas
dec
adc
sub
mov
mov
fidivs
mov
outsl
popf
iret
testb
push
dec
ds
testl
das
cmp
add
mov
mov
fcmovb
and
pop
and
icebp
and
filds
repz
adc
sahf
mov
jge
push
and
fninit
jl
push
push
pop
cmpsb
and
gs
inc
leave
mov
testl
mov
subb
mov
sub
std
shrl
je
je
loopne
cmp
inc
imul
ds
xchg
pop
jmp
cmp
test
and
inc
sbb
lret
jl
loopne
xchg
stos
sbb
lahf
das
sar
sbb
ret
push
push
push
ret
jl
jne
mov
imul
xchg
mov
daa
test
sub
jo
xor
fcoms
lods
push
or
jp
lcall
mov
sti
push
test
add
mov
push
jmp
jo
out
lea
movsl
push
fidivl
push
fbld
aam
nop
dec
orb
daa
jno
dec
stc
fwait
lds
repnz
ds
pop
push
es
mov
stos
fwait
xchg
jge
gs
in
xor
cmova
and
lret
cld
aas
pop
clc
pop
adc
mov
aam
xchg
jl
push
stos
jg
lock
xchg
ret
out
pop
mov
ret
inc
in
jg
subl
std
push
testb
pop
jbe
iret
es
imul
push
sti
cmpl
outsl
mov
push
insb
fstl
inc
add
enter
es
dec
bound
add
xchg
insl
movsb
test
repnz
pop
sbb
fistpl
add
jo
or
xchg
mov
pushf
lahf
andb
xchg
mov
xchg
pop
pop
aad
mov
sub
mov
daa
stos
movsb
sbb
mov
or
and
ljmp
fistps
xchg
outsb
movsb
mov
mov
pop
jge
pop
imul
out
into
out
push
sbb
sbb
leave
out
adc
push
fmul
stc
dec
mov
xor
cltd
mov
cmp
shll
cmp
cmpsb
sub
shrb
sti
inc
jecxz
lret
int3
ja
ficomps
dec
sub
sarb
sarl
les
mov
insb
inc
add
add
mov
test
mov
xor
fisubrs
leave
loope
and
imul
push
xchg
std
call
xchg
test
pop
sbb
lds
insb
out
sbb
fcomps
loope
mov
jl
aad
xor
fcompl
xchg
les
cld
out
insl
xchg
adc
and
jne
cmp
in
sarb
ljmp
sbb
in
in
mull
adc
outsl
int3
aas
ret
pusha
jnp
mov
inc
int3
cld
aad
das
jns
sub
lret
sub
cmp
sbb
ret
pxor
cmpb
fidivs
sbb
fdivrl
fstl
mov
in
mov
push
inc
add
cmp
out
in
sbb
push
mov
adc
aaa
adcl
jmp
mov
or
pop
outsb
and
xchg
outsb
mov
jne
in
je
pop
cmp
and
cmpsb
leave
repz
xor
scas
inc
aaa
xor
insl
pop
pop
addl
dec
punpckhdq
xor
cmc
push
add
mov
in
call
add
push
popa
mov
mov
ret
mov
decb
mov
jmp
sbb
ss
push
lods
popf
or
pop
sti
xchg
mov
pop
xchg
add
jne
outsb
sbb
mov
mov
mov
xor
mov
ja
pop
pop
lcall
rorb
js
mov
or
add
sbb
mov
mov
cmp
cmp
mov
cwtl
rorb
enter
pop
mov
shrl
jo
add
mov
stos
mov
sbb
dec
test
cmp
xorb
jp
push
ja
mov
jg
lret
lods
flds
lods
mov
jmp
xchg
orb
in
jne
xorb
loope
pop
mov
add
jle
scas
push
enter
imul
sbb
push
int
mov
inc
sub
inc
cmp
xchg
and
sbbl
imul
push
js
sbbl
mov
xchg
hlt
cmp
imul
mov
insb
mov
sbb
mov
sub
xor
negb
insb
nop
movsl
cwtl
or
mov
imul
cmp
sar
dec
pop
cld
push
mov
xchg
or
jmp
les
ljmp
in
inc
push
je
in
aaa
or
sbb
adc
pop
push
and
clc
and
jbe
es
push
xchg
pop
cmp
inc
stos
lds
jne
loop
mov
mov
xor
pop
fisttps
dec
jno
xchg
das
sub
push
aam
out
inc
data16
dec
pop
ret
dec
adc
or
jno
sbb
popa
jle
fwait
mov
push
dec
sbb
es
cmp
arpl
stc
cmpsl
pop
mov
stos
js
leave
pop
sahf
mov
xor
add
pop
push
pop
clc
inc
popa
loop
xchg
pop
pop
push
xor
pop
fdivs
movsb
jno
pop
pop
es
mov
popf
scas
or
jnp
inc
xchg
int
xor
push
enter
or
idivb
popf
sti
push
inc
inc
ret
int
or
mov
out
sub
pop
dec
mov
xlat
imul
ljmp
hlt
push
fistpl
inc
lods
sbb
cli
sub
shl
inc
in
incb
fdivrs
into
stc
in
roll
subl
arpl
inc
inc
clc
fisubs
and
add
addl
mov
aam
add
call
test
mov
push
jo
lods
sbb
push
jl
test
adc
lods
xchg
stos
jmp
adc
pop
pop
dec
outsl
and
inc
jecxz
xchg
jl
add
testl
inc
mov
sarb
xchg
pop
adc
jl
cmp
dec
mov
push
fisubl
dec
dec
jmp
push
add
mov
pop
mov
out
outsb
mov
mov
cmc
inc
sar
lods
lods
int3
pusha
rorl
mov
enter
hlt
pop
pop
pusha
sbb
shrl
cmp
and
icebp
out
out
sti
cmp
mov
mov
add
dec
dec
cld
or
lock
leave
sub
mov
shrl
mov
mov
inc
rclb
lahf
cmp
jns
in
imul
int3
push
imul
notl
or
pop
out
or
xor
iret
hlt
add
sbb
lea
rorl
mov
in
mov
es
xchg
xchg
fsubs
mov
xchg
jl
and
fisttps
int
sub
xor
out
notb
test
je
stos
std
cmc
popf
lret
jo
aam
jns
loopne
orl
jns
mov
shll
pop
add
pop
mov
lock
mov
pop
jns
scas
mov
pop
repnz
fcmovbe
divl
fnstcw
pop
stos
adc
push
push
imul
shl
add
jmp
sbb
mov
mov
into
test
sub
fdivr
sub
or
out
shr
jecxz
aam
cmpsl
sbbl
cmc
pop
ss
sbb
lds
push
fisttpl
aam
lret
sbb
or
stos
sbb
in
xchg
ret
testl
mov
push
loopne
popf
cmp
lock
adc
push
adc
xchg
and
js
test
cmp
icebp
ror
popf
xor
dec
xor
xchg
xchg
clc
xor
jge
cmp
stos
add
jo
rcrl
lods
sbb
cli
jecxz
sub
arpl
in
dec
mov
fiadds
pop
adc
lahf
daa
and
aad
ljmp
cmpsl
mov
mov
dec
sub
repz
sbb
and
rorb
inc
ret
mov
mov
sub
sub
add
in
sahf
repnz
xchg
incl
cmp
movsl
mov
lret
push
mov
sbbl
inc
outsl
push
pop
and
faddl
jo
pushf
popa
mov
imul
xchg
mov
ficoml
nop
cwtl
repz
xor
call
ja
jno
push
cmc
pop
fnsave
cmp
ret
mov
loope
mov
je
jmp
mov
in
pop
adc
push
sub
mov
subl
dec
pushf
and
cltd
xchg
cmp
nop
mov
push
xchg
and
lcall
cs
insb
mov
adc
fistl
push
inc
sahf
int
roll
dec
jno
cmc
fcomp
test
xchg
dec
adc
cmpsb
jns
xor
stc
xchg
je
in
cmp
lods
mov
mov
jne
sbb
hlt
into
mov
cmp
mov
iret
jge
rcrl
call
rorl
pop
lds
sub
pop
xchg
or
test
xor
inc
and
fs
push
cmp
cmpsl
fildl
call
xor
insb
in
fwait
rcr
subb
cmc
pop
repz
pop
daa
inc
rcrl
mov
mov
fldt
mov
xchg
push
push
mov
cmc
add
inc
out
and
vpackuswb
es
ret
xchg
cmp
or
lcall
test
adc
mov
inc
sub
ljmp
or
stos
sarb
sub
fneni(8087
repz
push
bound
jp
mov
or
mov
das
out
adcb
pop
sbb
fs
ljmp
mov
mov
ljmp
pusha
lods
mov
out
push
ds
sub
add
xor
mov
ja
popf
push
adc
cmc
xorb
adc
nop
sbb
adc
mov
imul
dec
arpl
lock
aad
xor
aam
outsb
and
fisubrs
dec
pop
xadd
bound
mov
sti
jp
push
repnz
loopne
addr16
fmul
xchg
ret
cmpsb
mov
push
pop
mov
jl
daa
xor
lret
int
dec
popa
xorl
xlat
sahf
jno
out
push
inc
mov
shlb
and
sbb
std
nop
add
shl
jne
shlb
stos
jne
xor
sub
or
push
push
cwtl
mov
sbb
pusha
or
js
fbld
rorl
ret
rcll
adc
jb
cmp
jp
pushf
in
fnstcw
dec
mov
ret
pop
xchg
push
sub
aaa
aas
shl
xchg
arpl
aas
cmp
jno
cmc
mov
popa
xlat
mov
mov
xchg
fucomip
xor
pop
xchg
mov
mov
cltd
out
sbbl
push
stc
xchg
in
push
sub
repnz
dec
mov
ljmp
out
dec
popf
push
inc
inc
xor
repnz
xor
test
lea
mov
cli
mov
outsl
gs
mov
sbb
inc
repz
mov
inc
mov
or
inc
mov
push
aaa
push
test
das
mov
cmp
add
pop
lods
pop
adc
pusha
ret
popf
pusha
enter
adc
or
in
imul
push
xor
outsl
and
popl
pop
mov
or
ja
jge
pop
pop
fs
cmpsb
and
int3
inc
addr16
xor
rcrl
iret
mov
sar
jno
rol
mov
test
cmpl
mov
dec
cli
pop
mov
shr
int3
mov
dec
or
inc
add
mov
mov
arpl
mov
inc
int
pop
outsl
add
push
lahf
adc
sub
mov
lea
cmp
jecxz
jb
pushf
dec
sbb
and
dec
jl
mov
mov
xchg
mull
mov
sarl
sbb
adc
scas
scas
ss
test
out
dec
pushf
or
test
jns
cmp
std
outsb
or
xor
cwtl
cli
ds
addr16
mov
repz
sti
push
dec
js
fs
adc
test
push
inc
adc
repz
insl
jns
aaa
dec
sbb
push
inc
movsb
and
lods
or
adc
jle
jne
cmp
adc
sub
push
into
stos
fsubs
stos
pop
movsb
sub
mov
outsl
lods
or
xor
or
mov
mov
cmp
popa
xor
ret
stc
call
mov
fs
jns
hlt
add
add
bound
fwait
lret
mov
ret
xor
pop
adc
add
insb
ss
int
pushf
in
pop
jmp
imul
jnp
mov
sub
call
lcall
in
rorl
imul
loope
pop
lds
adc
je
xchg
into
sbb
cmp
xchg
sub
jp
in
cmp
arpl
adc
and
jmp
push
movsl
int
pop
cld
mov
sarb
dec
les
loopne
pop
arpl
lock
add
sbb
mov
bound
cltd
mov
sbb
testl
roll
ror
pop
jnp
arpl
rorb
out
das
cltd
push
stos
jno
cld
fwait
and
push
mov
xlat
std
xor
adc
cmp
subl
jmp
xor
mov
or
cmc
push
jb
arpl
mov
adc
ret
sbb
repnz
arpl
mulb
pop
addl
movsb
sar
nop
xchg
xchg
out
add
mov
mov
loopne
add
sub
xor
dec
sub
pop
stos
les
sub
cs
mov
sub
inc
push
fdivr
fdivrl
loopne
xor
ss
outsb
ds
fisttpl
push
mov
sub
xor
testl
adc
mov
adc
mov
cmpl
enter
jle
test
push
and
lea
add
sub
scas
add
fldenv
and
cs
cmpsl
add
std
xchg
lea
xchg
adc
push
ret
mov
loopne
jo
jnp
jle
inc
push
jecxz
or
push
pop
aam
jl
xor
inc
jnp
push
in
sbb
roll
popf
int3
mov
pop
test
sub
data16
ret
in
push
xchg
cmp
adc
push
sbb
dec
xor
and
not
jge
pop
call
sbb
sub
fs
cmp
xorl
jge
pushf
movsb
adcb
std
shlb
ja
fisttps
inc
pop
frstor
xchg
rcrb
jp
xor
lods
lods
pop
push
sub
jb
jecxz
sti
enter
xlat
cmp
add
pop
or
loope,pn
inc
shr
push
bound
inc
jo
pop
inc
xor
or
and
push
clc
rolb
or
mov
pop
leave
into
xor
pusha
stos
notl
pop
call
push
dec
jbe
lret
add
decb
sub
popa
sbb
cmp
mov
fildll
pushf
addr16
test
mov
testl
pop
jns
pop
sbb
popf
fs
flds
dec
inc
andb
sbb
aad
bound
xchg
xchg
cmc
subb
jbe
and
or
mov
test
inc
adc
in
mov
shll
xchg
loopne
jge
rep
and
cmpl
mov
and
lods
pop
cltd
and
std
ficompl
inc
xchg
fistpll
pop
enter
insb
out
mov
or
xchg
cmp
fwait
pop
mov
jnp
les
pop
sbb
into
fildll
mulb
cmp
lea
ljmp
pop
dec
adc
push
dec
movsb
pop
aas
ljmp
push
mov
leave
outsl
jecxz
lret
xor
pop
fsubrl
loope
test
push
shll
push
push
cmp
dec
decl
cmp
jmp
mov
fcmovu
movsl
adc
movsl
shl
lahf
mov
repz
push
push
or
fildl
sarb
sub
outsl
or
idivl
dec
andb
sbb
incl
inc
test
int
test
mov
pop
test
incl
sbb
push
sahf
stos
cld
mov
xor
imul
cmp
mov
fnstenv
shrl
mov
int
push
mov
mov
mov
jae
sub
ret
push
dec
mov
xor
aas
adcl
mov
sub
jecxz
cmpsb
jb
inc
jl
mov
mov
or
xlat
or
xor
mov
je
mov
pop
or
in
pop
daa
pop
and
mov
add
mov
jne
fstl
shll
out
mov
and
push
xchg
mov
imulb
mov
lcall
stc
iret
in
pop
xor
lcall
rolb
clc
adc
aad
sti
xchg
pop
xchg
gs
ljmp
lcall
cmpsb
rol
bound
leave
popl
aad
xchg
imul
or
mov
out
jns
jmp
ds
fstpt
xchg
adc
push
mov
leave
adc
iret
pop
jb
ja
cli
xor
mov
add
jmp
or
inc
push
mov
rcrl
out
mov
es
fs
mov
mov
les
pop
fisubrl
call
pop
push
nop
out
in
loop
inc
adc
sub
in
pop
repz
mov
movsl
adc
mov
add
push
jne
cs
pushf
out
sbb
pop
add
mov
xchg
fbld
rcrl
lds
mov
leave
mov
cmp
movsl
loope
out
add
xchg
flds
test
mov
xor
cmp
clc
fidivl
xor
push
adc
jmp
dec
sahf
jg
mov
jmp
xchg
sub
add
inc
or
clc
jb
mov
inc
pushf
dec
cwtl
xchg
bound
push
popa
les
mov
leave
cmp
es
or
sbb
pop
cmp
lret
arpl
lods
out
out
push
or
cmp
sbb
xor
sahf
sbb
xor
loop
dec
arpl
sub
arpl
test
adc
mov
inc
cmpsl
mov
sahf
test
out
push
add
mov
ja
or
add
xchg
popf
or
and
hlt
mov
outsb
cmpsb
stos
cltd
cli
cli
inc
out
popf
insl
ret
sub
xor
jecxz
sub
and
xor
mov
mov
andl
test
movsb
push
into
imul
or
icebp
mov
addb
sub
rorl
or
sahf
add
mov
xchg
push
stc
out
lahf
push
in
mov
and
insl
sub
test
dec
sub
adc
mov
fists
mov
sub
sarb
add
or
ja
je
cmp
sub
hlt
and
and
pusha
in
add
inc
popa
not
outsb
out
pop
out
int
rclb
notl
push
ja
sti
movsb
cmp
cmc
movsl
aam
outsl
sbb
pusha
or
ret
mov
movsb
gs
pop
lahf
fbstp
montmul
cmpsb
ret
shll
ftst
inc
push
mov
sub
sbb
repnz
pushf
ljmp
popa
push
fists
add
clc
or
cmp
inc
push
mov
xlat
fstpl
fistpll
pop
cli
nop
roll
jne
stos
cmpb
push
mov
mov
xchg
mov
or
mov
xor
push
cltd
lock
adc
xor
pushf
fnstcw
cltd
aas
sbb
ljmp
filds
inc
test
out
stos
lret
test
insb
out
outsb
daa
in
or
mov
insl
test
inc
fwait
pop
mov
inc
pop
movsl
clc
cltd
lea
sbb
mov
arpl
cld
test
pop
mov
popa
aas
add
sbb
fildll
mov
in
adc
fdivrs
mov
ret
or
sbb
and
pop
int3
cmp
and
cmp
push
fldt
pop
dec
pop
xchg
jl
inc
std
xchg
cmp
mov
cs
xlat
pop
xor
xchg
mov
std
pushf
pushf
movsl
pop
pusha
jae
lcall
xchg
xor
sub
pop
jns
dec
out
mov
addr16
rcr
mov
stos
in
push
dec
jmp
lds
arpl
cmp
fsubr
mov
ret
jbe
testb
vmaxps
fstpt
dec
pop
sbbl
stos
clc
and
sbb
in
mov
repz
imul
and
fcoml
jle
sarb
es
sub
mov
test
out
aam
and
stc
push
imul
out
dec
jecxz
icebp
xchg
jmp
lcall
cmpsb
jmp
repnz
mov
jmp
icebp
cltd
mov
fwait
lods
test
sub
mov
push
add
sbb
push
pop
add
cmp
fbstp
lahf
aas
mov
cmpsb
aad
cmp
pop
pusha
andl
lcall
loop
sbb
push
add
xchg
mov
ss
dec
je
testl
divb
out
or
pop
scas
cmp
stos
or
or
rcll
fstps
and
sub
fdivrl
iret
outsl
rcrb
in
jecxz
insl
ja
arpl
dec
jb
jo
out
cmc
cli
jnp
xchg
ja
imul
inc
sbb
nop
call
xlat
push
imul
lcall
xorl
cmp
xchg
jl
mov
stc
add
rsm
imul
jns
push
imul
xor
loop
xchg
cmpb
or
xchg
aam
test
icebp
cmp
std
mov
aas
cmp
adc
sub
lock
out
sarl
sti
out
movsl
push
jecxz
mov
mov
adc
mov
xchg
leave
pop
mov
jmp
and
clc
pop
aas
jg
nop
adc
mov
mov
orl
out
xchg
gs
xchg
in
pushf
add
cmpsl
pop
jmp
xchg
shlb
mov
or
punpcklbw
out
sbb
rolb
dec
push
or
dec
add
jp
loop
mov
jg
mov
add
outsb
ret
jbe
pop
xor
and
adc
aam
mov
pop
pushf
lahf
xchg
xchg
dec
fdivrs
cmp
mov
jnp
mov
rorb
dec
fstl
scas
xorb
addr16
cmp
into
shr
imul
out
inc
loopne
and
mov
stos
sbb
outsb
test
loop
lds
pop
in
test
inc
mov
sub
push
mov
jg
mov
mov
add
dec
shlb
es
jmp
mov
int
jo
lds
jnp
scas
filds
std
rcll
lea
and
xchg
inc
sarb
jl
out
imul
mov
in
jg
mov
ret
sbb
xchg
sahf
pop
lods
lea
negb
es
pop
pop
add
scas
aas
shrl
sub
push
xor
scas
ret
adc
push
lods
xorb
aaa
xchg
push
dec
rolb
sub
xor
mov
and
cwtl
ljmp
in
js
pop
dec
mov
in
repz
js
inc
dec
jg
pop
dec
aad
add
test
add
jg
pop
aas
cmp
addr16
rorl
cld
aad
sti
jnp
addr16
fcmovnbe
jno
adc
pop
lods
bound
sbb
movsl
cmp
rclb
aas
jg
jno
data16
shrl
and
jge
add
adc
lea
sbb
pop
popa
stc
push
popa
xlat
mov
nop
add
or
fists
test
insl
fwait
cs
jl
push
repnz
mov
mov
out
pop
inc
nop
push
ljmp
fcomi
sbb
addb
clc
lahf
mov
loopne
fstps
imul
xchg
cli
lods
sub
fldenv
mov
ja
insl
fstp
in
mov
xchg
or
dec
fidivrl
enter
loopne
fcompl
out
jg
cs
call
aaa
inc
mov
or
xchg
imul
mov
rcr
es
test
and
fstpl
mov
loope
sbb
cld
cwtl
sbb
adc
inc
ret
xchg
dec
out
incl
idivb
jg
inc
aaa
sahf
mov
in
xchg
mov
jne
cmp
cmp
jle
mov
hlt
lock
and
add
xchg
ret
and
aad
add
aam
int
pushf
lahf
push
imul
push
lods
sub
iret
cmpsl
pop
mov
pushf
test
repz
or
sbb
lret
fnstcw
cs
int
addr16
fadd
jp
pop
jecxz
bound
sub
clc
lret
xchg
xchg
inc
out
or
jecxz
mov
in
jle
jb
or
jmp
out
stos
lcall
jae
pop
rcr
sub
cmc
orl
sbb
mov
xchg
mov
ret
push
mov
clc
repz
or
adc
out
repnz
test
and
cmpl
sub
aaa
sbb
fists
fstpt
pop
call
pop
scas
add
scas
adc
sub
iret
sub
daa
dec
cld
icebp
mov
push
mov
enter
jns
add
mov
xchg
push
inc
sbb
sub
call
popf
sbb
push
pop
add
or
roll
mov
push
mov
xchg
fisubs
push
jb
lcall
sbbl
in
lods
fisttpll
cmp
lret
sub
icebp
scas
lods
jne
scas
or
mov
jmp
aas
test
jl
sub
into
adc
mov
xchg
xor
insl
mov
and
aad
pop
or
loopne
push
js
adc
mov
cmp
adc
aaa
mov
loop
shll
repz
cltd
sub
push
and
mov
or
xor
push
sbb
stos
adc
aaa
push
and
and
mov
inc
or
into
inc
jne
repz
cmpsl
mov
dec
mov
mov
push
cmpsl
lds
fmul
test
outsb
jno
mov
add
cmp
outsl
pushf
pop
add
pushf
sub
mov
cmp
xor
lods
sbb
popf
lahf
adc
cmc
push
pushf
xor
push
inc
sbb
into
fisubrl
insl
adc
dec
fdivs
cs
xor
aas
imulb
jb
addl
push
mov
push
xor
xor
dec
sbb
ret
mov
or
lods
lea
dec
xchg
adcb
inc
push
lret
in
aad
aam
leave
push
mov
inc
icebp
stos
jp
into
repnz
dec
das
fxch
xchg
cmp
movsl
jo
ror
mov
daa
dec
out
or
clc
push
gs
pop
and
imul
xchg
add
sbb
int
inc
cmp
sbb
sub
sub
xchg
stos
das
mov
push
cld
push
std
mov
movsb
cmpsb
insb
lret
jmp
mov
fwait
mov
push
xlat
push
push
or
js
xlat
stos
lahf
mov
sbb
xchg
addb
push
in
push
xchg
cmpsb
adc
aaa
jno
dec
icebp
outsl
nop
in
scas
push
in
cmpl
xchg
xchg
enter
mov
shl
add
dec
stc
pop
and
sub
das
xchg
mov
xchg
jecxz
mov
jns
std
xor
xchg
scas
jns
sbb
dec
xor
jmp
pop
subb
aad
xor
insb
mov
outsb
xor
push
sub
jmp
test
jl
add
dec
mov
lds
movsb
out
pushf
repnz
cmpsb
push
xchg
insb
std
ja
dec
mov
std
movsb
xor
das
mov
and
mov
lret
les
mov
fistl
push
sarl
push
cltd
xchg
fistpll
or
or
mov
out
inc
pop
or
pop
sahf
xchg
xor
mov
pop
fildl
xor
call
stc
jne
cmp
pop
xchg
stc
mov
pop
leave
int3
notl
ret
std
xchg
xchg
mov
in
dec
leave
loopne
push
in
hlt
ja
ds
enter
ret
fmull
sub
pop
cmp
les
sti
push
js
or
lods
sub
sub
pop
sbb
sbb
xor
mov
or
ja
xchg
inc
mov
cmpsl
lret
imul
adc
aas
pop
icebp
dec
aaa
or
insb
pop
les
push
sbb
push
xor
fistps
std
jne
jnp
mov
enter
jbe
push
subb
enter
cltd
push
cld
or
repz
out
and
out
dec
add
sub
push
or
dec
popf
pop
xchg
pop
es
sbb
pusha
fcoml
cmpsb
jo
fwait
sub
inc
add
xchg
adc
in
lcall
adc
cs
xchg
xchg
cs
jno
and
jl
in
lret
sbb
repnz
sub
je
pop
jle
rcl
mov
stc
test
mov
test
sbb
push
into
sbb
mov
mov
push
or
std
ret
mov
sbb
in
mov
movsl
sub
in
sbb
clc
ss
dec
and
sahf
std
shrl
adc
or
test
inc
mov
mov
jns
xchg
fdivl
lret
push
ret
fwait
inc
and
lea
test
jb
pop
push
jae
rolb
lcall
adc
in
cmp
cmp
push
out
sbb
pop
out
cmc
shll
ss
sahf
pop
sub
sub
scas
jge
mov
cld
cmp
dec
adc
adc
cwtl
mov
pop
lret
pop
or
movsb
andl
xchg
add
int
mov
xchg
bnd
dec
dec
add
or
movsl
ljmp
scas
pop
mov
sahf
ret
cmp
aas
xabort
in
sbb
cltd
push
call
push
add
add
rcrb
inc
cmp
loopne
out
mov
inc
xchg
popf
sti
mov
test
cli
fidivs
and
inc
ja
shlb
cmpsl
sbb
jecxz
dec
cmpl
insl
add
movsb
xchg
aad
pop
cmp
mov
lds
pop
push
rorl
xor
fs
inc
inc
lds
mov
data16
fisttps
aas
cmpsl
enter
jle
ret
mov
and
push
xor
fwait
jo
outsb
out
ds
mov
xchg
sub
or
xchg
test
imul
dec
xchg
adc
out
push
leave
adc
imul
jbe
aas
enter
imul
or
add
jmp
dec
jne
lcall
add
mov
pop
ret
outsl
push
insl
leave
ljmp
cmp
push
sub
mov
subl
mov
xchg
and
cmp
pushf
xor
sub
inc
jb
out
aas
xchg
or
in
imul
mov
push
lret
xchg
mov
mov
cmp
push
mov
push
push
fs
pushl
imul
pop
inc
out
inc
add
leave
cwtl
in
and
mov
push
dec
add
in
mov
sub
les
mov
aaa
movsb
mov
mov
mov
push
leave
aad
xor
dec
jnp
int
or
sbb
pop
cld
sbb
mov
lcall
dec
stc
xor
mov
mov
repnz
cmc
rep
mov
add
sarb
lock
pop
inc
sub
lcall
pop
inc
mov
fs
call
inc
dec
js
loopne
mov
cmp
inc
mov
nop
or
add
mov
loopne
repz
andl
lds
push
add
pusha
dec
pop
add
je
push
icebp
inc
lds
inc
imul
push
lds
js
mov
xchg
push
jmp
clc
push
shlb
les
cmpsb
jno
adc
mov
mov
test
clc
mov
jae
xchg
mov
sub
ret
std
into
push
in
test
xor
lahf
jmp
sub
push
repnz
cmp
inc
stos
fldenv
out
mov
leave
dec
and
insl
fdivrs
repz
jns
jbe
mov
imul
not
add
das
bound
cmp
outsb
mov
iret
or
fistl
jecxz
leave
daa
mov
cs
mov
fidivrl
pop
popf
push
jb
mov
cmpsb
nop
ja
jg
xor
push
and
lahf
addr16
mov
push
cld
pop
arpl
mov
sti
inc
movsb
shr
cmp
xor
sbbl
cs
mov
sub
or
sub
dec
orb
cmp
push
dec
add
sbbb
fmuls
fs
mov
gs
push
daa
into
pop
loop
jmp
inc
add
insl
xchg
xchg
aaa
xchg
cmp
lcall
mov
or
lret
xchg
insl
in
push
insl
ror
jno
lods
jecxz
test
ss
popf
pop
shll
push
sarb
movsl
mov
subl
sbb
fisubs
push
add
cltd
inc
mov
mov
insb
icebp
mov
aaa
add
or
cli
ljmp
dec
into
punpckhdq
aaa
add
mov
pop
or
push
rorl
mov
es
mov
lret
pop
test
adc
push
shrl
enter
mov
push
adc
je
and
cwtl
fwait
daa
or
hlt
call
sbb
add
mov
repz
fcmovu
stos
push
push
inc
imul
arpl
cs
test
jle
inc
push
scas
push
jmp
stos
push
mov
push
or
sbb
in
jmp
push
or
mov
mov
cmp
scas
mov
xchg
cmp
xor
popa
jl
cmpsl
repnz
daa
xor
pop
or
mov
fildll
or
inc
imulb
inc
xor
jp
pop
rcrb
ljmp
cmc
sahf
add
fcmovnbe
xchg
hlt
cltd
mov
adc
xor
and
push
sub
test
loope
jl
les
aam
add
mov
push
lods
dec
inc
movd
mov
mov
pop
aaa
sbbl
insl
mov
xchg
adc
mov
xlat
cwtl
movsb
xchg
in
cmp
popf
jb
mov
iret
movsb
mov
push
ret
mov
loopne
ljmp
imul
mov
test
sub
imulb
mov
add
cmpsb
push
stos
mov
test
mov
addr16
lods
les
fadds
cld
arpl
enter
lods
xlat
movsb
shrb
cli
out
mov
xchg
pushf
mov
jne
or
outsb
psrlq
jmp
push
std
mov
mov
push
fwait
jecxz
and
adc
inc
or
into
lahf
shl
aas
inc
xor
jbe
jp
pop
lea
jae
jge
movsl
pop
bound
scas
adc
lds
int3
adc
jl
push
mov
and
cwtl
jp
cmpsb
sarb
mov
outsl
add
dec
in
mov
ror
adc
cld
push
sub
push
or
rorl
xor
out
or
dec
add
fmull
loop
lcall
xor
adc
ljmp
dec
mov
inc
fld
and
shl
jae
in
push
fwait
mov
push
add
into
iret
or
cwtl
lds
mov
and
test
repnz
imul
lods
sub
xchg
jg
xchg
insb
mov
imul
in
adcl
rorb
adc
cmc
mov
leave
push
push
push
scas
add
xchg
mov
xor
stos
xchg
fsubrl
sub
sbb
jg
sarb
addr16
in
xlat
ret
sbb
mov
repnz
movsb
adc
out
ss
iret
add
push
arpl
dec
jae
inc
xchg
call
cmp
jno
adc
data16
push
out
lea
ja
out
dec
pushf
jbe
movsb
mov
lds
push
mov
adc
sbb
aad
shlb
pop
jecxz
adc
mov
scas
out
sbb
and
mov
or
jmp
bound
rclb
js
outsb
mov
xor
rol
xchg
adc
push
xchg
push
pop
pop
xchg
rcll
sub
mov
sbb
cmp
shrl
or
clc
popa
push
roll
fnstcw
ljmp
enter
and
xor
scas
mov
ss
mov
adc
repz
mov
mov
bound
pop
movsl
jl
push
sti
ret
mov
lock
mov
ror
insl
and
pop
xchg
es
dec
fsubrs
cmp
mov
loopne
scas
lods
and
adc
xorb
in
fcmovnb
mov
ds
xchg
lods
fnstsw
aam
ret
push
mov
mov
mov
decl
rol
push
mov
inc
scas
imul
out
insb
sbb
repz
adcl
add
dec
fisubrs
jp
dec
mov
mov
lret
or
push
mov
sbb
jge
testl
sub
cmpsb
movsb
pop
js
push
pop
dec
jp
sarb
cmc
and
mov
lods
lret
mov
dec
add
dec
mov
movsl
cwtl
xchg
push
stc
add
xor
or
xor
mov
mov
jno
icebp
std
ja
call
sahf
cmp
popa
adc
lahf
daa
icebp
inc
imul
sub
fcompl
mov
or
maxps
cmp
cmp
fdivrs
ds
loop
es
movsl
mov
ret
and
das
sahf
sbb
inc
push
lcall
push
gs
test
mov
inc
add
sub
or
push
sahf
pushf
shlb
pusha
push
push
xchg
xor
push
fwait
xor
jno
repz
loope
sbb
outsb
jl
cli
push
pop
mov
popa
push
fistl
jge
add
mov
mov
out
mov
push
gs
adcl
test
int
jae
ljmp
and
in
xor
sub
and
or
ds
int
pop
mov
cmp
leave
fisubl
push
jno
adc
dec
or
aam
and
sub
cld
ja
adc
sub
cmp
xor
push
and
les
mov
xor
sbb
ret
imul
sbbb
daa
inc
call
push
shl
bound
dec
lea
movsl
mov
mov
mov
sti
cmp
jl
mov
fstp
adc
push
mov
mov
pop
xchg
iret
push
mov
loopne
and
jne
leave
mov
dec
stc
mov
mov
lret
jbe
test
mov
icebp
fwait
stos
repnz
pop
stc
test
loop
push
adc
es
lret
push
outsb
test
outsl
fidivs
and
cmp
sub
xlat
mov
dec
lea
cmp
fs
jmp
shll
pop
arpl
push
imul
lds
adc
clc
mov
push
pop
leave
loop
jg
int
dec
repz
mov
xchg
fwait
mov
lret
add
jecxz
pop
imul
out
dec
out
cmc
xchg
xchg
push
pop
adc
out
inc
push
popf
out
push
shr
fs
and
scas
idiv
mov
inc
lods
movsb
popf
lcall
pop
unpckhps
jae
xlat
xchg
add
sbb
std
push
mov
dec
nop
aas
xchg
lods
ret
pop
and
mov
clc
mov
inc
mov
cltd
out
call
int3
dec
in
jmp
cmp
popf
sbbl
mov
or
dec
jecxz
pop
divl
stos
push
pop
pop
sbb
clc
pop
add
mov
lret
and
bsf
xor
sbb
arpl
fwait
push
lods
lret
push
push
dec
push
cmp
xor
sub
aad
dec
test
in
sub
imul
mov
icebp
test
stos
push
inc
push
insl
stc
xor
xchg
inc
into
in
inc
and
sbb
mov
cmp
cmp
pop
jmp
cmp
and
ja
repnz
mov
repz
push
jno
mov
xchg
insl
push
mov
shlb
sbb
sbb
pop
jae
rolb
mov
push
adc
fs
stc
test
loopne
sbb
sbbb
and
adc
xchg
es
xor
into
popa
cltd
loopne
movsl
test
mov
push
into
push
jmp
pop
inc
xchg
iret
and
xchg
inc
movsl
and
push
ja
pop
jno
data16
mov
sub
and
popf
mov
mov
repz
nop
pop
inc
adc
xor
rolb
sub
fs
mov
xchg
test
in
popa
push
ret
std
dec
aaa
cmp
fbstp
xlat
add
icebp
adc
pop
push
iret
and
fmuls
cli
scas
jl
sbb
fdivs
out
push
dec
mov
mov
stos
sti
pop
inc
sub
lret
mull
fwait
outsb
cmpsl
jg
scas
push
cmp
mov
fsubs
mov
clc
rorl
jmp
js
rcll
adc
cmp
stos
mov
mov
movsb
dec
adc
fcomps
push
mov
jb
add
mov
mov
push
xchg
push
jmp
aad
dec
mov
flds
ljmp
cltd
mov
in
pushf
loop
lcall
inc
adc
imul
je
dec
pop
cmp
pop
adc
scas
push
pop
or
fs
cld
fimull
and
xchg
xchg
lea
and
adc
shl
pop
sub
push
sub
or
cld
int3
cmp
in
js
into
out
jp
push
dec
das
cs
mov
je
lods
lock
pop
sbb
div
cmp
xchg
movsl
cmpsb
outsb
aam
add
mov
jnp
push
push
dec
rcr
aas
dec
jb
fidivs
mov
adc
movsl
inc
push
pop
hlt
sub
arpl
call
dec
sbb
mov
mov
xlat
rolb
jae
jae
mov
daa
jo
les
addl
dec
dec
movsl
out
in
ja
out
jbe
lods
and
call
or
ja
mov
sti
mov
inc
fwait
sahf
je
add
divl
lock
add
mov
arpl
scas
jns
loope
sbb
cmp
sbb
jb
out
cmc
movsl
std
loope
add
ss
sub
jge
mov
dec
xchg
push
xchg
pop
cmc
xchg
mov
jno
push
roll
mov
fs
push
enter
inc
imul
je
xor
in
sbb
subl
imul
loop
ja
icebp
or
pusha
bound
ffree
into
sbb
lock
sbb
cli
xchg
mov
pop
mov
mov
push
pop
imul
add
mov
pop
out
mov
insb
movb
ss
out
stc
mov
cmp
mov
xchg
pop
sbb
ds
mov
xchg
mov
jg
insb
cmpb
ljmp
add
cmp
insb
test
or
dec
cmp
add
cmp
icebp
out
dec
jp,pn
pusha
cmp
or
fmul
mov
shll
nop
mov
outsl
mov
insl
popf
mov
mov
mov
movsl
fs
aas
dec
and
inc
dec
lea
mov
pusha
loopne
sbb
adc
mov
cltd
std
negb
nop
mov
rcll
out
je,pt
jecxz
mov
rcll
inc
jb
stc
add
push
jne
call
fstpl
loopne
jae
add
push
sbb
mov
add
ds
mov
lahf
popf
adc
shl
mov
dec
push
xchg
sub
pop
movsb
les
mov
in
mov
cmc
gs
xchg
mov
pop
dec
push
pop
repnz
mov
pop
push
jnp
shll
popf
shrb
add
cli
lcall
xorb
fildl
addl
add
mov
xor
shrb
jae
xchg
push
aaa
jmp
fnstsw
push
jae
mov
cld
lea
hlt
out
mov
or
cmp
xor
insl
adc
sub
js
push
sbb
mov
cmp
xor
and
leave
arpl
push
mov
inc
lret
mov
iret
scas
rorl
or
pop
xlat
sbbb
shlb
leave
mov
mov
mov
dec
xchg
js
jnp
add
inc
sbb
sarb
sahf
loop
pusha
jbe
jns
cmp
lea
idivb
jp
and
out
sbb
or
cwtl
xor
loopne
loope
sbb
sbb
and
sbb
pushl
mov
repz
and
inc
push
aam
sbb
stc
mov
ljmp
movsb
cwtl
dec
dec
cmp
gs
push
pop
lds
push
inc
or
push
pop
iret
dec
mov
fcoms
sub
ss
xor
mov
mov
pusha
jmp
mov
stc
std
jmp
sldt
pop
clc
or
mov
ja
scas
ljmp
push
sub
aas
jp
and
lret
jmp
inc
and
cmpsb
push
sbb
ret
dec
cld
inc
push
xchg
adc
dec
mov
jnp
sub
inc
sub
xchg
cli
clc
cmp
js
sbb
xchg
add
mov
out
sub
das
negb
ljmp
jmp
icebp
dec
sbb
lahf
repnz
fwait
mov
lret
lcall
aam
adc
mov
orb
or
jb
dec
push
jae
inc
out
mov
or
fwait
inc
sbbb
nop
insl
pop
sahf
inc
mov
or
in
sbb
xchg
dec
cld
mov
add
cmp
mov
lcall
lods
or
pop
xor
test
and
dec
sbb
in
fdivrs
push
jecxz
jl
out
add
jg
inc
arpl
inc
pop
xchg
sarb
xor
xor
jbe
mov
mov
push
stc
mov
xchg
pop
neg
loop
js,pn
mov
xchg
push
les
lret
scas
cwtl
pusha
push
orl
pop
adc
mov
scas
stos
mov
dec
scas
cmp
cmpsb
sub
outsb
movsl
xchg
scas
scas
xchg
shlb
fadds
jle
insb
mulb
nop
imul
jb
ret
es
fadds
adc
ret
or
ja
mov
hlt
push
sub
cld
inc
rcrl
adc
mov
push
imul
jnp
shl
mov
push
xchg
repnz
fwait
mov
out
lret
mov
xchg
push
mov
mov
add
data16
adc
cmpsl
lret
jo
and
out
add
mov
lcall
add
cmp
mov
int3
or
sbb
and
sbb
repz
sbb
sbb
test
lods
testl
pop
xchg
lock
sub
mov
insl
jp
aas
enter
shrb
mov
loopne
lods
cli
mov
jg
and
pushf
xor
dec
and
fs
shr
xchg
icebp
adcl
mov
stc
outsb
xor
bound
es
in
sarl
xor
ficompl
dec
add
gs
pop
sbb
aad
push
inc
push
and
pop
repnz
mov
mov
push
aad
jns
or
adcl
cmp
mov
and
loop
pop
inc
push
dec
adc
cmp
pop
fiadds
fnsave
imul
or
pusha
insb
mov
fsubrl
cmpsb
xchg
jmp
sbb
shl
cmp
popa
mov
mov
scas
mov
mov
jl
inc
shlb
cld
jne
xchg
cmpsl
call
ficoms
out
ficompl
enter
sub
jecxz
add
es
sarl
jg
sbb
cmp
cmp
loope
jno
in
adc
pop
jle
lret
add
mov
mov
pop
out
rolb
int
hlt
dec
mov
sub
mov
push
cltd
pop
in
push
sub
sarl
mov
mov
pop
push
loop,pt
cmpsl
scas
or
ret
and
test
inc
pop
imull
xor
int
inc
dec
xchg
jl
mov
push
add
lahf
imul
call
aaa
push
fidivrl
sub
lahf
ljmp
xchg
testl
cmpsl
movsb
jbe
imul
out
jl
icebp
ljmp
sahf
movsl
sub
outsl
pop
les
fwait
andl
cmp
sbb
rolb
lds
movsb
sbb
push
ds
mov
mov
xchg
movsl
adc
int
movsb
pushf
or
lret
movsb
sbb
adc
mov
sub
inc
xchg
mov
and
insl
adc
arpl
xor
inc
mov
and
stc
in
inc
cltd
pop
push
iret
leave
repz
out
repnz
push
mov
pop
lods
cwtl
mov
mov
lods
fldcw
sbb
pusha
xchg
adc
sub
push
js
bound
push
cmpsb
dec
lods
jns
aaa
push
pusha
sahf
xchg
mov
jg
adc
jl
add
and
sbb
xchg
ror
push
push
ljmp
push
les
and
ret
jp
xor
mov
aas
and
lahf
rorl
cmpsb
inc
jg
xchg
cli
cmpsb
adc
add
test
sahf
cltd
lock
push
and
lret
loopne
dec
das
sbb
hlt
xchg
popf
shl
xor
inc
lcall
fsubs
jg
les
std
cmp
push
push
cmpb
jle
mov
dec
scas
imul
xchg
std
jbe
cmp
cmp
sub
mov
lret
repz
xor
mov
and
mov
incl
jge
xor
out
out
pushf
pushf
cwtl
out
popf
sahf
push
cmc
popa
daa
cwtl
out
mov
or
adc
jb
xchg
testb
repnz
xor
mov
mov
xchg
jb
sti
ss
hlt
lahf
adc
adc
jbe
cld
push
mov
ret
ja
testb
lretw
push
cmp
daa
adc
push
ljmp
push
push
mov
jns
inc
ficoml
iret
js
lcall
add
mov
stos
outsl
mov
movsb
mov
mov
lret
push
cwtl
mov
outsb
test
or
jb
les
loope
repnz
sub
test
addr16
cmp
dec
mov
jno
int3
mov
xor
pop
ret
stos
test
cltd
iret
adcb
insl
pushf
mov
push
fcmovnu
out
lret
adc
sub
adc
xlat
sahf
sub
dec
pushw
jae
sti
test
sbb
pop
xchg
push
test
dec
xchg
dec
leave
test
mov
cmp
insb
jne
dec
addr16
insl
scas
xchg
dec
rclb
and
xlat
cmp
jle
dec
in
stc
clc
stc
fildll
ljmp
jecxz
in
xor
int
loopne
ret
mov
and
js
xchg
jo
jp
xchg
mov
add
inc
ss
pop
dec
fs
dec
sarb
pop
fnstenv
sub
xor
pushf
lds
add
xor
adc
sub
xor
xor
enter
test
pusha
std
jg
mov
pop
lods
arpl
jecxz
xchg
cs
jmp
pushf
insb
jo
xchg
std
inc
mov
fdivrs
inc
pop
lcall
fistpll
inc
mov
mov
cltd
push
inc
adc
sbb
sub
movsb
sbb
push
shl
pop
mov
es
jno
mov
mov
sub
out
mov
cltd
movsl
icebp
inc
iret
fsubl
into
or
sbb
mov
mov
insb
and
pop
stc
mul
movsl
fstps
andl
jbe,pn
clc
test
jmp
cmp
jb
sbb
mov
sub
add
push
dec
add
jbe
insl
mov
dec
cld
or
cmp
rep
mov
inc
inc
movsb
or
and
push
dec
imul
and
xchg
xchg
xor
test
sub
aam
out
fadds
push
xor
and
bound
pop
mov
shrb
adc
mov
dec
fldl
addr16
dec
inc
into
xor
mov
adc
push
jp
dec
shr
repz
pop
leave
fadds
dec
cwtl
or
test
add
xchg
mov
inc
xor
adc
imul
gs
dec
xor
aam
lahf
ds
pusha
sub
ss
adc
mov
lcall
inc
fwait
push
les
cmp
addr16
inc
sbb
sbb
insl
push
pop
xor
dec
push
fwait
lock
loopne
aam
jnp
push
and
out
cmp
je
testb
data16
insb
mov
das
sbb
pop
mov
cs
adc
leave
pop
push
jns
xor
ljmp
jmp
sub
fidivs
sahf
outsl
negb
add
jmp
clc
pop
pushf
sbb
add
mov
clc
cwtl
into
cmp
xor
dec
addr16
cmp
cmovbe
mov
cmp
repz
addl
sbb
jl
into
sub
adc
xor
imul
aad
dec
shlb
inc
or
rcll
sbb
mov
sahf
out
test
inc
push
sub
cwtl
roll
pop
pop
lds
mov
fninit
push
sbb
jb
push
xchg
popf
out
adc
std
mov
out
cmpsb
cmp
cmp
idivb
cwtl
pop
leave
icebp
sbb
gs
aam
test
sub
pop
dec
das
sbb
pop
lret
test
dec
dec
jns
dec
sbb
dec
mov
add
sti
iret
je
nop
mov
fsubl
and
rcl
sbbl
divb
mov
das
dec
inc
sub
call
sbb
xor
out
push
lods
fimull
es
mov
outsl
dec
xchg
into
mov
int
inc
mov
lahf
pop
mov
cmpsl
sahf
lcall
insl
sub
pop
pushf
dec
sub
out
sub
clc
dec
push
mov
das
dec
xor
push
push
xlat
movb
push
or
adc
adc
leave
loop
push
fs
push
enter
js
mov
ljmp
stos
sub
lea
pop
xchg
dec
inc
and
mov
mov
sub
adc
sub
xchg
je
lds
ja
adc
pop
clc
shlb
dec
and
pop
add
fidivrl
or
mov
repz
sub
adc
dec
push
adcl
pop
lret
mov
push
jecxz
add
push
loopne
or
and
inc
fdivrl
jno
fsubs
fwait
xlat
in
mov
scas
mov
std
scas
les
testb
mov
mov
popa
sbb
hlt
stos
cwtl
leave
xchg
jg
subb
adc
out
sub
push
jbe
mov
pop
adcl
jae
cmp
cmp
cs
mov
cmpsb
test
ret
int3
cwtl
mov
cmpsb
cld
mulb
adc
sbb
pop
rclb
xchg
xlat
cmp
testl
out
add
je
outsl
mov
inc
mov
xor
loop
pusha
and
std
jbe
jne
pop
push
mov
cmpsl
cmp
addl
inc
xchg
popf
sub
pop
into
mov
add
cmp
inc
outsb
pop
test
decl
gs
in
int3
in
fnclex
inc
fadds
outsb
add
cmp
cwtl
pop
mov
dec
jp
adc
in
aaa
push
bound
cmc
ljmp
out
shrb
pop
shr
imul
or
push
sets
in
pop
xchg
insl
pop
xor
out
loope
insl
stos
arpl
fwait
jo
dec
insb
add
dec
push
inc
aaa
xchg
in
shll
xchg
aam
add
cmpsl
jge
test
ror
out
mov
sub
mov
sbb
pushf
es
ffree
jbe
loop
push
jbe
out
push
addb
adc
xor
cmp
das
fimull
in
neg
lcall
cmpl
push
xchg
dec
outsl
push
cmp
add
sub
mov
hlt
dec
inc
shll
ja
xor
pusha
mov
cmpsl
mov
addr16
call
add
cmpsl
outsb
push
enter
sahf
test
icebp
add
xchg
cmp
stos
pop
xchg
pusha
rcrb
xorb
jb
nop
mov
xlat
xchg
xor
je
popa
out
mov
ret
and
xchg
jmp
rorl
sbb
jbe
sbb
fmuls
icebp
jp
stos
xor
out
movsb
add
test
mov
jmp
test
sbb
popf
mov
push
ljmp
out
cmpsl
xor
adc
push
gs
xor
add
lcall
imul
out
pop
gs
pusha
notb
ja
jl
sub
rolb
fistpl
roll
icebp
dec
call
fildl
add
lods
out
xchg
xchg
push
orb
sbb
inc
xor
repz
push
mov
adc
jbe
mov
or
add
sahf
adc
leave
adc
aam
test
inc
mov
scas
ss
jp
shll
ja
movsl
jnp
aad
jp
mov
pop
adcb
call
mov
mov
xor
and
pop
or
cmp
inc
push
push
cmp
dec
add
adc
cmp
xchg
stos
out
out
popf
add
aaa
packsswb
dec
sub
shlb
sbb
in
or
aad
mov
fwait
mov
cmp
adc
fdivrl
and
push
outsl
dec
mov
cmp
sub
mov
push
call
hlt
lahf
add
pusha
xchg
push
insb
xor
fbld
scas
dec
xchg
sbb
sti
je
xor
sub
mov
hlt
jl
jns
xchg
adc
mov
cmp
xchg
nop
std
push
gs
in
fisubs
jg
filds
push
push
dec
aam
jns
decb
dec
in
pusha
xchg
inc
and
xor
divb
popf
jmp
pop
sbbb
imul
push
mov
mov
rcl
jp
int3
jne
mov
rclb
pop
icebp
mov
mov
jo
aam
dec
cmpsb
cmp
pop
mov
test
cltd
clc
lea
cmp
adc
mov
mov
mov
mov
call
dec
bnd
popf
jnp
xchg
psubsb
sub
add
aam
js
into
or
in
lock
push
outsl
das
subl
sbb
out
mov
push
out
rolb
stos
fs
iret
in
cmp
mov
inc
cmp
fildll
outsb
pop
insl
popf
insb
arpl
arpl
nop
lret
mov
push
icebp
mov
loopne
mov
out
cld
shlb
mov
push
js
push
cmpsl
sub
sub
test
arpl
add
out
aad
ljmp
arpl
imul
jge
ss
mov
or
jbe
movsb
fs
into
or
push
scas
mov
out
xor
adc
xchg
cs
cmp
aas
fwait
scas
inc
sub
xor
xchg
mov
ret
pushf
xchg
mov
add
dec
xchg
ret
pop
mov
add
sbb
xlat
sbb
or
inc
lods
mov
jo
jp
test
adc
xlat
loope
jbe
lods
jno
sub
cmp
xor
out
or
push
rcr
ljmp
lods
cmp
jecxz
mov
fnstenv
mov
cmp
repz
fwait
les
inc
aaa
cwtl
adc
movsb
scas
ja
adc
and
and
mov
xchg
mov
pop
xchg
add
mov
jl
mov
jle,pn
mov
or
adc
mov
les
rorl
nop
and
stos
xor
add
test
mov
test
add
pop
enter
mov
jge
mov
lcall
add
mov
jge
iret
inc
js
mov
pushf
cmp
fsubp
repz
lahf
mov
push
cli
sahf
ror
cmp
dec
mov
movsl
sbb
mov
jg
mov
jge
push
xor
popf
adc
cwtl
or
push
bound
cmc
in
negb
pop
btc
pop
into
push
stos
xor
call
lahf
xor
push
add
pusha
mov
incb
rcrl
and
out
lea
data16
push
cs
mov
sub
out
fdivl
fcompl
lret
gs
adc
clc
push
outsb
sub
icebp
shll
ficoml
push
imul
and
xor
jno
mov
xchg
pop
fisubs
mov
fildl
stos
add
into
rorb
ja
out
xchg
in
push
sub
jle
mov
js
cmp
or
jl
xchg
xor
fbstp
in
test
add
adc
cmp
scas
xor
pop
sarl
jo
and
rolb
add
sub
mov
repz
mov
xchg
xor
dec
and
mov
fldcw
ret
test
shlb
sbb
dec
loope
bound
mov
mov
sbb
mov
add
pop
adc
scas
insb
xor
pop
mov
xlat
insb
out
xor
lea
inc
mov
mov
dec
xor
cmp
jcxz
fs
adc
jle
fwait
mov
ljmp
fisubrl
lods
or
stos
inc
jb
xor
dec
inc
jae
fs
aam
les
test
dec
out
xchg
lods
xchg
loopne
dec
adc
xchg
loope
mov
xor
and
xchg
scas
push
xor
jecxz
rclb
jnp
mov
test
arpl
inc
mov
lret
dec
and
jbe
cwtl
out
and
mov
and
or
fists
addr16
push
cmpsb
mov
leave
mov
xchg
pop
add
jp
stc
xor
jg
or
xchg
pop
pop
mov
in
pop
bound
cs
insl
mov
cmp
mov
and
clc
fmuls
and
mov
mov
fsubrl
shrb
imul
push
nop
leave
xor
out
imul
out
stos
hlt
pop
fs
bound
cmc
rcl
inc
mov
mov
ret
ret
cmp
xor
sub
mov
sahf
push
ds
cwtl
lret
dec
xchg
cmp
mov
pop
xlat
int
ss
fs
push
xor
mov
fldl
sbb
int3
sbb
xchg
fdivl
dec
in
mov
es
mov
add
in
mov
sbb
jg
fmuls
dec
adc
jg
loop
jg
push
bnd
iret
sub
pop
sub
insb
arpl
mov
sbb
popa
rcrb
loop
fisttpll
and
lahf
idivl
mov
pop
xor
add
or
mov
mov
mov
mov
push
lock
sbb
pusha
inc
shl
shlb
lods
aam
cmp
mov
pop
mov
aad
push
repnz
cwtl
cmc
lods
rclb
stc
lds
repnz
push
mov
mov
jno
movsl
pop
mov
jge
mov
pop
sbb
jmp
mov
and
push
cmp
jp
xor
pushf
mov
push
dec
inc
lahf
or
icebp
fmuls
mov
ljmp
pop
aas
or
repnz
clc
cmc
cmpsb
notb
push
arpl
in
push
dec
cmpsb
icebp
pusha
and
mov
call
pop
shl
pop
lcall
mov
lods
sbb
jge
aam
mov
jp
fwait
sub
sahf
cwtl
fiaddl
lods
push
pop
mov
jo
inc
roll
mov
andb
adc
and
jle
adc
adcb
les
xchg
adc
loopne
and
and
stc
mov
push
leave
xor
sbb
sahf
stos
add
movsl
mov
mov
popf
outsb
lahf
jo
jg
dec
cmpsl
adc
mov
push
mov
push
ficoms
adc
hlt
jl
jg
insb
push
or
mov
inc
rorb
cmp
test
or
mov
pop
insl
cli
ja
ret
push
pop
in
test
push
push
dec
ja
into
or
xor
int3
outsl
dec
fs
nop
ffreep
nop
enter
js
or
mov
pop
bswap
cmp
rcll
repz
jmp
fisttpll
mov
inc
mov
in
mov
xor
ret
jne
dec
imul
inc
hlt
jnp
mov
std
imul
mov
sbb
xorb
arpl
movsl
popf
mov
call
fs
sbb
push
test
add
jb
data16
scas
mov
pop
ret
inc
out
jmp
imul
int
sbb
mov
andl
pop
pop
imul
mov
out
add
aam
insb
shl
andl
daa
or
add
inc
in
dec
jbe
and
ss
loope
inc
inc
arpl
inc
call
pop
scas
pop
push
jmp
loope
jp
mov
mov
clc
push
arpl
inc
push
push
lahf
fldl
pop
xchg
icebp
aam
or
ret
inc
inc
movsb
mov
cmp
std
xchg
int3
gs
cltd
mov
ds
and
xchg
lock
push
push
mov
mov
adc
push
enter
stos
xchg
push
sbb
out
cmp
pop
imul
pop
add
test
scas
cmp
outsb
setne
adc
jb
mov
lods
addl
jb
rorb
mov
orb
sbb
cmp
and
cmp
imul
push
pop
add
lret
jmp
xor
mov
ja,pn
push
clc
xor
mov
fcomps
test
or
cwtl
leave
sub
or
sbb
imul
xlat
pop
repz
lcall
repnz
push
mov
insl
add
sub
loope
aas
cmpsb
sbb
jne
adc
and
and
mov
dec
push
imul
add
bound
repz
lds
mov
fistl
test
pop
jnp
into
add
push
das
cmpsl
cmp
aaa
mov
pop
xor
mov
pop
fwait
mov
clc
ret
sbb
mov
mov
jnp
stc
dec
adc
hlt
std
jge
imul
jne
faddl
nop
push
scas
cmp
push
loopne
js
adc
pop
push
push
ret
leave
mov
cld
dec
mov
push
push
mov
test
pop
pop
lret
enter
insl
adc
jmp
jp
or
jge
xchg
test
xchg
pop
ljmp
loop
scas
in
movsl
stos
ljmp
mov
push
mov
jne
pop
xor
cld
fisttpl
mov
push
nop
into
and
mov
lock
out
push
dec
sub
or
jg
cmp
loope
or
push
add
jno
sub
fsts
pop
jno
hlt
out
sbb
ds
lods
inc
push
dec
inc
movsl
fldlg2
xchg
pushl
ret
mov
push
ljmp
lea
mov
lahf
adc
jge
movsl
mov
test
lods
adc
mov
addr16
clc
dec
sahf
or
in
push
mov
out
inc
xchg
int3
pop
mov
xor
jb
push
dec
das
mov
xchg
pop
mov
xor
and
in
adc
inc
cmp
mov
push
lods
xchg
sub
pop
pop
hlt
rorb
xchg
push
dec
test
mov
stos
in
iret
lods
ret
js
lods
es
pop
pusha
jo
mov
xor
outsb
cwtl
outsb
insb
movsl
mov
lods
subl
ds
jns
faddl
or
mull
mov
or
cmp
hlt
mov
sub
mov
imul
in
dec
pop
jae
aaa
cmpsb
leave
inc
pop
rorl
inc
mov
mov
dec
push
sub
pop
mov
jns
cmp
mov
subb
sub
mov
movsb
xchg
outsl
das
cmp
mov
loope
mov
aas
fmuls
mov
mov
mov
xchg
nop
cmpsb
enter
xor
dec
adc
jns
mov
in
mov
enter
cli
pop
es
lahf
dec
xor
xor
add
sti
jb
jnp
mov
imul
es
push
mov
mov
sub
jns
cld
mov
cmp
xchg
add
push
cmc
stos
fwait
add
enter
in
sbb
mov
add
cs
inc
insl
insb
ja
push
pusha
and
push
pop
inc
js
pop
cmp
cmp
mov
xlat
mov
and
cs
popa
fisubs
in
cmp
pop
lret
lcall
pop
cmpsl
in
dec
xchg
pusha
xor
rclb
cli
add
out
cmpsl
in
test
push
dec
out
add
adc
lods
hlt
dec
ja
stos
sub
mov
and
jg
mov
push
add
shr
jne
sub
mov
les
lds
jo
inc
fwait
clc
dec
pop
fisttps
mov
or
mov
in
stos
inc
sbb
xchg
test
subl
call
inc
sub
divb
int
aaa
mov
std
pop
lret
popa
int3
test
js
call
int3
pop
ds
movsl
daa
fucomp
xchg
xchg
xchg
dec
filds
les
sti
movsb
and
or
dec
es
xchg
and
gs
cmpsw
push
xor
add
jge
jbe
and
pop
cmp
cmp
jg
shlb
sub
jae
lcall
fistpl
rclb
and
hlt
mov
sti
sbb
and
inc
mov
xchg
ljmp
iret
nop
cmp
es
cmp
std
lds
cwtl
mov
scas
addr16
cli
adc
xchg
out
push
mov
sbb
mov
jecxz
mov
orw
cld
sti
repz
mov
ret
cmp
cmc
movsb
stos
fcmovnb
pop
mov
mov
dec
rcrb
push
pop
mov
loop
xor
adc
enter
xchg
xchg
jb
pop
stos
jae
jo
sub
mov
fldenv
cmp
imull
adc
repnz
ret
sbb
mov
fs
insb
fisubrl
negb
stc
cmpsb
sbb
repz
es
shll
lret
xor
movsb
mov
or
cli
inc
fwait
imul
pop
sbb
pop
dec
or
aam
pop
mov
lret
lds
push
cmp
fisubs
dec
mov
sub
out
jmp
pusha
movsb
xor
inc
lret
pusha
sbb
jne
js
stc
stos
inc
in
inc
adc
in
pushf
pop
add
fmuls
imul
push
jl
mov
mov
pushf
adcb
xchg
mov
or
mov
dec
add
ss
inc
pop
cmpsl
pop
jl
fwait
xchg
pop
dec
es
mov
adc
rcrl
cmp
test
push
add
mov
nop
cmp
mov
lahf
bound
in
push
mov
clc
popl
cmp
add
ret
mov
mov
or
jne
shrl
das
xchg
mov
stc
stos
xchg
mov
jno
pop
orl
ds
ljmp
push
in
inc
enter
xor
popf
imul
ljmp
call
or
loope
pop
ljmp
and
adcb
lret
jecxz
movsb
add
in
sub
dec
adc
in
adc
fstps
ss
in
mov
jmp
xor
cwtl
imul
mov
popa
test
adc
outsb
adc
dec
inc
jge
push
cmpsb
sbb
rorl
sahf
vpunpckhqdq
out
cmp
xchg
adc
out
idivl
inc
rcrb
repz
add
icebp
jnp
push
dec
mov
dec
mov
cli
adc
mov
stos
cmp
jo
cmp
xchg
popa
cmc
jne
jg
test
xchg
cld
psubd
fisttpl
popl
stos
fdivrs
xchg
mov
int
pop
mov
mov
ret
loop
out
js
movsl
add
out
mov
and
jne
dec
jecxz
mov
mov
out
jo
cmp
dec
sbb
cmp
into
out
fidivl
ljmp
inc
jae
lret
shlb
cli
cs
fs
adc
pop
sub
sahf
or
jge
jge
pop
add
cmp
lret
xchg
mov
xor
mov
inc
dec
xchg
test
repnz
sbb
popa
fildl
mov
jle
js
repnz
dec
inc
inc
mov
mov
pop
lret
into
mov
sbb
repnz
stc
scas
sbbb
jecxz
ret
icebp
cmp
iret
test
scas
pop
push
sbbb
inc
fwait
xchg
sub
movsl
loope
mov
sbb
sbb
loopne
pop
mov
lahf
jle
and
lods
fistps
mov
fistpl
sbb
mov
movsl
sbb
inc
dec
aad
pop
sbb
push
dec
inc
xor
sbb
insb
sub
sbb
push
dec
or
pushf
inc
mov
out
lahf
subb
cmp
pop
out
jecxz
ljmp
out
cmp
jg
mov
out
jo
leave
jp
into
outsl
mov
fisubs
mov
fidivs
in
jns
incl
jne
sahf
outsb
leave
add
mov
test
pop
and
bnd
movsb
negl
push
mov
push
sahf
cltd
movsb
and
lret
adc
pop
popa
or
lock
mov
popf
inc
popf
je
enter
cmp
outsl
cmp
inc
dec
pop
test
pop
jb
add
jp
add
nop
or
pop
in
aaa
imul
mov
lods
imul
sub
cmp
out
and
ljmp
adc
dec
or
frstor
jmp
movsl
out
iret
fadd
mov
sub
adc
jge
add
mov
gs
mov
out
cmp
test
cmp
inc
iret
pop
ss
adc
ret
pushf
daa
jnp
mov
dec
adc
inc
inc
mov
jmp
dec
out
aaa
jg
mov
mov
add
mov
jge
adc
shr
xchg
mov
dec
mov
aam
ja
data16
jns
xchg
pop
mov
out
mov
push
flds
cmp
mov
rclb
xchg
jo
dec
inc
adc
in
mov
and
fwait
xor
ficompl
adc
push
xor
mov
pop
les
icebp
xor
cmp
iret
jo
dec
int
rcrl
mov
rcll
insb
iret
roll
push
pop
sub
jge
and
imul
loopne
push
je
add
cwtl
pusha
loop
dec
xchg
movsb
mov
sbb
cli
cmp
insb
call
pop
adcl
mov
ds
xchg
xchg
add
bound
jb
test
dec
mov
lock
push
sbb
test
xchg
dec
push
mov
sahf
or
lret
pop
aam
fs
cltd
or
js
clc
mov
pop
pop
mov
jp
movsb
sub
or
mov
fs
inc
shl
jmp
cmp
mov
stc
xor
rcll
xor
push
or
arpl
je
inc
mov
les
push
or
adc
adc
dec
outsl
cmp
mov
cmp
push
repnz
sub
fsubs
cmp
mov
cli
sub
jno
or
add
inc
hlt
jnp
mov
ret
sub
mov
xchg
pushf
outsl
sbb
cld
ffreep
xorl
fsub
xor
sbb
adc
mov
insl
mov
push
inc
iret
mov
pop
xchg
or
subl
stos
pop
stos
and
loope
xor
orb
lds
inc
push
ja
repz
jnp
adc
sbb
mov
add
inc
jmp
outsb
fisubl
in
leave
aaa
mov
fisubrl
lahf
xor
sbb
cwtl
or
push
popa
daa
and
loop
and
xchg
pusha
out
stos
mov
jmp
mov
sbb
mov
and
pop
sub
loopne
pop
and
jnp
insb
xlat
mov
jg
mov
xchg
push
movsb
or
dec
inc
cmpsb
pop
dec
xchg
inc
addr16
int
popa
sbb
aad
in
scas
push
cmp
popf
cmp
push
inc
clc
xchg
mov
out
adc
out
jge
in
bound
jp
lcall
cltd
jmp
scas
cmp
sarb
cmpsb
sti
jp
cmp
mov
xchg
out
mov
adc
leave
xor
add
mov
loope
pop
mov
cmp
aam
mov
iret
in
xchg
jbe
enter
icebp
sub
in
fsubrl
adc
fwait
or
mov
les
mov
xorl
pop
fwait
cmpl
icebp
cltd
sbb
cmp
push
dec
mov
loop
js
or
and
aam
shll
sub
pop
addr16
lcall
pop
lahf
xchg
lahf
or
outsb
mov
cmp
dec
in
fs
push
push
and
mov
push
stc
pop
lock
dec
cld
insb
cmpsl
jno
addb
subl
add
das
cmp
push
daa
jne
pop
test
test
cmp
mov
stos
add
es
repnz
mov
mov
inc
idivb
call
pop
cli
stos
mov
repnz
fwait
mov
push
test
data16
sbb
adc
inc
ds
inc
rcl
adc
imul
pop
jl
outsl
dec
pop
push
xor
addl
cmc
int3
in
push
popa
xchg
mov
inc
arpl
cmpsl
mov
icebp
clc
mov
cmp
mov
ds
xor
add
cli
push
or
mov
sub
filds
inc
lahf
mov
shl
mov
add
mov
pop
push
sbb
dec
or
mov
sbb
insb
out
test
test
enter
inc
adc
xor
pop
xor
dec
imull
decl
push
mov
shrb
mov
push
sub
outsb
push
das
mov
mov
jle
add
and
hlt
inc
cltd
adc
bound
and
fnstenv
cmp
inc
mov
lret
scas
ds
js
jg
mov
pop
jns
scas
jecxz
or
repz
in
les
roll
sarl
jp
and
pop
std
repnz
cltd
sub
or
mov
xchg
add
push
mov
sbb
xchg
or
inc
mov
fstpl
pop
mov
add
inc
test
mov
or
pop
jo
mov
or
xchg
dec
jno
dec
pop
and
xor
add
loopne
jno
fstps
nop
ss
data16
xchg
stos
pop
xchg
es
cmp
cmp
call
sarl
cs
clc
pop
mov
cmp
pop
test
sub
inc
or
adc
and
mov
fs
push
sub
mov
xchg
stos
mov
dec
imul
hlt
sub
scas
dec
fimuls
aad
mov
mov
dec
leave
out
jg
jbe
mov
and
and
lcall
popf
inc
mov
push
xchg
out
xor
push
xor
lds
or
mov
push
mov
stos
stc
xor
jae
fnsave
imul
aaa
mov
dec
pop
movsl
dec
xchg
je
in
gs
xlat
and
incl
pop
inc
adc
xchg
and
je
mov
adc
andb
cwtl
orb
adc
mov
shlb
das
jp
push
adc
push
subl
addr16
call
in
iret
sbb
hlt
rcll
mov
ret
test
push
test
out
rclb
mov
ss
pop
dec
out
lea
loopne
adc
pop
dec
aaa
test
xorl
shll
add
mov
enter
inc
out
and
lret
and
fsubl
out
jecxz
cmpsl
inc
out
rorb
pop
fmul
in
mov
mov
out
or
xor
ljmp
mov
cmpsl
pushf
in
ljmp
icebp
jecxz
outsl
fwait
mov
outsl
adc
call
int3
rorl
sbb
mov
test
sbb
xchg
in
inc
push
fs
push
in
lods
push
scas
push
pop
movsb
cmc
or
mov
sub
jne
adc
lea
push
xchg
mov
je
mov
bound
push
jns
adc
push
sub
fstps
pop
and
int3
or
pop
pop
ljmp
or
jmp
fildll
int3
sbb
jno,pn
test
mov
adc
lods
add
repz
xchg
fisttps
mov
std
bound
aam
into
inc
or
jl,pt
hlt
jmp
leave
lock
ja
cmp
daa
repnz
cltd
xchg
jle
xchg
jp
cltd
cmp
test
shlb
js
xchg
cld
xchg
push
xor
or
enter
aaa
pop
dec
add
shlb
xchg
or
push
mov
pushf
das
clc
jno
in
mov
loopne
stc
cli
mov
int
cmp
xor
xor
sub
in
mov
push
roll
add
dec
sub
addr16
cmp
andl
mov
frstpm(287
sahf
fwait
and
ds
fwait
xchg
lret
sbb
dec
fistps
mov
xchg
fwait
push
outsb
sub
pushf
lock
xchg
ss
out
jo
aas
inc
sahf
insl
leave
xor
cmpl
and
dec
or
or
aad
arpl
fs
adc
cmp
jmp
pop
jbe
mov
and
add
and
jne
sbb
call
mov
lock
lret
inc
insb
scas
and
add
out
mov
sub
ljmp
das
push
jno
fstps
inc
mov
outsl
andl
cmc
and
movsb
dec
adc
sub
add
movsl
and
jne
fwait
movsb
mov
pop
ja
ss
ret
add
sbb
sar
or
daa
mov
fistpll
lahf
xchg
test
mov
push
push
cmp
jge
adcl
mov
divl
xor
jae
mov
jb
enter
and
push
mov
shll
jp
test
push
popf
int
scas
or
xrelease
imull
sub
xchg
loope
cmp
mov
add
mov
add
stc
fldenv
ss
xor
pop
pop
mov
aam
int3
shlb
insb
xchg
sub
ljmp
mov
add
sti
into
stos
aam
jle
loop
or
mov
sarl
int
and
jns
int3
arpl
std
jno
pop
cltd
sbb
lods
in
lock
xor
push
movsb
jmp
out
movsl
enter
insb
fwait
jmp
sarb
sub
ror
pop
jne
push
js
int
fcoml
xchg
lea
ror
jno
fwait
std
loopne
mov
mov
push
push
int
pop
lahf
jne
lods
pop
lahf
push
push
sub
inc
xchg
jecxz
jge
sbb
bound
cmp
xor
leave
rclb
stc
mov
and
cmp
test
push
dec
lods
mov
nop
movsl
lret
outsb
cmp
dec
ret
lret
inc
std
add
dec
jmp
xor
sbbl
xorl
inc
test
xor
xchg
adc
mov
mov
movsb
stc
or
in
jp
and
xor
mov
jge
mov
cmpsb
notb
shr
push
sub
xor
add
outsl
ret
mov
ret
xchg
inc
sub
icebp
insl
loope
adc
jae
jbe
mov
fistl
push
test
mov
mov
or
and
jnp
pop
dec
test
xor
dec
jne
jle
pop
mov
push
insl
xchg
pushf
adc
insb
popa
faddl
movsb
mov
into
js
pop
stos
xchg
fucomip
or
dec
cltd
sub
fbld
xlat
ret
pushf
shrb
or
outsl
jne
xchg
in
adc
sbb
cs
scas
dec
jmp
jbe
adc
les
pusha
mov
cmp
mov
adc
in
pop
icebp
aad
fwait
mov
cmc
mov
mov
jo
or
cmp
and
mov
lret
push
idivl
or
loope
sub
dec
lea
add
sbb
xchg
fwait
xchg
jecxz
imul
into
mov
test
mov
mov
int3
out
xchg
cld
jnp
mov
cli
ja
mov
dec
and
and
rclb
adc
imul
pop
aaa
js
mov
mov
adc
jl
push
mov
inc
sahf
mov
aaa
outsl
imul
push
sub
pop
imul
addl
adc
adcl
fstpl
dec
insb
and
sarb
call
enter
sub
std
cmp
xchg
cmpsb
and
jl
cmp
mov
jge
push
icebp
pop
cmp
push
add
mov
inc
fsubrp
xchg
mov
js
inc
icebp
cmp
pop
cmp
ja
lds
mov
or
mov
pop
test
jno
clc
mov
ja
lods
movsb
stos
test
dec
mov
sub
or
sbb
js
push
out
adc
sub
inc
mov
mov
mov
shll
std
movsl
push
sti
roll
sahf
cmp
jecxz
jns
pop
inc
push
inc
arpl
dec
sbb
jae
push
xchg
pop
cmp
inc
cltd
cmp
hlt
negl
xor
mov
mov
icebp
lahf
test
popf
sub
aam
cli
cmpl
cmp
sbb
cmpsb
out
cmp
popa
or
ja
orl
lcall
lods
pop
add
loopne
pop
xchg
leave
in
jno
icebp
lea
mov
stos
and
sub
mov
adc
push
jmp
pushf
sub
xchg
mov
enter
sbb
xchg
sbb
repnz
fwait
push
xor
sbb
fadds
mov
pop
faddl
mov
mov
push
ja
cltd
je
push
xor
loopne
sub
sti
push
adc
aam
inc
inc
cmpl
pop
in
dec
adc
sub
cltd
pop
jge
adc
shrb
mov
jmp
push
rclb
pop
push
pop
sbb
sub
jbe
pusha
or
les
mov
nop
jl
aad
or
jge
inc
shlb
and
push
pop
movsb
adc
fsubrs
sub
repnz
mov
loope
repz
mov
jl
jg
sahf
frstor
jnp
insl
sbb
xchg
imul
cs
insb
mov
mov
push
shr
das
enter
cli
icebp
divl
subb
ds
lahf
out
das
mov
pop
out
cmp
jle
mov
ror
push
push
xor
add
inc
aam
popf
out
rorl
outsl
adc
sub
lret
xchg
fiaddl
int
mov
fbstp
push
lock
ret
push
adc
pop
into
and
outsb
roll
mov
nop
lret
scas
cs
into
dec
jle
ljmp
aad
pop
out
jbe
mov
icebp
testl
mov
pusha
inc
fcmovne
mov
add
dec
lcall
sub
rol
sub
iret
das
ficoms
mov
mov
out
aad
fcomps
leave
push
pop
movsb
out
loop
mov
in
adc
cmp
aam
pop
imul
insb
cmp
mov
stos
inc
negb
test
cmp
in
and
in
aas
cmpsb
pop
pop
sbb
ljmp
pusha
shlb
mov
push
adc
or
ss
adc
mov
xor
jmp
je,pn
inc
fs
jge
inc
out
xchg
ja
push
add
ret
cmp
loop
pop
xor
jbe
pop
icebp
cmc
sbb
xchg
or
push
outsl
add
mov
inc
jp
cmp
xchg
pop
sbb
lea
mov
es
xchg
shlb
loop
ja
das
pop
mov
insb
loope
das
and
adc
adc
clc
mov
ret
xor
movsb
out
jns
jnp
data16
outsb
and
je
xorb
aad
and
ljmp
pop
aam
aaa
or
loope
inc
div
pop
mov
pop
stos
fs
sarb
ret
pop
mov
repnz
inc
mov
add
mov
xor
xchg
outsb
mov
pop
testl
push
jp
imul
pop
dec
cli
int
hlt
and
fstps
pop
pop
into
mov
shrl
mov
inc
loop
and
mov
mov
pop
xchg
ja
lea
dec
xchg
in
imul
cmpsb
test
mov
addr16
arpl
sub
pop
dec
xor
test
pop
movsl
dec
jne
mov
sti
jg
pop
cli
xor
mov
jg
test
in
lds
cld
add
popl
mov
scas
popf
orl
sub
or
xchg
popa
sbb
aaa
inc
mov
mov
mov
sub
cmp
fdivrp
cmp
xchg
call
es
fnstsw
adc
rcrb
and
inc
fsubs
jno
and
pmulhw
sbb
dec
mov
cmp
inc
fadd
jno
aaa
inc
pop
xor
out
aaa
fs
int3
test
push
nop
outsb
es
jmp
fdivp
je
mov
pop
xchg
loop
mov
ja
push
pop
movsb
lcall
add
stc
ds
rorb
xchg
push
ss
scas
into
lods
addr16
lods
test
add
movsl
sub
repz
inc
sahf
mov
sub
ficomps
mulb
ljmp
out
icebp
add
shlb
hlt
mov
fwait
insb
mov
jmp
mulb
jmp
fidivl
sub
adc
int3
sbb
or
arpl
aaa
cmc
add
adc
outsb
test
push
and
mov
mov
xchg
and
pusha
xor
push
rolb
cmp
pop
cmp
push
push
xor
bound
sub
dec
popa
in
mov
add
fcompl
ljmp
mov
lret
insl
or
test
cli
dec
into
add
sbb
ljmp
xchg
movsl
and
fdivrl
mov
add
push
in
pandn
hlt
loop
lods
xor
push
dec
pop
mov
cmp
jl
xor
sar
pop
inc
cmp
xor
mov
cwtl
sahf
in
nop
and
nop
cmpl
andb
mov
testb
jg
mov
lods
xor
in
fldl
jp
mov
add
pop
sbbl
out
xchg
cmc
loop
or
mov
scas
movsl
aaa
mov
and
cmpsl
test
repnz
push
xchg
movsl
rclb
mov
inc
cwtl
xor
rcr
leave
pop
shll
push
rolb
xchg
ss
add
repz
sbb
push
gs
sub
jge
loopne
testl
vpcomuq
xlat
jbe
cmpsl
popl
and
mov
fwait
leave
inc
sbb
sbb
loop
dec
mov
dec
xchg
addl
xchg
rcrl
pop
xchg
xchg
fbld
mov
cmp
jecxz
frstor
ret
sti
fistpll
mov
loop
ds
mov
lds
aad
and
xchg
pushfw
cmp
push
adc
pop
cmp
xchg
mov
fsubrp
je
xor
pusha
loop
mov
shll
xor
xchg
stos
xor
cld
shr
mov
inc
mov
test
xchg
or
mov
fiaddl
clc
pop
shll
sbb
dec
sub
nop
std
push
and
pop
add
mov
mov
outsb
inc
jb
mull
ficomps
or
ret
inc
roll
sub
jnp
inc
push
ficoml
sbb
jnp
es
lock
roll
lods
or
lret
arpl
incl
loop
test
adc
scas
aad
loopne
pop
inc
out
jge
orl
es
aam
push
repz
js
cmpsb
sbb
shl
mov
mov
rcrl
mov
jno
or
mov
jg
mov
or
daa
inc
adc
push
push
inc
dec
and
mov
test
mov
movsl
cmpsb
xor
nop
mov
lea
mov
inc
adc
rcll
fbld
sub
movsb
in
sub
sub
cmpsl
mov
cmp
pop
movsb
and
or
out
mov
or
mov
mov
iret
jmp
xor
mov
adc
mov
and
pop
js
push
fwait
ljmp
lahf
movsl
jmp
ds
testl
add
jl
push
mov
lds
mov
popl
sub
es
ja
mov
lret
pinsrw
cltd
in
adc
xor
ds
test
ret
pop
jb,pt
rcll
xchg
imul
aaa
sbb
into
sbb
aas
xchg
bound
ret
jmp
imul
inc
pop
mov
hlt
mov
sbb
data16
mov
cmpsb
stc
sbb
fsubrl
and
xchg
in
lds
cmpsl
lock
push
add
dec
or
xchg
mov
ret
xchg
pop
sbb
cmpsl
pop
add
add
and
hlt
dec
jno
mov
add
test
inc
mov
sbb
mov
xchg
lock
pusha
jp
inc
and
jne
arpl
jne
or
cmpsb
or
fcoml
call
ss
pop
and
lock
stc
movsb
xor
shrb
xchg
xor
cmp
in
das
stc
mov
fwait
call
push
ds
sub
xchg
cwtl
cli
stos
lahf
or
mov
add
test
cs
pop
pop
mov
jecxz
dec
popf
dec
pop
cs
ja
jecxz
lret
aad
outsl
sbb
insl
adc
push
loop
incl
sbb
push
in
adc
inc
or
xchg
adc
mov
out
ret
pop
or
and
mov
hlt
cli
leave
mov
push
leave
sbb
sbb
or
mov
xchg
cmc
mov
mov
shll
dec
das
loope
sbb
adc
mov
mov
inc
adc
sarb
rcll
fcoml
or
out
iret
shrb
mov
addr16
inc
not
insb
pop
pop
inc
sbb
jno
or
clc
pusha
push
repz
sbb
bound
fxch
pop
push
arpl
data16
ja
mov
xor
or
inc
jmp
insb
fs
scas
ror
fnstcw
stos
mov
pop
bound
pop
and
adc
out
out
popa
jl
fsubrs
add
sub
add
adc
mov
xchg
xchg
icebp
out
jge
adc
cmpsl
pop
inc
sti
mov
arpl
add
dec
or
nop
call
mov
mov
xchg
lahf
xchg
and
pop
fwait
mov
inc
pop
sub
sahf
sub
jae
jb
xor
mov
adc
sbb
push
mov
push
popa
pop
dec
push
pop
repz
dec
dec
lcall
movsl
ss
pop
ret
dec
test
xchg
mov
pop
mov
outsb
adcl
es
dec
xor
jns
sub
mov
jl
addl
inc
jmp
jb,pt
xchg
add
inc
les
mov
push
leave
hlt
scas
leave
icebp
imul
jne
mov
sub
shlb
adc
dec
adc
sbb
jle
and
mov
and
fistps
lods
cmc
das
mov
sbb
dec
imul
hlt
cmp
mov
mov
icebp
jae
fs
fcoml
xor
imul
mov
imul
aas
pop
movsl
shl
inc
cmp
pop
dec
dec
leave
call
addr16
out
sub
subb
sbb
cmp
inc
xor
addr16
or
xor
and
mov
push
adc
jl
dec
add
ljmp
sub
mov
jo
repz
mov
add
push
mov
pop
enter
mov
jno
mov
rolb
cmpsb
call
mov
insb
hlt
jl
or
xsave
insb
sbb
pand
add
loopne
pop
dec
lcall
dec
ja
mov
jle
lahf
jl
js
pop
dec
or
stos
jae
sub
pushaw
enter
or
and
pop
sbb
faddp
pusha
cli
cmp
int3
sbb
fldl
cwtl
hlt
cltd
cmp
pop
inc
cwtl
sub
push
push
xchg
lret
sbb
aas
sub
das
outsl
test
sbb
movsb
xor
stos
xor
decb
mov
add
out
push
mov
and
pop
dec
icebp
cltd
mov
jp
adc
lret
or
jnp
dec
and
push
jecxz
add
pop
mov
test
mov
loop
and
mov
lret
push
hlt
inc
jge
lods
pop
ret
imul
pop
aas
mov
or
cwtl
jmp
mov
or
mov
outsb
mov
fidivrl
loop
mov
bswap
and
ja
add
pop
and
cmc
jp
fwait
or
pop
fucomip
movsl
inc
sub
sbb
xchg
movsb
test
mov
fwait
shll
push
enter
inc
push
imul
lret
dec
dec
xorb
inc
pop
sub
std
aam
leave
mov
clc
ss
cmp
ficoml
jmp
sahf
pusha
mov
mov
mov
orl
imul
imul
idivl
push
jne
or
add
shll
pop
hlt
or
cld
adc
mov
test
jb
push
int
lahf
and
mov
mov
insl
daa
call
lret
mov
inc
enter
jnp
popf
test
cmp
cmp
or
xor
sub
mov
stos
push
push
push
pop
mov
inc
fsubrl
gs
rorl
cmp
mov
mov
scas
inc
mov
gs
setne
imul
lcall
rclb
arpl
enter
popf
into
cmp
push
dec
cmp
fcoms
roll
inc
and
test
sbb
sub
push
adc
sbb
mov
pop
ds
dec
rclb
test
jns
push
sub
pop
or
mov
movsb
test
jle
add
aaa
push
in
jae
into
inc
push
into
mov
push
and
cmp
insb
sub
jmp
jo
mov
fimuls
mov
in
push
and
jecxz
mov
adc
inc
es
xchg
and
inc
in
adc
inc
cmpsl
cmp
inc
clc
mov
jo
jmp
cmpsl
xor
sub
pop
inc
sbb
in
dec
and
add
and
push
les
xchg
or
cs
ret
inc
dec
inc
mov
imul
dec
rorb
dec
loop
dec
cmp
mov
sbb
sbb
cld
popf
adc
mov
loopne
or
mov
mov
ret
xor
mov
push
bnd
addl
test
nop
mov
adc
mov
jle
dec
fidivrs
aam
sbb
jbe
imul
ja
fsubs
fisttpll
ss
scas
inc
xchg
stc
or
mov
bound
dec
lock
leave
pop
push
test
sarb
pop
mov
subb
es
cmp
adc
or
push
inc
xor
jl
lret
push
int
iret
test
cmp
pop
iret
sbb
stos
shll
pop
mov
sub
push
jb
cs
mov
mov
xor
or
subb
xchg
in
lods
jp
int3
xor
out
rcll
mov
dec
push
cmp
rcll
lcall
and
mov
xchg
test
dec
outsb
add
sti
scas
sbb
and
sub
jl
add
loopne
rol
ljmp
lret
loope
inc
inc
sbb
mov
and
jnp
pop
ret
cli
jecxz
addr16
orl
es
mov
scas
js
data16
sarb
pop
ja
xchg
xchg
cmp
nop
out
hlt
ljmp
cmpsb
sysexit
jmp
or
jl
jle
pop
pop
mov
sub
jmp
and
int3
inc
rcrl
add
cwtl
cli
in
mov
push
test
je
jb
or
fiaddl
lock
or
repz
clc
pushf
aaa
outsb
xlat
scas
outsl
cmp
cmp
aad
push
insl
pop
jmp
cmp
inc
sbb
repnz
lock
adc
repnz
in
adc
cwtl
das
jmp
iret
stos
in
rcrb
pop
insb
jg
dec
fstl
mov
adcl
add
in
in
push
popa
fnstsw
in
shll
dec
jno
clc
mov
test
ficoml
insb
leave
pop
inc
jmp
mov
pushf
jge
xor
mov
jecxz
jecxz
ss
cmp
mov
dec
dec
in
jnp
in
test
ljmp
push
ljmp
and
jp
mov
cmc
sub
stos
cmp
sub
sti
sbb
ja
test
add
xorl
out
or
mov
fucomip
imul
out
pop
push
lea
xlat
inc
add
mov
aam
cmpsl
push
ljmp
jl
dec
jae
int
mov
mov
mov
popf
fmuls
add
dec
jbe
adc
push
add
addr16
xchg
dec
xchg
sbb
jbe
push
popa
mov
fs
icebp
jge
stos
pushf
daa
sbb
out
mov
rorb
cmp
push
and
shrb
andl
mov
fcomi
movsl
mov
pop
scas
jno
imul
push
mov
fwait
inc
test
ljmp
fwait
xchg
inc
sahf
jg
mov
fldt
bnd
aaa
or
bound
aas
lock
negb
fbld
push
in
pop
push
lret
ss
loop
xor
int3
mov
cli
pop
daa
jp
add
cmp
jge
loope
mov
data16
pop
movsb
jle
sub
mov
in
mov
jge
out
pushf
cmp
int3
push
fcomip
adc
mov
insb
addr16
lea
or
jmp
cmp
xor
stos
cli
pop
mov
lods
dec
xor
clc
fiadds
jge
mov
dec
sub
push
cltd
jmp
lret
in
mov
and
mov
call
lds
and
pop
dec
lea
adc
sbb
inc
rcll
dec
inc
das
xchg
jo
dec
inc
sbb
inc
daa
jle
dec
push
fists
daa
je
inc
mov
lcall
ret
imul
push
inc
daa
add
sub
shll
or
into
in
jb
lods
mov
mull
mov
push
repnz
ljmp
bound
mov
mov
push
sub
shll
int
leave
dec
jbe
xor
dec
out
or
out
sbb
mov
pop
lret
xor
mov
cmp
test
outsl
sarl
addr16
pop
pop
mov
lods
cmc
cmp
in
mov
mov
inc
sub
sti
stos
mov
push
scas
shrb
loope
mov
dec
pop
or
fstpt
mov
jle
clc
data16
rclb
xchg
pop
sub
outsb
dec
jl
mov
ljmp
jg
insl
xor
addr16
icebp
inc
jno
lret
sub
sub
jmp
xor
addb
sub
jecxz
pop
xorl
xor
sub
pushf
mov
mov
jge
negb
sahf
jns
add
test
mov
sahf
inc
jae
mulb
in
leave
test
addr16
and
adc
cmc
mov
xor
push
lods
push
rcrb
jo
outsl
movsb
imul
test
cmpsb
or
mov
outsl
push
ss
xchg
aad
stos
mov
das
ljmp
push
and
cmp
scas
loopne
xchg
fs
jecxz
sbb
pop
push
pop
xchg
out
jmp
mov
lods
push
adc
pop
cmp
mov
pop
ret
into
xchg
fildl
jp
mov
mov
lcall
mov
mov
sub
popl
sbb
pop
jg
icebp
sbb
mov
pop
in
test
daa
cmp
aam
mov
mov
add
mov
addr16
imul
arpl
int3
xchg
outsb
lods
daa
aas
dec
pop
ljmp
xor
popa
cmc
std
in
ds
aas
fwait
mov
popf
mov
sbb
clc
mov
cltd
push
xchg
mov
xor
jp
add
xchg
inc
movb
mov
in
fwait
ja
inc
lret
bound
add
add
gs
mov
mov
jno
scas
dec
packsswb
sub
push
rolb
test
mov
xchg
cltd
mov
test
dec
jnp
adc
xor
mov
outsl
inc
inc
arpl
xor
adc
mov
xor
shlb
jp
daa
dec
shrb
repz
xor
aas
ss
fwait
mov
pusha
sbb
lret
pop
lds
or
inc
jl
pusha
xor
ficomps
push
sbb
stc
addr16
cli
decl
enter
adc
orb
popa
es
dec
xor
cltd
and
repnz
add
aam
arpl
pop
sub
dec
jecxz
in
mov
pop
mov
push
lock
xor
into
lock
adc
sub
cmpsl
add
jmp
cmp
xor
xchg
lret
lahf
and
sahf
sbb
sub
hlt
push
jp
in
hlt
cmp
out
add
pusha
xchg
stos
sbb
lret
addr16
inc
fmull
xchg
adc
out
push
sbbl
subb
sub
xor
mov
push
or
mov
cli
and
xchg
xor
add
cli
pop
es
inc
dec
js
loope
push
inc
sarl
in
jns
out
cs
test
roll
fsubrl
fcmovb
dec
lret
pop
jbe
inc
cld
into
sub
add
mov
mov
das
imul
in
inc
mov
mov
flds
dec
xchg
mov
adc
fcom
jne
stos
and
pop
mov
popf
test
ja
dec
xchg
imul
incl
pop
inc
int3
xchg
jno
rcrl
adc
inc
pushfw
mov
aad
pop
aad
popf
add
xor
jg
dec
xchg
repz
xlat
scas
repnz
xchg
pop
jae
imul
inc
add
ret
mov
outsb
jmp
test
popf
icebp
push
fidivs
mov
cmp
pop
insb
repz
std
scas
dec
add
adc
mov
les
cmp
inc
js
jl
ficoml
push
cmp
jp
or
test
testl
testb
pop
xchg
ret
xchg
mov
jnp
push
and
lds
xor
pushf
shll
lcall
movsb
jp
sbb
leave
insl
sub
nop
clc
xchg
mov
mov
test
push
mov
negl
lods
rcl
inc
and
dec
xor
inc
scas
lods
iret
push
mov
insl
ret
push
jnp
xor
sarb
or
xor
lea
hlt
mov
dec
pop
xor
cli
rcrb
inc
mov
xchg
lcall
stc
sbb
insb
cmp
sub
ret
sub
pop
lcall
fsubrl
mov
push
daa
repnz
sub
in
ljmp
out
subb
jecxz
outsl
push
test
pop
add
dec
pusha
inc
add
sub
mov
mov
xor
std
mov
addr16
or
insb
push
insb
mov
push
jns
lcall
fistpl
aad
inc
jnp
lods
enter
push
pop
push
inc
sub
and
or
or
add
pop
insb
dec
cmpsb
xchg
push
xor
cmp
xor
push
testl
popa
adc
push
and
decl
jl
test
inc
mov
cwtl
mov
icebp
in
repnz
lods
and
cwtl
aas
and
bnd
inc
pop
gs
cwtl
mov
out
bound
lods
out
stc
data16
push
and
aas
out
and
and
xchg
dec
pop
jge
loopne
mov
mov
dec
mov
out
fdivs
fdiv
popl
ret
xchg
pop
fwait
out
xchg
mov
add
in
push
push
imul
mov
sahf
xor
dec
sahf
test
adc
xchg
pop
mov
out
dec
std
and
xchg
xor
clc
arpl
inc
hlt
pop
out
push
xchg
jl
aam
aas
inc
pop
daa
scas
sti
xchg
pop
xor
pop
addr16
or
shll
mov
out
cpuid
push
xor
int
sar
loopne
xor
outsb
jmp
or
cs
fildll
gs
push
dec
lods
mov
jb
add
sbb
loope
cltd
dec
mov
loop
ret
jbe
out
add
pop
push
out
std
mov
cltd
mov
orb
xchg
leave
sahf
or
fwait
cmp
adc
or
andb
std
dec
inc
mov
mov
js
in
das
jo
or
xchg
aas
fisttpl
and
sub
cmp
add
es
inc
fs
out
out
sub
test
push
jnp
push
fisubrl
jnp
cwtl
test
pop
or
test
mov
inc
inc
popf
adc
cmc
ds
sarl
xchg
decb
scas
rorl
lock
xor
push
or
enter
mov
and
mov
sti
jp
outsb
jmp
xlat
or
ret
pop
inc
movsl
ret
std
inc
in
test
notl
inc
in
imul
ret
into
je
jb
sbb
inc
mov
pushf
mov
lods
insl
incb
jb
mov
pop
jae
sti
jecxz
and
pop
rclb
jo
add
mov
mov
movsl
repz
jb
xchg
sub
rorb
sbb
sbbl
inc
fdivs
xchg
cmp
lock
arpl
fmull
jae
cs
enter
cld
outsb
mov
mov
sahf
xchg
cli
imul
pop
xchg
sbb
shl
outsl
xchg
mov
mov
mov
sbb
jge
xor
adc
add
cmp
cmp
aas
shrb
cmpsb
imul
mov
push
scas
fldt
loopne
sarb
push
dec
and
mov
faddl
sbbl
cmp
or
into
push
mov
int3
lret
call
dec
cld
mov
jae
sarl
imul
shrb
push
testb
xchg
movsl
int3
cli
cmpsl
ret
mov
scas
mov
scas
mov
shll
aaa
dec
mov
cmp
mov
js
out
fmull
pushf
insl
pusha
in
icebp
push
faddl
pop
rcll
sub
push
xor
out
cmp
xor
scas
mov
inc
js
pop
pop
mov
pop
mov
in
daa
xchg
xor
lret
fwait
call
popf
mov
jne
or
or
enter
imull
inc
in
mov
mov
nop
dec
cmp
popa
aad
into
dec
aaa
cltd
or
jl
lds
push
pop
cwtl
outsl
lock
stos
int
aas
cwtl
jge
jp
aas
push
cld
lcall
xchg
cmp
fadds
jne
push
fcmovnb
add
punpcklwd
js
cmpsl
sbb
stc
mov
mov
scas
push
adc
cmpsb
jbe
punpckhdq
pop
dec
les
sahf
movsb
mov
pop
add
and
fimull
decb
push
insl
ljmp
popf
int3
loopne
call
fwait
push
jl
pop
xchg
iret
fsub
shll
mov
xchg
outsl
dec
gs
je
xor
fwait
mov
xchg
outsl
adc
sbb
adcb
sar
flds
out
repz
ror
sbb
jg
test
push
inc
aad
adc
and
add
xorl
fdivrl
inc
jb
sbb
mov
mov
cmp
popa
mov
cmp
adc
scas
mov
xor
sub
ja
xchg
jg
les
ror
dec
pop
outsl
sub
in
ja
leave
push
mov
and
pushl
jno
sub
sub
and
sub
cmp
lds
scas
and
fadds
push
add
dec
in
and
pop
leave
aaa
stos
gs
jp
and
nop
ljmp
xchg
subb
push
mov
mul
out
adc
aam
mov
xchg
imul
imul
pop
imulb
fbstp
adc
cmp
jecxz
into
xchg
mov
add
bound
sub
arpl
jle
jge
imul
cmpsb
test
out
cwtl
sub
call
test
test
xor
push
or
loopnew
ret
pop
insb
arpl
and
in
fdivl
mov
lds
insl
rcll
cmp
sub
cmc
sub
imul
xchg
mov
js
dec
out
mov
nop
repnz
aas
push
jge
lret
shll
xor
mov
popf
or
ds
shll
or
fcoms
push
dec
rorb
mov
das
outsb
stos
xchg
mov
lods
mov
ss
aad
out
xchg
shr
test
aam
and
mov
push
jne
cld
pop
outsb
call
idivb
push
int
pop
push
xor
mov
test
mov
in
scas
mov
jp
xor
or
and
mov
movsl
mov
fwait
sub
scas
inc
ret
or
adc
adc
xor
push
push
xchg
ret
mov
pop
mov
jp
xor
in
rol
pslld
mov
jns
adc
iret
js
aam
call
lods
mov
cmp
cmpsb
add
xor
mov
cmc
adc
mov
cltd
dec
mov
loop
cmp
fisubrl
jae
jne
dec
lods
aad
fsub
sahf
les
or
jge
xchg
stos
xlat
sbb
xchg
dec
ret
xchg
mov
push
ret
clc
mov
xlat
movsb
addr16
pop
mov
cmp
push
imul
out
dec
cmp
mov
xchg
in
mov
ss
pusha
xor
ja
jo
mov
lret
and
mov
jle
mov
pop
repnz
push
call
add
ds
cltd
ret
jecxz
repnz
mov
repz
push
das
lods
push
pop
popf
insl
adc
movsb
fisttpl
lock
sbb
scas
comiss
orb
mov
stos
fcmovnb
adc
xchg
xor
mov
jmp
jno
cli
pop
push
add
adc
inc
xor
cltd
inc
in
lret
xor
test
popf
pop
stos
pusha
cld
rorb
sahf
adc
adc
shll
cmc
adc
daa
xchg
cltd
fwait
xchg
js
fsubp
fs
xchg
mov
cld
icebp
jle
out
and
mov
ret
into
icebp
sahf
push
test
lds
fs
lcall
stos
add
xchg
or
adc
rcl
cmp
xchg
inc
adc
and
ja
imul
sbb
aas
fwait
shl
cltd
sbb
push
or
jg
pusha
xor
sub
mov
enter
lcall
push
fnsave
mov
mov
out
cmpsl
push
imul
jle
dec
outsb
sbb
fmul
loope
fdiv
push
clc
hlt
das
sahf
daa
pop
mul
jg
andl
fidivs
imul
mov
loope
and
fxam
mov
lcall
xchg
shlb
mov
rcll
and
lds
subl
cmp
int3
jmp
inc
lods
jne
pop
ja
les
daa
fisubs
pop
mov
jle
sbb
sahf
fsubs
pop
repz
xorl
popa
inc
nop
jge
loope
cltd
adc
pop
xchg
push
mov
mov
push
mov
pop
or
xchg
dec
cmpb
xchg
aas
stos
mov
mov
or
mov
je
mov
in
cmp
fiaddl
or
dec
cld
sub
scas
push
lea
cmc
into
cmpsb
inc
mov
das
adc
dec
test
out
leave
cmp
mov
cmp
xor
clc
dec
dec
test
cmc
xchg
mov
test
ds
icebp
es
out
fptan
mov
pop
cmpsb
cltd
cmp
divb
and
hlt
mov
dec
bound
add
adc
pop
ficompl
push
xor
int
sub
adc
lock
cld
mov
fwait
gs
out
sbb
test
test
cwtl
sbb
shl
cmp
inc
xchg
mov
pop
jmp
sub
or
pop
push
fwait
mov
mov
lods
jge
pop
icebp
mov
push
fistl
mov
mov
jp
dec
nop
jecxz
xor
sbb
cwtl
test
cmpsl
arpl
out
add
mov
and
pop
dec
mov
outsl
repz
sub
push
stc
adc
ret
std
divb
int3
loopne
xchg
push
xchg
stos
and
push
jnp
mov
or
mov
pop
xchg
dec
popf
stos
mov
xor
mov
fists
xchg
sahf
dec
aas
cmpsl
popa
pop
hlt
jl
xchg
mov
repz
pop
mov
fwait
and
ss
mov
mov
aad
xor
nop
jg
xchg
cld
enter
inc
cmc
in
scas
imul
notl
dec
pop
jae
and
pop
push
fwait
mov
loope
sub
and
or
push
out
test
jle
sahf
stos
gs
lret
jo
out
or
sub
scas
repz
sub
popf
xchg
je
mov
mov
hlt
imul
jg
cmpsl
call
idivb
andl
sub
roll
rol
cld
cmpb
push
push
ret
sub
orl
or
mov
imul
pop
dec
mov
mov
pop
aad
dec
or
xchg
cs
ds
les
sbb
jle
dec
cli
mov
jge
mov
scas
jmp
sbb
xchg
add
loop
pop
out
push
or
inc
insl
lock
pop
dec
mov
cwtl
pop
leave
or
mov
push
mov
xor
sbbl
and
jl
dec
iret
push
pop
lock
das
lock
cltd
dec
sarl
cmp
mov
pop
jg
pop
mov
cmp
sbb
in
or
xor
cmpsb
cld
imulb
gs
or
jnp
xchg
sub
call
sbb
mov
leave
insb
or
xchg
jo
inc
xchg
mov
in
lret
xchg
dec
or
cltd
inc
jmp
test
in
jecxz
addb
mov
adc
xchg
xor
int3
idivb
fiadds
rcrl
ds
scas
xchg
psubusw
ror
sahf
cmpsb
mov
xchg
mov
in
das
popf
mov
inc
jns
adc
test
jb
ja
jmp
scas
je
int3
dec
xchg
pop
fwait
pop
jge
push
or
sub
jmp
insb
mov
daa
pusha
adc
push
xchg
lock
in
xchg
pop
xchg
mov
push
outsb
scas
ds
inc
fisttpll
dec
adc
scas
add
pusha
loopne
and
scas
adc
fldenv
pop
inc
add
mov
xor
jmp
sub
inc
out
hlt
mov
loopne
nop
sarl
inc
add
push
pushf
xchg
dec
jle
stc
popa
mov
jo
loopne
mov
das
pop
popf
aas
lds
jne
and
push
sub
sub
call
shlb
addl
jae
out
shl
lds
fldt
push
fisttpll
loope
jne
adc
xor
movsb
mov
mov
popa
add
or
dec
and
dec
xor
loop
roll
jb
dec
xlat
out
cmp
sub
fisubrl
cmp
pop
movsl
jbe
sub
mov
and
adc
fistps
jb
lock
inc
loope
enter
aad
inc
xchg
pop
scas
inc
aas
adc
push
or
imul
jg
int3
ret
xchg
cmp
adc
clc
mov
ret
and
out
fisubs
shr
div
pop
shlb
js
lods
mov
pop
lods
inc
add
jp
push
out
jno
mov
sub
cmp
xchg
mov
pop
ja
fwait
mov
add
ret
push
cmp
mov
sub
xor
stos
sbb
dec
pop
add
or
mov
ja
dec
jmp
inc
call
or
jb
mov
lahf
mov
sub
cmpb
popf
adcl
mov
mov
int3
int3
xchg
jae
mov
imull
lcall
xchg
pop
lret
mov
mov
fmulp
fisubrl
jb
mov
pop
cs
nop
fs
xor
add
cmpsb
test
add
jns
mov
fidivs
loope
in
inc
and
aam
lea
fidivl
mov
in
mov
jbe
int3
divl
in
imul
icebp
pshufw
cli
adc
sub
xor
sbb
dec
lods
stos
imul
mov
jne
sbb
or
sub
test
icebp
or
orb
dec
push
dec
push
add
sub
int3
lret
and
inc
ss
mov
rcrb
pop
adc
mov
sbb
test
xor
push
les
push
sbb
jg
fwait
jb
fldl
adc
xchg
dec
sub
outsl
clc
and
sbb
mov
mov
cmp
sub
cmpsb
and
sbb
jae
ss
cmc
gs
es
js
inc
hlt
dec
test
mov
ret
or
mov
mov
mov
pop
cld
and
mov
push
mov
or
mov
movsb
sbb
aas
or
pop
push
repz
push
jno
xchg
dec
testb
repnz
xchg
adc
test
push
push
aas
aaa
jle
sbb
div
bnd
adcl
arpl
insl
je
mov
lret
out
adc
push
mov
std
mov
shl
add
mov
jne
stc
imul
pop
loope
xor
nop
cmc
pusha
inc
sub
jge
pusha
out
adc
or
mov
xor
pop
dec
pop
add
jp
clc
mov
lahf
push
sub
jle
sbb
fldenv
cltd
fs
fisttps
cmpsl
fbld
sbb
and
int
xchg
fs
pslld
mov
mov
ret
sbb
inc
lahf
push
jno
int
mov
cmp
js
push
inc
mov
imul
ja
std
xchg
lock
loope
jmp
daa
movsl
jb
imul
push
inc
xor
or
cmp
xor
cli
in
push
jecxz
and
ja
ret
rcrb
cmpsb
add
adc
adc
test
add
and
or
cld
je
sti
mov
mov
stos
push
and
ljmp
mov
shll
sub
add
out
out
dec
bound
es
and
clc
fprem1
cmp
sbb
lods
jmp
and
subl
clc
in
cmp
mov
jb
and
es
mov
push
xchg
leave
loop
int
fsub
push
mov
jecxz
dec
mov
xor
sahf
in
cltd
push
data16
xchg
xor
mov
insb
sbb
in
jle
test
in
iret
jbe
sub
rol
push
cs
andl
fucomi
push
loope
movsb
out
xor
fidivs
xor
loope
xchg
sub
and
jmp
decb
loop
dec
sbbl
out
cld
call
inc
adc
test
pop
je
movsb
push
mov
je
xchg
fs
adc
rcrb
xchg
aas
loopne
stc
addr16
pop
xor
xchg
mov
scas
mov
jecxz
or
gs
fistpll
dec
push
cmp
out
mov
sbb
xor
arpl
inc
idiv
cld
std
and
inc
out
movl
dec
dec
js
mov
mov
dec
xchg
pop
jne
aaa
dec
jl
push
lods
nop
loopne
and
lods
into
out
sbb
or
pop
andb
enter
mov
repnz
mov
xor
add
xchg
divl
cmp
mov
fldenv
test
mov
loop
out
or
outsb
std
sbb
enter
cmp
pop
sbb
in
imul
shll
stc
in
mov
jge,pn
xchg
fdivl
ret
pop
int
xor
jle
hlt
mov
lret
cmpb
push
es
lods
lahf
insl
test
jp
xchg
jl
push
bound
je
or
cltd
push
jno
jmp
enter
sub
ret
rorb
or
adc
adc
or
pop
bound
cmp
sub
mov
rclb
subl
jg
addb
sub
lea
pop
pop
mov
cld
stc
loop
xchg
jb
cmp
aaa
mov
sahf
fisttps
dec
int
jbe
lods
pusha
jnp
ret
aas
add
gs
dec
adc
ror
cwtl
out
inc
adc
aas
mov
add
shrl
xchg
jle
dec
mov
int
pop
inc
push
fcompl
jns
xor
sti
ficomps
test
sti
in
mov
into
or
leave
in
ds
pusha
jge
shl
fucomip
fsubp
in
pop
idivl
pop
pop
cmpsl
jo
sub
push
xor
mov
pusha
lods
in
shl
push
add
stc
xchg
xchg
or
mov
sub
mov
mov
sub
out
jl
jne
ja
insl
stos
xlat
adc
cmp
xlat
addl
outsl
iret
adc
pop
enter
sbb
repz
inc
jle
cli
push
dec
repnz
shlb
mov
popa
and
xchg
fs
ljmp
jbe
jbe
and
pminsw
shll
or
xor
adc
or
mov
sbb
orb
or
dec
push
add
inc
std
test
lods
bound
inc
xor
aaa
add
mov
inc
sub
jb
pop
mov
outsl
lret
into
sarb
xorl
je
adc
cs
arpl
jmp
movsl
stos
jb
mov
int3
outsb
adc
jl
jo
push
and
adc
pusha
jge
push
or
call
and
mov
xor
sub
cmp
sub
sarb
jle
cmp
adcl
ret
out
or
test
std
incb
shrb
xlat
insb
in
and
iret
dec
movsl
sub
out
xchg
sub
popf
sbb
subb
sub
rolb
xchg
dec
jns
loop
sbb
stc
or
jg
fstl
sub
pop
add
rcll
inc
add
push
inc
jno
mov
icebp
xor
mov
and
mov
cmp
or
movsl
jecxz
mov
cs
pop
loop
cmp
mov
test
aas
lret
sbb
push
sbb
out
stc
adc
jbe
loopne
insb
cmp
loop
dec
cmp
xchg
and
in
jns
jno
leave
rolb
divl
test
push
in
aam
jl
jb
ret
ja
add
push
jp
rclb
mov
icebp
scas
adc
push
insl
adc
push
pop
pop
cmp
mov
jnp
aas
cmc
cli
popa
push
int3
push
and
xchg
sbb
mov
bnd
fsubrp
inc
ja
mov
sti
push
sbb
inc
adc
hlt
mov
hlt
scas
push
imul
push
fwait
cltd
out
out
arpl
popf
jmp
mov
xchg
movsl
test
fcoml
repnz
lods
or
xchg
pop
inc
cltd
add
xchg
inc
in
push
inc
pop
add
addr16
cld
jns
mov
ljmp
clc
xchg
mov
mov
iret
sbbb
pop
arpl
lcall
add
mov
js
lods
fincstp
lret
insb
adc
rcrl
mov
jb
fistpl
adc
out
loop
in
xlat
add
rorl
imul
and
f2xm1
cmp
xchg
jae
jno
sub
adc
or
sub
hlt
imul
lcall
rorb
mov
dec
and
push
and
jo
jg
stc
test
inc
xor
popa
push
std
in
fnstcw
cmpsl
mov
sbb
popf
or
rclb
adc
mov
fsubl
testb
test
mov
pop
jne
pop
xor
int3
inc
pop
xchg
jne
stos
mov
xchg
leave
inc
adc
jbe
stos
pop
add
out
and
iret
mov
roll
divl
mov
fisttpl
fs
rolb
sbb
push
outsb
fiaddl
mov
cmpb
ss
out
inc
push
and
hlt
rorl
lahf
xchg
clc
js
cmp
xor
push
push
ret
adc
mov
ds
mov
imul
fdivrp
sahf
adc
daa
push
mov
adcb
movsb
lods
dec
pop
enter
jg
fsubrs
jb
clc
cmp
pop
mov
inc
mov
cmp
and
mov
cltd
icebp
cmp
sub
push
shrl
hlt
sbb
jmp
imul
push
xchg
mov
jo
fisubl
pop
sbb
push
adc
fstpl
jle
lcall
hlt
mov
lods
adc
pop
loopne
jp
scas
insl
or
rorl
push
aas
sbb
sbb
and
cmp
jmp
adc
cmp
out
jmp
push
inc
xchg
ljmp
loope
and
imull
or
fiadds
out
jb
pop
or
push
add
addr16
mov
call
in
fisubs
add
pop
mov
idivb
dec
fisttpl
jnp
inc
pop
adc
jge
mov
cmp
mov
cmp
sub
clc
mov
sbb
sahf
shlb
or
in
sub
pusha
sahf
push
add
pop
rcrb
inc
mov
add
pop
mov
aaa
xchg
les
sbb
push
adc
adc
cmp
shlb
push
mov
xchg
mov
xchg
dec
lret
add
stos
int3
in
stos
adc
adc
ds
xor
pushl
fmulp
in
add
call
sbb
mov
dec
jmp
arpl
mov
jle
arpl
out
lret
and
aas
inc
push
push
fisubl
stos
cli
test
lret
clc
or
push
clc
pop
out
xchg
jg
pop
rcrb
xchg
push
in
xor
pop
jbe
je
movsl
inc
mov
les
imul
xor
in
std
push
pusha
addb
shlb
jecxz
or
cli
das
into
test
pop
pusha
scas
xchg
jae
xchg
add
data16
das
sahf
sub
jp
push
dec
xchg
dec
add
sub
dec
cmp
mov
mov
push
fwait
scas
aas
repnz
sub
mov
filds
sub
jge
sub
pushf
shll
pop
add
dec
stos
sbb
adc
xchg
xchg
dec
cmp
nop
inc
in
test
mov
xchg
fistl
addr16
rolb
lock
lea
xchg
je
xor
fdivr
xchg
or
mov
fst
mov
pop
arpl
inc
lret
insl
and
inc
xchg
lea
or
into
mov
xchg
or
dec
add
cld
outsl
lods
xor
or
lcall
xchg
aaa
fwait
cmp
ljmp
xlat
xchg
mov
pop
aad
jecxz
dec
dec
sbb
fdivrp
mov
jae
aas
jge
inc
mov
inc
repz
jo
es
insl
or
cmp
inc
insb
xorb
aaa
sar
mov
aaa
nop
or
push
sub
sbb
pop
or
mov
fiaddl
dec
push
cmp
xor
loope
movsl
popl
or
xchg
ljmp
push
mov
sbb
jb
and
cwtl
mov
cmp
sbb
lret
or
fisubl
inc
or
out
mov
insl
insl
in
dec
jmp
sbb
cld
shll
mov
inc
jbe
and
dec
out
inc
inc
cmp
popf
fiaddl
jg
sub
or
sbb
and
jmp
or
pop
bound
sar
pop
pushf
mov
sub
push
jns
xchg
jp
jecxz
loopne
in
xchg
stos
inc
mov
cmpsb
imul
mov
fbld
out
test
shl
ret
gs
in
sbb
shll
sub
bound
daa
fs
dec
pop
lods
push
mov
push
das
loope
cs
sti
sub
jo
jg
jg
or
push
and
add
je
push
and
clc
adcl
je
lea
jge
aaa
inc
jle
jle
jo
mov
data16
subl
les
ficoml
decb
mov
lea
clc
test
pop
pop
mov
jae
int
and
add
movsl
mov
or
ss
iret
loopne
cmp
pop
sahf
mull
mov
add
call
mov
rolb
pop
dec
cmpb
jne
ss
gs
mov
lcall
test
test
ret
rcll
movsl
ss
jg
dec
xor
mov
fldt
mov
push
ret
movsl
dec
dec
or
enter
decb
aam
mov
shrb
push
test
movsb
cmpsl
addr16
repnz
push
jns
test
out
out
loopne
scas
mov
ljmp
lret
cmp
insb
pop
cld
movsl
imul
and
sbb
jp
xchg
push
cmp
push
xor
push
fcoms
nop
mov
in
insl
dec
cmp
xchg
idivb
adc
xor
iret
cmc
movsb
dec
inc
jl
imul
divb
addr16
cmp
and
icebp
mov
pop
push
add
mov
sub
xor
xchg
lock
movl
popa
pop
aad
cmp
imul
jle
loop
cmp
out
and
andb
gs
fsub
or
out
cmp
in
clc
xchg
push
cmp
jnp
nop
in
xchg
ljmp
sbb
insb
cmp
dec
mov
leave
and
xor
sub
cmp
push
push
mov
mov
jns
es
push
cli
and
sti
daa
loop
and
cmp
mov
adc
rcl
insb
mov
fadds
push
arpl
xchg
xchg
outsb
je
das
stc
dec
add
es
pushf
fdivrl
das
mov
mov
and
dec
push
and
cmpsb
push
push
lret
inc
mov
push
rcll
mov
adc
in
pop
ljmp
popa
adc
adc
push
in
mov
lret
pop
cmc
pop
shlb
fcoms
mov
das
icebp
ss
xchg
xor
adc
je
dec
fs
out
sbb
add
mov
sbb
bound
push
scas
sbb
movb
inc
pop
pop
xor
popf
pop
xorl
in
pop
jo
xor
call
xchg
aas
xchg
cmp
out
adc
ret
cmp
mov
jp
ja
xor
mov
js
cwtl
fisttps
ret
rcrb
and
mov
lds
and
pop
movsb
pop
mov
xlat
stos
aad
xchg
mov
add
jl
sahf
test
mov
sub
dec
adc
inc
cmp
xchg
aad
daa
push
adc
sti
movsl
jns
sbb
adc
cmp
push
arpl
push
pop
jmp
shll
rcrb
cmp
in
pusha
xor
or
mov
lock
inc
push
mov
mov
sub
xchg
imul
dec
leave
push
lock
fisubs
sbb
fnstenv
mov
mov
cmpsl
pop
addr16
pop
outsl
dec
inc
sub
icebp
jp
mov
mov
cmp
cmc
popf
cltd
push
aas
loop
push
sahf
fistpll
les
jae
inc
cmp
mov
std
xchg
cs
stc
xchg
adc
rcrl
clc
xchg
jae
daa
mov
xchg
jno
push
fnsave
jns
mov
es
push
or
imull
nop
idivb
add
arpl
adc
jns
add
xchg
cld
pop
xor
mov
push
test
test
mov
add
dec
jp
pop
jns
sbb
ficomps
sti
adc
pop
push
js
dec
or
out
pushf
test
mov
lahf
xor
sub
xor
xchg
out
cmpsb
ret
jl
in
stc
stc
mov
stc
xor
adc
cmp
xor
insb
inc
sahf
rcrb
les
aad
aas
dec
int
outsb
mov
mov
dec
popl
sbb
xor
les
pop
pop
dec
push
push
mov
mov
in
add
push
scas
push
add
xorl
movsb
add
ret
ficompl
aas
jge
daa
in
fwait
mov
jne
jnp
out
inc
ljmp
ja
fcomps
push
pop
filds
xor
dec
ret
adc
lret
jp
xchg
into
jp
std
cmp
imul
mov
push
icebp
xchg
cmp
nop
in
inc
pop
test
add
mov
ljmp
imul
push
out
orb
mov
fbstp
aad
lods
xchg
idivl
mov
adc
xchg
pop
push
or
stos
pop
outsl
loop
adc
mov
pop
sub
pop
inc
aas
push
sbb
xor
mov
loop
pushf
out
cmpsl
mov
xchg
pop
loopne
mov
and
clc
or
loopne
lret
push
inc
loopne
lret
paddw
jo
cmp
xor
lods
icebp
lahf
inc
dec
mov
mov
inc
lcall
repz
daa
mov
xor
fstps
adc
ficoml
inc
mov
data16
push
fwait
xchg
mov
daa
xor
enter
or
dec
add
dec
sub
mov
mov
lahf
mov
lds
push
cmp
adc
jns
fsubr
arpl
adc
int3
loop
stos
jecxz
daa
or
pop
pop
ror
adc
mov
sbb
adc
cmpsb
in
stos
mov
cmp
xchg
and
dec
pusha
lock
lret
push
or
xchg
cmp
shr
sub
mov
sarb
xchg
bound
cld
pop
loop
sbbb
iret
ds
bound
mov
stos
and
icebp
cmp
push
cs
sbb
repz
xchg
mov
push
push
popf
nop
test
push
jp
rcl
jno
sbb
xchg
shlb
push
mov
ds
mov
jae
stos
xor
roll
mov
idivl
push
outsl
shrb
mov
fisttpl
sbb
jmp
lods
into
adc
jns
pop
jns
and
ds
enter
out
shl
add
cmp
fwait
in
cmpl
cmp
inc
pusha
rorb
hlt
mul
jne
les
bound
sub
jns
inc
sub
or
push
push
pop
mov
pop
pop
mov
sbb
lds
lods
call
jle
adc
or
or
popf
scas
fnsave
sbb
xchg
int
adc
cmpsb
mov
lahf
ja
dec
sub
jno
test
lods
push
cmp
mov
cwtl
mov
int3
lds
das
add
jge
aad
into
outsb
sbbl
and
sbb
lods
jecxz
push
bswap
in
add
call
mov
sbb
cltd
push
add
lds
adc
fldln2
je
adc
jl
sbb
mov
pop
mov
sbb
call
inc
inc
gs
xchg
jmp
inc
int3
dec
or
mov
ret
adc
mov
and
pop
mov
sub
dec
cmpsb
gs
je
shll
xchg
gs
mov
cmp
inc
aad
push
scas
mov
ja
daa
adc
inc
xor
cmp
filds
push
sub
sub
das
or
fmul
push
rorl
test
and
out
sarb
mov
dec
and
mov
scas
enter
push
push
arpl
dec
gs
shrl
jecxz
push
xchg
mov
mov
mov
sarl
inc
nop
test
fimuls
sbb
or
rcll
adc
inc
nop
out
jbe
and
test
orl
lahf
or
push
xor
roll
and
enter
pop
mov
sbb
fs
mov
adc
scas
loopne
rorl
jp
out
cmp
jnp
pop
pop
aaa
les
or
lret
and
dec
popl
fwait
sbb
or
mov
jae
sub
mov
movsb
push
cmp
xor
les
fs
mov
jns
mov
mov
xchg
push
outsl
sub
into
call
push
pop
lods
sbb
popa
dec
xor
push
adc
mov
test
or
cld
xor
xchg
mov
sub
out
cmpsl
test
cmp
push
inc
mov
mov
call
call
mov
in
xlat
push
pushf
pop
dec
cmp
xor
sbb
mov
mov
cli
xchg
fidivl
shlb
lods
sub
inc
ja
nop
and
pop
je
cwtl
repz
icebp
xlat
lods
lahf
mov
mov
add
bound
add
mov
loopne,pt
xchg
cli
andl
int
in
cmp
cltd
cmp
xchg
lret
dec
mov
rcr
jnp
data16
jno
cmovge
rorl
idivb
cltd
lret
fldcw
cmp
cmpsb
mov
xchg
mov
fisubrl
or
inc
dec
mov
mov
cmp
dec
or
or
fwait
and
dec
clc
or
aad
enter
stos
cli
push
int3
and
das
push
xchg
xchg
adc
cmp
push
xlat
aaa
jo
pop
sahf
inc
sbb
jle
sub
jno
ja
repnz
mov
out
jp
xchg
ret
aas
push
data16
dec
mov
sbb
and
or
push
insb
fs
or
shll
xlat
rolb
xchg
sbb
xor
or
aam
cmp
ret
shll
adc
cltd
pop
outsl
fnstsw
pop
mov
push
sbb
mov
xchg
ret
push
push
outsb
mov
in
xlat
cmp
xchg
sub
lahf
dec
mov
or
sbb
ljmp
dec
pop
xlat
push
test
nop
hlt
adc
nop
add
dec
fidivrs
stos
mov
popa
and
mov
das
push
cmp
cmc
or
or
popf
dec
jp
ja
iret
fs
adc
push
push
inc
xchg
and
xchg
xor
mov
xor
mov
hlt
add
andl
xorl
rcrb
xor
and
jmp
movb
jns
jmp
inc
std
fstps
add
pop
cmp
repnz
inc
pop
inc
xor
sub
clts
xor
add
jo
push
push
mov
insb
in
pop
cmpl
ret
movsb
mov
fs
pop
in
push
subb
mov
sbb
xorb
pop
jnp
pop
ss
cmp
in
xchg
mov
mov
dec
or
push
push
aam
icebp
inc
addr16
xchg
or
shlb
inc
or
mov
or
sbb
xor
bound
rcl
test
fisubl
cmpsb
lods
testb
in
jno
pop
sub
inc
pop
jg
fisttps
mov
stos
mov
and
movsb
inc
xchg
fwait
ljmp
push
testl
mov
jo
leave
gs
cmpsb
cmovae
out
or
test
movsb
pop
fcomps
jo
ja
fisubs
pop
lret
mov
iret
jl
ja
pusha
xor
or
inc
pushf
cmp
out
and
and
pop
adc
cltd
mov
mov
popf
pop
xor
leave
xchg
inc
sbb
sub
lahf
addr16
add
insl
loopne
jmp
test
jle
inc
lds
test
fs
pop
in
mov
jle
clc
pusha
jmp
mov
mov
sub
orb
ja
xlat
out
icebp
addl
mov
or
xlat
and
std
test
popa
inc
bound
mov
iret
push
cmp
pop
adc
mov
aas
xlat
xlat
shll
imul
push
mov
test
jmp
jmp
int3
ljmp
xchg
dec
jns
mov
xchg
andb
fisttpll
and
pop
pop
dec
adc
xchg
xchg
or
sub
push
cs
or
fdivs
daa
or
xchg
pop
jg
mov
in
xchg
inc
fmull
pop
flds
cmp
in
nop
test
ret
cmp
mov
loopne
mov
add
out
dec
subl
sub
sbb
cmp
jns
pop
mov
imul
gs
xor
mov
fdiv
mov
dec
and
ja
and
sbb
mov
cmp
movsl
inc
repnz
pop
jnp
imul
hlt
xlat
jl
mov
add
dec
inc
in
lds
daa
or
pop
jl
mov
adcl
and
dec
or
loopne
mov
call
push
pop
mov
jns
and
aad
ret
in
data16
mov
xchg
pop
cltd
pop
adc
insb
add
mov
mov
fwait
sub
jnp
or
test
enter
arpl
sub
aas
adc
in
mov
add
ss
int
inc
ror
pop
mov
push
mov
scas
hlt
pop
shrl
push
lods
subl
push
pop
icebp
lcall
lods
push
loop
daa
pop
fnstcw
sub
jae
roll
movsl
les
in
push
mov
inc
sarl
fwait
lds
outsl
fmull
and
or
cmpsl
sub
sarb
push
jecxz
sbb
orb
xor
sar
push
and
pop
mov
out
xor
movsl
mov
aam
out
and
dec
jno
xlat
pop
sub
jo
in
pop
lock
push
or
mov
data16
cmp
outsb
into
and
mov
sbb
pop
scas
sti
cmpsl
jb
test
sti
icebp
outsl
xchg
repnz
test
fildll
xlat
cmp
ret
test
sbbl
pusha
aad
pop
out
add
ret
cmp
push
daa
leave
out
stc
pop
jge
fidivs
adc
cmc
jns
jb
push
bound
and
jmp
stc
cwtl
xor
lods
shrb
sbb
mov
lret
negb
cmp
addr16
mov
mov
jl
dec
repz
smsw
popf
mov
mov
stos
test
ja
mov
mov
push
dec
pushf
xor
push
mov
ljmp
lods
repnz
jno
aaa
push
sbb
cli
adc
ja
popa
sbb
xor
mov
cwtl
mov
cmp
js
mov
cmpsb
outsl
shl
movsl
mov
pop
or
dec
sahf
or
repz
ficompl
fucomp
jbe
push
push
mov
xor
mov
popf
imul
push
test
pop
or
clc
or
hlt
push
pop
jb
mov
jge
dec
ret
xchg
sbb
iret
mov
inc
ljmp
and
iret
jge
or
mov
std
loop
dec
or
xor
jg
rolb
pop
inc
push
push
sub
std
push
test
lods
repz
jns
cwtl
test
lret
push
les
fiaddl
mov
push
lcall
fnstenv
and
scas
loopne
xchg
push
pop
inc
fsts
sti
xor
xchg
nop
xchg
cwtl
xor
je
inc
xor
pushw
insb
add
adc
mov
stos
jmp
arpl
leave
enter
fbstp
daa
mov
push
xor
fcmovnb
adc
test
add
les
arpl
ficompl
mov
xlat
insl
scas
ficompl
and
push
iret
test
mov
out
xor
jl
jecxz
stos
inc
cmpsb
inc
push
and
mov
xlat
mov
cmp
mov
mov
xlat
add
aas
sub
inc
rclb
imul
rclb
sbb
jecxz
xor
inc
inc
das
sbb
push
subl
push
sub
inc
int
add
add
push
shr
dec
push
fdivrp
les
and
loopne
push
in
pop
mov
jae
jb
test
mov
pop
das
pmaxub
xor
xor
lods
xchg
xlat
mov
lahf
lret
subb
or
bnd
sub
jno
into
cmp
data16
mov
imul
xlat
cmp
pop
xor
fsubrs
lahf
cmove
push
loopne
popl
adc
inc
mov
leave
mov
es
mov
shrl
xlat
cmpsl
inc
int3
bound
push
shlb
dec
enter
cmpsb
out
outsb
jecxz
jbe
xor
xchg
inc
jle
jb
call
ja
adcl
stc
faddl
in
pop
sub
cld
adcl
jp
out
in
subb
test
stos
xor
jnp
pop
cs
sbb
aas
fwait
hlt
in
fidivrl
adc
and
lds
lods
push
dec
fucomp
dec
imul
andl
sbb
jp
loopne
movsl
int
add
sar
idiv
jge
pop
mov
jp
nop
in
sub
movb
sbb
stos
outsb
adc
pop
dec
sbb
enter
loop
mov
push
dec
dec
test
jno
mov
jo
cmc
out
stos
stc
jl
incb
pop
inc
rol
dec
fbstp
mov
insl
push
jmp
or
ja
mov
adc
cmpsl
push
jns
and
inc
or
sbb
psubq
cld
cmp
lock
pop
or
jle
adc
arpl
add
jl
jge
and
inc
and
and
loop
lea
rorb
or
out
movhlps
out
jmp
cld
je
adc
aaa
sub
mov
adc
jb
aaa
jge
ss
sbb
test
jne
sbb
sub
mov
popf
adc
sbbl
cmp
push
dec
push
lret
sub
insl
outsb
test
roll
sub
pop
pop
movsl
mov
xchg
loop
push
sub
pop
fsubp
stos
xchg
jne
data16
icebp
mov
scas
pop
jb
fisubl
cmp
jbe
add
loopne
imul
pop
data16
cmpl
lret
leave
roll
sub
lock
xor
add
test
test
outsl
not
xchg
add
xor
add
and
xchg
mov
or
les
add
movsl
cmp
dec
mov
sub
xor
stc
cmp
out
sti
imul
pop
lret
or
jmp
lds
inc
mov
scas
test
arpl
cmpsb
push
sub
rcr
shrb
pop
bound
nop
sub
add
push
and
cmp
aaa
lds
out
stos
outsl
pop
loop
outsb
mov
sub
js
ficompl
cld
dec
sbb
call
dec
in
icebp
mov
sbb
mov
or
out
pop
cmp
shl
movsb
std
outsl
cmp
test
jne
mov
add
sti
add
xchg
data16
mov
xchg
sub
dec
dec
imul
subb
rorb
out
push
adc
rorb
dec
jb
hlt
sahf
cmp
dec
imul
dec
sbb
xlat
dec
and
pop
or
jg
ret
adc
fidivs
pop
xorb
dec
sub
mov
cli
cmp
loope
cmp
jmp
xor
stos
adc
test
mov
cmp
mov
ret
cmp
dec
sbbb
adc
sbb
add
jno
push
mov
clc
mov
in
mov
pusha
lret
xlat
jne
xor
push
add
int3
out
dec
pop
in
js
xlat
je
popa
inc
or
mov
cs
insl
jo
inc
add
jo
in
call
and
cmc
jo
ficomps
fldt
or
mov
mov
stos
std
loopne
shrl
sub
mov
je
mov
insb
sahf
ret
ja
mov
mov
stos
inc
and
jb
xorps
rorb
lret
adc
aad
out
int3
pushf
data16
mov
jg
jno
dec
cmp
mov
sub
fs
repz
adc
adc
out
rol
cltd
enter
jnp
sbb
imul
sti
mov
lea
out
jmp
push
or
shlb
sbb
mov
adc
push
jecxz
xchg
pop
ljmp
sub
rcrl
xor
sbb
sbb
pop
jno
inc
lcall
adc
xor
mov
lret
add
and
test
push
loop
and
je
mov
jecxz
icebp
mov
mov
cli
scas
push
and
push
and
mov
lock
rol
cmp
jecxz
jno
mov
shll
and
sbb
outsb
rclb
mov
jg
icebp
sbb
ret
aam
adc
pop
xchg
pop
cli
add
mov
mov
sbb
dec
push
mov
outsb
dec
adc
xor
add
or
outsl
xchg
lcall
call
jge
pop
add
imul
jg
pop
xchg
sub
pusha
aad
and
dec
lods
push
xchg
fdivrs
mov
repz
adc
xor
jp
push
icebp
das
shlb
icebp
cld
jl
ljmp
mov
test
stos
mov
mov
movsl
sub
movsb
lock
xor
mov
icebp
xchg
mov
clc
or
sarb
cwtl
leave
aad
ret
fbstp
xchg
cmp
adc
jmp
std
lea
enter
inc
pop
jecxz
in
cltd
sahf
ficoml
aam
sbb
aaa
les
arpl
dec
pop
addr16
push
add
imul
cmp
or
xlat
shll
aas
imul
aas
insl
ret
jnp
inc
pop
xor
adc
lods
les
jne
cmp
pop
stos
mov
in
jae
movsb
scas
sbbb
inc
popa
jle
inc
ljmp
mov
dec
ja
outsb
jb
pop
out
incl
lret
inc
mov
hlt
jg
push
adc
loopne
sub
add
push
cli
sbb
xchg
rol
lock
shrb
lds
fiadds
cld
int3
or
arpl
jp
stc
lret
stos
mov
push
add
mov
cld
test
xor
xchg
stc
lea
add
push
dec
or
jg
pop
es
lds
inc
fwait
out
enter
push
insb
dec
mov
jecxz
popa
js
push
lock
mov
push
push
xlat
lahf
je
int
fwait
lock
daa
xlat
or
das
sbb
cmp
dec
pop
aas
adcl
xchg
inc
sub
push
out
js
test
icebp
mov
mov
push
fs
idiv
gs
and
pop
stos
fisttpl
lcall
in
xor
lock
jg
cmp
push
ss
lret
adc
in
xor
call
jmp
mov
out
and
popf
ret
push
test
imul
pop
mov
lret
push
fs
int3
stos
iret
mov
dec
push
outsb
jb
xchg
mov
stos
sbb
mov
xchg
cwtl
and
xchg
js
pop
mov
mov
mov
adc
and
stos
adc
mov
mov
and
dec
ss
mov
push
jge
mov
adcl
pop
dec
inc
cmpb
es
xchg
pop
int3
mov
add
pop
mov
dec
js
or
or
mov
aas
push
sub
lods
pop
push
and
out
out
cltd
hlt
cli
testb
jno
test
cmp
fwait
icebp
cltd
lods
sti
push
xor
mov
or
xor
test
aas
and
push
mov
push
jbe
jg
loop
mov
stos
and
push
in
fwait
xchg
test
dec
sbb
cs
pop
addr16
ljmp
xchg
xchg
mov
loop
add
or
lods
fiadds
and
aaa
pop
insl
mov
arpl
lret
ret
adc
es
ss
inc
test
test
pop
dec
aaa
test
rorb
xchg
or
dec
cltd
pop
push
lds
fists
test
cmp
into
lret
lock
mov
or
mov
stc
sub
push
mov
dec
sub
inc
jle
imul
loop
sub
repnz
gs
ja
mov
popf
dec
pop
adc
cmp
push
jno
aad
aam
xorb
adc
lcall
pushf
jge
in
leave
xchg
mov
or
adc
pusha
lcall
popf
icebp
fldcw
test
leave
add
inc
ljmp
lds
and
subb
push
xchg
cld
loopne
push
out
xorl
sbb
inc
cwtl
sarb
cmpsb
inc
jp
xor
push
and
shl
mov
in
dec
arpl
in
call
out
and
mov
mov
dec
cli
add
add
sub
mov
push
fildll
push
data16
clc
sahf
mov
or
xchg
inc
dec
lcall
sub
dec
mov
aas
inc
data16
pushw
sub
ljmp
push
sub
lods
insl
btc
scas
sbb
sub
mov
or
cmp
lcall
loop
int3
xor
add
ljmp
dec
notb
call
cwtl
test
sbb
and
ret
sub
and
shll
xchg
xor
fstps
sub
les
inc
in
cmp
cmp
pushf
arpl
test
dec
xor
or
inc
mov
enter
jg
mov
out
fsub
subl
test
inc
out
mov
mov
dec
ljmp
aam
inc
movsl
stos
int
jge
insb
pop
mov
lods
or
out
outsb
xchg
sub
jbe
adc
cmpsb
xlat
adc
les
dec
mov
mov
decb
xlat
xchg
sub
pusha
dec
movsb
push
ficoml
push
xchg
lahf
or
xor
loope
push
sbb
daa
cmp
daa
jnp
mov
jl
stc
or
xchg
pop
xor
call
fst
test
sbb
mov
test
push
mov
jg
int3
arpl
inc
cmp
leave
and
and
push
popf
enter
sub
mov
sbb
or
dec
inc
sbb
negl
inc
inc
dec
push
lea
into
cmp
lock
cli
sahf
int3
push
xchg
jno
loop
incb
stc
jnp
xor
shlb
mov
or
or
add
enter
nop
cmp
mov
mov
mul
inc
adc
sarb
scas
inc
stos
ja
rcll
movsl
insb
xor
pop
mov
sub
cmc
scas
xlat
fidivrl
push
shl
adc
mov
sbb
push
jnp
rcll
fists
push
cwtl
and
inc
fldl
jmp
in
add
ljmp
jne
pusha
leave
add
fdivl
sbb
shll
cld
push
sub
into
sub
or
std
out
sub
stos
cmp
and
sbb
adc
in
adc
push
sub
andb
inc
jge
lods
jmp
mov
mov
pop
add
jns
xor
out
js
mov
xor
ds
lcall
es
sar
inc
lahf
xchg
fadds
push
pusha
mov
mov
pop
and
jl
mov
pop
push
dec
adc
xchg
mov
pop
into
jmp
mov
jg
shll
and
pop
loopne
push
inc
xor
or
xchg
or
mov
dec
cmpsb
push
ror
sub
lret
fidivrs
sarl
inc
shrb
jns
mov
xor
jo
adcb
fdivr
fs
sub
dec
inc
arpl
ret
adc
mov
lods
sub
push
cmp
mov
or
jno
test
addr16
dec
lahf
pop
dec
inc
jnp
repz
std
and
out
into
push
fstpt
jmp
test
insl
jl
xchg
repz
ja
push
push
outsb
aaa
push
into
and
idivb
jmp
lret
pop
push
je
mov
popf
or
cltd
aaa
add
and
incl
adc
out
scas
dec
mov
rolb
or
add
sub
sub
or
mov
test
mov
xchg
imul
fcoms
mov
aaa
call
addr16
subl
das
cmc
jbe
xchg
pop
scas
push
test
imul
das
sub
xor
test
rcrb
pop
stos
std
inc
push
cs
pop
leave
addr16
shrl
mov
push
xor
fdivrl
add
push
xchg
and
leave
icebp
popf
loope
mov
das
ss
mov
decl
xchg
mov
mov
fildll
rcrb
fwait
insb
or
xor
mov
push
mov
ss
cmp
sbb
rorb
ret
xor
pushf
cld
push
push
add
pop
cs
in
inc
push
movsb
out
mov
mov
adc
cs
pushf
testb
ss
movsl
aaa
iret
lock
sbb
fisubs
insl
imul
mov
gs
dec
dec
xchg
cmp
pop
js
cmp
and
mov
pop
or
or
mov
push
out
int3
rol
cmp
adc
dec
add
bound
pushf
inc
jge
adc
add
hlt
xlat
add
and
xor
jmp
pop
sbb
jbe
push
and
adc
mov
cmpsb
pop
mov
cmp
xor
and
sbb
xor
push
and
jl
xchg
fstl
stos
into
out
dec
pop
or
cmpl
lods
add
fadd
lds
outsb
mov
adc
loope
dec
notl
aaa
call
and
loop
loop
and
iret
loope
adc
mov
mov
test
test
push
cmp
cmc
insb
dec
loopne
inc
mov
fnstenv
mov
push
loope
cmp
or
dec
inc
push
pop
mov
adc
lret
addr16
fiadds
pusha
out
push
mov
jge
nop
popf
inc
xchg
fs
pop
sub
std
pop
xchg
sti
mov
adc
sbb
movsl
cmpsb
incb
and
andps
xchg
nop
mov
cmp
sub
dec
dec
xor
clc
sbb
mov
sub
sub
aas
lods
mov
add
mov
pop
xchg
or
lret
jno
stos
mov
ds
fwait
inc
mov
lret
fnstcw
mov
imulb
test
mov
dec
into
mov
fisubrl
enter
ljmp
in
jae
cltd
sub
mov
jb
movsl
xor
stc
push
cmp
cld
jl
cwtl
mov
or
cli
fsubl
sub
lods
pop
aam
jb
pop
lods
das
je
repnz
mov
sub
or
les
loop
inc
loope
jg
sbb
adc
mov
push
jge
popf
cmpsl
mov
scas
push
and
fdivp
aad
lcall
in
addr16
lret
dec
push
out
adc
or
xor
pop
jg
add
jne
xchg
jb
push
aaa
push
mov
popf
aam
insb
pop
clc
pop
xchg
outsb
insl
test
lods
dec
shlb
add
cli
or
jns
add
in
clc
test
fcmovbe
inc
jle
cmp
mov
repnz
ds
mov
push
pop
daa
add
out
stos
inc
int
lock
testb
js
pushf
sub
and
lods
cli
xor
test
je
xchg
negb
lock
popa
sbb
fidivrl
lds
push
movsb
nop
stos
sbb
cmp
mov
and
insl
movsb
sahf
test
lcall
mov
adc
mov
push
cmpb
cli
or
dec
arpl
push
ja
popa
add
add
pop
jno
xor
cmp
cmp
add
int3
jnp
test
lahf
adc
and
int3
jg
jp
add
sub
popa
test
gs
testl
jl
loop
cmp
mov
mov
jae
fstpt
mov
jno,pt
cmp
sti
or
clc
popa
add
add
add
xchg
mov
loop
mov
test
jbe
sub
cmp
imul
popa
fdivp
jmp
imulb
add
push
add
xchg
mov
cmpsl
sbbb
xorb
lods
iret
enter
xor
or
dec
ss
sbb
mov
iret
aaa
imul
add
imul
hlt
lock
mov
data16
cmp
in
fwait
shlb
push
enter
pushf
mov
fs
stos
adc
mov
cli
jno
jmp
dec
sub
cmpsb
add
imul
cmc
push
pop
ror
xchg
mov
rcl
push
fwait
mov
or
rclb
pop
das
add
in
jl
and
stos
call
mov
sahf
rcll
sahf
mov
shl
sbb
lahf
jae
xchg
and
int
and
pop
fnsave
fldenv
mov
stos
mov
mov
icebp
lret
mov
sbb
add
imul
sub
js
xor
lods
add
sbb
and
mov
cltd
test
sbb
dec
sub
dec
fwait
and
jo
push
inc
or
sbbl
jl
arpl
xor
adc
ds
jmp
dec
arpl
repz
loopne
lcall
jl
das
inc
dec
packssdw
enter
adc
dec
xchg
mov
jmp
push
test
repz
xor
hlt
push
push
data16
xor
mov
fcompl
adc
repz
add
add
insl
aam
and
pushf
stc
xor
and
sbb
push
mov
dec
ret
fsubs
sahf
imul
or
cmp
mov
lods
mov
push
pop
cwtl
mov
out
ret
pushf
shlb
jp
xchg
into
stos
or
shl
lods
xchg
sub
jns
add
sbb
dec
jae
add
push
ret
sbb
int
xor
adc
add
dec
mov
push
add
adc
and
incl
push
js
add
mov
fdivl
mov
jo
insb
sbb
aad
or
insb
mov
xchg
xchg
pop
pop
dec
and
mov
adc
in
add
imul
mov
lcall
out
jg
out
mov
cltd
and
test
pop
mov
xor
mov
sub
push
rcr
inc
pop
cli
jmp
mov
adc
xor
mov
cmp
mov
jp
and
jp
iret
add
or
ljmp
and
cmpxchg
andb
fs
jo
mov
jle
fimull
repz
testb
mov
int3
enter
popa
pop
xchg
adc
imul
sub
jge
inc
adcb
push
jge
ss
clc
test
inc
pop
sub
mov
in
scas
pop
push
enter
sub
jecxz
scas
lcall
xchg
test
fcompl
push
popa
jge
fistps
lret
insb
jl
jg
iret
stc
mov
mov
mov
hlt
ja
aam
iret
clc
mov
xlat
sub
and
push
cmpsl
pop
pop
sbb
jp
dec
mov
add
in
das
insb
dec
sub
pop
and
imulb
pop
cs
pushf
dec
sbb
les
mov
icebp
pop
jbe
jmp
cmp
arpl
mov
int
mov
jl
divb
sub
add
pop
and
aam
loope
xor
adc
enter
sti
cmp
les
adc
sub
add
xchg
into
push
test
sbb
adc
and
jmp
std
in
and
cld
jle
pop
pushf
cmp
ss
xchg
js
iret
push
add
in
inc
movsb
stos
sar
mov
or
mov
gs
mov
add
push
add
addr16
xor
je
sbb
jmp
mov
out
pusha
stc
aaa
not
xorl
xor
addb
enter
fstpl
xor
inc
mov
out
ss
loope
mov
mov
leave
inc
dec
popf
xchg
lret
test
mov
shlb
jg
cmpl
mov
pushf
sub
inc
xchg
daa
mov
push
inc
mov
push
loopne
jnp
std
dec
cs
pop
mov
or
in
ret
push
jae
addl
sbb
adc
xchg
xor
inc
ljmp
fldcw
cmp
test
push
mov
mov
movsl
and
fistl
and
sarb
repnz
pop
pop
or
lea
test
pop
mov
cmp
xchg
add
out
data16
in
mov
or
jbe
ret
xchg
or
in
lock
pop
loop
icebp
clc
add
loop
arpl
cld
xchg
mov
mov
adc
out
jg
ficomps
sbb
push
cmp
daa
aaa
icebp
and
int3
loopne
nop
pushf
sbbb
jo
lea
cmpsl
jne
push
loope
addb
ljmp
and
mov
pusha
sub
mov
inc
sub
and
pop
jge
push
cmp
in
mov
cmp
and
jp
and
dec
cmova
scas
push
pop
ffreep
xorb
push
lea
jle
rep
jge
pusha
in
adc
xor
push
push
jge
divl
sbb
loopne
jns
jmp
fnstcw
dec
adc
or
mov
popa
xchg
arpl
mov
insb
xchg
xchg
and
iret
cmp
jp
popa
rolb
mov
push
pop
jl
aaa
daa
mov
rclb
dec
jbe
xchg
pop
mov
rcl
call
push
mov
pop
dec
mov
ja
in
call
mov
xor
pop
outsb
xor
test
add
inc
mov
sahf
xor
and
cmc
repnz
mov
dec
cmp
ss
rorb
sbb
and
jge
loop
jge
scas
jns
sbb
push
cmp
dec
mov
fisubrl
inc
into
push
cmp
iret
rep
dec
call
cwtl
or
cltd
jo
dec
push
lods
out
testl
outsb
or
int
xchg
pop
adc
fmuls
or
or
push
lock
lcall
jp
movsl
push
es
clc
jl
cwtl
je
mov
cmc
mov
faddl
inc
cmp
shrb
xchg
pop
fisttpl
or
mov
in
mov
mov
ret
in
adc
adc
ds
negl
and
jl
in
jae
cltd
mov
std
pop
xchg
stos
xor
aad
das
dec
sbb
jl
les
mov
test
leave
test
cmp
hlt
jp
icebp
push
mov
xchg
mov
leave
lahf
mov
shlb
xor
std
and
ret
push
adc
jl
fwait
mov
mov
adc
mov
xor
dec
dec
std
push
sub
pop
jne
icebp
lcall
clc
xlat
fildll
push
mov
and
aaa
cmp
mov
or
outsb
jno
cmpsl
das
and
imul
cmp
gs
stos
out
push
cs
mov
pop
insl
daa
loopne
push
sbb
shl
jl
mov
daa
xor
in
imul
sub
sub
cltd
cmp
xlat
js
pop
aad
cltd
push
outsl
leave
fisubrl
mov
cmpsl
push
mov
in
cmp
xor
daa
sahf
jle
ss
sbb
add
lea
paddw
fwait
ja
jns
cltd
ja
xchg
adc
mov
jmp
dec
adc
xchg
or
sbb
jne
jbe,pt
jne
sbb
ss
and
or
cmp
cltd
mov
les
or
mov
xchg
call
ljmp
jmp
mov
daa
mov
icebp
addl
xchg
loope
mov
sti
hlt
or
data16
push
push
imulb
cld
sub
sub
rorb
out
push
out
addl
mov
nop
lods
std
popf
pop
sbb
and
sub
rcrl
in
cs
xlat
inc
xchg
and
add
out
add
mov
jmp
jmp
nop
lods
lock
stos
loopne
clc
adc
sbb
and
mov
test
popa
es
repz
mov
dec
and
sbb
and
dec
xchg
int
mov
pop
sub
xchg
ja
xchg
pop
sub
andl
cmpsb
pop
sbb
mov
pop
mov
scas
sarl
xor
xor
imul
push
inc
inc
cmpsb
ret
pop
in
test
scas
sub
or
incb
mov
mov
cmp
add
sarb
fldl
inc
mov
mov
cmpsl
in
jno
dec
jecxz
jae
fists
cmpsl
xchg
ret
test
inc
sbb
iret
adc
mov
jl
adc
fiadds
aas
jo
and
adc
pop
bound
cmp
push
xchg
adc
insl
pusha
out
cmpsb
arpl
ret
inc
jecxz
dec
out
sbb
jmp
push
lret
lahf
inc
or
xchg
mov
and
mov
scas
xchg
or
sbb
std
movsb
std
push
adc
jb
xchg
jl
pop
jo
pushf
xchg
sub
lock
in
sbb
les
or
je
gs
fisubs
cwtl
data16
call
and
mov
cmc
lock
sti
push
sub
mov
sbb
push
ret
fimull
call
push
and
mov
add
or
and
insb
cmpsl
lea
fsubrl
inc
pushf
xchg
imul
push
mov
sbb
push
shlb
cmpsb
add
aas
jge
mov
dec
xchg
in
ret
mov
movsl
sti
adc
iret
pminub
test
test
mov
push
jl
aad
iret
and
je
xchg
mov
sbb
xchg
clc
adc
jno
inc
aas
jne
xchg
xlat
xor
adc
adc
cwtl
mov
dec
lahf
and
xchg
mov
ret
cld
enter
cmpsl
or
xor
cwtl
dec
mov
movsb
sub
push
in
add
into
or
cmpb
push
jl
pushl
xor
int
push
jmp
add
jp
mov
jne
aam
out
insb
ljmp
push
lret
and
dec
sbb
popa
imul
sar
movhps
mov
int3
xchg
inc
rclb
jle
jecxz
mov
shlb
lcall
in
into
mul
js
out
dec
jne
aam
cmp
mov
addb
add
das
mov
hlt
jg
stc
and
jg
ficoml
je
pop
adc
pop
jbe
addr16
orl
popf
insb
sub
xchg
adc
xor
xor
adc
xchg
add
cmpsl
js
ficompl
rcl
mov
jbe
push
jl
add
hlt
out
stc
mov
lea
or
test
mov
les
or
dec
loopne
mov
loope
arpl
inc
mov
fidivl
inc
adc
mov
push
out
pop
add
mov
les
inc
jns
outsl
sub
inc
es
lods
cli
div
cwtl
xor
fildll
ds
test
push
lods
mov
dec
and
cli
int
jecxz
and
add
rclb
dec
inc
popf
dec
mov
das
adc
mov
or
shrl
inc
sbb
loopne
in
std
lcall
test
lcall
mov
lret
or
fdiv
xchg
scas
stos
pop
rcrl
mov
mov
push
or
dec
and
jg
bnd
dec
sub
hlt
fsubp
cmp
ss
and
mov
lret
scas
pusha
mov
cmp
pop
addr16
pop
sub
rcrl
fwait
popf
add
fwait
jne
pop
les
mov
and
out
push
mov
insl
call
and
push
std
jb
stos
test
lds
bound
cli
popa
push
mov
inc
ss
cs
lock
xor
fwait
mov
and
dec
xchg
fnsave
pop
and
rclb
sbbl
inc
lret
pop
adc
imul
stos
pusha
push
in
stc
jae
cmp
mov
outsl
xchg
fldl
cmp
loop
add
xchg
lods
inc
stos
enter
in
data16
inc
gs
add
pop
sbb
pop
push
loopne
insl
mov
test
adc
in
leave
adc
stos
mov
xchg
mov
aaa
ss
jge
nop
dec
push
sahf
jb
bound
out
stos
mov
daa
mov
dec
cltd
bound
dec
adc
xor
sub
jb
xchg
or
cmc
pop
rorl
sub
adc
mov
addl
incb
inc
inc
push
gs
jae
mov
or
push
sbb
push
mov
ret
mov
push
mov
sarb
ror
adc
sub
imul
test
addr16
sbb
mov
cli
lret
outsl
ljmp
xor
or
je
add
div
rcr
sub
xchg
jns
mov
mov
push
lods
js
jb
jne
rcl
jns
mov
testl
jle
cmpsl
les
cmpl
fadds
aas
jns
repnz
dec
adc
je
jmp
mov
notb
sbb
mov
jg
lcall
ja
ret
mov
js
popf
push
mov
lea
fisttpll
pop
adc
arpl
adc
out
cmc
or
push
dec
ficompl
add
mov
xchg
inc
cmp
dec
add
mov
gs
lods
pop
popa
dec
movsb
push
jmp
mov
jg
jge
js
xchg
xchg
dec
test
xor
jle
lods
sub
in
outsl
sbb
or
negl
ds
mov
cli
fists
sti
mov
mov
jbe,pn
js
je
dec
int
cmp
jnp
addb
inc
insb
mov
insl
push
jge
out
les
xor
aam
push
fcomi
add
sbb
cmpsb
aam
fisttpll
stc
jmp
ror
push
and
pop
mov
dec
addr16
and
mov
or
push
enter
ret
sbb
int3
jp
mov
mov
xor
xor
dec
jae
mov
cli
jl
movsb
jp
jg
fistpl
add
jbe
cs
mov
outsb
test
mov
xchg
movl
sbb
and
adc
cwtl
repnz
or
cmc
movsb
mov
jmp
or
mov
jg
punpcklwd
xor
xor
iret
shlb
repnz
aaa
adc
cltd
pop
mov
jge
int
xchg
outsb
fs
lea
ja,pt
jns
add
jnp
repnz
xchg
mov
lret
loope
and
in
inc
inc
adc
jge
aam
les
test
js
push
das
cmp
shlb
enter
adc
stos
sahf
aam
cmp
adc
inc
aam
std
adc
stos
test
xchg
call
mov
jmp
arpl
and
loop
mov
xchg
add
popf
lret
ret
pushw
inc
jb
lods
lock
into
xor
sub
dec
push
sub
lods
addr16
xlat
and
test
mov
jo
hlt
lret
pop
cwtl
push
cmp
hlt
icebp
sbb
ja
adc
cmp
cltd
pop
and
adc
test
push
leave
test
out
cmc
test
xchg
push
test
mov
adcl
addl
test
mov
push
cmovnp
mov
rorl
xlat
lret
jmp
arpl
push
cmpsb
outsb
insb
dec
sub
data16
out
shrb
aad
pop
jmp
movsb
es
xor
pop
fists
push
add
adc
imul
pop
outsl
push
pop
or
cmp
jge
sub
bound
push
enter
pushf
inc
cmpsb
mov
stos
mov
inc
add
cmpl
xchg
push
in
dec
ret
fistps
lret
and
jle
repnz
cltd
pushl
xor
and
mov
jmp
push
test
dec
xchg
or
imul
xchg
jmp
lcall
pop
sti
js
pop
push
mov
int3
mov
jge
lods
test
jmp
test
lahf
sub
outsl
jmp
loope
xchg
repz
and
or
stos
or
out
xchg
push
lcall
lret
cmp
fcmove
push
dec
sarb
mov
stos
mov
arpl
sbb
jl
jbe
xor
cmp
sub
sub
xchg
mov
sarl
mov
mov
loop
sarb
insb
and
les
push
fdivr
jo
call
das
in
out
lock
or
in
in
sub
inc
test
mov
push
loopne
pop
pop
add
pop
out
pop
test
or
mov
xchg
pop
adc
sub
add
stc
mov
sub
std
inc
int3
inc
sub
repz
mov
mov
in
mov
xor
movsb
jbe
leave
imul
jae
ljmp
mov
test
gs
add
cmp
sub
cmc
andl
sti
push
loope
into
dec
mov
call
add
js
repnz
mov
jl
or
rep
adc
ljmp
call
icebp
or
out
jnp
icebp
mov
fcompl
pop
in
xor
and
xor
jbe
je
outsb
push
test
aad
jecxz
popf
jecxz
cmp
loope
aas
das
jg
inc
pusha
mov
int
test
out
popa
mov
out
add
jmp
out
cmp
cltd
or
aaa
les
mov
arpl
ja
push
jnp
pop
test
loopne
aaa
inc
sahf
ret
xor
or
pop
sbb
xor
jg
adc
aad
stc
cmp
cld
jae
mov
cmc
imul
xchg
or
sbb
lcall
enter
mov
jnp
jmp
sbb
pop
and
mov
inc
mov
jle
jne
incl
cld
adc
lea
cwtl
push
adc
mov
lahf
out
mov
aam
repnz
mov
jbe
icebp
ljmp
test
jnp
sbb
xchg
cmpsl
lods
sahf
icebp
sub
rorb
and
pop
cmpsb
add
push
add
sub
scas
addr16
mov
mov
repz
fisubrs
outsb
fadds
repnz
cs
inc
insb
sub
sarl
scas
jb
mov
mov
pusha
push
daa
push
cld
outsb
sub
rcrb
jle
mov
jne
mov
jae
adc
mov
mov
js
jno
jnp
js
cmp
das
insl
pop
ds
cmp
fisttpl
lods
add
loopne
out
inc
lcall
jp
push
out
lea
pop
mov
loop
add
xchg
sti
aam
js
outsb
std
fbld
mov
popa
and
add
sub
inc
push
or
enter
mov
cmp
jae
push
jne
shr
test
jae
push
xor
jae
add
je
repz
cs
mov
in
fwait
addr16
mov
outsl
data16
mov
out
or
jae
stc
mov
push
lods
adc
clc
stos
dec
sahf
mov
push
pushf
push
inc
lret
insl
mov
add
ret
loopne
or
xchg
ret
pop
cmpsb
popf
outsl
mov
in
sbb
clc
in
pop
fdivrs
pop
add
shlb
mov
cmp
jno
outsl
das
mov
dec
aam
sar
xor
xor
cmp
sub
clc
sub
xor
cmp
inc
xor
sub
rorl
dec
pop
mov
xchg
cmp
lods
fs
leave
and
cmp
lcall
inc
push
cmpsl
jle
dec
xchg
je
add
test
jg
jmp
js
fidivrs
mov
dec
test
shlb
pop
das
push
add
lods
cmpsl
adc
xchg
inc
xchg
xchg
mov
push
mov
shl
jno
adc
cmpsl
jl
xchg
push
adc
dec
out
vcmpps
push
loope
cli
sbb
pop
mov
jo
jge
pop
imulb
xlat
pop
sbb
clc
push
inc
inc
pop
dec
add
in
inc
sti
inc
jmpw
push
cli
or
push
dec
inc
test
jne
dec
cld
sbbb
xchg
repz
adc
xchg
test
adc
imul
sub
jno
jmp
pop
jmp
sbbl
imul
jge
push
mov
les
addl
add
and
outsl
inc
data16
outsb
inc
pop
jge
xor
shlb
sbbb
rcrb
cmpsb
out
jne
sub
pop
lds
pop
hlt
xor
aaa
mov
paddw
lcall
xchg
gs
xor
mov
adc
insl
pop
inc
out
cmp
jb
cmpl
test
mov
jae
lds
push
push
add
loop
mov
sbb
adc
add
js
jb
cmp
add
cmp
pop
push
sbb
nop
push
data16
mov
inc
cld
cli
mov
push
std
mov
xchg
inc
cmc
js
sub
cld
in
mov
xor
mov
daa
jmp
mov
lret
not
mov
loop
jge
mulb
clc
aam
adc
pop
push
pop
dec
out
jne
jp
aam
add
mov
dec
shll
jns
jle
ficoml
mov
lcall
out
adc
add
mov
movsb
into
pop
add
inc
mov
out
in
in
into
xchg
rolb
xchg
popf
iret
lret
jg
cld
sub
gs
cmp
xor
and
or
sbb
mov
jecxz
ficompl
in
xor
jecxz
aas
imul
push
ljmp
jns
out
sbb
push
adc
stc
cmp
lods
lods
cmpsb
xrelease
shrl
es
negl
sub
das
loopne
test
loope
xor
adc
mov
stos
test
imul
in
push
int
rclb
pusha
shll
or
cltd
xchg
pushf
out
sti
rorb
in
in
xor
mov
fwait
mov
mov
dec
xor
sbb
enter
adc
outsl
cmpsb
sub
push
xchg
mov
test
iret
dec
mov
aas
jle
out
jecxz
add
data16
into
sbb
mov
push
lods
iret
mov
inc
rcrl
cmp
xchg
arpl
repz
mov
sbb
ja
sub
pop
jge
mov
daa
push
js
jecxz
push
or
or
cwtl
mov
sub
push
jns
imul
shrl
jmp
notl
fxch
xchg
lock
push
cmp
ret
mov
out
mov
lods
mov
std
popf
adc
inc
mov
or
roll
adc
sahf
and
or
loopne
mov
cli
pop
inc
and
sti
in
lds
repnz
cld
pop
pop
jge
dec
sbb
iret
adcb
fldenv
mov
xchg
hlt
mov
mov
adc
daa
mov
push
or
arpl
push
mov
std
or
xor
lods
decl
push
add
sub
leave
jb
andl
xchg
daa
enter
xchg
leave
fsubl
jae
mov
call
outsl
xchg
mov
adc
cmp
inc
mov
or
push
lods
xchg
cs
sub
pop
push
xchg
fucomi
enter
aaa
call
out
add
rclb
pop
jb
in
sbb
pop
cmp
in
movl
stos
cld
inc
pop
sbb
cmp
loop
js
pop
sbb
std
jl
in
mov
mov
mov
lea
xchg
mov
rcll
inc
imul
fidivrs
adcb
jp
test
sub
movsb
out
testb
sbb
jno
sub
subb
leave
fsubrl
jbe
mov
scas
push
push
pop
cmp
std
push
cmp
int3
mov
mov
std
outsb
sbb
mov
and
stc
or
add
mov
jne
and
xchg
mov
dec
stos
cld
cwtl
lods
mov
loopne
inc
dec
cmp
lcall
mov
cltd
jecxz
dec
sub
jno
mov
flds
jo
mov
xor
hlt
fdivrp
fwait
push
mov
shlb
mov
pop
leave
or
ds
lds
adc
xor
repz
add
sbb
aaa
and
hlt
cld
nop
out
mov
cmp
test
add
dec
adc
sbb
sti
cli
rolb
addb
lods
loopne
int
bound
xor
or
sub
sbb
jo
mov
fwait
cltd
and
aam
cmpsl
je
fcomp
fwait
std
clc
ss
pusha
mov
mov
inc
mov
shlb
mov
or
or
shlb
pop
cmpsl
stos
mov
popl
ds
mov
mov
sbb
loopne
mov
jle
sarb
add
outsb
and
rcll
pop
sub
test
adc
dec
stos
adc
imul
fldt
lret
mov
sti
add
aam
push
xchg
dec
mov
test
sbb
test
and
and
arpl
les
out
inc
pop
add
fdivp
jne
sbb
cmp
add
pop
lods
call
pusha
clc
mov
jmp
pop
lea
mov
xchg
cmp
lcall
lret
xor
pushf
adc
es
mov
and
es
addb
mov
or
insb
out
sbb
mov
fmul
stos
lea
pop
ds
dec
inc
xchg
lret
mov
xchg
test
mov
and
xor
loope
rcl
add
mov
jb
mov
std
pop
adc
rol
push
sub
push
ret
ljmp
aad
sub
push
push
push
mov
sti
dec
lahf
data16
and
or
mov
fsts
int3
mov
sarb
fnstsw
js
mov
fistps
data16
test
jno
cmp
sbb
fildl
loopne
hlt
insl
xchg
stos
mov
stos
int3
xchg
inc
push
cmpsl
sbb
xchg
push
mov
jle
adc
xor
mov
xchg
jns
in
pop
inc
add
adc
cmp
fwait
insb
mov
jo
jbe
push
or
dec
jmp
or
sbb
popf
popa
or
lret
out
das
gs
addb
or
sub
adc
in
mov
pop
jl
xor
pop
push
adc
notb
fdivl
and
fcmovu
sarb
xchg
idivl
iret
xchg
pop
insl
mov
adc
add
iret
bswap
and
leave
cwtl
or
mov
out
repz
stos
mov
cmp
inc
shl
sahf
pop
inc
push
adc
add
add
pushf
xchg
ret
mulb
pop
push
push
fmulp
xchg
mov
dec
xor
jmp
mov
push
test
out
mov
sbb
push
movsb
jp
lcall
and
mov
sub
pop
lahf
push
mov
or
xchg
mov
xor
jmp
adc
mov
lock
xchg
xchg
jl
or
jmp
xor
add
sbb
shrl
add
mov
pop
mov
and
push
xor
or
int3
idivl
inc
cs
pop
mov
or
jl
mov
aaa
insb
mov
inc
adc
stos
stos
adc
hlt
sbb
mov
xchg
popa
clc
leave
hlt
mov
mov
mov
adc
in
dec
and
enter
dec
adc
roll
insl
clc
pop
inc
test
pop
imul
add
sub
adc
pop
push
pop
jmp
sahf
mov
xor
dec
adc
jb
sub
push
ret
stos
dec
cwtl
sahf
add
popa
mov
push
cmp
scas
inc
adc
imul
xor
xor
push
pop
mov
pop
mov
mov
into
icebp
lods
sbb
mov
in
adc
daa
ljmp
add
js
mov
push
outsb
cmp
jbe
inc
dec
push
rcrb
and
cwtl
push
enter
adc
xchg
jo
shl
sub
fsubrl
push
lcall
mov
xchg
cmc
in
sub
push
pop
sahf
shlb
inc
test
dec
xor
rcr
pop
or
es
pop
mov
or
rcl
cmp
repz
lret
jmp
jno
repz
aas
dec
les
subl
push
mov
push
pushf
mov
dec
push
cmc
ret
ja
arpl
fisubl
add
lret
xor
outsb
inc
adc
inc
push
ja
les
sbb
test
pusha
sbbb
cmp
jp
mov
or
and
aam
jb
adc
and
mov
arpl
das
fidivrs
js
mov
lret
adc
mov
lods
out
dec
popa
clc
ffreep
mov
dec
sub
jle
ret
aad
cmp
inc
mov
cs
jmp
add
add
hlt
ret
in
pop
sbb
and
popa
inc
pop
jno
stc
and
adc
mov
dec
push
jae
jl
cltd
inc
adc
sar
push
enter
and
jne
dec
pop
je
push
add
imul
jbe
mov
repnz
mov
cmp
scas
pop
cmpl
mov
pop
mov
or
mov
jmp
mov
repnz
ret
dec
adc
pushf
push
push
xchg
and
adc
xor
add
mov
imul
mov
aam
dec
aas
fsubrs
dec
cs
data16
mov
push
lds
xchg
pop
adc
stos
rorl
dec
imul
orb
loopne
xchg
std
mov
or
push
dec
lea
dec
repz
xor
test
add
enter
fsubl
stos
and
or
insb
ficoms
jge
jno
adc
adc
fnstenv
mov
xor
push
out
xor
xchg
mov
inc
xchg
repnz
cmpsl
pop
mov
lods
aad
int
dec
fwait
std
mov
into
or
popf
aaa
les
daa
sub
les
push
lea
out
pushl
cmp
sar
xchg
je
mov
jbe
out
xor
dec
lods
repnz
fs
pop
mov
loop
shll
ds
mov
mov
dec
cmp
push
jnp
xor
mov
mov
cli
nop
mov
pop
repnz
in
movsb
out
int
xor
gs
scas
fcmovnu
les
adc
pop
leave
sbb
test
push
adc
cmpsl
pop
je
mov
imul
outsb
xchg
sti
cld
icebp
je
cmc
loope
push
fidivl
inc
xor
rcrl
movsb
mov
add
pop
out
pusha
mov
mov
loope
int3
mov
rolb
cmpsb
das
mov
xchg
pop
lock
inc
hlt
lret
sti
in
jno
lret
mov
or
rorb
mov
push
xchg
out
and
sbb
cmp
scas
cld
cmc
add
icebp
test
movsb
out
imul
or
push
cvtpi2ps
cmc
adc
movsl
add
fwait
mov
repz
enter
int3
mov
fldenv
and
jl
sbb
jp
mov
jmp
bound
ljmp
fs
loop
adc
sbb
mov
imul
int
push
adc
into
sbb
fwait
sbb
fnstsw
xlat
dec
pop
cltd
jnp
ds
or
sarb
mov
data16
xchg
jp
adc
adc
rolb
push
mov
fwait
lods
lahf
push
sbb
cmp
sbb
sub
fistps
inc
insb
cmp
in
adc
fwait
shrb
mov
adcl
rorl
leave
cmp
sysenter
or
mov
lret
in
xchg
mov
call
push
cmc
js
insl
loop
shll
out
jecxz
jo
push
nop
pop
daa
and
xor
imul
lret
popl
shrb
sbb
mov
xor
cmp
sub
pushf
fistps
mov
xchg
hlt
xchg
int
push
icebp
cmpsl
xor
inc
or
dec
arpl
dec
es
lods
pop
add
stos
cli
inc
add
xchg
jl
cmp
mov
adc
inc
dec
jbe
or
movsl
mov
insb
jne
repz
sbb
lock
sub
xchg
push
shlb
dec
andl
movsb
sbb
xchg
mov
aas
sub
mov
adc
jnp
scas
mov
fiadds
sbb
fdivrs
jge
mov
add
cmp
dec
lahf
mov
pop
inc
xor
mov
pushf
mov
addb
push
or
pusha
fisttpl
pop
popa
popf
fnstsw
cli
mov
fiadds
ret
push
addr16
inc
push
aad
lock
test
lock
cld
xlat
mov
dec
aas
daa
shll
push
clc
fwait
mov
push
dec
xchg
adc
mov
push
int
mov
roll
in
cltd
lahf
pop
hlt
inc
lahf
jmp
int3
xor
mov
dec
xchg
add
cs
push
pop
and
popf
inc
int
inc
cs
sbb
push
dec
cmp
or
inc
aad
fstpt
lahf
mov
lods
fcompl
fmull
js
and
or
mov
or
dec
rolb
iret
outsl
dec
jge
mov
aas
insb
adc
mov
js
sbb
in
mov
iret
cwtl
dec
hlt
sti
jae
negl
sub
stc
cmp
stos
aaa
in
mov
xchg
cs
mov
mov
xor
cmc
pop
std
or
sbb
sbb
dec
and
or
mov
fs
fisubs
sbb
das
das
fistpll
add
mov
mov
lret
pusha
lods
rolb
mov
bound
imul
lret
insb
sarb
push
fwait
std
xor
loopne
inc
xlat
outsl
jp
clc
pop
mov
dec
sbb
sbb
adc
adc
stos
loop
mov
repnz
fildl
lds
and
sar
mov
xor
or
sub
push
and
insb
inc
ret
clc
sub
repnz
into
dec
jo
fiaddl
aaa
sub
ss
fwait
jecxz
and
pop
mov
into
insl
adc
das
push
fs
repz
add
pop
jns
mov
and
out
shl
mov
pop
sbb
cs
jecxz
scas
and
mov
cmp
xchg
xor
or
xlat
insl
push
mov
paddsb
xorb
mov
lods
enter
negl
lods
mov
ja
in
or
shr
cld
mov
mov
movhps
xor
notb
stc
and
jne
push
xchg
sbb
push
aam
lret
outsb
cmp
in
std
adc
jno
adc
outsb
mov
shl
mov
fdivs
or
int3
inc
ret
pop
imul
pop
cs
jae
adc
pushl
fsubp
in
pop
inc
repnz
pop
cmp
lret
hlt
xchg
sub
shrl
decb
mov
xchg
xor
es
fdivr
loopne
pushf
xor
mov
dec
xor
jno
mov
or
sarb
sub
sbb
leave
sub
ljmp
lock
in
insb
jl
cmp
adc
icebp
sbb
cmpsl
imul
jmp
jg
mov
sub
mov
xchg
push
mov
imul
data16
sbb
jecxz
and
pushf
sub
out
fdivrl
xchg
loope
push
mov
mov
or
or
add
push
test
addb
push
pushl
cmp
fimull
jb
arpl
pop
adc
inc
add
gs
rcr
fimull
sub
rcl
push
test
jns
jae
test
fsubrp
ficomps
pop
std
adc
jns
push
and
mov
xor
lds
call
push
push
inc
ja
or
sbb
sbb
and
mov
int
inc
add
mov
insb
jno
stos
dec
ljmp
data16
aad
ds
inc
ror
pop
jae
fists
loope
dec
lods
call
cmc
movsb
inc
mov
sbb
push
pop
sub
lahf
out
movsb
sub
add
sti
outsl
jmp
mov
cltd
mov
mov
and
push
and
xchg
and
sti
sub
dec
push
adc
sub
xchg
mov
inc
imul
jbe
inc
push
mov
push
inc
in
push
daa
mov
mov
or
imull
mov
mov
das
push
lret
inc
and
outsl
inc
sbb
mov
lahf
mov
xor
lret
pop
mov
cmp
ds
xorb
mov
repnz
inc
int3
adc
test
xor
pusha
call
dec
je
test
sub
inc
sbb
ret
mov
push
add
pop
xchg
dec
sbb
roll
pop
adc
loope
loope
pusha
xor
test
ror
mov
push
js
jecxz
sbb
mov
pop
jmp
pop
xchg
or
xlat
dec
jb
mov
jno
mov
repnz
clc
fstps
lock
out
push
imul
mov
mov
shll
pop
aas
jbe
ret
mov
sbb
mov
out
sub
loop
pop
push
jmp
std
loop
mov
bound
inc
xor
mov
mov
dec
dec
lds
adc
lret
das
mov
dec
jo
data16
lods
in
das
mov
outsl
mov
and
mov
cmpb
mov
push
adc
ret
out
jge
pop
jle
pop
jno
inc
sub
lea
xchg
out
add
inc
dec
loope
or
ds
inc
jmp
jmp
sbb
nop
popf
sub
sub
xchg
dec
xchg
popa
xor
push
shr
loop
dec
lret
cltd
scas
mov
push
or
add
mov
lods
stos
lahf
sbb
into
outsl
outsl
int
into
out
inc
cmpsl
xor
adc
xchg
sahf
xchg
in
jmp
out
cmp
in
sbb
jmp
adc
jle
push
mov
lahf
inc
push
test
pusha
xorb
xchg
cmpsb
int
push
inc
lods
lahf
jns
cli
xor
mov
dec
sbb
cmp
xchg
pop
ret
and
dec
out
nop
jb
das
cmp
into
dec
outsb
mov
pop
mov
int3
cs
mov
pushf
fdivs
mov
sub
pop
pop
test
sbb
mov
ds
int
lock
xor
jbe
inc
sti
in
dec
sub
xor
arpl
push
jmp
or
jp
sbb
sti
or
out
and
outsl
dec
setge
out
mov
inc
pop
fs
sbb
xchg
pop
fimuls
sub
test
inc
bound
pop
cmp
xchg
push
dec
push
cmc
shlb
adc
stos
jge
nop
sbb
pop
push
mov
dec
nop
repz
subl
call
ljmp
shll
adc
in
fimuls
arpl
xor
mov
ficomps
shrb
adc
cmp
in
data16
adc
jl
sbb
mov
pusha
popf
mov
xchg
adc
int
push
iret
inc
mov
sbb
mov
ss
jl
mov
push
jge
sub
mov
lcall
inc
cmp
push
icebp
aad
int3
imul
sarb
mov
cmp
pop
sub
push
or
add
sbbb
jl
adc
and
mov
rorb
data16
sub
jg
in
cmp
or
sbb
and
push
loop
cmp
and
in
cmp
std
fs
addr16
in
in
lcall
and
add
add
xor
push
loop
xor
ss
cmc
dec
inc
clc
daa
call
test
out
ret
xchg
lret
mov
aad
sbb
jmp
cli
rorb
sub
mov
mov
push
sarl
push
and
cmp
push
sahf
xor
jno
add
inc
iret
cltd
test
jg
add
cli
dec
in
and
jge
gs
jbe
aas
iret
lock
in
out
add
ret
sbb
test
sbb
movsl
jmp
or
inc
jb
pop
jne
jnp
pop
ds
movsb
and
cmpsl
push
aas
sbb
dec
inc
push
je
or
cmp
xchg
pop
xchg
lods
mov
sub
cli
mov
int3
add
data16
inc
pop
out
cmpsb
lods
adc
mov
movsl
fwait
sub
lret
pop
leave
xchg
popf
xchg
lods
xor
sub
or
shlb
int3
sbb
cli
mov
and
dec
dec
and
adcl
xor
mov
ljmp
mov
jno
sbb
jl
sti
adc
int
pop
cs
mov
insb
aaa
fs
scas
pop
cmc
repz
je
sub
mov
cltd
cmp
push
ljmp
dec
mov
or
inc
sbb
aas
xchg
and
xchg
and
subb
add
push
out
xlat
int3
lods
or
mov
push
mov
ljmp
jne
adc
or
mov
movsl
adc
lcall
sbb
jns
pop
push
push
mov
push
sbb
or
mov
or
and
pop
cmpsl
mov
ror
je
subl
arpl
testb
stos
pop
pop
insb
test
sub
and
pop
mov
in
mov
mov
mov
fwait
cwtl
and
pop
bound
movsl
mov
cmpsb
pop
aad
inc
dec
or
test
xlat
rolb
fstpl
sbb
out
lods
jne
cmp
xchg
and
jecxz
insb
push
adc
pushf
loope
test
rcrl
shlb
int
jno
jp
cmpsl
cs
adc
repnz
pop
sbb
and
jo
xchg
inc
loope
xchg
lret
inc
mov
hlt
cmpsl
js
sbb
cmp
sarl
xchg
rclb
insl
ja
orb
xchg
mov
push
insl
rcll
scas
adc
and
fwait
inc
jne
mov
sbb
es
sub
push
lret
mov
mov
push
mov
lea
sti
mov
pushf
mov
insb
les
call
pop
imul
sbb
fdivrs
mov
sbb
push
fnstenv
movsl
hlt
pop
push
inc
mov
ret
lret
int3
dec
sbb
mov
in
sti
daa
pop
in
push
cld
xchg
xchg
cmp
in
in
fwait
cmp
mov
or
add
push
out
stos
xor
sub
mov
popl
xor
test
hlt
push
pop
imul
std
insb
pop
xchg
mov
test
cs
lods
fistps
cwtl
imul
xor
add
test
mov
inc
sti
xchg
or
mov
into
lret
sahf
ljmp
rcll
push
or
adcb
loop
add
mov
rorl
loope
adc
shlb
notl
repnz
jge
sub
ja
xchg
cmp
and
push
xchg
jmp
stc
dec
pusha
sbb
popf
xchg
imul
xorb
hlt
fwait
test
xor
sub
adc
pushf
cmpsb
or
repnz
mov
fistl
jno
adc
or
rcr
loopne
cmpsb
inc
fsubl
scas
mov
loop
adc
jle
cmc
xchg
arpl
xchg
test
jecxz
pop
add
jle
lret
pop
xchg
cmp
or
clc
or
adc
movsl
je
shrl
cmpb
push
pop
xor
xchg
movsl
sbb
fsts
movsl
popa
xchg
mov
out
xor
pop
popa
imul
aaa
mov
sbb
mov
fcomip
daa
or
in
mov
nop
sbb
stc
fisubrs
xor
mov
aaa
pushf
pop
scas
arpl
adc
pop
push
cmp
cmp
lcall
lds
cwtl
adc
dec
in
das
xchg
loop
outsl
sahf
mov
bound
test
into
mov
mov
rorl
divl
adc
mov
dec
mov
jnp
jg
test
in
les
dec
das
mov
jmp
xchg
cli
push
sbbb
fs
stos
bnd
sbb
mov
mov
subl
cmp
cmp
add
inc
jae
fcomp
push
mov
adcl
jno
insl
xor
icebp
pop
xlat
adc
fimuls
ds
pop
xchg
std
dec
pop
pop
inc
sbb
push
movsb
movsl
fwait
ret
mov
jno
orl
xor
fldt
sub
mov
lds
xor
push
push
fdivrl
fcompl
cwtl
and
push
rdtsc
inc
aaa
in
mov
pop
or
les
pop
ljmp
or
out
and
cmpsb
mov
jg
bound
jle
test
or
hlt
xor
push
faddl
ret
sbb
subb
arpl
or
push
int3
cmpsb
cmp
ficomps
rorb
push
clc
xchg
mov
mov
repnz
mov
or
sub
push
push
push
mov
inc
sub
mov
aam
scas
add
test
adc
pop
push
popl
sbb
outsl
sarl
jns
scas
push
mov
cmpsl
xchg
push
inc
lds
mov
jae
cmp
cld
add
data16
repnz
fdivrl
testl
call
add
das
inc
cmp
lea
das
clc
insb
xorb
fisubrs
mov
sub
gs
lahf
cmpsl
mov
sub
or
push
mov
xchg
xor
data16
and
xor
rcll
fadds
nop
daa
in
in
in
leave
add
sbb
sub
mov
dec
push
test
adc
jl
arpl
jmp
mov
sbb
mov
arpl
scas
sbb
aaa
mov
sub
sub
mov
sti
insl
push
bound
mov
push
lods
ljmp
fcmovnb
fldcw
xchg
and
lock
jl
int3
add
sarb
stc
xchg
lods
mov
inc
ds
inc
scas
push
pop
aas
or
sahf
add
cmp
and
iret
adc
lahf
cmp
add
lahf
mov
lods
fsubl
mov
xchg
shlb
fcmovnb
mov
cs
push
mov
cmc
add
addr16
shrl
fstpl
mov
dec
add
adc
inc
movsl
cli
push
rorb
subb
aaa
mov
adc
and
push
mov
inc
dec
adcb
mov
inc
dec
and
inc
lahf
mov
sahf
inc
add
xor
jl
xchg
insl
push
sahf
shrl
pop
pop
movsl
pop
mov
xchg
adc
mov
or
cli
jmp
inc
mov
cmp
mov
pusha
daa
cmp
push
add
pop
outsb
xorl
pop
orb
icebp
imul
inc
into
repz
fsubrl
xor
adc
rclb
mov
lds
dec
cmpsl
sbb
mov
jae
rol
pop
mov
dec
lret
int3
cmp
dec
sti
and
dec
jge
mov
or
lock
push
lcall
xor
or
sbb
xor
cmpsb
ja
dec
mul
stos
mov
xchg
adc
ret
repnz
in
mov
fs
push
xor
cmp
mov
popf
loop
lods
sahf
loope,pn
stos
in
add
dec
je
adc
daa
cwtl
push
cs
in
cwtl
mov
and
add
mov
sub
lds
push
pop
out
enter
mov
lds
dec
pop
fwait
push
fists
inc
test
push
cwtl
rolb
lcall
inc
test
cltd
mov
sarb
ret
and
loope
add
sub
dec
jnp
in
or
into
shll
jnp
ds
lcall
adc
push
cmc
push
push
fdivp
pop
push
in
iret
in
lret
subl
ljmp
stos
neg
inc
and
stos
or
xor
es
push
xor
gs
scas
cli
insl
xor
testl
push
xchg
in
xchg
and
enter
dec
imul
popf
xchg
inc
mov
enter
call
fdivs
jl
mov
jle
inc
adc
sub
jae
push
insb
ret
out
pop
xchg
push
in
dec
sahf
sub
or
outsb
sbb
rolb
popa
fs
out
shrb
pop
hlt
xor
jae
pop
mov
insb
pop
inc
mov
sbb
mov
inc
ret
in
pop
mov
mov
inc
test
add
pop
rclb
lret
mov
jge
ja
and
rorb
loope
xchg
hlt
fsubrs
cmp
rolb
notb
iret
fstpl
imul
push
hlt
imul
es
aas
cmp
outsl
xchg
pop
cs
out
into
pop
add
sub
jg
inc
push
xor
rcr
data16
add
adc
movsl
and
es
or
mov
jp
sbb
cltd
movsb
in
jmp
sbb
aad
dec
insl
bound
pop
clc
out
cmc
cmp
or
int
jmp
mov
decl
mov
pop
out
xor
shl
push
push
xor
push
xor
in
jmp
sar
cmc
mov
xchg
sti
repnz
add
inc
test
nop
xor
and
int
add
cltd
or
mov
pop
in
push
in
setb
in
lret
fwait
push
es
fwait
jno
in
movsl
mov
jns
mov
psubd
xor
mov
movsl
popf
push
cmp
xchg
xchg
shlb
lahf
mov
adc
xor
ja
mov
pop
in
push
cli
cmpsb
sub
notl
cs
sahf
dec
add
xchg
jg
dec
xchg
cmc
xchg
dec
mov
mov
lods
lods
mov
pop
sti
cld
rclb
aas
sarl
pop
cmp
jnp
cld
mov
insb
push
sbb
test
adc
push
call
fsubrs
aad
pop
fwait
dec
sbb
or
cmpsl
fsts
cmp
or
pop
mov
or
fistpll
push
and
adc
mov
popa
dec
xor
fdiv
subl
cmp
push
cld
xor
xchg
scas
jo
mov
test
roll
pop
or
inc
xlat
xor
out
inc
cmc
fst
lea
filds
es
pop
mov
mov
test
aaa
push
inc
mov
lcall
outsb
pop
jecxz
popa
push
jl
inc
mov
scas
int
or
or
cs
js
jne
test
cmpb
sub
or
mov
xchg
mov
adc
insb
adc
sub
mov
mov
test
stos
aam
lea
jge
out
insb
fmul
icebp
aas
push
jle
inc
sbb
mov
out
jae
jo
xor
pushf
ret
sahf
rcll
inc
dec
aad
jge
mov
enter
push
cmpsl
out
xchg
cmpsl
pop
iret
or
mov
fbld
popf
movsb
adc
inc
dec
into
xor
addr16
and
mov
out
stc
inc
insl
lahf
ljmp
and
lods
dec
outsl
add
mov
in
and
int
sbb
subl
sub
adc
dec
push
std
mov
xchg
or
stc
aas
sub
jge
int
clc
jmp
mov
add
js
pop
ja
jmp
mov
mov
inc
aad
into
imul
repnz
inc
loop
push
mov
sbb
xor
xchg
leave
std
imul
inc
add
inc
inc
and
out
xor
cmp
jmp
icebp
pop
xchg
loop
dec
sbb
dec
push
out
out
jae
fistpll
es
bound
jb
mov
out
mov
adc
push
ljmp
xchg
jmp
mov
mov
and
movsl
movl
and
lock
inc
jbe
repz
push
int3
call
push
pop
into
int
shlb
in
jns
out
daa
pop
mov
insb
or
sub
pusha
mov
movsb
jp,pt
or
sbbb
dec
sbb
push
cmpsl
dec
xchg
pop
jl
lcall
adc
adc
and
jbe
aam
leave
or
das
lahf
loop
scas
ret
jge
fcmovnb
mov
push
push
sbb
enter
fs
movsb
ret
insb
fs
inc
movsl
mov
and
sti
mov
pop
cmc
inc
add
and
iret
pop
mov
fimull
pop
adc
dec
ljmp
mov
push
incl
mov
leave
mov
incb
inc
bound
lods
push
fisubrl
xchg
mov
mov
sbb
jae
jns
xor
dec
subb
mov
adc
xchg
sub
cmp
xchg
cmpb
xchg
dec
sub
call
adc
xchg
insl
cmpl
mov
stos
jle
fisubrl
push
adc
cmp
add
mov
adc
sub
add
ja
mov
jae
mov
mov
cwtl
lock
sbb
mov
inc
sbb
mov
test
ja
push
loope
fucomip
mov
pop
inc
es
int3
xor
jns
jmp
push
xor
ljmp
xchg
hlt
dec
jecxz
ja
mov
jns
divl
or
push
out
repz
or
xchg
jecxz
mov
inc
lcall
int
mov
ret
js
nop
push
pop
scas
lea
cmp
fcoms
push
xor
sti
popa
stos
lea
xchg
cmc
or
jnp
test
mov
rorb
inc
xor
inc
out
aad
filds
shl
sbb
lcall
mov
scas
dec
adc
push
add
enter
mov
push
xchg
mov
mov
sahf
loope
scas
xchg
cmp
sub
pop
adc
mov
sub
aam
enter
mov
ret
mov
sbb
loop
mov
inc
inc
in
roll
jo
and
stos
jbe
mov
sbb
aas
sti
inc
xchg
or
pusha
jge
shrl
movsl
dec
or
pop
test
cmp
sbb
es
fiaddl
inc
mov
sbb
leave
jae
cmp
xchg
fcomp
in
cld
in
int
adc
test
xlat
aam
dec
call
mov
test
fisttps
and
aaa
lret
sub
mov
movsb
ljmp
lods
cmp
or
fsubrs
xchg
inc
sbb
andl
jle
cwtd
scas
aaa
and
out
adc
jo
and
mov
les
andb
jmp
mov
unpckhps
stos
mov
sbbl
loopne
arpl
adc
rol
lcall
mov
mov
int
mov
es
mov
sbb
addr16
out
enter
xchg
or
les
mov
pop
cmp
test
jge
rorl
cmc
inc
lds
mov
fimuls
rcr
jo
dec
dec
rcll
stc
mov
and
add
outsl
mov
add
lock
push
push
and
nop
pop
nop
orl
cmpsb
int3
rolb
rorb
lret
xor
cmp
xor
in
cmc
xchg
aad
dec
test
sahf
out
outsb
pop
insl
lret
aad
dec
scas
in
push
inc
shlb
xchg
mov
loopne
lods
test
repz
jl
cmp
cli
mov
ror
hlt
shlb
jmp
push
mov
in
add
xchg
repnz
shll
inc
adc
mov
lea
pop
inc
lcall
sub
dec
das
mov
loopne
outsl
loope
aaa
sbb
mov
add
repnz
orb
dec
lods
daa
xchg
push
ljmp
add
inc
adc
lods
xchg
cmp
mov
loopne
or
mov
fimuls
ficomps
enter
aaa
ljmp
fnstenv
sarb
jbe
jb
repz
fldz
push
or
and
dec
sub
inc
frstor
outsl
movsb
xchg
mov
push
dec
cmp
dec
jecxz
sbb
mov
cmp
out
inc
xor
dec
shl
cbtw
cmp
lcall
and
bsf
loope
jge
dec
mov
xchg
jmp
dec
mov
icebp
add
mov
and
xor
icebp
sbb
pop
push
xor
ja
sbb
sbb
cs
dec
and
cld
and
cmp
lock
adc
rcrb
ja
cltd
stc
lret
or
cmp
pop
or
xchg
loop
mov
fldenv
sbb
inc
notl
sbb
sbb
adc
data16
adcl
cmp
enter
inc
hlt
sub
mov
out
and
jbe
jle
popa
mov
inc
mov
sbb
pop
and
and
mov
fisubl
insl
pand
dec
les
scas
mov
mov
hlt
icebp
fiadds
out
lcall
adc
xchg
mov
test
inc
lcall
adc
loop
jb
lds
inc
push
mov
es
rolb
repnz
out
xchg
cmp
popa
mov
stos
shr
stos
out
sti
mov
jb
mov
adc
shlb
xchg
lret
jecxz
insb
inc
sbb
test
repz
clc
dec
sbb
addb
xchg
xor
arpl
cmpsl
xchg
pop
push
es
pop
add
mov
sbb
cmp
push
cmc
pop
out
repnz
enter
test
pop
std
push
gs
jmp
add
mov
pop
push
sbb
pushf
mov
fbstp
inc
push
lahf
push
orl
addl
xor
inc
or
mov
imul
xor
sub
ja
loope
cli
je
stos
adc
push
lcall
push
mov
xchg
xchg
or
out
cmp
add
fsubr
xchg
les
in
lds
cwtl
test
fst
filds
dec
sahf
xchg
js
jae,pt
adc
xor
das
mov
pop
into
cld
pop
ret
dec
push
pop
popf
jns
pop
mov
jae
icebp
xor
push
add
int3
ss
xorb
lea
sub
pop
jnp
lret
lahf
xor
test
sti
jmp
mov
mov
js
adc
fmull
in
call
leave
add
and
pusha
push
std
dec
outsb
pop
sub
mov
xchg
jns
mov
insl
xchg
inc
pop
or
rcrl
jns
aas
xchg
and
xor
cs
or
cwtl
cmc
push
cmp
and
imull
push
scas
iret
jmp
leave
cmc
xor
pop
rcl
adc
pusha
leave
pop
xor
lcall
jno
aas
mov
and
and
push
mov
nop
and
aam
dec
movsl
pop
mov
push
out
mov
iret
mov
rcll
xchg
cmpsw
aad
lcall
xchg
cmp
xor
adc
pop
inc
dec
mov
in
movsb
rcrl
cmp
pop
mov
insl
mov
idiv
jmp
call
leave
mov
add
mov
movsl
notl
dec
loopne
ret
fisttpl
shll
sbbb
inc
orb
pusha
jmp
mov
lret
aam
jle
mov
xchg
cltd
iret
push
cltd
inc
and
cltd
jne
mov
fisubs
popf
push
les
aaa
fisubrl
inc
add
call
adc
xor
cwtl
sbb
pop
lcall
hlt
mov
cld
mov
adc
fists
mov
outsl
insl
loop
xor
adc
shll
or
inc
mov
lcall
dec
scas
flds
int3
hlt
sub
jnp
xor
rcrb
mov
insl
mov
sub
test
jae
hlt
cld
fmuls
dec
add
jecxz
cmp
lcall
hlt
cli
jmp
cmpsl
pop
int
jmp
cmp
pop
frstor
test
sub
and
insl
or
test
popa
in
xchg
and
shlb
and
js
ret
lock
aas
or
inc
dec
jbe
gs
mov
ret
xchg
out
dec
bound
cmp
cmp
ds
nop
or
mov
dec
movsb
adc
mov
fst
push
loopne
mov
mov
scas
add
out
push
adc
testl
out
fdivrs
into
cmpsb
hlt
fistl
sbbb
dec
scas
repz
icebp
sbb
pop
sbbb
aad
mov
pop
dec
add
sahf
jmp
cmp
cmp
insb
xchg
in
ja
xchg
in
out
fsts
mov
xchg
lds
loope
pusha
cmpsl
add
push
pop
enter
fsts
arpl
dec
mov
stc
mov
mull
imul
in
mov
inc
xchg
mov
pop
push
xor
daa
shl
push
outsb
and
jg
fwait
jae
sbb
push
imul
adc
cmp
je
dec
into
mov
add
ljmp
insb
int3
lods
ret
gs
stos
lcall
push
lret
cmp
mov
dec
lcall
push
es
lock
jl
imul
push
mov
mov
sub
add
sub
test
cmp
ja
inc
xchg
ficompl
ja
cmc
jo
ljmp
mov
inc
jmp
cwtl
mov
xchg
enter
out
mov
mov
jb
loopne
pop
adc
cld
ljmp
popf
or
mov
jne
sbb
xchg
pop
ret
pop
int3
dec
dec
mov
loopne
mov
or
fiadds
dec
xor
mov
mov
ret
movsb
add
out
cs
inc
pusha
jns
jbe
jge
xchg
shll
cltd
push
dec
stos
jg
and
push
xor
or
adc
inc
or
inc
scas
pop
lretw
jmp
cwtl
pop
mov
pop
xchg
out
sub
jp
out
dec
leave
mov
dec
std
lahf
jge
sub
jle
clc
bound
inc
js
std
cmp
ret
push
mov
popf
dec
outsb
scas
xchg
sub
out
stos
mov
fldenv
pop
roll
aam
xchg
gs
mov
repz
imul
outsl
mov
mov
mov
jae
ja
test
fisttpll
pop
mov
clc
das
fidivrl
out
mov
lods
inc
pop
pop
cld
pop
jl
icebp
xor
mov
add
adc
sub
mov
add
ret
mov
stos
xchg
popa
mov
xchg
cltd
inc
pop
fists
cmpl
mov
in
sahf
scas
jg
shlb
jns
add
jge
xchg
inc
outsb
mov
mov
pop
gs
in
or
es
cli
jmp
fnstcw
mov
arpl
xchg
xor
rorl
cmp
inc
adc
leave
pop
imul
test
in
loopne
ficompl
push
cld
cmp
pop
mov
cli
cmpb
xchg
clc
mov
xchg
jl
das
popa
pop
mov
cld
add
adc
xchg
lds
sub
es
or
lret
stc
imul
dec
and
lcall
inc
mov
or
xchg
pop
icebp
pop
push
out
inc
test
xchg
xchg
lret
outsb
leave
popa
movsb
or
dec
and
dec
jns
pop
jb
in
test
push
sub
push
fcomi
outsl
pop
enter
mov
push
sbb
xchg
ret
int3
inc
in
add
and
pop
scas
in
jge
bound
pop
aam
mov
clc
in
push
pop
jecxz
out
lret
jp
inc
pop
fmull
mov
arpl
aam
movsb
jl
mov
xor
int
mov
adc
ret
adc
xchg
mov
inc
popa
lds
std
pop
jae
gs
inc
pop
inc
test
int
mov
pop
repnz
lret
mov
cmp
subb
push
adc
mov
xchg
inc
pop
scas
dec
jp
mov
pop
inc
xchg
leave
and
adc
es
and
dec
jge
push
cltd
jns
je
add
sub
inc
clc
push
insb
mov
mov
sbb
dec
negb
fs
push
outsb
sbb
lret
inc
mov
out
cmp
ret
rol
icebp
inc
js
movsb
pop
or
or
jne
xchg
loopne
mov
push
js
push
lods
push
cmp
icebp
fldenv
pop
jns
or
repnz
sbb
mov
lds
lock
adc
push
dec
cmp
shrb
dec
mov
out
hlt
clc
xchg
xchg
mov
loopne
mov
adcb
aad
shll
aas
add
sub
xlat
mov
or
aaa
dec
insb
lahf
sbb
pop
sahf
ss
jbe
mov
mov
div
les
inc
xchg
and
gs
add
ds
push
inc
or
xchg
pop
test
scas
xchg
ljmp
jbe
push
flds
fsubrs
or
repnz
mov
add
aam
test
in
loopne
addr16
lret
lods
sbb
push
xchg
sub
stos
repnz
aaa
jle
push
mov
push
imul
push
xchg
push
pop
rclb
fsubr
dec
fsubp
push
mov
mov
pop
ljmp
xchg
lret
push
mov
dec
mov
ja
ficoms
lods
nop
pop
cmp
jge
cltd
loope
xchg
push
pop
cmp
and
or
and
ljmp
or
loop
notl
jno
add
add
jno
xor
add
ja
and
clc
imul
sub
xchg
dec
popf
jl
inc
pop
out
mov
xchg
std
movsl
mov
cmpsb
adc
and
sahf
outsb
clc
mov
notb
std
xlat
or
dec
fidivs
lds
cmp
lret
les
jae
sub
das
movsl
in
or
jbe
mov
orl
fs
dec
fwait
mov
mov
cmp
shl
scas
out
dec
fidivl
add
xor
stos
inc
testb
dec
cld
or
pop
and
dec
dec
mov
popa
mov
xor
sbb
jg
aam
jp
movl
bound
and
rclb
aam
in
movsl
sub
cmpsl
scas
adc
dec
jb
push
test
rcl
sub
gs
out
mov
cmp
push
imul
sbb
mov
push
xchg
lcall
fcomps
mov
xchg
test
ja
jno
pop
bound
iret
or
pop
sub
lea
leave
fidivl
mov
push
mov
cmpsl
ficoml
cwtl
fildl
enter
in
cmp
mov
fidivl
inc
add
orl
fnsave
shr
call
cmp
dec
fwait
jnp
call
sbb
fwait
rclb
sbb
mov
xlat
mov
xchg
pushf
xchg
lds
xchg
aas
xor
pop
sub
imul
jbe
incb
imul
iret
dec
aas
jbe
push
sbb
add
sbb
jge
and
test
xchg
pop
aas
xchg
mov
popf
repnz
arpl
mov
add
popa
xcrypt-ctr
cmpsl
sbb
pop
pop
gs
pushf
rcll
adc
dec
dec
roll
ret
push
aad
popa
cmpsb
inc
xchg
push
iret
xchg
aaa
jne
mov
xchg
lock
and
mov
mov
icebp
ss
xchg
out
cmpl
nop
fcmovbe
cs
stc
lcall
sub
cmp
cmp
xchg
adc
notb
fs
call
mov
pop
shl
aam
insl
adc
fisubrs
xor
daa
inc
mov
cmp
popf
pop
cwtl
jmp
sub
cld
and
jl
aas
sub
jmp
and
mov
fwait
fdiv
sbb
enter
xor
push
nop
cmpsl
mov
cmp
inc
lret
shlb
jb
test
push
lret
add
jo
in
data16
or
inc
lret
jbe
fidivs
scas
stos
stos
lahf
add
pop
test
pushf
lock
xor
push
int3
and
mov
add
xor
mov
or
fwait
mov
lock
andb
mov
adc
mov
pop
push
rcrb
imul
push
push
cli
fistps
addb
mov
push
sbb
out
pop
mov
sbb
push
mov
fidivrs
jns
outsb
inc
xor
hlt
icebp
jg
es
leave
inc
mov
add
mov
jbe
test
mov
cmc
stc
repnz
add
or
xor
cmpsl
mov
inc
mov
aad
cmp
rcrl
sbb
xchg
insb
sbbb
shrl
mov
loopne
dec
mov
loop
push
cmp
and
fwait
inc
pop
test
push
mov
rorl
dec
mov
nop
pop
cld
dec
xlat
test
add
test
rep
test
inc
std
shrl
dec
push
xchg
scas
in
mov
jg
inc
leave
stos
jne
clc
out
bound
pop
adc
sub
sahf
ret
popf
jmp
inc
lret
mov
mov
movsl
movsl
add
mov
lods
aad
dec
or
ds
mov
jb
sbb
aaa
je
jecxz
jmp
mov
imul
notb
cmp
push
sbb
add
adc
test
pushf
and
enter
jo
xlat
jle
das
es
sub
test
ljmp
lahf
lods
push
pusha
push
fsubr
pushf
arpl
int
or
jae
cmp
xor
pop
pop
stos
movsl
cmp
fs
arpl
and
cbtw
jmp
adc
out
xchg
sbb
leave
xchg
pop
cmp
ljmp
cli
xor
push
jle
scas
adc
jns
sbb
jb
and
lret
in
out
enter
mov
inc
pop
scas
cmp
or
loope
or
adc
mov
xchg
stos
cmp
out
xor
invlpg
push
sub
aas
int3
mov
xchg
out
and
into
add
mov
ss
jp
fdivl
mov
mov
sarl
sti
lahf
cmpsl
xor
gs
sub
mov
int
repz
ret
or
adc
sbb
xor
sub
xor
cmp
dec
js
out
dec
ss
aaa
cltd
pop
inc
mov
into
jp
test
test
gs
mov
ja
aas
ds
add
mov
inc
pop
mov
xchg
push
mov
cmp
lret
dec
cs
lahf
jne
aam
jb
mov
les
pusha
aam
dec
aaa
ljmp
inc
add
mov
pushf
or
lods
insl
push
xchg
aas
not
rclb
pop
or
mov
inc
cli
je
hlt
jae
adc
test
bswap
push
push
daa
push
inc
mov
in
out
xchg
es
rcrl
in
imull
fcomps
sub
pop
es
and
loopne
mov
mov
add
mov
cmp
cld
xchg
jae
popf
push
cmp
add
aas
dec
jge
xchg
fsub
iret
pop
incb
sub
inc
xchg
pusha
enter
push
dec
pop
mov
test
xchg
ja
loop,pt
mov
out
enter
adcb
lods
mov
push
movsb
mov
jp
inc
cmp
cmp
imul
inc
push
loope
push
out
mov
add
int
pop
adc
ja
mov
rcrl
insl
mov
push
pop
jmp
xor
sbb
into
nop
mov
enter
adc
inc
sub
cli
mov
pop
inc
xor
mov
jno
mov
or
lods
mov
daa
fnstsw
shll
mov
add
dec
ret
xor
cmp
cs
andb
mov
mul
popf
lock
das
push
inc
or
fdivl
adc
mov
or
xor
or
int3
add
pop
outsl
mov
daa
and
xchg
pop
frstors
dec
mov
lahf
and
cmp
xor
shll
xor
and
dec
leave
pushf
test
cld
xor
push
push
dec
jl
out
xchg
cmp
es
popf
sbb
sbb
imul
sub
or
lahf
arpl
mov
xchg
xor
ffree
pusha
ds
add
out
ja
iret
mov
push
hlt
jecxz
mov
cs
jno
push
subl
shll
out
lcall
cmpsl
dec
ds
outsl
pop
jle
out
push
adc
and
sub
aam
in
jl
mov
imul
test
inc
and
dec
insb
jbe
and
out
aad
dec
mov
sbb
popf
push
xor
in
push
scas
or
jmp
cmp
jno
sbbl
push
push
mov
jne
inc
xchg
xor
jmp
add
mov
int3
fldt
sbbl
mov
mov
fsqrt
cmpsb
ffreep
add
and
icebp
rcrl
icebp
mov
sbb
into
data16
out
daa
cmp
xchg
cmp
push
or
stos
push
jo
scas
pop
jmp
mov
insl
or
test
adc
xlat
dec
data16
js
incl
inc
adc
xchg
sub
pushf
shrl
jae
imul
push
xor
xchg
adcb
in
mov
rcll
sbb
out
inc
inc
mov
out
mov
mov
sub
out
hlt
mov
jle
es
xchg
fcomi
cmp
xorb
enter
int3
jb
cltd
or
bound
sbb
mov
das
out
jbe
push
loopne
shlb
pop
push
fnsave
mov
pop
int
mov
icebp
lock
mov
jb
insl
dec
popa
adc
mov
push
ret
cltd
or
xchg
adc
mov
mov
inc
test
pop
mov
push
xchg
or
dec
pop
cmp
mov
push
xchg
inc
cld
adc
scas
dec
xor
sahf
dec
fsubl
loopne
mov
xor
out
mov
lods
scas
mov
inc
mov
in
or
or
lcall
push
cld
xchg
sub
js
pop
dec
pusha
dec
fdiv
sub
adc
jmp
aad
sub
xlat
xor
mov
jae
mov
insb
sbb
fmull
fisttpll
pop
fwait
push
xor
inc
push
sub
loope
sahf
jg
sub
mov
imul
lds
loopne
ret
xor
aam
arpl
mov
xor
popf
out
ud1
add
repnz
xchg
lods
fcmovnbe
cwtl
cmpsb
cmpsb
lds
les
sbb
inc
cwtl
out
jge
push
push
lret
into
cmp
rcr
mov
jmp
sub
cmpsb
and
jae
sbb
leave
addb
loope
daa
or
adc
mov
cmpl
mov
outsb
adc
add
jne
addr16
in
lret
or
loope
dec
xchg
inc
imul
jbe
sub
push
sbb
test
loope
cmp
and
ss
push
test
mov
xor
mov
mov
mov
pop
and
int3
loopne
sarl
pop
jecxz
push
iret
pop
mov
jnp
sub
inc
mov
mov
xchg
in
push
sub
popl
dec
and
addb
sub
pop
mov
adcb
sub
inc
pop
add
outsb
pop
mov
or
into
popf
lock
push
insl
mov
cld
mov
push
js
xor
or
cwtl
and
outsl
gs
stos
mov
and
aad
stos
lods
xchg
mov
pop
lods
sti
pop
je
cld
hlt
call
mov
lds
subb
sbb
les
sahf
sbb
xor
dec
ja
push
jno
test
dec
cmc
insl
bound
sub
cmpsl
loop
sbb
popf
fadds
movswl
jae
sahf
xor
and
nop
out
out
mov
or
in
jp
test
sub
pop
out
mov
in
sbb
dec
cwtl
loope
mov
jl
dec
or
xor
ret
jp
jg
ss
popf
mov
sbb
inc
repnz
inc
cltd
push
mov
jmp
and
scas
iret
sbb
add
stos
cmp
fs
adc
fldt
js
into
lret
mov
sub
pop
das
or
push
cmp
or
dec
xchg
imul
or
clc
mov
lods
aaa
pop
bound
sbb
insb
dec
xor
mov
inc
jns
mov
test
notl
leave
and
pop
dec
fisubl
or
push
in
cwtl
add
imul
add
fstl
imul
es
xchg
sbbb
movsl
repnz
push
pop
inc
jmp
cmp
fcmovnu
data16
xchg
shr
es
aas
push
js
out
out
pop
in
add
popf
repnz
add
ljmp
jb
cmp
xor
dec
xchg
xor
dec
cmp
xor
dec
sbb
pop
xchg
ret
xlat
fcomip
jp
inc
dec
push
pushf
arpl
rorl
mov
push
mov
cli
push
das
mov
xor
dec
idivb
dec
dec
mov
sub
dec
or
cmp
stc
out
mov
push
push
loope
out
inc
idivb
push
sbb
clc
mov
mov
gs
add
scas
test
and
mov
pusha
mov
jb
iretw
sti
repz
in
add
faddl
push
pop
test
sub
push
cmp
jg
add
sub
in
jl
mov
iret
into
in
pop
pop
sbb
inc
cmpsl
pop
divl
jmp
sbb
orl
add
outsb
test
mov
inc
or
push
cmc
pusha
jmp
mov
loopne
leave
jno
addr16
inc
fs
mov
mov
push
ficoml
dec
pop
imul
jl
repz
or
in
popf
push
out
in
adc
inc
mov
insb
push
inc
enter
pop
loopne
out
xor
push
mov
inc
mov
rcl
addr16
xchg
push
or
sbb
pop
lahf
aad
and
ljmp
xlat
mov
push
pusha
mov
or
inc
out
xor
imul
in
xor
push
cs
ds
sbb
lods
xchg
mov
test
cmp
xor
test
addr16
xchg
stc
jae
outsb
inc
xlat
dec
adc
adcb
lret
xchg
xchg
mov
xchg
dec
rclb
cltd
sbb
or
je
rcrb
cli
popf
in
divl
xchg
mov
sbb
pop
mov
dec
test
mov
lock
hlt
xchg
addr16
outsb
mov
pop
mov
xchg
jmp
sub
mov
push
mov
dec
icebp
movsl
jnp
pop
movsl
pop
daa
imul
enter
shrb
fdivs
jecxz
mov
sub
add
in
aam
aaa
mov
incl
hlt
sbb
push
cmp
outsl
outsl
sbb
in
mov
mov
sbb
mov
movsb
inc
pop
and
jbe
cmp
xchg
cmp
into
mov
xor
out
js
jl
leave
lods
cmp
outsb
sarb
outsb
cli
xor
mov
add
xor
mov
sub
hlt
lret
mov
sbb
das
stos
test
shll
dec
mov
sub
les
dec
mov
cltd
and
test
inc
aam
dec
daa
inc
jp
xor
leave
push
shrl
cmc
xor
jae
xchg
imul
and
adc
mov
je
in
clc
lahf
or
xchg
stos
lahf
jg
push
inc
outsl
lret
mov
bound
fs
jns
rcrb
imul
push
jp
mov
orb
inc
push
adc
sbb
daa
test
dec
mov
pop
pop
enter
jno
stc
bound
out
jo
or
cmp
pop
sbb
ja
outsl
xlat
cmp
ja
sub
ss
or
arpl
or
imul
fcomi
divl
jge
stos
repnz
stos
push
aaa
arpl
inc
das
movsl
in
xor
ss
cltd
aam
sub
bound
pop
insl
cs
fidivs
xchg
imul
add
insb
push
push
imul
inc
inc
mov
shll
repnz
mov
pusha
or
frstor
sbbb
sub
enter
cld
jno
push
jae
movsb
adc
or
insb
lds
lea
sub
and
adc
and
test
out
push
mov
xchg
insl
lret
test
mov
xor
scas
mov
or
int
pop
jge
daa
ret
push
inc
mov
std
clc
or
and
sub
out
int
or
xchg
sahf
icebp
jbe
ja
mov
add
jne,pn
jo
push
xor
cmp
xchg
add
sub
sub
mov
cmpl
loop
xor
pushf
les
fwait
clc
or
loop
stos
add
inc
lret
dec
push
dec
pop
int
fisttpl
stos
add
sbb
pushf
pop
jo
push
push
imul
xlat
jmp
decb
outsl
test
jg
daa
enter
mov
fs
lcall
add
mov
in
inc
test
shrl
into
dec
popf
jno
arpl
cmp
jg
cmc
add
cmp
ljmp
daa
inc
xor
lret
lcall
xchg
andb
add
ds
sbb
xchg
addl
jae
sahf
es
xchg
add
cmp
sbb
push
push
div
lret
adcl
loope
stc
pop
push
in
hlt
das
nop
cmpsl
test
mov
sbb
test
add
mov
xchg
and
sub
mov
loope
imul
pop
pop
inc
mov
outsb
pop
push
mov
lds
jmp
out
push
mov
xorb
scas
push
dec
xor
add
xchg
insl
icebp
aad
sbb
imul
divb
ds
ss
xchg
inc
mov
cmp
sub
pop
test
mov
bound
enter
call
push
mov
xor
out
mov
push
xchg
lret
cmp
dec
insb
repz
jecxz,pn
pop
fistl
cmpsl
fisttps
add
mov
clc
xchg
or
mov
sbb
clc
cmp
hlt
inc
mov
lret
orb
jb
sbb
add
sbb
jno
mov
jmp
dec
iret
sbb
iret
arpl
fstpl
out
iret
cli
mov
xchg
fidivrl
lcall
hlt
jb
divl
adc
aas
mov
xlat
mov
rclb
push
int
stc
jle
adc
leave
mov
mov
dec
pushf
rcll
jecxz
jae
sub
cld
mov
lahf
mov
aas
dec
push
xor
addr16
pop
cmpl
mov
sahf
push
in
push
fwait
in
pop
mov
inc
int3
cmp
lods
or
and
push
inc
mov
loop
inc
push
jp
fadds
mov
xchg
add
jge
sbb
out
and
stos
iret
sbb
pop
ficomps
sub
icebp
je
lods
pusha
jg
inc
pop
and
pop
popf
jnp
push
jmp
pop
jno
iret
mov
pop
add
add
fisubs
flds
or
fistps
xchg
in
addr16
jno
in
push
in
mov
shrb
xchg
repz
andb
inc
fsubs
lods
xchg
add
lds
add
testb
pop
sbb
mov
push
cmc
mov
push
inc
loope
aad
iret
push
sbb
jnp
add
xchg
out
mov
jg
mov
fdivr
xor
int3
push
fs
aaa
lods
popl
loopne
xchg
loopne
out
or
mov
xchg
sbb
jae
jbe
mov
inc
adc
cmc
loop
jle
mov
pop
repnz
pushl
lret
ret
and
inc
gs
mov
cmc
cwtl
sub
add
dec
pop
xor
xorl
push
xchg
arpl
scas
in
mov
insb
add
and
je
adc
dec
scas
jmp
dec
mov
pushf
in
icebp
inc
std
scas
stos
ror
addr16
jnp
push
arpl
dec
rcr
dec
mov
int3
and
mov
mov
cmpsl
sbb
mov
hlt
mov
fsqrt
sahf
pop
ss
sbb
lds
adc
scas
xor
jmp
ss
xchg
cmp
cmc
lcall
pop
aad
shlb
call
mov
mov
mov
xor
inc
stos
dec
pop
and
add
sbb
xchg
cmpsb
mov
mov
lea
pop
popa
in
out
jnp
cmpsb
adc
jge
mov
aam
fisubl
adc
or
jnp
pusha
xlat
mov
mov
das
mov
inc
clc
or
dec
imulb
dec
pop
or
int
xor
pop
in
out
subb
mov
push
fsts
lds
jb
mov
aaa
daa
xor
test
mov
dec
leave
fld
xchg
sub
pop
test
mov
loop
test
pusha
dec
inc
fs
xchg
push
xor
push
ret
mov
pushf
repz
sub
mov
cld
dec
das
ret
pushf
mov
mov
fidivl
mov
jbe
les
das
add
mov
aad
lock
xchg
je
adc
loopne
iret
mov
mov
int
mov
push
jge
ja
adc
nop
pop
mov
push
jnp
and
inc
push
pop
and
mov
jmp
idivb
je
inc
in
jb
sbbl
and
pop
bsr
xlat
inc
lods
mov
mov
cs
cmpsl
lret
mov
das
insb
adc
sbb
push
rcrl
repz
push
js
cmpps
xchg
jp
xor
sub
rorl
mov
lods
push
fwait
push
add
add
push
jge
dec
add
mov
fisttpl
inc
rorb
jnp
scas
out
sbb
js
xchg
mov
push
rcrb
sbb
rcll
or
jp
and
std
loope
xor
pop
enter
push
fistpll
pop
sbb
test
xchg
das
mov
add
invlpg
arpl
mov
popa
jle
jl
sub
icebp
cli
lahf
lods
test
lock
stos
nop
ret
sub
sub
fwait
sub
xor
push
movsb
jne
jns
and
faddl
call
mov
into
xor
xchg
mov
notb
pop
and
dec
arpl
enter
rorb
inc
inc
jmp
aad
and
dec
rolb
sub
mov
lock
ljmp
rcrl
scas
out
jb
pop
in
nop
mov
dec
lret
mov
pop
adcb
xlat
jbe
adc
sub
jne
xchg
or
xchg
adc
ljmp
daa
xchg
lret
cmc
movsl
add
add
popf
stos
repz
repnz
ss
incb
sub
call
lea
cmpsb
dec
mov
inc
das
push
sbb
and
cmp
std
aas
in
ja
in
mov
addl
inc
fistpll
dec
aaa
arpl
pop
or
mov
cmp
dec
enter
aad
xor
add
mov
test
push
and
addr16
mov
xor
rorb
mov
aas
xor
pushf
push
movsb
in
adc
mov
aas
mov
not
cs
fsubrl
add
cwtl
pushf
mov
jb
inc
sub
and
jl
std
pop
xor
ja
popa
inc
test
jecxz
mov
adc
jno
fcoml
stc
mov
les
xchg
clc
cmp
push
mov
mov
push
and
int
stos
add
fsubrl
sbb
sub
clc
push
xchg
dec
sub
sbb
jp
enter
push
les
mov
add
cli
je
dec
jle
sti
cmp
push
shlb
out
test
lods
addr16
xor
mov
push
fbstp
cmp
and
cmc
inc
cmp
sub
mov
testb
out
adc
or
xchg
add
jecxz
stos
jmp
push
cmp
xor
loopne
fisubrl
adc
jp
push
enter
outsb
xor
sbb
jbe
cmp
mov
movsb
gs
subl
popf
xchg
rol
movlps
mov
shlb
sbb
jbe
lret
add
ret
enter
or
pushf
adc
mov
lods
jle
insl
int3
repnz
and
dec
add
pop
and
push
loope
inc
test
mov
push
test
dec
xchg
push
mov
sar
clc
jmp
xchg
ret
leave
jle
jecxz
aaa
xchg
in
xor
ds
sub
aam
xor
add
sahf
repnz
loope
loope
or
popa
push
cmp
mov
sarl
xlat
sub
fdivrs
mov
cmp
sub
mov
mov
iret
sti
or
stc
xchg
xor
ds
mov
test
push
scas
test
push
xchg
cmc
arpl
scas
rcr
mov
jno
arpl
sbb
xchg
iret
arpl
adc
mov
dec
in
in
push
mov
fcomip
loopne
mov
xor
mov
inc
imul
fidivrl
inc
mov
sahf
inc
adc
dec
fs
xchg
mov
leave
pop
rcr
cmc
dec
sbb
dec
in
mov
out
inc
lods
mov
into
jmp
jge
outsl
xchg
dec
and
test
cs
mov
popf
cmp
or
test
jecxz
and
gs
xchg
xor
jne
adc
jecxz
push
mov
jno
xchg
std
cwtl
adc
aas
scas
push
push
data16
dec
cmp
mov
scas
aas
leave
movsb
ret
cmp
push
add
rcll
jmp
test
outsl
hlt
popf
inc
and
mov
subl
das
inc
push
mov
or
adc
fwait
divb
inc
push
je
rorb
dec
stos
movsl
andb
ret
in
mov
rclb
jp
pop
cmp
test
jo
adc
add
js
ds
sbb
inc
int3
aas
outsb
shr
jge
stos
push
fs
push
stc
lret
adc
push
jbe
or
into
sbb
mov
sub
sub
inc
push
sbb
dec
xor
mov
mov
decb
mov
cli
pop
cmc
movsl
or
jmp
idiv
cmpsl
in
mov
push
in
mov
jge
xor
fdivs
fcoml
push
shlb
xor
es
adc
xchg
mov
jae
divl
incb
inc
stos
rcl
mov
xchg
xchg
fcom
stos
sbb
or
dec
pop
es
mov
and
mov
ret
or
dec
add
es
mov
test
popa
inc
mov
jp
scas
or
in
cmp
in
xchg
mov
in
pop
in
mov
adc
push
adc
sbb
arpl
lcall
stos
gs
decb
in
sbb
cmp
loopne
mov
outsl
cli
xor
xchg
jno
iret
mov
dec
dec
inc
jo
outsb
das
push
inc
ret
cmp
mov
and
add
ret
aaa
cmp
cmp
dec
cmp
mov
xchg
add
or
fisubs
dec
leave
sub
jge
push
subl
js
sub
xlat
lret
imul
je
ja
pop
jg
js
aad
adc
mov
mov
pop
fimull
aaa
cmpl
fwait
cmp
dec
and
cmp
lock
xchg
push
mov
fadds
sub
mov
mov
fstl
push
repnz
mov
sbb
dec
pop
mov
sub
lahf
aas
and
jg
or
repnz
pop
mov
in
sub
data16
mov
fimuls
rclb
push
add
mov
out
shll
sahf
leave
xor
add
or
lods
arpl
push
cwtl
loope
xchg
xor
mov
sub
mov
jne
mov
outsb
cmp
pushl
es
sub
and
mov
inc
mov
mov
or
cld
leave
ret
dec
mov
jl
fucomp
shl
and
imul
mov
pushl
repz
int
sbb
mov
roll
or
mov
icebp
cmp
cmp
inc
rclb
add
add
add
xchg
js
loopne
aaa
mov
sub
fsts
fisubrl
cs
cmp
jmp
xchg
sti
cmc
inc
in
pop
ret
and
mov
imul
mov
xchg
psllq
add
and
out
pop
rcll
xchg
mov
int3
dec
mov
inc
stc
lock
dec
mov
ret
xlat
bound
into
pop
loop
inc
sub
icebp
dec
jo
sti
movsl
in
cwtl
jge
sbb
sub
lret
imul
dec
sub
fnsave
lods
ja
into
mov
bound
cmpsw
lods
popa
leave
cmp
fdivp
nop
ss
pop
outsb
lret
jmp
lret
cwtl
mov
pusha
lcall
ret
mov
stos
ss
push
orl
lcall
pop
pushf
enter
push
mov
pop
movsl
data16
and
push
mov
xchg
xchg
out
cmpsl
xor
sub
add
jle
test
lock
xor
jbe
inc
imul
jge
push
movsl
ljmp
and
jo
adcl
subl
int
jno
les
les
nop
es
lcall
mov
lock
inc
repnz
push
fisttps
pop
sbb
loopne
pop
inc
mov
mov
inc
or
inc
popa
arpl
jp
lds
lds
loopne
dec
mov
fisubs
or
and
pushf
cld
cmp
sbb
ret
aam
pop
cmp
push
iret
cld
jl
notb
pop
jae
dec
xor
add
add
pop
into
push
adc
or
mov
dec
test
lock
imul
icebp
loopne
mov
sub
pop
cwtl
das
sub
leave
mov
push
mov
pop
out
pop
cwtl
lret
aas
push
cs
dec
outsb
orb
push
pop
stos
jmp
sub
stc
add
push
pop
pop
adc
jl
imul
pop
ljmp
mov
cltd
jmp
mov
and
cli
inc
push
sub
sbb
jp
stos
push
lcall
adc
adc
leave
sub
test
xorb
pushf
jp
shrb
imul
jg
ljmp
insl
and
push
nop
call
push
popa
pop
cmp
cmpsb
cld
daa
mov
into
jecxz
ds
push
popf
pop
loope
fbstp
cmp
lcall
shl
mov
sub
inc
push
out
lret
and
or
mov
lea
js
inc
xor
dec
lock
mov
or
xchg
cmp
or
push
mov
xchg
jmp
xor
mov
ja
orl
sbb
mull
mov
out
and
loop
jl
arpl
push
repnz
xor
dec
add
adc
xchg
cld
daa
and
aas
add
adc
add
pushf
xchg
movsb
inc
cmpsb
dec
dec
pop
insb
inc
imul
scas
lea
dec
and
into
cmp
jmp
orl
adc
pusha
cmp
or
xor
std
xchg
xchg
xchg
mov
mov
lret
xchg
jno
sub
or
jle
xor
js
mov
enter
sub
jne
call
cs
iret
add
mov
loopne
jge
dec
adc
pushf
jnp
aam
push
xchg
mov
lahf
sbb
ret
or
mov
sub
ja
fdivl
movsl
sub
ds
dec
sbb
jno
mov
or
mov
dec
push
dec
sahf
sub
jg
jg
cli
aas
pop
gs
adc
insb
shlb
nop
wrmsr
jg
add
xor
cmpl
cmpl
dec
jmp
repz
pop
sub
fiadds
jne
call
pop
dec
mov
inc
sbb
lcall
mov
loop
scas
stos
sbb
pop
stos
movsl
leave
push
enter
int
adc
les
cmpsb
stos
pop
jnp
inc
xchg
dec
aam
mov
jl
and
mov
std
cld
int
sti
repnz
cmp
xchg
adc
add
xlat
pusha
out
jae
and
aas
mov
mov
dec
jo
das
mov
ja
scas
xor
fadd
push
rcrl
lods
mov
jno
fwait
xor
mov
lret
cmc
push
xchg
lret
mov
and
dec
iret
pop
iret
in
pop
aaa
fnstsw
xor
jge
sbb
iret
xor
inc
sbb
outsl
mov
filds
mov
shlb
jg
js
add
lea
icebp
pushl
add
js
fiaddl
dec
movsb
pop
dec
test
or
cld
cmp
cld
lea
lcall
or
pop
test
fmull
negl
es
test
push
xchg
rclb
in
in
sbb
inc
xchg
loope
mov
xchg
jne
jo
sub
adc
dec
scas
jno
aad
xor
and
push
xor
and
push
pop
dec
push
ljmp
out
icebp
jbe
fiadds
jmp
mov
sahf
pop
mov
std
out
pop
fcmovnu
aam
fucomp
cmpsb
mov
cmp
out
dec
xchg
jg
daa
or
cs
cmp
insl
int3
subl
add
cmp
mov
in
push
push
push
shrl
mov
jmp
les
outsl
xchg
outsl
and
dec
in
repz
lret
sbb
movsb
mov
inc
adc
jp
push
mov
aas
cmp
mov
mov
mov
mov
ja
jmp
repz
jg
movsl
mov
sub
mov
sbb
sub
call
jne
or
push
nop
in
sarb
mov
rcll
jb
push
pop
repz
push
cwtl
outsl
xor
loopne
mov
shlb
mov
and
or
cmp
lcall
out
loopne
shll
xchg
out
out
xchg
lods
jns
mov
or
xor
fidivrs
std
mov
js
adc
pop
mov
adcb
jmp
sbb
cmp
cmp
iret
inc
js
fidivrl
cs
add
idiv
out
and
iret
rol
mov
fmul
xlat
pop
cmp
jo
sub
push
insb
insb
dec
xor
fwait
add
aam
cmpsl
xchg
enter
scas
test
adc
enter
add
dec
xor
or
adc
jns
adc
decb
push
mov
mov
mov
lret
addr16
cmp
movsl
dec
call
fsubp
pop
aaa
frstor
jns
in
and
add
and
popa
cmp
mov
in
sbb
inc
mov
fcmovb
fsubrl
push
adc
xor
jmp
jno
xchg
add
jne
popa
jecxz
inc
and
out
jp
js
out
xor
pop
fcmovbe
insl
cmp
enter
lods
cmpsb
mov
add
xor
pop
ds
and
xor
mov
ss
stos
adc
fimull
pop
push
sahf
and
das
cld
adc
mov
mov
or
frstor
int3
jae
or
adc
or
cld
fcmovbe
mov
popf
jb
out
sub
pop
push
mov
cmp
shll
mov
leave
mov
adc
lahf
mov
and
mov
xor
insb
stc
jae
jne
mov
js
jne
cwtl
xor
push
mov
xor
cmp
or
stos
aaa
fidivrs
movsb
pop
mov
inc
fimull
mov
inc
sub
xor
cmp
pop
xchg
inc
sub
repz
jp
jle
iret
out
lcall
xorl
nop
mov
sub
push
pop
cmp
cld
les
xor
cltd
in
out
sbb
inc
mov
mov
or
or
mov
cmc
es
adc
jge
dec
pushf
or
push
mov
stos
mov
pop
mov
loopne
cmp
iret
jmp
jae
sub
cmc
and
call
cmpsl
fadds
xlat
mov
popa
sub
pop
test
stc
clc
xor
mov
mov
xchg
push
ret
pop
push
or
in
jge
lods
xor
and
in
mull
jb
imul
je
push
pop
nop
fwait
cmp
jnp
aad
imul
jns
hlt
add
int
sub
aas
adc
rcll
xchg
rcrb
jge
push
addr16
ds
cmp
or
dec
mov
mov
shlb
pop
loopne
lcall
mov
add
cwtl
adc
pop
xor
push
ljmp
jae
add
lock
pop
pop
lret
movl
shll
aaa
sbb
orl
cmp
pop
and
outsb
adc
mov
icebp
enter
jg
mov
or
cmc
adc
rolb
mov
shrb
mov
das
mov
dec
pop
movsl
jp,pn
mov
jne
jnp
nop
mov
dec
push
jb
mov
arpl
inc
adc
cwtl
pushf
sub
cmp
cltd
sub
fwait
pop
cld
add
in
cmpsl
das
inc
add
jb
cmp
rorb
scas
sub
mov
adc
inc
cmpsb
mov
les
stos
jmp
cmpsl
mov
out
in
gs
lock
or
repz
xor
sahf
ror
jecxz
jmp
xor
int3
pushf
adc
push
or
lds
aam
or
dec
imul
mov
scas
mov
rolb
iret
cmp
ja
inc
dec
inc
sarb
lods
mov
sti
mov
push
xchg
jne
mov
das
jmp
les
int
clc
sub
sub
pop
movsl
aad
incb
in
mov
or
das
push
xchg
in
test
test
lods
addr16
sub
add
je
or
xlat
lret
shrb
lods
dec
pop
inc
imul
cmp
lret
int
add
shr
cltd
mov
and
mov
cmpsl
xchg
mov
dec
jl
adc
es
jge
cmp
add
stc
jo
nop
xchg
ficoms
in
sbb
and
out
cld
xor
ja
test
mov
mov
or
fnstcw
mov
push
adc
pop
flds
mov
loope
jp
aam
imull
sub
pop
adc
arpl
add
repz
inc
test
loope
fsubrl
push
jae
push
in
mov
add
stos
in
or
mov
out
mov
fsubl
push
pop
out
vpslld
sbb
shlb
ret
test
pop
mov
js
lret
sahf
and
clc
xchg
xchg
dec
cmpsb
mov
cs
ds
lods
push
jb
cmp
or
xchg
dec
sub
pushf
cld
aaa
cmp
xchg
sbb
or
push
mov
test
roll
dec
cmp
xchg
int
outsl
adc
dec
push
cmp
cmpsl
mov
jl
pop
aas
test
add
test
jecxz
mov
jne
mov
rsqrtps
or
data16
stc
rcll
xor
jo
xchg
aas
pop
sbb
loopne
jb
and
inc
push
call
int
or
xor
sub
mov
push
jo
dec
mov
arpl
adc
lods
fsubrl
jge
out
sub
cmpsl
cmp
aad
cmp
pop
mov
cs
add
cmp
lock
cmp
popf
push
push
sti
in
test
ret
lret
push
sti
icebp
add
call
jle
mov
mov
jo
repnz
lock
and
mov
push
pop
xor
lock
inc
dec
pop
sub
incl
popf
inc
lcall
adc
pop
add
int3
call
repz
mov
out
fidivl
inc
push
les
out
cmp
orl
imul
sub
aad
mov
into
movsl
add
popf
int3
dec
xor
in
add
rorb
add
jp
fstl
data16
sbb
mov
pop
mov
push
aad
jmp
add
pop
push
cmp
push
push
insl
rcrb
loope
pusha
xor
rcll
mov
pop
mov
insb
lahf
incb
adc
aad
push
ljmp
cs
sbb
xchg
mov
lock
fcoms
ret
clc
enter
inc
mov
mov
in
xchg
mov
ss
inc
pop
xor
pop
mov
xor
cs
insl
out
mov
jp
add
fwait
push
mov
push
jge
xor
test
loopne
mov
pop
sub
scas
out
testb
pop
jo
sbb
inc
push
dec
xor
pop
xchg
cmp
test
mul
std
repnz
in
shl
or
cmp
movb
push
fildl
cwtl
fwait
push
cmp
imul
ss
mov
add
lock
aaa
mov
push
lcall
jbe
data16
mov
lret
mov
inc
push
pop
in
std
iret
mov
dec
outsb
xchg
mov
imul
xor
popf
je
or
in
push
xor
int3
movsb
cmp
xor
and
sti
inc
ds
test
int3
xchg
pop
xchg
mov
daa
mov
lret
pusha
pop
push
aaa
pop
mov
test
ret
je
mov
pop
fwait
or
mov
data16
add
push
push
lret
ds
stc
out
mov
sar
pop
add
out
pop
lahf
fldt
shlb
stos
inc
int
mov
pushf
jnp
mov
sub
pop
xchg
dec
adc
dec
mov
lret
addl
imul
mov
cmc
xlat
add
add
mov
outsb
dec
jmp
rcrl
ficoml
fnstcw
into
pop
cmp
ljmp
loopne
add
arpl
mov
add
lret
enter
dec
mov
cmpsl
stos
mov
fwait
stos
push
nop
sub
sbb
lods
jg
pop
jnp
xchg
fistps
cmc
insb
outsl
rcll
add
jbe
push
xlat
daa
loope
push
addr16
mov
je
jne
push
jge
mov
dec
cmpsl
adc
or
pop
jo
mov
lds
out
ss
add
stos
loopne
cmp
ljmp
scas
jmp
adc
test
add
fmull
ds
add
inc
xchg
shrb
pop
jge
test
mov
fs
adc
lods
push
les
jb
scas
push
mov
adc
add
scas
sbb
lcall
inc
dec
fs
cmpsb
in
or
xchg
call
xlat
or
lret
sbb
xor
mov
daa
ja
xchg
mov
and
out
mov
sbb
pop
or
push
xchg
push
pop
xchg
mov
and
ret
fs
shr
push
mov
mov
or
rcrl
rcrb
push
sbb
and
adc
push
adc
add
inc
popf
jg
out
clc
in
mov
dec
sub
mov
jl
jecxz
cmc
adc
xor
mov
lea
jecxz
mov
rep
test
jo
loopne
das
int3
mov
jae
lds
mov
xor
cld
and
and
inc
test
and
adc
add
lret
pushf
xchg
pop
pop
iret
jmp
shlb
pop
or
in
shlb
inc
sbb
pop
rcrb
inc
nop
subl
mov
xchg
mov
and
imul
sub
push
mov
push
aas
push
mov
shlb
jo
scas
stc
sub
movb
adc
push
jo
pop
inc
inc
outsl
fwait
xor
jno
push
mov
clc
adc
mov
ja
inc
int
jbe
outsl
test
cmp
cmp
and
notl
inc
xor
shl
pop
mov
mov
mov
inc
mov
dec
aam
and
sbbb
out
std
and
inc
fs
incl
xor
test
jmp
outsl
cmp
cmp
jg
jbe
test
mov
out
andb
enter
xor
ret
fwait
mov
pusha
repz
movsl
and
shrb
xor
mov
fdivrl
stc
fiadds
call
mov
xor
mov
sub
sub
and
aaa
cmc
pop
xor
sbb
mov
jnp
mov
out
dec
dec
inc
jge
pop
iret
out
mov
add
cmp
sbb
push
lea
jb
pop
sbb
or
adc
pushf
cmc
and
scas
fdivrs
mov
in
inc
outsb
out
inc
jo
xchg
and
xchg
adc
call
lcall
sub
mov
jno
pop
cmpsl
lock
adc
sub
dec
outsb
cli
push
pop
jg
sbb
arpl
mov
addl
outsb
fucomp
cmp
push
cmp
bound
outsb
jmp
cmp
pop
and
mov
out
arpl
mov
sbb
jecxz
and
clc
hlt
or
loop
sub
sub
rcrl
lcall
push
cwtl
mov
in
js
mov
sbb
fisubs
mov
xor
push
sti
pushf
lods
or
fdivrs
push
bnd
call
sub
fdivs
adc
sahf
xchg
jae
out
pop
mov
outsl
data16
pop
cmp
or
sbb
mov
mov
idivb
xorb
pop
push
add
jns
mov
hlt
or
jg
jne
dec
jo
push
or
add
push
mov
lock
fidivs
loopne
lods
stc
mov
mov
cmpb
push
out
fdiv
pop
or
cmc
sbb
mov
test
cmpsb
pop
jmp
jbe
roll
fiaddl
adc
pop
mov
lret
add
ret
lods
loop
scas
xchg
xchg
mov
dec
lea
and
xchg
je
lds
cmp
and
pop
cmp
xchg
rorl
mov
in
int
mov
xchg
mov
lahf
mov
fisttpl
cmp
and
icebp
lahf
movsl
test
dec
in
rcrl
jbe
test
fwait
pop
mov
iret
ss
cltd
mov
pop
outsb
sbb
and
lock
daa
jnp
fidivs
in
and
scas
filds
push
sbb
or
outsl
adc
inc
mov
push
fldenv
cmp
inc
jmp
mov
pop
push
fidivrl
push
es
dec
shl
adc
fucomi
ss
rcrb
cli
add
xor
mov
mov
inc
adc
mov
lret
xor
les
test
push
dec
cmpsb
jp
and
sbb
cmc
sbb
mov
add
pop
rcrl
cld
inc
push
pop
aad
sbbl
addb
sahf
jecxz
aam
or
jecxz
and
dec
ffreep
scas
mov
mov
jns
cmp
pop
cmpsl
ret
add
xor
outsb
sub
sub
in
nop
shll
lea
fcomps
adc
push
in
cwtl
popa
daa
aad
xchg
ds
cs
jbe
mov
xchg
cmc
fdivr
dec
jae
popf
add
xchg
dec
sti
mov
lret
popf
out
aaa
dec
ljmp
adc
pop
aad
pop
pop
lret
add
push
sbb
fcoms
ficoms
popa
cmpsb
adc
sahf
mov
sub
lds
jp
mov
add
fisubrl
mov
add
sbb
adc
mov
stc
lods
arpl
or
xor
hlt
jle
mov
add
sub
pop
sbbl
jae
push
xchg
and
mov
and
add
mulps
jo
into
call
adc
cmc
sbb
inc
std
adcl
and
xor
pop
mov
xchg
pop
loope
shrb
sti
mov
mov
pop
mov
fst
lods
jl
cmpsl
push
dec
pop
mov
and
in
leave
sub
call
sahf
mov
mov
add
or
or
imul
add
out
jmp
dec
les
push
mov
mov
cmp
nop
ds
sub
mov
dec
ficomps
cmp
pop
imul
lea
dec
neg
dec
mov
jno
add
in
inc
ret
jo
cmp
hlt
lock
inc
setp
popa
pop
cmp
mov
popf
outsl
lea
sub
call
lock
inc
ds
cmp
loop
lock
mov
adc
jmp
out
loopne
push
shlb
test
xor
xor
std
inc
push
stc
pop
dec
fldenv
sub
jl
adc
jbe
add
fcmovbe
cwtl
stos
inc
mov
xchg
fcmovu
jg
inc
movsb
or
aam
out
rcrb
loope
cmp
and
lds
pop
ljmp
cli
mov
push
or
scas
jbe
les
cmp
push
push
out
mov
mov
outsl
inc
mov
lods
xchg
push
test
and
ret
jge
adc
mov
jmp
jne
dec
daa
push
ret
mov
mov
pop
mov
sub
mov
mov
inc
daa
dec
fs
out
lahf
iret
mov
dec
test
mov
xor
or
push
sub
inc
sbb
jecxz
iret
enter
jne
mov
fstpl
test
lret
add
push
inc
mov
xor
fcoml
pop
mov
test
rclb
jns
sub
pop
dec
daa
clc
shll
lds
cld
jno
adcb
and
cmc
and
xchg
addr16
xchg
adc
sbb
xchg
test
dec
dec
stc
xor
add
pop
mov
lret
out
cs
lret
je
xchg
jbe
mov
test
flds
cmp
and
pop
orb
out
inc
jae
mov
faddp
mov
mov
ret
cmp
xor
sub
xchg
test
mov
fwait
leave
add
fdivl
push
jae
pop
xchg
sbb
cld
jb
cmp
and
roll
iret
inc
xchg
repz
cmp
int
aam
xchg
push
inc
jbe
add
popa
iret
xchg
int3
push
in
dec
inc
xchg
repz
jg
cmp
int3
xchg
mov
inc
pop
sti
scas
push
imul
jne
mov
dec
imul
addr16
add
sbb
jge
and
pop
mov
repnz
int3
cld
aad
pushf
lret
mov
push
dec
xchg
and
xor
lods
xchg
jne
int
lea
xorl
sub
mov
mov
js
dec
test
sub
pusha
xchg
notl
jmp
and
mov
fsubrp
scas
pop
push
xchg
dec
dec
xor
insl
and
xor
add
ljmp
lahf
out
jecxz
in
adc
dec
push
mov
pop
cmp
loopne
push
fcmovnu
fsubl
jmp
out
mov
pop
iret
mov
add
jbe
lock
fucomi
xor
int
popa
push
jo
mov
insl
cvtpi2ps
lods
cmpsb
leave
sahf
mov
loop
mov
insb
nop
cmp
out
pop
xor
sub
adcb
lods
pop
les
inc
movb
and
mov
notb
and
push
xor
adc
jne
jns
push
pushf
inc
mov
es
jl
or
mov
outsb
dec
inc
test
mov
sarl
sbb
xchg
or
lret
or
cs
mov
hlt
inc
outsl
lcall
jle
shlb
add
jg
cltd
add
xor
cs
mov
adc
sbb
ret
sbb
test
lock
outsb
aad
sbb
pop
xor
andl
xor
push
dec
scas
dec
movsl
les
test
jp
bound
or
push
popa
inc
aas
cmc
iret
add
mov
adc
rolb
das
filds
pop
jp
pop
mov
enter
ja
adc
cmp
imul
push
fbstp
jg
xchg
mov
ljmp
in
lret
sarb
sti
imul
outsb
mov
pop
sarb
xor
mov
outsb
sbb
jg
int
call
mov
and
aaa
sbb
pop
mov
xchg
rcl
or
out
cmpsb
cs
test
pop
lret
frstor
add
jae
dec
popa
pop
jecxz
ret
daa
sbb
movsl
fwait
jae
in
sub
imul
in
out
mov
inc
sbb
sbb
push
rorb
push
fiaddl
fs
call
jle
xchg
test
xor
imul
enter
mov
xor
sbb
pushf
push
ds
in
push
sub
repnz
les
inc
stc
filds
mov
add
dec
scas
jecxz
jno
rol
pop
mov
and
cltd
jge
adc
pusha
lods
mov
cmp
out
das
adc
fisubs
ficoml
xor
in
in
mov
pop
push
mulb
popa
sbb
out
test
insl
jle
out
rclb
xor
inc
cld
xor
lahf
mov
fildll
mov
sbb
ja
jmp
push
cmp
cmc
fmulp
mov
mov
stos
inc
pop
pop
mov
jo
push
lcall
shll
out
and
mov
pop
popa
lock
es
orl
in
and
adc
and
push
mov
push
push
ljmp
mov
and
addb
hlt
mov
mov
jb
mov
loopne
jo
outsl
jo
cld
mov
add
lods
xchg
xor
call
sbb
adc
inc
roll
and
popf
bound
ret
jae
enter
mov
mov
lcall
and
add
jo
jno
xlat
cmpsb
inc
cltd
lods
xlat
mov
or
mov
mov
xchg
cmp
xor
repz
outsb
push
lea
addb
pusha
rcll
outsb
call
aaa
sbb
sub
les
fwait
ss
pop
or
in
jg
cmp
dec
out
mov
pop
out
and
bound
inc
jmp
mov
or
mov
mov
fisubrl
lea
jbe
ljmp
xchg
xor
lods
add
push
popf
add
mov
mov
ret
push
pop
add
pop
mov
lods
mov
lahf
sub
sub
lret
pmovmskb
pop
and
shr
setns
pop
outsl
cmpb
push
loop
inc
in
xchg
jmp
mov
arpl
mov
out
pop
lahf
movsb
rep
cmp
cwtl
pop
inc
sbb
and
sub
div
pop
xor
dec
hlt
mov
pop
push
mov
insb
bound
pop
cltd
mov
jl
inc
popf
fst
out
mov
jo
adcl
or
jo
inc
cmp
jb
repz
push
lea
icebp
cmp
mov
sbbl
mov
ficoms
pop
sahf
imul
sbb
es
cmpsb
int
cmp
xchg
mov
add
jne
xchg
sbb
xor
lret
and
loopne
fildll
divl
outsl
lock
mov
dec
mov
jae
mov
mov
push
test
inc
lods
nop
sub
es
and
cmp
nop
pop
mov
ss
sets
fnsave
test
mov
mov
xchg
ret
xchg
xchg
mov
dec
pop
mov
sahf
mov
lods
test
mov
mov
mov
sahf
mov
in
lret
pop
hlt
es
push
mov
inc
sbb
out
icebp
insl
jp
sub
hlt
fwait
loope
aaa
push
pop
adcb
push
mov
mov
ja
adc
push
adc
sbb
push
sahf
shrl
pop
jg
mov
fmulp
rcrb
add
inc
pushf
repnz
cmpsb
dec
push
sub
test
ss
daa
test
inc
insb
cmpsl
insb
push
pop
xchg
lret
add
out
jo
mov
xchg
ret
add
in
aad
mov
sbb
sti
push
bound
cmp
push
cmp
sbb
cltd
ss
pop
pusha
clc
adc
jl
adc
test
scas
mov
xor
push
bound
sbb
in
sbb
icebp
sbb
cs
nop
sub
jmp
xchg
adc
xchg
xchg
adc
xor
cmc
sbb
fildl
push
cltd
push
sahf
jns
enter
imul
int3
add
cltd
mov
into
ss
mov
loope
add
test
loopne
xchg
and
cmp
add
inc
xchg
xchg
and
aas
push
ret
jp
or
scas
push
mov
pop
xor
inc
mov
adc
xlat
add
sub
pop
pop
adc
or
pop
int3
ss
xlat
pop
aad
out
mov
arpl
test
adc
or
in
lret
or
outsl
or
outsb
xlat
bound
add
pop
or
into
iret
rorb
push
mov
lret
test
lret
and
fisubs
shrl
imul
xchg
ret
inc
mov
sbb
sti
fsubrs
aad
std
or
and
mov
jg
fcompl
xchg
out
sub
dec
jno
push
out
pop
repnz
push
in
loope
xor
jmp
jge
lea
inc
enter
dec
jbe
pop
ret
adc
ficoml
fadds
fwait
and
ret
lret
mov
inc
pushl
sar
imul
adcb
lods
and
and
push
and
popf
jbe
mov
lahf
mov
and
push
or
shr
call
out
mov
inc
sub
mulb
fcomps
pushf
in
adc
loop
jg
insl
hlt
fcomp
mov
cwtl
or
jne
call
cmpb
inc
pop
inc
pop
inc
dec
shl
sub
adc
sti
sub
repnz
nop
xor
and
mov
scas
and
ss
outsl
fldcw
stos
jns
and
jle
jbe
cli
sbb
xchg
fcmovnbe
je
sbb
inc
and
cmp
xor
arpl
gs
mov
push
xor
push
repnz
mov
pop
outsb
test
mov
mov
pop
xor
enter
push
out
push
negl
mov
stos
or
sub
cli
jo
aad
scas
pop
data16
mov
loopne
or
add
outsl
pop
addr16
dec
or
repz
sbb
maxps
adc
add
into
xor
or
hlt
sbb
dec
rcr
stos
outsl
sahf
iret
leave
es
int
mov
jne
pop
sub
je
xor
xchg
inc
mov
xchg
and
push
dec
ljmp
cmp
in
jb
pushf
imul
rolb
fnstenv
into
jo
repz
pop
cmp
jp
nop
insb
repnz
mov
jae
cmpl
push
mov
fbld
cmp
cmpsl
int3
andl
pushf
std
mov
js
outsl
xor
adc
ret
xchg
jbe
push
inc
sahf
add
mov
ja
push
mov
mov
sub
loop
xor
rcrb
in
nop
hlt
pushf
mov
sahf
xchg
cmpl
les
mov
push
jns,pt
sub
shll
dec
divb
push
adc
xor
es
into
pop
dec
mov
push
psllw
or
mov
repnz
lods
pop
jb
cs
jg
inc
addr16
test
ret
adc
js
jns
jbe
fsubs
mov
mov
repz
cwtl
add
cmp
popf
push
pusha
inc
pop
leave
xor
pop
lret
gs
pop
ljmp
gs
popf
cmpsb
jns
pop
fbld
shll
test
sbb
imul
loope
call
popa
dec
orb
or
push
jle
sub
adc
into
scas
xor
orb
les
popa
mov
xor
xchg
lods
cli
cmp
sub
stos
mov
imul
cli
cmc
mov
test
dec
xchg
flds
ja
pxor
js
ljmp
jns
pop
pop
add
movsl
shr
adc
mov
cmp
imul
adc
mov
adc
ret
push
adc
xchg
xchg
jno
insb
mov
incl
imul
popa
fwait
movsb
test
adc
jmp
mov
loope
adc
sbb
mov
fcmovb
sub
add
mov
leave
and
sub
ret
mov
adc
or
sbb
or
es
sbb
movl
lods
shlb
or
testb
inc
xchg
push
jo
sub
mov
movsb
adc
aam
xchg
mov
jg
fists
sub
jmp
scas
mov
sbb
or
mov
fs
jmp
jb
fistl
aaa
imul
pop
xchg
lahf
imul
aam
cmp
aas
cli
xchg
mov
shlb
mov
rcr
xchg
push
pop
jg
test
push
fimull
fistpll
stos
ljmp
push
or
cmp
inc
das
adc
hlt
out
xchg
xor
sbb
xor
mov
mov
call
dec
sbb
push
mov
xlat
ja
mov
pusha
inc
sub
aaa
cmpsb
xchg
or
xchg
pop
cmp
jp
repnz
xor
jo
insl
pop
cmp
lea
pop
sahf
loopne
data16
pop
mov
push
aad
stos
sub
arpl
daa
nop
das
jno
cmc
mov
xchg
mov
test
push
test
dec
arpl
int
xchg
imul
ficompl
dec
ljmp
dec
es
jne
pop
sub
or
mov
xor
inc
pop
lock
add
dec
adc
mov
scas
push
push
sbb
scas
sbbb
lds
xor
jge
sbb
dec
adc
ja
cmpb
lock
cmp
cmpsb
rorb
cs
mov
xor
push
frndint
lret
xchg
push
in
jno
je
dec
add
jae
pop
sarl
push
sbb
test
mov
jno
mov
add
loopne
pop
cld
shrb
push
cmp
and
and
shll
es
push
pop
inc
popa
out
cltd
sbb
call
fidivrl
jg
sahf
xchg
bound
fbld
sub
jne
inc
xchg
imul
add
rcrb
lret
faddl
repnz
fisubs
sub
mov
xor
mov
and
inc
ss
inc
sub
negl
movsl
xor
outsb
cmpsl
in
loopne
insb
mov
cmpsl
jae
inc
pushl
mov
loop
jbe
cmp
xor
xor
dec
jp
outsl
push
or
and
add
js
inc
fwait
das
loope
les
mov
pop
dec
push
icebp
cld
dec
xor
loopne
jg
push
pop
lock
mov
xor
mov
or
sub
xchg
fcomps
inc
sbb
insl
fmull
lock
loopne
mov
daa
sub
jmp
and
std
sbbl
mov
mov
inc
fimuls
cmp
jb
dec
in
sub
sub
stos
push
adc
push
iret
ret
add
pushf
sbb
fst
je
mov
pop
mov
or
je
loopne
xor
adc
xchg
outsb
roll
je
or
sbb
insl
out
cmpsl
lea
rorb
sarl
xchg
xor
inc
jl
and
fdivl
push
cmc
mov
cmp
add
xchg
fimuls
addr16
test
push
fbld
or
jecxz
rolb
adc
jmp
lret
in
push
inc
cmpsb
lret
inc
xchg
cmp
jle
dec
in
bound
outsl
cmp
mov
gs
popa
push
mov
jl
jg
sti
xor
or
add
dec
js
sub
lods
sbbl
mov
push
xor
push
inc
mov
mov
pop
cmpsb
out
xchg
dec
push
rcrl
adc
icebp
ret
inc
aas
xorb
inc
aas
cmp
mov
cli
sub
mov
insb
repz
jge
in
cs
test
sub
lahf
bound
sbb
test
or
rcr
lahf
pushf
cmp
mov
fmul
sbb
nop
movq
jecxz
cwtl
sbb
stos
lret
es
jmp
mov
push
jnp
aam
and
pop
loope
mov
push
pop
sarb
xchg
mov
xchg
sub
and
pop
jae
xchg
shll
leave
lds
mov
push
xchg
sub
cmp
jno
repnz
in
test
jmp
mov
cmp
test
dec
cmovle
and
mov
inc
stos
cmpsl
in
in
jbe
test
rep
popa
cmpsb
lods
loope
pop
fldenvs
mov
jae
dec
imul
jle
subb
xchg
negl
cmpsb
ljmp
cld
push
insl
pop
xchg
aaa
insl
or
out
jne
xchg
insl
call
mov
dec
sahf
out
dec
mov
inc
daa
mov
fidivrl
in
movsl
and
cmpsl
pop
out
in
and
sti
inc
fsubrl
das
imul
shlb
xor
jno
repnz
mov
popa
inc
and
subl
push
popf
xor
dec
lock
repz
and
adc
sbb
roll
adc
loope
sbb
mov
jno
addl
sbb
mov
mov
lock
loopne
sahf
pop
xor
xorb
cmc
cltd
add
dec
ret
lret
cmc
mov
add
mov
lods
popf
loop
scas
jnp
dec
jno
sub
out
lods
ljmp
adc
pop
mov
dec
divl
hlt
pusha
pop
fdivrp
adcl
movsb
cmp
xor
movsl
int3
xchg
cli
jmp
mov
jmp
lahf
out
int3
cli
push
idivl
xor
push
fbld
in
sti
jl
inc
and
je
lcall
cld
xlat
arpl
insb
and
or
pop
call
mov
stos
cli
xor
mov
mov
or
js
xor
inc
lcall
aam
xor
outsb
mov
scas
cmp
leave
xchg
adc
rcll
jg
test
dec
sub
lds
cmp
hlt
xor
pusha
fldl
pop
xor
loop
sub
xor
jge
repz
cmp
lods
mov
cmp
insb
stos
fists
xor
imul
cmpsl
loopne
mov
or
imul
xlat
xchg
dec
or
cmc
adc
sbb
push
shl
hlt
add
cltd
xchg
sub
dec
sahf
inc
push
sub
leave
sbb
add
sarl
and
xchg
mov
in
icebp
xchg
aad
jb
pop
ds
jmp
sbb
pushf
xchg
clc
jne
mov
into
pop
sbb
cmpsl
pop
shrl
fs
sbb
loope
mov
flds
jo
test
mov
scas
mov
adc
xchg
inc
sub
mov
in
pusha
ret
mov
mov
ja
lds
pop
adc
fdivp
pop
push
movsl
les
lret
gs
in
mov
lds
fwait
pop
sub
add
push
adc
xorb
leave
sub
adc
pop
mov
lret
imul
stc
inc
add
out
fnstsw
leave
xchg
adc
or
and
das
pop
ljmp
mov
or
jno
jnp
into
xchg
cmp
mov
lods
xor
andl
jmp
sti
ja
mov
inc
jne
sbb
jle
insb
or
out
shrl
mov
push
sub
inc
mov
in
imul
addr16
push
dec
cmp
clc
pop
mov
movsl
sbb
in
lcall
mov
push
imul
cmpl
hlt
mov
outsl
imulb
call
lret
jb
jb
lret
sub
push
or
lods
cmpsb
mov
cmp
fisttpl
test
outsl
bound
jmp
aaa
aam
outsb
add
lods
xchg
xchg
cld
inc
mov
mov
scas
scas
pop
mov
fwait
pop
lret
cld
cmc
pushfw
in
inc
stos
push
sub
push
pop
or
push
gs
ror
cmc
pop
jnp
cwtl
ds
in
test
shlb
sub
push
pop
jmp
daa
outsl
jo
xchg
and
xor
pop
out
shlb
sub
jae
push
ja
inc
lds
mov
out
cmp
push
mov
mov
scas
jp
push
in
inc
pop
arpl
mov
mov
out
jae
cmc
pop
pop
out
sub
mov
xchg
jbe
push
fstl
sarb
mov
fdivrl
jns
aad
pop
xor
fdiv
jne
call
adc
gs
bound
and
mov
out
daa
in
cltd
and
jo
push
popf
or
mov
xchg
dec
xlat
jbe
daa
sbb
sbb
jmp
pop
mov
push
mov
shll
mov
out
xchg
gs
mov
mov
lea
cmpsb
popa
inc
fstps
movsl
pop
mov
jmp
dec
lret
and
test
cmp
mov
adc
gs
pushf
dec
adc
cmp
mov
je
adc
jb
imul
push
push
inc
notl
int
ffree
int3
inc
jl
cmp
xorb
movsb
xrelease
jge
xor
mov
loop
enter
fcoms
or
lock
mov
jnp
push
divb
mov
test
outsb
dec
jg
jg
mov
pop
jo
les
popa
xor
mov
xor
shll
jle
jg
mov
in
adc
xrelease
xchg
out
pop
add
adc
in
push
jne
or
and
jbe
mov
sub
addl
int
rclb
and
pop
xor
xchg
scas
sbb
icebp
stos
or
xor
jg
fwait
arpl
xor
ds
ret
divb
rorb
ss
test
into
xchg
bound
int3
mov
das
cmp
push
loope
xchg
ljmp
out
and
ljmp
and
addr16
nop
ret
inc
lret
fidivl
rep
lcall
aaa
cmp
cmpsb
nop
mov
sub
inc
popf
xor
mov
in
mov
cwtl
imul
xchg
outsb
loop
xchg
test
and
cli
mov
into
mov
pushf
fidivs
hlt
ljmp
data16
xchg
inc
mov
dec
mov
daa
dec
cmp
jecxz
out
mov
pop
or
mov
test
setle
sbb
sub
es
mov
decb
push
addb
dec
decb
pop
scas
mov
fcoml
mov
sub
cmc
out
mov
xrelease
movsb
imul
ljmp
or
in
repnz
outsb
cli
sub
addb
dec
ret
adc
sub
shl
cmp
outsl
sarb
out
mov
out
pop
cli
das
movsl
imul
or
and
dec
outsb
insb
aaa
ret
roll
pop
retw
inc
out
pop
and
sbb
adc
in
popa
add
xchg
inc
add
insl
inc
pop
int3
lahf
adc
inc
data16
out
adc
xchg
and
cmp
mov
aad
int
inc
xchg
stos
push
imul
or
popa
cmp
adc
mov
xor
jae
movsb
mov
sbb
xchg
dec
pop
and
or
or
into
fdivs
leave
rcll
or
orb
int3
mov
mov
xchg
cmp
and
mov
nop
loope
add
out
and
jge
push
outsl
mov
andb
sbb
ljmp
rorl
bound
cmp
mov
out
div
dec
inc
and
sbb
pop
in
out
cmc
inc
data16
mov
cmp
jae
jo
imul
cmp
jo
es
clc
and
xchg
cmp
data16
push
js
jle
int3
ljmp
scas
lods
lret
ss
sub
lea
inc
jmp
push
repnz
fldt
dec
ret
fs
adc
xchg
and
xor
push
mov
xor
push
mov
popf
xchg
mov
loope
dec
test
xor
cltd
das
inc
repnz
jl
inc
and
gs
mov
mov
sbb
sbb
lahf
bound
push
das
pop
push
lahf
pmulhw
xchg
or
and
cmp
lcall
push
jle
xchg
jp
loope
cltd
inc
cld
mov
push
shll
aas
inc
mov
xchg
pop
mov
repz
in
imul
cmp
aam
adc
mov
push
pop
scas
xchg
repz
mov
jnp
lret
cmp
xchg
mov
adc
and
inc
mov
call
dec
movb
out
lret
je
ror
js
mov
and
xchg
jns
sub
mov
lcall
les
fldcw
jbe
or
lock
cmp
pop
addr16
lock
pushf
add
idivb
sub
mulb
rorb
push
xchg
sub
gs
pop
scas
xchg
sub
mov
hlt
jg
xlat
add
add
cmp
push
add
mov
or
jmp
lea
sbb
clc
cmp
iret
mov
aad
mov
repz
xor
inc
mov
out
push
dec
inc
aam
mov
iret
mov
add
out
mov
cs
add
bnd
test
mov
cmpsl
aad
jb
lahf
jp
fwait
jg
xor
mov
cwtl
insl
pop
xchg
movsl
insl
fisubl
or
adc
movsb
inc
sar
mov
mov
xchg
adc
inc
or
repz
jns
mov
orb
aaa
imul
lock
sbb
dec
xchg
shrb
add
xor
mov
mov
mov
mov
xchg
jg
out
cmp
mov
pusha
jge
lret
cmp
sbb
and
sbb
sbb
adc
mov
xor
test
roll
lea
aaa
pop
pop
fwait
call
nop
popf
mov
sub
xor
mov
inc
sbb
idivb
test
cmp
and
inc
push
mov
add
out
or
leave
arpl
mov
lret
mov
fsubrl
jecxz
dec
cmpsl
into
jle
movl
loop
rclb
repnz
pop
dec
or
data16
xor
ficomps
std
frstor
push
adc
lcall
push
lret
sub
aaa
inc
push
arpl
mov
jmp
insb
sbb
cmp
mov
enter
xor
xor
fdivrs
xor
imul
pop
cmp
loopne
jb
cmpsl
jmp
pusha
sbbl
sbb
pop
adc
lret
aaa
stos
xchg
outsl
push
push
movsb
sar
mov
fs
insb
xor
dec
in
or
mov
pusha
test
or
aas
mov
jmp
flds
xchg
ficoml
fcoms
pop
sti
push
mov
mov
lods
mov
adc
mov
test
xorb
adc
or
in
push
sbb
inc
xchg
cmpsb
jne
or
roll
fisubrl
pop
sbb
and
mov
neg
sbb
movsb
push
adc
jae
cmp
and
mov
cmpsb
hlt
sbb
mov
test
and
xchg
jne
mov
add
cmp
add
sub
push
mul
and
pop
push
lods
or
addr16
pop
cltd
stos
scas
mov
ret
pop
mov
xchg
fwait
sub
outsl
mov
mov
cmp
lret
test
push
push
mov
or
stos
into
jo
sub
add
push
pop
sahf
pushf
gs
push
mov
pop
sti
andb
pop
dec
adc
ja
xchg
js
insl
inc
jg
jne
cld
mov
jnp
fisttpl
pop
icebp
daa
test
cli
inc
adc
jo
loopne
lock
fdivs
lret
inc
push
xchg
pop
sbb
subl
jge
aad
into
add
notb
repz
test
in
mov
pop
fcmovnb
das
cwtl
insl
push
sub
pop
ljmp
dec
incl
pop
push
and
pop
imul
jge
mov
lcall
fisubrs
fistl
out
jecxz
jle
jp
inc
xchg
fucomp
enter
dec
stos
sbbb
fisubrl
mov
shll
or
iret
jnp
bound
orb
adc
mov
aas
dec
inc
pop
pop
lahf
dec
sbb
mov
addr16
cmpsb
inc
jne
cmpsl
sbb
pop
mov
pop
pushf
sbb
in
jbe
adc
jle
xor
icebp
adc
sub
out
sbb
rclb
push
jb
cwtl
test
sbb
mov
xchg
ja
unpckhps
and
daa
jp
pop
pusha
pop
sysret
mov
jp
fadds
popf
test
bnd
in
pop
mov
cmp
dec
incb
xor
mov
mov
mov
pop
sti
daa
pop
jg
cmp
dec
or
mov
push
shll
ljmp
pusha
ja
bound
int3
pop
push
xchg
fiaddl
push
call
inc
push
repnz
jae
rol
stos
pop
jae
jbe
pushf
aas
insl
and
sub
jmp
imul
mov
push
fnstsw
pop
sbb
imul
mov
pop
fiadds
sbb
aam
stos
les
jmp
adc
jo
xchg
orb
or
mov
sbb
pusha
aas
loopne
sub
sti
mov
mov
dec
ret
rcpps
ret
and
popa
div
jns
cmp
jge
sbb
cmp
pop
in
test
stc
push
and
fwait
insb
jmp
jnp
clc
mov
iret
sahf
lea
dec
ret
mov
push
pop
mov
bound
lods
enter
add
dec
in
jmp
xlat
push
jp
cmp
cli
fwait
push
cmp
popa
mov
dec
pop
push
dec
push
mov
sti
cmp
or
sub
inc
xchg
lock
stos
xor
popf
add
add
mov
add
pop
push
xchg
pop
mov
sarb
add
jbe
xor
fcmovne
rcl
xor
ljmp
add
and
xlat
in
dec
mov
ljmp
jnp
fcmovnu
sub
out
mov
sbb
xchg
fbld
dec
lock
pop
cmpsl
in
sbb
jae
cmpsl
ficoms
adc
shl
jecxz
je
adcl
rcrl
fdivl
movsl
shl
sub
nop
stos
fmul
ret
test
or
or
in
xchg
pop
add
in
fwait
scas
sbb
mov
outsl
mov
repnz
or
jge
adc
lcall
icebp
mov
cmp
adc
lret
jns
fs
aad
push
outsb
dec
fidivl
sub
decb
xor
push
lods
push
sahf
divb
std
adc
mov
xchg
gs
xor
add
repz
mov
repnz
inc
jp
sbb
mov
in
mov
pop
popf
cmp
scas
mov
ss
mov
aaa
pop
shll
cli
jg
xlat
xor
test
xchg
aad
cli
jo
fstpl
dec
adc
sbb
into
insb
test
dec
fsubs
icebp
ret
jae
mov
hlt
inc
inc
cmp
divl
jae
add
cs
inc
jle
bound
les
and
inc
lods
cmpsl
cmc
test
jl
cmp
mov
mov
insl
dec
scas
movsb
mov
lods
hlt
mov
cmp
hlt
and
lods
dec
std
lahf
and
aam
clc
xchg
fcom
sbb
mov
popf
lds
je
xor
testb
test
test
outsb
pusha
or
sbb
inc
mov
adc
aad
adc
cltd
pop
fwait
sub
xchg
or
add
push
add
dec
insb
mov
sbb
addr16
in
lock
out
jge
push
mov
insl
xor
into
aad
cmpl
push
out
out
mov
mov
int3
int3
roll
fisubs
jb
mov
mov
aad
mov
pop
repz
sbb
cmp
jp
in
mov
outsb
jmp
shrb
jg
daa
gs
sahf
add
xchg
in
xchg
pop
or
jb
rolb
ffree
mov
xchg
lds
movsl
sarl
arpl
mov
dec
cmp
mov
leave
enter
inc
jp
adc
insb
dec
sahf
rcrb
pop
jle
mov
jmp
scas
lea
mov
sub
adc
push
out
lods
shll
jle
cwtl
mov
cltd
fwait
in
popf
mov
mov
stc
and
into
mov
dec
jbe
mov
lods
mov
or
inc
xchg
pusha
stos
dec
sub
cmpsl
jl
data16
out
mov
inc
pop
mov
loop
aas
and
inc
adc
cmp
mov
pop
and
xor
xchg
push
fidivs
not
ret
dec
push
mov
mov
mov
xchg
loopne
clc
es
jl
and
sahf
addr16
je
outsb
aaa
outsl
pop
fbstp
jge
mov
jmp
shll
std
lret
clc
test
mov
or
aam
mov
test
dec
sbb
pop
cld
aam
or
adc
js
in
lret
adc
jmp
push
popf
dec
fstpl
lret
out
mov
das
icebp
xlat
mov
and
push
mov
xorl
bound
sarl
mov
adc
cld
cmp
xchg
dec
add
sub
cs
push
sub
and
jecxz
jg
stc
mov
sbb
les
sar
xor
imul
inc
pop
fisubrs
inc
pop
les
outsb
jp
xlat
xchg
test
mov
xchg
mov
push
shll
add
lret
data16
xchg
repz
inc
mov
xorl
aas
outsb
loopne
scas
cmp
shrb
loopne
vsqrtss
xchg
shl
es
decb
sbb
adc
push
aam
pop
cld
fimuls
mov
nop
int
dec
psrad
outsl
stos
dec
mov
add
jne
cmp
sub
mov
sub
dec
add
add
jp
jnp
mov
addr16
mov
and
mov
ret
arpl
sahf
mov
jae
ja
loopne
lret
das
imul
fldt
inc
push
mov
notl
push
inc
lods
cmp
xor
in
mov
cmc
mov
pop
xor
in
cmpsb
ljmp
ret
rcrb
push
mov
sbb
dec
mov
cmpsb
cld
xchg
roll
pop
pop
and
divb
jp
jmp
push
js
and
dec
sbb
roll
sub
daa
cmovae
push
mov
inc
dec
push
push
flds
clc
sbb
insb
popl
and
sarb
cmc
mov
pop
js
les
outsl
cmp
and
mov
cli
push
xchg
pop
cmp
jns
adc
loope
push
insl
sbb
mov
fstpl
popa
jne
sahf
mov
repnz
lods
call
mov
mov
inc
mov
sbb
int3
in
cmp
jmp
mov
cmpsl
test
sub
popa
dec
idivl
and
mov
icebp
xor
leave
out
jl
mov
daa
loopne
cltd
jb
test
cmp
cmpsl
jbe
das
lea
or
testb
lock
mov
out
xor
add
inc
icebp
xchg
incl
rclb
pop
std
jbe
mov
inc
loope
sub
pop
cmp
push
fs
repnz
rcrl
mov
sbb
mov
dec
dec
add
in
push
pop
mov
scas
and
push
nop
outsl
outsl
cmpsl
loopne
lods
or
xor
fnsave
arpl
xor
sti
ss
ss
add
push
dec
lret
test
dec
mov
loope
jmp
mov
inc
iret
push
mov
int
mov
loop
filds
cmpsl
hlt
inc
out
sub
and
mov
mov
adc
dec
test
jb
pop
fcomip
pop
xlat
mov
and
hlt
outsl
lock
ret
pop
cld
add
out
movsl
cmp
pop
pop
push
out
mov
xlat
icebp
test
cmp
loop
popf
cltd
in
pop
cli
sub
lods
jle
add
lahf
fldenv
lret
mov
sbbb
test
mov
adc
dec
push
js
and
ss
add
jge
mov
loopne
xor
xchg
adc
fisubrs
popf
leave
mov
lds
sahf
push
sahf
push
lods
sar
sub
xchg
stos
xlat
fcomps
sub
lahf
dec
ljmp
pop
lret
xor
dec
insl
jo
inc
and
loopne
dec
push
decb
in
jne
ret
pop
jo
jecxz
mov
jnp
iret
rcrb
sbb
outsl
pushf
adc
movsb
inc
pop
sub
add
inc
loop
and
inc
pop
repz
jge
pop
mov
stc
adc
movsl
xchg
stos
dec
inc
cmpsl
ss
insb
jg
into
dec
mov
imul
push
dec
pushf
loop
mov
hlt
les
mov
pop
ret
pop
pop
xor
pusha
lret
sub
cmc
mov
jecxz
cmp
inc
imul
jae
push
pop
mov
mov
pop
add
and
stos
cwtl
cmp
add
jg
test
mov
scas
stc
and
add
shlb
push
mov
test
leave
movsb
lret
cmp
adc
sub
int
lds
rorl
fcmovne
adc
mov
xchg
inc
dec
leave
mov
cmovle
test
or
pushf
cmp
inc
push
aaa
in
flds
mov
imul
aas
xor
inc
lods
jbe
or
pushf
pop
fcoml
nop
pusha
jp
out
outsl
cmp
in
dec
push
imul
mov
faddl
pop
idivb
imul
movsl
xchg
adc
leave
pop
js
sti
push
cmpsb
mov
mov
or
aad
cld
mov
out
cltd
int3
inc
pop
ljmp
insb
and
fdivs
dec
insb
loop
add
stc
mov
sti
xor
cli
sbb
cli
aas
decb
mov
nop
ret
and
lock
sub
stos
jg
les
cmp
js
aam
in
xchg
fwait
mov
imul
cli
sub
and
xchg
jecxz
inc
roll
mov
jae
mov
frstor
and
mov
push
rclb
pop
jmp
or
lret
pusha
cmp
shl
and
xchg
sbb
or
push
lahf
frstor
rorb
mov
cmp
mov
lods
jae
or
rcll
inc
and
movsb
dec
out
shl
mov
fdivrl
jnp
pop
fiadds
fisttps
pusha
in
loope
into
arpl
repz
cli
mov
jae
dec
jge
int
dec
hlt
xor
fadd
es
fcoms
or
sbb
push
scas
lds
ss
movsl
sti
ds
cld
mov
mov
les
xchg
inc
inc
mov
ret
add
insb
adc
fsubs
add
shr
xorb
add
cmpl
dec
dec
add
dec
ljmp
jbe
hlt
sbb
jbe
mov
cmpsb
jb
cmp
aaa
xchg
imull
cmp
lea
lret
imul
cmpsb
sbb
jo
mov
cmpsb
jmp
jbe
lock
or
sub
xor
sti
inc
es
dec
mov
out
ds
mov
lods
addl
jp
sub
je
cld
xchg
je
sbb
sahf
mov
int3
pop
jl
movsl
addr16
dec
insl
das
add
fst
pop
ret
push
and
push
ljmp
cmp
mov
fidivrs
into
mov
movsl
xchg
paddusb
sub
addl
ret
sbb
or
fbld
hlt
outsb
cmp
xchg
pop
ds
clc
push
dec
push
mov
fistps
ds
popa
sub
sbb
sbbb
es
jg
into
inc
jbe
jecxz
clc
push
mov
sbb
xor
pop
aas
lock
stc
pop
loopne
stc
cmp
test
sub
xchg
adc
rol
test
or
sub
jb
mov
xchg
add
and
inc
test
inc
xchg
outsl
call
adc
and
jbe
std
dec
mov
lea
lds
pop
inc
fimuls
jmp
iret
mov
push
pop
repz
test
aam
pop
loop
and
mov
mov
adc
lahf
negb
push
imull
xor
cltd
fnstcw
adc
pop
insl
cmp
fiadds
outsb
xlat
int
sbb
mov
sti
hlt
stos
and
mov
xchg
sahf
fs
shlb
stc
mov
imul
aam
inc
xchg
scas
jnp
pushf
sbb
sub
aas
repnz
in
xchg
inc
adc
out
sbb
pop
mov
cld
les
push
cmovbe
inc
xchg
testb
ret
add
pop
ja
iret
mov
outsb
and
and
sub
pop
or
mov
sub
popa
mov
pop
int3
jnp
pop
jle
push
out
imul
push
cmc
jecxz
das
lock
or
cmpsl
mov
mov
scas
les
dec
nop
push
dec
outsl
ret
mov
jp
push
shll
mov
push
out
cmp
mov
adc
jle
lcall
push
and
fnstsw
dec
jne
popa
test
ret
sbb
or
cmp
out
mov
hlt
adc
jg
ss
int3
jmp
and
ljmp
pop
das
shll
flds
sbb
pop
and
int
push
cmpsl
xchg
sub
ds
and
pushf
and
and
sahf
movsl
pop
movsb
loop
add
in
pop
pop
popa
lock
lea
clc
fidivl
cmpsl
lock
mov
lods
repnz
imul
notb
xlat
lea
dec
pop
popa
sub
adc
dec
sub
sub
pop
aam
sbb
or
out
jg,pt
cld
les
outsl
push
pop
adc
adc
cmp
outsl
add
int3
push
leave
movsl
loopne
in
fwait
subb
ss
andl
mov
outsb
shlb
arpl
mov
and
into
fistl
mov
inc
add
shrb
test
push
pop
fists
inc
arpl
mov
loopne
repnz
mov
cmp
mov
addl
jb
leavew
std
loope
mov
cmpsl
insl
cmp
xchg
js
jle
mov
cmp
insb
mov
es
push
adc
sbb
fwait
ret
adc
cmpl
push
or
outsl
nop
std
subl
mov
les
lds
fisttps
mov
negl
mov
mov
shll
and
cwtl
inc
jo
and
fs
sub
mov
fcomps
leave
mov
mov
lcall
cmpsl
push
xchg
popa
aas
xor
or
sub
mov
daa
into
call
sub
dec
mov
xor
dec
rcrb
aas
cmpsb
xor
push
mov
sarb
in
out
scas
fnstcw
int3
and
mov
stos
repnz
addr16
add
mov
mov
mov
je
scas
adc
inc
stc
repz
pushf
dec
in
popa
xor
insb
jb
pushf
xchg
ja
orb
lret
cmpsb
popf
xchg
rorl
cmp
cmp
or
arpl
call
mov
ss
outsl
and
sbb
push
pop
stc
mov
fsubr
fcoml
adc
sub
cmpsb
mov
paddb
push
faddl
pop
mov
insb
cmp
xor
loop
jmp
aam
push
cmp
in
add
clc
mov
jne
or
cli
sahf
sbb
xchg
xor
insb
scas
mov
or
out
xor
xor
arpl
idivl
push
sub
mov
and
xchg
xor
push
sbb
push
insb
sub
mov
inc
jg
ficompl
sub
aad
cmp
mov
push
adc
lea
inc
popa
pushf
dec
aam
in
int3
dec
ret
sub
adc
jbe
xchg
dec
lea
call
push
jecxz
fs
xor
sub
pusha
adc
xor
mov
shl
repz
fcmovnbe
sub
and
pop
lret
icebp
jge
testl
xchg
sub
push
mov
enter
stc
icebp
jle
cmp
in
scas
xor
push
popa
std
imul
sbb
fwait
mov
mov
jmp
xchg
out
movsl
orl
jecxz
mov
push
sub
jle
cmp
out
rolb
mov
out
je
aam
dec
fisubrl
push
push
pop
cli
jp
incb
ret
dec
or
fcmovnb
dec
xchg
rolb
jle
or
xor
and
or
into
or
lret
dec
xchg
dec
dec
xchg
push
jbe
bound
jns
xchg
addr16
pop
dec
mov
aaa
addr16
jnp
cmpsl
ja
data16
sbb
das
imul
lea
jmp
cmp
int3
imul
cmp
rcrl
cltd
pop
ljmp
rcl
std
popf
cmp
inc
mov
lea
mov
cltd
fcomip
xchg
mov
cltd
arpl
test
lea
inc
lret
mov
jne
sbb
xor
insl
out
rorb
into
outsb
pop
mov
cltd
outsb
jmp
push
xlat
mov
bsr
inc
shrb
subl
pop
adc
and
xchg
xchg
adc
mov
mov
iret
mov
ljmp
fmull
xor
and
adc
mov
mov
jmp
iret
cld
cmpb
rolb
xchg
lcall
aas
inc
addr16
xor
jnp
jbe
imul
imul
adc
inc
push
in
int
dec
mov
test
mov
or
adc
mov
mov
sub
imull
nop
sub
outsb
in
inc
rclb
stc
es
mov
adc
pop
pop
js
inc
cmp
mov
xchg
mov
popf
test
stos
test
fsubrs
jne
sbb
adc
xchg
adc
pop
iret
or
aas
push
add
lock
test
into
insl
dec
mov
cmpl
nop
popf
inc
pop
jg
insl
sbb
shl
rol
insb
in
or
add
pushf
cmp
scas
lret
mov
add
dec
cmp
jp
sahf
sub
cmpl
daa
popa
roll
cmp
out
and
sti
ljmp
dec
dec
stos
and
xchg
xor
jle
adc
mov
and
arpl
xor
fisubs
add
mov
out
and
mov
adc
imul
popa
or
call
mov
dec
cwtl
shl
lods
and
push
repnz
fisubl
fcoms
inc
mov
pop
sub
icebp
leave
cmpsb
cmp
xchg
mov
cmc
jp
and
mov
xor
nop
popf
ja
stos
das
ja
loope
push
je
fs
pushf
jb
dec
or
push
sti
inc
bound
sub
daa
leave
out
sbbb
dec
cld
aam
and
call
pop
add
mov
xchg
call
lret
jg
jg
enter
stc
xor
add
or
dec
add
add
sti
leave
adc
and
imul
jb
xor
mov
lret
jmp
push
stos
leave
pop
clc
xchg
int3
lds
aas
stos
lahf
mov
packsswb
scas
mov
nop
out
jle
icebp
jnp
or
mov
mov
fisubrs
push
and
ret
int3
pop
jmp
imul
stos
div
xor
popf
lea
shr
lcall
pop
cmpsl
xchg
push
ret
cwtl
pop
fstpt
inc
enter
push
aas
cmc
repz
into
pop
test
push
data16
add
inc
inc
stos
hlt
clc
negb
jmp
out
in
and
sbb
pop
mov
mov
in
repz
push
xchg
jmp
ds
jae
inc
imul
mov
fwait
test
cmpsl
pop
jnp
jmp
dec
sahf
mov
xchg
pop
and
sti
sub
outsb
outsl
cmpsl
push
mov
leave
dec
and
xchg
testb
aas
push
bound
push
push
cmc
mov
dec
push
sbb
jp
cmp
lods
mov
aam
inc
mov
inc
sbb
pop
pop
adc
negb
add
in
in
or
cmp
je
push
and
scas
jne
int3
ss
sub
mov
out
gs
out
sub
test
pand
pusha
add
out
cmp
lods
stos
insl
int
jo
pop
aam
inc
jle
pusha
add
loop
mov
pushf
stc
inc
daa
push
sub
and
les
addr16
int3
and
paddw
push
pop
push
mov
mov
add
jl
cmp
popf
jno
sar
cs
adc
mov
test
les
mov
or
loop
fcmovbe
push
mov
nop
lret
cmp
aaa
bound
cwtl
lods
or
loopne
jnp
mov
jg
scas
sbb
notl
scas
or
cli
xor
outsb
jo
sbb
es
out
sbb
add
test
ljmp
inc
fbld
insl
ljmp
mov
xchg
fists
out
mov
push
xor
ss
movsl
or
jmp
pop
adc
clc
sub
sub
out
lcall
adc
aaa
push
je
xchg
lods
xchg
dec
sbb
mov
jns
xchg
movsb
in
pop
outsb
xor
insb
jle
mov
sahf
add
and
xchg
push
add
jmp
stc
dec
loopne
cmp
cmpl
inc
stc
int3
xchg
jb
rcrb
clc
sti
pop
popa
mov
push
subb
or
daa
iret
test
pop
stos
inc
shll
rorl
xor
mov
dec
in
or
jae
push
cmp
cli
push
lock
stos
mov
daa
pop
rcll
ss
es
pop
xor
orl
or
push
hlt
out
mov
clc
pop
push
mov
push
and
jb
jne
call
pop
or
sub
xchg
cmp
cs
aam
pop
mov
xor
call
fwait
cmpsb
sub
xor
sbb
xlat
pop
out
and
pop
mov
add
lods
xor
sbb
lea
dec
into
mov
xchg
sbb
jne
jns
sub
adc
bound
lods
into
push
jb
insb
pop
aas
push
loopne
aaa
jbe
xchg
sbb
jl
call
mov
fwait
mov
mov
jo
mov
icebp
ds
out
add
sub
pop
data16
in
ja
testl
jne
daa
in
mov
jl
push
xchg
pop
cli
jb
rorb
xchg
sbb
add
loopne
adc
sbb
adc
xchg
mov
fdivp
jge
inc
leave
push
jmp
stos
pop
hlt
xchg
scas
inc
fwait
add
add
cltd
gs
lret
hlt
int
cmpsb
or
push
jo
xor
fnstcw
mov
mov
lods
xchg
cmp
xor
and
jae
mov
sbb
lock
inc
dec
jns
mov
add
dec
mov
mov
cmp
imul
stc
jo
stos
lods
jmp
lahf
fidivl
lods
testb
mov
sbb
inc
lcall
adc
call
ds
push
inc
mov
in
aam
xchg
rorb
fs
or
mov
fistpll
cmpsl
fadds
pop
pop
cmc
daa
hlt
loopne
sub
das
sti
lock
aas
mov
movsb
subl
inc
testl
cmp
sub
lods
cmp
icebp
insl
fadds
mov
lock
sbb
pusha
jb
sub
gs
lret
xor
daa
cmpsl
xor
jo
push
jb
aam
fdivl
outsl
lret
ret
dec
push
shlb
aas
jle
mov
sbb
shlb
aas
call
cmpsl
xchg
inc
mov
xchg
cltd
jp
cmpb
push
mov
shll
xor
xchg
push
nop
enter
add
xchg
push
pop
push
push
pop
bnd
sbb
out
cmp
rol
ret
inc
icebp
pushf
inc
mov
mov
div
out
mov
test
test
or
test
shlb
clc
xor
fwait
lcall
adc
and
and
test
dec
fisubl
cs
repnz
ret
inc
adcb
jle
sub
repz
cmc
sbb
or
inc
mov
test
out
push
data16
and
fwait
jmp
sbb
ds
movsl
xlat
mov
xor
inc
aaa
jl
dec
adcl
lcall
jg
fdivrs
xchg
dec
iret
cmp
push
and
sbb
add
xchg
daa
ret
mov
jge
mov
inc
es
and
in
mov
icebp
or
push
gs
lock
aas
mov
loope
mov
push
pop
xchg
cs
icebp
mov
inc
leave
call
lcall
push
push
adcl
adcb
mov
insl
jle
imul
fsts
jnp
roll
arpl
mov
mov
roll
pop
pop
dec
cmc
jne
in
movsl
cmp
icebp
daa
leave
clc
cmp
scas
sub
cltd
cli
ss
popa
xchg
sub
in
sqrtps
dec
or
cmpsl
mov
bnd
cmpl
daa
sub
add
or
nop
push
movsl
and
ret
mov
mov
dec
cmp
jno
fucom
js
lock
mov
cmp
lea
or
cmpsl
mov
push
jo
subb
jl
add
sub
adc
push
xor
pop
add
jmp
cwtl
and
mov
sub
ret
sbb
lcall
add
jmp
lods
stos
jmp
lds
lcall
and
dec
pop
xchg
cwtl
inc
sub
xorb
mov
je
jl
inc
sub
je
jge
outsl
test
dec
aaa
cmp
notl
xor
js
rcrb
jg
popf
add
adc
pop
scas
adc
jecxz
gs
push
loopne
mov
loopne
dec
inc
add
imul
xchg
loope
xlat
mov
xor
jmp
popa
mov
mov
sahf
xchg
pop
in
xchg
shl
in
cmp
outsl
mov
jecxz
push
jbe
and
and
pushf
xchg
inc
shll
lahf
sbb
inc
fcmovne
in
push
dec
lcall
cmp
or
inc
inc
pop
das
out
adc
mov
aam
cmp
dec
add
mov
leave
inc
repnz
pusha
idivl
jmp
jmp
and
int
xor
push
test
inc
cmc
ds
nop
jnp
loop
jp
int
repz
push
imull
pop
das
test
into
imul
inc
sub
stos
insb
aam
add
sbb
cmc
and
mov
das
mov
sub
fisubrs
adc
pop
in
insl
lret
xchg
push
lret
mov
jge
rclb
mov
mov
rcrl
out
jb
cwtl
lods
inc
jg
cld
or
or
sub
nop
xchg
mov
out
outsl
mov
mov
pop
adc
repnz
popf
mov
dec
xchg
dec
cmp
pop
dec
inc
sti
aam
mov
push
aam
int3
mov
dec
sbb
insl
pop
out
mov
pop
dec
cltd
pusha
xchg
xor
out
sahf
and
jae
ret
xor
pop
and
dec
in
dec
mov
repnz
lcall
add
movsl
cmpsl
ret
rcr
mov
mov
add
hlt
sbb
fstpt
sub
or
push
popf
lahf
cmp
out
insb
and
jle
les
repz
test
xor
arpl
add
rcl
mov
divb
add
test
ret
bound
fldt
or
out
cmp
pop
inc
and
sarl
nop
in
adc
xorl
pop
cwtl
dec
or
pop
cmc
shll
hlt
xchg
pop
xchg
sub
dec
mov
mov
iret
shr
pop
add
lret
bound
jne
push
jp,pn
sub
mov
fstl
xor
xor
addr16
add
xchg
bound
xor
xchg
xchg
hlt
rorb
push
sbb
jb
cmp
sbb
sub
adc
xchg
enter
sarl
xor
and
cmp
nop
dec
rol
dec
fsts
or
cltd
imul
aad
aam
inc
xchg
sbb
or
cmc
mov
out
push
xchg
pop
aad
repnz
pop
add
test
loope
and
inc
xchg
inc
popf
push
ja
push
sti
call
pop
sbb
dec
mov
mov
xchg
dec
xchg
shrb
inc
outsl
enter
les
mov
dec
or
add
cmp
push
push
mov
inc
shrb
daa
outsl
scas
imull
lret
inc
inc
cmc
mov
or
jecxz
in
or
aas
mov
das
leave
lcall
push
xchg
mov
scas
or
roll
sub
leave
ds
cmc
lret
and
inc
push
or
ficompl
shll
repz
mov
shlb
out
pop
jbe
mov
adc
test
sub
xchg
shlb
das
and
insb
enter
cmpsb
in
negl
lahf
sahf
jg
dec
or
jno
outsl
pusha
js
pop
fisttpll
repz
lret
push
fucomip
psrlw
leave
stos
dec
cmc
test
imul
xor
xchg
repz
and
sbb
enter
hlt
pop
popf
cs
shl
insl
cmp
mov
add
xor
cmp
dec
call
mov
jmp
pop
and
stc
jns
js
jae
xor
adc
pop
ret
std
cltd
std
test
or
pop
mov
mov
jb
clc
pushf
pop
jle
xor
pop
sub
dec
roll
inc
jmp
ss
xchg
sub
test
mov
pop
lret
push
icebp
sub
xor
mov
pop
dec
mov
push
aas
orl
cwtl
pop
insl
mov
pop
jmp
dec
xor
jb
mov
movsb
cmp
sbb
mov
gs
xadd
fs
mov
cmpsb
dec
inc
jp
outsl
add
cmp
mov
xchg
jo
inc
lods
and
mov
ficomps
sub
rcl
pushf
cli
mov
xchg
pop
lea
jnp
out
loop
stc
lret
adc
jg
pushf
repz
out
imulb
cmpl
xchg
and
subl
xlat
lcall
or
fistl
loope
sti
jmp
push
xlat
pop
adc
xchg
add
sbb
std
pusha
xchg
pusha
fs
imul
push
js
sti
insb
mov
xchg
imul
popa
push
push
sbb
ja
test
sbb
cwtl
scas
scas
or
push
testb
in
rcrb
jns
and
pop
mov
mov
pusha
mov
ja
adc
daa
insl
mov
xchg
hlt
pop
gs
sub
movsb
cwtl
push
pop
sarb
test
xor
sbb
gs
clc
cld
rclb
cmp
push
xor
popa
cmp
push
int3
inc
sub
cmp
xlat
in
out
pop
int
subl
jno
js
mov
sbb
sub
jne
mov
add
cmp
pushf
popa
fnstsw
fs
ds
test
ss
das
fiaddl
mov
lods
xchg
jmp
fimuls
inc
inc
and
mov
loop
mov
stos
mov
out
sub
cmp
add
push
cld
mov
rcrl
inc
hlt
sahf
xchg
ja
push
fldcw
imul
pop
rcrl
or
xchg
dec
popf
mov
jnp
fld
addb
cmp
ds
pushf
mov
cmp
lret
xchg
xchg
inc
sbb
adc
add
testl
mov
out
mov
les
in
outsl
dec
and
test
icebp
stos
movl
mov
pop
flds
adc
gs
ljmp
lcall
fildll
jle
cmc
bound
or
sbb
dec
lock
xlat
push
js
ret
add
shll
adc
mov
adc
imul
push
push
push
insb
shl
ret
mov
adc
lret
sti
sarl
and
aad
inc
mov
pop
push
bound
mov
call
lea
sub
aad
mov
push
in
xor
xor
sub
pop
inc
cld
and
add
inc
add
lea
aas
out
add
adc
add
sbb
pusha
and
sti
sbb
call
or
lahf
mov
mov
andl
aaa
lods
xchg
clc
sbb
js
outsb
jl
les
mov
ja
adc
outsb
inc
outsb
sbb
in
test
mov
jne
cmp
jge
sub
out
fs
movsl
mov
jns
scas
mov
cmp
loop
fnstsw
inc
test
flds
out
dec
pushf
insl
insl
xchg
arpl
cmp
rorl
and
in
lods
arpl
inc
push
cmpsl
jmp
out
add
mov
xchg
lea
dec
shr
dec
test
and
aaa
jp
stc
cmpb
fs
cmp
mov
sub
jae
pop
xchg
mov
xchg
mov
add
pop
mov
push
das
fwait
dec
cmp
insl
ss
dec
notl
rorb
jno
jg
mov
xor
push
lret
mov
sub
cmp
xchg
sahf
and
or
scas
faddl
call
mov
scas
mov
sbb
cmp
fnsave
adc
in
pcmpeqw
xchg
inc
fisubl
test
icebp
loop
scas
fdivrs
add
scas
cmp
adc
add
adc
inc
push
add
jecxz
rcrb
adc
das
mov
in
stc
add
nop
out
pop
mov
add
out
xchg
fimull
push
mov
push
xchg
xchg
shll
addb
pop
sbb
aas
pop
dec
sbb
cmp
test
icebp
push
or
sub
push
nop
fimuls
or
dec
push
fists
paddq
nop
insl
ror
add
adc
pop
fidivs
jl
in
pusha
cs
and
mov
push
lcall
gs
imul
xchg
fiaddl
in
aaa
int
xlat
pop
sbb
or
das
pop
imul
xchg
sti
ret
repnz
negb
sub
call
es
and
out
cmp
mov
lcall
xchg
push
cmpsl
sub
out
pop
mov
or
jo
mov
and
sub
icebp
cmp
shrb
sub
pop
pop
lock
test
dec
popf
mov
mov
scas
cmp
cmpsb
mov
enter
ja
inc
push
push
mov
jmp
pop
repz
cmc
ret
push
aaa
pop
dec
cli
xchg
test
pop
sbb
popa
sub
mov
mov
jo
xchg
out
pop
cmpsb
js
aaa
jae
push
cmp
cli
add
push
dec
popa
insb
xor
insb
dec
push
add
arpl
negb
clc
xchg
fsts
dec
adc
insb
cmp
mov
ljmp
inc
jne
lods
enter
ret
jg
inc
cwtl
inc
inc
pop
mov
add
pop
sbb
fildl
shrb
push
push
decb
adc
pushf
jmp
sub
xchg
push
inc
and
out
fs
loop
aas
lds
inc
out
jns
sbb
xchg
inc
xchg
dec
daa
cmp
or
sti
mov
add
mov
arpl
cmpsl
jle
push
inc
mov
mov
or
cmp
stc
test
or
test
dec
xor
push
cmpsb
insb
pop
push
xor
out
sub
adc
and
cmp
les
adc
xchg
jp
fwait
jmp
fdivl
subb
pushf
jne
out
fs
cmc
fwait
enter
xor
cmpsl
cmp
push
xchg
jb
push
pop
inc
mov
xorb
mov
imul
les
leave
pop
daa
daa
jnp
int3
push
add
and
xchg
mov
jmp
icebp
ljmp
cmp
imul
cld
mov
jo
lods
sbb
pop
jmp
pop
fwait
dec
les
inc
cltd
pushf
stos
stc
subb
push
bound
mov
push
sub
xor
imul
in
mov
je
fwait
icebp
cs
push
jae
sti
shrb
mov
call
int3
movsl
add
cltd
jmp
mov
xor
fcom
push
xor
or
xchg
push
aad
fcompl
push
add
pop
fbstp
mov
cmp
cmp
pop
lock
mov
repnz
sti
mov
push
sub
hlt
or
insb
bound
sar
rcll
push
xchg
cmp
loop
push
pop
movsb
pop
rorl
enter
mov
popf
test
mov
jecxz
inc
aad
rclb
out
insb
mov
scas
enter
jne
inc
jg
insl
or
cmc
lcall
jmp
enter
or
mov
movsl
ja
mov
push
imul
mov
jg
test
fimuls
pop
popf
adc
sbb
fcomip
es
cld
mov
inc
arpl
icebp
push
xor
lret
or
lret
in
orb
jb
mov
icebp
cmp
xor
test
fisubrs
xchg
fcomps
jo
pop
movsl
inc
fmuls
or
mov
pop
and
loope
xor
push
fidivs
and
rclb
cld
pop
shrb
int
test
xor
jbe
push
iret
or
out
mov
inc
dec
stc
scas
cmpsl
or
test
and
and
stc
ret
inc
lods
push
lahf
sbb
int3
jl
jg
in
icebp
mov
scas
mov
jmp
nop
adc
mov
scas
pop
std
push
mov
mov
and
push
scas
mov
sbb
int
sbb
push
jb
rorl
fidivrs
cmc
adc
nop
xor
call
gs
stos
push
shl
xchg
mov
sub
out
add
pop
cld
adcl
lods
imul
xchg
sbb
xchg
aam
inc
fnsave
pop
mov
adc
shrb
imul
dec
and
clc
xchg
shlb
cmp
inc
jns
xchg
xchg
nopl
cmc
int
loop
rcl
inc
adc
ret
mov
pop
test
outsl
dec
ja
or
xchg
stos
xorl
push
pushf
lahf
cltd
dec
gs
xor
cwtl
xor
and
test
lea
andb
incb
push
repz
pop
adc
mov
jp
inc
nop
pop
xchg
inc
jno
lock
lods
enter
repz
test
cmp
jo
sar
adc
icebp
ror
adcb
cmp
or
jbe
jecxz
enter
xchg
loopne
mov
pop
call
and
and
dec
push
out
jle
add
inc
and
pop
mov
add
cmpsb
add
imul
sub
int
lret
xor
shlb
call
sbb
ds
dec
push
test
popa
mov
mov
jp
inc
push
repz
cmp
mov
xor
cmp
cld
jg
sub
xlat
leave
xchg
xor
pop
fwait
insl
or
inc
adc
aam
dec
pushf
fisttpll
xchg
fidivl
popf
or
fbld
push
repnz
fimull
lods
add
xorb
cli
bound
cs
xchg
xchg
xor
dec
push
mov
inc
lcall
nop
push
call
jle
divb
mov
add
push
inc
lret
xlat
add
xor
mov
in
add
sub
icebp
sub
pop
js
mov
add
std
add
adc
jp
stos
lret
push
nop
cmp
xor
inc
push
inc
add
jge
out
mov
pop
inc
lea
lret
loop
inc
inc
test
insb
add
aas
xchg
sti
mov
dec
push
popa
mov
outsl
js
inc
mov
push
inc
adc
repz
pushf
arpl
int3
pop
sahf
rorl
xchg
pop
pop
fisttpl
cmp
scas
shll
xchg
fimull
lods
hlt
fmull
mov
aad
mov
xchg
jmp
cmpsb
in
fsubs
push
xchg
mov
fisttpl
daa
int3
pop
ficoms
popf
cmpsl
adc
cmp
cmp
push
fadds
cmp
lret
in
sbb
imul
push
inc
orb
repz
mov
ret
mov
testl
push
pop
scas
pop
shll
fsubrs
xchg
scas
jae
mov
shlb
cmovbe
fstpl
add
xchg
mov
les
pop
fnstsw
mov
push
fadds
xlat
cltd
pushf
int3
lock
push
pusha
add
aaa
imul
mov
sbb
mov
sbb
jecxz
lret
inc
mov
lods
loope
push
out
fldl
stc
repnz
inc
mov
or
add
jge
test
shlb
sbb
sbb
xchg
xorl
mov
idiv
ja
aas
jmp
push
cmp
fadds
mov
imul
adc
sub
cmpsb
clc
xchg
imul
aad
pushf
iret
out
xchg
inc
and
cmpsb
ja
sbb
sub
inc
or
rcrl
add
dec
sub
push
jb
add
cmp
lcall
pusha
ret
enter
push
shll
jg
data16
cmp
inc
popf
fisttpl
sbb
push
fcoml
mov
fwait
jle
loope
jne
lret
push
inc
jg
mov
inc
mov
pop
xchg
or
in
cwtl
jne
mov
xchg
and
pushf
xorb
cld
cmp
inc
imul
aas
sbb
xchg
rsqrtps
xchg
and
std
inc
repz
xchg
lock
das
negl
jae
int3
test
inc
into
mov
mov
ss
xchg
jecxz
pop
mov
icebp
mov
push
cmp
ficompl
cmp
cs
addr16
add
xchg
xchg
inc
fcoml
aad
sub
or
ret
inc
jno
jle
out
push
pop
arpl
xor
decl
lret
das
adc
mov
fs
jecxz
out
rorl
fwait
out
inc
jecxz
and
xchg
push
xchg
rcll
bound
push
pop
push
negb
icebp
sub
jl
popa
fwait
xchg
arpl
pushf
inc
out
aas
pop
and
fucomi
xor
sub
adc
mov
fsubl
dec
aad
mov
call
push
mov
dec
mov
xchg
pop
lods
or
sbb
add
jbe
pusha
sub
adc
mov
iret
push
xor
mov
and
cmp
mov
jo
cmp
daa
adc
adc
idivb
sub
add
push
dec
jmp
imull
add
jnp
adc
sahf
lahf
add
mov
ljmp
mov
lds
insb
hlt
fwait
inc
das
mov
jbe
ja
fidivrl
stc
shr
fcmovne
scas
cmp
xchg
mov
jge
fcoml
inc
cmc
cmp
int
sub
cld
inc
pop
xor
xchg
clc
das
xchg
mov
xchg
xlat
xor
lahf
lods
inc
inc
xlat
mov
xchg
stos
push
dec
mov
sbb
jb
xchg
mov
xchg
testl
adc
xor
pop
addb
cmc
sub
cmp
test
jbe
jo
cmp
sbb
aaa
inc
and
mov
loopne
sub
jnp
add
sub
icebp
xchg
out
lret
cmpsl
xchg
mov
dec
cwtl
xchg
mov
push
inc
mov
adc
cwtl
lods
or
scas
dec
out
test
xchg
lret
mov
cmp
js
mov
pop
mov
dec
and
outsb
aam
xor
popf
jg
sub
out
lds
imul
push
insl
pop
cmp
sbb
cmp
xchg
frstor
sbb
or
inc
cmpsb
hlt
imul
popf
ljmp
dec
add
mov
orl
decb
and
dec
sub
sbb
scas
mov
daa
es
cli
dec
mov
push
les
stos
bound
sbbb
push
rcrl
dec
ljmp
xor
neg
sarl
enter
out
je
fisttpll
mov
or
cwtl
fistps
daa
pop
sti
roll
and
mov
in
inc
jmp
scas
aaa
cmp
cmp
xchg
dec
idivb
mov
jl
rolb
push
xor
rol
aad
cwtl
pusha
jge
jg
add
cmpsl
shlb
or
or
adc
or
adc
pop
push
mov
das
add
lock
repz
scas
pop
mov
jno
ret
stc
flds
loop
xchg
jle
in
aas
sbb
into
lahf
and
mov
fwait
scas
loopne
xor
push
ljmp
arpl
outsb
or
jg
jg
mov
adc
push
int3
mov
cmp
jl
call
xchg
fwait
pop
mov
inc
fists
imul
cmc
js
cwtl
lahf
push
aaa
or
sysret
mov
cmp
sbb
jg
mov
scas
aas
fstpt
mov
lock
insl
add
and
add
xor
xlat
sub
aas
sub
xchg
push
mov
pop
imul
and
fildll
adc
mov
outsb
shll
push
icebp
aad
adc
lods
fwait
xlat
adc
ret
lods
movsl
xor
push
iret
dec
into
or
push
mov
xor
xchg
cmpsb
jmp
cmp
cmp
mov
mov
pushf
into
xchg
inc
xor
gs
int3
push
add
inc
les
adc
jae
clc
frstor
outsb
push
jne
cmp
insl
push
sti
cld
cltd
sbb
mov
cmp
ret
mov
cmp
mov
iret
jle
push
mov
enter
xchg
ds
fnsave
lods
cltd
or
pushl
mov
xchg
faddl
into
sub
test
filds
sub
arpl
jne
mov
mov
mov
dec
or
inc
or
pop
pop
sbb
mov
insb
cs
pop
stos
sub
bound
xchg
add
dec
mov
pop
jb
shlb
dec
mov
push
outsl
or
jp
ds
inc
adcl
xorl
andl
leave
xlat
test
js
lods
jg
aas
daa
adc
mov
xor
aam
ret
or
xchg
ficoms
mov
out
sub
dec
pushf
ds
icebp
ljmp
lods
sub
inc
mov
dec
pusha
pop
cmp
mulb
orl
inc
mov
and
sahf
in
out
sub
std
pop
mov
adc
pop
dec
inc
nop
stos
dec
fwait
push
mov
push
in
push
das
lods
loopne
sbb
adc
lahf
pop
outsb
adc
imul
fxch
rcrl
xchg
gs
mov
sbb
inc
push
push
sbbl
test
push
push
fwait
sbb
test
lods
jmp
flds
dec
or
push
push
rclb
jno
into
addb
cmp
imulb
adc
fnsave
les
pop
shlb
mov
movsl
orb
mov
jbe
test
adc
js
or
call
push
cmp
jl
sbbl
cltd
shl
movsl
cli
dec
xchg
out
int
inc
sub
mov
and
js
outsb
xchg
shrl
mov
cmc
xchg
adc
in
js
aas
test
cmc
mov
jb
ljmp
inc
loopw
inc
xchg
fldt
insl
in
jbe
aas
xlat
out
and
rorl
insl
in
iret
fistpl
pop
xchg
mov
arpl
jp
stc
test
push
add
inc
mov
ja
add
jne
andl
inc
dec
add
fdivs
adc
inc
testb
lea
rolb
adc
bound
les
cmpsl
dec
test
ljmp
in
rol
outsb
fnsave
mov
faddl
shr
push
fwait
pushf
stos
hlt
xlat
fnstenv
sbb
adc
mov
cs
mov
mov
stos
and
push
pushf
dec
push
push
xor
lret
gs
sub
xchg
jg
dec
std
repnz
lock
or
leave
dec
movsb
sub
cli
gs
or
sar
mov
dec
and
sub
mov
stc
ret
sub
and
andb
fldt
insb
add
aaa
pop
into
loopne
mov
mov
mov
sarb
dec
stos
push
push
or
cmpsb
imul
mov
in
aaa
xchg
lds
inc
lds
rcl
cmpsb
xchg
push
pop
jb
push
cmpsl
push
lahf
lea
sbb
imul
lods
repnz
jb
inc
scas
adc
iret
push
loop
sbb
push
sbb
cltd
lods
cwtl
adc
pop
cmp
outsl
gs
scas
stos
mov
in
aaa
lock
adc
popa
mov
pop
pop
insb
add
xor
popf
test
or
add
imull
stos
in
ss
cli
arpl
and
testl
std
or
inc
test
sub
stos
mov
push
popa
cltd
test
mov
test
push
cs
mov
pop
icebp
scas
ret
insb
ss
sbb
scas
bound
cmpb
mov
add
iret
xlat
adc
dec
pusha
lods
pinsrw
imul
sbb
mov
pop
mov
cli
out
setns
jns
jnp
fstl
arpl
aad
int3
lds
fbld
cltd
test
and
ror
push
inc
xchg
xchg
sbb
daa
mov
dec
cld
andl
mov
lea
xchg
mov
or
jbe
add
push
loope
pop
dec
hlt
test
lock
sbb
sbb
xor
jb
mov
or
into
notl
add
dec
add
inc
jle
push
mov
dec
or
xor
into
cmp
push
adc
inc
sbb
mov
sub
xor
outsl
push
mov
push
mov
xor
adc
sarl
jo
aas
mov
jmp
lods
cmc
es
paddsb
xchg
push
jp
popf
jb
ds
pop
int3
enter
sub
sbb
lds
mov
adc
jne
adc
xchg
hlt
bound
jge
pop
sti
mov
jge
in
add
mov
jmp
test
add
push
dec
out
or
cltd
jne
je
popa
cmpsb
pop
or
mov
cmp
push
add
push
inc
push
loop
lods
lret
fxch
push
mov
out
mov
das
stc
mov
loopne
mov
popa
dec
pop
sub
cltd
sbb
enter
cmp
outsb
push
push
dec
jno
mov
push
out
push
xorb
ja
repnz
or
rcl
or
loopne
mov
xor
movsl
cmp
cmp
pop
int
lds
test
dec
ljmp
xchg
outsb
fildl
mov
pushf
add
mov
fistl
call
xlat
sarb
or
add
dec
imul
mov
cmp
iret
xlat
stc
push
and
test
inc
xchg
xchg
sub
xchg
or
xor
xchg
or
icebp
pop
xor
das
aam
adc
and
push
test
xor
bt
lahf
sbb
in
sbb
adc
icebp
xor
add
data16
icebp
mov
mov
sbb
cmp
leave
std
ljmp
movsb
jo
cmp
dec
hlt
cmp
in
lods
sbb
jmp
mov
inc
mov
lret
mov
andb
push
fldz
jmp
add
cli
cmp
xchg
cmp
sub
out
add
push
inc
xor
mov
shrl
sti
in
dec
sbbl
into
xchg
insl
fldenv
sbb
jg
in
push
pop
iret
pop
nop
jl
outsb
dec
ret
insl
das
fs
inc
pop
adc
shr
test
hlt
cmp
lret
movsb
xchg
adc
jmp
sahf
sub
adc
jns
adc
push
repz
mov
jns
sub
mov
stc
ss
mov
mov
jb
xchg
and
int3
movsb
stos
or
inc
sub
jo
xchg
in
aam
in
cmc
cmp
cli
scas
sbb
jns
aas
addb
dec
sub
mov
movb
mov
cwtl
shlb
hlt
xchg
sbbb
mov
lret
aad
shl
out
jns
hlt
icebp
pop
jo
jne
inc
shrb
xchg
cld
cli
mov
inc
or
add
leave
pop
movb
repnz
inc
mov
popf
sub
loopne
clc
inc
stos
jbe
mov
pusha
in
mov
xorb
inc
jp
stc
add
leave
mov
scas
mov
aam
xor
or
and
fistpl
xchg
xchg
roll
push
sbb
sahf
test
sub
jl
scas
xchg
insl
cmpsl
xorb
mov
adc
outsb
sub
push
mov
and
sahf
cltd
jnp
imul
mov
repz
in
ficoml
stos
add
pop
clc
add
data16
xlat
icebp
es
fists
add
test
inc
enter
popa
adc
lea
cmp
call
xlat
cmc
shlb
fistpl
xchg
aam
jge
mov
or
jb
out
jno
and
cmc
mov
sti
mov
mov
sub
in
jecxz
mov
ja
jbe
pushf
popf
cwtl
in
xor
into
mov
pop
sahf
arpl
push
sub
insb
add
push
push
push
movsb
mov
cmp
mov
push
pop
scas
xchg
mov
ret
mov
fnstenv
push
out
arpl
or
daa
loope,pt
jo
jmp
mov
ret
sbb
testb
cltd
roll
xchg
stos
out
insb
fwait
sub
dec
mov
cmp
xchg
mov
push
dec
add
or
cli
jge
push
sub
insb
xorb
push
push
or
out
fiadds
cwtl
push
call
or
or
xchg
rolb
adc
mov
mov
out
cmpl
push
icebp
xchg
clc
aad
dec
jne
popf
add
cltd
push
clc
jecxz
out
mov
popf
sbb
inc
into
stos
cmp
adc
stos
cmp
xchg
lret
pusha
push
bound
mov
es
jmp
in
stc
sbb
les
mov
mov
data16
jne
or
sub
cmp
sbb
add
lret
mov
ljmp
push
adc
pop
cwtl
jmp
push
mov
push
push
clc
mov
sbb
emms
rorl
sub
push
repnz
out
or
cmp
add
sub
and
repz
imul
lret
inc
sar
lods
jns
stc
popa
outsb
inc
int
push
push
push
sub
or
lock
xchg
cmpsl
xchg
add
xor
jno
add
scas
popf
test
xchg
mov
cltd
mov
xlat
lret
xchg
nop
pusha
sbb
rolb
sub
cmp
dec
data16
faddp
lret
cmc
sti
das
iret
fdivl
pushf
xchg
lods
adc
rcrl
lds
xchg
xchg
scas
fisubs
xchg
sbb
cs
dec
mov
and
imul
and
push
pop
jnp
push
fcompl
lds
rep
pop
popf
scas
jbe
sub
pop
inc
mov
stos
mov
dec
shlb
adc
lret
add
cmp
int
lret
sub
sbb
inc
jbe
popa
int3
mov
fsubl
inc
xchg
cmc
and
loop
test
mov
popa
out
cmc
or
xor
cmp
add
loop
pop
shlb
xchg
pop
mov
or
testb
mov
shll
das
inc
and
dec
pop
lea
mov
pop
inc
mov
lods
ja
jne
mov
das
jg
je
loopne
xchg
xchg
inc
shrb
pusha
jno
cld
or
cmp
xchg
xchg
aam
arpl
bound
jl
sbb
mov
ret
mov
out
int3
xchg
enter
ja
sahf
outsl
out
sub
addl
or
sbb
push
pop
push
imul
lcall
aad
mov
xchg
lret
repz
fsubl
and
fs
jns
cld
xchg
test
movsl
cmp
shl
test
cmc
sti
push
mov
or
into
scas
push
cmc
nop
mov
push
bound
les
jge
sub
jmp
arpl
aad
cmpsl
push
inc
ljmp
pop
push
fcmovnbe
iret
sub
cwtl
cltd
mov
mov
jmp
mov
ret
mov
mov
inc
ss
mov
les
add
arpl
pop
imull
call
push
and
movsl
xor
adc
xor
adc
lods
gs
mov
sahf
out
lods
and
jae
push
movsb
and
stc
sbb
push
dec
sahf
inc
fildl
outsl
add
addr16
xor
adc
das
aas
jle
int3
lods
jmp
fldt
loop
imul
fmulp
jg
int
test
xor
das
mov
scas
out
push
stc
insl
stc
xchg
jecxz
sub
insb
pop
sub
xor
mov
cmp
inc
mov
in
movsl
insl
push
xor
inc
sub
mov
xchg
and
jg
xlat
jg
add
sti
mov
or
sar
testl
push
lock
pusha
mov
dec
inc
test
imul
add
mov
adc
pop
push
adc
xchg
mov
or
cwtl
jle
movsl
jge
ror
rorl
cmp
lret
adc
ret
mov
movb
inc
mov
inc
xchg
js
jp
mov
dec
inc
mov
pop
jno
adc
pop
cmp
andl
pusha
movsb
rclb
xchg
aam
push
loopne
push
and
pop
shrl
and
xor
pop
insb
cwtl
push
sbb
rcr
sbb
jmp
das
jg
lods
adc
andb
divl
cmpl
xchg
stos
loope
mov
out
push
shrl
repnz
cmp
addr16
push
lock
pushf
cltd
jl
xchg
bound
mov
jno
fiadds
in
mov
shl
in
andb
or
leave
push
std
mov
adc
or
push
out
mov
mov
pop
jg
test
jp
mov
sbb
sub
xor
lock
lods
add
xlat
cmp
adc
and
repz
push
mov
repnz
cli
lcall
std
jns
and
into
sti
lret
mull
dec
push
sbb
int3
repnz
xchg
or
stos
or
lret
insb
lcall
push
int
cmpsb
notb
hlt
popf
jmp
and
imul
cltd
xchg
pop
push
mov
andb
mov
cmp
xlat
inc
xchg
in
jecxz
pushf
mov
xor
xchg
mov
ja
lods
xor
sti
js
cmp
push
add
sub
test
out
cwtl
mov
pusha
jae
popa
gs
xchg
in
xchg
test
iret
sub
subb
mov
add
mov
leave
push
outsb
adc
into
mov
ljmp
push
std
pop
pop
push
iret
xchg
and
leave
dec
jne
cmp
adc
lcall
or
aad
cld
mov
aas
bound
jae
mov
push
dec
inc
xor
inc
stc
pop
mov
jl
sar
in
in
mov
add
mov
mov
rcrb
xchg
dec
loopne
mov
sbb
insl
into
imul
inc
imul
je
and
scas
push
sbb
cmp
jecxz
dec
pop
push
in
xor
sub
int3
es
call
ja
sbb
mov
add
ja
clc
outsl
xchg
and
loope
inc
pop
daa
aas
aas
xchg
dec
xor
adc
lcall
mov
repz
jae
xchg
in
cmp
jno
inc
data16
imul
rorl
pop
jl
cmp
pop
or
mov
aam
sbb
loope
adc
jmp
int3
or
sbb
lods
sub
sub
jle
dec
xor
sbb
fs
fstl
cmp
jge
sub
out
sti
mov
xlat
lret
adc
pop
adcb
sub
ds
in
mov
mov
mov
cli
enter
fistl
add
and
pop
nop
xor
jle
nop
jne
xchg
dec
xchg
dec
or
mov
xor
movsl
jmp
in
aam
xchg
orl
jne
xor
push
out
rcrb
imull
dec
pop
div
or
pushf
lret
mov
filds
mov
sti
arpl
jle
int
push
jnp
mov
jle
outsb
dec
xchg
jmp
js
xchg
std
stc
inc
xchg
or
notl
lds
jmp
repz
jmp
push
mov
pop
sub
cmp
frstor
ja
pusha
sub
cmp
mov
aam
add
inc
rcrb
and
shlb
push
push
cmpsl
lret
adcl
xorb
iret
mov
add
push
inc
loop
sarl
jo
rolb
push
ds
aas
inc
jns
das
shrb
pop
cmp
or
arpl
flds
repnz
inc
pop
cmp
test
lock
daa
pop
lods
test
push
fistl
in
push
popa
ds
mov
jbe
and
pop
mov
sub
std
cltd
aas
mulb
nop
in
dec
movsb
jge
cmpsb
in
je
xor
push
aaa
mov
data16
call
push
out
sub
movsl
ds
or
cld
inc
jae
mov
mov
jp
scas
frstor
sti
nop
xor
nop
cltd
push
lods
jne
fbstp
outsb
testl
out
sbb
or
sbb
movsl
mov
push
cwtl
sbb
cmp
test
int3
push
mov
lret
pop
xor
xchg
mov
pushf
push
sub
mov
pop
cmp
pop
out
lods
adc
mov
out
xchg
sbb
adc
push
aas
fdivs
aam
mov
dec
cmp
mov
adc
nop
insl
std
sbb
jl
cmc
xlat
mov
push
pop
idivb
dec
ret
and
dec
inc
adc
mov
fisubrl
and
in
jl
pop
into
jge
jbe
popa
jo
sbb
xor
hlt
lds
jmp
jns
fs
data16
push
cmc
mov
dec
jecxz
data16
mov
das
into
inc
rorl
pop
and
sub
dec
xor
or
inc
iret
xlat
dec
cli
loopne
lcall
sbb
cmc
jp
repz
outsl
or
inc
cmpsl
or
cmp
es
add
xchg
adc
loope
roll
aaa
mov
jne
mov
gs
loop
xor
mov
orl
adc
xchg
inc
mov
daa
es
rcrl
inc
arpl
or
iret
pop
xchg
rorb
adc
scas
out
mov
sarb
push
stos
and
js
in
adc
flds
stc
mov
movsl
dec
mov
pop
and
lahf
inc
dec
test
pop
pusha
aam
cmp
gs
adc
mov
or
mov
xchg
inc
xor
setb
arpl
mov
xchg
cmp
insb
lret
mov
movsl
inc
lcall
and
lret
sbbb
jecxz
cli
sub
fstpt
pop
mov
adc
xchg
leave
mov
out
or
and
stos
ljmp
cmpl
jns
loop
or
cmp
xor
mov
push
lods
aaa
lods
add
daa
xchg
lret
sbb
add
xor
gs
int3
and
xchg
pop
inc
stos
scas
dec
gs
mov
lret
js
sbb
fcom
shl
mov
sub
pop
mov
hlt
or
mov
insl
inc
sub
jp
mov
cmp
fwait
xchg
cmp
push
mov
adc
jo
out
sub
pop
outsb
push
in
sub
mov
fistl
lods
push
mov
in
aas
jae
sbb
sbb
xbegin
cmp
fisttpll
adc
jb
in
cmc
leave
mov
roll
add
push
aam
pop
fidivrs
or
mov
or
ds
int
jl
xchg
popf
sbb
in
and
adc
adc
xchg
push
mov
xchg
in
pop
int3
mov
add
mov
sbb
pop
push
movsl
mov
repnz
mov
and
and
add
popf
cld
cmp
imul
mov
pop
push
or
inc
mov
scas
sub
sub
mov
push
pop
fisubl
cmp
rcrl
jns
add
mov
lret
jge
sub
pop
ljmp
or
scas
icebp
push
fs
jae
scas
mov
xor
arpl
out
xchg
les
xlat
pop
cmp
and
dec
pop
mov
jno
cmp
outsl
outsl
sub
adc
filds
sub
sbbl
push
int
cmpsb
into
aaa
and
xor
xchg
out
or
mov
xchg
test
fdivr
sysenter
jg
push
fisubrs
lods
inc
mov
mov
xchg
and
ljmp
pusha
fstl
adc
addl
or
pop
bnd
js
clc
inc
loopne
adc
bound
rcr
fdiv
mov
add
sub
push
aam
fmuls
xlat
nop
mov
xor
dec
test
aam
andb
and
push
out
out
inc
arpl
jle
add
mov
xor
jge
mov
lea
pop
and
sub
ret
mov
enter
subl
fnstsw
lcall
jg
push
insb
lds
mov
into
jmp
jne
jno
leave
push
lahf
and
dec
mov
sbb
push
inc
fstps
mov
cmp
pushf
bound
adc
clc
xor
lret
idivl
xor
or
inc
jb
aad
shl
mov
clc
sub
rcr
lea
lods
test
mov
dec
in
insb
in
insl
ror
popa
cmp
pop
fs
ret
add
mov
addr16
xor
pop
mov
add
cmc
rcll
mov
aaa
xlat
mov
pushf
insl
mov
rclb
dec
sub
fincstp
sub
aad
jb
sbb
sub
adc
lods
pop
sub
pop
leave
mov
mov
xor
out
mov
stos
subl
jo
test
cwtl
jne
jecxz
add
pop
dec
sub
test
cmp
adc
or
mov
inc
or
js
adc
inc
scas
out
lock
leave
daa
aaa
add
inc
repz
sahf
sbb
dec
pop
dec
cmp
mov
add
imulb
out
aas
add
clc
sbb
mov
sbb
xor
pop
fidivrl
pop
mov
pop
and
xor
insl
pop
cmpsl
mov
or
fwait
xor
enter
orl
add
push
sub
in
mov
daa
movsb
dec
sarb
mov
xor
adc
or
fistpll
shll
cmovae
xchg
pusha
in
movsl
xchg
cmp
and
lcall
dec
fbstp
cmp
mov
push
out
int
loopne
notl
and
push
notb
je
int3
and
mov
mov
out
or
fcmove
jle
or
cmp
stc
cltd
in
insl
inc
test
divl
xor
xchg
cmpb
hlt
mov
add
aad
repz
into
push
lret
pop
jmp
xchg
xor
sub
js
cwtl
pop
push
popa
jecxz
test
sbb
or
mov
cmp
adc
xor
push
outsb
insb
gs
xor
ds
and
movsl
cltd
xor
bound
popf
scas
test
sub
push
out
insb
int3
test
mov
sahf
jno
pop
cmc
dec
cmp
lahf
pop
adc
das
jne
shl
sub
cmp
xor
movsl
jecxz
test
je,pt
hlt
xchg
pop
jge
inc
jl
mov
push
das
dec
icebp
mov
stos
shr
loope
rclb
jae
lock
push
or
mov
jbe
sti
push
dec
addb
adcl
or
cltd
xor
adc
das
cmpsb
cmpsb
xor
int3
movsl
ret
imul
jnp
js
popa
cs
push
xor
fiadds
cmp
sbb
imul
cmpl
lahf
cmc
imul
add
into
dec
cs
stc
je
and
sbb
popa
fnstsw
sub
ja
test
out
push
js
das
inc
push
adc
adc
push
ja
clc
jg
jbe
shrl
jmp
pop
mov
sbb
fs
push
pusha
pop
jno
nop
sbb
xor
push
fwait
imul
mov
cmp
lea
dec
xchg
in
pop
pop
jle
push
mov
pop
pop
popa
out
pop
jl
js
call
lods
in
mov
mov
add
fisubl
in
fnstsw
pop
stos
inc
mov
pop
add
into
into
push
std
xchg
mov
jnp
xchg
add
lods
mov
inc
aas
cs
adc
out
das
pusha
or
ja
cmp
mov
adc
xchg
lahf
xor
std
mov
dec
test
outsl
orl
out
inc
and
xchg
jbe
in
dec
fistps
out
fimuls
das
jg
std
pop
int3
and
jo
mov
mov
xchg
jbe
sub
cmp
fdivr
mov
fnstcw
jnp
subl
push
jmp
mov
push
loop
xchg
xor
aas
iret
inc
je
or
xchg
js
push
lahf
sarb
jne
xchg
arpl
cmpsl
push
xchg
mov
and
cmpsl
pop
nop
and
inc
dec
jns
inc
daa
inc
fidivs
je
mov
jg
dec
fdivl
add
jb
mov
movsl
orl
in
and
cmp
mov
es
mov
or
loope
loop
out
in
fidivs
loopne
enter
or
mov
cltd
in
xchg
add
pop
xchg
inc
in
bound
xchg
push
stos
cwtl
js
jae
cmp
rclb
dec
popa
out
add
aaa
aaa
loopne
xchg
dec
das
and
mov
or
movsl
icebp
cmp
inc
xchg
mov
jle
or
jmp
test
cwtl
pop
cli
pushf
stos
subl
push
ds
sbb
cltd
and
cli
cmp
cwtl
push
daa
in
sbb
ret
bswap
xchg
pop
mov
in
das
scas
xchg
loope
inc
movsb
roll
movl
pop
jle
sbb
outsb
mov
enter
outsl
pop
jl
mov
sbb
lods
dec
lods
fisubrs
movsb
adc
add
mov
mov
call
je
cltd
sbbl
sbb
out
jnp
push
jne
xor
pop
mov
fimuls
pop
sub
pushl
jp
fnstcw
out
dec
and
jg
and
mov
jp
outsb
mov
outsl
stos
jmp
mov
adc
lcall
das
mov
cmp
filds
dec
mov
xor
mov
aad
dec
adc
push
pop
pushf
daa
pop
into
lahf
sbb
loope
xor
mov
mov
stc
xchg
fbstp
add
or
cmp
jge
dec
daa
xchg
push
pop
test
gs
pushl
adc
mov
push
cld
pop
push
mov
and
push
rol
nop
aad
add
jge
jnp
inc
inc
jp
scas
mov
xchg
fstpt
inc
stos
shll
lods
das
inc
pushf
push
jg
popa
xor
xor
xchg
fwait
mov
nop
lock
xor
in
mov
or
lods
sub
xor
aad
jmp
xchg
sub
push
add
out
dec
lods
sbb
das
test
outsl
cmc
mov
shll
cld
mov
dec
mov
clc
test
add
add
les
mov
cmpl
cwtl
push
ret
push
cmpl
jbe
adc
fsubs
fs
inc
movsb
push
sti
pop
nop
xor
inc
stos
out
cmp
adc
inc
gs
fidivrs
add
ret
call
push
insl
inc
ss
mov
push
xor
fmulp
movsbl
mov
testb
sarl
xor
cld
adc
outsb
inc
push
or
mov
roll
cmpsb
popa
push
arpl
movsb
clc
sbb
fcoms
data16
push
data16
pop
jmp
nop
mov
rcll
sub
cld
adc
mov
push
test
aaa
or
in
mov
jg
xor
xchg
test
adc
push
push
xchg
xchg
int3
mov
or
pop
mov
int
inc
shrb
in
aas
push
std
jae
addr16
bound
mov
xor
xchg
out
lahf
pop
pusha
test
int
sub
cltd
xor
adc
pop
hlt
xor
xchg
lds
test
xor
jne
movswl
dec
jae
sbb
repnz
mov
xchg
jo
ret
bnd
pop
add
mov
pop
xor
cmp
test
xchg
push
and
mov
mov
es
sub
adc
sbb
insb
dec
pop
mov
add
ret
mov
and
iret
mov
or
push
jmp
movsb
jle
in
mov
fildll
mov
clc
lahf
out
fisttpl
test
fs
ja
inc
int
push
out
out
jp
push
fisttpl
xor
xor
sub
and
push
and
in
in
sahf
fidivs
mov
push
loope
cmp
movsb
jo
ja
adc
cmpsl
pop
adc
sub
mov
les
jb
xor
add
cli
mov
or
add
inc
lds
scas
and
ja
inc
fldl
lds
sbb
jecxz
inc
sbb
or
notb
cmp
div
sbb
and
rcl
xchg
dec
push
fs
mov
out
push
es
sti
sub
out
lahf
dec
push
std
in
fistpl
jg
push
push
adc
dec
jge
and
cmp
ret
pop
push
adc
mov
andb
adc
outsb
xchg
cs
pusha
int
jb
dec
lret
in
mov
cltd
stos
mov
dec
lock
adc
xchg
sbb
es
add
and
mov
inc
mov
sarb
push
lret
arpl
popf
scas
inc
push
nop
rcrl
mov
mov
clc
sbb
repnz
add
cmp
pop
loopne
push
mov
inc
mov
mov
repz
jmp
adc
push
into
pop
loop
shll
sub
cld
ja
dec
stc
clc
std
call
aaa
jnp
scas
xlat
and
dec
push
jmp
insl
push
mov
xchg
xchg
pop
push
hlt
mov
add
out
and
arpl
xchg
iret
mov
lcall
xchg
fistl
mov
sub
and
cmp
cmpsl
and
xlat
xor
xchg
test
aad
or
lods
sahf
mov
imul
xchg
repnz
lods
xchg
mov
daa
lahf
mov
sbb
and
cmp
sbb
rorb
xchg
hlt
cmp
xor
incb
xor
ss
sbb
cmpsl
cmp
int3
and
and
aaa
dec
std
movsb
jnp
push
movsb
mov
push
sbb
xchg
jno
ficompl
sub
xor
mov
loop
push
popa
je
add
xchg
sbb
mov
int
add
jnp
cmp
imul
shlb
sub
sbb
adc
bound
push
arpl
xor
push
inc
cmc
and
push
push
sbb
rclb
push
jecxz
leave
xlat
inc
shll
mov
lods
inc
pop
mov
sbb
ja
add
outsb
shrb
mov
and
inc
das
xchg
arpl
mov
sarb
je
adc
into
cld
jge
xor
adcb
shr
mov
popl
mov
fidivrs
mov
fldenv
mov
sub
js
cmp
xor
stc
pop
mov
les
cs
adc
inc
mov
inc
ss
or
mov
lock
shr
out
aam
jae
pop
lcall
push
enter
flds
movsl
mov
add
push
iret
add
sahf
icebp
lea
add
mov
pop
sbb
aaa
jne
dec
inc
stos
sub
str
sub
addl
jl
test
loopne
xor
test
or
mov
jno
inc
in
dec
dec
push
sbb
push
xor
pop
jno
xlat
mov
lret
lret
sti
sbb
call
sub
mulb
js
aad
pop
aas
cmpsl
jp
dec
jns
push
xorb
data16
mov
ljmp
mov
mov
xchg
xchg
jbe
adc
xorb
addr16
xor
sarl
jne
add
sarb
out
and
adc
jnp
cmp
sub
arpl
sahf
add
sbb
arpl
jno
sbb
repz
movsl
xchg
les
fmull
ficomps
and
addr16
mov
cmp
repnz
ret
rcrl
sbb
xchg
xchg
lds
jecxz
sub
out
ljmp
jl
push
jle
les
push
dec
xor
cmp
add
or
mov
cmp
lret
aad
je
in
sub
xchg
cld
outsl
enter
imul
mov
cmpsb
pop
xor
outsb
in
data16
xlat
xchg
addr16
insb
push
das
aas
mov
xchg
aaa
mov
insl
push
adc
rcll
sti
in
mov
sbb
lea
jmp
xor
cmp
mov
popf
mov
or
sbb
das
mov
xorl
stos
shrl
bound
pusha
lret
addl
or
cmp
int
or
sar
mov
into
or
xor
and
push
les
lcall
sub
pop
sbb
sub
or
xchg
iret
mov
fdivs
insb
adc
mov
and
mov
lea
jmp
rorl
in
mov
lock
aad
sti
outsb
orb
push
sub
popa
inc
and
leave
xlat
or
adc
push
imull
fisubrs
aad
inc
pop
sub
push
stos
pop
pop
adc
incl
bound
jmp
loope
mov
adc
ret
popa
push
insb
repnz
mov
nop
icebp
in
mov
push
add
and
push
adc
test
mov
inc
push
mov
insl
inc
je
icebp
xchg
pusha
stc
mov
adc
mull
sub
call
nop
mov
and
jns
dec
decl
andb
cmp
scas
cltd
insl
dec
and
push
mov
ds
mov
movsl
jo
cs
pop
push
mov
mov
test
pusha
and
mov
sarl
push
cmc
xor
mov
scas
rcl
mov
leave
jge
les
cmp
das
mov
testb
in
jnp
sub
or
xorl
stos
rcrb
into
dec
cmp
push
insb
scas
sbb
xchg
cs
das
in
cmp
rcl
sub
mov
arpl
inc
cmp
sub
pop
aam
adc
xor
lods
daa
inc
jns
sub
sbb
push
movsb
lock
frstor
fisttpl
add
aas
and
std
int
mov
outsl
les
sahf
xor
inc
aad
ror
scas
add
push
sar
xor
inc
out
imulb
mov
dec
jmp
repz
andb
or
fwait
jno
fists
xor
fstpt
in
and
std
lods
push
cmp
xchg
orb
add
pop
daa
out
je
sbb
test
lds
inc
lcall
pop
arpl
xor
int
cltd
sub
jp
push
rcll
sub
mov
les
push
pop
out
cmp
add
cmp
xor
test
xor
sub
dec
push
icebp
iret
dec
pop
pop
sbb
lods
mov
dec
inc
bound
jp
ljmp
adc
das
dec
sbb
dec
daa
add
cwtl
push
sub
mov
cmpsb
enter
xor
or
lret
inc
fsts
xchg
mov
sub
mov
test
xlat
mov
outsb
push
test
mov
mov
rolb
int3
movsb
pop
jns
or
fs
xchg
push
jmp
mov
test
sub
push
clc
icebp
dec
lods
mov
push
mov
stos
pop
jmp
mov
jmp
aas
xor
mov
roll
sarl
adc
pop
push
lcall
scas
fs
daa
js
inc
mov
pop
inc
cld
xor
ret
js
pop
fidivs
adc
cmc
cs
test
and
bound
imul
sub
ds
test
cmp
call
movsl
and
imul
mov
aaa
cmp
movsl
movsb
sub
inc
cmpsb
sbb
movl
sbb
xor
outsb
mov
fcoml
jl
hlt
sub
call
mov
xchg
les
sbb
sub
sbb
in
jle
retw
xchg
sub
jl
lods
pop
jnp
std
cld
arpl
push
dec
xlat
pop
and
out
dec
pushf
fldt
ljmp
inc
lret
mov
out
pushf
stos
or
or
pop
add
fistpl
ds
std
mov
subl
mov
mov
ret
mov
or
clc
cs
add
scas
jb
int
push
int3
ljmp
stc
aam
shrb
rcrb
sub
or
jmp
mov
aad
popf
mov
jns
or
popa
cmp
cwtl
add
outsl
sub
cmc
cld
sbb
fnstcw
and
icebp
xchg
imul
in
mov
jb
das
icebp
repz
sbb
cmp
jle
in
std
push
xchg
stos
ret
jbe
fnstsw
aaa
int3
std
fnsave
xchg
pop
scas
loopne
dec
mov
mov
or
icebp
push
std
inc
loopne
bound
and
pop
loop
pusha
push
xor
ret
mov
or
repnz
cmp
push
ret
rcrl
jb
aas
dec
ja
add
jnp
jmp
inc
push
inc
cwtl
inc
push
and
daa
clc
cli
mov
push
push
pop
mov
sbb
sub
test
add
mov
cmp
mov
inc
sbb
dec
pop
and
mov
mov
movsl
ret
pushf
call
fsubs
insl
sbb
faddp
shlb
cwtl
stos
enter
or
lods
test
stc
xor
push
jo
ret
push
xchg
les
jbe
inc
xorb
push
into
or
test
jbe
cmc
jns
dec
cmpsl
in
pop
or
imul
movsb
movsl
bound
aam
aad
cli
pop
aad
adc
insl
mov
mov
ss
inc
inc
pushf
loop
insb
inc
and
xchg
and
push
lock
out
dec
incb
and
out
and
add
or
pop
jge
bound
outsl
lods
sub
test
jmp
mov
xlat
mov
mov
fcoms
loope
sahf
inc
xlat
cli
fucom
cmpsb
int3
push
mov
and
add
mov
mov
xchg
sub
cmp
lret
popa
ss
adc
icebp
add
add
popa
xor
jae
popl
dec
xchg
push
stos
mov
sbb
or
xor
mov
adc
out
shl
push
int3
dec
push
int3
and
and
push
sub
lods
ficoml
shl
jbe
inc
ret
adc
iret
mov
movsl
fbld
sub
inc
pop
data16
not
dec
paddsw
cmp
outsl
filds
mov
and
fbld
hlt
add
lods
andb
ret
or
imull
xchg
jg
dec
ljmp
mov
push
rcrb
mov
mov
outsb
loop
dec
lahf
int3
out
push
daa
adc
or
test
mov
and
sbb
add
fsts
rcl
test
pop
dec
out
or
pop
push
add
mov
add
xchg
pop
push
and
daa
ja
adc
sbbl
or
mov
dec
iret
cmpb
inc
jb
idivb
sub
and
or
les
shr
subl
xchg
push
add
or
iret
outsb
in
xor
mov
stos
nop
cmpsb
xor
leave
hlt
das
sub
mov
push
sub
rorb
mov
or
mov
out
insl
push
rcll
shl
iret
cmp
mov
sbb
xlat
lods
cmpsl
fwait
cmp
arpl
sub
ds
and
ret
push
test
movl
in
fwait
aaa
int3
lea
movsl
mov
push
dec
fiaddl
aaa
and
shrl
std
repnz
and
and
inc
sahf
pop
incb
cmp
rclb
cli
mov
add
add
cli
jle
dec
jne
nop
mov
stos
sbb
jno
popf
xor
add
xchg
push
cmp
and
mov
xor
adc
js
lahf
push
in
sub
movsl
movsl
jb
outsb
test
mov
lods
aad
add
es
add
or
add
sub
mov
or
inc
mov
dec
or
movsb
cmp
jecxz
sbb
popa
inc
mov
out
inc
pop
clc
in
or
push
jns
in
push
xchg
stos
ljmp
push
movsl
mov
shrb
mov
stc
and
mov
inc
inc
lcall
stc
or
and
inc
mov
sbb
hlt
lock
jge
xor
ss
and
into
mov
cmp
stc
dec
out
mov
mov
jle
lods
inc
shrb
insl
negl
jmp
add
sarb
lahf
hlt
insb
jo
stos
in
sbb
dec
fs
outsl
inc
adc
push
dec
sarl
outsl
lods
clc
cmpsl
pop
imul
sub
mov
adc
mov
xchg
inc
ja
out
int3
pop
stos
in
mov
cmp
xchg
jbe
push
aam
ja
sbb
push
into
loopne
fnstsw
out
dec
push
xchg
dec
imul
and
mov
push
xchg
jbe
mov
jne
xchg
xlat
mov
xchg
cs
push
lds
xchg
out
addr16
test
mov
test
jge
mov
loope
icebp
stos
fidivrl
out
fdiv
cmp
rcrb
push
sbb
lret
mov
out
and
mov
fs
push
mov
inc
fldt
and
dec
dec
imul
fs
test
pop
add
fucomi
loop
js
pop
or
xor
xor
jne
ds
mov
mov
imul
test
mov
jg
and
dec
out
adc
adcl
cmpsb
stos
pop
shr
inc
lock
mov
dec
and
mov
xchg
fldl
pop
cmpsb
das
cmp
add
clc
add
lret
push
or
aas
add
popf
lahf
mov
sbb
and
pop
push
fisubrs
pop
or
jne
adc
mul
pop
in
enter
fwait
add
inc
mov
fcom
in
jb
xor
movsb
push
push
aas
scas
sbb
negl
data16
xor
pop
and
cmp
cld
fstpl
icebp
mov
or
movsb
jle,pt
sbb
idiv
shlb
ljmp
lods
add
dec
push
sbbl
fiaddl
leave
outsl
cld
not
negb
mov
lret
pop
bound
test
adc
dec
scas
stc
aas
cmp
cmp
adc
add
movsl
pop
and
shl
dec
test
xor
sbb
ds
dec
mov
idivl
in
mov
sub
push
inc
iretw
mov
xor
dec
pop
lea
les
mov
mov
jl
push
xor
add
inc
cld
out
sbb
movsb
jecxz
xchg
mov
inc
aas
test
int3
mov
xor
fstps
jmp
xchg
lods
lock
mov
leave
sbbb
adcl
mov
push
incl
mov
int3
xchg
and
jl
sub
test
xor
gs
fstl
dec
inc
jne
bound
push
or
fidivrs
cld
into
int
pop
xor
mov
mov
xchg
inc
jno
jno
push
repnz
fwait
xchg
jne
pop
pop
insb
xchg
outsb
movsl
cwtl
mov
xchg
fldcw
xchg
jecxz
ja
sti
sub
mov
imul
xchg
xchg
out
movl
inc
xchg
out
add
das
xchg
adc
inc
xchg
orb
mov
xor
fistpl
iret
pusha
xchg
ret
enter
ret
scas
cli
movsl
arpl
and
fstpt
adc
cmp
jp
lret
xor
sbb
or
xor
dec
sub
pop
daa
cmp
mov
pop
jp
sahf
sub
pop
fists
loop
movsb
and
sbb
test
mov
lods
pop
jne
clc
xchg
loope
in
int
jl
and
les
adc
jno,pn
push
aad
movb
mov
testb
mov
xor
lea
xchg
cli
lds
mov
mov
es
jge
mov
test
pushf
xor
push
mov
fsubrl
mov
das
xchg
sbb
sbb
mov
inc
movsl
or
lock
roll
sarl
push
ror
fisttps
cmp
mov
xor
cli
inc
insl
test
sub
cmpsl
inc
stos
jmp
js
lret
xor
aad
cmp
das
add
mov
xchg
xor
sbb
lock
cmc
cld
mov
xchg
xchg
inc
dec
sub
and
mov
scas
and
andb
dec
pop
xor
dec
push
dec
data16
inc
dec
push
outsb
xchg
inc
add
mov
sbb
movsl
pop
push
mov
jge
daa
mov
sbb
cwtl
mov
jo
fiadds
jbe
or
jmp
mov
fldl
fs
xchg
shll
inc
pop
aas
repz
aam
xor
pop
mov
sti
cwtl
jl
xchg
sahf
or
jmp
push
out
imull
and
call
xchg
iret
xchg
dec
xlat
mov
sbb
or
sbb
stos
pop
cld
mov
cmp
shl
xor
mov
mov
xchg
sbb
sbb
mov
ret
lods
stos
neg
xchg
call
pop
cmp
and
cmp
flds
sar
inc
outsb
xor
addr16
cmpsb
pop
sub
xlat
sub
je
mov
mov
sbb
es
xchg
test
popa
jae
jg
shll
add
or
dec
xchg
clc
cltd
or
add
orl
pop
shll
cmp
lds
outsl
pushf
and
dec
lahf
push
dec
push
pop
sub
mov
out
push
imul
mov
lods
mov
mov
pop
inc
jecxz
test
jae
sahf
out
jae
xor
add
cltd
movsl
jecxz
lahf
cmp
cmp
dec
lcall
scas
in
outsl
pop
jno
idivl
adc
daa
xor
inc
mul
lcall
xchg
aad
xchg
cmp
andb
xor
leave
leave
jge
ret
push
lods
sbb
mov
jecxz
push
cwtl
addr16
cwtl
jns
jmp
push
push
mov
add
push
sub
xor
call
out
and
stos
jecxz
and
inc
test
jo
pop
pushf
test
int
pop
inc
and
and
inc
ds
sbb
jb
push
add
adcb
outsb
lahf
lcall
scas
sub
psubusb
mov
stos
push
add
cmp
xchg
setne
push
int3
ror
ss
mov
adc
movd
arpl
push
mov
rcl
add
dec
iret
out
test
mov
arpl
je
ret
test
xor
or
dec
rcrb
push
lock
xchg
lods
scas
add
cltd
lods
int
stc
and
lods
jnp
cmp
sti
loop
inc
daa
pop
jb
mov
xlat
out
aad
xor
out
js
inc
aas
je
and
sub
or
pop
enter
imul
mov
movsb
xchg
sbb
push
xlat
mov
test
sub
and
cld
loopne
dec
repnz
pop
mov
in
ds
divl
mov
movsb
push
psubusw
ret
xchg
mov
xor
sbb
xlat
mov
data16
aaa
lods
pop
add
jge
ficoms
rcll
dec
insl
pop
pop
in
incb
out
ja
xchg
adc
jle
test
movsb
and
push
imul
mov
pop
popa
js
sub
gs
scas
in
mov
cmp
and
xchg
lret
cmp
jnp
jno
out
testl
add
cmp
and
mov
aam
fwait
cmp
cli
pop
iret
inc
movsl
xchg
cli
mov
ret
clc
push
jl
mov
cmpsb
jne
adc
fwait
icebp
roll
int
xchg
adc
aad
push
test
push
in
add
cmp
roll
and
in
cwtl
cmp
push
insb
jp
sbb
testl
int3
enter
xor
xchg
jle
sahf
pop
shl
nop
mov
pop
jnp
jnp
pop
push
sub
add
sub
cmp
addl
sbb
push
js
cmp
adc
dec
inc
cmp
cmc
rcrl
ret
ret
in
or
loope
ljmp
lds
inc
jns
in
add
dec
adc
int3
mov
fbld
sbb
in
cmp
cmp
sub
mov
sub
dec
fstl
hlt
xchg
pop
cmpsl
xchg
fwait
mov
and
and
repz
fwait
dec
dec
setl
dec
mov
sbb
adc
sarl
rorl
mov
ds
cmpl
push
inc
xlat
jmp
je
jg
cwtl
mov
cli
or
in
add
ljmp
mov
mov
sub
mov
imul
ss
mov
add
addr16
pop
popa
test
or
adc
jg
xchg
mov
inc
repz
mov
sbb
mov
lret
dec
mov
je
cwtl
or
sub
repnz
jnp
in
ds
mov
mov
test
pop
and
adc
scas
fisttps
jg
addr16
test
adc
cmpsl
xchg
mov
sbb
clc
retw
mov
dec
mov
jbe
lretw
sbb
adcb
pop
sbb
addb
lcall
icebp
push
jp
pop
inc
mov
add
sub
bound
mov
push
cmc
js
jnp
mov
das
cs
fdivl
sub
mov
mov
xchg
iret
jle
mov
cmp
sub
in
shlb
dec
das
test
int
pop
sbb
shufps
xlat
xor
or
and
mov
fdivrs
and
out
xchg
push
pop
cmp
cltd
leave
xor
add
pop
mov
pushf
push
push
sbb
inc
mov
ds
fbld
iret
inc
loope
push
lods
mov
jae
or
jae
jb
stos
jg
movsl
push
jns
and
negl
xchg
loopne
addr16
sub
xchg
incl
stc
int
into
repz
add
jb
fbstp
pop
mov
jae
sbb
movsl
sub
mov
mov
push
cli
sub
mov
fdivrl
mov
fld
pcmpgtw
xor
sub
mov
adc
inc
pop
dec
sub
jno
jns
dec
mov
jae
mov
cs
xor
mov
pop
jae
fdivs
repz
mov
jge
data16
push
movsl
lret
xchg
pop
rcrl
inc
mov
push
xor
nop
enter
test
js
cs
add
and
lcall
fwait
es
and
mov
lods
inc
hlt
or
pop
push
repz
fwait
xchg
test
out
mov
jl
ret
dec
pop
cs
jnp
dec
dec
xchg
cltd
fdivl
xor
repnz
out
int3
jl
cmp
mov
mov
es
or
jp
cli
mov
pop
pop
insb
xor
imul
std
dec
and
jg
dec
jp
out
cmp
jle
test
int3
add
daa
mov
jl
push
mov
decb
insb
fldcw
xchg
dec
dec
cmp
pop
xlat
pop
fucomi
mov
mov
mov
xchg
sub
inc
push
lcall
mov
or
add
mov
repz
xor
or
adc
fcomp
rcl
sbb
mov
lret
inc
sbb
inc
scas
les
pop
daa
subb
in
adc
nop
lret
push
push
mov
pop
cmp
push
pop
in
sbb
xchg
pop
adc
mov
stos
mov
movsb
sarb
jmp
sub
sub
aas
xchg
sub
and
dec
std
ret
pop
xchg
add
lret
sahf
mov
mov
mov
les
nop
aam
mov
pusha
push
cmp
push
pop
inc
add
sysexit
pop
mov
pop
jg
dec
ja
ret
sub
fcmovne
jns
push
pop
dec
mov
sub
mov
jl
cwtl
ljmp
icebp
cli
inc
fnsave
add
or
cwtl
mov
jb
xor
lods
jl
add
mov
popf
lods
std
or
pop
outsl
aas
sbb
mov
aam
aad
dec
jnp
in
subl
insb
mov
and
mov
mov
mov
mov
rcrb
pop
xchg
jmp
out
loopne
ljmp
sub
jae
out
adc
hlt
jno
dec
adc
inc
or
adc
daa
jle
adc
pop
mov
dec
lock
add
adc
popa
jge
mov
shl
mov
xchg
sbb
fs
outsl
aam
in
lock
xchg
jecxz
push
rcll
cmp
lods
fpatan
mov
stos
xor
mov
out
pop
xor
and
rorl
imul
mov
out
std
fsts
lret
xchg
or
not
ss
lods
sbb
stos
push
rolb
aam
xor
inc
sbb
mov
addr16
sbb
int
sub
je
mov
out
ret
in
stos
and
mov
xchg
movsb
insb
xchg
jecxz
hlt
jle
or
mov
repnz
loop
sub
xor
leave
mov
mov
xor
cs
xchg
mov
mov
das
jecxz
xor
in
cmp
fistl
mov
in
add
into
push
xor
mov
fmul
js
adc
aad
pop
push
push
fsts
shl
jbe
sbb
repz
pop
fsubrs
fwait
outsb
movsb
adc
leave
scas
and
movsl
in
dec
cmp
fiadds
cwtl
mov
sbb
sarb
lret
xchg
dec
out
xchg
xor
adc
inc
lock
and
cmp
sbb
add
call
dec
adc
sti
out
repz
mov
cmp
mov
ret
lret
xchg
cli
mov
stc
fmulp
lret
mov
sti
push
out
inc
push
mov
dec
jp
mov
pop
outsb
push
in
aad
pop
inc
and
add
adc
and
fldl
pop
das
lods
out
xchg
cmp
add
movsb
push
arpl
les
sub
divb
mov
and
inc
sarb
and
or
stc
mov
mov
out
clc
xor
pmuludq
cltd
lods
jecxz
add
or
mov
cmp
fnsave
cs
shrb
cmp
pop
dec
sbb
cmpsl
daa
into
inc
cmp
flds
cmp
ds
fcoml
jbe
je
pop
mov
or
sbb
mulb
xchg
mov
jbe
sbb
ror
or
mov
push
push
repnz
jne
inc
adc
mov
sbb
ss
pop
cwtl
fcmovnb
clc
lock
rorl
inc
aas
dec
dec
lods
test
popa
mov
aaa
std
bound
mov
in
fwait
xor
cwtl
mov
adc
pushl
mov
stos
fcoms
or
push
pop
test
bound
dec
xor
sbb
enter
cmp
xchg
adc
and
or
and
xor
mov
lods
in
stos
mov
or
cmp
or
int3
fs
cltd
fs
in
adc
inc
adc
fmull
push
sub
or
xor
ret
dec
mov
add
movzbl
mov
lcall
mov
popf
sarb
sub
dec
js
cltd
add
xchg
mov
lret
xchg
and
sbb
mov
xor
js
xor
sbb
push
inc
scas
dec
lret
pop
insb
jle
jns
mov
mov
insb
in
add
xchg
xlat
add
fsubr
bswap
pop
orl
xchg
adc
xor
cmp
mov
dec
fsubrl
stos
and
push
dec
push
fistl
jg
xchg
loop
loopne
xlat
fidivrs
inc
mov
pusha
dec
gs
jne
add
dec
fcmovne
repnz
scas
enter
jmp
fsubrs
jecxz
andl
or
pandn
clc
mov
mov
inc
adc
out
push
sbbb
mov
test
stos
xor
cltd
test
add
sti
aad
pop
aam
arpl
and
dec
sbb
shlb
pop
sbbb
sbb
pop
dec
xor
imul
mov
xchg
out
mov
add
stos
aaa
gs
cmpb
or
into
in
dec
iret
or
std
notl
mov
ja
push
adc
add
push
xchg
sub
or
sbb
push
out
pop
jne
cmp
movsl
jmp
sub
jl
inc
gs
or
aaa
cmp
cmp
lock
fwait
mov
push
mov
popa
bound
out
fdivrs
ja
mov
dec
push
add
sbb
sub
leave
test
mov
and
cmpxchg8b
xchg
cmpsl
in
jecxz
je
and
stos
cli
js
sbb
sbb
adc
int3
xor
push
icebp
xchg
sti
dec
mov
push
movsl
pop
xor
push
mov
push
sub
js
adc
pop
dec
cs
sbb
andb
xchg
aas
inc
mov
in
loopne
rcrb
xchg
movsb
mov
mov
dec
fistps
lods
test
enter
push
leave
aam
ret
adc
add
inc
push
dec
mov
lock
es
int
sarb
aaa
pop
mov
fcoms
and
jo
out
aaa
push
sbb
or
imul
orb
adc
jg
mov
das
aaa
loope
in
lds
mov
xchg
jle
fstl
cmp
fisubs
icebp
dec
sbb
pop
popa
daa
sbb
icebp
pop
out
push
sbb
jmp
mov
mov
and
sbb
stos
sti
push
adc
mov
jno
insl
xchg
test
stc
lock
aas
imul
pop
clc
adc
aas
pop
cmpl
inc
out
popf
das
clc
inc
rcl
cwtl
mov
xlat
lahf
add
mov
and
mov
mov
inc
pop
repnz
test
loop
adc
leave
fldl
rol
add
iret
jmp
aaa
inc
sub
fcomp
gs
sbb
ja
jp
cmp
imul
lea
dec
sbb
xchg
mov
pop
fdivp
add
sarl
aam
mov
lods
rorb
lahf
fmull
fsubrl
jo
repnz
movb
mov
xlat
inc
mov
pop
cmc
fsubs
ljmp
int3
and
movsl
clc
adc
in
lds
mov
scas
jecxz
fmul
int3
sub
mul
mov
pushf
inc
ss
xchg
hlt
mov
pop
and
mov
xor
jnp
in
ret
fs
test
pop
mov
fst
in
aad
xchg
pop
out
push
push
add
mov
scas
push
insl
or
cmpsb
repnz
xchg
push
xor
mov
xchg
push
pop
xor
gs
popa
xchg
cld
sub
stos
daa
mov
xor
in
mov
aam
lcall
lods
fcmove
mov
mov
xchg
cltd
out
or
insl
pop
je
test
push
cmpsl
dec
shl
pop
or
popf
imul
cmp
adc
dec
pop
xlat
cli
out
scas
dec
sub
mov
jae
rcrb
inc
gs
js
mov
out
jmp
outsb
pop
mov
push
imul
xor
pusha
cmp
into
nop
stos
adc
push
add
cmp
dec
inc
sub
or
test
jae
pop
add
cmc
scas
jbe
lret
inc
sub
insl
leave
arpl
adc
adc
push
push
and
pushf
sub
inc
fildll
movsb
int3
and
nop
sbb
imul
int3
lods
add
fisttpl
jnp
fcmove
jae
lcall
cmp
cltd
push
lea
aaa
mov
mov
pop
repnz
sbb
or
in
popf
xchg
sbb
test
out
dec
cmp
sti
jmp
fiaddl
cltd
out
sub
push
xor
cs
mov
hlt
mov
lahf
bound
mov
into
jg
lcall
cmpl
and
add
xchg
repz
inc
add
or
dec
xor
lcall
aas
xchg
jo
jecxz
dec
stos
cltd
dec
jp
outsl
movsl
push
mov
mov
xchg
pop
adc
and
xor
nop
lret
cmpsb
push
clc
mov
sti
stc
nop
xchg
sub
inc
shr
pop
jmp
or
mov
into
sbb
jg
cmp
and
flds
jmp
aaa
dec
cwtl
push
inc
fdivrs
stos
stc
dec
imul
mov
inc
cmc
rcr
cmpsl
mov
gs
out
lea
bound
in
and
outsl
notl
mov
jle
jmp
pop
inc
mov
mov
jne
lcall
ret
andl
pop
cmp
jb
sub
xchg
and
dec
fsubr
cltd
inc
sarb
les
imul
lret
scas
mov
popa
lcall
test
mov
push
sarb
mov
adc
inc
in
shlb
lcall
mov
jno
jb
or
and
jnp
icebp
iret
and
jbe
mov
in
pop
jb
arpl
repz
mov
inc
jne
push
shlb
xlat
mov
cmc
movsb
xor
lds
scas
lret
inc
xor
pop
daa
adc
nop
push
lahf
adc
push
lret
xchg
and
cmc
lds
insl
mov
xchg
movsb
pop
cmc
out
movsl
lods
call
stos
or
fwait
push
divl
hlt
imul
sti
fistps
jg
loop
ljmp
mov
mov
sub
xchg
lea
or
cmp
pushf
dec
xor
aad
and
aam
push
sahf
loopne
cmp
sub
sub
pop
nop
cmpsb
ss
test
inc
mov
das
jl
adc
stos
add
fisubrs
hlt
or
enter
in
jb
lock
adc
dec
gs
sbb
inc
insb
bswap
cmp
lods
jg
push
leave
lret
mov
lret
jnp
les
jae
inc
jmp
imul
adc
imul
mov
outsl
pop
jmp
in
push
inc
rorl
xchg
jbe
xor
sub
or
jg
and
dec
jo
je
loop
cmp
xchg
nop
jge
cmp
cmp
sti
and
sub
outsb
push
xor
mov
scas
mov
imul
mov
stc
idiv
or
push
push
mov
aaa
aaa
xchg
mov
test
jle
push
in
lock
sub
pop
push
nop
test
fs
das
push
xchg
mov
mov
sub
out
ds
jns
jl
inc
aam
inc
mov
loop
and
xchg
imul
dec
loop
pusha
aas
fwait
call
daa
add
xor
stos
movsb
or
cmp
fmul
push
shrb
push
imul
inc
jb
xchg
and
enter
inc
push
scas
xchg
push
iret
lcall
mov
jns
out
pop
xorb
scas
mov
xor
and
das
and
sbb
push
push
inc
inc
push
xchg
cwtl
xchg
push
jle
adc
dec
mov
test
add
cmp
jo
mov
cmp
xor
and
push
movq
daa
mov
sbb
bound
xor
rcr
in
inc
cwtl
cld
cmpsb
pop
lods
pop
dec
stc
loope
fmuls
aam
add
test
xor
sub
cmpsb
sbb
data16
sti
mov
xchg
jae
push
push
push
push
xor
imul
cld
hlt
push
fs
adc
lods
cs
sarl
mov
or
in
mov
sti
data16
repz
out
jae
or
cmpsl
dec
and
inc
pop
pop
rol
add
rcll
push
ret
movsl
mov
jne
mov
in
mov
push
sbb
fildll
mov
dec
adc
inc
ret
and
out
dec
js
or
das
ds
adcb
add
cmovs
daa
mov
loop
call
int
outsl
jmp
sbb
push
inc
outsl
repz
push
dec
jb
cmp
inc
andb
mov
pop
adc
es
popf
stc
push
inc
fstps
pushf
pop
test
iret
out
mov
insl
je
fsubrp
cld
jns
testb
std
imul
jle
xchg
fistpl
mov
mov
test
pop
das
mov
fmuls
xor
fs
ficoms
scas
aam
dec
push
pop
outsb
push
add
pop
sub
das
push
out
cmp
stc
dec
pop
ja
inc
aaa
lea
add
in
and
stos
mov
loop
out
pop
fucom
push
rcl
sub
and
jno
test
gs
lahf
xchg
jne
popf
enter
inc
sahf
subb
or
mov
shlb
mov
adc
loop
or
and
jge
adc
arpl
imulb
dec
filds
sub
scas
test
pop
mov
dec
adcl
cli
mov
lds
insb
ds
jae
sbb
scas
dec
jne
mov
aaa
push
add
pop
push
pop
fisubl
jo
lret
sbb
fstpt
adc
pusha
fsub
popl
mov
xorb
add
mov
and
out
daa
lods
mov
scas
push
jno
fildl
mov
es
enter
arpl
jbe
inc
lret
xchg
aad
sbb
rcll
dec
sahf
or
lock
aas
lret
add
mov
xchg
inc
icebp
loope
mov
and
adc
lock
cltd
sbb
pop
sbbl
adc
fidivl
sti
lahf
or
xor
mov
lods
xchg
js
sbb
cmp
sub
rcrb
xlat
push
jno
aam
jb
pushf
jge
mov
aas
popf
popl
push
ret
inc
repnz
jno
das
jg
loopne
mov
imul
push
in
mov
call
inc
aam
shrb
iret
icebp
mov
jnp
hlt
rcrl
fldl
js
adc
outsl
mov
je
pop
or
inc
hlt
xchg
mov
xchg
popf
lret
mov
pop
in
cmp
leave
aam
fcoml
or
int3
mov
lods
ret
adc
push
adc
call
pop
cld
mov
test
cli
xchg
into
pop
inc
add
or
mov
pushl
jmp
outsl
jne
mov
and
mov
push
repnz
xchg
add
jmp
aam
dec
int
sahf
sbb
sub
cltd
dec
adc
fcomip
or
sbb
sub
xchg
mov
sbb
faddl
andl
sar
ja
popa
mov
bound
pop
mov
push
in
mov
add
jo
mov
cmpsb
mov
loope
push
insb
mov
xchg
jmp
mov
jne
incl
mov
inc
jnp
cli
sti
mov
popf
mov
jl
or
fwait
add
inc
sub
jl
mov
loopne
xor
leave
cmp
hlt
je
adc
and
mov
inc
rcrl
pusha
jae
rorb
mov
das
cmp
test
ficoms
cmc
xchg
jge
xchg
mov
data16
repz
jmp
sbb
and
xchg
rorl
push
in
lods
xor
addr16
mov
jg
push
and
and
mov
stos
lods
or
dec
cmpsl
insl
mov
insl
sub
or
pop
pop
loope
adc
xorb
lret
int
jle
xchg
adcl
fidivrl
outsl
test
add
inc
dec
xchg
sub
mov
inc
cli
leave
mov
sbb
cli
xor
or
nopl
dec
add
aaa
sbb
test
or
xor
mul
sub
dec
nop
sar
mov
lds
jns
mov
lahf
clc
movsl
xchg
sbb
daa
xor
aas
xor
sbb
scas
sub
or
ja
sub
xchg
imul
cmp
dec
lahf
arpl
test
in
clc
cld
mov
sbb
dec
sbb
pop
cli
movsl
push
jnp
dec
mov
sbb
adc
and
dec
lahf
pushf
sahf
sahf
sbb
adc
pop
xlat
ret
aaa
xchg
outsb
fnstenv
icebp
cli
stc
xor
pop
jae
in
push
adc
loop
or
mov
cmp
lock
pop
pushf
test
push
in
jle
cwtl
fidivs
inc
cmp
sub
mov
sub
xor
movsb
sub
lea
add
jae
inc
and
pop
call
stc
cmc
mov
xlat
ljmp
mov
lahf
push
mov
mov
in
imul
jl
and
insl
rorb
mov
mov
shlb
adc
fisttps
mov
js
out
dec
loope
push
push
push
dec
pop
sbb
mov
push
sub
xor
bound
xor
or
cmp
xor
aas
fldcw
popf
ret
sub
insb
mov
js
pop
cmp
imul
cmp
out
enter
nop
xchg
call
pop
into
adc
outsb
dec
fs
add
inc
push
cmpsb
add
mov
push
shlb
mov
movsb
adc
mov
dec
aam
scas
xlat
sbb
mov
popf
xchg
pop
cmp
and
fldcw
ss
js
xchg
xor
jp
pop
lcall
int
into
fwait
adc
lcall
add
icebp
sbb
test
mov
movsl
dec
in
push
aas
pop
lock
pop
or
imul
xchg
adc
push
shrl
push
int
cmp
cmpsl
push
scas
cmpsl
and
dec
cmpsb
in
xlat
adc
or
xor
lds
imul
sti
xchg
shlb
dec
jl
arpl
leave
mov
cmp
imul
out
ljmp
movsb
icebp
jns
loope
mov
lret
iret
cmp
or
cld
divb
mov
pop
iret
addr16
rcll
loop
cs
std
add
pop
sub
and
int3
bound
sbb
pop
in
fistpl
or
xchg
xor
pop
lods
inc
push
and
xchg
ds
cs
mov
xor
push
repnz
jle
insl
in
pop
sbb
xchg
add
jp
jp
repz
mov
cs
cmc
xchg
and
mov
jo
dec
jno
sub
add
fs
and
aad
stos
aaa
lahf
lcall
in
xchg
in
mov
and
jns
xor
mov
jbe
in
pusha
inc
adc
adc
jg
lcall
push
dec
aaa
in
inc
js
add
inc
sub
push
cmpsl
jo
push
rcll
daa
icebp
pop
imul
push
jb
xchg
pop
and
push
jns
pop
mov
icebp
push
mov
dec
xor
xor
or
les
daa
addr16
popf
leave
xchg
test
xchg
repz
cmp
jmp
inc
lcall
xchg
mov
push
cmp
imul
or
jb
mov
mov
rolb
mov
roll
ljmp
arpl
dec
test
and
sti
add
add
mov
enter
lret
pop
popf
inc
bound
jb
fcoml
aaa
mov
sbb
ljmp
je
stc
jle
dec
sahf
call
loop
push
lret
add
sbb
insl
loope
sbb
aad
and
mov
xor
xchg
push
repnz
adc
jge
dec
and
jmp
std
outsl
sub
fsubs
popa
adc
movsb
flds
push
lcall
lcall
roll
jnp
std
sahf
roll
jbe
jp
dec
sub
lahf
dec
add
ljmp
rcr
xchg
ja
mov
push
add
into
call
push
adc
or
sbb
push
jb
cld
dec
cltd
mov
outsb
dec
js
and
mov
mov
scas
or
test
in
pop
add
nop
jne
addr16
mov
mov
pop
mov
imul
mov
jne
inc
call
and
dec
jge
popf
jb
outsb
push
add
jno
in
lods
sbb
ret
adcb
mov
push
jge
iret
out
push
insb
jecxz
push
inc
dec
das
and
mov
iret
push
inc
stos
jb
push
pop
clc
push
daa
pop
inc
dec
push
les
and
out
mov
insl
and
xchg
mov
cwtl
and
outsl
mov
mov
cld
ljmp
ss
inc
sub
addr16
mov
out
mov
mov
das
test
insl
cmp
mov
aas
pop
cmp
test
and
andl
sti
jne
jbe
xor
pop
lcall
ret
xchg
lods
sbb
cmp
xor
sub
xchg
out
dec
orb
add
arpl
push
mov
lret
mov
leave
add
push
ret
and
adc
sub
mov
pop
sub
dec
jno
test
push
fldt
mov
push
out
mov
shlb
push
jl
sbb
add
xlat
inc
insl
mov
xchg
insl
in
xchg
daa
mov
adc
cmpl
sbb
daa
leave
imul
mov
ja
xchg
and
jns
mov
loope
sahf
scas
jle
sub
inc
inc
xchg
or
stc
ds
mov
mov
jp
mov
clc
setg
mov
lock
push
and
sbb
sbb
jne
rorl
xor
mov
mov
dec
and
or
ret
xchg
pop
cmp
dec
mov
rol
sbb
mov
in
aam
dec
or
imul
ret
mov
test
jae
out
fldcw
jge
ja
dec
imul
add
repz
ss
mov
shl
popf
loopne
jnp
mov
adc
push
out
dec
fadd
cmp
and
add
das
or
ljmp
iret
nop
fdivr
fwait
inc
pop
mov
stos
loope
fisubrl
mov
ljmp
adc
ror
ja
lret
iret
sbb
jns
addr16
sbbl
je
jge
dec
gs
pop
arpl
sbbb
insl
addl
sub
in
es
bound
xor
pop
jmp
mov
arpl
addl
test
sub
xor
adc
add
cli
jp
leave
shlb
xor
xchg
cmp
pop
cs
inc
sub
pushf
sbb
loopne
call
pop
mov
xor
sbb
fdivrs
lcall
add
xchg
pop
or
mov
push
xchg
and
sar
jns
pop
fs
jmp
fs
stos
xchg
mov
mov
lods
popa
std
sub
mov
ljmp
xorl
mov
loopne
jl
pop
aaa
mov
xchg
lcall
sbb
stos
shl
dec
mov
dec
adc
xor
push
mov
shlb
cmp
aaa
dec
dec
ret
shll
pop
sub
push
fdivrl
xchg
pop
pop
mov
mov
inc
mov
inc
xor
push
dec
mov
mov
xchg
dec
pop
push
idivl
xchg
cltd
and
cld
cmp
lea
push
ds
pop
shlb
fs
jecxz
call
nop
inc
pop
es
nop
shrl
push
divl
cmp
les
cmp
fisubl
imul
je
loopne
pushf
or
addr16
pop
cmpsb
sbb
mov
lods
flds
aas
mov
lahf
mov
xchg
scas
cmpsb
or
pop
xor
inc
dec
mov
push
add
or
jg
loope
mov
mov
faddl
iret
push
xchg
js
xor
rcll
shrb
inc
cli
mov
adcb
add
hlt
ja
fiadds
inc
rorb
jp
mov
push
pop
xor
add
jg
and
pop
xchg
loopne
ret
xchg
or
aad
cld
bound
testb
scas
push
aas
loope
adc
add
sbb
dec
add
cmp
inc
adc
or
cmp
mov
mov
dec
loopne
cltd
arpl
iret
jmp
sar
rorb
cmpl
imul
jo
mov
lods
in
dec
xchg
cmp
push
xchg
push
fisttpl
add
xchg
or
lahf
pop
and
pop
xchg
mov
lods
sbb
insl
out
shr
cmp
jo
cmp
mov
jbe
scas
iret
call
enter
imul
int3
jno
cwtl
xchg
inc
mov
mov
cld
inc
out
add
lret
xchg
cli
arpl
cmp
rcrb
mov
addl
pop
sbb
and
cmc
push
jl
fs
sbb
adc
es
shll
fidivs
insb
mov
mov
lods
fbstp
test
lret
fs
mov
sarl
dec
mov
ret
mov
push
or
dec
mov
popa
dec
jae
in
adc
jo
jno
and
addr16
xchg
push
add
mov
sysenter
push
rcl
test
fcomps
jno
out
inc
xchg
hlt
mov
sarl
xlat
pop
imul
jae
incl
fwait
in
ds
mov
popf
mov
fldl
jnp
iret
and
jle
mov
xchg
mov
scas
dec
mov
xchg
or
adc
imul
cld
sbb
imul
aas
jae
pushf
jne
mov
or
int
xchg
cli
das
bound
mov
lcall
fnstcw
ret
mov
jns
sti
inc
bound
adc
imul
dec
ret
xor
lods
ror
bnd
sbb
jge
aad
pop
push
xchg
pop
in
mov
xchg
adc
pop
test
scas
mov
idivl
inc
or
inc
mov
mov
push
jl
pusha
sbb
cltd
ljmp
mov
les
jne
sub
mov
jnp
inc
aam
sbbb
xchg
pop
sbb
loop
fcompl
daa
fcom
sub
andl
jmp
into
lahf
stc
cmpsb
dec
pop
adc
cmp
and
push
sub
popa
sahf
lcall
xchg
lock
aaa
mov
pop
loopne
inc
or
mov
test
addr16
ret
jno
xchg
sub
xchg
jns
adc
mov
or
mov
enter
or
sbb
lret
cmp
ret
or
mov
sub
jle
dec
xchg
ja
nop
scas
imull
sti
jecxz
pop
lahf
call
inc
dec
adc
cmp
push
mov
xlat
xchg
jg
xchg
jp
popa
fs
gs
scas
test
rcrl
shlb
inc
cmp
in
xchg
xor
les
xorl
les
push
or
adc
xchg
sbb
xchg
imul
cwtl
dec
xchg
lock
push
fsubrp
ret
dec
mov
sub
mov
push
arpl
and
jecxz
xor
shll
adc
repnz
fisttps
jge
adc
mov
mov
test
mov
jne
jno,pt
mov
repz
xchg
pop
xchg
adc
jp
lods
lcall
and
sbbl
push
sub
mov
or
out
aas
scas
dec
xchg
aad
lcall
imul
adc
pop
sahf
out
mov
xor
jmp
sbb
imul
mov
xchg
rcll
xor
push
call
cmc
dec
fistpll
int3
jge
xchg
pop
andl
add
roll
push
jmp
push
lret
mov
adc
fwait
repnz
jbe
rcl
push
xor
push
clc
clc
mov
push
push
and
fdivrl
lret
outsl
dec
add
inc
es
jo
pop
cmp
out
rcrl
push
mov
popf
sbbl
cld
mov
sub
mov
adc
push
js
jle
inc
out
sub
push
push
out
pusha
push
and
xchg
call
inc
push
fnsave
cmp
xor
jae
lods
adc
cmp
mulb
ret
sub
int3
mov
mov
mov
into
je
test
mov
mov
rcrb
xchg
mov
rcrb
adc
cmc
clc
pop
mov
les
cmp
mov
lret
adc
jnp
ds
loop
mov
or
loopne
xchg
iret
outsl
sbb
call
mov
sbb
push
inc
add
dec
movsb
jbe
fsubs
xchg
mov
sti
testl
outsb
loop
cmc
mov
into
or
popf
mov
push
insb
out
xorb
in
xor
sbb
movsb
add
aas
xchg
sub
leave
shl
mov
into
mov
ds
popa
push
imul
jbe
mov
cmpsl
xor
pushf
cmpb
das
jo
and
lcall
iret
xchg
sbb
fwait
push
mov
inc
imulb
ljmp
sbbb
inc
push
clc
mov
shlb
dec
push
jne
cld
xor
enter
inc
roll
mov
fisubs
adcb
ret
or
les
bound
pop
mov
js
and
cmp
jg
inc
push
pop
negl
pop
add
test
add
fcoml
xchg
push
mov
cmp
lods
xchg
add
mov
out
aam
or
adc
jmp
xor
and
adc
xor
pushf
hlt
lods
in
or
addl
sbb
lret
in
jge
jecxz
xor
mov
add
lret
add
fidivs
inc
dec
inc
lods
jnp
sahf
push
leave
sbb
cmp
aad
ljmp
push
xor
stos
shll
adc
jle
sbb
loop
std
sub
fsubp
add
xchg
mov
jle
in
push
jno
push
mov
xor
fsts
pop
jmp
mov
out
push
jne
sub
jg
xchg
jnp
sub
fwait
movsl
mov
test
in
das
ds
mov
fwait
or
jb
popf
adc
shll
stos
outsb
cwtl
pop
sub
clc
sub
jp
inc
dec
and
mov
daa
fnstenv
es
pop
cld
js
dec
outsb
in
gs
xchg
adc
pushl
xorb
pop
jb
inc
dec
pop
push
adc
inc
mul
popa
pusha
lock
mov
jg
jle
inc
dec
movl
insl
repnz
cmp
in
sub
cld
mov
add
int
push
or
xchg
or
push
xlat
insl
inc
cltd
sahf
and
lods
xchg
mov
sub
xchg
xor
sbb
and
imul
pusha
mov
fisttps
ds
cmp
add
sbb
push
mov
in
sbb
enter
dec
jae
xchg
fimuls
cmpsb
inc
or
add
rcrl
aaa
imul
inc
dec
sub
fldcw
sbb
xor
leave
push
lret
dec
ds
sbb
ja
movsl
fwait
fdivrs
stos
fldl
ret
dec
das
incl
mov
push
sub
dec
out
push
imul
imul
pop
sub
sti
or
inc
fcmovne
xchg
xor
ds
stc
out
ja
and
fdivs
mov
loope
sti
rcll
adc
ret
xlat
or
nop
dec
sbb
jno
out
fstl
popa
adc
inc
cmc
inc
into
out
xor
adc
shll
hlt
xor
and
sub
lds
orl
test
add
mov
andb
or
sub
scas
jecxz
leave
lods
jmp
dec
add
xor
cmp
in
repnz
paddb
push
adc
xchg
into
or
mov
aam
dec
pop
outsb
inc
push
addr16
ret
add
pop
adc
icebp
ss
pop
sub
in
jnp
pusha
xchg
cmpsb
cmp
mov
mov
test
into
push
iret
xchg
xchg
and
adc
push
jp
sub
mov
imul
lea
xor
ss
and
sbb
int
aaa
push
pop
imul
or
add
push
shll
ja
stc
cli
dec
push
pop
add
mov
mov
movsb
jecxz
add
outsb
xchg
test
mov
mov
push
and
movsb
mov
dec
push
xor
lods
pop
idivb
sbb
cli
dec
pop
test
and
mov
int
sbb
inc
dec
sub
jle
mov
and
jle
mov
cld
dec
into
pop
pop
addr16
outsl
mov
cmp
and
jbe
xchg
or
movsb
jp
mov
movsl
push
sbb
xor
inc
movsl
add
popf
test
mov
int
push
mov
sbb
jle
imul
sbb
or
add
inc
xchg
inc
inc
push
pop
sub
aam
in
fsubs
mov
iret
pop
xchg
popf
jecxz
mov
jmp
idivl
test
xchg
test
fmuls
mov
adc
push
mov
lahf
fcomi
cmp
dec
rcrl
mov
inc
scas
xchg
mov
jns
xor
jne
fdivs
out
test
mov
jne
cmp
mov
add
fistps
mov
mov
cmp
std
xor
fs
push
imul
jbe
pop
sti
lahf
jg
enter
lods
enter
gs
mov
adc
divl
push
mov
mov
lret
xchg
frstor
insb
ret
leave
jmp
enter
mov
rolb
test
loope
push
cmc
out
pushf
jb
icebp
push
inc
insl
lea
and
xchg
and
lret
push
xrelease
sbb
sub
xor
fnsave
xor
mov
into
cli
jle
pop
test
fwait
pop
lahf
lahf
lret
mov
imul
pop
sbb
sbb
insl
adc
into
imul
aas
dec
sahf
mov
add
pop
jg
clc
mull
filds
loopne
ret
icebp
dec
sub
sbb
xorb
iret
pop
in
dec
sbb
cwtl
sbb
sbb
insl
adc
ret
ret
loope
mov
lds
loopne
xlat
rclb
lock
int3
jge
mov
rcll
xlat
stos
xor
cmp
mull
mov
adc
lret
bound
inc
out
sbb
or
push
jg
push
movzbl
lock
sub
int3
es
xchg
mov
repnz
mov
clc
mov
pusha
in
push
adc
xchg
pop
xor
cli
or
sbb
and
sbb
fstpl
leave
cld
in
das
inc
and
insl
mov
out
xor
movsl
adc
es
mov
push
jo
adc
mov
add
xchg
adc
mov
scas
ss
inc
out
rol
push
mov
pop
and
dec
jno
sbbb
sub
push
div
mov
add
jle
xor
clc
xor
mov
push
inc
cmp
add
mov
add
mov
rcrl
or
jle
jmp
dec
lds
cmp
or
sti
inc
icebp
jmp
push
nop
jge
and
fldcw
push
jg
ja
inc
sahf
stos
andb
sub
stos
cmp
mov
sub
pop
push
nop
cmp
bound
lahf
xor
jo
cmp
movsl
in
filds
cmp
dec
negl
jle
insl
push
push
loop
pop
test
mov
push
push
ds
xor
insb
out
imulb
adc
sub
pop
movsb
sub
scas
xchg
adc
jne
adc
cmp
fwait
je
adc
cmp
push
jge
jmp
pop
orl
dec
fs
push
js
imul
and
mov
icebp
es
push
pop
inc
jle
push
in
sbb
dec
mov
cltd
dec
ljmp
cmp
stc
lds
inc
pop
loope
mov
in
popa
push
rorl
cmp
dec
aad
aaa
pushf
das
add
push
cs
dec
adc
sub
pop
aad
xor
popa
out
xor
fcoms
jecxz
sbb
lret
xor
inc
sbb
sub
repnz
sahf
pop
movsl
test
mov
jl
nop
aad
imul
cmp
sahf
xchg
mov
xchg
dec
cld
inc
add
loopne
jae
cld
sbb
das
sub
jecxz
jmp
jnp
loop
dec
mov
push
mov
push
xchg
mov
cmp
ret
or
ss
mov
ss
aam
jae
mov
lods
xchg
pusha
cltd
lock
es
push
xchg
cmpsb
xor
mov
mov
mov
decl
into
popa
aad
or
leave
mov
andl
mov
sub
aad
xchg
mov
loope,pn
mov
and
lret
faddl
fisubl
mov
cmp
jle
xlat
inc
mov
daa
xchg
add
inc
xchg
aaa
testl
jp
fldl2t
aas
shlb
clc
shr
shrl
lock
mov
xor
cs
imul
xchg
jmp
mov
subb
cmp
xchg
stos
xchg
adc
int3
mov
xchg
or
xor
xchg
cmpsl
mov
or
adc
mov
lcall
mov
push
pop
push
lcallw
movsl
cwtl
mov
addr16
sub
cmp
je
orb
fcompl
cmp
xchg
dec
mov
rcr
fistps
cmp
xor
ret
sahf
lods
push
and
adcw
lds
push
push
mov
and
sbb
sahf
xor
pop
addl
dec
cmpl
push
adc
ja
push
lea
push
dec
std
xorl
sub
mov
outsb
dec
cmp
mov
outsl
mov
xchg
in
ret
ret
pop
lret
decl
inc
or
dec
iret
inc
mov
sub
loop
or
sbb
xor
das
andb
push
cmpsl
outsb
cltd
aad
mov
cmp
jge
movsb
push
fistps
push
cltd
xlat
mov
in
jl
clc
dec
in
cvtpi2ps
push
stos
rcrl
push
push
or
adc
pop
cs
jne
movsb
data16
rclb
sub
cli
shlw
xchg
insl
pop
push
xor
jnp
jecxz
ret
outsl
ja
push
inc
push
adc
imul
and
mov
jl
call
lock
iret
outsb
push
dec
xor
xchg
sub
fcompl
cwtl
rcrl
popa
pop
xchg
inc
jmp
cli
pop
push
aaa
pop
addr16
pop
test
mov
popf
cwtl
jo
or
mov
mov
daa
cmpsl
push
mov
rorb
xchg
adc
ds
rolb
ja
inc
jns
lods
mov
test
mov
adc
xor
sahf
mov
lahf
test
xchg
xchg
pop
push
std
sub
dec
sbbl
and
push
lock
or
push
outsl
push
cmp
ss
insl
loop
shll
ret
sbb
dec
jg
jle
es
cmpsb
insb
jbe
jne
andl
mov
dec
pop
in
dec
in
add
arpl
cmp
sbb
adcb
cmp
stos
test
cmc
sub
mov
lahf
xlat
ret
in
pushf
std
push
sti
mov
out
xor
jne
int3
in
std
push
xchg
daa
fdivs
std
dec
dec
xor
pop
lods
sbb
xor
movsl
jl
popf
sub
push
xchg
daa
out
adc
in
or
xchg
xor
imul
push
dec
fs
mov
lods
lret
mov
pop
orl
xchg
xchg
insb
sbb
push
jecxz
es
fistpl
loope
adcb
sub
xchg
scas
pusha
movl
xor
insb
movsb
repnz
dec
movsl
mov
cmp
clc
push
cld
add
rolb
repnz
inc
hlt
stos
outsl
scas
lds
mov
xchg
sbb
outsb
pop
test
mov
loopne
addr16
gs
out
cmp
jno
sbb
xchg
push
or
push
mov
mov
mov
jmp
divb
add
add
hlt
clc
icebp
out
aad
les
add
lcall
pop
push
sub
dec
jae
out
cmpsb
jecxz
inc
jbe
xchg
mov
jbe
xchg
pop
sahf
xchg
inc
fsubrl
mov
into
nop
fisubrl
lahf
iret
lret
pop
orl
push
sub
fwait
out
add
hlt
jmp
insl
or
mov
push
sub
sub
jb
adc
adc
mov
fcompl
pushf
iret
xchg
dec
cli
or
or
mov
jecxz
leave
das
sbb
int
push
lahf
xchg
adcl
aas
aas
pop
mov
mov
push
call
xchg
sub
mov
lods
dec
jl
push
adcl
data16
jb
mov
jb
push
movsb
pop
into
mov
push
xchg
rorb
outsb
adc
pop
aaa
inc
lcall
mull
jbe
stos
mov
cmp
pop
roll
roll
jae
ljmp
mov
sub
movsl
sub
repnz
loop
out
lods
imull
scas
js,pt
fisttpll
or
cs
jo
jno
rcll
test
dec
jmp
or
and
pop
inc
and
push
loope
cmp
stos
scas
mov
imul
and
test
sbb
xor
lea
jl
or
and
mov
xchg
mov
nop
orl
sub
xor
lods
fadd
in
add
lods
mov
xchg
iret
insb
testb
push
and
jnp
call
mov
scas
jg
inc
ds
or
and
and
icebp
pop
arpl
and
outsl
mov
xor
arpl
jne
enter
xchg
jo
push
adc
xlat
push
rcr
sub
cld
pop
aad
xchg
xor
jle
jnp
xor
icebp
dec
push
dec
fdivrp
cmp
test
les
add
popf
push
popf
sub
push
outsl
add
fiaddl
pop
das
in
mov
mov
ret
jmp
sahf
adc
sub
jmp
insb
push
inc
add
insl
add
enter
data16
or
das
gs
push
test
js
inc
sarl
dec
dec
mov
jns
and
and
push
cltd
dec
cld
icebp
jmp
add
and
cwtl
adcl
movlps
std
inc
out
insb
jg
adc
and
xor
pop
jge
jle
aaa
cwtl
mov
push
mov
mov
push
cmpsb
int3
inc
inc
fbstp
push
jno
imulb
sarl
dec
neg
mov
pop
inc
popf
or
pop
jo
popf
pop
clc
mov
jle
add
mov
sbbl
int
push
fistps
loopne
sahf
je
push
push
push
repnz
je
mov
pusha
sarl
dec
push
lret
cli
cmpsl
jmp
ret
js
xchg
inc
shlb
dec
rol
clc
popf
and
and
fwait
scas
nopl
or
insb
std
in
mov
inc
push
movsb
movsb
cld
js
or
loopne
scas
push
icebp
cmp
aas
cmp
inc
cmp
sub
adc
pop
xchg
cmp
idivl
sub
orb
leave
cmpsb
fs
popf
aas
add
xor
mov
sub
lods
jp
inc
lcall
xlat
jge
call
cwtl
imul
lret
mov
arpl
sahf
mov
and
loop
in
xchg
xor
add
and
inc
push
mov
or
push
jmp
pop
or
mov
mov
and
ja
insb
aad
mov
hlt
sbb
jmp
jp
icebp
neg
sub
lods
jl
fisubrs
pop
aad
mov
shll
jg
nop
dec
mov
insl
outsl
hlt
push
call
jge
pushf
jae
jae
sarl
lret
dec
outsb
pop
fidivrs
aaa
sahf
dec
jmp
cmp
fbstp
mov
orb
adc
sub
test
or
stos
fdivrl
xchg
mov
sub
add
je
mov
mov
inc
inc
mov
notb
loope
roll
xchg
xchg
xor
sbb
push
dec
mov
aam
pushf
xchg
sub
cmp
mov
enter
or
dec
and
outsl
cmp
imul
cltd
imul
cld
outsb
add
xor
jb
add
and
xchg
mov
push
fsts
dec
xor
xchg
out
bound
call
or
out
movsl
in
mov
mull
stos
mov
mov
xor
pop
sbb
in
inc
cmc
popa
push
stc
repnz
js
sbb
in
sub
dec
ja
xchg
movsl
sub
sbb
ficoms
sahf
sahf
sbb
into
mov
jl
jge
popa
jne
add
hlt
add
xor
push
je
incl
outsl
dec
ret
xor
rorl
test
test
cmp
inc
gs
popf
inc
sub
mov
test
jmp
mov
rcr
movsb
mov
xchg
mov
out
pop
jb
out
bound
flds
pop
insb
cmpsb
adc
xchg
insl
xlat
enter
ficoms
jae
mov
xchg
inc
mov
mov
fwait
add
and
sbb
cmp
push
test
popf
push
scas
rolb
xchg
std
dec
or
jno
and
sarb
sbb
in
xchg
jne
int3
aad
stos
testl
sbb
jbe
jecxz
and
push
imul
out
flds
pop
lcall
fadd
int
jnp
divl
jmp
push
xor
outsb
or
shrl
cmpsb
adcb
sarl
pop
adc
mov
mov
adc
mov
fwait
in
xchg
clc
out
sbb
adc
or
xchg
sbb
cmp
sbb
jno
cmpsl
pusha
aaa
addl
pop
cmpsl
inc
xchg
push
dec
cwtl
lahf
add
dec
add
insl
aad
adc
rol
std
inc
sub
add
dec
loop
pop
pop
pop
mov
or
xchg
dec
sub
mov
dec
push
das
sbb
jno
mov
and
mov
rcrl
shr
dec
inc
cmp
xchg
add
loope
push
insl
cmpsl
fmuls
iret
jmp
int3
arpl
and
dec
cmp
push
jnp
faddl
shrl
mov
pop
dec
mov
inc
popf
inc
dec
push
pop
mov
scas
es
test
push
push
sbb
lcall
jmp
sub
scas
test
hlt
mov
lea
mov
aam
pop
dec
pop
pop
mov
decl
icebp
xlat
jno
push
push
mov
lret
fldcw
movl
push
mov
inc
stos
imul
int3
mov
pop
cmp
push
or
jg
movsb
and
mov
dec
and
mov
jne
mov
outsb
dec
add
mov
popf
scas
sub
and
imul
ret
pop
push
ret
imul
fwait
clc
pop
cmpsl
mov
cld
push
in
push
int3
test
push
stos
fs
sub
dec
dec
adc
or
rolb
and
in
andl
stos
pop
dec
or
jb
jne
push
mov
add
mov
pop
or
adcb
adc
orl
scas
mov
clc
sub
addb
jmp
xchg
lods
mov
nop
xchg
fwait
jge
cs
mov
and
or
mov
jmp
cs
push
dec
jns
pop
negl
add
aam
mov
pop
scas
movsb
pop
mov
jbe
fcomp
vphaddubq
mov
mov
sbb
fadds
pop
add
ret
pop
gs
lcall
insl
pop
dec
cmp
xchg
aaa
mov
add
add
mov
xchg
sbb
aaa
mov
ret
cvtps2pd
in
sub
mov
cmp
cld
sarb
shlw
mov
imul
dec
or
lods
xchg
movsb
mov
sbb
loop
jne
insl
js
inc
add
vmovsldup
push
movsb
mov
jne
mov
push
push
mov
dec
subb
xchg
jnp
xchg
imul
mov
outsl
notl
xor
test
je
and
stos
pop
ficoms
cmp
sbb
pop
int3
push
xchg
push
inc
clc
add
dec
lea
and
xor
add
test
push
loopne
into
pop
mov
popa
jbe
push
and
mov
call
dec
sub
sbbl
xor
fwait
xor
dec
push
dec
jl
xchg
cmc
jp
xchg
or
pop
test
cmp
xchg
mov
add
mov
scas
sbb
pop
ds
stos
repnz
mov
push
iret
dec
jmp
mov
call
pop
mov
out
inc
ret
jg
clc
mov
xchg
std
cmp
fmull
fbstp
lea
jmp
sti
cli
mov
xlat
std
test
cmp
jne
rclb
pop
mov
sti
dec
pop
sbb
dec
sbbl
std
loopne
push
cmp
ret
sbb
cmp
dec
jle
or
or
inc
cli
fcomps
inc
aad
push
scas
lds
popf
adc
fsubp
sbb
pop
jno
jno
sar
cs
cmpsb
repz
ficompl
jmp
xor
fnstsw
js
push
fcomps
sarl
sub
out
lahf
push
out
popf
outsb
outsb
push
scas
test
arpl
adc
jle
inc
add
movsb
mov
mov
xor
mov
imull
in
int3
data16
test
repnz
jnp
and
movsl
fidivrs
and
xor
outsb
scas
fmuls
lods
xorl
sbb
test
adc
lods
les
mov
pop
and
scas
sbb
pop
fsubl
hlt
push
roll
inc
int
push
pop
out
pop
ss
and
xchg
xchg
movlps
xlat
leave
scas
dec
pop
push
lcall
lods
sbb
push
dec
test
xchg
xlat
loop
iret
jne
mov
cmpl
mov
mov
jmp
sbb
mov
mov
add
xor
std
mov
sbb
mov
adc
stos
cld
stc
andb
or
push
xor
adc
lret
mov
fdivl
sbb
loop
push
outsl
cmp
fsubs
adc
cmp
stos
ret
mov
jmp
fsubp
mov
jle
jo
add
test
into
cltd
adc
adc
cs
dec
out
lds
jge
dec
arpl
jnp
pop
enter
jns
add
cmpsb
lahf
imul
rorl
mov
jle
sub
out
mov
mov
mov
inc
jno
pusha
test
andb
and
xchg
lea
jle
add
mov
cmpsb
push
adc
pop
ss
pop
mov
xorl
pop
pop
xor
in
sub
cmc
mov
push
test
sarb
adc
cmpsb
sub
inc
inc
aas
ret
into
mov
push
dec
sub
insb
cmp
adc
shl
movsl
cmpsl
add
push
fwait
mov
and
xchg
inc
jle
stos
imul
scas
imul
ret
lods
pop
mov
in
addr16
add
repz
sahf
dec
xor
push
mov
loopne
mov
push
stc
cmp
adc
or
jo
ljmp
in
stc
fdivrs
inc
push
sbb
or
aad
jb
adc
add
mov
or
mov
sahf
sub
adc
out
popf
in
inc
outsb
push
test
fisttpl
pusha
dec
inc
loop
inc
int
out
cmp
push
fstps
jo
pop
adc
movsb
mov
shlb
inc
outsl
jae
inc
clc
addr16
xorl
fsubrl
pop
xchg
sbb
mov
xor
push
mov
add
or
push
mov
ficoml
fsubl
lahf
or
hlt
jb
dec
or
cmp
aad
movsl
push
fisubs
cmp
out
insl
sahf
cwtl
cmc
mov
bound
sbb
clc
pop
movsb
addl
jmp
mov
mov
ja
pop
sub
jecxz
push
jae
ret
push
xchg
push
jp
mov
dec
sbb
sub
pushf
mov
mov
fiadds
push
faddl
in
dec
clc
repnz
jb
mov
dec
cmp
pushf
sbb
fdivrl
sbb
notl
call
int3
out
sti
push
rcrb
xchg
psllq
scas
hlt
pop
or
lcall
inc
pop
rcl
subb
jb
push
shl
pop
xor
adcl
dec
push
pushf
sbb
xorb
sub
push
push
mov
xchg
mov
add
push
shl
adc
adc
adc
lahf
dec
fnstenv
std
mov
mov
sbb
cwtl
add
dec
rcl
jle
inc
jnp
mov
js
mov
mov
inc
mov
addr16
sbbb
inc
ljmp
add
sbb
insl
mov
in
inc
mov
xor
add
mov
mov
in
pop
bound
dec
sbbb
jle
movsb
fwait
jns
int
ds
sub
sbb
jb
dec
jo
mov
scas
int
or
inc
popf
pop
sub
jae
xor
mov
stc
push
enter
leave
inc
test
aam
lea
push
pop
dec
mov
rcrl
and
adc
fs
out
pop
add
cmp
test
push
xlat
outsl
js
push
push
sbb
lock
mov
and
mov
iret
scas
js
cmpsb
mov
cld
leave
inc
roll
loopne
mov
pop
out
dec
dec
push
push
out
pextrw
dec
pusha
stc
push
push
xchg
mov
cmpsl
xchg
bound
cmp
imul
cwtl
push
fmulp
add
jl
add
jae
stos
sub
outsb
js
sbb
sbb
and
data16
cld
iret
mov
xor
aam
cmp
adc
iret
arpl
and
loope
xchg
and
add
loopne
jl
testl
sub
cmp
rorb
xor
out
dec
push
scas
pop
fninit
cwtl
xlat
ja
movsl
jo
leave
and
jb
jge
repnz
daa
push
popf
push
je
adc
jmp
fisttpll
push
xchg
sbb
cmp
insb
mov
es
adc
pop
hlt
dec
icebp
loope
mov
pop
fimuls
rcll
cmc
push
loope
push
loop
adc
jp
inc
mov
mov
mov
adc
cmpsl
roll
xchg
xlat
push
adc
repz
leave
dec
aam
add
stos
sub
jb
sbb
sahf
lret
adc
ret
lahf
ret
sbb
pop
out
aas
jno
dec
cmpsl
stos
sbb
mov
aad
push
mov
int
cli
ja
stc
add
jb
mov
pusha
mov
or
mov
jno
lea
jge
mov
mov
popa
pop
out
push
clc
sahf
sbb
mov
pop
js,pn
cld
fsubr
push
pushf
cli
scas
std
pop
fwait
mov
add
hlt
int
dec
std
in
xchg
xor
or
sbb
mov
pop
test
xchg
mov
cli
add
add
sub
sbb
clc
inc
in
int
xor
orb
add
cli
sub
jno
mov
pusha
mov
icebp
and
xlat
imul
inc
incl
dec
lcall
dec
daa
cs
in
jnp
jnp
mov
addr16
xchg
in
lret
and
add
aaa
mov
and
push
rol
int3
sub
sarb
xor
mov
testb
std
mov
xor
and
ficoms
lods
cld
icebp
xchg
out
std
cmc
cmpsb
lret
xor
pushf
mov
enter
popa
push
jmp
and
sub
inc
rcl
std
pop
mov
lock
push
int
in
xor
or
pop
repz
xchg
pop
mov
rcll
das
adc
lret
into
insl
imul
cmp
mov
in
mov
test
push
dec
cmpsb
mov
scas
inc
arpl
mov
insl
inc
gs
inc
xor
adc
push
rolb
out
les
mov
outsb
cwtl
xchg
push
mov
scas
inc
inc
fisttpl
nop
mov
test
ja
clc
cmp
cmp
xor
rclb
or
les
cmpsb
nop
xor
and
mov
hlt
pop
cmp
daa
sbb
shl
xor
int
or
loop
fnstsw
and
push
mov
jbe
ljmp
push
cmpsl
and
xor
adc
js
insl
sbb
sti
pushf
add
lret
jbe
dec
push
pop
jbe
hlt
insl
pop
xor
cld
sub
xor
icebp
andl
fdivl
test
mov
scas
push
aas
and
insl
pop
mov
mov
cmp
pop
std
loopne
lret
jle
dec
outsl
xchg
and
shll
insl
arpl
lahf
arpl
push
xchg
sub
adc
mov
push
insb
jbe
ljmp
sub
and
push
jmp
insb
push
mov
pop
int
inc
jne
jae
das
call
and
adc
push
adc
dec
jg
nop
mov
int3
mov
pop
push
pop
dec
mov
js
xchg
sub
imul
push
push
inc
push
mov
idivb
lods
jnp
pop
pop
push
out
sbb
mov
out
mov
std
jle
mov
cmp
incl
push
mov
pushf
stc
movsl
shl
test
jecxz
xor
int3
add
or
js
fiadds
loope
sub
addr16
cmp
ss
andnps
popf
lcall
jnp
lcall
push
outsl
shll
and
loop
xorb
repz
sti
test
cmp
lods
aad
dec
and
fists
jecxz
push
add
cmp
outsl
mov
cmp
aaa
pop
movsb
lahf
xchg
or
add
imul
cs
cmp
leave
sbb
in
and
adc
mov
xchg
jb
mov
pop
lea
dec
jns
incl
cs
enter
xor
mov
cmpsb
mov
sub
lret
sub
pop
xchg
sbb
sbb
fdivrs
ljmp
movsl
sub
mov
jecxz
or
mov
inc
test
pusha
sti
xchg
fs
dec
dec
dec
jge
dec
ret
loop
movsl
add
sbb
fcompl
aam
xor
push
test
fwait
arpl
inc
aaa
imul
push
mov
jo
pop
adc
push
inc
xor
int3
in
mov
push
cli
xchg
cmp
push
ja
ds
adcb
divb
sub
nop
dec
fmuls
mov
add
push
out
ds
pop
xchg
and
cld
mov
push
imul
or
nop
xchg
ret
sarl
xchg
fiaddl
xor
add
and
sti
lcall
adc
pop
aam
es
and
inc
mov
xchg
mov
inc
aas
xchg
mov
push
jne
mov
movsl
push
add
movsb
imul
insb
and
sub
or
clc
scas
pop
addb
mov
cmp
jno
sbb
xor
add
test
and
scas
pop
xor
scas
mov
adc
hlt
jle
inc
inc
ljmp
in
lcall
pop
out
ret
lret
paddusb
add
xchg
out
xchg
push
xchg
icebp
sub
mov
iret
cmpsl
push
sub
idiv
mov
pop
mov
cld
mov
lea
jne
mov
fiaddl
push
inc
jmp
cmpsb
cmp
and
cmp
lock
sub
cwtl
pop
jbe
mov
movsl
inc
into
cmc
add
loopne
xchg
ret
sbb
mov
sbb
mov
scas
jle
das
divl
xchg
mov
mov
clc
pusha
xchg
test
mov
scas
xchg
cwtl
shl
xorl
js
push
xor
mov
lea
mov
inc
jmp
xchg
fnstenv
pop
xchg
pop
pop
mov
xchg
cmp
out
leave
xchg
jb
and
ja
out
test
sbb
sbb
cwtl
adc
xor
mov
jle
xchg
push
dec
loop
ds
ss
cmp
or
bswap
mov
or
push
pop
lret
adc
cld
into
mov
aad
fs
pop
push
cmpsb
dec
jnp
repz
jbe
cmpl
inc
fbld
add
jecxz
xchg
push
cli
jns
push
aad
fwait
xchg
push
sub
sub
or
pushf
adc
xchg
dec
xchg
mov
adc
dec
mov
jecxz
scas
cltd
fists
jnp
xor
loopne
aam
cmp
ds
mov
js
sbb
mov
sub
mov
mov
rol
loop
cld
imul
or
clc
insb
std
imul
or
xor
cmpsl
sbb
dec
pusha
xchg
fs
outsl
inc
sahf
xor
sub
cmpsl
xor
repz
loop
mov
dec
push
mov
lahf
mov
and
push
fcomps
inc
je
pop
dec
enter
popa
sbb
int3
negb
inc
push
xor
testl
inc
std
rclb
add
lods
dec
cmpsl
push
mov
jecxz
lds
scas
cmp
and
pop
repz
scas
loopne
mov
sti
jmp
inc
cmp
loope
push
cmpsl
lcall
ror
mov
mov
scas
in
aas
pop
test
movsb
cmp
mov
in
shl
push
xchg
mov
push
ret
inc
push
mov
mov
adc
adc
dec
into
pop
ljmp
popa
sbb
inc
cmpsl
lcall
xrelease
call
mov
in
rorb
pusha
mov
sbb
scas
rorb
xchg
push
outsl
cmpsb
push
xor
inc
es
sub
jmp
std
xchg
cmpsl
pop
push
loopne
cmpsb
or
dec
rorl
adc
adc
xchg
sbb
xchg
push
lcall
repnz
hlt
aaa
jge
mov
ljmp
push
sbb
lds
js
or
daa
pop
jo
repnz
dec
sbb
cli
fnsave
add
mov
aad
out
mov
scas
mov
sub
jmp
push
mov
lods
sub
ret
lcall
cmp
xor
stos
and
outsb
add
imul
sub
test
sbb
mov
sbb
inc
arpl
popf
push
or
jne
fcoml
loope
mov
or
sbb
mov
repz
xor
jge
cld
sub
xor
out
imul
fcmovb
and
sub
sub
sarl
inc
dec
shll
adc
sahf
adc
sbb
test
or
fldenv
jnp
loope
fisttps
mov
loope
add
lret
cli
and
cwtl
in
roll
inc
sub
sarb
xor
test
adc
stc
jg
in
fs
mov
je
or
les
jl
mov
aam
lods
push
sub
jmp
fldenv
stos
or
movsb
js
movsb
lahf
mov
add
mov
dec
or
nop
test
cwtl
mov
insb
push
dec
int
repz
adc
push
add
push
cmp
sbb
jle
mov
dec
jmp
in
mov
mov
nop
aaa
mov
push
insb
mov
mov
jecxz
scas
inc
push
std
sbb
fucomp
and
fwait
out
ljmp
pop
dec
in
imul
ds
or
inc
xchg
std
pmaxsw
xor
dec
sub
mov
xchg
sub
push
sbb
jl
push
cmpsb
ljmp
popf
push
popa
outsb
shrl
aad
jmp
je
jne
cmp
mov
jnp
push
leave
les
stos
aad
push
fs
pop
pushf
mov
pushf
inc
jl
rcrb
xchg
out
loope
sbb
mov
jo
sbb
andl
daa
pop
popa
inc
mov
adc
jge
rcr
pusha
adc
das
add
repz
inc
adc
js
add
enter
inc
stc
push
pop
and
fwait
aam
cltd
insl
lds
inc
ljmp
xchg
dec
xor
jno
adc
push
out
sub
push
fadd
xchg
shl
lret
lcall
pop
add
test
js
ja
push
jp
insb
fwait
popf
mov
in
test
data16
adc
fstl
sbb
add
push
cmp
mov
or
xor
and
bound
lret
mov
dec
push
movsl
mov
mov
je
out
stos
push
jp
dec
icebp
rclb
addl
or
repnz
data16
sbb
in
and
std
sti
pop
sbb
mov
mov
mov
lea
pop
mov
xorl
push
stos
cmp
out
popf
jns
sub
xchg
bound
lcall
xor
idivl
test
mov
insb
dec
adc
push
sbb
js
mov
and
xor
adcb
insb
xlat
sub
ficomps
cmp
ret
test
sub
cli
repnz
dec
pusha
or
in
test
inc
mov
pusha
push
mov
rcrl
or
addr16
mov
adc
push
inc
cmc
pushf
call
frstor
into
and
shll
test
out
sbb
jae
fs
test
adc
test
out
outsl
cmpsl
stc
mov
je
je
push
mov
jo
imul
sbb
cmp
adc
push
add
or
or
pop
pop
push
outsb
xor
out
jle
pusha
adcl
pop
test
mov
insb
mov
xor
and
test
dec
xor
add
jno
mov
fs
xchg
lret
mov
jns
mov
inc
jb
dec
inc
out
cmpsb
pop
imul
add
mov
xlat
push
les
daa
inc
test
or
and
push
xlat
rcll
test
mov
adc
and
dec
lret
sarl
inc
test
adc
push
mov
mov
cld
hlt
and
sbb
imul
in
mov
jae
adc
sub
sbb
inc
jp
mov
shll
pop
data16
jns
rorb
fiaddl
in
xor
cmc
cmp
sbb
clc
pop
sub
pop
and
sub
hlt
xchg
xchg
pop
jmp
mov
sti
cld
push
out
and
xchg
js
push
stos
loopne
imul
data16
jmp
sbb
mov
popa
inc
sbb
cmpsl
and
sub
mov
iret
push
mov
jp
xchg
pop
inc
enter
push
sbb
jns
stos
sub
rcrl
cmpsl
imul
pop
repnz
das
das
add
and
aam
dec
push
dec
aas
lret
cs
leave
shr
lret
enter
in
lret
cs
mov
sahf
int
rcll
hlt
lds
cmc
xor
pushf
jbe
fistpl
or
int
jl
repz
sti
add
fsubrl
pop
cmp
jae
adc
push
movsb
scas
adc
jg
fsts
ja
lret
or
rcrl
jbe
jecxz
cmc
sub
movsl
dec
mov
pop
or
mov
out
xchg
cli
popf
inc
xor
rol
dec
and
enter
sbb
jmp
or
fdivrl
iret
sti
mov
push
out
out
add
push
icebp
inc
cmp
adc
aad
in
and
icebp
mov
jmp
inc
pop
mov
and
les
inc
icebp
dec
push
lea
push
push
out
loopne
shufps
rolb
pop
aas
xchg
in
xchg
cmp
inc
inc
pusha
mov
out
push
lahf
sbb
mov
fs
or
mov
lods
mov
aaa
add
inc
das
call
fsubl
xorl
pop
insb
pusha
jl
fcoms
pop
adc
sahf
lea
jno
xor
sbb
push
inc
ds
cltd
test
pop
loopne
inc
mov
mov
test
sbb
aam
dec
icebp
movsl
push
enter
insb
lret
dec
sahf
jecxz
ds
xor
push
inc
leave
mov
sbb
push
dec
subl
mov
pop
jmp
mov
add
stos
mov
push
mov
mov
sbb
dec
inc
arpl
inc
cmp
ljmp
mov
cmp
jb
frstor
pop
push
fs
pop
mov
mov
mulb
addr16
cmpsb
out
sbb
test
scas
sbb
stc
lock
cmpsl
jbe
cwtl
push
mov
fimull
inc
xchg
xor
ss
mov
cmp
sub
fnsetpm(287
jo
jno
sub
outsl
adc
ss
cmp
jne
lds
insb
mov
sbb
in
mov
mov
insl
out
nop
sub
bound
inc
std
cmp
xchg
mov
rcll
lds
fs
jae
inc
jns
pop
mov
cmp
adc
or
xchg
mov
call
pop
xor
icebp
out
test
push
idivl
sahf
out
lret
or
test
jle
cmp
int3
into
out
enter
lods
cld
mov
xor
xor
rcll
add
rcl
cli
sub
xor
ljmp
inc
cmp
outsl
push
sbb
push
mov
cmp
jbe
jbe
mov
dec
movsl
pop
popl
push
xchg
sub
rcrl
jge
sub
sbbb
sub
dec
fs
clc
leave
push
outsb
mov
cmc
mov
nop
out
sub
push
lret
fcomi
mov
ret
mov
sub
sti
add
jo
cmp
in
notb
jmp
dec
sti
cmp
cmpsl
jmp
lods
outsl
jle
sbb
xchg
xor
jae
dec
jle
jmp
shrl
ja
inc
jmp
in
xchg
insl
and
push
mov
aas
sbb
push
cmpsl
or
sbb
out
cmc
scas
pop
mov
jno
loopne
repz
sub
repnz
dec
mov
pop
cmp
aad
aas
mov
das
ret
sbb
mov
mov
outsl
sub
cs
mov
cld
in
cmp
ja
cmp
jns
test
xor
and
sbb
or
cs
sub
int3
fmuls
pop
dec
fdivl
aas
pop
sub
mov
rorl
xchg
jecxz
add
inc
fstpt
cwtl
nop
adc
and
mov
mov
cld
push
dec
aam
pusha
add
cmp
lds
cmp
xorl
ds
loope
test
mov
arpl
movsl
mov
mov
push
fimuls
mov
movsb
leave
mov
mov
int3
dec
outsl
sbb
lret
adc
xor
jmp
insl
jp
loop
or
aas
imul
mov
fnstsw
shrl
mov
les
jo
inc
jo
mov
jmp
mov
mov
clc
inc
mov
mov
dec
cltd
lcall
xchg
jbe
loop
nop
push
scas
lahf
stc
mov
push
xchg
jge
dec
fsubs
in
stos
add
sub
pop
jae
xor
out
lock
xchg
cld
sub
push
mov
pop
pop
jmp
push
cmp
ss
fsub
ljmp
xchg
gs
and
sub
insl
lret
jge
scas
aas
cmp
out
xchg
xor
or
inc
sarl
xor
push
mov
insl
cmp
xor
cli
xchg
gs
sbb
cmp
jo
mov
cmp
lock
idivb
in
lock
mov
testb
aad
sahf
xor
mov
movsb
in
decl
lods
xchg
xor
jmp
inc
notb
push
mov
xchg
mov
fcmovnb
mov
pop
jbe
icebp
dec
inc
loopne
shrl
imul
cmpsb
add
js
xor
lock
push
nop
mov
je
pop
in
and
jge
or
mov
pop
dec
or
lds
jns
xchg
cli
divb
lods
aam
mov
rcrb
lahf
or
out
insb
sbb
call
mov
mov
movb
call
fidivrs
jo
pop
sahf
jnp
mov
inc
ret
ret
cmp
push
lret
addr16
fprem1
addr16
push
pop
fistps
sub
or
arpl
je
adc
xchg
adc
pop
rcr
repz
stos
or
push
outsb
xor
adc
mov
cld
fnstenv
pop
dec
mov
xor
pop
mov
and
popa
aas
add
loope
popf
fdivs
inc
sub
push
mov
push
sub
mov
test
pusha
loopne
into
mov
and
xor
loopne
aad
push
cltd
aaa
push
adc
and
fnstsw
lcall
jae
stos
add
testl
sbb
test
xchg
outsl
push
daa
cli
in
mov
call
gs
push
stos
xchg
jecxz
aad
sub
inc
out
es
in
rcrl
mov
je
test
ds
pop
dec
enter
lea
rol
cwtl
xchg
cli
cli
ds
in
xchg
sub
fistpl
jge
mov
popa
repz
icebp
or
adc
in
xchg
in
xlat
sahf
data16
in
jecxz
jbe
adcb
addr16
movsb
jg
add
push
jne
outsl
and
fstl
aaa
nop
loope
sti
push
add
mov
lret
fcomps
ds
sub
fisubrl
dec
xchg
jbe
nop
lock
pop
lds
jb
mov
mov
js
pop
hlt
ss
pop
jmp
ljmp
and
movsb
push
je
adcb
shrl
test
jb
subb
mov
popa
cmovns
mov
cmp
xor
int3
sub
mov
push
ja
mov
push
mov
ss
mov
dec
aaa
test
repz
push
stc
pop
stos
dec
add
mov
clc
loopne
bound
cmp
push
xor
shlb
cld
add
mov
lods
pop
add
cmpsb
call
mov
clc
out
mov
scas
or
fcompl
push
push
inc
mov
adcb
pop
sbb
pop
nop
mov
inc
mov
subl
fucomi
xlat
aad
cs
inc
roll
jle
sub
mov
incl
in
or
sbb
out
add
lret
mov
shrl
jmp
pop
adc
subb
popf
test
or
pop
xlat
insb
xchg
jmp
adc
mov
sub
inc
out
ret
fnstcw
push
adc
scas
fistps
leave
dec
in
jb
push
push
nop
adc
popf
sbb
mov
and
lods
xor
shl
add
dec
aaa
gs
sbbb
adc
push
adc
js
jge
clc
jns
and
and
div
dec
daa
mov
add
push
clc
insb
test
cmc
stos
mov
mov
stc
mov
imul
in
cltd
cld
in
ljmp
pop
or
cli
cmp
sub
adc
sbb
inc
fwait
aam
ret
pop
pop
mov
stos
adc
push
andb
jne
push
int
inc
leave
push
lods
lret
adc
rcll
add
push
addl
sub
mov
fstps
shrl
xchg
lock
je
xchg
adc
hlt
test
cltd
leave
int3
addb
cmp
ds
adcb
mov
inc
pop
dec
and
mov
fisubrs
nop
mov
adc
in
mov
cli
cmp
es
aaa
cmp
inc
cmp
add
xor
mov
stos
jns
cwtl
jp
mov
vsubss
cmp
mov
xchg
pop
mov
pop
insl
or
lock
cmc
stos
sar
cli
jmp
or
pop
mov
leave
dec
clc
adc
adc
leave
mov
cmp
rol
and
aaa
in
jns
mov
nop
adc
jp
and
lds
xchg
and
adc
sub
aad
scas
dec
sti
pop
and
lock
dec
mov
push
xchg
adcb
mov
test
imul
xchg
dec
push
jne
cltd
fucompp
aaa
mov
sti
jne
sub
jno
xor
cmpb
mov
cmp
push
mov
mov
mov
test
leave
outsl
mov
out
jne
test
sti
jecxz
fwait
scas
jno
dec
mov
loope
insl
addr16
mov
rorb
xchg
loop
int3
mov
outsb
shr
xchg
fisubs
clc
shr
pop
lds
mov
sub
push
sahf
add
cmc
dec
and
push
dec
lods
sbb
add
mov
popf
sbb
insl
push
jne
out
out
inc
mov
fldcw
or
inc
sub
xchg
cmp
pushfw
adc
push
scas
push
sti
imul
sub
add
push
mov
outsl
ficoml
lock
or
add
mov
and
outsl
xchg
sub
sub
push
decb
inc
out
mov
jnp
aaa
pop
imul
mov
rcll
push
js
shrb
bound
insb
cltd
xor
fldcw
or
xor
sbb
xchg
inc
and
fiaddl
pop
roll
sarb
ja
std
orl
jg
loope
adc
aas
ja
cmpsb
les
jbe
fwait
cli
dec
jecxz
mov
das
xchg
icebp
shrl
pop
inc
pop
push
fcomps
and
pushf
insb
adc
inc
movsl
adc
xor
popa
fidivrl
add
sub
mov
mov
cmpsb
jo
imul
pop
cmp
xor
fistpll
mov
inc
fwait
xor
out
lcall
lahf
sub
movsb
xchg
outsl
test
inc
iret
mov
mov
mov
scas
cli
loope
sbb
mov
mov
out
in
aam
sti
les
push
sti
jmp
int3
inc
into
insb
lret
test
jb
cmc
or
pop
dec
lock
cmpl
out
mov
in
cltd
or
inc
mov
je
add
jmp
add
cmpsb
mov
and
or
cltd
pop
push
out
arpl
addr16
sub
popf
inc
add
jmp
cltd
xorl
adc
push
insb
gs
dec
mov
xlat
mov
sbb
outsl
aaa
mov
decl
mov
cltd
je
incl
inc
cld
data16
fidivrs
les
sarl
icebp
ds
inc
push
rorb
mov
data16
pop
es
cmpsl
jmp
lods
mov
sub
sbb
and
dec
cltd
lock
das
nop
data16
adc
bnd
mov
fcoml
clc
xor
insl
ror
adcl
movsb
mov
sub
add
in
push
inc
psubusb
push
cmp
std
inc
adc
push
test
loopne
jno
mov
inc
movsl
sub
rcrl
insl
jae
adc
jbe
pop
lret
adc
add
hlt
clc
icebp
push
dec
fdivrs
out
inc
adc
rorb
aad
ret
cwtl
jge
pop
test
test
jg
fstps
test
cmp
mov
test
mov
sbb
add
pop
loopne
sub
sub
imul
dec
addl
jbe
push
mov
adc
lcall
pop
dec
test
pop
scas
jp
adc
push
xorl
pop
pop
lret
adc
fidivrl
sbb
inc
arpl
add
push
pusha
out
mov
and
loopne
loopne
test
cmp
sbbb
sbb
popa
cli
fstl
scas
test
stc
clc
testb
sub
dec
push
ja
push
xor
adc
and
sub
in
sbb
mov
push
adc
mov
jp
mov
outsl
outsl
xlat
dec
mov
out
ret
add
pop
insl
mov
jle
and
fsubs
pop
scas
dec
xchg
inc
mov
and
out
je
add
pop
mov
mov
mov
sbb
test
out
push
push
pop
addr16
aas
fadds
or
mov
jp
xchg
push
inc
lock
and
dec
cmp
jo
or
les
dec
test
cmpsl
loop
test
jnp
pop
jbe
pop
test
hlt
test
mov
push
pop
in
out
or
sarb
insl
jo
test
std
dec
insb
loopne
icebp
push
jge
mov
dec
push
dec
or
iret
xchg
mov
scas
stc
addr16
mov
xor
pusha
mov
fxch
stos
and
and
cmp
fidivl
into
pop
jne
test
and
adc
out
out
lods
out
pushf
sbb
mov
clc
mov
push
rcpps
sti
test
mov
fsubrs
pop
xchg
ja
sahf
mov
ficoms
or
add
and
in
cld
dec
push
inc
pop
mov
test
movsl
xchg
jae
and
call
or
mov
mov
mov
out
fistpl
add
leave
subb
stos
test
xor
sbb
inc
sarb
ret
sbb
lret
in
xor
lea
cmpl
or
fnstcw
lahf
into
jns
mov
dec
out
jmp
in
stos
orb
and
mov
fs
lock
addr16
sbb
in
push
aad
cmpl
cmpsb
dec
or
or
add
cmp
sub
ret
xchg
fwait
add
and
add
jge
out
or
xorb
xchg
stos
push
jle
out
je
jle
es
out
lea
into
int
pop
push
xor
inc
aad
or
movsb
xchg
mov
ljmp
mov
mov
aaa
dec
mov
in
cmp
cli
repnz
notl
ja
pop
sbb
jo
into
sbb
push
dec
inc
push
inc
mov
xor
outsb
fistps
adc
outsl
fldt
mov
mov
xchg
stc
fprem
ljmp
sub
enter
rclb
push
fldl
dec
xchg
shrl
das
jne
push
inc
push
push
subb
jnp
adc
or
cmp
jb
lahf
cmp
and
mov
das
jbe
push
xlat
jns
pop
xchg
out
sub
mov
inc
mov
lret
aas
shlb
or
idiv
clc
nop
sbb
and
xchg
sub
dec
dec
xchg
dec
add
sub
sub
add
rorl
ljmp
hlt
xchg
daa
jae
leave
mov
nop
push
dec
inc
sti
cmc
jae
sub
jns
jne
pop
dec
popf
jne
push
subl
cld
das
push
sub
iret
enter
pop
push
leave
push
outsb
and
xor
shrb
mov
cmp
and
mov
dec
jne
mov
maxps
cwtl
mov
out
out
js
pop
test
test
dec
in
rcrl
mov
data16
or
xchg
jne
divl
jp
scas
sub
bound
push
adc
xchg
sbb
mov
popa
mov
xor
add
xchg
nop
jae
movsl
jle
negl
fdivs
fcmove
adc
adc
push
xor
ret
shrl
movsl
lods
stos
daa
mov
or
sub
loope
or
add
sbb
movsl
lcall
outsl
dec
and
xor
xchg
out
js
xor
mov
shll
jne
mov
sbb
test
aad
lds
cmp
or
sbb
push
pop
notl
mov
xchg
insl
mov
stos
cmp
jae
lea
push
inc
mov
push
dec
loopne
fsubrl
les
ret
flds
ret
je
and
es
dec
inc
jns
sbb
xchg
cmp
xor
lods
and
mov
loopne
sbb
xor
lods
rep
xlat
xchg
roll
lods
jmp
sub
push
movsb
pop
mov
cwtl
fldl
fld
aas
add
adc
mov
pusha
jbe
int3
cmp
cmp
lret
ds
sub
jns
fldenv
test
inc
lret
jecxz
mov
mov
inc
in
xor
add
jns
jge
hlt
hlt
mov
lods
lahf
nop
mov
and
and
xor
fistl
inc
xchg
mov
insb
inc
les
mov
mov
jne
xlat
xchg
xor
sub
pop
sbb
in
cs
pop
mov
sti
test
cmp
and
lods
nop
fs
mov
fs
sbb
adc
mov
fistl
pop
mov
pop
jnp
pop
jae
push
and
inc
je
mov
psubsw
xor
push
lret
mov
pop
out
bound
fmuls
sbb
adc
jg
int
insb
scas
jmp
pusha
rcl
lret
push
out
mov
dec
add
mov
hlt
dec
fmul
xchg
das
rcrb
repnz
call
push
adc
shrb
push
rolb
std
std
add
sub
aam
mov
shll
rcll
push
test
rcl
sbb
orl
ss
cs
and
cmpsb
and
push
fstp
dec
int3
scas
xor
popf
jbe
jle
push
inc
mov
xor
cmpsl
fildl
insl
gs
lret
or
int3
stos
xchg
mov
jg
cs
icebp
loop
mov
mov
push
pop
pop
out
mov
xchg
adc
aad
mov
mov
mov
jnp
pop
push
scas
hlt
cmp
inc
inc
jo
das
dec
push
scas
das
mov
insb
incb
lods
or
nop
or
and
icebp
int
adc
inc
mov
jle
sbb
test
mov
std
pusha
imul
xchg
stc
fbstp
imul
xchg
add
clc
inc
jl
add
sub
cmpsb
mov
js
inc
push
jo
inc
jmp
xchg
adc
dec
cmpsb
mov
lock
stc
addr16
icebp
je
les
ret
sub
sub
call
xchg
loopne
push
inc
or
call
ror
cltd
mov
nop
scas
dec
push
aas
repz
es
push
repnz
jbe
mov
shll
stc
pop
into
int3
pop
pop
out
sub
dec
pop
ror
mov
pop
call
inc
bnd
cmpsb
sub
jns
sub
sub
ficoms
sub
jmp
jp
adc
lock
mov
aaa
pusha
xchg
and
and
mov
mov
cmp
aam
imul
movl
int
dec
popa
xor
icebp
shll
or
dec
rorb
nop
jg
je
gs
push
daa
adc
and
jle
mov
fwait
sbb
les
cmp
mov
xchg
lahf
jb
mov
sbb
idiv
mov
daa
xchg
jge
mov
icebp
push
or
cwtl
dec
imull
ret
outsl
shll
cmpl
lds
out
pop
inc
mov
pop
repnz
movsb
scas
pop
test
dec
xchg
inc
icebp
inc
mov
gs
sbb
mov
pop
jo
outsl
or
int3
sub
jecxz
and
jno
rclb
mov
pop
stos
and
cs
out
sahf
ljmp
int
ds
ljmp
inc
int3
imul
lahf
push
out
shr
andl
mov
add
mov
sub
cmp
mov
mov
gs
loopne
adc
cmpsl
jae
dec
js
jns
inc
jmp
xor
add
xlat
adc
xchg
fsubs
adc
sti
xchg
imul
aaa
lock
dec
imul
pop
movsb
cltd
cmp
jle
pop
fmull
mov
sbb
pop
push
cmp
mov
movsl
aaa
push
add
frstor
das
jle
and
xchg
into
loopne
mov
arpl
shlb
mov
fnclex
jb
jbe
mov
mov
imul
adc
int3
dec
ror
or
popf
mov
xchg
pushf
mov
xor
js
lds
and
xlat
int
movsb
cltd
mov
jl
dec
xchg
lock
addl
xor
mov
push
pop
jp
loopne
and
xlat
movsb
loop
dec
add
cwtl
xorb
push
xchg
xor
test
push
test
les
mov
lods
jp
sub
stos
xchg
mov
inc
mov
adc
push
adc
enter
mov
and
jp
xor
shr
adc
push
adc
jne
das
jle
shlb
or
lods
jo
adc
xchg
into
jb
aam
faddp
in
cmpsb
cmp
das
dec
inc
cmpsl
pop
jns
fldenv
ds
mov
adc
fisubs
data16
fdivs
shrb
xor
xor
adc
lahf
and
add
das
add
lock
inc
mov
sbb
out
aad
mov
or
dec
into
lock
popf
fildl
inc
inc
in
daa
pop
sahf
sub
ljmp
inc
jno
inc
ss
cli
pop
rorl
movsl
add
sub
xor
inc
xchg
mov
decb
add
cs
pop
jbe
pushl
cbtw
aas
adc
aaa
es
lcall
int
and
xchg
xor
jecxz
out
mov
jp
sbb
and
fsubrl
out
push
mov
out
or
enter
pop
pop
push
dec
pushf
inc
jmp
mov
mov
xlat
insb
out
cwtl
dec
xchg
insb
pop
inc
mov
jnp
in
inc
fwait
inc
sub
or
rcrl
fs
in
int3
adc
inc
ja
sub
idivl
mov
movsb
xchg
lock
es
jecxz
out
test
sbb
loopne
gs
imul
jno
jge
dec
and
add
movsl
js
add
insl
and
cmp
jle
mov
xchg
aad
sbb
aam
dec
ret
jb
pop
cwtl
xor
dec
sbb
adc
popa
dec
lods
cmp
pop
push
addb
lahf
push
mov
in
push
sti
xchg
cs
cmp
sbb
adc
sub
in
out
into
cmp
jne
inc
xlat
jecxz
insb
push
je
add
andl
push
xor
pushf
inc
shll
adc
jbe
xchg
lret
test
fidivl
ja
cmc
add
jno
xor
mov
inc
pushf
pop
aam
aaa
das
ret
xor
aam
insb
lret
or
mov
add
mov
mov
repz
adc
push
sahf
inc
in
adc
cmpsb
lahf
xchg
inc
hlt
aad
pop
xor
jne
mov
jns
add
subb
lret
sbb
js
testb
sub
push
movsl
inc
fs
push
sbb
jle
lahf
sarb
inc
adc
mov
in
loop
dec
push
jle
adc
movsb
xlat
push
mul
je
movb
imul
insl
scas
or
lret
mov
test
aas
and
out
jns
out
jl
aaa
dec
mov
and
jle
pop
lods
sub
lock
cmp
pop
cli
lock
mov
jp
repnz
outsl
mov
dec
mov
jge
lock
scas
jmp
mov
jnp
loope
pop
mov
cltd
cmc
xchg
les
ljmp
jg
sub
xchg
hlt
or
dec
add
mov
jno,pt
outsl
out
and
scas
mov
inc
mov
in
jb
out
scas
je
in
mov
inc
dec
stos
adc
fistps
out
and
das
cmpsb
and
add
xchg
jne
outsb
pop
test
inc
mov
fidivs
push
pop
xchg
scas
mov
shll
mov
loop
outsb
mov
xchg
mov
addl
sbb
call
or
cmp
xchg
and
mov
mov
adc
bts
stos
fcomps
or
dec
cwtl
and
push
pop
mov
dec
data16
mov
subl
and
mov
jmp
out
and
mov
mov
mov
sub
scas
lock
xor
test
test
ss
movsb
inc
pop
arpl
je
cltd
mov
loop
add
sbb
jbe
adc
callw
jns
sarb
push
mov
sti
xor
stc
setnp
cmp
int3
sarb
push
jns
ljmp
stos
push
adc
mov
mov
lods
jo
add
xchg
pop
add
iret
cwtl
and
pop
cli
jne
js
js
adc
dec
fdivrs
dec
imull
jl
or
sbb
add
out
aam
jl
stos
fsubrl
pop
xchg
inc
gs
data16
xchg
fsubrp
es
mov
sub
mov
rcrl
mov
or
out
mov
cmpsl
call
mov
mov
xor
xor
loope
ret
cld
pop
sbb
movsb
stc
call
mov
mov
adcb
push
jecxz
adc
in
es
stc
add
add
jbe
or
cmp
ficoml
jns
adc
mov
jb
jecxz
cs
ljmp
jnp
scas
xor
movsb
and
sbb
divb
jge
or
cmp
add
or
lret
int
pop
cmpsl
jp
inc
xor
stos
sti
outsb
mov
sbb
cmp
jo
loope
lea
pop
xchg
fmull
xchg
mov
mov
or
jns
cmp
cmpsb
js
lods
inc
in
cld
out
mov
xor
faddl
mov
pop
mov
in
sbb
into
xchg
or
pop
mov
jecxz
test
jge
daa
stos
in
leave
adc
call
or
test
sbb
into
xlat
add
jg
ret
imul
lcall
cmp
jae
cltd
xchg
ret
lea
jp
sbb
ss
add
outsb
addr16
hlt
cmpsb
test
mov
iret
jae
xlat
mov
xchg
and
sub
add
lds
xchg
inc
add
mov
cmp
xchg
sub
pop
add
jnp
jno
div
push
js
jmp
jmp
inc
shlb
xchg
or
mov
lret
in
jl
inc
std
mov
inc
addr16
sahf
sub
mov
mov
icebp
sbb
push
sbb
iret
push
cwtl
jbe
push
popf
repnz
fs
iret
xor
fidivl
xor
dec
mov
int3
push
fxch
outsl
imul
xor
push
jg
mov
pop
mov
inc
scas
repz
shll
fisttpll
push
xchg
call
jg
dec
mov
test
jnp
push
jno
ds
mov
test
dec
pusha
sbb
push
jo
cld
shll
loopne
add
sub
mov
test
mov
sbb
stc
aas
insl
dec
and
shll
shll
mov
js
inc
mov
movsl
adc
popf
push
sahf
fistl
xor
sbb
ret
orb
inc
aad
mov
test
pop
push
add
pop
add
xor
sub
mov
les
xlat
mov
mov
xlat
push
mov
scas
pop
mov
xor
xor
ja
pushf
std
std
std
push
inc
enter
popf
mov
inc
ljmp
mov
sbb
adc
and
sbb
popf
cli
jg
or
fidivl
popa
cltd
jnp
adc
lods
add
insb
lea
ss
pop
jle
push
out
sub
dec
pop
push
lret
push
mov
ret
and
inc
push
or
jae
test
insl
sbbl
xlat
hlt
icebp
cmp
mov
xchg
sbb
or
adc
xlat
incl
add
aas
sub
shrl
arpl
mov
stc
enter
mov
imul
cmp
xor
xlat
xchg
sbb
popa
nop
mov
popa
enter
xlat
xchg
cld
xor
fistpll
mov
das
mov
xor
pop
xchg
mov
popa
and
and
test
push
lret
lret
xchg
sub
add
dec
cld
jmp
popa
mov
jne
lret
lock
push
stc
mov
add
js
in
hlt
std
loope
es
push
int3
mov
pop
scas
ja
lret
lock
add
jl
cs
or
aaa
adc
orb
popa
or
lock
je
fsts
das
jge
int
gs
push
iret
jbe
outsb
mov
mov
mov
repnz
gs
dec
jg
test
lock
adc
gs
sub
and
scas
int
movsb
int
pop
gs
loop
jp
sub
fsubr
inc
sub
mov
decb
inc
movsl
or
mov
sub
mov
scas
lea
sub
lods
cltd
test
push
fdivrl
shrl
sub
push
pop
sahf
fstpl
lea
jns
sbb
out
add
inc
aaa
mov
push
pop
mov
shll
pop
cltd
mov
dec
orl
lock
cmpsb
push
std
mov
xchg
mov
lcall
dec
adc
cmp
repnz
mov
iret
mov
loop
inc
data16
inc
fucomip
js
push
les
fstps
sub
outsl
mov
lods
cmp
mov
mov
xor
loope
xlat
pop
lcall
pushf
adc
push
push
jnp
push
movsl
jb
jge
in
cwtl
mov
ss
cbtw
addr16
cmp
sar
loop
insl
out
push
pushf
stos
aas
dec
jnp
or
or
mov
inc
sub
out
nop
mov
cmp
lds
stos
jb
lods
rcll
add
test
cmpsb
push
xchg
decl
repz
cmovne
hlt
mov
add
loop
or
pop
cld
cltd
sti
cld
mov
aad
adc
enter
into
pop
pop
outsb
sbb
push
sahf
dec
in
icebp
mov
push
das
ss
sub
daa
push
inc
insl
mov
daa
or
loopne,pt
loop
push
adc
mov
dec
in
inc
cwtl
sub
je
jno
in
loop
int3
mov
sbb
call
loopne
and
faddl
or
mov
push
lcall
adc
shlb
test
mov
xchg
cmp
les
leave
call
out
into
mov
mov
inc
fwait
jne
sbb
pop
dec
inc
pop
inc
imul
xorl
xor
mov
add
addr16
adc
cmc
sar
mov
ficoml
add
int3
mov
out
shl
jecxz
push
dec
test
add
mov
clc
aad
js
jae
popa
dec
adc
fwait
mov
iret
leave
lret
lods
adc
xchg
jno
add
stc
test
inc
jg
inc
jbe
xor
push
les
repnz
loopne
scas
xor
aaa
add
jae
nop
mov
les
es
mov
movsl
sub
jb
push
out
cld
push
std
out
outsl
test
mov
jle
and
shl
into
fs
fcmove
stc
add
lahf
dec
std
sbb
inc
adc
popf
ss
xchg
insl
ja
push
lret
gs
insb
xchg
fistpl
and
mov
mov
push
cmpsl
cmpb
jae
popf
out
out
add
ds
enter
shr
subl
outsl
out
add
cld
mov
adc
mov
dec
adc
aaa
push
call
dec
out
mov
bound
dec
and
rclb
sbb
shll
push
push
mov
ljmp
pop
rclb
loopne
pusha
jne
fsubr
push
dec
dec
or
std
inc
daa
mov
imul
cmp
test
lea
jl
cmp
add
icebp
mov
insl
sbb
and
mul
inc
into
xchg
int
sbb
cltd
addr16
sarb
mov
push
push
out
inc
mov
mov
sub
jp
add
out
or
xor
incl
and
inc
sarl
and
mov
jae
and
fidivrs
pop
mov
inc
mov
pop
mov
cmpsb
adc
or
or
leave
xchg
ljmp
pop
mov
nop
xchg
sti
adc
jle
sbb
cmpsl
push
xchg
mov
cwtl
or
pop
pop
into
jae
add
xor
fadds
mov
js
stos
in
push
sbb
sub
mov
jae
int3
movsb
xlat
sbb
or
sahf
mov
cmp
cwtl
inc
into
out
mov
mov
adc
mov
aam
jg
mov
lret
call
push
sbb
mov
mov
sbb
loopne
insl
mov
shlb
fisubrl
push
xchg
dec
add
mov
ficoms
dec
mov
shlb
in
in
test
adc
pusha
test
sbb
stos
movsl
je
idivb
inc
mov
insb
ret
rcrb
fbld
pop
outsb
cs
jne
je
movsl
lcall
mov
jbe
mov
adc
jle
xor
les
in
xor
insl
ret
pusha
xchg
test
inc
orb
jle
ds
in
add
ret
jo
or
icebp
lods
add
mov
mov
outsl
fcomp
mov
pop
loop
sub
in
adc
dec
xchg
mov
insl
adc
je
in
dec
ja
fnsave
fsubrs
push
jmp
adc
leave
cmc
push
jns
inc
fsubr
imul
test
sbb
dec
popa
pop
nop
test
sub
cmp
pop
jge
push
out
xchg
adcb
mov
add
pop
mov
int
imul
mov
das
pop
push
cmp
push
mov
inc
pop
aas
adc
sti
cmp
iret
mov
jp
push
mov
fimull
in
lock
mov
sbb
add
cld
incl
in
inc
scas
ds
inc
and
cwtl
dec
sub
repz
dec
mov
loopne
aas
mov
xchg
sahf
jns
mov
adc
ja
push
sub
push
out
test
fidivrs
adc
stc
sub
add
and
adc
mov
jge
and
mov
popf
xchg
out
rorl
imulb
dec
cltd
ja
shlb
add
pop
cmp
stos
and
jmp
jo
loopne
push
xchg
fwait
mov
stc
mov
push
mov
xor
adc
mov
xchg
js
push
fimull
js
in
or
and
and
out
sbb
inc
rol
lods
xor
cs
cmpsb
inc
in
jns
push
inc
cmpsl
inc
fsubl
pop
and
cmpsl
roll
jl
pop
mov
lret
into
cmp
xor
mov
testb
sub
add
jl
mov
std
aaa
jne
cmp
inc
fsubrl
popf
push
js
add
bnd
nop
outsb
and
push
aaa
cwtl
stos
jno
fsub
insb
out
je
das
sbb
sahf
sub
negl
mov
sub
pop
je
cltd
dec
pushl
rorl
in
loopew
lcall
ret
pop
fwait
push
xchg
mov
fistpll
mov
sub
jae
testl
mov
ret
adc
stc
mov
inc
inc
loopne
push
sbbl
sub
in
out
out
or
fsubs
xor
cmp
jl
scas
add
mov
xor
fildll
stos
jo
imul
xchg
sub
and
out
repnz
cmp
stc
and
aaa
mov
cmp
ret
out
push
stos
clc
mov
imul
xchg
xchg
nop
mov
ljmp
pop
int3
add
pusha
and
sbb
xchg
fbld
push
arpl
das
mov
inc
movsb
cmpsl
jbe
sbb
xor
ret
jnp
lret
jnp
outsl
and
or
test
xor
mov
call
xchg
cmpsl
jbe
cs
std
das
adc
cmpsb
jb
push
imul
in
or
rcrl
lods
cli
std
pusha
inc
or
gs
xlat
andb
js
push
andl
popa
dec
jno
rolb
mov
sub
dec
add
xchg
outsb
pusha
movsb
mov
ffree
out
xlat
imul
pop
movsl
or
add
xlat
pusha
pop
xchg
sti
nop
mov
idivb
ret
stc
add
or
push
ret
sub
inc
aad
mov
pop
test
jp
mov
adcl
dec
sbb
popf
or
pop
push
es
xlat
add
outsl
lret
pop
xor
mov
lahf
push
and
dec
fldt
std
cs
scas
cwtl
add
call
pop
push
pop
push
dec
sbb
ljmpw
adc
sub
xchg
les
cmpsb
mov
jae
add
and
pop
jae
sbb
push
mov
or
cs
scas
xor
mov
sar
insl
and
sbb
movb
dec
hlt
das
addr16
inc
jg
in
gs
adc
jmp
xchg
cmp
fst
stos
clc
pop
add
and
lods
lock
add
jae
test
sub
and
and
ljmp
or
stc
das
xchg
out
xchg
pushf
xor
add
add
stos
mov
and
loop
mov
sbb
mov
pop
adc
mov
clc
and
out
lea
cmc
testb
into
cmp
cwtl
cmp
loop
xor
or
les
adc
ret
jp
pop
add
lcall
adc
stos
add
ret
mov
ret
loope
popa
push
loopne
lods
aas
mov
dec
je
scas
stos
ja
cmpsb
or
mov
jnp
push
stc
les
cmp
cld
aaa
cmpsl
shl
pop
adc
jo
xor
xchg
int
fwait
test
fucomip
mov
dec
divl
mov
inc
mov
rolb
xlat
or
js
cmp
mov
stos
adc
movsl
cmp
sub
fcomps
mov
mov
cmpsl
daa
xchg
clc
adcl
mov
fdivrl
jp
push
mov
mov
pop
add
in
jl
and
addr16
xchg
pop
mov
lret
xchg
aam
aam
repnz
jmp
ja
mull
fcomip
pop
xchg
fs
pop
in
mov
enter
stc
rcrb
sub
xor
js
out
and
push
push
jmp
jae
inc
int3
sbb
lods
mov
sti
mov
mov
stos
pop
je
mov
inc
call
xchg
popa
lahf
loopne
cltd
push
int
cwtl
jo
adc
push
jne
fstpl
pop
insb
jne
pop
add
fiaddl
rol
sub
frstors
sub
or
ret
mov
std
mov
adc
mov
lea
mov
pop
sub
daa
jle
adc
incl
sub
popf
daa
sbb
les
push
pop
xchg
adc
inc
sub
xor
cmpsl
bswap
es
outsb
adc
and
xchg
push
insb
insl
lret
lea
jno
cmpb
scas
int
jmp
dec
jnp
jns
scas
and
jnp
adc
lods
xchg
sub
and
or
test
ror
data16
int
pushf
fistpl
imul
jge
xor
pop
cltd
inc
sbb
jb
xchg
xchg
fldenv
cmp
jnp
dec
jg
mov
jecxz
mov
int3
add
mov
pop
inc
fcoml
fcompl
imul
lret
addl
and
movsl
sbb
jne
inc
je
push
pop
sti
roll
ss
lahf
cmpsb
cmp
push
jno
faddl
clc
mov
fcoml
std
xchg
add
adc
jmp
jg
xor
cmp
cld
cmp
js
mov
das
xchg
jo
pop
jecxz
mov
pusha
fistpl
sbb
sbb
mov
pop
sub
das
sbb
rcl
imul
jp
sarb
adcb
jge
lret
ds
repnz
mov
jl
xchg
ljmp
sub
sbb
or
jo
fists
aam
xor
and
outsl
das
push
cmpsb
inc
pop
sbb
inc
jmp
imul
mov
ljmp
mov
fldcw
adc
pushf
movsl
dec
mov
xor
add
ss
xor
ljmp
push
sub
pop
cmp
pop
xchg
push
out
pop
mov
outsl
mov
mov
out
xchg
mov
stos
pushf
jnp
in
pop
mov
inc
stos
jo
mov
and
sub
mov
sub
jge
jg
xchg
inc
fcomps
jne
and
pop
inc
push
pop
test
mov
mov
inc
notl
sti
insl
lret
xchg
mov
push
and
sbb
fwait
pop
in
cli
xchg
popf
movsb
pop
pop
mov
xchg
fwait
inc
pop
out
push
pusha
and
pop
xchg
repnz
push
push
push
mov
push
cmpl
out
ja
pop
or
sbb
movsl
add
lds
mov
jle
outsl
push
inc
xchg
mov
stos
daa
sarb
nop
lahf
les
sbb
test
add
pop
cs
imul
gs
repnz
pop
fs
mov
dec
shlb
cltd
clc
xchg
cmp
mov
sub
jmp
fwait
cmp
or
test
hlt
fdivl
and
test
ss
lods
inc
cmp
and
adc
mov
add
jl
ffree
and
pop
xchg
hlt
jp
movsb
cmp
ret
adc
adc
movsb
inc
cmp
cmc
jecxz
lea
outsb
cmp
pop
lock
mov
or
mov
xor
pop
test
and
mov
ror
or
dec
sub
fdivs
das
aad
xchg
dec
push
jbe
cmpsl
dec
pop
inc
cmp
sti
pop
sbb
sub
sbb
sub
push
mov
repz
pop
push
pop
sub
inc
aaa
push
xchg
jl
add
or
sti
adc
inc
scas
in
mov
rorb
stos
pop
inc
sbbb
mov
sbbb
pop
imul
sarb
sub
push
cwtl
hlt
inc
jp
scas
gs
adc
je
mov
icebp
cwtl
add
xor
call
push
sarb
notb
or
subl
pop
aas
mov
xor
cli
stos
mov
pop
xor
inc
ss
sub
pusha
jl
cmp
dec
in
adc
push
in
ror
mov
mov
pushf
sub
ljmp
cld
loop
shll
dec
mov
xorb
add
jno
and
cmp
iret
frstor
fcoml
cmp
mov
mov
mov
fidivrl
mov
data16
aam
cmp
mov
icebp
cmp
icebp
add
test
out
popa
in
xchg
pop
movsb
mov
nop
or
mov
repnz
outsb
mov
lahf
pop
push
pushl
jl,pn
ljmp
push
inc
sub
ljmp
dec
loopne
mov
testb
dec
mov
xor
outsb
mov
lret
cmp
push
cmp
lcall
xorb
adc
rolb
scas
ja
sub
or
int
daa
imul
sub
sbb
ret
jnp
xchg
or
sub
pop
jb
testl
add
mov
inc
in
in
ret
fdivrl
in
in
sub
pop
add
divb
push
mov
out
movsb
pop
test
and
inc
inc
std
ret
lret
cmpsl
movsl
xor
sub
dec
pop
adc
jo
lods
adc
mov
cmc
inc
push
push
cmpsb
insb
in
cmp
aam
sahf
xchg
mov
mov
jb
cmp
lock
xor
xchg
fnsave
mov
sahf
jb
or
inc
cmpsl
test
jns
push
mov
stos
jg
lea
fisubl
dec
and
call
cwtl
in
movsb
and
dec
sbb
clc
mov
dec
adc
xor
pop
imul
adc
loop
lods
scas
mov
push
popa
jecxz
mov
or
fsubl
pop
push
fcmovnbe
andb
fidivl
jmp
jbe
pop
lahf
push
inc
stos
int
lds
jge
negb
pusha
push
fdivs
dec
fistl
mov
das
xor
fnstenv
pop
cmp
enter
fnsave
jp
dec
daa
out
or
stc
mov
sbb
sbb
fiadds
rcr
sahf
cmp
int
out
popf
pop
push
lret
dec
sbb
fbstp
pavgw
bound
bound
clc
add
mov
adc
addr16
or
xchg
mov
leave
movsl
fildl
push
insb
fisttps
fwait
movups
ds
add
xor
fwait
cmpsl
adc
pop
cmp
mov
adc
jmp
ret
push
xor
jg
push
cli
cmp
sub
and
add
pop
pusha
add
push
inc
xor
fmull
jne
imul
mov
xchg
cmp
stc
mov
fimuls
cmpsl
scas
fwait
sar
dec
lock
or
cwtl
push
adc
cmp
test
mov
inc
mov
data16
mov
test
xchg
test
lahf
mov
out
and
or
pop
in
and
push
xchg
decl
add
jbe
push
cwtl
lods
dec
jns
pushf
fsubs
jns
insb
jbe
cmpb
enter
ret
xchg
mov
mov
scas
adc
dec
pop
add
lds
adc
jle
dec
rol
push
dec
jbe
adc
movsl
dec
cmpsl
mov
ja
aas
setbe
mov
add
sub
test
test
call
std
pop
or
jbe
push
adc
jle
push
or
mov
les
xor
and
push
or
push
pop
js
mov
dec
sbb
mov
pusha
mov
rolb
and
mov
ret
xor
xorl
setae
inc
scas
aad
sbb
push
rcrl
xchg
adc
outsb
ljmp
bound
out
fs
int3
pushf
and
jmp
or
std
add
jmp
or
icebp
cmpsl
ficompl
jl
pop
pusha
xchg
outsl
ret
ljmp
sub
sahf
xrelease
mov
jge
add
push
xor
adc
lea
cmp
adc
adc
es
clc
and
into
sbb
rorb
mov
addr16
xchg
and
cli
push
adc
sbb
mov
out
adc
inc
jg
movsl
std
mov
gs
in
and
dec
jle
inc
push
pop
insb
shll
xchg
sbb
movsl
hlt
dec
push
dec
mov
add
xchg
jge
cmp
or
mov
pop
and
inc
loope,pt
and
inc
shlb
imul
sbb
push
sub
rcr
mov
test
aad
test
movsb
adc
sbb
std
inc
cmp
push
adc
pop
dec
cltd
push
jl
push
inc
sub
push
jg
in
popa
and
jne
aad
sub
jbe
ret
cltd
test
leave
pmulhuw
lret
mov
sub
cmpsl
inc
scas
loope
fs
imul
pop
insl
fstpt
in
fadd
jmp
mov
mov
xorl
pushf
fwait
shr
xchg
arpl
into
inc
mov
inc
add
inc
dec
pushf
addr16
call
lret
aaa
pop
and
ljmp
insl
adc
mov
add
insl
push
sub
pop
inc
pop
jl
and
sub
jb
in
or
out
ja
sbb
gs
cwtl
inc
and
cld
and
mov
leave
mov
mov
inc
sub
mov
xchg
scas
aad
stos
int
mov
mov
push
xchg
popf
aaa
pop
and
daa
jl
rclb
cmpsb
imul
cmp
jae
leave
stos
adc
adc
add
push
add
push
shrl
or
rolb
decl
bound
mov
jbe
lock
adc
clc
fdivrl
stc
xchg
xchg
push
pop
jne
insb
imul
inc
mov
sub
dec
fsts
cli
js
pusha
or
pop
andb
or
xor
inc
jmp
out
push
xor
sub
insl
std
xor
repnz
xchg
xor
pop
xor
mov
enter
add
sub
or
jo
outsl
stos
push
sub
push
push
pushf
push
cmp
cwtl
and
cmp
outsl
cmp
testb
sbb
cmp
lcall
xchg
sbb
andl
les
jp
mov
dec
or
sti
adc
fadd
leave
in
loop
fcoml
mov
clc
xor
mov
pop
popa
mov
scas
aas
mov
arpl
sbb
mov
scas
xchg
xor
or
fidivs
int3
nop
pop
subl
insl
jl
push
std
adc
cmpsb
arpl
aam
mov
cmp
sub
into
cmpl
inc
mov
jecxz
ret
mov
jle
xor
lock
add
cmp
xor
pushf
push
jecxz
sub
test
ficoml
fsub
cmc
cli
in
jp
add
jns
pop
lahf
outsb
mov
xchg
sub
out
push
movsb
sbb
es
subl
inc
iret
sbb
and
cmc
pop
insb
inc
sarl
iret
jns
sbb
int3
xchg
add
clc
mov
xchg
mov
je
adcl
mov
imul
call
cwtl
test
and
loope
mov
xchg
lcall
popl
push
xchg
push
push
pushf
jo
or
outsb
cmc
jmp
xor
jg
cmp
inc
xor
jp
popf
jae
adc
cmp
stos
pushfw
shlb
sub
repnz
cmpsl
mov
mov
xchg
xor
cmp
decl
pop
lahf
test
test
out
outsb
mov
xor
mov
add
jg
scas
hlt
imul
xchg
pop
xlat
sahf
nop
popa
jge
popf
sti
sbb
mov
test
iret
incl
xchg
popf
lea
adc
push
lret
and
in
xchg
or
dec
xlat
test
pop
orl
cmp
loop
and
push
pop
mov
cmp
subb
stos
or
push
sbb
shlb
fs
pop
inc
out
xchg
jb
cld
sub
lods
or
or
dec
shrl
add
aam
imul
popa
mov
jae
mov
jp
loop
xchg
adc
lock
xchg
je
call
rclb
pop
in
inc
movsb
mov
inc
mov
test
jl
loop
inc
aaa
bound
pop
rcrl
push
cmp
into
pop
or
ljmp
sbb
xchg
outsb
push
add
jb
into
es
pop
xchg
aaa
or
xchg
insb
and
jecxz
das
add
inc
mov
mov
outsl
lea
add
mov
imul
in
cwtl
dec
fwait
loop
xorl
sarb
cmc
xchg
outsl
mov
pop
push
outsb
mov
sub
pusha
xlat
cmpsb
ror
cmc
jmp
or
inc
fsubl
jmp
or
fdivrs
stc
imulb
scas
and
cmpsb
negb
dec
or
mov
jg
loop
sub
cmpsl
xchg
push
mov
pushf
dec
call
push
jp
xor
ja
pop
adcl
add
jmp
fxch
enter
jge
enter
mov
insb
cmp
mov
cmp
lcall
loop
stos
xchg
rorb
dec
out
push
outsb
jge
push
mov
leave
nop
mov
insb
xchg
roll
jno
and
fildl
and
mov
imul
cmpsb
inc
rcl
rolb
push
inc
pop
in
ss
mov
xchg
jecxz
jmp
movsl
adc
idivl
adc
insl
daa
jl
or
inc
pop
or
lea
into
setne
pop
push
cs
fwait
rcll
cmp
loop
call
scas
push
dec
loope
repnz
movl
mov
adc
jge
jge
mov
push
out
jns
mov
pushf
loope
lock
les
mov
sahf
shll
gs
push
push
mov
insb
add
orb
int3
sub
jns
pusha
lret
inc
lret
ret
xor
negl
mov
lahf
mov
mov
loope,pn
inc
movsb
aad
insb
inc
jge
xchg
push
cmp
jp
in
dec
lds
sub
push
hlt
mov
test
jg
push
daa
and
mov
lods
sub
fsubs
cmp
insb
sub
mov
inc
or
jns
dec
inc
test
jge
cmp
or
sbb
lahf
mov
les
shrb
in
xchg
lods
stc
aam
mov
insl
into
jecxz
or
xchg
jle
popf
int3
dec
int3
mov
or
rol
es
jmp
ds
xchg
dec
fistps
stc
fisttpll
pop
push
aaa
ljmp
push
mov
inc
ljmp
dec
jmp
divl
cli
data16
out
sub
fcoms
xor
shll
hlt
shll
sbb
es
jbe
dec
mov
jnp
in
mov
xor
call
pavgw
jne
mov
pop
jno
lods
or
mov
jne
daa
add
adc
fisttpll
mov
dec
std
sub
cmp
xor
lods
xchg
sti
lret
xor
pusha
ss
mov
lea
imul
cltd
mov
inc
adc
and
mov
aas
ja
lea
or
pushf
push
lds
movsb
adc
cwtl
dec
and
clc
sahf
inc
in
rolb
add
jl
lds
mov
jge
mov
mov
stc
mov
push
or
inc
stos
push
inc
mov
mov
aad
mov
push
xchg
inc
pop
enter
add
in
pop
xchg
dec
data16
or
push
mov
cmp
orl
sbb
inc
int
test
jp
clc
mov
ja
dec
jo
inc
jmp
sbb
gs
adc
and
shlb
and
dec
or
xchg
iret
pop
mov
aad
push
inc
mov
sub
inc
lock
mov
andl
movsb
outsl
mov
jmp
outsl
sbb
pop
and
or
adc
les
mov
sbb
inc
mov
jne
or
repz
and
ret
pop
xor
dec
out
mov
and
test
stos
push
dec
les
leave
pop
stos
comiss
test
dec
scas
neg
lcall
mov
rclb
mov
mov
and
jp
test
bnd
cli
xor
sbb
insb
sahf
xor
into
aas
andl
adc
fisttps
in
pop
cmpsl
pop
out
dec
lahf
xor
adc
pusha
xchg
jle
fsubrp
ja
roll
sub
sub
mov
fsub
sub
and
mov
xchg
push
in
sbb
ret
loope
shll
mov
fstps
aas
cltd
pop
jnp
jnp
iret
pusha
push
sbb
mov
mov
enter
dec
sbb
mov
fdivl
test
jl
lock
xchg
push
sbb
icebp
push
imul
add
notb
pop
iret
arpl
popl
or
sahf
pushf
loop
insl
pop
and
mov
loope
xlat
mov
or
clc
nop
adc
xchg
out
adc
push
ret
in
or
xor
xchg
and
pop
mov
cmpsl
cmpsb
xchg
xchg
out
test
mov
jno
and
or
cbtw
sbb
insb
jns
jl
push
into
jge
aad
xlat
shrl
sub
jmp
mov
fs
rorb
call
enter
mov
sti
mov
and
cmpsb
push
push
cmpb
pop
xor
cmp
aas
and
and
iret
fisubrs
jle
cld
das
push
mov
dec
xor
xor
xchg
cmp
mov
pop
stos
shlb
or
mov
mov
fsubr
sbbl
or
sub
push
xchg
mov
movsl
dec
lcall
mov
xchg
or
pop
cmp
add
je
test
ficomps
add
dec
or
testl
jp
insb
rorb
pop
adc
jg
xchg
pop
loopne
pop
divb
test
mov
inc
pusha
xor
xor
shlb
adc
sarl
outsb
gs
and
pop
outsl
call
out
inc
test
loopne
jne
insl
in
mov
mov
dec
test
dec
push
mov
mov
and
iret
inc
push
popf
cmp
mov
lods
push
in
and
mov
sub
stos
xchg
mov
cmpsb
lahf
adc
xor
hlt
test
add
xor
repnz
scas
xor
bound
inc
add
cwtl
and
in
out
pop
clc
shll
inc
cmp
xor
sbb
pusha
cli
jge
push
pop
mov
add
popf
lods
dec
ja
push
pop
mov
fwait
dec
inc
pop
xor
lcall
dec
fcoms
je
in
push
cmc
std
add
push
mov
test
lret
mov
jg
mov
loopne
push
sbb
dec
data16
jecxz
inc
dec
in
xchg
sub
mov
imul
push
fisttps
push
sbb
in
loope
mov
mov
jns
nop
pop
jns
dec
clc
push
icebp
pop
push
in
cmp
fldl
and
ret
xor
push
cmp
pop
xlat
adc
aas
loope
jecxz
popa
mov
and
lea
jp
mov
test
aad
xchg
sbb
aad
fwait
roll
adc
imul
int
mov
test
test
fwait
push
outsb
adc
sub
adc
and
jmp
es
imul
movw
pop
sub
cli
in
and
mov
sbb
je
xor
std
xchg
lods
outsl
lea
js
push
or
daa
xor
mov
repz
icebp
push
xor
dec
xor
jmp
loop
and
cmc
xchg
es
movl
pop
mov
mov
xor
push
aaa
mov
lret
xchg
fimuls
ret
in
jp
sahf
inc
pop
sub
xor
sub
sub
fsubs
add
xchg
pop
hlt
and
push
fwait
pushf
sub
jecxz
loopne
xchg
or
mov
rcr
mov
lods
sbb
sbb
xchg
dec
lcall
cli
mov
push
and
jp
jp
outsl
daa
ljmp
jnp
hlt
lods
idivb
inc
push
data16
mov
push
out
inc
es
iret
fwait
mov
dec
inc
xchg
pop
movsb
cmp
or
mov
into
mov
enter
out
addb
inc
in
mov
mov
or
add
sbb
ljmp
mov
repz
mov
push
scas
jb
mov
test
pop
pop
ja
movsl
pop
insb
xchg
ss
inc
xchg
xor
push
dec
inc
mov
leave
jmp
jb
pop
pop
jne
sbb
notl
stos
int3
das
ljmp
push
mov
xchg
and
ret
sti
aas
xchg
cmpsb
aaa
sub
add
jmp
iret
es
or
shlb
mov
test
mov
lahf
gs
ljmp
adc
mov
popa
nop
clc
arpl
out
gs
xor
daa
mov
xor
cmp
push
in
imul
xor
dec
mov
add
pushf
sub
xor
daa
idivb
or
popa
adc
inc
pop
pop
insb
scas
insl
push
repnz
xchg
sbb
mov
ds
lea
add
lea
jae
repnz
das
out
xlat
and
js
and
iret
push
scas
ret
rorl
addl
dec
incl
push
add
rcll
mov
jmp
dec
xchg
lock
add
adc
xchg
aas
popa
ret
xchg
mov
shrl
out
push
cmp
pop
sti
mov
jo
xor
mov
fs
mov
adc
push
push
push
pop
inc
mov
and
mov
enter
xchg
out
test
mov
daa
xchg
pop
jbe
ret
das
pop
aaa
mov
cmp
mov
jae
test
fisubs
mov
sub
cmp
adc
movsb
jo
outsl
pop
mov
call
add
add
xor
sbb
sbb
roll
push
js
cli
sarb
sahf
test
mov
and
and
mov
das
js
fnstsw
adc
dec
jnp
pop
jl
repz
nop
nop
mov
hlt
pop
pop
ss
jbe
insl
add
push
cmc
adc
outsl
test
fmul
fimull
std
orl
dec
push
in
pop
sarb
sti
inc
outsb
pop
cmpsl
sbb
cmp
pop
push
adc
sub
and
pop
je
fbstp
inc
adc
add
imul
xor
or
aaa
mov
or
js
jmp
rclb
jmp
push
jno
aaa
fwait
jo
shll
jp
sbb
das
mov
rcrl
xor
push
xchg
sub
push
daa
xchg
loopne
ret
cs
xor
mov
push
test
insb
add
inc
or
sub
repnz
push
mov
pusha
mov
dec
cmpsl
enter
int3
pop
cmp
mov
lds
xchg
xchg
mov
lea
pop
sbb
mov
push
hlt
das
cli
push
adcb
lea
mov
scas
mull
loopne
iret
sub
lret
inc
push
add
adc
pop
out
adc
push
ss
inc
enter
out
fdivr
sub
mov
sarb
xlat
int3
icebp
sbb
mov
mov
cmpsl
pushf
repz
aas
in
aad
jns
out
xchg
push
aam
or
pop
leave
ss
jbe
xchg
push
push
jns
daa
xor
dec
cmp
adc
jb
int3
push
ja
jae
hlt
dec
mov
dec
rcr
loop
jno
fisttpl
pop
outsl
push
sub
inc
or
out
bnd
xor
pop
shl
lahf
sti
adc
sbb
das
test
add
rsm
push
jnp
and
jb
mov
jp
xchg
dec
sub
and
push
mov
call
add
jae
mov
fwait
push
in
aam
xchg
xchg
sub
fmull
xor
inc
xchg
push
aaa
sub
shl
and
mov
clc
mov
divb
sbb
dec
les
mov
movsl
add
add
add
arpl
add
into
cld
mul
mov
cmpsb
fwait
popa
mov
std
jno
out
add
xor
lahf
xchg
mov
mov
sub
xchg
push
xor
push
call
mov
push
shll
xor
push
test
cmpsl
jne
je
fadds
dec
movl
mov
fs
pop
adc
cwtl
jne
clc
cltd
dec
sbb
stos
cmpsb
out
dec
out
jecxz
push
jp
and
outsb
jo
test
leave
into
loope
jne
jbe
ljmp
jl
scas
fwait
cmp
or
ds
leave
pusha
rolb
pop
mov
fildl
movsl
out
lods
jle
jae
inc
sub
scas
adc
jge
mov
mov
movsw
call
loop
rcr
cwtl
push
mov
jo
repnz
aam
fs
loope
dec
inc
xor
sub
jle
andb
dec
xchg
or
aad
or
inc
jmp
fiadds
push
insb
mov
out
push
and
add
xchg
mov
mov
lods
leave
lcall
adc
sub
push
pop
sahf
sbb
lock
pop
dec
and
addr16
pop
push
pop
bound
repz
push
inc
ds
and
rorb
ret
xchg
mov
subb
cld
sbb
pop
int
dec
aas
lahf
popa
sub
outsl
test
jecxz
jl
xor
loope
sub
push
sub
push
mov
add
xchg
sub
fisubs
jb
inc
or
testl
mov
mov
mov
xchg
inc
mov
inc
mov
jbe
addr16
dec
test
adc
fimuls
mov
call
idivl
lcall
into
in
add
int3
les
xor
mov
stos
pop
mov
cmp
cmpsb
cmpsl
rorl
sbb
xchg
lcall
out
push
ljmp
aas
mov
punpcklwd
pop
loope
xlat
mov
pop
adc
test
pop
sbb
pop
fsts
iret
lret
ljmp
mov
test
and
mov
push
jge
das
mov
jmp
fsubs
mov
xchg
loope
mov
push
imul
in
xlat
push
and
ljmp
icebp
roll
dec
shrb
sub
mov
pop
test
lods
xchg
adc
out
lock
mov
daa
sahf
xor
shll
lock
cmp
mov
pop
call
fadds
pop
sahf
sbb
mov
int
outsl
shrl
cmp
test
mov
pop
pop
sahf
sbb
inc
xchg
int
push
mov
adcl
dec
jo
aam
rol
insl
fstpl
inc
pushf
mov
xor
cmp
insb
fisttpl
ret
daa
mov
insl
xor
fiadds
add
dec
sub
add
push
sub
les
sub
stos
pop
pop
or
std
pop
mov
mov
inc
loop
mov
mov
je
faddl
jae
std
lods
cmp
clc
push
add
jmp
stos
icebp
xlat
push
adc
movb
xchg
sbb
inc
pop
loopne
popf
mov
mov
shr
sub
and
dec
and
imul
jb
add
sahf
imul
xchg
lret
popa
test
add
popa
cmpsl
jl
jns,pn
lock
dec
inc
jge
jle
repz
or
movl
inc
psrlw
mov
test
xchg
or
fwait
pop
pop
std
dec
lcall
add
jnp
iret
add
int
push
dec
dec
pop
fdivs
xor
add
dec
fildl
adc
sbb
sub
or
dec
sub
ja
sub
bound
sbb
mov
data16
or
mov
pop
push
mov
push
je
addb
rolb
xchg
and
xorb
mov
faddl
aas
testb
dec
mov
out
adc
rcrl
lods
call
jl
fistl
adc
jnp
inc
inc
outsb
icebp
xchg
popa
out
or
xor
pop
cmp
nop
dec
sub
xor
test
shlb
or
pop
fsubrs
add
rcl
sahf
xchg
pop
adc
inc
push
jb
pop
sub
mov
inc
aas
fiadds
es
mov
lods
jp
adc
fdivrp
aaa
jo
movsb
mov
cmp
mov
movsb
jge
mov
cltd
push
or
pop
push
xor
mov
scas
test
sbb
in
cwtl
mov
sub
cwtl
add
push
mov
jae
popa
aas
jb
insb
enter
nopl
xor
idivb
lcall
lea
sub
fbld
or
cld
add
cmp
je
pop
pop
pop
sahf
arpl
xor
mov
xor
lea
push
enter
and
mov
push
pop
add
lea
or
push
add
mov
cli
dec
or
je
mov
sbb
mov
movups
add
sbb
in
sbbl
scas
push
mov
test
dec
jo
adc
clc
jbe
add
stos
push
aas
mov
and
sbb
add
ret
sti
jo
xchg
jecxz
sub
scas
or
popf
inc
pop
hlt
test
fs
mov
decl
ljmp
in
lods
ljmp
inc
sti
leave
rcrl
out
and
add
ss
cli
pop
lods
push
mov
pop
mov
inc
jne
mov
and
mov
mov
ss
mov
aam
jecxz
and
cld
sahf
movq
cmpsb
and
into
sbb
mov
pop
out
insb
push
mov
lds
lcall
xor
xlat
loop
mov
test
inc
sbb
xchg
jge
test
cmp
inc
fs
mov
test
pop
bound
cmp
fwait
adc
sti
or
mov
leave
and
scas
sub
out
outsb
mov
push
fbstp
lock
adc
adc
jnp
into
xchg
add
sub
into
jb
adc
mov
pushf
mov
mov
sub
or
in
push
addl
cmp
mov
pop
and
jg
jl
xchg
mov
popa
lret
mov
es
test
mov
mov
mov
cwtl
rcll
int3
cmpsb
fisubs
or
sub
fistpll
xor
imul
inc
push
mov
lahf
punpckhdq
shlb
ret
leave
shlb
mov
mov
xor
xor
add
mov
sti
cwtl
movsl
mov
xchg
sub
test
and
add
dec
js
jae
icebp
gs
fcomi
icebp
xchg
leave
fs
mov
push
popf
pop
fsubrl
mov
jae
fdivr
daa
lahf
out
fwait
pop
cli
imul
inc
jmp
call
sub
arpl
test
xchg
xchg
jnp
out
cld
mov
xor
pusha
sbb
das
mov
stos
lahf
rcrb
lret
repz
push
or
xchg
xor
sarb
fidivs
call
push
fistpll
push
out
xchg
xor
in
mov
sub
push
enter
test
sbb
ja
xor
mov
and
outsb
xor
addl
lea
or
dec
mov
xor
bound
outsb
mov
les
xchg
outsl
jl
pushf
sub
pop
mov
mov
fidivrl
clc
sub
addr16
cmpsb
sbb
jge
in
and
adc
sub
push
fidivrs
fnstsw
sub
sub
and
xchg
pop
leave
pop
repnz
cli
xchg
fnstcw
aad
fsubrs
or
inc
lret
dec
jmp
stc
adc
outsl
and
jbe
sub
das
mov
stos
sbb
lcall
lret
leave
or
daa
jecxz
jp
xor
in
loope
bound
add
jne
rcrb
shlb
push
cli
addl
jne
push
mov
cmp
and
xchg
inc
mov
movsb
sub
movsl
cmp
dec
and
and
into
jecxz
or
sub
cli
jae
repnz
cltd
imul
sti
lods
adc
cmp
pop
xchg
lret
enter
rcrb
out
bound
cmp
fidivrl
stos
ja
and
orl
ror
jmp
adc
pop
lahf
jge
mov
in
mov
inc
leave
jnp
inc
out
sar
push
pop
paddw
xlat
cmp
cmpsl
repnz
popa
leave
cmp
xchg
int3
call
sahf
stos
cmp
dec
mov
xchg
and
push
add
fsubs
mov
cmp
iret
pop
xlat
mov
jo
enter
mov
and
inc
lcall
out
lods
mov
sub
insl
mov
jmp
mov
js
stos
shll
pop
and
sbbb
js
lahf
lcall
call
arpl
shlb
add
jns
ficoms
repz
aam
ret
mov
ret
fsubrs
add
lahf
out
fisubs
jo
das
stc
inc
fs
fdivl
mov
test
xor
jno
mov
cmpsb
int3
mov
popf
cli
enter
in
outsb
out
dec
cli
scas
jb
filds
jb
rcrl
mov
push
jl
cmpsl
ja
pop
mov
push
stos
cmpsb
iret
adc
mov
int3
mov
pushf
jle
outsl
push
push
in
loopne
or
xchg
pop
mov
fs
push
jg
jae
add
push
jl
mov
ljmp
mov
je
incb
sbb
incl
lretw
push
test
rclb
xchg
push
adc
mov
das
xchg
jecxz
pop
popa
jmp
rcll
xchg
cltd
inc
xchg
mov
in
push
push
popf
into
push
loop
test
pop
cmc
and
and
jl
inc
leave
pop
and
adc
mov
pop
nop
cmpsl
mov
sbb
mov
mov
mov
mov
sub
or
andl
adc
test
push
arpl
inc
push
xor
out
hlt
jne
and
fs
sbb
jno
rolb
in
push
ret
mov
jns
cmp
xchg
decl
es
pop
orl
ret
or
or
stc
pop
mov
popf
jecxz
xor
cmpsb
fsubs
xchg
stc
stos
movsb
adc
cmpsb
add
jae
inc
cmp
jns
cmc
fidivl
leave
movsb
movsb
ss
lea
inc
pop
push
int
dec
jl
shl
sbb
mov
fstpl
mov
shl
push
push
sub
cmc
xchg
in
imul
fistl
and
in
mov
stos
and
dec
lret
negl
jmp
jnp
lcall
mov
xor
das
sbb
inc
not
jmp
jo
addb
adc
aas
lods
dec
xor
mov
jnp
and
lods
ret
ja
into
das
std
mov
lcall
lds
lcall
test
sub
push
push
fldl
lret
mov
sub
out
push
test
outsl
jecxz
test
out
sbb
rcr
xor
inc
push
mov
insl
xor
clc
test
pop
lock
xchg
jmp
and
shll
std
xchg
xchg
cmp
outsl
jl
jecxz
xor
inc
and
adc
and
loope
clc
addr16
lea
sub
out
pop
add
mov
aas
imul
push
cmpsb
mov
and
leave
ror
jecxz
ud0
cmp
nop
add
shr
sub
mov
xchg
or
jnp
push
idivl
and
push
mov
std
xchg
repz
sbb
mov
imul
add
xor
orb
daa
push
jp
adc
sbb
dec
movsb
and
sti
dec
xchg
stos
popf
dec
flds
sti
fsubrp
push
scas
pushf
dec
popf
pop
outsb
stos
inc
clc
dec
dec
or
sti
test
mov
sbb
dec
jne
sbb
inc
and
mov
sub
pop
inc
add
xchg
mov
mov
fldcw
add
lods
pop
mov
or
jmp
out
mov
sbb
add
lods
push
cmp
test
xor
mov
add
lods
dec
xor
ret
stos
std
xchg
xor
fadds
ja
sbb
sub
xchg
ja
out
jl
sbb
mov
daa
inc
pusha
xor
sbb
mov
cmc
andb
repnz
pop
mov
jmp
leave
mov
scas
adc
lret
loope
ds
mov
hlt
pop
out
inc
mov
mov
mov
int
mov
push
out
push
orb
mov
aaa
cmc
push
jb
dec
fs
sbb
xchg
push
jg
or
out
insb
orb
fcoml
xchg
pushf
loope
sub
insl
test
faddp
iret
cmpsl
loop
popa
or
cmc
jno
fbstp
jo
fmuls
sub
or
adc
je
jae
xor
or
add
xchg
xor
mov
sarb
pop
xor
inc
inc
hlt
clc
jno
cmc
or
test
out
push
mov
pop
sub
inc
dec
pop
adc
pop
or
stos
clc
hlt
jp
int3
sbb
pusha
ljmp
loope
adc
out
and
push
lods
pop
fisubs
stos
es
out
ret
xchg
cmpsb
xor
aas
cmp
or
fwait
lahf
paddb
ss
sbb
sub
jno
sbb
or
jp
mov
les
xchg
add
aam
add
repz
fwait
aas
jl
pop
xor
xor
sar
adcb
fs
push
subl
mov
mov
or
xlat
adcb
cmp
jbe
push
fs
outsb
inc
lahf
or
adc
push
xor
cmp
push
mov
fbld
in
ds
lahf
vpsubsw
push
dec
and
rclb
mov
stos
dec
insb
mov
jmp
fldcw
out
pop
je
sbb
adc
and
push
stos
adc
std
jecxz
adc
les
xor
mov
lret
mov
cmpsl
dec
bound
push
and
jnp
icebp
mov
notb
sub
mov
or
aam
nop
jmp
js
insl
aad
sbb
dec
aam
cmp
test
sbb
imul
mov
mov
and
int
mov
das
lds
sti
jo
lds
add
push
xchg
jmp
call
adc
ficoms
adcb
or
sahf
cmc
icebp
dec
lods
dec
jmp
dec
and
adc
add
push
mov
sbb
out
mov
cli
or
inc
shlb
add
mov
out
mov
jns
xor
mov
mov
fildl
aad
call
cmp
or
nop
mov
push
push
aaa
sub
push
imul
cmp
push
add
lea
jne
scas
inc
and
mov
push
popf
xchg
push
popf
roll
or
fisubrl
inc
mov
jmp
mov
push
in
xor
mov
pop
mov
jl
nop
loopne
xor
or
push
lcall
or
sbb
mov
insb
jecxz
dec
dec
stos
sbb
mov
insb
popa
std
inc
lahf
test
cs
call
dec
adc
ret
mov
xchg
inc
inc
cmp
inc
cmp
add
xor
xor
adc
cmp
sub
test
dec
icebp
xlat
mov
addb
mov
cmpsb
sub
jo
jne
push
mov
push
cltd
and
ljmp
leave
subb
ss
loopne
or
inc
add
loopne
mov
jo
dec
sbb
outsb
scas
or
and
xlat
push
mov
addr16
sbb
ret
xor
std
roll
push
adc
fwait
dec
in
mov
pop
scas
sarl
push
push
test
jae
dec
add
out
inc
fisubrs
adc
jae
lea
xchg
inc
fdivrl
fadd
test
stc
int
sub
test
sub
aad
insb
dec
lret
sub
xchg
pop
mov
rcrb
mov
add
mov
sub
out
adc
lds
aaa
cmp
sub
nop
lcall
rorb
inc
out
cld
cmpsb
sbb
pop
xor
adc
push
jge
pop
mov
push
xor
arpl
pop
decb
adc
push
cld
cmpsl
repz
pop
mov
cltd
mov
or
ret
mov
mov
aad
inc
pop
pushf
dec
or
mov
insb
es
stc
mov
rorl
mov
push
push
fbstp
pop
test
pop
in
push
data16
sbb
jne
dec
mov
gs
inc
iret
sub
push
lcall
xchg
pop
mov
repnz
xchg
mov
cs
jl
add
jb
in
popf
jnp
cmp
push
fstpl
sub
std
scas
jecxz
jle
cmc
dec
jnp
or
clc
xchg
push
loope
ljmpw
mov
add
mov
int3
inc
cld
push
icebp
mov
mov
adcl
repnz
fxch
cmp
push
daa
mov
xchg
jmp
ret
push
cmp
leave
jns
test
cmp
fmuls
cmp
xchg
scas
xchg
pop
adcb
hlt
test
mov
mov
xchg
in
mov
add
sub
mov
xchg
inc
cmp
aam
xor
loop
test
stos
xor
fsubs
sbb
stc
push
add
sbb
mov
mov
dec
idivb
mov
lods
mov
mov
outsb
lcall
loop
mov
adc
mov
adc
mov
ljmp
mov
or
sub
and
cltd
scas
shll
stc
mov
jmp
std
jge
fiaddl
push
shrb
push
jo
in
sbbb
test
sbb
rclb
and
sbb
pop
lods
sti
inc
std
inc
push
pop
or
hlt
aas
pcmpeqd
push
or
add
rolb
pop
loop
bound
dec
dec
rcr
faddl
cmpsl
movsl
insb
cmp
dec
shll
es
fsts
xchg
mov
or
fcmovb
iret
adc
stc
call
leave
lock
cld
sti
test
pop
cmp
jbe
ljmp
jae
jmp
lea
pop
mov
xchg
imul
dec
in
popf
int
inc
out
movsb
push
mov
and
mov
iret
xchg
pusha
pcmpgtb
pushf
sbb
data16
dec
dec
aam
pop
inc
xchg
lret
cmp
leave
mov
or
mov
xor
and
and
test
call
popa
insl
xor
sbb
jo
enter
sbb
cs
add
mov
mov
lock
out
fdivp
lret
lds
rorb
jle
jae
adc
bound
adc
adc
xchg
push
or
ja
add
pop
sub
xchg
xlat
sbb
insl
and
aaa
xchg
aas
jns
repz
test
into
sub
pop
pop
dec
push
popa
sarb
insl
cs
cmp
dec
lock
fcoms
xchg
in
out
mov
mov
jmp
cli
push
cmp
fmuls
mov
in
lcall
sarl
fnstenv
adc
jae
inc
cs
sub
inc
xchg
aas
xor
dec
fnsave
pop
cli
cmp
mov
inc
rcll
push
mov
mov
sub
clc
mov
or
pop
shll
mov
sub
lahf
pop
les
add
shrb
daa
inc
xor
rorl
pop
add
jge
out
dec
add
fdivrp
cmp
in
and
add
jmp
dec
xchg
int3
jbe
addr16
call
pop
xor
mov
je
jo
repz
and
ss
scas
lods
arpl
inc
inc
js,pt
xchg
or
stos
mov
mov
popa
sub
gs
jmp
popa
sbb
mov
js
jmp
enter
mov
inc
loopne
fldl
std
or
inc
es
packssdw
movhps
pop
jmp
mov
std
jbe
sar
mov
imul
daa
jae
enter
add
sbb
mov
push
and
mov
pop
mov
lahf
cmp
xor
aam
add
rolb
dec
hlt
add
pop
sub
jbe
lret
outsb
jl
int3
pop
fcomps
insb
insb
ret
sbb
insl
mov
es
loop
test
push
ljmp
dec
mov
scas
lods
loopne
clc
into
mov
ja
cmp
or
mulb
fimull
mov
les
sub
daa
jg
pop
sub
dec
aas
sbb
and
sub
cmp
lods
jne
xor
int3
xor
in
jle
movsb
sbbb
ret
lock
bnd
xchg
nop
inc
in
stos
xchg
ja
rcrl
pop
sbb
xchg
les
cmpsl
loop
sub
cwtl
mov
jg
cmpsl
fwait
xchg
jl
xlat
lock
sbb
cmp
mov
sbb
mov
inc
mov
push
mov
jle
lahf
rcl
mov
jmp
into
xlat
or
je
cmp
mov
jl
scas
push
in
pop
jge
xchg
pop
lcall
fadds
mov
cld
xor
or
fdivrl
mov
mov
add
pop
mov
les
mov
aad
mov
in
js
and
jle
push
push
ljmp
mov
scas
bound
xchg
cmpsb
outsl
sarl
xor
jp
sub
xor
repz
aaa
shlb
je
cld
fstps
sub
or
and
sbb
outsb
push
mov
sbb
pop
jo
stc
jmp
fsubs
fdivl
stos
inc
movsb
mov
sub
test
inc
push
in
xchg
pop
fistps
fadds
push
mov
jle
rcrb
rcrb
xchg
pop
lcall
adc
stos
mov
add
mov
push
rorl
mov
sbb
jae
out
scas
fwait
and
bound
repnz
mov
jecxz
pop
mov
push
es
in
xchg
jbe
in
pop
push
jb
dec
pop
sub
into
vandps
mov
add
sub
repnz
push
data16
sbb
or
push
enter
mov
and
jp
in
add
mov
mov
aaa
pop
dec
xor
mov
and
enter
into
push
mov
push
sbb
fcoml
xor
aam
outsl
sbb
cmc
in
cmp
xor
xchg
jp
push
jne
inc
push
mov
pusha
jg
fists
ds
mov
aaa
or
fldcw
lds
mov
in
int
cmp
or
out
popf
pop
loope
mov
dec
loop
shrl
stos
hlt
xor
aad
lret
push
in
mov
loop
mov
js
js
aas
movsb
je
out
rol
leave
adc
and
xlat
cmp
scas
mov
clc
ja
push
add
jnp
lahf
cmp
jbe
ja
fs
xchg
orb
ss
adc
lret
push
mov
lea
xor
mov
jge
dec
adc
xchg
sbb
sbb
or
xor
ret
aaa
xchg
sbbl
push
lahf
jecxz
loopne
dec
push
inc
fs
xchg
mov
xor
clc
jb
and
push
rorb
cwtl
pop
mov
add
sbb
mov
shrl
daa
mov
or
mov
push
addr16
in
ljmp
sbb
sub
pop
push
or
jb
cmpl
dec
or
test
fdivrp
add
or
inc
in
sbb
lcall
and
std
dec
arpl
andb
std
lahf
shlb
repz
pop
xchg
cwtl
add
mov
fcoml
iret
inc
xor
cmc
jl
jne
xlat
ficompl
push
addb
sub
adcb
dec
lea
fadds
les
adc
les
mov
push
mov
pop
or
insl
hlt
inc
cmp
int3
ds
nop
fldenv
lock
incl
pop
arpl
xchg
in
xlat
add
orl
aaa
jo
mov
shll
adcb
pop
rcll
jl
push
movsb
shl
rolb
xchg
fwait
push
daa
mov
popa
mov
push
xchg
pop
adc
loope
popf
lahf
mov
sbb
sub
shll
push
jns
bound
ficompl
mov
sti
aad
call
dec
std
mov
orb
mov
inc
test
inc
push
cmp
mov
xchg
aas
std
sbb
dec
test
shlb
push
and
mov
add
mov
add
pop
adcl
sbb
mov
loope
add
idivl
xor
andl
inc
and
lea
jns
in
mov
push
xchg
push
adc
repz
fiadds
nop
xchg
lock
jne
add
lcall
sbb
sti
xchg
lahf
sbb
lds
cmp
sbb
jbe
and
shrb
cmpsb
sub
push
adc
dec
ror
mov
mov
test
sti
sub
mov
jl
testl
mov
mov
ss
lcall
or
repz
in
pop
cltd
aaa
inc
stos
sub
out
out
mov
enter
loope
pop
dec
test
lods
testl
lds
inc
test
pushf
inc
das
icebp
push
or
cmpsl
test
daa
or
push
add
push
adc
mov
pop
pop
jle
xchg
mov
adc
xor
pusha
out
jg
jecxz
pop
test
and
dec
sbbl
test
lock
mov
dec
stos
xchg
fsubrs
rcrb
addr16
add
adc
xchg
stc
pop
xchg
add
dec
popa
jp
rorb
mov
sub
pop
jae
adcl
xchg
inc
xor
mov
cmp
and
jecxz
add
aam
ret
test
imul
cmp
push
idivb
inc
lds
clc
push
inc
add
xchg
ja
mov
dec
mov
push
pushf
rcrl
cli
fdivr
add
mov
mov
pop
das
pop
xor
jbe
test
or
pop
les
ror
pop
pop
mov
fstpl
sbb
test
mov
jmp
in
popa
ror
dec
or
fdivrl
push
mov
and
jb
shrl
mov
sub
les
addr16
push
sbb
jmp
bound
push
jmp
icebp
lea
jmp
sbb
addr16
in
mov
aam
out
outsl
fldl
lods
das
jmp
lcall
or
cwtl
xor
pop
cmpsb
or
dec
add
sti
lahf
repz
xchg
mov
scas
xor
mov
ret
xchg
loop
jl
cmpsl
mov
pop
mov
fdivp
dec
pop
rcr
mov
jne
popa
shlb
movsb
lcall
and
pusha
call
rolb
and
outsl
imul
dec
out
jne
imulb
out
enter
cmpsw
std
and
fsubs
aam
jmp
iret
stos
shrb
pop
jge
mov
and
inc
pop
fstl
xchg
sbb
and
ret
or
cmovge
leave
call
adc
insl
push
leave
xor
fistl
das
daa
cmp
sub
insl
mov
add
bswap
rcrb
jae
call
fsubs
or
iret
mov
jne
sub
jecxz
ljmp
jp
jnp
int3
mov
rcl
mov
inc
mov
inc
out
xor
xor
repnz
adc
ss
xchg
sub
cmp
add
jne
stc
bound
push
mov
pop
inc
mov
sbb
shlb
gs
test
mov
cmp
lcall
sub
addr16
mov
push
adc
cli
jae
mov
xchg
mov
arpl
fbstp
ret
mov
or
push
cwtl
dec
cmp
pop
ficoms
xchg
in
dec
jb
xor
or
gs
jmp
in
jbe
jle,pn
cmp
jmp
cmp
ja
testb
dec
lcall
inc
sub
rcl
loopne
in
pop
inc
dec
and
sbb
xchg
nop
loop
inc
inc
pushf
adcl
xor
jae
mov
dec
stc
testb
out
push
or
arpl
cltd
fcoml
lcall
aaa
inc
jns
lahf
addr16
sbb
imul
push
fisubrs
push
sbb
dec
cmpl
in
rorb
xchg
mov
sub
inc
inc
cmc
xorb
cmp
push
shll
mov
decb
push
sahf
jns
jg
pop
pop
and
mov
cli
clc
cmpsl
xchg
or
ds
mov
pop
push
test
stos
adc
xchg
arpl
mov
mov
inc
jl
sbb
je
aad
mov
cmpl
les
cmpb
mov
aad
test
loopne
xor
xchg
cmp
iret
cmp
or
push
and
mov
cmp
xchg
push
mov
jecxz
and
pop
push
aas
std
out
scas
mov
addr16
in
stos
sbb
out
mov
dec
ret
xchg
insl
inc
ss
mov
or
or
mov
or
jne
outsb
inc
fsub
push
fldt
sub
in
fs
insb
push
push
aaa
cld
les
xlat
out
js
pop
mov
mov
mov
scas
jg
adc
movsb
mov
adc
stc
sbbb
pop
loop
sbb
fwait
mov
aam
mov
inc
pop
jg
mov
in
cmp
popf
fbld
mov
mov
mov
subb
movsb
mov
mov
cmp
shll
test
mov
mov
loop
push
or
lea
add
jnp
popw
not
cmp
mov
xchg
imul
cmc
frstor
out
lret
push
cmp
fistps
dec
and
pop
fcmovnu
xlat
addr16
lods
mov
std
mov
cmc
pop
ss
mov
rorb
sub
shll
xchg
mov
in
frstor
insl
cmp
mov
pop
xchg
pop
mov
pop
dec
xorb
stos
mov
and
mov
dec
sub
mov
or
or
pop
jnp
adcb
into
and
jne
mov
mov
xor
mov
push
dec
push
pop
stos
notl
pop
inc
xchg
subb
nop
clc
loopne
fistps
and
call
addr16
adc
xchg
mov
pop
shlb
push
dec
imul
jg
pushf
inc
mov
jle
movsl
jb
mov
clc
push
aas
jbe
cs
in
fisubrl
addl
mov
xor
jmp
sbb
outsl
addr16
inc
mov
imul
or
ret
pop
addr16
adc
inc
xchg
fdivl
mov
aas
hlt
mov
lods
jbe
mov
movsb
icebp
aad
dec
sbb
adc
pop
fstl
into
pop
mov
stos
shll
xchg
pop
cmc
and
jb
mov
gs
lock
fsub
push
ret
xchg
mov
push
dec
jbe
add
xchg
pop
fnstenv
cmpsl
add
mov
pusha
mov
xor
in
adc
mov
pop
shl
fcompl
cmp
xor
fs
sbb
stc
push
or
loope
push
outsl
or
incl
mov
mov
sbb
and
xchg
faddp
std
jbe
add
sub
es
xor
xor
pop
clc
ret
or
pop
jno
lcall
adc
xlat
cwtl
jno
or
sbb
jns
sub
adc
aam
xor
cmp
adc
push
repnz
out
xor
mov
icebp
xlat
out
cli
mov
dec
dec
aad
jno
or
inc
int
or
hlt
loope
xor
and
ljmp
js
ret
lret
pop
lods
dec
sub
cmp
pop
sub
add
jmp
int
xchg
jnp
cmp
jbe
and
xor
jge
cmpsb
dec
xor
cmpsl
pop
add
mov
sub
lock
int3
ret
lods
mov
push
loope
jg
inc
mov
mov
sbb
adc
and
lods
or
jl
bound
push
mov
or
clc
mov
mov
lods
daa
scas
adc
cmp
jg
stos
mov
jp
in
jmp
xor
push
leave
pop
ja
scas
in
dec
out
push
fsts
add
imul
cld
sub
xchg
insb
nop
pop
sub
test
xlat
es
cmp
jecxz
or
out
into
insl
ret
addr16
cs
xor
fistpl
dec
addb
sbbl
cmp
xor
lcall
sbb
sbb
mov
mov
outsb
test
mov
sbb
movsl
mov
leave
popa
fimuls
test
das
sahf
mov
test
sahf
mov
fdivrl
cmpsl
aaa
sti
movsl
pop
inc
inc
or
xor
add
imulb
leave
shrb
imull
xchg
fisubs
mov
inc
in
lock
out
lea
jns
mov
mov
in
add
cmpb
and
add
xor
and
mov
lret
aam
adc
dec
mov
sbb
mov
adc
or
aad
pop
inc
xor
imul
rcr
pop
sbb
mov
or
xchg
adcl
lea
rcr
xor
leave
push
out
or
adc
aas
push
jp
sub
xchg
add
ljmp
lret
inc
mov
sarb
push
out
add
aad
mov
ljmp
or
outsb
loop
daa
push
test
pop
lahf
mov
push
dec
jp
int3
out
rep
or
adc
shrl
and
loope
ficompl
std
dec
or
cmc
mov
jb
jmp
add
ss
lcall
ret
ds
loopne
icebp
out
or
and
leave
mov
ret
xchg
movsb
js
stos
mov
sub
push
add
js
daa
jbe
repnz
sub
js
sarb
fs
push
dec
mov
pop
pop
push
pop
dec
jns
out
popa
push
movsb
mov
pop
jmp
repnz
cmc
lahf
push
dec
dec
imul
pop
cli
movsl
jns
arpl
jp
in
mov
or
sbb
sbb
mov
push
mov
lret
xor
les
add
popf
fdivrl
dec
jmp
js
sub
mov
into
cld
mov
enter
mov
scas
arpl
aam
repnz
dec
mov
sbb
sub
sbb
cmp
dec
loopne
adc
aas
in
jg
add
jnp
in
int
bound
add
rcr
jmp
sbb
dec
frstor
cmp
mov
mov
pop
lea
cs
adc
xchg
ret
cld
out
mov
dec
scas
cmc
sub
xchg
pushf
imul
jbe
sahf
jne
or
cltd
pmaddwd
mov
insl
fdivrp
mov
inc
xor
xor
sbbl
lods
cmp
push
or
jne
mov
jae
cmp
pop
sub
int3
mov
lret
shr
mov
repz
or
popf
imul
xchg
out
sbb
xchg
xor
xchg
xchg
lock
or
int3
adc
cmpsb
in
push
ds
int3
out
pop
fisubrs
sahf
bound
pop
cmp
js
fistl
push
xor
pop
or
je
in
mov
mov
test
cmpsl
or
aad
jp
fwait
dec
push
mov
mov
pop
add
pop
inc
insl
iret
and
and
jbe
fwait
pushf
xchg
icebp
mov
pop
xchg
aam
fcomps
aam
test
cmp
mov
push
xor
mov
jbe
aaa
and
push
ds
call
aam
daa
or
mov
jne
les
mov
lret
lcall
jb
mov
xchg
xchg
mov
fprem
aaa
std
inc
xor
dec
adc
push
jmp
les
nop
mov
xor
jno
ret
lahf
lods
push
lcall
and
cmc
inc
jecxz
jmp
sbb
mov
ret
mov
scas
sub
inc
out
aam
cmpsb
sub
imul
icebp
aam
pop
loop
mov
loopne
enter
popa
dec
dec
mov
inc
outsl
push
push
insl
loopne
adc
out
repz
insb
test
pop
gs
lret
pop
cmp
shl
jmp
add
mov
addr16
add
jg
push
cwtl
repnz
jb
mov
loopne
xor
out
pop
jns
test
mov
push
mov
dec
scas
cltd
adcb
mov
mov
jmp
ds
sarb
fs
mov
push
add
nop
sub
pop
nop
lds
int
std
adc
hlt
sub
mov
js
cmp
xlat
lds
push
inc
jge
nop
sub
inc
cmp
sbb
pop
push
inc
push
insl
xchg
push
add
mov
fbld
cld
lret
mov
push
adc
mov
mov
xchg
sahf
gs
mov
cmp
leave
stos
fwait
clc
cld
adc
or
jno
sub
sbb
rolb
and
mov
hlt
scas
pop
shlb
orb
and
roll
dec
imul
mov
pop
dec
pop
cli
cmp
push
xor
ds
mov
cs
xor
and
rclb
sbb
push
out
popa
ss
jo
add
ret
mov
jle
lods
push
dec
lea
insl
sbb
and
mov
test
mov
ret
or
cmpb
jo
mov
test
pop
adc
repnz
aas
or
add
add
jl
rcl
mov
aam
or
or
in
aam
push
lret
mov
dec
mov
subb
cwtl
fwait
mov
gs
in
jl
aad
xlat
add
lea
imul
mov
popf
lcall
adcb
pop
insb
jle
lret
pop
cmp
and
adc
mov
outsb
mov
jnp
cmp
pop
pop
fstps
mov
out
add
add
or
imul
rorl
lock
icebp
cmp
bound
push
xor
lcall
dec
and
stc
jg
jmp
xchg
cmp
adc
fcoms
jbe
sub
mov
xchg
push
cmp
inc
mov
mov
lret
jp
mov
das
lret
dec
and
call
orb
inc
mov
enter
xor
aaa
lock
movsl
xor
movsb
xor
enter
mov
popa
mov
das
and
xor
xchg
xchg
and
and
xchg
cld
data16
or
aas
jp
sbb
lret
aaa
js
movsb
or
lock
ja
sbb
sahf
inc
aam
sbb
jp,pt
lods
out
fwait
out
lods
push
jmp
mov
mov
xchg
int3
gs
sub
and
mov
daa
enter
sub
lahf
jbe,pt
xor
cmp
cltd
ret
pop
inc
in
fildl
out
rclb
leave
sti
push
pop
inc
sbbl
ss
cwtl
mov
adc
mov
out
outsl
mov
or
pushf
imul
jae
fs
pop
scas
outsl
loop
mov
aam
mov
xor
incl
sahf
out
mov
pop
les
xchg
jle
shr
lcall
mov
fcoml
sub
sub
adc
sub
jmp
push
rol
sahf
and
jno
add
xchg
scas
adc
lret
not
test
dec
pop
int
or
adc
repnz
pushf
xchg
lds
cmp
cwtl
and
call
cmp
pop
and
ja
dec
sbb
movsl
add
jbe
xor
or
fistps
mov
aam
pop
andb
mov
and
in
push
jnp
rolb
gs
and
jge
inc
or
js
pop
sub
ja
fmuls
mov
push
gs
jb
or
push
fistps
add
lahf
or
fsts
xchg
das
outsl
scas
mov
into
xor
fdivrp
xchg
inc
inc
and
push
push
ljmp
inc
inc
push
andl
and
je
and
pop
xor
gs
dec
push
loop
xlat
cltd
into
jne
std
movsb
test
fcoml
sbb
sub
and
adcb
mov
scas
mov
xor
aam
pop
adc
loopne
int
fndisi(8087
test
dec
inc
adc
xor
inc
mov
popf
fiaddl
xchg
jnp
shl
lods
ret
adc
or
addb
cltd
dec
xchg
cmp
scas
cwtl
xchg
sub
imul
lret
or
push
call
sti
cwtl
ret
mov
push
dec
mov
jmp
adc
xor
adc
mov
dec
add
jge
dec
lcall
pop
mov
lods
in
cmc
push
gs
cmp
lahf
adc
inc
push
int3
mov
frstor
jae
xchg
jae
les
pusha
mov
lods
stos
insl
dec
add
mov
mov
inc
add
das
cmp
or
or
rorb
and
mov
gs
mov
jecxz
push
cmp
cwtl
icebp
scas
cmp
jno
mov
lcall
add
loop
cwtl
jno
bound
pavgb
mov
test
mov
mov
dec
dec
jge
les
into
cli
or
and
add
dec
out
mov
out
loope
cmpsb
or
xlat
std
dec
pop
lock
push
pop
sahf
les
icebp
add
mov
dec
test
adc
push
inc
divl
xchg
or
push
shr
xchg
mov
xchg
adc
test
sbb
mov
mov
mov
popf
js
pop
jg
pop
fcmovu
sbb
push
jnp
outsl
pop
aaa
sbb
sbb
push
shlb
daa
imulb
inc
lret
testl
ja
clc
into
pop
push
xor
incl
movsl
cmp
mov
sub
lock
movsb
and
mov
jmp
sub
inc
jnp
lcall
imul
sbb
xlat
rcl
push
imul
repz
adc
cmp
push
sbb
sub
inc
leave
test
iret
fimull
or
mov
add
or
int3
scas
mov
mov
push
sub
loop
movsb
iret
pop
js
xchg
out
and
cli
lock
lcall
or
subb
jmp
pop
jns
into
ficompl
insb
dec
add
aad
popa
push
nop
jmp
orb
ret
cmp
mov
repnz
popf
repnz
es
fwait
aas
int
inc
or
ljmp
movsl
rcr
push
bound
sub
jle
lahf
fucomp
cwtl
loope
mov
clc
mov
int3
je
icebp
xor
jo
into
or
in
cmc
xchg
shlb
sub
xor
mov
pop
push
dec
jl
stos
fisubs
xchg
rorl
outsl
adc
push
inc
inc
idivb
test
or
fiadds
xor
mov
jbe
jbe
lahf
ret
or
fcomps
jmp
push
push
xor
pop
mov
fld1
test
or
mov
or
inc
jae
dec
dec
mov
cmpsl
mov
test
es
add
js
xchg
cmpsl
inc
inc
ljmp
jb
lock
pop
ds
and
mov
pushf
shll
movsl
and
loope
retw
jne
aaa
adc
and
insb
int3
shll
or
jns
addb
test
or
pop
pop
pushf
jae
xchg
inc
dec
jmp
or
aas
jge
ljmp
sahf
or
testl
ret
sti
leave
das
mov
mov
cld
in
sbb
jns
clc
pop
shl
cmp
popf
ficoml
xorb
inc
xor
andl
std
fidivrl
cmp
sub
jo
mov
loop
add
adc
push
loop
sarb
sbb
pop
dec
ret
jmp
mov
mov
jo
and
cmp
xlat
mov
cmp
mov
push
punpckhbw
mov
sbb
into
ret
cmp
jne
test
mov
mov
sbb
mov
nop
push
rorl
rorl
movsb
inc
daa
js
mov
mov
inc
das
lcall
shlb
xchg
mov
add
ss
pop
mov
xchg
in
fcoml
push
add
add
adc
sub
frstor
psrlq
sbb
push
loop
and
adc
call
sbb
insb
inc
sbb
dec
mov
jo
ret
addr16
inc
pop
mov
pop
pop
adc
push
sti
inc
shll
jo
cmpsb
call
sub
mov
push
or
mov
ficoms
imul
mov
xorl
xor
push
push
je
mov
aaa
sbb
pushf
sbb
sub
jo
jp
cmp
inc
push
scas
jge
adc
mov
or
popl
iret
popa
push
out
push
leave
out
and
xlat
call
insl
adc
addr16
mov
cltd
inc
imull
sahf
repnz
pop
xchg
les
dec
sti
shrl
testb
in
mov
icebp
xchg
xchg
mov
xchg
pop
imull
pusha
jg
lods
sub
movsl
inc
pop
cmp
ja,pn
push
enter
pushf
sub
hlt
add
xlat
jg
outsb
icebp
cmp
out
fwait
gs
fwait
pop
aaa
scas
in
aas
mov
xchg
lea
xchg
daa
nop
sub
cmp
pushf
jle
in
dec
out
add
lods
or
add
add
add
push
sub
int
rolb
sbb
enter
sub
nop
jae
outsl
adcb
sbb
xchg
push
add
add
mov
inc
fadds
das
stos
mov
divl
sbb
mov
daa
jnp
stos
xchg
xorl
cmc
adc
prefetcht0
cmp
cmpsb
into
xchg
mov
jnp
adc
ret
call
inc
push
sbb
mulb
mov
fdiv
and
mov
pushf
cmp
xchg
clc
inc
cltd
sbb
xchg
or
ret
sub
or
or
or
inc
mov
adc
and
or
fnstcw
jg
xchg
jno
scas
stos
stc
adc
insb
xor
push
adc
pop
cmp
aaa
cltd
adc
adc
xor
call
push
sti
fsubrs
jecxz
dec
hlt
in
pop
lods
mov
movsl
mov
lods
lcall
lahf
adc
add
adc
cmpl
or
sbb
cmc
in
xor
shrl
test
pushf
adc
hlt
std
xchg
push
jo
cld
fldt
test
mov
mov
mov
or
cmp
lods
and
inc
sbb
bt
mull
push
adc
insl
inc
xor
xor
inc
into
jl
xchg
cmp
movsb
std
stos
push
mov
loope
jo
jge
cmpsl
rolb
lods
mov
and
jmp
or
out
jl
add
mov
adc
scas
push
lock
jbe
pop
orb
xor
outsl
fidivl
cmp
jge
test
lods
cltd
xchg
dec
sub
xchg
jne
sbb
fdivrl
dec
ret
mov
shrl
popf
mov
xlat
mov
sbbb
pop
andb
xchg
mov
sbb
xchg
lret
xchg
adc
loope
movsb
lret
jecxz
out
mov
in
mov
push
jo
mov
imul
in
mov
shrl
pop
and
jns
clc
int
cmpsb
dec
add
pop
pop
xlat
test
loope
popf
sub
add
inc
jne
aad
into
in
pop
add
lds
push
fimuls
cli
pop
test
into
sahf
push
xorl
sbb
sbb
jb
mov
pop
aaa
ret
cld
fcom
scas
pop
sub
jae
movsl
or
out
cli
dec
shl
or
dec
xor
xor
scas
mov
mov
lods
fs
clc
mov
insb
sbb
iret
cmp
ljmp
add
or
cmp
push
imull
push
jnp
fdivl
and
and
iret
into
xchg
xor
lret
in
push
fstl
jmp
loopne
sub
test
mov
dec
pop
fidivl
push
push
sbb
cli
push
inc
dec
shlb
lcall
mov
cli
cmc
pop
mov
pop
loop
add
call
dec
mov
adc
add
cwtl
sti
dec
cmc
lods
jp
jmp
lahf
mov
insb
orl
aam
pop
dec
jae
xchg
sbb
rcll
outsb
pop
loop
ret
inc
iret
and
sbb
dec
sub
jecxz
loopne
fcmove
mov
xchg
pop
or
push
dec
push
rcrb
enter
shll
jne
push
adc
jmp
push
ficompl
popf
mov
cmc
dec
push
add
push
fcmovnbe
insl
das
cmpsl
add
mov
and
enter
dec
dec
insl
jmp
and
xchg
pop
or
push
popf
mov
clc
hlt
mov
test
mov
daa
sub
jle
push
push
test
mov
jl
xchg
test
push
imul
mov
add
fs
in
data16
push
inc
int3
dec
in
mov
fs
ss
leave
mov
gs
mov
jg
out
push
mov
sbb
addr16
cmovle
sub
je
int
jns
adc
mov
mov
jl
mov
pop
rorl
mov
inc
sub
push
and
cmp
rclw
imul
xchg
aad
hlt
jmp
sti
movsb
mov
je
ret
mov
rolb
test
dec
xchg
inc
adc
or
jl
fwait
xchg
out
xchg
sub
arpl
push
xor
xor
subb
mov
test
mov
and
leave
and
sahf
cmp
lock
setp
lods
fs
in
loopne
mov
ljmp
inc
pop
xor
out
sahf
out
lock
cmp
mov
mov
fucomp
mov
arpl
bound
mov
xchg
cs
and
sarb
rorb
ret
jns
shl
outsb
mull
mov
mov
sbb
mov
clc
sub
data16
movsl
es
aam
lods
inc
aaa
xchg
xchg
insb
lret
mov
cli
pop
add
popa
push
or
aaa
adc
ret
cmpsl
push
sub
push
push
push
add
dec
nop
cmp
js
push
adc
or
or
aam
dec
push
dec
jmp
popa
gs
mov
lret
push
pop
sar
sub
jns
andl
seto
bound
sub
pop
fmull
cld
push
inc
fcmovbe
xchg
int
adc
sub
jge
sbb
mov
sbb
movsb
cmpsl
inc
inc
addb
fistl
mov
xchg
jnp
sub
mov
icebp
fimuls
mov
add
mov
idivb
mov
outsb
bound
inc
lret
aam
pop
sbb
and
pop
inc
xchg
sub
loopne
cwtl
fistl
push
test
jno
mov
out
mov
jno
in
mov
aaa
inc
xor
jecxz
or
repz
jl
push
mov
mov
je
icebp
pop
insb
mov
jo
in
fnsave
jmp
shll
fimuls
stos
mov
adc
outsl
sub
xchg
dec
out
test
fnsave
xchg
mov
out
out
xor
mov
mov
xor
outsb
or
repnz
jle
fldt
loope
mov
loopne
cmp
or
add
mov
lret
jle
mov
rcrl
mov
mov
cli
xchg
adc
cmc
sahf
mov
add
push
inc
push
sbb
push
dec
jecxz
lods
cmp
jmp
push
hlt
add
xor
fwait
xlat
or
add
and
sbb
pop
mov
xchg
cmpb
adc
filds
add
ss
mov
fisubl
ret
mov
jne
push
rolb
pop
js
out
cmpsl
shrb
insl
mov
jns
pop
lds
mov
ja
ficomps
imul
out
cmovbe
dec
sbb
sub
push
jns
cmpsl
xor
pop
mov
adc
adc
adc
inc
sbb
lods
cmc
xlat
stos
hlt
jp
ja
fadds
insb
cld
jg
jle
out
sub
clc
pop
dec
lods
fimull
jg
fistpl
data16
mov
ret
jmp
je
popa
adc
enter
dec
loope
xchg
dec
sub
pop
xchg
fcompl
iret
dec
mov
mov
adc
ja
jnp
cmp
mov
and
shl
enter
loop
test
ss
int3
jnp
mov
xor
jno
jnp
mov
mov
js
call
sub
jl
popf
mov
shll
add
xchg
lcall
in
cmc
lds
cld
inc
movsb
and
sbb
and
cmpsb
xchg
or
mov
repnz
pop
ja
es
mov
int3
mov
negb
xchg
dec
and
test
outsb
js
scas
mov
cmp
fstps
je
jmp
and
push
xrelease
sbb
stos
push
sub
mov
fiaddl
or
sub
push
xor
or
out
ret
inc
xchg
or
mov
inc
push
test
mov
fcmove
test
testl
fidivs
mov
fwait
xchg
inc
adc
cmp
pop
mov
fs
outsl
sub
dec
fcmovnbe
cltd
mov
mov
je
jno
fmuls
pop
stos
xchg
cwtl
mov
adc
cmp
test
outsb
xchg
aam
test
jmp
lods
aas
sarb
lcall
mov
jp
xor
stos
jge
add
test
push
inc
bound
pop
mov
sbb
xor
xchg
push
dec
mov
sub
or
cli
jbe
jnp
adc
ss
dec
subl
push
and
int3
mov
or
mov
mov
fmull
cmp
inc
xchg
xor
dec
js
xchg
lahf
mov
out
das
pop
test
sbb
mov
mov
inc
test
jmp
aaa
dec
and
das
mov
cltd
in
push
dec
sbb
sub
bound
mov
mov
and
lock
push
and
ror
mov
notl
sub
push
or
or
mov
push
data16
xchg
mov
push
mov
jno
or
push
mov
push
push
testb
daa
push
pop
jne
divb
mov
rcrl
fwait
xchg
insl
xor
xor
pop
arpl
xchg
pop
or
sbb
ds
test
push
xchg
push
inc
push
mov
sub
aas
jp
add
in
adc
popf
push
jno
dec
sbb
mov
cwtl
ret
cmpsl
jge
pop
mov
xchg
mov
loop
push
stos
mov
fnstsw
fdivp
aad
pop
push
cli
in
dec
cmp
insb
sarb
popf
mov
out
subl
movsb
fwait
jp
dec
sbb
fisubrs
stc
js
mov
jbe
push
mov
mov
cmp
jge
out
dec
pop
cmp
xchg
data16
stos
mov
shl
addr16
ret
xlat
testl
js
cmp
mov
mov
adcb
inc
fs
scas
pop
addr16
enter
jno
cmp
out
fidivrl
jecxz
push
jo
ss
jo
sti
lock
jle
sub
sbb
xor
lret
cmp
test
lea
pop
dec
sti
inc
popa
mov
dec
test
mov
insl
and
dec
daa
pop
cmp
aad
sahf
cmp
lret
and
mov
cs
xchg
xor
xchg
mov
push
out
clc
jmp
jae
pop
rorl
test
cltd
mov
les
push
test
mov
rorb
jp
xchg
lods
cmp
adc
cmp
inc
orl
rcrl
inc
lds
jne
rorb
lret
and
addl
mov
dec
ror
pop
loope
clc
in
mov
pop
movl
adc
loop
push
shlb
adc
es
shrb
mov
arpl
daa
add
push
out
cltd
loop
fdivl
xchg
add
loopne
push
pushf
add
xor
xor
pop
add
inc
lret
xchg
cmovne
xchg
fcomps
dec
mov
les
xor
pop
cld
xchg
gs
xorl
arpl
cld
sub
fldl
mov
enter
enter
mov
ja
jl
scas
negl
push
and
sub
ljmp
push
add
sbb
xchg
pop
pusha
pop
inc
fisubs
mov
cmp
mov
jge
lcall
fisubrl
cmc
jno
xorl
sbb
lahf
leave
pusha
push
fildl
lcall
ret
mov
sahf
into
jbe
mov
xor
push
and
das
and
lods
jbe
xor
imul
lcall
inc
rol
ds
sbb
repnz
test
sub
pop
mov
mov
ret
dec
pop
push
add
rcrb
ja
cmovge
aad
xchg
push
jae
pop
mov
dec
push
movl
pop
popf
inc
xchg
iret
fs
mov
or
daa
rolb
mov
roll
stos
mov
lahf
cmp
sbb
pop
repnz
les
lock
fwait
pop
inc
mov
cmp
insl
imul
loop
sub
cmc
xor
jmp
enter
sbb
in
sbb
dec
pop
cld
mov
hlt
push
jns
test
cmp
jg
insl
int
xchg
inc
pop
ds
jno
dec
in
sub
adc
jne
das
sub
xchg
push
xchg
push
pusha
sbb
jno
test
adc
outsb
cmpb
mov
es
outsb
mov
mov
in
cltd
clc
xchg
dec
mov
dec
int3
jne
cwtl
cld
nop
mov
lods
jns
mov
pop
push
fsts
xor
jmp
jo
imul
jl
xchg
pop
adc
xchg
insb
inc
popf
and
jnp
js
scas
and
mov
inc
mov
out
adc
sub
jbe
push
rorb
xchg
popa
cmp
sti
mov
sbb
xor
adc
mov
ds
or
mov
dec
dec
adc
jo
popf
xchg
sbb
stc
jge
aaa
sbbb
mov
mull
rcrl
xchg
dec
adc
stc
sub
stos
loopne
mov
idivl
pop
dec
fwait
push
arpl
mov
jp
out
js
es
dec
fidivrs
or
add
jecxz
jns
aad
sbb
insb
test
push
repnz
lea
dec
dec
sbb
out
sbb
add
push
rclb
sti
lods
outsb
bound
ja
out
clc
mov
in
mov
sahf
mov
jae
mov
faddl
or
rcrl
lcall
sub
lods
cltd
cmpsb
or
rolb
fcomip
das
mov
cs
js
js
jmp
pop
mov
imul
imul
enter
sbbb
pusha
ss
lods
call
adcb
rorb
mov
cmp
pop
mov
in
mov
divl
jmp
mov
bound
gs
insb
rolb
mov
mov
popf
dec
dec
push
xor
out
fs
inc
adc
inc
and
int3
loope
popa
out
inc
xor
jmp
pop
cmp
mov
stos
stc
push
or
sbb
sub
or
add
xchg
cltd
das
mov
std
push
pop
lea
jbe
test
ffree
rorl
sub
jecxz
or
inc
mov
aas
pusha
push
xor
push
sub
jmp
rcl
mov
add
outsb
mov
sbb
fsubs
and
dec
xchg
outsb
add
lret
or
out
lea
jo
fcomps
cmc
inc
repz
ss
mov
cmp
je
sub
mov
cs
inc
sbb
lcall
jmp
cmpsb
gs
and
lods
push
adc
and
jge
dec
test
shlb
gs
xlat
push
lods
lcall
add
imul
int
popa
xlat
xchg
xchg
sbb
fsubl
sub
xor
mov
je
adc
adc
sbb
adc
stos
inc
lods
pop
jmp
inc
push
fldl
jecxz
jno
sti
vprotw
push
push
mov
xor
scas
cmp
fst
decb
bound
sub
std
and
jge
jb
jnp
mov
iret
xchg
xchg
adc
dec
sbb
push
es
jp
cmp
or
sbb
divb
sbb
jecxz
imul
cmp
xlat
adc
subl
imul
push
push
loop
notl
mov
xchg
in
rol
bound
inc
jb
shlb
aam
push
bound
cs
icebp
push
xor
leave
sbb
pop
addl
push
shrl
int
and
aam
int3
sbb
push
xchg
pop
pop
imul
out
out
movsl
sub
sub
ljmp
cltd
loop
incb
adc
add
andb
pop
mov
cmpsl
inc
push
dec
jmp
or
jl
lret
outsl
ror
insl
insb
mov
xor
in
pop
push
and
ss
es
mov
pop
mov
sahf
push
loop
aaa
loopne
int
xlat
cld
mov
fcmovu
and
aas
andl
mov
mov
and
movsl
cltd
jecxz
aas
mov
mov
aaa
fdivrs
stc
push
out
clc
cmpsb
js
outsb
cli
cmp
jle
adc
addl
aad
aaa
push
ss
inc
fadds
js
fdivp
jbe
mov
push
ds
mov
push
notl
sbb
adc
jle
rol
or
mov
shll
ss
ljmp
mov
or
or
jns
lret
pop
movsl
sbb
sarb
and
mov
adc
or
bound
dec
sar
push
imul
pop
sar
pop
dec
int
adc
adc
jge
mov
and
xor
inc
jns
lahf
sbb
popa
fs
cmovae
xchg
and
push
cmp
jo
cmp
pop
push
out
sbb
xlat
cmp
sbb
cmp
pop
sub
div
sar
sbb
sub
jb
insl
mov
and
sub
and
lret
push
sahf
jge
std
test
xor
ret
aam
cmpsl
es
cmp
xor
mov
sarb
jbe
or
xchg
push
mov
fiadds
std
pop
sub
pop
add
cmpsb
adc
push
cltd
xchg
xchg
in
ret
sbb
out
movl
cmpsl
mov
sbb
push
popa
aaa
mov
arpl
sbb
pop
imul
xchg
hlt
jb
pop
pop
pop
dec
mov
jle
fldcw
mov
fadds
jle
sbb
int3
mov
push
popf
pop
sbbl
data16
and
jl
xor
pop
lahf
std
adc
xor
outsb
hlt
xchg
repnz
fstps
sub
or
leave
inc
push
movsb
sbb
mov
std
test
adc
iret
std
std
add
fnstsw
arpl
mov
inc
repz
lret
dec
movsb
lea
shr
in
cmp
jp
inc
mov
inc
cmp
sbbb
mov
bswap
and
mov
push
pusha
push
cmp
adc
pop
xor
fmull
lods
pop
mov
dec
lahf
add
add
add
pop
jo
xorl
mov
mov
pushf
push
cmp
push
enter
ret
mov
mov
inc
ss
icebp
in
lahf
inc
push
push
push
cli
hlt
clc
pop
pop
sub
ljmp
lds
stos
jae
inc
sub
cmp
rolb
sbb
cmp
test
int3
and
lods
pop
push
mov
fstps
repz
cmp
adc
jns
add
test
adc
outsb
cwtl
push
adc
outsl
insb
enter
xor
fs
aaa
cmp
shlb
sbb
fldl
pop
jnp
pusha
inc
mov
loope
loop
mov
out
fstpt
daa
sbb
outsb
cmp
std
mov
xchg
inc
xor
push
popf
loope
repz
ss
jg
lds
dec
adc
push
dec
movsl
lret
push
dec
jmp
cmovb
subl
cmpsl
and
arpl
int
dec
xlat
fwait
mov
push
cmpsl
jmp
lods
cmp
les
fistpll
push
sub
lret
xchg
int
outsl
nop
shll
xchg
lds
mov
js
push
icebp
cmp
mov
jne
je
xchg
xchg
imul
mov
lds
enter
int
pop
fimuls
xchg
std
or
aas
inc
scas
mov
in
retw
mov
mov
roll
lret
repnz
add
movsl
stc
popf
lods
stc
idivb
sub
fwait
xchg
sbb
pop
ljmp
mov
arpl
inc
add
push
xchg
es
repz
clc
xchg
dec
add
prefetch
insl
push
push
jge
mov
push
inc
xor
aam
jnp
push
std
xor
loop
adc
loopne
aam
cmp
aam
push
in
adc
fbld
pop
jl
inc
xor
push
ljmp
cmpsb
dec
fisttps
mov
outsl
xor
inc
jecxz
fst
jge
mov
pushw
mov
in
lret
stos
mov
add
jb,pt
cmpsl
inc
or
aas
mov
ljmp
pop
sar
insb
cmpsb
les
push
jmp
push
jns
pop
adc
movb
pop
ds
pushf
pop
push
dec
les
push
jb
xor
xlat
or
stos
mov
and
pop
xor
jle
mov
dec
xchg
push
repz
mov
xor
cli
sar
outsl
aaa
mov
jmp
dec
mov
sbb
lcall
sbb
test
pop
stos
xor
adc
addl
inc
rcll
imul
dec
je
sar
xor
mov
in
xchg
outsb
test
and
bound
nop
insb
adc
mov
xor
dec
out
ficoml
xor
int
fwait
cmpsb
test
mov
inc
mov
cmp
dec
xor
adc
adc
mov
movsb
test
xor
xchg
mov
hlt
mov
cmp
les
sbbl
enter
mov
and
test
pop
or
dec
mov
insb
sbb
sahf
lcall
xchg
adc
insl
dec
xchg
push
dec
daa
lods
ret
daa
daa
cmp
adc
and
jge
sti
insl
dec
push
in
cmpsl
arpl
sbb
fstps
jle
cmp
jne
insl
clc
mov
std
int
dec
cmpsl
ljmp
fs
cld
jae
insl
jp
mull
mov
dec
int3
sahf
inc
sub
int
xchg
jnp
lret
ss
cld
rorb
pop
cmpsl
adc
xchg
pop
movsb
test
repz
mov
jmp
mov
iret
mov
js
cmpb
insl
adc
jecxz
xchg
mov
enter
or
lds
or
mov
xchg
fcomps
stos
int
mov
pusha
push
scas
dec
sahf
mov
call
adc
int3
pop
or
pusha
xchg
mov
fdivrs
pop
push
jns
push
push
pushf
adc
insb
clc
ret
dec
lcall
clc
xor
xor
mov
ds
sub
ror
inc
mov
jbe
jge
mov
ret
or
addl
aaa
cld
cmpsb
xchg
xor
and
adcb
push
dec
dec
mov
ror
leave
jl
in
outsb
lret
popa
out
jo
jp
jne
pop
jp
cmp
mov
xchg
dec
into
push
popf
cmp
add
std
push
sti
sbb
imul
dec
sub
sbb
sub
fprem1
or
sbb
and
mov
mov
cmp
add
add
xor
cmp
aaa
push
pop
icebp
sahf
dec
test
hlt
cmp
push
jle
mov
lahf
mov
or
test
call
sbb
or
mov
loop
or
movsb
imul
cli
sub
xorb
or
sbb
cmp
adc
divl
mov
addr16
sub
xor
aas
adc
arpl
pop
popf
ja
les
lock
pop
jl
adc
bswap
cltd
leave
lcall
pop
push
xchg
test
pop
cli
xor
frstor
jp
sub
cmp
addr16
es
lret
out
dec
mov
add
testl
cmp
and
and
outsb
in
cwtl
cmp
xchg
negl
test
bnd
stc
jnp
lret
push
mov
mov
push
cmp
pop
jge
push
leave
int
xor
fsubrs
sub
cwtl
cmp
cmp
out
gs
sub
jae
incb
add
mov
cltd
fwait
icebp
sbb
push
jg
xchg
push
out
dec
sti
adc
mov
pushf
push
jle
cmp
push
outsl
dec
sti
ret
in
pop
or
dec
cmpsb
in
dec
mov
lock
pushl
movsl
mov
dec
movsl
jle
movsl
push
push
add
ret
negb
into
aas
mov
mov
in
adcb
mov
mov
adc
fs
js
mov
dec
inc
daa
test
cmp
xchg
lea
lret
std
xor
shrl
xor
sahf
scas
inc
in
xchg
mov
adc
mov
pop
addr16
pop
shll
incl
push
jnp
mov
bound
pop
in
sbb
fcompp
mov
daa
fwait
jl
in
cmp
in
pop
sub
pop
out
jg
adc
sbb
scas
adc
test
es
mov
inc
andl
out
mov
test
fcmove
xchg
repz
cmp
scas
push
mov
inc
mov
je
mov
cmp
lock
inc
push
and
cmp
cli
xchg
clc
out
mov
mov
psubusw
inc
dec
cltd
mov
xchg
xchg
adc
jge
or
in
shlb
std
xchg
push
and
loop
mov
dec
sub
sbb
notl
xchg
and
jge
push
xlat
mov
jp
pop
fwait
cmc
aas
pop
push
and
push
scas
loop
sahf
cmp
xchg
scas
push
add
jmp
fnstsw
mov
enter
in
subl
xchg
cmp
xchg
sub
test
pop
jo
sbb
fildll
test
adc
divl
cmpsl
popf
cmp
mov
out
bnd
gs
cld
and
outsl
add
les
shufps
out
mov
bound
hlt
into
mov
lods
dec
je
adc
cli
in
shr
mov
rorb
xchg
mov
push
lods
lods
shrb
push
xchg
push
adc
out
pop
cli
or
or
xchg
mov
stos
scas
pop
stos
add
mov
dec
cmpl
mov
xlat
sbb
adc
jns
hlt
mov
int
mov
sub
je
je
lcall
mov
dec
fiaddl
dec
aad
xchg
lock
inc
add
xchg
jp
movsb
mov
popa
and
fimull
pusha
in
pushf
mov
stos
rcr
sub
addr16
enter
sbb
mov
test
lds
cmpsl
add
inc
fistpll
pop
ret
xor
cmc
push
out
and
dec
mov
movsb
sub
dec
repz
stc
jle
cmc
pop
xlat
bound
xchg
pop
or
cli
pop
add
clc
mov
push
into
loop
popf
jbe
jge
insb
and
sti
inc
jnp
cmp
or
jnp
movsb
fndisi(8087
je
ds
add
test
mov
aaa
or
lods
push
outsl
lcall
adc
daa
add
dec
decb
insb
mov
jmp
pop
call
dec
mov
fdivs
xor
mov
cmc
inc
dec
cs
mov
clc
and
fs
cmp
in
pop
subb
push
cld
mov
cmp
pop
loop
inc
ss
pop
push
push
add
lds
ret
bound
ret
incb
repnz
add
mov
scas
cmp
cmp
xor
out
sub
push
jp
add
sbb
loope
or
jl
add
daa
xor
inc
cmpsb
sbb
out
js
dec
ds
repnz
in
mov
jl
xor
hlt
ja
xlat
clc
xchg
cmp
mov
cs
mov
es
mov
dec
out
push
and
daa
inc
mov
in
mov
sbb
movsl
jp
mov
test
setl
dec
and
push
sub
mov
addl
add
sbb
dec
je
dec
aaa
xchg
pusha
and
not
sub
and
jmp
lock
out
hlt
movsb
daa
or
sub
sub
aaa
hlt
fildll
xchg
rcll
xchg
adc
insb
xor
xor
jbe
test
leave
rcrb
xchg
out
rolb
jne
xchg
shr
jp
icebp
popf
lods
jmp
sti
or
rcrl
lock
mov
and
adc
inc
in
sbbb
mov
push
sti
imull
mov
sub
xchg
cli
adc
into
mov
jnp
pop
fcom
fstl
sbb
pop
imul
pop
rcr
jle
test
xor
cmpsb
bound
fwait
dec
sbb
enter
add
mov
jnp
das
mov
push
call
sarl
leave
fucomip
out
push
in
in
popa
add
sub
add
add
scas
popf
je
stos
and
cmp
or
mov
das
sub
xchg
movsb
sbb
and
leave
mov
aas
fsubrl
mov
sahf
mov
add
pop
xor
in
ret
cs
mov
aad
sbb
les
xchg
cmc
dec
push
push
push
out
jle
jo
addr16
or
sbb
cmc
xchg
js
outsl
mov
add
js
xchg
in
cmp
lods
pop
fdivp
nop
mov
inc
adcl
loope
cs
jmp
loope
and
dec
pop
and
pop
push
xlat
pushl
ret
push
pushf
adc
mov
add
mov
arpl
xor
inc
movsl
xchg
loope
xor
jle
scas
mov
xchg
jb
mul
stos
in
insb
loopne
xchg
out
mov
pop
leave
push
and
adc
sbb
mov
pop
aad
jl
cmp
lock
xor
sub
lods
popf
mov
data16
sbb
add
pop
mov
mov
movsb
mov
adc
pop
or
push
orl
icebp
mov
clc
out
xchg
jge
or
mov
inc
stc
fists
test
cli
push
xor
and
xor
xor
mov
out
cltd
jecxz
mov
xor
mov
mov
in
cli
out
or
std
dec
cwtl
jecxz
subl
mov
loopne
cmpsb
movsb
hlt
push
jp
xchg
nop
lahf
lock
arpl
icebp
std
cmpsb
outsl
xor
jb
add
imulb
mov
arpl
lret
in
test
cld
fildll
add
or
cltd
mov
icebp
fldl
and
lret
jno
xchg
cwtl
dec
jb
movsb
gs
aas
pop
mov
inc
stos
inc
push
iret
fidivrs
mov
popa
jae
fistl
cmpl
push
out
stc
das
outsb
leave
lret
call
dec
and
jmp
aas
push
mov
fistl
leave
in
enter
push
aad
jnp
lea
fwait
add
xor
dec
jne
dec
mov
xor
loop
pop
sub
clc
push
or
insb
xchg
rorb
jno
aad
mov
mov
mov
sbbb
sub
push
idiv
mov
aaa
sbb
dec
mov
jmp
push
jnp
cli
add
clc
mov
cmovp
out
lret
jmp
add
insl
je
outsl
shlb
call
jae
jl
aas
into
fdivrl
rorl
cmp
sahf
sahf
or
fdivl
inc
pushl
iret
cwtl
lret
add
inc
lcall
push
imul
pop
fdivrl
pop
mov
dec
dec
fmull
dec
xchg
cli
mov
int3
pop
lods
xchg
ljmp
or
ja
out
cmp
cmp
mov
or
test
jbe
or
fmull
and
cmp
jae
mov
cwtl
dec
dec
xchg
call
movsb
arpl
push
or
add
in
lods
insl
imul
adc
aam
inc
cmc
pop
mov
jg
jp
cmp
sbb
fcmovbe
aad
shrl
or
cmp
sbb
or
out
adc
in
jbe
inc
stos
mov
ss
test
pop
add
pusha
data16
sbb
jae
xchg
mov
push
aam
pop
lods
test
sub
and
sbb
fimuls
int3
dec
cld
aam
cmp
pop
sarl
scas
popa
and
popa
xor
or
jnp
xchg
insb
jo
dec
xor
lds
scas
adc
or
les
inc
popa
insb
ja
push
cmp
adc
aad
jbe
das
add
cmp
loope
inc
jg
xor
adc
shl
add
mov
imulb
imul
cmpsl
lcall
adc
push
mov
movsb
lahf
pop
sub
in
add
add
and
aas
xor
fstl
mov
mov
mov
pop
jle
outsb
movsl
mov
dec
aad
out
sub
cmp
xchg
inc
jns
clc
adc
imul
dec
mov
popa
add
and
jle
mov
out
lds
out
adc
mov
lret
and
push
popf
lods
clc
stos
mov
pop
or
push
cli
pop
inc
mov
cmp
lods
lahf
pop
mov
cmpsb
fsubrs
sarb
lahf
cwtl
iret
mov
popa
cwtl
ljmp
cmp
push
and
je
test
or
pop
mov
out
cmc
mov
fbld
mov
sbb
lret
dec
ja
scas
pop
xor
out
cmpsl
test
nop
push
test
dec
dec
fwait
dec
pop
in
jno
stos
out
push
jno
lret
rcl
divb
enter
stos
push
enter
addb
leave
add
mov
fdivl
mov
adc
and
ret
mov
arpl
xchg
js
add
mov
arpl
push
inc
pop
cmp
xchg
cmpsl
jge
fadd
in
jmp
stos
fdiv
leave
push
sahf
int
cmp
test
shrl
out
je
sbb
lret
fbstp
mov
sahf
nop
sbbl
jg
fs
push
call
mov
test
sub
sbb
mov
add
cmpsb
test
mov
or
mov
pop
orl
loope
cmp
cltd
leave
mov
sbb
movsb
dec
mov
push
loopne
dec
sti
ret
xchg
aaa
popf
xchg
lcall
test
push
insb
aas
daa
pop
cmp
sub
pushf
ljmp
stos
int3
mov
push
shlb
fisubrs
inc
subb
out
shrl
repnz
js
rorl
loopne
pop
sbb
mov
mov
loop
or
dec
sahf
push
push
lahf
loopne
sbb
mov
lock
push
clc
bound
loop
ret
xchg
lods
in
xchg
ljmp
push
add
adc
push
fstps
movsb
lods
mov
inc
adc
rcl
imul
push
pop
setae
ficomps
or
mov
loop
or
sbb
aam
pop
cmp
das
enter
cld
arpl
imul
pop
xorl
push
jp
dec
pusha
addl
and
xor
pop
dec
sbb
shrl
sbb
mov
xchg
pop
cwtl
in
inc
inc
aaa
subl
cmp
out
inc
push
decb
pop
push
and
adc
jns
push
pop
cmc
jp
inc
sbb
mov
lods
jae
idivl
data16
mov
mov
in
xchg
cmp
dec
daa
pop
xor
jb
ficomps
xchg
out
mov
popa
xchg
push
aad
sub
ret
test
push
pushf
xchg
and
aad
loope
push
jnp
pop
test
repnz
nop
jbe
and
inc
jmp
ficomps
cmp
pop
je
cltd
ja
inc
out
shlb
push
gs
mov
adc
jb
dec
mov
jbe
and
movq
mov
cmp
and
mov
sbb
rorb
js
lock
add
mov
jle
lahf
fstpt
and
sub
dec
ret
enter
cli
ficompl
mov
pop
outsl
cmpsl
pop
bound
daa
rcrb
sbb
insl
push
mov
pop
xor
mov
jecxz
arpl
pop
inc
add
or
mov
xchg
xchg
add
cmp
cmp
jg
repnz
push
je
cmpb
lds
loope
dec
sbb
pop
push
loopne
cld
aas
add
and
mov
rcr
js
dec
cld
and
movsl
int3
jno
sub
into
das
imul
add
inc
lahf
pop
cwtl
inc
roll
addr16
sbb
pop
pusha
in
push
mov
into
inc
int3
push
and
jnp
adc
pop
test
adc
or
hlt
cltd
scas
mov
daa
pop
mov
leave
and
dec
cmp
mov
cs
cld
fdivrl
push
pop
icebp
lcall
lret
mov
cld
xchg
cmp
jne
mov
cmp
cmpsl
jge
and
repz
popa
sub
in
dec
xchg
lds
std
and
jl
dec
push
mov
jne
pop
std
pushl
cli
inc
mov
xor
add
outsb
xchg
dec
pop
das
cmp
int
cs
repz
sbb
fiaddl
stos
cmpsl
in
sbbl
xor
test
rorl
iret
add
loop
out
mov
fsubl
les
xchg
aam
xor
jle
fadd
push
inc
in
mov
pop
pop
dec
fsubr
orl
enter
shld
jmp
fistps
pop
cmp
mov
dec
out
xchg
push
std
daa
lahf
mov
outsb
icebp
jg
lods
inc
push
add
push
adc
jbe
xchg
xchg
xor
std
and
pop
mov
add
push
mov
sub
rcr
lcall
pusha
jae
sbb
jge
insl
dec
cmpb
shl
pop
bound
test
dec
xor
mov
and
ss
jae
mov
hlt
xchg
call
lret
xorb
inc
jecxz
gs
mov
lods
iret
stos
int
pop
cmc
add
adc
sub
lahf
mov
push
test
push
cmp
movsb
xchg
pop
mov
cmp
ljmp
mov
pop
push
jl
insb
jp
mov
es
loope
movsl
cli
dec
dec
arpl
adc
sbb
jle
xor
shll
or
addb
pop
push
mov
testl
in
aam
jl
stc
ret
sbb
mov
cmp
jno
push
je
mov
imul
pop
sub
mov
xor
jp
mov
jle
jae
sti
jo
mov
fmulp
rol
das
push
inc
faddl
mov
lock
leave
xchg
mov
idivb
out
push
mov
into
lds
jno
xchg
xchg
mov
inc
sub
mov
xchg
dec
xchg
xchg
out
cmp
sbb
pop
add
xor
xchg
outsl
mov
and
cmp
pop
add
pop
or
jle
fmull
std
out
insl
sub
fadds
xchg
icebp
lock
shrl
jo
lcall
xchg
sbb
jns
cmp
push
push
rcrb
gs
test
jne
lods
and
pop
mov
out
adc
push
mov
lcall
scas
lahf
pop
rcrl
mov
or
cmp
pusha
sti
mov
daa
ljmp
jle
inc
cmp
pop
mov
xor
adc
mov
clc
push
divb
add
out
insl
fxch
scas
pop
push
cmp
cwtl
rorb
xchg
cmc
inc
out
mov
imul
jg
cmp
insb
frstor
adc
cli
jg
inc
cmpsl
xlat
dec
in
dec
ja
outsb
jl
or
xor
dec
pop
cli
mov
mov
sahf
xchg
cmp
andl
jle,pn
cwtl
mov
pop
xchg
flds
ljmp
or
and
jbe
jne
addl
dec
push
or
int
add
jno
loop
clc
mov
andl
gs
loope
jmp
aad
test
xchg
aas
mov
nop
enter
cwtl
jnp
push
push
lock
das
jnp
pop
dec
std
scas
call
xchg
jmp
cmpsl
sub
adc
push
push
push
inc
xchg
nop
mov
sbb
out
push
xchg
pusha
mov
mov
cmpb
add
aas
popf
scas
fnsave
pop
js
daa
in
in
dec
mov
fidivs
outsb
cmp
ds
nop
xor
inc
lahf
inc
add
lods
inc
clc
inc
ss
sbb
mov
and
xor
out
addr16
les
jbe
mov
fwait
add
cmpsb
cmc
out
xchg
rcl
cmp
inc
sbb
outsl
enter
add
dec
loop
mov
jl
mov
bound
mov
jp
sar
test
adcl
in
adc
fsubp
iret
xchg
jbe
push
cs
ret
cli
inc
mov
out
push
in
int
and
seta
js
xlat
movsl
inc
cmpsb
lods
mov
outsb
fbstp
fstps
arpl
testb
pop
ficoms
ret
es
mov
or
jp
pop
sbb
in
int3
insb
mov
filds
pop
mov
dec
mov
cmp
sbb
pop
add
pushf
dec
mov
cmp
dec
jne
call
out
lods
mov
fists
jle
cmc
mov
and
add
pop
pop
std
es
jle
and
loopne
mov
iret
push
pop
enter
dec
pop
or
push
mov
inc
push
mov
negb
dec
inc
rorb
lret
fdivrs
outsl
cmp
and
aas
lods
fs
mov
popf
xchg
cmpsl
inc
sub
popa
lahf
mov
mov
sbb
or
add
popf
lods
xor
pushf
or
xor
nop
cmc
push
push
xorl
sahf
divb
sub
mov
xchg
lds
or
das
fs
inc
cmp
jnp
enter
mov
push
sub
aam
imul
adc
mov
daa
hlt
shlb
fisubrl
lock
push
jns
push
xor
gs
in
pop
jle
test
lds
pusha
jnp
adc
adc
nop
cmp
popa
test
les
rol
fsubrs
dec
scas
xor
push
iret
mov
fwait
sti
add
gs
sub
sbb
test
push
int
mov
add
mov
lods
add
in
mov
cmovbe
inc
bound
test
mov
or
fldenv
jae
mov
imul
lret
cld
shll
mov
shlb
mov
pop
sub
sti
test
loopne
into
mov
jno
mov
dec
clc
mov
adc
jns
data16
test
add
jl
imul
adc
pusha
xchg
mov
sar
or
push
aaa
sbb
addr16
iret
sub
sbb
lcall
out
sbb
sarl
mov
jbe
mov
pop
and
xor
mov
in
ret
jmp
jb
in
jne
das
icebp
int
or
aad
fildl
fsubr
mov
mov
cmp
mov
add
xchg
inc
add
xchg
dec
inc
movsb
scas
out
xor
dec
popa
mov
jmp
pop
mov
fprem
loopne
lds
popa
inc
push
xchg
sbb
jge
mov
inc
test
fadds
ret
repnz
pushf
sub
sub
or
mov
nop
mov
rclb
lods
and
lock
push
and
or
jmp
adc
xor
or
in
loope
fmuls
mov
jmp
out
sbb
cmp
nop
mull
xchg
dec
ss
mov
mov
jae
push
nop
test
xchg
sbb
popa
cmp
push
push
dec
sub
lds
mov
daa
int
mov
mov
outsl
in
clc
hlt
cmp
adc
mov
lock
inc
icebp
decl
lret
fstl
ja
orb
outsb
jno
outsl
or
dec
inc
scas
es
fnstenv
clc
jmp
or
mov
push
enter
loopne
cmp
xchg
sahf
data16
cmp
cmp
fs
fstl
movsb
scas
xor
aaa
pop
adc
mov
cmp
ja
mov
repz
push
jno
adc
xor
scas
mov
out
rcr
push
scas
mov
push
mov
sbb
add
test
ret
and
sbb
iret
scas
mov
xor
mov
dec
mov
xor
push
push
pop
dec
xor
int3
lcall
lea
sub
xchg
push
aam
push
gs
das
shlb
daa
fstpl
aam
or
scas
leave
cmp
push
out
inc
leave
inc
out
push
pop
pop
pusha
adc
mov
in
std
sti
pop
lds
clc
cmpsl
push
lea
incb
les
test
or
in
sbb
nop
or
sti
popa
inc
gs
or
int
cmp
jl
ljmp
sbb
ret
call
cli
xchg
xchg
add
sahf
rolb
outsb
lret
mov
into
addr16
jb
arpl
imul
pushf
jb
bound
push
dec
mov
in
fdivr
sub
xlat
fdivl
push
xor
mov
in
rcll
adc
sub
push
insl
mov
mov
or
fsubrs
stc
nop
popl
sub
push
pop
jmp
pop
xor
test
and
jae
bound
or
enter
mov
imul
cmc
les
fs
push
inc
cmpsl
ftst
xchg
pop
pushf
push
in
mov
lret
or
inc
dec
adc
jns
filds
dec
lds
inc
cmp
xlat
not
in
sub
pop
lock
pushf
and
or
xlat
leave
cmp
mov
adc
outsb
jp
pop
or
push
xchg
fcoml
cmpsb
xchg
jmp
xchg
mov
lcall
arpl
xchg
push
sarb
insb
pop
pop
jmp
int
mov
sub
mov
jo
cmpsb
loop
mov
in
out
cld
clc
sbb
imul
mov
jecxz
and
or
pop
cli
mov
mov
divb
stc
add
test
ret
int
xor
jmp
cltd
lahf
popf
add
out
stos
and
jae
pop
push
push
cmp
add
dec
pop
lock
mov
cmp
and
int3
cli
cmp
mov
mov
push
sbb
mov
movsl
mov
push
dec
xor
std
pushf
mov
adc
and
xchg
cmp
or
sub
cmp
decb
out
pop
js
int3
repz
mov
pop
dec
call
xor
adc
test
addr16
cli
mov
jmp
fld1
push
sarb
fs
movsb
stos
mov
xchg
loopne
sub
fists
imul
ds
vprotd
loop
sti
pop
inc
add
in
mov
es
pushf
mov
cmp
sti
in
xor
dec
fisubrl
std
aam
push
xchg
xchg
sbb
and
test
mov
lods
fcmovnb
dec
loop
popl
insl
lcall
xchg
shlb
dec
gs
xchg
xlat
jle
sub
or
push
pusha
cmpsb
sub
jbe
or
jns
mov
jns
out
out
lds
call
pop
mov
insb
ds
fs
test
jbe
jne
fnsave
pop
sub
cmc
sub
push
add
push
aas
pop
dec
fcomi
mov
pop
nop
sbb
stc
dec
loop
fcmovnu
mov
pop
jae
cmp
push
cmp
xchg
ds
inc
pop
dec
adc
cli
pop
test
inc
int
data16
cmp
jb
out
inc
mov
or
lods
je
dec
fwait
mov
lea
fdiv
sbb
out
mov
or
scas
pop
or
popa
inc
push
and
loop
rclb
loopne
bound
iret
xchg
rcll
mov
sub
add
imulb
repz
dec
jno
jmp
out
test
daa
lods
jnp
insb
xchg
sub
jbe
mov
ror
xor
and
mov
xor
pusha
dec
sbb
jl
movsbl
dec
cmc
and
insb
shlb
andl
pop
mov
dec
mov
std
es
sahf
ret
and
lret
mov
nop
jecxz
fisubrl
pushf
mov
ja
pop
mov
cmp
fs
jle
pop
popf
and
cltd
pushf
into
in
pop
outsl
js
pop
jecxz
outsb
inc
pop
shlb
shl
mov
cmp
ret
std
push
or
xlat
mov
mov
imul
insb
or
pushl
jo
popa
add
test
sbb
or
sbb
jl
movsl
push
jp
cli
xor
testb
or
add
mov
mov
outsb
sub
lret
and
xor
roll
adc
jbe
sbb
daa
ss
ret
dec
mov
call
and
push
aas
repz
cltd
sub
and
mov
jp
dec
cwtl
push
xor
lret
sub
pop
add
dec
push
sbb
rcr
mov
jbe
jl
pushf
sbb
xchg
andl
cmp
mov
adcb
pushl
insl
pop
inc
inc
adc
xchg
push
or
test
sbb
insb
sub
sbb
loopne
inc
mov
sub
sub
test
or
sub
add
push
inc
clc
mov
into
cmp
addr16
arpl
mov
jnp
call
punpcklbw
dec
in
fisttpll
jecxz
dec
pop
push
int
ds
dec
add
mov
xor
mov
in
dec
and
cmpsl
pusha
mov
xchg
or
add
ss
daa
mov
mov
cmc
dec
pop
or
mov
ret
nop
shlb
xchg
stos
aam
xor
pop
icebp
pop
and
in
jnp
or
sub
outsb
dec
scas
outsb
push
insb
arpl
pop
loopne
sbb
es
out
shrb
sbb
repz
sub
aaa
push
add
sbb
in
data16
ss
mov
sub
int3
dec
inc
and
or
lods
sarl
leave
popa
push
jecxz
addr16
data16
sub
test
icebp
repz
adc
outsb
insl
cmp
push
cmpl
shrb
aaa
push
pop
fsubrs
ret
and
push
sbb
adc
enter
stc
mov
je
daa
fisttpll
loopne
push
cmc
sbb
arpl
pop
inc
jae
lea
lret
adc
jno
arpl
out
mov
mov
add
mov
mov
nop
or
inc
add
jnp
and
lahf
cld
aam
mov
jns
mov
aaa
cmp
sbb
inc
cmp
je
push
jae
cmpsb
ds
dec
loopne
mov
addb
scas
xrelease
push
adc
cmc
lcall
and
cmpl
clc
lods
push
popf
dec
jge
cs
out
mov
es
repnz
sub
into
jb
xor
pop
insl
gs
bound
cmp
and
mov
push
adc
fucomp
loope
sub
push
sub
mov
adc
pop
push
std
mov
outsl
xchg
and
fbstp
sub
mov
stc
cmp
mov
pop
and
pop
add
jl
das
xchg
into
cmpsl
sbb
ret
adc
dec
xor
sub
test
xor
mov
and
dec
jle
dec
dec
ds
pushf
shlb
rorb
ret
jg
ret
sarb
rcrb
scas
mov
icebp
mov
ret
or
mov
cld
jnp
inc
pop
imull
jne
es
mov
mov
jo
je
fnstcw
les
mov
fldt
xchg
jnp
data16
mov
enter
adc
add
js
adc
sbb
imul
sahf
into
and
push
or
jge
push
lods
jbe
mov
pushf
mov
inc
in
or
mov
cli
lret
mov
cld
cs
shlb
mov
dec
imul
and
cmp
test
fwait
and
mov
bound
pop
or
mov
push
mov
ja
jecxz
loope
push
sbb
jmp
fistps
mov
outsl
fstp
pop
dec
into
xchg
lret
inc
and
push
scas
fidivs
jle
xchg
arpl
jns
cltd
lcall
xchg
inc
push
cmp
cmp
mov
or
lea
mov
pop
rclb
lea
adc
xchg
popf
jns
dec
push
stos
out
xchg
adc
por
movsl
test
popf
adc
ret
imul
loop
push
adc
sahf
jmp
pop
insl
fwait
add
push
cmp
ret
cs
inc
or
add
stc
idivb
orb
cmpsb
insb
ret
ret
gs
sbb
or
and
push
xor
add
sbb
popa
jl
mov
insb
xchg
cld
iret
inc
jns
jl
daa
or
je
fs
ljmp
push
sti
dec
or
arpl
push
stc
push
test
icebp
cmpb
aam
fcmovbe
sbb
ss
imul
stc
jae
aaa
jb
mov
pop
and
mov
or
mov
out
movsb
mov
xchg
push
or
repz
out
and
jno
jecxz
dec
ja
inc
call
jnp
pop
jmp
je
and
push
js
mov
addr16
add
xor
repz
push
add
mov
dec
cltd
sub
fmulp
pop
daa
insl
js
mov
push
jo
aad
pusha
fmull
fdivr
mov
adc
and
sti
cmp
xchg
mov
lret
sub
cmc
xchg
repz
and
aad
dec
ret
insl
daa
push
cmp
inc
fidivs
mov
inc
cmp
adc
push
or
daa
call
mov
dec
js
test
mov
addr16
push
fucomi
inc
and
or
aas
mov
inc
pop
out
mov
mov
repnz
ljmp
cmpsl
mull
aaa
lods
cmp
call
or
and
xor
xorb
or
jge
cmpb
jo
cld
sahf
lret
fdivs
insb
in
pop
sti
jne
sub
jg
cmc
stos
xchg
fidivrs
pop
les
fnsave
ret
stos
inc
fs
addl
push
pop
xor
pop
mov
and
jb
xchg
add
fcomps
adc
inc
lock
mov
jl
jmp
push
ret
std
sbb
xor
or
pop
mov
std
sub
mov
xchg
xor
add
fadds
push
fwait
and
sbb
ds
dec
cmp
repnz
push
inc
ds
in
mov
scas
je
and
das
push
sarl
std
call
test
jmp
lret
imul
cmp
rdpmc
into
ret
lds
iret
es
shlb
ss
stc
dec
mov
jge
fists
lret
aaa
dec
dec
mov
add
aaa
clc
push
add
lock
insl
ret
cli
ljmp
cmpsb
mov
ss
mov
jns
pop
cmpsb
jmp
leave
test
and
jle
mov
mov
js
xchg
rcl
xchg
iret
rclb
mov
cmp
arpl
sbb
lea
test
std
jecxz
mov
push
mov
cmc
gs
dec
pop
test
ljmp
xchg
ja
or
dec
adcb
sbb
ja
jmp
fldl
xorl
xchg
mov
mov
iret
andb
xor
sbb
xchg
dec
adc
and
inc
rcll
mov
insb
pop
out
cs
adc
dec
and
stos
add
out
dec
mov
incl
pop
nop
movhps
inc
fistl
jmp
cli
pop
test
scas
mov
fldl
adc
arpl
cwtl
mov
xchg
insl
mov
mov
xchg
xorl
andps
fstl
cmp
mov
scas
sbb
insl
out
dec
mov
xchg
add
push
sub
dec
xchg
das
aad
xor
insb
sarb
xor
mov
es
add
inc
push
sbb
push
sub
fcompl
jo
nop
push
ret
dec
jg
aam
gs
dec
sbb
ret
cmp
insl
cld
call
xchg
sbb
mov
cmc
lahf
repnz
mov
jp
fcoms
xorl
ljmp
push
push
jo
mov
pop
push
test
aaa
xor
add
inc
xorb
ja
jbe
fxam
ljmp
mov
aas
std
leave
sub
mov
jge
push
jp
xor
fcomps
cmp
daa
xor
push
mov
jns
loope
xchg
test
mov
movsb
imul
dec
xor
arpl
sub
xchg
dec
xlat
mov
cmp
filds
xor
and
aas
jecxz
mov
test
sbb
jg
ss
jecxz
or
insb
xchg
dec
insl
inc
bound
inc
cmp
fnstenv
insl
xor
ficompl
xor
dec
std
push
js
mov
sahf
inc
inc
cmpsl
mov
fnstenv
stos
push
in
fiadds
mov
les
rolb
rcrl
divl
push
push
or
mov
xchg
das
loop
jno
or
lret
lret
xor
sbb
dec
es
fisttps
cmp
les
imul
adc
xchg
inc
add
cltd
xor
fidivrl
dec
cli
loop
xor
sub
mov
pop
pop
in
jae
and
hlt
push
cmp
jno
clc
sarb
jmp
inc
fmuls
call
sub
cmp
in
inc
push
jo
cmp
mov
dec
repz
cmp
and
dec
mull
xchg
mov
shl
insl
xchg
pop
cmp
xchg
xchg
jb
cmp
or
test
cmp
fidivs
mov
push
mov
mov
inc
loope
out
aam
scas
sub
das
cmp
and
push
mov
inc
insl
mov
cld
addr16
jl
pop
lds
ds
push
and
hlt
in
jp
mov
rcrb
ljmp
leave
pop
jp
lods
outsl
cmp
inc
fmuls
jno
cmpsb
mov
daa
add
sub
jnp
dec
stc
sahf
cmpb
push
insl
xchg
adc
fwait
sbb
sarb
into
test
mov
enter
inc
pop
rcll
and
testl
sub
cwtl
and
fwait
sbb
add
lds
mov
sub
pushw
jl
incl
add
test
push
adc
ret
popa
mov
pusha
in
stos
mov
sub
stos
fbstp
scas
push
add
adc
xchg
nop
in
jae
call
test
and
and
sti
pop
add
pcmpeqb
subl
dec
pop
ret
dec
jecxz
mov
jne
outsl
adc
fcom
jecxz
add
rolb
adc
cwtl
addl
stos
add
sub
sbb
imul
in
lea
dec
enter
in
outsb
adc
stos
xor
jmp
test
add
xchg
dec
xor
jmp
mov
add
adc
dec
cltd
out
lcall
mov
sub
push
mov
test
std
imul
cltd
sub
dec
jbe
xchg
push
arpl
insl
mov
mov
cli
shl
add
rcll
aad
push
stos
xchg
in
mov
xchg
inc
in
xchg
push
icebp
xchg
push
shl
in
jns
jb
fwait
idivl
push
push
or
xchg
nop
sub
scas
adc
das
xchg
pop
lock
notl
cmp
pop
cld
sub
mov
sub
inc
mov
es
jns
std
pusha
mov
mov
inc
dec
lcall
ljmp
sub
jns
std
xchg
hlt
and
mov
outsb
xchg
movsb
into
daa
fucomi
mov
sbb
xor
inc
xor
ficompl
dec
hlt
jbe
xchg
xorb
push
fwait
out
jle
cwtl
xchg
addr16
je
mov
sbb
xor
pop
ja
loop
loope
push
cmpsb
inc
pop
les
push
push
push
dec
bound
mov
sbb
mov
sub
add
call
xchg
sub
jno
xor
outsb
fs
sbb
dec
add
test
sbb
sub
push
cmp
push
enter
mov
mov
dec
fcoms
into
cwtl
mov
mov
push
into
push
imul
out
inc
mov
and
add
aad
ret
mov
mov
push
mov
pop
add
fisttps
mov
cmp
rcr
insb
mov
scas
sti
mov
dec
lods
in
pop
mov
jno
mov
aam
and
mov
inc
sbb
mov
lea
and
add
push
stos
inc
std
pop
mov
in
es
out
ror
xor
mov
enter
jb
mov
jle
jae
enter
aaa
call
loope
dec
mov
push
push
imul
imull
xor
test
pop
stc
cld
cmp
shll
shll
sub
jae
repnz
test
xchg
mov
lea
test
outsb
jae
xor
sbb
cmp
jge
add
hlt
andl
das
fcmovbe
xor
adc
inc
cmp
cwtl
les
pop
pop
sbb
sarb
lods
out
cld
jno
shr
jp
push
fsubrl
iret
test
subl
test
and
repnz
push
daa
push
sbb
je
mov
cs
cmp
pushf
aam
xor
out
into
repz
and
mov
sub
das
lds
xor
call
orl
test
iret
xchg
outsb
mov
fsubrs
inc
or
pop
fcmove
stos
orl
xchg
xchg
pop
hlt
add
add
fiadds
ret
push
xchg
lods
mov
aas
sbb
cmp
push
je
mulb
mov
jae
pop
outsl
nop
jle
inc
es
cltd
repz
add
mov
leave
out
sbb
js
insb
in
add
inc
ss
stos
mov
sub
ss
or
sbb
jl
jle
rcrl
push
test
das
ret
push
aad
xchg
test
bound
pop
sbb
mov
jecxz
mov
cs
add
fadds
fimuls
shrb
dec
inc
xchg
xchg
xlat
aaa
loop
out
cmp
push
pop
mov
sbbl
adc
hlt
aaa
hlt
xchg
or
dec
pop
mov
push
lcall
stos
ss
jmp
ljmp
loopne
xchg
cld
xchg
ja
add
cld
in
mov
jae
shl
in
pop
sub
jo
push
sbb
sub
enter
lock
xchg
je
insl
jnp
pop
or
aas
mov
push
xchg
xor
and
and
jo,pn
xchg
cs
mov
decb
cwtl
xchg
pop
pop
les
push
arpl
leave
dec
dec
jae
loop
jge
push
pop
jb
cwtl
xchg
aas
sbb
fdivl
fadd
mov
rcll
mov
pushf
push
in
add
arpl
in
adc
lods
jbe
fisttps
dec
or
sub
aas
les
jge
adcl
sub
sub
pop
jae
lock
bound
mov
mov
out
jo
cmpsb
sbb
mov
inc
test
rcr
pushl
inc
arpl
mov
mov
stos
scas
jg
dec
or
stc
aad
rorb
xchg
push
mov
push
jns
divb
pop
push
mov
nop
cmp
add
je
mov
mov
sub
or
sub
mov
jl
add
sbb
push
dec
aaa
jecxz
and
jns
insb
or
and
scas
sbb
ret
pop
mov
ret
add
mov
push
mov
xchg
in
lret
sub
outsl
out
pop
inc
andb
pop
in
out
jecxz
sbb
jb
movsb
push
cmp
add
xor
std
sbb
call
push
out
mov
sti
mov
hlt
cmp
adcb
repz
and
sub
push
jno
lret
cmpsl
dec
fs
loop
movsl
inc
dec
pop
sbb
adc
cmp
cmp
adc
xchg
jl
pop
adc
adc
xchg
jl
push
cmc
orb
bound
add
or
jge
leave
adc
adc
jno
aas
xchg
mov
push
xchg
and
cmp
inc
daa
in
aad
cmp
mov
mov
popa
insl
in
sbb
lret
sub
cltd
rcrb
mov
cmc
mov
lods
mov
aad
shll
mov
aad
lcall
ljmp
mov
push
test
pop
insb
xorb
xor
pop
adc
pushf
aaa
mov
cmp
jmp
mov
in
inc
adc
sbb
call
out
lds
out
rcl
mov
xchg
mov
adc
push
push
sbb
cmp
jnp
ret
or
push
push
add
les
movsl
pop
push
push
in
fldenv
mov
data16
mov
mov
push
clc
out
mov
jl
movsb
sub
jno
jbe
les
xor
in
cld
mov
jnp
cmp
dec
mov
cmpsl
mul
inc
pop
aam
fstp
mov
sbb
rorl
loop
out
mov
les
xchg
pop
aam
fidivrl
ljmp
mov
inc
and
loope
popa
fs
nop
add
adc
loope
iret
xchg
push
cli
dec
aas
rolb
imul
mov
sbb
imul
cli
sub
or
adcb
enter
inc
aam
sahf
mov
jmp
dec
lcall
fmuls
nop
adc
cli
shll
jmp
sub
mov
pop
popa
cs
push
mov
rcrb
pop
call
test
add
inc
andb
xchg
or
push
xor
outsl
rorl
push
jg
inc
pop
push
dec
xor
xor
lods
aad
dec
movsl
push
sbb
lahf
arpl
mov
loope
inc
arpl
mov
jb
xor
negb
out
push
mulps
sbb
testb
sar
sub
cld
inc
xor
dec
mov
or
flds
fs
dec
mov
sbb
dec
outsl
rcr
push
inc
adc
fstpl
mov
cmpsb
mov
xchg
sub
pop
or
mov
das
filds
xchg
fcmovb
hlt
mov
lock
test
sbb
in
pop
jne
jle
sbb
cmp
pop
repz
jmp
inc
insl
jp
push
xlat
xchg
jmp
sub
fmuls
lds
in
pmulhuw
in
test
push
lret
aaa
xchg
push
jbe
insb
pop
or
mov
dec
arpl
xchg
xchg
imul
jae
in
xchg
push
jo
push
sahf
add
ss
cltd
aas
outsb
popa
addb
sbb
mov
xor
mov
jge
icebp
std
das
aam
inc
cmp
test
inc
data16
imul
repz
dec
inc
cltd
ficoml
lock
jecxz
mov
sti
in
insl
push
out
test
mov
or
push
pop
jno
mov
dec
dec
or
in
cli
mov
mov
dec
mov
push
mov
xchg
call
js
sub
push
dec
mov
mov
adc
mov
pop
in
addb
cmpsb
dec
loope
xor
cmp
ss
into
cmp
ds
shlb
call
lods
pop
inc
inc
mov
loopne
sub
or
jle
ljmp
addr16
mov
pop
outsb
or
fldcw
push
mov
inc
and
mov
pushf
outsb
ljmp
mov
sub
dec
cmpb
cwtl
xor
ud2
popa
push
dec
orw
sti
cli
movsl
mov
pop
or
loop
imul
mov
xchg
nop
sbb
test
jp
mov
dec
cmc
jo
and
popa
jecxz
jmp
mov
aad
std
pusha
dec
out
push
fmul
fwait
iret
xchg
push
sbb
rorl
movb
decl
insb
lret
and
jmp
jbe
stos
xchg
popa
jmp
and
in
jnp
or
insl
cmp
sbb
and
adcl
dec
movsb
xor
sub
add
push
sbb
mov
jl
jle
int3
dec
fwait
pop
or
add
sbb
dec
ss
fcoms
mov
ljmp
int3
mov
call
leave
aad
cmpsl
fists
jae
add
sarl
je
cld
sbb
add
mov
cmp
cld
fbld
inc
clc
insl
js
cltd
sti
sub
pop
inc
sub
pop
adc
fcoml
pop
xor
mov
inc
cmp
xor
inc
scas
mov
mov
sub
sub
dec
movsl
dec
je
fadds
fisttpll
jmp
loopne
outsl
and
pop
adc
mov
push
cmc
cld
stc
pop
sub
dec
iret
mov
shrl
jno
jecxz
loop
dec
jno
sahf
rcll
pop
mov
mov
lret
xchg
rcl
cmp
lea
mov
push
out
xchg
cmp
outsb
dec
insb
push
xchg
fisubrl
mov
lods
push
xchg
fisubs
movsb
inc
bound
iret
fdivrl
jns
pop
les
cld
aaa
fnstcw
shlb
lods
aam
jo
jmp
ret
cmp
dec
ljmp
push
sbb
or
jbe
mov
push
inc
mov
test
xor
push
lret
fwait
cmp
sub
repnz
loop
sub
fistpll
add
cmpsl
adc
xorb
mov
and
insb
dec
jo
scas
sbb
cmp
push
mov
and
lcall
xor
loopne
lret
lahf
mov
sti
cmp
dec
mov
xor
repz
add
je
jg
or
ja
test
fwait
sti
dec
mov
mov
mov
and
adc
sar
movsb
sbb
mov
or
jne
xchg
loop
xchg
in
or
arpl
push
popa
pop
pop
pop
sub
aaa
pop
adc
push
pop
cmp
lcall
jl
add
loopne
movsl
xchg
xchg
pop
push
insb
sbb
jb,pt
xchg
or
fwait
sbb
mov
add
stos
cltd
movsb
sub
pop
and
mov
aas
inc
js
mov
adc
xchg
shll
lods
ss
pop
imul
cmp
and
adc
int3
mov
loopne
in
lahf
je
ljmp
add
dec
xor
fistpll
stos
or
xchg
dec
pop
data16
jns,pn
cmc
in
loopne
push
int
orl
scas
lds
pop
push
fs
sub
out
sbb
popf
negb
popa
inc
or
ja
repz
frstor
in
and
inc
pusha
icebp
fisttpll
dec
push
or
stos
mov
dec
lcall
jb
test
jl
cmpsb
jmp
mov
push
sti
aas
push
inc
dec
xor
mov
mov
cwtl
mov
cld
loope
out
fldenv
jp
fdivrl
mov
xor
enter
cmpsb
jne
icebp
mov
hlt
dec
and
mov
xor
mov
inc
in
outsl
je
dec
orl
dec
or
lret
dec
cmp
hlt
xchg
insl
call
adc
jmp
mov
and
mov
pop
imul
jg
push
test
loopne
mov
popf
sub
repz
pop
int3
mov
lock
cmp
loop
and
adc
mov
scas
in
push
lret
test
cmp
push
or
mov
popf
inc
push
and
xchg
add
in
push
push
mov
inc
jbe
mov
sbb
icebp
test
inc
out
add
adc
fwait
aaa
push
xor
cmpsl
cmp
mov
repnz
psllw
cmp
sub
in
sub
jne
push
mov
cmp
sbb
cmc
repz
popa
jl
mov
int
hlt
mov
pop
pop
mov
or
push
outsl
adc
lods
dec
sarl
nop
jno
out
inc
stos
lea
pop
xor
insl
pop
aam
cli
jne
ja
cltd
mov
jbe
sub
push
orb
aas
inc
push
jne
repnz
lea
and
mov
push
ljmp
mov
xchg
loop
cs
or
icebp
pop
xor
loopne
push
or
das
adc
xchg
ret
mov
inc
lret
jg
and
mov
mov
xor
ret
cmp
int3
loop
imulb
push
lahf
jle
lea
les
fcmovne
fstpl
mov
mov
imul
clc
push
repnz
daa
ja
fsubr
sub
pop
or
in
mov
mov
ja
push
loop
negl
jnp
xor
push
mov
imul
sub
xchg
pop
jo
popf
fmul
les
test
nop
roll
sbb
dec
das
out
ret
loope
fistps
loope
sahf
test
push
scas
or
cmp
pop
mov
testb
and
aas
lcall
jl
pop
jae
sub
jg
dec
lret
pop
sbb
adc
add
mov
ljmp
insb
cmp
lods
popa
in
out
mov
cwtl
adc
sub
jmp
xchg
xchg
mov
test
imul
fstps
int3
movsl
inc
push
inc
push
sbb
sbb
arpl
dec
or
mov
hlt
mov
cmpsl
dec
jg
cltd
jmp
inc
inc
add
push
cli
sub
push
sbb
pop
jecxz
stc
imul
pushf
arpl
sahf
pop
inc
cmpsb
scas
push
lods
xchg
jbe
jbe
mov
push
les
cmp
push
popf
ret
jmp
adc
or
xor
dec
pop
dec
shl
mov
inc
adc
cld
mov
xor
pop
jae
stos
pop
push
cld
es
cwtl
outsb
les
fstps
mov
pushl
rcll
sbb
adc
out
mov
shlb
fs
add
xchg
pop
sub
imul
les
ret
jbe
and
loopne
inc
xor
mov
arpl
les
fisubs
sbb
push
push
fistpll
sbb
mov
mov
jp
mov
push
push
dec
pop
inc
pop
sti
mov
das
lea
ret
jnp
mov
pop
mov
add
loop
ljmp
dec
mov
mov
outsl
iret
cmc
fcoms
sub
fadds
dec
jo
add
pop
mov
adc
ja
jno
imul
gs
outsb
jp
ret
imul
xchg
lcall
mov
enter
cmp
xor
shrb
shl
je
push
xlat
xor
jb
dec
es
mov
mov
out
mov
in
mov
outsb
rorb
and
test
pop
sub
and
outsl
test
xchg
mov
loopne
in
insl
jp
aam
xchg
ret
test
dec
adc
popf
gs
int
dec
xorl
fiaddl
das
rcl
popf
idivl
pop
int
push
push
scas
inc
repz
mov
jg
mov
inc
lahf
aam
cmc
mov
pop
into
rolb
and
out
inc
pushf
or
decl
imul
mov
pushf
in
jmp
jae
dec
mov
enter
sub
or
xlat
xchg
mov
jbe
fdivrs
call
jecxz
xchg
jb
dec
mov
mov
or
repnz
mov
xor
rorl
in
mov
jp
es
mov
inc
fadds
cmp
sub
in
insl
inc
or
pop
push
jo
sub
xchg
aas
rcrb
addr16
imul
ret
cld
xchg
fcomps
xchg
loopne
add
sub
sbb
lods
addl
das
mov
out
int
push
or
repnz
mov
jp
test
ja
xchg
dec
arpl
xchg
pop
mov
sub
ret
shrl
mov
pop
push
jle
xchg
push
jge
in
fldt
jecxz
int
cmpsb
push
test
xor
xchg
jp
jno
xor
xor
jl
ja
sub
mov
cmp
pushl
add
push
fmul
dec
icebp
lds
aam
test
jno
call
cmc
inc
dec
mov
or
lods
ljmp
jecxz
data16
enter
outsb
xchg
sub
arpl
pop
fistpll
inc
jnp
mov
xor
xor
fdivrs
cmp
mov
test
frstor
mov
add
pop
jne
push
add
stos
je
popa
pop
stc
rorl
mov
push
cmp
cmp
fsubl
and
dec
subl
mov
cmpsb
in
cltd
inc
or
jnp
hlt
or
adc
outsb
cwtl
adc
lret
push
and
sbb
icebp
lods
pushl
dec
xchg
cmp
out
inc
push
xor
xchg
jge
push
iret
adc
leave
mov
ds
cmp
or
in
addr16
lock
out
mov
add
jb
sbb
lret
imul
nop
gs
lret
pop
lret
pop
fiadds
hlt
pop
fisubl
and
pop
lahf
movsb
cmp
in
pusha
test
jle
rcrl
imul
gs
or
mov
mov
lahf
adc
push
fndisi(8087
or
std
mov
pop
aad
mov
dec
pop
in
cli
dec
cmp
jmp
mov
pinsrw
inc
pop
ret
mov
inc
clc
int3
mov
inc
xorb
mov
or
xor
push
je
cli
cli
dec
scas
xorl
inc
or
pushf
aam
jle
jo
das
adc
gs
das
shr
in
test
jnp
and
sub
mov
lds
es
cltd
subb
neg
fimuls
or
pop
pop
ljmp
ja
xlat
mov
test
inc
or
mov
fcompl
mov
out
jmp
xor
subl
xor
mov
jmp
mov
push
lods
push
xchg
jp
inc
aam
mov
rcrl
sub
bound
jbe
mov
fildll
push
jbe
insb
cwtl
imul
fs
mov
and
fcoml
int
sbb
imul
cmc
scas
test
ljmp
sub
cwtl
cmp
fsts
sbb
add
mov
xchg
iret
jb
pusha
xchg
std
mov
repz
pusha
sbb
or
inc
mov
xchg
hlt
lret
lahf
fnstsw
movsl
dec
xor
mov
ss
mov
xchg
pop
popf
adc
adc
int3
pop
clc
bound
push
jns
bound
jge
or
fnstenv
pop
les
jbe
loope
pop
add
mov
jno
sub
and
loop
push
scas
and
movsb
sub
push
push
stos
inc
dec
outsb
sub
pop
leave
arpl
dec
cld
sub
xlat
add
mov
and
pop
sahf
fs
out
data16
lods
push
stos
sbb
pop
arpl
std
decl
push
sub
imul
jl
shrl
xor
push
mov
das
into
scas
mov
lods
cmp
push
add
sbb
sub
cmpsb
sbb
cli
jge
cmp
or
mov
push
xor
mov
iret
cmpsb
inc
fldt
cmp
in
pop
cmp
mov
push
mov
fcoml
out
inc
mov
rcrl
pop
sbb
push
psubsb
adc
push
arpl
mov
mov
inc
nop
imulb
call
xor
dec
add
movsl
sbb
setbe
mov
mov
dec
xor
subb
mov
in
and
jmp
or
and
lret
or
xor
push
fwait
adc
rclb
fs
cwtl
sub
push
lods
loopne
loopne
mov
dec
dec
cmp
push
out
add
outsl
decb
divl
jl
pop
xor
or
movsb
sbb
scas
jp
jle
sub
push
mov
in
cmp
cs
mov
rcl
xchg
mov
into
rorb
test
jg
or
outsl
pop
mov
fists
add
lahf
retw
clc
inc
pop
push
xchg
mov
jnp
jo
jge
ds
and
insb
mov
and
ljmp
ror
mov
pop
je
fld
mov
push
jge
scas
pop
lods
js
mov
mov
adc
jno
pushf
mov
rsqrtps
cmc
inc
inc
stos
jno
dec
pop
pop
je
mov
cmpsb
dec
xchg
mov
js
sbb
xchg
pushf
and
dec
jb
jo
mov
xlat
sbb
in
aad
movb
inc
jno
cmpsl
mov
xor
push
int3
ret
mov
aad
aas
repz
sub
xchg
add
icebp
icebp
int
jl
adc
mov
mov
adc
xlat
mov
icebp
stc
dec
and
mov
mov
pop
mov
lods
xor
jp
mov
out
jle
cmp
and
pop
pop
sahf
dec
adc
cs
push
scas
outsb
mov
pushf
push
in
stos
sarb
adc
shr
jecxz
push
jmp
xchg
push
rcl
lahf
and
lea
mov
inc
movsl
movsb
jl
rol
hlt
repnz
xor
jbe
pusha
shrl
shll
mov
loop
idivb
aas
mov
ss
adc
cmpsl
sbb
mov
clc
ret
sbb
mov
dec
cli
mov
xorb
push
jp
push
cmpsb
mov
sbb
stc
int3
mov
cmp
gs
jecxz
cwtl
test
cmp
in
andb
mov
aas
mov
xlat
test
sub
xor
jle
xorb
pop
imul
imul
fdivrs
add
cmp
mov
jbe
ljmp
lcall
mov
xor
sarl
int
out
pop
cltd
adc
cltd
lcall
mov
adc
cmp
aas
push
lcall
xchg
vcvttps2dq
cwtl
inc
pop
js
addr16
sbb
adc
inc
ja
int
movl
scas
cli
pop
xchg
out
push
aam
das
incl
les
mov
mov
dec
jb
xor
or
inc
enter
or
aas
sbb
clc
outsb
ret
sub
das
bound
pop
inc
mov
idivb
sub
std
adc
xor
push
mov
scas
and
xor
push
xchg
mov
mov
sub
mov
mov
in
push
inc
das
and
mov
cmpsl
lret
xlat
adc
nop
dec
or
mov
push
add
fwait
mov
mov
scas
adc
mov
je
push
ret
mov
cmp
sub
mov
pusha
mov
push
xchg
stos
sarb
jns
push
into
out
out
adc
fsts
ss
fwait
outsl
jno
gs
gs
out
addr16
aaa
mov
add
xor
pop
imul
pop
sub
clc
nop
mov
js
or
rcl
xchg
outsl
xchg
pop
lock
dec
sti
movsl
or
pop
push
lret
inc
daa
imul
rcll
data16
jo
aad
mov
pop
jno
les
mov
mov
sets
jmp
mov
inc
mov
test
shrb
pop
sbb
adc
int3
or
fstpt
int
jo
test
out
cmp
mov
out
pop
jmp
ret
push
jae
ret
loop
inc
xor
jno
divl
inc
cwtl
cli
mov
xlat
push
pop
mov
cli
push
les
inc
std
push
mov
lret
pop
pop
pop
ret
stos
or
test
out
mov
movsl
mov
pop
into
mov
test
and
in
mov
or
mov
imul
xor
mov
stos
out
push
push
mov
cmp
outsb
sub
scas
popf
mov
mov
push
mov
in
insl
sub
pop
inc
adc
lahf
mov
fwait
testl
cmp
sahf
or
jge
aam
jbe
adc
lcall
mov
lret
lret
jmp
mov
mov
or
es
or
pop
es
nop
sbb
movsb
mov
mov
sub
pushf
cmp
jge
in
sbb
movsb
mov
iret
sbb
cmc
push
inc
sbb
ss
std
adc
xor
js
or
sub
mov
xchg
fistps
adcb
imulb
jo
dec
fisubrl
lcall
and
adc
mov
lods
add
mov
and
je
push
pop
ss
stos
cmp
fnsave
jmp
outsl
pop
out
mov
mov
or
or
sti
ds
test
jnp
jno
ja
js
in
pop
mov
cwtl
push
add
dec
cmc
test
int
mov
jb
add
add
cmp
cs
inc
mov
out
and
inc
mov
sar
test
incl
jo
daa
insb
fs
push
inc
pop
sbb
imull
push
filds
mov
xor
stc
outsl
test
lock
cs
xor
add
cmp
mov
cmp
loope
xchg
xor
sbb
test
in
pop
je
in
clc
pop
aas
or
loope
jge
add
lret
or
push
xchg
ss
sahf
xchg
xchg
mov
push
ficomps
push
adc
xchg
stc
xchg
stos
movsl
gs
movsl
adc
scas
outsl
or
jle
lock
inc
or
xor
mov
shlb
faddl
mov
sti
and
mov
dec
and
popa
and
mov
icebp
insb
xor
imul
fs
push
ret
push
aad
lods
push
gs
fnsave
cmpsb
mov
mov
pushf
sbb
jo
lcall
in
or
sar
js
rclb
fdivrs
push
cs
shl
stos
arpl
xor
adc
inc
cld
xchg
std
in
jb
add
test
mov
cmp
adc
xor
mov
adc
lods
xchg
cltd
js
inc
sti
out
mov
adc
popf
mov
pop
pop
sbb
ljmp
push
inc
test
or
cli
jne
xor
and
dec
cmp
jno
sbb
adc
iret
cwtl
out
mov
mov
push
das
jg
aaa
repz
fwait
js
or
sbb
dec
ss
andb
mov
lods
jl
jecxz
data16
cmpsl
std
or
enter
add
dec
das
and
gs
jne
nop
filds
and
lds
clc
aam
subl
rcrb
lret
inc
and
ja
insl
inc
mov
popl
es
sub
xorl
xorl
aam
cltd
dec
adc
jnp
mov
inc
lcall
xchg
mov
mov
lret
mov
xor
rorl
jp
test
aam
push
rcrb
stos
mov
dec
pop
insl
pcmpeqd
hlt
mov
xchg
cld
jbe
push
jle
mov
movsl
js
dec
dec
cmpsb
cmpsl
arpl
jle
dec
xchg
je
adc
cmp
mov
add
add
bnd
sbb
mov
adc
lahf
and
mov
inc
sarb
iret
pushf
fistpl
and
inc
pusha
pop
sub
jg
icebp
cmpl
loopne
push
insl
xor
jb
mov
xchg
fsubrs
push
mov
and
dec
xchg
imul
pop
in
and
mov
mov
popa
dec
aaa
dec
inc
out
rcll
lods
jmp
mov
pop
fisttpll
sub
test
popf
test
pop
xor
push
out
fiadds
xor
cmpsl
popa
dec
les
shll
mov
push
fadds
test
daa
xchg
lds
fs
xor
movsl
shll
mov
rcrl
inc
xchg
stos
leave
fwait
pop
cs
xchg
push
lods
data16
sahf
loopne
inc
cmp
mov
std
mov
cld
loopne
cmp
fxam
sub
andb
insb
in
test
mov
xchg
push
leave
mov
adc
lods
lods
mov
sub
or
mov
push
xorl
pusha
sbb
xor
pushf
pusha
inc
movsl
pop
in
adc
xor
into
push
sahf
mov
pop
lods
add
bound
sti
imul
pop
popa
push
sti
or
jmp
imul
fisttps
adc
subl
inc
inc
pop
fadds
add
or
pop
mov
hlt
sbb
lock
inc
ja
loop
ret
sub
adc
frstor
xchg
mov
daa
adc
dec
jecxz
push
ss
int
popa
pop
stc
xchg
cmp
loop
push
mov
rcl
or
add
xchg
mov
inc
cltd
stos
jbe
push
push
pop
andl
pop
inc
fs
add
repz
imul
pop
cmp
or
add
xor
push
in
add
loope
fstpt
int
ficomps
mov
popa
xor
sub
sub
push
push
sbb
popf
loope
cld
scas
push
loopne
adc
ficoms
fs
enter
push
inc
cmpsb
push
jmp
or
fistpl
and
out
test
or
xlat
rorb
jg
cmpsl
popa
cltd
sub
fwait
push
jecxz
xor
inc
sub
popa
lods
fcmovbe
in
xchg
cmp
dec
inc
inc
ficoms
lahf
cbtw
ret
xchg
inc
das
mov
in
mov
fwait
lock
sub
xchg
and
ja
js
iret
lcall
call
pushf
push
cltd
adc
add
pop
pusha
repnz
push
jge
fxch
or
mov
mov
mov
xor
pop
jecxz
pushf
clc
test
and
mov
pop
and
rol
adc
add
ljmp
aam
roll
rcll
repnz
mov
adc
clc
jg
bnd
dec
loopne
mov
nop
or
les
sarb
sbb
aam
xchg
and
insb
pop
sarb
imul
push
xchg
push
xor
fwait
out
cwtl
xchg
test
jl
dec
jno
jmp
push
mov
inc
mov
jg
inc
jae
push
and
rcrl
ret
cltd
rcl
cmp
insl
and
xchg
push
mov
push
pop
jg
cmc
outsb
adc
dec
sarl
mov
and
inc
out
arpl
mov
ret
or
jecxz
shrb
lahf
push
mov
push
xchg
fdivr
fisubl
mov
push
push
iret
lods
xchg
xchg
push
cld
push
push
hlt
movsl
sub
fldl
pop
sub
sbb
xlat
into
sbb
test
mov
pop
dec
xchg
mov
enter
insb
push
popf
scas
aam
cmc
leave
iret
call
xchg
and
mov
shr
inc
ss
adc
push
popa
enter
in
repz
loope
cwtl
dec
dec
fmuls
pop
jp
mov
xor
fs
xchg
push
mov
pop
add
cmp
out
mov
or
push
jbe
in
sub
fs
jae
jbe
sub
adc
xchg
sbb
ficompl
pushf
inc
data16
mov
mov
stc
stos
or
pop
loopne
push
sbb
or
aaa
scas
mov
lcall
xchg
and
inc
mov
and
jb
arpl
jecxz
je
test
insl
fisttps
and
push
dec
std
incb
pop
test
fstps
int
inc
mov
arpl
mov
sub
inc
jo
inc
stc
cmp
divl
mov
das
sarl
jg
push
sbb
aas
xor
xchg
lods
pushf
jns
push
sub
fldt
cmp
mov
aad
push
push
push
jp
ret
mov
mov
add
scas
mov
sbb
loope
into
adc
adc
push
jmp
out
mov
pop
inc
xor
xor
shll
push
in
adc
mov
adc
std
scas
lods
cmpsl
mov
icebp
and
repz
out
lods
aam
jmp
mov
ret
cmp
imul
sbb
es
push
sub
adc
dec
cmp
jne
cmp
cmp
mov
shlb
xchg
aad
mov
lea
shrb
jmp
jns
rorl
mov
pop
sbb
mov
jb
pusha
sub
movsb
pop
test
stos
dec
jbe
jae
add
sbb
les
pop
std
mov
lods
dec
dec
scas
fsubrp
pop
into
enter
out
mov
js
test
ret
pop
aaa
aam
and
mov
mov
sarl
add
sbb
adcl
xchg
dec
push
in
mov
add
jns
pop
rorl
rcrb
cmp
scas
mov
insl
cs
dec
mov
cs
pop
std
dec
inc
outsb
cld
pop
aas
pop
or
loop
cltd
lock
xchg
add
je
je
movsl
arpl
and
xor
jnp
aad
adc
dec
add
jmp
adc
jo
push
inc
arpl
xchg
mov
stos
and
xchg
xchg
lcall
outsl
test
mov
fistl
add
mov
inc
scas
rcrb
daa
dec
sbb
fstps
or
adc
into
xchg
ja
pop
jle
xchg
icebp
jmp
and
sub
pop
ficoml
in
lret
sub
orb
cltd
aaa
call
fisttpll
push
pop
lret
std
sbb
jo
push
adc
stos
in
jnp
in
into
rol
loopne
dec
leave
das
adc
sub
ret
jg
xchg
insb
cmp
cs
fisttpll
or
add
lds
mov
push
mov
xchg
rclb
out
mov
mov
out
mov
add
xor
and
in
xchg
repz
pop
ficoms
and
dec
add
clc
ds
popf
sub
shlb
aas
dec
add
mov
testl
imul
sbb
mov
hlt
sub
stos
sbb
and
xchg
jge
and
push
out
cmp
push
rcrl
xchg
and
mov
orb
adc
aam
test
mov
mov
lock
and
mov
lods
sbb
add
jae
movsl
outsl
ds
xchg
mov
lods
add
imul
addb
ror
pop
mov
cmp
ret
stos
mov
push
xor
jns
dec
aam
jbe
inc
std
sti
aad
aas
rorl
push
jl
push
mov
in
mov
add
pop
xor
in
mov
mov
xchg
jge
mov
int
test
cmp
stc
xchg
push
fnstsw
add
icebp
pop
lret
test
pop
vmovsd
adc
mov
and
mov
loope
pop
test
cmc
mov
out
cmp
fildll
xchg
pop
test
iret
or
clc
and
inc
insl
fsubrl
mov
jo
in
xor
cltd
xor
js
aas
jecxz
sbb
in
insl
xchg
jne
xchg
fidivrl
pop
xchg
mov
cmp
or
jbe
lods
ljmp
ret
pop
or
movsb
pop
repz
sahf
lret
inc
mov
xchg
mov
push
cmp
lock
push
sub
mov
mov
outsl
lcall
adc
jae
icebp
push
es
cmp
stos
xchg
inc
imul
dec
cmp
cs
or
jmp
mov
pop
outsl
andb
xlat
mov
out
push
clc
test
adc
int
add
mov
ret
in
xchg
jbe
dec
inc
test
int
inc
cmp
adc
jns
mov
test
mov
andl
jmp
stos
adc
mov
pusha
or
or
mov
pushf
push
push
mov
test
mov
cs
arpl
pop
push
cmpl
leave
lahf
fbstp
inc
ja
inc
mov
mov
repnz
xor
mov
xchg
in
sub
arpl
push
sub
mov
movsb
mov
mov
lock
jg
sti
subl
arpl
scas
orl
or
dec
mov
push
je
stc
mov
mov
enter
cmp
and
pop
divl
dec
idivl
adc
ja
push
shll
fisubrl
jg
pop
pop
jg
add
out
jp
lods
mov
lahf
jp
pop
push
stc
sbb
loop
fsts
push
filds
in
mov
cmp
push
cmp
stc
adc
xchg
pop
pop
lods
fdivs
jge
aaa
jae
xchg
mov
jmp
pop
jecxz
sti
sbb
cli
cmp
sahf
cmpsb
lcall
loope
xchg
pusha
test
gs
fldenv
and
scas
or
out
push
jle
nop
stos
in
and
jmp
lods
sahf
adc
cli
pusha
and
mov
nop
ljmp
xchg
test
cltd
aam
ja
adc
int3
xor
xchg
jl
fndisi(8087
mov
and
lret
test
cmpsl
adc
fsubr
push
add
sub
dec
push
sub
cmpsl
xlat
xchg
test
cmp
push
loope
sub
pop
xor
rorb
flds
mov
mov
clc
push
lcall
inc
jne
cmp
mov
jmp
cs
cwtl
xchg
pop
repz
les
mov
push
mov
sbb
inc
mov
jecxz
jne
in
and
stos
sbb
or
insb
in
mov
push
mov
pop
push
ljmp
out
jmp
pop
fstpt
clc
add
mov
bound
imul
fiaddl
jmp
pop
inc
sahf
mov
std
aas
aaa
push
iret
xchg
outsl
sub
test
lds
inc
pop
push
jns
stos
sbb
bound
out
pushf
pusha
lds
sbb
adc
add
outsl
adc
xor
and
xlat
subb
std
and
add
jp
shrb
xchg
xchg
dec
cmp
out
and
pop
repnz
mov
xor
lods
lahf
dec
and
ljmp
adc
push
xor
or
jno
lahf
lcall
mov
mov
in
and
add
stos
add
jle
enter
or
pop
dec
insb
xor
inc
test
xorb
lcall
sbb
test
outsl
mov
mov
inc
in
sub
sub
out
sub
in
mov
fsubrs
ja
or
push
nop
sbb
in
ss
add
loope
sbb
inc
push
jl
pop
roll
mov
add
sub
sub
and
sarl
cmp
sub
clc
pop
pop
sub
pop
aad
js
out
jmp
cmp
or
xchg
ficompl
pop
xor
jo
xlat
shrl
dec
icebp
xchg
lds
mov
mov
test
imul
mov
mov
movsb
mov
outsb
push
add
and
push
ja
pop
std
mov
pop
push
sbb
js
xchg
hlt
repz
ja
lcall
leave
cmp
dec
and
dec
or
pop
mov
inc
mov
pushf
loopne
mov
sub
call
movsb
sub
imul
xchg
inc
stc
adc
icebp
mov
repnz
out
leave
in
xchg
push
aas
aad
push
mov
xor
insb
inc
xchg
das
fisubs
mov
sarb
repz
mov
pusha
lock
test
imul
call
movsb
cli
mov
mov
jmp
enter
sbb
xchg
dec
pop
push
fstpl
inc
test
lea
aad
fwait
or
xlat
mov
ficomps
ljmp
rcrl
xlat
in
pushf
adc
inc
int3
sarl
dec
lock
and
or
les
cmp
pop
ss
fisttpl
sub
pop
in
push
dec
sbb
pop
imul
adc
sub
xor
mov
xchg
nop
test
fnsave
aaa
mov
push
lea
arpl
sub
mov
mov
aaa
fwait
cmp
sbb
mov
xchg
fildll
cld
cmc
in
lds
scas
add
ds
or
sbb
orb
pop
fistpl
dec
adc
pop
loope
test
xlat
test
push
ds
sub
outsl
cs
or
mov
inc
mov
adc
das
sbb
dec
mov
pop
sahf
imul
or
push
fwait
xchg
bound
jp
arpl
jne
sbbl
and
xor
jmp
daa
test
mov
push
mov
cmpsb
sbb
dec
jne
stc
cld
fs
cmp
es
xchg
dec
daa
popf
std
cmp
fstps
inc
sub
mov
mov
mov
fcmovu
mov
stos
lret
out
subb
push
mov
aad
xchg
push
cmp
aaa
stos
in
push
mov
out
ljmp
mov
jnp
xchg
and
mov
mov
inc
mov
cli
das
cld
inc
dec
leave
mov
and
fld1
jno
jmp
adc
jmp
xchg
mov
lcall
sbb
inc
dec
lcall
iret
xchg
mov
sub
stc
jns
test
cmc
scas
scas
test
mov
and
movsb
push
push
xor
test
pop
inc
test
fistl
mov
orb
test
mov
out
std
aad
repz
cmp
mov
fbld
jp
adc
ret
sti
lcall
stos
pop
pop
sbb
adc
icebp
js
cmpsl
out
into
int3
push
rorb
cltd
pop
add
lods
fldenv
fcoms
lea
jns
sub
xchg
dec
adc
and
sbb
test
loope
repz
mov
add
pop
repnz
fbstp
inc
imul
inc
jnp
ss
jmp
mov
mov
out
outsb
std
fxch
rorb
scas
in
mov
pop
fstl
into
dec
cmpsl
fwait
jae
rcrb
mov
pop
pop
push
js
test
rdpmc
push
iret
in
xchg
insl
and
cwtl
fwait
bound
popa
sbb
and
dec
add
mov
push
jle
dec
jae
mov
stos
push
cmpsl
cwtl
popf
lds
add
sub
ret
mov
fs
hlt
inc
xor
mov
jp
xchg
push
es
je
js
xchg
mov
pop
nop
addb
add
movsl
push
loop
pop
sub
xor
mov
sbb
or
arpl
outsl
ja
dec
sub
mov
adc
xor
nop
mov
repz
stos
pop
xchg
imul
xchg
fwait
cmp
jne
add
iret
add
lock
mov
mov
or
bound
lahf
dec
jp
cmpsb
shl
je
test
jecxz
and
ljmp
dec
mov
bound
test
out
pop
inc
ja
sti
ret
les
mov
jb
stos
lret
push
mov
cmp
ficompl
test
iret
pushaw
sbb
imul
jbe
in
popa
jmp
lods
daa
cmpsl
mov
loopne
sub
into
popf
xchg
stos
into
mov
xor
and
xor
push
jnp
mov
imul
cld
loopne
inc
inc
jmp
xchg
lret
popa
or
lret
inc
js
aam
xor
pop
ljmp
push
aam
test
out
pop
and
sub
shll
xchg
fisubrs
js
jae
and
nop
or
cmp
pop
inc
or
aad
repnz
xchg
cli
push
or
xchg
popf
or
mov
or
add
cmp
fwait
jle
mov
inc
addl
int3
jmp
not
scas
xchg
movsl
data16
push
pop
jmp
push
xchg
int
mov
mov
sbb
sbb
push
orb
inc
cwtl
push
jb
imul
mov
or
pop
test
fstp
enter
adc
dec
dec
sbb
push
lea
mov
xchg
lea
aam
icebp
testl
daa
or
mov
xchg
es
dec
inc
xchg
pop
mov
fs
jecxz
mov
iret
push
adc
into
pop
sbb
lock
in
aaa
subb
and
cltd
dec
sbb
arpl
and
push
repnz
sub
subb
pop
sub
or
clc
xor
enter
bnd
xchg
cmp
jle
jle
mov
dec
mov
call
push
arpl
loop
jne
arpl
jle
or
xor
adc
xor
sahf
xor
sub
inc
mov
nop
pop
mov
lahf
or
push
hlt
pop
stc
sbb
xchg
idivl
dec
jcxz
fcmovnu
push
dec
xor
cmp
and
test
ret
je
xchg
xor
mov
mov
and
mov
add
ret
xchg
and
dec
sub
pop
stc
xor
mov
std
stos
or
rolb
push
dec
cs
pop
loope
lcall
jo
xor
xor
mov
dec
fcoml
lea
add
in
in
sbb
adc
mov
push
mov
jl
add
sub
sarb
sbb
jmp
pop
cmp
movsl
popa
pop
add
in
add
cli
lock
pop
mov
push
cmp
leave
and
push
bound
call
mov
insb
xchg
ds
inc
cmp
and
negl
adc
fs
lcall
iret
push
leave
adc
add
in
mov
bound
scas
pusha
mov
cmpsb
mov
xchg
or
pop
cwtl
leave
mov
cmpsb
negb
inc
stc
mov
lret
stos
out
add
sti
add
out
adc
scas
xor
fistpl
or
xchg
pop
in
fldln2
mov
cmp
xor
daa
pop
scas
jo
in
int3
push
jmp
ss
cmp
fs
fildll
mov
lock
test
les
sarb
mov
mov
adcb
xchg
packuswb
mov
cltd
jae
daa
xchg
cwtl
xor
aam
xor
sbb
jp
cli
xrelease
out
dec
pop
and
xlat
pop
jle
sbb
add
sub
fstl
adc
mov
mov
in
mov
mov
rclb
xor
push
mov
std
mov
pushf
js
mov
shl
and
scas
sub
push
lea
jnp
and
xchg
rcr
mov
mov
cltd
and
adc
pop
mov
jmp
add
outsb
dec
inc
xor
ret
add
outsl
pop
int
mov
aad
xchg
or
popa
push
mov
and
fidivs
dec
mov
jbe
daa
repnz
iret
call
test
push
push
ljmp
or
decb
neg
push
cld
orl
xor
outsl
push
pop
sbb
dec
test
sbb
imul
enter
cmp
pop
dec
push
xor
push
xor
jl
xor
les
mov
cmc
in
sar
imul
movsb
add
inc
int
in
sbb
push
aaa
mov
pop
in
inc
or
jbe
popa
add
ljmp
jno
rcrl
stos
push
cmpl
pop
adc
xor
inc
fbstp
mov
xor
std
mov
roll
jge
enter
adcb
mov
mov
push
movsl
mov
imul
add
shrl
lret
cmp
loop
lock
clc
lcall
and
and
sbb
pushf
adc
shlb
sar
ja
popa
clc
test
sti
add
jo
cmp
pop
jg
aam
int3
xchg
or
or
or
adcl
jns
dec
sar
xor
insl
fsubs
imul
push
je
andl
mov
stos
mulb
test
outsl
in
jns
or
or
xor
into
test
jecxz
mov
stos
addr16
fidivrs
xchg
lret
inc
and
jle
dec
pop
fwait
sbb
movsl
cmp
out
mov
repnz
mov
inc
and
push
dec
arpl
mov
sub
pop
adcl
sbb
xor
ficomps
test
xorl
fcmovnb
stos
jmp
adc
test
fsts
xchg
jl
sti
push
sti
cmpb
mov
in
inc
xchg
inc
mov
dec
add
ficomps
hlt
cmp
or
xor
inc
pop
mov
cmp
cmp
stc
and
cs
sub
cmpsb
sbb
imul
test
enter
xrelease
jge
int
stc
push
mov
popf
aam
lret
pop
bound
aaa
nop
lock
loop
jmp
aam
in
xchg
mov
mov
pop
lcall
push
dec
adc
xchg
jmp
pop
mov
in
sbb
jmp
mov
push
pop
outsb
nop
fiadds
rcrb
test
jle
push
cli
add
mov
sub
pop
pop
adc
or
iret
dec
adc
adc
test
ljmp
in
lods
push
sbb
add
outsl
je
arpl
sbb
mov
jns
adc
or
hlt
push
push
inc
stos
push
push
addb
std
scas
aam
out
popf
aam
stos
imul
ja
sete
sub
ja
mov
in
test
sarb
in
or
push
shl
fcoml
pop
test
rorl
fs
jns
pop
and
adc
dec
push
mov
leave
or
or
inc
sbb
cmp
aaa
inc
fidivl
mov
cld
sub
dec
adc
lcall
add
xchg
scas
and
fcmovnbe
sarl
or
in
add
jb
out
in
hlt
mov
xchg
loope
aaa
jp
mov
pop
outsl
shr
je
aam
jmp
ret
addr16
cmpsb
push
cltd
mov
rol
pop
push
mov
push
mov
add
xorl
sbb
and
lret
sahf
mov
imul
aaa
inc
xor
test
arpl
inc
icebp
aad
inc
xchg
and
or
mov
stos
push
out
mov
cs
shlb
mov
push
aam
jo
jno
sbb
or
rclb
jle
and
ret
movsb
les
test
dec
xchg
out
sbb
fiaddl
test
jge
sahf
xor
pop
and
fistl
mov
pop
xchg
dec
add
and
fcom
stc
cmp
sub
cltd
jp
cmp
push
jl
mov
fwait
mov
aas
ljmp
testb
in
jnp
inc
xchg
cltd
sbb
mov
pop
js
jns
and
ss
mov
cld
adc
pop
jns
pop
and
and
or
adcb
iret
ficompl
push
and
hlt
movb
lods
jl
xorl
hlt
dec
jb
ds
sbb
xlat
inc
mov
dec
testb
or
adc
icebp
and
jmp
mov
jae
jl
jge
dec
sbb
xchg
inc
or
pmaddwd
into
sub
mov
jmp
sub
repnz
mov
pop
sub
bound
lret
imul
dec
push
lods
mov
bound
cmc
xor
sbb
into
sbb
cmp
into
loop
xchg
inc
nop
push
sub
dec
jl
add
lds
imul
aad
jmp
stc
inc
jg
fwait
mov
pusha
out
or
into
inc
sub
in
mov
pop
xor
lds
mov
dec
sbb
and
mov
add
add
jo
inc
lods
jne
fiaddl
jcxz
and
cwtl
jno
push
in
notb
stc
cwtl
cmpsl
roll
insl
lods
nop
sub
movsb
add
jno
imul
out
mov
loop
dec
mov
sbb
out
or
jbe
popf
xor
sub
test
ret
pushf
jl
sub
je
push
sahf
aas
std
test
dec
ss
mov
clc
test
icebp
aaa
xchg
xor
cmpl
push
mov
fnstenv
and
pop
fcoml
sbb
pop
scas
in
jmp
inc
jmp
divl
int
hlt
xlat
enter
sahf
sti
movsb
sti
cltd
and
sbb
lret
or
dec
mov
pop
inc
inc
mov
ljmp
stc
cmp
adc
or
fs
ljmp
hlt
jg
mov
addr16
mov
jl
ret
jecxz
mov
cld
fdivs
mov
mov
sub
sub
test
rcrl
dec
leave
gs
rclb
jp
xor
dec
xchg
shrb
shl
adc
xor
inc
mov
mov
hlt
negb
sub
and
mov
stc
push
mov
push
mov
cltd
push
inc
add
mov
lcall
arpl
adc
pop
lock
aas
xor
fisubs
jge
in
mov
push
std
fldcw
cmpl
mov
ljmp
out
icebp
int3
inc
fsub
out
in
xor
cs
divl
hlt
mov
xchg
pop
adc
stos
sarb
addr16
pop
jmp
popa
mov
cmc
es
out
xchg
stos
popa
test
cwtl
nop
lea
lret
pop
adc
cmpsl
out
mov
stos
hlt
sti
mov
stos
inc
pusha
inc
cmpsl
push
inc
jge
sub
jmp
jne
enter
jg
jae
out
and
inc
push
jmp
stc
push
gs
mov
inc
jae
inc
cmc
mov
lcall
xchg
mov
negb
rcr
sbb
cmpsb
mov
jnp
cs
jmp
out
int3
scas
test
imul
push
dec
pop
cli
out
loope
mov
lret
aad
arpl
jmp
mov
fidivrs
mov
mov
push
inc
mov
inc
movsb
xchg
dec
into
xchg
js
nop
push
adc
mov
rcrl
jg
cmc
nop
rclb
xor
mov
daa
inc
add
inc
icebp
mov
jge
scas
mov
xchg
bound
pop
ss
lahf
jae
xchg
test
xchg
int
lds
popa
adc
xor
sbb
lret
mov
sahf
lods
sahf
push
push
cmp
and
inc
and
push
lahf
mov
lahf
dec
jp
add
dec
nop
aas
mov
xorb
dec
aam
dec
fistpll
test
outsl
push
popa
aad
les
pop
sbb
dec
mov
xchg
into
rcl
and
shll
mov
mov
cld
jb
ds
mov
cmpxchg
daa
or
or
pop
cmp
adc
stc
daa
daa
sbb
daa
mov
cld
ss
out
in
and
xor
fldl
jle
aaa
pop
push
xchg
pop
sbb
cmpsl
xchg
mov
cmp
cmp
test
pop
test
push
les
dec
sbb
sub
lods
popf
jae
mov
sbb
or
xchg
aam
sub
sbb
scas
push
sbb
ds
mov
and
or
jge
pusha
mov
lods
add
pop
mov
test
inc
dec
fsubrs
mov
lds
rorl
mov
push
jp
push
sbb
jecxz
ss
pop
sub
insb
ja
push
mov
jecxz
xchg
mov
arpl
sub
xor
test
add
std
inc
sub
ret
pop
in
push
scas
je
jecxz
ljmp
int3
fdivl
sub
mov
movsb
mov
sahf
xchg
pop
inc
cltd
xchg
xor
repnz
cmpsb
jmp
pop
adc
sub
inc
jnp
jg
or
bound
inc
lock
loop
mov
scas
jge
lret
pop
dec
push
sbb
clc
stc
aad
icebp
jb
data16
stos
dec
ret
jge
mov
daa
pop
ja
inc
ficoml
cmc
push
lock
sub
out
aam
adc
into
inc
xor
push
pop
pop
arpl
xchg
xchg
cmpsb
fcomi
movsl
repnz
pushf
in
dec
jb
stos
mov
xchg
xor
cmpsb
and
pandn
jne
sbb
js
shl
out
out
push
inc
insl
or
cmp
fwait
lea
push
pop
pusha
mov
xchg
adc
lock
repnz
push
vzeroall
add
pop
in
push
test
dec
in
mov
adc
shr
cmc
dec
inc
inc
sbb
adc
pop
cmp
scas
into
enter
addr16
adc
incb
adc
lret
fsubrl
mov
shr
shlb
pop
sub
jns
cmp
dec
adc
jl
pop
xorl
fstpl
sbb
mov
dec
in
in
in
and
cli
xchg
dec
xor
or
cmpsb
dec
cli
pushf
fdivrp
jo
pop
iret
pop
lcall
or
bound
call
dec
incb
stc
nop
push
xor
ss
xchg
push
and
scas
xchg
sub
das
jmp
or
jmp
xchg
or
and
cwtl
add
sub
sahf
or
or
les
push
mov
sub
dec
xor
leave
pop
xlat
imul
mov
pop
jo
imul
adc
scas
aam
adc
cmp
push
mov
hlt
clc
loop
pusha
out
xor
mov
je
sub
imul
xchg
push
in
aaa
les
add
imul
push
mov
ror
mov
insl
cmpsb
icebp
mov
sti
pop
ja
lea
inc
mov
fwait
cld
mov
mov
jge
xor
lods
imul
and
std
xor
int
out
mov
int3
fs
or
dec
and
xchg
push
addb
adc
jae
sbb
je
cmp
nop
jae
adc
jp
repz
movsl
sub
push
mov
push
jmp
test
lock
cmp
adc
xor
xchg
or
sbb
std
arpl
pop
and
outsb
mov
arpl
sub
mov
shl
lahf
xchg
lret
push
insl
mov
nop
pop
ss
adc
and
add
or
sub
repnz
out
inc
dec
mov
enter
rcl
jmp
daa
lods
or
shrl
add
pop
pop
mov
rcll
mov
jmp
pop
arpl
lds
adc
sbb
in
add
movsb
stos
cmp
cltd
jp
xor
sarl
shrb
and
lods
cmp
les
pushf
shrl
hlt
push
pop
adc
or
push
inc
fisttpl
out
or
xor
jle
inc
push
inc
add
push
hlt
insl
shlb
cli
adc
mov
ss
shrb
push
and
lsl
fisttpl
rcr
and
lock
xchg
pop
xchg
in
jnp
js
push
mov
mov
mov
sahf
ss
mov
adc
pushf
shl
or
test
shrb
dec
fsubl
fldcw
lods
ds
dec
push
ss
sbb
xchg
stc
lock
mov
fcom
xlat
divb
push
paddsb
pop
jle
xor
je
stc
add
and
fimull
in
pop
shrl
sbb
adc
shlb
and
inc
test
data16
test
mov
xor
aas
repnz
mov
frstor
pop
push
dec
jmp
clc
out
add
fwait
inc
mov
in
sbb
mov
cs
enter
clc
inc
xchg
pop
fstpl
shlb
pop
mov
mov
jecxz
mov
mov
repz
dec
push
dec
insb
lcall
repz
xchg
sub
push
dec
jae
cmp
push
mov
push
mov
jno
scas
aam
adc
faddp
cwtl
pop
lea
pop
cmp
scas
bound
jge
or
decl
fwait
rolb
pop
dec
mov
jns
cmp
mov
sbb
dec
clc
sub
pop
and
pop
fcmovbe
repz
repz
call
cli
fbstp
lea
push
xchg
jb
lahf
jbe
or
fs
fs
xchg
fs
aad
movsb
push
pop
jg
xor
jb
fdivrl
push
data16
inc
notb
int3
fldenv
mov
aas
pop
arpl
inc
push
cmp
orb
and
jle
mov
or
pusha
mov
adc
ret
pop
out
inc
sbb
mov
bswap
les
push
cmp
xor
mov
add
pop
jbe
cmp
repz
repnz
mov
and
sbb
cmpl
cmc
xchg
add
es
faddl
mov
popf
push
dec
pop
or
shll
mov
and
and
je
pop
adc
mov
sbb
out
cmp
sbb
inc
adc
push
sub
jnp
cmc
dec
xchg
cmp
cmp
pop
jle
outsl
push
dec
je
aam
xchg
push
mov
sub
pop
push
test
insl
mov
push
sbb
iret
pop
sar
mov
sbb
notl
fdivr
and
mov
pop
pusha
inc
mov
lds
daa
stc
bound
cmp
rcrl
push
mov
fisubl
sbb
add
fists
outsl
xchg
aad
lcall
jnp
outsl
mov
push
xchg
pop
scas
lock
mov
fisubrl
or
loopne
fdiv
lock
mov
outsl
sub
flds
jg
push
push
mov
decb
nop
or
fsubs
js
imul
bnd
xor
jo
push
mov
loopne
iret
orb
leave
fcmove
js
sbb
mov
cmpl
xchg
pop
les
or
push
add
fwait
sahf
mov
insb
xor
je
push
or
sub
repnz
repz
pop
shl
push
mov
hlt
push
adc
out
mov
and
lea
pop
iret
std
outsl
adc
inc
rcr
outsb
sbb
jmp
mov
ficomps
movsl
cmpsl
fwait
lret
cmp
aam
mov
pop
insb
loopne
pushf
jge
shl
mulb
mov
sub
and
jo
dec
push
sbb
dec
ja
cli
dec
mov
sbb
pop
mov
cld
stos
adc
mov
aaa
mov
mov
push
xchg
sbb
gs
pop
sub
sub
pop
cmpl
jle
pop
mov
or
aas
scas
xchg
test
imul
add
pop
ud2
insb
push
jne
cwtl
jmp
pop
and
addl
mov
mov
mov
mov
adc
mov
dec
adc
imul
push
mov
or
jbe
cmc
test
mov
adc
pop
mov
test
addr16
or
hlt
lahf
arpl
or
jl
aad
xor
sbb
ret
aad
lcall
push
insb
popf
pop
lods
push
lods
jmp
inc
lods
jg
or
and
pop
xchg
js
into
lret
xchg
mov
test
mov
inc
in
push
sub
push
call
gs
lea
xchg
gs
ja
movsl
lcall
cmp
cmpsb
outsl
cs
xor
inc
sbb
mov
push
ficoms
cmp
pusha
sub
sahf
rclb
sbb
mov
ret
push
pop
fwait
lds
jo
into
fsts
dec
fcomps
or
roll
and
inc
cmp
jae
cmc
testl
cmp
pop
jg
fdiv
js
sbb
dec
xlat
jg
ret
jne
fnstsw
jns
gs
std
push
mov
popf
imul
addr16
jne
pop
dec
daa
push
lock
pop
mov
lret
idivl
adc
mov
lret
push
or
outsb
lea
fwait
dec
cs
sti
pop
repz
int
popf
orl
pop
adc
ret
cmc
out
sbb
and
mov
jle
inc
inc
pop
mov
mov
sti
push
sub
cmc
pushl
add
adc
rcll
or
pop
sub
sahf
pop
aaa
mov
sbb
xchg
scas
incl
movsl
fwait
shlb
jnp
adc
mov
into
and
adc
popa
dec
fldl
adc
push
jmp
ret
and
sahf
fsubrs
xor
mov
add
xchg
mov
inc
addr16
leave
pop
inc
mov
jnp
loope
scas
adc
ja
xor
jo
aaa
push
cld
mov
push
loopne
jbe
and
fidivs
jle
shlb
or
sbb
mov
fbstp
push
insl
pop
aas
int
xlat
xor
sbb
xchg
fcoms
pop
xchg
mov
mov
sbb
negl
popa
inc
pusha
mov
testb
daa
or
test
cli
xor
inc
dec
shll
sub
inc
ret
lahf
iret
xor
jle
je
mov
sub
jns
mov
fdivrs
ret
shlb
cmp
jae
jae
mov
pop
cmp
int3
rcl
push
cmp
test
pop
inc
mov
adc
adc
clc
shlb
xchg
inc
xor
ss
xor
enter
adc
adc
nop
test
push
mov
xchg
leave
jg
jno
xchg
enter
or
movsb
add
mov
es
sar
repnz
subb
in
add
jns
lret
adc
ljmp
frstor
sub
sub
pop
add
subl
mov
lods
in
int
dec
rorb
mov
aaa
lock
mov
mov
jmp
inc
pop
and
clc
fistpll
dec
or
cli
or
jmp
in
and
pop
lret
pop
xchg
popa
ret
fwait
xchg
int
jmp
adc
fnstsw
int
pop
stc
pop
inc
cmp
scas
cwtl
fwait
scas
out
pop
adc
inc
push
filds
repnz
or
hlt
pop
mov
pop
cmp
fisubl
adc
or
mov
decb
scas
push
mov
add
push
sbb
lods
stos
sub
push
stos
inc
imul
sbb
jle
jbe
add
fsub
sbbl
pusha
jecxz
add
jg
dec
xchg
subl
jae
xchg
daa
sbb
shlb
leave
push
je
jmp
js
lods
and
jne
cltd
sbbb
sbb
leave
loopne
nop
lds
popa
out
int
jnp
inc
or
pop
pop
enter
push
push
cmc
or
stos
sub
arpl
xchg
or
cld
push
repnz
xchg
adc
lods
or
stc
gs
xor
popa
movsl
jo
scas
add
aam
push
jp
push
push
mov
lcall
push
lahf
xor
int3
aas
dec
or
repz
sub
dec
push
cmpsl
lods
cmp
not
movsb
and
mov
aas
pop
push
int
xchg
mov
xor
dec
mov
lds
addb
mov
jne
mov
cmp
ja
xchg
div
or
or
jnp
pop
ja
cmp
sbb
shlb
jb
mov
out
imul
add
mov
xchg
out
fs
xchg
or
data16
arpl
jmp
inc
inc
jo
push
xchg
xor
rcrl
xchg
lods
lahf
cli
mov
push
popa
fadd
sbbl
lds
int3
mov
mov
test
aas
xor
sbb
popa
insl
je
cltd
leave
xchg
jnp
push
inc
or
mov
jb
mov
pop
inc
xor
ret
lret
loopne
aad
sbb
ror
mov
daa
ret
mov
mov
imull
cmpsl
pusha
or
test
test
push
and
out
or
cld
dec
or
aas
stc
sbb
push
js
shl
cwtl
leave
ret
ds
xor
ret
loope
push
mov
lods
arpl
lods
ss
xchg
sbb
adc
mov
push
mov
add
mov
shl
mov
daa
push
test
mov
dec
add
push
test
insl
mov
pop
xor
push
sbb
mov
xchg
jbe
jmp
gs
adc
push
in
cmpsb
jg
cmp
in
mov
ret
stos
gs
fsub
xlat
mov
xor
and
rorl
sbb
rol
outsb
pop
mov
pushf
lret
and
repnz
jmp
xor
pop
push
cmpsb
jae
mov
lods
clc
lret
mov
call
cmp
push
push
push
fsin
add
insl
cmp
jbe
sbb
lea
popa
pop
push
rcl
xor
js
ret
dec
fsts
mov
push
jne
jle
es
sub
popa
adc
xchg
cmp
push
add
in
jnp
sub
add
xor
lock
rorl
loope
test
cwtl
sahf
call
gs
dec
push
imul
adcl
scas
push
mov
cltd
sub
dec
push
push
xor
or
xor
inc
or
fdivr
xchg
jb
cmp
jecxz
nop
fstpt
or
cmp
adc
cltd
mov
aas
or
pop
test
cld
sub
and
int
js
dec
test
nop
outsl
pop
repz
lret
fldl
fbld
ror
adc
into
int
sar
mov
pushf
lret
sub
popa
insb
fld
loope
push
pusha
hlt
adc
sub
fimuls
inc
inc
mov
call
fcomp
je
pop
mov
xor
sbb
cmp
std
inc
pop
or
sub
sbb
xor
ja
mov
les
int
cmpb
xor
rcrb
sub
or
jae
icebp
idivl
adc
in
jg
mov
out
jmp
lea
mov
mov
push
leave
fisubl
gs
mov
xor
inc
je
lea
leave
push
sbb
mov
cmpsl
daa
or
faddl
lock
push
call
dec
cmp
bound
push
mov
and
cmp
insb
cli
jecxz
dec
sti
jne
mov
notb
ss
jns
adc
imull
movsb
pop
pop
push
ljmp
ret
imul
push
data16
push
movzwl
cli
subl
sarl
cmp
mov
mov
lock
ficomps
cld
push
or
test
std
pop
sbb
cmpsb
sti
push
adc
mov
scas
jae
pop
and
scas
mov
ficoms
cmpsb
scas
jo
inc
lret
ret
inc
outsb
sbb
push
stc
cmp
lods
push
mov
lds
lahf
ja
in
inc
jecxz
or
lea
xor
dec
pop
roll
mov
mov
or
xchg
lods
pusha
fdivrs
dec
sbb
jl
repz
inc
rol
xor
jp
mov
pop
out
and
adcl
push
xor
mov
xor
push
xchg
add
mov
lea
fsubl
pop
shl
ret
outsl
imul
call
or
push
cmc
push
js
mov
rcll
mov
jge
xchg
icebp
int
sbb
sub
jg
imul
pop
and
jb
dec
orb
out
shlb
mov
repnz
jl
sbb
mov
cmp
push
push
lods
fsubrp
sub
jns
pushf
out
mov
jno
xorb
or
or
pusha
js
scas
ja
cmp
std
fadd
pop
or
rcrl
int
sti
lods
cmp
jno
lahf
sarb
and
popf
idivl
stc
popa
inc
mov
test
jns
int3
rcl
and
mov
sbb
out
or
int
jg
dec
lods
or
xchg
mov
push
mov
aas
clc
cmpsl
sub
outsb
pop
cltd
out
jecxz
into
inc
lcall
test
cmc
inc
jo
mov
pop
xchg
test
insl
rorl
js
sbb
lret
mov
ret
xor
adc
pushf
outsl
adc
leave
loope
mov
movsb
mov
arpl
mov
cmp
inc
or
lahf
in
lds
icebp
sub
lods
sbb
insb
mov
mov
ficoml
pop
mov
push
inc
stos
cmpl
or
add
or
jg
pop
fisubrs
mov
daa
push
les
cwtl
mov
xlat
in
lods
addr16
adc
add
test
push
mov
push
add
ljmp
dec
jns
mov
pop
cmp
cmc
rclb
mov
cmp
push
std
sbb
jmp
test
pop
rcrb
push
and
mov
inc
jecxz
inc
scas
pop
xchg
or
inc
lea
xlat
rcr
ss
mov
jnp
mov
sub
iret
stos
popf
loope
or
frstor
sti
clc
movsl
test
cmp
stos
jbe
jo
pop
ja
mov
jle
enter
add
jge
lds
sub
arpl
insb
notl
dec
jae
cltd
fstp
dec
xor
negl
mov
stc
jle
push
fdiv
sbb
roll
movsb
xor
mov
pushf
sub
out
call
jno
pushf
xor
jecxz
pop
movsl
outsb
xchg
sub
mov
sbb
jge
bound
or
pop
sahf
mov
nop
dec
loope
out
subb
cli
push
xor
pop
pusha
sub
enter
negb
hlt
test
jo
insb
ljmp
lcall
push
out
jbe
fs
mov
cmp
bound
mov
div
orb
ljmp
adc
out
jp
xchg
popf
xchg
addr16
es
jae
mov
aam
push
pusha
inc
jle
jecxz
popf
lahf
daa
outsl
icebp
mov
rorl
and
pushf
push
inc
push
adc
pop
inc
push
and
pop
jecxz
sub
push
int
and
cwtl
int
scas
outsb
mov
add
das
mov
or
xor
and
rolb
push
lock
pop
add
loopne
outsb
push
lods
dec
loopne
int
into
dec
add
shll
shlb
pop
adc
jnp
xor
enter
outsl
xchg
fnsave
pop
fidivl
lcall
jnp
pop
or
cwtl
sub
xor
clc
pop
sbb
sub
pop
xor
sbb
adc
cmpb
pop
data16
ljmp
lcall
popf
jbe
das
loopne
fucomi
lods
jecxz
test
fcmovu
or
xchg
xchg
jmp
push
push
pop
xor
lods
push
mov
adc
jns
mov
or
lods
xor
or
push
xchg
out
roll
push
ret
daa
icebp
imul
enter
lds
or
push
outsl
cmp
adc
or
leave
jno
daa
xor
aas
add
scas
xchg
mov
into
and
or
cmp
add
sbb
xor
cmovle
sub
push
xchg
outsl
mov
sbb
adc
mov
stos
filds
outsl
ficomps
rcll
sbb
scas
mov
mov
sub
int3
loope
inc
and
bound
mov
lahf
test
xchg
sub
cmpl
insl
loopne
and
mov
jmp
sbb
push
adc
lahf
add
lods
sbb
daa
pop
and
in
and
cmpsl
rol
cmpsl
push
push
jno
icebp
shll
lret
aad
xlat
adc
pop
add
add
stos
stos
fildll
mov
pop
aas
pop
fdivs
test
adc
dec
push
sbb
les
pusha
test
push
push
aam
lock
in
pop
jnp
mov
stos
xlat
push
fs
sbb
fdivl
pushf
sti
mov
test
pop
pop
inc
shrb
push
add
adc
lock
push
inc
lcall
mov
sub
jp
mov
or
fs
add
lcall
fidivrs
leave
push
mov
loop
mov
cli
mov
sti
loope
enter
or
sti
push
lret
fnsave
or
xor
sbb
sahf
pop
pop
and
jecxz
cmp
in
or
fsubrs
lcall
imul
push
push
mov
rcll
jge
inc
and
push
in
rorb
add
mov
jbe
jg
dec
xchg
addr16
movl
lret
cmpsl
je
fwait
sbbb
add
cmp
js
fistps
sbb
negl
mov
xchg
sti
outsb
rolb
stos
xor
lret
xor
into
lds
out
mov
mov
jecxz
and
xchg
int3
mov
out
mov
mull
pop
push
outsl
inc
sbb
out
pop
cltd
mov
mov
pop
push
fisttpll
pop
adc
inc
push
and
sti
push
dec
scas
xor
sub
mov
pcmpgtd
push
sub
jns
push
push
ja
cmp
test
cmc
mov
imul
pop
int
or
cmp
add
xchg
xor
arpl
bound
sbb
cmp
and
in
movsl
sub
std
jge
mov
xchg
mov
iret
fwait
pop
ror
movl
adc
dec
and
dec
sbb
xor
int3
mov
jo
and
push
inc
and
call
ljmp
inc
mov
xor
scas
daa
loope
icebp
adc
sbb
add
in
fildl
push
ja
orl
mov
scas
and
mov
jp
dec
mull
adc
push
clc
filds
mov
lret
inc
or
inc
in
out
or
aad
leave
stos
cmpsb
repz
mov
jmp
jo
dec
js
sbb
sub
scas
xchg
inc
scas
inc
into
lret
jmp
subl
rorb
popa
or
xorb
test
in
mov
int
sarl
das
dec
lock
lds
sub
dec
pop
sbb
pop
stc
les
clc
aad
lds
jns
mov
inc
scas
mov
xor
jmp
les
and
icebp
mov
xchg
fidivl
mov
fbld
or
in
jns
dec
pop
ljmp
and
fnstsw
fcmovu
inc
inc
outsl
cmp
push
xchg
cld
xor
mov
inc
xor
sub
adc
xchg
sub
sub
sub
push
xor
or
cli
orb
push
jne
or
adc
pusha
incb
jle
lods
cmpsl
push
in
dec
adc
and
adc
sbb
lret
mov
insb
jbe
push
jbe
ret
xchg
lret
xchg
sbb
pop
lret
push
pop
int
or
jbe
rcr
or
push
mov
jb
imul
jo
add
lea
fdivr
rcr
icebp
jmp
sub
sub
repnz
lea
add
pushf
nop
push
or
out
fistps
dec
cmp
mov
sub
repnz
clc
daa
inc
add
mov
scas
and
mov
shrb
ret
xchg
sub
cli
leave
shrb
insl
or
mov
stos
mov
scas
pop
adc
fdivl
scas
aam
cs
lahf
adc
pop
adc
or
lret
xor
xor
cs
jbe
jbe
add
hlt
leave
inc
mov
stos
stos
sbb
jl
dec
fcoml
inc
mov
lret
push
push
xchg
mov
int
jmp
roll
dec
xchg
mov
add
mov
in
inc
outsb
rcrl
inc
push
and
sbb
jge
lea
divb
fstl
dec
push
cmc
sub
cmpsl
arpl
push
cmp
in
movsb
out
jmp
mov
mov
sbb
insl
cmc
lock
call
add
add
rorb
js
pushf
xchg
in
mov
or
inc
je
mov
repz
inc
addr16
dec
fcoms
inc
xchg
lods
sbb
aaa
orl
sub
cmp
pop
pusha
cwtl
fs
addb
aad
pop
and
std
inc
lds
push
fs
dec
lea
andl
test
push
jnp
ss
jp
sub
dec
mov
jb
das
movsb
dec
lods
fs
push
icebp
xchg
cmc
dec
idivl
pop
shl
or
insb
add
push
rolb
lock
push
pushf
push
inc
xchg
jbe
pop
bound
sub
pop
gs
lea
dec
arpl
loopne
ja
scas
addb
sahf
mov
xchg
ret
mov
lds
xchg
shrl
cmp
das
std
lret
sub
fdivr
mov
xchg
and
dec
mulb
dec
insb
int3
cmc
xchg
lock
mov
or
jnp
repnz
aaa
cmpsb
and
mov
pop
push
daa
and
cli
into
jmp
cmpl
std
sbb
fdivrl
dec
ret
fbstp
in
add
in
cmp
scas
in
xchg
cwtl
dec
mov
mov
and
ljmp
and
jecxz
push
lea
cmp
xchg
cmp
insl
xor
cltd
sub
hlt
insl
cmp
scas
xor
mov
adc
int3
mov
sub
adc
int
iret
sub
lea
and
mov
mov
addb
add
sub
push
mov
push
fsubr
sarb
or
sub
pusha
shll
popf
neg
das
mov
inc
push
stos
fnstenv
fisubs
mov
ss
push
stos
mov
clc
lahf
cs
cli
and
lds
xor
push
mov
mov
insl
jle
daa
push
or
inc
popa
fucomip
dec
mov
repz
ljmp
cmp
lds
addr16
mov
inc
dec
test
mov
loope
cwtl
inc
xchg
loope
pop
mov
int3
lahf
push
or
scas
xchg
xchg
popa
cs
and
jmp
dec
pop
insb
push
cmpl
sahf
dec
out
insb
mov
push
mov
call
test
dec
sbb
popf
call
add
adc
sub
and
lods
dec
jnp
push
leave
pop
out
mov
push
lods
cld
test
in
out
jp
insb
xor
stc
xchg
icebp
lret
add
jg
inc
mov
adc
cmc
adc
scas
imul
sbbl
xchg
shl
repnz
mov
rcrl
outsl
fstl
loopne
arpl
ret
adc
pop
xor
pushf
sub
mov
mulb
mov
or
mov
in
rol
arpl
add
inc
sahf
loop
imul
push
pop
into
jae
pop
add
add
outsl
jge
in
mov
jmp
cmp
jl
mov
mov
adc
das
xor
sti
cli
sbb
gs
scas
mov
push
jbe,pt
inc
xchg
lods
xchg
mov
pushw
lea
mov
push
mov
rol
inc
mov
mov
push
das
mov
or
jmp
hlt
mov
sbb
idivl
mov
sbb
and
enter
push
mov
imull
movsl
mov
sub
push
cmp
xchg
push
clc
stos
scas
xor
test
fcmovne
rcl
mov
cmp
sahf
mov
ss
aam
push
xor
mov
and
mov
adc
jge
daa
xor
call
sub
rolb
push
push
pop
repz
jge
dec
cs
inc
lock
mov
adc
xchg
jmp
adc
outsb
lods
add
imul
sub
inc
xchg
je
lret
arpl
pop
mov
mov
mov
data16
fdivrl
mov
push
sub
cmpsl
and
mov
and
jecxz
lret
rolb
out
or
or
or
add
idivl
movsl
mov
mov
clc
lock
into
dec
pop
outsb
jno
pop
repz
or
bound
fistpl
jns
pop
jecxz
fucom
cmpsl
lret
add
cli
xchg
les
imul
loopne
pushl
xchg
pop
jge
sub
cld
add
and
xchg
loopne
bound
pop
arpl
mov
shlb
adc
or
sbb
dec
cmp
xchg
movsl
decl
add
or
sbbl
repz
add
push
sarb
icebp
testb
js
jbe
mov
mov
and
mov
btc
pop
fs
sbb
jl
add
push
in
in
ja
and
into
xor
pop
jp
cld
push
in
loop
enter
and
dec
dec
out
xorl
xchg
mov
mov
adc
jge
sub
cwtl
fs
jp
lcall
xchg
jbe
in
enter
inc
loope
cmp
pop
loopne
outsb
add
test
cwtl
jne
pop
movsb
jne
aam
add
mov
xchg
in
arpl
scas
and
mov
and
imul
ja
inc
out
pop
outsl
out
sub
push
lahf
pop
xor
ret
fsubl
dec
inc
fscale
mov
lock
rclb
pop
movsb
xchg
mov
ret
push
xchg
push
shll
and
and
clc
gs
out
out
int3
fnstcw
add
pop
in
movsl
inc
mov
xorl
jle
mov
fisttpl
inc
mov
mov
or
cmpsl
mov
or
les
mov
sub
loop
aam
frstor
xchg
push
mov
in
cmp
inc
and
cs
rolb
pushf
pop
xchg
sbb
sub
inc
pop
imul
cmp
loopne
pop
addr16
pcmpgtb
pop
mov
jb
add
ljmp
xchg
mov
popf
repnz
ret
arpl
pop
loop
outsl
fbstp
ficoms
sbb
sbb
and
mov
stc
jl
mov
sub
mov
test
lock
push
mov
sbb
push
inc
adc
sahf
lret
mov
and
cs
ret
jae
and
cld
xor
push
fcompl
js
jecxz
or
sbb
xor
cld
xor
lret
mov
in
repnz
fdivrs
adc
push
fidivl
pop
sbbl
jnp
mov
inc
dec
int
gs
push
nop
nop
rclb
les
lock
sub
scas
sbb
leave
sbb
xchg
sahf
mov
inc
mov
inc
or
bound
arpl
pop
movsl
in
out
push
outsl
shll
and
or
mov
adc
dec
aas
das
jg
push
jg
pop
jecxz
cltd
lods
outsl
jge
roll
xchg
enter
pop
insb
mov
jbe
int3
add
push
rclb
mov
cwtl
cmp
sbb
bound
adc
ret
push
push
jge
insb
pop
or
mov
in
mov
dec
nop
sbb
sub
lods
arpl
push
dec
sbb
mov
mov
or
data16
pusha
push
mov
dec
xorl
mov
adc
aaa
cwtl
data16
aam
test
loopne
dec
inc
dec
in
fs
mov
lret
decb
add
mov
mov
sub
push
xorb
mov
aas
movb
push
inc
enter
clc
incb
imulb
adc
enter
mov
out
test
cmp
aaa
scas
nop
stos
adc
repz
dec
sub
jns
inc
ss
xchg
inc
cs
add
dec
sti
stos
lods
out
or
mov
cmp
ss
cmp
pop
or
and
pop
pop
fsubr
movsl
fsubl
mov
xchg
xor
shrl
aaa
data16
inc
push
sbb
and
push
jns
es
scas
and
push
mov
xchg
or
repz
push
xor
mov
fldcw
cmp
add
xor
xchg
jmp
jns
mov
xchg
popa
rcl
je
mov
fs
jg
and
divb
jns
pop
vphaddwq
lods
fsubr
and
add
nop
stos
lock
subl
fdiv
cmp
add
mov
push
pop
mov
pop
loop
enter
jecxz
outsl
ret
pop
cmp
sbb
or
sbb
clc
and
lcall
sub
jp
jp
mov
leave
lahf
cld
fstpl
lods
or
mov
test
dec
stos
lcall
jae
insl
jnp
fs
xchg
out
pop
fistps
mov
push
daa
mov
xchg
movl
push
out
and
cltd
je
ret
mov
into
mov
addr16
pop
ret
pop
push
out
decl
outsl
fistpl
clc
cmc
test
ljmp
adc
cltd
or
icebp
in
xchg
pop
gs
cmp
call
insb
mov
or
sbb
sti
and
js
lahf
sub
add
imul
dec
fcoml
rcll
imul
into
add
loope
jmp
xor
mov
mov
imul
cmp
jo
out
stos
sub
sub
jle
addl
stc
mov
dec
scas
mov
fs
hlt
mov
inc
inc
sahf
gs
outsl
xor
pop
add
push
cmp
in
shlb
loopne
mov
or
int
lock
es
push
ret
xor
sbb
fs
loope
xchg
int
push
inc
movsl
pushl
pop
pop
xchg
popf
push
push
data16
test
dec
je
adc
mov
out
cmpsb
jle
sub
int3
imul
pop
ret
pop
add
jne
cmc
pop
mov
mov
sbb
rcrl
inc
pop
push
loopne
jnp
out
test
shrb
cmc
fcompl
adc
fs
out
rcrb
push
and
dec
subb
addr16
jge
pusha
or
ds
mov
inc
es
hlt
mov
rcl
jg
add
or
insb
xchg
jbe
bound
mov
notl
mov
push
cmpb
add
xchg
mull
pop
ficoml
fs
lahf
fidivrl
push
adc
fisubrs
adc
push
jnp
stc
cwtl
jl
jg
xor
out
aas
sub
xchg
sub
out
and
les
or
jns
adc
and
push
jg
jo
aaa
test
pop
mov
adc
aam
inc
fwait
daa
lcall
or
movsl
mov
ret
imul
imul
add
inc
in
xor
punpcklwd
dec
pop
mov
jbe
addb
mov
ja
pop
mov
xchg
call
xorb
cmp
mov
insb
cmpsl
adc
mov
clc
push
adc
rolb
sbb
pop
js
enter
les
icebp
aas
and
ret
sub
lret
push
movsb
add
stc
xor
leave
fnstenv
jne
shl
outsl
push
or
aad
ljmp
in
test
push
ret
scas
and
popa
inc
adc
xchg
cli
dec
mov
addr16
mov
jle
pop
mov
shl
stc
sub
or
aad
sub
jne
mov
orl
push
je
roll
clc
jg
out
rclb
cmp
das
loop
jg
aam
pop
adc
ret
pop
test
pusha
push
inc
stos
inc
lret
cwtl
dec
sub
fists
mov
cs
mov
mov
or
stos
mov
jns
insl
and
push
jg
and
in
mov
sub
cmpl
lds
xchg
xchg
int
push
in
mov
push
cmpl
arpl
sbb
rorl
xor
push
in
mov
jmp
dec
scas
in
xor
pop
idivb
daa
push
sbb
dec
xor
mov
bound
mov
and
movsb
mov
cld
pop
mov
inc
call
push
inc
jg
mov
pop
loope
and
push
sbb
mov
xor
pushf
insb
insb
dec
mov
mov
cs
hlt
sbb
aaa
cli
inc
mov
daa
scas
repnz
cld
dec
adc
and
js
adc
xchg
ljmp
fs
ja
test
imul
fnstenv
imul
xchg
jo
scas
or
call
xchg
stc
outsb
mov
xor
pop
mov
xor
mov
arpl
mov
sbb
mov
inc
mov
sbb
adc
mov
sub
dec
xor
sub
rcll
mov
out
mov
fists
loope
arpl
mov
adc
xlat
sub
sub
aam
lods
xchg
xlat
hlt
or
push
add
xor
jge
stc
out
ljmp
mov
and
push
mov
and
jge
mov
xchg
inc
mov
inc
fisubs
pop
rcrl
pop
push
les
aad
lock
add
in
repz
jecxz
cmp
int3
jnp
mov
mov
sbbl
push
xor
std
fld
dec
scas
rcrb
loopne
inc
rcrb
ret
add
lods
jb
xchg
cmpsb
addl
cmp
inc
adc
dec
sbb
jbe
cmp
pop
xor
jnp
add
adc
add
adc
into
es
add
and
cli
pop
popa
inc
jo
mov
lret
test
push
and
jle
ficoms
rcll
and
cmpsb
ret
jbe
addl
jmp
les
mov
jne
sbb
test
negb
xchg
scas
imul
mov
inc
push
mov
lods
leave
mov
daa
sti
movsl
loope
imull
push
aad
dec
int3
inc
mov
and
inc
mov
xor
inc
pop
subl
jb
test
and
sub
jb
push
adc
pop
and
lahf
xchg
xlat
ror
and
adc
test
out
scas
adc
dec
mov
add
xchg
xlat
and
shll
adc
jo
jp
aas
cmp
nop
sbb
mov
push
test
cmp
lret
add
cs
inc
out
pop
sub
ficompl
lea
cwtl
je
jmp
popa
xchg
mov
sub
mov
fld
add
mov
sub
stc
push
shlb
adc
out
jnp
outsb
cmpl
outsb
aaa
push
movl
jmp
mov
inc
jge
add
or
daa
ljmp
push
bound
mov
xlat
mov
cmc
sbb
add
cltd
loopne
sub
adc
dec
pop
inc
outsl
je
or
pop
push
push
jbe
xor
dec
out
loope
jo
cmp
sbb
cmp
data16
inc
and
adc
xchg
or
jnp
test
cmp
je
push
inc
das
lock
inc
int3
aas
mov
mov
sub
dec
and
push
mov
xchg
dec
mov
loope
in
xlat
and
xchg
mov
movsl
lahf
mov
sbb
sub
dec
repnz
add
cmpl
jl
icebp
lea
sub
mov
mov
sbb
in
lods
insb
stos
loop
in
iret
sbb
cmp
je
iret
lret
subb
scas
test
jb
ret
push
sub
add
and
fiaddl
pop
lds
orb
adc
fwait
push
les
mov
or
or
std
inc
repnz
cmp
es
out
push
imul
cmp
shlb
sti
xchg
lods
xchg
cld
enter
push
in
in
pop
in
stos
push
xchg
mov
pop
inc
mov
xor
mov
xchg
ret
sub
aam
push
sub
push
loop
das
cs
ffree
add
es
or
dec
mov
enter
addl
aas
call
arpl
leave
cli
fcomps
sub
pop
jmp
cmp
cmpsl
fldcw
cmpsb
cmp
leave
test
cmp
outsb
pop
push
mov
push
mov
mov
push
loopne
lea
mov
subl
xchg
popa
sub
cmpl
xor
mov
mov
shr
test
xchg
mov
incb
enter
jb
insl
and
xor
fxch
mov
lahf
sarl
sbbb
mov
out
jb
mov
movsl
pusha
popf
push
xchg
int3
add
xor
repnz
movsl
jl
jb
pop
insl
pop
aaa
icebp
movl
mov
std
ret
stc
inc
inc
pop
dec
sub
cmpsb
lods
insb
into
fucomip
cmpsl
and
xor
scas
and
jns
imul
sub
jnp
std
mov
jb
cwtl
gs
jbe
dec
cs
cmp
clc
fs
jl
and
sub
in
sbb
lahf
rorb
adc
mov
and
lret
test
mov
pop
imul
mov
cmp
xchg
cmp
xor
loope
push
adc
mov
mov
enter
in
jns
mov
or
xchg
sbb
aam
rcrl
into
or
ret
jo
scas
scas
data16
aas
jp
out
fs
shlb
lcall
popa
cmp
in
lret
push
inc
test
addr16
push
lahf
and
lret
push
hlt
push
add
pusha
js
clc
sbb
in
mov
push
out
popf
std
or
mov
or
out
mov
and
sub
repnz
mov
cmpsl
mov
dec
sub
ror
adc
icebp
jge
xor
mov
inc
rclb
int
cld
jbe
and
and
mov
outsl
pop
pusha
imul
mov
dec
test
cmp
push
out
shlb
mov
and
cld
or
lods
scas
mov
mov
push
insb
push
das
lret
out
push
test
icebp
cmc
xchg
popa
xor
scas
mov
clc
jne
movsb
xchg
imulb
push
sub
jno
pop
sarb
movsl
jnp
cmp
xlat
fdivl
dec
xlat
mov
adc
es
insl
insb
fwait
inc
dec
jb
popf
xor
popl
rolb
dec
loop
outsl
test
sub
in
in
test
pop
pop
jge
popa
pop
xchg
ss
fcoms
aad
push
std
lea
sbb
adcl
jnp
and
inc
push
int
insb
or
push
xor
iret
sahf
dec
ss
test
jg
and
push
pop
xor
stos
fldcw
fildl
inc
aaa
jno
enter
add
scas
fldcw
ja
mov
inc
pop
imul
shll
cmpsb
inc
fmul
mov
repnz
fwait
cmp
push
das
call
dec
mov
clc
adc
and
lods
aam
cmp
push
je
mov
push
insl
ret
out
daa
mov
popl
imul
fcomps
int
addr16
sbb
aaa
mov
cmpsl
mov
and
lock
jae
popa
stc
mov
hlt
pop
pop
cwtl
bound
dec
imul
xchg
es
mov
push
js
dec
jl
fwait
and
dec
pop
or
call
cmpsl
cmp
or
inc
outsb
les
dec
fs
push
pop
adc
shl
pop
insl
dec
and
popf
and
push
scas
cltd
int3
add
push
cmc
xchg
pusha
mov
push
out
imul
push
out
mov
xchg
pop
ljmp
test
pop
sbb
lcall
add
push
pop
push
iret
out
mov
aad
sahf
aam
lock
push
fsubrp
cmp
jo
stc
leave
dec
ret
mov
repz
or
cld
and
xchg
outsl
sarl
shr
sub
out
hlt
movsl
daa
sub
dec
lods
in
pushf
insb
sbb
rcr
dec
mov
cmpsb
enter
mov
in
xchg
aam
add
adc
mov
enter
aad
sbb
or
pop
out
int3
xchg
std
pop
xor
push
enter
cmp
or
push
lods
jp
loop
add
sahf
aaa
xchg
jno
xor
cld
mov
mov
jns
or
jge
dec
cmpsb
out
pop
test
jle
sub
ds
or
push
jp
sub
add
jns
out
outsb
test
cs
out
movsb
mov
xchg
aam
call
xchg
pop
roll
jl
mov
in
mov
lds
sub
pop
adc
iret
mov
pop
inc
fmull
addl
adc
loop
add
dec
xlat
mov
mov
pusha
ficompl
mov
add
push
int
roll
sbb
xor
push
xchg
inc
fdivrs
or
mov
inc
mov
fwait
sbb
cmp
xorl
fmulp
cmpsl
das
add
in
js
outsl
xorb
jp
sbb
outsb
push
insl
adc
cwtl
test
stc
and
sub
xchg
sti
cs
inc
and
and
and
test
adc
push
into
cltd
call
enter
adc
adc
mov
bound
sti
push
into
fwait
cltd
jno
and
adc
xorl
and
lods
sub
jle
cltd
mov
push
dec
scas
push
fnstcw
mov
push
lock
sub
sub
and
or
or
aad
or
adc
js
push
jg
lds
dec
sbb
fsubp
sarb
push
push
mov
addr16
jae
dec
jnp
mov
mov
mov
loop
es
and
jecxz
dec
mov
imul
lods
push
cli
in
sub
cmp
and
push
adc
add
sub
iret
orb
push
jp
xchg
sub
shll
inc
repz
into
leave
movsb
xchg
pop
jp
pop
lahf
int3
out
cmp
out
pop
sbb
popa
out
cld
cwtl
fists
mov
pusha
and
lea
adc
fdivrs
jmp
push
jmp
mov
dec
sub
dec
adc
lods
jnp
mov
lcall
xchg
sbbl
inc
in
xchg
cmpsb
sahf
into
xor
outsl
pop
inc
daa
ja
aas
gs
add
cmp
scas
jbe
fisubrs
mov
inc
movsl
xor
es
sbb
mov
dec
xor
add
xchg
enter
inc
cmpsl
mov
rclb
pop
movsl
lret
mov
push
mov
imul
adc
mov
fcomp
rcrl
add
dec
cmp
fcmovb
jno
pop
adc
cmpsl
adc
cltd
test
incb
fucom
and
btc
push
push
unpckhps
mov
lahf
ret
fimull
dec
addb
mov
push
addr16
test
push
jne
sub
shlb
insl
inc
imul
jne
or
sbb
add
bound
rcrb
out
cmp
cli
mov
scas
sahf
push
push
xlat
mov
popa
pop
loop
push
icebp
xchg
mov
movntps
jnp
or
adc
push
dec
shrb
aam
sbb
adc
lret
mov
imul
and
mov
adc
jb
sbb
wbinvd
loopne
jmp
fdivrl
aaa
inc
movsl
inc
cs
test
sbb
filds
fsubrs
push
mov
aaa
iret
push
stos
pushl
mov
mov
mov
rorl
imulb
mov
xor
icebp
pop
sbb
sbb
cmp
movsb
mov
scas
call
cmp
push
fmul
outsl
outsb
cmpsb
roll
dec
popa
xor
shr
mov
pop
imul
outsb
add
outsb
xchg
and
outsb
dec
shrl
es
jns
sahf
leave
dec
xlat
push
stc
mov
leave
push
cmpsl
aad
mov
imul
mov
outsl
pop
aad
popf
pop
lcall
out
mov
es
jmp
dec
aas
mov
xor
add
ficomps
and
mov
sar
or
repnz
jg
xchg
js
lcall
aad
mov
push
or
mov
ret
sub
aas
adc
bound
repz
ja
repnz
xlat
in
out
xchg
js
add
daa
movsl
inc
xchg
cmp
cwtl
mov
mov
aas
jb
xchg
shll
dec
dec
xchg
mov
mov
or
popa
int3
js
or
dec
mov
or
loop
push
frstor
jmp
jno
mov
sbb
stos
arpl
push
jge
xchg
pop
daa
jecxz
fldcw
or
push
mov
dec
add
subb
xor
nop
ret
lods
mov
sbbl
inc
lahf
xchg
mov
inc
cmp
push
cmpl
sub
test
outsl
test
pop
cld
mov
or
clc
daa
enter
cvtps2pi
movb
icebp
lcall
mov
ljmp
add
xchg
clc
mov
or
aad
inc
sbb
sahf
jns
mov
aaa
inc
dec
push
fcomps
push
inc
sbb
pop
dec
xor
dec
add
jge
mov
xchg
and
dec
pop
test
imul
inc
fdivrp
jns
in
sub
sbb
mov
sub
mov
aad
leave
or
dec
mov
adc
mov
int
push
std
or
jbe
mov
in
inc
dec
out
fnsave
stos
inc
xchg
sahf
inc
icebp
dec
outsb
dec
xchg
and
inc
mov
decb
add
enter
mov
inc
out
scas
js
ficomps
jl
das
xor
add
out
mov
mov
xchg
mov
mov
repz
sbb
adc
dec
aad
cmp
lods
dec
insb
push
sbb
movsl
fst
rcrb
popa
cmp
testl
mov
jb
xchg
add
and
dec
sbb
out
jbe
push
aaa
adc
inc
mov
fnstsw
or
pop
push
lods
or
adc
inc
ja
lahf
mov
inc
mov
xor
pop
aaa
jno
sbb
push
dec
add
mov
adc
push
loope
sub
fistl
jb
test
psubd
not
push
lds
lock
out
icebp
jg
pop
fisttpl
orl
outsl
jne
inc
push
sbb
outsb
fdivrs
mov
cmpsl
jmp
fistpl
add
push
mov
das
jnp
lcall
xchg
and
cs
cli
xor
sbb
sti
mov
insb
mov
lcall
mov
xlat
push
xchg
dec
cltd
loopne
xor
repz
push
xchg
js
jb
cli
fsubrl
pop
mov
cmp
mov
jle
test
pop
dec
stos
in
and
int3
insb
in
dec
mov
pop
cs
testl
fcomps
mov
mov
xchg
jp
lods
xchg
stos
xchg
sub
or
aad
pop
jo
pop
std
out
repnz
lods
lock
imul
fwait
scas
dec
xchg
je
or
je
popa
clc
cmc
icebp
pop
fsubs
sti
cli
aad
or
push
shlb
sahf
or
shrl
pushf
mov
xchg
les
mov
lds
jge
mov
in
inc
pushf
xlat
lret
movsl
pushf
pop
js
sti
sub
movsl
out
mov
xor
les
cli
mov
ret
and
aam
mov
mov
jge
pop
mov
out
pop
nop
lods
cmp
not
or
repnz
jecxz
xlat
jbe
popf
fimuls
mov
int3
nop
sbb
jae
mov
mov
add
adc
add
sbb
imul
imul
shll
rcr
jge
cmp
inc
cmc
inc
leave
loopne
sbb
data16
scas
sub
popf
jp
adc
sarl
mov
lahf
mov
cld
mov
xor
xlat
mov
pushw
sbb
out
mov
sub
mov
out
sbb
repnz
inc
dec
inc
dec
push
rcrl
inc
lret
push
add
push
mov
or
mov
mov
xchg
cmp
stc
push
and
std
call
movsb
mov
xor
dec
cld
daa
sbb
sbb
mov
test
out
iret
popa
sbb
sbb
lds
sub
lods
fistpll
loopne
lods
into
das
push
stos
leave
add
bound
pop
rolb
inc
addr16
xor
jp
mov
decb
push
ljmp
incl
pop
inc
jp
mov
out
lods
add
popf
out
int3
scas
adc
daa
pop
insb
mov
jge
pop
mov
pop
push
cwtl
cmpb
test
sbb
sub
cmp
inc
lock
fdivl
fdivrs
test
inc
pop
cmp
cli
pop
xchg
add
jno
addb
or
dec
rorb
and
sub
shll
jle
cmp
outsb
shrl
or
inc
add
sbb
outsb
popa
xor
dec
sahf
xor
test
sub
mov
mov
jnp
pop
shlb
fmull
push
xchg
lods
ds
das
imul
scas
mov
mov
add
mov
enter
xchg
inc
fwait
je
mov
adc
rcll
fsubrl
pusha
pop
test
push
mov
dec
inc
pop
test
mov
xchg
xor
ret
popa
test
pop
mov
lods
push
jp,pt
add
cmc
mov
ds
stc
jge
movsl
or
add
js
push
call
outsl
and
xlat
pop
sbb
sbb
mov
enter
add
sub
add
popf
aad
and
mov
jb
add
adc
jae
lahf
or
jmp
mov
jae
mov
repnz
xor
xor
pop
fdivs
scas
jecxz
sbb
inc
xchg
lcall
test
insl
ds
adc
aaa
in
inc
imulb
xchg
das
xchg
ror
insl
pop
fstl
gs
push
icebp
mov
ret
lea
sbb
insb
mov
rorl
mov
add
cwtl
dec
mov
push
adc
daa
ret
pop
jecxz
jno
mov
fadd
mov
andb
les
xchg
push
xor
pusha
fldenv
xor
mov
imul
shll
cld
add
xchg
test
out
fdivrs
jo
xor
cmc
cmp
cmc
mov
sbb
loopne
fsubrl
pop
loopne
out
lock
jmp
pop
test
mov
and
jno
sbb
mov
inc
cmpsb
in
aas
dec
pop
push
sbb
xsavec
dec
iret
rcrl
popf
arpl
test
popl
mov
and
pop
jne
jno
pop
or
negl
cmp
inc
in
xchg
mov
fisubrs
cld
cld
popa
scas
roll
clc
adc
mov
insb
fucomip
mov
lahf
pusha
cmp
call
ds
cmp
dec
jno
iret
sbb
mov
insl
jne
hlt
pushf
fndisi(8087
out
pop
inc
movl
std
outsl
add
lret
idivl
nop
and
subl
loope
ret
lock
dec
cmc
fcmovnbe
movsl
jnp
sub
mov
scas
pop
sti
and
ljmp
out
pop
push
adc
ret
fiaddl
dec
fsubrp
out
xchg
xorb
cmpsl
inc
lds
cld
push
cli
lea
sub
adc
and
in
fldl
ret
inc
xchg
aad
in
mov
arpl
fidivl
sub
or
enter
dec
lahf
negl
adc
mov
movsl
das
adc
cmp
std
dec
jo
std
call
aas
bound
repz
clc
sub
mov
sbb
dec
jbe
fdivs
inc
add
enter
xor
fsubl
stc
mov
adc
test
cmp
stos
pop
mov
dec
out
clc
mov
mov
cmp
lahf
adc
add
or
or
mov
add
lock
xor
sub
add
sbb
clc
lock
je
js
out
ja
pop
in
shrl
mov
loop
mov
dec
xchg
mov
sbb
icebp
pop
addr16
inc
pop
ret
mov
and
and
jmp
inc
push
mov
sbb
sub
lods
jecxz
or
xor
in
mov
ja
inc
mov
or
jmp
cli
sub
out
push
pop
pop
fcom
xor
add
pop
dec
mov
ret
pop
sbb
xor
arpl
sub
push
mov
xchg
cmc
aam
cmp
mov
lock
aad
dec
xchg
call
push
xor
dec
add
les
mov
mov
lret
iret
repnz
add
rcll
push
push
data16
xor
xchg
sub
adc
add
out
adc
dec
mov
loopne
gs
cmp
in
pop
test
rcrl
rcr
sub
inc
jae
or
mov
das
sub
inc
movsl
pop
movsb
fsubs
mov
push
add
ret
push
inc
cmp
xor
sbb
push
insb
repnz
mov
dec
cmpsl
inc
in
xor
insb
mov
js
or
jge
mov
jbe
dec
cmp
or
sbb
outsb
flds
cld
sub
add
xchg
gs
clc
lahf
lret
fwait
xor
jp
dec
inc
shlb
in
add
ljmp
jne
fbstp
sahf
mov
fs
or
jmp
jne
pop
lods
icebp
pop
xchg
jnp
mov
jb
inc
sbb
cmp
jns
std
cmpsl
mull
shl
push
sahf
js
scas
fdivp
sub
jns
cltd
xor
push
push
push
add
cmp
cmp
jae
push
pop
inc
cld
xor
lahf
pop
jbe
mov
mov
inc
mov
hlt
aas
sub
pusha
pop
pop
mov
aam
int
inc
push
sub
dec
jno
dec
cmp
mov
add
mov
decb
popf
pusha
ljmp
cmp
stos
enter
repz
insl
fidivl
stos
mov
pop
mov
jl
popa
inc
and
ret
mov
sahf
and
int3
insl
aam
or
mulb
cs
xor
insl
lahf
mov
cmp
cmp
scas
dec
xchg
xor
mov
lahf
xor
rcrl
cmpsl
cli
dec
sub
ss
loop
in
test
mov
jnp
adc
shrl
int3
ficompl
imul
inc
cltd
xor
icebp
jbe
xor
push
mov
cmp
popf
jge
pop
stos
outsl
pop
mov
scas
sbb
inc
jae
rolb
mov
mov
in
mov
sbb
push
mov
dec
mov
lock
jecxz
sbb
mov
pop
mov
cmp
in
lret
fstp
out
int3
adc
jg
mov
addb
popa
test
or
jbe
xchg
addr16
inc
push
cmp
test
cltd
xchg
add
dec
cmp
in
jo
cltd
in
stos
and
js
pop
cmp
mov
lret
push
push
int3
sbb
test
repnz
push
daa
sahf
lds
loope
dec
bound
loop
cwtl
ds
repnz
dec
and
mov
shll
adc
fmulp
pop
or
daa
fistl
mov
dec
pop
sti
ljmp
push
mov
das
xor
pop
sbb
dec
imull
adc
jge
inc
pushf
shl
call
cmp
pop
sub
mov
jno
cmc
nop
out
dec
cmc
mov
out
pop
mov
int
add
and
setnp
cmc
ljmp
iret
pop
inc
mov
adc
pop
and
sahf
jo
ret
loop
inc
stos
mov
repnz
add
es
in
mov
out
test
in
in
push
sbb
and
ds
adc
xchg
add
out
push
or
jle
pop
stc
dec
push
pop
jp
data16
mov
scas
sarl
jb
shrl
xchg
xchg
int
or
jge
fcmovnb
adc
push
dec
xchg
clc
outsl
movsl
int
push
xchg
add
movsb
xor
pusha
xchg
dec
fistpll
sub
inc
in
out
mov
xchg
jae
cmp
mov
xchg
pusha
mov
lods
ss
mov
and
fwait
mov
mov
cld
pop
xor
iret
push
mov
jge
mov
or
push
pop
shll
fmuls
sahf
out
mov
loope
mov
addb
outsl
test
xor
and
mov
in
dec
les
or
push
gs
xchg
jne
and
adc
ss
fwait
mov
aam
mov
mov
xchg
cld
mov
arpl
add
dec
data16
jno
lea
cmpsb
lret
mov
xchg
push
xchg
in
lods
xor
jl
repnz
sbb
daa
sub
sub
mov
out
dec
push
nop
dec
lcall
xchg
mov
jp
pop
add
or
outsb
pop
imul
insl
sahf
lods
nop
pop
mov
outsb
mov
imul
xchg
insb
jge
mov
or
cli
cltd
jge
stos
sbb
xchg
mov
repz
test
mov
or
add
push
cmpsl
mov
sub
aam
xadd
scas
popf
or
pop
dec
jle
repz
mov
adcb
xchg
inc
insb
cmp
notl
ljmp
inc
stos
lcall
leave
stc
jo
cwtl
xchg
leave
sahf
mov
das
cmpsb
mov
mov
lock
stos
fs
pop
inc
shll
pop
inc
or
enter
icebp
pop
lea
mov
dec
leave
push
sbb
ss
xchg
mov
in
xor
xchg
pushf
stos
iret
syscall
in
pop
adc
xor
or
test
mov
jns
cltd
js
cmpb
int
dec
or
cmp
xchg
jnp
and
cmp
sub
addb
xor
scas
sbb
mov
dec
inc
outsl
fistl
mov
pop
jnp
pop
lea
insb
insl
test
and
mov
in
add
outsl
insb
dec
cs
inc
inc
ja
push
ret
test
mov
dec
mov
xor
fidivl
stos
adc
test
imul
push
xor
adc
fistps
sbb
les
xor
je
or
mov
jp
out
je
mov
in
push
jne
and
xchg
xor
sub
test
xchg
cwtl
mov
mov
xlat
push
jbe
stos
dec
pop
xor
jae
mov
daa
sahf
xchg
pop
add
lret
js
fdivs
add
fstl
or
test
mov
xchg
sub
push
xchg
sub
xor
sarb
insb
repz
sbb
addl
inc
xor
mov
dec
mov
int3
adc
pop
into
mov
shll
mov
push
sub
add
mov
xchg
insb
ljmp
pop
sbb
jae
jle
dec
sahf
lret
les
mov
push
jg
xor
xor
leave
fmul
sub
outsl
aaa
sub
hlt
sub
ja
lock
into
lods
push
cli
ret
mulb
aas
loopne
push
xchg
rcll
idivb
sbb
inc
xchg
mov
lret
popa
into
or
pop
cs
jge
mov
jecxz
push
jle
test
shlb
jns
xor
lods
xlat
mov
shld
cmp
pop
dec
icebp
pop
fildl
sarb
int3
lods
in
idiv
push
ret
mov
pop
xor
lret
stc
mov
scas
adc
dec
dec
xchg
jb
cmc
cltd
scas
or
pop
add
push
out
cmpsl
mov
sbb
repnz
fldt
mov
inc
push
leave
jbe
xor
adc
xlat
mov
imul
cli
xchg
insb
imul
mov
push
adc
jge
call
inc
mov
cmp
aaa
mov
jmp
xchg
mov
xchg
dec
imul
ret
inc
pop
mov
imul
cli
and
mov
add
pop
sub
jmp
push
in
xor
sti
jns
loopne
test
pop
in
ret
outsb
incb
sbb
popa
mov
arpl
das
cmpsb
sub
or
jp
xchg
test
dec
dec
mov
ret
rcrl
in
dec
and
cwtl
dec
std
jmp
sbb
pop
push
outsl
xor
mov
xchg
les
mov
and
cmp
mov
mov
cli
push
add
in
in
fcmove
mov
push
repz
dec
insl
test
into
cli
sub
jp
jle
dec
mov
divb
jg
mov
sbb
sub
sahf
pop
pop
ljmp
jle
insl
lods
scas
rcrb
mov
dec
scas
push
mov
add
ja
jns
adc
inc
dec
cmp
sub
sbb
fldl
pop
mov
or
mov
ss
xchg
lcall
jne
addl
lcall
jmp
cmp
pop
add
xor
push
mov
fcomip
ss
mov
or
jl
test
popa
inc
xchg
adc
push
xor
mov
mov
cmpsl
inc
fisubrl
sahf
hlt
push
push
push
sub
mov
jae
sub
in
sarl
or
mov
stc
fsubrl
test
lock
adc
cmc
cmp
push
dec
pusha
sub
sbb
in
sbb
adc
pop
cld
sar
sbb
pop
mov
icebp
stos
in
sahf
pusha
sti
sarb
sbb
lcall
adcb
mov
xor
bound
and
mov
mov
xchg
sbb
popf
fcoms
lahf
jle
mov
lret
mov
pop
sbb
xor
rcll
push
push
xchg
jle
enter
repnz
mov
mov
pop
ds
fnstcw
mov
and
jge
insl
adc
addl
fisttpll
mov
mov
push
mov
dec
fdiv
cld
mov
inc
mov
repnz
mov
mov
bound
mov
std
xor
bound
jge
into
movsb
out
lea
mov
add
insb
sub
orb
pop
outsb
out
jno
add
lret
movsb
mov
hlt
loope
xor
mov
data16
pop
aad
lcall
jge
ficompl
js
popa
lds
testb
and
sub
imul
xor
sbb
or
pushf
xchg
xor
xchg
sub
and
lcall
push
mov
lea
dec
xchg
cld
dec
imul
cmpl
mov
sub
nop
shlb
add
test
loopne
inc
dec
mov
xor
sahf
mull
sub
mov
xor
adc
dec
imul
fimull
jg
pop
int3
jb
loope
jae
dec
test
push
cmp
mov
jecxz
or
je
mov
outsl
fistpll
add
inc
or
loopne
repnz
pop
aam
mov
fimuls
mov
sbb
cmp
cli
imul
or
rcr
or
outsb
std
mov
repnz
push
xchg
sti
inc
xchg
jns
mov
or
in
test
xor
mov
outsb
sarb
sub
cmp
jge
sbb
cmp
movsb
dec
and
pop
addr16
jmp
lret
xchg
and
cmp
std
add
sub
push
lcall
divl
sub
mov
rcll
cmp
pop
mov
icebp
andl
test
in
inc
inc
repnz
es
cmp
outsb
push
dec
push
ret
pop
push
add
nop
xchg
fmull
punpckhdq
jge
pop
pop
mov
lret
outsl
lods
xor
pop
xchg
jo
fidivrl
push
into
outsl
mov
jne
imul
out
xchg
out
data16
mov
sbb
mov
push
cmp
movl
inc
ret
mov
fnstcw
add
xor
shrb
insb
imul
sbb
ret
push
pop
jnp
ja
das
jno
or
or
test
movsb
jecxz
push
jg
je
lock
ljmp
sti
sti
cmp
cmp
jp
arpl
mov
jp
push
or
ret
mov
stc
xchg
adc
ljmp
loope
fimull
cmpsb
mov
lret
push
dec
repnz
aad
pop
out
sbb
xor
je
dec
pop
mov
push
mov
repz
out
adc
in
repz
ret
test
mov
fidivs
dec
clc
xchg
jno
push
scas
xchg
pop
jl
scas
lret
dec
or
aaa
fsubrl
popa
jne
rcrb
daa
jo
pop
mov
sub
js
cmp
gs
inc
fcom
int
and
cltd
jbe
jmp
sahf
add
cmpsb
fdivl
insb
lcall
pop
xor
stos
jmp
pop
cmp
mov
and
fldcw
je
repnz
bound
stos
stc
js
adc
invd
pop
lret
pop
call
jnp
xor
adc
push
cmp
iret
dec
ret
stc
jecxz
insb
push
rcrl
sub
les
jne
mov
insl
sbb
sbb
sbb
gs
cs
fisubrs
dec
pop
test
inc
inc
sbb
leave
in
mov
inc
popf
cmp
push
in
test
mov
inc
call
ds
pusha
fidivs
add
sub
sbb
or
xor
add
rorb
out
jns
jo
iret
icebp
divl
ljmp
sbb
sub
gs
popa
dec
loope
lret
addl
mov
divb
notl
sub
jne
fwait
mov
mov
jecxz
mov
fisubrl
scas
add
sarb
adc
push
call
pop
jl
repz
jbe
push
bound
rolb
aas
paddusb
rcrb
inc
mov
movsb
popa
icebp
icebp
popa
stos
xchg
sub
leave
cmp
pop
jl
sbb
xor
test
sarl
movsb
pop
fdivrs
imul
dec
push
jo
addr16
sbb
hlt
xchg
sbb
std
jo
ret
mov
loopne
and
xor
push
cmc
mov
jle
repz
gs
push
or
jno
mov
push
inc
fldl
inc
mov
sub
mov
mov
xor
sbb
pop
imul
mov
cs
jnp
hlt
push
movsl
or
adc
jb
cmp
aas
cmp
aad
push
in
fistl
xchg
outsl
xchg
cmp
push
sub
shlb
jb
mov
adc
nop
mov
dec
dec
lds
mov
iret
sbb
cmp
and
fadds
mov
and
adc
dec
cmp
lret
popa
sbb
mov
xchg
hlt
xlat
test
movsb
sub
fimuls
cwtl
mov
dec
inc
add
fnsave
dec
lods
and
stc
jnp
out
fmulp
sub
js
adc
mov
mov
test
push
imul
adc
rolb
cmp
bound
les
repnz
or
adc
shll
rcrb
fnstsw
mov
push
or
insb
in
repnz
cltd
jmp
push
mov
std
call
pusha
inc
loopne
mov
dec
lret
push
add
jp
in
and
das
xchg
rolb
inc
dec
outsl
mov
cli
xchg
stos
fidivrs
push
mov
xchg
loop
sbb
popa
sbb
in
pusha
sbb
mov
stos
sbb
mov
rolb
jo
aaa
lods
cmpsb
dec
cmpsl
xchg
mov
out
out
aas
aaa
aaa
popf
jb
dec
adc
mov
and
adc
pop
push
push
loopne
push
pop
pop
push
xchg
andl
push
ret
ljmp
push
in
pop
hlt
xor
fwait
leave
jl
inc
adc
popf
out
pop
dec
dec
fidivs
inc
pop
sub
mov
test
jg
mov
xor
inc
out
inc
push
adc
sbb
xchg
fcoml
lret
ds
outsb
insb
fwait
cmc
dec
incl
pop
sub
push
out
xor
or
xor
sbb
or
data16
ljmp
ret
test
dec
or
jo
repz
adc
test
mov
adc
inc
mov
repnz
jb
lods
sub
int3
cmp
mov
negl
jo
lret
inc
add
test
and
stos
lret
imul
movsb
ja
and
das
ds
sub
mov
jmp
mov
jnp
cmp
mov
sbbb
push
mov
inc
pusha
and
lret
sbb
sub
fists
ljmp
adc
xor
push
aam
loop
int
pop
and
mov
adc
jmp
iret
xor
sub
mov
dec
daa
clc
addl
es
fidivl
adc
push
mov
stos
jl
xchg
sbb
aaa
lock
mov
dec
mov
out
lret
daa
sarl
mov
mov
fwait
cmpsb
inc
xchg
or
ja
scas
jg
lret
cmp
ja
out
xor
cwtl
mov
jge
and
xor
pop
pop
in
iret
fsubrs
out
add
or
sbb
mov
fstpt
sti
dec
xchg
cmp
push
movsl
sbb
scas
jne
push
fbld
xchg
sbb
jecxz
ljmp
adc
nop
mov
addl
int3
xor
dec
insl
leave
sub
jne
in
movsb
inc
sub
loop
sbb
sub
inc
fldt
push
fildll
popa
xor
jle
mov
cmp
push
add
or
lahf
into
movsb
cmpsl
mov
pop
out
negb
popa
xchg
adc
lcall
inc
nop
cli
xchg
sahf
repnz
xor
mov
scas
xlat
pop
fcoml
jmp
ljmp
idivl
mov
lcall
loope
inc
int3
push
out
in
push
adc
xlat
mov
stos
jle
cmpsb
or
sub
xchg
lds
scas
add
jbe
imul
int3
and
pop
dec
dec
fldcw
sbb
jb
movb
push
mov
clc
mov
rclb
icebp
cs
stos
inc
imull
popa
adc
xor
loope
jle
divl
jp
jge
out
add
pop
daa
jg
and
add
adc
nop
outsb
pop
arpl
not
lods
pop
in
fstpt
bound
inc
testb
and
outsl
rcll
mov
jne
push
xor
fcoml
in
sub
mov
stos
loope
les
add
imul
lret
jle
test
sbb
jne
add
jg
testl
sarl
sar
pushw
mov
adc
fisttpl
and
adc
inc
stc
mov
ljmp
leave
daa
xor
cltd
mov
sub
dec
loopne
dec
fsubl
jne
scas
cmpsl
pop
insb
icebp
add
push
sbb
test
sub
jnp
in
fstpl
mov
inc
inc
mov
hlt
jge
mov
roll
mov
test
dec
inc
loope
xchg
jnp
into
int
ficoms
int3
xchg
sbb
inc
sub
dec
sub
fwait
mov
dec
mov
push
ljmp
jo
data16
mov
icebp
lea
mov
cmp
xchg
pop
pop
das
push
scas
pop
out
addl
jb
push
ret
cmpsb
or
adc
jp
inc
inc
je
xor
sub
pop
repnz
fstl
cmp
dec
cmp
xchg
xor
pop
call
mov
add
mov
repz
les
add
pop
mov
cltd
scas
fs
dec
into
and
int3
cmp
jo
mov
xor
pop
test
xchg
pushf
hlt
jge
xor
loope
dec
xchg
fldln2
subb
pop
fs
adc
mov
scas
mov
adc
dec
clc
inc
sub
out
std
arpl
mov
cwtl
lea
jno
adc
cld
insl
mov
loope
setns
pusha
cld
nop
aaa
subl
adc
jp
cmp
test
inc
das
loopne
jle
mov
hlt
xchg
push
aaa
test
lock
cld
sahf
outsl
xor
loope
push
xor
xor
int
xchg
inc
dec
sub
in
je
xchg
pop
jne
call
fimuls
sbb
xchg
test
inc
lock
mov
or
lcall
lea
add
sbb
xor
cmove
sbb
dec
push
out
inc
fstpt
int
add
dec
nop
sub
push
or
maxps
cs
mov
sti
fcmove
in
fcomi
outsl
je
push
mov
xchg
add
mov
add
lret
or
leave
push
test
out
pop
fucompp
lods
out
inc
ret
test
jnp
push
popf
sbb
jb
mov
pop
mov
stos
mov
jo
fcmovnb
scas
mov
das
cmp
dec
add
inc
dec
pop
mov
clc
sub
cmp
add
push
and
sub
push
jno
cmpsl
ja
jne
push
ret
out
jge
std
cwtl
or
test
mov
and
xchg
in
sarb
std
enter
mov
stos
icebp
jae
mov
cli
cmc
jne
test
inc
jae
sbb
dec
mov
jle
adc
cmp
shlb
mov
hlt
xor
mov
xchg
push
cli
mov
sbb
scas
dec
outsl
in
inc
js
xor
xchg
mov
in
xor
testl
mov
int
push
pop
adc
fnstcw
outsl
out
or
cmp
mov
xchg
xchg
stos
sbb
lahf
push
or
es
jge
or
out
jne
and
or
scas
sahf
nop
ljmp
and
shrb
sub
cmpsb
mov
adc
out
gs
int3
mov
lods
sahf
adc
jmp
add
notl
arpl
dec
rclb
and
inc
ficomps
testl
sbb
pop
xchg
cld
lret
jecxz
inc
and
popa
inc
or
pop
aam
idivl
jno
push
cmc
scas
mov
pusha
dec
movsb
jae
sub
inc
in
ret
repnz
mov
mov
ss
or
cmp
fwait
inc
xchg
push
xchg
inc
add
push
int3
repnz
mov
and
jne
pop
popf
mov
sub
clc
aas
mov
arpl
and
scas
mov
lds
mov
call
mov
or
push
lock
mov
dec
inc
pushf
or
jae
jg
inc
sub
js
inc
and
outsl
and
push
xor
xor
test
push
pop
dec
lods
addr16
inc
shll
es
and
dec
sub
mov
pop
sub
lahf
dec
test
mov
jmp
in
bound
jmp
test
pop
sub
and
shll
push
int
pop
std
cld
in
adc
js
shll
jmp
jmp
ljmp
and
mov
loop
xchg
or
aam
pop
xchg
cmp
sbb
xchg
mov
loope
adc
dec
sub
idivl
mov
sub
xor
xor
xchg
mov
ljmp
enter
call
xchg
and
movsb
cmpsb
es
scas
clc
stos
test
lahf
daa
loop
sbb
sahf
or
lea
data16
jge
pop
cmp
pop
mov
hlt
xchg
aad
cli
mov
push
jne
adc
ret
mov
jmp
mov
cs
xor
inc
mov
xchg
add
dec
insb
jo
push
mov
das
cmp
xorl
mov
sub
fwait
pop
mov
adc
pushf
iret
mov
cmp
movsb
xchg
mov
dec
ljmp
ss
push
pop
sar
sbb
or
in
push
ret
xor
mov
and
sahf
mov
fisubs
sti
jo
mov
pop
inc
loop
cmp
sbb
push
xor
sbb
and
bnd
pushf
add
cli
cmp
fnop
fcmove
rol
or
jmp
dec
or
lcall
daa
aaa
jb
out
jge
mov
sub
pop
testb
addr16
icebp
test
sbb
in
clc
xor
jl
shr
adc
insb
lahf
aad
fisttps
xor
imul
movsb
cwtl
clc
rcrl
jo
adc
daa
test
mov
hlt
adc
mov
adc
xor
push
je
das
push
insl
popf
push
jg
aad
and
out
pop
push
adc
das
enter
nop
fs
push
cwtl
push
xchg
lcall
xchg
sub
mov
inc
fidivrs
push
sarl
pop
mov
push
xchg
mov
cmpsb
jecxz
jp
fcomp
adc
inc
cmpb
xchg
loop
iret
mov
lret
lock
hlt
movsl
clc
sbb
mov
lock
sahf
andl
jo
outsb
inc
or
int3
orl
push
jns
jb
or
sbb
int
sbb
push
lcall
inc
mov
add
adc
js
daa
scas
stos
xlat
popf
dec
mov
pop
shl
pop
out
add
mov
sbb
dec
stos
adc
jb
or
or
mov
in
ja
cwtl
test
sahf
mov
fsqrt
pushf
push
inc
pusha
popf
push
push
dec
pop
xor
mov
jmp
jl
mov
arpl
stos
add
fildl
xor
std
sbb
lods
repnz
lds
leave
out
sbb
xor
mov
in
ret
inc
cmp
out
or
addb
shl
xchg
lds
clc
jge
clc
xor
dec
div
sahf
xchg
ljmp
xor
stos
repnz
pop
cmp
and
push
sti
in
lock
mov
or
into
in
lret
jge
xor
testb
nop
aam
mov
mov
shll
inc
sti
dec
out
insb
imul
mov
fildll
sti
cmp
jb
out
sbb
add
movsl
lock
dec
movsl
and
lahf
sub
std
inc
pop
loope
sbb
add
pop
fisttps
pop
ret
inc
mov
and
xchg
rol
or
orl
aam
cmpsl
sub
in
xor
dec
pop
mov
mov
pop
jno
sbb
mov
xor
sbb
mov
dec
cli
mov
lds
add
lods
fisubl
pop
imul
mov
insl
iret
mov
cmp
xor
bnd
cltd
xchg
adc
fiadds
mov
add
in
imul
mov
add
jae
pop
add
je
imul
add
lahf
ret
cld
cwtl
mov
push
pop
adc
mov
decb
jno
jo
pop
xor
pop
int3
je
sub
sbb
and
test
mov
or
jns,pn
add
test
jle
cmp
loop
stc
repnz
test
or
movsl
ja
ret
pop
cmpsl
out
mov
decl
add
ret
fcomps
jbe
push
push
xchg
cmp
add
cli
lret
pushf
cltd
adc
cmp
in
sbb
mov
gs
mov
pop
fs
mov
iret
xor
mov
out
sub
rcrl
out
lods
mov
mov
cmp
and
sub
inc
clc
das
mov
stos
sub
jns
test
mov
lahf
insb
sbb
cmpsb
push
insb
or
mov
negb
mov
hlt
jns
xor
pop
fisttpl
xchg
cmp
cld
dec
fistpl
add
or
inc
add
stc
mov
test
sub
notb
add
push
leave
or
out
xchg
pop
scas
push
lret
scas
sbb
and
pop
in
push
stc
fidivs
aad
pop
jae
lret
xor
mov
outsb
shll
add
sbb
dec
and
cs
mov
test
dec
inc
or
sub
xor
outsb
push
mov
out
stos
dec
push
or
sub
popa
out
jl
fs
add
mov
jno
add
mov
outsl
stos
popa
jae
data16
pop
xor
sahf
pushf
scas
ret
popf
icebp
popf
and
dec
imul
push
pusha
int
scas
pop
notb
mov
mov
stc
enter
enter
aam
sub
dec
loop
xor
fwait
rcll
adc
mov
pop
mov
pop
ja
lret
jecxz
stos
test
xlat
lods
mov
aad
push
cmp
ja
addr16
cmp
lahf
sbb
push
hlt
jmp
or
jns
add
inc
and
jecxz
jmp
rcl
add
xor
mov
subb
or
jno
std
in
testb
lods
jmp
pusha
je
mov
sahf
loop
jg
outsb
dec
cmpl
outsl
xchg
inc
lret
inc
pop
mov
jns
push
js
mov
mov
mov
gs
mov
clc
cmp
jmp
sbb
in
loopne
mov
ret
fdivrs
sbb
clc
out
jne
xor
pop
jbe
or
adc
and
nop
ret
mov
sbb
and
mov
push
jbe
clc
inc
rorb
das
add
or
cmp
jle
mov
pop
lds
lods
xchg
xor
xlat
dec
and
popa
and
jae
fidivrl
adc
and
mov
addb
or
jne
je
adc
sbb
push
adc
ret
mov
fiadds
mov
inc
ljmp
add
shll
mov
aad
xchg
xlat
aad
rcrl
fisubs
cltd
add
scas
mov
jne
pop
and
lods
push
jge
rclb
cmp
cld
mov
xchg
les
xchg
xchg
jp
inc
mov
or
inc
jmp
icebp
fdivl
aad
das
sbb
xor
test
es
js
dec
cmp
test
lds
jge
jmp
lods
cmp
mov
xor
out
hlt
pop
mov
lret
xchg
pushf
scas
or
ds
outsb
ret
push
xchg
inc
or
dec
jo
call
gs
and
dec
rclb
outsl
insb
das
pop
addl
lcall
or
xchg
in
cmp
stos
fisubs
ds
and
loopne
ja
push
mov
xor
mov
movsb
xor
movsl
out
sub
adc
loope
and
ror
out
dec
jmp
outsb
xor
mov
dec
push
dec
pop
gs
sahf
cs
jle
mov
mov
mov
movsb
pop
ljmp
aaa
xor
ret
add
test
fs
cmpsb
cmp
mov
ljmp
cs
out
sbb
lcall
jg
faddp
mov
insl
pop
out
and
dec
aaa
and
xchg
std
add
mov
push
int3
dec
cmp
bound
gs
push
data16
in
shl
sarl
sbb
xor
fidivrl
inc
loop
add
ds
inc
in
js
lods
in
stc
mov
pop
xchg
ficomps
je
fisttpl
xor
stos
ror
and
mov
adc
add
or
repz
or
mov
fidivrl
pop
mov
xorl
mov
mov
js
xor
inc
dec
add
test
jns
mov
test
push
into
inc
pop
push
and
daa
jmp
mov
fisttpll
rorb
sub
lea
or
push
mov
fidivl
sbb
mov
adc
jno
cmp
mov
mov
iret
and
mov
lods
push
popl
and
inc
jo
mov
enter
lock
and
in
adc
jp
xchg
cmpsl
xchg
mov
cld
and
inc
pop
mov
inc
and
inc
into
rcll
rorl
hlt
jnp
iret
addr16
ljmp
mov
icebp
loope
sbb
out
nop
int3
or
dec
jo
gs
lahf
shrl
mov
lea
cmp
add
in
lea
adc
test
lcall
sub
fsts
cmp
pop
mov
inc
ret
cmc
pop
jb
jb
mov
insb
push
inc
outsl
or
adc
in
sbb
popa
sahf
sub
lret
aaa
mov
ds
sti
lods
rolb
repnz
inc
cmpb
enter
ret
xor
mov
loop
ror
pop
inc
bound
inc
das
js
loope
add
cmp
test
or
mov
xor
int3
adc
cmpsb
jecxz
sub
xchg
and
mov
mov
mov
inc
lea
insb
mov
xchg
les
les
push
fiadds
mov
xchg
dec
pop
and
scas
in
dec
ret
in
leave
lea
adcb
and
dec
xor
mov
push
push
loopne
insl
lea
scas
insb
mov
ljmp
sub
push
push
nop
lret
fisttpll
inc
pop
ss
cmp
fidivrs
pop
sub
and
add
cmp
fldl
arpl
pop
icebp
sbb
nop
hlt
mov
ret
sbb
imul
jmp
not
cwtl
pushf
xchg
mov
icebp
cmp
clc
test
popa
test
hlt
dec
cltd
rolb
jbe
pop
mov
out
sti
mov
push
in
iret
sbb
lods
sub
cmp
out
in
in
mov
mov
in
daa
inc
outsb
inc
aaa
dec
push
lea
cli
sub
lods
add
lods
lds
dec
pop
push
mov
adc
sub
xchg
cmp
mov
rol
add
int3
or
dec
arpl
out
test
outsl
dec
iret
faddl
cmpsb
aas
mov
inc
sub
andl
sbb
mov
insb
jae
lea
loop
mov
add
bound
mov
pop
mov
mov
push
xchg
mov
pop
pop
and
lods
outsb
insl
dec
pushf
sbb
mov
inc
add
add
add
sbb
fisubl
mov
mov
cs
adc
mov
data16
cmp
mov
xchg
xchg
sub
mov
pop
rcll
pop
cmovl
sub
cmp
pushf
adc
jno
sbb
push
xor
outsb
pushf
dec
and
mov
test
dec
subb
jp
xor
push
adc
jge
and
bound
cmp
adc
imul
pop
mov
pushf
icebp
jae
sbb
mov
mov
adc
popf
push
test
sahf
xor
call
fstpl
js
sub
push
das
lods
adc
sbb
hlt
fucomp
scas
dec
cld
lock
lds
icebp
jge
or
sbb
sbb
cmp
sbb
rcrb
test
push
sub
std
testb
mov
or
sub
pop
popa
lea
cmp
in
dec
inc
push
in
pop
sbb
popf
mov
pop
movsl
cli
xor
pop
sub
jnp
popa
jmp
bound
mov
out
dec
and
push
adc
movsl
sub
inc
fwait
pop
jecxz
sti
fsubp
fs
and
cmp
fwait
cltd
mov
lret
ljmp
addr16
xor
xor
stos
stc
mov
in
cmp
mov
adcb
lret
cmp
pusha
mov
mov
mov
jo
hlt
js
mov
mov
xor
cmp
mov
and
jge
sub
lock
pop
aas
pop
push
subl
fidivs
stc
xchg
fisttpl
and
ss
xor
dec
ljmp
push
push
pop
mov
mov
shrl
insl
cmpsb
ret
loope
insb
adc
scas
ja
mov
cwtl
rolb
clc
stc
cmp
lret
push
push
add
xchg
adc
mov
fbld
rcrl
push
inc
or
xchg
imul
xchg
mov
add
lods
push
lret
push
cmp
xchg
mov
outsl
nop
dec
test
inc
push
stc
fwait
push
xchg
pop
xlat
push
lock
dec
in
iret
adc
adc
repz
lret
out
in
add
xor
out
in
test
out
or
shrl
les
jbe
jle,pt
insl
dec
mov
fsub
adc
inc
jb
pop
shlb
out
mov
sbbb
ret
pop
inc
cltd
lret
sub
mov
test
out
push
lods
out
mov
dec
add
inc
es
mov
je
cmp
fadd
sub
dec
dec
xchg
scas
fdivrs
jbe
push
in
arpl
popf
and
test
mov
and
pop
xlat
push
and
bound
pop
cltd
out
adc
out
sti
mov
cld
cmp
sbb
pop
movsl
mov
dec
lret
iret
int
popf
push
sbb
push
add
sbb
jns
add
lret
cli
mov
test
hlt
cli
mov
mov
call
in
or
inc
cli
rcrb
pusha
std
lea
jae
andl
pop
sti
imul
sub
int3
jnp
mov
sub
sahf
lds
loope
pop
dec
pop
cmpsb
inc
lret
push
mov
push
sub
xorl
and
ret
jle
push
sub
in
pushf
ret
jl
push
xchg
insl
xchg
outsl
sbb
push
imul
idiv
daa
xchg
mov
or
shl
lret
push
rclb
test
fwait
loop
fldl
mov
xor
movsb
cmp
icebp
push
or
add
xor
fisttpl
push
jmp
jge
cmpsl
sub
arpl
sbb
sbb
in
cwtl
push
cmpsb
pushf
mov
pop
adc
rcrl
jae
daa
insl
mov
xchg
lods
xchg
xchg
push
fisubl
fistpl
test
and
cmp
dec
sbb
mov
or
rcrb
loop
gs
push
dec
arpl
aad
in
aam
sbb
or
cld
push
fs
push
sbb
adcl
hlt
movsl
int3
push
stc
cmc
mov
imul
ss
or
jo
mov
repnz
fistpll
push
jno
dec
xchg
iret
push
bound
adc
int
push
xlat
and
sahf
mov
add
mov
xor
cmp
mov
enter
movsb
sbb
test
int
sbb
mov
or
mov
sbb
and
data16
imul
sbb
dec
ja
mov
jne
cs
push
cwtl
fcomps
push
mov
mov
dec
std
daa
and
loopne
je
scas
mov
xlat
outsl
jg
hlt
scas
ljmp
pop
pop
icebp
pop
enter
in
insl
mov
fwait
incb
jnp
jg
pop
inc
xchg
loop
les
jp
jae
sbb
mov
jmp
xor
pushf
aad
cld
cwtl
repz
pop
xchg
xchg
push
cli
jns
shll
and
ficoms
xor
lret
inc
mov
movaps
mov
sbb
loope
push
push
sbb
rclb
or
fiaddl
sbb
ficoml
or
leave
jo
test
and
jl
iret
aam
shrb
and
repz
int
mov
stos
insl
mov
addr16
fs
dec
xlat
pop
fs
rcll
sahf
clc
push
mov
jge
or
in
jecxz
js
or
cld
dec
inc
pop
fs
loope
ss
mov
loope
push
testb
cmp
adc
xor
inc
sahf
or
or
adc
adc
mov
mov
pop
mov
push
movsb
inc
xor
jecxz
es
sbb
xlat
test
mov
inc
in
or
scas
push
in
fdivl
fdivs
adc
ret
cmpsl
call
mov
mov
jge
or
mov
dec
sarb
outsl
lock
jecxz
add
sbb
gs
out
pop
popa
std
je
xor
and
je
inc
lock
jae
jmp
outsl
lcall
js
xor
sbbl
cli
add
gs
ss
in
push
push
fsubrl
xor
xor
add
add
inc
cmc
stos
lret
int
dec
aaa
push
jb
imul
arpl
dec
aad
arpl
ja
dec
enter
xchg
dec
imul
push
mov
lret
cmpsl
lock
sbb
es
mov
add
dec
loopne
sub
xchg
add
jne
bound
movsb
push
push
inc
ljmp
out
mov
adc
ret
sbb
mov
fdivrp
adc
xchg
push
push
lock
dec
repz
adc
sbb
add
pushf
pusha
stc
xchg
jb
cmp
sbb
pushf
out
or
push
xor
dec
pop
stc
aad
mov
pop
fdivs
in
inc
mov
aaa
xchg
adcl
dec
jno
jo
outsb
jle
sbb
mov
jg
mov
cmp
add
cmpsl
popf
adc
dec
ja
pop
lcall
pop
pushf
lods
mov
mov
sub
jecxz
aam
sub
movsl
mov
inc
loop
pop
aad
adc
fcmovnb
insl
sbb
fwait
pop
ret
mov
xchg
data16
inc
sar
aam
sbb
push
pop
sahf
xchg
insb
mov
sbb
imul
add
daa
iret
adc
out
xor
jecxz
decl
in
fsubl
js
push
or
and
add
loopne
push
pop
nop
mov
jmp
xchg
xchg
and
lods
lahf
fldenv
stos
dec
cld
ret
mov
inc
cmp
cmpsl
imul
or
jne
add
or
insl
fs
mov
orl
int3
test
xor
popf
dec
addr16
jp
add
insb
testb
sub
int3
pop
mov
xor
mov
subb
icebp
repz
call
ja
cmpl
adc
sbb
dec
repz
jo
shl
loop
js
sbb
mov
xchg
jp
in
clc
sbb
ficompl
cmp
sub
stos
pop
fidivrs
and
arpl
dec
inc
mov
cmpl
push
lock
mov
jne
jg
enter
jb
call
sub
negl
insl
mov
aad
add
and
incl
pcmpgtw
xor
add
scas
test
push
pop
and
xchg
mov
in
test
jbe
sbb
scas
mov
movb
dec
mov
mov
xor
cld
aaa
xor
jg
ljmp
mov
sub
sbb
pop
clc
arpl
aaa
test
jg
inc
xchg
stc
jl
lods
loope
rorb
in
cmp
out
test
addr16
arpl
adc
or
add
ss
push
ja
ret
xchg
adc
pop
movsb
lret
mov
jl
je
mov
xchg
dec
pop
jge
mov
in
mov
push
fisttps
or
aam
das
jae
jne
xor
pop
ds
int3
and
pop
or
add
pop
dec
push
pop
mov
xor
ss
dec
inc
xor
les
dec
js
out
and
iret
jl
or
add
mov
mov
jo
push
lahf
int3
cwtl
xchg
mov
js
mov
mov
mov
xor
hlt
outsb
hlt
lret
insl
push
movsb
dec
sub
xlat
std
dec
mov
cmp
loopne
jbe
stos
repz
lods
orl
push
lahf
add
push
fcoms
aad
addr16
fists
inc
cmpb
in
lret
and
jne
ficompl
dec
mov
pop
lcall
adc
es
xchg
dec
add
sub
test
push
push
stos
aaa
mov
sbb
rcl
lret
leave
fwait
int3
inc
imulb
push
xor
enter
and
push
adc
xchg
int3
xchg
arpl
push
test
sbb
mov
pop
mov
mov
xor
sub
pop
jg
sub
jmp
inc
xor
mov
add
xor
dec
pop
sbb
ret
or
push
int3
xchg
fisubs
popa
jb
data16
xchg
movsl
push
cmp
pop
aas
imul
fwait
iret
mov
sbb
or
mov
shlb
jmp
ljmp
xchg
int
test
addr16
imul
push
and
inc
pop
mov
xor
push
jg
sub
shrl
dec
fs
sub
add
inc
xor
jne
mov
jno
or
dec
push
bt
cmpsb
mov
icebp
sbb
lret
pop
notb
mov
clc
xchg
dec
lcall
cltd
pop
shlb
es
mov
pop
cmp
shrb
pop
shlb
xor
cmp
dec
pop
mov
sub
mov
cmp
test
jg
std
mov
inc
es
add
mov
jge
repz
xorb
push
ret
mov
int
dec
push
lock
scas
xchg
or
test
mov
sub
jbe
add
pop
call
cmp
dec
js
mov
fwait
adc
cld
ret
mov
js
loop
call
dec
shr
hlt
jno
enter
sub
inc
shlb
repnz
add
ljmp
xor
xor
popa
cmp
int3
mov
xchg
jnp
sub
fbld
js
cld
sbb
icebp
insl
sub
sub
jp
fdivp
outsb
mov
dec
daa
inc
pop
stc
std
pop
mov
scas
jne
pop
std
stos
or
in
pop
xor
dec
pop
push
cmp
mov
cwtl
jo
mov
les
imulb
in
js
mov
popa
mov
test
mov
push
xchg
in
dec
xor
cwtl
inc
cld
test
clc
pop
scas
in
fmuls
dec
sub
stc
push
pusha
ja
xchg
mov
push
in
in
inc
and
inc
mov
push
dec
out
pop
or
sbb
add
pop
adc
xchg
xor
mov
pop
inc
push
adc
mov
rolb
xchg
sbb
xor
repz
mov
ret
adc
or
sub
sbb
jae
adc
lret
mov
dec
and
and
popa
mov
push
fmull
xor
cwtl
loop
scas
sub
sub
fbld
scas
insl
pop
test
cltd
xchg
mov
pcmpgtb
insl
inc
test
inc
out
jp
subl
out
or
xchg
push
bound
jns
ss
inc
mov
lret
adc
push
js
push
hlt
pop
fnstenv
mov
mov
push
and
jae
pop
aam
lock
push
adc
ret
mov
cmp
loop
sbb
and
js
dec
mov
test
pop
sub
pop
data16
and
in
ljmp
jne
cmpsb
lea
mov
loop
xlat
adc
xchg
leave
sbb
jle
jg
mov
fwait
sti
lea
cs
loope
or
leave
fucomip
insl
jb
cmpsb
dec
add
jmp
add
int
add
les
repz
sub
imul
cmpsl
push
inc
jae
pop
push
sbb
and
lods
repnz
mov
sub
mov
mov
inc
leave
not
add
push
div
scas
mov
or
pushf
jnp
scas
imul
cli
pop
decb
sbb
jle
mov
inc
addr16
xchg
cmp
sarb
inc
mov
jo
pushf
mov
in
pusha
out
daa
mov
inc
into
dec
pop
mov
xchg
js
lcall
xchg
mov
iret
jp
pop
int3
xchg
push
or
fadds
daa
or
lcall
sub
push
dec
je
test
push
shrl
and
push
decl
fisubrs
aad
scas
inc
call
insl
add
cmp
sub
lret
jp
pop
pop
clc
or
add
mov
xchg
hlt
ljmp
xchg
jno
xchg
add
xchg
adc
sahf
stc
push
dec
xchg
cmp
unpckhps
scas
enter
adc
lods
test
mov
mov
inc
push
insl
and
rcr
inc
mov
or
adc
addl
add
fwait
xchg
out
movsl
push
js
xor
and
stc
sahf
xchg
xlat
shlb
in
and
ds
push
sahf
mov
mov
ljmp
out
dec
sbb
inc
mov
or
sbb
cmpsl
sarl
dec
mov
jo
popfw
mov
lods
or
stos
xor
mov
lret
push
mov
stos
inc
cmc
xor
adc
rcrl
pop
push
loopne
dec
cwtl
sti
jne
inc
enter
mov
sub
das
icebp
mov
fmulp
pop
sub
pop
mov
dec
jmp
or
mov
cmpsl
cmp
cmc
inc
xchg
mov
popa
inc
ss
push
and
mov
push
pop
adc
loope
clc
fistl
cmpsb
sbb
mov
jg
aas
xor
jl
mov
jno
daa
jne
push
or
push
inc
mov
adc
or
pop
pop
dec
cmpsb
xor
fwait
aad
mov
inc
pop
fst
push
xchg
fucomi
fldl
xchg
sti
imul
adc
mov
aam
push
xor
fwait
cs
cmp
push
out
inc
mov
stos
adc
popf
fcoms
add
orb
add
xor
outsl
add
hlt
push
cltd
xor
popf
jmp
cmc
pop
sbb
iret
mov
sti
sbb
pusha
pop
sub
mov
mov
jecxz
cmp
push
jg
outsb
imul
push
cmp
push
mov
scas
sub
arpl
push
pop
mov
repz
fimuls
lret
cwtl
add
sbb
sub
pop
fdivr
mov
and
sbb
lret
cld
mov
dec
andb
setle
push
push
insl
test
xor
cmp
dec
mov
sub
sub
xor
dec
add
push
mov
call
mov
ja
daa
es
popf
loopne
cmp
xchg
add
enter
cmp
cmp
das
mov
add
test
stos
fildll
outsl
dec
sbb
les
mov
shll
jnp
cltd
push
push
testl
aad
in
mov
inc
and
in
adc
rorl
cmp
xor
fprem
stos
push
jecxz
push
scas
jge
push
push
inc
jp
and
shll
pop
movsl
bound
ja
rcrb
ss
sti
scas
xchg
push
add
pop
pop
fwait
test
int3
pop
jno
pop
dec
and
jl
mov
adc
popf
pop
mov
pshufw
xor
std
sub
pop
dec
data16
push
lret
xor
movsb
dec
mov
nop
mov
or
pop
dec
imul
popa
add
mov
sub
pop
jg
pop
nop
lods
or
and
push
push
rcr
jp
andps
lcall
xchg
test
and
daa
sahf
cmpsb
lahf
sub
les
pop
xlat
std
gs
sbb
out
sub
xchg
movb
pop
outsl
loopne
dec
popa
mov
xor
pop
xor
or
incl
cmp
or
mov
aaa
mov
jle
ja
mov
loope
pop
movsl
dec
int
inc
mulb
movsl
test
pop
daa
jnp
incb
or
fs
push
dec
xor
mov
add
or
fisubl
lock
adc
cwtl
push
cmp
inc
es
cmp
int3
pop
leave
jb
push
pop
call
or
rolb
adc
xchg
jno
aam
pop
pop
enter
mov
sub
in
clc
cmpsb
repnz
stos
inc
idiv
inc
push
sbb
sbb
mov
xchg
or
mov
xchg
lock
dec
xchg
cltd
cmpsl
xchg
xrelease
lahf
jbe
mov
inc
inc
sub
cli
shl
inc
js
cltd
lret
outsl
push
pop
clc
fwait
orb
and
add
xchg
stos
repnz
mov
xor
mov
mov
lahf
sbb
sub
sarl
jecxz
sbb
aaa
push
inc
bound
psrad
mov
out
call
jae
popf
hlt
dec
int3
push
and
fdivl
mov
and
mov
pop
cld
rorb
movsb
lcall
scas
dec
outsb
xor
negb
mov
mov
or
cwtl
cmp
jg
and
mov
inc
sbb
jle
dec
xchg
iret
sub
test
inc
pop
jnp,pt
fdivs
movsb
sbb
add
mov
mov
loope
or
mov
sub
add
aam
mov
fidivrs
aas
jge
mov
repz
cmp
aad
insl
movsl
outsb
cmpsl
lahf
push
mov
js
jp
mov
mov
mov
fsubp
sub
sub
cmp
pop
cmp
sub
xchg
popf
cmp
out
sub
movsl
dec
icebp
mov
push
ficoml
std
inc
and
pusha
xor
sbb
lret
mov
or
cld
repz
ret
aaa
daa
das
leave
jmp
and
pop
cmp
in
repnz
mulb
scas
xor
xor
cmpsl
gs
iret
pop
xchg
pop
icebp
cmp
adc
jmp
xchg
dec
cmpsl
xor
jb
push
xchg
sub
rcrb
call
and
mov
packuswb
cmpl
sub
loopnew
les
add
popa
mov
xor
lret
dec
push
shlb
inc
pop
or
fldenv
loop
adc
pop
inc
insl
push
fcoms
idivl
xor
call
sbb
xchg
xlat
sahf
sub
sar
push
js
xchg
push
lea
xor
rcll
jb
mov
xor
fs
lods
mov
dec
mov
push
xor
jl
pop
cmpsb
add
inc
in
mov
popf
pop
rorl
pusha
or
mov
or
ja
dec
movb
xchg
in
out
and
pusha
fwait
std
inc
or
or
dec
ja
jnp
ljmp
fbstp
xchg
mov
fucomp
sbb
enter
or
xchg
inc
popa
xor
and
jl
cmp
mov
jecxz
cmp
test
aam
sub
mov
sbb
mov
popw
mov
adc
cmpsl
scas
stos
in
lcall
repz
lea
pop
xor
jecxz
es
test
in
popa
sbb
add
ja
in
pop
xor
mov
mov
out
cmpsb
mov
hlt
in
outsb
sbb
fwait
subb
jp
add
sbb
add
pop
out
sub
cmpsl
lahf
mov
xchg
rcrl
pop
fldl
mov
pop
add
sti
add
push
xor
push
pop
iret
xchg
mov
int3
add
in
inc
xor
popa
jle
dec
sub
and
push
dec
pop
and
out
pop
hlt
outsl
sub
ds
inc
inc
test
sub
cmc
xor
sbb
sub
test
jmp
es
cmpsb
jp
xchg
mov
out
cld
sub
push
adc
aas
je
mov
push
xorb
cmpsl
into
cmp
jmp
and
aas
xchg
xorb
repz
jae
push
bound
int3
add
jl
mov
fstl
sbb
jl
leave
cmp
dec
enter
test
inc
mov
jne
or
stos
push
adcb
imul
outsb
aam
loop
sbb
mov
cli
mov
adc
push
ret
jnp
mov
dec
xor
loop
aas
fstpl
mull
push
mov
jg
rorl
push
push
jp
aad
push
mov
test
fnstenv
or
jecxz
pusha
in
adc
lret
xchg
jg
xchg
xchg
out
inc
xchg
test
loopne
sbb
mov
sub
add
xchg
enter
adc
mov
fsubrp
fisubrs
mov
ret
adc
xchg
jecxz
push
into
or
or
push
pop
aam
push
jno
push
imul
adc
and
lcall
mov
repnz
mov
repz
aas
dec
inc
push
sbb
lock
pop
push
nop
push
and
xor
lods
push
ljmp
push
sti
mov
jg
dec
adc
mov
icebp
and
mov
adc
leave
mov
inc
and
das
mov
inc
ret
in
fdivrl
jne
and
add
push
and
std
cmp
jg
mov
dec
gs
in
or
mov
push
and
and
dec
outsl
data16
cltd
jns
addr16
ret
les
jae
xchg
cli
lods
lds
fidivrl
sub
mov
mov
dec
inc
gs
and
cs
pop
add
fwait
pop
dec
push
mov
add
insb
aas
sub
cwtl
sub
addr16
sub
mov
mov
or
fcoms
lods
sub
mov
aad
dec
mov
dec
sub
add
sbb
adc
adcb
in
inc
pop
insb
fwait
dec
pop
add
mov
fdivs
mov
xchg
imul
jae
dec
sbb
dec
mov
mov
push
cs
cmp
scas
xchg
cmp
lds
xchg
lea
pop
add
sub
rcrb
or
popa
add
cmpsl
leave
add
dec
cwtl
pop
cli
mov
sbb
outsb
shll
enter
loope
mov
shrl
fisttps
cmp
xchg
stos
sbb
push
cld
xchg
imul
loop
and
sbb
jp
jo
adc
inc
subl
xor
mov
dec
mov
js
outsb
shlw
sbb
and
mov
and
add
jp
sahf
inc
addl
mov
adc
ljmp
repz
dec
xchg
ret
popa
pusha
inc
cmp
mov
jno
rol
es
or
mov
and
mov
lods
lock
shr
adc
push
in
enter
push
paddsb
idiv
jnp
jge
loop
push
pop
imul
fnstenv
fwait
rclb
lret
sub
or
and
dec
stos
or
loopne
jecxz
adc
leave
and
mov
scas
imul
jnp
jl
in
in
cmpsl
sbb
mov
jbe
cmpsb
inc
push
push
push
jg
ret
loopne
sub
fcmovb
stos
mov
aam
mov
inc
ljmp
cmp
pop
inc
lods
inc
iret
test
dec
and
xchg
sbb
xchg
vmovdqa
scas
push
or
pop
ret
pop
nop
fildll
je
adc
jae
inc
je
dec
xor
pop
out
pushf
inc
add
inc
sub
fidivs
add
xchg
test
sub
or
push
ficomps
push
dec
das
loop
lea
out
ret
add
and
add
lcall
pop
mov
cmc
add
mov
divb
inc
add
push
xchg
dec
ret
pushf
mov
dec
lods
repnz
adc
adc
test
mov
pushf
lahf
sub
pop
inc
inc
sbb
out
icebp
bound
fcoms
add
cld
notb
cmp
push
xorb
sub
xor
mov
jge,pn
mov
push
outsb
loopne
lahf
out
into
adc
insl
fdivl
or
roll
inc
dec
jbe
nop
test
sbb
push
jne
sub
mov
ret
or
and
push
loop
das
mov
add
cmp
mov
and
sbb
xlat
and
test
sahf
add
scas
shlb
das
mov
or
daa
cmp
test
ljmp
hlt
or
mov
pop
aad
inc
xchg
dec
and
pop
jecxz
jg
mov
push
pop
out
call
scas
sub
push
sbb
pop
cli
jne
repz
sbb
cmp
outsb
or
aaa
ss
int3
insw
aas
cmc
loop
inc
ss
jp
jp
jmp
add
inc
imul
or
std
mov
movsl
cli
adcb
cli
sub
sbb
stos
test
mov
idivb
xchg
push
mov
push
aam
sbb
popa
xor
mov
fwait
fs
jge
int3
push
mov
push
or
arpl
push
in
jbe
inc
fs
shll
dec
bound
add
test
fsubl
push
mov
imul
iret
mov
jge
or
orb
xor
sbb
push
or
je
xor
sahf
mov
pop
push
mov
adc
stos
cmp
mov
mov
je
fld
dec
fs
mull
inc
repnz
pop
mov
sbb
or
movsb
cwtl
push
sbb
and
stc
movsl
adc
jle
xor
push
sahf
bound
mov
lock
cs
movsb
ret
and
xchg
dec
push
insb
mov
call
mov
or
and
fisubs
cmp
mov
out
rclb
adcb
daa
into
mov
cmpsl
sbb
lock
mov
pop
leave
mov
out
xchg
push
inc
lret
pushl
dec
dec
repnz
cwtl
shrl
stc
pop
inc
push
add
in
popa
cmp
sub
lock
dec
dec
mov
pop
adc
cmc
ret
pop
test
mov
mov
inc
fstps
xor
cmp
or
pop
sub
stos
adc
rorl
jmp
js
dec
xor
das
outsb
add
cld
push
dec
sbb
cli
fucomi
xor
lods
pop
push
shll
in
or
lods
jl
push
pop
mov
hlt
mov
inc
cmp
mov
cmovs
dec
call
xchg
mov
iret
pop
insl
fs
je
xchg
test
repnz
xor
mov
jecxz
ja
pushf
ja
not
adc
insl
pop
sbb
jb
fiaddl
pop
mov
mov
scas
sti
or
jns
cmp
mov
fnop
aas
fcomps
fnstsw
jl
xchg
jg
push
and
jg
pushl
pop
jle
mov
js
jecxz
pop
pushf
add
adcb
add
add
test
adc
sbb
add
outsb
sbb
arpl
lods
mov
and
int
cmpsl
scas
jg
orl
jnp
fcmovnu
test
sbb
dec
sbb
repz
pop
push
push
add
ret
pop
inc
movsb
cltd
mov
mov
mov
cmp
inc
into
xchg
xchg
jo
test
sub
repnz
xchg
add
xchg
add
push
jne
inc
push
dec
repz
adc
test
jp
sbb
sbb
mov
sub
es
std
jp
add
push
or
xchg
sbb
int3
cmp
and
cmpsl
shlb
ss
movsl
adc
push
fcompl
loop
les
loopne
sbb
out
pop
xor
xor
adc
cmpsb
lret
adc
push
cmp
jp
shll
mov
and
stos
addr16
cmpsb
pop
or
cmpsl
push
lret
hlt
pusha
sub
pop
lods
addb
or
cmp
xor
push
xchg
fistl
insl
and
fcomps
sub
pop
sbb
sub
mov
fidivrl
adc
cmpsl
mov
push
aam
sbb
xor
fnsave
mov
rorl
in
mov
ljmp
sub
lods
loope
fsubrs
pop
push
inc
mov
fidivl
cmp
lret
add
fs
ja
xor
shrl
fdiv
fimull
mov
mov
xchg
sub
cmc
test
sbb
or
outsb
inc
loopne
in
mov
inc
mov
jmp
pop
hlt
sub
mov
sbb
enter
xchg
jo
and
fs
jecxz
sbb
ror
jo
pop
inc
cmp
movsb
imul
scas
je
mov
xchg
sahf
fisttps
cmpsb
cmp
or
dec
jp
and
lds
imul
push
ds
aas
sub
leave
shlb
mov
dec
inc
mov
cmpsl
push
sahf
out
out
push
mov
jne
ss
stos
xor
fcom
push
inc
pop
fld
mov
hlt
cmp
lret
psrld
jl
push
nop
or
sbb
lock
sahf
loop
scas
in
mov
movsb
adc
popa
sub
and
jbe
es
and
mov
add
popf
fadd
inc
jns
loopne
lock
or
cmpsb
scas
xchg
push
divb
daa
shrl
shrl
cmp
lock
xchg
rcr
adc
fisttps
ja
jo
xchg
fwait
jnp
mov
mov
jnp
daa
mov
mov
mov
popf
or
ljmp
lods
scas
xchg
das
push
cs
xchg
fimull
fs
mov
outsl
mov
xor
negb
and
adc
or
lahf
rclb
xlat
and
cmp
mov
mov
xor
jle
lret
push
mov
push
mov
xchg
decl
in
mov
aas
mov
fcoms
dec
stos
dec
add
sub
shlb
mov
fsub
and
xchg
add
mov
inc
sbb
into
arpl
add
sti
mov
aam
xor
data16
jb
outsb
cmc
sub
in
leave
mov
ljmp
cmp
sub
imul
scas
add
add
ja
and
mov
pop
sub
mov
jmp
xchg
lret
les
pop
xchg
js
outsb
or
dec
lea
imull
lret
xorl
push
sahf
leave
adc
jne
inc
outsl
add
sti
xchg
sbb
jl
dec
aas
push
int3
mov
mov
or
sub
or
jmp
xchg
add
fldl
adc
push
push
mov
loop
movsl
or
rclb
fldcw
insl
out
fdivr
sbb
iret
lds
adc
pop
jg
call
shl
dec
jb
jns
and
fidivrl
inc
dec
pop
movsb
xchg
mov
or
jbe
nop
jbe
jo
dec
mov
pop
je
sub
fistps
add
jmp
xchg
add
push
pop
sahf
pushf
add
pop
ss
cmp
jmp
imul
jb
ret
aaa
ljmp
xor
push
icebp
and
cmc
sub
sbb
insb
add
pop
jp
shlb
mov
inc
popf
es
dec
cmpsb
jns
jl
sub
mov
push
and
push
cmc
xchg
lret
in
dec
add
sbb
addr16
cs
jb
jae
cmp
in
rcrl
sub
pop
adc
gs
pushf
test
popf
jecxz
lods
into
out
loop
cmc
adc
test
fs
cmc
fstpl
pop
jae
jmp
mov
lcall
int3
gs
push
mov
push
nop
mov
or
mov
pop
shlb
xchg
shrl
sahf
inc
jecxz
popa
loope
xor
clc
inc
xor
out
mov
data16
test
lods
scas
aaa
adc
popa
push
fsubr
and
push
int3
sub
xchg
push
mov
sarl
and
in
call
or
add
pushf
jmp
aad
jne
pushl
rorb
mov
sub
jl
rcrl
inc
dec
out
xchg
mov
mov
out
ljmp
lret
js
lahf
push
jno
xchg
inc
pop
dec
lds
fcmovne
jge
insb
ljmp
inc
or
inc
cld
aaa
lods
mov
icebp
repnz
mov
sub
cmp
sbb
js
int3
daa
loopne
in
mov
int
jp
xchg
outsb
out
out
push
ret
add
addb
pop
mov
adc
xor
imul
out
les
jp
in
mov
and
rol
adc
cmp
subl
mov
xchg
pop
jecxz
jl
fdivs
hlt
movl
lods
mov
pop
xchg
subl
push
inc
jae
mov
stos
jecxz
or
mov
jbe
xor
and
ret
jb
cltd
xor
rorl
xchg
mov
sub
mov
ja
push
add
je,pn
das
lret
addr16
push
out
add
andb
out
push
jmp
xor
and
cli
sbb
and
loop
aas
add
sti
mov
ja
mov
pop
pop
dec
in
arpl
pushf
popa
int3
movsl
imul
sbb
fs
jnp
inc
push
inc
inc
adc
or
sub
movsb
cmpsl
aam
sub
gs
mov
xor
ljmp
test
and
jne
mov
push
clc
jbe
cltd
or
out
pop
dec
mov
popf
dec
out
aas
sbb
incb
cld
dec
aam
and
clc
xchg
mov
pop
and
or
gs
rclb
and
inc
cmp
xor
ljmp
lret
mov
into
mov
mov
aaa
insb
popf
push
cmp
jns
std
push
icebp
and
adc
xchg
gs
jmp
mov
cmpsl
inc
cli
mov
ret
out
pop
aaa
test
in
adc
mov
inc
mov
sbb
popf
mov
iret
imulb
and
stos
mov
aam
add
ret
dec
xor
pop
sbb
ds
xchg
sub
loop
mov
jle
std
loope
xor
aam
jecxz
sbbl
and
mov
xor
push
xor
popf
adc
or
pop
sbb
xchg
fsubrs
xor
jmp
push
divb
shlb
sub
out
aam
mov
lea
push
addr16
imul
mov
jecxz
or
adc
mov
push
mov
or
sbb
adc
repz
jno
push
cmpsl
mov
rol
mov
int3
inc
mov
add
pushf
sbb
sub
fwait
mov
clc
loop
cmc
rcll
inc
pop
pop
jle
aam
xor
sbb
test
xchg
test
mov
lea
orb
pop
xchg
jle
and
xor
jo
jo
dec
fs
and
ficomps
shrl
out
test
sub
shr
mov
sub
jae
dec
xlat
pop
jle
and
fisttpll
mov
pusha
imul
mov
mov
add
lea
mov
into
sbbb
or
sub
cmpsb
or
sbb
jmp
shrl
mov
iret
jecxz
jge
pop
dec
pop
loopne
outsb
repnz
push
mov
sub
sbb
pusha
xchg
jl
dec
loope
ja
jns
xchg
xor
mov
xchg
push
pusha
mov
jmp
lds
adc
inc
fsubrs
fisubs
dec
outsl
sub
jle
or
or
mov
and
icebp
cmp
pop
lahf
not
jle
jns
pop
dec
fwait
xor
push
sbb
out
push
add
out
adc
hlt
mov
out
sbb
or
xchg
pop
imul
xchg
fisubrs
in
fiaddl
div
sbb
mov
out
jp
sbb
testl
cmp
cmp
jle
dec
jle
and
rol
lcall
clts
frstor
or
rol
jbe
dec
pusha
jo
add
aaa
mov
jge
bound
icebp
xchg
sub
cmpl
inc
mov
xchg
call
mov
or
jns
jmp
push
fisttpll
bound
fs
mov
loope
mov
sbb
or
xchg
les
data16
data16
inc
pop
xchg
xchg
cwtl
jnp
jae
jg
sub
jae
cltd
sub
fmul
pop
add
stos
mov
xchg
xchg
aam
enter
outsb
loop
bound
sub
push
aaa
and
mov
mov
int
mov
or
test
jl
jnp
divb
xor
movsb
lea
xor
mov
add
push
inc
and
hlt
push
fstl
cmp
cmp
mov
sbb
cmp
sub
mov
or
pop
sbb
mov
add
mov
lret
push
arpl
mov
adc
xchg
test
xchg
sbb
jp
stos
call
and
jbe
lods
add
pop
inc
pop
xor
sbb
in
jne
test
into
addr16
fsubrl
sub
stc
xlat
fdivrl
andl
mov
add
sbb
jnp
dec
sbb
dec
in
and
cmp
lea
and
cmp
lret
loop
push
xchg
adc
ljmp
data16
movsl
cmp
add
mov
mov
cmp
pop
cltd
mov
xor
daa
into
push
jne
rcrl
mov
xchg
loopne
fadds
roll
das
ja
hlt
shr
fistl
stos
test
sub
xchg
inc
fs
in
int3
cmp
sub
xlat
sub
lea
and
add
je
sbb
sub
shl
int
push
popf
jge
xchg
addr16
or
aad
xchg
faddp
cmp
stc
and
ficoml
or
lods
jp
ret
adc
mov
mov
or
mov
inc
outsb
or
add
sub
outsl
mov
sub
xor
negb
int
sbb
mov
jno
and
add
xor
sub
cmp
leave
fists
dec
sub
scas
dec
xchg
es
inc
xor
aas
dec
xor
jecxz
sbb
lds
or
and
mulb
fiadds
adc
or
cli
push
jecxz
inc
mov
lret
xchg
push
jge
mov
lret
loope
ret
out
mov
mov
inc
xchg
mov
xchg
inc
push
jne
dec
inc
lods
sub
xlat
pop
test
daa
adc
stos
pop
jae
hlt
cmp
mov
fadds
ja
mov
fnstcw
sbb
daa
movsl
push
pop
aaa
mov
rorb
imul
lcall
pop
jbe
push
insb
fadds
in
pusha
sbb
movsl
jbe
test
push
add
adc
pusha
add
adc
inc
rcrb
jnp
movsb
or
xchg
lcall
and
jp
push
xchg
popa
or
scas
or
mov
call
insb
fucomp
xchg
outsl
inc
dec
lret
jbe
insl
ret
dec
add
lahf
in
into
add
out
lods
mull
mov
jbe,pt
fbstp
das
xchg
popf
mov
xorl
test
dec
or
aad
sbb
push
outsb
mov
ficoml
das
and
sub
leave
push
insl
add
mov
add
jp
cld
pop
push
pop
mov
adcl
shrb
lea
loopne
jb
mov
call
push
push
test
stmxcsr
pushf
sub
cs
inc
sbb
mov
pop
pusha
sub
push
or
cmp
iret
add
mov
push
loope
das
shl
fs
cld
dec
das
fsubrl
dec
pop
movsl
cmp
inc
dec
adc
sub
mov
push
inc
scas
and
arpl
repnz
push
outsl
sbb
sahf
ljmp
fidivrl
or
dec
dec
repz
popf
inc
rclb
sar
movsb
fs
das
inc
mov
pop
xorl
aaa
sbb
cmp
push
stos
pop
test
cmp
cmpl
jbe
or
sbb
cmp
mov
mov
aas
sub
lahf
cmp
icebp
mov
in
push
das
push
icebp
push
mov
mov
inc
push
mov
movsl
cmp
lods
int
xchg
mov
push
add
movsl
cmp
hlt
cmpsb
testl
out
adcb
daa
cmp
popa
out
daa
fsubl
lds
lret
mov
cld
mov
mov
dec
pop
mov
test
in
faddl
cltd
mov
inc
loopne
and
xor
scas
pop
inc
aam
scas
add
cs
mov
inc
popa
lods
imul
fsubrl
cli
mov
lock
dec
dec
mov
jmp
clc
cmp
or
test
sub
movsl
sub
adc
lret
pop
mov
addb
out
lods
inc
imul
and
jmp
insb
std
mov
sbb
xchg
xor
repnz
and
scas
dec
pushf
dec
add
sub
mov
ds
fxch
push
xchg
pushf
jb
pop
rcr
dec
jle
push
pop
loop
xor
cmp
bound
loop
xor
imul
xor
cs
jecxz
adc
pop
mov
shr
xor
xchg
xor
dec
push
das
pushf
cmc
jmp
sbb
cld
inc
popf
sti
aad
jne
shll
mov
gs
std
fsubrs
xchg
mov
mov
push
ljmp
jle
repz
clc
adcl
pop
setae
mov
test
repz
into
arpl
in
cmc
std
leave
push
sbb
mov
sub
ret
mov
push
lds
push
test
jle
push
shll
cmpsb
push
shr
out
mov
movsb
pop
cmpsl
lea
je
sbb
mov
aam
cmp
add
sub
adc
leave
mov
daa
jecxz
lea
mov
movsl
dec
inc
pop
es
jmp
jo
lods
bound
mov
mov
cmp
mov
and
lret
jnp
mov
sub
cmpb
bswap
or
enter
mov
lds
pop
shl
mov
rcl
jne
cmp
es
jge
lret
sahf
sub
testl
mov
clc
jecxz
fwait
mov
bound
mov
gs
shl
jge
js
or
mov
int
outsb
push
rolb
rorb
call
push
mov
in
shl
xor
inc
add
int3
insb
scas
push
push
mov
dec
mov
inc
push
and
repnz
jnp
pop
fsubs
adc
inc
inc
insb
mov
jle
pop
xor
les
push
fisttpl
int3
add
daa
addl
outsl
mov
inc
stos
out
inc
mov
es
xor
sub
mov
pop
pop
nop
imul
jno
call
lret
rcrl
aaa
mov
call
into
or
xor
cmpsw
push
xor
jbe
jge
jae
jg
xchg
orb
jb
or
clc
sbb
push
adc
pop
push
push
inc
add
and
jle
fistpll
out
mov
xlat
gs
adc
ret
mov
push
mov
int
jmp
mov
xor
aad
roll
sbb
mov
repnz
cld
cmp
call
int3
push
jae
iret
insl
add
fwait
cmp
jne
sbb
pop
gs
jmp
pushf
xchg
cld
sub
jb
aaa
jmp
jecxz
xor
adc
jp
test
test
inc
rcrb
add
mov
jge
sub
ss
push
push
jmp
cmc
dec
mov
call
call
push
loope
push
xorl
xor
push
nop
pushf
jl
inc
aaa
lock
call
dec
add
mov
fiadds
data16
adc
mov
aas
test
ja
iret
data16
aad
mov
xor
mov
roll
mov
xchg
xlat
in
sbb
and
imul
popa
and
dec
add
or
mov
shr
sbb
aam
pushl
cmc
and
mov
jg
pop
push
dec
ljmp
adc
jge
stc
push
out
xchg
push
scas
jo
push
push
out
outsl
nop
mov
leave
dec
mov
xchg
nop
std
mov
or
ja
in
mov
or
imul
sahf
xchg
jb
aas
mov
ljmp
and
cmpsl
mov
sub
inc
dec
pop
mov
xchg
mov
jnp,pt
aaa
adc
push
shll
mov
loop
add
adc
jne
mov
test
jnp
xchg
xor
aas
or
xchg
sub
shrb
daa
and
jns
bts
sbb
jbe
push
dec
addr16
std
lods
ret
fldenv
push
js
lahf
je
inc
hlt
ja
mov
stos
mov
mov
outsl
push
in
jno
negb
cmp
ljmp
pop
push
mov
xchg
mov
test
adc
push
jl
push
cmp
ret
mov
loopne
ficompl
add
inc
mov
sbb
rclb
movsl
push
lods
movb
add
xchg
pop
push
push
enter
adc
push
cmpsb
xchg
push
test
sti
fisubrl
sbb
loopne
imul
icebp
inc
ljmp
pusha
scas
enter
add
shll
enter
lahf
inc
push
add
int3
sub
fxtract
add
icebp
stc
sub
cmp
sub
mov
mov
mov
shlb
jecxz
xchg
out
xor
sub
sub
xor
rcr
jae
stos
dec
lret
out
loopne
das
push
js,pn
pop
or
mov
lock
mov
mov
inc
mov
and
ljmp
out
mov
mov
int3
inc
movsl
daa
sbb
fwait
iret
test
jnp
sahf
insb
jle
jle
loopne
pop
lods
mov
rcll
cmp
imul
and
in
push
loop
sub
push
iret
dec
push
push
xorl
xchg
mov
filds
jle
or
notb
adc
lods
daa
cmp
shlb
mov
test
pop
xchg
movsl
rcrl
cmpsb
push
sbb
mov
xchg
les
xor
pop
sbb
xor
mov
jae
jae
test
pop
movsl
mov
andl
push
dec
mov
dec
dec
mov
mov
lret
adc
leave
dec
scas
add
frstor
lds
and
cmpb
lds
pop
inc
in
and
cmp
pop
mov
dec
xchg
mov
mov
sti
pop
jge
aas
lret
aam
bound
xor
xchg
dec
push
push
pop
or
sbb
add
mov
mov
jl
dec
std
push
ret
xchg
adc
les
cmp
sub
and
mov
lcall
ja
and
out
iret
enter
aas
adc
cmp
push
in
into
test
fiaddl
push
lcall
sti
arpl
xlat
sbb
xchg
rcl
hlt
daa
fs
cmp
sbb
mov
mov
inc
test
sub
xchg
mov
lds
sub
in
jg
in
xlat
jecxz
add
inc
call
cmp
lret
mov
loope
inc
mov
and
jp
mov
outsb
les
in
push
and
inc
mov
addb
pop
dec
xchg
js
or
mov
jmp
jecxz
sub
lahf
loop
ret
pop
pop
adc
and
jo
ss
sub
out
fsubrl
in
in
leave
add
and
xchg
dec
and
jp
push
mov
cli
sub
inc
ret
xchg
cmp
sbb
out
add
dec
cmp
adc
sbb
into
daa
ret
or
dec
sub
imul
sbb
xor
shr
dec
enter
out
std
cli
lahf
fcoml
icebp
fcompl
aad
push
in
test
mov
out
inc
fstpt
inc
pop
insl
adc
aas
and
push
stos
cwtl
out
insb
xor
popa
cmp
push
inc
sub
jmp
jnp
sbb
xchg
call
out
mov
mov
aad
test
cmc
mov
aaa
lcall
push
rcll
iret
out
sub
push
mov
gs
push
fidivl
cmp
in
fimull
adc
lock
stos
xor
pop
adc
lahf
xor
icebp
cmp
xchg
push
in
or
cltd
cmpsb
ret
sub
pop
stos
fdivl
jl
test
xchg
mov
stos
notb
inc
pop
dec
addr16
ss
test
or
outsb
test
xor
mov
mov
or
push
mov
movsb
sbb
inc
stc
jbe
mov
mov
ss
xor
sbb
in
jne
aaa
add
pop
jno
loopne
push
lock
xor
cltd
js
pop
mov
in
ret
aad
andl
inc
incl
dec
mov
sarl
outsb
stc
dec
imul
dec
jno
xorb
stc
sub
jns
repz
cmp
cmp
push
sbb
xor
imul
cwtl
dec
xor
pop
xor
pop
stos
xchg
jecxz
sub
push
lods
inc
push
sbb
mov
inc
adc
leavew
js
mov
fnstsw
movsl
bound
dec
outsl
mov
lahf
aad
sbb
push
test
cmp
jo
daa
and
enter
xchg
push
sbb
or
clc
push
rorb
mov
push
mov
push
jge
jb
pusha
mov
xorl
rclb
jg
fidivs
sub
cmp
mov
dec
sti
into
and
sub
cmp
sbb
sahf
inc
cld
mov
add
insl
xchg
fsts
hlt
jmp
adc
subl
int
cli
mov
mov
inc
or
mov
stos
adc
es
jne
pushf
je
test
push
int3
inc
popa
cmp
jmp
add
cmpsb
sub
and
daa
add
test
shll
jno
fdivrl
cltd
inc
hlt
lds
sub
xchg
fwait
ljmp
rclb
scas
xor
push
icebp
xor
test
sti
and
sbb
out
dec
aad
sbb
push
push
into
bound
pop
xchg
scas
ljmp
cmp
aaa
daa
les
pop
cltd
jle
cltd
idiv
fisubs
mov
insl
fsts
xchg
inc
lods
stos
xchg
sub
testl
in
les
loop
mov
pop
jecxz
mov
insb
dec
js
sarl
insb
pop
in
stos
or
pusha
dec
and
rol
icebp
in
xlat
xchg
shll
mov
cmp
js
jge
xor
jp
mov
stc
push
divb
loopne
mov
lock
pop
lret
mov
aam
pop
cli
test
sub
mov
ret
sub
jnp
xorl
push
sbb
add
mov
push
jecxz
negb
lcall
out
pop
dec
jae
pushf
or
sbb
and
mov
dec
repz
aad
add
dec
cmpsl
inc
jns
mov
out
bound
and
sub
mov
in
pop
adc
jno
dec
add
push
adc
andb
mov
mov
jae
push
lea
movsb
call
movsb
sub
xchg
imul
jbe
repnz
pop
jb
jo
inc
scas
test
jp
aaa
sub
sub
movsl
push
roll
incl
push
jno
jmp
outsl
mov
call
or
shrl
lds
inc
cltd
data16
fwait
loope
adc
cli
xor
xchg
dec
or
loopne
out
leave
pusha
sbb
repnz
and
push
std
mov
jne
lods
xchg
imul
xor
push
jb
sbb
jbe
fwait
js
nop
inc
jno
cs
sbb
mov
inc
in
inc
pop
or
btr
roll
int
jl
movd
std
into
dec
pop
movsl
or
std
inc
imulb
out
stos
sti
pop
popa
mov
jl
dec
cmpsl
clc
sub
cmp
stc
mov
fs
xchg
lcall
jo
dec
adc
cmp
dec
iret
and
inc
xchg
dec
mov
dec
sti
negl
icebp
mov
ss
inc
push
inc
xchg
inc
mov
and
or
clc
pushf
and
sahf
bound
push
subb
lock
popa
inc
in
lret
outsl
cmp
mov
and
sbb
ss
inc
cltd
cwtl
or
or
jae
into
sbb
cmp
fstl
mov
mov
mov
xor
js
insb
push
sbb
cmp
or
sbb
out
xchg
inc
loopne
aad
and
dec
jno
pop
pop
pop
leave
fcmovnu
inc
in
jno
xchg
imul
movsl
push
cs
daa
mov
pushf
mov
mov
pop
jecxz
push
cmp
cmp
imul
jp
fsub
xchg
mov
pop
repz
out
and
push
inc
inc
out
fcomp
jecxz
lret
sub
mov
fisttpll
inc
jle
js
fsubs
and
mov
mov
pop
inc
movsl
push
stos
out
adc
jecxz
lahf
adc
mov
gs
sbb
mov
in
into
hlt
xchg
mov
mov
dec
dec
enter
xor
out
mov
jne
cld
mov
scas
mov
adc
mov
test
rorb
jg
adc
pop
jae
clc
nop
lret
push
mov
loop
pop
scas
sarb
fs
je
mov
or
push
pusha
sub
inc
mov
js
int3
in
mov
jbe
hlt
sub
dec
flds
cli
add
cmp
jl
lcall
cmp
shrl
push
xor
jae
push
mov
dec
addr16
call
xor
aam
popa
adc
sar
sub
into
dec
orb
js
or
xchg
call
inc
fdecstp
mov
push
fst
jne
into
testl
das
lahf
mov
add
xchg
pop
push
jno
mov
or
sub
mov
decl
mov
cli
fs
mov
xor
cmpsl
insb
hlt
mov
dec
cmp
sub
inc
jmp
js
out
lods
adc
cmp
rep
adc
cmp
sub
arpl
add
andl
nop
cmp
mov
inc
mov
imul
popf
std
xchg
gs
xor
and
adc
mov
inc
sbb
cmpb
xor
and
rorl
mov
or
push
push
orb
pop
dec
pop
fwait
push
xchg
cmp
mov
scas
cwtl
push
ljmp
bound
adc
or
inc
jne
xchg
dec
cwtl
test
dec
add
mov
add
sbb
vpmaxub
mov
push
pusha
jae
add
int
or
dec
sub
xchg
xor
dec
lahf
add
jnp
testb
fidivrs
pop
dec
lea
and
mov
pop
lds
lds
aad
mov
push
aad
xor
mov
bnd
dec
dec
movsb
and
or
adc
in
push
shrl
lret
adcb
test
cmp
jp
rcrb
lods
or
shr
pop
shll
cmp
push
jmp
imulb
pusha
fimull
cmpsb
pop
jns
cs
xor
cmc
int
jae
pop
add
dec
inc
fwait
psubsb
mov
cmc
std
and
dec
inc
push
add
pusha
push
movl
insl
push
in
enter
pop
dec
xor
cmpsb
sub
mov
add
iret
or
sbb
ss
dec
scas
sub
sbb
gs
cmc
ret
sbb
dec
rcll
sub
in
clc
xchg
jg
inc
xchg
mov
ds
aaa
sahf
pop
mov
fs
std
pusha
xor
in
pop
mov
and
rcrb
push
and
mov
imul
clc
and
and
jl
adc
xor
pop
xor
jecxz
add
push
mov
aas
dec
lock
cmpsb
pop
in
inc
sbb
push
std
int
ljmp
les
or
sbb
rorb
mov
mov
and
lods
movsl
aaa
adc
sahf
push
sub
pop
jecxz
out
mov
jg
int3
inc
repz
div
sarb
adc
adc
pop
dec
gs
add
push
imul
jmp
dec
pop
adc
pop
or
inc
push
adc
cmp
lret
push
xor
outsb
jo
ljmp
sbbl
jbe
gs
sub
je
mov
repnz
dec
push
das
mov
scas
sbb
adc
sti
mov
add
pop
fistps
adc
mov
ds
imull
sbb
xor
dec
movsb
mov
loop
mov
cmp
fmuls
test
clc
add
mov
push
inc
pop
cmp
lcall
add
inc
cwtl
stos
movsb
push
xchg
push
xchg
ljmp
inc
adc
sbb
bound
jle
or
ret
es
pop
mov
cmp
mov
js
int
sub
and
jno
lret
push
dec
fnsave
or
dec
lret
filds
inc
sub
pushf
and
and
hlt
jl
push
sbb
mov
mov
sbb
aaa
mov
or
adcb
pop
movsl
add
push
add
test
mov
imul
stc
inc
ja
hlt
lahf
add
dec
or
xor
fsubrs
lret
int3
adc
dec
das
mov
pop
in
jecxz
push
and
or
leave
test
and
mov
insb
cld
out
mov
push
sbb
sbb
test
mov
mov
xlat
ret
and
push
fimuls
repz
shlb
push
or
out
popf
arpl
mov
xor
mov
outsl
adc
xchg
popf
jle
add
or
mov
scas
test
lcall
imul
push
dec
gs
fists
sub
cltd
pop
jg
push
pop
jge
push
xor
aaa
sub
loop
mov
cmp
pop
cwtl
std
dec
and
xor
in
jno
jge
mov
or
sub
mov
jle
dec
mov
ss
cmp
nop
mov
jo
cmc
mov
fbstp
sub
cltd
pusha
clc
enter
les
iret
and
xchg
mov
imul
push
ds
mov
and
sub
push
pop
xor
or
stos
loopne
inc
nop
jo
out
out
incl
aad
popf
push
pop
xor
mov
data16
out
ljmp
dec
repnz
iret
aas
roll
sti
mov
mov
add
int3
jne
mov
imul
rorl
xlat
sbb
frstor
lods
jp
stos
jmp
adc
pop
loope
bound
mov
lods
mov
into
or
stc
mov
int
mov
jae
cmc
data16
cmp
into
shlb
cld
jne
inc
cld
inc
aaa
sub
and
push
cmpsb
inc
mov
int3
cmpsb
adc
loope
in
fisubrs
das
or
adc
adc
inc
pop
pop
into
push
int
popf
push
sbb
xchg
stos
add
sahf
es
cmp
mov
push
lcall
fidivrs
jmp
fs
imul
mov
dec
stos
add
in
lods
cltd
dec
fmul
pcmpgtb
push
das
add
mul
mov
cltd
icebp
xchg
fs
js
dec
mov
mov
push
mov
pop
lcall
lahf
and
hlt
add
xchg
mov
and
lock
push
js
mov
bound
sarb
xchg
sub
sub
hlt
dec
push
lea
fisubrs
and
sub
mov
add
pop
push
mov
or
adc
dec
int3
and
sub
dec
daa
outsl
test
cmpsl
sub
movsb
lock
cs
mov
push
sub
into
fstl
push
lods
out
dec
pop
outsb
out
in
stos
aam
mov
je
xor
push
js
jp
ja
pop
fadds
cmp
and
jne
adc
outsl
out
jp
dec
into
sub
push
cli
aam
arpl
push
or
or
stos
dec
push
or
dec
jns
mov
sbb
sub
sub
bsr
mov
xor
insb
sbb
loope
sbb
roll
outsl
xlat
test
pusha
loopne
pop
sbb
daa
fmul
and
xchg
pop
jmp
inc
call
mov
sahf
mov
push
mov
sub
mov
xchg
inc
scas
jns
mov
cmp
jecxz
lock
xchg
sub
ja
in
sub
add
jbe
or
popf
dec
das
mov
pop
dec
jns
repnz
sub
xchg
jo
inc
sub
pop
xchg
popa
mov
jnp
sub
pop
mov
dec
push
push
sbbl
mov
adc
mov
loopne
cmpsl
dec
adc
jo
addr16
cld
push
mov
popa
sub
mov
loopne
xchg
push
data16
daa
lock
jbe
pop
dec
leave
insl
sbb
enter
sbb
iret
loopne
lret
lock
shlb
jae
sub
imul
push
test
dec
lret
stos
pop
xchg
lods
mov
xor
fwait
out
test
add
les
push
sbb
test
add
mov
decl
jb
aaa
loop
sub
lods
adc
outsl
dec
shr
je
aad
and
cmp
mov
outsb
insl
sub
xor
in
pusha
insb
call
cmp
bound
dec
sub
ss
lea
std
pop
lock
shrl
inc
insb
sub
rcll
lea
outsb
xchg
or
xchg
fisubs
jmp
or
nop
cmp
aam
arpl
pop
pop
inc
test
in
popf
mov
mov
jecxz
mov
mov
jp
js
sub
adc
into
jle
xchg
mov
xchg
xchg
inc
adc
and
xchg
fcmovnu
pop
add
in
orps
jl
stos
subb
adc
jne
subb
pop
notb
mov
push
sarl
out
jmp
push
cmp
mov
rclb
push
addr16
popf
or
in
jecxz
insl
inc
fdivrp
lret
mov
aas
fwait
data16
mov
js
pop
xor
sub
in
mov
movl
out
push
int3
xor
mov
arpl
das
leave
cmp
add
dec
or
cld
xchg
pop
push
cmp
mov
popf
jbe
je
rcrb
shrd
xor
gs
inc
fisubrs
mov
push
test
mov
or
push
jmp
dec
lea
std
jmp
loop
testl
scas
call
pusha
js
mov
icebp
mov
outsl
sar
addb
inc
icebp
xchg
lods
icebp
jmp
or
enter
fwait
xor
das
sbb
filds
mov
das
mov
mov
mov
push
xor
and
gs
xor
call
repz
sub
lods
push
cltd
adc
ret
mov
test
sub
cli
pop
es
je
orb
jge
adcb
xor
mov
xchg
sbb
dec
daa
hlt
hlt
clc
push
adc
push
enter
test
test
sub
jp
xlat
test
mov
cmp
cmp
stos
js
inc
ljmp
cwtl
sbb
lds
int3
mov
into
push
pop
aam
cwtl
add
and
add
shlb
push
loop
ret
add
xor
mov
pop
ret
xor
or
inc
mov
int
mov
rcr
test
imul
mov
push
fwait
sbb
jno
pushf
sub
testb
lcall
js
cmp
add
data16
lods
push
adc
adc
cmp
mov
test
out
repnz
scas
lds
sbb
sbb
movsb
mov
xchg
mov
in
stc
cld
dec
add
xor
pop
pushf
and
std
js
cli
jp
xor
mov
push
fsts
push
lods
jbe
or
std
xor
lahf
xor
xlat
pop
mov
dec
xor
popa
push
xor
ja
xor
mov
pushf
or
addr16
lods
shrl
push
pop
test
popa
loop
jb
dec
push
mov
xchg
arpl
movb
popf
jmp
sahf
adc
pop
cmpsb
popf
sti
test
jecxz
and
mov
ja
mov
mov
es
dec
movntq
loopne
and
jg
pop
ret
add
mov
mov
xchg
fstpl
adc
std
ja
shrl
push
jl
jb
dec
push
aas
xor
outsl
xor
lock
in
pop
sub
pop
pop
push
ljmp
ret
lret
scas
or
or
jno
mov
jg
rorl
inc
cld
inc
mov
dec
pop
cltd
test
lahf
mull
cmp
lock
adc
lods
pop
sub
aas
movsb
adc
in
pop
xor
mov
pop
push
cmp
and
fdivrs
pop
mov
idivl
pop
lea
enter
jp
add
in
and
sahf
inc
out
push
andb
xchg
dec
fcompl
shld
mov
hlt
jp
lcall
addr16
divb
xchg
xor
daa
sub
mov
fcoms
dec
arpl
xchg
test
jg
pop
rol
daa
sbb
fildl
adc
add
adc
es
dec
add
mul
inc
mov
shll
adc
adc
jmp
out
cld
ljmp
std
mov
jb
mov
fs
out
ljmp
push
adc
ret
test
and
addr16
push
scas
loop
cmp
lret
or
loope
dec
adc
pop
sub
xchg
shl
push
or
jg
xchg
lea
pop
lods
push
mov
and
testl
test
arpl
mov
out
test
nop
xchg
test
and
ja
pop
xchg
aam
in
inc
cmpl
imul
push
clc
xor
mov
mov
in
into
les
or
loope
mov
push
loop
xor
mov
xor
pop
stos
push
inc
cmp
mov
shlb
dec
test
std
imul
mov
mov
aad
or
cmp
push
adc
movsl
scas
xchg
xor
scas
or
mov
sahf
mov
cmp
push
test
cmp
test
inc
test
out
les
and
in
add
inc
push
mov
adc
sub
ret
aam
sahf
sahf
cld
adc
shrb
inc
dec
pop
adc
mov
push
cmpl
jg
mov
pop
imul
in
lcall
cmpl
mov
std
pop
sub
mov
stc
mov
cwtl
test
push
jb
or
sub
ja
into
cmp
jno
and
stos
lret
mov
jb
or
insb
mov
bound
sarl
les
push
pusha
jb
push
test
add
outsb
outsb
imul
xchg
daa
xor
dec
js
bound
rdtscp
push
in
jle
out
dec
fwait
lea
or
jmp
dec
jns
out
cmp
loope
pop
sub
out
cltd
push
sahf
push
mov
or
dec
mov
xor
adc
pop
adcb
pop
jg
insl
nop
sbb
dec
sub
fmull
mov
mov
lea
sbb
jge
add
fmull
stos
sbb
mov
ja
pop
popa
jnp
pop
sub
test
mov
int
add
negl
or
and
xchg
cmpb
adc
cmp
xchg
imul
jp
adcl
jo
fadds
add
out
fildll
sbb
nop
sbb
mov
scas
ja
sbb
dec
or
mov
adc
push
in
pop
sub
pop
insb
movsb
add
jg
mov
cmp
cld
cmp
insb
and
bound
xchg
in
push
addr16
movsb
stos
push
scas
test
cmpsl
test
xchg
mov
andl
sahf
xor
mov
aad
insb
mov
xchg
xor
test
aad
xlat
cmp
cmpsb
push
xchg
jmp
clc
out
sbb
pop
mov
mov
out
ret
and
and
call
push
ljmp
adc
mov
int
sbb
sbb
ss
fldl
jmp
jbe
out
cs
xchg
loope
mov
add
fs
ss
sbb
mov
outsb
jecxz
push
sub
push
movsl
ljmp
ficoms
inc
mov
mov
jns
adc
aas
cmpsb
lods
and
sub
out
pop
mov
push
fdivrs
clc
roll
jns
lods
imul
aam
bound
movsb
sub
inc
sbb
ret
mov
das
push
ret
fists
pop
mov
xchg
adc
dec
xor
fildl
adc
insl
iret
push
outsb
and
aam
dec
int3
and
xchg
push
pusha
out
inc
cmc
xacquire
inc
or
adc
iret
sbb
insb
lea
sbb
aas
sbb
xor
stos
pushf
insl
repz
outsb
and
jle
in
dec
popf
push
dec
aas
push
lret
test
xchg
lahf
sbb
adc
test
rcrb
pop
mov
andl
movsb
xor
fs
or
mulb
push
or
jbe
mov
cmp
sub
ds
std
loop
or
lods
loope
lea
mov
aad
or
push
pusha
pushf
inc
or
jnp
and
mov
jmp
int3
sbb
movsb
add
pop
call
les
xlat
inc
mov
xor
push
adc
loopne
xor
lds
adc
enter
daa
testl
mov
or
dec
pop
xor
and
fstl
xchg
add
cmp
stc
push
and
aas
stos
ds
jecxz
adc
dec
cltd
sub
int3
les
stos
sbb
test
stc
push
sbb
mov
sti
test
lea
adcl
mov
fiadds
jne
mov
out
push
adc
test
mov
lds
xchg
cwtl
inc
jb
out
cmc
jp
dec
fdivrs
xchg
xor
add
fisubs
add
imul
pop
loopne
xchg
nop
push
bound
repz
out
jo
imul
out
xor
cli
ds
inc
xchg
mov
cld
pop
and
sbb
imulb
xor
pop
lds
icebp
xor
cmp
fisttpl
enter
inc
add
dec
cmp
xlat
mov
scas
insb
cmp
jmp
aam
in
cmc
jmp
rcrl
mov
and
scas
jmp
cs
pop
out
adc
xchg
scas
push
and
fldl
xor
scas
sub
mov
mov
test
daa
xchg
push
scas
jae
push
cmp
insb
adc
pop
pop
and
call
add
jge
movsl
dec
fsubs
sub
fsubl
aam
out
outsb
mov
in
subb
out
xchg
inc
or
push
les
xor
test
popa
roll
aam
inc
bound
adc
ret
and
pop
pop
mov
icebp
xchg
aas
stos
clc
mov
mov
sub
jno
fisubrs
cmp
xchg
cmp
mov
call
pop
insb
js
addl
sub
cli
pop
cmp
daa
sbb
rcl
jge
push
mov
and
mov
pushf
aad
mov
sbb
roll
imul
push
dec
cmp
cs
mov
and
loop
sub
daa
pop
sub
std
loopne
or
fidivs
ljmp
vpslld
xchg
fwait
xchg
adc
add
stc
and
sbb
cltd
enter
cmp
std
mov
rolb
pushf
jle
les
add
mov
mov
push
into
out
or
out
out
aas
xchg
jb
mov
je
rol
mov
mov
push
fwait
std
lods
jns
jo
add
lock
jg
sub
or
xor
jnp
xor
or
lock
push
out
ret
fwait
mov
pop
lock
lods
repnz
orb
into
andl
xchg
cmpsb
jae
xor
fbld
mov
pop
and
jne
fmuls
lds
std
lcall
jmp
inc
dec
ds
aaa
mov
cmpsl
aas
xor
int
clc
stc
and
inc
mov
inc
mov
pop
and
rcll
enter
rcr
stos
lods
insb
in
iret
ret
fisubrl
jns
xchg
dec
xor
cld
stc
cmp
mov
dec
inc
out
xchg
xor
adc
push
in
push
pop
xchg
test
jge
jg
cmc
aam
sub
add
mov
rol
xor
mov
js
sub
rorl
fbstp
xor
mov
jmp
mov
xor
in
fidivrs
sbb
lds
mov
sti
push
and
lods
dec
inc
arpl
inc
sbb
pop
push
shlb
push
stos
je
subl
add
add
jg
test
jp
nop
xor
mov
sub
mov
adc
int
outsl
and
aaa
imul
sbb
ret
adc
adc
and
pop
jecxz
mov
mov
shrl
push
mov
int3
push
dec
leave
xor
mov
sti
jge
js
test
mov
push
mov
add
push
and
sbb
cmp
testb
jns
shr
ja
fcoml
lahf
mov
cmp
stc
jp
cmpsb
xor
or
dec
mov
int
call
scas
push
rcr
mov
mov
jne
sub
iret
loop
mov
xchg
jo
cwtl
aaa
sbb
adc
rcr
jp
jno
pop
movsb
cmp
cld
leave
pop
mov
sub
xchg
test
mov
cltd
push
lds
mov
stos
and
fwait
pop
push
pushf
jb
push
jmp
inc
test
gs
inc
push
shl
test
pop
mov
sub
mov
add
inc
jl
jno
je
ds
pop
sbb
sbb
cmpsb
lret
push
push
popf
xor
scas
std
lock
adc
add
orb
test
mov
lahf
add
shlb
popa
mov
sub
add
into
mov
push
mov
sub
lea
es
gs
cmp
adc
lea
outsl
rol
dec
aaa
and
add
inc
xchg
es
add
addr16
add
mov
push
in
loope
mov
or
roll
mov
sbb
inc
and
jbe
push
rorl
inc
insb
repnz
mov
imul
pop
mov
fwait
test
loopne
adcl
stos
xchg
xor
cld
push
cmc
add
mov
dec
test
enter
addb
psadbw
sub
push
dec
cmp
xchg
sti
mov
jb
xchg
je
jo
inc
leave
adc
rol
push
leave
cmp
ficompl
and
pop
jmp
jg
movsl
and
dec
adc
dec
out
add
push
jp
push
iret
shlb
jo,pn
pop
test
push
jno
inc
sub
xchg
clc
lret
test
icebp
inc
mov
mov
dec
call
fdivrs
cmpsb
jb
loope
fs
or
in
ljmp
pop
scas
cmp
sahf
adc
xchg
cmpsb
lcall
dec
test
jae
in
cmp
loop
jae
mov
lock
push
add
xchg
pop
cli
je
xchg
shlb
mov
ret
mov
testb
xor
ret
jns
xor
jns
adc
dec
push
icebp
sub
enter
ljmp
hlt
add
mov
dec
xchg
dec
sbb
arpl
add
popa
in
inc
ror
int3
xorb
mov
cmp
int
fildl
enter
pop
sbb
pop
cmpsl
push
or
mov
inc
idivl
clc
push
aam
loopne
mov
jno
sbbl
mov
stos
pop
add
mov
inc
cmc
inc
enter
stc
jmp
cmp
std
or
push
pop
int
push
movsb
lahf
out
xchg
loop
shlb
push
mov
push
pushf
imull
aas
jmp
movsl
cs
xchg
dec
add
xor
in
mov
jg
lret
stos
push
lahf
sahf
mov
stos
adc
mov
mov
add
js
jmp
outsl
out
cmp
out
jae
or
outsl
push
rolb
popa
jge
and
out
repnz
sub
dec
std
jecxz
and
andb
jg
sub
stos
dec
pusha
xchg
cmp
call
jecxz
neg
leave
xchg
ficompl
jg
imul
divl
scas
jp
in
rorl
loopne
xor
pop
es
mov
mov
lods
mov
xor
sbb
jne
stc
stos
out
fwait
inc
std
js
aas
push
or
std
lock
mov
popf
scas
dec
ror
inc
shrb
fnstsw
stos
rorl
dec
int3
js,pn
and
scas
pop
pop
dec
dec
enter
mov
mov
jge
shlb
sbb
lods
nop
daa
fdivl
jnp
cwtl
cmp
mov
test
scas
pop
or
jmp
ret
pop
xchg
adc
add
mov
ja
test
mov
add
cmp
divl
push
ret
mov
out
sbb
push
add
push
sbb
clc
inc
push
sbb
jne
xchg
inc
jp
jae
xchg
loopne
int3
mov
das
mov
int
ljmp
adc
mov
idivl
addl
test
movsb
cmp
movnti
and
orl
inc
mov
mov
pop
mov
loopne
lea
ljmp
outsl
js
lods
stos
mov
lret
pop
cmp
adc
lret
mov
arpl
lock
jns
icebp
xlat
sbb
stc
in
push
mov
lock
outsl
push
stc
adc
fcomps
gs
sbb
dec
push
jge
in
cmp
push
movsl
mov
jnp
xchg
dec
syscall
sub
dec
sbb
jbe
fcmovnbe
dec
or
mov
mov
pop
inc
and
rclb
cli
movswl
xchg
loope
push
pop
mov
sbb
lret
ret
hlt
add
sti
mov
mov
or
push
jne
scas
mov
inc
inc
pop
clc
mov
loopne
jp
shll
in
or
pusha
cli
ret
fldt
setl
jle
xchg
adc
mov
jg
testb
test
ret
and
movsb
cmc
lods
or
or
addl
mov
push
xchg
push
std
jo
jns
adc
incl
mov
dec
xchg
pushf
mov
xor
pusha
in
sti
dec
scas
xor
jbe
ljmp
das
enter
stos
push
leave
stos
sbb
outsb
adc
adc
jmp
lods
add
cmp
jle
add
sar
daa
and
ljmp
pop
mov
cmp
lahf
and
out
add
insb
xlat
js
sub
jno
pop
shll
mov
sar
fdivrs
xchg
out
mov
mov
sub
mov
pop
loope
lea
sub
ja
sar
inc
aam
inc
and
dec
lahf
cmp
and
pop
sti
outsl
insl
cs
icebp
push
push
xchg
iret
adc
push
gs
mov
imul
xor
mov
inc
sbb
pop
dec
dec
jmp
lods
lret
xchg
sarb
in
push
add
je
aaa
mov
push
aas
sub
dec
adc
add
cli
mov
jg
cmp
hlt
or
adc
and
adc
outsl
inc
xor
cli
push
ss
cmc
gs
lret
xchg
lods
idivl
test
and
xchg
lahf
in
push
mov
xor
idivl
test
loopne
ficompl
inc
fimuls
incb
xor
pop
mov
pcmpeqw
rcrb
mov
lock
leave
mov
sub
ret
es
mov
jl
hlt
add
mov
scas
mov
or
cmp
mov
popa
int3
push
into
enter
stos
mov
jle
xor
aaa
pushf
loopne
imul
add
outsb
pop
test
mov
in
outsb
mov
in
adc
fildl
lahf
int
inc
xchg
add
ds
dec
sbb
sti
mov
mov
xchg
jbe
pop
mov
mov
sub
inc
fnstenv
or
stos
dec
sbb
add
jae
scas
mov
mov
lret
loope
pop
xor
enter
xchg
add
cmp
jae
into
fistpl
ss
lret
xchg
insb
mov
inc
dec
xlat
cltd
lds
jecxz
mov
xchg
divb
push
xchg
test
popf
into
leave
ficompl
cmp
sub
and
dec
loopne
push
fcom
rorl
jg
fidivrl
lahf
testb
push
popf
movb
xchg
test
jmp
leave
leave
stos
mov
or
fcomp
push
cmp
popa
cwtl
and
xor
inc
cld
jmp
aad
test
jb
dec
mov
jne
cmp
push
mov
and
test
lret
jns
out
cmpsl
or
push
or
or
adc
mov
scas
adc
mov
sarb
push
or
pop
jbe
mov
cwtl
inc
lahf
xchg
mov
pushf
out
xor
cmp
push
xchg
sarb
push
and
xchg
dec
mov
push
fiaddl
xchg
mov
std
leave
lods
xchg
mov
xor
hlt
lods
adc
jbe
je
mov
add
test
enter
rorb
mov
loope
xchg
adc
repnz
inc
xchg
or
dec
jb
push
adc
std
loopne
jb
out
jne
inc
insb
xchg
stos
faddl
lcall
push
jo
or
fnstenv
test
ja
push
cmp
jbe
pop
pop
inc
or
mov
loop
aas
mov
mov
repnz
insb
add
jae
popf
imul
mov
mov
lods
loope
cmp
testb
sbb
clc
in
clc
fcmovbe
jnp
inc
movsl
mov
cs
jmp
jg
movsb
rol
sahf
shl
jbe
or
ja
bound
mov
pop
lock
mov
xor
je
aam
xchg
jb
mov
jg
roll
push
inc
xchg
xor
pop
xchg
sub
jle
or
dec
rcll
jns
jp
in
pop
inc
pusha
mov
mov
shll
out
push
or
addr16
repz
repnz
fwait
pop
pushf
mov
pop
clc
cmp
inc
add
mov
dec
inc
dec
mov
mov
jl
cmp
dec
inc
or
xchg
mov
cmpsb
pop
push
insl
outsl
pop
mul
cmpsb
ljmp
add
decl
outsl
out
xchg
es
pop
das
adc
adc
cmc
mov
insb
sub
xchg
outsl
xlat
pop
arpl
sbbl
pushf
jmp
jne
loop
scas
mov
sub
push
adc
aam
mov
pop
stos
lcall
inc
std
pop
popf
add
inc
notl
jo
xor
sti
jge
push
xchg
sbb
popf
test
or
test
dec
jnp
lock
test
push
push
or
xor
aam
push
cli
xor
mov
inc
xor
outsl
aad
pop
nop
scas
mov
xchg
cmpsl
into
dec
xor
testb
sub
test
mov
gs
js
outsb
out
in
ret
insb
add
ja
imul
mov
push
ret
es
cmp
pop
roll
pop
mov
push
dec
sbb
xchg
xchg
inc
js
adc
or
cltd
loopne
adc
cmp
and
cwtl
test
mov
cli
add
xchg
xchg
cmp
pushf
cmp
js
inc
mov
add
aam
xor
call
pop
dec
in
sub
dec
insl
jmp
xor
data16
fldt
jge
mov
fstpt
and
mov
or
rcll
add
repnz
sub
rcrl
call
sub
adc
cmp
inc
sub
xchg
inc
cli
adc
fabs
cltd
dec
xchg
in
cmpsb
mov
sub
dec
push
fnstcw
pop
sub
pushf
dec
dec
ret
jae
pop
inc
push
andl
mov
inc
jmp
jo
jns
and
cld
xchg
push
jge
aad
mov
leave
xor
inc
jb
mov
inc
push
test
insb
jb
fs
and
cmp
push
xorl
sub
lahf
into
mov
cmp
lea
fildl
in
mov
mov
fnstenv
shrb
dec
in
je
mov
mov
xchg
lock
mov
xor
push
aam
es
pushf
aaa
cmp
xchg
sbb
lods
and
outsb
push
imul
adc
sti
push
xchg
popf
lahf
popf
addr16
mov
ss
int3
lahf
adc
mov
mov
push
ds
mov
push
adc
sbb
pusha
in
jbe
pop
jecxz
insl
rcrl
das
inc
jo
sbb
icebp
push
scas
pop
rorb
out
icebp
aad
pop
stc
push
add
shll
xchg
out
cs
in
gs
pop
jmp
enter
mov
mov
cltd
mov
test
leave
xchg
sbb
ljmp
add
sbb
push
movsb
ja
cmp
mov
jl
mov
dec
mov
adc
or
adc
shlb
inc
fucom
sbb
cwtl
adc
repz
fwait
jbe
in
divb
xor
jmp
fisubs
xor
insl
mov
repnz
mov
sti
or
scas
push
in
loop
test
fcoms
test
imul
test
mov
cmpsl
mov
cmpsl
pop
pop
dec
push
out
xchg
lods
fadds
cmp
mov
lahf
lea
sbb
daa
mov
sbb
lods
mov
or
sub
movntq
in
out
xor
xchg
addl
add
div
mov
ret
in
fmul
scas
mov
insl
loope
push
out
cmp
clc
xchg
sets
fwait
mov
mov
stc
jmp
ds
lds
mov
cld
arpl
movsl
std
andb
add
out
hlt
push
mov
pop
dec
jno
jo
mov
ljmp
lret
test
hlt
out
xor
xor
push
lods
icebp
imul
jle
jnp
mov
decl
add
popf
test
scas
xor
jne
or
mov
insl
rcr
cwtl
cmpsb
popa
mov
cmp
jg
inc
mov
jb
cmpsb
jmp
sbb
pop
fld1
or
cli
jmp
adc
dec
jae
hlt
add
lcall
fisubs
faddl
push
outsb
popf
icebp
enter
mov
mov
sti
inc
push
adc
mov
pop
push
pop
pop
inc
sbb
icebp
sbb
enter
fs
lock
or
rolb
mov
es
mov
jno
lret
ljmp
repz
jp
jns
dec
mov
mov
pushf
dec
xor
dec
cmpsl
adc
pushf
adc
in
arpl
cli
jp
notl
pcmpeqd
jmp
sub
jbe
lret
cmp
cwtl
out
leave
cld
dec
test
sbb
add
orb
jo
aaa
sub
aam
divl
add
sub
xor
in
into
cld
aaa
das
fwait
mov
test
add
mov
pop
clc
xchg
xor
data16
je
and
imul
add
inc
fs
stc
xchg
ss
push
jle
sarb
xor
sarl
mov
pop
js
arpl
sbb
pop
or
jle
add
call
shrb
stos
bnd
fsubrl
sahf
enter
mov
xor
add
xor
mov
call
sub
mov
hlt
pushl
or
adc
out
mov
cmc
fs
cli
hlt
sbb
inc
mov
in
pusha
push
jmp
push
sub
mov
fld
jne
pop
test
xorb
stos
xor
movsb
lods
sbb
shll
sahf
icebp
add
or
inc
test
gs
mov
add
xchg
and
pop
cmp
clc
sub
jge
dec
push
jp
loop
adc
or
lods
inc
addb
imul
adc
adc
dec
dec
adc
add
sub
lea
mov
nop
inc
in
rolb
mov
lods
pop
aaa
xor
xor
es
mov
popf
pop
ds
loop
in
inc
scas
jo
movsb
lods
or
sbb
jmp
mov
lods
testl
sub
mov
and
xchg
mov
jecxz
ja
push
push
fcoml
hlt
and
mov
in
shrb
nop
dec
pop
xchg
xor
cmp
jbe
dec
jns
ja
nop
repnz
int3
mov
iret
aam
call
xchg
adc
cli
jmp
xchg
push
dec
xchg
xor
in
dec
sub
cmpsb
mov
push
mov
arpl
pusha
in
mov
das
scas
loopne
sbb
pushf
jb
mov
cs
jbe
jbe
ret
dec
into
sub
loop
jl
cmpsl
jl
adc
leave
out
pop
mov
ficoml
gs
lret
in
popa
shrl
movl
jo
mov
jmp
push
add
aaa
idiv
ss
mov
fsub
rorb
shlb
xchg
push
xorl
xor
push
mov
mov
cltd
push
pop
dec
ds
lahf
push
jle
lahf
sahf
pop
movsb
scas
xor
in
imul
cmp
out
dec
test
sub
fiadds
arpl
lock
popf
das
fbstp
out
test
push
fidivl
test
adcl
mov
jle
mov
out
roll
test
mov
loope
add
int3
fsubrp
insl
sub
add
sub
and
jle
mov
jne
mov
mov
cld
fs
jmp
in
mov
or
cmp
xchg
mov
mov
mov
lret
inc
mov
pop
jp
pop
pop
hlt
repz
dec
lea
sbb
jnp
lret
icebp
push
fdivs
mov
insl
jecxz
jl
outsb
xchg
rcrl
and
xchg
mov
dec
rorb
xor
es
inc
jge
into
pop
in
das
or
or
test
or
jmp
fwait
bound
push
je
out
mov
xor
notl
push
hlt
mov
and
jno
repz
pop
sub
jbe
rcr
jae
jo
ljmp
das
dec
push
mov
into
adc
movsl
sub
movsl
outsl
ds
cmp
cmp
xchg
test
fmull
pop
or
stc
repz
jbe
xor
sahf
and
loopne
aad
mov
out
pop
add
jno
add
xor
imull
cmp
fisubl
xchg
or
cmp
insl
repnz
sarb
lahf
cmp
arpl
sub
xor
fistps
repnz
jbe
outsb
mov
les
or
push
pop
ret
stos
aam
aam
dec
ss
addl
imul
xchg
fwait
mov
xor
sbb
and
imul
mov
cltd
inc
xchg
lock
jg
cmpsl
jge
pop
mov
push
mov
xchg
xor
adc
xorl
jo
repnz
or
adc
xchg
in
xor
and
mov
enter
mov
fcmove
cltd
jbe
sub
mov
mov
pop
lret
nop
adc
fwait
dec
sbb
mov
idiv
cmpsb
push
movsl
fldl
dec
sarl
imul
jnp
jmp
cmp
and
fucom
push
fscale
test
dec
lods
push
test
out
div
insl
xchg
cmp
nop
pop
inc
cltd
mov
jnp
subl
and
shlb
cmpsl
pushf
stc
mov
fsubl
test
popa
fiaddl
mov
sbb
push
cmp
shll
or
rclb
mov
dec
or
mov
sahf
sub
add
data16
movsl
mov
pop
mov
ds
mov
mov
lock
add
arpl
std
int3
fstl
sbb
jle
lret
shll
loopne
mov
stc
jne
cmpsl
pop
popa
mov
and
jmp
nop
ret
incl
and
lcall
sti
outsl
int
lds
stc
inc
mov
jbe
cmp
push
pushl
enter
movsl
mov
in
mov
rorb
sti
mov
sbb
sub
adc
in
jecxz
out
nop
mov
lea
push
pop
icebp
ja
inc
lock
sub
in
mov
xchg
out
inc
add
jle
xor
mov
pop
jmp
mov
fmul
xchg
and
cmp
jno
out
cmp
inc
fbld
movsl
dec
jmp
mov
jns
mov
iret
rorl
push
jge
aad
xchg
push
jae
ficoms
lret
daa
fcompl
jbe
pop
lcall
divl
push
imul
mov
jnp
pop
mov
and
add
popa
incb
pushf
shrl
fnstenv
inc
cmp
mov
dec
sbb
mov
testl
push
push
data16
out
in
ja
or
xor
lret
int
jnp
mov
popa
xlat
inc
and
pop
xor
pop
cmpsl
repnz
push
in
mov
out
cmp
jmp
adc
push
inc
push
mov
cs
in
cwtl
mov
fstpl
jo
cmp
jbe
sarb
loope
pop
cmp
mov
loopne
rorb
lea
pop
das
sub
sub
mov
frstor
xor
rolb
mov
scas
in
add
lds
push
mov
jle
mov
inc
fimull
push
sbb
xchg
mov
inc
test
ds
sbbl
inc
push
xor
push
pop
insl
and
sahf
jnp
xchg
sahf
pushf
cmp
cs
fwait
out
in
fisttpl
mov
ljmp
rcl
jp
and
stos
lods
icebp
adc
popa
insb
lds
jmp
mov
xlat
fwait
mov
jno
inc
js
pop
ljmp
mov
loope
add
jecxz
repz
jmp
movsb
cltd
xor
fwait
icebp
leave
mov
fdivs
pop
adc
aas
jnp
cwtl
sbbl
and
fldcw
nop
sbb
or
pop
mov
loopne
xchg
out
int
repnz
mov
xor
mov
fs
adc
jle
adc
pop
aam
sub
into
in
adcb
mov
insl
stos
xor
loope
jno
lret
test
dec
movsl
out
pop
clc
cmp
mov
inc
gs
call
popf
mov
mov
inc
mov
pop
push
sar
push
mov
jns
sub
lret
jo
loopne
bound
add
rorb
test
fdivs
rorl
testb
ficoms
adc
stc
push
sbbl
xor
cmc
jp,pn
xchg
mov
cmc
int
ljmp
cmp
ja
inc
or
imul
mov
test
cwtl
in
lds
sub
out
inc
in
nop
or
dec
dec
or
test
mov
add
loop
mov
sbb
jmp
insb
xor
push
push
movsl
adc
sub
xchg
sub
arpl
jl
pop
repz
pushf
je
adc
outsl
sub
pop
test
add
lock
push
pop
test
add
fisubl
enter
mov
lcall
icebp
stos
mov
adc
hlt
movsl
add
dec
dec
fdivs
adc
into
adc
pop
aas
inc
xor
insl
dec
mov
int3
pop
loopne
repnz
ret
xlat
pop
sbb
and
gs
jae
push
lock
bound
ror
pop
mov
add
xor
cmp
icebp
mov
fwait
out
mov
test
arpl
xchg
mov
push
pop
fwait
xchg
push
dec
movsl
ja
arpl
in
jne
out
ljmp
and
cmpsb
cltd
arpl
popf
fcomps
in
push
lock
outsl
mov
movsb
sbb
movsb
sbb
idivb
fmulp
notl
xchg
lahf
mov
stos
popf
rcrb
push
add
push
popa
pop
fnsave
gs
int3
dec
test
push
sbb
jnp
and
imul
dec
push
push
mov
fwait
js
jmp
test
aaa
push
bound
inc
lea
loopne
mov
and
jmp
fimuls
and
push
imul
xchg
fnstcw
lcall
xchg
std
jnp
lods
std
nop
enter
adc
push
das
ds
outsb
inc
rcrb
cs
jo
sahf
xchg
aaa
imul
adc
das
mov
lahf
daa
shll
jne
xchg
rcr
and
sbb
mov
sbb
push
inc
and
insb
xchg
sbb
or
movsl
dec
cmp
stos
mov
xor
loop
lds
push
pop
fdivrl
jnp
imul
iret
pop
adc
test
and
jae
pushf
xor
ss
call
pop
pop
andl
imul
mov
mov
add
cmp
mov
sbb
adc
push
pop
jecxz
xor
cmp
cli
add
fs
sbb
iret
out
and
incl
int3
jle
je
or
sbb
inc
mov
rcl
sahf
inc
ss
inc
push
jno
lcall
mov
leave
in
mov
or
daa
and
fstps
mov
xchg
pushf
enter
orl
or
mov
stos
sub
insl
mov
push
sbb
std
int3
scas
daa
test
lcall
cmp
pop
xchg
push
add
or
repz
imul
in
fildll
mov
inc
lds
stos
push
aam
call
adc
mov
adc
xor
cwtl
jmp
mov
and
mov
or
lods
xchg
xchg
mov
clc
icebp
outsl
mov
movsl
xor
cli
stos
je
mov
ljmp
mov
cmp
xor
ljmp
in
adc
movsl
sti
jbe
call
outsl
push
jbe
jg
inc
jnp
lock
xchg
mov
dec
test
pop
mov
cmpsb
or
xchg
pop
mov
mov
xchg
sub
hlt
push
pop
cmp
in
push
sbb
popa
cmp
sbb
out
xchg
mov
xchg
pushf
mov
mov
int
repz
inc
cli
jp
jge
loopne
jp
sti
push
outsb
clc
or
gs
jne
fnstsw
iret
ds
jb
icebp
push
lret
call
loop
stos
ljmp
xchg
mov
pop
ret
rdmsr
imul
in
imul
mov
lock
cmpsb
imul
rclb
jge
or
fwait
fwait
mov
jge
repz
pushf
nop
fcomps
xor
test
or
dec
daa
xor
mov
jmp
push
adc
or
std
out
mov
xchg
lds
rorb
xorb
test
cmp
sarl
aaa
insb
xlat
fldt
loop
je
sub
arpl
mov
or
cmp
mov
rolb
lock
add
sbb
dec
dec
ja
fdivl
mov
std
ficomps
ds
or
pop
rcrl
xor
daa
pop
bound
cmpsl
xchg
lret
push
push
cmpsl
xchg
or
cmp
clc
enter
add
dec
mov
sbb
mov
or
add
cltd
fstps
stos
cmp
rcrb
cmp
add
leave
aad
xlat
pushf
clc
fdivl
lods
jg
jns
repnz
add
jb
adc
inc
fcmovne
lahf
mov
lret
jae
xchg
jns
inc
pop
fidivs
push
out
xchg
fs
sub
push
cld
movsl
aad
scas
out
insl
dec
jmp
fadds
pop
add
imull
cmp
mov
cmp
call
rcl
xlat
imul
adc
xchg
sbb
repnz
mov
add
push
cwtl
add
cwtl
pushf
outsl
push
ret
cmp
dec
inc
pop
dec
xor
mov
idivb
fdivrs
xor
mov
sbb
sub
or
shlb
sbb
bound
nop
je
mov
mov
jle
cmpsl
sub
mov
xchg
push
lret
mov
js
push
jae
push
andb
lret
and
outsl
shrb
push
clc
fiadds
shl
loope
mov
mov
mov
fdivrs
ldmxcsr
mov
push
xchg
dec
mov
and
jecxz
insl
mov
sbb
mov
jns
scas
mov
repz
xchg
xchg
mov
rorb
lods
aam
jo
gs
lods
pop
leave
iret
and
add
loopne
out
xor
mov
movsl
imulb
hlt
stos
out
int
sbb
xor
subl
ret
ja
arpl
out
sbb
mov
lds
dec
mov
aaa
dec
jle
arpl
je
pusha
inc
dec
xor
push
mov
sbb
pop
pop
add
mov
mov
mov
fbstp
push
fistpl
xor
mov
dec
push
xor
push
call
cli
test
dec
mov
mov
inc
call
cmp
aad
hlt
js
hlt
std
push
pop
popa
jecxz
addr16
test
aam
push
cli
push
mov
subb
sbb
mov
mov
pop
jno
jl
movsb
or
icebp
sub
or
je
ret
fcoml
push
sub
nop
cmp
cli
inc
pop
call
mov
push
stos
cmp
aaa
cmpsl
pop
sbb
fldcw
xchg
add
and
pop
paddsb
insb
add
pop
push
jnp
dec
cmp
xor
xor
gs
lods
xchg
cltd
es
shll
mov
stc
aad
stc
push
jo
lds
push
jecxz
js
mov
out
push
inc
in
and
inc
loope
lret
into
cltd
insl
xor
sbb
adc
dec
stos
test
push
pop
test
mov
mov
push
pushf
xchg
cli
int3
add
cmpsb
push
in
cld
iret
clc
ljmp
ret
and
lods
cmpsb
flds
nop
fsubrl
cmp
movsb
rcrl
repz
cmp
inc
jno
or
mov
push
adc
xchg
pusha
mov
in
scas
cld
cmp
sub
test
enter
fwait
out
add
sarb
mov
lret
dec
or
leave
sbb
inc
xchg
mov
xor
out
data16
xor
sub
cmpl
aaa
movsb
mov
dec
arpl
ss
fbstp
or
xor
xchg
push
mov
je
or
test
divb
stos
mull
pop
push
push
addr16
jbe
or
out
std
lods
rolb
inc
cwtl
sub
aas
push
sbb
xchg
scas
sbb
clc
mov
int
dec
xor
cltd
push
clc
ss
aaa
dec
push
dec
mov
test
imul
test
scas
sti
test
xchg
push
outsb
or
mov
adc
xchg
andl
inc
ror
push
dec
inc
mov
xchg
iret
mov
adc
jns
hlt
repnz
jge
mov
pushf
in
ror
mov
nop
xor
shll
inc
and
outsl
push
mov
aam
testb
sbb
pusha
loopne
and
popa
fldcw
sub
pop
jb
mov
push
lret
mov
arpl
sbb
sbb
xor
cmp
and
dec
or
fcmovne
addr16
cmpsb
test
call
cmp
or
or
leave
mov
jns
fmuls
je
dec
repz
das
pushf
jg
jmp
fs
nop
mov
sub
jae
or
js
stos
lods
pop
pop
pop
test
push
and
test
inc
test
or
push
jnp
adc
leave
push
js
sub
or
je
push
adc
inc
xchg
repnz
sbb
or
fldcw
cmpsl
lods
jmp
and
lods
cmp
aas
repz
aaa
cmp
inc
jmp
jnp
pop
or
xor
pop
jle
int
mov
xlat
inc
xchg
jno
insl
adc
cmp
adc
mov
mov
pushf
xchg
imul
xchg
mov
push
mov
sub
xchg
ficoms
call
cmp
inc
pusha
dec
neg
pop
rolb
inc
test
not
push
hlt
and
sub
pop
mov
adc
clc
jecxz
xchg
mov
sbb
cmp
aas
sub
fnstsw
mov
xchg
movsl
jp
mov
outsb
xchg
jbe
stos
pusha
or
sub
lods
loop
dec
cmpsb
fldcw
and
push
cmp
push
mov
pop
mov
repnz
pop
pop
pushf
jle
je
cmp
pop
jbe
mov
push
cmovae
subb
gs
xor
mov
cmpsb
cmpsl
lock
xlat
lcall
fdivrs
inc
pop
icebp
fprem1
mov
inc
jg
cmp
lock
fimuls
movsl
push
adc
mov
loope
jl
jle
popa
cltd
add
xchg
in
jg
mov
pop
aas
pop
cmp
mov
movb
xor
out
or
xchg
repz
cmp
movsl
sub
out
sbb
lods
sub
inc
jns
int
pushf
ret
aas
xchg
scas
cmp
int
xchg
inc
jmp
push
jo
add
outsb
xchg
rcll
mov
ficoml
adc
sar
outsb
popa
shlb
mov
out
jo
push
lods
push
xchg
mov
sti
or
mov
fcoms
lods
xchg
shrl
jg
imul
imul
leave
imul
xor
fists
push
lods
jo
ja
loop
je
in
or
cmp
inc
sbb
idivl
mov
adc
adc
jne
in
jle
mov
movsw
addr16
jecxz
or
cmpsb
inc
imul
mov
out
inc
out
add
jmp
jmp
adc
xor
sub
into
jge
jle
dec
cmp
pop
adc
add
bound
in
shl
inc
mov
mov
mov
mov
mov
movsl
pusha
mov
int
shlb
and
and
mov
jae
int
inc
cmpsl
xchg
or
in
jno
sahf
dec
mov
pop
cmc
adc
push
loope
mov
push
push
xchg
je
icebp
clc
xlat
neg
dec
shrl
pushf
icebp
iret
loopne
andl
add
or
sahf
cld
xchg
or
test
aas
int
inc
jl
jg
ret
xor
and
fmull
std
and
adc
jecxz
ja
pushf
movsl
jmp
scas
sub
inc
mov
sarl
sub
cli
imull
inc
mov
pop
jns
push
lds
test
cmp
enter
mov
in
or
mov
hlt
cmp
sub
scas
cmp
gs
loope
cmp
xor
fsubrp
imul
dec
mov
add
push
push
xchg
jecxz
dec
negb
pop
imul
sub
mov
add
sti
xorl
stc
fs
iret
movl
out
add
das
inc
push
das
fwait
bnd
fs
inc
jge
xchg
repz
scas
ffreep
and
mov
cmp
mov
mov
and
movzbl
int
xor
or
mov
mov
rclb
cmpb
sub
ficoms
mov
push
aas
mov
movsb
push
jle
cmpl
fldt
dec
dec
shrl
shrb
push
arpl
addr16
jbe
scas
dec
in
push
jge
push
sbb
sti
cmpsl
cmp
ljmp
jno
scas
jge
and
or
dec
loop
scas
scas
cmp
in
sti
js
add
mov
fstl
std
push
aam
shl
adc
lret
xchg
jle
je
push
mov
mov
xchg
and
cmp
divb
push
adcl
scas
add
movswl
pop
cmc
int
lods
xor
cmp
mov
arpl
mov
cmovae
xor
stos
cltd
push
pop
or
out
into
movsl
xchg
mov
cs
mov
cmp
xchg
in
pop
push
inc
jl
mov
popa
dec
push
lock
cmp
xor
mov
add
pop
and
adc
lahf
outsl
sub
lret
mov
popa
out
adc
jmp
enter
aas
mov
mov
jnp
repz
and
sbb
repz
mov
movsl
inc
fwait
push
shr
fiadds
cld
adc
xlat
mov
push
dec
shl
js
add
mov
fildl
mov
dec
aaa
fadd
out
call
cmp
mov
std
dec
push
inc
xlat
orl
xchg
inc
sbb
sbb
mov
dec
enter
inc
jnp
hlt
dec
outsb
imull
pop
jns
jb
or
ljmp
in
lcall
xor
lret
push
lcall
fistl
lret
pshufw
and
inc
pop
js
pop
test
and
inc
les
insl
fsubrl
mov
divps
scas
ret
js
test
rorb
push
shlb
hlt
jno
out
or
xor
jle
cmp
pop
xor
adc
cmc
lods
pushf
xor
int
xor
sub
and
sub
sarb
out
leave
add
shl
lock
xor
inc
aaa
fadds
jae
loop
cs
loop
jge
out
rcrb
leave
xor
jbe
mov
xor
lods
xchg
mov
and
cmpsb
js
adc
push
arpl
in
cmp
cmp
xchg
sarb
lea
push
es
adc
and
add
add
cmp
decl
aaa
leave
ljmp
fwait
pop
and
inc
loopne
lea
gs
mov
inc
or
jo
inc
imul
dec
lahf
adc
lock
mov
push
je
test
ds
out
xor
and
ja
jbe
xchg
push
xor
fwait
arpl
jnp
shr
inc
mov
pop
xchg
pop
scas
js
dec
fdivrs
adc
push
inc
cmpsl
push
outsb
insb
cmpsb
cmp
cmpsl
dec
xchg
in
pop
incb
pusha
out
jne
out
inc
test
inc
rcl
sbb
retw
mov
orl
and
inc
testb
push
xchg
mov
dec
push
imul
dec
mov
jae
nop
or
pop
push
push
je
cwtl
ficompl
shlb
pushf
inc
and
cmpsl
decb
cmp
insb
cltd
clc
inc
xor
aas
mov
in
mov
xchg
mov
sub
in
inc
out
mov
loope
xchg
out
subb
dec
mov
outsl
add
orb
loop
pop
push
in
bound
daa
sub
sub
xchg
push
imul
fildll
into
xchg
ds
push
mov
push
push
call
in
ja
pop
jno
sbb
pop
imul
pusha
pop
push
xchg
lcall
or
mov
inc
adc
fnstenv
xchg
arpl
adc
imul
mov
jb
repz
pop
shrl
inc
dec
inc
aad
jno
jbe
mov
lods
subb
xchg
pop
cmpsl
mov
push
cmp
mov
imul
outsl
imul
in
mov
cltd
test
imull
fcoms
out
aam
nop
outsb
xchg
ja
or
mov
mov
das
mov
pop
dec
pop
push
cld
test
dec
aad
pushf
aas
xor
out
or
inc
jmp
andb
cmp
sbb
jle
or
loope
inc
xor
in
push
push
aad
aad
inc
pop
jns
xor
jmp
mov
jnp
jmp
jno
sbb
iret
jecxz
sbb
and
cmp
lods
xchg
lret
sbb
mov
jg
push
cmpsb
ret
fwait
pop
jns
popf
jle
insl
scas
subb
jne
cmp
insl
sub
xor
mov
movsb
dec
inc
dec
sti
jp
jno
sub
call
mov
testl
jmp
jp
ds
test
idivl
push
enter
dec
mov
push
jns
imull
pop
test
jbe
sahf
ret
xor
bound
mov
cmp
dec
insb
out
sub
inc
push
xchg
mov
pop
dec
movsl
add
inc
fistpl
rorl
pop
mov
out
adc
push
scas
stos
shlb
jnp
enter
mov
mov
ljmp
cli
xor
fwait
lret
insl
fcomps
into
jle
adc
loope
pop
fwait
cmpsb
adc
mov
jno
sbb
movq
sbb
insl
dec
fisubl
nop
stos
jle
pop
subb
jns
outsb
and
insl
aad
daa
pop
movsb
push
loope
mov
fisubs
lods
add
push
and
mov
inc
sbb
cmc
sbb
in
popa
dec
xlat
dec
push
jns
dec
rcrb
insb
jmp
lcall
xchg
or
push
pop
push
push
push
adc
in
cli
sahf
cmc
mov
adc
das
aaa
push
mov
cmpsb
sub
sbb
cltd
sti
nop
les
ret
add
mov
popf
lahf
adc
call
sub
xor
mov
fwait
pop
les
sbb
xor
mull
and
push
dec
movsl
cld
add
out
xlat
sbb
adc
xchg
aam
cmpsb
andb
pop
cs
arpl
incb
or
push
mov
xchg
arpl
sbb
cmp
stc
add
pop
xor
jo
fs
cmp
inc
imul
mov
cmp
xchg
data16
and
notb
xor
xorl
sub
insb
ret
push
xor
push
adc
mov
xor
or
xlat
out
bound
dec
test
addl
cwtl
push
stos
imul
and
sar
xchg
cmp
or
and
out
mov
xchg
sub
std
js
movnti
fsubrp
jl
loope
pop
lcall
jmp
dec
adc
mov
mov
sti
sbb
loope
mov
mov
data16
subl
dec
pushf
stc
add
sbbb
xchg
xor
outsb
xchg
leave
push
mov
and
jmp
call
loopne
repz
loope
inc
dec
xor
jl
jbe
packsswb
cmp
adc
push
leave
inc
xor
jmp
push
rcrl
clc
sbb
push
pop
mov
fcomp
int3
shll
lea
shll
xchg
insb
bound
cmp
lahf
mov
jle
enter
mov
mov
lcall
sub
pop
movsl
gs
xchg
cmp
shlb
adc
movb
mov
mov
cmpsb
mov
mov
mov
push
mov
loopne
out
ds
in
add
mov
xchg
loope
mov
mov
leave
dec
int
mov
adc
fwait
sbb
mov
push
aaa
or
popf
hlt
jns
sub
sub
jp
mov
mov
subl
mov
or
idivb
jo
or
and
or
in
pop
in
push
dec
or
ret
lea
lret
mov
lock
aad
hlt
push
and
mov
imulb
out
add
mov
push
pextrw
dec
pop
dec
sub
ret
arpl
test
dec
jmp
xor
lcall
jmp
fcmove
mov
rcrb
xchg
adc
push
jge
sub
push
stos
sub
leave
dec
popf
shll
mov
xchg
ret
jl
xor
adc
or
shlb
jl
popa
mov
mov
gs
addl
or
dec
cmpsb
dec
sbb
jle
testl
in
pop
push
mov
pop
fcomps
inc
rcll
push
pop
add
push
pop
fidivl
mov
pop
adc
cld
insb
cmp
das
xor
fistl
mov
aad
cmpsb
inc
dec
or
cli
pusha
adc
sub
sub
imul
cmp
std
test
pop
jg
mov
dec
xor
cmp
idivb
int
add
js
cmpsl
std
sahf
movsb
dec
xchg
sbb
in
and
cmc
es
mov
inc
jecxz
and
pop
mov
push
leave
or
fistps
inc
rcl
fildll
jns
and
push
cmpsl
mov
test
or
lods
mov
ret
xchg
iret
xor
jnp
xchg
out
dec
leave
xor
fldenv
cmpsl
adc
cs
out
and
data16
dec
adc
jmp
sbb
push
jl,pt
sbb
and
pop
mov
cmpsl
lock
add
ds
cltd
sahf
jg
loop
jae
dec
ds
mov
pop
movsb
les
pop
cmc
pop
mov
fwait
or
dec
xchg
hlt
xor
pop
mov
iret
jecxz
scas
loop
hlt
cmp
fimuls
cmp
into
dec
loop
fcmovnbe
and
ret
mov
push
mov
pop
inc
ret
jb
sub
mov
stos
cwtl
push
lcall
insb
sbb
icebp
sbb
jecxz
cwtl
scas
add
pop
cwtl
adc
in
cmc
adc
lea
push
inc
adc
push
mov
add
jg
ljmp
cmp
repz
mov
je
sub
enter
cmc
fnstsw
xchg
xchg
xor
or
imul
cmp
mov
aas
push
jle
inc
lods
xchg
sbb
fwait
dec
lods
add
or
dec
fidivrs
subb
or
mov
xchg
pop
repz
mov
mov
fwait
pop
sbbl
cmp
push
mov
scas
pop
hlt
jns
mov
leave
mov
popl
lods
xchg
push
jle
adcb
loopne
out
mov
adc
adc
jecxz
mov
rol
cmp
sbb
pop
pop
sbb
adc
inc
mov
imul
fadds
cltd
push
insl
or
cmp
testb
outsl
mov
je
scas
xchg
ret
movsb
mov
into
and
cmp
lret
cltd
push
ret
cltd
pop
mov
xchg
outsb
jbe
cld
scas
adc
mov
icebp
fst
aas
xchg
push
mov
inc
xor
movsl
aad
lock
jo
inc
sahf
es
mov
sub
pop
lods
push
bound
add
ret
in
sbb
lock
ss
aaa
cmp
jecxz
jbe
aaa
sbb
out
decl
loope
arpl
pop
or
mov
or
sub
ret
stos
jp
mov
push
or
cmp
jecxz
mov
sbb
add
mov
cmp
adc
inc
fwait
aam
adc
lret
fildll
push
andb
iret
divb
inc
xor
add
push
test
out
lods
xchg
cmp
mov
jmp
subb
xchg
xchg
sub
fs
stos
adc
mov
vucomisd
clc
pop
test
xchg
pop
pop
cmp
push
dec
dec
stos
out
stos
jge
push
fmul
outsb
shrl
mov
pop
sahf
fucomi
inc
jecxz
fldcw
push
add
les
adc
shll
mov
push
not
push
push
inc
pop
orw
dec
mov
movsb
cmp
dec
push
and
cmc
sahf
and
lods
mov
lea
pop
daa
xor
out
pop
inc
xor
mov
loope
call
mov
sub
and
call
aam
outsb
xchg
int
lret
inc
mov
insl
pop
jmp
xlat
mov
popf
aaa
pop
pushf
mov
fisubs
scas
mov
test
mov
cmpsl
cmp
xor
sub
xchg
push
pop
sbb
inc
xchg
sub
and
inc
mov
testl
daa
leave
sub
cld
and
cmp
cmp
xchg
mov
pop
push
or
imul
iret
movsl
sub
ljmp
in
mov
std
inc
js
lret
outsb
out
dec
fwait
push
sub
cs
sbb
dec
xchg
ret
jp
add
pop
sbb
pop
loopne
mov
push
shrl
xor
sub
jp
add
mov
inc
repnz
adc
std
or
pushl
mov
inc
sti
dec
add
popf
add
mov
xor
loop
sbb
mov
inc
cmpsl
add
jnp
adc
in
aam
adc
lret
pusha
push
jle
sbbb
rcrb
pop
in
pop
sti
dec
bound
inc
inc
and
das
pop
aas
test
push
int3
mov
mov
shlb
cmpsl
daa
mov
pusha
xor
sbb
imul
fdivrs
dec
pop
mov
fnstcw
sar
and
mov
jno
mov
hlt
xor
push
jb
pop
fildl
fwait
repnz
jno
jmp
xchg
cmpsb
lahf
es
or
and
test
jo
ja
dec
mov
push
fdiv
push
nop
xchg
xchg
stos
push
adc
push
sub
adc
mov
add
mov
jo
int3
nop
daa
sbb
int
xorl
in
pop
outsl
mov
xchg
insb
xchg
dec
fbld
insl
xlat
imul
lea
xchg
cwtl
fadds
int
lods
mov
pop
scas
sahf
jns
push
add
popf
xor
or
fnstenv
out
and
add
mov
stos
hlt
movsb
dec
sahf
dec
shl
add
pop
xchg
lds
sub
xchg
sub
pushl
xchg
pop
sbb
push
shlb
into
sub
fistl
mov
lea
add
mov
cmp
or
sub
pushf
aaa
xor
aam
sahf
xor
push
pop
dec
in
lret
cli
cmp
sbb
xchg
sub
iret
sub
out
pop
push
ret
cld
jae
pop
xlat
nop
leave
out
fs
fadds
push
aas
sbb
mov
imul
in
orb
jae
stos
fisubs
dec
lahf
mov
cmp
add
rorl
loop
outsb
fisubrl
inc
or
mov
insb
push
adc
pop
int3
jmp
rcll
shll
push
gs
push
pop
or
mov
push
adc
mov
repz
sahf
mov
jb
sub
out
mov
icebp
test
gs
addr16
or
test
lods
test
push
inc
push
inc
dec
push
mov
je
lahf
popa
cs
push
mov
mov
cmp
mov
and
mov
faddl
sub
bound
mov
lcall
and
inc
and
fs
xchg
mov
repz
rcr
add
jecxz
ret
ja
cmpsl
in
dec
mov
shlb
or
pop
popf
repz
inc
pop
add
das
xchg
aam
movsl
adc
dec
repz
scas
out
stc
adc
fdivrs
adcb
dec
lahf
es
sub
lods
dec
mov
push
adc
lods
pop
push
xchg
movsl
mov
shll
pop
inc
mov
mov
adc
adc
push
inc
mov
jle
inc
pop
clc
imul
add
out
por
adc
neg
mov
rolb
shlb
mov
shl
loop
ret
adcb
fwait
arpl
lret
pop
jae
rcrb
and
aam
popa
jns
leave
mov
ds
push
ret
ret
outsb
cld
add
inc
xorl
xor
push
xchg
or
mov
fiaddl
or
insl
cltd
lods
inc
daa
stc
notl
fwait
cmc
mov
push
add
xchg
mov
jmp
fs
out
xor
add
sar
andl
sbb
cld
fsubs
shl
xlat
sbb
adc
std
push
sub
sub
imul
xor
rclb
dec
push
bound
jns
loopne
xchg
ret
jmp
les
push
push
fdivr
inc
loop
xchg
test
mov
js
xor
push
dec
or
jl
dec
jne
and
pop
out
mov
mov
loope
jo
lea
ljmp
movsb
stos
xchg
inc
mov
mov
inc
adc
hlt
andb
testl
shlb
daa
inc
mov
xchg
leave
int3
imul
mov
pop
sbb
xchg
gs
pop
iret
leave
mov
scas
lea
je
repz
dec
cmpsl
dec
or
pushf
out
nop
xchg
cld
fisubrs
je
mov
ret
push
jno
ja
push
mov
enter
cmp
adc
pop
iret
add
xchg
arpl
subl
in
call
fstps
dec
pushf
xchg
jmp
faddp
stos
lret
out
mov
ja
loop
fcmovnbe
in
cld
test
xchg
pcmpgtw
fisubrs
mov
ret
xchg
and
stc
es
xor
fcom
iret
mov
xchg
sub
mov
jno
and
lods
mov
or
ja
fildl
lea
pop
jle
adc
and
sub
pop
dec
aas
mov
mov
sub
jbe
sub
ss
movsb
out
jne
fdivrl
add
js
cmp
enter
adc
cmpsl
adc
mov
mov
xor
pop
out
std
aaa
push
das
les
test
psrld
aas
cmp
imul
inc
mov
shll
cmp
mov
mov
adc
fdivrs
es
icebp
lods
xor
ss
or
aaa
les
enter
fstpt
dec
int3
mov
mov
and
gs
mov
xorb
decb
mov
add
ss
add
xchg
lcall
pop
repnz
ja
and
pop
fisttpll
cmp
and
pop
movsb
jge
enter
sub
jp
xchg
and
out
rol
mov
divl
testb
push
cmp
or
jno
ss
xlat
lcall
sub
cli
add
test
aaa
and
sbb
and
push
addr16
xor
and
push
enter
jg
cmc
test
jnp
and
xchg
call
call
xor
scas
push
and
repz
popf
movsb
hlt
orl
aaa
mov
adc
push
pop
inc
popa
into
loopne
out
xchg
into
rolb
das
lea
lods
cmp
xchg
inc
ljmp
jge
and
rclb
fchs
test
aas
sub
jecxz
rorl
out
jge
daa
inc
cmpsl
fadds
inc
push
shll
xlat
sub
rolb
xor
jne
outsl
dec
mov
ret
cli
dec
iret
ficoml
mov
adc
ja
testb
mov
mov
leave
mov
repnz
out
add
sbb
cmp
jbe
xchg
sti
test
nop
mov
clc
mov
ds
sahf
jle
es
cmp
dec
cli
test
pop
mov
sti
push
int3
out
mov
mov
cmpsb
and
sub
arpl
std
push
jns
inc
cmp
xchg
fildl
shr
jg
std
aaa
jne
fimuls
fmul
push
push
cmpb
xchg
or
roll
jge
pop
call
sarl
add
aaa
sti
fisttps
pop
aas
xor
and
cmp
cmpsb
lret
call
mov
mov
bnd
mov
mov
out
mov
jl
insb
cmc
insb
push
cmpsb
ljmp
cmpsl
push
add
xor
iret
das
jbe
insl
cmp
push
call
in
cmpsl
push
push
cs
lret
aad
xchg
fistl
bound
mov
mov
pusha
out
pop
dec
stos
jp
add
add
push
fs
inc
icebp
push
nop
ret
mov
pop
dec
mov
les
gs
andb
rorb
xchg
xchg
gs
sub
xor
das
stos
jbe
add
adc
test
movsb
imul
arpl
pushf
mov
iret
add
test
push
xchg
pop
mov
and
pop
stos
pop
cwtl
add
cmp
sarb
and
test
or
add
xchg
sahf
rcrb
lds
xor
daa
jo
xor
test
incb
mov
in
mov
mov
mov
push
insl
xor
jnp
aas
fneni(8087
mov
popa
push
rdpmc
mul
and
test
movsl
add
addb
pop
xchg
pop
pushf
pusha
pop
add
aad
jmp
daa
dec
or
sub
jbe
aaa
bound
out
sub
jno
mov
hlt
lahf
insl
ja
dec
xchg
clc
jp
inc
lahf
shll
out
jno
outsb
rcr
ss
lcall
push
jg
aas
jnp
mov
sbb
lahf
cmc
push
test
mov
stos
pushf
cmpsb
lcall
and
ljmp
cmp
inc
mov
insb
idivb
and
popa
mov
sbb
and
negl
or
xchg
outsb
loopne
xorb
cmp
mov
aaa
imul
lahf
mov
lock
jg
testb
mov
icebp
dec
push
loope
xor
cmc
lds
fildl
ja
mov
ret
add
mov
jmp
pop
push
adc
inc
stos
pop
xlat
and
sbb
call
subb
inc
sbb
jecxz
jl
mov
sub
mov
loop
fisttps
js
insb
adc
imul
xchg
mov
or
hlt
dec
jge
lcall
cmp
neg
in
cmp
or
xlat
push
hlt
xchg
aad
cmp
stc
mov
hlt
sti
insb
pop
push
xchg
in
lods
dec
scas
jns
aam
jb
or
dec
xor
adc
stos
popa
add
push
lods
fldcw
ds
mov
adc
sub
xchg
inc
scas
or
js
outsb
dec
out
and
xchg
mov
fwait
inc
xchg
mov
imul
push
leave
imul
test
movsl
jmp
add
icebp
insl
mov
dec
nop
ljmp
push
mov
and
inc
dec
cmpsl
fcomps
inc
cmpl
aaa
in
sahf
pusha
or
or
lods
std
and
mov
jb
std
xchg
cmpsl
lahf
jne
mov
push
xorl
out
stos
inc
shr
data16
addl
stos
cmp
sub
inc
pop
fs
ss
xor
push
adc
in
mov
shlb
pop
inc
adc
pop
push
mov
xor
inc
lds
mov
je
sub
xchg
pop
popa
out
imul
lret
sub
aaa
mov
pop
mov
sub
int3
xchg
fsubs
push
or
aaa
flds
out
lea
test
hlt
cmpsb
or
push
mov
jo
std
add
or
mov
mov
add
outsb
mov
lahf
push
mov
jl
xchg
shlb
pop
push
lods
shll
push
inc
jne
arpl
imul
pushf
sti
add
imul
cmp
dec
in
jl
dec
mov
sub
movsb
adc
dec
imul
ja
sbb
in
popf
xchg
int3
fisttpll
popf
lea
cltd
andl
ds
out
ret
stos
sahf
add
je
inc
jno
daa
lret
or
push
cmp
je
inc
in
pop
pushf
cld
stos
sub
aad
mov
pop
mov
mov
lds
and
jg
arpl
xchg
into
cmpsl
sub
fldt
stos
ljmp
mov
jg
xchg
cmp
cmp
and
ret
jp
add
xchg
inc
mov
jns
lods
movsb
pop
push
add
cmc
push
and
and
aam
fcmovu
arpl
adc
mov
cld
dec
add
test
outsl
mov
inc
pusha
imul
pop
aas
ja
iret
shll
out
jnp
xor
popf
es
insl
mov
loopne
rol
push
mov
dec
repnz
out
bound
out
push
fwait
pop
mov
xor
fldt
jns
xchg
adc
sarl
pop
adc
imul
add
jmp
stos
sbb
inc
mov
dec
dec
notb
inc
and
pop
xchg
sub
aad
ret
mov
sbb
in
in
out
add
and
stc
fcomps
xchg
testb
dec
aam
das
xlat
xor
inc
mov
push
xor
lea
pop
jnp
and
push
push
sub
mov
fnsave
add
dec
aam
xor
dec
gs
popa
push
add
daa
lds
std
mov
xchg
js
xchg
cwtl
xchg
pop
mov
add
inc
mov
mov
leave
faddl
roll
fsubrl
ljmp
popa
add
xorl
cmp
mov
lock
gs
mov
rclb
pop
into
mov
sub
leave
sti
jne
push
adcb
mov
daa
adc
adcl
pop
cltd
adc
mov
outsl
add
das
lahf
adc
dec
clc
jg
rorw
int
mov
ret
out
sahf
jo
clc
pop
pop
push
in
mov
pop
mov
arpl
mov
dec
push
clc
lret
in
adc
dec
addb
push
mov
leave
sub
std
std
pop
cli
in
leave
mov
ljmp
popa
clc
mov
or
hlt
mov
int3
mov
arpl
fidivl
inc
adc
dec
mov
in
add
ffreep
push
flds
xor
cltd
rcrl
sbb
pushf
outsl
sub
cmc
das
pusha
sub
pusha
xchg
xor
loopne
push
cmp
mov
cmp
test
xor
inc
sub
add
push
cmp
xchg
clc
es
fsubrp
push
lods
lds
or
mov
push
popa
arpl
dec
mov
lret
inc
movsb
or
xorl
enter
jbe
sbb
cmp
add
cmp
loopne
divl
stos
pop
or
fyl2xp1
add
iret
adc
adc
rcrl
and
xchg
push
and
and
xchg
pop
call
fistpl
jle
arpl
pop
call
movl
pop
repnz
push
xchg
test
pusha
xor
cmp
mov
shrb
inc
push
add
xlat
dec
mov
pusha
cmpsl
lahf
dec
leave
popf
std
jae
iret
ret
xorb
and
push
iret
icebp
mov
cwtl
outsb
pop
pop
jmp
fcmovu
cmpl
fstl
outsb
insl
jae
out
int
lea
mov
iret
mov
add
jle
ja
inc
add
xchg
sub
adc
subl
mov
cmp
insl
adc
xor
xchg
mov
xorb
lahf
push
stc
sbb
lret
xlat
jne
add
in
sbb
pop
mov
jle
jecxz
push
popa
add
push
stos
orb
movl
jae
mov
inc
add
popf
cmc
lock
or
and
sarl
cmc
insl
xchg
js
cmpsl
cmp
ret
sub
mov
repnz
adc
loope
mov
stos
fstl
aas
add
movsb
add
lret
xchg
loope
push
mov
les
daa
cmp
scas
jbe
xchg
sub
pop
mov
mov
mov
and
jo
dec
imul
jle
shll
pushf
mov
pop
imulb
dec
mov
pushaw
outsb
push
xchg
pushf
mov
inc
push
add
mov
pop
push
lret
push
orl
push
or
adc
rcrb
mov
dec
push
int3
mull
loope
ljmp
sbb
or
sbb
es
inc
nop
insb
enter
cmpsb
cltd
mov
xchg
lahf
and
push
inc
jp
cli
push
mov
fcmovne
in
rcrb
pop
int
nop
xchg
xchg
add
xchg
add
test
iret
pop
mov
pop
pusha
pop
out
xor
inc
jnp
cmp
movsl
and
jbe
aaa
mov
xor
loop
fdivl
jb
cmpsl
sbb
rcll
jmp
leave
jge
mov
push
dec
filds
mov
pop
lret
call
in
fs
pushf
mov
xor
ds
mov
imul
in
push
test
test
xchg
push
js
xchg
pop
push
sbb
subb
in
mov
cmp
mov
mov
imul
lods
jmp
or
and
add
roll
addb
sub
mov
sbb
xor
int
mov
sbb
and
xor
cmp
stos
pop
aaa
popf
imul
pop
xabort
lock
cmpsl
dec
mov
lock
lds
adc
push
mov
shr
fwait
aad
ret
repz
rorb
mov
scas
jmp
sbb
in
loopne
mov
fs
xlat
xor
fwait
jno
mov
push
xchg
ret
pop
push
adc
dec
pop
add
cmpsb
inc
fisttpll
jle
ds
jle
push
mov
mov
add
mov
jge
lea
call
scas
sti
mov
push
movsb
dec
sbb
xchg
mov
pop
mov
icebp
fstps
dec
jecxz
loope
cmp
aaa
stc
jo
sbb
scas
and
pop
scas
daa
lock
and
repz
icebp
add
popf
fcomi
call
mov
fnstsw
sbb
pop
rcll
sub
dec
es
popf
mov
imulb
and
jns
fidivrs
adc
mov
outsb
sub
push
test
mov
adcl
stos
mov
ljmp
mov
mov
lcall
jp
sub
mov
outsl
sub
lcall
and
or
mov
je
movsl
or
sbb
sbb
in
bound
cld
or
cltd
push
dec
or
daa
addr16
out
sub
cmc
add
pop
dec
pop
mov
pop
xchg
jge
scas
leave
lods
outsl
int3
add
stc
cwtl
sarl
fbld
insb
fists
or
mov
cld
loopne
imul
mov
dec
and
push
adc
int
shlb
fs
ds
add
insl
mov
cmp
pop
and
xor
xor
or
jne
ret
pushf
fdivl
mov
mov
lret
or
inc
mov
sub
mov
mov
xlat
or
adc
push
sbb
int3
jmp
sub
int
lret
sahf
jnp
mov
jle
fs
xor
xor
mov
insb
push
divl
inc
imul
push
mov
rcr
outsl
inc
out
adc
movsb
dec
cmpb
dec
jo
cmp
jmp
and
mov
adc
les
push
mov
and
xor
jns
adc
sahf
out
int
dec
adc
inc
int
div
pop
test
clc
mov
mov
push
int3
pusha
mov
mov
ds
jb
fidivs
mov
movsb
mov
cmp
push
or
sti
mov
decl
jb
or
lahf
js
les
jmp
ret
shrb
pushf
jo
push
lret
ljmp
add
mov
jae
mov
mov
jne
fcomi
mov
inc
mov
repz
pop
cmp
mov
push
pop
cmp
add
imulb
mov
push
sti
imull
xlat
imul
xchg
lahf
cmp
rol
sub
pop
sub
lds
orl
in
jo
in
scas
subl
push
inc
shl
adc
or
jnp
loope
xor
loope
scas
inc
xor
arpl
stos
and
out
test
cmp
scas
inc
adc
push
pop
sbb
mov
mov
loope
xchg
fildll
aad
add
and
aas
add
cmpsb
and
mov
inc
in
sub
pop
and
push
pusha
imul
mov
inc
xchg
sti
notb
clc
mov
cmp
pop
les
cli
fmuls
jle
cmpsl
mov
mov
and
ret
push
add
shlb
or
xchg
mov
inc
lds
lahf
mov
adc
daa
sub
xchg
xchg
mov
or
mov
out
shrb
xor
lods
aad
pop
mov
mov
pop
and
mov
xchg
rclb
in
scas
mov
xlat
lret
clc
jae
mov
sti
push
cmp
mov
dec
pop
sub
cmp
rorb
enter
or
aas
mov
pop
rcr
out
stos
ljmp
mov
mov
leave
mov
shll
xchg
das
sbb
jae
mov
xchg
mov
add
add
movsl
mov
mov
add
enter
mov
or
stos
mov
xchg
xor
xor
mov
ror
jmp
dec
jl
fisubrs
fcomps
xchg
mov
enter
test
adc
sarl
mov
xlat
push
jecxz
push
call
mov
jae
adc
std
sbb
jno
rclb
loopne
mov
and
out
adc
sub
aas
lods
lods
int3
add
mov
repnz
clc
lea
test
popa
int
fcoms
sahf
cmpsb
mov
or
dec
xor
scas
adc
xlat
mov
jns
fimull
jae
inc
xchg
xchg
lds
inc
add
xor
adc
jecxz
sti
inc
pop
inc
adc
sbb
sub
pop
iret
bound
shll
pop
dec
xchg
jne
mov
leave
in
xchg
dec
xor
cmp
into
and
lret
sbb
dec
push
xchg
mov
adc
js
arpl
jp
popf
or
sahf
mov
insb
lds
call
lea
mov
push
jae
testb
testl
nop
push
cmp
inc
xor
mov
cli
adc
inc
divl
fcomps
leave
ss
je
add
push
pusha
lea
movl
dec
pop
nop
gs
sbb
mov
adc
out
fwait
add
divl
push
mov
dec
cs
cmp
loop
ds
loope
data16
imull
rorl
add
insb
fnsave
cmp
leave
dec
xorl
stos
jb
lahf
ret
add
enter
mov
je
xor
gs
shll
xchg
aad
out
jl
sbb
mov
push
outsb
mov
mov
int3
adc
int3
pop
jnp
xchg
cwtl
shl
mov
les
mov
mov
xor
leave
rclb
lcall
dec
test
and
sub
fs
scas
hlt
mov
out
es
jecxz
add
pop
notl
test
or
sahf
shl
pop
mov
mov
lods
inc
sub
dec
js
pop
or
iret
adc
inc
imull
movsl
adc
jmp
shll
scas
fucom
les
cmp
push
mov
lea
or
cmp
push
inc
mov
fstp
mov
jns
and
mov
aam
aaa
xlat
jne
jnp
mov
shrl
in
mov
xchg
inc
out
push
cmp
lods
mov
xor
sbb
pop
sbb
ljmp
and
jns
ss
jnp
mov
jo
or
pop
xchg
loop
nop
dec
pop
cs
out
loopne
call
jne
fbstp
ja
in
scas
ja
subb
scas
push
mov
js
movsb
hlt
ljmp
push
and
popf
cltd
nop
cmp
pop
in
or
and
addl
dec
in
out
fs
push
xchg
fcoml
lahf
push
mov
pop
jp
aas
mov
rorb
sub
or
lds
push
fisubrl
pusha
mov
loopne
jnp
lea
rorb
insl
popf
push
jo
xchg
mov
sub
lds
js
mov
jno
jnp
mov
xchg
dec
xor
leave
pop
push
cmp
shlb
adc
loop
lock
mov
push
dec
inc
mov
dec
inc
push
dec
scas
cwtl
add
les
mov
mov
sub
mov
mov
sub
push
in
xchg
xor
sub
insb
and
mov
mov
pop
and
inc
sbbl
and
push
xchg
in
ret
push
cltd
ret
rcrb
scas
xchg
pop
and
adc
jp
dec
sbb
and
pop
in
inc
test
mov
mov
jmp
divps
dec
jl
aas
shlb
push
out
fidivl
ss
loopne
cmpsb
in
incl
cmpsl
std
stc
loopne
std
inc
ret
adc
and
dec
pushf
sub
shufps
and
adc
add
imul
sbb
fucomp
pop
pusha
inc
std
lahf
int3
out
mov
and
loopne
mov
rorb
pop
int
jb
js
adc
xlat
or
mov
sahf
push
pop
aad
scas
aad
push
adc
pop
mov
inc
inc
lret
enter
fcomps
xchg
test
sbb
mov
mov
cmp
mov
lret
sub
mov
pop
lret
pop
xchg
or
movsl
ret
push
out
faddl
mov
mov
vunpckhps
lcall
jae
jp
push
shr
adcl
ja
adc
sub
iret
fnstenv
inc
inc
pop
enter
divl
push
stc
in
inc
jne
enter
outsl
test
jns
fs
xchg
xchg
bound
fisttpll
or
push
mov
sub
push
pushf
dec
ja
es
mov
mov
push
jne
mov
xor
mov
xor
rorl
xor
dec
mov
sbb
shrb
pusha
cmp
mov
pop
jle
push
cmp
ret
scas
movsb
or
pop
xor
xor
push
and
and
mov
lret
mov
adc
in
xchg
imul
add
mov
xor
sbbl
push
das
testb
mov
jb
andb
iret
rcll
fiadds
fnsave
or
ja
cmp
je
gs
and
insb
clc
add
sbb
pop
fisubl
stos
pop
xchg
pushw
sub
mov
and
and
xchg
pop
test
cmc
inc
nop
call
aam
or
inc
aas
mul
xchg
cmp
addr16
push
push
movsb
iret
sbb
mov
fiadds
xchg
cmp
jb
cmpsb
push
or
test
mov
aaa
adc
xchg
push
cltd
stos
xor
push
arpl
and
fiaddl
addb
cmp
sub
dec
shll
and
xor
movsl
sub
or
cltd
shlb
add
loopne
imul
jmp
pop
stc
mov
das
xor
dec
lret
jp
and
push
xlat
xchg
push
jg
fwait
pop
mov
sbb
jnp
inc
pop
xor
gs
add
push
fisubrl
jo
sahf
xchg
das
int
sbb
dec
inc
fincstp
or
pop
push
pop
and
and
mov
dec
cmp
rorl
push
rcrb
scas
sub
lahf
pop
add
in
dec
cltd
push
mov
dec
clc
lcall
mov
outsl
add
and
push
jno
sbb
jecxz
lock
std
imul
loop
lea
jmp
mov
inc
cmp
out
mov
lret
fldenv
pushf
mov
testl
pop
int
pop
pop
push
imul
fwait
push
dec
aam
or
add
sbb
sbb
cmpsl
pop
jo
xor
jbe
inc
inc
rcrl
sti
sub
test
or
add
push
aas
fs
lret
sbb
je
lock
inc
xor
dec
xlat
adc
lahf
bound
ja
clc
jne
cmp
jae
jmp
lock
repnz
push
jg
loopne
pop
and
lock
filds
call
dec
rclb
jmp
mov
xchg
fsubs
dec
scas
adc
ret
mov
adc
dec
fwait
shrb
aas
stos
xor
shll
fidivl
bound
mov
sub
push
xor
push
leave
movsl
dec
and
ret
adc
cmp
mov
loope
mov
in
push
xor
sbb
push
imul
jmp
adc
cs
into
add
or
gs
xor
mov
cltd
dec
push
mov
cmpsl
push
lahf
add
fwait
sahf
out
mov
enter
popa
ficompl
jae
pop
popf
push
std
jge
je
xor
ficomps
call
cli
xor
repnz
pop
pushf
dec
dec
add
enter
gs
das
adc
enter
iret
mov
inc
sbb
sub
xchg
jl
sahf
cli
pop
test
repz
and
pop
stos
cmp
cmc
sub
scas
pop
xchg
dec
sbb
je
or
stos
mov
push
pop
mov
dec
add
push
sub
data16
daa
jp
cmpsb
or
xor
test
mov
je
sbb
out
push
cmp
aad
mov
das
inc
adc
xchg
adc
sbb
xor
shl
pop
push
aad
and
add
cs
lods
adcl
or
inc
ds
scas
push
loop
iret
call
insb
sbb
mov
pop
fimull
in
mov
add
cmpsb
js
cmp
shrl
xor
lods
cmp
into
or
rcll
mov
fstpl
xor
cmp
push
int3
movsl
and
ret
jo
dec
loop
int
jge
in
mov
mov
dec
sbb
js
into
cmp
adc
mov
popf
or
mov
inc
in
mov
cmp
jns
mov
into
sbb
in
cli
dec
lahf
pop
xchg
jo
in
xor
enter
add
movb
cs
xor
cmp
fsubrs
shll
inc
arpl
pushf
iret
out
dec
ficoms
sub
icebp
mov
push
pop
add
out
pop
pop
rolb
pop
pop
shll
pusha
neg
cli
sbbl
or
icebp
cmc
insb
sbb
push
faddl
popf
enter
mov
mov
clc
loop
test
pop
out
cli
pop
dec
and
js
mov
xor
imul
pop
dec
pushf
loop
aaa
push
ret
inc
or
adc
push
xor
in
mov
dec
inc
aad
or
pusha
ds
xchg
mov
mov
jbe
std
stos
dec
xchg
mov
add
add
xchg
fidivs
pop
lret
jb
loop
mov
mov
xchg
adc
jecxz
inc
xchg
insl
mov
or
mov
lret
and
sub
fiaddl
push
mov
mov
lods
fidivrl
cmp
leave
xchg
sub
or
aaa
jmp
jbe
shlb
sti
jno
test
xorb
ja
mov
xchg
subl
jg
enter
xchg
gs
xchg
mov
cmpsl
inc
adc
jl
andb
stos
scas
mov
mov
push
shl
dec
adc
or
repnz
lods
shr
cwtl
das
dec
jnp
hlt
xchg
push
sbbb
rcrb
xlat
in
shrb
xor
int
sahf
sbb
or
decb
push
mov
ljmp
into
dec
jg
sahf
xchg
rcll
add
push
mov
push
inc
xor
inc
xchg
pop
decb
cmp
fmul
jge,pn
pushf
inc
xor
jo
jo
inc
xchg
add
divl
filds
and
push
xor
pop
jbe
daa
add
inc
or
hlt
add
shll
pop
call
das
js
in
call
or
nop
push
les
and
sub
push
mov
jecxz
fdivrl
mov
xchg
pop
aaa
pop
mov
mov
pop
jns
not
xchg
pusha
int3
out
cwtl
mov
add
leave
outsl
pop
clc
dec
fs
cmp
sbb
icebp
push
in
mov
int
mov
and
scas
push
push
sarl
sub
test
inc
popa
cs
mov
and
xor
daa
and
jae
xor
sbb
test
andb
iret
je
out
lea
xorb
inc
inc
xchg
jg
sub
push
add
rol
sub
lret
fdivrs
mov
xor
add
fcmovnb
cmp
xor
fbld
stc
mov
xchg
nop
lds
lods
push
lret
adc
sbb
or
cs
dec
cmp
or
dec
in
pop
jbe
gs
xchg
jle
pop
mov
out
xor
jmp
cmp
std
aam
insb
out
sbb
jne
mov
or
sbbb
testl
mov
out
out
cmp
fs
xlat
pop
mov
enter
sbb
inc
mov
or
popf
into
ss
fistpll
lcall
inc
imul
out
dec
lcall
xlat
pop
subl
mov
sub
cmp
jmp
mov
push
lods
pop
orb
cmp
xchg
lret
mov
xchg
stc
push
gs
pop
test
push
mov
in
mov
sub
push
fdiv
fists
mov
hlt
in
adc
push
add
xchg
sbb
sbb
fistpll
int3
or
loopne
push
es
inc
xor
add
adc
add
out
dec
xor
mov
and
xchg
push
popa
lret
add
add
mov
sbb
sbb
scas
test
push
lea
pop
orl
or
cwtl
and
stos
leave
mov
popf
mov
data16
mov
pushf
or
xor
mov
sub
pop
andb
pushf
jl
cmp
sub
jno
dec
test
push
adc
daa
or
mov
jg
mov
es
aaa
lock
mov
lret
mov
mov
xchg
bound
imul
mov
imul
into
jb
out
scas
sub
out
adc
fnstsw
or
shrl
je
andb
mov
push
mov
cmp
cwtl
je
add
xchg
iret
inc
nop
sti
in
stc
jbe
cs
movsl
xchg
xor
jo
jmp
mov
adc
mov
lret
in
subl
and
sar
pavgw
ret
push
sub
xor
pop
test
hlt
loop
jmp
stos
js
lds
push
in
sbb
loope
orl
sbb
xchg
or
imul
fstpl
mov
js
cltd
addb
mov
in
into
xchg
lret
insb
aad
cli
or
or
aad
pop
cmp
sbb
fdivrs
dec
mull
scas
pusha
int
dec
mov
jecxz
cmpl
test
add
sahf
adc
pop
scas
and
jg
mov
bt
pop
in
aad
or
jo
pop
jmp
int3
or
arpl
add
dec
or
lahf
add
add
mov
push
jge
lods
mov
xchg
sahf
jno
fiadds
mov
jns
andnps
cmp
push
shr
and
jle
lds
cmp
and
popa
add
mov
dec
pop
mov
xchg
jb
adc
dec
fwait
sbb
fs
lcall
push
jl
lcall
mov
pop
dec
out
xchg
inc
xchg
add
or
data16
pop
repnz
xchg
scas
push
std
cmp
push
and
test
inc
jno
outsb
sub
negl
sub
aaa
insl
or
or
sar
fs
jno
pop
fstpt
and
add
inc
sub
bound
adc
dec
aaa
icebp
or
mov
sbb
daa
mov
enter
lret
xchg
stos
pushf
leave
neg
hlt
out
cli
cmp
or
xchg
push
mov
push
or
shlb
mov
jle
mov
out
dec
aaa
cmc
insl
sub
push
std
fidivl
mov
add
std
fmull
add
mov
jmp
insl
inc
idivl
incb
shll
aaa
loope
lcall
fldt
mov
nop
and
imul
insl
insl
sub
arpl
mov
dec
pop
add
and
jnp
sbb
ljmp
push
cltd
mov
ss
daa
test
mov
sahf
imul
fidivl
or
mov
mov
sub
fs
sub
sbb
lcall
push
mov
inc
adc
push
shll
repz
lds
rcl
cltd
cmpsl
ret
out
dec
mov
outsb
ja
ss
xlat
lahf
les
je
add
call
sahf
ficompl
test
mov
js
inc
xor
pop
mov
jge
lcall
pop
cmp
lret
into
dec
gs
add
adc
movsb
or
inc
rcr
jge,pn
xchg
xchg
in
and
cmp
and
icebp
test
mov
jl
jo
add
cmpsb
and
cmp
pop
mov
push
and
push
iret
fcompl
les
and
ret
shlb
adc
lahf
dec
stc
push
enter
inc
inc
jl
shlb
sbbl
sub
jge
add
add
mov
in
sbb
fwait
sbb
push
and
lret
jae
das
fcmovnbe
bound
aad
ds
das
in
push
out
cltd
leave
mov
dec
cmp
ret
push
fisubrl
cmpl
nop
cmp
pushf
lcall
pop
jp
popa
dec
fs
mov
sub
jae
xor
xchg
sbb
iret
sbb
and
ret
cmp
cmp
and
push
aas
sub
add
imul
xor
ret
jb
sub
and
xor
mov
test
stos
xor
out
rclb
inc
lret
cmpsl
push
sub
enter
jecxz
das
adc
or
ljmp
lahf
mov
fnsave
dec
stos
dec
pop
sub
loopne
sub
mov
sub
inc
push
push
adc
sbb
mov
mov
lret
rcrb
mov
cmp
or
movsl
xor
lea
cld
lcall
lcall
or
iret
mov
daa
sub
or
pop
lcall
jns
add
and
push
ret
or
xchg
imul
ret
out
shl
dec
out
mov
fsubs
mov
mov
cmpsl
test
in
or
push
push
mov
imul
in
sub
xorl
mov
icebp
aas
std
jbe
sub
jg
mov
jmp
sub
push
cmp
sbb
test
movsl
pop
pop
push
mov
stos
jnp
jbe
not
rcrb
mov
add
fisttpll
dec
aad
push
and
sbb
les
pop
sti
jo
test
sbb
pop
xchg
push
inc
pop
popf
sub
mov
or
push
sub
inc
mov
mov
inc
rclb
in
flds
or
lds
dec
arpl
ss
jle
push
pop
mov
mov
cmp
xor
lods
shll
add
fiaddl
scas
subl
outsb
rolb
std
int3
jne
xor
cmp
test
pop
xor
xchg
cwtl
push
sub
mov
cmp
mov
imul
inc
xchg
mov
rolb
mov
sarb
iret
scas
lea
xchg
aaa
and
or
imul
push
cmp
and
inc
sahf
mov
jle
pop
jo
popf
mov
sbb
data16
mov
dec
popf
jns
or
adc
imul
sub
inc
mov
shrl
lods
sub
sar
lret
push
es
fstps
jb
and
sub
iret
negb
sbb
lret
jo
xchg
in
rcl
xchg
jecxz
pusha
push
or
mov
cmpsb
repnz
shrl
test
sbb
jg
das
adc
sarb
mov
scas
mov
push
jl
xchg
mov
ret
add
movsl
ja
and
clc
and
jb
jp
inc
xlat
or
daa
mov
push
das
dec
cld
aas
je
outsb
movsb
adc
in
pusha
pop
ret
push
cmpsb
mov
sbb
inc
cltd
cmp
inc
in
bound
push
sarb
andl
outsl
dec
xchg
xor
adc
movsl
or
out
cmp
lret
cwtl
insb
cmp
test
fisubs
jge
jle
add
mov
cmpsl
int3
adc
cmc
ss
mov
cmp
mov
and
mov
mov
popa
or
imul
sub
cs
repnz
mov
scas
cltd
in
and
iret
or
push
in
fstps
push
sbb
mov
adc
and
add
imul
jecxz
stos
jge
push
fisttpll
add
sbb
xor
imul
pop
scas
dec
movsb
loopne
cmovae
movsl
or
cmc
lahf
mov
scas
cmc
sbb
inc
aaa
sbb
xor
xchg
andl
and
sahf
fwait
and
imul
roll
dec
jl
pop
fnstenv
sub
pop
stc
jmp
pop
dec
push
imul
in
mov
pop
cmpsl
xlat
lods
not
jns
or
sub
pushf
push
xchg
lret
aam
mov
xchg
insl
aam
jg
or
jo
in
int
and
cmp
push
ret
cmp
es
out
inc
outsb
inc
or
sti
mov
aas
aaa
push
push
clc
push
dec
jne
popf
push
sub
fs
xor
jns
mov
xor
add
and
and
xchg
push
call
mov
cmpsl
and
inc
xlat
test
fstps
filds
insb
or
cmp
jo
pop
lods
sbb
cmp
mov
or
cmpsl
std
or
les
lret
push
sbb
mov
or
test
shl
loope
xchg
ds
add
lods
addr16
ret
sbb
add
lods
out
pop
lahf
mov
jo
int
lods
pusha
lods
addr16
imul
fdivr
mov
adc
dec
fimuls
popf
pop
adc
clc
adc
jg
xor
lods
xchg
ss
mov
std
cmp
add
test
sbb
cs
cmc
mov
ss
test
out
sub
mov
xor
pop
jge
mov
ds
adc
mov
or
and
sbbl
pop
lcall
jl
iret
js
inc
lret
lds
cli
pop
mov
daa
mov
pop
mov
les
pop
popf
stos
push
adc
push
into
mov
push
fdivrp
cmp
in
enter
inc
dec
loopne
orb
and
lods
adc
inc
adc
scas
cmp
fs
pop
stos
enter
pop
fwait
dec
std
hlt
gs
and
cltd
add
ja
pop
cwtl
andl
stos
dec
scas
test
inc
jl
or
mov
sub
lods
dec
idivb
lcall
mov
dec
sbb
sbb
pop
cwtl
push
jp
cmpsl
add
fs
adc
xor
dec
lret
jp
cmp
enter
dec
fisubrs
repz
call
testb
xchg
sbbl
shl
lods
bound
adc
lret
imul
push
pop
lds
sub
fs
or
push
movb
les
rorb
mov
icebp
les
lret
jno
mov
push
in
test
or
cs
gs
cmp
mov
lret
aad
dec
loop
jecxz
or
dec
pop
shlb
fisttpll
mov
movsb
pop
pop
xor
pop
imul
push
push
fistpl
xlat
jne
cmp
stc
xchg
loop
sub
test
iret
sahf
inc
mov
xlat
roll
add
leave
sbb
sbb
add
mov
mov
cmc
faddl
cmp
push
xchg
repnz
lods
lret
push
jne
test
inc
loopnew
rorl
sub
fwait
adc
cs
xchg
loope
pop
test
sbb
jecxz
push
daa
test
pop
mov
icebp
add
pusha
sub
push
into
mov
rclb
mov
sub
adc
mov
lret
mov
into
xchg
jno
rclb
xchg
ja
fldl
pop
lret
jae
xchg
cmp
inc
cmpxchg
push
sub
dec
jbe
push
adc
loope
insl
sti
mov
cmp
pop
inc
aam
and
fs
mov
sbb
and
movsb
pop
es
mov
jmp
cmp
mov
and
inc
bound
mov
nop
cli
popf
mov
mov
push
lods
push
pop
in
and
jmp
xchg
pusha
add
or
je
add
aad
push
and
ret
fmuls
ljmp
or
sbb
loope
call
adc
roll
mov
mov
mov
inc
sbb
mov
fcompl
mov
push
jns
ds
mov
loop
sbb
mov
mov
pop
sbb
sbb
lds
stos
dec
mov
cmp
pop
lahf
xor
stos
lds
xor
mov
fistpl
fnsave
clc
int
repnz
insb
push
addr16
loopne
push
mov
stc
push
xchg
or
mov
cmp
int3
pop
sub
and
adc
test
mov
cli
clc
roll
sbb
cmp
jae
push
xchg
cmpsb
ds
jl
or
xlat
js
testb
arpl
pop
mov
rorl
sbb
aad
fs
jg
jmp
mov
lahf
lahf
and
pop
jno
cmp
cltd
push
ds
or
cmpsl
jp
pop
add
mov
inc
cmp
aaa
push
fsubrp
aad
jbe
movsl
and
ds
push
jo
sub
popa
mov
push
jo
mov
in
or
pushf
movsl
fs
jno
stc
xchg
dec
jb
test
xlat
dec
cld
or
jmp
lds
or
cmp
or
lods
je
test
shlb
aad
int
jle
xor
pop
jge
sbb
cmp
inc
out
mov
aam
ja
jae
aad
mov
jns
pop
andl
iret
mov
xchg
push
adc
mov
pop
jmp
xchg
mov
jo
repnz
sahf
addl
into
push
fstps
cmp
ficoms
pop
cmp
fsub
jno
xchg
pushf
cmp
andl
xorl
xchg
stos
in
sarl
and
xor
jl
aad
cmc
les
cli
movsb
sub
cwtl
mov
js
sbb
stc
mov
mov
push
cmp
push
mov
add
das
sub
inc
and
sbb
add
adc
in
mov
or
adc
addr16
outsl
hlt
mov
mov
aas
loop
jno
out
fnstenv
mov
cmp
inc
jmp
xchg
jnp
push
int3
in
sub
xlat
sbb
mov
jmp
inc
pop
out
xor
out
test
inc
subb
jnp
add
je
and
push
and
into
rcr
xlat
or
inc
icebp
inc
das
dec
sti
mov
ret
out
ds
push
or
outsb
xor
mov
jge
nop
jo
inc
sbb
xor
or
jecxz
inc
pop
pop
or
out
popa
pop
xchg
mov
pop
xchg
xor
pop
jns
int3
out
sub
inc
insb
aaa
dec
adc
mov
insl
hlt
push
ljmp
movsb
xchg
addr16
stc
popa
xchg
or
scas
jle
cwtl
xor
data16
fiaddl
inc
pop
fwait
cmpsl
or
pop
scas
sbb
jge
adc
movsb
mov
leave
mov
jbe
mov
repnz
test
inc
sahf
test
outsb
pop
jno
outsl
mov
inc
arpl
ds
and
icebp
mov
sahf
fisubrl
sub
adcl
lret
dec
jb
shll
jl
inc
mov
dec
clc
iret
push
mov
jl
mov
call
xchg
add
adc
pop
daa
aad
enter
lret
ljmp
sub
ss
les
scas
aad
cld
sbb
ret
fisubrs
adc
test
cmp
and
and
scas
out
outsl
popf
leave
push
or
scas
sarl
outsl
cmpb
sub
inc
pop
data16
sbb
mov
clc
sub
cli
mov
pusha
xor
das
into
leave
xor
xchg
pop
add
cwtl
mov
inc
lahf
rdpmc
decl
or
test
pop
dec
add
aad
xor
std
movsl
sbb
mov
cli
pop
das
subl
push
lret
or
mov
and
mov
add
xchg
aad
cmp
add
repnz
sub
add
insb
test
mov
outsl
mov
inc
add
je
push
sahf
lods
jae
sub
inc
xor
xchg
adc
jl
sbb
xchg
jns
addr16
cmp
mov
jne
aaa
xchg
adc
and
mov
mov
int3
add
in
mov
das
fisubrs
loop
pop
shlb
fnstsw
popf
jp
jge
in
fisubrl
xchg
loopne
adc
sub
fld
sti
sbb
scas
mov
clc
roll
jle
inc
insb
jb
dec
loopne
push
xchg
xchg
pushl
add
cmc
mov
inc
rcll
lock
add
cmp
mov
dec
adc
in
inc
sarl
cmp
push
and
or
pop
ret
mov
cli
in
xchg
inc
jle
loope
inc
testl
mov
xchg
dec
and
mov
and
ret
mov
mov
fildll
incb
cs
mov
pop
dec
lret
mov
sub
insb
mov
cmp
or
mov
pop
out
xor
daa
xchg
outsl
loop
sub
ror
in
lahf
inc
stc
xor
cmp
push
cmp
mov
aaa
addb
push
mov
icebp
xor
push
movsl
adc
aaa
push
ss
add
sub
add
out
cmp
notb
es
popl
pop
pop
fstps
and
xor
fcmovnbe
xchg
lds
test
xchg
sbb
jno
mov
mov
mov
xchg
sub
mov
cwtl
pushfw
or
repnz
sbbl
test
fnstenv
xor
popf
sbb
sub
test
xchg
mov
or
dec
outsb
fs
jbe
mov
inc
fsubs
and
xor
iret
movsb
pop
je
test
xor
jno
mov
pusha
pusha
jbe
in
out
or
sbb
clc
pop
in
mov
cmpsl
mov
pop
insl
mov
in
add
lret
cltd
insl
or
aam
push
mull
outsb
clc
iret
fstl
mov
shll
call
xchg
xchg
int3
xlat
cltd
mov
pop
es
fcomi
fs
out
lcall
cmp
repz
pop
lahf
sbb
int
int3
jp
test
xchg
stos
add
inc
fsubrl
adc
aaa
pop
mov
shll
fnstsw
jae
jno
mov
mov
pop
ja
mov
out
sti
nop
popa
lock
xor
aad
insl
jmp
jge
outsl
lret
in
mov
pop
xchg
jns
jne
fisubs
je
aam
push
dec
mov
jge
aaa
adc
adc
inc
pop
push
sti
js
mov
inc
jnp
push
mov
fldt
sub
loopne
dec
std
jmp
add
ret
or
mulb
xchg
dec
divb
cltd
mov
lahf
jg
sti
ret
push
push
adc
test
mov
scas
test
mov
or
in
out
stc
jmp
xchg
xor
pusha
add
cmp
jl
dec
rcrl
dec
sbb
lret
cmp
jle
xor
pop
aam
jne,pn
ret
rcr
mov
loop
xor
sbb
jp
sahf
xchg
je
repz
pop
pop
fs
sbb
mov
jns
stos
mov
pop
mov
pop
xlat
aas
repnz
mov
cmpl
cmc
sbb
lock
mov
cltd
scas
test
rcrl
push
xchg
mov
shrb
scas
fldenv
and
rorb
mov
popa
popa
xchg
stos
mov
fdivr
mov
mov
jg
fisubrs
pushf
sub
fdivp
movsb
jge
dec
mov
inc
pusha
iret
cld
mov
xor
in
repz
ss
dec
iret
int
dec
notb
sbb
xor
frstor
sub
mov
mov
filds
bound
mov
sbb
mov
cmp
add
js
nop
and
sti
xchg
mov
lock
sbb
jge
inc
gs
fcmovnb
mov
orl
jmp
stc
inc
cmp
aas
loop
pop
ja
cs
movsl
dec
and
pop
pop
js
movsl
jecxz
out
jmp
sub
imul
stos
insb
test
repnz
or
jmp
pop
fiaddl
dec
xchg
or
lods
cs
or
inc
aaa
nop
arpl
popf
shrb
jno
pop
xor
iret
rolb
and
pop
dec
xlat
mov
add
insl
outsb
fstps
sub
mov
xchg
pop
jb
cltd
jge
sub
shll
incl
sbb
jns
into
or
es
xor
jp
mov
testl
adc
imul
cmovge
cmp
inc
push
jg
cmpb
fimuls
sub
pushf
push
mov
pop
mov
and
sbb
push
dec
rcrb
jb
cmpsb
push
cmp
loop
int
mov
fiaddl
jp
jno
add
mov
loope
rol
xchg
jl
push
inc
push
fwait
aas
repnz
jno
popa
xchg
enter
pushf
mov
push
jge
or
js
addr16
sub
call
dec
dec
jae
outsl
mov
rol
sbb
lahf
dec
ds
pop
jno
mov
adc
fstpl
xchg
and
and
sub
call
inc
pushf
and
pop
pop
leave
repnz
pop
adc
mov
adc
jmp
enter
cmpsl
cmp
jnp
mov
xchg
mov
push
mov
pop
jnp
ret
push
ljmp
insl
or
jmp
das
or
rorl
cmp
fnstcw
or
xchg
push
mov
shlb
aas
push
imul
and
fadds
loopne
cltd
adc
xchg
mov
or
out
inc
cmp
enter
mov
out
mov
cmp
pushf
cmc
rorb
out
arpl
in
adc
xor
mov
pop
or
inc
mov
testb
mov
push
mov
push
stos
daa
cld
inc
popa
ret
dec
scas
in
jnp
daa
shlb
cld
sub
aas
jno
mov
cwtl
fnstsw
das
cli
pushf
movsl
dec
dec
sbb
xor
fsubr
mov
add
inc
pop
jge
imul
sbb
in
sarl
loope
ja
push
pushf
fimuls
sub
les
pop
out
fs
lods
jle
insl
add
movsb
cltd
outsl
pop
jmp
sub
sbb
aaa
ljmp
push
mov
in
dec
pop
sbb
cmpsb
ljmp
divl
add
iret
sbbl
mov
xchg
pop
or
repnz
mov
xchg
sub
add
mov
push
mov
xchg
pusha
xchg
pushf
rclb
adc
enter
jnp
xchg
pop
in
xor
ljmp
in
sbb
shrb
pop
je
push
mov
xor
repz
repnz
ret
mov
fsubrl
or
mov
jp
xlat
mov
push
cltd
cmp
icebp
fistpl
pop
imul
addr16
mov
sub
push
ss
movsb
dec
stc
iret
ret
xchg
dec
xor
dec
xchg
add
mov
adc
ljmp
jl
or
je
push
sarl
out
sub
mov
jmp
push
cmp
stc
sbb
roll
iret
aad
pop
xor
push
into
sub
sbb
xor
bound
pop
xchg
mov
xchg
les
or
popa
jnp
fldenv
fadds
leave
mov
outsl
sub
pop
and
dec
sub
lahf
push
js
dec
cmp
ret
xor
out
in
aaa
jge
loope
aad
mov
cs
xor
sub
xor
hlt
es
hlt
stc
mov
dec
inc
pop
add
mov
mov
mov
or
nop
rcrb
sub
cmc
cwtl
dec
and
pop
mov
adc
stc
popa
sbb
sub
pop
jge
fldenv
add
add
ja
mov
bound
dec
jle
fnstcw
movsb
out
shl
push
sub
xchg
rcrl
pop
add
mov
push
jecxz
scas
repz
pop
aad
gs
stos
sub
repz
repnz
incb
mov
popa
rcl
movsb
cmp
insb
xlat
fidivrl
dec
jl
cmpl
shlb
pop
pop
and
mov
gs
xor
outsl
adc
mov
adc
mov
test
js
xchg
push
test
fidivrs
dec
push
out
pop
cmp
gs
shr
mov
adc
xor
xchg
push
test
mul
inc
and
sbb
arpl
jg
jge
sub
jle
stos
cmc
roll
jmp
outsb
into
inc
mov
jae
and
jg
and
enter
jae
push
pusha
or
stos
sub
outsb
test
cmp
push
pushf
iret
test
mov
ficompl
ret
jp
in
inc
aad
loop
inc
das
outsb
jp
inc
leave
mov
bound
dec
fidivs
cmpsl
pop
fbstp
fidivs
dec
movsb
icebp
test
and
call
push
and
jl
inc
pop
jl
push
push
stos
add
push
xorb
mov
imull
lods
js
sub
and
dec
mov
ds
fcomps
cltd
sbb
cld
add
sbb
aas
sub
xchg
mov
fstpl
mov
pusha
push
adc
xor
mov
in
dec
cld
test
int
sub
mov
popfw
int
stos
popf
jb
pop
push
insb
inc
mov
xor
push
dec
int3
mov
es
or
cmc
mov
sub
mov
xchg
xor
imul
dec
jno
cwtl
pop
nop
sbb
push
mov
jl
das
jg
xor
jns
arpl
bound
lods
jb
lss
push
and
dec
test
dec
jecxz
push
idivl
std
mov
andb
mov
negb
repnz
adc
sbb
repz
jnp
dec
add
sub
sub
insb
enter
mov
sub
test
int
push
aam
jb
imul
in
and
cmp
mov
repnz
jmp
in
je
mov
mov
sbb
xor
and
mov
rep
sahf
sub
jge
adc
mov
repnz
and
call
xchg
cmpb
call
lods
push
jle
cmp
sbb
inc
insb
push
cmpsl
jg
lret
test
sbb
cmp
pop
jns
out
jbe
lahf
xchg
jno
xchg
adc
push
mov
mov
mov
bound
fstps
std
pop
push
jl
fstpl
gs
sbb
test
lret
lahf
xchg
or
test
and
adc
add
cmp
adc
or
popf
and
cmp
xchg
mov
add
in
xchg
cmp
mov
push
stos
aam
outsb
adc
out
test
and
mov
mov
ja
popl
or
xchg
push
push
xor
dec
shr
sub
lods
sub
sbb
fnstenv
sub
out
sbb
mov
push
js
dec
lret
jne
std
adcl
jns
cli
clc
cmp
repz
movsb
xchg
adc
lret
aad
aas
mov
and
jl
and
mov
sub
mov
bound
cmpsl
mov
cli
ret
add
scas
cmpl
adc
xchg
sbb
repnz
out
orb
jmp
or
xor
es
sub
inc
jg
inc
adc
inc
jecxz
sbb
fs
mov
cltd
mov
std
stos
and
incl
lea
xor
jae
mov
gs
in
outsb
rolb
jb
inc
sti
into
xchg
adc
cmp
lcall
cltd
sbb
enter
sbb
outsb
push
bound
or
mov
loope
add
scas
pop
mov
in
sub
jg
arpl
mov
mov
ret
push
xchg
aam
and
sub
xor
mov
cmp
inc
sub
xchg
and
jp
mov
ds
in
pop
shll
and
clc
jecxz
mov
dec
cmpb
sub
nop
adc
cmp
inc
lods
aad
icebp
jb
inc
es
push
and
imul
test
xor
out
loope
test
inc
push
and
fistpl
add
outsb
inc
adc
xchg
mov
or
mov
test
push
popf
fs
xchg
fwait
mov
and
repz
xor
insb
cmpl
aad
in
pop
stc
push
rcl
jmp
adc
pop
or
and
in
scas
or
push
imul
lret
call
xor
sbb
add
call
fs
loop
call
lock
xor
xlat
lods
imul
daa
cmpsl
pop
sbb
fsubrl
sbb
test
das
jbe
push
inc
ds
jecxz
je
mov
ja
fldenv
cmpsb
sub
daa
js
xchg
push
pop
mov
sbb
nop
out
dec
rcl
cwtl
mov
loop
sub
and
in
rcll
and
mov
pop
aad
cmpsl
lock
aaa
sbb
addr16
std
cmp
lods
enter
dec
dec
inc
test
stos
adc
sbb
cmp
sbb
out
lods
jge
mov
fistpl
jle
xor
and
cmp
enter
inc
jno
imul
cmp
lret
test
sbb
jo
push
and
xchg
insl
iret
sub
leave
adc
movsb
int3
sbb
cld
fbstp
adc
adc
xchg
push
imul
test
jecxz
mov
insl
and
mov
cmp
add
sub
push
sub
test
jns
sbb
xorl
pop
lods
ds
insb
or
imul
stos
adc
sahf
sbb
push
mov
jb
data16
icebp
jp
icebp
ret
inc
es
add
and
jmp
and
int3
mov
stos
push
sub
mov
lret
push
out
loope
fbstp
jle
and
call
inc
jmp
sub
mov
push
or
rclb
aad
mov
iret
je
xlat
pop
jnp
sbb
inc
loop
jae
test
insl
arpl
mov
cmovb
mov
out
in
lock
push
stos
std
adc
or
int
je
popa
pop
push
push
inc
mov
aam
dec
ds
into
das
lods
xor
jnp
in
arpl
sahf
xchg
sahf
fs
lea
dec
pop
in
call
cmp
mov
orb
xor
cmc
dec
and
dec
stos
mov
and
push
sub
push
pop
lea
call
popf
inc
cmp
sbb
sub
test
xchg
aas
pusha
lahf
shll
in
imul
or
popa
imulb
fwait
notl
in
nop
movzbl
mov
push
push
pop
xlat
jle
call
loop
xchg
or
pushf
mov
les
cmpsb
ror
inc
jae
outsb
cmpl
push
mulb
inc
xor
rclb
xchg
es
push
hlt
xchg
jle
jo
aam
iret
adc
fs
neg
cmp
out
pop
cmp
rol
pop
and
adc
and
sbb
jo
test
stc
sub
dec
or
jl,pt
push
adc
and
in
fwait
notb
jp
and
insb
scas
test
movsb
insb
adc
nop
shll
bound
daa
imul
lods
popa
loope
out
lcall
gs
leave
fucom
or
adc
xchg
jb
mov
jle
mov
mov
mov
push
xchg
push
cmp
imul
in
mov
sub
ja
clc
jmp
lds
jmp
cmp
jnp
push
xor
popa
aam
jbe
icebp
mov
not
pop
sbb
movsl
cwtl
je
ds
stos
jmp
sbb
cmp
mov
and
iret
fldenv
xor
mov
jbe
icebp
loopne
mov
fdivs
pusha
push
sbb
test
mov
cmp
addr16
lcall
outsl
sbb
push
push
dec
mov
hlt
xchg
nop
or
cmp
ljmp
sarl
inc
shrb
inc
pop
mov
inc
or
inc
add
fwait
repnz
lods
xor
in
add
push
out
mov
sub
mov
pop
pushf
pop
stc
and
test
mov
mov
inc
out
add
jns
gs
mov
inc
sbb
repz
mov
rolb
shll
dec
mov
add
dec
dec
xchg
test
insl
xor
sub
jb
push
adc
shrb
mov
push
fwait
mov
pushf
stos
cmp
stos
das
jnp
push
lret
lods
lods
or
add
xor
bound
xchg
jmp
jb
and
dec
les
je
mov
sbb
inc
je
fdivrp
idivl
mov
cmp
cmp
cmpsl
jbe
ss
or
imul
mov
mov
jecxz
pusha
cmp
sub
sub
pop
addr16
fisubrl
das
aad
lret
mov
dec
inc
nop
cmp
sahf
fs
mov
push
filds
mov
scas
sbbl
lret
sahf
xchg
cmpsb
inc
jle
add
xchg
inc
lcall
mov
outsb
mov
mov
fwait
lods
scas
or
mov
fwait
jne
push
add
xlat
aad
dec
fsubrs
adc
or
les
out
jmp
rcrb
push
push
jp
int
sahf
sar
idivl
sub
stos
mov
cmc
clc
jmp
jmp
push
mul
adc
inc
inc
addr16
adc
sub
pop
das
jbe
jle
xchg
ja
lcall
jb
sbb
stos
pop
scas
rcll
mov
xlat
repz
sub
or
xor
pop
pop
sbbl
mov
jg
mov
dec
loopne
sub
sbb
jp
out
jne
imul
test
push
icebp
bound
jl
jae
mov
ljmp
imul
test
in
cmp
jb
inc
inc
pop
xchg
jb
add
adc
shlb
xlat
icebp
pop
inc
inc
addb
ret
sub
mov
cwtl
fidivrs
adc
inc
sbb
aaa
ret
ror
lret
sub
loop
int
and
adc
push
cmp
mov
cmpl
cmp
loopne
mov
shlb
jle
stos
fdivs
pop
iret
push
mov
mov
mov
xchg
sahf
pop
pop
xchg
cmp
jecxz
sub
cmp
cltd
add
in
out
in
call
mov
push
icebp
cmp
xchg
mov
outsl
mov
aam
jns
xchg
pop
push
sbb
adc
push
push
int
mov
jbe
sbb
mov
cs
adc
gs
frstor
and
pop
cmpsb
push
stc
mov
xacquire
cmc
iret
shlb
popf
movsb
pop
leave
mov
popl
jno
sbb
int
repnz
mov
lea
push
mov
pop
dec
pop
shlb
xor
mov
insb
mov
mov
movsl
cmp
push
and
test
arpl
stos
sub
subb
cltd
repnz
pop
dec
pop
pop
lret
inc
aas
pop
fldenv
cmp
mov
jo
cmpsl
sti
mov
push
int
xchg
and
sbb
push
and
push
stos
inc
imul
mov
xor
lock
sub
scas
jl
mov
dec
mov
xchg
push
dec
push
xor
rcrb
jge
push
mov
jno
xor
dec
pusha
or
pop
adc
mov
xor
sbb
insl
outsl
push
xchg
cmc
inc
bound
xchg
jecxz
stc
cmp
std
jne
les
mov
pushf
adcl
push
in
mov
call
xchg
mov
mov
mov
iret
shr
push
jae
xchg
bswap
mov
pop
pop
aam
mov
call
pop
push
adc
jmp
jbe
outsl
fsts
jno
push
xchg
rcrb
fbstp
inc
ja
add
xchg
xor
push
dec
or
inc
mov
push
pop
xor
pushf
lock
aas
cmp
xor
mov
shll
add
nop
jbe
jns
shl
sti
xchg
push
aad
std
outsb
pop
ficoml
xchg
lock
scas
sub
add
or
xchg
loope
and
or
mul
ret
in
pop
daa
ja
lock
lods
int3
mov
arpl
xor
nop
lcall
pop
das
mov
cvtps2pi
movsb
mov
outsl
scas
xor
pop
xchg
mov
jns
les
aas
js
or
mov
stc
sbbb
push
or
ret
fwait
mov
fmuls
sti
adc
push
push
adc
jno
lods
out
mov
mov
fsubrl
iret
push
push
mov
or
lds
and
jmp
in
mov
mov
push
cld
sub
out
scas
lds
add
shlb
aas
insl
mov
pcmpeqb
sub
out
sbb
repnz
gs
mov
dec
mov
jle
hlt
arpl
int
push
inc
and
xor
xchg
inc
hlt
or
jb
ret
or
cli
shrb
mov
mov
mov
push
sbb
lods
iret
adc
jo
lret
sbb
stos
sbb
stc
sbb
aas
adc
adc
pop
lret
push
jae
mov
ret
push
cli
jne
xchg
jb
mov
mov
xchg
push
fwait
lret
cmpsb
xor
das
pop
mov
test
movsl
push
xor
orb
adc
mov
adcl
mov
iret
sub
movsb
jb
inc
das
or
cltd
mov
and
adc
je
ja
push
xor
iretw
xchg
sbb
lret
ret
orl
cld
xchg
or
dec
dec
dec
int3
faddp
movsb
std
unpckhps
jecxz
mov
outsb
sub
fidivs
pop
mov
xchg
jno,pt
mov
sub
mov
call
cld
jp
shrb
push
popl
scas
stos
fwait
jbe
out
mov
lret
testl
inc
lret
or
loopne
xor
fs
mov
out
push
cmp
cs
mov
repnz
adc
adc
push
pop
xchg
cmp
idiv
cmp
outsb
mov
mov
call
fs
add
das
jp
inc
sub
rorl
in
xchg
dec
dec
cli
daa
dec
out
nop
xor
pop
mov
xchg
test
jmp
in
cld
add
jg
jg
jno
and
in
cmpsb
cmp
je
xor
sub
jmp
cmp
xchg
hlt
scas
xor
cmpsl
push
jo
push
mov
dec
and
arpl
push
sbb
into
lods
mov
std
add
pop
push
loope
iret
sub
jg
jle
xchg
push
dec
mov
repnz
xchg
cmpsb
add
cmp
push
inc
std
in
lret
aaa
jae
push
sarl
test
jl
jnp
or
test
sbb
test
xor
mov
fsubl
arpl
jg
sub
xchg
mov
pop
sub
jb
cmp
xchg
js
mov
in
jnp
or
negb
cmp
je
repz
xchg
stc
sub
inc
xor
lret
push
imul
dec
repnz
lods
outsb
adc
mov
pop
scas
test
movsl
sub
and
mov
orps
out
add
mov
and
add
mov
fs
jecxz
mov
les
or
pop
jg
mov
lock
sarb
out
std
cmp
out
add
xchg
inc
mov
or
dec
push
adc
popa
cmc
aam
jns
and
xchg
jl
imul
mov
ss
add
das
push
faddl
loopne
test
sbb
jmp
dec
add
mov
push
stos
test
int3
nop
idivb
cmp
daa
mov
test
or
inc
stc
mov
pusha
out
adc
fistl
mov
test
cld
inc
push
jb
out
shrb
js
cmp
xor
lcall
das
sahf
stc
loope
ss
mov
jnp
lock
sar
xchg
mov
andb
jecxz
cmp
sub
xor
or
sub
cs
ret
jae
mov
call
popa
add
es
addr16
aad
inc
mov
sbbb
or
mov
lea
push
pop
negl
cmp
popa
daa
aam
xchg
mov
popf
cmpsb
adc
imul
test
or
push
inc
push
out
cmp
cwtl
cmpsb
jnp
je
add
test
data16
jnp
sub
test
mov
cmpsl
jbe
and
or
iret
mov
sahf
pop
mov
push
mov
andl
push
jbe
cs
out
push
mov
pop
xchg
jo
cmpsb
mov
or
cwtl
shll
rolb
mov
loope
mull
scas
or
inc
xchg
sbb
sbb
cmpsb
ds
mov
mov
in
mov
aaa
pop
faddl
hlt
xlat
fidivs
xchg
cmpb
mov
mov
bound
xchg
jno
cmp
mov
jg
mov
push
push
les
dec
cmpsb
outsl
mov
insb
ss
mov
push
mov
ljmp
pop
rcll
cmp
cmp
jl
sub
jo
in
insb
and
jmp
add
xchg
sbb
add
xchg
nop
lret
pop
or
pop
aad
shll
test
lret
xor
pop
jnp
popf
cmp
stos
cmpsb
push
add
in
jg
xor
pop
lea
fisttpll
adc
jp
inc
mulb
push
pop
pop
xor
pop
cmp
cmp
sub
loope
adc
mov
sbb
fildll
jb
in
pushf
out
call
test
insb
shr
add
cld
adc
test
ds
shl
inc
mov
sbb
pop
sub
mov
xchg
or
or
xchg
fildl
ljmp
out
cmpsl
fnstcw
push
and
out
in
dec
mov
icebp
into
jae
sbb
aam
js
addr16
cs
mov
out
js
adc
dec
call
cli
adc
fstpt
adc
push
ss
fwait
and
mov
mov
enter
out
mov
out
xchg
out
lds
push
cmpl
mov
push
stc
dec
add
push
mov
cmp
push
dec
add
mov
pop
xchg
mov
and
push
or
mov
jecxz
lods
cmp
notl
sarb
les
je
jae
lahf
repz
add
cli
adc
out
mov
popf
add
mov
out
cmpb
fisubrs
mov
push
push
and
lods
mov
test
push
mov
inc
xchg
ret
dec
sbb
in
std
jp
jl
dec
inc
jl
sub
loopne
dec
dec
lret
jns
dec
into
ja
dec
xchg
ret
subb
adc
inc
mov
insb
sub
push
and
cmp
movsl
fwait
mov
mov
leave
xchg
mov
fistps
subl
mov
xchg
lahf
outsl
jbe
int3
jne
xchg
or
jg
fisubrs
jbe
lret
test
add
imul
pop
out
in
daa
pop
adc
jl
dec
loop
cwtl
mov
push
les
jle
xchg
imul
jg
mov
fs
add
call
mov
arpl
subl
jl
test
jbe
test
xchg
pop
ret
scas
mov
pop
aas
lret
inc
add
mov
jae
xchg
pop
out
mov
xor
rcrb
popa
xchg
xor
sbb
test
arpl
testl
fisttpll
cli
dec
jno
cmp
filds
lret
js
into
dec
fstps
push
lret
add
enter
mov
cmc
stc
lcall
aas
shr
jecxz
adc
mov
mov
dec
inc
out
or
xchg
sub
mov
mov
das
addr16
mov
dec
mov
lock
jbe
mov
shll
mov
jbe
dec
push
inc
adc
test
cmpsl
imul
pop
pushf
scas
inc
pop
mov
enter
hlt
push
push
stos
lcall
dec
nop
pop
cmp
je
int
xor
sbbb
test
add
dec
jecxz
and
repnz
popa
jge
mov
mov
lret
inc
lahf
shlb
fdivrl
push
dec
bound
rolb
cmp
aaa
int
loop
and
leave
cmp
sub
js
sub
nop
in
aaa
mov
cmpsl
sbb
push
iret
mov
mov
lods
inc
jl
xlat
jnp
out
add
push
jbe
cmp
jmp
push
inc
pop
das
mov
int
jl
in
orl
repz
lcall
pop
aad
es
add
outsb
xchg
mov
test
mov
cld
scas
dec
outsb
or
jmp
shr
outsb
mov
sti
sub
mov
jbe
jae
in
dec
fmull
adc
aad
mov
ret
sbb
mov
sbb
aas
dec
fisubl
outsb
sub
add
xchg
fwait
add
push
bound
xchg
mov
fidivrl
lcall
out
fimull
cmpsb
or
repz
lret
mov
dec
inc
es
test
mov
ret
outsl
cmc
ljmp
stos
loopne
into
out
mov
lds
push
rcrb
jb
inc
jne
mov
xchg
pop
mov
out
xor
aad
mov
cmpsb
pop
pop
in
repz
jge
cmpl
dec
je
push
imul
add
outsb
mov
lods
sarb
test
mov
movsl
push
push
add
adc
cld
push
mov
lcall
push
ret
rcrb
clc
test
xlat
or
fsts
dec
push
cmp
out
cmpsl
mov
in
arpl
sub
inc
nop
mov
adc
inc
xlat
rorb
sbb
xchg
das
enter
inc
std
pop
das
je
ffreep
idivb
mov
in
adc
dec
pop
push
in
gs
mov
jl
jns
sbb
mov
insl
xchg
int
push
shlb
inc
cltd
rorb
xor
imul
scas
scas
repnz
dec
jl
lret
inc
push
or
mov
sub
aas
imul
adcl
cmpsl
arpl
mov
cmp
mov
and
mov
pop
or
hlt
push
ljmp
cmpsl
mov
in
int
adc
mov
pop
int3
mov
mov
or
add
nop
fs
prefetch
add
fnsave
push
fisubl
scas
movsb
jge
mov
aad
dec
xorl
nop
xchg
xchg
sub
les
or
es
loopne
dec
dec
shrb
inc
pushf
pop
xor
sbb
and
outsb
sub
push
repz
aas
mov
add
inc
popa
xchg
cld
pushf
jne
pop
xchg
ja
je
popf
out
pusha
gs
icebp
xchg
mov
mov
add
fs
stc
pop
popa
aam
mov
cmp
clc
adc
jne
inc
es
pop
jnp
mov
mov
lock
sbb
mov
lahf
dec
add
xor
out
or
jns
or
and
jbe
je
test
mov
xchg
xchg
and
popf
mov
jnp
lret
add
sarl
sbb
cmp
fsubs
outsl
xor
pushf
imul
sbb
int
mov
in
idivb
addr16
sbb
sub
sarb
push
popa
mov
pop
push
data16
popf
xor
lret
inc
gs
jns
fsubl
mov
adcl
fdivr
sbb
scas
jmp
aaa
lcall
cmp
sub
lahf
push
push
push
cwtl
into
jne
dec
mov
mov
mov
jle
jbe
lret
cwtl
push
xor
and
or
out
ret
fs
clc
push
jb
cltd
xchg
mov
cltd
add
rclb
sub
out
cmp
call
fnsave
xchg
xor
in
aas
jo
inc
xchg
jne
dec
jge,pn
shrl
sub
in
mov
stos
push
loope
pop
pop
das
dec
outsb
cmp
inc
cld
or
inc
xor
xor
adc
mov
out
pop
or
sbb
sub
pusha
sti
cltd
in
dec
or
mov
cmp
fisttpl
outsb
push
testl
mov
and
xchg
repnz
into
imul
push
pop
sub
movaps
popf
sub
mov
popa
fistpl
test
dec
jb
test
out
sub
adc
repnz
add
frstor
adc
mov
inc
xor
icebp
sub
jge
xchg
and
push
stos
adc
addb
je
es
in
dec
subl
mov
adc
ret
jg
adc
sarb
xor
pop
mov
cmc
cmp
or
adc
aad
lock
sbbb
shlb
daa
pop
test
lock
daa
test
and
xlat
aas
mov
dec
cmpsb
xchg
cwtl
lods
cmp
push
pop
add
in
add
and
push
cmpsb
in
in
sub
jnp
fwait
inc
nop
sub
jbe
mov
sub
adc
add
fstps
cmp
fisubs
mov
mulb
test
xchg
mov
leave
jle
xchg
add
jl
leave
adc
lock
imul
mov
xchg
and
sarb
inc
adc
inc
adc
inc
sahf
jb
mov
cmp
repz
sbb
jecxz
repz
jno
xor
sbb
jecxz
pop
xchg
lret
pop
xchg
pop
cmp
aas
add
das
fnstcw
repz
dec
dec
push
fnstsw
jne
push
sub
flds
js
lock
cmp
orl
mov
bound
mov
out
or
cmp
sub
and
and
xchg
cmp
adc
je
and
dec
cld
cmp
popa
mov
test
testb
lods
fcmovnu
cmc
push
dec
fnsave
jle
les
adc
shll
pop
inc
sub
mov
jb
push
sbb
call
adc
notb
fisubl
inc
in
sub
mov
adc
xchg
dec
icebp
outsl
out
cmp
stc
lds
sub
sarb
jle
adc
cs
inc
mov
popf
cmpsb
push
enter
push
inc
in
xchg
in
ds
clc
lret
rclb
sbb
jb
cmpsl
jbe
insb
sub
int
push
mov
jge
xchg
cld
add
add
nop
dec
sbb
inc
in
arpl
cltd
mov
mov
icebp
rcl
cmp
ret
jg
xchg
addl
xchg
insb
xchg
push
pop
sti
call
loope
adc
ss
cmp
cmp
pop
mov
popf
push
leave
xor
mov
in
push
or
dec
test
push
fwait
in
mov
lret
fisttpll
sub
sbb
js
jmp
cmp
dec
mov
movsb
pusha
and
scas
mov
push
repnz
xlat
nop
test
mov
mov
lahf
mov
pop
push
out
outsb
outsl
jl
mov
add
cmp
cld
sub
xorl
mov
sarb
hlt
int3
hlt
push
cmp
ror
outsb
adc
sti
int3
loopne
cwtl
adc
mov
stc
and
jns
pop
cmp
xchg
inc
inc
or
and
inc
dec
cmp
xor
aad
mov
and
cmp
xchg
dec
mov
pop
ss
ficomps
jnp
ret
out
ss
loop
adc
and
mov
outsb
je
xor
clc
jg
popf
imul
sub
push
leave
in
leave
adc
jae
ja
call
lret
cmp
outsl
inc
push
push
push
jo
sbb
xchg
xchg
add
dec
sub
inc
push
and
cmp
fimuls
pop
pop
adcl
in
add
cmc
testb
mov
mov
and
sarb
or
ss
out
xchg
andl
aam
cwtl
lea
or
jo
cli
sbb
cs
inc
loope
sbb
mov
jo
fiadds
insb
inc
dec
xchg
adc
mov
scas
inc
les
mov
and
add
dec
enter
pop
popa
shl
add
xchg
adc
jp
jo
inc
outsl
sahf
arpl
enter
out
xor
cltd
xlat
aad
leave
nop
and
adc
cwtl
pop
es
dec
sbb
pop
imul
mov
sbb
jg
push
jl
push
or
lock
fcoms
stos
and
repnz
mov
sbb
leave
rorb
cli
inc
and
or
int3
mov
mov
outsb
call
sub
pop
adc
cli
sub
and
les
insl
pop
loopne
mov
or
push
sarl
enter
jp
je
aaa
xor
stc
jmp
pop
add
inc
xor
fnstenv
add
cmp
mov
sarl
xor
aas
shlb
mov
loop
inc
push
imul
xor
push
addb
ret
and
cld
lods
sti
jne
and
and
xchg
adc
sbb
sbb
xlat
jnp
and
movsb
mov
jne
or
lret
mov
pop
inc
dec
push
or
or
cmc
in
add
or
mov
cmc
push
jg
call
xor
popf
xchg
xchg
xchg
xchg
jno
mov
mov
scas
xor
lods
sarl
rorb
or
push
sbb
ret
mov
mov
sbb
add
cld
sbb
push
mov
jmp
scas
cwtl
test
or
in
out
xor
imulb
sbb
jnp
bound
adc
xchg
stc
mov
scas
lods
mov
inc
sub
cmpb
into
ficoms
add
push
jae
ljmp
dec
daa
out
cmp
xor
stos
daa
outsb
jo
jmp
sbbb
test
inc
pop
aam
cs
fs
mov
mov
push
addb
push
int
add
aam
push
pop
fcomip
ret
inc
aam
add
icebp
sbb
cmpsb
adc
adc
xchg
adc
cmp
sahf
std
push
pop
xchg
dec
js
ljmp
xor
inc
mov
mov
push
xor
arpl
push
icebp
cmp
push
cmpsb
or
mov
inc
in
dec
je
in
fdivl
dec
std
push
xor
mov
out
loopne
std
inc
scas
out
loope
cmpsb
inc
mov
insb
lods
shll
cld
adc
mov
sbb
sbb
add
jns
fisttpll
andl
add
stos
ja
sahf
xchg
in
fidivl
dec
push
jbe
loope
sub
mov
fbld
fistpl
xor
ficoms
int
out
cmp
xor
mov
xchg
pop
push
shr
mov
lahf
adc
adc
pcmpgtd
add
mov
sar
mov
aam
push
mov
jl
in
in
jl
adc
test
sub
outsl
out
nop
ror
mov
pop
push
pop
jg
pop
xor
mov
pop
jge
push
je
cmpsb
xor
out
in
xchg
and
in
ja
das
jo
shll
adc
mov
ljmp
mov
hlt
add
cmp
inc
out
js
or
pop
sub
push
rorb
jge
sbb
push
notl
sbb
sbb
test
xlat
cli
out
adc
outsb
ret
orb
repnz
std
stos
stos
mov
fbld
loop
push
out
popf
or
mov
sbb
es
mov
ja
xor
out
jno
sub
xor
leave
int3
stos
add
sbb
dec
jo
push
inc
xchg
sbb
nop
sub
xchg
adc
aaa
xchg
dec
inc
pop
andl
dec
fldenv
setg
cs
in
pop
mov
lods
fwait
test
int
push
mov
jnp
rol
or
xor
mov
ret
lret
test
je
in
popa
aas
movsl
ljmp
insl
push
test
aas
jmp
popf
jp
pusha
cmc
push
push
cmp
sub
adc
andb
ss
sbbl
dec
loopne
adc
mov
daa
enter
and
cmp
je
sub
jmp
push
jp
jbe
cmp
and
xlat
sub
mov
ret
es
ret
xor
jns
lcall
test
idiv
out
arpl
mov
adc
push
mov
sbb
sbb
mov
dec
enter
xor
mov
mov
pop
add
pop
jecxz
arpl
loopne
ret
push
mov
add
hlt
outsl
in
push
jecxz
in
fwait
xor
aam
mov
test
pop
sbb
push
loope
dec
clc
cld
mov
mov
pushf
cmp
shlb
outsb
xor
imul
inc
stos
movsb
xchg
mov
das
sub
jb
or
xor
pop
loopne
bound
addl
or
push
jmp
jne
mov
ret
cmp
in
push
vpmacsww
in
inc
out
pop
sbb
sti
ficomps
test
gs
pop
mov
or
mov
js
sub
mov
stos
ss
stc
fwait
pushf
jg
adc
dec
addr16
idiv
or
xchg
push
jmp
data16
andl
pop
add
adc
in
in
jae
in
sub
xor
or
sbb
test
dec
sub
cwtl
xor
or
dec
sub
data16
out
imul
inc
ds
pop
aad
loop
xchg
dec
vphaddubw
jmp
mov
mov
add
inc
imul
cmp
sub
adc
mov
fwait
dec
pusha
dec
mov
push
jmp
ffreep
inc
pop
adc
dec
mov
lods
adc
and
cmc
or
pop
loope
bound
hlt
int
pop
push
mov
push
movsb
cld
xchg
xchg
emms
push
into
and
fmull
sub
mov
adc
loope
mov
loop
es
pop
xchg
mov
add
sbb
ret
ret
mov
lar
test
dec
inc
push
repnz
decl
inc
faddl
jae
frstor
xorb
mul
push
cmpb
es
scas
mov
jle
mov
addl
mov
adc
mov
and
mov
loop
xchg
cwtl
jge
push
pop
inc
leave
sbb
push
rcrl
jp
je
imul
push
xor
sbb
cld
out
cwtl
lret
cmpsb
and
sub
lret
jge
push
mov
imul
loope
dec
or
sbb
sub
addr16
cli
popf
pop
add
in
or
adc
xor
adc
dec
aas
adc
or
aad
mov
pop
icebp
adc
int3
add
pop
adc
pop
andb
mov
cmp
shll
mov
cltd
dec
add
mov
fists
gs
cmpsb
loopne
in
jae
loope
fld1
adc
xchg
adc
test
jp
push
add
ljmp
xchg
pop
sahf
sub
in
pop
lods
push
cmp
imul
or
ds
jne
adc
mov
mov
xlat
pop
in
sub
mov
scas
sub
sbb
inc
jbe
or
lds
scas
test
pushf
pop
jecxz
test
aad
arpl
cltd
data16
or
cld
add
scas
inc
fwait
jge
fwait
jg
mov
test
or
mull
popa
imul
pop
les
faddl
cmpsb
shlb
lret
into
and
loopne
imul
jge
ror
adc
jne
push
mov
mov
mov
adc
stc
pop
or
repnz
xchg
data16
jp
pop
mov
sub
js
mov
jmp
scas
adc
and
sub
and
adc
xor
fistps
cmc
test
xchg
int
imul
fstpl
sub
sub
jo
ret
add
push
push
dec
jno
add
fiaddl
xor
inc
bound
mov
shlb
sarb
mov
and
imul
aas
or
sub
pop
dec
sub
push
push
pop
sti
add
adc
jle
adc
fsubs
dec
jmp
add
and
outsb
mov
and
dec
loope
sbb
not
mov
xor
ret
scas
aaa
cmpb
cmp
fwait
and
mov
sahf
clc
or
shlb
mov
mov
xor
mov
jb
mov
ud1
fstps
lock
rcll
sub
mov
jbe
hlt
push
jle
addl
or
into
in
jp
or
xchg
shlb
neg
out
dec
push
insb
mov
add
sti
ja
add
test
test
xor
stc
out
out
sub
jle
mov
cmpsl
xor
scas
xchg
pop
or
int
ds
jle
fistpl
lods
xchg
sub
xor
fbld
lock
pusha
dec
gs
aam
cli
jae
out
inc
cmp
push
jo
gs
stos
lods
add
cs
xchg
xchg
inc
jnp
call
jno
cmp
in
nop
and
sarb
add
and
cmpb
add
xlat
fisubs
ret
and
cmc
dec
cwtl
push
mov
imul
scas
lock
repnz
jp
jno
jo
sahf
push
sub
cmp
and
shl
and
xchg
mov
push
xor
dec
and
dec
mov
and
adcl
mov
outsb
popa
mov
and
dec
add
sub
xchg
push
lea
aaa
dec
sahf
mov
or
adc
loopne
lret
mov
shll
push
mov
daa
xchg
add
std
sub
sub
adc
jle
xor
fbld
jp
add
inc
loope
push
orb
das
mov
inc
mov
test
lcall
rolb
adc
icebp
add
in
inc
jle
mov
aam
dec
sub
pop
sub
ret
pusha
jne
adc
neg
ja
jge
or
push
shll
xchg
ret
loope
loopne
cltd
or
adc
es
pop
push
sub
loopne
pop
push
jae
add
jb
test
sti
cwtl
nop
push
sti
subl
inc
adc
testl
dec
cmpsb
inc
imul
jb
int
fmull
das
and
inc
nop
mov
xchg
dec
adc
or
addr16
mov
movsl
mov
cmp
jle
add
out
adc
mov
pop
mov
sbb
clc
in
test
scas
dec
jnp
into
xchg
call
in
sub
mov
int3
int
add
sbb
loope
das
sti
add
scas
shrb
mov
scas
pop
test
and
push
shlb
mov
and
mov
call
std
lock
mov
dec
popf
dec
in
add
mov
add
mov
sbb
mov
mov
xchg
inc
int3
mov
aam
out
fs
test
jge
xchg
or
outsl
push
mov
iret
pop
arpl
jb
mov
push
std
mov
dec
and
dec
sub
push
imul
inc
pusha
cwtl
pop
inc
lds
movsl
xor
ret
ljmp
xchg
mov
jp
and
dec
in
sub
inc
iret
pop
xor
out
icebp
and
lret
sub
xor
mov
inc
and
icebp
imul
jbe
popa
sbb
hlt
gs
sbb
pop
sub
cmp
jg
rclb
sbb
jl
sub
and
pusha
loop
es
lods
sahf
jmp
adc
add
out
and
push
dec
jne
out
andb
push
fsub
lahf
mov
enter
out
ret
lcall
jge
rolb
cmp
cwtl
scas
add
rep
xchg
xlat
dec
fcomps
out
loopne
int
outsb
icebp
dec
cmpsb
push
cmc
cltd
insb
mov
cltd
mov
add
and
xchg
scas
lods
in
loopne
ficomps
xchg
and
popf
mov
fistpl
xchg
jmp
pop
scas
icebp
lods
add
mov
insb
adc
dec
jnp
inc
jns
jge
sub
sub
nop
xchg
cltd
and
lcall
pop
or
add
test
leave
push
cmpb
mov
push
sbb
push
mov
les
cmpsl
gs
popa
cli
dec
xchg
pop
bound
sub
fchs
fs
ss
push
data16
addr16
lcall
popf
cmp
jle
xchg
enter
sbb
int3
mov
add
lret
pop
les
clc
push
add
std
out
jno
mov
mov
mov
popa
jg
fwait
cwtl
adc
adc
or
std
lds
jg
cld
stc
test
fisubrl
dec
mov
pop
mov
xor
mov
mov
inc
push
inc
ficoml
pusha
in
iret
cmp
popf
movsl
movsl
add
mul
mov
outsb
aad
mov
pop
outsl
les
xchg
mov
sahf
jle
pop
mov
push
std
push
stos
push
popa
push
shrl
pop
hlt
test
les
dec
mov
ss
cmp
fcomp
lock
negl
shl
js
cmp
cmpsl
arpl
push
dec
or
shl
mov
lret
inc
shrb
pop
mov
lea
loope
je
pop
mov
pop
outsb
gs
popf
or
mov
lret
dec
fnstsw
inc
sbb
inc
xlat
out
pop
cmpb
adc
add
out
lahf
cmp
sbb
xchg
test
mov
sbb
fwait
cmc
fldenv
movsl
cmp
shlb
pop
leave
cltd
movsl
fimuls
in
mov
das
xor
mov
je
push
mov
loope
popl
mov
xchg
out
loop
add
xor
sbbb
jns
imul
adc
pop
test
push
add
clc
sub
xor
xlat
or
repnz
inc
outsb
mov
movsb
andl
dec
aas
pop
cmc
ds
jo
sub
aam
daa
dec
xchg
pop
inc
test
push
aaa
ret
or
lea
inc
push
mov
adc
ret
sbb
inc
xor
and
cmc
jl
loopne
push
mov
jno
imul
cmp
call
pop
pop
inc
ror
sub
into
popa
push
xchg
fdivr
lods
stos
xor
mov
insl
int
in
jl
test
xor
inc
sub
pop
repz
dec
cmp
jbe
pop
cli
sbb
js
fildll
xor
aaa
in
push
iret
mov
js
push
pop
mov
add
pop
loopne
mov
loop
mov
push
adc
js,pt
repnz
inc
mov
xor
inc
xor
mov
mov
push
add
cli
push
add
push
lahf
popa
scas
movsl
iret
xchg
out
je
test
fidivrs
mov
dec
cli
add
jns
ficomps
int
cmp
jne
jecxz
sub
es
jge
or
push
mov
call
pop
sti
out
push
rcrb
bound
xchg
sub
push
add
jbe
les
in
push
lods
cmp
push
and
pushf
xor
adc
dec
push
mov
push
jo
hlt
jmp
test
push
xor
xor
mov
mov
jno
mov
sub
in
or
popf
mov
jns
cmc
lods
push
jnp
pop
push
xchg
sub
and
or
xor
ljmp
pop
out
sub
sbb
orl
jl
adc
out
jl
and
iret
into
add
mov
or
xor
stos
adc
sub
in
mov
test
lds
xor
dec
pusha
es
or
pop
shlb
cmp
outsb
sub
bound
loopne
ljmp
insl
cmp
push
push
sub
testb
ret
mov
push
add
movsb
or
dec
ss
push
addl
std
mov
pusha
fst
out
out
add
popf
cmc
fwait
jle
fldcw
dec
ret
bound
leave
mov
mov
movsl
mov
adc
inc
xor
xorb
mov
pushf
cmp
mov
cld
ret
movsb
adc
mov
adc
and
je
dec
push
sub
arpl
xchg
jmp
mov
xchg
jle
cmp
cld
fisubs
push
xchg
or
or
cmc
stos
ja
mov
jg
and
jmp
and
js
repz
scas
mov
xchg
sub
sub
arpl
les
imul
and
fsubs
repz
ret
das
xchg
sbb
pop
fildl
test
mov
movsl
cmp
mov
outsb
sub
or
and
in
pop
mov
outsb
cmp
sub
cld
adc
mov
gs
lods
dec
in
addr16
cs
pop
xchg
lcall
mov
sub
and
loop
roll
loopne
dec
pop
pushf
jno
sub
cmc
cmc
push
fisttpl
push
cld
push
fwait
dec
and
pop
push
ret
xor
lea
cwtl
std
xchg
negb
inc
lcall
out
or
stos
out
mov
negl
cmp
clc
lcall
cmp
ret
das
dec
push
push
fstpt
xchg
xchg
scas
xchg
inc
lret
fcompl
push
push
out
pusha
mov
dec
sahf
dec
movsl
test
or
out
stos
inc
inc
adc
sbb
rcrb
cmp
jmp
js
loopne
in
scas
movsl
subl
jb
pop
xor
in
arpl
adc
lods
mov
or
sbb
shrl
mov
push
mov
xor
cmp
and
push
iret
movsb
add
cmp
push
pop
sub
xor
aaa
adcl
shrl
xchg
sbb
inc
into
or
repnz
or
movsl
rol
rcll
pusha
loopne
int3
xchg
mov
cmp
xorb
imul
inc
jnp
or
or
pop
dec
xorl
inc
fistpll
push
inc
icebp
xchg
dec
sub
fsubrl
frstor
push
add
lea
cmpsb
mov
popa
pop
shll
mov
pop
add
mov
add
fs
inc
push
cwtl
data16
xchg
push
adc
push
cmp
or
dec
xchg
test
mov
and
ds
sarl
sbb
insb
and
dec
inc
mov
dec
addb
rcrl
or
xchg
pop
add
add
ss
jmp
call
cld
dec
lods
push
lret
pop
ljmp
fnsave
pop
insl
rorb
cli
push
rcll
cmp
mov
adc
xchg
or
dec
ss
repz
push
xchg
in
ret
cltd
mov
aaa
cltd
clc
jecxz
sbb
cmp
or
mov
sub
pop
loop
test
inc
out
repnz
pop
jge
jge
jnp
adc
jmp
or
xchg
adc
cltd
cmp
rolb
mov
mov
mov
jbe
xor
mov
sbb
shl
in
mov
sti
push
lods
js
push
sarb
jne
xor
cmc
aas
jns
mov
int3
push
cmp
xor
test
adc
lcall
lcall
push
jb
pmulhw
test
mov
cmp
pop
mov
adc
mov
cmpsl
stc
or
ret
lahf
xchg
push
and
jns
pop
jecxz
test
inc
mov
push
arpl
mov
cmpsb
push
mov
or
cmc
leave
inc
in
push
cmp
sbb
dec
outsb
aam
and
insl
sti
outsl
outsl
stc
lahf
sbb
je
loop
sub
xchg
mov
bound
sub
fst
xor
mov
dec
or
cmc
into
outsl
pusha
cmpsl
sub
loope,pt
lods
mov
push
lods
call
lods
xor
cmc
cmpsb
js
negb
lcall
mov
mov
icebp
jo
les
sbb
enter
pop
inc
pushf
test
es
push
popa
nop
mov
jge
jge
mov
mov
aad
fstps
xor
bndstx
loop
ficoml
aad
cmpsb
dec
in
add
test
push
pop
das
push
outsl
mov
ljmp
lods
sbb
jnp
lods
mov
stos
push
mov
jge
mov
pushl
pop
xor
dec
mov
push
hlt
xlat
mov
sub
push
mov
cmpsb
addb
jne
jo
cli
mov
cs
xchg
or
insl
push
jne
jle
stos
xchg
mov
push
mov
xchg
sbb
add
push
lock
std
outsb
rclb
jmp
inc
inc
sbb
mov
outsl
daa
lods
xor
repz
daa
push
inc
test
cmp
dec
fucomip
daa
in
xor
jae
gs
aaa
jmp
aam
cmp
movsl
lods
divb
inc
cmpsb
sub
dec
hlt
xor
add
push
push
out
xorb
lret
sahf
ja
cmpsb
in
jp
or
mov
sbb
mov
inc
and
scas
mov
dec
aas
mov
push
pop
jae
jl
mov
inc
sahf
repz
pop
int
aas
adc
lcall
push
jne
orb
cmp
pop
ja
popa
cli
popf
negl
pop
fstps
ret
push
inc
cmp
stc
cmp
lds
jmp
bound
outsl
or
jne
push
ljmp
jbe
lods
xor
pusha
mov
xor
add
fiaddl
out
rcl
cmp
xor
push
sbb
ja
subb
stos
xor
fidivs
and
scas
pop
fcmovnb
fbld
inc
sub
orl
ret
sbb
xchg
cmc
sahf
dec
fwait
dec
sub
inc
mov
pop
fidivs
out
mov
adc
sbb
pop
lods
fbld
outsb
ret
xor
cmp
jle
cmp
xchg
or
sub
push
std
push
dec
pop
adcb
adc
mov
enter
lea
mov
mov
add
jecxz
call
popf
mov
mov
xchg
xchg
pop
outsl
mov
ds
sub
push
mov
or
lds
push
lock
out
or
mov
cmp
cmp
movsb
adc
pushf
aas
xchg
fadd
hlt
fnstsw
mov
and
fsub
jns
dec
pop
frstor
and
jns
addr16
pop
mov
stos
je
mov
out
cmp
movl
out
xor
daa
std
or
stc
lea
lock
js
aas
cmp
push
inc
jb
jl
and
outsl
mov
lods
sbb
cmc
bound
sub
mov
dec
arpl
dec
outsb
mov
daa
xchg
add
pop
pop
push
mov
mov
dec
jge
lahf
xchg
out
add
rol
fld
dec
pusha
inc
not
mov
stos
add
cwtl
shlb
mov
shlb
jg
data16
cwtl
sbbw
and
xchg
push
push
in
sahf
xchg
imul
aaa
fcmovu
sbb
in
stos
jge
lods
inc
cmp
jns
lahf
mov
nop
shrl
pop
and
mov
pop
bound
clc
pop
dec
mov
fs
mov
mov
pop
cmp
jnp
bound
push
das
add
pop
pop
movsb
xchg
jecxz
lahf
mov
stos
call
add
jno
inc
les
clc
ja
dec
fsubl
mov
cmp
aaa
sbb
dec
mov
push
aaa
fsub
sbb
lret
hlt
loopne
cltd
pushf
arpl
int
inc
sbb
dec
inc
repnz
cld
sub
ret
movlps
or
dec
imul
xchg
add
std
std
sub
lret
repnz
jl
ljmp
imul
je
xlat
fsubrp
call
mov
ljmp
lea
es
or
pusha
adc
jge
xor
and
push
cmp
mov
mov
ljmp
xchg
or
mov
push
adc
push
pop
pushf
sbb
ret
add
inc
or
sbb
inc
xor
stos
push
test
jg
addr16
scas
das
test
test
popa
or
cmpsb
push
add
push
xchg
mov
daa
sbb
hlt
repnz
pop
ret
jmp
or
mov
mov
bound
sbb
mov
adc
js
pop
enter
out
and
mov
cmp
mov
mov
int
in
inc
fcoms
shrl
repz
jo
test
cmp
inc
js
dec
cmpl
test
push
dec
xor
mov
and
loopne
dec
add
cmp
insl
das
cmpsl
rorl
xchg
dec
out
cmpsl
jmp
in
lahf
pop
add
mov
vmovd
in
je
mov
dec
inc
iret
in
out
add
incb
ficoml
lcall
shl
arpl
mov
bound
jle
jmp
sub
or
popf
lahf
pop
orb
pop
clc
sub
scas
mov
bsr
cmp
ret
mov
sbb
outsl
pushf
test
jle
aad
push
icebp
adc
and
sbb
lods
add
test
dec
sub
and
pop
add
lahf
je
iret
jmp
dec
inc
fdiv
dec
loope
stos
or
and
pop
pop
or
loope
es
xor
and
fcomps
cmp
sarl
adc
pop
push
push
pop
cmp
add
cmp
push
popf
jbe
or
jns
mov
mov
cmpsb
inc
inc
test
lock
inc
pop
cwtl
cli
test
mov
cmpsl
int3
lea
xchg
fstps
add
outsl
cld
ror
mov
mov
push
fnstcw
pop
int3
cmp
ljmp
ljmp
sub
inc
sahf
outsb
mov
cmp
add
fldz
or
dec
leave
pop
repz
xchg
push
les
or
nop
mov
xchg
mov
lret
mov
insl
dec
mov
into
stos
xchg
push
insb
mov
in
jb
int3
ljmp
popf
mov
jmp
bound
fbstp
inc
inc
scas
mov
fisubs
imul
jne
xchg
mov
loopne
or
and
loopne
sbb
or
xor
rorl
cmc
jo
cmp
fistl
sbb
adc
mov
js
mov
xchg
rcr
lcall
insb
cmp
pushf
inc
scas
andb
loope
jp
int3
sbbb
imul
jae
sbb
scas
shl
ficoms
stos
rorb
repnz
jae
fmul
jae
add
xor
pop
test
cs
dec
sbb
jno
mov
aaa
dec
push
add
dec
cwtl
mov
ficoml
gs
and
repnz
scas
out
cmc
into
jne
out
cmp
mov
lret
aad
ret
push
sbb
fsts
mov
or
cmp
adc
pop
pop
mov
mov
mov
mov
cmc
inc
mov
testb
and
mov
scas
jnp
mov
insl
adcl
outsb
ljmp
arpl
pop
cs
popa
dec
jp
xor
sbb
shlb
cmp
into
xchg
hlt
xchg
add
dec
lcall
jmp
mov
jp
imul
ds
lea
mov
push
jmp
mov
aas
imul
push
test
jmp
adcb
out
aad
frstor
mov
lds
jmp
jae
xor
icebp
pusha
in
mov
mov
jmp
call
inc
inc
fstpt
inc
jp
je
xchg
ret
fs
sub
ret
sub
repnz
cmc
dec
lock
push
ret
cld
movsb
ret
or
mov
or
frstor
or
mov
aam
cmpsl
in
jp
scas
and
xlat
sbb
cmp
enter
fucom
imul
lahf
test
mov
xchg
pop
fwait
mov
dec
add
sti
push
xor
out
mov
sbb
inc
jl
test
jg
jbe
negl
dec
add
or
xlat
bnd
cli
pop
cmp
jge
pop
sub
ret
adc
cmp
mov
adc
in
mov
pusha
pop
xchg
arpl
scas
adc
lret
jb
sbb
mov
gs
cmp
fdivrl
mov
push
add
aas
and
xchg
scas
mov
or
test
mov
mov
aam
mov
aaa
outsl
or
jge
adc
hlt
ss
sub
jnp
inc
sti
pop
xor
jae
testl
sti
bound
inc
call
mov
mov
imul
push
mov
jmp
inc
enter
jne
rcl
mov
outsb
popf
adc
daa
outsb
movb
in
jnp
mov
and
xor
out
lds
test
mov
es
insb
stos
add
mov
mov
sbb
outsl
inc
lahf
jbe
imul
sub
sub
cmpl
dec
pushf
push
insl
xchg
pop
out
insl
sahf
push
fsubrs
xor
xchg
les
stos
cmpsb
xchg
or
sbbb
pop
aas
lcall
xor
outsl
mov
jle
sub
sbb
xlat
out
lea
jns
and
sub
cmpsb
inc
out
mov
rcr
iret
scas
test
add
movsb
ret
data16
mov
xchg
fstps
mov
ja
dec
push
xchg
fstpt
daa
pop
int
xchg
sub
mov
leave
test
lret
js
rcrb
imul
shrl
repz
ret
sbb
pop
in
pop
ja
pop
pop
mov
sti
int3
outsb
cmp
jl
jae
dec
addl
imul
popf
lret
inc
xchg
and
push
movsb
cmp
pop
adc
and
pop
stos
es
cs
pop
in
fadds
mov
or
rcr
fiaddl
dec
shll
lods
sub
sub
inc
sub
in
insl
icebp
pop
in
xchg
test
fs
jle
xor
mov
fcos
mov
fwait
mov
adc
popa
mov
mov
iret
push
imull
lea
or
xor
mov
dec
adc
dec
pop
loopne
scas
call
cmc
dec
lods
rcl
and
int3
mov
push
lret
adc
ficomps
push
sub
or
pop
ror
addb
sbb
negb
test
mov
push
bound
mov
popa
jo
rcrb
cmp
aam
out
sbb
push
iret
movsl
sub
inc
mov
das
imul
or
pop
iret
in
jbe
rorl
cltd
lods
pop
jbe
fisubrl
mov
jge
jg
mov
jle
cmp
ficoml
push
mov
lret
rcrl
jno
mov
subb
roll
sbb
push
or
mov
cmp
sub
and
or
add
add
sub
adc
adc
add
cltd
sub
xor
inc
xchg
mov
fs
jl
lea
xor
iret
adc
mov
ret
lods
dec
inc
mov
aas
dec
fs
jle
test
cmpsb
aad
adc
scas
cmp
push
jb
aaa
loopne
pop
push
lods
ret
fwait
mov
inc
sub
xor
pop
dec
xor
xchg
addr16
cld
inc
push
cs
mov
push
dec
shr
pop
jae
xchg
jg
sarl
sbb
dec
pop
xchg
out
xchg
pop
shlb
jb
push
or
mov
ja
and
mov
mov
fst
cs
mov
ss
repnz
insb
out
negl
cs
fimuls
or
mov
push
and
scas
stos
jnp
push
ror
add
sahf
push
dec
cmc
pop
push
mov
adc
shl
lret
cli
or
cmc
aad
and
insb
pop
jne
push
pop
mov
mov
mov
jo
mov
mov
out
fcmovnb
out
pop
sbbb
mov
dec
pop
pushf
clc
lds
jo
cmp
mov
ret
rcrb
sbb
inc
dec
mov
aam
fcomps
cltd
jge
push
stos
hlt
cld
inc
insl
mov
xor
push
jns
xchg
loopne
mov
cmc
cmp
subl
mov
rcl
incb
das
cmp
call
or
jp
mov
push
mov
lcall
mov
push
mov
dec
xor
xchg
enter
cmp
loope
xor
fcoml
mov
or
cld
pushf
push
pushf
stos
addr16
loop
in
and
jp
out
sub
pop
or
add
xlat
sbb
scas
and
and
cmp
or
movsl
paddsw
xchg
pop
or
lds
sbb
es
push
pop
icebp
lahf
dec
idivl
xchg
sub
popa
sub
jno
mov
xor
fmuls
pusha
pop
lods
sbb
les
daa
shlb
pop
cmp
pop
out
xor
push
jecxz
test
cwtl
repz
rcr
dec
mov
ja
mov
sub
pop
cmp
sbb
jae
push
push
jo,pt
andb
ss
sub
xchg
cmpsb
imul
lods
mov
push
pop
mov
fnstenv
fdivl
movsb
jp
mov
push
jb
nop
mov
push
fldcw
cli
cmp
sbb
mov
divl
or
lcall
jne
cmpsl
rcll
mov
out
mov
addl
call
add
xor
or
pop
out
push
aad
xor
mov
aaa
mov
sub
lret
std
sub
in
pusha
rorb
add
out
lods
sar
jb
pop
adc
scas
mov
or
outsl
jnp
mov
xchg
push
in
or
stos
sbb
sbb
and
in
add
push
dec
mov
dec
cltd
jns
lds
mov
pop
loopne
call
loope
inc
sub
scas
sub
ficompl
sbb
and
fwait
pop
in
mov
push
lcall
lods
addr16
fistpl
addr16
jb
fs
outsb
test
idiv
inc
fimull
adc
insl
jg
mov
je
xchg
and
adc
out
in
flds
imulb
pop
jae
leave
faddl
sbb
xchg
jge
fiaddl
jbe
jae
mov
fsubl
mov
cli
adc
loope
push
test
fsubrp
pusha
loope
nop
jecxz
in
sub
cs
lods
stc
test
add
push
xor
mov
dec
push
outsb
es
sub
dec
xchg
add
xchg
mov
stos
scas
cmp
mov
dec
mov
inc
dec
mov
or
arpl
pop
cmp
mov
adc
mov
mov
fbld
inc
or
inc
scas
in
mov
in
out
push
js
and
push
xchg
lret
je
js
in
stc
pop
pop
int3
lret
sub
into
inc
and
mov
xor
jbe
rcrb
aas
popa
jg
mov
xchg
xor
out
sbb
push
out
std
fisubrs
push
lods
jbe
enter
loope
inc
adc
repnz
adc
mov
gs
repz
jg
leave
sbb
lods
mov
clc
fwait
hlt
mov
test
mov
push
rclb
jns
ds
popa
and
mov
mov
or
loope
shrl
jno
mov
repz
inc
int
daa
test
andl
xor
cmp
pushf
fistl
cmp
sbb
mov
mov
cmp
xor
daa
subl
rcrl
gs
clc
pop
xlat
sbb
and
outsb
arpl
sbb
push
enter
fwait
dec
sub
in
cmp
dec
mov
aam
sub
xor
jl
xchg
frstor
stc
shlb
gs
xor
adc
jg
mov
ss
mov
mov
jg
sti
xchg
jmp
mov
jb
xchg
lret
push
ss
pop
sti
out
ds
ret
mov
jb
fildl
scas
mov
or
aas
pushf
dec
push
add
daa
and
mov
sbb
movsb
in
daa
cmpb
push
outsb
fs
mov
xor
push
pop
mov
add
int3
bswap
into
push
pop
mov
add
aam
mov
ret
mov
inc
faddl
jo
js
enter
pop
mov
mov
lret
adc
xor
ljmp
pop
in
out
jb
jecxz
cwtl
pusha
mov
in
sarl
mov
pop
xchg
mov
je
sbb
adc
leave
aam
or
pop
mov
icebp
pop
sub
frstor
lret
mov
and
inc
xchg
inc
mov
frstor
lock
scas
shl
lcall
lds
inc
sti
or
in
xchg
mov
add
fmuls
cltd
jne
xchg
clc
xchg
add
outsl
lods
cmp
push
fs
mov
loope
bound
sbb
pop
inc
pop
aam
test
lods
mov
fisubs
stos
loope
aad
gs
fistpl
adc
sbb
dec
dec
test
pop
outsb
out
test
mov
pop
push
jg
xorb
mov
add
ss
jo
xor
loopne
add
fdivr
repz
fisttpll
dec
in
jg
cmp
lret
mov
and
mov
leave
pusha
rorb
mov
notb
pop
sub
cs
ds
push
out
sbb
jbe
mov
nop
cltd
dec
int
mov
shrb
cmpsb
pop
mov
pop
dec
insb
xchg
test
xor
fnstenv
and
int
outsl
adcl
xlat
insb
lret
xor
lahf
cwtl
lcall
out
loope
mov
xchg
clc
cmpsl
or
inc
imul
fstpl
and
fwait
mov
cltd
add
icebp
add
mov
ljmp
push
sbb
mov
sub
sahf
jp
push
push
cs
jle
repz
push
fs
lock
cmpsb
bound
mov
mov
aaa
cmp
add
mov
cmpsb
arpl
inc
mov
jmp
mov
out
cmpsl
push
hlt
push
jle
jno
push
out
cmpsb
mov
mov
lahf
hlt
sub
in
pop
cmp
dec
insb
lcall
add
sub
int
adc
outsl
jns
jecxz
cmp
dec
dec
cmp
cmp
insl
aas
adc
mov
call
and
add
cmp
adc
imul
mov
sub
ret
aaa
jl
fnstsw
std
mov
iret
pop
mov
ds
jbe
jmp
and
add
inc
lcall
push
jp
insb
lea
negl
dec
idivb
jb
out
aas
jnp
and
mov
push
push
inc
cli
push
cmpsb
stc
jecxz
insb
leave
and
sub
cmp
cmp
mov
daa
sub
mov
fdivs
addb
xchg
mov
push
pop
pop
cmp
int3
ret
cmpsb
dec
ds
sarb
push
sub
out
pop
test
cmpsl
push
popf
mov
movsl
adc
mov
jle
and
test
popa
aas
incl
fldl
xchg
push
insb
inc
clc
popa
rcll
sbb
sbb
xor
jb,pn
add
ds
shr
fwait
and
cmp
cmc
jp
mov
lret
outsb
lods
les
pusha
or
test
cmpsb
test
les
lcall
and
jmp
in
push
mov
hlt
out
sub
xchg
roll
outsb
adc
loop
ret
xchg
sub
pusha
pop
stos
lret
fldcw
pop
jmp
fstp
shrb
cmp
out
out
cltd
pop
loopne
ret
lret
les
sub
lcall
mov
pop
xorps
and
fistpl
push
je
std
sbb
fnstcw
ret
imul
mul
out
pop
enter
mov
idivl
xchg
mov
in
iret
adc
mov
mov
xor
cmp
dec
int
push
mov
sbb
rcrl
mov
sub
in
stos
scas
push
inc
loop
cli
xchg
mov
int3
outsl
mov
jge
push
mov
mov
pop
lods
sbbl
sub
push
stc
cmp
push
js
cmp
ja
aas
repnz
aad
shll
movsb
out
and
lock
shll
je
mov
add
push
mov
sti
incl
mov
mov
or
inc
mov
leave
insl
adc
aaa
and
int
js
push
cmp
jge,pn
fdivr
ds
cs
push
data16
popa
insl
lds
adc
addr16
cmp
aas
adc
fstpl
pop
sbb
jl
or
jmp
pop
fadds
sahf
mov
inc
nop
or
mov
and
push
jl
sub
addr16
add
paddd
negb
insb
ljmp
sbb
mov
and
mov
dec
lret
sub
sub
lock
insb
stos
inc
sub
push
lea
sub
mov
mov
out
xchg
mov
pusha
jge
push
xchg
sarl
pushf
bound
cmp
shll
dec
or
cmp
cmp
sti
jle
pop
int
sbb
cmc
in
pop
xlat
dec
or
adc
jb
add
xchg
outsb
or
mov
jp
inc
popf
shll
xor
dec
or
adc
sbb
inc
jae
jnp
rcll
mov
in
and
cmp
shrb
jecxz
inc
popf
pop
sub
outsb
ss
fildll
or
call
push
add
mov
fwait
fwait
xor
pop
xorl
and
jg
lcall
les
mov
and
mov
das
push
xchg
and
aam
mov
cmc
sub
loopne
mov
xlat
mov
jecxz
imul
adc
cmp
arpl
pop
and
push
pop
in
and
xchg
sti
mov
cmp
jmp
pop
shrl
cmp
lods
imul
inc
xchg
mov
lcall
push
out
jns
pop
sarl
mov
sbb
cmpsb
or
jp
xchg
lret
inc
movaps
sub
adc
inc
or
sub
dec
ret
inc
adc
jg
and
stos
lcall
sbb
fdivrs
sub
je
xlat
sbb
mov
and
hlt
mov
inc
adc
test
mov
cltd
pushf
push
jnp
xchg
xlat
push
ljmp
xlat
and
dec
push
push
lock
movsl
and
sbb
in
aaa
mov
test
iret
and
mov
mov
xchg
ss
and
pop
arpl
test
or
mov
fcomp
jns
mov
cmp
jmp
or
fneni(8087
in
sub
in
negl
data16
jb
and
pop
int
cltd
das
add
mov
rcr
or
int
adc
push
dec
mov
mov
xorb
sarb
in
icebp
and
sbb
or
and
adc
jne
cmp
pushf
mov
mov
cmp
pop
bswap
mov
adc
out
inc
hlt
jle
xchg
adc
mov
jmp
mov
call
sub
shll
xchg
outsb
movntps
into
out
jl
cmc
fs
popf
stos
sub
sbb
in
outsl
int
movl
mov
pop
out
lds
loope
mov
push
sti
outsl
lcall
fsts
bound
lret
jge
mov
inc
cwtl
dec
rorl
std
jne
lds
add
add
jge
pop
test
in
or
insl
popf
pop
in
repnz
cmp
mov
mov
out
jnp
rcll
mov
sub
sbb
lcall
enter
jg
xlat
jns
push
add
aas
andb
push
push
mov
jb
add
cltd
sahf
out
in
pusha
test
mov
or
inc
popf
ret
sub
cmpsb
or
gs
rorb
and
lret
push
outsl
push
mov
insb
popa
ret
ja
xorb
in
subb
jbe
mov
cmp
outsl
xor
or
in
cmp
cmp
mov
pop
bound
pop
fwait
push
jg
ret
pop
imul
int
adc
dec
cwtl
push
daa
popl
mov
cmp
jo
xorl
std
nop
or
cltd
ja
outsl
jns
xor
enter
inc
das
mov
cmp
iret
pop
outsl
push
aad
lea
sub
imul
and
dec
cmp
in
sbb
aam
addb
negb
xchg
jl
popa
sub
jl
out
jecxz
xor
mov
or
dec
push
xchg
push
stc
iret
popf
fisubs
pop
lea
jns
lret
mov
and
sub
clc
icebp
js
sbb
test
aad
mov
cltd
and
hlt
xchg
out
sub
movsl
leave
insl
in
idivb
sbb
loope
pop
xor
add
cli
cmpsb
cli
jbe
sahf
adcl
cmp
lods
ficoms
in
sbb
testl
fwait
cmpsl
xor
adc
and
stos
fadd
jmp
cwtl
sbb
test
or
jns
ss
mov
adc
mov
mov
jae
sbb
sbb
test
loopne
fidivrl
push
xlat
fnstenv
add
inc
dec
lods
push
dec
mov
xchg
pop
and
xchg
push
dec
popa
nop
adc
das
lahf
cmp
imul
cmpsb
jnp
test
stos
sub
bound
out
xlat
out
jnp
jnp
sar
movsb
scas
ljmp
jns
in
push
push
lds
fisubl
dec
aaa
inc
test
jnp
mov
cmp
mov
adc
adc
cmp
sub
or
test
mov
ret
mov
test
arpl
xchg
dec
mov
pop
push
xor
dec
insb
push
dec
flds
das
or
jae
fwait
test
insl
cmp
jecxz
or
pop
leave
or
movzwl
rorl
fmull
add
repnz
popa
outsb
pop
mov
cmp
adc
roll
lock
dec
out
pusha
out
imul
push
fdivrs
xchg
mov
loope
xchg
cli
aad
test
in
pmulhw
scas
inc
sbb
dec
int3
scas
movsl
in
cld
and
sbb
or
push
rcrb
cmc
leave
addl
pop
fs
movsl
push
mov
jne
je
mov
mov
fildll
xchg
mov
hlt
cmp
and
icebp
push
out
push
nop
lds
pop
dec
movsb
sbb
and
stc
sbb
xor
lahf
add
or
pop
les
xchg
lret
jnp
pop
mov
push
mov
insl
cmp
adc
out
repz
jno
scas
jmp
enter
or
pop
inc
sti
inc
dec
cwtl
push
inc
mov
sub
add
lods
xchg
mov
fiadds
push
addr16
clc
mov
jns
inc
sub
mov
shrl
cmp
popa
jo
pushf
cmpsb
push
xchg
pusha
sbb
in
pop
movsl
mov
jnp
fs
xchg
cmc
mov
aaa
xchg
or
xchg
jnp
outsb
fwait
jmp
dec
or
xlat
push
sbb
sbb
jl
mov
xlat
addr16
repz
adc
push
shll
in
and
pop
popa
or
popf
adc
std
fwait
mov
les
mov
adc
test
lds
or
xchg
in
xor
pop
sbb
std
mov
aas
xlat
mov
jecxz
xchg
cli
fidivl
fadds
dec
aas
or
fiadds
mov
test
adc
stc
stos
out
scas
and
fimull
popf
dec
fsubrp
push
insb
repnz
ret
enter
pop
jb
jo
aam
add
xchg
jnp
pop
call
inc
pop
jae
fs
dec
call
pop
ret
mov
out
lods
je
xchg
test
movb
lcall
mov
in
outsl
filds
cli
pop
mov
clc
or
mov
or
cmp
mov
mov
dec
movsl
jp
cltd
call
inc
sbb
mov
or
cwtl
or
stos
clc
dec
sbb
pushf
jle
jno
cmp
push
push
rol
inc
sti
adc
sbb
lods
in
or
mov
test
mov
and
je
movsl
xlat
adc
jp
imul
in
insl
orl
in
cmp
dec
in
sbb
ljmp
cmp
jae
mov
sub
stos
cwtl
cs
dec
jb
sub
repz
xchg
mov
inc
mov
int3
fwait
das
cli
outsb
insb
clc
inc
fcmovnb
lods
into
loopne
jg
push
adc
aam
mov
or
mov
xchg
jle
xchg
jbe
mov
out
push
hlt
outsl
lds
mov
jno
jecxz
push
push
inc
push
iret
xchg
insl
in
test
testb
sahf
mov
in
outsb
cmp
repnz
sub
mov
cmp
mov
sahf
js
mov
fsubr
stos
mov
pop
popf
adc
adc
pushf
sub
mov
loope
push
dec
popf
sub
stos
int3
dec
fiadds
jae
jae
dec
out
testl
jno
push
jge
ss
sub
mov
jmp
jmp
jmp
mov
js,pt
xchg
jmp
cmp
divb
xchg
mov
js
and
add
mov
lea
add
aas
sbb
cmpsb
inc
movsl
je
mov
add
fsts
mov
outsb
lahf
test
fisubs
clc
inc
sbb
sub
call
jo
rolb
cmp
pop
cmc
les
in
jb
cld
gs
xchg
mov
push
divb
leave
outsb
pop
test
adc
mov
xchg
jb
test
and
dec
pop
ljmp
insb
dec
loop
test
xchg
sbb
je
xor
loop
fdivrs
fidivrs
sbb
lock
pcmpgtw
lret
push
loope
cmpsl
in
add
rol
sub
test
mov
icebp
mov
out
pop
int
xor
push
pop
test
mov
inc
fbstp
xor
mov
pop
fisubs
rorl
and
dec
test
adc
cmp
xor
mov
xchg
xchg
pop
pop
add
je
lea
mov
icebp
rcll
addr16
mov
cmp
lods
fwait
dec
aas
xchg
adc
push
sub
cwtl
add
cwtl
mov
mov
int3
cmp
fbld
popa
jbe
ret
jl
lahf
xchg
push
mov
stos
push
orl
lret
jmp
rclb
cmpsl
jecxz
xchg
pop
lret
mov
cmpsl
sbb
fwait
insb
nop
scas
pop
sbb
or
sub
sahf
popf
lcall
loope
idivb
out
xchg
push
rcrb
out
and
cs
xchg
out
out
rolb
add
cmp
mov
mov
adc
cmpsb
cmp
fs
xor
cmc
gs
aaa
lret
sbbl
testb
nop
mov
sbb
push
fpatan
xor
push
jb
mov
call
arpl
cwtl
lock
push
shl
iret
lcall
bound
pop
mov
jno
ret
dec
push
xchg
xor
mov
hlt
cmc
cmp
xchg
sub
inc
filds
jle
cli
insl
sbbb
xor
dec
mov
rcll
dec
xor
scas
xchg
inc
xchg
icebp
and
scas
push
sbb
bndstx
sub
or
mov
loop
mov
or
rorl
lahf
out
clc
or
mov
jae,pt
clc
cmp
imul
in
pop
xchg
jle
jmp
xor
xor
movsb
push
fdivp
cmp
fs
stc
cmp
out
lret
setge
and
fdiv
js
push
out
push
rcrl
cli
inc
push
xchg
fcomps
add
inc
ja
movsw
int
hlt
add
add
jne
mov
icebp
add
movsl
test
cmp
and
jmp
xor
mov
cmp
push
cmp
and
outsl
pop
stos
pop
pop
pop
not
popl
cmp
and
insl
imul
stos
dec
dec
test
xchg
lods
cli
add
ror
stos
xchg
js
mov
call
or
subb
xchg
pop
inc
mov
push
cmpsl
sbbl
rcrl
jo
sbb
test
ljmp
mov
rcr
or
mov
arpl
pop
mov
dec
out
sub
inc
out
lahf
inc
add
mov
mov
xchg
pop
sub
ds
push
mov
hlt
add
jae
xor
push
sbb
mov
jnp
fs
xchg
mov
lahf
pop
lds
scas
mov
fldt
in
in
data16
fstpl
rcl
or
int3
loop
fcomps
or
xor
out
testb
sub
sub
xchg
sbb
movsl
sub
scas
mov
xchg
push
xchg
js
inc
testl
sub
xor
sub
in
xchg
bound
xchg
push
push
out
in
lds
jno
or
test
cltd
jle
xchg
or
fbstp
jl
daa
push
pop
jbe
mov
stos
frstor
jno
cs
into
xor
mov
push
sub
sub
mov
hlt
sbb
mov
xchg
lret
xchg
rolb
mov
dec
jo
mov
add
sub
popf
lret
popl
std
add
shl
outsb
or
stos
sub
push
icebp
punpckhdq
mov
inc
lcall
mov
dec
loopne
cmp
pop
out
leave
roll
test
xor
mov
sub
pop
je
mov
dec
jo
call
xchg
pop
stc
inc
dec
jb
iret
mov
pop
jmp
lahf
jp
mov
ret
pusha
inc
mov
in
repz
lods
rclb
and
leave
lods
and
adc
sub
mov
mov
pop
shlb
mov
mov
push
and
aaa
or
dec
std
mov
sub
icebp
mov
sub
mov
and
fstpt
add
xchg
daa
dec
xchg
imul
add
mov
fmulp
mov
aad
xchg
fistpll
jmp
dec
roll
out
and
jge
fildl
add
sub
fucomip
or
pop
repnz
cmp
and
xchg
push
jmp
xchg
mov
cli
idivb
cmp
jge
xchg
mov
icebp
or
jne
iret
icebp
or
xchg
lret
outsb
dec
or
cmpsb
push
jecxz
jnp
mov
push
mov
push
loopne
insb
test
jecxz
and
popa
pop
inc
inc
and
xor
jnp
sbb
jnp
push
imul
push
or
push
and
sbb
ds
jns
pop
push
cmova
mov
xor
xlat
mov
lea
pop
inc
dec
enter
cs
out
fidivrs
mov
add
push
mov
pop
movsl
adc
jp
cmp
push
push
push
movsl
aas
insb
push
or
jecxz
outsb
jg
popf
fwait
popf
mov
scas
jl
push
mov
mov
shr
cmp
and
loope
imul
ret
fdivrs
mov
jle
aas
push
lret
xor
mov
je
xchg
sbb
dec
mov
outsb
inc
xor
imul
ss
fmull
imul
andl
mov
inc
mov
std
jl
lods
add
mov
jne
dec
jecxz
and
adc
inc
pop
sub
lret
cmp
fimuls
lahf
outsb
shlb
mov
outsb
cmp
pop
add
push
mov
mov
sbb
xor
fdiv
pop
push
outsb
xchg
shrb
pop
cwtl
jl
push
xor
jb
inc
pop
fndisi(8087
or
les
sbb
fs
sub
out
mov
adcl
andl
test
add
sbb
sub
sub
in
sub
jne
push
arpl
cmpl
nop
lret
xor
sbb
inc
out
or
cltd
xchg
mov
jne
mov
inc
cmp
xorb
out
push
dec
fidivs
daa
loope
adc
cmp
xor
or
and
int3
cmp
outsl
out
cmpsl
in
inc
sub
inc
test
pop
loop
jne
rcrl
and
mov
and
mov
xor
sub
or
mov
movsl
imul
mov
mov
lahf
jae
movups
inc
dec
mov
ja
xchg
mov
cli
mov
aaa
scas
loopne
loopne
sub
mov
push
data16
jmp
xlat
pop
mov
mov
imul
or
jl
pop
fiadds
pop
cmpsl
or
sub
push
adc
pop
aaa
xor
in
jb
lret
fnstcw
push
movsl
repnz
in
push
clc
in
inc
pop
mov
movb
or
enter
subb
add
sbb
xchg
pop
jg
inc
push
xchg
jb
sub
xchg
sahf
jmp
push
aad
cmpsl
or
inc
mov
addr16
jecxz
mov
gs
push
mov
js
dec
pop
imul
fs
and
rclw
sbb
adc
inc
sbb
sub
stos
mov
cld
fisubrl
inc
lahf
data16
mov
movsl
jecxz
addr16
lock
push
mov
mov
or
mov
stos
addr16
mov
cmp
divl
stos
mov
insl
fsubrl
ss
jmp
and
stos
inc
icebp
test
dec
inc
rcrb
lds
lret
aas
shlb
dec
pop
adc
incl
mov
out
and
jmp
insl
xchg
mov
push
inc
pop
hlt
je
inc
xor
xor
outsl
cmp
dec
push
push
shll
ret
push
or
daa
xor
push
mov
pop
sub
add
loopne
pop
movsl
mov
mov
sub
or
fldl
mov
lods
rorl
mov
icebp
aam
push
nop
xchg
xchg
testl
add
add
cmp
add
shl
hlt
repz
out
cmp
pop
adc
outsl
mov
out
push
inc
mov
je
iret
fdivs
xor
orb
ss
mov
into
jae
sub
push
out
push
jle
pop
icebp
push
data16
lret
or
int3
dec
aaa
jnp
mov
loopne
out
mov
es
cmp
lock
adc
fisubrl
sbb
push
add
fisubrl
test
jecxz
clc
sbb
pop
or
push
and
pop
test
or
mov
xor
pop
xlat
xor
lcall
dec
add
test
sarl
in
mov
push
stos
dec
negb
cmp
sti
fidivl
std
in
and
sbb
dec
fdivrs
mov
and
mov
jb
jo
push
mov
in
mov
loop
data16
into
dec
and
sti
scas
and
scas
push
mov
pusha
lret
pop
mov
insl
int
mov
neg
push
sub
imul
push
push
mov
pop
repz
jle
and
rorl
jb
adc
jmp
movsb
add
dec
repnz
pop
sarl
xchg
lret
push
inc
sub
sub
xor
lock
inc
fisttpl
sbbb
mov
test
mov
xchg
sbb
dec
mov
insl
jns
jg
test
movsb
pop
outsl
sarl
mov
push
sbb
adc
arpl
sub
xchg
inc
or
shll
add
sub
je
repnz
mov
xchg
je
add
icebp
scas
fstp
jbe
push
inc
jecxz
xlat
push
rclb
in
push
jmp
cmc
orl
fwait
leave
mov
clc
arpl
push
ljmp
xchg
jne
gs
shll
mov
lcall
int
aaa
add
pop
aas
out
mov
pop
mov
rorb
lods
stos
cmc
mov
out
jb
xor
fmuls
push
cltd
out
mov
push
js
xchg
iret
mov
sub
test
sbb
lcall
xor
mov
jge
cmc
jo
or
xchg
loopne
icebp
scas
add
mov
mov
in
xor
add
scas
cmc
rcr
jnp
sub
js
and
aam
sti
inc
test
das
jle
add
or
pop
fidivs
xor
dec
mov
sub
test
cltd
rorb
push
inc
adc
and
std
insb
jne
and
xor
bnd
shl
push
and
lods
mov
sbb
mov
push
jno
cld
addb
and
sbb
adc
xchg
pusha
adc
jp
push
cld
popf
push
repz
jecxz
js
rep
jl
cltd
gs
push
and
rorl
fcomip
pop
adcl
cli
mov
in
sub
mov
imul
mov
mov
pop
cmp
pop
and
aad
test
les
mov
in
rcrb
pop
out
or
xor
xchg
jl
in
mov
inc
pop
ja
cmp
push
push
daa
test
jp
jle
mov
loope
popa
rclb
dec
and
inc
adc
adc
adc
adc
inc
sbb
test
jg
outsb
fnsave
mov
cmc
dec
int
mov
or
les
push
cs
je
dec
stos
inc
stos
pop
mov
push
mov
outsl
arpl
nop
mov
imul
adc
push
or
pop
clc
jle
sub
or
shrb
daa
nop
jns
mov
adc
and
out
pusha
push
lock
ret
mov
divb
add
daa
and
ljmp
push
add
je
rorl
push
lods
js
je
inc
push
lods
xchg
mov
rcl
xorb
push
and
and
jmp
dec
push
leave
jb
ljmp
leave
sbb
rorb
aam
xor
inc
mov
adc
mov
jne
imul
dec
addr16
xor
repz
sub
movsl
stc
xor
jecxz
outsb
scas
sub
jp
in
iret
add
pushf
cld
and
adc
gs
cmp
mov
xchg
xor
pop
js
ljmp
hlt
or
aad
dec
mov
dec
insl
outsl
movsb
incb
outsb
jmp
or
popa
xchg
movsb
call
call
push
bound
adcl
aad
sbb
scas
mov
jg
mov
or
inc
inc
sarl
or
xor
and
nop
ret
fstpt
lcall
pop
fsubrl
out
ds
mov
pop
pusha
dec
lods
xchg
test
jbe
mov
les
movsl
pop
pop
cmp
es
sbb
fst
pop
ret
aaa
push
aam
xchg
std
xchg
adcl
daa
inc
xchg
ja
dec
in
lahf
loopne
pushaw
data16
pusha
call
das
mov
push
jg
or
inc
cmp
or
push
ljmp
jnp
je
sbb
js
or
adc
jnp
rcrl
jo,pt
pop
sbb
add
rorl
lds
jge
fwait
pop
cmpsb
scas
jnp
popa
fiadds
dec
ds
ret
lret
cmc
subb
jo
jmp
pop
icebp
pop
mov
cmp
arpl
pop
mov
cmp
out
xor
xchg
ljmp
sub
adc
push
pusha
push
dec
xchg
jge
stos
rcl
lods
out
negb
aas
mov
mul
fucomip
pop
incl
movsl
mov
sub
rorb
adc
xchg
cmp
mov
mov
mov
dec
sub
imul
push
inc
gs
fwait
or
dec
dec
mov
hlt
popf
clc
outsl
or
ficompl
jne
imul
shl
outsb
es
in
rcll
movsl
dec
les
mov
push
sbb
jp
insl
mov
notl
pop
lcall
lock
jg
xor
idivb
dec
insl
dec
inc
call
xchg
push
daa
jb
xchg
pop
sbb
fnsave
lcall
ret
ret
sbb
ja
mov
cmp
cmpsb
test
out
jp
enter
and
test
mov
fs
cmp
rorb
hlt
std
out
sti
ret
in
ret
int3
add
mov
jae
xor
dec
adc
mov
rcll
push
ret
sub
repz
pop
mov
loope
test
sub
jg
mov
add
in
rclb
pop
into
xchg
insl
cltd
pusha
fcmovb
mov
sub
clc
xchg
ljmp
cmp
fdivrl
leave
sbbl
iret
mov
cmp
iret
leave
jmp
dec
int
xchg
fstpt
mov
rep
add
or
scas
jl
xor
stos
aas
adc
es
cmp
jmp
hlt
int3
push
cmp
mov
push
cld
mov
sbb
jecxz
orb
scas
mov
cmpsl
into
mov
addl
mov
cltd
scas
je
push
dec
rclb
loope
out
enter
push
cs
lret
cs
pop
push
pop
mov
lret
xor
and
out
dec
lret
cwtl
lds
das
inc
popf
dec
mov
cmp
movsl
mov
gs
xchg
std
pop
insl
add
inc
pop
test
dec
outsb
out
int
shll
or
lods
gs
and
stos
cli
daa
idivl
fmuls
aad
ljmp
into
lcall
push
and
hlt
adc
mov
sbb
ret
push
clc
adc
adc
fstpl
lock
mov
movsl
pop
jg
or
mov
sahf
jl
xor
data16
dec
or
sbb
clc
push
addr16
cmp
jp
xchg
repnz
cwtl
ret
pop
or
inc
pop
and
cmp
popl
in
xor
cmp
push
addb
movsb
cmp
lret
adc
xor
ret
notl
jge
mov
push
mov
daa
and
mov
imul
aas
or
lods
add
ja
add
xchg
adc
xor
lret
and
mov
cld
jns
jg
or
in
pop
sbb
and
stos
mov
test
dec
rorb
cmp
shrl
pushf
outsb
adc
fildll
mov
leave
jne
xchg
fidivl
into
popa
outsb
lds
movsl
aaa
sbb
ljmp
lods
or
jecxz
jl
shlb
push
into
cltd
mov
pop
scas
or
dec
mov
fwait
pop
notl
sar
cli
cmp
out
in
mov
push
xchg
add
push
xlat
sbb
clc
jae
mov
inc
push
jnp
pop
clc
test
pop
mov
mov
xor
leave
sbbl
data16
mov
dec
sarb
imul
or
sub
lds
jnp
add
or
adc
mov
mov
stc
cld
xchg
pop
or
dec
cmp
add
mov
mov
cmp
sbb
mov
shrw
sub
mov
stos
loope
vmread
in
sahf
sbb
mov
out
sbb
xchg
decl
insb
test
cmp
pusha
in
addr16
fwait
inc
xchg
mov
sub
add
push
arpl
or
ret
dec
imul
daa
pop
fisubs
mov
inc
mov
test
lea
into
sub
push
mov
or
mov
pusha
adc
in
and
pusha
sub
or
sub
jl
mov
dec
popa
inc
bound
mov
pop
xor
pop
or
mov
push
xor
test
lahf
sarb
adc
pop
pop
cmp
call
ljmp
leave
cmp
mov
lods
dec
xor
dec
into
in
shlb
jbe
push
push
fstps
movsl
dec
inc
mov
test
dec
rcll
orb
das
nop
push
ret
or
fisubl
leave
jmp
ljmp
adc
dec
inc
xlat
loop
int3
scas
pop
push
ss
jmp
fnstcw
adcl
loopne
fwait
hlt
insl
adc
popa
or
or
orb
shrl
pop
aaa
jnp
inc
push
mov
mov
pop
movsl
fldenv
inc
push
jecxz
xchg
push
loop
jno
hlt
loopne
xlat
and
arpl
inc
jbe
xchg
xchg
mov
movsb
call
lcall
or
or
jbe
movsb
fiaddl
cmp
xor
int3
out
xorl
movsb
nop
insl
mov
cmp
jmp
out
adc
scas
outsl
mov
pop
mov
mov
and
and
aaa
adc
mov
fisubrl
int3
sub
adc
xchg
cmp
add
and
jnp
mov
jge
iret
sbb
mov
cli
mov
and
in
mov
sub
enter
sub
clc
adc
lea
rcrb
addl
jae
outsl
push
sub
push
mov
inc
sub
xchg
test
mov
insb
or
psadbw
adc
loopne
add
je
frstor
sbb
cmp
pusha
jmp
jno
push
mov
testb
data16
pop
aad
add
push
push
int3
test
mov
outsl
outsl
int
sub
add
cmp
fsubp
fs
sbb
jae
hlt
cltd
xor
les
inc
mov
fsubl
sbb
daa
jno
scas
cmp
add
lea
mov
or
cli
loopne
outsl
stos
sar
xor
daa
mov
mov
imul
push
jne
push
in
push
testb
in
pop
popa
add
jae
dec
and
lea
fnstsw
mov
pusha
jae
inc
mov
or
cmpsb
inc
repnz
and
inc
fisubrl
push
jns
test
xchg
xchg
push
mov
das
test
jnp
aaa
adc
jb
sti
cmp
ja
jnp
add
jl
or
xor
xchg
inc
xor
movsl
stos
xlat
popa
into
es
lret
aaa
jmp
inc
dec
adc
sub
push
pop
call
rorl
mov
push
bound
adc
in
dec
stos
lea
rol
fdivs
imul
test
sbb
arpl
ss
jl
pop
inc
adcb
adcb
int
push
test
push
mov
ret
and
mov
add
pop
mov
pushf
ljmp
dec
push
outsl
push
cltd
fmull
pop
dec
subl
out
xchg
add
dec
fwait
fs
adc
and
sub
into
jae
lods
sbb
mov
inc
ss
shl
push
std
adc
out
ret
lcall
jmp
mov
push
sub
dec
gs
icebp
insl
movsl
fs
fcmovnb
out
push
lahf
in
icebp
adc
mov
or
mov
test
iret
xchg
jl
shll
cli
xor
fisttpll
jmp
push
clc
add
xchg
or
movsl
xchg
es
les
push
sarl
inc
das
lds
fisubs
pop
scas
jmp
or
push
jle
loopne
ds
sub
mov
push
shll
sbb
push
rol
out
iret
shlb
mov
fisttpl
ja
inc
pop
jmp
daa
push
das
mov
cmpsb
dec
sbb
inc
xor
scas
push
push
rorl
pusha
test
pop
push
or
or
jne
clc
dec
lds
inc
out
ret
out
add
fldl
into
cmp
mov
inc
cmpsl
mov
pop
les
push
pop
lock
jns
inc
lret
mov
aad
or
pop
mov
adc
fucomp
xor
arpl
out
jne
sub
in
aaa
sub
scas
jg
std
sub
mov
popa
or
jno
mov
inc
mov
push
scas
mov
adc
sarl
pop
xor
push
mov
and
stc
loopne
repnz
lock
fcomi
lods
test
cmpsl
enter
roll
in
pop
data16
jmp
xchg
icebp
cltd
in
sub
call
push
mov
fadds
jmp
cmc
mov
pop
mov
cmp
push
call
loopne
sbbl
ljmp
mov
pop
jl
mov
push
mov
out
push
sahf
leave
xchg
mov
in
push
push
orb
rcrb
jnp
inc
aaa
mov
js
es
or
mov
imul
adc
or
mov
shrb
out
xchg
sahf
push
es
mov
out
orl
adc
lds
push
shlb
mov
jmp
dec
mov
jp
popf
jno
sub
dec
jg
sti
pop
fimull
lods
xor
push
sahf
push
scas
insl
mov
fcoms
push
fsts
add
sub
dec
add
push
mov
mov
cmp
cs
test
lret
sub
and
loopne
rcl
sahf
cwtl
sbb
sub
mov
push
cld
test
inc
push
mov
es
and
adc
out
sbb
pushf
push
dec
in
stos
xlat
dec
sub
cmp
mov
dec
testb
mov
lcall
jecxz
dec
addb
mov
cltd
lods
out
jp
and
les
cmpl
pop
sub
cmc
inc
fildl
arpl
adc
sarl
add
jp
ja
dec
addb
clc
inc
pop
imul
and
negb
rorl
add
dec
xor
sbb
cs
test
inc
dec
mov
lcall
xor
dec
outsl
xchg
mov
lods
cmp
movsb
lret
aad
pusha
xor
mov
xchg
push
jge
mov
flds
pop
mov
repz
inc
arpl
ljmp
scas
adc
dec
inc
mov
div
mov
push
bound
sub
js
dec
jb
add
xor
testl
push
sub
xchg
sub
mov
pop
lret
leave
xor
inc
xor
shlb
xor
jae
aam
stc
jno
rolb
inc
ja
rclb
testb
in
jle
cwtl
push
mov
imul
setbe
rcr
jnp
test
mov
les
adc
jbe
pop
mov
fildll
adc
shrb
mov
roll
loopne
fdiv
ja
mov
pusha
xor
rorl
jae
inc
lds
cld
aaa
imul
mov
dec
in
test
inc
test
adc
lods
fisubrs
stos
sbb
jb
mov
add
ljmp
mov
pushl
inc
or
rclb
sbb
jns
push
das
cmp
mov
mov
and
mov
xchg
mov
dec
in
add
inc
mov
inc
lea
fwait
js
enter
or
pop
es
mov
cmp
pushf
jo
loope
lea
lret
ret
out
popf
jecxz
inc
pop
arpl
filds
and
ds
mov
leave
mov
jle
dec
inc
shlb
push
sbb
test
add
xchg
lcall
pop
sbb
std
pop
cmpsb
push
jno
sub
cltd
jo
lea
outsb
adc
je
sti
aad
nop
popa
sub
push
rcl
daa
iret
or
mov
mov
mov
stos
ja
and
fsubs
mov
mov
sti
movsl
ds
ja
aas
lea
sub
dec
lret
mov
and
cmp
jbe
pop
outsl
mov
xlat
jg
scas
inc
mov
pop
inc
adc
loope
fisttpl
sub
or
xor
outsl
je
mov
insl
aaa
jne
fdivrl
test
es
addb
in
mov
lock
sbb
xor
in
xchg
sahf
pop
xor
xorb
lock
mov
aas
sub
jae
jl
sbb
arpl
mov
mov
adc
scas
sub
jbe
icebp
addl
sbb
ret
add
cmpl
and
dec
jb
push
mov
xchg
jo
or
and
pop
push
add
or
aam
pandn
mov
mov
fcompl
sbb
fcomps
mov
subb
movb
sub
jle
adc
sub
mov
mov
push
test
pop
sub
jg
dec
call
je
mov
mov
outsb
push
jo
lcall
jnp
push
pop
xchg
cltd
insl
xchg
adc
dec
pop
dec
mov
incb
ds
repz
sbb
cmpl
jno
jle
sbbl
mov
jns
call
insl
leave
arpl
xor
mov
sbb
repz
mov
adc
mov
jge
fnsave
lret
mov
stos
arpl
repz
je
test
jb
adc
or
gs
enter
stc
jbe
iret
mov
in
inc
fucomip
rorb
subb
dec
and
movsl
ss
aad
inc
jle,pt
outsb
and
xor
pop
inc
outsl
mov
inc
lret
xor
or
cmp
jmp
add
andb
cmp
lahf
xchg
sahf
pop
ja
push
out
lds
mov
lock
xor
arpl
movsl
gs
scas
lahf
add
shr
rcll
das
in
pop
shll
fcompl
xchg
xor
ljmp
dec
rcrl
mov
jns
cmp
test
and
cwtl
sbb
jecxz
fisubrl
mov
hlt
cmp
xchg
push
mov
jecxz
adc
push
sarb
das
gs
mov
xchg
mov
sub
adc
rorb
dec
jp
push
fs
sarl
add
aam
mov
ret
add
in
hlt
push
popa
out
mov
in
out
arpl
xchg
xchg
stc
mov
in
sahf
pop
xlat
inc
cmp
and
jg
out
xchg
popa
inc
arpl
sub
cwtl
lods
hlt
fcom
sti
mov
scas
jmp
xor
xchg
jae
push
mov
adc
repz
cmc
add
mov
das
jae
push
xchg
cmc
add
xchg
jne
dec
mov
adcb
fidivrs
adc
push
cmc
repz
enter
dec
dec
xchg
xchg
add
test
sbb
adc
push
dec
movsb
jno
ret
add
mov
jl
rcrb
push
cmp
dec
fisttpl
push
or
dec
inc
inc
sub
es
inc
and
xorl
lods
aas
xor
sbb
push
dec
data16
arpl
pop
arpl
repnz
movsl
sub
push
fisubrl
xchg
jo
dec
les
leave
push
mov
cmp
dec
divb
jmp
ds
or
sub
shl
mov
lods
lcall
rolb
mov
push
and
insb
dec
ja
ds
in
fsubl
bound
andb
adc
rclb
jl
pop
out
std
andb
sub
mov
mov
orl
subl
js
or
jns
push
lds
callw
shll
jnp
jo
lods
xchg
push
lcall
jmp
mov
mov
dec
jo
fsubrl
mov
pushf
mov
add
dec
in
or
cwtl
xchg
sahf
push
and
cmp
cmp
dec
outsl
in
mov
movsb
icebp
push
in
sub
add
mov
repz
scas
adc
movsb
pusha
push
dec
sbb
add
icebp
fidivrs
pop
imul
mov
test
rolb
ja
popa
adc
mov
inc
aad
inc
outsb
sbb
mov
sub
or
les
pop
lcall
sbb
or
test
inc
sub
cli
ret
sahf
push
je
cmp
xchg
push
fldenv
pusha
or
and
popf
jmp
pop
rcrb
push
add
call
or
dec
and
mov
ljmp
dec
sub
mov
jmp
push
lock
xchg
imul
jno
lods
or
into
int3
rcrl
stc
mov
outsb
jecxz
jp
sbb
mov
pop
scas
ljmp
popa
and
pop
ret
mov
jb
mov
fucomp
cmp
xlat
gs
popf
dec
repnz
mov
sbb
sahf
testb
pop
test
arpl
pop
jle
stos
in
sahf
mov
pusha
adc
test
call
lahf
imul
adc
popf
dec
ljmp
xchg
adc
push
addr16
mov
decb
je
inc
insl
fabs
jmp
xchg
and
add
push
jg
add
pop
test
and
sbb
insl
mov
stos
ds
dec
mov
xchg
mov
loopne
arpl
pop
test
dec
add
jns
xchg
insl
ljmp
mov
or
int3
repnz
sbb
sub
leave
adc
ret
sub
fiaddl
lret
fcomip
insl
push
sub
subl
push
stos
sbb
ljmp
add
movsl
aaa
pop
and
sub
sub
je
mov
sub
fistpll
shl
jmp
loop
loopne
sahf
ret
or
push
out
pop
mov
jmp
sbb
jnp
dec
fs
or
or
enterw
cmp
incl
push
in
inc
push
iret
fs
jne
mov
aas
dec
addr16
sbb
dec
fsts
adc
jmp
xor
cs
les
sahf
lahf
pop
dec
popa
test
jl
push
fcom
loop
mov
test
xchg
orb
dec
sub
jo
cmp
mov
fs
xchg
mov
rorl
add
sub
ljmp
jo
sbb
sub
ljmp
fdivl
pop
inc
ljmp
fldt
cmp
roll
imul
popa
push
or
cwtl
push
sbb
inc
dec
jns
jp
shrb
mov
loop
and
je
loope
pop
fdivrs
push
pop
mov
pop
popf
mov
xchg
nop
pop
xchg
shl
adc
xor
sti
arpl
jb
pop
subl
sbb
aam
rcll
iret
or
sbb
mov
xchg
scas
loop
lret
push
dec
fists
mov
aad
leave
jnp
xor
mov
and
lods
shr
jbe
popa
into
sub
ds
call
inc
out
push
cmc
lea
icebp
ficompl
add
push
and
in
inc
cmp
les
cmp
mov
rcrb
fsubrp
jle
and
mov
leave
movsl
popa
cltd
jns
jb
and
hlt
push
add
pop
insb
jg
testb
mov
xchg
xor
test
sbb
clc
push
dec
or
xchg
xchg
add
in
andb
and
dec
lds
sub
ret
into
sub
xor
push
mov
sbb
push
mov
enter
pop
adc
dec
sbb
or
icebp
ret
mov
lods
or
push
stos
mov
rcrl
loopne
rcl
fildl
fidivs
mov
into
sti
aad
add
aam
or
mov
jns
dec
int3
sbb
leave
inc
jge
add
mov
mov
jmp
xchg
out
and
add
cli
sub
inc
bound
xor
xchg
mov
xor
in
pusha
and
fdivrl
inc
push
loopne
fistps
inc
test
les
mov
push
stos
adc
outsl
pop
sub
je
test
add
ret
push
decl
sub
shlb
and
sub
jmp
rcll
and
push
rol
mov
enter
xchg
pop
and
aam
and
test
aaa
in
imul
cmp
xchg
mov
push
or
in
jmp
and
push
sub
fstpt
bound
mov
int3
fxtract
jnp
sbb
in
lret
ljmp
inc
jae
jp
pop
jmp
sub
pop
jne
push
adc
fwait
pop
sbb
movswl
push
enter
popf
out
push
jl
cmpsb
js
sbb
mov
into
dec
mov
push
mov
andl
xchg
push
daa
lea
add
mov
dec
stos
pop
mov
inc
insw
adc
mov
shrb
ficoms
cltd
pop
sub
mov
imul
adc
xor
inc
ret
cltd
test
mov
lods
outsl
pusha
push
lds
mov
ds
lahf
cmc
hsubps
les
mov
cwtl
xor
xchg
inc
jae
adc
test
cmc
int
dec
andl
gs
lods
sbb
lahf
jge
outsl
ret
dec
sbb
mov
popf
ret
jnp
lahf
xor
inc
inc
inc
cmpsb
xchg
pop
and
mov
sub
jg
sub
aad
push
pop
cmc
pop
sbb
cmpsw
jg
push
mov
ds
les
xchg
sub
mov
int3
movsb
inc
sub
repnz
pop
cltd
imul
pushf
inc
jl
dec
js
add
std
mov
rcr
test
leave
movsb
sub
add
mov
inc
je
dec
adc
test
fstps
pusha
nop
imul
and
mov
lock
inc
pop
and
rcl
pop
mov
mov
mov
rcll
mov
xor
or
dec
cmp
fsts
pop
adc
mov
ds
data16
movb
xor
sahf
push
dec
sbb
sub
ret
mulb
cld
cmp
cmp
adcb
jg
and
push
sub
dec
dec
sub
add
loop
adc
cltd
in
jecxz
std
mov
adc
shld
xchg
push
jg
gs
repz
je
ds
adc
mov
pcmpgtw
adc
mov
push
enter
outsb
rorl
cmp
and
in
enter
imul
push
inc
jecxz
shrb
cwtl
jl
cmpsb
push
bound
mov
nop
cs
xlat
lods
rcr
adc
je
or
sahf
cmp
jl
sub
rorl
in
xchg
push
pop
out
out
aad
notb
push
psubb
movswl
adcl
lock
cli
aas
xlat
or
iret
fiadds
pop
nop
test
pop
jb
in
pop
inc
sub
je
test
and
ret
xchg
mov
add
add
jnp
xor
sub
out
mov
push
sbb
mov
aad
in
add
jae
fst
mov
mov
mov
mov
aad
adc
push
add
ljmp
pop
aad
jne
push
mov
repz
adc
cwtl
push
inc
mov
inc
loopne
push
inc
cli
mov
jne
add
call
fwait
pop
cli
adc
outsb
mov
cmp
xor
int
jnp
sub
testl
adc
daa
mov
mov
lea
xlat
sub
std
clc
push
dec
and
mov
mov
idiv
dec
inc
xor
lea
into
popf
push
cmpps
and
sub
mov
and
xor
das
or
add
jne
addr16
xor
and
jbe
mov
mov
enter
iret
xor
data16
pop
cmp
or
pop
mov
xor
pop
lods
std
mov
mov
xchg
mov
pop
fsubrp
repz
push
cld
jge
imul
sahf
loopne
or
jnp
inc
sbb
xor
mov
xchg
add
mov
jo
sub
fwait
pop
ret
jmp
pop
icebp
mov
loopne
jge
lahf
mov
cmp
push
adc
aam
movsl
xchg
jno
ret
add
loopne
adc
jmp
sub
je
push
lea
loope
ret
aaa
pop
pop
outsl
test
xchg
xchg
insl
shll
add
push
or
aaa
sub
test
pop
fchs
addl
shl
mov
cld
enter
inc
add
loopne
xor
jmp
out
testl
cli
pop
inc
mov
push
xsave
sub
andl
stos
iret
imul
sbb
push
mov
lea
inc
dec
push
icebp
in
xchg
mov
xchg
jge
pop
xchg
dec
pop
adc
xchg
repz
sbb
cli
mov
xor
lds
sbb
mov
das
pusha
iret
mov
or
sbb
fcmovnbe
leave
mov
jb
outsl
sbb
pop
inc
or
mov
and
pop
cmpsb
sub
loope
movsl
stc
mov
cmpsb
mov
and
sbb
mov
dec
scas
ljmp
jl
fwait
mov
repz
xchg
rorb
leave
jmp
and
jge
push
add
lock
sub
sub
cmpsl
xor
js
and
and
stos
bound
dec
stos
popf
jmp
out
cs
cmpb
pop
insb
adc
add
movsb
insb
andb
or
inc
jns
test
mov
adc
dec
loopne
inc
ljmp
cltd
xor
ja
enter
xor
mov
sti
mov
nop
push
jnp
and
je
pusha
pop
lret
add
out
mov
sub
imul
pusha
mov
add
xchg
out
pop
scas
inc
sbb
into
sbb
imul
push
dec
pop
test
into
fwait
into
push
rcll
sbb
in
dec
lds
jno
inc
data16
movsb
inc
xchg
and
fs
mov
sub
inc
arpl
stc
pusha
cli
sbb
inc
dec
ds
out
fdivp
pop
nop
mov
push
mov
mov
xor
pop
fsubrl
out
xor
pusha
arpl
xor
xor
xchg
sbb
cmpsl
push
loopne
dec
lods
xor
fimull
call
sub
add
sbb
mov
mov
es
mov
out
aad
xchg
mov
movsb
fcomi
pop
sbb
repz
es
mov
andb
sbb
fs
lcall
cmpsl
scas
pop
les
mov
cltd
std
cmp
xchg
jbe
out
add
lret
ficoml
mov
rcrl
mov
out
mov
or
jno
jb
add
jns
sbb
clc
out
in
loop
jns
fwait
nop
push
popa
sub
cmp
jae
je
repz
dec
jg
int3
repnz
scas
pop
jb
add
out
jmp
inc
notb
jg
out
mov
je
mov
and
popa
pop
pop
loope
jne
sub
mov
pop
mov
mov
cmpsb
push
test
pop
or
sbb
sbb
pushl
jmp
fnstenv
xor
pushf
cmp
sbb
xlat
push
sbb
jp,pt
mov
add
add
push
jmp
mov
mov
mov
fnstenv
jns
lcall
aad
adc
cmc
jmp
pushf
mov
nop
shrl
sbb
in
scas
popl
xrelease
or
add
dec
push
fildll
or
jne
push
gs
les
scas
push
out
sti
lret
fbld
xchg
jge
and
int
dec
cmp
jbe
fs
andl
dec
add
scas
lahf
fidivl
cmp
or
jns
mov
insb
in
lods
xlat
insl
cmp
icebp
daa
pop
movsl
mov
sub
fildll
call
sbb
es
sti
xorb
xor
into
icebp
add
mov
into
int3
push
cmp
xchg
icebp
test
push
dec
dec
pop
outsl
dec
xchg
arpl
add
fs
ret
dec
dec
jo
ss
loop
mov
cld
mov
enter
lock
push
scas
shlb
push
jle
loopne
enter
jle
jecxz
lahf
shl
out
ss
mov
xor
pop
dec
mov
in
push
jl
lods
jne
in
nop
adc
insb
or
movsl
int
ja
je
insl
push
mov
mov
or
jnp
sub
aas
lret
mov
add
sub
ror
mov
testw
ja,pt
sbb
mov
xor
lahf
or
xor
les
lcall
pusha
add
pop
sub
sbb
jmp
rcll
xchg
dec
inc
lds
imul
mov
or
in
push
xlat
insl
rcl
inc
pop
out
movsb
imul
xor
stos
mov
ljmp
or
mov
xchg
jmp
in
adcb
push
jmp
xor
pop
ficompl
sbb
fcoms
fildl
inc
fsubr
icebp
mov
scas
ja
mov
inc
repnz
decl
rolb
iret
test
shlb
mov
aam
in
mov
jl
mov
sbb
gs
dec
movhps
leave
push
icebp
pop
mov
jmp
mov
fiadds
sarb
movsb
dec
mov
sub
fimuls
push
mov
incl
lret
out
cmpsb
and
inc
out
jnp
test
lret
lcall
filds
aam
stc
fsubrl
cltd
jle
loope
mov
jmp
int
hlt
cs
adc
push
aaa
pop
sub
pop
lret
adc
dec
adc
mov
jae
adc
adcl
lret
xchg
xor
sub
fstpl
shll
push
jne
and
cwtl
cmpsl
in
std
mov
mov
add
cmp
or
dec
mov
mov
xchg
mov
btc
arpl
mov
clc
lret
in
sub
jnp
in
mov
outsl
xorb
cmp
daa
arpl
enter
mov
add
lret
xor
or
sbb
sbb
imul
gs
shll
cmc
das
mov
aam
sub
shl
sub
cmpl
sti
jbe
fisttpl
mov
sbbl
hlt
cld
enter
push
dec
dec
and
shll
fimull
pusha
mov
clc
xor
jns
les
push
xchg
test
mov
lods
lods
fs
cmc
les
adc
scas
daa
push
cli
fldl
icebp
sbbb
pop
xor
addr16
push
inc
sub
movsb
mov
adc
dec
adc
ja
mov
clts
push
mov
add
das
push
stc
push
and
jnp
movd
imul
inc
xchg
sbb
loop
jp
arpl
or
imul
daa
sbb
dec
cmp
xchg
or
sub
or
pop
cli
mov
sbb
clc
pop
in
roll
pusha
out
xchg
ror
inc
xor
inc
lods
test
push
loop
cmp
int3
mov
or
lahf
jnp
cmc
sub
out
scas
jne
mov
sub
push
out
cmp
xor
sub
repnz
pusha
mov
cmp
fld
or
shl
sub
aad
addl
fisubl
popl
dec
sbb
ljmp
push
xor
sub
popa
mov
push
dec
push
arpl
stc
fmuls
mov
dec
and
push
xchg
add
stos
insb
arpl
mov
jge
std
daa
enter
fnsave
aad
stos
or
inc
jbe
xchg
int
cwtl
movsl
mov
loopne
push
pushf
aad
mov
xchg
les
sbb
ds
icebp
imul
push
mov
stos
in
outsl
movsb
adc
imul
int3
adc
cld
in
dec
mov
incb
sub
mov
jge
mov
adc
repz
mov
in
dec
jbe
test
sub
les
fldenv
outsl
xorb
das
jle
loopne
call
mov
sbb
out
mov
aam
jne
push
cmp
adc
sahf
push
movsb
bound
cmp
cltd
call
adc
xor
jnp
stos
les
lret
jmp
daa
mov
lock
shlb
addr16
test
sub
testb
jg
push
orl
add
cld
mov
jecxz
push
stos
out
bound
arpl
sahf
enter
test
push
sub
and
icebp
mov
xchg
daa
mov
cmpsl
fwait
cld
movsb
jge
fisubrs
icebp
or
dec
lahf
cmpsl
idivl
add
jae
repnz
fbld
imul
fwait
lcall
sahf
or
mov
pop
inc
popf
add
adc
outsb
jns
mov
or
mov
xor
pop
sub
arpl
sub
rclb
enter
out
or
sbb
cmpsl
sbb
rcrb
and
lahf
mov
xchg
cltd
jae
push
cmp
arpl
sub
add
mov
mov
repz
test
filds
mov
and
movsb
loopne
cmc
xor
flds
aas
and
sub
mov
mov
inc
int
cmpsl
push
mov
mov
cli
pop
das
dec
rcl
rclb
es
pushw
in
insl
mov
mov
and
push
pop
cwtl
mov
clc
adc
jno
mov
arpl
lcall
cld
push
pusha
stos
test
fwait
jge
lods
mov
dec
inc
fwait
je
mov
or
loopne
movb
mov
jae
cwtl
xchg
loope
or
popf
push
cs
push
mov
push
out
jmp
sarl
cmp
jl
sub
or
hlt
push
xchg
mov
in
fs
xor
jge
adc
and
nop
cli
in
subb
add
gs
movsb
or
aad
xchg
rorb
bound
xor
and
shl
push
xor
inc
mov
repz
ljmp
inc
ljmp
lea
cmpsl
jae
xor
loop
enter
loope
add
pop
add
jmp
sub
xlat
rep
sbb
add
out
out
adcb
mov
xchg
jno
ljmp
mov
cmpsb
mov
fscale
mov
dec
pusha
lahf
jp
loope
bound
cli
das
adc
test
push
push
ja
mov
inc
sbb
call
add
mov
lds
xor
push
outsb
sti
es
mov
mov
ljmp
push
mov
inc
mov
lock
cmpsb
add
pop
aam
jae
dec
adcl
in
add
popf
pop
mov
lret
jns
fwait
or
lret
add
mov
sub
fistpl
sbb
ljmp
push
jno
inc
cmp
pop
mov
adc
fimuls
mov
fidivs
inc
mov
xchg
inc
stc
insb
movsb
imul
cmp
push
lds
cmp
pusha
mov
jge
cmp
ja
and
repnz
adc
sbb
rcll
adc
hlt
jg
mov
or
mov
inc
lds
je
mov
inc
jecxz
cmc
pop
mov
pop
push
test
arpl
addr16
mov
aam
pop
sub
xor
int
sub
je
sub
cmc
addr16
push
or
loop
pop
pop
pop
loop
jge
mov
cmpsl
out
or
sti
jbe
xchg
imulb
pop
mull
push
fimull
aas
outsb
mov
ds
mov
aas
ljmp
loopne
jb
inc
call
cmpsb
stc
sbb
aas
jb
gs
loop
xchg
shrb
cmpsb
sahf
divb
out
shlb
xchg
fs
pusha
cmp
xchg
pop
les
xchg
jae
jge
cs
mov
mov
aad
into
popf
incb
mov
fdivrs
fbstp
lods
adc
repnz
icebp
xchg
pop
aas
mov
dec
fwait
fwait
mov
add
jg
jle
les
leave
shlb
mov
inc
jecxz
jbe
js
mov
decb
movsl
cmp
inc
jg
add
cmp
addr16
cvtps2pi
les
movsb
int3
pop
and
lahf
fneni(8087
pop
inc
outsl
out
std
xor
sub
mov
pop
jecxz
sbb
or
mov
test
test
jl
es
lret
out
jne
cltd
pop
iret
mov
mul
xchg
xlat
ja
mov
push
or
and
aam
lcallw
sbb
add
xchg
fstl
push
jb
loop
js
jp
ja
ret
xchg
icebp
mov
int
mov
xchg
pop
insl
mov
jmp
push
jecxz
adc
and
xchg
dec
sub
lcall
leave
pusha
jmp
mov
scas
add
movsl
ja
pop
mov
sarb
test
jg
rol
in
insl
pop
adc
adc
lret
sub
loopne
sbb
out
or
mov
insb
adc
int3
sarb
mov
out
lods
sbb
and
push
ret
mov
repz
inc
cli
imul
sti
jg
inc
dec
jbe
lea
jl
cmp
xchg
loopne
aad
pop
sti
mov
in
jecxz
and
add
cmpsl
inc
mov
dec
inc
pop
sbb
cli
lods
mov
jle
and
fiadds
push
jbe
pop
and
sub
sbb
sub
and
xchg
scas
pop
push
gs
sub
jg
push
imul
xchg
or
push
add
push
insl
jne
jp
sub
or
adc
lock
adc
in
incl
xor
pop
push
sbbl
imul
jne
ret
xchg
pop
addb
cltd
add
fs
arpl
fs
mov
inc
lahf
cltd
jecxz
or
js
pop
add
xor
cs
mov
imul
push
loop
sbb
movsb
lcall
cmp
cwtl
cmp
jno
mov
ret
mov
lds
sbb
push
lods
out
loopne
icebp
cmp
insl
fsubrs
out
xchg
sbb
popa
pop
or
add
aas
or
fidivl
xchg
pop
sbb
lock
sub
mov
and
lret
cmp
jb
push
xchg
mov
jns
mov
jne
ja
fdivrs
push
addr16
cmp
sub
in
cmpsl
dec
pop
xlat
xchg
dec
and
fcmovb
sub
rorb
push
lods
out
std
ss
loope
and
fwait
mov
lds
mov
inc
fdivp
push
push
scas
or
aam
shlb
icebp
fistl
sbb
lret
stos
inc
cmp
mov
fmuls
aad
aas
gs
sbb
addl
mov
in
dec
shll
cmp
ljmp
mov
das
lret
push
fs
xor
test
pop
shl
jb
push
xchg
mov
int3
inc
imul
das
adc
mov
pop
fwait
shll
data16
xor
xor
nop
stos
xor
lret
js
inc
lret
loopne
jp
sar
mov
mov
mov
sbb
jnp
movsb
add
lea
stc
lret
in
adc
ja
mov
xor
movaps
sub
sbb
hlt
sbb
push
negl
clc
cli
sbb
or
adc
aad
pushf
jp
ljmp
mov
pop
popa
repnz
push
mov
sub
mov
sbb
adc
add
inc
pop
movsl
pop
fmul
les
mov
jne
test
es
pop
ds
push
and
aam
dec
dec
popf
cmp
cmp
mov
mov
mov
dec
lods
leave
push
and
subl
adc
and
fldcw
out
sbb
mov
lret
popa
or
leave
movsl
stos
in
dec
fsubr
out
shrl
popf
push
dec
push
sbb
call
je
leave
andl
or
dec
jae
dec
push
jmp
or
subl
shll
loop
inc
or
fistps
out
dec
dec
push
cli
jmp
cli
cmp
cmp
push
hlt
xlat
roll
sub
xchg
aad
shll
std
jle
and
jecxz
mov
pop
ret
nop
shl
fcompl
sbb
in
mov
add
jne
lcall
and
es
push
xchg
xchg
aaa
xlat
sub
jb
dec
cltd
repnz
xchg
sub
or
and
xorb
xchg
adc
sahf
pop
mov
repnz
sahf
push
or
pop
and
les
ret
push
lods
in
leave
cmc
sahf
pop
popf
dec
nop
pop
call
scas
dec
aad
jo
scas
or
cmovs
mov
adc
and
stc
std
iret
dec
stos
xchg
push
loopne
push
std
jle
test
iret
xchg
jmp
mov
int3
adc
aad
xchg
lea
movsb
inc
mov
cmp
sbb
pop
scas
inc
pop
jbe
repnz
push
push
lods
mov
outsl
adc
sbb
jl
insb
xor
or
lods
sbb
sti
das
adc
pop
dec
adc
aas
in
xchg
adc
mov
imul
enter
jo
mov
mov
mov
ds
mov
mov
mov
xchg
ss
xchg
add
movsl
ficomps
add
push
lea
adc
sub
shrl
mov
cmp
jle
dec
cmc
repnz
xchg
adc
jmp
push
les
adc
mov
push
das
push
cmc
loop
jp
push
rorb
movb
ljmp
scas
adc
mov
pop
push
sub
inc
xchg
int
push
pusha
outsl
lods
jmp
mov
hlt
loop
insl
mov
pop
inc
or
xor
sub
inc
push
xchg
mov
popf
push
and
sub
lcall
dec
add
jle
mov
imul
lock
xor
xchg
or
rorb
clc
xlat
mov
adc
int
ja
les
outsl
andl
dec
fwait
es
aam
pop
out
aas
dec
push
jns
xor
xchg
dec
jg
scas
push
cmp
adc
and
sahf
push
repnz
push
mov
nop
scas
mov
cmpsb
add
push
push
inc
mov
cmp
or
nop
into
mov
aaa
je
fimuls
mov
outsl
fwait
imul
lret
scas
cltd
lock
stc
popa
mov
sti
cmp
jge
cld
fistpl
mov
sbb
imul
and
nop
lret
int3
js
mov
sbbl
and
push
ja
xchg
in
xchg
sub
push
cmp
rcll
pushf
xor
dec
in
and
inc
mov
pop
data16
or
clc
rcl
cld
xchg
int
adc
addr16
add
jl
jp
pop
movl
sbb
test
fs
xchg
gs
jnp
pop
mov
lret
push
inc
test
clc
add
arpl
mov
add
mov
mov
cltd
fsubs
stos
sub
inc
mov
mov
cltd
mov
ss
mov
sbb
enter
adc
xchg
sbb
jnp
sub
push
adcb
jne
push
mov
and
aam
dec
adc
dec
pop
out
push
movsb
dec
orl
push
lea
and
inc
lret
inc
or
sub
inc
push
dec
leave
sbb
mov
loop
cmp
jecxz
push
sbb
mov
jp
and
pusha
andb
add
dec
push
insl
insl
aas
mov
inc
popa
push
jns
cmp
repnz
dec
add
mov
lds
xchg
ret
into
or
cmp
adc
xor
jo
pusha
mov
mov
add
push
lret
pop
outsl
test
bound
xor
jns
mov
outsb
mov
movsb
and
rcrb
sub
ret
mov
cmp
popa
add
push
xchg
test
jbe
and
out
cmp
movsl
xor
hlt
xor
jle
sub
cli
aaa
add
mov
mov
and
repz
pop
push
xchg
mov
push
dec
cltd
push
fcoml
add
cmp
out
mov
or
inc
or
icebp
pop
lods
stos
int
popf
sub
ljmp
sbb
cmp
jne
pop
add
push
cmp
insl
icebp
fstl
add
pop
les
daa
or
fwait
push
sbbb
pop
int3
les
fwait
jnp,pn
push
mov
fmuls
icebp
inc
sbb
loopne
scas
sub
in
stc
insb
loopne
or
jnp
dec
cmc
pop
mov
add
mov
xor
pop
repz
push
pop
and
cmp
push
jns
mov
dec
iret
and
jle
lock
xor
scas
inc
shrl
aam
loopne
mov
sub
lods
dec
mov
inc
mov
xor
test
xor
sub
imul
inc
stos
cwtl
repnz
in
push
dec
xchg
pop
add
dec
pop
mov
addr16
ss
daa
jns
sub
aam
lock
cltd
fcomps
cltd
add
in
leave
fwait
sahf
clc
unpcklps
mov
mov
movsl
ja
mov
xchg
lret
daa
cmc
hlt
jmp
cmp
test
or
pop
imul
cmpsb
and
xchg
ret
in
mov
pusha
in
sbb
mov
add
cmc
mov
fdivrp
xchg
mov
lock
sub
int3
out
or
aam
mov
add
xchg
aas
xchg
adc
sub
into
add
pop
cmp
inc
adc
int
push
pop
aad
push
mov
mov
stos
pop
call
mov
idivl
inc
mov
xchg
mov
mov
sub
adc
stos
outsb
jle
mov
lea
loope
out
xor
sahf
dec
jns
lret
mov
cld
push
fs
inc
mov
jg
xor
inc
mov
imul
pop
push
push
inc
out
cmp
out
jp
mov
loop
loopne
cmp
or
sbb
and
push
clc
xor
dec
xchg
dec
movsb
sub
xor
and
mov
imul
pop
std
pop
clc
adc
push
lret
cmp
sub
adc
sub
and
or
add
add
cmp
xchg
or
lds
cs
cmp
out
jle
scas
imul
or
les
imul
add
jae
lock
orl
sbb
jge
sbb
loopne
mov
out
mov
xor
pop
mov
loope
jmp
and
push
mov
stc
adc
pop
dec
push
or
cmp
aam
pop
xchg
or
pop
test
add
adc
adc
lret
or
cmp
inc
xor
mov
adc
repnz
jns
pop
lcall
jg
stos
into
ds
leave
xor
sbb
insb
enter
fstpt
adcl
testl
xchg
push
add
push
sbbb
cmp
mov
nop
jecxz
mov
rcrb
fbstp
ja
xorl
xchg
aad
mov
push
lret
mov
es
and
mov
cltd
dec
out
push
adc
stc
pop
leave
sbbl
lock
jns
and
mov
stc
aaa
test
int3
stc
daa
lret
in
lods
dec
adc
outsb
shlb
lret
loope
fs
jg
inc
dec
push
push
xchg
xorl
sub
dec
lods
pusha
std
adc
roll
pop
push
push
lods
repnz
mov
sub
loope
testb
dec
mov
pop
mov
loopne
sbb
shll
es
cmpsb
or
mov
rclb
cmp
fcomps
xor
cwtl
in
pop
hlt
sbb
cltd
mov
push
lods
inc
mov
lock
scas
sub
aas
lock
addr16
jmp
inc
inc
movsb
fcmovnu
adc
push
das
addb
sbb
pushf
je
mov
jno
dec
jnp
push
scas
jmp
add
shll
or
aas
xchg
rorb
enter
xlat
iret
xchg
cmp
mov
jae
adc
ret
imul
or
pop
imul
adc
decl
ret
cltd
adc
push
dec
daa
jno
shlb
ds
aaa
dec
rcrl
mov
ret
rcrl
aaa
vpmulhw
mov
fmulp
mov
sahf
sub
lods
ljmp
inc
sub
push
fdivl
xor
or
mov
fisubrs
sub
rcl
iret
xchg
insb
mov
jne
push
xor
mov
jle
pop
aam
pop
mov
adc
cmc
test
cmp
cmp
jg
jp
arpl
xchg
cmp
je
and
movsl
lret
out
nop
movsl
pusha
shrb
mov
call
imul
pop
dec
jp
mov
sub
out
mov
inc
clc
dec
ffree
and
push
leave
xchg
adc
mov
mov
add
scas
pop
int
xor
popf
mov
dec
dec
lcall
mov
mov
out
sahf
in
aad
sti
mov
cmc
mov
mov
testl
jo
movsb
xchg
xor
sbb
addr16
add
loope
dec
ret
dec
aad
mov
pop
aaa
cmp
mov
aaa
sbb
jnp
gs
orl
lds
inc
aaa
pop
sbb
xchg
adc
cwtl
cmpsb
pop
out
add
sbb
mov
xor
jle
cmpsl
pop
adc
jns
rol
jae
sub
xchg
pop
into
mov
inc
dec
inc
xchg
inc
std
rol
jmp
sub
pop
lahf
es
out
xor
dec
cmp
xor
cmp
sub
sub
fisttpl
sub
insb
or
cmc
pop
outsb
rcrb
je
out
cmp
popf
nop
movl
scas
cmp
lea
pushf
pop
mov
lret
sub
mov
addr16
insb
sti
or
adc
xor
outsb
sar
aaa
daa
cmpsb
inc
cmpsb
push
and
jle
dec
mov
imul
xor
xchg
adc
jp
sub
mov
sub
mov
call
fbstp
sbb
dec
bound
mov
ss
cmp
test
xor
imul
xor
in
cwtl
mov
orl
add
mov
jl
insl
jae
jge
xor
call
adc
aas
scas
inc
push
fwait
movsb
dec
cwtl
std
sbb
pushf
adc
mov
mov
dec
cs
sti
xor
lock
scas
shlb
push
aas
and
jmp
test
rcr
xor
mov
mov
xchg
jo
pusha
sub
jo
loope
jmp
je
data16
pop
bound
add
xchg
mull
enter
arpl
inc
mov
xchg
jp
pop
xor
xchg
cltd
repz
insb
movsl
movsb
and
int3
jb
push
pushf
int3
pop
pusha
rcll
test
enter
cmp
sbb
jge
and
cmpsb
mov
jp
int3
jl
sub
inc
bnd
mov
into
jnp
sbb
inc
ja
ljmp
ret
push
test
andb
sbb
and
mov
mov
gs
mov
test
into
sbb
jno
aad
push
es
das
jno
sub
inc
jbe
jmp
enter
cmp
dec
mov
lret
sub
sbb
or
xor
cmpsb
jbe
and
pop
jno
xchg
xchg
pop
mov
push
mov
mov
jbe
mov
loopne
jbe
adc
pop
sbb
hlt
cmc
cmpsb
or
cmp
addr16
add
mov
dec
dec
fnstenv
test
dec
push
imul
mov
test
sub
xor
movsb
jg
mov
sbb
ss
arpl
xor
add
int
push
inc
xchg
jecxz
inc
dec
test
rorb
pop
push
loope
ds
out
xchg
es
ficomps
lock
push
mov
inc
addb
cmp
rolb
fwait
xor
jno
frstor
leave
sub
je
cmp
mov
dec
outsl
call
add
pop
mov
inc
sub
arpl
aad
cs
pop
or
iret
loop
daa
inc
push
jae
repnz
imul
inc
dec
arpl
les
jmp
adc
clc
mov
inc
inc
mov
test
movsl
mov
and
hlt
dec
test
scas
sub
jb
jle
dec
mov
sub
pop
sbb
jp
add
mov
std
enter
or
ljmp
fistpl
xor
mov
fldl
or
push
inc
test
sbb
push
or
pop
add
aam
aad
and
pop
test
aam
nop
daa
sbb
shlb
push
sbb
adc
add
call
cmp
or
mov
imul
push
inc
cltd
insb
movsb
test
and
out
jle
sbb
ret
out
pusha
out
jno
imull
or
loopne
mov
add
or
fistps
cltd
mov
pop
pop
push
pop
cltd
xor
popf
insb
shlb
addr16
mov
mov
dec
xchg
mov
sti
add
lcall
daa
call
mov
push
pop
bound
popl
add
add
xchg
fsub
cmp
and
icebp
lea
sub
icebp
push
inc
imul
xor
mov
imul
push
adc
fnstsw
scas
inc
mov
mov
sub
repz
test
aam
inc
imul
icebp
cs
les
jmp
incb
repnz
push
sbb
push
clc
push
fdivrp
add
outsl
pop
mov
sub
push
lahf
push
cltd
cmp
xor
pushf
mov
popf
xchg
pop
inc
inc
mov
mov
mov
jno
push
testb
loop
out
sbb
std
mov
inc
stos
jo
jo
scas
aad
push
mov
in
jl
adc
idivb
mov
push
xchg
dec
xchg
cmp
sbb
xor
popa
jno
sub
aas
mov
pop
mov
sub
sbb
jns
lds
shr
cmc
push
lahf
aam
cmp
jnp
jmp
popa
and
xchg
in
stos
out
xchg
mov
adc
adc
ljmp
adc
out
inc
in
add
js
push
inc
aaa
push
lahf
addr16
daa
das
cmp
icebp
dec
loopne
mov
and
mov
scas
dec
xor
cmp
adc
pop
mulb
xchg
push
pushf
pop
test
adc
sbb
pop
outsb
mov
js
in
push
add
leave
and
sub
push
fcomp
ja
rcrl
jle
push
inc
pop
insl
mov
pop
outsl
jmp
ds
loope
data16
ret
cmpsl
ljmp
nop
pop
popf
lds
push
leave
jnp
lods
push
dec
cmp
pop
in
mov
sbb
pop
insw
outsb
xor
push
icebp
aam
lea
testb
fidivrl
das
jmp
jne,pt
cmpsl
outsl
fs
leave
stc
dec
dec
popa
xchg
jecxz
into
aam
loop
jl
push
pop
sub
inc
test
sbb
imul
inc
fcmovb
mov
mov
ret
mov
xchg
movsl
mov
repz
mov
cmp
mov
jb
scas
mov
cmp
int
loope
cmp
xor
dec
mov
lcall
bound
xlat
outsb
or
or
in
mov
adc
test
mov
push
and
xchg
outsb
or
addr16
lret
sbb
sub
jle
lret
pop
xchg
push
sbb
inc
pop
bound
push
ja
popf
jecxz
scas
push
lds
mov
loope
dec
pop
xlat
ss
into
jb
jns
cmc
push
hlt
call
xchg
sbb
jns
jp
jb
mov
hlt
pushf
les
dec
xchg
in
gs
loopne
movsl
ror
xchg
add
jns
pop
aam
cltd
lahf
std
ds
xchg
subb
push
int
rorl
insb
pusha
dec
jbe
mov
and
rcll
icebp
xor
mov
dec
mov
shl
mov
mov
in
jno
inc
jmp
insb
out
loope
add
adc
stos
cmpsb
fstps
push
gs
push
fcomi
aas
popf
adc
lds
and
or
stos
adc
push
push
jmp
cmc
pop
ss
and
add
push
shlb
cli
pop
lods
lock
xor
imul
jp
out
xorb
decl
pop
pop
in
orb
add
aad
divl
out
mov
out
adc
icebp
test
jge
int3
lahf
add
cmp
ficompl
call
mov
jp
popa
push
adc
dec
cmpsl
sbb
cs
int3
mov
ret
lock
fs
jl
sbb
push
ljmp
ss
mov
das
ljmp
cmp
or
shrl
test
outsb
sahf
test
out
and
cmc
test
lods
enter
xor
cmpsl
and
push
js
sarl
or
xchg
push
out
mov
test
into
dec
ds
cwtl
or
int3
out
test
and
push
push
xchg
add
push
loop
ret
mov
sbb
push
out
pop
cld
addr16
daa
loop
mov
aas
cmp
pushf
cmp
pop
pushf
scas
js
iret
mov
in
jle
adc
dec
outsb
sub
or
sbb
sbb
scas
pop
xchg
in
mov
jecxz
xor
push
fcomip
jnp
xchg
inc
repz
cmpsb
pop
xchg
stos
sbb
cs
scas
das
lea
jge
mov
sbb
adc
or
cmp
lods
lods
aad
pop
das
jg
or
fdivs
xchg
clc
add
cmp
mov
sub
cmp
push
imul
out
jle
aaa
mov
mov
cmp
push
test
push
outsl
sub
ja
sarb
adc
sub
test
cmp
mov
jbe
inc
xchg
add
ret
xor
mov
push
sbb
test
js
popf
or
in
roll
in
dec
js
les
gs
loope
das
mov
jp
dec
jne
xchg
inc
jns
lcall
cltd
and
mov
hlt
vpsllw
push
ret
add
loope
popa
lods
dec
shrb
stos
loopne
push
cld
sbb
fdivrp
inc
ljmp
andb
and
push
into
and
popa
scas
outsl
test
xchg
mov
jmp
aas
ret
push
ss
mov
cmp
es
mov
xlat
xor
jp
ds
imul
push
in
mov
xorb
jge
imul
ret
mov
out
sbb
push
and
jb
mov
add
ss
int3
repz
hlt
mov
scas
push
xchg
cmpsb
jp
mov
pop
fdivp
ljmp
cmp
jns
test
movl
in
aaa
and
and
cmp
nop
testl
xchg
fldenv
aas
add
sbb
sbb
js
cld
or
cwtl
and
addr16
push
or
pop
or
push
adcb
mov
movsl
je
pop
lahf
mov
push
sbb
incb
adc
jmp
fstpl
mov
sti
out
fwait
mov
repz
push
xchg
xchg
mov
cmp
dec
sar
test
imul
pop
dec
jnp
mov
stos
popf
push
xchg
jo
cmpsl
addr16
nop
mov
jle
mov
outsb
lea
jnp
ljmp
jp
and
xchg
cmpsl
ret
push
push
mov
out
lcall
adc
test
sbb
add
mov
pop
and
hlt
or
push
shl
pop
jnp
jns
mov
imul
mov
push
or
insb
mov
cmp
or
std
xor
pop
ss
orl
scas
repnz
test
pusha
mov
adc
rcrb
leave
pop
insb
test
stos
in
mov
mov
fwait
rclb
ds
test
icebp
mov
mov
hlt
jp
sbb
inc
daa
ja
sbb
call
clc
outsl
pop
ret
jnp
mov
cmp
push
xor
jne
xchg
fisttpl
ljmp
rorl
mov
adc
sub
pop
xchg
mov
jae
or
dec
fcmovnu
cltd
in
cmpb
xchg
or
fwait
aas
add
jl
or
sub
mov
lret
aaa
add
out
rcl
lock
pop
or
fnstenv
mov
test
dec
and
shlb
jge
imul
pop
mov
and
adcb
popa
or
mov
pop
das
mov
xchg
push
aad
cmpsb
js
dec
cmpsb
pop
pop
je
aas
pop
jo
popa
sub
sub
icebp
inc
nop
xchg
cmpsl
jns
sbb
mov
or
sub
mov
cltd
iret
test
jbe
jns
in
xchg
jecxz
into
pop
or
jbe
push
loop
jmp
bound
gs
push
call
mov
js
nop
or
divl
lock
fildl
mov
or
outsb
push
mov
fidivs
loope
push
mov
ljmp
aad
push
test
ljmp
or
inc
add
or
and
push
lret
fs
jp
sarl
sarl
lcall
sub
adc
mov
repnz
enter
lds
out
enter
repz
into
adc
ja
xchg
mov
dec
push
movsb
ja
addr16
lods
or
movsb
fimull
mov
nop
push
dec
dec
pop
pop
ljmp
push
sti
mov
sti
ja
dec
fwait
xchg
jg
outsl
jo
in
sbb
rolb
jb
mov
and
enter
xor
divb
adc
mov
and
sahf
imul
push
mov
jecxz
sub
push
imul
pop
push
mov
push
cmpb
fwait
dec
and
es
mov
test
mov
pop
adc
adc
push
mov
mov
push
movsl
mov
sbb
jnp
dec
mov
addl
or
cmp
dec
sets
pushf
push
push
jae
int
and
dec
cwtl
cmp
scas
out
jl
or
bound
lret
inc
and
and
ljmp
mov
imul
mov
addr16
dec
stc
mov
div
xlat
imul
pop
cmp
scas
scas
mov
ljmp
fwait
inc
mov
mov
pop
mov
inc
ror
jmp
sbb
gs
sub
inc
addr16
js
scas
lock
fs
inc
lret
into
sbb
jmp
aad
mov
mov
pop
push
ficomps
dec
out
sbb
jbe
out
mov
mov
add
repnz
ret
add
mov
dec
push
dec
mov
sbb
adc
popf
push
xchg
rcll
and
sub
lret
fsub
and
mov
jae
push
adc
xor
sub
daa
jle
insl
int
xchg
and
xchg
fimuls
loopne
sbb
sub
in
scas
in
push
inc
bound
sbb
or
cmp
in
jmp
add
loope
jmp
add
inc
jno
cs
fcompl
jl
mov
fcoms
leave
xorl
mov
in
push
xchg
rorb
sub
test
mov
add
inc
int
mov
out
mov
jae
lods
or
push
dec
fists
or
add
ss
mov
imul
lcall
jae
imul
sub
dec
mov
mov
lea
mov
loopne
mov
int
pop
int
jns
in
jle
scas
popa
mov
sti
sarl
and
cmpsl
mov
in
out
xchg
inc
xchg
leave
cmp
or
rcrl
sbb
adc
popa
mov
fwait
cmp
imul
xchg
cwtl
bswap
sbb
adc
mov
insl
ret
mov
insb
mov
nop
out
fsts
push
xor
mov
jns
icebp
pop
stos
aaa
mov
mov
jg
cli
inc
ret
cmpsl
pushf
xchg
mov
aad
mov
push
ret
test
sahf
xor
popf
test
lds
sti
adc
inc
jne
dec
icebp
scas
fwait
mov
jbe
hlt
or
adc
rorl
test
flds
dec
xor
pop
lods
fisubl
push
inc
add
icebp
cld
pop
mov
rcrl
adc
push
mov
xor
mov
popl
jge
js
callw
jmp
inc
aas
lcall
cmpsl
aam
add
adc
sti
jns
sti
cmp
les
bound
outsl
ljmp
lcall
dec
and
pop
test
hlt
cmp
xchg
icebp
sub
inc
or
cmpsb
popa
pop
rclb
adc
and
clc
mov
clc
jge
scas
pop
insb
into
xchg
das
xchg
test
cwtl
jle
mov
movsb
xor
scas
cmovo
dec
aad
sbb
push
pop
adc
mov
dec
rclb
adc
push
fisttpl
outsb
pop
xchg
les
arpl
leave
cmpsl
or
dec
bound
mov
xchg
mov
push
js
in
adc
mov
jne,pn
xor
lods
popf
fldt
mov
mov
push
pop
lods
pop
jl
je
into
and
push
gs
pop
test
cltd
loopne
mov
pop
nop
mov
sub
jae
fucom
lret
xchg
or
leave
jnp
fnsave
sbb
xchg
push
dec
inc
push
push
stc
mov
outsb
mov
and
mov
sub
bound
sbb
iret
dec
loop
ret
hlt
xor
ret
jle
xlat
iret
fmull
or
mov
sbb
add
push
mov
insb
in
mov
push
adc
pop
stos
cmp
movswl
pop
fdivrl
test
dec
jns
scas
jne
push
inc
mov
or
pop
cmc
mov
stc
mov
dec
stos
mov
sub
stos
hlt
pop
rcrl
xchg
pop
jbe
test
stos
xchg
jno
mov
xor
scas
lods
or
mov
xor
xchg
js
jb
and
push
leave
mov
in
rorb
push
jns
sub
xchg
nop
sub
xor
adcl
inc
daa
or
jmp
pop
xlat
mov
sahf
mov
out
sub
fcoml
adc
sbb
xchg
jb
pushf
jecxz
out
out
js
mov
std
sbb
cmp
lcall
cmp
movsb
mov
xor
inc
sub
shlb
divb
cltd
xor
mov
out
test
mov
fistpl
push
test
je
xchg
xor
fcmovb
std
mov
xchg
xor
loope
dec
xchg
and
push
add
clc
iretw
fdiv
int3
mov
lret
sti
and
xchg
lea
aam
pop
out
sub
imul
bound
mov
push
lods
outsb
cli
stos
mov
or
jns
mov
jle
lcall
push
cmpsl
mov
cmpsb
out
xchg
cld
adcl
push
es
xchg
jl
mov
mov
dec
sbb
ja
test
inc
fsubrl
data16
jns
orl
mov
xchg
fmuls
add
add
bound
popf
and
aam
push
and
or
arpl
mov
orl
js
ja
scas
xor
push
and
mov
sub
or
sti
jecxz
sbb
loopne
push
sub
adc
xor
or
in
idivb
sub
ss
out
mov
in
iret
enter
push
inc
cs
cld
push
sub
inc
fwait
aaa
fdiv
sahf
mov
add
pop
cmp
cld
stos
push
cwtl
push
push
jg
int
mov
cmp
and
repnz
pop
imul
lret
push
in
cltd
xchg
and
lcall
and
sbb
loop
xor
xchg
add
loope,pn
push
cli
stos
test
fldcw
fdivs
sahf
push
outsl
ret
std
out
pop
sub
fcoml
cmp
mov
cltd
loopne
fnstcw
sbb
std
sub
pop
out
data16
stos
push
xchg
icebp
scas
lds
cmp
jp
sbb
mov
pop
pop
push
jecxz
das
jecxz
lods
mov
fwait
cmpsb
or
mov
negb
adc
lea
fwait
out
adc
fs
pop
in
aad
sub
adc
or
sub
fadds
xlat
pop
pop
jae
repz
xchg
pop
jmp
out
mov
sahf
cltd
arpl
stos
insl
repz
push
fxch
into
rorb
std
cmp
push
and
lds
and
or
mov
inc
es
lret
mov
das
inc
insl
or
es
sub
xchg
add
incb
inc
cmp
jb
or
cmp
pop
inc
ljmp
sbb
icebp
icebp
xchg
push
push
mov
pop
pushf
mov
scas
adc
stc
inc
mov
ja
jns
and
dec
lret
mov
mov
jg
mov
sub
aas
jnp
xchg
push
jmp
sub
xchg
or
cmc
in
cmp
mov
cmc
mov
add
xlat
in
jmp
inc
xchg
xchg
mov
outsb
dec
sbb
mov
xor
rolb
cmp
rcr
xchg
mov
dec
mov
jnp
push
or
inc
pushf
fisubl
xor
cmp
adc
test
xchg
cmp
and
mov
dec
ficoml
lods
jl
mov
test
movsl
mov
fsubrp
pop
cli
cwtl
call
or
test
repnz
ss
rorl
push
sbb
dec
lock
add
fimuls
pop
outsb
testb
lea
movsb
stos
ljmp
mov
inc
cli
mov
cmpsl
sbb
xchg
adc
push
dec
pushw
test
jp
lods
mov
push
or
shlb
dec
in
lods
pop
mov
popa
adc
push
push
mov
int
pop
popa
in
dec
xor
pop
inc
hlt
mov
cs
inc
cli
lds
and
inc
lock
adc
or
xor
lcall
stos
push
lds
call
sub
mov
ffreep
jnp
pop
jo
int
mov
fidivl
pushf
sub
push
jecxz
ret
aaa
sub
push
mov
sbb
dec
ljmp
cltd
sub
or
and
lret
pop
test
dec
cmpl
dec
mov
mov
cmp
and
mov
outsb
icebp
xchg
add
or
cmpsb
xchg
pop
lret
aam
or
in
mov
jbe
push
jecxz
fs
stos
hlt
js
bound
je
dec
out
imul
push
mov
outsl
fldl
add
test
insb
out
out
cmp
jne
mov
rcll
cmp
popf
in
sbb
arpl
or
push
and
loop
fistpll
and
inc
jg
mov
lahf
push
daa
int3
out
jno
stos
sbb
dec
dec
add
xor
or
mov
sar
push
lcall
pushf
outsb
out
or
adc
lds
push
push
or
inc
fildl
pop
mov
jl
mov
pop
outsl
dec
faddp
fs
in
sub
test
xor
jo
dec
fnstenv
push
pop
dec
idivl
and
movsl
inc
addr16
dec
pop
cmp
sbb
inc
inc
push
je
pop
leave
scas
stos
sbb
sbb
idivl
pop
push
or
sti
inc
jl
cmp
test
mov
cmp
aad
sub
fsubrs
cmp
mov
stos
mov
xchg
out
ja
andb
inc
mov
mov
dec
jg
adc
loop
pop
test
or
xchg
lods
in
sarb
add
jmp
inc
std
das
lock
cmp
loope
iret
adc
jg
cmp
mov
aad
cltd
leave
jecxz
xchg
dec
mov
into
pop
ficompl
in
iret
les
inc
loope
sbb
mov
ficoml
imulb
jge
cmp
aad
adc
loope
mov
fnstsw
cld
js
xchg
push
roll
lock
jae
lock
add
lea
enter
jae
dec
in
jno
rcrb
and
repz
lods
pushf
mov
cmp
lds
mov
pushf
in
lods
pusha
lcall
push
mov
stos
and
out
xor
xchg
daa
mov
sbbb
popf
out
mov
ljmp
dec
ss
fisubrs
and
lret
cld
inc
lods
sbb
in
shl
lea
in
movsb
xor
mov
adc
mov
mov
shrl
lcall
out
adc
repnz
sub
outsb
arpl
pop
enter
ja
xchg
xor
rcrb
mov
dec
insl
je
lock
mov
mov
ret
aam
push
fadds
test
adc
sbb
jmp
sub
pop
pop
push
pop
push
notb
out
push
addr16
xchg
insl
jecxz
in
test
mov
push
stc
mov
fwait
sbb
push
pop
cwtl
sbb
into
cs
out
icebp
or
mov
sbb
or
and
into
loop
xor
lret
inc
adc
push
xor
cmp
mov
pushl
ds
inc
adc
or
inc
cmp
xor
jne
mov
mov
mov
int3
cwtl
js
xchg
sbb
and
and
ja
cltd
movsl
add
xchg
xlat
hlt
mov
in
mov
push
in
adc
push
arpl
sub
pop
imul
into
testl
push
pop
xchg
test
ret
inc
cld
push
pusha
stos
dec
sub
jg
iret
jb
mov
stc
leave
aaa
sub
push
inc
std
aam
icebp
test
jb
adc
mov
mov
dec
jge
test
out
dec
xchg
and
or
pmullw
shrl
pop
rcrb
jle
idivb
mov
lock
ficoml
mov
mov
mov
pop
inc
push
lds
push
in
ja
add
arpl
fs
cmp
addr16
lcall
pusha
cmpsb
and
jl
lods
add
or
popa
imul
mov
ficompl
jmp
mov
sbb
cmp
adc
fwait
sbb
out
push
out
hlt
gs
jge
clc
dec
mull
mov
ljmp
movsl
mov
xor
jmp
inc
mov
fst
enter
mov
mov
cld
ja
and
repz
sub
inc
dec
pop
jno
insl
dec
mov
cwtl
push
in
push
push
xor
sbb
sub
imul
or
cmp
jae
sti
inc
mov
cmp
xchg
lret
clc
popf
out
fisubl
andl
cmpsl
dec
or
or
test
icebp
inc
push
stc
push
repz
cmp
cmc
add
in
pop
mov
popf
mov
subl
pop
scas
ja
not
or
pop
test
push
mov
add
test
or
pop
jge
xor
test
and
push
xor
sbb
jl
jb
and
scas
jbe
pop
jecxz
cmp
pop
xchg
jge
lcall
cli
jo
mov
fs
js
adc
ss
jmp
adc
ds
inc
int3
inc
inc
dec
hlt
push
loopne
jo
cmpb
dec
dec
mov
or
movsl
and
in
or
into
aad
fwait
mov
lds
inc
mov
sub
cmp
into
push
inc
adc
test
movsl
push
subl
stos
dec
or
ja
stc
daa
testb
mov
pop
rolb
shll
mov
mov
dec
mov
sub
jns
jnp
push
or
cmp
mov
std
ret
mov
mov
int
out
fists
in
jns
sub
jo
sub
into
iret
lahf
or
in
cmc
lds
sub
hlt
mov
lret
lods
cs
fdivp
adc
dec
push
lods
or
pop
cmp
push
mov
adc
rcrl
xor
xchg
mov
push
pop
cmp
js
adc
cmp
insl
pop
mov
mov
xor
xor
daa
jmp
imul
pop
idiv
sbb
repz
in
xchg
cmp
sahf
loopne
fwait
push
loope
imul
jp
adc
ss
jne
mov
aaa
jo
push
xchg
clc
gs
jl
push
push
leave
xchg
in
inc
sbb
xchg
dec
inc
pop
and
aaa
shr
inc
or
inc
and
btr
sbb
scas
rcr
jbe
mov
xlat
xchg
sub
icebp
and
lods
jno
mov
gs
cltd
mov
mov
mov
xchg
je
inc
insb
add
in
arpl
out
gs
adc
lea
cmp
pop
xor
test
dec
or
jp
dec
in
sarl
divl
jne
inc
push
cmp
out
popf
sub
mov
jp
repz
jno
dec
xchg
adc
lahf
push
push
mov
icebp
cmp
imul
and
cld
insl
xchg
mov
movsl
rcrl
mov
aad
stos
pop
and
mov
test
sub
adc
jbe
or
push
pop
data16
sbbb
arpl
aaa
and
adc
push
mov
pop
loopne
mov
jmp
cmp
dec
pop
push
adc
pushf
mov
aas
mov
decl
jbe
jecxz
xchg
lahf
mov
in
add
sub
pop
imul
movsb
lock
dec
pop
int
ds
jnp
ljmp
inc
xchg
fcomip
orl
insb
sbb
incb
adc
or
xchg
std
insb
lcall
fnstsw
fisttps
sbb
or
sbb
rol
xor
adc
mov
xlat
pop
cltd
das
scas
mov
in
jne
jno
xchg
negb
loope
jmp
xchg
dec
les
mov
icebp
stos
jmp
cmpsl
iret
shl
mov
pop
outsl
sbb
rorl
xchg
sarb
stc
lds
cmp
pop
es
insb
jmp
xchg
lahf
mov
dec
mov
popa
jo
jecxz
xchg
and
xchg
fldt
aaa
cmp
dec
stos
push
mov
mov
or
ret
scas
sti
mov
mov
jmp
mov
sahf
mov
jbe
lods
std
jns
xor
test
test
aaa
mov
sbb
or
or
mov
inc
scas
arpl
lcall
cmp
jne
jo
es
test
mov
dec
testb
fnsave
push
lret
xor
test
push
leave
out
call
mov
xchg
mov
jb
and
cmp
xor
lcallw
in
mov
mov
push
cmp
adc
imul
and
add
mov
pop
in
or
mov
je
mov
xchg
and
fwait
dec
call
and
and
pusha
in
sbb
pop
or
mov
and
cmpsl
adc
adc
insl
fisubrs
jno
push
lret
and
jne
rorl
fnstcw
push
fildll
decb
jo
sbb
jp
outsl
je
lds
sbb
sub
xorl
xchg
in
pop
lds
xchg
and
push
fsts
jp
fmull
add
data16
mov
jmp
into
sub
mov
into
rclb
fildll
xor
mov
shlb
and
xchg
push
pushf
rcrb
sub
je
clc
testb
mov
and
outsl
imul
pop
inc
out
shrb
mov
in
shll
cli
fadd
push
push
or
or
sarl
scas
push
or
xor
dec
std
nop
and
iret
shr
fdivl
mov
test
movl
ss
clc
dec
insl
iret
pop
cltd
sbb
push
xor
and
insb
xor
mov
dec
fnstenv
inc
mov
mov
jge
cld
xlat
pop
mov
out
test
ljmp
mov
cwtl
or
pushf
sbb
and
stc
out
or
ret
mov
scas
fdivp
shl
pop
mov
arpl
push
lret
xchg
ret
mul
outsl
add
jle
pop
cmp
shll
sub
subb
pushf
cltd
inc
call
jle
imul
dec
fdivrs
ret
push
add
ffree
lds
jg
pushf
adc
jle
out
adcb
dec
mov
popf
xor
push
lahf
movsl
stos
or
jmp
insb
cmc
pop
jne
out
jns
jmp
stos
out
inc
stos
or
clc
cwtl
adc
add
xchg
iret
cltd
cmp
mov
xchg
icebp
push
mov
mov
xor
pop
mov
xchg
push
mov
insl
cmpsl
xchg
sbb
cs
add
jno
int3
lea
aam
lds
loopne,pt
lea
or
cmpsb
and
adc
xchg
mov
or
js
mov
adc
and
add
mov
cmp
xchg
adc
pop
dec
adc
cmp
jo
lock
mov
leave
mov
dec
jl
bound
stos
add
sbb
rcrl
cmpsl
jbe
pop
pop
push
imul
mov
sub
repz
mov
rorb
mov
push
cmp
dec
pop
lahf
cmpsb
dec
adc
mov
cmp
aam
xor
minps
mov
push
add
and
stos
pop
or
push
lods
xor
add
insb
adc
pop
mov
inc
mov
dec
xorb
lret
outsb
cmp
mov
xchg
pop
mov
loope
and
mov
sbb
call
sar
test
push
sahf
scas
xor
sub
aaa
jp
shr
inc
out
push
inc
insb
add
pop
pause
rorb
mov
movsb
clc
push
inc
dec
shl
cmp
scas
les
dec
pop
inc
les
add
add
jmp
inc
cmpsb
xor
add
jg
pop
mov
mov
add
add
out
ficompl
clc
aad
or
push
mov
dec
and
into
cmp
dec
dec
jp
stos
xor
or
push
movsb
adc
arpl
es
push
mov
mov
xor
sti
lret
mov
pop
inc
fsub
mov
xchg
jg
out
push
out
rolb
or
fstps
aas
test
xchg
popf
iret
mov
jecxz
mov
loopne
call
gs
test
dec
lock
push
add
dec
fsubl
aad
loopne
pushf
clc
idivl
nop
adc
mov
shrl
repnz
and
cmpsb
xchg
inc
call
ljmp
rep
xchg
xchg
test
sbb
sub
lods
addr16
jbe
dec
xor
xor
push
push
push
lahf
hlt
loope
sbb
inc
mov
add
ficoml
pop
negl
stos
push
bound
pusha
addr16
cmp
test
mov
dec
inc
cld
fisubrl
xchg
mov
add
sbb
sti
invd
xor
mov
push
js
mov
sbb
mov
fmull
adc
lods
dec
sarl
repnz
pusha
shlb
subb
and
mov
mov
scas
fcmovb
jne
rclb
dec
outsl
fnstsw
lea
stos
insl
cmp
rclb
mov
gs
mov
push
mov
aas
stos
jns
sub
ds
test
push
xchg
icebp
lret
mul
mov
out
push
sahf
test
and
sub
lods
imul
fildl
leave
and
mov
ljmp
insb
xchg
ss
mov
outsb
hlt
sbbl
negb
xor
push
out
dec
fs
fnstcw
inc
jae
xchg
lods
push
aaa
movsl
out
popa
idivb
fmul
pop
mov
adc
addr16
and
movsl
pop
mov
xlat
aaa
ficompl
es
pop
subl
cmp
sbb
and
insb
inc
xchg
into
dec
adc
imul
sbb
sbb
fcomps
mov
ljmp
test
sub
adc
jb
movaps
mov
jecxz
outsb
cmp
pop
nop
mov
sti
scas
call
sbb
les
ficoms
xor
push
lods
fldenv
pop
aam
sbb
jl
xchg
jne
fistpll
cmpsl
sub
inc
imul
fwait
mov
cmp
test
jnp
and
test
dec
stc
ja
adc
scas
lock
icebp
test
es
movsl
sahf
dec
movsb
stos
jle
sub
push
stos
mov
std
dec
adc
call
leave
mov
push
or
stos
cmpsb
cmc
rcl
xor
sbb
mov
pop
pop
mov
in
pop
mov
push
icebp
inc
sbb
pop
into
popa
lds
mov
jns
push
mov
mov
sbb
jmp
and
stos
mov
sub
inc
or
push
insl
push
mov
je
shl
xchg
mov
clc
mov
rcll
add
out
out
xor
addr16
xchg
mov
xor
or
sub
push
mov
outsl
es
rorl
arpl
jae
jae
fisttpll
sub
sbb
mov
lcall
icebp
loop
jp
cli
icebp
xor
lock
mov
adc
adc
jle
ret
cmp
xor
mov
ret
lret
jmp
imul
mov
mov
ss
and
push
mov
pop
lcall
mov
mov
xor
roll
push
dec
xchg
stc
fiadds
in
fnsave
xchg
cmp
lcall
flds
iret
and
popa
mov
or
scas
cmpsl
jnp
jno
loop
dec
sbb
inc
aad
pop
fdivs
insl
mov
pop
scas
test
scas
lods
push
in
pop
mov
lret
lea
dec
or
xor
leave
dec
aaa
imul
pushaw
pop
dec
sbb
add
or
je
inc
sbb
test
ret
sbb
lcall
add
dec
jecxz
lret
mov
clc
xlat
je
test
scas
in
add
and
mov
mov
mov
mov
dec
push
xorb
cmpsl
fcmovnu
adcb
stc
fnstsw
outsb
shl
insl
sub
fdivrp
cmp
insb
pop
sub
les
stc
jo
mov
lahf
mov
or
mov
xlat
movsl
or
inc
mov
push
imul
fisttps
out
xchg
insb
jae
dec
push
test
jp
fstps
cmp
repz
ret
xor
mov
lahf
lods
outsl
movl
out
scas
arpl
sub
lods
pop
scas
lods
aas
jmp
push
dec
inc
stc
mov
xchg
mov
cmp
mov
mov
cld
loopne
pop
inc
and
mov
pop
outsl
das
fldenv
xlat
adc
int3
push
aam
out
push
mov
out
or
jp
pop
sub
adc
repz
shl
xchg
pop
sub
and
jno
xchg
push
les
mov
xchg
imul
mov
int
sti
sti
jp
clc
cvtdq2ps
aaa
inc
pop
mov
mov
mov
cli
popa
stos
cmpsb
or
outsl
out
sarl
popf
scas
mov
arpl
bound
popf
aas
cmp
push
xchg
push
mov
xchg
dec
sbb
cld
jge
xchg
in
xchg
loopne
outsb
in
inc
mov
sahf
nop
adc
or
push
cmp
daa
das
arpl
add
out
shl
xchg
inc
imul
pop
fldt
xchg
rcll
lcall
sysenter
cli
dec
mov
mov
add
xor
pop
jmp
push
test
sub
xchg
test
fsubp
cltd
jge
sahf
cmp
cmp
ret
mov
fbstp
lcallw
and
orb
ror
jae
sarl
adc
inc
cmp
jp
icebp
jg
cmp
rcrl
mov
mov
xor
stos
test
outsb
mov
pop
insl
pop
mov
gs
out
jmp
add
sbb
repnz
lahf
sbbl
sub
push
lock
popf
imul
lahf
outsl
int3
push
fnstcw
or
sbb
mov
and
sahf
in
in
xchg
and
and
jle
xchg
nop
xor
mov
pop
xchg
dec
ds
js
xchg
cmp
and
push
and
cmpsb
scas
fisubrl
mov
or
sbb
adc
inc
pop
sub
adc
sti
out
add
ja
add
push
dec
cmc
stos
mov
out
push
nop
lret
loope
test
xchg
cmp
xchg
sbb
rorb
xchg
insl
ljmp
ja
jecxz
lret
pop
fdivl
ss
sub
test
jns
or
fisubrs
mov
xchg
adc
xchg
ficoms
andl
mov
les
push
shll
mov
fs
fucomip
ljmp
outsb
in
add
dec
les
aaa
add
stos
outsl
insl
out
cmp
arpl
inc
mov
sbb
push
into
jne
daa
imul
push
ljmp
pop
mov
adc
into
push
lret
dec
inc
fisttpll
dec
into
mov
dec
cld
push
xor
lods
pop
jmp
sahf
out
ret
mov
fidivrs
out
popf
fisttps
dec
imul
popa
adc
pop
aad
aaa
adc
jmp
mov
push
mov
das
je
jle
repnz
clc
rcrl
nop
orb
pop
sbb
mov
test
xchg
sub
icebp
adc
mov
dec
xlat
cmp
in
in
data16
mov
add
push
loop
pop
add
cmpsl
iret
sub
sahf
icebp
int3
mov
in
pop
mov
test
push
pop
xchg
arpl
shl
add
cs
push
sbb
fwait
jae
add
out
dec
es
cmp
lret
xor
sti
shll
mov
mov
std
xchg
movsl
loope
repz
shll
aad
dec
mov
mov
lods
xchg
fdivrs
inc
xchg
adc
push
icebp
jae
ret
ret
dec
in
sub
movsl
mov
xor
pop
adc
lahf
loope
pop
mov
mov
jecxz
icebp
fisttpll
sar
hlt
cwtl
je
inc
jo
xor
dec
mov
mov
xor
push
addb
dec
loope
and
add
lret
in
push
or
out
mov
fldt
mov
shlb
ljmp
cltd
aad
pop
roll
cmp
insl
jp
add
mov
sbb
mov
test
sbb
adc
adc
add
dec
fldenv
add
mov
cmp
xchg
int
and
inc
icebp
ret
mov
into
mov
dec
mov
sub
pusha
add
ficoms
pop
inc
mov
ret
jmp
dec
jo
rcrb
xchg
rol
mov
mov
outsl
adc
pop
pop
mov
xchg
jecxz
dec
jnp
jne
sbb
sahf
push
inc
cmp
imul
mov
mov
into
sub
xchg
push
pop
adc
xchg
fbstp
loop
ret
mov
push
lret
sbb
push
in
sub
mov
and
push
inc
xchg
stos
dec
sub
dec
insb
fcoml
jle
scas
xchg
jp
push
adc
repnz
inc
arpl
pop
and
fldenv
out
ja
jb
sbb
dec
mov
cmc
movsl
clc
dec
call
lahf
mov
dec
movsl
sarl
mov
xor
leave
sub
adc
pop
inc
pushf
or
lret
lret
pop
mov
subps
fs
adcb
ret
add
fs
jnp
insb
cmp
mov
mov
movsb
or
ficomps
mov
lcall
jle
jle
xor
fmull
xor
jo
push
je
sbb
and
pop
inc
pop
mov
out
arpl
xor
insb
cs
or
shlb
lods
lea
push
adc
pop
call
push
testb
aam
int3
lds
icebp
sub
out
data16
rorl
push
cs
pop
mov
and
out
aas
repnz
push
pop
sbb
sbb
add
xor
gs
outsl
mov
fidivs
xor
sub
aad
aaa
imul
outsb
xor
adc
xlat
or
sub
cmpsb
pop
out
scas
add
jo
adc
enter
pop
pop
xor
inc
int
mov
fiaddl
test
dec
mov
in
adc
es
sbb
sbb
jne
sub
ljmp
mov
inc
outsl
push
sub
icebp
addl
icebp
cmpsl
cmp
out
ljmp
xchg
pop
push
jne
scas
xchg
push
mov
mov
push
cs
unpckhps
mov
fmul
cmpsb
ljmp
dec
sub
pop
mov
sub
rorl
or
dec
xchg
dec
or
jmp
repz
cmp
dec
mov
mov
sub
notl
fbstp
pop
push
call
sub
xor
addr16
popa
jo
xor
cmp
jmp
lods
fndisi(8087
mov
pop
inc
jecxz
adc
into
or
mov
stos
and
shl
hlt
scas
das
addr16
or
ss
push
pop
dec
xlat
adc
out
cmpsb
daa
shl
stos
outsb
outsb
cmp
pop
xor
loope
cmp
mov
sarb
pop
inc
pop
pushf
mov
ljmp
adcl
sti
inc
pop
ret
mov
test
lds
mov
loop
fdiv
in
imul
inc
inc
int3
outsl
or
adc
shr
mov
lcall
inc
shrb
inc
sub
pop
xchg
fdivrl
push
mov
mov
mul
xchg
sub
and
and
mov
test
loope
push
shrb
insl
sub
cmp
scas
cmp
in
imul
mov
jne
clc
scas
push
lret
ret
scas
add
xor
fisttps
loope
sbb
clc
sub
mov
lds
lods
pop
rcr
fdivrp
test
outsb
shr
adc
in
inc
dec
and
push
xchg
and
mov
popa
xor
rclb
mov
mov
cli
mov
push
flds
repnz
jmp
sub
xor
nop
insl
loop
cmp
cmpps
xorb
fstl
adc
sahf
cld
adc
ret
and
jl
cmp
test
lcall
cwtl
fsubl
jno
mov
add
dec
and
mov
or
into
sahf
scas
push
mov
xchg
push
push
dec
hlt
vandnps
sbb
mov
aad
cltd
cwtl
cmp
bound
add
jmp
fimull
inc
outsl
test
sbb
pop
pushf
push
aam
jnp
adc
fldl
mov
add
pusha
xchg
sbb
push
into
cmp
sub
int3
js
ss
xorl
sbb
pusha
out
push
sub
sub
clc
mov
jo
out
mov
or
mov
xchg
inc
dec
icebp
mov
cwtl
sbb
cmp
add
xor
fimull
sub
in
or
movsl
push
add
inc
shll
cld
popf
sub
mov
inc
es
fs
movsb
dec
jo
and
lock
inc
inc
cmpsl
xlat
les
mov
or
pop
dec
xor
cmp
and
arpl
orb
loop
or
lods
jb
andb
repnz
inc
int
jecxz
mov
jmp
push
mulb
adc
dec
lahf
fwait
repnz
ss
shll
dec
lock
loop
pop
xor
bound
leave
push
pop
fucomi
and
mov
push
push
xchg
cmp
int3
push
and
mov
sub
push
popa
loope
pop
shll
in
sub
loopne
adc
mov
pop
xorl
int3
mov
inc
js
sbb
mov
mov
aam
ljmp
leave
inc
mov
mov
fisubrl
mov
adc
jmp
sub
mov
mov
insl
inc
stc
or
icebp
mov
stos
fdivrl
pop
in
mov
or
pop
nop
cmp
sti
mov
jbe
xor
push
xchg
mov
ret
sahf
mov
sub
cmpsl
push
inc
out
dec
mov
pop
add
cmpsb
shll
cmpsl
pushf
pop
fists
out
sbb
leave
scas
arpl
cmp
sahf
js
pop
and
sbb
rol
rclb
ret
push
aas
mov
mov
mov
mov
inc
sar
icebp
bound
pop
xchg
ret
in
shlb
outsb
aas
popl
inc
aas
push
or
data16
mov
jno
aaa
jl
mov
dec
mov
jnp
stc
xchg
data16
dec
lcall
sbb
fldcw
inc
jne
test
ja
icebp
xchg
jg
scas
fldcw
cwtl
test
push
dec
shlb
jb
jle
xchg
adc
fcompl
stos
gs
jmp
fsubrs
imul
mov
add
ljmp
in
add
sub
inc
mov
mov
mov
sub
insb
push
dec
mov
out
jo
xor
mov
xlat
and
mov
dec
aas
ds
je
sbb
jae
mov
cmp
insb
mov
and
popa
push
test
adc
sbb
push
jno
test
add
push
pop
adc
sbb
testl
scas
jmp
hlt
out
mov
mov
cmpsl
lahf
cwtl
cmp
lret
in
repnz
pop
mov
mov
xor
pop
inc
pop
xchg
and
loope
rcrb
cmp
cmp
push
out
shrl
repz
mov
dec
sub
aas
out
jae
ja
in
sub
out
in
dec
repz
fs
and
shl
sub
jno
movsb
arpl
xor
jno
aas
aam
sbb
dec
loop
and
xchg
and
scas
bound
fdivrl
bsf
imul
sbb
adc
in
inc
and
cld
push
les
xchg
popf
fsts
jae
adc
repz
or
je
movsl
mov
sbb
inc
lods
xor
and
xchg
loop
xlat
das
push
pop
xchg
push
jmp
outsb
aam
scas
push
mov
dec
push
frstor
clc
push
dec
out
jae
mov
or
inc
mov
xchg
xchg
cwtl
fnstcw
push
jecxz
sub
test
in
dec
xchg
out
data16
xor
stc
ret
int
aas
cmp
fs
lods
scas
shrb
rcr
push
cmc
out
es
xlat
adc
mov
xor
mov
std
insl
xchg
out
stos
push
cli
sbb
clc
dec
push
xor
outsl
xor
push
cs
dec
xchg
jbe
pushf
enter
repz
sub
push
aad
cmc
and
pop
inc
mov
test
inc
push
add
sub
fucom
sub
add
popf
mov
pop
ret
dec
test
xchg
aad
outsw
and
mov
pop
add
dec
fs
lcall
inc
mov
xchg
sub
mov
std
lcall
lds
mov
stos
in
movsb
inc
and
dec
cmp
cltd
pop
xorl
hlt
add
cwtl
adc
cwtl
lret
fwait
pop
push
ror
aad
and
pushf
leave
xchg
mov
jle
icebp
jo
and
in
punpcklbw
mov
fisubrs
adc
int
mov
std
pop
mov
mov
cltd
add
jmp
jbe
sbb
insb
cld
das
lcall
or
aas
out
mov
and
roll
fcoml
loopne
and
pop
sahf
sub
mov
or
lock
sti
mov
push
int
sub
bnd
out
sbb
fldl2t
pushf
insl
call
pop
repz
std
jle
xchg
push
loope
enter
mov
loopne
xor
and
push
test
fucomi
pop
je
test
inc
scas
stos
xor
mov
adc
movsl
cltd
icebp
lea
jmp
adc
inc
jge
call
outsb
inc
sbbb
push
scas
aad
pop
ret
ja
loopne
xchg
aam
in
adc
shrl
in
cmc
jp
ja
push
movsl
mov
pushf
fdiv
mov
fwait
xlat
xor
incb
jae
mul
dec
cwtl
fcompl
add
ja,pt
mov
xchg
sub
iret
int3
inc
and
pop
push
mov
dec
andb
arpl
xchg
loop
aaa
loopne
cli
mov
sub
orb
add
nop
or
outsl
fs
sar
adc
test
dec
repz
pop
sbb
sub
loopne
mov
cmp
imul
repz
decb
sub
imul
dec
xor
ljmp
shlb
lret
sub
inc
shr
hlt
in
xchg
mov
in
add
adc
test
das
dec
in
and
fistpll
movsl
inc
mov
into
inc
stos
notl
pop
add
aam
retw
pop
outsb
push
call
jle
cmpsb
mov
jo
xor
in
inc
add
jmp
xor
pop
and
mov
das
mov
add
fdivr
ret
xor
mov
inc
arpl
sbb
push
cmp
lret
nop
or
cli
in
sbb
int
mov
cld
cmp
ss
dec
rcrl
xor
mov
add
or
xor
dec
mov
jle
inc
mov
das
adc
fistl
int
cwtl
xchg
push
add
xlat
scas
mov
jae
xchg
sub
cmp
adcb
push
daa
cmpsl
mov
cld
or
shll
popa
scas
in
sbb
xor
ja
mov
mov
push
add
fstpl
mov
and
fisubl
adc
jne
cmc
test
hlt
xchg
repz
iret
lcall
push
jno
addl
mov
sub
mov
mov
sarb
or
xchg
push
jb
das
xor
add
mov
mov
jle
adc
dec
out
or
int3
xchg
jbe
cmp
and
xor
xchg
inc
inc
fildll
pop
pop
xchg
aaa
mov
inc
inc
add
stos
call
push
xchg
mov
inc
nop
mov
lret
adc
cmp
cmpsl
and
push
pop
push
ret
insl
rclb
add
pop
mov
testb
mov
push
out
lcall
sbb
dec
loop
xchg
loop
jle
push
xchg
xchg
or
cli
dec
sarb
fidivrs
data16
frstor
sub
mov
inc
adc
xchg
mov
mov
addl
xchg
mov
dec
mov
sub
orl
cmp
shl
pop
push
sbb
roll
nop
int3
arpl
and
cmp
mov
nop
ret
or
push
push
mov
shl
lahf
imul
fsubrl
loopne
sbb
mov
pop
out
xlat
pop
push
inc
pusha
call
sbb
lret
ss
adc
jnp
mov
int3
pushf
imul
mov
mov
add
repz
fidivrl
fisubrl
out
sub
mov
cmpsl
push
adc
ret
adcb
mov
mov
and
jno
push
movsl
mov
ret
into
hlt
inc
arpl
cmp
mov
xchg
pop
cld
pop
in
adc
shlb
out
fcomps
inc
in
mov
fstpl
mov
les
jp
pop
daa
outsb
dec
outsb
dec
pop
inc
cli
out
fidivrs
jl
out
lods
push
xchg
xor
xchg
daa
jns
xor
popf
mov
in
push
cmp
aad
push
fimuls
adc
xchg
fstpt
cmp
adc
dec
loope
je
xor
orl
cmp
fcompl
xor
stos
push
jno
mov
stc
add
pop
dec
add
out
pop
adc
or
pop
jnp
mov
test
ret
dec
test
inc
jno
mov
frstor
stos
subl
nop
stos
cmp
push
outsb
push
lods
jmp
mov
movsl
mov
push
mov
out
fisubrs
insl
sbb
inc
or
inc
sub
lcall
idivb
sub
xchg
and
cmp
and
cmp
bound
jecxz
dec
int3
loopne
icebp
ss
push
pop
sahf
adc
inc
mov
add
lahf
inc
and
adc
stos
faddl
dec
and
mov
js
sti
pop
pop
repnz
cmp
cmc
js
dec
lret
fdiv
mov
insb
int
mov
xor
jl
push
fimull
sbb
shll
add
scas
mov
fcmovnu
pop
mov
iret
in
jns
mov
push
jbe
addb
xorl
sub
sbb
inc
cmp
cltd
imul
dec
sbb
out
dec
lret
pop
or
sub
shll
lods
xchg
push
outsl
mov
cmp
ret
pop
sbb
stos
xor
aas
pushl
push
insb
sub
push
fcmovnu
dec
inc
aad
and
inc
and
mov
inc
dec
mov
lods
dec
jb
fwait
or
push
imul
xor
ljmp
movsl
adc
add
iret
icebp
adc
sbb
xchg
dec
out
and
jl
jb
pop
das
ljmp
ja
les
sbb
xorb
imul
test
test
sti
or
lods
push
sub
hlt
sub
outsl
add
jne
xchg
les
or
push
cmp
dec
xchg
add
inc
addl
mov
fcoms
ret
insb
xlat
lcall
inc
and
and
fsubrl
sbb
into
insl
mov
rcll
sub
or
das
xchg
push
inc
sbb
scas
into
xlat
cmp
shlb
mov
ficoml
adc
faddl
mov
adc
sub
mov
je
mov
insl
bound
adc
mov
mov
shrl
inc
and
xor
insb
sub
sub
je
sub
movsl
fcmovne
inc
mov
int
push
pop
push
shlb
xchg
mov
pop
cmp
cmp
mov
ret
movsb
xor
lea
std
xlat
jge
cmpsl
xor
and
test
pusha
je
inc
scas
les
sbb
add
popa
xor
lods
nop
pusha
sbb
lods
outsb
and
cmp
dec
leave
pushf
xchg
testl
xor
imul
iret
insl
jns
jnp
jle
out
into
mov
mov
xor
scas
rol
xor
mov
es
adc
xor
subl
jb
aaa
popf
pop
xchg
repnz
leave
lds
xchg
adc
inc
jecxz
aaa
xchg
mov
mov
sbbb
xor
xor
and
xor
aaa
ljmp
incb
push
jbe
jmp
push
jp
mov
mov
movsb
push
xchg
or
bndldx
push
and
push
or
add
leave
int
xchg
arpl
or
mov
out
daa
repz
or
adcb
jle
movsl
dec
scas
scas
repz
aam
add
inc
xor
cmp
leave
div
jne
les
adc
ja
mov
jmp
jmpw
jge
test
xchg
outsl
scas
dec
les
movsl
sbb
or
mov
dec
dec
fbld
fistpl
cld
sbb
or
ret
xor
add
lea
and
cmc
stos
xor
int3
mov
mov
push
sub
mov
int3
pushf
add
adc
cmp
adc
insb
inc
in
insb
ljmp
lods
shrb
sahf
shlb
nop
arpl
jp
jo
pop
inc
pop
or
fisubl
mov
push
jbe
movsl
jg
fcoml
popa
fs
test
push
clc
xchg
cmpsb
inc
incb
mov
jge
xor
test
sub
xor
fwait
jg
movsb
sub
fimuls
xor
icebp
cmp
test
push
arpl
mov
xchg
fwait
outsb
jmp
push
or
loopne
push
test
loopne
fistpl
mov
fldpi
les
xchg
mov
jp
adc
les
loop
push
aam
lret
jns
popa
out
dec
dec
inc
jbe
sbb
mov
adc
xor
fwait
into
mov
jmp
sub
ljmp
push
cltd
inc
push
inc
and
cmp
xchg
jmp
or
mov
mov
add
loop
shl
rolb
adcb
rcrb
push
repnz
sahf
inc
jecxz
ret
mov
jb
fs
xor
popf
sti
outsl
xchg
pop
jo
pop
call
mov
orl
or
fmull
outsb
mov
in
pop
mov
jg
fstps
sub
cld
pop
mov
push
xor
or
repz
lds
inc
mov
push
add
or
add
add
fcmovne
cmp
push
mov
or
loop
cs
pop
xchg
lea
mov
addr16
jbe
lods
pop
in
adc
in
movsl
and
inc
movsb
sbb
out
stc
sbb
inc
out
pop
xor
sub
jns
sti
dec
cmp
test
pop
jmp
push
pop
std
xor
sbb
mov
int3
push
int3
js
cli
push
adc
fldcw
push
leave
jns
adc
mov
shrb
flds
or
aaa
sub
jg
and
mov
ss
jge
ja
sti
push
xchg
inc
sub
mov
lea
repnz
sub
push
ret
icebp
mov
rcll
push
push
push
imull
shl
and
mov
mov
jp
fsubrs
test
mov
clc
mov
pop
or
or
jb
xor
and
adc
out
pusha
push
inc
scas
test
or
pop
movsb
push
xchg
loop
sbb
divb
xor
add
sub
xchg
fistpll
aam
sub
sub
sub
cmpl
and
lods
inc
call
jle
lcall
imul
into
call
test
and
xor
or
dec
icebp
dec
cs
cmp
imul
aam
jnp
cmp
hlt
xchg
aam
mov
fisttps
or
cmp
cli
and
imul
and
pop
dec
fstl
cld
aaa
test
ja
cmpsb
mov
mov
cmp
and
je
aas
mov
shrl
out
ss
into
into
xchg
je
pusha
stos
xchg
in
pop
std
addb
pop
jl
int
cld
popf
jg
or
rorb
adc
xor
iret
adc
test
in
cmp
pop
mov
sub
pop
jo
rcrb
lret
pop
aad
js
xchg
call
or
ret
mov
int
mov
jge
dec
sbb
sbb
or
pop
xchg
inc
jns
cmp
hlt
adc
jl
js
es
xor
mov
fwait
ljmp
pop
mov
ljmp
push
pop
mov
shlb
inc
pusha
jae
adc
jl
in
and
inc
mov
jns
es
sbb
sbb
jne
es
pop
stc
cmp
push
mov
pop
push
add
pop
repnz
popf
fmull
fstpt
pop
and
movb
data16
xchg
push
mov
push
pusha
xor
mov
push
jecxz
xchg
jmp
cmp
mov
inc
xchg
jg
pop
cli
and
daa
scas
lods
mov
sub
sub
outsl
flds
lods
daa
pusha
dec
shr
aad
xlat
sahf
lods
adc
sub
out
xchg
jg
push
push
lret
mov
adc
popa
roll
pop
clc
cmp
inc
ret
imul
cmp
and
loope
fsubrs
ljmp
sbb
jge
jmp
cmp
scas
outsb
jle
fdivs
mov
movsb
pop
cmp
xchg
fs
inc
test
inc
sarb
pop
cmpsb
nop
clc
dec
and
pop
in
pop
dec
cmpsl
dec
in
inc
lds
outsb
inc
and
adc
xchg
xchg
negl
insl
pop
imul
sbb
pop
ret
leave
jne
mov
inc
std
daa
call
insb
sub
push
lret
aas
or
or
adc
rolb
pop
pushf
ja
xlat
or
sub
pop
ds
or
adc
sahf
sahf
pop
fdivrl
loopne
dec
scas
out
mov
cmp
sarb
es
push
mov
cmp
cmp
add
mov
jnp
int3
inc
sub
icebp
loope
push
mov
js
popf
jle
das
insl
inc
shr
mov
arpl
cld
ret
push
jmp
or
jne
cltd
out
dec
ret
insl
repnz
bound
loop
add
shr
xchg
mov
insb
in
data16
mov
sub
jbe
js
subl
sub
cs
es
and
lahf
sbb
sar
inc
addb
dec
clc
cmp
mov
inc
stos
sbb
aam
into
sub
out
repz
fimull
pusha
fs
pop
xor
cmc
xchg
dec
in
cwtl
xor
ret
inc
fcoml
cmp
cmp
jnp
mov
cmp
femms
jecxz
push
int3
cmp
dec
imul
xchg
incb
jecxz
inc
mov
dec
xchg
xor
gs
enter
mov
sahf
fs
les
lods
in
xchg
or
lcall
in
fchs
mov
pop
sub
dec
sbb
mov
sbb
and
jecxz
pop
xchg
sub
jmp
inc
imul
xor
fidivl
cmp
dec
gs
js
jge
inc
fstl
fidivl
lea
js
das
mov
outsl
loope
aas
decl
pop
push
leave
outsb
in
xchg
dec
test
adc
ja
pop
pop
ret
add
inc
test
inc
jo
push
push
or
jnp
cmp
push
pop
out
push
das
enter
lds
xchg
cmpsb
hlt
es
cmc
push
jg
rcrl
sub
cmc
imul
cmpsl
int3
out
lock
aam
loopne
in
dec
insl
mov
xchg
arpl
scas
int3
inc
iret
dec
xor
insl
push
cmp
test
adc
xchg
je
jg
inc
or
or
sbb
push
pop
and
jle
mov
rcrl
sub
pop
push
pop
dec
inc
out
dec
xchg
dec
ja
sbbl
push
and
shr
mov
xlat
insb
pop
cmp
movsl
sub
hlt
jl
dec
push
pop
stc
lcall
ret
bound
xchg
fbld
inc
cmp
mov
xor
mov
ja
ret
or
push
es
stos
mov
inc
mov
adc
xchg
pop
sub
cltd
push
loop
pop
dec
add
dec
shl
mov
lds
test
or
int3
scas
mov
push
lds
std
sub
and
rorb
mov
jge
inc
test
cli
icebp
iret
ret
cmp
fdivr
iret
push
push
mov
cmp
aad
mov
xchg
push
push
or
pop
clc
push
dec
mov
push
loope
gs
fwait
mov
sub
fucomp
es
or
rorb
ffreep
or
imul
lods
mov
xchg
fsubs
add
sti
push
rorb
test
js
jge
cmp
out
ja
mov
sbb
and
inc
repz
or
jl
dec
dec
mov
inc
int3
out
mov
adc
out
imul
inc
loope
xchg
mov
pushf
faddl
add
lahf
push
aad
jne
dec
lds
aas
addr16
jg
stc
je,pt
cmp
lock
jno
cmp
mov
insl
jmp
insl
mov
fcmove
dec
ret
pop
in
int3
test
andnps
inc
enter
je
push
and
outsl
cmp
pop
addb
repz
mov
jno
lahf
adc
push
xchg
clc
testb
and
cmp
or
fsubr
testl
cmp
sarl
mov
and
stos
lods
stos
imul
aad
test
xchg
cmp
mov
call
mov
mov
dec
mull
xchg
pop
adc
int
push
and
xchg
sti
dec
or
lds
xchg
and
inc
sub
dec
sub
addr16
push
sti
pop
mov
and
mov
adc
dec
dec
test
xlat
not
xor
in
arpl
xchg
or
loope
xchg
call
lret
call
sub
mov
jle
insb
rcl
mov
jo
or
mov
jmp
or
or
mov
ret
stc
dec
dec
cmpsb
lea
pop
jl
pop
inc
ljmp
into
inc
outsl
cli
jo
cmp
lcall
sarb
popa
fisttps
sub
outsl
rorb
mov
lcall
ror
mov
xorb
sub
lret
hlt
adc
lea
mov
push
addr16
cltd
pop
mov
int
pop
and
push
push
insb
inc
mov
orl
xorb
test
fildl
mov
cmp
xchg
js
inc
je
dec
shlb
pop
mov
sar
sbb
mov
dec
ja
nop
insb
mov
lock
mov
aam
insl
xchg
pop
mov
mov
sub
push
adc
mov
push
or
add
jge
add
cmpsb
pop
adc
inc
inc
ja
cs
lahf
and
loopne
test
xchg
fs
push
addr16
addr16
divb
sub
clc
pop
movsl
jle
imul
push
mov
push
pop
pop
int3
cmpsb
pop
add
or
push
aaa
mov
rolb
jg
dec
mov
xlat
push
lods
cmp
icebp
push
push
and
pop
xor
xorb
mov
inc
and
add
xchg
inc
mov
call
test
cmpsb
mov
jp
push
int3
push
dec
jge
inc
movl
js
jnp
pop
or
cltd
loop
xchg
adc
enter
mov
paddb
adc
loop
mov
shl
iret
out
jbe
fmull
and
scas
imul
push
xchg
jo
leave
push
jp
std
mov
push
adc
mov
imul
out
ror
xchg
pop
pop
stc
mov
xchg
adc
mov
icebp
add
aam
cmpsb
loope
pop
jmp
sub
jo
pushf
pushf
in
mov
rorb
and
fwait
push
pop
ss
xchg
and
fs
lcall
je
das
jl
in
adc
or
data16
adc
adc
adc
repnz
push
lock
repz
imull
mov
je
aas
jae
bound
inc
add
sbb
nop
and
adc
imulb
nop
fistl
fdivs
pop
cmpsl
inc
and
adc
dec
add
add
sub
cli
inc
push
insb
ret
dec
rorb
in
popf
and
daa
outsb
fstl
push
lahf
sbb
sub
js
mov
sbb
out
frstor
out
and
insl
jb
xor
je
add
dec
les
inc
out
lret
pop
cmpsb
mov
xchg
nop
push
cmp
mov
mov
mov
sub
call
mov
jb
out
ds
dec
mov
mov
sub
mov
lahf
pop
sbb
int3
mov
xchg
lods
cli
fwait
pop
sbb
pop
dec
add
sbbl
sub
loope
mov
rcll
imul
inc
in
xor
push
mov
mov
out
mov
stc
shld
dec
in
stos
mov
push
inc
jmp
lods
cmp
ret
scas
out
inc
out
ss
push
xchg
clc
pop
jg
and
addb
pop
inc
int3
fisttpll
add
ret
push
fs
les
push
xchg
inc
mov
or
mov
push
scas
jg
cmpsl
or
or
cltd
and
and
movsl
cwtl
xor
mulb
inc
repnz
lea
mov
loope
inc
jmp
fldenv
popf
or
xchg
xchg
or
fwait
mov
ss
push
cmpsb
or
jge
push
xor
and
or
jo
add
jns
std
inc
push
mov
insl
lcall
xor
cld
out
int3
lock
push
push
jl
xchg
and
movsl
mov
mov
mov
jp
mov
outsb
or
int3
mov
xor
sub
mov
add
das
and
mov
jl
sbb
push
adc
jmp
cld
xchg
stos
je
sbb
fs
mov
in
cwtl
popf
ljmp
repz
adc
or
dec
enter
fxch
sbb
inc
jmp
adc
dec
pushf
dec
outsl
sbb
or
and
cmp
data16
pop
push
divb
sbb
incl
adc
icebp
lahf
ja
scas
mov
loope
or
fistpl
outsb
iret
xchg
and
push
js
cli
jmp
xor
jne
cmp
loop
mov
lock
inc
ret
icebp
popa
mull
cld
push
cwtl
adc
dec
jg
das
mov
ja
or
mov
lcall
cmc
ss
fldenv
loop
cmp
push
push
mov
dec
push
bound
movsb
and
pop
or
mov
pop
mov
mov
loope
jge
and
dec
lds
or
inc
push
sbb
sub
aam
or
sbb
outsl
aaa
mov
repnz
or
sbb
pusha
pop
xchg
ljmp
or
mov
push
repz
jle
pop
mov
sub
dec
clc
fildl
inc
pop
sti
mov
or
add
lea
mov
fisttpl
das
les
popf
es
idiv
stos
inc
mov
test
jnp
and
add
js
cmp
fdiv
imul
ss
mov
fbld
bound
in
imul
add
jp
lret
adc
cmpsb
adc
sbb
mov
dec
test
mov
sbb
xchg
ror
insl
add
mov
rcll
dec
mov
push
sub
xchg
dec
es
jg
dec
ficoms
sbb
dec
clc
in
jnp
sub
mov
push
cmp
jne
bound
dec
xchg
in
xor
sub
inc
push
ljmp
in
sub
lahf
lds
push
test
inc
sbb
jl
inc
bound
into
subb
loop
mov
mov
push
jle
ljmp
test
push
sub
sbb
test
adc
repz
outsb
test
jp
mov
pop
adc
and
mov
es
pop
or
rcll
add
mov
inc
lret
aam
sub
stc
sub
dec
lds
sbb
ds
ss
cmp
dec
and
pop
inc
pop
insl
fucom
inc
push
mov
adc
ds
aas
mov
sbb
push
icebp
and
negl
push
xchg
pop
mov
pop
ja
add
pushf
mov
sbb
int
pop
cmp
jmp
xchg
xchg
jo
pusha
inc
push
and
push
mov
adc
push
lret
pop
lock
mov
jecxz
loop
daa
jecxz
fbstp
repz
dec
xchg
sahf
xchg
enter
mov
or
xlat
mov
add
addr16
js
clc
xchg
iret
arpl
mov
xchg
mov
ja
sbb
sbb
hlt
pop
push
push
fwait
shll
in
stc
sbb
popf
jg
sbb
push
jmp
fisttps
in
pop
mov
mov
dec
sbb
xchg
aam
fcomip
and
add
scas
lods
ja
test
mov
cmp
dec
cmp
mov
stos
sbb
xor
mov
fs
js
aaa
push
out
and
bound
push
imul
fwait
or
sahf
ds
or
inc
pop
mov
je
jl
mov
cmpsl
jne
inc
das
mov
push
jae
lods
js
xor
out
daa
push
adc
mov
rcrl
cmp
pop
adc
ds
pop
rolb
dec
test
and
cs
test
sbb
divb
xor
rol
sti
pop
dec
aaa
add
and
cmc
sbbb
int3
lods
pop
pop
mov
xor
lcall
mov
jp
gs
scas
push
movsb
add
je
jns
inc
ds
int
shlb
cld
xchg
cs
xchg
fcoms
sbb
or
fxch
lods
daa
mov
arpl
fistpll
out
sahf
or
aad
out
aas
push
mov
push
mov
xor
jg
mov
rorb
rorl
pusha
lret
mov
call
test
nop
mov
and
ret
es
xchg
push
or
lods
fidivrs
cmp
or
lock
xlat
fildll
fcoml
cmp
adcb
subb
jge
inc
adc
pop
sub
jne
xchg
sub
mov
xor
jne
pop
or
mov
jbe,pn
das
mov
or
cmovge
pop
push
push
mov
sti
mov
pop
scas
repz
out
lret
or
xlat
fcmove
test
mov
add
mov
sub
dec
sub
les
es
inc
inc
out
dec
imul
lret
cmp
scas
lret
lods
and
jg
mov
cmp
jp
aas
jle
das
jge
cmc
sub
jnp
xchg
cli
arpl
add
xchg
insb
int3
popf
in
mov
in
pop
std
pop
pop
mov
xor
jns
sub
scas
sbb
mov
dec
mov
inc
and
cmp
adc
es
setnp
jnp
dec
add
inc
enter
adc
aas
mov
aaa
and
pop
push
in
int3
lahf
xchg
roll
add
push
in
cwtl
rcrl
imul
test
popa
xchg
xchg
inc
push
out
nop
and
out
cmpsl
mov
mov
and
js
lcall
out
xchg
push
jnp
loop
daa
imul
loop
ret
pop
lods
lret
inc
mov
pop
outsl
pop
lea
lock
inc
repnz
bound
xorb
scas
stc
push
adc
xor
fwait
xor
mov
stos
add
cltd
test
gs
push
test
repnz
pop
sbb
and
push
and
std
aad
rcrb
sub
hlt
ficoml
addr16
out
xor
insl
sbb
jb
pop
or
test
add
cvtps2pd
fidivrs
stos
inc
insb
rcrb
test
jle
jg
sahf
stos
lahf
sub
sar
roll
push
xchg
ficoml
inc
shll
push
xor
mov
arpl
fnstenv
mov
mov
cmp
stos
add
dec
jo
nop
aam
add
inc
out
add
push
and
or
addr16
xchg
dec
pop
or
or
paddw
mov
dec
pop
sarl
stos
inc
mov
mov
int
out
mov
push
jmp
outsl
pop
jne
cmpsl
mov
out
outsl
iret
repnz
dec
fisttpl
enter
mov
add
jns
add
push
push
loop
pop
jecxz
out
jns
dec
xchg
inc
add
cs
sbb
push
into
sub
int3
cs
gs
repnz
jo
rcrb
bound
call
stos
jp
pusha
sub
xor
pop
mov
mulb
shlb
pop
jp
xchg
cmc
xchg
sbb
cmc
es
out
lea
and
icebp
sbb
ss
mov
pusha
or
push
sbb
inc
jns
nop
push
mov
xchg
add
push
movsl
dec
in
fnstsw
push
and
add
adc
jne
arpl
inc
inc
mulb
cmp
or
mov
sbb
adc
cmp
adc
ret
outsl
mov
pop
les
pop
mov
sbb
xor
xor
ficoml
icebp
mov
push
dec
push
dec
jbe
lea
add
mov
and
add
stc
lret
push
insb
xchg
mov
iret
inc
mov
lock
and
and
into
dec
xchg
popf
ss
xchg
xchg
dec
scas
pop
xlat
or
in
dec
lret
mov
test
dec
test
add
jae
stos
test
sbb
cltd
rcrb
sbb
pop
cmp
shlb
stos
mov
rcl
add
shlb
enter
xor
sbb
and
cld
out
ss
clc
dec
or
cltd
jecxz
and
test
repz
xchg
insl
or
es
mov
mov
xchg
mov
sbb
ja
xlat
fldenv
mov
dec
cld
dec
mov
call
pxor
stos
jno
bsf
push
sbb
inc
jb
pop
test
ror
xor
cmp
mov
push
test
xor
mov
push
sbb
inc
enter
js
push
scas
xor
xor
loop
xor
push
ret
rolb
and
and
in
out
arpl
sbb
imul
lret
cmp
and
xchg
je
push
pop
xchg
loopne
jno
movsl
sub
popf
rcll
fisttpll
or
std
aas
xchg
jno
test
mov
and
dec
loop
push
push
adc
stos
dec
sbb
divl
in
or
push
pop
out
ficoms
cmp
sub
nop
fcoms
mull
outsb
cmp
add
gs
or
pop
push
rcll
rclb
lods
sahf
xchg
or
stc
inc
pop
pop
dec
sbb
sub
push
int
stos
repnz
pop
fwait
sub
push
repz
rcl
out
loop
dec
mov
adc
insb
add
sbb
leave
dec
xor
mov
sahf
addr16
outsb
sub
mov
push
push
pop
aam
inc
enter
andl
mov
inc
cmp
or
dec
jle
mov
inc
pop
insb
orl
push
push
and
mov
outsb
pop
shll
jbe
jl
push
sahf
imul
pop
cmp
mov
in
sub
lock
lahf
fdivrs
jg
iret
cwtl
add
fcmove
push
sbb
mov
push
adc
inc
into
cmpsl
pusha
cmc
fwait
test
and
mov
and
stos
rorb
mov
jp
bound
add
push
roll
add
push
push
inc
push
jae
nop
push
outsl
dec
dec
shll
lret
sbb
inc
cmp
es
pop
push
gs
xchg
loope
aas
lds
mov
xor
cmp
xchg
orl
jle
icebp
fistpl
das
adc
movsb
push
jno
ret
stos
jmp
scas
std
fnstsw
aas
jp
gs
xchg
scas
add
imul
adc
mov
popf
pop
sbb
cltd
cmp
and
cmpsb
stos
lret
and
sub
in
loope
in
inc
push
add
fs
mov
sbb
int3
sub
or
adc
xchg
mov
or
lea
sti
insl
into
dec
test
inc
outsb
pop
push
sub
or
push
pandn
jmp
xor
inc
cmpsb
dec
xor
fwait
stc
int3
std
xor
test
cwtl
xor
push
hlt
addr16
or
subl
sbb
add
jp
fsubr
or
lea
cltd
imul
or
in
xor
nop
out
lods
test
movsb
repnz
cmpsl
leave
lods
loop
ds
mov
jnp
cli
sub
pop
outsl
lods
mov
enter
ret
xchg
in
subb
fnstsw
mov
add
idiv
adc
mov
in
cld
stos
lahf
enter
adc
or
mov
xor
lods
and
shlb
push
iret
int3
stc
imul
xor
push
jae
pop
lahf
out
push
add
test
pop
sub
add
aad
push
enter
fwait
cmp
test
insl
push
lret
jbe,pn
xchg
sbb
in
cmp
push
mov
xchg
cli
xor
inc
push
outsb
jge
fmuls
push
cwtl
popf
fidivs
lcall
movsl
insb
jl
pop
mov
and
setbe
stos
ljmp
int
cltd
add
bound
jl
cli
pop
fmulp
pop
mov
leave
ret
shll
cmc
aam
fldl
nop
or
out
insl
jl
movsb
add
cltd
test
inc
sbb
icebp
push
movsb
js
ja
mov
mov
push
jno
push
mov
pop
ret
jle
jne
stos
or
add
mov
pop
iret
in
mov
arpl
int
jne
iret
adc
push
add
imul
jl
inc
sub
lahf
push
jne
xchg
xchg
cmp
cmp
scas
hlt
std
and
inc
out
mov
icebp
adc
insl
data16
int
orb
stc
out
pop
sbb
push
rcl
enter
xchg
mov
dec
rcrl
scas
sbb
out
aad
xchg
cwtl
out
or
jb
xlat
mov
push
sbbl
cli
clc
testb
jo
jno
xchg
xchg
out
jge
sahf
out
xchg
aaa
loope
push
mov
loopne
mov
push
add
mov
mov
jae
addr16
add
pushf
dec
pop
aaa
xchg
jp
scas
dec
mov
sbb
pop
push
rolb
adc
and
into
cmp
sbb
add
lret
jl
xorb
shrl
xor
jle
adc
push
mov
lret
sub
ds
int
and
pop
fdecstp
int3
incb
push
dec
xor
xchg
xchg
in
aad
push
fisubs
jecxz
nop
mov
xor
shlb
pop
sbb
test
xchg
sub
adc
push
xlat
loopne
andl
jnp
nop
pop
gs
sbb
insb
and
les
stc
xchg
arpl
sub
xchg
js
inc
pop
lcall
jae
jmp
push
and
inc
adc
add
flds
aaa
test
ds
pop
les
loopne
add
push
pop
mov
es
mov
into
push
mov
xlat
cmp
lcall
fs
call
je
xchg
pop
jecxz
mov
inc
lods
mov
iret
push
sbb
mov
loope
addb
mov
or
and
sbbl
inc
or
inc
sar
sar
lds
insl
test
dec
in
sub
lods
xchg
out
mov
std
and
into
scas
mov
dec
pop
scas
hlt
push
push
mov
pcmpgtw
xchg
inc
pop
popf
gs
pop
fstps
test
test
aam
fildll
nop
mov
pop
xchg
and
insl
pop
mov
push
fcomps
insl
and
sub
je
mov
shrb
pushf
in
cli
mov
outsb
jns
jns,pt
loope
notb
mov
out
add
outsl
mov
mov
int
test
inc
cld
ret
cld
pop
iret
pushf
dec
lahf
jmp
mov
sahf
cmc
pop
cmp
push
ret
cmp
lods
xchg
fldl
lcall
push
adc
inc
ss
pop
add
or
xor
add
mov
lock
lds
sti
xchg
cmp
cmpsb
mov
pop
lods
les
int3
loope
mov
lock
jmp
sub
lock
imulb
sbb
ret
push
push
pop
push
iret
repz
and
inc
mov
push
pop
or
xchg
cli
sub
fistl
pop
fists
mov
fldenv
push
popa
lret
bound
fwait
push
fldl
sub
loop
jmp
cmp
bnd
call
mov
xor
insl
xchg
mov
lret
push
jae
or
subl
add
mov
neg
push
sbb
out
ss
stos
incl
jle
cmp
ret
aad
pushf
cmp
push
xchg
or
imul
out
orb
in
inc
adc
xor
pop
xchg
inc
call
xor
jae
add
rcll
clc
pop
pop
push
adc
daa
push
adcb
test
adcb
iret
cli
int3
cmp
pop
sbb
js
jne
ret
sbb
add
cmp
add
or
pop
mov
scas
and
mov
loope,pt
push
imul
insb
jle
mov
lock
subb
gs
cmpsb
inc
les
les
push
mov
push
nop
push
mov
push
cmpsb
add
xor
cld
je
pop
push
dec
pusha
pushl
test
addr16
sbb
pop
and
int3
scas
cmp
test
sub
nop
pop
jmp
call
pushf
push
mov
adc
pusha
sti
icebp
pop
outsb
mov
adc
dec
mov
cltd
lret
cmc
test
cmp
xor
std
scas
jnp
sub
jg,pn
dec
das
mov
aaa
dec
mov
mov
in
jbe
jmp
imul
adc
inc
inc
gs
test
sti
or
insb
in
mov
jbe
rclb
pop
sahf
push
adc
pop
mov
adc
push
insb
cmp
dec
or
cmp
sti
mov
and
and
sbb
call
fcmovnbe
lods
sbb
xor
scas
adc
dec
pop
test
sub
and
jmp
mov
inc
ds
sub
aam
mov
imul
mov
wbinvd
cmpsl
mov
inc
xchg
push
push
jl
jmp
jp
lds
in
ficomps
sub
imul
bound
ljmp
add
xchg
mov
xor
lahf
pusha
adc
or
cmp
vmaxpd
inc
xchg
push
cmp
mov
scas
addr16
push
daa
jp
fstpt
pop
imul
jge
aaa
into
sub
mov
mov
sti
lea
add
cwtl
sti
adc
push
andb
xor
stos
xchg
and
in
pop
xchg
pop
fildl
js
adc
mov
je
sub
es
mov
xor
xor
push
pusha
push
fnstsw
fldcw
mov
sub
arpl
adcb
cmp
aaa
and
pop
push
cmp
fcmovbe
daa
mov
lahf
les
dec
jmp
jge
mov
insb
pushf
outsl
ljmp
mov
insb
mov
pushf
scas
xor
mov
jne
gs
or
js
test
mov
fdivl
jl
sbb
xchg
mov
jmp
adc
rol
test
les
and
cmp
xor
xchg
int
xor
sbb
stc
xor
adc
hlt
lock
clc
push
pop
jo
cmp
jb
jnp
jnp
add
and
or
sub
cli
out
mov
cli
xchg
xlat
or
lcall
and
aaa
sub
fnstcw
nop
out
aaa
jnp
sub
mov
mov
add
cs
pusha
subb
aaa
inc
fmuls
cltd
and
or
insl
or
inc
xor
push
cld
mov
sbb
bndldx
push
add
mov
add
jmp
ret
leave
aam
push
mov
and
scas
pop
aaa
popl
dec
or
sub
dec
lods
popa
sub
icebp
inc
shll
cmp
aad
fidivrs
xor
push
repz
dec
mov
les
pop
insl
cmpsb
xchg
dec
test
mov
add
idiv
sub
push
popf
mov
adc
rcrb
xor
cltd
and
popl
movsb
add
and
sbbb
lahf
add
fcmovnb
cmp
jbe
push
lcall
das
in
rolb
push
mov
aas
lods
xchg
jnp
jbe
dec
add
jae
mov
stc
repnz
dec
jp
lahf
in
jmp
mov
push
imul
jb
jno
fcompl
or
sub
int3
adc
mov
hlt
and
fucomip
inc
fmull
xor
lret
and
sbb
xor
push
imul
insb
loopne
bound
jnp
xchg
jnp
es
sbbb
and
cltd
int
pop
add
cmp
sbb
xchg
mov
popl
push
cli
movsl
or
lea
mov
pop
leave
leave
xor
cltd
or
std
shlb
inc
hlt
out
pop
ljmp
aas
and
in
sbb
inc
mov
jp
insl
hlt
xchg
sub
fildll
dec
into
inc
push
xor
repz
out
mov
inc
or
dec
push
mov
lock
je
shll
dec
jle
push
iret
into
popa
das
xor
inc
jnp
cmp
inc
out
shlb
dec
xor
adc
mov
adc
mov
or
sbb
push
and
loop
adc
lret
push
pop
lds
jp
push
mov
cmp
ret
inc
shrl
ds
ss
sbb
pop
into
jg
adc
in
push
cmpsw
and
jno
lcall
sbb
loope
das
or
mov
call
jmp
mov
push
iret
cld
cs
push
inc
imul
dec
jle
jmp
jl
xchg
clc
sbb
jecxz
push
and
add
out
scas
daa
and
add
push
loop
inc
divl
dec
test
mov
mov
xchg
xchg
sbb
int
pop
cs
add
inc
cmp
sbb
pop
lcall
adc
cmc
xchg
inc
fs
cmp
ret
mull
xor
scas
xor
lret
in
fwait
dec
mov
add
dec
xchg
pop
cmp
jbe
xor
ret
repnz
popf
in
adc
xor
cmpsl
xchg
test
push
lods
xchg
das
xor
shlb
pop
mov
mov
mov
test
sbb
adc
jnp
sub
jp
xchg
pop
lock
or
xor
cld
sub
jl
dec
outsb
or
dec
aaa
or
push
mov
frstpm(287
jo
mov
or
xchg
mov
imull
decl
pusha
cmp
xor
repnz
ljmp
movsl
cmp
fsubr
lods
mov
pop
push
clc
arpl
jmp
pop
jge
mov
scas
scas
sbb
xor
adc
sub
int3
daa
gs
testl
loope
lock
sti
add
jb
and
mov
cmp
push
ja
pop
enter
daa
fs
and
rcll
cmp
out
les
pop
in
sbb
and
push
adc
dec
stc
div
xchg
or
lret
adc
insb
lods
adc
inc
jp
lds
into
or
rcr
sub
sub
aaa
mov
jae
jle
pop
jbe
mov
fcmovb
or
loop
mov
addr16
clc
xchg
or
mov
mov
aas
je
inc
mov
xchg
js
push
inc
add
jb
mov
dec
ss
dec
out
xor
std
popf
pop
cmpsb
or
ds
and
ds
nop
cmp
inc
adc
and
test
push
loopne
cli
sub
imul
mov
cmp
shlb
sahf
mov
or
call
jmp
ss
pop
daa
lock
jl
stos
push
xchg
xchg
cli
sub
dec
pop
rcrl
jns
pop
and
xchg
icebp
jnp
lds
mov
xor
subb
xor
xchg
outsb
imul
pusha
xor
fsubrs
cmp
dec
and
xchg
iret
sbb
mov
xchg
fcmovnu
outsb
xchg
cmp
and
dec
push
push
in
cld
dec
pop
dec
inc
xor
incb
arpl
out
mov
mov
lods
pop
pop
jmp
xchg
xlat
mov
cmp
inc
pusha
push
loopne
lret
loope
fdivrl
pop
fdivl
dec
jl
mov
mov
nop
lea
shl
imul
inc
jo
sbb
shlb
and
dec
cltd
je
ja
leave
cmp
and
loope
in
ud1
cmp
or
mov
incb
add
pusha
mov
xor
inc
cmpsb
in
hlt
sub
xor
out
cld
mov
int3
dec
xchg
push
loope
jb
movsb
mov
jg
leave
mov
mov
adc
jnp
sbb
jecxz
sub
dec
xchg
cmpb
mov
hlt
cmp
cmp
sbb
call
std
loope
add
mov
shrl
fnstcw
or
xchg
mov
push
cltd
popa
cmp
fnsave
arpl
dec
jge
scas
inc
jmp
mov
pop
insb
jmp
sub
mov
int3
and
ss
add
inc
mov
daa
or
test
pop
or
mov
rolb
xchg
ffree
sub
dec
mov
dec
shll
adc
jg
paddsb
cwtl
lock
adc
cmpsb
lahf
adc
std
jg
fcmovu
xchg
pop
or
call
xchg
cmovp
adcb
mov
mov
clc
mov
lds
cmp
dec
inc
scas
cmc
lret
and
js
jmp
fucomi
jle
add
fwait
or
jp
cmp
sub
repnz
sub
hlt
jg
imulb
mov
jg
xor
das
loopne
ret
rorl
jg
rep
push
and
jge
test
mov
jmp
fsts
stos
ja
lds
arpl
vunpcklps
popa
dec
jle
cmpsl
sub
imul
mov
mov
push
pop
pusha
out
shlb
gs
test
mov
fcomp
scas
mov
xor
adc
jno
push
xchg
inc
dec
in
repz
imul
cli
push
shlb
mov
ficompl
inc
adc
in
les
xchg
add
mov
mov
imul
add
mov
outsb
inc
insb
or
add
leave
jmp
lock
add
sub
push
add
out
and
and
mov
dec
pop
pop
mov
pop
mov
ss
or
mov
imul
ljmp
inc
popf
jg
into
or
dec
adc
mov
inc
in
pop
jl
push
cmc
adc
or
std
daa
scas
lods
dec
das
movsb
cmp
fs
xlat
fdivrs
outsb
xchg
mov
hlt
inc
fmuls
pop
aaa
call
ljmp
xorl
jmp
enter
sub
jp
dec
in
add
jge
mov
push
fcomps
in
leave
push
pop
sbb
adc
mov
mov
mov
scas
arpl
shlb
psadbw
loope
push
fisubs
rcrl
pop
jmp
iret
push
pop
mov
shrl
nop
bound
push
sub
shll
outsl
sub
das
jnp
inc
push
pop
xchg
sub
push
mov
les
aad
test
nop
mov
and
push
int
aad
jp
add
scas
sub
fs
adc
pop
pop
ret
or
lahf
popf
int3
xchg
inc
push
cmp
inc
xor
sarb
mov
stos
in
mov
and
push
push
xchg
pop
outsb
jg
andl
cmpsb
pop
int3
fadds
imul
push
js
mov
push
jno
fcompl
cmp
cmpb
lock
pop
adc
fwait
pop
and
mov
add
jp
dec
cmp
daa
dec
hlt
pop
pop
cmp
cmp
push
sub
jae
and
cmp
cmpsl
popa
enter
dec
iret
shll
push
or
jge
and
shlb
aam
sub
int3
lcall
add
rcl
out
lock
mov
xor
jae
insl
mov
adc
pusha
aas
pushf
cmpsb
lods
inc
shrl
sub
add
fs
adc
sbb
xchg
mov
mov
xchg
scas
aas
call
mov
cmpsb
out
ret
xchg
and
lcall
sub
sub
adcb
mov
in
jle
outsl
sbb
sahf
ja
cmp
xor
mov
outsb
scas
ljmp
fisubrs
addr16
sbb
inc
adc
add
les
or
xchg
mov
push
jne
jecxz
out
and
in
ret
xchg
jb
push
sub
call
lcall
sub
pushf
jmp
or
mov
aas
jns
inc
xor
test
cmp
dec
pop
push
adc
mov
sti
dec
and
outsl
cmp
push
sti
call
lret
loopne
lahf
xchg
mov
cmpb
mov
dec
push
pop
push
and
ret
push
push
push
pop
fcoml
adc
xchg
push
movsb
arpl
mov
mov
sbb
test
mov
sub
out
js
pop
scas
jg
movl
sbb
mov
in
pop
xchg
imul
pop
cmp
and
and
test
and
xor
orb
sbb
enter
shlb
loope
dec
or
jnp
mov
xor
pop
aas
inc
cmc
jle
popf
and
xchg
pop
xchg
mov
test
add
cs
sbb
fsubs
mov
arpl
out
mov
mov
xchg
pop
fs
neg
pop
lahf
mov
and
mov
nop
repnz
movsl
xor
and
push
jnp
movsl
ljmp
xchg
xchg
idivl
cwtl
push
jno
or
dec
sahf
mov
push
ret
adc
les
and
out
scas
mov
gs
xchg
push
cmpsb
cwtl
jl
lods
test
adc
cmc
adc
mov
or
sti
jl
pushf
mov
mov
fisttpl
xchg
inc
jno
inc
jle
push
shlb
pop
fs
in
or
adc
rep
xchg
sub
frstor
repz
int
shlb
inc
mov
loopne
mov
or
outsl
jecxz
test
enter
es
imul
cmc
push
lods
jge
and
cmp
cltd
xor
jnp
dec
dec
inc
test
dec
mov
in
cs
cwtl
aaa
imul
add
enter
pop
jbe
adc
pop
jns
in
aad
lcall
mov
adc
fsubl
imul
xchg
out
cmp
sub
out
dec
pop
mov
outsb
pop
pop
popf
mov
bound
dec
xchg
and
in
xor
cwtl
jl
dec
jl
mov
sub
xlat
int3
push
rcrb
lock
mov
scas
js
cltd
shll
sub
sub
xor
sti
xor
xchg
in
aas
ficomps
or
out
jl
sbb
push
lock
jecxz
movsb
sub
lods
xor
add
pop
dec
dec
jecxz
or
adc
loop
push
pop
inc
mov
rcll
stc
fbld
xor
leave
xchg
lcall
or
jg
rcrl
add
cltd
mov
pop
std
inc
das
rorl
jmp
xlat
insl
jne
test
imul
pop
jg
cmp
inc
inc
in
mov
mov
ret
push
in
sub
ljmp
ficompl
and
bound
sbb
mov
xchg
pop
push
lods
jb
pop
fsubs
mov
push
fcoml
rorl
cli
push
fdivr
imul
xor
jb
sbb
sbb
out
adc
and
push
mov
push
inc
std
repnz
add
sahf
jge
in
inc
arpl
mov
iret
mov
mov
push
jge
adc
dec
test
outsl
test
repz
inc
xchg
jecxz
pop
push
sub
cld
out
dec
mov
mov
jb
mov
push
fs
repz
stc
or
and
das
setb
mov
shrl
push
loope
dec
xchg
repz
cld
bound
stos
sbb
imul
and
push
jmp
das
xchg
arpl
cmp
fiadds
gs
adc
sbb
test
daa
rep
imul
push
push
hlt
je
mov
or
pop
je
mov
ficoml
jae
pop
fwait
mov
test
call
pop
xchg
mov
mov
loop
test
cmp
in
mov
fisttpll
cmpb
mov
imul
dec
add
mov
push
mov
sbb
inc
pop
push
cmpsl
fs
push
xor
xchg
lea
shl
jecxz
into
lock
or
fsubrs
mov
inc
mov
das
adc
negl
inc
mov
mov
dec
and
outsl
mov
mov
lock
inc
sub
loope
mov
dec
sarl
stos
add
sysenter
pop
aas
or
xchg
insl
pop
add
inc
fnstenv
mov
and
into
dec
add
aam
xor
repnz
cmpsl
fwait
and
lret
jge
data16
sbb
jnp
push
imul
jmp
or
aas
icebp
dec
imul
xchg
ljmp
popf
jg
ljmp
fldcw
adc
xor
sbb
sbb
sub
iret
int
fwait
iret
mov
rcr
dec
push
jno
lock
mov
test
js
gs
aas
ret
pop
sbb
in
mov
pop
adc
in
sub
inc
and
xchg
int3
insl
popa
repz
dec
shl
pushf
xchg
insb
adc
fwait
jnp
sub
push
jmp
mov
outsb
jb
insl
push
inc
sbb
jns
bound
ret
fistpl
jmp
ret
fs
push
sub
insl
xchg
out
cwtl
int
sbb
push
aaa
cmp
out
icebp
mov
sbb
xorl
pop
cli
push
cmp
nop
in
adc
and
xlat
push
lret
pop
add
cmc
out
mov
call
outsb
stos
mov
sbb
mov
or
adc
cmp
jae
sub
loop
mov
xor
rcrl
dec
pushw
ficoml
push
scas
fisttpl
loop
dec
leave
mov
inc
push
shl
jnp
pop
iret
or
cwtl
mov
xchg
sub
fdivrp
sbb
push
push
inc
int
add
sub
loop
jo
xorl
stc
mov
fldl
pop
lock
push
sarb
or
inc
icebp
and
sbb
mov
fcoms
cmp
outsb
lods
push
mov
in
lret
jbe
sahf
les
add
cmc
inc
das
mov
pop
aaa
pop
xor
pop
jmp
pop
xor
or
pusha
pop
icebp
inc
jno
add
lods
xor
lret
sbb
inc
push
nop
loop
imull
popf
jecxz
and
xor
push
ret
movsl
pop
lock
pop
in
outsb
mov
enter
mov
mov
lahf
into
imul
cmpsb
push
push
jo
cmp
ret
and
dec
pop
jmp
jo
or
scas
enter
lods
pop
mov
dec
fwait
push
in
pop
mov
rcr
xchg
adc
sbb
mov
stc
sub
mov
dec
scas
rclb
xchg
lods
add
lods
and
mov
sub
out
lcall
sti
mov
inc
mov
mov
ljmp
dec
xor
into
inc
ss
jmp
imul
in
add
js
push
sub
sar
cmp
jmp
jle
sbb
or
in
icebp
rcrl
fcompl
inc
pop
fdivp
inc
mov
mov
fisubl
mov
les
test
ret
xor
add
add
leave
dec
int3
clc
in
push
and
mov
sub
xchg
cmp
or
pop
out
mov
cmp
cmpsb
fs
jg
nop
addl
mov
imul
jge
mov
inc
lods
not
out
or
aaa
pop
cli
out
sub
or
push
ja
dec
adc
and
add
lock
arpl
dec
cli
lcall
pop
pusha
test
lea
jnp
loope
ss
xchg
loope
mov
std
fidivrs
jle
sub
pop
cltd
lods
dec
mov
lret
jmp
add
inc
shll
lock
mov
arpl
dec
adc
gs
std
stos
lret
xor
rolb
fnstcw
jl
jo
bound
or
dec
cmp
test
int
adc
cmp
outsb
outsb
inc
mov
scas
pop
pop
fisttpl
mov
mov
push
jb
rorb
mov
and
or
in
stos
cmpsb
icebp
sets
mov
orb
xorl
jno
pop
cmp
lret
scas
xor
xor
mov
shll
jp
lods
stos
aam
sahf
jae
inc
lret
sbb
fs
cwtl
cmc
pop
mov
mov
cld
daa
movsl
cmp
mov
ljmp
cmp
xchg
mov
xor
lods
sub
jg
leave
inc
xchg
sbb
jg
sub
or
call
adc
aam
ljmp
mov
mov
daa
pop
and
icebp
or
cmp
pop
imul
adc
cli
sub
xchg
outsl
lds
popa
aas
jl
sbb
jge
insl
loope
lret
push
lock
jmp
push
xchg
std
inc
cmp
inc
test
xacquire
or
adc
mov
loope
pop
adc
dec
rolb
cmp
movsb
repz
pop
shlb
fsts
out
xlat
jnp
mov
ret
fnstsw
enter
aaa
out
cltd
mov
cmp
inc
movsb
xor
sub
jno
push
vmwrite
pop
out
lods
xchg
clc
cmp
out
adc
adc
xor
mov
fnstenv
hlt
ror
ffreep
mov
lret
jl
clc
ficompl
lods
and
mov
insb
pop
mov
dec
mov
clc
femms
sbb
inc
test
in
pusha
movsl
mulb
jg
js
lea
mov
dec
fisttpll
push
cwtl
movl
push
popa
addr16
inc
aad
pop
xchg
push
sbb
xor
cs
dec
adc
jecxz
adc
rclb
ficompl
adc
xchg
dec
add
in
inc
mov
rcl
push
leave
fstps
popf
and
jnp
fcompl
ret
popl
sbb
push
cs
sub
imul
sbb
push
add
mov
popf
aas
dec
jg
cmpps
mov
jmp
dec
jne
fisubrl
pop
inc
jmp
adc
xlat
movsl
in
adcl
dec
jecxz
loopne
fsubrs
jnp
inc
or
mov
out
xor
cwtl
fdivs
inc
mov
jo
ljmp
movsb
dec
push
pop
fdivl
jecxz
mov
adc
add
stc
out
cmp
sub
inc
mov
push
push
sub
add
shll
fwait
push
out
lcall
jl
lcall
ljmp
gs
jge
mov
mov
lcall
xor
push
fbld
cmpb
mov
test
pop
ss
xchg
ja
inc
test
stos
or
sti
popf
movsl
cmpsb
pop
push
xlat
icebp
pop
jae
lds
std
fildl
mov
fcmovnbe
daa
jno
pop
sbb
inc
enter
mov
ret
and
cltd
mov
xlat
mull
lret
in
scas
inc
les
sbb
pop
lret
xor
pop
incb
jmp
mov
orl
sbb
jo
xor
jge
ljmp
and
out
inc
out
mov
dec
popa
mov
or
mov
push
iret
push
inc
pusha
xlat
push
subb
je
push
jb
add
ret
lods
aam
mov
jge
xor
mov
push
inc
push
adc
or
pop
push
add
mov
sbb
push
mov
add
cmpsl
ljmp
and
test
fsubrs
pop
sbb
xchg
fmull
pop
xchg
pop
mov
and
push
sbb
and
cwtl
push
sbb
cli
scas
lock
adc
ficompl
xchg
adc
push
adc
int3
cmp
pop
mov
movsb
leave
aad
jl
push
or
mov
faddp
mov
sub
mov
dec
push
insl
cmp
adc
out
mov
cmp
xchg
add
or
ja
lods
sub
lret
cmpl
outsl
sub
mov
pop
add
pop
cmc
sub
add
call
add
jne
jp
and
and
mov
hlt
add
enter
inc
mov
pop
push
adc
loope,pt
sbb
mov
data16
es
jmp
call
mov
repz
mov
and
push
nop
inc
rorl
gs
push
jmp
pop
ss
int3
and
gs
in
and
movsl
jg
mov
xor
mov
cld
in
lods
mov
insl
push
ja
jo
jg
int
scas
inc
jecxz
and
and
je
cmp
pop
outsl
mov
fwait
ljmp
and
out
sarl
imul
cmp
test
mov
add
cld
cmp
jo
fadds
xchg
outsl
repnz
mov
pop
popa
push
cmp
lds
pop
out
ret
inc
mov
outsb
add
negb
cmp
mov
push
ja
mov
xchg
test
mov
cld
ss
adc
arpl
aaa
out
inc
mov
mov
fadds
nop
jo
movsb
dec
and
sub
imul
xchg
jb
mul
dec
jns
mov
inc
lret
mov
jns
pushf
mov
push
lods
scas
and
xchg
mov
sub
mov
lods
cli
xorl
loope
addr16
xchg
push
fmuls
arpl
pop
inc
cmp
dec
jmp
push
cli
ds
out
pop
and
arpl
push
cmpsl
lods
or
cmc
psubusb
fucomi
fisubrl
jns
pop
int
xor
loope
jecxz
scas
cld
and
sbb
lcall
int
and
ror
aaa
xor
dec
js
faddl
ud2
push
js
enter
outsb
sarb
rol
cmc
and
inc
mov
scas
or
sbb
mov
jns
push
mov
das
nop
dec
data16
mov
stc
js
pop
mov
push
outsl
cwtl
sbb
shrl
leave
pusha
jecxz
mov
push
ret
and
push
fs
pop
mov
mov
imul
sub
leave
outsl
arpl
xchg
add
mov
push
ljmp
repnz
jnp
test
fmuls
inc
jmp
repz
fisttpll
imull
std
fistps
or
jge
daa
inc
push
std
ja
push
mov
outsl
scas
in
inc
inc
mov
xor
xchg
sub
sahf
pop
ljmp
or
out
stos
sahf
or
mov
cld
pop
pop
daa
add
out
mov
or
rolb
sarl
outsb
nop
cmp
mov
fimuls
adc
adc
jbe
xchg
test
mov
stos
popa
push
data16
mov
mov
outsb
cmpsb
sub
sub
ret
mov
aas
icebp
rorb
out
pop
mov
lcall
imul
lret
pop
or
pop
outsl
sbb
mov
popf
roll
mov
outsb
or
xlat
xor
dec
mov
add
imulb
xor
jb
add
inc
cmc
pop
mov
sti
and
and
dec
movsb
test
mov
mov
adc
and
mov
sti
sahf
and
mov
cmp
ds
xchg
pop
jne
fiaddl
pop
jle
inc
pusha
push
sbb
rolb
lahf
nop
xchg
hlt
arpl
add
aas
jp
lcall
shll
cmp
or
dec
subl
sub
mov
pop
jg
popf
test
mov
xchg
pop
movb
jno
pop
jnp
sahf
xor
dec
cwtl
gs
cmp
push
push
xor
pusha
mov
inc
and
jge
pop
add
sbb
xlat
pop
mov
adc
mov
push
pop
aad
mov
js
in
lcall
loopne
jl
add
lods
push
rcrl
jmp
orb
mov
jg
les
and
stos
xchg
std
push
lret
cmc
fwait
into
mov
clc
or
fs
push
push
and
call
and
xchg
mov
daa
clc
iret
je
cmp
mov
loop
pop
repz
mov
pop
and
iret
jne
call
lret
fs
dec
xlat
stos
adc
sbb
enter
ret
fldl
shrl
call
jmp
mov
pop
push
dec
leave
push
div
add
jl
aas
push
mov
and
jecxz
loop
add
cmp
loop
xchg
int3
hlt
out
hlt
int
xor
cs
out
mov
xchg
sbb
adc
fimuls
xchg
cmp
test
inc
lret
ret
sarb
pop
in
mov
pop
mov
pop
push
cmp
insl
sahf
pavgb
scas
dec
xor
sbb
jmp
jbe
icebp
les
or
sbb
jae
add
dec
and
aas
repnz
loopne
loopne
xchg
and
int3
int3
pusha
push
je
out
jecxz
add
cli
out
mov
shll
fs
data16
aad
in
push
movsl
fldenv
lahf
dec
enter
mov
xchg
sub
add
push
sub
rcl
les
xlat
int3
pop
cmp
clc
pop
adc
xchg
arpl
fnsave
pop
sbb
sub
test
jns
test
jae
fsubs
ret
in
dec
daa
xchg
pop
nop
or
iret
lret
filds
jnp
pop
shll
aas
int
pushf
jbe
push
push
sub
xlat
dec
inc
dec
jp
jecxz
test
aas
dec
xchg
adc
mov
setns
push
mov
addb
pop
dec
orl
je
loope
in
pushw
adc
in
mov
fisttpll
movsb
jae
repz
lea
xor
mov
in
jns
test
jp
lret
xchg
in
mov
mov
push
sbb
fdivr
out
shrb
mov
in
mov
lret
push
test
sbb
or
out
xchg
daa
mov
lods
push
fucom
lret
mov
sbb
sub
or
addr16
mov
movsl
push
xchg
imul
cmpsl
or
mov
imul
add
push
jp
pop
and
fldenv
mov
inc
pop
sti
mov
js
pushl
jbe
xor
jmp
mov
push
sbb
and
sbb
sbb
cmp
jg
xchg
xor
aas
cmpsb
js
lahf
add
or
pop
out
rdmsr
or
push
out
pop
cmp
jl
loope
aam
xor
mov
xor
cmp
pop
jecxz
pop
mov
sbb
jge
mov
imul
mov
xchg
test
mov
add
popl
or
push
repnz
mov
lds
test
ret
loope
movsl
out
push
sbb
inc
cmpsl
lret
xchg
inc
cmc
sbb
shl
adc
mov
clc
divb
sub
inc
and
ds
pop
idivb
mov
out
movaps
inc
sbb
fwait
sbb
xor
addl
ret
or
mov
mov
fistl
outsl
imul
push
push
or
stc
data16
icebp
mov
dec
mov
pop
cli
dec
and
or
lock
cmp
xor
insl
nop
mov
push
mov
popa
lret
or
daa
dec
pop
pop
mov
arpl
xchg
lahf
ret
sbb
xchg
mov
rorl
adc
ja
and
lret
and
stos
sbb
adc
mov
imul
push
lcall
jo
add
pop
sub
mov
cmp
sub
call
fisubrl
in
dec
popa
inc
mov
adc
in
out
fcoml
in
ljmp
popa
cmp
push
push
xorl
fdivrs
bnd
cltd
add
shll
add
sbb
xchg
jnp
jb
incl
aad
ror
push
mov
sbb
sbb
dec
incb
jns
fwait
or
nop
addr16
sub
fstp
or
mov
je
inc
test
mov
stos
lods
pop
addb
and
push
bound
mov
push
inc
push
and
mov
ljmp
andl
rorl
lret
adc
pushf
push
movsb
incl
mov
mov
xor
cmp
mov
stc
add
movsb
hlt
mov
lcall
das
mov
xchg
adc
mov
mov
aaa
inc
push
xchg
insb
push
dec
fstl
pushf
cmp
movb
aad
cmp
mov
mov
jbe
idivl
ja
mov
popa
sbb
mov
mov
sarl
jmp
jb
mov
mov
inc
enter
aam
mov
mov
out
sbb
inc
test
jp
rcrl
pop
insl
std
xchg
icebp
cmp
into
div
pop
push
cli
roll
mov
lret
push
sbb
and
xlat
mov
or
frstor
mov
push
fiaddl
in
test
popf
fnsave
push
rcll
repz
cwtl
push
stc
dec
xchg
inc
out
xor
gs
cmp
fwait
stos
push
fists
or
mov
mov
jo
mov
fcmovb
jbe
pop
cli
mov
out
insl
xchg
pop
cwtl
leave
xor
stos
daa
mov
inc
popf
lahf
fmull
mov
ss
adc
sub
aam
sub
mov
iret
test
lock
push
into
pop
and
xchg
dec
es
cld
pop
xor
jp
mov
bound
call
sti
cli
cmpsb
and
adc
loope
adc
ficompl
mov
movaps
out
mov
fwait
mov
dec
out
jmp
xchg
stos
frstor
cmpsb
fs
movsl
je
jne
mov
mov
cwtl
mov
std
fsts
mov
je
pop
pop
lahf
lock
xchg
jge
mov
cmpsb
xor
test
pushf
jne
xor
dec
popa
mov
ret
xor
push
sbbb
leave
hlt
sti
mov
and
outsl
in
insl
xor
insl
add
cli
push
xor
inc
pop
sub
fldt
mov
fidivs
stos
ja
sub
mov
fidivrl
nop
push
mov
int
inc
outsl
ret
loop
xor
scas
push
shl
cs
ud2
jnp
xorl
cltd
mul
xlat
loop
sub
idivl
incl
mov
es
add
out
ret
loop
std
inc
ret
jne
test
call
addb
imulb
mov
sbb
mov
dec
ret
out
cmpsl
aad
push
ljmp
nop
push
in
lret
lock
cmp
cs
cwtl
xor
xchg
std
push
mov
int
inc
in
sub
movsl
add
pop
pop
sahf
push
sahf
ja
nopl
dec
jae
xor
repnz
lret
ror
out
sub
push
dec
cwtl
sub
fistpll
icebp
mov
jae
popf
mov
and
jno
into
mov
rcrl
addb
fisubs
mov
adc
sti
fldl
or
lods
rcll
fistpl
cmp
adcb
push
pop
jge
xchg
std
push
cli
mov
jge
push
aam
clc
loopne
cmp
test
mov
push
and
xor
psrld
adc
jae
cmp
mov
xor
xor
pop
gs
xchg
lods
xor
imul
leave
loop
inc
mov
xchg
cmp
add
icebp
xor
xlat
cmpsl
adc
ljmp
fisttps
aaa
cmp
into
sbb
pop
sbb
add
mov
cmpsl
inc
je
out
dec
pop
mov
push
addr16
jo
loope
sbb
inc
or
sbb
dec
movsb
mov
shlb
cmp
out
or
sbb
loopne
push
lahf
mov
or
sbb
push
sbb
push
cmp
inc
les
add
scas
cltd
xchg
jecxz
mov
movsl
jmp
add
pop
mov
pop
addr16
jo
stos
lahf
pop
inc
and
mov
in
mov
mov
pop
add
jg
stc
dec
shrl
pop
sbb
in
jge
ljmp
pop
inc
pop
sub
addr16
and
push
js
popa
cmc
out
cmp
inc
out
inc
arpl
mov
adc
mov
cmp
mov
xchg
and
sbb
stc
imul
adc
pop
jl
dec
outsb
scas
test
imul
push
push
mov
into
cmc
enter
add
sbb
sbb
mov
jbe
mov
out
arpl
idiv
movsb
scas
pop
nop
bound
push
jp
jmp
test
xchg
pop
cmpl
sub
imul
xrelease
lock
lods
push
js
outsl
ss
adc
or
pushf
out
and
dec
lock
xchg
lods
mov
and
cld
pusha
loop
repnz
lea
pop
and
sub
cmc
loop
and
or
shlb
outsl
addr16
je
push
addl
push
push
repz
xor
jle
xchg
sub
testb
int
pop
out
sub
pop
out
cmpsl
xchg
mov
insb
mov
xor
add
gs
test
scas
push
incb
ret
outsb
fcomps
std
sbb
mov
push
mov
int3
xchg
push
push
cmp
sbbb
push
jg
dec
imul
mov
jae
lcall
stos
fwait
stos
xchg
pop
mov
loopne
fmul
pop
jge
xor
nop
push
std
mov
and
int
aas
mov
arpl
jp
xchg
lret
call
sbb
jl
cmpsl
push
mov
jnp
lds
and
inc
pop
mov
pushf
or
or
jne
xchg
and
jp
jmp
or
cwtl
outsb
idivb
cmpsl
pop
mov
pop
out
mov
loopne
aam
jl
mov
cmp
in
sahf
xor
mov
stos
andps
fnstenv
rcll
inc
insb
int3
les
je
or
lret
push
mul
xchg
lahf
mov
aaa
arpl
fwait
add
lods
push
lds
inc
cwtl
add
lds
dec
jp
and
jno
ret
mov
jnp
mov
xlat
jae
or
test
adcl
lock
adc
xchg
xchg
mov
ret
add
sarl
add
push
push
sub
pop
or
and
push
std
cmp
cmp
mov
ret
shrl
popa
inc
subl
or
push
mov
mov
jne
sahf
mov
pop
imul
dec
xchg
inc
jb
int
add
cs
mov
push
push
adc
adc
aaa
adc
sar
out
aas
test
sbb
mov
inc
sbb
push
cwtl
dec
inc
or
shl
ss
add
lcall
and
stos
mov
imul
sbb
mov
jns
mov
dec
lock
and
adc
push
imul
ret
cld
shll
or
filds
inc
or
gs
jl
add
mov
popf
inc
mov
dec
jb
arpl
lret
stos
test
dec
add
lret
cmc
mov
das
mov
mov
fimuls
jge
inc
leave
popa
rclb
es
lds
cli
xchg
aad
popa
sbb
jp
test
inc
xor
movsb
imul
das
ja
fbld
lods
mov
cs
push
js
mov
jo
jp
pop
fstp
repnz
push
mov
adc
mov
into
xor
inc
cs
jo
push
pop
xor
iret
imul
push
pop
je
cwtl
pop
mov
fwait
mov
adc
mov
aad
ret
pop
jmp
addl
das
orl
cmp
and
test
push
imul
das
jp
leave
outsb
daa
rcrb
pop
lret
idiv
repnz
mov
sbb
xchg
adc
pop
and
xlat
add
enter
jnp
jno
push
cli
inc
fnstenv
scas
nop
dec
mov
rolb
inc
rcll
fdivrs
add
in
pop
dec
out
dec
ljmp
scas
add
and
dec
ret
in
mov
jbe
addr16
mov
pop
xchg
gs
decb
pop
xchg
and
fwait
jge
dec
jmp
mov
dec
dec
sub
jl
loope
sahf
pusha
popf
scas
gs
fnsave
mov
pop
out
cs
xchg
inc
aad
lcall
jb
int3
jnp
xor
outsl
loop
cld
cmp
dec
in
push
push
sti
insl
aaa
decl
out
dec
add
sbb
cwtl
and
xchg
sarb
pop
loopne
cmp
inc
push
cltd
pop
sub
in
sbb
in
sbb
adc
add
mov
jp
jbe
popf
out
in
mov
pusha
inc
mov
jecxz
dec
and
push
add
loop
dec
push
das
arpl
mov
add
mov
fistpl
mov
cmp
mov
lods
int3
cli
pop
push
bound
mov
push
cmpb
mov
mov
jae
and
sbb
sti
pop
into
and
add
mov
mov
dec
neg
outsb
enter
jecxz
stos
mov
movsb
inc
xor
out
adc
or
test
jecxz
pop
loope
push
out
sbb
loopne
negb
stos
shlb
lock
pop
cmp
inc
and
sub
xor
adc
icebp
das
add
pushf
aad
adc
or
jno
call
cmp
adc
jne
inc
or
dec
fwait
out
or
shrl
mov
lods
dec
ret
add
xor
adc
dec
xchg
mov
test
ljmp
sub
testb
cmpl
mov
ds
fnstcw
jecxz
xchg
cmp
dec
addr16
cmp
lods
pushf
mov
js
cmp
adcb
xor
cmc
test
into
ror
pop
sub
push
push
ljmp
inc
dec
notb
mov
and
sub
fldl
or
sbb
aas
out
test
sub
and
jbe
jmp
push
mov
pop
xorb
xor
inc
out
mov
fldenv
out
mov
out
js
dec
sbb
inc
pop
lcall
push
and
lods
inc
loopne
sbb
out
sub
out
jb
mov
or
in
mov
or
out
inc
call
lea
fcmove
add
clc
in
cmpsb
mov
fdivs
sbb
sub
cmp
lret
or
inc
stos
popa
lcall
push
push
jno
ret
cmpsl
imul
inc
aas
mov
fucomi
leave
ds
jbe
jb
or
fucomi
xchg
pop
cmpsl
js
aas
mov
dec
jbe
sub
push
mov
mov
lock
sub
mov
add
test
pop
shr
fistl
pop
stc
push
xchg
js
std
xchg
pop
rcrl
cmp
xchg
sar
in
jb
cmovne
lds
push
aaa
dec
adc
data16
mov
sub
es
call
ljmp
mov
push
jmp
in
fs
lcall
mov
lds
cmp
mov
adc
inc
lods
pop
xchg
adc
and
push
sbbl
jle
jae,pt
leave
clc
jb
aaa
cli
jecxz
xchg
and
les
xor
mov
cmpsl
mov
adc
mov
hlt
lods
aad
add
add
jp
xor
pop
test
push
xchg
cltd
fs
lahf
sub
ds
mov
add
xchg
xlat
mov
std
or
in
in
js
enter
cmpsb
mov
or
cmp
and
push
jl
cmp
pushf
nop
push
fs
pop
pop
jle
mov
std
pop
test
int
std
push
pop
xor
sar
icebp
adc
sahf
popf
inc
pop
push
inc
cmp
mul
pop
aad
mov
inc
fists
and
dec
lock
cmpsb
xor
lea
push
dec
jl
xchg
scas
mov
movsl
inc
cmp
lds
push
or
cmp
aas
jle
lret
lods
popf
sbb
lret
clc
loopne
sbb
shlb
pop
dec
cmp
fcoms
mov
push
pop
xchg
cltd
cmpsl
pop
jb
xor
int3
push
push
mov
inc
xchg
out
les
jno
or
inc
xor
test
dec
cld
add
inc
div
test
push
inc
xor
pop
imul
jnp
lea
int
ret
mov
or
bound
jmp
lahf
fdivl
icebp
aas
xchg
and
rolb
mov
sbb
popf
in
jnp
std
out
xor
or
push
mov
mov
repnz
cmpsl
ljmp
std
lods
cvtdq2ps
push
std
mov
jmp
mov
cmp
aad
popa
mov
imul
push
test
ljmp
and
out
cmc
arpl
loope
or
hlt
push
into
lock
push
add
cmp
mov
inc
xor
mov
lods
xchg
imul
jns
nop
xchg
insl
push
das
aas
mov
iret
pusha
lock
fldenv
fwait
das
mov
mov
xchg
stos
out
or
test
push
mov
loop
push
movsb
repz
push
dec
push
loope
sbb
out
push
inc
scas
and
test
push
mov
inc
movb
in
hlt
mov
daa
mov
std
xor
xchg
cmpsb
or
in
movsl
loop
jge
xor
cmpsl
or
sbb
stos
inc
jnp
jo
add
cmp
adc
mov
shll
or
add
cmp
xchg
repz
in
lea
aas
cmp
enter
inc
mov
jb
outsb
in
adc
test
ljmp
js
push
mov
pop
push
shl
mov
and
mov
mov
lods
cmpsb
push
push
mov
dec
push
cs
out
cs
mov
stos
stos
push
aad
lods
ds
jecxz
jne
nop
testb
inc
stos
scas
iret
add
hlt
inc
fwait
pop
lret
pusha
insl
test
std
addr16
xor
rorb
cmp
cltd
out
int3
ja
mov
imul
mov
dec
int3
cmpsb
sbb
loop
pop
dec
das
cmpsb
mov
test
addr16
repnz
fnstenv
mov
xor
imul
pop
push
cwtl
sbbb
int3
jo
loop
mov
mov
sub
mov
icebp
push
pop
scas
sub
and
addb
cmc
dec
and
or
loop
loope
mov
and
cli
test
inc
mov
test
inc
mov
hlt
add
fisubs
pop
es
out
and
iret
pushf
mov
inc
xchg
mov
jnp
jp
push
sarl
imul
mov
hlt
sarl
mov
das
fistpl
dec
add
pop
cmp
push
inc
iret
out
std
fcoml
fs
rcll
mov
mov
lods
hlt
dec
fmuls
insb
or
outsl
and
adc
popa
dec
push
cmp
int
jne
loope,pt
leave
push
jnp
push
inc
adc
mov
add
cli
scas
roll
shlb
dec
aad
adc
jb
popf
mov
outsl
push
mov
pop
cmp
test
pop
jecxz
or
inc
sub
and
icebp
dec
nop
cmp
xchg
fcmovb
push
push
mov
pop
les
sarl
cmc
inc
clc
test
test
cmpsb
pop
call
cmp
imull
sbb
mov
pushf
les
xchg
dec
lcall
or
xchg
cmp
jmp
addr16
sub
sub
lret
or
mov
sti
jb
mov
dec
cmp
adc
and
iret
ret
fisubrl
cmp
mov
jno
mov
adc
xchg
or
xchg
and
and
add
sub
xchg
daa
mov
and
or
inc
push
push
fwait
mov
int3
pop
push
push
out
push
sub
inc
mov
sub
fistl
mov
gs
fwait
movb
sbb
sbb
scas
pushf
cli
add
mov
sti
mov
popa
jb
inc
add
inc
in
inc
repnz
cmpsl
dec
adc
sbb
sbb
mov
repz
jbe
dec
mov
ret
push
lret
pop
es
lahf
jl
xor
cwtl
pop
mov
mov
aam
cli
leave
daa
mov
jnp
adc
out
cmp
and
cmp
mov
das
jae
cwtl
andl
inc
test
xchg
aad
divps
xchg
push
mov
and
cwtl
outsb
push
iret
fimuls
cmp
rcl
lds
pop
xchg
cmpsl
mov
lret
jg
popf
das
inc
es
mov
mov
adc
js
xchg
loopne
sbb
ret
pop
sub
ds
insb
sbb
stc
sub
mov
or
repz
fs
sbb
pop
sahf
out
sbb
rorb
inc
arpl
stc
push
les
jp
sub
mulb
xchg
fadd
or
dec
mov
or
inc
nop
stos
pop
shl
cwtl
jno
das
lods
mov
sahf
push
dec
lea
ret
mov
xchg
cwtl
pop
inc
rcrb
int3
inc
repnz
pusha
jb
fcompl
push
pmullw
dec
lahf
ss
ljmp
mov
call
or
clc
pop
clc
push
es
mov
lods
daa
in
mov
jbe
loope
fistpll
and
stc
push
stos
clc
les
dec
popa
lea
orb
xchg
pop
inc
mov
sbb
xchg
cltd
add
fdivr
push
data16
cld
outsb
addr16
or
sbb
sub
mov
loope
leave
mov
clc
lcall
enter
inc
fsubrl
adc
stc
and
inc
mov
mov
push
loop
stc
addr16
xchg
xchg
daa
xchg
fisubs
repz
xchg
lret
cltd
adc
mov
leave
repz
push
shrb
mov
in
lock
xlat
and
sti
mov
sub
pop
ja
iret
out
loopne
insb
pop
lock
int3
and
and
addb
mov
add
imull
dec
sub
jp
lock
shrl
lahf
pop
fstl
jb
shr
fnstcw
push
mov
int
pusha
fldcw
andl
and
xchg
inc
std
and
xor
push
mov
mov
pop
movsb
enter
stos
pop
adc
pop
stc
adc
sub
lea
inc
jle
repz
daa
and
cli
andb
lcall
cld
arpl
daa
jo
stc
popa
gs
xor
rorl
xor
out
lds
inc
sbb
pop
mov
test
ror
sbb
xchg
pop
adc
out
sahf
cmp
jo
scas
or
ds
add
or
pusha
add
inc
inc
mov
push
pushf
pop
and
test
add
mov
rclb
imul
je
out
lods
and
xor
shrl
icebp
das
gs
jl
popa
inc
adc
imul
fs
ret
insl
lock
bound
bound
clc
jl
cli
nop
pushf
shll
in
mov
cld
mov
push
xor
rcll
lret
xchg
jb
xor
lock
xlat
mov
xchg
shlb
sub
loop
jne
mov
icebp
pop
sti
shll
and
je
in
push
xchg
loope
cmpsb
fdivp
inc
or
sub
mov
and
testb
jae
pop
or
jecxz
or
mov
faddl
inc
mov
xor
ja
insl
test
and
ret
cmc
sbb
lds
mov
mov
sbb
outsl
cmp
pop
pushf
lods
cmp
outsb
cmp
outsl
mov
jne
sub
sbb
sub
test
xor
jmp
jnp
xor
mov
sbbl
sbb
fadds
pop
dec
outsb
adc
sbb
lahf
dec
xor
add
inc
outsb
sub
cltd
xchg
mov
jge
fs
jmp
xchg
xchg
leave
testl
scas
mov
fildll
push
mov
adc
test
push
adc
cmp
cmp
mov
mov
jp
int
js
mov
cmp
mov
in
inc
jmp
push
dec
sahf
pop
add
pop
je
mov
insl
jecxz
jp
mov
mov
xor
mov
gs
movsl
adc
ds
xor
movsl
jb
in
sub
lcall
mov
adc
addl
fs
incl
popf
mov
pushf
stc
push
jge
jns
pop
jnp
jmp
mov
jns
fcompl
cmpsl
sub
mov
and
lret
xor
sbb
push
xchg
scas
pop
fwait
add
or
xchg
inc
insl
ror
lret
push
fbstp
cli
pop
xor
jns
adc
mov
inc
dec
cli
sbbl
sti
mov
test
jecxz
inc
dec
add
xor
pop
sbb
subb
incl
sbb
push
aad
loop
fisttps
xlat
push
mov
andb
andl
pop
fmull
fs
cmc
pop
out
and
xchg
das
xchg
xor
rcll
leave
xor
inc
icebp
lahf
push
leave
std
les
inc
xor
cmc
mov
dec
push
testl
sub
js
mov
xor
cmp
jge
pop
mov
or
and
fs
mov
jno
repz
enter
jno
fwait
ret
push
pop
popa
xor
dec
sbb
in
clc
btc
jmp
pop
out
outsb
roll
pop
push
cltd
pop
cmpsl
aaa
popl
jbe
cmp
xchg
push
rol
in
push
inc
stos
add
bound
neg
mov
cmp
mov
pop
push
push
mov
out
mov
addr16
stos
stc
outsb
ljmp
dec
je
ljmp
outsb
aas
mov
icebp
cmc
jmp
scas
jbe
fstps
outsl
lock
mov
mov
mov
test
lods
sub
lcall
push
bound
inc
pop
pop
test
lock
pop
jecxz
pop
jb,pn
push
icebp
inc
lret
movsl
cwtl
lea
or
push
rcl
sbb
mov
inc
pop
adc
es
cs
mov
lret
mov
dec
ss
xor
clc
jl
ss
imul
mov
lock
pop
cs
divb
push
sbb
push
inc
adc
fwait
out
sub
sub
pop
mov
sbb
popa
movsl
xchg
jl
clc
and
lock
inc
and
pusha
test
test
cmpsl
cmp
aad
mov
hlt
jmp
stos
ret
dec
pushf
gs
pushf
fldcw
lods
cmp
cmp
notb
ss
cwtl
notl
xor
adc
jne
mov
das
aaa
inc
xchg
mov
mov
lret
hlt
jp
xchg
out
lods
das
lds
out
jle
or
jg
xorb
shr
repnz
and
icebp
jg
cwtl
ret
mov
mov
into
insl
leave
adc
cmpsb
cwtl
movsb
movsl
imul
mov
dec
mov
add
push
aad
sahf
lcall
jb
xchg
stc
dec
call
in
xor
add
xor
pushf
aaa
ljmp
inc
mov
xchg
aad
mov
jb
pop
in
dec
pop
adc
jb
ds
lods
or
push
mov
idivl
xchg
mov
pop
cld
rolb
mov
loop
add
push
hlt
sub
test
push
jl
hlt
daa
lea
pop
ds
adc
dec
sub
ret
sbb
mov
cmp
dec
test
and
pop
mov
cs
inc
mov
and
cmp
sbb
xor
sbb
lock
test
cmp
add
stos
mov
jbe
ljmp
shlb
push
in
adc
xorb
loope
mov
clc
aad
mov
push
scas
pop
out
jl
adc
sub
fsubrl
inc
lahf
nop
inc
loope
push
mov
aam
lods
daa
jo
sahf
pop
into
mov
push
jns,pn
sub
or
stos
insb
jmp
cmp
pop
jno
sub
jge
or
aas
lods
adcb
inc
add
in
lods
inc
sti
xor
ja
out
cs
jle
jb
xchg
sti
in
outsb
add
xchg
cmp
sbb
xchg
fs
rclb
sbb
sbb
dec
or
and
jmp
push
xchg
nop
pop
cmp
mov
js
in
cmp
lret
push
flds
stos
add
or
ja
push
jecxz
sub
neg
mov
jae
mov
hlt
shl
add
ss
dec
inc
mov
fdivrl
xor
fisubrs
pop
mov
daa
ljmp
sub
cld
js
lods
orl
das
xor
cmp
jl
or
dec
or
cmc
push
xlat
sbb
push
fistpll
lods
fimuls
mov
int
pop
lea
adc
leave
push
mov
sbb
push
lods
inc
loope
iret
cltd
aad
imul
push
lret
adc
dec
imul
pop
sub
call
stos
addr16
mov
mov
adc
inc
cmpsb
jno
or
push
popf
cmp
loope
rclb
clc
cli
ds
cmpsb
scas
jl
aad
inc
xchg
or
pop
cmp
mov
repnz
scas
les
sub
scas
nop
stos
mov
repz
add
in
dec
inc
add
js
repnz
nop
xor
mov
imulb
loope
xchg
push
mov
mov
daa
pop
lret
dec
les
inc
leave
xchg
int3
call
je
out
ficompl
pushf
mov
inc
mov
mov
mov
enter
scas
cmp
or
dec
push
push
adc
fwait
out
hlt
xchg
sub
lods
sbb
add
fisubs
stos
enter
scas
xchg
inc
mov
add
inc
fldt
aas
int3
mov
mov
adcb
mov
jp
imul
xchg
mov
ret
outsb
shr
fstl
imul
mov
shlb
jg
cld
gs
xchg
repz
cmpsl
inc
aaa
xor
movsb
mov
cltd
dec
lcall
test
mov
push
add
sti
push
andb
pop
or
adc
cmp
les
lcall
jmp
push
lret
inc
int
sbb
adc
dec
jecxz
push
push
aad
push
sbb
xchg
cmc
stos
insb
dec
push
xchg
xor
sub
or
dec
inc
push
mov
xchg
dec
mov
xchg
pop
sbb
jns
jb
rcl
ret
push
push
cmc
hlt
lock
and
xchg
jl
cmp
aaa
sar
cmp
push
push
dec
pop
mov
out
iret
leave
mov
push
fsubrp
repz
mov
jns
sahf
jl
leave
inc
pop
inc
jno
push
je
nop
inc
lcall
sub
cmc
lods
sahf
data16
ja
xchg
xchg
xor
in
prefetch
or
sub
loope
jmp
test
add
shll
mov
and
jno
rcl
imul
or
jne
in
sub
lds
mov
xlat
pop
jmp
sub
jae
or
arpl
divl
and
and
jecxz
inc
mov
and
movsb
sbb
inc
addr16
and
mov
push
or
dec
push
js
sub
lcall
jecxz
fidivrs
adc
push
popa
pop
in
insl
mov
mov
into
pop
pop
jl
xchg
cmpl
loopne
adc
cmp
fsubr
das
cld
pop
cmp
insb
pushf
or
mov
in
imul
rcr
mov
mov
mov
bnd
jne
jo
lods
push
out
cltd
and
cmpl
pop
aas
sbb
test
mov
push
into
shrl
pop
push
inc
adc
pop
insb
pop
sbb
mov
fstl
dec
cmp
clc
outsl
mov
outsb
lea
leave
insl
dec
das
std
pop
enter
add
out
pop
jno
es
call
mov
adc
inc
fwait
mov
fistpl
nop
pop
insl
sarl
sub
xchg
adc
std
or
enter
test
loopne
dec
jg
sarl
mov
sbb
dec
jl
in
es
rcl
fs
mov
addl
rorl
insb
inc
fdivr
movsl
out
cwtl
dec
lds
std
outsb
pop
stos
scas
sbb
pop
mov
cmp
in
or
scas
mov
lea
stos
adc
cs
pop
es
dec
mov
xchg
insb
push
inc
or
pop
jae
xor
cmc
loope
xchg
shll
fadds
push
push
inc
cmp
push
aam
int3
jne
xor
xchg
pop
outsb
lods
mov
pop
sahf
lods
sarl
out
aad
loop
or
das
lds
mov
loopne
mov
push
out
cmc
xlat
mov
push
cmp
jg
fcoms
out
outsb
mov
subb
jge
ret
sbbb
int
jg
in
cmp
push
stc
test
cmpw
pop
push
addr16
xor
push
outsb
dec
pop
lods
daa
inc
and
scas
push
pop
xchg
cld
out
sub
rcll
fwait
lods
adc
gs
into
pushf
push
sbb
xchg
adc
jo
mov
sub
adc
loopne
mov
sub
add
inc
sbb
inc
in
mov
bound
mov
xchg
dec
cmpsb
fsubs
push
loop
inc
fs
sarb
mov
pushl
cs
hlt
mov
mov
adc
or
aas
or
pop
xor
les
sbb
es
and
inc
mov
or
sbb
sbb
ds
push
inc
insl
in
sbb
jmp
popa
insl
mov
fistpll
mov
imul
add
idivl
ljmp
pop
push
sub
sbb
jge
dec
stos
inc
xchg
jns
jmp
pop
xchg
leave
add
and
int3
in
sbb
pop
scas
xchg
jmp
clc
fisttps
in
mov
in
xchg
fstps
sub
cmc
cld
stos
sub
clc
push
mov
or
fwait
popf
insl
dec
aad
xchg
xchg
push
pop
fidivrs
push
add
and
into
out
jb
mov
xchg
or
cmp
and
lret
jb
iret
sub
sub
xchg
insl
shlb
lea
or
mov
in
adc
sub
jb
stc
jno
leave
faddl
push
int3
xchg
jge
bound
mov
sbb
mov
aaa
shll
push
push
mov
mov
jne
jo
in
cs
mov
push
orl
ljmp
lcall
inc
shrb
push
in
inc
stos
out
jmp
inc
cmpsl
stos
mov
movsb
and
pop
dec
ret
lret
mov
data16
cmp
ffreep
push
jns
fildll
test
mov
dec
pop
mov
cld
sbb
call
sbb
fs
mov
xor
pop
test
lret
cmp
pop
mov
decl
movsb
or
sbb
cmpsl
shll
movb
jmp
lcall
rorl
test
lods
pop
jge
orb
popa
xor
cmpsl
clc
daa
lret
ss
xor
xchg
xchg
xor
mov
icebp
adc
imul
out
pusha
pop
cwtl
shll
cld
loope
xor
push
popa
dec
sahf
aam
cld
mov
stos
and
xor
int3
fldl
cmp
push
add
jne
mov
dec
mov
ljmp
std
ret
push
adc
push
pop
ret
mov
test
rcrl
cltd
fs
dec
xlat
xor
cmp
pop
mov
pop
stos
ss
std
dec
push
movsl
pop
pop
shlb
cmpsb
or
xor
add
mov
sub
sub
mov
lcall
xorb
xlat
imul
cltd
fcoms
hlt
outsl
cltd
xchg
xor
fs
dec
pop
pop
push
add
inc
in
and
pushf
add
mov
out
int
dec
scas
addr16
jno
jmp
or
rcrl
cmp
push
mov
popf
jge
xchg
sbb
push
dec
mov
cs
lcall
int
cmp
pushf
jge
daa
xchg
test
pop
push
inc
sub
push
test
les
push
adc
mov
mov
cmp
movsb
mov
dec
packssdw
push
push
xchg
lahf
addr16
sub
cmp
or
iret
in
mov
push
test
ja
test
orl
testb
sub
pop
pop
and
ja
and
sahf
mov
push
int3
out
shl
mov
add
xchg
divb
addb
addl
fists
stos
aas
push
test
in
addr16
int
xor
push
jne
mov
cmp
push
outsb
push
cmc
fnstcw
aaa
inc
xor
xor
mov
cmp
inc
imul
mov
mov
or
js
lret
inc
mov
push
fadds
popf
aam
adc
pop
sbb
pop
insl
mov
lock
push
out
mov
xchg
jns
ljmp
enter
int
jmp
into
mov
or
stc
xor
push
xor
inc
xor
or
and
adc
ss
out
les
dec
mov
addr16
xor
out
sbb
xchg
add
mov
pop
mov
movsb
int3
cmp
jo
std
push
addr16
decl
into
push
outsb
test
lods
push
cwtl
xlat
movsl
sahf
popf
fs
mov
aam
test
mov
roll
push
sub
sbbb
aas
jle
je
cmp
pop
xor
lret
add
gs
push
je
outsb
in
push
and
sbb
xorb
xchg
into
lock
inc
add
mov
or
in
popa
cmp
sbb
dec
sbb
popf
and
into
mov
inc
addr16
lcall
pop
cmp
leave
sub
pushf
bnd
loope
xchg
adc
mull
popf
cmp
push
mov
das
mov
clc
int3
mov
loop
sub
dec
arpl
mov
adc
cmpsl
push
inc
dec
mov
mov
pop
mov
inc
add
adc
or
mov
mov
mov
iret
test
jmp
xchg
mov
mov
lods
popf
aam
stos
inc
mov
or
and
loopne
stos
lods
daa
sbb
pushf
mov
pop
aaa
push
add
rolb
adc
in
add
hlt
cmp
es
enter
cli
pop
fdivrs
push
pop
dec
mov
mov
test
loop
fadd
imul
pop
and
push
mov
jecxz
rol
mov
xor
ret
jge
stos
mov
adc
pop
xchg
add
sub
pushf
mov
movsb
and
jge
test
loope
add
mov
mov
mov
jle
mov
cmp
das
pop
add
pop
push
xchg
mov
xchg
hlt
jl
lret
and
mov
mov
pop
clc
je
push
xchg
imul
dec
gs
fisttps
and
arpl
cmp
mov
mov
in
inc
sbbl
das
test
cwtl
mov
cwtl
fdivrs
add
shll
mov
cmp
scas
movsl
dec
neg
xchg
pusha
jle
fnstenv
xor
sub
push
and
xchg
mov
ds
data16
nop
pop
pop
xor
dec
jmp
fst
mov
xchg
adc
mov
mov
mov
inc
lods
sbb
sub
pop
jmp
insb
aad
cld
add
inc
inc
jo
xor
inc
mov
push
loopne
add
imul
call
jns
and
add
imul
mov
push
pushl
sbb
jb
jl
push
pop
scas
or
xor
ror
addl
mov
aam
mov
sarb
lahf
push
nop
idivb
lea
jmp
dec
dec
inc
data16
out
daa
adc
lret
dec
mov
sarb
add
jae
pusha
xchg
add
mov
mov
aas
mov
or
outsl
sbb
mov
addr16
hlt
xchg
cwtl
movsl
jmp
and
mov
cmp
sbb
loop
pop
xchg
mov
sbb
ret
lock
push
add
push
popf
fsubs
shll
mov
clc
push
loope
call
xor
int
fdivrl
aaa
sbb
les
lods
jae
jecxz
mov
inc
dec
mov
inc
cmp
fbld
outsl
mov
insb
inc
test
sub
push
imul
inc
pop
xor
scas
jp
jnp
invd
es
test
or
pop
ret
inc
adc
push
jae
jmp
xchg
sub
loop
scas
cli
pop
std
icebp
add
and
imul
inc
mov
subl
inc
rcr
sbb
andl
mov
pop
add
adc
mov
imul
cs
xor
push
lret
jg
push
dec
rorb
dec
js
lret
mov
popa
arpl
push
data16
xor
xor
std
pop
xchg
dec
loope
hlt
jg
stos
xor
repnz
mov
or
xor
movl
adc
dec
push
mov
and
int3
popf
mov
andl
cmp
push
push
mov
xor
xlat
movsl
jbe
inc
pop
movsb
fidivl
loop
dec
xor
fsubr
pop
loope
sbb
mov
sub
in
mov
pop
ljmp
lcall
cmp
mov
out
sbb
adc
dec
hlt
data16
and
fs
or
repz
test
addb
and
insl
mov
jp
cli
jbe
into
repnz
sub
push
lahf
in
jae
test
mov
jg
xchg
enter
jne
bound
jbe
jae
mov
in
addr16
popa
nop
jno
jae
stos
push
sbb
sbb
negb
push
popf
fstl
sub
lods
lret
and
comiss
pop
scas
cmp
sbb
pop
subl
cmp
aas
aaa
or
sbb
jg
bound
mov
lea
ss
enter
mov
flds
bound
movsl
dec
push
xchg
lahf
cmp
in
inc
mov
jo
aas
out
jno
test
aaa
add
and
jae
in
int3
adc
mov
jecxz
movsb
pusha
lcall
lods
cmpsl
inc
sub
inc
pop
dec
adc
or
push
pop
imul
dec
jo
minps
inc
les
imul
jo
adc
lods
in
lea
jbe
faddp
movsl
push
stos
ret
or
sub
cwtl
mov
jne,pt
mov
adc
fwait
mov
xor
inc
mov
push
lods
mov
lods
jg
xchg
and
and
sbb
and
xchg
cli
sahf
enterw
or
pop
adc
sbb
outsb
gs
jp
idivb
insb
lods
jl
cmp
repnz
pop
imul
int3
or
pushf
std
mov
dec
adc
iret
mov
or
mov
stos
pop
pop
pop
fistpll
or
mov
add
out
popf
gs
pop
int
xchg
aaa
mov
in
nop
mov
das
sti
dec
inc
sbb
push
jg
lods
ljmp
rcrb
mov
cmp
jge
lock
bound
inc
fs
repnz
sub
xchg
sub
movsl
popa
inc
push
mov
or
mov
iret
test
scas
jns
outsb
enter
xor
and
inc
fldl
hlt
and
dec
jnp
inc
xlat
fcomp
movl
lds
sbb
xor
and
adc
add
les
in
lea
and
sub
test
inc
pop
inc
aam
jne
dec
enter
push
mov
andb
ja
pushf
bound
inc
xor
js
sbb
test
cld
jno
sbb
push
jae
fcomp
stos
inc
pushf
lock
add
jg
push
lock
sbb
dec
push
cmc
push
cmp
mov
dec
mov
ss
jnp
mov
cli
mov
loope
call
inc
shlb
insb
push
and
cmp
int
out
or
insl
fstpt
outsb
pop
in
and
dec
cmp
out
leave
daa
gs
cmp
fsubp
sub
pop
test
loop
mov
fdivs
and
sub
rclb
xchg
enter
xchg
xorl
scas
xchg
inc
test
cltd
xor
fdiv
shlb
fcmovne
cmp
bound
stc
enter
cmp
xchg
add
js
xor
mov
lock
decl
dec
or
add
inc
imul
data16
nop
mov
jecxz
mov
insl
aad
fs
xor
pop
fidivl
push
mov
jnp
inc
aam
dec
push
ret
outsl
xchg
int3
dec
insl
leave
pop
add
jbe
dec
mov
or
es
cltd
jnp
xchg
hlt
cmpl
aas
mov
aad
call
sbb
daa
xor
cmp
cmp
outsl
jbe
int3
mov
subl
pop
push
hlt
orb
cmp
mov
out
in
test
cli
or
loope
fstpl
das
iret
incb
lods
xor
jnp
dec
mov
jns
aas
imul
add
jno
scas
mov
lcall
repnz
push
push
sbb
mov
add
pop
insl
push
cmp
repnz
enter
lods
or
pop
add
xchg
cmp
push
lret
pop
pop
js
mov
scas
addl
inc
xor
dec
cmp
mov
cs
mov
and
and
pop
xchg
jb
icebp
ficompl
mov
sub
xchg
pcmpgtd
enter
loopne
mov
insl
cmp
dec
or
jne
js
xor
jae
lods
xor
xor
lds
xchg
xchg
fnsave
push
push
pop
inc
and
push
adc
loop
mov
dec
mov
mov
mov
sbb
mov
pop
or
mov
lea
sub
or
mov
pop
dec
fsubs
outsl
and
cmp
mov
jns
stc
outsb
mov
add
imul
xor
lds
sti
add
inc
data16
mov
loope
das
push
mov
out
loope
pushf
push
xor
push
mov
in
push
ret
push
out
repnz
enter
xlat
push
sbb
mov
addb
ret
popl
sub
mov
or
into
in
fsubl
jo
lahf
fldenv
sarl
inc
dec
add
hlt
stc
in
or
movsl
mov
addr16
divl
ljmp
pop
dec
test
paddsb
mov
xor
pop
aaa
xchg
cmpsl
push
and
es
lods
cltd
or
cmpsb
mov
mov
shlb
and
jae
cmpsb
sbb
pop
pusha
pop
pop
incb
mov
outsb
mov
int3
dec
fadd
push
shll
mov
hlt
jnp
test
adc
push
mov
mov
popf
lock
mov
dec
mov
dec
es
iret
xchg
int
mov
rorb
fidivs
mov
mov
jb
stos
push
xlat
mov
fildl
xchg
push
stos
push
out
inc
inc
out
mov
sbb
cltd
loope
pop
jl
push
pop
shlb
adc
loope
sar
stos
cmp
lods
pop
dec
jno
cmp
or
mov
insb
insb
push
cmc
inc
into
jne
fisubrl
fisubs
pop
xlat
xor
test
sbb
ljmp
outsl
fnstsw
cmp
fists
ficoml
sar
std
adc
add
lds
in
jle
test
rcll
xchg
adc
push
mov
xchg
inc
addr16
test
aad
aam
adc
repnz
cmp
xchg
pop
adc
adc
mov
dec
dec
dec
ret
dec
push
sarb
mov
jno
test
sub
or
mov
mov
stos
push
and
clc
adc
fildll
and
push
fidivrs
inc
adc
hlt
gs
int
aas
test
push
and
sbb
mov
andl
in
xchg
in
xchg
or
outsl
in
in
inc
sub
es
ljmp
imul
mov
adc
dec
into
pop
and
mov
aas
add
ret
add
icebp
sbb
xchg
je
popf
cmp
hlt
xchg
xor
rclb
sub
sbb
xchg
or
ret
mov
sbb
mov
mov
call
pop
xorl
cwtl
cmpsw
ret
mov
nop
icebp
ret
dec
pop
aad
icebp
negb
push
or
pop
punpckhbw
pop
adcb
arpl
push
sbb
cmpl
mov
dec
push
loopne
les
xor
jle
std
or
int3
pop
xor
jle
ss
inc
mov
cs
push
jne
mov
out
adc
mov
out
fbstp
push
bound
and
add
add
mov
outsl
ret
mov
rol
dec
dec
inc
outsl
lods
sbbb
add
rcr
pop
xorl
xlat
hlt
inc
add
xor
dec
jne
add
lahf
mov
rcrb
cmp
icebp
inc
js
test
inc
dec
mov
clc
mov
out
push
je
mov
mov
scas
movsb
sbb
aam
sbb
mov
jbe
jb
cs
adc
insl
adc
or
add
lods
std
jbe
mov
dec
mov
rorb
jo
inc
mov
leave
in
popa
enter
push
xchg
or
xchg
out
adc
nop
iret
repz
pop
inc
xchg
std
add
dec
mov
pop
cld
lods
stos
or
lods
xchg
mov
dec
int
sti
push
mov
mov
test
dec
nop
sbb
sub
in
pop
ljmp
out
subl
dec
sub
cmp
pop
stos
cmp
cltd
mov
mov
lahf
out
cmp
pop
testb
add
push
pop
outsl
aad
fwait
jle
cmp
sub
jecxz
push
shr
aam
pop
mov
mov
jns
sti
ret
fdivrs
aas
xchg
pop
cmpsl
add
push
mov
push
jge
and
sub
xor
xchg
in
inc
jg
stos
cmp
xor
fwait
jl
sahf
dec
and
jmp
scas
lret
movsb
cmp
push
scas
dec
dec
push
add
cmp
sub
jbe
dec
adc
mov
pop
int
mov
sti
mov
xor
addl
imul
testb
and
dec
add
and
or
fldt
fs
popf
mov
aaa
in
adc
dec
jbe
call
lock
cmp
daa
xchg
rcrb
repz
or
loopne
cmp
cmpsb
std
xor
mov
jno
enter
mov
push
mov
adc
dec
gs
sub
dec
shlb
pop
pop
cmc
lock
outsb
xor
shr
sbb
xchg
in
cmp
fistpll
rcll
outsl
mov
xchg
lcall
int
mov
js
xchg
stos
test
push
xor
mov
sbb
rcrb
and
push
xor
int3
dec
addl
sub
idivb
out
push
lods
mov
sbb
add
add
pop
lock
mov
pop
shll
shlb
cmp
mov
jle
xor
adc
popa
or
push
dec
fldz
fmull
add
mov
fidivs
loop,pn
xlat
mov
loopne
pop
rorb
mov
pop
push
dec
cltd
dec
repz
loop
lds
sbb
lods
in
pop
sub
lds
test
cltd
fwait
loop
adc
adc
mov
sbb
jle
pusha
dec
ret
std
addl
inc
jmp
sub
lea
ret
add
inc
xor
cmp
mov
mov
addl
cmp
loop
pop
movl
xchg
movsl
push
push
in
ss
inc
lahf
arpl
sub
stos
push
add
push
xor
movsl
mov
xor
test
out
stc
mov
fnsave
sti
loope
mov
sub
push
sbb
add
popf
mov
stos
sbb
icebp
rcr
out
insl
inc
pop
push
or
push
lret
jno
test
stos
jo
in
cltd
lahf
lds
cmp
inc
lds
aad
mov
ret
loop
callw
in
leave
mov
outsb
divb
sub
mov
in
outsl
in
cmc
or
sbb
faddl
mov
xchg
push
loope
add
xlat
xchg
sub
xchg
and
mov
jno
mov
jle
cmpsb
in
cmpxchg
and
jle
jae
sbb
adcb
mov
insb
xor
stos
fmuls
bound
fiaddl
and
daa
sbb
into
cmc
daa
xchg
inc
divps
int
adc
mov
adc
lret
pop
inc
lret
push
in
movsl
sub
pop
sub
jle
loopne
inc
test
and
inc
mov
scas
jmp
mov
out
subl
and
jne
imul
inc
lea
repz
mov
jb
cmp
loope
jno
mov
stos
sbb
fwait
or
dec
mov
daa
push
jo
fsub
adc
sbb
cmc
mov
dec
add
mov
sub
and
adc
xorl
mov
dec
insb
int
cmp
ja
jnp
jp
fcos
xchg
mov
cld
xchg
cltd
and
arpl
fimuls
fidivrs
bound
sbb
add
mov
ret
lcall
aam
mov
inc
xlat
or
push
mov
das
in
mov
ljmp
fdivrs
inc
mov
fsqrt
jecxz
push
js
inc
jl
dec
mov
adc
fcoms
movsl
psrlw
pop
repz
cmc
xor
cmp
sti
inc
adc
aad
xchg
mov
popf
jge
pop
pop
and
call
inc
adc
xor
jle
outsb
insl
push
sti
pop
mov
cmc
inc
cltd
loopne
mov
jg
lods
push
inc
pop
jl
push
shr
mov
cs
popf
ret
shlb
push
loop
shll
adc
adc
sub
jmp
mov
xorl
movsb
xchg
adc
cmp
cltd
mov
popf
es
scas
test
in
data16
mov
popf
sbb
adc
popa
lahf
mov
add
pop
add
mov
mov
push
push
adc
ffree
aad
pop
adc
mov
jbe
fwait
mov
xor
test
jle
sub
jno
mov
lret
inc
fs
mov
sub
enter
std
xor
pop
add
test
xchg
test
or
pop
lods
xor
pop
mov
aas
iret
or
xor
xor
or
inc
sub
add
pop
or
lcall
sub
xchg
push
mov
push
push
xor
lahf
sbb
push
push
fwait
lret
push
xchg
push
in
add
pop
jns
stos
leave
lcall
iret
mov
repnz
outsl
add
nop
push
ret
imul
repz
sbb
loop
ss
loop
arpl
fidivrs
xorl
sub
aaa
insb
inc
pop
test
xchg
push
sbb
repz
add
sub
and
adc
push
mov
ja
fwait
aas
push
test
stos
paddsw
xor
dec
aad
les
test
lret
stc
andb
mov
dec
icebp
dec
inc
or
in
cmp
test
push
inc
pusha
insl
pop
sbb
out
sbb
enter
sbb
sub
jno
pop
adc
dec
xor
mov
cmp
and
mov
pop
sahf
into
jl
les
rcll
lret
lock
mov
jl
xlat
cwtl
or
rcr
shr
pop
adc
lahf
xchg
sub
push
fildl
test
enter
pop
imul
in
xor
stos
mov
xor
add
sub
push
mov
and
out
push
cwtl
add
and
or
sbb
xor
test
cltd
js
lock
test
test
or
loope
or
xchg
or
lods
sbb
jae
sbb
mov
bound
sarl
cli
addr16
icebp
jmp
adc
idivl
and
and
xchg
inc
jb
jbe
cmpl
add
lods
pop
inc
out
out
inc
jmp
inc
sbb
ja
xchg
bound
mov
fs
repnz
pop
lcallw
in
aam
inc
mov
out
enter
fs
pop
and
adc
in
cmp
cmp
js
outsl
lds
or
pushaw
pop
fwait
adc
iret
out
repz
add
jns
mov
inc
xchg
mov
cwtl
pop
jns
into
jecxz
push
mov
pop
adc
and
out
and
cmpsb
xchg
pop
into
inc
sbbl
repz
or
push
sbb
adc
sbb
pop
mov
mov
in
addb
les
mov
hlt
jle
lea
gs
lea
pop
sub
repz
pop
inc
cmc
push
xor
movsl
jge
pop
inc
test
hlt
int3
xchg
push
outsb
and
nop
jo
jnp
sub
cmc
cmpsl
pushf
mov
pop
loopne
xchg
jle
imul
mov
push
push
into
stos
jp
adc
imul
mov
dec
fidivs
out
cld
shl
dec
mov
lret
data16
cmp
jmp
jmp
dec
cmp
insb
sub
push
lods
sub
stos
popf
cmp
loope
loope
mov
cmpsl
insl
dec
loop
xor
mov
shlb
jl
ljmp
dec
push
fucomp
dec
xchg
or
mov
jo
pushf
mov
and
inc
insb
sub
addr16
sub
jp
pop
mov
lret
jmp
call
and
push
std
andb
cmp
pop
rcll
ror
insb
aas
cmp
outsl
mov
fisubs
xchg
adc
inc
sti
push
call
xor
pop
jb
ret
inc
lods
push
adc
loope
cld
rolb
mov
xchg
xchg
mov
cmp
std
jae
mov
push
add
cmc
in
jg
cltd
inc
loopne
xor
adc
cmp
lea
cmp
fwait
dec
mov
fisubrl
sbb
fildl
stos
mov
adc
or
loop
dec
mov
lcall
jae
negb
cmp
mov
and
icebp
stos
mov
inc
aaa
pushl
jns
push
sub
iret
mov
out
cmp
lock
inc
sbb
sbb
stc
sbb
imul
xorb
adc
test
js
sbb
punpckhbw
dec
ret
adc
pop
cmpsb
outsl
std
gs
lret
out
mov
mov
fidivrl
fsubrl
fnstenv
mov
push
sbb
inc
xchg
shrl
daa
imul
ss
lds
sti
adc
into
add
xor
jmp
add
popf
lea
test
ljmp
add
out
inc
lds
pop
add
or
xchg
adc
call
jae
adc
jecxz
jnp,pn
sub
test
jg
stc
push
fldcw
adc
dec
in
or
popf
out
dec
sub
ficomps
mov
rol
dec
ljmp
into
xor
push
imul
or
insl
jbe
inc
into
cmp
loop
sbb
stc
mov
xchg
pop
pop
and
les
adc
sub
jmp
clc
arpl
outsb
cld
inc
fldenv
mov
jnp
push
test
adc
or
jne,pn
jl
shlb
stos
xchg
jne
out
cs
cmp
cmp
es
mov
push
notb
adc
jg
fisubrl
sbb
push
push
xchg
scas
out
daa
stc
clc
cmc
jecxz
pop
inc
mov
scas
adc
filds
pop
xchg
cltd
xchg
jae
mov
and
mov
mov
mov
xor
pop
popf
pop
and
inc
jae
ljmp
mov
mov
jecxz
insl
xchg
add
loop
ret
popf
xor
and
stc
add
jns
push
fsubrs
aas
xor
adc
out
das
pop
add
cmp
outsl
or
repnz
fsts
and
jl
xchg
sbb
cmp
cmpsb
xchg
scas
pop
jne
sahf
sbb
aam
cs
in
add
sti
dec
insl
pushf
mov
in
and
sub
pop
jg
add
mov
jne
out
add
xchg
cmpsl
pushf
dec
loop
and
fcoms
rcl
lock
imul
jmp
push
sbb
cli
fldl
repz
es
push
mov
pop
ret
xor
test
adc
push
int
loop
nop
fistpl
mov
push
cmpsl
movsb
or
ljmp
mov
sub
aaa
icebp
jg
outsb
mov
adc
rcrb
mov
std
aad
mov
push
movsl
mov
sub
pop
mov
addr16
gs
out
mov
xchg
dec
lock
mov
push
daa
gs
push
stos
inc
cmp
scas
in
or
mov
inc
lcall
js
imul
mov
es
push
mov
mov
dec
leave
outsb
and
cmp
add
jmp
clc
mov
add
xchg
xor
mov
mov
test
or
mov
and
icebp
lods
les
repnz
dec
loopne
sahf
cli
or
das
ret
out
sbb
orl
test
sbb
ljmp
push
jg
scas
clc
rolb
out
xchg
sbbl
mov
in
in
mov
mov
lds
mov
jo
push
and
or
adc
aas
xchg
pop
jno
imul
movsb
mov
cmpsb
fs
ja
pusha
repz
fcompl
jne,pn
sub
cmpsl
ret
loopew
lea
sbb
pop
les
sar
sar
push
pop
ds
add
mov
inc
mov
js
add
push
pop
and
fsubl
mov
stc
aam
jle
mov
xchg
sbb
ficoml
sub
jp
add
ret
lds
push
dec
popf
mov
xor
sub
push
sbb
rcrb
sub
nop
or
negl
emms
ds
jmp
lock
lret
loopne
mov
sti
je
xor
mov
dec
je
pop
mov
pop
les
fsubp
xor
movsb
cs
lods
shll
sbb
cmpsb
mov
ret
or
outsl
lcall
jae
jmp
dec
dec
ds
sub
shl
and
cmp
jne
sti
and
stc
xchg
subl
jbe
inc
sbb
push
sub
mov
divl
fsubs
add
jbe
xor
lock
stos
push
mov
add
int
mov
pop
int3
lcall
push
ret
cmpl
push
xchg
sbb
cmp
pushl
scas
xor
mov
daa
adc
cmp
iret
dec
jne
adc
les
out
mov
or
popa
in
or
jl
in
pop
test
movsb
stos
inc
mov
jge
adc
mov
xor
popf
jmp
bound
xor
outsl
cmp
and
sub
inc
mov
cmp
mov
dec
xchg
cmp
pop
xor
push
scas
mov
in
push
fs
repz
xlat
ds
xor
rcll
mov
aam
scas
inc
dec
push
call
call
lcall
dec
xor
iret
ljmp
adc
xor
jmp
mov
mov
inc
jae
imul
out
push
cmpb
aad
negw
shll
mov
gs
lret
aam
arpl
push
addl
sub
ficompl
ret
mov
in
rclb
push
sbb
shl
add
xchg
shl
xchg
mov
or
xchg
lods
imul
sahf
add
pop
dec
and
dec
cmp
cmp
push
push
into
cmpl
aad
pop
cli
sub
in
imul
popa
jnp
mov
popf
mov
subb
pop
inc
jne
call
lods
xor
icebp
xchg
dec
in
mov
leave
xchg
xor
clc
aad
fs
filds
dec
loopne
fldcw
jp
inc
inc
sub
or
data16
into
hlt
push
sbbl
subb
repz
pop
mov
pop
dec
xchg
fldenv
fisttpl
and
jl
sbb
loopne
aas
inc
fcomps
mov
sub
out
jl
adc
sub
inc
dec
sti
lock
hlt
loopne
enter
cld
push
lock
repz
ret
or
and
mov
add
pop
xchg
and
push
pop
add
push
xor
add
ss
mov
fistl
insl
mov
out
pop
dec
adc
sbb
daa
mov
push
sbb
mov
jle
arpl
cld
xor
jp
pop
fidivrl
mov
fisubrl
or
add
mov
andb
inc
cmp
arpl
lds
or
out
dec
mov
popl
pop
mov
xchg
idivb
sbb
dec
scas
fldenv
fmul
test
testb
in
pop
bound
jge
into
adc
push
or
jb
das
inc
dec
fisttps
daa
mov
mov
inc
in
loopne
fdivrs
jbe
pop
jl
mov
movsb
filds
inc
cs
sbb
dec
sub
test
cltd
insb
cmpsl
cmp
and
sbb
pop
pop
stc
xchg
dec
add
mov
es
ljmp
sbb
test
bound
rcll
sbb
dec
adc
lret
pushl
fnsave
cmpsl
sub
ja
jne
pop
ret
inc
lock
aas
or
in
adc
mov
mov
daa
test
sub
and
fists
jp
addr16
and
std
pop
or
xchg
mov
add
xchg
popf
ret
popf
aaa
ret
nop
mov
xor
inc
fstl
scas
cmp
std
push
push
or
aaa
movsb
sahf
jne
subl
les
inc
xor
test
xchg
and
jl
mov
jmp
fimuls
scas
add
fcmovu
or
outsb
lods
rcr
fdivrl
mov
mov
push
sbb
int
repz
clc
mov
cmpsb
pop
inc
mov
push
subl
and
push
push
mov
loope
xchg
pop
mov
dec
movsb
in
push
loope
push
sti
jmp
jo
sbb
aad
sbb
push
aam
cmpsb
fcomps
int3
mov
jle
pop
or
lods
pop
mov
movsb
sbb
mov
popf
js
cltd
sbb
mov
push
mov
and
out
dec
sub
pop
aas
mov
in
lahf
rclb
stos
lods
adc
bound
push
xor
and
xor
dec
cli
pop
lods
loopne
mov
adc
add
xor
icebp
jl
add
push
out
xchg
lahf
fcmovnbe
outsl
inc
sub
pusha
int
mov
ja
stos
aas
sbb
xchg
and
and
mov
push
shrl
loop
adc
scas
sbbb
out
cmp
push
cli
push
test
clc
cmp
movb
mov
lret
xchg
aam
pop
iret
aad
es
cmp
fnstsw
test
adc
test
out
daa
fisttpll
mov
sbb
imul
movsb
mov
mov
adc
add
aaa
dec
scas
jo
out
mov
popa
sahf
ljmp
ficoml
outsl
jno
fidivrl
adc
cli
popf
pinsrw
sub
jo
jne
mov
mov
fucomp
aas
das
in
movsb
inc
leave
movsb
jmp
mov
pop
pop
das
in
inc
mov
or
stos
add
jbe
dec
pusha
adc
lret
dec
adc
inc
add
fstp
subb
mov
aas
jne
and
aam
or
negl
test
dec
fnstsw
pop
aaa
les
addr16
popa
ja
cmc
stc
jns
push
mov
pop
cld
ret
sbb
push
test
leave
add
adc
pushf
in
out
mov
or
push
adc
sbb
jnp
out
cmp
nop
cs
inc
or
out
fcoml
add
aas
cmpsb
in
in
and
rcll
mov
sarl
xchg
in
popf
or
inc
into
loop
cs
xchg
mov
mov
nop
xchg
mov
bound
sbb
test
sbb
les
aad
jg
ja
adc
arpl
adc
nop
inc
dec
push
div
lock
sbb
pop
lods
es
fmull
data16
sub
jp
rep
mov
rclb
push
dec
fstl
ret
rolb
je
sahf
testl
lcall
dec
mov
pop
loopne
sbb
dec
ds
xorb
pop
dec
lahf
mov
sbb
sub
ljmp
test
mov
jns
cmp
dec
out
mov
cmpsb
dec
es
mov
enter
rolb
andb
and
jg
dec
pop
pushf
lock
push
mov
lods
call
cmp
in
out
or
inc
mov
push
test
and
mov
push
add
pop
cmp
lcall
jl
lahf
dec
mov
mov
outsl
aaa
dec
or
mov
scas
lret
imulb
push
adc
pop
fdivrl
and
mov
leave
ret
test
jno
push
out
adc
or
fcomps
pop
out
cmp
ror
cld
mov
dec
push
cmp
jno
push
sub
or
dec
inc
jmp
outsl
aam
adc
mov
js
push
bound
push
lcall
popf
or
push
mov
cmpsl
ret
jp
pop
mov
gs
or
jno
sbb
pushf
dec
aam
stos
jmp
sbb
sbb
rep
cmp
stc
in
int3
cmc
cmp
mov
stos
iret
xchg
outsl
cmp
out
mov
scas
mov
rcll
hlt
cltd
xchg
and
push
in
mov
cmp
jp
cmpsl
push
adc
pop
xchg
mov
aad
and
mov
gs
mov
daa
pop
xor
fwait
xor
xchg
sub
loopne
add
insb
cwtl
dec
pop
adc
push
adc
loope
sbbb
dec
push
jecxz
fbld
out
js
mov
add
jbe
inc
popa
lods
je
adcb
fwait
mov
mov
push
scas
and
push
inc
arpl
jge
mov
pop
or
shl
inc
enter
inc
repz
cmc
fstl
and
mov
jbe
add
mov
ficompl
jo
dec
leave
cli
mov
sbb
and
aam
test
jmp
add
fimuls
bnd
mov
cmpsb
repnz
rcll
stos
out
add
or
xor
inc
jl
aad
fs
add
data16
lea
or
and
dec
nop
jge
addl
add
jl
sar
cltd
cmp
mov
adc
sbb
sbb
test
add
or
rorb
fistl
adc
stos
leave
xchg
pop
stos
inc
test
adc
inc
les
add
sub
popa
cmc
and
and
in
jo
test
adc
mov
add
adc
pop
movsb
dec
int
pop
test
mov
or
lcall
push
or
and
stos
fadd
and
cmp
xor
xchg
xorl
jb
nop
in
punpcklbw
or
sbb
adc
fisubrl
jle
pop
test
test
ss
inc
ljmp
dec
popf
push
js
enter
push
inc
mov
push
xchg
das
sub
outsl
aad
frstor
xor
jg
jo
sub
fldt
ret
leave
and
lcall
push
aaa
push
cmovae
cld
adc
and
scas
pop
insb
cmpl
test
jmp
icebp
inc
enter
pop
rorl
mov
inc
adc
sbb
mov
cmp
mov
jmp
cmp
ret
shr
pop
lea
aaa
fwait
add
mov
mulb
fbstp
jle
or
fbld
sub
push
dec
and
dec
push
fldl
pusha
fimull
clc
mov
out
insb
inc
adc
imul
ss
lahf
sub
add
xor
shll
push
push
mov
mov
mov
jp
scas
sbb
fdivrl
stos
int3
ja
or
setbe
mov
mov
push
push
popf
adc
mov
fisttps
test
mov
xor
xchg
mov
and
pop
cld
jmp
push
ljmp
jno
mov
push
popf
xor
push
cmpb
sbb
mov
inc
sbb
add
and
ret
outsb
int
movsl
jo
adc
mov
mov
rorb
loop
dec
mov
jmp
push
ja
mov
shll
jns
jmp
int
xchg
fsubl
dec
adc
jo
das
scas
cmp
mov
and
mov
leave
xlat
call
aas
add
xlat
sbb
nop
adc
cmp
and
jbe
push
pop
fidivs
sbb
inc
or
das
dec
loop
cmpl
jns
cmpl
shll
add
pop
mov
stos
inc
hlt
cmpb
insl
adc
std
lods
pop
jns
dec
jbe
sti
ds
shlb
pop
test
test
adc
pop
cltd
xor
jnp
roll
out
mov
ds
ret
jae
lahf
dec
fldl
mov
aaa
dec
xchg
sub
fnstenv
pop
nop
jle
dec
sbbl
data16
or
mov
loopne
cwtl
push
rcll
add
dec
or
add
call
iret
loopne
lahf
inc
int3
inc
sbb
lds
mov
mov
cmp
out
sub
out
cs
in
push
lods
incb
popf
clc
mov
adc
jmp
pusha
popf
add
addl
repz
mov
out
lcall
mov
cld
pop
cmc
xchg
mov
gs
mov
int3
aam
mov
mov
dec
push
xor
cmp
cmp
fmull
xchg
mov
mov
and
push
sbb
xor
into
stos
sbb
cmp
pushf
mov
xor
cld
jl
mov
icebp
outsl
push
xchg
adc
push
pop
mov
jnp
pop
mov
cli
xor
sub
xchg
pop
mov
movsl
add
push
jl
mov
int3
insl
pop
lea
test
js
mov
insl
xor
bound
fstl
fsub
xchg
adc
add
mov
lods
test
int
aas
mov
or
orb
pop
cmp
xor
and
pusha
mov
out
push
data16
mov
cmpl
aaa
and
mov
mov
leave
pop
ja
xor
icebp
fdivp
sbb
out
sbb
dec
jp
iret
imul
push
and
push
mov
stos
inc
test
call
dec
pop
mov
in
jp
subb
faddl
xchg
xor
sbb
cld
sahf
and
sti
inc
mov
adc
cmc
jae
test
xor
fwait
mov
xchg
adc
dec
sub
or
or
in
fisubl
inc
out
inc
shll
pop
jl
fs
and
lcall
int
sbb
movsb
and
cmpsl
insb
or
pop
fdivl
or
test
imul
push
add
or
sbb
gs
adc
insl
xor
mov
test
vpmacsswd
fldcw
nop
outsb
loope
dec
mov
int3
inc
inc
enter
jge
cmpsb
inc
in
fwait
sbb
nop
cmp
xor
pop
fsts
inc
int
xchg
push
fisubrl
lret
mov
dec
insb
iret
or
mov
test
loopne
iret
push
jb
jne
repnz
cmp
rolb
mov
clc
mov
inc
sub
pushf
das
cs
stos
add
stc
inc
int
xchg
fidivrl
and
adc
or
fldt
inc
sbb
sbb
mov
adc
cmp
cmp
lods
mov
cmp
test
and
arpl
jmp
into
loop
call
push
sub
sub
ss
push
pop
out
add
lods
mov
xor
out
arpl
mov
in
add
movsb
sub
jb
xchg
jecxz
clc
and
xchg
pop
push
nop
xor
add
inc
inc
and
mov
sub
inc
or
stc
or
pop
aas
mov
cmp
cwtl
dec
iret
repnz
push
lret
mov
call
scas
or
in
sub
adc
xchg
jo
fndisi(8087
add
pop
inc
pop
mov
push
rcll
mov
in
jne
fisttps
jns
sub
sbb
cli
dec
movaps
pop
cwtl
adc
shr
clts
pop
es
mov
cmpsl
test
enter
push
sbb
mov
mov
mov
fnstsw
sbb
mov
fsubr
mov
repz
xlat
xchg
out
xor
stos
and
popa
std
jbe
xchg
push
push
mov
test
outsl
jg
mov
pop
in
scas
das
fwait
sbb
dec
arpl
push
mov
insl
jae
test
inc
inc
or
inc
mov
cwtl
sub
xor
adc
sahf
push
add
enter
cmp
cli
test
decb
in
xchg
mov
invd
adc
pop
pop
movsb
inc
jg
into
faddl
lds
push
data16
negl
mov
and
pusha
repz
repz
inc
xchg
xchg
cmp
adc
xchg
pop
cmpsb
jbe
add
in
jno
rcr
dec
mov
xchg
jb
add
or
std
mov
xor
pop
sbb
mov
jecxz
mov
xchg
dec
daa
ret
dec
test
ljmp
sbb
out
in
mov
xor
stos
sahf
lds
mov
mov
add
dec
dec
xchg
and
in
icebp
ds
jmp
fistpl
jecxz
out
push
inc
inc
and
or
inc
test
mov
int3
loop
imul
cmp
xchg
fxam
push
mov
mov
cmpsl
outsl
xor
imul
fldenv
sub
push
stos
sbb
dec
and
data16
inc
iret
mov
xorb
das
addr16
ret
push
sarl
out
mov
inc
adc
cmp
push
scas
inc
jns
das
add
jmp
out
enter
sub
sub
cvtdq2ps
jg
lret
xor
shrl
iret
idiv
loopne
test
decl
mov
cmc
js
ret
fbstp
in
mov
and
sub
pop
mov
jne
loopne
add
jne
ljmp
popa
fnstenv
negb
int
xchg
pop
jl
xchg
sti
ret
popa
test
jns
or
mov
pop
nop
dec
pop
push
mov
sbb
rorl
mov
loop
loope
sbb
jp
xorb
hlt
repz
sti
cmp
aam
add
test
int
inc
das
dec
xchg
icebp
xor
outsl
mov
cltd
pop
adc
xor
sub
fildll
repz
dec
mov
stc
jnp
pop
dec
les
loope
sub
jb
xor
mov
aaa
xor
std
xlat
pop
std
xor
fs
jl
xchg
imul
test
adc
shl
inc
ss
xor
xor
xlat
dec
xor
das
lcall
or
in
loopne
or
inc
sub
xchg
or
and
jne
negl
add
dec
push
push
rorl
cltd
cvtpi2ps
imulb
mov
lods
mov
xchg
xor
mov
repz
shrb
mov
ds
fwait
ja
sti
daa
add
sbb
outsl
hlt
push
pop
jns
mov
das
push
pushf
push
je
sahf
lea
icebp
jbe
test
pop
das
pop
jmp
sti
iret
mov
je
mov
mov
mov
adc
add
cmp
ret
sbb
and
ja
addr16
dec
stos
out
sub
es
add
movsl
iret
mov
pop
cmp
pop
xor
mov
sahf
adc
shrl
adcb
or
cli
mov
test
cmpsb
dec
sbb
mov
xchg
int
scas
repz
adc
inc
out
aad
rorl
cli
orb
or
mov
dec
test
aaa
mov
std
insl
fimuls
addr16
mov
rcrl
test
mov
or
inc
push
push
xor
push
stos
and
sbb
cmp
mov
aas
popf
and
fs
xchg
test
repz
jb
dec
xorb
jge
cmp
cwtl
sub
pusha
ficoml
lcall
stos
ficompl
mov
scas
or
push
jge
mov
ficomps
stos
loopne
xchg
les
xchg
lods
add
push
es
std
add
sub
xchg
loopne
and
pop
iret
movsl
rclb
sarl
addr16
fiadds
sub
and
stos
aam
aas
inc
push
movsl
imul
fistpl
cmp
inc
fildll
and
arpl
mov
sbb
mov
jmp
mov
loop
sub
or
cld
sub
shl
mov
addr16
iret
ds
push
pop
mov
adcl
mov
lcall
xor
and
inc
jle
rcrb
mov
addb
xor
fcoml
and
je
push
xchg
sbb
push
mov
lahf
jle
mov
add
out
push
sti
adc
movsb
jne
cmp
dec
mov
xchg
xor
jbe
das
mov
loopne
aad
bound
jmp
std
adc
push
lcall
inc
es
jmp
jns
movsl
shlb
addr16
cwtl
jno
mov
adc
mov
jle
jb
lea
pop
shll
jae
sbb
and
pushf
cld
pop
add
int3
inc
pop
push
shl
and
or
dec
aad
cmp
push
jnp
es
ret
sub
sub
sub
rclb
cmc
inc
mov
imul
jbe
push
pop
jl
jo
cmp
xor
cmpsb
les
cmp
inc
daa
mov
mov
mov
out
adc
jmp
scas
inc
daa
dec
cmp
push
test
jns
imul
or
xlat
out
cltd
scas
mov
stc
shll
jae
sub
mov
xchg
in
pop
stos
pop
sbb
sub
outsl
or
rolb
or
mov
push
stc
inc
out
sbb
pop
xchg
jo
jg
call
xor
enter
pop
sbb
ret
movsl
lock
rcr
js
icebp
clc
and
adc
mov
add
xchg
xchg
sahf
xchg
push
jns
jns
ja
or
xchg
lret
jnp
outsb
lea
xor
sahf
mov
imul
dec
adc
pop
push
inc
mov
test
xchg
mov
out
hlt
loopne
icebp
mov
lods
imul
pop
gs
dec
push
popf
jo
jnp
mov
fstl
sti
inc
or
xchg
rcrl
sahf
cld
mov
mov
repnz
gs
push
xor
jns
jmp
into
mov
pop
test
and
xchg
jecxz
loope
sub
pusha
leave
aas
fldcw
ja
mov
jg
pop
pop
sub
mov
fidivs
jb
pcmpgtb
pop
push
jp
notb
loop
mov
mov
rcll
mov
lret
mov
push
nop
jmp
inc
pop
pop
popa
notl
aam
cmp
outsb
inc
fcmovnu
inc
out
daa
cmp
mov
push
and
fists
in
popa
repz
or
jns
aas
je
xlat
stos
pop
test
pop
dec
dec
mov
test
fisttpl
dec
pop
div
cwtl
pop
fiaddl
and
lahf
aad
jo
frstor
fwait
rcll
pop
pop
sarb
xor
jmp
pop
jle
adc
imul
clc
lcall
pop
pop
mov
mov
stos
push
gs
add
fucom
bnd
pop
stos
jecxz
decb
lea
sbb
aad
sub
cmp
imull
xchg
mov
sahf
add
hlt
aaa
pop
movsb
bound
mov
sub
in
mov
out
add
xchg
adc
loop
inc
mov
adc
mov
pop
aad
mov
inc
and
mov
push
vphadduwd
ret
mov
and
cmp
jecxz
leave
and
jle
call
ret
mov
or
jbe
lods
jb
icebp
dec
outsl
and
xor
in
add
xchg
test
cmp
cltd
push
mov
jno
scas
int3
mov
mov
lock
in
xchg
sub
pop
pop
ffree
sbbb
or
repz
sbb
jmp
sbb
sub
call
jns
loope
dec
inc
and
or
cmpsl
leave
pop
sbb
dec
cmp
cld
xchg
fs
mov
icebp
gs
rorl
mov
push
or
stos
fildll
cmp
mov
add
jns
addr16
inc
loope
adc
jecxz
lock
mov
jecxz
ds
or
jns
mov
mov
loope
sbb
pop
aam
lods
xor
gs
iret
push
scas
shrb
pop
mov
adcb
call
pop
fxch
dec
xor
lods
jge
sub
adc
xor
aas
jo
stos
repz
jmp
pushf
xchg
in
cmc
daa
push
add
mov
push
dec
push
in
mov
mov
push
ss
sbb
movnti
mov
jne
arpl
out
xor
lods
icebp
adc
mov
jl
push
fsts
mov
aaa
cmp
pop
xor
addr16
scas
jb
jge
cltd
fcmovb
adc
aaa
addr16
mov
dec
sbbb
sub
mov
insb
inc
lret
mov
dec
add
lods
mov
iret
jns
or
pop
aad
mov
and
inc
sub
aad
stos
sahf
lods
ljmp
mov
movsb
inc
mov
ficoml
pop
aad
in
shll
data16
fimull
icebp
dec
cmp
dec
out
cmc
fistl
cltd
and
mov
push
fdivl
pop
inc
adcb
iret
arpl
add
and
jle
out
jp
add
adc
sti
jl
jns
xchg
mov
push
adc
int3
jo
inc
xchg
clc
adcl
aam
cmp
xchg
fucomp
inc
ljmp
cltd
push
inc
and
pushf
mov
sub
xor
dec
inc
pop
pushf
cmp
mov
and
in
nop
or
dec
fnstsw
outsl
vpunpckhwd
mov
jge
out
inc
xchg
or
add
inc
adc
pop
test
lea
dec
cltd
mov
dec
fcmovnu
push
iret
push
fnsave
fnsave
push
icebp
dec
scas
add
adcl
insl
mov
and
sbbl
xor
mov
or
mov
repz
aaa
jbe
adc
lahf
pop
ljmp
stos
xor
addr16
mov
dec
call
and
push
adc
fisubs
rcll
inc
sub
jne
lcall
jecxz
fsts
es
outsl
iret
mov
das
add
jne
sub
outsl
inc
ljmp
cmc
push
dec
mulb
add
sub
fwait
adc
imul
xor
push
pop
jns
cmp
pop
mul
push
subb
sub
or
rclb
lea
sbb
xchg
jmp
mov
mov
movsl
mov
aaa
aam
adc
pop
xor
enter
inc
cmp
xor
inc
cmp
xchg
push
inc
jns
dec
pop
inc
outsl
shr
mov
test
pop
xor
push
sub
in
into
xor
push
icebp
sti
sub
scas
inc
lcall
outsb
ljmp
inc
in
jecxz
lea
mov
test
repnz
jb
mov
sahf
xlat
add
imul
inc
les
push
rcll
sbb
jbe
movsl
sbb
mov
orb
mov
ret
iret
fdivp
push
xchg
clc
mov
push
aad
cmp
pop
int
js
adc
xchg
mov
aaa
sahf
jno
lcall
jg
nop
insb
xor
rorb
hlt
ljmp
jmp
icebp
xor
pusha
call
mov
xor
insl
or
inc
std
cmc
in
shl
xchg
jg
jg
loopne
mov
stos
inc
stos
cmp
mov
je
pop
cwtl
paddsb
cmp
das
fdivl
mov
pop
cmp
mov
jns
push
dec
sbb
mov
in
adc
sub
sbb
shl
xor
js
repnz
ret
mov
ret
jb
dec
or
stos
sarb
xchg
clc
pop
mov
cs
sahf
adc
cmp
mov
out
sub
or
sbb
dec
pop
add
mov
gs
inc
shrl
or
mov
loopne
inc
inc
stc
addl
push
jae
cmp
push
xor
cmpsb
mov
pushf
mov
mov
xchg
sub
lock
imul
out
mov
and
jmp
mov
and
jae
hlt
aad
lret
jb
adc
add
xchg
int3
dec
mov
imul
movsl
mov
mov
adc
cmp
sbb
addl
popa
xchg
andb
nop
push
cmc
jg
nop
rclb
in
daa
pcmpgtd
hlt
sub
jae
loop
mov
rcrl
jmp
or
sar
mov
ds
cmovs
into
sbbb
enter
sub
lcall
cli
cli
inc
adc
pop
sbb
xor
mov
idivl
repnz
sbb
jmp
sbb
in
fisubs
lock
repz
sub
ret
addb
pop
imul
lret
rcll
popa
loop
int
mov
sbb
xchg
dec
ret
das
xor
or
push
inc
sbb
sbb
mov
loope
pop
push
or
inc
lods
scas
adc
stc
xchg
mov
js
loope
jge
jnp
cltd
cmpl
adc
push
fbld
inc
lret
stos
mov
add
push
movsb
cmpsl
jbe
aad
inc
or
shll
fwait
out
fiadds
stos
rcr
mov
inc
push
xor
icebp
dec
mov
ret
push
or
jnp
jmp
fisttpll
mov
ret
int
jo
fdivrl
daa
jne
pop
push
loope
ja
cmpsl
loop
jecxz
rorb
daa
jp
jecxz
cwtl
fiaddl
inc
xchg
push
leave
and
push
pop
and
mov
imul
pop
lods
iret
mov
or
movsl
enter
outsb
adc
cmp
cmpsb
xchg
add
pop
mov
insl
xchg
cmp
lret
aam
xor
mov
xor
inc
mov
mov
inc
mov
xor
mov
jmp
or
jnp
popf
arpl
jnp
shrl
pop
inc
roll
xor
fistpl
cmpsl
cli
sbb
ficomps
sub
adc
push
xchg
and
mov
ds
ds
andl
lds
add
pop
repnz
shl
add
stos
dec
dec
dec
scas
jecxz
xchg
arpl
mov
js
cmpl
xchg
data16
dec
lds
pop
fiadds
in
lret
jl
rorl
insl
jmp
or
jp
jnp
insb
pop
and
lods
push
push
out
into
adcb
jmp
dec
dec
sbb
xchg
or
jb
addr16
fsts
into
push
nop
cs
js
outsl
outsl
push
out
jb
pushf
daa
mov
mov
pop
popa
cltd
push
mov
xchg
mov
test
pop
cmp
fwait
test
dec
ds
repnz
in
lock
test
jbe
adcl
imul
rcrb
nop
jmp
mov
addr16
mov
jmp
jge
cmp
sub
flds
movsb
push
jbe
repnz
popf
xor
pop
ret
shll
out
jno
add
jns
adc
xor
or
jno
add
xlat
add
jne
lea
dec
dec
ficomps
and
scas
insb
negb
dec
fucomip
push
mov
jl
push
push
fs
mov
clc
jne
insb
inc
mov
sub
inc
inc
arpl
fcomps
in
arpl
add
lahf
jecxz
aad
into
ljmp
pop
pop
repz
push
xor
adc
lea
outsb
and
inc
stos
movsl
lret
cmp
fstl
test
cmp
lahf
add
jae
and
mov
insb
movb
cmp
shrb
cmp
test
sbb
out
jmp
and
add
pop
enter
outsl
fsin
xchg
dec
nop
mov
cmp
sub
pop
jne
clc
test
fisubl
xchg
insl
mov
pop
xor
scas
ja
jmp
jns
cmp
out
inc
int3
pop
sahf
lahf
mov
xchg
and
or
lock
lahf
mov
pop
xchg
add
or
lods
in
stc
popf
loope
jecxz
xor
insl
jmp
jnp
inc
dec
mov
mov
dec
out
adc
fistl
cmp
stc
jmp
cli
iret
aam
mov
rolb
mov
loope
and
sbb
cld
cmp
neg
pop
ds
dec
push
stos
pop
push
subl
xor
pop
push
cs
stos
dec
outsb
cli
dec
mov
scas
dec
mov
mov
aaa
movsl
sahf
adc
ffreep
sub
mov
lods
popa
and
push
ficoml
mov
mov
jg
dec
mov
add
xlat
mov
jnp
dec
cmpsb
mov
cmp
xor
or
add
dec
icebp
pop
pop
lds
sbb
or
insl
lcall
fldl
inc
inc
mov
shr
xchg
sub
out
fsin
inc
and
pop
shrb
xchg
idivl
adc
negb
test
pushf
push
adcl
dec
cmpsb
push
mov
and
or
mov
in
dec
push
xchg
cli
mov
pop
mov
lea
cmpsb
pusha
int
daa
add
into
cmp
add
int3
and
and
dec
or
adc
clc
dec
mov
jae
loop
cltd
jl
jb
ss
xchg
pop
jbe
mov
cmp
adc
test
mov
pop
pop
adc
jbe
fistps
fsubrl
push
jnp
pop
xchg
mov
test
push
lods
jecxz
jns
push
adc
iret
addl
jge
adc
call
lods
add
pop
leave
dec
call
push
and
sub
xor
push
dec
jle
nop
or
movsb
je
dec
je
fsubrs
xor
fbld
cmpsb
scas
es
mov
mov
mov
sti
sub
push
lret
or
pop
loop
in
xchg
adcb
aam
xchg
loopne
push
js
andl
pop
test
movsb
cmc
push
xchg
adc
mov
testl
jle
jb
mov
and
dec
clc
iret
xchg
adc
xchg
je
cmp
xchg
rcrb
cmpb
pop
popa
lcall
test
mov
mov
and
out
test
jge
xchg
fsts
daa
mov
arpl
and
hlt
movsb
sbb
insb
jnp
arpl
and
cmc
cmp
jl
fsts
fisubs
lods
jp
mov
dec
push
mov
push
int3
mov
scas
sub
rolb
out
shlb
pushf
cmp
jmp
ret
mov
xlat
int3
cmovnp
mov
mov
push
rcrb
and
sahf
xor
fcos
or
pop
inc
pop
pop
jmp
mov
lock
push
es
and
test
jmp
dec
and
pushf
mov
loop
mov
cmp
rol
or
fldcw
les
xchg
mov
jo
pusha
rorb
ret
mov
cs
sub
xchg
xlat
push
sbb
sbb
jge
xchg
fwait
enter
sbbl
popf
insb
dec
cwtl
pushf
lods
cmpsb
outsl
popa
nop
sub
mov
in
dec
std
add
mov
insl
and
mov
mov
cmp
cwtl
mov
sar
xchg
jno
inc
xchg
dec
adc
or
rorl
call
loopne
jmp
cmp
test
incl
testb
cmc
icebp
pop
ljmp
test
add
movsl
push
scas
fcoml
adc
sbb
lret
cltd
mov
leave
and
dec
ret
outsb
scas
xchg
ret
jno
pop
sbb
mov
lock
mov
enter
pop
xchg
xchg
xor
nop
sub
cmp
mov
outsl
enter
adc
dec
enter
and
mov
lcall
jge
fdivrp
jns
scas
ret
pop
and
mov
sub
cmp
test
sbb
out
jno
in
or
sbb
test
adc
outsb
cmp
dec
jg
shl
data16
aaa
repz
mov
sbb
or
or
repnz
and
jae
dec
dec
cmpsb
inc
mov
sbb
mov
loope
jo
cmpsl
dec
gs
hlt
nop
mov
lret
jns
xchg
inc
or
adc
dec
lods
and
xor
xchg
mov
mov
fildl
es
lods
jmp
sbb
scas
fsubs
inc
popa
pop
negb
popf
ficompl
ja
into
pop
sub
fs
inc
push
inc
dec
jns
sahf
sarb
pop
sbb
xchg
popa
dec
push
pop
mov
mov
adcb
jae
push
adcl
inc
xchg
out
lret
lods
in
mov
loope
in
nop
inc
das
cli
test
std
rcrb
scas
outsb
fmuls
mov
cs
xchg
in
push
mov
add
push
fsubl
inc
xchg
jmp
push
dec
pop
cmpsb
mov
cwtl
xchg
and
cwtl
mov
dec
jb
jecxz
insl
testb
shlb
and
loop
pop
sbb
sbb
in
mov
mov
or
inc
dec
pop
pop
adc
adc
jge
mov
hlt
not
jno
iret
xor
dec
rcrl
sahf
mov
insb
sub
push
clc
or
inc
aad
test
fidivrs
dec
mov
jnp
fs
dec
inc
push
xor
mov
dec
mov
xor
pop
out
sti
imul
in
cld
push
mov
pop
mov
mov
ds
xchg
das
add
rclb
repz
inc
movsl
lcall
rolb
js
push
sbb
data16
inc
mov
mov
adc
clc
test
cltd
orl
cli
or
arpl
add
nop
mov
aam
push
push
das
arpl
jbe
clc
in
test
repz
aad
lods
mov
movsl
sub
ja
ret
sbb
sub
test
xchg
pop
in
xchg
arpl
xchg
pop
pop
out
ret
test
lds
jbe
jo
push
movsl
in
xchg
imul
je
int3
sbb
push
test
mov
out
jae
dec
push
jbe
notb
add
jle
addl
test
ficoml
jb
in
adcb
gs
cld
pop
rcl
lods
sti
xor
cwtl
in
ret
pop
jae
setbe
enter
cmpb
js
push
iret
lahf
imul
xor
icebp
out
inc
ret
repnz
pushf
pop
popf
aas
loop
dec
pop
and
insl
pop
xor
sbb
push
andb
cmp
sahf
mov
outsl
mov
and
mov
inc
mov
mov
jmp
movsb
enter
push
xor
push
push
lds
push
sahf
push
jb
insl
dec
rol
jmp
xor
cmpsb
pop
aam
push
addr16
ret
mov
cwtl
cld
dec
popf
arpl
lods
cmp
imul
jmp
call
mov
inc
pop
or
lcall
stos
lahf
push
push
mov
dec
icebp
pop
push
push
sbb
dec
ss
rolb
cmp
dec
add
bound
lock
xchg
jmp
mov
mov
aas
push
mov
cmp
adc
lds
adc
fadd
outsb
movsl
mov
xchg
aam
pop
cltd
ret
inc
aam
dec
aam
testl
ret
cmp
call
ret
inc
mov
and
adc
mov
sub
int3
rcll
popl
pushf
push
ret
lea
test
inc
cli
lcall
or
pop
and
push
lret
push
mov
out
pop
push
mov
aas
std
push
cmp
mov
out
fcoms
shll
sub
dec
cmp
test
mov
repz
ret
push
lock
add
sub
test
nop
xchg
add
enter
jae
add
jo
pop
jecxz
arpl
wrmsr
cmc
punpcklwd
push
movsl
call
call
dec
dec
add
xchg
shl
or
lods
cld
insb
xor
jmp
jno
clc
pop
add
insl
push
iret
mov
cmp
cmpsb
push
scas
in
mov
insl
sar
lret
pushl
inc
adc
xchg
pop
lret
punpcklbw
sbb
mov
mov
icebp
fidivrs
decl
jmp
mov
aad
or
push
push
or
ret
sbb
xchg
pop
sti
pop
loope
sbb
int
stc
push
dec
cmc
lods
aad
jmp
out
dec
push
sub
cld
sarl
dec
adc
test
stos
cli
dec
ja
lcallw
scas
repz
hlt
mov
pop
fiadds
test
jl
out
mov
adc
pop
fcmovnbe
push
mov
jno
rclb
sub
insl
repz
sub
shll
mov
cmp
insl
jmp
movsbl
add
je
repz
cmc
dec
jne
dec
iret
add
mov
std
loop
fidivl
aam
add
xchg
ds
mov
xchg
mov
xchg
fisttps
mov
cmc
repnz
xor
add
fildl
test
add
push
sbb
pusha
aas
pop
inc
js
pop
ss
loope
mov
pop
ret
andb
cli
xchg
es
cli
jp
frstor
xchg
cmp
test
adc
xchg
test
lods
out
js
push
fnsave
daa
dec
int3
dec
and
stos
xchg
jge
out
arpl
loop
jns
std
mov
xlat
es
push
pop
nop
dec
pop
add
sbb
js
sbb
mov
pusha
js
pop
adc
daa
pop
dec
xchg
das
out
out
adcb
cmc
pushf
and
sahf
stos
sbb
cmc
or
insl
imul
hlt
gs
lods
pop
test
pusha
or
jmp
mov
jo
fcmove
jl
add
mov
icebp
xadd
movsb
es
xlat
and
sub
scas
and
push
push
inc
jnp
lock
sub
sub
mov
sub
insb
icebp
dec
xorb
adc
insl
jle
inc
cmc
add
clc
sbb
sbb
das
adc
js
sub
jae
push
push
and
jl
inc
bound
mov
inc
aas
and
lcall
lret
and
mov
cmpb
mov
out
scas
adc
cwtl
popf
outsl
mov
cmp
loop
call
add
sbb
cli
mov
icebp
mov
sti
jl
cmpsb
mov
and
add
je
dec
cmpl
mov
mov
mov
xor
call
aaa
outsl
ficompl
lock
push
sbb
xor
push
sbb
scas
or
mov
adc
sbbb
scas
fmul
test
jg
iret
push
sar
nop
cmpsb
mov
pop
lcall
xchg
mov
add
pop
rcrb
in
fwait
jp
dec
nop
cli
in
shlb
into
push
mov
and
pop
movsb
dec
sub
and
xor
add
outsb
and
push
dec
add
cltd
shl
pop
xor
loop
cld
dec
lods
pusha
push
or
sub
sub
push
adc
addr16
pop
xor
enter
pop
mov
mov
cmp
and
scas
into
mov
cli
addr16
mov
mov
push
pop
pop
cmpsb
cmpsl
xor
lret
pop
mov
lret
bound
nop
aam
inc
jl
pop
sbb
std
inc
jo
orb
xchg
ret
jge
cs
int
dec
dec
sub
mov
inc
imul
jae
ret
xor
jae
ret
in
les
test
insl
out
adc
cmp
jne
inc
push
inc
int
sbb
hlt
cld
test
push
decl
shll
adc
fcmovnb
pop
icebp
test
jnp
data16
lcall
push
adc
sbb
mov
xchg
popa
shrb
lcall
mov
dec
or
jns
rorb
adc
jecxz
fs
call
xchg
xchg
popf
xchg
pop
push
sbb
adc
pmovmskb
data16
lret
stos
push
fsubs
or
lcall
jle
jp
mov
mov
mov
xor
xor
push
cmp
in
gs
scas
stos
dec
cmp
jnp
jb
pop
lcall
push
cmp
mov
and
gs
jle
test
stc
and
repnz
xorl
rcr
mov
push
and
mov
push
lret
xchg
test
fcompl
aam
mov
dec
xchg
movsl
mov
cmc
fldt
mov
pop
jl
repz
sub
pop
out
jecxz
or
mov
movsl
testb
and
pushf
stos
lahf
movsl
mov
jb
jmp
ss
mov
ret
sbb
lock
bswap
inc
or
sub
jle
inc
jp
push
dec
push
inc
push
add
sub
jle
sar
fsubs
rorl
mov
cld
xchg
xchg
lret
cmp
mov
adc
xor
jns
insl
sub
adc
push
xchg
and
idivl
scas
lods
and
int3
cwtl
add
cmp
mov
rcrl
lock
or
jp
movsl
mov
ss
mov
lret
cmp
and
gs
mov
or
dec
add
inc
mov
das
pusha
mov
xchg
insb
jg
pop
mov
mov
adc
add
mov
mov
neg
dec
cmp
inc
mov
mov
mov
mov
xchg
popa
mov
mov
jecxz
stos
addr16
xor
cmp
lock
je
add
add
and
cltd
add
hlt
jb
popf
fildll
clc
push
cmp
xorb
mov
int3
pop
data16
aas
cmp
push
int
sbb
rcrb
jmp
sub
mov
add
mov
int3
lds
test
rcr
add
sbb
ret
cltd
mov
pop
stos
fcoml
call
mov
push
pop
sbb
daa
push
mov
out
dec
js
call
xchg
cmpb
bound
mov
xchg
xor
insl
sti
outsl
ss
aas
pop
loope
mov
insl
lret
mov
daa
pushf
icebp
movsl
dec
cmpsl
dec
es
or
add
jmp
jno
stos
aam
jmp
pop
in
jno
bound
test
movsl
xchg
decl
mov
jmp
rclb
arpl
mov
stc
shrb
out
lods
pop
xchg
mov
push
shll
xchg
movsb
into
cmp
fcomps
aas
mov
andl
test
inc
mov
add
dec
popa
loop
dec
inc
mull
lret
add
inc
shr
cmpsb
xchg
inc
or
add
lcall
jle
stc
mov
push
lock
xor
sbb
mov
mov
jl
dec
adc
ja
outsb
lcall
das
add
mov
jg
bound
xor
dec
mov
xor
fldcw
inc
or
push
cmp
mov
ficomps
cltd
lcall
or
xchg
adc
in
jmp
imul
scas
mov
jno
loop
push
cmp
test
mov
push
ret
push
orl
inc
xchg
adc
push
mov
mov
inc
push
call
mov
loopne
adc
repz
add
xchg
jmp
sbb
out
jbe,pt
fwait
out
in
mov
aaa
rcll
fnstsw
outsl
js
xor
sub
pop
fs
lock
or
sub
fcoml
insb
pushf
hlt
adc
sbb
les
test
mov
xor
in
mov
movsb
xorb
mov
test
outsl
adcl
sub
sbb
pushf
sahf
cwtl
mov
loop
daa
icebp
jl
jmp
js
xchg
inc
test
or
jnp
mov
movsb
jecxz
lahf
pop
push
gs
lret
xchg
mov
imul
pop
mov
xor
movsb
mov
adc
sahf
mov
sub
ja
les
pop
xchg
add
inc
add
ja
mov
sbb
xor
mov
aam
sub
push
call
sub
jns
lret
iret
out
cmp
arpl
out
arpl
jae
mov
add
aaa
movsl
ficomps
cmpsb
add
sbb
out
mov
mov
rcr
cwtl
les
mov
push
clc
lret
sub
cmp
mov
jb
es
jge
lahf
add
fwait
inc
xor
pop
fstpl
xchg
cmp
stos
leave
test
cmpb
mov
dec
lea
jle
sbb
cwtl
fwait
dec
imull
out
pop
xchg
xchg
ja
inc
xchg
clc
push
movsb
and
in
popa
int3
adcb
cli
out
xchg
imul
cmp
mov
mov
xchg
in
adc
pushf
fnstsw
sbb
xor
add
js
jge
leave
mov
fwait
push
or
inc
mov
cmp
movsl
shll
push
fistps
cmpsb
daa
push
jbe
sbb
push
aaa
ljmp
mov
ss
xor
mov
roll
rcl
xor
std
and
ret
iret
repnz
xchg
orb
mov
mov
sbb
lods
fwait
mov
jmp
fstl
jge
lcall
fwait
aas
mov
mov
ljmp
pop
mov
frstor
cmp
aad
pop
or
jmp
lods
xlat
scas
jae
or
pop
out
jmp
dec
sbb
popa
xchg
stos
or
adc
lcall
insb
fcmove
stc
xor
xchg
imul
fidivrs
addr16
jmp
dec
mov
or
fwait
inc
and
xchg
incb
adc
mov
pop
lods
sbb
dec
mov
ficompl
mov
rcrl
jecxz
push
mov
call
and
int3
lcall
adc
mov
mov
push
outsl
lods
mov
ret
dec
push
push
enter
enter
sub
cwtl
xlat
mov
add
pop
cwtl
fnstenv
mov
mov
lcall
movsb
scas
shll
xchg
jae
movb
sahf
and
das
imul
push
jne
mov
cmpsb
add
std
bound
xchg
jns
pop
addr16
les
and
stos
cmc
mov
push
fidivrl
jl
dec
or
xchg
cmp
orl
pop
or
loop
or
in
fs
and
inc
inc
and
mov
mov
call
push
sub
xchg
ds
jmp
xchg
and
jl
movsl
inc
shll
mov
cld
xchg
lret
lods
sahf
clc
adc
push
subb
cmpb
push
cmpb
sbb
add
mov
jae
push
cmpsl
out
fistps
pop
sub
adc
dec
dec
cwtl
xchg
lret
inc
xor
jno
ret
add
bound
lahf
and
in
enter
pop
fs
jno
arpl
mov
out
std
pop
jo
imul
lods
in
xchg
push
mov
rcrb
test
push
pushw
cli
push
xchg
nop
jbe
xor
add
dec
inc
xchg
mov
mov
rcrl
push
xchg
push
sbb
xchg
sbb
sub
sahf
ss
xchg
mov
dec
push
clc
out
movsb
push
ds
xchg
fmull
add
xchg
sahf
sub
arpl
nop
or
cwtl
aas
cmp
in
cmp
push
xchg
mov
jno
jae
mov
fldenv
add
mov
in
lret
js
adcl
in
and
sub
jecxz
stos
int3
insb
jl
or
mov
xchg
jbe
shl
repz
insb
scas
rcll
mov
mov
or
adc
daa
hlt
pusha
lret
mov
stos
mov
mov
and
inc
and
xchg
cmp
js
out
add
sub
mov
sbb
sahf
out
adc
test
ret
negl
rcll
xor
inc
stc
xchg
loopne
lock
xor
into
sar
lock
jp
in
pop
das
inc
push
mov
movsb
sbbl
imul
scas
or
mov
and
testl
xor
lods
lods
adc
mov
mov
nop
lcall
mov
dec
fldcw
xor
lret
movsb
imul
adc
je
dec
adc
jp
fwait
mov
repz
loopne
jo
lds
xchg
cli
and
data16
cmc
mov
mov
mov
loope
addr16
jmp
push
loopne
into
dec
into
inc
sub
dec
pop
in
pusha
shl
outsb
iret
mov
pop
in
cmp
rol
or
dec
and
aas
cmp
xchg
leave
fsub
dec
hlt
mov
or
sti
aas
cs
movsb
std
imul
cmp
inc
fstl
lods
jge
mov
xchg
lods
ljmp
push
mov
add
dec
jmp
or
cmpsb
testl
mov
clc
add
xchg
loop
or
mov
push
mov
push
nop
sti
sub
jnp
loop
fistpll
dec
mov
and
popf
or
dec
faddl
xchg
rorb
in
adc
arpl
xlat
pop
mov
lds
je
add
std
jmp
lea
dec
imul
ja
and
dec
and
outsb
inc
iret
push
sub
jno
xchg
mov
mov
mov
and
cmpl
and
jp
sbb
rclb
pop
cmpl
cmp
lds
mov
in
mov
iret
bound
or
aam
lret
int3
mov
mov
mov
xchg
add
fwait
push
add
lock
popf
ljmp
or
ret
xor
stos
fwait
cmpsb
repnz
mov
popf
lcallw
sbb
inc
pushf
push
jnp
outsb
xchg
mov
insl
mov
push
mov
mov
idivl
mov
imul
jl
cld
lods
add
jp
fwait
or
sarb
adc
sbb
ret
jbe
pop
inc
dec
pushf
pop
in
jns
shrl
xchg
aas
dec
push
push
dec
hlt
in
pop
aad
sub
lret
cmp
or
fwait
icebp
and
movsb
shrl
pushf
repnz
cwtl
fldenv
ljmp
imul
jmp
sub
and
imul
sbb
mov
pop
or
out
jbe
or
dec
loopne
and
lds
into
cmp
insl
fstl
cltd
ficoml
pop
mov
les
insl
mov
or
push
xor
jb
pop
pop
add
loop
push
mov
lahf
cmpsb
jge
ror
lea
push
sub
inc
mov
int
jae
or
inc
inc
jecxz
clc
insl
pop
mov
loope
xchg
adc
scas
mov
xor
mov
hlt
or
pop
cmp
incb
add
adc
fisttpll
ror
imul
dec
pop
pushf
call
sub
sbb
rorb
out
xchg
inc
dec
aad
add
fnstsw
jne
cmp
sbb
jbe
enter
shrb
shll
push
adcb
dec
lcall
cli
ds
or
add
mov
lret
aaa
mov
shlb
stos
mov
cwtl
xchg
fldt
mov
sbb
push
dec
jae
or
adc
jmp
dec
and
cltd
daa
dec
adc
push
pop
inc
or
cmpsb
add
mov
adc
mov
and
adcl
jg
dec
push
mov
mov
pop
inc
or
js
xor
aas
cmp
leave
repz
test
mov
adc
mov
lods
mov
imulb
out
dec
pop
fdivs
mov
mov
testl
mov
je
pop
jae
out
jmp
in
lahf
inc
ret
int3
clc
xor
cmpsb
repz
ss
push
mov
in
add
jge
dec
pusha
jnp
into
shl
xlat
cmpb
mov
cmp
jbe
jns
in
pop
sub
or
insl
xor
sub
inc
xor
nop
xchg
mov
fwait
stos
call
mov
leave
pop
fstps
or
xchg
je
mov
out
sbbl
aad
arpl
add
loop
adc
iret
add
insb
lret
test
add
movsl
jl
sbb
ds
push
out
xchg
sarl
ret
out
fwait
add
or
inc
and
bnd
xchg
mov
mov
push
ja
pushf
scas
test
jmp
div
test
faddl
xchg
inc
arpl
cltd
mov
lea
lock
jmp
arpl
lret
xlat
mov
popa
shll
lcall
mov
xor
or
mov
sbb
loopne
popa
lods
movsl
jecxz
xlat
mov
xlat
test
fwait
sub
dec
imul
and
sub
or
or
imul
xor
scas
jmp
sar
ret
pusha
ja
incl
lahf
pushf
dec
xchg
inc
or
push
shll
ret
adc
mov
adc
lahf
movsl
inc
out
cmpsb
loop
push
lret
fcoms
int3
out
xchg
inc
cmp
test
movsb
movsl
inc
aam
push
fs
shlb
dec
leave
js
test
out
pop
or
push
lds
xchg
jb
bound
or
and
adc
inc
xchg
mov
lea
mov
aaa
subb
adc
xor
and
inc
pop
into
push
fs
push
fistpll
mov
lock
mov
mov
and
mov
mov
cmp
or
ret
xchg
dec
cmp
sti
ret
rclb
popa
fs
setno
lret
imul
jmp
xchg
lock
mov
lahf
mov
sbb
mov
pushf
outsl
sbb
pusha
xor
jbe
jno
gs
mov
sbb
hlt
mov
shr
test
popa
sub
xchg
std
xchg
xchg
and
push
pop
dec
test
pop
mov
jle
push
jmp
das
stos
lods
xlat
hlt
sub
popf
xchg
xor
mov
out
stc
mov
dec
sbb
mov
xchg
xlat
int
sbb
outsb
dec
js
push
add
jbe
adcl
pop
negl
dec
inc
and
loop
push
xchg
mov
sub
push
out
ss
sub
fs
insl
cmp
mov
js
xor
fsub
mov
movsb
movlps
cmc
or
sub
jge
lods
lock
cmp
mov
inc
xchg
daa
stos
cmp
fiaddl
addr16
int3
adc
sar
shll
shrb
mov
movsb
stos
or
into
imul
test
dec
xor
xor
add
fadds
jnp
jae
mov
push
pop
fldenv
notb
fs
flds
imul
dec
inc
adc
out
aas
or
adc
mov
lea
mov
daa
cmp
mov
xchg
stos
sahf
test
pop
xlat
cld
mov
in
aas
jb
imull
cmpsb
mov
aad
jle
insl
sahf
sbb
loop
std
aas
rolb
inc
dec
movsb
pop
loope
mov
fisubs
sub
jns
pop
xor
insl
dec
push
push
push
pop
mov
jecxz
sbb
mov
push
or
sbbl
mov
pop
mov
cmpsl
push
mov
add
into
lret
out
lea
and
fs
xor
add
adc
into
pop
and
sahf
roll
mov
pop
out
stos
sbb
xchg
xor
cmp
pop
inc
or
push
in
mov
sub
xor
pop
sahf
subl
outsl
int3
arpl
xor
sbb
adc
shrb
and
mov
lret
mov
cltd
or
rorl
pop
int3
mov
xchg
push
jecxz
je
ss
jo
or
cmpsb
js
cmc
push
cld
sahf
and
and
inc
push
into
mov
ja
or
into
or
adc
xchg
aaa
fdivl
mov
cmp
add
adc
insl
mov
mov
or
cmp
pop
popa
xchg
cmp
ds
mov
ds
mov
sub
fcmovne
bound
test
sub
push
rcrb
inc
hlt
jge
xor
cmp
pushf
mov
lds
pop
sbb
or
insb
adc
je
sub
mov
iret
mov
xor
movb
jb
movsl
mov
adc
sbb
or
adc
fcomps
adc
cmc
je
mov
add
mov
aad
lock
fnstsw
dec
fdivs
leave
cmp
inc
sbb
or
adc
cltd
push
enter
repnz
in
ret
push
adc
fwait
mov
daa
or
and
mov
std
les
outsb
dec
push
mov
shrb
and
jbe
popf
pop
scas
cld
pop
int3
push
bound
jp
or
xor
scas
pop
mov
jge
push
dec
outsb
or
icebp
cltd
add
rcl
cmp
pop
ljmp
inc
jne
pop
insb
mov
inc
pop
push
mov
inc
out
in
loope
out
cld
fdiv
xor
clc
fbstp
and
lods
inc
mov
dec
mov
subb
call
xor
repz
mov
ja
daa
iret
inc
addr16
push
cmp
mov
lahf
mov
sarb
pop
sti
mov
mov
les
jno
xchg
mov
pusha
ret
testl
repnz
sbb
xchg
mov
sub
xor
xchg
pop
clc
ja
jo
and
ss
cmc
inc
cmp
out
push
sbb
lea
addr16
add
sub
mov
pop
sub
arpl
sbb
loopne
jg
stos
sbb
cmp
pop
jo
nop
sub
sbb
pop
mov
pop
jno
cmp
cmp
mov
inc
in
movsb
xchg
out
sub
mov
iret
ds
imul
loopne
mov
push
jmp
arpl
stos
mov
pop
push
add
xchg
mov
fdivl
adc
xor
ja
daa
push
fimuls
ret
inc
test
jb
dec
dec
addb
into
jl
cmp
add
inc
cld
lret
dec
sub
dec
jp
addr16
push
pop
lea
cmpsl
std
rcl
inc
adc
iret
imul
add
sub
mov
adc
ret
lahf
dec
xchg
ljmp
in
ljmp
clc
jns
iret
cld
addl
fildll
addr16
mov
or
mov
or
ret
aam
rcrl
jo
mov
jo
lods
pmaddwd
jns
cwtl
js
mov
repnz
adc
out
aad
mov
add
scas
pop
jle
jecxz
fwait
mov
lret
xchg
xchg
out
fmuls
pop
hlt
jb
imul
pop
mov
movsb
sbb
mov
loope
int3
shll
and
pop
aam
mov
add
mov
jb
mov
mov
test
out
adc
sub
dec
nop
jns
sbb
adc
out
int3
pop
notl
stos
cmpsl
push
cmp
mov
jl
cmc
xchg
adc
stos
ss
test
cmp
das
inc
stos
push
lds
pop
xchg
push
dec
data16
test
dec
push
sbb
outsl
pushf
jle
mov
pop
xchg
mov
add
mov
in
loop
sub
dec
cs
mov
sub
add
ljmp
mov
shrl
dec
ljmp
mov
sbb
and
pop
stc
mov
bswap
loop
insb
cmp
les
mov
loope
mov
scas
test
f2xm1
mov
pop
pop
ret
xor
and
dec
shlb
inc
mov
sbb
aad
popf
adc
mov
xchg
jg
inc
jae
jb
jns
lds
pop
dec
ror
mov
lods
pop
cli
push
cltd
je
pop
xor
js
inc
mov
lret
movsl
ljmp
sbb
pop
test
dec
or
add
adc
jo
fldt
pop
and
mov
and
rcll
mov
sahf
mov
popa
inc
ljmp
ljmp
fimull
push
sti
cmp
sbb
mov
add
xlat
pop
add
xchg
mov
jmp
pop
xor
pop
xor
cmpsl
mov
fs
push
ffreep
negl
loop
mulb
divb
pop
mov
dec
out
push
sub
pop
iret
sti
dec
movsb
inc
pushf
popf
ds
das
lock
cld
cmp
adc
fists
and
inc
loop
pop
push
fcompl
jb
push
stc
jns
fnsave
lods
insb
leave
adcl
mov
call
and
lret
icebp
popf
int
jmp
lods
add
ljmp
adc
gs
nop
or
xchg
stos
fists
or
rorl
mov
sbb
test
inc
add
mov
xchg
add
and
xlat
jnp
jle
ret
insl
lcall
out
repnz
jae
lea
xchg
addr16
mov
insl
and
adc
fwait
ljmp
std
xchg
pop
mov
std
jg
stos
cli
inc
pop
cmc
adc
mov
jb
arpl
cmp
push
cmp
sub
dec
jns
ret
aas
mov
in
pushw
addr16
mov
xor
shlb
dec
cmc
cmpsl
inc
jg
jg
xchg
in
push
enter
icebp
shrb
loopne
and
dec
mov
jge
pop
cs
jle
int3
aam
dec
xchg
popf
xchg
stos
push
sub
jmp
push
cmp
aas
int3
cmp
dec
add
mov
mov
sub
ss
fs
fxtract
mov
sub
cli
push
out
shrb
sbb
das
mov
addr16
scas
int3
les
pop
mov
pop
add
mov
jmp
xor
xor
inc
scas
popa
pop
jo
into
frstor
or
cmp
sbb
shll
push
pop
sub
jmp
xchg
xchg
jmp
fdivl
icebp
pop
xchg
and
jnp
hlt
fldcw
mov
mov
xor
arpl
ret
enter
xor
and
fwait
ds
lret
push
push
imul
dec
or
pop
outsl
xor
mov
sarb
add
push
mov
cli
sbb
testl
jmp
or
add
jno
xchg
xlat
push
and
inc
and
pop
sub
int3
mov
cltd
sahf
test
fwait
scas
out
outsb
into
cwtl
insb
pop
inc
push
repz
sahf
pop
lock
push
ficomps
ret
pop
pop
mov
sub
js
test
pop
cmp
sub
cli
push
add
push
cmp
sub
cmpsl
mov
add
cmp
sti
push
jne
cmp
push
add
jmp
push
jl
test
pop
and
add
insb
shlb
mov
xor
jb
mov
push
add
jno
mov
fcmove
xor
cmp
enter
mov
push
sahf
sub
out
mov
andb
push
inc
sbb
lret
mov
add
cwtl
sbb
icebp
inc
mov
scas
sbb
dec
inc
imul
addr16
in
aas
add
inc
mov
notb
or
cmp
ja
mov
inc
test
ja
adc
jns
push
ja
repnz
aam
fs
loop
push
sbb
dec
or
inc
adc
jl
xlat
loopne
lds
imul
xor
cmpsb
mov
clc
pop
sub
push
adcl
cld
dec
mov
mov
cmpsb
shl
sar
add
dec
rcrl
push
cld
clc
sahf
popf
stc
inc
or
hlt
jne
lods
movsb
int
jecxz
subl
push
add
movsb
out
push
and
mov
pushf
mov
cmp
loopne
mov
or
xlat
mov
loopne
sar
mov
jmp
mov
fadd
push
jmp
sbb
sub
lds
dec
loopne
nop
jnp
in
sahf
xchg
jg
sbb
and
xor
mov
leave
pop
test
jg
fisubrl
pop
pop
je
pop
repnz
test
js
mov
xlat
cmp
push
mov
cmp
jl
inc
out
std
adc
mov
mov
xchg
test
jge
mov
test
inc
cmp
pop
sub
push
fstps
push
lcall
dec
mov
aad
ds
dec
mov
test
ret
sbb
push
push
push
sbb
jecxz
xchg
xlat
popa
mov
insl
lods
fdivrl
ss
add
pop
fwait
xchg
inc
jo
gs
jae
dec
js
addr16
xchg
or
sub
inc
lret
test
lods
dec
cld
and
sahf
xlat
xor
dec
xor
sub
mov
xchg
aaa
test
xor
push
push
stos
repnz
imulb
xchg
push
pop
cmp
mov
xchg
mov
push
aaa
sbb
repnz
push
gs
rolb
iret
mov
cmpsl
cmpsl
inc
std
pop
shll
sub
add
rcrl
int3
pop
lods
pop
das
repnz
adc
xor
dec
add
push
cwtl
mov
gs
pop
mov
bound
and
test
or
or
sarl
nop
mov
inc
add
jb
dec
insb
ljmp
jge
popa
adc
es
pop
pushf
sub
lret
xor
sbb
or
stos
jo
in
mov
inc
xor
lods
iret
or
pop
sub
movsb
mov
cmc
inc
int
inc
in
xor
jns
icebp
ret
push
inc
or
add
mov
or
dec
pop
shl
jp
insb
mov
lea
aas
rcrb
daa
xlat
or
adc
cmp
cli
loopne
push
popa
and
pop
dec
push
xor
sahf
loope
adc
dec
int3
rcpps
push
int3
xor
mov
icebp
push
mov
data16
shlb
aad
adc
pop
inc
cmc
jge
addb
popf
leave
dec
mov
inc
and
inc
cmc
test
sbb
sbb
gs
insb
jo
lods
sbb
xchg
pop
call
sub
mov
push
inc
dec
loopne
in
jns
and
andl
ja
jle
mov
adc
int
rclb
xchg
xor
and
test
nop
dec
pop
lret
in
pusha
fdivp
push
pop
inc
leave
push
cmp
jge
sub
lahf
push
dec
pop
out
popa
mov
stos
out
jbe,pt
or
cltd
enter
mov
int3
popf
iret
dec
mov
data16
into
out
gs
hlt
dec
call
adc
aam
mov
daa
dec
addb
push
dec
in
xlat
negl
aam
jl
push
xor
lock
bound
dec
std
add
rorb
popf
xchg
jo
fmull
jmp
mov
rorb
lret
incb
mov
fisttps
add
sbb
insl
in
add
xor
popf
movsb
jmp
or
dec
mov
daa
mov
jo
and
pop
jmp
sbb
cmp
lret
out
cmp
test
out
gs
mov
icebp
out
sbb
test
scas
pop
inc
sti
repnz
outsb
xchg
shll
xchg
lret
dec
mov
ja
frstor
mov
jb
cmp
push
jle
pop
dec
sub
xchg
and
push
xor
ds
inc
mov
jae
pop
orl
sbb
dec
mov
cli
dec
add
jle
push
jnp
and
andb
push
push
push
fiadds
arpl
jae
dec
inc
dec
xchg
fsubrl
scas
adc
xchg
stc
mov
pusha
mov
pop
mov
push
and
xor
daa
jbe
sub
aam
rcr
int3
clc
dec
lret
mov
ss
cmp
mov
rorb
push
dec
xor
jae
dec
jnp
icebp
shl
mov
ret
in
sbb
adc
jne
lret
leave
iret
mov
rorb
std
pop
insl
mov
loop
enter
add
dec
push
jae
js
adc
push
subb
dec
outsb
test
push
xor
fldcw
xor
pushf
mov
movsb
into
dec
add
insl
push
fcoml
dec
xor
or
adc
insb
mov
jp
mov
sub
jecxz
fldl
add
les
dec
lds
sbb
sub
ucomiss
test
iret
and
dec
test
sti
out
ljmp
inc
add
jae
cld
sbb
jge
ljmp
or
push
mov
xchg
pop
out
cmc
andb
out
test
adc
je
imul
mov
iret
sti
and
mov
jl
cwtl
sbb
jbe
scas
jmp
dec
leave
push
jecxz
or
sbb
xchg
pop
lret
mov
mov
push
js
fadd
andl
test
imul
ljmp
scas
jmp
sbb
jb
pusha
lret
fcmove
add
fidivl
cwtl
jo
xchg
cmp
push
enter
leave
ja
cli
imul
lret
cwtl
test
test
add
push
pop
data16
icebp
inc
repz
dec
push
lods
jbe
test
mov
test
enter
xchg
movsl
push
push
cwtl
mov
stc
jl
les
xor
dec
or
es
cmp
adc
js
mov
add
aad
jns
dec
jnp
push
mov
mov
scas
add
mov
in
push
loope
inc
fs
fstpt
xchg
mov
popf
mov
ret
push
pop
cmp
mov
lea
cmp
shll
adc
add
lahf
repnz
mov
popf
aam
repz
sbb
push
ret
into
pop
ljmp
out
incl
aas
sub
cmpsl
mov
jecxz
js
subb
cmp
outsb
stos
jg
or
dec
xchg
imul
ljmp
mov
pop
mov
movsb
lret
incb
sbb
insb
push
or
push
outsb
adc
cwtl
jbe
xor
in
in
fcomi
cwtl
shlb
xlat
push
aad
mov
mov
sahf
jne
adc
push
or
ret
jae
test
adc
xchg
sub
sbb
mov
ljmp
mov
xchg
imul
sbb
cmp
xchg
mov
or
dec
sub
cmp
xor
mov
ret
mov
imulb
or
jge
push
dec
dec
jae
jo
mov
sub
jg
adc
jo
movsl
pop
xor
xchg
das
and
mov
ja
aas
mov
pop
int3
push
lds
loope
xchg
in
pop
test
js
jo
inc
inc
call
out
adc
mov
std
adc
or
imul
xchg
lds
inc
lret
mov
ficompl
push
mov
or
test
fistl
dec
es
out
or
cmp
lcall
sbb
out
push
fcompl
cmp
call
pop
mov
xor
test
fstpl
sbb
ret
mov
cmp
inc
lods
stos
adc
out
xchg
or
push
jecxz
hlt
leave
mov
or
ret
lock
push
ds
add
sahf
mov
leave
jmp
fwait
mov
int3
in
mov
adcl
pop
test
xchg
xchg
int
xor
lret
add
in
cmpsl
adcb
or
fld
ss
pop
dec
jo
adc
lret
out
adc
stos
notb
decl
dec
jecxz
sbbl
dec
cwtl
daa
dec
add
leave
cli
adc
clc
sub
dec
loope
int
aas
test
repz
in
push
adc
dec
xorb
ficomps
negb
lahf
frstor
xchg
mov
add
jle
ds
push
outsl
dec
scas
out
pop
adc
jmp
mov
repz
sbb
pop
add
outsl
adc
test
mov
mov
repnz
add
mov
loope
jns
fs
faddl
fnstenv
sub
lock
mov
inc
out
jge
popa
fisttpll
mov
or
jbe
inc
data16
inc
mov
das
cld
cmpsl
cli
and
cwtl
cmpb
pop
xchg
arpl
arpl
push
adc
bswap
stos
sub
or
daa
fabs
sahf
xlat
pop
and
stos
insl
flds
mov
loope
jge
sbb
cmpb
in
stos
stos
lock
xor
stos
mov
scas
fbstp
ds
out
xchg
pop
in
dec
xor
jae
lods
enter
xlat
sbb
cmpsb
add
dec
push
mov
ss
lods
out
push
imul
cmc
dec
jl
pop
in
mov
mov
repz
call
mov
fists
xchg
mov
inc
pop
sbb
out
mov
cmp
shl
cli
outsl
jl
lock
push
in
push
mov
scas
andl
sub
ret
shlb
inc
mov
or
xchg
cmpsl
mov
xor
mov
cmp
jg
xchg
fs
je
sbb
shrl
fiadds
icebp
cmpsl
aas
cmp
outsl
xor
adc
push
xchg
cmc
jo
push
cmc
pop
xor
xor
subl
dec
dec
test
jle
ljmp
xor
cmpsb
jno
mulps
sbb
int3
or
neg
out
roll
js
mov
pusha
shl
lock
pop
je
xor
pop
mov
mov
jg
mov
and
jl
pusha
push
data16
lret
adc
add
enter
lea
add
out
pop
cwtl
dec
iret
inc
je
pop
int3
rorl
xor
and
sbb
jge
pop
es
imul
inc
loope
mov
inc
jnp
add
add
das
or
aam
mov
repz
test
push
dec
mov
adc
sbb
jmp
sub
cld
dec
test
xor
hlt
inc
cmc
dec
fcoml
iret
loope
and
adc
add
in
mov
pop
in
shl
mov
out
fwait
jmp
pop
divl
mov
cli
les
mov
test
mov
pop
xor
call
fnstenv
in
mov
lret
push
shll
hlt
lods
inc
loopne
inc
adc
shlb
cmp
xor
push
xchg
push
bsr
push
arpl
fstpl
mov
stos
out
lcall
fwait
xchg
mov
out
push
outsl
popa
push
stos
fs
mov
pop
xchg
mov
subb
mov
mov
add
mov
cmpsb
aaa
cmovne
stc
out
std
sbb
mov
sbb
in
arpl
adc
cld
push
xlat
imul
icebp
cmc
xchg
cmp
dec
es
js
fstl
adc
and
repnz
jg
pop
or
push
ficoms
xchg
inc
mov
or
jg
push
add
jnp
movsl
mov
into
sub
sbb
shll
push
fsub
mov
add
pop
sahf
pop
shll
lea
test
add
push
out
pop
dec
fisttps
push
jg
mov
pop
add
lret
xlat
lret
sbb
scas
or
cmpb
jne
fdivl
add
and
cmp
mov
dec
pop
pop
shrl
repz
ret
ficoml
xor
mov
loopne
inc
stos
pop
jns
dec
cmp
jp
repz
dec
sbb
mov
sar
int
bound
out
adc
push
call
inc
addl
sub
test
insl
out
bound
inc
cmpsb
cmc
jecxz
mov
cmp
jecxz
adc
inc
mov
sub
or
cmpsl
popa
les
and
lcall
xchg
scas
jle
imul
mov
lea
or
test
jmp
or
lret
into
sub
push
popf
jae
jl
mov
js
leave
cmp
outsb
insl
xchg
cld
test
cwtl
add
xchg
lds
es
fadds
ja
pop
pusha
xchg
jnp,pn
mov
xchg
mov
ret
mov
iret
and
inc
sbb
and
dec
cltd
xchg
push
or
pop
popf
sbb
lods
movsb
adc
inc
push
jge
mov
or
push
cld
dec
xchg
pop
add
xchg
mov
stos
push
daa
dec
cmp
out
mov
ja
cmp
sub
jnp
mov
rorb
test
shrl
pushf
jo
pop
push
jo
movsl
and
or
pop
jae,pt
xchg
mov
xlat
lea
cmp
inc
aaa
adc
push
and
mov
xchg
mov
es
and
sahf
jno
xchg
mov
lcall
push
xchg
pushaw
aaa
dec
mov
mov
scas
adc
xlat
pop
adc
inc
xor
fnstenv
xchg
pop
cmp
jnp
and
notl
pop
sub
dec
sbb
das
adc
xlat
cs
nop
mov
or
notl
push
cmp
lea
ficoml
aaa
dec
add
jno
xchg
xlat
js
jbe
inc
mov
lds
xchg
iret
sbb
xchg
mov
add
mov
cmp
sbb
jb
ror
mov
hlt
mov
jno
ficoms
fists
fstps
out
outsb
fcoml
rorb
mov
add
xchg
xchg
cmp
lret
xchg
pushf
ljmp
loop
add
and
pop
roll
push
inc
mov
movsb
shlb
mov
cmp
or
push
ljmp
leave
push
lds
jg
in
fsubl
dec
push
xchg
rcll
mov
jno
lcall
or
stos
inc
mov
stos
add
fs
lcall
sbb
aad
mov
outsb
and
jbe
insl
sub
xchg
xchg
int3
shlb
sub
stc
int3
xchg
aas
cmp
fmull
cli
add
push
mov
enter
mov
in
xchg
jns
pop
add
in
daa
inc
push
ficoml
pop
mov
addr16
pop
adcl
sbb
fcoms
xchg
mov
lret
lea
outsb
xor
inc
mov
xchg
dec
rep
lea
movb
dec
jmp
inc
stos
push
xchg
xor
lods
mov
push
subb
jns
sub
lcall
ljmp
call
lret
pop
mov
sbbb
jbe
sbb
insb
or
adc
mov
push
xor
fstpt
es
es
jl
mov
jno
mov
or
es
es
in
addr16
adc
push
les
mov
push
gs
mov
std
stos
cmp
dec
jne
mov
bound
lret
rcrb
or
std
and
rcrb
xchg
popf
mov
mov
mov
addr16
js
mov
std
stc
fistl
push
push
out
sub
xchg
inc
je
jno
pop
rcl
outsb
adc
adcb
sarb
add
cmp
and
out
mov
sbb
mov
sub
test
fwait
jae
pop
mov
push
xchg
xchg
pop
xchg
aas
gs
sbb
daa
ror
imul
ja
sbb
cs
cmp
dec
movsl
dec
xchg
pushf
xchg
push
test
cmp
ret
inc
int3
cli
ja
jmp
sbb
sti
dec
ret
xchg
outsb
loope
shl
in
ljmp
lods
loope
test
leave
fldl
inc
push
movsl
xor
hlt
xor
out
rcl
outsl
jbe
loope
rolb
cmpsb
adc
dec
jp
adcb
xchg
or
leave
mov
jge
or
jnp
int
add
push
xchg
mov
scas
inc
popf
insb
inc
or
cli
sub
jb
sarb
enter
dec
sub
push
cltd
addr16
jecxz
iret
dec
dec
push
cmp
xchg
es
jle
jg
sarb
jnp
test
inc
mov
dec
xchg
mov
out
bound
stos
in
pop
xchg
pop
mov
je
clc
push
out
add
ret
push
das
push
lods
cmp
lds
xor
inc
push
mov
cmp
xchg
into
out
inc
adc
xchg
fwait
clc
cwtl
jg
addr16
pop
loope
outsb
fildl
ret
gs
and
and
pusha
popf
pop
mov
outsl
fidivl
adc
out
push
aam
mov
cwtl
add
cmp
sub
pop
repnz
pusha
push
ds
add
mov
mov
pop
fxtract
sub
sbb
out
jbe
shrl
mov
mov
mov
xchg
repnz
sbb
imul
dec
jl
gs
mov
mov
inc
rorl
jmp
add
push
push
adc
ljmp
adc
inc
arpl
cmp
and
insl
mov
or
test
sbb
loopne
sbbl
mov
push
fs
mov
enter
xchg
or
test
dec
lcall
pop
mov
dec
push
cmp
mov
cmc
pop
fisttpll
movsb
cmp
lds
enter
and
xor
jns
mov
lret
pushf
scas
stc
add
int3
mov
push
xchg
push
out
inc
xor
xchg
sbb
or
cs
jnp
in
cmovo
mov
push
push
movsl
ss
mov
cmp
mov
into
fstl
sub
sub
lret
adc
pop
in
xchg
ret
jne
not
inc
inc
push
rolb
jp
pop
jmp
dec
popf
adc
ret
pop
add
mov
gs
pop
inc
sbb
push
dec
xor
iret
add
add
movsl
jb
jmp
cld
fs
or
stc
test
lahf
loopne
rorb
xchg
inc
je
inc
inc
out
rolb
adc
outsb
sub
fisubl
fidivl
dec
in
mov
jno
in
pop
sti
fdivr
mov
out
in
adc
sub
popf
lods
aaa
fstps
xchg
or
push
adc
aaa
incb
jae
dec
and
push
cmpsb
mov
lahf
sub
test
mov
pop
pop
push
loop
es
insb
into
in
insl
or
sbb
add
push
mov
cmp
pop
push
aad
sub
andb
cmpsb
push
popf
cmc
mov
ss
lcall
nop
scas
dec
lcall
inc
xchg
add
xor
cmp
div
mov
ret
mov
sbb
push
sarb
xchg
out
pop
dec
jns
fdivs
sahf
push
mov
mov
add
into
stos
jbe
dec
inc
outsl
push
lret
ret
test
mov
jno
data16
leave
and
inc
out
mov
inc
jmp
sub
pop
cld
pop
enter
and
andb
out
fbld
insb
mov
addr16
sti
test
or
aaa
mov
mov
daa
jge
or
jb
jno
sbb
or
and
frstor
inc
sub
ret
xchg
xlat
inc
sub
shrl
data16
or
or
dec
icebp
sub
arpl
gs
test
out
sbbl
lea
push
mov
mov
cmc
push
lock
and
and
xchg
daa
mov
mov
mov
dec
fildll
inc
in
push
fdiv
cmp
mov
mov
and
sub
mov
dec
sahf
ja
xor
mov
jno
push
rcrl
mull
jb
addb
nop
in
mov
xor
int
fs
sbb
mov
and
hlt
dec
test
mov
add
leave
mov
jo
shll
es
ja
mov
mov
fmuls
xchg
sbb
jns
inc
sub
cmp
pop
addr16
pop
mov
and
lea
and
and
and
sahf
pop
lock
pop
mov
or
dec
cli
stc
mov
into
jns
ret
dec
pop
xor
clc
mov
mov
lods
mov
pop
pop
out
mov
jg
inc
imul
cmpsb
scas
mov
lahf
ret
insb
push
into
frstor
call
xor
mov
outsb
shlb
mov
sbb
xlat
mov
arpl
rcll
push
pop
test
bound
lea
jb
cld
or
test
or
mov
mov
fcom
push
dec
adc
mov
push
lods
push
pop
scas
mov
xchg
fwait
dec
addr16
popa
mov
inc
jne
jbe
mov
shr
mov
lods
loop
xor
add
das
cltd
mov
or
and
fcoms
fistpll
mov
jb
push
adc
fisubrl
in
pop
ja
xchg
orb
or
and
nop
aam
ds
rdtsc
sub
push
push
xor
bound
call
xchg
adc
ror
divl
daa
push
lret
xor
sbbb
bound
insl
fidivrl
aad
xchg
bound
jns
cmp
cmp
lds
sbb
adc
js
sbb
push
jne
rorl
and
loope
jle
in
cmc
fsubl
in
insl
lods
or
mov
iret
rcrl
mov
or
out
cmpl
outsl
dec
hlt
pop
mov
out
mov
popa
dec
adc
scas
fcoml
insb
mov
and
shrb
xchg
push
ret
in
in
add
dec
cmp
test
int
lods
mov
shl
sbb
cmp
nop
mov
dec
sti
jl
arpl
repz
aas
enter
mov
cmpl
pusha
mov
push
jmp
or
dec
xchg
insl
in
mov
pop
rcr
data16
mov
mov
inc
test
nop
sbb
andl
adc
and
push
mov
ror
lock
movsb
inc
repz
rcl
mov
inc
dec
mov
and
icebp
nop
xorb
hlt
mov
cwtl
mov
inc
test
fadds
xor
test
lcall
or
fimull
pusha
lcall
mov
pop
das
adc
mov
fst
mov
lds
xor
mov
test
in
sarb
in
js
add
lea
adc
xchg
out
xor
sarb
jo
ficompl
sub
mov
fdivrl
fnstenv
push
lds
xchg
fisttps
sbb
into
cmp
aaa
xchg
adc
bound
sub
out
popa
inc
push
fcmovnbe
and
or
lock
mov
sbb
ss
rorb
inc
gs
shrl
stos
sti
pop
popa
cmp
cltd
adc
xor
insb
dec
sahf
daa
add
shlb
push
pop
mov
bound
pop
cmp
jmp
adc
mov
mov
lds
int
mov
sbb
fs
stos
adc
or
es
sub
rcr
cli
or
ss
iret
jb
jbe
xchg
jecxz
aam
or
stc
mov
jno
cmp
push
or
jno
cmp
idivb
fwait
cs
mov
pop
mov
popf
outsl
pop
gs
cltd
sub
pop
bound
cmp
incl
stos
mov
out
ror
add
inc
lahf
cmp
pop
sbb
rorl
mov
and
jg
cmp
outsb
inc
repz
shll
enter
ja
sbb
imul
test
sub
push
cmc
leave
sub
inc
cltd
lods
add
shrb
push
mov
out
ret
ja
loopne,pn
sub
lret
icebp
mov
lods
ljmp
stos
stos
xor
push
icebp
enter
shr
adc
sbb
jbe
add
scas
setl
stc
jne
mov
and
lea
loopne
and
and
sub
lods
jb
pop
and
pop
xchg
mov
pushf
sti
adc
inc
sbb
mov
or
xor
sub
loope
ficoml
push
dec
mov
lret
or
loope
dec
or
sarl
in
push
lds
aam
fs
xor
mov
inc
sub
xchg
sbb
add
cli
lret
in
jp
aam
and
insl
sahf
cmp
mov
add
movsl
fsubr
scas
fadd
push
push
insb
mov
mov
js
and
hlt
sarb
aaa
xchg
adc
and
daa
adc
or
inc
leave
int
lock
out
mov
mov
stc
in
fsubl
dec
repnz
insl
shl
jmp
add
stc
sub
adc
fcomps
lahf
imul
add
pop
into
dec
shll
scas
jbe
das
xchg
cli
stc
lock
cmc
popf
out
sbb
sarl
lcall
es
scas
je
xchg
push
loop
cmp
mov
into
push
pop
mov
push
dec
inc
mov
and
sti
int3
jl
adc
das
mov
push
jns
sbb
loope
and
es
int3
in
fwait
mov
cmpsl
mov
fildl
or
sarb
mov
pop
add
lods
jl
repz
pop
sbb
in
and
jnp
sarb
and
std
sbb
inc
testl
pop
adc
mov
es
js
xor
cwtl
jbe
rcr
xchg
ljmp
fsubrp
dec
test
ficomps
inc
decl
lea
cmp
fisubrl
sbb
mov
imul
call
sbb
jno
cli
push
mov
cmp
mov
xor
dec
and
in
cmc
dec
mov
adcl
fstpl
xchg
shr
orl
sub
movsl
stos
xchg
loope
adc
inc
adc
das
jecxz
xor
sbb
inc
repz
popf
fwait
cmp
mov
insb
or
loop
decb
fucomip
repz
push
call
enter
mov
mov
push
mov
hlt
mov
pushf
loopne
or
sti
call
mov
sub
jmp
stos
unpcklps
cmc
sub
test
fstpl
loop
jns
xor
adc
xor
mov
push
hlt
cmp
and
xchg
cwtl
scas
mov
outsb
jmp
mov
orb
ficompl
cli
pop
rcl
pop
jnp
pop
je
int3
fbld
scas
inc
cltd
inc
bound
dec
test
dec
in
mov
add
or
cmp
sub
and
jg
pop
jo
insb
scas
jge
in
pop
jge
iret
mov
mov
add
adc
ret
andb
adc
mov
xor
ja
cmp
sbb
xor
mov
pop
insb
adc
data16
in
pop
inc
jno
dec
push
jnp
xor
cmp
out
repz
loop
gs
add
jmp
mov
inc
stos
push
std
or
xor
test
adc
xchg
sub
jo
mov
insb
in
mov
sbb
fsubl
shlb
mov
and
add
and
sbb
cmp
xor
subb
js
test
push
jge
or
xor
mov
add
push
push
mov
repz
xor
addb
les
pop
xor
dec
jno
pop
outsl
scas
and
jmp
or
fnstsw
call
cmp
mov
inc
xor
dec
mov
data16
mov
scas
cmp
inc
sub
adc
xor
xchg
fcmovnu
add
push
add
pushf
sbb
adc
xchg
pop
js
jecxz
push
mov
icebp
jge
adc
lock
cmp
and
clc
or
insb
andl
enter
cmp
hlt
mov
sahf
inc
ret
arpl
mov
pop
pop
test
decl
xlat
xchg
dec
mov
fnstsw
aad
das
cwtl
sbb
inc
repz
movsb
cld
fwait
adc
mov
out
xchg
fnsave
sbb
pop
mov
pushf
testl
flds
ret
jns
push
pop
or
fstl
std
xor
jp
neg
jo
inc
cltd
or
dec
mov
mov
jl
push
arpl
cmp
lret
out
movsb
xchg
cmp
push
test
leave
adc
cwtl
sub
mov
bound
sbb
adc
xchg
or
cmp
push
xchg
adc
imul
dec
sub
push
imul
test
add
pop
out
dec
inc
sub
inc
out
pop
popa
lods
xchg
mov
push
rclb
jl
push
std
in
not
lcall
hlt
fcomi
adc
fistpl
xchg
mov
jbe
insb
stos
filds
cmp
lds
pusha
push
or
daa
lret
xlat
sub
ss
cmp
jbe
mulb
dec
add
sarl
pop
inc
pop
daa
icebp
pop
or
icebp
jmp
pop
je
mov
idivl
insl
and
in
out
imul
xor
adc
xchg
pop
imul
movsb
ret
jmp
jb
mov
dec
data16
jno
jecxz
lods
xor
cli
leave
mov
add
mov
stc
jecxz
jmp
test
cmpsb
scas
pop
ds
cwtl
sub
inc
mov
cmp
scas
mov
das
and
mov
ja
jnp
mov
lods
or
popa
lds
mov
adc
sti
call
loopne
mov
jge
push
ss
lcall
xchg
jae
mov
and
jg
movsb
ret
pop
in
lods
out
push
popa
loopne
sahf
cmpsb
lahf
inc
xchg
pop
out
add
mov
jae
add
jno
test
or
das
popa
or
scas
mov
sbb
into
push
mov
push
into
arpl
dec
dec
dec
push
add
ret
insb
lods
orb
int
popf
push
leave
mov
jno
sbb
data16
push
or
adc
lret
and
fs
mov
fidivrs
adcl
cmp
cs
add
insl
pusha
mov
inc
jno
pop
sbb
test
mov
inc
loopne
or
inc
jae
in
nop
mov
mov
xchg
arpl
aad
mov
out
in
pop
mov
sub
mov
sub
lock
test
in
xchg
mov
mov
adc
sahf
scas
lret
and
test
xor
shr
xchg
lock
cmp
int
jb
sub
lock
fdivrs
scas
lods
add
lahf
clc
inc
shrb
in
icebp
cmpsl
iret
xor
inc
mov
icebp
int3
or
mov
push
dec
mov
scas
dec
add
cmp
push
push
mov
dec
or
xchg
jns
dec
mov
shll
jge
jle
es
lods
dec
push
enter
nop
imul
mov
xchg
cmp
rcl
add
stos
shrb
cmpsb
xlat
arpl
pop
pop
mov
pop
lcall
cmp
in
dec
loopne
mov
popa
dec
inc
rclb
out
ret
sbb
mov
pop
lcall
and
out
or
rcr
mov
ja
inc
jo
jmp
popa
dec
int3
pop
push
int
in
push
push
pop
lret
shll
jne
repz
test
dec
shll
rclb
dec
cmp
addr16
mov
mov
pop
mov
sbb
les
je
mov
and
addr16
xchg
call
nop
or
outsl
in
inc
adc
pop
add
jmp
mov
aaa
jmp
push
sub
sbb
std
out
inc
xchg
cmp
ss
and
test
enter
das
cmc
xlat
hlt
sbb
iret
adc
out
cmp
inc
insl
clc
dec
lret
shlb
out
faddp
mov
fcompl
je
cltd
test
mov
jg
mov
add
outsb
xor
jle
out
test
push
test
adc
push
push
mov
loop
imul
push
pop
lods
xor
or
lds
sub
mov
out
pop
sub
xchg
lret
jge
in
cmp
out
jecxz
xchg
repz
dec
jmp
das
test
mov
push
enterw
pop
bound
insl
rolw
xor
fbld
test
inc
in
in
cmpsb
mov
mov
push
sub
mov
popa
push
mov
pop
adc
or
je
sub
mov
jno
lcall
dec
pop
daa
fdivs
push
insb
jl
xor
mov
mov
jae
sbb
xor
loope
out
sbb
clc
pop
jns
or
sbb
rcr
add
test
xchg
dec
lahf
xchg
loopne
rolb
mov
fcmovb
testl
sbb
cld
fidivrs
xchg
sbbl
pop
lock
fildll
out
xor
loop
int
out
rolb
pop
xchg
push
xor
je
mov
sbb
sahf
mov
pop
int3
sub
xchg
inc
lds
loope
lret
push
loop
add
mov
hlt
and
jno
dec
fmulp
std
dec
mov
sahf
sub
adc
cld
jnp
iret
js
xchg
adc
loopne
out
push
test
or
filds
jge
push
xor
adc
out
dec
rcr
mov
add
sub
adc
dec
push
aaa
or
mov
jl
movsb
or
push
stos
inc
jp
out
push
dec
loop
iret
fs
out
subl
sub
inc
jb
aas
lret
movb
push
mov
and
and
jnp
mov
shlb
jle
dec
jns
int
mov
inc
mov
mov
scas
xor
je
aad
lods
sub
mov
rcrb
and
sub
jecxz
out
pop
sbb
cwtl
movsl
out
ror
pop
scas
rol
outsl
jl
lock
frstor
data16
or
jae
push
inc
or
rorl
push
cmp
adc
repnz
pop
jns
jno
xor
jbe
iret
test
jbe
fwait
mov
adc
mov
inc
jp
sub
pop
and
rcr
aaa
and
pop
call
out
mov
scas
inc
in
into
lahf
mov
scas
sub
sahf
or
cmpsb
testl
outsl
dec
enter
inc
pop
sub
or
mov
movsb
jp
push
sub
push
xor
add
leave
push
sub
jnp
mov
jmp
push
lds
and
mov
mov
jnp
out
cs
cmp
mov
rcll
inc
out
dec
or
dec
test
xor
inc
faddl
inc
pop
or
and
mov
add
mov
dec
mov
xchg
jno
iret
jb
adc
mov
and
shlb
imul
cld
add
xor
inc
xor
jl
push
cs
scas
in
mov
cmp
adc
add
or
mov
shr
pop
imul
pop
jecxz
js
jbe
and
or
add
push
frstor
sbb
pop
repnz
pop
push
xor
imul
mov
ds
push
or
gs
cmpsl
insl
add
ljmp
xchg
push
pop
or
add
pop
mov
adc
and
out
movsl
lods
decb
stos
xor
jg
fwait
mov
mov
fdivr
shrb
jp
dec
rcrl
xor
mov
test
das
outsl
push
nop
lea
xor
xchg
inc
mov
popa
daa
mov
pop
add
mov
popa
xchg
clc
cmc
ret
add
in
mov
inc
rorl
stos
cmpsb
sbb
mov
je
mov
insl
rcr
push
add
jbe
mov
cmp
xchg
insb
mov
xor
mov
and
lock
lret
fwait
inc
cli
mov
pop
dec
movsb
shlb
xor
in
push
pop
cltd
int
inc
push
movsb
fisubrs
scas
ss
ret
fxch
ds
roll
enter
and
stc
addl
cmpsl
and
hlt
out
in
mov
or
les
fisttpl
js
add
dec
mov
xchg
and
aad
shr
fsts
in
fisttps
xchg
stos
cmp
jns
sbb
bound
xchg
lock
call
arpl
sbb
dec
mov
pop
dec
dec
pop
fstps
xchg
dec
fmuls
shlb
mov
push
or
movsl
fsubs
loope
daa
loop
xor
or
cmp
dec
insb
into
dec
inc
xor
stc
dec
or
pop
cmpsb
stos
xchg
add
add
fnstenv
jg
jns
cltd
sbb
mov
lcall
fisttpll
xlat
cmpsl
push
sarb
add
in
in
inc
in
xchg
jbe
xor
lea
inc
cwtl
fisttps
mov
and
mov
push
shlb
movb
lahf
xor
cmpsl
sbb
mov
std
xchg
jge
cmp
jg
jne
popf
std
mov
sub
fwait
mov
mov
bound
js
ja
lret
sub
push
xor
icebp
aam
pop
ret
push
pop
or
dec
arpl
cld
or
test
xchg
mov
adc
and
bound
int3
jle
js
repz
fidivrs
cmc
jb
add
dec
pop
rcll
push
enter
adc
push
out
ljmp
push
sahf
imul
xchg
test
mov
or
stos
pop
push
fidivs
stc
mov
and
cmp
adc
out
jmp
jle
fimull
repz
push
cmp
adc
xlat
mov
xor
mov
sbb
pop
or
jb
test
mov
in
call
add
mov
ret
add
cmp
leave
push
sub
sbb
es
std
push
lahf
out
in
lods
fmuls
cmpb
cmp
xchg
push
push
xlat
mov
sub
or
out
xchg
adc
subl
or
sub
sub
scas
out
or
movd
stos
adc
arpl
cmp
or
sbb
xchg
lret
test
inc
out
push
notl
push
adc
and
xorl
xor
push
ss
pop
fsubl
idivb
mov
sbb
fdivs
comiss
add
pop
or
mov
out
mov
push
pop
mov
bound
or
test
pop
dec
aaa
mov
mov
das
ret
lock
inc
xor
dec
lds
notl
in
mov
dec
xor
leave
in
pop
mov
adc
or
scas
fisubrl
xchg
inc
ret
ljmp
mov
push
push
jb
xor
inc
fwait
int
mov
push
in
pusha
push
test
cld
cmpsb
icebp
push
cltd
das
hlt
stc
adc
fmull
adc
jne
insl
in
jbe
mov
in
push
enter
test
shll
dec
mov
jae
in
sbb
dec
inc
add
dec
aaa
mov
ret
leave
fmull
mov
jae
push
push
call
mov
sbb
adc
or
add
mov
std
jnp
sub
jae
sti
adc
adc
orl
mov
cmp
nop
jmp
incl
xchg
xchg
iret
ficoml
xchg
mov
shrl
scas
xor
mov
mov
movsb
test
imul
mov
clc
jb
iret
test
lods
loope
push
leave
push
dec
ss
adc
movb
fisttpll
xchg
mov
jg
pcmpeqd
pushl
ret
cmp
jne
rep
and
push
pop
cmp
outsl
dec
mov
add
add
iret
cltd
and
mov
imull
inc
clc
in
fs
test
or
enter
jne
xlat
call
dec
movb
mov
sbb
lea
ret
repz
mov
jne
add
add
shrb
mov
jnp
pushf
mov
push
xchg
push
sub
xchg
call
repz
ret
inc
push
adc
sahf
cmpsl
cmp
adc
pop
xor
test
dec
mov
stos
cmp
or
lahf
xacquire
jl
call
sbbl
dec
sbb
ja
in
push
mov
stos
add
push
jge
jns
scas
fwait
loopne
add
aad
inc
cmp
mov
andl
mov
mov
push
movl
lahf
jl
les
pop
insb
jp
loopne
mov
sbb
mov
cli
dec
cli
shrl
jmp
lods
imul
fs
sbb
push
jmp
inc
adc
pop
pop
repnz
repnz
scas
cmp
dec
outsl
push
jo
lret
fldt
and
loopne
and
pop
inc
out
xor
addr16
es
scas
or
popa
mov
mov
hlt
jl
fdivs
sub
outsb
and
jbe
shlb
lods
xorb
fists
mov
jg,pn
push
jecxz
outsb
daa
fcomip
pop
dec
arpl
ret
repnz
jp
pop
loope
sbb
mov
mov
roll
out
scas
xor
xchg
jno
pushf
jmp
out
xor
mov
dec
ret
cmp
in
std
pop
ss
loopne
push
and
or
loop
adc
add
pop
pop
rclb
mov
cld
std
fldl
fcmove
cmc
ret
mov
dec
test
pop
stos
push
repz
je
xchg
movsl
mov
mov
sub
testl
je
ljmp
pop
ret
mov
fiaddl
or
pop
fistps
es
inc
rcrb
lea
lret
test
pop
imul
add
js
sub
neg
inc
jge
jns
into
fs
enter
ret
movhps
sbb
mov
loope
loope
add
nop
ret
or
jecxz
daa
les
test
test
das
jecxz
repnz
jno
js
pop
shr
repnz
fnsave
lret
push
xchg
outsb
dec
add
out
xchg
movsb
rcrw
inc
mov
dec
repnz
cmp
xchg
push
gs
dec
cmp
add
in
adc
push
cmp
mov
xchg
icebp
push
pop
xchg
add
aad
or
or
lret
pushf
rcl
rcrb
iret
jl
xor
test
mov
mov
test
lock
mov
mov
sub
mov
mov
jp
sbb
imul
arpl
sub
sub
pop
mov
push
mov
and
mov
cmpsb
xchg
add
or
int3
mov
pop
not
xchg
pop
insl
cmp
outsb
xlat
test
sahf
fimuls
gs
ds
repz
mov
jae
mov
test
test
out
enter
inc
dec
sbb
push
add
mov
clc
mov
sbb
ja
leave
aas
mov
std
or
or
loop
je
lahf
push
stos
jmp
fcmove
ror
inc
negl
fstp
add
bound
fisttps
out
dec
mov
scas
aaa
and
mov
aam
mov
xchg
sbb
cmpsl
cmp
dec
insb
mov
pop
jb
mov
mov
add
in
sub
mov
mov
mov
cmp
lea
or
dec
fs
lcall
push
add
dec
push
ret
jg
call
dec
ljmp
hlt
pop
inc
nop
mov
pop
and
sbb
push
lock
push
cmpsl
fistl
inc
out
ss
ret
loop
or
call
sub
femms
scas
jmp
pop
sbb
jl
icebp
jl
xor
lahf
push
and
sbb
mov
mov
cli
pop
lea
int3
data16
lock
xchg
ret
fldt
mov
jl
pop
pop
hlt
xor
filds
and
and
icebp
mov
sbb
jmp
jb
push
out
xchg
add
test
inc
sub
jecxz
fstp
push
inc
lods
jns
pushf
adc
popa
and
aaa
cmp
lcall
or
nop
popa
push
stc
hlt
dec
xchg
icebp
fstl
mov
xor
add
mov
cltd
sbb
sbb
pop
sti
mov
test
fmul
ljmp
iret
jle
aas
xor
inc
pop
je
shr
sbb
mov
out
dec
loope
add
addr16
xchg
mov
adc
rolb
aad
shrl
es
pop
push
add
bnd
into
jne
cmpb
mov
mov
push
lods
icebp
adc
rclb
cmpsb
scas
adc
mov
lods
lds
aad
mov
or
sub
sub
inc
pop
push
jmp
xor
iret
inc
pusha
mov
sbb
xchg
loope
xchg
jge
jp
xor
int
jmp
mov
add
fistpl
adc
add
push
and
mov
aaa
pop
inc
sub
cli
adc
mov
push
inc
in
push
add
insl
mov
inc
ffreep
adc
jbe
loop
int3
nop
push
mov
dec
mov
sbb
pushf
insb
pop
xor
inc
mov
pop
xor
jbe
push
iret
sbb
out
cmpsl
rorl
mov
test
cltd
mov
sub
jp
xchg
xchg
mov
dec
jl
inc
add
cmpl
xchg
loopne
xchg
push
subl
leave
dec
mov
mov
sbb
push
or
inc
stc
repnz
subb
mov
and
or
mov
or
aam
scas
fisubl
mov
je
popf
leavew
xchg
xor
scas
icebp
add
jo
ficomps
arpl
add
repnz
pop
ror
aaa
aaa
mov
loopne
sub
xlat
rcl
jmp
shrb
int3
or
scas
add
or
cltd
stos
mov
fistps
lret
add
into
in
push
in
insl
mov
stos
xchg
mov
push
cmp
js
jg
cmp
jb
cmp
jle
and
xchg
xchg
sbb
inc
sarb
jle
cmp
push
jp
fs
pop
leave
das
xor
dec
loopne
mov
pushf
mov
lock
jmp
sub
lret
push
les
xor
repnz
cmp
cmp
loope
mov
add
sbb
xchg
lret
pop
imul
mov
mov
mov
nop
iret
shll
or
jl
ss
out
mov
mov
lcall
iret
pop
nop
cmpl
mov
add
fnsave
out
fidivl
push
movsl
fisubl
movsb
sub
inc
les
cwtl
and
sti
xchg
push
lock
sbbl
scas
in
sar
lods
lods
in
pusha
jp
dec
jecxz
mov
in
mov
and
jle
adc
bound
bound
outsb
dec
push
out
dec
adc
shufps
mov
push
and
es
decl
mov
sbb
mov
add
add
ja
push
pop
ret
insb
iret
test
mov
or
push
popf
pop
jmp
inc
sub
and
outsb
popa
loope
enter
pop
add
push
cwtd
cmp
pop
es
jge
fld
mov
xchg
outsb
sbb
adc
or
mov
fcoml
adc
inc
lcall
adc
mov
popf
das
add
add
push
aaa
fnsave
stos
aad
dec
lret
adc
arpl
jne
lods
loop
push
andl
cmp
sub
aas
jae
das
and
adc
sbb
pop
xlat
test
jo
addr16
repz
adc
ficoml
or
lret
mov
pusha
mov
lahf
imul
test
js
pop
mov
lahf
movsb
outsl
or
mov
into
mov
data16
pop
ret
mov
das
xchg
aam
mov
roll
aam
push
cmp
mov
and
mov
cmp
movsb
xor
popa
adc
cmp
call
divb
movl
mov
mov
mov
addr16
scas
adc
mov
test
aaa
jecxz
enter
mov
mov
jl
xchg
out
test
dec
cld
mov
rclb
lods
insl
je
push
enter
jecxz
add
jle
jae
scas
jno
clc
xchg
shrb
or
and
fcoms
and
xor
xchg
xchg
xor
and
fldcw
jle
sbb
lret
test
addr16
int
cmp
adc
mov
sub
dec
in
push
adc
sahf
mov
push
add
scas
xlat
cli
test
mov
mov
rolb
int
std
mov
cld
adc
mov
or
cltd
add
xchg
mov
jnp
cmpsl
loop
pop
out
mov
scas
lds
mov
push
lods
push
addr16
sub
adc
adc
in
sbb
push
jnp
cmp
lret
outsb
sbb
int3
movsl
clc
cmp
loopne
fwait
cli
or
iret
xchg
popf
add
das
sbb
mov
jbe
inc
add
cld
sub
and
jo
xchg
orb
mov
je
jg
inc
or
cld
fmuls
xor
jne
push
sub
xchg
popa
test
jmp
xchg
push
mov
xchg
add
add
dec
xchg
sbb
mov
fnstenv
jecxz
pop
or
roll
lds
out
adc
sbbb
sbb
test
mov
cltd
pop
adc
pop
cmp
jl
mov
test
pop
sbb
add
andl
lods
cltd
ret
pop
movsb
mov
lock
bound
inc
sub
out
xchg
jmp
int
jecxz
pop
aad
into
add
add
add
test
mov
cmp
adc
cli
pop
das
fists
xchg
jle
cmpsb
sub
ds
cmp
jge
aad
or
imul
sbb
daa
jb
shlb
sbb
inc
cld
jecxz
fnstenv
mov
aam
mov
sbb
cs
push
push
and
pop
out
adc
lcall
pop
sarl
cmp
add
mov
dec
arpl
sub
mov
mov
fildll
ficoms
lret
push
dec
and
mov
xchg
mov
mov
cwtl
rorb
push
sbb
arpl
bound
jl
and
orb
je
mov
mov
pop
addr16
adcb
xor
mov
imul
adc
add
call
stos
loop
cmp
inc
in
ds
aam
inc
subb
mov
dec
or
imul
mov
dec
mov
outsb
clc
insb
push
inc
xchg
adc
mov
mov
repnz
loop
ja
iret
in
outsl
outsb
stos
pusha
cld
xchg
and
jnp
pop
mov
push
nop
inc
xor
ds
pop
dec
mov
sbbb
mov
jb
in
dec
std
lock
sub
in
test
arpl
aam
inc
xchg
xchg
andl
dec
ss
adc
in
mov
push
sub
mov
xor
push
mov
push
int
outsl
and
test
fisubrs
inc
mov
std
cmpsb
out
cmc
or
push
pop
mov
mov
xor
negl
add
rcll
test
add
subb
faddl
sub
mov
push
sbb
pushf
or
pusha
jae
scas
iret
repnz
mov
negb
stos
jp
xchg
sbb
test
and
pop
sti
mov
and
addr16
or
stc
lock
add
rorl
in
mov
rclb
push
pop
scas
push
ret
out
pop
mov
add
dec
mov
pushf
dec
jge
pop
fwait
gs
ds
movb
cltd
icebp
cmpsl
daa
shlb
ss
xor
dec
cwtl
dec
ja
and
lods
inc
push
and
orb
aam
je
insb
add
xchg
stos
fwait
xchg
jmp
jno
insl
inc
aaa
and
stc
enter
aad
mov
insl
pop
xchg
enter
xor
dec
mov
pop
ja
cltd
outsl
push
push
jb
mov
repnz
and
mov
adc
test
mov
inc
and
push
pop
popf
xor
pop
pushf
dec
jno
loop
cmp
iret
test
mov
fnstcw
es
inc
jae
ja
arpl
lahf
cmpsb
cwtl
adc
shlb
adc
push
mov
jl
mov
inc
jo
cmp
or
ret
hlt
jnp
cwtl
insb
ss
mov
inc
stc
cmp
lds
bound
stos
cli
lods
ret
and
arpl
pop
push
jge
dec
imul
insl
adc
iret
jge
pop
mov
es
add
scas
out
mov
xor
and
jbe
jb
pop
mov
clc
lods
xchg
inc
cwtl
repnz
sub
rcrb
adc
mov
in
test
inc
mov
xchg
push
add
rorb
fs
jg
ja
fst
leave
jno
push
cmpsl
dec
test
or
addr16
lahf
cmpl
mov
adc
lret
xchg
mull
xchg
cld
mov
mov
push
jge
and
xchg
or
outsl
imul
mov
imul
test
negl
dec
mov
js
mov
movsb
leave
out
or
mov
movsb
adc
cli
ret
cmp
lcall
mov
dec
insl
ret
test
mov
ljmp
iret
pushf
data16
push
testb
scas
outsb
sub
out
mov
mov
lcall
push
add
and
aam
bound
hlt
pop
pop
jg
cmp
add
shr
stos
jae
xlat
mov
xor
adc
xchg
mov
lods
bound
xchg
pop
int
fdivl
inc
fstl
sub
mov
into
jnp
pop
add
cmp
dec
sub
ja
mov
aam
and
insl
mov
inc
insl
mov
rcrb
adc
loopne
and
repz
repnz
inc
stc
into
jnp
mov
lahf
orb
mov
add
leave
rcrl
repz
inc
lea
or
in
int
in
push
rcl
ret
inc
or
fs
cmp
add
les
call
push
jp
and
xor
andl
jne
inc
inc
in
std
fsub
mov
xlat
movsb
mov
aam
fidivrs
scas
aam
or
stc
pop
out
test
dec
ja
add
ljmp
and
mov
out
insl
fmul
pop
in
pop
pusha
shlb
or
addr16
mov
cmp
pusha
int
xor
lret
jge
aaa
in
xchg
sub
cmp
or
outsb
adc
cld
inc
push
sub
jb
sbb
jecxz
pop
pusha
jae
sahf
mov
mov
jb
aaa
ret
pop
jecxz
gs
andb
jbe
add
dec
inc
jo
sub
dec
out
movsb
scas
dec
jns
mov
dec
stos
lods
push
cli
scas
pop
in
aad
add
and
add
std
fidivs
addr16
scas
cmpl
aas
lcall
xor
cmc
push
adc
outsb
lea
ror
fcmovnb
dec
pop
rorl
test
popf
lcall
inc
addl
mov
pop
test
push
scas
xchg
jns
xor
lea
stc
or
jne,pt
pop
mov
fistl
out
or
loopne
mov
out
rcll
mov
sub
push
movsb
jle
xor
push
popa
pop
sahf
jae
cld
bound
or
pop
fstpt
mov
xchg
push
lods
mov
cmp
push
dec
lahf
fcmovnbe
dec
jg
mov
mov
clc
loope
outsb
push
stos
mov
jge
and
imulb
mov
pop
ds
movsl
cmp
popf
mov
cmp
adc
cmpsl
movsb
je
sti
push
sub
cmp
jnp
fisttpll
gs
pushf
dec
dec
or
pop
jo
dec
mov
jb
sbb
sub
leave
sub
add
cld
inc
arpl
xlat
rcl
fisttpll
adc
adc
cmp
lcall
enter
cmp
pop
pushf
jns
and
inc
inc
cmp
adc
or
sti
add
xlat
mov
cltd
jmp
xor
cmp
lret
and
cmpsl
lgdtl
out
adc
ljmp
inc
cltd
push
mov
jae
mov
cs
movsl
daa
push
shl
cmc
sahf
jmp
cmp
xchg
push
fwait
and
aam
pop
pop
inc
ds
into
mov
and
add
sub
hlt
popf
enter
jg
repz
sbb
cmp
jo
outsl
repnz
jmp
setno
mull
jge
in
mov
popf
js
mov
jmp
mov
pop
scas
or
jmp
int
xchg
jno
loopne
cmpsb
or
es
test
or
add
mov
push
notb
jecxz
in
je
cmpsb
mov
mov
call
push
jp
dec
pop
es
in
cmpsb
mov
pop
and
jge
sbb
adc
movsb
pop
inc
inc
mov
sub
pop
adc
insb
and
mov
xchg
testb
je
out
xchg
sbb
xor
decl
loop
mov
jmp
dec
pushf
decb
test
push
xchg
lods
push
inc
rcrb
shrl
rorb
sub
inc
stc
adc
idiv
inc
fldln2
xor
xchg
mov
stos
and
cmp
lock
js
enter
dec
dec
mov
sbb
pop
adc
in
cmp
push
fwait
add
loop
repz
pop
push
mov
mov
jl
inc
in
lock
pop
icebp
mov
insb
and
pop
mov
jecxz,pn
cmc
add
mov
push
fmul
bound
dec
fstpt
ret
lods
test
and
in
mov
xchg
xor
scas
pusha
mov
push
xlat
sbb
xor
movsl
inc
mov
mov
stc
test
xchg
mov
mov
mov
ret
mov
cmp
out
mov
xor
jae
mov
xchg
cmp
and
jno
push
push
dec
pusha
jp
lods
imul
mov
lret
clc
add
mov
out
add
out
mov
stos
iret
rol
mov
dec
lret
loop
insl
cwtl
ljmp
inc
sub
and
nop
popa
daa
or
cmc
push
push
dec
cs
cmpsl
cmpsb
dec
imul
jp
and
or
jmp
pop
fdivs
fisubrl
imul
xchg
pop
repnz
mov
adc
jns
and
daa
mov
dec
dec
and
dec
lods
punpckhbw
cmp
rcr
jnp
mov
xchg
ss
lret
pusha
inc
jne
and
and
cmp
std
leave
xchg
fadd
outsb
iret
mov
xor
cmp
adc
push
fisttpl
sub
call
dec
mov
ret
or
retw
daa
popa
add
mov
push
push
xor
loope
ret
pop
in
in
shl
lds
in
cmpb
test
popf
or
in
cmpsb
mov
ja
ss
dec
xor
out
mov
mov
adc
add
mov
inc
inc
inc
das
loopne
aas
jl
push
inc
or
pushf
mov
jmp
jno
lret
loopne
and
mov
pop
mov
rcrl
sbb
jmp
test
dec
int3
pop
out
lahf
repnz
or
aas
aaa
mov
sub
lods
cli
cltd
inc
faddl
adc
xor
jb
adc
jb
test
fsubs
out
jnp
mov
mov
je
or
packssdw
pop
xchg
subl
dec
movl
jg
add
es
insb
mov
movsl
push
das
inc
pop
in
push
les
push
xor
in
scas
add
std
outsl
adc
pop
enter
mov
jbe
xor
adc
jl
pop
adc
into
clc
pop
xor
xchg
and
in
dec
xor
mov
inc
ljmp
pop
mov
divb
fwait
dec
cmpb
test
out
and
inc
fistpll
fidivrl
mov
inc
lds
shlb
pop
jae
sub
out
cmp
stos
aad
mov
roll
jns
or
cwtl
mov
aaa
fs
sbb
daa
out
mov
push
jnp
mov
xchg
mov
pop
push
ret
aaa
pushf
int
sbb
dec
in
cmp
aad
or
adc
js
mov
aad
xchg
jbe
xor
cmc
xchg
int
hlt
mov
mov
lods
dec
ret
sahf
adc
mov
popa
cltd
cmc
pop
scas
jno
insl
lret
sbb
out
out
insb
mov
je
and
lock
aas
cli
and
in
jb
test
push
or
mov
cwtl
jnp
mov
out
ljmp
mov
in
sub
xorb
cmp
dec
les
pop
cld
int3
fstpt
clc
cmpb
mov
or
movsl
enter
jns
aaa
xlat
mov
mov
inc
andl
shrb
or
mov
cmpsl
ljmp
cmp
shll
cmpb
cmpsl
mov
sahf
lea
cmp
je
clc
pop
outsb
inc
jae
in
mov
das
aas
insb
fwait
and
in
mov
loop
je
adc
xchg
jg
add
lds
lods
inc
insb
inc
mov
call
cmp
mov
jge
cmp
dec
push
jns
sub
mov
test
push
lret
add
sar
lock
mov
loop
leave
iret
jmp
mov
addb
mov
mov
arpl
pop
movsl
cmpsl
test
fs
mov
enter
imul
rorl
sub
fstpt
cmpsl
mov
xor
ljmp
out
push
sub
sarl
push
dec
mov
jl
nop
fsubl
mov
mov
lret
mov
and
and
cmpsb
push
stc
rcrl
cmp
addr16
push
jo
mov
jno
jg
rol
dec
adc
dec
insb
adc
dec
pop
xorb
add
add
js
xchg
imul
imul
add
mov
call
xor
scas
pop
imul
pop
push
shrl
mov
xchg
in
enter
sti
sbb
mov
xor
mov
mov
jecxz
es
test
push
jecxz
sbb
push
or
imul
adc
out
push
es
into
aas
add
mov
std
push
je
push
test
adc
fnstcw
mov
push
sub
std
mov
lahf
mov
cli
clc
fnstenv
xchg
mov
or
fsubrs
std
push
cmpsl
add
vmovapd
js
test
lods
leave
adc
jl
shrl
sub
add
sbbl
popa
xor
mov
xor
sub
push
xor
icebp
sub
adc
xor
jns
dec
jns
movsl
lret
pop
movsl
mov
push
xor
out
cmp
in
call
popl
mov
dec
jb
js
xchg
inc
popf
jmp
push
and
popf
mov
jg
inc
lds
call
pop
int3
mov
mov
mull
out
dec
fiadds
jns
jle
xchg
mov
dec
mov
mov
ss
cli
xchg
in
mov
xor
adc
sti
push
arpl
push
lret
jbe
and
fnsave
rcrl
icebp
insb
ret
add
pop
aad
loope
dec
xchg
int
add
sub
out
and
xchg
push
pop
mov
ds
jae
movsl
xchg
imul
jo
dec
outsl
and
add
stos
fnstenv
fdivrl
dec
jmp
out
cwtl
sbb
pushl
ficomps
sub
push
lock
es
inc
filds
movsb
sarb
pop
pop
dec
scas
das
pusha
lods
mov
and
xor
fimuls
mov
daa
pop
xchg
mov
adcb
xchg
or
shlb
adc
push
test
jecxz
popa
lds
xchg
mulb
sub
out
pop
mov
pop
jo
jecxz
sbb
mov
xchg
inc
in
stos
pop
fs
adc
movsl
xchg
mov
ret
fnstcw
mov
xchg
add
push
push
xor
lret
inc
loop
sbb
loop
xchg
scas
pushf
cmp
sarb
sub
inc
inc
cmpsb
addb
std
adc
or
mov
ds
popf
mov
mov
adc
lcall
call
inc
mov
xlat
inc
js
nop
jge
jle
cmp
jnp
call
sub
dec
movsb
xchg
mov
push
fcomip
adc
loopne
and
xor
loop
pusha
push
out
js
lods
pop
sub
and
push
xchg
add
sub
pushf
and
mov
call
cmc
scas
push
dec
sub
call
lret
in
lret
test
sbb
in
sub
nop
js
mov
xchg
loopne
cwtl
fdivp
scas
push
les
test
movsl
sar
mov
pusha
mov
es
xchg
bound
lret
cmp
addb
dec
pushf
iret
sti
movsb
jb
xchg
sar
sarb
fcom
jl
inc
sbb
xchg
hlt
fwait
push
xchg
mov
xor
pop
daa
cmp
push
add
ret
cmp
repnz
ret
imul
add
lcall
fsub
iret
pop
push
xchg
dec
pop
jmp
pop
mov
subl
mov
mov
xor
sbb
jge
cltd
addr16
jo
add
mov
mov
int
mov
or
lahf
cld
xor
pop
rcll
mov
cld
lret
mov
fwait
adc
sahf
push
inc
lcall
shlb
push
mov
loope
les
call
gs
mov
icebp
rcrb
sub
jnp
outsl
mov
inc
jne
pushf
cmp
xor
jae
shlb
sub
xchg
add
inc
aaa
test
and
dec
je
xorb
add
repz
lock
pop
lret
into
push
fbstp
sbb
lock
or
fmuls
jne
sbb
cmpl
fimull
fcmovnb
mov
call
cld
pop
out
jb
subb
loop
daa
xor
ret
push
push
cmp
sahf
cmp
movsl
dec
mov
mov
mov
push
jns
ja
pop
push
mov
xor
push
jle
ljmp
lea
mov
add
mov
ret
fs
mov
orb
push
adc
xor
mov
pop
das
inc
repz
movsb
sahf
pop
out
jae
mov
movsl
mov
xchg
in
jo
and
adc
pop
in
pop
jg
or
sbb
aaa
adc
cmp
lahf
jecxz
test
inc
pop
jge
lds
std
fucom
mov
mov
imul
cs
gs
sub
fsubrl
xor
mov
xchg
add
insb
xchg
in
pop
mov
sub
xor
or
push
aaa
jo
dec
or
push
cmpsb
call
or
cmp
mov
and
jle
jle
jns
add
pop
into
insb
inc
jo
xor
sub
push
popa
repz
cltd
lods
fcomp
add
movsb
ret
fstp
bound
je
xchg
mov
cmp
loop
mov
sub
mov
adc
add
mov
cmp
sbb
daa
cs
arpl
sbb
call
ss
or
sti
inc
dec
lods
xor
popf
jns
and
pusha
adc
xorb
and
cmp
pop
cmpsl
cmp
jecxz
ret
cs
lret
cmp
shrb
mov
cmpsb
cmpsl
and
inc
aas
and
dec
stos
or
call
stc
cli
cmc
xchg
sbb
pop
jg
ja
mov
gs
sahf
cld
mov
lahf
xchg
mov
mov
arpl
mov
mov
mov
das
sbb
popa
jle
adc
xor
pushf
inc
pushf
dec
mov
cmp
xor
inc
cli
adc
pop
scas
xor
subl
jno
in
addr16
lods
inc
fsub
or
jle
fidivs
fldl
icebp
xor
sbb
faddl
pop
sub
mov
sbb
pop
fs
mov
add
mov
mov
lods
adc
idiv
jecxz
push
cltd
ds
jbe
in
dec
dec
jl
imul
in
sbb
lret
ret
jae
jb
je
call
inc
add
xchg
in
insl
mov
fists
cmpsl
adc
stc
lret
cmp
out
dec
js
and
jle
nop
nop
movsb
into
test
loopne
xchg
mov
in
aaa
dec
jae
inc
mov
xchg
jno
sbb
mov
mov
push
mov
dec
jns
sub
mov
or
bound
movsl
push
adc
in
push
jge
inc
leave
pop
pop
orl
adc
sub
sarb
push
mov
loopne
mov
pop
xchg
jp
and
jle
mov
jecxz
mov
popf
jmp
scas
sub
sbb
mov
push
and
sar
outsl
fsubl
jle
xchg
sub
clc
aad
dec
sub
leave
fdivl
add
loop
fcoml
imul
push
ds
cmp
cmc
outsb
mov
or
sub
popa
int
dec
addb
mov
enter
cmp
pop
scas
push
pop
test
jo
mov
in
aam
loopne
cmp
sahf
int3
fiadds
jns
cwtl
or
loope
lods
aas
pop
lods
mov
push
sbbb
jle
dec
addr16
out
addb
jge
clc
pop
out
add
jbe
stos
in
mov
lods
cmpsb
or
xor
jns
jbe
and
push
test
fiaddl
add
or
inc
lods
jmp
mov
and
cmp
mov
or
in
loop
incl
call
pusha
cwtl
mov
cmpsb
out
mov
lods
mov
loop
inc
pop
movsl
dec
inc
jge
popf
vpaddusb
std
popa
mov
aam
adc
jp
jmp
push
mov
lock
pop
xor
xor
out
negl
xor
insb
push
and
sbb
ret
mov
jbe
sub
or
sbb
lahf
mov
lret
or
aam
insb
pop
and
mov
xor
inc
or
ds
pop
or
outsl
outsl
arpl
sbb
outsl
rorl
aam
cli
jmp
mov
je
mov
ljmp
cli
push
inc
mov
sbb
outsb
es
stos
loope
mov
dec
add
push
or
fcoml
test
sub
and
and
mov
inc
ljmp
sbb
mov
mov
enter
sahf
mov
cli
popa
jnp
icebp
aam
mov
jno
fimuls
dec
lahf
lods
stos
sbb
fiadds
mov
ficompl
sub
lods
cmp
sbbb
nop
mov
adc
sbb
mov
fistps
xor
gs
inc
fildl
repnz
fsub
xchg
and
push
dec
pop
incb
loopne
xor
dec
sti
loope
push
loopne
jg
pop
dec
mov
in
mov
xchg
outsl
dec
ficompl
push
data16
cli
push
adc
dec
inc
sbb
mov
cmp
loope
add
scas
and
dec
dec
in
pop
dec
mulb
scas
xchg
mov
push
loop
mov
mov
adc
bound
int3
dec
sbb
lahf
movl
scas
mov
pushf
testl
ja
dec
add
cld
jmp
mov
mov
out
inc
adc
sbb
and
cld
or
out
push
icebp
repz
jl
jmp
push
adc
rcr
pop
imul
mov
hlt
mov
xor
insl
cltd
mov
push
es
sub
nop
popa
jns
pop
rclb
jnp
lods
decl
fsts
xchg
data16
pop
push
dec
popa
mov
nop
push
shll
and
sbb
add
mov
ja
mov
mov
add
jg
call
mov
adc
pop
out
xor
enter
pop
mov
les
loop
insb
or
push
mov
aam
clc
test
cmp
xchg
push
bound
leave
pop
inc
push
sub
add
dec
test
xchg
inc
xor
dec
mov
lret
inc
jbe
loope
out
sub
xchg
jnp
int3
mov
out
xchg
mov
pop
pushf
hlt
daa
xor
mov
add
dec
out
jno
mov
fwait
call
adc
fwait
movsl
scas
pushf
movsl
mov
adc
pop
xor
jg
xor
jbe
push
add
in
jge
dec
sub
dec
inc
out
ret
outsl
mov
test
pop
shlb
push
mov
sbb
das
je
cmp
hlt
inc
inc
out
pop
adc
inc
and
sbb
jne
lods
subl
repnz
inc
fdivs
mov
addl
adc
adc
aam
in
mov
ja
fwait
daa
xor
outsl
push
in
aas
divl
loop
sub
clc
cli
repnz
inc
insb
mov
xchg
mov
sbb
adc
pop
mov
mov
pop
movsb
or
in
mov
cld
pop
sbb
xchg
dec
pusha
push
jp
sub
test
call
sbb
inc
xchg
imul
sub
push
ret
inc
shl
test
cmpsb
pop
ljmp
add
movsb
je
decb
shlb
imul
fidivs
sbb
insl
popa
dec
dec
or
int3
cmp
cmp
mov
sub
sbb
mov
pop
jae
adc
fwait
loopne
pusha
xchg
movsl
dec
arpl
adc
sarl
ficoml
int3
movlps
sub
mov
popf
cmp
js
sub
pop
mov
pop
push
stos
aaa
fdivs
out
pop
add
inc
inc
leave
and
inc
dec
lods
pop
out
ja
jae
rolb
into
aam
mov
lcall
mov
pop
push
jg
add
pusha
push
and
js
add
mov
insl
in
and
jl
dec
mov
ret
jp
add
scas
loopne
lret
cmp
sbb
adc
rolb
pop
bound
ja
add
inc
push
loop
inc
aas
jb
scas
and
out
scas
jecxz
dec
lea
add
xor
pop
popa
sbb
xchg
rcrb
js
aam
daa
stos
leave
xor
dec
fisubrs
mov
insl
sbb
stos
es
shll
insl
jne
dec
test
push
mov
test
adc
xchg
out
in
and
sbb
inc
dec
shr
inc
push
ror
pop
inc
loopne
sbb
and
push
scas
push
push
push
lock
pusha
clc
sarb
test
add
adc
mov
sub
inc
dec
mov
jg
adc
dec
out
fsub
xchg
pusha
aas
pop
mov
pop
sub
out
lods
inc
mov
nop
cmp
or
xchg
lahf
jp
lahf
xchg
mov
ds
leave
cmp
rcl
pop
pop
jns
adc
iret
and
adc
sahf
repnz
adc
jae
mov
mov
rorl
xchg
xlat
aam
xor
pushf
sbb
leave
or
jmp
mov
and
adcb
pop
fdiv
xchg
mov
ljmp
jo
mov
and
jmp
icebp
test
loope
push
sub
imul
je
dec
add
iret
imul
push
mov
and
or
inc
inc
or
add
cmp
lret
sub
fwait
int3
and
add
int3
cmp
leave
test
mov
sub
mov
cmp
mov
cwtl
stos
sahf
dec
daa
mov
lcall
arpl
pop
popf
cmp
dec
pop
adc
stc
mov
lret
in
push
push
jl
dec
add
lods
ret
lea
fisttpll
xor
loope
sbb
lock
sbb
aam
fldenv
mov
push
sahf
inc
pop
jecxz
scas
pushf
stc
in
inc
mov
call
dec
enter
icebp
push
inc
push
xchg
inc
leave
jb
call
loope
cmp
push
sub
pop
mov
dec
rcr
adc
jmp
inc
jp
fidivrs
out
cmp
jle
in
stc
test
xor
repz
ljmp
insb
lods
stc
and
movsl
bound
cmp
sahf
adc
pushf
into
lds
add
xchg
in
xchg
test
adc
cltd
sub
stc
pusha
cmp
jmp
popa
inc
cmpsb
sbb
out
lahf
arpl
xor
into
inc
and
inc
xchg
test
jle
inc
xchg
sub
mov
jp
test
push
sti
stos
ret
mov
mov
adc
imul
push
inc
xor
mov
inc
leave
subb
add
adc
mov
loopne
add
mov
xchg
mov
orb
jbe
push
mov
pop
inc
mov
jns
mov
adc
push
scas
push
stc
cmpsl
add
inc
into
push
sub
ss
push
dec
cltd
mov
fbstp
pop
dec
lahf
xchg
out
mov
mov
inc
pop
xchg
push
pop
test
mov
out
inc
push
jns
lret
and
rorb
jb
cwtl
pop
xchg
jmp
and
push
mov
add
push
push
push
fwait
out
in
sbb
or
scas
xor
pop
or
cmp
test
jns
scas
mulb
movsb
and
enter
sbb
pop
aaa
rcr
addr16
imul
movsl
test
add
fidivs
fs
test
orb
push
and
lcall
mov
decb
dec
test
inc
mov
stos
xor
jp
and
loope
sbb
leave
push
mov
fs
mov
adc
xorl
ds
and
out
dec
sbb
loop
mov
mov
xchg
inc
jnp
sub
xor
into
xchg
inc
sub
add
dec
movsl
int3
pop
push
and
push
shll
cmp
ja
lock
int
aam
cmpsb
loope
lret
cmpsl
jae
mov
and
mov
js
cltd
aam
je
and
inc
in
lods
mov
test
push
and
std
jg
jo
insl
jno
push
sub
sbb
iret
imul
stos
in
repnz
dec
into
pop
or
aaa
rcll
repz
mov
adc
pop
mov
gs
xchg
jp
add
inc
pop
popa
mov
or
test
jp
inc
xchg
fldcw
icebp
nop
shrb
mov
out
pop
test
test
into
aad
out
fiaddl
addr16
lods
dec
inc
in
insl
cltd
lock
mov
in
dec
sbb
cmp
pop
lea
jo
push
ja
mov
pusha
insl
jecxz
cmpl
insl
jb
mov
mov
ror
mov
push
mov
add
sub
mov
neg
ret
push
aad
outsl
jae
ficoms
xchg
jmp
fsubs
xchg
sbb
xchg
lahf
test
insl
ds
cwtl
jno
and
punpckhwd
pop
mov
out
fstpt
mov
ret
nop
mov
jno
test
icebp
dec
push
insb
xor
add
jne
add
lods
loopne
inc
dec
sbb
sarb
jle
mov
and
out
xchg
sbb
movsb
cmp
jns
les
mov
lcall
sbb
or
cmp
addr16
into
sbb
push
add
pop
adc
popa
call
out
jmp
repz
cmp
stc
pop
sub
pop
lods
add
test
or
ljmp
dec
add
lods
mov
and
add
dec
sbb
stos
cmp
or
stc
loop
ror
sbb
fdivs
jmp
and
pushf
cmp
js
mov
idivl
cs
inc
in
add
daa
shrb
aaa
addr16
sbb
test
xlat
fisubrs
repz
push
lcall
aad
xor
filds
lret
adc
ret
divb
xor
in
dec
mov
adc
insl
popf
rorb
jg
jns
xchg
xor
pop
jg
or
mov
pop
sub
rorl
cs
pop
or
sahf
or
adc
sub
xor
shlb
les
push
xchg
je
daa
lods
rcr
stos
jns
inc
mov
lret
leave
cli
in
xlat
xor
xchg
inc
push
dec
or
dec
outsl
sub
mov
xchg
cmpsb
in
push
mov
repnz
out
push
out
xchg
xchg
xor
inc
sti
cmp
xchg
jp
loop
jp
push
fidivrs
test
in
or
mov
mov
jb
sub
jbe
stc
cld
adc
pop
sub
negl
cld
xchg
in
dec
lahf
sub
std
fwait
test
add
hlt
test
gs
js
cmp
out
mov
das
mov
jb
cmp
push
or
push
mov
nop
push
xchg
xorb
test
mov
push
push
clc
inc
arpl
inc
clc
pushf
adcb
das
cmp
out
test
jo
inc
das
leave
fdivl
in
cld
sarb
loopne
es
es
mov
or
testl
stc
xor
xor
xchg
nop
xchg
call
icebp
lock
and
jns
daa
enter
insl
cmpsl
aam
daa
pop
idivb
fadds
adc
sbb
sub
shlb
jmp
push
rclb
lret
fadds
int
test
test
icebp
movsb
mov
movsb
xchg
in
cwtl
out
jge
inc
jmp
dec
sbb
xchg
push
dec
fwait
inc
xchg
mov
repz
das
jle
rcrl
imul
mov
adc
mov
sbbl
int
xchg
out
add
adc
pop
mov
imul
cwtl
lfs
in
mov
cmpsl
cltd
movsb
xor
pop
dec
mov
mov
inc
pop
aas
clc
adc
test
loopne
fwait
pop
out
dec
xlat
ret
mov
jo
mov
je
in
ja
jge
sbb
xchg
sub
arpl
shll
pop
and
mov
dec
popf
xor
ficompl
mov
fcmovb
push
fdiv
push
mov
ja
adc
adc
nop
adc
sub
add
lcall
out
int3
sub
js
jmp
test
pop
faddl
xchg
scas
push
sbb
sub
in
cmp
jl
cs
in
dec
pop
or
adc
mov
insb
xor
lea
fsubrl
dec
sbb
daa
adc
fdivs
sbb
jl
add
jl
mov
cmp
je
fwait
sti
repz
stos
clc
pop
mov
jnp
sub
add
add
bsf
cmp
push
sbb
push
fidivs
adc
push
outsl
lea
add
sub
push
jmp
lret
mov
loope
or
stos
push
cmpsl
sub
adc
out
jb
push
mov
and
or
add
or
cmp
mov
std
out
stc
shlb
push
lods
js
leave
push
inc
jp
mov
orl
mov
mov
xchg
xor
xchg
in
inc
jb
push
mov
in
jne
cmp
cltd
cmp
mov
mov
push
adc
int
mov
mov
in
mov
shlb
or
andb
test
shrb
lock
jo
pop
fistps
aam
adc
jle
pop
in
sbb
jmp
pop
stc
sub
jnp
addr16
inc
mov
nop
loopne
sti
pop
imul
xor
repnz
fwait
inc
sbb
push
outsb
lahf
fsubrs
fstps
push
pop
inc
pop
repnz
sbb
ja
test
lock
push
mov
scas
js
cmp
cmp
jge
cmp
jmp
jmp
inc
pop
sub
xorb
push
or
xorb
pop
outsb
sub
fcompl
sti
and
dec
sbb
dec
sub
enter
sbb
cwtl
mov
ja
insl
neg
dec
fsubl
aaa
in
jcxz
jge
out
inc
pop
popa
inc
outsb
xchg
std
in
xor
hlt
pop
fiadds
add
dec
adc
adc
icebp
pop
sub
das
pusha
push
or
add
push
mov
mov
in
dec
sub
xor
sbb
pop
sbb
cmp
mov
fcoms
push
adc
sbbb
stc
mov
aas
mov
subb
orl
jge
dec
outsb
or
pusha
jmp
stos
flds
stos
mov
pop
lret
ja
mov
loopne
push
pushf
adc
fstl
xor
das
xlat
lods
sahf
dec
lahf
shlb
cs
out
adc
fisttps
lcall
inc
mov
std
in
shlb
dec
dec
adc
mov
jnp
scas
cmp
ss
dec
std
or
cmpsb
sbb
xor
test
pop
fistpl
jno
mov
pop
imul
pop
mov
enter
push
dec
inc
jmp
mov
mov
adc
mov
lret
mov
lock
xchg
pop
subl
pop
sub
es
fld
ljmp
lret
std
int
add
daa
out
cmp
lods
pop
or
sti
int3
ja
repnz
jae
pusha
outsl
stc
lahf
mov
out
in
dec
lcall
mov
dec
jecxz
roll
xchg
sbb
add
jl
dec
in
xchg
fists
dec
mov
fsts
mov
mov
repz
jnp
adc
pop
xorb
test
jne
cld
sbb
xchg
je
inc
dec
iret
movsl
add
clc
mov
mov
xor
mov
shlb
aaa
jbe
les
clc
sarb
stos
jge
ljmp
inc
movsb
lahf
ret
cmp
or
push
ja
pop
push
fdivl
mov
lret
jle
data16
leave
clc
lcall
xchg
repz
jg,pn
mov
imul
into
cmp
mov
lds
sbb
mov
inc
push
fwait
test
rorb
xor
mov
in
jmp
inc
sti
test
push
andb
push
stc
and
sbb
repnz
adc
ffreep
cmpsl
sub
lock
sahf
mov
out
jno
mov
aam
cld
enter
out
pusha
mov
sub
jb
mov
mov
inc
xchg
sbb
mov
lret
push
je
ja
xchg
push
xor
mov
xchg
popf
imul
sbb
imul
adc
xchg
inc
adc
inc
dec
xchg
sahf
and
imul
pop
pushf
add
jne
mov
cltd
xchg
or
ror
sbb
cmpsl
xchg
pushf
push
cli
je
in
push
test
dec
xor
pop
xchg
dec
imul
pop
stos
fisubl
sub
and
popa
xchg
pop
sub
rcll
dec
sbb
mov
jns
xor
in
pop
mov
push
orb
pop
or
jge
mov
add
pop
sub
dec
insl
mov
xlat
pop
pop
lret
sub
les
iret
int3
pop
ret
nop
out
dec
popf
fucompp
lods
sub
add
sub
stc
jge
cmp
test
jns
repz
jae
adcl
scas
add
jnp
dec
cmc
lret
imul
push
jp
sbb
fisubl
outsb
adc
cwtl
cwtl
jnp
loopne
xor
mov
aaa
xchg
scas
inc
push
mov
ss
mov
xor
push
cmp
pushf
mov
cli
ficompl
fwait
jne
and
xchg
add
sub
ljmp
inc
out
xchg
int
ljmp
adc
call
outsl
or
fstpt
test
mov
xchg
test
or
clc
imul
divl
xor
lcall
mov
popf
lock
fs
pop
mov
bound
xchg
clc
clc
sahf
jge
jecxz
daa
lds
cmp
sbb
orb
cli
xor
mov
out
and
and
outsb
and
jns
xchg
in
cmp
sti
jg
mov
mov
and
cli
dec
lahf
std
push
mov
add
cmp
and
pop
inc
mov
sub
xor
inc
inc
push
push
pushf
lret
outsb
pushf
xor
or
push
shrb
jl
pop
loopne
mov
jmp
pop
les
in
iret
rorb
mov
test
cmpsb
bound
dec
push
adc
mov
mov
mov
inc
add
data16
dec
jecxz
jb
mov
jno
push
lods
dec
dec
les
lea
and
and
cld
xchg
cmp
jb
mov
repnz
and
mov
ljmp
lods
or
sbb
iret
xor
cli
dec
mov
sub
add
or
dec
xchg
out
xchg
lock
js
jae
and
push
fsubs
inc
fdivs
pop
repz
movsb
mov
xchg
xor
subb
mov
cmp
add
hlt
xor
xchg
and
cmp
jb
bswap
adc
push
fdivrl
jns
pop
mov
js
push
add
jl
loop
aad
jne
in
sub
imulb
fiaddl
movb
inc
je
into
mov
xchg
mov
call
mov
fstps
jne
cmp
or
out
sbb
and
fstps
std
daa
sbb
cmp
jp
aaa
cmp
pushf
jmp
and
cs
fcoml
dec
and
sub
bnd
fxch
sub
fimull
pop
test
jno
insb
mov
xchg
jmp
push
pop
in
xor
sub
pop
pushf
shl
pop
xchg
push
out
test
push
mov
dec
and
insb
jbe
lret
add
and
movsb
fadd
repz
mov
out
lahf
repz
fmuls
lret
iret
mov
and
dec
outsb
or
pop
addr16
repnz
pop
sti
fs
push
mov
adc
mov
push
shl
xchg
loope
inc
inc
push
cli
mov
pusha
jnp
cli
rorb
call
push
and
pop
lea
sbb
pop
push
push
sub
pop
lods
stc
insl
dec
pop
mov
fcompl
jmp
mov
mov
jnp
ss
adc
rcrl
loopne
roll
adc
inc
fisubl
in
xor
testb
jmp
fucomip
add
xchg
jb
dec
je
jns
adc
inc
gs
cmp
mov
or
in
sbbb
cmc
dec
test
xlat
push
cmp
movsb
hlt
cmp
xchg
sbb
ret
push
jb
fmull
sbb
mov
lcall
adc
jmp
popa
mov
orb
push
testb
sbb
test
adcl
mov
popa
packsswb
add
mov
xchg
ss
xchg
mov
lcall
addr16
aaa
pop
mov
add
fstl
inc
shll
int
dec
sahf
out
stc
sbb
cwtl
out
bound
mov
xchg
dec
pop
lret
fwait
andl
mov
into
and
movsl
push
inc
sub
cmp
dec
xchg
pusha
aam
sti
cmpsb
dec
jle
mov
pop
dec
push
mov
fadd
pop
mov
pop
cld
in
jb
call
mov
jo
cmp
fcomp
aas
mov
jb
outsb
xor
xor
loope
leave
ljmp
jl
mov
nop
push
cmp
stos
mov
daa
mov
pop
inc
inc
dec
ljmp
test
sub
imul
pop
lock
jne
mov
js
lea
sub
mov
into
inc
ja
inc
add
out
and
push
ds
fisubrl
pop
mov
in
or
jl
inc
xor
cmp
ror
and
mov
inc
sahf
add
jmp
xlat
mov
fadds
bound
ret
push
cmp
mov
pushf
or
sbb
pop
test
out
or
cmpsl
push
out
push
addr16
movsb
insl
mov
out
mov
out
lods
xor
or
mov
divb
enter
popa
dec
js
in
mov
pop
sahf
xchg
xchg
xor
push
mov
cmp
jae
push
out
push
insb
testb
and
xorl
jns
sbb
roll
dec
dec
lds
popa
stos
xchg
cli
adc
lea
push
and
incb
pop
jb
sub
xchg
subb
cs
dec
idiv
into
inc
gs
sbb
push
push
add
pushf
cld
repz
pop
out
stc
dec
out
stos
xchg
sbb
mov
inc
test
adc
push
and
pop
orb
ja
shl
push
mov
mov
pushf
test
pusha
xchg
adc
outsb
sbb
js
cmc
ret
enter
sub
mov
jnp
not
and
sbb
mov
cmc
jle
shlb
sbb
fwait
sbb
insl
inc
and
mov
dec
mov
push
cmp
stc
int
loop
pop
int3
cs
test
inc
ljmp
dec
std
in
pop
pop
sub
mov
cmpsl
pop
push
xor
inc
test
stos
adc
gs
daa
sbb
adc
mov
push
hlt
cmc
jb
cltd
pop
call
push
test
and
cmp
leave
rclb
xchg
outsl
xchg
shl
sub
add
sub
mov
mov
push
loopne
aaa
pop
mov
sbb
es
xor
add
add
jmp
pushf
inc
test
add
mov
adc
sbb
jg
gs
sub
add
negl
mov
or
addb
add
frstor
push
mov
cli
sub
in
lock
scas
or
adc
cs
jmp
or
sbb
inc
add
jnp
shlb
lahf
jbe
mov
or
lcall
add
jle
mov
cmp
xchg
sbb
in
jne
scas
dec
es
mov
mov
subl
mov
imul
and
push
cli
imul
adcl
push
les
cwtl
pop
arpl
push
rcll
test
add
xor
rcrl
mov
adc
and
mov
and
repnz
push
repnz
out
jecxz
cmpsb
mov
cmp
push
repnz
mov
mov
loope
mov
mov
or
loopne
dec
mov
push
das
popf
inc
outsl
enter
neg
incb
andb
mov
andl
xor
push
dec
mov
shll
jg
icebp
inc
push
and
mov
inc
inc
lds
js
mov
jns
mov
movl
mov
loop
rcll
mov
sub
or
jnp
sarb
and
jo
or
mov
fucom
int
mov
cmp
mov
inc
cmp
mov
dec
stos
inc
dec
fidivs
popf
fidivrs
sub
or
iret
filds
lods
mov
movsl
scas
hlt
fcomi
sete
loopne
cmp
movsb
mov
ljmp
sub
scas
cltd
es
inc
and
bound
pop
pop
ljmp
mov
fisubrs
xor
sub
mov
mov
xchg
mov
and
ljmp
bnd
pop
lahf
xor
push
pop
loopne
daa
jecxz
dec
xor
aad
mov
xor
cwtl
push
notb
out
jb
jns
lcall
mov
pop
mov
mov
cmp
cwtl
ss
bound
mov
mov
mov
mov
sti
adc
cmpsb
xchg
xchg
push
mov
gs
push
rcl
mov
movsl
fwait
jno
adc
ss
adc
mov
aad
xor
ja
je
sti
xor
ret
ss
inc
leave
das
lea
fistps
addr16
shrb
xor
inc
sbb
std
xor
sbb
lds
dec
neg
inc
in
shll
mov
sub
jo
or
dec
lods
pop
jge
fsts
test
nop
cmp
imul
test
and
and
and
loop
cmp
sbb
das
add
xchg
mov
jne
push
cmp
pop
push
cmp
fimull
push
sub
xchg
insl
mov
in
inc
xchg
inc
and
and
pushf
rolb
dec
shrl
mov
sarl
cmp
ss
or
mov
sbb
inc
mov
nop
stos
mov
cwtl
rcll
add
mov
mov
rcll
stos
jle
aam
enter
xchg
les
nop
mov
add
push
xor
lods
cmp
adc
aad
fcmove
int
jp
ss
mov
or
imul
mov
ja
bound
inc
mov
dec
cli
jo
shlb
cmpsl
jp
and
mov
dec
or
das
out
cmp
xchg
cwtl
mov
xchg
shlb
scas
andl
fwait
sub
loopne
pop
jle
mov
cmp
inc
and
mov
fisubs
icebp
insb
cmpsb
out
aas
dec
lods
jo
popf
adc
lret
sub
mov
orl
or
shll
push
sub
adc
jl
mov
mov
loope
jne
es
jmp
push
cmp
idivb
insb
push
repnz
push
mov
pusha
inc
fstpl
and
dec
sahf
mov
stc
les
push
ss
iret
les
pop
cmp
dec
cmp
add
scas
jne
inc
push
sbb
push
cmc
push
xchg
movl
bound
xchg
and
movsl
xchg
pop
cmpsb
inc
lods
mov
repnz
push
pop
xlat
rcr
adc
movsl
and
cmp
jne
imul
adc
xchg
mov
or
and
leave
pop
repz
inc
mov
inc
int3
pop
jp
xchg
in
gs
cmp
lods
pop
inc
loope
sub
mov
push
mov
sahf
cmp
pop
ret
in
inc
adc
clc
popf
loop
cltd
mov
jno
mov
fcmovbe
aam
and
out
icebp
push
jb
orl
sub
push
adc
hlt
adc
sbb
gs
mov
sub
mov
stos
fcomip
out
pop
and
loopne
cmpsl
arpl
jns
lret
jmp
pop
jg
pop
mov
push
jecxz
and
or
or
mov
movsb
mov
or
mov
sbbb
jno
rcrb
cmp
add
xchg
scas
icebp
mov
sbb
imul
add
sub
push
cmp
lcall
lret
int
std
push
mov
xchg
fnstcw
int
aad
pop
dec
fdivr
and
and
adc
jo
cmp
mov
cmpb
imul
outsl
dec
jp
sti
add
push
test
nop
dec
fwait
dec
xlat
ds
jno
cld
sti
jle
daa
scas
shlb
pop
std
push
inc
mov
xor
enter
cwtl
fdiv
inc
push
dec
and
data16
push
enter
leave
js
xchg
cwtl
push
adc
insl
fs
push
outsl
xor
pop
fldenv
dec
sbb
sbb
pop
testl
loopne
dec
jbe
sbb
lahf
jl
mov
xorb
mov
sbb
stos
jmp
mov
lock
mov
iret
xor
push
movsb
movsb
ret
mov
and
inc
in
pop
adc
sbb
addr16
jo
push
int
inc
popf
push
lds
pushf
mov
rcr
mov
int3
hlt
cmpl
or
mov
sahf
std
push
push
push
fnstenv
movsb
jecxz
lods
dec
jb
jns
or
cmpsb
jmp
sbb
je
mov
mov
bound
sbb
xchg
lods
dec
std
out
repnz
iret
mov
jmp
or
daa
xchg
mov
out
cltd
insb
clc
icebp
incb
push
enter
jnp
mov
or
jb
js
shr
xchg
cli
lret
test
xchg
cmpsl
adc
dec
data16
orl
in
mov
xchg
sbb
jnp
add
push
dec
pop
jnp
adc
jno
ret
sbb
test
cmp
ljmp
les
sbb
push
pop
cmpsb
aad
jl
in
mov
adc
mov
icebp
lret
aaa
shl
add
xchg
mov
dec
dec
xlat
mov
push
fldt
je
adc
pop
inc
imul
ret
das
pop
loopne
data16
and
and
loope
or
push
sub
scas
inc
push
fiadds
popf
ret
jg
pushf
push
leave
inc
push
scas
es
insl
push
push
stc
test
sbb
inc
sbb
mov
pushf
cmc
addl
cmp
out
xchg
sbb
mov
scas
push
sbb
lcall
incb
clc
cmp
mov
andb
adc
dec
jns
popa
dec
ds
mov
sub
popa
shll
bnd
leave
push
data16
pop
xchg
repnz
lods
push
mov
or
adc
lods
dec
clc
aad
sbb
add
mov
xchg
stos
and
dec
pop
or
xor
imul
arpl
ret
insb
xchg
xor
sbb
jno
fildll
aas
shlb
cmc
push
movsb
mov
ss
outsl
pop
pop
insb
dec
fisubs
sub
xor
xchg
lods
and
push
lahf
out
ja
cmc
ret
cmp
xchg
mov
clc
mov
shrl
cmp
dec
repnz
mov
xchg
es
jp
loop
loop
mov
xchg
sarl
insl
or
repnz
inc
push
sub
add
aad
push
cmp
dec
push
enter
or
dec
std
pop
scas
dec
cmpsb
and
or
adc
loope
sub
xor
push
jb
stos
adc
push
sbb
lods
notl
jbe
inc
out
sub
daa
mov
xchg
fildll
fdiv
mov
loope
enter
fcompl
add
filds
add
mov
mov
dec
or
in
jle
jno
and
fcompl
adc
lods
insl
test
push
out
lret
inc
out
mov
push
outsl
jbe
jge
dec
sahf
xor
cmp
dec
insb
sbb
jbe
fcmovbe
mov
lret
mov
nop
mov
cmp
cld
and
sbb
lea
cmp
movsb
cwtl
mov
xchg
pusha
mov
adc
mov
scas
insl
into
sub
inc
sub
mov
xchg
jmp
inc
dec
inc
xchg
mov
push
clc
ja
and
aam
inc
jne
mov
mov
mov
iret
dec
pop
cmp
mov
dec
and
pop
cwtl
mov
pop
jle
mov
and
adc
push
push
mov
cwtl
push
add
jnp
or
fstl
stos
sbb
xlat
mov
mov
fs
push
or
out
mov
in
pop
push
push
imul
and
sti
gs
lock
inc
jne
scas
cs
pop
loope
or
leave
pop
cmpsl
inc
adc
mov
insl
shlb
fadds
push
mov
cmpsl
sub
jno
test
mov
sub
loopne
and
push
pop
jb
loopne
push
xor
repz
jle
movsl
adc
pushw
mov
inc
in
sti
test
stos
xchg
and
pop
xchg
repz
popf
bound
cmp
xor
sbb
mov
imul
pop
fildll
jne
sbb
arpl
sub
push
jl
movsl
ss
and
push
fsub
lahf
fs
mov
inc
shr
cmp
out
flds
sahf
lcall
popf
sbb
xchg
push
cmp
popf
imul
scas
scas
pop
aas
jbe
inc
aam
jns
sbb
data16
jecxz
insl
ret
fcompl
adc
out
sub
lds
imul
cwtl
jg
cmp
stos
cmp
add
xchg
mov
jo
imulb
jb
insb
mov
jo
imul
push
push
xchg
jo
scas
fidivrs
ds
dec
jp
xchg
lret
xchg
sub
and
add
xchg
cwtl
pop
ljmp
jmp
xlat
nop
and
test
pop
push
icebp
fcmovnbe
push
xchg
cld
jo
or
iret
aad
mov
dec
xorb
outsb
outsl
pop
test
enter
sbb
and
daa
mov
add
nop
call
jecxz
cltd
pushf
aad
mov
lcall
leave
xchg
add
jb
jno
push
dec
mov
jle
pusha
addr16
or
imul
leave
outsl
xlat
pop
dec
cmp
out
xchg
ljmp
jle
push
add
mov
int
xchg
or
sbb
outsb
ret
stc
dec
mov
imul
xchg
imul
les
sub
call
pop
jge
add
dec
shlb
inc
insl
scas
pop
ret
mov
lahf
mov
mov
bound
clc
cs
rcll
pusha
mov
pop
push
lods
repnz
dec
nop
sub
jle
xor
scas
int
loop
lret
movsl
shll
in
divb
push
ret
sub
or
icebp
addr16
insl
jo
xor
inc
in
sbb
imul
adc
ret
add
dec
imul
jnp
adc
adc
pop
mov
mov
lahf
pop
ret
add
inc
cmp
mov
or
xchg
daa
std
out
bound
scas
into
not
cmc
xchg
outsb
mov
cld
mov
shrl
push
xchg
add
and
shlb
sub
dec
sbb
std
xor
xor
gs
or
hlt
and
dec
adc
dec
mov
call
repz
andl
mov
xchg
das
lret
fisttpll
fcomip
out
in
dec
xchg
and
push
popf
sbb
xchg
insb
jp
fs
mov
add
cmp
loope
str
pushf
mov
add
xor
mov
jl
mov
repnz
in
hlt
mov
xchg
or
arpl
xchg
dec
sub
add
movsb
xchg
stos
mov
and
ret
mov
lret
jo
adc
or
pop
leave
out
inc
lret
sub
lds
sbb
ds
scas
mov
mov
repnz
inc
call
ret
adc
adcb
call
inc
mov
cs
add
stos
sahf
andps
test
stos
cli
adc
lret
push
jns
roll
mov
dec
mov
xorl
mov
testl
sbb
cmp
test
cwtl
stc
pop
loopne
add
js
adcb
test
insl
pop
xor
js
and
mov
loopne
pop
insl
mov
sub
cmp
push
adc
jbe
mov
jae
pop
lcall
mov
es
xor
sub
imul
inc
cmc
sub
int
inc
xchg
inc
popf
cwtl
pop
jae
push
shlb
pop
jae
add
leave
shlb
jmp
aad
sbb
ljmp
inc
mov
test
add
pop
test
shlb
add
shl
or
and
bound
inc
sub
mov
movsl
cmp
sub
xor
and
in
fistl
mov
imul
mulb
cmp
fstl
jmp
shll
inc
in
sbb
fnop
push
idivl
loope
daa
inc
push
dec
inc
sub
stc
inc
cmpb
je
test
xor
call
lcall
jns
out
sarl
mov
or
addr16
mov
jmp
popa
jp
imul
inc
insb
aad
dec
mov
adc
test
addr16
mov
daa
iret
jg
push
movsl
cld
ds
orb
push
sbb
mov
jnp
test
mov
cmp
popf
popa
mov
cwtl
scas
lret
cld
test
xchg
cli
dec
popf
pop
mov
mov
push
bound
or
cwtl
xor
and
xchg
pop
enter
cmpb
cmpxchg
fsubl
icebp
sbb
loope
insb
lods
outsl
ja
test
repz
pop
mov
push
jp
ss
das
ret
cmp
pop
jo
jae
cmp
mov
popa
pop
aaa
inc
scas
jnp
jo
insl
mov
push
adc
stos
push
jo
mov
pop
test
jnp
inc
mov
jb
cld
clc
mov
test
cmp
or
inc
xorb
adc
or
in
lret
dec
ficoms
dec
dec
cmpsl
xchg
outsb
jge
cs
repz
out
xchg
repnz
les
imul
or
fwait
dec
test
push
fimull
addr16
xchg
dec
andb
or
xor
popf
fistpl
jg
int3
lock
jne
and
dec
mov
lret
pop
das
mov
push
dec
gs
lret
hlt
pop
cmp
add
jbe
aaa
mov
xchg
lret
add
push
leave
or
lret
stos
pusha
xchg
push
adc
xlat
repnz
sub
and
std
mov
sti
sub
into
sbb
pushl
add
pop
cmpl
addb
daa
add
pop
adc
adc
or
pop
jl
mov
int
mov
sub
jle
and
or
inc
idiv
push
push
mov
mov
and
pusha
ret
lods
out
push
fiadds
ret
xchg
mov
adc
push
mov
adc
mov
popf
cmp
cmp
ret
lds
ljmp
push
pop
pop
or
out
cmp
pop
arpl
adc
sbb
jl
xchg
jae
ljmp
vunpckhps
push
xor
xlat
int
fnsave
add
xsavec
sbb
test
cli
adc
ja
sub
cld
rol
and
arpl
pop
mov
sarb
sub
xor
movsb
sub
outsb
icebp
roll
push
mov
cli
lret
sub
loope
shrl
inc
je
repz
int
decb
sub
and
xchg
outsl
xor
adc
jno
decb
pop
clc
mov
adc
or
jle
fdivrl
inc
xchg
repnz
cmp
add
into
adc
cmp
mov
andl
imul
or
add
out
or
pop
cmp
push
loop
pop
lcall
dec
scas
xchg
or
daa
mov
sti
and
push
lret
and
add
cltd
pop
cmp
push
cmp
adc
fwait
and
dec
insl
xchg
aaa
mov
add
mov
adc
and
push
pop
jl
cmp
dec
into
cmc
les
xchg
aas
adc
mov
dec
in
jle
ret
jg
cmp
data16
in
jae
or
jbe
sub
ja
pop
push
dec
dec
out
aad
in
into
mov
leave
decl
repnz
iret
outsb
mov
lret
rorl
frstpm(287
xor
inc
adc
in
arpl
aas
or
lock
push
xor
add
fmull
into
lds
inc
shl
jae
mov
pop
mov
cmpsb
pop
inc
nop
push
mov
and
stos
sbb
dec
sub
add
mov
sbb
add
pop
in
mov
mov
pop
cli
push
mov
sbb
mov
lcall
xchg
js
loop
mov
sbb
das
bnd
add
ljmp
lock
jo
push
int
push
sub
test
xchg
loope
inc
sub
inc
and
pop
xor
and
add
pop
gs
mov
int3
popf
popf
mov
cmc
insb
pop
push
rorb
pop
add
out
cmpsl
mov
lds
aam
inc
jns
xor
dec
mov
icebp
fs
or
jnp
jmp
daa
and
cmp
xor
sbbl
xor
iret
inc
jl
adc
pop
xlat
xchg
aaa
mov
imul
push
mov
out
fisubs
adc
push
mov
mov
pop
inc
call
jmp
push
shlb
and
pop
arpl
mov
fs
cmpsb
xor
push
pop
lea
fcmovu
dec
cs
and
mov
cmpsb
hlt
test
jbe
pop
outsb
lahf
loop
pop
test
mov
inc
fnstsw
lret
jnp
cmp
and
bound
add
xor
cmp
test
loop
mov
cmp
adc
mov
jae
fwait
sub
aam
mov
push
push
lret
movsl
std
fsubp
ret
scas
sub
or
fimull
aas
or
mov
inc
push
nop
mov
xchg
xor
inc
popf
enter
mov
push
mov
xchg
dec
xchg
jo
sub
inc
adc
xchg
push
jl
mov
mov
xchg
pop
loopne
sbb
xor
dec
vorps
daa
sti
int3
stc
out
das
scas
push
fdivrl
imul
mov
lods
fwait
xchg
mov
jle
xor
push
mov
jecxz
dec
bts
cmp
or
dec
jno
adcl
sahf
mov
cwtl
enter
loope
inc
pop
cmp
insl
jp
stc
clc
mov
cmp
hlt
push
mov
cld
mov
pop
pusha
mov
outsb
in
push
cwtl
sahf
or
lcall
push
enter
sbbl
inc
jbe
jl
fstp
and
sbb
dec
push
mov
shl
lret
fisttps
or
loop
adc
int
pushf
or
jne
sub
or
mov
add
jle
out
lods
test
push
rcr
xchg
or
cli
bound
dec
inc
or
push
inc
push
loope
cltd
fcompl
mov
sbb
push
sbb
adc
jne
scas
stc
loopne
pop
mov
scas
push
sbb
bnd
cmp
fadds
rorl
sbb
inc
and
mov
push
inc
outsl
or
pop
mov
push
les
mov
insb
lds
mov
dec
dec
imul
xchg
cmc
inc
xlat
lods
xchg
jns
movsl
and
and
inc
leave
xor
test
ljmp
das
jb
mov
mov
cmp
outsb
frstor
outsl
addb
ret
in
insl
and
lods
and
out
cltd
inc
lret
stos
push
and
mov
push
jno
scas
cmp
sbb
mov
xlat
out
sbb
dec
add
cwtl
stos
push
jns
mov
add
sarl
adc
sub
inc
jbe
aad
jecxz
pusha
repz
or
in
cld
arpl
sub
subb
std
jno
mov
nop
inc
adc
mov
sbb
xor
inc
mov
popa
hlt
pop
das
push
push
cli
mov
mov
notl
decl
inc
sbb
andl
aad
jbe
mov
xchg
inc
push
ficoml
cwtl
add
lret
inc
jg
inc
jp
ret
gs
mov
popa
xor
adc
jmp
push
xchg
cld
popa
and
xchg
int
jge
jl
inc
cmpsb
adc
mov
sbb
inc
movsb
mov
adc
sub
dec
sahf
add
cmp
jb
lcall
cmp
push
jge
negb
negl
fiadds
pushw
cwtl
cmp
dec
jecxz
xor
faddl
jl
outsl
jo
mov
out
push
aaa
stc
rcrl
mov
aam
nop
pop
clc
aaa
mov
mov
ret
jno
add
or
mov
push
lock
test
outsl
adc
push
jmp
out
call
push
sub
and
mov
bswap
rclb
mov
out
dec
loopne
stc
pop
mov
dec
aam
push
mov
mov
add
cmp
repnz
roll
int
adc
pop
fwait
sbb
negl
xlat
cmc
sbbl
mov
ret
sbb
in
lret
mov
ja
dec
mov
call
sub
dec
or
sbb
in
loopne
mov
add
jl
mov
loopne
sub
mov
push
lds
inc
mov
je
cmpsb
daa
stc
jbe
cmp
xchg
ret
dec
and
dec
mov
test
and
and
lahf
xor
add
xor
jecxz
push
xor
mov
sbb
and
call
cltd
hlt
les
aam
dec
in
cmp
enter
cmp
inc
ds
jno
pop
adc
mov
dec
sub
xor
test
mov
iret
gs
les
loopne
sarb
mov
int3
push
dec
and
sahf
scas
in
shr
dec
das
push
sbb
pop
push
sbb
fst
adc
in
mov
cmp
add
nop
ret
cmp
adc
push
jle
lcall
jl
gs
pop
ret
into
int3
cltd
inc
dec
mov
call
out
scas
int
pop
movsb
or
daa
jne
lahf
mov
cmc
popf
mov
shlb
xlat
sub
push
jle
iret
xchg
mov
das
and
xchg
sub
pop
jg
shl
and
test
insb
cmp
iret
cmpsb
lods
sbb
jns
mov
loope
hlt
popf
jo
sbb
icebp
ds
pop
xchg
fcoms
lret
mov
or
frstor
ret
out
mov
scas
add
mov
sub
shlb
inc
jle
dec
push
stc
pop
pop
adc
xor
push
lds
aam
fiadds
rol
mov
mov
bound
nop
sbb
xlat
push
ret
int3
mov
jp
cltd
mov
adc
add
insl
jno
movsl
sbb
cmpsb
std
mov
sbb
mov
cli
jge
repnz
adc
add
lods
das
adc
icebp
fbld
es
xchg
sbb
and
ja
adc
inc
mov
pop
incl
mov
insb
mov
int
pop
sub
pop
test
es
cmp
mov
lret
dec
insl
imul
inc
add
decl
aad
xor
leave
subb
outsl
add
jne
testl
push
pop
or
sbb
push
mov
aam
sub
cltd
pop
lcall
int3
inc
clc
pop
or
filds
neg
in
enter
jae
andl
or
jne
ljmp
fcomip
sbb
fs
sub
sarb
dec
cmp
in
arpl
seta
jecxz
leave
or
repnz
pushf
fdivl
add
leave
in
push
cs
mov
sbb
mov
insl
jle
rcl
mov
pop
and
and
adc
push
hlt
out
je
lds
das
daa
xor
and
pop
les
test
adc
repz
scas
adc
jecxz
test
out
xchg
out
lcall
mov
js
push
push
xchg
add
xchg
xchg
sbb
stos
lea
or
ja
inc
adc
clc
sbbl
inc
pop
xchg
push
pop
push
out
ss
cwtl
loop
lret
mov
sub
into
mov
cmp
loop
xor
or
inc
xchg
aaa
int3
into
scas
xor
mov
rcrl
mov
test
cmp
cmp
dec
enter
pop
mov
pop
mov
xor
fwait
addl
idiv
push
pop
inc
aad
fsubs
jp
inc
loope
sbb
jge
mov
sub
lods
aam
fcoms
push
aam
sbbl
push
addr16
mov
push
imul
pop
sbb
es
adc
lret
add
cld
inc
test
sbb
xorb
mov
dec
mov
ljmp
andl
inc
stos
cmp
rep
lret
test
mov
inc
adc
cs
inc
and
sti
orb
cmp
out
dec
testl
push
into
jmp
pop
in
lods
out
popa
pop
or
adc
mov
daa
out
inc
mov
inc
andb
stc
es
aas
out
push
xor
mov
sbb
pop
inc
mov
xchg
sub
sbb
sbb
mov
hlt
call
mov
enter
mov
jne
into
mov
push
sbb
adc
mov
push
sub
out
dec
cwtl
xor
das
lods
sbb
out
stos
sbbb
push
cmp
mov
fs
xchg
xor
xchg
aad
or
rorl
mov
lea
insb
mulb
lock
pop
clc
icebp
pop
aaa
sbbb
or
pusha
test
dec
xchg
aas
mov
jno
jg
into
je
iret
repnz
cmpsl
stos
pop
sbb
pop
stos
push
inc
test
lret
pop
mov
test
lcall
call
fucom
mov
movsb
add
movsb
insl
int
xor
test
push
mov
sti
lods
mov
adc
repnz
or
sbb
repz
rcl
sub
fimull
mov
frstor
call
adc
pop
mov
inc
scas
push
popa
lds
sahf
aad
cmp
ljmp
pop
mov
leave
push
mov
or
rcrl
rorb
inc
call
add
push
adc
and
lcall
sbb
sti
pop
std
inc
inc
push
sub
lods
or
dec
filds
mov
mov
loopne
mov
or
lods
arpl
addb
shr
mov
sti
mov
pushf
dec
cmp
and
xor
dec
lods
gs
int3
test
lcall
sbb
arpl
pop
lcall
jle
push
inc
repnz
lds
js
inc
adc
mov
sub
and
mov
sbb
ss
sbb
in
push
dec
pop
idivb
scas
jmp
cmp
sbb
lret
mov
popa
xchg
movl
in
and
pop
in
aad
sbb
jle
or
subl
cltd
sarb
into
adc
fwait
xchg
jl
inc
fwait
lcall
add
dec
push
aas
xchg
push
cmpsl
imul
dec
out
outsb
test
outsl
cmp
dec
pusha
xchg
mov
out
cmp
mov
pop
xor
push
test
lods
adc
cld
hlt
sbb
out
in
scas
inc
push
adc
fstps
inc
mov
jo
jae
and
lahf
xchg
nop
int
mov
pop
inc
push
out
and
push
mov
std
ret
mov
and
es
lock
pop
add
loopne
mov
push
adc
hlt
cld
push
mov
roll
dec
test
xchg
adc
jb
in
fdivs
out
testb
cld
sub
or
adc
inc
shrl
adc
fsubl
fstl
cmp
lds
insb
int
enter
fdiv
cmp
xchg
adc
sbb
cli
dec
lahf
sbb
jbe
mov
pop
cmp
lods
fistpll
fs
mov
and
or
add
pop
mov
lahf
hlt
subb
out
cmp
scas
and
jmp
or
cmp
sbbb
add
inc
ss
test
out
cmp
roll
sarl
and
mov
mov
mov
sbb
adcb
mov
enter
push
inc
jns
mov
mov
push
pop
test
hlt
fcom
adc
xor
bound
jmp
add
jg
aaa
jae
out
jmp
mov
xchg
xchg
jp
lea
inc
vmread
push
mov
stos
push
insb
js
jp
aaa
push
pop
cmpl
or
das
xchg
jno
jl
bound
push
push
pop
inc
adc
mov
push
imul
inc
add
cmp
mov
sub
aas
aaa
movsl
sbb
out
data16
mov
xchg
fs
mov
or
jg
lret
ret
dec
hlt
xchg
in
or
add
fsub
ret
inc
mov
sub
mov
test
pop
fcompp
ret
mov
inc
jle
add
out
xlat
adc
sahf
mov
rcr
xchg
mov
mov
adc
stc
dec
aas
pop
xor
test
sbb
mov
adc
or
int
mov
mov
rdtsc
sub
repnz
daa
xchg
mov
push
lcall
mov
lds
pusha
test
mov
and
dec
stos
xchg
test
xchg
or
xlat
lahf
out
ljmp
leave
adc
inc
cltd
xor
mov
subl
adc
andl
add
inc
fsubl
lret
push
lcall
dec
sbb
push
xor
shrl
and
and
imul
pop
mov
pop
outsl
test
stos
bound
jmp
xchg
cmpsl
adc
mov
or
test
jp
ds
repz
and
xor
cs
jecxz
and
outsb
xor
jne
aas
mov
or
imul
mov
push
iret
repz
shrl
jle
movb
push
cmp
push
ret
jmp
ficomps
push
add
jns
call
mov
and
movsb
jmp
outsb
int3
stc
or
cmp
pcmpeqw
lods
stos
movhps
xor
int
fs
and
or
or
subb
pcmpeqb
lods
mov
and
pop
lahf
mov
int
push
mov
adc
mov
push
mov
cltd
sub
jnp
out
lods
xor
adc
popf
jmp
adc
dec
mov
pop
ret
je
mov
jmp
fwait
jle
mov
sbb
daa
pop
mov
jnp
leave
popf
add
mov
or
add
inc
push
mov
dec
cltd
into
and
inc
cmp
dec
push
int3
mov
jp
addr16
pop
add
out
int
in
push
addr16
pop
sub
inc
adc
push
jo
int
rorl
jmp
jne
cmp
adc
or
fwait
sti
add
xor
jns
push
pop
es
lods
stos
lods
imul
fisubrs
cmpsb
jb
push
leave
adc
xor
lcall
cmp
pusha
push
lret
sub
int3
pop
inc
je
pop
xchg
cmp
pop
data16
rol
xorl
push
mov
dec
pop
push
fmulp
fsub
repz
inc
jg
subb
in
cmp
xor
sub
inc
inc
sbb
adc
mov
xchg
outsb
add
fwait
inc
idivl
bndldx
xchg
dec
outsl
add
std
lret
aaa
rcrb
cli
mov
xor
cld
lock
mov
and
arpl
sub
ret
dec
dec
add
sbb
cmp
inc
lcall
clc
pop
add
add
xor
clc
lahf
mov
cmp
mov
inc
testb
mov
into
sarb
loop
jns
testl
pop
nop
mov
add
aaa
ret
mov
adc
cmp
dec
pop
fsubrp
aam
sbb
orl
or
movsl
out
das
sahf
out
ret
mov
cmp
cvtps2pi
inc
dec
mov
sub
push
stc
sbb
jns
cmpsb
test
xchg
inc
sahf
in
movsb
or
jmp
and
aas
into
nop
sub
push
pop
pop
adc
lret
ret
xchg
js
daa
call
lahf
xor
dec
or
addl
fcmovnbe
xor
out
mov
movsb
scas
adcl
or
gs
and
pushf
or
pop
ds
test
pop
pop
in
and
sub
dec
cmpsb
call
leave
xchg
push
out
enter
out
mov
push
mov
inc
pop
insb
xchg
dec
das
jno
jmp
jbe
mov
insl
bound
push
mov
inc
sub
cmp
mov
out
mov
sbb
cmp
hlt
test
aam
hlt
out
shrb
ret
push
xor
test
int
cmp
push
pop
sub
fisttpl
or
cmp
fistpll
fucomi
jmp
adc
mov
dec
aad
push
mov
mov
pushl
push
mov
xchg
fldl
jns
pop
gs
jb
fistl
sub
lods
jmp
fidivl
in
je
cwtl
jnp
sbb
or
add
pop
adc
testb
outsb
es
inc
scas
call
fistpl
cltd
mov
pusha
fnsave
lock
or
push
cmpl
jle
mov
pop
dec
rcrb
insb
test
lahf
xchg
in
pop
add
fisttpl
out
fidivrl
out
mov
sub
lar
into
in
dec
sbb
jg
xchg
push
sub
lods
and
dec
mov
movsl
sbb
add
and
push
shrb
xchg
push
pop
cmc
cmp
fcoms
sub
or
stc
pop
dec
sub
stos
paddd
scas
pop
es
aaa
in
js
inc
gs
addr16
outsb
adc
out
push
je
jmp
mov
pop
in
or
xchg
cmp
add
aam
in
sbb
inc
dec
iret
xor
sub
insb
or
rclb
inc
and
push
inc
inc
testw
sbb
clc
mov
imul
xchg
lea
cmc
adc
sub
jo
adc
or
add
cmp
push
add
cmp
add
jne
add
push
pop
xchg
add
mov
cmpsb
scas
fstl
xchg
ret
jg
lock
clc
xchg
std
or
lahf
cmp
loopne
iret
aas
lret
out
or
das
sbb
outsb
sar
xchg
jmp
call
repnz
in
xor
add
and
sub
fcompl
inc
sub
or
add
xor
into
inc
sbb
sbb
lods
and
popa
xchg
dec
hlt
dec
push
pop
pop
xor
cmc
addb
pop
mov
jmp
dec
pop
xchg
mov
cwtl
shll
dec
mov
cmp
addl
jne
sahf
dec
aad
inc
imul
out
jmp
icebp
mov
ja
adc
inc
cld
outsl
popa
inc
adc
mov
mov
fists
adc
push
out
xorl
inc
mov
dec
rorb
sbb
pop
mov
mov
ss
jg
push
subl
mulb
or
cld
cli
cld
or
clc
xor
loop
dec
add
mov
in
enter
cmp
test
xchg
pop
test
int3
loopne
inc
in
cmp
fdivrs
mov
pop
stc
mov
arpl
fs
cltd
loope
addl
iret
jle
arpl
out
xor
fistpll
dec
jl
les
insb
xchg
test
fxch
into
in
mov
hlt
mov
lfs
inc
dec
inc
int3
lcall
mov
outsl
fsubr
mov
daa
sub
imul
fyl2xp1
into
mov
enter
jmp
sub
popf
xchg
cwtl
divb
push
insl
adc
bound
enter
int
dec
cmpb
js
in
fwait
scas
std
in
sbb
in
pusha
and
and
push
mov
cmp
in
mov
pop
outsl
and
aaa
divb
add
daa
out
mov
cmp
fsubrs
ds
push
pop
stc
pushf
fwait
jb
add
into
lret
testl
pop
dec
push
add
rol
sbb
sub
cmpl
xor
jg
push
jl
mov
xchg
and
in
jecxz
mov
jb
enter
jb
loop
rcrb
jl
push
push
shll
out
hlt
lret
cmp
hlt
sub
push
pop
inc
mov
xlat
mov
lret
sbb
xlat
add
movsl
xchg
lea
xlat
xchg
movsb
push
inc
inc
push
icebp
add
adc
sbb
fistps
insl
out
dec
mov
inc
fisttpl
cltd
pop
and
sahf
jl
fcoms
push
sbb
cld
out
push
pop
inc
outsl
out
mov
je
jnp
test
pop
cmpsl
and
xchg
xor
lods
adc
insl
rol
dec
mov
cmp
les
sub
dec
dec
fxch
or
int
push
movl
xchg
and
xor
push
cmp
nop
jp
loopne
mov
xchg
aaa
mov
and
or
xchg
leave
sub
jno
aas
mov
cmp
mov
aam
cmp
test
insb
cmp
call
push
mov
sbbl
mov
or
mov
dec
add
and
enter
stos
in
inc
outsb
inc
inc
inc
arpl
movsl
jecxz
mov
push
lret
adc
pop
or
jne
push
mov
fucom
xchg
leave
fsubrl
cmp
sub
pusha
mov
dec
test
scas
xchg
cmp
adc
fwait
add
sub
ds
sbb
cmp
sub
cltd
call
xchg
enter
movsb
sbb
adcb
sbbb
push
xchg
pop
stc
mov
movsl
jl
adc
lea
mov
jb
fistps
add
roll
fildl
mov
pop
aam
pop
jge
gs
mov
enter
fdivl
inc
lods
xchg
fdivr
xchg
lods
push
das
mov
mov
cmp
das
pusha
push
sbb
jae
jg
mov
std
jg
lock
std
add
xor
data16
add
jb
mov
sbb
sbb
lods
fs
ret
push
clc
mov
mov
push
push
fbld
mov
addr16
jp
mov
mov
aaa
icebp
push
sbb
in
mov
add
push
inc
fsubl
pop
xchg
adc
std
js
pop
les
lea
mov
pusha
ror
sub
test
je
outsl
cmp
jnp
or
add
fistpl
push
mov
filds
lcall
daa
mov
and
imul
adc
xchg
js
jo
mov
pop
hlt
mov
fidivrs
pop
push
lahf
add
dec
rcrb
lahf
cmp
or
mov
jmp
call
jl
xchg
jmp
cmc
je
pop
jl
mov
lds
fucomi
enter
lret
aaa
cmp
out
mov
sub
mov
hlt
lds
mov
test
mov
dec
mov
adc
cmp
add
and
push
test
adc
push
pause
pusha
in
outsb
fbstp
pop
cld
addr16
arpl
cmpsl
cmp
adc
fwait
and
daa
sub
sub
sbb
mov
mov
adc
fldt
jmp
jecxz
cmpsb
inc
or
in
sbb
add
inc
stc
pop
sbb
xchg
xchg
xchg
add
xor
xchg
jns
push
mov
cld
popa
jno
and
ljmp
out
cmp
sub
pushf
xchg
jle
lock
fldl
rclb
rolb
jle
cmp
sub
mov
fisubrs
fs
xchg
stc
out
and
push
inc
jg
and
xchg
inc
adc
xor
bound
jle
mov
test
push
adc
out
mov
xor
inc
or
movsl
scas
sbb
xchg
xchg
push
cwtl
subl
dec
inc
fdiv
dec
pop
dec
lds
mov
stos
adc
mov
xchg
aaa
dec
ja
mov
jmp
cmp
xchg
pop
mov
dec
mov
loop
dec
dec
cmp
stos
insb
or
sbb
jo
add
sbbb
or
mov
mov
xlat
and
mov
add
je
add
cmp
cmc
in
rcrb
adc
cli
sbbl
je
pop
clc
or
inc
int3
int
enter
sub
jle
jne
adc
fstp
jae
in
bound
imul
cld
fisubl
lea
stc
pushf
subb
inc
or
mov
pxor
mov
inc
lret
xor
mov
frstor
adc
js
xor
movsb
add
stos
in
ds
jno
fs
add
out
mov
shll
and
jp
inc
stos
sahf
iret
ss
jns
mov
insb
push
and
negl
scas
or
xchg
jl,pn
push
ss
call
jle
and
or
and
ljmp
ja
in
idivl
dec
adc
xchg
mov
ds
repz
out
popf
shrl
mov
outsl
xchg
mov
cwtl
push
je
ret
clc
arpl
adc
arpl
pop
das
pop
bound
stos
aam
lahf
movsl
aad
pop
or
jp
mov
rorb
ret
pushf
nop
pop
pop
loop
push
sbb
mov
call
movsl
idivl
inc
push
std
mov
call
push
mov
shll
pusha
push
jo
dec
rcl
xchg
fnstcw
xor
loop
loop
in
mov
add
in
xchg
xor
jb
stc
push
in
inc
ret
pop
flds
sub
adc
cs
jmp
or
pop
or
nop
lahf
aaa
nop
dec
jg
inc
jg
cmp
inc
in
out
push
loop
pop
cs
push
inc
mov
rcr
imul
sub
loope
push
std
inc
ficomps
xor
aam
jp
mov
cltd
in
push
and
mov
or
data16
jge
lods
adc
icebp
xor
mov
sub
int3
imul
cmp
nop
xchg
mov
jne
fisttpl
das
in
add
insl
ret
pop
sahf
xor
cmp
test
ret
popl
lret
sub
pop
inc
and
mov
rcrl
mov
out
xchg
push
add
or
and
mov
fcomps
loopne
jno
sbb
das
insl
add
mov
pusha
xor
pop
xchg
jmp
scas
mov
vpxor
or
mov
add
cli
mov
xor
loop
cld
push
jns
test
arpl
cmpsl
jg
and
dec
fstpl
fidivrl
mov
mov
daa
mov
out
push
outsb
rolb
cli
jno
stos
in
sti
lret
cmp
xchg
jp
je
inc
scas
jno
lcall
outsb
mov
and
or
rcrl
mov
xor
pop
sahf
sarl
jecxz
pop
je
jp
divl
cmp
loop
pop
rclb
and
pushf
aas
inc
sahf
imul
lahf
push
aam
mov
xchg
aam
aas
adc
scas
fidivrl
lods
push
loop
cmp
fldl
test
sub
pop
and
inc
sbb
notl
lods
pop
fiadds
aad
push
push
or
and
xchg
inc
cli
sahf
jo
aaa
xchg
mov
pusha
repnz
inc
inc
lock
addr16
sbb
push
pop
sbb
in
insl
lcall
and
push
dec
js
jecxz
test
fdivs
testb
aam
pop
adc
sub
scas
mov
xor
das
inc
test
lcall
or
testl
mov
mov
mov
lret
mov
ljmp
lea
stos
sub
adc
fildll
mov
lods
repz
mov
mov
ret
fcmovu
out
fs
jecxz
mov
test
stos
popf
sub
sub
dec
dec
jl
ss
adc
sarb
shlb
out
xchg
test
es
outsl
bound
imul
sub
cld
add
icebp
mov
adc
repnz
xor
bound
add
lret
daa
cmp
out
and
mov
pop
into
inc
adc
pop
ret
jb
adc
lods
and
dec
push
fisubrs
jge
or
shrl
xor
mov
xchg
subb
iret
push
cmp
sbb
sti
cmpsb
dec
sti
fs
rcr
out
hlt
imul
mov
je
leave
bound
adc
pushf
movsl
mov
or
sahf
push
inc
lcall
add
in
cmpsb
mov
sub
cmpsb
dec
push
or
inc
or
pop
stc
pusha
addr16
loop
fsubrs
mov
lock
shlb
std
xchg
cmp
push
push
arpl
jmp
cli
add
movsl
sbb
pop
rorb
arpl
das
cltd
lods
pop
sub
or
jg
sub
adc
and
popa
cwtl
gs
in
pusha
ficoml
daa
push
mov
hlt
arpl
push
jnp
xor
mov
pop
sub
inc
adc
adc
rclb
mov
xchg
leave
popf
mov
ficompl
stos
sbb
pop
or
jbe
xchg
ds
aas
jo
inc
cli
sbb
mov
lcall
sub
add
cli
stos
cli
stc
mov
ljmp
xchg
push
adc
mov
pop
xchg
dec
int3
dec
or
daa
aam
dec
gs
xlat
in
adc
nop
add
je
outsl
dec
sbb
es
push
xlat
pop
aad
lret
jecxz
call
dec
mov
int3
js
push
imul
sti
or
mov
sub
rclb
or
neg
pop
push
mov
hlt
mov
pusha
and
sbb
fs
mov
hlt
mov
clc
and
mov
add
jp
inc
pop
or
cmp
stos
jp
sbbb
in
js
stos
or
js
dec
xchg
push
popa
cmpsl
test
cltd
or
dec
ljmp
adc
clc
into
loopne
mov
jns
sbb
cltd
or
rol
test
popf
pop
pop
xchg
daa
negl
or
push
loopne
fimull
push
mov
push
pop
mov
cmpsl
repnz
mov
adc
sbb
xor
in
and
shl
insb
leave
push
popf
shll
sbb
lock
in
ret
cmpsb
xchg
pop
mov
loopne
jecxz
fs
loope
jp
scas
push
mov
fsubrs
fimull
testl
loop
sbb
inc
push
shlb
inc
loopne
dec
jno
push
push
xchg
sbb
aas
add
and
cmp
lods
icebp
jo
jl
xchg
daa
shr
testl
jmp
lret
out
add
in
ret
sar
pop
aam
arpl
or
pop
push
xrelease
addl
hlt
sub
mov
add
seta
rep
sub
dec
cmp
ret
dec
aaa
or
and
dec
sbbb
in
mov
sub
fcomp
lsl
das
mov
adc
sub
or
xor
lock
pop
ss
dec
daa
push
push
fs
jne
bound
jp
sub
inc
in
cmp
mov
or
xchg
fdivrs
nop
in
and
in
leave
mov
mov
xchg
xchg
sbb
sub
test
or
mov
and
data16
mov
fsubrl
in
shlb
cwtl
lods
pop
jnp
inc
jmp
icebp
mov
cli
loop
sub
enter
rorl
adc
movsl
and
jg
out
sub
fsubl
adc
leave
sub
xor
into
lret
adcb
xchg
fwait
cmp
mov
inc
outsl
cli
test
push
dec
and
cs
sub
jo
xchg
in
jle
aam
or
jnp
push
adc
lea
or
push
pop
jecxz
and
stos
cmc
push
adcl
loopne
mov
loop
faddp
mov
into
je
mov
into
mov
pop
pushf
or
push
lock
jge
xchg
push
lahf
insl
inc
mov
insl
sbb
jle
lret
cli
movsl
bound
fs
sti
and
daa
dec
lahf
sbb
lea
leave
syscall
into
dec
movsl
xor
mov
clc
je
cmp
mov
idivb
xor
repz
mov
and
mov
sti
xor
cltd
xor
iret
hlt
sbb
push
jle
subb
pop
inc
push
movsl
insl
mov
xchg
mov
lods
inc
jae
xchg
cmp
and
lods
sbbb
push
xchg
popa
rol
pop
nop
add
sbb
xchg
mov
xor
fistl
sti
mulb
cmp
xchg
pop
mov
xchg
lret
or
movsb
sub
push
adc
pop
and
lcall
adc
mov
sahf
addb
test
sbbl
sbb
sbb
gs
mov
lock
push
outsl
loop
jo
fadds
jge
and
or
dec
es
scas
enter
jae
cltd
mov
sbb
pop
xor
mul
mov
xor
in
jp
lahf
mov
xor
ss
pop
sbb
pop
cmc
iret
gs
iret
adc
mov
inc
add
mov
cs
clc
xor
sbb
mov
mov
stos
dec
sbb
rcll
jo
rcll
cmp
enter
inc
rol
shll
sub
lahf
stc
fistpll
mull
dec
notb
cwtl
rol
pop
mov
imul
mov
mov
mulb
sub
sbbl
pop
movsl
stc
and
mov
data16
adc
sub
xor
sub
sbb
mov
xchg
lock
cmpsl
cwtl
dec
cmp
mov
sub
pop
ret
sahf
shrb
out
mov
mov
and
nop
push
jl
dec
jo
das
inc
enter
in
in
out
into
das
adc
rcrl
pop
add
xor
out
test
js
mov
popl
out
int3
outsl
mov
icebp
mov
pop
in
loopne
dec
xor
jnp
inc
xchg
mov
loope
scas
mov
in
mov
hlt
ret
add
mov
arpl
push
cmpsl
xchg
jae
mov
cmp
cmp
mov
repz
test
mov
shrb
jmp
mov
inc
xchg
mov
test
pop
ja
hlt
mov
jne
call
popl
pop
push
cld
std
xchg
mov
rol
jg
fwait
ljmp
adc
movsb
push
shr
push
lret
or
xor
push
pop
adcl
pop
sbb
push
jp
insb
xchg
adc
push
int
imulb
pop
leave
pushf
add
mov
test
mov
push
imul
cmpsb
cld
xchg
cmp
lahf
mov
scas
aam
ret
cmp
pushf
dec
mov
jno
lds
inc
loope
pushf
in
or
inc
mov
divb
adc
push
sbbb
les
dec
xchg
cltd
ss
mov
int
leave
pushw
sarb
clc
or
jno
mov
icebp
lds
cmp
insl
dec
dec
inc
xchg
jl
xchg
sbb
xor
fs
in
stos
cli
pop
dec
push
in
inc
push
or
mov
pop
scas
pop
arpl
test
inc
and
pop
ret
pop
adc
dec
mov
push
push
push
lds
test
out
xor
and
sub
sub
pop
out
aam
add
je
push
xor
inc
or
stos
or
jp
mov
fcmovb
pop
add
dec
mov
cmp
out
inc
in
or
jne
dec
ljmp
push
adc
xchg
shrl
out
das
xchg
movsl
cmp
cs
jge
lcall
mov
mov
and
movsb
xchg
and
mov
scas
test
stos
add
sahf
xchg
push
je
lock
cli
dec
jmp
sbb
stc
xchg
rorb
in
fdivr
subl
hlt
frstor
or
loopne
cmp
rolw
jg
and
clc
insl
inc
push
lea
sub
scas
add
jno
loope
pop
cmp
loop
fisttpl
fucomip
sbb
setp
in
adc
mov
pushf
pop
sbb
xor
jb
jbe
in
sbb
inc
movsb
fistps
enter
sub
cli
sub
insl
push
fadd
jl
ret
jmp
dec
xchg
outsb
or
ficompl
pop
nop
add
cmp
xor
test
rcll
leave
lea
dec
push
inc
frstor
and
lret
lret
pop
sbb
and
and
shll
std
mov
add
adc
rorl
sub
insl
add
jae
push
dec
movsl
jbe
pop
jmp
mov
adc
imul
dec
call
dec
mov
xorb
mov
mov
xchg
cli
mov
fwait
and
cmp
sbb
movsb
add
sbbb
rcrb
push
xor
mov
dec
adcb
adc
mov
mov
or
jp
lock
lods
subl
lcall
xor
push
pushfw
loop
and
push
sub
scas
les
xchg
test
out
enter
mov
cmp
xor
xlat
sbb
scas
pop
inc
mov
or
cmp
fwait
xlat
push
std
test
add
jecxz
xchg
mov
loopne
cltd
outsl
and
popa
in
jnp
into
inc
mov
fs
mov
pop
js
sbb
sbb
lahf
fldcw
lcall
dec
bound
adc
pushf
pop
cli
or
orb
stos
sub
cmp
add
imull
mov
sahf
leave
mov
pop
cltd
jle
or
aad
lock
inc
dec
movsb
loopne
movsb
push
push
cltd
xor
inc
or
mov
es
lahf
push
outsl
or
cmc
or
pop
pop
les
arpl
add
test
mov
outsb
sub
sub
leave
mov
stos
jle
and
int
or
dec
mov
jg
repnz
clc
dec
jp
mov
out
mov
push
sub
push
in
push
jnp
repnz
mov
sbb
dec
jns
in
roll
lret
or
xchg
cmp
pusha
mov
es
enter
cmpsb
rorl
scas
ret
or
std
icebp
push
dec
xor
mull
stos
out
rep
nop
xchg
into
mov
in
push
call
pop
fistpll
arpl
loope
sbb
adc
adc
pop
jg
dec
outsb
push
daa
inc
fwait
cmp
rcrb
movsl
push
mov
mov
ror
mov
adc
push
test
mov
int
xor
lock
fcoml
cmpsl
push
shl
inc
movsl
std
push
shrl
rcrl
inc
lcall
sub
andb
dec
push
fistl
inc
fs
inc
div
fildll
cltd
stc
jle
xchg
and
sub
xchg
int3
mov
cmpsb
and
les
test
stos
aaa
mov
pop
hlt
xchg
adc
dec
dec
inc
into
cmp
outsl
xchg
cmp
mov
leave
mov
adc
push
dec
nop
dec
jns
xor
dec
roll
sbb
popf
dec
xchg
movsl
add
pop
in
sti
std
fists
and
xchg
and
sbb
fiaddl
lret
mov
cmpsl
mov
sbb
jle
je
add
push
or
or
mov
in
inc
fs
lahf
divb
test
sub
insb
movsl
push
call
movsb
scas
imul
iret
insb
lods
pop
lcall
jne
daa
pop
scas
fidivrl
inc
sbb
xorb
push
xchg
fldt
in
stos
jae
push
cwtl
scas
inc
icebp
inc
dec
sub
cmp
fstpl
repnz
into
add
ds
push
pusha
jmp
mov
cmp
inc
fcompl
adc
lds
dec
loop
js
lret
jae
add
ret
push
out
dec
aad
dec
xchg
jae
hlt
shll
loop
xlat
inc
or
or
fistpl
mov
mov
pusha
mov
add
and
push
mov
jno
mov
test
cmp
push
ljmp
sbbl
mov
insl
loop
sub
loopne
mov
pusha
loope
pop
jnp
in
jp
negl
out
test
pushf
or
xchg
add
clc
test
ss
clc
fs
scas
add
adc
orl
fdiv
or
outsb
inc
cmc
adc
xor
and
dec
mov
mov
adc
pop
xchg
dec
fiadds
rclb
shlb
mov
add
inc
adc
fldt
loopne
popa
inc
push
aam
inc
push
mov
icebp
add
jo
out
mov
and
add
mov
add
out
mov
cwtl
xchg
sbb
scas
rcll
mov
mov
aam
dec
xchg
mov
testl
decb
push
jmp
dec
cmpsl
push
leave
adc
test
cmp
mov
aad
dec
das
dec
pusha
js
pop
cmp
pushf
mov
pop
inc
rcll
fwait
sbb
imul
mov
xchg
fistpl
hlt
push
or
xor
in
jae
aam
stos
enter
inc
jbe
shrl
inc
call
ja
pop
xchg
aad
pop
icebp
dec
movsl
mov
jge
addr16
and
mov
lcall
cmpsl
movsb
imul
lods
jecxz
push
rorl
sarl
pop
adc
adcb
sahf
mov
dec
stc
roll
and
stos
leave
jo
mov
hlt
inc
adc
fwait
and
fucomp
xor
movsb
pop
adc
loopne
ljmp
ficomps
fcoml
push
push
aas
inc
ss
or
subl
addl
inc
fsts
pop
shlb
in
mov
cmp
loope
mov
add
leave
fwait
mov
outsb
mov
sub
lea
outsl
pop
imul
daa
jle
mov
pop
or
push
in
gs
xchg
divl
sbb
xchg
sub
mov
mov
int3
inc
adc
cmp
outsl
movsl
jno
fs
xor
das
imul
jbe
adc
jge
jle
add
aad
lock
cli
jne
test
cmpsl
fmuls
iret
sahf
sti
mov
fs
popa
add
lea
stc
or
adc
clc
fcoml
mov
ss
mov
iret
iret
sbb
push
movsb
in
shlb
ja
adc
or
add
sub
lods
cs
pusha
adc
stos
cmp
pop
cmp
insb
aam
jnp
add
lahf
and
mov
mov
dec
mov
scas
add
adc
cmc
lcall
cli
inc
and
sti
ds
or
jp
xor
clc
mov
jns
imul
sbb
add
leave
pop
cmp
cmp
cs
sub
jmp
xor
push
mov
fcoml
ss
lcall
in
xor
out
cmp
test
adc
push
xor
inc
inc
jns
repnz
addr16
ljmp
add
pop
add
in
mov
aas
cmp
out
in
out
rclb
xchg
and
mov
fnstcw
test
shll
mov
sub
cmp
shrb
lods
jp
mov
push
idiv
dec
xchg
je
inc
ljmp
push
inc
adc
in
aad
xor
cmp
pop
repnz
push
mov
es
mov
jb
xlat
jl
dec
fists
cmp
push
imul
imul
mov
adc
cmp
test
add
and
insb
fldenv
sbb
pop
pushf
test
xchg
lock
test
push
dec
pop
cld
sahf
ret
lea
negb
mov
lret
test
sbbl
xor
and
insl
mov
dec
mov
repz
insb
xchg
push
sub
fiadds
mov
jl
mov
push
lods
arpl
jae
stc
add
cmpsb
ret
dec
cmp
jae
lods
fcoml
imul
push
data16
and
xchg
sub
insl
dec
adc
inc
cs
and
ljmp
test
aad
clc
jne
mov
and
aaa
jbe
mov
inc
push
mov
adc
or
aas
mov
xor
stos
dec
rcll
mov
add
enter
cltd
sub
push
sbb
mov
movl
lret
xchg
ret
outsl
add
lahf
xchg
mov
dec
mov
adc
cmp
or
sahf
scas
push
test
movsb
push
jg
pop
push
std
pop
lea
jne
sub
mov
mov
idivl
outsl
mov
movsb
xchg
outsl
sbb
xor
andb
mov
scas
sbb
cmp
aas
orb
mov
add
sub
pop
cmp
and
nop
jnp
sbb
arpl
pop
int
lahf
std
pop
adc
jnp
sti
mov
rolb
sub
jmp
cmp
and
in
mov
xorb
mov
sbb
jmp
cmp
popf
jae
lods
bound
push
iret
jmp
jb
mov
xor
or
cmpsb
mov
jo
sbb
and
xor
lret
and
mov
xor
pop
std
daa
insl
add
add
dec
ja
pop
pop
xchg
dec
fcompl
int
test
adc
jmp
and
xor
add
sbb
cmp
cmpsb
ja
push
mov
rorb
cld
negb
sub
jge
xor
sub
div
mov
lds
inc
pop
xchg
jecxz
daa
xor
xchg
pop
cwtl
and
and
stos
test
pop
dec
aaa
loopne
jns
repz
and
in
insb
sbb
sahf
loopne
hlt
dec
dec
mov
mov
jecxz
xchg
xor
imul
jecxz
inc
fisttpll
sbb
inc
adc
cmc
arpl
push
ds
mov
bound
sbb
and
movsl
sbb
rorb
or
in
aas
adc
or
xor
dec
jl
add
dec
sbb
lods
idivl
addb
bound
cmc
dec
xor
adc
dec
push
addb
sub
cli
pusha
enter
ficompl
pop
push
je
lock
or
insl
loope
add
popa
xor
xor
pop
mov
shlb
sti
xor
cmp
cli
mov
je
xor
sbb
cwtl
mov
fwait
rclb
push
ja
add
flds
xorl
shlb
ja
adc
gs
lret
int3
mov
adc
outsb
lods
in
int3
mov
jmp
xor
ds
mov
cmp
cmp
es
and
loope
sub
push
push
hlt
leave
inc
loop
fistps
mov
or
push
insl
and
data16
push
hlt
pop
xor
and
enter
push
sti
sub
adcl
adc
pop
push
push
cmp
sub
ret
mov
inc
inc
pushf
mov
fisubs
and
cwtl
pop
in
sbbb
outsb
loopne
repz
or
jo
call
cmc
sbb
adc
mov
mov
pop
in
in
lret
imul
hlt
fidivrl
lret
ds
in
decl
xchg
mov
scas
mov
mov
xor
xor
movsl
lods
lock
xchg
sub
cmp
pop
jnp
adc
adc
adc
repz
sbb
in
mov
mov
out
addr16
ss
out
fs
out
ret
rorl
popa
in
cli
pushl
xchg
lock
xlat
in
fmuls
xor
pop
cmp
xlat
inc
sub
scas
pop
sub
push
mov
dec
and
sti
inc
bound
sarl
lods
scas
sbb
stc
sub
mov
push
inc
lds
ljmp
dec
je
fs
xorl
jl
test
in
js
mov
sti
push
cld
or
mov
inc
cli
xor
dec
rolb
mov
push
fiadds
pushf
fistpl
and
cwtl
dec
jbe
insb
ret
xchg
xor
movsb
jb
jle
loopne
inc
pop
sub
jnp
xchg
repnz
testl
out
xchg
inc
adc
lahf
loop
sti
xchg
jbe
push
xchg
mov
jmp
inc
pop
xchg
sti
mov
fwait
or
inc
aas
add
xorl
and
neg
adc
mov
sti
nop
push
and
cmp
sub
pop
dec
jle,pt
sub
iret
or
adc
jle
in
mov
sbbl
cs
xchg
push
fwait
pop
out
cmp
dec
and
and
daa
repz
push
outsb
stos
or
ficoms
mov
jne
jmp
mov
xchg
mov
insb
std
pop
iret
pop
mov
jp
push
sub
dec
icebp
lret
xchg
incb
push
mov
jge
jb
jbe
hlt
lods
clc
add
and
into
arpl
cmp
ja
fsubl
sbb
push
fisubrs
sub
xor
pop
addr16
mulb
xor
fistpll
add
jmp
mov
mov
adcb
pop
out
std
fsubs
and
dec
pop
inc
ret
movsb
pop
sbb
into
push
std
push
pop
outsl
xchg
sub
iret
mov
dec
mov
call
aam
pop
sub
push
inc
pop
enter
pop
aam
ja
inc
divb
mov
or
test
in
addr16
push
xchg
mov
lds
cmpsb
sub
adc
jmp
xchg
jecxz
out
mov
leave
push
xchg
stc
stos
pop
mov
aas
inc
sti
and
pop
mov
call
clc
iret
add
push
cmc
cmpsb
in
sub
fwait
ret
repnz
stc
sbb
fwait
mov
dec
and
je
mov
mov
or
pusha
xchg
push
imul
popf
mov
sub
sbb
mov
xlat
nop
push
dec
xor
fiaddl
fstpt
xchg
cmp
adc
or
cmp
adc
pop
std
addb
and
cmp
arpl
jmp
adc
push
jnp
push
xor
pop
jl
aad
xchg
pop
mov
sbb
inc
jmp
xor
out
cli
or
out
sbb
dec
fmull
adc
arpl
pop
adcb
mov
cs
push
je
rcrl
loop
inc
pop
in
xor
fsubrl
xchg
scas
xchg
jmp
jae
mov
sti
cmp
xchg
sub
jae
adc
fldenv
mov
cmc
testb
je
dec
pop
pop
add
jns
ljmp
mov
stos
nop
jb
push
je
js
inc
mov
lahf
xor
xor
and
lret
rcll
cld
or
inc
repnz
fwait
add
push
push
sub
add
lea
sbb
aas
out
rcl
or
out
cli
push
xchg
outsl
and
call
test
fld
cmc
pop
pop
inc
cmp
push
aad
jbe
mov
mov
adc
add
adc
mov
rcrl
out
add
repz
mov
mov
mov
xor
fsubp
pop
xchg
mov
jnp
cwtl
cmc
push
or
das
push
sbb
xor
mov
xchg
sbb
adc
cmpb
adc
gs
repnz
movsl
adc
pop
mov
inc
fisubrl
les
add
and
outsl
cmp
movsl
or
mov
mov
dec
fildl
aas
rorl
adc
pop
xchg
jns
hlt
mov
xchg
fcom
mov
pop
sbb
jecxz
mov
out
xchg
out
cmp
jo
and
mov
fisubrs
imul
inc
jecxz
in
fsubs
sub
repz
jp
sub
xor
das
push
push
pop
mov
popf
in
dec
cwtl
inc
shlb
sbb
jge
int
xor
jl
add
das
mov
or
sahf
fwait
jne
mov
movsl
pop
push
pop
mov
push
mov
loop
mov
rclb
mov
dec
inc
xor
lea
push
sub
cmpsb
mov
sub
adc
rcrl
cmp
cmp
rcrl
lods
es
cmpsb
jnp
testl
mov
pop
clc
ret
sbb
jge
aaa
in
aad
mov
lods
add
jb
sbb
movsb
les
fildll
sbb
movsl
mov
or
dec
je
sub
cmp
adc
mov
or
cmp
dec
add
cli
xor
mov
pop
pop
jo
rorb
out
jp
xchg
sbb
insb
or
sub
cltd
and
mov
iret
out
push
jmp
imul
mov
mov
or
loope
jg
inc
push
enter
dec
jae
jne
mov
xchg
mov
mov
popa
leave
ror
in
pop
mov
f2xm1
call
jmp
pop
fsubrl
xor
pop
mov
vucomisd
jno
lahf
lods
xor
dec
jecxz
xchg
xchg
cmp
mov
mov
sbb
fidivrl
sbb
loopne
jge
cmp
and
int3
fldenv
and
pop
shlb
mov
aad
ja
fnsave
inc
in
sub
cwtl
and
sub
mov
arpl
fwait
test
or
loopne
xor
and
and
pushl
std
out
hlt
and
das
divl
outsl
inc
cmp
out
xlat
push
pop
mov
in
hlt
adc
push
sub
sub
cmp
fs
test
xchg
pop
jg
dec
out
cmp
inc
fisttpl
outsb
into
test
sub
je
pop
shll
lds
pop
push
imul
cli
lret
les
lret
daa
loop
arpl
fcomi
sbbl
xor
bnd
jmp
and
pop
push
add
dec
out
jecxz
addr16
iret
push
mov
dec
insb
add
or
sahf
test
fsubrl
mov
or
adc
dec
popf
addr16
fsubrl
mov
imul
stc
inc
mov
dec
jb
clc
lcall
pushf
arpl
pop
insl
add
or
xchg
in
outsb
jbe
imul
aas
out
popf
mov
dec
std
aaa
jmp
mov
push
push
cmp
in
inc
test
lods
shrl
push
push
mov
and
push
or
nop
dec
addb
bound
bound
data16
enter
adc
jbe
dec
sub
fbld
inc
popa
ret
imul
lods
mov
or
fcoms
movsb
dec
push
rcrb
mov
imul
cmp
cli
loope
cmp
fbld
mov
cwtl
xor
mov
sub
and
pop
mov
mov
jbe
jle
dec
mov
pushf
pop
cwtl
cltd
push
mov
jg
xor
jo
xor
subl
stos
add
push
andl
mov
mov
dec
mov
test
enter
out
shlb
push
cltd
std
or
dec
js
sub
pusha
cmp
nop
xor
mov
fdivp
and
mov
cmc
jecxz
cs
mov
aam
mov
scas
mov
imul
xor
pop
mov
xor
pop
stos
sbb
adc
xor
sub
jbe
mov
sti
jl
scas
inc
imul
hlt
adc
fs
inc
adc
sbb
in
mov
dec
xchg
or
mov
pop
dec
sub
jle
mov
inc
adc
dec
mov
movl
and
dec
pop
mov
testb
lock
popa
pop
in
pushl
pop
pop
and
xlat
jo
adc
adc
inc
dec
cmp
xchg
or
ficomps
mov
jne
pop
jp
mov
jo
adc
popa
and
sbb
jl
xor
enter
jle
mov
fstp
pop
and
es
repz
adc
push
iret
or
adc
cmpb
cli
pop
sbb
add
in
xor
scas
jecxz
sbb
jg
scas
or
xadd
lcall
lds
mov
call
mov
xchg
add
xor
lret
in
aas
dec
sbb
cmc
and
fsts
mov
or
fisubrl
stc
mov
jno
xchg
push
loope
les
jo
fiaddl
jecxz
lds
or
test
cmp
push
xor
repz
xchg
mov
push
aas
inc
pop
xor
icebp
scas
pop
mov
pop
in
testl
push
stos
cld
iret
mov
push
jmp
mov
xorb
adc
movsb
mov
loopne
fst
pop
arpl
sbb
or
shl
pop
popf
xorl
push
fcomip
imulb
pop
aam
push
int3
lods
pop
push
addr16
fcmovne
ljmp
or
das
loopne
inc
xchg
add
out
dec
pop
out
scas
xor
mov
hlt
lock
addr16
orb
ret
push
push
pusha
mov
jle
adc
andl
iret
xchg
jae
sti
push
xor
dec
pop
push
test
inc
mulb
sti
add
pop
std
dec
cmc
mov
jmp
fdivrs
mov
movsb
push
ss
push
movsb
jg
fldcw
aaa
aad
mov
push
cs
loope
and
out
xchg
sti
repnz
dec
scas
fwait
mov
dec
xor
mov
and
int
scas
bound
loope
pop
add
imul
push
cmp
out
or
clc
bound
inc
adc
mov
inc
xchg
pop
inc
clc
les
lods
imul
xchg
mov
push
ds
addr16
push
stos
cmp
sub
pop
js
inc
movsb
push
cmpsl
arpl
inc
sahf
das
in
mov
aaa
cmp
or
add
mov
ret
inc
fcoms
lods
fsts
mov
rol
pop
ja
jmp
fcom
dec
push
mov
cmp
movsb
xor
xchg
mov
mov
pop
jae
test
add
push
mov
into
or
enter
sarl
and
pop
sbb
testb
push
ret
xor
scas
xor
rol
sbb
xchg
mov
add
jl
stc
sbb
inc
mov
dec
adc
inc
jnp
and
jbe,pn
jae
jg
mov
repz
not
sbb
std
jnp
mov
push
mov
and
sbb
or
xor
lcall
xchg
ljmp
sbb
xchg
xchg
xor
xor
mov
fistpl
adc
and
adc
out
push
mov
cmpb
mov
sub
xchg
test
repz
rolb
imul
or
push
jb
fisubl
pop
pop
jbe
dec
mov
sahf
push
inc
cli
test
xchg
and
bound
xlat
fsubrs
inc
loopne
lret
pop
pop
mov
movsl
mov
cli
loop
jecxz
daa
sbb
fsubrs
sbb
movsb
loope
mov
adc
xchg
stc
roll
in
sub
movb
xor
in
push
mov
add
ljmp
dec
and
sbb
mov
bound
mov
cmp
cmc
and
shr
mov
cmp
or
stos
inc
or
outsl
and
sub
popf
and
fwait
inc
push
pop
sahf
push
lret
mov
out
test
cmpsl
subb
shrl
decl
icebp
imul
mov
push
adc
lcall
dec
xor
and
mov
pop
das
mov
ds
test
or
fldl
cmp
pop
fnsave
pop
xor
mov
out
test
adc
sti
outsb
std
jo
cmp
es
imul
int
jge
pop
push
xor
xlat
jo
mov
cmpb
addr16
pushf
lods
or
xchg
adc
popa
insl
int
mov
and
sahf
mov
dec
repz
cmc
dec
rclb
sbb
jl
or
aam
or
inc
out
pop
sbb
mov
mov
sahf
addl
jnp
pusha
into
push
mov
shll
sbb
add
xor
xchg
call
lods
jecxz
pop
sbbl
push
jae
pop
jp
test
xor
call
test
out
lret
dec
push
dec
adc
fld1
sub
jne
cli
push
ljmp
insb
cmpsb
mov
sti
incb
mov
mov
mov
push
mov
add
dec
jns
push
in
cwtl
sbb
and
or
jecxz
cli
xor
repz
ljmp
mov
imul
hlt
push
in
mov
or
mov
scas
dec
mov
push
pop
lods
jp
outsl
jg
xlat
loop
jmp
cmp
mov
pop
pop
jecxz
dec
push
jl
bound
dec
xor
dec
mov
pop
inc
sbb
push
es
in
hlt
inc
pop
dec
das
nop
pop
mov
jl
out
push
or
add
xchg
insl
idiv
in
in
inc
pusha
cmp
and
cmp
insb
cmp
or
mov
mov
jns
jecxz
call
xlat
inc
movsb
popf
jno
adc
mov
scas
adc
mov
icebp
mov
sub
decl
orb
fsts
mov
int
bound
adc
mov
xor
mov
and
xchg
add
hlt
mov
xchg
fsubr
std
add
adc
jmp
out
push
pushf
jo
jl
lcall
jns
push
scas
enter
dec
xor
jl
push
stos
mov
mov
mov
jns
cmp
pop
arpl
sbb
insb
in
pop
je
push
aaa
mov
rcrb
les
and
jne
xchg
rep
xor
test
rolb
scas
xor
in
mov
xchg
movsb
pop
cmpsb
pop
jl
sub
and
jl
sub
mov
call
and
rcrb
dec
cmpsl
xchg
push
loop
insl
jg
sub
and
fbstp
arpl
or
cmp
outsl
add
fbld
shr
fsts
nop
or
mov
shlb
inc
nop
roll
repnz
out
addr16
push
xchg
xchg
lds
add
stos
repz
mov
ret
mov
or
shrl
xor
push
mov
pushl
or
daa
ss
loope
jmp
aad
or
or
daa
outsl
push
movsl
gs
jbe
sub
jg
jne
dec
dec
pop
push
pop
scas
push
sub
lock
xchg
popf
clc
mulb
mov
in
add
sub
adc
xor
adc
inc
or
popf
and
arpl
push
xor
mov
mov
aad
xor
jo
or
mov
test
lret
xor
pop
je
jb
jb
dec
pop
jae
ret
in
filds
xchg
dec
push
aad
mov
lods
mov
mov
xchg
fiaddl
jno
jmp
cmpsl
sbb
push
inc
push
jmp
push
push
sti
shlb
xor
mov
inc
cmp
sarl
and
sbb
shll
push
scas
push
shrl
repnz
xor
stc
movsb
sub
aad
mov
xor
cmp
xor
je
std
xor
sbb
ss
pop
mov
inc
cmpb
and
mov
push
xor
cmp
or
out
inc
loope
insl
sub
adc
push
mov
and
xlat
jnp
sub
pop
popa
and
dec
out
in
out
dec
push
pushf
jecxz
les
xor
popl
add
cmp
out
popa
add
jnp
lods
jns
mov
inc
mov
jge
mov
clc
cmp
sbb
or
ret
iret
aas
in
movsb
xchg
hlt
iret
mov
adc
jmp
roll
je
cltd
xchg
push
std
testl
mov
xor
movsb
mov
add
jo
int
js
jae
xchg
or
cmpl
adc
sar
jp
xchg
mov
mov
rcll
cmp
movsb
jp
insb
fildll
jle
test
and
dec
jg
sbb
xchg
aam
inc
scas
mov
movsl
jge
xchg
xchg
dec
xchg
mov
sbb
fyl2xp1
test
into
mulb
sbb
sahf
cmp
add
lods
or
in
cld
jb
sti
test
bound
nop
inc
in
mov
push
movsb
pop
dec
insb
pop
aam
xor
push
lea
loopne
dec
pop
jbe
jb
jae
and
mov
pop
das
push
jecxz
lods
rcll
push
xchg
push
mov
xor
adc
lods
push
cmp
cmp
aam
cmpsl
iret
pusha
mov
jmp
inc
lock
icebp
xchg
cmp
cmp
enter
and
mov
inc
into
std
loopne
push
add
cmp
xchg
js
jmp
mov
fistps
jns
mov
jbe
mov
jns
rorl
adc
movsb
xchg
fsub
and
push
xchg
push
pusha
mov
icebp
jne
sub
cwtl
xchg
fisubrl
xlat
jne
out
shl
test
sbb
out
cmp
shlb
scas
lret
roll
xchg
rcl
test
push
add
inc
fadds
mov
enter
cltd
or
jb
inc
mov
ja
mov
testl
loopne
mov
add
mov
cmp
jmp
xor
adc
xor
push
add
xor
jg
sub
xor
cmc
cmp
mov
and
jle
add
int
inc
cmp
cmp
andl
fdivl
pop
out
filds
dec
add
mov
dec
jp
pushl
lahf
push
push
ret
xchg
add
stos
mov
mov
push
imul
mov
dec
fs
jecxz
dec
shrb
and
scas
aaa
and
sub
in
fwait
in
nop
mov
jo
add
inc
pop
xchg
sti
adc
sub
push
inc
cmp
adc
or
xchg
call
addr16
and
psraw
mov
mov
xchg
in
js
xor
cmp
ljmp
pop
stos
les
cmp
pop
test
add
scas
leave
push
and
and
sub
mov
in
mov
sbb
pop
inc
movsb
sbb
jbe
jp
insl
sarl
es
scas
xchg
push
pop
aaa
mov
aad
inc
loop
mov
or
popf
ret
vmread
adc
mov
xchg
and
inc
mov
fcmovnb
dec
int3
call
mov
xor
shl
cld
sub
les
ja
adc
sti
dec
adc
jmp
dec
mov
and
pop
mov
mov
mov
push
std
ss
lret
xor
jle
test
cmc
cs
add
data16
test
fcmovnb
in
cmpsl
push
int
scas
jmp
sbb
mov
jbe
jl
push
loope
lds
ds
ds
cli
add
jo
pop
dec
test
push
pushf
push
push
cltd
out
xor
pop
mov
lahf
or
push
aaa
add
push
test
push
rclb
mov
loopne
and
lret
flds
shlb
stc
push
aas
jecxz
push
fwait
and
dec
adc
das
xor
xchg
shl
mov
dec
or
sbb
lods
mov
and
inc
les
out
and
aas
cltd
lds
inc
sub
insl
pop
xchg
pop
ret
stos
in
into
mov
hlt
sahf
scas
and
je
mul
bound
int
push
add
cwtl
xor
imul
inc
pushl
scas
stos
je
jnp
mov
loopne
dec
aad
dec
cli
in
ja
out
es
ljmp
inc
popf
jne
stc
xlat
mov
cmpsb
das
jno
push
cmpsb
or
mov
and
mov
in
daa
adc
pop
pop
push
sahf
jge
out
mov
fcmove
hlt
lcall
ja
stc
xor
ja
add
in
and
sbb
subl
dec
cld
pop
movl
xchg
cs
ds
out
xchg
fdivrs
mov
stos
adc
xchg
jns
push
jg
ds
xor
jbe
and
mov
xchg
jl
shll
lahf
add
inc
punpckhbw
ret
call
jmp
push
mov
lea
sbb
xchg
pushl
mov
sub
inc
loope
mov
jge
mov
mov
in
adc
cwtl
jnp
cld
jp
out
mov
cmpsb
sbb
iret
sbb
ret
hlt
mov
adc
sub
jno
fistps
pusha
mov
add
mov
fwait
outsb
jge
ret
mov
mov
mov
and
movsb
push
pop
inc
outsl
movsb
les
cwtl
mov
sar
fisttps
and
mov
push
pop
cwtl
or
lahf
filds
leave
mov
lret
fimuls
sub
in
mov
push
push
mov
cmpsl
adc
fs
out
cli
lahf
inc
inc
mov
iret
cmpsl
mov
scas
jge
jne
outsl
jmp
cmp
fnstsw
inc
add
sub
ret
dec
and
aad
mov
jo
int3
jmp
dec
add
aas
out
mov
adc
sub
sbb
shr
mov
push
add
aam
insb
int3
ds
shl
cli
fcmovne
fdiv
cmpl
pop
into
push
andl
iret
pushf
insb
xchg
shll
hlt
xchg
dec
gs
jle
xchg
inc
pop
test
fsubs
fcomp
aas
enter
sub
loopne
and
das
in
mov
inc
orb
push
scas
hlt
in
push
mov
shrb
enter
adc
outsl
aaa
lret
daa
movl
shrl
testl
jo
jno
movsl
loopne
inc
sub
in
dec
pop
mov
pop
adc
push
mov
loop
pop
std
aas
in
mov
aaa
lret
lds
in
gs
mov
out
mov
jne
inc
and
pop
loope
clc
rcrb
sahf
sbb
js
pop
repnz
push
pop
cmp
dec
mov
lds
movsl
addr16
xlat
mov
dec
mov
or
dec
popa
pop
clc
pop
in
insb
inc
test
inc
in
inc
push
inc
pop
sbb
js
push
test
es
rorl
testb
cmpl
xchg
ret
in
fimuls
inc
add
or
lods
insb
mov
mov
insl
add
sub
fidivl
cli
aam
lock
inc
xor
adc
jb
cmpsl
mov
pop
mov
ljmp
push
push
inc
dec
adc
inc
sbb
xor
add
push
dec
testb
dec
cld
mov
mov
stos
pop
clc
pop
xchg
mov
out
add
js
sub
cld
jmp
lret
pusha
mov
rcrb
cmp
sub
or
imul
xchg
mov
sbb
mov
ficoms
inc
test
sbb
xlat
fistpll
xlat
dec
push
jmp
sbb
add
mov
ret
sarl
sub
hlt
pop
inc
xor
mov
jb
les
aad
pop
push
aad
leave
dec
xchg
addr16
push
ljmp
sub
pop
fld
mov
or
negb
xlat
les
sbb
xchg
inc
adc
pop
push
sti
mov
push
dec
cli
jno
out
and
fdivr
sub
das
movsl
adc
loopne
sbb
into
adc
add
sub
lds
femms
mov
scas
inc
push
pop
mov
mov
out
pop
jl
jmp
pushf
movsl
enter
sub
add
insl
fbstp
hlt
or
mov
popa
into
scas
roll
shll
outsl
jle
pop
dec
mov
mov
or
push
jne
mov
xor
xor
lret
adc
sbb
mov
mov
push
pop
loopne
loope
inc
je
outsl
shlb
test
arpl
cs
lods
cmpsb
lret
jmp
cmpsl
mov
inc
ds
in
movsl
fsubrs
fwait
dec
mov
scas
pop
push
xor
dec
popf
pop
and
mov
jo
mov
add
pusha
pop
shll
cmp
aam
push
cltd
or
pushf
cld
pushf
pop
scas
mov
inc
dec
pop
repnz
addl
addr16
or
imul
push
xchg
lret
call
cmp
inc
jl
and
jo
push
or
sub
loope
std
leave
mov
dec
lods
test
hlt
mov
lahf
jnp
jno
xlat
push
enter
cmp
and
outsl
xchg
push
or
enter
and
lcall
inc
xchg
out
test
lds
lds
add
cmc
aam
popa
inc
fisubrl
icebp
and
mov
lret
xchg
addr16
sbb
inc
into
movsl
lahf
add
sbb
cmc
lcall
fcmove
inc
mov
mul
nop
and
shll
push
subb
sbb
inc
push
outsb
rcr
cmp
lret
pop
test
fistl
lcall
rcrl
out
aam
cwtl
push
cmc
out
add
push
push
and
push
mov
outsl
ja
loope
shll
mov
sbb
shl
adc
sarb
rorb
mov
cmp
jne
mov
cwtl
sbb
jb
jg
push
imul
jns
sub
ljmp
jp
jmp
test
xchg
scas
test
fcom
pop
lret
out
cmp
scas
and
fs
mov
push
shlb
jmp
int3
adc
scas
cmp
or
fists
add
push
jmp
sbb
pop
scas
mov
xchg
sahf
push
inc
adc
bound
jle
jge
push
sbb
xchg
jp
call
xchg
repnz
repz
pop
ss
inc
lcall
push
cmp
popf
ja
sarl
inc
lods
pop
stos
jo
in
mov
and
std
adc
je
int
pushf
js
ljmp
push
push
or
xchg
mov
push
movsl
movb
pop
cmp
fiaddl
add
mov
sub
push
cmc
popa
mov
ret
stos
fs
pop
scas
stos
icebp
jns
mov
jl
sbb
lcall
or
shll
cli
xchg
dec
lahf
xchg
cmp
lret
out
add
cltd
pop
push
insb
iret
icebp
jne
pop
or
aas
push
push
clc
sbb
adc
jae
int3
jbe
lods
fcmovnb
repz
ret
lds
lahf
sub
push
mov
lock
lahf
inc
out
dec
les
in
pop
outsl
sbb
fsin
push
cwtl
stos
mov
inc
pop
xor
mov
jecxz
mov
push
data16
jp
add
sbb
fsubrs
call
sbb
lock
jmp
call
adc
pusha
push
and
sbb
jnp
inc
push
jle
add
xchg
fdiv
lret
jns
gs
imul
and
or
movsl
in
sub
and
mov
icebp
fisubl
insb
xor
mov
xchg
jae
push
cld
lock
mov
gs
add
mov
mov
pop
call
pushf
push
xchg
repz
push
in
adc
scas
mov
sub
sbb
cwtl
cltd
fwait
out
push
push
jg
insl
sub
out
aam
push
rol
movsb
mov
mov
dec
movsl
dec
arpl
push
ficompl
imull
xchg
imul
inc
xchg
push
outsb
aaa
fdivl
cmpb
xor
rorl
fiaddl
sub
xor
cld
rcl
sahf
xchg
bound
adc
leave
std
adc
cmpsb
daa
dec
adc
dec
test
lret
xor
cli
mov
or
int3
mov
leave
cmp
cs
data16
test
sub
xlat
or
or
dec
mov
jle
nop
mov
mov
pop
cmp
nop
cmc
ja
pop
gs
loopne
adc
pop
lea
sti
ds
repnz
pop
sbb
mov
sbb
pop
aas
out
adc
aad
lcall
lcall
pop
pop
imul
jne
iret
cmp
dec
mov
sar
insl
or
dec
addr16
int
rorl
clc
and
popa
pop
sub
adc
ret
in
fildll
imul
movsl
sbb
sbb
jmp
nop
mov
sbb
jae
hlt
inc
sub
add
in
xchg
mov
out
jmp
mov
sub
das
mov
adc
int
cs
mov
jb
cs
sub
adc
cmpsl
test
inc
dec
je
push
test
adc
mov
test
xchg
scas
xor
pushf
adc
rorb
add
adcb
xchg
insb
xchg
add
xlat
dec
imul
inc
aad
push
pop
push
mov
fisttpl
ror
cmp
fdivrl
or
sub
dec
cmc
repz
rol
cli
int
add
popf
stos
shll
push
data16
inc
lds
dec
jecxz
fdivs
test
push
test
jl
push
shlb
dec
test
dec
out
and
jbe
clc
ljmp
mov
pop
loop
xchg
xor
xor
inc
fildll
xchg
jno
fdiv
pop
shr
aas
pop
cld
mov
in
jle
adc
cwtl
adc
cmp
sbb
stos
add
push
xchg
pusha
inc
scas
xor
and
push
mov
add
rcl
push
aas
jnp
jbe
push
lea
sub
cmp
push
cwtl
xchg
lods
repz
and
xor
sbbb
dec
mov
stos
mov
xor
cmp
inc
lea
dec
lahf
daa
test
jl
cmpsl
dec
stc
and
sbb
aam
mov
mov
pop
dec
jne
rol
stos
add
sbb
xor
mov
cmpsb
orl
inc
test
shll
push
decl
push
aaa
repnz
inc
addr16
cmpsl
sub
jecxz
cmp
fs
orl
das
sarl
push
fiaddl
pop
lahf
mov
push
pushf
stos
xchg
xchg
std
jg
insb
out
hlt
test
adc
fmull
xor
outsb
cmp
xchg
int3
xchg
bound
daa
test
jnp
cmp
pop
sub
sti
jle
jo
dec
out
aad
cli
push
test
xchg
insl
adcb
stos
nop
jl
jae
pop
jmp
lods
adc
xchg
sub
ret
sbb
jno
xchg
andb
clc
cmp
push
testl
jbe
push
add
pop
out
lea
gs
xchg
divb
addl
pop
cmp
popa
dec
push
std
das
movsl
in
xor
in
jge
mov
sarl
cmpsl
adc
xchg
dec
clc
xor
jg
dec
xor
sbb
push
xor
or
sub
xlat
movb
mov
jae
fnstsw
add
out
push
pop
pusha
outsl
repnz
mov
push
push
push
mov
add
bound
call
daa
inc
loopne
lock
movsb
adc
and
stos
mov
mov
idiv
mov
mov
shlb
and
push
cltd
imul
adc
das
shrb
inc
push
dec
outsb
mov
adc
mov
sbb
xlat
mov
pushf
in
sub
sub
stos
or
push
jno
movsb
push
divl
inc
and
xchg
mov
scas
add
cmc
aas
idivb
cmpsl
sub
lea
mov
push
movsl
orl
fwait
popa
fsave
adc
add
mov
lds
call
aad
addr16
loope
nop
inc
cmpb
add
mov
sub
loope
sbb
or
rol
mov
dec
push
scas
aaa
mov
jmp
xchg
sahf
std
mov
mov
dec
loope
pushf
pop
ret
pop
imul
out
pop
ret
pusha
pop
fmulp
inc
sbb
testl
daa
dec
pop
fbld
movsb
xchg
aad
adc
in
cmp
push
out
sub
mov
fdivr
enter
mov
les
in
pop
stos
adc
fld
cmp
aam
cmpsl
ret
fs
inc
mov
jle
adc
cmp
movb
stos
push
lods
pop
fs
sti
jge
pushf
add
sbb
popf
dec
outsl
push
call
into
add
lcall
push
mov
or
stc
jg
outsl
aad
lahf
pop
sub
outsb
jo
pop
les
js
mov
loopne
gs
cmp
jo
cmp
movsl
sahf
push
loopne
test
aam
sahf
into
xorb
inc
enter
rcl
push
insb
lahf
aad
pop
in
mov
sub
jp
stc
arpl
imul
es
inc
icebp
mov
fcompl
fisttpll
push
and
pop
arpl
adc
adc
rclb
ror
fdivrs
test
shlb
pop
xchg
sub
xchg
lds
dec
xchg
push
dec
mov
sbb
popa
in
or
pop
lea
jo
xchg
cmp
push
xor
sbb
and
mov
mov
das
ret
fstp
lret
pop
rcrb
adc
dec
mov
jge
dec
inc
mov
fs
jno
in
xorb
pop
mov
sub
mov
add
inc
pop
cwtl
inc
mov
sti
xor
mov
jb
mov
add
nop
jge
jmp
mov
repnz
xchg
xchg
out
cmp
xor
stc
loopne
ja
add
gs
pushf
xchg
cld
js
dec
addr16
or
xor
mov
test
popa
in
popf
add
mov
iret
push
outsl
imul
mov
and
hlt
rorb
sti
or
xor
xor
fxtract
xchg
adc
sti
ljmp
dec
cld
icebp
lods
mov
stc
jle
adc
push
mov
add
das
push
out
lret
mov
push
fnstsw
sbb
sbb
jl
lds
inc
fcomps
mov
or
push
mov
sbb
dec
adc
sub
mov
aas
jae
mov
dec
jne
outsb
in
and
aas
in
insb
pusha
call
dec
dec
sti
jle
mov
shlb
push
movsb
mov
loope
in
push
pop
shl
repz
pusha
and
mov
jg
imul
or
out
fwait
push
pop
cmp
cli
loopne
mov
cltd
mov
mov
xlat
mov
push
mov
mov
cli
mov
addr16
sbb
fcmovb
ret
pop
into
int
scas
cs
pusha
fisubrs
cs
mov
add
ficoml
mov
xchg
nop
jecxz
sub
jle
cmp
sahf
int
ss
jg
and
ficoml
xchg
cld
insl
mov
mov
jo
inc
push
cmp
xlat
addr16
mov
aas
das
and
in
cmc
fimuls
xor
mov
inc
popa
mov
mov
mulb
dec
mov
dec
outsl
movsl
inc
jb
dec
dec
mov
lods
test
fistl
imul
push
shrb
push
fwait
sbb
cmp
pop
leave
xor
cwtl
movsb
lods
dec
rcrb
dec
adc
push
and
xchg
adc
mov
outsb
jp
pop
xor
jns
fwait
push
xchg
sbb
rep
push
testb
mov
jnp
or
adc
ljmp
lret
adc
addl
cmpsb
out
sbb
add
fisubl
mov
ss
call
test
mov
xor
mov
xchg
mov
in
aas
loope
push
inc
or
icebp
mov
dec
lods
push
fimull
push
lret
cmp
mov
movsl
and
stc
setae
stos
or
fcmovbe
dec
mov
cmp
pop
outsb
test
adc
pop
sbb
outsl
xchg
ljmp
add
or
mov
rclb
gs
and
jbe
pop
lea
adc
negb
sub
push
aad
iret
inc
mov
rorl
dec
andb
cmc
mov
enter
mov
inc
out
lds
lret
mov
les
mov
insl
mov
shlb
xor
bound
push
xor
aaa
dec
inc
jbe
push
cld
nop
add
cltd
cltd
push
push
std
jp
cmpl
sub
bound
mov
jle
mov
sbb
dec
mov
in
jno
insl
je
xor
shl
dec
insb
inc
mov
cwtl
icebp
in
mov
jno
pushf
cs
mov
pop
enter
outsl
sti
fnstenv
push
sub
xor
mov
fcmovnb
gs
mov
jle
daa
cmp
ss
fs
ds
jp
pop
adc
xor
mov
and
repz
lret
lret
arpl
out
movsb
ficoml
or
ror
push
pop
rcrl
je
xchg
xchg
cmpsb
xor
adc
adc
mov
push
imul
push
sub
clc
add
xor
je
into
cwtl
add
inc
daa
shll
sub
xor
call
and
loop
outsl
or
nop
sbb
xor
adc
dec
xchg
lret
lret
sbb
es
sarl
fldt
or
sub
dec
ss
cmp
inc
fdivrs
add
sub
das
cmp
scas
push
add
inc
cmp
insl
sub
movsl
and
in
add
out
hlt
or
sahf
add
cmp
out
jle
in
add
iret
xchg
loope
sbb
popa
cmpsb
jne
lret
dec
adc
mov
and
arpl
in
lods
rolb
mov
jbe
jo
adc
or
lgs
adc
add
jns
mov
jno
push
jns
es
int3
in
arpl
mov
mov
dec
js
int
inc
leave
ja
jo
lock
out
jns
cmpsb
dec
fmuls
pusha
negb
cmp
xor
cwtl
pusha
imul
or
adc
lds
xchg
jo,pt
mov
or
in
sub
xchg
xor
test
ret
out
xchg
xchg
dec
pop
pushl
add
loope
xchg
dec
pop
rcl
and
jno
into
ja
out
int3
test
fwait
je
scas
lret
and
mov
and
cmc
mov
lahf
js
cmc
leave
adc
and
daa
outsl
imul
movsl
inc
xchg
jp
je
xor
into
aad
aaa
xchg
dec
jns
mov
push
xor
int3
in
ret
loope
das
les
adc
clc
inc
xor
iret
pop
loopne
cmp
mov
aam
mov
ljmp
lahf
les
mov
bound
xchg
lcall
push
jecxz
lea
jno
xchg
aaa
sub
dec
negb
fcomps
in
sbb
cmp
jne
hlt
sti
dec
or
in
dec
test
adc
adc
out
test
adc
aaa
sub
inc
insl
arpl
pop
aaa
lret
je
gs
fcoml
jg
cmp
cs
outsl
push
dec
cmpsb
jnp
notl
sub
mov
mov
inc
imul
imul
add
fsubl
mov
pop
je
jecxz
insl
movsl
jecxz
gs
in
lods
cli
cmp
mov
aaa
inc
ss
push
pop
arpl
pop
clc
cmp
adc
jg
cmpsb
das
mov
sub
fisubs
pop
leave
xchg
aas
sub
lods
repnz
sub
ret
mov
js
mov
push
rolb
lcall
inc
in
out
xchg
pop
push
std
out
push
push
idivl
mov
jl
cld
mov
popf
je
xchg
xor
add
mov
aaa
shl
push
push
jg
cmp
inc
pop
lods
aam
push
ss
inc
or
in
add
jnp
lahf
mov
ret
ljmp
mov
xor
adc
pinsrw
push
out
popl
ljmp
jae
and
enter
imul
lods
ljmp
out
cmpsl
je
mov
pop
dec
sarl
jecxz
cmp
mov
repnz
sbb
cmpsb
repz
aam
in
push
mov
out
dec
std
pop
jae
loopne
sub
fcoms
add
loopew
data16
in
add
lea
push
insb
aas
popa
push
add
pop
push
mov
in
mov
xor
das
mov
jno
test
add
mov
pop
out
xor
por
pop
and
addr16
add
xchg
mov
out
mov
mov
aaa
jl
sub
stc
clc
push
loop
dec
fmuls
hlt
xor
lret
aaa
xor
fidivrl
lock
sbb
es
ret
ret
dec
fbld
adc
sarb
pop
shrb
stc
mov
stc
pmuludq
and
repnz
jp
adc
pop
in
mov
jne
fsubrl
sub
addr16
notl
ror
sub
or
jnp
or
jle
cmp
data16
jg
push
popa
mov
out
xchg
enter
jns
xor
mov
popa
push
in
fincstp
adc
insl
pop
xchg
xchg
or
add
adc
jl
repz
xchg
fwait
inc
mov
jle
xor
in
and
sti
mov
aad
or
inc
xchg
add
clc
dec
ficompl
inc
insl
cld
arpl
sub
lea
scas
fsubr
loope
or
out
adc
mov
sbb
cmp
or
insb
fs
cld
int3
add
add
lock
fsub
into
shrl
scas
sub
fs
enter
or
andl
shrl
cmpsb
test
or
adc
jne
pop
in
repz
jge
inc
push
test
push
daa
push
add
inc
mov
mov
dec
je
cmp
gs
jo
push
movsb
jnp
inc
pop
add
popa
loopne
inc
pop
aad
push
add
dec
fsubl
idivb
cld
dec
push
mov
and
jo
and
pop
cmp
cmp
out
inc
jge
sbb
jbe
in
clc
add
lea
mov
cltd
out
loope
inc
inc
sti
leave
ljmp
or
adc
fmulp
mov
inc
ljmp
je
das
push
arpl
jmp
cmpsl
out
inc
popf
enter
lods
cli
imul
sbbb
dec
rcll
jmp
dec
das
pop
add
mov
xor
inc
shrb
mov
pop
cmc
insl
enter
mov
int3
outsl
push
xor
cmp
sbb
or
stc
leave
xor
adc
ja
daa
ficompl
int3
in
and
js
dec
pop
mov
mov
out
xor
pop
ret
in
adc
dec
push
stos
addb
push
pop
fidivl
mov
mov
rolb
and
and
push
fsts
mov
dec
leave
inc
cwtl
pop
xchg
or
xor
sbb
loopne
push
jb
mov
or
dec
out
dec
pop
xchg
inc
int3
shlb
imul
cmp
cs
out
push
fs
push
mov
jb
mov
aas
out
popf
mov
mov
adc
mov
fnstcw
sub
or
bound
in
jo,pn
or
daa
in
cmp
push
add
add
pop
scas
out
pop
outsl
dec
mov
popa
inc
cld
or
or
mov
sbb
sbb
xor
iret
pop
push
scas
dec
lret
mov
jno
fadd
vhaddps
ds
sahf
sbb
sbb
mov
ret
lahf
aaa
stos
into
out
add
das
test
add
lret
add
mov
das
nop
push
in
les
push
dec
push
ljmp
pop
lods
aas
pop
push
sbb
cmpb
movsb
lea
out
add
cmp
push
pop
hlt
popf
push
adc
sarb
pop
cmp
mov
jne
sub
pusha
xchg
inc
mov
sbb
test
inc
or
mov
pushf
lock
and
mov
or
loopew
pushf
add
pop
push
push
lods
xchg
jbe
sub
pushf
arpl
mov
mov
vcvttps2dq
jle
dec
adc
xlat
pusha
mov
xchg
cli
ficoms
cli
xchg
lea
mov
jp
jbe
ret
ficoms
push
mov
ret
in
pop
scas
xorl
cmp
nop
cmp
cwtl
sbb
push
inc
push
repz
dec
xchg
fs
jp
imul
out
daa
mov
pop
inc
push
ja
pop
xchg
dec
sub
push
insb
sbb
out
repnz
popf
shl
repnz
imul
add
xor
add
int3
sbb
cmp
and
ret
pop
popa
cmp
jge
fdivrl
out
jbe
pop
push
mov
cltd
jo
out
enter
and
mov
sbb
xchg
xor
lds
cmp
cmc
aam
jg
xchg
cs
cmp
sub
cmp
das
push
repz
pop
or
jne
xchg
mov
xchg
mov
inc
call
sub
cmp
movsb
push
mov
push
add
orl
lds
mov
stos
mov
or
repnz
les
jg
sti
cld
mov
xor
mull
mov
mov
ja
jne
jl
jge
mov
outsb
aas
pushl
jns
jns
cmp
mov
lods
or
inc
loope
cmpb
mov
mov
cs
iret
cli
adc
mov
jno
inc
jne
aaa
inc
cmp
mov
and
mov
mov
sbb
mov
jo
mov
xchg
push
in
hlt
fwait
gs
das
and
les
stc
xchg
fidivrs
sub
popw
jecxz
rorb
lret
or
sub
sahf
mov
imul
fwait
sub
cmp
mov
jno
pop
popa
sub
jp
scas
cwtl
ja
stos
addl
push
pop
in
xor
pop
call
imul
or
jle
inc
or
pop
aam
and
mov
nop
adc
bnd
xchg
xor
es
push
cli
fucomi
sub
xchg
cmpsl
mov
mov
or
cld
aas
add
cmpsl
cli
das
or
and
fistpll
push
bound
cmc
mov
outsb
mov
sbb
xchg
dec
adc
rcrb
addl
in
mov
ss
mov
dec
lea
pop
ss
push
lock
xor
ss
xor
lods
scas
jb
add
sub
cmp
sti
cli
xlat
sub
sbb
and
cmc
mov
push
shrb
cli
mov
push
xlat
jne
into
jb
or
cmpsl
mov
push
mov
push
aaa
fs
outsl
dec
or
ret
test
decb
xor
xor
les
jle
lahf
push
jb
xchg
insb
or
xor
rcrl
mov
or
cwtl
jae
rcl
sarl
lds
fdivs
pop
jne
cmpsb
jno
das
xor
jg
and
in
push
cltd
aaa
bound
popa
test
xor
inc
or
mov
inc
bound
leave
xchg
icebp
leave
les
shll
arpl
fs
lods
aas
and
pop
xchg
lahf
or
lahf
lods
je
out
dec
arpl
cmp
in
xchg
sti
pop
pusha
stc
dec
adc
arpl
jbe
xchg
push
push
arpl
out
dec
dec
loop
sub
jge
xor
xchg
add
pop
push
mov
ret
add
sbb
adc
sbb
xorl
xor
scas
ja
sub
mov
mov
mov
sbb
xor
or
mov
les
pop
pop
cmp
movsl
pop
sub
lods
in
jge
push
int3
lock
mov
sarl
mov
in
scas
rcll
adcl
mov
dec
cwtl
xchg
jmp
xchg
and
lret
add
neg
add
cmp
jmp
mov
pop
pop
aaa
loope
sub
sbb
jns
das
lods
cs
mov
enter
mov
push
lock
dec
xchg
push
aad
mov
and
add
hlt
push
fst
mov
xor
roll
fdivs
data16
mov
sbb
gs
or
jmp
out
int
hlt
push
jae
add
aad
enter
or
pop
ret
loop
dec
es
stos
add
xor
imul
ljmp
scas
push
ds
mov
shrb
xchg
xor
pop
lods
out
jle
push
lcall
loopne
cs
mov
mov
repnz
dec
aas
dec
lods
mov
push
xchg
jge
inc
jne
js
dec
out
cmp
sti
fbstp
pop
cmp
test
mov
cmp
add
xchg
mov
pop
mov
push
mov
loope
mov
adc
pop
mov
sbb
shrb
mov
aam
je
fidivrs
pop
and
loope
mov
adc
pushf
ja
cmp
rol
fsubr
xor
popa
nop
xchg
ret
xchg
sidtl
and
or
push
sub
mov
dec
sahf
daa
add
fiaddl
lock
dec
xor
jbe
sbb
leave
in
jp
ret
push
mov
push
mov
enter
lea
outsl
je
push
scas
andl
aaa
mov
push
mov
subl
sbb
jecxz
decb
mov
shl
leave
aad
jno
dec
test
mov
sbb
insl
mov
out
int
loope
adc
xorb
jb,pt
lcall
imul
scas
mov
jnp
pushf
das
je
mov
sub
or
cwtl
rolb
adc
aaa
adc
jo
push
outsl
add
mov
pop
hlt
xor
cmpsb
aam
outsb
fisubrs
push
in
fcomip
dec
popa
xchg
jge
aam
or
mov
jmp
into
dec
subl
dec
inc
fldenv
push
cmp
lret
sbb
mov
lods
adc
imul
jo
lret
push
pop
rorb
repnz
inc
jmp
sub
cwtl
je
mov
mov
inc
fsubr
mov
mov
jmp
jp
push
and
ret
cmp
call
sub
jne
nop
ret
jecxz
sarb
and
aaa
mov
repz
cltd
imul
sbb
dec
dec
pop
dec
sub
js
lods
cmpsb
and
scas
cwtl
fsubrl
out
push
adc
mov
push
dec
das
aad
jge
jmp
icebp
fwait
addr16
push
mov
fxam
aaa
cltd
sub
daa
mov
out
or
insb
push
fidivrs
adc
xor
sub
dec
aas
fdiv
imul
out
ja
or
pop
dec
mov
fsubp
add
inc
mov
fwait
mull
lret
fs
sahf
jp
sti
xor
dec
mov
pop
imul
xor
into
je
mov
jp
loopne
jmp
jb
leave
mov
data16
cmp
cmp
stos
and
jp
stos
lahf
adc
mov
cwtl
mov
adc
adc
cli
jmp
loope
into
add
leave
out
arpl
cmc
sbb
mov
icebp
mov
adc
pusha
rcl
imul
fdivrl
jns
mov
mov
pop
ret
or
mov
out
shlb
add
push
jb
xor
test
loop
push
mov
mov
out
lock
add
call
pop
mov
movsb
repnz
inc
dec
sub
mov
rorl
pop
lret
fadd
scas
popa
fcomps
std
sbb
insl
xchg
pop
push
mov
jo
adc
and
outsl
out
pop
mov
push
push
adc
and
inc
cmp
or
sub
test
insb
push
lcall
xchg
mov
lods
setl
daa
pushf
orb
int
jbe
sbb
dec
adc
jae
sub
data16
cmp
rorb
fs
and
dec
adc
sahf
mov
dec
or
pusha
ret
movsb
push
push
or
aaa
mov
add
out
xlat
push
pop
inc
dec
pusha
and
jge
je
or
sahf
dec
dec
in
pop
je
js
sbb
stos
cwtl
out
in
jge
and
cmp
stos
je
dec
mov
dec
es
jae
lock
shl
ja
sahf
cs
pop
push
cmp
addr16
loopne
cltd
cmc
iret
pop
es
dec
cmp
out
xchg
das
pusha
aam
jp
aam
inc
das
pop
mov
xor
pop
shl
fiaddl
pop
and
data16
add
inc
cmp
rorl
jge
lods
xor
jns
push
popf
push
clc
std
jno
xorl
cmpsb
pop
leave
fst
ja
cmp
jno,pn
adc
xchg
ljmp
cmp
jl
scas
inc
shll
addr16
testb
pop
cltd
loop
sub
cmp
imul
sub
loop
inc
lcall
negb
and
adc
loope
lret
iret
cwtl
gs
aas
push
jmp
scas
push
mov
leave
pop
fdivp
and
mov
cmpsl
jne
xchg
in
gs
loopne
data16
shrb
add
imul
or
dec
jns
out
xorb
push
sbbl
in
test
mov
add
mov
sbb
add
lock
jnp
push
aaa
xor
sahf
test
nop
ds
and
push
enter
das
lods
out
je
dec
add
cmpb
mov
lods
test
dec
adc
add
cli
int3
mov
push
push
lods
inc
mov
cmp
and
cmp
ljmp
dec
jae
xchg
mov
jae
pop
pop
mov
loopne
mov
movsb
adc
dec
data16
adc
rcrb
mov
sarl
inc
scas
dec
mov
cmp
mov
xor
into
or
dec
mov
sbb
add
out
cld
sub
cld
push
fidivl
push
push
adc
jbe
fstl
movsb
mov
dec
repnz
jne
lcall
push
sarb
xor
call
push
pop
adc
call
pop
xchg
adc
add
cmp
fnstsw
push
cmp
adc
push
jg
xor
xor
aaa
lock
push
popf
rcrl
sbb
lret
pop
add
into
sbb
imul
push
mov
push
ret
stos
fcmovnbe
mov
add
ds
aad
shlb
outsl
outsl
dec
dec
hlt
xchg
bound
jp
scas
scas
sbb
adc
jge
mov
leave
inc
xor
mov
cmpsl
push
and
aam
pop
lcall
into
mov
xor
bound
lea
subb
push
dec
pop
gs
push
add
jecxz
rolb
into
mov
push
xchg
sub
adc
scas
xchg
jo
jae
and
rcl
jne
cltd
movsl
sub
adc
or
jle
cmp
cltd
mov
cmp
mov
rolb
pop
push
enter
and
pushf
rclb
mov
stos
xchg
push
fistps
lcall
fisubl
lret
fstps
xchg
dec
sub
test
sub
lret
fisubrs
movsb
and
cmp
scas
add
in
fildl
leave
pop
int3
lods
xchg
xor
adc
inc
imul
pop
aad
pop
inc
push
mov
sub
subb
loope
iret
out
jge
test
in
popa
clc
sub
cmp
add
add
push
jno
xor
jno
fimull
xor
cmp
and
xchg
mov
add
insl
add
cmp
jo
inc
jl
inc
js
xor
add
jb
fwait
and
das
push
fadds
and
adc
inc
outsb
movsb
mov
fidivrs
mov
dec
scas
or
imulb
js
test
ficoml
jge
cld
cmp
jb
lret
cmc
push
dec
xor
lods
test
lock
dec
test
in
call
js
std
ret
pop
push
push
add
add
lock
mov
rorl
pop
jmp
stos
test
cld
lahf
cmp
out
sub
or
and
aas
mov
mov
adc
jp
push
call
std
mov
or
mov
lods
xlat
dec
shlb
lea
lcall
cmp
xchg
mov
inc
rcrl
or
ffree
or
lock
mov
xchg
push
ret
mov
popf
sub
pop
lret
inc
test
xchg
mov
jmp
xchg
push
sbb
mov
or
nop
xor
mov
or
pop
inc
jns
out
sub
mov
mov
mov
push
enter
or
fbld
mov
addl
out
mov
imul
mov
mov
fbstp
das
cmp
enter
repnz
data16
adc
rolb
xchg
pop
cmpsb
dec
outsb
mov
or
ljmp
push
mov
ljmp
mulps
add
or
xchg
scas
inc
sub
add
cmpl
lret
xchg
mov
cli
dec
pop
push
in
xchg
push
bound
push
leave
pop
and
xor
push
ljmp
xlat
repnz
inc
cmp
jae
arpl
aaa
ret
xor
movsb
push
ficomps
aas
adc
lods
mov
mov
lock
fst
data16
add
xchg
cmp
arpl
mov
pop
push
notl
push
das
dec
roll
jbe
add
pop
mov
aam
out
or
sub
add
jecxz
lcall
mov
pop
cmpsb
add
fs
mov
mov
add
dec
push
pop
push
and
pushf
int3
dec
push
pop
jbe
aas
mov
mov
cmp
iret
aam
mov
pushf
rorb
loopne
jno
jg
push
clc
jb
test
stos
popf
adc
add
push
mov
mov
pop
cld
cmpb
scas
jle
bound
add
and
adc
mov
push
inc
pop
std
adcb
stos
jo
jns
sbb
popf
out
mov
push
cmpsb
pushf
cwtl
push
scas
add
bound
lds
popa
mov
xchg
shlb
dec
push
stos
cmpsl
mov
out
mov
dec
jbe
repz
imul
mov
push
push
and
xor
lock
sub
imul
lock
lret
xchg
push
and
lock
pop
mov
adc
cli
jp
lahf
pop
or
arpl
xor
inc
sub
xchg
xor
and
cli
inc
aam
cwtl
frstor
in
aas
arpl
addb
inc
cli
push
mov
xor
popa
enter
leave
daa
or
jno
or
mov
repz
popa
inc
dec
mov
stos
movsb
push
je
fbstp
jecxz
lods
push
pop
or
rclb
dec
inc
hlt
scas
out
cmp
push
stc
cmc
inc
push
dec
jp
xchg
fldt
leave
outsb
imul
lahf
jl
repnz
fcomps
mov
adc
and
rcr
xchg
aam
out
iret
push
inc
insl
cltd
or
xor
mov
lcall
push
push
shlb
or
sub
cltd
jg
pop
pop
insl
popa
push
lret
imul
out
fidivs
push
inc
test
sbb
fstpt
nop
out
mov
and
pop
movsb
lret
push
insl
ret
addb
mov
loopne
xlat
loopne
inc
sbb
outsl
push
int3
xchg
sub
outsb
inc
repnz
jmp
push
xchg
cmp
rclb
lods
fsub
push
mov
lds
push
jg
or
fimuls
sub
xchg
jg
xchg
jmp
and
push
xor
cli
sbb
ret
movsb
out
inc
lret
dec
in
mov
pop
xsha256
cmpsb
pop
sub
push
mov
pop
in
leave
popa
cmp
pop
test
cmpsl
rcrb
fwait
xor
mov
int3
push
inc
cmpsb
mov
ljmp
xchg
push
mov
jl
sbb
xchg
in
xor
ljmp
cmpl
dec
pop
jge
or
mov
ds
fcomps
fsubs
xchg
or
leave
scas
cwtl
rcr
xchg
push
call
outsl
mov
popf
mov
sbb
mov
movsb
xchg
movsb
inc
dec
add
inc
pop
outsl
xchg
inc
out
or
xor
shll
cmpb
or
jmp
ficoml
push
ss
stc
enter
mov
bound
int3
int
cwtl
push
xchg
test
jp
repnz
outsb
adc
das
fcmovb
loope
jmp
test
add
call
sti
and
ficoml
cmp
mov
ds
js
cmpsl
fdiv
jg
pushf
sbb
xchg
testb
xchg
mov
cmp
fcoml
outsl
pop
fnstcw
andl
xor
mov
fdivr
fisttps
push
adc
sbb
dec
pop
enter
or
push
stc
lcall
xlat
fstps
outsb
sub
in
and
mov
mov
jecxz
nop
movsl
gs
add
xor
dec
mov
mov
sbb
lcall
sar
popa
push
neg
adc
dec
adc
leave
dec
leave
call
mov
out
and
ja
push
lods
cmp
xchg
mov
mov
pop
icebp
lret
loopne
fwait
sbb
arpl
and
pop
mov
mov
jecxz
jge
pushf
pusha
inc
cmp
enter
jno
sub
jmp
sub
xchg
dec
lahf
lock
mov
sti
and
mov
loope
mov
xor
orb
fwait
sbb
js
mov
push
test
and
cmp
xchg
jb
cmp
ljmp
dec
and
test
gs
jp
psubb
movsb
rorl
or
ljmp
icebp
mov
imull
outsb
loop
icebp
inc
gs
jle
pop
out
mov
loope
xchg
adc
and
sti
incl
js
pop
adc
adc
mov
ds
out
sub
pop
test
mov
fimull
lods
iret
lea
lret
mov
loop
lds
push
dec
mov
jg
adc
clc
mov
loop
mov
mov
push
jl
fstl
jne
push
inc
and
shrb
iret
clc
sub
test
int3
and
int
adc
sbb
sbb
mulb
lods
jg
icebp
or
sbb
inc
or
mov
inc
out
dec
fstpt
adc
mov
mov
js
cmp
mov
mov
xor
lahf
dec
lock
lds
xchg
sahf
mov
inc
dec
sub
mov
movsb
aaa
loop
data16
cs
adc
ljmp
mov
imul
test
xor
push
fsubl
fsubrs
mov
out
outsl
mov
nop
or
call
xchg
jno
pop
push
cmp
gs
out
cld
test
xor
sub
pop
mov
notb
loopne
adc
js
jle
stos
loopne
rclb
nop
mov
iret
pop
dec
dec
mov
fs
cmp
out
add
push
in
shrb
adc
push
iret
mov
loope
ret
stc
fsts
fmul
sub
jp
pop
loopne
test
cmpl
scas
jns
sub
cwtl
push
scas
daa
test
mov
loopne
cmp
mov
cmp
add
notb
jo
xor
xchg
ss
fmull
pop
lods
and
dec
and
jp
inc
jbe
dec
lock
insl
cmpsb
lcall
jp
int
sub
lret
sub
cmp
cmpsl
push
add
sub
cmpsb
push
cmp
xor
fstp
lods
and
int
push
shll
dec
stos
jge
jecxz
dec
pop
dec
jne
cwtl
pop
cmp
pop
idivl
xor
loop
in
stc
mov
mov
cmp
inc
lock
sbbl
jae
cmpsb
mov
mov
sbb
dec
dec
sub
cli
cmc
fisubrs
push
add
dec
movsl
xlat
mov
xchg
cli
push
dec
arpl
pop
jp
inc
jge
lahf
out
push
data16
mov
jge
aam
mov
sti
mov
data16
jbe
or
jp
sbb
aas
nop
popa
sarl
test
fimull
xchg
out
jnp
xchg
jb
popa
xchg
xor
mov
mov
inc
iret
xchg
call
std
xor
mov
jl
push
lahf
mov
xlat
arpl
fstps
sbb
push
xor
clc
xchg
fldenv
dec
repnz
mov
push
xchg
loope
sbb
shrb
in
shlb
dec
mov
and
xor
sub
and
das
pop
dec
dec
sahf
es
frstor
push
push
dec
dec
in
jae
fildl
movsb
shr
inc
and
movsb
mov
sub
sub
cmp
pop
nop
in
insl
adc
icebp
scas
repz
pop
or
incl
aas
adc
insb
mov
data16
jmp
mov
or
and
pushf
fwait
jne
fnsave
mov
mov
in
and
mov
insl
and
fistl
gs
cltd
aaa
xchg
mov
sbb
jmp
xlat
inc
ljmp
xchg
subl
out
jo
jno
iret
jnp
mov
ret
inc
jmp
sbb
dec
adc
hlt
int
out
lea
movsb
dec
dec
jp
ret
mov
push
pop
dec
and
imul
insl
into
dec
adc
pop
adc
scas
pushf
loope
mov
neg
or
xor
sbb
pop
clc
decl
fistl
nop
adc
lods
or
mov
adc
into
jae
sbb
sbb
mov
inc
mov
xor
sub
cli
mov
push
jae
pop
js
imul
shll
addr16
sbb
xchg
outsl
aaa
mov
jo
xchg
hlt
and
mov
fistpl
repz
aaa
shlb
cmpl
mov
push
mov
icebp
in
inc
divl
das
cmp
nop
mov
and
pop
sti
inc
mov
pop
xlat
mov
negb
xchg
movsl
xor
mov
fwait
pop
stos
hlt
mov
mov
fldenv
or
pop
push
adc
jns
push
orl
push
dec
mov
jmp
pushl
dec
das
ss
adc
pop
add
sbb
fcoms
mov
call
inc
in
dec
dec
cwtl
mov
dec
outsl
add
sarl
pop
popa
aas
dec
ja
xchg
cmp
mov
push
mov
cmp
xor
or
stc
insl
leave
rorb
or
jnp
xchg
cmp
inc
arpl
aas
cli
pop
scas
insb
test
ret
add
aaa
repz
sbb
fdivr
cld
dec
push
add
lea
inc
inc
dec
movsl
movsl
push
mov
add
cmc
sub
imul
jns
mov
aas
mov
cli
lea
sub
add
int
repnz
jb
xor
pop
decl
ljmp
mov
lods
rcr
hlt
and
adc
mov
jge
shll
mov
or
cld
pusha
aam
data16
aas
int3
cmp
in
cwtl
push
push
sub
xchg
roll
push
dec
mov
jnp
loop
call
push
mov
out
xchg
pop
out
sbb
loop
cmpsb
ret
pop
xchg
shll
movsl
mov
mov
dec
push
cmp
scas
shll
push
shr
and
push
sub
mov
je
stc
fnsave
dec
loope
xor
push
or
inc
cmp
cmc
sahf
nop
mov
sbb
mov
mov
push
xor
mov
addr16
cmp
xchg
add
test
jecxz
push
mov
xchg
repz
dec
into
aas
jle
sbb
xor
fmulp
cmp
in
inc
cmp
sbb
ss
pop
mov
in
sbb
adc
leave
in
add
mov
mov
sbb
std
bound
aaa
sti
jnp
enter
jns
iret
fisttps
in
push
mov
or
mov
or
ss
adc
mov
dec
pop
rclb
or
push
sub
cmp
ljmp
lods
pop
and
mov
mov
xlat
icebp
data16
mull
clc
adc
fnstenv
std
arpl
sti
sub
sqrtps
js
push
xlat
and
ret
xchg
adc
cmp
in
lret
hlt
push
cmpsb
cmpsb
xchg
outsl
leave
dec
jmp
xlat
mov
add
loop
sbb
daa
mov
scas
mov
mov
or
pop
add
mov
adc
mov
add
push
outsl
mov
sti
adc
cld
std
cwtl
pop
mov
jg
inc
repz
subl
jg
jnp
xchg
mov
dec
dec
cmp
stc
sbb
int3
pop
jne
jl
mov
int3
pushf
xlat
aam
xchg
insb
out
test
mov
popf
int
push
push
mov
mov
test
in
lds
mov
gs
daa
push
aam
adc
or
mov
loopne
xor
cmp
into
mov
or
xchg
adc
ja
insb
aad
aaa
jbe
cmp
sti
cld
pop
inc
cmp
cli
iret
jge
ret
out
xchg
fisttpl
ljmp
add
cmpl
lods
inc
scas
mov
sbb
lcall
xchg
sbb
inc
adc
insb
pop
xor
xor
ds
pop
and
sbb
in
mov
xlat
mov
jecxz
mov
lods
jp
mov
repz
sbb
add
sbb
push
push
not
cmc
push
nop
lret
xor
cltd
stos
popf
push
gs
in
mov
mov
imul
cmp
lods
xor
xor
repnz
xorl
pop
fldt
loopne
cmc
ljmp
mov
push
jne
inc
sbb
cmp
lods
jl
test
jne
fisttpll
jbe
gs
dec
pop
stos
icebp
rcll
add
xor
mov
movsl
xor
mov
aam
clc
ljmp
mov
xor
mov
inc
scas
sub
push
pop
lahf
loop
xchg
loope
fs
adc
pusha
pop
cld
sti
sub
mov
rcll
imul
xchg
fimull
pop
mov
inc
xlat
xor
dec
mov
popa
mov
fidivrl
insl
call
dec
insb
and
leave
mov
gs
inc
sbb
seto
les
mov
mov
mov
cmp
insb
sub
and
and
jmp
mov
jns
daa
and
das
pop
xchg
sbb
shrb
in
jne
and
add
xor
enter
push
in
out
push
xchg
jns
xchg
or
push
in
scas
jne
shlb
sub
and
ja
or
push
add
enter
mov
inc
inc
pop
mov
das
push
and
hlt
mov
or
and
insl
rcrl
push
fstpt
mov
mov
xchg
aam
pop
and
xchg
enter
add
cmpsl
fstpt
aad
add
xchg
fs
cmpl
dec
add
bound
add
inc
adc
shrl
repnz
test
shrl
lds
fmull
mov
mov
jle
push
cmpsb
cmpb
push
xchg
andl
ds
cmp
nop
dec
mov
test
inc
ljmp
jns
in
mov
xor
nop
inc
push
inc
lret
inc
jmp
clc
and
sbb
pusha
daa
clc
and
in
xor
scas
out
leave
jb
iret
or
push
subb
cmp
fadds
pop
popa
fnstsw
dec
mov
stos
jb
cli
fwait
pop
push
jge
out
int
jmp
push
sub
lret
hlt
adc
lret
pop
cmc
mov
mov
inc
add
lret
aaa
jecxz
dec
mov
lret
inc
pop
cs
cli
mov
mov
cmp
aam
daa
sub
mov
fstpl
push
mov
mov
and
insb
and
divl
ret
jo
mov
pop
add
dec
xchg
and
pushf
pop
inc
dec
cmpsl
roll
mov
push
add
mov
loopne
cltd
pusha
sbb
xor
js
in
hlt
mov
add
push
addr16
push
jne
arpl
loopne
fldenv
in
push
push
adc
std
decl
and
jg
incl
xchg
push
push
jp
in
cmp
pop
pop
mov
pop
ror
je
adc
jne
scas
inc
inc
xchg
cmp
add
aad
jp
push
xor
das
cmp
pop
jle
add
push
rol
pop
aas
mov
xchg
push
jno
push
call
cmc
jns
notl
fcmovb
pop
ffree
mov
aaa
insb
jae
scas
hlt
ret
cli
pop
or
xor
and
xor
scas
xor
adc
and
cmpsl
jmp
or
inc
mov
push
inc
fcompl
or
inc
popf
fidivs
xchg
loope
dec
mov
or
jbe
cld
push
mov
xor
pop
scas
int
pop
pop
sti
loope
data16
or
addr16
fdivrp
xor
mov
add
xchg
xchg
dec
sbb
lret
js
fdiv
lret
and
mov
test
leave
orl
filds
or
sbbb
xlat
adc
jb
mov
in
subl
pop
fwait
inc
xchg
out
pop
add
sti
sub
gs
pop
outsb
test
pop
sub
sahf
inc
call
add
in
pop
sub
push
inc
les
call
push
addr16
inc
sub
mov
sbb
mov
mov
inc
lods
movsb
mov
pop
out
cs
mov
dec
or
fstl
inc
push
outsb
xchg
mov
adc
leave
fs
add
add
scas
jae
icebp
shr
imul
push
lcall
pop
cmp
out
jno
aaa
clc
scas
ret
icebp
pop
dec
jb
push
xchg
sub
push
sbb
xchg
pop
pushf
cmp
push
rcr
sub
out
cmp
cmp
cmpsb
sub
cmp
jne
loop
das
push
pop
insb
push
xchg
aad
sahf
es
mov
push
jle
dec
fisubl
inc
adc
imul
pop
leave
pop
ret
dec
jno
cs
lea
les
xchg
pop
sub
dec
rcll
mov
add
stos
fmuls
aaa
mov
test
mov
shlb
cmp
cmp
jle
cmpb
mov
jp
sub
divl
stc
push
mov
mov
ret
add
cltd
sub
push
aas
or
call
mov
mov
mov
adcl
mov
cmc
into
lods
aaa
fsubp
repnz
and
xchg
aad
dec
lret
vorps
push
inc
lods
cli
jp
jle
xchg
inc
mov
sub
xor
mov
addr16
stc
mov
mov
and
adc
das
mov
push
mov
clc
lods
mov
mov
push
lea
adc
sbb
stc
out
push
sub
adc
jge
test
mov
int
sub
add
cmp
push
int
leave
cld
cmp
movsb
int
inc
ffree
or
sub
mov
lods
loop
imulb
pop
jge
xor
push
lea
dec
sbb
and
movsl
cli
xor
lock
shrl
add
nop
ret
sub
lret
pop
cltd
cmp
aaa
xor
leave
gs
ja
pop
or
xlat
data16
jle
mov
xchg
or
cmp
pop
xor
into
in
mov
sub
sbb
ficompl
cmpsb
add
or
addr16
pop
mov
jmp
fistl
cmc
js
pop
mov
incl
gs
lcall
mov
dec
mov
pop
dec
rclb
add
adc
push
adc
cmc
out
push
adc
dec
jb
sub
mov
test
fldlg2
out
and
sbbl
mov
fistl
lds
xchg
or
dec
sbb
push
adc
inc
jns
out
jmp
mov
mov
cmp
sbb
aad
xchg
dec
inc
subl
push
arpl
movsl
cmc
jl
xlat
adc
fsubs
dec
mov
nop
pop
dec
arpl
pop
adc
mov
pop
xchg
cltd
xchg
pusha
lret
xchg
mov
sti
xor
call
mov
js
je
cmp
clc
fistl
mov
clc
push
inc
push
in
movl
out
test
test
adc
jnp
les
cmp
mov
lahf
adc
pushf
sub
jns
out
jl
pushf
dec
inc
pop
jmp
or
leave
pushl
je
and
sti
repz
sub
rcl
mov
call
inc
or
dec
fadd
push
pop
jns
or
stc
repz
pop
mov
mov
shll
xchg
dec
mov
mov
add
pop
ret
test
xchg
addr16
sbb
cmpsl
out
aas
out
push
lods
out
jns
fcoml
call
lds
mov
outsl
cltd
int
pop
les
lret
add
into
push
daa
adc
jns
imul
shrb
cmp
in
jnp
mov
loop
xchg
xlat
push
sub
aas
lock
add
cmpxchg
pushf
ja
lods
int3
add
out
loop
adc
ljmp
or
aas
add
test
shlb
inc
std
xor
mov
and
dec
lret
bound
call
aaa
fnsave
xor
lret
cltd
adcb
out
xchg
mov
pop
pushf
sbb
ds
pop
out
rep
inc
cltd
jp
aaa
test
jo
je
roll
shlb
push
sbb
cvtpi2ps
dec
fs
cwtl
int
out
icebp
sti
fcomps
fisttpl
xor
cmpsb
loop
jb
xchg
and
adc
ret
mov
movsb
fcoml
sti
push
cli
and
outsb
fidivl
aaa
arpl
loopne
xor
stos
imul
je
loop
sub
faddl
pop
pop
or
jns
pop
mov
orl
cmpsb
sub
adc
or
dec
popa
mov
inc
pop
mov
jnp
outsl
cld
xchg
jae
mov
sbb
aaa
or
or
dec
int3
lret
outsl
xchg
fs
sbb
lret
push
pusha
mov
lods
fimull
and
dec
mov
xorb
xor
inc
stos
pop
push
pushf
sti
shrb
xchg
ja
stc
cli
int
jne
mov
push
add
jne
movaps
or
outsl
test
popf
xorl
movb
pushf
jp
divb
flds
fwait
xor
or
sub
test
jge
push
js
mov
lsl
jb
insb
sub
xor
clc
or
clc
cld
int
adc
test
xor
shl
mov
enter
xor
cmpb
push
aam
cmp
les
flds
js
pop
pusha
insb
jp
xorb
gs
imul
aas
mov
pop
out
testb
out
jmp
cs
icebp
icebp
or
ljmp
xchg
icebp
dec
flds
mov
push
adc
pop
sub
in
hlt
leave
ljmp
dec
hlt
in
cld
xchg
ds
cmpsl
pop
test
inc
xchg
and
sbbb
dec
mov
aaa
mov
jmp
int3
xchg
in
cmc
and
es
pop
mov
mov
rclb
testl
outsl
jb
jp
xchg
xor
sub
mov
lods
pop
or
js
or
clc
nop
dec
mov
mov
fwait
cmp
jle
push
stos
push
test
pop
ret
fstpl
inc
mov
rcrb
adc
sbb
in
add
adc
ret
lret
adc
add
fisubrl
pop
stc
sbb
stos
xchg
inc
popf
mov
shrl
call
sbb
add
adc
test
mov
lret
dec
dec
push
daa
adc
push
inc
dec
adcl
lods
jno
pop
mov
cli
das
loopne
push
add
js
out
pop
addr16
add
dec
testb
lods
sub
pop
in
and
lods
popf
push
inc
pop
inc
sti
lcall
mov
sahf
outsl
ss
xchg
add
xor
cmp
sbb
jne
shrl
aam
sbb
aam
mov
fstpl
and
push
js
and
cli
jecxz
cld
test
jb
sub
mov
sbb
mov
inc
loop
ss
std
adc
insb
inc
aaa
call
sub
xchg
dec
add
dec
dec
loopne
daa
xor
xchg
push
xor
adc
ret
inc
lea
push
jmp
out
xchg
push
mov
fs
inc
mov
mov
push
mov
add
faddp
pop
mov
mov
or
mov
sub
leave
add
push
xchg
push
imul
sub
pop
dec
gs
add
addr16
adc
xor
mov
cld
add
adc
ret
inc
pop
push
push
das
shll
js
mov
sahf
add
push
sub
adc
aas
ret
out
insb
adc
xchg
jge
jl
jno
push
xchg
push
outsl
mov
dec
mov
sbb
mov
xor
xchg
negl
dec
fadd
or
ss
mov
mov
dec
rolb
mov
push
or
js
scas
adc
push
and
jo
adc
add
push
jmp
xlat
and
sbb
popf
or
add
lret
push
je
iret
pushf
jbe
or
or
cltd
enter
popl
adc
outsl
dec
mov
jl
cmp
mov
dec
gs
stos
outsb
es
mov
sbb
fcmove
lock
sbb
in
rcl
push
jge
cmp
lcall
push
xchg
cmc
fsubr
add
pop
sbb
into
jmp
sub
sbb
mov
mov
iret
scas
loope
or
mov
dec
leave
pushf
jmp
lahf
inc
out
std
lds
hlt
in
ds
inc
push
and
or
inc
jecxz
addr16
sbb
nop
movsb
push
cmp
stos
lea
dec
and
adc
xchg
adc
sub
sbbl
add
pop
push
pop
das
pusha
hlt
adc
push
jno
stos
cmpsb
das
cmpsl
outsb
push
push
jge
sub
push
imul
movsb
add
leave
jle
adc
jecxz
mov
aas
mov
leave
mov
lods
fcomip
push
jnp,pn
imul
xchg
popf
sub
call
adc
je
dec
mov
js
js
pop
arpl
add
lret
push
jno
cmp
gs
lea
js
insl
loop
cmpsb
and
dec
mov
jns
jo
lahf
addr16
adc
shrl
dec
and
lcall
add
xchg
mov
xor
pop
cmp
mov
ljmp
jns
sarl
or
rcrl
sbb
dec
mov
sub
cmp
das
sarl
sti
cmp
rorl
call
mov
xchg
add
xchg
xor
cmpsb
jne
dec
notl
jnp
arpl
jns
in
arpl
jle
push
icebp
mov
imul
fbld
adc
pushf
aaa
lock
jbe
lret
or
mov
js
sti
adc
lcall
pop
ja
les
xchg
mov
cmpl
mov
rcrl
leave
jmp
xlat
pusha
fildl
inc
mov
mov
push
mov
enter
rorb
repnz
mov
or
lret
add
mov
fwait
and
std
mov
jae
stc
fdivrl
sbb
loope
dec
shll
cmpsl
sub
mov
pushf
dec
mov
fs
cltd
mov
mov
mov
stc
dec
in
xchg
shl
mov
xlat
out
cmp
fmuls
cmpsb
jge
mov
je
sbb
push
adc
adc
mov
dec
out
jne
lret
imul
es
in
mov
std
jp
add
add
inc
xchg
cli
inc
mov
cmp
aaa
lret
movups
sbb
xchg
jbe
fcompl
pushf
faddp
dec
dec
xchg
dec
jno
pop
movsl
pop
jbe
lds
test
adc
in
icebp
pop
rorl
push
xchg
shlb
add
aad
cmp
push
clc
in
test
cmp
in
xor
jmp
adc
xorl
lret
es
sub
jo
pop
pop
jmp
loopne
js
sbb
add
lret
push
negb
and
and
lcall
inc
push
popa
int
int3
xchg
dec
arpl
int
or
mov
push
fistl
sbb
sti
lods
add
int3
xor
sbb
ret
pop
xor
xchg
fistpll
rol
sub
test
not
inc
and
inc
scas
sbb
stos
push
insb
aas
stc
test
out
xor
orl
fldt
xor
dec
mov
jp
stos
pop
adc
les
add
js
or
nop
mov
fcomip
xor
sub
inc
and
push
pop
ljmp
ss
sub
inc
mov
mov
and
add
dec
iret
movsl
das
movsb
cld
lods
dec
push
stos
ljmp
cmpxchg
xor
and
dec
push
cmp
int
inc
daa
movsl
mov
mov
dec
mov
jg
pusha
gs
dec
fdivrl
mov
je
lret
fcmovu
out
sbb
add
push
faddl
in
mov
in
movsb
nop
jbe
test
jno
mov
adc
xchg
mov
popl
push
lret
hlt
lods
xlat
orl
ficoml
push
cmpb
lret
jg
mov
dec
pop
cmp
fsubs
outsl
fs
mov
test
scas
ret
test
out
and
cwtl
xchg
repnz
mov
fwait
push
mov
push
jae
xor
mov
mov
inc
cmp
es
test
dec
fwait
setg
in
lods
jbe
sub
adc
or
push
out
and
in
daa
sub
mov
push
pop
cld
dec
es
loop
mov
imul
daa
sbb
and
sub
cmpsb
adc
daa
fsubl
pop
xchg
shlb
add
lock
vmovntps
and
push
mov
mov
mov
std
push
cmp
js
es
or
jne
loopne
insb
das
pop
addl
cwtl
imul
loop
cli
cli
or
lcall
cmc
mov
fadds
jae
jae
jp
cmpsb
in
xchg
aam
xor
mov
inc
mov
ret
cmpsl
shll
loopne
jne
ficomps
sbb
and
push
push
lret
out
jge
fdivrs
cmp
leave
mov
xor
or
movsl
fsubr
mov
sbb
cmp
mov
repnz
sbb
or
out
imul
cmpsl
les
cld
lock
scas
mov
cld
pop
imul
push
lret
les
mov
insb
lret
arpl
push
and
lcall
stos
xlat
ss
jge
jbe
loope
inc
or
test
lret
jns
enter
test
pop
loope
adc
ljmp
pop
adc
popa
add
jp
mov
push
int3
andl
in
inc
push
idivl
stos
jl
cmp
subl
fiadds
inc
adc
pop
sti
xor
rorb
xor
imul
or
sub
sub
dec
lea
mov
xchg
sahf
xchg
jle
icebp
or
cld
or
mov
pusha
xor
add
in
test
fldt
and
je
sbb
jbe
dec
pop
or
or
aad
movsl
jns
mov
orl
cmp
mov
mov
out
cs
add
cs
cmp
pop
adc
orl
cmp
fsubrs
xchg
mov
aas
xchg
cmovbe
ja
inc
jb
ss
xchg
mov
cwtl
test
shl
aas
push
mov
in
cmp
repz
andl
loop
ret
into
aad
movsb
pop
jmp
push
icebp
or
jne
imul
lahf
sbb
mov
adc
loope
addl
pop
sbb
sub
add
imul
and
xor
int3
repnz
sbb
scas
cmp
repnz
out
in
xor
cmpsb
stos
dec
loop
cli
cs
lods
mov
fcmovnbe
hlt
fdiv
push
cmp
into
inc
xchg
inc
mov
outsl
out
cmc
shll
jae
jmp
push
jecxz
push
sti
pop
out
aas
repnz
ficoml
pop
mov
lods
cmp
sbb
stos
sbb
cmp
mov
ret
cmc
jne
add
cmp
inc
dec
mov
ss
loope
cltd
sti
ret
mov
xchg
lds
pop
data16
sub
dec
sbb
inc
pop
addr16
add
dec
fsubl
and
xor
leave
outsl
test
or
ret
jno
pop
adc
arpl
pop
sub
pop
add
cmp
xchg
je
sub
cmc
stos
mov
xchg
enter
loopne
js
nop
dec
push
scas
sub
sahf
xor
xor
mov
jbe
popf
scas
fdivr
mov
outsb
cmp
scas
or
rcl
adc
xchg
xor
data16
push
add
jp
xchg
adc
out
xor
shll
sbbb
xchg
sub
mov
lcall
hlt
aam
les
pop
mov
cli
popl
lods
cmp
outsl
jae
sbb
in
push
cld
xchg
mov
fsubl
ror
mov
push
push
roll
inc
out
shlb
inc
mov
mov
inc
in
pop
cli
mov
or
pop
inc
push
mov
out
int
outsb
jg
fldl
mov
sbb
cs
scas
jl
push
mov
in
jnp
in
dec
mov
out
jle
xchg
mov
adc
or
mov
sbb
xchg
push
pop
repz
sbb
stos
jmp
pushf
cld
pop
loopne
iret
aad
lods
jl
cmp
fnstsw
bndstx
mov
inc
outsl
mov
mov
rcll
mov
pop
add
mov
fadd
inc
ret
pop
sbb
cltd
mov
nopl
aad
insb
adc
dec
or
and
fsub
lods
mov
xchg
pop
cwtl
movsl
jmp
pop
xor
xlat
sbb
cmp
lahf
sbb
jbe
push
and
xchg
jbe
out
cmp
ret
in
scas
and
xchg
les
cld
inc
mov
xor
movb
les
scas
jle
pop
jmp
or
cmp
jno
jl
sub
mov
loope
inc
outsb
push
dec
stos
mov
pop
cmc
adc
mov
std
cli
inc
sti
pop
das
insb
or
hlt
orl
ss
outsb
xor
movsb
jmp
les
xor
xor
pop
lds
outsb
not
or
sahf
mov
xchg
jbe
mov
lahf
es
cmpsb
fs
sbb
jle
jo
push
inc
jnp
sub
outsb
jg
loop
stc
mov
dec
outsl
lods
rcrl
sub
jnp
dec
pop
addr16
jl
nop
movsb
in
je
cmp
in
push
dec
js
rcl
arpl
insb
adc
dec
fs
mov
add
repz
adc
inc
adc
dec
cmc
aas
insl
push
aam
repnz
ja
or
mov
ja
insb
mov
and
dec
scas
cmp
lods
jecxz
arpl
lds
push
sub
inc
xchg
scas
xchg
fsubrs
mov
xor
push
rcrl
push
and
or
jno
cmp
jbe
jo
dec
shrl
inc
jb
push
popf
adc
xlat
lret
daa
adc
repnz
jo
pop
iret
push
cld
fstps
bound
sub
mov
sub
and
stos
mov
ss
int
sbb
cmp
jno
pop
inc
mov
dec
fcmovnbe
mov
xchg
mov
cmp
std
mov
and
or
out
cmp
and
scas
loop
adc
xor
mov
call
or
dec
mov
repz
sub
imul
out
sub
imul
bound
dec
mov
decl
mov
push
sbb
pushf
aad
push
and
dec
loope
mov
cmp
bound
and
test
gs
sbb
pop
jmp
push
mov
pop
out
mov
or
dec
jmp
scas
loopne
sub
dec
xchg
ret
push
and
cmpl
es
xchg
loope
das
add
jl
mov
in
lea
pusha
dec
iret
lcall
push
jle
pop
cmp
out
sbbb
jp
add
mov
xchg
sahf
int3
add
inc
cmp
adc
dec
inc
addr16
inc
ds
lds
ss
dec
mov
stos
insl
iret
out
jecxz
fidivrs
gs
mov
stos
in
jo
cmp
popa
push
adc
push
adc
leave
cmc
hlt
sub
insb
add
dec
sbb
xchg
add
add
jno
or
cwtl
icebp
mov
lock
test
rclb
mov
jge
jp
lock
fs
popa
inc
and
les
or
fld
jbe,pn
push
stc
and
cld
or
cld
outsb
out
cmp
aaa
filds
push
test
testl
jno
jge
xchg
lahf
fcompl
xor
jg
aaa
popa
fidivs
pop
mov
shll
outsb
je
adc
sub
ret
aaa
add
ret
out
mov
xor
xor
sbb
jge
inc
or
aam
aad
aam
outsl
jg
leave
jecxz
jp
fstp
js
testb
cmp
lahf
in
cli
pop
aam
loopne
jo
dec
xchg
mov
pop
fildl
cmp
mov
scas
and
fcmovnbe
cmp
dec
and
cmovp
testl
mov
mov
lea
jl
fisttps
push
dec
push
out
pop
pop
adc
lahf
cs
mov
cmpsl
jo
out
jbe
bound
dec
dec
cli
jbe
das
xor
les
je
imul
fsubrs
jno
pop
push
mov
lret
hlt
mov
subl
pop
xor
scas
dec
call
cmpb
rolb
cmp
push
cmpl
mov
mov
cmp
sbb
cwtl
loop
pushf
mov
pop
mov
ret
xlat
dec
ror
std
in
mov
jae
aas
cmp
mov
lea
mov
lds
push
rcl
sbb
jecxz
or
fidivs
in
mov
lret
outsl
mov
pop
loop
xor
stc
sub
lds
ljmp
pop
loop
pop
movsl
repnz
push
cli
xchg
and
pusha
sbb
push
test
shrl
fmull
xor
xor
dec
mov
lahf
mull
xor
fisttps
mov
movsl
stc
mov
nop
in
mov
mov
ret
jno
adc
scas
mov
shll
cld
push
imul
lretw
xor
rcrb
and
mov
call
into
xchg
jb
js
ds
pop
scas
sbb
cld
push
xlat
fsubrs
test
sbb
out
mov
push
je
xchg
dec
sti
mov
mov
ss
ficomps
enter
scas
jecxz
jl
cmovno
andl
xor
clc
jbe
adc
or
call
jl
xchg
movsb
lahf
jo
add
cwtl
jae
data16
xchg
imul
outsl
cwtl
jp
sarb
out
mov
jle
jecxz
in
shll
jge
ficoms
xor
aam
shrb
adc
clc
enter
mov
inc
push
add
movsl
aas
in
dec
sbb
and
aam
or
pop
mov
xor
jbe
sbb
jns
jle
dec
fisttpl
xchg
roll
test
mov
iret
test
loope
push
insb
dec
gs
push
jle
add
mov
sub
push
adc
enter
push
inc
les
fists
and
stos
inc
inc
imul
adc
pushf
stc
jb
inc
rcrl
jl
adc
xchg
stos
int3
fildll
xchg
loope
imul
cwtl
inc
fmulp
mov
push
jb
cwtl
cmpsl
loopne
dec
fdivr
test
xorb
bound
xchg
or
stos
cmp
sahf
mov
data16
fstl
adc
test
xchg
loope
es
pop
insb
ficompl
lret
mov
and
outsb
mov
xor
sti
jmp
pop
addr16
adc
sti
adc
shlb
push
aad
pop
aad
fildll
insb
stos
iret
hlt
inc
xchg
inc
or
xchg
addb
pop
test
das
ret
mov
mov
jmp
int3
aaa
push
dec
inc
aas
dec
push
and
divl
fistpl
sub
jbe
adc
push
jmp
sbb
mov
mov
jnp
andl
mov
mov
in
out
or
inc
out
ja
out
repz
mov
cmp
mov
xlat
sub
lock
clc
jg,pt
xchg
pop
outsb
mov
enter
mov
push
outsl
lods
out
lea
movsb
daa
sbb
movsb
mov
aas
jg
mov
adc
or
stos
lock
sbb
stos
pop
aaa
xchg
aam
fsub
jmp
inc
cli
jno
pop
push
flds
out
mov
das
cld
mov
pop
daa
hlt
mov
inc
test
enter
shr
insb
stc
adc
fstps
mov
and
xchg
aad
pop
inc
pop
mov
jge
lea
fidivs
popf
loopne
cs
imul
pop
cltd
lret
and
outsb
sbb
addr16
jae
rcrb
or
mull
sbb
cwtl
icebp
cld
adc
mov
loopne
in
sub
mov
xor
pop
push
push
adc
in
jge
mulb
push
mov
jno
dec
iret
sub
sbb
or
shl
pop
push
gs
ret
cmp
stos
and
or
jle
arpl
test
movsb
jp
lods
cwtl
xchg
frstor
mov
mov
pop
inc
stos
push
ss
sbb
bound
mov
repz
cmp
mov
adc
outsb
dec
nop
sti
lods
mov
adc
fimull
pop
nop
xor
adc
jge
ja
shlb
jb
arpl
aam
pop
fadd
jnp
cmp
in
fwait
jo
jmp
mov
jge
pop
ret
mov
and
test
je
sahf
mov
ljmp
push
icebp
mov
dec
or
js
pop
lods
cs
push
mov
bound
addr16
push
inc
lock
xchg
or
xchg
imul
mov
push
addr16
std
stc
sub
mov
xchg
sbb
mov
loopne
mov
shll
gs
jecxz
inc
push
pop
xorl
jnp
and
das
and
dec
es
xorl
cmp
jnp
mov
addr16
ss
xchg
pop
cmpsl
adc
loope
mov
in
enter
mov
cmp
mov
aaa
inc
xchg
fneni(8087
sub
dec
clc
fistpl
adc
dec
pop
sub
cmpl
inc
leave
add
addl
out
fiadds
jmp
es
sbb
or
les
and
out
jbe
scas
loop
inc
stos
and
bound
int3
arpl
jmp
cmp
ljmp
lds
mov
or
pop
xchg
dec
jbe
xor
mov
and
push
and
add
sbb
call
loop
pop
js
mov
or
rcrb
gs
pop
ss
push
pop
adc
hlt
repz
loop
xor
in
cmc
mov
and
sbb
shll
mov
mov
fldl
fistpll
mov
and
or
mov
inc
xchg
cmp
nop
ss
repz
cmp
xor
ret
pop
shlb
or
fs
shll
xlat
lds
xchg
lods
pop
mov
int3
lock
jnp
dec
xor
lds
jne
jle
in
stos
js
shll
fdivl
cmp
adc
xor
imul
xor
mov
jb
cmp
js
sub
add
xor
ja
lock
int3
and
ret
rorl
sbb
mov
mov
pusha
and
add
clc
xchg
cli
jmp
aad
lret
leave
orb
dec
das
cmp
or
cld
xchg
sbb
jp
sarb
add
insl
push
push
jnp
sti
loopne
jle
ret
movsl
out
mov
jecxz
mov
xchg
pop
stc
push
movl
xor
mov
pminub
jns
iret
push
sbb
jno
xchg
cmp
push
pop
aad
add
xor
jb
sbb
mov
ret
test
sti
inc
pushf
pop
sbb
neg
and
lcall
mov
jns
ret
inc
jge
sbb
cmp
popl
mov
mov
jecxz
iret
jecxz
mov
lods
leave
testl
inc
fstpl
movb
stc
jns
ss
jb
ss
mov
cmp
fs
cltd
dec
loop
xchg
cmp
fs
jl
mov
add
xchg
sbb
loope
xlat
dec
lret
pop
in
lahf
sarb
cmp
push
inc
sbb
pop
gs
repnz
xor
xlat
add
xchg
cmp
in
movb
dec
mov
int3
mov
aam
popf
in
ds
push
push
cltd
or
mov
push
iret
movsl
movw
jne
lods
loopne
dec
fdivs
mov
sub
or
mov
popa
xchg
jp
adc
xchg
mov
sub
or
das
xchg
loopne
sti
jp
xchg
sub
std
arpl
xorl
loop
mov
push
stc
leave
aam
push
pushf
lods
pop
adc
mov
sahf
xor
andl
pop
xor
dec
stos
cmc
or
sbb
xchg
mov
aas
inc
or
gs
pushf
mov
and
mov
das
inc
xchg
inc
call
add
wrmsr
enter
and
mov
pop
push
or
nop
ror
mov
sub
sbb
stc
add
hlt
push
push
arpl
dec
insb
test
pop
push
aad
jge
pop
push
cmp
cmp
mov
xchg
jnp
mov
enter
into
fistl
xchg
adc
adc
pop
add
data16
jl
mov
mov
xor
and
push
sti
lret
cmp
clc
outsb
inc
outsl
lods
loope
pop
in
pusha
fidivs
subl
jno
out
test
mov
dec
mov
out
into
mov
dec
std
inc
xor
mov
cmp
insb
and
leave
mov
cli
dec
test
xchg
dec
das
xchg
push
addb
push
xlat
inc
adc
pop
popa
mov
cmpsl
ljmp
pop
and
push
rolb
cmpsl
or
push
xor
es
test
out
jno
adc
mov
xor
push
jge
in
testl
rcl
and
dec
icebp
jp
xchg
shrl
das
movsb
shlb
gs
push
mov
push
fimull
add
jns
aaa
fwait
xchg
sub
es
addr16
xlat
xor
adc
sub
scas
inc
shlb
lea
jnp
inc
adc
lds
jns
lcall
jno
push
fbld
mov
xor
sbb
dec
loopne
movsb
jo
inc
in
adc
add
inc
aas
rorl
aad
pop
das
dec
xchg
lahf
dec
push
popa
inc
cmp
cs
fcomi
pop
ljmp
scas
iret
fnsave
inc
xchg
test
sbb
push
aas
test
sahf
roll
les
and
push
mov
shlb
sub
add
out
inc
popa
add
add
jb
sub
jge
orl
cmpsl
imul
fldcw
je
mov
in
mov
add
js
xor
push
jle
daa
incb
stos
xchg
and
xchg
push
stos
int
arpl
adcl
mov
nop
mov
inc
in
hlt
push
pusha
jns
push
ss
push
xchg
fidivs
inc
lret
jmp
js
push
ljmp
cmp
jnp
ja
push
sbb
cmp
xchg
xchg
dec
lock
xchg
cmp
pop
dec
mov
leave
into
jecxz
subb
in
cltd
out
mov
inc
xor
sbb
mov
cmp
pop
xor
scas
xor
jne
inc
scas
inc
and
cmp
psrlw
inc
pop
repz
dec
jge
sub
and
mov
fs
inc
dec
sbbl
repnz
xor
in
enter
test
retw
outsl
mov
xlat
cmp
popf
adc
fs
dec
adc
loop
loope
inc
sub
and
insl
mov
je
out
popf
les
subl
push
stc
jg
in
scas
cmp
fistl
scas
dec
rcll
nop
repnz
inc
jle
push
gs
aaa
and
in
int3
add
cmp
rolb
xor
push
into
push
inc
xchg
mov
jb
xchg
out
xlat
xor
loop
pop
in
or
add
mov
loop
in
jl
and
jnp
and
pushf
repz
sub
sub
sbb
add
jmp
mov
add
sbb
add
xchg
push
cmpl
imul
enter
inc
mov
fs
cmpsl
jnp
push
cmovnp
mov
out
adc
or
sub
jae
push
or
repnz
ljmp
mov
lret
dec
ret
ss
inc
test
ror
dec
mov
push
int3
test
test
xorl
mov
js
sub
bound
jns
in
pop
mov
cmp
fwait
imul
sub
mov
std
sbb
int
push
lcall
call
sbb
in
mov
push
mov
jge
imul
xor
sahf
mov
jns
inc
or
and
jns
push
or
ljmp
mov
fistps
je
std
das
fwait
aad
fs
test
sbb
div
popf
push
cmp
pop
cmp
test
push
cmp
call
jne
jmp
adc
cli
push
int3
in
outsb
sub
jb
jge
add
cs
or
and
loope
sbb
sbb
aad
sbb
mov
out
sub
or
mov
xor
mov
push
enter
dec
mov
jo
sub
clc
mov
in
outsw
in
and
xchg
in
jmp
addr16
xor
sbb
xor
std
inc
jno
sbb
rorb
ret
test
sbb
aas
lods
ja
call
sub
cmp
mov
mov
and
out
xchg
iret
mov
fimuls
aas
mov
sub
nop
ret
mov
push
aaa
dec
lods
add
out
cmp
sbb
cmpsb
jnp
cmp
xor
lret
jge
push
mov
push
es
fisubrl
cmp
push
sahf
dec
pop
shlb
inc
sub
jno
pop
mov
pop
in
dec
ljmp
icebp
lret
add
addr16
inc
and
xor
jbe
pushf
or
punpckldq
ja
pushf
push
fstps
and
call
rcrb
dec
psubusb
push
stc
or
popa
adc
inc
das
sub
dec
push
push
scas
push
xchg
inc
sub
mov
scas
enter
outsb
jge
dec
adcb
int3
out
mov
pop
clc
push
lcall
bound
mov
nop
push
gs
push
addl
test
dec
push
daa
outsb
popf
sub
add
lods
jno
rcrl
imul
pop
clc
pop
dec
inc
fstpt
test
stc
cld
scas
fsubrs
popa
pop
jo
out
getsec
aam
outsb
jb
xorb
sub
int3
cltd
inc
lcall
outsl
pusha
imul
fbstp
lret
mov
xor
lcall
movsl
push
dec
lock
mov
nop
dec
scas
dec
jns
mov
fcompl
fadd
mov
mov
or
addr16
cbtw
sub
addr16
dec
xchg
jecxz
arpl
pop
xchg
push
add
dec
dec
dec
push
xor
xchg
nop
and
pop
jge
adc
stc
lods
out
mov
xor
mov
cli
mov
sbb
jecxz
or
adc
cltd
call
ja
pop
sbb
mov
add
out
jp
adc
pop
bound
ss
pop
mull
cs
fistpl
fsub
movsb
jae
jl
in
xchg
cwtl
aad
f2xm1
dec
inc
pop
stc
push
or
mov
inc
loop
imul
mov
lret
loop
in
cmp
xchg
popf
inc
fwait
mov
lret
cmc
xchg
call
mov
imulb
pop
lods
cmpb
aam
xor
dec
pop
cmc
into
jle
jae
xchg
sbb
dec
jbe
cmp
out
jmp
xchg
cmp
jnp
out
add
lret
sub
imul
xor
pop
in
adcb
jge
les
cmpsl
cmp
shl
and
pop
enter
mull
mov
sbb
jge
sub
jae
sub
movsl
pop
enter
xchg
or
fisttpl
fcmove
cmp
cmp
jb
mov
jg
lret
sbb
or
inc
outsb
jno
jns
mov
mov
or
testb
mov
sahf
jne
xor
push
jl
mov
daa
pop
or
test
pushf
dec
jecxz
jb
data16
add
into
inc
insl
pop
roll
inc
mov
in
sbb
mov
call
out
mov
inc
mov
pop
test
push
imul
push
cmc
jnp
mov
negl
and
mov
aam
push
sbb
rclb
inc
rorl
jl
ror
fistpll
orb
push
ljmp
mov
mov
add
cmp
stos
fists
sbb
sbb
cmpsb
sub
add
adc
or
add
rorb
pushf
and
pop
xor
mov
inc
les
pop
push
push
push
fisubrs
cmp
and
out
insb
or
and
rcrb
cwtl
imul
inc
inc
std
scas
xor
mov
mov
push
add
adc
ljmp
dec
add
adc
pop
pop
clc
mov
xor
lcall
sbb
cmp
mov
andl
test
outsb
shlb
cmp
add
mov
sbb
popa
dec
dec
popa
or
xor
cmp
mov
mov
into
mov
xchg
nop
inc
es
daa
in
jns
and
cmp
fwait
int3
xor
push
inc
pusha
push
jbe
xchg
adc
pop
xlat
out
push
adc
dec
call
sub
frstor
inc
cwtl
and
aas
adc
cld
mov
add
mov
out
jmp
es
mov
sbb
gs
cmpb
sub
stc
hlt
cmpsb
popf
mov
sub
nop
loope
inc
int3
mov
cmp
cmp
enter
rclb
stos
and
mov
xchg
inc
sahf
jg
cli
or
sbb
jecxz
cli
pop
cmp
decl
cmp
jmp
xchg
inc
nop
sbb
push
dec
push
dec
push
inc
mov
pushf
sbb
shll
shlb
fidivs
subb
scas
jmp
std
jo
les
mov
xchg
loop
adc
sbb
sbb
mov
in
jne
inc
adc
dec
add
fidivs
fildll
push
mov
movsl
out
aas
addr16
ds
and
sub
leave
jb
inc
adc
mov
int
mov
ss
dec
push
xor
popf
call
insl
movsb
xchg
outsl
jg
push
int3
lea
cmc
sti
mov
rorb
mov
mulb
test
stc
enter
imul
mov
repnz
push
or
or
insb
stc
ficomps
call
test
stos
orps
divb
nop
sahf
scas
insb
mov
in
mov
mov
scas
adcl
add
cmp
pop
ret
in
orl
in
push
sub
or
mov
inc
push
push
shll
sub
add
shll
push
icebp
cmp
imul
popa
ds
cmp
xor
in
mov
xchg
jnp
cmp
jl
jns
mov
sbb
adc
ja
repz
cs
mov
sbb
pop
cmp
cmpsl
pop
inc
in
dec
cmp
push
popf
xor
push
dec
mov
jae
inc
cmp
add
inc
sub
cmp
int3
mov
inc
inc
out
vmovupd
inc
xchg
leave
scas
jmp
mov
jmp
jb,pn
mov
or
pop
inc
sub
cmpsl
loop
ja
jb
vucomiss
cmp
pop
movsb
lds
mov
pop
or
mov
popa
stos
dec
mov
inc
imul
data16
pop
leave
sbb
addr16
orl
shrl
je
push
in
dec
xor
xchg
data16
mov
adc
mov
sub
notl
push
or
cmovl
dec
mov
inc
xor
or
das
mov
pop
sbb
sbb
add
fiaddl
je
lret
icebp
mov
adcb
idivb
call
pop
add
iret
out
out
andb
mov
je
repz
mov
lods
mov
xchg
or
jne
xor
inc
pop
or
push
es
or
je
jno
es
adc
or
stos
rcr
fstps
lds
in
xchg
fmull
xchg
out
xchg
or
mov
inc
dec
or
adc
int3
adc
add
and
movb
mov
jnp
pop
dec
repz
mov
shrl
or
cmpsb
andb
mov
sbb
dec
or
push
je
aas
popf
mov
fsubl
call
out
xchg
cmpsb
mov
lcall
fstpt
scas
inc
mov
inc
lret
in
mov
sub
push
fldt
or
sbb
pop
fdivs
xchg
insl
pop
jg
jecxz
stos
mov
sub
lret
jl
mov
sbb
repz
xchg
mov
popa
repz
in
rcl
aas
cmp
push
cli
lods
sbb
adc
push
pop
xchg
call
and
test
in
dec
pop
xchg
dec
loope
fs
in
test
sbb
push
test
jle
mov
xchg
cmpsb
mov
orl
pop
fadds
jecxz
pop
jle
insb
xchg
jne
mov
dec
mov
enter
subb
and
mov
xor
add
cmpsl
ja
xor
dec
dec
sub
xchg
loope
pop
daa
adc
dec
int3
mov
add
pop
add
and
fwait
pop
lock
outsl
cld
and
push
mov
adc
in
mov
loopne
dec
and
daa
mov
movsb
bound
lods
cs
imul
cmp
loopne
or
adc
pop
sbb
cmp
xchg
cmpsb
xor
or
cli
sbb
xchg
test
out
mov
jmp
pop
inc
cwtl
pop
scas
xchg
scas
adc
scas
mov
xchg
xor
cmp
dec
js
outsl
icebp
xchg
mov
leave
ret
inc
and
mov
mov
shr
xor
or
sub
cmp
xchg
adc
testb
mov
cmpsl
mov
mov
pusha
fldl
xor
std
mov
in
loope
loope
mov
xchg
and
sub
cmp
adc
push
jno
shrb
jg
aad
push
adc
or
sbb
pop
stos
mov
fimuls
adc
mov
and
fmuls
xor
mov
xor
mov
leave
jbe
push
ret
mov
sahf
cltd
movsl
sbb
es
push
jae
mov
pop
sbb
mov
repnz
xor
lock
sbb
push
ret
repnz
fisttpll
inc
xchg
addl
lods
sarl
out
pop
leave
das
xor
pop
in
xchg
cmp
dec
push
inc
stos
cs
leave
or
sub
ljmp
cmc
cmc
add
out
push
add
adc
insb
pop
push
pop
in
scas
incb
cli
testb
fisttps
scas
add
test
mov
xlat
pop
mov
fistpll
and
xchg
ss
lock
push
popf
test
scas
and
and
mov
mov
sub
jns
jns
sub
fdivrs
mov
out
repnz
nop
xchg
loopne
xorb
jbe
out
movsb
daa
pop
dec
shl
pop
mov
push
aaa
xor
mov
jmp
xchg
jbe
push
or
jg
mov
fwait
xchg
push
sti
xor
xchg
push
or
sarb
pushf
out
sarb
cmp
pop
imul
adc
cmp
or
ret
inc
int
inc
mov
xchg
pushaw
and
adc
mov
cmpsb
add
in
fisubrs
xchg
cmp
mov
sahf
fldcw
cmp
ljmp
xchg
sbbl
in
cld
mov
mov
idivl
notb
add
dec
in
push
dec
nop
xchg
sbb
stc
aas
push
pop
xchg
mov
sbb
js
mov
jae
js
negl
dec
jmp
add
popa
push
repz
jbe
aas
pop
jnp
jno
pop
outsl
xor
mov
or
xchg
xchg
push
xchg
jo
nop
inc
push
in
xor
das
pop
hlt
bswap
mov
das
xor
and
sub
popf
adc
daa
mov
mov
jp
and
adc
dec
xchg
int3
cld
rorb
mov
xor
mov
cmp
out
mov
test
lea
test
xchg
sub
dec
sar
mov
enter
jne
dec
test
add
jae
mov
test
movsb
push
mov
ss
jmp
adc
pop
cld
adc
or
fsubrp
stos
repnz
cmp
pop
cmp
cmp
mov
js
jge
addr16
in
push
mov
push
enter
iret
mov
push
mov
xchg
lods
popa
adc
mov
mov
adc
or
or
lods
jb
sub
sub
push
lahf
jb
pop
jmp
jno
pop
mov
or
fcompl
jnp
insb
es
cs
adc
mov
add
bound
inc
movsl
pop
dec
lret
push
mov
add
jp
jbe
sbb
pop
xlat
adc
in
lret
add
incl
xchg
dec
adc
and
add
jbe
pop
mov
jmp
sub
push
pop
or
xchg
aam
xchg
ja
cli
dec
cwtl
xchg
jmp
repz
mov
adc
mov
das
mov
sti
sbb
xorb
mov
lcall
mov
mov
arpl
xchg
jnp
sub
jae
sahf
pop
andl
jne
imul
xorl
adcb
fiadds
adcb
jge
dec
add
lahf
jmp
ret
dec
fistpll
ja
mov
movsl
das
imull
into
add
lret
xlat
mov
rcrl
sub
pop
ja
int
int
pop
xor
mov
ret
jge
adc
push
insl
xchg
dec
test
ret
scas
outsl
mov
insl
jmp
stos
sbbb
mov
bound
and
mov
inc
mov
lods
out
adc
fwait
adc
jmp
dec
ljmp
dec
jle
popf
sbb
les
and
loope
jg
xlat
xor
sbb
or
aas
inc
enter
cmp
sub
sbb
out
mov
cmp
scas
pop
je
mov
js
ds
adc
dec
mov
mov
lods
ss
outsl
cmp
sarl
cltd
nop
shll
test
out
and
adc
int
mov
pop
jge
or
xchg
mov
pushf
jnp
add
jmp
sub
cmc
test
fiadds
push
inc
dec
fstps
ljmp
and
sbb
fildll
xchg
test
mov
push
into
mov
rcr
dec
mov
xchg
je
dec
adc
enter
cltd
add
or
out
xchg
seta
fmuls
jl
or
fstl
scas
rolb
fsubs
jbe
lods
cld
mov
push
push
dec
inc
and
mov
or
cmp
mov
leave
ret
adc
in
test
call
hlt
xchg
jo
xchg
loope
push
pop
iret
insl
pop
cmpsb
pop
loopw
mov
enter
or
in
dec
hlt
xchg
push
and
ljmp
cmpsb
and
sub
test
lcall
or
inc
movsb
imul
sbb
push
cmc
inc
es
jb
cltd
xchg
lret
cmc
mov
stc
inc
push
rorb
push
jmp
mov
xchg
rolb
add
add
xor
incb
pop
ret
cmpsb
add
mov
neg
jo
adc
out
inc
insb
stos
cmp
jne
arpl
adc
lods
dec
lret
xor
mov
push
and
pusha
mov
leave
xchg
imul
cmp
xchg
xchg
mov
rorb
xchg
jnp
pop
adc
jb
add
jnp
imul
ljmp
and
mov
xchg
out
rclb
daa
cmp
call
aad
push
out
ficoms
testb
jo
in
push
pusha
scas
jge
aam
fadd
add
mov
addl
cmp
inc
mov
mov
jge
mov
sbb
test
faddl
aam
mov
add
push
cmp
xchg
push
and
ds
adc
pop
push
lea
loop
cmpsl
add
pop
inc
scas
lahf
sti
test
add
je
push
jae
add
mov
adc
insb
enter
in
sahf
insl
test
rorl
jge
sbb
icebp
test
lock
fsubrs
shr
in
or
iret
xlat
mov
cmpsl
and
cmovs
adc
xor
add
or
add
mov
pop
inc
jmp
adc
sti
roll
int
frstor
inc
fwait
sbb
mov
mov
cmp
mov
in
mull
movsl
mov
mov
inc
mov
xor
mov
test
push
jl
int
sub
mov
cmp
mov
lock
sub
cmc
mov
push
shrd
sub
push
insl
out
movd
pop
sarb
add
sbb
mov
mov
mov
das
leave
push
int3
sub
pop
enter
fwait
pushf
add
loope
fdivs
cmp
sbb
ficoml
mov
js
lea
cmpsb
inc
jno
jbe
ficomps
sarb
sub
mov
add
jne
shrb
mov
and
lods
fbld
or
mov
push
imul
mov
loop
imul
jle
inc
or
xlat
xor
ja
in
popf
movsl
fisttpl
ja
or
cmp
out
dec
int3
loopne
cmp
sub
or
daa
jg
cmc
add
int
inc
rorb
out
es
scas
push
cwtl
call
shlb
loopne
loopne
mov
jns
cmpsl
mov
test
sbb
dec
adc
push
adc
dec
mov
jp
jg
insl
ret
aam
add
fnsave
jg
ljmp
push
loopne
push
xchg
roll
frstor
jns
dec
or
pusha
push
and
in
cmp
cli
inc
inc
mov
sbb
and
mov
movsb
aas
sub
adc
mov
sbb
aam
fcmovne
pop
or
and
mov
or
cmp
mov
dec
jp
lock
pop
mov
push
sbb
xchg
adc
loop
rorl
stos
fcmovne
dec
xor
and
inc
lret
loope
dec
inc
xor
push
jg
mov
mov
and
and
data16
jnp
xor
cmp
repz
xor
loope
shrl
or
cmpsl
arpl
test
das
lock
push
jnp
or
insl
or
ficoml
sahf
rclb
and
dec
ret
idivl
mov
xor
mov
mov
jns
cli
xor
stos
outsl
inc
psllw
ja
inc
in
fadd
push
cli
jns
xchg
into
add
lahf
mov
xchg
jns
jo
sbb
lods
ficomps
mov
in
push
andl
push
pop
mov
sub
sbb
lods
in
in
pop
stc
mov
inc
scas
sub
sub
xchg
int
fdivrs
mov
dec
dec
cmovns
pop
imul
sahf
pop
shlb
lea
sub
lock
cmpsl
add
sub
ss
cmpl
jo
dec
xadd
loop
adc
mov
cmp
xor
pop
mov
enter
clc
inc
adc
dec
decb
adc
clc
jecxz
repz
test
or
movsl
jne
adc
test
inc
mov
js
pop
int
ret
xlat
rclb
and
mov
in
and
loopne
pop
fistpll
lret
test
int
mov
test
sahf
outsb
mov
hlt
xchg
lahf
pop
loopne
inc
cltd
cld
sub
lret
add
push
push
ss
cwtl
daa
add
mov
insl
cld
xchg
sbb
rolb
es
or
sarl
outsb
xchg
mov
jnp
fstp
mov
ret
pop
push
or
xor
xchg
jp
js
sub
push
push
ret
jae
ja
mov
adc
inc
fimuls
scas
je
sub
xor
push
insb
out
faddl
xchg
shl
shll
adc
jl
addr16
push
and
xor
fucomip
jl
andb
sbb
push
aas
jmp
loope
jmp
mov
mov
xchg
rcr
scas
push
cmp
jnp
clc
inc
xchg
mov
sbb
call
pop
push
xchg
mov
or
lcall
inc
lods
jl
popa
sbb
inc
or
xor
insl
jnp
fistps
or
sub
lds
xor
lock
xor
lds
mov
pop
out
cwtl
sbb
lds
xchg
nop
push
test
jmp
ja
or
aaa
push
fwait
pop
jle
or
jp
push
inc
jno
jge
push
xchg
in
dec
or
cwtl
int3
push
out
sbb
test
fwait
mov
or
insl
std
push
das
cmp
in
out
flds
mov
and
daa
push
xor
pop
jle
mov
fmuls
dec
pop
sub
push
icebp
aad
or
jp
mov
xchg
cmpsl
ljmp
test
mov
sub
shl
mov
fldt
data16
fisttpl
les
cmp
xchg
ds
sbb
xchg
pop
arpl
sar
sub
fs
pop
push
cltd
pop
sub
std
movsb
cmpsb
das
ljmp
cwtl
or
cwtl
in
adc
xlat
mov
cmp
cli
out
lcall
fisubl
xchg
mov
pop
popf
jmp
dec
dec
inc
arpl
enter
mov
xor
dec
stos
fstpt
push
dec
cmp
out
xlat
std
jle
add
xchg
sbb
es
and
aaa
xchg
stos
lods
lock
cmp
lcall
jne
dec
sub
jno
jbe
xchg
add
ljmp
xor
ret
mov
add
mov
dec
outsw
aas
jp
stos
dec
xchg
loopne
lcall
mov
cmp
nop
mov
dec
mov
inc
cwtl
and
xchg
insl
mov
pop
and
sbb
sar
jmp
push
js
iret
adc
test
mov
and
mov
and
mov
push
insl
and
popf
push
and
popa
cli
enter
cmp
insl
iret
xchg
mulb
xor
ftst
lcall
fst
cmc
cmc
negb
mov
stc
lahf
or
ds
arpl
mov
sub
lret
inc
cmp
dec
pop
cltd
mov
leave
jb
inc
jbe
cld
xchg
mov
sub
fsubl
je
lea
jne
lds
rclb
xchg
iret
lcall
dec
inc
lret
ds
das
mov
dec
dec
pop
pop
cmc
cli
fldcw
cmpsb
mov
mov
jmp
and
cs
arpl
mov
pop
jne
ret
xor
popa
inc
push
dec
mov
jns
jle
mov
mov
and
push
sahf
out
fistl
scas
pushf
flds
jno
sarb
out
and
insb
shrb
insb
bound
mov
ss
xchg
je
in
mov
imul
out
scas
daa
mov
add
sub
xlat
sub
mov
cli
aaa
cwtl
mov
cmp
cmp
mov
in
lret
pop
adc
push
mov
ds
xchg
aad
jae
cmp
dec
sarb
loopne
jns
sbb
sbb
inc
aas
sti
mov
and
sub
sub
into
add
push
xorb
out
xchg
pop
push
xchg
mov
xchg
fs
repnz
int3
mov
pop
xchg
mov
mov
stos
mov
loopne
and
sti
mov
sub
cwtl
push
mov
aam
jb
inc
inc
pop
les
jp
test
mov
repz
addl
addr16
fdivrs
imul
fists
push
xor
mov
aad
and
sbb
lcall
inc
insb
ds
cmp
loop
cs
movsl
nop
sti
xor
aaa
enter
outsb
dec
xlat
push
add
push
mov
push
jno
push
inc
mov
push
loop
popa
mov
in
and
push
xchg
cli
insl
imul
adc
pop
xor
xor
push
or
mov
repnz
dec
pop
mov
stos
rclb
jge
dec
mov
and
pop
cwtl
popf
flds
shlb
push
pop
sti
aad
lock
lea
stos
bswap
sbb
es
bound
ds
sti
mov
sbb
fcmovbe
sti
bound
insb
push
sbb
out
mov
mov
gs
jno
mov
push
into
adc
cmp
sub
sbb
out
jg
inc
adc
xor
inc
icebp
fsubrp
fdivs
sahf
mov
ret
xchg
or
in
lret
arpl
sbb
dec
adc
nop
push
add
cmp
sub
aad
test
das
ja
mov
xor
xor
cmp
sbb
stos
xchg
fcmovne
addr16
and
add
sub
and
lahf
pop
jne
out
jge
sahf
adc
stos
in
add
jo
lahf
inc
xor
jns
leave
leave
adc
add
push
adc
scas
movsl
into
inc
push
adc
cmp
or
xchg
shrb
mov
cmc
in
movsl
xchg
popf
fistps
fwait
dec
je
hlt
jmp
fidivrs
mov
cli
outsb
mov
inc
test
push
movsl
mov
push
jg
aad
mov
dec
dec
fsubr
push
push
add
sub
out
loopne
mov
stos
adc
jns
push
lock
mov
xchg
out
andl
in
jae
sarl
lahf
loop
test
dec
idiv
out
mov
scas
or
xor
imul
cmp
inc
scas
jbe
or
lret
xchg
inc
lods
cmp
push
push
push
fadds
imul
fwait
mov
lahf
incl
mov
push
out
lods
lods
cli
push
inc
aas
arpl
lret
push
pushf
push
dec
fwait
in
xchg
repz
xchg
ljmp
xor
push
ret
add
call
cmpsb
dec
sbb
add
sahf
pop
test
sub
mov
dec
sbb
and
push
add
mov
inc
pop
add
into
pop
js
ret
insb
int3
mov
sub
dec
enter
inc
mov
cmp
jp
mov
out
cmp
repnz
pop
gs
arpl
jp
stos
nop
shl
insb
ljmp
jne
cmp
jecxz
in
dec
orl
cmp
mov
test
sbb
int
lahf
popf
push
adc
xchg
ret
inc
in
mov
daa
cltd
sbb
jnp
es
iret
movsl
push
or
sbb
aam
sub
push
or
inc
stos
pop
cmp
adc
mov
icebp
loope
aad
xor
lods
push
sub
fisubrs
push
jns
cmp
xchg
jge
add
jecxz
aaa
push
idiv
pop
pushf
sahf
sub
mov
and
mulb
call
mov
mov
pop
xchg
xor
and
jp
in
or
add
sbb
loope
pop
dec
dec
sub
jno
mov
in
cmp
sbb
xor
mov
pusha
xor
xor
imul
loop
lcall
mov
rolb
loopne
fucom
jle
sub
pop
movb
mov
dec
push
movsl
shlb
test
and
imul
int3
mov
js
jb
cmp
adc
lret
lret
cli
arpl
inc
push
push
mov
push
sub
pop
xlat
ds
nop
jnp
push
cmp
ja
add
lock
adc
mov
add
pop
call
sahf
cmp
cmpsb
or
insb
in
cltd
gs
test
clc
movsb
mov
aaa
sub
mov
mov
mov
inc
les
icebp
inc
xor
pop
notb
sbb
inc
loopne
mov
psraw
mov
xchg
push
xchg
in
mov
cmpsl
shll
addb
movsb
lock
jg
dec
int3
ds
dec
cmp
addr16
daa
insl
lock
inc
add
mov
rol
sbb
xchg
imul
into
jge
cli
inc
test
pushf
popf
xor
pusha
outsb
loop
inc
push
fdivrl
jp
sub
pop
enter
out
pushf
js
inc
or
lret
or
xchg
sqrtps
popf
mov
pop
push
mov
jb
dec
out
inc
push
rcr
test
mov
or
lods
pop
pop
adc
das
xor
inc
jno
pop
xchg
push
sub
adc
pushf
pop
pushf
in
lods
inc
mov
andb
or
in
mov
gs
nop
jmp
pusha
js
xor
frstor
stos
xchg
add
sbb
dec
xchg
and
mov
in
mov
jle
jmp
lahf
dec
std
sub
mov
rcll
pusha
mov
add
jmp
sub
ret
sbb
ret
out
push
stos
mov
add
cmp
lret
cmc
mov
fcmovb
pop
out
daa
shlb
fdivr
rclb
fstpl
shl
inc
mov
inc
jae
ljmp
rcrl
je
or
jg
mov
xchg
push
jno
std
lahf
dec
pop
push
aas
and
adc
pop
mov
aad
cmpb
cmp
sub
imul
jo
cmp
push
stos
inc
mov
xchg
fisubs
push
mov
inc
mov
daa
stc
icebp
out
aad
inc
ljmp
enter
pop
stc
into
je
dec
iret
sub
cmp
sbb
xlat
xor
nop
pusha
ja
fxch
popf
mov
fldl
or
and
int
jle
sbb
test
inc
gs
faddl
ds
xchg
and
xchg
mov
cld
arpl
add
repz
int3
xor
jno
mov
lcall
pop
cmc
mov
repz
jne
hlt
mov
push
pop
push
mov
jb
inc
push
aas
ja
flds
push
sbb
mov
mov
cmpsb
sub
orl
sbb
pop
xlat
jne
lds
cld
call
fbld
push
jns
pop
jno
cmpsb
sti
dec
in
adc
ret
int3
test
dec
inc
lahf
add
jmp
inc
xor
in
push
hlt
aas
in
push
ss
or
sub
mov
add
fiaddl
add
dec
cmp
sbb
adcb
imul
pop
cmpsl
pushf
ret
push
enter
sub
outsl
std
fwait
pop
pop
out
sbb
jg
pop
fstl
decl
and
out
xlat
xchg
mov
pop
mov
inc
insl
adc
stc
scas
repz
add
pop
es
cwtl
clc
xchg
scas
rolb
xor
xchg
adc
push
sub
loope
scas
imulb
bound
js
daa
enter
push
jns
sbb
mov
dec
into
rol
cwtl
repz
pop
cmp
push
xchg
lods
inc
aad
add
jmp
dec
add
push
pop
dec
aad
pop
in
stos
push
mov
xor
pop
lahf
adc
test
and
imul
lret
dec
outsb
pop
mov
pop
dec
cmp
pop
jge
lods
adc
jb
sbb
int3
and
cmpsl
jg
xchg
xor
pop
repz
cwtl
or
test
shlb
icebp
in
sub
dec
shrl
les
push
nop
xchg
and
mov
and
daa
pop
push
leave
jp
dec
add
xor
mov
cmpsl
mov
or
dec
test
pop
jp
jb
pop
outsb
inc
jns
pop
test
push
cmpsb
cld
es
xchg
or
or
loope
push
ss
mov
sbb
mov
call
adc
ss
mov
fs
jb
xchg
cmc
aam
adc
dec
or
dec
or
mov
pushf
adc
mov
mov
movsb
loopne
call
lea
xchg
ja
xchg
adc
loop
xchg
and
mov
das
lcall
fdivrl
scas
ljmp
shll
popf
cld
cli
mov
std
loopne
mov
fstpt
scas
stos
mov
out
ljmp
outsb
test
test
lahf
xor
shlb
ret
lret
mov
inc
repz
push
lods
ret
aaa
loopne
movsl
hlt
imul
push
pop
mov
in
lret
inc
inc
push
popf
pusha
mov
gs
push
mov
pop
lods
cmp
pop
mov
pop
sbb
cli
lret
fstpl
cmp
and
or
movsl
adc
and
dec
jne
or
xchg
push
or
xor
cmp
sub
sbbl
je
cmpsl
daa
ds
ffreep
arpl
out
push
push
shll
xor
insb
js
lds
xchg
insl
mov
lcall
push
mov
push
lods
fsts
jnp
or
stos
int
mov
popa
mul
jle
inc
fnstsw
or
pop
data16
push
mov
andb
dec
jecxz
xor
adc
inc
and
test
jbe
lea
addr16
daa
inc
add
das
clc
mov
ret
cld
pop
add
fucomip
or
jbe
mov
push
and
test
aas
inc
mov
and
lcall
fnsave
or
and
jl
cmpsl
stos
xlat
fsubl
pop
popa
loopne
mov
sub
imul
and
xor
jo
movsb
inc
arpl
in
int3
movsb
addr16
fs
cs
sub
pop
cltd
xchg
orb
pop
dec
shrb
adc
mov
mov
push
data16
jmp
inc
xor
push
xchg
andl
lds
xchg
scas
jb
sti
add
jg
bound
jl
insb
mov
int
sbb
aad
leave
lock
dec
rclb
das
test
lods
sub
dec
test
popf
nopl
jle
mov
std
mov
sub
mov
jae
jecxz
loop
pop
xor
pop
adc
in
cwtl
sbb
in
inc
mov
add
pop
xchg
inc
mov
inc
push
mov
imul
cmp
out
clc
es
mov
or
add
mov
fimuls
dec
xchg
xlat
lods
dec
cltd
push
inc
mov
fsubrl
sub
mov
or
cltd
lret
out
cmc
mov
pop
out
loop
inc
or
mov
pop
dec
push
xor
in
or
popf
loop
mov
pop
lret
pop
or
fisubrl
stos
inc
sub
pop
sbb
xor
in
popf
xchg
es
in
sub
sub
and
cmpsl
mov
scas
jo
dec
pushf
jbe
or
leave
lock
ja
xchg
mov
ss
xor
add
lahf
jmp
sahf
xchg
cmp
mov
mov
sub
xchg
inc
add
push
call
test
ret
or
mov
loopne
stos
xor
imul
mov
movsb
jno
enter
cmp
lods
iret
aas
mov
sbb
jl
cmp
lahf
and
xor
xchg
js
pop
xor
jle
adc
xchg
mov
dec
test
push
movsl
inc
mov
add
adc
sub
pop
iret
leave
dec
aad
or
cmp
cltd
push
pop
scas
inc
push
mov
test
dec
imul
shll
leave
sub
inc
cmc
movsl
pop
ret
iret
in
out
sub
mov
rcll
push
and
pushl
and
hlt
jp
dec
pop
add
mov
mulb
enter
mov
sbb
xor
cmc
push
sbb
pop
leave
sbb
std
pusha
cwtl
mov
popw
jmp
stc
pusha
mov
xor
sahf
cli
insb
inc
xchg
out
xor
mov
mov
mov
adc
cmp
cmpsl
push
sub
pop
xor
sub
dec
or
js
jo
psubusb
shll
in
mov
jo
xchg
add
sbb
mov
decb
je
add
pop
adc
mov
mov
mov
dec
push
xlat
fstl
sbb
sahf
stc
inc
xchg
out
mov
inc
aad
outsb
mov
fnstenv
sarl
mov
mov
sbb
les
icebp
nop
dec
push
pop
imul
cmpl
fmul
sub
dec
fs
ds
sbb
mov
aas
jmp
int3
mov
ror
aaa
dec
mov
sahf
xchg
inc
leave
insl
cmc
sub
mov
dec
aad
jl
jo
leave
cs
stos
inc
rolb
xchg
dec
pop
dec
sub
not
mov
dec
mov
aas
inc
pop
cmpsb
das
lods
out
xchg
mov
lock
sbb
pushf
scas
rcll
sub
ss
pop
xor
sbb
imul
mov
push
movsb
push
cli
mov
jcxz
xor
insl
mov
es
es
test
xorb
mov
popa
inc
add
rorl
lds
int
aaa
xchg
out
movsl
xor
aaa
sub
ss
mov
scas
popf
lods
arpl
xchg
ffreep
enter
mov
je
sub
rcrb
adc
mov
cmp
in
jne
cmp
inc
jmp
inc
shll
sub
push
je
push
dec
lret
adc
into
mov
fists
and
and
mov
out
std
or
jbe
in
mov
sti
stos
jbe
cmpb
pop
hlt
std
out
out
outsb
leave
enter
xlat
and
mov
data16
fnsave
imul
xchg
dec
aad
ds
clc
xor
insl
leave
sub
pop
fwait
cwtl
sbb
inc
popf
mov
in
mov
lret
pusha
mov
mov
scas
or
jecxz
outsl
cmpsb
or
ds
dec
fiadds
push
stos
imul
cmc
and
arpl
mov
scas
fiadds
xchg
jno
ret
fldl
xor
mov
mov
cmp
xor
scas
add
sbb
cmp
scas
loope
loop
mov
xchg
mov
arpl
pop
dec
sbbl
mov
xchg
hlt
jg
rcl
lea
leave
fsubs
adc
jmp
inc
in
aas
mov
ficompl
inc
jle
stc
jg
or
data16
pop
call
xchg
lcall
pop
lea
xchg
ror
cltd
dec
repnz
sub
ficomps
dec
push
stos
jns
jb
or
xchg
mov
mov
dec
shll
out
in
test
idivb
in
mov
xor
dec
outsb
outsl
xlat
in
lcall
sbb
dec
movsb
xchg
adc
xchg
xchg
popa
int
js
cli
loope
mov
sub
sahf
dec
jle
dec
xlat
loope
icebp
orl
and
adc
inc
mov
scas
cmp
mov
jl
imul
xchg
test
insl
push
sub
scas
inc
pop
push
ljmp
pop
dec
daa
mov
jo
mov
adc
test
push
loope
pop
adc
popf
xchg
push
lret
repnz
add
and
fs
lret
mov
or
aas
add
inc
scas
push
pop
push
push
fwait
or
xchg
adc
call
hlt
imul
jns
push
mov
fistpll
test
dec
jmp
mov
and
or
or
enter
sub
push
insl
mov
pop
loope
popf
imul
aad
mov
pushl
xlat
jecxz
jmp
jmp
test
rol
xchg
es
fchs
fs
pop
aaa
dec
jmp
jle
add
or
mov
mov
mov
push
nop
or
ret
sti
lret
and
in
mov
mov
dec
sbb
mov
dec
test
pop
sbb
xchg
sbb
sub
dec
jle
mulb
xor
andb
sub
cld
push
jmp
push
push
js
jl
gs
xchg
sbb
xor
dec
mov
pop
cmp
cmp
push
add
adc
in
imul
jge
inc
inc
lcall
mov
notl
lods
push
ja
scas
push
sti
adc
mov
inc
xchg
jae
or
xor
mov
in
cmpsb
mov
cltd
enter
adc
dec
xor
lock
add
mov
std
inc
shl
xchg
mov
mov
sarl
pop
out
push
add
add
sub
xchg
sub
sbb
lock
cld
jge
gs
repz
loopne
std
mov
sarl
push
in
cmovnp
in
movsb
push
jmp
push
add
lret
out
cmp
mov
dec
adc
inc
mov
shl
sahf
jl
pop
js
pop
fcompl
in
sub
cmp
jmp
scas
arpl
push
cmpsb
sub
fsubs
into
push
ret
jno
inc
aaa
dec
pop
dec
jbe
mov
jae
in
mov
fs
xlat
cmpsl
adc
xor
insb
xor
lret
sub
into
rcll
mov
ss
addr16
rclb
or
mov
cmp
fsubl
test
jbe
xchg
xor
insl
mov
lods
mov
stos
dec
pop
jnp
cld
lret
xor
imul
sbb
cli
push
rcl
mov
or
sub
mov
xor
xchg
sbb
test
pop
xchg
jl
dec
arpl
mov
pop
scas
icebp
fimull
insb
pushf
out
in
push
gs
stos
mov
cli
add
push
cmpsl
ja
arpl
leave
mov
lds
scas
cmp
pop
mov
std
and
aaa
mov
aam
test
pop
lds
std
rcl
and
mov
into
jmp
mov
arpl
mov
sub
jns
xorl
stos
shl
jmp
in
push
mov
sub
cmpsl
movsb
mov
fcomi
popa
and
pushl
mov
or
jo
dec
mov
lahf
sbb
sub
push
jo
lret
jbe
dec
dec
into
mov
sar
fmull
fldcw
rclb
cmpsb
xchg
lahf
xchg
fidivs
add
loope
rorb
pushf
lea
cmpsb
push
mov
xchg
jmp
cmp
jb
push
pop
loope
mov
and
lahf
inc
mov
es
xor
in
int3
ficoms
stos
xchg
fsubs
arpl
pop
mov
pop
fcmovnb
adc
mov
mov
test
and
leave
fpatan
mov
fcmovnbe
rclb
popa
cwtl
cmpb
jle
imull
xchg
lea
mov
jae
jno
js
mov
xor
inc
xchg
sub
pop
push
mov
mov
push
mov
imul
xchg
add
mov
xlat
clc
fwait
cltd
sbb
mov
pop
adc
mov
inc
adc
ds
mov
dec
mov
cmp
adc
cmpsl
and
or
cmc
jecxz
bound
sar
push
add
and
cmp
sbb
inc
mov
loope
sub
jo
out
stos
xchg
mov
sti
test
lret
or
mov
jbe
inc
ds
push
jb
popa
pop
mov
pop
enter
pop
out
dec
fs
xor
fmuls
pop
rolb
ret
stos
mov
sbb
insl
dec
mov
xchg
sub
js
popf
popa
cmpsb
xchg
or
fyl2xp1
bound
out
incl
cmp
add
ret
mov
push
or
fildl
cltd
insb
dec
sbb
xor
orl
xchg
cltd
pop
out
out
dec
adc
std
jb
fs
imul
insb
subl
mov
test
subb
adc
repnz
push
jbe
cli
push
mov
cmp
das
push
dec
xchg
adc
inc
dec
sbb
ljmp
jecxz
xchg
outsl
leave
test
xchg
inc
and
sub
fwait
adc
pop
sti
push
jb
lcall
rol
mov
clc
push
pop
fbstp
jl
pop
roll
adc
push
add
sub
pop
push
data16
sbbb
xor
rcrl
mov
loope
sub
mov
aad
mov
mov
bound
arpl
jmp
loop
push
mov
iret
jb
push
add
jo
or
push
shlb
lcall
inc
mov
stos
nop
xchg
jle
jg
js
sbbb
push
aad
scas
mov
ret
rorb
fwait
xor
daa
adc
dec
mov
sbb
xor
cs
stc
dec
shlb
sahf
and
pop
and
push
push
test
cmp
fidivs
dec
mov
adc
pushf
mov
sbb
and
popa
js
icebp
mov
lock
pop
xchg
test
das
add
pop
jecxz
inc
les
cmpsl
jg
add
lock
or
call
std
mov
and
aas
sti
bound
rol
fidivrl
jb
lcall
push
sub
jo
test
ljmp
cmc
lds
lret
sbb
movsl
rorb
movb
adc
mov
ss
insb
xchg
sahf
push
scas
push
mov
prefetch
adcl
fisttps
pop
pop
inc
and
sbb
mov
xor
jb
mov
and
pop
or
inc
sub
jge
in
inc
mov
in
adc
enter
test
push
test
or
mov
push
cmp
push
xchg
pop
repz
xchg
daa
mov
xor
and
dec
pusha
push
cld
scas
adc
clc
push
lods
add
mov
aam
roll
repnz
mov
filds
mov
adc
jns
add
ficompl
lcall
pop
fdivrp
push
jno
jl
dec
mov
rclb
cli
movsb
cld
test
das
cmpsl
sbb
divb
jo
pop
dec
aaa
pop
jmp
mov
inc
xor
loope
cli
imulb
jae
push
in
ljmp
xchg
dec
ret
das
mov
jle
cli
adc
push
popf
repnz
repnz
inc
dec
xchg
cld
stos
pop
mov
das
inc
push
shl
ja
or
cmp
leave
cmpsl
bound
lret
push
jecxz
arpl
pusha
aas
xchg
std
inc
cwtl
mov
into
pushf
xor
pop
push
pusha
add
cltd
loope
sub
dec
mov
push
std
ret
mov
xlat
sbb
jle
jnp
out
or
out
mov
ljmp
push
mov
popl
outsl
jg
test
jb
pop
or
or
jl
ret
mov
mov
je
mov
outsl
mov
push
push
push
repz
sarl
fsub
loopne
mov
cmp
repnz
sub
int3
and
mov
fcmovbe
shll
pop
ljmp
mov
inc
imul
inc
cmp
mov
pop
sbb
inc
add
in
test
jne
sbb
ja
jg
into
and
aaa
and
stos
pop
loopne
xlat
mov
mov
in
cmp
or
add
inc
int
imul
dec
adc
fidivs
jae
push
inc
cmp
sbb
imul
xlat
scas
inc
scas
jge
test
pop
inc
lahf
xor
mov
testl
pop
test
imul
movsb
je
and
sub
test
sub
mov
cmp
push
dec
pop
cmc
lahf
pop
mov
adc
popa
iret
jmp
xchg
cmp
lcall
imul
loopne
or
in
arpl
loopew
xor
lds
in
push
vunpcklps
xchg
xchg
ja
shl
fdivl
xchg
xorb
icebp
jg
dec
pop
push
ds
test
mov
scas
rcl
push
sahf
test
imul
mov
jp
or
cld
je
fs
mov
inc
push
mov
mov
xor
iret
xchg
cs
mov
mov
xor
or
sub
pop
pop
js
daa
push
lds
add
and
lock
cmp
pop
pop
mov
insl
sub
scas
fisubl
sbb
xor
imul
mov
out
inc
cwtl
aad
jbe
enter
jno
dec
jno
xchg
xlat
adc
imul
das
sub
shlb
arpl
jne
mov
test
mov
mov
out
pop
mov
test
je
rol
jg
add
cmc
rorl
jge
ljmp
pop
and
test
test
fdivr
adc
mov
decl
mov
ss
and
lret
jl
leave
xchg
and
sar
pop
in
pop
mov
fwait
out
or
dec
mov
or
or
repz
add
sahf
imul
loop
or
pop
popf
inc
and
mov
cmpsl
mov
out
daa
xchg
pop
pop
dec
xor
ds
outsl
adc
idivl
lods
mov
insl
dec
fnsave
mov
flds
mov
sub
sub
fcompl
jle
jae
fimull
dec
xor
rcrb
mov
pop
adc
hlt
and
adc
out
call
mov
imulb
lahf
out
add
ljmp
jge
shrl
shl
mov
aad
imul
rcrb
int
lcall
mov
mov
jmp
mov
loope
sbb
sbb
daa
push
incl
jae
out
jbe
and
fstpl
jae,pt
pop
shlb
cmc
or
add
inc
aad
ljmp
int
and
rcr
pop
mov
xchg
pop
sub
cwtl
inc
jg
lret
rolb
aas
pop
add
dec
pop
into
fucomp
fcmovb
jmp
mov
dec
xlat
xor
push
push
mov
mov
mov
arpl
decb
std
adc
xchg
or
mov
and
jae
sub
insb
lods
pusha
and
sub
les
lds
mov
push
in
cmpsb
addl
jle
dec
jp
pop
xor
xor
adc
sub
pop
notb
mov
cltd
xchg
lock
daa
and
andb
cwtl
es
fwait
popf
inc
lock
xchg
pop
into
mov
xorb
xchg
and
mov
pop
adc
das
adc
mov
and
mov
roll
xchg
push
gs
dec
mov
sub
dec
jg
and
jno
mov
add
ss
js
fdivrs
dec
xchg
dec
negl
ljmp
les
mov
test
jbe
test
add
or
imul
sbb
pop
mov
push
adc
outsl
mov
in
jne
and
insl
mov
push
xchg
cmp
in
pop
ja
pmaxub
in
mov
xchg
xor
push
sbb
jns
cmp
lret
imul
aad
cmp
cmp
or
out
sub
mov
push
fsubs
xor
mov
jle
jmp
test
test
xor
pop
popf
mov
xchg
dec
mov
flds
add
or
sbb
push
fwait
pop
pop
cmp
dec
jmp
dec
ret
incb
cmc
dec
scas
inc
repnz
jnp
out
mov
pop
cwtl
test
test
fadd
loop
dec
xor
or
inc
jns
inc
in
mov
rcrb
pop
test
decl
insb
pop
or
shrb
sbb
hlt
fistpl
out
test
dec
into
xchg
push
sbb
sub
leave
pop
mov
pop
mov
sub
dec
shl
sbb
push
loop
cmp
jbe
lods
push
mov
paddq
xchg
inc
xor
std
lahf
lds
scas
repnz
cmp
outsb
pop
jmp
rolb
ds
and
stc
sbb
adc
mov
bound
popa
cs
fdivrl
das
adc
flds
mov
xchg
call
pusha
or
dec
and
and
xor
adc
movsb
cmp
lea
or
test
push
cmpsb
xchg
das
sbb
xchg
shlb
add
jmp
mov
lahf
popf
stos
fnstsw
pushf
lea
repz
jmp
subb
sti
ret
lret
stos
xor
adc
repz
js
aam
pop
cli
and
orb
insb
in
ds
ficomps
out
mov
push
fcoml
sub
jo
sub
shrl
cmp
dec
loope
int3
fs
add
jnp
mov
push
adcb
push
rorl
movsl
fldenv
orb
xchg
in
movsl
add
dec
loope
mov
jno
scas
sbb
jns
xchg
insb
push
popa
sbb
ret
in
inc
jb
add
out
addr16
aam
stc
dec
sub
test
jae
mov
clc
adc
jl
xor
sub
or
mov
pop
fbstp
shll
inc
push
ficoms
stos
dec
xor
arpl
mov
loope
mov
icebp
insb
test
adc
lds
xor
jns
adc
into
sbb
test
mov
divl
lock
lea
inc
jns
inc
out
mov
add
ljmp
xchg
mov
jge
add
pusha
pop
dec
xchg
sbb
orl
mov
pop
fwait
cmp
push
mov
scas
inc
adc
fstl
imul
pop
mov
dec
je
push
jmp
sub
dec
mov
pop
fwait
mov
cwtl
les
and
jmp
dec
and
pusha
ret
inc
js
fwait
insb
rcrb
cmpsb
push
cmpsl
ja
or
out
inc
adc
adc
stos
and
insl
dec
sbb
push
mov
mov
es
fldenv
in
add
int
push
and
int
mov
sti
pop
ja
fstpt
pop
lods
out
dec
mov
sub
in
pop
jl
fstpl
xor
pop
jge
std
adc
arpl
fisttpl
mov
or
pop
push
xor
sbb
jmp
xchg
jbe
lret
adc
bound
inc
lcall
test
mov
std
movsl
sub
dec
loope
and
mov
dec
adc
idivl
mov
lods
dec
stos
jae
xlat
ds
pop
or
pop
sub
sub
dec
inc
dec
sbb
sbb
dec
add
mov
adcb
popf
add
nop
imul
sarl
ret
add
mov
call
xchg
imul
aam
out
inc
dec
clc
inc
test
xchg
xor
es
push
pop
aad
std
int
sti
mov
cli
mov
xchg
cmp
fs
mov
ret
sub
in
mov
sbb
mov
js
filds
popf
not
adc
push
push
sub
adc
ret
adc
push
sub
mov
shrb
out
adc
mov
adc
ret
testb
add
pop
mov
dec
stos
xchg
cmp
jmp
cmp
pop
mov
fisubl
rcr
les
jg
pop
adc
jg
test
mov
pop
pusha
lret
sub
and
push
pop
scas
push
and
cwtl
add
arpl
or
fsubr
xor
inc
ret
mov
cmpl
in
jno
cmp
rorl
or
jle
call
adcl
lea
paddusw
out
add
lcall
push
decl
dec
cmc
xor
repz
xor
and
rclb
lds
push
inc
ljmp
push
or
out
adc
sub
mov
inc
push
and
or
andl
pop
in
popa
mov
sub
enter
int
es
push
cmp
in
sub
stos
js
jmp
mov
loop
movsl
adc
gs
inc
adc
jbe
pushf
arpl
dec
add
dec
mov
shlb
mov
lods
in
scas
shl
sarb
aaa
sahf
mov
ja
popf
inc
inc
push
insb
loope
jecxz
inc
jl
pop
into
or
and
cmpsl
out
imulb
test
and
or
mov
sbb
jge
imul
lahf
mov
fimuls
frstor
aad
negb
inc
cmp
or
mov
cwtl
test
sub
adc
inc
mov
push
jbe
lods
push
inc
les
pop
sbb
pop
jno
mov
mov
ss
call
adc
mov
adc
push
cmpsb
add
outsl
jle
stc
add
addl
xchg
in
in
movsb
fldt
cltd
mov
out
adc
mov
je
xchg
sub
push
and
mov
dec
aaa
mov
repz
enter
stos
dec
into
cmp
mov
add
sbb
outsb
xchg
jmp
push
gs
lock
repnz
aad
pop
dec
add
popa
cmp
shl
xor
out
ds
stos
insl
ss
and
hlt
or
rcrl
push
or
xchg
jle
pop
sbb
cmp
xor
sub
jbe
bound
push
ficoms
push
push
pop
loopne
or
add
lds
jno
push
faddl
and
ficompl
cmp
push
in
add
lahf
das
or
loop
mov
das
jl
rcrl
push
icebp
add
mov
imul
cmp
pop
daa
sub
inc
add
aam
sti
mov
jp
or
jb
xchg
jns
add
add
jo
out
sub
fcoml
test
aam
push
xlat
sahf
fwait
sbb
jg
pop
insb
jg
push
dec
sarb
sbb
dec
push
outsl
pop
or
push
out
sub
scas
sarb
or
xchg
rorl
pusha
and
add
adc
sahf
shlb
mov
inc
ret
out
jae
pop
and
mov
je
xor
lahf
lods
dec
mulb
ret
int3
xchg
add
add
into
or
fcom
xor
leave
jg
das
into
lods
in
addb
xor
aaa
mov
and
ds
in
shll
data16
sub
frstor
jnp
xlat
in
jmp
push
pop
sahf
push
rcll
cmp
mov
out
add
fstpt
xor
lods
shll
popf
pusha
ljmp
stos
shrl
sub
add
cmp
daa
enter
jle
aam
aaa
hlt
push
jg
insl
insl
ficoml
add
pop
or
mov
adc
mov
fisubs
jle
cld
ret
outsb
cmpsb
dec
aad
jne
sbb
xchg
cmpsb
jae
inc
push
adc
ret
shrl
jge
inc
fcompl
xor
cltd
les
loopne
arpl
imulb
jg
xor
aad
aad
js
sbb
test
fdivrl
push
cld
arpl
cmp
es
add
negb
popf
arpl
xchg
and
pusha
push
int3
cmp
pop
arpl
inc
incb
fldl
cmpl
xchg
dec
sarb
hlt
xor
test
inc
fstpl
fcmovnb
or
xor
mov
push
sub
int
jno
in
idivl
or
scas
mov
enter
fdivl
fwait
push
into
pusha
fisubs
inc
fiaddl
dec
mov
hlt
shll
or
std
fistpll
aaa
cmpsl
pop
cmpsb
test
insb
cs
jge
jp
mov
and
or
int3
dec
mov
pop
ret
rol
ljmp
mov
mov
cmc
int
fdivrs
or
mov
fadds
into
xor
cmpsb
push
and
sahf
xchg
andl
or
enter
adc
test
nop
xchg
push
arpl
cmpsb
mov
je
fbld
fnstenv
push
fwait
mov
dec
ds
scas
addr16
pop
sbb
test
xchg
rorb
cwtl
adc
js
inc
popa
stos
cli
daa
jbe
pop
xlat
loope
push
sbb
imulb
int
test
mov
xor
xchg
cwtl
jle
sub
adc
addr16
dec
dec
mov
mov
pcmpeqb
mov
sbb
xor
inc
xor
stos
inc
std
jl
insl
mov
mov
and
outsb
mov
pop
push
push
lods
adc
sbb
sub
mov
mov
pop
int
push
movb
or
xchg
outsl
adc
mov
mov
xchg
or
mov
push
in
in
jge
mov
push
ret
inc
push
mov
stc
movaps
cltd
pop
test
outsb
jno
ret
dec
add
mov
pop
push
out
xchg
xor
lret
cmp
and
ja
int3
xchg
lds
adc
fcomi
dec
cld
fmull
xchg
insb
stc
or
cmc
inc
jne
inc
xchg
inc
cmp
jmp
mov
addr16
mov
test
pushf
pop
lods
push
into
inc
sbb
cmp
sbb
adc
clc
imul
or
adc
clc
pop
insl
cltd
popa
dec
pop
mov
ljmp
xor
cmc
cltd
add
dec
inc
pop
shl
cmpl
cmp
pop
xor
mov
xor
push
xor
jle
scas
cwtl
xchg
xlat
aam
sub
jae
adc
pop
shlb
jge
xor
lret
popf
add
mov
push
xor
outsb
in
cmp
mov
sub
and
mov
mov
push
or
es
lea
es
fidivs
lods
lods
push
rcll
sub
movzwl
ja
mov
lods
inc
stos
inc
dec
mov
or
clc
add
jp
aas
pop
outsb
test
test
jmp
negb
leave
aaa
jns
sbb
push
add
sub
pop
cmp
stos
lcall
stc
cmc
cli
insb
xor
pop
jecxz
in
mov
imul
loop
jo
cli
jl
leave
mov
sbb
insb
dec
xor
pusha
push
in
pop
pop
or
dec
lret
pop
fs
xchg
mov
cld
rolb
jmp
scas
movsl
cld
stos
add
cwtd
jo
push
mov
shr
ficoms
rorb
scas
das
sub
sbb
jecxz
inc
in
or
cmpb
push
jge
lcall
mov
sub
lret
sub
lret
lods
inc
push
test
in
push
push
aam
in
and
sub
bound
jns
inc
xchg
cmp
bound
gs
into
xor
in
test
ljmp
out
lea
in
mov
cwtl
cwtl
xchg
sahf
flds
rorb
aas
or
outsb
xor
sbb
push
imul
gs
ds
sahf
in
and
xor
adc
sbb
sahf
xchg
movsl
sub
out
or
shrl
aad
or
xchg
aaa
sbb
or
cltd
cmc
mov
jle
repz
sub
mov
jno
push
sarb
mov
test
and
sbb
loop
iret
data16
pushf
bound
mov
pushf
in
xor
rclb
in
xchg
pop
xchg
or
and
lock
mov
scas
xchg
dec
cmp
pop
call
sub
popf
movsl
in
lods
mov
jmp
push
sub
pop
adc
push
mov
sbb
andl
iret
fisubrl
inc
jl
test
mov
rorb
cmpsb
jb
xor
mov
and
repnz
or
add
pop
rcl
loop
push
mov
cld
dec
jb
or
ss
test
mov
aaa
add
fadd
jne
cwtl
ds
sbb
sti
sti
pop
cmpsb
push
or
and
sub
jns
mov
test
stos
test
cmp
lds
pop
add
xchg
add
sub
xor
dec
cli
inc
jno
daa
xchg
addr16
xor
rclb
pop
jnp
xchg
pop
sarl
pop
inc
sub
jns
pop
dec
pop
pop
in
cltd
lods
outsl
in
ficoms
popa
stos
fnsave
push
pop
mov
cmpsb
inc
jae
jbe
or
pop
and
dec
lret
xchg
cmpsl
jne
and
jl
shlb
shll
shlb
fdivrl
mov
and
lcall
ljmp
sbb
adc
in
adc
lods
xchg
jno
dec
data16
rcrl
add
bound
push
data16
out
test
lods
sbb
cli
out
xchg
test
mov
into
repnz
shrl
mov
hlt
sub
xor
and
test
daa
jns
pop
mov
iret
popf
inc
mov
stos
test
or
aas
xchg
or
sbb
daa
jnp
cmp
testb
rcrl
js
sbb
lret
pop
rol
divl
xchg
mov
ror
fwait
dec
stos
sub
pop
xchg
bound
stos
or
push
push
aam
cmp
neg
jle
and
pop
js
ret
pop
fistps
cmp
fsubrp
jae
call
in
inc
bnd
aam
pusha
lahf
test
cwtl
into
push
sarl
mov
les
jne
or
cwtl
aaa
ja
mov
xor
rorb
dec
push
out
lds
imul
addr16
pop
int
mov
mov
dec
dec
sbb
cmp
imul
jmp
sbb
out
pop
or
mov
push
dec
dec
das
xchg
fs
jge
pop
push
mov
or
aas
bound
cmp
pop
inc
scas
adc
loope
or
xchg
loop
dec
pop
scas
push
fwait
cmp
push
xchg
xlat
lock
leave
insb
std
push
inc
fsts
mov
test
xchg
cmpsl
movsb
hlt
leave
cmpsl
and
inc
fs
je
out
and
pop
adc
pop
movsb
cmp
add
mov
sbb
xchg
inc
cmc
int
popa
fisubs
outsl
push
cs
xacquire
pop
mov
rorl
cmp
out
mov
sbb
leave
call
cmp
outsb
push
push
lret
adc
aad
add
xor
mov
mov
lahf
sub
dec
ss
sbb
adc
ja
es
ret
jge
mov
jns
mov
mov
js
mov
stc
dec
dec
sahf
mov
js
jl
xor
scas
lcall
add
xchg
adc
test
push
fidivrl
scas
out
stos
movsl
or
add
inc
xor
test
add
aad
je
pushf
and
into
mov
or
arpl
cmp
aaa
pop
ljmp
mov
xchg
and
cltd
clc
out
or
cmp
push
mov
fiadds
add
push
out
bound
push
out
jmp
enter
xor
xor
mov
aas
dec
pop
je
mov
inc
outsl
daa
ljmp
icebp
aam
mov
push
aaa
cmp
sbb
push
dec
out
xor
hlt
mov
insb
sti
add
call
shrb
fs
testb
jmp
pop
notl
fs
sbb
sbb
out
imul
xor
sbb
mov
stos
outsb
mov
rorl
inc
pushf
sub
rol
fnstcw
mov
mov
xchg
movsl
lods
test
scas
pop
cli
jge
jne
imul
jbe
iret
faddl
push
fistpl
ret
push
dec
xor
add
repz
ss
outsb
imul
jbe
inc
cltd
test
andb
daa
and
push
and
fsubrl
movsl
fiadds
mov
andb
data16
jo
mov
js
mov
clc
jle
loope
cmpsb
das
and
lea
and
fcompl
clc
stc
sti
pop
xlat
std
sbb
movsl
jp
lea
js
dec
rorl
in
test
bound
mov
cld
push
and
fwait
jo
inc
cld
sbb
mov
int3
xor
xchg
stos
stos
addr16
inc
mov
jns
les
jmp
jne
or
mov
push
lahf
pop
dec
insb
rorl
mov
test
xchg
out
mov
mov
or
ret
sbb
adc
fildll
pavgw
push
jbe
test
or
pop
out
or
mov
cmp
fnsave
dec
jmp
jae
call
int3
es
dec
push
adc
jmp
daa
or
cltd
mov
mov
sub
mov
dec
mov
dec
and
jne
outsb
push
int3
and
pop
cmp
fstpt
push
cmpsl
sbb
nop
cmp
lret
sbbl
setge
adc
fdivrl
fstl
cli
pop
scas
dec
jle
pxor
xor
dec
jbe
jg
scas
pop
cmp
ret
dec
std
pop
lret
cmp
inc
mov
outsb
xchg
shlb
scas
iret
fsubs
es
cmpsl
push
and
mov
lods
mov
shr
js
stos
mov
mov
cmp
movsl
leave
push
fcmovb
adc
repz
daa
pop
xchg
inc
out
lret
dec
mov
inc
cmp
or
xlat
mov
adc
pop
push
les
jle
fdivl
cltd
sbb
daa
mov
xor
mov
out
push
subl
shrb
fbld
in
push
lods
push
mov
jno
adc
leave
addl
seto
mov
and
mov
cmp
xchg
pop
and
repz
cmp
xchg
adc
daa
ja
inc
lahf
and
xor
js
data16
in
xor
ss
aas
lret
jnp
cmp
cmp
rorl
repz
insb
mov
pop
xor
mov
rorl
xchg
pop
jo
mov
adc
popa
lahf
in
sahf
into
xor
je
js
inc
in
nop
popf
jmp
cmpsb
mov
test
lahf
jnp
or
pop
cltd
enter
sub
js
or
adc
and
mov
in
movsb
or
addl
test
lods
icebp
addr16
into
xor
xchg
mov
in
popf
push
in
fldcw
adc
rcrl
pop
mov
mov
cltd
dec
inc
in
ljmp
sub
jo
repnz
inc
arpl
loop
mull
jbe
jp
add
or
mov
jne
imul
add
mov
lahf
push
mov
dec
and
rcll
in
nopl
mov
lock
sahf
scas
mov
pop
push
sub
fs
pop
enter
cmp
nop
call
cmp
jp
mov
adc
and
pop
jg
and
jmp
sub
in
dec
negb
inc
loop,pt
stos
pop
pop
inc
add
out
pop
sbb
in
xor
sub
inc
mov
jmp
xor
movsb
jnp
mov
sub
aas
adc
ss
mov
or
shll
and
jge
addr16
xchg
mov
pop
xchg
jp
fisubs
dec
inc
mov
xchg
rcll
xor
movsb
cmp
mov
sbb
push
pop
cmp
mov
inc
rol
xor
shr
sbb
mov
popf
xor
add
push
sbb
push
fdivp
mov
push
mov
xchg
cmp
int3
popa
jmp
dec
mov
mov
cmp
adc
mov
and
negl
fcoml
and
xlat
bound
stc
test
cmp
mov
pop
mov
add
data16
mov
add
pop
mov
xchg
lahf
das
push
jg
jno
in
test
mov
mov
adc
pusha
shlb
fsubl
pop
fidivrl
out
jno
outsb
push
mov
sbb
sub
mov
outsl
mov
mov
xchg
add
or
and
xchg
fs
pop
mov
pusha
or
sbb
pop
adc
cmp
aad
jo
sub
aas
not
call
das
movsb
mov
xor
hlt
pop
in
or
das
inc
and
cmp
xchg
dec
mov
scas
mov
inc
fiadds
pushf
ret
jecxz
out
dec
in
inc
inc
xchg
jo
xchg
pop
jl
jge
fwait
lret
aad
pusha
add
out
sub
push
xlat
cli
call
out
nop
or
or
shrl
bound
scas
inc
ffreep
add
shl
hlt
sub
or
ret
lods
and
dec
push
xchg
xor
dec
sahf
adc
sbb
cli
push
in
push
fwait
leave
sbb
shr
repnz
dec
push
pop
inc
jo
add
daa
idivl
cld
add
gs
pop
push
test
les
jbe
int
lret
loop
inc
daa
adc
xchg
jp
jne
lds
cli
mov
cmpsb
xor
sahf
mov
pop
cmpsb
movsb
jne
incb
dec
xlat
popa
push
mov
sub
push
in
outsb
cmp
push
sbb
and
cmp
stos
in
test
dec
and
inc
jecxz
push
rcrl
add
insb
xchg
bnd
inc
mov
push
push
aam
pop
pushf
lods
sub
sbb
cmp
data16
and
repz
loop
ret
int3
jnp
int3
push
inc
outsb
dec
and
sahf
xchg
faddp
xor
loop
xchg
scas
dec
gs
inc
pop
stos
test
jno
enter
addb
cs
das
outsl
inc
out
xchg
int
pop
pop
push
sbb
or
dec
out
icebp
daa
mov
rcll
cmp
insb
bound
sub
inc
cld
popa
mov
mov
lea
incb
lret
iret
je
repz
popf
lcall
mov
imul
addr16
jg
scas
movsl
adc
or
inc
icebp
loop
pop
bound
sbb
inc
inc
stc
int3
xchg
inc
pop
jbe
mov
loop
sub
mov
dec
adc
out
and
mov
push
inc
ljmp
push
pop
in
imul
pushf
jge
jecxz
insl
out
pop
mov
xchg
jb
aas
cmp
mov
imul
lea
xchg
mov
ja
insb
sbb
in
push
add
outsb
arpl
push
dec
clc
pop
pop
aad
aad
test
les
in
push
gs
mov
sti
mov
cwtl
inc
sbb
adcl
fs
sub
push
mov
mov
mov
scas
adc
scas
mov
fdivs
or
daa
cmp
insl
mov
cwtl
mov
sbb
mul
rorb
dec
mov
insb
add
in
out
cld
mov
mov
sti
scas
pop
in
inc
fstpt
jns
fs
aam
shl
dec
push
iret
dec
mov
mov
repz
add
inc
enter
inc
sbb
dec
and
lahf
xor
adcb
sbb
insl
cltd
sub
dec
pop
pop
cli
jmp
fdivr
jo
sbb
mov
pop
or
sarl
out
add
pop
jno
mov
cmp
push
dec
in
inc
jmp
add
push
fistpll
pushf
mov
mov
subb
sub
sub
pop
push
pop
mov
push
stc
xchg
inc
xchg
xor
pushf
mov
into
fisttpll
mov
test
iret
in
pop
das
push
inc
mov
pushf
fdivl
divl
mov
push
faddl
icebp
sub
and
in
loope
adc
in
ret
adc
idivb
movsb
xor
mov
sub
fdivrl
xchg
xchg
pop
sub
sbb
add
jne
or
and
jae
into
arpl
aaa
movsb
std
ds
sub
out
add
subl
pop
push
add
mov
data16
push
insl
out
les
repz
sub
dec
and
adc
jbe
mov
or
les
popf
jne
imul
rcll
mov
mov
xor
xor
insl
aad
lds
aam
adc
sub
outsb
inc
or
pushf
cltd
test
adc
xchg
sbb
xor
fisttpl
and
rcrl
test
mov
shl
jp
adc
test
stos
andl
fmulp
jno
jo
and
adc
jle
lcall
inc
out
jmp
imul
xlat
inc
scas
lcall
inc
and
mov
and
and
hlt
sub
pop
pop
mov
jp
inc
andl
aas
cmp
lcall
out
add
scas
leave
cmp
or
sbbl
dec
mov
subb
jne
jno
cltd
add
or
mov
dec
or
mov
leave
xchg
aas
add
mov
ds
and
popa
pop
sti
in
or
dec
xchg
add
mov
adc
mov
insb
dec
shl
adc
pop
inc
inc
adc
rcl
ret
xchg
fcom
add
fincstp
out
jecxz
shlb
cmp
inc
or
dec
hlt
push
nop
adc
or
adc
out
push
push
mov
inc
xor
paddsb
scas
subl
jno
scas
std
or
xchg
lret
mov
std
loope
out
loopne
push
push
sub
xchg
cltd
sub
mov
test
out
dec
bound
repnz
push
leave
sub
mov
hlt
loope
stc
je
mov
or
in
push
decl
fldenv
int
mov
pop
mov
int
inc
iret
outsl
je
or
fwait
popf
cmp
lret
or
scas
or
daa
inc
popl
call
cmp
leave
pop
into
lcall
cli
fwait
cwtl
cmp
push
adc
loope
pop
jecxz
dec
sub
iret
cmp
adc
add
rcrl
ss
pushl
out
movsb
mov
mov
clc
std
add
scas
fwait
iret
sbb
into
pop
push
add
lock
jecxz
popf
in
test
outsb
mov
or
in
cmp
cmpsl
push
insb
xchg
sarl
ljmp
ficoms
mov
or
mov
push
popf
xchg
icebp
xchg
repnz
jb
xchg
lahf
pop
jnp
push
push
xchg
xchg
rorl
jno
inc
cmpsb
ds
jno
jns
xchg
and
xor
test
cmp
xlat
mov
adc
cmp
xchg
push
xor
movsb
add
testl
cmp
pushf
and
push
push
jp
xchg
jg
movsb
gs
inc
cmpsl
mov
cmpsl
pop
sub
mov
mov
cmp
sbb
je
xchg
push
xor
push
push
les
orl
inc
std
jle
in
hlt
add
mov
inc
orb
pop
jne
add
lods
out
scas
pop
jbe
rcl
pop
and
jnp
jle
loope
pushf
and
xlat
lret
pop
es
xchg
mov
divb
cmp
pop
add
and
movsb
push
cltd
out
push
imul
nop
jle
in
and
cmp
dec
mov
fistpl
int
into
outsw
hlt
outsl
movsl
fldenv
cmp
pop
fildll
pop
lret
fs
mov
cltd
pop
xor
sub
jecxz
cmpsb
jns
sahf
fbstp
dec
cwtl
imul
mov
push
sub
and
mov
fdiv
and
ss
imul
mov
add
push
sbbl
sub
jnp
cli
adc
rcrb
pop
push
mov
idivb
cwtl
xchg
faddl
sbb
xchg
lcall
repz
test
dec
roll
cltd
xchg
addr16
inc
jp
inc
xchg
lcall
pop
ja
adc
pop
stos
outsl
xor
push
jae
js
xchg
test
subl
movsb
repnz
cli
and
ss
call
mov
dec
ds
test
daa
or
in
addb
adc
popa
pop
sbb
inc
jo
xchg
pop
pop
call
cmp
adc
loope
mov
sub
aad
cli
bound
add
push
in
fsubrl
mov
xor
dec
jge
mov
push
imul
aas
pop
lahf
or
testb
dec
push
les
rolb
mov
fstl
mov
mov
jb
in
ljmp
push
xchg
cwtl
fwait
pop
sbb
xor
adc
jl
jecxz
push
mov
push
clc
xchg
stc
fs
jne
or
fs
js
loope
call
cmpsb
rcll
dec
mov
arpl
add
sbb
aas
mov
pop
fwait
jle
ljmp
sub
push
dec
xchg
dec
aas
sahf
ljmp
mov
push
and
adc
push
push
sub
xor
das
pop
jle
inc
or
mov
sbb
sub
push
ds
scas
xchg
and
xchg
into
inc
popf
xor
mov
aaa
xchg
scas
mov
popa
stos
and
jmp
sahf
cli
mov
ds
ds
and
sbb
ss
sbb
lret
test
push
std
mov
jns
pop
scas
rclb
hlt
adc
fwait
push
mov
pop
mov
ror
lret
and
aaa
insl
dec
jno
inc
daa
adc
test
lea
sub
jmp
call
sub
mov
je
test
inc
xchg
popa
in
jne
jae
je
xor
dec
mov
scas
cltd
dec
popf
and
push
ljmp
inc
mov
mov
leave
fcmovbe
xor
dec
clc
fwait
js
and
xor
push
jb
movsl
inc
jae
testb
sub
cmp
in
sbb
mov
int
mov
js
je
mov
arpl
pop
push
pushf
test
xchg
mov
adc
mov
push
stos
je
shlb
inc
dec
pushf
ss
scas
stc
ret
movsb
in
jge
mov
and
push
dec
mov
pop
push
in
jo
mov
stc
pop
mov
das
test
cmp
ror
dec
aas
dec
cmp
sbb
iret
rcll
insb
je
or
fnstcw
jne
jbe
lret
add
mov
inc
cmp
shlb
popf
dec
mov
aad
sub
pop
in
iret
cmpb
adcl
cli
adc
cmp
mov
dec
into
xor
test
ds
stos
cld
icebp
bound
mov
cltd
jp
sbb
xchg
call
cmp
stos
xor
cltd
adc
mov
add
inc
mov
pop
enter
movsb
inc
mov
dec
sub
sti
cmp
movsl
loope
stc
test
icebp
inc
mov
jae
or
sbbl
inc
imul
sti
sub
imul
fsubl
mov
nop
jge,pn
mov
pop
popf
cmpsb
mov
mov
test
daa
dec
outsb
push
mov
movb
xor
sarb
inc
add
out
inc
stos
bnd
insb
clc
mov
or
xor
pop
ret
xchg
mov
mov
fidivl
push
mov
push
int
xor
cmc
inc
mov
sbb
test
loope
or
bound
fcmovu
pop
push
mov
xor
sbb
fnstenv
and
cmp
inc
inc
adc
mov
imul
lahf
fwait
mov
neg
ljmp
fnstsw
add
push
push
push
xchg
pop
outsb
inc
sub
loope
gs
div
cmpsl
inc
xchg
pop
pop
loope
pop
out
cmpb
shrl
adc
jnp
loopne
std
sbb
xchg
lret
adc
pop
adc
mov
jns
mov
not
mov
lds
ret
ljmp
mov
mov
xchg
push
notb
scas
shlb
and
test
adc
lcall
pop
int3
ja
xchg
mov
inc
out
into
sbb
inc
stc
or
aaa
stc
icebp
or
enter
movsl
das
add
jl
xor
scas
mov
aad
lock
leave
cmc
push
dec
out
dec
scas
add
cli
aas
xchg
push
push
xor
and
int
mov
fbstp
mov
cmp
pop
adc
xchg
xor
dec
fs
pop
enter
mov
jo
adc
lock
and
fnsave
mov
push
imul
dec
dec
bound
pop
mov
ljmp
popa
popf
add
adc
negb
xchg
mov
test
or
movsb
data16
push
inc
mov
pop
mov
xor
xor
push
inc
mov
js
or
mov
cmc
xorb
lahf
imul
sbb
mov
mov
out
rcll
push
ss
sub
repnz
mov
out
inc
scas
fiaddl
mov
add
dec
les
xor
jmp
sbb
stos
xor
stc
stos
xchg
mov
out
sti
scas
bound
ja
pop
mov
add
jo
jbe
pop
stc
stc
aad
pop
fistps
pop
mov
pop
movsb
mov
fsubrs
repnz
jmp
roll
and
popf
push
push
cmp
pop
scas
dec
dec
xchg
mov
sarb
cld
pop
gs
lret
pop
push
lcall
mov
mov
loopne
adc
adcb
cmp
call
lret
jae
sub
test
in
and
lock
fists
sub
out
roll
inc
jns
filds
lock
jecxz
push
and
mov
iret
inc
push
push
inc
jecxz
jbe
pop
mov
out
adc
addr16
cli
mov
or
in
cmp
iret
ljmp
addl
lahf
inc
push
out
pop
mov
pop
lahf
mov
inc
and
int3
mov
fcoml
ret
outsb
loopne
int
sbb
xchg
fs
jle
cmp
rcl
and
bound
adc
pop
xchg
adc
dec
and
inc
aad
sbb
push
push
inc
mov
cmp
popf
mov
add
cs
push
mov
mov
inc
inc
and
jns
rcrl
ja
ret
mov
mov
xchg
repnz
inc
cmc
push
fmulp
pop
push
mov
sbb
add
cs
rol
push
xor
repz
clc
jne
pop
repnz
leave
imul
dec
xlat
or
loop
sub
cmp
dec
outsl
xchg
jns
and
adc
xor
push
mov
scas
pop
lock
sbb
push
push
fadd
imulb
pop
mov
shlb
mul
and
stos
jns
xor
pop
jo
adc
inc
xchg
jb
pop
and
sbb
sub
out
cwtl
out
sub
imulb
sub
jbe
push
cs
cmp
inc
shlb
xchg
push
jmp
fiadds
pop
pop
dec
arpl
xor
iret
ret
mov
in
shrl
and
imul
scas
stos
sub
test
sbb
mov
add
cmpsl
jg
mov
xchg
adc
pushf
xchg
adc
fmul
jmp
or
mov
aas
out
data16
jmp
fmuls
sbb
shl
movsl
fildl
cmp
jg
hlt
cli
test
xchg
mov
cmp
dec
js
mov
into
push
mov
fnstcw
xor
in
sub
mov
xor
mov
js
or
push
cmp
xchg
ret
inc
add
sub
pop
fisubs
cwtl
or
pop
jbe
aas
outsl
cmp
cmp
ret
add
pop
cmovns
idivb
jle
ljmp
test
inc
out
out
pop
loope
out
fcoms
add
cld
fcmovb
pop
jecxz
and
xchg
or
out
data16
outsb
out
dec
iret
cmp
and
decl
sbb
xchg
jns
xorb
arpl
into
jno
and
ficomps
lret
in
fbstp
xchg
call
mov
cmpsb
movsb
imul
pop
push
fimull
dec
adcl
pop
push
in
mov
xchg
or
add
and
mov
sub
stos
inc
or
enter
push
jle
out
xchg
inc
out
mov
nop
jmp
popa
pop
test
pop
jp
mov
lock
cs
xchg
roll
les
xchg
mov
cmp
adc
pop
shl
inc
mov
das
cwtl
adc
int
cmpsl
popa
xchg
mov
cltd
inc
fadds
mov
aaa
pop
dec
sbb
push
xchg
mov
mov
in
mov
js
push
inc
fldenv
and
aaa
push
fisttpll
xchg
in
xchg
pop
sbb
shl
dec
sub
sbbl
mov
inc
pop
les
loop
adc
in
mov
andb
sbb
sub
js
jg
je
push
and
sub
sub
leave
push
sub
rcrb
push
add
add
sub
hlt
dec
xchg
pop
pop
into
sub
mov
imul
adc
and
cmpsb
and
insl
adc
fidivl
aas
xchg
rorl
adc
adc
push
jmp
lods
fsubs
mov
int3
inc
sub
rclb
push
or
mov
lock
sbb
mov
push
icebp
dec
jle
sub
cmp
outsb
or
ja
ret
loopne
xchg
add
xchg
addr16
dec
cmpsl
cli
mov
lahf
adc
sub
stc
adc
pop
idivb
cli
stc
mov
cmp
scas
mov
or
ljmp
and
aam
xchg
cltd
bnd
lods
shlb
xchg
dec
into
test
mov
mov
xchg
or
mov
mov
nop
mov
into
cwtl
loopne
mov
stos
clc
or
xchg
pop
stos
mov
push
xchg
adc
cmp
jmp
cmp
dec
shll
xchg
push
adc
sub
fstpl
repnz
adc
es
dec
sarl
cli
sbbb
or
push
pusha
xchg
ja
push
into
pop
cmp
stos
sti
xor
lods
inc
les
add
pushf
shlb
and
push
xchg
sub
lret
ficoml
jmp
inc
icebp
inc
sbb
inc
mov
mov
int3
out
lahf
call
sti
add
mov
cld
in
into
push
mov
orl
pop
mov
testl
aad
addr16
jle
pop
pop
adc
lret
jmp
sub
decb
xor
inc
fsub
or
in
mov
add
lods
ds
int
or
push
mov
add
in
loop
mov
jno
sub
add
push
jge
inc
pop
je
sub
mov
pop
sub
sbb
inc
xchg
xor
jecxz
ljmp
stos
cmp
popf
jne
push
fildll
out
dec
mov
and
xchg
imul
cltd
icebp
addb
jmp
daa
sbbl
sub
sbb
sub
xor
and
lock
jne
leave
fwait
add
xchg
cmp
cmp
add
and
mov
imul
sbb
push
out
xchg
and
rclb
scas
mov
arpl
mov
xchg
insb
stos
cmpsl
mov
pushl
jno
ficoms
cmp
jno
sbb
rolb
stos
xchg
or
mov
sarl
mov
ficoms
xchg
sub
lret
mov
jl
jnp
mov
mov
pop
andl
inc
call
in
mov
cmp
cmp
aas
cmpb
ja
iret
fs
inc
arpl
xor
xchg
pusha
and
inc
sub
shl
jl
add
add
in
jbe
push
sbb
jle
test
inc
push
pop
imul
xchg
in
sti
xor
call
insl
dec
out
loop
ficoml
jb
or
iret
cmp
aaa
mov
dec
clc
pop
test
dec
popa
mulb
or
dec
data16
imull
adcl
xor
push
add
pop
sbb
inc
add
xchg
scas
cli
sbb
or
pop
push
pop
pushf
or
push
mov
cmpsl
mov
adc
cmp
adc
mov
inc
and
jl
std
sarb
mov
es
adc
mov
loop
repnz
dec
dec
and
rorl
push
sbb
xor
out
jmp
or
jns
int3
mov
mov
jno
and
push
cmp
and
cmp
insb
adc
fcomip
mov
sbb
movb
dec
push
jmp
lock
adc
dec
push
inc
inc
inc
pop
inc
mov
cld
dec
or
jmp
sbb
out
xchg
into
mov
add
inc
pop
sti
lods
iret
mov
mov
push
ja
in
pop
fisttps
cld
xchg
push
xor
loope
xchg
and
sub
sti
call
pop
shlb
push
fstpl
clc
test
iret
cwtl
insl
jnp
mov
xor
mov
jg
pop
xor
jae
fucom
mov
aaa
mov
jne
jb
stos
cmpsb
cltd
lea
mov
mov
sbb
pop
add
test
clc
mov
cmp
adc
testl
mov
aas
push
shrl
scas
clc
push
stos
mov
pop
bound
addb
mov
out
ret
std
or
and
lcall
pop
mov
sbb
arpl
pop
xchg
ss
add
mov
mov
pushl
loopne
icebp
jnp
jb
ret
jge
in
push
shll
dec
mov
sbb
js
jl
aaa
sti
lods
mov
fdivrl
sbb
fsubrs
jge
sti
mov
inc
adc
out
or
cmpsl
mov
std
cmp
xchg
fistps
fsubrs
rcrl
sub
and
xor
mov
jb
popf
jmp
sar
adc
xchg
pushf
pop
daa
sbb
mov
adc
mov
add
gs
sbb
aad
ret
jmp
dec
decl
push
cmp
addl
stos
adc
lods
xorl
add
js
jno
mov
std
ds
aaa
jae
xchg
push
fistpl
hlt
imul
sub
out
jne
push
mov
fs
or
inc
mov
dec
sbb
cltd
add
iret
test
pop
and
sahf
cmp
xchg
add
repnz
mov
mov
jg
outsb
xchg
sub
movl
out
pop
push
or
push
push
pop
xchg
in
ret
push
dec
push
pop
fldenv
adc
mov
adc
mov
jo
clc
dec
subl
add
cli
loope
mov
cmpsb
mov
add
jbe
ljmp
push
fdivrs
sbb
or
sbb
mov
test
cmc
cli
xchg
nop
jmp
les
dec
xchg
fwait
sub
out
mov
push
xor
or
cmpl
pushf
pushf
adc
dec
lcall
ret
cmp
ret
lahf
loopne
out
inc
push
jl
dec
fldcw
push
fcomps
push
mov
stc
sbb
xlat
mov
popa
aam
mov
loope
jl
cmpl
pop
scas
roll
jnp
mov
data16
outsb
arpl
mov
jge
subl
xchg
ljmp
call
cmp
lret
fsubs
dec
sub
ficoms
xchg
es
mov
xchg
jne
ljmp
aam
add
dec
mov
dec
sbb
push
cmc
jno
movsl
mov
mov
sti
push
dec
sub
dec
pop
lahf
inc
xor
daa
or
add
mov
test
ja
fisttpll
rolb
leave
adc
jmp
sbb
icebp
mov
fwait
rol
jns
cmc
addl
out
pop
pcmpgtd
push
jge
pop
cmpsl
inc
push
test
test
lcall
dec
les
push
das
popf
jmp
out
test
pop
cmpsl
mov
push
imul
add
loopne
inc
sub
jmp
lds
loopne
jmp
xlat
xlat
mov
inc
dec
ss
lret
sarl
nop
sub
lahf
movsl
daa
sub
das
test
test
jae
push
or
or
inc
int3
mov
ja
mov
fsubp
mov
mov
enter
mov
hlt
xor
cmpl
cltd
shrb
imul
push
ds
mov
mov
cld
add
pusha
jmp
ja
stc
lock
out
js
and
sbb
lret
lods
xor
incl
xor
lea
sbbl
mov
movsb
popf
dec
imul
stc
xchg
scas
and
mov
std
push
push
adc
sub
bnd
movsb
xor
xchg
pop
inc
xchg
inc
jo
xchg
jo
out
sub
insb
imul
dec
arpl
mov
adc
jecxz
xchg
sub
leave
xchg
cli
and
iret
cltd
inc
pop
cltd
push
cmp
pushf
cmp
ret
mov
jp
pop
mov
lcall
jo
mov
inc
icebp
aad
mov
mov
sbb
sbb
mov
fistps
ret
rcl
and
mov
mov
cmp
xchg
pop
sub
xchg
jmp
fildll
mov
mov
inc
xchg
mov
test
je
outsl
sub
sub
lock
ss
jnp
xchg
adc
out
xor
mov
xchg
shlb
icebp
sub
and
insl
sar
push
cmp
lret
sbbl
jnp
cmpsb
inc
or
outsb
mov
or
outsl
popf
es
mov
cmp
into
fistpl
lret
mov
lret
ret
ret
mov
or
and
mov
mov
pushf
out
dec
shll
cltd
sti
mov
imul
out
data16
popf
paddd
cmp
and
dec
rolb
insl
test
cs
testb
cs
pop
push
sub
xor
clc
repz
cmpsb
cwtl
dec
add
arpl
aam
dec
fwait
das
lock
out
inc
cmpsb
imul
test
add
jge
lea
push
fldenv
mov
xchg
add
mov
ret
pop
xchg
pop
fs
test
adc
mov
cwtl
mov
mov
in
xchg
into
cmp
sbb
scas
addr16
or
inc
aad
enter
lret
enter
mov
adc
sti
pop
mov
jae
jmp
mov
enter
pop
in
xchg
push
adc
mov
js
inc
cmp
adc
inc
mov
push
cmp
int3
xchg
dec
adc
add
pop
ja
xor
aaa
out
dec
outsb
lea
mov
popf
mov
fadd
in
pop
arpl
movsl
mov
popa
fimuls
jb
xchg
std
adcb
in
scas
daa
push
sahf
sub
int
dec
ret
lahf
mov
sahf
mov
mov
xor
jg
dec
mov
pusha
sbb
xor
cmp
les
mov
lds
xor
rorb
adc
shrb
jns
loope
sub
mov
out
mov
cmpsb
jecxz
outsl
imul
pop
xchg
push
mov
jbe
push
popa
lret
fsubr
xchg
cltd
mov
rorl
out
or
ret
sahf
push
aam
cld
stc
jne
iret
int
mov
or
add
leave
loop
out
call
and
loopne
dec
in
in
insl
shrb
repnz
frstor
sub
mov
js
cmp
jne
push
lret
xchg
jbe
imul
mov
add
dec
or
les
cmp
cmp
cmpsl
and
jle
cmp
test
mov
and
add
sbb
xchg
mov
fwait
out
xor
lds
aas
dec
pop
mov
cmpsb
mov
dec
aas
fcmovbe
xchg
mov
mov
mov
fadds
xor
mov
mov
fimull
andl
in
add
jns
or
rcll
adc
push
inc
push
jl
mov
ret
adc
adc
aaa
pop
sub
das
dec
sbb
or
lods
fsubrs
adc
xor
cmpsl
xchg
sub
insl
test
sbb
fidivrs
jge
or
test
pop
sub
insb
in
decl
fnstcw
or
pop
add
imulb
lahf
xchg
inc
inc
pop
rolb
mov
sub
rsqrtps
ljmp
xor
ret
je
popw
jae
loop
sub
lcall
je
fdivp
cmpl
movsb
insb
jno
add
insb
or
lods
outsb
mov
in
addr16
ljmp
lret
rol
movsl
les
pop
add
fadds
rorl
mov
or
adc
lcall
mov
pop
mov
dec
adc
mov
fistpll
cs
mov
aaa
mov
adc
add
inc
jl
mov
stc
out
insl
pop
push
rcrb
pushf
push
cmp
and
enter
iret
les
mov
cmc
scas
and
outsb
popa
jge
push
jl
ds
mov
xlat
jno
pushf
push
or
cmpsl
dec
out
jae
push
sbb
adc
mov
dec
and
jb
push
addl
mov
test
push
xor
push
push
mov
or
outsl
lahf
sub
fcompl
inc
in
xor
ret
inc
insl
fidivl
mov
dec
subl
adc
add
rorb
add
fisttpl
jmp
add
adc
mov
push
mov
cwtl
push
mov
mov
repz
or
lea
imul
std
xor
popa
push
ds
xchg
adc
sub
push
xor
popa
fnstenv
fistpl
and
shrl
inc
div
mov
mov
dec
cmp
jb
gs
enter
pusha
push
sbb
cmpsb
pop
xchg
testb
mov
popf
fsubrl
test
mov
adc
add
gs
xor
sbb
mov
adc
cld
push
xor
jmp
rcrl
adc
inc
inc
arpl
mov
int3
leave
fdivl
movsb
sarl
push
test
xchg
pop
push
fimuls
fistl
out
fdivl
xlat
lea
pop
aam
js
outsl
test
xlat
insl
dec
inc
mov
ljmp
push
jmp
in
repnz
ljmp
jns
aas
mov
into
push
test
xchg
cltd
jg
push
cmp
cmp
mov
cmpb
cmp
dec
push
xlat
jne
push
add
mov
adc
enter
add
xor
ret
rclb
je
popf
jecxz
movsl
xlat
xchg
pop
xor
sub
mov
cmpxchg
sbb
pop
or
mov
fists
sbb
outsb
shl
mov
inc
pop
inc
inc
testb
adc
out
fsubl
push
filds
test
icebp
ret
outsl
lods
dec
lods
or
rcrl
aad
xlat
loop
push
jl
inc
scas
data16
add
lea
sub
dec
inc
xor
into
loopne
arpl
hlt
and
nop
and
mov
aad
add
js
jecxz
xor
scas
ljmp
mov
add
out
sbb
pop
std
arpl
hlt
jne
sbb
mov
xor
imull
cmpsl
push
cld
aad
cmc
inc
js
xlat
mov
jge
inc
or
in
sbbb
jge
jne
inc
add
in
fstps
cmp
jl
mov
pop
cmp
jb
or
xor
lret
fldl
push
daa
jmp
mov
xor
iret
dec
dec
inc
jbe
fimull
sarl
xchg
add
push
jp
xor
lods
xor
mov
notb
int
push
add
shlb
pop
mov
sbb
les
es
fs
inc
jecxz
lahf
lret
push
cs
sub
pop
dec
inc
cmp
pop
pop
hlt
arpl
mov
cmp
jae
je
dec
sahf
lret
cld
mov
insb
cmp
fsubrl
add
sbb
cmpsl
test
cli
ja
out
xchg
ds
jo
sub
std
outsb
sub
js
push
xor
push
jnp
add
stos
sbb
test
sub
dec
xchg
push
div
pop
mov
fs
pushf
insb
loopne
lret
push
in
push
lahf
jp
push
test
nop
push
sub
lock
jae
frstor
mov
loope
sahf
cld
mov
or
iret
test
mov
and
jp
or
push
jge
jg
fstl
incl
mov
xor
out
cld
roll
call
imulb
lods
daa
scas
adc
ror
cs
cli
loopne
mov
in
dec
push
ljmp
pop
lods
test
popl
xor
sbb
incb
jnp
cltd
fcomip
les
jp
inc
push
mov
lods
jge
jbe
add
mov
cs
pop
push
ret
mov
aaa
hlt
andl
in
pop
out
cmp
mov
mov
lahf
and
sub
xlat
xorl
sub
cs
jne
lods
sbb
add
lret
mov
cwtl
fwait
cmpsl
fistpll
sbb
sbbl
cmpb
mov
jno
lods
xchg
ret
hlt
adc
out
add
adc
sub
mov
xor
cmpsl
and
rcrl
fwait
adc
enter
push
mov
cmpsb
mov
add
fsubs
sbb
jnp
rolb
addr16
push
dec
pop
mov
test
and
cpuid
push
xchg
leavew
or
xchg
fs
cmc
push
inc
sub
int
rorb
incl
mov
mov
rclb
xchg
fisttps
pop
cwtl
ret
pop
adc
cmpsb
jl
int
or
sub
inc
sub
sub
in
jbe
sbbb
jmp
and
inc
dec
in
lret
stos
mov
cmp
cmp
or
push
icebp
rcrl
outsb
in
xcrypt-ctr
cmpsl
sbb
je
int3
mov
shll
movsb
fisubl
sti
pop
xor
xchg
add
jb
outsl
outsl
pop
arpl
js
inc
outsl
push
sub
cmp
cld
xchg
cs
aam
cmpb
jg
mov
stos
ficoms
jno
pop
loope
adc
cmp
inc
out
push
out
sbb
cs
push
xchg
mov
push
pop
cld
xchg
pop
dec
les
out
pop
dec
jmp
cmp
and
jmp
int
inc
add
adc
divb
imul
push
pop
pop
sarl
add
clc
test
in
out
in
sbb
add
fisttps
leave
jbe
adc
adc
cmpl
dec
cltd
cmp
cs
leave
dec
ds
add
outsb
es
add
mov
xor
ds
cli
inc
mov
pop
jo
ja
enter
jns
orl
adc
insb
sbbl
xchg
ret
jp
fdivp
adc
fiadds
sbb
push
imulb
fucomi
daa
pusha
adcl
add
das
aam
jmp
das
dec
js
ja
adc
rclb
mov
shlb
rol
in
int3
jg
ljmp
lret
pushf
dec
add
lret
std
shlb
xchg
stc
or
or
in
or
out
dec
cmp
adc
pop
loop
sub
imul
dec
adc
push
out
cmpsb
mov
sar
insb
je
pop
push
push
andb
std
fsubl
xor
movsb
xchg
rorl
inc
jle
int3
sub
aad
push
cmp
jl
loope
fistps
add
std
fbstp
xchg
sub
sbb
jno
and
movl
mov
nop
adc
addr16
in
gs
scas
mov
pushf
movl
out
pop
sub
xchg
dec
sbb
fcmovnu
jg
adc
jnp
mov
xchg
fildll
mov
aam
dec
push
xchg
js
sub
pop
xor
adc
push
cmpsb
sahf
sbb
sub
bound
aam
pop
xor
mov
hlt
sbb
xchg
aam
sub
lahf
inc
mov
popa
xchg
add
dec
cwtl
xchg
mov
jmp
cwtl
movsb
jb
pop
fdivrp
testl
adc
mov
into
mov
loopne
xchg
jb
mov
aaa
inc
pop
jecxz
dec
out
dec
shrb
test
sub
fisubs
setae
and
test
ror
inc
lcall
fnclex
xor
ja
adc
pop
bound
cltd
scas
rcrb
fwait
add
mov
jmp
scas
divl
push
xor
imul
dec
stc
cwtl
sbb
pushf
cmpsb
and
dec
cmp
ds
data16
xor
insb
pop
or
adc
cli
add
dec
xor
sarl
mov
in
cmp
nop
rep
jmp
sbb
inc
ret
lods
xchg
and
je
out
or
mov
addr16
inc
mov
sbb
js
mov
dec
push
scas
cltd
mov
jae
aad
mov
das
je
dec
cmp
adc
sti
push
cld
mov
lea
lret
outsl
cs
inc
sti
cmp
cmc
jb
push
cltd
or
test
cmpsb
push
push
jle
enter
cmp
mov
mov
jnp
xor
clc
xor
lds
ljmp
dec
adc
push
lret
mov
test
pushf
cld
add
xchg
nop
int
jb
adc
sbb
loope,pt
fwait
push
into
je
mov
sbb
xor
lret
inc
shll
mov
sbb
je
cmpsl
mov
and
pop
xchg
test
sbb
xchg
mov
lahf
jnp
or
sahf
adc
mov
xchg
inc
pushl
rol
push
leave
in
call
sarl
repz
ja
inc
inc
mov
adc
xchg
xchg
mov
jnp
jbe
mov
mov
jmp
outsl
mov
mov
rorl
mov
movsb
rorb
dec
mov
decl
ret
int3
cmp
out
popa
test
repnz
outsb
adc
jge
or
add
iret
mov
repz
lahf
sti
cli
mov
sbb
jbe
jne
pop
sbb
test
dec
sub
pop
bound
mov
jmp
popa
rcll
or
int3
push
mov
xchg
and
or
in
cmp
mov
dec
pop
pop
test
mov
lea
fcomip
mov
mov
jmp
push
sti
repz
add
js
sbb
mov
jmp
inc
dec
mov
repz
aas
inc
das
popl
add
int
lahf
mov
cmpsl
out
cmc
pop
lock
jecxz
cmp
adc
dec
dec
mov
jg
lock
ds
jecxz
leave
loope
gs
mov
cmp
cmpsb
cmpsl
xor
adc
sub
shrb
push
push
int3
pusha
xlat
mov
xor
inc
add
andb
dec
in
fnstsw
dec
jne
cmpl
rcrb
mov
sub
ret
jne
or
clc
adcl
cmc
arpl
ss
or
and
jnp
scas
movsl
or
jmp
xor
ds
cmpsl
cli
push
test
cmpsl
fsubr
stc
scas
inc
out
fidivrl
inc
cmp
lahf
dec
hlt
fisttps
call
xchg
leave
insl
pusha
xchg
dec
repnz
or
jmp
mov
dec
mov
cmpsl
sahf
push
mov
insb
mov
mov
int3
int3
mov
mov
js
pop
cmp
xchg
inc
mov
add
push
jns
nop
sbb
ljmp
std
cmpsl
mov
call
push
mov
repnz
jle
push
cs
add
movsb
std
nop
rorb
cmpsl
push
enter
stos
movsl
cmp
mov
add
mov
in
jecxz
cli
jecxz
ja
scas
fistpl
mov
xchg
in
shrl
cmp
lea
sub
je
ljmp
pop
jb
mov
dec
pop
mov
cwtl
and
ficompl
lret
inc
add
cs
sbb
nop
inc
add
xor
nop
in
push
inc
stos
xchg
mov
aad
ss
mov
push
jnp
mov
sub
adc
pop
xor
fbld
das
cvtpi2ps
mov
jmp
ffreep
ret
scas
xchg
mov
xor
orl
or
push
mov
jp
sub
xchg
ds
push
aam
cs
gs
out
add
adc
and
push
lds
jge
jns
push
pop
cmp
fnsave
mov
xor
mov
mov
mov
pop
push
mov
jo
and
test
mov
mov
pop
push
bound
test
repz
inc
test
xchg
ds
inc
jo
dec
js
test
mov
add
sbb
into
adc
cltd
fwait
or
adc
in
lahf
filds
aas
cmp
and
mov
popa
add
sbb
pop
dec
push
and
pushf
lock
cld
xor
insl
sbb
sahf
cmp
xor
mov
mov
insl
dec
pop
xchg
push
or
test
cld
sbb
add
stos
das
jb
xchg
mov
xor
sbb
cwtl
dec
pop
je
enter
fidivs
pop
data16
push
fists
data16
jl
mov
out
mov
push
pop
cmp
in
cmp
and
jno
test
testl
jno
sub
cmp
xlat
sub
xchg
fucomp
jecxz
pop
cs
dec
sub
and
pop
cmpb
mov
xlat
into
test
rcrl
pop
inc
or
repz
or
xor
mov
xor
inc
clc
imul
mov
fsubr
lcall
insl
scas
cmpl
jl
adc
xchg
inc
fbstp
xchg
aaa
test
jns
dec
dec
add
ljmp
lret
sub
push
xchg
mov
mov
jns
xchg
mov
jns
call
pop
movsl
add
mov
xor
adc
lcall
mov
or
jp
fwait
mov
cmpxchg
jns
lcall
mov
xchg
mov
push
fsubl
ja
push
add
ror
int
icebp
orb
adc
inc
mov
mov
into
movsb
stos
xor
and
cmp
js
jbe
stc
es
rorl
ficoml
and
aam
pop
cmp
inc
push
dec
loope
or
inc
test
repnz
xor
inc
and
dec
pusha
mov
mov
adc
cmpsb
push
test
adc
jge
fimull
adc
push
inc
inc
cltd
jl
mov
push
mov
jmp
stos
rolb
addr16
and
xchg
sahf
pop
sti
dec
xchg
pop
in
pusha
mov
or
mov
xchg
cmpsb
jmp
ret
test
push
out
push
sar
lret
outsb
inc
shl
ljmp
stos
call
jb
jae
pop
dec
lahf
hlt
stos
fiaddl
popf
and
cmp
jp
out
and
mov
inc
mov
pushf
xchg
mov
inc
cli
shl
jl
xchg
int3
mov
ja
ss
psrld
jae
mov
iret
pop
insl
aam
je
push
hlt
xchg
jo
inc
nop
pop
mov
add
loop
or
les
std
out
pop
lret
in
daa
xchg
jecxz
lea
push
flds
inc
jge
lret
movsb
mov
adc
cmp
scas
clc
imul
push
add
inc
xchg
fisubrs
lods
cmpsl
push
lea
bswap
sti
les
push
inc
and
cmp
dec
dec
mov
in
xchg
mov
jecxz
mov
and
es
mov
xchg
imul
mov
or
sbb
mov
les
pop
shlb
outsb
push
pop
adc
daa
add
dec
popf
pop
out
dec
rcrl
mov
inc
into
shlb
xchg
jo
xchg
aas
std
and
and
cli
ss
sub
or
into
xlat
ljmp
pop
repnz
xor
xchg
arpl
adc
mov
in
cmp
cli
sbb
mov
ficompl
dec
mov
pop
aaa
mov
fiadds
jl
test
cmp
inc
mov
out
ret
pop
and
and
mov
dec
sahf
mov
shlb
mov
xor
mov
dec
xchg
sub
into
imul
mov
scas
test
or
push
lcall
jno
push
jl
jbe
dec
pop
aad
bound
inc
mov
ror
inc
sub
sti
jge
jo
inc
push
push
sbb
inc
mov
ds
fdivr
ds
inc
mov
xchg
adc
add
jo
xor
lods
enter
add
xor
js
stos
jns
sub
dec
mov
das
popa
cmp
jne
fidivs
fists
or
sbb
or
jno
sti
push
pop
cmp
inc
inc
add
test
insl
out
sbb
movsl
mov
push
clc
fdivl
fdivp
inc
icebp
dec
xchg
cld
std
movsl
cld
or
scas
pop
popf
data16
jo
dec
popf
inc
fbld
icebp
pop
lret
sti
mov
clc
js
mov
mov
test
cmp
repz
subb
pop
frstor
aaa
sub
and
inc
mov
cmc
pop
sbb
or
or
data16
cmp
ja
add
hlt
push
sahf
mov
jb
sarb
int3
int3
mov
mov
stc
faddl
sbb
mov
inc
cltd
ret
loop
mov
mov
sub
stos
xchg
adc
and
adc
add
push
push
xor
in
xor
hlt
mov
mov
xchg
jge
and
dec
fchs
lds
cmp
test
daa
clc
push
push
outsb
int
jns
fdivl
bound
outsb
mov
int3
xorb
pop
mov
test
sbb
jp
test
push
fisubl
and
mov
xor
inc
pop
xchg
mov
repz
add
imul
xchg
inc
call
stc
mov
aas
inc
mov
lds
add
cs
dec
bound
adc
outsl
scas
cmp
cmp
add
jbe
push
add
inc
pushf
add
cmpsb
inc
bound
outsl
pop
shll
pop
jp
sar
ja
lods
push
sbb
sbb
xor
mov
push
scas
lods
aas
cmp
pop
pop
sub
mov
std
aaa
dec
aam
push
gs
cmpsl
mov
xor
subl
jae
rclb
and
test
popf
xchg
fdivr
dec
jge
or
movb
sbb
inc
push
mov
or
xchg
xchg
fsts
push
pop
aaa
cmp
ret
rolb
mov
adc
sbb
mov
aam
movsb
int3
cmc
test
sbb
mov
stos
sbbb
inc
jb
xor
addr16
sub
xchg
gs
jae
and
enter
mov
fildl
lds
cli
cltd
inc
test
hlt
stos
loopne
popf
sub
xchg
push
mov
dec
adcl
mov
add
in
inc
scas
adc
fldt
ret
ret
in
mov
xor
ficoms
xlat
sbb
jp
jnp
out
xchg
add
or
test
and
push
int3
jl
insb
insb
xor
xlat
push
fwait
jbe
rcrl
inc
pop
in
add
daa
jne
or
inc
sub
shrb
push
add
push
insb
les
sbb
jmp
outsb
shll
ss
cmp
and
jecxz
or
ljmp
fsubrl
cld
aad
mov
pop
ret
mov
bound
js
lock
stos
or
inc
dec
aaa
pop
ljmp
fcompl
mov
adc
test
pop
std
jl
push
jbe
jp
mov
ficompl
pop
lods
sub
push
inc
dec
fadd
ss
bound
push
in
rorl
or
mov
idivl
jbe
sbb
pop
inc
outsb
push
inc
sbb
fstpt
rorl
pop
mov
xor
pop
add
scas
mov
sar
arpl
pop
cmp
or
loop
and
jb
jp
out
inc
stos
xor
xor
mov
dec
xor
arpl
lods
outsb
sub
negb
lahf
fimuls
mov
gs
ja
pushl
lret
ficomps
lds
aas
jnp
add
push
jne
pop
mov
flds
into
xchg
sahf
cmpsb
in
popf
lods
out
sbb
dec
inc
pop
fdivs
sti
std
mov
lock
arpl
incl
adc
mov
cmp
fstpt
jbe
fwait
loopne
and
pop
mov
jns
inc
add
aas
jo
dec
rcll
out
sti
and
inc
fs
mov
inc
bound
pop
data16
inc
add
and
push
add
in
into
xlat
push
pop
inc
lds
fadds
enter
popa
sub
dec
push
clc
pop
dec
and
testl
xchg
ret
ss
or
inc
aaa
cs
ret
jo
popf
jns
push
add
jnp
stc
and
fnstenv
imul
adc
adc
dec
jmp
xor
je
sub
cmc
add
cmp
mov
or
leave
and
sahf
subl
jb
push
popf
push
in
and
fiadds
adc
dec
push
xchg
aam
gs
sub
outsl
add
cmp
stos
cmp
sti
inc
cmp
pop
mov
adc
leave
sbb
ss
push
cld
push
and
rorl
sti
mov
loope
loopne
adc
scas
gs
test
pop
inc
jge
xor
xchg
pushf
sbb
push
xchg
ret
ret
test
cmpsb
pop
ficoms
daa
jge
push
shlb
cmpsl
mov
andb
nop
pxor
mov
loop
loop
mov
mov
lods
xchg
jbe
push
fdiv
mov
lret
in
cmpsl
adc
pop
pop
aas
aas
mov
mov
insl
xchg
sahf
dec
jmp
push
into
cmc
pushl
jmp
arpl
mov
scas
inc
push
push
sub
jne
stc
dec
jns
int3
loope
mov
pop
ja
dec
and
std
xchg
add
loopne
sbb
ret
mov
imul
int
test
fbld
jae
push
pop
test
pushf
outsl
pushf
push
cli
cmp
push
fimuls
pop
or
jecxz
inc
das
lock
pop
cli
clc
push
rorl
sarb
in
xchg
mov
bound
xor
add
mov
fisttps
sbb
insb
int3
cld
loopne
add
dec
inc
xchg
add
jecxz
xor
rcll
and
adc
sbb
inc
sbb
and
jno
bound
adc
jle
inc
into
mov
mov
sbb
ret
and
or
mov
add
cli
cmp
into
cmp
mov
pop
pop
sub
jmp
arpl
xlat
adc
pop
or
jg
sti
push
orb
jae
xchg
jbe
das
icebp
dec
jmp
pop
cwtl
add
pop
mov
test
call
lods
repnz
adc
call
repz
add
push
pushf
mov
or
lods
das
les
inc
mull
loope
addr16
push
ret
mov
imul
xlat
jl
sub
mov
mov
or
rorb
enter
shll
lret
sub
hlt
leave
or
idivb
and
pushf
push
fcmovnb
sbbl
dec
jb
lahf
xor
loope
leave
adc
push
aaa
or
hlt
cmp
ret
mov
dec
dec
ss
jge
mov
xchg
outsb
inc
xor
fldcw
jne
jae
outsb
sub
stc
mov
and
aaa
pushf
mov
fldenv
and
add
xor
xchg
xchg
fldl
add
faddl
pop
sub
andb
xlat
fisubl
outsl
pushl
mov
pop
test
lods
scas
cli
pop
pop
lret
fistpll
and
scas
daa
or
sbb
mov
daa
inc
inc
jle
outsl
mov
inc
scas
or
mov
cmp
cmp
jg,pn
in
fstl
mov
inc
and
and
lds
inc
loop
addr16
xchg
cmp
sbb
adc
push
sbb
call
loope
cs
cmp
insl
jno
mov
and
addr16
fidivrs
jg
sub
movb
outsb
xadd
imul
aad
dec
dec
dec
lcall
repz
jle
adcb
mov
jge
adc
push
imul
mov
shrb
cmpsb
cwtl
sub
mulb
ds
loopne
test
lea
imull
dec
out
and
jno
push
mov
adc
sbb
dec
push
or
out
in
dec
cwtl
arpl
xor
mov
xor
lods
mov
adc
insb
add
insb
push
cmp
insl
sbb
sub
pusha
mov
sbb
mov
jno
movsl
or
enter
inc
fnsave
push
jge
push
leave
push
jg
fwait
dec
rdtsc
enter
mov
adc
pop
add
jle
add
mov
or
xchg
mov
popa
fsubrs
popf
xchg
leave
repnz
test
sub
frstor
fidivl
sahf
or
loope
lahf
xchg
push
xor
and
pop
leave
mov
xchg
ss
mov
sub
test
push
jg
or
lods
pop
rcrb
das
fwait
xchg
sub
cmpsb
test
pop
push
jae
in
sub
xchg
popa
jmp
xchg
jmp
push
add
fldenv
jg
in
cwtl
mov
adc
add
or
jmp
loopne
adc
xor
sub
jnp
movsl
lods
jo
pop
push
cmp
and
cli
adc
pop
sahf
call
lcall
xchg
mov
in
dec
sub
fs
sti
jmp
pop
cwtl
adc
cmp
dec
push
dec
pop
shll
add
dec
jb
mov
mov
fcmovnbe
and
xchg
dec
cmp
push
test
xchg
mov
push
outsl
cltd
push
push
aaa
cmp
fwait
lds
mov
lret
das
clc
int3
cmp
inc
dec
jp
pusha
inc
adc
shr
ror
push
inc
das
stos
mov
jecxz
or
pop
daa
jae
in
ds
push
xchg
ljmp
push
jnp
mov
push
mov
push
ljmp
cmp
mov
xchg
paddd
out
mov
roll
ljmp
sub
dec
pop
fmul
rorl
js
rorl
xchg
jl
mov
or
add
dec
mov
pop
shll
pop
cld
sub
inc
test
push
in
pop
jne
lods
aam
rolb
add
xor
shll
leave
cmp
cltd
lock
sbbb
sub
int
jmp
enter
fs
xchg
cltd
jp
push
faddp
inc
push
and
cli
mov
pushf
sub
or
ljmp
call
jbe
cmpsl
jge
into
test
jbe
repz
clc
add
inc
dec
aam
adc
push
mov
xchg
mov
pop
push
sub
pop
cmp
xchg
sub
enter
pop
cmp
lds
daa
add
cmpsb
pop
pop
xchg
mov
add
or
mov
loopne
out
jmp
push
cmpsb
jge
mov
in
test
and
movsb
repnz
sub
call
mov
lret
stos
jl
xchg
jne
sbb
das
hlt
adc
negl
sahf
inc
test
mov
les
jne
ret
xchg
fidivrs
push
cld
pop
fwait
mov
pmuludq
fstl
push
sti
xor
test
xchg
jo
and
lea
gs
xchg
je
sbb
adc
mov
sub
cwtl
jae
adc
popf
or
jecxz
inc
xor
sbb
sub
jne
cmp
mov
jnp
xlat
jbe
or
sub
mov
or
cltd
ror
loopne
fnstenv
out
sub
cmp
pop
push
pop
ret
push
pop
push
add
push
es
sarb
mov
repz
in
sub
lretw
rclb
xchg
sub
cmpsl
push
lods
mov
cli
sub
cli
or
ret
icebp
add
enter
jle
xchg
mov
cmp
fnstenv
insb
in
mov
loope
dec
jns
mov
sub
pushf
push
sbb
adc
outsb
pusha
in
pusha
movsb
mov
popa
mov
dec
xchg
xchg
lock
or
ret
xor
negb
cmp
push
dec
fcmovbe
fnstcw
pusha
and
icebp
jbe
negb
pop
popa
xstore-rng
cmpsl
inc
data16
lret
xchg
test
xchg
push
adc
jl
clc
js
jo
pop
jg
and
jns
in
jl
sbb
push
aad
lea
insl
xor
xor
mov
dec
xor
mov
sbb
mov
xor
xchg
ja
pop
test
std
sbb
inc
mov
pop
sub
cmpsb
dec
aad
inc
aad
jmp
adc
cld
jno
inc
mov
mov
int
enter
adc
xor
push
test
mov
stos
or
push
fdivrs
add
xor
movsl
cmp
cmp
ja
dec
jb
je
pushf
mov
mov
out
leave
aas
pop
fwait
psadbw
das
mov
cli
enter
mov
shrb
jnp
shlb
push
cld
movsl
sub
cld
mov
add
jnp
ss
jae
xor
pop
ret
sub
outsl
ror
frstor
push
out
pop
add
scas
outsl
push
push
jne
stos
or
mov
pop
xchg
fincstp
rcrb
dec
mov
add
add
cmp
jno
sub
and
pop
mov
mov
shll
jno
add
inc
xchg
outsb
loopew
fidivrl
mov
pop
cmpl
scas
mov
call
fs
das
or
aad
das
add
test
mov
mov
popa
daa
sti
xchg
mov
add
es
jge
mov
or
mov
pop
nop
std
dec
stos
dec
into
pop
imul
addr16
xchg
mov
inc
mov
mov
lods
adc
test
mov
cmp
data16
pop
jae
shl
push
mov
sbb
ss
mov
or
add
pop
sti
jae
pop
sbb
loope
dec
sti
and
outsl
mov
push
adc
xorb
xchg
sbb
pop
push
imul
xchg
mov
test
pop
push
mov
fbld
xor
pop
scas
sbb
out
cmpsl
and
dec
andl
call
xchg
mov
sahf
shll
xchg
cmp
fnstenv
rorb
mov
ds
push
ss
lds
cltd
sahf
retw
push
cmc
cmp
sub
mov
movsb
dec
aas
jbe
fisubl
ret
jo
add
scas
lcall
push
mov
jl
and
xchg
cbtw
push
sub
or
mov
fmul
jecxz
mov
sbb
ret
adc
xor
addb
adc
jnp
rdpmc
lahf
xor
pop
jle
dec
test
push
push
dec
fwait
in
data16
fidivs
flds
ja
je
sub
xor
mov
rol
cs
lret
jmp
or
call
popa
ss
push
fwait
sub
xchg
mov
or
pop
mov
sub
pop
push
xchg
popf
shrb
pop
mov
jne
jge
movsl
loopne
dec
pop
inc
loope
iret
adc
inc
dec
push
sbb
xchg
add
movsb
mov
or
inc
pop
iret
insb
movsb
lret
sbb
mov
loope
out
mov
jo
or
ss
loope
adc
adc
pop
cmpsl
jbe
pop
jl
shr
jg
adc
mov
xchg
mov
mov
dec
dec
out
int
fistpll
mov
cmp
cld
sbb
shl
mov
adc
add
inc
into
jge
fstpl
test
into
jno
imul
std
lock
sbbb
lahf
pop
cld
addr16
movsb
cmp
subl
jo
imul
cmp
jns
lea
sub
sti
mov
subb
push
cs
xchg
lods
push
subl
mov
out
and
adc
mov
and
jbe
fs
push
xchg
mov
pop
add
syscall
imul
jle
mov
js
and
jns
fistpll
cmpsb
decl
mov
sahf
push
int3
stos
lock
and
add
lds
fwait
addl
xor
sahf
inc
scas
dec
ljmp
sbb
les
mov
shrb
in
cltd
push
cmc
lgs
fadd
cmpsb
das
es
shrb
adc
pop
jmp
test
shll
cwtl
cmp
mov
dec
mov
repnz
leave
sbb
lcall
mov
mov
mov
out
std
jge
aad
nop
js
xchg
add
or
aaa
lock
cmp
cli
lret
or
mov
shrb
cwtl
fistps
add
subb
out
sahf
xchg
test
js
popa
xchg
sbb
addr16
dec
std
pop
into
out
sub
lock
dec
pop
lods
add
aaa
loopne
lds
and
scas
dec
sbb
clc
int3
out
xchg
insl
outsl
les
jns
aad
mov
clc
adc
cmpsl
ror
pop
push
and
hlt
daa
popf
clc
idiv
xchg
adc
insb
sub
jecxz
cmpsb
add
xchg
mov
ja
call
mov
xor
add
js
xor
dec
sbb
adc
test
int3
out
cltd
xor
push
movsb
inc
shl
cld
ret
insl
xchg
repz
or
inc
jg
cmp
sbb
xchg
adc
pop
jae
sub
fnstenv
pop
test
in
outsb
mov
repz
mov
and
mov
arpl
jae
push
sub
and
mov
and
dec
mov
stos
cmp
ds
stos
cltd
push
jno
jmp
push
adc
push
rcll
clc
imul
jb
dec
aaa
scas
add
xchg
jno
mov
mov
jae
pop
das
shll
mov
xchg
adc
hlt
jp
outsb
push
int
or
fcomps
rcll
sti
pop
ds
jl
xchg
mov
sbb
inc
push
push
xlat
add
loop
nop
dec
and
add
and
xchg
call
and
or
cmp
shll
loop
xor
mov
adc
dec
mov
xchg
out
repnz
push
pop
stc
jb
adc
sbb
inc
jns
or
inc
push
xchg
lret
pop
jecxz
cwtl
nop
mov
push
mov
add
out
jmp
outsl
cli
xor
sub
cld
dec
out
sbb
es
loope
sbb
mov
sbb
jecxz
arpl
xor
cmp
mov
hlt
push
inc
sbbb
adc
aad
mov
or
inc
movsl
mov
imul
dec
push
add
xor
sub
imul
shll
in
xorl
xchg
mov
jg
mov
mov
push
xchg
sub
xchg
mov
std
sbb
js
and
jnp
sub
xlat
data16
cmp
inc
mov
xchg
ss
cs
lock
icebp
push
cmpsb
and
enter
fisubs
fnstcw
out
fisttpll
push
in
in
lahf
mov
add
scas
out
sub
inc
mov
sbb
sbb
movsl
test
outsl
inc
xchg
gs
cld
xchg
clc
sub
stc
jl
cmpsl
mov
jl
fwait
cld
out
adc
lods
jle
jecxz
frstor
inc
inc
and
mov
mov
insl
dec
cld
call
fdivl
jmp
inc
pop
mov
adc
orb
inc
or
jno
sub
addr16
roll
sub
or
leave
ret
dec
and
and
lods
test
rcrl
push
loop
in
ss
jp
ficomps
sbb
out
add
mov
test
sub
or
std
cmp
je
sub
movsb
test
push
sahf
roll
mov
rol
sbb
sbb
mov
add
add
div
xchg
je
sub
lcall
push
xchg
cmpsb
imul
jnp
push
in
mov
daa
sbb
rclb
aam
fbld
jle
mov
xchg
sbb
mov
arpl
push
cmp
iret
add
cmp
imul
pushf
and
cmpsb
cmc
cmpb
adc
pop
sub
ret
push
es
sar
and
and
test
jnp
dec
hlt
loope
jnp
repz
xor
pop
adc
cmpsb
pop
or
and
lcall
push
aaa
out
mov
lret
and
cmp
outsl
mov
mov
inc
push
enterw
in
sbb
push
mov
jle
dec
sbb
fnsave
int
mov
mov
jle
pop
mov
iret
cmp
xor
dec
mov
ljmp
pop
mov
mov
stos
or
push
xchg
xchg
mov
mov
cwtl
sub
rcrb
jae
cmp
mov
jl
js
out
fsub
dec
cmp
enter
dec
mov
mov
jbe
idivb
cmp
lods
pop
out
xchg
sbb
shl
jbe
aad
fidivl
push
sbb
in
lea
xchg
fcoml
push
mov
pop
in
xchg
mov
je
les
add
xchg
add
push
into
and
mov
xchg
leave
aas
pop
loop
es
pushf
pop
roll
fnstsw
xchg
pop
push
mov
add
cwtl
xchg
dec
int
loope
das
lods
pop
sbb
mov
mov
mov
aaa
int
stc
mov
aad
daa
sub
inc
dec
push
test
sbb
sbb
jns
and
movsb
inc
in
sbb
xor
int
popa
movsl
bound
loopne
js
dec
or
mov
mov
mov
mov
and
adc
and
imul
sti
imul
pop
jbe
push
xor
call
inc
mov
jns
mov
sub
mov
mov
and
sub
scas
lock
or
inc
dec
pop
xor
inc
mov
fdivr
jg
xchg
cli
aaa
xchg
test
inc
faddl
pop
movsw
addb
lods
aad
pop
aas
or
enter
mov
mov
or
dec
insl
and
mov
addl
stos
xchg
fldenv
pushf
ret
push
xchg
ret
mov
fmul
or
jl
fsubs
pusha
adc
andb
jle
jmp
orl
cmpl
pop
bound
and
xor
mov
movsb
aam
jmp
fincstp
rcll
pop
js
xor
fcomps
adc
mov
cltd
sbb
and
fucomp
adc
insl
int
fs
ljmp
loope
mov
xor
and
dec
popf
std
je
inc
or
xchg
dec
cmp
cltd
mov
xchg
lcall
push
data16
nop
fisubrl
sbb
xlat
movsb
or
shll
or
stos
aad
mov
lret
sub
test
mov
or
cmp
in
inc
aas
shrl
push
into
lock
inc
call
push
lods
les
icebp
cmp
sahf
aam
adc
cmpsb
cmpsl
popa
mov
xor
push
pushf
cli
cmp
and
adcb
sbb
sub
and
push
orl
insl
mov
jle
mov
cmp
sti
and
ljmp
and
movsl
xor
movsb
xor
popa
movb
jecxz
jne
inc
add
outsl
mov
inc
and
rorl
and
xchg
sbbb
ljmp
insb
cmp
test
xor
cli
fisttpll
xor
and
mov
in
popf
imul
cltd
inc
movsl
movsb
or
jp
and
sbb
fldl
in
adc
mov
or
jb
and
pop
imul
xor
fistl
ljmp
leave
sbb
push
mov
nop
lock
into
mov
nop
push
imulb
hlt
faddl
ljmp
sbb
or
jmp
cmc
int3
pop
arpl
lods
daa
push
sub
dec
fistps
es
loop
sti
mov
dec
jne
mov
fs
pop
std
rcll
jl
cmp
movsl
lahf
aas
or
sarl
mov
pop
lret
mov
in
mov
orl
push
insl
pusha
dec
xorl
call
popf
add
inc
xchg
dec
push
std
jne
ja
pop
push
mov
mov
mov
nop
and
ss
lods
dec
jbe
lea
push
lods
fidivl
and
jb
andb
outsb
dec
iret
daa
popf
repnz
cmp
test
out
rcr
loope
sbb
out
arpl
imul
shll
mov
pop
div
lret
mov
add
test
out
xor
sbb
scas
in
and
sub
mov
dec
in
scas
jge
or
inc
ret
sub
sub
push
jl
jg
in
je
jmp
test
cld
mov
stc
pop
mov
cmp
pop
jecxz
cmp
inc
stc
mov
test
pop
lretw
jmp
fcmovu
cmp
insl
outsb
rorb
hlt
xchg
movsl
addr16
hlt
roll
push
shll
fstps
pushf
dec
lret
jb
adc
ret
stc
call
jo
gs
xlat
and
or
cwtl
mov
xor
out
arpl
fcmovu
xchg
cmp
pop
insb
xchg
cmp
dec
test
loopne
out
sub
add
orl
mov
sahf
cld
lret
xorl
ljmp
fmulp
push
mov
xchg
pop
lods
cld
outsb
cmp
loop
dec
cmp
sahf
shr
jnp
cld
xchg
sbb
mov
stc
ss
leave
jmp
push
into
out
hlt
shrb
bound
adc
flds
imul
push
test
pop
imul
or
pop
aad
dec
inc
xchg
rclb
inc
ds
xor
popa
loope
jne
adc
and
adc
aad
mov
xrelease
ljmp
mov
in
cmp
xchg
or
push
cltd
xchg
and
and
addb
sub
je
in
inc
sub
jo
mov
push
cld
shr
fbld
xchg
xchg
pop
mov
inc
punpcklwd
shl
iret
adc
cmpsl
ljmp
sub
outsl
aas
into
es
jg
test
sub
rcrl
dec
jno
cmp
cli
lods
jl
nop
cmpb
pushf
jne,pn
xor
adc
push
cmp
push
push
mov
loop
fwait
fwait
adc
mov
fcmovne
stos
xchg
aas
cltd
cmp
or
aas
mov
inc
jecxz
in
add
cmp
sub
sub
fbstp
imul
mov
inc
lods
mov
sahf
ds
and
lret
popa
pop
jo
fidivrl
inc
and
mov
push
mov
xchg
dec
pop
or
insl
aaa
dec
ds
pusha
push
pusha
jne
mov
test
xor
popa
fiaddl
xor
mov
repz
jecxz
gs
push
cs
cmpsb
repz
lahf
fidivrl
mov
js
loope
fisubs
and
cli
stos
test
bound
cmp
test
mov
sbb
xchg
mov
jp
pop
cmp
push
xor
push
ds
mov
sarl
rol
dec
ljmp
xchg
add
sub
pop
cmp
mov
iret
xchg
jecxz
loope
pop
jno
mov
push
xchg
mov
xchg
into
jecxz
jmp
sbb
arpl
sub
sub
lods
imul
push
shlb
lea
out
dec
fisubs
push
jp
pop
xchg
jnp
sbb
or
jg
jb
mov
dec
sbb
xchg
inc
jns
push
loope
mov
data16
adc
shrl
inc
sbb
xor
idiv
xchg
add
jecxz
sbb
sub
bound
in
daa
xchg
jbe
mov
ss
mov
leave
add
sbbl
arpl
mov
ds
cmc
sti
fwait
jbe
push
xchg
int
das
push
loope
and
mov
cmp
outsl
and
inc
pushf
push
and
jge
ret
lea
inc
sarl
stos
clc
xchg
dec
mov
dec
push
pop
add
popf
in
jne
in
fldt
push
aas
cmp
sbb
pop
and
dec
pop
fnstenv
pop
push
aas
pop
sub
mov
jge
shrl
jg
mov
sub
mov
nop
imulb
xor
lods
xchg
pop
fcmove
dec
mov
fnstsw
lahf
testb
pop
mov
pushf
enter
push
jb
sbb
cli
int
or
ja
lcall
ljmp
icebp
add
inc
mov
cmpsb
and
ret
or
push
or
std
pushf
mov
jge
or
and
jmp
aaa
mov
pop
or
dec
cwtl
adcl
jb
lds
xor
imul
pushf
xlat
jbe
push
hlt
dec
push
sahf
dec
nop
dec
jb
dec
mov
sbb
cltd
insb
repnz
xchg
mov
sbbl
jae
lock
lods
or
push
push
jae
cltd
xlat
ja
dec
jp
enter
repnz
in
movsb
int3
imul
inc
out
imul
xchg
push
mov
lea
rcr
fbld
pop
xor
push
jne
inc
and
andl
pop
pop
and
lahf
stos
jecxz
inc
arpl
xchg
mov
adc
inc
lret
mov
mov
test
call
jne
mov
add
adc
mov
push
mov
push
sbb
inc
cli
lcall
sub
xor
jle
xchg
cmpsl
inc
in
or
cmpsl
cmp
shrb
mov
mov
inc
adc
xchg
add
pop
cmp
popf
rclb
cmp
bound
lret
stos
insb
xchg
fwait
sbbb
ret
fidivrs
and
sub
cmpsb
cmp
add
stc
sbb
jns
cli
mov
pusha
daa
lcall
xor
xor
xor
adc
shlb
lret
pop
push
inc
sbb
aad
in
nop
sub
xchg
mov
stc
divb
and
out
mov
ficoml
inc
inc
pusha
fstpl
sub
jl
lret
stos
cmp
outsb
add
dec
test
jmp
mov
icebp
lret
push
adc
out
into
fcmovbe
pop
aad
int
psubusw
fistpl
dec
dec
xor
xor
lock
pop
jnp
push
test
mov
pop
push
lock
mov
loope
or
shrb
adc
push
int
lcall
and
out
into
adc
in
addl
push
or
pop
loop
push
inc
add
imul
imul
es
jge
negb
jnp
push
popf
jmp
orb
test
cmpsl
or
dec
cmpl
icebp
or
jg
push
out
leave
test
les
cmp
add
mov
xorl
push
dec
movsl
leave
fcmovne
or
mov
popf
out
sarb
stos
idiv
imul
push
cmp
xor
outsl
lea
movsl
jb
mov
cwtl
cmp
insl
fwait
gs
fwait
imul
je
shl
aam
inc
add
loop
push
xchg
sbb
inc
fiadds
stc
cli
adc
out
nop
pop
lret
or
enter
push
dec
movsb
add
sub
ds
movb
xchg
mov
push
xchg
sub
jo
xchg
pop
xor
into
mov
pushf
inc
icebp
push
std
stos
dec
in
or
push
pop
andl
and
pop
cmp
lret
xchg
ja
popf
adc
adc
pop
mov
cmp
mov
adc
push
mov
dec
bound
sbb
xchg
popf
icebp
pop
int3
js
stos
xchg
jp
in
cmpb
adc
cwtl
mov
inc
jmp
push
xor
es
jp
pop
daa
and
adc
xor
lahf
push
jnp
cmp
inc
inc
mov
ja
aam
rcrl
xchg
or
add
push
mov
icebp
rcll
mov
mov
daa
cltd
inc
stos
daa
adc
mov
imulb
loope
imul
pop
bound
lods
into
imul
push
xor
jbe
cmpsl
sub
call
les
xor
std
dec
in
jle
pop
dec
mov
repz
and
lcall
xorb
cmp
push
mov
stc
lahf
cltd
cmpl
fisubl
add
aaa
data16
sub
cld
xor
xchg
xor
add
dec
or
push
leave
in
pop
mov
testb
into
dec
loop
push
lret
icebp
out
and
jmp
faddl
rcll
or
lret
imul
sbb
sbb
rol
xor
lcall
xor
dec
pop
in
dec
xchg
bound
subb
ficompl
xchg
aam
fistps
or
mov
pop
daa
in
or
pop
jb
dec
mov
flds
insl
jp
mov
mov
xchg
movsb
rcrl
ljmp
cmpsb
push
or
aad
adc
or
mov
scas
cmp
out
jl
ljmp
push
fmulp
scas
cmp
std
test
push
fs
in
add
in
xor
dec
stos
js
xor
shlb
into
aaa
xor
lahf
lods
movsl
mov
or
das
add
mov
adc
push
les
lret
sub
sahf
outsl
pop
lds
pop
pop
jae
gs
lcallw
mov
push
test
jecxz
jne
std
rcll
lret
sub
add
lret
in
xlat
pusha
aad
and
aas
mov
dec
loop
mov
mov
xor
pop
clc
jmp
jb
xchg
push
sti
mov
inc
les
mov
inc
aam
aas
cli
shlb
fadds
nop
out
cmpsb
xchg
or
test
mov
cs
mov
fistl
mov
shrl
dec
shrl
xchg
cmp
ret
mov
xchg
inc
push
mov
das
xorb
shll
push
inc
pop
hlt
jb
inc
sub
fistl
ficoml
in
movsb
cltd
insl
add
aas
ret
sub
adc
push
movsl
ss
stos
cltd
lods
jl
adcl
cltd
inc
daa
out
mov
jbe
add
cmp
fscale
std
xchg
sbb
cmpsl
mov
add
rcrb
pusha
add
ret
in
rorl
xor
movsb
xor
repz
in
loop
sub
ret
mov
out
xchg
je
das
xlat
xchg
lret
incl
and
repz
es
jg
sbb
xor
cmovg
dec
test
adc
adc
test
jnp
mov
pop
es
fwait
imul
sahf
or
inc
sub
imul
fsubl
outsl
sbb
popa
mov
fwait
inc
xor
cmp
jo
js
push
ds
arpl
xor
pop
negb
add
dec
ljmp
cmp
movsl
adcb
cmp
lcall
fidivs
xchg
loope
mov
push
lock
popa
adc
push
xor
adc
pop
lods
xchg
mov
sti
cwtl
andl
ljmp
xchg
test
cmp
fnstenv
test
pop
les
mov
mov
out
xor
les
adc
mov
pop
fs
gs
out
fsubl
mov
ror
fcmovbe
clc
sahf
ret
ret
scas
add
fsubl
push
and
xchg
cmc
iret
cmp
dec
cmpsl
clc
add
push
sub
dec
xchg
icebp
sahf
xorb
push
scas
je
bswap
insb
sbb
fsts
push
xchg
je
out
add
hlt
mov
pop
fnstcw
stos
into
mov
add
sub
rorl
sbb
jns
mov
orb
sarb
or
lods
lcall
cmpsl
jno
mov
push
orb
sbb
lret
lds
out
neg
iret
stos
imul
xor
inc
jp
lahf
xchg
xchg
mov
lea
mov
lahf
dec
xchg
mov
ds
out
dec
mov
pushf
popf
fidivl
outsl
aas
iret
ficoml
mov
sbb
das
cmp
mov
sahf
mov
xchg
nop
pop
cmp
scas
dec
push
xchg
lret
stc
int
mov
mov
sbb
mov
movsl
cmc
dec
hlt
adc
cmp
sbb
adcb
jg
jg
jo
mov
inc
aas
jg
loop
aas
mov
lock
call
test
xor
repz
sbb
jnp
mov
jl
push
sahf
xor
cwtd
add
insl
mov
clc
outsl
lret
mov
bound
or
xchg
mov
mov
roll
hlt
jae
push
je
scas
mov
push
daa
xchg
pushf
ds
jl
ret
insb
test
mov
jo
iret
add
xor
shrb
inc
sbb
mov
push
mov
push
cmpb
push
rorb
dec
push
loop
inc
sub
adcb
pop
shll
enter
sub
fsts
mov
and
xchg
ret
scas
int
in
mov
xor
imul
ja
pop
and
lock
sahf
dec
jge
rcr
aaa
or
test
cmp
inc
scas
pop
stos
ljmp
call
cld
clc
adc
ds
mov
nop
testb
jnp
fsubrs
push
inc
mov
push
sbb
or
orl
inc
xor
push
xor
mov
mov
popf
sti
ljmp
test
push
jo
mov
xor
stc
add
cmp
lret
in
imul
lock
mov
mov
iret
sub
fucom
pop
popa
sahf
mov
xor
xor
ss
notb
mov
pop
and
aam
bsr
push
shr
cmp
out
aad
xorl
loopne
push
pushf
outsl
add
bswap
movsb
sub
daa
sbb
xor
mov
call
in
cmp
in
xchg
mov
sbb
not
das
mov
inc
dec
mov
or
jmp
cmpsb
cmp
push
inc
jmp
sub
stos
inc
xlat
mov
stos
lea
push
fildl
push
sti
lret
dec
xchg
adc
or
imul
pop
mov
pop
dec
inc
in
mov
fsubl
pop
mov
jno
cmp
pop
pusha
mov
sub
add
shrl
jns
enter
jb
pop
cmc
jns
fcoms
rorl
cwtl
aaa
xchg
inc
or
push
jle
jbe
cs
mov
adc
in
fnstenv
aas
sti
or
cwtl
jmp
sti
mov
xchg
and
mov
out
push
inc
mov
scas
dec
adc
lret
mov
outsl
jg
in
or
push
pop
mov
popf
es
or
leave
jl
xchg
daa
push
pop
movsl
pop
push
add
aas
shlb
push
scas
mov
fbld
push
or
adc
movl
mov
sub
pop
jmp
test
push
int3
mov
sti
push
lcall
arpl
aaa
cmpl
sti
mov
add
add
jno
xchg
mov
dec
xchg
stc
aam
inc
pop
aam
aaa
sbb
xlat
cwtl
cmp
mov
ss
or
iret
mov
xor
pop
mov
cs
daa
cmpb
outsl
movsb
and
mov
out
push
sbb
lds
sub
pop
jo
adc
mov
int3
test
or
mov
cmp
adc
push
adc
or
and
mov
lods
cmp
and
mov
or
subl
imul
sbb
sbb
xchg
lcall
sbb
inc
leave
or
sbb
movsb
adc
fnstcw
add
and
dec
test
jno
and
push
mov
add
cltd
ljmp
nop
mov
test
loope
sub
in
adc
mov
in
pop
mov
or
push
jne
sbb
push
cmpsb
lret
lret
jmp
movsl
ds
lea
lods
add
inc
cmpsl
push
push
scas
or
sbbb
push
enter
andb
inc
mov
add
mov
std
xchg
push
inc
inc
es
sahf
lret
xor
rorl
cmp
sbb
jne
cmpsb
adc
insb
sub
insl
dec
and
int
mov
adc
cltd
lahf
xor
adc
sti
jl
pop
push
lcall
mov
or
xchg
lcall
pop
dec
test
out
bound
pusha
ss
inc
sti
pop
mov
jmp
js
fwait
sub
mov
jns
out
dec
sub
cwtl
jg
imul
popf
inc
andb
daa
adc
jmp
and
xchg
mov
pop
addb
out
sti
lods
add
fists
xchg
lock
sub
jl
aad
push
cmp
jno
cmp
cmp
divl
loope
std
jl
or
xchg
lret
testb
lods
lds
stos
ret
mov
jnp
cmp
jne
popf
push
dec
enter
rep
mov
sbb
lock
add
mov
mov
stos
movsb
mov
add
fs
inc
pop
test
hlt
fmull
sbb
xchg
mov
lcall
fwait
pop
mov
std
cmovns
mov
hlt
jno
jbe
ret
pop
in
cmpsl
imul
or
out
aaa
push
sub
stos
push
out
cmp
pop
stc
and
lahf
lcall
push
lods
jl
stos
in
xor
jne
mov
push
cmp
ret
or
cmp
ficoms
call
mov
cli
cmpsl
aaa
ljmp
push
aam
add
xchg
dec
shll
mov
aad
cmp
icebp
pop
es
xchg
daa
xor
xchg
sub
mov
gs
xlat
dec
cmpsl
mov
mov
xchg
cmp
int3
inc
test
cmp
add
xorl
xor
mov
insl
xor
adc
shrb
inc
mov
inc
cmpsl
outsb
adc
cli
adcl
rcr
das
test
daa
xchg
rclb
pop
sub
push
hlt
xchg
jo
das
add
pop
fiadds
pop
insb
adc
fadds
lock
aas
gs
or
out
sti
or
mov
push
mov
sarl
cmp
rcrl
push
jns
mov
in
jne
mov
push
mov
mov
aad
mov
jecxz
mov
dec
or
xor
push
das
jge
add
in
inc
inc
fs
sahf
push
dec
mov
outsb
shll
scas
loope
test
mov
xor
mov
imul
jno
cmp
jmp
jo
lahf
fcmovnu
or
mov
cmc
mov
or
and
pop
push
or
es
cwtl
stos
lret
repz
sub
add
popf
jo
in
pop
jp
lods
push
xor
add
mov
cmpb
mov
push
inc
adc
jns
mov
ljmp
in
mov
push
or
fnstcw
xorb
in
push
and
push
sbb
and
mov
fisubrs
mov
mov
rorb
mov
sbb
xor
fcmovnbe
mov
sub
sbb
out
add
jnp
pop
enter
pop
adc
add
popa
push
mov
add
mov
dec
pop
xor
add
mov
orb
mov
xchg
dec
lods
inc
arpl
sbb
inc
popa
xchg
push
leave
lret
push
fcmovne
leave
mov
loopne
mov
mov
add
mov
jns
test
and
enter
rcl
mov
fisubl
adc
mov
outsl
adc
shlb
cmp
xor
sub
sbb
je
cmp
imul
popf
pop
lret
popf
add
shl
xor
sub
inc
out
daa
mov
dec
fistpll
jl
mov
fs
stos
pop
psubq
subl
sub
or
xchg
pop
add
jge
icebp
mov
scas
mov
sub
mov
inc
push
or
cmp
stos
fiadds
push
and
test
fwait
cmc
or
adcl
dec
flds
pop
xor
mov
rcrl
aaa
scas
mov
bound
jbe
scas
inc
sub
xlat
mov
repz
inc
inc
lret
test
pop
sarl
xchg
test
xchg
ja
stc
pop
sub
and
out
lds
pop
lahf
push
sub
int3
push
mov
sbb
leave
test
ja
xchg
jns
fidivrl
cs
popa
jmp
inc
xlat
clc
les
out
dec
fwait
test
lret
pushf
or
mov
stc
xor
ja
mov
mov
xchg
jbe
mov
leave
and
jle
pop
popf
push
stc
or
add
and
pop
jl
sub
and
xor
lcall
xchg
test
arpl
dec
das
dec
inc
out
sub
loop
mov
xchg
pop
xor
or
ja
stc
aas
inc
xlat
nop
scas
dec
or
jnp
lods
ret
inc
mov
or
mov
cmpsl
das
into
xchg
push
in
sarb
push
cmc
sbb
pop
inc
mov
sub
jb
or
mov
sbb
gs
cli
and
lods
icebp
or
pop
jne
mov
xchg
jle
pop
sti
adc
jle
out
pop
mov
cltd
out
cmp
es
xor
mov
out
notl
movsl
sbb
push
cmp
inc
inc
push
dec
xchg
and
ret
aad
push
int3
cmp
xor
pop
hlt
je
loopne
negl
out
dec
inc
cmp
aam
mov
fdivl
mov
stos
inc
mov
aaa
pop
out
push
out
mov
loope
icebp
lock
ret
subl
frstor
rclb
inc
cmp
cmp
fildl
dec
jl
insl
cmpsb
das
sbbb
fmul
rcrb
adc
sti
repnz
scas
rol
decl
pop
into
fstpt
repz
cmp
leave
jl
lret
decl
or
pop
cltd
sub
adc
push
fdivs
adc
mov
add
out
sbb
lahf
adc
ja
bound
xor
enter
adc
lds
daa
push
popa
nop
lods
fisttpl
xor
pushf
mov
mov
cmp
xor
adc
sbb
mov
mov
jne
lcall
jp
imul
xor
or
mov
out
cmpsb
dec
mov
mov
ds
xor
jns
pop
sbb
rcrb
and
adc
lret
dec
jae
adc
rolb
insb
out
aaa
les
in
jae
loopne
and
jmp
nop
jns
les
clc
lods
insb
mov
in
mov
adc
enter
es
mov
shll
in
mov
roll
or
cmpsl
popa
xchg
sub
and
rcrl
sbb
in
dec
inc
sbb
lret
stc
pop
jl
xor
stc
jl
bound
dec
sub
push
les
inc
inc
cltd
inc
mov
test
xchg
cs
insb
cltd
popl
in
fsubl
movsl
int
nop
jecxz
mov
xor
lods
fstpl
or
push
test
data16
pop
sahf
and
fbstp
in
pop
sub
sub
mov
dec
inc
jno
or
rol
mov
in
stos
sbb
cltd
mov
aaa
add
fdivr
dec
mov
xchg
pop
in
test
pop
fcompl
jp
mov
ret
xor
push
inc
lcall
aaa
mov
inc
mov
icebp
jns
gs
test
sti
cwtl
subl
xchg
push
mov
inc
jb
out
popa
xor
dec
pop
cltd
sahf
jp
jno
and
stc
and
dec
cmp
clc
in
xor
and
and
mov
insl
xor
mov
aad
lcall
xor
xchg
repz
das
stos
xchg
fs
flds
scas
push
sub
mov
outsb
shrb
das
and
aas
fidivs
cmpsb
in
xchg
fwait
rcr
scas
sbb
test
icebp
aad
push
addl
push
fadds
je
loopne
addr16
das
sub
add
jno
push
repnz
and
aaa
and
add
rcl
sbb
jge
iret
lcall
arpl
outsb
mov
and
call
push
sub
cmp
in
lea
ja
push
xchg
jp
jge
cli
fwait
xchg
sarl
andl
xor
push
mov
inc
imul
sbb
and
scas
xchg
lock
stc
in
sub
jl
xchg
inc
mov
xlat
mov
and
shll
fdivp
sbb
mov
leave
ljmp
jns
mov
enter
adc
divl
mov
and
mov
xor
pop
push
aas
es
inc
cs
repz
je
jmp
iret
fnstsw
mov
push
lea
pop
pop
mov
cwtl
addr16
adc
mov
sub
mov
xor
push
xchg
xchg
scas
pop
dec
fdivl
test
bound
clc
xchg
xchg
xchg
clc
push
dec
inc
mov
repz
mov
adc
cwtl
jns
aas
push
push
sub
xor
adc
xchg
xor
sub
adc
xchg
movl
mov
hlt
sbb
mov
pop
data16
add
adc
mov
les
movsb
adcl
into
loopne
inc
int3
jecxz
das
wbinvd
inc
iret
icebp
in
xor
mov
add
push
mov
fnstsw
and
mov
scas
xchg
scas
mov
aaa
int
negb
push
fsincos
clc
sbb
push
push
jae
js
lea
push
mov
pop
mov
and
lods
pop
test
pop
clc
addr16
push
jno
shlb
jno
sub
and
pop
out
pop
cmpsl
int
inc
jp
ret
xlat
adc
and
push
xchg
jecxz
rcrl
hlt
out
out
dec
iret
mov
das
and
pop
pop
in
movb
cmpsb
add
cmpsb
and
and
subl
insl
nop
fnstcw
xchg
aas
jge
inc
mov
ficoms
divl
mov
cmpsb
popf
jo
loope
movsl
in
in
inc
pop
clc
outsl
push
idivl
pop
xchg
neg
jo
adcb
stos
aam
pop
inc
add
loopne
js
xor
inc
inc
inc
sub
or
pop
adc
sub
xchg
add
sbb
sbbb
sbb
es
push
negb
repz
ss
or
cmpsb
mov
incb
sub
xor
out
dec
nop
cltd
dec
fwait
cmp
adc
lahf
gs
adc
xor
fucomp
or
cmp
fnsave
mov
dec
mov
xchg
ror
push
sbbb
test
stos
lcall
cmpl
fidivrl
fsubp
adc
nop
test
pop
sbb
adcb
dec
lret
pop
push
jge
or
repz
dec
sub
xor
and
mov
xchg
imul
dec
or
cmp
push
popf
insb
mov
cli
add
mov
int
xchg
pop
aad
add
test
jle
fstl
xor
sub
idiv
rcll
or
idiv
out
add
mov
dec
cld
loopne
mov
adc
dec
push
popa
icebp
popa
lock
push
jne
sub
cmp
lahf
imul
inc
call
aaa
ret
cmp
sbb
and
movsl
or
sub
xchg
and
and
inc
mov
out
adc
lods
cli
xchg
lods
jl
jp
sub
fsubrp
in
adc
test
xlat
jecxz
lret
pushf
xchg
inc
xlat
scas
imul
mov
or
pop
inc
arpl
inc
stos
es
in
and
add
inc
int3
inc
xchg
rcll
sub
inc
push
js
icebp
add
fcmove
je
int3
lcall
adc
nop
cli
pop
xor
inc
sahf
in
out
sbb
fcomip
mov
je
cld
jbe
jb
popf
or
std
mov
inc
lret
in
fwait
and
add
xchg
xor
dec
imul
roll
out
lods
mov
jle
popf
in
dec
daa
andl
inc
xor
add
aas
adc
xor
rol
jbe
xor
jg
gs
jl
testb
or
sahf
pop
push
faddl
jge
jae
pop
addr16
dec
xchg
arpl
sub
loopne
rcrb
repnz
mov
cmpsl
movsl
push
icebp
cmpsl
daa
pop
cltd
or
jle
jne
push
pop
push
jne
sub
in
lahf
jl
aaa
jnp
jb
mov
clc
test
inc
movsl
and
mov
ret
sbb
or
aam
roll
lahf
sub
pop
rclb
jg
adc
or
push
inc
fsubrl
mov
mov
inc
repz
and
je
repz
add
jns
mov
jns
pop
mov
lcall
data16
sti
shll
push
and
fisttpll
outsb
sub
ss
out
jns
in
cld
clc
xchg
outsl
loope
lock
repnz
mov
inc
xor
hlt
inc
jbe
sbb
mov
data16
xor
jns
pop
fildl
outsb
push
outsb
bound
push
push
mov
in
mov
popa
mov
adc
pushf
outsb
movsb
cmpsl
xchg
push
push
scas
aam
xor
or
mov
rcrl
jb
mov
sub
inc
aaa
dec
or
add
dec
sub
mov
icebp
dec
into
mov
cmc
sti
mov
ja
cs
lock
out
ret
sbb
adc
popa
mov
or
cmp
fs
cmp
es
xchg
sub
mov
repnz
push
jp
sub
sti
in
push
xchg
xchg
stos
imul
mov
mov
mov
stc
adc
movsl
adc
shrl
popa
cmp
test
sbb
lock
or
sarb
xchg
or
mov
inc
test
pop
pusha
add
rcrb
mov
out
xor
mov
fistpll
mov
jo
shrl
aad
lret
into
adc
add
imul
xchg
fistl
sahf
xchg
inc
pop
inc
shl
pop
mov
push
and
cli
paddsb
pop
outsl
pop
rorl
stc
mov
or
jmp
pushf
orl
sbb
jg
dec
js
adc
or
fdivp
scas
adc
mov
mov
arpl
out
add
push
lea
mov
lahf
sub
mov
fistpll
stc
gs
pop
inc
push
mov
popf
mov
xchg
push
add
fdivs
jb
daa
inc
or
mov
roll
out
cmovl
or
adc
stos
cmp
mov
add
jbe
mov
pop
cmp
mov
cs
jmp
dec
clc
cmp
dec
inc
xchg
dec
xchg
ds
mov
inc
inc
mov
or
test
add
aam
fisttpl
in
aaa
pushf
scas
aam
ds
pop
xchg
inc
dec
gs
adc
insb
ss
xor
ret
ljmp
jl
inc
xor
mov
in
adc
mov
mov
sbb
popa
add
cmpb
mov
ja
push
aam
inc
pop
call
cmpsb
hlt
ret
xchg
insb
xchg
lcall
sub
btl
mov
bound
clc
or
add
lods
aaa
fwait
std
dec
xor
pop
mov
lods
popf
xlat
mov
test
jns
in
in
mov
enter
mov
out
sbb
add
and
bound
xor
imul
mov
adc
adc
mov
int3
fistpll
xchg
cmp
inc
sub
adc
stos
lahf
mov
inc
sbb
push
loopne
scas
xchg
push
dec
iret
xor
lret
imul
pop
mov
or
cmpsl
add
jno
inc
movsb
dec
out
jno
mov
cmp
and
sahf
and
inc
mov
jle
sub
icebp
les
inc
outsb
fldl
mov
popf
divb
mov
push
mov
inc
in
push
mov
pop
pop
stos
inc
inc
out
or
mov
or
adc
cmpsl
shll
loope
leave
pop
push
gs
clc
stos
pop
mov
into
mov
pop
cmp
push
sbb
adc
andl
popa
pusha
adc
repnz
movsb
loopne
bound
dec
iret
pop
push
mov
repz
mov
out
stos
push
xor
pop
jbe
mov
cltd
sub
push
lret
fimuls
xchg
sbb
xchg
aas
ret
fwait
cmp
add
sbb
mov
cmpsb
jns
inc
pshufw
or
and
xor
std
jno
data16
push
push
mov
pop
jle
outsb
push
push
test
mov
hlt
mov
dec
pop
cs
xchg
xor
mov
shlb
es
adc
in
aas
or
pop
mov
dec
lcall
xchg
pop
add
popf
adc
lock
xor
push
xchg
aam
leave
cmpsl
lods
mov
and
sbb
cwtl
pop
pop
and
sarl
cmp
and
lahf
mov
cmp
das
out
outsl
out
clc
in
and
cmpsb
ret
adc
sbb
pop
dec
int3
enter
mov
aaa
cmp
pop
out
mov
call
aaa
add
sbb
stos
mov
cmpsl
push
cmp
pop
clc
or
mov
sub
mov
push
daa
insb
fsubrs
mov
xchg
aad
push
cmp
push
nop
lea
hlt
adc
pop
mov
or
in
ss
add
adc
adc
cmp
dec
xchg
and
dec
call
test
pop
and
das
mov
enter
insb
call
add
mov
xchg
xchg
cld
out
push
adc
and
cmp
lcall
inc
or
xor
pop
lock
addb
adc
adc
mov
mov
jl
mov
les
data16
data16
mov
add
pop
adc
pop
mov
dec
xor
inc
enter
daa
lcall
mov
std
fmull
sub
lcall
adc
mov
mov
push
les
xor
into
lods
rclb
scas
xchg
push
flds
fistps
mov
jecxz
xchg
andb
dec
mov
out
inc
mov
gs
ffree
mov
je
sub
cmp
push
push
jmp
push
hlt
jmp
cmp
lcall
ret
subb
rcrb
mov
inc
pop
mov
inc
adc
lahf
and
aad
xchg
outsl
outsb
andb
lea
jnp
cmp
add
or
xlat
dec
daa
das
adc
jmp
sub
pop
movsb
das
xor
cmp
sbb
dec
pop
and
in
dec
push
and
cmc
sub
fwait
loop
push
jbe
jo
ret
xor
les
mov
outsl
jg
mov
int3
popa
inc
das
cmp
scas
sbb
sub
jg
pop
je
xchg
mov
out
jne
mov
jmp
je
fists
punpckldq
add
and
and
mov
mov
data16
xchg
and
rorl
leave
jnp
fs
cltd
leave
dec
lods
outsb
mov
test
psrad
cli
xor
mov
push
add
ss
jns
sarb
xlat
or
lods
inc
push
mov
scas
dec
in
cmp
push
mov
clc
mov
pop
and
lds
sbb
dec
leave
and
xchg
sub
dec
and
dec
test
int
cmpsb
sti
jns
push
nop
or
test
push
rorl
adc
data16
push
lock
lods
xchg
xor
fmul
push
adc
roll
mov
mov
lcall
orb
push
mov
mov
fbld
mov
decl
pushf
inc
push
inc
lods
add
sti
fiaddl
pop
test
jnp
test
repz
les
or
cmp
js
lret
cwtl
sar
aam
sbb
mov
mov
mov
mov
and
clc
pop
scas
push
ja
mov
dec
pop
push
imul
inc
cmp
in
pop
ds
sbb
pushf
jno
ds
mov
mov
inc
out
repnz
lods
test
push
inc
cmc
push
dec
jge
enter
or
push
sti
jp
xchg
les
scas
push
out
dec
mov
jo
out
fisubrs
insb
ficoms
dec
xchg
pop
or
jecxz
cmp
push
xor
pushl
cmc
loope
inc
fisubrl
push
dec
sub
add
lea
hlt
jl
lods
cmp
mov
aas
or
mov
jg
cmp
mov
xor
mov
pop
sti
and
sbb
fidivs
mov
hlt
test
push
cmp
jno,pn
dec
push
lret
add
jmp
pop
mov
jp
sahf
in
in
mov
test
mov
sub
xchg
addr16
das
jb
mov
pop
dec
aad
negl
jbe
subl
pop
lock
inc
jmp
cmp
add
fwait
mov
add
mov
addb
mov
add
js
mov
lods
int3
notl
out
xchg
mov
lcall
mov
fcoms
gs
lods
push
add
add
pop
aam
fs
mov
push
jns
add
mov
adc
or
push
addl
cmp
mov
adc
out
push
jp
mov
xchg
pop
inc
push
jmp
int
imull
pop
pop
repnz
daa
jbe
pushf
mov
xor
push
out
loopne
bound
sub
sarl
test
je
rcr
imul
dec
inc
sahf
mov
cmp
cmp
mov
pop
mov
loopne
or
jb
and
dec
ficoml
test
shlb
stos
lret
cli
jl
adc
xchg
mov
call
hlt
out
pushf
push
xchg
add
fcomps
addb
xchg
ret
jg
cld
inc
jmp
dec
push
lret
addr16
lea
push
stos
cmp
jb
dec
push
daa
push
out
loope
in
nop
jl
jne
push
pop
test
jecxz
and
xor
jle
bound
add
out
negl
jae
dec
add
mov
cld
movzwl
arpl
add
sbb
or
clc
or
imul
int
shll
std
mov
add
push
jl
cmp
je
ss
pop
inc
xchg
sbb
in
daa
mov
jge
in
xor
pop
push
xor
cmpl
shll
jno
jnp
and
or
lcall
add
mov
pop
lcall
and
push
xor
sub
xor
xchg
lea
lret
sub
nop
popf
dec
mov
aaa
movb
gs
test
mov
stos
jo
xchg
push
jecxz
mov
sbb
jle
mov
aaa
push
hlt
pop
mov
sbb
jb
or
fidivs
dec
mov
clc
inc
mov
dec
xchg
repz
add
adcb
add
imul
add
pop
sub
mov
stc
xchg
je
add
js
aaa
mov
or
mov
lea
xrelease
mov
xlat
dec
jae
cli
jno
ret
test
dec
mov
push
arpl
jbe
lret
call
pushf
add
pop
pop
inc
sbb
xchg
fidivrs
mov
xlat
or
mov
mov
xchg
loope
push
or
adc
xchg
xchg
aaa
push
push
mov
andl
outsb
in
fsubrl
mov
push
arpl
and
outsb
or
enter
out
add
aaa
jp
jg
jmp
ret
jae
repz
enter
fisubrl
loopne
xor
jae
mov
or
mov
aaa
xor
bound
and
sbb
and
adc
outsb
dec
out
jecxz
aas
fcmovne
rcrl
movl
cltd
icebp
fucom
cmp
rclb
test
js
call
loopne
dec
push
dec
arpl
je
sub
jl
ja
xor
or
js
mov
in
out
in
or
stc
aas
pop
add
hlt
insl
xchg
pop
idivl
test
cltd
shlb
mov
dec
or
mov
filds
repz
fcmovb
adc
mov
push
insl
popf
out
cs
mov
cltd
mov
std
xchg
das
out
ja
xor
or
fnsave
jmp
inc
flds
adc
repz
push
fisttpl
dec
fimull
fcmovnu
sarb
xlat
mov
push
out
lea
cld
into
bound
adc
pop
orl
fsts
popf
out
adc
sbb
mov
clc
or
jnp
xchg
ds
push
clc
sti
adc
daa
cwtl
push
mov
or
mov
jno
sahf
cmpsb
push
stos
mov
adcl
mov
inc
adc
aad
xlat
aam
xor
or
adc
test
fidivl
jle
stos
sbb
in
clc
or
xchg
ja
xor
xchg
mov
jns
fistl
mov
mov
filds
test
aad
jb
dec
sub
dec
mov
or
js
lock
mov
jns
adc
mov
sub
sub
insl
dec
xor
jb
xchg
pop
lret
daa
test
addr16
and
dec
push
jp
xor
inc
cwtl
push
add
subl
fisttpl
pop
jnp
inc
mov
fldcw
mov
add
scas
xchg
adc
int
mov
shrl
push
out
sbb
adc
sub
in
loop
mov
popa
pushl
icebp
rcrb
xchg
jecxz
or
xchg
mov
out
jns
jecxz
pop
xchg
xchg
int
push
push
dec
inc
stos
out
ss
push
ret
xchg
lock
inc
ds
sbb
sub
mov
and
jbe
popf
push
or
in
dec
cmc
xchg
movnti
adc
sbb
mov
inc
nop
aaa
test
cmpsb
jmp
xchg
testl
cmc
push
into
js
outsb
push
inc
sahf
popf
aam
into
and
test
leave
mov
insl
pop
imul
leave
sub
inc
xor
into
punpckldq
sarb
fs
inc
daa
or
mov
ds
sahf
xchg
adc
mov
mov
cmp
icebp
mov
xor
push
pop
pop
out
cmpsb
jg
and
sbb
jp
dec
out
movsb
xchg
jl
getsec
aad
into
int
sbb
dec
inc
sub
jo
adc
pop
into
fs
mov
mov
fwait
mov
insl
mov
or
pop
jo
and
jae
xor
pop
or
lahf
pop
test
xor
fsts
or
fucomi
ss
jbe
push
sub
xlat
pusha
into
scas
aas
pop
jae
mov
je
in
adc
mov
jnp
xor
push
mov
mov
inc
ret
outsl
jo
fs
cmc
cmp
sub
xor
stos
ja
mov
stos
mov
mov
outsb
xchg
cs
xchg
sbb
jle
xor
pop
cwtl
adc
ss
outsl
daa
pop
cmp
fdivs
rcll
mov
mov
fcmovbe
pop
imul
or
incb
adc
fnsave
out
fdivrs
cld
shrb
cwtl
mov
xor
sarl
imul
fdivrl
xor
fildl
faddl
cmp
add
push
insb
les
fnsave
mov
sahf
mov
loope
rcrl
ss
cmpsb
jmp
imul
mov
pop
andl
adc
fwait
and
push
stos
jbe
gs
dec
mov
in
add
mov
shrl
aam
push
mov
pop
mov
jmp
test
int3
mov
xor
loope
pop
adc
mov
dec
xlat
fwait
scas
loope
add
xlat
in
mov
incl
adc
enter
mov
lods
mov
xlat
out
out
fsubr
pop
jg
mov
fsubr
fidivrl
fs
ljmp
aas
add
sbb
adc
jnp
dec
xchg
leave
test
inc
icebp
pop
test
jns
sbbl
ja
mov
or
and
and
das
pop
bound
rcrl
fcoml
lahf
mov
fwait
mov
jns
or
xchg
lods
pop
cmpsl
lahf
dec
cmp
lahf
push
fldt
dec
inc
icebp
jns
mov
mov
jns
add
repnz
in
xchg
mov
push
mov
mov
dec
in
sbb
sbb
fwait
push
lret
pop
inc
aad
xchg
in
push
lock
imul
sub
andl
sarl
xor
shrb
dec
mov
xor
popa
out
or
sbb
xlat
fsubp
push
stc
mov
rcrl
test
addr16
xchg
test
jb,pt
sahf
inc
es
inc
dec
aaa
pop
out
call
and
and
mov
and
lret
cwtl
adc
jb
xor
stos
sbb
pop
and
int3
movsb
fs
cmc
or
mov
cli
adc
sub
sti
std
call
mov
add
lret
sarb
cmp
jne
call
fbstp
ficoms
clc
adc
or
call
lea
js
push
movsl
lds
sub
add
mov
lcall
int3
add
sahf
push
in
sub
mov
mov
cmp
xchg
and
sbb
or
addr16
xor
mov
in
test
sbb
mov
test
or
arpl
pop
gs
psraw
or
loop
cmp
add
mov
pop
popf
in
cmp
jnp
cmp
cmpsl
inc
mov
cmp
sbb
ret
add
sti
or
pop
xchg
add
adc
in
das
test
sub
adc
and
jnp
or
rcrl
add
clc
fistpl
cmp
repnz
lret
xor
mov
test
add
mov
fistpll
adc
or
or
or
xor
xchg
add
jge
push
pop
dec
enter
in
mov
arpl
sub
movsl
lcall
and
mov
xchg
inc
or
sahf
jne
inc
into
fsubrp
pop
xchg
or
cwtl
test
xor
sbb
pop
sbb
fildl
xor
or
lds
call
jns
cmp
dec
or
or
lods
pushf
lds
clc
cmpsb
sbb
xor
xorl
cmp
decb
mov
test
aas
pusha
sbb
jp
stos
xchg
dec
sub
jno
enter
scas
jg
mov
neg
movsb
sbb
mov
xchg
bound
loope
dec
lds
pop
inc
jmp
sbb
in
repnz
sarb
xchg
imulb
jno
sahf
loop
pop
jp
hlt
jmp
or
mov
sub
sbb
push
rorl
jo
jmp
mov
sahf
scas
pop
mov
mov
cli
in
or
dec
into
and
cli
scas
push
lret
ret
inc
xchg
bound
sar
dec
push
cmpsb
scas
pusha
pop
dec
cltd
mov
mov
inc
dec
cld
clc
and
loope
cmpl
js
daa
cs
ja
cmp
adc
mov
sbb
dec
dec
in
outsb
das
xchg
inc
addr16
aas
pop
iret
stc
cmp
or
ss
push
xor
ret
outsl
loopne
pop
daa
loope
and
fnstenv
out
into
adc
push
sub
js
out
aas
ja
inc
add
mov
es
sbb
movsb
les
mov
jg
out
js
cmp
clc
cmc
test
in
jnp
mov
loop
leave
hlt
out
js
cmpsl
pop
dec
and
cmp
ret
xor
addb
in
lods
mov
mov
fdivrl
mov
sub
fsubrs
inc
iret
movsb
inc
pop
mov
bswap
cwtl
rclb
and
insl
std
dec
data16
mov
inc
push
loopne
popf
test
or
int3
xchg
dec
stos
xchg
mov
sbb
stos
ret
int3
and
fnstsw
adc
sub
lret
popa
je
ds
iret
scas
cs
in
mov
out
shrb
jb
xchg
adc
mov
xchg
cmpsb
xchg
jge
icebp
data16
or
leave
ljmp
pusha
lods
jp
das
jae
lock
jno
cmp
jb
cmp
push
dec
inc
jg
popa
pop
mov
push
je
in
mov
push
faddl
sbb
outsl
cmp
and
push
movsl
insl
cmp
cli
std
adc
inc
int3
push
and
lret
arpl
jle
out
mov
pop
and
inc
dec
pop
addb
add
xlat
not
in
shll
rcl
scas
or
lock
fcomi
dec
push
sbb
out
mov
pop
in
test
push
xchg
je
stc
cld
repnz
test
mov
and
xchg
sbb
lea
jb
int
nop
pop
mov
xchg
in
negl
repz
add
mov
mov
outsl
lea
movsb
push
jnp
orb
sub
mov
adc
xor
mov
xchg
jge
andb
stc
jne
cld
mov
repz
enter
dec
jno
popf
in
aad
ret
repz
into
add
dec
xchg
movsb
lock
repz
repnz
mov
mov
sub
into
mov
push
rcrb
xchg
mov
xchg
mov
push
repnz
sub
aas
lret
fs
lret
in
mov
andl
stos
jnp
push
push
jo
pusha
faddp
lret
push
sbb
sarl
negb
and
add
lcall
pop
stos
mov
dec
mov
test
mov
cltd
int
pop
iret
pop
cs
movsl
push
out
mov
lcall
fdivrs
xorl
sub
popf
add
adc
and
sbb
loop
ja
mov
notl
push
roll
cmpsb
imul
fidivrs
jns
outsl
lds
push
push
hlt
jmp
xchg
adc
test
pop
pop
push
subb
rolb
push
or
xor
mov
popf
add
fimuls
repnz
xor
push
sbb
inc
pop
fwait
xchg
cmp
ljmp
xchg
mov
adcb
xlat
push
pop
fldcw
je
cld
nop
jns
and
aas
sub
cmp
data16
adc
mov
test
push
test
out
jg
in
jle
dec
test
idivl
mov
push
push
psubd
cmc
fdiv
aas
cmp
pop
push
js
and
outsb
das
pushf
cmpsb
das
lods
pop
loopne
push
test
lea
pop
inc
xorl
cmp
add
or
xchg
lea
mov
push
pop
or
addb
and
int3
shrb
js
add
ljmp
adc
mov
je
ds
int
repz
sarl
and
push
sub
shlb
loopne
shll
loop
sahf
loopne
mov
mov
rol
push
idivl
or
mov
scas
push
dec
les
in
push
jge
cmpsb
pop
repz
hlt
pop
xlat
mov
ret
pop
mov
mov
mov
sbb
sahf
mov
int3
jne
cltd
jnp
dec
imul
addr16
std
fistps
in
pop
js
pop
mov
sahf
add
xchg
lods
mov
and
or
and
pop
cmp
cld
mov
gs
ljmp
mov
mov
inc
js
inc
lods
mov
mov
in
xor
test
mov
sbb
mov
cmp
fwait
sbb
repz
xchg
sbbb
mov
cli
aam
push
inc
inc
xchg
xorb
push
xor
lods
adc
adc
pop
mov
mov
push
or
and
mov
cmpsl
cltd
hlt
inc
in
sbb
xor
imul
mov
test
adc
pop
nop
xchg
dec
je
inc
push
fisttps
das
pop
jg
mov
fdivrs
and
jl
clc
push
push
jnp
push
push
inc
cmp
into
jl
jecxz
inc
pop
into
aam
outsl
aas
mov
pop
fcompl
in
movsb
adc
shrb
jl
xchg
les
clc
mov
inc
mov
sbb
cmpsl
jmp
cmp
ficoms
dec
popf
mov
add
sub
xor
jb
dec
xorl
xchg
sahf
cld
out
ffree
xor
subl
sub
gs
inc
addl
add
mov
cli
jbe
rolb
fwait
pop
cmp
pop
dec
cmp
xchg
jmp
cwtl
pop
xorb
repnz
mov
xor
or
cmpsb
xchg
stc
pop
enter
push
xor
bound
arpl
ret
dec
and
idivb
or
call
int
mov
je
inc
jecxz
shlb
inc
movsb
push
mov
adc
mov
inc
testl
xchg
dec
adc
adc
pop
fistps
setbe
xlat
es
sti
sbb
xchg
mov
push
mov
in
adc
adc
mov
pop
mov
sub
jge
pop
and
fs
or
cmpb
cmp
jp
mov
or
movd
into
scas
leave
and
scas
cmp
test
hlt
popa
loop
subl
fmul
insl
sti
popf
fsubrl
test
dec
push
sahf
fdiv
xchg
or
iret
es
jg
lcall
pop
fwait
mov
jb
test
mov
sub
pop
aas
stc
sti
or
scas
icebp
notb
leave
cmp
xor
mov
fstps
adcb
adc
fmull
mov
inc
cs
cmp
pop
outsl
pop
fucomp
push
sbb
push
mov
int
gs
pusha
push
imul
lods
mov
incb
jo
add
jecxz
and
lods
ret
sbb
push
rorl
setge
inc
xor
andb
inc
inc
pop
faddl
sbb
mov
bound
xchg
fld
outsb
mov
stc
pop
push
xor
xlat
and
sahf
cmp
pop
cmp
push
outsl
xchg
push
pop
xor
push
jo
and
lret
in
and
push
test
int3
or
cmp
loope
ret
ljmp
add
inc
bound
icebp
jne
ja
mov
lock
pop
add
jecxz
outsb
pop
pop
sbb
mov
jl
jae
xchg
jo
cmp
in
rol
xchg
in
data16
in
and
test
popf
jle
push
fiaddl
rorb
into
pop
and
lret
js
icebp
mov
fiaddl
into
xchg
mov
push
xchg
sbb
icebp
add
pop
or
sbbl
fstpt
pop
test
push
xchg
repnz
sbb
dec
jg
jo
pop
adc
test
push
daa
cmovg
dec
xor
cltd
clc
out
test
mov
sbb
pop
iret
aas
orb
push
push
and
inc
arpl
sti
push
push
mov
in
rep
pop
dec
inc
mov
dec
repnz
push
int3
mov
fs
jno
xchg
mull
mov
or
iret
dec
pop
sti
sbbl
in
push
bound
push
out
add
scas
jmp
fs
jmp
pop
xchg
inc
mov
pop
popa
addr16
add
cmp
out
out
and
xchg
add
lahf
add
xor
mov
lret
pop
fldcw
inc
int
adc
push
mov
lods
sbb
dec
sbb
stos
jecxz
inc
ja
sbb
dec
push
jb
lock
jle
test
aaa
cmp
sbb
cli
xchg
scas
test
test
pop
insl
jle
das
xchg
andl
xor
pop
sub
jb
cmp
mov
fcoms
sub
xchg
test
lret
pop
rolb
pop
notl
sbb
xor
xchg
jp
inc
movsl
mov
cmc
rcll
test
aam
mov
pop
cli
cmp
jnp
lcall
cmp
push
and
cs
popf
insl
sbb
mov
lock
dec
bound
mov
dec
repnz
jo
mov
mov
xchg
add
sub
test
gs
jbe
pop
push
xchg
push
inc
jp
cmpsb
push
adc
xor
xchg
gs
aaa
push
test
xchg
lock
jno
jae
cwtl
notl
icebp
shrl
rcrb
inc
mov
dec
mov
xchg
or
repnz
mov
or
sbb
clc
into
cmp
push
lret
mov
mov
ja
xchg
das
ja
push
mov
xchg
dec
xor
bound
xor
imul
fidivs
inc
push
in
mov
push
xchg
sub
insl
cmp
fdivr
mov
xchg
gs
sub
arpl
push
and
mov
dec
or
sub
out
jno
dec
add
sti
les
movsb
in
xor
movsb
call
js
sbb
xor
or
pop
xor
adc
jg
bound
jg
out
cmpsl
lahf
aad
and
pop
add
pop
stc
xor
cltd
gs
les
adc
pop
sti
je
mov
int
call
shll
mov
loope
mov
or
cs
mov
fmulp
loop
or
pop
js
fsubs
les
daa
add
or
cmp
shlb
jle
sbb
scas
insl
xchg
out
sub
cltd
movsl
cwtl
dec
push
pop
ss
inc
outsl
bndldx
dec
mov
jmp
sbb
je
and
cld
flds
mov
testl
sub
jle
or
xchg
jmp
outsl
sub
inc
mov
call
mov
xor
xor
dec
lock
mov
adc
dec
popa
stos
negl
stc
sub
iret
jnp
inc
inc
mov
xor
loope
out
sbb
mov
es
les
jp
in
or
adc
enter
cmp
adc
iret
cs
mov
inc
cmpsl
cmp
je
push
std
aad
adc
jnp
inc
sub
cmc
xor
lods
xchg
push
dec
lcall
lahf
push
xchg
cmpsb
ss
inc
dec
fstpt
lret
inc
enter
fwait
leave
div
test
fldz
ror
enter
out
cmpsb
aad
mov
dec
insl
mov
sahf
xchg
scas
mov
int
stc
mov
adc
mov
or
fdivl
cmc
loop
rcl
sub
adc
adc
cmc
dec
add
loop
sbbb
arpl
std
insl
inc
ficomps
jge
mov
xchg
scas
jmp
inc
fstl
dec
inc
or
into
ss
pushf
add
addr16
rorl
lret
mov
push
imul
mov
fcoms
or
jo
push
loopne
insb
jg
and
jg
mov
jecxz
scas
mov
or
adc
push
out
int
push
push
mov
in
movsl
cmpsb
mov
outsb
hlt
and
int
std
aad
dec
test
mov
insl
dec
xor
push
adc
mov
cmpsl
sbb
in
filds
mov
mov
ljmp
sub
xor
addr16
stc
mov
sahf
sahf
mov
sub
mov
std
add
std
aam
ror
mov
xor
jl
adc
mov
jae
cmp
jns
jns
sbb
mov
adc
cmc
fnsave
cltd
inc
add
xchg
sub
lock
pandn
scas
adc
in
scas
jns
mov
lea
push
sti
cmp
mov
jno
cltd
movsb
inc
dec
fcompl
in
int
fldl
outsl
sbb
mov
add
scas
out
loopne
bound
sahf
mov
sbb
rorl
cmp
jmp
les
or
adc
call
or
arpl
sub
jae
mov
shll
mov
mov
movsb
sbb
sbb
and
lret
mov
in
loop
std
test
sub
push
jg
mov
sub
mov
or
pop
je
pop
inc
inc
mov
dec
loop
and
mov
cwtl
push
mov
fdivs
sbb
dec
sub
jne
lods
movl
xchg
repnz
sub
or
xchg
ss
mov
dec
mov
icebp
mov
pop
les
jno
mov
cwtl
push
fmull
adc
mov
fs
sbb
jge
insl
or
mov
stos
aad
jns,pn
adcl
push
inc
sbbl
clc
or
mov
ret
inc
mov
subb
shrb
sbb
pusha
js
dec
lods
aam
add
or
ss
int
adc
cmp
insb
xchg
mov
out
cs
mov
mov
lock
fnstenv
cmpsb
fnstcw
mov
mov
and
pop
cli
popl
mov
lahf
xor
cmpsb
jae
xchg
imul
and
jp
lahf
pop
sbbb
fdivl
cmp
fs
sub
lock
xor
jnp
sbb
xor
push
mov
rclb
mov
adc
outsl
adc
packsswb
iret
lds
add
jmp
fld
push
and
push
dec
mov
cli
mov
sub
iret
rcrb
dec
push
popa
push
js
xor
inc
stos
sub
and
js
pop
adc
inc
int
shrb
inc
xchg
sub
xchg
push
add
dec
loop
lahf
in
test
jne
jg
xchg
pop
or
rol
sbb
lcall
jle
loope
lods
popa
jecxz
cmpsb
mov
std
pop
pop
push
out
xchg
in
outsl
loopne
shrb
mov
in
xchg
mov
sarl
lods
jg
pop
fdivs
mov
or
cmc
push
and
mov
or
sub
add
in
dec
addr16
cmpb
aad
sbb
loope
jmp
push
sub
int3
aaa
mov
stos
leave
cmpl
not
mov
aad
cmpsb
dec
mov
jp
ffreep
mov
cmp
ficomps
shlb
scas
xchg
aaa
jge
cltd
cmp
sub
iret
test
xchg
orb
dec
mov
insb
shlb
js
mov
insb
aad
bound
jle
pop
mov
mov
push
outsl
inc
icebp
cltd
in
push
popa
xchg
push
inc
inc
jo
inc
popf
repnz
mov
jmp
push
hlt
add
in
jae
add
push
pop
push
push
mov
cmpsb
push
mov
aad
xor
out
xchg
js
push
ja
xor
lods
mov
aas
aaa
mov
jo
mov
pop
xor
clc
aas
ds
js
jo
js
dec
sub
sub
test
mov
lret
call
ljmp
cwtl
sbbb
xlat
shl
sub
fs
pop
dec
sub
hlt
notl
outsb
fisubl
mov
and
pop
jmp
jge
mov
fstl
cwtl
cmpsb
pop
mov
popa
sbb
jno
mov
std
ds
sub
popf
inc
das
mov
in
aas
inc
movsl
adc
shl
sbb
jae
adc
push
inc
jb
loopne,pn
jne
test
xchg
pop
rol
mov
test
jmp
ss
cmpsb
ljmp
inc
cmp
xchg
aad
lret
push
in
sbb
pop
mov
add
out
fwait
and
ret
xchg
cmp
sbbl
jb
test
dec
repz
cld
and
insl
sti
insl
and
mov
mov
inc
xchg
xlat
jge
xchg
jecxz
test
add
aad
push
or
sub
mov
mov
sbb
pop
mov
cmp
xchg
dec
push
adc
inc
add
fbld
lretw
inc
cs
fstl
jp
lods
xor
loope
cmp
adc
xchg
sbb
faddp
jns
mov
xchg
popf
outsb
fmuls
rcll
inc
pushf
gs
jecxz
decl
jo
arpl
pop
insb
in
icebp
jnp
fwait
or
mov
outsb
jge
inc
push
in
push
aaa
sarb
cmp
inc
sbb
jmp
fistl
ret
push
push
lcall
pop
or
push
insl
mov
rcl
aaa
fisubrs
xor
adc
nop
fucomip
jp
cmp
sti
es
mov
or
and
mov
xchg
or
lahf
sub
inc
test
lds
and
ljmp
daa
ret
testb
xchg
and
jp
pop
lock
sbb
xlat
jbe
cmp
xchg
sbb
cmp
clc
ss
in
out
xor
jbe
arpl
lea
leave
jno
add
popf
and
mov
pusha
mov
pop
sub
cld
cltd
jo
int3
push
dec
push
push
adc
cwtl
jge
mov
cmp
inc
or
rclb
jne
push
lahf
adc
pop
or
sbb
mov
inc
mov
sbb
in
inc
andb
push
sti
sbb
cld
cmp
mov
sub
xor
sub
imul
loop
mov
inc
hlt
adc
pop
lds
divb
add
jb
aas
pop
adc
pop
mov
out
outsl
fidivl
or
ljmp
pop
mov
or
mov
int3
movl
add
cmovo
imul
inc
mov
jg
shrb
ds
add
rcrb
std
aas
shll
add
dec
mov
daa
xlat
lock
repz
jns
fisttpl
adc
sbb
sbb
in
mov
addr16
cmp
lret
lods
ficoms
xchg
jge
mov
lds
inc
mov
pop
stos
or
xor
test
ds
pop
out
ret
and
or
add
xor
jno
or
loop
icebp
jae
addr16
add
mov
fsubs
outsl
out
sbb
adc
decl
pop
inc
inc
sbbl
in
punpckldq
sub
loopne
pop
inc
mov
jle
mov
jge
into
mov
xchg
push
in
roll
insb
sti
rcll
push
aam
imul
cwtl
lock
pop
push
lods
dec
fmuls
or
or
dec
es
lcall
push
dec
jg
adc
shr
sbb
stos
bound
and
xchg
inc
cli
sbb
sahf
fwait
mov
inc
jbe
or
add
pushf
jne
cmp
mov
sub
mov
lock
jae
cmc
pop
sarl
rolb
lods
aaa
cmpsl
lea
mov
push
xchg
pop
push
int3
popa
mov
aam
xchg
cmp
and
jb
lahf
stos
pop
xlat
test
leave
xchg
loop
push
push
push
push
xor
or
jnp
cmp
fnstenv
stos
sub
clc
xor
pop
inc
test
pop
cmp
adc
pop
pop
popa
lret
insl
test
add
leave
lock
fyl2x
xchg
dec
jae
xchg
out
add
dec
mov
mov
mov
and
sbb
adc
xlat
push
xchg
or
or
inc
sbb
repnz
adc
ja
push
insb
mov
mov
bound
test
add
ds
or
push
jmp
sbb
pop
mov
cs
jns
xchg
movsl
fimuls
inc
sti
mov
push
mov
shll
cs
ret
mov
cltd
pop
imul
call
test
cmovl
testb
add
cmp
cmp
pop
ljmp
and
adc
outsl
cld
push
fwait
sub
out
ljmp
mov
xchg
or
call
push
outsl
mov
sub
cmp
and
pop
add
or
cmp
or
and
es
insb
sub
adc
cmp
jl
decb
jg
cmc
pusha
movsb
mov
xor
add
sub
in
push
jmp
orb
jecxz
xor
push
mov
testb
hlt
shrl
or
and
insb
push
outsb
shrb
pushf
and
xor
or
iret
jg
test
and
adc
sub
and
incl
loopne
stos
mov
fcompl
inc
add
lcall
inc
jg
dec
repnz
es
xchg
ds
gs
shrb
je
popf
mov
shl
push
jl
mov
out
into
xchg
leave
addl
adc
pop
int3
movsl
pop
fwait
inc
out
dec
insb
cmp
mov
fildll
adcb
lods
sub
pop
adcb
sub
push
cmc
lret
test
inc
jge
push
xchg
mov
loopne
jns
ret
repnz
jg
adc
lock
xlat
add
or
xchg
clc
or
inc
std
inc
sbb
cmp
cmpsl
sub
lret
cmp
out
cltd
out
cmp
jo
dec
sbb
mov
leave
add
mov
push
stos
inc
xor
jae
test
jecxz
mov
adc
or
xlat
out
pop
push
jo
lea
xor
cmc
pop
or
mov
push
lcall
and
repnz
pop
or
pop
cli
inc
push
jmp
shlb
in
pop
fstpt
stc
add
hlt
push
out
sub
mov
adc
je
ret
int
addr16
pop
lock
inc
out
xor
sub
imul
lcall
sbb
push
pop
pop
jg
aam
fnstenv
scas
je
jg
xchg
cmp
test
lods
adcb
rol
cs
push
movsl
mov
pop
test
xchg
pusha
call
repz
sub
in
out
sbbl
in
cmp
int
xor
add
add
xchg
push
out
adcb
setbe
ret
sbb
roll
sbbl
add
cmpb
sub
add
bound
xor
insb
ds
test
adc
inc
dec
leave
movsb
pop
and
cs
mov
call
push
adc
into
or
inc
pop
xchg
jo
xchg
shr
outsl
or
lcall
addb
rcrl
pop
push
add
cmc
and
sub
iret
es
adc
iret
popa
push
xchg
push
push
cmc
pop
xor
or
dec
xchg
stos
jmp
cltd
insl
and
xchg
cmp
inc
xchg
sbb
test
push
inc
sti
adc
and
jecxz
jl
lea
mov
cmpsl
push
and
dec
ljmp
cmp
add
jp
push
fcmovnb
xor
imul
sub
add
xor
in
scas
sti
add
aam
jp
jcxz
aad
fldcw
xor
imul
push
movsb
lea
cmc
jmp
dec
add
mov
push
repz
daa
ret
mov
fnstcw
mov
outsb
out
lahf
movsl
xor
mov
push
cmpsb
pop
sbb
enter
dec
rcll
or
hlt
aaa
jge
xor
add
push
lods
jo
or
lds
fcom
mov
adc
lahf
sbb
clc
stos
mov
aas
sbb
xchg
insl
dec
int
arpl
js
add
insb
lea
jns
das
lret
pop
sbb
outsl
ret
shlb
shl
es
leave
jle
stos
test
sub
dec
mov
jb
fsubrl
imul
xchg
mov
mov
adc
ss
add
mov
loopne
or
repz
push
and
pusha
mov
int3
xor
jmp
sub
insb
and
sub
inc
jl
add
xchg
and
and
dec
mov
sarl
orl
mov
movsl
cmp
int
leave
sbb
mov
das
aas
or
and
inc
add
jb
jno
leavew
add
pop
outsb
test
jecxz
pop
xor
icebp
sbb
mov
inc
mov
jmp
sarb
roll
popa
cmp
dec
xchg
outsl
jg
in
xchg
fdivrl
push
loope
popf
xchg
mov
pop
dec
pop
xchg
dec
sbb
cmpsb
scas
ss
scas
mov
das
sub
inc
jle
mov
mov
mov
inc
inc
or
xchg
inc
les
dec
push
jns
sarl
push
sub
in
lea
dec
mov
pushf
lret
lret
scas
jg
shll
push
jl
subl
jl
jl
fisttpll
cli
push
pop
sub
fsubl
adc
insl
ret
push
xchg
and
ret
lds
pusha
loopne
scas
dec
dec
mov
pop
adc
and
movsl
cmp
and
aaa
jmp
xor
nop
in
stos
scas
xor
jge
stc
movsl
jnp
pop
push
jns
ja
dec
testb
adc
xor
xor
ljmp
sub
pop
push
xchg
insl
sbb
stos
mov
pop
mov
sub
loopne
imul
cmp
aam
inc
or
mov
subb
or
pop
scas
sub
pop
pusha
lcall
lea
fldl
adc
pusha
insl
sti
xchg
iret
inc
sbb
sub
pushf
cmp
sti
mov
in
fsin
mov
into
mov
and
imul
adc
leave
sub
add
cli
lahf
pop
push
fdiv
ffreep
mov
add
imul
mov
movsb
push
mov
leave
push
sub
bound
adcb
add
movsl
mov
sarb
cmp
fcoms
inc
sub
adc
dec
ds
fildl
xor
popf
sub
pop
icebp
mov
addb
mov
dec
sub
faddp
cltd
and
mov
add
je
add
mov
dec
aam
pop
lds
or
roll
out
lret
pop
sbb
add
sub
lahf
cli
icebp
fstl
fstps
inc
loope
out
sbb
mov
inc
mov
fstpt
and
and
enter
push
jno
lds
cmp
xchg
or
aas
adc
inc
lcall
sbb
pop
psrlw
scas
cmc
test
aad
test
aas
mov
hlt
add
fs
or
lea
jg
sub
sti
lea
ds
sarb
fs
rcrl
pop
rorl
sub
add
xchg
mov
icebp
push
aam
movhlps
stc
sbb
je
jecxz
adc
sarb
fwait
out
out
fsts
cmpsl
sbb
pusha
rorl
cmp
xor
popa
leave
fisttpll
fs
addr16
ja
loop
loope
sbb
mov
lea
jl
arpl
sbb
outsb
stc
xchg
jo
dec
mov
imul
xor
ljmp
int3
cmc
testl
jbe
adc
fs
lods
std
jnp
dec
andb
sahf
dec
or
ja
mov
ret
pop
jno
and
les
inc
pop
lret
negb
inc
enter
mov
imul
popa
fistpll
mov
orl
jmp
imul
dec
testl
std
cmp
js
loope
cmp
aas
cli
loope
jns
xor
out
movsb
adc
into
xchg
dec
test
or
mov
pop
add
jle
jle
pavgb
cli
xchg
push
aam
mov
ja
repnz
jnp
jno
xor
cmp
popa
jbe
inc
enter
jae
repnz
inc
push
xchg
jmp
enter
daa
xchg
cmpl
push
pusha
add
ss
pop
add
inc
adc
std
test
pop
inc
stos
imul
xchg
xchg
adc
adc
push
stos
test
inc
testb
pop
dec
or
rolb
add
add
popa
imul
andb
stc
leave
inc
sahf
sarl
roll
icebp
pusha
pop
scas
pusha
mov
std
cwtl
push
test
pop
xchg
pop
mov
ss
js
fs
xor
ja
pop
clc
dec
icebp
in
loop
scas
xchg
push
mov
mov
sub
int
adc
hlt
sub
shr
pop
pop
jecxz
dec
aas
jmp
adc
cwtl
adc
in
mov
aam
pop
and
mov
cltd
mov
lods
mov
mov
mov
jnp
clc
and
pop
jo
push
ja
ret
mov
into
dec
lahf
add
sub
jnp
inc
dec
sbb
mov
mov
test
or
sbb
ds
out
outsl
pop
test
out
xor
push
in
push
jg
out
icebp
pushf
cmp
roll
pop
pop
mov
inc
mov
xchg
sbb
sub
ja
orb
mov
pusha
pop
pop
out
push
cwtl
push
stos
cmp
mov
sti
mov
mov
xor
out
ret
push
rorb
cmp
outsb
lock
rclb
sti
mov
mov
lock
sbb
test
mov
scas
mov
xor
push
mov
mov
mov
rcrb
fimull
inc
shrb
outsl
pop
test
in
ss
pop
cwtl
jge
arpl
adc
les
arpl
ret
test
out
and
lret
test
dec
add
adc
lahf
xchg
sbb
add
xchg
pop
faddl
jle
insl
in
ja
pop
fnsetpm(287
push
addr16
mov
int3
cs
mov
xorl
scas
dec
jle
add
cltd
xchg
push
jae
inc
push
adc
xchg
movsb
push
mov
push
insb
jge
loopne
inc
mov
cli
into
xchg
sub
scas
adc
std
insl
xchg
scas
sti
aas
mov
nop
xor
pop
dec
test
out
fs
call
xchg
arpl
mov
pop
push
inc
xchg
push
movsb
mov
repnz
gs
mov
rcll
daa
scas
and
jg
jmp
push
adc
push
fsubl
and
nop
fldcw
int3
jae
outsl
and
out
push
icebp
xor
out
push
arpl
mov
and
insb
add
mov
jmp
aaa
push
add
dec
cmpsl
daa
inc
cmp
or
cld
cs
movsb
pop
xchg
movsb
iret
mov
mov
jns
pop
in
cmp
adc
arpl
rolb
pop
add
fidivrs
call
stos
jl
ud0
sub
or
mov
stos
sub
jnp
dec
in
ret
inc
fiaddl
ljmp
loop
sub
imul
inc
fsubrl
cmpsb
adc
xchg
jo
insl
push
call
xchg
xchg
adc
xor
and
jne
fsub
push
gs
ljmp
mov
fs
mov
pop
adc
insb
jns
jmp
movsb
jbe
es
push
subl
mov
bound
and
xchg
inc
out
push
or
inc
sbb
lock
in
pop
fldl
jp
test
cmp
shl
and
movsl
xchg
mov
jnp
pop
sbb
mov
fnsave
mov
add
ds
jne
push
pop
push
push
mov
cmc
jnp
ss
out
lret
shll
lret
shrl
jle
inc
pop
adc
std
sti
mov
mov
negb
ret
test
mov
out
mov
aam
jns
hlt
jbe
movsl
lret
insl
outsb
inc
pop
xchg
stos
sub
inc
in
xor
pop
into
pushf
in
movsl
xchg
rcll
adc
testl
inc
sbb
adc
aas
shlb
dec
and
pop
mov
dec
add
sti
sub
arpl
mov
lahf
mov
sub
xchg
sbb
push
cmpsl
mov
subl
and
add
int
mov
lcall
addr16
dec
in
sbb
push
adc
and
dec
js
fwait
sahf
push
sti
push
lods
int
insb
in
std
int
mov
je
stos
pop
xchg
mov
pusha
leave
xchg
lret
inc
adc
into
sbb
in
jmp
jne
clc
in
and
leave
mov
popa
dec
nop
xchg
pop
repnz
sub
out
scas
and
int
repnz
or
cltd
fcmovb
xor
ss
jae
mov
addr16
adc
out
adc
dec
in
inc
adc
mov
pop
jnp
sub
mov
inc
inc
nop
lea
cli
imul
sbb
ss
pop
test
push
cmp
enter
mov
mov
inc
or
push
jo
xor
pop
sbb
push
das
jbe
sub
xchg
negl
fwait
cld
orb
stc
push
popf
pop
jne
inc
cld
out
test
mov
mov
ja
sub
or
rorb
leave
into
fildll
cmp
lock
xchg
stos
and
jnp
and
add
mov
xor
pop
test
shlb
outsl
sti
test
nop
mov
test
in
push
leave
sti
setbe
test
loop
daa
jmp
mov
loope
inc
mov
add
rsqrtps
add
push
sbb
nop
imul
and
popa
cmp
stc
mov
mov
pop
and
mov
mov
fmull
xchg
jns
fdivrp
push
mov
cld
test
sub
mov
dec
clc
mov
clc
frstor
ret
insl
mov
mov
shlb
aas
jne
daa
push
and
inc
mov
cmpsb
mov
mov
and
inc
movsb
ret
add
xchg
push
imul
pushf
scas
mov
aas
outsb
fmull
imul
pop
mov
lds
cmp
jl
jmp
ret
aam
jp
mov
popa
call
mov
or
sbb
xchg
out
fwait
jno
push
sahf
les
aaa
dec
mov
cli
fbld
jo
dec
shll
jb
fwait
ja
jle
dec
rcll
fcmovnu
and
sbb
sub
in
shrl
inc
cs
ret
daa
clc
push
sub
jno
fidivrl
pop
cmpsb
jns
mov
xor
mov
fs
xchg
mov
sbb
aaa
mov
xchg
bound
mov
call
cltd
mov
cmp
pop
or
es
pop
cs
shrb
data16
add
cli
dec
push
sahf
lods
xor
ja
push
fldcw
shll
pop
xor
mov
mov
outsb
mov
cmc
in
and
cmp
add
xchg
in
int3
roll
sub
out
ljmp
cs
in
insb
cmp
and
gs
push
subl
stc
push
mov
and
pusha
fwait
sub
loopne
fisttpl
fbstp
fldenv
les
xchg
mov
aad
jge
mov
ret
and
jmp
mov
add
sub
outsl
out
inc
and
packuswb
sbb
aas
in
pop
aaa
mov
mov
fcompl
in
mov
mov
in
xchg
aad
pop
faddp
lods
adc
jg
inc
mov
sub
dec
and
xor
aam
mov
inc
mov
sahf
insl
sbb
int3
ja
js
jo
aaa
xchg
adc
sub
imul
push
adc
pop
xor
es
outsb
popa
les
stc
popf
loope
pop
test
loope
xchg
test
dec
into
imulb
mov
pop
mov
jne
iret
pop
shll
ds
push
sti
push
in
icebp
lcall
imul
paddq
xor
mov
dec
inc
enter
pop
nop
icebp
pop
gs
mov
adc
scas
mov
push
stc
mov
mov
dec
xlat
cmp
or
xchg
cli
lock
fcoms
scas
addr16
fstpt
movsl
and
loopne
push
inc
and
mov
cmp
cmp
or
leave
mov
lahf
into
mov
xlat
dec
push
adc
shlb
adc
lds
sbb
sbb
push
fdivs
mov
iret
iret
ret
test
lret
adc
fidivs
push
jae
iret
mov
cmc
cmp
xlat
pop
sbb
cmpsb
adc
in
ljmp
add
mov
out
movsb
sbb
push
lea
movb
cmpsb
sub
addb
insl
movsb
cmpsl
mov
call
cbtw
subb
and
push
inc
add
mov
and
cmpsb
ret
cmp
cmp
icebp
adc
push
nop
gs
push
xorb
mul
stos
dec
pop
frstor
and
jmp
rclb
orb
out
cltd
xchg
nop
xchg
lods
cld
test
or
cmp
adc
mov
sti
mov
sub
pusha
pop
jle
adc
das
shrb
nop
int3
addr16
and
imul
jle
lret
mov
cmp
adc
pop
fistpll
sub
lea
aaa
cwtl
lds
and
ret
adc
cmp
jl
jge
xchg
xor
int3
sub
sbb
fcmovnb
push
add
or
sarb
int3
dec
daa
sbb
aad
sub
test
xchg
mov
mov
pushf
add
les
sbbl
repz
sub
pusha
xor
dec
cmp
lods
cmp
into
sub
cmpsb
mov
lret
fisttpl
sub
inc
mov
jmp
xchg
jmp
push
xlat
inc
jecxz
sub
mov
imul
mov
jns
xchg
loopne
out
icebp
or
xchg
dec
subb
hlt
mov
je
inc
push
pushl
jae
mov
jp
fists
inc
jnp
mov
pop
or
mov
xor
lcall
jl
xchg
shl
xlat
adc
jno
fdivrl
cwtl
jbe
mov
enter
xor
mov
push
icebp
test
pop
outsl
and
cltd
xor
cmp
jmp
sub
sub
and
mov
call
cli
cltd
sub
shll
push
xor
inc
bound
shrl
sbb
mov
adc
cmp
int3
sub
jmp
ja
add
repz
mov
shlb
pop
cmc
xchg
rorb
mov
das
js
daa
pop
add
jo
sub
mov
mov
mov
shrl
fisttpll
adc
js
mov
shl
dec
in
sub
adc
inc
stos
mov
in
mov
xor
fcomp
jge
or
mov
or
sbb
mov
mov
sbb
int
mov
scas
mov
push
dec
pop
rclb
int3
repz
out
lods
int
mov
cmp
sub
mov
jns
sub
subl
inc
and
repz
outsb
fildl
adc
incb
shr
mov
sahf
xchg
pop
ja
jecxz
adcb
rcl
or
data16
ret
sub
and
inc
aam
subl
xchg
add
push
lds
adc
fistpll
and
and
sbb
enter
je
add
loope
adc
in
mov
xchg
lods
cmp
out
add
xchg
inc
inc
and
jmp
nop
dec
mov
mov
pop
iret
add
fs
xor
sub
push
aad
popf
arpl
popf
jne
xchg
sbb
test
cmp
ret
pop
enter
add
add
es
out
movsl
movsb
test
add
inc
dec
pop
in
pop
call
popf
jae
xchg
insl
cli
aad
loopne
xlat
mov
sti
mov
add
push
mov
sbb
or
lret
adc
sbb
repz
push
dec
mov
movsl
mov
hlt
not
imul
push
jns
sbb
mov
dec
push
adc
xor
adc
fst
sbb
adc
loopne
pop
pop
inc
push
aas
inc
dec
inc
dec
popl
xlat
or
or
aaa
cmp
cmp
and
pop
arpl
mov
jl
inc
adc
loop
lret
out
cmp
out
inc
mov
iret
cmp
jg
test
pop
push
lods
outsb
loope
flds
xchg
loope
cmp
clc
loope
xchg
pop
int3
cmp
adc
and
mov
cmp
out
mov
add
mov
fldt
jle
icebp
jl
mov
scas
and
fs
pop
mov
lret
int3
pop
ja
cmpl
loopne
xchg
dec
add
pushf
add
adc
xchg
jno
shl
xchg
imul
icebp
mov
mov
pop
sub
sub
push
inc
loop
dec
movsb
aaa
xchg
adc
dec
insl
mov
sti
or
shll
jp
dec
out
lret
call
movsl
ds
out
mov
jae
adc
sub
lret
sahf
repnz
jnp
push
add
lock
mov
adc
pushf
aam
xlat
cli
shr
and
xor
test
iret
sbb
data16
aas
mov
mov
xor
dec
sahf
lods
test
pop
xor
mov
out
mov
or
fst
into
popf
xchg
roll
pop
add
sbb
inc
ljmp
fs
mov
push
fwait
push
mov
add
mov
in
cli
and
lea
cs
nop
addb
dec
dec
aas
dec
test
cmp
sahf
and
ficoms
jl
xchg
add
test
mov
push
push
mov
or
ret
imul
mov
insl
push
cltd
jge
inc
push
sub
cmp
out
scas
pushf
pop
mov
push
mov
stos
sar
xchg
aad
test
jp
fiadds
inc
leave
push
repz
mov
mov
sub
inc
rcll
adc
push
adc
imul
xchg
gs
or
mov
xor
mov
pop
xchg
scas
dec
je
aam
jmp
mov
andl
inc
dec
out
scas
ss
push
sub
lahf
push
mov
push
lea
sbb
xchg
mov
aaa
add
add
cmp
insb
lds
dec
dec
or
push
loope
push
push
jle
ret
mov
cmp
ficoml
sti
cld
fdivs
inc
in
jmp
lock
mov
push
mov
hlt
cmp
sbb
xchg
stc
jmp
shlb
es
lods
notl
adc
push
xlat
push
push
inc
or
insl
imul
mov
cmpl
imul
cmp
inc
stos
stos
cmp
jmp
dec
jp
punpckhdq
cmp
clc
sbb
inc
out
js
in
out
cmp
cmp
jo
cmc
pop
mov
dec
pop
jge
sbb
jp
aas
out
pop
or
jl
pop
ljmp
xchg
jb
and
insb
jl
sub
mov
xchg
mov
inc
jg
sbb
dec
mov
fcmovnb
jge
out
out
aam
nop
stos
rcrl
xchg
xlat
adc
std
aam
ljmp
or
jle
fisttpll
add
jmp
sub
lods
negb
mov
inc
push
push
call
push
addr16
push
cmpsl
add
xchg
pop
leave
xchg
or
pop
mov
xor
mov
gs
push
pop
push
dec
in
addl
jg
jnp
mov
xor
hlt
test
out
movsb
sub
sub
xchg
test
xchg
insl
int3
lret
sbb
jle
cwtl
push
sarl
add
xor
dec
sub
add
aad
repz
fsts
andl
jbe
test
pop
inc
xor
fidivl
mov
sbb
sbb
icebp
push
lds
imul
mov
pusha
je
and
sub
shrb
jmp
imul
scas
xor
call
cmp
hlt
xchg
lahf
lock
adc
xor
and
lock
or
stos
xor
sub
jecxz
mov
mov
int3
pop
sub
mov
lahf
testl
mov
mov
jo
sbb
pop
fidivs
sub
jp
js
loope
sbb
nop
test
es
xchg
jle
inc
pop
movl
or
lods
mov
andl
test
add
add
push
mov
and
dec
xchg
out
ss
mov
mov
cmp
push
mov
mov
adc
sarl
incb
shl
xor
in
jg
add
cltd
add
lcall
test
pusha
jmp
fwait
sarb
aad
push
scas
xchg
sub
lret
inc
and
mov
xchg
cld
ret
inc
jbe
clc
cld
push
imul
out
arpl
push
inc
cmp
data16
cmpsl
push
movl
inc
mov
cltd
testb
enter
dec
mov
jae
or
lea
push
and
shll
outsl
or
pop
pop
stc
or
test
push
cmp
cli
mov
pop
push
ja
pop
add
cmp
loope
imul
jns
lcall
test
xor
xor
jo
adc
push
jp
fs
je
stos
jbe
jno
add
cmpsl
ja
out
add
andl
and
iret
push
add
inc
shr
hlt
jecxz
inc
jecxz
and
in
lahf
in
xorl
mov
icebp
jnp
stos
dec
popa
insl
xchg
repnz
mov
adc
and
inc
orps
sbb
or
cmp
lock
jbe
sub
sti
leave
addr16
jbe
and
ja
cmovp
loop
stc
pusha
mov
nop
mov
mov
lahf
mov
rcll
mov
push
paddsb
cli
jp
lods
sbb
sub
mov
inc
rcrl
inc
pushf
cmpsb
lods
jmp
adc
pop
sbb
push
loope
mov
add
iret
pop
imul
ret
pop
lret
cmp
jmp
push
mov
addr16
neg
les
pop
lock
push
cld
das
hlt
and
mov
sti
pop
cmpsb
ljmp
push
xor
rorl
ss
mov
dec
mov
addr16
jo
sub
lock
mov
pusha
xchg
pop
sub
jmp
mov
add
cmp
mov
sub
in
xchg
inc
xchg
testb
mov
mov
xchg
add
shrb
mov
js
cmc
mov
es
sbb
mov
fwait
add
sub
mov
mov
repnz
mov
mov
adc
lret
sub
push
sub
cltd
xchg
or
test
out
inc
test
adc
jecxz
fists
idivb
not
dec
jle
daa
repnz
sbb
mov
insl
mov
push
loopne
xor
inc
adc
rol
rclb
int
or
int3
adc
clc
jno
mov
fidivs
cld
jmp
je
mov
shl
mov
mov
aaa
cmpsl
sbb
cmc
push
mov
pop
add
xor
mov
push
jl
xor
add
inc
sbb
and
mov
pusha
push
sbb
sbb
add
das
mov
dec
out
xlat
xor
fs
imul
mov
inc
pop
movsb
mov
out
xchg
pop
into
xchg
xor
xchg
dec
and
push
push
mov
jl
cmpsl
imul
mov
aam
fwait
push
pop
cmp
shrb
fcomi
xor
aaa
sbb
data16
pop
mov
push
sahf
bound
xrelease
mov
inc
fldpi
ljmp
mov
repz
dec
dec
jp
cmp
or
xchg
xchg
push
mov
insl
mov
repnz
andl
sbb
fcmovnu
xchg
imul
test
fidivl
adc
mov
mov
hlt
add
mov
xchg
test
or
leave
aas
xchg
lock
stos
jg
mov
pushf
jle
dec
sbb
cmp
mov
xchg
and
in
adc
fs
enter
jno
sbb
inc
mov
xchg
xchg
push
mov
les
adc
inc
outsb
inc
lds
and
mov
lods
rorl
cmp
dec
pop
xor
insl
insl
cs
xchg
hlt
add
repz
push
cmp
add
push
adc
pop
imul
fs
call
ljmp
cmp
cli
add
loopne
testb
iret
push
popf
ret
mov
push
cmp
xchg
or
lds
xchg
repz
leave
ljmp
jne
pop
pop
dec
loope
popf
fs
inc
mov
loope
cmp
movsl
pop
scas
add
jnp
mov
fnsave
ja
ja
test
add
addr16
push
sti
mov
mov
js
add
movl
and
dec
push
mov
push
sub
sub
cmp
add
scas
jg
xchg
and
inc
inc
loopne
jl
fisttpll
jl
cmp
pop
dec
sbb
jno
add
mov
stc
shlb
cwtl
inc
ss
dec
inc
das
add
jp
dec
add
push
inc
mov
mov
jg
sub
stos
js
mov
insl
int3
aaa
mov
jp
dec
rcll
xlat
add
insb
popf
das
add
lock
mov
in
or
cli
icebp
bound
data16
lret
mull
mov
jp
add
inc
jns
cmp
or
sti
pop
iret
ficoms
popf
mov
cld
cmp
lods
lea
mov
bound
rol
ja
mov
outsl
ds
sub
xchg
out
enter
jno
sahf
mov
xchg
lret
repnz
mov
inc
popa
cmp
push
je
jne
loop
ss
out
imul
fstpl
or
outsl
fs
cmpsl
mov
xlat
pop
lret
sbb
ja
enter
out
adc
jno
sbb
xchg
xchg
or
jp
mov
popa
lahf
inc
xchg
movsl
mov
fdiv
pop
push
lds
and
or
in
inc
nop
inc
bound
mov
dec
test
adc
aad
aam
repz
faddl
cli
cs
test
out
adc
mov
and
mov
jne
jmp
es
and
mov
data16
fisubrs
leave
lods
fimuls
stc
cltd
aaa
adc
xor
jmp
mov
je
test
outsb
mov
je
or
jmp
cmpsl
fstl
lock
outsb
sub
scas
fmull
in
sbb
sub
roll
jecxz
stos
push
push
xor
pop
cmp
ljmp
decb
inc
pop
ss
adc
push
jle
cwtl
mov
jp
add
sub
ret
cmpsb
es
inc
lock
into
enter
xlat
cltd
aaa
int3
subb
push
push
insb
shrl
into
push
insl
mov
repz
ja
ss
cli
jno
lods
mov
adc
xchg
popf
jmp
scas
push
rcl
pusha
xor
mov
iret
pop
push
inc
adc
imul
mov
dec
out
fwait
xchg
push
sar
mov
jae
dec
xor
stc
mov
push
push
cmp
ficoms
mov
sbb
sub
cmp
mov
dec
fmul
add
jno
outsb
jno
lock
sub
addb
iret
dec
int3
cmpsl
test
mov
push
lock
add
add
cs
mov
fists
add
sarb
cwtl
and
and
push
xlat
in
shlb
pop
sahf
sbb
sub
jns
test
and
pop
notl
ljmp
out
xchg
xor
loope
lock
loope
loop
mov
jge
outsb
cmpsb
mov
out
lret
jg
jnp
orb
dec
test
fistps
pop
inc
jae
jmp
gs
loope
rcrb
mov
sahf
loope
push
fldenv
test
pop
dec
dec
xorb
rolb
xor
out
roll
push
xor
test
xchg
or
hlt
fnstenv
leave
fistps
jl
ja
jg
dec
lret
roll
sbb
aad
mov
push
mov
fwait
sahf
divl
sub
pop
enter
xor
pop
test
and
jb
xchg
dec
sbb
adc
rorl
xor
in
les
sub
jnp
jecxz
test
push
mov
and
imul
and
lret
mov
pop
push
outsb
jns
cmp
lods
mov
cs
mov
push
cmp
pop
fwait
es
mov
pusha
pop
xchg
ds
xchg
or
jg
push
xor
repz
adc
mov
adc
xchg
mov
mov
jne
pop
ss
jle
insl
cmp
stos
sahf
push
rcrb
out
cli
xchg
pusha
sbb
xor
nop
out
or
push
or
xorb
lods
jo
fwait
xor
dec
inc
aas
mov
mov
sti
dec
and
movl
sub
rcrb
shll
je
int3
sarl
imul
dec
cltd
popa
jge
or
mov
dec
pop
pop
push
into
jmp
ret
and
outsl
sahf
mov
cli
adc
fisubl
repnz
les
lahf
stos
ja
sbb
js
imul
adc
jl
outsl
pop
loopne
cwtl
or
movsb
inc
mov
call
fistps
jns
sti
jno,pn
loopne
xor
fadds
js
push
mov
sar
fcoml
sub
daa
push
jmp
push
mov
mov
das
push
ss
push
movsl
jmp
sub
add
xorb
xchg
nop
cmp
lret
std
lahf
inc
mov
adcb
repnz
lock
dec
fmull
mov
pop
pop
xor
inc
xchg
aam
mov
lret
mov
or
adc
ljmp
cmp
lret
into
in
inc
lods
sub
aas
imul
xchg
stc
loope
fwait
je
sub
dec
inc
sbb
lret
lods
fnstsw
cmp
mov
lcall
push
mov
lods
jb
mov
mov
mov
daa
cld
jp
dec
repnz
orb
lret
lods
fldt
mov
sbb
out
clc
jno
mov
inc
jns
and
and
out
inc
push
lahf
pop
daa
pop
pop
inc
jecxz
mov
xchg
jp
ret
xor
fwait
dec
mov
jbe
mov
das
mov
mov
mov
int
pminsw
insb
loop
jl
cmp
out
or
lcall
mov
mov
lods
inc
cmp
insb
in
inc
outsb
ds
mov
pop
lcall
inc
mul
xor
dec
fsub
into
push
mov
inc
scas
mov
sbb
cmp
xchg
and
mov
lret
iret
lret
lds
cmovp
leave
shrl
rcl
jp
push
icebp
aad
scas
mov
and
je
jbe
xor
addr16
inc
jne
add
jo
xchg
xor
xor
aaa
pop
jo
outsl
scas
in
inc
lods
inc
mov
push
xlat
mov
outsb
addb
fs
adc
inc
fidivs
aas
inc
cmp
movsl
clc
in
and
jae
in
and
dec
arpl
xchg
push
sarl
jne
pushf
incl
dec
aas
cmp
shr
fstp
hlt
cmpsb
mov
mov
dec
xor
sub
xor
jbe
lahf
dec
cwtl
lods
cmp
stos
sub
pushf
lahf
jmp
ret
ret
mov
push
and
mov
pushf
pop
and
movsl
sbb
and
hlt
addb
sub
lods
aad
fisubrs
pop
cmpsl
cltd
and
mov
aaa
enter
jne
outsb
fcomi
or
cmp
outsl
push
xor
sti
das
scas
inc
cltd
test
mov
ss
mov
outsl
mov
mov
cmpsl
cltd
sub
pop
aad
std
and
cmp
outsl
out
cmp
xchg
pushf
cmp
jno
icebp
test
dec
pop
leave
cld
jge
sub
or
add
sahf
int3
push
fcoml
cmc
vpcmpgtb
jp
dec
ret
or
push
mov
adc
aaa
adc
imul
mov
sarl
sti
loopne
push
repz
push
jne
in
imul
insl
movsb
and
push
xor
push
mov
mov
cmp
jle
adc
inc
testb
and
add
adc
pop
add
push
mov
adc
lret
dec
pop
pop
mov
sbb
fisttpl
mov
cmp
popa
andl
pop
sbb
add
daa
dec
imul
lahf
sub
xchg
cmp
mov
popf
stc
xor
pop
cmp
push
sub
add
stos
cli
adc
out
fst
lcall
mov
ja
outsb
pop
inc
cmp
shll
push
scas
dec
popf
das
hlt
fiadds
mov
or
lds
xor
mov
scas
mull
scas
adc
and
ljmp
pop
mov
dec
lods
ljmp
lcall
inc
in
sub
jo
cmp
es
push
push
inc
jno
dec
ja
xchg
mov
mov
dec
sub
jns
sub
pop
bound
mov
and
jge
push
push
cmc
mov
push
cwtl
xchg
cmp
cwtl
out
push
dec
cmp
sub
xor
mov
movups
and
mov
orb
jp
rcrl
mov
inc
dec
and
mov
lock
mov
push
sbb
push
cmp
js
jge
int3
stc
jnp
add
mov
adc
cld
inc
in
lea
inc
inc
mov
mov
mov
loope
repnz
cmovne
cmpsl
push
out
cmp
in
cmpsl
xor
push
out
pop
shrb
js
out
sub
adc
push
shlb
push
mov
in
inc
nop
add
aaa
sub
adc
add
jle
jb
rcrb
lock
jne
mov
pop
jbe
mov
leave
cmp
cmc
add
lret
cltd
call
aas
adc
xchg
jb
pop
add
aad
and
mov
cmc
shl
mov
aam
test
loopne
add
push
lcall
iret
jno
jae
cli
aam
out
imul
mov
mov
lcall
add
es
into
and
ds
fstps
data16
xor
sbb
fdivl
aam
pop
mov
into
in
mov
movb
aas
mov
inc
ror
and
stos
mov
into
sub
jbe
xchg
bound
jno
jno
inc
adc
pop
loope
push
and
cmc
jmp
out
and
ret
add
mov
mov
xchg
xlat
inc
arpl
iret
inc
loopne
pop
mov
pop
cmpsl
pause
jmp
push
mov
lcall
loope
inc
ret
sar
sub
mov
xor
push
das
add
ds
push
xor
and
pusha
inc
shll
push
and
mov
pushf
mov
cmp
push
add
test
inc
jl
imull
std
mov
imul
xor
cwtl
xchg
fistl
pop
adc
mov
xchg
in
int3
mov
adc
mov
pop
rorb
jo
fnsave
adc
shlb
or
add
dec
dec
mov
mov
shl
mov
inc
in
sbb
sbb
sbb
cmc
mov
sbb
je
mov
imul
out
inc
inc
jmp
out
lock
add
cmpsl
test
cltd
movsb
jno
xor
ljmp
movsl
out
mov
outsb
pop
lcall
hlt
int
mov
dec
mov
or
xorb
jge
cmp
and
jl
scas
xor
mov
ja
ret
sub
pop
xor
aas
mov
sub
loope
or
jg
js
stos
pop
faddl
repz
sub
adc
pop
shlb
pop
mov
addr16
cmpsb
daa
lods
jmp
rcl
cmc
pop
xchg
mov
mov
int3
jno
test
lahf
stos
xor
cmc
mov
scas
and
fndisi(8087
xor
icebp
adc
out
dec
mov
daa
xor
mov
jmp
pop
and
push
inc
mov
data16
outsb
scas
dec
dec
jo
cli
pop
jo
jo
add
popf
gs
mov
push
fwait
bound
scas
mov
mov
pop
cmpsb
fcomp
xor
sti
push
int
cmp
mov
out
stos
pop
ljmp
ret
iret
aas
imul
iret
mov
repnz
pop
cmp
fistl
test
or
cwtl
push
ret
and
aaa
xor
and
cmp
add
inc
xor
imul
xchg
ret
sbbl
int
scas
cmc
pop
xchg
outsl
aad
xchg
aas
mov
stos
add
movsb
mov
cmpsb
data16
mov
lock
mov
dec
aaa
mov
dec
pushf
mov
lret
sub
icebp
clc
leave
xorb
sub
rcrl
dec
in
lods
loope
stos
inc
les
xchg
daa
pop
adc
repz
iret
and
cmp
pop
add
push
fwait
dec
dec
mov
movsb
or
cmp
xor
inc
dec
int
sbb
cmc
add
sbb
js
mov
mov
xor
inc
adc
cwtl
sbb
imul
aam
negb
jbe
lods
add
add
push
sub
push
or
daa
xchg
sbb
jg
jae
cmp
or
and
and
mov
or
xchg
pop
jge
loop
and
subb
jge
fsubr
xchg
push
add
xchg
or
mov
and
add
mov
movsl
outsl
mov
out
xor
pop
and
jno
jae
push
enter
xlat
pusha
fsubl
pop
loope
cmp
adc
lcall
jmp
push
pop
mov
fisttpll
push
cmp
in
xchg
and
in
ss
jb
push
add
sbb
mov
pop
cmpsl
jns
fmul
fistps
sub
sub
mulw
into
xchg
add
inc
jne
flds
jmp
outsb
and
movsl
movsl
imul
adc
or
imull
jo
and
loope
rcrb
add
imul
icebp
adc
push
jp
mov
push
insl
lahf
inc
sarb
jb
pop
loopne
jmp
adc
enter
xor
in
loope
das
lret
mov
adc
jecxz
sub
sub
cmp
insb
jo
cmpsb
sti
jmp
push
int
scas
lods
lahf
add
scas
xor
rclb
rcll
imulb
mov
or
int3
sti
cmpsb
stos
pop
jbe
mov
mov
repnz
pop
xor
cmp
notb
push
add
inc
cmpb
aad
push
add
arpl
aad
add
movsb
xchg
test
or
test
adc
dec
push
test
push
ret
mov
push
inc
fdivl
or
fmull
lret
mov
pushf
adc
lods
call
cmp
out
fs
fs
mov
adc
and
loopne
mov
or
push
pop
mov
aas
aaa
lds
nop
pop
adcb
inc
push
adc
imul
inc
out
mov
mov
jnp
push
ret
lods
pop
scas
xor
stc
aas
cwtl
daa
jl
mov
js
dec
andl
out
mov
ret
sub
push
divl
jnp
xchg
or
push
inc
cmp
xor
js
stos
sub
pushf
and
cmp
push
mov
aam
lret
lea
push
xlat
dec
addr16
in
jnp
lock
push
popf
aaa
lock
adc
xchg
test
mulps
lea
cli
nop
cwtl
inc
int3
adc
std
pop
mov
negl
rcll
js
jecxz
mov
xor
clc
iret
and
push
adc
jge
push
sub
add
mov
mov
sub
nop
hlt
fs
sub
arpl
pop
in
icebp
in
or
imul
add
loopne
xlat
bound
sub
sti
test
pop
push
xor
jecxz
mov
jnp
push
sub
sbb
ss
jl
testl
ljmp
pop
inc
es
push
xchg
int
std
sub
out
enter
xchg
xor
xchg
pop
jecxz
push
into
lcall
or
sub
ret
ret
fdivr
mov
pushf
sti
ljmp
push
adc
or
mov
push
mov
mov
fwait
or
cmp
cmpsl
es
movsl
xor
jge
push
pop
push
loop
out
sbb
add
adc
push
fucom
push
cmp
gs
mov
or
or
lods
lcall
inc
repnz
dec
aam
mov
push
lahf
mov
jns
mov
push
movsl
mov
fcompl
mull
inc
dec
xchg
test
xchg
out
jnp
scas
mov
out
bswap
cld
hlt
push
les
popa
and
jnp
jp
lods
dec
push
std
nop
mov
insl
mov
push
fxch
push
addr16
lds
insl
inc
xchg
pop
pushf
dec
jbe
fmull
xor
pusha
icebp
and
imul
nop
out
mov
dec
mov
scas
xor
push
enter
shrl
lea
xchg
lret
lret
test
and
ret
xchg
sub
cmp
mov
cltd
cmpsb
mov
in
es
cmc
cltd
fwait
add
lods
insl
test
leave
pop
sub
mov
ja
push
rorl
push
xor
sub
xchg
sbb
xor
das
xchg
addr16
add
into
jbe
xchg
movsl
arpl
mov
rcrl
outsl
dec
lock
adc
mov
jae
jb
jg
push
icebp
fidivl
rcrl
xchg
jle
cmp
add
aam
jb
jns
das
je
fs
pop
inc
insb
sti
xchg
inc
jge
fstl
aas
rcll
jmp
pop
push
jle
cmpsl
push
cmc
int
mov
js
sti
cmpb
push
insl
sarl
in
push
lret
add
out
dec
call
mov
aas
scas
xlat
add
call
fidivl
adc
testl
daa
jmp
int3
dec
das
scas
push
enter
pop
jl
mov
adcl
sub
dec
adc
test
sti
add
push
fmuls
push
fucom
hlt
pop
in
call
fnstenv
hlt
sub
je
dec
sub
cmc
sarb
adc
into
mov
pop
or
scas
jno
inc
jne
cmp
jne
ja
cmp
jnp
pop
sub
push
test
inc
xchg
popa
mov
xorb
loop
jg
xor
arpl
repz
insb
imul
xlat
int3
mov
adcl
cld
lret
out
mov
push
jg
pop
loopne
lea
mov
in
cmp
cmp
adc
sub
dec
push
xor
out
sub
insl
inc
mov
ret
scas
jbe
mov
rcrb
jnp
xor
push
jo
in
mov
xor
xchg
mov
notb
dec
cmp
push
mov
out
push
inc
rcr
add
jp
ds
sahf
jmp
mov
out
xor
out
push
dec
cmp
and
xchg
cltd
jge
nop
cs
lahf
pop
fnsave
push
cmp
jb
mov
aad
mov
jle
jmp
je
push
iret
sbb
aaa
push
pop
out
in
jnp
sbb
sahf
mov
insb
ljmp
es
sub
mov
cmp
jg
mov
jp
adc
mov
shlb
dec
movsl
in
int3
push
fsub
cmp
scas
pop
sbb
jo
leave
bound
and
sbb
lea
sti
mov
fbstp
mov
mov
xor
iret
pop
push
or
jge
pop
cmp
inc
inc
cmc
fwait
cmp
add
lock
mov
cmpsb
pop
movsl
les
push
mov
xor
jecxz
clc
jns
mulb
push
jbe
pop
mov
mov
ficomps
in
or
sbb
push
fs
mov
mov
test
leave
adc
out
mov
sub
jne
scas
mov
mov
cmp
rclb
arpl
scas
adc
push
ret
mov
mov
flds
aaa
xor
jmp
addr16
lock
cmp
fwait
out
sahf
sub
das
cltd
jle
pop
push
js
cs
adc
test
inc
push
add
sbb
push
and
and
test
data16
mov
jns
fcoms
cmp
addr16
adc
aas
sbb
lcall
jle
mov
push
mov
mov
icebp
xor
add
imul
mov
int3
mov
push
je
lods
mov
mov
aas
mov
repnz
int3
pop
insl
inc
sub
mov
imul
into
dec
cmpsl
push
ficompl
loop
in
aas
lods
lods
pop
adc
xor
jo
push
fldcw
scas
shl
xor
xor
and
pushf
lds
test
inc
mov
das
xchg
rcr
push
or
jne
jp
xor
dec
in
or
inc
mov
inc
jne
or
sub
fistl
xor
shll
mov
cmp
sbb
ss
sahf
inc
jl
lahf
mov
xchg
pushf
add
imul
dec
inc
int3
popf
sbb
or
mov
and
ret
jns
out
push
jo
jge
pop
mov
push
pusha
jb
inc
jbe
loopne
sub
fbld
rcr
test
les
fldenv
test
jnp
mov
adc
sbb
dec
repz
les
xchg
rorb
adc
push
std
mov
pusha
jl
repnz
iret
sub
or
add
fimull
push
add
jno
stos
out
gs
jle
push
add
stos
jbe
inc
mov
or
int3
loopne
cs
jnp
pop
and
cli
das
lds
xchg
frstor
lods
inc
fwait
mov
jg
mov
xor
xor
or
push
mov
aaa
sub
outsl
sbb
cli
xorl
sub
lret
dec
bound
in
dec
enter
stc
mov
pop
cli
add
enter
push
out
outsl
setb
pop
sbb
jg
movsl
xor
outsb
xlat
cwtl
shr
mov
xor
fimuls
jnp
jecxz
rcr
test
in
push
sbb
push
sub
push
push
andb
out
incl
mov
shlb
or
pop
jl
push
sub
sbb
sub
sub
cli
jb
cld
inc
adc
lret
loop
shl
movsb
pop
sbb
mov
stos
or
push
mov
out
out
push
scas
mov
add
fmull
int3
cmpsb
sub
jle
scas
mov
mov
fwait
jnp
sahf
sahf
push
xchg
daa
es
mov
mov
jno
xor
ret
nop
mov
add
add
lods
push
push
lcall
inc
out
pop
mov
pusha
loope
push
cmp
sbb
int3
cltd
sti
icebp
pop
sub
out
xchg
test
imul
jns
sahf
ficomps
fmull
inc
xchg
dec
sub
stos
push
xchg
xchg
lea
push
ja
pop
xchg
aas
cmp
inc
shrb
in
jbe
movlps
jle
push
rorl
out
nop
ret
arpl
dec
test
sub
jb
mov
mov
es
ja
repnz
mov
sub
in
cmpsb
jae
or
data16
cmp
lcall
pop
xchg
inc
scas
push
dec
inc
adc
push
rdmsr
and
mov
outsb
sbb
sub
test
flds
fsubr
sub
cld
hlt
jne
sti
push
push
fstps
push
add
ljmp
fldt
not
mov
dec
or
call
cmp
cwtl
mov
jg
pop
notl
ret
push
test
push
sub
mov
dec
jge
int3
js
aam
jb
fldenv
mull
cwtl
push
jb
rolb
jl
or
sub
in
arpl
push
xor
movsl
bound
jno
or
inc
jle
sub
xchg
stc
pop
xor
je
pop
fistl
dec
inc
hlt
movsb
dec
sbb
rorb
movsl
shrb
jmp
and
pop
inc
iret
xchg
push
movsl
outsb
aam
clc
mov
lods
hlt
and
lods
sbb
push
cmpsb
add
and
bnd
mov
add
inc
das
pop
lds
aaa
icebp
in
ja
mov
xchg
repnz
xor
leave
mov
adc
push
and
pop
fistps
in
xor
xor
xor
unpckhps
mov
aas
pop
lcall
insl
ja
cli
mov
stos
mov
test
add
cmc
stos
push
insl
sbb
popa
pop
jnp
jp
xchg
xchg
adc
pop
lcall
hlt
into
test
add
pop
mov
cwtl
add
ret
shl
jg
push
inc
push
movsb
jbe
cwtl
mov
mov
add
pop
popf
gs
add
outsl
inc
push
pop
movl
data16
and
test
rcrb
shlb
jb
out
xor
clc
test
lds
inc
add
stos
repz
or
jmp
dec
sti
lods
jle
sbb
cmp
iret
leave
inc
cmpsb
movsl
loope
jae
popf
in
rol
dec
shlb
pop
out
outsl
stos
dec
sub
cli
adc
mov
icebp
xchg
push
loope
in
push
inc
mov
xchg
inc
cmp
jbe
lods
mov
xor
inc
sti
ss
dec
fnsave
lret
xor
fcomps
outsl
in
mov
jae
cmpsl
dec
into
mov
or
inc
mov
sbb
aas
in
fistl
pop
push
mov
xchg
sar
fadds
das
jae
inc
add
xchg
jge
out
sub
ds
sbb
and
cmp
sub
loope
jl
stos
or
sub
cltd
or
repnz
inc
popa
xchg
repz
xor
xor
sub
adc
push
cltd
push
xchg
pop
cli
lret
nop
xor
hlt
push
outsl
int
mov
inc
lcall
add
je
xchg
xchg
mov
aam
les
mov
aaa
fs
fadd
clc
imul
mov
cmp
jb
roll
push
std
jne
xchg
jmp
ss
out
outsb
mov
imul
popa
lods
push
ret
idivl
mulb
stos
hlt
sub
push
loopne
les
sbb
xor
dec
sub
cmc
push
std
cli
mov
loopne
insb
sbbl
ds
dec
imulb
xor
fidivl
xchg
push
mov
enter
ljmp
testl
movsl
mov
jnp
mov
jns
out
sbb
mov
pushf
rcrb
test
lret
test
add
loope
pop
aam
ds
scas
leave
cmp
mov
ficoml
pop
jb
insb
loope
mov
fdiv
inc
into
enter
pop
test
lcall
es
in
dec
push
hlt
loop
call
flds
mov
popf
addr16
dec
sbb
dec
xlat
rorb
sar
add
fwait
test
je
cmc
cld
mov
subb
stos
fwait
fistpll
push
js
fidivrs
cs
inc
push
push
jle
enter
js
in
push
mov
push
sbb
push
call
mov
out
mov
and
imul
cmpsl
sbb
cld
mov
into
pop
xchg
mov
inc
sub
jge
test
popa
cwtl
add
clc
or
pop
js
lret
aas
or
iret
adc
push
imul
xchg
jns
dec
loope
ds
dec
sbb
cmp
movsl
icebp
xor
gs
mov
fbld
and
push
mov
enter
push
out
clc
push
shr
mov
mov
push
xchg
out
mov
or
add
iret
pop
mov
push
inc
out
mov
dec
xlat
mov
rcll
dec
pushf
xchg
cmp
in
mov
mov
lret
xor
push
mov
lods
pop
inc
popa
and
fisubl
ja
push
xchg
fimuls
sub
mov
jae
int3
test
cmc
cld
pop
call
xlat
sbb
clc
aam
aam
in
mov
test
mov
out
fnsetpm(287
adc
push
pop
cmpl
ds
and
push
xor
test
outsl
enter
pop
in
sbb
xor
dec
sub
jo
lods
pop
into
mov
jmp
sahf
dec
cmp
roll
arpl
in
sahf
xchg
xor
inc
xor
xor
je
popf
mov
or
sub
jae
adc
or
bound
cmp
pushf
mov
mov
fs
ret
ret
inc
mov
cmpsl
pop
xor
or
loopne
leave
lret
sub
lods
jb
pop
std
fdivrl
cwtl
xor
test
jmp
imul
lods
fsub
adc
sub
pop
cmp
arpl
lock
insl
mov
mov
sbb
push
test
pslld
cmp
ret
mov
lea
jle
push
mov
cmc
clc
xlat
mov
arpl
mov
mov
test
nop
xor
xchg
ret
jle
xchg
push
es
xor
xchg
fistps
divb
out
sti
bound
es
xchg
fldl
mov
fs
ljmp
clc
pop
js
mov
out
xlat
subb
in
inc
mov
xchg
test
repnz
jbe
into
cmpb
aas
cmp
sbb
cmc
sbb
gs
movsb
aaa
insb
test
push
loop
jo
ror
and
ljmp
or
aaa
aam
pop
je
mov
mov
mov
cwtl
sub
and
xor
sbb
adc
movsb
je
pop
push
shll
into
call
jnp
into
stc
nop
adc
pop
incl
mov
mov
icebp
ja
das
sub
loop
in
iret
push
xlat
fs
jns
test
bound
sbb
andb
cmp
ret
jb
inc
xchg
ljmp
mov
clc
jl
lcall
adc
add
adc
mov
into
outsl
xor
dec
xchg
add
add
dec
mov
pop
rol
or
std
dec
jno
in
ljmp
fwait
lahf
ret
jp
into
int
pushf
push
cmp
sub
test
mov
call
scas
fcmovnbe
xchg
ror
inc
adc
cmp
sub
add
inc
push
mov
stos
sbb
subl
sbbb
pop
dec
movsl
addr16
movsb
or
stos
inc
pushf
out
notl
gs
aad
push
data16
dec
mov
out
dec
adc
add
sbb
ljmp
mov
loope
and
test
xor
inc
pop
jb
ljmp
rorl
bound
sub
decb
into
roll
rcr
shlb
xor
insb
sub
ljmp
stc
fidivrl
addl
cmp
popf
xchg
mov
mov
adc
jne
ja
dec
mov
and
mov
push
cmpsl
add
fsubs
icebp
fisttps
pop
mov
adc
shlb
imul
inc
jl
fwait
jne
sar
sti
xchg
or
sbb
lods
push
std
fisubs
inc
cmovbe
pop
cltd
subb
xchg
cmp
data16
jo
rcrb
imul
and
mov
push
and
lret
pop
daa
imul
lods
jge
cmp
sub
mov
jmp
adc
jmp
gs
xor
fwait
sahf
jmp
jnp
pusha
push
mov
or
test
ret
cmp
mov
adc
mov
inc
and
jg
lods
ljmp
dec
dec
lahf
cmpsl
shl
inc
and
out
inc
mov
pop
cmp
xchg
lret
jmp
pop
sub
push
scas
scas
into
dec
push
mov
leave
filds
inc
fs
ljmp
pop
notb
mov
lret
dec
icebp
mov
aam
lret
add
sub
xor
pop
inc
fldcw
jae
icebp
xchg
add
sub
mov
dec
scas
sbb
mov
xorb
jmp
mov
adc
leave
outsb
sub
push
out
stc
out
cmp
and
pop
movzwl
pop
gs
mov
gs
aam
movsb
cwtl
andl
out
pushf
and
add
daa
in
insl
out
add
jl
mov
add
mov
fsubrs
mov
cmp
popf
adc
mov
sub
dec
inc
xor
xchg
or
sub
sti
pushf
push
je
rcrb
mov
nop
stos
xor
sbb
dec
mov
mov
adc
pop
popf
lock
mov
or
sub
xor
call
mov
and
aaa
or
fnstsw
push
inc
lea
ret
pop
call
cmp
and
stos
je
mov
or
jb
xchg
loopne
or
inc
xlat
jmp
outsl
inc
popl
jns
ja
push
pop
iret
cwtl
cmp
shll
sub
xchg
nop
jo
int3
lods
add
in
and
insb
test
cmp
es
push
jg
imul
jbe
scas
in
out
adc
fcompl
sbb
je
add
mov
out
out
sub
pop
jle
jge
loop
data16
outsl
cmp
fs
test
push
pop
inc
jmp
cmp
fdivl
scas
imul
sahf
les
add
rcrl
mov
mov
xor
inc
cwtl
sbb
mov
clc
sahf
jnp
cmp
mov
enter
or
cmp
mov
pop
orl
into
add
xchg
xchg
pop
xchg
mulb
ss
or
add
mov
int
mov
repnz
dec
mov
out
andl
mov
sbb
hlt
cwtl
out
jmp
xchg
loop
iret
and
stos
sub
mov
inc
push
push
mov
push
dec
push
cmp
nop
inc
test
add
mov
insl
lea
testl
jg
lret
scas
push
inc
stos
outsl
int
dec
jno
movsb
cmp
out
add
fmull
inc
rolb
imull
jbe
outsl
sub
jp
push
shrb
in
xor
mov
sti
jbe
sub
sub
addb
leave
jo
xchg
aas
add
jl
jbe
nop
popf
dec
dec
adc
aas
test
das
mov
movsb
in
pop
shrl
insb
cmpsl
cwtl
movsl
jp
add
xor
mov
xor
jae
or
xchg
pushf
sbb
divb
xor
pop
adc
mov
adc
pop
sarl
jno
out
jecxz
stc
push
sar
jnp
in
and
and
in
add
jb
cmp
adc
xor
insb
push
inc
loop
faddp
arpl
sti
cmp
lock
pop
or
cwtl
mov
in
xchg
and
lock
roll
stc
mov
sbbb
adc
push
sub
xor
leave
xor
jge
xchg
xchg
les
fdivl
cmpsl
cmpsb
cmpsb
mov
rcrl
mov
fcompl
bound
cld
lods
repnz
leave
test
cmp
pop
adc
cmp
loope
bound
xor
jne
scas
inc
add
add
lods
mov
es
dec
lds
imul
sbb
in
xchg
push
sbb
je
dec
out
push
and
and
adc
outsb
fs
xorl
or
jo
pop
inc
fcomip
bnd
movsb
lods
iret
call
dec
div
sub
rcll
adcl
jbe
mov
arpl
inc
repnz
imul
popf
xchg
subl
outsb
pop
jecxz
aam
mov
ja
mov
pop
add
sbb
repnz
xchg
mov
push
aam
inc
test
shr
aad
loop
xor
sti
mov
hlt
push
pop
push
lret
sub
sbb
fsts
mov
jne
cli
xchg
pop
sahf
mov
jae
mov
pop
pop
push
jnp
cmpsl
cmp
push
sbb
xor
mov
jb
pop
test
pusha
je
push
lock
and
insb
addr16
xor
add
push
adc
push
sti
or
pop
aaa
jae
mov
orb
shrl
in
push
pop
rcl
mov
mov
push
leave
mov
or
scas
fwait
loopne
stc
or
jge
sbb
clc
adcl
loopne
push
movsbl
out
les
mov
push
pusha
bound
xchg
sub
sbb
mov
jno
cwtl
mov
and
and
std
mov
dec
sbb
ss
fiaddl
add
mov
mov
pop
jbe
pop
cwtl
inc
mov
add
push
jno
push
cltd
orl
cmp
test
lea
cmp
add
jmp
jle
fcoml
loopne
lret
mov
cmp
push
in
dec
dec
pop
inc
lock
shrl
xchg
das
mov
filds
mov
push
stos
push
push
xor
das
push
leave
mov
ljmp
enter
imul
xchg
mov
or
fxch
adc
das
or
int
sbb
cmp
push
cmp
enter
mov
pop
jnp
mov
or
push
pop
xor
les
pop
addr16
pop
lods
xchg
bnd
into
and
pop
ret
sbb
adc
xchg
push
jne
dec
push
aaa
or
out
inc
cmp
fstpt
add
dec
aam
repnz
fistps
mov
pop
pusha
mov
jno
pop
test
inc
mov
out
xchg
and
push
mov
jmp
cmp
fcmovnb
and
lock
xabort
or
shlb
xor
ljmp
mov
xor
ret
jb
sbb
out
nop
mov
fwait
jns
rorb
jmp
insb
xlat
rcrb
pop
xchg
fs
sbb
ja
fadds
cmp
sbb
cmp
mov
push
mov
lret
imul
and
movsl
pop
fidivl
fnstcw
pop
and
mov
bound
pop
rcll
rclb
xchg
xchg
xchg
mov
aad
ret
lock
mov
push
sub
jbe
out
aam
jg
scas
mov
pop
adc
add
inc
jbe,pn
mov
mov
mov
stc
dec
fsubp
mov
cmovl
aaa
cmpsb
fldl
push
lret
pushf
cmp
in
shl
adc
insl
outsl
frstor
inc
out
ds
cmp
int
insl
sub
jns
pop
xchg
add
popf
pop
les
dec
les
cmpsb
sub
push
pushf
std
lret
fs
sub
movsb
test
mov
and
insl
and
mov
and
and
in
or
std
and
ss
jl
outsl
fnstenv
cltd
int3
push
out
lock
in
xchg
arpl
lea
adc
cld
hlt
xchg
mov
cld
repnz
aas
inc
cmpsl
mov
int
fwait
iret
mov
das
inc
dec
inc
out
enterw
repz
inc
and
aad
jnp
xchg
fcmove
aas
jecxz
adc
xchg
in
gs
push
push
and
out
movsb
cli
and
shlb
insb
inc
mov
les
aam
mov
add
cmp
mov
out
dec
rcr
sub
inc
icebp
cmp
xlat
push
push
daa
rcrb
into
and
in
and
mov
sub
daa
adc
bound
enter
mov
push
ds
or
ds
or
test
mov
push
inc
and
push
cld
push
cmpsb
adc
cwtl
pop
stos
loopne
decl
adc
int
adc
mov
mov
fwait
repz
ljmp
and
cwtl
dec
sub
and
push
sbb
fcomp
out
fdivs
int3
jno
mov
out
fdivrl
sub
mov
sahf
addb
cs
dec
jb
loopne
hlt
mov
sbbl
xchg
jb
push
pop
jg
aas
jecxz
fisttps
fwait
vmovaps
xor
cmpsl
pop
test
das
movsb
leave
sub
and
add
mov
adc
sub
shll
mov
xor
pop
and
add
dec
xchg
sbb
adc
jbe
add
dec
stos
mov
and
test
popa
or
test
lds
fistl
mov
in
lods
pop
dec
ja
aaa
inc
xchg
fistpl
rcrl
cltd
loope
ret
push
xor
jae
dec
iret
push
daa
sbb
cmp
icebp
adc
insb
xchg
adc
js
roll
pusha
jmp
insb
or
inc
scas
mov
insb
pop
push
xor
data16
or
mov
popf
dec
gs
cwtl
mov
mov
out
push
xlat
mov
jle
and
push
jge
jo
lods
das
dec
xor
cmc
mov
and
inc
leave
jne
add
or
test
or
shrb
dec
cmp
imul
pop
inc
gs
jmp
xlat
push
mov
mov
mov
fneni(8087
cmc
lods
cmpb
pop
pop
pmuludq
fwait
out
jge
xor
lock
sti
loope
mov
cmp
je
clc
mov
add
push
pop
pop
test
mov
fisubs
incl
pop
psrlq
cltd
fsub
into
jecxz
ljmp
je
popa
int3
addr16
or
inc
pop
mov
push
fs
lods
imul
sub
inc
and
inc
add
lods
add
lret
sbb
aaa
fdivr
aaa
or
dec
imulb
jbe
xor
sahf
cmp
stc
or
jno
shrl
cmp
mov
iret
cmp
cli
sahf
outsl
test
mov
aam
ss
lcall
insb
push
cwtl
rcrb
mov
daa
or
iret
pop
iret
mov
add
mov
mov
mov
arpl
add
push
and
aam
xor
pop
dec
lods
fldenv
aas
leave
ja
push
xchg
sub
lret
fcmovu
cmp
faddp
cs
jns
mov
pusha
inc
push
jb
aam
cli
dec
xchg
push
loope
push
cmpsl
lret
enter
fidivrl
in
ja
sub
jbe
shl
add
sbb
cmc
mov
cs
xor
dec
imulb
jg
andb
inc
adc
cmp
xchg
and
fucom
mov
ss
inc
nop
sbbl
and
add
iret
or
lds
popf
cld
dec
mov
cld
cwtl
fdivl
sar
xor
inc
bnd
addr16
jb
pop
movsb
aad
out
add
fwait
push
xor
fidivl
xchg
jne
lret
mov
jae
mov
testl
int3
sub
inc
shrb
mov
pop
cld
adc
xor
add
mov
movsb
pop
dec
movsb
add
mov
das
pusha
fists
aad
divb
loop
dec
lods
int
inc
pop
sbb
stc
mov
fwait
mov
mov
push
inc
cli
pop
hlt
loop
scas
fisubs
lret
ret
cmp
mov
icebp
out
jnp
mov
mov
and
or
call
xor
lock
add
pop
popa
mov
and
push
test
cmp
stc
push
mov
je
adc
pop
pop
xor
and
push
jne
xor
ss
dec
jb
xchg
popf
jno
sub
mov
push
rorl
xchg
dec
cli
popf
cmp
lods
imul
lret
mov
loope
mov
jle
add
loop
hlt
gs
inc
pop
pop
xorb
gs
ja
fsub
jle
jecxz
mov
inc
sbb
mov
fstl
sarb
sbb
lcall
inc
daa
add
std
mov
fst
jno
xor
out
push
sarl
xor
sbb
das
sti
lea
add
xlat
pop
push
in
jns
pusha
xchg
lahf
and
mov
cltd
ljmp
inc
mov
add
sub
and
mov
pop
inc
jge
cli
outsb
mov
loop
adc
pop
subl
add
sub
xlat
std
fwait
mov
insb
mov
test
aaa
lret
mov
adcb
rcrb
jae
incb
pop
xchg
lods
dec
imul
sbb
and
or
shll
jbe,pn
lcall
jg
pop
cmp
mov
inc
inc
aad
aaa
shll
aad
pop
xlat
inc
jl
imul
xchg
lret
adc
into
scas
mov
cmp
ud2
test
xchg
mov
xor
or
sbb
es
imul
push
daa
xchg
sub
mov
lea
add
xchg
sub
and
push
daa
dec
xchg
orb
push
xor
ret
fwait
inc
dec
push
cmpsb
xorb
insb
mov
jnp
xor
xor
xor
sub
add
ja
cmc
cmp
lods
cld
pop
faddl
mov
pop
dec
leave
mov
sbb
lret
inc
jno
or
loop
pop
clc
mov
pop
xchg
outsb
add
push
sahf
mov
outsb
sar
in
mov
xlat
sub
cmc
nop
bound
mov
or
ds
les
fisubrs
mov
lds
cltd
leave
jo
add
dec
push
outsl
mov
and
jnp
jae
or
fldcw
sarl
loopne
push
push
hlt
jnp
es
test
mov
or
test
cmpsb
jne
cmpsb
out
ret
cld
xchg
sarl
xor
add
jno
and
pop
mov
push
outsl
mov
test
out
jno
icebp
mov
lret
outsl
dec
loop
loope
and
dec
roll
or
push
movsb
or
cmpsb
sub
test
cmp
pushf
and
jp
test
call
clc
imul
outsb
and
scas
repz
and
shll
loope
test
xchg
subb
dec
add
lret
cltd
dec
mov
test
mov
shll
mov
pop
dec
repnz
shll
clc
addb
xlat
cmp
sub
mov
cmpsb
mov
test
xchg
pop
push
add
icebp
bound
shlb
mov
xlat
or
mov
sbb
loope
xor
popl
xorl
fwait
mov
fisubrs
push
add
ljmp
mov
and
das
cli
pop
mov
lock
loopne
mov
mov
sbb
push
insb
movsb
jb
inc
hlt
lret
mov
push
les
or
pop
inc
sbb
mov
cltd
out
cmp
lock
mov
out
cltd
and
call
inc
cmp
adc
inc
xor
push
or
inc
fldt
push
mov
movsl
sar
ds
sahf
fistl
out
jmp
popa
int
or
repz
mov
les
or
pop
insl
jno
sahf
sub
mov
mov
add
inc
mov
aam
pop
mov
pop
add
xchg
sahf
mov
dec
movsb
out
rcl
mov
pop
xor
add
sbb
das
dec
ret
adc
sbb
pop
mov
test
sbb
mov
jnp
inc
stos
jbe
cmpsb
pusha
dec
dec
jb
in
inc
jmp
jae
fxch
insb
pop
mov
jle
xor
hlt
mov
xor
inc
dec
mov
dec
test
cwtl
pop
and
mov
es
sub
inc
ss
ss
xor
stos
lods
ret
jmp
mov
inc
mov
fldenv
sbb
mov
push
and
and
inc
gs
aaa
inc
rclb
xchg
mov
repnz
js
mov
pop
mov
xlat
dec
push
pop
fwait
or
sbb
fcoml
inc
mov
les
dec
cwtl
cld
iret
inc
xchg
ss
pop
mov
and
scas
es
idivb
mov
int
sarl
out
rcll
gs
inc
push
movb
aas
adc
pop
jns
dec
in
icebp
les
add
iret
test
dec
test
mov
std
dec
adc
adc
or
enter
jle
xor
xor
mov
fimull
xchg
mov
lret
push
adc
in
mov
fcomps
test
push
cli
add
into
inc
sub
or
vmwrite
call
add
jmp
jecxz
mov
sbb
ret
lock
push
xchg
clc
cmp
pop
or
sbb
ffreep
mov
pop
fdivl
pusha
pop
mov
or
mov
lret
rcll
mov
movsl
ds
mov
ljmp
cmpsl
push
jp
ss
cmpsb
lcall
sub
cwtl
loope
stos
mov
xlat
push
mov
ret
fstpl
dec
in
push
test
sub
or
dec
or
dec
xchg
lcall
in
add
divb
mov
sahf
adc
sbb
inc
xchg
jmp
push
pop
ret
nop
aad
cmpsb
pop
xor
out
out
stos
fisubs
sub
pminsw
ss
sbb
add
mov
call
ret
aaa
movsl
insl
jnp
mov
mov
pop
subb
adc
insl
or
test
loopne
dec
ljmp
sub
lret
pop
sahf
lcall
sti
sbb
stc
out
fcmovnbe
add
ficomps
dec
sbb
aaa
sub
inc
push
fwait
adc
jle
mov
jle
push
and
lock
adcl
scas
push
pop
dec
pop
mov
fiaddl
push
sub
ret
xchg
jmp
fsubs
cmp
fistl
in
mov
pop
mov
sub
xchg
inc
and
cli
in
pop
repnz
mov
or
dec
sahf
stc
ljmp
es
adc
pop
nop
pop
mov
mov
mov
push
test
sub
insb
subb
fisttps
mov
sub
dec
lret
fs
out
fs
imul
mov
into
mov
mov
aaa
cmp
iret
cmp
xchg
mov
push
rolb
mov
add
jecxz
and
adc
repz
adc
es
xor
inc
inc
dec
int
daa
cmp
adc
push
push
mov
cmc
xor
xorl
jno
push
adc
test
loopne
pushf
jns
mov
stos
or
mov
xchg
imul
test
mov
addr16
xor
mov
repz
ds
adc
mov
inc
movsb
xchg
xor
push
dec
jbe
pop
pop
in
cmpsl
sbb
fwait
sub
decb
ss
test
mov
push
out
push
mov
daa
add
cmp
add
iret
das
xchg
rcll
adc
and
sub
push
not
pop
mov
cmc
movsl
pop
je
sub
and
pop
mov
or
or
loope
dec
jmp
or
mov
xor
sub
loop
pmullw
inc
pop
sbb
sub
sbb
in
fwait
shlb
nop
adc
push
fldt
xor
repz
cmpsb
xchg
push
jne
sbb
adc
jmp
mov
ss
and
cmpsb
jecxz
scas
xor
mov
cld
popf
insl
cmp
add
nop
imul
jnp
inc
and
add
enter
outsb
dec
mov
pop
or
sbb
push
fdivl
jg
inc
mov
push
movsl
fisttpll
outsb
imul
jle
cmp
dec
xchg
add
jne
insl
bound
add
rcrb
jmp
xchg
sub
inc
cmc
gs
cmp
aaa
xchg
sub
push
and
cli
jns
ret
pop
lock
adc
sub
out
test
xchg
mov
xor
repz
cli
lret
insl
inc
addl
jmp
push
ret
and
mov
icebp
mov
fs
addb
push
addb
jg
or
mov
scas
gs
stc
push
dec
jo
insb
cld
adc
les
mov
dec
push
sub
adcl
xlat
icebp
daa
bound
ret
jae
jecxz
pop
mov
pop
mov
loopne
jge
je
dec
orl
lret
jb
sarl
pop
and
fidivs
pushf
fimull
cmp
in
mov
fmuls
shlb
leave
jns
xchg
loope
test
jp
and
cmc
xor
pop
sbb
popa
pop
mov
cwtl
sbb
adc
mov
stc
xlat
adc
sbb
js
sub
add
mov
pop
xchg
inc
xor
ja
frstor
stc
dec
pusha
arpl
scas
icebp
loope
and
or
adc
jmp
inc
enter
out
lods
and
xchg
mov
call
push
js
or
inc
test
or
scas
pop
xchg
flds
jmp
mov
loopne
pop
xlat
test
cmp
ret
lock
adc
iretw
xchg
ret
imull
and
cmp
into
out
flds
gs
push
sbb
std
jbe
sbb
or
cmp
lods
call
dec
das
mov
sbb
jae
daa
mov
xchg
xor
sahf
mov
cld
shrl
sbb
xor
rcrb
scas
in
sbb
lea
int
mov
je
mov
push
pop
icebp
hlt
jp
or
hlt
lret
adc
pushf
pop
dec
adc
ljmp
dec
push
mov
jle
pop
outsl
pushl
mov
and
mov
cmp
rcll
mov
test
xchg
in
pop
sbb
imul
mov
and
fcmovnb
sti
xchg
dec
leave
pop
cli
in
mov
push
inc
mov
in
test
pushf
pop
mov
addr16
lahf
jno
xor
pop
xorl
or
test
dec
dec
and
pusha
test
adc
jne
iret
hlt
fldt
lock
sbb
cmp
cmpsl
push
outsb
in
test
mov
xlat
push
mov
inc
lods
inc
popa
divb
std
dec
lods
popf
iret
add
sbb
sbb
je
fldcw
mov
notl
rcll
in
jns
and
jno
fistl
out
xor
xor
faddl
push
jle
sbb
pusha
xchg
roll
or
or
adc
sbbb
out
sar
adc
cs
mov
add
ret
into
adc
push
mov
inc
dec
sarl
divl
cmp
insb
cwtl
xchg
addb
lret
lea
sub
pop
mov
ja
pop
testl
mov
xchg
iret
sbb
das
jno
sbb
inc
ljmp
add
jnp
rep
add
jb
ret
out
cmc
stc
xor
xchg
or
pop
sub
cmp
cmpsb
lods
push
aad
fidivl
pop
xlat
cld
lcall
pop
imul
insb
insb
gs
inc
mov
xchg
add
scas
outsl
dec
xchg
or
cmp
ljmp
rclb
js
enter
ret
cmp
jne
push
cmp
mov
and
mov
loopne
scas
arpl
aaa
add
lahf
ljmp
sub
sahf
fcompl
jle
insb
data16
xchg
jno
mov
lcall
cmovo
sbb
iret
mov
xchg
or
push
lds
out
dec
js
xchg
mov
pushf
inc
rcll
repnz
adcl
jne
out
dec
jle
inc
out
xchg
inc
add
cli
movsb
sbb
scas
ret
adc
xor
stc
shr
inc
mov
imul
pusha
or
add
jnp
or
movsl
push
aas
in
mov
negb
push
cli
and
xchg
xor
and
out
push
dec
int3
dec
int
lret
loop
or
or
imul
mov
test
imull
aam
adc
or
loop
mov
push
pop
xlat
add
jne
or
out
mov
cmpb
pop
int3
ja
ljmp
mov
addb
push
jmp
xchg
pop
and
sbb
dec
mov
mov
hlt
mov
test
sub
je
and
lock
push
rep
gs
cmpsl
cmp
pop
aas
pushw
dec
pop
xor
sub
es
insl
push
cmpsl
mov
sar
cmp
stos
inc
stos
shll
cmp
mov
lret
nop
xor
cmp
xchg
mov
negl
sub
movsl
mov
push
fisttpll
mov
and
ret
xor
or
xor
dec
push
sbb
icebp
cmpsl
jns
xchg
cli
jecxz
jbe
stc
insl
mov
adc
pusha
out
xor
out
jg
in
push
jg
jno
cli
popa
cmp
lds
lcall
cmp
jne
in
clc
jno
ret
test
popa
lcall
adc
negl
aad
and
and
scas
jbe
fdivrl
addl
jge
test
lods
jmp
in
push
scas
jmp
sti
lea
mov
push
mov
fwait
movsl
xchg
jg
lahf
ss
lods
cmp
push
pop
sbb
lret
xor
dec
push
xchg
jnp
movsb
xchg
xchg
sti
aas
sub
dec
stc
xchg
jl
cmpsl
in
addl
int3
jge
sti
cmp
imul
or
je
call
adc
les
fmuls
push
jp
rolb
pop
enter
mov
aaa
xchg
mov
shll
outsb
xchg
mov
push
sar
out
sbb
leave
pop
iret
jnp
vpcmpeqb
cmp
cmc
adc
scas
dec
rorl
das
xor
dec
sub
insl
pop
adc
lock
xor
cwtl
pop
pop
lock
ficomps
jecxz
mov
push
decl
push
outsl
sti
xchg
repz
mov
imul
mov
mov
jb,pn
iret
enter
cmpsb
loope
test
rol
sbb
mov
pushl
loopne
xchg
call
fidivl
jo
ficompl
adc
sbb
and
mov
sbb
adc
sub
jbe
arpl
cwtl
cs
clc
mov
push
hlt
das
pusha
std
shlb
mov
sbb
stos
sub
bsr
lret
sub
pusha
and
add
inc
sub
loop
dec
fsubs
inc
push
xor
push
negl
aam
jo
fbld
leave
push
rorl
js
jg
xchg
xchg
icebp
or
arpl
dec
roll
cmp
in
scas
sbb
cmp
lcall
out
push
mov
xor
jbe
popf
mov
adc
xchg
int
jno
sub
pop
adc
dec
repnz
sbb
add
and
movsl
cmpsl
cmpsl
imul
clc
sbb
cmp
adc
mov
rorl
xor
lret
repnz
icebp
inc
divb
out
aad
clc
jle
dec
mov
addr16
pushf
stc
loope
int3
dec
or
mov
fadds
hlt
xor
jb
fs
pop
mov
imul
sbb
movsl
stos
pusha
adc
jae
nop
push
add
push
mov
sbb
jb
mov
hlt
movsl
cld
fcmovnb
xor
addb
xor
test
mov
movsb
sbb
push
mov
cltd
bound
jp
mov
cmp
in
inc
and
jo
ljmp
mov
xchg
mov
std
jg
jg
cld
pop
cmp
popa
arpl
cltd
fs
cmpsl
sub
jnp
movsl
pop
mov
lret
das
ljmp
fsubrl
cmp
mov
loopne
outsl
stos
stos
iret
inc
xor
aam
push
movsb
popa
mov
mov
aad
pop
test
and
ja
loop
xchg
cmp
or
out
ja
push
xchg
jno
push
xor
outsl
es
in
cmp
mov
repz
lods
xor
inc
mov
jge
into
enter
subl
das
test
xchg
insb
inc
out
xchg
pop
cmpsb
xchg
pop
lock
sbb
dec
clc
arpl
stos
sbb
inc
les
or
mov
mov
in
mov
and
mov
dec
ror
mov
jecxz
jno
loop
pop
mov
mov
ficomps
xchg
and
xlat
popf
dec
loopne
dec
or
and
movsb
es
xchg
sbb
jnp
xor
cmpsb
mov
stos
inc
xor
dec
mov
bnd
jle
jl
xchg
fistpll
sub
jle
dec
inc
jp
mov
pop
xchg
ja
add
jne
mov
push
or
enter
jbe
fwait
stos
mov
push
enter
sbb
enter
in
loope
xor
add
jecxz
aas
sbb
js
sub
or
popf
cmp
xor
fsubl
push
clc
mov
push
das
rorb
jle
jne
gs
roll
inc
call
insb
and
in
int
jmp
xor
push
push
pop
cmpsb
into
push
mov
pop
loope
and
imul
sbb
inc
or
leave
cs
sbb
cmp
lcall
push
pushf
das
fdivrs
jmp
lock
push
xor
inc
jmp
dec
xchg
loope
cmc
jbe
lds
sub
scas
imul
or
mov
inc
gs
cmp
mov
outsl
mov
sar
test
movsb
pop
lods
inc
mov
imul
or
into
and
pop
or
scas
fldcw
adc
xchg
sub
dec
jecxz
lods
inc
es
mov
dec
js
xchg
lea
cmpsl
mov
nop
fs
fstpl
jg
inc
mov
pop
jb
push
dec
cmp
xor
mov
in
sub
out
cmp
push
adc
jg
inc
xlat
repz
fidivrs
ret
push
stos
mov
sub
mov
jne
cmp
inc
mov
pop
int3
int3
xchg
fnstenv
jns
fs
fs
pushf
xchg
mov
std
iret
add
pop
stos
dec
adc
xorb
xor
or
push
jns
adc
stos
sbb
cmpsb
jmp
enter
roll
xchg
aaa
lret
push
addb
push
inc
push
iret
mov
dec
ret
jo
xor
add
mov
push
adc
fmuls
aad
in
cli
mov
xchg
pop
nop
jg
adc
into
lret
aaa
sahf
push
scas
dec
and
cwtl
addr16
std
mov
cmpl
pop
lret
fxch
insl
inc
mov
cmp
pusha
lock
or
xchg
cmp
sbb
mov
dec
mov
bound
dec
lea
adc
pop
fwait
hlt
mov
imul
jle
lds
icebp
test
out
loop
cmp
inc
mov
jl
test
inc
sahf
xchg
addr16
adc
jecxz
sti
gs
lahf
mov
into
rolb
lcall
lods
pop
adcl
adc
popa
aam
std
xor
sub
addl
imul
or
aas
dec
inc
shlb
rclb
imul
push
popa
loope,pt
nop
fdivr
cld
sub
test
cmp
or
jo
add
in
jp
cmpsb
sbb
out
jp
lods
xor
push
daa
out
sbb
sbb
xchg
fildl
inc
mov
call
mov
add
pushf
iret
notl
out
movsl
dec
insb
jnp
push
movsl
in
mov
rcrl
test
pop
mov
xor
mov
repz
cld
hlt
cltd
add
shlb
push
ret
xor
and
push
mov
xor
outsl
mov
scas
leave
subb
xor
cmpsb
push
dec
loop
cs
sub
mov
out
sub
mov
loop
sub
cs
popa
fcomip
push
and
sub
lods
popa
movsb
jno
adc
pusha
imulb
pop
rorb
int3
push
sahf
inc
scas
add
daa
push
movsl
scas
arpl
push
inc
test
mov
test
addr16
pop
lret
fisubl
push
xchg
loope
or
push
cmp
fidivrs
movsl
cmp
sub
test
lods
sub
cmpsb
ds
insb
xlat
xchg
ja
or
or
mov
in
fdivrs
cmp
negl
xor
mov
dec
add
cmp
ljmp
lods
mov
rol
cmp
movsl
int3
jae
and
mov
insb
add
sub
jp
jne
ss
mov
rorl
xchg
jecxz
icebp
or
mov
aas
lret
out
icebp
ja
push
into
lret
into
or
mov
int
dec
push
mov
popa
cltd
addl
add
xlat
ret
arpl
int
adc
aaa
leave
adc
xor
ds
pop
cmp
xchg
mov
mov
dec
add
xchg
xchg
mov
cmp
inc
fnstsw
sahf
ss
cmp
test
scas
out
push
cmp
or
icebp
fcmovne
loop
sub
push
sti
push
popf
outsb
and
mov
push
mov
push
ljmp
movsl
add
imul
addr16
loopne
leave
mov
mov
inc
mov
ret
adc
addr16
dec
hlt
ret
fildl
mov
or
fldenv
cmp
pushl
inc
xchg
xchg
pop
xchg
add
push
jle
jle
pop
idivl
out
xchg
mov
jle
jp
pusha
repz
mov
sub
adc
and
jns
mov
fstpl
xchg
inc
push
mov
ss
lahf
sti
mov
imul
lds
push
mov
notb
sti
mov
xor
inc
mov
test
scas
dec
xchg
clc
inc
lret
mov
fs
test
xchg
xor
cmp
mov
pop
jp
int
test
movsb
inc
xchg
push
mov
addr16
inc
es
lret
and
test
dec
sti
jns
aas
call
jl
fs
dec
popf
push
jl
push
ljmp
add
lahf
lock
mov
insb
or
sbb
xchg
cmc
jmp
les
xchg
dec
sbb
lock
fs
jg
cltd
gs
lock
or
mov
repz
jnp
out
xchg
jmp
testl
ret
mov
jno
dec
mov
aaa
and
ds
mov
mov
pushf
xchg
int
mov
jb
ljmp
and
aam
int3
call
inc
push
push
mov
daa
mov
addr16
adc
sub
aaa
aaa
ret
sub
sub
xchg
div
adc
std
jp
ljmp
add
test
mov
pop
fidivl
jbe
jg
sbb
out
push
push
push
push
into
mov
std
dec
and
mov
xchg
lock
iret
jns
push
adc
in
inc
notl
shrb
jmp
cmp
push
sub
push
sub
cmp
xchg
dec
cmp
gs
addr16
sub
cmp
cmp
cli
add
popf
popf
jmp
inc
sar
vminss
stos
mov
sub
mov
push
pop
ret
cmc
push
inc
sub
int3
leave
mov
jae
cmp
test
inc
sahf
enter
leave
lahf
mov
outsl
jmp
sbb
dec
jp
pop
cmp
inc
sbb
cmp
jbe
push
in
scas
movsb
and
and
cmpsb
jnp
fcmovb
pop
imul
or
mov
push
in
push
cltd
fwait
pop
lret
mov
adc
loop
dec
pop
stc
shrl
push
and
or
les
cmp
adc
aas
jb
or
mov
xor
dec
daa
pop
ffree
call
or
and
lcall
jae
movb
push
mov
lds
imulb
and
loope
loopne
sub
fimuls
cltd
notl
lods
sub
mov
jmp
add
out
loop
push
popf
pop
cmp
jbe
ficompl
xor
hlt
push
xchg
cmp
mov
fldz
cltd
adc
pop
mov
sbb
testl
cli
in
fidivs
sbb
push
sarb
lods
pushf
sbb
cld
adc
loope
popa
push
xor
adc
fucomp
pop
or
mov
shrb
push
push
leave
or
or
mov
roll
sub
or
fdivs
into
imul
sub
fs
mov
and
clc
sub
dec
std
adc
fbld
dec
and
daa
sub
cli
cld
mov
cmc
push
or
dec
dec
push
mov
fsub
nop
xchg
scas
and
inc
into
lods
cmpsb
pop
mov
mov
pop
sbb
lret
mov
or
sbb
push
sbb
mov
sub
lret
jmp
sahf
js
jmp
sub
les
cmp
and
lahf
in
pop
mov
repnz
cmpsl
push
test
push
pop
xchg
inc
cwtl
and
lret
out
and
fldcw
mov
push
enter
imul
adc
jno
mov
sbb
jmp
enter
lret
adc
dec
addb
insl
out
pop
add
dec
sbb
icebp
mov
fidivrs
or
popf
pop
xor
pop
lods
jns
inc
lods
cltd
adc
jo
cmpsb
pop
out
lret
cmpsb
xor
and
jg
lahf
xor
mov
or
sbbb
cmp
lcall
out
adc
ljmp
pop
jno
mov
test
pop
ja,pn
sarb
mov
daa
mov
test
or
out
cmpsl
movb
fcoms
cmp
cmc
fsubrl
jne
imul
aas
mov
xchg
icebp
jo
jbe
jl
jmp
shlb
mov
mov
cmp
dec
jecxz
inc
push
out
outsb
fidivs
pop
pop
mov
mov
xchg
clc
mov
jnp
mov
pusha
lahf
pop
jno
adc
xor
push
jle
push
je
dec
mov
repz
fsubrs
ds
enter
push
add
mov
inc
sti
and
sub
jp
mov
in
xchg
push
cmp
jbe
xchg
adc
ja
daa
outsl
in
in
xor
mov
mov
jns
sbb
outsl
mov
loopne
data16
popf
bound
int3
or
xor
and
pop
xorb
push
pop
stos
les
and
add
xor
mov
fs
decl
orl
aas
sub
mov
mov
mov
in
insl
mov
fildl
out
mov
addr16
jl
mov
popf
das
cmp
fidivrl
xchg
pop
pop
push
aam
push
imul
mov
jecxz
enter
dec
les
push
outsl
ljmp
aad
or
repz
xor
dec
sub
mov
mov
stos
rorl
cs
inc
sbb
iret
sbb
lods
hlt
mov
mov
xchg
fildll
dec
adcl
or
lods
xchg
jnp
jnp
shll
fldl
out
or
pop
test
in
mov
dec
in
mov
cmp
iret
scas
clc
loopne
xchg
xchg
and
sti
in
ret
stos
inc
mov
sbbl
add
movl
or
dec
push
icebp
xchg
sub
lock
rolb
mov
lcall
cmp
and
cmpsl
jbe
and
je
add
je
shlb
std
out
cs
mov
mov
adc
jmp
add
lret
jle
pusha
les
mov
lret
bound
lods
cwtl
sub
mov
icebp
sub
inc
jne
xlat
xlat
mov
sbb
cltd
popa
jnp
mov
mov
nop
inc
push
outsb
mov
push
and
imul
sbb
insl
dec
xorl
adc
xor
push
dec
cld
ds
mov
xchg
std
xlat
stos
pop
mov
scas
cmp
rolb
xor
in
mov
clc
sub
mov
popa
scas
xor
inc
inc
stos
mov
xorb
cwtl
jbe
cltd
daa
dec
je
mov
mov
shll
xor
sub
data16
sti
or
cli
test
cwtl
push
cmpsb
xchg
ret
mov
jno
adcl
fldl
push
xchg
out
mov
push
mull
pop
sbb
xor
scas
pop
pop
dec
mov
int
xchg
div
loop
mov
push
xchg
jne
int3
out
xor
cli
jo
push
orl
sbb
cld
arpl
mov
push
push
out
hlt
fnsave
out
insl
add
pushf
jbe
mov
push
inc
sub
lret
sub
sbb
shlb
xchg
cwtl
mov
or
fidivrl
movsl
ror
add
sub
mov
test
in
movsb
ljmp
push
rcll
shrb
mov
mov
cmp
lds
out
cmc
dec
lahf
dec
adc
fwait
dec
push
push
and
push
test
into
pop
or
xor
add
rcrb
pop
xchg
xlat
and
xchg
sti
push
fldcw
cli
sbb
dec
test
or
lods
adc
sub
lret
icebp
mov
lds
and
or
mov
iret
xchg
add
pop
jbe
loop
xchg
push
outsb
shl
mov
mov
sub
mov
adc
sbb
xor
or
add
cwtl
repz
jmp
push
outsl
bound
mov
inc
notb
lods
and
mov
jbe
push
sub
loop
xchg
mov
xor
in
jbe
dec
jo
push
cmpsl
inc
xchg
mov
dec
dec
mov
and
aad
adc
cmp
mov
cmp
mov
pusha
xor
jle
lcall
notb
push
loope
pushf
xchg
jb
lods
fs
shll
imulb
hlt
test
mov
cmp
or
scas
jge
lods
cmp
xchg
xor
popf
mov
push
xchg
add
mov
xchg
xlat
dec
xor
shll
mov
mov
cmp
jp
mov
sbb
addb
mov
add
jl
in
xchg
xchg
sbb
mov
mov
xchg
les
mov
jb
sub
popf
bound
add
or
ds
xchg
xor
enter
mov
dec
dec
aam
leave
into
mov
bound
cmp
adc
out
out
push
stc
xor
push
fmuls
filds
and
mov
stc
or
add
ficoml
dec
cmp
loopne
mov
pop
dec
jge
int
mov
popa
push
fistpll
sub
dec
xor
xchg
sbb
or
push
jmp
outsl
or
popf
jo
mov
xor
daa
pop
addr16
paddsb
repnz
inc
aad
stc
pop
rcrl
fbstp
shll
mov
shrl
cwtl
mov
inc
xchg
fisubrs
std
adc
adc
fcoml
js
test
lds
and
fs
aad
push
add
movsl
inc
mov
ds
clc
xchg
cs
xchg
mov
lods
decb
dec
inc
mov
pop
aas
mov
lahf
jecxz
mov
sub
les
mov
pushf
out
sbb
aad
lock
sti
push
mov
pop
in
lret
mov
add
in
push
fisttps
mov
mov
call
xor
sbb
xchg
out
es
jle
jne
ret
les
jo
mov
xor
aas
cmp
outsb
outsb
and
testb
fwait
xor
icebp
cmp
iret
inc
sti
lock
js
dec
xor
jb
idivb
shrb
jp
jnp
rcr
push
mov
cmpsl
lds
mov
push
pusha
outsl
imul
mov
sub
jno
sub
movsl
movsb
pop
cmovl
xor
lds
or
jle
imul
pop
mov
ret
xor
orb
xor
shrl
ds
stos
test
xor
mov
in
adc
mov
pop
lcall
lret
pop
push
test
inc
adc
out
das
jae
cmc
cmp
push
int3
dec
jnp
nop
adc
in
dec
fsubl
adc
pop
repz
les
mov
xchg
mov
enter
push
fdivp
repnz
xchg
icebp
cmp
cmp
jnp
adc
sbb
aas
gs
dec
lret
roll
jl
int
inc
dec
inc
out
loop
sub
and
sbb
leave
sbb
lock
stc
jp
imulb
adc
mov
pop
icebp
push
in
jae
jns
dec
mov
mov
push
rclb
outsl
fisttpl
shll
popa
loop
clc
adc
push
sbb
pop
add
push
cmpsb
cli
xchg
add
adc
jle
adc
daa
xor
mov
loopne
xlat
pop
insl
mov
mov
mov
mov
in
mov
sti
fldenv
das
sub
xlat
pop
or
xor
inc
leave
mov
insl
lea
or
mov
std
fwait
lock
pushf
pop
gs
xor
xor
mov
xor
mov
add
dec
addr16
mov
aaa
sarb
mov
gs
sub
mov
sarl
dec
js
idivl
xchg
fsubrl
mov
mov
or
cmpsl
sub
lds
fisttpl
jb
or
sarb
test
das
ljmp
inc
fwait
ret
inc
pop
xchg
pop
push
and
push
xchg
cmc
call
imul
faddl
push
cmpsl
jg
fldcw
mov
jecxz
bound
outsb
shl
ja
and
fcomps
movsb
fdivrs
rcrl
xlat
test
inc
shr
les
jnp
lret
shll
out
sub
xor
sub
out
push
pushf
fwait
out
add
inc
cmp
sbb
cltd
cmp
subb
xchg
shl
sub
add
ret
loopne
mov
adc
pop
stos
and
jb
gs
pop
mov
adc
les
xlat
nop
pop
xchg
cmpsl
repnz
mov
push
js
push
ret
xchg
sub
sti
in
jge
pusha
loop
test
rcl
call
push
sti
lcall
mov
mov
call
outsl
inc
or
fmul
js
pop
sbb
and
cwtl
hlt
push
outsl
dec
ljmp
fists
push
into
inc
popa
fmull
inc
out
xor
or
ficomps
dec
imul
mov
and
popa
xchg
nop
push
js
cmpsb
xchg
stc
adc
jmp
out
mov
adc
adc
movsb
mov
lahf
adcb
ficoml
enter
mov
pop
aad
loope
je
jo
divb
aam
out
jl
test
in
sbb
sbbl
aad
jbe
sub
jmp
jo
jle
fsts
out
outsb
inc
adc
or
and
sbb
nop
mov
addl
add
mov
xchg
push
std
add
sbb
sbb
cld
test
inc
test
movsl
jbe
add
cmc
out
sub
cli
bound
shl
das
sub
dec
add
mov
xchg
mov
mov
call
pop
xor
push
xor
fs
mov
adc
lcall
mov
jns
jns
xchg
pop
or
sub
sub
add
les
or
out
ffree
das
cmpsb
aad
repz
xor
or
mov
mov
sahf
jno
icebp
xor
int
mov
cs
and
and
stc
mov
jnp
pop
fdivrs
iret
adc
mov
cli
je
or
jae
js
jbe
lahf
jbe
cmp
sahf
mov
mov
xor
pop
in
xor
jb
mov
cli
or
lods
adcb
cltd
and
ss
add
mov
pop
push
aam
jbe
jmp
fisttpl
xor
mov
arpl
jno
xchg
cltd
test
jl
dec
mov
mov
outsl
xchg
aam
mov
outsb
or
push
cmp
out
sub
divps
lret
movsl
adc
repz
popa
in
push
insb
jne
pop
add
in
jp
pop
mov
inc
mov
retw
mov
jg
add
xchg
xchg
cmp
cmp
inc
jecxz
lods
add
aam
int3
inc
sbb
or
lods
xor
mov
pop
into
mov
lret
pushw
dec
lods
ljmp
sbb
pop
shlb
decl
adc
test
aam
mov
ljmp
sub
sarl
xor
jo
mov
ss
mov
pop
jg
fistl
inc
icebp
test
test
mull
or
or
mov
add
ss
mov
push
je
add
xchg
popa
pushf
call
in
movl
and
gs
fnstenv
fists
or
arpl
and
gs
lret
movd
mov
jge
jnp
fisubs
shll
push
rcll
or
push
or
andl
pop
pusha
leave
fcmovnu
adc
ljmp
jne
lock
push
sbb
inc
mov
iret
pop
jb
jmp
dec
stos
dec
fs
adc
push
sbb
jmp
inc
xchg
sub
sub
and
push
fisttpll
pop
ret
mov
lret
shl
repnz
jno
mov
aas
inc
mov
inc
sbb
cmp
pop
ss
add
popa
pushf
or
repnz
sbb
stc
std
xchg
xchg
outsl
lret
mov
add
dec
sub
lret
filds
lret
es
mov
xchg
xlat
mov
ret
mov
jbe
and
arpl
pop
jmp
dec
cmp
popa
cmp
mov
mov
outsb
pop
ss
add
nop
jbe
xchg
sbb
xchg
xlat
mulps
repz
insl
aam
js
or
data16
rol
stc
sub
push
sahf
cmp
mov
dec
and
push
ljmp
sbb
and
sub
movsb
addl
adc
fwait
push
mov
pushw
lret
push
jnp
outsb
xor
push
xor
cld
xor
pop
jle
dec
mov
aam
fstps
jl
xchg
icebp
adc
test
lret
mov
mov
lcall
mov
pop
out
mov
sub
jmp
or
fmul
mov
vpmacssww
adc
sahf
iret
cld
movsl
fiadds
andb
inc
mov
scas
ret
into
out
mov
test
popf
ret
movsb
fwait
sbb
mov
lret
test
out
pop
dec
cmpsl
and
ljmp
pop
test
mov
fidivl
xchg
movsb
test
jb
or
cmc
shll
sbb
jbe
xchg
sbb
jmp
xor
push
cwtl
push
in
inc
xor
mov
jns
outsl
int3
lret
imulb
into
rorb
in
and
pop
mov
adc
shrl
and
shrl
or
pop
pop
mov
sbb
stos
idivl
addr16
shrl
adc
insl
push
cmp
push
lret
fwait
lock
ljmp
jmp
cmp
add
jae
pop
lret
loopne
push
rorl
dec
add
test
inc
shll
jl
pop
cmpsl
cs
add
jno
xchg
lahf
dec
mov
cltd
fcomp
dec
add
mov
fsubl
je
jmp
repnz
dec
xchg
xor
mov
sti
clc
push
cmpsl
cmp
les
lcall
xchg
pop
push
push
lock
mov
pusha
and
cmp
repz
cs
stc
cmp
out
nop
or
push
movsb
dec
jmp
mov
pusha
arpl
sub
dec
xor
aad
sbb
lods
test
or
mov
rcrl
lahf
or
pop
cld
ja
or
inc
shl
dec
xor
cld
sbb
push
lods
inc
notb
xchg
jmp
push
std
test
cmpb
mov
stc
push
pop
popa
push
into
cmp
std
adc
pop
sub
add
xor
js
stos
fwait
lret
sbb
addl
mov
xchg
cmp
cmpsl
mov
push
inc
jb
imul
jp
gs
clc
shl
out
loop
and
or
jae
outsb
push
inc
push
ret
in
fistl
scas
test
outsb
jb
sub
dec
test
imul
ficomps
das
push
rcrb
sahf
call
out
and
mov
xorl
scas
inc
je
sahf
mov
mov
or
fbld
repnz
int
pushf
loope
dec
mov
into
add
enter
mov
mov
dec
test
fiaddl
lods
subb
mov
hlt
imul
sub
stc
ss
sub
inc
mov
test
lock
jns
add
xor
add
xchg
jns
inc
mov
movsb
sub
push
pop
popa
cmp
mov
je
addr16
cmp
aas
lret
imul
sarl
and
mov
das
mov
orl
push
mov
jnp
pop
ret
int
mov
mov
repnz
call
mov
arpl
lods
pop
clc
lahf
repz
mov
and
mov
jl
into
je
add
in
int
scas
std
dec
call
push
cmp
daa
mov
lcall
shlb
jae
add
xor
xor
mov
cs
push
cmpsl
test
jp
and
int3
and
in
fsts
lods
pop
stc
movsl
imull
stos
sbbl
sbb
shlb
pop
dec
or
dec
btr
sbb
and
shrb
mov
jge
push
mov
adc
cmpsb
fisttpl
or
loope
hlt
jno
fldenv
int3
fbstp
sub
int
sub
cs
sbb
push
inc
sbb
test
mov
pop
and
aaa
push
sub
rcll
loop
iret
fs
lcall
ret
into
movsl
ret
mov
movsb
addr16
sahf
lods
jbe
icebp
popf
pop
cmp
dec
incl
ja
out
and
loopne
xchg
adc
pop
mov
mov
lock
jecxz
decl
sub
push
sar
dec
mov
pop
je
pusha
dec
std
jns
ficompl
dec
icebp
mulb
movsb
mov
xor
and
jne
jnp
cwtl
push
lock
jecxz
dec
cmp
cld
std
sbb
fwait
inc
adc
enter
fwait
mov
popf
fstp
lret
inc
jp
mov
cmp
mov
jl
test
push
and
in
sub
enter
xchg
jbe
add
pop
lods
xchg
das
fsubp
sbb
adc
jnp
jns
aad
in
cmp
jo
not
jecxz
and
outsb
in
inc
cmc
jns
pop
out
or
or
aam
pop
sub
mov
das
pop
push
fstpl
xor
mov
pop
sub
dec
lock
xchg
cli
jns
ret
imul
into
cmp
leave
out
push
lea
cwtl
jmp
dec
std
dec
cmp
and
icebp
imul
jno
iret
inc
sti
nop
in
add
and
dec
cwtl
lea
xchg
push
add
mov
test
popf
daa
sbb
xor
inc
and
xlat
mov
movb
jne
mov
sbb
mov
adc
pop
or
inc
rorl
in
jle
jmp
test
add
mov
cmp
jae
inc
arpl
es
pop
sub
ret
shlb
push
xchg
clc
cmp
or
xor
pop
jge
lods
rcr
cmpb
push
add
jno
mov
in
sub
dec
mov
loop
pop
in
mov
or
add
outsb
ja
mov
or
sbb
test
cmp
jae
adc
ficoms
pop
jl
and
sub
adc
stos
xchg
pop
test
inc
mov
dec
cmpsb
add
mov
dec
pop
xchg
sbb
jae
popl
sub
and
adc
fimull
loop
push
xor
xchg
jmpw
imul
inc
dec
sub
jg
movsb
mov
stc
pop
fiadds
stos
ds
scas
xchg
mov
xchg
std
movsb
outsb
lods
push
inc
pop
mulb
mov
cmp
push
mov
mov
inc
xorb
mov
xor
and
xchg
mov
nop
dec
dec
dec
das
mov
jle
aad
mov
jl
sub
xor
add
nop
dec
sarb
movsl
jno
jb
dec
mov
fmull
mov
dec
aam
sahf
jo
mov
inc
pop
lea
test
push
lods
int
sub
ret
xchg
mov
push
push
dec
ret
sbb
pop
mov
and
inc
bound
mov
dec
pop
and
sahf
inc
add
mov
adc
int3
lahf
iret
lret
mov
jg
sub
mov
notl
pop
mov
or
pop
dec
test
xor
test
inc
daa
inc
test
inc
cmp
rolb
cs
cmpsb
js
cmp
mov
and
notb
mov
adc
cmpsl
mov
movsl
faddl
cld
push
out
orl
dec
movsl
iret
xor
mov
in
jle
rol
pop
jne
mov
rolb
arpl
lahf
adc
xchg
insb
add
pop
and
add
popf
dec
push
ja
pop
ret
stos
into
roll
mov
fbstp
push
xor
insb
xchg
sub
inc
inc
insl
bound
adc
sahf
je
or
pop
in
out
pop
int3
out
decl
jns
fwait
dec
inc
push
pushf
adc
dec
jge
mov
pusha
sbb
js
stos
cmpsl
cwtl
cmp
fistpll
pop
es
in
xor
stos
push
icebp
rol
or
aam
out
xor
sbb
movsb
sub
xchg
aam
jge
jle
icebp
stos
add
pop
pop
jnp
xor
fdivr
mov
push
addr16
fisttpll
xchg
dec
aad
push
sbb
and
xchg
adc
popf
int3
pop
gs
movsb
pop
xor
outsb
aaa
daa
xchg
aad
cmp
or
xchg
add
mov
inc
xchg
nop
add
movsb
mov
inc
sbb
cmp
sub
scas
pop
aaa
mov
pop
cmp
jne
mov
test
mov
xor
jp
cmp
adc
sbb
out
push
mov
jno
xchg
mov
cmp
sti
leave
xchg
or
cli
imul
popa
iret
and
inc
or
push
pushf
pop
mov
jo
call
das
dec
adc
inc
inc
mov
inc
jns
lock
stos
xchg
jae
clc
xor
loop
lods
stos
mov
cmc
xchg
pushf
loopne
cltd
adc
sub
adc
push
cmc
in
loop
sub
repnz
cmpsb
stc
ret
mov
cmp
mov
lea
loop
push
ds
mov
dec
fs
sar
mov
fistpll
push
test
lahf
jno
fs
mov
fwait
shl
imul
inc
andl
push
call
and
in
push
xlat
sub
out
pushl
aad
cmp
rolb
mov
scas
jns
jns
dec
add
dec
test
insb
pop
or
sti
push
jns
rcrl
imul
std
pop
test
int3
xchg
out
or
movsl
mov
jae
mov
adc
xchg
insl
mov
push
pop
fisubs
scas
mov
sub
shr
addr16
cltd
in
fldz
pop
pslld
mov
imul
mov
cmp
adc
loop
sub
or
cli
mov
lret
bt
mov
lea
inc
movsb
fbstp
shrl
sbb
aas
sahf
jns
sbb
or
pop
leave
xor
lods
ja
sbb
imul
lock
lret
data16
outsl
stc
out
pop
push
out
mov
lock
leave
pop
add
lcall
jge
sti
shl
divb
pop
sub
add
cld
ftst
movsb
xor
pusha
sub
pop
mov
sub
lret
mov
cmp
aaa
scas
jb
sub
lahf
bound
ljmp
loopne
loope
orb
out
ja
mov
popa
mov
push
cmp
mov
int3
in
daa
cmp
repnz
shlb
xor
insl
fadds
mov
inc
pop
dec
ja
imul
mov
and
sub
shl
shlb
pop
repnz
add
int3
insl
lock
ss
cmp
sbb
ret
cmp
xchg
clc
xlat
add
and
mov
shrl
mov
rclb
push
sbb
pop
jmp
popf
arpl
pop
mov
adc
in
out
jo
ja
push
cs
out
movsb
sbb
inc
cmp
cmpsl
sub
js
int3
lods
in
aas
jge
out
pop
mov
out
rorb
jle
lock
lods
add
pop
mov
fnstenv
pop
xchg
es
ffreep
sub
mov
fdivp
mov
inc
outsb
xor
je
das
pop
mov
call
add
sub
mov
dec
mov
push
pop
mov
repz
sbb
ljmp
clc
jae
cld
push
in
and
fsts
test
cmpsb
in
inc
out
pop
sub
imul
mov
test
outsl
and
adc
sahf
addb
dec
cli
dec
add
xorb
push
sarl
cmc
xor
xchg
and
and
cmp
in
add
push
hlt
movsl
and
mov
rcrl
pop
dec
stos
mov
mov
jne
js
mov
mov
mov
pop
cmpsl
cli
or
mov
mov
popa
mov
cmp
jnp
add
mov
in
into
pop
mov
pop
imul
call
sahf
dec
outsb
pop
popa
adc
into
and
jmp
movsb
mov
ds
and
cs
inc
sub
or
xchg
jp
inc
hlt
sub
add
jmp
pop
bound
sub
int3
repnz
sbb
mov
jnp
jno
mov
ds
xchg
or
faddl
jae
roll
cmp
inc
or
sub
testl
sbb
hlt
enter
sbbb
out
hlt
outsb
xchg
xor
inc
mov
test
mov
sbb
jmp
fldenv
and
and
and
rcrl
xchg
mov
mov
insl
out
dec
sbb
cmpsb
movsb
mov
sbb
in
loope
push
lea
lds
notl
arpl
scas
call
adc
add
mov
xchg
mov
cmpsl
fwait
sbb
mov
fwait
cltd
sahf
scas
xor
popa
enter
mov
mov
stos
dec
sub
push
and
out
lret
orb
adc
syscall
jns
push
daa
cmp
sub
mov
dec
mov
in
into
and
mov
mov
jns
int
jge
mov
mov
loop
pop
mov
lahf
pop
nop
adc
insl
fwait
out
insl
fstpt
scas
mov
pop
and
rcrl
add
ja
popa
mov
aam
testl
push
lret
sbb
cmpsl
icebp
and
mov
test
jne
loop
sbb
xchg
push
inc
jo
xchg
cwtl
lret
mov
xchg
dec
mov
loopne
mov
loop
mov
inc
mul
enter
jne
rol
dec
and
mov
jne
push
xor
ds
outsb
fsts
out
out
fcmovu
cmpsb
sbbb
mov
mov
xchg
push
sahf
pop
int3
push
mov
jnp
loopne
pop
sarb
dec
fisubrs
adc
xor
das
es
ss
out
push
arpl
adc
adc
inc
and
test
shll
add
ljmp
and
addb
pop
addr16
imul
push
rclb
data16
cmp
sub
test
jmp
push
in
clc
jno
call
xor
xor
es
mov
xlat
dec
mov
jl
pop
dec
xor
mov
mov
out
sbb
mov
cmpsl
arpl
sbb
mov
inc
mov
imul
icebp
je
mov
pop
iret
adc
mov
aad
jge
int
orl
sti
sbb
cmp
pusha
dec
push
push
flds
in
cs
out
jg
xlat
cmp
cmp
cmp
into
sbb
and
scas
dec
iret
es
test
mov
pop
cmpsb
clc
and
sbb
xor
mov
jne
jae
jge
sbb
xchg
loop
mov
packssdw
je
iret
sub
mov
pop
jl
push
cmpb
jne
mov
cltd
sbb
pop
cmp
dec
cmc
das
lods
push
fcmovnu
in
fstps
pop
sti
adc
xchg
add
inc
inc
push
test
mov
repnz
push
and
fstp
movsl
mov
fldl
pop
rolb
clc
pop
push
mov
jb
fadd
jg
insb
lds
jg
leave
jecxz
xchg
mov
addl
xlat
enter
pop
inc
sub
lock
ja
lret
aas
fwait
or
pop
adc
ljmp
in
and
push
faddl
adc
rolb
arpl
cmp
lret
inc
test
mov
call
inc
jns
dec
pop
or
or
push
scas
mov
testb
jbe
ja
sub
sub
and
insb
jg
mov
arpl
shll
add
add
loop
mov
jp
icebp
je
sbb
pusha
add
adc
xor
test
mov
inc
adc
daa
sbb
inc
mov
std
mov
daa
cmpl
push
imul
nop
dec
test
mov
mov
repz
or
push
and
cmp
sub
fistps
and
stc
cltd
sub
cmpb
jmp
pop
jb
cmpsb
stos
subb
rcr
mov
loop
dec
dec
mov
inc
imul
jp
fldl
xlat
sar
or
aas
loope
outsb
rcr
adc
in
xchg
test
jne
xor
mov
stos
insb
insl
mov
clc
sar
adcb
mov
dec
pop
mov
sbb
push
fs
add
subl
aad
int
cs
mov
jno
dec
out
inc
jnp
iret
rclb
cmp
adc
or
inc
aas
hlt
mov
loop
cmp
mov
jb
xor
cmp
push
jns
cmp
test
movsl
subb
rcl
adc
push
aam
rcrl
pmulhuw
in
dec
cmp
fisubs
push
loop
cmp
xchg
adc
fdivs
insl
icebp
push
and
pop
sbb
movsl
imul
xchg
xchg
fs
mov
leave
mov
or
xor
jmp
lahf
push
adc
in
shll
stc
cltd
xor
mov
xchg
push
mov
mov
in
pop
push
aas
lds
cmp
movsb
das
das
fstl
imull
and
js
adc
inc
scas
dec
xor
out
and
call
sbb
or
mov
lret
xchg
adc
adc
cltd
dec
jno
xchg
loop
push
inc
pop
mov
xor
or
dec
cltd
cmp
ret
mov
pop
aad
pop
popa
sub
loope
mov
pop
into
fwait
xor
pop
push
fs
in
sbb
add
cmpl
fs
js
mov
inc
or
dec
pop
movsl
cmpsl
out
mov
std
movsb
and
or
lock
lods
xchg
cmp
cmpsb
dec
lds
lahf
push
jmp
cmp
inc
imul
lock
xchg
into
jp
push
pop
idivl
das
bound
addr16
mov
fwait
jp
jle
cmp
into
rep
pop
sbb
daa
cmp
add
aam
out
jge
xchg
xchg
sub
mov
jnp
mov
aas
fcomip
xor
pop
in
daa
and
aas
mov
repnz
and
add
push
jmp
add
push
aas
jno
icebp
out
notb
stos
cltd
xor
mov
add
lahf
dec
push
mov
leave
lahf
aam
pop
jno
push
add
sub
mov
cmp
out
roll
jbe
mov
scas
inc
inc
fisubrl
stos
fisubrl
or
cmpb
aaa
in
in
dec
lret
xchg
repz
xor
mov
imul
dec
mov
jns
pop
fimull
outsl
ljmp
mov
jle
lea
shlb
loopne
out
mov
sub
rclb
dec
and
xor
int3
inc
stos
call
sahf
mov
mov
or
enter
lcall
test
stos
gs
or
push
adc
jle
jbe
mov
pop
fs
add
repnz
shlb
push
out
lret
ljmp
or
ljmp
icebp
shlb
jmp
mov
mov
fildl
stos
adc
push
sar
scas
mov
movsl
push
into
out
je
push
nop
dec
push
daa
mov
mov
cmc
iret
or
cmc
xchg
test
mov
cltd
and
dec
mov
test
mov
gs
sub
movsb
push
or
cli
in
daa
enter
outsl
mov
out
movsl
ror
pop
sbb
ficompl
pop
shlb
cltd
inc
push
and
orb
mov
negb
mov
xchg
out
out
mov
hlt
fs
mov
inc
cmp
std
pop
cmp
sub
sbb
hlt
in
sbb
cmp
xchg
daa
or
sub
add
jo
inc
dec
pop
mov
adc
das
sub
sbb
adc
xchg
pop
ret
ret
and
xor
xor
aas
js
mov
in
jnp
jbe
dec
mov
mov
nop
mov
inc
push
push
pop
lcall
sbb
rclb
inc
push
les
push
shll
clc
add
les
xor
xor
ds
sbb
xor
mov
cmp
push
adc
incl
xor
xchg
sbb
jb
mov
adc
clc
repz
push
jae
sub
aas
sub
hlt
mov
hlt
push
jno
clc
inc
aaa
add
es
lcall
in
jg
stos
push
cmp
cmp
sbb
addr16
sbb
cmp
cwtl
sbbb
pop
xlat
lret
subb
das
xorl
pop
mov
jae
pop
sub
push
inc
inc
insb
mov
sahf
pop
mov
cmp
loop
es
jo
jb
insl
inc
adc
and
js
sbb
fcomip
fistps
aaa
leave
shll
cwtl
cld
mov
pop
loopne
shrl
les
stos
xlat
sub
adc
push
adc
dec
add
movsl
fimuls
iret
loop
imul
cmpsl
cld
jne
push
add
inc
in
into
mov
pop
gs
lea
xchg
cmp
mov
push
add
cmp
out
adc
mov
sti
or
dec
jle
pop
leave
jbe
std
arpl
iret
mov
mov
mov
or
jne
outsb
stos
loop
test
fcmovu
mov
sbb
add
xchg
jmp
outsb
jl
icebp
stc
movsl
or
adc
xor
mov
inc
adc
out
mov
add
das
scas
sbb
and
push
jns
cmc
mov
cltd
insl
mov
fnstcw
or
jmp
repnz
inc
stos
lahf
jmp
lret
xor
ja
and
pop
insl
insb
in
add
cmp
mov
ljmp
and
and
outsb
dec
leave
jecxz
nop
fwait
cmpsb
or
sub
jge
xchg
iret
add
mov
imul
dec
mov
sahf
lea
push
jb
out
pop
enter
pop
fisubl
addr16
dec
mov
cmp
into
lds
xchg
cli
dec
in
bound
imul
and
add
daa
call
mov
mov
stos
popa
mov
sbb
inc
stos
xor
adc
roll
push
inc
add
adc
mov
sbb
dec
sub
jl
cmpsl
adc
daa
inc
dec
lret
inc
cmp
xorb
test
jbe
dec
mov
cs
cmp
push
xchg
pushf
jb
add
add
xlat
or
addb
stos
inc
inc
adc
iret
fstps
imul
dec
add
jl
mov
jb
pushf
dec
mov
pop
sbb
scas
jo
xor
mov
stos
repnz
or
jl
mov
cmpsb
add
push
jge
xchg
pop
mov
aam
rclb
push
xlat
push
pop
xor
daa
scas
mov
daa
es
cmp
shl
jnp
test
adc
or
jp
push
dec
add
mov
xchg
popa
hlt
push
inc
mov
pop
subl
sbb
xlat
add
cmp
fimull
and
and
fs
sti
sbb
sahf
xor
pusha
jo
mov
push
out
and
cmp
mov
cmp
jo
and
mov
cs
scas
mov
test
lods
pop
movsb
inc
xchg
or
pop
out
dec
or
xchg
pop
call
rclb
ret
call
clc
hlt
jle
pop
xor
cmp
cmp
sub
sub
out
bound
in
cltd
push
mov
pop
scas
call
clc
imul
fwait
cmp
xor
adc
push
xchg
rol
jae
xchg
lahf
ret
call
cs
les
int
jge
bound
cmp
inc
inc
sbb
cmp
ja
inc
fcoml
in
aas
cmp
fstpt
jb
shll
cli
push
jne
out
fisubs
mov
imul
and
arpl
popf
sti
out
shl
pop
mov
sbb
insl
fldcw
push
testl
sarb
nop
sub
les
lds
rcrl
pop
addl
dec
sbb
mov
lret
mov
xchg
and
pusha
and
pop
pop
pusha
lock
xor
mov
popf
stos
scas
imul
lcall
fs
xchg
loopne
sub
xchg
int3
jnp
sub
fidivrs
movswl
mov
jle
loopne
push
mov
jle
jecxz
movsb
adc
jle
jg
dec
mov
rclb
mov
and
lods
mov
lcall
int3
out
sbb
loopne
jp
lcall
loope
inc
pop
sahf
or
fldcw
sub
cltd
jle
inc
fcompl
push
cmp
dec
xchg
ret
call
adc
loop
sbb
sarb
and
push
in
jg
adc
and
ds
rcrl
insb
icebp
mov
fiaddl
inc
lods
xor
dec
std
sbb
call
ss
sbb
or
les
ja
or
push
pop
int3
sbb
repnz
cltd
cmp
js
aaa
out
mov
pop
jae
xor
stos
add
stos
sbb
or
jnp
enter
mov
addl
lahf
pop
fsubs
scas
dec
xor
cltd
dec
lea
sub
jne
aaa
fnclex
cmpxchg
imul
mov
mov
mov
add
aam
dec
mov
jge
add
mov
in
sbb
call
mov
dec
ja
stos
xchg
mov
push
jae
pop
sub
in
nop
insl
out
cmp
cli
sbb
fstpt
jge
insl
mov
mov
cmp
mov
rclb
jge
in
dec
push
leave
cld
mov
int
cmp
cwtl
insl
cmp
jo
out
xor
mov
mov
ljmp
and
push
aam
mov
inc
xchg
mov
mov
cmpsl
fs
mov
push
jmp
test
or
jno
mov
neg
adc
cli
jno
test
add
imul
aam
bound
imul
mov
and
inc
or
sbbl
int3
lods
test
lock
pop
dec
lcall
cmc
xor
dec
test
lcall
aaa
mov
inc
ret
and
jecxz
dec
js
xchg
out
fcomi
and
stc
mov
sub
insb
cmp
push
dec
jmp
pop
push
aam
shrb
push
jg
and
out
sub
andb
inc
divb
dec
xchg
int3
out
sub
xchg
inc
adc
insb
scas
or
insb
xchg
aaa
mov
fnstenv
shll
out
cmc
ret
dec
enter
lcall
ret
gs
fmull
stc
cs
popf
nop
mov
scas
stos
jnp
scas
mull
movsl
cmp
popa
push
add
out
inc
xor
insb
roll
and
add
sub
dec
mov
mov
push
fs
and
cmp
sub
push
ljmp
cmpsl
jae
gs
test
addr16
cli
xchg
es
dec
test
mov
or
dec
mov
or
pop
popf
fwait
or
pusha
pop
shl
shr
insl
repz
bound
gs
fs
jecxz
sub
rol
pop
mov
lea
shll
scas
jmp
pop
xor
rorl
por
call
orb
jge
push
jecxz
mov
push
je
jno
out
or
das
and
int3
jge
pop
clc
lcall
sub
pop
mov
xchg
aas
xchg
pop
roll
jno
daa
jnp
and
cmp
js
insl
leave
mov
or
cmp
out
jl
icebp
add
insb
es
add
lock
popa
jne
and
ljmp
aad
sub
mov
xchg
insl
push
cmp
faddl
sbb
daa
or
imul
adc
sbb
add
pop
mov
hlt
or
or
pop
iret
ja
or
mov
js
cmp
mov
xchg
push
cmpsb
jns
mov
imul
idivl
and
or
cs
xor
lahf
aas
push
cmp
and
test
rcrl
pop
sub
mov
sub
scas
pop
negb
insl
xchg
or
popa
mov
mov
adc
stc
mov
fnstsw
mov
xchg
insl
pusha
int3
mov
mov
mov
push
mov
inc
push
cld
adc
mov
aad
lahf
roll
testl
jno
dec
adc
outsb
inc
mov
adc
sub
push
jnp
inc
dec
js
outsl
in
mov
popa
xchg
inc
ja
les
pop
jle
lcall
cmp
scas
add
mov
out
push
ret
inc
stc
dec
xor
pop
fs
shll
js
xor
xchg
xchg
sub
inc
in
daa
icebp
shll
fisubl
aas
add
adc
inc
int
gs
mov
push
cmovae
jmp
lods
int
push
aas
repnz
push
lea
stos
stos
dec
push
xor
jg
mov
int3
sbbl
ficomps
xchg
mov
std
dec
je
mov
dec
daa
aas
popf
mov
loope
in
sub
and
movsb
xor
dec
stos
inc
call
push
jae
fbld
int3
mov
sub
jb
and
rcl
shl
int3
pop
clc
cmp
movsl
cli
xor
outsl
lret
pop
and
stos
adc
mov
fdivrp
and
aas
test
cmpsb
les
pop
outsb
sarb
in
adc
xchg
dec
push
shlb
adc
inc
ret
or
and
inc
push
mov
or
les
roll
xchg
mov
or
das
pop
mov
test
xchg
fidivrs
aam
add
xor
ret
push
ficomps
int
mov
outsb
cmp
pop
add
fists
imul
fsts
lret
push
add
push
aad
xor
jo
mov
in
push
int3
or
movsl
hlt
mov
pop
outsl
inc
lock
stc
mov
aad
inc
clc
lds
cmpl
pop
mov
xchg
sbb
jb
pushf
jecxz
out
or
aad
mov
shrb
push
jne
mov
call
mov
mov
lcall
jbe
inc
cli
pop
sahf
outsb
rorb
push
jge
sbb
push
jno
xor
nop
jb
or
cmpsb
mov
mov
xrelease
push
stos
cmpb
xchg
pusha
sub
es
mov
subl
arpl
xor
outsb
dec
dec
xchg
scas
mov
mov
fnstsw
sbb
andb
test
mov
aaa
repz
xchg
outsb
in
push
cwtl
and
cmp
inc
add
or
repnz
dec
gs
out
dec
test
imul
sub
jbe
xchg
pop
mov
scas
inc
ljmp
sub
ds
into
bound
and
or
cmpsl
push
out
pandn
enter
cld
jecxz
sub
in
mov
js
jno
pop
jmp
stos
movsb
pop
pop
cmp
mov
cmp
inc
jge
sub
and
dec
js
xorb
roll
test
fistl
cld
push
cmpl
mov
dec
rcrb
cli
and
leave
add
pop
test
das
loope
mov
dec
popf
fstp
jnp
inc
jnp
xchg
adc
insl
subb
mov
loop
test
cmp
les
lahf
daa
aad
xor
imul
or
jg
daa
mov
xor
les
push
cwtl
fldt
int
cwtl
or
andb
icebp
push
adc
cmp
mov
fidivrl
inc
loop
mov
mov
mov
sub
cmpsl
sbb
and
dec
dec
dec
cmpl
mov
movsb
das
sahf
leave
arpl
repz
les
test
mov
fimuls
leave
fiadds
and
bound
cmp
mov
add
rolb
shrb
dec
sub
iret
jae
loopne
cmp
dec
cmpsb
cmp
pop
int3
test
lret
push
test
mov
aaa
leave
add
sti
jo
shll
rclb
mov
pop
lea
adc
out
mov
push
jle,pn
and
mov
js
cmp
or
cmp
sbb
shrb
test
das
add
aam
mov
ret
jbe
mov
inc
rcll
daa
push
addr16
lods
and
mov
add
loop
and
dec
fwait
dec
sbb
xor
ja
scas
sub
ds
xchg
jp
adc
das
xchg
adc
dec
pop
fisubrl
movsb
sub
add
cltd
add
sub
xchg
push
idiv
imul
mov
cmp
popf
icebp
jle
mov
mov
mov
pop
mov
xor
test
andl
pop
sub
cli
into
fistl
push
lds
faddl
je
cmpsb
iret
mov
dec
call
or
xchg
and
pop
jl
fadd
subb
adc
add
xor
mov
test
xchg
int3
jp
dec
pushf
mov
cmp
mov
mov
cmpsl
mov
adc
mov
adc
xchg
lret
xchg
push
adc
pop
mov
mov
add
pushf
cmp
into
push
or
lock
pop
in
sbb
adc
sub
jp
sub
add
movsl
push
mov
xor
cld
xlat
mov
dec
je
sbb
lods
lods
loopne
enter
cli
rclb
fmull
into
mov
mov
xlat
lock
nop
or
mov
bound
pop
add
or
sub
push
pop
movhlps
outsb
cmp
mov
sub
cmp
and
in
in
jae
cmp
les
aam
daa
movsb
int
push
sub
push
insb
jmp
sbb
data16
lret
inc
scas
adc
adc
stos
aas
push
arpl
aam
mov
movsl
imul
xchg
dec
pushf
push
enter
ss
push
cwtl
xchg
shl
jno
mov
test
nop
jmp
xor
das
lahf
push
fs
adc
fs
sub
ljmp
mov
scas
aam
or
mov
das
movsl
or
push
sub
mov
fistpl
pop
dec
stc
out
daa
aaa
subb
cmp
cmp
testb
sbb
aas
xchg
lcall
fcoml
cmc
pop
jge
sbb
adc
xchg
insl
int
adc
xchg
imul
test
imul
dec
sbb
inc
xchg
lcall
pop
jge
pop
fdivs
mov
js
aaa
clc
insb
insb
dec
ret
sbb
adcl
inc
ljmp
scas
pop
cld
push
add
jb
es
addl
lea
and
hlt
adc
dec
xchg
in
push
dec
out
and
inc
sar
popf
pushf
imul
repnz
mul
push
push
add
repnz
jmp
mov
nop
loope
dec
xlat
clc
cmpsl
sub
mov
mov
cmp
aaa
push
mov
sub
imul
sti
or
pop
sub
sub
mov
xor
push
xor
adc
mov
dec
inc
push
xchg
jmp
mov
push
ss
jg
das
outsb
and
pop
or
cmc
xchg
jg
mov
mov
in
push
repz
dec
repnz
pusha
pop
xor
cmp
dec
add
push
xchg
cmovo
pop
out
dec
inc
insb
adc
lea
add
push
data16
jo
xor
call
notb
jle
jbe
cmpsl
ficomps
das
shr
andb
pop
pop
arpl
and
js
cltd
ja
cmpsl
icebp
push
ret
frstor
adc
mov
lds
push
jb
popa
mov
xchg
cli
mov
inc
pop
jmp
leave
lcall
or
sahf
xor
shlb
mov
mov
movsb
pop
lods
mov
push
es
jg
repz
push
inc
stos
fyl2xp1
sub
push
bound
shll
mov
or
out
xor
dec
ror
addr16
dec
les
sub
push
xchg
push
mov
adc
into
sbb
dec
inc
xchg
sub
adc
push
aaa
js
and
fsubs
pop
jp
pop
jb
dec
aam
lods
cmpsb
dec
cmpsl
inc
xchg
sbb
dec
push
mov
loope
ds
cltd
xor
movsb
xchg
int3
sbbl
jle
xchg
xchg
lret
cmp
lea
scas
inc
iret
and
and
test
cli
imul
jge
xor
and
inc
dec
dec
adc
adc
cs
mov
push
dec
and
dec
jmp
mov
xlat
scas
scas
jno
cmp
xlat
popf
test
ret
out
lock
test
stc
stos
mov
push
jnp
mov
sti
cmp
jp
inc
mov
pop
cltd
leave
iret
cmp
cwtl
cmp
outsl
mov
push
jle
stc
ljmp
push
dec
popf
stos
xchg
adc
mov
xchg
out
sahf
push
inc
pop
mov
jo
lcall
push
push
jecxz
mov
lcall
mov
popa
cmp
jl
lock
pop
adc
sub
pop
dec
mov
push
stc
jb
xchg
dec
das
xchg
fwait
insl
mov
pusha
addr16
aam
fwait
ds
push
enter
xlat
xchg
loop
pop
mov
rcrb
mov
in
and
inc
movsl
fiaddl
je
jecxz
or
stos
push
bound
out
mov
mov
and
popl
les
pop
shlb
jo
mov
cmpsb
or
cmp
fsubrs
mov
cmc
cmp
call
sti
bound
lret
lock
fistpl
sbb
pop
push
dec
cmpsl
xor
pop
aaa
mov
dec
out
into
into
xor
cmpsb
inc
imul
lahf
mov
xchg
loopne
jmp
dec
cmp
sub
es
push
xchg
inc
aad
test
sbb
pop
sub
rclb
jnp
pop
fcmovbe
or
ljmp
pop
gs
jmp
push
xchg
and
jg
outsl
xchg
sbb
arpl
test
adc
jl
or
add
cmp
sub
iret
sbb
sti
pusha
leave
xchg
xor
ljmp
int3
sahf
rorb
cmp
xchg
mov
cmc
sub
roll
mov
dec
lock
fs
mov
or
jl
mov
add
mov
xor
outsb
pop
pop
mov
push
jmp
and
repnz
sub
or
lcall
out
add
cs
icebp
lock
mov
cltd
stos
pop
loope
cwtl
and
dec
iret
add
add
sbb
sbb
sarb
xchg
in
sti
and
ljmp
testl
lcall
cmpsb
dec
lret
or
mov
sub
xor
jne
ja
mov
inc
mov
jne
pop
sbb
sub
mov
mov
out
lods
js
pop
or
pusha
inc
decb
push
adc
xchg
jle
sbb
es
jmp
and
mov
nop
sti
aam
jo
aas
addl
lods
add
ljmp
xchg
jle
stc
fnstsw
ss
add
popa
popa
lahf
or
xchg
int3
test
jp
roll
mov
cwtl
or
mov
test
mov
pop
xchg
add
movsb
add
call
pop
mov
mov
hlt
dec
sbbb
mov
push
mov
sbb
movsl
xchg
mov
or
fisttps
and
int
jne
xchg
jecxz
mov
mov
nop
cmc
fldenv
out
push
mov
ss
add
test
xor
xor
jns
clc
cmp
mov
inc
hlt
mov
aas
cmp
insl
leave
fs
das
sbb
lds
ja
ja
inc
add
or
call
dec
std
xchg
fcmovnbe
icebp
loop
cmp
es
and
ret
ljmp
aad
mov
pop
dec
out
loope
jmp
in
dec
jle
inc
js
or
loope
push
test
dec
cmp
xchg
jg
mov
push
scas
cmp
cmc
in
filds
mov
insl
cmpsl
fs
mov
adc
pusha
dec
push
in
xor
push
mov
mov
ror
push
mov
cmp
mov
fidivl
in
lret
insb
mov
test
aad
pop
loop
test
cmpsb
lods
adc
dec
decb
inc
cmpsl
bound
es
mov
jno
stos
jno
lahf
or
inc
rclb
repnz
mov
shll
mov
push
std
mov
sub
or
insl
dec
in
mov
pop
fsubl
fisubs
adc
pop
sti
jmp
scas
out
daa
mov
loop
inc
xor
mov
add
inc
inc
cmc
or
push
std
ss
adc
jno
or
repnz
and
push
fldl
mov
mov
sub
ljmp
xor
mov
mov
add
das
popa
ret
sbb
testl
cltd
stos
xorl
and
mov
xchg
jecxz
inc
fmull
sub
sub
inc
pop
mov
in
shl
xchg
je
jae
jl
popf
adc
xlat
cmp
vpmacssww
xor
ja
out
js
and
and
push
xchg
out
dec
addb
jbe
xor
mov
push
or
cmp
pusha
mov
lret
mov
jne
dec
aas
adc
xchg
cmp
jno
lods
loop
ret
in
fisttpll
jne
add
push
lret
dec
sbb
or
lea
popa
movsb
and
lock
gs
jae
pop
add
aas
rcl
sbb
leave
fucom
and
cmp
mov
xchg
xorb
lahf
dec
xor
outsb
dec
hlt
in
out
ja
jbe
inc
jge
cmp
pop
xchg
fnstcw
jb
int3
fmuls
loope
and
ds
mov
inc
clc
test
cmp
call
adc
xchg
in
mov
mov
ss
cld
ss
stos
lahf
xor
data16
mov
test
cmpsb
rorl
icebp
mov
shll
pop
ja,pt
lret
scas
dec
xchg
dec
inc
xor
jp
cmp
push
jns
jne
push
mov
addr16
cmp
push
lahf
leave
rclb
push
mov
mov
outsl
lea
aas
das
xchg
and
into
stc
arpl
mov
push
dec
cmp
or
inc
pusha
ret
pusha
xor
dec
jle
push
out
mov
xchg
outsl
stos
pop
or
sarb
jne,pn
and
mov
enter
xchg
xor
xchg
sti
mov
inc
ja
enter
jne
push
or
sub
fs
mov
pop
xchg
dec
pop
fisubrl
fsts
fmull
dec
cwtl
and
jg
ret
scas
clc
mov
mov
inc
imul
mov
scas
rcl
fdiv
imulb
stos
mov
sahf
and
cmp
addr16
lea
and
aam
sub
or
arpl
test
jb
dec
push
aad
push
lret
xchg
std
or
ja
ljmp
sbb
rorl
cs
data16
push
ja
push
inc
mov
xchg
xchg
pushl
cltd
xchg
add
cmc
xorb
testb
xchg
mulb
movsb
xchg
adcl
add
ds
out
xor
jns
shll
adcb
push
mov
icebp
arpl
inc
inc
mov
ss
cmpsl
or
inc
popa
ljmp
inc
push
xor
dec
in
dec
sbb
add
inc
enter
push
fnop
lock
pusha
in
movsb
pop
cmp
and
jno
pop
iret
sub
int3
lock
lret
pushf
xor
sbb
jg
add
jmp
mov
push
xchg
cmp
int
and
cmc
jns
push
insb
rorl
ljmp
xchg
pop
sub
andb
cli
loop
ja
insl
je
pop
stos
lea
pop
loope
mov
in
mov
sub
fistl
cltd
adc
insl
roll
xchg
pop
add
cmp
adc
mov
pop
dec
mov
jns
pushw
lods
ds
jl
mov
jo
popf
jo
lret
ljmp
xorl
pop
ja
cmp
in
and
decl
xor
mov
sbb
daa
or
xor
fsubl
stos
stc
loopne
dec
aas
mov
aaa
mov
push
cmpsb
add
mov
and
jae
pop
loop
neg
and
xor
inc
dec
into
in
addr16
cwtl
ds
mov
mov
dec
ror
lods
xor
pop
fildl
sbb
loop
xor
or
cli
insl
mov
jmp
lret
adc
pop
mov
mov
ret
pop
fistps
xor
sub
out
mov
loope
dec
adc
xor
hlt
fsts
sub
loop
add
imul
jae
dec
mov
mov
xchg
xchg
negb
dec
pop
jb
imul
fadds
jmp
into
push
hlt
dec
ljmp
mov
loope
movsl
in
and
mov
mov
mov
pop
xchg
cli
aam
mov
sahf
hlt
jnp
sub
xchg
inc
push
sar
sbb
hlt
imul
stc
xlat
pushf
add
mov
jg
mov
je
in
inc
adc
loop
out
jae
fwait
sbbb
cwtl
notb
popa
ljmp
push
fwait
adc
pop
ja
push
dec
push
push
out
hlt
icebp
aaa
adc
jmp
jb
jo
fst
pop
cmp
loopne
lcall
jp
divb
fdivs
dec
iret
and
jb
xorb
cli
out
sub
sub
popl
xlat
dec
daa
cmp
fistps
jp
pop
ja
repnz
cmp
jnp
ja
es
jno
pusha
xlat
int
jp
pusha
sbb
push
sub
push
daa
loop
loope
imul
add
push
mov
iret
hlt
ffreep
jno
sbbb
sub
sub
inc
cmp
inc
mov
mov
mov
mov
je
out
push
imul
loop,pt
aaa
lea
add
pop
das
int3
cmpsb
ss
pop
shrb
mov
mov
cmp
jb
cmp
lods
mov
loopne
jmp
mov
cmpsl
and
mov
fisubrs
or
ds
cmp
pop
sub
stc
bound
loop
add
pop
jnp
shrl
mov
xchg
mov
pop
mov
xchg
aas
xor
sti
sahf
lret
sbb
fdivrl
stos
pop
push
mov
lods
add
mov
lock
call
outsb
popf
or
xchg
cli
pop
push
or
push
push
jbe
ret
jo
and
fcomip
inc
dec
sbb
pushf
pop
sub
jp
sbb
into
clc
mov
fwait
pop
lea
xchg
daa
subb
mov
clc
aam
mov
mov
cmc
add
inc
xchg
int
sub
lock
and
sbbl
mov
push
mov
rcrb
mov
xchg
dec
lods
pushf
pop
loop
sbb
sti
cmpsl
mov
sbbb
insb
xchg
mov
adc
ljmp
addr16
nop/reserved
aas
rcl
sub
mov
sub
dec
add
jp
push
in
mov
fmuls
xchg
shrl
test
mov
cmpl
dec
hlt
adc
mov
push
lcall
jns
jno
sub
lods
inc
movsl
out
inc
jbe
pop
pushf
aas
inc
sub
lcall
bswap
jge
inc
add
js
pop
mov
mov
jne
addr16
shll
xchg
repz
add
mov
popa
or
cmp
data16
outsb
mov
fiadds
stos
pushf
imul
mov
sbb
push
adc
jno
pop
mov
imul
push
pop
xor
jg
inc
inc
push
push
mov
fcoms
jae
cmp
and
or
sub
rcrb
mov
pop
inc
lods
aas
sbb
mov
pusha
ss
sbb
and
repz
pop
je
test
or
sub
iret
or
cmc
movsl
adc
dec
mov
or
sub
fs
test
movsb
mov
bound
scas
arpl
add
and
xor
xchg
stos
lods
scas
mov
sbb
popf
push
or
in
scas
aas
jge
es
jmp
fwait
or
jbe
push
andl
subl
push
mov
insl
dec
cli
cmp
or
int3
pop
mov
aas
jnp
jo
pop
fldt
dec
sbb
mov
test
in
xlat
push
push
mov
mov
cmp
lcall
in
lods
mov
mov
inc
test
cmp
push
push
or
sub
mov
call
push
mov
iret
js
push
sub
into
jne
jbe
sub
xchg
xchg
test
loop
sub
shlb
xchg
push
fdivs
call
out
push
insl
inc
sbb
rcrl
nop
ja
xor
sub
arpl
sbb
sub
popf
hlt
mov
push
or
sarl
frstor
jns
and
mov
js
call
push
adc
jmp
pop
out
loopne
mov
sub
sahf
jmp
push
xor
repz
lea
push
push
mov
bound
frstor
outsb
xchg
frstor
jo
inc
sbb
nop
addr16
cmp
xchg
rcrb
iret
sub
cmc
or
pop
cmp
pop
seto
roll
xchg
sbb
dec
aad
dec
jae
out
icebp
sbb
add
test
inc
mov
pop
mov
in
pop
ja
cmpb
mov
lea
add
in
xchg
arpl
fyl2x
mov
lret
jecxz
leave
repz
lcall
andb
addr16
cltd
sub
data16
orb
lahf
mov
add
cmp
mov
ds
cmpsb
xchg
addr16
push
cmp
dec
xchg
xor
lcall
ret
filds
mov
int3
push
int3
ja
aas
pop
movsl
imul
jle
xor
dec
test
pop
dec
and
jecxz
jae
jecxz
push
inc
lea
fisubrl
dec
xchg
lcall
mov
pop
pop
ret
mov
lret
and
repnz
sbb
imul
mov
insl
lcall
mov
xchg
mov
sub
jmp
fdivrl
shl
cmp
push
ja
push
dec
mov
dec
psubd
dec
mov
adc
das
mov
out
dec
pusha
inc
inc
loope
jo
mov
pop
jo
push
push
add
pop
shrl
mov
xchg
jg
scas
bound
sub
insl
mov
sarl
stos
jo
push
insl
xchg
aad
imul
mov
dec
mov
xchg
cmp
sti
popa
loope
dec
lahf
pop
icebp
pop
out
mov
sub
les
push
into
movsl
mov
repnz
jle
out
es
mov
jge
mov
cmpsl
jmp
pop
or
test
inc
int
into
cmp
cwtl
fcomip
cmpsl
testl
inc
jbe
cmp
and
out
inc
ret
les
lods
cmp
adc
in
int
roll
push
fldt
mov
and
pop
add
movb
pop
int
push
adc
in
sti
ret
aad
push
or
xor
test
pop
inc
pop
sbb
pop
in
pop
mov
jns
popa
and
add
cltd
dec
pop
sub
ja
rcl
fucomp
andb
jo
mov
sub
push
adc
fisttps
xchg
addl
rolb
and
adc
rcll
test
orl
stos
adc
cmpsb
inc
rorl
rorb
ficoml
or
in
dec
push
in
daa
sti
cmc
mov
xchg
gs
add
outsl
cld
jno
jae
daa
xor
inc
fwait
in
ljmp
inc
jle,pn
scas
jns
cli
lds
mov
jge
sbb
call
dec
jge
jp
test
push
dec
insb
nop
ljmp
inc
pop
xor
inc
loope
cli
negb
pop
sub
or
lods
inc
dec
cmpsb
adcl
cmp
jmp
push
flds
adc
flds
negl
scas
bound
mov
or
movsl
mov
das
pop
mov
cmpsb
leave
cli
shlb
push
repnz
mov
pop
repz
mov
sub
xor
test
add
cmp
push
negb
sbb
stos
xchg
testb
hlt
bound
xor
pushl
push
movsb
movsl
test
sub
pop
insb
sbb
mov
or
xchg
es
repnz
sub
pop
cmp
jno
outsl
bound
sbb
ret
xchg
jno
xchg
dec
or
dec
xlat
dec
push
stc
jle
add
jnp
ss
sbb
push
add
lods
lret
imul
scas
dec
lea
push
mov
push
xor
flds
das
mov
gs
cmp
jbe
sbb
lock
adc
dec
call
sbb
or
les
movsl
iret
addb
mov
arpl
test
jb
enter
lods
movsl
inc
jecxz
xor
pop
and
fistl
push
adc
push
aaa
mov
inc
lock
xor
dec
in
cmp
fidivrl
xchg
push
cmp
mov
sbb
pop
mov
fisubrs
aaa
sub
pop
xor
orl
mov
jns
xchg
jbe
dec
std
dec
ds
decb
int3
mov
pop
cld
sbb
insl
cmpsb
and
pop
push
fildl
mov
sbb
cltd
sbb
cmpsb
pop
movsb
mov
fucom
cmp
sbb
jecxz
pop
inc
cli
cmp
xor
xchg
fistl
or
mov
clc
aaa
cmp
and
dec
xchg
xor
dec
imul
test
mov
xchg
and
xchg
daa
out
stc
das
push
cmpsb
pop
pop
mov
rorl
pop
mov
dec
ja
adc
sbb
orl
mov
stc
inc
push
jp
clc
jne
shlb
testb
xlat
mov
cmp
outsb
jnp
inc
pop
xchg
sbb
add
stos
fimull
xchg
adc
sbb
scas
cmp
add
adc
out
pop
andb
int
out
dec
repnz
mov
push
cltd
or
cli
outsb
mov
mov
mov
fidivl
and
pop
popa
js
inc
test
inc
cmp
testl
cltd
add
orb
xchg
mov
pop
arpl
mov
inc
aad
jmp
insb
cmpsb
or
insl
ret
lret
loop
aaa
sahf
sbb
movsl
movsl
adc
ss
fldcw
jge
andl
idivb
pop
jp
pop
or
pushf
adc
and
cmp
ljmp
loope
mov
jmp
sahf
dec
jle
mov
sub
lret
ret
bound
jmp
mov
aam
xor
xchg
shlb
dec
fisttpll
or
roll
aas
jp
sbb
ss
lock
ljmp
les
sbb
inc
faddl
mov
nop
nop
mov
out
jb
repnz
lods
rorb
pop
out
pushf
sub
sub
dec
repz
and
pop
mov
xchg
cmp
inc
add
into
out
std
iret
push
and
mov
loop
xchg
repz
sbb
push
ret
jmp
mov
stos
les
les
jmp
sub
imul
xchg
xchg
nop
repnz
xor
gs
pop
and
pop
cmpsl
or
mov
shll
cmpb
cmp
sub
int
test
inc
inc
cld
je
loopne
add
dec
xor
std
mov
imul
pop
push
ss
sbb
lret
cmp
dec
ljmp
push
cmp
stos
je
add
std
mov
repz
pop
xchg
mov
sub
mov
cmp
outsb
dec
adc
mov
lods
xor
test
mov
push
pop
xlat
fldenv
mov
icebp
add
mov
mov
pop
clc
pop
or
adc
lea
ljmp
inc
sub
pop
or
xchg
imul
xchg
dec
xor
test
and
test
out
adc
pop
and
lcall
mov
out
mov
rorl
add
das
lock
test
sar
mov
pop
xchg
enter
xchg
fnsave
jne
dec
ret
insl
js
inc
rcl
std
push
sbb
mov
xor
mov
imul
movsl
rolb
sahf
shrl
pop
insb
xchg
push
mov
fimull
pop
mov
lcall
mov
xor
adc
aam
pop
jnp
nop
pop
fstpt
lret
adc
or
pop
push
scas
sti
ds
vmovq
ja
out
iret
gs
adc
lea
icebp
shll
jecxz
jnp
fwait
lret
incb
sbb
out
fldl
dec
sarb
mov
sub
push
mov
adcw
xor
mov
push
cmp
lcall
cli
ficoml
popa
jne
jle
xorl
mov
aas
push
loope
fdivrl
jb
pop
cmpsl
enter
rolb
loope
aam
jnp
cli
sti
sti
fldt
test
cltd
je
insb
push
jl
add
in
jo
inc
aad
push
pop
dec
scas
ror
sub
mov
add
movsl
sbb
aas
mov
gs
inc
pop
pop
inc
repnz
popa
clc
arpl
jae
arpl
aas
mov
mov
pop
mov
mov
xorl
pop
into
icebp
xchg
fbld
jmp
hlt
adc
cs
xchg
jno
jg
iret
pop
insl
cld
leave
mov
add
insb
aas
dec
lret
adc
lcall
je
pop
fdivrs
jge
mov
cwtl
jbe
cmp
cli
fsin
cmp
shlb
into
inc
int
jne
cmp
call
adc
jns
jge
dec
loop
dec
lret
xor
iret
stos
inc
lods
test
lcall
into
fcmovbe
pusha
push
jns
jne
rcll
pop
or
mov
xchg
sbbb
movb
ljmp
mov
or
popa
lret
sub
or
add
xor
push
scas
cltd
repnz
adc
insl
stos
lahf
mov
pop
out
cld
daa
or
inc
icebp
xorl
pop
stos
mov
int3
sbb
lock
mov
lea
lock
hlt
jmp
xchg
inc
inc
push
mov
dec
mov
testl
mov
lcall
or
rcll
scas
rclb
popa
lret
dec
pushf
ss
and
sub
cmp
mov
stc
addl
pop
mov
int
add
sub
xchg
mov
jae
fwait
dec
lds
test
jbe
sbb
sub
dec
xor
out
clc
movsl
insb
jge
divb
loopne
jg
stc
int3
sub
push
cli
insb
inc
in
call
testl
or
pushf
add
push
add
push
lods
cmp
xor
xorl
sti
sbb
and
scas
cld
lods
pop
mov
fs
xchg
pop
xchg
gs
adc
pop
xor
cmc
inc
aaa
icebp
or
xor
int3
jns
jns
jnp
fsubrl
xchg
pop
shl
xchg
pop
dec
xor
clc
cmp
push
dec
mov
or
and
mov
sub
xchg
and
xorb
lret
push
sub
or
and
inc
out
xchg
jnp
outsb
or
in
shll
lock
movsl
xor
mov
aaa
lahf
pop
sub
fwait
movsl
pop
call
and
inc
and
fildll
js
mov
cmpsb
and
jmp
sub
push
fmull
cmpl
push
fnstsw
or
cltd
xor
dec
popa
cmc
das
lahf
fwait
das
iret
scas
pusha
cli
or
fldt
xlat
jbe
out
cmp
test
pop
fistpl
mov
arpl
xor
lcall
adc
mov
stc
sbb
and
sahf
lea
mov
and
or
add
mov
loopne
push
clc
fs
bound
js
movsb
out
ds
loop
fidivl
inc
add
lcall
xlat
leave
xchg
jae
mov
scas
std
fs
adc
shrb
test
mov
jbe
addr16
dec
mov
cltd
dec
adc
int
xchg
push
insl
push
sub
scas
stc
lods
mov
sub
sahf
pop
insb
daa
sub
pop
in
jnp
pop
cltd
in
jo
popf
xorl
pushf
in
jb
adc
push
divl
cs
or
or
jl
mov
jae
and
inc
pop
addr16
and
ret
sbb
cmp
sub
cwtl
dec
push
adc
push
rorl
mov
jl
push
xchg
popa
cmp
pop
push
jno
mov
pop
out
mov
fldenv
test
popa
push
hlt
icebp
push
xor
push
je
mov
push
inc
mov
xor
pop
sbb
xlat
test
cmp
test
and
inc
push
pop
arpl
lea
rol
bound
push
test
mov
outsl
add
adc
test
test
pop
enter
or
push
lret
fwait
mov
in
push
sbb
mov
fstpl
je
lods
and
jl
repnz
or
jne
nop
pop
push
movsl
cmp
icebp
lahf
sub
mov
mov
jno
xchg
xchg
iret
push
arpl
or
xor
lret
test
filds
mov
xor
mov
movsb
daa
in
cmpsb
jle
sbb
adc
imulb
inc
sbb
mov
into
outsb
js
mov
cmp
inc
fimull
jmp
jno
push
inc
cld
lods
sub
negl
lea
pusha
test
stos
lahf
outsb
mov
inc
jb
or
dec
jne
cwtl
sti
enter
xchg
inc
xchg
das
push
jmp
ljmp
subb
dec
ja
cld
lahf
test
ljmp
in
cmpb
fisttpll
sahf
das
jbe
shlb
mov
data16
les
roll
pushf
pop
inc
aas
nop
jmp
xlat
and
push
push
mov
cmp
add
popa
jp
test
cmp
les
lret
out
cmp
mov
sub
je
sbb
fs
mov
arpl
jge
mov
jge
orb
push
repnz
pop
adc
outsl
je
imul
paddb
shlb
fnstenv
movsl
adc
push
jge
lods
lahf
push
dec
cmp
cmp
aaa
xchg
into
push
int3
or
sbb
mov
dec
std
jno
xchg
jmp
daa
add
mov
cmp
out
or
and
movsb
adc
xchg
sub
fisttpll
imul
shll
lock
fs
add
es
dec
xchg
or
out
sub
dec
jo
subl
cmpsl
popf
pop
roll
lret
mov
dec
mov
inc
push
adc
popf
call
xor
push
jg
pusha
jns
xchg
mov
dec
cmp
dec
aas
mov
scas
push
dec
xor
xor
sbb
xchg
jnp
cmpsb
test
sti
and
xchg
cmpsb
cs
jns
dec
mov
pop
stos
push
push
adc
sbb
es
xchg
jbe
fcoml
hlt
cmpsl
ss
leave
lret
xchg
mov
sahf
jnp
mov
mov
fcompl
push
cmpsb
call
orl
dec
mov
jb
push
add
popf
dec
stos
sub
dec
arpl
mov
test
xchg
loope
adc
test
xor
cld
push
inc
ja
inc
dec
test
cmp
nop
imul
mul
and
inc
sbb
or
divb
jge
sbb
mov
shll
fsubr
cmpl
xchg
mov
pop
loopne
jge
jns
or
mov
sti
pusha
cmp
cmp
sahf
jno
loope
jnp
in
clc
andb
nop
addr16
fcmovnbe
ja
add
sbb
xorl
jne
mov
mov
cltd
sub
xchg
pop
sub
cmpsb
sbb
jg
addr16
sbb
mov
dec
jno
sub
cs
negl
fcoms
pop
cmp
push
sub
ret
pop
push
out
add
inc
outsl
andb
lds
ret
and
jns
sub
rorb
add
jmp
cmp
scas
xor
sub
iret
and
out
or
lods
inc
ljmp
cmc
mov
movsl
in
mov
clc
push
push
iret
dec
sbb
or
pop
pop
adc
lret
in
adc
push
add
lods
and
sbb
dec
dec
rolb
stos
fimuls
xor
out
jmp
test
inc
xchg
loop
sub
shr
mov
into
or
jns
push
dec
xor
jmp
xchg
in
mov
ficompl
ret
and
and
cmpps
or
add
cld
rcr
mov
adc
daa
sbb
popa
mov
mov
jno
jo
daa
or
sbb
or
add
cli
outsl
out
mov
int3
push
stos
test
lds
arpl
fcmove
add
out
jecxz
into
cmp
fdivrl
xlat
push
pop
push
sti
mov
out
inc
sbb
lods
icebp
hlt
insb
dec
xchg
dec
mov
or
or
lea
addl
ja
xor
clc
or
bound
dec
sub
mov
ljmp
cmpsl
jge
push
sub
dec
cmp
imull
cmp
adcl
test
faddl
imul
in
jecxz
imul
je
fadds
sub
lods
dec
mov
mov
adc
mov
sub
jg
loop
das
or
lret
mov
leave
jge
sub
mov
push
or
inc
dec
or
pushl
mov
mov
sahf
filds
jo
mov
stc
add
jge
or
fwait
pop
pop
add
mov
and
and
clc
mov
popf
ja
jge
dec
lcall
clc
mov
stc
imul
mov
sbb
xchg
cmp
mov
testb
stc
push
xchg
insb
orl
je
mov
mov
nop
jbe
push
inc
adc
lahf
jno
push
negb
and
test
adc
push
fstpl
outsl
and
pop
aam
xchg
fsubrs
xchg
cmpsb
sub
push
sbb
lods
ss
sub
cmp
xor
sbb
lock
pop
and
mov
add
xchg
fsubrl
push
ret
xor
add
cld
aam
ljmp
int
fstl
shlb
xor
fldl
mov
jne
dec
inc
jg
push
cld
jb
pushf
jb
cmp
mov
test
xchg
and
jns
repnz
cltd
xchg
in
pop
fcompl
test
pop
int3
testb
ljmp
out
dec
mov
das
inc
xchg
pop
sub
sub
xor
mov
jne
cs
add
sbb
push
lds
repnz
test
iret
push
dec
push
shrl
add
push
stos
mov
and
add
mov
insb
add
addr16
jnp
lcall
push
mov
aas
push
and
push
adc
pop
xlat
lea
fildl
push
lahf
inc
orl
imul
adcb
xchg
dec
movsb
mov
adc
mov
cli
mov
inc
or
jecxz
lret
inc
dec
jae
mov
shlb
aad
pop
cmp
fsubl
mov
divl
sbb
xor
shrl
jmp
data16
mov
inc
test
xchg
je
push
lods
shrl
popf
gs
cmpsb
pop
imul
pop
nop
lock
fst
mov
push
push
sub
jmp
data16
sbb
xchg
dec
cmp
push
mov
dec
sbb
inc
pusha
sahf
jno
ficompl
inc
lret
jae
xchg
mov
ss
push
ficomps
cli
out
test
xchg
ds
and
js
insl
enter
les
or
mov
push
jnp
adc
outsb
xor
and
stos
scas
jl
jb
scas
and
stos
daa
xor
pop
pop
fwait
jo
adc
mov
mov
inc
or
xchg
or
call
jbe
cli
adc
cltd
sbb
inc
in
scas
in
xchg
jnp
push
ja
lahf
stos
fmuls
push
movl
sahf
ds
lea
out
sarb
adc
mov
cli
pop
adc
in
cltd
in
call
mov
lea
jmp
out
mov
fmul
xlat
cld
movsl
out
mov
adc
xchg
enter
mov
aaa
mov
lret
aam
icebp
stc
push
add
pop
mov
pop
xchg
test
mov
out
mov
lods
inc
mov
lahf
hlt
loope
fwait
popf
fcoms
jo
les
cmp
pop
mov
ss
clc
lea
sbb
mov
pop
insb
repnz
insw
sbb
test
xchg
fsts
ds
pop
enter
or
mov
xor
sub
jmp
xor
repz
and
xor
and
in
gs
adc
cmp
out
fcoml
push
rorb
sub
cmp
mov
xor
pop
sbb
movsl
pop
es
ss
pushf
cmpsb
adc
imul
inc
jnp
std
pop
inc
pop
stc
or
push
xor
test
push
xor
add
mov
add
imul
std
addl
or
dec
xchg
shrl
or
or
fildl
sbb
mov
cmp
leave
test
fs
mov
lea
mov
clc
notl
pop
push
inc
pop
pop
aaa
mov
dec
pop
les
int
fwait
loop
ds
adc
push
ja
adc
cmpsl
lea
push
shlb
cs
push
lods
mov
fs
lea
jns
sbb
xor
nop
lds
adc
mov
xor
mov
stos
push
divl
in
aas
fucomip
jo
and
mov
adc
jp
adc
in
nop
inc
bound
adc
aad
dec
mov
cs
bound
mov
mov
cmp
pop
outsl
aad
ficomps
adc
aaa
sbb
xorb
cmc
mov
movsl
in
pop
sbbl
rclb
jno
sahf
adc
mov
getsec
ljmp
jmp
jmp
arpl
sub
cmpb
jmp
cmc
lods
inc
pop
mov
cmpsl
sbb
mov
scas
adc
je
push
fldt
inc
mov
jp
cmp
cwtl
fistps
add
push
jmp
das
inc
sub
popa
and
inc
lea
fnstsw
nop
lods
sbb
les
xchg
or
xchg
mov
jno
cltd
in
push
xorb
mov
add
xchg
stos
popa
push
int
std
ret
test
jg
cmp
aaa
mov
add
add
cmpsb
test
lods
xchg
mov
dec
mov
xlat
cltd
mov
movsb
mov
insl
loope
scas
jp
jge
push
loop
test
arpl
fs
addr16
jmp
mov
ret
pop
or
adc
push
dec
inc
or
cmp
sub
push
inc
loope
push
arpl
adc
out
mov
loope
jl
jns
inc
shrl
add
movsb
mov
filds
mov
sbb
sbb
push
pop
into
inc
adc
divl
jg
jmp
push
fs
jecxz
js
xchg
mov
adc
mov
movsl
ror
jo
inc
or
clc
push
insb
push
int
iret
jg
fcomps
push
adc
jae
inc
out
repz
scas
loop
inc
out
and
nop
cld
dec
popa
addr16
mov
add
bnd
adc
adc
sub
sahf
cmpsl
add
fcmovb
icebp
jecxz
shl
aad
jmp
push
adc
call
fadd
push
and
sub
jnp
in
fwait
inc
push
outsl
mov
or
mov
rolb
lahf
cmpsb
test
popa
jb
jmp
sbb
lahf
clc
jle
scas
mov
sub
in
pop
sub
out
mov
scas
cwtl
enter
sbb
or
push
rcrb
jo
xor
mov
rcrl
mov
sbb
fstpl
adcb
cwtl
and
std
and
sbb
into
xor
out
insb
leave
mov
scas
mov
test
in
rorb
mov
jle
dec
add
lea
xchg
ret
aaa
jbe
sti
xchg
sub
lock
cmp
lock
fisubl
pop
add
jne
jno
fxch
jle
aaa
cmpsl
xor
dec
fistpl
nop
lock
scas
xor
and
pop
stos
sarl
lret
or
lods
mulb
or
add
insb
pminub
stc
and
imul
mov
outsl
push
adc
dec
sbb
cs
fiadds
fiaddl
aad
add
mov
cltd
xchg
sub
scas
sbb
push
sub
push
jge
pop
es
sbb
xchg
xor
push
popa
ja
inc
iret
stos
loopne
pop
fcmovnb
dec
scas
add
shll
mov
fnstcw
test
aad
inc
ret
lods
xchg
mov
ljmp
push
sbb
mov
cmpl
test
pushf
mov
jbe
pop
mov
nop
or
sbb
outsb
das
dec
push
loop
loope
pushf
add
mov
pusha
cmpsl
pop
aas
jnp
and
popf
addr16
test
cld
xchg
mov
pusha
fists
aam
dec
cmp
mov
xchg
pop
lret
rcrb
ja
test
rolb
jl
cli
sub
lods
in
rcll
dec
dec
fcoml
add
cmp
lock
jae
sarl
xor
fnstsw
pusha
or
arpl
jo
xchg
pop
test
xchg
stos
mov
aad
jo
mov
cwtl
mov
or
push
repz
inc
inc
mov
shrl
mov
push
cmp
je
cmp
lret
sbb
pop
mov
pop
icebp
cmp
jecxz
loopne
insb
add
das
adc
rclb
repnz
and
xchg
out
cwtl
pop
rcrl
sahf
bnd
repnz
and
mov
popf
mov
movsb
mov
push
scas
icebp
xor
mov
jle
addr16
adc
jecxz
pop
fs
divl
pop
jmp
repz
pop
xor
lahf
ret
mov
mull
out
cwtl
repz
in
cmp
add
fstps
jge
pop
add
mov
sub
mov
and
scas
sub
adc
pop
xchg
pop
test
pop
push
lahf
jg
lea
in
cmp
jmp
cmp
xchg
mov
cli
push
jb
jns
sbb
rcl
push
sub
jne
push
xor
mov
inc
lods
inc
push
cld
je
insb
dec
add
adcl
add
out
lds
jb
cld
ja
inc
in
insb
subl
jno
aaa
lds
bnd
or
mov
xchg
popf
stos
xchg
sub
test
sbb
out
push
outsl
bound
je
dec
loop
adc
mov
mov
data16
or
movsb
dec
int3
ret
adc
jl
sarb
and
scas
jg
and
xor
sub
push
and
push
stos
mov
popa
xchg
adc
cwtl
mov
cli
cld
test
out
cmpsb
adc
jno
in
or
sub
pop
mov
js
sysenter
pop
clc
jg
aad
mov
pop
sub
scas
into
sbb
scas
jnp
sbb
xchg
fdivl
sbb
sub
push
jmp
pop
pop
test
jle
push
jecxz
add
dec
jmp
mov
xlat
cmpsb
and
and
adc
arpl
sub
mov
icebp
mov
or
jecxz
ret
xor
test
stos
inc
sbb
sub
jne
push
pop
loopne
cld
push
adcb
imul
int
out
popa
pop
hlt
ret
ret
mov
lahf
inc
mov
lret
mov
and
add
adc
sbb
xchg
inc
ja
js
enter
jae
lret
scas
bndldx
xchg
mov
xor
loope
push
sarb
hlt
xchg
sbb
les
je
shlb
add
call
cli
add
rcll
jg
in
inc
iret
sub
sub
xor
mov
cld
cmp
aas
mov
push
sub
add
mov
fisttpll
cmp
stc
xchg
hlt
popf
mov
clc
insb
scas
xchg
sbb
jecxz
and
icebp
pop
pushf
jecxz
cwtl
sarl
or
mov
jo
jb
mov
cld
mov
fcoml
cmp
sbb
xor
dec
test
dec
and
sub
nop
jno
pushf
ljmp
mov
mov
or
movsb
jnp
fdivr
add
sub
out
pushf
int
dec
mov
in
cs
mov
xchg
mov
sbb
sub
jecxz
sub
lea
imul
test
cs
and
sbb
and
cld
dec
and
cli
dec
clc
and
mov
pop
mov
lock
stc
pop
int
dec
imulb
repnz
insb
inc
fwait
pushf
movsl
adc
loopne
cmp
fwait
inc
inc
push
dec
movsb
ljmp
repnz
push
xor
xchg
popa
xlat
pop
mov
popa
insl
jbe
cmp
sub
stos
std
and
mov
rcll
bound
popf
cwtl
test
loopne
sub
and
jle
aas
lods
ds
stos
push
mov
jo
lcall
scas
xchg
xchg
and
jp
insb
leave
push
mov
xor
dec
scas
std
hlt
jp
mov
cmp
out
adc
rcr
inc
mov
enter
xchg
sbb
loop
jg
clc
mov
movsl
imul
push
dec
dec
sarl
repz
mov
cmp
vmaxss
mov
cmp
out
es
mov
ds
mov
fs
add
lret
inc
push
pavgb
add
shr
out
push
into
jnp
inc
and
dec
test
dec
adcl
mov
repz
sbb
push
das
bound
and
aas
xchg
cwtl
xchg
and
xor
mov
out
xchg
test
inc
ss
lcall
hlt
scas
jg
mov
push
das
inc
int3
dec
out
popl
or
shll
fcom
mov
mov
lcall
sub
addb
or
push
out
test
push
mov
aad
lcall
cmc
dec
mov
int
cli
push
test
inc
aam
mov
stos
aam
mov
movsb
jg
cmp
pop
inc
sub
adc
cs
dec
inc
outsl
xchg
nop
fildl
filds
call
out
ret
mov
lcall
cld
sub
push
repz
cmp
test
mov
push
movsl
pop
push
int3
int3
mov
push
std
mov
xlat
pop
add
rorb
cltd
jb
mov
pushf
aad
pop
push
loope
bound
lds
in
jp
cmp
and
and
out
shlb
push
repnz
mov
xchg
dec
lock
ja
sub
out
lret
cmp
call
je
or
mov
push
mov
adcl
push
mov
shrb
mov
jge
es
sbb
xchg
adc
mov
jne
mov
push
push
mov
jnp
pushf
dec
or
loopne
mov
divl
imul
push
add
add
enter
les
xchg
or
and
xchg
jle
jge
pusha
jnp
dec
pop
sahf
cmp
lret
dec
xor
sub
pop
jno
addb
call
pop
xor
loope
mov
push
lret
aam
mov
mov
push
jp
aad
in
adc
scas
rolb
push
sti
pop
add
out
ss
xchg
add
int3
push
cmp
pop
inc
int3
jns
lahf
jecxz
push
andb
jae
stos
xchg
clc
xchg
inc
xlat
je
call
pop
shll
stos
xor
lea
out
inc
sbb
stos
xlat
cmp
inc
xchg
loopne
jno
ss
popf
ss
push
in
mov
ret
inc
cmp
jge
mov
mov
dec
pop
mov
out
mov
or
sahf
jno
data16
daa
sub
xchg
jae
call
mov
fwait
add
movsb
es
mov
clc
rcrl
pop
pop
sbb
and
add
dec
in
pop
adc
cs
outsl
cwtl
pop
je
les
ret
adc
xor
mov
cmp
sub
dec
inc
mov
jecxz
sub
mov
pop
pop
sub
push
xchg
adc
sbb
push
sub
ret
mov
jg
lahf
mov
xlat
js
arpl
mov
pop
adc
out
or
popa
adc
or
test
int
cmp
movl
fcompl
mov
mov
mov
pop
dec
pop
in
fwait
fwait
or
jns
xor
mov
mov
push
js
ds
test
jg
mov
adc
sbb
pop
or
sbb
mov
movsl
and
in
jecxz
fwait
push
fsubs
dec
adc
xchg
mov
lock
mov
xor
inc
fcomp
push
daa
or
das
jecxz
lret
jbe
das
lret
inc
dec
sbb
inc
and
xchg
cmpsb
fcmove
jns
dec
and
mov
shrl
jno
push
cmp
in
cli
pop
cmpsb
xor
ficoms
sbb
mov
call
test
fwait
bound
shl
std
xlat
mov
jle
stc
sub
out
cmp
jns
loop
cmp
fidivrs
pop
mov
xor
xchg
push
lds
xchg
jp
lcall
jo
jno
pop
ss
outsb
cmpsl
mov
stos
imul
ror
add
icebp
lret
test
push
sbb
imul
stc
cmp
cmp
fcomps
mov
lock
inc
rolb
adc
sbb
sti
pop
push
push
out
orl
leave
in
mov
and
jle
std
add
jle
cmp
dec
sbb
les
mov
adc
inc
aaa
push
aam
xchg
test
adc
popf
in
sbbl
arpl
clc
sub
sub
xchg
push
fnstsw
pop
gs
in
ret
add
sbb
aad
and
decb
sbb
je
insb
ficomps
hlt
cwtl
xchg
inc
leave
or
push
fdivs
mov
clc
jns
fnstsw
xor
cmp
mov
pop
xor
pop
out
pop
sub
push
mov
or
mov
push
stc
fs
lds
sbb
sbb
out
inc
mov
fnstcw
sub
sub
cmp
mov
mov
jno
xchg
push
push
xchg
dec
jp
or
cmp
inc
out
push
ja
fwait
xchg
repnz
test
nop
sbb
push
lahf
mov
pop
cwtl
push
add
xchg
jge
dec
ljmp
in
movsb
leave
inc
int
mov
fs
rorb
cmpsb
mov
mov
fsubp
pushl
pusha
addr16
ret
cmp
add
scas
ror
adc
sub
pop
mov
cmp
inc
xchg
js
cmp
aaa
subb
jae
stc
mov
and
xchg
das
xorb
fcmovbe
sti
mov
sbb
pop
adc
iret
jae
mov
xor
xchg
mov
in
add
xor
stos
fiadds
jno
adc
or
mov
mov
inc
scas
mov
xor
cs
sub
pop
adc
inc
andb
clc
xchg
mov
push
mov
insl
stc
dec
mov
int3
fidivl
fwait
push
shlb
cmp
jbe
adc
cmpl
das
sub
into
cwtl
jbe
mov
into
push
loope
negb
ror
sub
out
pop
shrb
add
movsb
sub
hlt
sbbb
inc
dec
rcrl
mov
inc
mov
push
fnstsw
mov
mov
mov
xor
pop
outsb
icebp
mov
movsb
xchg
xor
addr16
scas
mov
imul
mov
fisttpl
jg
lock
push
cltd
xor
leave
icebp
fwait
or
sub
jp
out
and
add
and
adc
mov
adc
pop
sti
inc
xchg
inc
and
dec
cmp
push
or
lcall
lret
adc
pop
inc
pop
scas
push
cltd
or
sbb
shlb
pop
lret
push
or
mov
or
cmp
mov
lret
and
fnstcw
push
sahf
cmp
xchg
fisttpl
in
mov
jp
fisubl
mov
dec
xor
leave
sbb
inc
pop
sub
rcr
aaa
mov
inc
xor
outsb
or
sub
sub
push
inc
fisttpll
cmp
sbb
fwait
jp
or
dec
movsl
movsl
push
dec
xor
xchg
cmpb
rep
stos
sahf
jae
xchg
popf
or
mov
dec
fcmovb
test
bound
push
xchg
in
sub
xchg
add
insb
jne
inc
ja
loop
test
mov
insb
dec
sahf
jp,pt
mov
xchg
mov
xchg
enter
popf
jo
dec
adc
pop
outsb
fs
stos
mov
or
pop
cld
mov
lea
jp
ret
std
mov
inc
dec
inc
gs
movzbl
in
mov
pop
lea
jp
pop
loope
inc
sbb
popa
mov
pop
and
imul
fnstcw
add
push
jmp
scas
xchg
sbb
add
sahf
les
fucomip
mov
and
cmpsl
ficoms
rorb
cmp
xchg
data16
jp
test
xchg
adc
xchg
jl
adc
andl
adc
adc
test
jl
sahf
mov
inc
cmc
cmp
push
pop
lods
std
mov
cmc
outsb
or
sbb
xchg
sub
loope
aam
loope
addr16
or
scas
fbld
jns
push
loope
xor
out
pop
dec
loop
or
scas
sub
mov
and
pop
jne
scas
into
aam
int
scas
inc
popf
idivl
subb
data16
jp
add
push
push
push
or
xchg
sbb
les
mov
jno
pop
int3
cli
xchg
push
pop
xor
icebp
add
inc
mov
inc
enter
subl
shl
mov
rorb
je
and
xor
add
cwtl
jno
xchg
push
repz
imul
ja
and
adc
mov
fs
scas
insl
andb
and
pop
out
xor
mov
push
jb
xchg
xlat
xchg
mov
cmp
jne
jge
js
out
xor
xor
xchg
sub
subb
xor
mov
push
lret
pop
and
outsl
sahf
scas
mov
lret
sbb
or
hlt
sahf
pop
adc
jb
pop
in
mov
loope
lods
dec
mov
in
push
fistps
aad
repnz
mov
fisubs
mov
in
mov
cld
gs
or
test
movsb
mov
xchg
clc
jp
mov
xchg
mov
mov
dec
js
sbb
mov
pop
and
sub
clc
jne
into
sbb
cmp
lret
jbe
ret
xchg
pop
sbb
insl
rorl
lds
xchg
add
jp
or
hlt
mov
add
imul
mov
push
cli
mov
movsb
pop
insb
lods
mov
mov
inc
push
flds
ds
mov
fbstp
mov
cmp
pop
lds
lcall
jl
and
add
cmpsl
xlat
add
push
push
popf
sti
sub
jns
cld
imul
test
add
xchg
add
addr16
test
push
jno
inc
mov
push
mov
mov
mov
jle
gs
cmp
frstor
inc
fisubs
icebp
and
out
adcl
loop
test
mov
and
jg
pop
cli
sub
lods
shll
pop
fsubs
push
js
out
sbb
xchg
outsb
test
clc
lods
xchg
jne
les
cli
mov
out
mov
xchg
lea
loope
into
xlat
or
dec
ret
cmc
push
cltd
dec
popa
fidivrs
repnz
stc
sbb
adcb
in
fidivrl
xor
push
and
add
cld
jle
jae
dec
cli
call
movsb
mov
sub
decl
cltd
js
pop
inc
imul
mov
fiaddl
lods
lods
hlt
sub
mov
test
lock
notl
or
xor
jle
outsb
es
pop
aas
cmp
and
and
lret
fstl
sub
scas
test
fidivrl
cli
or
cld
dec
cmp
mov
dec
in
xor
cmp
repnz
repz
mov
call
and
ss
jb
mov
xor
repnz
mov
ret
orb
mov
repz
sbb
xor
test
pop
jle
push
or
xor
push
push
bound
xchg
pop
cmpsb
addr16
in
sahf
jnp
adc
xor
popa
bound
mov
fs
in
mov
fistpll
inc
sub
fstpl
test
mov
xchg
push
xor
lock
inc
pop
mov
sub
add
add
adc
jg
jmp
in
mov
mov
mov
pop
test
aas
movsl
out
out
decl
inc
popf
leave
jae
add
inc
cmp
dec
xorb
lret
adc
sbbl
pusha
cmpsb
jge
scas
addr16
cmp
and
iret
pop
mov
das
addl
fildll
movsl
mov
popa
repz
xchg
sbb
cli
xchg
cli
and
or
cwtl
cs
stos
dec
rorb
pop
xlat
mov
test
jns
jg
icebp
jl
addr16
orl
fidivrl
in
subb
xor
fcompl
call
inc
jp
fists
adc
adc
decb
lock
packssdw
jbe
mov
popf
cmp
nop
dec
cltd
arpl
insb
xchg
insl
das
xlat
mov
jbe
stc
gs
lcall
mulb
dec
sahf
insb
add
mov
push
outsl
sbb
add
xchg
mov
lods
adcb
popa
mov
cli
outsl
add
push
mov
pop
int3
enter
sbb
sbb
cmpsb
pusha
mov
aas
pop
imul
std
add
adc
popl
out
mov
ja
cmpl
enter
mov
fildl
inc
jbe
mov
mov
push
data16
jne
jl
stos
lea
loop
fst
int3
jbe
inc
cmpsl
adc
pop
inc
mov
push
test
mov
xor
xchg
out
sub
xor
aad
stos
push
xlat
addr16
inc
es
xor
lret
leave
mov
mov
or
and
mov
sub
jecxz
push
pop
sub
ss
lea
xchg
pop
sub
shll
repz
inc
mov
outsl
aad
mov
cmp
xor
subb
push
test
push
mov
mov
mov
add
and
jecxz
cli
add
mov
std
cld
icebp
imul
or
xorl
mov
or
shl
fucomi
inc
imul
push
mov
jmp
mov
aas
push
rolb
je
sbb
jl
xor
scas
push
loopne
fwait
cmpsl
movsl
hlt
sub
lods
hlt
imul
sbb
popa
cltd
lcall
lods
sub
in
dec
in
out
test
nop
les
jmp
fildl
sub
mov
icebp
lret
inc
rcl
std
mov
into
or
mov
mov
je
clc
push
cmp
scas
aam
sub
sbb
sbb
jg
les
sbb
or
in
push
mov
sbb
lcall
add
adc
add
or
sbb
jb
cmpsl
push
lds
andl
and
push
pop
out
int
les
push
stc
sti
mov
gs
aam
mov
jno
mov
mov
add
push
mov
fwait
jnp
xor
jp
dec
sub
fadd
push
mov
aas
adc
lock
cmp
hlt
jmp
cmp
stc
enter
sbb
mov
sub
push
xor
xor
pop
push
in
push
into
or
jg
sbb
inc
aam
fsubs
inc
and
sub
shll
mov
sbb
xor
cmp
aaa
les
mov
xor
fwait
xchg
xor
cmc
imul
in
fsub
mov
loop
int
jp
dec
cwtl
test
std
ja
and
hlt
xchg
jnp
xor
jnp
and
mov
xchg
rorl
addb
adcb
stos
pop
fdivs
mov
mov
or
cmp
into
pop
shrl
jns
fistps
frstor
mull
divl
testb
in
and
cltd
and
aas
mov
jne
xor
sub
add
jae
aas
xchg
gs
enter
dec
push
xchg
imul
repnz
jge
in
mov
pop
xacquire
and
nop
cltd
or
push
fs
mov
rorb
icebp
jno
push
popf
push
xchg
fs
cmp
push
test
mov
bound
fs
mov
adc
mov
cmp
mov
in
mov
rcrl
add
xchg
cmpsb
aas
cli
repnz
mov
ja
push
mov
jo
cmp
mov
sub
negb
mov
mov
icebp
sbb
imul
cmp
push
xor
mov
aaa
jle
mov
cmpsb
mov
rorl
xchg
mov
push
out
fs
prefetch
rcll
shrl
inc
scas
pop
lods
pop
adc
dec
jo
pop
lds
in
cld
imul
test
sbb
pop
test
mov
cmpsb
ja
mov
div
cmp
cltd
lahf
mov
dec
fdivr
mov
dec
pop
pop
stc
sub
call
or
dec
shlb
mov
sub
into
repnz
dec
mov
int
push
cmp
sub
or
ljmp
xor
adc
push
sbb
iret
mov
adc
lret
cmp
jp
add
stos
dec
mov
push
es
jae
lcall
imul
test
imull
or
mov
lret
push
sbb
pusha
ja
je
shll
xchg
js
fmuls
cmp
adc
inc
push
push
cmp
int3
cmp
adc
in
dec
jo
adc
cmpsl
sbb
test
mov
adc
bound
mov
sbb
test
fcomi
lods
in
in
add
lcall
int
inc
sbb
push
int3
mov
fisubrs
mov
mov
rcrb
aam
jg
out
cmp
int3
pop
outsl
in
icebp
xchg
push
lcall
or
jecxz
or
rclb
jno
xchg
cmp
sub
popa
ret
movsb
roll
dec
movsb
test
aaa
cmp
sub
js
xchg
cltd
test
sti
push
cmp
incl
sahf
lcall
xchg
push
or
mov
mov
clc
or
clc
mov
lret
xchg
sarl
test
mov
call
bound
cwtl
out
mov
dec
loopne
cmp
add
jne
xchg
mov
jb
cmpsl
lods
aam
mov
notl
in
xor
xchg
in
mov
mov
cmp
lock
rcrl
test
movsl
sbb
adc
mov
insl
iret
test
mov
iret
jnp
ja
xor
nop
aam
imul
push
xchg
cmp
jp
and
mov
push
aam
xlat
mov
punpckhbw
pop
pop
outsl
mov
out
int3
xchg
fdiv
xchg
std
ljmp
scas
inc
inc
test
mov
cmc
sub
add
dec
inc
out
xor
or
mov
test
fldt
or
cmpsb
test
xchg
jge
mov
shrl
repz
stc
xor
xchg
pop
xchg
xchg
stos
je
add
es
or
or
mov
mov
pop
clc
in
mov
push
xchg
lods
les
adc
gs
orl
xlat
adc
call
mov
enter
jo
js
pushf
sbb
inc
test
fs
jo
mov
cmpl
jecxz
sub
ret
ljmp
call
inc
pusha
outsl
cmp
inc
mov
cmp
test
mov
insl
pusha
sub
xor
fwait
loopne
sbb
andb
imul
aam
adc
pop
leave
mov
xchg
mov
mov
aaa
loope
mov
popa
xchg
jg
dec
jo
mov
ja
fcoml
adcl
das
fisubl
in
ret
mov
call
add
outsl
in
in
adc
and
jo
add
push
add
cmp
inc
cli
in
loop
mov
xchg
mov
fimull
loopne
stos
pop
sbb
add
push
cwtl
dec
out
mov
bnd
popa
or
lds
and
mov
jecxz
mov
xchg
std
dec
add
ds
mov
and
jae
cmp
jb
sbb
push
fadds
js
daa
add
cwtl
outsl
sahf
xchg
rcrl
jmp
mov
jl
mov
mov
aaa
cmp
test
mov
lret
lds
lret
xchg
push
enter
pusha
ror
shlb
push
outsl
and
call
pop
outsb
scas
or
inc
xchg
insl
mov
sbb
leave
mov
lret
push
adc
cs
mov
mov
push
clc
pop
repz
jnp
fs
rcrb
cmp
jmp
xchg
push
jb
incl
sbb
mov
adc
jae
data16
test
xchg
fld1
mov
repnz
jne
xor
imul
mov
ds
cld
mov
data16
popa
lret
pop
fcompl
mov
and
push
outsl
jnp
mov
pusha
mov
sub
dec
mov
dec
in
sub
out
jle,pt
cltd
xchg
lahf
call
pop
xor
sbb
lds
inc
and
fdivl
int3
cmp
imul
push
mov
or
sbb
xchg
or
push
sub
push
mov
rorb
xchg
mov
push
loop
xchg
inc
add
push
clc
jp
dec
mov
aam
scas
das
mov
cwtl
add
pop
fsubs
add
ss
or
insb
into
push
lds
lcall
ja
add
insb
in
lret
and
fst
addr16
lea
jg
out
sub
rolb
sbb
dec
xchg
scas
jg
shll
lea
aaa
stc
pop
addr16
xlat
aas
xchg
lcall
in
add
adc
xchg
cmpsl
mov
add
addl
sbb
xchg
sub
fisubrs
mov
mov
sub
pop
imul
xor
stos
xchg
pushf
pop
jae
int
cmc
cmp
inc
dec
xchg
pop
xchg
enter
xchg
in
jnp
dec
pop
or
cmpsb
cs
mov
scas
ljmp
xor
mov
mov
leave
dec
dec
xor
adc
cmp
adc
add
inc
pushf
jge
push
jnp
sub
or
dec
jmp
push
js
adc
push
jg
add
setno
mov
pop
test
xor
icebp
sub
lods
inc
in
push
or
arpl
int3
cmp
dec
int
sbb
aam
add
imul
enter
shl
addr16
mov
test
mov
pop
or
inc
dec
push
lret
in
add
outsl
arpl
in
inc
stos
cmp
xchg
xor
or
pop
sti
fwait
nop
or
negb
dec
fstpt
push
aad
stos
or
pop
repnz
subl
xor
jecxz
xchg
push
sbb
lret
in
cmp
inc
ds
sbb
in
xor
lret
xchg
lcall
shll
hlt
and
arpl
cli
inc
jle
inc
fdivrl
dec
push
pop
jecxz
jl
test
fnstcw
dec
loopne
inc
ret
cmpsb
inc
es
inc
dec
push
sti
xchg
popa
mov
je
sbbb
ret
adc
scas
push
jno
jbe
mov
repnz
mov
pop
sti
jl
mov
test
push
repnz
add
mov
mov
adc
lret
pusha
dec
jbe
sbb
push
les
nop
aam
cld
push
add
addr16
inc
fildl
sbb
nop
fwait
mov
mov
adc
adc
aaa
fwait
mov
cmp
xlat
jnp
pop
cwtl
std
add
aad
addr16
or
sbb
int3
push
negb
daa
xor
mov
sarl
outsl
les
roll
test
fs
movsl
sbb
sbb
mov
mov
movsb
in
and
lahf
cmc
inc
cld
jo
or
mov
lret
lods
arpl
loope
rol
rorl
sar
jg
enter
push
dec
in
push
push
cmp
fidivrl
lods
or
imul
and
loopne
and
leave
jb
push
pop
movsb
sub
xchg
outsl
pop
pushf
cld
mov
cli
lcall
rcrb
xor
inc
insb
cmp
fnstcw
fidivl
fidivrl
mov
mov
rorb
fldl
xor
mov
std
fisubs
aaa
test
lahf
lods
arpl
or
fisttpll
rcpps
pop
and
dec
fisubrs
stc
xor
mov
loop
stc
mov
pop
mov
xor
and
inc
push
mov
fwait
aaa
push
ljmp
and
jmp
cmpsl
hlt
outsb
sub
add
adc
sbb
jl
pop
mov
xchg
ror
jp
push
aad
rorb
or
xchg
loop
jg
pop
subb
mov
repnz
add
sbb
sub
out
cs
les
inc
outsl
pop
xchg
fxch
and
jbe
mov
mov
jbe
imul
mov
jl
mov
xchg
jne
add
pop
push
xchg
xchg
lea
aas
jp
fsubp
test
xchg
jbe
rcl
scas
lret
les
cmp
cmp
xchg
lcall
pop
stos
mov
testl
iret
add
das
pop
pop
dec
push
cmp
aam
pop
and
cmp
outsl
cmc
mull
jb
adc
adc
mov
mov
pop
outsb
ljmp
mov
xchg
scas
lret
xlat
xor
pusha
sub
mov
adc
jbe
loop
cmpsl
add
sub
inc
out
adc
addl
das
and
adc
repnz
test
mov
and
sub
hlt
push
loope
lock
hlt
lock
sahf
enter
pop
push
lret
daa
cld
mov
jmp
dec
mov
push
lret
dec
aam
sub
xchg
loope
or
outsb
dec
cmp
push
adc
xor
mov
cmp
aad
arpl
sbb
in
cmp
sub
out
out
mov
nop
pusha
mov
fnsave
cmp
ss
jbe
cmpsl
lds
sti
inc
dec
or
fdivs
inc
rorl
divb
dec
stos
stc
ss
rcrl
out
push
or
mov
movsb
cld
mov
sahf
cmp
outsb
dec
sbb
ljmp
mov
fucomp
mov
cs
pop
inc
movsl
lds
gs
push
xchg
xor
xchg
xor
mov
sub
insb
mov
mov
loope
std
jbe
enter
xchg
adc
mov
and
js
out
mov
fistps
xchg
dec
sbb
sarl
ss
fdiv
bound
sbb
cld
lods
das
jbe
mov
addb
pop
mov
mov
pop
xchg
cltd
jle
movsl
daa
xor
xchg
test
dec
and
pushf
or
cmp
loopne
jmp
dec
adc
mov
inc
add
cmc
je
test
fsub
adc
jb
xchg
sahf
xor
cltd
bswap
inc
stos
jns
xchg
mov
cwtl
jle
mov
call
icebp
cmc
insl
scas
data16
addr16
insb
cmp
pop
sbb
xor
adc
aas
jp
inc
fistps
out
movsl
into
lahf
pop
shlb
and
sbb
cltd
mov
add
sar
shll
mov
pop
notl
outsl
and
sbbb
sti
jge
xchg
dec
mov
add
fisubs
fnstcw
adc
xchg
mov
pushf
jge
out
add
stos
lcall
jno
shrb
popa
xchg
scas
ljmp
insb
jge
add
cli
jns
bound
ficoml
les
in
push
push
ljmp
out
lahf
xor
ret
mov
int3
mov
push
fdivrs
mov
pop
aaa
mov
jl
in
repnz
add
mov
jb
xor
dec
loopne
fs
mov
dec
mov
xorb
lcall
dec
cmpsb
fsubrl
outsl
movsb
leave
xchg
push
mov
cld
xchg
jecxz
cmp
cltd
jb
ja
fdivl
mov
sub
sub
adc
add
cld
add
call
les
add
xor
not
fld
jnp
iret
inc
mov
mov
pop
push
movsb
add
adc
ret
mov
mov
notb
pop
outsl
push
lret
outsl
inc
jne
clc
cmpsl
jnp
sti
imul
stos
das
rolb
imul
ror
test
mov
in
js
sarb
and
inc
fdivl
add
repnz
sub
mov
test
in
cs
jo
mov
bound
dec
cli
cmpsb
xchg
jg
scas
push
mov
adc
mov
push
cmpsl
push
mov
ret
add
mov
push
pop
lcall
ret
adc
jmp
arpl
out
ret
pusha
jge
or
or
cltd
shlb
aaa
loop
pop
jo
imul
loopne
daa
sbb
pushf
or
jge
mov
push
icebp
ds
pusha
filds
cmp
cmp
fimull
push
mov
xchg
or
sbb
dec
in
or
out
mov
mov
hlt
jge
in
push
popf
pop
or
mov
fwait
icebp
into
adc
mov
test
jo
ljmp
pushf
ja
aam
xor
add
divb
into
pushf
cli
pusha
jecxz
sbb
adc
cmpsb
shrl
adc
out
ficompl
mov
fildll
sub
and
pop
jne
add
stc
mov
push
xchg
int3
fs
test
gs
cmp
sub
lcall
cwtl
loopne
rcrb
jl
rorl
clc
xor
scas
in
call
sahf
inc
lock
mov
sbb
sub
push
icebp
pop
sub
or
dec
rol
mov
popl
or
and
shrl
lods
xorl
xor
notb
icebp
mov
loopne
cli
sbb
ss
dec
adc
pop
lcall
jne
fstps
fdiv
inc
xor
xchg
addl
shlb
xchg
inc
cmc
push
ss
adc
pop
jl
mov
inc
rcrb
or
sbb
pushf
outsb
mov
lock
mov
cmpb
push
mov
cltd
cld
push
mov
loop
sub
mov
push
fadd
push
jl
sub
jns
fdivl
push
aad
daa
test
dec
je
xchg
andl
ljmp
call
fdivrs
and
mov
mov
loope
mov
cmp
adc
cmpb
mov
das
decl
sbb
sub
repz
add
jl
xchg
mov
mov
mov
out
rolb
out
push
subb
mov
add
shl
sub
mov
pop
add
or
jecxz
mov
imul
pop
pop
dec
jg
xchg
or
rclb
add
mov
and
xor
ret
subb
push
jb
push
add
xlat
cmp
rcll
push
jbe
push
imul
std
insb
push
mov
mov
xchg
xchg
or
rorb
cmp
aad
fs
push
in
inc
push
in
jo
in
out
push
adc
inc
xchg
sub
adc
xor
incl
xchg
ljmp
movsl
push
out
push
mov
data16
cwtl
lcall
mov
inc
imul
dec
cmp
fmuls
mov
push
into
sbb
dec
out
mov
ss
pop
sub
lret
aas
push
in
test
pop
mov
sti
mov
jge
xchg
jnp
mov
mov
test
shrb
repnz
cmp
shll
dec
ljmp
xchg
mov
adc
inc
mov
sbb
aad
push
test
in
mov
movsl
xor
gs
cmp
jp
outsb
gs
shll
pop
xor
cmp
rcll
mov
mov
mov
divb
inc
std
roll
cli
push
xor
xor
mov
add
data16
sub
and
je
mov
jns
ror
unpckhps
cmp
outsb
dec
insb
adc
sbb
mov
sbb
xor
push
mov
mov
pop
in
data16
insl
in
push
dec
lds
mov
das
pop
jmp
mov
jbe
mov
mov
stc
mov
push
aad
jb
jg
xlat
xchg
popa
adc
incl
cmp
into
inc
out
pop
iret
mov
jge
stos
int3
loopne
sbb
cmc
sbb
out
les
sarb
jo
jne
push
inc
adc
push
adc
mov
and
mov
mov
aas
cmpl
mov
lods
mov
mov
xchg
leave
sub
push
mov
sub
std
sbb
inc
add
pop
mov
or
mov
cs
loop
fs
jne
pop
adc
push
in
mov
xchg
cwtl
push
lahf
xchg
test
lds
jmp
push
repnz
cmpsb
sbb
sub
mov
icebp
sti
out
push
add
lret
mov
je
mov
lds
aaa
cmp
call
xor
inc
and
mov
notb
add
xchg
sub
dec
mov
sahf
pop
test
es
push
jg
add
xchg
and
in
shrb
fs
ss
outsl
cmpsl
notb
dec
stos
mov
lock
mov
pusha
xchg
or
jns
pop
xchg
leave
jle
mov
repz
popa
jle
test
data16
dec
sub
xchg
lock
add
cmp
stos
andl
cmp
ja
cmc
xor
lea
pop
enter
jbe
sahf
dec
aam
jecxz
inc
scas
adc
cmpsl
mov
sbb
jle
arpl
insb
insb
test
or
mov
mov
lea
cs
out
xchg
inc
and
add
int
ss
out
idiv
push
pop
ss
adc
xchg
cmpb
mov
mov
jp
rorl
test
repnz
adc
jmp
and
sbb
push
and
pop
addr16
lods
dec
or
jcxz
pop
dec
xor
dec
fnstcw
decb
pop
rdtsc
sbb
push
out
mov
jecxz
dec
test
movsb
lods
cltd
stos
add
out
sub
mov
in
pushf
in
addr16
jle
addl
push
push
xor
mov
pop
repz
int3
arpl
or
pop
test
lret
mov
add
flds
aad
xchg
daa
fldenv
push
ss
mov
andb
xor
lsl
mov
fcomps
xor
dec
outsb
clc
faddl
call
and
cli
out
jle
xor
xor
imul
fwait
xlat
out
into
or
jecxz
xchg
addr16
mov
pop
pop
mov
mov
and
jb
popf
mov
mov
jmp
pop
cmp
shll
js
bound
subl
jae
clc
cmpb
mov
inc
push
fistpl
mov
pop
rcrl
jge
jl
xchg
jo
fdivrs
mov
jge
jne
jge
xor
sti
push
push
or
push
push
jmp
lds
bound
and
je
ljmp
mov
sbb
inc
leave
add
lods
inc
pop
stos
in
jb
xchg
pusha
or
imul
mov
xor
xchg
pusha
xor
popf
sub
cmpsl
sahf
xor
mov
mov
mov
push
pop
mov
insb
or
shlb
xchg
xchg
scas
test
xor
shll
insb
pop
mov
sbb
aad
jge
add
sbb
jb
cmp
daa
mov
inc
setbe
xlat
or
lods
jb
jno
lea
cmp
scas
push
pop
xchg
daa
cmp
dec
sti
test
cmp
repnz
adc
push
rorl
pop
sbb
fdivl
adc
jle
xor
push
mov
movsl
mov
insl
in
push
shll
cltd
rorl
enter
popf
nop
pop
ret
cmp
pop
andl
xchg
cld
sti
xchg
sub
push
fbld
outsb
enter
xor
ds
pusha
xor
cmp
mov
or
lahf
pop
inc
mov
cmp
adc
push
jno
jne
lock
add
push
aas
push
aam
shlb
push
nop
push
or
loope
jb
xor
or
loopne
lods
xchg
mov
pop
sub
lea
cmp
out
lahf
ljmp
loop
cli
jb
sub
arpl
addl
loop
stos
arpl
sahf
adc
inc
addl
fnstcw
pop
mov
movsb
test
jbe
and
in
sbb
cwtl
sti
mov
cmp
loope
sar
fisubs
and
pop
inc
lds
xor
push
or
inc
push
adc
lods
jmp
cmpsl
pop
mov
nop
dec
cmp
int3
lds
pop
rolb
out
push
or
xorb
lods
adc
mov
jno
fsubrl
push
mov
enter
popf
jle
daa
imulb
test
sbb
imul
jns
cs
in
cmp
icebp
cli
or
mov
jbe
call
cmp
xchg
jmp
and
shll
arpl
cld
mov
push
cmp
and
stos
scas
imul
insb
pop
pop
mov
pushf
mov
xorb
pop
dec
mov
inc
in
stos
out
cs
lcall
insl
mov
jbe
rcr
ljmp
jne
pop
mov
out
out
or
adc
aaa
mov
cs
aam
out
dec
fxam
cmp
or
xor
mov
decl
shrl
mov
rorl
clc
lcall
ds
sbb
xor
pop
pop
hlt
xor
lret
in
sub
jp
dec
push
cmp
shlb
scas
rcrl
sti
sub
xchg
sub
sub
jl
mov
and
or
jecxz
incl
jg
sbb
push
and
lret
adcl
dec
push
or
mov
stos
jmp
pop
mov
orb
daa
inc
push
insb
mov
sub
mov
data16
pushf
nop
ffree
lcall
xlat
fcmovnb
pop
mov
out
jp
fdivrs
xor
ljmp
jne
mov
ret
pop
jae
xor
mov
mov
dec
jp
dec
jo,pn
test
out
or
maxps
insb
arpl
xchg
jg
hlt
fnstenv
xchg
xor
clc
and
cli
pusha
cmp
int
test
gs
pop
lock
xor
pop
and
xchg
cltd
mov
push
sbb
testl
ds
xchg
jp
xor
add
pop
or
mov
test
pop
jns
sub
sbb
shlb
mov
outsb
lds
hlt
jg
ss
jns
push
cmp
lock
bound
hlt
pop
test
cmp
add
stos
add
pop
les
mov
cmpsb
mov
inc
jbe
icebp
leave
out
shlb
mov
in
das
mov
fdivrs
cld
pop
iret
pop
pushf
adc
pop
pop
jl
sbb
jbe
xor
sbb
mov
aaa
repz
sbb
pop
scas
ret
ja
jp
cmp
or
dec
jno
mov
add
js
test
add
call
or
std
and
test
dec
sbb
jge
jge
mov
dec
aaa
lods
out
mov
fcmovnb
inc
sbb
xor
inc
repnz
mov
lcall
pop
sub
push
lret
dec
pop
sbb
cld
enter
je
pusha
mov
sub
xchg
imul
jb
mull
add
outsl
imul
std
repnz
int
jge
mov
adc
jo
mov
mov
dec
xchg
rcrl
and
dec
inc
jle
imulb
mov
dec
in
push
mov
aaa
inc
out
jl
adc
mov
xor
repz
pusha
outsb
pop
mov
xchg
test
data16
mov
shll
push
xchg
call
sub
push
mov
jmp
stc
cli
imul
bswap
bswap
and
sti
mov
stc
pop
shr
inc
std
or
idivl
jle
out
jno
inc
icebp
cmp
test
jae
daa
test
or
pop
out
or
shrl
mov
cmpsl
sub
out
xchg
iret
inc
cmp
cld
cltd
cmpsb
js
jb
jno
sub
movsl
pop
inc
xchg
adcb
ds
das
cmc
and
pop
inc
aaa
sbb
pop
out
sub
outsb
jmp
and
cld
scas
ja
xor
je
xchg
mov
push
shr
aad
adc
mov
cltd
decl
or
xor
sbb
cmp
push
inc
cmp
imul
pop
insl
push
lret
fisubl
ds
xorb
nop
xlat
lock
mov
aad
lock
icebp
sarb
out
pop
cmp
dec
enter
incb
inc
jmp
test
xchg
lahf
nop
sbb
jge
pushf
pop
jo
xlat
test
dec
add
pop
mov
in
loop
aad
int
add
push
push
xor
out
jne
enter
mov
sub
loop
and
out
lock
pushf
mov
or
push
lods
or
mov
cmp
sbb
cwtl
xor
cltd
mov
mov
in
push
or
data16
mov
cltd
mov
and
aad
mov
test
sbb
sub
ss
cmpsb
int3
sahf
or
aaa
jle
les
push
scas
push
cmc
dec
cmp
pop
sbb
push
mov
lock
and
sub
sbb
jg
push
pop
cmpb
jle
addr16
jae
add
call
inc
sub
cmc
xorl
add
lret
inc
xchg
call
mov
cmp
jmp
lcall
mov
sbb
clc
pop
pusha
dec
mov
jl
leave
jp
inc
cs
popf
adc
das
ret
outsl
jge
mov
cmpsl
cld
push
lret
adc
arpl
cltd
lods
lock
adc
or
and
inc
cld
push
dec
in
shll
pusha
sub
adc
aad
mov
sbb
dec
mov
ficoml
in
loop
mov
scas
xchg
movsl
jmp
nop
popf
ds
xor
mov
xchg
aam
aam
popf
mov
xor
inc
mov
cmc
mov
mov
lret
sub
cmp
sub
xchg
outsl
mov
pushf
jmp
xor
cli
xchg
mov
xchg
test
sub
mov
xchg
out
loope
mov
jbe
mov
sub
clc
push
ds
loopne
mov
out
mov
test
movsl
rcrb
adc
nop
mov
inc
push
je
fs
fcoms
daa
add
pop
inc
xchg
jbe
lret
fisubrl
insb
test
enter
push
aam
out
cmp
push
ljmp
sub
push
das
push
jnp
test
xor
dec
lahf
rcrl
outsl
std
jle
jne
shrl
or
jno
lods
fildll
int3
aam
and
int3
int3
imul
sub
xchg
pop
test
dec
sbb
or
sub
adc
or
dec
cmp
shlb
sub
iret
pop
xor
xor
adc
xor
test
outsl
adc
popa
xchg
popf
lcall
pushf
jl
inc
and
aas
movl
dec
popf
xchg
pop
mov
xor
pop
dec
adc
aas
mov
repnz
push
pop
mov
scas
push
addb
loope
xchg
hlt
aad
xor
mov
andl
scas
cmc
repnz
inc
sbb
jbe
pop
mov
pop
dec
sarl
leave
sar
or
sbb
add
xchg
mov
push
adc
xor
lea
push
adc
jg
push
mov
or
cmpl
add
loope
adc
fidivrl
push
add
jbe
cmp
jnp
jmp
cs
aaa
int
lods
jl
cmp
mov
adc
pop
mov
into
dec
inc
cmpsb
xchg
mov
mov
xchg
jl
stos
cmp
fcmovnbe
imul
mov
repnz
mov
loopne
aas
aad
aaa
addl
int3
popa
mov
shrl
inc
mov
leave
push
mov
shll
add
movsb
or
leave
data16
fmul
adc
shll
cmp
jnp
mov
sub
xchg
inc
fsubl
cmp
test
sbb
repz
lret
das
out
scas
jne
mov
in
adc
mov
test
push
pop
sub
lahf
inc
inc
shlb
jmp
lods
jecxz
push
aaa
and
or
out
and
jns
sbb
mov
cmp
cmc
and
add
int
sub
lods
or
jmp
ret
cmpsb
adc
cmp
inc
xor
ret
arpl
icebp
fldt
xchg
bound
fiadds
pop
mov
push
cltd
dec
adcl
pop
mov
jbe
js
das
dec
mov
sbb
mov
inc
push
pop
mov
imul
push
loope
pop
cwtl
mov
mov
push
dec
out
mov
pop
or
sbb
mov
pop
sti
mov
insl
jns
mov
push
mov
mov
sub
sub
stos
fdivrs
dec
add
mov
pop
push
enter
lea
test
xor
int
sub
inc
adc
fimull
or
mov
nop
ss
jns
inc
jns
sub
fsubs
mov
xor
cmp
pop
or
mov
fisubl
xor
add
push
adc
stos
and
mov
mov
repnz
gs
fcomi
adc
and
fwait
insl
sbbl
mov
cmp
int
mov
sub
fnstenv
cwtl
orb
iret
repz
test
nopl
sti
jmp
and
loope
pop
pop
adc
stc
xor
lock
lea
inc
adc
rolb
lds
js
enter
pop
jnp
jmp
stc
jmp
add
push
aad
mov
or
int3
insb
test
inc
clc
movsb
dec
aaa
sub
ljmp
xchg
ficompl
je
daa
sub
ljmp
insl
es
pusha
icebp
into
out
mov
dec
int3
jno
insb
test
add
xchg
rcl
out
scas
mov
clc
in
push
movups
popf
lods
insl
test
cmpb
sbb
std
mov
dec
xchg
add
outsl
jmp
cld
mov
ljmp
jge
push
js
jbe
icebp
cwtl
out
dec
cwtl
sbb
mov
adc
cmp
aam
mov
xchg
mov
push
lret
sbb
cmp
mov
cmp
mov
outsb
cmp
into
shll
mov
mov
add
inc
and
xchg
repz
dec
out
and
dec
cmp
xlat
mov
shl
and
push
or
xchg
int3
push
mov
lret
in
inc
cmpsl
cmpsl
and
nop
imul
js
pop
decl
movsl
push
xor
sub
mov
out
popl
into
arpl
lret
add
mov
dec
jne
ss
push
mov
inc
xchg
jnp
call
lea
jb
or
and
xchg
test
jecxz
push
sbb
xor
pop
cld
imul
in
mov
cmp
test
adc
sub
pop
enter
push
and
dec
mov
xor
rcrb
popf
and
cmp
jb
cmpsl
jmp
jecxz
jne
xor
push
movsb
mov
sub
jns
jb
mov
movzwl
mov
jbe
add
insb
sbb
jle
pop
iret
pop
mov
aam
pop
sub
scas
fmull
jbe
push
gs
ja
shll
jp
ss
outsl
pop
jne
int3
insl
xor
jecxz
mov
nop
rolb
fcompl
out
rol
and
mov
bound
jbe
sub
ja
pusha
xchg
add
add
hlt
mov
cmp
mov
imul
and
inc
imul
es
adc
and
dec
jle
loop
divl
dec
adc
mul
dec
add
fldl
cmp
mov
or
add
xor
mov
jmp
push
lcall
push
popl
xchg
mov
adc
pop
pop
aas
das
cmp
ret
sarl
jg
inc
ljmp
std
out
test
adc
dec
das
adc
dec
inc
fdivr
pop
icebp
mov
sub
jmp
cmp
dec
sti
int
mov
sub
push
xor
lret
jl
decb
lcall
lds
sub
jb
stos
mov
out
pop
xor
push
rcl
mov
mov
ja
iret
or
jg
cmp
addl
js
mov
mov
lock
sbb
jno
outsl
in
push
hlt
movsb
dec
xchg
pop
repnz
ljmp
sub
loopne
xchg
mov
fstl
push
bound
cmpsl
sub
into
push
aas
cmpsl
jno
loopne
rcll
adc
pop
in
mov
xchg
sub
pop
in
jle
dec
or
pop
data16
mov
out
or
popa
fnstenv
mov
dec
inc
jecxz
mov
stos
jmp
and
je
pop
ficomps
mov
popa
lahf
inc
cmc
fdivrs
mov
hlt
adc
lahf
adc
outsb
mov
inc
hlt
mov
mov
cmp
push
and
dec
lahf
inc
sbb
add
jae
mov
sub
aad
dec
lods
lods
decl
insl
dec
adc
xchg
movsl
je
or
and
or
push
nop
jge
movsl
cmc
stos
lret
enter
dec
xor
adc
mov
loope
lods
jno
xorl
mov
pop
popa
jecxz
xchg
jp
mov
and
cwtl
or
popa
out
xchg
sbb
sbb
inc
arpl
scas
lret
inc
jge
dec
fsubr
adc
or
pop
xchg
mov
or
fmuls
enter
pusha
arpl
xor
pusha
xor
cmp
cmp
push
pusha
out
arpl
pop
mov
sbb
stos
pavgw
mov
jnp
loop
pop
mov
pusha
mov
shrl
push
and
cmc
fdivl
dec
hlt
outsb
dec
ds
cmp
xchg
adc
int3
stos
add
mov
jns
inc
pushf
icebp
adc
fistpll
inc
xchg
in
jmp
mov
fwait
mov
cs
cli
jl
clc
jg
test
inc
or
in
sbb
cli
ss
dec
jo
sbb
popf
lods
adc
xor
pop
sbb
je
fildll
les
mov
shll
jno
lahf
dec
ret
mov
push
outsb
dec
add
hlt
cmp
push
or
hlt
xor
aad
jo
into
jno
stos
xchg
and
add
xchg
and
daa
jno
mov
and
push
pop
dec
mov
dec
jle
dec
loope
sub
sbb
ja
in
not
imul
pop
jne
mov
nop
mov
mov
dec
aas
sarb
data16
out
lods
dec
hlt
cmpsb
fwait
mov
xchg
movsb
scas
sbb
push
les
loope
cltd
sbb
and
push
pusha
sbb
loopne
adc
filds
jle
pop
xor
stc
les
aad
adc
mov
nopl
stos
pop
push
mov
sahf
or
lock
mov
sub
jecxz
xor
lea
pop
xor
test
call
fwait
pop
lods
dec
in
ret
sub
dec
ret
jne
sti
and
mov
lods
lcall
int3
cmp
jnp
scas
push
lcall
xchg
jo
mov
adc
push
shl
push
jmp
add
or
mov
push
movsl
sbb
cmp
add
frndint
inc
and
mov
cmp
xchg
adc
sub
jbe
pop
insl
incb
jmp
inc
js
addb
std
lcall
sub
pusha
xor
xchg
push
push
jbe
sub
dec
popf
jge
or
cmp
sbb
aad
outsb
pop
or
loopne
out
sub
pop
ja
or
ret
js
lret
fcoms
gs
pop
jge
xlat
mov
cs
push
daa
mov
lret
mov
add
popf
mov
arpl
sahf
stos
pop
fucomip
inc
add
jae
sub
movsb
sbb
int
fcmovnb
xor
lods
xor
jns
add
sub
out
add
aad
xchg
dec
push
call
mov
out
lret
std
jmp
fs
cwtl
pop
out
push
xor
pop
jecxz
push
shl
sub
sbb
mov
cmpsl
outsb
pusha
xlat
sub
subb
sub
jg
sbbb
sahf
or
adc
jns
scas
bound
stos
stos
or
sub
orl
xchg
push
dec
sub
dec
add
or
xor
icebp
mov
andb
mov
outsl
jbe
cli
inc
cld
popa
mov
inc
sub
mov
fisubs
cmpsl
clc
xchg
loope
imul
push
out
repnz
xor
mov
push
pop
push
jmp
leave
adc
mov
fisttps
cmp
ss
in
fdivp
cmp
scas
mov
or
xor
testl
scas
sub
call
stos
orl
xchg
enter
sub
sbb
add
pop
popa
mov
sub
arpl
icebp
out
cs
pop
push
xlat
or
mov
cmp
add
icebp
mov
int3
pop
dec
fstps
xor
mov
ljmp
lcall
test
imul
and
jns
adc
and
or
jne
mov
sbb
jecxz
xor
fiadds
xor
fcmovnbe
call
mov
cwtl
stc
mov
add
add
cmpsb
fidivrl
lds
adc
stc
orl
sub
mov
fidivrl
or
leave
shr
cmp
jmp
mov
out
cli
imul
jg
mov
dec
pop
sbbl
push
mov
jge
fs
stc
mov
pop
es
bound
lret
stc
push
cmp
adc
push
or
sub
ficoml
insl
fiadds
out
imul
popl
lcall
sbb
jmp
jecxz
mov
jmp
es
rorb
push
inc
dec
in
pushf
add
addr16
mov
pop
fsubl
insb
inc
fdivs
sub
and
aas
neg
in
mov
outsb
jne
jge
mov
jns
sbb
aam
and
shrb
mov
mov
fldcw
stos
mov
jecxz
test
push
popa
mov
hlt
shlb
leave
cs
mov
movl
adc
mov
test
mov
nop
ja
outsl
aad
dec
xchg
insb
xor
adc
jl
inc
arpl
test
xchg
out
les
pop
jae
in
xchg
cld
pop
adc
xchg
or
push
xchg
int
and
stos
ss
mov
aad
test
xchg
mov
push
push
outsb
aam
ss
jl
push
or
lods
loope
push
stc
inc
sub
out
dec
rcl
shl
mov
push
std
pop
rorl
mov
push
or
lock
dec
pop
add
clc
cwtl
push
out
stos
jl
in
mov
in
cmp
jb
fst
inc
mov
add
sbb
insl
pop
inc
xchg
cmpsb
push
shlb
or
mov
or
imul
imul
ret
rolb
mov
in
push
fsubl
pop
and
xor
and
rclb
add
mov
xlat
fsub
sahf
dec
sbb
sbb
ficoms
cmp
outsb
jb
adcb
dec
test
or
in
clc
add
jbe
mov
mov
or
inc
lcall
fisttpl
dec
add
and
xor
enter
jo
cmpsl
xchg
cmp
mov
mov
iret
adc
in
xchg
xor
push
cmp
adc
xchg
sbb
add
scas
push
divb
cmp
ja
gs
cmc
hlt
sub
pushf
aas
jle
outsb
cmp
cmp
lods
in
or
xor
or
in
and
push
inc
and
repz
test
lds
rclb
push
ret
popf
outsl
insb
push
xchg
test
pop
cmp
cmp
faddp
ja
push
cmp
jp
jae
mov
cmp
gs
hlt
push
lret
mov
movl
dec
out
mov
xchg
add
ljmp
test
fldenv
fsubl
jae
scas
adc
lods
dec
sub
jle
cmp
sbb
and
cmpsb
cmp
sub
mull
sar
stc
fimuls
popf
or
adc
andb
cli
outsl
cmpsl
sub
pop
mov
mov
imul
xchg
xor
fisttpl
xlat
push
int3
in
insb
pop
std
jl
lods
add
push
jmp
test
jle
dec
jb
jb
std
loope
pop
inc
aam
push
add
insl
scas
hlt
or
sub
mov
push
jle
cmp
pop
gs
lods
cmp
fs
pop
out
pop
scas
mov
xor
add
xchg
dec
mov
fnstsw
add
cmc
and
mov
lods
mov
pop
sbb
es
clc
cmc
outsl
xor
cmpsl
sahf
sbb
paddsb
scas
push
lds
test
mov
repz
push
push
push
into
inc
inc
fnstsw
cmp
push
push
sti
movsb
ja
stc
xor
sub
xor
pop
dec
rcrb
mov
nop
dec
das
adc
dec
out
test
in
push
fidivrs
jne
xor
mov
scas
inc
inc
xor
fstps
mov
stos
loope
daa
ds
adc
test
sub
negl
and
ja
sub
adc
fcomi
call
xchg
out
in
inc
xor
mov
xchg
cmp
push
ja
pop
bound
push
cmp
mov
into
push
sub
mov
jno
jb
outsb
je
pop
mov
je
push
lret
adc
leave
adcl
inc
and
rol
xor
xchg
xor
test
cld
sub
out
subb
dec
push
push
nop
xor
jge
rclb
ds
inc
pop
xor
xchg
xor
cmp
bound
lahf
push
int3
push
cmp
pop
mov
mov
scas
incl
insl
sar
fwait
xchg
pop
cmp
imul
insb
mov
or
shlb
mov
clc
push
sub
mov
xor
xchg
mov
adc
cmp
cmc
lret
lds
imul
cmp
rol
jle
jb
or
out
addr16
or
mov
test
icebp
mulb
or
test
xchg
bound
xchg
aaa
fstl
xlat
pop
sbb
call
inc
mov
imul
and
test
mov
out
push
aam
fxch
pop
mov
or
pop
jno
or
lahf
into
mov
sbbb
inc
mov
mov
popa
pop
movsb
xor
dec
xor
jg
mov
test
out
cmp
and
xchg
out
push
mov
mov
inc
and
sbb
push
dec
jne
add
data16
ret
aas
lcall
or
adcl
daa
fists
or
ud0
push
push
stos
xor
cmp
stos
add
push
inc
lcall
jg
jg
pop
aad
dec
daa
insb
mov
aas
scas
inc
jo
mov
shll
repz
pop
iret
es
stc
or
cmp
mov
mov
pop
dec
fwait
inc
pop
sahf
adc
jg
sbb
fdivrs
jp
xor
in
or
mov
jg
jmp
mov
mov
or
bound
inc
pushf
sahf
mov
or
push
outsl
dec
sbb
pmuludq
arpl
repz
fmull
mov
scas
push
outsb
push
pop
test
int
push
les
mov
xchg
xchg
shr
and
cmp
mov
outsl
sub
leave
stos
fwait
push
sub
or
int3
fdivs
leave
jmp
jg
inc
test
and
enter
mov
push
pop
icebp
xchg
or
or
rcl
or
and
lret
push
pop
jb
or
daa
cli
xor
lds
jbe
push
mov
xchg
lret
lcall
int
in
jg
and
cmpsb
push
inc
std
jp
jnp
jbe
pop
and
mov
jg
icebp
hlt
fbld
out
fsubs
fimull
jne
stc
call
mov
and
outsb
mov
push
inc
or
add
pop
push
fldcw
sbb
mov
jno
xchg
jo
adcb
sarl
adc
mov
mov
mov
in
stos
inc
fiaddl
dec
mov
or
sub
faddl
ja
pushf
outsb
mov
stc
inc
arpl
test
xor
push
push
and
push
adc
jae
add
mov
ret
cli
dec
mov
iret
test
les
jne
decb
or
cmp
push
out
fs
cmp
cs
dec
lds
daa
pop
inc
mov
sbb
push
imul
out
data16
sub
imul
insb
pop
jnp
jns
cmp
shll
leave
ljmp
dec
out
adc
mov
aam
and
out
push
mov
std
xor
iret
inc
pop
xorl
fs
les
adc
addr16
sub
adc
and
lcall
adc
pop
sub
adc
jmp
push
sbb
add
mov
in
mov
xor
jle
shlb
or
stos
clc
cmp
in
ljmp
arpl
lods
repnz
cmpsb
daa
shlb
jno
push
sub
adc
lods
rcll
fs
mov
or
push
in
stos
mov
or
out
sti
lods
xchg
add
push
jg
add
popf
sub
orb
pusha
aas
fs
leave
xchg
jp
js
jbe
jbe
arpl
and
inc
add
movsb
jno
js
fisttpl
cli
hlt
sub
test
cmp
mov
xchg
test
lret
pop
sub
jg
inc
daa
and
pop
mov
cmp
out
jmp
dec
xchg
jle
fwait
lock
loope
int
mov
cmpsl
sub
xor
testb
cmc
movsb
sbb
popa
cmp
scas
and
hlt
enter
dec
push
dec
mov
jmp
mov
cmc
mov
in
outsl
cmp
mov
mov
sub
lds
daa
and
or
psrld
jnp
pushf
push
cmp
sahf
mov
nop
cld
mov
imul
mov
movsb
add
xor
fisttpll
sbbb
and
and
mov
rol
dec
loopne
shll
jns
sub
sahf
test
mov
pop
sarb
test
cltd
fcmovbe
adc
sahf
mov
push
sbb
ret
je
pop
jle
push
mov
mov
sarb
std
das
jecxz
xchg
sarl
mov
cwtl
sahf
outsb
test
add
add
icebp
sbb
mov
fwait
pop
add
mov
xor
shl
xchg
sbb
outsl
movsb
loop
je
jmp
mov
stc
pop
cmpsl
sbb
or
mov
jns
pop
std
cmp
and
jmp
cld
cwtl
jl
fidivrs
mov
jp
jle
pop
pop
sbb
notb
mov
lahf
loope
in
clc
in
dec
pop
imul
push
mov
cmp
xchg
push
subb
sub
pop
mov
lds
jmp
or
ret
ret
mov
adc
xchg
xor
adc
fs
pop
add
xor
xor
orl
out
mov
aam
sarl
and
testl
aad
push
add
jmp
out
mov
into
xchg
mov
pop
lcall
adc
loope
ja
dec
lock
pop
dec
mov
jmp
repnz
mov
sbb
fisubrs
popa
arpl
test
pop
inc
out
add
movsb
push
iret
xchg
inc
aaa
gs
mov
bound
mov
testl
push
xchg
shrl
inc
add
fistpl
sbb
aaa
add
or
js
dec
icebp
daa
or
movsb
aam
xchg
dec
dec
pusha
push
les
or
es
lret
dec
pop
add
jecxz
mov
repz
add
pop
sub
sbb
addr16
mov
push
mov
or
in
pop
fdiv
pop
mov
out
push
xor
mov
cmc
and
sub
sbb
into
imul
cltd
cmp
sub
cs
arpl
leave
inc
daa
cwtl
inc
jae
push
mov
xor
outsl
add
dec
push
dec
jl
xor
add
mov
leave
adc
and
in
mov
out
test
test
sbb
or
jecxz
push
xchg
test
and
mov
cli
sub
xchg
shlb
mul
jnp
loopne
mov
add
and
sub
js
cmpsb
cwtl
addb
decb
arpl
aaa
outsb
dec
dec
lds
es
setle
xchg
fmull
mov
inc
pushf
sub
dec
xchg
sbb
aas
nop
mov
ficomps
mov
negb
xor
das
mov
hlt
in
adc
rorb
imul
mov
hlt
scas
xchg
mov
inc
dec
dec
leave
imul
and
nop
inc
cmp
mov
and
and
cmp
std
dec
clc
arpl
and
sub
or
push
dec
inc
fldcw
or
stc
nop
cmp
mov
sub
leave
jnp
xor
cs
fstpl
es
fsub
sbb
sub
mov
adc
or
mov
or
xor
sbb
add
hlt
xlat
orl
cmp
and
fisubrs
cmp
mov
sbb
or
push
ficomps
scas
mov
dec
pop
mov
stc
out
shrl
or
pop
sarl
nop
jecxz
push
cmp
bnd
sub
int3
cmp
mov
mov
pushl
mov
and
popf
jg
push
pop
cmp
mov
xchg
test
loopne
sub
lock
mov
cmp
push
push
cmp
in
shrd
mov
ds
ficompl
sub
shl
test
sbb
pop
addr16
shlb
sbb
or
pop
inc
xchg
push
jecxz
lcall
mov
dec
jns
lret
cmp
mov
rcr
cs
les
and
add
hlt
repnz
mov
ret
cltd
lret
pop
push
add
mov
ftst
repz
das
jg
loop
and
jnp
sbb
insl
mov
in
add
test
mov
pop
out
jg
xor
cs
jno
xor
jo
sti
into
pop
fcoml
loope
push
nop
ret
inc
push
sub
ret
xor
mov
lahf
cmp
xor
cmpsb
pcmpeqd
adc
pop
pusha
jns
xchg
jmp
cmp
add
xchg
xor
in
pop
inc
test
lahf
call
rolb
mov
jne
and
repz
sbb
enter
popf
inc
idivb
test
arpl
cmp
lret
fucomip
mov
jno
fisubrl
pop
test
lret
ds
das
xchg
adc
cld
inc
xchg
sbb
push
sub
sbb
sbb
icebp
fsubr
dec
lret
mov
mov
call
aam
fdivrs
adc
and
loope
daa
lock
fbstp
decl
mov
dec
movl
xchg
popa
cmpsl
cwtl
jne
mov
hlt
aam
movsb
sbb
jne
mov
dec
insb
js
js,pn
xor
or
fdivs
outsl
aaa
std
mov
push
loopne
arpl
lods
mov
stos
xchg
aam
mov
cli
testl
xlat
addl
adc
je
aaa
sbb
mov
sub
cltd
mov
pop
mov
mov
push
sti
int3
cltd
js
xchg
test
and
adc
lods
cmp
dec
inc
fmuls
mov
test
fisubs
pop
int3
mov
add
xchg
push
cmpsb
ss
xchg
ror
xchg
insl
sub
test
mov
mov
mov
lahf
popf
cmc
jae
jbe
sar
pop
adc
iret
cmpsl
addb
mov
xchg
mov
cmc
pusha
mov
test
push
dec
loop
jnp
mov
xlat
imul
hlt
fs
mov
pop
dec
fmull
enter
adc
mov
out
test
cwtl
fmuls
pop
gs
pop
mov
test
aaa
into
add
pusha
adc
and
pop
gs
inc
andl
adc
sbbl
dec
jmp
bswap
popf
stos
mov
out
mov
mov
cmpsb
push
lret
rcrl
push
mov
sbb
fadds
dec
loop
in
stc
xchg
adc
sbb
cmp
fs
or
mov
mov
test
mov
cmp
repnz
mov
pop
cwtl
ret
mov
jecxz
xchg
movups
jmp
push
mov
sbb
dec
mov
cwtl
pop
push
popa
fcompl
test
mov
mov
sahf
fistpll
sbb
jns
sub
xlat
inc
inc
mov
jae
mov
mov
add
cmp
fsubs
sub
or
je
push
insl
ret
outsb
scas
cmpsb
mov
xchg
xchg
add
adc
adc
roll
outsl
cmc
push
stos
mov
adc
jnp
xchg
adc
pop
insb
sub
repz
insb
aad
dec
dec
cmp
sub
jne
push
stos
and
xchg
pop
push
jns
jle
ljmp
xor
push
outsb
rolb
dec
cld
xchg
loop
ret
mov
movsl
pusha
xchg
fldcw
addr16
inc
inc
aam
lods
ljmp
push
rol
dec
mov
ds
ret
inc
pop
cmp
out
leave
inc
cli
jle
dec
mov
xchg
std
cmp
imul
cmp
aaa
add
std
push
jns
mov
aad
xchg
mov
adc
imul
scas
cmp
lea
add
mov
xor
push
fdivl
push
mov
fnstsw
mov
in
jbe
test
adc
cmp
shll
mov
stc
dec
mov
dec
or
mov
test
mov
test
adc
pop
jb
subl
mov
call
mov
push
jle
xchg
push
addr16
mov
fwait
push
hlt
ja
push
scas
iret
cmp
push
enter
mov
ret
inc
xchg
dec
addr16
cmpsl
inc
idivb
mov
xchg
mov
push
outsl
ljmp
sub
stos
xlat
popa
mov
scas
fldt
mov
add
inc
mov
push
imul
cmp
push
cmc
in
loop
and
popa
pop
push
sti
insb
data16
repz
mov
iret
mov
adc
ds
shll
movsb
sets
jmp
addr16
mov
pop
mov
xchg
pop
mov
mov
sbb
lret
and
cwtl
lea
push
jmp
aaa
mov
sub
pusha
push
insl
out
push
cmp
movsl
xchg
xchg
bts
xor
jo
cli
xchg
out
jge
mov
add
mov
lret
adc
jmp
fidivrs
jle
notl
push
fnstenv
ljmp
imul
mov
add
pop
ds
xchg
sti
push
and
jne
add
or
call
hlt
jle
js
flds
dec
jnp
fldcw
loopne
sub
push
dec
imul
add
xchg
das
cvtpi2ps
out
sar
push
insb
xor
lock
fistpll
int3
imul
aad
insl
divb
fisttpl
xchg
jnp,pn
push
sbb
mov
ret
mov
sub
ret
pushf
push
sub
pop
fs
xchg
fists
nop
pop
notb
dec
add
movsl
movsb
inc
mov
pop
fldl
enter
mov
xchg
mov
or
aam
lock
xor
movsb
stos
add
idivb
in
ja
and
mov
ucomiss
cmp
stos
outsb
aas
mov
lcall
push
jb
hlt
repnz
fwait
cld
icebp
push
pop
adc
adc
push
adc
mov
divb
addr16
mov
push
in
or
jo
mov
shll
out
pop
arpl
pop
lret
add
mov
mov
inc
iret
mov
cmp
ret
jle
push
int
scas
push
sbb
out
pushf
xchg
test
les
mov
rcr
movb
lahf
mov
sbb
sbb
xchg
pop
mov
cwtl
push
push
lret
jbe
xor
pushf
lahf
dec
stc
push
or
xor
and
shll
mov
lds
outsl
outsb
push
test
insb
int3
mov
jno
jnp
adc
jge
addb
out
jns
stos
nop
rorl
pop
adc
orl
or
adc
fmull
lods
icebp
mov
push
vpmacsdql
icebp
push
in
sbb
sub
es
mov
jmp
inc
in
sbb
xorl
testb
jle
imul
mov
pop
fiaddl
jno
sub
inc
jle
clc
dec
sub
cmp
test
outsl
mov
cmpsb
adc
ret
pop
mov
fs
xor
jno
popa
call
in
ljmp
lahf
in
pop
mov
mov
xchg
fnsave
push
scas
roll
out
inc
imul
dec
pop
xchg
shrl
lock
dec
xchg
cmp
jge
arpl
lods
sub
iret
test
ret
mov
inc
cmp
sub
aad
inc
movsl
aaa
and
pop
cmp
pop
mov
dec
and
jge
bound
mov
sahf
insb
pop
xchg
movsb
sbb
inc
arpl
div
xchg
pop
push
xchg
cmp
inc
ds
mov
push
pop
pusha
int
ret
add
xchg
gs
imul
cmc
mov
ss
call
or
rcrb
xchg
call
mov
inc
je
sahf
sbb
fwait
stos
sbb
adc
sub
cmp
sub
pop
aas
popa
cmpsb
add
pop
adc
pop
into
out
xor
cmpsb
dec
and
xor
ror
jge,pn
mov
or
fwait
pop
ret
push
stos
add
clc
xchg
inc
andb
cmp
dec
insb
mov
xchg
pop
lret
sub
scas
int3
test
or
and
xchg
addr16
sub
sub
movsl
jge
movsb
cwtl
inc
sbbb
mov
cmp
dec
sbb
jns
inc
lock
test
inc
mov
arpl
xchg
aaa
cli
cwtl
xchg
pop
jo
icebp
js
or
xor
xchg
dec
aad
es
pop
or
mov
rcl
hlt
or
and
lret
xor
push
cmc
push
push
adc
ss
dec
and
aas
daa
movsb
sbb
and
sbb
sbb
je
fists
es
outsb
cmp
insb
or
pop
adc
cmc
push
mov
incl
dec
mulb
and
xchg
inc
into
sahf
push
pop
mov
add
sbb
mov
xor
pop
sub
cmp
sub
xor
js
inc
or
lock
cltd
out
std
jns
xchg
aam
pop
push
aam
cli
adc
fistps
mov
out
int
movsb
xchg
and
out
pop
stos
cmpsb
enter
dec
jne
inc
push
jae
out
mov
es
or
shl
hlt
sbbl
or
xchg
jge
mov
xchg
nop
xchg
faddl
cltd
mov
movsb
xchg
sub
sarb
cvtps2pi
dec
bound
cmp
dec
lahf
mov
cmpsb
ret
pop
push
lods
pop
inc
repz
stc
cmp
je
pop
shll
pop
add
mov
pop
xchg
subl
out
add
je
mov
mov
sub
inc
jg
imul
jae
inc
dec
push
arpl
push
jl
xchg
mov
andl
aad
movsb
mov
pop
mov
out
pop
or
push
repz
scas
dec
mov
dec
mov
cwtl
jo
mov
push
push
pop
xchg
push
out
incl
push
or
and
xor
dec
pop
inc
xor
xchg
lret
mov
push
dec
sbb
cs
bound
dec
fidivs
sarb
jmp
jl
pop
mov
stos
ss
mov
pop
pop
xchg
add
in
popa
pop
lods
jne
ljmp
scas
inc
lret
jle
push
add
push
lods
pop
dec
aas
add
ficomps
xchg
cmp
cwtl
fsub
rorl
aas
xor
sahf
dec
in
divl
xchg
pop
sbb
cmp
push
fdivl
add
inc
addl
jo
in
cltd
enter
rcr
push
es
lahf
sbb
stos
adc
pop
lea
xchg
jo
out
mul
mov
mov
test
sub
ret
dec
cmp
cmp
jae
jmp
outsb
dec
push
cld
fsubs
adc
pop
pop
int3
int
sysexit
sub
out
adc
jge
sahf
cmp
pop
sub
inc
mov
jp
mov
les
scas
and
adc
push
outsl
and
jp
in
call
xchg
mov
cmc
incb
inc
repnz
pop
fld
ss
into
cmp
cmp
xchg
and
shlb
addl
cmpsl
aas
xchg
jg
sbb
pop
out
xchg
adc
cs
pop
cmpsb
daa
nop
not
dec
sbb
fldt
imul
fimuls
sub
rcll
ret
adc
sbb
mov
fwait
or
fimuls
lret
xor
mov
into
mov
jbe
jbe
imul
pop
int
sbb
clc
adc
sbb
pop
ja
pop
faddl
scas
daa
decl
testb
pop
sbb
xchg
sub
jns
or
add
jae
js
inc
cmpsb
sub
adc
sub
push
lods
and
sbb
mov
jl
jae
jmp
and
cmp
mov
mov
inc
cli
or
pop
inc
imul
adc
add
jge
push
jb
mov
sub
xor
push
imul
dec
clc
jecxz
lods
insb
pop
add
lret
xchg
ljmp
adc
inc
add
sbb
mov
sahf
daa
mov
outsl
jo
adc
dec
mov
xchg
testb
leave
jmp
jmp
cmpsl
cli
sbb
adc
xchg
sub
and
pop
mov
hlt
dec
lea
dec
ret
jae
cmp
mov
shlb
mov
mov
sub
popf
or
ljmp
rorl
aas
outsb
std
pop
or
mov
pusha
and
mov
dec
sbb
test
insl
aas
mov
mov
sbb
cmp
cmp
mov
or
sbb
cld
xchg
push
arpl
ret
and
repnz
cwtl
lock
mov
hlt
cmc
add
jae
je
inc
fisttpl
pop
insl
mov
cltd
mov
cmpsb
jl
insb
fidivs
jbe
ficoms
fwait
pop
cmpsb
mov
add
push
jae
and
cmp
sub
pusha
xchg
cmc
and
ja
mov
andl
sub
clc
xchg
fwait
sub
mov
jmp
in
pop
fwait
inc
inc
xor
mov
add
mov
ret
lds
push
into
dec
jno
jp
mov
jge
or
icebp
shl
mov
cmc
movsb
rorb
lods
aam
sub
mov
repnz
outsl
inc
or
imul
add
mov
jge
jge
mul
test
jo
sub
mov
stos
jbe
ja
js
ja
or
add
sub
lods
out
out
mov
cwtl
inc
pop
inc
aas
xchg
push
cmpsl
mov
push
mov
adc
movsl
out
bound
hlt
addl
xchg
test
mov
pop
push
test
mov
mov
in
adc
mov
inc
add
ljmp
pop
and
inc
sub
add
sarb
test
jb
shll
mov
dec
outsb
cld
sub
hlt
sub
inc
cltd
pop
adc
enter
sbb
and
std
out
adc
mov
hlt
cs
jo
sbb
pop
shlb
mov
dec
mov
pop
jo
sbb
outsb
cld
stc
sarl
mov
cmpsb
push
nop
pop
xchg
sbb
adc
aaa
sub
add
stos
aas
repnz
outsl
ljmp
lock
cs
loopne
inc
sarb
or
cld
bound
bound
mov
mov
jo
mov
push
andl
inc
andb
sub
jle
inc
pusha
loopne
repnz
sub
inc
and
fwait
ret
gs
mov
inc
andl
shrb
mov
loop
call
ja
scas
mov
shlb
cld
or
lcall
cmpsl
xor
or
arpl
lods
sbb
mov
adc
sub
cli
out
cs
into
int3
rclb
mov
jno
ss
mov
rorl
fdivrs
and
mov
les
sbb
mov
cmp
push
sti
test
mov
loopne
jnp
push
sbb
fwait
gs
sub
fdivrs
sbb
mov
adc
pop
mov
lea
nop
cli
pop
adc
ds
mov
xor
call
pop
add
mov
jbe
fwait
lods
sbb
dec
lea
mov
push
dec
add
sbb
sbbb
dec
sub
dec
test
jns
frstor
pop
xchg
outsb
movsl
cmp
push
aam
mov
or
mov
stc
pop
add
cli
xor
sti
push
cmpb
mov
insb
int3
push
ds
fidivl
or
arpl
mov
push
inc
mov
pop
rcll
mov
xor
adc
xor
sbb
xchg
xchg
in
ja
movsb
mov
mov
fs
cmpsb
cmc
dec
xchg
es
das
sbb
or
shrb
add
mov
add
ja,pn
push
ficoml
cmp
dec
mov
data16
int
sbb
loop
and
lcall
popa
lds
jmp
push
adc
mov
inc
es
hlt
pusha
imul
bound
or
mov
push
sbb
jno,pn
sbb
mov
notl
ja
xlat
arpl
sub
and
adcl
notl
lods
sub
sahf
movsb
or
jecxz
fcoms
xchg
push
and
imulb
popa
enter
sbb
adc
fadds
int3
lds
lds
jno
sbb
jecxz
aam
in
and
dec
xor
xorl
pop
out
and
icebp
into
fidivrl
push
cmp
shll
mov
test
movsl
jbe
and
loop
add
aaa
lret
in
jmp
fdivrl
scas
lahf
call
pop
ret
xchg
sbbl
aad
fsub
jmp
aam
cmpsb
out
rolb
mov
dec
mov
dec
inc
loop
or
sub
test
adc
add
adc
subb
jp
cmp
lcall
xchg
xlat
pop
aas
cmp
insb
xor
mov
dec
pop
push
pop
adc
and
int3
subb
xor
aaa
clc
je
add
ljmp
shrb
push
mov
xchg
jno
add
xor
stos
ret
inc
sub
sbb
add
dec
add
cmp
pop
and
aad
xorb
pop
adc
rcrl
cmpsb
or
ljmp
add
lds
mov
lods
testb
lret
clc
in
jns
sar
pop
adc
cmp
pop
pusha
les
xchg
movsb
shl
test
pop
lods
mov
sub
adc
ja
pop
lret
mov
in
or
mov
xor
ret
jne
jno
stos
mov
mov
and
das
ss
or
mov
fildl
push
and
inc
adc
fisubl
negl
scas
std
sbb
xchg
sbbb
in
jno
shr
or
dec
lcall
addb
push
inc
adc
subl
add
mov
pop
int
inc
adc
xor
fcoms
leave
sbb
adc
xchg
and
test
inc
inc
jmp
aam
and
hlt
xor
rorb
test
fcomp
cmp
in
insb
jge
xchg
add
and
sub
es
insl
mov
xchg
cli
mov
imul
mov
mov
jno
sbb
sbbb
popa
dec
fsubs
inc
fadds
push
gs
pop
gs
jmp
fidivrs
in
pop
and
add
mov
jmp
sti
jg
cs
dec
leave
aas
cmc
jmp
lea
adc
mov
dec
mov
jge
xchg
mov
adc
jle
xor
mov
rorb
push
cmp
repz
cltd
jnp
pop
lcall
dec
pop
pop
lret
rcrl
xor
xlat
cmc
xchg
xchg
scas
clc
push
ffreep
insl
fwait
cld
xchg
push
push
sub
or
in
jmp
insl
xchg
hlt
subl
mov
nop
fs
jge
or
or
push
xchg
inc
jne
xchg
sbb
es
push
jnp
outsl
and
scas
sub
stos
aaa
push
pop
mov
fisttpll
sub
fcom
lcall
add
adc
push
fnstsw
pop
inc
es
pop
sbb
xor
mov
mov
cmp
xchg
xor
rcrl
std
xchg
clc
testb
mov
ja
cli
addr16
or
dec
push
pop
ss
mov
icebp
inc
dec
test
or
and
ret
scas
sahf
cmp
vpmaddwd
inc
jbe
in
fmulp
leave
xor
enter
mov
dec
lods
pop
inc
sbb
into
insl
outsl
jge
into
xor
daa
mov
jae
mov
pop
les
mov
inc
rorb
aaa
sarl
mov
andb
test
jl
inc
cmp
sbb
xlat
sub
sub
xchg
push
cmpb
xor
hlt
es
lods
sarb
push
push
fidivrs
jge
mov
icebp
lock
sub
cltd
in
jae
dec
add
shrl
orb
mov
or
ret
inc
xchg
mov
lea
addr16
movl
adc
add
xor
sub
cmp
xchg
loop
mov
add
add
xlat
xor
mov
int
mov
xor
pusha
inc
or
dec
xchg
pop
mov
push
push
pop
add
inc
xor
jbe
ds
mov
aam
out
fbld
pop
add
push
popf
jmp
int
jb
testl
addr16
outsb
push
lahf
cmc
ja
cmp
xchg
aam
lock
push
dec
pop
ja
mov
imull
repnz
ret
lds
leave
test
cwtl
gs
pop
xchg
in
out
fldl
adc
cmp
push
push
fs
scas
xchg
aam
or
cs
loopne
or
jns
xor
push
mov
pop
ret
cmpsl
inc
icebp
pop
mov
sbb
adc
aad
aam
stos
xchg
inc
out
mov
mov
sbb
in
sbb
je
imul
sbb
mov
imul
push
cltd
inc
in
aam
divl
cli
cmp
or
pushf
xchg
mov
mov
incb
fadds
push
dec
sbb
popf
add
lods
mov
jae
subb
or
xchg
addr16
aas
pop
jecxz
xchg
out
xlat
and
pop
cmp
arpl
dec
repnz
mov
repz
cmp
das
mov
in
test
and
xor
lret
xchg
mov
movsl
or
cltd
pushf
ret
dec
dec
cmp
inc
sarb
adcl
mov
scas
jb
das
pushf
dec
mov
lods
fld
xchg
dec
jmp
loop
adc
aam
pop
out
mov
jmp
jnp
xchg
aas
jmp
mov
scas
xor
mov
jnp
dec
shrb
test
push
fdivl
mov
xor
mov
out
and
je
scas
adc
insl
push
mov
mov
xor
or
pop
push
and
daa
popa
cli
mov
xor
out
push
js
mov
or
cmp
js
mov
pop
mov
jl
dec
dec
or
cmpl
popa
test
shrl
dec
pusha
fcoms
ret
stos
push
sahf
imul
dec
xchg
jmp
adcb
fwait
repz
jno
xchg
sbb
mov
push
sbb
les
mov
pop
adc
jae
lods
sub
test
pop
into
shlb
mov
xorb
ss
mov
notb
clc
push
rcll
pop
pop
adc
fisttps
test
loop
push
lret
dec
cmc
xchg
sub
jbe
popa
mov
dec
or
mov
mov
enter
imul
cmpsl
jmp
fimuls
fdiv
adc
cmpsl
sahf
xchg
pop
inc
xor
popf
lods
pop
cmp
lahf
mov
cmpsl
imul
sub
push
shl
ja
loopne
adc
enter
push
loope
jp
cmp
fistl
lea
cmc
imul
sbb
lods
xchg
mov
sahf
push
je
mulb
push
or
xchg
xor
pop
loop
pop
and
fwait
movsl
sub
std
dec
in
sbb
adc
mov
mov
sbb
shll
pop
pop
test
push
lcall
xor
mov
outsl
cmp
fs
xchg
cld
sbb
out
adc
mov
lods
enter
jmp
dec
mov
inc
sbb
xor
add
sbb
sub
add
sbb
pop
out
pop
mov
adc
daa
xchg
or
mov
in
sahf
sbb
mov
jbe
cmpb
pop
and
xor
sub
adc
les
nop
test
bound
arpl
cmp
notb
shlb
adcl
and
ja
sbb
push
push
rclb
mov
repz
ljmp
loopne
push
lods
pop
pop
insl
adc
int3
in
stos
test
fisubrl
outsl
or
xchg
daa
cltd
push
cwtl
lcall
cmc
enter
jge
cmp
arpl
sarl
or
sbb
pop
push
jns
dec
cmpsb
push
sbb
dec
fmuls
lods
in
test
fisttpll
movsl
dec
hlt
adc
cmp
inc
push
adc
cmp
out
adc
add
push
mov
add
fmuls
mov
lods
jecxz
pop
cmp
ss
pusha
jp
mov
cmp
mov
in
cmpsb
ret
push
cmc
lea
int
mov
fdivl
lods
mov
mov
sti
mov
jp
push
loope
mov
orl
stos
ljmp
insb
and
jmp
es
repnz
mov
addps
movsb
jle
inc
jnp
mov
xchg
imul
daa
incb
rsm
loopne
sub
lret
sbb
adc
jne
stos
pop
add
shlb
push
jnp
cmpsb
pop
mov
cmp
loope
push
dec
dec
faddp
pop
dec
imul
mov
cmovl
mov
push
and
bound
cs
xchg
pushf
into
fbstp
and
mov
xor
mov
and
xchg
add
xchg
or
cmpb
mov
aam
pushf
sub
nop
adc
cld
jnp
and
cmc
cmp
inc
mov
mov
inc
std
ret
lock
pop
push
pusha
xor
jle
xchg
xor
loopne
mov
es
sbb
jbe
adc
enter
jl
mov
and
je
repnz
mov
xchg
sahf
iret
sub
push
ficoml
push
mov
sbb
lcall
jno
xchg
call
dec
imul
mov
xor
mov
xchg
inc
dec
xor
mov
iret
dec
jo
push
pop
clc
jns
and
movsl
in
cmc
jbe
mov
mov
js
daa
das
addr16
inc
aaa
leave
sub
push
call
lds
in
add
mov
xor
outsb
xchg
stos
mov
shrb
test
jae
es
push
pushf
cmp
sbbl
icebp
jecxz
mov
push
or
dec
xlat
pop
push
notl
push
pop
shlb
sbbb
inc
and
adc
mov
mov
mov
sub
xchg
push
pop
jo
jae
push
pop
dec
mov
jmp
mov
lods
test
push
test
mov
stc
push
stc
inc
pop
cmpsb
repz
test
sub
adc
repz
add
push
outsb
push
aaa
fistpll
sub
repnz
fisubrs
fldl
mov
and
cld
dec
mov
fwait
mov
or
add
add
aaa
push
jmp
and
sbb
rorb
or
push
sti
sbb
fiadds
rorl
pcmpgtd
xchg
les
sti
cmc
sti
mov
xchg
gs
jo
sbb
lea
iret
mov
fildll
jbe
sbb
add
fcomps
mov
and
pop
lret
daa
cmp
imul
test
outsl
mov
jle
pop
inc
mov
sub
and
shl
mov
cmp
xchg
in
push
pushf
lods
jmp
out
mov
jo
sbb
ss
cli
jo
lea
mov
xor
add
mov
daa
inc
jmp
lds
xchg
add
psubsb
addr16
arpl
and
repz
pop
out
in
mov
add
stos
or
loopne
lock
lock
pop
cmp
dec
ret
xor
cmc
mov
jns
sbb
clc
inc
push
sbb
dec
and
cli
fcmovnu
js
dec
jge
xchg
jg
and
sub
scas
dec
cmc
loop
pop
and
mov
mov
out
dec
iret
std
pushf
sti
jp
xlat
out
add
or
fbld
and
rorb
test
inc
jne
push
xlat
loope
out
mov
cmpsb
and
mov
je
mov
outsb
pushf
adc
out
and
lods
mov
push
loop
and
mov
cmp
loop
jl
iret
fisubl
and
jnp
in
out
lock
repz
nop
or
push
lret
pop
mov
movsl
insl
fnstenv
add
push
and
push
sub
sub
andl
push
loopne
aad
mov
rclb
stos
mov
xlat
push
leave
lods
jmp
popa
outsl
bound
cmp
in
aaa
and
dec
rcrb
mov
sahf
mov
adc
ror
push
inc
xchg
lret
lods
mov
mov
mov
orl
lea
fistl
leave
jb
or
test
xchg
sbb
mov
sbb
lcall
jne
adc
sbb
mov
mov
xor
clc
dec
jecxz
fnstcw
repz
out
test
loopne
jmp
cmp
in
jl
testl
push
mov
push
xchg
out
sub
cmp
add
sub
adc
lods
add
and
or
loopne
and
lahf
jecxz
pop
mov
cmpsb
inc
pushf
and
or
push
aas
adc
sub
push
adc
rol
gs
lahf
pop
andl
test
pop
movsl
ret
push
mov
fsubl
pop
adc
stos
loop
pusha
push
lahf
shll
sub
shll
in
int
push
mov
mov
pxor
xchg
cmp
in
cmpsb
imul
scas
movsl
pop
sbb
lahf
sbb
xor
pop
aad
mov
pushf
mov
xor
iret
stc
pop
cs
inc
sub
fs
jne
and
movsl
xor
jno
stos
mov
jge
mov
daa
mov
mov
dec
xor
inc
and
rorl
mov
stos
rolb
mov
nop
sub
sahf
add
jbe
loop
xchg
test
int
inc
cld
sbb
clc
pusha
mov
fsubl
bound
cmp
mov
push
dec
loopne
mov
jecxz
repz
lods
ret
divb
mov
mov
adc
lahf
sbb
cmpsb
mov
jg
stos
cld
cmp
mov
aad
gs
mov
adc
rcr
mov
ds
mov
cli
sbb
cs
movsb
mov
ret
push
mov
inc
ja
out
jp
mov
rcll
pop
adc
punpckhwd
orb
lret
adc
test
aad
push
xchg
test
fs
mov
movsb
pop
mov
sbb
and
lock
cmp
or
lea
sbbl
and
jbe
mov
ss
clc
inc
mov
cmp
nop
sbb
mov
cs
fsubrs
push
repnz
push
or
inc
mov
xchg
pop
lahf
cltd
je
jns
repnz
mov
hlt
pusha
inc
sbb
sub
fs
xchg
xchg
mov
lahf
xor
es
andl
xchg
jmp
xchg
dec
and
push
mov
xor
loope
or
or
lahf
cltd
insb
xorl
out
movsl
dec
jns
shrb
es
jbe
sub
cli
fwait
mov
mov
fnstsw
mov
cltd
lret
mov
sysenter
out
ljmp
mov
les
xchg
or
outsl
lea
sbb
jl
mov
repnz
imul
loop
aas
repnz
popa
push
cmp
sarl
push
divb
jle
dec
repz
dec
xor
or
mov
or
sub
popf
sub
dec
nop
out
movsl
or
cmp
popa
adc
xor
icebp
xlat
scas
mov
and
stos
mov
sti
pop
gs
xchg
fucomp
pusha
sbb
xchg
imull
pusha
jmp
ljmp
jb
push
in
fcoms
out
sub
mov
add
mov
ror
sbb
mov
ret
and
test
stos
cld
daa
repnz
cmp
inc
add
rcrb
push
std
repz
fnsave
clc
push
cmp
mov
xor
in
cmpsb
xchg
cmovae
pop
xor
shr
pop
jne
fsubrs
push
sarl
pop
adc
xor
xor
xor
adc
mov
mov
or
adcl
lret
fdivr
dec
outsl
push
scas
and
add
in
mov
push
push
sbb
gs
add
jnp
lahf
dec
pop
test
aas
insl
sub
inc
ret
adc
xlat
mov
das
jp
jbe
fldenv
ss
out
sti
push
pushf
sbb
call
inc
mov
dec
xor
add
xchg
sbb
ds
insl
fwait
cmp
add
jns
adc
jle
push
mov
and
push
movsl
in
dec
adc
inc
movb
movsl
pop
push
rorl
mov
push
jno
sub
lods
stc
clc
fs
out
scas
mov
jp
dec
push
fldl
cli
fs
sub
inc
push
cmpsl
sub
sahf
sub
lds
mov
jle
and
imul
and
jno
movups
xchg
jle
pushf
mov
lea
fdivrp
jbe
out
xchg
rcrb
popf
or
mov
loop
fisubs
or
mov
inc
mov
jp
mov
cs
pusha
jge
movsl
mov
dec
jmp
pop
jbe
aam
loopne
jle
movsl
inc
push
inc
insl
sub
jecxz
in
dec
ja
in
mov
adc
stc
jle
nop
lods
loope
je
ds
psrld
es
ret
cltd
jp
push
sub
les
push
cmc
add
sahf
adc
aaa
rorb
lahf
xchg
icebp
pop
pop
test
stos
push
adc
clc
sub
out
xchg
or
mov
gs
push
dec
call
inc
xchg
sub
pop
sbbl
or
test
push
mov
outsb
leave
pop
cli
or
repnz
xchg
xor
in
xchg
insl
loopne
xchg
addr16
mov
xchg
data16
data16
push
stos
and
andl
test
aad
lret
sub
dec
xchg
pusha
xorl
cmp
dec
imul
nop
ljmp
hlt
push
rcll
insl
pop
iret
mov
add
xchg
mov
enter
aam
lds
mov
in
out
dec
iret
les
mov
insl
cvttps2pi
dec
jno
inc
inc
es
xor
and
cltd
mov
push
pop
in
fwait
mov
and
gs
mov
pop
stos
ss
in
inc
jns
jecxz
adc
xchg
adc
mov
xchg
add
pop
sbb
loope
xlat
mov
xor
inc
push
mov
cmp
xchg
icebp
add
cwtl
call
sbb
in
fsubs
jno
std
add
mov
adc
enter
jo
repnz
scas
add
pop
mov
out
mov
inc
xchg
fbld
mov
int3
and
jbe
xchg
int
xor
lret
lret
jo
loopne
nop
repnz
mov
cli
les
les
mov
push
and
and
pop
fwait
rorl
mov
push
push
dec
sub
jb
cwtl
mov
scas
fistl
mov
pop
cwtl
rcr
cmp
adc
lret
mov
lcall
mov
sub
shll
adc
movsl
cwtl
lds
jo
adc
xchg
call
in
mov
scas
sbb
mov
mov
xchg
inc
pop
outsl
adc
mov
xchg
imul
mov
pop
mov
outsl
rorb
shlb
ja
mov
testl
inc
imul
or
pop
lcall
sarl
cwtl
lret
lahf
lret
inc
sti
lret
loopne
xlat
fdivrs
xor
xchg
lret
leave
insl
pop
sub
add
sub
pop
cmp
cli
pop
mov
sbb
jg
iret
js
in
mov
cmpsb
fldt
mov
push
int3
lret
out
fdivr
and
or
xor
aad
mov
lcall
or
jl
shlb
fiadds
jb
mov
leave
fstp
jae
fwait
cli
les
pop
in
loope
mov
shl
orl
pushf
test
lds
test
push
jmp
push
js
mov
mov
pop
cmp
cmc
add
xor
xchg
stc
jae
sahf
sub
iret
cmp
xor
sbb
and
les
cmc
in
jnp
xchg
sub
cmpsb
leave
in
and
or
lods
sub
xor
dec
cwtl
xchg
mov
add
cmp
jge
in
push
xchg
sub
push
jge
or
xchg
repz
xchg
ss
ret
leave
cmp
jnp
icebp
fnstsw
out
lcall
cmpsb
push
push
sub
xchg
cltd
xor
jl
movsb
sub
shl
mov
xorb
daa
or
ffreep
jnp
in
jne
push
pop
jb
mov
jg
cmp
into
and
stos
xchg
das
xor
mov
jecxz
movsb
in
add
imul
pop
jns
cmp
adc
xorl
movzbl
fcmovnbe
adc
pushf
pmuludq
loope
pop
and
ret
in
lret
push
and
inc
cmp
dec
jb
mov
data16
test
dec
inc
mov
inc
jmp
enter
cli
adc
jge
cmp
or
cmp
loope
push
or
lea
mov
clc
lods
cmc
fdivs
xor
lock
outsl
es
movsl
push
mov
push
fdivp
jbe
iret
xor
jne
sbb
iret
xlat
test
adc
adc
call
test
cmpsl
clc
push
push
scas
inc
jbe
vpsadbw
popa
clc
cwtl
jl
jmp
fidivs
popf
push
push
cs
rcrb
sub
fiaddl
cld
mov
and
dec
arpl
dec
inc
stos
aad
adc
add
xchg
loope
cmp
hlt
arpl
pop
out
in
jbe
in
mov
aas
adc
pop
icebp
sahf
es
sbb
fnstcw
sub
pop
insb
jmp
jne
ja
loopne
frstor
or
jle
xchg
inc
jae
outsb
pop
adcl
sub
stc
icebp
mov
hlt
ljmp
mov
orl
mov
mov
dec
dec
sahf
jecxz
inc
jge
clc
popa
cmp
sti
out
xor
xchg
mov
add
rorl
nop
sub
hlt
test
cmp
ficoms
mov
mov
inc
lret
inc
cmp
das
fimuls
in
sub
addr16
sub
pop
adc
aas
and
or
mov
xchg
lret
and
mov
mov
cmp
sbb
stc
jne
adc
iret
std
popf
outsl
xchg
pop
mov
ret
mov
cld
sub
xlat
sub
jecxz
push
mov
cmp
sti
mov
jmp
cs
addr16
and
inc
xchg
cmp
int3
adc
inc
xchg
mov
dec
mov
pandn
fs
sub
test
dec
mov
add
mov
and
pop
nop
out
ret
jbe
mov
adc
mov
dec
mov
addl
mov
sbb
mov
in
mov
jb
repnz
repz
mov
notl
negl
adc
out
insb
push
add
inc
pop
cltd
dec
bnd
adc
loopne
adc
jbe
mov
loopne
and
mov
dec
in
in
cmp
rorb
loopne
lahf
fldenv
in
pop
push
push
adc
mov
inc
push
inc
sbb
dec
sahf
lock
adc
add
jne
or
push
xchg
stc
or
push
adc
cmp
mov
loop
jno
mov
mov
jbe
fstpl
js
fwait
mov
nop
dec
cmp
push
sbb
add
mov
xlat
sbb
aad
rcr
dec
in
mov
push
shrd
fld
repnz
xor
out
inc
lods
mov
xchg
ja
add
lods
add
mov
pop
fs
xchg
xchg
lea
cmp
jne
mov
inc
pop
push
je
dec
or
fdivrl
loope
loope
or
sub
adc
inc
data16
add
inc
sub
bound
adc
adc
pop
adc
xchg
xchg
inc
pusha
aam
lock
out
pop
imul
mov
enter
add
pop
leave
pop
cmp
insb
jns
add
sti
ss
enter
mov
jmp
pop
mov
xchg
pop
lahf
aam
loop
div
lea
std
push
sahf
xchg
fucomip
pop
cmp
xchg
push
or
and
lcall
mov
lock
xor
in
dec
xchg
cmpsb
es
out
rolb
mov
push
lods
mov
fidivrs
ja
test
and
arpl
mov
test
adc
and
ficoml
push
cmp
jmp
rcrb
jno
sti
fwait
inc
inc
mov
pushl
pop
lds
xchg
fs
inc
aaa
mov
fldt
lods
inc
pop
jbe
pop
stos
inc
shll
rcl
test
out
xchg
mov
faddl
rcrl
cmp
or
orl
std
xor
fistps
dec
mov
jmp
mov
dec
inc
pcmpgtw
lret
mov
sbb
das
out
mov
mov
add
mov
cli
cmp
and
call
xchg
jno
mov
les
fwait
and
adc
mov
jnp
cwtl
fwait
cmp
aad
xchg
rcrl
popa
pop
fiadds
or
add
add
mov
add
cwtl
or
push
or
sar
push
dec
inc
cltd
dec
lahf
push
lods
aam
aam
sub
add
out
or
cmpsb
sub
scas
call
or
test
mov
xchg
mov
nop
jae
roll
int3
cmc
and
cwtl
xor
nop
scas
or
sub
mov
and
dec
mov
mov
call
neg
dec
in
push
mov
inc
push
insl
adc
sbb
push
loop
lret
sub
inc
repz
ror
or
fmull
xchg
sbb
add
lods
push
jecxz
iret
std
mov
into
jp
pop
es
mov
jns
loop
xchg
dec
add
js
out
inc
ret
push
push
and
dec
xchg
aaa
imul
xor
mov
icebp
mov
lret
xchg
xor
mov
mov
xchg
jle
mov
inc
lahf
push
aaa
mov
inc
mov
fcmovbe
mov
sub
stos
and
loope,pn
dec
xchg
xchg
xor
insl
ficomps
dec
or
xlat
adc
insb
pop
pop
adc
scas
out
xchg
cmp
cmp
xor
mov
sub
xor
xchg
sti
xchg
cmp
add
ss
cmp
cmp
cmp
fwait
dec
rclb
dec
jl
xor
adc
pop
inc
cli
sbb
xor
ret
loopne
out
mov
addb
fistps
nop
adc
inc
adc
loop
xchg
and
aaa
outsl
or
je
pop
cs
cmpsb
rcl
test
fcompl
out
sub
je
lds
fistpl
jo
fcomi
pop
jmp
dec
aas
mov
dec
rcll
xor
xchg
popa
call
or
pop
dec
push
inc
jle
nop
repnz
sub
dec
adc
fs
arpl
test
ret
jmp
inc
xor
dec
or
mov
inc
loopne
push
je
ljmp
or
mov
inc
xchg
push
mov
xlat
mov
mov
in
jle
mov
sahf
lahf
repz
mov
xchg
es
dec
cmc
popf
test
ja
add
pusha
fs
cmp
adcl
and
loope
dec
rcrl
mov
mov
inc
xor
push
push
iret
adc
hlt
xor
dec
ljmp
stos
scas
arpl
xchg
paddusb
dec
xchg
jbe
inc
push
pop
cld
scas
mov
lcall
cltd
test
adc
jl
aam
jno
outsl
sub
mov
scas
stos
leave
jo
xchg
and
fstpl
cld
pop
cli
data16
scas
or
and
in
enter
and
jp
jbe
jp
cmp
fldcw
xor
inc
cmp
lock
push
xchg
ja
push
scas
or
add
addb
sub
mov
jp
cmp
adc
adc
out
stos
jns
push
sbb
jp
ljmp
lock
stos
out
imul
xchg
imul
stc
cmp
hlt
xchg
ljmp
insl
sub
jmp
jne
mov
lods
pop
pop
ss
in
cmp
xchg
mov
inc
mulb
fidivrs
xor
mov
xor
adc
mov
push
sub
data16
ds
insb
dec
test
roll
sbb
xor
inc
mov
cmp
push
mov
inc
pop
or
fcoms
stos
pop
or
mov
dec
js
inc
inc
ja
jp
mov
or
mov
popa
cs
dec
ds
faddl
or
das
add
jnp
push
je
xchg
sbb
in
mov
add
adc
cli
and
popl
mov
jg
hlt
ljmp
pop
andl
jge
stos
lret
movsb
adc
pop
pop
mul
inc
cmp
arpl
enter
sbb
pop
inc
add
lods
shr
mov
jecxz
fimull
fstl
stos
inc
inc
and
dec
push
add
sbb
inc
pushf
add
xchg
push
sbb
jmp
sub
push
add
loope
push
pop
mov
push
dec
mov
bound
pop
pop
sbb
es
add
jmp
call
test
sysret
add
xchg
test
das
loope
cmp
repz
push
pushf
test
and
stos
lsl
lods
call
int
jmp
jge
inc
stos
shll
insb
xchg
aas
loop
addr16
sub
lods
ja
popa
test
ljmp
inc
rorb
rcr
and
mov
pop
popf
cltd
fs
cmp
movsb
cmc
fwait
push
out
and
xchg
mov
pop
outsl
pop
xor
pop
scas
sub
inc
mov
test
test
pop
push
pop
sub
mov
ljmp
jecxz
lock
mov
clc
lea
sbb
cmp
in
mov
mov
jns
or
xchg
dec
mov
cmp
xor
in
hlt
jg
je
or
add
mov
mov
pushf
aad
xor
aam
leave
movsl
insb
clc
mov
ficoms
popa
fdivs
xor
test
cmpsb
imull
andl
popa
inc
cmp
test
mov
sub
scas
xchg
stc
inc
imul
and
mov
xor
push
jle
sub
daa
xchg
popf
cld
test
sbb
fsubr
mov
das
adc
jae
out
sti
mov
pop
stc
cmp
push
push
stc
inc
adc
mov
adc
sub
nop
mov
pop
pop
aam
sbb
push
cmp
xchg
lods
cmpsl
fs
mov
mov
mov
lock
outsb
arpl
movsl
mov
rcl
mov
inc
outsl
movsb
leave
xorb
cli
movsl
lods
mov
mov
dec
xchg
outsb
dec
jno
dec
pushf
movsb
pop
and
xchg
test
orb
cvtdq2ps
in
test
adc
lahf
aas
fisttpl
aas
cs
jne
inc
lds
fcoml
mov
test
fsts
insl
enter
ss
leave
addr16
push
mov
fs
dec
into
test
inc
add
cld
push
pop
hlt
je
out
mov
movsl
ljmp
lea
mov
mov
pop
inc
lods
fnstcw
cli
push
add
xchg
call
dec
jo
movsb
dec
movsl
push
pop
rclb
adc
xchg
sub
mov
cli
sbb
xchg
jmp
out
mov
popf
jmp
pop
lcall
pop
push
pop
pop
push
cwtl
adc
mov
cmp
jns
push
jmp
rclb
jecxz
into
sub
aaa
add
bound
cmp
call
sub
mov
in
dec
add
call
cld
test
scas
punpcklbw
in
bound
xchg
ljmp
in
and
lods
cmp
stos
pop
ja
xchg
pop
pop
lds
mov
jp
push
dec
jle
xor
lcall
mov
mov
sbb
dec
mov
gs
push
and
pop
icebp
dec
inc
or
jl
shrb
inc
fidivl
fbstp
out
cmpsl
les
cmp
repnz
outsl
jecxz
fisubrs
popa
stos
out
inc
movl
mov
bound
icebp
xchg
lock
jne
adc
in
idivb
mov
inc
inc
popa
mov
xchg
mov
jmp
push
test
inc
lock
shl
xchg
mov
push
mov
and
mov
call
jp
loop
pop
sub
outsl
dec
mov
rcll
cwtl
push
xor
aam
jnp
cwtl
dec
xor
mov
mov
adc
divl
outsl
xlat
ljmp
sti
mov
cmp
insb
mov
in
add
dec
int
lock
xchg
jp
xor
das
aam
cmp
dec
jo
loopne
pop
cltd
mov
test
mov
mov
mov
xchg
insb
ds
adc
repnz
inc
into
fmull
insl
mov
sbbb
in
stos
jg
js
mov
test
adcl
pop
fucomi
push
cmpsb
sbb
scas
adc
adc
sub
push
insl
inc
fdivp
stc
nop
into
rcrb
push
scas
jbe
insl
sbb
mov
sbb
dec
sbb
sbb
je
cmp
adc
icebp
push
sub
add
setg
dec
mov
jle
dec
cwtl
bound
sub
xor
sbb
sub
sub
in
clc
in
mov
cmp
lock
in
scas
notl
pop
test
ret
adc
xchg
push
pop
test
in
test
arpl
mov
dec
mov
push
jae
lods
mov
nop
cli
outsl
test
pushf
push
push
lret
mov
lds
mov
mov
pop
mov
fs
sbb
lahf
adc
and
into
sub
dec
adc
in
jmp
or
dec
mov
movsl
in
mov
add
cld
ljmp
shr
add
aas
mov
pop
pop
cmp
sbb
sub
and
add
sub
iret
movsl
mov
mov
mov
pop
jmp
sbb
mov
cmp
push
inc
inc
mov
ja
xchg
out
pop
jbe
sarl
jp
sbb
dec
or
or
popf
mov
dec
mov
into
lods
inc
sub
jle
ficoms
fidivl
mov
mov
cltd
lcall
das
or
cwtl
sub
in
lods
loopne
sti
call
xlat
jae
aaa
dec
jmp
into
arpl
repnz
jbe
cmp
in
loop
test
pop
sti
sbb
add
ljmp
adcl
push
jae
je
push
add
mov
mov
insl
movsb
xor
jecxz
test
push
or
leave
popf
insl
mov
adc
orl
and
mov
mov
test
or
int
sbb
mov
push
push
sbb
orl
les
int3
sub
ret
xorb
mov
jne
out
ljmp
enter
adc
lret
ljmp
dec
icebp
xchg
pop
or
mov
and
outsl
sarb
std
xchg
or
xor
xchg
fldenv
mov
xlat
clc
push
or
imul
xor
iret
and
pop
push
push
pop
xlat
add
rcr
lds
add
xor
sbb
fldl
mov
xor
mov
outsl
pop
pop
sub
in
xchg
sub
and
dec
pushf
std
push
jne
in
mov
jb
ror
push
cmp
rorl
xor
ret
sarb
xchg
aad
sbb
mov
inc
sti
adc
mov
movsb
andl
in
in
test
mov
test
sub
lcall
pop
mov
roll
mov
nop
int3
fstpl
out
ret
imul
jg
addr16
adc
jbe
xchg
jne
push
pop
outsl
jge
dec
adc
sbb
xchg
pop
jmp
xchg
or
mov
jmp
mov
jge
pop
mov
jge
xchg
fdivrl
lea
add
loopne
popf
int
and
mov
add
sbb
rcr
mov
jno
jne
rorl
push
jns
xchg
or
jge
xor
jno
push
mov
mov
jp
insb
cmpsb
lea
lret
or
sub
imul
mov
and
shr
es
insl
ss
pop
inc
clc
push
mov
fwait
mov
iret
or
push
lods
dec
mov
sbb
and
sbb
xchg
adc
jp
sbb
jecxz
dec
push
pop
std
test
jne
mov
js
add
lret
shlb
or
inc
les
add
sbb
pop
push
lods
ljmp
out
lahf
lcall
pop
push
push
mov
xchg
js
xchg
mov
ja
cmpsl
ret
cwtl
lret
push
insl
dec
arpl
sub
jp
sti
sahf
shl
adcb
imull
gs
hlt
popf
push
idiv
dec
and
mov
jnp
cmp
lods
mov
xor
mov
loop
adc
inc
loope
and
in
iret
pop
add
pop
jnp
mov
inc
push
xor
pushl
mov
add
or
sbb
jnp
aad
add
loope
subb
sub
jecxz
xor
jecxz
lret
push
lret
fs
in
dec
popl
jnp
push
shll
out
push
jno
ds
negb
mov
sbb
sbb
cmp
aaa
adcl
jl
pop
mov
arpl
dec
shl
xor
loopne
sub
fisttps
cmp
add
jne
sub
mov
outsl
push
in
scas
int
insl
pop
int
jae
outsl
mov
ss
and
in
sub
jb
inc
loop
jnp
and
mov
movsl
fdiv
movsl
or
lret
xchg
lahf
push
and
push
jae
push
xchg
cmp
mov
lcall
stos
pop
cmp
in
adcb
xchg
div
out
adc
movsl
mov
subb
sub
dec
out
out
pop
sbbb
sbb
push
mov
jl
adc
arpl
inc
clc
leave
test
sub
jmp
loope
int3
dec
mov
push
int
loope
and
inc
mov
mov
push
xchg
fwait
iret
push
jg
add
aam
and
dec
into
mov
pop
test
cmp
sub
jp
mov
xchg
add
push
push
aas
out
ffreep
shr
cmpb
sub
xor
inc
loope
lsl
sahf
dec
mov
test
push
push
stc
js
sbb
enter
test
cwtl
idiv
dec
xchg
orl
mov
adc
xor
cmp
andb
or
dec
rorb
add
leave
push
jl
mov
stos
fcom
cmp
cmp
jno
ljmp
fldcw
mov
mov
in
std
cmp
mov
cltd
out
outsb
call
fwait
inc
fbstp
mov
outsl
mov
push
js
sub
cmp
orl
test
das
cmp
or
aaa
jecxz
push
fisttpll
mov
jno
add
mov
push
jbe
and
sub
jmp
mov
dec
jge
mov
adcb
jge
in
divl
mov
call
jns
and
mov
dec
lret
xchg
add
mov
psllw
mov
out
sbbl
mov
outsl
sbb
xchg
pushf
lea
mov
call
mov
mov
out
fstpl
add
mov
rcl
inc
aaa
sub
imul
mov
mov
imul
dec
cmp
mov
imul
or
sbb
inc
add
std
dec
jle
or
dec
in
cmp
outsl
inc
jno
inc
movsl
or
rcl
loop
mov
dec
dec
cli
shll
int3
je
sbb
ja
lea
mov
xchg
addr16
sbb
xor
fdivs
jg
out
xor
and
mov
xor
push
xchg
adc
cmc
push
xchg
cmp
push
xor
and
xor
xchg
loop
roll
das
or
mulb
or
scas
sub
and
mov
xlat
imulb
add
cmovg
sbbl
popa
sub
jne
xor
mov
pop
inc
or
addb
out
lods
out
stc
and
inc
sub
lret
pop
aad
sub
mov
outsl
hlt
popf
pop
push
jl
rorl
andl
pop
push
xchg
sub
lret
sbb
je
mov
test
mov
sub
mov
push
xor
inc
jno
ret
mov
insl
jl
bound
mov
sbb
jo
mull
or
fcompl
jae
push
lahf
pop
xlat
xchg
mov
cs
adc
rorb
das
add
in
or
xchg
in
mov
push
push
mov
push
aaa
stos
jl
lret
fiaddl
stc
cmpsb
push
sub
inc
push
test
shlb
test
mov
and
cwtl
and
mov
shll
shrl
inc
push
dec
or
clc
rclb
sub
xchg
pop
insl
jo
xor
gs
sub
aad
fcoml
jbe
xor
xchg
cltd
xchg
scas
xchg
inc
hlt
in
ret
pop
into
lds
out
fdivs
mov
loope
lcall
out
mov
mov
mov
std
test
or
gs
in
and
push
lods
jecxz
nop
shll
inc
mov
mov
fdivs
ss
jb
sub
sbb
pop
mov
mov
xorw
jnp
mov
mov
test
fmul
xor
cmp
push
xlat
rorb
and
xor
sub
pop
int
rclb
mov
cltd
inc
sbb
xchg
sub
pop
jp
les
xchg
out
fsts
add
popf
jmp
cmp
lret
inc
mov
add
cmp
cmp
arpl
add
push
push
push
or
das
mov
cmp
sahf
int
les
fistpl
mov
cld
pop
stos
and
js
xor
clc
pop
and
rcrl
sahf
lock
sub
ret
push
aas
cli
rcrl
dec
popf
call
das
jne
je
add
push
outsl
dec
outsl
xorl
lods
jae
dec
push
mov
dec
aad
adc
xlat
ret
mov
jns
xor
xchg
xlat
pop
cmp
cmp
push
jae
mov
cltd
mov
in
loopne
pop
jecxz
jbe
add
pop
mov
fisubs
fldenv
andb
fwait
push
addl
iret
mov
test
data16
dec
repz
cmc
adc
bound
sbbb
adc
xchg
pushf
bound
push
fs
push
mov
adc
fcomi
in
test
js
xor
test
cmpsl
push
jmp
add
sbb
sti
pop
jge
ljmp
xchg
bound
cmp
pop
xor
lea
adc
aaa
fprem1
imul
sub
dec
mov
dec
mov
enter
sub
rcll
aaa
and
xor
inc
fisubl
xchg
sub
inc
pop
das
mov
cmp
mov
mov
je
loop
xchg
cmp
push
fnstenv
inc
cmpsl
mov
lock
in
cmp
pop
inc
sahf
subb
mov
jp
cmp
enter
mov
pop
dec
mov
push
inc
roll
int
pop
mov
test
dec
shl
std
mov
jne
aas
das
dec
ss
sub
insl
xchg
sbb
bound
stos
sbb
inc
mov
adc
clc
xor
jae
xor
fadds
pushf
popf
push
ret
pop
dec
cmp
negb
pop
sbb
push
mov
xchg
out
cwtl
mov
hlt
xor
inc
icebp
push
out
cmpb
aas
push
test
xchg
sub
ja
jmp
aad
out
mov
push
cltd
xchg
rol
inc
daa
mov
ljmp
scas
cmpb
call
mov
jg
mov
add
ss
int
add
jp
mov
test
or
stc
cmp
pushf
inc
popl
repnz
pushl
inc
jo
mov
push
test
dec
syscall
enter
lret
pop
in
arpl
mov
repnz
push
sub
test
add
ret
inc
decl
ss
mov
add
cld
int
int3
leave
jmp
inc
daa
daa
xor
dec
xlat
cs
or
add
mov
cmp
js
and
pop
mov
mov
mov
jmp
xchg
mov
mov
sub
bound
rorb
loopne
cmp
sbb
inc
jl
fidivrl
popa
push
int
jno
or
xchg
lret
sahf
inc
in
mov
sbb
dec
sub
xchg
mov
pop
mov
scas
das
jp
adc
negl
push
cmp
jp
xchg
divb
pop
sub
sti
mov
xchg
addr16
pop
cmp
lods
iret
jmp
fnstenv
jns
out
iret
pop
out
push
scas
push
cmpsl
rclb
addr16
das
or
popa
testl
mov
es
jl
lock
mov
push
mov
icebp
or
js
mov
test
nop
stc
scas
adc
mov
jge
push
dec
faddl
add
add
jnp
sbb
jge
rcrl
ja
mov
popl
sahf
dec
jns
xor
and
decl
rcrb
push
push
aaa
cmp
xor
sbb
mov
stc
pop
mov
cmp
xor
scas
push
mov
xchg
leave
xor
enter
pusha
add
rcrb
sahf
das
cmp
dec
es
repz
lahf
push
daa
mov
popf
imul
mov
sub
call
aas
out
pushf
aas
jae
cs
pop
pop
out
loop
push
lods
sbb
jge
inc
push
and
cmp
mov
jl
outsl
mov
mov
xchg
jecxz
sbb
shll
loop
fiadds
mov
jle
popa
in
gs
sub
push
mov
jg
jge
pop
adc
sub
sub
rcr
inc
stos
xchg
ljmp
stc
ds
repnz
out
and
int
data16
movsb
fcmovnbe
jg
fidivrl
and
scas
or
xor
pop
clc
or
mov
scas
cs
nop
outsl
mov
add
test
cwtl
fbstp
pop
or
imul
mov
ret
push
inc
or
out
out
enter
xchg
pop
nop
out
inc
jle
xor
lcall
jbe
pusha
pop
push
loopne
push
test
xchg
ss
imul
dec
xchg
jp
lods
testb
add
add
jbe
and
idivl
pop
out
fisttpll
push
dec
sarl
lret
mov
add
mov
imul
fdivrs
mov
aad
add
fisttpl
lret
movb
mov
cwtl
add
mov
ss
inc
sbbb
es
xchg
sub
rclb
jno
out
daa
lret
mov
sub
jo
push
loope
enter
cmp
inc
push
pushf
add
cmp
sub
scas
addr16
int
pop
jo
pop
popf
shlb
es
add
sbb
cmp
imul
in
sbb
loop
cmpsb
inc
dec
xor
imul
inc
rorb
inc
repnz
jae
mov
adc
shrl
jbe
scas
mov
sub
int3
sbb
inc
pop
iret
add
mov
pop
sbb
dec
out
and
out
fs
dec
dec
outsl
enter
iret
mov
and
mov
mov
mov
mov
or
js
mov
dec
cmp
roll
imul
jmp
jl
mov
cld
addl
jg
cmpsb
in
mov
sub
mov
mov
dec
push
popf
adc
mov
cltd
roll
xor
jnp
mov
dec
mov
js
adc
pop
imul
stos
push
insb
pop
scas
dec
sbb
lea
sub
stos
int3
xor
xor
xchg
lods
cmpsl
sub
xchg
push
push
jne
test
dec
jmp
icebp
rcl
pusha
or
mov
cs
cmp
int3
ret
idivb
pop
jp
sub
ror
push
adc
into
fcmovne
rcrb
shll
mov
js
dec
cmp
inc
cmp
rcrl
adc
hlt
repz
dec
shl
imul
push
dec
mov
mov
loope
push
rclb
add
or
or
xchg
mov
mov
cli
adc
mov
insb
push
push
xchg
adcb
in
adc
lods
hlt
mov
lods
and
xor
xchg
jecxz
out
cmpsb
mov
and
jo
inc
mov
movsl
mov
addr16
sub
outsb
lods
inc
dec
cmp
adc
ljmp
and
pop
jg
mov
sbb
test
cmpb
mov
movsb
scas
mov
outsb
mov
xchg
mov
xchg
ret
jmp
nop
cmp
inc
pop
sub
cmp
inc
dec
or
or
add
sbb
iret
pop
adc
cmpsb
dec
cmpsl
das
jle
repnz
cmp
jno
and
mov
insb
sbb
out
mov
fmull
mov
pop
xor
mov
fidivs
jbe,pn
sbb
fwait
push
insl
mov
jo
movsb
loope
roll
inc
cmpsl
fdivrs
mov
and
inc
mov
je
lea
xchg
add
cld
sbb
xchg
fisttpl
jecxz
and
clc
add
mov
push
cli
jle
out
sbb
pop
xchg
test
inc
icebp
mov
stos
push
inc
shll
jno
test
stos
push
and
sbb
jp
cwtl
cmp
aad
mov
loopne
cmp
ret
in
push
out
das
push
xchg
push
or
insl
pop
test
pop
jp
pop
lret
ret
movsb
sub
jns
insb
sub
hlt
pop
sbb
ja
daa
lret
dec
roll
je
outsl
call
sarl
jle
or
es
test
dec
add
mov
fs
inc
pop
push
xchg
pop
bound
sbb
lock
out
jb
jg
rorb
or
push
sbb
xchg
and
mov
push
fcmovb
pop
adc
loop
mov
sbb
mov
inc
cmpb
cmp
push
inc
sbb
addb
cmp
and
push
popf
mov
imul
push
pop
lds
aas
mov
dec
push
stos
insl
push
aaa
pop
adc
fldl2e
es
es
lods
test
jl
shlb
mov
icebp
iret
pop
fwait
test
dec
jmp
xchg
push
aam
call
pop
adcb
adc
loop
sub
xor
xchg
insb
scas
xor
lahf
xor
loop
enter
mulb
insb
cmc
or
mov
pop
xchg
mov
shl
mov
jmp
sbb
jge
lcall
das
lds
sbb
pop
xor
push
push
dec
sub
jno
pop
in
leave
jno
jo
or
bound
or
sub
cwtl
mov
shrb
xor
add
pop
jo
jmp
push
cmpsb
in
inc
in
jl
xorl
or
cmp
jmp
push
das
in
in
cmpsb
jb
cmp
lods
push
cmpsl
into
icebp
jae
adc
loop
idivb
in
js
outsb
mov
add
and
das
pop
lret
mov
add
cld
scas
push
adc
xor
mov
xchg
cmpsb
cmpsb
in
fs
add
in
or
and
push
in
mov
xchg
xor
mov
xchg
ficoml
mov
mov
sub
cltd
cmp
fcoms
popf
push
sub
mov
jmp
andb
mov
loope
sbb
insl
jg
pop
pop
dec
jb
xchg
addr16
xor
cmp
call
adc
shll
add
mov
pop
xor
or
pop
and
mov
mov
sti
divl
in
mov
scas
jge
outsl
xor
testl
xor
rcl
aam
dec
lock
pop
cwtl
stos
dec
or
add
xchg
and
mov
imulb
in
imul
push
mov
push
mov
divb
push
sbb
aas
pop
in
stc
add
rclb
test
insb
mov
adc
adc
dec
cmp
outsb
loopne
xlat
inc
sbb
cmp
repnz
adc
add
test
and
xchg
dec
dec
cmp
xchg
add
movhps
cwtl
cmp
push
pop
pop
aaa
pop
pop
loop
jmp
add
cmpsb
cmc
testb
jb
inc
sub
and
pop
cmp
dec
ljmp
out
sub
mov
cmp
sbb
lock
pop
xor
andl
and
into
cmc
jmp
or
inc
adc
jns
pop
jo
test
inc
xor
iret
mov
sub
ljmp
unpcklps
jmp
push
push
mov
adc
repz
cs
push
filds
incb
scas
mov
mov
cmp
inc
js
push
clc
movsb
fbld
pop
jle
mov
jb
das
jp
push
jo
sub
mov
mov
ret
sbb
push
mov
xor
or
push
mov
dec
add
mov
loop
mov
movsl
cmp
sahf
rorl
mov
pop
mov
test
and
adc
mov
or
inc
aad
ret
sbb
mov
lcall
and
xchg
dec
hlt
dec
push
rcll
lret
xor
rclb
push
mov
sbb
add
js
aam
imul
test
ss
cmc
aas
sub
dec
cld
call
mov
or
jge
push
nop
push
shll
movsb
push
lods
and
sub
push
jnp
push
cmp
mov
mov
inc
mov
shlb
addr16
cli
pop
xchg
push
pop
gs
rorl
hlt
mov
cmc
and
out
lods
add
cmp
int
add
or
cmp
push
js
int
push
pop
test
mov
stc
aad
or
inc
std
in
add
push
enter
stos
in
andb
inc
lods
mov
dec
adc
sub
dec
dec
inc
cmp
xlat
xor
cmc
idivl
push
adc
test
cmp
cmp
inc
repnz
lahf
mov
xchg
cld
cld
mov
int3
dec
and
xchg
cltd
mov
sti
ja
fwait
es
fistpl
test
shll
jge
in
mov
pop
mov
jne
test
mov
das
jo
add
cmp
xor
mov
out
push
fidivrs
inc
cwtl
jecxz
xchg
and
ficompl
sar
data16
cmp
jno
int3
xchg
jbe
enter
daa
test
xchg
lock
jne
jp
cmp
ljmp
adc
mov
adc
ss
add
dec
mov
xor
xchg
sahf
test
dec
inc
popf
xor
les
adc
sub
mov
inc
int3
andl
add
jns
push
cs
jl
xchg
xor
je
aad
add
fdivrl
or
jbe
mov
push
or
icebp
es
lds
jno
inc
mov
mov
inc
xor
push
movsl
aaa
rcl
mov
add
addl
das
push
ret
mov
sbb
bound
mov
push
aam
lock
pop
or
aad
push
imul
test
cld
pop
aam
jmp
je
arpl
pop
roll
push
iret
jp
in
imul
in
lods
add
cmp
pop
pusha
sbbb
xor
stos
ret
lea
jl
push
test
sarb
inc
xchg
stos
sub
jbe
shlb
inc
sarb
jo,pt
jae
test
ljmp
pop
lcall
out
outsb
pushf
insb
call
popa
add
aaa
ficoml
pushf
aad
mov
ja
outsl
lods
pop
inc
les
mov
lahf
js
leave
jecxz
mov
stc
push
adc
or
mov
push
bound
rolb
rcl
sarl
jno
loopne
or
in
dec
addr16
mov
push
and
sbb
fisttpll
dec
adc
ja
dec
mov
push
cmp
ljmp
icebp
ds
fsubr
inc
push
dec
xchg
icebp
or
divb
ss
pop
jle
mov
mov
xor
xor
dec
push
sar
xchg
lods
inc
dec
mov
pusha
js
or
inc
les
jle
pop
or
movsl
lret
push
add
cmp
sbb
adc
cmc
hlt
sub
jg
mov
fs
xor
jb
test
push
jbe
pop
daa
pop
xor
rcll
lahf
into
scas
pusha
sti
stos
push
cmp
stc
and
repnz
ds
cmpsb
rcrl
cmpsl
out
cmp
fldl
cmp
out
pop
xchg
pop
pop
stos
lcall
jmp
jecxz
xchg
pop
into
cmp
jg
add
stos
rorb
push
jne
mov
imul
loopne
enter
dec
retw
daa
sarb
adc
inc
inc
adc
ds
and
xor
mov
sti
jge
dec
fwait
fs
push
and
jecxz
dec
or
push
imul
dec
test
int
clc
sub
les
jmp
call
adc
sbb
pop
popa
jmp
fisubrl
loopne
into
lcall
jge
cmpl
repz
test
movsb
cmp
push
fiadds
xor
adc
mov
pop
jne
sbb
xlat
adc
cmp
xchg
xchg
adc
sub
xchg
xchg
call
mov
orl
movsb
jl
mov
rorl
andb
mov
adc
and
icebp
test
fsubs
sub
push
push
pop
mov
add
xor
lcall
sar
inc
dec
xor
mov
sub
je
mov
sub
lods
shlb
adc
mov
add
xlat
mov
sub
into
arpl
repnz
mov
mov
add
outsl
ret
outsl
or
sub
or
fldt
je
mov
adc
pop
sub
or
es
sbb
jle
fsubs
adc
push
lods
xlat
inc
sbbl
in
sub
ss
hlt
jge
mov
push
mov
sbb
fiadds
pop
test
mov
dec
ss
jmp
mov
adc
lret
xchg
add
testb
sarl
jmp
add
dec
int3
aaa
mov
and
jp
lock
sbb
dec
mov
jno
mov
jecxz
mov
sub
dec
addr16
push
mov
mov
scas
ret
xchg
adc
rsm
mov
add
in
test
in
mov
jecxz
cmpsl
xor
xor
movsb
sub
loopne
pop
popf
aaa
adc
inc
jnp
cmp
popa
fstps
pop
mov
mov
sarb
add
shlb
push
mov
or
jbe
mov
nop
enter
popa
lods
stos
xchg
jg
lock
aaa
push
ret
xchg
dec
inc
add
jmp
leave
fistl
lret
cmpsb
pushf
sbbl
test
bound
sub
push
fistl
xchg
ss
icebp
sbb
push
test
movsl
fs
scas
cltd
movsb
cmpsb
and
and
es
inc
roll
out
fsubp
add
jnp
sarl
mov
add
sbb
filds
imul
mov
in
aaa
or
in
push
imul
fs
inc
jge
dec
enter
xchg
int
and
dec
sub
test
outsb
dec
lret
xor
cmovb
aad
stc
fmull
std
gs
xor
or
or
sub
sbb
push
ret
cmp
lds
lahf
jb,pt
mov
lods
sub
pop
sub
xchg
cmp
aam
rcrl
xor
gs
push
xor
fs
inc
cltd
xor
rcll
mov
dec
mov
adc
xchg
rclb
pop
cmc
lods
shll
mov
in
pop
push
subb
scas
das
lret
xor
int3
clc
rcll
fs
add
scas
jle
push
or
scas
daa
mov
insl
mov
clc
gs
and
dec
xorb
dec
gs
jne
orb
movsb
and
jne
fldt
mov
pop
or
mov
sub
cmpb
adc
inc
cmp
mov
xchg
dec
dec
mov
subb
jmp
push
inc
sti
push
leave
ret
and
cli
dec
movsl
mov
dec
dec
insl
adc
and
mul
inc
pop
lcall
xor
push
ret
pop
out
punpcklbw
pop
ja
push
mov
mov
xchg
pop
mov
inc
add
jg
xchg
sub
inc
mov
sub
cltd
lock
xchg
mov
pushf
cmpsb
fildll
push
sub
xchg
mov
popa
aam
fnstenv
mov
or
mov
lcall
hlt
jl
jmp
jnp
jmp
jge
mov
fildl
cmpsb
inc
pop
xorb
cmp
outsb
xchg
movsb
iret
inc
jae
movl
jl
add
gs
and
fistpl
add
mov
xor
lea
repnz
lods
mov
into
xor
xchg
inc
mov
clc
xor
and
lret
push
cld
xor
test
aam
in
xchg
mov
fdiv
orl
mov
add
je
sbb
and
sub
mov
xor
and
pop
dec
xchg
or
dec
stc
adc
mov
sub
aam
fistl
dec
jb
sbb
sbb
add
cld
lds
pop
mov
add
mov
out
leave
add
or
jae
inc
insl
cmp
mov
je
inc
stos
std
pop
nop
xor
xchg
aas
aam
pushf
stos
imul
sub
cmp
jo
mov
inc
xchg
mov
jp
mov
repnz
lods
out
aaa
add
daa
cs
shl
lods
loope
sbb
fdivrs
je
in
fnstenv
jbe
fnstenv
repnz
nop
leave
cli
ljmp
jmp
clc
cmp
jnp
mov
or
inc
cmp
sahf
adc
mov
stc
in
sbb
sub
sbb
rcll
ret
jp
addr16
pop
subl
js
xchg
sbb
fwait
lahf
fwait
inc
in
fildll
and
xchg
aas
push
fisttpll
jb
les
fimull
ret
fwait
mov
rcrb
and
jmp
sbb
xor
and
cli
bound
fwait
xor
jno
push
imul
push
dec
fbld
add
out
test
call
cld
outsl
mov
jp
xlat
xor
inc
xor
sbb
sbb
dec
aam
adc
or
cmp
dec
pop
mov
lock
pop
insl
enter
rcr
pop
lock
mov
pop
inc
pop
aam
mov
es
fwait
cld
pop
sub
mov
cs
lods
xchg
push
fs
sub
dec
iret
push
sbb
imul
cmp
ds
inc
in
stos
fisubs
pop
inc
push
adc
adc
andl
sub
push
mov
fcmovne
cmp
inc
mov
sahf
popf
les
push
pop
dec
out
repz
call
or
dec
repz
jecxz
sub
xlat
sub
adc
ret
mov
clc
jno
add
jae
outsb
push
sub
dec
lahf
repnz
jecxz
and
inc
sbb
sbb
fisttpll
enter
adc
out
mov
xchg
jae
cwtl
xchg
orl
outsb
pop
dec
ret
push
mov
or
ss
or
push
jns
icebp
lock
in
out
mov
in
add
outsb
jecxz
out
mov
insb
pop
das
test
bound
scas
ds
testb
test
push
loope
ss
adc
cmp
mov
ljmp
iret
mov
sar
inc
mov
dec
inc
aad
xchg
add
sbb
inc
pop
fistpl
or
xchg
lahf
lods
gs
and
popa
inc
jno
add
add
pop
mov
pop
call
es
dec
or
or
repnz
fimuls
ljmp
sub
pop
aaa
fdivp
test
sahf
mov
cld
jne
cmpsb
pop
andl
lret
add
mov
xor
call
test
sub
sbb
popa
mov
cli
sub
dec
aam
xchg
out
fldenv
in
idivl
lret
and
out
out
bound
or
call
out
xchg
aas
cmp
push
pop
mov
outsb
jae
insl
sbb
cmpsl
adcl
and
sbb
dec
jbe
mov
cmp
insb
ljmp
test
inc
xor
pop
imul
sbb
mov
lahf
dec
add
fwait
adc
or
push
mov
jae
mov
xlat
fs
pop
xchg
dec
into
dec
inc
pop
push
movsl
pop
movsl
mov
test
fidivl
andb
bound
cmp
in
in
xor
std
jo
fists
test
add
and
das
in
out
add
sub
push
aas
sbb
xor
and
push
xchg
jno
out
mov
sub
sub
jl
iret
stos
sub
lret
dec
dec
shll
pop
or
and
adcl
movsl
mov
fbld
in
dec
and
jno
mov
xor
je
cmp
pop
push
cmp
and
insl
add
mov
sbb
pop
faddl
sbb
ljmp
mov
sarb
sbb
add
and
dec
pop
mov
pop
inc
dec
cmp
pop
mov
add
mov
mov
inc
cmp
xchg
mov
sti
cmovno
push
mov
out
test
pop
push
add
xchg
insb
sub
stc
jmp
push
add
popf
into
cltd
clc
jae
push
int3
sub
mov
imulb
mov
push
cs
fistps
xchg
pop
xchg
push
imul
sub
lret
push
rcll
jo
jae
xlat
inc
neg
das
into
pop
xor
jmp
pop
shll
jle
mov
cmp
mov
test
xchg
rcll
dec
stos
notb
dec
pop
jne
jg
add
imull
push
sti
scas
sub
jnp
sbb
mov
add
in
push
and
stc
cmp
aad
push
xor
jb
push
addl
dec
pop
bound
pop
or
test
push
in
pop
inc
in
or
pop
mov
pop
inc
ret
shlb
and
cld
pop
push
xchg
stc
in
sub
lret
push
push
outsb
pop
push
pop
jle
xor
je
add
cli
ljmp
clc
adc
or
pop
aad
and
push
call
lods
mov
je
jge
xor
pusha
das
or
mov
sbb
xchg
mov
int3
cli
xchg
mov
dec
loope
mov
iret
push
add
and
mov
pop
ljmp
std
mov
mov
out
test
inc
psubusw
jge
jp
sub
out
scas
cmp
inc
mov
and
mov
repnz
xchg
pop
add
xchg
mov
xchg
andb
test
mov
pushf
lret
inc
adc
or
aas
aaa
and
sbb
cltd
lahf
add
lcall
push
test
mov
sub
mov
push
mov
sbb
mov
dec
pop
call
xchg
mov
jle
dec
adc
fisubrs
add
sbb
lds
fstpt
in
dec
stos
inc
add
dec
xor
test
cmpsb
sub
outsb
cmp
sbb
jb
das
and
cmp
dec
aad
lea
inc
push
push
xchg
pop
aaa
pop
cmpsb
sbb
int3
inc
jbe
call
xchg
mov
insl
addl
fcoml
cmp
xchg
rorl
shlb
pmuludq
gs
adc
mov
cmp
pop
repz
add
addb
xchg
jg
add
pushf
pop
icebp
fcmovbe
adc
push
js
out
popa
lret
lods
inc
cwtl
add
pop
mov
push
loope
mov
sub
sbb
sbb
aam
jp
movsb
xchg
xor
mov
push
lods
imul
push
push
adc
nop
insl
aaa
mov
cmpsb
mov
push
ret
inc
stos
jo
push
sub
jbe
sub
loope
ret
fsubrl
xchg
inc
add
test
ret
and
shlb
push
lods
push
push
jbe
mov
cmpsl
sub
fldt
xchg
popa
pop
sub
adc
pop
sub
xchg
int
outsb
mov
xor
test
push
jge
sahf
in
nop
lret
ds
mov
sbb
inc
jmp
mov
pop
dec
cmpsl
push
xlat
inc
jnp
arpl
lahf
popf
cmp
cmp
pop
sbb
movsl
aam
mov
pop
not
cmp
fcompl
imul
imul
ljmp
jl
xchg
cltd
loope
jb
addr16
sbb
jns
inc
add
xchg
insb
xchg
gs
jge
nop
push
mov
outsb
outsl
and
push
lcall
in
sub
sbb
jl
stos
dec
sub
scas
jl
loop
push
add
pop
cwtl
dec
in
stos
or
mov
inc
add
jns
and
aas
jo
in
sbbb
xchg
mov
add
jmp
out
sbb
dec
test
sub
sbb
cwtl
or
sbb
mov
mov
xor
fidivrs
xor
push
xor
adc
or
xor
lret
mov
mov
and
mov
movsl
cmp
jl
mov
inc
sbb
xchg
shrb
imul
adc
repz
xchg
inc
arpl
cmp
ja
movl
pushf
js
andb
lods
pop
lock
jne
mov
enter
push
sbb
test
ret
push
jge
xchg
xchg
add
sub
mov
test
and
mov
fwait
add
jo
fcompl
int3
mov
xchg
mov
adc
fistl
sbb
call
sbb
and
push
test
test
jns
sbb
mov
cltd
out
ja
adc
cltd
test
icebp
jo
lahf
stos
nop
gs
push
popw
cmp
push
jnp
in
pop
gs
sub
shlb
nop
pop
adc
sub
cmp
ficoml
sbb
mov
mov
cmp
aas
filds
fbstp
and
cmp
inc
aaa
or
and
pop
sti
fldcw
stc
shl
loop
movsb
hlt
mov
shll
fsubs
push
scas
inc
cld
sbbl
jo
push
mov
loopne
inc
bound
xor
jg
clc
pushf
lods
lcall
and
cmp
lea
xor
stos
sub
add
mov
cmp
xor
dec
lods
addr16
cmp
dec
outsb
mov
addr16
sti
nop
leave
scas
xchg
push
inc
loop
or
jnp
inc
stos
push
cmp
lock
cli
inc
push
js
xchg
shr
jmp
xchg
mov
inc
push
jb
and
cwtl
mov
mov
and
imul
add
pop
in
cli
inc
xor
test
iret
out
fadd
cbtw
or
fdivl
dec
xchg
mov
ret
jmp
and
push
cs
pop
or
arpl
fidivrs
jbe
jmp
in
add
mov
int3
fistps
scas
inc
out
adcb
test
jnp
and
adc
lcall
jge
dec
pop
xlat
sbb
adcb
cmp
cmp
mov
ret
mov
mov
stos
incb
pop
xlat
shll
mov
out
fldcw
ficompl
jb
shlb
jge
clc
sbb
push
mov
mov
mov
push
roll
scas
enter
cmc
sub
in
loope
mov
out
lock
in
sub
popf
enter
pop
fwait
push
or
popl
fcom
mov
sbb
daa
cmp
sbbl
insb
daa
and
in
sti
push
pop
in
ds
or
mov
into
in
test
imul
or
mov
nop
movsb
push
fdiv
inc
sub
pop
sub
mov
adc
push
loope
and
mov
cmc
div
adc
and
fdivr
fidivs
out
xor
sbbb
loopne
add
sub
test
fiadds
xchg
fwait
xlat
mov
stos
pop
mov
inc
ret
mov
imull
jp
mov
jmp
ja
sub
jmp
mov
sub
scas
mov
div
xor
jle
jl
das
or
push
adc
das
mov
xor
cli
cmpsb
and
enter
int
mov
add
scas
lds
movsl
aas
mov
xchg
mov
sub
testl
xchg
shll
cmp
lret
loop
sbb
push
gs
lock
pop
xchg
sahf
loop
jle
jg
xor
fs
adc
fnstsw
mov
push
xor
push
jl
dec
jecxz
mov
repnz
out
test
xchg
aas
push
mov
mov
or
out
orb
jbe
fs
jle
ja
xchg
or
sbb
fisttpl
xchg
fwait
jb
sbb
sti
arpl
cmp
or
arpl
pop
cmp
outsl
cmp
mov
fnsave
jp
fstl
push
sarb
mov
pop
cwtl
cmovae
sar
xor
data16
dec
xor
outsl
xchg
sub
int
or
les
mov
mov
sub
jae
xchg
icebp
push
inc
daa
pminsw
ss
out
int
and
fcompl
stos
arpl
push
ds
inc
incb
jg
fwait
push
jns
push
mov
nop
and
adc
mov
mov
inc
add
ret
jmp
test
enter
jne
in
fnstcw
xchg
pop
leave
mov
and
adc
arpl
add
mov
cmc
in
movsl
sti
mov
xor
dec
rep
add
ja
lods
lret
cwtl
jnp
stc
mov
mov
push
fldenv
fcmovnbe
out
sarb
lea
jae
insl
push
dec
call
jmp
decl
orb
or
mov
mov
in
xchg
jp
popa
xchg
fdiv
xchg
lret
cmp
mov
aam
sbb
push
movsl
cli
or
addb
daa
test
in
sub
or
add
pop
int3
xchg
adc
notb
jae,pt
add
nop
into
mov
xchg
int
pop
in
out
or
push
pop
add
enter
sbb
mov
sub
mov
cmpsl
ret
aas
repnz
jae
sub
pop
sub
loopne
repz
in
mov
mov
shld
pop
inc
dec
cmc
xlat
jge
sbb
cmp
cmp
xchg
aas
xchg
test
mov
and
bound
das
jp
test
dec
lds
xchg
inc
fs
jae
xor
fnstsw
shll
mov
push
andb
dec
sbb
mov
adc
mov
lret
test
pushf
push
iret
push
and
mov
mov
ljmp
mov
xchg
adcl
and
or
iret
loope
pushf
inc
pop
or
roll
and
mov
lds
jmp
cltd
ret
shlb
out
jle
xchg
xchg
test
adc
or
test
sahf
or
pop
push
push
insb
test
pop
inc
xor
loopne
mov
cmp
outsl
sub
jmp
jp
xchg
pop
mov
cmpsb
jg,pn
idivb
push
test
stc
pushf
cli
stos
dec
mov
push
adc
rcrl
sub
adc
pop
test
inc
xor
das
mov
inc
cli
pop
and
call
mov
pusha
dec
hlt
mov
imul
cmp
add
add
pushf
rcl
jmp
xchg
push
jbe
cmp
push
stos
dec
push
ret
and
sub
pop
push
jle
shrb
cmp
sbb
popf
std
mov
lret
loopne
fcompl
inc
inc
jle
aam
lds
adc
loop
adc
mov
clc
cmp
xor
iret
add
xchg
jp
inc
out
arpl
push
add
pop
mov
out
adc
fdivrs
into
pop
cltd
xchg
adc
pop
dec
popa
sbb
dec
xchg
inc
dec
cmp
lods
test
mov
cmpsb
loop
fwait
adc
iret
sahf
repz
add
rcrb
lea
add
call
push
sub
out
adc
push
jmp
aas
enter
insl
or
in
cmp
mov
dec
mov
dec
adc
push
les
dec
mov
pop
ret
fwait
lcall
jmp
cli
hlt
mov
cld
fsts
lock
adc
mov
lods
out
dec
hlt
sub
ja
shll
mov
lret
fsubr
cmc
mov
push
pop
addr16
jnp
adc
shll
push
or
add
adc
in
xor
fisttpll
lds
pop
jbe
sbb
sbb
fdivs
stc
fstps
pop
inc
mov
xor
jb
mov
jle
clc
pop
or
cmpsl
dec
jbe
sub
cmp
or
sub
clc
lahf
xlat
movsb
jg
lret
js
fildl
in
mov
push
aaa
leave
lret
lock
adc
jo
and
in
or
inc
inc
in
shll
sbb
add
and
out
bound
inc
cmp
cmp
mov
ret
stos
cmp
in
add
push
mulb
jge
mov
push
loope
or
push
leave
xor
je
sub
lea
mov
push
pop
or
in
and
mov
movsb
and
mov
sbb
std
push
add
je
je
pop
sbb
mov
jmp
push
ret
cmp
pop
cmpsb
out
mov
xchg
mov
add
inc
jmp
xchg
loopne
cld
shll
out
mov
add
das
inc
xor
sub
test
dec
cmp
mov
mov
xor
adc
lock
adc
pushf
cmp
scas
inc
int
lods
movsl
inc
dec
gs
or
xchg
and
notl
popa
cmp
mov
int3
sarl
les
inc
push
sbb
fmull
pop
rolb
pop
and
or
sbb
mov
and
sub
lods
jg
ds
arpl
inc
arpl
jp
pop
jo
out
leave
adc
pop
fsubrp
lahf
ret
add
push
das
cmp
or
std
ds
movsl
pop
rclb
pop
add
mov
mov
dec
inc
sbb
mov
push
mov
mov
loope
scas
push
push
pop
mov
aam
shll
lahf
ret
iret
movsb
sbb
dec
sub
cli
cmpb
fidivrl
scas
fimull
adc
icebp
mov
in
cmc
fs
cmpsb
fisubrs
repz
lahf
sbb
mov
mov
jno
std
jg
leave
xchg
insb
mov
out
push
push
shll
popf
inc
mov
mov
stos
xor
xor
fs
outsl
aam
js
mov
jp
inc
daa
incb
inc
daa
xchg
add
pop
dec
ficoms
in
cli
fwait
mov
add
ljmp
xorl
roll
in
or
push
push
scas
call
adc
sahf
cmp
ljmp
movsl
adc
push
test
xchg
adc
ljmp
pop
insb
lock
mov
mov
cmp
dec
aam
push
ljmp
xor
inc
fsubl
int
arpl
mov
or
sahf
ret
loop
mov
stc
repz
lock
iret
ja
add
popa
xor
test
cltd
dec
pop
mov
or
push
or
mov
movsl
out
je
push
insl
mov
push
sbb
jp
shrb
imul
jmp
mov
aas
xor
mov
aad
stos
mov
icebp
lods
daa
and
cmp
cmpsb
xor
xor
dec
sahf
fucomp
push
sub
rcll
loop
cs
mov
mov
lret
popa
mov
jge
loopne
pushf
test
icebp
int3
pop
popf
cmpb
adc
dec
test
inc
fs
pop
lahf
xor
jg
or
sbb
rolb
xlat
shll
insb
xchg
add
dec
add
dec
lods
push
mov
push
push
mov
call
int3
inc
call
aam
sbb
inc
xor
das
pop
xchg
xor
cli
popfw
jp
xor
aas
orb
xchg
or
scas
or
decl
pushf
push
mov
jbe
cmp
scas
cld
js
lods
call
push
mov
mov
mov
xchg
adc
or
out
push
loop
dec
and
adc
lock
fs
jecxz
jmp
sahf
cli
loopne
lea
in
mov
push
push
sub
movsb
test
rcrb
call
mov
xchg
cmp
and
lahf
xor
cmp
ret
sbb
xchg
mov
test
xorb
push
mov
lret
das
stc
cmpsb
outsb
jnp
mov
pushf
mov
pop
aaa
mov
mov
cmc
jo
outsl
sbb
notb
into
notb
lret
and
clc
push
xchg
and
cmp
mov
daa
push
jbe
out
pop
xor
adc
fs
add
dec
sbb
jns
cltd
rcr
call
xchg
rorl
adc
ljmp
call
sbbl
xchg
mov
dec
iret
jno
jge
mov
mov
and
aam
outsb
push
jbe
pop
mov
out
mov
bound
popa
or
jnp
xchg
cmpsl
sub
ss
leave
sbb
mov
add
stos
lea
dec
mov
stos
and
xchg
and
xor
inc
aam
add
lock
rcrl
aam
mov
xchg
sub
out
out
lret
dec
xchg
xchg
loop
inc
adc
mov
sub
or
inc
mov
mov
cmp
sub
fucomp
xor
sti
in
js
mov
addr16
loopne
nop
xchg
mov
or
mov
or
mov
push
mov
adc
sbb
arpl
pop
repnz
icebp
xor
rorl
or
inc
scas
mov
mov
ret
scas
vaddsubps
popf
frstor
mov
loope
lcall
ss
int
in
jae
dec
pop
test
int3
shl
mov
mov
sbb
pop
popa
xor
xchg
lcall
mov
ret
cld
aaa
or
xor
dec
sbb
popf
push
push
xchg
mov
sub
icebp
scas
push
ds
cld
ja
jae
test
pop
xchg
push
mov
add
push
pop
aaa
jp
sbb
ret
xor
mov
sbb
lock
mov
mov
pop
adc
jge
cmc
mov
imul
inc
adc
insb
loop
mov
nop
popf
dec
ret
mov
in
xchg
mov
test
decb
pusha
xchg
cmc
dec
adc
lret
and
pop
aad
add
orb
jae
and
aaa
lods
adc
ja
sbb
mov
push
or
cld
fidivrs
sub
das
dec
mov
cmp
fidivrs
fdecstp
pop
dec
inc
mov
and
mov
push
push
popa
stos
mov
jb
sbb
imul
sub
inc
jb
mov
cmpsl
lods
jecxz
andl
daa
sub
cmc
lea
mov
cltd
iret
dec
cmp
subl
in
rolb
cmp
mov
loopne
adc
push
test
jle
push
xchg
test
je
mov
or
or
jo
hlt
test
ret
lods
cli
xchg
int3
bound
stc
push
xor
pop
je
mov
js
lcall
rorl
xchg
out
xlat
fs
test
push
adc
pop
mov
or
dec
js
sub
rorb
lret
pop
clc
leave
cs
and
inc
mov
cld
xchg
fisubs
xchg
and
pop
les
hlt
push
gs
in
xor
ljmp
insb
aas
xor
les
testb
adc
push
ror
shl
cmp
mov
sbb
neg
sub
mov
mov
test
sbb
adc
shrb
pusha
ss
add
jno
inc
mov
add
sub
roll
add
insb
jge
xchg
das
inc
shll
fldenv
int
cmp
or
test
dec
inc
push
aas
xchg
ja
inc
shl
push
lods
lods
mov
mov
test
dec
add
lea
fisubs
clc
xchg
dec
data16
cmp
imul
pop
xchg
push
add
lds
out
add
adc
das
jecxz
ret
outsl
lret
xchg
mov
jmp
jo
popa
pop
jns
das
add
adc
ss
je
jl
lret
xorl
loop
mov
pextrw
mov
scas
inc
test
lret
push
and
xchg
faddl
adcb
or
jae
mov
out
gs
and
out
leave
adc
in
lret
out
mov
xor
imul
cmpsl
push
cmp
es
pop
dec
fldcw
int3
loop
test
outsb
add
mov
mov
popl
arpl
jnp
sbb
xchg
lods
aaa
fcoml
sbb
or
bound
insl
cwtl
push
mov
pushf
stc
sbb
push
pop
cmp
in
jno
rcrb
pushf
fisubs
mull
shl
insb
dec
or
clc
sahf
and
sub
mov
out
sti
bound
movsb
mov
jle
inc
jmp
hlt
push
adc
ds
shr
fcoms
mov
insb
sbb
int
or
push
enter
xchg
adc
cmp
push
xor
fstps
mov
outsb
mov
lret
xchg
cmpsl
dec
movsl
inc
dec
pop
cmp
xor
push
xchg
fildl
and
ret
sti
mov
sbb
jl
mov
leave
sbb
pushf
jmp
cs
mov
shrl
mov
dec
adc
xor
add
xchg
out
out
in
mov
mov
cmpsb
sahf
jp
cmp
cmc
aas
xchg
jae
pop
mov
std
cmp
sbb
jl
and
je
add
jp
mov
or
sub
xor
xor
adc
add
cmc
incb
pop
xchg
iret
test
jae
leave
sub
and
or
dec
lret
lret
dec
rcrb
leave
jecxz
popa
jb
cmpsb
inc
xorb
add
mov
insb
shll
push
sbb
jne
push
sub
inc
inc
and
aaa
cmp
seta
inc
cltd
mov
gs
mov
sahf
mov
repz
movsb
aad
loop
stos
inc
in
call
repz
jecxz
stc
xchg
xchg
push
sbb
call
adc
lcall
js
mov
test
rcll
jg
inc
loop
movsb
sub
insl
dec
mov
pushf
hlt
cmp
mov
les
xor
inc
call
fwait
fwait
mov
mov
mov
xor
push
sahf
cmpsl
out
pop
and
xchg
add
xchg
adc
dec
insb
pop
xchg
xor
outsb
or
loopne
fwait
out
imul
sbb
mov
out
roll
and
ret
mov
xchg
mov
adc
and
xchg
dec
mov
ss
fcomps
nop
mov
cld
test
ret
pop
sbb
testl
dec
divb
push
or
out
xor
bound
mov
mov
daa
rolb
fwait
hlt
jmp
stos
mov
dec
inc
sub
xor
mov
call
ret
std
inc
inc
gs
mov
adc
fnsave
mov
ficomps
or
push
mov
push
xchg
in
or
enter
shlb
sbb
testb
sbb
aad
bound
lds
hlt
xor
mov
or
int3
pusha
cmovno
lcall
in
loope
and
or
adc
dec
xchg
jno
iretw
loopne
add
stc
push
jnp
enter
adc
mov
push
insl
scas
sub
xor
jge
add
add
out
ret
mov
js
pop
dec
dec
jo
sub
mov
push
and
test
jg
push
leave
adc
mov
mov
pop
in
xor
lods
insl
out
add
ret
cwtl
sarl
mov
movntps
out
and
cltd
sahf
out
pop
pop
sub
sbb
je
or
fsubs
and
dec
mov
lcall
js
push
daa
push
mov
xor
repz
lods
in
cmpl
xor
xchg
and
push
sar
pop
jns
retw
and
aaa
add
imul
fnstsw
mov
inc
mov
rol
bound
jl
jbe
inc
push
mov
insl
pop
test
inc
movsl
jbe
pop
pop
pop
jno
cltd
sub
pop
cs
js
push
in
mov
out
and
int
dec
add
or
jmp
shll
push
xor
aas
xor
pop
inc
cmp
and
pop
out
insl
loop
fcomps
sbbl
rolb
cmpsb
sbb
inc
jnp
in
mov
test
lahf
and
push
adc
push
mov
imul
fcmovne
pop
scas
adcl
movsb
out
or
lea
xchg
imul
push
popf
js
sub
cmp
sub
cmp
lret
cs
pop
aaa
mov
jno
sbb
in
push
dec
bound
mov
in
jae
push
push
lds
ret
xchg
gs
and
push
mov
shlb
inc
pop
ret
adc
call
or
test
rcrb
push
pop
push
ds
andl
enter
add
pusha
mov
or
jecxz
imulb
jecxz
enter
std
dec
inc
rolb
clc
loop
pop
cltd
lods
outsl
mov
out
or
sub
jnp
pusha
or
pushf
adc
jnp
pop
mov
xchg
mov
aad
call
insl
cmp
imul
fs
int3
sub
or
mov
add
lock
fwait
in
je
and
test
dec
push
xchg
ret
mov
mov
inc
add
mov
cld
xlat
leave
shlb
push
lcallw
outsl
pop
pop
popf
mov
jg
cmp
int
push
and
lea
loopne
jecxz
dec
sub
push
test
aam
mov
xorb
mov
imul
pop
mov
es
jg
jns
das
xchg
dec
push
and
movsl
xchg
movsb
mov
test
jge
data16
sti
in
inc
inc
lock
xchg
mov
fidivl
push
repnz
dec
rcll
lcall
out
and
push
inc
roll
and
in
mov
les
mov
and
fbstp
and
sub
or
push
sub
xchg
jl
enter
fidivl
jg
cmpsl
sbb
mov
sub
mov
add
dec
sub
rorl
faddl
ja
pop
cmpsl
pop
or
mov
adc
mov
enter
ljmp
sbb
rcl
add
add
in
or
scas
jno,pn
push
loope
subl
mov
test
nop
or
jae
mov
push
vpminub
iret
cmp
shll
mul
jae
mov
leave
mov
mov
inc
push
pop
push
or
loope
orb
hlt
xchg
arpl
mov
lods
jmp
xchg
pop
push
nop
dec
mov
lea
sub
cmp
inc
movsl
test
aam
adc
sub
clc
sub
loope
aaa
pushf
xchg
lds
out
jo
std
fisttpll
push
sahf
mov
mov
dec
push
lea
xor
imul
or
pop
xor
inc
cmp
out
fiadds
pop
adcl
imul
sbb
xchg
jg
mov
mov
ds
fisubrl
aam
sub
iret
xchg
das
xchg
lea
sub
mov
jae
je
ret
mov
hlt
ss
pop
lea
push
sbb
loop
push
mov
out
adc
stos
jmp
jg
fistpll
in
xorl
cmp
fists
enter
aas
cmp
push
or
pop
xchg
test
jns
mov
push
or
xchg
jmp
inc
call
clc
mov
mov
leave
int3
fdivl
sub
push
rcll
dec
and
jmp
pop
sub
dec
xor
fdivrs
mov
popa
inc
pmaddwd
sti
xlat
jge
loop
ja
andl
popa
fiadds
loopne
mov
stc
jle
jae
cmp
rcrb
sub
cli
push
mov
loopne
imul
sub
jno
jmp
xchg
sbb
add
rolb
inc
leave
cmp
outsb
inc
xchg
loop
pop
stos
push
sbb
jb
xchg
mov
bound
pop
jb
lret
in
movsb
pop
pop
add
add
les
jp
cmp
fisubs
sub
fldl
sub
fsts
sub
xlat
call
cli
cmp
push
lods
jmp
jl
js
daa
lret
mov
shrl
jmp
sub
inc
adc
pop
add
fnsave
pop
pushl
mov
mov
pop
inc
in
or
push
test
push
mov
insb
clc
int3
popf
js
add
mov
scas
dec
jae
sub
xchg
cmp
xchg
mov
in
jnp
in
cmp
dec
xchg
popf
out
arpl
mov
sbb
cmpsl
mov
stc
mov
stc
mov
jmp
mov
and
inc
dec
jae
mov
test
dec
xor
imul
mov
inc
call
xor
popf
dec
sbb
inc
mov
fsubp
or
jecxz
lret
pop
xchg
cwtl
or
mov
cmp
pop
or
fsub
rcrb
ds
mov
push
dec
pushf
insb
outsb
dec
insl
call
sbb
mov
xorl
ja
ret
mov
xchg
mov
mov
jnp
jb
push
fldl
dec
or
cwtl
xchg
cmp
jnp
mov
push
xor
ljmp
rcl
push
mov
pop
je
push
lahf
mov
cmc
add
mov
notl
shlb
daa
out
hlt
xchg
xor
arpl
in
and
pop
xor
ret
cmp
nop
jb
shlb
mov
cmp
loopne
push
adc
mov
fwait
js
jg
fists
pop
mov
in
aas
adc
pushf
data16
mov
xchg
jb
jae
in
lcall
inc
int
pop
lcall
lea
mov
scas
cmp
cs
mov
mov
sbb
mov
je
add
hlt
or
subl
jg
not
inc
mov
sub
out
scas
xchg
data16
int3
dec
mov
adc
repz
sar
adc
fldl
scas
lcall
mov
mov
mov
jns
jbe
shll
mov
sahf
notb
mov
xor
pop
xor
icebp
xchg
mov
and
inc
gs
outsl
inc
dec
and
fiaddl
pop
fisubrs
insl
ret
rclb
cmpsb
mov
dec
adcl
fistpll
lods
notl
mov
mov
das
or
pop
cmp
or
xchg
mov
lods
sub
into
out
xor
jge
movsb
sbb
sbb
addl
leave
aaa
jo
scas
jmp
cmc
out
ret
push
jne
sbb
fcoml
les
xchg
xchg
push
cmp
lahf
inc
ljmp
mov
test
movsb
cltd
xor
dec
in
imul
ret
data16
sbb
leave
mov
test
js
lahf
fwait
mov
and
push
mov
cmp
jae
sbb
in
scas
adc
mov
dec
mov
mov
and
jg
or
loopne
imul
icebp
inc
and
pusha
popf
lock
data16
xchg
push
sub
mov
ds
fnstenv
test
lods
in
stos
push
lods
mov
mov
sbb
in
pop
mov
mov
or
push
jg
inc
lret
pusha
rcrb
and
mov
dec
nop
xor
fmuls
xchg
cwtl
xchg
mov
mov
push
mov
ljmp
mov
mov
xchg
rorl
jmp
nop
xchg
lcall
or
shrl
lcall
mov
xchg
out
clc
das
scas
and
fidivrs
sub
inc
stc
incb
mov
lahf
jge
leave
jns
mov
hlt
mov
fiaddl
mov
sbb
mov
add
mov
addr16
inc
pop
pop
jp
jbe
push
and
aas
add
add
jns
js
pop
pushf
cwtl
sub
cmp
push
xchg
and
or
pop
add
add
push
dec
sti
sbb
in
hlt
pusha
je
in
jo
cltd
sbb
or
cmp
xor
mov
mov
fwait
rol
inc
and
xchg
xchg
popa
adc
movsl
cmp
cwtl
sub
rorb
stc
stos
movb
jl
and
fidivl
scas
les
dec
dec
and
cld
leave
jl
add
pop
imul
fs
insb
addr16
es
hlt
sbb
ljmp
ja
mov
aaa
cwtl
xor
fists
scas
mov
outsl
popf
push
pop
jmp
filds
dec
sbb
andb
or
adc
push
mov
jg
stos
add
push
inc
sbb
fwait
jo
or
sub
xchg
xor
inc
leave
andl
jnp
mov
pop
imul
xchg
leave
pop
or
out
and
mov
les
mov
add
daa
jmp
pop
rcl
gs
push
inc
pop
fisubrl
adc
sarl
mov
adc
jnp
cmp
ja
cmpsl
xorb
rcrb
inc
jbe
mov
xchg
lcall
es
push
jg
push
sti
repnz
push
repnz
cmp
clc
dec
dec
fwait
movsb
hlt
push
xchg
dec
mov
and
mov
push
inc
sahf
mov
jmp
xchg
mov
stos
int
jae
xchg
popf
xchg
sbb
or
loop
mov
pop
sub
xchg
popf
adc
jbe
aad
mov
mov
enter
inc
sbb
arpl
add
clc
sti
mov
xchg
fisttps
or
sbb
hlt
inc
and
aaa
and
adc
into
lods
inc
loop
xor
mov
aam
sahf
add
adc
dec
mov
mov
mov
cmp
dec
or
lcall
mov
push
test
hlt
jae
dec
dec
test
mov
arpl
xchg
hlt
dec
xchg
je
loope
mov
xchg
pop
aad
rclb
and
sub
or
and
dec
rolb
pop
xor
and
xchg
sahf
push
loope
pop
mov
inc
pusha
dec
add
pop
enter
insl
adc
inc
sahf
test
sbb
and
rcrb
pushf
jmp
nop
repz
int3
cmpsl
push
pop
movsb
inc
clc
push
mov
push
into
aad
mov
jnp
ret
pop
lret
dec
enter
repnz
test
adc
pop
cmp
pop
cmp
inc
or
decl
sub
into
jmp
push
clc
sahf
xor
pop
imul
push
jo
lods
into
out
fwait
cmc
incb
jge
xor
dec
sbbb
lret
imul
mov
mov
lcall
adc
push
sub
mov
xlat
jmp
sbb
xchg
pop
adc
jae
jbe
cmp
fsubrs
imul
jnp
cmp
mov
sbb
push
les
mov
arpl
rcrb
in
lods
adc
mov
xor
out
loop
mov
xor
gs
idiv
std
pop
pop
test
shll
sti
jno
sub
jbe
xlat
push
xor
sbb
cmpsb
sub
andl
mov
movsb
dec
inc
jmp
or
arpl
mov
xchg
cltd
dec
cwtl
push
mov
jb
cs
icebp
aad
jmp
leave
sbb
stos
xchg
mov
xchg
push
pushf
test
subl
fdivrs
mov
cld
out
hlt
inc
repz
movb
aas
lcall
incb
jbe
ds
push
test
fisttps
or
jp
xchg
cmp
insl
sub
pop
movl
cld
rorl
and
into
pop
sbb
and
ds
push
and
dec
fcmovb
xchg
dec
addr16
mov
movsl
in
inc
push
movsb
movsb
popf
ficompl
pushf
mov
pop
outsl
icebp
iret
xchg
gs
dec
jno
std
xor
mov
gs
jb
daa
adc
or
fbstp
hlt
out
les
inc
pop
or
mul
push
rorl
dec
add
les
ljmp
mov
js
xor
sarb
lds
jnp
out
jns
add
mov
xor
addr16
add
aad
stc
int
pop
sbb
mov
sbb
int
aaa
outsb
xchg
add
dec
xor
inc
fiadds
jbe
fisubrs
pop
inc
movsl
mov
sub
or
in
int
push
mov
add
lods
rcrl
dec
mov
mov
push
leave
sbb
xchg
test
push
bound
imul
jge
mulb
fmuls
call
lods
push
mov
xchg
xchg
frstor
sub
pop
daa
jge
push
or
pop
inc
pop
stos
lcall
or
jns
sbb
hlt
addb
mov
les
leave
inc
pop
jmp
mov
fnop
push
loop
mov
xchg
dec
mov
fiadds
or
scas
lret
mov
mov
mov
adc
data16
mov
pop
pop
mov
cmp
lods
ret
pop
mov
dec
sar
in
mov
repz
adc
mov
jnp
mov
dec
pushf
mov
push
js
lahf
lds
cmp
push
arpl
jb
shll
xchg
imulb
inc
cmpsl
sbb
xchg
fs
stc
xor
pop
jg
fistps
xor
or
sbb
xor
mov
add
lods
bound
cltd
xor
cmpsl
xchg
imul
xchg
jmp
loopne
adc
fwait
sahf
fs
mov
xchg
pop
cmpsl
add
daa
mov
clc
push
fiaddl
bound
jl
pop
repnz
xchg
jnp
adc
or
push
loopne
mov
xchg
je
jmp
int3
cmp
orl
lret
xor
jns
popf
xlat
push
push
fs
das
fsubrl
push
andb
push
scas
ds
ja
sbb
sbb
push
xor
mov
scas
or
frndint
mov
jle
jmp
lcall
lret
cmp
cmp
lds
lock
in
inc
lock
lahf
pop
jg
ds
sbb
jbe
ss
fisttpll
xor
cli
xor
cmc
mov
shlb
idivl
xchg
outsl
push
dec
jbe
mov
test
inc
test
jmp
stos
outsb
and
aaa
lods
push
aas
and
outsl
push
mov
les
sbb
jbe
add
jno
dec
daa
inc
cltd
test
jo
add
ud0
fadds
rorl
pop
xchg
andb
mov
sti
jg
fstpt
xlat
mov
xor
fldenv
xchg
loop
repz
icebp
jns
sahf
adc
ffree
sbb
inc
mov
inc
imul
outsb
test
lahf
ffree
outsl
scas
loop
or
fs
sarb
imul
daa
aaa
push
fwait
push
pop
mov
test
cwtl
jecxz
loop
negl
les
pop
jl
pop
add
rcrb
popa
xor
and
inc
pop
push
sbb
icebp
orb
mov
jmp
push
push
in
sbb
push
or
jp
jp
ret
xchg
es
push
movsb
sahf
adc
ds
fwait
stos
rol
es
daa
push
inc
or
test
aas
mov
push
mov
sbb
xchg
add
pop
mov
jno
mov
inc
mov
sbb
aad
iret
mov
in
loope
adc
jne
imul
inc
push
ficompl
xchg
mull
mov
test
lea
arpl
sub
sub
mull
repnz
jne
fcmovbe
mov
insb
vpaddusb
cmp
jb
xor
push
jne
loope
jle
iret
add
test
inc
insb
fisubs
add
pushf
xlat
jecxz
popa
inc
cltd
adc
xchg
into
lahf
inc
or
cmpl
jno
add
aas
cmpsb
push
lahf
mov
mov
outsb
je
xlat
jne
dec
pop
mov
push
out
int3
mov
push
cmp
lret
add
inc
leave
xchg
xor
ds
adc
movsl
inc
mov
pop
mov
dec
mov
ror
jl
cwtl
test
jg
mov
fimuls
es
inc
lock
leave
cmpsl
mov
gs
arpl
cmc
jno
sbb
add
movsb
push
inc
pop
mov
cwtl
andl
xor
test
lods
movb
fidivs
rcrl
cmp
add
or
mov
sub
insl
jp
pop
cmc
fisttpll
in
cwtl
xchg
out
sub
cmpsb
shrl
stos
jnp
lret
jbe
testl
mov
jnp
int
xchg
xor
mov
push
fwait
mov
sbb
imul
mov
mov
mov
out
sub
add
or
test
jbe
sti
xor
adc
cmp
in
add
test
movsb
loop
dec
addr16
jmp
add
imull
cmp
call
jle
lods
popf
out
stc
mov
xlat
jb
mov
push
mov
mov
lods
cmpsl
add
int
mov
cwtl
jnp
dec
std
or
inc
stos
jb
inc
scas
inc
inc
jle
jp
pop
out
aam
insb
imul
inc
or
pop
popa
inc
push
out
push
je
mov
jp
mov
leave
xchg
fidivl
jae
pop
icebp
or
sub
mov
sbb
ljmp
mov
fcmovnb
and
cmpsb
in
mov
sbbb
cmpsl
mov
cmp
stos
push
out
movsl
in
push
inc
add
pop
inc
xor
ficompl
xor
jno
fs
xor
mov
xchg
push
idiv
data16
mov
repz
xchg
or
mov
lds
aaa
out
aas
push
pop
xor
and
cmp
jmp
in
rolb
movsb
ret
sbb
cmp
shrb
cmp
or
pop
sti
mov
nop
dec
in
cs
scas
sbb
movsl
jo
mov
icebp
lock
ljmp
xchg
and
lcall
in
insl
sub
cmc
aad
clc
and
sbb
inc
fsubrs
adc
adc
and
sbb
iret
mov
shlb
sub
cmp
mov
or
and
mov
js
or
add
add
jge
cmp
push
stos
sub
pop
mov
imul
sub
out
sbb
xor
mov
out
jg
repnz
and
aas
mov
cmp
add
in
inc
std
arpl
sub
in
stc
aad
test
mov
ds
push
sub
in
and
adc
fldt
lods
dec
mov
add
add
sub
rorb
sbb
pop
pushf
je
popa
bound
jnp
test
aas
bound
lea
dec
sbbb
notl
push
rorb
jp
mov
roll
xchg
test
dec
jecxz
icebp
leave
fnstsw
and
mov
xchg
hlt
mov
and
or
sbbl
fists
ret
jp
or
enter
inc
add
xor
mov
inc
jbe
cmc
mov
or
ds
jnp
rcr
jl
cmp
push
out
rcrb
sub
xor
repnz
mov
ljmp
pop
mov
pop
push
mov
pushf
xor
std
inc
cmp
sub
mov
mov
push
add
roll
fistpl
pop
jae
mov
xchg
push
aaa
xor
lret
xchg
push
es
pop
mov
fs
js
or
movsl
mov
xor
pusha
testb
dec
int
hlt
mov
fwait
aas
iret
pop
scas
dec
and
dec
test
in
aas
in
ss
imul
into
xor
paddq
jb
mov
sahf
pop
pop
pop
jo
repz
add
push
adc
pop
jle
jne
adc
jo
jo
push
mov
or
les
jae
imul
sub
sub
cmp
into
clc
flds
push
push
xor
pop
and
je
and
mov
mov
std
adc
ret
fcomps
add
pop
icebp
cltd
dec
mov
push
cli
adc
adc
or
ret
int3
hlt
push
loopne
mov
push
out
test
xor
les
arpl
mov
scas
xchg
add
cli
adc
pop
sbb
daa
addr16
mov
adc
lds
loopne
enter
inc
cmpsl
ljmp
sbb
sbb
mov
and
inc
mov
orb
add
jmp
add
add
sub
adc
dec
sahf
pop
test
sbb
daa
movsb
test
pop
test
add
mov
pushf
push
out
mov
fsubrp
test
pop
nop
push
jg
adc
frstor
mov
mov
fs
push
rcrl
mov
dec
lds
maxps
pop
mov
or
sarb
nop
push
and
mov
and
dec
mov
loopne
sahf
iret
or
and
lea
jmp
dec
add
pop
pop
aaa
stc
xlat
cld
mov
imul
iret
push
mov
repz
sub
dec
adc
scas
jno
xchg
lret
mov
xchg
lret
mov
mov
das
mov
add
xchg
mov
adc
mov
das
mov
sbb
xchg
push
mov
xor
decl
lds
outsb
clc
add
test
out
addr16
out
or
out
mov
push
iret
inc
sub
mov
push
inc
cli
aad
dec
popf
les
js
or
scas
push
jno
jnp
ss
pop
out
inc
xchg
lahf
clc
int
xchg
ljmp
lea
fwait
push
repz
ret
sub
mov
dec
mov
int
dec
jo
mov
add
int3
xchg
rcrl
push
pop
mov
push
ffreep
jae
push
mov
xor
pop
hlt
xor
xchg
dec
nop
rcll
cmpsl
cld
jno
xchg
mov
int3
shl
lea
jae
imul
mov
xchg
pop
pusha
and
inc
sbb
mov
inc
movsl
decl
pop
mov
fs
popf
ret
push
clc
fstps
das
lods
add
ds
out
bound
cwtl
xor
and
stos
enter
rol
fs
rcl
xor
fisttpll
or
cmp
or
ret
push
fxch
mov
lods
decb
std
mov
dec
jp
or
pop
xorb
xchg
rcrl
or
jb
or
ds
dec
cmp
dec
nop
xor
sti
das
mov
adc
inc
dec
loopne
mov
push
movsb
lea
sub
daa
mov
and
lds
push
and
ljmp
in
xchg
mov
mov
cmp
sub
repnz
or
dec
ret
stos
jne
cmc
pop
pop
lahf
mov
cmpsb
mov
mov
mov
test
sbb
lds
sbb
jae
xor
ret
test
or
xchg
dec
xchg
leave
jl
std
lahf
fdivl
mov
sub
call
or
test
pop
jb
in
std
mov
dec
in
and
lods
push
xchg
xchg
test
xchg
out
add
aad
xlat
mov
sub
mov
mov
loopne
out
dec
push
xchg
daa
aad
pop
int
movsb
adc
out
sub
add
or
mov
aaa
mov
push
mov
psllw
shl
lahf
sub
sub
jo
repz
daa
jo
dec
sbb
pop
hlt
lods
cmp
xlat
or
rolb
pop
lea
data16
iret
push
lock
outsl
repnz
fiaddl
xchg
cs
jmp
dec
jae
and
sbb
add
fldcw
lret
pusha
and
mov
push
loope
mov
pop
push
lahf
xchg
pop
jb
cmp
jno
xor
and
xor
daa
subb
in
jmp
jmp
or
mov
cmp
dec
jns
mov
std
lods
aad
cmpsb
mov
mov
loop
in
mov
mov
cmpsl
pop
cltd
sub
lahf
inc
mov
and
fldl
ret
jmp
mov
nop
mov
and
movl
inc
outsl
mulb
mov
mov
in
mov
stc
pop
mov
mov
pop
cmpsb
jns
in
cltd
inc
xor
pop
iret
sub
shl
sub
cmpsl
int
xchg
sub
je
shl
test
xlat
sub
imul
jae
sub
ljmp
mov
sub
push
or
lods
mov
add
mov
dec
pop
sbbb
mov
gs
je
adcl
repnz
ret
push
outsb
test
cmp
incb
xor
mov
ret
inc
push
dec
fwait
sub
out
xlat
shll
add
push
jmp
insb
fwait
int3
dec
sub
sbb
xor
xor
ja
loope
call
addr16
lds
scas
in
jae
shrl
idivb
imul
xor
push
js
cwtl
sub
add
ja
pop
dec
mov
daa
ja
outsl
iret
mov
inc
or
add
imul
pop
imul
arpl
aas
dec
xor
loope
ss
imul
mov
and
dec
imulb
push
or
pushf
push
pop
aaa
mov
loop
sti
pop
nop
adc
pop
repnz
adc
fmul
mov
and
clc
notl
cmp
cltd
push
sbb
mov
push
xchg
xchg
add
sbb
movsb
pop
sbb
sub
in
sub
push
adc
mov
imul
jmp
xor
pushf
dec
imul
xchg
bound
movsl
data16
add
lock
movsb
mov
cmpb
in
push
mov
fildl
mov
sbb
in
push
fsubr
lock
out
dec
loopne
inc
or
inc
dec
scas
aaa
in
int3
xor
dec
pop
fcomip
xor
pop
lea
pop
repz
mov
js
mov
sbb
inc
std
hlt
inc
jb
sbb
and
rcll
xchg
ret
xchg
cmp
daa
fadd
imul
and
cmc
inc
out
outsl
sarb
adc
insb
test
aas
add
cmpsl
lods
test
rcrl
mov
mov
movsl
out
mov
lea
lahf
add
cmpsl
mov
aas
stos
adc
mov
test
lds
cmp
cmp
jnp
test
addr16
mov
push
add
ret
jle
cs
cs
jb
jnp
lds
sbb
out
mov
pop
xchg
std
pop
lcall
mov
jb
out
adc
mov
iret
dec
stc
jmp
repnz
push
iret
in
inc
fs
es
loop
int3
imul
loope
or
cmp
imul
shlb
push
pop
xchg
mov
mov
neg
xchg
add
orl
lea
out
add
sub
mov
dec
jge
dec
jae
mov
pop
xor
out
movsb
rol
or
sub
imul
loop
dec
push
test
ljmp
sub
xor
fwait
push
test
inc
sbb
xchg
pop
and
jne
lcall
inc
scas
scas
push
push
sub
dec
das
outsb
mov
sti
lret
test
imul
pushf
cwtl
or
mov
aad
pop
fstpl
sub
mov
xchg
push
into
push
jnp
outsb
out
test
dec
es
shl
cmp
mov
mov
incb
xchg
movsb
fs
fs
add
xor
repnz
mov
mov
ja
sbb
pop
das
call
cwtl
ja
in
push
pop
or
test
add
inc
and
cmp
add
lcall
inc
lcall
inc
cmp
repz
stos
test
lea
jmp
cmp
inc
ja
popf
inc
sbb
lcall
mov
dec
mov
cmp
loopne
jnp
xchg
sub
cmovb
push
loope
pop
cmp
fcomps
xchg
sar
fsubrs
mov
add
gs
and
rorb
add
jbe
inc
cltd
add
mov
lock
nop
jo
jmp
gs
xchg
push
lods
xchg
sub
pop
js
int
cmpsl
push
andl
arpl
imul
xor
adc
ljmp
outsb
testl
push
scas
fsubrs
movsb
fsubs
inc
adc
sub
jns
rcll
mov
jnp
push
inc
mov
sub
inc
jmp
pop
int3
mov
in
mov
stc
sbbb
and
aad
cmp
fldl
movsb
cmp
mov
icebp
enter
push
or
sub
add
sbb
xchg
mov
js
hlt
cli
mov
adc
les
negl
mov
cmp
fwait
insl
xchg
mov
and
pop
xchg
sbb
mov
fdivrl
inc
push
adc
add
in
stos
push
sbb
cmp
rclb
lahf
cmp
ss
jp
sbb
out
outsl
pop
dec
dec
int3
dec
mov
inc
data16
and
out
movsl
insb
dec
and
pop
jecxz
pop
fiaddl
dec
dec
add
add
fs
or
scas
stos
sub
xor
jecxz
xor
fcom
xchg
hlt
outsb
xor
ror
and
xchg
sbb
xor
xchg
lret
imul
and
cmp
jo
sbb
jo
pop
inc
adc
test
mov
push
sub
push
sbb
ss
fcomps
mov
lods
xor
call
cmp
ror
adc
xchg
ljmp
mov
in
rcll
stc
jg
test
sbb
sbb
or
cmp
mov
test
push
jo
out
ret
xchg
ds
xor
push
stc
jo
lret
movsb
dec
fsubrp
mov
inc
dec
dec
xchg
scas
divb
mov
mov
jnp
pop
inc
enter
jg
push
jmp
sbbb
cltd
jp
mov
adc
daa
imul
xor
jb
ret
mov
jns
jns
or
push
xchg
mov
add
inc
cmpsl
mov
inc
popf
xchg
aad
out
jle
xlat
pop
out
out
or
pop
sbb
dec
mull
sub
push
mov
pusha
sub
push
push
mov
jle
stos
rclb
jmp
jle
sub
jecxz
mov
cwtl
in
sbb
mov
pop
adc
in
jne
adc
sub
pusha
push
in
in
xor
and
xor
inc
push
and
add
jo
roll
sub
out
mov
enter
sbb
pop
ja
xchg
xchg
arpl
cmpl
leave
jns
cmpsl
jae
adc
xchg
add
ret
pop
imul
inc
mov
and
nop
mov
je
mov
pop
inc
js
mov
jno
push
pop
jecxz
add
in
inc
int3
sub
ret
mov
mov
and
lahf
repz
sbb
xchg
addr16
out
dec
fwait
addb
clc
lahf
gs
repz
aam
hlt
lods
mov
xor
push
arpl
imull
cli
mov
lea
scas
popf
add
mov
and
jmp
xor
out
inc
jl
outsl
icebp
pop
or
icebp
xor
jmp
test
dec
jle
cmp
ljmp
orb
xchg
add
sub
xchg
sub
shrb
mov
push
loope
push
insb
jl
xor
xor
xor
daa
push
mov
cmpb
fs
std
pop
in
lret
data16
cmp
jmp
das
bound
fidivs
adc
xchg
or
aad
dec
and
sub
rorb
jle
mov
mov
ret
fs
jae
push
mov
pop
and
test
mov
loope
pop
sbb
bound
clc
lret
dec
pop
cmp
or
inc
sub
xchg
pop
daa
xor
pop
cltd
mov
pop
jmp
xchg
stos
cmp
les
xor
mov
push
int
push
push
inc
jo
mov
sbb
mov
mov
jns
pop
fadds
or
mov
jge
inc
cmp
sub
and
pop
add
cli
les
repz
sub
loope
add
dec
push
movsb
dec
adc
add
sbb
lcall
loope
fwait
call
inc
mov
or
and
jno
rclb
dec
insl
dec
inc
add
xchg
bnd
dec
push
mov
sahf
sti
lret
cli
or
xchg
xor
add
mov
jle
in
fwait
pop
lahf
test
sub
pop
sbb
jg
dec
or
loopne
pop
fs
lret
xchg
add
pop
pop
xchg
mov
or
aas
das
lret
lods
insb
test
divb
std
jnp
imul
cli
jg
out
out
push
fwait
nop
fsubs
fs
cmc
jb
aas
xor
xchg
out
pop
jo
leave
or
mov
mov
jne
int
mov
push
int3
fidivl
xchg
add
movsb
dec
jge
pop
push
cmp
sbb
out
faddl
cmp
add
and
mov
pop
pushf
xor
add
or
cmp
add
pushf
mov
ds
dec
sub
lea
ret
je
pop
popf
dec
call
sahf
out
pusha
cmc
mov
pusha
scas
pop
fidivs
outsb
fsub
adc
inc
fs
jle
lock
cwtl
mull
jno
dec
frstor
adc
data16
testl
mov
adc
in
rclb
popf
mov
shrl
jmp
mov
std
push
dec
adc
jae
dec
dec
or
loopne
cld
aad
insl
jo
fstp
mov
cmp
sarb
xchg
push
sub
xchg
and
mov
arpl
in
jno
sbb
add
mov
rclb
sub
mov
iret
test
xchg
test
mov
enter
int
push
add
sbb
lret
shlb
push
in
test
push
fs
pop
mov
ffree
addr16
int
push
loop
and
or
cmc
add
mov
orb
push
fwait
sbb
and
jmp
addr16
jl
mov
and
mov
adc
inc
inc
inc
adcb
inc
enter
mov
sbb
xor
jnp
shr
pop
cmpsb
jle
sbb
movb
dec
mov
sub
jp
pop
push
mov
mov
loope
xchg
int
mov
fwait
std
es
sbb
pushf
cvttps2pi
lahf
sub
adc
fsub
add
repz
xchg
popf
lret
push
mov
in
jae
leave
lret
inc
dec
insl
out
jp
jns
push
fldl
shrb
stos
lock
fdivl
cmpsl
es
sarb
cmp
or
sarl
jno
hlt
insl
add
cwtl
scas
pusha
popf
mov
mov
and
and
mov
aad
cli
test
push
ffree
clc
mov
push
mov
repz
jne
push
jae
pop
adc
mov
outsl
cltd
insl
xchg
mov
cltd
push
cmc
shr
dec
sub
add
insl
mov
jne
cwtl
addr16
sbb
popf
aad
cwtl
js
mov
insb
mov
arpl
mov
or
xorb
add
xchg
mov
jnp
or
decb
loope
popa
rcll
sbb
clc
cld
sbb
in
dec
fidivrs
pop
sub
push
arpl
mov
nop
cmp
sbb
addb
aad
jbe
out
mov
mov
xchg
sbb
fdivl
mov
jp
push
pop
vsqrtpd
mov
pop
sbb
aam
shrw
jno
lea
shrl
mov
nop
jne
jmp
adc
pop
shrb
jle
and
mov
movsb
mov
int3
testb
sub
mov
jle
mov
mov
jle
adc
add
sbb
arpl
adc
ss
push
mov
cmp
cmc
fidivrl
push
adc
push
cmp
xchg
test
into
dec
les
lret
data16
mov
adc
add
mov
push
dec
xchg
test
ret
xchg
popa
test
jp
mov
fwait
and
ljmp
pop
xchg
divb
testl
push
std
dec
push
fwait
push
pushf
popa
pop
jg
sub
mov
movsl
xchg
adc
js
cs
fcoml
fwait
mov
fs
test
ja
jbe
popf
inc
icebp
ja
mov
popa
cmpsl
les
adc
jns
cmc
bound
mov
imul
mov
or
cmp
add
out
mov
mov
inc
movl
insl
mov
leave
sub
mov
pop
pop
cltd
divb
ss
clc
aam
out
loop
mov
into
lahf
lret
clc
lret
shll
fs
in
sub
pop
sub
fidivl
mov
pop
push
out
fldt
jmp
xchg
cld
stos
adc
jle
daa
mov
daa
jno
inc
sub
xor
scas
pop
pop
mov
jns
fcmovnb
push
push
sbb
or
es
clc
bound
js
xor
ret
push
pop
roll
adc
pmuludq
jno
push
rcrb
lcall
inc
mov
sbb
jmp
cmpb
mov
inc
testb
dec
rcrb
popa
push
sbb
sarl
sbb
mov
jmpw
and
test
pusha
cld
xor
pop
mov
pop
inc
movsb
pop
pushf
mov
jb
jbe
sub
xchg
in
scas
and
mov
icebp
addr16
dec
mov
out
ljmp
or
nop
sbb
dec
aam
or
jmp
mov
pop
rcrl
push
xor
xchg
cmp
pusha
insb
sub
inc
popl
outsl
pop
ljmp
xchg
jg
pushf
test
cmp
dec
ljmp
push
mov
fists
inc
dec
insl
test
adc
lcall
rcr
outsb
mov
lds
add
subb
or
lock
pop
test
imul
ficompl
cmpsl
push
sub
add
xlat
cmp
mov
bound
addb
in
jg
lcall
mov
data16
adc
lods
fimuls
sbb
test
mov
cmp
lods
daa
inc
outsb
aam
push
int3
decl
lods
cmp
mov
sub
out
test
pop
xor
mov
mov
shrb
adcl
cwtl
pop
in
cmp
dec
push
les
rolb
add
stos
int
dec
test
out
jge
xchg
xchg
addr16
sbb
ljmp
sub
push
es
cmp
jne
xor
es
adcl
xchg
push
mov
jecxz
aad
and
rcll
lcall
test
sbb
cmp
lret
xor
call
push
fcompl
cmp
jle
push
and
das
insb
sbb
xchg
test
xor
repnz
sub
xchg
or
ja
mov
roll
cmpsb
fiadds
jecxz
xchg
push
sub
mov
inc
mov
sub
push
adc
mov
rclb
or
pop
dec
xor
loop
ds
inc
repnz
dec
xor
mov
mov
sub
cmp
insb
stc
jg
mov
movl
neg
fcmovne
mov
aam
inc
icebp
scas
jg
iret
jae
xchg
add
mov
jns
sbb
mov
or
sub
fimull
out
xchg
into
push
cmp
or
insl
mov
fisubl
xchg
nop
inc
dec
xchg
shll
sub
lret
std
push
imul
mov
dec
imul
insb
mov
cmp
addr16
jb
adc
in
pop
push
stos
into
data16
lret
adc
add
cmpsl
or
mov
nop
mov
add
aad
outsl
movsb
out
in
call
imul
adc
paddd
aas
nop
dec
xor
dec
sbb
mov
bound
xor
inc
xchg
pop
jae
cmp
xchg
jmp
setns
add
cmp
inc
xchg
cmp
adc
sub
sbb
out
popa
adc
cmpsb
je
mov
dec
int
jns
pop
mov
sub
mov
popf
hlt
inc
jne
mov
stos
in
sub
jne
pop
fbld
cmpsb
inc
sbb
enter
nop
xor
or
adc
ds
jp
test
je
mov
mov
movsb
repz
je
sub
mov
clc
pop
cltd
xchg
in
mov
lea
xchg
xor
bound
xchg
xchg
jmp
sbb
cmp
lock
test
or
adc
cmp
and
add
push
lret
loop
mov
push
bound
mov
and
pop
dec
push
in
loop
jo
test
ret
jns
ss
sbb
dec
insb
mov
cmp
pop
sbb
mov
bound
nop
and
jge
ds
mov
nop
ss
lea
imulb
xor
or
and
jns
fs
rcrb
bound
iret
cmc
repnz
sub
cmpsb
lret
bnd
fbld
pop
sahf
inc
lahf
lahf
ret
jbe
inc
mov
in
fiadds
dec
dec
int3
addr16
js
inc
mov
not
push
pop
stos
notl
lock
iret
dec
ret
dec
sbb
pop
xchg
aaa
idivl
sbb
mov
stos
add
inc
inc
mov
pop
sub
dec
mov
ja
push
test
iret
push
imul
mov
loope
xchg
lods
aam
inc
xlat
fcomp
mov
out
fisttps
repnz
mov
sub
pushf
adc
adc
adc
xor
sbb
lret
into
lret
pop
xchg
xor
and
cmp
mov
sub
stos
mov
fwait
lret
rol
xor
jno
xchg
stc
scas
mov
fiaddl
mov
jbe
xchg
sub
repnz
push
gs
sbb
mov
sub
fwait
cmp
fwait
data16
insb
or
mov
xor
hlt
rorb
loopne
pushf
cwtl
sub
push
xchg
xlat
addl
lret
dec
cmp
jnp
stos
popl
popf
inc
jp
or
and
push
mov
push
push
and
out
xlat
imul
jbe
add
jo
pop
inc
mov
inc
fmul
inc
movb
nop
jns
std
pop
lea
fnstsw
jle
cwtl
mov
int
jns
lret
jl
addr16
stc
data16
call
cld
and
cld
and
push
push
mov
pushf
mov
push
xor
xchg
mov
add
andl
out
xor
fdivrs
push
inc
and
pop
jne
or
movsl
aad
sbb
inc
or
inc
jmp
or
repnz
outsb
fwait
xchg
add
dec
add
addr16
jnp
dec
rol
mov
and
dec
xlat
xchg
sar
lock
jg
xor
mov
lods
fldcw
lods
sar
mov
or
or
cmc
sub
lcall
mov
add
scas
lret
mov
jnp
jle
cltd
push
sbb
pushf
pop
negb
imul
push
jb
sarl
shlb
inc
pop
push
or
pushf
fistpll
mov
push
rcrb
push
mov
or
ficoms
jmp
mov
jmp
repnz
cmp
adc
shll
jl
test
jp
push
jnp
outsl
insb
out
int
scas
xor
pop
push
fidivs
aaa
out
rolb
sarl
and
xor
pushl
and
xorl
loop
dec
fucomp
cmp
and
mov
lcall
jne
jns
push
inc
lcall
mov
cld
ficoms
int
add
cld
add
ret
ret
and
clc
xchg
mov
out
push
lret
jecxz
cld
notb
lret
mov
or
jp
jp
jae
je
mov
nop
imulb
add
arpl
fs
jmp
jle
loop,pn
shrb
int3
mov
xchg
mov
sbb
stos
mov
imul
and
push
sub
popf
sub
divb
je
popa
cwtl
sahf
mov
scas
leave
negl
mov
lcall
xor
jmp
xchg
out
cmp
mov
jns
or
out
test
push
stos
add
jle
popa
rorb
out
add
push
push
adc
xchg
push
icebp
and
xlat
stos
mov
ja
fistl
add
aad
dec
xchg
mov
pop
repz
xor
fs
cli
mov
xchg
mov
in
mov
out
xor
cmp
andb
add
sub
das
sarb
cmp
cmpsl
hlt
arpl
outsl
dec
dec
xchg
decl
and
jnp
sarb
jae
xor
or
cmpsl
dec
mov
mov
and
insb
cmp
test
xchg
fwait
inc
sbb
imulb
decb
bound
insl
add
mov
adc
sub
ljmp
ja
mov
das
fisttps
xor
sbb
jno
out
push
add
in
movsb
pop
icebp
lcall
xchg
jno
adc
aad
scas
aad
sbb
je
xchg
pop
mov
fcmovne
pop
jg
pop
pushf
add
mov
adc
cmp
cmp
dec
int
sbb
fistpll
ja
ficomps
loopne
push
scas
or
ljmp
es
loopne
push
lock
int
jne
fsubrs
outsb
push
fnstsw
mov
mov
jl
sbb
pop
in
rorl
sbb
push
fstps
iret
shl
or
push
pop
or
loope
push
mov
sub
insb
sahf
jbe
sahf
and
and
mov
int
js
cld
adc
adc
idivl
mov
mov
popa
std
jg
push
pushf
mov
mov
arpl
mov
add
pop
ret
adc
jle
jae
addb
dec
fistpll
mov
and
test
jno
iret
jae
test
and
movsl
mov
into
mov
pop
shll
test
push
js
les
into
add
js
jg
mov
xchg
shrl
sbb
jno
faddl
sub
fcoml
imul
xor
in
and
rorb
cmp
in
orl
and
out
rcll
sub
xor
mov
jmp
lea
or
and
push
xor
xchg
pop
xchg
push
pop
lret
insl
mov
shll
xchg
popa
and
sbb
les
push
xchg
pop
subb
xchg
mov
imul
dec
mov
cltd
ja
push
clc
popa
jns
adc
push
cmpsl
jmp
stos
gs
fsubrp
arpl
and
sbb
mov
pop
adc
sub
jecxz
mov
dec
cmp
or
jle,pn
faddl
mov
sub
sarl
repz
loop
popf
fsubr
test
cmpsb
cli
cmp
pop
push
mov
das
into
loopne
gs
sbb
jns
dec
dec
sub
rol
int
pop
jae
lret
outsb
pop
out
test
dec
xchg
std
lods
ja
call
mov
and
pop
daa
cmp
mov
inc
ss
and
inc
mov
mov
addr16
outsl
dec
shrb
dec
aad
mov
sub
into
lahf
cmp
or
ret
jge
mov
insl
pop
fs
nop
add
dec
fs
ljmp
stos
pop
add
lods
mov
in
cwtl
and
xor
outsb
call
mull
push
shll
mov
mov
jg
xlat
adc
push
outsl
and
daa
jp
sbb
nop
jmp
mov
aaa
bound
xchg
mov
adc
and
jnp
scas
pop
pop
mov
ret
fwait
loopne
std
imul
fdivrs
mov
call
mov
es
and
iret
sbb
out
mov
fildll
xchg
fbld
out
inc
inc
fs
jl
or
lcall
insb
cwtl
cmpsl
push
pop
cmpsb
mov
lods
inc
lds
lock
xor
jp
jl
sbb
mov
ror
dec
je
subl
mov
xchg
and
dec
sbb
mov
mov
sbb
and
mov
inc
andb
mov
mov
pop
pop
and
fcmovnb
ret
mov
sbb
stos
test
xor
cmp
sub
jecxz
add
adc
mov
jg
clc
clc
xor
sbb
cmp
xchg
xlat
test
fcmovnb
add
push
lock
pusha
gs
push
subb
xchg
pop
adc
xchg
push
call
adc
sbb
cmpsb
sub
scas
mov
mov
add
mov
mov
sub
xlat
mov
jb
pop
je
cwtl
es
xchg
ja
rcrb
jne
ret
push
inc
mov
mov
add
pushf
xor
imul
rcrb
shl
ret
or
push
insb
xchg
fwait
lds
mov
xor
mov
pop
sub
or
push
fisttpll
test
xchg
rcrb
push
jbe
test
sbb
mov
jecxz
ja
aas
out
test
lret
mov
push
jbe
adc
xchg
das
pop
xchg
fdivr
or
out
sbbl
lds
inc
xchg
adc
mov
lea
repz
lcall
mov
jne
dec
mov
lock
add
xchg
fdivrl
push
shl
test
lea
mov
cmpl
outsb
cmp
inc
cmp
ror
mov
fists
inc
test
and
pop
xor
out
fiadds
fnstcw
into
frstor
lahf
mov
xchg
rcrb
mov
push
fs
mov
dec
inc
mov
push
adc
fistl
sbb
jmp
or
shl
out
dec
repnz
cmc
sbb
pusha
js
subl
popf
iret
pop
scas
sub
bound
sbb
lds
jp
xchg
out
cld
xor
es
rcrl
imul
pop
ret
cmovnp
movsl
cmp
jbe
or
pop
sub
mov
out
and
pop
addr16
frstor
xor
gs
and
mov
inc
cs
mov
test
mov
push
fsubr
push
mov
mov
shll
xor
stos
ja
cmp
mov
sub
sub
repz
adc
jbe
inc
stc
sbb
arpl
mov
das
add
mov
xchg
lea
add
mov
push
lret
out
mov
lds
mov
ds
movsl
cmp
dec
and
sbb
xchg
dec
dec
add
pop
adc
sahf
xor
pop
push
cltd
pusha
cwtl
in
pop
popa
aas
cmp
adc
dec
push
adc
jg
cmp
outsl
sahf
inc
jno
mov
pusha
rorl
cltd
xchg
cmc
inc
mov
mov
aad
sbb
arpl
icebp
push
int3
jae
rorl
mov
mov
add
popa
add
xchg
rcr
and
jns
push
mov
jno
and
decb
je
cmc
fwait
mov
push
loop
dec
jae
jne
xchg
push
sub
adc
pop
clc
lret
arpl
adc
mov
es
push
inc
push
insl
jae
jecxz
std
sbb
cmpsb
xchg
fcomi
popf
or
push
adc
mov
movsl
xchg
loopne
leave
mov
adc
or
jne
inc
dec
or
and
and
std
mov
lea
or
adc
adc
mov
mov
pop
xor
cmp
add
outsl
and
in
push
fbstp
jge
mov
out
inc
jg
mov
sub
push
mov
mov
test
das
jno
pop
insb
or
fcoml
push
repz
inc
xorl
in
fcoms
mov
cmp
push
imul
popf
pushaw
pop
neg
cwtl
cmp
test
in
sub
xor
inc
inc
push
stos
jb
push
ret
movsb
sub
in
and
push
mov
xchg
sbb
mov
les
mov
fmull
mov
sahf
pop
or
or
push
and
cmc
inc
push
dec
lods
jns
mov
xchg
in
cmp
shrb
dec
arpl
jbe
push
sub
mov
stos
sub
mov
xchg
outsl
shrl
shrl
and
xlat
push
push
mov
sub
iret
add
push
jae
mov
cltd
je
cmp
xchg
mov
cmp
popf
sub
call
sarl
lods
mov
sub
ljmp
or
repz
icebp
fadds
add
repnz
into
das
test
movsl
push
xchg
dec
mov
mov
sub
adcb
jmp
daa
inc
sbb
adc
int
adc
shll
inc
test
sub
and
jnp
adc
cmp
out
xchg
jno
adc
ja
inc
jb
and
movsl
into
mov
adc
cmp
clc
lods
pop
sbbb
or
sbb
dec
pop
jnp
cmp
adcb
ret
faddl
dec
jae
adc
jmp
lds
cmc
sbb
xor
std
xor
mov
push
add
outsl
sbb
jmp
into
pop
xchg
ret
movsl
or
in
pushf
icebp
or
insb
inc
arpl
push
sbb
jb
adc
mov
ja
popf
ds
cmp
sbb
xchg
pop
dec
add
xor
fcomip
shr
xchg
stos
pop
jbe
shrb
lock
adc
add
mov
jle
movsb
lods
mov
stc
mov
inc
push
lods
xchg
cld
frstor
stos
addr16
dec
cwtl
xor
lock
cmpsl
xchg
lret
stc
sahf
es
lret
std
jge
aas
and
out
and
negl
fisubs
loopne
addr16
sub
push
clc
jmp
repz
and
test
cwtl
mov
out
xchg
push
mov
popf
cli
ljmp
inc
int3
mov
lods
dec
pop
sbb
mov
jl
and
xor
mov
cmp
imul
and
xchg
nop
lods
dec
jne
pop
dec
movsb
outsl
arpl
in
inc
xchg
scas
jns
loop
jo
arpl
add
cmp
mov
clc
xor
sbb
inc
shll
or
or
ja
sbb
xor
xor
inc
rclb
repnz
inc
ret
cmc
fidivrl
or
stos
pushf
notl
out
add
push
jl
imul
popa
rcr
xlat
ror
mov
loope
sbb
int
cmpsb
lret
push
xorb
inc
sbb
loopne
adc
add
sbb
jae
push
mov
sub
jae
mov
lret
sti
hlt
sub
jnp
test
std
pushf
lret
inc
movsb
in
bnd
or
xor
and
jbe
les
dec
test
xor
or
and
movsb
mov
loop
nop
mov
push
jg
and
rorb
movsl
add
mov
and
rcll
negl
popa
fwait
sub
hlt
cmc
icebp
mov
stc
dec
scas
fidivrs
sbb
sbb
pushf
push
pushf
push
shll
lock
dec
ljmp
ja
in
xchg
mov
cmpsb
leave
jbe
call
push
aas
scas
shrb
xlat
sbb
cmp
dec
stc
int3
xor
or
scas
nop
mov
ds
rcrb
push
push
notb
mov
outsl
xchg
clc
out
pop
pop
std
adc
mov
stos
sub
and
or
or
incb
and
in
push
out
cmpsb
push
jne
leavew
pop
movsb
pop
or
pop
loope
sbb
flds
insl
std
test
xlat
out
adc
stc
faddl
negb
out
std
jecxz
mov
dec
push
and
addr16
add
cmp
jl
sbb
ret
in
pusha
push
xor
daa
lret
test
aas
shr
jle
xor
push
sbbb
sbb
out
cmc
stos
pop
mov
or
push
ss
push
imul
scas
fcomps
aad
js
and
imul
rorl
add
adc
ljmp
hlt
xor
dec
or
sbb
mov
sbb
push
scas
data16
pop
or
lret
jo
js
jmp
sbb
dec
rcll
incb
stc
or
cmp
push
jecxz
inc
dec
call
lret
outsl
pop
push
adc
adc
mov
js
mov
xchg
sub
cmp
cmp
addb
xchg
std
fldt
or
test
mov
insb
nop
xor
cmp
sub
popf
pushf
call
addr16
rsqrtps
aas
rcrb
sbb
and
aaa
in
lcall
rcrl
mov
and
stc
or
pop
mov
fwait
cltd
cmpsb
andb
ja
pusha
or
mov
mov
xchg
mov
jg
pop
mov
jp
xchg
rolb
jo
scas
js
in
popf
lret
les
or
rolb
pop
std
and
jae
nop
push
cltd
sbb
and
sbb
xlat
add
subb
sbb
jb
shl
push
mov
pop
push
out
mov
insl
dec
hlt
std
cmpsb
lcall
iret
mov
dec
mov
or
sub
add
pop
je
cmpsb
cmp
inc
pop
inc
xorl
pop
push
pop
jmp
adc
inc
mov
daa
xchg
adc
push
lods
lcall
xor
jnp
mov
pop
cltd
push
imul
flds
push
jne
mov
inc
in
sub
movsb
adc
add
gs
lods
xchg
add
mov
mov
sub
pop
sahf
mov
cmpsl
sub
fisubrl
cmp
js
cld
sbb
xor
inc
push
enter
inc
fmul
fstpl
je
lock
dec
pop
hlt
test
mov
jae
jecxz
out
bound
cmpsb
imul
std
push
mov
xlat
es
fstpl
xchg
lock
int
mov
mov
das
leave
mov
mov
push
cmpsb
mov
and
inc
lret
je
or
and
cmpsb
fdivs
jle
ret
out
adcl
adc
cmc
jp
in
or
cmp
jle
mov
clc
popf
mov
push
pop
leave
shlb
cmp
push
or
and
fisubs
dec
fs
fwait
test
mov
and
cmp
int3
inc
pop
pop
xchg
pop
sahf
mov
shrb
jb
sbb
or
lods
adc
pop
or
aaa
gs
jne
mull
lea
sbb
arpl
out
and
or
push
xchg
jecxz
in
dec
aas
hlt
fs
xchg
divb
pop
fsub
insl
jecxz
xor
or
mov
push
inc
jp
sub
rcrb
es
xor
icebp
clc
cltd
sti
test
mov
pop
push
lret
lds
push
or
pop
lock
outsl
inc
add
out
ss
iret
dec
sbb
rcr
aad
cmp
mov
jg
shll
pop
lret
adc
jp
mov
xchg
jns
mov
sub
cmp
xor
sarb
pop
sub
xor
sbb
mov
and
push
xchg
ret
loopne
int3
lahf
enter
xor
push
sbb
dec
sub
mov
insl
xchg
subl
mov
fidivl
aam
xor
xchg
insl
hlt
subb
hlt
bswap
mov
mov
sbb
and
sahf
mov
es
push
mov
stc
jo
inc
xchg
aad
movsb
mov
movsb
mov
test
xor
ss
add
jl
fisubrs
je
lcall
mov
jne
sub
add
cmc
sbbb
sbb
leave
inc
lods
xor
xchg
test
cs
inc
pop
les
mov
push
mov
mov
dec
fimull
mov
add
fldl
xchg
add
imul
out
jge
xchg
cli
add
mov
daa
aaa
popf
test
into
xchg
jg
mov
bswap
cmp
inc
sbb
sbb
sub
mov
stos
xchg
into
les
paddsb
aad
into
sysexit
push
add
addl
and
add
pop
xchg
ret
lret
mov
setne
xlat
out
adc
push
inc
mov
call
stos
inc
push
push
movsl
dec
push
mov
cwtl
call
insb
pop
mov
lea
mov
jbe
int3
mov
push
xchg
sub
inc
jmp
andl
dec
leave
aas
into
in
inc
ret
jp
nop
sbbb
test
jmp
lods
dec
movsb
std
scas
test
rcrb
cs
mov
ja
outsb
add
pop
dec
fwait
minps
mov
mov
sti
movl
pop
mov
xchg
jnp
mov
outsb
push
cs
pop
and
jbe
xchg
and
aam
test
push
orl
sub
fcom
mov
xor
cmp
in
xor
sbb
roll
mov
push
bound
hlt
int
adc
cli
mov
sbb
dec
pop
js
push
loop
cmp
sbb
mov
adc
mov
pop
mov
in
loop
cltd
outsl
dec
test
sbb
or
rolb
cld
inc
mov
jle
in
ret
popf
xlat
mov
fstl
inc
mov
cmp
adc
sub
out
dec
stos
in
push
fiadds
adc
addr16
cmc
push
lret
cmp
ljmp
cmp
jp
push
fsubs
ja
cltd
pop
push
aad
sub
in
inc
pop
push
fidivl
dec
dec
push
xor
sahf
std
insb
mov
sbb
loopne
pop
pusha
cmp
lock
jae
mov
sub
push
jg
jl
popa
lods
mov
inc
inc
lahf
aad
ljmp
scas
stos
arpl
sub
aad
mov
and
punpckhdq
pop
repz
add
std
add
dec
xchg
test
cmpsl
mov
pop
add
xor
mov
add
xchg
outsl
mov
push
jge
add
movsl
shl
cmpsl
cwtl
push
sbb
pushf
scas
mov
lcall
divl
xor
stos
cmp
aam
pop
xchg
fidivrs
mov
icebp
jnp
sti
int3
pop
pop
push
decl
popa
lahf
jg
and
add
cmpsl
bound
jns
pushf
mov
popf
cmc
js
jae
adc
mov
dec
les
in
push
mov
jg
add
mov
fnsave
aaa
divl
add
mov
lods
fxch
sahf
addl
xchg
add
mov
adc
sbb
outsl
aam
mov
mov
cwtl
push
or
leave
add
out
xchg
push
jle
mov
jp
xor
jne
cmc
mov
mov
inc
mov
inc
cwtl
cmp
lods
cmc
movsl
add
mov
repz
out
leave
in
xlat
int
xchg
das
in
into
in
insb
jo
aam
inc
pop
sub
adc
divl
lods
into
in
outsl
dec
inc
scas
movsb
out
jecxz
lret
test
outsb
dec
lock
lods
mov
aam
test
cmp
and
xchg
push
jp
aam
cli
nop
jne
cwtl
push
or
icebp
jbe
ss
fcomps
push
add
jmp
jns
mov
cmc
xchg
cmc
dec
adc
mov
pusha
pop
dec
xor
push
push
psrlw
leave
lcall
xor
jne
shll
gs
loope
inc
xchg
into
or
loop
loopne
inc
lea
mov
leave
or
ljmp
xor
xor
cld
push
dec
stos
movsb
dec
arpl
inc
adc
ljmp
in
or
roll
repz
adc
inc
xchg
jae
imul
mov
lret
push
jae
imul
inc
xor
jno
movsl
fnsave
hlt
pop
test
enter
or
dec
jo,pt
cld
into
pop
sub
mov
dec
shll
cmpsl
add
inc
ficompl
daa
inc
mov
fisubs
int3
inc
repz
dec
push
aam
sub
pushf
or
push
lcall
sbb
lea
decl
icebp
ljmp
jmp
test
sbb
or
fisubrl
mov
andb
sbb
iret
andb
mov
xchg
push
push
mov
ljmp
repnz
cltd
add
dec
shlb
movsb
orl
or
roll
jl
add
ret
xchg
into
mov
cmpsb
dec
sub
imul
push
pop
out
movsl
mov
jmp
xchg
lds
and
cld
mov
ljmp
dec
dec
push
arpl
or
jno
xchg
aaa
imul
sti
sub
ret
rclb
jns
dec
movsb
xchg
addl
mov
cmp
ret
popf
mov
sub
pop
iret
xorb
push
xlat
push
push
adc
or
sbb
cltd
add
imulb
mov
sbb
ljmp
mov
mov
xor
cmp
clc
outsl
jns
ret
hlt
imul
sbb
gs
mov
pusha
inc
repnz
int
xlat
mov
pop
mov
pushf
dec
mov
pop
in
xor
testb
rcr
cmp
cltd
mov
push
sub
sub
pop
pop
int
insl
push
sbb
mov
pop
add
pop
and
stc
fs
adcl
cltd
rol
sahf
jae
jp
scas
dec
xor
data16
inc
or
and
mov
rolb
adc
fbstp
and
nop
leave
sbb
mov
inc
jo
or
lcall
lcall
loop
mov
mov
push
add
lret
dec
or
imul
push
sbb
outsl
fcoms
fnstsw
cmp
movsl
jns
mov
out
cmp
xchg
xchg
aad
lock
subb
mov
arpl
iret
aam
stos
addl
outsb
icebp
data16
ds
mov
sahf
bswap
insl
lock
lds
mov
je
pop
pusha
icebp
add
adc
ja
shll
add
fidivrs
loopne
leave
jne
add
sbbb
and
inc
mov
push
rcr
mov
adc
xor
inc
pop
or
dec
out
das
push
xor
jle
pop
les
sub
pop
rorl
clc
sbb
fdivs
pop
call
push
add
ja
push
ljmp
syscall
shrb
jno
add
les
xchg
mov
sar
pop
leave
out
pop
loopne
outsl
cmpsl
in
lods
test
cmp
cmc
xchg
js
mov
das
cmp
sbb
mov
mov
push
push
push
sub
adc
sbb
jge
cltd
mov
lods
ret
sub
jp
imul
cmp
pop
lock
cmpsb
sub
adc
dec
push
xor
int3
mov
fldl
push
pop
fwait
xchg
lds
push
cwtl
fs
sbbl
ja
sbb
sub
sti
fs
cmp
fptan
mov
int3
sub
ss
outsb
ret
fdivp
pop
shl
loop
in
lea
hlt
into
or
adc
and
fwait
pushf
jb
jp
rol
pop
out
pop
std
mov
rorl
movsb
cmpsb
imul
pop
inc
cmpsl
pop
ja
adc
or
inc
cwtl
mov
int
mov
inc
insb
dec
dec
aad
ss
movsb
sbb
les
movl
shrl
test
and
stc
or
in
out
adc
lret
sbb
icebp
mov
lret
dec
cs
push
or
mov
imul
push
lods
sbb
xor
push
and
inc
out
ret
int
mov
mov
or
or
cmp
sbb
or
out
cli
sub
dec
mov
sahf
push
pop
cmp
sub
mov
jnp
sbb
xchg
jns
dec
ja
lahf
xor
arpl
xchg
std
pop
scas
je
dec
mov
js
mov
sub
cld
cmpsl
mov
cmp
movsb
cltd
pop
or
inc
jae
and
push
test
sarl
dec
les
inc
push
push
xchg
mov
or
arpl
pop
cwtl
sbb
pop
adc
repz
inc
loopne
sbb
jmp
mov
or
inc
in
cli
frstor
jp
add
notl
es
sub
dec
xor
xor
in
cmp
push
test
sbb
push
scas
inc
xor
cwtl
add
inc
and
enter
iret
insl
mov
or
cmp
add
out
mov
lock
sarl
xor
xchg
roll
in
dec
cmp
mov
sub
sub
lcall
mov
mov
jmp
pop
adc
cmp
cmp
in
sti
notb
push
gs
adc
data16
sub
fdiv
dec
fsubp
testb
push
sbb
out
cld
mov
int3
cltd
lret
das
mov
out
and
mov
or
dec
out
inc
add
mov
cmpb
lahf
rolb
fadds
mov
mov
ret
sbb
arpl
fs
add
and
cwtl
push
jbe
jnp
sbb
mov
mov
into
mov
mov
les
loopne
sub
or
xchg
dec
test
pop
rcll
push
ficoms
test
sbb
fnstsw
movsl
mov
jbe
mov
sbb
or
push
sti
jmp
lahf
push
insb
hlt
and
jbe
sarb
inc
ja
jns
fimull
adc
and
shll
xlat
push
pop
xchg
in
sub
xchg
aas
jmp
aaa
xchg
gs
lods
jne
cmp
aad
mov
mov
push
rcll
test
bound
imul
sub
divl
jns
sbb
jo
push
dec
pushf
fsubrs
cmp
xchg
pop
adc
out
stos
out
xor
in
ds
jge
bound
gs
push
bswap
aad
call
or
push
mov
xchg
ljmp
lcall
cmp
iret
repz
xchg
jge
daa
stos
lods
aaa
and
inc
xchg
scas
pop
or
and
xchg
push
imul
jae
cmp
test
push
jmp
ret
clc
add
push
enter
orl
cwtl
mov
xor
jl
push
negl
les
xor
xchg
imul
fisubrs
push
jbe
mov
aam
sub
insb
jecxz
cmp
enter
jge
sub
pop
xor
lret
add
pushf
scas
mov
ret
fsubl
out
mov
mov
fdivl
cmpsl
dec
xchg
mov
pop
ds
sub
shr
jb
cmpsb
daa
cmpsb
and
scas
and
xorl
push
inc
popf
lds
fistl
mov
call
sub
int
and
pop
or
data16
mov
ss
sbb
add
int3
add
jns
pop
cli
cs
fs
add
pop
mov
mov
sub
or
lret
or
inc
pop
fs
lds
push
pop
aam
lret
cmc
dec
inc
iret
cmp
or
insb
cmpsb
or
add
movsb
xor
xchg
sbb
test
icebp
xor
clc
hlt
mov
insl
jge
daa
cmp
pop
mov
jae
stc
out
push
clc
lret
loopne
rcrb
aad
xchg
pop
or
sbb
leave
test
xor
xor
jno
prefetch
sub
cmpl
mov
pusha
or
mov
push
sub
stc
push
pop
sbb
xchg
pop
popf
int
push
dec
inc
cmpl
xchg
adc
lahf
and
mov
and
gs
orl
mov
xor
push
xchg
cmp
cmp
int
xor
mov
jno
icebp
and
dec
maskmovq
mull
xchg
or
ss
daa
jno
outsb
cmp
imul
or
pop
jae
insl
aam
shl
data16
cmp
and
into
mov
pop
int3
out
outsl
and
jbe
sbb
pop
xchg
cs
adc
dec
add
pop
jbe
or
dec
jne
mov
mov
xchg
scas
and
adc
sysret
sub
xorb
mov
push
fiaddl
dec
lret
xor
add
fneni(8087
imul
imul
push
and
mov
jecxz
add
mov
sahf
cwtl
and
jns
lret
lods
in
cmc
fstl
sbb
xor
sub
popa
and
arpl
push
xchg
mov
stc
mull
imul
mov
or
pop
sbb
jbe
clc
mov
add
arpl
jbe
cmpsl
subl
cli
xchg
xchg
dec
cmc
lret
pop
sahf
add
js
jnp
xchg
out
mov
add
add
nop
fsubp
push
jmp
gs
movsb
pop
test
xchg
add
inc
push
inc
or
lret
xor
repnz
push
popa
mov
mov
aas
mov
push
push
out
or
data16
sahf
lahf
mov
push
stc
nop
cmp
jecxz
aas
add
movsb
or
jb
sbb
movsb
test
mov
pop
push
push
or
mov
xor
jnp
sti
sbb
loopne
cld
leave
cmpl
aas
pop
dec
adc
mov
jp
and
mov
mov
rcll
imul
adc
add
loope
jmp
inc
xchg
cmpsb
sarl
sub
add
test
outsl
jno
add
cmp
outsl
xchg
inc
fcmove
popa
outsl
cmc
icebp
xor
into
push
push
xor
hlt
adc
add
sbb
or
lods
dec
cld
pushf
in
push
jnp
fst
sub
ret
pop
lock
and
dec
dec
dec
popf
mov
sbb
jp
xor
xlat
out
dec
push
fisubrs
fbstp
mov
cmp
into
jle
es
sbb
xor
adc
fdivr
xchg
test
push
test
jbe
repz
push
frstor
repz
pop
int
notb
das
add
mov
and
frstor
add
adc
movsb
lods
and
leave
xlat
cmp
mov
icebp
cs
push
mov
cmc
fstp
scas
cwtl
sbb
dec
dec
mov
in
stos
stos
push
dec
rorl
loop
mov
fcom
add
xchg
mov
inc
add
inc
fldcw
xchg
adc
push
cmp
punpcklwd
fstl
leave
mov
and
or
push
fwait
std
jp
sbb
pop
mov
xchg
clc
popf
imul
jae
fadd
add
and
push
or
mov
lods
les
add
fisubs
adc
mov
and
out
inc
sbb
pop
sub
repnz
aas
push
xchg
jo
test
sahf
in
shlb
mov
adc
sbb
cmpsb
cmp
je
adc
xchg
and
ljmp
jmp
pop
inc
mov
lds
mov
fwait
cs
add
outsl
inc
or
pop
jge
lods
dec
fnstenv
jns
mov
mov
icebp
jnp
xor
repnz
stc
pop
int3
pusha
out
icebp
pop
mov
out
xchg
decb
lcall
fwait
loopne
xchg
push
mov
pop
xchg
lods
scas
and
pop
inc
clc
mov
jg
shll
shl
fsubrl
pushf
dec
aam
push
cmpl
sbb
jbe
jge
dec
stos
mov
dec
gs
ja
lea
ljmp
push
vpcomuq
aad
rclb
cmp
cs
iret
push
xchg
xor
push
divb
or
aad
cmpsl
cmp
fwait
sbb
sbb
or
lods
sahf
jecxz
and
and
adc
pop
mov
data16
mov
lds
aas
ss
pop
fwait
inc
aam
xchg
ss
andl
and
mov
ja
add
push
lea
mov
pop
push
pop
mov
ss
faddl
push
repnz
xchg
ljmp
fdivrs
inc
fimull
jns
lea
ljmp
dec
je
and
icebp
add
iret
sbb
push
mov
jge
cmc
push
mov
add
pop
mov
xchg
mov
sub
repnz
fcoms
or
andl
fdivl
mov
ret
mov
cmc
pop
xor
stc
adc
adc
pop
lods
mov
mov
pop
dec
out
adc
sbb
je
add
stos
sti
lods
mov
xchg
in
lret
cmc
jl
rcr
ja
mov
or
std
mov
test
push
cmp
cmp
iret
lahf
sbb
dec
sub
inc
divl
xchg
fnstsw
sbb
int
imul
imul
push
outsl
add
cmp
sahf
ret
outsb
outsl
dec
mov
push
rcll
sbb
sahf
sbb
push
iret
mov
push
sbb
dec
lcall
xlat
mov
je
fisttpll
cmp
sti
out
dec
enter
sub
inc
sbb
xchg
jg
xor
lahf
sbb
jns
jp
in
mov
mov
mov
adc
fsubl
scas
jne
sbb
sahf
aas
int
xor
pop
test
repnz
fldl
loop
xor
fldpi
cmp
shlb
stos
mov
lea
mov
fwait
sub
xor
pop
fsubrs
es
ficoml
adc
xlat
cltd
js
pop
and
pop
lods
jnp
mov
push
outsl
xchg
jg
push
dec
mov
push
inc
or
pop
and
jae
gs
sub
out
push
das
insl
pop
mov
nop
cmpsl
add
dec
mov
and
push
leave
inc
or
jne
and
mov
repz
and
jne
mov
fcmovnb
xchg
hlt
outsl
fsub
pop
outsb
mov
in
out
mov
adc
or
fisttps
mov
fwait
add
test
xchg
pushl
cmp
pop
and
or
xchg
shrb
mov
push
sbb
add
mov
mov
xor
and
mov
push
fnsave
mov
sub
dec
push
mov
xor
mov
test
adc
jmp
std
loop
dec
out
adc
pop
dec
and
outsb
xor
in
sub
or
sti
loope
xor
divb
adcb
scas
sub
aaa
or
pop
pusha
mov
xlat
xchg
xchg
inc
sub
jo
fcomi
sbb
jmp
cmpl
and
insb
sub
aas
push
and
pop
push
mov
int3
xchg
adc
test
jae
dec
jo
xor
cmp
adc
shll
or
rcrb
jae,pt
notb
popf
mov
cmp
sbb
lcall
lahf
or
out
jae
fwait
aam
cld
lahf
popf
fnsave
cmp
mov
scas
lea
repnz
xchg
popa
scas
xor
jae
int3
cmpsb
and
inc
xchg
lods
mov
pop
mov
xlat
repz
movsb
popf
and
out
lods
ss
fadd
imul
ret
cwtl
js
push
push
push
sub
sahf
mov
repz
xchg
mov
shrb
int3
lods
fstps
inc
ljmp
aam
mov
icebp
push
ljmp
jp
or
pop
popf
sub
or
idivl
mov
ret
cmp
cmp
dec
mov
rcrb
xor
sub
es
shrl
jmp
mov
pop
out
jnp
or
add
mov
xchg
fstpt
jne
scas
mov
call
push
scas
sub
jl
pop
sub
lret
out
test
fnstsw
stc
mov
std
cmpl
or
inc
add
push
jne
fdivs
add
xor
sbb
mov
call
dec
sti
push
pop
js
xor
jl
sahf
neg
mov
xor
push
mov
cltd
aas
test
cmc
lock
in
imul
subb
or
xchg
pushf
push
xor
test
ljmp
mov
imul
push
push
add
pushf
cmp
cld
imul
inc
push
add
negb
sbb
cmc
call
outsb
cli
push
into
hlt
aaa
mov
imul
jge
push
or
cmp
jp
mov
or
rcll
xorb
adc
xchg
jl
cmp
cmp
in
lock
inc
jne
jmp
int3
jmp
pop
in
mov
mov
aaa
sbbb
sbb
stc
sub
loopne
or
cmpsl
lret
inc
sti
addr16
insl
out
inc
inc
das
dec
ret
jnp
movsb
mov
mov
loopne
jmp
xchg
je
lcall
push
icebp
ret
cmpsb
mov
dec
or
out
xlat
shlb
mov
test
sbb
and
pop
push
push
jle
sub
popf
inc
int3
xchg
mov
pop
lock
rcll
adc
arpl
lahf
mov
rcrl
push
scas
push
inc
movsl
clc
dec
sbb
adc
testb
in
leave
cwtl
mov
mov
or
jns
or
xor
mov
xlat
sbb
xchg
orl
jmp
inc
add
clc
jmp
sahf
jnp
test
dec
pop
lahf
mov
push
fiadds
jl
dec
xchg
dec
gs
cmpsl
adc
push
int
sub
jae
inc
arpl
sub
ljmp
fs
xor
sti
mov
adc
cli
ret
dec
jmp
ja
fidivrs
jge
jnp,pt
les
cld
std
jmp
adcl
fmuls
ficoml
sarb
pop
or
and
repz
xor
ljmp
stos
outsb
cmpsb
js
sbb
sbb
xchg
rclb
push
dec
mov
dec
jae
cmpsl
adc
je
jo
scas
add
shlb
fwait
add
in
pop
push
stos
rcrb
cmp
lods
imul
int
sub
xchg
cmp
and
xor
repnz
lretw
lds
out
cmpsb
jns
cmp
cmp
mov
xchg
outsl
sahf
test
pop
rclb
rclb
cli
xchg
inc
shr
iret
lods
or
ljmp
arpl
jle
aaa
sub
sbb
sub
lock
imul
sub
mov
mov
pusha
mov
outsb
add
lods
pop
sub
fimuls
fdivl
ret
shrb
jo
sbb
inc
and
in
or
inc
inc
cmpsl
jnp
pop
aaa
cli
test
stos
dec
adc
push
in
pushf
sbb
dec
aam
cmc
arpl
js
pop
mov
in
cmp
addr16
pop
add
sub
mov
jns
test
sbb
fisttps
push
mov
mov
jge
xchg
inc
mov
arpl
fidivrl
inc
push
sahf
xchg
push
mov
outsb
inc
sbb
jmp
out
dec
mov
pop
call
adc
dec
dec
popf
lcall
adc
enter
or
mov
xchg
xorb
lods
push
pushf
xor
jmp
div
popf
mov
xor
cltd
push
outsl
into
cmp
add
aas
cmp
lods
out
inc
out
pop
lahf
lahf
sub
mov
sbb
idivl
adc
fisubs
insb
imulb
xchg
push
add
add
mov
negl
pushf
mov
cmpsb
sti
xchg
jne
fs
adc
sub
stos
xchg
fimull
mov
push
cmp
outsb
test
loopne
icebp
xchg
jmp
mov
outsl
pop
jge
ss
hlt
lret
lods
add
sbb
in
sbb
pusha
pop
lock
push
aam
iret
fwait
mov
aas
dec
push
cmpsb
mov
arpl
adcb
xchg
jo
nop
sbb
insl
lods
inc
jle
inc
xor
nop
shll
add
sub
repz
aad
jnp
imulb
sub
lahf
out
push
xor
std
mov
or
mov
outsl
jo
sbb
ja
or
lahf
int3
mov
stos
jae
test
mov
ret
hlt
call
insl
push
cld
sub
xchg
xchg
dec
mov
xchg
inc
shrl
xchg
push
jecxz
jmp
lock
sarb
mov
fildl
arpl
loopne
mov
pop
jmp
jne
ret
movl
lcall
xchg
scas
shr
xor
xchg
push
dec
cmp
pop
pop
das
cld
dec
dec
rcrl
mov
hlt
add
xchg
std
or
and
jp
jb
ds
les
push
mulb
mov
pop
daa
cmp
lret
and
jo
js
idivb
jle
movsb
xchg
cmc
mov
std
mov
int3
lock
int
cmpsl
fnstcw
das
out
shll
aaa
jg
icebp
dec
xor
lea
rolb
bswap
ss
lds
mov
add
push
push
outsl
clc
and
test
ja
fstpt
sbb
cwtl
fnstsw
sub
into
cmp
xlat
repz
loopne
aad
outsb
xor
repnz
jo
xchg
rclb
xor
cmc
iret
leave
xchg
inc
iret
cmp
or
mov
sub
out
dec
jae
fwait
aam
or
scas
cld
dec
adc
cld
outsb
int
sarb
jecxz
sbb
aad
xor
jno
mov
out
addr16
icebp
mov
sahf
xchg
jp
xchg
pusha
andl
fmuls
nop
pop
arpl
mov
mov
into
ret
and
dec
sbb
decb
push
xor
jle
sbb
fiadds
cwtl
cld
jle
popa
and
or
leave
movsl
sub
inc
jae
xchg
push
fsubl
and
stos
adc
push
fisttpll
lret
stos
lods
lods
mov
jecxz
push
testl
lds
jb
int3
aam
adc
lds
popa
nop
xchg
mov
cmpsb
shl
rcrb
cmpsl
insb
or
daa
jb
call
jecxz
pop
sub
mov
loop
outsb
jecxz
test
or
push
in
mov
scas
sub
dec
enter
or
lock
inc
xor
or
arpl
mov
mov
sub
sub
jno
inc
jns
mov
jg
jbe
das
dec
nop
xlat
pop
daa
push
cmp
cmpb
sbb
outsl
pushf
repz
dec
fcmovnu
sub
pop
pop
push
imul
popl
dec
add
xor
stc
xchg
sbbl
cmp
ja
outsl
pop
dec
in
push
std
inc
es
jnp
lds
loope
or
push
sbb
fmul
lcall
pushf
xor
adc
mov
or
or
scas
push
out
and
out
test
pop
ret
add
xchg
pusha
xchg
mov
addr16
es
sbb
push
or
dec
adc
dec
sbb
xchg
ret
cld
adc
mov
adc
lcall
xor
movsl
out
jge
sbb
add
movb
lcall
pushf
adc
pop
lds
and
mov
into
or
bound
vunpcklpd
movsb
movsb
lods
fsubrs
adc
xchg
cltd
ds
sub
aas
clc
add
out
cs
lret
test
scas
int3
into
cli
pusha
out
lods
popf
or
or
out
nop
icebp
loopne
je
jle
pusha
xor
adc
data16
or
and
and
xor
hlt
and
jle
mov
dec
mov
daa
mov
loop
fsubs
idivb
es
pop
xor
lods
fcmovne
loopne
dec
mov
dec
in
jnp
hlt
mov
fs
js
fcmovb
je
sbbb
sub
stc
pop
dec
inc
cmc
jmp
sub
out
adc
cmp
inc
cmp
or
scas
mov
and
mov
mov
dec
xor
inc
add
iret
sub
arpl
xchg
jg
add
adc
lret
cltd
jl
icebp
cmp
inc
dec
lods
cmpsb
lock
loopne
mov
in
cs
mov
jp
out
mov
xor
push
testl
aas
movsl
outsl
test
mov
push
mov
cmpsl
mov
jnp
cmpsl
das
scas
add
and
mov
pop
les
arpl
jmp
xchg
pop
and
test
xor
cmpb
jnp
arpl
cltd
push
push
jge
insl
insb
adc
orb
mov
ret
aaa
xchg
jnp
test
jp
bound
lock
andl
pop
sbb
xchg
and
lahf
xchg
add
add
sbb
mov
inc
aaa
xchg
movsb
fs
inc
dec
js
repnz
fstpl
pop
jo
in
xor
mov
push
mov
jne
pop
pop
cmc
mov
or
aad
js
cmc
jae
add
and
shl
push
mov
nop
adc
xor
fbstp
mov
jno
andl
cmp
and
cmp
push
scas
mov
mov
popf
ja
ja
adcl
hlt
jnp
sub
jecxz
loope
lcall
nop
pop
js
out
stos
fdivl
xchg
xor
jb
xchg
testl
fnstcw
jae
cmp
sbb
insl
mov
popf
cmp
adc
stos
aaa
and
sub
inc
push
and
push
lock
push
push
mov
mov
test
inc
adc
scas
jg
lock
mov
imul
sbb
mov
je
insl
int3
in
mov
aaa
imul
dec
int
test
aad
cs
and
or
mov
test
out
int3
testb
lods
mov
inc
pop
testl
in
psubusw
gs
sub
push
addr16
jne
mov
push
lcall
xchg
mov
dec
or
sub
jle
xchg
rcrl
jae
outsb
adc
dec
sub
fildll
out
dec
ds
mov
adc
pop
lahf
and
sarl
pop
out
and
shll
repnz
xor
cmp
mov
daa
jp
daa
mov
orl
xor
mov
push
int
sub
cmp
ljmp
push
and
fildl
jmp
xchg
pop
inc
sahf
adc
repz
push
sbbb
sbb
lret
pop
stc
adc
pushf
push
inc
lea
addr16
aam
sub
xchg
rcll
push
push
and
pop
cmp
pop
cmp
push
sub
sub
mov
out
repnz
scas
inc
loopne
mov
mov
cwtl
mov
in
mov
lods
dec
imul
in
mov
fistps
mov
push
outsb
nop
leave
inc
jge
sbb
or
add
lahf
iret
int
cs
popa
lahf
dec
in
xor
cmp
lods
fs
aas
ret
sub
pop
mov
lea
movsb
or
sahf
xor
fdivrs
out
push
call
mov
and
faddp
pop
mov
loopne
les
jmp
addr16
mov
psubsb
pop
sub
cmp
nop
ljmp
aam
fsubrl
sbb
mov
dec
add
adc
mov
jo
gs
pop
jmp
shlb
test
sub
sub
sub
pushf
mov
lock
jp
jne
dec
std
loope
cmp
cmp
in
fs
or
jns
jecxz
loopne
pusha
out
roll
stc
add
pop
mov
ss
jnp
or
stos
xchg
stc
xor
inc
xchg
test
leave
push
xchg
sub
mov
test
hlt
test
arpl
js
adc
push
pop
dec
fdivr
and
jmp
das
insb
leave
mov
adc
dec
mov
push
and
sub
loopne
sub
outsl
jmp
insb
adc
push
cmp
adc
push
sahf
cmp
push
mov
mov
lds
cmpsl
test
xor
xchg
push
pop
xchg
out
sbb
pop
into
ljmp
jge
fstps
flds
mov
xchg
pop
sarb
call
retw
mov
cs
cmpsl
lods
jmp
push
jae
lods
loopne
or
lods
mov
ud1
push
das
jnp
jne
or
arpl
fnclex
lods
inc
dec
test
xchg
push
nop
and
cmp
sahf
lock
pop
fistpl
sub
rcrb
and
movsb
xchg
stc
and
cmpsb
xchg
pop
psrad
push
push
mov
aaa
lods
aas
sub
mov
clc
orl
in
lret
sarb
push
lret
xor
sbb
push
dec
adc
sub
push
dec
scas
pop
adc
dec
xor
add
sbb
fyl2xp1
mov
fs
sbb
mov
cmpl
cwtl
sbb
mov
lods
mov
loope
repnz
or
mov
testb
shl
push
sub
xchg
sub
dec
loopne
adc
fs
xchg
mov
je
mov
imul
inc
push
into
xor
sub
cltd
out
push
sti
das
outsl
or
lock
sahf
push
push
push
fistpl
mov
es
mov
negl
test
add
rclb
hlt
pop
push
mov
add
add
js
push
jl
clts
add
push
cmp
out
or
shl
dec
ret
pop
or
mov
or
or
lods
push
mov
or
loop
fists
call
int
cs
and
imul
out
in
incl
popa
leave
lock
xchg
xlat
leave
loop
add
int3
int
rol
cmp
inc
pop
and
mov
stos
pusha
outsl
mov
aas
loop
push
mov
sbb
mov
pop
pushf
repz
popa
insb
xchg
mov
or
in
pop
dec
std
mov
pop
cltd
aad
sub
fsubrs
xlat
lcall
mov
sbb
jmp
in
push
call
adc
test
mov
cmp
jl
add
out
push
aad
inc
mov
mov
inc
push
test
shll
xor
dec
call
mull
push
and
lock
scas
stc
or
cld
fs
fisubl
jg
sbb
mov
loope
icebp
jg
sbb
insb
outsl
ret
mov
popf
popa
arpl
scas
adc
clc
sbb
cmc
mov
add
xchg
jp
lcall
lods
test
arpl
dec
pop
add
lahf
dec
rcrl
mov
mov
push
push
test
mov
loope
ret
add
mov
mov
jb
movsl
dec
leave
xchg
xchg
dec
ret
push
xchg
inc
js
jmp
xor
in
adc
xchg
loop
pop
push
shrb
xlat
fisttpl
push
stos
insl
and
repnz
xorl
aad
dec
mov
jmp
jo
test
movsb
aaa
das
jge
jge
mov
and
clc
hlt
and
sbb
cwtl
bound
dec
idivl
data16
mov
inc
push
sahf
sti
idiv
jno
aam
aad
cmp
xlat
fwait
add
out
pop
icebp
aaa
bound
dec
xchg
aam
cmp
int3
stc
pushf
pop
fstl
int3
pop
sarb
insb
dec
mov
jae
adcl
mov
inc
test
int3
push
mov
inc
or
mov
mov
sbb
out
and
cmp
repz
loope
mov
les
xor
xchg
leave
gs
sbb
mov
das
andb
mov
and
pop
adc
add
and
mov
pop
mov
jb
mov
iret
adc
inc
stc
push
mov
mov
daa
out
sarl
fistl
xrelease
add
jle
std
fwait
in
je
pop
mov
xchg
arpl
cli
outsl
or
pop
add
or
sbb
popa
test
iret
cs
xchg
sbbb
add
pop
stos
xchg
mov
ret
xor
popf
outsb
cld
dec
stc
and
xlat
bnd
pushf
mov
cli
xchg
sbb
test
mov
and
enter
pop
lds
jb
and
or
aas
dec
ja
inc
jg
out
pop
sbb
cmpsb
sub
shl
gs
fistl
sar
lea
fldenv
cli
insl
xchg
mov
pop
outsb
add
sub
insl
stos
fdivrp
aas
push
test
push
push
in
add
mov
sub
dec
lcall
xchg
bound
scas
aam
jle
add
movsl
out
lea
push
scas
scas
dec
ss
dec
test
inc
add
call
cltd
dec
push
sti
movsl
lock
jb
sbb
sub
mov
pop
clc
jg
jne
pop
cmp
xchg
movsb
out
imul
out
and
add
pushf
lea
push
mov
mov
test
mov
cmp
jmp
jl
push
xchg
add
jmp
or
mov
jmp
mov
mov
dec
jle
mov
jg
xor
xchg
repnz
outsl
out
popf
rcrl
cmpsb
and
imul
lods
inc
fldt
outsb
mov
sbb
dec
cmp
xlat
sub
xor
movsb
call
mov
stc
loop
xchg
sub
inc
push
movsb
std
lods
mov
sahf
adcb
sub
inc
cwtl
push
test
lcall
loope
leave
push
push
pushf
fwait
sbb
clc
loopne
gs
cld
xchg
mov
int3
orb
aad
cli
push
inc
out
aad
lret
test
adc
das
fwait
mov
bound
pop
pop
repnz
test
xor
cmp
pusha
test
out
test
xor
imul
cmp
adc
mov
mov
or
mov
lds
and
cld
movsb
in
shlb
mov
and
es
or
add
iret
fstps
mov
pop
je
adc
and
mov
pop
and
pushf
test
and
dec
xchg
and
fsubp
or
sti
jle
xchg
push
sub
clc
ds
mov
cmpsl
inc
xchg
in
and
das
mov
pop
cmp
mov
mov
ds
subb
aaa
pop
int3
pop
xchg
sub
shlb
mov
push
jne
lea
and
int3
and
mov
jns
adc
aas
shll
adc
mov
mov
pop
aad
xor
adc
jle
lcall
mov
sub
adc
push
cmpl
mov
inc
mov
icebp
dec
push
fwait
sarl
aaa
adc
lods
lods
adc
xchg
xchg
icebp
cmp
mov
or
movsb
fistpll
push
cmp
or
in
ret
sub
bound
xor
push
jns
aas
jecxz
in
push
or
lahf
inc
mov
dec
mov
or
mov
mov
rorb
in
into
adc
dec
daa
lcall
movsl
sbb
jmp
sbb
push
mov
cmp
push
push
add
cmc
pusha
dec
or
bound
outsl
mov
mov
mov
out
jp
jge
mov
ret
loopne
not
out
faddl
es
cli
dec
out
mov
and
out
mov
js
loope
add
mov
test
add
iret
add
add
cmpsl
xchg
stos
push
gs
test
das
jmp
clc
jp
sbb
cltd
fstps
mov
in
pop
test
jg
mov
cmp
repz
enter
imul
xorb
js
ljmp
add
mov
and
lahf
inc
enter
push
mov
xor
stc
cld
xor
shll
adc
xchg
jb
hlt
jmp
adc
xchg
mov
or
loop
jge
push
aaa
xchg
fmulp
adc
cmp
leave
insb
cmp
negl
test
jbe
or
xchg
mov
dec
jb
sbb
je
sbb
aam
faddl
pushf
add
lods
dec
xor
push
out
mov
sbb
ljmp
mov
repnz
mov
mov
iret
xchg
inc
inc
inc
push
cmpsb
test
adc
xor
loopne
in
cmpsb
ror
add
lret
or
out
pop
and
ud1
das
or
nop
insl
mov
jbe
insb
push
xchg
mov
dec
ss
test
mov
imul
mov
ds
stos
xor
push
mov
lock
and
rorb
dec
xor
jbe
mov
mov
mov
leave
jge
lods
shlb
add
test
push
in
stos
mov
das
in
push
scas
ljmp
stos
or
addl
pushf
and
ffreep
and
mov
push
icebp
stc
push
jge
or
push
and
cmc
ljmp
inc
out
inc
jl
in
repnz
dec
les
cmp
lret
mov
bound
push
push
repz
mov
dec
mov
adc
inc
mov
mov
add
sub
movsl
in
ret
push
stos
popa
pop
gs
enter
pop
mov
add
pop
out
cmp
out
jmp
dec
aad
in
jg
cmc
push
stos
push
sub
jns
inc
mov
dec
xchg
mov
adc
insb
add
cli
test
dec
cmp
add
jl
add
jp
inc
pop
sub
mov
xor
sub
sbb
les
pop
outsb
and
pop
fldenv
xor
push
push
lret
pusha
xchg
mov
inc
cmp
mov
add
dec
scas
das
in
jecxz
push
adc
movb
add
std
jge
jle
sbb
shr
adc
pop
add
ljmp
out
js
cs
cmpsl
adc
or
lods
ss
fs
pusha
xchg
jge
xchg
test
pop
xchg
stos
jbe
sub
rclb
or
xchg
jp
inc
mov
scas
inc
lods
stos
cmpsl
call
aaa
inc
insb
popa
shll
int3
std
mov
shrl
icebp
xchg
pop
pop
dec
cmp
sub
call
arpl
int
scas
rclb
inc
cwtl
push
cmp
mov
dec
xchg
pushf
or
nop
pop
sub
popf
sbb
mov
xchg
pop
js
mov
insl
les
testb
scas
rcll
pop
fsubrl
cli
mov
cmp
out
shlb
loope
add
jmp
test
rcll
imul
ret
outsl
cmpsb
push
mov
notl
outsb
pop
xchg
mov
or
jp
dec
stc
lret
ret
adc
lahf
jns
int
pop
dec
cmp
ds
imul
mov
shlb
mov
test
pop
adc
nop
jns
scas
mov
fs
push
cmp
jecxz
dec
aas
xchg
cs
sbb
ret
pop
popa
jg
divl
pushl
cmp
loop
aas
jae
sub
sahf
jmp
pop
mov
je
inc
fisubs
inc
lock
inc
stc
js
es
rcrb
sbb
pushf
out
ljmp
inc
pop
dec
and
jne
pop
xchg
sahf
lock
mov
test
mov
pushf
mov
mov
or
cmp
pop
push
incb
stos
cmp
mov
rcrb
add
cmp
lret
sbb
mov
fidivl
je
xor
mov
aaa
xor
sub
cmp
cltd
jecxz
inc
jge
mov
inc
adc
hlt
sbb
jno
push
movl
dec
or
add
push
jl
jae
lods
jns
adc
xchg
or
adc
push
adc
aad
adc
pushf
or
movsl
popa
ss
jp
or
das
cltd
sbb
xchg
jne
adc
add
rcll
ret
jl
pop
mov
dec
xchg
outsb
fsubs
cmp
bound
mov
sub
in
sub
andl
aam
nop
mov
stos
mov
dec
cwtl
cmp
leave
aad
inc
and
add
insb
xor
rorb
add
lret
or
push
popa
and
or
mov
and
sbb
rcl
adc
daa
add
and
xor
mov
mov
lds
aas
stos
test
pop
add
fs
mov
mov
mov
call
mov
mov
repnz
dec
inc
pop
pusha
mov
daa
mov
jb
mov
and
ja
mov
or
into
out
dec
push
in
cs
fstpl
push
mov
add
mov
lret
fimull
sbb
scas
lahf
bound
in
inc
adc
lea
push
adc
movb
mov
mov
sub
add
scas
insl
jo
arpl
bound
imul
jne
and
imul
xchg
into
xchg
pop
xchg
imul
or
add
or
aaa
push
xchg
add
or
jecxz
xchg
lods
pop
rorl
dec
jmp
cmp
data16
add
push
mov
mov
jbe
push
and
outsl
rorb
xor
movsl
mov
xor
sbb
sbb
jmp
dec
jp
xor
pushl
cs
movsl
mov
sub
mov
mov
dec
inc
fisubrl
dec
cld
add
xchg
inc
inc
mov
xor
orb
jbe
mov
and
imul
and
and
movsl
xchg
enter
filds
pop
sub
jl
cli
ja
push
sbb
insl
xor
enter
cmpsl
mov
clc
push
notl
shlb
fildl
add
mov
hlt
add
test
jge
or
sbb
cmpsl
leave
lret
out
repnz
pop
push
xlat
jbe
mov
mov
in
fcoml
sbb
mov
out
cmc
pop
fisttpll
lret
cmp
jge
jnp
add
xchg
dec
fmull
mov
pop
in
in
enter
aas
add
jo
cs
adc
scas
iret
loope
mov
pop
pop
leave
push
mov
cbtw
adc
or
out
ret
ror
jp
repnz
imul
repz
dec
testb
and
mov
iret
test
jnp
mov
pop
and
jmp
mov
lds
xorb
daa
jbe
cmp
ljmp
fidivrs
mov
sbb
push
es
inc
adc
xchg
fisttpll
lods
fists
xor
aad
cmpb
jbe
es
dec
push
cli
gs
push
mov
dec
imul
push
dec
lds
out
pop
test
cmp
int
rorl
mov
sbb
mov
lahf
fistpll
loope
fs
pop
imul
lahf
sbb
cmp
aas
dec
mov
in
scas
add
mov
cli
inc
arpl
add
dec
repnz
pop
mov
aaa
push
jne
adc
mov
xor
call
mov
call
ret
mov
aaa
lcall
add
push
in
mov
mov
pop
cmp
scas
outsl
orl
out
jp
xchg
sbb
inc
xor
or
movsb
mov
dec
icebp
insb
sbb
add
or
cld
insl
aaa
enterw
jbe
add
pop
mov
sub
out
adc
lods
mov
jge
iret
push
mov
jmp
mov
insl
jns
mov
fwait
into
or
pop
lock
xor
jno
or
es
out
testb
push
lods
data16
in
icebp
loop
ja
leave
or
nop
sbbl
pop
lds
or
cwtl
les
or
lods
mov
or
add
mov
out
mov
std
add
test
sub
lret
dec
mov
ss
add
popf
mov
into
in
jp
bswap
sbb
jnp
jbe
cmp
cli
mov
data16
call
leave
mov
xchg
rcr
js
adc
movups
fdivl
mov
mov
jg
imul
das
xlat
pop
fsubl
cli
out
adc
add
stc
ret
out
inc
lret
daa
cli
adc
mov
out
mov
ds
aas
cli
pop
inc
xchg
mov
pusha
mov
mov
stc
mov
fists
imul
pop
loopne
add
pop
push
daa
adc
jecxz
ss
or
sub
sub
push
xor
xchg
shrl
sub
dec
xor
inc
xchg
testb
push
aaa
mov
pop
lret
lea
gs
movsl
ficomps
xchg
nop
lret
gs
out
in
addr16
and
and
or
daa
mov
xchg
lods
ja
hlt
dec
sbb
mov
lret
mov
adc
mov
inc
cwtl
insl
dec
imul
xchg
pop
into
repz
sbb
xchg
mov
mov
cmp
scas
movsl
mov
mov
or
popf
push
dec
adc
jmp
dec
addr16
dec
inc
imul
enter
movsb
aaa
aad
gs
add
inc
mov
movsb
cltd
mov
fwait
adc
repnz
mov
idivb
enter
jns
aam
mov
int
cmp
int
in
in
mov
ja
loop
je
dec
xchg
les
adc
pop
cmc
sbb
cs
jno
push
dec
loop
cmc
mov
cli
cmpsl
cmp
mov
stos
add
mov
hlt
pop
cmp
jns
pop
or
adcl
repz
add
pop
test
pushf
push
xchg
mov
jo
ret
cmpsb
push
mov
stc
inc
cld
lds
xchg
rcll
pop
aam
add
es
clc
lea
mov
xor
insl
int
ljmp
lahf
enter
mov
sbb
xchg
dec
sub
in
mov
mov
lods
int3
mov
ret
pushf
pop
mov
stos
addr16
punpckhwd
mov
cmpsb
gs
jo
mov
js
ja
dec
xor
cmp
sbb
xchg
inc
mov
cmp
and
call
sti
adc
out
ror
out
sub
les
mov
fwait
add
jge
orl
cmpsl
dec
inc
mov
pushf
and
mov
adc
sbb
xchg
xlat
orl
jecxz
push
xor
sub
cmp
stc
out
leave
adc
imul
es
nop
cmp
aad
loop
push
inc
icebp
addr16
test
cmp
jb
test
sub
in
imul
cs
cs
loopne
fists
push
aaa
clc
stos
lahf
ss
add
cmpsl
in
scas
adc
jge
push
pop
sbb
dec
xor
daa
sbb
dec
in
imul
jnp
movsl
jp
inc
sbb
push
add
stos
lods
cmp
xchg
fisubrl
in
xchg
xchg
xor
pop
sarb
sub
inc
iret
flds
jbe
aam
pop
nop
pop
xor
jecxz
sub
xor
sbb
test
sub
mov
sub
les
test
in
out
adc
shlb
jl
lea
mov
mov
nop
push
stos
rorl
cli
sti
mov
insb
sbb
fldt
pusha
sub
cmp
jmp
js
push
mov
cmp
sbb
pop
cmp
lods
jb
mov
push
out
call
add
fs
push
push
sbb
sub
popa
lock
lahf
add
hlt
test
lret
gs
mov
jecxz
sub
or
jbe
jae
mov
lcall
in
dec
mov
cmpsb
jae
sub
adc
data16
movsl
inc
sub
fildll
mov
jp
rcr
dec
bound
xchg
sub
jle
adc
sub
mov
in
jp
test
or
test
fdivl
xorl
mov
and
sahf
in
test
loopne
leave
xor
or
test
imul
out
daa
mov
cmp
add
adc
xchg
ljmp
clc
ret
pop
pop
popa
push
push
stos
adc
test
mov
out
iret
pop
cmp
inc
mov
imul
imul
add
mov
pop
sbb
xor
adc
hlt
dec
in
sbb
pop
out
sub
adc
cmp
mov
jne
in
int3
stc
cmp
push
adc
fwait
pop
mov
aas
cmp
imul
adc
adc
pop
xor
cmpsb
ss
sbb
push
ss
gs
sub
xchg
fs
out
repnz
ret
scas
mov
and
jmp
popf
pop
lret
dec
dec
add
fnsave
xchg
aam
stos
sbb
dec
add
add
mov
xchg
dec
add
inc
sbb
sbb
inc
inc
insb
mov
inc
das
inc
jno
mov
outsl
mov
sub
xchg
in
xchg
pop
sbb
adc
mov
lock
jb
mov
shrb
arpl
push
adc
cmp
cmp
test
fbld
dec
pop
push
fldcw
cmpl
out
adc
and
icebp
shl
jmp
and
adc
fstpl
sbbb
je
lods
push
xchg
add
out
ficoml
in
mov
pop
scas
inc
dec
hlt
inc
aas
mov
mov
stc
sbb
mov
xchg
adcl
test
add
pop
shrl
lahf
dec
or
std
aad
pushf
into
xor
in
hlt
xor
inc
adc
or
xor
xchg
mov
jae
dec
ds
mov
lock
inc
mov
add
push
out
inc
cmp
sbb
arpl
daa
out
or
std
mov
call
js
ret
sbb
pop
in
mov
psraw
cmpsb
jo
mov
adc
or
jp
fs
or
ljmp
sub
in
adc
filds
xchg
sub
lcall
pushf
int3
and
call
mov
inc
jge
js
movl
fiadds
xchg
push
and
mov
mov
mov
or
sub
dec
jb
pusha
mov
mov
jo
jmp
jp
sub
pusha
lret
or
shll
cmp
in
mov
xor
rolb
mov
add
out
jns
and
mov
xchg
sbb
xchg
ja
into
mov
les
icebp
test
aaa
cs
leave
dec
push
ret
fstl
aaa
xchg
dec
movsb
mov
push
jns
push
mov
jmp
pop
xor
push
xchg
jl
jge
jbe
nop
lock
cmp
in
mov
pusha
inc
aam
cwtl
push
jmp
sub
inc
inc
movsl
jo
and
pop
mov
inc
cmpsb
fprem1
or
mov
insb
lret
rorl
xorb
add
js
ret
mov
dec
cld
lret
ret
jne
ljmp
insb
repnz
cmp
stc
sub
in
xor
into
pusha
add
leave
jo
cmpsl
sbb
xchg
or
pop
jmp
rcll
adc
or
mov
ljmp
hlt
xor
add
stc
mov
pop
or
push
sub
sub
xlat
push
insl
sub
pop
rcrb
addr16
mov
out
dec
test
popf
xchg
ds
xchg
jo
cmp
cmp
jl
mov
cmp
xor
imulb
fwait
shr
add
out
mov
lock
out
ljmp
push
out
stos
scas
fldt
mov
sub
stos
dec
adc
mov
cmp
call
loop
popf
jne
std
out
mov
inc
xchg
dec
or
inc
add
xor
lahf
lods
fnstenv
insl
repz
push
loopne
faddl
fistpl
push
and
mov
sbb
mov
jmp
push
cli
les
daa
repnz
lcall
test
insl
aaa
push
adc
popf
dec
cmp
repz
outsb
stc
add
cld
sbb
movsl
xchg
lea
scas
ja
mov
lods
jle
inc
cmp
fs
jo
jl
clc
std
insb
cmp
js
dec
jl
inc
out
call
in
pop
xor
sahf
loop
mov
inc
cmc
aam
lods
jns
lahf
popf
mov
xor
fidivl
insb
mov
test
dec
lods
mov
es
jl
in
rolb
repz
inc
push
mov
sub
jge
add
stos
orb
cld
lcall
push
popa
call
inc
pop
jb
out
push
maxps
lret
cmp
push
fstpt
out
fistl
loopne
mov
adc
jg
pop
pop
push
mov
xor
lahf
sahf
scas
div
xchg
stc
jle
rorl
mov
and
pop
out
addl
jmp
movl
jne
xchg
lods
loopne
imul
mov
xor
inc
fidivs
test
xlat
adc
dec
sub
cltd
fcoms
mov
dec
sub
and
mov
cmp
jo
or
adc
test
lahf
add
jo
iret
mov
or
xor
and
dec
cli
int
and
adc
jo
xchg
addr16
in
xchg
pop
cmp
daa
out
lock
imul
inc
mov
les
pop
mov
xchg
jl
iret
lret
and
xchg
aaa
pop
cmpsb
outsb
test
jp
adc
inc
mov
push
pop
and
add
push
lods
pop
adc
inc
mov
inc
dec
test
shrb
aaa
lret
mull
xlat
lods
jbe
push
pop
cmpsb
cmp
fsubl
dec
cld
adc
push
xchg
std
je
addr16
aaa
cltd
mov
not
and
sahf
xchg
cltd
sbb
pop
mov
adc
repnz
fld1
xor
lock
pop
lds
int
pop
enter
mov
push
cltd
cmp
mov
xchg
add
fcomi
test
and
xor
jge
dec
dec
inc
scas
dec
cli
fwait
mov
rorb
jne
pop
movsb
add
pop
and
dec
in
hlt
jmp
dec
jle
push
add
flds
sub
mov
sbb
pop
lret
es
sub
ja
rcll
jbe
jbe
ja
fistps
call
add
jge
xchg
cmpsl
icebp
mov
xchg
out
adc
lahf
arpl
mov
mov
sbb
daa
jp
lods
stc
jno
nop
sbb
mov
inc
pop
movsb
xchg
lods
push
fdivrs
test
jecxz
popf
cmpb
sar
and
stos
orl
mov
rcrl
push
outsl
ret
aam
lret
ss
mov
xchg
stos
mov
scas
rcl
lock
push
ficoms
pusha
cs
fstpl
sbb
lods
sbb
scas
cld
shl
loop
shrb
cmp
imul
in
insb
and
push
dec
push
xor
cld
push
mov
cmp
add
adc
push
fwait
cmp
add
and
movsl
outsb
idivb
dec
dec
xor
xchg
aad
in
inc
outsb
cli
insl
insl
push
cs
push
xor
push
aas
cmp
push
mov
outsb
popa
into
jg
dec
popf
ss
dec
inc
les
pop
sbb
push
test
and
mov
ja
fsubl
dec
adcb
sahf
aad
mov
repnz
aad
mov
jmp
mov
stos
push
sbb
in
or
inc
adc
cwtl
sbb
pushf
xlat
icebp
lret
ljmp
adc
jg
dec
pop
bnd
adc
ret
pusha
adcb
in
pusha
dec
call
mov
jl
xor
add
repz
sti
xchg
xchg
mov
pop
xchg
pop
aaa
mov
imul
loopne
out
jl
sbb
imul
jno
cs
inc
rcrl
add
xchg
lahf
adc
loopne
subb
jmp
dec
aam
push
cmc
and
mov
pop
shr
enter
pop
outsl
push
push
popf
or
xorb
mov
push
xchg
lock
les
loopne
insb
out
loope
mov
adc
mov
mov
jb
ret
xor
and
jb
shrl
cmpb
out
scas
inc
add
pop
xor
arpl
adc
lret
jne
cmp
jl
imul
pop
and
outsl
aaa
test
jae
push
pop
in
cmp
mov
xor
xchg
xor
sub
jecxz
push
add
sbb
jns
jnp
xor
out
xlat
mov
inc
fldenv
inc
push
cmpb
mov
pop
pop
daa
dec
jmp
mov
sbb
scas
popa
push
cmp
movsb
int3
popa
jp
pusha
enter
scas
sahf
mov
jnp
and
iret
loopne
adc
in
mov
push
mov
loop
cmp
mov
jo
out
xor
or
sub
mov
xor
imulb
inc
mov
mov
mov
mov
xchg
enter
sbb
dec
ss
mov
inc
mov
mov
icebp
adc
ds
push
xchg
mov
test
popf
lahf
dec
insb
ret
aaa
sub
pop
jb
adcl
add
and
cmp
lahf
sub
mov
frstor
jge
xor
jg
push
in
dec
lret
das
sbb
aas
outsb
movsb
push
repnz
and
iret
adc
xchg
push
push
test
lahf
in
and
dec
aam
xor
call
mov
test
sub
outsl
pop
cmp
mov
leave
sarl
inc
stos
ret
xor
adc
add
sbb
sbb
mov
and
outsb
mov
adcb
aaa
arpl
dec
loopne
push
cmp
std
cmp
and
pop
sbb
and
cmp
inc
cltd
xorb
rol
adc
sbb
js
mov
mov
xchg
pop
jbe
mov
cltd
mov
xor
sahf
repnz
aad
cltd
popf
das
mov
lcall
or
cmp
in
int3
push
or
cmp
mov
sti
or
adc
cmp
mov
fisttpll
rorl
out
xor
xor
xchg
fbld
sub
shlb
fnsave
dec
dec
lods
jl
jns
movsl
or
rcl
call
outsb
jo
lds
xor
mov
push
bound
movb
dec
xorb
cmpsl
shrl
stos
xor
jae
nop
fbstp
push
pop
xor
xchg
es
add
jle
lret
jno
bound
mov
lods
push
ja
dec
dec
inc
ljmp
xchg
or
loop
pop
sub
imul
mov
pop
mov
fcoms
fs
ror
pop
out
stos
add
in
xor
in
enter
pop
lret
xorb
xchg
cmp
sbb
stos
outsb
xchg
cmpsb
sub
out
add
sbb
out
out
xchg
and
sbb
xor
jbe
push
lcall
mov
push
outsl
jmp
clc
lods
and
adc
das
sbb
jge
sbb
add
loop
popf
testb
adc
push
sarl
lea
mov
add
into
jmp
addr16
std
adc
es
cld
in
inc
addr16
loop
pop
in
inc
insl
xchg
sbb
dec
call
xor
pusha
mov
sbbb
ja
in
jmp
or
rorl
mov
lods
das
mov
mov
mov
mov
and
loopne
xlat
in
lcall
subl
xchg
jle
sti
and
fadds
insl
cmp
inc
push
mov
jle
dec
add
xchg
je
arpl
mov
sbb
and
aam
mov
mov
or
xchg
push
sub
xchg
scas
ljmp
fldenv
call
movsb
ds
xor
jnp
iret
gs
std
cld
cmp
call
xor
jge
pop
ret
in
into
mov
aad
sbb
xchg
mov
loopne
mov
loop
sbb
jp
cmp
ret
jns
in
int
testl
filds
adc
pop
popa
inc
add
cmp
lods
push
ds
icebp
sbb
jecxz
xor
xor
stos
mov
xchg
push
cli
push
fldenv
push
and
enter
dec
jmp
in
cli
js
jnp
dec
dec
cmc
in
xchg
adc
clc
enter
test
pop
aam
shlb
or
out
and
sbb
mov
pop
lods
cwtl
out
divl
mov
cmpsl
mov
xchg
push
pop
sbb
xchg
push
ret
daa
mov
jl
bound
pusha
ljmp
int3
mov
push
mov
jo
or
mov
sub
ss
call
push
xacquire
jl
in
xor
inc
dec
mov
jg
inc
pop
jecxz
test
sahf
fcomps
sbb
and
fdivs
out
stos
ret
cmp
adc
fisttpll
data16
pop
dec
push
jmp
pop
dec
dec
mov
push
loope
fwait
imul
sbb
movb
adc
pop
daa
subl
jnp
jae
pop
daa
mov
push
pop
jne
sub
sti
mov
add
cmp
pop
sbb
xor
pop
adc
test
add
mov
rcll
jo
mov
push
or
or
ret
adc
jo
aad
xchg
dec
outsb
cmpsb
dec
scas
ficomps
lods
cmpsb
mov
mov
leave
xor
jg
imul
xchg
into
fists
sti
das
sbb
popa
fwait
add
sahf
fnstenv
pop
xchg
iret
int
mov
ror
inc
movsl
jae
loopne
xchg
pop
gs
call
sub
jbe
adc
push
divb
insb
in
jo
test
ss
push
mov
sbb
insl
adc
lcall
inc
mov
jp
lret
loop
inc
movsl
and
faddl
dec
fildl
adc
test
jmp
subb
dec
jp
xchg
fdiv
in
fstl
mov
test
dec
jg
mov
test
mov
sbb
shrb
insl
mov
xchg
adc
aam
test
ror
xorb
dec
adc
comiss
shl
jge
mov
fbstp
xor
adc
fldl
out
loop
sti
xor
and
push
inc
jb
shl
xor
mov
mov
scas
stos
xchg
dec
fmull
lock
movsb
xchg
push
xchg
dec
inc
lds
dec
pop
and
add
sti
and
dec
scas
ret
imul
xchg
movsl
or
ret
mov
adc
loope
xchg
ljmp
aam
pop
aad
es
in
jl
pushf
jg
jge
pop
nop
xchg
aas
adc
sbb
fwait
sbb
dec
cli
lcall
pop
sub
aaa
insb
sbb
push
cs
dec
int3
int
dec
or
call
sbb
xchg
lock
fwait
mov
inc
xchg
dec
loop
dec
push
cmp
or
das
push
and
push
loopne
or
in
f2xm1
jae
lods
inc
ja
mov
enter
push
and
int3
stos
rcr
xor
adc
sbb
xor
sbb
gs
pop
or
push
call
std
push
and
mov
mov
orl
into
movsl
je
pop
sub
adc
sbb
mov
mov
mov
cmp
in
jns
xchg
addb
aad
scas
jnp
movsl
push
add
push
ss
dec
mov
scas
outsl
push
cmc
push
lahf
and
rcrl
sub
inc
out
pop
inc
fwait
xchg
gs
data16
out
mov
in
dec
pop
sbb
xchg
jge
jne
sub
dec
adc
mov
push
neg
sub
add
orb
ret
cs
pop
mov
fcmovnu
jecxz
add
lahf
push
cmpsl
add
andl
data16
inc
dec
jmp
movsb
ss
mov
adc
mov
pushf
aam
xor
cmp
dec
fs
mov
xor
cmp
dec
dec
lds
pushf
adc
or
mov
stc
sub
cmp
imul
add
lret
fcoms
call
out
and
ss
xlat
les
inc
ljmp
pop
jp
jae
pop
sahf
cs
pusha
or
popf
push
or
out
stc
loope
inc
push
dec
out
fld
mov
scas
outsl
xchg
push
pop
pop
pusha
loop
shlb
sub
mov
ss
inc
mov
jns
xchg
call
je
shlb
xchg
loope
es
mov
ret
sub
scas
jmp
in
cmp
je
cmc
imul
cmp
iret
test
inc
in
cmp
es
cmpsb
dec
icebp
sub
mov
aas
adc
cli
nop
test
popf
xchg
xor
pop
add
mov
pop
pusha
pop
arpl
jmp
or
xor
jmp
push
cld
mov
fwait
movsl
and
pusha
adc
sbb
cmp
addl
fsts
stos
addr16
mov
cwtl
push
jecxz
adcb
push
les
add
repnz
xorb
dec
loopne
test
andl
idiv
adc
int
repz
mov
mov
sbb
ss
sbb
dec
cmp
sar
ret
sbb
mov
adc
mov
clc
in
pop
sahf
out
jb
fsubrs
pop
lods
lods
and
cmp
push
xchg
jbe
ljmp
mov
push
xchg
les
dec
jp
inc
cmp
test
pop
or
jmp
lea
sahf
pop
mov
rclb
fimull
dec
lgs
repnz
cmpsl
jae
ljmp
test
adcl
jne
inc
jbe
dec
push
ds
push
fistpll
adc
dec
movsb
pusha
inc
cmp
xchg
adc
ljmp
and
out
inc
push
mov
mov
in
in
fcmovu
push
jecxz
jl
dec
call
notl
leave
mov
aad
dec
sbb
xor
mov
sbb
lret
inc
dec
cli
mov
push
pop
fidivl
es
sbb
mov
insl
jmp
outsb
push
push
ror
xchg
xchg
push
out
imul
push
mov
cmp
jns
or
push
std
jle
and
mov
jno
mov
sbb
cltd
in
xlat
insb
cmp
jl
xchg
insb
add
fnstcw
in
mov
lock
scas
repnz
sbb
stc
push
into
in
cmp
adc
or
xchg
jno
sbb
mov
mov
jbe
ret
frstor
test
adc
jae
add
rcr
bound
cwtl
push
or
ljmp
lret
outsl
ja
sub
mov
sub
fadd
jecxz
lahf
incb
pop
xor
or
lock
sub
mov
push
xchg
cmpsl
mov
jge
jno
sub
dec
adc
xlat
lahf
loope
aaa
jp
mov
sbb
insl
inc
lret
es
outsl
and
divb
or
jg
lds
cli
lcall
arpl
imul
test
push
std
cli
cmovns
mov
adc
jb
cmp
pop
inc
mov
out
iret
mov
insb
mov
loope
ss
pusha
mov
push
cmpsl
inc
dec
ss
mov
and
push
ja
mov
enter
push
add
jbe
adc
inc
push
fs
std
dec
push
sub
andb
fnstsw
xorb
mov
mov
fdivrl
push
or
add
pop
xor
mov
sub
inc
or
ja
dec
orl
and
rcll
sub
stos
jno
lock
pop
gs
adc
ds
jle
pusha
stos
popl
and
inc
jbe
push
fnstenv
daa
aad
mov
sahf
mov
loopne
dec
mov
cld
sbb
rcl
insl
addr16
fcomp
push
pop
test
or
lds
aad
test
das
lods
movsl
jge
dec
mov
and
xor
mov
jle
and
cmp
movsl
movsl
cli
xchg
mov
movsl
adc
sub
add
pop
adc
mov
mov
out
pop
xchg
outsl
fists
shrl
mov
icebp
adc
cmc
rorl
mov
pop
xor
push
cmp
jne
and
mov
sub
cmpsl
xor
pop
adc
push
mov
fcmovnbe
mov
es
dec
fldt
push
aad
adc
xchg
jle
imul
jl
xchg
insl
xchg
mov
test
sahf
mov
mov
loope
mov
jmp
mov
testl
loopne
add
negl
adc
loope
push
xchg
data16
or
dec
and
mov
adc
lcall
jmp
or
xor
mov
lods
fidivrs
inc
mov
or
dec
jns
and
fcmove
jecxz
lock
repnz
lidtl
rclb
xor
xor
sbb
xor
push
popf
rorl
xor
cmpsl
ficompl
repnz
shl
or
insb
xor
push
and
cwtl
jecxz
jns
daa
pop
lcall
clc
mov
add
filds
je
xchg
sbb
int3
lahf
mov
loop
sbb
out
cmp
add
stos
das
sahf
pop
xor
xchg
bound
repz
xchg
fisubs
aaa
sbb
fnstcw
or
sbb
ret
xchg
xor
mulb
aas
aam
push
pushf
outsl
cmp
sbb
imul
into
sbb
ljmp
clc
add
pop
pop
xchg
xlat
outsl
enter
lds
negl
mov
out
mov
movswl
jmp
pop
xchg
dec
adc
cld
fadd
shr
jb
mov
cs
jle
inc
inc
es
int3
jecxz
cmp
jno
inc
subl
inc
mov
fidivrl
or
shrl
lret
rolb
jmp
mov
std
mov
js
push
outsb
arpl
mov
sub
and
add
and
xor
lret
pop
sbb
daa
xchg
dec
dec
fcmovu
sti
sbb
data16
pushf
dec
mov
jl
adc
aam
loop
out
lods
clc
mov
and
bound
or
lods
cmpsb
cld
cli
cld
fcmove
sub
sti
pop
mov
and
call
loope
xchg
xchg
lret
sbb
ds
pop
out
mov
mov
adc
mov
mov
and
cld
jge
cmp
sub
sbb
mov
sbb
or
cwtl
mull
push
fstl
lahf
mov
mov
fcoml
movsb
adc
inc
jo
test
aad
dec
push
scas
ss
pop
testl
push
inc
out
or
cmp
daa
mov
roll
rcrb
dec
xor
test
aad
add
mov
incb
ljmp
or
shl
xor
pop
fcoml
pusha
jns
test
mov
faddl
or
out
cmpb
sahf
cmp
rolb
xchg
jge
adc
pop
mov
xor
mov
xchg
iret
in
push
data16
stos
insl
bound
mov
jo
mov
mov
inc
test
add
aad
xor
add
push
jle
fiaddl
cli
mov
je
mov
pop
xorl
sbb
jne
pushf
mov
inc
pop
mov
cmc
xchg
lea
sahf
inc
dec
pop
or
jl
icebp
xor
aaa
movl
clc
out
sbb
fstpl
sbb
pop
push
data16
pusha
sti
cmp
push
xor
shr
aaa
pop
mull
pop
inc
sbb
aaa
cmpsl
lret
lods
jg
cmp
inc
pop
scas
adc
cltd
in
jo
lea
sub
push
lcall
inc
mov
fidivrl
and
test
push
jl
jbe
je
daa
and
jns
rcrl
in
mov
ss
pop
mov
pop
sbb
sub
jb
and
aad
jg
push
into
aas
sub
jbe
fldcw
cmc
in
mov
cmp
pop
adc
add
dec
sahf
mov
sbb
insl
ljmp
andl
sbb
in
insl
cmp
jnp,pt
in
mov
mov
nop
cmpsl
push
cmp
lock
test
fisubs
leave
and
inc
cmp
xchg
aas
shlb
cltd
lds
pop
lds
imul
arpl
shlb
push
push
lahf
and
adc
push
sub
inc
stos
out
ljmp
inc
xchg
lea
jns
sub
sbb
call
out
dec
mov
cwtl
mov
notb
jo
or
fcmovbe
je
insl
rolb
loopne
je
insb
cmc
sub
mov
es
xor
loope
push
mov
adc
aaa
fadds
repz
addr16
sub
movsl
popf
das
pop
imul
adc
lret
outsl
ljmp
jge
loopne
lcall
ret
hlt
dec
adc
lds
push
or
insb
lret
rcrl
ljmp
cmp
das
jmp
mov
lret
es
mov
push
std
inc
call
sub
repz
call
sub
scas
cmp
pop
ss
mov
mov
inc
imul
or
int
dec
scas
sarl
add
or
das
cmpsb
xorb
sahf
jecxz
addr16
ja
or
xor
cmp
enter
xchg
fisubl
movsl
jno
sbb
cmp
call
xor
push
in
mov
inc
je
pop
sbb
roll
jl
jne
and
fidivs
loopne
or
rcr
xchg
ds
dec
lea
ja
int3
jne
imul
icebp
rcl
adc
out
outsb
xor
jmp
arpl
das
cmp
mov
inc
dec
push
xchg
aaa
cmp
sbb
mov
in
pop
movsb
mov
add
int3
cld
nop
xor
jmp
lock
fbld
inc
xor
mov
xchg
std
icebp
insl
sarb
xchg
push
lret
xor
cmpsl
mov
adc
shrl
pop
lcall
cmp
sbb
mov
xchg
movsl
ljmp
jo
std
rcrl
lahf
stc
call
shrb
bound
lcall
jle
and
in
jo
xlat
push
pop
pop
mov
mov
cmp
pushf
cmpsl
in
mov
push
mov
push
ds
or
out
inc
or
out
xchg
inc
xchg
mov
mov
and
xchg
iret
int
rcrb
in
mov
mov
ds
insl
scas
mov
nop
mov
lcall
push
add
into
add
scas
nop
fndisi(8087
xchg
pop
jle
loopne
aam
xor
mov
cltd
repnz
hlt
movsl
imul
rorl
inc
pop
add
add
jecxz
xor
xor
in
aaa
outsb
or
movsl
test
in
int
jl
add
mov
ljmp
lret
push
cmpsb
jp
pop
fdivs
mov
jle
sub
mov
data16
rcrl
insl
and
add
arpl
rcr
pop
lds
insl
sahf
sbbb
dec
push
test
lahf
push
imul
loop
cli
imul
aas
movb
leave
cmp
inc
cmp
in
popf
pandn
jmp
cmp
insb
lret
mov
cmpsw
sbb
lret
pop
scas
and
cli
test
pop
fcomi
movsb
dec
push
repz
mov
mov
cmpsb
mov
subb
cmp
xchg
lcall
icebp
xlat
ljmp
ljmp
mov
jne
cltd
inc
lea
fiaddl
sahf
pop
loop
xor
int
repz
fsubrl
or
fidivs
psrld
push
xchg
and
mov
lea
sub
pop
mov
dec
jns
in
cmp
dec
test
sbb
sbb
cmp
loop
mov
or
scas
divb
dec
adc
leave
jecxz
movsb
jae
outsl
xchg
jmp
arpl
inc
pop
sbb
mov
call
cs
mov
dec
hlt
xchg
xchg
push
jnp
xchg
mov
lcall
mov
or
rcl
xor
jae
mov
loopne
xchg
bound
jge
mov
mov
pop
pop
stos
std
jae
faddp
lahf
aaa
and
cwtl
or
or
daa
imul
cltd
sbb
xchg
jge
mov
movsb
dec
and
orl
cmc
mov
loope
sbb
inc
lods
aas
mov
mov
lock
jbe
bound
out
pusha
dec
sahf
add
xchg
push
int3
cmp
lds
or
ljmp
mov
mov
lock
push
mov
mov
cmp
fs
stos
mov
repnz
jl
lock
fldz
mov
jnp
xchg
pop
inc
push
xchg
leave
fcmovb
cmpsl
add
adc
pop
xor
js
fmull
jg
sbb
inc
xor
out
adc
bound
pop
dec
jnp
mov
ljmp
insb
mov
dec
or
sbb
lods
jo
int3
sub
xchg
int3
push
fdivrs
mov
push
jg
js
out
push
push
leave
bound
inc
xchg
cmp
pushf
or
es
mov
mov
pop
scas
add
pop
adc
mov
enter
jecxz
pop
cmovno
and
stos
fadds
ret
add
pop
adc
stc
in
fs
xchg
cmp
and
and
movsb
in
outsl
ss
cmp
daa
popa
mov
sbb
std
std
and
push
jo
call
imul
jle
jl
mov
shl
testl
ljmp
mov
shll
mov
test
add
out
and
js
pop
dec
aaa
dec
fsubrs
ret
cmp
loop
popf
xor
jb
inc
insl
jbe
ljmp
ret
inc
push
push
pop
push
mov
sbb
enter
lcall
mov
jae
ja
mov
add
xchg
dec
inc
repnz
insl
push
cmpsb
ljmp
adc
rcl
jnp
insb
mov
xchg
sbb
test
xchg
iret
xorb
sbb
arpl
enter
jp
fs
dec
push
xchg
es
lea
fidivs
mov
gs
mov
inc
testb
adc
mov
fidivl
mov
nopl
pusha
prefetch
imul
loop
cs
fs
fistpl
mov
enter
cwtl
sbb
iret
stos
aam
addr16
fistl
loop
adc
push
xchg
inc
add
lods
and
lds
or
outsb
rclb
imulb
sub
cmp
sti
test
subl
sub
fwait
and
sub
out
popa
sub
push
dec
clc
cli
sarb
inc
sarl
pop
fdivrl
iret
imul
fwait
add
popf
jl,pt
movsb
cmp
mov
cmp
mov
shrl
scas
add
sub
rolb
popa
mov
fmul
nop
mov
hlt
and
jge
lods
and
or
clc
imul
cmp
sbb
lds
add
outsb
sbb
addw
lcall
add
testb
adc
gs
ja
mov
lods
shr
push
mov
popl
rclb
dec
pop
insb
mov
pop
pop
inc
mov
dec
cmc
jnp
sub
mov
arpl
packssdw
and
pop
aas
adc
hlt
scas
es
in
inc
neg
fwait
cmp
clc
js
fwait
dec
mov
cli
into
jmp
cli
sbbl
xor
test
ja
jp
rcr
cmp
sarb
lds
les
mov
test
fwait
and
out
mov
lahf
shlb
or
js
stos
into
and
mov
mov
subb
dec
add
mov
push
and
mov
lock
adc
fidivl
jle
push
sub
mov
jbe
mov
mov
fprem1
pop
mov
imulb
ss
add
loop
xor
mov
jno
or
xchg
mov
mov
cmpsb
pushf
fistpl
stos
pop
adc
cmp
sub
sbb
xor
pop
push
arpl
pop
or
insb
and
adc
cmc
scas
gs
ret
xchg
jb
shr
not
lds
mov
jno
cmp
xchg
sbb
and
inc
pop
mov
int
aas
and
mov
mov
inc
xor
hlt
aaa
in
hlt
aas
data16
mov
and
cmp
bound
xchg
jmp
scas
xchg
mov
pop
jnp
and
adc
xchg
cmp
push
inc
movsb
sbb
fistps
loopne
push
dec
lods
in
mov
mov
dec
and
adcb
mov
add
insb
mov
jl
lods
clc
scas
fcmovne
lret
stos
out
test
mov
lret
scas
mov
aam
das
lods
cld
test
add
and
in
pop
lret
fs
cli
sti
add
repnz
leave
xchg
sub
bound
push
inc
jmp
repz
jnp
adc
loop
mull
arpl
pop
cld
and
mov
test
sbb
inc
scas
mov
sub
loope
pop
sbb
dec
sbb
lcall
sub
je
push
push
jle
pop
mov
dec
pop
mov
lret
xor
cmp
jbe
iret
xchg
xchg
in
out
jecxz
xor
sbb
pop
loop
dec
push
leave
adc
shrl
lret
mov
stc
xor
jbe
mov
jb
mov
mov
pop
cmp
incl
fisttps
xchg
bound
xchg
decb
push
in
and
or
pop
jl
or
jb
inc
adc
dec
push
mov
push
pop
loop
dec
fwait
xlat
shlb
cltd
add
jnp
sbb
jge
call
push
or
pop
pop
je
mov
xchg
push
or
les
dec
sbb
push
shlb
xchg
adc
inc
fisubs
mov
xchg
sbb
mov
lods
in
push
jno
aas
cld
jmp
scas
mov
mov
inc
push
inc
cmp
mov
and
mov
arpl
pop
mov
dec
fcmovnb
cmpb
mov
stc
mov
xlat
jle
lea
jg
lds
and
scas
cmc
jecxz
sbb
mov
push
rorb
dec
xor
aad
cmc
mov
mov
pop
gs
jnp,pn
mov
mov
out
test
pop
das
xchg
inc
pushf
fsubrl
cmp
mov
and
inc
push
fdivrs
jmp
dec
orl
repz
fadds
lods
jp
popa
pop
sub
jo
push
pop
push
and
outsb
outsb
adc
adc
loopne
cmp
stos
int3
pusha
das
mov
addr16
mov
ret
outsb
cmpsl
shrl
jbe
inc
mov
mov
jp
incb
sahf
mov
xor
adc
out
xchg
mov
add
jns
cmpb
adc
sbb
mov
stc
push
aaa
sbb
adc
jg
xchg
flds
mov
xlat
xchg
and
fldl
xchg
inc
cmpsb
xor
loop
popa
nop
sti
test
jo
int
mov
adc
xor
pop
aas
mov
idivl
mov
aam
inc
push
jl
mov
jle
pop
jns
xchg
adc
data16
inc
mov
dec
push
or
rclb
xor
or
clc
shr
gs
push
adc
fldl
stos
xchg
pushf
dec
loop
data16
inc
sbb
pop
int3
pop
dec
or
mov
mov
shll
add
add
mov
add
and
adcl
lahf
in
enter
fwait
jg
fadds
sub
mov
js
pop
ret
fwait
add
pop
mov
hlt
scas
dec
roll
ja
mov
je
inc
enter
iret
jmp
mov
add
add
xor
or
pushf
mov
jns
repnz
lds
add
clc
inc
cwtl
outsb
add
pop
mov
stos
mov
enter
rorl
jmp
aaa
daa
je
push
push
mov
xor
sub
pushf
inc
out
in
in
fstl
jle
jg
mov
jae
mov
outsb
dec
push
loope
mov
add
xor
xchg
out
fwait
cld
mov
inc
jns
dec
repnz
shrl
cltd
inc
pop
inc
std
adc
pop
lea
jmp
lahf
add
push
mov
lahf
adc
jnp
bound
or
das
in
es
sbbb
mov
mov
fcmovbe
mov
jns
add
mov
dec
jle
xor
mov
cwtl
mov
pushf
lret
cmpb
scas
stc
jns
pop
adc
push
jae
into
fnstcw
outsb
push
movsl
dec
push
std
mov
imulb
scas
push
in
push
flds
cmp
scas
jnp
or
rcrl
inc
mov
ja
jne
fistps
stc
cmp
test
ljmp
lods
fldl
push
jbe
movsl
ja
push
fs
push
and
or
sub
push
lahf
sub
sub
cs
fiadds
loop
iret
imul
push
xor
in
shll
mov
mov
fadds
bound
add
push
xor
inc
inc
cmp
jle
xchg
sarb
push
repz
rorb
mov
std
push
cli
mov
and
arpl
mov
pop
jge
mov
lock
push
bound
push
daa
or
loopne
cltd
jne
mov
mov
mov
in
xchg
fistps
cli
stc
mov
int
xor
fistpl
jp
ja
lret
lahf
cld
add
xor
xor
mov
cmp
inc
int3
cmp
xor
pusha
xchg
pushf
test
pop
sbb
lods
fwait
dec
push
xchg
jmp
andb
adc
arpl
mov
inc
dec
inc
add
mov
das
dec
inc
mov
ret
mov
add
repnz
xchg
repnz
iret
repz
mov
mov
jmp
lret
and
lock
movb
push
in
rcrb
into
nop
inc
enter
pop
sti
push
dec
jge
arpl
cmp
cmpsl
daa
push
pushf
lods
aas
dec
push
out
arpl
dec
adc
inc
add
insl
jo
xchg
daa
fsubr
lret
test
cmp
push
stc
in
popa
pop
and
jmp
dec
pop
and
stos
test
xor
addr16
mov
mov
in
pop
cmpsl
cld
out
stc
mov
pop
xchg
nop
mov
sti
pop
roll
or
xchg
loop
mov
fsubp
sbb
dec
sbb
jnp
xchg
adc
das
jecxz
and
xchg
push
pop
xor
rcr
mov
adc
mov
out
pusha
jo
and
lahf
cmp
cmp
inc
cmp
dec
scas
andl
enter
xor
lcall
add
xchg
mov
mov
gs
inc
or
mov
out
pop
push
mov
add
mov
or
lahf
pop
test
fldcw
and
dec
scas
mov
pop
xlat
fimuls
mov
dec
xor
xchg
dec
jl
fiadds
or
sbb
inc
xchg
sarl
push
xchg
loope
sbb
inc
inc
ja
cmpsl
or
int3
sub
aam
xchg
cmpsl
and
push
sub
cmp
cmpsb
lods
in
pop
cmp
mov
outsb
jns
not
cmpsb
outsb
fsub
sbb
or
sti
fs
ret
xchg
mov
gs
push
sub
movsl
rorb
loopne
push
bound
sub
loope
inc
push
aam
in
push
cmp
std
mov
mov
dec
push
lret
leave
adc
push
adc
pop
lds
mov
pop
testl
mov
cli
push
jg
xchg
add
xor
in
lds
and
scas
dec
sub
jne
push
adc
fistps
mov
adc
aad
shll
or
out
faddp
lods
adc
mov
mov
imul
mov
adc
loope
ficoml
mov
mov
std
sbbb
or
out
icebp
sbb
sbb
rolb
insl
les
mov
jmp
fisubrl
fimuls
in
xchg
lret
ljmp
push
lds
int
fdiv
dec
mov
inc
sbb
xchg
call
sub
je
inc
movsb
outsb
fucomip
movb
cmp
inc
sbb
dec
jo
rcrb
cmp
pop
sub
or
push
mov
movsl
cs
cmp
pop
mov
inc
sbb
out
lods
xchg
jmp
cmp
pop
rorb
mov
inc
mov
movb
gs
and
adc
jb
jns
push
fs
or
sti
outsl
inc
jmp
adc
mov
outsl
aam
pushf
mov
lods
sti
inc
push
sbb
push
cmp
cmp
xchg
push
jno
sahf
clc
fidivl
sub
dec
xchg
mov
xchg
fdivrp
push
stc
sbb
push
or
pop
push
dec
enter
inc
xchg
xor
push
nop
mov
mov
stos
loope
mov
cmp
jnp,pt
and
cltd
repnz
jl
lahf
push
mov
sub
sub
inc
dec
dec
hlt
das
jno
imul
fwait
sbb
add
outsl
xchg
movsb
jp
xchg
inc
pop
daa
mov
call
xor
xchg
mov
or
jne
mov
adc
es
jge
stc
lcall
sbb
adc
in
pop
and
and
out
dec
shrl
mov
loope
push
pushf
xor
and
test
std
jns
push
call
jns
xlat
popa
xor
xor
sbb
xchg
scas
cs
bound
les
push
push
and
jo
xchg
fidivl
ret
sahf
adc
inc
dec
push
lret
cmp
sbbb
rolb
inc
sbbb
cld
xor
cmp
or
jp
out
jle
mov
push
dec
insb
lods
dec
into
cmp
mov
insl
cmc
add
xchg
jno
out
sarl
bnd
jae
cmp
shlb
pop
mov
adcl
ja
dec
imul
bound
mov
xor
adc
aaa
imul
jnp
and
xchg
lds
mov
pusha
jmp
paddusw
call
pop
data16
fcomp
mov
add
movsb
cs
push
sti
pop
adc
xorl
jl
ja
mov
in
mov
push
cmpl
dec
loope
stc
mov
je
int
ds
movsb
inc
mov
inc
push
test
and
cmp
xchg
das
popf
cld
es
cld
xor
mov
mov
fsubrp
lock
leave
sbb
sbb
mov
mov
ljmp
and
mov
xor
clc
lock
int
imul
in
jge
loop
ljmp
cmpsb
test
cmpsl
adc
or
out
leave
and
cwtl
mov
int
xor
dec
lcallw
roll
lret
sbb
lahf
cmp
cmp
xor
call
inc
rcrb
repnz
aad
cmc
dec
mov
lahf
xchg
icebp
jmp
mov
aad
xor
xchg
in
dec
sahf
fcompl
loope
imul
ss
sub
push
shlb
mov
inc
mov
xor
iret
repz
addr16
ret
sbb
es
mov
imulb
sbb
dec
fsubr
lods
jne
lcall
dec
loopne
hlt
fdivl
mov
aaa
lods
sbb
fisubl
adc
pop
ljmp
sahf
out
mov
xchg
push
cs
popa
dec
inc
sarl
xor
xchg
mov
movsl
push
push
mov
rcl
jecxz
ret
jg
push
rcrl
and
aas
dec
jmp
push
mov
xor
movsb
jecxz
adcl
mov
test
pand
pushf
int3
adc
sbbb
pushf
pop
lea
out
xor
xchg
shll
int3
fs
popa
and
sarb
pushf
inc
pop
and
jp
and
push
fxch
jb
add
repz
fcomps
cs
loope
sbb
aas
and
out
mov
or
fcomps
mov
cmp
mov
es
pushf
stos
xor
adc
sub
in
mov
mov
push
test
mov
cmpb
lahf
movsb
mov
pop
inc
fmull
test
rorl
mov
nop
jmp
daa
pop
lock
nop
lret
mov
leave
cmpsl
jge
fcompl
lret
aad
std
xor
jns
and
cltd
cli
imul
ss
sub
daa
pop
outsb
cwtl
lcall
dec
frstor
in
adc
mov
rcr
inc
cmpsb
sbb
or
leave
xchg
loope
movsl
sub
and
or
mov
xchg
xor
push
and
fs
xor
pop
subl
int3
mov
test
add
mov
jge
mov
loopne
mov
dec
pop
fimull
mov
pop
movsb
lds
cld
xchg
or
movsb
adc
ret
pop
or
or
cmpsl
mov
insb
pminsw
ret
push
cmp
outsl
pushf
sbb
sub
test
cltd
jmp
push
movsb
data16
sub
mov
fs
popf
loop
push
pushf
jbe
hlt
push
cs
ss
aas
scas
or
pushf
sarb
in
add
outsb
and
bound
es
daa
mov
xchg
inc
mov
mov
lret
iret
in
xlat
push
fidivrl
xor
adcb
in
shld
mov
stos
jle
movsl
ljmp
sbb
mov
dec
sub
push
mov
lods
mov
cmp
mov
xchg
pop
aam
lods
out
cltd
popf
mov
fwait
jmp
pop
jae
btc
movsb
dec
dec
psraw
xchg
xlat
jnp
aam
testb
lock
shr
in
mov
add
mov
pop
outsl
mov
pop
xchg
lahf
sbb
pop
inc
push
mov
js
xorl
push
xchg
sbb
xchg
je
stos
sbb
adc
xchg
outsb
lods
jmp
mov
jo
or
inc
faddl
outsb
mov
es
imul
cmp
dec
ds
pop
stc
std
lahf
xchg
xchg
lods
sub
outsb
orb
push
adc
int
outsl
mov
mov
jae
fsubs
imul
sbb
xor
xchg
cmp
mov
movsl
cwtl
dec
dec
cmpl
ss
test
push
mov
clc
sti
mov
ljmp
xchg
xchg
lcall
sbb
inc
inc
inc
push
xor
mov
int3
xchg
jg
push
push
mov
add
pop
and
std
push
jae
sti
push
cld
lock
in
mov
out
sbb
push
mov
jno
jmp
into
mov
inc
aam
outsb
les
jle
int
mov
stc
mov
fldcw
add
and
lods
or
int3
sub
out
adc
xchg
shl
or
fadds
in
lret
scas
daa
jg
mov
addl
out
adc
or
lea
jge
lods
je
pop
xorb
xchg
test
stos
test
ja
adcb
push
mov
gs
shrl
cmp
arpl
lods
mov
dec
push
and
cmp
mov
ljmp
cltd
cmp
jbe
aad
stos
mov
insl
push
outsl
mov
hlt
inc
cli
inc
test
dec
dec
arpl
mov
mov
pop
jo
mov
lahf
in
mov
int3
sbb
cmpsl
outsl
sub
xchg
movsl
and
addr16
loopne
mov
mov
sub
fists
fcmovbe
je
dec
or
xchg
imul
cltd
cmp
pushf
or
pop
push
and
fistl
std
enter
push
and
ds
add
mov
lcall
push
inc
aaa
ja
lods
hlt
arpl
sub
js
hlt
dec
push
push
xor
adc
xorl
and
shl
ror
mov
pop
mov
ret
xlat
cmc
cmp
xor
or
pop
mov
dec
aas
xlat
inc
pop
adc
ffree
nop
stos
push
cltd
inc
in
push
pop
cmp
les
mov
dec
ljmp
add
cmp
fsubs
inc
into
mov
call
dec
pop
push
insb
lcall
pop
mov
rcl
cmp
nop
loope
out
pop
push
jno
clc
dec
repz
push
popf
loope
pop
sub
or
out
add
prefetch
mov
mov
push
daa
jo
or
aaa
std
mov
in
lret
pop
sbbl
sub
mov
movsl
push
daa
sub
mov
mov
jle
and
mov
outsb
xor
das
loopne
xor
mov
ret
jle
addr16
insb
jbe
in
out
jb
pop
xor
cmp
outsb
ss
mov
mov
mov
adc
mov
lcall
xor
and
inc
pop
decl
mov
loopne
add
das
leave
push
mov
jbe
lock
fwait
sti
fstps
imul
loope
jg
std
push
adc
insb
dec
mulb
sahf
jb
adc
sti
lret
rcll
jnp
jb
mov
data16
jns
fnstsw
cmp
outsl
xchg
pop
in
add
pop
lcall
leave
out
inc
pop
out
and
mov
fs
mov
sbb
int3
xlat
and
lahf
mov
push
jb
in
or
fdivs
mov
cmp
add
jecxz
movsb
testb
xchg
jbe
jmp
sub
jo
inc
inc
enter
pop
es
jae
push
je
std
pop
bnd
sub
push
fstl
cld
repz
js
pop
xchg
adc
and
loopne
push
adc
mov
fnstenv
inc
imul
in
xchg
pop
fistl
dec
scas
stos
lods
pusha
dec
dec
ja
iret
cmc
or
fneni(8087
dec
sarl
jle
xchg
loop
jns
je
jl
nop
in
xor
mov
lret
movsl
das
cmp
mov
jp
outsl
xor
mov
and
testb
cmpsl
push
jnp
sbb
adc
xor
xchg
pushf
add
mov
pop
or
sahf
or
icebp
mov
loopne
bound
enter
pop
lock
scas
fsts
and
mov
out
shlb
and
adc
add
test
cltd
cmpsb
roll
sub
cs
sbb
scas
fistpl
mov
pusha
mov
inc
mov
jp
mov
push
ficompl
hlt
lea
jne
add
inc
inc
xchg
add
mov
pop
adc
lahf
and
icebp
les
sbb
scas
sub
push
push
loopne
fists
mov
sub
pusha
pop
mov
xor
fsts
js
cmp
cmp
incl
sti
push
xchg
push
xor
pop
fmuls
dec
push
xor
jg
aad
sbb
rcll
inc
out
cmp
push
push
in
ret
add
xchg
loop
adc
push
stos
sbb
jae
dec
push
push
mov
mov
leave
cmc
ds
mov
in
inc
cwtl
mov
pop
pop
sbb
mov
in
mov
push
lret
int
subb
and
lret
scas
repnz
ret
push
mov
jp
rol
inc
mov
cmpsl
adc
repz
fwait
jnp
jbe
adc
mov
mov
pop
or
loopne
fildll
lods
adc
and
nop
mov
jnp
das
dec
loop
gs
enter
pop
ja
daa
mov
rorl
inc
xchg
fcoml
mov
stos
shl
rolb
test
push
lods
pop
int
lds
jnp
jne
push
jo
fwait
outsb
jmp
repnz
mov
cld
xchg
ret
lret
movb
inc
divb
pushf
lods
mov
stc
sbb
popa
adc
mov
jbe
fwait
mov
fwait
insb
push
pop
jmp
or
pop
xchg
sbb
aam
loope
int
dec
aam
pushf
ss
cmp
add
fidivrs
pop
in
cmp
pop
cs
inc
mov
mov
push
xor
imulb
gs
pop
adc
pop
mov
mov
add
jnp
dec
lahf
pop
adc
add
add
out
xor
xor
cltd
mov
std
test
lcall
int3
fmull
stos
mov
jge
cmp
rolb
sti
cltd
enter
add
xlat
adc
jp
imul
push
cmpsb
imul
adcl
pop
in
nop
hlt
mov
es
push
or
jnp
loope
das
pop
xor
push
and
and
imul
sub
add
jo
push
cli
xor
mov
or
push
sub
test
test
cs
stc
push
xor
bound
cmp
sbb
jecxz
mov
cmp
xchg
pop
mov
xor
xorb
jmp
lahf
dec
imul
fwait
jp
jns
cmpsb
aaa
ja
into
sub
pop
subb
or
subl
push
sbb
fs
enter
mov
xor
daa
cld
in
cmp
sub
sar
lret
adc
jl
dec
sti
imul
ret
popa
test
push
cs
push
xchg
clc
or
imul
pop
cmpsb
inc
fldt
pop
jns
es
and
cltd
pop
add
cmpsb
aas
outsl
scas
dec
cld
jne
std
cmc
mov
xor
mov
mulb
sbb
mov
aas
mov
or
xchg
aam
in
fwait
pop
add
repnz
pop
sub
dec
push
push
push
xchg
cmp
and
xor
js
lods
pop
mov
enter
mov
stos
add
or
aam
and
sbb
jae
jno
pop
sbb
hlt
pop
mov
pop
sub
xlat
aam
xor
faddl
jle
test
sbb
jle
sub
mov
ja
push
imul
push
dec
mov
push
into
lahf
test
mov
call
repz
je
add
and
or
and
and
test
in
lea
mov
das
loop
pop
fildll
push
testb
add
jne
insl
fucomip
rcrb
das
sbb
mov
scas
movsb
orl
int3
insb
cli
lods
inc
and
xor
add
pop
stc
and
inc
movsl
mov
int
repnz
sub
mov
insl
adc
mov
ficompl
gs
into
enter
and
outsb
push
out
cwtl
outsb
xchg
daa
jle
enter
or
sti
dec
add
imul
ret
cmp
pop
mov
mov
push
cli
nop
xor
rcrb
sbb
mov
mov
xchg
push
js
addr16
mov
jnp
pop
mov
mov
cmp
stos
jne
cmp
jg
popf
xchg
mov
mov
loopne
mov
or
pop
test
mov
xor
push
rcll
push
sbb
mov
outsl
rol
mov
xor
mov
icebp
pop
mov
clc
cmpb
inc
jns
aaa
adc
imul
popf
xchg
mov
sti
add
gs
xor
scas
push
pushf
xchg
je
sub
add
test
mov
sbb
cmp
dec
mov
push
jecxz
mov
inc
in
mov
mov
inc
push
inc
and
pop
mov
adc
das
cmp
push
xchg
cmp
scas
xchg
sbb
jl
pop
pop
mov
mov
in
mov
pop
cmpb
jmp
xchg
and
jne
mov
movsl
cmp
gs
add
clc
xchg
lock
rol
cmp
inc
add
cmp
cmp
out
stos
or
iret
rcr
pop
adc
daa
pop
xchg
push
mov
iret
push
les
aaa
mov
popf
xor
lods
lock
out
in
mov
mov
nop
jecxz
lret
adc
push
dec
nop
out
xchg
add
and
lret
mov
cwtl
subl
dec
sti
scas
sbb
cld
pop
lret
pop
cld
cli
leave
in
arpl
xor
push
or
jmp
loop
imul
mov
addl
aad
push
xchg
mov
cld
ja
pop
aam
insb
iret
ds
in
adc
xor
test
and
push
leave
imul
xlat
xchg
adc
sub
cmp
mov
jg
call
sub
jle
pop
lea
xchg
sbb
pop
dec
xchg
ror
outsb
imul
stc
inc
cmp
sbb
lods
inc
in
int3
test
jecxz
roll
xorl
push
push
fwait
mov
out
push
adc
jbe
and
pop
outsb
xor
cld
adcl
pop
mov
clc
dec
inc
insb
jge
dec
push
les
leave
push
xchg
addb
adc
stc
mov
cmp
lcall
sub
cmp
jae
sarb
or
addr16
nop
xor
hlt
cmp
nop
test
fiaddl
cld
jb
bound
mov
cmpl
jo
fstpl
cmp
inc
lods
das
xor
dec
popa
popf
lock
add
icebp
pushf
cwtl
test
push
lock
jle
sahf
inc
test
sub
inc
sbb
icebp
ror
xchg
popf
lret
cmpsl
adc
cmpsl
adc
fdivs
repnz
inc
ret
mov
mov
push
and
dec
pop
testl
imul
addr16
add
dec
movsl
dec
mov
push
cwtl
test
or
inc
cli
sbb
mov
add
mov
pop
ds
xor
xchg
addb
adc
dec
sbb
add
in
mov
rorb
jo
or
in
sbb
shlb
fs
mov
or
adc
mov
out
jns
cmp
aas
sti
mov
ljmp
or
in
adc
imul
sti
outsl
lcall
adc
repz
aaa
aas
or
jnp
inc
arpl
jno
jae
jmp
jae
pop
xchg
add
fsts
dec
fisttps
adc
fisttpl
fwait
in
andb
test
xchg
iret
push
shlb
sub
fildl
jp
loopne
lds
pop
or
xor
cmp
push
dec
test
sbb
and
aam
sub
outsl
iret
adc
pushf
fnstsw
in
mov
sub
and
push
push
fcompl
repz
movsb
and
xchg
shr
loope
dec
adc
xor
dec
sub
subb
fwait
and
es
gs
add
jle
or
or
mov
aas
and
cmp
test
vhsubpd
xor
hlt
mov
push
or
test
testb
xor
psadbw
mov
or
stos
xor
xchg
mov
xchg
dec
lahf
jmp
dec
add
nop
push
fnstenv
pop
add
push
jle
sarl
pop
dec
or
jbe
pop
inc
mov
insb
mov
xchg
bound
js
xor
idivb
lret
movsb
dec
jnp
dec
mov
ss
jmp
popa
sub
add
inc
jnp
stc
je
inc
enter
pop
mov
mov
test
xor
ret
and
xchg
adc
decb
mov
inc
ljmp
pop
adc
jecxz
repz
movsl
shl
test
xchg
pop
jg
fcmove
and
loopne
dec
or
ljmp
div
insl
xchg
insb
mov
data16
mov
xor
repnz
mov
mov
or
outsl
out
sub
or
xchg
aad
xor
ja
hlt
push
lret
test
out
push
sub
arpl
stos
imul
aas
int3
push
mov
in
mov
repz
shr
std
stos
jmp
icebp
aad
adc
lret
jle
scas
jb
call
xor
mov
ds
lds
pop
cmp
les
or
sub
por
sbb
sahf
out
loopne
or
mov
aas
inc
dec
shrl
xor
dec
popa
inc
and
popa
add
sbb
and
outsl
fwait
lret
jge
scas
jns
ja
xchg
inc
js
sahf
mov
adc
mov
mov
adc
lret
and
es
aad
push
mov
in
xchg
mov
repz
cmpsl
dec
cmp
push
cs
push
int3
cld
xchg
push
ljmp
stos
lods
rcll
jno
jo
inc
scas
clc
push
or
jnp
jae
in
in
and
stc
aas
mov
push
mov
lcall
into
mov
pop
dec
fdivrl
jnp
addr16
jno
pop
aas
ret
adc
cli
cmp
cltd
ljmp
xchg
fisubrl
cld
sbb
cmc
mov
pop
cmp
icebp
jmp
fsubr
sub
jb
adc
xchg
cli
fwait
mov
or
adc
popa
shll
gs
fimuls
movsb
mov
push
aam
xor
mov
sbb
out
sub
jl
pop
cmp
sub
into
jne
add
sbb
adc
xorl
lret
leave
icebp
out
enter
nop
pop
pop
cmp
adc
mov
test
ror
outsl
xor
aad
pop
nop
push
int
mov
test
sub
dec
pop
outsb
xor
mov
jl
dec
sbb
addr16
mov
adcl
aad
popf
cmp
rcrl
adc
mov
cmc
mov
sti
dec
add
dec
shr
into
pusha
sub
and
push
in
jle
out
xchg
adc
scas
or
mov
out
pop
push
and
push
push
sbb
xchg
dec
fiaddl
dec
dec
jo
enclu
cmp
add
jns
adc
ficoml
jnp
push
jge
rolb
push
lcall
int
add
mov
lcall
movsb
aas
xchg
cmp
cmpsb
lea
inc
lods
cmp
out
pop
das
mov
out
pop
stc
jmp
add
loopne
fidivrl
cmpl
outsl
ss
fwait
mov
adc
xchg
cmpsl
movsb
ret
sti
jle
in
ss
cmp
adc
xor
inc
lahf
fists
jne
sbb
repnz
and
aam
pop
in
push
add
xchg
scas
add
push
outsb
cmp
icebp
test
sub
rcrb
and
mov
imull
or
mov
addr16
sub
out
imul
mov
popf
aas
gs
iret
cmp
jmp
mov
repz
mov
mov
and
fsubrs
and
or
sub
sub
or
scas
mov
addr16
arpl
movsl
inc
cmovbe
loope
sbb
xchg
div
out
test
sahf
scas
mull
adc
mov
push
outsl
call
and
in
sahf
imul
push
cmc
jbe
lret
mov
outsb
gs
inc
shr
into
sahf
xchg
add
outsl
cmp
jne
into
cmpsl
dec
add
dec
insb
mov
or
dec
fldenv
pop
daa
repnz
and
daa
call
cmc
repz
cmc
and
inc
mov
push
and
outsb
sbb
inc
xchg
cld
inc
jmp
pop
and
pop
jnp
push
lods
push
mov
add
lret
in
sbb
test
or
adc
or
inc
out
xchg
int3
cmp
add
insb
dec
shlb
ficompl
call
stos
bound
mov
and
sbbl
push
mov
lahf
outsb
aas
adc
gs
xor
add
jl
pusha
xchg
cmp
pop
call
dec
cmpsb
das
mov
push
jae
push
push
movsb
jno
cmp
loope,pt
lods
sbb
test
or
xchg
stc
lret
jmp
movsl
out
push
push
sbb
lahf
jnp
push
pop
out
out
pop
clc
push
sub
push
mov
js
or
ret
pop
ret
leave
movb
ret
out
stos
or
pop
test
inc
push
dec
cmp
scas
xor
cmp
mov
ds
mov
mov
inc
cwtl
push
cmc
mov
dec
ret
lea
ret
ja
dec
inc
xor
jae
cmp
xor
ljmp
sahf
in
add
mov
inc
push
testl
jbe
popa
xchg
sub
std
inc
decl
subb
mov
push
mov
xor
nop
out
cmc
shlb
pop
add
sbb
ljmp
ja
adc
jbe
dec
fists
cmp
xor
jmp
fldcw
and
jmp
inc
fs
enter
push
in
mov
imul
jg
pusha
and
push
mov
jl
xor
jle
push
mov
out
xchg
xor
jbe
lds
mov
push
pop
pop
aam
push
imul
leave
jge
addb
mov
addr16
cmc
das
addl
bound
sarl
adc
imul
cld
iret
adc
outsl
sarb
push
rorb
and
push
mov
lock
mov
sbb
fnstcw
xchg
and
push
adc
xchg
and
cmp
adcl
xchg
lods
xchg
add
pusha
orl
stos
jmp
test
loop
sti
and
xor
das
addr16
in
xchg
xchg
xlat
neg
jbe
push
incl
jnp
iret
sub
pusha
xchg
pop
jnp
jbe
push
adc
insl
jae
dec
scas
adc
mov
or
arpl
shl
push
loope
xchg
dec
je
je
ret
iret
sub
mov
adc
sub
add
jl
add
xchg
and
fildll
inc
popf
cmp
icebp
add
push
mov
js
jp
out
lock
imul
mov
jmp
cwtl
cwtl
jnp
mov
cwtl
xor
out
popf
mov
in
dec
mov
sub
jp
loop
mov
test
push
insl
mov
xchg
push
dec
xchg
ret
lods
xor
mov
push
cmp
add
xchg
jmp
sti
dec
adc
popa
mov
into
jg
adc
push
sub
scas
mov
flds
das
bound
movsl
xor
pop
dec
mov
in
jp
scas
mov
mov
mov
fs
mov
sar
int
pop
dec
dec
xchg
push
mov
imul
lds
or
inc
fcompl
pcmpgtw
sub
xor
or
je
stos
xchg
shlb
push
cmp
outsb
sub
ds
add
pusha
lock
int3
shll
subb
les
mov
dec
mov
sahf
xchg
dec
jecxz
lret
flds
mov
ljmp
cld
sarb
xchg
pushf
xchg
in
mov
outsl
ja
xchg
mov
xor
out
insb
scas
push
xchg
pop
mov
shl
lea
dec
cmp
enter
mov
arpl
push
xchg
jns
cmpsl
add
roll
iret
inc
adc
inc
mov
push
movsl
fcomps
jb
lock
das
xchg
lret
xor
adc
lahf
dec
test
cmp
insb
scas
imul
adc
sub
push
scas
mov
lcall
loop
testl
test
dec
std
inc
xchg
adc
jmp
add
push
fs
push
insl
stos
fdivs
xlat
into
fsubrl
repnz
sarb
jmp
sbb
popf
xor
lea
loop
lahf
add
or
dec
ret
jecxz
divb
imulb
push
mov
sub
sub
sbb
lds
ret
jmp
xchg
andps
mov
pop
sarb
jmp
test
add
mov
or
lret
lock
sub
jl
movsl
add
frstor
out
inc
test
sbb
adc
ss
ss
fcomp
cmp
incl
inc
test
pop
push
fnstcw
inc
mov
dec
pop
sub
es
mov
inc
out
and
jns
scas
in
xchg
xor
xor
fimuls
je
ror
jb
dec
cmp
and
repz
lret
or
jno
cld
enter
mov
std
or
mov
xchg
arpl
lds
data16
pop
dec
inc
ds
dec
dec
mov
mov
into
xchg
sarb
pop
jl
dec
cmc
xchg
sbb
idivl
mov
int3
xchg
push
frstor
push
mov
jbe
loop
sbb
imul
bound
push
lods
cltd
mov
jno
jg
in
stos
inc
scas
cmp
xchg
addr16
dec
adc
adc
fbld
inc
adc
fimull
jp
jno
scas
popa
push
es
sub
jecxz
xor
xlat
mov
adc
xor
lds
lahf
test
test
dec
xchg
mov
int3
mov
xchg
pop
sti
push
mov
cmp
gs
jno
addl
mov
pusha
fidivrs
xlat
and
push
cmp
pop
jns
aad
in
jecxz
stos
repz
lcall
jne
js
lock
dec
dec
aas
jle
repnz
jle
inc
dec
test
aam
push
fwait
dec
push
ret
xadd
dec
in
xlat
hlt
lahf
orl
mov
mov
cmc
popa
mov
pop
subl
mov
stos
sbb
imul
in
jae
push
cli
outsl
out
out
mov
outsb
lret
sbb
jo
mov
inc
loopne
cli
loope
enter
mov
popa
imul
out
ret
aas
ret
ret
aam
in
inc
aad
jo
mov
nop
sbb
ficoml
ss
xchg
in
das
mov
pop
in
mov
nop
lret
add
push
mov
xchg
mov
cltd
or
sbb
push
scas
dec
call
shl
xor
xchg
movsb
push
or
mov
or
loopne
xchg
add
rolb
ljmp
out
insl
sti
cli
sahf
xor
xchg
sbb
and
ret
pop
mov
xchg
sbb
mov
loopne
mov
adc
push
pop
and
imul
and
loope
imul
out
mov
jmp
mov
jo
pop
jecxz
sub
jl
int
nop
adc
popf
mov
mov
lea
pop
or
cwtl
xor
repz
xlat
sbb
stos
popa
iret
fs
pop
daa
jge
xchg
pop
sahf
ret
mov
scas
outsl
or
sbb
int3
xor
xchg
push
cltd
outsb
jns
pop
call
and
mov
scas
cmp
je
sti
mov
and
ja
es
sbb
aas
cmpsl
pop
dec
ret
test
es
arpl
mov
enter
fsubr
aas
or
in
adc
sahf
les
or
out
xor
jne
ss
pop
les
inc
xchg
lret
jbe
std
popf
adc
cs
pop
add
cmp
cmp
pop
adc
or
xchg
jb
xchg
ret
jae
aaa
in
dec
imul
sub
cmp
mov
xchg
inc
xchg
jo
inc
or
cmp
arpl
test
cld
out
icebp
push
sub
daa
push
aaa
and
xor
inc
jnp
lret
push
mov
in
pop
xor
pop
mov
or
cmpsb
cmp
adc
fldt
inc
sarb
or
cmp
insl
jne
pop
jle
cmp
jns
dec
mov
loop
push
inc
movsl
xchg
in
hlt
xchg
andb
sbb
xor
dec
push
or
mov
cwtl
push
mov
or
int3
jae
int3
pop
mov
inc
cmp
jg
dec
push
mov
daa
aad
cmp
pop
adc
mov
mov
leave
clc
push
jp
xor
jno
mov
cwtl
out
cmpsl
add
sti
push
add
xor
mov
sarl
mov
mov
dec
xchg
dec
aad
shll
lret
in
xor
xchg
mov
test
mov
adc
mov
js
dec
rcrl
lods
shrl
clc
ret
sbb
in
ret
bndstx
movl
xchg
mov
adc
xor
sub
pop
les
les
fdivl
gs
mov
rcr
fmull
addl
push
sub
outsb
jmp
lods
pop
adc
push
and
sbb
repz
std
push
xor
pop
push
sti
ljmp
and
aas
in
mov
mov
adc
mov
scas
jno
cli
in
pop
jge
popf
test
mov
je
lods
cmp
mov
jo
jne
repnz
mov
std
icebp
popf
lret
pop
and
sbb
and
ret
aam
fidivrs
scas
insl
xor
clc
fwait
lret
add
jns
inc
mov
or
add
and
sbb
inc
mov
outsl
loopne
fwait
lds
ret
sar
jp
pop
das
insb
mov
adc
xor
es
push
lods
jns
adc
pusha
pop
das
mov
push
xor
jno
adc
jmp
test
inc
jo
in
push
jp
dec
lahf
notb
sbb
jle
push
mov
dec
nop
pop
sub
mov
not
sahf
mov
pop
lret
mov
dec
add
test
out
sub
pop
mov
mov
arpl
sbb
fnstenv
ret
cmp
add
mov
cltd
sub
call
repnz
push
fsubrs
or
jl
adc
imul
mov
mov
andb
lock
roll
mov
adc
push
pop
adc
mov
dec
repnz
into
stos
dec
mov
ror
push
add
movsb
fs
popa
aad
xchg
imul
jecxz
push
je
fiadds
add
pop
iret
or
cli
std
scas
fdivl
popa
mov
aaa
jg
ds
shlb
inc
xchg
aam
fs
push
cmp
ret
fisubrs
icebp
repnz
dec
inc
adc
mov
or
out
or
notl
or
daa
inc
cmpsb
outsl
sub
mov
daa
cmpsb
sub
sbb
addr16
sub
xchg
dec
test
jne
xchg
int3
sarl
les
mov
lahf
push
hlt
xor
fadd
lds
repz
aaa
loopne
pusha
mov
pop
lret
dec
hlt
lcall
push
lea
push
loop
gs
mov
jne
cmp
sub
sti
std
sub
dec
xor
add
aas
pop
sbb
jae
jmp
jmp
dec
out
cs
jecxz
or
popa
ds
mov
repz
std
jg
stos
xor
xchg
or
pushf
sahf
fldcw
cli
push
rcll
scas
pop
dec
negl
out
outsl
push
sarb
push
push
jl
test
xchg
movsb
rol
ret
mov
nop
rcl
das
mov
shlb
mov
out
sbb
ljmp
cmp
mov
cmp
push
jo
lahf
test
repz
fldcw
pop
dec
sbb
or
jne
shl
mov
sbb
dec
cwtl
cmp
dec
push
pop
rcrl
xchg
xchg
dec
ret
mov
imul
cltd
xchg
int
mov
pop
imul
dec
gs
jbe
mov
pop
cmp
or
in
and
mov
cld
es
aas
sbb
cld
outsl
clc
cmpl
jle
cmpsb
add
sub
arpl
jmp
dec
in
lods
movsb
bound
pop
push
cmpsl
pushl
dec
jo
push
mov
addr16
pop
insb
sub
in
xor
or
or
out
data16
jecxz
sub
sub
adcb
ljmp
push
fmuls
orb
lock
cmp
loop
pushf
inc
add
stc
or
cmp
fstl
scas
test
dec
rcrb
pop
cli
mov
lcall
out
xchg
xor
jecxz
in
js
fld
inc
loop
jo
xor
jge
push
jg
callw
movsl
sub
inc
test
arpl
sbb
mov
dec
jbe
sub
xlat
and
sbb
loopne
push
cmp
scas
cmpsb
mov
push
and
lods
cmpsl
into
loope
in
leave
filds
or
stos
out
lret
popf
push
jge
jb
mov
pop
or
dec
bound
and
add
daa
iret
aaa
movsb
gs
mov
pop
dec
bound
jns
aam
xchg
mov
push
jae
xor
in
jbe
jp
and
jle
add
adc
das
push
add
out
and
mov
test
scas
hlt
repz
push
pop
andl
or
and
inc
sbb
xchg
cld
inc
in
pushf
push
iret
push
sarb
pop
andl
add
bound
mov
fsubr
addr16
push
push
pusha
mov
or
je
dec
lret
push
xor
repnz
mov
sarb
insb
lea
push
stos
pop
sbbb
jo
xorb
stos
test
stc
mov
lcall
inc
aas
popf
aam
mov
daa
mov
mov
sahf
decl
cmpsl
dec
dec
sub
add
gs
jno
add
popa
in
fcmovbe
loopne
mov
cld
jns
insb
rcll
lods
sahf
mov
push
test
xchg
in
inc
ds
inc
sbb
lahf
fldenv
rol
insl
sti
dec
inc
lods
mov
loope
rorb
das
shll
cs
jle
push
inc
or
jo
inc
pusha
adc
lds
and
cs
push
mov
mov
push
mov
mov
add
stos
sti
daa
push
xchg
dec
lret
jns
das
ds
and
test
jae
addl
arpl
jnp
fimuls
popf
mov
in
repnz
add
mov
mov
ljmp
pop
pop
pop
jecxz
pop
mov
clc
jo
cwtl
insb
lea
mov
jns
test
shlb
repnz
push
aas
mov
gs
mov
in
push
sub
xchg
lods
jno
cmpsb
into
rcll
mov
outsl
nop
pop
int3
lock
sub
push
cltd
mov
stc
inc
mov
imul
push
inc
and
ret
sub
rclb
adc
subb
mov
add
int
mov
notb
sbb
insl
icebp
sbb
test
push
insl
jle
mov
nop
ja
imulb
popa
mov
add
sahf
mov
ds
sti
cs
push
adc
cmc
lods
das
jge
test
xchg
add
cmpsl
adc
pop
lods
xchg
insb
loopne
xchg
pop
fstl
repnz
popa
xor
mov
repnz
sbb
push
jb
pop
arpl
aas
mov
dec
bound
xchg
pop
test
sti
jne
cltd
mov
inc
hlt
xchg
sub
add
dec
and
insb
inc
mov
push
ret
mov
enter
les
das
jecxz
pop
es
loope
jbe
leave
in
jle
dec
xor
imul
xchg
jl
clc
add
in
in
push
fs
lds
inc
mov
pop
test
push
sub
setne
push
cmp
pop
je
mov
xor
jns
gs
ret
cmpsl
pop
pop
repnz
jp
xchg
dec
fs
nop
ja
lods
cmc
pushf
sbb
outsl
lods
iret
mov
or
add
fs
test
adc
inc
sub
sbb
xchg
jge
dec
mov
pushf
adc
cltd
test
push
add
cmpsb
stos
and
ficoml
mov
xchg
adc
outsb
inc
insl
mov
insl
xor
xchg
mov
dec
mov
push
xchg
popa
xor
decl
in
in
dec
rorb
and
push
aad
das
sub
in
jae
mov
int3
rcll
sti
cmc
inc
jl
andb
pop
xchg
out
push
cmpsb
pop
fdivrl
adc
dec
cli
sub
pop
push
xchg
lea
cmp
out
scas
push
dec
mov
mull
push
dec
test
mov
or
mov
pop
movl
mov
mov
icebp
pushf
les
xchg
add
sub
jge
lds
xchg
lods
jmp
rep
popa
fmull
jb
mov
or
inc
and
inc
xor
dec
xchg
or
in
sbb
out
cmp
cmp
mov
fistl
ss
stos
mov
pop
sbb
and
push
mov
jno
mov
scas
cmp
push
mov
aam
sbb
loop
fwait
pop
loopne
xor
add
add
xchg
inc
addl
add
sbb
cmp
cmp
enter
pop
rorb
mov
insb
insb
ficoml
aam
push
ljmp
xchg
push
dec
inc
mov
subb
pop
xor
dec
movsl
mov
enter
jmp
es
pop
xchg
mov
out
aaa
test
dec
dec
push
pop
clc
xor
test
push
fdivp
leave
rclb
add
mov
aad
or
mov
adc
mov
int
mov
adc
push
sub
insb
xor
cltd
outsb
stos
mov
or
sahf
inc
sbb
orl
sub
cs
pushf
popf
je
shlb
dec
jae
inc
nop
xchg
cmc
popa
add
test
cs
shrl
mov
inc
fs
mov
in
and
cmp
out
jp
jecxz
mov
int
push
mov
lret
xor
sar
ja
lods
jle
push
ror
push
cli
jge
pop
mov
mov
adc
mov
leave
xchg
insl
mov
xchg
subb
fisubrs
shr
es
jg
push
addb
lahf
mov
pushf
pop
or
ja
in
sbb
jne
rolb
lahf
or
add
call
and
fst
jo
stos
lds
pop
icebp
push
xlat
rcl
pop
js
dec
inc
mov
pop
or
fstpl
pop
mulb
cmp
std
adc
fwait
pop
scas
adc
push
lahf
imul
repz
jp
sbb
test
mov
js
pop
out
xchg
or
push
mov
icebp
add
push
aaa
xchg
xor
adc
add
test
or
inc
mov
push
add
cmp
rorl
cmpsl
mov
push
mov
jle
jecxz
xchg
push
out
add
inc
add
incb
cltd
inc
out
dec
mov
out
gs
push
and
cwtl
inc
movsb
addr16
js
pop
lahf
xorl
fadds
cmp
xchg
xchg
xchg
pop
or
stos
out
out
ret
addr16
and
mov
xchg
cmp
inc
subl
cwtl
mov
ljmp
inc
mov
or
sbb
leave
mov
push
mov
call
lahf
xchg
outsb
dec
dec
mov
outsl
or
lock
sti
ret
je
imulb
inc
hlt
push
cwtl
jmp
int3
or
es
jl
aaa
or
cmp
jmp
and
pop
or
js
jl
test
jle
jo
push
rol
in
test
mov
sbb
je
mov
mov
jge
jne
mov
push
add
xor
xchg
lds
imul
aas
iret
iret
jb
clc
xor
dec
and
mov
je
xor
pop
cltd
jmp
cmc
pop
push
addr16
ja
xor
rorl
dec
dec
adc
push
dec
push
fidivs
push
movsb
sub
lods
sub
sbb
inc
notl
sub
jne
into
jmp
sub
int3
les
push
mov
xchg
jge
push
out
sbb
cld
js
insl
int
xchg
or
mov
scas
mov
pusha
jo
or
not
in
push
data16
xor
push
clc
shl
pushf
jle
jecxz
xchg
stos
sarb
and
cmp
mov
push
adc
ja
imul
jle
jg
dec
sbb
pop
push
popa
out
in
mov
mov
mov
fcomi
insl
call
xchg
mov
jnp
jge
fbld
dec
mov
push
lods
adcl
ret
stos
stos
mov
pop
pop
xor
and
xor
cltd
jg
mov
xchg
jecxz
testl
add
out
mov
sbb
or
adcb
outsl
mov
mov
pop
pop
jns
sbb
push
mov
rorb
test
fs
leave
je
or
jae
dec
jns
inc
nop
jne
fsts
xchg
jae
dec
sahf
and
test
cmc
loop
loopne
sub
enter
mov
mov
fisubs
mov
mov
dec
adc
mov
xchg
lds
push
mov
sbbb
movsb
or
push
and
and
orb
sti
imulb
insl
mov
fwait
pop
mov
aas
adc
jmp
pop
call
outsb
jo
shll
hlt
fisttps
test
or
outsb
fwait
cs
rclb
xchg
aam
push
jae
fistl
and
lock
mov
mov
add
jle
sub
xor
add
out
sub
repnz
std
pop
xchg
add
dec
testb
fwait
and
mov
fstl
mov
mov
outsb
sbb
ljmp
pop
and
fnstenv
sbb
xor
popa
sahf
fmul
pop
stos
sbb
add
js
out
mov
jecxz
xchg
sbb
aad
and
test
jne
push
xchg
sub
add
movb
cltd
call
jmp
mov
test
test
inc
outsb
test
rorb
call
lcall
jg
push
push
jbe
push
cmpsb
pop
xchg
bound
imul
adc
bound
inc
leave
outsb
lods
rcrb
fs
mov
outsl
xor
arpl
lret
nop
bswap
or
ret
mov
loope
icebp
or
or
int3
mov
pop
ret
popf
andb
fistl
mov
jmp
testb
cld
and
and
or
mov
or
xchg
pushw
cltd
lahf
data16
movsb
and
pop
dec
popa
mov
call
imulb
add
xchg
iret
ja
mov
mov
xchg
push
lods
stos
xor
lock
jb
push
stos
sbb
loopne
mov
test
adc
xor
jne
inc
add
push
mov
push
cwtl
sbb
ljmp
in
add
std
mov
nopl
push
xor
adc
gs
push
mov
cmp
add
mov
push
hlt
mov
fadds
push
cltd
sbb
lcall
jmp
inc
cmc
gs
repz
popf
jne
xor
mov
push
pop
sbbb
mov
out
rorb
inc
or
jbe
add
mov
mov
push
hlt
adc
in
imul
mov
outsl
test
mov
mov
pushf
push
sub
out
mov
and
inc
in
lahf
repnz
sahf
xor
loopne
ljmp
call
fiaddl
cmp
mov
mov
lret
jne
out
add
xor
mov
push
test
mov
ds
xchg
dec
xor
data16
call
add
xchg
cmp
mov
pop
js
dec
push
rorl
mov
lods
outsl
jp
xchg
jl
loopne
jbe
jge
aaa
fwait
xchg
cwtl
inc
inc
lret
aas
xor
mov
xor
push
xchg
push
mov
push
dec
mov
mulb
sub
inc
rcrl
stc
xchg
call
cmpsl
insb
nop
fcomps
pop
and
sub
incb
pop
outsb
mov
inc
cld
js
mov
inc
xor
jl
inc
add
or
stc
pop
ljmp
stc
shll
xor
pop
or
test
fdivr
pop
mov
pop
sahf
or
pop
test
das
push
adc
jae
and
fwait
jmp
push
or
pushf
pop
fisubrs
sahf
or
sbb
or
dec
pop
gs
test
cmp
ljmp
mov
mov
mov
pop
mov
xchg
loop
daa
clc
dec
fdivrl
ja
sbbl
mov
sbb
lods
insl
ret
cmp
mov
xchg
out
pop
sbb
xchg
inc
popf
xchg
and
mov
jp
sub
imul
push
pusha
inc
jnp
negb
inc
fistps
cmpsb
imul
outsl
jmp
fptan
dec
call
repnz
cmc
xor
sbb
pop
scas
and
sbb
sbb
daa
mov
mov
cmp
xchg
test
loope
dec
mov
leave
cltd
cmp
cmp
pop
sbb
mov
lods
ljmp
aaa
xchg
mov
cli
lds
adc
ret
and
sarb
add
cmp
test
cmp
jmp
cmp
add
aad
inc
cmp
sbb
addr16
je
popa
dec
rcr
push
lahf
cmpsl
hlt
and
adc
mov
cld
sbb
lea
cmp
sub
add
sbb
sti
cmp
xchg
push
and
and
pop
pop
aad
jo
out
xor
xchg
stos
cmp
cmp
inc
xor
mov
and
popa
cltd
inc
adc
cwtl
mov
lret
int
loop
xchg
adc
lods
sbb
ss
or
jno
pop
mov
jns
out
jp
in
test
fsubrl
add
inc
sub
pop
cmpsb
xor
add
jg
repnz
add
call
repnz
test
in
gs
xor
sbb
in
adc
icebp
adc
add
ja
es
and
xor
fildl
dec
mov
xchg
movsl
jmp
out
add
jg
sbb
jb
adc
repz
out
loopne
imul
pop
and
add
cmpl
idivl
xchg
in
xchg
cmp
aam
fists
mov
sub
jmp
test
push
mov
popa
ds
enter
jl
mov
aad
dec
inc
sbb
hlt
and
jae
xchg
dec
mov
jg
movsb
lods
movsl
int
sbb
sub
enter
rcrl
in
mov
rolb
dec
jo
ret
in
push
mov
and
daa
sub
out
xor
jne
in
clc
add
cmp
adc
lret
fwait
add
push
imul
shl
and
cmp
mov
cltd
dec
mov
jmp
adc
sub
in
lea
ja
pop
stc
push
aam
sub
cld
sbb
mov
into
lret
mov
xor
sahf
int
xchg
inc
or
cmp
testb
lcall
cmp
mov
dec
mov
jle
scas
int3
int3
jbe
mov
push
mov
mov
mov
xor
int3
sbb
sub
push
pop
mov
lcall
stc
clc
xor
push
out
push
inc
xor
iret
mov
insl
adc
stos
shll
fwait
or
push
outsl
jp
dec
popa
pop
loopne
sbb
and
xchg
outsb
mov
cltd
fs
mov
adc
pop
daa
push
sar
cmc
mov
mov
pop
cmp
loopne
push
loop
inc
decl
push
cltd
scas
es
mov
aad
scas
adc
pop
mov
mov
fdivl
adc
lret
push
lahf
sub
stc
mov
add
jg
in
mov
test
out
aas
inc
pop
cltd
or
js
int3
arpl
mov
jle
outsl
cltd
leave
movsl
or
ficompl
pop
fsubl
scas
mov
pop
adc
sub
xchg
stos
orl
inc
add
icebp
popa
push
popf
stc
dec
or
scas
std
push
mov
enter
sub
sub
out
stos
xor
add
jle
popf
hlt
adc
sbb
pop
in
cmp
jl
sar
dec
mov
mov
inc
mov
pop
jns
shlb
jb
mov
in
dec
pusha
adc
sbb
jbe
mov
mov
pop
xchg
iret
adc
cmp
stc
jp
dec
rcrb
jecxz
and
addr16
stos
cli
dec
repnz
xchg
pop
jl
in
bound
cmpsl
dec
aaa
mov
arpl
or
faddl
out
push
inc
stc
lods
push
sbb
in
and
pop
das
mov
rol
rcr
loope
test
enter
and
sbb
mov
int
add
inc
ljmp
nop
add
int
xchg
pop
adcb
fistps
and
xor
pop
sbb
inc
mov
sbb
or
into
and
into
cltd
in
js
pop
xchg
or
xchg
scas
mov
jne
push
es
in
sbb
mov
push
mov
jne
jecxz
add
sub
mov
or
movsb
jp
sub
jo
scas
cmp
in
dec
xchg
fcmovnu
xor
sub
inc
cwtl
lahf
adc
bound
leave
jmp
in
mov
add
mov
lret
test
popf
sub
cmp
sbb
decb
mov
into
xor
and
ljmp
subl
scas
inc
insl
les
testb
push
sub
dec
out
pop
add
lahf
les
and
adc
rcrb
push
jo
jnp
and
andl
cmp
fmuls
jns
arpl
cmp
in
fistpll
cmpl
repnz
push
adc
pop
fcmove
sbb
pop
lods
cld
movb
decb
rcr
test
stos
jmp
ja
mov
mov
jle
xchg
imul
mov
dec
and
dec
adc
adc
loop
mov
dec
push
mov
inc
xchg
pop
push
or
add
das
test
pop
pop
std
mov
jnp
jns
mov
in
repnz
cmp
xor
shrl
loopne
lds
movl
std
add
sbb
push
and
dec
ret
xchg
das
fisubl
test
mov
add
jb
imul
inc
fadds
pop
and
jecxz
pop
pushf
add
bound
pop
xor
dec
xor
xor
add
movsb
adc
push
les
les
arpl
jbe
fisubrl
je
das
sti
pushl
push
fmull
sbb
adc
pop
daa
xchg
scas
mov
xlat
test
jecxz
mov
push
inc
leave
fisubrs
sub
fstl
xor
jmp
movsb
add
lahf
adc
call
sbb
in
and
jecxz
sbb
ffreep
cwtl
loope
mov
sarb
adc
add
mov
pusha
loope
pushf
inc
in
dec
ret
das
adc
insl
push
push
jecxz
les
rcll
xchg
scas
xchg
lret
dec
inc
jle
add
push
inc
push
dec
adc
sub
sub
sbb
hlt
pop
shrb
cwtl
into
inc
sub
push
adc
jp
pop
inc
pop
icebp
fidivrs
call
mov
sub
or
xor
adc
and
nop
xchg
mov
daa
div
test
decl
pop
jne
mov
das
add
repnz
int3
mov
cltd
inc
cli
repz
mov
out
mov
mov
add
inc
out
jmp
dec
sahf
pop
dec
andb
push
lods
mov
sub
jbe
add
cmp
add
dec
clc
cmp
insl
ret
mov
adc
lods
adc
pop
cwtl
xor
pop
inc
inc
push
std
mov
dec
data16
fldl
or
mov
sub
mov
cmpsb
orl
loope
mov
enter
pop
in
mov
inc
push
repnz
adc
ljmp
sub
in
adc
mov
test
ds
ret
cmp
sub
shl
pop
loope
mov
cltd
lret
scas
mov
dec
repz
sti
cli
loopne
out
adc
xor
and
pop
xlat
jb
out
jns
addr16
dec
ja
loope
dec
xchg
mov
mov
jb
mov
outsb
scas
rorb
loopne
mov
pop
dec
fs
iret
lock
scas
out
push
hlt
fimuls
lock
pop
imul
sub
arpl
xchg
jmp
mov
out
add
int3
fxch
xor
test
push
xchg
and
dec
push
and
and
mov
shrb
inc
lds
lock
pop
mov
dec
jbe
xchg
jl
cmpsb
inc
mov
test
in
or
insb
sbb
pop
mov
xchg
jp
shr
sbb
cli
or
andl
adc
pusha
ret
ss
jp
dec
std
xchg
ljmp
jmp
pop
inc
ret
lret
pop
push
lods
push
pop
cmp
fcmovnbe
insb
lock
sbb
pop
xlat
mov
mov
pop
fmuls
gs
lea
insb
jno
ds
pop
fnsave
pop
sub
ja
shr
fbld
push
jecxz
aaa
push
mov
and
int
xlat
lcall
cmp
pop
rorb
xchg
lds
arpl
add
cmp
xchg
fistpll
fsub
cwtl
jns
and
fidivrs
jmp
gs
mov
lret
mov
addr16
adcl
test
add
adc
push
nop
dec
xchg
movsl
add
pop
add
sbb
data16
dec
lds
pop
cmp
popa
mov
clc
lods
cmp
dec
imul
dec
jnp
sbb
mov
push
jecxz
inc
pushf
mov
lret
negb
pop
inc
xor
cmp
roll
insl
cmp
addl
push
xchg
xlat
data16
adc
es
adc
adcb
pop
xchg
mov
jp
xor
and
cmp
xchg
lahf
push
sbbb
mov
shll
and
dec
fistl
enter
jne
sub
dec
out
mov
lcall
test
jecxz
out
pop
inc
pop
lret
decb
pop
inc
mov
xchg
stos
loope
arpl
lea
mov
xchg
mov
aas
jbe
mov
push
pop
mov
cmp
divl
or
or
xor
push
xchg
push
or
lret
sub
aam
pusha
sub
push
or
pop
pop
jle
cmpb
adc
pop
mov
mov
lds
clc
jp
xor
sbb
clc
xchg
rol
je
add
bnd
pop
xor
xlat
addr16
mov
cmp
sub
push
out
dec
in
stos
or
and
mov
int
call
pop
pusha
stc
sbb
pushf
jp
cld
mov
jg
pop
int
test
lret
xchg
lea
mov
fstps
adc
shlb
jae
mov
daa
movsb
int3
ret
jnp
or
lock
lds
daa
les
jp
scas
mov
ror
sbb
push
xor
bound
out
add
lock
cs
xor
adc
mov
inc
adc
fs
jns
in
popf
not
sub
sahf
sbb
insb
push
xor
mov
int3
sub
or
inc
inc
push
xor
sub
lods
add
cmc
movsl
add
dec
das
cld
mov
inc
sub
imul
xor
cmpsl
mov
xor
and
fisttpl
insb
add
fs
leave
cmpl
in
push
movsb
sbb
xchg
cli
push
int
xchg
sub
mov
jae
out
js
fisttps
ud2
popa
jne
sbb
rolb
xor
adc
dec
fmull
lcall
push
pop
addr16
mov
and
ja,pt
mov
sub
sub
inc
fadd
or
dec
imulb
and
stos
lret
fcmovne
pop
cwtl
and
ret
icebp
jbe,pn
inc
test
add
cmpsl
or
das
je
dec
and
sbb
push
movb
fisubrl
push
mov
xor
sbb
addl
in
push
enter
mov
outsb
xchg
aad
fcomp
adc
negl
xor
mov
das
push
add
test
cmpl
lret
bound
sti
cmp
fwait
repnz
push
xchg
mov
cmc
lret
dec
nop
add
imul
and
mov
push
ljmp
jne
call
aam
and
push
lock
outsb
je
xchg
popf
shr
shl
jae
loop
repnz
xor
ret
cwtl
sarb
leave
out
insl
fisubs
adc
fmuls
jno
es
sbb
imul
stc
xchg
movaps
push
sub
inc
rorl
inc
mov
subb
call
sub
mov
bound
mov
xor
pop
je
dec
mov
aas
xchg
dec
sbb
push
ja
imul
loop
mov
ljmp
cmp
cld
lock
fmull
popa
adc
stc
fwait
xchg
or
xchg
jecxz
xor
xchg
inc
js
cltd
cmp
mov
outsb
ss
pop
cmpsb
je
mov
aas
stos
sbb
repnz
inc
and
in
rol
jne
inc
outsl
icebp
pop
mov
addr16
lods
mov
dec
rolb
sti
loop
std
pop
jne
stos
mov
xchg
xchg
into
outsb
into
mov
xor
std
mov
test
cmp
dec
mov
xchg
aas
jg
mov
jbe
xchg
jp
decb
or
popf
push
xchg
lcall
fmull
sub
test
subb
lea
mov
jns
ljmp
arpl
into
add
imul
and
or
and
push
rclb
jg
inc
push
sub
mov
xchg
filds
out
test
test
mov
sti
dec
xor
jb
sbb
cltd
insb
shlb
cmp
mov
mov
in
je
lds
sub
cmp
jbe
push
mov
add
shrb
aaa
aaa
pop
sub
mov
sub
sahf
dec
mov
movsb
sub
sub
repnz
in
pop
and
push
adc
xchg
leave
repz
xor
cmpsb
push
pop
insl
call
xor
test
mov
es
push
lea
outsb
sbb
shrl
scas
test
in
jmp
stos
aaa
jne
popa
xchg
xchg
or
mov
sbb
add
fsts
mov
stos
sub
add
repz
test
stos
sub
or
jnp
leave
testb
sahf
jmp
das
test
rclb
mov
sbb
into
add
pop
cli
aad
cwtl
mov
sbb
bound
repz
cmp
mov
adc
adc
xlat
hlt
test
jmp
aas
jne
enter
sahf
sbb
cmpsb
inc
fsubl
pop
push
js
jmp
loop
pop
add
mov
stos
int3
add
and
xchg
std
loopne
add
sub
push
xor
dec
fimull
jns
adc
int3
or
dec
sar
dec
cmp
mov
ret
or
shll
push
push
xchg
and
jecxz
aam
push
stc
dec
imul
sub
push
jns
stos
nop
sub
das
jnp
dec
insl
dec
inc
mov
cltd
out
cmpb
dec
iret
xlat
pusha
or
inc
sub
das
inc
push
enter
ret
out
loopne
cmp
int
cmp
inc
std
inc
movsb
mov
shl
xchg
imul
das
mov
mov
mov
into
adc
daa
jle
add
inc
adc
sub
pop
push
mov
js
aaa
inc
in
jl
cmp
out
bound
jae
pop
sub
sahf
push
test
clc
push
out
mov
loope,pt
dec
mull
adc
push
or
or
mov
shlb
dec
mov
imul
dec
insb
sub
lods
pop
xlat
loopne
movsl
or
stc
pop
xchg
xchg
and
pop
push
xor
in
lods
icebp
xchg
xor
lret
popa
cmp
push
sbb
je
out
mov
cmp
and
cld
loope
outsb
iret
xchg
out
imul
jbe
mov
cltd
push
mov
mov
xchg
stc
je
cmpsb
rcrb
imul
jo
add
std
mov
sarb
mov
and
jnp
lods
inc
or
std
out
ret
push
add
movsb
mov
fcoms
pop
lcall
cmp
or
xor
and
dec
ja
cmpsb
shr
out
pop
xchg
sbb
clc
xchg
mov
ljmp
cmp
sbb
orb
push
sub
xchg
scas
xchg
mov
mov
push
ret
or
lea
out
addr16
rorl
dec
mov
mov
cvtpi2ps
jle
inc
mov
sub
fdiv
shrl
js
iret
repnz
add
push
pop
cmpsl
push
cmp
sbb
jne
and
movsl
hlt
sarl
xor
mov
xchg
cli
cld
cs
sbb
icebp
cld
out
pushf
dec
mov
nop
loop
inc
out
int3
lods
fsubrs
and
iret
outsb
jae
loopne
popa
scas
stos
int
lods
xchg
out
sub
imul
out
fisttpl
ljmp
out
push
scas
nop
outsl
mov
cmp
mov
jmp
jo
repz
ss
cmp
mov
sub
mov
cltd
das
decb
adc
add
push
dec
fs
stc
sbb
cs
and
push
pop
adc
jecxz
popf
mov
enter
fs
sbb
pop
fs
xchg
mov
push
aam
clc
xchg
dec
hlt
das
pop
data16
nop
add
pop
push
lret
mov
mov
mov
push
inc
dec
xorl
pop
mov
out
rcrl
sbb
mov
xor
test
jmp
insl
movsl
bnd
jns
cld
jo
outsl
add
inc
lahf
push
mov
scas
leave
or
lcallw
clc
adc
add
fimuls
das
out
and
mov
and
orb
adc
xor
xchg
jle
inc
pop
sub
clc
jge
lods
popa
adc
sub
idivb
ss
scas
int3
fwait
push
sbb
and
out
adc
push
fstpt
sbb
or
pusha
xchg
outsb
ret
mov
dec
push
sbb
mov
pop
xchg
hlt
leave
cmp
pop
lea
sub
mov
into
dec
add
dec
adcl
out
das
adc
mov
repz
push
mov
pop
mov
ret
push
adc
mov
cmp
mov
frstor
dec
push
cmpsb
movsb
pop
inc
or
shlb
cmp
loop
movsb
test
popf
push
xchg
in
or
shl
lret
add
fucom
fwait
imul
add
addl
int3
jecxz
fsubl
loope
add
daa
fldl2e
rcrb
sbb
out
rol
jg
int
add
jbe
aas
pop
adc
cltd
pop
adc
and
fdivl
dec
xchg
int3
dec
pushf
mov
fstpt
mov
mov
stos
xchg
adc
mov
dec
inc
xchg
into
push
mov
jmp
fildll
adcl
aam
xor
sbb
ret
and
xchg
das
iret
and
out
ds
jnp
in
cmp
dec
jne
add
xchg
repz
mov
pop
mov
inc
fldl
sub
cmp
popa
add
in
sti
xchg
aam
nop
iret
call
add
push
jl
and
dec
ljmpw
sahf
add
add
mov
mov
xchg
pop
dec
lret
xor
xchg
push
cmp
adc
stos
scas
add
or
adc
jg
xchg
sar
ja
fsubrl
push
adcl
ss
ret
mov
call
outsl
std
aaa
loop
xchg
sub
addr16
in
push
cld
out
pop
sub
fs
pop
in
fists
sti
and
sub
outsl
jnp
mov
lcall
push
mov
pop
push
sti
push
pop
scas
mov
adc
repnz
and
push
jl
xchg
push
mov
popa
sub
out
pop
aaa
mov
loopne
inc
push
add
fs
pushf
scas
inc
mov
push
cmp
jmp
out
test
jle
enter
push
mov
call
sbb
sub
xor
or
adc
jns
mov
in
add
dec
filds
and
test
ror
pop
jae
adc
lret
sbb
cld
lock
outsb
and
sub
rol
jmp
adc
xchg
mov
push
orl
out
pop
and
sbb
or
adc
xor
ja
test
mov
or
ss
sub
inc
mov
sub
sbb
icebp
lahf
push
fs
push
nop
push
or
mov
push
rol
xchg
or
and
fcmovnb
fildl
sarb
push
xor
or
xlat
sti
dec
add
insb
jmp
in
data16
in
in
in
div
adc
js
pop
stc
inc
cmp
jle
ret
out
mov
dec
fsubl
jp
sahf
jb
adc
ret
mov
scas
add
pushf
pop
mov
fldl
roll
mov
jnp
and
leave
negl
jns
add
ficompl
pop
test
inc
imul
and
add
loop
push
shrb
rcrb
and
les
stos
stos
xchg
mov
inc
pop
addr16
sub
out
pop
and
sbb
xor
bswap
push
lahf
std
loop
pop
adc
in
inc
js
lret
xlat
into
sub
out
and
lods
ret
hlt
adc
cld
mov
enter
divb
mov
ret
mov
popa
je
cmpsb
jb
test
push
jp
push
mov
jns
mov
ja
adcb
push
or
jbe
aas
mov
fimull
inc
adc
jo
or
iret
sbb
jnp,pn
out
jae
adc
sti
rclb
js
inc
jle
xor
mov
mov
das
fimull
loopne
mov
cmc
adc
push
and
test
adc
lret
pushf
and
into
insl
je
push
jge
xchg
stc
clc
or
adc
test
cmp
jle
add
es
shll
aam
cmp
fistpll
pop
sbb
xchg
fstps
lret
aaa
lret
adc
out
outsb
rcrb
mov
adc
sub
and
imul
add
xchg
in
test
mov
add
sub
cmp
cld
mov
dec
test
out
pop
out
test
ja
fadds
rorl
push
sbb
and
mov
fadd
xchg
dec
fistl
adc
jmp
fwait
pop
pushf
adc
leave
testl
lods
mov
inc
sbb
jg
ss
jb
in
sahf
mov
mov
enter
xor
mov
aaa
ja
fcmovbe
mov
shr
lret
mov
mov
addb
mov
cmp
push
pop
push
add
pop
inc
icebp
lret
sub
inc
mov
bound
je
popa
push
lock
adc
lds
and
cld
lods
into
push
lret
das
icebp
popf
mov
sub
push
mov
lret
mov
fs
xor
sbb
mov
sub
mov
mov
jnp
cmp
fcmovnu
xor
push
into
inc
popf
icebp
mov
inc
lret
insl
int
int
cmpsb
xor
arpl
addr16
add
ficoml
push
and
outsb
fwait
pop
pop
xor
xchg
lea
mov
fbld
and
adc
sbb
dec
jl
pop
xlat
cmc
int
imul
addr16
insb
lret
push
jns
xchg
mov
push
idivb
inc
insb
pop
pop
cmp
popa
pusha
add
push
clc
cmp
dec
call
mov
lock
xor
test
call
fwait
inc
sub
push
mov
xchg
push
cld
pop
adc
call
xchg
ret
mov
sbb
mov
dec
ss
and
mov
mov
les
and
cld
gs
push
stos
add
xlat
sub
vsubsd
pop
jl
andl
push
mov
or
cmpl
inc
mov
pop
jle
fprem
xchg
sbb
sub
test
inc
and
or
lds
sbb
pop
aam
pop
lcall
iret
vminps
pop
and
dec
in
jns
cmp
cmp
mov
inc
lods
add
mov
mov
sub
mov
aam
jecxz
ret
enter
pop
loop
lcall
push
ss
lds
or
lahf
lret
jb
and
pop
mov
scas
jle
fdivrl
lcall
and
pop
push
pusha
iret
out
dec
lock
mov
xchg
aas
sub
and
ss
jno
subl
cmpsb
ja
add
es
ret
dec
push
or
dec
daa
jle
add
and
in
push
and
fdiv
ret
mov
lods
and
mov
test
sbb
cs
stos
pop
cmp
inc
sahf
adcl
out
mov
movsl
push
cli
jae
in
jb
mov
mov
lods
or
clc
dec
inc
jno
ja
sub
pushf
pushf
inc
jne
loopne
xchg
mov
addr16
cli
inc
ret
pop
mov
test
testl
out
ds
mov
sub
iret
mov
mov
cmpsl
in
sub
sub
fmulp
sub
mov
xor
and
mov
test
xor
xor
xor
mov
pop
std
std
xchg
mov
sahf
stos
mov
fneni(8087
mov
add
negl
sub
push
inc
inc
jb
into
ret
mov
mov
cmp
xchg
mov
movsb
mov
lcall
inc
lret
daa
cmp
ret
mov
ss
ffreep
mov
sub
insl
mov
cmc
mov
pop
pop
push
repz
and
jecxz
lds
or
aam
sbb
push
fincstp
popa
mov
add
sbb
bound
imul
ljmp
xor
repz
stc
sahf
cmp
pop
push
leave
stos
fwait
sbb
addr16
xchg
fcomip
and
mov
divl
sub
mov
mov
push
xchg
fildll
jnp
stos
fldt
pop
or
sbb
jl
mov
jl
sub
lods
unpcklps
in
mov
clc
or
push
xchg
dec
mov
jo
and
pop
arpl
jecxz
int
movsl
jle
out
cmpb
shlb
loope
repnz
xor
lret
sub
call
mov
add
lds
mov
inc
sahf
mov
adc
jno
sub
outsl
cwtl
adc
rclb
push
lret
in
mov
cmp
pop
js
cmc
cli
mov
lea
sbb
jnp
push
add
fnstcw
outsl
ds
xor
out
std
sub
xor
mov
cli
xchg
cmp
in
cs
pop
xor
push
aam
loope
pop
out
ret
imul
pop
movsb
daa
fcomps
dec
scas
adcb
sub
std
decb
mov
or
lcall
jae
loope
jbe
int3
adc
mov
jno
rorl
shll
js
minps
arpl
mov
sbb
in
inc
mov
inc
aaa
cli
pop
mov
or
loope
arpl
inc
sbb
mov
xchg
push
mov
push
sti
or
add
xor
or
xor
cmc
jg
loope
jg
sub
push
add
pop
mov
inc
dec
jmp
rolb
dec
faddl
out
mov
loope
jns
cmpsb
in
cmp
mov
enter
inc
inc
pop
mov
pop
addr16
int3
push
adc
push
inc
mov
inc
mov
cwtl
jbe
cmpsl
bound
inc
mov
out
cmp
in
inc
or
lds
fcoms
cmp
jno
cwtl
sub
aas
xchg
sahf
out
aaa
dec
sbb
sbb
jbe
mov
lock
mov
or
inc
adc
xor
mov
imul
fdivr
aam
mov
jecxz
aas
or
mov
pop
repz
pop
mov
cld
arpl
jnp
call
mov
sbb
add
loop
or
cli
cmpsb
sahf
cmpsl
shlb
fcmovbe
and
scas
mov
push
lahf
arpl
and
push
incl
scas
das
jbe
dec
repz
stos
cmp
mov
les
iret
cs
sub
movsb
stc
rol
inc
stc
mov
out
mov
xchg
orl
lods
mov
enter
push
dec
fisttpl
std
dec
fists
mov
or
inc
ret
or
fcomip
out
and
into
add
insl
addr16
test
push
scas
inc
je
mov
mov
out
push
add
lock
repz
sub
xchg
stos
mov
mov
cld
dec
les
shrb
mov
stc
cmp
in
iret
jns
push
xor
adc
dec
aaa
push
mov
sub
roll
test
rcr
pusha
or
clc
push
xlat
mov
jecxz
cmpsb
mov
jg
imul
int3
mov
shll
test
insl
xor
les
je
jnp
mov
or
enter
pop
into
sub
mov
outsl
sbb
push
inc
jns
aas
jae
or
shll
leave
pop
adc
cmp
dec
cmp
push
xor
stos
out
stc
inc
repz
int3
adc
pop
in
enter
mov
xchg
sbb
je
cld
repz
inc
cmpsb
add
test
fcom
nopl
cmp
xchg
scas
mov
daa
lods
andl
sbb
imul
movsb
sbb
inc
dec
jle
cmp
add
cmpb
xor
pop
out
es
addr16
sub
cmpsl
fcmovnbe
popa
xchg
pop
cmp
pop
adc
push
cwtl
ficompl
ret
shll
rolb
dec
xchg
cmpsb
paddusb
lahf
dec
and
sbb
mov
inc
push
cld
ud0
mov
imul
pop
sahf
add
cmpsl
pop
add
jnp
in
inc
sub
stc
and
inc
fcomps
loopne
cmpsb
loope
aad
imul
pop
sbb
and
pop
push
push
add
pushf
out
shlb
cld
inc
or
loopne
shr
pop
inc
rolb
cwtl
pop
stos
andl
sbb
jae
ss
add
enter
mov
inc
popa
inc
negl
push
loopne
rcrl
les
push
mov
mov
fmull
cwtl
lock
xchg
shlb
mov
mov
jmp
sarb
adc
push
gs
cmpb
mov
dec
dec
lcall
in
push
cmp
aam
dec
mov
repnz
mov
mov
fs
sti
pop
dec
movsb
xor
rorb
lods
mov
jge
xor
out
lock
mov
adc
pop
jb
daa
sbb
adc
sub
xchg
xor
inc
fnstenv
mov
dec
mov
sub
push
lds
xor
in
int3
jae
and
mov
sahf
jno
inc
test
xlat
clc
mov
adc
out
push
aaa
and
pop
mov
bound
pusha
add
jnp
addb
mov
movl
aaa
push
imul
mov
out
jne
int
in
mov
add
movb
mov
cmp
jge
mov
mov
cmp
test
movsl
ret
jnp
rcll
pop
mov
pop
jb
sub
push
clc
loope
stos
iret
jns
jne
mov
jno
ret
add
add
cld
arpl
mov
sar
mov
and
mov
insb
lret
xlat
outsl
dec
fisubl
push
mov
mov
out
jl
enter
mov
cmp
xchg
stos
out
mov
pop
pop
sarl
lods
daa
sub
pop
mov
push
adc
fwait
andl
xchg
add
lods
shlb
clc
pop
push
std
inc
inc
hlt
mov
aaa
push
add
test
enter
into
cwtl
pusha
cwtl
adc
minps
xor
fsubrs
loopnew
lods
rolb
gs
jp
hlt
add
jle
add
sti
inc
cmpsb
or
or
clc
and
jecxz
testl
popl
loopne
sbb
sbbb
xor
addr16
jo
aas
push
pand
mov
into
ror
ret
push
and
stc
xchg
adc
sub
mov
mov
mov
pusha
inc
inc
lock
sbb
cmpsb
xorb
ss
add
jne
shlb
push
inc
fiadds
imul
repz
fs
gs
sbb
ret
sahf
adc
jmp
shrl
xchg
mov
pop
jb
xor
sahf
push
inc
shll
fisttpll
xchg
and
dec
out
enter
lret
ret
jmp
sbb
mov
int
sub
dec
xchg
cli
cmp
or
lret
xchg
stos
sbb
dec
fs
cltd
insl
fildl
arpl
mov
loope
fs
sti
mov
outsb
lods
lret
repnz
xchg
aas
jmp
fs
jg
xlat
push
push
push
sbb
xlat
or
jne
sbb
cltd
lcall
xor
dec
pop
aad
mov
jbe
insb
sti
jl
jo
mov
loop
in
and
lods
cmp
pop
mov
test
sbb
jnp
adc
mov
sbb
xor
xchg
jle
repz
bound
sti
mov
aas
inc
pushf
cmp
cmc
pop
jge
testl
pop
pop
or
or
inc
dec
popa
cmpsb
mov
outsl
dec
out
jb
inc
in
incl
xor
mov
add
adc
sbb
xchg
stos
and
test
lahf
add
sbb
out
xor
ja
mov
out
mov
aaa
mov
in
xorb
es
sbb
or
xchg
fs
mov
sub
inc
pushf
or
xor
mov
fstp
cmp
ret
loop
mov
pop
lds
in
sub
xchg
aaa
das
ficomps
inc
jae
add
test
xchg
or
outsb
xor
jmp
inc
aas
inc
aas
test
subb
ds
cmpsl
mov
add
out
test
fistpll
and
decb
out
int
mov
dec
mov
dec
ja
jmp
sub
adc
lret
cmc
fs
rcl
fldl
movsl
adc
jle
and
jge
mov
xor
cmp
loop
in
xchg
sbb
fwait
mov
mov
pusha
stos
pop
add
out
int3
sti
pop
xchg
jnp
pop
jno
cld
and
scas
mov
in
pop
pop
or
aad
mov
stc
imul
fsubr
push
notl
loopne
pusha
inc
pop
daa
mov
xor
jp
fnstcw
shll
lods
mov
lret
jp
lea
push
pop
xor
push
add
jno
test
pop
jle
and
cmp
inc
out
stos
rcrl
push
mov
xchg
stc
jnp
nop
pop
mov
test
imul
mov
ljmp
fdivp
xchg
fidivs
fcomps
jns
cmp
pop
in
adc
scas
push
push
out
repz
and
les
push
lds
push
sbb
mov
into
and
push
and
leave
push
imul
cli
popa
aas
out
jns
out
push
mov
push
adc
insl
ss
push
inc
arpl
je
jno
lods
push
pop
fldcw
push
adc
cld
inc
hlt
jns
popa
push
aam
pop
lret
in
mov
popa
subl
imul
test
pushf
imul
fwait
pop
xchg
jcxz
sub
and
sarl
inc
inc
imul
ret
imul
mov
lea
mov
pop
fsubrl
sbb
decb
ja
test
nop
mov
jbe
pop
inc
sbb
cmp
dec
push
add
loope
es
gs
mov
out
pop
mov
mov
sbb
shlb
test
sbb
mov
xchg
sbb
cmp
jp
int3
adc
fucomip
and
dec
and
xor
inc
pop
sar
rcr
ds
mov
aas
push
or
xchg
mov
jb
xchg
movl
call
mov
push
and
fdivr
xor
lret
and
inc
out
cmp
cmp
or
into
xlat
xor
in
xor
sbb
jmp
jecxz
mov
inc
call
aad
addr16
scas
lahf
xchg
add
test
xlat
mov
rcrb
in
leave
sbb
xor
lock
cmp
aas
and
adc
popa
adc
mov
cld
xor
mov
pushl
pop
pop
cmp
movl
cmc
and
sub
subb
sbbb
mov
cmp
fiaddl
dec
andl
fcmovb
cmp
mov
or
icebp
jecxz
xlat
test
fdivl
adc
jecxz
mov
or
lret
std
lods
ret
ret
enter
adc
and
das
and
cmp
imul
nop
sbb
and
mov
mov
iret
pop
cld
sti
cs
xor
or
add
xor
inc
push
inc
pop
adc
sub
pop
xchg
xchg
ljmp
gs
aas
sub
addb
pushf
in
sub
xlat
sbb
mov
mov
fs
loope
out
dec
xor
push
mov
leave
mov
cs
lods
stc
popf
dec
ror
mov
and
mov
out
stc
xchg
pop
cmp
or
ds
imul
and
dec
sbb
sbb
shl
cli
push
inc
jp
push
testb
out
sbb
out
out
cmp
inc
cs
lea
cmp
cld
pop
int
lds
jl
movsl
lcall
adc
int
outsb
cwtl
xchg
rclb
fbstp
fsubl
loope
cmp
mov
xlat
mov
mov
das
ret
das
cs
fnsave
inc
imul
jbe
in
pop
xor
dec
ret
jno
cmp
push
mov
sbb
imul
mov
push
std
sub
insl
leave
and
in
ds
mov
add
fistl
pop
std
hlt
imul
push
mov
data16
inc
je
push
leave
inc
adc
lahf
and
addr16
pop
movsl
lea
mov
test
fadds
clc
loopne
jne
ljmp
pushf
inc
xchg
xor
and
not
stos
cmp
add
jb
hlt
dec
lea
addr16
cwtl
dec
push
imul
andl
rcrl
std
scas
cli
aas
cltd
sbb
cmpsl
or
mov
lods
sar
popf
mov
rclb
add
mov
fiaddl
sbb
push
ret
maskmovq
negl
call
mov
cmc
dec
push
mov
data16
insb
addb
mov
rcl
cmpsb
sub
or
mov
repnz
push
or
movsl
js
pop
add
jge
and
inc
xor
cmp
mov
aas
dec
cmc
pusha
outsb
in
sbb
xchg
mov
outsb
enter
repz
xchg
push
aad
sbb
mov
pop
cmp
shll
ret
jg
out
sbb
sub
cmp
xchg
out
sbb
scas
mov
cwtl
outsb
inc
jae
pop
adc
imul
cmp
lret
arpl
mov
lret
mov
mov
mov
add
add
dec
cmp
adc
rcll
out
mov
cmpb
mov
fwait
sbb
mov
das
mov
sbb
cmc
fbld
dec
pop
ds
inc
shrl
xchg
stos
sub
fcmovne
sub
mov
jge
xchg
jne
mov
lcall
sti
aad
fiadds
mov
fwait
dec
add
or
cltd
dec
push
cmpsb
rcll
sbb
int3
loope
fxch
shlb
xor
mov
xor
add
nop
xor
dec
ljmp
sbb
mov
roll
mov
mov
jg
push
rcrb
sarb
push
push
rolb
sbb
push
cld
inc
pop
lods
or
mov
jnp
pop
dec
pop
in
iret
jg
fldenv
std
sarb
into
fldenv
ds
outsb
xchg
push
orl
jae
rolb
repz
popa
jns
jns
das
inc
mov
pop
and
or
in
rcr
stos
aas
xor
sub
jecxz
mov
mov
imul
mov
icebp
shlb
shll
or
or
int
add
into
stos
xchg
mov
ss
ror
popa
adc
cmpsl
lahf
mov
push
ror
out
cld
cs
lahf
xchg
das
ret
repnz
and
ljmp
test
inc
and
decl
in
loop
add
jecxz
push
cmc
adc
and
aaa
imul
in
mov
sbb
imul
xor
xor
dec
movsb
popa
sbb
js
sub
sbb
xor
fildll
scas
adc
jg
in
or
aad
aad
jb
mov
cmpsb
or
jns
ljmp
sub
adcb
cmp
hlt
ja
or
pop
into
push
test
popa
ds
cmp
dec
hlt
cmp
cmp
and
or
sarb
mov
dec
loope
ja
loope
sbb
lea
mov
mov
cmp
add
dec
xchg
mov
sub
push
add
lods
addb
ja
roll
sbb
xor
cmp
adc
push
xchg
pop
xchg
xor
sub
push
repz
sbb
inc
fwait
adc
je
dec
call
dec
sbb
shl
enter
and
std
pop
xor
scas
lods
jmp
loopne
add
sbb
nop
lods
loope
aaa
mov
in
or
dec
js
push
js
js
adc
arpl
mov
ret
xchg
insb
cwtl
shrb
lret
mov
cli
pushf
repz
or
ret
inc
ja
cmpsb
pushf
fsubs
adc
lcall
in
jnp
adc
ljmp
xchg
popa
fidivrl
mov
push
out
and
ljmp
cmp
xlat
test
fstl
add
mov
mov
jnp
movsb
jg
roll
add
and
mov
fcomp
cmp
rcl
xor
mov
mov
in
and
sub
dec
adc
int3
push
je
inc
fmuls
cli
xor
imul
pop
ja
mov
fsubl
clc
leave
mov
jbe
out
stc
add
in
push
mov
enter
les
and
and
mov
xor
sbb
inc
aam
popf
lret
inc
fsubrs
fisubrs
sbb
push
inc
push
jae
inc
dec
jno
inc
xlat
data16
push
cld
gs
scas
iret
js
pop
popf
fidivs
test
punpcklwd
mov
sub
add
mov
jle
mov
cltd
rorb
fdivrp
ja
dec
or
je
jecxz
sub
xchg
fnstsw
fisubrs
xlat
repz
sub
ret
shl
add
cmp
or
adc
jnp
loop
pop
inc
hlt
jnp
movsl
pop
aam
int
nop
call
dec
enter
insb
daa
push
pop
das
inc
shlb
or
inc
cmpsl
pop
movsb
push
pusha
sbb
out
mov
movsl
in
and
imul
fucomp
jge
test
sbb
es
mov
and
inc
sub
pop
int
inc
ja
pushf
inc
inc
arpl
fimull
das
mov
jns
test
jmp
pop
xor
or
pop
lods
xchg
hlt
cwtl
lods
pop
mov
mov
insl
idivb
repz
outsb
arpl
dec
inc
dec
and
pop
xchg
adc
mov
repnz
mov
stos
imul
lret
sbb
lea
daa
cmp
out
mov
cmp
cmp
mov
xchg
adc
jl
dec
or
mov
in
and
xchg
and
xchg
mov
jle
ss
jo
orb
test
bound
loop
add
add
outsl
mov
xor
pop
leave
outsb
mov
icebp
dec
loopne
loope
dec
cltd
leave
inc
mov
push
in
je
loope
mov
sbb
ds
jg
dec
mov
jbe
in
sub
mov
rcl
jns
sub
sub
sbb
lods
aaa
int3
sub
mov
rcrl
lods
ds
push
mov
movsb
addr16
or
dec
mov
fisttps
lock
mov
mov
fldcw
aad
pushf
cmp
cmp
inc
add
or
mov
push
xor
cmpsb
inc
loopne
sti
mov
mov
int3
cmp
jb
mov
ss
inc
gs
pop
mov
push
gs
aad
push
mov
nop
sbb
in
xor
dec
xor
sub
mulb
sub
fistps
out
dec
sbb
aam
gs
push
jo
sbb
push
push
ja
out
and
push
mov
lret
lods
adc
jae
fldl
jge
mov
test
stc
addl
ret
pop
out
aaa
out
aam
jno
cmp
fsubrs
imul
fwait
adc
dec
ja
sub
ret
adc
mov
pop
add
cltd
lds
fmul
xchg
mov
loopne
or
pop
mov
push
push
dec
mov
pop
mov
out
or
dec
cwtl
repz
sbb
push
or
jbe
mov
xchg
cwtl
lock
cld
lret
dec
inc
mov
repz
aaa
mov
jae
iret
xor
cmp
sti
pop
mov
xchg
pop
push
in
out
sub
fnsave
hlt
ret
pop
stc
mov
les
insb
inc
inc
out
or
cmp
lahf
in
add
mov
nop
dec
mov
push
ss
inc
mov
test
xchg
sub
sahf
lods
fwait
sti
sbb
dec
mov
or
pop
test
cwtl
inc
mov
shrb
addl
ljmp
adc
add
ljmp
jle
andb
addr16
fstpt
lods
or
test
inc
jae
stos
mov
orl
push
sub
or
es
push
add
in
adc
jae
mov
and
icebp
sub
mov
icebp
push
scas
imul
and
call
cmp
push
sarl
mov
loope
test
cli
dec
inc
out
inc
popf
cmp
fcmovu
mov
push
adc
and
push
ss
sbb
xchg
fists
das
push
xchg
xor
xchg
pop
outsl
jne
insl
sti
fdivl
and
xor
mov
fs
or
mov
and
and
adc
push
sbb
sub
sub
ret
mov
aaa
push
push
lcall
enter
bound
and
mov
pop
cmc
xor
hlt
cmp
das
pop
pop
fs
pop
jnp
and
xchg
push
test
jmp
push
xchg
aaa
mov
dec
push
add
stc
or
jbe
sub
pushf
add
inc
sub
aaa
xchg
loop
sub
or
add
rol
sub
out
ss
jno
scas
jne
movsl
cwtl
mov
inc
movsb
in
add
xchg
mov
mov
cmp
dec
xchg
push
gs
xchg
sub
cmpl
xor
ret
cmpsl
hlt
pop
cmp
inc
inc
pop
pop
sbb
mov
loope
lahf
jno
loopne
adc
stc
popf
sub
insl
repnz
stos
push
adc
and
rorl
cld
xchg
fs
inc
stos
mov
rcrl
divb
adc
dec
xchg
adc
dec
xchg
jbe
daa
adc
imul
jge
cmp
enter
add
shrb
arpl
or
xchg
sarl
cmp
inc
jmp
or
push
bound
jns
push
cmp
xor
xchg
jb
std
xchg
jae
dec
fmul
ror
dec
in
stos
sbb
subb
out
inc
and
jge
or
aam
sub
hlt
rorb
es
popf
mov
mov
int
call
js
inc
lret
add
jae
stos
ja
in
cmc
cmp
xchg
pop
roll
push
ret
lcall
or
and
insb
add
test
cltd
popa
mov
out
adc
sahf
add
inc
icebp
lret
popa
and
and
test
mov
and
into
fstpl
lret
xor
xchg
add
pop
imulb
call
cmp
xchg
lcall
test
push
push
cmp
rcll
test
mov
jle
pushf
xchg
push
es
in
cmp
pop
ljmp
jne
lret
scas
adc
mov
pop
push
jne
push
imul
jge
fwait
mov
testl
rcrl
lds
jl
repnz
and
lods
mov
fdivs
sahf
sarb
movsb
jg
jg
mov
andl
addr16
xchg
out
loop
inc
sub
xchg
jle
add
inc
es
jnp
mov
inc
loope
add
sti
pop
fdiv
cli
arpl
clc
cmp
xchg
fists
add
mov
jp
gs
mov
mov
pusha
cmp
cmp
pop
xlat
mov
or
sti
cmpsb
ljmp
and
leave
in
and
dec
std
mov
inc
lock
xor
jno
rcl
pop
stos
cltd
sbb
xchg
leave
add
std
push
jecxz
xchg
jmp
mov
push
sbb
lock
mov
lods
into
ret
mov
mov
movsb
in
lcall
sbb
sub
lods
xlat
xor
loop
iret
mov
in
popa
pop
repnz
adc
adc
aas
call
cmp
and
cmpsb
mov
sahf
cltd
and
push
jecxz
inc
sarb
mov
stos
xchg
fdivs
cld
mov
push
mov
jnp
or
jb
je
lcall
adc
xorl
pop
das
fwait
or
inc
les
out
xor
sti
mov
lea
mov
rcrb
sbb
add
push
dec
adc
rep
int
xchg
fucomp
aad
cmpsb
rcrl
daa
mov
adc
jp
inc
repz
adcl
mov
ret
sbb
test
or
mov
mov
jecxz
leave
push
mov
cmpsl
fmull
insl
mov
add
xchg
xchg
fsubl
xlat
aas
pop
dec
stc
stos
mov
and
std
ret
push
add
pop
mov
pop
ret
fildl
fildll
in
movsb
xchg
ja
mov
shrl
es
les
dec
jbe
repnz
xchg
dec
and
mov
xor
cwtd
xchg
mov
frstor
fisubrl
xor
pop
mov
int3
mov
imul
dec
xchg
pop
js
cwtl
mov
dec
shll
mov
sbb
mov
pop
aas
mov
idiv
inc
int
mov
aaa
loope
ret
or
jnp
leave
xor
adc
insl
out
shrb
lds
inc
mov
iret
mov
sub
enter
sub
mov
adc
adcb
sub
fstpl
sti
mov
pop
shll
pop
add
cmp
adc
xchg
fs
add
ror
rorb
push
pusha
mov
pop
jae,pn
jg
mul
aam
outsb
dec
and
push
repz
push
jp
push
jb
dec
cmpl
sbb
outsl
lahf
xchg
inc
pop
fcmovu
and
mov
fistpll
lea
test
xor
imul
sahf
enter
das
sarl
outsl
stc
jo
inc
lret
push
push
ja
test
and
sbb
out
shll
in
mov
sbb
jae
and
dec
cmp
mov
and
mulb
out
xor
imul
ret
mov
or
and
or
hlt
cld
ficomps
dec
in
scas
sahf
rclb
sbb
bound
fs
imul
insb
mov
add
pop
cmp
xchg
int
xor
rorl
data16
and
jb
sbb
fwait
sub
inc
jo
or
fwait
or
in
ja
pop
dec
adc
or
inc
pop
cmp
xchg
or
int
fwait
push
test
jg
xchg
popf
mov
jecxz
out
mov
iret
jnp
das
dec
pop
lcall
insb
adc
cmp
sahf
imulb
sub
addl
dec
adc
pushf
sub
mov
jmp
adc
shrl
jp
mov
inc
dec
and
sbb
hlt
inc
mov
pop
or
mov
sbb
into
test
cltd
rcll
mov
pop
das
pop
pop
and
mov
xchg
add
outsl
rdpmc
jg
pop
or
pop
into
push
push
mov
loope
es
add
mov
push
xor
pop
enter
pop
js
mov
es
jl
movsl
adc
xchg
jmp
xchg
push
push
test
jmp
cmp
movsl
or
incb
mov
or
loop
dec
movsb
sub
pop
loop
add
fbstp
aam
add
push
push
and
mov
add
adc
push
dec
push
pop
loopne
aaa
xorb
cltd
pushf
bound
out
mov
lds
insl
mov
push
jle
pushf
or
icebp
stos
add
sub
inc
inc
adc
pop
xchg
stos
imul
std
xchg
aas
push
mov
xchg
adc
push
pop
nop
ret
sub
xchg
popa
shr
imul
imull
jge
js
jbe
insb
mov
cli
cmpsl
pop
lcall
cmp
mov
outsl
push
sub
cmp
cmp
pop
lret
mov
mov
aas
or
pop
je
cltd
int3
daa
mov
inc
lods
scas
loope
ds
cmp
sbb
push
test
sbb
mov
sarl
shlb
hlt
lret
or
std
lea
aam
jp
adc
xor
shlb
das
push
xchg
int3
repnz
gs
dec
imul
repnz
idiv
add
insb
mov
cmpsb
mov
push
nop
rcr
subb
pop
push
test
jne
sbb
or
add
mov
pop
in
add
hlt
imul
sub
lcall
dec
outsl
je
lock
and
rcr
sti
and
cltd
xchg
jbe
pushf
cwtl
xor
add
fidivrs
push
fldl
add
cmc
scas
ljmp
nop
xchg
and
push
daa
jno
test
fildll
pop
push
int3
aaa
mov
dec
les
adcl
mov
shl
bnd
cmc
jbe
stos
into
and
jo
fldt
xchg
inc
and
inc
in
cltd
pop
xor
filds
aam
lods
xor
subb
fisubrs
ja
mov
rcll
gs
cmpsl
pop
xlat
dec
cmc
cld
cmpsb
mov
jo
and
dec
movsb
enter
push
sahf
jne
inc
inc
mov
dec
cmpsb
jb
push
rcrb
ret
xor
ja
rolb
addr16
sbbb
jp
jl
cmp
and
popf
jbe
loop
inc
jge
jg
mov
adc
or
adc
into
and
icebp
push
subb
movsb
adc
jo
sbb
out
lea
mov
push
pushf
call
jp
clc
mov
dec
aam
fmull
lret
xor
fwait
je
cmc
stos
les
mov
fcompp
inc
popa
test
lcall
je
int3
pop
inc
js
repnz
call
pop
call
leave
iret
das
in
std
jae
inc
jbe
filds
or
or
fisttpll
dec
inc
inc
xchg
cltd
ss
into
rcl
sub
jg
imul
enter
mov
xchg
inc
lds
sahf
sbb
in
sub
push
icebp
pop
mov
sub
mov
cmp
xchg
add
jmp
stos
adc
cwtl
cmp
test
xlat
lret
inc
cmp
jae
mov
dec
cltd
pop
xor
leave
mov
lock
dec
adc
scas
sub
iret
dec
sub
jne
pusha
pushf
push
stc
pop
dec
cltd
inc
pop
xchg
xchg
in
pop
push
cmpsl
popa
lds
jmp
int
jb
push
xchg
and
cmp
cmpsl
lea
xor
mov
loope
pop
xchg
ds
loope
mov
addr16
orb
fdivs
out
cmc
and
insb
jmp
lods
jg,pn
mov
outsb
aas
gs
xor
es
test
arpl
rcrl
cmc
fiaddl
data16
je
mov
adc
lock
jmp
cmpsb
dec
and
lods
dec
push
cmp
jo
scas
imul
pop
xchg
fidivs
sub
or
mov
shrl
hlt
aaa
sub
and
and
jo
inc
and
movsl
sbb
das
lea
insl
rcrb
or
lds
into
adc
fstps
insl
lods
ret
imull
rorb
scas
lcall
xor
mov
sbb
sti
jbe
xor
and
jne
or
sub
fs
daa
enter
pop
mov
pop
int
sti
in
mov
outsb
pop
mov
lahf
adc
xor
xor
xchg
sbbb
int3
jnp
mov
or
inc
or
addr16
push
fisttps
mov
leave
aas
andb
stos
and
fwait
leave
mov
out
sahf
lcall
dec
and
roll
out
ja
jo
push
mov
lock
int
push
loope
movsl
adc
jecxz
inc
push
add
dec
xchg
jmp
mov
adc
mov
ret
outsb
add
fldcw
cld
daa
je
adc
xor
test
clc
loop
out
jge
jo
sbb
push
sbb
hlt
lret
movl
stos
jae
dec
push
inc
ss
and
cmp
jmp
and
lret
movb
fisttps
xchg
mov
adc
dec
ret
lahf
sub
pop
cmp
sub
aaa
dec
shll
xchg
dec
jbe
cmp
enter
pushf
shll
sub
pop
scas
iret
pop
dec
mov
rorb
push
jecxz
dec
sbb
sbb
sub
dec
adc
icebp
xor
adc
mov
push
xlat
lock
xchg
add
mov
xor
or
sti
mov
pop
outsb
add
or
xchg
add
mov
out
fwait
mov
cmp
pop
int
xor
mov
lods
mov
lds
mov
adc
iret
and
lret
hlt
in
out
jle
lret
pop
iret
neg
sbb
fidivl
xlat
mov
ror
and
xor
pop
xchg
cmpsl
xchg
inc
aad
fistl
imul
lret
sbbb
dec
fistpll
fmuls
sbb
jns
movsl
xor
jne
jo
and
fs
adc
loopne
sbb
fsubrl
xchg
mov
dec
mov
xchg
push
es
lcall
je
clc
loopne
cmp
adc
jmp
in
hlt
mov
and
repnz
lahf
jae
bound
sbb
add
hlt
pop
test
dec
and
stos
fnstcw
lods
repnz
fadd
enter
pushf
jo
lods
jg
pop
xchg
mov
add
cmc
jbe
mov
add
stc
mov
xor
dec
leave
jle
jle
cmp
xor
lods
and
lahf
pop
add
adc
adc
mov
cmp
outsb
sarl
sbb
adc
dec
stc
cmp
sbb
mov
xchg
test
fadds
mulb
mov
mov
jae
mov
xchg
and
push
mov
cmpsl
out
push
push
or
out
test
std
push
imul
sub
int3
mov
hlt
cmp
nop
jnp
adc
out
lret
and
fdiv
test
test
mov
or
mov
stos
leave
adc
cmc
in
xchg
imul
push
addr16
jmp
mov
shl
out
repz
push
subb
sar
in
iret
lcall
jne
pop
lret
or
call
test
mov
sub
sub
push
push
das
shlb
fistl
mov
js
ss
jmp
into
out
lods
mov
test
xchg
fdivrl
sbb
xchg
dec
out
cmp
popf
push
cmpsb
push
sub
movsb
push
fldl
or
leave
dec
add
test
cltd
lods
xor
xor
jbe
push
adc
push
loope
mov
push
mov
scas
mov
movsb
jne
mov
fiaddl
scas
int
sbb
into
repnz
and
pop
sarb
mov
aad
int3
mov
imul
leave
inc
lret
mov
mov
fiaddl
dec
mov
sbbb
rcrb
out
push
rcr
mov
inc
mov
lahf
inc
mov
adc
push
pop
sub
mov
call
xor
xor
sbb
mov
fdivrs
ss
xor
add
mov
cmpsb
add
stos
jbe
es
movsb
ret
or
pushl
in
pushf
int
dec
xor
rorl
adc
or
push
inc
rclb
adc
in
sub
xor
sub
jnp
jp
lahf
sbb
in
mov
ss
pop
imul
scas
push
inc
dec
je
pop
mov
test
int3
fs
sub
pusha
sti
hlt
scas
js
lcall
push
sub
rcll
dec
pushf
fists
pop
out
std
divb
std
call
push
and
xchg
mov
sbb
mov
ret
insb
xchg
mov
and
nop
push
jb
or
xchg
pop
stc
ja
add
ret
sbb
outsb
outsl
add
cmp
add
mov
repz
cmp
test
test
push
inc
cmp
xchg
xlat
popf
push
and
pop
outsb
sbb
cmp
jl
mov
xor
jecxz
aas
mov
pop
dec
mov
mov
out
rcll
mov
rcl
lret
stc
add
flds
adc
pop
mov
adc
iret
xchg
jbe
fstps
push
imul
xor
mov
fsubl
push
inc
icebp
adc
adc
andl
xor
les
movsb
jle
call
mov
inc
pop
fmulp
in
sub
dec
sahf
aaa
add
shll
or
test
and
subl
push
or
adc
mov
test
sbb
cwtl
sbb
bnd
jae
stos
int3
mov
pusha
sti
mov
sarb
icebp
mov
jae
lds
repnz
out
cmp
adc
jae
or
lret
xchg
movsb
jbe
stos
lods
xorl
dec
clc
insb
stc
fldcw
adc
insb
jns
pop
fstps
xor
std
xlat
or
rcr
pusha
scas
into
sbb
and
icebp
and
sbb
push
lods
frstor
pop
dec
mov
sub
push
int
leave
mov
insl
sbb
roll
mov
lcall
mov
mov
shll
mov
movsl
popf
mov
pusha
cmp
push
repnz
decl
in
rol
pop
sbb
xchg
xchg
in
dec
sbb
mulb
addl
sub
cmpsl
inc
push
ret
cmc
mov
or
out
out
add
dec
jno
addr16
inc
rol
xchg
pop
xor
mov
jle
test
inc
fcmovnb
xchg
adc
pop
pop
lods
mov
shll
push
test
in
shrb
push
cmpsl
fsubl
repz
xor
add
cmpsb
dec
shl
adc
xchg
repnz
in
push
push
scas
xchg
cmp
xor
dec
or
xchg
mov
cmp
dec
sbb
icebp
leave
dec
test
dec
bound
or
lods
xchg
xor
or
imul
xor
pop
inc
les
cmp
lods
cld
mov
lahf
cmpsb
lods
rcr
cmpsl
jg
mov
lcall
add
push
scas
mov
fldl
aas
sti
xchg
movsb
rol
add
test
popa
add
idiv
adc
jne
push
and
divb
xchg
push
mov
sbb
ret
mov
jnp
inc
mov
push
jns
sahf
or
ljmp
adc
fisubl
data16
fwait
bound
negl
loopne
mov
mov
pop
mov
lods
jmp
pop
or
sub
and
aaa
xor
push
cmp
mov
js
shlb
jo
dec
popf
lcall
hlt
stos
and
fmul
pop
sbbl
ds
ljmp
adc
roll
push
inc
sub
or
test
mov
clc
ss
test
or
test
shl
gs
cmpsl
and
or
dec
mov
mov
mov
repz
out
std
cmc
aaa
jl
out
xor
shrl
push
ljmp
cmp
mov
pop
out
dec
push
mov
adc
out
addr16
adc
lods
and
jns
add
xor
push
push
mov
in
dec
enter
push
incl
xchg
out
add
jae
js
sbbb
jb
movsb
push
fs
or
scas
sub
xor
mov
cmpsb
out
dec
or
xchg
aas
lret
push
jge
stos
inc
imul
inc
jge
push
cmp
mov
mov
dec
test
inc
mov
lahf
dec
cmp
btrl
incb
mov
and
shll
jmp
xchg
pop
xchg
pop
sbb
ljmp
mov
inc
xor
mov
and
cli
dec
subl
mov
imul
adc
test
scas
cltd
sub
out
dec
xchg
pop
push
lret
push
les
int
mov
xchg
dec
adc
outsl
adc
adc
dec
dec
push
push
or
sub
jo
ss
jge
dec
inc
push
sbb
and
ss
aas
int3
popf
xchg
or
xchg
and
adc
xchg
jae
cmovge
lahf
sti
sarb
jg
add
inc
das
mov
add
and
scas
sub
dec
jmp
in
add
sahf
mov
xchg
in
addb
cmc
jmp
nop
mov
test
aam
ds
ret
iret
and
in
add
xchg
pop
out
scas
xor
jmp
lods
test
call
push
mov
bound
adc
adc
lock
movsl
cli
cmp
push
jp
repnz
push
jge
int3
je
mov
lahf
inc
inc
cmp
push
insb
popa
or
das
xchg
xorb
push
xchg
dec
xor
cltd
pop
fwait
xchg
cs
bound
sub
sub
inc
push
ss
sbb
mov
out
push
mov
sbbl
int3
pusha
add
out
inc
push
std
mov
cmp
cwtl
mov
mov
out
in
gs
test
mov
or
mov
in
scas
enter
pop
jb
jnp
dec
inc
bound
inc
push
xchg
mov
dec
addr16
mov
push
xor
loope
sbb
ljmp
faddp
adc
js
jg
mov
mov
dec
adc
push
and
shr
cmp
test
mov
and
and
movsb
jecxz
shrl
in
jp
or
xchg
mov
roll
fimull
and
daa
mov
xlat
fisttpll
sub
xorl
mov
cs
sbb
or
xchg
lea
mov
jmp
stos
inc
jnp
jns
aam
jno
icebp
jmp
add
test
add
cwtl
inc
sub
jnp
inc
mov
fnstsw
inc
mov
bound
pop
push
pop
int3
stc
cmpsl
in
fwait
gs
push
mov
out
sahf
pop
rcll
add
sub
loope
mov
out
scas
push
js
test
lea
sub
cmp
sbb
mov
movb
xor
xlat
cmc
loope
sbb
lahf
aam
stc
cltd
mov
daa
or
and
repnz
dec
mov
dec
subb
and
cmc
mov
xchg
fucom
and
bndldx
mov
adc
pop
jb
fisubl
rorl
push
dec
call
inc
adcl
jle
pop
and
inc
add
cmp
dec
lret
xchg
sub
mov
iret
mov
es
xor
mov
enter
sbb
cli
inc
or
cwtl
dec
pop
add
aas
pop
adc
push
les
pop
sub
mov
mov
inc
iret
ljmp
jo
rorl
jb
fimuls
insb
clc
into
incl
cltd
push
jb
xchg
repnz
mov
xchg
add
frstor
mov
sub
rclb
lret
gs
js
mov
ss
or
push
ss
call
sbb
sahf
jno
scas
sbb
insl
dec
add
push
jb
push
cwtl
loopne
cs
fsubs
mov
test
addb
aas
in
outsl
cld
gs
loope
fstps
adc
xchg
xchg
pushl
jo
lahf
xchg
sbb
or
and
fstp
pop
and
sar
in
sbb
lahf
xor
and
mov
add
ss
mov
add
mov
and
dec
cmpsb
sbb
mov
adc
mov
mov
enter
adc
clc
rclb
scas
out
clc
enter
icebp
mov
pop
jne
xor
jno
push
inc
int
and
mov
sbb
movq
andl
shlb
sbb
clc
test
push
cmp
out
pop
fcom
sar
mov
jns
pop
iret
mov
inc
mov
roll
lcall
js
or
call
or
outsb
mov
fists
jo
ljmp
pop
inc
mov
negl
cmp
fucomp
movsb
push
add
pop
inc
fiaddl
mov
pop
popa
push
push
js
sub
repz
js
inc
repz
lods
outsl
pop
jne
ljmp
or
and
dec
daa
mov
subb
sub
loop
mov
daa
adc
or
xor
aad
cwtl
iret
sub
imul
lahf
add
enter
sbb
scas
dec
mov
insb
sub
or
test
ret
mov
add
bound
jae
scas
scas
out
aad
cmp
dec
xchg
outsl
lods
pop
mov
mov
gs
out
leave
mov
out
adc
cltd
cmp
sub
cltd
sbb
rcl
cltd
mov
adc
mov
fwait
mov
adc
clc
les
mov
repz
mov
cmpb
fucom
repnz
call
mov
pop
cmpb
pop
lcall
push
jg
les
or
cmpsb
xor
jl
jns
and
jmp
inc
jp
out
ljmp
sub
sub
mov
int3
pop
sub
dec
aas
push
inc
mov
pop
sub
pusha
xchg
xlat
in
pop
mov
cs
jno
out
and
push
aam
repz
sub
fcmovu
mov
ror
mov
sub
pop
sub
jno
aam
jae
stc
sub
pop
repnz
cs
movsl
fucom
enter
out
sub
push
nop
cmp
stos
sub
popf
addr16
pusha
imul
xchg
ja
push
movsl
jp
or
xchg
mov
pop
adc
cmpsb
out
dec
xchg
pop
push
xor
mov
movsl
add
push
add
xor
push
cld
roll
xlat
addb
sbb
ror
mov
mov
enter
in
scas
dec
fwait
aad
out
sub
sub
ret
cmpsl
ljmp
mov
in
repnz
and
jae
push
daa
imul
xor
shlb
popf
cmp
mov
sbb
xchg
shlb
insl
lds
mov
test
adc
xor
push
xorb
ret
call
ror
jle
rcrl
push
add
inc
inc
stc
sub
lret
cwtl
mov
lock
js
xchg
loopne
mov
packsswb
dec
mov
jp
popf
mov
scas
clc
sub
iret
fdivrp
dec
pop
lret
pop
comiss
inc
sub
movsb
cmp
sub
in
xor
aam
aad
subb
shrb
call
in
movsl
stc
sti
dec
or
jl
pop
lret
xor
mov
lahf
push
mov
shll
daa
je
call
mov
arpl
mov
mov
loopne
mov
sahf
repz
jecxz
push
out
push
shrd
or
sti
mov
add
inc
push
ret
out
arpl
lret
movsb
imul
fisubrl
aam
jmp
lret
push
and
andl
push
mov
adc
jg
rorl
loope
dec
inc
cmp
xor
cmc
lea
push
in
ret
dec
jecxz
aas
mov
hlt
incl
inc
push
xorb
addr16
pop
pop
and
cmp
fsubl
subl
push
aad
cs
xorl
xor
push
mov
sti
cmpsb
mov
lret
add
jno
pop
jno
pop
adc
mov
lea
lea
mov
scas
xor
test
xlat
sub
dec
testb
cmp
adc
std
adc
push
inc
add
dec
dec
xchg
xor
lods
in
adc
mov
jno
hlt
push
mov
notb
xchg
pop
push
repnz
jns
sub
add
pushf
and
rcl
decl
movsb
ficoms
pop
mov
mov
mov
cmc
clc
mov
movsl
or
sti
pusha
dec
push
mov
push
or
das
test
lds
mov
sub
sub
ljmp
scas
jno
sub
add
add
push
sub
orb
xchg
mov
dec
popa
add
xchg
and
push
out
mov
lock
sub
nop
je
mov
mov
nop
dec
in
dec
fiadds
dec
mov
fs
pop
xor
pop
leave
inc
into
sub
movsb
rorb
testb
movsb
mov
popf
add
out
push
jecxz
cmp
xor
mov
repz
adc
mov
cs
int3
test
test
scas
pop
aad
fmul
mov
xor
lahf
xchg
add
je
inc
aaa
mov
or
ds
xor
daa
mov
jecxz
jnp
xorb
out
insl
mov
data16
mov
std
mov
jo
and
jo
shrb
adc
fcompl
testb
or
push
enter
mov
adc
push
out
cmpsb
cli
ret
xchg
pop
xchg
dec
pop
mov
shl
int
jo
xchg
add
out
mov
jmp
sbb
not
adc
mov
mov
and
jl
push
lea
push
adc
add
mov
andb
sti
mov
data16
adc
mov
cmpsl
push
or
sub
test
test
jne
loop
out
or
in
sahf
adc
mov
pop
pop
shrb
rorb
arpl
cmp
push
cmp
out
test
mov
lods
jno
inc
or
jp
xor
cmpsl
xor
inc
mov
cmp
mov
sub
je
sahf
push
arpl
mov
mov
pop
popa
lahf
xchg
insl
scas
jb
add
in
nop
aas
xor
lcall
ja
gs
and
cmpsb
cmp
jmp
and
mov
fs
popf
mov
loopne
dec
arpl
fimuls
test
pop
push
push
stc
loop
push
cmp
lock
lea
loopne
repz
imul
rolb
xor
cmp
or
push
and
loope
dec
mov
push
cmp
test
into
sahf
leave
cmpsl
les
inc
mov
ss
loopne
jae
setle
sbb
and
fimull
inc
cli
fadds
pop
or
fs
cmp
mov
mov
cli
jbe
inc
test
xor
fisubl
jb
jnp
fidivrl
mov
mov
or
mov
jne
divb
sub
push
or
ret
repnz
das
jmp
sahf
loopne
or
leave
pop
data16
pop
fsubp
in
jge
mov
dec
lahf
repnz
repz
xor
in
enter
xchg
es
iret
cmc
test
and
in
dec
jnp
adc
jae
into
push
shrb
push
sahf
jl
leave
and
je
push
pop
mov
pop
or
adc
push
fiadds
faddl
xchg
popf
in
bound
jnp
imul
xchg
or
mov
rclb
xchg
and
xchg
dec
mov
mov
fistl
jmp
add
mov
sbb
xor
xchg
data16
cltd
xor
lret
push
jne
mov
inc
adc
cmpsb
js
lock
shl
mov
icebp
imul
dec
sbb
outsb
cmp
mov
sbb
pusha
sarb
int3
cmp
mov
mov
mov
into
into
not
mov
sub
mov
movsl
out
in
icebp
syscall
lds
push
movb
jns
dec
in
in
inc
lcall
scas
cmp
inc
hlt
mov
jns
jno
xchg
pop
xorl
leave
and
push
nop
xor
cmp
mov
aam
adc
and
and
daa
dec
lret
xchg
push
lds
xorb
inc
cwtl
or
ret
mov
aam
in
inc
lods
aaa
nop
ds
cmp
es
out
fwait
jnp
jmp
mov
in
sbb
out
aam
test
inc
in
mov
lds
lretw
push
xchg
adc
push
mov
fistps
push
xor
cmp
mov
arpl
test
mov
cltd
push
pop
fistps
push
mov
fbld
sarl
pop
mov
icebp
push
shl
lds
inc
adc
add
shll
into
mov
sub
sbb
cmp
mov
pop
mov
lea
repnz
movsb
cmc
out
aad
cmp
mov
jecxz
pop
push
ret
bound
xchg
push
aad
stc
ds
mov
sbbl
mov
in
lret
inc
and
jle
mov
insb
out
or
jno
inc
jno
jp
pop
fisttpl
in
lea
adcl
mov
and
sbb
fisubrl
shlb
stos
mov
add
jmp
lcall
lods
xchg
movsl
fcoml
cmp
hlt
insl
adc
cmp
sbb
push
and
mov
inc
dec
imul
sub
adc
sbb
aas
mov
cmp
add
dec
aas
jge
decb
data16
shll
icebp
outsl
movl
lcall
loopne
and
or
mov
mov
mov
test
cmp
inc
stos
iret
mov
pop
test
dec
movsl
pop
insb
xchg
lea
sub
mov
mov
andl
inc
mov
fwait
mov
jmp
sbb
test
into
div
sar
in
test
int
xlat
inc
xchg
cmp
or
and
sub
xchg
cmpsl
add
cmpsl
jg,pt
push
mov
cld
adc
push
jns
enter
sbb
outsl
mov
fwait
xchg
mov
push
mov
divb
xchg
mov
xchg
in
cmp
cmpsl
sub
jae
test
loop
push
inc
out
inc
xor
imul
outsb
xor
adc
inc
dec
mov
cwtl
lods
lods
stos
ret
fsubrs
and
iret
outsb
add
dec
clc
jp
outsb
cld
movl
xchg
add
add
jae
loopne,pn
ret
jl
sub
jmp
movsl
xchg
mov
mov
daa
cmc
das
out
cli
and
hlt
test
sbb
sub
push
icebp
mov
sub
dec
pop
and
pop
mov
repnz
ficompl
mov
cmp
mov
in
lret
and
movsb
add
add
dec
sbb
mov
xchg
je
cwtl
nop
je
push
sbb
aam
dec
outsl
mov
ret
repnz
jl
aaa
add
out
sub
sbb
sub
arpl
in
scas
push
js
decl
mov
shl
fucomp
mov
sti
mov
sub
xlat
or
sub
repz
dec
das
jno
fnstsw
repnz
pop
mov
pop
cltd
adc
push
shrb
js
cli
sbb
adc
or
jnp
les
aaa
insb
push
jnp
mov
dec
mov
pop
jmp
and
dec
pushf
aam
dec
hlt
add
xor
or
pop
imul
mov
xchg
test
push
dec
mov
mov
out
neg
or
aam
mov
pop
sub
xchg
lods
pop
push
shrb
cld
dec
add
add
add
scas
push
mov
jno
in
stos
call
mov
and
mov
pop
das
insl
and
adcl
mov
inc
sub
and
aam
push
cmpsb
mov
mov
mov
lds
cwtl
test
xchg
hlt
mov
jae
lret
repnz
enter
xchg
rcrl
data16
xchg
dec
je
stos
addr16
dec
ret
loope
popa
rorb
pusha
movb
cmp
pop
jae
mov
fidivrl
or
jb
imul
push
mov
repnz
mov
ss
cltd
punpcklwd
negb
in
iret
mov
mov
push
out
sbb
in
fsts
xor
imul
inc
push
cli
mov
fwait
mov
pop
lea
scas
push
mov
inc
adc
or
push
das
test
test
movsl
dec
jne
mov
negb
loopne
xor
xchg
dec
xlat
sti
lcall
cmpsl
je
inc
mov
repz
pop
lahf
lock
inc
dec
popa
mov
adc
imul
add
inc
sub
or
pop
gs
mov
mov
sub
or
fldln2
add
xchg
in
dec
ret
push
pop
aas
inc
inc
pop
push
out
outsb
dec
sbb
or
std
shll
mov
stc
inc
xchg
mov
and
repnz
lret
aaa
hlt
jg
inc
or
in
push
fnstsw
mov
xchg
push
out
pop
imull
cli
out
adc
ret
adc
xchg
adc
adc
cld
adc
fs
adc
call
dec
inc
jne
int
dec
mov
push
lods
xorps
mov
pop
test
fcom
lret
cmp
mov
in
rclb
adc
mov
adc
mov
push
cwtl
daa
dec
out
cld
cli
es
jb
mov
adc
clc
push
in
pop
loop
outsl
xlat
mov
ja
sbb
jg
scas
mov
addb
mov
mov
pushf
incl
jl
loopne
jno
fs
popf
in
and
dec
xchg
sbb
or
rorl
outsl
es
or
cmp
paddq
aas
jb
aad
add
lock
fisubl
aam
pop
pop
ss
xorb
fcoms
pop
shlb
xor
inc
sub
test
dec
stos
loope
mov
mov
xlat
jecxz
into
sbb
push
cld
cmp
stc
sub
outsl
imul
repnz
ja
arpl
int3
jae
mov
fistl
cmp
stc
lea
add
ss
in
and
push
adc
shlb
push
test
push
test
icebp
scas
arpl
cmp
dec
aaa
arpl
and
shll
movsl
ret
or
xchg
lods
cmp
xchg
inc
stos
sub
sbb
shll
das
jg
xchg
mov
icebp
cmpsl
and
pop
adc
enter
stos
ja
mov
shrl
and
outsb
jmp
push
aas
daa
cmp
test
fadd
out
arpl
sub
ret
ret
gs
dec
mov
jp
fmuls
mov
jo
dec
mov
xor
aam
jae
cli
popf
lea
adc
cmp
or
cli
lock
int3
call
adc
ret
sbb
fidivrl
andb
mov
popa
enter
inc
and
cmp
push
dec
cmp
pop
mov
sbb
ret
mov
jmp
sub
and
sub
dec
push
mov
loopne
lret
sbb
jmp
fs
ljmp
pop
mov
cmpsl
in
mov
sub
pop
ret
out
stos
jb
aam
out
sbb
add
inc
push
inc
mov
icebp
push
arpl
cmc
sbb
xchg
jno
jno
stc
mov
pop
sahf
jns
ds
jge
inc
out
shr
dec
jns
add
sub
imul
xor
push
jle
inc
test
mov
pop
idivl
mov
jg
jno
mov
fisubrs
addl
mov
arpl
fdivl
push
mov
sti
insl
sub
jge
into
mov
add
xor
mov
jae
mov
jl
hlt
dec
cltd
pushf
icebp
mov
fbld
pop
mov
sahf
fildll
je
push
scas
and
clc
jp
jne
mov
lret
fbld
jnp
nop
iret
inc
filds
subl
ficompl
jge
clc
fimuls
iret
jge
test
push
mov
dec
xor
xchg
movsb
sub
push
xchg
push
jb
pop
mov
movsl
aaa
sbb
sbb
and
out
push
popa
cli
das
sbb
shrb
xor
dec
dec
mov
xchg
mov
insb
lret
or
mov
mov
popf
adc
xchg
mov
lock
xchg
out
stos
adc
das
rclb
or
lahf
push
mov
popf
sbb
mov
lea
xchg
cli
jle
and
loop
push
dec
xlat
repnz
jb
mov
movsb
ss
cli
shrl
xchg
push
scas
dec
rolb
adc
inc
in
dec
data16
jge
xchg
xchg
or
pop
mov
in
dec
movsb
subl
gs
add
outsb
xlat
jle
adc
pop
jp
pop
repnz
in
loop
xlat
addb
pop
dec
pop
mov
or
cmp
rcrb
xchg
scas
push
fldcw
sbb
icebp
js
xchg
pop
daa
mov
dec
test
dec
mov
lea
ds
dec
loop
push
loop
iret
sbb
mov
fnstsw
pop
jns
mov
ret
test
sbb
pop
and
daa
mov
hlt
adc
int
mov
std
fisubrl
pop
jnp
push
fnsave
insl
xchg
push
sbb
fstps
xchg
rcrl
movsb
nop
movsl
xor
lcall
jmp
dec
xchg
inc
push
jg
daa
xchg
jp
jno
push
divl
out
or
pushf
pusha
jne
adc
add
jne
hlt
rcrb
xchg
ret
scas
mov
cmp
insb
xchg
hlt
testb
divb
jg
push
cmc
push
dec
loope
mov
push
inc
int3
repnz
xor
aad
fcomp
lock
fiadds
inc
jmp
mov
test
rcrb
mov
movsw
mov
push
fmuls
jg
out
pop
andl
popa
sub
outsl
cmpsb
cli
xor
jg
add
stos
pop
jl
xor
adc
push
test
test
jb
lods
out
scas
lea
and
cmp
sbb
pop
jne
and
out
or
int3
cmpsl
pop
mov
inc
jbe
inc
jbe
xor
jmp
fistpll
mov
movntq
aam
cmp
mov
jnp
sub
popf
sahf
in
rol
ficompl
call
cwtl
and
sbb
movsl
push
lcall
fisubrs
sub
mov
je
add
and
cltd
push
mov
addb
iret
pop
or
out
fdivp
cmc
cltd
js
movsl
mov
lods
lds
xchg
cmp
subl
insl
inc
cmpsb
pop
jle
lds
outsl
mov
aas
sbb
jno
jmp
sub
mov
rorb
rolb
and
inc
push
xchg
sub
into
movsb
mov
sub
push
push
std
shrb
jno
or
cs
xlat
addl
enter
stos
cmc
outsb
inc
imul
mov
push
ds
mov
aad
sbb
xor
dec
scas
into
je
or
stos
cmpsl
xchg
pop
jae
mov
push
sbb
sarl
jg
mov
mov
pop
xlat
jge
int3
aad
loop
inc
scas
add
push
ret
push
sub
into
aam
aaa
and
add
adc
mov
loop
icebp
repz
xchg
and
fmuls
cltd
xor
sahf
call
jo
mov
in
roll
aad
fwait
cmp
jae
in
pop
aaa
or
scas
ja
aas
faddl
addr16
cmpsb
xchg
xor
jmp
imul
lods
mov
iret
out
mov
push
inc
add
jnp
jbe
lahf
jl
pop
test
scas
cmp
xchg
into
mov
lret
lock
sbb
repz
iret
outsl
mov
leave
adc
clc
sbb
std
std
ret
jnp
mov
cmpsl
fsubrl
sbb
or
sbb
outsb
scas
ds
inc
pop
notb
jmp
popl
push
dec
xlat
nop
mov
pop
push
adc
fbld
fsubs
sbb
inc
mov
testl
gs
xor
or
lret
pushl
fdivs
mov
lret
shlb
jl
jle
push
push
pop
fs
adc
aaa
es
xchg
and
inc
outsb
mov
xor
sub
insb
xor
sub
sbb
mov
jnp
jo
sbb
insl
xchg
aas
jg
push
out
xor
lret
js
sub
mov
test
adc
mov
mov
mov
inc
push
mov
or
in
dec
sub
out
in
adc
or
pop
rorl
iret
jl
rcll
subl
add
push
ret
dec
adc
mov
dec
orl
sbb
mov
icebp
xchg
shll
cli
jmp
orl
int
outsl
add
or
pop
subb
add
mov
pop
pop
lahf
lods
ror
outsb
xor
xchg
lds
cmpsl
imul
push
inc
repz
inc
sbb
sahf
sarb
jmp
inc
jmp
pusha
inc
insl
stc
jg
jbe
push
cli
pushf
add
or
lods
sbbb
lea
stc
dec
daa
xchg
addl
inc
test
dec
testb
pop
cs
jbe
rclb
testl
xor
out
push
shll
fbld
mov
and
cli
ljmp
or
xlat
or
xchg
sub
in
mov
ljmp
dec
jo
lcall
pop
outsl
cmc
jne
cmpsl
repz
ja
into
add
in
filds
push
mov
pop
pusha
inc
sbb
sbb
or
aad
push
add
xchg
subl
in
bound
push
xchg
inc
arpl
dec
out
mov
jle
or
lds
xor
cmc
adc
add
pop
mov
mov
fcoml
loopne
gs
in
and
lea
js
movsb
push
inc
inc
mov
pop
jmp
pop
faddl
and
sub
xchg
and
cmpb
scas
mov
popf
shrl
jle
mov
jb
cmpsl
cmc
mov
stc
push
rcr
and
push
push
sahf
jb
adcl
rorb
and
xor
lidtl
nopl
jmp
pop
decb
sbb
scas
fiadds
push
sub
test
inc
pop
pushf
mov
sbb
adc
and
int3
addr16
lods
cmc
mov
dec
out
testb
or
inc
sahf
mov
xor
and
add
pop
cs
pop
mov
push
cmp
inc
or
lods
stos
lret
mov
roll
sbb
cmp
fiadds
scas
loope
sub
mov
mov
mov
add
out
mov
push
fistps
add
jle
jae
jl
xor
or
add
outsl
clc
stc
fwait
das
mov
addl
stos
xchg
inc
or
sarl
popf
pop
cli
sbb
lcall
outsw
jns
stos
jle
mov
mov
les
push
ljmp
or
cld
insertq
into
ja
inc
mov
fninit
sub
dec
gs
dec
pop
out
xchg
mov
lret
mov
xor
jnp
push
movsl
pop
inc
mov
cmp
into
or
add
aam
add
mov
and
popf
mov
popa
sbb
out
test
adc
fdivrp
in
sub
clc
cltd
adc
and
outsl
cmp
sbb
fidivs
mov
aam
inc
mov
fidivs
add
adc
dec
mov
scas
mov
into
pop
aaa
es
cmp
scas
std
jp
push
xchg
hlt
outsl
sahf
push
ja
call
mov
ds
push
stc
mov
insl
mov
cmc
push
mov
mov
jb
push
add
and
ds
jl
fcoml
imul
jecxz
lcall
sbb
and
lcall
adc
lds
mov
lock
mov
cld
cmp
int3
testl
insl
inc
lods
cmp
mov
and
out
rcll
or
inc
add
cmp
into
call
loop
orl
jne
or
jae
cmp
mov
mov
mov
call
jmp
outsb
repnz
mov
gs
pop
xor
push
sbb
mov
jb
push
xor
jp
sar
pop
in
mov
in
lods
pcmpgtd
or
add
sub
cmp
mov
lret
lods
or
xchg
stc
adc
mov
cmp
lods
test
sub
mov
sbb
add
jns
lcall
es
cmp
lcall
adc
add
leave
mov
and
div
daa
push
fbstp
insl
or
addr16
inc
enter
jb
dec
lds
fwait
dec
adc
iret
mov
pop
sbb
das
sti
mov
mov
test
sbb
cmc
nop
ja
xor
iret
inc
in
inc
sub
lret
xor
mov
xchg
ror
movsb
stos
dec
xchg
ret
pushl
hlt
xchg
xor
lock
mov
sub
pop
mov
mov
in
shr
cltd
add
mov
pop
push
xor
sbb
sub
cli
mov
pushf
add
mov
xchg
adc
cmp
cmpsl
xchg
and
jo
sbb
push
mov
stos
adc
nop
aas
pop
inc
xor
xor
ret
xchg
shrb
mov
lods
and
add
daa
mov
cmc
mov
bound
loope
mull
lret
xchg
xor
stc
imulb
movsl
xor
imul
loopne
cmpsl
pushf
adc
xchg
mov
out
pop
dec
pop
jns
int
enter
imul
lds
dec
es
pusha
pop
push
mov
and
lret
fucomi
and
insb
xchg
ret
and
inc
mov
roll
out
mov
jle
mov
dec
in
lods
inc
adc
jns
repz
test
inc
je
xchg
leave
sarb
dec
fmul
and
or
cltd
jecxz
fdivp
leave
inc
notl
add
sbb
scas
mov
push
cmpsb
pushf
mov
out
mov
inc
inc
xor
in
cmp
inc
pop
jne
out
inc
and
insb
xchg
rolb
push
jnp
nop
popf
dec
movsl
rorl
xchg
and
rorl
mov
scas
lods
add
xor
ret
xlat
jl
lods
sahf
xor
and
fistpll
cmp
inc
jae
cmpsb
lea
xchg
test
test
cli
into
adc
repz
inc
sub
bound
mov
and
push
jge
rcrl
adc
push
jecxz
inc
or
out
cmp
add
lcall
xlat
les
out
xchg
adc
mov
rolb
cmpsl
rol
xor
shll
in
xchg
pop
dec
subb
inc
jo
dec
and
outsb
sbb
pushf
cld
mov
test
or
fildl
push
gs
sbb
adc
nop
push
and
jmp
mov
dec
jae
fsts
mov
adc
movd
dec
pop
daa
inc
int3
arpl
jb
dec
mov
mov
sub
xorb
cld
popf
fiadds
std
out
mov
shll
push
jnp
aam
push
push
sbb
push
adc
push
jb
sub
addr16
or
push
cmpsb
dec
movsl
xor
scas
lahf
lods
shll
call
pop
aaa
sbb
xchg
adc
filds
jge
out
pushf
das
mov
jge
or
xor
inc
in
dec
mov
js
jae
pusha
fdivl
jno
fldenv
cmp
mov
rcll
std
test
jbe
jg
std
add
ret
add
sarl
cmp
mov
xchg
inc
sub
aam
inc
ljmp
fbstp
fsubrs
aad
or
jo
xlat
aaa
cmp
xor
dec
cmp
sub
or
shl
sub
push
pushf
test
cmp
xlat
adcl
ja
inc
cs
sahf
jo
dec
push
lret
es
addr16
dec
in
int3
scas
rorl
ljmp
enter
sub
sub
cmpl
jg
mov
adc
in
daa
int
inc
add
mov
inc
das
mov
xchg
sbb
cmp
jl
dec
bound
fucomi
pop
add
jo
clc
or
jo
jle
popa
fwait
mov
dec
or
cmp
rorl
movsl
std
data16
xor
in
data16
cli
cmp
jnp
sti
xchg
sahf
stc
int3
xor
mov
xchg
stos
lock
pop
dec
mov
add
bound
mov
pop
dec
xchg
in
lock
clc
pusha
outsb
sub
std
mov
clc
je
dec
mov
cmp
test
pusha
cmp
xor
push
push
adc
cmp
lock
test
adc
es
stos
jmp
insb
push
or
ljmp
shrb
dec
std
ret
cmp
jmp
cmpsl
cmp
int3
xchg
mov
sub
mov
pop
inc
mov
dec
sbb
das
mov
xchg
inc
pop
cmp
mov
dec
pop
adc
push
pop
and
dec
jg
lock
ror
jns
push
cwtl
les
cmp
push
mov
lds
lods
fisttps
cld
call
cltd
int
inc
insl
inc
insl
jp
in
push
sub
push
push
movsb
dec
pop
lcall
addr16
movsb
shl
xchg
sbb
push
dec
or
xor
mov
adc
pop
rclb
test
fistps
jne
adc
fsubs
jg
push
mov
test
xchg
and
int3
mov
shll
cmp
das
mov
mov
cli
jmp
pusha
cmp
cmp
ret
ret
repnz
call
into
loope
jp
arpl
dec
xor
outsb
cwtl
lret
call
ljmp
mov
mov
cld
cwtl
shll
sarb
fstps
lahf
and
or
clc
add
loop
mov
std
sbb
sbb
adc
ss
xorl
je
mov
sub
ss
mov
cwtl
jle
mov
cmp
sbb
jge
lock
andb
in
pop
ljmp
sbb
xchg
popa
test
dec
mov
cld
cmp
xchg
cmp
sbb
ret
imul
sub
adcl
xchg
pop
iret
jno
cmpsl
popf
sbb
xor
sub
mov
sbb
sub
sahf
sub
push
pushf
fadd
and
not
sbb
fbld
mov
mov
cmp
dec
js
mov
stos
lcall
dec
lea
fistpl
dec
cmp
lds
push
pushl
cmp
sti
aaa
lret
shl
mov
pop
add
inc
mov
jbe
push
push
fcomi
pop
push
aam
sbb
and
popf
mov
js
cwtl
jmp
dec
repz
test
jo
xor
jbe
cli
in
leave
call
mov
in
xor
push
mov
cmp
movsb
inc
fisubl
sar
inc
repnz
mov
mov
cmp
out
and
and
sti
push
mov
xchg
nop
or
js
enter
add
jecxz
lret
mov
adcb
das
int
push
lds
pop
aas
mov
mov
and
call
sbb
xchg
out
lea
jnp
push
ja
inc
imul
test
fcompl
fmulp
mov
sbb
jne
outsl
adc
out
mov
inc
sbb
addr16
xchg
push
sbb
out
jnp
fcomps
push
popf
inc
dec
dec
les
scas
stos
adc
add
sbb
cmp
setg
cmovle
jnp
lcall
add
into
into
lret
pop
push
sbb
leave
ja
shr
shrl
xor
adc
jb
test
out
pop
shlb
mov
push
mov
xlat
pop
outsl
pop
js
adc
mov
outsb
dec
sbb
and
add
pushf
in
dec
or
dec
loopne
cwtl
je
mov
mov
repz
jns
push
pop
lret
mov
pop
adcb
inc
lahf
sar
or
and
jge
shrl
pushf
enter
xor
push
out
fidivrl
test
inc
push
pushf
mov
mov
jmp
sub
lea
mov
cmp
xor
call
insb
loopne
cmp
movsl
sbb
gs
add
scas
cmpsb
rolb
xchg
lcall
xor
push
je
xchg
sub
mov
fisubl
inc
inc
in
repz
push
mov
fdivl
data16
in
aam
add
jle
sub
dec
add
fwait
sarl
push
jle
xor
out
xchg
fstpt
sub
or
jae
adc
pop
xchg
in
pop
sbb
jne
imul
data16
lahf
xor
popf
adc
add
ljmp
test
and
cmp
arpl
roll
mov
inc
rclb
xchg
mov
add
popf
mov
lret
dec
nop
movsl
push
adc
jmp
jns
push
movsl
pop
xchg
icebp
outsl
ficoml
sbb
pop
sub
fs
sahf
gs
mov
pop
lret
decl
lret
or
sbb
fwait
jnp
and
adc
xchg
data16
fldl
fs
or
xchg
pop
cmp
push
negb
pop
mov
aaa
jmp
jecxz
jmp
sbb
mov
dec
rcrl
jo
pop
in
xchg
cmpb
in
xchg
popf
rolb
out
mov
nop
movsb
adc
mov
lods
dec
js
cltd
inc
inc
jge
jno
cmp
fcmovnb
pop
stc
lret
sub
scas
leave
add
lds
fidivrl
cld
sahf
or
popa
repnz
pop
xchg
add
xlat
xor
pop
imul
mov
mov
mov
sub
xor
loopne
cltd
pop
in
sbbl
aam
aad
scas
sti
inc
mov
mov
mov
divl
das
xchg
loop
lcall
or
sub
cmp
pop
lcall
adc
mov
sbb
int
jne
pusha
xchg
cmp
or
and
stc
daa
xor
sbb
pop
les
sbb
mov
ret
fstp
jmp
or
inc
sbb
rcrl
icebp
jl
aas
xchg
xchg
ljmp
sbb
cli
cs
ss
or
dec
insl
xor
out
sub
fsub
icebp
inc
ljmp
sti
sbb
mov
dec
xor
and
pop
repz
cmp
cmp
cld
jo
cmp
push
out
mov
adcb
inc
sub
push
push
cli
mov
dec
addb
dec
add
sbb
jbe
xchg
cmp
mov
and
scas
rcll
call
add
jae
dec
push
jecxz
rcl
lret
icebp
adc
gs
movsl
cmp
mov
je
addr16
and
cmp
movsl
and
sub
js
mov
test
stc
lcall
or
aas
jp
or
movsb
sub
loopne
inc
test
fisubs
inc
aaa
push
cli
sbb
fwait
sbb
lret
das
scas
cld
ljmp
imul
sub
scas
sub
inc
cltd
mov
insl
xchg
daa
cmp
push
and
jne
mov
ret
stc
jns
aaa
in
push
pop
xchg
fs
jnp
adc
icebp
mov
sbb
mov
xor
sub
pop
and
not
and
jge
mov
add
aam
inc
arpl
pop
jns
xchg
test
sbb
pop
icebp
test
idivb
ds
cmpsl
mov
push
push
push
and
ficoms
rcrb
or
push
and
aad
cmc
sub
movsb
mov
sub
pop
shll
ficoms
mov
jge
repz
nop
mov
dec
adc
inc
insl
mov
mov
xchg
rcrl
in
mov
push
orb
xchg
dec
jne
jnp
xchg
xchg
dec
xchg
adc
scas
pop
fs
orl
hlt
bound
push
ljmp
rcll
icebp
enter
out
mov
ret
aaa
adc
xchg
mov
adc
in
rcrb
data16
mov
dec
push
out
out
pop
mov
dec
jns
mov
fsubrs
imul
js
mov
in
and
test
cmpsl
es
xor
imul
pop
lcall
pop
jle
add
inc
in
jne
inc
add
aam
cmp
xchg
jl
jae
popl
loop
loop
ret
fsubrl
dec
and
pop
rolb
mov
jo
adc
xor
xchg
xchg
lret
fnstcw
cld
mov
pop
adc
outsb
sbb
popa
dec
pop
hlt
es
push
pop
sbb
jge
sub
and
jmp
fwait
add
sbb
or
sub
lock
sbb
push
mov
mov
sub
mov
sar
loope
dec
loopne
cld
cmp
push
mov
mov
jo
stos
mov
jne
xlat
pop
loop
mov
jno,pt
inc
pop
data16
ljmp
jnp
in
adc
xchg
fdivrl
pop
cld
addr16
test
stos
imul
sbb
add
mov
pop
dec
ljmp
ret
imulb
stos
dec
or
push
or
add
fldt
cltd
or
ljmp
add
js
sub
imul
cmp
mov
push
lods
jecxz
sbb
jne
pop
aam
test
dec
sub
cli
repnz
sahf
cmpsb
out
xchg
pop
dec
adc
mov
into
cmp
adc
lock
xor
lret
jmp
mov
sarl
cmp
or
ljmp
minps
sbb
pop
sub
cmpb
push
and
repz
xor
pop
add
mov
in
inc
jne
aas
mov
mov
inc
daa
xchg
mov
push
shlb
add
and
add
jmp
push
dec
jbe
repz
dec
movsb
add
push
jp
outsb
pushf
or
fmuls
cltd
in
shll
lea
and
mov
pop
ss
inc
daa
cmc
xchg
jle
mov
fisubl
aad
das
pop
inc
xchg
mov
in
je
or
cld
icebp
mov
xchg
test
xchg
icebp
xchg
ja
clc
je
in
cmp
out
sub
aam
add
je
cmc
xor
fidivrs
jb
movsb
gs
sub
int3
inc
jo
out
into
add
pop
jne
outsl
adc
mov
dec
dec
sahf
test
daa
lock
adc
pop
mov
xor
loop
imul
in
pop
xor
adc
or
or
pop
cs
pop
lahf
inc
adc
in
or
stc
inc
loopne
in
xchg
mov
and
je
inc
outsb
aad
ret
push
add
push
xor
out
nop
mov
fisubrs
adc
sbb
lret
insl
mov
mov
mov
aas
lea
int
dec
popa
idivb
jmp
push
xchg
mov
js
lret
aaa
add
das
fs
into
adc
mov
std
sub
stos
cwtl
jle
dec
lcall
push
mov
lock
jecxz
js
add
mov
push
lret
jns
in
ds
iret
fs
adc
outsl
mov
in
jne
fxch
lods
dec
shrl
mov
mov
stos
mov
idivb
cmp
shrl
xor
mov
bound
rol
in
inc
xchg
sub
dec
int
and
in
cld
data16
aas
out
mov
ljmp
std
jns
mov
sub
lahf
dec
sub
enter
xor
push
leave
fcompl
loope
inc
es
sbb
jecxz
sbb
insb
mov
nop
jae
stos
iret
push
iret
pop
adc
stos
xchg
pop
inc
cmpsl
scas
nop
das
push
loop
faddp
call
or
test
nop
mov
scas
leave
mov
pusha
arpl
jb
fs
mov
test
xlat
fdivrs
jmp
insb
mov
inc
sbb
loop
insl
mov
mov
sbbb
mov
in
sub
dec
add
add
or
inc
cmp
push
into
test
jns
ja
and
mov
ds
movb
stc
mov
cwtl
leavew
pop
pop
xchg
and
and
push
pop
std
adc
stc
sahf
xor
cmp
xchg
push
int3
push
xor
jb
sub
add
stos
insl
mov
cmp
jl
mov
stos
and
dec
addl
fcoms
xchg
mov
stc
pop
popa
xor
sbb
sbb
pop
and
movsb
xor
adc
mov
adc
or
repnz
jns
mov
pop
jmp
outsl
pop
gs
xchg
pop
jb
dec
stos
inc
cmpsl
lea
in
cli
sbb
adc
or
pop
jb
jmp
int3
xor
inc
loope
cmc
iret
mov
out
lret
push
enter
add
ja
hlt
rorb
stos
lock
jnp
pop
sub
dec
mov
mov
xor
jno
je
dec
and
mov
mov
jne
nop
add
adc
mov
dec
jne
inc
mov
xor
dec
int
mov
insb
xlat
inc
and
inc
adc
pusha
xchg
jg
mov
dec
add
pop
mov
loopne
jmp
push
inc
jno
adc
inc
push
pop
pop
cmp
ror
add
adc
stc
lea
adc
cmpsl
cld
out
fmull
cmp
stc
fcmovu
sbb
add
cmpl
aad
test
push
int3
fwait
push
jno
dec
xor
loope
mov
lods
mov
hlt
mov
fsubr
xchg
xlat
movb
push
sub
jbe
xor
clc
std
sub
xlat
arpl
xchg
dec
movl
sbb
loopne
dec
jmp
mov
rorb
negl
ficomps
rorl
call
sbb
and
lret
mov
adc
ljmp
test
cmp
pop
cmpsb
test
pop
xchg
push
mov
stc
push
stc
xchg
mov
push
cltd
mov
lea
pop
xchg
icebp
push
mov
mov
mov
es
push
mov
ficompl
les
movsb
clc
into
xchg
inc
mov
or
or
dec
pusha
sbb
mov
sub
pop
lea
xchg
enter
jg
jmp
push
and
push
dec
xchg
out
int3
pop
push
hlt
and
xchg
adc
push
or
rolb
filds
mov
adc
inc
ljmp
lret
ret
sub
inc
xchg
mov
and
push
or
pop
mov
cld
sub
test
mov
cwtl
jp
in
dec
nop
sub
and
dec
mov
dec
or
leave
testl
add
and
and
shlb
sbbl
mov
mov
xchg
inc
xor
mov
js
ljmp
push
jns
lahf
arpl
push
dec
bound
iret
and
cs
jmp
js
sub
lcall
jo
stos
insb
mov
je
mov
fwait
or
outsl
add
jecxz
shlb
fists
lcall
push
fs
xorb
push
mov
jg
sti
lret
or
das
fimuls
add
xor
inc
adcb
dec
pop
loope
loope
mov
or
loope
xor
lods
enter
ds
xchg
cltd
aas
aaa
notb
out
adc
stos
pop
mov
push
push
nop
push
dec
mov
mov
rcrb
arpl
mov
jne
sbb
mov
ljmp
or
lds
push
dec
pop
xor
fistps
adc
pop
enter
or
push
test
int3
je
negl
push
push
stos
orb
loop
sar
push
xor
or
outsb
fistl
inc
scas
mov
test
cli
nop
mov
xor
xor
in
lods
and
clc
popl
inc
test
stc
sbb
push
in
mov
hlt
jl
arpl
je
sbbl
dec
scas
popf
fiaddl
mov
add
or
push
jae
and
jmp
rcrl
mov
sub
dec
decb
jae
mov
arpl
cli
inc
stos
in
aas
repz
xchg
cmpl
inc
sub
loopne
gs
cli
out
push
icebp
add
pop
xchg
push
sub
dec
pop
xchg
mov
aaa
mov
negl
and
xlat
ret
cmc
scas
xor
cmp
sbb
lahf
xor
jae
in
ds
inc
or
sub
mov
inc
xor
les
xor
fs
out
scas
dec
mov
cli
xor
jmp
ss
pop
clc
pop
rcrl
sbb
stos
enter
sahf
push
lret
add
and
xor
or
jecxz
iret
ret
pop
push
pop
cmpsl
repnz
imul
cltd
adc
and
or
mov
mov
or
movsb
pushl
jmp
out
mov
shll
js
pushf
mov
negb
inc
inc
mov
ret
lds
mov
cmpsl
in
jno
xor
sbb
int
push
cmc
cli
cld
jle
jmp
jns
outsl
push
fstpt
jbe
push
add
xor
clc
imul
int3
jle
lahf
push
shrb
lods
mov
and
mov
imul
subl
sbb
or
inc
pop
in
inc
in
xchg
call
pop
in
lods
shrl
sarl
cmp
inc
adc
fimull
loop
pop
loop
inc
decl
cmp
fstps
or
ljmp
jbe
out
addr16
or
es
sub
daa
and
lds
mov
test
mov
dec
push
adc
xor
ss
stos
lods
ss
ret
shll
inc
jmp
inc
xchg
in
pop
push
clc
jbe
adc
xor
mov
sbb
pushf
lret
stos
cld
daa
daa
or
loopne
dec
stos
test
cmp
mov
mov
out
add
xlat
mov
movsb
cmp
xchg
or
add
inc
movsb
pop
pusha
jecxz
mov
fucom
mov
sti
sub
test
dec
int
test
or
mov
loope
or
jecxz
hlt
xor
xchg
and
pusha
mov
xor
mov
repnz
stos
jmp
repnz
dec
and
xchg
push
jge
cmpsb
gs
push
xor
mov
adc
mov
fstenv
pusha
pop
pushf
xorb
push
cmp
lret
in
pop
or
std
mov
fsubrs
ret
loop
xchg
xchg
push
test
jp
cmp
and
addr16
mov
push
shll
lods
outsb
insb
cltd
jae
sbb
mov
jb
xchg
insl
fsts
leave
cmc
pop
inc
pop
popf
fisubrl
ja
push
es
and
xchg
lds
repz
lret
lock
push
mov
pushf
push
mull
dec
out
jo
push
dec
lock
cmp
sti
stos
rclb
sub
test
push
daa
out
cld
cmp
add
push
dec
cmpsl
arpl
ljmp
jae
and
jb
loopne
mov
sub
jmp
inc
cmp
shll
mov
xor
nop
mov
in
dec
add
lcall
pop
mulb
fildl
test
mov
and
mov
mov
adcb
or
push
jae
inc
mov
mov
bound
leave
leave
jge
repnz
cmp
xor
cmp
sahf
adc
mov
adc
mov
cmp
insb
cmp
mov
test
adc
cmpsl
and
mov
cmp
shrb
push
nop
jne
xor
adc
jne
test
mov
sub
push
sbb
jle
cwtl
call
xor
out
test
aam
mov
insl
movsl
aam
jecxz
xchg
sub
inc
or
or
cld
insb
xlat
fwait
mov
xchg
test
scas
mov
lods
xorl
dec
lea
inc
push
or
add
cltd
mov
pop
addr16
add
mov
loop
fbstp
push
out
insb
xor
hlt
cmpsl
mov
jl
cmpsb
cmp
or
jg
push
xlat
repz
ret
test
scas
movsl
sbb
mov
push
sbb
push
jge
sub
pop
cmp
xchg
mov
jb
pop
push
lods
cmp
xor
sub
pop
sub
mov
mov
jg
dec
inc
ljmp
das
pop
xor
mov
cltd
dec
cld
mov
arpl
imul
push
daa
negb
sbb
sub
enter
cmpsl
cmp
scas
mov
ret
addl
fst
fimull
in
test
adc
xchg
or
inc
dec
addl
pop
push
fwait
in
add
mov
mov
xchg
gs
in
jno
or
pusha
es
sbb
xor
sarb
ret
xchg
out
push
and
mov
adc
xchg
push
jae
jg
sti
lods
movsb
les
jnp
cld
or
xor
popa
out
push
insl
cmp
jmp
not
cmpb
out
jmp
std
loopne
push
mov
mov
jp
imul
pushf
dec
in
sub
fimull
out
std
lcall
jae
sub
jge
xlat
push
cmp
jge
cltd
movsl
fldl
dec
inc
stos
pop
movl
pop
cmc
or
mov
sbb
and
mov
jbe
lea
bound
subl
inc
xor
loopne
mov
sbb
mov
adc
mov
ja
cmp
mov
movsl
mov
dec
bnd
sbb
pushf
push
cli
mov
sub
test
bound
adc
sbb
jecxz
int3
in
stc
mov
mov
inc
dec
mov
adc
sbb
lret
jg
clc
dec
add
stos
mov
sub
ret
in
push
xchg
lahf
inc
addl
pop
pop
pop
xchg
sub
enter
cmp
push
mov
jecxz
mov
cmp
sbb
aad
mov
add
adc
sbb
jl
xor
mov
xchg
jnp
push
xchg
or
and
stos
push
or
xchg
inc
jbe
mov
mov
pop
sbbb
jnp
lahf
jae
in
test
mov
andl
mov
std
aam
cwtl
icebp
pop
mov
sbb
or
jecxz
stos
das
jbe
mov
mov
push
je
adc
rcrl
in
jns
inc
add
loopne
popa
into
sbb
dec
ror
popf
aam
mov
stos
sarl
dec
xchg
pop
xchg
add
xchg
je
xor
cli
push
dec
xor
je
xor
hlt
xchg
xorl
bound
insb
scas
test
pushf
std
mov
popa
fsubp
test
push
stos
cwtl
mov
mov
in
mov
fisttps
add
fcmovb
cli
out
sahf
xor
fcomps
xchg
mov
hlt
and
std
pop
sbb
mov
pop
mov
pop
cli
jno
mov
jecxz
lock
rorb
cmp
aaa
movsbl
xchg
adc
shlb
mov
into
outsb
mov
add
pop
rcll
hlt
xor
adc
cmp
rclb
mov
xchg
push
sub
popa
test
lret
int
mov
push
and
ret
and
std
jns
jmp
and
daa
pop
mov
js
mov
sub
lea
add
mull
sbb
ret
rcrl
mov
andb
cmp
cmp
sbb
imul
jecxz
sbb
pop
scas
jl
aaa
in
cmp
lret
icebp
sub
lods
outsb
mov
dec
orb
cwtl
ss
negl
cld
aas
nop
das
xor
out
out
std
sar
add
push
sbb
mov
pusha
mov
dec
push
push
inc
or
jno
mov
neg
adc
xor
mov
pop
jl
pop
lcall
ds
in
xor
jbe
jbe
mov
rclb
xor
mov
imul
aam
jnp
pop
in
mov
dec
add
jns
fxch
jo
arpl
cmp
push
pop
out
arpl
cmp
cs
jb
mov
cmpsb
out
jns
je
sahf
enter
add
je
data16
ret
into
fs
xchg
jns
xchg
dec
push
xor
cmpsl
mov
sahf
ja
fldcw
scas
sub
in
pop
jnp
push
out
test
xchg
adc
shlb
inc
push
sarb
mov
lods
add
push
jl
dec
pushf
inc
push
dec
call
xchg
xchg
clc
or
sbb
pop
scas
out
inc
adc
xor
cmp
bound
sub
sub
add
mov
xchg
jae
pop
mov
insl
mov
sub
aaa
adcl
mov
addr16
push
sbb
sbb
gs
sbb
daa
sub
lcall
pusha
into
fs
xchg
cmp
xor
mov
sbb
aam
cmp
insb
fstps
mov
xchg
push
push
adc
int
mov
and
mov
adc
pop
xchg
cmp
dec
jle
pop
jne
inc
or
shl
in
add
dec
call
sbb
sub
loope
push
jmp
sbb
lods
cld
mov
push
mov
out
test
test
les
lea
in
jg
popa
adc
call
jae,pt
scas
and
arpl
cli
add
movsl
divb
push
mov
push
jmp
xchg
or
jg
xchg
xor
loop
jo
cmpsb
loopne
lret
inc
pop
je
pop
mov
and
pop
pop
stc
hlt
fnstsw
leave
aad
xchg
clc
sbb
out
cmp
add
popf
rcrl
sbb
fsubrs
mov
mov
fs
testb
int3
jb
or
mov
mov
adc
lods
js
into
fisttpll
nop
push
aad
fcoms
sub
inc
add
dec
movsb
pop
sub
mov
adc
mov
pop
mov
pop
add
or
inc
mov
addb
in
dec
jb
outsl
pop
in
jmp
enter
popa
cmpsb
insl
mov
dec
mov
lret
mov
mov
pop
mov
sbb
adc
shlb
push
mov
test
fnstenv
ret
add
lcall
cmp
xchg
mov
xor
xor
ret
call
fscale
mov
icebp
das
mov
or
add
inc
aad
xor
mov
je
pop
pusha
pop
xor
xchg
add
pop
inc
imul
mov
jns
cmp
lods
in
test
pop
rorl
push
test
rorb
ficoms
ds
pop
jge
push
loop
lret
jne
je
jge
aam
cmpsl
cltd
cmp
in
popf
repz
shl
rcl
out
pop
mov
fcmove
and
cmp
ss
xchg
xchg
test
and
cmpsl
nop
cli
lock
add
xorl
fcoms
iret
ss
dec
adc
shl
test
data16
inc
add
cmpl
neg
shll
lods
fistps
rcrb
and
adc
bound
int
push
arpl
pop
shl
les
in
movsl
fmulp
xchg
jne
loope
arpl
loope
inc
mov
jno
mov
mov
stc
xchg
mov
push
loop
mov
jb
std
lahf
adc
cmc
dec
mov
dec
lea
xor
mov
sahf
dec
cli
mov
xchg
popa
pop
pop
fstpl
inc
push
xchg
cmp
loopne
int
cmp
xchg
into
mov
repnz
pop
sub
hlt
in
mov
inc
mov
sbbl
jns
sahf
jle
xlat
popa
mov
in
fs
mov
and
int3
sarl
loopne
cmp
jns
mov
mov
cmc
push
inc
lea
outsb
jge
and
aas
dec
jecxz
mov
popl
sahf
dec
movsl
sbbb
bound
adc
pop
ja
fidivs
addr16
popa
dec
ss
iret
incl
sti
negb
movsb
pusha
jb
pop
jp
jb
pushf
gs
xor
out
and
popf
xor
mov
testl
inc
sti
mov
sub
addr16
leave
cmp
icebp
pop
inc
mov
cmpsl
pop
xchg
ja
dec
jns
cwtl
jae
loop
sub
leave
fbld
out
sarl
sub
shl
lea
push
xor
mov
and
rol
add
and
mov
aas
lcall
out
das
inc
pop
inc
jnp
pop
adc
pop
pusha
das
jmp
adc
xchg
mov
and
test
insb
sub
pop
lret
cmpsb
dec
add
jp
packssdw
sahf
mov
cmp
adc
aad
test
sub
imul
or
loope
mov
sbb
push
or
and
and
cmp
sub
andl
jno
sbb
mov
jg
push
add
mov
orb
xchg
int3
test
fisubs
push
pop
js
movsl
dec
xchg
pop
push
mov
shlb
cmpsl
mov
sbb
ja
lret
xchg
lcall
insb
shrb
mov
test
add
inc
stc
jns
xlat
jno
shlb
mov
and
inc
push
mov
cmp
ror
jae
push
shrl
ficompl
std
jl
adc
xchg
mov
sbb
jno
clc
inc
cmp
stos
push
lcall
fdivrs
popf
repnz
push
and
fsubr
movsl
pushf
xchg
aaa
mov
jl
arpl
pop
add
mov
xchg
push
push
pop
jns
daa
test
cmp
out
into
std
pushf
mov
loope
inc
psrad
sub
test
mov
movsb
mov
sbb
imul
xchg
out
aaa
aas
sub
daa
std
fdivrs
inc
adc
jnp
mov
or
loop
dec
mov
movl
or
popa
stc
push
sub
or
sti
mov
in
rcrl
hlt
subl
sbb
fisubs
stos
mov
xchg
or
or
xchg
xchg
jl
push
enter
es
jns
fldt
popf
add
loopne
imul
cld
out
cmp
scas
cmp
push
or
xchg
or
inc
push
pusha
test
js
pop
hlt
pop
and
iret
xchg
cs
inc
inc
mov
xchg
pop
lods
dec
enter
mov
jns
add
push
out
sahf
int3
sub
mov
das
or
insl
push
mov
mov
mov
cmp
cmpl
lods
ss
xlat
xchg
pop
inc
clc
add
inc
mov
sti
inc
or
push
arpl
mov
pop
or
fcomps
imul
stos
aad
icebp
loop
pop
movsl
repnz
inc
dec
adc
outsl
lret
mov
shl
fs
aaa
mov
mov
push
mov
mov
imul
sub
nop
in
adc
scas
andb
add
push
sti
movsl
mov
out
jne
jo
and
add
and
xchg
add
cmp
enter
adc
push
mov
mov
mov
xorl
lret
aas
push
es
mov
cmp
push
fmull
add
lret
sub
inc
inc
jge
cmp
nop
and
rorl
mov
sbb
xchg
jecxz
lods
pushf
hlt
sarb
dec
mov
bound
pop
push
push
xor
rcr
cmpsl
push
sbb
and
cld
fidivrl
mov
into
xor
adc
mov
xchg
inc
sahf
mov
fcom
out
daa
cmpsl
jnp
mov
fisubl
push
iret
sbb
cmpsb
ret
push
imul
jmp
rorl
inc
push
jl
mov
mov
cmp
ss
sbb
cvtps2pd
xchg
xlat
jmp
call
js
jg
adc
pop
cltd
adc
aam
cmpsl
push
mov
pop
aam
aaa
xlat
arpl
pop
jb
mov
jecxz
pop
aas
adc
das
jne
gs
shlb
arpl
mov
aam
jg
cltd
adc
sub
aam
repnz
leave
stc
mov
loope
rcll
xchg
inc
xchg
ficoms
into
inc
pop
lods
cmp
in
mov
or
and
call
and
std
loop
cmp
cld
mov
jp
cmp
in
bound
cltd
push
xchg
leave
fwait
pop
sub
sbb
shll
fwait
sarb
mov
ja
jmp
adc
push
sbb
stc
insb
or
fs
ja
faddl
fwait
cmp
movsb
cmc
add
or
push
add
sub
jnp
mov
out
pop
stos
js
repnz
lcall
and
or
aam
jns
cmpl
jns
adc
pop
jne
cmp
mov
out
sbb
jbe
pop
ds
enter
jge
enter
mov
mov
rolb
ljmp
or
in
mov
sahf
inc
pop
dec
cld
fbld
stos
ja
popf
cli
fsts
push
xor
cmp
inc
or
ret
dec
arpl
xor
aad
es
xchg
dec
xor
dec
cmpl
aad
or
in
jbe
loope
loop
fdivs
xchg
and
out
out
scas
mov
fwait
iret
pop
dec
in
mov
aam
pop
pop
decb
xchg
mov
mov
and
push
dec
lret
cmp
mov
pop
int
dec
lea
jge
clc
pushf
xrstor
fsubp
lret
aaa
bound
repnz
nop
mov
fs
ds
jmp
popl
in
sbbb
inc
push
mov
or
mov
mov
fucomip
test
call
push
or
clc
mov
and
pop
push
loop
add
xor
mov
cmpsb
imul
xlat
daa
inc
mul
fsts
test
push
nop
add
adcb
out
xchg
dec
mov
sub
inc
mov
dec
jge
mov
sbb
push
into
aas
mov
std
orl
pop
push
xor
or
jbe
fisttps
or
xor
pop
fiaddl
enter
jnp
test
mov
ljmp
bound
xchg
imul
mov
bnd
into
adc
rol
int3
cmp
repz
test
mov
add
cmp
cmpsb
lock
jmp
jle
movsl
icebp
add
lret
adc
les
jns
xchg
mov
jae
or
shr
sahf
test
jmp
mov
ljmp
cltd
shrb
cmpsb
xor
mov
inc
sar
pusha
push
es
pop
sub
mov
jge
xchg
pop
jmp
push
repnz
loope
add
cwtl
mov
xchg
in
imulb
push
and
ds
xor
add
mov
std
or
mov
xor
mov
xchg
lods
cmpsb
inc
test
cmp
inc
jne
xor
leave
mov
in
insb
sbb
das
and
adc
adc
loope
sub
mov
inc
push
cmp
xchg
sbb
fwait
sahf
sbb
hlt
adc
push
push
dec
mov
xchg
aas
mov
shll
js
movsb
pusha
out
jns
arpl
mov
mov
ja
lods
pop
out
icebp
xchg
pop
test
push
dec
movb
rclb
lret
imul
push
add
xchg
scas
jge
lods
pmullw
xlat
pop
and
cli
push
pushf
int
sub
sub
sbb
das
fdivrs
push
adc
push
pushf
lea
and
scas
jae
dec
and
or
dec
lods
loop
or
pop
push
dec
mov
xor
fidivrs
inc
mov
mov
jo
push
stos
outsb
pushf
push
xor
fistps
sahf
mov
out
insl
ret
clc
jb,pn
inc
fs
adc
lret
push
push
arpl
or
xchg
pop
xchg
push
mov
sbb
add
add
adc
mov
jbe
xor
pop
push
aad
mov
xor
stc
or
aaa
mov
dec
add
dec
rorl
cmp
push
fisttpll
mov
insl
xchg
enter
cmp
pop
dec
sbb
xrelease
mov
xor
fsubl
push
cmpl
popf
push
scas
negb
xor
bound
rolb
xchg
jg
movsb
pop
xchg
jbe
mov
fs
pop
inc
inc
push
sbb
lahf
mov
mov
adc
inc
pop
fiadds
aam
pop
jne
loopne
arpl
dec
add
add
mov
aad
sarb
jne
stos
iret
and
sub
xor
ss
es
add
into
xor
mov
mov
dec
inc
jg
in
add
out
inc
adc
adc
push
dec
imul
xlat
mov
mov
mov
push
and
mov
scas
aad
adc
add
mov
cmpsb
cmpsb
push
sbb
xchg
loope
sub
or
mov
sub
jl
mov
addl
jecxz
bound
xchg
add
outsl
sub
jno
add
jae
mov
outsb
sub
sbb
push
adc
jns
cwtl
jmp
mov
les
ja
or
inc
add
leave
push
cmpsl
lds
xchg
and
call
ds
and
sbb
xchg
xchg
mov
xchg
and
fsubrs
cmp
int
push
out
outsb
push
inc
lea
push
test
and
adc
cltd
pop
aad
xchg
lret
sub
inc
adc
dec
pop
ljmp
rcll
push
call
xchg
cmpsb
fwait
xor
mov
dec
fs
nop
xchg
fisttpll
jb
jo
fildl
jmp
xor
je
pop
mov
rcrb
sti
fwait
sbb
jb
push
sub
fistl
inc
out
movsb
psllq
add
adc
sahf
sbb
pop
push
nop
and
aad
xchg
inc
mov
scas
xor
mov
or
pop
dec
inc
mov
mov
inc
jae
sub
xchg
and
push
or
xor
nop
ror
test
cwtl
xchg
push
push
std
out
lea
mov
es
ljmp
mov
jo
loopne
aaa
add
insb
xor
dec
imul
mov
rorb
mov
mov
mov
push
test
adc
dec
daa
mov
js
cvtps2pd
cmp
push
lahf
in
sahf
mov
jge
test
adc
dec
stc
xchg
push
add
add
inc
dec
cmp
mov
xlat
sub
inc
les
pop
and
cs
lahf
loope
adc
xor
bound
mov
movsb
imull
jge
stc
or
add
mov
lcall
pop
cs
outsl
xchg
imul
mov
add
mov
addr16
sub
in
push
cli
clc
sub
daa
xchg
jecxz,pt
pop
cwtl
add
and
mul
or
adcb
add
arpl
inc
arpl
lcall
sub
je
subl
cmp
mov
jb
stos
test
dec
jecxz
jmp
sbb
loope
test
xor
mov
add
push
inc
sub
cmp
xchg
inc
call
push
pushf
xchg
fiadds
xchg
arpl
jmp
rcrb
test
jmp
fs
insb
fadd
lock
insb
enter
es
out
pushl
jge
jbe
insl
iret
lea
mov
jp
push
or
repz
int
xchg
adc
sub
lea
adc
out
aad
xlat
ja
jg
mov
in
add
aas
or
scas
in
jp
mov
xchg
xchg
icebp
pop
sub
lds
jp
mov
sti
mov
mov
aad
mov
push
pop
dec
mov
popa
add
paddw
jecxz
fisubrl
js
add
mov
pushf
js
mov
test
adc
xchg
push
bound
xor
adc
shll
aaa
mov
iret
stos
imul
cltd
cmp
cmc
jl
mov
push
jg
lea
inc
push
ds
add
pop
jmp
dec
pop
ja
frstor
ret
add
jle
cmp
pop
cmpb
cwtl
in
push
pop
xor
xchg
pusha
adc
neg
sbb
or
pop
stos
or
mov
cmpsb
call
shll
insl
gs
stc
das
mov
fdivs
bound
xchg
and
sub
mov
dec
mov
movsl
pushf
mov
aaa
ds
popa
cltd
mov
adc
mov
fistpll
or
stos
movsb
sbb
mov
rcll
sub
es
out
jb
xor
dec
mov
fisubs
dec
mov
xchg
out
into
nop
inc
dec
stos
push
lcall
imull
arpl
mov
push
add
and
jecxz
cmp
popf
or
decl
or
dec
popa
jbe
cwtl
fmuls
xchg
insl
std
ds
dec
stc
lock
fcom
xchg
cmpsb
arpl
lret
lret
test
repz
iret
dec
cmp
nop
ret
shl
bnd
pushf
sbb
hlt
pop
outsl
add
sarb
stos
and
xchg
cltd
stc
aam
js
add
push
push
test
mov
lcall
inc
xor
movsl
cli
lds
mov
inc
loopne
cmp
movsb
mov
jo
insb
int
fxch
jmp
and
ss
add
hlt
fistps
js
in
subb
jl
and
sub
test
push
sub
pop
mov
jl
pop
das
into
cmpsl
in
rclb
das
jno
test
lods
test
ljmp
inc
popa
ljmp
test
int3
std
andb
hlt
addr16
ret
mov
movsb
fsts
inc
mov
mov
lahf
loop
cli
stos
mov
cmp
jnp
sub
jno
add
sbb
mov
mov
mov
add
cmp
negl
jo
imul
xorb
mov
xchg
mov
lahf
fsubs
gs
je
test
mov
icebp
cmp
xchg
jg
xor
cmp
push
insb
jns
int
pop
loop
push
jmp
jbe
movsl
mov
les
mov
sbb
ljmp
stc
jnp
addr16
pop
pop
xchg
roll
fxam
lds
lea
mov
into
movsb
adc
push
dec
mov
jns
inc
push
mov
and
clc
adc
mov
fdivrs
adc
pusha
lds
sbb
jne
lahf
add
es
cmp
mov
daa
xchg
loopne
mov
pop
mov
cs
mov
repz
cmp
sub
or
stos
imull
int
mov
dec
pop
add
adc
push
out
or
sbb
sbb
out
push
jns
lret
mov
imul
call
adc
ja
test
mov
xchg
insl
lahf
mov
das
fucom
imul
or
arpl
popa
mov
mov
int
test
jbe
sbb
inc
mov
fstps
jmp
clc
adcb
or
sbb
movsb
mov
pop
in
rorl
ja
sbb
lcall
adc
dec
mov
jge,pt
icebp
adc
movsb
xchg
and
pop
and
xchg
fldt
mov
cld
sbb
sub
cmp
pop
sub
jp
jmp
fsubp
cmp
sbb
and
xor
adc
mov
add
loope
push
pop
bound
daa
loopne
sbb
jl
push
mov
sub
testl
fnclex
and
fdivrl
dec
xchg
adc
mov
jge
sbbb
add
jg
outsb
mov
mov
movl
push
and
les
fwait
or
jge
mov
pop
es
std
das
lods
cmp
dec
xor
or
js
subb
mov
and
mov
movsb
outsl
pushf
sbb
outsl
push
loop
mov
stos
and
push
xchg
inc
cmp
cld
pop
fisubrl
mov
shrb
xchg
leave
rolb
addl
ljmp
adc
jl
jecxz
inc
and
ret
or
and
mov
notb
sub
jo
loope
in
xchg
in
lds
mov
xor
sub
pop
cmp
lock
sub
xlat
in
arpl
jl
es
xor
lods
pop
sbb
andl
lret
jmp
fs
sbb
inc
sub
divb
shlb
jno
push
sub
pop
xor
jle
pop
inc
xchg
xor
dec
repz
fsubp
scas
cmpsl
fisttpl
xchg
push
stos
sbb
lea
cld
leave
loope
ss
loope
jae
xchg
mov
add
cmp
xlat
imul
ljmp
insb
sahf
jecxz
or
cmp
or
rcrb
test
je
in
bnd
mov
cmpsb
insb
repnz
sub
scas
cltd
xor
sarb
xlat
loope
daa
adc
int3
repz
jp
in
repz
std
mov
lgs
fdivs
jl
push
and
ret
sub
mov
aaa
sbb
pop
adc
sti
sub
sub
int
add
xor
test
outsl
or
lods
dec
fcmovnb
inc
hlt
lret
xor
lds
or
mov
jl
jae
adc
leave
js
pop
fstl
mov
fsubl
mov
fisubs
cwtl
adc
pop
imul
call
hlt
popf
adc
imul
sahf
les
clc
adc
cmp
test
fmuls
fwait
cmovle
xchg
rcl
push
imul
dec
jns
test
in
fwait
stos
sub
xchg
cmp
or
lods
adc
add
loop
jnp
loope
out
pop
data16
test
cmpsb
pop
pop
fwait
mov
cli
jae
mov
inc
shl
push
icebp
cli
or
mov
add
jnp
sub
subb
test
push
shrl
les
pop
subb
sarl
xor
fisubs
mov
fadds
cmp
leave
out
mov
cltd
pushf
and
stc
imul
jecxz
insb
dec
sbb
or
aas
lret
push
mov
cmpsb
imul
insb
jmp
and
gs
sub
or
fwait
imul
mov
add
stc
out
push
data16
pop
push
outsl
or
repz
push
dec
test
and
sbb
sahf
add
and
cwtl
sbb
shll
sub
int
add
cli
or
dec
mov
sub
pop
push
aaa
lret
int3
jo
in
mov
pop
ljmp
enter
mov
out
xlat
mov
mov
mov
xchg
mov
xchg
fcomp
jns
mov
leave
lods
sti
jmp
imul
ljmp
pop
fcoml
fidivl
ljmp
movsb
adc
push
inc
sbb
loope
xchg
xchg
sbb
or
pop
test
fstl
rcrb
nop
jecxz
popa
jg
sub
add
or
inc
outsl
fs
and
push
dec
and
jb
nop
lods
test
fstp
aaa
and
adc
adc
or
bound
loopne
xchg
and
insl
pop
shlb
jp
gs
movsl
dec
xorl
pop
out
stos
pop
push
jae
mov
addb
pop
adc
add
push
movsb
lods
push
mov
or
repz
jne
sbb
out
mov
movsl
sub
cwtl
cmp
pop
mov
xor
test
or
mov
xor
loop
int3
subb
stos
sub
cwtl
fstl
pop
adc
gs
cmpsl
stos
mov
out
mov
subl
add
and
mov
mov
mov
xor
mov
out
cmp
push
push
pop
xchg
insl
imul
hlt
fsubl
jo
and
pop
mov
xor
aas
lret
ret
push
dec
dec
push
push
nop
mov
enter
rclb
pop
fs
movsl
sub
pop
aaa
daa
lret
adc
or
xchg
enter
sbb
pusha
xchg
xchg
mov
pop
test
jl
jle
lcall
insb
cmp
fstl
lret
xor
imul
dec
adc
dec
cmpsb
jae
push
pop
xchg
test
daa
cmp
xor
sbb
ret
lds
xchg
shll
xlat
js
and
arpl
xor
aaa
push
cmp
data16
inc
pop
pop
mov
into
mov
jmp
xlat
fcomip
clc
outsb
sub
repnz
push
mov
pop
push
cmp
mov
fldl
cmpb
loop
outsl
popa
push
inc
scas
sub
push
sub
cltd
adc
or
push
ja
in
mov
mov
adc
mov
push
outsl
mov
insb
cld
ljmp
rcrb
push
sti
out
jno
dec
inc
nop
jmp
add
scas
lods
add
sbb
ret
cld
sub
or
and
sub
dec
pop
nop
dec
push
daa
sub
rorb
xchg
or
inc
mov
mov
add
aam
in
sub
sbb
pop
push
push
data16
lea
xor
cmp
iret
push
mov
mov
movl
movsb
lret
popf
inc
inc
and
out
jns
mov
daa
add
mov
xchg
hlt
pop
and
sbb
ja
xchg
xchg
lret
push
or
dec
and
push
insb
add
sbb
and
loop
adc
pop
push
and
cwtl
lods
call
test
mov
xor
push
enter
popf
test
insl
jbe
or
aas
cmp
sbbl
mov
in
jb
push
mov
mov
fcmovne
sbb
dec
mov
mulb
mov
jo
icebp
in
cld
adc
icebp
leave
sbb
adc
or
add
inc
out
inc
and
cld
inc
push
call
mov
roll
push
cli
mov
cmpsb
mov
sbb
jl
jecxz
imul
or
lahf
out
aam
sbb
mov
mov
mov
push
scas
pop
aaa
cmpsl
inc
xor
sbb
adc
sbb
adc
das
or
xchg
inc
cmpsb
mov
adc
mov
lock
push
decl
mov
add
aam
mov
mov
sbb
push
sbb
test
and
loopne
leave
aas
enter
loop
adc
mov
adcl
loopne
sbb
cwtl
lock
jg
cmp
jg
inc
jns
subl
jle
pop
jae
mov
mov
sub
imul
fs
mov
rep
sahf
into
or
pop
lret
jmp
jns
mov
stos
aaa
adc
dec
push
testb
xchg
lock
adc
clc
adc
daa
in
mov
and
ss
bound
fstps
mov
lret
adc
aas
push
adcb
mov
cmovbe
xor
test
fsubs
testb
rcr
cld
pusha
jle
mov
sub
popf
in
jp
daa
mov
mov
jnp
push
std
add
inc
sub
lret
mov
mov
aaa
incb
cld
mov
rcr
out
push
sbb
out
repz
or
js,pt
nop
in
cli
test
dec
shlb
cmp
icebp
push
inc
in
addl
cmp
outsl
inc
enter
daa
sbb
sti
sub
js
test
sbb
fdiv
push
add
subl
mov
and
mul
inc
cmp
push
std
es
hlt
fdivrp
xor
mov
and
dec
xor
movb
xor
dec
shll
in
lret
cmp
adc
loop
and
fisubrs
inc
movb
daa
and
in
loop
cmp
or
add
pop
dec
int
mov
xor
sbb
addr16
das
inc
cwtl
xchg
jno
out
nop
mov
scas
xor
cs
jg
sahf
and
in
out
inc
add
push
jnp
push
lock
ljmp
dec
test
lods
xor
rolb
arpl
jle
and
imul
sub
cwtl
pop
push
or
sub
inc
pushf
inc
call
jge
jge
adc
and
test
sub
pop
popa
loopne
stos
je
pushf
jecxz
ds
outsb
ljmp
leave
dec
fmuls
popa
dec
fidivl
out
fisubs
into
test
inc
loope
stc
out
mov
xor
adc
hlt
sub
stos
jne
adc
pop
xor
dec
mov
cmp
mov
jmp
jecxz
inc
push
or
mov
push
js
cmp
xchg
pushf
jb
mov
addb
cmp
cltd
movsl
adc
inc
and
test
data16
mov
adcb
aas
push
xor
sub
fnsave
mov
iret
add
pop
xchg
cmp
dec
jnp
push
mov
fs
movsb
jae
nop
jnp
mov
jo
movsb
add
mov
push
mov
test
pushf
and
and
lret
cmpsl
test
es
xchg
mov
movsl
clc
mov
dec
leave
pop
pop
xchg
pushf
jbe
or
cmpsb
inc
adc
ja
call
cmpsb
leave
fcoml
cli
push
ss
lret
stos
out
std
in
daa
aaa
das
call
add
adc
cmp
std
movsb
mov
fs
sub
lea
notb
pop
and
cmp
lahf
xchg
popf
inc
inc
and
ffree
xor
rol
jb
xchg
aaa
aas
xor
mov
and
mov
scas
sbbl
lret
loopne
pop
ljmp
imulb
jmp
mov
orl
and
push
push
dec
pop
aad
rcrl
jo
and
push
dec
jle
mov
ds
jmp
mov
rorl
push
sbb
push
push
loop
jbe
pop
cmp
and
iret
pop
pop
stos
and
inc
inc
add
jb
pop
aad
adcb
push
add
jle
hlt
pop
dec
leave
loop
jnp
out
dec
bnd
jnp
int
jl
cmpsb
add
mov
imul
ja
xchg
mov
sub
mov
stc
pop
xchg
xor
cmpsb
mov
iret
lods
fsub
out
out
scas
mov
scas
or
ds
mov
xorb
adc
pusha
xchg
push
cmp
sub
pop
int3
inc
lahf
mov
data16
lret
std
cwtl
bound
test
xchg
outsl
push
icebp
je
mov
mov
imul
sbbb
in
mov
fs
outsl
out
or
inc
xor
in
stos
cli
jbe
das
movsb
cltd
imul
jg
jb
cmp
ret
into
sarl
xor
js
in
lcall
push
jns
outsb
jge,pn
lods
push
pop
pop
jbe
jecxz
imul
out
decl
push
out
movl
push
lahf
or
jne
in
cs
ret
push
inc
xchg
cmp
xchg
jo
adc
inc
cmpl
mov
push
pop
xor
dec
arpl
popf
push
inc
mov
cmpsl
cwtl
inc
xor
iret
jbe
xchg
fsts
push
mov
xor
push
mov
xchg
xor
cs
inc
mov
or
hlt
das
mov
rorl
sbb
jae
push
iret
jbe
cli
andb
jg
cmpsb
pop
cmp
stc
lcall
push
sbb
fcomip
shr
pop
mov
xchg
mov
fldenv
gs
pushf
push
xor
mov
out
xor
and
sbb
and
xor
test
dec
inc
jecxz
pop
xor
scas
push
jno
iret
in
xchg
push
leave
sub
into
lea
lods
adcb
xor
jp
rcl
in
cltd
andl
cli
inc
dec
mov
jmp
int3
mov
clc
fists
sbb
je
push
int
call
mov
xor
nop
pop
faddl
pop
ficomps
xor
inc
fwait
push
insb
mov
fcmovnu
outsb
shl
test
jb
mov
mov
sbb
or
outsb
test
or
xchg
sbb
xchg
mov
dec
cmp
xchg
mov
dec
icebp
cmp
mov
mov
jmp
adc
cld
mov
pop
lret
int
cli
mov
call
jmp
xor
data16
pop
sbb
sub
xlat
push
inc
xor
jle
mov
mov
lods
es
idivl
popa
inc
dec
pusha
aaa
adc
cs
pop
xor
out
push
cltd
mov
jmp
mov
inc
jge
pop
addl
sub
imul
ja
inc
mov
lret
sbb
dec
jns
sbb
sub
repnz
ja
mov
and
xor
mov
cltd
fdivs
into
mov
jle
in
pop
xchg
lods
sub
nop
fdivrl
xchg
filds
int3
cmpsl
movsb
jl
mov
mov
idivb
jge
sbb
cmp
shrl
and
sarl
mov
mov
movsb
into
or
add
int3
js
enter
xchg
jge
lods
rcl
incb
pop
cmpsb
popa
outsb
mov
pushf
hlt
lret
xlat
out
cmp
popf
cld
jbe
mov
push
jp
jae
movsl
mov
popa
mov
or
mov
daa
rolb
mov
xchg
inc
jno
lods
test
pop
dec
call
inc
jge
or
pop
mov
lahf
push
outsl
imul
popf
sub
pop
sbb
int3
and
mov
test
xchg
fcomi
adc
mov
jge
push
jnp
jne
add
sbb
sarb
imul
popf
in
jle
jecxz
jg
jbe
pop
lahf
stos
or
jo
push
inc
push
dec
in
test
add
push
aam
lcall
xor
popa
sbb
test
jecxz
mov
pushf
enter
jnp
sarb
cli
adc
xlat
jg
lea
and
rcll
add
jmp
ss
sub
push
daa
cmpsl
repz
jns
mov
leave
jbe
scas
rolb
sub
std
push
xor
or
stc
popf
pop
pop
js
scas
adc
pop
xor
lods
dec
call
jl
loop
push
sbb
popf
cli
inc
jno
pushf
enter
and
push
inc
jnp
clc
cmp
xor
add
fsubrs
lret
sti
sbb
scas
gs
or
sti
in
call
andl
daa
pop
push
dec
mov
mov
data16
lods
push
fucom
mov
mov
lock
pushf
test
pop
inc
dec
sub
add
jl
iret
loope,pt
push
inc
fmulp
lahf
das
test
incl
fnstsw
gs
mov
js
cmp
adc
pop
xchg
add
mov
test
scas
jg
adc
stc
arpl
aad
mov
pop
mov
and
pusha
or
ss
shlb
lods
inc
addb
sub
mov
mov
inc
mov
mov
mov
rclb
sub
and
push
daa
xchg
adcl
in
lds
push
fdivrs
xor
add
push
push
jnp
inc
inc
xchg
insb
pop
dec
les
inc
and
push
lret
ret
or
mov
lret
cmc
mov
xor
push
subl
scas
pop
add
std
aad
xchg
fisubrs
aas
in
mov
fs
cli
lea
mov
loop
scas
sub
shr
test
cmc
adc
aas
testb
mov
jb
lahf
sbb
lds
popa
jecxz
filds
mov
movsl
and
mov
sub
dec
add
pushf
add
in
and
add
int3
mov
shlb
adc
push
mov
pop
sub
or
sbb
dec
pop
lahf
sbb
repnz
jle
xor
pop
xchg
imul
add
xchg
sbb
pop
dec
adc
pop
jns
sahf
sub
rol
or
in
lret
shl
and
xor
rcrb
lea
adc
jp
mov
movsb
adc
jmp
dec
rcr
jae
sub
xchg
sti
cmpsl
fsubrl
cmp
imul
jns
das
lods
inc
inc
xchg
mov
sti
cmpl
inc
xchg
pop
push
bound
loopne
add
mov
xchg
dec
sahf
add
stos
std
or
mov
lods
imul
mov
mov
and
sub
xor
fisubs
lcall
xchg
inc
dec
adc
test
xor
mov
sub
xor
popf
stos
insl
fld
jg
ds
xor
pop
or
hlt
rclb
or
inc
add
add
mov
xor
dec
bound
mov
xor
cmp
jns
sbb
cmc
ret
inc
push
mov
in
cmp
loope
imul
pop
out
sbb
fs
pop
add
mov
sbb
xchg
add
int
mov
add
aas
dec
fiadds
test
sahf
sarb
xchg
mov
pop
adc
add
lahf
js
push
in
dec
out
imul
sub
js
rcll
adc
lret
mov
int
divb
push
sti
dec
xor
ret
lods
sbb
push
xor
ret
pop
popf
int3
pop
adc
aad
inc
cmpl
nop
or
insb
rcrl
je
mov
or
push
icebp
or
pop
aam
lea
stos
sub
mov
int3
pusha
movsl
mov
adc
sbb
aaa
sbb
test
inc
or
into
or
push
aam
div
push
sbb
fiadds
sahf
and
adc
sub
cmp
stc
lds
push
inc
add
daa
aaa
popa
dec
adc
inc
jg
pop
js
repnz
scas
lea
cmp
insl
int3
sub
xchg
mov
int3
push
pop
push
fwait
cwtl
dec
pop
test
cmp
scas
adc
les
pop
cwtl
mov
mov
xchg
lea
insb
ss
aas
push
clc
int3
adc
mov
jae
sbb
in
mov
jmp
cmp
bound
pop
iret
insb
pop
add
orl
sub
add
testb
mov
lahf
cld
and
and
mov
test
ss
mov
mov
adc
test
jp
dec
push
adc
xor
sub
jae
ja
push
sbb
pop
popl
mov
cs
or
mov
popa
and
sarb
and
mov
or
mov
pop
xor
sahf
mov
mov
dec
cmc
fimuls
stos
mov
jp
adc
adc
add
lea
mov
sbb
fildl
push
std
popa
xor
jmp
push
insl
pop
mov
pop
mov
push
aam
sbb
mov
pop
mov
fldt
scas
and
out
sahf
or
cs
lock
outsb
xchg
test
cmp
pop
add
pop
pop
or
mov
and
add
mov
mov
insl
int3
andl
mov
imul
pop
push
xor
dec
insl
addr16
xchg
aad
lock
jne
sbbb
imul
repnz
mov
sahf
pop
ds
mov
mov
pop
lahf
push
sub
pop
out
js
insb
cli
lods
clc
cld
push
imul
mov
dec
cmp
stc
dec
out
lea
mov
lret
ret
jle
sbb
aam
movsb
fs
and
cltd
push
pusha
ss
repz
xchg
divl
pop
fidivs
mov
pop
icebp
push
sbb
xlat
and
or
das
aad
iret
inc
xor
aad
incb
fwait
jl
pop
mov
add
dec
popa
jg
cmp
mov
mul
es
push
pop
xchg
push
or
out
push
mov
push
fxch
cmc
lcall
xchg
sub
cmpsl
jne
aas
dec
jno
je
add
xchg
test
lcall
inc
sti
cmp
push
std
xchg
cwtl
fucom
jo
int3
sti
cmpl
jb
push
xchg
sti
push
cli
pusha
aaa
xchg
jns
stos
xchg
call
mov
iret
es
mov
sbb
std
xchg
cmp
pop
pop
cmpb
adc
push
xlat
mov
into
add
pop
daa
push
push
sbb
push
sub
pop
push
push
mov
enter
push
pop
jae
lock
cwtl
dec
xchg
xor
scas
xchg
cltd
insl
orl
cmpsb
cs
push
loope
pop
popf
cmp
mov
hlt
cs
pop
imul
insl
push
and
das
fdivr
rcl
push
pusha
fidivrl
sub
lods
push
mov
iret
push
movsb
popa
sbb
aam
cmp
fs
cmpsb
icebp
pop
pop
enter
xchg
ja
cmp
mov
xor
stos
xor
fadds
in
btc
stc
mov
or
scas
cmp
addr16
movaps
or
push
adc
add
dec
jnp
inc
push
outsb
inc
pop
in
repnz
adc
pop
lret
insb
filds
ljmp
push
fcom
dec
nop
inc
loopne
js
and
sub
ds
xlat
pop
mov
jle
xchg
pop
mov
dec
jmp
jno
insl
imul
sti
pushf
add
cmc
imul
mov
pop
mul
addr16
mov
mov
sbb
stc
cs
aaa
cli
clc
mulb
mov
mov
adc
das
loopne
outsb
inc
mulb
inc
xor
ret
loopne
imul
dec
ss
cmpsl
pop
outsl
and
mov
outsb
jnp
jle
addr16
mov
mov
lods
add
clc
jge
test
mov
inc
jecxz
je
inc
je
cmpsb
cmp
push
cmp
push
out
andb
test
sarl
cld
sub
fwait
add
arpl
lods
stos
test
xor
clc
pop
in
enter
imull
mull
scas
adc
push
mov
cmpsl
or
or
or
mov
add
and
les
mov
sbb
in
or
loopne
ret
movsl
cmp
ret
xchg
addb
cld
pop
ljmp
cmpsl
adc
dec
adc
rclb
pop
orb
push
lahf
mov
pop
mov
lcall
outsl
pop
sub
lods
add
pop
jns
xor
stos
jge
adc
mov
arpl
xchg
in
xchg
and
in
push
mov
loope
ja
sub
std
dec
cwtl
aas
push
jg
leave
es
pop
into
and
push
aaa
leave
mov
push
and
sbb
mov
icebp
ret
push
jns
mov
lahf
inc
pop
jp
clc
dec
pop
dec
in
frstor
sahf
aam
and
ret
and
cs
cmp
aaa
sub
jne
xor
clc
dec
mov
int3
loop
inc
push
mov
jo
push
das
jg
dec
clc
int
jae
stos
in
lock
xor
fisubs
xlat
xor
mov
jge
sar
sbb
mov
or
mov
xor
outsb
pop
or
orl
pop
in
mov
cmpsb
int3
adc
loop
or
cmpsb
xchg
jnp
mov
aam
mov
jo
fs
push
adc
jle
mov
ja
aam
mov
clc
push
in
es
ss
push
sub
pop
out
stos
incb
scas
movsl
mov
dec
enter
sbb
sarl
inc
jp
dec
mov
cmp
jle
mov
push
xor
xor
pop
xchg
push
decl
push
fadds
jmp
cli
faddl
pop
jmp
cmp
add
int
jmp
push
std
rclb
in
xor
lods
ja
adc
scas
jo
mov
or
mov
sti
cmpl
scas
repnz
sbb
xorb
inc
pop
rorb
mov
inc
jecxz
mov
push
mov
sbb
xor
sbb
lea
test
sbbb
xchg
xorl
mov
mov
dec
add
outsb
sub
jecxz
scas
inc
nop
pop
add
cmc
ret
or
jb
push
stos
cs
popf
adc
jecxz
sar
lods
mov
aam
mov
aam
fcomps
sti
daa
cmp
jo
or
xchg
fs
jecxz
push
scas
lret
lock
clc
sub
xchg
inc
fnsave
icebp
sub
loop
ss
enter
cmpb
scas
push
or
jp
push
subw
cltd
popa
adc
cld
sbb
add
cmp
idivl
jecxz
ret
push
aas
ljmp
aaa
fwait
not
fs
int3
fstpl
push
cmp
sbb
and
sbb
stos
and
mov
ret
stos
jno
inc
mov
imul
push
jo
cwtl
lds
xor
jae
adc
aam
movsl
mov
xor
sbb
mov
lret
dec
mov
adc
decb
dec
push
cmp
cmpsl
and
jbe
scas
sbb
sbb
in
dec
mov
push
push
pop
or
mov
sarl
into
out
in
orl
jne
pop
xchg
inc
test
push
mov
jmp
imul
xchg
dec
popa
and
sub
sbb
je
cmp
imul
mov
inc
cmp
xchg
or
stos
cli
cmpsb
add
idivb
test
shl
cmp
xor
inc
jne
jae
dec
cmp
int3
jae
xchg
mov
fisubs
push
mov
adc
popf
outsl
lods
cmc
inc
test
es
and
sub
jns
das
lods
mov
jo
popf
in
in
dec
xchg
ret
stos
push
ds
into
into
jae
out
push
xchg
enter
pop
imul
insb
repnz
xor
pop
sub
ja
daa
cmpsb
lods
out
pusha
int3
insl
cmp
cmpsb
inc
int
mov
lahf
aaa
out
lods
test
movsl
loop
sbbl
filds
xchg
sub
xor
pop
mov
push
xchg
mov
and
cwtl
mov
xor
js
es
js
lret
repnz
pop
jne
stos
and
into
nop
dec
fcmove
add
mov
mov
std
aas
inc
or
outsb
lock
gs
mov
and
sbb
fisttpll
and
jno
pop
sarl
call
jbe
ljmp
or
cmp
push
push
mov
mov
mov
mov
or
in
das
push
jle
add
pop
mov
into
loop
xor
ss
shll
shrb
das
arpl
loope,pn
dec
ss
mov
stc
call
ficoms
shlb
sbb
inc
xor
sub
inc
mov
stos
mov
cmpsl
js
sub
js
mov
lcall
adc
mov
loopne
pop
mov
ficompl
mov
rol
es
inc
mov
mov
js
hlt
movsl
insl
cmpsb
fistl
fcoms
jno
stc
fldcw
lahf
jbe
fidivrl
jno
pushl
mov
in
arpl
cmpsl
mov
mov
dec
or
bound
mov
out
mov
mov
mov
fs
or
jge
punpcklbw
jmp
cmp
dec
push
movb
pop
adc
shlb
cmc
adc
or
mov
push
iret
enter
les
stos
add
lcall
sbb
test
dec
int3
add
into
sub
je
push
stos
shrb
insb
loopne
mov
jl
xor
or
lcall
mov
push
es
test
stos
insl
leave
fdivp
cs
pop
mov
or
sbb
sbb
jo
sbb
cmc
in
shll
xor
loope
pop
sub
sbb
je
inc
or
stc
cmp
cmc
push
push
cli
push
sahf
or
je
mov
hlt
pop
scas
push
popf
and
pusha
cs
std
jno
mov
add
push
xchg
fists
adc
int
call
mov
and
scas
adc
flds
lods
cmpsb
jbe
loop
ss
andb
pushf
push
ljmp
out
adc
adc
aaa
cli
and
shl
stos
cmc
adc
fsubs
cmpsl
bnd
outsl
loop
sub
imul
sbbl
jecxz
inc
jb
sub
movsl
negb
mov
scas
movsb
lahf
repnz
sub
push
or
enter
lods
cmp
mov
pop
std
mov
popf
rolb
imul
or
adc
ss
push
cmp
aas
subb
faddl
mov
insl
hlt
in
sti
popa
push
jns
scas
or
test
xor
and
lea
incl
xchg
jmp
test
mov
sbb
xchg
push
cli
push
test
div
jns
inc
mov
hlt
in
push
push
inc
jae
xchg
in
add
sbb
adc
daa
lock
jb
add
cmp
push
rorb
lea
test
loop
sti
sarb
into
int3
mov
pop
rcll
cmp
sbb
and
movsl
sub
das
pop
jns
add
pand
cmp
dec
lods
add
mov
sbb
push
inc
mov
fnsave
mov
bound
negb
pop
pop
mov
ds
or
outsb
scas
inc
shrb
mov
xchg
push
mov
jmp
inc
xchg
adcb
sbb
xor
adc
sbb
mov
leave
push
cmp
xor
dec
cmp
cli
xor
jb
cmpsb
dec
inc
ss
cs
xor
movsl
pushl
xchg
bound
std
or
jge
fwait
xor
js
aaa
ror
ja
push
pop
sub
lahf
out
cmp
outsl
stc
cmp
repz
lcall
push
cmc
outsb
mov
dec
mov
cmpl
push
test
add
dec
mov
mov
push
outsl
add
imul
out
sbb
or
mov
lods
push
ds
test
fstl
or
outsb
aam
lahf
aad
jb
dec
xchg
push
dec
insl
scas
dec
sub
xchg
mov
adc
push
mov
push
popf
ficomps
mov
imul
ret
mov
xchg
jle
mov
mov
jecxz
ljmp
cmp
adcl
sahf
cs
iret
into
push
ficoms
jae
movsb
dec
push
bound
adc
push
imul
jns
nop
dec
push
mov
jne
dec
mov
mov
sahf
std
mov
test
dec
ret
or
imulb
sbb
mov
gs
push
jmp
dec
sbb
iret
xor
shl
and
stos
jb
testl
and
fs
imul
mov
lods
push
lret
or
sub
aad
push
lret
stos
mov
mov
inc
adc
fstpl
pop
lcall
loope
popf
mov
test
ret
jp
mov
mov
in
scas
adc
lcall
push
or
xor
movsl
shll
cwtl
push
or
pop
in
inc
ds
xor
scas
adc
lods
shrb
add
cmp
iret
jne
mov
js
rcrl
xchg
add
inc
cmpsb
mov
xor
sub
insl
pandn
cwtl
in
sbb
or
sub
mov
xchg
cs
clc
or
shlb
dec
and
inc
push
push
cmp
mov
fsub
xor
scas
inc
scas
sbb
dec
inc
sbbl
pmulhw
mov
or
and
rorb
popf
mov
fisttps
mov
jnp
or
loop
mov
repz
pop
jb
sbb
xor
add
mov
inc
pop
scas
in
insl
into
sub
pop
aad
xchg
xchg
pop
lcall
push
call
inc
mov
rcrl
fidivrs
cmp
jl
mov
cld
xchg
add
jbe
js
insb
push
ret
mov
mov
push
leave
shrl
push
lock
dec
jle
int
cmp
pop
xchg
in
cmp
negl
cmc
popl
pop
pusha
mov
pop
adc
add
aas
fisubs
mov
cmc
addb
push
lret
in
mov
xchg
push
push
xchg
sarl
xchg
xlat
dec
jnp
lahf
mov
push
repz
mov
mov
cmp
popa
fadd
adc
push
sub
cmpsb
pop
cmp
xor
dec
pop
xchg
xchg
push
push
fs
sbb
aam
shl
insb
mov
cmp
inc
xchg
dec
mov
push
inc
dec
inc
sbb
mov
call
pop
bound
inc
mov
loopne
push
in
arpl
out
mov
insl
imul
fwait
into
jbe
testb
push
insl
cltd
sahf
scas
out
mov
xchg
dec
pop
sti
ss
std
and
pop
int3
add
pop
or
jge
mov
loop
mov
rorb
inc
xchg
scas
jmp
imul
mov
movsb
jmp
jge
in
divl
jle
xchg
int
cmp
addr16
enter
adc
mov
jnp
lcall
sub
test
mov
add
outsl
enter
mov
cld
pop
test
fwait
jecxz
inc
shr
call
loop
fldl
cli
adc
test
call
push
push
and
dec
dec
fldenv
mov
movsl
mull
push
pop
pop
xor
and
test
and
add
adcl
test
xor
sti
xor
cmp
xor
test
xchg
shrb
sti
lods
or
xor
sbbl
sbb
ja
sub
out
inc
mov
dec
add
clc
sbb
int
jmp
bound
lods
xor
dec
popf
xchg
mov
or
xchg
sbb
aad
sbb
jns
inc
sub
cmp
jg
imul
pop
mov
scas
sti
arpl
sub
ret
call
pop
mov
inc
ss
icebp
or
insb
and
mov
shrl
stos
push
xchg
xchg
aam
pop
call
pop
push
pop
inc
gs
push
incl
in
and
adc
fcmovnb
mov
mov
mov
inc
dec
fwait
mov
mov
mov
movsl
movsl
dec
loop
ljmp
pusha
insb
aas
imul
int3
inc
sub
ja
mov
push
dec
push
outsb
out
andl
inc
test
enter
loope
pop
jo
mov
cwtl
xor
ja
ljmp
addr16
sbb
and
or
jae
adc
push
xorl
hlt
sub
push
je
mov
and
add
leave
dec
fbld
loop
jb
or
inc
or
ds
roll
cmpl
ds
dec
and
into
out
jno
mov
inc
ja
es
test
in
mov
add
dec
loope
imul
mov
mov
jle
dec
cmp
fidivs
mov
xchg
or
jne
imul
or
pop
ljmp
sub
movsb
cmp
loopne
mov
flds
mov
mov
icebp
jg
or
clc
filds
mov
sbb
imul
cmp
iret
pop
pushf
push
sbb
rcrb
popf
adc
cmpsb
mov
push
xorb
popf
cmp
pop
jecxz
xor
and
xor
mov
daa
jb
scas
out
std
ljmp
xor
aaa
and
push
xlat
test
leave
cmp
mov
cmp
pop
dec
mov
jge
mov
fadds
xlat
xor
pop
mov
fbstp
stc
xchg
inc
push
icebp
mov
xor
inc
mov
and
daa
daa
and
pop
push
sbb
lahf
imul
xor
enter
xor
adc
mov
and
push
mov
shll
aam
rcl
sbb
rorl
outsl
mov
insb
inc
xor
mov
lcall
insb
pop
sbb
sub
lret
jnp
outsl
lret
mov
mov
jo
pop
fbld
add
mov
adc
xchg
cmp
mov
movsb
jne
jecxz
jecxz
jbe
test
repnz
or
popf
movsl
fstpl
outsl
rcll
fwait
mov
je
rorl
dec
add
int
cmp
int
xlat
xchg
scas
push
mov
pop
add
cld
or
pop
dec
inc
sbb
xor
push
or
inc
add
cwtl
lods
inc
push
addr16
decl
inc
jg
fs
inc
add
cltd
pop
popf
rolb
add
xchg
pushf
mov
neg
jo
add
lds
jbe
and
movsb
cmp
adc
mov
push
push
push
lahf
out
sbb
rcll
pop
fcmovnu
push
jl
sub
lcall
fxch
fs
orl
xchg
xchg
stos
mov
les
xchg
cld
mov
clc
call
stos
mov
sub
test
dec
fsubl
mov
faddl
jg
mov
mov
inc
inc
cmpsl
and
repnz
stos
add
test
inc
cmp
adc
mov
lea
mov
into
hlt
jae
xchg
pop
sbb
dec
adcl
insl
aad
cmp
push
push
adc
add
out
dec
and
pop
iret
icebp
add
cmc
mov
int
xchg
inc
jnp
lcall
push
testb
inc
pop
pop
stos
scas
aas
add
sbb
shlb
sbb
fisttps
fwait
lcall
cmp
push
arpl
lods
in
mov
leave
mov
or
mov
mov
and
loopne
loop
mov
jne
daa
sti
or
xchg
add
out
mov
leave
pop
insl
and
cmp
mov
jecxz
test
cmp
add
cmp
cwtl
insl
push
mov
imul
xor
fdivl
sbbb
or
push
sbb
mov
roll
out
mov
cmp
cltd
push
jo
fcompl
dec
ljmp
scas
idivb
je
jo
rcrl
xor
and
out
dec
jnp
cvtss2sd
jecxz
push
dec
icebp
lods
xor
sbb
push
leave
js
mov
and
sub
aad
mov
inc
adc
imul
jle
mov
mov
dec
rcrl
jbe
arpl
pop
aad
mov
mov
andl
push
inc
sbb
mov
jg
lock
adc
lret
xor
lret
pop
mov
cmp
push
pop
push
fisubrl
cmp
das
lock
jbe
iret
sbb
lret
negl
jnp
push
mov
push
out
nop
push
xchg
adc
xchg
cmp
daa
mov
aas
push
bound
loope
test
popf
xchg
mov
outsb
cmp
cmc
loopne
dec
nopl
xor
xor
stos
and
pop
fisubrl
mov
loop
sbb
adc
sahf
adc
sub
sbb
jmp
inc
mov
cmp
jg
inc
xchg
cmc
cli
scas
lret
xchg
aad
jae
fwait
idiv
sub
xor
cmp
xor
int
cmp
jns
mov
movl
dec
xor
stos
outsb
jp
in
push
and
xor
inc
mov
pop
repnz
mov
mov
dec
out
ret
mov
mov
dec
ljmp
mov
jmp
sbb
aam
mov
push
int3
cmp
ret
cs
enter
fbstp
sti
movsl
jmp
xchg
sbb
jno
mov
insb
das
pop
inc
jecxz
push
in
fucom
stc
adc
sub
sbb
xor
fdivs
xchg
popf
les
iret
mov
sub
cmpsl
inc
dec
inc
insb
pop
xor
sbb
iret
popf
out
push
add
out
data16
sub
ss
test
ret
int
aaa
fwait
mov
fldl
fcoms
pop
daa
inc
mov
xchg
jo
jo
arpl
mov
push
add
shll
dec
jle
aaa
daa
roll
nop
sarl
add
mov
mov
mov
dec
sub
mov
stc
fwait
push
loop
roll
add
cmp
jg
rcrb
push
movsl
arpl
sbb
push
dec
mov
inc
and
mov
adc
das
jns
mov
aam
out
push
xlat
out
push
aaa
hlt
jne
out
jno
loopne
jl
stc
push
fmul
scas
ficoml
std
leave
int3
inc
lock
sahf
sub
stc
popf
lcall
push
or
dec
mov
sbbb
sbb
outsl
pop
sbb
loopne
and
sbb
sbb
sbb
fbld
xchg
mov
dec
inc
daa
inc
and
jmp
xor
jp
movsb
dec
adc
fsts
mov
mov
mov
fldenv
push
lods
inc
mov
push
roll
insb
inc
lret
xchg
cmp
ljmp
sub
push
mov
hlt
shlb
out
or
sbb
mov
addr16
in
sti
fstpt
cs
jno
neg
push
in
lahf
xchg
gs
push
cmc
orl
or
mov
imul
inc
fidivl
cmp
inc
xor
popf
and
repz
add
shll
add
or
mov
mov
xor
lcall
pop
mov
sub
mov
pop
push
push
sbb
dec
jno
or
mov
clc
jnp
dec
cmp
jl
mov
cmp
cld
pop
mov
add
rcll
imul
jnp
bound
sub
dec
jns
xchg
inc
int
int
fisubl
mov
nop
cmp
sbbl
dec
aaa
xorb
in
mov
sub
mov
lcall
ja,pn
lret
fildl
sub
fs
cld
jbe
rclb
push
test
mov
insb
pop
mov
ret
inc
sub
fbstp
push
lods
mov
push
cmpsl
mov
cmp
addr16
mov
inc
aas
mov
xor
aaa
mov
js
negb
push
insb
or
ret
cli
fidivrs
add
insl
ret
cltd
pop
pop
add
add
jae
mov
and
or
fnstsw
xchg
pop
rcrl
xchg
ss
push
leave
test
cltd
add
jno
mov
or
mov
adc
ljmp
ficoml
sub
sub
out
sti
cmp
inc
inc
mov
nop
cmp
cs
imul
clc
xchg
push
stos
imul
cmpsb
sbb
das
fwait
xor
inc
leave
jbe
xchg
ja
lret
data16
out
not
cmpsl
icebp
in
mov
xlat
push
cmp
or
dec
xchg
fimuls
jne
leave
sbb
ja
adc
jns
sbb
mov
std
jno
cs
inc
cmp
ljmp
mov
imul
insl
mov
sub
andb
dec
fdivs
scas
push
pop
and
xchg
arpl
fwait
xchg
mov
fsub
sub
out
lea
cli
iret
repz
mov
or
int3
and
dec
and
test
cmp
sub
repnz
into
call
lcall
pop
and
clc
mov
hlt
inc
mov
jp
stc
cmp
push
cmc
mov
ficompl
and
out
leave
sahf
sub
push
xchg
aas
pop
out
mov
inc
cmp
aas
push
mov
adc
push
shll
xor
es
sahf
aad
loop
xor
push
mov
sub
xchg
mov
mov
cmc
xlat
add
push
cmp
int3
jg
jnp
cmp
push
stos
dec
push
popa
dec
mov
stc
cmp
inc
sti
into
inc
lcall
jne
ds
shll
in
sub
ret
mov
sbb
pusha
insb
push
stos
fs
sbbb
negl
icebp
lahf
les
dec
pop
adc
imul
mov
adc
dec
and
sbbl
loop
test
mov
inc
push
out
in
ja
and
aad
sub
daa
fiaddl
and
daa
in
les
ds
jae
add
dec
and
aas
pop
outsb
inc
xchg
roll
jb
cmp
jno
nop
call
test
dec
add
imul
mov
outsb
lret
test
out
or
iret
lds
jb
enter
mov
dec
into
stos
jge
out
mov
xor
fs
fdivl
call
out
or
mov
cld
rcrl
and
push
mul
mov
pop
scas
mov
jo
repnz
fsub
mov
sub
ja
js
lods
inc
and
repnz
or
fcomip
popf
movsb
loop
out
leave
add
sbb
cmpl
andb
scas
xchg
jnp
cmpb
in
mov
cmpsb
push
or
mov
sub
es
hlt
push
add
addr16
pushfw
push
enter
fidivrs
ss
xchg
push
repnz
mov
adc
cmp
scas
add
adc
inc
ss
pop
sbb
pop
push
data16
ret
mov
mov
mov
stc
sub
out
jbe
mov
clc
sbb
dec
jp
negb
or
leave
lods
or
ret
loopne
cmp
dec
xchg
outsb
ficomps
xchg
in
int
adc
xchg
sub
add
sub
or
mov
cwtl
pop
ret
or
push
cmp
stos
fldenv
fistps
call
shrb
mov
mov
add
sbb
add
add
hlt
lahf
adc
jne
movl
iret
add
inc
sbb
mov
xchg
mov
adc
push
in
in
enter
xor
push
mov
icebp
mov
shl
mov
out
data16
mov
nop
or
add
xor
icebp
lea
inc
sbb
dec
cmc
dec
lcall
repz
popf
test
outsl
jo
and
sub
cmc
cld
mov
ficompl
sub
add
jno
rorb
dec
sub
inc
or
jae
cmc
aam
ret
addr16
inc
ror
cmp
push
loope
ja
sbb
daa
lods
push
and
adc
cli
pop
mov
enter
ficoms
aad
jnp
push
lods
cwtl
test
ret
scas
cmp
pop
lcall
rcr
sub
in
iret
je
sub
sub
push
adc
loopne
add
popa
xchg
cmp
loope
insl
lret
out
xchg
or
ds
mov
test
xchg
mov
mov
mov
cmpl
inc
mov
stc
ja
or
ljmp
dec
stc
mov
xchg
subl
mov
adc
stos
cwtl
stc
dec
outsl
pop
call
mov
lahf
sti
and
fisubs
cmp
rolb
sbb
fdivl
and
cmp
sub
jbe
imul
imul
faddp
and
mov
stc
orl
mov
jo
xor
mov
insl
mov
pop
shl
xorl
xorb
movsl
subl
rol
and
lahf
dec
push
gs
mov
mov
lock
adc
pusha
hlt
dec
mov
mov
repnz
mov
mov
mov
mov
add
fisttpl
sbb
stos
test
dec
add
test
ficoml
int
cld
sbbl
xchg
cmc
roll
mov
les
pop
or
pop
mov
inc
mov
push
lahf
sbb
push
scas
cwtl
and
dec
mov
mov
add
out
jno
aam
xchg
cli
arpl
inc
fimull
shrl
shlb
jle
sbbb
cld
or
shrb
das
pop
insl
xchg
aam
adc
xchg
test
adc
and
jmp
fiaddl
lcall
xor
dec
stos
sub
mov
jne
divl
mov
or
xor
and
clc
jmp
stc
mov
lods
dec
push
mov
popf
pop
fnsave
sahf
xchg
mov
sbb
movsl
inc
repz
iret
sbb
push
pop
fcoml
out
xor
add
xor
sbb
popa
dec
dec
scas
and
inc
xchg
js
push
dec
mov
push
inc
popf
mov
dec
push
jbe
stos
xchg
mov
inc
pop
and
push
add
mov
sub
out
outsl
jmp
insb
jmp
xchg
pushf
sub
dec
push
adc
andb
pop
enter
dec
rclb
aad
fstpl
arpl
out
cmc
fnstsw
fisubs
pop
mov
decb
push
jmp
mov
imul
push
pop
popa
jmp
das
push
mov
mov
loop
pop
or
in
mov
mov
jnp
hlt
inc
add
xchg
lret
hlt
and
push
ja
jp
call
sub
test
jbe
xchg
sub
leave
out
mov
mov
xor
pop
insl
and
and
sbb
mov
mov
pushf
xchg
fsubrl
dec
pop
adc
mov
out
mov
inc
jae
xor
or
das
sti
stc
jg
and
push
xor
push
in
push
pop
adc
xchg
mov
sti
cli
mov
daa
or
je
shl
sbb
filds
sbbl
adc
jg
cmp
mov
mov
inc
pop
mov
outsb
aad
stos
mov
stos
jp
cmp
sub
lds
mov
push
arpl
sahf
rclb
out
mov
adc
mov
mov
pop
cld
sarb
pushf
cwtl
jmp
and
xor
cli
dec
xchg
arpl
jno
mov
fstl
sub
insl
outsb
test
and
xchg
dec
xor
mov
inc
and
pop
mov
mul
xchg
mov
idivb
mov
into
xchg
xor
iret
stos
loope
lock
repz
aam
pop
daa
jmp
ret
movsb
orb
ret
mov
xchg
lret
cltd
add
jl
aaa
mov
in
mov
push
cmp
cmpsb
cld
inc
pushf
aad
push
sub
jge
out
mov
adc
dec
rol
sarl
sbb
add
lea
dec
mov
push
sub
cmp
subl
push
sbb
repz
mov
mov
ror
inc
in
adc
stos
mov
pusha
sub
dec
xlat
or
mov
cmp
xor
shlb
push
bound
arpl
adc
xchg
lret
arpl
push
cmpsl
lret
adc
hlt
int
mov
mov
add
cmp
out
leave
jecxz
inc
fs
stos
xorl
sbb
adc
add
rcl
mov
dec
pop
sub
pop
cwtl
mov
aam
push
pop
mov
ffree
lret
icebp
outsl
cmpsb
lods
add
insl
xchg
sub
incb
xor
jbe
jb
jo
fidivs
push
jp
cs
sub
add
sub
mov
dec
pop
negl
sbb
jg
andb
sbb
cmpsl
aas
fimull
jnp
lods
sub
dec
les
lods
add
pop
leave
sub
xlat
std
mov
cli
lea
jae
xor
sub
test
pusha
or
lret
arpl
cmc
mov
imul
out
aam
aaa
das
pop
cwtl
push
jo
or
jbe
stos
xchg
cmp
push
dec
out
sub
aad
pop
mov
es
fidivl
shrb
sbb
and
adc
into
cmp
cmp
jge
lahf
pop
push
mov
ficoml
mov
add
xchg
pop
rorb
or
mov
add
sub
mov
xchg
jo
repz
cmp
pop
daa
daa
xlat
inc
pushaw
dec
cmp
adc
out
pushf
jno
pop
arpl
imulb
outsb
cltd
lock
ret
in
mov
jo
movsl
and
mov
and
or
jmp
or
js
shlb
test
adc
fmul
mov
pop
push
xor
cmpb
and
inc
pop
cld
and
shl
fabs
and
jecxz
xchg
mov
and
sub
cmc
cwtl
neg
pop
mov
xchg
or
jo
and
incb
mov
xchg
scas
jp
lcall
jmp
inc
xor
mov
add
rclb
push
xor
jl
jge
iret
jl
xchg
add
lea
cmp
cwtl
roll
jecxz
adc
push
ds
call
js
lock
aas
mov
jecxz
sub
out
fnstenv
imul
pop
xor
xchg
sahf
mov
call
push
in
push
cmp
mov
mov
lods
jmp
adc
test
aas
cld
xchg
pop
cmp
clc
shll
mov
enter
notb
cmp
push
orb
add
cmpsb
lret
push
xchg
faddl
scas
jae
movsb
cmp
adc
push
aad
lods
adc
sbb
stos
push
fists
into
les
sub
cmp
scas
lods
push
xchg
jmp
mov
cmpsb
cmp
xor
insb
jns
jnp
imul
dec
stos
pusha
fistpll
pushf
sti
xchg
mov
jbe
fdivrs
dec
test
test
icebp
mov
lods
fidivl
xchg
fcom
and
xchg
je
push
rorl
fmulp
sbb
pop
out
out
jmp
mov
mov
sbb
imul
jo
ja
pop
js
sbb
loop
or
cmp
ss
dec
xchg
push
data16
jmp
push
sub
mulb
data16
imul
das
adc
insl
dec
loop
jp
jle
aaa
sbb
lcall
divl
add
jb
or
les
cmp
js
aad
push
test
arpl
jno
sub
addl
dec
aas
repnz
int
es
mov
sub
jo
pop
cmp
xchg
xlat
mov
decl
out
scas
out
mov
std
daa
int3
mov
pop
or
lcall
dec
lea
jns
repz
cs
das
and
out
dec
mov
and
sub
daa
xchg
pop
inc
sahf
xlat
and
out
and
or
nop
daa
mov
xchg
mov
sarb
jle
add
mov
cmp
or
in
imul
mov
aas
mov
inc
shlb
outsb
and
sub
pop
mov
adc
jmp
sub
lods
and
in
xor
or
arpl
pop
mov
out
leave
gs
pusha
and
dec
mov
pop
subb
add
mov
sbb
movsl
or
push
and
adc
or
ss
lret
mov
fiadds
jg
mov
mov
js
out
push
out
mov
jp
int3
mov
push
xlat
out
mov
subl
dec
inc
xchg
fmuls
addr16
cmp
inc
or
inc
inc
or
arpl
sbb
mov
xchg
add
sarb
and
jp
fwait
mov
dec
stc
pop
add
pop
jae
and
fcmovu
insb
test
and
stos
test
sbb
push
and
xor
stos
fsts
scas
dec
jp
lcall
mov
cmp
out
in
pop
xchg
cmp
sub
mov
inc
daa
dec
stos
sub
cwtl
mov
mov
std
xor
sub
mov
in
pop
xor
in
pushf
inc
push
push
leave
sub
push
sbb
and
or
dec
mov
pop
xor
mov
sarl
jo
scas
iret
jae
sbb
jp
push
mov
stc
not
frstpm(287
lret
mov
stos
fiaddl
int
insb
ret
cli
xor
cmp
ret
rcrb
mov
jecxz
add
scas
out
je
adc
fs
or
js
mov
xchg
call
ds
shrb
lds
shl
insl
popf
mov
rorb
pushf
jle
xlat
xchg
subl
sbb
jo
adc
les
or
and
ret
stc
or
push
lret
adc
out
xchg
aad
iret
mov
cmpsb
stc
and
aaa
push
cltd
ds
cmpb
xor
out
popf
test
jo
je
cmpsl
ds
leave
mov
fbstp
gs
mov
jo
or
arpl
dec
ds
lret
dec
jl
sub
push
push
pop
and
aam
and
sti
les
sub
outsl
push
pop
call
lret
push
lret
xor
test
aaa
cmpsb
mov
push
cmp
out
or
xchg
imul
jne
pop
mov
insb
inc
jmp
xchg
push
adc
stos
pinsrw
cmc
inc
stos
add
mov
mov
movsb
rorb
mov
jne
pop
scas
push
ss
ja
sbb
jecxz
jl
push
xchg
cld
push
call
jns
call
adc
xchg
mov
push
jl
inc
fs
pop
fwait
mov
xor
xchg
xchg
incl
jecxz
push
jp
push
adc
push
rol
pop
push
pop
popa
add
xchg
jg
loope
jno
dec
add
fdivrs
sub
das
cmp
fmuls
or
mov
jl
pop
iret
ds
fidivrs
je
int
es
pop
cld
dec
sbbb
fwait
pushf
fstpt
addr16
rcll
and
xchg
outsb
inc
loopne
daa
dec
cs
push
and
or
mov
imul
sarb
sahf
imul
mov
in
jmp
jecxz
orl
mov
pop
lahf
mov
lods
test
sbb
cmp
repz
repz
push
jecxz
fistpl
jg
aaa
aaa
lret
mov
lcall
jns
push
arpl
pop
jmp
stos
dec
push
fsubs
pusha
mov
xchg
repnz
inc
loopne
sbb
mov
push
mov
cli
or
out
test
fildl
xchg
scas
pop
jecxz
loope
scas
outsb
das
mov
adc
mov
stc
pop
cmpl
pop
ds
fdivrs
dec
rclb
faddl
fisubrs
mov
in
adc
lahf
xor
mov
jo
in
cmp
int3
adc
inc
lods
sbb
loop
dec
jno
xchg
mov
mov
mov
sti
push
nop
in
repnz
lods
cmc
subb
adc
push
push
fdiv
les
cs
fisttps
pop
adc
je
ret
jecxz
ret
ret
mov
scas
pusha
pop
xchg
xchg
int
daa
aaa
or
inc
mov
mov
popa
or
addr16
jne
add
outsl
ret
int3
lret
mov
sub
add
shl
mov
sub
pop
sub
scas
push
jns
mov
ja
mov
sub
pop
lahf
hlt
imul
repz
lea
call
or
push
mov
xlat
mov
leave
fldl
fisubrs
jns
add
icebp
inc
sbb
mov
jae
icebp
inc
lret
sub
cmp
jns
mov
dec
mov
cmp
pop
rcrb
aad
mov
or
sahf
fsubl
lret
scas
das
lods
das
add
ja
or
mov
sbb
mov
test
jnp
test
dec
inc
enter
inc
pop
mov
cmpsb
lea
mov
and
dec
jmp
pop
ja
xchg
cmpsb
jno
cmpsl
add
popf
lock
cltd
inc
jb
and
sarl
divb
addl
icebp
xor
mov
stos
daa
cmp
inc
nop
ret
xchg
mov
xor
ds
insb
icebp
cmp
mov
cmp
mov
jb,pt
jnp
pop
mov
adc
inc
cmc
sbb
negl
add
jno
adc
imul
mov
push
pop
loope
fisubs
out
xchg
mov
test
cmp
and
add
fstps
or
mov
addr16
push
and
push
pop
xor
xchg
sahf
ja
mov
es
adc
cld
incl
pushf
sub
and
vrcpss
outsl
inc
jae
nop
es
sahf
ret
stos
or
ja
int
inc
daa
clc
imul
mov
out
aas
sub
loopne
mul
pop
aad
mov
inc
bound
aad
clc
in
dec
cwtl
push
scas
movsb
test
fnstsw
pop
aaa
and
imul
mov
aas
pop
jmp
add
jb
cmpsb
xor
or
xchg
xor
or
into
ja
mov
repz
adc
sub
pop
mov
int3
jp
clc
pop
cmp
psllw
inc
mov
test
jae
mov
imul
push
add
fisubrl
jl
fstps
scas
clc
movsl
mov
fsts
movsl
dec
loop
pop
mov
xchg
stos
stc
fcoms
dec
ss
mov
out
xlat
inc
test
pop
cld
jno
insb
mov
pushf
jne
hlt
jae
loop
sbbb
jbe
xor
sahf
push
cld
addl
mov
shl
sbb
mov
mov
xlat
pop
adc
pusha
jge
cli
popa
into
pop
jo
andb
leave
pop
daa
pop
aad
jb
data16
cmc
loope
dec
push
addr16
jmp
fcompl
inc
push
dec
pop
movsl
aaa
xchg
pop
sub
das
roll
enter
jb
dec
push
push
cli
adcb
push
sub
jmp
test
loop
or
mov
jecxz
pop
push
adc
ljmp
mov
mov
mov
add
jmp
test
lahf
cmp
movsl
add
xchg
dec
adc
addr16
in
or
in
mov
test
imul
inc
add
mov
stos
pop
imul
add
cltd
aas
mov
mov
mov
loopne
push
data16
es
mov
mov
cld
mov
push
inc
push
or
orl
scas
inc
fwait
adc
mov
adc
adcb
sub
dec
into
test
jmp
cs
add
push
mov
bound
pop
aam
fisubs
adc
out
xor
in
sbb
lea
aad
lds
rcrl
xchg
andl
push
ss
jle
jns
mov
mov
mov
mov
or
aam
mov
lcall
shl
sbb
mov
adc
fsubl
push
and
lea
add
mov
in
loop,pn
sub
movsl
mov
lea
les
xchg
xchg
or
and
cmp
addr16
fs
and
inc
xchg
test
addb
lock
rol
fdivs
sub
jnp
adc
repnz
or
xchg
and
jmp
or
xchg
dec
mov
ds
jo
out
pusha
adc
inc
cmpsl
loopne
mov
xorb
arpl
fwait
es
mov
call
adc
dec
scas
fsubl
ret
cmp
add
adc
iret
add
push
mov
gs
mov
imul
stos
insb
pop
gs
jl
je
jne,pn
je
cmp
das
cltd
xor
mov
xlat
jns
or
andb
neg
shrl
popf
mov
shrb
pop
pop
jbe
pop
lcall
in
leave
jecxz
fnstcw
add
adc
cmp
es
sub
pop
sub
pop
test
int
xchg
sahf
fiadds
xlat
ss
lahf
pop
enter
cmp
mov
test
bound
mov
cmpsl
xor
pop
pop
imul
cltd
aam
dec
xchg
add
jne
add
lds
mov
insl
loopne
bound
push
xchg
adc
sub
jnp
fdivs
mov
cld
adc
sbbb
popf
xchg
mov
or
daa
or
pop
pop
mov
sbb
cli
es
mov
stc
dec
mov
cs
leave
sti
fistpll
ltr
jmp
pop
xlat
out
sahf
sbb
mov
stos
leave
add
stc
movsb
or
push
xor
push
mov
fldenv
push
adc
jno
clc
jp
leave
imul
pop
test
push
js
test
orb
dec
inc
aas
cmc
insl
add
fnstenv
maxps
and
jg
or
mov
add
imull
cmp
pushf
addr16
push
pop
scas
outsl
repz
in
daa
fs
call
dec
push
mov
mov
xorb
loope
stos
push
mov
xchg
jno
out
sarb
mov
sbb
jmp
in
clc
es
mov
iret
rol
add
cmp
leave
scas
add
cmp
lcall
xchg
std
mov
repnz
adc
mov
fistl
jnp
leave
and
cltd
add
lea
ja
clc
or
mov
repnz
dec
out
pop
setbe
and
and
andl
fcomps
pop
or
push
out
jns
test
lods
jbe
imul
loopne
mov
testb
and
cwtl
addl
mov
or
ret
movsb
dec
xor
mov
mov
loopne
mov
in
lret
rcrb
xlat
clc
aaa
fldt
xor
fwait
adc
lock
jnp
sti
mov
push
cmp
adc
icebp
fsubs
decl
or
int3
in
add
fcomp
fnsave
stos
xor
paddusw
and
and
movsl
cmp
out
sahf
cmp
sbb
jle
daa
test
lods
outsb
lret
mov
cmc
nop
pop
ret
imul
cmp
add
int
pop
enter
daa
add
xor
pop
xchg
sub
ret
cli
in
sbb
lock
ja
pusha
int3
lods
mov
mov
movl
mov
jbe
adcl
lret
xchg
xor
cltd
rol
mov
adc
fisttpll
in
testl
shrb
inc
insl
and
sahf
popa
psadbw
adc
push
sbb
mov
sar
xchg
aad
inc
repnz
xchg
cmp
sbb
jbe
mov
dec
or
insl
in
in
cmp
orb
mov
mov
push
fsubrs
push
add
sub
sbb
ja
xor
stc
das
ja
push
push
out
in
shrb
ja
sub
lods
xor
cwtl
mov
or
dec
jmp
sub
out
or
out
xchg
fnstcw
ss
adc
popf
push
inc
shll
xlat
fsubs
fimuls
push
je
push
out
bound
sub
mov
repnz
insb
stc
clc
lods
adcl
jl
jl
xchg
dec
mov
or
jmp
fiaddl
in
sbb
movups
imul
clc
dec
mov
out
jb
pop
mov
out
adc
xchg
test
dec
mov
iret
addr16
inc
sub
jmp
push
cmpl
loop
adc
fdivrl
out
test
test
arpl
xchg
pop
mov
movsl
xchg
stos
sub
cld
fimuls
jno
lods
fists
fcompl
push
imul
xchg
into
and
sbb
pop
into
shll
sbb
mov
dec
push
xchg
lock
mov
repz
adc
mov
mov
adc
mov
jns
idiv
xchg
pop
pop
ds
cwtl
xchg
push
jno
cmpsb
inc
test
xlat
adc
pop
or
mov
stc
out
sub
mov
decl
popa
test
outsb
lret
inc
xchg
ret
sahf
fldenv
adc
nop
dec
les
mov
insb
xchg
clc
and
mov
push
rorb
xchg
or
leave
ret
jp
bound
jns
pop
inc
test
adc
loop
insl
inc
mov
and
jb
sub
xchg
das
cmp
xchg
cmp
leave
ds
mov
inc
cmpsb
bnd
add
and
dec
xchg
mov
adc
adcb
mov
cmpsb
pushf
pop
cwtl
sbb
sub
or
hlt
adc
or
loopne
cwtl
inc
sub
xchg
loop
subb
fldl2e
fistps
jge
pop
sub
gs
jg
mov
jmp
lea
loop
mov
int3
jmp
cmp
cmp
mov
loopne
int3
cmp
imull
and
dec
jg
mov
cmp
inc
ret
addl
adc
js
lock
jmp
push
or
out
push
mov
enter
sub
imul
push
fsubrs
psllq
and
mov
xchg
ds
mov
cld
sub
addl
movsb
call
jg
cmp
sub
pop
scas
leave
mov
sarb
dec
lods
arpl
push
std
jo
pop
push
sub
lds
xchg
add
pop
cmp
in
loop
stos
mov
rcl
push
popa
iret
negl
sbb
cmc
cld
mov
or
cwtl
mov
and
test
stc
inc
aaa
fs
cmp
xlat
dec
inc
push
inc
adc
xchg
js
outsl
out
fwait
pop
cmp
sub
and
imul
inc
inc
out
xchg
insb
cld
pop
cs
pop
fbstp
insl
push
sbb
insb
mov
push
mov
imul
inc
pop
dec
in
add
test
out
sub
popa
dec
mov
xor
fnstcw
bound
adc
jmp
loop
dec
sbb
jbe
test
mov
add
push
xor
repnz
bound
xor
test
mov
pop
jp
icebp
xor
sub
pop
cltd
mov
xchg
es
test
adc
jl
movsb
aad
add
sub
dec
lods
mov
xor
sbb
insb
movsb
adc
jne
pop
lahf
mov
xorl
xchg
fists
lret
jmp
aam
test
jg
mov
pop
dec
and
push
rcr
push
cmp
fwait
nop
es
mov
cmp
jns
ja
aam
xlat
es
cmp
insb
test
and
xor
mov
xor
inc
iret
repz
cmc
cmc
test
lods
dec
sub
xchg
and
cli
pop
adc
mov
cmp
or
js
adc
cmc
lods
add
sahf
fiadds
sbb
test
inc
jno
pushf
imul
in
and
sub
ret
mov
test
scas
xchg
jbe
pop
in
jmp
test
pop
jnp
xchg
inc
add
xchg
lods
lret
sbb
popa
or
mov
das
jae
mov
out
fdivl
mov
pop
jg
sub
in
xor
xchg
sbb
xchg
in
sti
sbb
inc
jl
adc
not
subl
adc
ss
fs
in
pop
je
push
repz
and
inc
push
lea
insb
jp
mov
push
fsubl
shlb
sbb
js
or
insl
sahf
add
lcall
mov
xchg
daa
xchg
ja
dec
jl
jae
pop
repnz
shr
jne
dec
fsubl
adc
dec
fimuls
cmp
js
jbe
bound
out
push
add
loope
imul
add
lds
insb
cmp
movups
or
xorb
inc
dec
je
mov
arpl
inc
mov
cltd
js
je
mov
arpl
ja
lea
jae
push
or
jecxz
shl
and
adc
mov
adc
inc
scas
xor
out
ja
call
pop
out
out
or
jns
xchg
sub
xchg
dec
xor
imul
mov
inc
lock
les
push
inc
or
in
std
ljmp
jno
in
decb
mov
mov
push
push
std
fwait
cmpsl
adc
mov
xor
nop
pop
test
inc
insl
sbb
and
xorb
lock
xor
js
gs
jecxz
pusha
out
sbb
push
push
mov
shl
push
dec
xor
lcall
lret
int3
push
mov
xchg
mov
daa
sbb
push
aaa
subl
cmp
test
cmc
addr16
pop
jg
icebp
mov
cmpsl
add
sub
in
lret
sbbb
subb
push
pop
sbb
outsb
out
xor
ss
mov
xor
mov
or
cld
fists
test
inc
sbb
fwait
popf
call
cmp
inc
out
pop
jne
loope
lock
sub
xor
iret
test
dec
pushf
xor
xchg
frstor
pop
pop
dec
outsb
sahf
rorl
inc
popf
pop
pop
testl
call
xor
push
dec
js
jbe
leave
sub
mov
mov
out
mov
in
lods
push
and
inc
and
jp
fwait
pop
mov
mov
jge
add
jl
xlat
stos
std
out
mov
jecxz
xchg
push
ljmp
movsb
fldlg2
pushf
out
imulb
xchg
stc
mov
lods
out
jmp
fwait
stos
repnz
fwait
add
mov
fistpll
pop
mov
fisubs
inc
lods
jbe
mov
mov
notl
ja
call
hlt
sti
andl
jb
xor
nop
xorb
dec
mov
lret
sbb
jle
aas
lods
fstl
out
or
pusha
leave
xchg
xchg
lods
xchg
sub
ret
xchg
cmpsl
pop
cwtl
add
or
cmp
test
scas
aas
mov
sub
int3
lcall
pop
roll
inc
popa
movsb
bt
lahf
jle
popa
cmp
jmp
into
push
js
add
push
adc
sub
gs
gs
cmpsl
hlt
adc
mov
in
pop
xchg
addl
lods
lea
xlat
js
or
insl
pop
dec
push
cmp
shll
mov
fs
xor
sbb
or
lcall
stos
ret
pusha
leave
xlat
stos
inc
cli
inc
inc
scas
movb
lahf
sub
hlt
es
xor
adc
push
adc
xchg
insb
mov
frstor
pop
sahf
jb
jne
call
pop
lret
xlat
mov
icebp
cmc
cld
xor
jae
mov
repnz
fisttpl
das
sub
nop
dec
pop
negl
movsl
jp
dec
mov
shlw
add
idiv
add
dec
and
jno
cld
arpl
ss
jl
pop
pop
int
sbb
dec
inc
jae
pusha
pushf
mov
cmc
cmp
or
stos
pop
dec
sub
lret
fbld
sub
lds
add
out
mov
cli
add
pop
xorb
sbb
in
popl
ljmp
cmc
or
adcl
sub
into
mov
jp
out
push
add
jb
rclb
dec
push
sub
xor
into
mov
stos
subb
xor
fwait
add
adc
sahf
and
loop
popa
repz
and
inc
xor
and
test
setns
rcr
and
mov
arpl
mov
arpl
out
xchg
ss
aaa
out
lea
sbb
jge
js
imul
js
mov
inc
xchg
sub
pop
sbb
insb
rcll
fs
or
in
adc
xchg
lret
xchg
pop
pop
mov
add
dec
les
push
dec
inc
cmp
outsl
pop
mov
stos
add
in
xlat
sub
rclb
out
push
jp
test
mov
sbb
pop
scas
jo
xchg
push
sbb
xchg
xchg
mov
mov
lds
test
inc
and
aaa
aam
sub
icebp
es
loope
jge
inc
js
or
ficoml
xchg
dec
adc
xlat
push
jmp
jge
sub
inc
push
cmp
inc
sbb
push
int
xor
test
mov
aam
dec
out
inc
mov
inc
lea
jecxz
iret
std
aam
add
xchg
mov
sbb
push
xor
test
adc
xor
jo,pn
into
xchg
incl
sbb
sbb
out
loop
pop
mov
andb
movsb
pop
out
rcrl
jns
mov
and
pop
xchg
ja
cmpsl
clc
leave
cwtl
fildl
mov
mov
and
in
sbb
shrl
fsub
push
in
push
daa
push
mov
jp
iret
cmp
xchg
out
clc
sbb
sarb
ficoms
jmp
mov
int3
les
jecxz
icebp
out
mov
ljmp
push
dec
lods
rorl
and
icebp
pop
jne
test
daa
cmpsl
pop
mov
imul
pop
pop
aaa
pop
nop
sub
sbb
fwait
insb
adc
movsb
pop
movsl
test
inc
inc
xchg
push
push
test
mov
in
pop
mov
movsb
sahf
sbb
or
mulb
sub
test
and
sbb
mov
pop
and
daa
cmp
lret
dec
push
out
mov
dec
adc
int3
pusha
pusha
shll
imul
inc
mov
mov
lcall
jns
push
push
lods
add
out
adc
dec
xor
xchg
jnp
push
lret
and
mov
inc
hlt
xchg
mov
push
mov
jno
dec
andb
add
push
repz
popf
xor
test
pop
outsb
cli
repz
jns
popf
push
push
and
jnp
mov
sub
outsl
push
jnp
xor
cld
iret
ss
inc
fcomip
mov
mov
arpl
jp
out
mov
xor
mov
push
or
cmc
fbld
inc
sbb
push
gs
mov
clc
add
cmc
pusha
mov
add
dec
add
pushf
bound
iret
push
mov
js
int
pushl
fwait
pusha
inc
stc
push
xchg
in
mov
les
add
jbe
iret
jg
aaa
ds
or
mov
xor
cmp
add
pop
nop
sub
jge
xlat
jmp
loopne
xlat
mov
mov
sbb
inc
or
ss
imul
xor
xchg
iret
test
sti
sub
sbb
jo
fnsave
out
and
push
rorb
cmp
cmc
add
jp
and
xor
icebp
outsl
out
lea
mov
pop
dec
pop
and
and
iret
mov
js
lcall
dec
xchg
mov
dec
jbe
dec
lods
jb
adc
popa
pop
fcom
mov
bound
inc
shll
js
jae
stos
mov
movsb
out
ja
sbbl
repz
js
repz
jg
stos
lahf
cmp
sbb
push
in
daa
jp
in
inc
ljmp
inc
inc
jae
lcall
mov
add
stos
add
mov
std
pushf
cmp
push
dec
inc
fisubl
clc
inc
test
or
jecxz
mov
dec
test
push
cmp
fcomps
xor
dec
test
dec
dec
sub
mov
jp
jmp
mov
pop
jns
add
and
stos
xchg
inc
xor
adc
out
imul
and
popf
aas
lock
mov
fdivl
daa
pop
fstps
je
sub
xchg
inc
dec
imul
jg
mov
mov
ljmp
mov
add
fstl
xor
inc
mov
sbb
xchg
or
fdivr
and
push
jmp
shlb
iret
fisubl
add
lahf
xchg
es
pop
or
scas
or
cwtl
mov
lods
cwtl
xchg
nop
sbb
inc
add
imul
addl
rorb
ret
sbb
push
jb
adc
push
pop
mov
in
xchg
jg
sbb
sbb
aam
cs
ljmp
sbb
push
bound
xchg
int
or
insl
aas
insb
ja
cwtl
push
sti
sarb
leave
add
cmp
inc
sub
xchg
xchg
imul
xchg
mov
je
rcrb
cmp
into
and
and
mov
js
add
add
and
int
in
push
jae
lods
mov
test
test
xchg
add
pop
cmp
xor
imul
out
in
inc
cmp
icebp
sub
pop
lahf
push
push
popa
into
sbb
aam
jp
je
jmp
push
cmpl
mov
dec
mov
mov
addr16
addl
xor
dec
cmp
leave
push
jle
jae
test
and
cmp
loop
and
fisubrl
aaa
add
xor
or
add
jb
pop
fidivs
out
cltd
inc
scas
push
lds
dec
repnz
fwait
adc
dec
ficomps
sub
aam
pop
or
xchg
outsb
adc
or
push
pushf
out
add
mov
xor
popa
loop
lock
sbb
in
iret
inc
push
dec
add
insl
adc
mov
pop
adc
pop
fnstsw
and
mov
nop
adcl
ror
jo
add
imulb
aaa
add
add
xchg
mov
dec
ss
jne
inc
dec
mov
fiadds
loope
push
out
pusha
or
repz
jecxz
and
pop
repnz
lret
stos
push
mov
mov
enter
xor
or
inc
mov
in
jl
mov
push
stc
push
mov
lea
in
stc
lret
int
nop
push
adc
dec
lock
and
fneni(8087
sbb
in
das
leave
sub
mov
js
aam
dec
iret
sub
dec
cmp
aam
test
pop
mov
jge
pushl
adc
add
test
pop
pop
fbstp
es
add
roll
mov
mov
inc
jne
mov
gs
mov
jne
xor
je
push
lcall
push
xor
dec
sahf
jg
xor
and
into
dec
js
aas
pusha
dec
cs
push
cmpsb
cmpsl
imul
adc
je
mov
jo
ret
std
sub
adc
and
outsb
adc
rorb
sub
pop
dec
rorb
cwtl
or
mov
mov
scas
adc
sub
insl
sub
inc
dec
out
fimull
das
pop
or
lods
push
pop
adc
cmpsl
jo
mov
xor
ja
lods
adc
adc
lahf
sbb
ss
or
dec
pop
ja
aad
push
fnsave
loope
outsl
pop
cmp
in
push
xor
mov
adc
outsb
cmp
int3
jl
jnp
aas
cli
mov
ljmp
cs
in
fnstsw
jecxz
add
loope
xchg
xor
loopne
nop
sub
add
imull
inc
shrl
pop
cmp
movsb
pop
cmpsl
mov
inc
sub
push
adc
mov
jbe
mov
not
adc
lods
add
mov
dec
jb
mov
addr16
ficoml
jmp
lods
movsl
sbb
loop
cmp
mov
lret
iret
mov
lds
mov
push
call
scas
pusha
sar
or
adc
cmp
fldcw
sbbb
stos
test
lret
push
call
sahf
pop
scas
test
test
cwtl
jbe
fucom
popa
push
jg
out
in
adcl
dec
mov
lret
or
mov
pop
mov
xchg
xchg
pusha
cld
xchg
push
push
pop
jg
push
outsb
cltd
xor
mov
jne
sahf
pop
xchg
es
pop
in
sbb
es
xchg
sbb
in
or
pop
sti
xor
cmpb
fdivrl
jno
mov
shll
jmp
cld
popf
cmpsl
push
inc
xor
xor
inc
push
in
sbb
mov
out
inc
mov
inc
push
and
pop
mov
fiadds
add
jg
xor
xchg
rclb
test
in
inc
movsb
or
hlt
add
mov
loop
mov
out
jecxz
xchg
ljmp
adc
mov
jge
aad
cmp
pop
and
fs
arpl
popf
outsl
movsb
xchg
scas
scas
adcb
dec
daa
mov
movsl
testl
in
mov
insb
je
jb
movsl
xor
jb
stos
mov
mov
imull
mov
es
adc
cld
out
out
xlat
cld
pinsrw
sbb
std
fs
sbbb
scas
jnp
cmp
hlt
shll
dec
mov
aad
xor
mov
scas
xorl
cmp
adc
mov
cmp
xchg
dec
dec
cmpsl
iret
daa
mov
jmp
or
adc
sub
xlat
jbe
and
mov
cmpsb
push
mov
mov
cmc
test
movsl
repnz
pop
cld
sbb
daa
xchg
cmpl
popa
push
data16
fisttpll
jg
pop
xor
push
adc
sbb
mov
cli
adc
sti
sbb
push
adc
jle
pop
adc
lock
inc
int3
dec
movsl
shrb
outsl
xor
stc
pusha
je
cmp
and
sub
aas
mov
push
mov
cmp
repnz
js
repz
test
mov
das
push
push
push
push
sti
pusha
pop
popa
leave
aam
adc
lds
fwait
mov
insb
and
ljmp
xchg
popa
jno
and
out
notl
mov
outsb
stos
adc
nop
lock
sarl
xchg
sbb
xchg
repnz
cld
in
insl
fistpll
jnp
adc
sub
cmpsl
jb
gs
xor
cs
or
test
fidivrl
xorl
test
mov
push
lcall
or
xchg
in
xor
inc
xchg
jp
insl
aam
mov
pop
cli
movsl
js
loop
imul
fwait
stos
pop
add
rcrl
inc
or
cmc
cmc
ss
fs
mov
adc
cmp
popf
stos
sub
lahf
push
jmp
aam
jns
andl
push
movb
mov
mov
pop
or
push
sahf
sbb
sub
push
ja
push
mov
mov
push
lcall
loope
rolb
imul
repz
and
repnz
xor
lds
fiaddl
dec
repnz
dec
in
xchg
movsb
pop
add
jo
out
call
mov
lret
push
daa
sub
pop
std
and
pop
aas
je
ror
movb
cmp
cmp
out
in
pop
lret
imul
dec
je
mov
es
add
hlt
or
je
mov
inc
pop
xor
shrb
cld
test
lret
inc
clc
pop
imul
cmp
jae
sarb
mov
cli
int3
xchg
lret
xorl
push
les
cli
divb
jo
xchg
jmp
xchg
mov
cltd
scas
les
jb
fisubl
call
jns
pop
out
insl
jnp
stos
xor
adc
and
mov
inc
lods
push
push
pop
mov
jg
pushf
cmp
inc
sbb
inc
lret
or
sbb
les
mov
or
xchg
fcmovne
out
adc
xor
fadds
lret
push
icebp
and
sbb
jb
stc
daa
std
ja
pushf
adc
pop
pushl
xor
inc
xor
in
js
or
les
scas
out
xchg
and
push
mov
jl
xchg
or
lcall
mov
cmpsl
sarl
aas
loop
mov
inc
cmpsb
sbb
jne
insb
imul
int3
cli
mov
cmp
pop
mov
jmp
dec
clc
or
icebp
cmp
xchg
xchg
in
dec
mov
inc
jae
mov
ljmp
add
int3
jno
rcl
mov
sub
fnsave
cs
dec
sub
ss
out
xlat
int
xor
rorb
pop
xlat
sarl
cmp
push
cmp
jae
mov
cmp
sbb
outsl
lods
les
and
ret
js
mov
jg
decb
pop
rolb
mov
lahf
lods
push
sti
sub
cld
adc
sbb
inc
dec
in
fldcw
movsl
mov
and
ss
mov
shlb
add
push
aad
lods
aas
mov
sub
pop
lods
pop
out
and
cltd
xchg
cmp
mov
insl
aad
dec
fs
pop
inc
scas
test
call
add
aas
ffree
gs
arpl
in
cmp
push
outsb
mov
sbb
repz
outsl
mov
push
aad
add
inc
jnp
adc
popf
cmp
scas
or
and
dec
xchg
pop
or
dec
pop
cmp
inc
sbb
push
int
shrb
adc
das
js
hlt
stc
movsb
or
push
pop
sar
cmp
add
lods
test
mov
mov
fidivl
aaa
test
mov
pop
cmp
jg
cmp
imul
push
jb
pop
loopne
adc
in
fwait
dec
fistpll
call
add
out
loope
dec
test
loope
or
lret
addl
aad
test
mov
testb
cmc
xchg
add
add
xor
dec
in
jmp
ret
lea
rol
rorl
test
and
adc
inc
cs
mulb
movsl
push
out
add
lds
inc
push
dec
jp
mov
adc
arpl
add
add
sarb
es
bound
lret
ljmp
add
or
mov
int
mov
pop
lahf
inc
pop
cltd
or
mov
xor
add
in
jb
outsl
mov
cmp
imul
addr16
sbb
jge
jae
or
pop
fadds
ficompl
mov
xchg
dec
sub
ljmp
sahf
dec
xchg
pop
push
cmc
test
xchg
std
xchg
mov
inc
cmp
dec
mov
int3
stos
mov
repz
sarb
mov
pop
jl
fwait
mov
pop
pusha
mul
fisubrl
pop
xchg
enter
repnz
jecxz
into
mov
fisttpl
cmp
nop
xor
fsubrs
clc
jae
dec
dec
addr16
rcrb
cmp
mov
push
das
stos
mov
lahf
dec
adc
lret
hlt
lods
ror
add
in
fisubl
adc
push
aas
inc
pushf
rol
mov
mov
sbb
sub
xchg
cmp
bnd
dec
push
xor
xor
sbb
test
lret
scas
sarl
mov
pop
and
aaa
js
or
imul
jl
cltd
mov
lahf
out
imul
into
fidivrl
dec
inc
fwait
adc
imull
mov
fucom
adc
push
xlat
loope
push
xchg
xorb
scas
repnz
or
popf
mov
addr16
xorb
fs
in
xchg
pop
icebp
test
sahf
mov
daa
sarl
pop
xor
sar
stc
xor
adc
inc
iret
dec
xchg
push
mov
hlt
fisttps
add
xor
mov
adc
scas
pop
test
divl
cld
rcrl
pop
inc
fldenv
mov
into
xor
push
push
into
shlb
imul
sub
das
out
cs
jecxz
mov
or
dec
lods
divb
shll
push
fmull
dec
lret
xor
neg
add
test
sub
mov
push
jnp
mov
and
das
cs
jae
daa
dec
xchg
sub
mov
rorb
dec
mov
and
mov
ficoml
mov
test
push
jmp
sub
cmpl
sbb
arpl
xchg
loope
pop
or
xchg
xchg
out
cs
stos
push
jae
dec
mov
jne
das
sbbb
jno
in
xor
mov
jl
dec
es
fcoml
das
dec
xchg
inc
mov
jns
mov
rcll
jecxz
arpl
inc
inc
in
lret
inc
mov
js
daa
sub
lcall
testl
add
fs
call
lds
inc
jp
subl
sahf
cvtps2pd
icebp
push
cmp
stos
mov
test
in
lcall
outsl
in
and
or
push
or
mov
adc
sbb
icebp
test
cld
js
cs
dec
or
inc
lods
fcompl
mov
clc
mov
inc
jge
pop
mov
sbb
outsl
popa
inc
inc
or
insb
or
in
fstps
mov
leave
sub
fdivr
sbb
xchg
mov
out
mov
popa
hlt
add
pop
std
fnsave
icebp
stos
push
add
sbb
push
xchg
dec
mov
jnp
mov
push
inc
bound
or
stc
push
je
sbb
sti
pop
outsl
shrl
adc
bound
pop
jp
sahf
cmpsl
jno
lds
xchg
cmp
fisubrs
aad
je
nop
pop
adc
push
inc
add
popf
sbb
loop
cmc
xchg
loopne
in
pop
insl
lock
cwtl
stos
out
ret
repnz
loop
jg
cmp
shl
aad
push
in
rcl
add
dec
sub
or
fisttpl
sti
loopne
pop
mov
jb
bound
es
lea
dec
sub
gs
orb
out
jl
repnz
pop
push
movsl
lcall
test
int3
sub
gs
dec
lahf
mov
pusha
inc
stc
test
cmp
stc
arpl
imul
idivb
in
mov
outsb
ret
adcl
mov
mov
sub
insl
sbb
insl
adc
nop
addr16
call
mov
pop
int
push
fsubl
les
push
pop
mov
scas
lds
dec
test
xchg
aam
or
xor
ror
sub
daa
mov
gs
mov
js
insl
sub
stc
fcmove
lret
inc
mov
sub
fmulp
cmp
jbe
push
out
push
pop
xchg
xor
clc
repnz
ret
test
sub
and
cs
ljmp
mov
lock
lock
ja
push
pcmpeqw
ja
test
cmp
dec
call
cmp
sub
mov
dec
xlat
rcl
mov
imul
mov
or
cli
fsub
outsl
int
mov
xor
pop
cwtl
add
cmp
lods
xchg
jecxz
data16
inc
int
pop
jp
insb
pop
call
xchg
test
mov
and
imul
pop
push
sbb
aad
xchg
outsl
daa
xchg
push
mov
test
cmp
dec
xchg
cltd
test
pmaddwd
adc
ljmp
ds
or
add
lods
inc
push
cld
pop
mov
xchg
in
jle
inc
and
cmc
or
loopne
fucom
jae
outsl
mov
add
add
test
jno
mov
jbe
sub
jmp
popf
mov
pop
fidivrl
jg
aad
popf
cli
mov
mov
lock
shll
mov
leave
lret
pop
fdivrs
and
mov
fnstcw
fsts
push
mov
ljmp
push
test
sahf
or
out
sbb
aaa
push
arpl
stos
pop
push
mov
fstps
pop
pop
fcmovnu
int
aas
or
inc
aaa
lret
fisubs
in
push
and
sbb
movsl
pushf
jle
inc
dec
xchg
sbb
shrb
add
mov
decl
jno
mov
je
inc
add
xchg
das
ret
repnz
dec
mov
stc
lahf
mov
into
imul
daa
or
mov
fs
add
xchg
sub
out
movsb
clc
xor
pop
inc
cmp
in
outsl
idivl
pop
push
xor
and
pop
mov
sbb
or
pop
dec
mov
std
xor
popa
lret
mov
jne
subl
fcoml
setnp
outsb
je
out
xor
adc
in
jo
inc
jle
imul
adc
push
daa
mov
jo
inc
movl
sbb
xor
movsb
mov
xchg
cmpl
lcall
mov
cmp
dec
fidivrl
jb
mov
dec
test
sti
int3
mov
fnstcw
mov
mov
push
shll
xchg
jl
mov
xchg
and
and
mov
sbb
add
and
or
mov
adcl
inc
jo
jns
shrl
mov
or
dec
cmp
sbb
pop
in
ljmp
pop
jmp
sub
cld
insb
dec
sbb
inc
jae
mov
out
dec
into
incb
pop
sarl
sub
ss
dec
popf
mov
bound
xchg
movsl
shrb
and
je
lods
imul
je
mov
mov
insl
jno
xor
stos
loopne
dec
mov
push
and
pop
mov
insl
lock
xchg
int
les
ret
xor
pushfw
dec
pop
test
roll
mov
adc
mov
mov
test
pushf
clc
cmp
mov
dec
add
sub
aas
movsb
push
jmp
and
xor
push
je
adc
jle
mov
hlt
dec
orl
mov
stos
in
and
pop
mov
data16
dec
sub
jne
cmp
in
int
repnz
dec
sub
push
xor
popf
inc
and
or
lret
mov
sbb
enter
call
cmp
push
imul
xor
scas
cltd
pop
es
push
loop
mov
sub
shlb
xchg
fistpl
cmp
mov
inc
sbb
add
in
or
mulb
sub
jle
fidivs
and
jae
xchg
inc
xor
add
jb
cmp
add
push
or
push
jmp
ljmp
inc
shl
mov
push
xor
repnz
sbb
lret
movl
insl
pop
fildll
mov
pusha
test
popa
sub
inc
pop
add
xchg
xor
call
pop
sub
xlat
out
bound
mulb
sti
or
stos
mov
neg
mov
jo
into
ljmp
inc
aam
ds
dec
mov
mov
loope
popa
xor
imul
push
mov
lods
sarl
mov
mov
fnsave
cmpsl
mov
mov
mov
inc
pop
inc
push
test
hlt
inc
in
aaa
dec
ret
pushf
jecxz
loop
addr16
leave
popa
and
into
popf
sub
mov
or
imul
repz
mov
ljmp
insb
cmp
adc
aas
les
pop
repz
lcall
push
iret
or
push
inc
add
lea
xchg
in
push
leave
inc
es
shll
movsl
mov
sbb
das
and
or
call
sarb
mov
mov
cmp
clc
fucomp
mov
fistl
enter
pop
dec
aaa
xchg
fildll
adc
xchg
push
dec
mov
mov
fisttps
mov
push
daa
mov
hlt
cli
inc
mov
les
dec
sbb
mov
das
mov
lret
push
cltd
mov
repnz
cmp
or
mov
out
repnz
mov
mov
push
sbb
cld
rcr
clc
out
iret
sub
scas
sti
je
aad
cmc
dec
jne
decl
ja
loop
incb
adc
scas
daa
and
cltd
out
and
push
inc
shlb
jne
push
bnd
fwait
cmp
cmpsl
mov
sbb
sti
ljmp
push
mov
jg
xor
sbb
and
aaa
testl
push
adc
dec
cmc
inc
add
dec
je
cmp
in
or
ss
js
shrl
sbb
int
add
pop
rclb
adc
cmpsb
cmp
loopne
movb
mov
movsl
mov
subb
jnp
cmpsl
xchg
dec
dec
push
xlat
mov
jae,pt
push
and
sahf
mov
pop
inc
adc
pop
ljmp
ljmp
lahf
sti
fstl
repz
ficoml
mov
insl
and
jo
cmpsl
out
cmp
ds
stc
xchg
fsts
adcl
mov
aaa
pusha
imul
insb
subl
out
stc
loope
shll
dec
sbb
dec
sub
mov
aaa
cwtl
jo
mov
cmp
repnz
int3
xor
cmp
add
pop
mov
cmp
pop
add
jg
jno
mov
mov
cmc
sahf
mov
dec
add
cmp
cwtl
sbb
call
loope
adcl
mov
lcall
faddl
mov
test
jl
or
push
jmp
sbb
xchg
add
lret
test
loope
mov
int3
pusha
pushf
rcll
sub
addr16
sub
fwait
cwtl
fistl
xor
or
add
stc
inc
xchg
jo
and
sub
adc
or
mov
fisubrs
movsl
mov
ljmp
xchg
repz
mov
inc
pop
pop
adc
xchg
jno
shll
repz
int3
sub
mov
cld
aad
and
pop
arpl
rol
jg
or
in
mov
adc
xchg
jno
push
adc
mov
adc
inc
add
pop
out
cmpsl
mov
adcl
sbb
rcrb
js
jnp
loope
and
jmp
fst
loop
fbstp
shl
mov
sbb
sub
mov
pop
hlt
cmp
pop
inc
movsl
daa
jo
pusha
mov
fcomps
mov
pop
mov
addr16
and
xchg
test
sub
sbb
fisttpl
lahf
stc
jne
mov
call
lret
cltd
or
push
test
ja
add
or
stos
dec
cmpb
rcrb
jns
xchg
mov
je
cli
pusha
addr16
pop
lds
adc
into
mov
iret
lret
repz
dec
ss
jnp
into
mov
mov
dec
in
cmpl
icebp
and
xchg
or
test
notb
sub
or
push
jbe
cmp
xchg
cmpsb
push
xlat
enter
and
std
int
xor
mov
push
xor
push
call
adc
cli
push
popf
pop
mov
addr16
xchg
mov
ljmp
dec
sbb
sub
cmpsl
loope
pop
sub
bound
enter
cltd
push
mov
repz
jns
pmaxub
mov
imul
movl
lods
mov
out
sbb
xor
int
cmp
fists
sbb
lret
test
clc
mov
mov
aad
jmp
stc
lcall
sbb
push
fisttps
ja
aad
andl
test
xchg
mov
test
in
and
lcall
pop
xor
xorl
push
xchg
jno
mov
lods
test
fs
rcrb
notl
push
leave
out
cmp
or
mov
xor
mov
xchg
loop
call
jl
xor
jecxz
ret
test
lahf
mov
loop
or
aaa
jo
inc
jecxz
cwtl
push
loop
test
loop
cwtl
xchg
mov
mov
dec
outsb
fisttpl
and
sub
movsl
cmc
add
leave
sbb
fs
ficompl
jbe
es
js
sti
mov
xlat
icebp
sub
pop
push
daa
fwait
mov
imul
ljmp
dec
sbb
inc
enter
lret
cmpb
fnstsw
lock
test
cmp
out
and
test
fildl
xchg
inc
lcall
faddp
cmp
mov
mov
loope
aaa
stos
mov
push
lret
pop
les
rcrb
pop
inc
les
in
add
sub
adc
add
cli
out
into
and
mov
mov
mov
fst
insl
es
and
insl
setbe
hlt
mov
fcoml
bound
inc
pop
mov
fsubrl
pop
push
or
dec
aas
ss
sbb
cmp
push
fldenv
or
sub
dec
negl
out
pop
add
mov
scas
fcomi
jecxz
notl
adcl
xchg
push
xchg
lcall
mov
ret
daa
or
out
mov
cmp
fwait
dec
adc
inc
pop
jno
mov
mov
pop
int
je
add
jbe
je
mov
pop
stos
add
jae
insl
scas
and
add
cmp
dec
leave
mov
mov
sbb
test
and
mov
dec
add
adc
fs
pop
ret
mov
jl
cli
sbb
mov
jnp
bound
inc
mov
push
inc
sahf
pop
push
jp
sub
lea
into
gs
lods
je
sbb
popf
cmp
cs
or
jo
mov
xor
xchg
sahf
in
hlt
mov
cmp
mov
sbb
insl
add
dec
popa
scas
fildl
test
ret
loopne
mov
xor
movb
adc
jnp
out
insb
adc
shl
orb
cmp
daa
icebp
sub
stos
test
repnz
cld
test
js
repnz
ret
movsl
sahf
mov
xorl
xlat
cmpb
into
aad
or
ds
cmp
jb
mov
mov
ljmp
loop
cli
add
xchg
sub
or
test
push
adc
or
rcrb
inc
shlb
ret
xlat
loopne
pop
cli
shlb
cmp
xor
mov
inc
je
mov
mov
scas
gs
jge
cmpsl
insb
popl
pop
adc
or
jg
lea
mov
cmpl
out
cld
jo
shrl
hlt
push
xorb
jo
fisttps
jne
jg
cwtl
cmpsl
xchg
push
pop
dec
dec
sti
push
mov
dec
dec
movsl
stos
push
mov
push
xchg
mov
xlat
sub
sahf
and
or
aas
sti
test
test
sub
jge
rorb
stos
or
sub
mov
test
dec
jne
outsb
mov
int3
nop
sub
mov
jo
pusha
iret
xchg
and
popa
inc
sbb
loop
repnz
pop
pop
jae
or
data16
outsb
xchg
pushf
mov
mov
aaa
adc
push
dec
pusha
and
jmp
mov
xchg
adc
in
lods
xor
adc
repz
test
lcall
add
xor
cltd
lock
adc
lcall
cwtl
sbb
lock
xorb
xchg
imul
jle
test
dec
icebp
adc
fwait
dec
test
scas
fcomps
or
cs
popa
lahf
and
dec
inc
arpl
daa
xchg
ds
sub
mov
xor
je
adc
sbb
xor
cmp
aam
sbb
bnd
mov
push
sbb
mov
imul
lret
dec
pop
outsb
int3
jno
aas
dec
xor
sti
sbb
push
and
daa
movsb
test
add
mov
mov
fmul
add
loopne
pushf
das
cmp
xchg
cmp
and
hlt
popa
xchg
ds
lea
jmp
divl
into
mov
sub
fnstenv
sbb
add
outsl
filds
push
mov
sub
sahf
jnp
loopne
adc
cwtl
xchg
nop
pop
stos
ja
push
pop
adc
ljmp
into
movsb
inc
stos
inc
xor
mov
mov
fisubl
push
inc
xchg
mov
xchg
jmp
or
cmp
push
sbb
inc
mov
je
jb
lods
loop
arpl
dec
rorl
dec
and
xchg
mov
cmp
mov
out
loope
scas
xchg
add
mov
push
inc
mov
push
cwtl
add
out
add
mov
mov
shrb
jg
mov
jmp
rclb
ret
or
xchg
push
mov
test
mov
imul
sbb
fiaddl
loopne
aad
mov
xchg
mov
es
repz
in
xchg
push
xor
fdivrp
stos
jae
and
pop
loop
pushf
jmp
arpl
insb
cmpb
sub
xchg
mov
lret
add
outsl
sub
xor
cmpb
mov
shl
pop
icebp
sub
mov
mov
sbb
test
or
mov
mov
outsb
mov
fiaddl
push
arpl
or
mov
sarl
push
aad
loop
aas
jnp
mov
jne
jae
stos
fildll
inc
xor
add
sub
shrb
out
push
mov
mov
add
cltd
xor
push
aaa
lcall
inc
dec
cmc
push
sarl
pop
andl
sub
mov
pop
nop
xchg
fdivrp
rolb
movsb
loope
leave
mov
mov
out
popf
xchg
adc
dec
mov
sbb
in
inc
nop
pop
iret
fiadds
mov
sbb
cmp
nop
jnp
and
lahf
fs
loop
sbb
add
mov
cmp
mov
lods
repz
sbb
out
lret
and
jb
jae
ds
and
daa
outsb
inc
movsb
dec
mov
cli
popa
out
in
pop
shl
push
inc
rolb
jns
test
jle
lahf
aas
xor
cmpb
lds
push
adc
mov
cmpsl
xor
test
aam
jno
stos
in
movsl
xchg
xchg
or
xor
iret
push
push
cs
jnp
fwait
cmp
push
lea
popa
cli
pop
mov
mov
xor
pop
xchg
inc
jnp
scas
jmp
mov
ss
sub
jge
sbb
ljmp
and
or
inc
js
pop
stc
test
inc
jp
pop
and
call
fs
or
and
sub
pop
icebp
jl
jg
in
pop
push
or
mov
sub
mov
inc
pop
arpl
sub
cmp
data16
shll
push
in
dec
dec
sti
cmp
fdivs
outsb
mov
jbe
fistl
negl
cltd
aas
adc
mov
dec
add
insb
mov
nop
mov
inc
hlt
pop
movsl
mov
push
dec
andl
adc
mov
push
testb
fmul
push
fstl
or
in
sub
xchg
stos
pop
test
call
into
idiv
add
mov
aad
cmp
stos
das
and
mov
lds
sub
push
and
jne
loop
add
les
xchg
mov
lret
jg
test
dec
in
xor
popf
std
cli
dec
ret
shlb
cwtl
stos
cs
adc
aam
fwait
add
sub
ja
mov
mov
and
inc
leave
push
pop
stos
xchg
sub
adc
jne
push
cmp
rcrb
dec
cli
lds
pop
test
daa
adc
lret
and
mov
or
dec
fiadds
repnz
inc
cmp
insb
pop
mov
mov
jnp
cs
cmp
mov
dec
ret
int
push
adcb
call
cmp
or
ss
inc
data16
testb
sub
mov
mov
mov
mov
xor
pop
pusha
add
jecxz
es
cmp
xchg
fwait
jmp
push
inc
adc
pop
cli
or
and
mov
mov
mov
or
and
fwait
and
xor
ss
mov
outsb
in
xchg
add
adc
cmp
ja
orl
ds
sbb
push
xchg
sub
cli
and
fcmove
and
cmpl
or
daa
pop
test
mov
neg
dec
popa
add
push
add
sbb
clc
mov
and
dec
in
rcll
imul
leave
lahf
mov
and
aam
mov
lret
and
mov
out
addb
or
insb
shl
add
add
mov
or
push
lcall
and
out
call
subl
dec
dec
lds
iret
fcoms
loope
cltd
leave
dec
jb
aaa
ret
cmpsl
jno
mov
mov
dec
lea
xor
mov
loopne
pushf
dec
das
and
scas
push
fimull
inc
scas
pop
xchg
lcall
out
cmpsl
inc
sbb
add
stos
cltd
or
call
xchg
push
fimuls
stos
enter
pop
in
not
jmp
es
fnstcw
movsb
shl
xor
loope
push
faddl
std
xchg
or
add
cmpb
or
xchg
lret
inc
dec
decb
jge
or
xchg
cs
sub
xor
mov
push
in
lret
or
dec
cmp
push
mov
aas
cli
ds
mov
or
pop
jg
jns
jl
push
jecxz
mov
sbb
xchg
or
inc
pop
pop
out
jmp
push
js
movsb
ret
cli
rep
shll
sbb
fdivl
cmp
lcall
cli
imull
sarb
adc
push
or
jg
xchg
xor
rorl
dec
lods
pop
fisubs
xchg
inc
sbb
orb
sbb
jne
cmc
int3
in
push
xor
mov
mov
lock
sbbb
xchg
xchg
sbb
or
xorl
mov
mov
js
sub
add
arpl
push
adc
mov
int
fnstenv
test
xor
jbe
mov
adc
fwait
mov
cmp
lea
jbe
push
sbb
fisubrl
adc
scas
out
xchg
sahf
pop
std
sbb
jl,pt
movsl
idivl
lahf
pop
and
xor
rolb
mov
push
ljmp
popa
mov
push
mov
adcl
test
jbe
dec
or
jge
arpl
pushf
jbe
mov
and
imul
inc
jp
mov
inc
cltd
sub
lods
rolb
aas
addl
mov
cs
aam
mov
pcmpeqb
aas
stc
stos
pop
jae
loop
xor
in
mov
std
mov
iret
fwait
aam
inc
popa
cmp
push
cmp
inc
mov
mov
cmpl
inc
loope
scas
xlat
insb
xor
dec
cmp
test
fwait
xor
shlb
imul
out
mov
hlt
xor
js
mov
sar
fdivrp
xchg
insb
fwait
aaa
mov
int
adc
ljmp
lds
add
cmp
xor
cwtl
pop
movsl
ss
push
test
inc
jl
jg
mov
cmc
shlb
adcl
sub
lret
dec
or
addr16
jmp
rcrl
fistl
repz
cs
test
in
or
xchg
cmp
add
xchg
dec
cmp
xlat
sbb
sbb
and
jle
jnp,pn
add
movsb
lret
add
pop
aam
push
dec
loopne
sbb
gs
xchg
jb
idivl
aad
inc
inc
loopne
ss
or
daa
xlat
test
popf
stos
inc
mov
cmpsl
inc
rcrl
repnz
fistpl
push
loope
pop
dec
xchg
mov
ss
adc
subb
mov
mov
int
cltd
movsl
fisttpl
out
movsb
mov
repnz
or
jle
sbb
jecxz
mov
jae
fimull
adc
xor
mov
and
mov
pusha
outsl
mov
jmp
dec
jns
dec
inc
push
adc
iret
ret
imul
cli
mov
sub
fdivrl
repz
inc
or
mov
xlat
mov
mov
add
orb
out
xlat
mov
pop
je
es
pop
push
mov
jecxz
pop
clc
jns
aad
xchg
fcompl
add
out
jbe
lcall
mov
movnti
es
cmp
dec
xor
mov
add
inc
cmp
loope
lcall
rorl
mov
stos
push
scas
pushf
jmp
ja
jmp
add
lds
fistl
leave
fmuls
in
mov
pop
out
out
icebp
or
jae
out
push
orb
add
sahf
jmp
imul
sbb
inc
aaa
es
imul
sbb
bound
jbe
lds
mov
mov
bnd
mov
je
push
testb
ljmp
sarl
or
dec
in
pop
fidivrs
outsb
mov
push
mov
jmp
jns
cmc
inc
into
in
or
shll
cmp
mov
decb
push
inc
cmpl
xor
dec
mov
sbb
arpl
xchg
xor
xchg
mov
pushl
aas
cmpsb
cli
incb
jge
leave
inc
pop
sbb
mov
jnp
pop
rclb
bound
xor
test
or
rclb
pop
aaa
push
aaa
movsb
aas
int3
mov
loope
ret
ss
sahf
stc
add
sar
bound
jnp
fimull
lcall
dec
in
pop
mov
loopne
xchg
arpl
cld
cwtl
fiaddl
jp
fs
sub
and
cmp
sahf
push
cmp
shl
or
jmp
ljmp
outsl
xor
insb
rep
inc
das
iret
mov
push
inc
call
mov
xchg
mov
push
mov
cwtl
fsubl
or
sub
loope
mov
out
xchg
or
scas
out
popa
xor
enter
inc
xchg
jecxz
imul
adc
mov
and
pop
push
aad
dec
inc
xor
daa
xlat
xchg
aaa
sub
mov
sbb
lods
gs
arpl
ds
pop
pop
jbe
xchg
dec
mov
mov
xchg
and
and
pop
and
fwait
sub
sbbl
push
lea
frstor
push
pop
push
sub
add
dec
data16
cmp
mov
lods
sti
scas
push
insl
adcb
int3
inc
push
and
mov
sbb
xor
ljmp
adc
nop
dec
mov
imul
jnp
movsb
adc
dec
test
ficomps
in
mov
outsb
ljmp
shrl
cmp
lcall
ret
mov
sub
mov
fcomp
xchg
xor
mov
js
std
arpl
cmpsb
clc
insl
loope
push
mov
pop
sbb
or
jl
cmpsb
sub
add
xor
xor
pop
sbb
push
pusha
xchg
xor
imulb
jmp
gs
xchg
fwait
mov
dec
jle
and
jae
jmp
insb
add
sbbl
sbb
cs
insb
add
xor
lock
data16
ljmp
mov
add
xor
xorb
shlb
sub
sarb
adc
mov
pop
jge
hlt
lods
and
fldl
jbe
bound
mov
into
rcr
pop
cmp
add
pusha
or
mov
push
or
sbb
mov
inc
push
stc
lcall
data16
loopne
mov
out
sub
imulb
and
sbb
mov
and
sub
pop
or
out
and
je
call
xor
insb
dec
test
xchg
out
pop
or
prefetchnta
lea
xchg
lahf
dec
sahf
xor
mov
xchg
sub
or
push
inc
pop
or
jge
adc
mov
jp
in
movsl
inc
sbb
xchg
jo
orl
mov
imul
pop
push
cmpsl
aas
outsl
fucomi
cmp
aas
imul
sbb
into
or
aaa
mov
push
mov
xor
popf
movsl
imul
rorb
fwait
bound
or
cmp
clc
dec
repz
sub
pop
filds
xchg
dec
aad
or
jge
loop
popf
sub
loopne
adc
out
int
stos
inc
mov
dec
adc
mov
cs
and
cmp
cli
dec
add
fxch
sbb
mov
je
cmp
adc
push
mov
dec
loop
mov
icebp
xchg
jae
jg
jle
jmp
imul
cld
jl
inc
popa
pusha
mov
push
into
sahf
sub
add
jg
inc
adcb
inc
ud0
mov
mov
push
jge
hlt
subl
adc
outsl
sub
pop
outsl
cmp
popf
jne
or
aaa
pop
lret
std
pop
loopne
sahf
je
sbb
jle
imul
arpl
mov
cmp
add
fimull
lock
sbb
inc
inc
cmp
or
push
lock
add
and
dec
imul
out
pop
jg
js
fmull
inc
add
push
in
adc
mov
dec
out
icebp
mov
call
mov
cmp
add
xor
jne
loopne
mov
push
push
mov
shl
pop
xchg
or
inc
jge
and
clc
add
sahf
into
xchg
test
and
imul
repz
push
gs
lea
int3
sbb
lahf
loopne
lock
push
inc
xorb
inc
mov
xchg
loop
add
dec
leave
pusha
xor
push
push
lds
add
mov
add
inc
into
push
pop
pushf
sti
jns
jne
mov
arpl
inc
dec
aaa
out
nop
sbb
nop
push
movsl
adcl
and
in
orl
les
push
loop
cmp
mov
xchg
scas
test
movd
in
aas
pop
dec
cli
dec
test
fs
jp
sub
lods
mov
test
lcall
call
out
mov
push
aad
mov
push
icebp
gs
stos
mov
lahf
mov
push
mov
rcrl
mov
in
movsb
xchg
mov
mov
gs
popf
imul
mov
pop
xchg
repz
imull
or
out
imul
mov
push
ds
mov
push
xor
test
lahf
mov
push
add
dec
insl
rorl
push
mov
add
jge
icebp
inc
mov
jnp
test
sub
add
inc
mov
cmp
inc
xchg
mov
data16
imul
aam
pop
int
loop
inc
push
adc
push
sbb
popa
jnp
push
or
cwtl
std
ss
dec
in
xchg
data16
xchg
fcmovbe
outsb
mov
sbb
push
cld
enter
pop
add
adc
cmp
pop
xchg
aas
jecxz
out
push
mov
shr
xchg
mov
sbb
lods
push
mov
insb
int3
sti
imul
dec
jae
adc
xchg
add
inc
loopne
jge
cli
test
aas
mov
jno
in
pop
add
rorl
jae
in
push
sbb
iret
outsb
cs
jnp
xor
mov
sbbb
add
sub
movsl
push
cli
mov
add
fcmovnu
xchg
ret
cs
sub
test
mov
mov
inc
lods
mov
push
mov
call
fistps
dec
pop
out
xor
jl
sbb
cmpsl
jg
fdivrs
dec
and
lahf
add
jno
lahf
popf
ljmp
shll
clc
cmp
sbb
mov
jbe
xor
repnz
add
pop
xchg
adc
mov
sbb
pop
adc
jmp
add
sbb
gs
scas
ljmp
jb
stc
sbb
in
xlat
mov
inc
shrb
xor
es
fadds
ds
neg
pop
bound
dec
xor
add
mov
test
scas
cmp
lahf
pslld
ficomps
and
loop
in
fstl
xor
data16
into
mov
mov
inc
shrb
cmpsb
xor
hlt
sub
out
cmpsl
arpl
and
cld
ret
bnd
pop
aam
and
fisttps
lret
mov
or
insb
jns
cmpsl
xchg
jp
inc
push
cmc
and
lods
pop
cmp
hlt
or
es
and
cmp
scas
es
dec
clc
sarl
out
jecxz
testl
into
inc
out
pop
rcr
xorl
or
stos
sahf
or
push
out
in
mov
jmp
sub
adc
push
xchg
mov
std
jl
mov
jge
jae
cmp
std
jmp
lret
inc
cmp
lahf
xlat
stos
pushf
mov
pmaxsw
dec
orb
insl
mov
push
inc
mov
and
pop
xchg
pop
mov
xchg
loope
mull
mov
fmuls
pop
aaa
shll
push
jg
lock
pop
stos
lea
movsb
and
loope
and
pop
js
lahf
mov
adc
int3
icebp
ss
ja
mov
jb
inc
pop
push
out
cmp
je
lea
int3
rorb
xor
mov
jmp
dec
mov
lock
mov
lcall
fwait
insl
mov
or
jo
cmpsl
mov
pusha
push
lds
xchg
mov
or
popa
push
imul
cltd
xchg
xor
mov
adc
insb
shrl
and
ljmp
mov
lret
icebp
lds
push
and
iret
or
mov
faddl
xor
sub
fiadds
aad
mov
add
popa
jecxz
cmpsl
push
xor
jg
adc
clc
cwtl
test
andl
out
cltd
pop
inc
rcl
arpl
lahf
push
pop
dec
aaa
daa
fists
jle
add
xchg
cmp
xor
js
xor
scas
sub
and
xchg
cwtl
repz
jns
push
dec
stos
jns
dec
lahf
jbe
daa
rcrb
mov
xchg
mov
test
pushf
xchg
mov
jp
push
lods
mov
xchg
adc
jg,pn
ficompl
cmp
in
sbb
jge
pop
inc
push
xor
fcompl
out
pop
popa
mov
icebp
sbb
in
js
and
sti
mov
push
and
fstl
push
xor
cmpsb
and
lcall
das
imul
in
jl
jmp
jge
rolb
daa
stos
add
cld
mov
mov
adc
pop
and
call
out
mov
outsl
push
or
dec
push
xlat
aas
ljmp
iret
cmp
js
popa
add
jb
imul
dec
mov
or
movsb
lret
test
mov
fimull
jne
test
int3
mov
mov
test
pop
jle
fs
push
hlt
outsb
fwait
repz
jl
add
dec
cmpsb
imul
in
in
dec
test
inc
mov
dec
push
jmp
jo
jb
mov
lret
jp
enter
repnz
pop
add
fbld
pop
or
sbb
adc
push
sbb
test
repz
cmc
xor
sbb
pushf
push
enter
stos
sub
ss
xchg
in
shlb
das
xchg
jno
sbb
imul
cltd
js
adc
push
push
sbb
dec
inc
and
and
inc
push
mov
sbb
mov
roll
gs
stos
andl
fsubl
xchg
aaa
in
test
stos
sbb
pop
dec
inc
dec
mov
xor
pop
sbb
int
add
loope
fwait
jbe
jle
int
pop
rol
inc
nop
in
stc
in
into
lock
test
notb
sbb
inc
bound
push
scas
cmp
mov
and
test
sbb
int
repnz
mov
stos
sub
sub
mov
sbb
push
xchg
xchg
cmp
nop
xor
ljmp
xchg
dec
in
leave
inc
xchg
mov
mov
push
push
hlt
adc
jl
and
js
daa
jg
daa
fildll
mov
xchg
loope
xchg
sub
ss
lock
test
cmp
lods
imull
aas
mov
pushf
jnp
sbb
frstor
fidivrl
inc
in
mov
cwtl
pop
repnz
mov
iret
inc
ret
xor
sub
pop
and
inc
fwait
nop
dec
adc
pop
insb
out
or
mov
outsl
mov
leave
repz
adc
sahf
cwtl
or
cmc
jmp
sti
mov
mov
adc
push
movsb
nop
lods
shrl
imul
lock
ja
push
test
lcall
bound
or
nop
mov
data16
loope
lock
push
in
sub
imul
andb
push
adc
movsl
push
mov
das
and
ljmp
outsl
mov
sarb
imul
sub
lcall
icebp
lret
lock
enter
movsb
iret
cltd
insb
subl
xlat
push
movsl
mov
inc
test
std
daa
stos
mov
mov
je
jecxz
jg
js
adc
adcl
cmp
daa
mov
int
pop
mov
sub
nop
pop
xchg
inc
cmp
outsl
cltd
dec
push
xchg
dec
dec
test
mov
incb
mov
adc
and
mov
inc
out
daa
jp
and
inc
mov
xchg
cmc
xor
inc
int
dec
pushf
ret
jbe
test
pop
push
es
repnz
or
jge
cwtl
cmp
pop
sbb
or
inc
xchg
test
repnz
repz
mov
and
lahf
clc
gs
adc
test
fildll
inc
sbb
adc
in
adc
xchg
xorb
lret
cmc
int
pushf
fsubl
ds
inc
mov
push
stc
je
cltd
roll
and
movsl
sub
lods
ss
mov
sahf
ficomps
rclb
pop
push
pop
and
fcomip
out
mov
and
cltd
push
or
int3
mov
pop
xchg
test
cmp
movsl
repnz
sahf
sahf
roll
or
stos
pop
add
adc
into
lods
xchg
jg
filds
loopne
push
sub
add
enter
adc
mov
jge
dec
inc
fimuls
nop
dec
lahf
scas
sub
fwait
lea
adc
xor
aaa
jle
loop
fisttps
lret
jb
lods
ss
xor
and
lock
dec
rcrl
bound
pop
iret
sbb
lock
insb
pop
sbb
test
testl
mov
test
div
or
lret
sahf
cmpl
or
adc
out
and
jbe
cmp
or
addb
orl
add
jle
cltd
xchg
xor
xor
add
cli
arpl
popf
adc
inc
inc
xchg
mov
push
fisubrl
lret
pop
divb
ja
ja
push
mov
push
lret
cld
stc
jmp
xchg
mov
popf
cmp
into
loope
push
pop
mov
mov
aaa
in
mov
cmpsb
imul
pushf
fadd
mov
pushf
mov
aad
add
ds
or
lds
lock
popf
dec
movsb
dec
inc
arpl
xchg
mov
lock
lret
insl
pop
leave
jno
cmp
pop
out
in
fsts
push
out
xor
cmpsb
out
add
cmp
and
out
add
fmuls
popf
jo
inc
in
jne
pop
rolb
xor
dec
arpl
lds
insl
loope
or
push
icebp
jne
fsubs
dec
int3
mov
repz
out
push
dec
andb
cmpsb
or
xor
loop
fidivrs
jmp
and
and
int
cli
test
je
pop
pushf
sub
shlb
add
fistpll
aad
jnp
insl
jae
push
fistpll
sub
sbb
sub
dec
loop
fwait
adc
lahf
and
jmp
into
push
in
adc
inc
lea
fs
jnp
les
fimuls
cld
insl
stos
ljmp
clc
mov
xchg
jl
cwtl
cltd
adc
or
inc
jns
and
into
mov
mov
dec
lcall
inc
sbb
call
or
jle
xor
cmpsl
push
lock
or
jbe
xor
mov
lret
fisttpll
jno
int
bound
pop
movsb
iret
movsb
pop
push
jnp
fwait
cmp
pop
cmp
sbb
mov
loope
xchg
fs
lcall
mov
insb
vpavgw
adc
lret
std
imul
cmp
test
das
outsb
pusha
sub
daa
pushf
or
or
popa
hlt
dec
cld
sbb
clc
jne
sbb
shll
stc
cwtl
gs
and
jae
jae
mov
sub
sbbb
jl
xor
fcomps
imul
adc
dec
xchg
dec
aaa
pop
pop
out
in
jae
cmpsb
mov
xchg
jl
lea
insl
shl
fs
rep
cmp
mov
les
add
xchg
add
repz
jge
aad
inc
mov
xchg
pop
stos
ror
cmp
mov
dec
xchg
mov
fiadds
pushf
mov
aaa
add
fsts
gs
mov
loopne
mov
jg
cwtl
pop
adc
flds
add
inc
xchg
adc
cmp
add
xor
ljmp
adc
mov
jb
dec
pop
cmp
repz
insl
pop
xchg
jae
add
sub
mov
jae
cs
clc
xchg
pop
xchg
int3
imul
pushf
mov
cmp
lea
int
lock
sbb
repz
add
shr
lea
jo
popf
enter
sbb
sbb
and
xor
outsb
outsl
cmp
mov
bound
movaps
mov
mov
xor
in
psubd
xchg
and
adcl
pop
in
xchg
hlt
inc
dec
ljmp
jecxz
imul
push
rorb
je
adc
dec
dec
xchg
ret
imul
xchg
xlat
sti
stos
test
and
dec
add
pusha
iret
pop
xchg
in
add
repnz
sub
sbb
add
mov
and
pop
push
mov
and
fwait
cmp
xor
sub
pop
or
inc
pop
sub
daa
lods
pop
ret
jbe
xlat
or
fsubl
add
ja
aas
lock
aad
mov
dec
sub
cltd
or
jmp
cld
mov
push
insl
mov
mov
cld
or
push
fimull
mov
xchg
adc
ror
mov
cmp
fdivp
jg
arpl
mov
cld
std
ljmp
xchg
mov
cmp
sub
in
push
adc
xorl
xor
imul
mov
xchg
lret
push
mov
stos
aas
or
jns
jmp
jecxz
mov
pop
push
and
test
xchg
adcb
lods
mov
pop
es
or
adc
pop
fisubl
cmpl
repnz
fstl
int3
push
pop
movsl
add
in
les
je
pop
fists
jmp
insl
rcr
adc
lret
cmp
mov
mov
dec
fdivs
repz
jl
lock
and
pop
fadd
mov
mov
jno
insb
jle
xor
int
sbb
push
notl
clc
mov
jb
pop
leave
push
in
out
fwait
mov
mov
lcall
mov
cmovnp
stos
and
sbb
fwait
rcrl
sub
aas
or
ja
imul
mov
arpl
mov
mov
imul
shlb
iret
mov
xchg
add
movsb
loope
dec
mov
mov
cld
jp
fwait
lahf
repnz
je
add
mov
xor
add
sub
or
mov
shl
outsb
inc
sub
xchg
popf
mov
leave
or
sbb
dec
jmp
sub
out
lea
minps
int3
add
adc
adc
inc
cli
jns
fidivrs
or
stc
in
jge
mov
lret
mov
push
adc
xor
jns
cmpl
inc
xchg
ret
jnp
mov
and
dec
xchg
rcrl
insb
hlt
dec
popf
into
cmp
sub
xorl
std
fbld
mov
adc
push
adc
adc
cs
pop
xor
and
sub
lret
rorl
push
add
cmpsl
out
push
call
dec
fistl
dec
cmp
push
sbb
ret
loop
repz
test
mov
lods
xor
incb
jo
sbb
xor
test
cltd
loopne
test
push
sub
enter
xor
and
movl
mov
mov
dec
leave
pop
pop
mov
rcll
jb
es
sbb
mov
cld
mov
outsl
ja
pop
ret
in
ljmp
outsl
xor
hlt
xor
lods
dec
imul
stos
xor
lret
rol
adcb
mov
repnz
add
aad
je
inc
cmpsl
inc
xchg
or
dec
popa
push
inc
lret
movsl
sub
or
lret
lret
or
cli
ds
int3
jno
scas
clc
add
or
mov
arpl
aas
fidivs
sub
fstpt
lea
flds
cs
push
cmp
lahf
int
jb
outsb
ja
mov
adc
cmp
arpl
xchg
cld
xlat
aam
mov
inc
mov
stc
in
pop
xchg
or
xor
mov
and
sti
mov
cmc
mov
rorb
xchg
pop
fistpl
cmp
xchg
popa
in
cmp
scas
add
gs
imul
push
jmp
push
lock
mov
hlt
mov
dec
outsl
ss
sub
in
lcall
jl
lods
mov
repnz
sbb
repnz
rcrl
adc
or
jb
mov
mov
shr
mov
lds
lahf
push
out
test
xchg
xor
add
or
ds
xor
push
outsb
adc
mov
pop
adc
psadbw
fwait
test
cmp
pop
sub
jmp
sub
inc
out
ja
jb
hlt
cmp
pop
push
cmp
pushf
jno
fidivrs
push
adc
js
insb
out
inc
inc
xchg
cmp
xchg
addb
push
jne
sub
cwtl
lods
and
mov
cld
add
aas
andw
movsl
insb
jge
test
icebp
mov
cmpb
out
or
adc
mov
clc
mov
and
jb
dec
adc
inc
pop
add
dec
movsl
mov
out
inc
gs
test
push
out
xor
push
test
cs
movsb
dec
jg
dec
push
lock
fnsave
mov
jp
lret
xchg
mov
push
daa
and
mov
pusha
mov
and
or
xor
xchg
shlb
movsl
cmc
push
cltd
sub
mov
pop
int
xchg
scas
xchg
add
sub
std
std
jmpw
jge
insb
mov
adc
adc
rcll
dec
mov
cltd
jo
mov
push
mov
jne
aas
add
psllw
loopne
lock
push
out
pushf
pop
jle
mov
jmp
inc
dec
insb
fiadds
lock
lahf
or
xor
push
push
pop
in
aas
shrl
icebp
and
push
adc
subb
mov
rclb
and
pop
sahf
int3
add
mov
push
fisubs
mov
sbb
scas
pop
popa
fsubr
clc
mov
outsl
roll
jge
mov
cmc
push
mov
add
stc
mov
sbb
add
jns
push
pop
mov
aam
xchg
and
lock
insb
adc
cmp
jne
sar
jbe
es
push
mov
sar
cld
sbb
mov
mov
popf
inc
lock
icebp
or
aas
mov
int
dec
adc
mov
out
or
adc
negb
and
xchg
pushl
jb
cltd
or
repz
lods
ja
ret
dec
lret
cli
gs
mov
sbb
lods
pushf
adc
sbb
dec
push
xchg
int
aas
sub
pusha
and
xchg
outsb
push
cmp
fsts
rorb
in
pop
xor
pushf
inc
stos
sbb
or
jmp
pop
es
xchg
sub
mov
push
lret
loopne
push
cmpsl
cmp
push
pop
xchg
mov
movsl
iret
lcall
inc
lds
inc
sahf
mov
mov
lret
and
cltd
sub
adc
xlat
mov
scas
ret
mov
adc
fistpll
push
stos
mov
mov
cwtl
mov
jbe
fisubrl
pop
mov
inc
sahf
mov
inc
pop
xor
lahf
lods
shll
mov
dec
arpl
std
add
in
push
and
xchg
insl
call
imul
cs
ljmp
mov
jl
ss
inc
lret
dec
rcll
xchg
mov
out
hlt
fs
outsb
aam
xor
pusha
sbbb
cmp
nop
sti
cli
je
jl
loopne
add
std
fiaddl
cmpsl
xor
jp
fcmovne
jecxz
inc
mov
in
lret
jge
pusha
sub
fisubs
cltd
fldcw
cs
shll
cwtl
test
imul
imul
scas
int3
inc
aad
and
push
cmpsl
icebp
rcrl
jnp
sbb
jae
or
pop
mov
mov
mov
loopne
fadds
aas
xor
sbb
incb
ret
push
jg
pop
filds
insl
frstor
push
sbb
mov
int3
fnstenv
push
popf
js
lret
add
push
dec
mov
xor
stc
sub
out
cmp
pop
scas
aas
sti
dec
imul
ja
std
jg
mov
adc
or
jmp
dec
lcall
ss
enter
adc
in
sub
std
or
dec
mov
push
cmp
push
pop
pop
xchg
sbb
insb
les
pop
movsb
lret
xchg
mov
jp
jo
mov
cmp
dec
mov
dec
mov
out
sub
addr16
cmpsl
sbb
xor
xor
xchg
adc
pop
mov
jbe
or
ss
xlat
cmp
mov
out
inc
popa
xor
sub
sahf
call
popf
xor
rcl
dec
jmp
pushf
mov
push
and
movsl
outsl
pushf
movsl
dec
jge
lret
xchg
leave
jp
jne
arpl
ja
stc
pop
mov
fcomi
ja
jl
rcrl
int3
push
out
outsl
jmp
jbe
push
mov
and
push
mov
inc
push
mov
xchg
push
jbe
jb
jbe
mov
neg
sbb
aad
or
xlat
jae
cmp
es
mov
inc
cmpb
mov
pop
sbb
push
xchg
adc
dec
movsb
push
loopne
xor
arpl
sbb
inc
mov
sub
jp
mov
imul
dec
adc
adc
pop
xor
mov
xchg
and
mov
lret
jae
jb
pop
push
xchg
cmp
push
sbb
scas
mov
loop
lock
nop
ret
sub
sbb
mov
and
adc
add
cs
xor
in
sarb
lea
pmaxub
std
mov
repz
xchg
mov
dec
lahf
sub
mov
leave
mov
sbb
jb
mov
dec
xlat
jecxz
inc
imul
xor
dec
cli
lret
sbb
iret
cmp
cld
call
pop
gs
ds
xor
popf
jp
jb
call
repz
sbb
sbb
jnp
out
cmc
mov
pop
push
pop
addr16
and
xor
fldcw
stos
lcall
cld
add
adcb
popf
cmc
loopne
xchg
mov
insl
jbe
out
loope
pop
repz
js
imul
mov
ret
mov
sbb
adc
inc
cmp
orb
jmp
inc
cmp
aad
xor
inc
test
push
and
dec
out
insl
lods
outsb
fwait
sub
cmc
mov
in
or
popa
sub
cmpsl
in
xor
dec
in
andl
nop
xchg
cmpsl
push
cmp
lea
sub
shrl
mov
fwait
dec
xchg
sub
in
stc
mov
lods
aad
test
insl
lock
addb
popa
ret
iret
xor
out
fidivl
pop
ret
shrb
add
shlb
out
aaa
jbe
xor
out
jg
xor
fistpll
enter
jle
sbb
popa
mov
or
stos
aad
xchg
mov
mov
mov
lock
add
lods
mov
dec
or
sbb
test
jl
adc
inc
lods
insb
cwtl
jmp
and
cmp
lock
dec
cltd
data16
iret
push
dec
jecxz
push
mov
out
sarb
call
mov
cmp
scas
je
aad
pop
or
add
movsl
rol
stos
jne
jge
arpl
mov
data16
mov
les
and
mov
test
mov
sbb
imul
mov
push
inc
or
loopne,pn
sub
xor
outsb
cs
adc
pop
cld
mov
dec
inc
test
mov
bound
xchg
pop
test
cmpsb
fisttpll
jns
jge
xchg
pop
pop
scas
mov
std
jbe
xor
mov
push
or
imul
out
inc
sbb
xorl
dec
jne
inc
sub
enter
daa
mov
repz
fwait
rolb
adc
xor
lock
cmpsl
shll
jl
mov
xchg
sub
repnz
dec
mov
or
mov
jae
imul
cmpsb
or
mov
add
mov
aaa
fidivs
fisubl
mov
cmp
das
shr
adc
iret
imul
pop
jns
xor
xlat
aaa
lock
ret
xchg
fsub
lods
scas
les
mov
shll
outsl
jl
insl
stc
ljmp
mov
pusha
pop
sahf
adc
insl
sbb
mov
xor
movsb
nop
adc
cmp
mov
pushf
ret
xor
les
xchg
aaa
jb
lahf
mov
shl
sbb
jl
testb
xchg
fisubrl
push
loopne
scas
test
push
pop
sub
punpckhwd
std
rcl
xor
pop
loopne
dec
lea
push
inc
jecxz
mov
dec
cltd
push
xchg
mov
xchg
inc
push
movsb
jo
fs
popf
mov
cmpsl
xor
fisttpl
inc
mov
out
addb
push
mov
xor
cmpsb
pop
jg
sbb
mov
insb
aas
mov
sbb
cwtl
sub
rcrb
fcmovu
jl
stc
mov
popf
xchg
fcmovb
pop
out
or
add
inc
cwtl
out
outsl
imul
sub
sbb
cmp
sub
mov
push
xchg
out
sti
enter
cmp
jae
sub
push
jp
sub
push
rcrb
imul
dec
and
stos
lcall
add
jne
or
inc
xchg
cmpsl
dec
cmp
enter
mov
lret
xor
outsb
xor
iret
mov
fmull
pop
lock
mov
lret
addr16
js
jle
js
sub
xchg
outsl
jns
pop
ret
xlat
addr16
imul
or
adc
dec
inc
outsl
pop
nop
pop
push
test
shld
aaa
jmp
pop
fnstcw
cli
mov
cmp
mov
adc
ss
jno
mov
enter
jbe
dec
sub
ljmp
mov
adc
dec
cmpl
sbb
fcoms
dec
and
push
out
test
iret
std
mov
mov
adc
cmpsl
dec
xor
outsb
das
sub
in
inc
jne
push
test
mov
dec
stos
aad
fstpl
jge
lcall
faddp
mov
fmull
mov
xor
popf
mov
xchg
adc
dec
dec
repz
es
arpl
out
mov
lret
push
push
fimuls
incl
pop
xor
cwtl
push
mov
lock
lret
pop
pop
sbb
jo
push
lea
inc
bound
sbb
cmp
lods
loop
cmpl
loopne
mov
pop
je
scas
fwait
std
and
adc
adc
mov
xor
fcomp
mov
loop
lock
mov
push
test
rorl
ret
outsl
test
push
adc
dec
dec
push
movq
jl
popa
clc
lret
into
js
dec
ja
pop
loope
and
cli
jbe
inc
lret
sbb
mov
mov
sbb
xchg
fwait
push
enter
mov
imul
js
repz
ret
out
in
inc
push
sub
ja
pop
nop
lcall
xor
mov
js
insb
pop
rcl
mov
enter
cmp
popa
xchg
push
and
gs
and
inc
add
add
mov
negl
adc
rcrb
jp
add
mov
and
xor
lret
or
cmpsb
ds
pop
cmp
orl
mov
loope
jp
xor
cltd
andl
xor
jmp
push
lahf
stos
dec
xchg
rolb
lods
push
mov
icebp
data16
xor
in
push
or
sub
insl
insb
lea
push
mov
outsb
stos
mov
cmp
scas
mov
mov
inc
cmc
jge
repz
aas
xchg
push
mov
sbb
sbb
sbb
mov
daa
outsl
popa
in
cmc
sbb
xlat
mov
xchg
cli
xor
das
scas
pop
into
repnz
ja
dec
push
jge
xor
mov
test
lahf
inc
jp
or
and
or
jae
cmp
popf
adc
sahf
lret
xchg
and
xor
dec
inc
loop
nop
dec
rclb
pop
popf
addr16
xchg
xchg
mov
jne
jo
dec
gs
mov
xchg
mov
push
xchg
jmp
push
push
cltd
add
push
test
inc
jne
mov
cltd
into
dec
pop
mov
mov
sub
or
cmpsb
adc
add
jbe
aaa
add
jmp
mov
les
cmp
xchg
or
push
mov
inc
jno
aam
nop
lret
data16
jp
in
out
add
dec
push
call
xor
jbe
lods
adc
cmp
push
movsb
and
in
rorb
stc
jecxz
mov
xlat
jno
enter
lock
mov
mov
cld
jno
fldl
xchg
xchg
mov
pop
into
aam
or
inc
sub
lahf
sarl
int3
je
enter
in
lods
testl
repz
ds
jae
sub
and
ss
movsl
dec
call
movsb
cmpsb
lds
or
mov
xchg
addr16
pop
cltd
pop
push
inc
jg
loopne
mov
insb
push
push
xchg
aad
dec
insb
push
mov
incb
jno
hlt
mov
fcoml
inc
cli
sbb
cs
mov
das
in
aad
std
inc
adc
loop
enter
imul
pop
push
xchg
imul
jbe
in
mov
mov
xor
mov
insb
scas
mov
adc
in
pop
and
sub
push
push
inc
adc
and
push
ficomps
movsl
add
xor
fists
in
fnstenv
mov
sahf
lret
insl
cld
and
and
cmpsb
pushf
vrcpss
mov
shlb
das
loopne
test
lock
shlb
jne
aaa
rcrl
lods
or
push
add
in
js
insb
mov
pop
insl
enter
mov
adc
cmp
cli
enter
xchg
outsb
cs
in
aam
movsb
es
mov
jne
mov
ss
adc
pop
loope
negb
cmp
push
inc
mov
imul
mov
inc
dec
sahf
push
inc
sti
sbb
lcall
mov
or
repnz
or
fsts
dec
push
aad
mov
push
lahf
mov
xchg
and
addl
fisttps
mov
into
or
outsb
nop
xchg
fwait
mov
xlat
dec
cmp
loopne
movl
pop
xchg
addr16
stos
aad
sub
scas
addr16
sbb
cmp
inc
js
lea
dec
fnstsw
iret
mov
movsb
stos
push
push
leave
repnz
addl
mov
sti
bnd
pop
add
cli
and
mov
mov
pop
std
pop
out
inc
mov
jno
cmp
lret
xchg
hlt
mov
push
push
xor
push
add
lret
dec
mov
cmp
cmp
in
sub
pop
addb
sarb
les
mov
into
pop
out
lahf
sub
xor
frstor
add
pop
xlat
aas
xchg
hlt
and
dec
xchg
mov
lods
rorl
sub
mov
sarb
pusha
repz
das
xor
jae
repz
add
add
negl
dec
jb
jns
adc
bound
stos
sub
arpl
aas
adc
push
xor
xor
push
lds
and
push
inc
and
ja
lret
sub
inc
ja
int
repz
shl
insl
repnz
ljmp
ret
jp
pushf
mov
call
iret
cmp
fisttps
into
dec
out
icebp
push
pushf
xchg
inc
aam
test
mov
inc
inc
outsl
faddl
fisubl
out
orl
adc
aas
stos
cmp
andb
in
rcl
push
mov
lret
mov
insb
es
pusha
gs
pop
cs
mov
cmp
test
push
push
push
push
dec
dec
inc
std
dec
dec
cli
pop
xchg
or
psrlw
sub
fbstp
push
aaa
push
or
ret
faddl
mov
mov
jae
mov
and
cltd
or
es
sarb
das
ljmp
lret
or
in
mov
in
loop
pop
push
aam
or
cmp
mov
add
lret
ja,pt
xor
push
cmp
jns
jo
lahf
je
sbb
gs
pop
xchg
cmp
out
mov
push
jbe
or
jg
xchg
aad
xor
jecxz
pushf
jge
mov
lahf
and
sti
cmp
test
xchg
loope
add
insl
scas
mov
repnz
daa
pop
lret
cmpsl
ss
push
cmp
mulb
cmp
or
mov
ret
pop
dec
inc
mov
mov
push
fadds
outsl
mov
jg
insl
lcall
pusha
data16
adc
sub
jae
sbb
jecxz
cmp
dec
push
subl
dec
pop
les
std
sahf
pop
dec
cmp
jb
inc
ret
cmpsl
add
inc
pop
lret
sub
jp
sbb
outsl
and
add
data16
pop
add
loop
ror
repnz
inc
lcall
mov
mov
into
idivb
loope
jecxz
dec
pop
jno
adc
mov
mov
mov
fimuls
pmaddwd
cli
in
cmc
cld
or
mov
mov
mov
cld
xchg
push
xor
movsl
sub
push
aad
pop
mov
ret
cmpsl
lds
cmp
sub
mov
mov
add
fst
dec
mov
jp
fs
jge
cltd
or
sbb
popa
mov
lahf
ror
mov
add
js
pop
push
jl
pop
rcrl
xor
in
clc
loop
incb
mov
or
ret
pop
arpl
daa
vcvttpd2dqx
jmp
mov
leave
rcrb
cmc
mov
lds
adc
dec
lcall
jp
cwtl
add
out
inc
ljmp
lahf
pop
int3
orl
sub
dec
and
sub
clc
jecxz
bound
mov
pop
in
mov
jge
imul
push
jb
push
popf
adc
pop
jae
cmpl
inc
popa
mov
mov
pop
dec
push
pop
inc
sub
js
int3
add
lock
add
mov
gs
mul
adc
xchg
xchg
dec
push
loope
icebp
add
xor
lcall
lcall
repz
pop
sar
cmp
je
mov
sbb
sti
into
movsl
inc
sub
scas
loope
scas
mov
iret
imul
sub
push
gs
pushw
mov
mov
xchg
mov
mov
int
out
mov
leave
dec
mov
sub
repz
out
and
sbb
xchg
mov
or
out
pusha
sbb
pop
or
imul
push
jl
xchg
out
scas
mov
int
sti
cmc
outsl
mov
mov
mov
mov
sub
mov
push
jmp
inc
cmp
aam
shrl
in
out
sbb
decb
lods
dec
into
jnp
je
es
add
cltd
fisubrs
rolb
aas
cmpsb
aas
mov
fcomps
outsl
and
aad
repnz
push
mov
lea
or
pop
nop
mov
mov
adcl
in
cld
insl
push
loopne
jmp
inc
dec
cld
rcl
negb
sti
mov
aaa
xor
push
outsl
test
fstps
test
adc
inc
dec
imul
iret
call
dec
ja
cltd
dec
mov
lods
inc
push
jmp
into
jg
arpl
dec
fcomp
lahf
mov
mov
pop
stos
inc
inc
mov
sti
fsubl
mov
into
out
pop
mov
mov
outsb
cmp
jbe
mov
lods
pop
pop
les
shrl
pop
into
into
aas
or
dec
xchg
das
dec
les
jl
xchg
shrl
mov
pop
sub
mov
in
dec
int3
fmuls
mov
testl
cs
sub
das
push
sub
sub
pop
mull
pop
out
mov
scas
hlt
sbb
adc
jnp
repz
scas
sbb
mov
js
test
call
mov
jecxz
pop
pop
aas
loopne
and
loop
in
xchg
xchg
popf
and
jns
fildll
mov
movsl
cmc
mov
dec
cld
in
xchg
fisttps
scas
cltd
cmp
jno
mov
das
jl
jno
xchg
inc
das
jns
dec
and
or
cmp
orl
push
add
mov
dec
jo
mov
mov
inc
add
cmp
ds
or
xacquire
xor
xchg
and
jecxz
aaa
push
xor
sbb
jl
pop
adc
cmpb
adc
mov
fwait
sbb
add
mov
mov
pop
fsubr
movsb
out
lret
and
push
push
es
cltd
jle
or
js
pop
dec
icebp
jp
mov
ficomps
cmpsl
sub
es
jns
mov
adc
outsl
push
in
fstl
inc
fnstsw
fcompl
and
push
arpl
pop
int3
jl
mov
rolb
in
cmp
mov
aam
mov
shr
repnz
pop
dec
adc
cli
cs
nop
dec
adc
pop
out
out
xorl
or
add
dec
inc
sbb
jbe
jmp
jmp
and
xlat
ljmp
ret
mov
sbb
aad
inc
mov
and
stc
call
in
inc
xchg
push
mov
lcall
inc
in
push
lret
and
mov
dec
les
ds
xchg
and
cmp
dec
sub
fdivl
dec
mov
xchg
lret
dec
mov
subl
pop
dec
paddd
jno
fistpl
or
sub
sbb
or
jns
mov
sub
mov
push
xchg
and
sub
dec
shll
and
or
dec
jns
xchg
icebp
lea
mov
and
add
pop
jne
dec
cmp
lods
inc
popa
loop
test
push
sub
inc
jb
mov
sub
das
push
or
add
repz
pop
rorb
ret
inc
enter
dec
clc
sbb
stos
andb
xor
icebp
jb
cmpsl
jmp
push
pop
icebp
mov
mov
int3
ret
push
dec
mov
pop
sub
mov
and
push
mov
push
fmuls
loope
scas
push
mov
adc
mov
es
and
or
or
mov
or
das
xlat
lcall
popf
les
fcmovne
mov
inc
lock
push
adc
int3
loope
xchg
repnz
mov
mov
in
inc
and
pop
addr16
sbb
mov
and
and
das
aaa
enter
dec
add
mov
sbb
lret
or
sbb
loopne
mov
sbb
jb
sarl
rorb
sub
outsl
das
jge
jnp
xchg
dec
push
inc
sub
mov
xor
outsb
repnz
jno
mov
in
push
and
test
jg
fbstp
lret
push
xor
mov
sbb
mov
add
daa
push
movsb
jl
ss
push
dec
sti
insb
inc
cmp
test
int3
ljmp
mov
or
cmc
cwtl
test
pop
cmpsb
push
lods
mov
enter
daa
dec
push
in
or
inc
aas
xchg
dec
leave
dec
loopne
or
dec
push
loopne
jbe
push
xor
dec
push
mov
add
add
pavgb
movsl
jge
int3
les
adc
sub
call
xchg
ja
cs
mov
stos
mov
push
sbb
xorl
add
in
add
add
jmp
nop
test
aad
pop
fcomps
sub
pop
mov
xor
xchg
mov
xor
jae
pusha
cmp
call
xor
mov
or
xor
push
mov
lahf
movl
inc
ljmp
inc
mov
add
pop
add
mov
mov
pop
fidivl
repnz
sahf
scas
pop
iret
xchg
test
sbb
jp
fsubl
pop
in
add
add
sbb
sub
mov
or
cli
cmpsb
xchg
add
or
mov
mov
stos
out
leave
pop
cwtl
push
sahf
mov
sarl
out
loop
pop
pop
ret
dec
or
dec
in
xchg
inc
inc
sarl
jmp
aad
shl
cmc
cwtl
jp
les
xor
mov
pop
out
clc
jle
cmpsb
sbb
mov
pop
sub
push
push
cmp
loopne
or
loop
call
cmp
jne
rcrl
js
cmp
js
dec
xor
or
rcrl
sbb
cltd
sbb
out
xchg
test
or
insl
int
mov
ljmp
and
push
pop
test
arpl
jb
xchg
insl
or
fwait
or
loope
fldcw
jge
xchg
fdivrl
xchg
ds
pop
mov
hlt
in
mov
inc
mov
jge
sbb
jbe
icebp
or
pop
sub
push
cli
mov
add
and
xchg
cmp
js
icebp
inc
pop
dec
aad
out
inc
aad
dec
in
inc
push
add
sar
dec
and
jg
jne
testl
adc
mov
mov
scas
add
pusha
or
sti
jnp
mov
mov
inc
mov
inc
and
push
or
pusha
fmuls
jp
hlt
sbb
jno
mov
mov
imul
jne
stc
sbb
mov
jg
cmp
lahf
cld
sar
lea
sbb
inc
fwait
pushf
leave
xchg
xor
test
aam
fisubrl
jo
ja
push
mov
in
sbb
push
dec
push
ss
sbb
in
fisttps
mov
mov
jle
or
fs
andb
lcall
sub
fistpl
int
mov
fs
fs
jmp
popf
cmp
shlb
xor
daa
xchg
lock
pop
pop
pop
insl
dec
bound
stc
mov
inc
sub
aas
shrl
jl
pop
mov
sub
outsb
cltd
mov
test
sbb
lods
je
sbb
enter
jmp
xlat
xor
loope
mov
iret
xchg
or
adc
mov
or
adc
outsb
add
sbb
or
pop
int
cwtl
addl
es
pmulhw
inc
je
cmp
add
lahf
or
sarl
cmp
rolb
xor
shlb
sbb
add
mov
cwtl
mov
fld
sub
gs
jle
test
test
dec
pushf
rcrb
loopne
ljmp
das
aaa
jae
dec
js
mov
mov
int
xchg
les
sbb
inc
stc
adc
mov
cli
mov
ret
sbbl
fldcw
icebp
call
jg
hlt
nop
sub
in
sti
fadd
push
cld
jge
cmp
push
mov
aas
jne
cmp
and
pop
insb
sub
xor
pop
push
pop
shll
sub
inc
jne
gs
insl
xor
arpl
mov
sub
push
mov
out
or
cmp
lcall
iret
push
sub
mov
ss
xor
pop
mov
lret
insb
repnz
rcll
push
inc
jae
or
loop
shlb
iret
adc
add
sbb
dec
push
in
mov
jb
popa
mov
pop
push
xchg
jge
sarl
loope
sub
sbb
xor
sbb
leave
orb
cmp
xchg
mov
je
int3
lret
lret
outsl
or
inc
and
mov
mov
sahf
std
imul
shrl
xchg
add
mov
movsb
out
das
je
mov
push
pusha
sub
jl
aaa
xchg
cwtl
loopne
sbb
jle
sbb
stos
mov
sbb
mov
sbb
mov
mov
imul
push
mov
movsl
mov
mov
fdivrl
cmpsl
adc
cmpl
cmp
clc
inc
and
inc
test
and
jo
lret
push
pop
jne
in
jp
cld
test
hlt
rclb
gs
xor
push
callw
mov
push
mov
cmp
sub
in
jp
faddl
int3
xor
mov
cmp
in
ss
out
xchg
outsl
rclb
xor
lods
loopne
cld
mov
fidivl
mov
xchg
testb
orb
mov
add
int3
push
les
outsb
pop
push
push
loope
sbb
xor
dec
bswap
cld
out
sub
xchg
sbb
mov
std
outsb
mov
jae
cli
or
ret
testb
pop
test
pusha
and
and
sbb
pop
mov
repnz
les
add
dec
jo
cmpsb
push
ret
scas
jle
cmp
xchg
and
jp
addr16
das
ss
in
data16
pop
cmpsb
add
in
or
aas
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
sbb
movsl
int
fstl
clc
cli
setg
add
icebp
std
jmp
dec
xchg
bound
or
shll
sbb
cmp
lea
in
jge
pushf
jnp
sub
aaa
testb
iret
mov
ret
push
aaa
push
pop
xor
rcrb
dec
stos
testb
jns
sbb
ljmp
mov
hlt
cmp
ljmp
and
daa
andl
mov
lock
movntq
mull
divb
loop
stos
aaa
js
or
push
daa
lock
add
push
shlb
cli
imul
hlt
cmp
cmp
jle
cs
dec
orb
in
pop
adc
sbb
jno
fs
inc
repz
das
mov
xchg
mov
push
push
aam
jp
lods
out
cmp
out
shll
xchg
or
inc
sbb
fmul
out
mov
daa
jne
test
xor
mov
inc
addr16
popa
stos
mov
cmp
push
bound
movsl
int3
or
pusha
cmp
rclb
lods
mov
test
getsec
jo
xchg
loopne
dec
inc
shll
adc
jbe
mov
pop
add
mov
mov
push
loope
data16
gs
fdivrl
adc
mov
xchg
add
pop
inc
mov
insb
lahf
mov
mov
scas
push
inc
andb
scas
in
jp
add
int
mov
mov
and
out
sub
adc
out
jnp
push
into
fdivr
xor
xchg
jp
aas
enter
or
cmp
inc
lret
xchg
inc
cwtl
inc
mov
scas
arpl
sarb
fisubs
lcall
mov
jecxz
jns
dec
ds
outsb
insl
add
outsb
add
mov
dec
mov
push
out
pushf
jne
inc
cltd
mov
int3
mov
in
ss
fidivrl
dec
jmp
xchg
jnp
dec
cmc
mov
xchg
in
sarl
aas
outsb
out
ljmp
dec
xchg
lcall
dec
aam
sub
pop
sbb
push
lock
add
es
andb
cs
add
popf
adc
pushf
lods
xor
cmp
push
adc
xor
sbb
test
test
jle
movsl
jp
jmp
adc
fisubrl
xor
add
lods
imul
sub
jns
mov
lcall
or
addr16
pop
ret
rclb
test
dec
test
cmpsb
je
and
stc
mov
pop
loope
ds
cmp
xor
pusha
push
mov
xor
rcr
popf
repnz
add
out
repz
divb
out
daa
out
xchg
mov
inc
lock
jo
icebp
ja
ja
adc
mov
sbb
outsb
xchg
shlb
js
nop
lahf
fs
or
dec
xor
shl
int3
inc
movsl
cmc
mov
insb
cltd
outsl
mov
jb
loop
fsts
adc
mov
popa
pop
sbb
out
jo
fcmovu
movsl
pop
lea
lahf
add
aad
mov
and
pop
scas
lods
sti
jb
dec
mov
addr16
sub
loope
pop
inc
mov
push
loop
ror
mov
push
jp
add
lahf
xor
leave
push
sbb
sub
add
dec
nop
ja
sarl
scas
push
mov
xchg
aaa
inc
xchg
sub
cwtl
insl
jns
scas
add
clc
add
shrb
fisttpl
stos
push
out
fnstsw
sbb
push
out
popa
in
cli
or
jns
int3
mov
pop
mov
int3
jbe
clc
cmp
push
mov
les
mov
lret
insb
mov
xchg
fs
push
xor
pop
out
cmc
dec
cmp
add
cmp
sub
pop
pop
lcall
pop
test
cld
cmp
adc
cmpsb
mov
in
rcrl
push
adc
mov
lods
popa
cltd
in
aas
inc
inc
out
push
bound
dec
sti
out
mov
mov
rorb
movsl
test
pop
cld
cli
imul
add
cmp
inc
mov
out
xor
xor
cmp
ret
lret
sub
and
les
xchg
adc
mov
adc
fsubr
rclb
or
enter
sarl
imul
mov
mov
fistps
xor
leave
iret
aas
or
xchg
xlat
cs
insb
push
enter
fisubrl
xor
pop
lods
adc
cmp
lret
fdivl
add
out
xchg
cltd
mov
push
or
jg
daa
lret
enter
adc
cwtl
je
mov
in
cmpsb
rclb
bound
xor
pusha
fcmovbe
cmc
mov
sub
jne
std
sbb
movsb
lret
movsl
add
shrb
sub
mov
push
stos
int
int3
pushf
cmp
push
fsts
and
insb
cmpsl
pushf
std
mov
ret
dec
or
stos
xor
fnsave
jb
mov
xchg
scas
xchg
fcoms
sub
xlat
aam
clc
jge
xlat
test
jecxz
cmpl
jg
mov
stc
inc
pop
sbb
pop
mov
sbb
push
mov
sahf
sbb
test
sahf
test
adc
insl
mov
xchg
mov
cmp
mov
popf
xor
mov
sbb
test
sbb
ljmp
imul
rcl
adc
call
jle
bound
int3
and
mov
lods
and
das
ljmp
inc
pop
inc
sbb
pushf
xchg
mov
inc
aaa
sbb
aam
outsl
in
push
or
pop
mov
adc
mov
out
push
adc
mov
je
sub
jns
and
add
js
gs
bound
test
pop
mov
adc
fistpll
dec
xchg
addr16
jnp
mov
scas
adc
adc
mov
mov
gs
xchg
shll
or
mov
and
fs
negl
and
mov
popa
jnp
sub
insl
push
mov
std
addr16
ret
push
cmp
sbbb
jno
push
call
xor
mov
adc
inc
in
into
sbbl
call
icebp
bound
pop
mov
sbb
outsl
mov
hlt
sub
cltd
pop
shlb
push
xchg
aas
jp
rclb
mov
mov
push
lock
shlb
push
mov
mov
les
mov
xchg
repnz
lods
jo
cli
cli
jnp
pop
sbbb
movsb
in
inc
enter
aam
je
and
call
xor
lods
test
sbb
dec
ds
ret
mov
notb
pop
test
sub
jbe
add
cli
ja
pop
sbb
sub
cmc
inc
mov
fnsave
das
sti
je
push
adc
add
xchg
xor
mov
xor
sbb
mov
loopne
movsl
xchg
insl
and
hlt
rorl
loopne
dec
aas
ret
lcall
cmp
test
jg
shll
call
pop
out
add
push
aas
out
cmp
pop
xchg
mov
push
inc
xchg
mov
mov
mov
inc
cmp
xorb
pop
mov
jp
ja
cmp
jbe
and
push
pop
stos
jns
fisttpl
push
into
loopne
mov
test
push
hlt
loop
jne
adc
xchg
dec
cmp
insl
loop
stc
cmp
mov
cli
mov
scas
jmp
push
rcr
fsubl
jle
pusha
dec
loopne
imulb
cli
or
lock
inc
mov
lahf
fists
push
xor
mov
test
xchg
pop
push
cmp
and
jl
push
lea
addl
sub
iret
jns
lcall
cltd
sbb
adc
std
out
sub
push
decb
fdivrl
aaa
aam
pop
mov
add
xchg
js
ljmp
and
test
pop
xchg
pop
bound
pop
push
xlat
mov
and
mov
sbb
sbb
in
test
push
and
hlt
jle
inc
loope
push
std
fcmovu
mov
mov
sub
idivb
std
dec
std
test
sbb
js
stos
pop
cli
xor
jmp
mov
mov
xchg
loopne
xor
jae
mov
lods
jb
jmp
mov
das
dec
idivb
xchg
insb
add
ja
sub
test
add
cld
testl
adc
cmp
roll
icebp
mov
dec
mov
jl
nop
sub
subl
in
jb
mov
fisubl
pop
icebp
fnstcw
fldl
jo
jno
cli
xchg
xor
dec
cmp
mov
pop
cs
jae
addr16
xor
jmp
pop
push
ljmp
mov
or
mov
cmp
leave
pop
mov
in
push
sbb
daa
sub
loopne
jns
in
mov
xlat
xor
xor
loope
mov
xchg
pop
andb
int
mov
popa
mov
imul
mov
xchg
test
mov
cmp
ljmp
lods
push
xchg
je
inc
add
mov
aaa
inc
andb
outsb
mov
jb
jge
mov
ficomps
mov
call
sub
jmp
lcall
imul
std
call
mov
cmp
lock
and
cmp
jns
sbb
cli
int
xor
loopne
pushf
pusha
sbb
xchg
jg
lret
rclb
aas
inc
xchg
push
push
rorb
mov
sbb
cmp
jg
addr16
hlt
xor
lret
sbb
dec
or
dec
popa
add
nop
test
push
clc
add
inc
out
push
test
jge
adcb
push
in
mov
or
dec
xchg
xchg
or
rol
jo
int3
push
hlt
lahf
mov
mov
sbb
ror
dec
data16
mov
lcall
sbb
add
dec
xor
mov
pop
js
cmp
gs
adc
push
out
add
push
and
mov
push
lahf
dec
mov
addr16
mov
fildll
stc
mov
and
jne
into
jl
inc
popf
cltd
mov
cs
pop
pop
movsb
jns
push
mov
repnz
imul
add
pop
sbb
push
nop
arpl
leave
out
mov
mov
adc
inc
mov
jge
xor
clc
and
mov
decb
push
ds
cmp
cmpsb
adc
in
js
mulb
mov
push
imul
push
sbb
ljmp
ret
cli
bound
lods
jnp
push
dec
in
js
les
ret
rolb
dec
fs
xchg
dec
push
cmp
sbb
mov
mov
sub
dec
int3
adc
dec
dec
sub
test
into
jecxz
mov
aas
jbe
add
adc
push
cmp
mov
cmc
data16
sub
lods
sub
mov
dec
inc
lahf
movsl
xor
sub
cmc
test
jl
scas
cmpsb
or
pusha
cmp
loope
adc
shrl
repnz
pop
push
and
shll
pop
pop
dec
jne
jnp
dec
jno
repnz
int
and
xchg
adcl
jae
fwait
sbb
add
js
mov
jge
add
popa
out
lcall
js
sbb
xchg
stos
int3
cmc
jl
out
sub
pop
xlat
mov
jg
pop
xor
push
imul
jnp
roll
cwtd
pop
cmp
sahf
iret
jmp
jecxz
fisttps
mov
dec
addr16
cmp
rorb
in
mov
out
inc
aaa
shl
cmp
or
inc
aam
ja
lret
mov
imul
and
xchg
xlat
xchg
fisubrl
movsl
pop
imul
jge
and
fdiv
sbbb
sub
push
incb
out
adc
dec
add
dec
push
cmp
and
push
cltd
imul
ret
pop
pop
arpl
xcrypt-cbc
cmpsl
push
dec
jl
cltd
xlat
or
cmp
sub
mov
arpl
xor
push
xor
mov
sub
push
lods
mov
adc
xchg
push
cmp
icebp
xchg
cmp
mulb
or
dec
in
adc
pop
std
mov
popf
nop
pop
gs
inc
int
jecxz
rol
mov
inc
xchg
lea
inc
or
sub
lret
dec
pop
mov
popf
xor
lcall
in
int3
xor
jo
dec
lea
inc
popf
cmp
jle
cmp
dec
in
stc
ljmp
cld
rcr
xor
fisubs
sub
test
adc
loope
mov
lcall
and
movsl
js
inc
arpl
cmp
cltd
push
jp
push
push
sti
pop
test
jae
test
in
fstps
inc
lock
dec
sub
xor
ret
addr16
adc
loope
or
or
lock
cmp
scas
sti
test
cltd
lods
movsl
or
cmpsb
and
mov
call
mov
jb
pop
daa
or
dec
push
and
mov
int3
mov
sbb
idivb
jp
pop
mov
aad
mov
xlat
pop
cmp
mov
adc
ds
hlt
mov
mov
sub
lcall
lods
lock
pop
inc
inc
mov
mov
or
ret
test
jbe
cli
mov
push
test
push
dec
pusha
push
mov
fidivl
ds
jp
dec
sti
jo
jmp
xor
adc
or
adcb
jne
lods
xor
ja
stc
jl
ljmp
fcmovnb
push
push
mov
jmp
adc
push
xor
test
cmpsl
mov
out
aam
out
adcb
ja
mov
iret
pop
insl
adc
xchg
xor
dec
aad
add
add
and
dec
mul
inc
xchg
aad
hlt
scas
adc
in
and
rolb
leave
aaa
and
sub
xchg
in
out
xor
insb
bound
xor
adc
sbb
mov
stc
test
dec
ret
sbb
inc
mov
and
jnp
dec
adc
hlt
adc
fisubrs
shll
js
sti
inc
push
jmp
repz
mov
xchg
test
orl
or
test
pop
movl
mov
shl
lcall
mov
add
sub
and
incb
je
jl
push
adc
int3
outsb
and
sub
in
mov
pushf
mov
xchg
mov
add
sub
mov
and
repnz
rorl
pop
jmp
rep
xorb
cwtl
push
bound
inc
push
out
hlt
call
cmc
xor
pushf
sub
dec
mov
rcll
lret
cmpsb
aad
xchg
cmp
dec
sub
in
pusha
popa
pusha
jp
xchg
int3
sbb
imul
out
leave
xchg
inc
xchg
pop
test
sbb
mov
jl
mov
sub
sti
imul
xchg
call
pop
cmp
scas
loope
shlb
add
sbb
or
cmc
aaa
pop
sbb
lods
sbb
call
lahf
arpl
lahf
fucomp
xchg
jns
xchg
sub
sbb
sub
test
add
sbb
ljmp
dec
adc
shlb
inc
pushf
outsb
add
mov
lock
imul
js
orl
or
pop
mov
jo
mov
imul
pop
mov
mov
push
pop
dec
lret
or
xor
push
fisttpl
lret
jl
shlb
jnp
cmc
jge
pop
and
mov
push
aaa
bound
push
lds
add
or
xor
adc
jecxz
xchg
cmpsb
jbe
cwtl
mov
jg
mov
cs
inc
cmp
in
popa
xor
dec
and
gs
dec
ja
test
in
mov
sti
mov
or
mov
mov
jp
das
inc
ret
add
neg
or
fucomi
sbb
lock
test
jae
jg
int3
cmpsl
mov
addr16
dec
in
jb
clc
es
test
aaa
and
imulb
lock
mov
or
and
popa
mov
dec
mov
push
movb
jnp
cmpsl
aas
xor
add
clc
ret
je
ja
cmp
pop
jmp
cmp
es
shr
std
shlb
push
mov
and
jge
enter
es
fisubs
mov
inc
les
loop
movsl
pop
fistps
adc
aad
and
push
dec
dec
frstor
in
xlat
repz
lods
popa
fidivl
popf
icebp
ja
or
cmc
pop
mov
cmc
adc
std
movsl
cmp
in
dec
add
roll
jg
sarb
movb
dec
inc
cmc
test
ja
adc
pusha
data16
push
movsb
adc
dec
jle
jo
sbbb
or
fs
js
repnz
jno,pn
out
fs
pop
jbe
xlat
lods
push
mov
xor
outsl
dec
push
call
pop
mov
xor
xor
sbb
pop
mov
pop
jmp
loopne
cmpsb
adc
sti
pop
push
inc
ja
arpl
int3
icebp
pop
fisubrl
pop
std
jne
stc
jp
xor
mov
clc
pop
not
mov
subl
test
jecxz
push
push
cli
es
ljmp
int
pop
mov
add
repz
xchg
fdivrs
lock
xor
aam
sub
inc
jne
dec
add
xor
sub
std
and
mov
cmp
ljmp
test
pop
out
push
loope
cmp
mov
sbb
sbb
out
fnstenv
push
inc
repnz
xor
loope
push
mov
mov
pop
jno
adc
xor
leave
sbb
popf
or
iret
cltd
loopne
xor
insl
shlb
push
notl
ficomps
andl
mov
mov
dec
call
data16
jp
ds
mov
mov
jns
cmpsb
mov
dec
arpl
cli
pop
push
push
cltd
mov
cmc
ljmp
push
mov
sbb
pop
sub
or
loop
lret
fwait
mov
scas
insb
push
push
je
push
xlat
outsl
xor
push
xor
inc
jl
loope
mov
xchg
movsb
push
add
out
fdivp
movsb
sub
cmp
sbb
loopne,pt
xor
add
lea
sbb
or
cmp
pop
adc
and
cltd
pop
outsb
dec
sbb
sahf
mov
imul
int
inc
push
leave
jns
in
imul
or
dec
in
mov
sti
jl
push
jno
ss
cmp
pop
jae
les
inc
adc
pop
fldcw
add
es
jne
jne
push
ret
cld
lret
cmp
outsb
test
cwtl
jle
es
daa
add
jb
stc
mov
mov
inc
cld
fwait
cmp
out
mov
or
popl
mov
es
inc
aaa
int
lock
icebp
mov
push
in
xor
out
jp
movsb
es
mov
movsb
and
mov
and
dec
xor
mov
dec
pop
jne
mov
scas
int
mov
adc
mov
sbbb
jo
mov
pop
push
mov
cmp
ljmp
sbbl
pusha
or
lods
cmpsl
cmp
or
push
lea
pop
mov
fnstenv
sarl
int3
xorl
mov
addr16
mov
das
add
sub
jge
faddl
mov
test
lock
adc
xlat
mov
pop
inc
int
push
cmpb
call
aam
repz
jbe
sub
sub
test
call
loopne
push
jno
push
jmp
xor
fldl
sbb
outsl
loop
add
pusha
or
stos
test
pushf
pop
or
cli
mov
inc
cmp
ss
or
fcmovne
mov
jb
lret
neg
popa
popf
cmp
jae
jb
lcall
ja
dec
xchg
fmuls
loope
aas
xor
sub
pop
in
jno
into
dec
ja
push
adc
aad
xchg
or
xchg
fnclex
daa
add
sbb
test
mov
lea
roll
xor
clc
pop
jge
inc
push
loope
mov
test
mov
mov
imul
and
mov
mov
mov
mov
cs
cli
push
divb
enter
sar
pop
adc
xor
xchg
insl
fstpt
jbe
inc
mov
lea
add
add
cmpsl
mov
test
aad
pop
sahf
inc
sbb
push
jge
or
inc
arpl
mov
mov
pop
add
jno
mov
sbb
popf
fistps
adc
int
rclb
mov
lea
or
xchg
jecxz
test
cmp
dec
push
sbbb
lret
and
outsb
xchg
pop
cli
push
inc
ljmp
mov
outsb
int
icebp
addr16
aas
out
out
push
inc
cmpsb
inc
test
fisubrs
aad
dec
and
xchg
xchg
data16
cltd
mov
stc
cmp
add
mov
mov
mov
xchg
pop
push
or
and
jmp
in
or
fnstcw
leave
xlat
cli
inc
pop
or
aad
mov
xchg
fwait
sub
subl
js
hlt
mov
lret
dec
iret
cld
cwtl
jae
nop
and
andl
cwtl
mov
xchg
popa
push
repnz
das
cmp
push
call
into
xor
aam
and
ja
test
xchg
jbe
jmp
aam
xor
xchg
sbb
sub
cmp
add
ds
or
hlt
rcl
fidivrs
movsb
in
xchg
hlt
mov
inc
xchg
push
jb
pop
jb
mov
cmp
sbb
lock
or
pop
sub
jno
push
pop
out
out
repnz
mov
push
inc
outsb
dec
ficompl
movsb
ljmp
daa
rolb
jno
cmpsl
bound
xchg
add
cmovle
xor
and
ret
rcl
aad
or
mov
inc
ss
pop
in
rcl
mov
mov
dec
push
add
repz
pop
mov
jecxz
or
shll
and
dec
mov
mov
mov
mov
pusha
mov
sbb
test
xor
into
int3
sub
outsl
xchg
jle
sahf
xchg
or
daa
loop
inc
cmpsb
in
adc
push
dec
fisubs
ss
pop
mov
add
push
cli
inc
je
clc
inc
mov
pop
out
lods
insb
mov
mov
int
add
movb
or
mov
outsl
aad
iret
adc
mov
out
popf
dec
inc
inc
inc
ss
dec
jle
in
adc
pop
out
pop
pop
xchg
sarb
pushf
and
sbb
sub
pop
inc
jb
mov
fsub
mov
mov
xor
out
imul
outsl
sbb
inc
into
mov
push
jnp
dec
orl
lcall
les
stc
xchg
rcll
pop
mov
iret
xor
shlb
loop
leave
lods
and
push
lods
cmp
and
jge
imul
sbb
jbe
stos
mov
jae
and
add
xchg
ds
out
xorb
mov
mov
push
ffree
jle
sub
mov
pop
pop
aas
or
int
jo
imul
inc
popf
mov
pop
push
insb
adc
cld
stos
xor
cmp
enter
push
lods
popl
adc
pop
inc
inc
push
popf
setge
jae
jecxz
sbb
xchg
or
ja
xor
fcompl
imul
faddl
sub
sub
stc
mov
fiaddl
bound
outsl
dec
and
or
fsubrs
iret
xchg
mov
test
pop
sbb
inc
and
fisttps
jo
push
mov
dec
testb
sub
jl
dec
adcl
mov
add
loope
pop
mov
addr16
rclb
test
in
repz
es
popa
icebp
rcrb
pop
lea
jl
sbb
lock
mov
push
sub
mov
push
fadds
mov
loope
fucom
lods
cmp
cli
test
test
rol
cwtl
or
in
sub
out
pop
push
faddl
sarb
mov
andl
stos
in
rcrl
cltd
adc
fwait
loop
movsb
mov
lret
add
mov
mov
ffree
lods
mov
xor
sti
jmp
stc
sti
inc
sbb
mov
arpl
fisubrs
aas
cmp
adc
dec
pop
fucom
and
xchg
pusha
ljmp
into
outsb
sub
icebp
inc
mov
dec
add
nop
insb
xchg
stos
jbe
mov
mov
mov
xor
stc
insl
test
push
cli
movsb
fistpl
jecxz
jae
iret
fnstsw
sbb
dec
and
shl
data16
dec
pusha
sbb
xor
xchg
fwait
mov
or
pop
push
data16
repnz
outsl
popa
or
lods
dec
scas
movsl
add
cwtl
push
and
adc
adc
arpl
jns
cli
adc
jg
loope
mull
std
adc
push
scas
out
test
enter
xchg
push
aad
sbb
mov
enter
pop
pop
in
sbbb
punpckhwd
gs
mov
mov
mov
mov
aam
push
jbe
cmp
lret
sub
cs
popf
adc
test
nop
and
loopne
cmp
jl
insl
sbb
adc
mov
adc
test
mov
in
pop
sub
xor
addb
xchg
mov
fst
sbb
imul
clc
mov
mov
fstps
notl
jl
add
mov
push
pop
add
data16
or
adc
sarl
dec
mov
fistpll
test
pop
xor
leave
mov
mov
lret
inc
ss
stc
and
sti
pop
lret
xchg
pop
mov
ret
arpl
sbb
mov
dec
cld
ds
nop
mov
mov
and
jbe
shll
or
in
and
ss
push
inc
adc
push
and
dec
or
inc
sbb
pop
pop
xor
mov
fistpll
movsb
cmp
mov
aaa
jb
roll
loopne
mov
repnz
mov
or
mov
imull
negb
pop
call
add
shlb
fwait
movsb
mov
int
mov
call
shll
sub
inc
fsts
mov
loope
repz
scas
jo
lret
imul
mov
out
pop
jne
pop
in
or
aaa
pop
sahf
sub
imul
jmp
sub
ljmp
dec
dec
mov
pmaxub
loope
mov
push
dec
and
cmpsb
fildl
mov
pop
add
sarl
mov
push
mov
jb
cmp
mov
push
lods
adc
ss
xchg
push
sub
aas
addb
inc
add
test
pop
pop
imul
xchg
xor
mov
loope
sbb
scas
jo
data16
out
jo
jle
or
leave
sbb
xchg
mov
arpl
xchg
ja
lcall
sbb
lock
daa
imul
gs
or
push
jae
or
xchg
gs
sbb
shrl
test
xchg
pop
lods
xchg
mov
rcrb
iret
test
dec
and
ffree
pop
mul
fdivrl
daa
xlat
js
fsubr
lret
mov
scas
dec
dec
into
push
lea
mov
lret
mov
jecxz
sub
lcall
mov
aaa
fwait
lret
out
jb
fsubp
stc
xchg
cwtl
iret
xor
inc
shll
mov
mov
pop
ds
mov
pop
jne
jp
add
adc
in
nop
arpl
shl
push
cmp
jle
test
inc
cmpsl
mov
xlat
xor
push
adc
stos
stos
fldl
aam
dec
jecxz
xor
ficoml
outsl
ljmp
leave
scas
jo
int3
daa
daa
add
and
sub
jno
data16
xchg
fdivrl
ljmp
or
mov
mov
ja
sbbb
jnp
frndint
sub
cmc
xor
fstl
or
shr
outsl
push
ss
pop
pop
push
mov
subl
and
push
mov
jle
mov
xor
pusha
adc
pop
inc
test
and
add
imul
repnz
into
cmp
cmp
jecxz
cmpsl
insb
push
and
add
xor
mov
shrb
mov
sbb
popf
lret
hlt
lcall
data16
fsub
or
mov
mov
xor
pop
xor
fldenv
dec
xchg
movsb
xchg
and
add
fdiv
jge
clc
push
pop
jl
mov
adc
push
pop
outsb
sbb
es
xor
shrb
pop
movsb
pusha
mov
leave
lret
jns
test
pop
mov
mov
sub
movsb
jmp
mov
xchg
xchg
pop
xchg
jle
add
loope
pop
mov
outsl
cmc
repnz
fisubl
dec
mov
dec
scas
es
rol
mov
add
and
sti
scas
stc
test
out
dec
lcall
das
or
popf
lods
pop
ss
js
out
std
jns
test
pop
pop
cmpsb
cwtl
mov
jbe
lret
bound
inc
or
mov
mov
push
or
mov
and
stos
pop
pop
js
mov
jbe
adc
push
ljmp
in
mov
xchg
imul
adcl
fdivs
mov
push
aaa
mov
mull
push
xlat
rorb
dec
xchg
xor
repz
mov
imul
sbb
sarl
fdivs
imul
mov
pop
cwtl
aaa
and
into
je
and
mov
ficoml
cld
in
mov
xchg
or
sub
mov
cmp
loope
in
sahf
pusha
insl
push
inc
icebp
mov
int3
lods
add
mov
cmpl
insb
lret
and
pop
lods
f2xm1
jo
out
push
ret
movsb
test
pop
ss
adc
mov
jae
sbbl
inc
into
jmp
xor
dec
sub
xchg
imul
push
in
clc
sbb
imul
cli
mov
mov
xlat
mov
pop
pop
adc
loopne
enter
sub
loopne
fwait
insb
test
cmp
leave
sbb
inc
sbbl
inc
add
inc
popa
aam
aaa
pop
jp
sub
pop
push
lret
out
pop
add
clc
outsb
push
fucomip
xchg
push
mov
pop
imul
xor
jl
pushf
push
push
pop
ret
rorb
mov
scas
outsb
pop
nop
or
inc
cld
push
and
push
jmp
cmpsb
mov
call
int
pusha
sarl
ja
dec
clc
jae
fiaddl
inc
rcrl
pushf
mov
sbbl
lea
mov
addb
outsl
es
sub
mov
jae
sub
addr16
add
push
hlt
dec
xor
or
lods
adc
fs
adc
lret
mov
cld
jl
fnstcw
lods
out
mov
adc
mov
lds
push
mov
jns
pop
cmp
cmp
cmpsb
xchg
loope
test
mov
mov
cs
aad
push
lea
jl
out
repnz
jge
andb
and
les
repnz
xchg
repz
mov
stc
jns
inc
cmp
gs
push
sarl
insb
cmp
movsl
imul
pop
add
mov
fisubrl
rcrl
loop
out
mov
cltd
sub
push
xorb
xchg
push
cmpsl
push
pusha
push
das
push
pop
jg
inc
lcall
jmp
inc
jne
stc
pop
and
xor
subb
pop
ror
push
fwait
lcall
add
leave
and
xchg
sub
pop
in
pop
and
add
pop
pop
mov
push
mov
and
sub
idivb
mov
jne
ss
xchg
and
in
jmp
rorl
jg
mov
pusha
arpl
mov
and
or
add
leave
addr16
push
insl
mov
adc
xchg
jg
out
sbb
fsubrs
mov
sbbb
mov
push
mov
sub
pop
dec
out
push
xchg
cmpl
bound
jns
adc
cmpsb
add
push
and
ds
repnz
inc
inc
pop
rol
mov
rclb
jb
test
sahf
arpl
adc
push
and
aaa
ljmp
inc
loopne
sub
or
sbb
xlat
cmp
and
test
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pop
repz
add
mov
