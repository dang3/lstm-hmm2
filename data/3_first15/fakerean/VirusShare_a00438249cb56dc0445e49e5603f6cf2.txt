sbb
add
adc
mov
mov
pop
out
leave
sbb
cmpsb
rcl
lret
adc
icebp
out
ds
dec
xorb
bound
xchg
pop
or
push
mov
xchg
dec
mov
out
dec
xor
in
and
jmp
mov
loope
cmp
jbe
cmpsl
imul
fidivs
sbb
ds
jne
jmp
test
sti
push
push
jecxz
sbb
or
inc
scas
les
and
xchg
dec
and
mov
or
mov
out
fisubl
cmp
pusha
popl
pop
xor
xor
stos
stos
mov
xor
jb
sub
aam
mov
mov
mov
xor
arpl
fs
inc
mov
mov
cmp
xor
push
fucomi
or
pop
ja
lret
add
sbb
inc
rcrb
mov
cmpsb
jns
adc
aad
pop
pop
cltd
add
popa
ficoml
test
fcomps
in
or
js
push
jb
cmp
or
out
sbb
in
sbb
and
out
xor
lods
inc
pop
mov
push
shrl
rcrl
sub
dec
popa
mov
shrb
pusha
mov
mov
push
addr16
scas
inc
push
into
in
iret
pop
popa
sbb
fidivrs
test
cs
mov
loope
scas
lcall
popa
jns
pop
push
inc
cmpsl
stos
icebp
out
mov
xchg
push
and
xchg
and
fcomp
cli
inc
push
aad
adc
outsl
sub
ja
sub
mov
mov
scas
not
mov
xor
mov
mov
out
push
mov
mov
pop
push
lock
add
mov
clc
and
idiv
xchg
out
mov
push
push
int
push
aas
mov
out
rcrl
movsbl
jae
repz
aaa
insb
inc
adc
push
mov
mov
jge
or
push
sub
scas
repz
in
sti
in
push
push
adc
sbb
sub
rolb
lahf
and
xchg
mov
or
in
scas
pop
int3
iret
test
loopne
or
push
cmpsl
and
mov
or
sbb
mov
stos
rolb
push
mov
push
mov
sbb
and
sahf
cmp
and
pop
push
inc
or
pushf
mov
jp
xor
int
insb
push
mov
inc
mov
push
std
repz
sub
pop
pop
xchg
push
loopne
lds
jns
mov
jnp
sahf
jns
lods
filds
ficoml
mov
fmuls
ret
lds
jle
lahf
cs
mov
arpl
in
jb
or
scas
out
xchg
stos
mov
dec
push
mov
or
mov
ret
xchg
mov
jnp
sarb
mov
mov
and
and
adc
xor
aad
push
dec
jmp
shrl
lea
cmpb
cmp
clc
dec
adc
jp
jg
sub
inc
pusha
int
cld
mov
dec
js
insl
repnz
push
or
imul
scas
loope
xor
push
stos
repnz
dec
cmp
cmp
loope
out
xchg
in
inc
test
enter
pop
sub
les
inc
frstor
clc
sub
cltd
scas
aam
into
faddp
pop
stc
mov
fistpl
xchg
mov
dec
jp
cmpsl
in
test
outsb
lret
cld
sarb
push
dec
jp
mov
aaa
mov
jnp
outsb
shl
out
into
mov
push
xor
jae
sahf
sbb
cmc
in
out
lds
jl
jbe
sbb
nop
xchg
xor
lcall
jae
test
pop
imul
mov
lret
sbb
dec
adc
xor
test
div
int
fucomi
mov
mov
addl
sbb
out
cmc
push
lret
xor
gs
fnstsw
mov
inc
imul
push
negb
pop
fsubl
inc
xchg
push
call
stc
inc
or
xchg
lds
pushf
scas
fnstenv
je
leave
mov
lods
inc
cmp
popl
jbe
cmp
hlt
cld
lcall
orb
mov
std
push
fwait
dec
and
add
bound
in
add
sub
shrl
pop
stos
notl
aas
jge
outsw
sub
mov
mov
mov
ljmp
in
les
imulb
inc
aam
mulb
stc
mov
arpl
push
mov
in
cmp
adc
inc
mov
leave
inc
mov
jnp
repz
mulb
mov
je
stos
sbb
popf
lds
lock
mov
outsl
sub
mov
dec
lods
dec
pop
stc
bound
test
mov
movsb
inc
subb
movsl
stc
std
mov
scas
lea
mov
cmp
cmpsl
sub
xchg
cmp
ffreep
push
xchg
neg
aas
out
add
dec
add
adc
dec
rcll
out
sbb
mul
push
icebp
repz
sbb
loop
lds
mov
adc
inc
pusha
jl
pop
mov
out
xchg
jns
leave
testb
xor
fucomp
mov
nop
xor
cs
push
mov
mov
cmpsl
mov
mov
daa
cmp
std
pop
mov
pushf
fsubrl
mov
icebp
cld
sbb
mov
movsb
daa
jb
sti
inc
fcoml
and
and
sub
mov
cmp
out
scas
or
adc
xchg
fsubrs
pop
inc
loop
add
push
jle
xchg
xchg
xor
popf
cmp
adcl
mov
push
adc
test
arpl
rorb
fcmovb
sahf
cmp
xorl
movsb
jns
je
stos
inc
dec
inc
add
ror
js
das
imull
pushf
push
xchg
aaa
jle
jbe
dec
hlt
push
subb
dec
xchg
imul
mov
xchg
xchg
lahf
pop
pop
mov
mov
movsb
and
into
iret
cmpl
jl
adc
jo
sub
jo
lcall
pop
dec
stos
rolb
js
mov
mov
pop
pushf
js
fbld
ret
pop
aad
sbb
movsl
sbbb
xor
or
test
xchg
push
fxch
test
mov
pop
fbld
repnz
in
lret
and
adc
ljmp
fsts
jmp
movsb
xor
sub
test
fwait
dec
fs
inc
and
test
aas
mov
leave
mov
int3
movsl
and
loopne
xchg
xor
jl
ds
or
push
ja
or
adcl
test
iret
scas
jb
lods
mov
roll
sbb
lods
push
sub
add
imull
dec
pushf
xchg
lret
cmp
xchg
int
pusha
mov
jg
or
inc
and
xlat
mov
jno
xor
dec
and
xor
mov
add
mov
mov
cmp
mov
fwait
inc
mov
test
test
push
lds
ss
push
and
or
mov
jne
xchg
mov
aad
xorb
push
jb
enter
mov
xor
and
inc
inc
jb
xor
jecxz
js
pop
xchg
mov
icebp
fcompl
ljmp
test
cmp
addl
jle
mov
sub
xor
in
jnp
popa
je
inc
sbb
xor
mov
pop
loope
or
or
js
je
test
insb
xor
sti
dec
movsb
push
dec
data16
fwait
xlat
jae
xor
mov
cmpsl
cmpsb
adc
movsl
inc
xor
sub
aam
mov
ret
and
or
jmp
add
cld
jb
xchg
push
jae
ss
mov
xor
pop
pop
xchg
jae
push
or
outsb
sub
lahf
jmp
ds
test
xchg
inc
jge
cmp
sub
mov
sti
adc
rorb
sti
mov
fidivrs
mov
iret
in
and
dec
mov
pop
popa
cs
repz
sbb
jmp
xchg
mov
push
aaa
inc
iret
rcrl
push
cltd
stos
pop
fsubrs
stc
cmp
cs
dec
cmp
xchg
xor
arpl
pop
xchg
sub
mov
dec
push
pusha
sub
pop
fwait
aad
inc
lcall
movl
cmp
out
imul
cltd
and
add
mov
or
mov
rcrb
or
test
pop
ds
push
fldenv
into
xchg
in
add
jmp
loop
xchg
dec
add
mov
out
int
ficomps
mov
or
rorl
mov
adc
shll
jg
enter
push
jo
mov
lock
std
cmp
pop
pop
outsl
mov
mov
add
test
imul
mov
jo
cmp
xor
cmp
stos
icebp
in
aaa
cmp
jmp
call
cs
mov
xor
les
push
adc
mov
fadd
mov
and
mov
enter
repnz
and
push
jg
imul
adcb
push
xor
imul
popf
jecxz
pushf
xlat
leave
mov
ja
fs
repz
jg
data16
cmpsb
jmp
add
push
pop
iret
xchg
int3
push
xor
in
push
sub
stc
sbb
xchg
mov
ret
and
xchg
test
sub
pop
int
xchg
push
ljmp
xor
jnp
dec
enter
push
enter
xchg
sbb
cs
lds
xor
or
clc
stos
xchg
aas
jg
aaa
add
push
sbb
add
or
lahf
xlat
scas
sahf
sub
std
adc
arpl
inc
mov
lods
aam
fiaddl
pushfw
imul
sahf
adc
popa
jp
outsb
stos
ret
out
push
scas
jne
sbb
push
ss
or
mov
cld
adc
mov
scas
addl
push
mov
test
cli
andb
into
mov
push
iret
mov
or
test
stos
add
cmc
mov
fistl
pop
mov
fimull
adc
and
shrb
outsl
push
cmp
imul
clc
sarl
push
push
clc
repnz
imul
out
sub
insb
sbb
lea
or
cs
mov
fst
mov
rcl
nop
pop
loop
fs
lea
or
scas
div
lret
adc
ljmp
pop
imul
adc
daa
xor
test
or
cmpsb
push
data16
aas
mov
jecxz
jbe
nop
stc
mov
fs
cwtl
fisubrs
adc
push
ds
xchg
ror
in
push
push
or
jecxz
fs
sbb
mov
xchg
pop
jge
xlat
fnstenv
add
shrl
imul
mov
sbb
jge
xlat
adc
mov
xor
sub
pop
inc
or
cmpsl
push
iret
rorb
ficompl
mov
in
pusha
and
ret
inc
leave
and
repnz
pop
pop
mov
or
jns
sti
leave
or
mov
sbb
repz
js
dec
enter
cmp
mov
add
mov
out
in
setno
pop
cmp
jo
mov
inc
mov
stos
xor
or
adc
rcrb
mov
mull
sbb
imul
mov
cmp
pop
mov
jmp
cli
xor
inc
test
ds
mov
pop
lcall
sahf
pop
loopne
idivl
jae,pt
inc
fbld
jecxz
mov
or
mov
xchg
adcl
cld
fildl
push
orb
mov
jae
cmc
push
scas
mov
in
aad
out
fsubl
or
call
xor
xchg
aam
add
inc
cmp
sbb
cmpsb
call
andl
js
dec
pop
in
out
bound
and
in
and
add
xchg
cltd
mov
inc
xor
fucomi
mov
xor
push
jb
dec
nop
insl
xchg
pop
rorb
push
add
xor
lock
mov
jns
std
jmp
cli
mov
scas
dec
pushf
sahf
scas
and
or
popa
ret
cmp
dec
stos
jbe
stc
inc
adc
sbb
mov
sbb
mov
fs
mov
mov
into
clc
mov
iret
adc
imul
xor
cmp
stc
lahf
repz
sbb
mov
aaa
and
mov
jb
dec
cmc
lds
or
adc
xchg
std
out
sbb
cld
fwait
ret
jmp
fnstenv
xchg
add
inc
pop
pop
ror
push
mov
xlat
add
dec
ljmp
or
out
ret
adc
sub
dec
lods
mov
cltd
push
sti
pop
rep
mov
lcall
add
dec
jbe
or
maxps
pop
xor
xchg
in
mov
pop
xchg
push
cmp
fwait
mov
jmp
push
movb
ficoml
xor
int3
push
popf
fisttpll
int
mov
sub
or
sbb
mov
cmp
mov
dec
lcall
das
push
adc
dec
cmp
rcll
imul
mov
mov
pop
jae
loopne
mov
mov
push
xchg
inc
sbb
dec
cmpsl
cli
ss
adc
lcall
fcoml
pusha
cmc
cmc
std
rolb
rclb
jo
fmul
inc
mov
lods
fs
fimuls
adc
cmpsb
jne
out
or
mov
xchg
xchg
mov
inc
xchg
fldcw
pop
or
lods
xlat
xchg
adc
push
push
cwtl
lcall
xchg
mov
enter
pop
and
arpl
imul
das
jne
stos
sub
ret
imul
nop
repnz
call
xchg
xchg
stc
mov
jnp
lea
out
test
cs
adc
dec
stc
or
sbb
test
ja
mov
scas
xorb
dec
lock
test
stos
data16
xorb
cltd
cmp
mov
clc
leave
stos
jb
imull
aam
jns
xor
or
or
and
or
test
mov
lods
xchg
arpl
jbe
mov
loope
popf
repz
xchg
test
adc
jg
jno
gs
mov
ds
jb
cli
mov
sub
je
sbb
push
pop
lea
out
les
mov
je
jle
mov
xchg
xor
pop
mov
xchg
mov
inc
xchg
add
xor
cmp
repz
imul
mov
into
adc
mov
xor
mov
bound
movsl
push
lods
cwtl
sub
push
std
sub
pop
enter
mov
repz
xchg
fistl
frstor
mov
add
and
mov
cmp
mov
mov
dec
lea
scas
sub
xor
outsb
inc
jno
fdivs
cmp
or
xchg
mov
jl
xor
mov
sbb
add
cmp
xor
pop
and
mov
pusha
aam
andb
mov
lret
es
leave
push
dec
jl
out
les
enter
sbb
shll
sbb
bound
jno
pop
outsb
and
dec
repnz
sbb
cmp
test
pop
enter
rclb
scas
call
test
inc
xchg
loope
rorl
arpl
enter
ret
mov
in
scas
scas
mov
sub
push
ss
push
mov
into
jg
shlb
pop
aas
bound
xor
pop
sub
and
ss
in
jle
lods
mov
add
cmc
testl
inc
sub
jb
pop
bound
mov
pusha
fimull
loop
xor
aad
orl
lret
addr16
dec
inc
lahf
hlt
stos
sub
and
pusha
mov
lahf
outsl
dec
mov
xchg
call
scas
lods
xchg
sbb
dec
sbb
rcll
fsubrs
dec
pop
xchg
rol
pop
movl
xchg
jnp
inc
mov
push
loop
repnz
lds
xchg
and
and
fimull
movsl
sub
cmp
call
xchg
cmp
ljmp
xchg
adc
test
lds
xchg
mov
popf
shl
les
dec
mov
jno
enter
nop
mov
mov
ds
add
and
ret
lea
fbstp
ficoms
addr16
les
pop
loopne
and
addr16
subb
jbe
loopne
out
fsubs
ret
ljmp
out
ret
cld
out
bt
popf
out
dec
mov
in
sbb
jae
int
aad
mov
xchg
ja
inc
in
or
scas
into
lods
mov
mov
push
add
xchg
cmp
bound
stos
xchg
cmpsl
out
sbb
inc
mov
mov
into
mov
das
or
adc
jb
insb
pop
xchg
jg
fsubrs
jbe
sbbl
push
lahf
stos
jecxz
and
adc
aas
out
xcrypt-cbc
cmpsl
aam
mov
iret
andb
jo
cmp
jnp
push
aas
dec
and
movsb
mov
inc
rcl
add
hlt
insb
rcl
lahf
fsubr
xchg
mov
cld
sbb
rorl
mov
sbb
jno
push
inc
mov
pop
mov
lock
fwait
ds
inc
push
in
loopne
dec
xchg
pop
or
jg
dec
loopne
dec
push
mov
out
pop
sub
add
adc
fstl
repnz
fs
pop
in
enter
mov
ljmp
rclb
daa
or
xor
aaa
sbb
or
lcall
push
jo
ror
imul
jmp
push
outsb
js
out
mov
cs
pop
testb
push
loop,pn
lret
dec
xor
pop
or
lea
test
add
test
nop
cli
jnp
add
loop
aad
sub
inc
xor
xchg
cmp
inc
push
rcl
push
mov
and
jbe
and
cmp
jne
loopne
inc
dec
das
aad
int3
inc
test
inc
jne
cld
dec
jno
lahf
jns
mov
cli
mov
mov
seto
mov
jne
mov
clc
pop
imul
dec
push
mov
xchg
pop
mov
out
jle
mov
test
fcoml
sub
daa
adc
dec
or
push
loopne
mov
or
add
push
xor
data16
mov
push
mov
jmp
pop
cmpsl
sti
sub
in
insb
xor
adc
aaa
sbb
sbb
inc
sub
cmc
out
mov
mov
mov
ja
cs
movsb
xor
cmp
cltd
xchg
sar
sub
lahf
repz
mov
adc
sahf
xorl
shll
add
pop
punpcklbw
push
loop
and
cmp
pop
inc
push
clc
into
gs
out
jo
ljmp
fcmovnb
pop
cmp
aam
rcrl
insl
cwtl
jno
sbb
rorl
mov
nop
push
aam
loop
cmp
add
sub
xchg
sub
pop
push
lods
push
push
jp
into
in
decb
fwait
cmp
xor
ss
lods
cmp
and
or
fwait
inc
mov
inc
sahf
enter
test
xor
sbb
mov
stc
or
lcall
call
movsl
push
bound
mov
pop
sti
add
fstpl
adc
mov
test
popf
push
mov
mov
push
jno
lret
popa
cmp
aad
call
ds
popa
mov
sub
out
cwtl
pop
cmp
xlat
adc
sbb
pop
and
mov
inc
gs
mov
pop
test
repz
outsl
push
push
in
out
fisubs
sahf
std
aad
mov
lods
xor
in
cmp
test
mov
cwtl
pop
in
and
in
int3
out
loope
xor
loop
jl
sub
shrl
test
and
fdivrl
mov
iret
in
inc
add
jne
pop
fldl
jns
jae
lahf
sar
jo
stos
loopne
jnp
leave
push
fisubl
or
ljmp
repz
sbb
inc
mov
rorl
pop
das
mov
sahf
mov
xchg
push
xor
push
jg
cld
gs
clc
pop
mov
mov
cmp
data16
fmull
sbbb
adc
lret
notl
pop
adc
sarb
mov
lds
mov
pusha
jmp
je
testb
adc
xor
mov
aad
sbb
rclb
movsl
into
in
cmp
repnz
dec
and
test
mov
fisubrl
sub
mov
mov
ja
mov
add
shll
sbb
xchg
add
xorps
pop
inc
subb
mov
repnz
in
lods
xchg
in
sbb
sbb
push
pop
shrl
and
dec
adc
into
inc
cmpxchg
inc
push
pop
sub
outsb
add
push
hlt
push
push
loopne
in
clc
push
fsubs
and
mov
push
xor
xor
andb
pop
push
dec
jmp
or
in
or
jmp
rolb
mov
mov
pop
add
jp
scas
pop
mov
sub
cltd
repnz
sub
test
pop
dec
sbb
and
push
push
aaa
sbbl
xor
cmp
roll
adc
pop
or
insb
adc
push
hlt
cmp
aaa
gs
jmp
out
push
jecxz
pop
repnz
sbbb
or
jns
cmovno
mov
iret
clc
or
mov
cmp
icebp
pop
cltd
inc
sbb
pop
pop
pop
out
jnp
arpl
push
add
call
sbb
cmpsl
outsb
ret
setbe
div
jae
push
inc
xchg
mov
xchg
pop
mov
idivl
rcl
jbe
mov
leave
fs
test
das
rolb
pusha
dec
jecxz
or
shlb
pop
jns
fcompl
add
xchg
sub
ret
subb
fucomi
insb
inc
push
ja
jmp
push
xlat
int3
jae
adc
les
jae
mov
dec
push
rcrb
in
pop
shl
outsl
push
outsl
push
xchg
mov
in
loopne
scas
repnz
lods
push
fwait
jp
mov
jg
aam
pop
sbb
mov
je
jle
pop
add
out
inc
sub
jle
repnz
lret
pushf
cmp
push
or
cli
pop
adc
cmp
dec
xorb
lock
jp
sbb
roll
cli
stos
fdivl
cmpsl
jmp
pop
sahf
or
incw
lcall
jns
jo
loop
push
mov
cld
je
sti
or
or
test
in
push
bound
stos
mov
and
mov
xor
cwtl
mov
in
fstps
orb
push
adc
push
xor
push
push
ss
mov
push
leave
loope
lahf
js
nop
imul
inc
pop
insl
inc
add
cmpsl
xchg
push
lcall
insl
inc
push
mov
pop
in
xor
int
imul
sbb
imul
push
shr
inc
call
dec
adc
scas
lahf
icebp
mov
add
sti
pusha
fs
mov
cmp
into
out
adc
out
insb
pop
sahf
add
dec
daa
orl
pushf
or
sub
fadd
pop
aad
lret
dec
shlb
cmp
lret
enter
insb
aaa
sub
loopne
xchg
fistpl
enter
and
push
mov
mov
aaa
cmp
je
cli
dec
addb
in
dec
stos
aaa
or
adc
cmp
fidivl
mov
adc
test
test
xor
mov
aas
xor
push
adc
xor
mov
shl
das
scas
and
jg
add
adc
scas
call
dec
dec
jg
xor
stos
jl
fs
les
or
jecxz
mov
xor
mov
jle
jle
shll
or
pushf
jo
mov
cmpsl
pop
lcall
lds
mov
sub
std
dec
fidivrs
int3
xor
xor
sub
jmp
nop
add
jae
mov
jmp
popa
mov
je
int3
mov
adc
ret
shlb
lds
ret
inc
aas
add
lahf
xchg
cmp
xchg
mov
jle
ds
fcmove
cmp
mov
stc
aaa
sarb
mov
loope
xor
dec
push
mov
aas
xor
xor
xor
repnz
in
loope
sbb
xchg
push
mov
push
mov
pop
fimuls
imul
adc
es
pop
sub
cltd
cmp
or
iret
mov
std
push
rclb
lods
push
scas
inc
in
cli
adc
mov
imul
sbb
pop
and
pusha
test
rclb
das
pop
pop
jo
xor
ljmp
or
orl
lret
aaa
mov
mov
cmp
sub
add
or
ss
fsubs
push
inc
lret
dec
std
cld
je
in
loopne
cmp
in
clc
movsb
enter
fwait
hlt
fwait
in
push
adc
push
cmpl
testb
xchg
dec
cmp
or
dec
scas
or
xor
sub
push
sub
lods
repz
mul
push
pushf
or
lret
jmp
dec
movsb
cmpsl
push
pop
fsubs
js
das
sahf
int
inc
xchg
dec
js
push
fildl
dec
jns
addr16
pusha
adc
fldenv
std
mov
or
sbb
loopne
jne
inc
jns
push
xchg
decb
cmp
clc
sub
jp
mov
adc
cmp
imul
ljmp
dec
sbb
mov
cmpsb
das
scas
cmp
cwtl
aaa
imul
cmp
test
add
and
loope
and
sbb
adc
pop
pop
cltd
fdivr
hlt
stos
mov
dec
xor
lds
je
mov
out
sbb
rorb
sub
lds
xchg
adc
push
mov
pop
pop
xor
inc
jb
sub
mov
test
movb
ds
and
inc
jl
sbb
sbb
aas
adc
cmp
xor
inc
sub
lcall
lods
xor
popa
pop
jnp
xchg
xor
add
or
shr
lea
stos
jb
loopne
test
std
push
scas
xchg
icebp
jne
aad
mov
fwait
aaa
stos
jl
lds
out
jne
xchg
leave
mov
xchg
lock
mov
mov
outsl
xorl
lahf
in
and
mov
xor
bound
or
xor
enter
push
lea
adc
sub
mov
fsubl
rcr
push
jnp,pt
roll
sti
js
inc
lods
cmc
sbb
adc
adc
mov
loop
fildl
inc
and
test
nop
inc
testb
add
mov
shll
imul
sbb
dec
imul
mov
lods
inc
std
or
jne
iret
or
fwait
sbbl
sbb
shl
adc
inc
in
fsubrl
cmp
test
test
xchg
and
inc
push
mov
jmp
or
cmp
aad
dec
and
hlt
lahf
mov
in
jns
mov
mov
inc
inc
push
cmp
add
add
lahf
shll
xchg
je
mov
xchg
int3
out
jbe
sub
jae
pushf
inc
mov
mov
jno
int
cli
jmp
inc
mov
pop
cli
bnd
mov
fucomi
into
aad
pop
movsl
push
lret
xchg
xchg
test
sub
add
sub
out
and
shrl
lret
xchg
cs
in
movb
push
jecxz
pop
push
dec
or
sub
xchg
sub
dec
fidivl
stc
push
mov
xchg
push
add
pop
mov
sbb
cmpsl
xchg
or
lds
lcall
out
dec
mov
scas
and
scas
cmp
aad
cli
lods
ret
lods
ljmp
xchg
push
cmp
push
dec
roll
adc
push
mov
pushf
push
adc
adc
aam
orb
mov
or
sbb
jno
push
iret
cmp
shlb
mov
cwtl
mov
bound
aad
push
jmp
lds
xchg
and
xor
adc
pop
pop
push
sbb
outsb
sub
dec
jmp
cld
pop
das
dec
jl
push
cmp
cmpsb
imul
mov
movsb
icebp
sub
test
pop
jae
mov
dec
into
mov
fistl
sub
sahf
jnp
popa
mov
dec
jge
ret
ja
push
scas
leave
imul
leave
dec
fs
inc
fidivs
lret
leave
mov
out
jo
xor
clc
xchg
jp
jmp
js
sub
in
das
inc
ret
inc
ja
add
pop
push
icebp
xlat
out
and
pop
lea
repnz
xor
hlt
adc
jb
roll
enter
cli
mov
outsl
jns
xchg
imul
mov
mov
mov
hlt
imul
in
xchg
sbb
test
inc
cmp
adc
loope
dec
mov
idiv
jns
jle
cmp
mov
test
ljmp
xlat
loopne
outsl
xlat
out
rolb
dec
aam
repnz
mov
fs
sbb
jge
jae
lahf
repnz
xor
dec
in
push
cmp
dec
pop
ds
cmp
add
sbb
std
dec
fs
stc
pop
dec
mov
jnp
dec
jg
mov
fisttpl
mov
pushf
hlt
dec
mov
jb
hlt
add
pop
data16
sbb
hlt
mov
repz
push
je
test
pop
orb
adc
fcom
and
jnp
jle
cli
jnp
int
jge
pop
movsb
pop
stos
cmp
and
pop
inc
xchg
iret
or
addr16
lea
icebp
inc
fidivrs
stos
push
mov
xchg
fisttps
repz
cmp
and
pop
jns
adc
xor
push
ds
ljmp
flds
repz
cli
push
pop
inc
mov
repnz
rcrb
adc
rorb
jmp
jmp
je
arpl
test
clc
mov
add
sub
jno
ret
cmp
shrl
cmp
pop
or
mov
addr16
mov
shlb
xchg
leave
xorb
int
out
lods
cmp
es
push
outsl
arpl
mov
loope
pop
negl
shrb
and
stos
sarl
mov
adc
sbb
call
mov
fmuls
sahf
xchg
mov
hlt
sti
jns
push
pop
test
adc
js
dec
xor
loop
mov
jecxz
xor
mov
xor
inc
xor
jecxz
out
xchg
insl
inc
jp
out
push
sub
dec
add
dec
xchg
or
sbb
negl
arpl
loope
insb
je
xlat
pop
leave
pop
mov
and
mov
push
push
lods
repz
in
mov
mov
int
sbb
fisubl
sub
mov
mov
inc
push
cmp
or
xchg
int
sti
ror
xchg
push
in
nop
xchg
sub
fsubs
add
cmp
and
es
dec
jb
xchg
bound
adc
or
cmp
xor
adc
cli
leave
jnp
push
int3
jnp
add
push
mov
push
inc
clc
out
scas
add
les
add
bound
hlt
mov
lret
lods
popa
fldcw
jne
pushf
test
test
inc
pop
inc
push
mov
inc
add
in
mov
push
jne
adc
sub
and
loope
in
push
pop
js
xchg
aam
push
or
lahf
shld
test
fistpl
or
jmp
inc
add
and
mov
out
nop
call
cmp
movsl
popa
adc
shlb
pusha
das
shr
lea
dec
pop
xchg
jecxz
xchg
add
dec
xor
mov
imul
jae
push
cld
inc
pop
sti
push
and
xchg
repnz
mov
xor
push
dec
shlb
sbb
xchg
push
and
scas
sbb
rclb
sbb
add
add
out
xchg
xor
lcall
push
movsb
pop
dec
jl
data16
imul
or
mov
call
sub
fcmove
lahf
ljmp
jmp
pop
imul
inc
divl
jnp
idivb
pusha
jns
outsb
fstpt
inc
xchg
movsb
push
cmp
and
std
mov
pushf
mov
sbb
into
add
push
fcmovb
int
add
xor
adc
push
mov
cmp
pop
sbb
hlt
add
or
inc
sahf
ficompl
xchg
lods
xchg
cmp
mov
jecxz
mov
jmp
out
popf
test
mov
xchg
jg
imul
dec
push
js
pop
ljmp
fimull
add
daa
xor
out
mov
test
leave
xchg
mov
ret
cmpb
mov
sbb
xor
or
dec
ss
adc
or
xchg
popa
test
pop
and
fadds
jge
data16
ljmp
adc
xor
out
gs
cmp
inc
jmp
popf
in
xor
sbb
sbb
cmpsl
push
jne
push
push
mov
pop
das
test
ljmp
loope
fildll
jne
pop
fstl
cmp
jmp
cmpsb
push
pop
mov
push
aad
adc
jbe
loope
push
fs
out
jmp
mov
sub
push
aam
pop
xlat
lret
push
jno
arpl
rclb
add
mov
pop
mov
shl
xor
scas
push
jl
in
ret
cld
xchg
insl
xchg
jbe
cmp
dec
fsts
or
dec
pop
es
push
cmp
cmp
inc
dec
dec
xlat
cwtl
movsb
adc
pop
imul
adc
and
push
pop
dec
loop
jmp
adc
aas
pop
mov
test
les
or
mov
sbb
mov
or
outsb
cmpsb
negb
daa
out
mov
mov
push
cmp
dec
and
mov
pushf
pusha
jno
dec
mov
push
test
scas
int3
mov
rclb
pop
cmp
lcall
pop
addr16
sub
inc
pop
jp
dec
aaa
or
js
add
mov
add
pop
mov
jnp
pushf
sub
sbb
imul
mov
lock
mov
fcompl
ljmp
subb
xchg
scas
push
enter
imul
xchg
adc
test
jp
int
jp
loope
push
xor
cmpsb
mov
imul
pop
pushf
mov
scas
add
ja
add
popa
xchg
je
ljmp
dec
or
iret
pop
mov
call
dec
sub
jmp
lds
cwtl
jo
dec
lods
ljmp
ret
mov
adc
rclb
stc
cmp
inc
lea
mov
cmpsb
loope
dec
or
adc
sahf
push
mov
std
or
cmpsl
aas
mov
jnp
cmp
push
pop
loope
fimuls
rol
cmp
adc
sbb
test
imul
xor
mov
test
shr
movsl
mov
ror
xor
aaa
push
dec
ds
mov
mov
rcll
and
test
les
scas
daa
pop
lods
cld
add
sbb
test
dec
xchg
out
out
xchg
xchg
scas
sub
xchg
loope
mov
call
mov
push
je
mov
sbb
popa
or
jbe
cmp
add
stc
test
cmp
mov
subb
sbb
mov
data16
inc
movsb
and
popa
xchg
adc
xchg
shr
cwtl
sub
sbb
clc
pop
mov
xchg
into
xchg
or
stos
mov
inc
test
loopne
ss
adc
pop
mov
loop
mov
fistl
scas
and
clc
ror
sub
add
mov
inc
into
les
add
mov
test
ficoms
cld
pop
inc
jge
mov
aam
mov
js
iret
hlt
ljmp
sub
push
int3
push
in
rcr
push
inc
ret
or
dec
inc
aad
std
mov
imul
sub
repz
or
xchg
aaa
das
sti
mov
mov
in
das
in
lea
ja
jns
add
rclb
xchg
pop
idivl
sti
cmp
pop
xchg
mov
icebp
cmovl
popa
clc
or
in
mov
xchg
jg
mov
cltd
push
adc
cs
or
out
incb
add
in
cs
cmpsb
ss
decb
std
lret
fnstsw
mov
ret
imul
mov
push
sub
nop
xchg
mov
iret
xor
mov
ds
push
adc
dec
ljmp
mov
rcll
pop
sahf
xchg
sar
push
mov
mov
lea
fnstsw
cmp
pushf
cmp
lea
js
lret
enter
mov
nop
popf
jb
mov
adc
adc
push
and
dec
xchg
sbb
test
test
cmp
popf
aad
outsl
cmp
lock
sub
scas
mov
gs
shll
movsl
pop
xchg
in
xor
and
movd
jnp
adc
sub
stos
andb
out
xchg
icebp
out
cmpb
jle
and
sti
add
pop
rorb
sub
inc
int3
in
sti
aaa
sbb
pop
push
movsl
cmp
or
adc
push
loope
jne
pop
sarb
imul
or
sbb
and
call
sahf
mov
xlat
sbb
test
add
test
add
int
gs
inc
inc
dec
dec
cmp
xchg
cmp
jmp
sbb
xchg
ret
lcall
cwtl
pop
dec
ret
test
sbb
inc
in
xor
inc
or
inc
mov
stos
subb
sti
cmpsl
jne
xchg
sarb
xor
sub
xor
notb
and
rcrl
mov
aas
inc
scas
add
stc
xchg
pop
pop
lock
in
jecxz
xchg
pop
cld
fmuls
pop
jo
jno
sahf
jo
dec
shlb
bound
xor
mov
add
xor
pusha
enter
pop
adc
sbb
mov
inc
lods
push
xor
scas
or
xchg
sahf
insl
movb
popa
push
sarb
lea
mov
sbb
in
in
dec
jl
enter
or
lods
popf
jmp
push
mov
xchg
jo
js
fwait
daa
push
repnz
inc
jne
shlb
aas
dec
pop
push
push
pop
push
jge
fsubrs
movsl
add
ficoml
add
cwtl
popf
cld
mov
jl
aaa
mov
incl
imul
inc
pop
icebp
lea
and
sbb
jns
inc
mov
push
push
rclb
mov
inc
ds
iret
lea
sub
add
xor
cld
cmpsb
sbb
sahf
dec
push
mov
and
xchg
inc
cmp
or
sub
fwait
jo
sub
mov
outsb
icebp
or
nop
mov
mov
loop
xlat
movsl
add
jns
dec
cmp
sbb
es
sub
mov
inc
in
adc
jmp
or
and
sbb
cmp
mov
mov
iret
jae
jmp
pop
or
and
aas
mov
negb
test
int
cmp
lahf
pop
mov
rorb
repnz
repnz
je
push
lods
xchg
mov
cwtl
adc
cmc
popf
scas
mov
sub
cmpsl
cwtl
inc
mov
leave
pop
sbb
clc
cmpsl
adc
mov
adc
mov
lds
outsl
rcr
mov
mov
aas
sbb
lods
shrl
add
cs
imul
mov
insl
mov
inc
mov
ret
pop
sub
push
cmp
clc
sti
je
push
shl
cmp
out
xor
rcrb
repz
add
les
sub
enter
int
clc
in
imul
adc
shlb
stos
dec
shl
adc
test
mov
sbb
es
xor
dec
mov
test
fs
fsubr
push
mov
cli
les
jmp
ljmp
pop
stos
jl
test
sbb
and
add
mov
jecxz
stc
sti
insl
sbb
scas
jecxz
stc
push
mov
iret
push
dec
mov
ficoml
fwait
mov
je
pop
jae
and
iret
ret
cmp
xor
rcrl
test
mov
cltd
das
mov
mov
pop
addr16
sub
xlat
mov
adc
es
adc
mov
xor
cmp
pcmpgtw
cs
fnstsw
mov
dec
sub
call
popf
or
aas
addr16
adc
sbb
sbb
lods
xlat
rcrl
push
inc
and
sbb
sbb
subb
mov
fdivr
fistps
lds
dec
mov
loope
or
lea
mov
pop
mov
inc
add
jo
jg
and
imul
pop
je
inc
jns
repnz
mov
mov
adcb
sub
and
ds
fwait
lods
subb
pop
je
sbb
push
sbbl
mov
inc
add
je
icebp
adc
lret
test
mov
push
mov
insb
insb
shlb
pop
mov
cld
loope
dec
nop
dec
jbe
add
cmp
jge
mov
mov
adc
repz
push
mov
push
and
les
cmp
cltd
pop
ljmp
nop
call
xchg
mov
mov
or
and
sub
test
in
mov
jne
lock
aam
scas
icebp
mov
cmp
mov
sub
movsl
push
xchg
arpl
clc
push
push
in
sbb
push
xor
mov
mov
cmp
cmp
inc
addr16
mov
lret
aad
pop
rcll
mov
movsl
test
movsl
leave
xor
call
ret
sbb
cli
jo
sub
ds
adc
stos
popf
sub
xor
dec
jno
std
test
js
lahf
add
divb
sub
push
movsl
push
in
xor
push
cli
jne
mov
jp
mov
adc
cmp
push
aam
cltd
xor
not
pop
rorb
imul
pushf
push
imul
mov
insl
jns
cs
sbb
mov
scas
scas
pushf
pop
cli
mov
xchg
test
lret
inc
mov
dec
adc
fidivl
cmp
out
mov
mov
jb
add
xchg
adc
bound
sti
loope
jne
xchg
into
add
push
adc
or
jmp
ret
mov
sbb
pop
aad
sbb
insb
cld
pop
inc
das
dec
bound
jnp
mov
xchg
dec
dec
mov
arpl
cmp
daa
out
dec
adc
lods
push
icebp
test
addr16
mov
shll
mov
outsl
rcrb
dec
sbb
sub
sbb
adc
imul
cmp
mov
aam
xor
sub
out
inc
lret
iret
loopne
pop
ds
mov
pop
sub
sub
mov
fsubrl
jns
outsb
sarb
jnp
inc
xor
roll
cmc
pop
cmc
repnz
jns
xchg
jg
int
mov
inc
and
jnp
das
add
or
jne
jo
daa
or
jg
mov
jmp
xor
std
loopne
jb
je
dec
dec
test
loope
enter
andb
sbbl
int3
xchg
sbb
outsl
negl
cmp
xor
inc
xor
cs
jae
ss
xchg
mov
mov
loop
scas
pusha
dec
cmp
dec
movsb
cmpsb
xchg
fadds
xchg
and
nop
aam
scas
pop
mov
cs
negl
and
jg
push
hlt
int3
xchg
jb
movsb
and
rolb
loop
xor
ret
loop
jp
xor
jo
rolb
mov
sbb
fcoml
mov
fs
incl
lds
mov
mov
jns
cmp
cmpsb
mov
sbb
inc
aad
sti
popf
mov
fwait
and
ret
jns
cmc
rcrl
and
pushf
lock
adc
aaa
and
jb
adc
mov
sub
xchg
loop
aam
outsl
adc
xor
adc
or
xchg
mov
in
cs
push
loopne
insl
mov
cwtl
mov
rcll
or
in
pop
push
cld
xor
out
xor
fdivrl
jno
mov
xchg
icebp
pop
cmp
div
xor
lods
je
pop
lea
out
push
xor
pop
adc
jae
push
mov
jl
test
dec
cltd
mov
in
sub
jl
aaa
addr16
aam
out
push
repnz
pop
lods
push
mov
cmc
adc
in
lret
mov
adc
imul
xor
insb
mov
lock
das
ja
sub
hlt
shll
inc
pop
loop
sahf
cmc
cmpsb
xchg
mov
leave
sub
or
cmp
es
out
adc
fsubr
cwtl
add
test
aaa
imul
and
jg
sar
jl
cmp
sub
push
mov
or
cmp
shll
fadds
js
jno
xor
inc
ret
sub
js
cmp
cmpsb
not
fcmovnu
inc
adc
iret
lock
mov
dec
popa
pop
inc
jno
mov
lcall
mov
and
jge
pop
pop
stos
imul
and
mov
inc
out
loop
push
iret
in
xchg
sbbl
in
repz
sbb
fdivrl
outsl
adc
pop
popf
pop
sbb
xor
cltd
xor
mov
test
add
pop
xchg
sub
cmp
adc
call
incb
mov
aaa
push
mov
cmp
xchg
aas
xchg
push
sub
lret
loopne
mov
sbb
addr16
and
sub
xlat
ss
push
add
mov
scas
push
out
in
dec
mov
jo
mov
cmp
andl
movsb
xor
pop
aas
add
stc
insl
or
and
inc
dec
push
repnz
out
je
movsl
orl
into
call
pop
and
call
sub
imul
push
xor
and
jle
or
pop
cmp
cmp
sarl
xchg
mov
or
fidivl
jb
xor
rclb
and
inc
and
cmp
out
inc
cmpsb
movsl
cld
loopne
xchg
add
es
pusha
mov
das
aam
dec
mov
shl
inc
dec
push
lcall
cmpsl
das
mov
divb
xor
and
data16
into
out
setl
xchg
cmp
into
repz
aam
daa
dec
mov
xchg
mov
rolb
clc
sarl
jb
ficoml
outsb
push
orb
mov
xchg
dec
bound
push
cmpsl
dec
or
push
popa
or
sahf
loope
mov
cwtl
shrb
lock
clc
and
sub
dec
xchg
fcompl
aad
mov
adc
call
pop
scas
pop
addb
cmp
in
cmp
fdivl
xchg
cmp
push
lods
mov
xchg
inc
cmpsb
add
mov
push
or
pop
xchg
dec
clc
icebp
and
or
jo
xlat
rolb
cmp
fcompl
aam
data16
pop
xchg
lds
daa
out
or
pop
dec
cmp
les
and
out
push
imul
xor
add
movsl
mov
arpl
adc
daa
sub
sbb
fidivrs
lss
lods
or
call
and
push
jle
stc
inc
mov
sbb
mov
lea
orl
subb
xchg
ds
or
xor
jmp
aaa
xchg
data16
pop
out
stc
xchg
cld
mov
cmpsl
dec
fwait
mov
cmp
in
sahf
inc
mov
lock
test
or
inc
cmp
outsl
or
mov
adc
imul
xchg
inc
movsl
or
sub
imul
outsb
push
cmp
test
dec
addr16
stc
jae
and
pop
xor
iret
push
pop
mov
lock
daa
inc
pop
in
push
mov
jne
icebp
lahf
out
and
das
in
popf
inc
adc
stos
add
aaa
hlt
sub
sarb
jmp
push
scas
and
nop
xlat
scas
orl
and
xchg
mov
stos
incb
pop
push
sub
xor
ljmp
imul
dec
sbb
push
loopne
mov
lret
push
mov
push
jge
loop
xchg
inc
jo
xchg
dec
add
and
mov
test
dec
dec
sti
test
nop
pop
mov
fldcw
inc
das
dec
xchg
loopne
jnp
into
test
pushf
pop
ds
jl
in
cltd
int3
loope
repz
xchg
dec
xor
loope
xlat
ss
add
push
cmp
add
or
imul
pop
loopne
adc
mov
jle
or
imul
popa
add
cmp
mov
bound
adc
and
pushf
adc
lahf
out
push
add
cmpb
and
push
push
lret
cmpsl
sar
sarl
es
dec
rclb
or
imul
test
adc
add
je
mov
pop
ja
popf
mov
test
cltd
mov
fcompl
ret
imulb
out
imul
xor
mov
cmp
in
mov
lds
stos
mov
into
insb
mov
outsb
or
mov
mov
mov
sbb
or
hlt
xchg
out
out
out
cmp
cld
test
mov
lock
sbb
mov
arpl
call
loop
mov
clc
shrl
dec
jle
in
mov
or
push
lret
mov
mov
cs
cld
icebp
or
insb
push
xchg
mov
imul
push
jne
movsl
sbb
pop
ja
sbb
xchg
mov
push
adcl
pop
add
push
jecxz
and
cmp
cmp
test
and
lret
imul
dec
out
add
mov
outsb
and
add
fnstcw
pusha
pop
out
ds
push
jp
in
or
je
adc
cmp
xchg
inc
stc
sarl
jle
outsb
repz
or
or
xorb
inc
jno
xchg
or
pop
push
gs
xor
aaa
cmpsl
enter
repz
jmp
je
out
into
push
inc
adc
and
pop
in
xchg
lds
call
cmc
jo
ret
mov
jp
xor
and
xor
push
mov
lds
fnsetpm(287
imul
pop
test
sbb
pop
out
sub
rolb
cmpsb
mov
lret
and
jmp
add
lock
aad
fs
test
mov
inc
inc
je
sbb
fidivl
adc
sahf
in
iret
fsubr
push
mov
gs
stos
xchg
inc
inc
ret
fstps
aam
jo
and
dec
mov
movsl
mov
lret
push
lret
push
faddl
jb
and
xor
fcomp
add
sub
cld
xor
addr16
dec
out
or
jb
imul
fwait
rcll
pop
sbb
push
xor
dec
lods
pop
loope
xchg
jo
adc
sub
popf
iret
imul
add
in
out
pop
push
fwait
cmp
cmp
mov
cmp
pop
or
xchg
pop
orb
cmp
inc
cmc
fninit
push
push
dec
aad
insb
cmc
pop
cvtps2pi
adc
xor
mov
pop
out
cmp
aas
lock
clc
mov
jg
sbb
aam
inc
sub
or
in
jle
jno
jb
mov
pop
inc
repz
out
mov
push
into
sub
int3
jne
pop
popf
mov
int3
ds
imul
lahf
jle
daa
dec
std
jne
loop
and
fnsave
sub
and
push
aas
clc
mov
jb
pop
aam
incb
fistps
mov
scas
fwait
xchg
dec
add
dec
jne
js
cmp
lds
fiaddl
sbb
add
or
shrl
aad
out
push
into
aad
sub
pop
notl
pop
or
add
push
iret
cmp
push
add
clc
mov
ss
ljmp
decb
or
jns
mov
ficoml
jae
cmpsl
je
movsl
pop
jg
dec
loop
cmp
outsl
rorl
les
cmp
mov
adc
lret
out
cltd
xor
pusha
mov
jns
pop
push
jno
mov
adc
adc
xor
into
in
mov
iret
aam
fdivrl
and
pop
add
xchg
out
mov
movsl
lods
mov
aad
repnz
js
loopne
pop
inc
sbb
add
push
cld
dec
lods
sub
nop
pusha
neg
loopne
mov
jecxz
dec
fcomip
popa
enter
aaa
imul
aaa
xor
adc
mov
mov
xor
adc
imul
inc
inc
mov
mov
ja
mov
das
repz
push
and
dec
mulb
pushf
in
fiadds
fistpll
push
in
xchg
dec
xorb
in
dec
test
push
mov
ja
fwait
push
cld
pop
xor
movsb
sbb
popa
outsl
adc
mov
dec
cmc
or
or
bound
push
pop
jno
and
mov
mov
pop
mov
lods
inc
adc
jge
xchg
sahf
or
rorl
push
push
jno
mov
inc
jnp
mov
fdivs
fildl
mov
idiv
push
mov
pop
sar
out
ds
ret
aaa
mov
or
xchg
lcall
push
ljmp
mov
addr16
mov
fidivs
aas
inc
pop
sbb
shl
aaa
popa
cmp
jmp
fsubs
in
xchg
add
mov
aad
dec
fnsave
pushf
jl
in
xchg
lods
aam
incb
mov
mov
in
sbb
push
sub
or
xchg
push
in
out
movb
into
inc
pop
rcr
adc
dec
inc
andl
std
out
and
fisubrs
add
jmp
mov
stos
movsl
ds
lret
out
lds
pop
xchg
mov
push
shl
nop
sahf
loopne
adc
jp
and
repz
and
fisubl
fldt
push
jne
dec
ror
icebp
pop
in
imul
xchg
pusha
xchg
push
leave
ds
sbb
ja
or
mov
mov
mov
lahf
pop
cld
dec
or
leave
xchg
inc
push
mov
push
jl
mov
ficomps
push
jge
pusha
sub
sbb
addl
fbstp
jle
xchg
shrl
ffreep
pop
and
rorb
scas
std
lret
pop
xor
sarl
iret
fcos
xchg
dec
push
xor
or
mov
xor
jmp
push
dec
sbb
outsb
scas
shlb
ficomps
lahf
mulb
cltd
or
stos
or
leave
imul
pop
xor
rclb
test
push
mov
aaa
push
jecxz
leave
cs
mov
sbb
fdivrl
jl
ja
mov
neg
stos
mov
fists
jle
push
mov
push
scas
xchg
pop
outsb
imul
xchg
push
mov
push
jnp
fs
pop
out
aam
pushf
sbb
ljmp
mov
pop
insl
lret
lea
int
movl
jmp
jge
ljmp
fwait
xor
ret
dec
scas
aaa
or
dec
jnp
adc
ffreep
insb
aas
sti
inc
dec
jo
mov
push
insb
aad
dec
cld
sub
sub
pop
jnp
mov
pop
jbe
lods
inc
mov
aas
xor
xchg
pop
mov
push
rclb
fidivrl
xchg
fistpll
cmp
cmc
inc
cmc
pusha
enter
pop
cli
out
not
inc
mov
or
hlt
push
mov
cli
movsl
mov
pop
into
push
pop
cs
adc
shr
adc
loopne
or
jl
into
jg
push
orl
sub
push
push
aam
movsb
insb
aaa
cmpsb
mov
in
sbb
nop
std
movsl
scas
ret
jp
sbb
mov
mov
enter
dec
xchg
mov
mov
sbb
lods
and
in
ficomps
repz
in
testw
call
ret
sahf
test
mov
int
test
and
xorl
cmpsl
or
fidivs
pop
and
jns
js
ja
adc
fsubs
fnstsw
cld
outsl
cmpsb
xchg
sub
aaa
push
mov
inc
shlb
pop
xlat
lret
stc
das
scas
push
aas
push
push
arpl
or
fldenv
fistpl
mov
sub
push
in
mov
add
or
jae
mov
int3
cmpsw
cmpsl
or
add
clc
mov
xchg
xchg
jmp
or
sub
adc
or
and
imul
iret
loope
mulb
sub
fwait
fwait
dec
adc
mov
fstp
mov
xor
je
xchg
dec
sbb
and
push
sbbl
push
outsb
in
loope
jecxz
popf
sub
adc
insl
pop
inc
mov
and
sbb
mov
adc
push
mov
aam
mov
or
push
leave
xor
add
in
jge
in
inc
and
ret
adc
addr16
xor
pushf
lea
cmp
pop
xchg
mov
sbb
or
aad
jae
imul
popa
mov
xchg
and
xchg
sub
lods
pop
int3
aad
add
adc
test
pushl
mov
call
mov
adc
fstps
mov
mov
sbb
mov
lds
inc
lods
outsl
scas
popf
jns
pushl
sub
stos
pop
imul
je
enter
fdivr
pop
mov
daa
sbb
push
sbb
or
pop
pop
fs
out
mov
mov
cmp
mov
in
fsubrl
cmp
mov
cld
add
repnz
jge
aaa
jle
sub
fiadds
je
mov
xchg
pop
popa
outsb
cltd
movl
push
insl
jb
xchg
adc
outsl
stc
push
sbb
test
mov
xor
stos
loop
fcmovu
bnd
sbb
xorb
adc
inc
rol
inc
test
mov
lock
mov
cs
mov
jle
push
jb
mov
mov
push
mov
mov
addb
loopne
orb
and
sub
or
pop
daa
add
xchg
mov
pop
adc
mov
push
sub
cmp
pop
mov
or
and
fs
xor
inc
mov
xchg
out
jmp
shrl
mov
repz
xlat
mov
push
push
xor
push
inc
pop
fcmovnbe
xchg
repnz
popa
sbb
std
lods
dec
mov
lock
adc
push
sub
cmp
das
xorl
stc
cmp
scas
mov
and
lea
out
sbb
in
xor
mov
das
les
ljmp
imul
lock
mov
mov
xor
test
push
or
enter
push
lods
in
movsl
mov
push
testb
add
fs
mov
jg
loopne
js
std
jg
fmuls
add
or
mul
push
fmuls
fimull
adc
jbe
ljmp
and
adc
pop
mov
adc
push
and
cmp
xor
mov
adc
fcoml
leave
lock
mov
sub
int3
and
lea
hlt
mov
fwait
shll
sbb
push
xor
or
cmp
int3
iret
insb
enter
movsl
adc
cltd
fisttps
push
push
shl
jmp
push
mov
jl
xor
jle
gs
mov
jb
cltd
mov
mov
jg
mov
pop
cmp
xchg
test
shrl
rolb
xor
mov
mov
adc
push
pop
jle
in
jp
enter
lahf
sbb
xchg
pusha
insl
pop
cmp
int
adc
xlat
sub
gs
jae
jle
js
xchg
imul
cs
xchg
push
ja
inc
js
ret
inc
mov
sbb
mov
call
dec
jae
lock
mov
xor
jnp
cmp
mov
jl
fistps
aaa
adc
push
sbb
fstpl
ss
sub
sub
pop
mov
enter
or
adc
sub
push
rcr
xorb
push
xchg
popf
cmc
mov
pop
and
flds
and
stos
jmp
into
cli
mov
xor
repz
push
jae
cmp
ss
mov
or
sbb
aad
stos
adc
push
sti
popf
nop
loope
jl
gs
mov
push
inc
dec
scas
inc
rclb
xchg
add
inc
xor
subl
inc
or
xchg
jmp
inc
lods
bound
lahf
negb
sarb
pop
mov
aaa
loopne
js
ret
lock
nop
adc
inc
and
in
nop
fnstenv
int
jno
dec
movsb
push
dec
int3
fidivrs
ljmp
sub
pushf
or
jae
fwait
mov
daa
pop
fldt
sbb
out
repz
cmp
sbb
or
jne
pop
fldcw
pushf
mov
pop
jnp
stos
cs
jb
movq
cmpsb
jmp
test
mov
jl
mov
push
in
or
xchg
xor
fadd
int
push
lock
stos
mov
adc
cltd
add
pop
and
or
pop
and
stos
ret
inc
in
aaa
push
xor
cltd
push
popa
dec
pop
jge
push
sahf
cmp
mov
fsub
imul
subb
into
lods
mov
scas
xor
xchg
int3
add
in
out
mov
and
push
pushw
insl
cmp
xor
dec
aad
mov
test
std
mov
and
jb
insb
dec
or
mov
out
fldl
or
sar
xlat
scas
sub
mov
popf
mov
push
xchg
xor
sbb
pop
or
stos
clc
add
shll
or
test
cmpsl
jae
fsubp
int3
nop
roll
movsl
in
push
rcll
cmp
xchg
mov
inc
sbb
add
rcr
cmc
cld
xchg
out
lahf
sbb
cmp
xor
mov
dec
scas
imul
aam
into
and
fwait
test
dec
hlt
mov
in
xor
xchg
pop
cli
push
jbe
aas
int3
jbe
fisttpll
cltd
pusha
push
and
lcall
fs
and
sbb
mov
pop
mov
add
sbb
cmp
or
out
scas
xchg
movsb
out
sysenter
movsl
hlt
jo
rcrl
xchg
dec
xor
add
jmp
dec
xorb
inc
push
nop
fldenv
inc
push
xor
jns
inc
sahf
int
inc
and
outsb
and
repnz
stos
fisttpl
sti
sahf
les
sbb
cmpsb
xchg
fs
das
popf
adcl
dec
dec
sti
lds
sahf
cmp
sub
push
dec
or
sub
and
add
sahf
in
add
dec
push
xchg
xchg
dec
scas
jg
or
jg
fxch
addr16
mov
add
stos
jg
fwait
or
in
dec
inc
fucom
adc
int3
jmp
add
je
pop
xchg
ficoml
pushf
dec
in
jnp
mulb
cltd
ret
shll
pop
cmp
loope
adcl
pushf
xchg
lcall
loopne
pop
dec
scas
stos
cli
repz
jns
inc
xor
std
jnp
add
and
cmp
lods
add
pop
pop
scas
or
in
popf
jmp
mov
jmp
mov
xchg
xor
hlt
add
dec
loope
nop
xor
filds
push
fwait
push
jl
dec
paddw
mov
dec
push
push
pop
stos
mov
insb
inc
adc
pop
pop
int3
dec
enter
je
ret
cli
movsb
icebp
sub
cmp
sbb
cmpsl
mov
sahf
mov
stos
notb
gs
mov
scas
xlat
js
mov
int
cmp
cmpsl
sub
jbe
sub
cmp
cmp
test
push
cmp
pop
adc
aas
in
daa
loopne
sbb
int
inc
mov
cmp
jnp
sbb
lods
push
mov
sbb
inc
dec
mov
fwait
dec
outsl
xchg
push
cmp
push
pop
add
or
negl
fstl
fsincos
scas
pop
outsb
mov
fmulp
xchg
cmp
or
or
lret
mov
dec
jbe
in
xchg
lahf
sarb
adc
xchg
ret
push
xor
inc
inc
pop
inc
jmp
insb
fldenv
jae
fstl
mov
inc
and
or
roll
jbe
in
ret
std
imul
push
pop
cmp
mov
sbb
push
dec
incl
mov
in
arpl
adc
enter
xor
adc
pop
mov
or
pop
inc
repnz
cmp
xor
pop
std
into
fwait
movsb
fs
pop
pushf
jp
lods
xchg
xor
mov
ja
insl
pushf
xchg
cli
and
lods
xchg
pop
xorb
xlat
cmpsb
adc
pop
xor
pop
sub
ds
mov
dec
dec
sub
add
je
pop
dec
dec
push
lods
add
sbb
loope
ljmp
and
cmpsl
repnz
pusha
pop
push
push
xor
loopne
aam
and
addr16
dec
xchg
ret
movsl
jns
dec
sub
push
or
sub
out
sub
in
sub
sub
jge
test
pop
push
xor
int
xor
adc
xchg
cmp
mov
je
xor
fwait
jg
loopne
leave
in
xor
cs
aas
call
inc
and
call
or
cmpsl
mov
cmc
jbe
sbb
in
arpl
ss
push
shl
repz
jmp
fisubrs
adc
mov
jb
movsl
rcll
lret
cmp
sahf
rol
mov
movsl
aam
dec
or
or
pop
add
dec
sub
aas
pop
add
es
stos
popf
mov
jne
mov
pop
adc
outsl
test
mov
fs
jne
shl
lahf
mov
mov
cli
dec
sbb
and
ret
repnz
lret
gs
sub
add
pop
js
sbb
adc
mov
enter
xor
addl
imul
cmp
pop
push
dec
fnsave
fsubs
lret
push
cmpsl
pop
jmp
mov
mov
jp
mov
mov
sub
mov
lods
insb
inc
imul
arpl
adcl
mov
push
or
scas
lods
dec
mov
ret
aaa
fistpll
data16
icebp
dec
xchg
mov
dec
mov
mov
pushl
jg
mov
and
mov
xchg
mov
mov
lahf
vxorps
jb
xor
and
iret
add
jb
pop
imul
jb
push
pop
adc
mov
lods
xchg
push
mov
repnz
cmp
inc
cmp
dec
mov
hlt
insl
mov
test
hlt
inc
aas
aaa
dec
fadds
sub
inc
sub
test
jne
jmp
sbb
mov
sub
mov
push
loopnew
cmpl
add
pushf
test
or
adc
fisubrl
jp
cwtl
xchg
push
mov
adc
mov
cmp
cwtl
push
pop
and
rcr
mov
loop
fcomi
mov
mov
popf
xor
aam
jge
pop
sbb
dec
mov
mov
mov
les
popa
popa
or
cmp
sti
sbb
xchg
cld
js
jns
pusha
and
leave
prefetch
movsb
fisttps
lods
aas
jae
xlat
call
rcr
mov
jbe
mov
pop
jnp
test
lahf
fstpt
pop
lea
sbb
into
lds
pop
sub
and
push
pop
jle
test
add
mov
cwtl
call
and
insl
or
sbb
jb
and
fidivs
mov
insb
dec
xchg
test
stc
rclb
stos
test
je
sarl
push
ret
dec
or
pop
fcomps
sub
pop
stos
mov
popf
das
outsb
aad
sub
popa
cmp
push
lret
jmp
into
sbb
pop
sbb
lods
fadd
and
mov
ret
aad
dec
pop
outsb
or
rorb
xchg
movsl
xor
mov
dec
cmpsl
xor
sbb
jmp
imul
or
adc
mov
cmc
insb
popf
gs
hlt
mov
mov
sbb
sbb
or
mov
ja
rol
out
lahf
ds
sub
mov
fisubrs
int
xchg
push
mov
push
leave
sbb
xor
fwait
or
xchg
movsb
add
scas
pop
pop
xorb
cmp
or
ja
xchg
aaa
inc
loope
xchg
xchg
mov
mov
call
add
sub
cmp
inc
rclb
outsl
jecxz
imul
xchg
cmp
mov
sub
decb
mov
out
pop
push
imul
add
fwait
nop
loopne
or
xor
push
adc
xor
push
in
adc
cmp
xor
inc
out
bound
ljmp
cwtl
fstps
xchg
das
xchg
mov
sub
nop
mov
or
lea
je
jo
lret
push
imul
or
outsb
sub
xchg
jle
push
cltd
or
cmc
mov
cmp
sub
mov
mov
scas
inc
cmp
add
sub
int
mov
sarb
inc
test
jo
push
rcrb
mov
lock
mov
out
xchg
pop
pusha
jnp
push
dec
mov
jbe
loop
daa
mov
mov
or
adc
movsl
xchg
aas
adc
incl
mov
mov
mov
adc
cmp
mov
bound
nop
enter
ljmp
addb
xor
mulb
pop
jge
and
jmp
xchg
xor
out
pusha
andl
push
push
mov
mov
dec
fdivrs
mov
es
pop
mov
jecxz
fiadds
add
jns
xchg
dec
mov
repnz
cld
mov
scas
lods
ds
sbb
orl
aaa
jns
push
jb
push
jmp
sub
xchg
sahf
dec
push
dec
pop
mov
fiaddl
jmp
cmc
cmp
mov
shlb
mov
lds
pop
xchg
jge
jge
mov
mov
xchg
xchg
cltd
daa
adc
adc
adc
sbb
adc
test
iret
dec
fldl
insb
or
scas
xor
pslld
lret
pop
in
jns
xchg
daa
xchg
fstpt
xlat
ss
jb
and
mov
pushf
repz
les
mov
ja,pt
stos
jns
push
xchg
fnstenv
pop
or
sti
and
mov
mov
das
out
xor
shll
insb
pop
push
fsubrl
mov
cs
cwtl
sub
cli
jns
mov
add
jo
and
sub
rolb
pop
insl
es
inc
cmpl
stos
out
xchg
xchg
nop
ret
adc
scas
dec
adc
sub
jge
cmp
gs
push
out
sbb
pop
jg
in
dec
push
pop
mov
sti
xor
cmp
inc
pusha
bound
je
clc
ds
cwtl
xor
xchg
adc
jnp
cs
dec
lret
xlat
push
pop
shlb
push
mov
inc
scas
je
ret
fstps
jg
adc
cli
mov
xchg
xchg
push
jb
mov
add
push
cmp
add
push
adc
and
in
test
inc
aam
ret
nop
mov
negl
cmovnp
inc
xor
lds
loope
cli
inc
lock
pusha
or
orl
xchg
mov
pop
stos
inc
xor
mulb
xlat
or
cmc
sub
movsb
jbe
idiv
pop
fisubl
inc
outsb
dec
js
loopne
pushf
inc
in
dec
push
add
orb
jb
sbb
dec
mov
movsb
inc
mov
insl
testb
addr16
mov
push
push
adc
fadds
jo
xor
sub
jns
jbe
or
hlt
test
fwait
jno
scas
in
push
inc
std
in
sbbb
xor
je
negb
test
ljmp
push
xor
sbbl
fbld
or
sub
sarl
ja
scas
aad
push
sahf
pop
jae
inc
dec
inc
jno
xor
lods
sub
add
sub
mov
push
sbb
pop
pop
or
out
repz
jmp
mov
mov
aad
rcrl
xchg
dec
jg
sahf
cmp
jecxz
cld
pop
dec
add
dec
add
pop
pop
mov
inc
jo
stc
mov
andl
lods
hlt
sub
dec
pop
and
test
fistps
mov
mov
push
sub
fsubl
adc
push
mov
inc
data16
mov
jecxz
insl
jecxz
add
inc
popa
or
psubusw
lds
push
jae
xlat
sub
fisubrs
dec
push
cmp
inc
sub
adc
jbe
dec
mov
testb
iret
xor
push
xor
mov
imul
add
shll
repnz
xchg
dec
out
aaa
mov
cmp
in
outsb
mov
push
pop
or
ja
inc
add
cs
cmpsl
pop
cmpsb
faddl
lds
outsb
mov
cmp
inc
jmp
int3
jl
jge
lods
dec
stos
mov
lods
xchg
add
sbb
cmp
cmp
movl
int
cmpsl
leave
dec
jg
lret
fdivs
fnsave
add
aas
mov
mov
ljmp
jecxz
push
popf
sbb
loop
andb
inc
adc
mov
push
dec
loopne
cmpsb
mov
enter
xor
mov
add
fsubrl
xor
sub
stos
cld
mov
mulb
pusha
iret
adc
dec
dec
ja
xchg
leave
inc
dec
xchg
sub
mov
mov
test
jecxz
inc
rorl
imul
lods
or
fwait
mov
dec
stc
cmp
mov
sub
pop
les
sarb
mov
jle
add
push
bound
dec
adcl
jno
xchg
mov
sbb
dec
jmp
jecxz
divl
repnz
inc
xorb
clc
dec
cmpsb
out
sbb
jb
add
pop
fstps
insl
sbb
shlb
mov
jmp
xchg
jecxz
test
pop
fldenv
faddp
xchg
xor
adc
out
stc
stc
and
dec
adc
push
inc
mov
fs
push
and
dec
mov
in
es
out
sub
cmpsb
ds
sbb
in
aad
push
aaa
push
into
cld
pop
test
mov
push
addr16
inc
xor
out
cs
cmp
and
scas
outsb
loop
jb
lea
push
adc
sti
aad
into
add
cmp
cmp
mov
push
popf
loop
inc
nop
scas
shl
or
ss
or
and
xchg
pop
in
xchg
add
cmpsl
cmp
out
or
mov
repz
imull
mov
loope
push
push
cli
icebp
std
cmp
jo
mov
lret
cld
mov
xchg
pop
or
cmp
xchg
jne
cmp
dec
mov
jecxz
nop
imul
divb
data16
dec
insb
adc
std
aaa
loope
sbb
out
xor
inc
movsl
rcl
pop
jns
dec
test
sub
daa
std
mov
insb
push
int3
rorb
or
pop
fstl
pop
xor
filds
fwait
sub
rclb
xor
pop
cltd
dec
movsl
xor
and
clc
adc
mov
push
or
pop
enter
jp
testb
add
mov
into
repz
push
xchg
mov
pop
in
shrl
sti
aas
mov
jge
inc
xchg
mov
mov
lods
ret
cmp
mov
adc
lock
fwait
xor
leave
sub
adc
jb
je
das
jns
pusha
push
in
inc
shll
sub
leave
repz
jecxz
adc
dec
imul
or
test
sbb
dec
repnz
mov
xor
test
cmp
or
mov
adc
jo
outsb
inc
push
test
mov
add
sub
xorb
cmpsl
jecxz
pop
and
data16
out
and
nop
pop
inc
xchg
loop
mov
fcmovnu
sbb
jmp
ljmp
imul
icebp
add
mov
scas
icebp
ret
ja
push
jb
fisttps
test
hlt
nop
cmp
insl
mov
adc
lret
ss
sbb
or
cli
lds
jo
loope
push
pop
movsl
dec
jno
insl
pushf
pop
loopne
add
sub
loopne
sbb
mov
cmp
sbb
mov
je
mov
mov
mov
mov
mov
inc
jl
dec
iret
push
icebp
jge
rclb
js
test
dec
pusha
xor
orb
lds
ficomps
inc
es
xchg
movsl
aam
jmp
es
cmpsl
mov
leave
mov
adc
pop
xchg
jae
cmpw
jae
arpl
jle
aam
adc
dec
or
jae
adc
test
lods
int
and
jae
jmp
stc
inc
jns
push
lret
nop
lods
cmp
out
movsl
insl
test
mov
cwtl
adc
pop
mov
jecxz
xlat
jmp
and
and
fistps
mov
and
jmp
in
test
mov
mov
dec
sbb
pop
adc
scas
movsl
sbbb
fldl
sbb
sub
dec
mov
lret
jl
es
xor
add
shll
into
jg
pushf
or
mov
out
cmp
pop
pushf
aas
adc
push
pop
pop
dec
sub
sub
lock
jno
outsb
mov
dec
push
or
rcll
sti
xlat
loopne
shl
movb
imul
xor
std
loope
aam
std
popf
int
inc
mov
popf
lods
adcl
mov
adc
mov
sbbl
pop
hlt
jecxz
jae
leave
mov
outsl
sbb
sub
in
popa
sbb
icebp
push
inc
cwtl
outsb
push
sub
sub
nop
push
pop
in
sbb
xchg
xor
sub
rep
loop
sub
push
sub
fsts
jno
cmp
pop
popf
add
es
xchg
mov
pop
pop
mov
lcall
or
popf
lret
pop
jmp
add
sbb
cli
adc
xor
mov
cmp
fistpll
pop
mov
pop
call
pusha
pop
push
addr16
add
ret
cltd
jle
push
dec
adc
inc
insl
pop
aaa
jns
jbe
rorb
pop
adc
xor
xchg
js
xor
xchg
sub
push
jmp
pop
mov
cmp
and
cmp
test
push
add
and
xor
lods
adc
sarl
jle
stc
xchg
xor
es
aad
push
fs
xchg
or
lret
push
fistpll
loop
jnp
rorb
mov
add
adc
int
lds
mov
mov
adcl
mov
pushf
xor
fneni(8087
xchg
mov
repnz
pop
and
push
leave
add
and
pop
mov
mov
ret
in
hlt
mov
ret
test
pusha
jl
mov
gs
xor
out
out
mov
jnp
xor
adc
add
aad
push
ret
jo
les
xor
test
adc
stos
mov
cwtl
pushf
je
leavew
push
cltd
loopne
rsm
mov
mov
ja
in
sbb
xchg
in
lds
test
fiaddl
sahf
adc
imul
leave
les
pop
sub
jnp
inc
push
pop
pop
cmpsl
in
aam
fwait
xchg
mov
mov
lret
nop
sbb
jle
add
cmp
sub
mov
clc
push
mov
xchg
enter
addb
mov
ss
fidivs
cmp
sbb
adc
dec
in
or
inc
das
jp
mov
aaa
shll
dec
cmpsb
cmp
push
cmpsl
popa
cmp
dec
out
rcrl
les
leave
xchg
xchg
pop
push
movb
pop
and
push
mov
sub
push
or
mov
sub
mov
decb
inc
mov
ds
cmp
sub
jo
cld
dec
or
testl
out
iret
jb
push
pop
sti
lds
jp
inc
or
cltd
xchg
and
push
or
mov
scas
fnstcw
test
inc
jecxz
inc
clc
push
xchg
xchg
lret
adc
sub
jno
imul
jns
mov
out
and
in
fnstenv
cmpl
jge
dec
addr16
sbb
pop
xchg
fmuls
addr16
sbb
cmp
mov
dec
les
scas
fidivrl
fsubl
xchg
push
out
push
xlat
pop
jge
imul
enter
dec
or
stos
dec
mov
xor
pushl
add
adc
imulb
movsl
into
add
xor
xchg
or
loopne
lods
mov
lods
and
ret
sub
add
mov
fsubs
popw
jo
scas
cmpb
incl
and
jl
cmp
cmp
ss
iret
push
jno
add
sar
sbb
das
insb
cmp
push
outsb
lcall
hlt
clc
aad
test
mov
repnz
mov
push
xor
mov
add
gs
pop
mov
fcmovnb
add
call
jne,pt
test
xchg
xchg
or
mov
insb
fadds
dec
rcll
sbb
xor
shlb
push
and
test
add
arpl
icebp
or
sub
mov
mov
mov
stos
adc
sti
add
cmp
fisttpll
hlt
scas
imul
xchg
stc
pop
lods
out
pop
cmpsl
test
mov
mulb
shll
push
jb
mov
adc
iret
add
mov
pavgb
in
out
mov
cli
rolb
insb
jge
aam
mov
xchg
fsubr
adc
dec
popf
lock
jb
sub
push
adc
push
repz
sub
icebp
aaa
xor
pop
xchg
pop
adc
enter
call
lret
or
shr
test
cmp
xor
shlb
ds
les
xchg
ret
iret
add
dec
jmp
cwtl
or
fdiv
call
or
xor
inc
dec
inc
lock
stos
inc
jns
mov
lock
nop
loop
imul
std
ss
and
in
cmp
sub
shl
xchg
out
into
int3
xchg
mov
not
cld
cmpsl
mov
out
jnp
ja
mov
push
xchg
xlat
dec
jle
aam
pop
mov
fwait
dec
and
hlt
and
push
jb
push
inc
out
data16
out
push
xchg
sub
push
out
push
inc
shr
insl
cmp
mov
rolb
pushl
aad
jne
fnstcw
popf
fistps
mov
and
pop
fs
jl
mov
jb,pt
fwait
lods
pop
push
lahf
into
jns
dec
cs
mov
sub
dec
jle
es
add
jg
xlat
sub
pop
jnp
test
cmp
mov
pop
xchg
repz
outsl
aad
mov
scas
es
aad
push
jmp
dec
push
mov
mov
and
pusha
pushl
daa
inc
push
popf
push
jle
insb
insl
nop
push
movsb
movsb
cmp
lahf
nop
xchg
pop
loopne
mov
fdivl
xchg
and
cltd
scas
add
stos
mov
fistpl
test
mov
call
xor
mov
or
into
shlb
inc
into
test
adc
mov
add
mov
lahf
aad
sbb
bound
xchg
sbb
nop
dec
mov
and
dec
mov
data16
cmp
mov
je
jae
inc
cmp
int3
mov
cmp
cmp
xchg
scas
mov
dec
jbe
je
inc
add
inc
adc
repz
out
nop
shll
jecxz
push
imul
dec
sahf
xchg
pushf
or
mov
add
das
adc
mov
xorl
mov
jns
pusha
dec
inc
stos
dec
dec
adc
stos
add
pop
cmpsb
push
sbb
in
add
aam
xor
call
cmpsl
sbbl
xor
mov
mov
xchg
mov
cs
shl
ret
mov
xlat
cmp
mov
xor
pushf
mov
xchg
sub
sbb
add
push
imul
xchg
imull
mov
stc
mov
leave
mov
dec
arpl
cmc
xor
push
not
jmp
jne
fistpl
mov
adc
rcrb
inc
cwtl
cmpsl
jg
push
xor
sbb
out
in
mov
shll
dec
sahf
xchg
sub
jae
in
dec
mov
or
dec
sub
mov
std
scas
mov
mov
pop
dec
sahf
sbb
mov
std
or
insl
mov
mov
xchg
out
and
add
xchg
or
mov
and
dec
mov
mov
mov
outsb
aad
cmpsb
aad
fnsave
test
or
mov
xchg
sbb
xchg
ds
imul
pop
inc
cmp
push
jnp
mov
mov
fiadds
inc
pop
or
mov
pop
mov
aaa
or
in
lcall
jp
jno
cmpsl
sbb
nop
lea
hlt
xchg
jle
aad
dec
and
fldenv
jp
clc
pop
dec
xchg
mov
je
jb
jae
push
lcall
mov
pop
xor
fnsave
je
vmread
cltd
adc
adc
and
imul
test
inc
mov
imul
push
sub
add
sub
in
jmp
lock
iret
outsb
xor
andl
add
mov
pop
leave
mov
popf
jle
or
cmp
lods
fistps
aaa
and
jg
pop
mov
stc
ljmp
jns
or
inc
stc
adcl
ret
xor
leave
scas
out
imul
stos
ror
vucomiss
lock
push
jne
push
sub
loopne
xchg
xor
repnz
add
sbb
cs
leave
dec
sbb
in
xchg
push
in
cld
jle
int3
hlt
push
cmpsb
loop
rol
pop
jp
cmc
or
dec
xor
sbb
add
outsl
xchg
pop
mov
xchg
cs
popf
inc
lahf
test
movsb
mov
es
cmp
adc
add
js
fsubrp
push
imul
insl
hlt
aad
std
std
dec
dec
or
and
insb
fcoml
sahf
shll
mov
add
mov
cwtl
or
or
jns
es
fisttpl
add
xchg
push
cmp
xor
add
enter
mov
imul
movsb
shll
pop
insb
adc
xor
ljmp
mov
push
loopne
mov
ror
xchg
test
outsl
int3
mov
in
jp
outsb
iret
cmp
clc
cs
shrb
pop
aad
loopne
xchg
cmp
sti
jae
cltd
jns
in
mov
in
mull
in
pushf
or
addr16
sub
jmp
mov
les
pop
mov
mov
fs
test
mov
and
jo
and
inc
lds
das
cmp
aaa
jae
push
push
insb
sub
shll
push
lock
mov
cwtl
std
mov
fwait
int
data16
push
push
sbb
mov
addr16
lea
pop
sbb
xchg
dec
xor
ljmp
mov
push
pop
fcoml
adc
stos
xorl
insb
cli
jns
cmp
test
inc
add
inc
iret
popf
int3
loopne
imul
adc
aaa
call
insl
xchg
cmp
cltd
xor
je
push
add
lret
repz
out
pop
push
jbe
mov
insl
daa
jecxz
xchg
test
jb
subb
jnp
pop
mov
mov
inc
or
clc
testl
mov
sub
cmp
push
dec
push
lods
popf
pop
in
sub
jp
fs
cld
inc
out
inc
mov
xor
lret
ja
loopne
sbbb
mov
out
leave
imul
js
clc
xchg
popf
add
sbb
pop
pop
aas
pop
xchg
seto
adcb
js
test
lcall
arpl
mov
push
fwait
addr16
mov
or
jmp
adc
mov
jg
xor
enter
xor
loop
clc
and
sbb
adc
rorb
mov
movsl
daa
jmp
pop
test
loop
cld
push
test
mov
loopne
inc
pushf
rorl
sub
imul
xchg
sarb
mov
mov
repnz
push
inc
xor
insl
xor
sbb
les
cmp
cmp
cld
jae
dec
lahf
sbb
sub
push
sub
xchg
sub
pop
push
cmc
das
pop
sbb
stos
adc
fdivrl
dec
aad
dec
fisttps
jle
mov
xchg
adc
cmp
inc
lods
addl
lea
out
ljmp
add
sub
flds
jg
push
jae
push
outsl
call
push
test
jecxz
int3
and
sbb
test
push
faddp
icebp
int3
pop
test
int
test
pushf
xchg
xchg
fisttpll
mulb
in
nop
add
add
mov
push
dec
jae
cmpsl
dec
loope
xor
add
cli
movsl
xchg
mov
pop
and
call
jno
mov
dec
mov
mov
sub
int3
je
adc
adc
inc
add
lcall
cwtl
lretw
adc
ljmp
sbb
jle
pushf
scas
cmp
mov
fwait
inc
inc
cmp
popa
cmp
scas
ror
push
into
lock
fisubs
cwtl
push
xor
scas
leave
pop
push
dec
dec
in
sub
mov
out
pop
lods
add
mov
popf
dec
jle
movsl
mov
adc
cmp
int
aaa
lock
std
ror
popa
adc
jge
repnz
pmulhw
push
mov
cmp
enterw
lea
push
xchg
popf
xchg
loopne
cli
cli
sub
int
add
mov
jmp
nop
sahf
jae
sub
lahf
dec
or
enter
xchg
xchg
ret
sbb
xchg
rcrl
cs
sbb
mov
in
sub
push
cmc
pushf
cmp
pop
inc
or
adc
les
push
jns
pop
sub
loop
xor
push
out
sub
ret
vpsadbw
lahf
mov
bound
pop
or
cmp
scas
mov
call
in
mul
movsl
cmp
push
xor
addr16
jl
enter
jns
fs
ljmp
or
push
pop
add
aam
cmp
xchg
ds
or
add
mov
adc
inc
ret
push
ss
popa
xchg
mov
fs
pusha
pop
test
data16
ja
cli
push
data16
mov
xchg
nop
inc
add
int
testl
jb
lea
sbb
inc
fstpt
mov
movsl
addb
and
jle
push
popa
cmpsl
aam
lods
jl
lock
cmp
mov
pop
dec
pop
lcall
mov
adc
and
adc
dec
stos
pop
pop
mov
sub
mov
push
xchg
cmp
xlat
push
push
loope
popa
xor
dec
addr16
or
bound
imul
rorb
cs
sbb
fs
mov
in
push
leave
push
mov
fisttpl
adc
sub
mov
jns
insl
cmp
sub
ja
mov
add
popf
adc
xor
mov
call
xchg
sub
aam
std
jb
call
mov
xchg
sub
xlat
cmp
jno
stos
and
add
mov
xor
jp
mov
or
mov
dec
movsb
jbe
jns
mov
fbld
movsl
sbb
mov
and
sahf
adc
inc
scas
cs
je
sbb
leave
addr16
xor
push
or
jg,pn
dec
and
stos
das
fxch
mov
cmpl
test
push
mov
sbb
outsl
cmpsl
xor
mov
ljmp
jg
inc
cmp
push
mulb
sbb
imul
mov
adc
das
stos
push
sbbb
mov
pop
xor
into
mov
xlat
fldt
cs
out
testb
arpl
out
dec
sbb
cmpsl
xchg
rolb
bnd
out
ret
in
loopne
jae
out
cwtl
sti
loopne
sbb
call
das
mov
hlt
insl
dec
adc
in
decb
dec
cmp
loopne
dec
out
push
fdivr
test
push
lds
mov
xchg
xor
in
int
jecxz
inc
sahf
lret
cld
clc
arpl
imul
pop
mov
mov
dec
push
pop
cmpsl
ss
xchg
cwtl
jl
add
fwait
scas
sbb
rcll
dec
call
mov
arpl
pop
movsl
ja
cmp
das
repnz
mov
or
lret
inc
dec
test
mov
dec
and
aas
in
mov
addl
sbb
sbb
xchg
cmp
ds
daa
jp,pn
test
xchg
roll
insb
icebp
push
bound
ds
fsubrs
mov
lds
fwait
movsb
inc
rcrl
mov
loop
pop
loope
repz
or
lods
pop
mov
arpl
repz
cmc
push
dec
pop
and
rclb
mov
mov
jg
adc
stos
or
inc
xchg
adc
pop
sbb
dec
stos
imul
jb
push
sub
rorb
sar
mov
sub
into
jb
aaa
inc
jbe
add
push
popa
pop
sbb
ds
xchg
ret
stos
ret
mov
inc
pop
sbbl
int
xor
add
mov
mov
cmp
popa
push
shlb
push
pop
aad
xor
subb
mov
je
adc
cld
fildl
imul
fmul
repnz
push
scas
sub
adc
fwait
jns
mov
jg
sub
jl
stc
or
mov
pop
outsl
into
mov
dec
pop
jb
or
xor
ret
xor
push
sub
sub
push
adc
pop
cmp
lcall
push
pusha
ja
xchg
jg
inc
daa
std
mov
pop
loop
movsl
lret
adc
pop
cmpsl
inc
loope
sbb
add
jnp
sarl
lods
and
mov
xchg
sti
aad
aad
push
jae
cmc
ja
fsubrl
xchg
add
push
es
out
or
arpl
dec
mov
incb
adc
jmp
inc
mov
and
sti
jmp
mov
imul
scas
rcl
arpl
lret
mov
in
sahf
pop
sbbb
cmc
xor
stos
push
pop
mov
mov
hlt
cs
idivb
into
mov
popf
cs
aam
jno
push
lods
js
and
sub
sbb
inc
subl
push
and
push
test
xchg
shrl
cmp
sbb
push
sub
popf
mov
inc
stc
push
negb
in
rorb
push
dec
fwait
rclb
sbb
aas
adc
std
out
outsl
sbb
cmp
jne
test
add
and
test
sbb
rcrb
out
lods
add
mov
sbb
pop
out
arpl
mov
cs
mov
imul
inc
outsb
pusha
cltd
push
mov
cmp
imul
pop
icebp
ja
mov
dec
out
push
int
jle
push
xchg
sub
add
cs
ds
pop
test
add
es
fmul
imul
jnp
jg
add
mov
mov
cwtl
pop
inc
xchg
mov
imul
ud0
fstp
out
call
cmc
rcr
dec
neg
imul
popa
mov
ljmp
imul
jns
push
push
jp
mov
dec
mov
mov
jns
sbb
sbb
mov
xchg
fsubr
pop
in
sub
push
pop
jle
inc
scas
imul
xor
inc
dec
out
mov
in
repz
xchg
stc
mov
sbb
gs
iret
cmp
mov
sahf
pop
call
add
cmpsb
test
aad
insl
xor
sbb
jge
push
cli
jg
aas
outsb
lret
mov
out
mov
insb
cmp
pop
jae
xchg
push
xor
sahf
ss
dec
mov
cwtl
push
push
inc
jns
std
rcll
mov
arpl
mov
std
scas
push
xor
xchg
bound
fwait
rcll
stc
mov
fisttps
out
jl
or
ret
test
cmc
out
dec
fidivl
push
idivb
dec
aad
sti
pop
clc
sub
add
test
es
xchg
fcoms
pushf
push
in
xor
stos
xor
or
cmp
push
ret
push
xchg
loopne
arpl
decl
and
repz
popf
lahf
es
xor
adc
add
js
sbb
push
cmp
push
cwtl
test
popa
ljmp
aad
sbb
pop
or
jge
sub
out
pop
xchg
call
mov
mov
jne
and
xor
pop
jp
or
cwtl
xchg
repnz
xor
call
or
test
sbb
pop
xchg
insl
daa
and
shll
add
sbb
mov
cmc
xor
ss
mov
xor
int
xor
out
sar
add
adc
push
sarb
lods
and
imull
scas
hlt
xor
xchg
inc
flds
pop
icebp
jnp
stos
and
sbb
fadds
fmull
iret
out
dec
mov
sbb
icebp
jae
fstpt
dec
or
pop
push
dec
mov
lret
dec
aaa
jne
in
cmp
imul
lcall
and
jg
pop
pop
adc
mov
sti
fdivrl
jle
sub
lret
cli
pusha
sbb
mov
jmp
jl
cmp
add
mov
sarl
mov
test
mov
inc
out
shrb
xchg
fs
jno
cli
dec
fwait
ror
push
mov
jbe
or
jns
dec
push
pop
and
nop
sbb
inc
loop
inc
fiaddl
repnz
clc
lea
jns
sub
adc
std
loope
daa
fstl
pop
movsl
arpl
add
lret
jns
jo
dec
aas
push
ret
lds
mov
rorb
es
lret
mov
popl
dec
mov
jnp
mov
jo
aas
jmp
out
jge
pop
push
cltd
mov
and
clc
xchg
pop
sbb
fidivl
aam
insb
mov
mov
lcall
jno
jo
xor
sub
ret
shll
add
lea
push
adc
arpl
xor
mov
xchg
stc
cmpsb
andb
cmp
sahf
mov
mov
out
fwait
xchg
das
pusha
test
push
xor
xchg
push
pop
jns
or
cli
xchg
rcrb
cmp
mov
notb
int3
sub
sbb
lcall
cmc
pop
fs
outsb
sbb
std
mov
push
bound
xchg
scas
test
jae
and
mov
dec
push
xchg
mov
mov
lods
aaa
jmp
inc
cmp
sbb
cmpsl
outsl
fdivrs
lcall
push
push
pop
sbb
pop
test
ret
sahf
test
inc
cmp
int
dec
jp
sbbb
lcall
xchg
sti
sbb
push
xchg
std
outsb
and
lock
outsl
pop
shll
pop
pop
lods
insl
pop
bound
mov
ja
xlat
or
dec
daa
mov
aam
dec
ljmp
cmp
lret
cmpsl
dec
icebp
mov
push
sbb
stc
fisttps
out
stc
loop
push
scas
lahf
push
add
shll
mov
js
pop
sar
jle
pop
es
jg
sbb
pop
jo
js
add
pop
xchg
imul
xor
ret
sub
push
inc
mov
sti
les
fstps
mov
inc
ljmp
gs
loopne
push
lea
cmp
push
shll
mov
sbb
das
fdivrp
data16
push
mov
paddd
or
and
pop
cmp
imul
push
andl
ret
xchg
sub
jmp
mov
xchg
test
xchg
inc
sbbb
aaa
push
sbb
xor
jb
pop
mov
out
pop
push
movsb
xchg
lods
adc
addb
fcoml
mov
mov
sbb
lods
push
adc
xor
push
test
add
dec
cmp
mov
adc
cli
addr16
push
das
imul
int
in
mov
imul
insl
cs
jne
pop
jp
and
pop
mov
add
fucom
mov
xor
shll
ss
je
loope
add
sub
adc
test
lock
addl
insb
test
sti
dec
jno
pushf
inc
mov
mov
sub
shlb
loopne
add
push
mov
jnp
sti
mov
popa
clc
in
mov
mov
fldl
int3
jp
aaa
jmp
pop
stos
pop
cli
lahf
ret
cmp
out
pop
jnp
sub
mov
mov
jg
mov
rcll
iret
daa
idivl
push
imul
cld
out
arpl
in
out
mov
sahf
cli
inc
xchg
in
notb
push
sarl
int
or
dec
cli
cltd
push
gs
lods
xchg
loop
imul
push
mov
fs
scas
orl
jle
testb
push
and
cmpsl
cltd
xor
ljmp
or
inc
pop
int
cmp
jge
sarl
cmp
and
inc
ljmp
lock
icebp
jmp
lahf
xchg
sub
ret
mov
inc
aas
shll
js
jnp
mov
movsl
or
mov
ds
inc
sub
or
out
jmp
cmp
inc
loop
jp
jl
mov
pop
icebp
popf
add
mov
dec
cmp
pusha
xchg
sub
mov
stos
or
in
sbb
sub
mov
lret
cs
outsl
ljmp
jecxz
inc
sbb
je
cmp
cli
mov
popa
scas
xor
dec
ja
outsb
sbb
adc
xchg
dec
push
outsb
dec
out
loop
adc
xchg
popa
mov
or
xchg
push
in
das
mov
in
mov
mov
loop
mov
mov
enter
fadds
mov
sbb
jecxz
jge
xor
mov
fdivrs
in
xchg
xchg
mul
dec
subb
cmp
inc
push
xor
ja
clc
shll
jl
pop
hlt
pop
fisttps
ret
cmp
je
pop
cmp
fnsave
ljmp
adc
cmp
xlat
sbb
sbb
mov
js
outsl
icebp
and
jecxz
jecxz
stos
adc
pop
xchg
dec
leave
dec
fidivrl
out
and
push
inc
mov
stos
xchg
movsb
add
test
out
pop
fdivs
xor
pop
push
dec
adc
imull
das
jbe
pop
pop
xchg
sub
xchg
ss
lock
dec
setno
popf
mov
jae
insl
mov
cmp
sub
mov
pop
or
and
ffree
leave
pop
stos
add
mov
popl
pop
mov
push
lea
cs
ljmp
clc
xchg
cmp
mov
cltd
icebp
aad
frstor
leave
xor
adc
mov
jmp
jl
aas
fxch
push
adc
mov
xchg
or
jmp
stos
pusha
sbbb
aad
into
les
in
insb
ret
adc
push
pop
fiaddl
shlb
std
enter
roll
pop
mov
dec
scas
pushf
add
jp
and
sahf
es
ds
aaa
jno
pop
addr16
gs
xor
mov
aad
out
out
pop
pop
dec
out
sub
cli
imul
push
je
outsl
xchg
addl
arpl
xchg
pop
jmp
test
ja
xor
loope
jge
cmp
int
mov
aad
pop
jle
jmp
add
jp
jp
inc
dec
out
fstpt
es
push
iret
or
movsl
movsl
mov
xor
sti
adc
dec
inc
sbb
pusha
push
out
inc
xor
xchg
pop
loopne
push
out
adc
lret
adc
clc
fcomi
pop
cmp
jo
mov
inc
stos
inc
or
cli
pop
xchg
cs
sbbb
mov
adc
mov
movsl
lods
lcall
add
sub
sbb
dec
gs
dec
sbb
dec
imul
lret
fs
jl
push
shrl
pop
mov
mov
pusha
sub
mov
into
or
enter
ja
rcr
lahf
mov
xchg
test
xchg
in
pop
add
cmp
icebp
jb
es
pop
xchg
add
inc
jne
fisubl
mov
adc
aaa
mov
rcll
xchg
xchg
sub
int3
and
add
mov
sbb
push
lret
jmp
leave
inc
fisubrs
cli
cltd
in
aam
outsb
out
popa
pop
add
dec
cmp
mov
pop
push
mov
add
insl
sbb
cmp
jl
icebp
xchg
dec
push
cmc
mov
mov
cmc
adc
movsb
sbb
sbb
jo
insb
leave
outsl
jecxz
sti
mov
lcall
ret
jns
outsl
mov
push
jne
xchg
sbb
adc
mov
int3
int3
xchg
and
jo
daa
lock
inc
jns
addr16
push
and
mov
inc
mov
mov
sti
cmp
jae
cmp
push
sti
rclb
and
sub
aas
addr16
cs
and
jl
pushf
andps
jbe
and
hlt
cmp
add
adc
int3
mov
add
xor
xor
decl
arpl
sub
jns
adc
and
add
sbbl
gs
fucomip
lcall
inc
pop
jg
arpl
lret
jnp
jb
xor
clc
xchg
nop
pop
mov
adc
xor
imull
aam
bound
lret
mov
daa
mov
test
mov
cmp
inc
call
push
mov
pop
into
push
mov
dec
sub
pop
jae
mov
jge
inc
add
outsb
aas
stc
fstl
xor
jecxz
repnz
and
int3
lahf
pop
in
mov
test
dec
add
fdivrp
fnstcw
inc
inc
cmpsl
xchg
std
ret
shr
or
fldl
inc
ss
add
aas
out
jmp
outsb
hlt
fwait
loopne
xorb
jb
hlt
lret
aam
mov
das
xor
jp
sbbb
movsl
xchg
push
adc
pop
ret
fcomi
mov
adc
jmp
and
lea
bound
xchg
dec
inc
shll
int
jno
fstpl
mov
jne
lret
popf
inc
insl
and
sub
pop
jmp
daa
loope
in
fxch
or
jns
pop
add
jnp
add
mov
xchg
es
data16
inc
pop
out
mov
lret
cmp
jmp
jle
or
lods
data16
inc
mov
cmp
pusha
ror
xchg
cmp
cli
adc
insl
xchg
mov
mov
cwtl
pop
pop
scas
and
incl
testl
sbb
inc
out
cwtl
jp
insl
testl
or
jecxz
fisttps
dec
push
xor
inc
mov
sti
mov
mov
shl
lahf
sub
push
jecxz
fwait
bound
xchg
fdivrs
iret
call
sub
adc
leave
pop
push
cli
mov
scas
lahf
dec
inc
sub
je
cli
and
inc
dec
xor
fistpl
xchg
out
fldt
int
mov
push
add
mov
notb
fcom
loop
mov
movsl
jb
fdivr
fcompl
pop
add
ljmp
daa
stc
jl
mov
mov
fptan
mov
int
imul
cmpl
les
add
lea
mov
addr16
sub
jbe
push
lods
mov
aaa
pop
pop
scas
cs
ljmp
lcall
push
sbb
ret
lcall
scas
mov
push
dec
adc
into
xchg
aam
mov
mov
dec
or
out
mov
aaa
push
frstor
leave
es
outsb
movsl
and
andl
sahf
inc
or
cld
and
or
dec
sub
rcr
cs
out
lods
lods
lock
fsubs
sub
jnp
aaa
fnstenv
cmp
mov
mov
and
enter
sub
fidivs
fisubl
in
clc
mov
notl
mov
mov
xor
cltd
mov
push
pop
xchg
pop
xchg
sbb
nop
mov
rorl
mov
inc
jno
push
lock
xchg
jnp
loope
or
mov
test
cmp
push
cmpsb
add
iret
lods
dec
or
addr16
sbb
stc
movsb
pop
dec
push
insl
mull
dec
mov
and
dec
cmp
jae
mov
inc
ljmp
out
jg
shlb
or
repz
sub
jecxz
and
mov
adc
push
sub
jo
push
jge
sbb
dec
adcl
lcall
pop
sbb
jnp
or
inc
xchg
adc
dec
xchg
pop
pop
cmp
and
dec
insl
cs
or
repz
mov
pusha
inc
xor
enter
or
cmp
pop
jno
jmp
mov
sbb
push
adc
adc
mov
cmp
mov
mov
ret
in
sbb
sub
inc
cltd
mov
pusha
jno
push
into
mov
movsl
xchg
mov
mov
ljmp
jp
lods
jp
cli
out
sarb
mov
jae
ja
adc
in
mov
out
mov
jmp
ret
loope
mov
sub
or
stos
cmp
xor
cmp
lods
cmp
outsl
sub
xor
push
xchg
imul
scas
das
xchg
push
es
je
loope
xchg
cwtl
dec
shll
cld
sbb
gs
sbb
mov
xchg
insb
ds
dec
cmpsl
pop
xchg
lods
inc
and
gs
and
test
adc
data16
sqrtps
push
pop
jns
add
rcr
lahf
iret
pop
xlat
xchg
and
scas
cmp
in
cltd
mov
addr16
jle
lock
sbb
ret
xchg
sbb
test
fstps
push
and
cmp
jo
in
and
push
test
clc
aad
nop
imull
or
sub
dec
sub
adc
add
dec
fstps
cld
push
iret
mov
ret
loope
rcll
adc
jbe
movsl
fadds
add
xor
mov
push
mov
pop
stos
cwtl
adc
sbb
adc
aad
adc
cwtl
fcomps
setb
rolb
mov
adc
daa
or
push
push
mov
ds
daa
sub
jnp
subb
pop
in
fsubr
push
mov
cmp
insb
in
ds
call
pop
add
sbb
jbe
fidivrl
mov
call
and
gs
in
insl
mov
and
xor
dec
insb
jo
js
cmp
jo
jge
mov
cli
dec
jnp
mov
out
push
mov
lret
lock
pop
push
cmp
or
lcall
push
lcall
andb
dec
shlb
sub
pop
iret
push
push
jo
xchg
mov
icebp
fimull
mov
in
incl
sbb
lods
jnp
lret
rolb
in
xchg
dec
jmp
dec
sti
aam
jl
xor
xchg
test
add
les
mov
inc
pop
pop
dec
testb
test
cwtl
cwtl
sar
out
mov
bt
vhsubps
mov
jecxz
sub
dec
aam
add
inc
jne
divb
and
mov
adc
insl
jne
cwtl
test
inc
ret
adcb
daa
xchg
icebp
sub
scas
test
stc
mov
adc
repnz
psubsb
fwait
mov
dec
outsl
scas
jl
add
jne
leave
imul
mov
xor
jb
jmp
pop
xchg
enter
mov
mov
inc
sbb
std
mov
imul
fstps
adc
xor
jb
push
shll
and
in
popa
jl
push
bsr
out
sbb
xor
in
leave
mov
lods
gs
mov
jne
shl
xchg
ficompl
aas
push
mov
pop
std
hsubps
mov
sbb
sbb
xchg
jbe
xchg
xor
jno
int3
xchg
xchg
pop
pop
adc
jo
int3
rep
shll
imul
push
mov
popf
loop
test
xchg
cmc
out
cmc
out
pop
lds
insb
mov
into
in
insl
lods
lea
jle
aas
out
addb
adc
mov
or
cld
pushl
arpl
imul
push
loopne
xchg
fdivp
out
xchg
add
lret
or
fbstp
xor
jbe
int3
mov
loopne
ret
int
sbb
mov
ja
loope
add
pop
xchg
cmp
sbb
enter
in
jb
addl
loopne
xchg
and
mov
adc
fisubl
jge
xchg
jae
lods
pop
adc
shl
fs
inc
and
int3
sub
out
into
xchg
xor
cmp
subb
inc
out
mov
sbb
jb
adc
mov
insl
setl
out
scas
dec
jnp
pop
push
jbe
lds
jbe
cli
pushf
adc
and
into
mov
inc
adc
incl
add
jnp
dec
in
jns
and
sub
aas
loop
jne
jge
repz
outsb
mov
dec
outsl
fisubrs
mov
mov
xchg
punpcklwd
push
push
add
push
dec
dec
inc
movsl
loopne
pushf
inc
cli
jmp
mov
cltd
popa
into
and
mov
jmp
lea
in
and
shrl
leave
sbb
push
mov
iret
sahf
lea
popa
and
dec
jo
mov
xchg
bound
arpl
add
test
mov
jnp
inc
cmpsl
sub
cmp
sub
mov
ss
loope
inc
sub
sub
in
dec
dec
inc
adc
jb
jl
cmp
sbb
push
adc
dec
mov
fstpl
and
xor
loop
bound
scas
out
xchg
adc
inc
out
cmp
popa
scas
fwait
jb
xchg
arpl
and
jmp
xor
cmp
loope
test
hlt
inc
fidivs
mov
pop
scas
adc
push
std
cld
cwtl
out
add
inc
cmpsb
inc
add
mov
jae
and
or
hlt
sub
into
dec
push
mov
xchg
daa
lds
push
mov
jmp
sar
or
push
in
es
cwtl
sub
cli
imul
add
fidivrl
pop
dec
fs
movsl
xor
xchg
insb
inc
mov
add
sbb
test
sbb
push
sbb
mov
push
pop
shrb
push
subb
clc
cli
xchg
imul
inc
ret
dec
or
xor
out
jg
outsb
das
push
jp
dec
scas
into
inc
inc
jno
jbe
mov
repz
adc
dec
xor
jl
ret
cmp
test
and
mov
mov
repz
add
movsl
lcall
mov
imul
repnz
call
push
imul
fadds
leave
mov
hlt
scas
jae
lods
push
or
jbe
scas
lods
js
jmp
and
fwait
mov
je
jno
xorl
cltd
pop
xorl
xor
jecxz
imul
xor
mov
aad
xchg
in
push
mov
adc
or
inc
inc
adc
pop
popf
and
xchg
leave
cltd
push
xchg
sub
sbb
fwait
add
sub
add
shrb
jno
pop
jnp
push
push
jb
and
outsb
fdivrs
stc
jnp
mov
cmp
sub
shll
jno
lods
sub
mov
inc
xor
cltd
gs
movsb
sbb
and
adc
ja
sbb
iret
test
sbb
inc
mov
sub
loopne
fisttpl
icebp
or
jne
outsb
mov
out
cmp
fucom
add
pop
das
fidivl
xorl
dec
and
or
xchg
data16
lret
cmpsl
rcll
pop
dec
mov
pop
dec
inc
jnp
inc
jbe
fcomps
push
fsts
lds
arpl
mull
push
mov
xchg
jg
das
lods
push
out
mov
cmpsb
xchg
push
in
ja
push
lea
cli
movsl
add
ja
das
repnz
pop
lods
popf
dec
xchg
xchg
je
shl
pop
mov
fmuls
std
fisubrs
iret
mov
mov
push
sub
mov
xchg
inc
sub
jmp
xchg
cmc
mov
inc
and
sbb
imul
arpl
pop
std
xor
xor
outsl
stc
mov
in
ret
lret
sbb
dec
dec
push
xor
imul
lret
push
cmp
sub
push
hlt
js
adcl
loope
mov
ja
dec
add
dec
cmp
jp
popf
xor
cwtl
adc
jne
push
cs
hlt
mov
mov
les
xor
imul
insb
das
jno
test
arpl
ret
out
sbb
fstpl
pop
inc
imul
sub
xor
in
mov
dec
cwtl
lahf
or
ljmp
mov
out
mov
adc
push
mov
cmc
bound
pop
lahf
mov
xor
mov
fiaddl
add
lret
jecxz
jecxz
adc
fcom
sbb
aas
out
xchg
or
dec
inc
mov
fsubr
adc
dec
andb
cmp
push
sbb
pop
sub
lea
stos
mov
jmp
shlb
mov
repz
mov
or
cmp
and
mov
lock
int3
ret
jns
sbb
mov
or
add
mov
mov
or
cs
in
iret
inc
push
sbb
outsl
add
es
outsb
insb
aas
mov
dec
fbld
arpl
pop
push
cmc
jp
xchg
push
arpl
fstps
dec
stos
cltd
lods
pop
repz
xor
scas
out
dec
and
sbb
popa
pop
push
mov
and
iret
fildll
xorb
xor
push
outsb
test
xor
mov
or
orb
sbb
cmp
dec
rcr
push
aad
jg
rcrl
adc
fcmovbe
mov
faddl
div
rdtsc
mov
inc
lahf
sbb
mov
and
ja
dec
scas
pushf
mov
mov
out
adc
inc
mov
ds
pop
inc
jle
and
icebp
pop
add
es
dec
cs
inc
cli
das
fimuls
lret
dec
and
test
negl
cs
mov
and
fdivs
out
sbb
pop
jno
mov
stc
ret
mov
jno
xchg
jb
mov
mov
lods
add
and
loop
out
js
fstp
inc
inc
loope
std
pop
scas
xor
or
push
leave
push
adc
lods
sub
xchg
mov
jns
inc
into
push
push
push
out
xchg
sbb
in
dec
stc
lahf
cmp
mov
push
add
aam
jecxz
jmp
or
cmp
outsb
or
xchg
add
add
mov
cmp
clc
js
pop
push
mov
xorl
out
push
mov
les
cltd
or
mov
cmp
ficoms
and
lock
dec
incl
and
outsb
adc
push
push
xchg
testb
dec
push
inc
push
rorb
call
in
pop
push
ja
xor
sti
mov
std
cmp
xchg
cmp
shl
repz
pushf
out
jne
rolb
add
sbb
cld
enter
adcb
xchg
lock
repz
jecxz
xor
dec
lret
hlt
fs
add
js
jo
pop
outsl
pop
adc
push
int3
gs
mov
out
add
xchg
and
xchg
adc
xor
out
lcall
lcall
lds
adc
movsl
inc
and
sub
out
into
jb
push
fcom
repnz
mov
pop
test
dec
subb
add
mov
add
out
mov
mov
ret
cltd
xlat
dec
aaa
push
jb
jnp
idivl
fwait
mov
sbb
adc
or
inc
jb
insb
jmp
sub
jne
jg
loope
cmc
mov
mov
push
orb
pop
pop
sub
dec
std
fsts
add
pop
fnstenv
jnp
and
dec
pusha
mov
jmp
jb
mov
loope
or
inc
rclb
subps
js
inc
cmpsl
iret
popf
outsb
orl
push
lods
jb
and
jmp
pusha
adc
ffree
mov
mov
ss
sub
outsl
movaps
daa
xor
mov
in
sub
pop
xlat
fbld
pop
mov
jecxz
push
jmp
sbb
push
addb
mov
hlt
icebp
adc
mov
jae
jae
sarb
sbb
jecxz
xchg
pop
clc
das
cmp
imul
sub
out
cmc
and
mov
mov
xchg
inc
fwait
sti
inc
addr16
ss
or
leave
mov
inc
mov
adc
xor
test
cmpsb
and
enter
ffreep
fwait
push
es
in
mov
lret
shlb
outsl
mov
sub
jb
sub
jae
adc
dec
inc
pushf
lea
sbb
cmp
jle
cwtl
mov
inc
push
jp
popa
xchg
cli
push
pop
xchg
add
add
pushl
cmpsl
orl
adc
cmp
cmpl
push
cli
insb
push
rclb
clc
dec
pop
dec
push
sub
jmp
into
mov
pusha
fbstp
outsl
jge
fdivl
faddl
dec
movsl
cltd
popa
std
lahf
test
mov
xchg
mov
add
push
int
pusha
or
mov
sbb
pop
faddp
cltd
mov
arpl
gs
sbb
fcompl
iret
jp
test
inc
sahf
stos
lcall
push
in
out
sub
in
pslld
sbb
cmp
aas
xchg
orl
stos
rcll
and
stc
shll
inc
dec
jmp
bound
imul
dec
mov
gs
into
xorl
mov
testb
imul
les
jbe
ljmp
push
pop
loopne
push
cmp
stos
cmpsl
fxch
das
out
movsb
gs
mov
div
xor
lret
pop
lret
iret
add
dec
pushf
filds
mov
pop
lret
dec
jo
dec
cmpsl
repnz
cmp
push
ljmp
das
mov
adc
mov
jmp
mov
in
stos
jns
xor
movsb
pop
sub
cmp
stos
push
add
mov
dec
mov
test
fnsave
addr16
daa
mov
adc
ror
dec
cmp
inc
sub
shll
sahf
cs
sub
je
jbe
push
cmp
jns
fimull
and
sahf
lahf
jmp
mov
and
hlt
xor
mov
lods
or
pcmpgtd
mov
imul
rcl
inc
push
push
imul
jnp
inc
mov
enter
adc
subl
pop
xor
into
sub
sub
in
pop
ret
and
and
gs
es
insb
mov
or
mov
outsl
inc
cmpsl
je
test
mov
mov
jo
into
cwtl
dec
js
xchg
dec
imul
mov
repz
cmp
test
adc
stos
arpl
in
and
inc
lock
rolb
and
jg
jns
xchg
rorl
mull
out
mov
sub
flds
jl
inc
mov
adc
mov
jmp
imul
xor
pop
cli
adcl
xor
in
outsb
daa
jl
lret
fsts
sarl
or
aam
add
test
mov
loopne
hlt
jg
and
insl
inc
and
dec
rcrl
mov
xchg
sub
in
pop
dec
pushf
pop
dec
mov
push
test
es
shrl
fs
adc
cwtl
mov
enter
dec
xor
mov
sbb
pusha
test
scas
dec
mov
sahf
add
lea
out
jbe
pop
and
and
or
arpl
enter
cmc
cmp
insl
lds
pushf
jbe
sbb
cwtl
dec
cmpsb
pusha
jns
and
jle
adcb
stos
ret
or
outsb
jbe
xchg
cmp
pop
or
fimull
xor
mov
mov
xchg
push
mov
aas
negb
fnop
data16
sub
lock
mov
xchg
cmp
xor
movsb
insb
push
cld
leave
xchg
jmp
pop
out
fisubl
leave
fidivrs
ds
repnz
xor
push
repnz
gs
cmpsb
sub
and
mov
push
out
sub
pop
or
sub
jns
pop
in
mov
lods
loope
sahf
jmp
popa
test
xchg
mov
dec
mov
leave
jns
insl
into
sti
test
jmp
cmpsb
cmc
aam
jmp
stc
out
flds
js
loope
cltd
rcl
lods
and
xor
or
pop
outsl
jge
jl
hlt
mov
fistl
pop
insl
and
leave
push
add
sub
clc
sbb
add
sub
loop
inc
mov
mov
call
dec
loope
scas
mov
mov
adc
and
and
lahf
out
out
jg
mov
push
imul
scas
sub
mov
and
mov
cld
ds
stos
fld1
mov
and
repnz
repnz
jl
ds
cli
js
nop
dec
insl
int3
pushf
or
mov
cmc
push
xor
movsl
inc
inc
scas
sbb
cmpsl
lods
sub
jg
jb
xlat
lods
or
std
sub
push
push
cld
andl
addb
data16
fmul
shl
mov
jnp
in
sub
jns
lea
outsb
cwtl
xchg
out
and
fidivl
addr16
sub
cli
imul
lahf
repz
mov
cmp
cmp
icebp
movsb
ds
sub
push
cmp
mov
lock
dec
pop
dec
push
pop
cmp
jns
std
loope
cmp
cmp
je
es
push
dec
mov
inc
and
mov
out
and
and
inc
lds
loopne
xor
rcrl
es
adc
cmp
jg
push
popa
repnz
dec
std
sbb
pop
add
in
arpl
mov
add
xchg
push
xchg
lret
aas
daa
ja
mov
pop
lahf
cs
mov
cmp
jp
loope
call
mov
push
mov
clc
rorb
cmpsb
cli
inc
push
addr16
xchg
add
cmpsb
insl
loop
adc
outsl
jp
cmc
jle
mov
inc
inc
jno
jmp
inc
outsl
xchg
lea
push
cwtl
stos
enter
jmp
pop
out
dec
mov
add
jle
dec
mov
shll
xor
rorb
sbb
mov
mov
orb
fidivl
and
movsl
nop
stos
aam
mov
out
aaa
cmp
adc
adc
xor
bound
es
push
sub
es
add
loope
pop
mov
in
mov
cmp
pop
popf
inc
jno
ss
jecxz
stos
inc
ret
xor
pop
stc
sbb
mov
test
xchg
lds
hlt
inc
pop
dec
mov
cmc
fsubr
cs
scas
rolb
test
sub
aad
ja
pop
push
cmc
in
dec
das
cmc
loop
ror
dec
sub
mov
jle
mov
jmp
pop
inc
in
cwtl
add
dec
cwtl
push
pusha
ds
xchg
cmpl
dec
mov
pop
sarb
loopne
pop
mov
mov
pop
cs
imul
push
jns
stos
or
in
inc
nop
enter
and
push
mov
sub
add
push
xor
add
stc
xchg
pop
jmp
out
cmpsb
xor
icebp
add
je
pop
and
xchg
cmp
call
and
push
xchg
out
push
fistpll
repz
call
mov
fidivrl
rcll
in
add
or
inc
xchg
cwtl
pop
mov
inc
push
cmp
mov
mov
push
into
out
and
cmpsb
push
insb
adcl
or
mov
ljmp
andb
xor
aam
out
cmp
mov
jo
xchg
dec
dec
mov
rorl
inc
je
xor
fstl
into
mov
inc
lret
and
and
mov
inc
adc
out
fwait
add
movsb
push
sbb
int3
xchg
mov
mov
or
add
aas
loope
mov
push
sbb
cmc
leave
cld
lret
jl
fcom
dec
test
sbb
add
jp
loop
push
cmp
shl
mov
std
repz
sub
adc
hlt
ss
sub
xor
jmp
adc
ljmp
enter
hlt
loopne
or
xchg
sbbb
dec
ret
adc
arpl
inc
div
sbb
mov
imul
ficoml
js
jne
andl
rorb
mov
out
or
aas
push
in
or
les
lret
mov
xor
mov
frstor
es
popf
sahf
stos
repnz
mov
das
push
or
or
mov
xor
ljmp
mov
arpl
xor
or
or
scas
stc
inc
je
subb
mov
lcall
imul
sahf
jecxz
add
adc
gs
mov
insb
in
les
daa
add
nop
lods
adc
icebp
push
es
mov
cmp
lret
xor
jg
imull
xchg
incb
icebp
shlb
pop
fbld
iret
aad
mov
push
xlat
imul
lock
fcompl
mul
leave
and
inc
dec
imul
adc
stc
cmpsb
push
xchg
pop
pop
sub
mov
pop
cs
cs
aam
lods
dec
pop
pop
dec
sbb
cltd
shl
test
sbb
inc
pop
jne
imul
mov
jmp
pop
ror
adc
jp
in
xor
shlb
or
xor
mov
add
stc
mov
jp
popa
jge
jnp
idiv
cmpb
add
sti
mov
aad
jl
andb
js
xorl
stc
sub
in
xor
int3
mov
mov
and
xor
mov
popf
ror
enter
popf
lret
out
mov
cmp
pop
push
add
mov
mov
xor
sbb
adc
imul
jmp
lds
stos
adc
ret
fwait
or
sub
pop
repnz
stc
cmp
fisttpll
fmuls
push
sbb
inc
sub
out
push
mov
or
clc
ss
pop
in
int3
xor
xchg
fildll
and
das
idivb
mov
push
ret
inc
out
cli
nop
test
jne
cwtl
stos
jne
pop
mov
popf
push
lret
xor
dec
shr
mov
sub
dec
in
xor
xor
xchg
lea
pop
xor
repnz
xchg
out
cmp
das
mov
cmp
add
push
aas
lret
mov
mov
aad
pop
or
xor
cmp
fiaddl
pop
mov
rorl
mov
push
push
pop
mov
add
xchg
cmpsb
fisttps
mov
sbb
inc
xor
int3
add
jle
pop
mov
pop
sub
xor
xchg
bound
aaa
dec
or
test
mov
mov
push
mov
outsl
les
cwtl
jb
and
test
mov
enter
popa
and
loop
stc
jnp
mov
out
and
xor
sbb
jno
mov
and
or
loope
shrb
inc
and
push
push
scas
out
xchg
loopne
sub
inc
mov
jmp
lahf
jl
sbb
cmp
sbb
inc
cmpsb
inc
pop
data16
in
pop
mov
out
cmc
repz
mov
lods
add
push
and
sahf
fst
push
jmp
or
in
orb
mov
xorb
push
adc
and
in
ljmp
push
add
adc
adc
jmp
xchg
mov
sub
andnps
fnstsw
fildl
cwtl
push
xor
sbb
out
imul
jb
pop
test
mov
jecxz
add
mov
cmp
clc
jne
dec
and
xor
jecxz
mov
or
cltd
mov
or
orl
hlt
cmc
push
hlt
jns
pop
clc
push
mov
imul
pop
adc
stos
scas
and
inc
outsl
ror
mov
adc
mov
icebp
and
cltd
fisttpl
pusha
and
out
mov
fcmovne
addr16
cmp
lds
push
and
movsb
xor
pop
mov
jecxz
pushf
pop
enter
outsl
push
mov
push
xor
push
fdivrl
ret
push
test
pop
push
jnp
pop
fdiv
push
or
push
push
or
je
or
xchg
cmpb
mov
jnp
mov
movsl
inc
pop
mov
xlat
addr16
jecxz
fucomip
out
test
jnp
in
or
lahf
and
daa
nop
inc
daa
mov
adc
push
ret
or
cmpb
mov
push
mov
call
adc
or
sub
adc
mov
jo
cmp
leave
out
push
fwait
orb
mov
in
nop
and
mov
outsb
out
adcb
and
xchg
out
lahf
int3
mov
push
add
shlb
gs
sbbl
int3
xor
or
pop
sub
mov
lret
call
dec
jae
js
cld
lea
orb
and
xchg
insb
dec
cmp
add
loopne
inc
and
inc
jns
loope
fwait
pop
adc
mov
insl
test
mov
fcmovne
mov
ss
std
pop
lock
xchg
test
aas
add
repz
imul
mov
outsl
incb
push
cmp
in
pop
sub
mov
cmp
mov
enter
pop
mov
fwait
lahf
fldt
lock
lods
loop
test
shrl
lret
sub
cltd
cmp
ljmp
lahf
jecxz
pushf
dec
push
repnz
test
jmp
push
push
jmp
mov
std
push
xchg
jle
lds
adc
je
clc
push
pop
add
adc
idiv
mov
cmovo
dec
mov
movsl
fmull
pop
sub
xchg
loope
arpl
and
test
inc
push
clc
and
cmpsb
inc
loope
mov
cmpsl
fisttpl
pop
testl
andl
lret
push
pop
popf
ds
cmp
mov
lock
dec
push
jbe
sbb
int3
fildll
iret
nop
iret
sbb
rorl
loopne
daa
lock
leave
and
nop
test
mov
fdivrs
xor
iret
insl
push
out
les
adc
mov
repnz
jns
xchg
addr16
adc
dec
xor
fldcw
mov
push
loopne
dec
xlat
and
adc
mov
pop
adc
sbb
adc
imul
dec
rolb
xchg
ds
jno
pop
and
outsl
dec
loope
jno
sbb
test
outsl
insl
mov
push
sarl
inc
fsts
rolb
push
push
cmc
shr
nop
ror
adc
popf
adc
xor
shlb
cmp
lods
sbb
stc
out
cs
les
xchg
roll
rol
call
leave
das
adc
lods
test
jg
xor
lret
icebp
xchg
mov
sbb
dec
sbb
cmpl
ja,pt
aaa
or
inc
or
loope
sub
cmpsb
and
mov
icebp
mov
jns
xchg
or
push
gs
sub
jp
mov
lds
sub
jle
cmp
push
xchg
idivb
fisubs
cmpsb
dec
mov
sti
mov
jns
aaa
and
repz
xor
mov
fimuls
mov
stos
xchg
js
xor
mov
sub
fnstcw
loop
jmp
jno
and
or
popf
into
inc
xor
stc
shr
jle
mov
push
in
movsb
out
or
lret
ret
push
shrl
cmp
fmulp
testb
jg
adc
stc
movl
les
data16
add
cmp
daa
lret
test
call
loop
add
in
push
push
xchg
aad
lods
ja
sbb
jbe
adc
movsb
adc
pop
mov
daa
insl
mov
sbbl
xor
add
es
test
adc
ficoms
cmpsl
pop
push
inc
pop
pop
sbb
jge
arpl
sbb
inc
or
mov
push
leave
xchg
sub
mov
add
push
test
xchg
mov
pop
test
cmp
xor
and
or
cs
sbb
test
fbstp
cmc
xor
push
push
js
mov
int3
xchg
in
in
push
lea
in
lcall
stos
push
mov
rcl
jle
cli
add
fisttpl
int3
rorl
outsl
pusha
fst
mov
stos
push
add
inc
pop
test
outsb
push
mov
mov
rolb
or
enter
int3
in
mov
stc
cmc
ja
hlt
jns
and
cmpsb
js
iret
pop
insb
xor
xchg
pop
in
mov
jb
jnp
jno
pop
loopne
clc
movsb
sbb
xor
into
push
ret
inc
push
rolb
adc
rorl
leave
push
and
in
sub
popf
pop
adc
jns
fnsave
adc
fcmovne
xchg
push
jbe
cmpsb
sub
inc
cltd
repnz
lds
sbbl
push
fists
test
dec
jecxz
xchg
jg
xor
sub
mov
xchg
jle
insb
cmpsl
xorb
fsts
add
int
mov
and
fimuls
inc
pop
push
in
fwait
cmp
cli
or
in
mov
pushf
es
pop
cld
lret
cmpsl
dec
insl
scas
xor
lfs
test
push
popa
imul
popa
sbb
stc
xchg
test
je
sub
repnz
inc
cmp
sub
xchg
adc
addr16
adc
jg
test
jle
adcb
pop
jae
les
cs
mov
dec
adc
push
imul
clc
std
cmp
nop
iret
or
sub
in
cld
sbb
fsubrl
shl
push
insl
cld
jns
rcl
inc
mov
pop
int3
hlt
sbb
sbb
sahf
mov
jp
lods
cmc
or
xchg
or
mov
cmp
jmp
push
shlb
les
jmp
cmp
xchg
jle
xchg
filds
jbe
inc
xchg
sbb
cmpsb
mov
dec
movsb
mov
lods
repz
popl
pop
lea
mov
dec
data16
mov
lea
pusha
mov
scas
mov
jne
xorb
sub
pop
mulb
insb
sbb
inc
add
call
inc
movsb
ret
and
out
sub
sahf
mov
notl
mov
cmpsb
jge
sbb
push
mov
push
mov
popl
xchg
mov
jbe
mov
add
sub
inc
movsl
inc
adc
into
cmp
sbb
pop
inc
jmp
pop
push
inc
das
in
outsl
clc
mov
xor
xor
push
add
or
cmp
mov
jge
sbb
pop
lods
cmc
push
insl
jecxz
sub
mov
into
imul
ret
filds
lcall
jle
fsubrp
adcl
and
clc
mov
sbb
int3
mov
xchg
mov
and
mov
lock
push
fnstsw
xor
clc
xlat
xor
gs
movsb
loop
pop
pushf
xchg
outsb
mov
inc
cmp
jnp
pop
cwtl
jno
mov
or
push
sub
notl
add
pop
jg
int3
push
jne
adc
dec
in
adc
movb
push
add
popa
dec
jp
add
jno
bswap
cmpsl
xchg
jbe
rcl
loope
jle
jbe
xchg
mov
jle
lock
ss
stc
mov
mov
pop
into
fwait
push
xor
or
fisubl
add
rorb
dec
inc
jns
dec
xor
add
lahf
or
adc
xchg
scas
mov
or
mov
xor
xlat
imul
rolb
sub
cwtl
mov
insl
add
out
fisttps
gs
mov
mov
jb
adc
jle
pop
fdivr
in
nop
inc
push
xor
stc
sub
in
mov
lret
js
inc
lods
push
mov
xchg
lahf
cli
ja
stos
loope
bound
ja
mov
mov
movb
leave
inc
cmp
jmp
pop
or
sub
aaa
imul
inc
push
in
lcall
xor
daa
mov
addr16
shr
frstor
ret
icebp
mov
movsb
and
cli
lods
cli
cmpsl
and
sbb
rorb
jmp
cmp
push
sub
lods
xlat
clc
pop
stos
xchg
fs
and
ret
adc
mov
subl
pushf
data16
gs
dec
sbb
xchg
notl
or
lret
scas
inc
pusha
mov
int3
repnz
sti
test
push
jle
and
adc
or
push
cltd
cld
xorl
ss
sub
cwtl
sbb
push
jno
adc
daa
loope
les
arpl
mov
call
or
and
ret
movsl
icebp
lahf
push
adc
mov
pop
push
jbe
rolb
push
mov
out
in
mov
loopne
sub
fistps
inc
rcr
mov
jp
sub
out
loopne
sub
fwait
aam
rorb
repz
icebp
outsl
into
dec
push
jmp
mov
pusha
sbb
movsl
xor
or
popa
or
rclb
mov
pop
push
mov
out
jae
or
sbb
ror
mov
sahf
pop
mov
fstps
mov
xchg
jns
lret
xchg
sub
cmp
add
dec
imul
dec
ror
cmc
or
xchg
out
pop
sti
dec
out
or
mov
pop
sbb
fsts
cmp
enter
rcrl
ret
loope
ss
popa
pop
cmpsb
xor
and
mov
lock
nop
push
std
shl
scas
aam
sahf
call
jmp
add
gs
xor
push
movsl
inc
test
dec
setnp
cmp
fstl
xor
and
jae
fwait
cmp
push
jp
mov
xchg
push
cmp
fstpl
sub
cmp
jge
testl
sub
pusha
data16
mov
pop
xlat
jnp
lods
mov
jne
das
decl
inc
inc
test
subb
decl
and
jno
or
push
push
lock
das
sbb
mov
pop
and
push
or
pop
cmp
int3
mov
add
test
jg
xchg
pop
mov
in
fsubs
ret
leave
mov
loope
dec
xor
cmp
pmuludq
and
cltd
jno
repnz
mov
cmp
movsb
lds
enter
lds
xchg
aad
jnp
dec
xchg
mov
xchg
fldcw
or
in
cwtl
sahf
je
test
sub
xor
int
or
pushf
xchg
cmp
sub
add
jge
call
sub
cmp
mov
dec
cmp
inc
mov
movsb
and
into
pop
ret
mov
mov
jmp
pop
pop
inc
xor
mov
jmp
repnz
push
scas
inc
pop
in
adc
push
scas
mov
rorl
stos
xlat
leave
je
data16
imul
mov
leave
popf
movsl
or
popf
nop
mov
jge
add
and
jmp
cmp
test
jl
push
jmp
cli
daa
sbb
cmp
mov
sbb
xor
loop
leave
cmp
jle
inc
fwait
mov
xchg
xchg
aad
pop
sbb
dec
clc
xor
mov
ret
xor
pop
mov
lret
test
cltd
cwtl
dec
dec
sbb
enter
nop
pop
mov
fisttpl
xor
ja
xchg
mov
or
imul
push
mov
sbb
test
sti
jg
add
inc
xchg
icebp
adc
stc
adc
dec
ss
ss
and
dec
je
into
cld
cld
mov
ret
gs
inc
stos
in
dec
or
pushf
outsb
xor
and
stc
mov
fisttpl
nop
jle
ret
pop
fs
fildl
orl
outsl
incl
arpl
push
fisubs
aas
cmp
dec
call
pop
outsb
fidivrl
mov
cmp
jge
stos
sahf
scas
outsl
push
scas
push
lds
mov
mov
xchg
mov
xchg
sbb
and
repnz
addr16
adcl
sub
pop
add
or
mov
jl
fmull
out
inc
pushf
xchg
mov
aaa
or
aaa
xorl
pop
cmp
cld
sub
stos
or
and
adc
mov
mov
aam
push
sbb
ljmp
xlat
pop
mulb
mov
loope
in
sbb
sbb
mov
sbb
cmpsl
iret
fwait
inc
mov
lret
dec
xor
rorl
scas
inc
mov
xchg
sub
cmp
jp
sbb
pushf
das
pop
call
test
ret
adc
ret
sbb
jp
ret
xchg
in
cltd
and
inc
push
pop
nop
xchg
mov
std
sub
pop
fwait
or
jmp
sub
inc
mov
xchg
fildll
in
rolb
sub
jb
xlat
aam
push
das
stos
fwait
aad
push
nop
iret
pop
lods
mov
scas
and
std
push
mov
jg
lahf
xor
lds
and
fimuls
pop
mov
rcll
add
xchg
aas
out
shlb
stos
test
arpl
lock
decl
je
mov
mull
jo
dec
outsl
push
out
or
loope
cmpsl
mov
or
insw
popf
dec
clc
jmp
jmp
pop
cwtl
pop
pop
out
pop
lock
push
xor
icebp
lahf
dec
xor
lret
sbb
inc
push
pop
jb
push
fdivs
mov
dec
popa
push
jb
clc
iret
sbb
add
and
cltd
sbb
fistpll
lret
push
push
dec
jne
iret
mov
mov
incb
mov
lock
ljmp
xor
ja
lret
scas
lret
cli
je
sbb
rcrb
push
mov
jo
dec
jecxz
and
loopne
fbld
inc
out
xchg
in
popf
dec
aas
adc
bound
popf
fs
add
adc
je
lcall
rclb
xor
cwtl
cmpsb
outsb
cmc
or
cltd
sbb
test
jl
sub
push
or
push
inc
xchg
sub
repnz
inc
dec
lea
jl
ja
call
sub
cmc
imul
rep
mov
mov
sub
add
cmp
pop
les
pop
xor
jmp
leave
or
and
xor
sub
add
into
mov
or
outsb
sbb
imul
lods
pop
cld
rcrl
rcl
lds
jae
loop
insl
jmp
fwait
sbb
jae
jb
adc
and
or
test
mov
hlt
int
xchg
lds
and
bound
mov
ljmp
int
push
pushw
cmpsl
mov
adc
repz
mov
cwtl
stos
adc
adc
test
or
bound
pop
fcmovnu
push
mov
push
xchg
dec
jns
dec
repnz
aaa
pop
jmp
xchg
ds
lret
push
hlt
ljmp
fsubl
mov
stc
sub
inc
or
fstpt
adc
inc
nop
roll
push
lock
lcall
repz
sbb
cmp
insb
lods
iret
loopne
nop
push
outsl
cli
lcall
pop
or
cli
add
pop
sbb
push
pop
mov
mov
dec
mov
enter
xchg
jnp
rorl
int3
push
pop
ret
mov
add
std
dec
shll
or
pop
cs
mov
jmp
ljmp
loopne
sub
xchg
icebp
inc
mov
mull
clc
pop
ror
ficomps
loop
test
push
in
xor
inc
mov
rcll
adc
sbb
testb
push
mov
ljmp
or
decl
mov
sbb
int
xor
shld
mov
scas
enter
mov
loop
inc
xchg
imul
and
insb
jg,pt
dec
out
enter
lret
or
xor
cmp
ret
lret
adcb
leave
outsb
mov
mov
cltd
inc
jbe
cmp
jmp
push
test
aaa
stos
cmp
cmc
inc
iret
mov
pop
cli
insb
jp
lds
mov
lahf
icebp
fbld
push
cmc
mov
fwait
push
add
mov
push
ret
inc
movsl
frstor
rclb
or
xchg
adc
xchg
dec
dec
pusha
fadds
fimuls
pushf
into
jmp
push
popf
in
stc
divb
cmp
push
push
push
sti
and
call
xchg
mulb
leave
xor
or
cmpsb
loopne
adc
adc
je
out
cmp
and
mov
sub
pushf
inc
pop
mov
inc
mov
sbb
xchg
int3
scas
xchg
sub
sub
add
scas
ret
stos
push
pop
fisubs
dec
es
xchg
and
mov
cmp
or
xor
clc
xor
shl
add
mov
idiv
push
cmp
mov
test
or
xchg
or
jnp
adc
sub
inc
and
jg
inc
pusha
test
or
mov
pop
xchg
pop
out
lret
mov
lret
leave
ja
nop
test
jmp
adc
push
mov
sub
imul
fwait
out
dec
dec
adc
xchg
mov
xor
cmc
cmp
inc
les
fiaddl
dec
fidivrs
test
cmc
enter
lret
xchg
enter
jp
jnp
into
add
clc
dec
incl
stc
andl
adcb
aad
add
cmp
js
adc
xchg
sub
aaa
inc
push
pusha
lods
dec
add
arpl
mov
or
mov
js
jne
jne
movsb
hlt
scas
in
repnz
jl
mov
push
or
js
nop
sbb
or
fisubrl
pop
inc
push
fxch
lret
jbe
gs
sub
int3
mov
xor
inc
jl
dec
dec
mov
xor
repnz
out
or
xor
popf
or
rcl
sub
clc
mov
rcll
fildll
push
xor
mov
daa
scas
adc
addb
jp
push
adc
and
outsl
push
mov
adc
jnp
and
dec
fisubrs
add
adc
xchg
jg
lock
addr16
cmp
jb
outsb
les
pop
cmp
sahf
int
inc
stos
cmp
and
ljmp
lock
or
sbb
cwtl
sub
cmp
or
inc
aam
add
or
mov
test
xchg
movsb
xchg
imul
add
mov
lods
outsl
xor
add
pop
adc
mov
and
jle
xor
inc
pop
inc
dec
inc
iret
xchg
pop
or
jge
mov
lods
arpl
sbb
pusha
sbb
js
rcrb
mov
daa
mov
hlt
xchg
fsub
popa
sub
test
mov
in
or
mov
adc
add
xor
xor
and
lods
movsl
mov
cmp
loopne
loope
pop
push
es
jp
bound
and
push
mov
int3
mov
ja
cld
hlt
dec
mov
sub
mov
mov
scas
push
rorb
inc
aad
fldl
sarl
data16
cltd
stos
int3
and
xchg
dec
mov
jbe
jg
fsubrp
mov
mov
lock
push
mov
dec
pusha
cld
imul
movsb
js
jb
ss
aas
xchg
push
in
ss
cmp
xor
int
scas
aas
jnp
mov
mov
test
adc
in
aaa
cmpsl
mov
popa
ljmp
and
mov
nop
fsubp
loop
inc
mov
test
and
rcl
mov
loope
and
add
test
pusha
clc
sub
test
push
mov
pop
and
xchg
shlb
sbbb
stc
or
insl
jge
jmp
mov
cmp
ret
popa
mov
insb
mov
fwait
ret
pop
pop
push
adc
add
sbb
imul
das
daa
xor
in
sbb
mov
cmp
pop
xchg
xlat
push
jg
test
es
call
addl
jg
add
jno
sbb
movsb
faddl
sub
out
cmp
fsubp
mov
fcoms
cld
and
cmp
and
ret
shll
mov
mov
xor
rcll
and
inc
mov
lcall
hlt
inc
jno
xor
fistps
pop
popf
icebp
ret
sbb
cmc
and
xchg
shl
lods
fnclex
sahf
jne
or
cmpsl
jnp
int
test
jp
dec
das
leave
or
js
pop
pop
and
mov
sbb
les
insb
imul
jecxz
mov
sub
mov
lds
stc
or
sub
mov
inc
hlt
add
push
pop
add
sahf
xor
shll
les
sbb
or
gs
push
mov
imul
push
mov
inc
mov
mov
imul
fwait
push
jne
inc
imul
jp
mov
mov
xchg
mov
cmpsl
mov
nop
cltd
in
and
jns
arpl
int3
push
mov
ret
outsl
jne
stc
hlt
scas
sub
sarb
imul
lods
push
aaa
lods
sub
mov
fs
xchg
add
inc
push
or
aas
icebp
movsl
or
add
sub
arpl
mov
fnstcw
das
mov
les
push
push
mov
push
call
jae
roll
push
push
sub
jno
xor
into
xor
and
or
mov
scas
outsl
push
mov
or
cmp
loop
xchg
andl
xchg
mov
imul
sub
adc
push
xor
ds
leave
clc
or
call
cmpsb
icebp
sbb
out
bound
gs
or
loope
in
out
roll
enter
inc
test
insb
bnd
xchg
jae
xchg
pusha
mov
dec
sub
cmp
int3
mov
sti
fstpt
pop
inc
aad
pop
fs
aam
shll
sti
mov
adc
push
pop
mov
mov
aam
mov
pop
mov
lods
jno
sti
jae
jbe
das
popf
mov
cmc
out
sbb
ret
scas
push
lods
sar
inc
dec
add
push
pusha
inc
addb
loopne
jne
sub
loopne
cltd
mov
stc
mov
fstps
sub
out
add
xor
mov
jbe
ljmp
xchg
xchg
in
mov
jns
xchg
cmp
aam
mov
inc
sbb
pop
inc
jecxz
mov
mov
ds
cmp
jnp
dec
inc
fwait
jle
in
repz
movsb
mov
xchg
pcmpeqw
xchg
scas
inc
jp
push
pop
jno
pop
jl
fwait
sub
fsubp
xchg
lea
sub
icebp
dec
sub
cmp
aaa
mov
mov
ljmp
mov
sbb
leave
in
je
ljmp
xchg
gs
cmc
mov
jle
das
jno
movb
mov
popf
testb
jb
std
sbb
or
mov
mov
cwtl
jl
mov
xor
push
fstpt
out
cltd
add
add
sbb
lret
loopne
or
fnsave
cmpsb
sarl
pop
in
pusha
aad
hlt
pop
hlt
sahf
lds
adc
add
cs
add
les
pop
ds
pop
int3
adc
cmp
roll
mov
mov
mov
push
sbb
pop
or
pop
in
arpl
es
stc
push
jge
stc
sbb
adc
and
jbe
inc
test
mov
push
xchg
xchg
not
clc
mov
loope
mov
lock
mov
add
pop
add
push
or
push
pop
mov
mov
sti
mov
xchg
psllw
pop
xor
jns
sub
addr16
xchg
std
test
js
enter
mov
int3
jns
mov
add
or
ljmp
push
inc
sahf
dec
call
inc
fs
aas
xlat
mov
lods
pop
inc
loopne
mulb
xor
in
mov
loopne,pt
adc
fstpt
sbb
data16
iret
das
jo
out
sbb
dec
mov
lods
mov
add
cmp
mov
je
jg
pop
and
jo
cmp
scas
les
cmp
rclb
sub
in
pop
mov
xorb
xchg
div
movsb
inc
add
fildll
leave
sti
push
psubd
xor
dec
push
clc
mov
out
or
sub
xchg
std
push
cmp
inc
mov
pop
lds
sub
cmpsl
aaa
int3
jmp
mov
pop
mov
movsl
cmp
mov
lds
fwait
mov
cs
das
add
dec
stos
iret
xchg
aad
mov
lcall
pop
mov
and
test
lcall
fnstcw
jle
jecxz
sub
call
jb
cmp
jae
imul
movsl
lds
scas
push
or
pop
lret
mov
fimull
ret
aas
aad
pop
das
fs
ss
leave
ljmp
loope
sahf
inc
cmp
ret
pop
fdivrl
dec
inc
cmp
pop
fadd
in
push
cmp
pop
imul
xor
xchg
std
jl
fsubrl
test
loopne
and
scas
jecxz
dec
iret
jo
push
hlt
mov
mov
pop
cwtl
xlat
xchg
jmp
lret
dec
ljmp
out
ss
repz
fdivrs
out
mov
ror
fsubrs
aas
inc
cmpsl
dec
leave
test
or
inc
jb
sbb
fwait
ljmp
shrl
xchg
lea
neg
pop
icebp
pop
jo
inc
out
mov
mov
call
xor
scas
xor
jp
mov
fsubrp
int
adc
out
jns
fidivl
sbb
test
outsl
sbb
hlt
repz
movsl
into
lcall
pop
mov
test
pop
mov
cmp
mov
mov
shrb
mov
dec
jne
cwtl
xchg
pop
mov
mov
xchg
lods
push
cmpsb
movsb
call
pop
dec
push
cli
rclb
js
imul
xor
loopne
repz
mov
dec
jae
pop
mov
shll
dec
es
inc
cmpsb
sub
out
test
ret
xchg
add
and
lgs
mov
stos
testb
scas
adc
aaa
mov
jbe
call
mov
xor
movsl
mov
pop
test
and
mov
and
push
mov
adc
and
std
adc
pop
popf
pop
out
fisubrs
push
aad
mov
outsb
push
cmp
loope
jo
or
lret
and
pushf
push
in
lret
lret
xchg
insl
xchg
dec
mov
cmpsl
xlat
inc
pop
adc
jecxz
mov
mov
cmc
pushf
lcall
call
sub
push
clc
aam
or
dec
aaa
sub
in
ret
mov
je
inc
aam
push
dec
stos
hlt
pop
xor
xchg
insl
dec
jg
in
add
inc
sub
outsb
push
adc
pushf
mov
roll
add
ret
test
push
inc
mov
jg
xchg
sub
int
repnz
xor
dec
or
pushf
ljmp
add
xorl
pop
insl
mov
or
xor
hlt
fadd
clc
push
dec
fwait
push
push
rcrl
repnz
imul
inc
and
mov
pop
cmpsb
add
ljmp
and
adc
fimull
mov
add
hlt
mov
pop
xchg
repnz
cli
loope
jns
movsb
sub
rcll
daa
mov
fisubrs
mov
cltd
mov
iret
push
aam
mov
add
leave
addr16
mov
outsb
xor
adcl
cli
sub
xchg
lods
add
inc
add
lret
pop
leave
cmp
shll
stc
sbb
and
mov
lock
rclb
cwtl
in
je
mov
push
and
inc
lock
loopne
in
fnstenv
repnz
icebp
and
ss
out
sti
out
lods
outsb
addr16
js
mov
shr
mov
and
add
mov
sub
sbb
scas
push
inc
mov
jg
lods
inc
fwait
arpl
jb
xor
inc
sbb
aad
in
call
dec
fadd
mov
lea
or
sarb
pop
nop
orl
mov
mov
inc
or
cmc
sbb
dec
fwait
lahf
ja
lods
data16
mov
dec
jbe
push
fstp
pop
add
aam
leave
sahf
inc
popf
jle
add
repnz
adc
and
test
jl
jbe
inc
cld
rcll
jne
fbstp
shr
mov
and
test
adc
es
roll
in
mov
xor
adc
mov
lods
test
loopne
aaa
sar
add
push
repz
add
and
mov
pop
jecxz
xor
push
jmp
mov
or
sahf
dec
adc
xchg
push
sbbl
cmc
int3
sahf
test
mov
scas
movsb
lods
es
and
mov
movsl
leave
xchg
rcll
loope
and
inc
in
cmp
jns
lret
js
aas
adc
xchg
adc
lret
cmp
add
in
inc
fs
out
scas
or
sti
loopne
bound
sbb
mov
pop
iret
mov
push
jnp
lods
ja
inc
cmp
and
push
movsl
out
push
mov
add
mov
out
mov
nop
inc
mov
mov
inc
cwtl
jecxz
push
push
jmp
cmpb
dec
enter
or
push
rolb
test
lahf
cmp
adc
or
sub
inc
jnp
inc
mov
filds
out
pushf
push
sahf
fwait
dec
repz
inc
es
lret
inc
and
lds
pop
cmp
xor
leave
sbbl
inc
cmp
mov
xchg
dec
sub
jmp
lea
repz
fwait
mov
push
rclb
sbb
add
mov
dec
loope
mov
jns
pop
sahf
aad
cmpsl
pop
sbb
jb
sarl
and
cltd
rcrl
dec
or
pushf
out
out
push
xlat
mov
inc
stc
outsb
arpl
pop
cld
fistpll
ja
jg
mov
xchg
mov
shrb
lock
push
push
xchg
pop
push
dec
add
loopne
xchg
inc
rclb
ret
lahf
dec
cmp
jns
mov
ds
les
out
add
scas
es
mov
clc
out
shrb
sub
aas
sbb
sub
subl
pushf
inc
test
mov
test
mov
or
lock
mov
int3
inc
push
inc
subb
pop
xor
clc
cmp
push
fsubs
fs
out
test
cs
push
out
jecxz
add
fs
ljmp
jg
cltd
mov
xchg
lcall
and
les
pop
inc
daa
scas
arpl
movsl
lcall
xchg
outsb
push
xor
fmul
push
pop
xlat
packuswb
or
add
or
lret
pop
add
mov
outsl
pop
cmp
lds
das
add
sbbl
jle
nop
push
mov
lahf
push
add
push
in
test
jle
pop
pop
pop
inc
in
loope
xlat
and
in
out
xchg
sahf
push
jae
outsb
nop
inc
pop
shlb
movsl
mov
cmc
dec
add
xchg
mov
aas
hlt
cmp
add
pop
rcl
jno
lods
ss
popf
loopne
cmp
pop
push
cld
shll
mov
add
jp
std
stos
ja
xchg
mov
pop
pusha
push
mov
push
mov
aam
cmpl
xchg
outsb
jae
imul
subl
and
fwait
jb
mov
std
repnz
sti
adcl
leave
enter
adc
jbe
outsl
ljmp
inc
or
and
testb
add
cmp
je
xchg
outsb
in
test
test
jo
jne
or
icebp
in
jge
mov
dec
and
jp
dec
hlt
scas
repnz
call
mov
imul
pop
in
mov
pop
mov
insl
stc
imul
push
dec
cmpsl
xchg
jae
xor
cmp
mov
movl
dec
adcb
add
sub
cmp
mov
push
sub
repnz
cmpsl
ja
lret
fdiv
lds
mov
mov
push
jne
jne
fldenv
mov
xchg
hlt
out
adc
pop
lock
mov
jmp
or
idivb
stos
adc
add
mov
pop
outsl
adc
mov
cmp
jle
imul
xor
mov
adc
dec
shr
test
mov
hlt
fidivl
ret
or
hlt
pop
or
mov
xchg
out
cltd
adcb
lcall
or
stos
sbbb
xor
or
xorb
add
shll
push
xor
in
rcll
das
nop
mov
mov
stc
fdivr
popf
adc
dec
std
fdivr
push
div
mov
cmp
mov
xor
pusha
clc
stc
mov
sub
push
mov
jle
orb
xchg
stc
xor
sbb
cltd
scas
add
addl
dec
dec
mov
subl
loopne
sub
fs
or
pop
jmp
imul
rcll
sbb
xlat
lods
jno
loope
std
xchg
push
mov
ds
rcl
pusha
dec
adc
int
rolb
xchg
gs
stos
jmp
pop
das
jbe
js
inc
and
mov
adc
mov
insl
push
jb
jmp
js
cwtl
lea
xchg
cmp
push
xchg
xor
mov
shll
ds
dec
adc
dec
loope
leave
inc
fbstp
push
add
push
dec
rcll
pop
xor
xlat
mulb
dec
stc
xchg
cmpsb
clc
mov
test
mov
arpl
repnz
add
jg
xlat
or
xchg
or
push
push
scas
sub
js
lds
push
sbb
pop
or
add
lahf
cltd
pop
divl
clc
cmpsb
add
inc
xchg
mov
call
xchg
sub
sbbb
orb
insb
jmp
hlt
push
repz
fs
int3
cmpl
dec
mov
aad
gs
lret
add
pusha
sbb
ror
scas
jmp
ds
aaa
into
gs
out
push
sti
cmp
inc
jp
nopl
std
jmp
push
jge
andb
lahf
sarb
sub
mov
ja
xchg
mov
aad
sbb
push
push
mov
mov
lcall
push
sbb
enter
jp
push
xchg
add
stc
pop
mov
std
movsl
push
push
and
jo
xorb
mov
pop
outsl
jo
push
add
sbb
pop
mov
shl
push
jl
push
inc
call
insl
xchg
xor
inc
test
div
pusha
sbb
adc
popa
mov
xchg
add
sub
imul
mov
loope
cmpsb
pop
sub
mov
sub
addr16
cmp
rorl
jb
push
dec
imul
or
xchg
xchg
ret
push
sub
cmp
insl
pop
loopne
jl
daa
mull
xchg
xor
testb
mov
pop
pop
and
mov
sub
and
int3
add
scas
cmp
arpl
test
add
fxch
pop
add
mov
clc
inc
sub
xor
mov
push
sbb
mov
fsubs
shlb
cmp
inc
in
push
shlb
inc
imul
out
in
insl
jnp
jb
addr16
cld
dec
std
sahf
inc
scas
mov
mov
pusha
movsb
dec
pusha
scas
jecxz
bound
mov
test
xorl
divl
push
aas
or
data16
imul
in
jmp
test
push
push
cmp
adc
std
lock
fsubrl
lret
xor
sub
xor
cmpb
stos
fcom
push
lcall
scas
xorb
dec
cmc
fidivs
loopne
inc
jge
call
lods
out
mov
push
push
aam
xchg
ljmp
inc
jbe
ja
movsl
call
mov
lods
pop
je
add
sbb
mov
in
jbe
lahf
lahf
lods
push
inc
and
mov
shl
dec
in
mov
into
into
jmp
bound
xorl
cmpsl
loop
iret
testb
iret
movsb
cmc
xchg
mov
mov
sub
mov
lahf
jae
inc
clc
fs
or
add
xchg
std
lock
lods
js
jmp
xchg
and
fs
mov
jecxz
mov
jge
cmp
xchg
test
sub
xchg
lret
clc
pop
xchg
xchg
dec
roll
sub
xchg
mov
cltd
aas
xchg
ds
movsl
jbe
sahf
es
or
mov
sbb
fs
or
enter
inc
hlt
dec
rorb
jecxz
adc
loop
lret
xchg
dec
js
insl
lcall
adc
cwtl
cmp
es
imul
pop
inc
cmp
ret
testl
jmp
lods
or
shlb
and
fsubrl
std
cli
les
adc
cli
aaa
mov
sub
lds
js
sub
adc
andb
jge
push
ja
fidivs
cmpsl
frstor
idiv
dec
lcall
mov
popa
aad
into
mov
fildl
pusha
dec
aad
es
fwait
arpl
lret
mov
lahf
and
dec
or
sub
fxtract
or
xor
jo
fisubl
pop
sub
fistpll
jle
int
ds
jae
ja
xchg
dec
popf
push
fs
cmp
pop
mov
pushf
mov
out
and
xchg
sahf
add
mov
sub
lahf
lahf
pop
cmp
fmul
adc
xchg
mov
fnstenv
ficoml
stc
cld
inc
mov
inc
mov
sub
sahf
js
inc
dec
cli
inc
pop
adc
cmp
in
and
jnp
or
pop
scas
jge
dec
imul
and
negl
pop
pop
push
or
fnstcw
dec
fwait
sti
stc
xorb
lret
pop
inc
test
ja
pushw
scas
popf
es
sbb
js
icebp
bnd
hlt
push
add
les
fsubrl
notl
or
mov
or
cltd
out
lcall
fadd
shlb
dec
sub
arpl
subl
dec
loopne
lret
mov
jo
out
sub
test
mov
dec
arpl
pop
inc
daa
rclb
xor
incb
sti
fcomps
push
jo
dec
add
or
xchg
jns
pop
je
addl
inc
iret
and
jno
mov
out
fsubrl
cltd
xchg
push
add
xor
mov
in
push
mov
inc
das
pop
pop
ds
sahf
mov
mov
or
scas
adcb
test
icebp
out
lret
addr16
fistps
fstpt
jmp
lds
addr16
insb
stos
out
push
add
push
or
sahf
mov
arpl
ret
enter
test
scas
dec
lret
mov
xchg
mov
test
loope
lea
je
orl
loopne
adc
mov
inc
inc
aad
sub
dec
int3
pushf
pop
int
xchg
ffreep
into
push
jno
filds
jnp
insb
test
mov
repnz
hlt
mov
or
arpl
push
sbb
push
add
push
int
cmp
aam
imul
inc
sub
adc
push
inc
outsl
fdivl
sti
cmc
int3
in
mov
mov
or
inc
hlt
pushl
call
jmp
lods
add
and
fcoms
movsb
sub
add
cld
jae
push
add
dec
add
and
neg
dec
xchg
data16
mov
jg
adc
mov
or
movl
dec
mov
push
insb
sub
push
cmp
dec
idiv
nop
jae
dec
adc
jb
aas
cmp
lods
icebp
loope
sub
inc
mov
int
arpl
inc
imulb
dec
push
fsubl
cld
lcall
subl
insb
jne
aam
in
insl
js
lods
inc
xor
imul
rcr
push
pop
mov
mov
push
insl
cmp
or
subb
xchg
jmp
shrl
dec
pop
and
inc
mov
mov
rclb
fsubrs
mov
dec
repnz
dec
andl
frstor
repnz
inc
jne
jo
sbb
and
or
call
add
push
xor
loop
out
imul
jno
cmp
adc
gs
lods
bound
nop
xchg
push
xor
mov
pop
cmp
lds
jg
mov
add
mov
and
popf
mov
sbb
adc
in
xor
testl
and
shll
jge
xor
in
adc
je
loope
cltd
sbbl
sahf
pop
loopnew
fidivrs
arpl
test
aaa
xchg
sbbl
ds
mov
add
dec
data16
in
or
pop
outsb
loope
mov
daa
scas
pop
test
jmp
arpl
push
xchg
outsl
out
cwtl
ret
add
jge
std
pop
dec
js
cmpsl
imul
jle
jae
je
enter
ljmp
xor
lret
push
jbe
mov
jmp
cld
mov
std
and
mov
dec
pop
fcmovb
cmpl
cmp
into
imul
cmpsb
fistl
lock
aaa
adc
cmp
and
paddsb
pusha
aam
repz
ret
inc
insl
js
hlt
cmp
xor
adc
rcl
int
test
push
adc
mov
imul
gs
fldl
mov
jns
sti
pop
and
xorl
inc
mov
inc
and
loope,pn
jb
push
xchg
mov
sub
gs
cld
negl
push
sub
dec
inc
xor
xor
pop
jne
and
xbegin
loope
mov
push
mov
test
inc
add
sbb
stos
jae
shl
jb
xor
sar
xchg
stos
pushl
les
jbe
test
cmp
in
sahf
lret
xchg
adc
je
sti
cmpsl
cmp
pop
in
pop
aam
mov
inc
out
fistps
lods
loopne
dec
dec
out
dec
jae
fistl
push
xchg
cmp
in
pop
xor
add
movl
adc
mov
inc
jae
test
lods
daa
xchg
xchg
les
mov
jp
and
push
test
cwtl
fs
or
inc
ret
daa
mov
jbe
imul
aas
dec
in
dec
xor
fsubrl
scas
cmp
rcrb
mov
shlb
pop
mov
xchg
enter
les
dec
cmp
call
inc
mov
aas
jb
out
jp
dec
sbb
pop
push
mov
rcl
daa
das
iret
imul
push
lret
pop
push
into
arpl
xchg
add
sbb
push
mov
sarl
xchg
test
repnz
nop
sahf
add
sbbb
jne
in
lds
dec
and
loopne
xchg
test
aaa
dec
mov
sub
faddl
out
popa
jnp
jo
inc
dec
xchg
sbb
mov
lcall
divb
mov
pushw
ljmp
sbb
pop
and
adc
sbb
out
and
not
push
sbb
adc
bound
cmpsb
ljmp
adc
clc
out
cs
inc
inc
fwait
out
lods
xor
ljmp
or
jae
int3
sbb
scas
mov
sub
imul
lods
incl
mov
cmc
mov
jbe
lahf
xor
mov
inc
sti
ljmp
sub
fs
iret
jg
jp
pop
loopne
adc
xchg
out
sub
fs
sti
mov
jp
or
add
decl
sub
mov
loop
inc
mov
cltd
mov
mov
aam
xchg
sub
test
cmp
pushf
sbb
dec
xor
jns
inc
fld1
fwait
jle
and
rolb
push
outsb
mov
ret
test
lahf
push
and
add
lahf
inc
sbb
shll
adc
sysenter
test
int
sub
push
stos
mov
adcb
inc
cmc
insb
xor
or
adc
neg
arpl
outsb
leave
adc
mov
push
mov
sbbb
inc
and
xchg
test
test
cmp
addl
insl
fnsave
movsl
xchg
dec
xchg
xchg
lcall
fidivl
mov
or
jge
inc
sbb
icebp
mov
in
add
cmp
ret
int
sbb
decb
es
cwtl
xchg
mov
push
cmp
cli
dec
fisttps
inc
imul
mov
je
in
inc
mov
rol
add
scas
stc
mov
mov
xchg
or
stc
mov
sbb
cmpsl
movsb
ljmp
cltd
xor
pushf
or
data16
leave
clc
xlat
es
fbld
jp
jae
popa
sub
or
test
mov
mov
add
jle
mov
sarb
andl
insb
cmp
inc
call
call
inc
hlt
sbb
mov
mov
pushf
cmc
loope
or
and
push
pop
movups
pop
out
push
imul
sbb
in
pop
pop
and
inc
pop
int3
pop
lods
subb
movsb
jmp
sub
inc
insl
andb
adc
mov
mov
or
mov
mov
mov
nop
push
ret
lret
xchg
in
popa
ret
sbb
lcall
mov
xchg
jb
sbb
sahf
sar
mov
mov
bnd
hlt
pop
dec
out
dec
inc
cmp
ror
daa
iret
lcall
xchg
ret
dec
cmp
pop
popa
lods
mov
mov
sbb
mov
push
cmp
dec
add
arpl
repz
call
push
or
imulb
sub
mov
out
push
aad
add
sbb
and
call
pop
xchg
mov
push
mov
cs
adc
in
sbb
add
fnstcw
cmp
cltd
cmp
jp
lods
xor
xor
rorl
cmp
jne
insb
es
jns
jb
push
add
popa
pop
xor
rcrb
cmp
por
cli
cmp
outsb
fidivl
je
add
or
sub
add
cmp
mov
movsl
dec
or
inc
fwait
pop
xlat
jb
scas
pop
subl
cmpsb
pop
fsubs
cmpsb
in
pop
add
push
pop
mov
cwtl
pop
and
mov
subl
mov
std
xchg
cwtl
sbb
cmp
and
or
cs
adc
fdivrs
push
push
sub
fsubrs
inc
test
dec
xor
popf
or
addr16
pop
cmp
or
xchg
sti
pop
out
inc
movsl
in
dec
cmp
nop
xchg
dec
fisubrl
inc
gs
mov
mov
repz
in
push
stc
lea
out
pop
inc
cmp
cmp
imul
jecxz
in
adc
ss
into
pop
sbb
lahf
fidivrs
pop
inc
pop
jmp
mov
pop
je
in
je
sbb
sbb
cld
shll
mov
ret
loopne
mov
pop
inc
fimuls
icebp
aam
movsb
pop
xor
outsl
pusha
fmuls
cmp
and
sub
xor
cmp
loopne
adc
int
inc
roll
push
sbb
int
mov
mov
push
iret
cmpsb
imulb
or
add
xor
loopne
sbb
lea
repnz
inc
mov
xlat
imul
cmp
sub
adc
popa
sahf
fs
dec
push
jp
add
in
cmp
push
sbb
jb
outsb
mov
cmc
dec
sbb
jecxz
insl
push
fnstcw
xor
add
push
mov
mov
js
test
clc
ljmpw
aad
xor
sbb
xor
pop
or
repnz
sbb
cmc
mov
xor
dec
loopne
cld
pop
arpl
mov
cwtl
jmp
mov
addr16
dec
lret
shrl
mov
dec
js
test
stos
and
insb
shrb
out
mov
fucom
fwait
adc
cwtl
adc
mov
ret
loopne
int3
xor
sub
fidivrl
daa
loop
loop
imul
inc
mov
pop
bound
sub
in
roll
xchg
sbb
lock
gs
mov
loopne
xchg
adc
movsb
test
jbe
sub
pop
lahf
and
cli
mov
sbb
test
pop
xchg
daa
mov
add
fdiv
clc
push
in
aas
clc
cmp
jnp
dec
adc
repz
stc
dec
inc
test
nop
adc
pop
xor
add
mov
inc
mov
cltd
repnz
js
je
into
jge
push
scas
cs
pop
cmpsb
in
mov
xlat
push
mov
or
jne
jbe
imul
push
xor
inc
or
loope
in
push
mov
cmpsl
stos
xlat
add
daa
dec
mov
loope
add
inc
dec
sub
xor
xor
inc
sahf
aas
les
jne
sub
xlat
push
inc
fs
rcr
push
add
decl
cmp
push
or
into
cs
cld
testb
xor
js
sub
mov
add
cmp
and
mov
mov
dec
cmpsl
inc
cli
sbb
aad
or
mov
andb
in
frstor
in
rcll
imul
es
jnp
mov
add
stos
xor
faddl
mov
ss
xorps
dec
scas
test
push
mov
out
cmc
lea
icebp
insb
pop
aas
fnstsw
fisubs
inc
repz
jnp
pop
outsb
and
xchg
jmp
aaa
aaa
add
xchg
pop
ss
in
sub
sbb
push
mov
lods
daa
push
xor
test
sti
inc
incb
inc
xchg
es
subl
pusha
iret
cmp
sbb
pop
fcomp
sbb
sub
push
sbb
push
orb
and
ja
mov
fistl
fnstenv
ljmp
clc
pop
cmpsb
insl
inc
sub
enter
mul
dec
add
xor
cmp
adcb
mov
jmp
mov
jle
test
aaa
dec
pop
mov
neg
xchg
mov
add
imull
lock
ljmp
jmp
int3
cmp
sbb
ljmp
add
mov
inc
mov
inc
cmpl
cmpsl
fnstenv
jp
xor
adc
sbb
call
push
pop
sub
cmp
outsl
std
data16
dec
iret
orb
test
and
jb
mov
xchg
fcmovne
and
int3
or
inc
jg
rorl
mov
dec
in
inc
sbb
cmpsb
add
out
repnz
pop
das
mov
mov
sti
dec
and
pop
or
or
mov
sahf
hlt
je
pop
cmp
sub
test
and
loop
std
and
in
addr16
in
add
sub
xchg
adc
jb
in
jno
loope
imul
add
sub
ja
sbb
dec
ds
ret
mov
inc
mov
cmp
jg
jae
leave
cmp
and
xor
or
push
inc
jno
mulb
pop
adc
inc
popa
xlat
pop
or
nop
dec
inc
sbb
mov
fcomp
test
add
cmp
or
jns
push
jg
mov
inc
push
ljmp
call
inc
fs
sub
and
mov
sbb
pop
add
inc
jmp
test
or
call
xchg
jb
sub
push
mov
stos
push
add
cli
orb
sti
add
dec
insl
ds
jno
ss
imul
xchg
sbb
lods
int
iret
scas
cs
inc
std
add
xor
jge
xor
rcll
add
jp
lods
fdivp
dec
jge
mov
xor
sub
cltd
lods
rorb
shl
or
call
mov
sarb
adc
push
cld
imul
pop
and
lea
dec
mov
dec
rolb
xor
jle
mov
cld
adc
push
sub
mov
pop
xchg
adc
lcall
add
mov
mov
pop
cmp
bswap
add
test
mov
xor
mov
sbb
mov
xor
mov
imul
cmp
fs
xchg
dec
test
and
scas
push
xchg
sti
stos
mov
arpl
inc
lret
pop
xchg
outsb
jl
lods
or
sbb
lahf
cmc
data16
mov
fdivr
and
or
push
repnz
js
popf
and
cmp
cwtl
scas
jle
cmp
or
jns
cmpl
orb
push
fs
mov
fcmovu
adc
stos
sub
pop
xchg
sub
jge
cmp
mov
pop
rcll
adc
dec
lods
int
mov
in
imul
addr16
ja
imul
or
or
jmp
punpcklbw
in
insl
or
sbb
icebp
lret
movsb
arpl
repz
and
ljmp
std
mov
push
ret
loope
in
cmpsb
divb
pop
movsb
lcall
dec
mov
ret
lahf
jmp
das
add
pusha
sub
mov
push
orl
jp
ds
cmp
nop
ja
push
dec
push
fsubrl
adc
mov
sub
mov
jg
scas
mov
test
xchg
adc
jp
and
fsubrs
jns
jl
push
add
mov
mov
sub
js
pop
xchg
xor
sub
adc
cmp
jmp
xchg
out
ret
lcall
dec
xchg
fs
mov
adc
negl
addr16
xchg
cbtw
cltd
mov
insl
int3
in
into
pop
in
push
testb
sub
add
in
pop
sbb
dec
pop
daa
sbb
insb
mov
dec
andnps
test
gs
sub
mov
je
rcl
cmc
jns
sbb
and
push
insl
xchg
stos
int3
cmp
scas
test
fcomip
push
adc
arpl
cld
rorb
lret
jg
insl
add
iret
dec
mov
lret
and
dec
pop
mov
daa
xor
push
pop
sub
or
shrl
in
int
mov
jmp
imul
push
push
call
jns
jae
mov
xor
cmpsl
aam
push
xor
into
pop
insb
sub
or
jnp
enter
mov
testb
shlb
mov
test
dec
int
jmp
into
bound
or
xchg
add
icebp
pop
clc
test
mov
sub
cmpsl
ror
fsubrl
push
add
xchg
dec
cmp
loope
jnp
mov
pop
sub
lods
sbb
mov
sbb
add
pop
popa
xor
mov
scas
test
cmp
call
fidivl
mov
aas
push
sbb
out
stc
mov
das
repz
and
stos
jnp
and
lods
fcmovbe
pop
lods
mov
cmp
jge
inc
fs
aas
jecxz
jae
setbe
pushf
sub
cmpsb
mov
push
lret
xchg
lahf
popa
mov
jae
or
xchg
ja
jecxz
cmpsb
mov
out
jns
fldl2t
outsl
out
adc
jno
popf
in
mov
push
in
sbb
xor
daa
mov
push
sbb
xor
xchg
arpl
mov
xor
jg
pop
push
mov
jp
adc
or
push
adc
inc
dec
test
loope
push
clc
int
mov
aaa
loope
es
mov
mov
fs
mov
cmp
mov
cltd
lock
cmp
pop
sub
mov
notl
lmsw
jb
imulb
sbb
or
sbb
les
cmp
out
xchg
adc
add
popa
xchg
add
jecxz
push
push
sbb
mov
sbb
sti
nop
repz
outsb
jmp
stos
or
sub
xchg
mov
dec
push
mov
sarb
sbb
jle
lds
jbe
or
sbb
cmpsb
inc
xchg
and
adc
push
xor
jne
imul
xchg
dec
pop
call
add
dec
int3
mov
cmp
dec
mov
cmpsl
cltd
push
sub
gs
mov
sbb
dec
cltd
and
add
pop
add
ret
adc
push
jnp
push
in
leave
jb
gs
shl
pop
popa
xor
xor
push
lahf
jecxz
xchg
andl
dec
add
clc
dec
mov
jns
std
mov
jae
lds
jmp
dec
inc
out
sbb
xchg
out
push
insb
add
scas
cmpsl
mov
dec
mov
dec
fimull
xor
pop
ja
mov
cmp
push
add
mov
mov
fs
fsubs
inc
inc
pop
or
pop
dec
adc
stos
div
push
ljmp
inc
jmp
pop
push
ds
sbbl
popf
push
cmp
dec
sbb
fwait
dec
mov
cmp
cvtdq2ps
incb
push
stos
dec
test
ffreep
test
aad
ss
mov
and
idivb
std
adc
ret
adc
jecxz
inc
negb
mov
jae
add
xchg
cmp
push
fldt
mov
outsl
mov
mov
mov
sti
sbb
fstl
mov
pop
or
push
sti
fldt
cs
addl
or
movsl
mov
push
and
mov
ljmp
rol
hlt
cwtl
push
roll
adc
mov
sar
mov
test
mov
insb
jle
movsl
push
mov
leave
js
or
sub
adc
push
out
jg
xchg
xchg
push
decb
lds
or
mov
xchg
mov
xchg
jge
xlat
cmpsl
lea
push
jnp
push
outsb
mov
movsl
repnz
sbb
in
mov
push
and
int3
dec
hlt
pop
sti
sub
sbb
or
xor
cltd
rcrl
ja
push
push
sbb
out
add
xor
xchg
fiadds
xlat
add
xchg
fstp
rolb
pop
dec
negl
out
les
out
sub
test
jg
aam
xor
or
and
or
sbb
or
mov
mov
dec
ret
popf
or
imul
jb
pop
mov
cmp
fisttpll
inc
pop
or
push
xchg
lds
pop
push
xchg
push
lret
subl
subb
jno
loopne
andl
popa
xor
adc
jecxz
mov
bound
popa
lret
ret
hlt
dec
sub
xchg
das
stos
rcll
repnz
lods
pop
mov
jnp
sub
sbb
mov
les
sbb
mov
mov
adc
les
xor
cli
lods
loopne
sub
inc
push
cmp
inc
jle
sarb
add
stos
jg
push
std
jne
adc
insl
loop
cmp
sbb
pop
imulb
sbb
pop
xor
bound
fstps
sub
mov
mov
loopne
lds
jg
fcmovnbe
lock
or
sub
rcll
out
mov
repnz
popa
lret
stos
sub
test
jg
xor
jg
sub
imul
lcall
mov
popa
std
sbb
xchg
les
lret
push
int
scas
jp
pop
stos
xchg
out
pop
shll
mov
pop
jns
insb
sti
mov
icebp
es
pop
sahf
dec
xor
int
mov
nop
fcoms
outsl
loopne
in
xor
fistps
jmp
das
xchg
mov
mov
jbe
pop
sbbb
cmp
cmp
sbb
push
stos
dec
gs
dec
pop
and
pushf
mov
sbb
insl
negb
mov
cmpsb
mov
popf
dec
fwait
test
mov
cwtl
mov
repz
xor
cmp
mov
mov
fnstsw
cld
pop
daa
pop
jge
rcll
mov
mov
push
je
adcb
fsubrl
test
and
shll
stos
ljmp
fs
inc
je
lret
cli
jbe
xchg
mov
rcll
in
pusha
test
and
jnp
mov
xor
hlt
dec
ficompl
lods
aas
pop
lahf
outsb
xchg
cs
jb
sub
cmp
jg
in
mov
and
idivl
xchg
ret
dec
add
mov
sti
push
hlt
push
sbb
into
hlt
out
sti
pusha
ja
cmpl
lock
push
pop
test
and
mov
fs
fidivs
xor
jg
aam
xor
sub
mov
mov
push
jg
mov
pop
add
xor
call
sbb
dec
push
adcl
mov
sub
or
cmp
bound
call
push
clc
insb
xor
push
std
jp
pop
test
xchg
cli
icebp
push
mov
adc
cmc
sub
nop
sub
dec
or
test
jno
roll
shll
mov
pop
jns
sti
sub
lock
aaa
cmp
in
fdivs
cld
xor
outsl
jae
call
inc
lahf
std
or
inc
fisttpll
arpl
cmp
test
data16
jmp
inc
or
sbb
out
repnz
jnp
push
pop
mov
js
cli
call
js
mov
mov
adc
mov
jmp
xor
push
or
repz
push
movsl
pop
lret
mov
enter
sub
jg
jo
cmp
xchg
hlt
cmp
insb
jmp
jno
in
cmp
push
test
lret
arpl
add
dec
push
mov
sbb
rcrb
and
lret
ljmp
adc
neg
mov
fs
or
or
jne
roll
push
xchg
idivl
rcl
push
pop
stos
sub
fsub
and
mov
xchg
arpl
ret
and
xor
stos
repnz
pop
clc
lret
int
dec
push
popa
sub
clc
hlt
mov
add
mov
dec
push
repz
sarb
or
int3
dec
cmpsl
sbb
dec
mov
push
mov
in
lahf
sbbb
addr16
insb
imul
es
in
dec
add
shrb
mov
sub
cmp
xchg
int3
clc
jecxz
outsb
ds
jb
and
adc
inc
lea
bound
stc
add
adc
pushf
out
aam
or
out
xchg
push
out
or
pop
or
xchg
mov
mov
gs
in
popa
mov
adc
scas
in
cmp
add
add
addr16
leave
cmp
push
sub
outsb
scas
inc
mov
loope
dec
out
repz
in
lods
sub
aam
js
cmp
push
in
aas
cmpsb
push
gs
sahf
xchg
ljmp
sub
mov
adc
xchg
cmc
cmpsb
fwait
mov
sarl
addr16
scas
pop
popa
sub
lock
lea
aaa
push
outsl
xchg
sub
out
xchg
int
arpl
jne
ss
cld
and
add
xor
stos
insb
andl
cltd
or
frstor
gs
adc
nop
lock
push
faddl
fstps
rcll
js
fbld
out
adc
mov
mov
out
in
cwtl
iret
mov
xor
sbbl
add
adc
adc
inc
add
dec
ss
addr16
xor
jp
and
push
cs
shll
icebp
sub
sahf
xor
mov
push
mov
pop
js
das
push
jns
out
lahf
fwait
cmp
sub
xor
push
and
dec
mov
mov
fwait
cmpsl
xchg
mov
mov
push
add
inc
or
push
mov
sbb
inc
mov
xchg
mov
iret
cmp
jno
sahf
fisubrs
daa
mov
repz
cmp
sti
test
popa
sar
std
gs
das
rcl
fldenv
ja
inc
hlt
mov
adc
mov
stos
hlt
cmpb
push
pusha
push
and
arpl
sub
fldt
mov
js
rorl
cmpsb
pop
mov
mov
repz
xor
lds
fnstsw
pop
leave
or
and
sub
call
dec
dec
lds
xorb
sarb
lcall
add
xchg
xchg
into
icebp
mov
adc
sub
call
negb
and
jge
xchg
arpl
ret
imul
test
inc
lahf
xchg
cmp
clc
mov
jl
cli
dec
add
sbb
test
xchg
lea
out
pop
jge
out
jge
push
push
push
inc
mov
and
inc
xlat
jns
hlt
mov
fisttps
mov
jp
test
mov
aaa
sbb
lods
mov
fists
pop
cmc
jns
dec
scas
jge
add
xor
add
leave
pushf
mov
mov
xor
xor
scas
cmpsb
cmpsb
dec
stc
and
shll
roll
xchg
xchg
mov
out
sub
gs
pop
or
pop
je
aas
call
mov
cmpsl
push
add
mov
stos
jo
sbb
cmc
les
mov
mov
xchg
cmp
xchg
inc
jae
xchg
add
incb
loop
pop
in
jns
jae
xchg
or
lret
and
cmc
iret
hlt
cmp
jb,pt
ljmp
mov
cmpsl
adc
push
adc
out
fldt
mov
aam
xor
gs
sti
testl
pop
push
xchg
aaa
repz
int3
mov
fildl
dec
cmp
sahf
dec
mov
pop
push
adc
jmp
std
jp
sar
jns
adc
jge
pop
das
ror
clc
or
jo
xor
hlt
mov
sbb
scas
repz
std
push
or
int
lea
and
cmpsl
xchg
pop
and
pop
in
scas
pop
jmp
add
push
dec
jecxz
ret
fcomps
mov
sar
lods
pop
cli
jmp
out
aaa
loope
inc
fstpt
jnp
mov
iret
mov
scas
mov
or
mov
shlb
es
cmp
mov
push
sbb
fiaddl
ficoml
cmp
add
xor
dec
sbb
cmpsl
add
inc
leave
es
out
sbb
sbb
jno
incl
pop
das
xor
add
pop
aas
add
loopne
mov
cmp
jbe
xchg
std
movsb
and
aam
fiadds
repz
xchg
gs
adc
enter
jp
dec
and
nop
inc
xchg
mov
dec
aas
xchg
jge
xor
shlb
pop
fdivs
sbb
dec
lcall
pop
adcb
add
and
stos
cmp
lods
sti
test
aas
loop
insl
pop
fs
sbb
sbb
add
push
loop
cmp
xor
lds
and
lcall
dec
xor
push
xchg
shlb
aad
dec
jne
jno
pop
mov
or
push
lahf
mov
pop
negl
das
fmull
jo
and
adc
jns
inc
jecxz
inc
insb
movsl
add
stc
jge
push
lock
mov
cmpsl
sub
aam
cwtl
sub
or
push
xchg
mov
sbb
in
inc
lods
mov
cltd
lret
mov
lret
push
shr
mov
mov
jns
lds
inc
fwait
outsl
xchg
test
outsb
fsubs
rcrb
cld
mov
adc
es
lods
inc
xchg
inc
sbb
arpl
adc
xlat
stc
cltd
mov
inc
shl
cmp
loopne
sbb
xchg
xchg
lods
outsb
movsb
test
dec
out
add
ror
scas
xor
loope
dec
sbb
subb
cli
jo
push
push
pop
std
dec
mov
jo
push
scas
aam
xchg
xchg
sbb
jne
int3
out
pop
std
dec
xor
adc
les
fimuls
adc
pop
loop
pusha
fsubrl
rorl
fisubrl
mov
sarb
xor
iret
in
and
mov
mov
pop
sub
imul
test
jl
jb
out
sbb
in
lock
lcall
stc
inc
xchg
sahf
jmp
inc
mov
sti
cwtl
nop
fisubrl
inc
movsl
add
add
sbb
ljmp
imul
xor
dec
jle
in
icebp
add
addr16
rcr
outsb
nop
mov
inc
jno
cld
push
test
or
or
dec
ljmp
lret
cmp
stc
cmp
sbb
in
ds
inc
jo
mov
xor
adc
enter
mov
inc
add
push
mov
std
test
loop
in
fbstp
sbb
in
pop
inc
dec
xchg
loope
lds
cli
movsb
cld
mov
pop
mov
cmpsl
js
mov
ss
and
mov
push
outsb
push
fisttpll
jnp
xchg
sahf
lcall
in
addr16
cmc
repnz
stos
pop
movsb
sub
mov
call
jbe
xchg
cltd
mov
movsb
inc
insl
in
jae
mov
xchg
xchg
stos
ss
outsl
push
clc
xor
add
xchg
lods
movsb
loope
call
mov
test
insl
or
xlat
fcomps
fbld
xchg
or
int
lock
jnp
mov
scas
out
frstor
push
add
cmc
jmp
inc
jp
or
sbbb
xchg
fcoms
inc
mov
lcall
mov
adc
dec
in
ret
sar
movsl
mov
mov
ret
mov
and
dec
mov
int
mov
pop
xor
mov
cmpsl
arpl
arpl
pop
mov
cli
pop
div
push
inc
faddl
orl
push
ljmp
xor
shlb
sub
out
aad
push
jns
add
into
scas
pop
loopne
es
dec
clc
es
imulb
movb
mov
add
sbb
add
lahf
add
imul
push
and
pop
into
insb
and
jmp
sub
movsb
out
sub
jle
dec
add
popa
enter
mov
jno
leave
mov
push
incb
sarl
xchg
jge
mov
add
mov
adc
shlb
pop
add
pop
or
mov
pop
in
jmp
xor
push
xor
jp
adc
in
ret
xchg
xchg
dec
inc
ljmp
pop
pop
dec
inc
out
add
in
dec
outsl
fnsave
mov
imull
loopne
outsb
into
fcmovbe
shl
inc
or
sbbl
ja
je
mov
aaa
addb
push
es
add
aam
lahf
push
pop
jl
mov
dec
push
inc
mov
repz
xchg
ss
pusha
and
mov
call
out
or
mov
cmp
inc
aam
xor
and
lret
sub
jecxz
movaps
jno
lods
movsw
mov
xor
fildll
in
xchg
fisubl
out
and
cmp
out
or
adc
leave
sub
mov
in
pop
mov
lret
std
hlt
xor
icebp
mov
stos
jo
add
icebp
mov
outsl
test
insl
mov
les
jp
dec
pop
pop
push
mov
je
xchg
lds
or
inc
fldenv
dec
nop
repz
arpl
or
jl
pop
mov
push
clc
sbb
sbb
push
mov
pop
jp
xor
push
icebp
test
mov
pop
shll
dec
push
xor
adc
xor
sahf
mov
in
jge
xor
aam
scas
divb
ss
clc
fsubrl
lock
ret
loop
mov
mov
push
insl
mov
sbb
ljmp
pop
or
inc
sbb
jmp
lcall
push
or
mov
mov
lret
insb
sub
mov
jb
add
dec
mov
adc
pop
test
jne
movsb
jg
jne
repnz
lret
fstps
mov
rcrl
inc
jb
mov
fwait
es
cmp
icebp
inc
orl
enter
jno
popf
in
pop
ja
and
mov
fnstsw
dec
fucomi
xor
sub
sbbb
es
aaa
pop
jle
inc
clc
cmp
andl
xchg
outsb
fsubp
mov
push
mov
inc
pop
xchg
pop
push
cwtl
loope
xor
dec
cmpsl
xor
mov
push
outsb
ret
adc
mov
vmovsd
mov
dec
and
out
hlt
popf
xor
or
mov
or
xorb
or
or
push
sbb
test
sub
inc
adc
repnz
mov
jmp
shlb
push
repz
push
sbb
call
mov
xlat
lea
inc
mov
push
dec
jo
call
cwtl
add
pop
lea
rcrb
jp
push
sub
jbe
pop
lock
ficoms
loope
mov
jp
xor
or
push
bound
lds
imul
jo
das
or
es
dec
sbb
xchg
mov
icebp
popa
inc
inc
dec
and
push
sbb
jmp
mov
test
mov
out
pop
or
in
sbb
shll
neg
cltd
fstp
inc
test
int
decl
sub
pop
and
lcall
or
out
jg
add
sub
adc
xchg
or
ljmp
xchg
loop
jbe
inc
daa
cmpb
dec
mov
nop
dec
lcall
insb
cltd
jae
cmp
js
push
or
sub
pop
jo
and
lcall
jl
push
daa
sub
dec
int
mov
stc
out
sub
in
adc
out
fsubl
xor
mov
mov
xor
bound
add
aas
insl
jae
mov
cmp
and
pop
outsl
rcrb
fmul
std
jmp
jno
mov
hlt
push
xor
cmpsl
lods
xor
mov
insb
xor
testb
fisubrl
and
push
or
push
int
add
test
ret
stos
mov
dec
mov
pop
orl
sbb
jbe
adc
fs
dec
jecxz
push
icebp
and
int
pop
test
mov
arpl
or
pop
mov
sahf
and
xchg
stc
in
push
std
cmp
push
div
xchg
dec
adc
jns
mov
lret
cmp
int3
shrl
add
push
fs
adc
int
shll
enter
arpl
cmp
cmc
xchg
insb
shl
push
pop
dec
cmc
outsb
inc
add
jne
mov
cmpsl
pop
sahf
mov
sahf
fists
out
adc
or
fbld
cmp
push
and
sbb
push
mov
jns
push
sbbb
xlat
push
data16
inc
lret
pop
xor
mov
adc
jmp
mov
insb
arpl
xchg
xor
and
xchg
mov
test
mov
dec
mov
movsb
repz
jge
ja
xor
sub
pop
sub
cmp
gs
sub
jl
mov
pop
mov
sub
xor
pop
movsb
filds
push
dec
mov
sbb
outsb
hlt
aaa
mov
ret
mov
dec
add
or
cli
push
pop
addr16
sbbb
sub
fcoms
push
stos
push
repnz
push
in
loopne
xchg
ficoml
inc
xchg
into
jnp
mov
nop
loopne
test
sahf
popf
imul
test
out
xchg
jb
clc
rep
ja
mov
loope
mov
xchg
dec
imul
and
rcl
jecxz
repnz
jecxz
ss
pusha
scas
aad
mov
dec
mov
lock
movsb
jl
cld
cmp
lret
enter
pop
cmp
sbb
sub
scas
notb
push
push
aaa
das
pop
fisubl
pop
pop
xchg
xchg
ret
ljmp
repnz
sarb
stos
add
sbb
nop
push
pop
jae
rcll
xchg
sub
dec
dec
rorb
pop
js
popf
cmp
sbb
aas
cmpsb
sbb
test
into
lods
mov
mov
jle
imul
add
xor
sbb
xchg
jecxz
dec
xchg
push
jecxz
popf
mov
imul
cwtl
push
into
xor
je
add
cmc
int
test
or
jmp
xchg
or
mov
fdivl
push
mov
adc
push
pop
cmp
leave
fldl
int
aam
pop
xchg
sub
ss
das
add
push
fldcw
push
push
pop
sahf
jmp
mov
or
loope
mov
cmp
std
stos
cmp
xchg
sbb
aad
xchg
imul
inc
adc
std
in
fidivrs
jge
xor
dec
outsl
sbb
cmp
ret
aad
inc
icebp
in
mov
les
cmpsb
or
int3
sti
stos
mov
inc
mov
iret
sti
fcoms
fcoms
fst
insl
sbb
rcrb
lds
sbb
sbb
mov
cltd
mov
notb
xchg
jge
test
jns
add
inc
add
mov
and
add
xor
mov
test
cld
xor
cmp
mov
arpl
mov
iret
xchg
aas
loop
shlb
cmp
in
xchg
pop
mov
mov
les
movsb
popf
push
rorl
mov
sbb
and
movsb
jbe
mov
fcoms
cltd
xor
fists
xor
xor
add
cmpb
xchg
mov
lock
rclb
les
xor
mov
aam
mov
mov
lea
mov
insl
fs
repz
mov
arpl
jp
cltd
xchg
sub
cwtl
jge
jmp
mov
imul
les
sbb
xor
outsl
in
inc
add
jp
inc
cwtl
push
fwait
push
sbb
icebp
fiaddl
sub
mov
add
fcomps
sbb
in
ret
cmc
jnp
je
sub
stos
and
pop
cmp
inc
lea
hlt
lods
xchg
pop
test
adc
cwtl
xor
adc
push
bound
leave
jg
push
fcmovu
pop
cmc
sub
mov
aas
inc
push
stos
mov
push
les
pop
or
outsb
clc
sbb
int
in
and
dec
jo
pop
mov
cltd
xchg
pop
gs
pop
es
cmpsl
adc
sub
arpl
sarl
ds
mov
mov
fidivs
sbb
adcl
xchg
mov
add
push
pop
frstor
cmp
adc
jno
xlat
dec
test
loopne
inc
idivb
and
mov
pop
jle
call
mov
sbb
cmp
dec
xchg
sbb
add
lds
iret
inc
adc
xor
pop
fdivrl
test
xchg
jns
adc
and
push
dec
xor
mov
jnp
std
fsubs
mov
imul
test
pop
sub
jg
pop
sub
inc
pop
insb
xor
sub
cmp
xchg
in
je
mov
cmp
mov
xchg
add
xchg
pop
cmp
pop
icebp
mov
add
mov
cmp
push
test
inc
rorb
das
jb
xchg
cmc
xchg
mov
xor
fldt
or
inc
push
mov
add
rclb
or
repz
xchg
jmp
cmpsb
mov
push
mov
jg
bound
aad
lret
add
mov
mov
cltd
push
lahf
imul
in
adc
mov
cmp
ror
sar
xor
icebp
mov
cmp
add
cwtl
nop
jle
push
jmp
push
mov
cld
cmpsl
mov
imul
sbb
call
adc
pop
xchg
ret
stc
inc
inc
pop
aaa
sbb
add
mov
inc
and
add
sahf
cmp
or
dec
fucomi
cmp
ret
jmp
dec
mov
adc
xor
pop
cmp
outsl
lret
mov
jae
mov
cltd
inc
add
pushf
or
cmp
xchg
loopne
adc
inc
pop
mov
mov
or
lcall
pop
mov
jae
mov
sti
or
rorb
sub
das
push
int
adc
es
dec
add
adc
or
inc
dec
lods
xor
popl
pop
test
cwtl
mov
xchg
enter
data16
mov
cmp
outsb
sbb
add
ja
sub
add
mov
ds
shlb
xor
insb
icebp
xchg
dec
subl
mov
icebp
inc
dec
jl
out
je
in
outsb
ss
xor
push
mov
push
ds
int3
cld
or
adc
lea
xor
aam
cmc
xor
xor
inc
test
dec
das
ds
stos
pop
test
pop
popf
out
cs
iret
push
sbbb
mov
movsl
add
ja
into
addr16
xor
mov
lods
ret
lea
loope
cmp
mov
mov
cmp
mov
aad
dec
shlb
jl
fcoms
add
out
xchg
stos
jecxz
and
add
dec
add
nop
mov
jmp
out
push
test
popa
lahf
xchg
dec
pop
jnp
adcl
push
xchg
dec
mov
add
loope
dec
popa
or
cltd
jnp
cld
push
out
ja
rcrl
xchg
das
adc
mov
imul
push
popf
xor
mov
mov
out
mov
sub
dec
dec
mov
test
push
pop
jecxz
sub
jle
add
iret
sbb
dec
je
iret
push
out
xor
inc
arpl
insb
push
or
lock
xor
icebp
pop
pop
gs
pop
jae
add
jmp
sub
stc
jmp
call
add
adc
movsl
inc
lods
test
lods
popf
cmp
rclb
sbb
sbb
dec
lret
pop
popa
scas
push
mov
bound
je
sbb
pop
fs
inc
lret
jo
fisttps
or
push
push
add
negb
push
leave
int
jae
daa
les
cltd
hlt
stc
mov
pop
bound
shll
fs
test
sbb
mov
test
xor
mov
sbb
shlb
dec
push
inc
sub
lret
subl
movb
and
xchg
fwait
xchg
jno
sbb
xchg
cmp
test
jecxz
sarb
and
fldcw
jb
test
mov
pop
sub
or
lret
pop
cmp
bswap
xchg
ljmp
lea
or
jb
add
xchg
cmp
aas
push
lock
cmpsl
sarb
mov
sahf
movsb
das
dec
in
ja
popa
jo
aad
sub
adc
int
push
add
lret
sbb
sbb
pop
xor
fstpt
loop
call
jl
outsl
rorb
or
daa
mov
and
clc
cmp
mov
insb
negl
jecxz
pop
xchg
mov
mov
push
mov
mov
and
push
insl
pop
rclb
mov
cmp
xchg
push
ficoml
cmpb
test
cld
mov
jne
cmpsl
scas
addb
xchg
pop
cmp
mov
mov
mov
sub
iret
cmp
lds
and
push
push
sub
xor
cmpsb
adc
mov
out
mov
xor
xlat
push
mov
xor
scas
jl
test
inc
xor
lret
sbb
pop
loopew
repnz
or
xchg
xor
adc
inc
cmp
inc
or
xor
add
push
dec
js
aad
lods
lea
push
popf
jns
iret
xchg
scas
mov
jne
mov
rol
mov
lcall
adc
adc
rorb
jbe
push
gs
in
inc
movzbw
stc
fldt
lret
dec
andl
sbb
cmc
clc
call
not
mov
hlt
adc
clc
lds
sarb
cmp
shrb
jecxz
mov
dec
pusha
xor
pop
push
movsb
out
jns
jmp
jo
lock
insl
and
icebp
cmpsb
push
fdivs
lret
lods
push
sbb
push
loope
orl
jb
mov
jnp
pop
inc
or
sub
add
mov
ja
clc
cwtl
mov
xor
or
mov
push
pusha
sbb
testb
jb
inc
mov
xor
scas
add
push
and
mov
movsb
pop
mov
or
test
xor
and
fidivs
xchg
aaa
shrb
out
mov
test
mov
clc
mov
xchg
lds
mov
js
adc
cmpsl
adc
int
adc
iret
push
pop
movsb
fstpt
cmp
ljmp
mov
loope
pop
dec
mov
nop
sbbb
xchg
sub
cs
nop
into
mov
out
xor
cld
cmc
adc
jne
jno
fdivp
daa
insl
nop
sub
xlat
call
mov
lcall
inc
pusha
mov
lock
icebp
xchg
or
sub
jg
icebp
out
mov
or
mov
sub
dec
sbb
mov
push
xchg
rcrb
push
int
andb
stos
jbe
fs
imul
add
jne
mov
adc
or
and
push
mov
pusha
movsl
xchg
int
dec
mov
jecxz
movsl
pop
sbb
inc
test
inc
sub
fisubl
aam
addr16
xor
popa
mov
iret
scas
dec
ljmp
cld
mov
jg
inc
sub
pcmpeqw
lods
inc
or
es
xlat
push
jge
jne
inc
sbb
push
aad
lahf
jns
sbb
lods
pop
fcoms
fldl
push
xor
jo
sahf
in
mov
popa
cmc
dec
inc
mov
pop
js
pop
adc
ficomps
mov
pusha
bound
ret
into
daa
daa
loope,pt
sarl
divl
jmp
sahf
test
sbb
xchg
cmp
out
nop
jl
xchg
jns
xchg
dec
xchg
bound
movb
mov
xorl
mov
mov
pop
mov
sarb
enter
or
popf
shrl
mov
bound
fstpt
es
dec
mov
test
inc
push
jmp
les
sbb
jle
iret
inc
cmp
sbb
inc
mov
clc
cltd
gs
and
jg
xlat
mov
stos
sbb
dec
xchg
icebp
xor
das
icebp
std
cmovnp
push
sbb
push
iret
inc
xor
insl
in
sub
mov
add
es
inc
xor
inc
dec
iret
and
dec
jne
insb
jmp
xor
xor
bndstx
pop
ficoms
and
jge
clc
enter
clc
push
and
mov
jae
rcll
cli
hlt
int3
mov
jl
loopne
ljmp
orl
xor
mov
fst
xor
lods
call
dec
fsts
enter
pop
movsl
add
int3
sub
shrl
dec
jg
out
adc
fistpll
mov
adc
fsubrp
dec
push
ds
pop
xlat
mov
data16
int3
jno
fdivrl
xor
cmp
int
xchg
xchg
cmp
mov
and
jnp
sahf
cmp
out
inc
mov
adc
xor
clc
js
cmp
call
fldcw
xchg
or
insl
enter
data16
je
mov
cld
and
sbb
or
jecxz
test
inc
cltd
sbb
pop
int
stos
inc
ret
gs
pop
mov
adc
pop
addl
mov
dec
sub
mov
push
push
loopne
pop
repz
mov
jbe
fwait
movsl
push
imull
pushf
popa
dec
push
mov
imul
and
and
cmp
mov
mov
xchg
js
ss
jmp
ficoml
xchg
or
inc
pushf
test
je
pop
nop
fsubr
popa
test
scas
mov
cmp
fcomi
pop
xor
aaa
cmc
add
pop
movsl
test
push
mov
and
lcall
jle
xchg
dec
ljmp
sub
mov
ljmp
sahf
addr16
pop
or
lock
ret
xor
mov
subb
add
pop
jnp
inc
ja
outsb
arpl
dec
pop
lahf
std
and
arpl
cmp
pusha
mov
popa
test
imul
fistpl
inc
popf
add
jnp
sbb
dec
daa
int3
fldt
jecxz
jb
dec
cmpsb
mov
mov
adc
adc
dec
mov
push
jbe
push
divl
pop
inc
xchg
enter
cmp
cmp
call
xchg
sub
pushf
and
int3
pop
jno
and
or
add
int
mov
sbb
cltd
dec
sub
pop
and
les
jb
push
fists
scas
cmp
xor
and
daa
lret
dec
gs
sbb
ret
ss
hlt
call
repnz
adc
cmp
cmp
in
sbb
daa
xor
mov
or
sub
inc
pop
lock
pop
stos
ja
ds
pop
fisubrs
cmp
mov
xchg
or
or
cmpsb
adc
push
push
nop
fs
enter
into
add
mov
pop
ljmp
dec
sub
test
les
sbb
rcrb
sbb
xor
and
push
mov
sub
inc
xchg
xor
pop
push
jno
push
xlat
aas
push
sbb
fcom
push
fs
cmp
xchg
daa
xchg
mov
mov
das
adc
cmp
sbbb
cs
cmc
add
daa
or
mov
xchg
and
adc
and
test
mov
push
popa
int
sub
imul
icebp
bound
sub
inc
dec
ret
cli
iret
outsb
and
push
mov
mov
insl
testb
aam
mov
adc
lock
push
jmp
lods
jne
jae
pop
xor
hlt
sbb
pop
pusha
dec
and
popl
jmp
inc
int
enter
xchg
inc
mov
testl
push
mov
jmp
bound
mov
or
bnd
mov
shlb
clc
popf
jg
std
push
fiaddl
mov
addr16
out
jbe
test
jb
and
mov
add
in
jno
sti
sbb
jne
jb
push
lds
sub
sub
add
mov
es
insb
and
push
test
sahf
ret
mov
inc
xchg
sahf
push
or
inc
pop
inc
lods
mov
adc
dec
pop
mov
xor
jne
push
pop
ja
push
in
iret
outsl
xchg
xchg
cmpsb
xchg
jae
jecxz
repz
test
inc
cmp
pop
add
call
mov
imul
jne
xor
sbb
lret
lcall
jge
loope
ficoms
dec
inc
sbb
sub
sub
outsb
cli
xor
stc
loop
ljmp
xchg
jle
push
adc
cmp
sub
pop
jno
mov
xchg
cmpsb
inc
aad
gs
sub
repz
pusha
das
xor
incl
pop
daa
into
icebp
sub
pop
xchg
pusha
mov
xor
call
xor
dec
shrb
mov
inc
lods
cmp
cs
jo
sbb
cmp
jb
mov
dec
ds
daa
lcall
clc
out
push
stos
lcall
mov
push
scas
pop
fs
out
out
add
fildl
je
mov
imul
pop
jne
insb
imul
sub
jmp
jl
lock
aad
pop
mov
fs
lock
xchg
fisttpll
pop
pop
dec
cmpsb
repz
test
std
lss
out
in
sub
mov
sbb
jns
jg
mov
aad
or
pop
insb
insb
jb
sbb
roll
or
add
cmpsb
cmp
andb
pop
adc
cltd
icebp
out
push
adcb
xlat
sbb
pop
ret
mov
cmp
cmp
orb
cmp
mov
ds
lret
push
dec
fwait
sbb
push
add
mov
push
push
xchg
jne
push
cmp
aad
xorb
push
mov
cmovle
fisubl
mov
push
sub
ret
xchg
loope
push
lret
mov
mov
cltd
insl
and
or
xor
lret
dec
mov
push
bound
mov
mov
and
sub
jp
xorl
cmp
cmp
lahf
pop
rcrl
xchg
nop
sti
cld
ret
ja
and
mov
adc
push
adc
lcall
sbb
xchg
movsl
nop
and
mov
and
aaa
out
mov
ret
push
ds
push
fldl
sbb
inc
in
jb
je
lds
mov
cmp
mov
lahf
push
mov
clc
mov
and
stos
call
mov
scas
pop
imul
mov
add
addl
mov
arpl
cmp
lcall
repnz
inc
test
std
sub
mov
cltd
pop
test
xchg
popl
xor
pop
mov
test
subb
and
xchg
outsb
sahf
js
xchg
das
cmc
test
test
bound
xor
mov
pop
addb
xor
test
mov
movsb
xchg
and
jo
or
pop
popf
add
adc
shld
mov
xchg
xor
fistl
xchg
xor
or
xor
dec
sbb
or
loopne
mov
push
scas
nop
sub
xacquire
das
repz
mov
cld
or
inc
cs
pop
lods
xor
out
xchg
pop
sub
inc
or
test
test
outsb
ljmp
add
mov
push
out
pop
add
cmpsb
fs
add
mov
xor
dec
nop
lret
mov
pop
insl
jle
ffree
inc
bnd
ds
mov
and
notb
mov
inc
pop
clc
pop
dec
pop
into
dec
xchg
lcall
jge
xchg
enter
pop
mov
jnp
stos
xchg
rcrb
das
test
xchg
add
sbb
mov
sub
adc
popf
mov
mov
repnz
lcall
inc
and
ret
in
adc
lcall
cltd
fists
xor
mov
aam
cmpsl
mov
add
sub
jmp
xor
cmp
adc
lret
ljmp
cmpsl
fmulp
jmp
xor
repz
lock
inc
lret
movsl
adc
adc
rcrl
ret
cmpsb
orps
sub
push
push
mov
insb
sub
sbbb
jnp
mov
add
sahf
add
adc
cmpsb
mov
test
mov
mov
aad
xlat
cltd
cwtl
out
cmp
sbb
add
shlb
dec
jmp
imul
movsl
cmp
pop
pop
push
lea
int
test
xchg
stos
lods
iret
out
cmp
add
mov
in
jne
and
and
mov
and
cmp
sahf
xchg
cmpsl
and
repz
xor
imul
cmpsb
adc
pop
xlat
xlat
std
xor
mov
imul
xor
lcall
arpl
mov
adc
adc
rorb
xchg
xchg
push
add
push
out
cmp
inc
fnstenv
ds
cmc
bsr
mov
sub
add
jge
xorb
dec
xchg
jg
jb
loope
jg
lret
test
fwait
adc
outsl
xor
aam
fldl
mov
mov
fdivrl
test
stos
arpl
mov
cld
mov
inc
xor
jp
enter
aad
mov
xor
pusha
ret
mov
addr16
and
insb
push
cld
inc
and
arpl
push
addb
jns
lods
loopne
inc
or
rorb
repnz
adc
out
mov
pop
dec
jbe
ljmp
addb
dec
jae
pusha
test
aaa
jns
repnz
ror
adc
loop
sub
scas
mov
push
inc
pop
or
pop
es
mov
lock
jno
jbe
mov
ja
imul
daa
pop
dec
cmpsl
adc
jmp
cmp
push
call
sbb
mov
cmp
and
xlat
mov
sbb
int
pop
repz
dec
and
mov
scas
aad
leave
mov
movmskps
stos
mov
jl
rcrb
adcl
daa
popa
xor
dec
fcmovnbe
xor
leave
scas
sub
fisttpl
or
cld
stos
ljmp
ljmp
push
mov
scas
push
in
xchg
scas
sbb
mov
dec
sub
cmp
in
pop
sti
xchg
xchg
lret
xchg
add
in
push
xor
loope
inc
shlb
inc
enter
lock
jge
outsb
jae
repnz
loopne
mov
cltd
scas
rcrb
rorl
std
stc
cmpsl
scas
nop
adc
popa
inc
outsl
fldl
jb
jp
lods
ds
pop
cld
pop
aam
cli
push
cwtl
sub
cld
inc
fwait
loope
movsb
cli
into
sbb
or
fcoml
fldenv
jnp
xor
lock
mov
add
movsb
icebp
xchg
icebp
mov
dec
inc
in
push
add
push
mov
push
sbb
loopne
cltd
loope
sub
adc
bound
cwtl
aas
leave
lret
insl
xlat
ret
pop
arpl
std
sbb
cwtl
pop
das
push
dec
mov
imul
gs
stc
inc
xor
addr16
adc
and
testb
in
push
pop
jns
or
shlb
sbb
mov
insl
sub
jmp
sub
aaa
mov
mov
cli
xlat
and
xor
xor
jmp
inc
pop
pusha
rcrb
int3
or
stos
aam
mov
inc
mov
fs
adc
fisubrs
mull
xor
mov
add
mov
data16
je
hlt
dec
repz
insb
cmpsb
js
cmp
mov
jmp
fs
xor
imull
mov
fistpl
stos
inc
xchg
and
adc
jb
jno
pop
ds
jb
pop
lods
in
clc
mov
in
cwtl
inc
dec
mov
in
lahf
repz
add
inc
lock
jbe
scas
lea
mov
mov
movsl
mov
and
push
insl
movsb
xchg
outsb
jl
xchg
sti
pushf
in
adc
dec
es
and
fsubrp
mov
pop
shll
jbe
into
mov
out
lahf
je
jg
adc
jge
pusha
and
pop
cmp
xchg
push
scas
cmpsl
movsl
push
std
sbb
in
mov
popf
sub
jbe
inc
fdivs
out
sub
jp
repz
pop
shll
imul
mov
repz
loope
or
je
enter
sub
mov
sub
stos
mov
out
sbb
xor
pop
mov
mov
mov
xchg
inc
in
aaa
push
movsb
jno
inc
xchg
rol
ja
xchg
mov
nop
mov
pusha
roll
xchg
xchg
pop
sub
or
lahf
icebp
mov
jmp
loop
fstps
sub
xchg
push
inc
sub
fs
jmp
lods
rclb
out
and
aaa
ljmp
dec
mov
ljmp
shlb
or
in
push
es
cld
test
out
out
shll
and
andb
sub
aad
cmp
jecxz
stos
addr16
adc
mul
lds
dec
mov
imul
ss
rol
gs
or
movsb
aaa
sbb
mov
in
cmp
dec
loop
data16
mov
repz
xchg
pop
das
test
dec
xor
add
cmpsl
mov
repz
insl
pushl
fnstsw
outsl
jne
ss
jge
sub
sbbb
push
jle
jne
scas
xchg
pop
scas
inc
inc
sbb
in
pushf
das
or
jne
pop
aad
jae
lods
loope
inc
jp
nop
clc
push
xchg
cwtl
ljmp
lods
test
push
adc
int3
outsl
adc
xchg
dec
xor
push
fimull
jae
sub
sub
cld
mov
sub
inc
add
inc
cltd
in
dec
inc
jbe
mov
cmpsb
mov
ljmp
and
pop
std
push
or
insl
and
fisubs
mov
clc
jmp
push
mov
ljmp
xlat
popf
pop
shl
loop
push
sti
sub
fstpt
sti
les
dec
mov
addr16
and
loopne
popf
add
int
add
adc
dec
add
dec
cmpb
leave
jmp
lret
jmp
stos
scas
mov
adc
sub
out
fs
push
xor
and
mov
fists
or
fsubp
movsl
addr16
xor
stc
add
lret
jp
lea
xchg
mov
call
dec
add
jb
jne
in
int
fs
xchg
inc
sub
sti
rorb
mov
mov
jg
sub
xchg
add
ret
idivl
data16
outsl
and
cmpb
ljmp
ss
insl
pop
imul
popaw
repnz
notl
stos
inc
push
mov
sbb
push
push
sbb
xor
sub
adc
mov
dec
pop
mov
loop
jmp
and
cmpl
fistpl
jl
jmp
in
cmpsb
lret
cmp
add
push
mov
sub
sbb
cmp
test
mov
movsl
mov
aaa
xlat
mov
xchg
mov
cli
dec
inc
loopne
sbb
scas
jo
cs
sub
jnp
adc
scas
mov
ret
sub
daa
push
icebp
lds
xchg
push
jae
adc
and
push
fimull
or
adc
in
or
imul
fs
inc
out
stc
pop
popl
push
lea
std
dec
cmp
lahf
scas
and
push
popl
ud2
dec
je
pushf
testb
clc
and
lahf
aaa
pop
sar
pop
push
or
xchg
iret
mov
push
and
jge
fisttps
jbe
fwait
push
test
or
int3
out
int3
movsb
inc
jns
jns
sbb
mov
lock
loop
lcall
nop
dec
lods
sahf
mov
lea
xor
inc
rolb
xlat
out
cltd
push
stc
int
inc
push
xchg
movsb
into
mov
adc
lods
fcmovu
loop
clc
push
adc
je
mov
insb
iret
mov
aas
push
stc
mov
repnz
shlb
ja
add
push
jns
shlb
dec
xchg
xchg
repz
inc
xor
mov
stos
iret
ja
sbb
jge
scas
mov
lods
imul
mov
cltd
aam
cmp
shrl
ret
dec
xor
aad
or
mov
add
jp
test
push
xchg
xor
test
pop
mov
mov
xlat
pop
xchg
movsl
adc
dec
movb
int
std
pusha
sbb
mov
popa
xchg
mov
inc
jge
cmpsb
jecxz
push
pop
pop
mov
paddsw
fdiv
shrl
pop
aaa
test
xchg
jg
or
adcl
pop
jecxz
inc
add
xchg
rcrb
jge
stos
icebp
arpl
insl
pop
loopne
ret
nop
xor
or
lcall
imul
movsb
outsl
sbb
inc
in
mov
mov
into
in
daa
aad
jo
inc
mov
test
inc
xor
xlat
push
and
addr16
adc
andl
leave
pushw
mov
push
dec
or
negb
scas
mull
mov
loopne
test
aaa
mov
pushf
pop
mov
xchg
call
movsl
mov
dec
xchg
jmp
sbb
mov
pusha
in
cmpsl
fcomps
js
and
fdivrl
in
jle
pushf
fildl
insl
cmp
out
sti
subb
lds
je
dec
push
inc
lcall
sub
dec
xchg
add
push
sub
add
inc
pushf
add
fisubs
out
nop
clc
mov
lea
outsl
ja
adc
inc
mov
lret
or
hlt
pop
out
mov
lea
mov
jmp
dec
ja
add
sbb
push
sub
nop
cld
sti
sbb
jge
mov
pusha
in
ljmp
cmp
call
sbb
push
xchg
mov
ss
test
aam
jge
adc
addr16
mov
jle
cmp
add
or
rcr
and
sub
push
pusha
loope
fnstcw
ret
xchg
out
mov
stc
xchg
and
pop
mov
sub
sbb
ja
mov
lcall
mov
stos
mov
imul
push
in
push
roll
push
mov
sub
jl
inc
arpl
pushl
jmp
adcl
test
stc
cmp
rolb
xchg
add
test
gs
loopne
dec
shlb
sub
pusha
adc
add
jg
lock
out
dec
ret
fadds
adc
in
xor
xchg
ds
xor
dec
inc
cmc
or
and
stos
arpl
push
jge
and
cmpsl
xor
adc
push
and
inc
jl
push
scas
jo
add
and
inc
mov
or
pop
jmp
mov
cmp
sub
int3
mov
adc
nop
decl
cmpb
mov
cmp
or
das
mov
in
jbe
pop
push
sub
push
sub
push
and
sbb
iret
cmp
or
xchg
stos
jae
pop
jnp
cmp
jl
in
loop
mov
gs
orb
pop
pop
insb
and
or
dec
into
pop
and
bnd
xchg
or
cmpsl
imulb
mov
mov
dec
int
jae
lahf
mov
iret
scas
add
pop
pop
jb
cmp
enter
hlt
pop
out
push
pop
loope
sbb
xor
clc
sarb
lcall
cmp
sbb
addl
mov
pop
add
sti
loope
mov
lcall
scas
mov
push
rcll
shl
js
push
jnp
mov
pop
jl
xchg
es
int
jae
aam
inc
hlt
dec
arpl
in
movsl
add
das
addr16
xchg
push
mov
mov
in
outsb
pop
je
mov
icebp
and
adc
sub
je
pop
lret
and
ljmp
mov
cmp
cltd
enter
xor
sub
add
shll
fstpl
pushf
in
pop
ljmp
pop
ss
cmpsb
movsb
push
xlat
adc
aam
or
pusha
out
dec
test
push
add
pop
fldcw
pop
sbb
pop
jmp
daa
add
data16
insl
mov
jns
inc
mov
push
jp
sbb
fcmovne
dec
cmp
insb
cmpsb
insl
jmp
cmp
mov
jmp
aad
pop
lret
in
dec
adc
push
jg
decl
ja
daa
in
scas
and
addl
in
jmp
add
pop
mov
jb
iret
sub
dec
jmp
dec
push
shrb
ja
jb
loope
pusha
dec
inc
or
xchg
mov
and
sbb
roll
jno
or
dec
add
popf
lds
icebp
dec
int3
jmp
jp
fwait
mov
mov
fsubrl
pop
cmpb
mov
jg
push
loopne
inc
inc
mov
lock
hlt
insb
ret
inc
fmuls
lret
test
test
sub
rorb
jge
dec
inc
lret
xchg
sti
xlat
roll
sahf
jae
xchg
rcrb
imul
shlb
push
addr16
aas
sub
cmp
push
call
pop
adc
cmp
mov
out
das
ret
arpl
cmpsl
lahf
inc
ljmp
jmp
addr16
nop
xor
adc
mov
sbb
and
mov
lea
int
inc
fcoms
push
push
cli
pop
xor
insl
pop
push
dec
cmp
mov
das
test
loop
div
pop
frstor
es
and
sbb
insb
adc
and
xor
xchg
adc
insl
imul
fldl
into
sbb
test
repz
sub
ds
fnstenv
addb
outsb
pop
das
sbbb
dec
imulb
add
cmpsl
addl
mov
jbe
sti
loopne
xchg
js
vmulsd
cli
imul
in
daa
and
cmpsl
jno
gs
push
and
hlt
loop
jecxz
add
out
orb
mov
mov
xchg
leave
cld
call
inc
inc
xchg
cmpsb
xor
jne
cmp
movsl
repnz
paddw
mov
inc
xchg
dec
cwtl
add
stc
fs
jl
xchg
or
daa
cs
subl
mov
sub
push
lea
inc
popf
cmp
adc
xchg
lcall
xchg
xchg
jl
push
adc
mov
and
scas
dec
push
cmp
adc
lret
fcoml
xor
nop
inc
imul
inc
int
mov
jmp
lret
xlat
rcrl
adc
jo
imul
mov
mov
in
jecxz
mov
lret
data16
push
mov
fs
mov
add
fldenv
or
stos
ja
mov
pop
das
test
adc
inc
sbb
sbb
ljmp
testb
mov
lods
popa
imull
push
scas
xchg
push
push
gs
test
sub
push
cmp
xchg
lret
sub
lahf
ja
popa
sbb
test
mov
and
xchg
mov
bnd
ret
or
adc
push
mov
sbb
jnp
std
mov
sahf
outsl
pop
adc
imul
sahf
shlb
stos
fwait
je
xor
lods
repnz
or
add
mov
mov
les
outsl
push
roll
fldl2e
loopne
and
into
fisubs
and
inc
mov
cmp
mov
push
jecxz
sahf
inc
jns
add
or
int3
cmp
xor
rcrb
sahf
sbb
xchg
shl
adc
sub
sahf
shrb
int
scas
imul
xchg
jp
mov
fidivrl
sarl
push
mov
aas
aaa
addr16
insb
add
jo
push
scas
fnstcw
add
fmul
mov
outsl
je
xor
out
mov
mov
repnz
pop
sub
push
push
andb
pop
lret
imul
push
jmp
lods
test
test
push
pusha
mov
shr
cmp
jb
jl
outsb
cmp
movsl
mov
cli
or
pop
cmp
les
out
repz
dec
stos
inc
adc
stos
mov
push
sbb
push
push
pop
aad
out
push
int3
push
xor
daa
jae
mov
sub
xchg
js
data16
punpcklbw
xchg
aam
fwait
call
out
cmp
into
or
mov
jne
jne
arpl
push
mov
sub
ljmp
mov
jns
push
sbb
mov
fisubl
mov
jne
dec
lods
ja
mov
xor
hlt
lods
jb
adc
sub
js
jo
xchg
clc
xchg
or
push
mov
or
pop
and
addr16
mov
ss
jmp
add
ljmp
xchg
jle
rcrl
adc
mov
lret
sbb
xchg
mov
xchg
pop
mov
xchg
dec
fs
or
jne
int
out
dec
mov
cwtl
cmp
out
adc
pushf
test
mov
adc
fistpll
push
fcoms
mov
das
cmc
push
jbe
in
mov
push
out
dec
mov
ds
lods
aad
test
mov
or
imul
outsb
dec
bound
nop
add
aam
pop
jge
mov
add
mov
mov
cmp
or
es
xchg
mov
insb
in
testb
pop
push
cmpsb
int
fisttpll
mov
and
test
jns
es
imul
lods
xchg
push
mov
mov
cmc
mov
es
das
repz
aas
rep
dec
in
pop
ds
rclb
pop
outsl
aad
cmp
mov
imull
xor
mov
inc
push
xchg
daa
sub
aam
push
scas
int3
arpl
rcrb
inc
push
loopnew
jb
xchg
dec
jge
mov
sbb
xor
ss
addr16
icebp
xchg
add
pop
or
out
cmp
and
mov
lret
repnz
sub
cmp
pop
mov
rorl
fwait
popw
push
js
xchg
lock
and
dec
loop
jo
dec
jecxz
sub
and
lods
loop
dec
push
adc
add
aad
pop
adc
push
test
pop
ret
js
xor
push
stc
push
daa
enter
mov
jg
or
xchg
sbb
orb
loope
repz
call
ljmp
inc
leave
or
dec
xchg
aam
xchg
lret
or
add
adc
mov
jbe
neg
add
hlt
addb
xor
jns
lret
aas
fs
aaa
xchg
cmp
add
add
vandnps
mov
mov
jle
and
pop
ret
out
add
sbb
sub
lods
leave
jbe
rcrb
into
adc
lods
testb
inc
mov
aam
mov
fs
mov
mov
dec
and
push
add
loop
mov
sub
hlt
lock
inc
add
inc
pop
imul
dec
xchg
js
mov
cmp
es
push
fwait
sub
sub
int
testl
and
add
icebp
jne
icebp
fdivrl
jae
insl
xor
incl
imul
in
stos
xor
cmpsl
xchg
jl
out
aas
repz
test
test
loope
repnz
mov
out
cmp
jns
xchg
xchg
cmpsl
xor
stos
sbb
shll
testl
aaa
xor
jae
cltd
mov
jo
cs
xlat
mov
pop
xchg
imul
icebp
xchg
mov
jge
movsl
xlat
adc
out
shll
add
jp
inc
add
sbb
or
es
scas
push
pusha
jne
lods
fnstenv
mov
mov
inc
das
sub
in
repz
test
jbe
xchg
cwtl
sub
lock
sahf
or
insb
test
lahf
pop
inc
push
mov
pop
das
cli
sbb
xchg
inc
sahf
sub
pusha
pop
shl
cld
push
and
cmp
push
cmp
sub
cmp
punpcklbw
mov
pop
loope
sub
or
inc
mov
sub
cltd
test
sbb
test
xchg
fstl
xor
shll
in
icebp
outsb
mov
dec
std
faddl
mov
loopne
sbb
movsl
add
sahf
jg
push
jno
or
mov
pop
jg
jmp
rcll
arpl
outsb
jge
sub
cmp
jnp
subb
popa
movsb
xor
ret
idiv
or
ss
cmp
sbb
sahf
cmp
dec
loope
inc
sub
insl
addr16
lock
pop
jge
rcll
bound
int
jns
or
and
add
mov
push
loopne
inc
bound
mov
add
lds
xchg
and
cmp
ds
shrb
jne
pop
dec
out
scas
rolb
fwait
int3
lods
lcall
sbb
mov
sub
in
in
ret
pop
into
sbb
xor
and
jbe
shrl
jne
addr16
xor
pop
jecxz
add
inc
aad
jne
test
sbb
shl
fsubs
sbb
fbld
int3
ds
sbb
add
lea
dec
sub
sbb
inc
adc
push
incl
and
mov
les
xorb
stos
adc
fxch
cmp
out
sub
loope
jg
jb
and
scas
stc
adc
in
out
xchg
sarl
popf
lcall
outsl
push
push
lret
ficoml
lea
xor
pusha
adc
push
sahf
negb
mov
aaa
shll
xchg
push
pop
incb
mov
repnz
mov
int
sti
or
aas
mov
lods
xchg
jl
cs
and
xchg
lret
enter
je
testb
mov
cmpsb
mov
in
cwtl
not
lret
ja
or
in
dec
ljmp
shlb
shr
js
fbstp
xor
xor
add
inc
js
imul
pop
pop
mov
or
mov
xchg
or
cltd
xor
mov
dec
dec
in
jne
clc
lahf
mov
std
je
lret
sbbl
add
cmp
push
jne
pop
adc
fwait
scas
in
jne
jg
pop
ljmp
push
mov
xchg
or
fld
cs
xor
imul
pop
mov
lods
mov
adc
dec
dec
xchg
dec
popf
stos
mov
je
push
fxch
jno
insb
adc
movsb
mov
xor
fdivrl
popa
dec
xchg
scas
jecxz
movsb
inc
mov
or
es
xchg
mov
inc
outsl
jmp
cld
push
mov
imul
cmpsb
pusha
daa
outsb
jo
test
dec
outsb
dec
sahf
sbb
in
inc
clc
ss
clc
mov
xor
sti
arpl
enter
addr16
pop
imul
or
das
mov
fdiv
mov
test
push
inc
push
scas
mov
xchg
inc
call
lret
mov
fidivrs
loopne
mov
jmp
xchg
push
inc
iret
rcl
mov
int3
notl
scas
sub
add
sub
aaa
int3
cmove
pop
int
pop
pop
hlt
pop
enter
push
push
cmp
aad
mov
mov
sbb
sub
mov
stos
leave
stos
arpl
sub
pop
push
lret
std
aam
and
scas
sub
xchg
sbb
popa
dec
rcrl
ret
ds
outsl
std
dec
mov
cs
cmc
pop
xor
mov
and
rorb
push
sbb
mov
mov
adc
xor
add
pop
push
lahf
add
inc
pushf
mov
pop
or
push
rcrl
jno
cmpsl
hlt
adc
or
jne
inc
xchg
jge
cwtl
imull
jnp
lock
adc
fisttpll
dec
sub
mov
add
adcl
pop
out
jge
mov
aad
xchg
pop
mov
cmp
sbb
sbb
aas
dec
inc
arpl
push
jp
cmc
xor
std
cmp
mov
loop
mov
out
sti
out
xchg
inc
pop
aad
div
or
repnz
adc
cmp
sti
pop
sahf
or
pop
int3
inc
not
jno
jbe
jnp
lahf
fstpt
and
pop
mov
outsb
scas
or
roll
add
cmpsl
sbb
pop
jb
gs
xor
sub
movsl
and
sbb
xchg
add
pop
lods
cmp
xchg
jmp
dec
inc
scas
mov
outsl
mov
mov
stos
mov
lret
jnp
push
pop
scas
pop
stos
pop
push
scas
psrad
data16
add
pop
sub
sbb
mov
dec
adc
cmp
xchg
fsubrs
popa
jne
xchg
ror
pop
and
aaa
and
hlt
mov
divps
test
pop
rcrl
sti
cmp
sbb
punpckhdq
mov
pop
xchg
inc
scas
call
mov
out
jge
es
test
or
mov
fisttpl
lock
fistps
xchg
divb
clc
pushw
stos
int
jp
std
or
out
loop
push
lods
movsl
daa
sub
sti
out
in
and
sub
cmc
or
out
jae
fnstsw
icebp
inc
in
pop
test
cmpsb
xchg
gs
roll
sub
lds
adcb
cmp
inc
or
enter
push
or
mov
and
into
pmullw
mov
cmp
pop
mov
test
inc
imul
adc
aaa
sbb
sbb
scas
in
pop
jmp
push
mov
xor
cli
mov
test
enter
jnp
cmpsl
arpl
popf
sbb
in
xchg
cwtl
idivw
aam
jnp
sarb
mov
shll
push
mov
lret
and
hlt
das
xchg
ret
scas
pop
adc
mov
repnz
imul
int
inc
insl
inc
pop
fsubrl
test
sub
int
js
jno
push
out
mov
mov
sarb
dec
jge
cmp
lods
ja
pusha
push
xchg
jp
fld1
and
insb
mov
pop
rcrb
aaa
dec
xchg
ljmp
and
rcrl
lods
lock
dec
mov
xchg
fcmove
or
negb
cmc
dec
into
cmp
loopne
cmpsb
mov
mov
adc
dec
cltd
xor
daa
xor
or
sbb
sahf
jns
mov
add
ret
adc
jb
imul
push
iret
sub
cs
mov
inc
fsubr
adc
sbb
push
mov
or
xor
jae
mov
cmp
or
mov
and
pusha
cmp
repnz
and
pushf
inc
nop
cltd
mov
mov
frstor
insb
insl
lahf
jbe
enter
lcall
sbb
js
mov
fstpl
xor
mov
jl
inc
mov
scas
lret
adc
inc
adc
sub
in
bound
xchg
mov
push
cli
or
mov
gs
pop
push
xchg
fldt
xchg
notl
pop
jns
adc
in
dec
mov
pop
jmp
sbb
add
jno
repz
aas
cld
fbstp
cmp
icebp
in
adc
bound
bound
jns
shl
push
xchg
xchg
dec
addb
scas
mov
lds
cmc
popa
jne
enter
repnz
adc
pushf
je
cli
das
cld
dec
sbb
adc
xlat
jne
dec
pop
fwait
test
mov
and
push
and
divb
mov
test
pop
push
les
push
insb
in
ret
push
jne
fadd
or
push
lahf
inc
mov
dec
enter
dec
addr16
punpckhbw
lcall
dec
adc
shrb
sub
xlat
add
push
ljmp
lock
inc
mov
int
cmp
scas
xchg
aas
icebp
ds
fcomp
jge
insl
movsb
in
push
pandn
loope
jns
out
mov
jmp
pop
insb
outsl
shlb
jnp
add
lock
hlt
loope
pop
pop
dec
sbb
sti
push
popa
mov
push
pop
add
movsl
pop
lock
push
mov
mov
mov
stc
lea
mov
roll
push
mov
insb
push
lods
jle
or
aas
lock
adc
fbstp
ret
xchg
mov
outsl
push
push
adc
ud1
adc
mov
add
int
mov
push
fisttpll
pop
pop
pop
movsl
adc
fnstsw
mov
lods
enter
inc
xor
lock
aaa
add
or
adc
pop
repz
mov
push
pushf
daa
std
notb
sub
cmp
mov
cmpsb
out
fmul
dec
jbe
stos
clc
or
jle
mov
pop
mov
lcall
dec
lods
mov
cwtl
stc
xchg
rcll
mov
mov
pushf
lds
pop
mov
fadds
pop
mov
sahf
mov
notb
sub
push
pop
jbe
mov
and
idiv
aam
ret
fistpl
mov
dec
stos
xor
mov
in
loopne
jne
dec
hlt
outsb
sbb
fwait
adc
out
and
sbb
jno
js
mov
sti
lcall
les
fisttpll
nop
mov
mov
jnp
push
stos
or
cmpsl
pop
dec
flds
pop
jle
mov
cmc
es
enter
aam
incl
mov
loop
test
mov
mov
pop
push
xchg
test
in
adc
add
sti
lea
rorl
jle
adc
test
pop
negl
inc
data16
enter
insl
into
inc
pusha
adc
push
ret
ret
lods
out
jg
mov
mov
xchg
xor
jecxz
hlt
les
xor
and
dec
lds
lea
ss
cmpsl
jmp
lret
outsb
jge
arpl
jmp
cmp
and
sub
inc
sbb
lods
push
fs
aam
lds
loope
mov
punpckldq
adc
jp
mov
add
sbb
scas
jne
imul
bound
and
jp
addl
sbb
dec
stc
stc
push
arpl
mov
mov
mov
add
mov
ljmp
and
inc
push
and
adc
aad
shlb
ja
outsl
dec
fldt
jns
or
cmpsl
mov
nop
adc
xor
std
scas
nop
or
movsl
pop
cs
shlb
push
jns
sbb
mov
and
add
mov
scas
mov
xor
lods
jbe
loopne
pop
pop
add
sub
pop
clc
in
loopne
pushf
add
adc
ljmp
enter
int
mov
xor
orb
ret
mov
dec
in
or
imul
sub
das
mov
iret
fcoml
pop
mov
xchg
outsb
mov
and
roll
mov
xchg
push
fbstp
and
cmp
popf
xor
mov
adc
out
jge
push
insl
jae
dec
mov
lods
scas
add
mov
lock
pop
js
pusha
sbb
int3
pushf
js
and
push
dec
std
cli
sahf
jno
test
pop
xor
outsb
dec
shrb
xor
mov
cltd
fs
or
mov
inc
loopne
mov
sbb
lea
sbb
adc
in
imul
xchg
dec
hlt
shr
mov
rcrb
shl
or
dec
mov
jp
xor
cmpsl
lret
jp
push
xlat
out
stc
or
insl
iret
jae
cmpsl
sbb
jo
fs
inc
pop
dec
idivl
pusha
div
jle
jle
imul
int3
jge
movsl
mov
sub
hlt
rcrb
cmpsl
loope
push
mov
popa
shrb
ss
xlat
stc
lods
adc
ljmp
arpl
add
cmp
xchg
jecxz
mov
sahf
jne
push
jg
fadds
mov
and
shr
in
xchg
sti
cmc
mov
ficompl
roll
lret
fldcw
sbb
ds
shl
fucomip
sbb
movsb
cmc
pop
aas
je
gs
out
mov
test
test
xor
aam
lds
ds
xchg
out
xchg
iret
std
loope
mov
mov
dec
mov
mov
jg
neg
push
in
imulb
add
je
mov
mov
add
adc
mov
in
cmpsb
ss
fnstcw
mov
aas
repz
push
rcll
jge
inc
cmpb
das
mov
pop
dec
out
not
test
sbbl
fsubp
dec
cs
repnz
dec
add
sbb
fisttpll
rcl
xor
movsb
in
mov
inc
fs
mov
jns
ljmp
rclb
es
mov
mov
inc
loope
and
and
adc
or
in
out
xchg
adc
loope
mov
sub
leave
imul
adc
rcll
cli
xchg
andb
insl
mov
popf
roll
nop
ret
xchg
in
into
cmp
scas
addb
inc
jp
cmpsb
jl
cmpl
mov
xchg
popf
shl
leave
lock
add
mov
in
loope
idiv
das
inc
or
dec
sbb
or
or
xchg
movsb
cmp
aas
pop
push
xchg
cmp
push
repz
arpl
add
orb
sahf
mov
sub
repnz
rolb
idiv
fneni(8087
loopne
inc
sub
rol
stos
mov
enter
jle
sub
jmp
cmp
fwait
mov
test
cmp
scas
lret
mov
cmp
pop
cld
cs
int3
sbb
pop
lcall
mov
mov
fmuls
jne
xor
fcmovnu
mov
outsl
pop
loopne
stos
sbb
data16
mov
xor
jo
dec
xchg
add
enter
ja
aaa
mov
mov
mov
jae
loop
add
out
inc
lcall
push
and
and
cli
xorl
shll
test
lret
jg
stos
add
nop
sarb
cs
pop
jb
in
fwait
add
xchg
test
dec
and
mov
pop
roll
and
add
push
pop
stc
test
popl
hlt
in
sbb
aad
imull
pop
add
fistps
dec
sub
out
daa
mov
fmull
push
cmp
mov
scas
jg
mov
aam
nop
mov
mul
popa
pushf
scas
adc
int3
sub
xorb
fsub
cli
ds
ja
test
imul
mov
adcb
mov
fdivrl
mov
xor
sub
mov
pop
and
out
stos
cmp
cmp
test
ja
mov
mov
out
pop
jne
int3
std
imul
and
inc
lock
shl
cld
pushf
aaa
lcall
mov
out
decb
loop
jl
imull
and
sub
adc
lahf
out
pop
mov
rcrl
push
xchg
loopne
loope
sbb
mov
jp
mov
xchg
cltd
pop
xchg
pop
sub
rolb
movsb
out
out
inc
cld
mov
xor
dec
popa
push
sub
lret
xor
arpl
scas
repz
insl
nop
loope
cmp
mov
push
data16
add
mov
cvtsd2ss
int
aad
addr16
lock
std
lret
popf
lds
xchg
pop
je
mov
xor
and
notl
mov
xchg
cmp
inc
mov
ljmp
xchg
push
push
inc
cmp
push
jo
inc
fiadds
aad
sub
inc
rcl
negb
mov
sub
adc
push
jl
adc
fidivl
loopne
mov
outsl
push
ds
jae
add
stos
mov
push
push
add
jnp
xchg
jge
scas
adc
js
pop
xor
push
jo
push
popf
icebp
sbb
stos
ljmp
pop
push
pop
mov
pop
movsl
pop
sbb
xor
xchg
cltd
dec
adc
sti
movsb
ret
xor
xchg
cld
mov
pushf
mov
mov
repz
add
adc
daa
push
push
xchg
popa
repnz
das
test
aas
and
mov
adc
out
jbe
scas
stos
push
enter
sbb
sub
bound
hlt
mov
fistpll
pop
xchg
shll
jo
push
sarb
loope
popa
addr16
mov
out
mov
jle
lods
push
fstpl
pop
pop
fsts
ljmp
or
push
das
je
mov
or
popw
sub
mov
sub
call
inc
sbb
jp
xchg
pop
aad
les
js
pop
popa
jns
clc
negb
lods
outsb
out
adc
adc
xor
push
test
xchg
cmpsl
adc
inc
jmp
pop
arpl
push
jge
faddl
pop
fnstcw
mov
out
and
mov
mov
adc
sub
lret
scas
outsb
mov
add
cli
jp
sbb
xor
js
fidivs
pop
mov
jae
fldl
add
repnz
cmp
pusha
pop
or
mov
jb
pushf
dec
pop
fcomps
mov
lahf
xchg
mov
icebp
out
in
inc
push
mov
or
xchg
dec
pop
dec
push
add
in
cmp
loopne
stos
fistps
jg
out
mov
dec
xor
dec
lret
jp
dec
mov
inc
addb
in
sub
inc
test
out
lcall
lea
fcoml
add
sub
adc
sub
push
xor
sub
in
mov
xchg
inc
push
notl
dec
sti
les
add
or
dec
test
push
into
imul
int3
icebp
popl
push
push
fsubs
push
ja
in
cmpl
lds
enter
dec
xchg
add
inc
xor
jp
xor
xchg
sar
arpl
outsb
shlb
ds
es
cmp
cmp
mov
xor
or
cmp
test
sbb
outsl
cmpsb
xchg
dec
sbb
stc
add
testb
mov
or
jmp
or
fildl
jmp
fisttpll
mov
lods
adc
testb
dec
and
cmp
inc
and
pop
je
ds
in
xor
mov
imul
jl
mov
sub
jmp
inc
or
mov
movsb
sbb
jbe
push
adc
adc
fldenv
je
in
mov
testl
inc
cmp
ficompl
into
fcompl
jne
xlat
xchg
imul
stc
inc
sub
mov
stos
or
aas
lret
std
into
cld
les
mov
lret
pop
int3
cmp
lret
add
outsb
cmp
mov
jbe
xor
add
imul
stc
shll
les
xchg
dec
ja
and
out
scas
lods
pop
jns
inc
adc
pop
cs
pop
ficoml
lret
test
stc
lret
mov
push
pop
iret
test
sub
xchg
aad
je
out
cmp
jl
les
jnp
test
xlat
push
nop
cld
mov
mov
jno
jno
adcb
mov
ss
push
nop
add
and
pushf
mov
pop
into
out
insl
ror
outsb
add
dec
jns
xor
push
pop
repnz
loop
jmp
mov
xor
mov
into
out
test
imul
mov
mov
jne
and
test
int3
movsb
les
aam
adc
mov
mov
nop
bound
scas
rcl
loope
rorb
mov
out
or
dec
mov
idivb
js
push
popa
aam
inc
scas
clc
adc
mov
popa
cmp
mov
imul
inc
jbe
mov
ds
aaa
fisubl
pop
mov
pop
push
loope
loopne
clc
int
lods
ficompl
loope
jb
sarl
pcmpgtb
jmp
push
and
adc
mov
inc
ret
lock
jle
cmp
add
inc
in
cmpsl
daa
sub
mov
mov
adc
and
dec
jns
mov
sub
fisubrs
aad
lods
adc
test
sbb
xor
js
mov
popf
movsl
push
pop
inc
cs
cltd
xchg
mov
adc
outsb
repz
inc
mov
mov
mov
hlt
sti
mov
movsb
sbb
loope
pop
mov
mov
sbb
and
inc
mov
xchg
xor
int
xchg
out
cld
and
dec
pop
xor
inc
aas
inc
push
loope
jg
lret
add
call
xor
fimuls
cmpsl
add
test
loop
inc
xor
lea
daa
dec
scas
clc
dec
fs
mov
pop
call
jnp
data16
adcb
aad
shlb
inc
inc
and
mov
push
insb
fstp
movsb
lock
lods
sbb
xor
and
sahf
dec
pop
shll
in
ret
dec
cmpsb
daa
push
je
pop
aas
notb
jl
cmpl
lcall
xchg
ljmp
push
dec
insb
mov
mov
cmp
in
xchg
ja
push
push
testl
popf
iret
mov
push
mov
lods
push
dec
mov
bound
mov
xchg
imul
mov
aas
xchg
sbb
data16
xor
stos
iret
sub
fcompl
clc
in
or
lods
inc
negl
call
mov
mov
jl
int3
mov
cld
jecxz
ljmp
jb
xlat
ret
pop
leave
mov
dec
and
js
bound
adc
fucomi
nop
jbe
shl
testl
push
mov
dec
addr16
in
test
dec
ficomps
sbb
scas
and
fwait
out
jge
sahf
rol
scas
and
cli
and
arpl
shrb
dec
dec
test
cmp
fs
push
xchg
xor
pop
sbb
inc
icebp
mov
adc
jle
insl
cs
pop
push
lret
rcrb
sub
out
rep
lahf
cwtl
cmp
daa
sbb
xor
jnp
enter
dec
popa
daa
js
sahf
nop
push
mov
imul
push
decl
lret
aad
dec
shlb
js
fidivs
xchg
cmp
cmp
sub
jno
addr16
jge
mov
sub
sbbb
lret
movsb
push
sarl
xchg
pop
xchg
cltd
sub
jb
pop
out
xlat
push
pushf
xor
pushf
cli
out
dec
lahf
dec
pop
push
mov
mov
pusha
dec
mov
mov
add
push
test
mov
or
in
or
mov
das
dec
inc
lahf
cs
mov
pop
fcomps
test
sbb
cmpsl
mov
sub
notl
data16
ret
call
daa
sbb
lahf
pop
clc
push
mov
and
stos
out
cwtl
out
loopne
mov
push
in
push
pop
fldt
cli
cmp
push
sub
repnz
into
add
add
pop
push
frstor
enter
or
sub
sub
into
xchg
test
xlat
jl
cs
std
dec
cmp
test
movsb
add
lock
rorb
jae
aam
pop
push
pop
mov
add
push
xchg
push
inc
pop
dec
xchg
adc
mov
rolb
dec
repnz
das
test
insl
sbb
daa
imul
aaa
test
sahf
test
xor
adc
and
inc
aas
bound
gs
jb
fdivrp
loop
fnstenv
out
push
mov
add
jl
dec
in
arpl
or
popf
pop
mov
lea
lcall
in
test
inc
sub
add
mov
jmp
popf
add
push
pop
repnz
addr16
loopne
fdivrl
and
and
push
ret
fdivrs
pop
mov
rolb
mov
push
pushf
decb
xchg
sub
lods
mulb
dec
test
xchg
push
mov
and
push
cmp
sub
shlb
idiv
mov
push
mov
pop
std
jne
push
and
popf
dec
push
movsl
mov
mov
jge
jae
int3
pop
pop
lahf
scas
imul
std
mov
inc
loop
mov
sub
ja
xor
call
inc
mov
popa
enter
pushf
in
jns
inc
xchg
sbb
sub
call
loop,pn
dec
sub
fmuls
imul
mov
push
push
pop
fmul
shll
mov
dec
sub
in
mov
lock
cmp
sub
jmp
adc
ss
cmp
mov
dec
insl
mov
xor
rcrb
jp
addl
xor
cld
or
push
fisubl
or
sbb
push
icebp
call
dec
cs
orl
cmc
popa
dec
add
pop
inc
movsl
sbb
call
lods
fcmovnb
ja
lods
sub
or
push
dec
push
jo
stos
fadds
lods
xor
xchg
sub
dec
mov
das
pop
lock
sub
sbb
mov
pushf
sar
test
jle
call
js
cmc
imul
mov
cmpsl
jmp
fsubrs
rol
ljmp
inc
xlat
mov
mov
das
into
lcall
packuswb
xlat
sbb
fsubrl
ljmp
sti
je
adc
hlt
push
dec
inc
dec
loop
pushf
pusha
xor
xchg
fdivs
rclb
mov
mov
jmp
jbe
ja
sub
in
outsb
sbb
movsb
mov
pop
lret
jbe
sbb
clc
lret
loop
inc
mov
nop
lcall
ds
cmpsb
cmp
dec
mov
adc
xchg
cmpsl
stos
mov
out
add
add
mov
loope
mov
sub
pop
movsl
jne
int3
in
mov
and
aaa
in
pusha
into
cmp
ret
add
mov
sub
xor
sbb
add
das
xor
inc
insl
jp
jno
pop
xadd
xchg
in
stos
movsl
mov
cmpl
cli
xchg
mov
mov
ret
daa
xchg
xor
enter
movsb
pop
aas
xlat
mov
in
sbb
and
fildl
popf
lods
pop
push
mov
jp
adc
xchg
add
sbb
lahf
negl
mov
add
shll
and
fidivrs
icebp
stos
imul
enter
iret
inc
cmpsb
call
add
arpl
lret
push
fs
dec
frstor
cmp
or
pop
lret
loop
je
shrb
cmpsl
jnp
xor
loopne
jp
push
sub
push
adc
inc
aam
cs
mov
or
inc
sub
dec
fdivrs
lahf
lods
movsl
mov
ret
divb
pop
xchg
fucom
pusha
push
or
neg
jmp
out
xor
mov
fnstsw
lods
mov
sbb
cmpsb
test
or
adc
ja
cmp
xchg
repnz
out
pop
sub
pop
sub
inc
clc
push
lods
xor
aaa
pop
jno
jno
movsl
test
push
jg
daa
test
fidivrs
imul
cli
mov
sub
push
cmpsl
adc
std
pusha
jbe
pop
scas
dec
ja
ds
inc
dec
xor
mov
pop
cwtl
sub
jge
stc
rorb
pop
into
addr16
mov
jecxz
mov
in
jp
xor
test
out
sub
or
ret
mov
mov
repnz
test
lods
add
sahf
es
pop
loop
adc
inc
insl
shlb
pop
into
push
cltd
in
jge
hlt
out
inc
insb
xchg
shll
or
shll
jmp
lret
fbld
scas
adc
ss
shlb
or
fwait
dec
push
jo
ror
pop
out
std
ss
pop
push
cwtl
call
test
sbb
aad
adc
repnz
and
and
in
jnp
pop
pop
push
aam
and
shlb
adc
jbe
cs
lret
xlat
mov
sti
sarb
mov
cli
mov
mov
cs
add
fwait
ds
sub
popf
add
cli
mov
gs
add
or
rorl
stos
ds
mov
xchg
aad
inc
mov
inc
or
inc
sar
xchg
xorl
ss
in
ljmp
push
repz
xor
lods
call
or
ljmp
out
adc
push
sub
mov
test
aad
sub
scas
xchg
or
jo
mov
fsubrp
push
je
or
das
or
lods
or
xchg
std
movsb
inc
imul
xchg
push
push
sbb
lret
out
jg
addb
icebp
xor
inc
rolb
leave
mov
or
dec
mov
je
push
ss
adc
add
mov
ss
and
sbb
daa
std
and
stos
stos
data16
negb
mov
imul
mov
rcr
cmp
sbb
mov
test
adc
sbb
xchg
gs
out
cmp
pop
in
loopne
pop
inc
and
xchg
push
out
add
movsb
mov
and
jbe
mov
lret
addb
xor
push
gs
aad
mov
stc
add
mov
dec
mov
lretw
popf
cmp
push
cmp
cli
das
push
iret
jns
sbb
xor
add
sub
jmp
sub
xor
and
mov
pop
pop
lods
xchg
jnp
or
sbb
mov
cwtl
push
inc
mov
mov
dec
sub
xchg
xor
adc
mov
cmp
jno
jno
gs
outsb
or
test
arpl
cmp
cs
in
arpl
out
mov
aad
ficompl
mov
aad
and
js
inc
xlat
jnp
test
lock
jne
jge
stc
out
xchg
arpl
jnp
aaa
mov
sub
jmp
imul
mov
fcmovnu
and
cmp
out
fisttpl
test
xchg
sbb
stos
jbe
sub
dec
dec
test
imul
and
out
add
outsl
push
ja
ljmp
and
sub
push
fdivr
xchg
stos
dec
pop
adc
fstpt
pop
mov
pop
xor
push
dec
xchg
scas
enter
out
aam
xchg
xor
inc
mov
push
leave
inc
adc
jo
icebp
lds
mov
cli
loopne
rolb
and
push
stos
js
sbb
lds
stos
jp
sub
mov
scas
mov
dec
mov
push
pop
fnsave
sub
cmp
xchg
mov
xchg
xlat
aas
sbb
out
and
dec
mov
test
dec
mov
jo
mov
scas
lcall
xchg
out
jg
into
data16
mov
sub
imul
mov
call
rcr
lock
aam
or
push
sub
popf
lret
cmp
mov
jl
and
mov
rcll
roll
mov
xchg
pop
call
inc
aas
xlat
pop
xor
rol
push
and
stc
sbb
jle
pushf
jg
addb
test
inc
pop
scas
pushf
inc
jle
or
ds
xchg
das
xchg
or
outsl
push
dec
push
in
pop
add
xor
sub
ljmp
pushf
pop
shlb
mov
das
rorl
sbb
scas
adc
pop
lcall
xchg
arpl
dec
mov
sub
jp
ljmp
loopne
int
andps
xor
adc
loope
push
pop
pop
sub
repnz
or
std
lret
xchg
insb
and
ficoms
push
lock
scas
push
stos
xor
inc
mov
mov
lcall
leave
pushf
xchg
outsb
mov
out
lds
mov
negb
movsl
sbb
dec
push
push
inc
movsb
pop
push
mov
in
ss
jno
sbb
jns
movups
lahf
add
mov
add
cs
in
dec
push
sbb
add
add
in
mov
test
xchg
out
xchg
push
lcall
loope
clc
sbb
fstps
push
cmp
push
push
xchg
adc
call
jno
scas
fisttps
or
mov
aas
std
out
pop
inc
test
shr
outsb
fisubrs
nop
xchg
dec
jae
enter
std
aaa
insl
mov
pop
and
sub
in
adc
adc
adc
pop
jecxz
lea
mov
dec
mov
inc
xor
lahf
out
mov
fmuls
xor
das
add
adc
int
out
xor
mov
inc
push
cwtl
adcb
sti
cmpb
popf
in
aas
xchg
mov
xchg
cs
mov
fisubrl
adc
cmc
nop
xchg
sub
jle
imul
sti
fimuls
and
and
lock
cmpsb
sbb
nop
icebp
mov
push
std
popf
jns
jns
xchg
push
adc
add
out
and
into
adc
push
jbe
xor
push
das
fwait
push
daa
mov
add
pop
dec
mov
jg
dec
leave
sub
dec
mov
jp
adc
cmp
xor
popf
pusha
mov
adc
mov
out
test
pusha
or
popf
inc
xor
aam
inc
adc
in
dec
inc
aas
jg
cmpsb
movsl
pop
movsl
jmp
fcomps
mov
mov
hlt
mov
ds
lock
cmc
out
mov
loop
inc
sbb
sub
loope
out
shll
and
rolb
hlt
cmp
pusha
shll
jg
and
adc
mov
enter
push
mov
mov
fucomip
in
xchg
into
push
xchg
jmp
fcoms
lods
or
xchg
arpl
and
scas
mov
test
xor
cltd
out
jno
fucom
push
add
movsb
add
ficomps
sub
add
mov
dec
sarb
cmpsl
inc
pop
xchg
add
pop
pop
aam
mov
xor
dec
fwait
addr16
push
xchg
test
xchg
pop
repz
mov
nop
pop
mov
jl
pop
xchg
loop
push
shr
sbb
clc
push
cmp
xchg
call
or
mov
xchg
mov
aam
orl
and
jne
ds
lret
xor
mov
pushf
xorl
lret
ror
or
jns
and
pop
mov
and
pusha
cmpsl
leave
xchg
sbb
push
dec
mov
inc
add
addr16
in
inc
jnp
cltd
inc
push
mov
sub
test
pusha
push
aaa
out
or
dec
and
nop
inc
cmp
sub
and
dec
cmc
jp
pop
inc
add
gs
mov
cli
outsl
psrld
out
js
adcb
sub
xchg
and
ljmp
push
das
jo
lds
popf
sbb
pop
fcoml
das
pop
pop
xchg
xchg
mov
sahf
mov
loope
stos
lods
pop
lock
jne
mov
and
inc
sbb
aas
lret
push
cmp
ss
mov
ds
fdivr
adc
loope
sub
mov
mov
outsl
aad
mov
arpl
sub
in
test
sbb
sbb
lret
xchg
xchg
pop
pop
cwtl
rcrl
sbb
mov
xchg
xchg
pop
ret
in
fwait
adc
and
push
cmp
mov
push
pop
sbb
jno
adc
int
mov
int
fsubl
xchg
mov
out
je
aam
scas
sti
lahf
pop
test
xchg
mov
adc
addr16
in
arpl
icebp
ja
lods
dec
iret
xchg
incl
outsl
out
mov
lcall
icebp
lret
xchg
shl
ja
and
cli
xor
jl
lret
insl
xchg
xchg
jp
mov
hlt
and
fs
jge
fcmove
jmp
push
dec
in
leave
ljmp
dec
push
test
repz
sbb
rcrb
clc
insb
push
ror
lds
sahf
notl
inc
inc
or
sti
push
stos
fdivrl
mov
lds
mov
adc
icebp
mov
jmp
loope
int
insl
inc
mov
fisubrs
cmp
insl
pusha
sub
or
pop
enter
sub
ret
lods
xchg
pop
pop
lret
lcall
or
cli
push
das
ljmp
sbb
in
push
fidivrl
sahf
jne
lods
jne
jno
and
mov
pop
imul
dec
repz
cmp
movsl
mov
mov
andl
lcall
rcr
xchg
inc
inc
sub
cli
mov
daa
push
mov
pop
cmp
hlt
je
mov
ret
xor
mov
jbe
mov
pop
out
divl
mov
and
xor
dec
push
mov
push
sub
pop
lds
dec
repnz
jnp
jne
and
cmp
inc
mov
dec
dec
inc
push
mov
pop
mov
popf
cmp
jl
out
lret
loope
repnz
js
cltd
mov
inc
cmp
mov
pop
rcrb
lea
test
lds
arpl
adc
pop
insb
add
out
or
fmull
arpl
jns
bound
jp
or
and
xor
add
push
pop
pop
pop
adc
lods
shlb
test
pop
mov
popf
aaa
cmp
pushl
popa
mov
ljmp
xchg
mov
xchg
xchg
jmp
dec
mov
add
and
int
cmp
dec
js
mov
cmc
xchg
ja
popa
pop
and
rorl
jmp
into
mov
add
push
repnz
add
into
xor
jno
cmp
mov
js
adc
ss
dec
pop
xor
cld
lods
add
cmp
sbb
lret
pusha
fidivrs
cmp
arpl
or
sahf
ret
pusha
imul
sbb
xchg
ds
das
push
js
jno
jb
lret
inc
out
or
mov
adcl
ja
std
aad
adc
inc
in
movsl
sbb
in
pop
ret
inc
inc
in
jecxz
les
mov
fisttpll
lea
xchg
lock
lret
mov
dec
shl
mov
inc
jae
xchg
ds
cmp
arpl
cmp
lods
iret
fidivrs
push
insb
sub
cmp
faddl
cmp
push
jo
loop
mov
icebp
mov
or
push
sub
mov
outsl
add
add
movsb
cmp
mov
pop
mov
add
fucomp
cmpsl
mov
outsl
and
dec
jmp
movsb
idivb
inc
data16
xchg
shlb
and
or
decb
hlt
daa
imul
enter
dec
dec
mov
xor
jnp
and
dec
add
or
jmp
in
push
mov
xchg
aam
jne
and
inc
xor
pop
imul
jecxz
sbb
cmpsb
out
xor
jmp
cmpsl
pushf
pop
jl
xor
cmp
sarl
icebp
push
inc
sarb
rcr
xchg
leave
sub
fiadds
subb
dec
add
ds
jle
xchg
enter
mov
mov
mov
push
sbb
xorl
push
aad
add
lcall
sub
pop
mov
lock
xor
adc
pop
hlt
jle
sub
daa
fs
push
ja
into
xchg
jecxz
ljmp
xchg
dec
mov
mov
adc
xchg
lret
into
add
insb
fs
push
dec
mov
mov
inc
xchg
dec
rorl
jmp
cmpsl
mov
ror
xor
fldt
adcl
lods
inc
xlat
jne
cs
lret
sbbb
adc
test
add
fcompl
aaa
pop
jbe
sbbl
cmpl
xchg
lret
xor
or
dec
ljmp
push
ds
std
sbb
inc
sub
out
and
mov
and
jne
out
mov
shll
aam
sub
arpl
mov
lock
in
ljmp
xor
sbb
je
insl
mov
xor
cld
mov
les
mov
bound
je
arpl
jae
add
inc
jecxz
loop
mov
std
sbb
aad
cmp
lret
adc
les
mov
lock
xlat
or
adc
mov
jl
ss
jmp
mov
push
xor
xchg
mov
xor
and
sub
ja
mov
mov
mov
xchg
les
push
sub
ds
cmpsl
pop
out
adc
adc
stos
mov
mov
pushf
push
mov
leave
pop
xchg
inc
xlat
cltd
mov
scas
xchg
lds
adc
addr16
add
sbb
pop
adc
les
cmp
iret
sub
push
push
insb
popa
nop
lcall
pop
test
jle
add
fstpt
fcmovnb
fmul
mov
cld
rcl
dec
adc
sbb
or
cmp
mov
sbb
pop
xchg
rolb
jb
ret
inc
sbb
sbb
cmp
cmpsl
inc
pusha
std
lret
sub
add
insl
ficoml
setl
jb
pop
mov
imul
inc
sahf
and
xlat
scas
mov
idivl
xchg
push
sub
or
clc
je
xor
add
lcall
mov
ss
aad
push
outsl
mov
xchg
sbb
xchg
jae
int
mov
imull
sbb
mov
movb
ss
sub
clc
push
jg
dec
push
mov
in
aas
jle
xchg
or
xor
pop
cmpsl
mov
sub
bnd
xchg
int3
imul
jb
ret
and
int3
mov
jmp
add
out
push
stc
mov
inc
lea
and
add
mov
les
sbb
rolb
jo
ljmp
jecxz
or
jne
jbe
sub
aaa
inc
xchg
movsb
ds
jnp
shrb
add
fdivr
pop
jmp
aas
inc
mov
out
lds
shrb
lcall
inc
pop
mov
js
arpl
repnz
or
cwtl
pop
je
push
xor
movb
inc
mov
cmp
and
push
cmp
xchg
jb
ret
daa
cmp
sbb
andb
popl
push
or
dec
lret
add
add
inc
add
scas
mov
push
inc
inc
in
xchg
lds
repnz
outsb
cli
pop
into
das
adc
imul
xchg
adc
icebp
icebp
loope
ds
test
pushf
in
xor
movsb
js
arpl
or
jnp
add
mov
mov
mov
nop
adc
mov
inc
repnz
jns
and
jecxz
addr16
sub
xchg
dec
out
pop
xor
or
scas
sbbb
popa
push
fwait
mov
popf
movsl
cmp
pusha
add
in
popl
inc
xchg
pop
and
adc
sub
fildl
xchg
or
js
xchg
xchg
pop
or
sub
sahf
lret
sbb
sub
lods
scas
in
lret
and
rcl
xchg
cmpsl
jle
and
pop
dec
pop
pop
outsb
sbb
push
and
xchg
jns
jne
sub
jne
cltd
test
rorl
mov
add
push
fdivrs
jns
fldl
or
push
mov
mov
lock
rorl
mov
xchg
xchg
ja
mov
sub
rcll
mov
mov
aas
xchg
push
xchg
or
xor
jmp
mov
bound
push
in
add
mov
xor
xlat
daa
shrl
insb
adc
lods
push
and
add
add
insb
sub
stos
mov
test
push
shr
pop
outsl
xor
mov
insl
xor
das
mov
aaa
pop
xor
adc
int
jg
pop
imul
lret
mov
mov
stos
and
adc
rclb
stos
dec
sbb
mov
jmp
xor
aaa
jg
mov
jp
lret
xlat
push
sbb
pushf
or
jno
arpl
or
insb
cmpsb
xchg
addb
cld
mov
jne
xchg
daa
pop
in
movsb
mov
rcl
mov
dec
jne
and
bound
sbb
out
fwait
xor
test
adc
jl
ret
out
sub
mov
mov
pop
push
aaa
sub
cmp
addr16
daa
lahf
decl
movsb
mov
aas
scas
dec
stc
adc
xchg
and
loop
add
xchg
lcall
icebp
clc
xor
int3
lret
add
add
dec
dec
outsl
sbb
pusha
xorl
push
xchg
xlat
ret
clc
notb
fs
lret
aam
leave
xor
adc
xchg
jo
adc
pop
leave
xor
test
cmpsl
inc
out
sub
push
into
jbe
les
mov
rorl
push
mov
test
lods
int
and
test
loopne
test
sub
cmp
aad
or
arpl
push
xor
jb
decb
imul
adc
push
adc
aas
push
insl
mov
int
or
add
pop
fisubrl
call
inc
add
jg
aas
cmp
cmp
test
pop
imul
or
les
aam
and
cmpsb
adc
mov
pop
lds
popa
jmp
test
pop
and
cli
add
daa
aam
cs
pop
aad
adc
sahf
les
lcall
aad
push
in
in
or
frstor
fcoms
fs
inc
imul
fidivs
pop
inc
sub
dec
call
jbe
lea
ja
je
insl
popf
pop
or
push
negb
loop
ret
popf
xor
mov
cwtl
add
xchg
or
lahf
xlat
enter
cmpl
dec
inc
lods
push
stos
arpl
dec
mov
mov
push
sbb
lret
dec
repnz
pop
sbb
cs
arpl
and
das
jbe
test
xchg
insl
push
cmpb
cmp
adcl
and
adc
adc
addr16
cs
mov
int
js
inc
lahf
mov
aaa
push
pop
and
xor
mov
sub
and
jge
and
leave
xchg
lret
cmp
or
cld
cmp
xor
rcl
in
jnp
out
cmp
adc
nop
xchg
xchg
popf
je
fistpll
inc
leave
jg
or
daa
test
shll
fldenv
fs
jne
add
xchg
pop
xor
cltd
sbb
adc
push
mov
lock
or
ljmp
push
imul
mov
test
pop
mov
push
cmp
pop
xor
jne
mov
out
sub
pushf
jns
sub
ss
data16
pop
sbb
xchg
daa
stos
popa
mov
inc
xor
pushf
inc
inc
jecxz
mov
xor
mov
mov
mov
add
pop
push
cmp
mov
push
sbb
lods
push
jle
dec
pop
xor
fildll
fwait
insl
mov
jecxz
inc
les
push
mov
loop
sbb
sub
mov
loop
jle
test
cli
mov
add
xchg
imul
and
inc
adc
inc
xor
or
mov
sti
cld
movsb
mov
sub
and
in
lret
int3
and
xor
sbb
nop
adc
lret
repnz
and
lahf
cld
cmp
cli
xchg
mov
pop
outsb
xchg
shrb
cld
and
lock
jg
out
loop
pop
leave
sahf
ret
mov
sti
shrb
sub
or
ret
lret
cltd
rcr
pop
add
inc
push
hlt
popf
fsubs
mov
aaa
add
pop
adc
ss
jmp
popa
movsb
call
mov
inc
cmpsl
mov
aaa
testl
jbe
dec
insb
mov
filds
xchg
pop
fcoml
lock
pop
cs
jl
adc
dec
dec
push
and
add
std
ret
push
mov
xchg
xchg
pop
push
xor
shr
test
shrb
outsb
fisttpl
pop
fwait
dec
pop
daa
lea
push
aad
fistl
or
ja
inc
repnz
cmp
andb
insb
add
lea
scas
xor
cs
push
push
push
ret
aam
jne
testl
add
clc
fstps
lahf
push
mov
lcall
data16
inc
fdivr
pop
rclb
out
dec
mov
push
push
out
sbb
xlat
insl
push
leave
cmc
mov
mov
or
movsb
lock
aas
mov
xchg
addr16
rdpmc
push
sti
mov
jp
jp
dec
jnp
fistl
sbb
js
in
xchg
mov
lcall
daa
jne
enter
push
into
fisubs
and
mov
jno
sarl
xchg
xor
xchg
scas
push
aad
jecxz
sbb
mov
rolb
aas
sbb
inc
cs
les
lahf
mov
dec
popa
add
sbb
push
dec
aam
fbld
push
xlat
pop
je
in
mov
mov
out
cltd
sub
xchg
mov
daa
je
inc
movsb
sub
cmc
jnp
sub
aaa
jmp
shrb
test
fcoml
arpl
pop
in
orb
popf
pop
popf
mov
test
lods
push
mov
sbb
ja
xchg
mov
xchg
roll
mov
push
in
xchg
das
and
inc
adc
inc
jne
pop
repnz
testl
out
dec
leave
jb
push
dec
pop
test
sbb
sub
orl
inc
adc
mov
or
mov
nop
push
and
add
cmp
xor
or
and
cmp
lods
dec
std
imul
ds
xchg
mov
mov
mov
and
sbb
sbb
lcall
iret
cmp
add
sub
and
push
dec
cmp
push
std
pop
fsub
push
xor
pusha
pop
pop
inc
jbe
lods
pop
stos
mov
sbb
xor
cmp
repz
ds
xor
fadd
sub
and
and
and
jno
sahf
jo
or
mov
test
mov
fistpll
jb
push
push
inc
dec
mov
mov
dec
stos
mov
xchg
stos
scas
out
jno
push
in
cli
aaa
daa
mov
popa
clc
xor
std
mov
int
sbb
cmp
sub
leave
lahf
bound
negl
adc
fbstp
mov
movsb
cmp
fs
getsec
add
ljmp
mov
cmp
loope
jnp
cld
pop
xor
adc
imul
iret
in
mov
out
cs
sar
pop
push
add
xor
jnp
add
xor
cmp
xchg
clc
jnp
ja
jecxz
jns
push
adc
xchg
jnp
out
dec
jle
and
adc
hlt
mov
ljmp
pop
test
or
inc
sub
icebp
sub
int
mov
sub
mov
xchg
sbb
sub
lods
pop
test
mov
add
clc
stos
out
adc
or
xchg
sub
scas
leave
es
bound
inc
push
in
repnz
ret
mov
xchg
jbe
pop
cmpsb
js
mov
hlt
xchg
mov
push
inc
cltd
or
or
pop
inc
cmovge
dec
push
subl
cli
dec
lock
mov
push
cmp
fs
nop
popa
outsw
adc
pop
stos
adc
in
mov
mov
into
sbb
dec
adc
outsl
pop
and
push
xor
add
mov
std
push
lahf
jmp
lcall
jbe
mov
xor
push
stos
fiaddl
test
and
andb
gs
sub
xor
pop
push
or
push
pop
xchg
out
xor
mov
adc
int3
movsl
pop
push
inc
mov
inc
xorl
cmp
pop
and
lcall
test
sub
aas
dec
cmp
pop
inc
test
cmp
into
xchg
out
das
mov
inc
adc
pop
jge
es
fcoml
xchg
pop
jg
fisubrs
lock
add
cmpsb
or
out
mov
addl
mov
pop
and
sub
inc
jae
mov
add
adc
loope
dec
sub
xlat
sub
in
lahf
outsb
bound
into
lea
decl
mov
push
inc
inc
push
mov
and
sbb
pop
cli
jae
sub
clc
xor
test
nop
mov
mov
or
mov
and
inc
imul
call
xchg
add
sbb
xor
push
pop
decb
mov
mov
xorb
lcall
mov
pop
sub
jl
push
cmp
sub
mov
rolb
inc
inc
or
cmp
sbbl
cld
jmp
lcall
fwait
add
xor
sbb
loop
xor
xchg
adc
enter
dec
mov
xor
loop
or
push
push
fcmovbe
dec
cmp
dec
sbb
ficoml
inc
int3
bound
stos
cmp
dec
adc
push
roll
xchg
mov
fdivs
je
ror
iret
sbb
add
clc
icebp
test
test
int3
xchg
lock
nop
mov
stc
dec
mov
filds
push
fldl
test
ret
add
ret
push
hlt
jb
data16
pop
ss
jmp
iret
xor
inc
js
bound
xchg
cmc
lock
int
cmp
ficompl
pusha
mov
loop
movsb
fisttps
cmp
xor
notl
lods
loope
int3
in
pop
gs
loope
xchg
cmp
lcall
mov
idivl
mov
fimull
xchg
xchg
xlat
inc
mov
int3
push
mov
add
rep
test
mov
xor
out
movsl
les
aaa
jnp
sub
jno
xchg
xor
mov
lods
push
push
popa
xchg
repnz
pushf
xlat
ret
sbb
sbb
jo
sbb
addl
pop
es
dec
pushf
in
sbb
cmp
mov
mov
xor
scas
cwtl
loop
mov
out
mov
mov
jmp
push
imul
push
jmp
jecxz
sub
mov
xor
pop
imul
mov
insl
or
mov
repnz
adc
jae
ret
cmp
xor
daa
xor
adc
add
iret
or
or
rcrb
lds
outsl
lods
pop
sub
cld
or
out
ret
jge
inc
and
sub
iret
cli
xor
sbb
adc
add
rcrb
push
pop
sbb
rorl
cmpb
cmpb
dec
push
rcll
addr16
adc
fs
rcrl
adc
ss
arpl
and
jns
mov
dec
xchg
imul
xor
lcall
adc
lds
sti
shlb
fucomip
int
stc
push
or
pop
lret
popa
adc
jb
dec
mov
xchg
sbb
mov
fdiv
testl
mov
cltd
sub
dec
fwait
pop
shl
mov
jo
sbb
sbb
inc
xor
es
sbbb
mov
fnstcw
add
repnz
hlt
ds
mov
xlat
mov
daa
daa
aad
inc
adc
pop
sahf
movsb
lahf
xlat
or
mov
inc
out
leave
outsb
filds
xor
out
fidivl
pop
scas
movsl
cmc
popa
insb
cltd
or
xchg
push
jle
add
fildll
push
or
adc
lret
inc
inc
lahf
outsb
mov
pop
pop
das
popa
addr16
idiv
sub
jno
xchg
xor
push
mov
scas
imul
insb
clc
in
addl
les
or
stos
push
cmp
nop
iret
shll
sub
adc
repz
dec
orb
dec
pop
rolb
and
addr16
iret
sub
repz
dec
mov
jb
insb
addr16
push
int
mov
shr
mov
adc
stc
sub
or
push
pop
mov
insl
pop
mov
xlat
jge
adc
into
push
das
movsb
aas
pusha
xchg
adc
pusha
mov
mov
adc
jbe
cmpsl
clc
insl
jle
jmp
xor
jnp
and
adcl
inc
and
pop
je
lds
and
daa
test
mov
movsl
mov
jb
jbe
and
push
dec
xchg
mov
mov
cli
popa
jb
cmp
fnstsw
shlb
imul
dec
addr16
xor
imul
pop
lret
cmp
mov
shll
sbb
xchg
fldenv
lahf
popf
or
std
jo
sar
lods
jp
enter
and
dec
ljmp
adc
pop
push
pop
pop
sbb
sbb
push
push
imul
pop
outsb
cmpl
inc
pusha
pop
xchg
or
mov
insl
dec
mov
xchg
les
shl
sub
mov
sbb
call
lock
shlb
xor
mov
mov
pop
dec
icebp
and
add
out
or
mov
sti
dec
leave
cli
adc
mov
out
cld
arpl
idivb
sub
mov
cmp
sub
cmp
dec
jg
mov
and
mov
inc
xchg
mov
addr16
jae
int3
inc
scas
call
mov
dec
sarb
xchg
mov
adc
dec
sub
scas
popf
out
inc
lahf
inc
popf
outsl
sbb
mov
out
mov
xor
test
mov
ljmp
or
jns
jecxz
inc
call
add
les
cmp
idiv
adc
xor
bound
adc
insl
fcoml
adc
sub
cmc
cs
push
xor
cmp
cmpsb
jo
and
push
adc
cmovae
push
and
xchg
mov
mov
sub
insb
daa
or
add
lahf
or
loope
cmp
or
push
sbb
dec
lock
pop
stos
out
gs
or
lods
scas
xchg
and
sub
dec
loop
mov
orl
jbe
jp
pusha
addr16
test
add
rol
adc
push
jbe
mov
std
and
mov
inc
pop
psraw
inc
sub
vrsqrtps
lret
in
or
addl
rcl
adc
or
je
push
adc
and
icebp
int3
aas
pop
cs
cld
flds
insl
stc
ret
imul
xor
punpckhdq
mov
mov
iret
scas
sub
pop
push
push
xchg
push
add
jbe
lods
mov
daa
out
daa
jl
jbe
mov
cmp
pop
repz
out
inc
cmc
or
jp
jbe
outsb
nop
pusha
outsl
xor
sub
sbb
out
cltd
shlb
arpl
xchg
and
inc
cmp
ja
pop
inc
push
cs
lods
dec
lcall
and
les
cli
push
out
jnp
es
mov
adc
push
mov
pop
ds
je
and
jp
adc
out
mov
mov
popf
clc
push
mov
jmp
mov
cmpsb
jg
dec
test
sbb
and
fucomi
pop
xchg
in
imul
clc
jo
and
adc
rcr
jnp
pop
rcrb
test
pop
ja
add
cld
sbb
fsubrl
jno
test
rolb
inc
pop
push
sub
push
scas
outsb
stc
sub
enter
call
xlat
cmc
fsubrp
sub
pusha
addl
jnp
jecxz
pop
movaps
mov
js
xchg
cwtl
xchg
fnstenv
es
outsl
push
aas
je
dec
stos
sbb
es
aad
add
xchg
into
les
inc
imul
inc
pop
xchg
pop
ds
daa
ret
call
lds
fs
cmp
stc
cwtl
test
popa
jns
enter
aas
sti
jle
pop
mov
call
and
push
jmp
lahf
inc
arpl
or
pop
clc
fildl
dec
hlt
add
jno
ret
inc
enter
jae
out
aam
inc
fnstenv
lret
cwtl
int
push
inc
pop
add
idivb
dec
sti
cmc
bswap
push
and
xchg
jg
adc
push
add
mov
xor
test
mov
sarb
data16
jbe
outsl
std
xchg
mov
test
xor
adc
addr16
sbb
push
jmp
cmc
popf
cmp
xchg
mov
pop
dec
in
xchg
sbb
dec
repnz
lahf
repnz
inc
les
nop
sub
jg
xor
cmp
frstor
ljmp
arpl
push
adc
icebp
mov
test
xchg
js
cmp
sbb
and
mov
pop
stos
jbe
and
cld
cs
cmpsl
mov
cld
iret
int3
adc
dec
nop
cmp
imul
das
inc
dec
ja
push
push
cwtl
aaa
jnp
test
sub
neg
or
mov
lods
and
fisubrl
cltd
push
ret
mov
sub
jb
jg
dec
daa
mov
shll
xchg
xchg
add
pop
aad
loop
xlat
mov
cs
mov
mov
mov
dec
cmp
je
or
fistl
cs
int
mov
aad
data16
sub
daa
xor
sbb
hlt
push
push
loop
cwtl
cmp
insl
pop
cld
cmc
pop
mov
inc
cmpsl
xor
adc
sarl
cmpsl
cmp
movsb
cltd
mov
mov
rolb
int
mov
fwait
lahf
movsb
pop
out
adc
ret
ljmp
sbb
jae
adc
mov
push
movb
popf
lret
pop
test
repz
push
mov
push
fcomip
adc
jl
xchg
jns
aas
pop
sbb
xlat
rorb
cmp
pop
into
loope
out
sub
test
sahf
xchg
lcall
out
adc
loop
repz
aam
dec
cmpsl
in
bnd
insb
mov
iret
adc
cmpsb
fs
lods
cmp
sub
pop
insl
sahf
pop
pop
xchg
push
fwait
outsb
or
or
aaa
jae
sahf
sub
push
int3
cmp
push
into
mov
adc
xor
lahf
sbb
mov
push
xlat
rclb
pop
mov
sub
adc
sub
mov
iret
nop
inc
sbb
in
enter
xchg
addl
in
call
dec
rcr
in
and
inc
jae
data16
fcoms
push
stos
nop
in
xchg
inc
xor
lds
fnsave
pavgb
aam
add
stc
sub
pushf
push
js
inc
inc
mov
mull
add
cmp
sbb
add
mov
sar
mov
dec
inc
adc
jo
xor
imul
test
icebp
cmpsl
mov
dec
and
popf
das
and
in
test
out
pop
cvttps2pi
push
mov
scas
ficompl
sbb
jae
imul
aaa
mov
sub
push
ljmp
and
sbb
std
imul
adc
mov
jle
push
mov
jmp
popa
push
repnz
xor
pop
mov
popf
or
lods
push
jp
push
cld
push
ja
inc
xchg
and
mov
or
xchg
inc
lods
test
mov
outsb
stos
xor
cmc
add
mov
jle
mov
pusha
xor
sub
jae
xor
call
jb
xchg
mov
push
mov
cmp
dec
pop
sahf
mov
lahf
sbb
imul
and
dec
cld
scas
push
push
loop
mov
jb
fstps
sub
pop
notb
shl
pusha
or
sub
in
mov
das
mov
fisubrs
push
push
push
jle
push
sub
cli
lock
fcmove
pop
scas
test
inc
mov
dec
sbb
insb
xchg
stos
jle
xchg
enter
out
fnstsw
mov
fisttps
cmp
nop
push
mov
or
sarl
scas
jle
dec
mov
rclb
xor
lock
ret
outsb
inc
stos
pushf
fstp
cmpsb
jg
aas
aam
or
shll
aas
push
push
stc
adc
scas
ljmp
cli
cmp
or
mov
sbb
jno
nop
sbb
dec
jns
ret
mov
gs
cmp
xchg
jp
cmp
dec
push
fistpll
mov
mov
inc
test
and
jmp
sbb
jp
jne
inc
icebp
jecxz
xchg
movsb
lret
es
jb
cmp
and
cs
jp
hlt
xor
and
stos
dec
mov
loope
out
cs
pop
test
andb
cmp
add
mov
imulb
sub
aam
mov
and
mov
frstor
testl
inc
push
sub
into
xlat
jecxz
jo
sbb
imul
dec
xor
mov
stos
jns
pop
jnp
adc
xor
inc
sarb
sub
push
in
lea
mov
popf
cs
ljmp
push
adc
add
dec
adc
jle
insb
push
cmpsb
imul
mov
and
inc
rcr
jae
mov
sub
pop
xchg
shl
cmp
dec
cs
enter
popa
rorl
call
repz
mov
mov
lret
fwait
dec
mov
pop
mov
or
scas
lcall
movntps
add
push
pop
adc
iret
cwtl
dec
into
sub
push
xchg
popl
frstor
roll
cmp
sub
outsb
fstpt
jno
ss
jg
pop
mov
push
xchg
addr16
fidivs
push
inc
push
repz
cmp
cltd
int
adc
xchg
sbb
adc
int
mov
fildl
std
xchg
sahf
sbbl
sub
fsubs
or
ret
mov
and
bound
addr16
arpl
outsb
xor
xor
and
sbb
cmpsl
pop
push
cmp
mov
lcall
xor
call
push
fdivl
mov
add
xchg
sub
inc
fmull
and
mov
xchg
pop
repz
stos
push
and
pop
repz
jnp
clc
jl
les
and
repz
leave
lds
jge
or
mov
into
inc
push
fucomip
mov
iret
inc
pop
adc
or
ljmp
cli
leave
sub
jle
dec
ss
cmp
adc
hlt
leave
cli
mov
inc
mov
gs
and
pop
stos
mov
push
mov
imul
xlat
xor
inc
mov
push
mov
mov
ret
sbb
bound
in
rcrl
lock
xchg
mov
scas
insl
loope
shl
aam
jge
sub
jbe
add
sbb
jge
faddp
push
push
ja
jb
push
pop
and
pop
pop
lcall
stc
imul
mov
subb
inc
sarb
fwait
mov
inc
cmp
inc
arpl
mov
pop
add
popa
fisubl
jmp
ds
popf
stos
jae
test
add
data16
nop
push
es
jg
mov
add
cmp
push
les
push
cltd
mov
mov
push
and
add
add
mov
icebp
cmc
xchg
inc
xchg
adc
sub
inc
mov
scas
pushf
add
jecxz
inc
mov
pop
movsb
jae
outsb
sbb
mov
shrb
dec
jmp
test
jno
add
in
mov
mov
mov
or
push
outsl
add
and
inc
pop
jo
fnstcw
fisttps
in
out
dec
pop
or
cmpsl
xor
lods
pusha
inc
push
mov
gs
mov
shlb
mov
insb
pop
popf
or
dec
push
mov
cli
aaa
sub
out
sub
sbb
enter
pop
ficoms
or
and
jp
insl
add
lret
ds
push
add
sbbl
mov
rcrl
sbb
in
adc
cli
inc
push
insb
pop
lcall
dec
jl
popa
stos
cmp
xor
sti
inc
aad
xchg
outsb
and
mov
cltd
mov
sub
and
ja
sub
adc
out
inc
push
push
cltd
or
aam
sub
push
stc
inc
mov
inc
fwait
psubsw
jb
popa
outsl
outsl
mov
or
jle
pusha
pop
mov
mov
lods
loopne
mov
push
push
loope
mov
mov
stc
jo
mov
jecxz
xor
push
dec
shrl
outsb
sub
pop
inc
mov
fstps
pushf
shlb
fstl
clc
cmpsb
mov
test
inc
lock
int
and
xor
mov
test
popf
aaa
inc
hlt
sbb
mov
cwtl
mov
sbb
add
sbb
jb
es
clc
notb
cmpsl
orl
sub
popl
add
fbld
jbe
inc
aad
in
inc
outsb
stos
sbb
or
inc
dec
or
lock
and
inc
mov
jnp
xor
xchg
hlt
or
aad
dec
sub
inc
test
outsl
xchg
and
adc
and
pop
loopne
das
aaa
pop
sbb
mov
push
dec
arpl
lock
adc
mov
icebp
ret
lcall
push
test
pop
pop
in
popf
push
addr16
pop
mov
fnsave
push
xchg
cmp
add
push
mov
mov
shll
imul
pop
push
jl
push
cltd
jno
adc
ss
nop
sub
and
sbb
xor
pop
in
cmpb
sahf
push
add
cld
fists
cs
dec
mov
xchg
push
and
dec
in
adc
pop
jge
imull
add
lods
mov
into
and
push
lock
sahf
repnz
push
daa
cwtl
xchg
lods
mov
adc
jl
ficomps
ss
cmpsb
dec
jnp
out
pop
add
cs
popa
pop
mov
xor
shlb
add
or
lea
dec
mov
test
or
lret
jno
rol
mov
fdivrs
cmpsb
mov
es
dec
xlat
mov
push
xchg
out
adc
mov
jb
or
mov
push
add
xlat
lds
mov
dec
push
cltd
bnd
in
xlat
or
xor
outsb
cmp
sbb
stos
sbbl
sub
notl
jae
mov
add
xchg
sbb
jg
add
push
imul
in
or
cmpsl
jb
mov
popf
jb
xchg
fucomi
test
mov
xor
adc
mov
aam
mov
scas
push
sub
enter
xorb
mov
mov
mov
xchg
ja
and
into
push
dec
add
xor
pop
inc
sahf
sub
ret
push
dec
mov
adc
adc
icebp
and
mov
xchg
ds
in
out
std
push
fisubl
push
nop
les
jecxz
sbb
ret
push
push
lods
lock
les
push
and
lret
jo
xor
xchg
fsubs
in
and
pop
popa
sub
jo
and
xchg
jne
in
cmpsl
cld
nop
inc
or
push
adc
iret
cmpsb
cmp
test
add
jecxz
fwait
call
in
mov
xchg
mov
pop
mov
mov
stos
pop
mov
lcall
lds
insl
push
dec
mov
out
push
add
inc
imul
popf
jge
shrb
ss
cmpsb
xchg
aad
movl
sub
push
clc
or
jl
test
daa
iret
cld
je
stc
and
mov
movsb
nop
flds
stc
mov
push
sub
scas
add
aas
mov
add
pop
cltd
or
push
mov
lods
adc
andl
mov
lret
or
movsl
scas
or
xor
insl
and
or
call
aas
int
ljmp
lds
pop
das
lahf
aad
jge
jne
cld
or
xor
test
insb
add
sahf
sub
add
dec
mov
adc
aas
mov
gs
fldt
movsb
or
sahf
ja
adc
sahf
fisttpl
and
test
clc
clc
mov
test
mov
and
sub
xchg
data16
loope
fsubrs
test
xor
shlb
mov
out
push
pop
and
data16
mov
sub
pop
push
vhsubpd
gs
faddp
xchg
xchg
pop
outsb
shll
in
movsb
shrl
aam
loop
mov
xor
jno
and
push
sbb
push
fucomp
mov
or
vpcomuq
jnp
push
addr16
insl
sub
xor
pop
pop
sbb
sbb
dec
push
and
fildl
ds
and
ss
lret
xchg
std
xchg
iret
shll
pop
lret
xchg
icebp
es
pop
shll
and
test
fcom
jecxz
or
jl
sbb
cld
push
ja
add
lods
jns
sub
mov
aad
ss
xor
xchg
mov
scas
and
mov
shl
notb
test
inc
inc
mov
leave
scas
enter
mov
ss
fistpll
mov
or
in
ret
mov
xlat
cwtl
imul
sbb
inc
and
jle
loope
iret
jle
rcl
inc
ret
sub
add
add
and
cmp
nop
lahf
and
lcall
push
jbe
push
idivl
xor
jmp
in
fdivl
scas
lds
insl
inc
repz
cmpsl
mov
mov
rcrb
or
sub
in
sarb
inc
int3
repnz
and
cltd
sahf
push
test
sahf
mov
inc
sub
or
scas
sbb
xchg
jecxz
cld
add
in
ljmp
pushf
dec
pop
mov
xor
mov
jb
test
cmp
dec
mov
test
inc
mov
xor
and
mov
xchg
or
cmpsl
push
push
dec
add
test
outsb
mov
adc
leave
ds
lahf
repz
push
pusha
mov
xor
ljmp
adc
mov
jo
mov
jb
sbb
pop
mov
pop
pop
ja
jmp
xchg
js
xchg
dec
fists
ljmp
test
inc
les
hlt
sbb
dec
in
push
lods
push
cmc
fadds
jnp
mov
adcl
fwait
cli
negl
test
cld
cltd
std
or
rcll
mov
test
ja
xor
sahf
jae
cmc
sbb
pop
or
cltd
ljmp
cmpsl
cmp
test
stos
mov
mov
in
dec
xchg
push
cmc
or
pop
les
div
daa
pop
inc
jnp
sbbl
push
and
xorb
cmp
stos
mov
inc
jb
negl
data16
lahf
mov
shl
fnsave
mov
aad
in
hlt
in
jne
call
xchg
mov
loope
sub
loope
pop
lods
dec
sbb
adc
mov
sbb
xchg
or
nop
rcr
cmp
cmp
nop
mov
push
in
xor
stc
adc
insb
pusha
ds
je
adc
mov
movsl
xchg
inc
shll
cmp
movsl
or
mov
ja
popa
inc
ljmp
ss
pop
aas
sbb
mov
jp
enter
dec
sbb
sbb
inc
push
inc
lea
dec
adc
add
xor
mov
test
daa
or
repz
xor
cwtl
or
ljmp
js
cmp
mov
cli
stos
rolb
ret
or
rol
lds
clc
loop
push
add
es
movsb
ja
mov
push
arpl
vmaxps
test
scas
inc
mov
mov
lret
push
gs
xor
mov
test
add
test
xor
mov
mov
loop
lods
outsb
xor
pop
push
mov
xor
ret
maxps
out
hlt
xlat
insb
fdiv
jno
pop
jmp
and
sbb
pop
push
mov
pop
pop
or
lahf
leave
pop
inc
cld
and
xchg
shrb
popf
in
jb
out
xchg
cmp
mov
sbbb
xlat
xor
jns,pt
push
inc
dec
stc
mov
lret
cmp
daa
pop
adc
mov
fs
loope
sbb
into
test
and
arpl
inc
nop
imul
adc
imul
cltd
xor
or
push
fmull
mov
push
push
ja
dec
xlat
sbb
cmp
mov
push
dec
es
mov
adc
in
pop
lahf
jecxz
xor
inc
out
mov
test
xor
push
repz
mov
add
mov
mov
sbb
pop
cmpl
std
stos
adc
clc
nop
inc
and
pop
xchg
or
dec
mov
loope
mov
pop
adc
add
cmpl
lret
mov
subb
mov
mov
jl
pop
test
add
cmp
aas
cli
and
icebp
pop
mov
and
lea
shrb
loopne
ljmp
sbb
dec
adc
and
gs
outsb
mov
test
lock
lahf
sbb
pop
divl
jmp
popa
mov
or
mov
mov
lahf
outsl
insb
sbb
add
enter
jne
stc
cmc
mov
mull
decb
adc
shr
sbb
cmc
inc
and
int3
add
out
mov
sbb
aad
cltd
xchg
push
xor
jg
lea
jl
sub
add
xchg
int3
xchg
sbb
cs
push
mov
gs
xor
jae
sbb
add
aad
push
bnd
lret
add
fcmovbe
faddp
jp
push
cmp
js
subb
adc
mov
mov
mov
xor
stc
sbb
outsb
loope
rclb
xor
dec
push
cs
mov
sub
dec
pop
cmp
sub
mov
fldt
dec
mov
mov
fs
repnz
scas
not
and
inc
enter
adc
arpl
mov
es
shlb
adc
mov
mov
cmpb
into
adc
icebp
dec
stc
rclb
push
add
and
push
jge
stos
fisubrl
clc
mov
inc
std
xor
negb
pop
daa
push
jbe
adc
imul
ss
jnp
rol
outsb
pop
out
ret
adc
dec
shrb
enter
lahf
mov
lcall
lcall
aad
ret
ficoms
pop
add
nop
pop
outsb
lock
aam
push
arpl
jl
mov
in
fldl
or
out
jp
push
mul
mov
push
stos
mov
in
dec
shrb
pop
fistpll
sbb
cld
sub
push
hlt
jns
or
xchg
or
cmp
aas
sub
add
mov
pop
push
jne
mov
dec
mov
cmp
bnd
ljmp
bound
bound
iret
xchg
push
pop
shl
shlb
jno
sub
dec
or
aam
out
adc
mov
xchg
int3
in
xlat
aam
xor
mov
jg
stc
rorb
cmc
clc
data16
adc
aas
cmpsb
xchg
add
push
cwtl
mov
stos
mov
xlat
loopne
mov
mov
imul
and
ds
movb
stos
fldl
movb
mov
iret
sub
xor
fwait
shlb
js
xor
repz
insl
iret
push
imul
and
mov
imul
jb
jle
lcall
and
xchg
inc
jp
mov
ljmp
call
clc
lods
jp
fwait
cmp
and
nop
jbe,pt
and
sbb
inc
sub
push
jle
test
pop
mov
inc
push
inc
and
test
out
ljmp
mov
addr16
and
dec
outsl
stc
xchg
dec
or
aas
xor
inc
mov
jg
ret
fincstp
adc
adc
mov
push
fldcw
inc
loop
pop
push
adcl
pusha
mov
rcr
addb
and
int3
adc
dec
push
inc
mov
fsubr
imul
test
dec
jne
nop
inc
cmpl
xor
inc
sbb
adc
popf
mov
repz
int
imul
cld
pop
add
jno
loopne
daa
mov
das
jo
cmp
and
out
or
cwtl
push
loope
sbb
enter
push
in
jecxz
outsl
jecxz
jbe
jno
mov
lret
subl
cmc
fwait
cld
into
xchg
stos
xchg
add
lea
jnp
std
jp
sub
mov
mov
insw
ljmp
jecxz
cmp
in
movb
orl
sbb
js
mov
inc
pop
dec
mov
pop
subb
adc
mov
mov
mull
nop
xchg
outsl
es
jge
movsb
dec
jns
mov
enter
repnz
cmp
psubq
inc
addl
sbb
dec
idivl
pop
jle
mov
or
jle
std
pop
jle
cmp
adc
popa
lret
and
iret
testb
mov
mov
imul
xchg
inc
fucomp
in
xchg
jo
sbb
fwait
dec
sarl
mov
test
push
outsb
es
mull
jge
mov
add
lret
mov
sbb
out
jl
lret
clc
test
dec
push
push
fmul
roll
les
add
sub
repz
cmp
ja
or
push
push
and
and
aas
andb
fsubrp
jp
mov
fildll
xor
mov
fwait
mov
les
inc
adc
lcall
out
mov
cmp
mov
incb
jbe
xlat
xorl
cmp
jmp
pop
cs
loop
imull
or
loope
in
out
cs
xchg
adc
sub
es
test
sti
push
std
std
mov
fcomps
push
in
jnp
int3
or
sub
xlat
mov
clc
add
js
cmpsb
jbe
and
jns
cmp
fimuls
sbb
dec
mov
push
stos
stos
and
mov
mov
sbb
adc
ds
or
push
roll
adc
scas
inc
imul
xchg
jmp
bound
mov
leave
jl
nop
loopne
jge
addr16
shlb
ja
inc
mov
mov
pusha
adc
push
sub
sarl
mov
repz
mov
out
xor
jbe
out
popa
inc
inc
jmp
jle
pop
js
call
loopne
insb
arpl
sbbb
das
cltd
sub
sub
in
push
pop
cmpsl
rol
inc
push
movsl
inc
and
fs
rcl
loop
loope
push
sbb
jnp
cmp
cs
xor
add
and
fcomps
inc
popf
mov
mov
rcrl
add
nop
mov
jne
mov
std
push
push
mov
xchg
leave
shlb
pop
stc
test
pushf
sub
sub
movsb
xchg
pop
lock
lods
mov
pop
cwtl
setl
dec
pop
js
out
pop
dec
push
inc
xrelease
in
pop
das
insl
jle
mov
xorb
cs
rcrl
loop
mov
dec
adc
sub
pop
pop
inc
dec
inc
cld
out
mov
or
cmpsb
cld
fbstp
pop
jp
popf
out
int
shlb
mov
add
jle
mov
into
add
push
notb
pop
sahf
rcrl
std
shrl
add
pop
mov
sub
out
or
rcll
mov
xchg
adcl
mov
mov
in
mov
lea
xchg
add
mov
loopne
push
jl
enter
ret
shll
or
inc
mov
sti
mov
aaa
jne
add
loop
cmp
adc
cwtl
add
test
rcr
out
das
add
js
and
jp
mov
ja
push
sbb
add
fdivr
dec
je
gs
rcrl
lret
jo
repnz
jne
and
mov
jmp
aam
and
inc
or
addr16
cwtl
daa
loopne
xchg
cs
xchg
and
leave
lods
das
sbb
les
bound
daa
inc
in
imul
rclb
xchg
lea
mov
mov
cld
pop
dec
xchg
push
mov
sub
jae
dec
test
mov
loope
lods
iret
dec
les
ljmp
xlat
mov
mov
or
cmc
mov
sti
jb
sub
dec
iret
fiaddl
repz
mov
jb
cmc
cld
mov
xchg
pop
idivl
cmp
cwtl
mov
xchg
jecxz
jp
cs
sarb
sub
push
lahf
mov
xchg
mov
sub
add
push
push
ret
mov
ja
ljmp
lahf
rolb
pop
jp
jecxz
dec
jnp
dec
add
push
jp
mov
cmp
dec
lods
pusha
rcrl
or
push
pusha
jb
movsb
sbb
add
add
in
pop
daa
push
sub
enter
or
xchg
adc
mov
mov
jl
jns
pop
lahf
je
leave
and
out
cwtl
xor
or
or
arpl
xchg
lret
bound
sub
popf
sbbl
outsb
js
test
mov
jg,pt
ss
sarl
jno
fs
pop
insb
lea
outsl
imull
cltd
incl
pop
sub
ds
leave
sbb
xchg
adc
sbb
aas
xchg
mov
insl
cmp
mov
xor
pushf
test
arpl
adc
imul
cli
push
mov
cmp
add
jecxz
push
lea
fsubrs
adc
mov
test
aam
pop
adc
inc
stc
pop
js
pop
ljmp
iret
jg
xchg
cmc
je
jmp
jecxz
xorl
dec
inc
hlt
shl
addb
cmp
add
loope
cwtl
mov
xor
dec
add
mov
add
fdivl
inc
es
cmpl
dec
test
ret
push
xchg
lods
push
cmp
les
mov
mov
push
jno
das
or
in
or
add
movsb
clc
xor
push
ljmp
or
sub
fisubrs
rcl
xor
cmp
mov
insl
xchg
inc
lahf
cmp
push
cmp
int
lds
mov
pop
push
cs
cmpsb
into
or
mov
call
mov
mov
xchg
jecxz
mov
inc
mov
xor
divl
popf
xchg
loopew
cwtl
xor
fisubl
mov
movsb
cmp
fwait
adc
lds
fwait
es
jecxz
mov
movsl
aad
xorl
ljmp
or
int3
jb
cmp
push
out
dec
stos
adc
sbb
in
lods
scas
fcomip
cmp
xchg
push
divl
jl
scas
clc
ja
sbb
rorb
cmp
imul
shrb
lcall
jge
or
mov
mov
add
mov
push
push
push
xchg
in
mov
mov
mov
xchg
mov
gs
jb,pt
pop
out
ret
out
mov
xchg
adc
push
out
sbb
push
mov
cmp
mov
and
dec
pop
inc
sbb
out
xchg
out
lret
decb
push
xchg
sbb
aad
loopne
pop
push
dec
in
out
jge
iret
data16
repnz
addr16
insl
clc
and
sahf
fwait
icebp
sbb
cmp
pop
push
xor
fs
dec
das
lea
dec
jb
je
stos
dec
lods
rorb
fs
mov
out
pop
mov
add
nop
bound
mov
pusha
push
sub
jne
pop
mov
pop
cmc
aas
or
jmp
mov
push
xor
push
sbb
xchg
push
js
mov
dec
sbb
lds
imul
repnz
insl
ret
sub
mov
pop
sbb
bswap
shrl
test
add
je
mov
mov
rorl
push
dec
jno
xor
mov
xor
push
cmpsb
inc
lods
mov
mov
popf
cltd
xchg
mov
iret
arpl
xor
adc
loop
enter
mov
cmp
inc
inc
arpl
push
and
cwtl
scas
inc
hlt
nop
loope
mov
pop
push
xchg
loopne
jl
arpl
mov
pop
les
aas
inc
mov
scas
adc
nop
es
cmp
inc
leave
add
loope
lds
lret
int3
jmp
and
sbb
mov
lret
adc
inc
fdivrl
push
call
aaa
sub
ljmp
jmp
leave
xor
push
rclb
je
sub
xor
insl
je
outsl
add
flds
sti
jecxz
mov
idivb
push
mov
fwait
jbe
jg
sub
test
push
add
cmc
out
xlat
arpl
pop
xchg
mov
sub
xchg
adc
in
lcall
pop
les
mov
mov
and
inc
in
sbb
bound
loop
or
popl
shlb
ds
push
lods
add
scas
enter
cld
test
ret
xchg
ret
mov
mov
and
out
aas
or
fdivs
pop
push
aaa
cmp
test
fdivrs
mov
pop
nop
xchg
xor
pop
ljmp
fiaddl
inc
pop
mov
sbb
push
cli
push
jb
loopne
mov
hlt
cwtl
and
mov
sti
in
adc
int
mov
inc
roll
push
js
push
pusha
adc
sub
add
jo
and
inc
xchg
xor
mov
sbb
mov
mov
add
xchg
or
mov
xor
sbb
push
dec
add
jae
and
sahf
andl
add
sub
jbe
fildl
pop
push
adc
mov
in
in
xor
adc
cli
js
lcall
cmpsl
lock
fildll
ds
in
pop
pop
xor
repnz
cli
adc
les
jmp
mov
aas
outsl
test
xor
fwait
aaa
aas
cmp
inc
push
outsb
loopne
ja
es
sub
mov
mov
dec
sub
shlb
inc
xlat
cmp
add
rorl
test
sbb
movsl
add
jl
xchg
dec
adc
lds
sahf
ficoml
movsl
aaa
sub
fisubl
cmp
insw
loope
mov
lret
lock
repnz
iret
mov
dec
mov
dec
int
cmp
push
lret
xchg
aam
pop
lock
fwait
cmp
pop
aas
add
bndldx
jl
fstpt
xchg
push
fisubrs
xor
repnz
mov
push
fwait
sub
insb
lock
and
scas
imul
jmp
pop
addr16
inc
push
sbb
enter
mov
into
xor
pop
cltd
push
inc
xor
sub
out
into
pop
cwtl
out
cmp
sbb
mov
and
cmp
ret
fucomip
aaa
in
loop
lods
sti
out
loope
push
cmp
hlt
pop
xchg
out
push
mov
repz
push
add
into
scas
push
xchg
mov
jns
outsb
add
fwait
insb
pushf
cs
add
movsl
jp
addr16
lock
fcmovu
lret
xor
jecxz
mov
push
inc
dec
mov
mov
ja
lds
mov
cmpsl
rcrl
shl
out
adc
fwait
push
sbb
sub
add
mov
adc
out
jmp
sub
push
rclb
pop
adc
jne
push
inc
push
ja
shll
aaa
jbe
dec
arpl
test
adc
clc
idiv
data16
push
decb
jmp
add
or
jae
cmpsl
mov
andl
call
sub
in
jb
mov
mov
inc
mov
sub
ja
fimull
imul
pop
fisubrl
mov
cli
cmp
lahf
pop
jg
hlt
sbb
pop
in
dec
sahf
add
cmp
or
add
jnp
cmp
pop
loope
sub
sub
daa
adc
jne
out
mov
lret
cli
hlt
leave
dec
test
pop
rcrl
sub
shlb
xor
in
out
mov
or
inc
fimull
scas
cmp
mov
inc
fimull
pop
pop
mov
adc
mov
gs
in
fnsave
dec
and
imull
cmp
shrl
mov
mov
scas
xchg
or
or
push
notl
outsl
andb
or
or
pop
sbb
imul
push
sti
idivb
mov
clc
sbb
fcomp
lcall
push
sub
jmp
in
test
jns
inc
mov
pop
icebp
nop
mov
xlat
mov
cmpsl
dec
cmp
cmpsl
iret
popa
out
aad
mov
jp
mov
addr16
pop
rolb
fldl
ja
mov
mov
orl
dec
sub
js
cmpsl
mov
fiadds
nop
mov
pop
add
cld
xchg
ss
daa
sbb
xchg
outsb
loop
popf
repnz
fnstcw
shrb
shr
lahf
cmp
jbe
ret
fs
cmpsb
sub
xchg
mov
pop
dec
inc
cld
cmp
mov
insl
lea
mov
cwtl
cwtl
inc
jbe
adc
xor
idivl
xor
fimull
lcall
jae
push
inc
dec
out
push
push
dec
inc
js
sub
or
pop
std
dec
pop
jb
nop
ffree
cmp
xchg
mov
dec
mov
in
adc
outsb
sub
push
faddp
push
xor
ja
push
pop
int3
sub
jmp
mov
lret
in
mov
dec
jge
add
subb
fs
daa
pusha
cmp
pop
int
add
decb
dec
xchg
repnz
fmull
out
add
cmpsl
mov
push
mov
mov
inc
aad
mulb
mov
cmpsl
mov
inc
pop
hlt
test
push
loopne
scas
mov
arpl
test
gs
mov
pop
add
outsb
pop
adc
test
fisttpl
lods
jg
xor
sbb
pop
or
mov
cs
icebp
xchg
jno
popa
cmc
loope
inc
lret
add
pop
das
nop
jmp
inc
mov
or
jle
mov
mov
sbb
ret
pop
lods
cmp
frstor
cwtl
mov
add
fcoms
mov
insl
mov
dec
mov
push
cmp
sbb
jne
push
in
pop
loopne
pop
inc
mov
lds
movsb
popf
cs
rcl
pushf
pop
shl
push
xchg
dec
and
mov
jbe
add
incb
cmp
faddp
pop
nop
pop
test
xor
movsl
mov
sbb
into
push
push
ljmp
es
lret
rclb
mov
in
ljmp
mov
dec
out
mov
cmpb
sub
testb
dec
das
mov
push
aaa
push
xchg
ret
insb
lret
mov
or
xchg
das
enter
sbb
cmp
cli
adc
dec
push
cli
dec
jmp
andl
mov
and
lcall
jb
int
mov
pop
cmp
sub
dec
cmpsl
call
jo
push
jecxz
nop
in
adc
sahf
mov
cmpsl
out
mov
adcb
or
and
cmp
sub
scas
ss
pushf
dec
incb
or
movsl
andl
neg
mov
push
xchg
and
xchg
int3
xor
mov
mov
scas
cli
test
fstl
push
pop
mov
jl
in
or
push
mov
mov
mov
in
dec
das
scas
mov
xchg
add
shlb
imul
pop
push
out
scas
xchg
pop
lret
xor
repz
mov
lret
mov
aam
sub
movsl
inc
enter
push
loope
jo
js
or
xorb
jle
aad
jmp
out
leave
xchg
mov
and
lds
fldt
mov
dec
jg
pushf
popf
cmp
mov
imul
pusha
xor
inc
bound
fs
pushf
cmpsb
jbe
pop
rorb
fsts
and
cmp
inc
jns
shlb
ror
mov
adc
orl
inc
enter
sub
xchg
sbb
pop
pop
movsl
mov
add
ss
mov
sub
xor
mov
test
gs
inc
aad
mov
cmp
add
fidivrs
rcr
ret
or
pop
push
std
xchg
inc
sbb
pop
adc
cmpsb
push
xor
icebp
mov
out
push
ret
gs
repnz
loop
out
pop
inc
mov
cmp
push
sub
insb
xorb
or
jp
jb
in
cmp
nop
mov
shrl
mov
out
jne
notb
fwait
les
xchg
dec
and
ljmp
dec
sub
or
jle
cmp
adc
jg
and
cmp
push
test
lods
pop
lret
or
lret
jae
rcr
repz
lds
mov
add
mov
fistps
cmc
sub
lcall
inc
or
jnp
cld
push
repz
cmpsb
inc
fidivs
lea
aam
out
inc
fimull
ja
rclb
sbb
inc
lcall
ret
jg
cmpsl
push
out
mov
sbb
cwtl
imulb
adc
add
aaa
push
lods
iret
addr16
and
loopne
jno
mov
sub
lcall
icebp
push
lock
lcall
inc
outsb
cltd
orb
or
adc
es
add
mov
jl
jne
es
rcrl
loopne
push
hlt
in
movb
rcrb
icebp
fs
pop
sbb
daa
stos
stos
cli
movsl
cmp
daa
inc
std
imul
mov
aad
jo
into
js
cmp
lahf
sub
adc
mov
insb
xchg
mov
sahf
das
sbb
xchg
out
sub
mov
movsb
negb
idivb
inc
data16
dec
jne
inc
xor
repz
test
shrb
cli
dec
ljmp
sbb
jo,pt
mov
stos
mov
dec
jle
cmc
cmp
and
mov
test
sub
jne
lret
inc
scas
and
mov
xchg
ret
arpl
jg
cltd
test
dec
mov
xchg
insb
pop
xchg
roll
push
mul
out
adc
fadds
mov
arpl
jg
sub
outsl
add
test
out
cmpsb
sub
jle
cs
xor
dec
jns
inc
mov
test
movsb
cmpsb
mov
scas
jmp
and
js
inc
outsw
mov
add
int
leave
clc
cli
popa
stos
imul
push
add
pop
in
ret
adc
ja
xor
or
std
cmp
push
mov
mull
insl
add
xchg
stos
xor
and
jg
mov
int
js
rclb
outsl
jge
xor
xchg
xor
push
cmp
lods
xchg
es
mov
pusha
mov
add
loope
pop
repz
inc
pusha
mov
sub
aas
shlb
lret
add
sbb
js
or
xchg
cmpsb
notl
in
mov
sub
sbb
lods
fiadds
xchg
sbb
mov
mov
mov
add
mov
sbb
imul
subl
cmp
and
cli
xchg
sub
js
jae
sbb
lds
mov
mov
imul
daa
loopne
or
inc
adc
cli
mov
popf
inc
mov
add
adc
cmc
sbb
xor
dec
inc
adc
sbb
mov
aad
sbb
vshufpd
outsl
gs
sub
out
ja
sub
mov
pushf
rolb
pop
in
and
cli
pop
gs
lret
jmp
out
fcompl
aas
inc
mov
insl
aam
cmp
in
sti
push
and
lret
clc
std
loope
out
jbe
out
ljmp
call
jg
sbb
push
mov
mov
lret
je
inc
cmp
roll
test
lock
pop
mov
jge
mov
scas
hlt
or
ret
bound
and
pushl
in
or
pusha
cmp
xchg
xor
popf
push
jp
pop
xor
push
orl
push
pop
lds
sub
lret
pop
les
arpl
inc
lea
dec
shrl
cmp
cwtl
and
pop
xchg
sbb
xchg
stos
or
out
jmp
repz
lcall
rorb
stos
pop
mov
cwtl
rcrl
mov
jmp
xor
mov
sbb
xchg
pop
mov
sahf
leave
insl
loopne
inc
cmpsb
cli
arpl
mov
and
xchg
adc
shlb
pusha
outsb
dec
pushf
or
lahf
leave
fldcw
xor
push
xchg
outsb
ror
mov
cmc
in
sbb
in
cmp
test
push
lret
test
adc
mov
inc
cmp
mov
cmpb
cld
out
inc
dec
or
inc
movsl
les
imul
imul
and
sbb
mov
jae
mov
ss
lock
inc
inc
and
dec
iret
xchg
lahf
lret
out
fcmovu
mov
imul
loop
mov
cli
stc
sbbb
mov
mov
out
insl
fldenv
push
into
cmp
cmp
fisubrs
cltd
sbb
jne
mov
xor
cmp
cwtl
sbb
sarl
inc
pop
fidivrl
lret
adc
icebp
loop
dec
or
ljmp
outsb
pop
mov
imul
dec
in
adc
mov
fadds
mov
shll
pop
jae,pn
sbb
jp
sub
pop
je
xchg
or
sbb
adc
les
add
movb
hlt
or
fists
mov
pop
ja
lahf
push
xchg
fcmovnb
ljmp
jg
push
ja
inc
mov
pop
mov
mov
fisubl
xchg
adc
xchg
out
stos
fwait
xchg
jo
mov
ret
dec
in
rorb
or
addr16
outsb
dec
js
inc
jg
test
in
dec
xchg
cmp
push
xor
out
mov
mov
mov
dec
cld
clc
in
jge
lahf
adc
sub
fst
pop
inc
lock
out
push
iret
in
adc
les
dec
fcompl
notb
xchg
jg
push
xchg
jo
in
fs
loop
xor
mov
jg
fs
sahf
add
icebp
mov
aaa
std
inc
popf
pop
mov
and
les
dec
pushf
jmp
dec
sub
cmpsl
aas
and
push
inc
add
rcl
divl
adc
popa
ficoms
xchg
out
push
push
sbb
cmp
das
pop
ss
scas
dec
mov
jo
clc
dec
dec
mov
sub
movsb
adc
add
push
and
ret
insb
xchg
orl
pop
push
mov
mov
lods
jmp
shlb
test
insl
xor
sub
pop
ljmp
enter
adc
sahf
gs
inc
dec
mov
adc
in
push
nop
dec
pop
mov
into
roll
xchg
xor
sbb
in
fisubs
and
pop
xor
or
xlat
jb
in
js
inc
adc
mov
mov
cmp
mov
into
cmp
push
mov
add
out
sbb
shlb
jp
mov
repnz
adcl
pop
test
cvtpi2ps
aaa
mov
ret
lahf
mov
push
movl
pop
and
jb
std
sbb
mov
outsb
pop
jle
add
sbb
insl
sahf
inc
cmc
jno
inc
xchg
jp
push
push
adc
leave
sbb
aam
jns
sub
cld
add
test
bound
ja
mov
fdivl
and
mov
push
lods
adc
cs
mov
int3
cltd
xor
jmp
pop
cmpsb
xchg
cmp
aam
aas
addr16
or
cmp
xchg
movsb
add
mov
ret
push
cmp
push
push
shrb
adc
and
or
xor
cmpsb
js
xor
or
icebp
lea
int
xchg
fmulp
xchg
pop
rsm
je
pop
push
std
pop
jnp
iret
mov
sahf
fucom
jp
inc
aaa
cmpb
ss
dec
mov
int
addb
movsl
sti
fsubrs
xor
hlt
jp
std
popf
scas
scas
add
in
mov
jb
xchg
xlat
cmp
iret
and
jmp
daa
xor
shll
sub
fdiv
xchg
sub
adc
jo
sahf
jecxz,pt
jp
cmp
pop
pop
shlb
mov
outsl
repz
jae
in
sbb
fildl
pusha
xchg
stc
aam
or
push
lock
add
bound
xor
add
or
jb
and
push
pop
mov
mov
dec
xor
xor
pop
test
stos
test
out
fnstenv
pushf
aam
jmp
repnz
mov
mov
repnz
jl
andl
es
lahf
jbe
and
out
hlt
adc
call
mov
ss
jp
jl,pn
es
aas
lcall
adc
ret
mov
cmp
iret
pop
fisttpl
fnstenv
les
jecxz
cmovae
mov
imul
ss
xchg
loop
cmp
mov
lret
shrl
jecxz
in
adc
xchg
push
cmp
mov
jl
sbb
sar
cwtl
mov
mov
sub
and
mov
es
lds
pop
mov
mov
xor
mov
push
xchg
jmp
lret
push
inc
add
repnz
inc
xorb
adc
idivl
shl
xor
iret
pop
mov
jnp
cmp
sbb
cmp
push
push
sahf
adc
jmp
xchg
sub
push
pusha
stos
push
les
or
pop
fadd
test
pusha
jno
sub
lods
fstl
and
mov
cmp
stc
xchg
enter
loop
cs
loop
roll
inc
jmp
adc
sbb
in
fidivrs
aaa
adc
xchg
cs
mov
xor
cmp
xchg
ds
mov
sbb
xor
stos
out
cmp
sub
stos
xor
xchg
pop
cs
sbbl
adc
pop
hlt
outsl
and
sub
mov
pop
mov
fdivr
mov
out
pop
push
iret
or
mov
lret
xor
xor
in
aam
mov
push
cwtl
mov
sbb
xor
mov
andl
mov
cltd
enter
rcrb
int3
ficoml
cmp
imulb
pop
ja
sbb
pop
pusha
test
loopne
xchg
sub
pop
icebp
insl
repz
xchg
ficoms
ret
arpl
jge
cltd
out
or
jmp
hlt
cli
adc
add
scas
lods
call
jo
test
in
into
test
push
aad
in
dec
jbe
out
cmp
inc
mov
push
outsl
sub
push
add
rcr
xchg
mov
stos
push
adc
cs
out
mov
xor
dec
sbb
fcmovbe
cli
cmc
lahf
ja
dec
lods
lds
xor
pushf
jge
inc
fs
inc
push
sub
xor
pop
pop
push
incl
sub
leave
fstps
and
stc
mov
es
aaa
adc
test
sub
and
xor
xchg
sbb
adc
dec
xor
cmpsl
jmp
lods
pop
cmp
cwtl
xlat
adc
sbb
and
pmullw
cmpb
xor
js
cld
stos
jg
xor
loop
outsb
jmp
pop
add
pusha
sub
andb
lea
repz
imul
jecxz
call
inc
lds
test
xchg
out
sub
jecxz
movsb
inc
and
js
pop
addb
add
js
out
mov
cmp
xchg
jmp
or
daa
jne
rolb
ss
sarl
adc
js
xchg
and
fstps
cltd
pusha
loop
shl
and
mov
mov
scas
mov
add
inc
adc
mov
push
aad
and
lcall
or
in
xor
sub
and
pop
jecxz
add
cmp
fnsave
mov
lods
stc
lcall
pop
lret
push
popa
jmp
adc
loop
rclb
nop
out
movups
aad
mov
pop
divl
shr
adc
jnp
into
movsb
mov
cmp
pop
inc
daa
xor
into
andb
mov
imul
cmp
jo
out
and
mov
aam
fistpl
xor
push
fdiv
out
sbb
push
cmp
pop
cld
sbb
addl
les
ss
popa
push
or
pop
fwait
adc
nop
pop
add
scas
adc
or
xor
mov
in
cli
sbbb
adc
cmc
notb
dec
pop
outsb
fsubr
jl
mov
push
es
pop
jbe
inc
cltd
xor
or
mov
jb
lods
aas
jl
mov
insb
mov
lock
fisttps
shlb
stos
cmp
out
sub
sub
imul
sub
dec
fdivrl
out
cmpsb
ret
hlt
stos
movsl
test
lods
out
ret
adc
fiaddl
lea
pop
test
pop
xor
push
fs
sarb
insb
lds
dec
fisubrs
lods
cmpsb
jp
jg
jb
cwtl
popl
je
add
fsts
dec
ljmp
data16
aaa
jmp
mov
stos
test
dec
ds
adc
xchg
xchg
adc
loop
sbb
xchg
stc
fildl
addr16
in
hlt
test
mov
shrl
mov
push
inc
jle
jg
lea
cmc
enter
fimuls
adcl
mov
jne
adcl
sub
sbb
jb
or
or
rol
cmp
pop
aam
stos
insb
loope
sub
inc
enter
and
push
dec
adc
test
mov
dec
inc
adc
mov
jb
ficomps
test
sub
sbb
pop
cmp
fs
jge
fs
xchg
adc
mov
lcall
decb
imul
jle
pop
mov
test
insb
out
dec
inc
icebp
xor
pop
popf
jge
dec
sarl
cltd
sbb
repz
repnz
xor
aaa
aas
pusha
dec
dec
repz
cld
or
mov
ret
xchg
bnd
sbb
dec
xchg
mov
dec
ss
sub
test
jl
pop
rcrl
leave
scas
aam
lods
xchg
sub
inc
sbb
pop
es
fs
or
bound
scas
cmp
mov
ss
scas
leave
cmp
stos
bound
iret
fidivl
jge
push
out
add
and
jnp
xor
xor
cmp
lock
and
loope
sar
push
movsb
or
flds
insl
sub
and
das
or
and
pop
and
fs
cs
sarl
sbb
cmc
dec
lret
sbb
repz
adc
test
xchg
loopne
inc
dec
test
stc
cmp
xor
scas
xor
xchg
pop
cmpsb
movb
fistps
or
dec
push
jbe
mov
notb
out
lret
push
xor
xor
xchg
or
add
add
mov
sub
subl
shll
pop
sub
dec
rorl
inc
leave
sbb
add
inc
vpcmpgtw
push
sbb
out
cmpsb
lret
adc
push
pusha
push
jle
sub
aam
mov
daa
loopne
negb
je
in
cli
ret
lret
cmp
dec
or
scas
or
jl
call
popa
dec
out
xchg
adc
movsb
pop
mov
add
cmp
adc
insb
mov
jne
adc
push
ret
aas
add
jmp
dec
jge
inc
cmp
sarl
into
fwait
sbb
xor
dec
jnp
xchg
cmc
xor
mov
pop
xchg
lahf
pop
mov
inc
jge
insb
sti
add
fcomip
nop
outsb
or
aaa
mov
mov
fwait
movsb
dec
pushw
into
xlat
sbb
dec
sub
push
xor
call
in
sbb
mov
repz
mov
xor
out
sub
jp
rcll
out
addr16
pop
pusha
jp
shll
bound
mov
jle
scas
xlat
cs
mov
movsb
adc
cmp
insb
in
mov
add
inc
sbb
inc
inc
sbbb
addl
fs
mov
mov
clc
cmp
sub
push
testb
cmp
add
movsl
lods
xor
lock
or
xor
sub
mov
lock
or
mulb
push
or
loop
mov
pop
ljmp
movsb
cmp
fisubl
in
dec
mov
pushf
lret
ret
dec
sub
dec
mov
movsl
xchg
push
inc
lcall
dec
repz
aam
cmpsb
and
sbb
sbb
mov
loop
f2xm1
mov
pusha
mov
insb
rcl
dec
xchg
jle
ss
pop
movups
sub
sarl
aad
xchg
cld
sub
adc
js
stos
xchg
cmc
pop
cmpsb
sbb
fwait
test
bound
or
fucomi
lret
int3
mov
cmp
adc
xchg
test
push
clc
rclb
inc
ljmp
jge
dec
pushf
push
addl
xor
lea
xchg
inc
cmpsl
jp
pop
jae
push
jo
jbe
mov
mov
sbb
inc
shll
sub
mov
or
gs
sub
es
add
ret
dec
inc
xor
adc
popa
cmp
rol
daa
shrl
push
jno
and
testb
pop
and
pop
xchg
add
test
fldt
aaa
mov
sub
popf
lret
loopne
popf
sbb
or
dec
fcmovnu
and
fs
mov
notb
pop
inc
icebp
insb
sti
scas
je
out
mov
insl
lret
shld
sub
rcrl
cltd
xchg
stos
xor
dec
add
fisubl
inc
divl
jo
into
jno
or
add
sub
pop
sahf
mov
mov
loop
mov
sti
in
popf
bound
lods
pop
pop
lods
xchg
mov
sub
xchg
xor
call
call
ffree
xchg
jp
mov
xchg
stos
cwtl
dec
sub
mov
sub
clc
loopne
add
dec
and
pop
mov
lock
es
arpl
loopne
pop
ret
mov
xchg
in
xchg
xchg
imul
mov
xor
push
lret
inc
test
inc
call
into
cmpsb
pop
and
aam
sbb
inc
sub
mov
push
aas
mov
jg
ficomps
fcmovb
and
pusha
mov
rorb
push
inc
loope
mov
or
push
mov
lret
sub
xchg
or
inc
sub
dec
and
sbb
jbe
mov
arpl
pop
push
daa
insl
inc
inc
jg
jl
cltd
fisubl
test
hlt
pop
sub
mov
push
popf
test
mov
mov
sbb
xor
xor
ret
inc
add
movb
outsl
and
pop
mov
cmp
xchg
fldl
sahf
dec
and
ss
notl
pop
fisttps
and
fdivl
add
inc
inc
shr
cmp
clc
and
mov
loope
cld
out
mov
mov
movb
xchg
in
sbb
sbb
add
jg
jg
add
mov
movsl
sbb
xor
xor
jns
in
repz
das
sub
aam
fisttpll
sub
fs
enter
xor
das
push
sub
jmp
jle
xchg
xchg
push
sbbb
hlt
mov
cmp
popf
out
push
lcall
in
and
mov
enter
jmp
test
stos
popf
mov
enter
scas
div
push
and
dec
pushf
gs
int3
outsb
lods
repz
sub
pop
icebp
sarb
mov
adc
arpl
adc
push
or
fwait
popa
push
pop
mov
fsubr
jno
test
and
cmpsb
std
adc
cwtl
test
xchg
sbb
and
cmp
jnp
js
hlt
notl
mov
imul
neg
ficoms
cltd
adc
dec
fwait
jle
imul
inc
pop
or
jnp
es
push
popf
xlat
sbb
pop
ss
mov
das
add
call
loopne
add
mov
aam
push
or
cmp
inc
sbb
push
ret
loopne
and
mov
sbb
daa
nop
lcall
sbb
test
sub
cmp
hlt
pushf
ret
mov
mov
test
pusha
in
add
push
push
imul
push
pop
push
mov
hlt
aad
dec
cmp
mov
inc
rorb
inc
gs
pop
jbe
mov
jnp
popa
ds
cmp
xor
sti
and
test
adc
les
push
imul
vcvttss2si
shrb
dec
mov
bndstx
shlb
mov
mov
jbe
jl
lods
fistpll
inc
inc
jne
push
cwtl
cld
add
push
inc
sbb
pop
mov
fs
inc
mov
mov
mov
cmpl
adc
cmpsb
out
shl
xor
iret
testl
add
and
divb
test
push
hlt
push
ffreep
add
scas
jle
mov
add
sbb
out
mov
pop
int
cltd
cmp
sbb
fld
enter
loopne
push
js
push
popf
pop
inc
mov
push
inc
pop
inc
pop
leave
dec
fistpl
mov
sub
jle
clc
xchg
pop
push
adc
sub
add
xchg
rolb
lods
popf
jl
add
sub
add
idivl
sbb
insl
scas
mov
add
sbb
sbbb
xor
lods
cmpsb
dec
mov
nop
mov
xchg
mov
aas
hlt
add
mov
adc
loope
jno
or
daa
rolb
fwait
sarb
pop
cmpsb
mov
sub
add
jnp
fs
call
dec
jbe
and
dec
jge
pushf
leave
push
mov
mov
push
pop
rcll
sub
je
lret
nop
in
or
adc
sbb
lret
aas
dec
daa
inc
cs
bound
lods
adc
mov
nop
lods
call
mov
lods
scas
idiv
in
out
data16
lahf
cmp
fdivs
mov
pop
sahf
inc
lahf
ja
lds
stc
movsl
lods
popf
movsl
les
fnstenv
data16
xchg
stos
out
movsl
xchg
aad
addr16
scas
push
and
mov
out
pop
sub
add
inc
add
mov
ljmp
mov
ret
sub
dec
dec
mov
icebp
jl
mov
sbb
xchg
xlat
add
sbb
rcl
imul
adc
insl
icebp
or
sbb
push
pop
int
push
mov
pop
mov
push
cmp
enter
inc
je
lcall
xlat
mov
scas
cmpl
cltd
lcall
popf
andl
mov
loope
lret
and
int
and
add
add
mov
sti
inc
jo
add
dec
dec
jno
pop
js
xor
jl
inc
sbbl
sub
imul
flds
outsb
lret
mov
jmp
fs
fistps
clc
or
fdivrl
cmp
lcall
gs
loope
jmp
add
and
push
cmp
adc
fdivs
push
insl
lds
pop
cmp
or
lcall
pop
mov
addl
jp
mov
test
es
gs
sbb
mov
lret
shll
stc
insb
fstpl
adc
xchg
iret
icebp
fdivrs
stos
das
sbb
inc
sbb
inc
inc
cs
nop
xor
jo
insb
push
jo
int
daa
shll
xchg
ret
cmp
jbe
pop
or
je
xchg
out
cmp
cmpsl
out
enter
icebp
adc
scas
loopne
lock
inc
shll
dec
adc
in
in
ds
jne
mov
shll
xchg
xchg
and
mov
repz
inc
in
inc
in
addr16
jge
dec
sbb
cld
sbb
ficomps
test
inc
outsb
pop
pop
push
int
ljmp
lahf
xchg
jae
mov
and
lret
pop
sub
xchg
dec
mov
leave
imul
lods
testl
pop
sub
shll
adc
mov
cli
sahf
push
fmuls
jp
cmp
outsl
leave
add
mov
loopne
out
pop
jmp
fcomip
mov
icebp
out
adcb
cmp
add
lret
pop
popa
leave
jecxz
pop
jl
into
fucomi
or
sbb
sub
xchg
and
data16
std
xor
or
or
movsl
outsb
mov
or
lock
push
xor
cmpsl
push
mov
ss
add
shll
movsb
in
jmp
les
dec
sub
inc
mov
cmc
lcall
mov
popa
mov
repz
mov
sub
sti
add
xchg
cld
xchg
pop
push
jg
xlat
mov
mov
outsl
lret
inc
mov
and
sub
imul
xchg
cltd
and
sbb
pop
ljmp
pop
sbb
ss
push
iret
arpl
or
push
bound
xchg
or
sbb
cs
in
inc
pop
adc
pop
lcall
in
add
add
les
xchg
cltd
cmpsl
sub
arpl
xor
rorl
sbb
adc
adc
test
inc
divb
ficoms
pop
fcoms
cltd
or
pop
nop
inc
xor
add
cmc
daa
sbb
xor
out
pusha
sub
mov
bound
mov
pop
int3
clc
mov
testb
mov
jg
ja
cld
notl
adc
stos
cmp
pop
push
mov
jb
fists
hlt
lods
ss
or
add
popf
test
jno
fdivrl
cmp
push
mov
stos
xor
jmp
call
mov
mov
jge
jl
lret
scas
jl
das
jg
loope
in
ja
pop
ja
jge
mov
inc
xchg
sbbl
leave
mov
mov
xchg
sbb
push
fxch
push
dec
cmp
sbb
ret
loop
test
out
adc
loope
loope
and
push
jl
dec
cmp
sbb
popa
aaa
adc
test
cmpsb
pop
fiadds
xchg
jl
mov
pop
mov
lods
ss
adc
addl
in
fwait
push
test
mov
xchg
cmp
orb
pop
dec
in
mov
ds
aas
fs
lcall
popf
mov
cmp
mov
push
fistpl
out
sbb
rclb
push
inc
scas
xchg
jmp
outsl
xchg
xchg
jne
ficoml
imul
stc
xor
fildll
into
data16
dec
mov
sub
mov
ret
ljmp
cmp
faddl
pop
adc
push
sahf
std
ja
mov
xchg
movsb
mov
es
pop
shrb
pop
push
xchg
jg
imul
arpl
outsb
xchg
aaa
lods
sub
pusha
in
pop
push
pop
cmc
gs
and
mov
cmp
ds
or
mov
jmp
xchg
orl
sub
fistps
addr16
imul
pop
fisubrl
call
into
fsubl
adc
fildl
or
test
xchg
daa
jmp
adc
mov
test
xor
bound
ljmp
stc
movsl
push
mov
xor
and
imul
push
cmpl
adc
mov
add
jge
ret
dec
int
sbb
jo
push
push
and
adc
jnp
orl
out
sub
xor
sarb
mov
pushf
push
pop
clc
mov
pop
shrl
dec
decb
push
adc
orl
and
push
jns
cltd
call
mov
dec
inc
test
ss
cmp
imul
add
xlat
lock
add
push
icebp
inc
mov
mov
arpl
loope
sbb
fisttpl
push
dec
cmpsb
lret
movsl
and
inc
cmpb
cld
jge
rorl
ret
jmp
cmp
sub
sbb
dec
jo
in
adc
inc
xchg
xchg
daa
jbe
mov
add
shll
nop
xor
pop
jb
mov
xchg
popf
sbb
ljmp
push
dec
add
cli
mov
sbb
arpl
pop
cs
inc
jne
das
lods
adc
and
movsl
push
clc
sbb
pop
aas
repnz
mov
cs
pop
sub
lock
lcall
jp
mov
mov
scas
cli
fwait
mov
xchg
add
mov
in
inc
dec
pop
les
ljmp
sub
ja
pop
mov
lcall
cmpsb
test
insb
mov
in
out
data16
push
cld
dec
dec
in
mov
xchg
add
jns
test
mov
sbb
cmpb
fstl
add
push
inc
insb
fnstcw
cwtl
loopne
scas
inc
fs
dec
dec
incl
iret
rorl
cmp
pop
cmpsl
hlt
mov
push
xchg
ret
xor
mov
aas
testl
push
add
ja
mov
or
lds
insb
fwait
or
dec
and
cmpsl
xchg
popf
mov
and
add
sbb
fucomp
aas
int3
cmp
data16
adc
fistps
mov
int3
mov
xor
jo
movsb
xchg
lahf
shrl
push
cmp
shll
aaa
mov
pop
stos
aas
icebp
cld
add
arpl
mov
js
aaa
adcl
lret
sahf
cmovge
add
outsl
push
mov
sahf
push
inc
dec
or
popa
movsl
adc
push
xchg
lods
ja
lret
arpl
push
imul
repnz
arpl
stc
fimull
push
leave
jmp
lcall
sub
loope
repnz
js
dec
and
out
lods
in
ss
lret
int3
xchg
aam
leave
cmp
push
sbb
loopne
lahf
ss
mov
lret
or
push
icebp
xor
shrb
cmp
pop
ss
cs
sub
je
fst
jo
nop
cli
push
lret
aam
pop
mov
fbstp
adc
daa
aas
mov
aaa
mov
dec
ror
push
dec
push
dec
sbb
lods
push
or
or
stos
adc
jecxz
inc
popa
jb
out
xchg
fists
mov
mov
mov
add
ret
push
jbe
adc
push
lcall
inc
push
cwtl
in
xor
outsl
adc
or
add
shlb
mov
hlt
lcall
mov
dec
imul
sub
test
mov
mov
pop
cs
shlb
icebp
clc
adc
jge
out
cmp
bound
mov
sub
mov
int3
loopne
jb
inc
sbb
push
les
xor
outsl
lahf
adc
add
pop
and
adc
stos
test
imull
and
xchg
test
mov
shll
daa
jae
and
dec
cmp
adc
fwait
and
jbe
movsb
jnp
adc
cmpsb
loope
aam
jbe
insb
mov
inc
cwtl
jne
or
lahf
pop
test
jbe
jo
test
lea
dec
lcall
outsl
das
add
insl
aam
sub
dec
sub
pop
cmp
push
mov
test
xchg
bound
sub
int3
icebp
push
mov
push
mov
mov
pop
or
dec
repnz
out
ds
rorb
fistpll
mov
mov
daa
dec
cmp
push
inc
gs
fmuls
rcrb
mov
mov
sbbb
out
out
jne
and
lods
leave
inc
mov
cwtl
adc
xor
mov
mov
aam
jnp
pop
in
lcall
lds
addb
test
stos
sub
fcomps
cwtl
decb
sti
mov
lahf
ja
dec
std
inc
adcl
je
fwait
and
lret
sarl
mov
mov
or
push
nop
les
sar
shrl
push
push
test
lea
lret
mov
cld
fs
imul
cmpsl
js
and
in
and
lock
cmp
jle
sbb
nop
jns
pop
mov
lret
xchg
or
pop
jne
addr16
test
cmpsb
es
ljmp
inc
xchg
movsb
loopne
out
push
int3
out
jge
sub
test
push
or
adc
mov
sarl
pushf
or
fcomip
ss
lock
je
sbb
jae
adc
dec
sti
nop
or
sarb
sti
mov
xor
mov
cli
jns
mov
scas
repz
or
sub
stos
xlat
mov
ds
ds
add
outsb
cmp
pop
lods
dec
mov
add
dec
adc
dec
std
xchg
pop
lock
pop
fnstenv
jae
int
jge
jno
les
sbb
xchg
jl
shrb
mov
lods
or
add
loop
jne
sbb
and
inc
movsb
out
stos
adc
pop
xchg
pop
pop
mov
mov
fcmovnb
mov
clc
cmpsl
xchg
fcompl
cmpsl
dec
inc
jg
js
cmp
or
imul
cmp
cmp
insl
mov
pop
pushf
cmpl
mov
mov
stc
and
or
repz
fnsave
mov
push
test
push
sbbl
test
stos
pusha
out
xchg
sub
adc
jle
jns
pop
inc
dec
ret
or
mov
cmp
ror
fnstcw
in
in
cltd
out
pop
sub
push
inc
jno
jo
xchg
icebp
add
sub
xor
adc
sbb
jns
call
pop
es
xchg
dec
mov
ficoms
repz
popa
cmp
in
or
cmp
sbb
je
and
jne
outsb
sbb
ds
jo
dec
adc
cmpl
mov
xchg
push
lahf
push
dec
sbb
into
dec
inc
addr16
mov
or
xchg
cmp
cmpsb
sub
xchg
sub
outsl
or
fwait
or
jp
into
js
lcall
lods
dec
mov
mov
adc
daa
aas
xchg
pop
decl
in
test
and
cmp
pop
xor
lods
xchg
insb
mov
pushf
outsb
push
mov
mov
jl
and
iret
jne
mov
dec
repnz
add
xor
lahf
rorl
mov
cmpsl
cmp
mov
adc
imul
fwait
pop
fists
dec
or
adc
imulb
sub
movsl
add
inc
int3
dec
movsl
out
mull
inc
dec
xchg
pop
adc
jp
mov
sahf
test
out
sbb
js
jmp
pop
repnz
leave
cmp
jg
popa
mov
shrb
test
and
insb
and
inc
lds
cmpsb
popf
hlt
movsb
movsb
cmp
loop
jno
mov
inc
scas
or
insb
sbb
jb
mov
ja
xchg
movsl
jne
je
mov
outsl
push
jg
inc
in
enter
pop
sti
leave
shlb
mov
mov
pop
jae
adc
jnp
lds
std
pop
jmp
mov
mov
movsl
fwait
pop
hlt
movsl
in
adc
mov
pop
testb
loope
xor
imul
ljmp
inc
loopne
adc
add
xor
std
adc
jns
or
pop
test
arpl
bound
cmp
fmuls
std
mov
bound
movsb
mov
mov
into
int
or
or
aaa
in
xchg
or
cmpsl
sub
mov
in
xchg
and
sub
jo
and
pop
int3
lret
jb
int3
cmp
cwtl
pusha
int
idivl
xchg
jg
sbb
test
fistpl
testl
mov
sub
test
push
or
pop
mov
jae
stc
cld
push
pop
ljmp
dec
out
mov
dec
xchg
xchg
std
enter
xor
sti
cmpsl
jg
sbb
inc
jmp
test
mov
mov
xchg
test
push
mov
jge
inc
stc
icebp
iret
cmp
dec
push
movsb
sub
dec
test
mov
jge
or
inc
cmpb
rcll
scas
mov
ljmp
jge
adc
insl
notb
push
inc
or
cwtl
sub
lahf
scas
addb
mov
push
cld
cmp
sbb
push
dec
cs
mov
push
xor
testl
mov
cld
inc
cltd
sub
popf
iret
loopne
jae
leave
pop
jns
sub
mov
or
jmp
call
gs
fdivr
sbb
mov
addr16
stos
sub
sbb
push
cmpb
xor
adc
mov
pop
fisttps
stos
out
aam
pop
es
sub
pushf
arpl
jno
icebp
gs
jne
cmp
sahf
lret
push
addr16
lcall
scas
push
pop
ds
out
adc
mov
sti
mov
adc
pop
sahf
inc
xor
mov
add
loope
add
lret
ds
push
xchg
jmp
lret
mov
das
inc
push
jmp
and
in
lret
push
inc
lds
jecxz
mov
mov
and
pop
rclb
aad
push
sub
push
insl
sub
mov
sbb
or
sbb
inc
jl
scas
push
cli
lea
mov
insb
mov
ss
add
jge
lds
stos
js
pop
in
inc
dec
or
push
dec
dec
and
popf
ds
pop
sbb
out
pushf
dec
pop
mov
repnz
pop
adc
dec
scas
xchg
jae
test
fsubrs
pop
sti
jns
lds
dec
in
mov
fcoms
ret
jne
jecxz
outsl
mov
arpl
jns
adc
inc
cmp
cs
fdivrs
dec
ljmp
xchg
orb
push
insb
xor
sub
xorl
daa
inc
inc
in
pop
lret
mov
sbb
ss
pop
cld
fucomi
pop
jg
ficoms
jo
rorl
fdivrs
movsb
inc
das
pop
lods
mov
nop
and
and
imul
ror
xor
jmp
sbb
pop
stc
jge
leave
fildl
ljmp
in
or
dec
xchg
dec
cli
ljmp
mov
mov
xchg
fadds
inc
stc
xor
jnp
adc
movsb
movb
push
cmp
lret
push
jns
cmp
out
pop
movsb
dec
lahf
notb
mov
das
jae
mov
push
dec
cs
sub
rcrb
mov
xchg
sub
mov
repnz
pop
insb
pop
mov
inc
jl
xchg
push
mov
daa
cmp
icebp
sbb
fwait
mov
jno
xor
out
sbb
cmp
jle
fsubrl
and
jp
sbb
xchg
bt
push
lcall
cwtl
add
and
ret
jne
jecxz
sbbl
mov
shrb
dec
mov
pop
mov
cwtl
mov
in
push
mov
pop
push
and
adc
xchg
sub
push
push
jge
test
mov
imul
lea
ret
call
or
ficomps
mov
xchg
mov
stc
addr16
dec
jmp
push
leave
in
loopne
mov
fnstenv
mov
ret
xor
sti
mov
jns
jmp
cmpsl
test
add
and
xor
or
lds
lods
cs
jnp
rcll
or
test
push
push
in
mov
rorb
sbb
cmp
pusha
mov
lret
add
xor
jp
loopne
js
les
int3
jae
outsl
xchg
adcb
mov
inc
scas
push
dec
fs
dec
xor
or
push
pop
cmp
inc
movsl
hlt
std
mov
nop
mov
in
in
mov
adc
push
mov
sbb
sub
jns
sub
pushw
push
jg
and
fnsetpm(287
js
mov
or
scas
xlat
lods
fldcw
aas
sbb
cltd
notb
outsl
xor
lret
inc
lock
cwtl
push
rolb
push
movsb
mov
xchg
dec
addb
imul
xchg
or
mov
ljmp
push
adc
push
cli
cmp
addr16
xchg
movsb
imulb
movsl
shll
xchg
pusha
mov
lods
sahf
in
roll
outsl
cmp
cmpl
rorb
ja
adc
pop
adc
and
ret
mov
sbb
in
cmp
lahf
stos
push
lea
ret
cmp
push
das
mov
push
enter
imul
iret
or
inc
and
mov
and
nop
add
les
push
cmp
in
pop
rolb
dec
dec
sbb
xchg
testl
jmp
je
popf
imull
mov
icebp
ss
out
mov
pushf
mov
test
andl
shr
std
loopne
cltd
mov
xor
sub
nop
mov
negl
jge
fsubrs
jo
fstpl
jg
cmp
orb
sarl
push
sbb
data16
adc
int
push
outsb
sbbb
adc
jnp
sbb
adc
test
xor
or
movsb
xor
xchg
pop
mov
adc
dec
and
clc
cli
fxch
push
jp
pushf
xor
es
insw
mov
cmp
aaa
jns
dec
xchg
pop
int3
and
rol
ret
cmp
push
or
push
fstpl
lds
cmp
inc
stos
inc
jmp
daa
fldl
jo
jecxz
dec
int3
and
lret
pop
pop
incb
ss
cmp
stos
mov
in
sub
or
repnz
mov
mov
add
sub
dec
and
int
jg
sbb
push
cmpsb
push
sbb
and
adc
dec
lods
test
fucomi
es
fsubrl
sub
mov
cld
sahf
push
dec
ljmp
insb
inc
insb
stc
cld
hlt
call
data16
sarb
cmpsl
jo
out
add
xor
push
rcrb
enter
xchg
subb
lretw
loope
and
es
popa
or
out
mov
xchg
inc
xor
dec
jle
dec
fidivrs
lret
xor
cld
mov
cmp
roll
xchg
mov
push
pop
in
imul
lods
stc
mov
inc
jecxz
mov
mov
adc
push
stos
and
ljmp
push
icebp
popaw
ret
push
xorb
xchg
ja
and
arpl
mov
mov
ds
push
add
mov
fstpt
add
loopne
inc
inc
dec
insb
sub
push
arpl
pop
mov
pop
jo
inc
outsl
adc
dec
dec
mov
fistps
or
call
push
or
or
push
lahf
inc
flds
sub
cmp
stos
xchg
xor
dec
test
push
sub
in
add
lds
repz
push
sbb
jb
imul
jl
push
mov
mov
lea
rorb
flds
cli
cli
stc
enter
call
enter
mov
and
fwait
cmc
add
adc
je
mov
mov
sbb
popa
xor
test
inc
inc
sbb
mov
ret
fistpl
das
sub
xchg
pop
mulb
xor
push
mov
sub
mov
fs
mov
leave
push
jno
dec
ds
jnp
outsb
out
mov
jbe
aam
inc
or
cmp
inc
sub
jbe
pop
int
rolb
xchg
js
jecxz
in
mov
add
and
mov
leave
cltd
nop
xlat
add
lret
adcl
pop
adc
lock
cli
jmp
fstpl
mov
lret
mov
xchg
cmpsl
or
xchg
mov
mov
dec
insb
aas
push
lods
cld
push
sub
cwtl
push
mov
repnz
mov
es
test
add
lods
adcl
int
sub
mov
mov
push
and
imul
mov
ja
mov
je
pushf
push
cld
daa
int
mov
jmp
xchg
jg
lret
addr16
mov
test
ss
inc
mov
cli
inc
fldcw
out
mov
es
jle
xchg
fmull
lock
jnp
push
repz
and
std
insl
jg
cmpsb
into
pushf
push
add
test
inc
imul
bound
xlat
clc
jmp
xchg
sub
add
dec
dec
cmp
mov
or
fdivrs
fldenv
repz
xchg
and
jno
jmp
fs
daa
push
cwtl
sbb
mov
rol
push
mov
cs
fbld
lcall
mov
inc
lcall
ja
push
cmp
mov
pop
add
cmpsb
mov
jle
addr16
les
dec
data16
imul
push
dec
rclb
add
jp
aam
cmp
fadd
xchg
out
jo
sbb
xchg
xchg
hlt
sub
popl
outsl
rolb
enter
jg
mov
dec
imul
stc
adc
and
sbb
adc
mov
xchg
xchg
ds
aad
lcall
push
adc
or
inc
or
in
mov
int3
push
hlt
pop
in
mov
jle
and
pop
xchg
stos
or
sbb
jb
call
or
mov
mov
push
lods
or
imul
cmp
sub
or
fcoml
shl
imul
pushf
pushf
inc
mov
adc
mov
push
lahf
mov
fildl
or
xor
inc
mov
or
out
andb
push
xchg
jge
loop
xchg
in
dec
bound
aad
ror
bound
scas
jae
push
pushl
cmc
pushf
dec
cmpsl
mov
stos
mov
lods
scas
xchg
xorl
cld
cmp
adc
imul
jb
fadd
push
dec
jns
pop
and
push
pop
and
jp
xchg
pop
add
push
fadds
and
sbb
pop
pushf
xor
sbb
jno
loopne
push
hlt
cmp
adc
mov
pop
roll
addb
pop
fisttps
xchg
adcb
cs
mul
ss
sub
sub
inc
sub
icebp
push
test
cmp
pop
jmp
ljmp
xor
jno
xor
lahf
jg
inc
test
or
mulb
mov
xor
in
and
push
mov
roll
pushf
test
negl
xlat
shl
mov
imull
push
in
es
sbb
int
push
jmp
pop
fdivr
fdivl
loopne
push
or
jecxz
test
clc
cli
imul
insb
jmp
mov
stos
call
lock
aad
in
idivb
stos
sbb
mov
sbb
cmp
mov
cmp
xor
es
out
icebp
inc
fildl
sbb
mov
and
add
pop
repnz
xchg
inc
stos
and
pushf
push
dec
cli
pop
dec
arpl
xchg
fcomps
lods
or
test
mov
pop
test
mov
imull
fildl
mov
dec
rcll
mov
adc
jne
and
and
adc
push
mov
push
cmp
push
dec
repz
in
cmp
sub
xchg
add
ds
in
lcall
jb
pop
std
cmp
mov
scas
inc
lcall
test
stc
enter
dec
test
or
int3
mov
cmp
lock
cmpsl
jmp
or
cmc
incb
and
mov
rcrl
pop
call
adcl
out
lea
repnz
icebp
or
test
pop
jo
jge
jecxz
sub
jp
jae
mov
cld
or
and
stos
push
jb
dec
sbb
cwtl
lcall
sub
fnstenv
mov
pushf
test
sbb
daa
mov
sub
or
push
pushf
xchg
or
xchg
jmp
mov
inc
leave
mov
xchg
jbe
inc
sbb
or
mov
pop
dec
mov
popf
cmp
rclb
lret
shlb
sub
adc
je
push
bound
pop
xor
add
jecxz
push
jnp
cmovl
or
movsl
mov
cmpsb
dec
icebp
mov
mov
lcall
outsl
roll
imul
mov
jo
pop
jge
inc
fwait
and
xor
popa
push
popf
cmp
outsl
sbb
lret
sub
out
fwait
fwait
xchg
push
push
iret
mov
insl
jb
pop
nop
push
pusha
mov
insl
cli
movsl
test
mov
sbb
sti
or
lcall
jns
jne
mov
aam
xor
es
inc
aam
xchg
jmp
jg
mov
mov
mov
cmpsl
ljmp
push
xchg
inc
sbb
cmpsb
add
adc
mov
ret
mov
inc
das
fsubs
jns
jge
dec
xchg
jmp
sub
arpl
mov
sub
cld
mov
dec
bound
cmc
xor
xor
sbb
mov
jns
sarl
das
jmp
adc
aaa
bound
pminub
jl
mov
xor
daa
sbb
aas
ficoms
stos
fisubrl
fsubs
push
mov
fcoml
cld
sub
dec
loopne
mov
pop
mov
pop
sbb
inc
jp
std
iret
add
mov
inc
cmp
add
into
inc
pushf
mov
and
icebp
add
mov
add
mov
bound
sbb
scas
xchg
jo
fsts
les
dec
cmpsl
sbb
lds
inc
je
xchg
sbb
lods
fists
fisttpll
push
addl
mov
or
stos
pop
mov
seta
pushf
enter
out
scas
pop
and
push
xchg
sub
cs
or
pop
mov
enter
and
pushf
fists
sbb
cld
mov
addl
cmp
adc
mov
aaa
sbb
clc
jb
add
cmpl
mov
push
cmpsl
and
xorb
iret
lahf
sbb
shlb
push
lds
int
inc
mov
jo
push
scas
xor
lock
xchg
rolb
mov
jmp
es
jo
pushf
and
out
or
and
mov
arpl
xor
fldenv
orb
ds
sub
int3
pop
lods
aaa
sbb
test
insl
in
shlb
sbb
add
mov
push
cmp
jae
in
push
push
push
pop
lret
insb
cli
jecxz
jecxz
xlat
adc
xchg
insb
movsb
jge
cmp
ret
jg
out
or
pop
cmp
or
jbe
cli
mov
mov
mov
pop
lar
loope
inc
push
mov
jg
cltd
or
pop
aaa
mov
scas
mov
add
sub
loope
mov
aad
push
dec
xchg
mov
fcmovnb
imul
lcall
add
dec
arpl
xchg
mov
test
mov
sahf
pop
dec
hlt
test
xchg
enter
fmull
mov
loopne
sti
out
movb
xor
clc
nop
gs
fisubrl
xchg
xchg
sub
scas
lds
pop
mov
daa
push
cmpsl
mov
adc
adc
jmp
pop
ja
popf
push
bound
mov
cltd
fwait
push
aam
xor
fmull
les
addl
push
mov
outsl
inc
jbe
mov
push
pop
repz
mov
stos
and
push
adc
inc
mov
lock
add
push
ja
mov
shll
mov
mov
push
add
pop
fisttpl
ljmp
cmc
sub
pop
mov
push
popa
cli
mov
mov
adc
call
pop
cmp
pushl
stc
test
fsts
movsb
inc
mov
mov
imul
test
clc
add
jb
nop
and
pushf
cmc
incb
int
push
mov
das
xchg
fistpll
outsl
sbb
filds
out
sub
jbe
ja
mov
push
imul
fmul
add
pop
cmp
pushf
imul
pop
add
outsb
lods
pop
inc
or
hlt
jmp
std
mov
xor
int3
cld
mov
xor
push
mov
and
cmc
adc
in
mov
mov
cmp
add
inc
lock
pop
push
push
and
lcall
or
cwtl
xchg
lcall
mov
sub
mov
push
sub
cmp
out
ja
mov
xchg
dec
dec
dec
repnz
repnz
movaps
sbbb
adc
sahf
les
loopne
push
inc
imul
call
cwtl
mov
jl
sarb
cmc
xchg
push
lcall
sub
sub
aad
pop
mov
mov
in
or
mov
adc
push
rorl
mov
out
sbb
push
faddl
xor
outsl
xchg
imul
fucomip
adc
mov
test
or
pop
adcl
push
loop
mov
rolb
cmp
sti
dec
ret
mov
push
xchg
xor
ret
movsb
daa
cmp
cld
mov
mov
mov
stos
sbb
inc
and
scas
iret
lea
mov
pop
movsb
xchg
pop
fadd
sarb
movl
sub
shrl
jb
jne
out
or
mov
pop
push
dec
sbb
inc
aas
ss
jnp
out
aam
cmp
cmp
mov
inc
jg
add
pop
xchg
xchg
ljmp
mov
js
outsb
repnz
mov
shlb
push
call
cwtl
pop
int3
push
lahf
test
or
mov
mov
add
inc
out
or
xor
in
mov
cmp
icebp
cli
inc
ret
pusha
cmp
adc
mov
lahf
and
popaw
test
ljmp
cmpb
xor
sbb
adc
fnstcw
fcoml
mov
and
mov
fimull
mov
cltd
mov
sbb
xor
xchg
cmc
cld
loop
sbb
or
xchg
pop
js
pop
mov
cmc
xchg
test
aad
mov
loop
xor
popf
mov
jg
imul
addr16
call
pop
mov
out
rclb
lahf
inc
adc
and
andl
jg
mov
je
rcll
cmpsl
rorb
or
arpl
xchg
mov
shrl
aam
dec
cmpsl
jo
inc
fsts
pop
mov
ja
dec
xorb
call
in
push
loop
xchg
aam
mov
repnz
fs
loopne
xchg
mov
mov
int
je
or
cmp
push
adc
cmp
push
pop
mov
sub
imul
jns
in
std
movq
xor
int
mov
xor
pop
int3
cmp
lods
dec
inc
sahf
ficomps
mov
jae
aas
add
aas
aaa
sbb
lea
jbe
outsb
mov
adc
mov
dec
or
imull
lds
fcoms
sub
jae
mov
in
xchg
add
je
and
xor
add
cmpsb
dec
outsl
repz
lods
adc
imul
cltd
js
add
dec
xor
enter
cmpsb
outsb
pop
and
mov
xchg
xchg
arpl
jne
adc
pop
xchg
mov
popf
hlt
negl
stos
sub
xor
push
dec
and
cmp
xor
popf
sub
xor
dec
popf
daa
divb
mov
cmp
sub
pop
lret
adc
inc
xchg
push
das
push
add
xchg
xchg
and
xlat
in
pop
sbb
mov
mov
repz
rcrl
sub
cli
mov
outsl
loope
in
ljmp
lock
test
in
push
jge
xchg
call
mov
int3
mov
dec
imul
call
push
jo
inc
aas
rcl
inc
or
jb
mov
sub
sti
mov
push
pop
scas
mov
movsb
xlat
les
in
cmp
lcall
jp
pop
insb
lods
sub
xor
shrl
bound
movsb
cmp
das
dec
arpl
in
mov
cld
inc
in
cli
dec
testb
jb
xorb
push
lods
adc
js
ret
adc
or
imul
cmp
cmpsb
fadds
outsl
inc
sbb
test
jp
fs
fcomps
fstl
movsb
cmp
push
mov
mov
es
cs
mov
inc
inc
jnp
dec
adc
pop
jecxz
lds
insl
jg
mov
push
shrl
repnz
movsb
xor
roll
ds
inc
adc
xor
dec
sbb
fimuls
rcrl
ficoms
xchg
mov
and
shl
pop
xchg
shr
loopne
lods
dec
mov
and
pop
push
xor
daa
rorl
sahf
fildll
or
add
mov
out
dec
cmpb
push
dec
out
push
int
mov
jmp
pop
cmp
pop
sub
inc
pop
sbb
jo
xor
rcrb
fidivs
push
dec
or
cli
ljmp
jbe
mov
mov
addr16
pop
or
mov
loop
call
adc
dec
test
or
xchg
je
gs
sti
dec
clc
cmp
js
test
mov
repz
ret
lret
inc
cmp
fwait
sbb
mov
push
lea
je
jp
loope
loopne
sub
dec
and
mov
inc
test
std
xchg
pop
cltd
ds
movsl
fnstsw
mov
sti
inc
lcall
ja
scas
dec
pushf
xorl
mov
ljmp
xlat
mov
pop
in
push
xlat
aad
ja
aas
movsl
in
cmp
out
mov
jmp
outsl
mov
pop
data16
out
mov
lea
xor
repz
leave
out
mov
push
jmp
ja
outsl
adc
sbb
insl
imul
ficomps
mov
jmp
adc
divl
repz
pop
scas
dec
pop
xchg
leave
lret
inc
add
and
daa
adc
push
test
outsb
jp
test
pop
add
mov
xchg
push
nop
data16
push
and
pushf
out
insb
imul
xchg
hlt
movb
pop
sti
xor
subl
stos
mov
lahf
adc
xchg
cmp
pop
sub
mov
and
cmp
xchg
xchg
pushfw
shlb
jp
jns
xor
push
stos
sub
fwait
pop
pushf
mov
mov
orb
jecxz
mov
xchg
inc
xorb
mov
leave
cwtl
insb
jmp
popa
movsl
movsl
mov
test
std
shlb
fildll
pop
jle
dec
xlat
mov
test
fdivs
ljmp
insb
jno
hlt
add
scas
insl
icebp
mov
frstor
mov
pop
pop
repz
cmpsl
js
aaa
fstps
jns
dec
cli
jg
jmp
cmp
inc
arpl
or
xor
cmp
aaa
adc
push
shld
cmp
pop
mov
push
fxch
loope
pusha
push
jp
pushf
outsb
in
lret
mov
adc
push
stos
loope
jle
cltd
lcall
jb
inc
cwtl
popa
mov
das
add
ret
divl
jle
pusha
fiadds
xlat
or
fs
push
fidivrl
in
rorb
je
xchg
stos
rdpmc
ret
sbb
and
sahf
or
sub
fsubl
or
jp
xor
divl
hlt
cmp
cmc
and
sub
mov
push
out
lds
int3
cmovge
add
jae
lret
or
into
fucomp
xchg
out
pop
cmp
adcl
push
pop
dec
mov
imul
aam
cltd
fildll
cmpb
xchg
inc
dec
or
aam
into
xchg
jns
jl
stos
pop
rcl
mov
dec
fmull
mov
mov
loopne
jns
jnp
das
inc
jne
leave
mov
mov
or
dec
mov
mov
test
aas
xchg
xchg
mov
jae
in
xchg
mov
jp
dec
fwait
push
addr16
in
jns
mov
ret
mov
jmp
push
or
stos
jle
out
jg
je
out
inc
out
mov
mov
aaa
cmp
pop
sahf
aas
leave
fiadds
jp
xor
add
dec
lcall
lea
push
stc
aas
pop
cmp
jae
bound
mov
loopne
pushf
inc
loope
push
push
leave
and
mov
sbb
dec
into
ret
or
mov
insl
pop
nop
insl
das
iret
stc
fimuls
sub
mov
outsb
push
popa
mov
and
sub
add
sub
pop
movsl
nop
xchg
leave
jbe
mov
out
dec
jae
jmp
cmpb
mov
and
rorb
nop
cmc
cmp
inc
call
jge
rorl
push
js
shld
inc
stos
in
push
int3
test
mov
int
test
dec
mov
fs
in
es
fs
cmp
pushl
adc
nop
cmp
iret
je
in
subb
negl
in
into
sub
pop
mov
mov
mov
scas
je
jmp
shlb
add
or
lret
out
pop
cwtl
std
dec
arpl
stc
inc
mov
cmp
jo
outsb
stos
es
adc
jno
cmpsb
xlat
aas
ljmp
xchg
or
and
cmpl
in
and
lahf
in
xchg
stos
cmp
enter
roll
push
adc
cmc
gs
cld
divl
cmp
cli
xchg
and
lret
xor
adc
filds
movsb
push
in
sub
subb
or
pop
dec
fadds
das
gs
push
enter
xlat
or
movsb
jb
cmpsl
pop
ja
shrl
sbbl
fmul
pop
sbb
ljmp
sbb
add
addl
xor
bound
ja
and
mov
cmpb
jns
push
ljmp
xor
and
sub
aas
pop
aaa
xor
mov
popf
loopne
out
orl
ljmp
sub
fwait
push
in
std
cmp
xchg
xchg
test
or
aad
xlat
xchg
or
mov
jb
es
jae
scas
adc
mov
call
mov
aaa
push
and
xor
lcall
stos
fwait
lock
lret
add
cmp
or
xchg
add
jae
in
lds
mov
cmpsl
add
les
das
lods
jb
out
fisubl
mull
loop
loop
fidivl
inc
mov
flds
push
enter
fwait
push
daa
sbb
test
std
out
xor
aaa
es
pop
paddusw
gs
cmp
in
xor
add
adc
xchg
sbb
cmp
jl
push
data16
adc
bswap
mov
sbb
sarb
inc
call
sub
add
movsl
add
ss
push
jge
pop
xorb
insb
cmp
adc
cmp
inc
adc
pushf
fsubrl
movsb
in
mov
inc
popa
mov
in
pop
mov
lcall
mov
test
push
pop
dec
xchg
aaa
add
sbb
add
and
mov
aas
or
jmp
pop
enter
stc
mov
loopne
push
fs
sub
inc
xor
and
mov
shr
add
add
inc
fdivrs
inc
hlt
shrl
sbb
mov
scas
or
mov
add
faddp
popf
cmc
rorl
outsl
in
inc
xor
movsb
inc
jecxz
pop
dec
jne
fdivr
aad
mov
in
push
and
or
insl
pushf
push
inc
scas
push
dec
aaa
cmp
ljmp
cmp
mov
xchg
fiadds
mov
sub
xor
rol
cmp
pop
clc
outsl
or
lods
jmp
int
repnz
sub
loop
or
xor
push
lds
sbbl
cmpsl
aas
jge
xlat
push
xchg
or
addr16
push
fwait
and
cmp
sbb
sbb
sub
loop
dec
in
mul
mov
lahf
cmp
shrl
cmp
lods
inc
pop
in
pop
pusha
and
add
lods
xchg
les
or
jb
xchg
inc
xor
je
mov
popf
outsb
sub
iret
orl
fidivl
pop
in
mov
rcrb
cld
sbb
fldenv
in
frstor
pop
aaa
aam
std
adc
mov
inc
or
mov
stos
push
call
dec
mov
inc
hlt
ret
mov
mov
sub
xchg
pop
aas
and
cmp
mov
xchg
pop
mov
cltd
jnp
jg
or
out
cmp
outsb
push
cmp
cmp
cld
rcll
repnz
jno
lcall
mov
xor
inc
pavgb
mov
popa
jp
jnp
and
loop
mov
inc
popa
fbld
pop
adc
xchg
push
jmp
push
push
popa
jmp
insb
push
or
ss
mov
xchg
cmp
cmp
es
ffree
std
sub
fsubp
or
pushf
pusha
cmp
cmp
cmpsb
mov
push
xor
mov
push
stc
dec
jbe
clc
int
outsb
push
xchg
push
not
loopne
je
mov
pop
in
popf
orb
ds
or
ljmp
aad
dec
adc
test
cmpsb
jecxz
cmp
fidivs
dec
cld
ljmp
mov
dec
push
inc
push
mov
js
loop
xchg
adc
pop
fwait
mov
fs
test
jns
dec
jb
sub
mov
bound
or
aas
sbb
and
push
cmpsb
rolb
addl
aad
xor
pop
cmp
or
inc
mov
mov
sahf
mov
pop
mov
xchg
xlat
mov
fldt
jnp
into
cmp
in
add
cmp
adc
scas
aam
jae
jno
push
sarl
jge
add
xchg
mov
daa
xor
popf
aam
pop
adc
sub
decb
mov
jo
cmpsl
sti
xchg
ljmp
rcrl
inc
ss
out
add
xor
test
mov
es
out
pop
cs
lcall
fstps
jno
and
nop
ljmp
sbb
divb
jns
sub
push
and
adc
shr
ret
xor
mov
lods
fmull
ss
jbe
insb
xlat
adc
sbb
jae
fisubrs
push
adc
aas
imul
jae
test
pusha
fisubrl
push
add
pop
ret
jmp
add
mov
sbb
dec
add
or
loop
popa
push
pop
bound
push
and
stc
mov
sub
inc
imul
int3
cmp
cmp
lds
push
sbb
das
rorb
mov
movsb
mov
cmp
in
mov
jns
pop
jne
fadds
mov
scas
sbb
mov
sub
lcall
aad
pop
push
les
inc
push
jl
hlt
pusha
aas
sub
or
pop
jp
dec
outsl
outsb
push
or
sub
nop
and
shlb
cmpsb
shlb
push
xor
in
loope
mov
cmp
sbb
dec
inc
inc
ret
jbe
jg
lret
jae
jp
call
adc
and
call
xchg
or
push
stos
and
sbb
xchg
sbb
in
shl
xchg
dec
test
mov
stos
dec
repz
mov
mov
cltd
sbb
ja
cwtl
push
push
adc
movsb
sbb
fs
into
pop
loope
bound
or
addr16
inc
xlat
mov
enter
mov
pushf
pop
xchg
dec
xchg
test
les
das
and
push
sub
jecxz
lcall
aam
mov
or
sarl
adc
aam
mov
sbb
cld
jae
ret
shrl
aam
mov
test
xor
fbstp
add
xchg
jle
cmp
cwtl
add
iret
pushf
push
out
icebp
mov
or
add
sbb
or
in
fstpl
test
push
filds
movsl
in
int3
add
jbe
pop
inc
sub
or
stc
imul
sub
xchg
push
cmp
inc
aad
mov
lea
sti
jae
pop
cmc
sub
or
imulb
test
push
lods
adc
and
insl
jno
push
nop
jno
mov
adc
fsin
lcall
gs
ja
popa
push
fcmovbe
rorb
xlat
fwait
loope
je
int
jno
subb
and
xchg
dec
xor
dec
mov
cmpsb
pop
fdivs
mov
pop
sti
lea
xchg
pop
das
adc
movsl
push
popf
fmuls
imul
in
lsl
fstl
mov
stc
push
add
jl
insb
pop
insl
in
icebp
cmpsl
lock
aas
shlb
fisubrs
sub
cmp
jbe
jbe
push
fcomps
push
enter
mov
jae
cmc
sahf
adc
stc
jg
insl
in
inc
sub
and
popf
adc
or
iret
imul
insl
cwtl
repnz
inc
add
aas
sbb
xor
in
push
lret
jnp
daa
icebp
sub
subb
in
add
xor
pop
ret
aad
cmp
movsl
mov
push
inc
push
loopne
movsl
xor
ficompl
xchg
std
cmp
or
in
negb
push
es
shlb
ret
push
xchg
mov
add
lods
xchg
std
jne
mov
cmpsb
pop
lock
inc
add
adc
int
mov
xchg
jo
pusha
jnp
fisubrl
mov
fisttps
popf
arpl
or
or
sub
fdivrl
jle
mov
xor
dec
push
fldl
pop
jne
cltd
dec
imul
xor
adc
jae
data16
andl
inc
rcr
aaa
lds
push
test
push
loope
xchg
lret
xlat
jl
and
mov
lock
pop
adc
xor
lock
sub
aas
and
sbb
nop
enter
cmp
pop
pop
or
inc
dec
aas
arpl
iret
push
mov
xor
jne
push
fimull
fwait
cs
push
lret
xchg
ljmp
arpl
jp
mov
mov
loop
mov
inc
inc
inc
cmp
inc
mov
aaa
data16
stc
out
outsl
or
jae
sti
jno
jo
cmpsb
xchg
loop
jmp
stc
mov
cmp
xor
cwtl
jge
jle
jbe
sbb
stos
cltd
in
insb
repnz
inc
test
pop
sbb
ficoml
paddd
inc
gs
pop
jl
mul
add
dec
mov
add
sbb
cmp
mov
lahf
sbb
fcomps
ja
leave
ja
sub
les
bound
push
jb
xchg
stos
push
popa
add
xor
test
pop
stos
add
stos
mov
adc
sbb
pusha
int
seto
int
inc
cmp
cmc
jecxz
js
mov
repz
fsubs
xor
movsl
fcoml
ss
stos
gs
push
mov
dec
sarb
xor
mov
adc
and
rorl
lahf
push
cmp
jb
mov
add
xor
fbstp
incb
add
pushf
shrl
adc
xlat
inc
jne
add
mov
jno
sbb
cltd
dec
mov
jecxz
jne
xchg
ret
sti
xor
mov
outsb
call
lahf
fsubr
sbb
adc
or
je
leave
out
inc
sbb
in
xor
cmp
icebp
push
sbb
out
xchg
fs
cmp
mov
xrelease
jp
lret
ss
fdivrl
xchg
inc
shll
xchg
clc
pop
pop
les
out
jmp
cmp
xor
pop
dec
or
imul
pcmpeqw
dec
mov
je
loopne
gs
inc
or
dec
ljmp
outsl
add
push
bound
cmp
and
shlb
shll
fildl
cmp
cld
jp
into
imulb
gs
pushf
cmp
notb
mov
out
dec
sub
ss
in
push
cwtl
popa
dec
cmpsb
test
inc
push
int3
cmp
jnp
pop
mov
mov
or
push
mov
fldt
adc
xor
mov
imul
mov
or
test
xchg
jbe
loope
add
xchg
nop
xchg
xchg
dec
xor
stos
mov
jbe
stos
push
cld
mov
dec
cld
fsubrs
ja
sub
jmp
cmpsl
fmuls
lret
sub
push
aad
dec
aas
cmp
pop
jne
loopne
pop
mov
sbb
inc
or
fstps
fidivrl
pop
lods
push
ljmp
xor
sti
push
or
inc
shlb
xchg
pop
lret
cmp
and
mov
mov
mov
mov
jne
and
cwtl
jecxz
jg,pt
orb
mov
xor
jle
xor
push
inc
cmp
cmp
rcr
jbe
inc
lret
add
fildl
dec
lods
jg
jecxz
sbb
xchg
jo
int3
xchg
fsts
push
mov
jmp
xor
or
in
adcl
shlb
push
mov
jnp
cmp
test
imul
iret
pusha
pop
repnz
or
jmp
out
sbb
cld
in
testb
jg
sbb
sbb
aas
cltd
mov
xor
and
xor
jae
mov
push
ds
sbbl
gs
in
pop
xor
outsb
clc
pop
cli
push
xchg
xchg
jecxz
rorb
mov
aam
cmpsl
insb
push
das
bound
push
in
pop
ss
out
xor
lods
jbe
mov
gs
mov
imul
adc
mov
les
lcall
pop
adc
xorb
and
rcll
push
xchg
icebp
mov
stc
xchg
lcall
je
fldt
repz
test
nop
cmp
cmc
mov
cmp
inc
test
push
fistpl
test
int
int3
aad
jo
mov
rorl
test
dec
jb
scas
adc
ficoml
add
lahf
lock
outsl
mov
je
lcall
jo
fldcw
mov
jmp
scas
out
lahf
sbb
push
pop
mov
mov
mov
mov
retw
xorl
lret
inc
push
pusha
inc
xchg
add
enterw
mov
inc
orb
pop
hlt
dec
lds
add
lahf
dec
cmp
mov
sti
insl
jne
sub
sbb
test
pop
push
mov
mov
jge
ret
loope
addb
clc
cwtl
jns
mov
jecxz
aaa
mov
aaa
and
in
mov
fbld
call
ja
imul
cmp
mov
pop
xchg
data16
sbb
call
mov
je
lods
shll
mov
inc
mov
pop
mov
mov
repnz
roll
add
jl
push
jo
mov
xor
mov
or
xchg
push
xchg
mov
or
jne
sub
bound
push
jg
jg
add
out
pop
add
adc
push
sub
shlb
or
jg
mov
mov
addr16
or
aas
clc
call
dec
mov
cmp
cs
in
hlt
cmpsb
dec
fcmovnb
mov
int3
icebp
fwait
xor
xchg
pop
mov
insl
push
fisubrs
loope
icebp
xchg
outsl
mov
roll
push
adc
inc
outsl
mov
ja
mov
sarl
orb
sbb
outsb
mov
push
out
flds
and
dec
lcall
pop
sbb
data16
iret
jae
fimuls
mov
outsl
vpmullw
mov
pop
and
clc
lret
add
xchg
pop
jp
dec
pusha
es
rcrb
ret
inc
mov
xor
insb
jno
mov
xchg
lret
movl
js
add
popl
lods
pop
or
sbb
adc
je
pusha
fidivl
mov
mov
jne
sub
mov
adc
jge
push
cmp
sbb
cli
inc
shlb
loope
pop
mov
or
cltd
cmp
pushf
aad
xor
movl
inc
inc
dec
out
add
dec
popf
sub
loop
lods
in
and
push
stos
mov
imul
cmp
push
or
cmp
leavew
jo
cmp
clts
adc
mov
pop
push
insb
inc
lea
icebp
xor
lcall
jecxz
popa
movsb
loope
iret
and
stos
idivl
je
rcrl
push
pop
aad
dec
into
xor
movsb
mov
pop
xchg
add
pop
or
mov
repz
or
and
mov
add
iret
cmp
adc
pop
js
cmc
arpl
xchg
out
out
pop
hlt
cmp
dec
mov
xchg
jp
push
pop
jge
insb
and
jp
inc
js
int3
out
int3
mov
rolb
dec
loop
jle
push
insb
sbb
and
lds
sub
gs
push
ljmp
fwait
scas
pop
leave
cmp
pop
lock
xchg
lock
aaa
mov
xorl
test
decl
xchg
outsb
inc
mov
push
filds
dec
mov
xor
ret
inc
ss
mov
push
repz
push
pop
cmp
ds
xchg
arpl
adc
jns
fldpi
jne
cmp
push
push
xorb
mov
dec
ljmp
dec
xchg
js
xor
sub
mov
pop
jp
hlt
adc
scas
rcll
push
aam
cmp
stos
pop
in
out
scas
and
sub
out
sbb
stos
rcrb
mov
xlat
mov
into
fstpt
cmp
imul
push
add
sub
jecxz
aaa
pop
add
mov
call
cmp
xor
xchg
cli
mov
fcmovnb
arpl
sbb
push
inc
lds
xchg
rcl
push
int
mov
xor
stos
out
lret
inc
std
push
or
dec
sbb
stos
dec
and
pop
add
dec
sahf
cmpb
loop
bnd
sub
pop
pushf
cli
cmp
and
rcr
pop
imul
popa
inc
std
or
mov
lods
fwait
cmp
push
jle
sbb
pusha
adc
leave
cmc
aas
sub
scas
aaa
mov
cmp
addl
push
addr16
popf
sbb
pop
add
aam
dec
das
lret
movsb
inc
pushl
out
sub
enter
adcl
int
lret
pop
ret
shlb
mov
or
sub
adc
mov
shrl
adc
mov
jne
push
push
sbb
adc
inc
in
and
movl
into
mov
jae
enter
cs
xchg
dec
push
addr16
rcrl
shlb
faddl
lock
insl
sbb
pop
lcall
rorb
mov
pop
xchg
imul
jle
iret
mov
fidivl
scas
mov
push
mov
xchg
ret
adc
cmp
jg
or
inc
rclb
inc
into
ffreep
call
lahf
test
jmp
push
ss
movsl
jnp
jno
mov
mov
test
mov
mov
mov
out
or
inc
sahf
jge
mov
pop
inc
mov
mov
iret
sub
dec
aas
out
mov
leave
or
mov
imul
loopne
dec
inc
mov
push
out
in
jp
mov
jnp
wbinvd
dec
push
inc
xchg
bound
push
push
xor
inc
sbb
lds
cld
js
sub
mov
or
stos
push
and
pop
mov
imull
data16
leave
pop
add
out
xchg
in
hlt
and
pop
inc
inc
jle
dec
das
sbb
mov
cwtl
inc
popa
mov
jns
and
adc
neg
pop
adc
sbb
cmp
push
sbb
xor
stos
shrb
push
dec
jno
icebp
mov
and
mov
adc
dec
sbb
jecxz
pop
jmp
divl
in
push
popf
in
nop
lods
dec
rol
pop
xchg
xchg
mov
xchg
cmc
in
xchg
adc
gs
clc
mov
cmp
adc
push
loop
shr
push
sbb
and
mov
jmp
adc
or
iret
mov
xor
scas
add
xchg
out
es
sub
test
sbb
movb
jae
and
insl
cmpsl
mov
cmp
std
leave
adc
clc
mov
cld
les
stos
mov
scas
push
mov
out
inc
lea
and
fimull
xchg
movsb
dec
ljmp
push
cltd
pinsrw
push
mov
adc
adc
push
pop
lcall
dec
sahf
pop
and
daa
cmpsl
gs
nop
pop
jg
repnz
or
cmp
sub
pop
js
push
movsl
aam
jmp
inc
pop
ss
dec
test
shrb
inc
shl
sub
lret
fists
sbb
stc
mov
jno
pusha
xor
ja
xorb
and
push
xchg
call
xchg
sub
fsts
or
aad
and
sbb
iret
mov
mov
dec
cmpsl
adc
es
push
push
pusha
fsub
cltd
rcrl
mov
or
xor
xchg
arpl
aad
or
add
and
add
or
or
nop
repnz
je
inc
in
jne
mov
adc
push
cli
call
js
pop
or
out
fnstenv
add
pushl
push
test
mov
pop
nop
pusha
lahf
loopne
movsl
jb
mov
mov
in
xchg
pop
mov
and
sbb
xor
mov
mov
imull
loop
mov
test
push
jp
clc
inc
push
and
push
mov
out
adc
out
and
rorb
xor
inc
mov
dec
cmpb
inc
and
inc
nop
mov
push
sub
loop
pusha
test
dec
mov
movsl
jns
sbb
movsb
rcrl
xchg
test
cmp
xchg
je
lahf
fsubl
ljmp
push
cmp
clc
jae
lahf
sbb
lds
fisttps
cmc
cmpsb
adc
jno
stos
xor
divb
aaa
adc
out
aaa
ret
bswap
mov
shll
xor
test
ret
add
jbe
outsl
iret
aad
negb
popa
dec
cli
mov
ror
imul
scas
cmc
imul
lds
fdivp
scas
mov
test
das
push
enter
daa
test
mov
add
push
sbb
xchg
add
icebp
cmpl
ljmp
sbb
mov
ret
sbb
mov
add
mov
into
pusha
hlt
dec
jg
aad
and
je
mov
andb
sarb
add
and
push
cmp
ficompl
lods
ret
sub
pushf
faddl
sub
adc
outsb
dec
loopne
mov
dec
or
lret
adc
out
push
addr16
xchg
push
nop
insl
mov
out
push
fcmovnu
jmp
lods
sahf
jp
call
lret
dec
push
or
repnz
push
mov
dec
or
mov
rol
cmp
cmc
stos
cmc
movsb
test
pop
xor
js
in
lret
mov
subl
vmread
inc
push
xor
push
mov
push
cld
mov
or
or
adc
mov
and
jnp
add
shl
mov
stos
mov
push
testl
xlat
out
pop
cltd
cmpsb
mov
cld
fdivrs
loope
outsl
add
cmp
sbb
cmp
andl
and
push
jle
sub
mov
ljmp
por
cld
sub
scas
mov
pop
sub
or
fldenv
or
nop
leave
enter
fcom
ss
mov
hlt
lods
fidivl
push
int3
xchg
or
jl
sbb
out
cmpb
sub
mov
fldcw
scas
call
mov
clc
and
negl
dec
mov
add
test
cwtl
fs
fnsave
add
stc
or
pop
test
leave
jae
arpl
add
or
or
ja
notb
or
inc
pop
xor
add
push
mov
lahf
lds
in
sub
les
sahf
rorb
stc
popf
pop
testb
xor
jge
fucomi
mov
mov
inc
shlb
mov
pop
lea
pop
or
scas
dec
mov
dec
insb
jmp
andl
jno
test
enter
add
mov
lds
loop
lock
shl
pop
rcrl
dec
push
sub
pop
inc
mov
das
notb
sahf
adc
aaa
leave
dec
mov
inc
fnstsw
movzwl
scas
mov
rcl
xor
xorb
in
mov
mull
inc
aad
mov
lea
in
aad
xlat
addr16
mull
in
ja
push
popa
add
in
pop
xchg
mov
aam
lods
in
push
das
cmc
or
dec
push
mov
mov
fdivs
mov
repnz
arpl
out
mov
dec
std
jmp
xor
dec
push
or
push
add
jb
inc
cltd
pop
or
or
push
enter
inc
daa
cmp
orl
mov
and
std
sbb
sub
cltd
jae
jecxz
cltd
push
jae
enter
jb
sti
or
pop
push
or
fucom
bound
xor
lock
mov
and
and
dec
push
divb
loopne
test
flds
xor
test
fisttpl
idivl
mov
lret
mov
adc
adc
mov
sub
xlat
sbb
adcb
push
cmpsl
cld
lds
out
es
cmp
add
push
ret
mov
cmp
jmp
jge
lret
push
jnp
mov
mov
mov
adc
lock
out
stos
mov
sub
test
xchg
dec
xchg
push
pop
pusha
sarb
push
gs
pop
shlb
dec
ret
int
ljmp
test
mov
imul
outsl
sbb
fbstp
std
shll
les
pop
xor
xchg
outsb
jns
or
sub
andb
je
das
cmp
cmc
dec
or
pop
dec
loopne
adc
cmc
adc
in
mov
iret
in
xor
dec
leave
incl
ss
test
xchg
pop
adc
jb
orl
pop
lea
movsl
rolb
fcompl
lock
pop
ret
inc
pushf
addr16
rolb
adc
sub
mov
add
cli
scas
mov
xor
or
cmc
cld
sub
dec
clc
push
sub
dec
ret
ss
mov
mov
aad
daa
fidivrs
das
cld
pop
mov
mov
mov
jne
push
iret
sub
arpl
outsb
push
inc
popf
int3
cmp
in
push
jno
fs
sub
ds
xor
in
xchg
sub
scas
rorl
in
add
jno
incl
imul
or
cmp
and
xor
subb
shll
pushl
xor
xor
pop
sbb
add
dec
enter
jge
sub
jo
imul
in
mov
ret
mov
push
repz
lods
bound
pop
negl
sub
icebp
pop
push
test
sbb
jl
cltd
sbb
aas
int3
testl
sbb
pushl
inc
push
call
mov
push
adcb
in
je
mov
fbld
inc
xorb
outsb
xchg
sbb
lds
nop
ss
mov
pusha
ja
test
xchg
mov
repz
sbb
in
imul
xchg
divb
jmp
pop
inc
and
pop
jl
rorl
je
sahf
dec
das
jno
xchg
xchg
jbe
clc
pop
jb
and
xor
imul
imul
out
cmpsb
sbb
pop
testb
mov
std
sub
mov
fld
dec
insb
sub
mov
call
mov
in
dec
sub
mov
das
or
mov
out
hlt
xchg
pop
sbb
xor
xchg
ftst
sub
or
daa
pushf
xor
inc
adc
imul
ret
outsb
pop
pop
pop
pop
mov
ds
sbb
js
fcomps
shll
mov
mov
and
inc
sbb
cmpsl
rcl
out
cli
in
in
outsl
jp
jge
mov
and
cmp
push
ljmp
sahf
mov
xor
sub
xchg
push
dec
jl
xchg
sub
loope
sahf
in
data16
mull
xchg
sub
out
imull
roll
cmc
inc
gs
ljmp
mov
push
orb
int
push
xchg
mov
lea
neg
jmp
xor
mov
push
lods
aaa
lods
in
inc
adc
cmpsl
lret
sarb
jbe
sbb
or
sbb
mov
popa
jo
push
xor
insb
fistps
cli
or
sbb
out
cmpsb
xchg
inc
dec
pop
lods
pop
fcomps
lahf
sub
sbb
lcall
mov
ret
inc
mov
sti
push
cmpsl
pop
insl
addr16
mov
push
out
jg
es
pop
xorl
mov
xchg
push
je
aad
lods
mov
mov
lret
mov
xchg
push
and
add
fs
jno
mov
xchg
lea
insl
inc
es
cltd
dec
cmp
jae
es
rolb
rorb
cltd
ds
adc
mov
icebp
das
fisttpl
dec
lahf
xchg
clc
arpl
adc
ds
mov
cld
test
cltd
inc
cmpsl
pop
xor
repz
scas
sti
sbb
mov
jl
cs
push
int
pop
or
pop
push
test
jle
inc
inc
out
out
insb
daa
dec
jle
repz
scas
jb
pop
pop
fmul
shl
cltd
pop
lods
fcmovb
insb
mov
sbb
pop
sub
daa
mov
lock
xchg
inc
jae
mov
test
or
test
pop
mov
enter
lods
adc
mov
dec
insl
repnz
cmp
mov
xchg
outsb
xor
jmp
je
cmc
es
cmp
inc
fidivs
movsl
mov
jbe
fldt
jecxz
xchg
xor
popa
stos
fistps
xor
ret
sbbl
stos
hlt
lods
push
or
mov
sub
stc
aam
pusha
lret
cmp
xor
lcall
fnsave
add
and
fisttpll
stos
or
in
insb
xor
jns
inc
sbb
pop
pop
xlat
cmpsb
jl
xchg
xor
insb
or
sub
or
lods
cmp
out
push
test
adc
cwtl
push
hlt
push
enter
lea
mov
adc
mov
jb
sub
fldenv
imul
jo
inc
cli
out
sti
fwait
lret
and
das
popa
xor
mov
inc
outsb
in
lods
mov
imul
pop
in
push
xor
cltd
pusha
setns
jl
sub
int
mul
push
or
lds
icebp
and
enter
icebp
mov
mov
out
pop
cwtl
jle
dec
push
jp
adc
cs
outsl
cld
sub
adc
call
out
jp
sbb
adcl
ds
xchg
dec
ffree
xor
push
popf
push
lret
add
fbld
sbb
add
cmp
fnstcw
stos
loope
sub
mov
out
sub
cwtl
jle
mov
int3
xchg
jmp
dec
ret
xchg
jnp
pushf
sub
sub
clc
inc
aas
inc
mov
ja
or
mov
xchg
dec
int
push
xchg
rcrl
hlt
call
xchg
repz
lds
and
movsb
adc
inc
stc
sbb
lods
nop
popa
add
pop
fwait
aas
imul
lret
loopne
push
jne
cmp
nop
inc
mov
ret
and
out
sarl
mov
or
ja
mov
pop
cmp
loopne
test
test
lock
and
lds
jp
add
xor
out
pop
pop
ja
andb
xor
sbb
pop
mov
push
and
inc
push
stc
int
cmp
sbb
jle
popa
jl
call
scas
pop
dec
imul
adc
ret
mov
icebp
jmp
testl
pop
mov
stc
dec
dec
sub
arpl
pop
out
stc
ret
pop
and
pushf
jg
pop
aam
mov
fisttpll
xor
xor
push
mov
jmp
sbb
stos
pop
loopne
loopew
pop
addr16
sbb
jae
adc
ds
fs
pop
cmp
mov
leave
clc
jle
loopne
sbb
xchg
cld
lds
jl
test
adc
hlt
out
fiaddl
or
leave
lock
popa
mov
push
inc
sub
inc
mov
xchg
ficoms
sbb
cmc
sub
dec
inc
pop
test
mov
cld
and
xchg
lcall
sub
pop
sbb
push
loopne
das
mov
out
dec
ret
popa
dec
adc
mov
call
jo
shr
cmp
fbld
iret
aad
jbe
dec
cmp
les
inc
mov
leave
fs
ds
dec
sub
nop
movsb
leave
testb
in
jb
and
mov
push
repnz
lods
or
notb
xor
push
lock
or
and
sti
mov
or
push
subb
xor
pop
add
fists
cmovg
jbe
sub
test
pop
mov
in
xchg
sub
outsb
mov
ss
sbb
outsl
test
out
xor
mov
jecxz
xchg
in
aad
testl
in
mov
repnz
cmpsb
pop
std
push
fnstcw
adc
push
mov
lods
cmpsl
pop
xchg
ret
testb
in
add
mov
push
cs
pop
dec
mov
rcrl
mov
xchg
js
xchg
or
fdivrs
movb
out
je
cwtl
out
jge
shr
outsb
jae
lock
xor
repnz
push
mov
sbb
sbb
xchg
xor
push
mov
inc
dec
xchg
or
dec
js
pop
fistpl
shl
pop
in
mov
jmp
loopne
xchg
sub
jmp
movsl
or
adc
in
xchg
bnd
xchg
and
lods
pop
cmp
imul
cmp
sti
ljmp
sub
and
mov
sbb
mov
or
mov
bound
andl
fisubs
mov
ljmp
aad
in
sub
xchg
xor
int3
fs
pop
push
data16
mov
xor
hlt
rdmsr
mov
add
fisubrs
adc
jl
push
inc
cltd
pop
or
movsl
sbb
leave
popf
mov
push
mov
imul
cli
xchg
jns
lock
dec
sub
adc
lock
push
mov
cld
outsb
ja
xchg
addb
inc
dec
mov
fstpt
mov
cltd
sbb
jle
push
dec
xchg
add
sub
test
adc
outsb
sbb
mov
xchg
mov
add
xchg
mov
add
stos
xor
aaa
je
xchg
jb
movsb
push
mov
sbb
adc
std
cmp
lcall
in
xor
push
sbb
cmc
fcomps
repz
sbb
jle
jl
xchg
cmpsl
aaa
loopne
sub
ds
clc
jo
push
imul
cltd
sub
les
adc
insl
push
and
rcrl
dec
icebp
inc
xchg
push
inc
insl
cmp
test
add
aas
mull
gs
mov
mov
jbe
fiaddl
cmpsb
lods
cmpsb
movb
sub
xchg
hlt
adc
jb
cmp
addr16
mov
mov
mov
pop
push
jae
orb
mov
and
jmp
dec
popa
mov
pushf
daa
js
sub
in
dec
mov
imul
sub
fnstenv
and
and
gs
jbe
rcl
xor
int
int
hlt
add
xor
mov
sub
fbld
ffreep
lds
sahf
adc
xlat
jg
sub
cld
add
call
popf
cmc
stos
into
xor
sub
aam
mov
xchg
mov
aad
lret
es
scas
rorl
and
leave
test
shr
nop
scas
arpl
mov
test
xchg
inc
pop
fucomi
or
pop
mov
sbb
sub
adcb
inc
sub
push
sbb
or
out
ss
lods
cmp
arpl
jae
push
dec
iret
mov
scas
test
stos
daa
xchg
int3
jge
xchg
jecxz
push
and
aaa
xchg
cmpsb
ja
adc
or
lea
mov
adc
stc
dec
insl
sbb
popf
push
lret
xor
pop
jl
mov
lret
dec
popa
mov
in
cmp
pop
repz
cs
sub
pop
loope
ja
xorl
mov
not
int
stos
xor
dec
scas
ds
adcl
lods
add
pop
push
imul
mov
dec
push
mov
sarb
call
xor
mov
das
jl
xor
aaa
fisttpll
fildl
jle
nop
addb
xchg
fstl
or
inc
test
add
jns
int3
jmp
push
daa
push
inc
lock
gs
sub
jo
cmp
inc
jae
lret
mov
fisttps
clc
fisttps
out
sub
push
movsb
test
sub
dec
xchg
pop
sbb
clc
jge
and
test
fxch
cli
xchg
xchg
dec
pop
mov
cmp
push
hlt
leave
test
fistps
pop
xor
cli
sbb
rol
pop
jne
mov
test
jmp
in
cmp
mov
mov
dec
out
arpl
push
adc
push
mov
mov
sub
scas
mov
mov
mov
add
int
loope
int3
mov
cwtl
adc
xchg
and
and
sbb
dec
test
push
add
negb
jg
push
lret
pop
xchg
cld
xchg
add
out
nop
or
iret
aam
xor
and
mov
shr
push
pop
push
lcall
push
push
fwait
jns
rcl
mov
shrb
addb
or
and
daa
dec
cmpsl
sbb
push
push
xchg
sbb
nop
in
push
cli
call
data16
incb
out
jne
xchg
sbb
inc
ja
push
outsb
pop
imull
adc
mov
mov
pop
pop
out
mov
mov
int
cmpsb
in
outsb
ss
loop
xchg
addr16
mov
or
cmp
inc
loope
out
inc
and
je
scas
frstor
xchg
cltd
in
mov
cmpsl
fsubr
mov
sahf
les
movsb
xor
jmp
ss
mov
imul
xor
xchg
xor
mov
repnz
dec
inc
push
adc
jne
sbb
push
lret
fstpl
ret
or
cmpb
mov
mov
lods
mov
outsb
pop
fisttps
mov
fdivrl
pop
aam
ja
sub
push
mov
push
fdivrs
sbb
push
std
fwait
cmp
jbe
outsb
mov
iret
fsubl
test
lds
fs
pop
or
in
sub
cmpsb
cltd
arpl
lret
or
push
test
xor
mov
jle
cli
xor
sub
adc
pop
adc
pop
inc
jecxz
sub
and
xchg
mov
neg
mov
loopne
push
xchg
cmp
mov
pop
in
imul
mov
dec
jl
ds
or
adc
xchg
add
cmp
in
ljmp
ret
xchg
jns
data16
test
mov
push
fildl
inc
les
xor
jb
jmp
sarb
adc
mov
ja
inc
mov
and
jae
adc
das
sub
add
lods
mov
lret
xchg
addr16
leave
mov
sub
xchg
mov
mov
in
sub
jbe
add
data16
xchg
rorb
ja
cmpsl
fcmovbe
shlb
push
in
mov
adcb
imul
adcl
adc
push
outsb
dec
cmp
mov
shrb
sbb
mov
std
pop
sub
mov
lods
stos
xchg
scas
jp
cmp
ror
sub
leave
iret
push
cltd
inc
lea
xor
lahf
mov
add
pop
insb
pop
sub
mov
mov
loop
neg
mov
stc
adc
aaa
adc
adc
popa
inc
cmpsb
push
icebp
inc
ret
iret
gs
sub
xchg
lock
sbb
jg
hlt
add
or
add
push
imul
out
adc
loopne
bound
cld
pusha
clc
daa
aaa
sbb
jge
xor
push
dec
and
cmpsb
cmp
lods
pusha
in
xor
adc
push
int
jecxz
test
push
cmp
je
test
xor
gs
hlt
mov
jp
loope
jb,pn
add
cltd
aaa
dec
push
test
jecxz
cli
pop
subb
xorl
repnz
mov
das
xchg
in
cmp
fisttpll
mov
mov
ss
ss
sti
daa
loope
notl
jp
push
xchg
dec
mov
pop
mov
xchg
dec
scas
mov
mov
ljmp
sub
out
push
cmp
jge
lods
sarb
arpl
in
icebp
xchg
fistps
sbb
call
jne
imul
cmpsb
xchg
mov
add
pop
mov
lahf
xchg
pop
jl
bound
sbb
cmp
shll
cli
std
and
mov
cwtl
add
mov
sub
enter
fsubl
mov
test
jno
enter
or
nop
stos
and
test
inc
fstps
jp
jp
mov
test
sub
jecxz
sub
push
mov
js
mov
out
inc
and
cmp
mov
ror
inc
lds
or
jb
or
cs
in
adc
jl
jo
sub
gs
pushf
clc
hlt
ror
lahf
lock
push
aas
test
imul
cld
enter
adc
xor
test
sub
or
hlt
xor
outsl
mov
push
ret
addr16
xor
add
insl
enter
lea
xchg
mov
mov
xchg
insb
add
cmc
ljmp
outsl
shlb
mov
ljmp
stc
rorb
cld
mov
fimuls
pop
sub
je
popa
aam
and
inc
cli
inc
sti
loopne
inc
faddl
add
fpatan
ljmp
cmpsb
lahf
ds
inc
mov
push
sti
orl
pusha
popa
pop
pop
movsb
inc
mov
iret
pusha
pop
mov
adc
std
mov
call
mov
pop
xor
call
pusha
adc
adc
mov
pop
lcall
stos
les
push
cld
xchg
pop
in
dec
gs
fstl
imul
add
xchg
std
inc
xor
loop
outsl
pop
es
movsl
mov
mov
inc
dec
ficomps
sbb
repnz
icebp
adc
xchg
test
xchg
jmp
xchg
inc
and
or
insb
rclb
lods
sbb
xchg
jae
pusha
xor
cs
adc
jle
scas
bound
loop
call
daa
pusha
lock
add
outsb
in
add
push
sub
lods
dec
push
loopne
out
fldcw
xor
mov
inc
in
cmpsb
dec
mov
add
dec
enter
lods
nop
mov
jo
xchg
mov
imul
or
pop
dec
add
dec
fiaddl
xchg
mov
outsl
std
mov
cmpsb
ret
hlt
ftst
jge
iret
mov
stos
mov
lods
imul
testb
push
in
outsl
adc
faddl
mov
rorl
push
or
int3
shr
stos
imul
cltd
mov
jo
cmpsb
subl
aad
in
insb
sbb
pop
mov
or
notl
ljmp
imul
cmp
sub
xchg
test
outsl
fs
pusha
lods
mov
es
mov
mov
push
mov
lea
cld
or
fchs
sub
and
stos
js
jmp
pop
cmp
rolb
sarl
cmp
ret
inc
jl
cmp
pop
cmp
xchg
aaa
es
mov
mov
stos
xchg
dec
xchg
sbb
cmp
cld
lods
mov
add
xchg
lea
add
or
mov
push
out
mov
repnz
leave
pop
xor
push
ss
leave
lahf
push
fs
or
lds
push
jmp
mov
mov
pop
lods
mov
into
pop
shlb
aam
loope
xor
inc
das
xchg
out
or
fs
test
xor
gs
xor
stos
pusha
mov
push
push
adc
or
rcll
sbb
aaa
inc
bound
sti
repz
cltd
mov
xchg
pop
scas
iret
inc
int3
cmp
bnd
movsb
sub
nop
jae
xor
cmp
arpl
xchg
and
xorb
in
dec
sbb
imul
sbb
scas
rol
in
xchg
sbb
sub
loope
sub
imul
xchg
push
xchg
jno
pop
and
fwait
pop
inc
sbb
in
xchg
mov
fs
mov
pop
repnz
jp
sub
aas
ficoml
gs
insl
hlt
or
aaa
setp
push
pushf
jl
insb
sbb
jns
ret
push
les
andb
imul
mov
mov
arpl
cld
mov
mov
and
fdivp
inc
and
adc
imul
rclb
es
xor
lea
pop
mov
int
cmpsb
mov
sbb
outsb
mov
test
adc
mov
cmp
iret
aas
sub
and
out
dec
push
push
mov
popa
xchg
dec
cmp
push
or
mov
cmpsb
outsl
js
stc
out
dec
pop
xchg
dec
lahf
sbb
dec
in
or
and
test
gs
insb
leave
imul
rol
in
mov
add
pushf
pushf
mov
cli
sbb
enter
sahf
js
cld
ret
ret
movsl
or
lea
fs
sub
push
shrl
fistpll
jge
subb
cli
xchg
int3
xchg
cmp
sub
pop
mov
xchg
adc
faddp
js
sub
out
es
int
push
add
ljmp
mov
mov
sub
movsl
and
pushf
jmp
outsl
adc
push
push
push
xchg
lods
outsl
jae
push
xchg
dec
aad
jge
test
nop
movsl
je
out
pop
cmp
mov
bound
lods
inc
push
test
inc
fcoms
xor
insb
fwait
test
fs
stc
fdivl
in
test
fcomps
and
pop
xlat
pop
out
ret
test
negb
mov
or
out
int
cmp
mov
cltd
mov
aas
pop
xchg
fisubrl
xchg
daa
jecxz
xor
out
mov
push
ja
andl
clc
sbb
out
mov
cmp
mov
sahf
and
jne
lahf
std
cs
pop
and
shlb
into
outsb
adc
mov
push
aam
and
jge
stos
icebp
push
lock
pop
mov
orb
sub
imul
add
xchg
hlt
cltd
imul
std
negb
stc
cmp
cltd
std
add
sbb
mov
emms
out
ret
push
sbb
xchg
cmp
fs
push
pop
mov
popa
and
lret
fxch
xchg
adc
ss
scas
fsubr
add
shrl
insb
jg,pt
mov
and
sbb
pop
adc
ljmp
outsl
rcr
mov
xchg
jae
scas
lret
shrb
add
dec
scas
or
ds
aas
data16
div
popw
ja
inc
or
movsl
mov
mov
shll
push
inc
bswap
int3
adc
xchg
jno
xor
sbb
add
fnstsw
imul
mov
jp
ret
repz
sub
xchg
push
daa
pop
dec
inc
repnz
repnz
popa
lods
mov
cmpsb
mov
sbb
mov
test
or
imul
das
mov
cmp
lahf
xor
cs
pshufw
call
dec
or
fwait
int
jg
rcll
test
mov
sub
aam
jle
inc
xchg
push
lock
test
dec
add
push
fs
pop
stos
jmp
out
and
pop
repnz
jmp
xchg
jmp
xor
jns
jecxz
cs
add
aad
sub
push
fnsave
cmp
out
pop
push
test
dec
ss
mov
and
mov
push
xchg
adc
xor
test
jne
in
dec
popa
fucomp
xor
test
shll
aaa
shl
pop
pop
add
mov
rcll
or
push
pop
sub
in
and
rclb
dec
and
shll
jb
je
xchg
das
jnp
fimuls
xor
in
push
pop
xor
int3
push
inc
mov
sbb
rcpps
adc
xor
jno
cmp
shlb
call
adc
jp
xor
sahf
mov
loope
cmc
rolb
cwtl
mov
daa
mov
cmp
ret
movsb
inc
dec
push
xor
clc
jnp
sub
dec
aam
xchg
lds
loopne
mov
loope
or
in
mov
add
mov
add
lret
fcmovne
adc
xchg
scas
jl
sub
sahf
mov
inc
adc
dec
lcall
mov
lock
cmp
jge
scas
pop
pusha
pop
lret
mov
mov
or
shrb
aad
jo
ret
or
pop
mov
dec
jne
inc
out
jle
adc
push
pop
add
or
cmp
push
cmp
in
mov
jge
dec
sub
je
xchg
mov
outsb
std
mov
test
adc
popf
pusha
fdivrs
lret
add
mov
inc
mov
imul
push
or
pushf
add
adc
jae
cmpsb
xchg
inc
and
mov
and
push
popfw
loope
ja
das
push
jecxz
cmpsb
repnz
mov
add
lock
filds
adc
aad
push
std
xchg
xchg
push
scas
inc
inc
popa
add
in
aam
push
fcompl
push
lock
sbb
into
mov
les
repnz
sub
gs
inc
cmp
xor
js
arpl
mov
or
fwait
test
iret
mov
push
cli
push
push
xor
loop
ret
pop
fisttpll
test
inc
mov
cmp
push
inc
mov
clc
lret
in
adc
pop
fwait
iret
js
lret
fisttpll
or
js
daa
popf
ds
push
lret
repz
lahf
sub
mov
adc
fwait
enter
scas
or
xor
mov
mov
out
andl
adc
xchg
dec
push
lahf
out
or
fcomps
repnz
hlt
dec
pop
movsl
xorb
aas
inc
std
jo
rorb
addr16
std
mov
xor
and
mov
push
inc
pop
pop
mov
test
jge
pop
insb
jns
dec
pop
sbb
or
loopne
sub
nop
idivl
popa
notl
pop
fstpl
mov
xlat
push
lea
aas
bound
sar
xlat
ss
lret
aam
ljmp
rorb
enter
into
xor
adc
fisttpll
subb
jmp
pop
xorb
xor
out
fwait
dec
and
adc
in
add
and
ss
movsb
pop
repnz
add
xchg
mov
inc
inc
sub
mov
loopne
push
cwtl
xchg
pop
scas
orb
test
adc
stos
cmp
xchg
jb
repnz
movsl
mov
or
sti
mov
push
out
in
mov
lret
shr
aam
rorb
shll
xor
stc
enter
mov
or
and
sub
mov
jle
call
push
std
inc
out
push
stc
in
cmp
push
mov
jo
decl
sub
inc
or
loop
sbb
pop
inc
adc
popa
xor
add
subb
jno
cmp
cmc
popa
jbe
xchg
sbb
sbb
sub
mov
pop
ja
cmpsb
and
add
push
mov
ficomps
aam
add
dec
das
shrl
addb
push
mov
out
lcall
pop
mov
pop
jmp
cmp
aad
in
gs
fwait
sbb
test
sub
push
daa
pop
push
and
pop
push
adc
int3
mov
hlt
mov
sbb
and
mov
cwtl
push
adc
dec
sbb
fidivl
mov
push
jg
je
dec
inc
int
aaa
cwtl
inc
adc
dec
stos
scas
sarb
pop
inc
jbe
adc
stc
mov
cmp
pop
inc
push
mov
sub
outsb
aam
sbb
scas
fisubl
add
popa
cmp
lea
cmp
ds
sbb
jge
int
dec
movsl
ds
popf
dec
jns
sub
push
lods
dec
and
xchg
cmp
dec
pop
mov
pop
push
mov
inc
into
and
xchg
mov
shll
pop
xchg
push
mov
xor
push
ljmp
cmp
add
push
lods
push
repz
rcl
jl
jbe
xchg
inc
daa
leave
nop
js
and
or
shlb
jo
adc
nop
cli
add
mov
fdivs
adc
dec
lea
aas
xacquire
mov
mov
popf
xlat
fbld
shr
popf
push
fcmove
out
mov
or
pop
add
leave
das
fimull
out
jecxz
dec
dec
lcall
clc
in
push
ss
dec
cmpl
xorb
cmp
in
int
pusha
push
pop
push
loopne
in
test
add
mov
mov
xor
sub
out
jmp
and
enter
add
push
mov
adc
clc
aad
pop
or
stos
dec
push
push
je
ds
jecxz
jmp
sub
pusha
daa
js
das
mov
loope
sub
dec
xchg
push
call
shrl
cltd
mov
pushf
xor
or
mov
xor
fs
xor
xchg
sub
lds
mov
sbb
jo
mov
pop
cmp
cmp
mov
outsl
loope
xchg
push
lods
leave
mov
push
dec
cs
dec
xlat
jae
mov
je
jl
shll
inc
scas
sub
mov
add
les
movsl
enter
movsl
pop
and
lcall
jmp
jg
data16
test
mov
lea
test
mov
out
es
ret
xchg
add
into
lds
mov
mov
cmp
cmc
loope
cmp
push
and
xchg
push
nop
and
fdivr
adc
sub
fs
dec
imul
cwtl
stc
loop
movsl
call
pushl
repnz
and
in
dec
sbb
scas
mov
ss
shll
mov
aad
cmp
jbe
xchg
ljmp
fsubl
push
add
jbe
std
scas
in
dec
ljmp
xchg
nop
push
push
shll
mov
xchg
aas
out
jbe
and
sti
mov
fstps
sub
mov
pop
hlt
out
dec
sbb
add
cmp
xor
mov
add
push
test
inc
ror
sub
dec
enter
xchg
scas
out
dec
mov
lock
inc
sub
aaa
sti
test
fimull
mov
pop
test
sbb
arpl
push
mov
or
sub
jmp
xchg
ljmp
jno
orb
xor
xlat
mov
sub
imul
sahf
cld
sbb
push
imul
shrl
sub
lods
cli
popf
push
call
inc
clc
fwait
loope
push
adc
mov
xor
fldt
pop
mov
push
pop
dec
fwait
cmovno
add
adcb
jns
iret
loop
cmp
loope
hlt
mov
out
scas
mov
or
std
lea
test
inc
push
loop
aad
cmp
xchg
pusha
and
enter
hlt
std
into
and
pop
mov
mov
insb
jge
or
sbb
xor
adc
add
dec
mov
leave
fdivr
movsb
hlt
xchg
andb
mov
movsl
add
aad
test
iret
ja
push
jl
pop
imul
shlb
loope
inc
das
fldl
inc
adc
pop
mov
imul
dec
mov
test
test
and
aaa
inc
out
mov
aad
mov
fistps
insb
aad
jecxz
fistpl
bound
int3
ljmp
pop
jne
mov
loop
xor
push
or
xchg
dec
clc
and
nop
xor
push
inc
into
mov
inc
ljmp
adc
pop
in
stos
inc
arpl
xchg
dec
mov
or
pop
push
test
mov
adc
pop
mov
int
lcall
outsl
int3
daa
jecxz
int3
push
xchg
fbstp
xchg
jb
int
adc
aam
pusha
and
ja
stos
lds
inc
cmpl
mulb
xchg
jnp
add
cmp
sbb
push
test
sub
inc
testl
cli
and
and
xor
push
insb
scas
and
mov
push
inc
adc
lcall
jp
repz
sbb
push
mov
ret
test
jmp
inc
out
mov
cmpsl
mov
stc
fidivs
jmp
push
fs
add
icebp
fwait
pop
imul
cmp
test
pop
mov
fs
imul
add
scas
add
push
push
in
mov
mov
jmp
and
xchg
filds
adc
lods
daa
jns
insl
mov
or
add
cmp
xor
sub
ret
inc
sbb
pop
jg
and
or
mov
into
mov
nop
dec
mov
arpl
icebp
cmpsl
push
addr16
sti
loope
sbb
xchg
dec
insl
out
pop
add
rorb
out
lcall
add
mov
xor
or
cmp
dec
int3
adc
cmp
xchg
jg
out
in
xor
mov
or
ficompl
arpl
loop
shlb
popa
sbb
mov
dec
movq
xchg
stc
pop
hlt
aaa
sbb
xchg
es
push
jbe
sbb
add
xchg
mov
fcoml
cli
mov
cmpsl
sub
mov
jo
lods
les
xchg
in
sub
scas
inc
popf
push
sahf
lret
pop
dec
mov
pop
jmp
push
xchg
lahf
ss
sub
cli
addl
adc
dec
mov
dec
inc
xchg
adc
push
imul
sub
ds
push
push
xchg
push
pop
loopne
fildl
popf
push
icebp
aad
call
std
fistpll
mov
sarl
mull
push
or
in
sub
mov
pop
movsb
xor
pusha
xchg
scas
popf
int
into
test
lcall
inc
mov
fsubp
dec
cld
rcll
stos
lret
int3
adc
push
cli
ss
and
xchg
jne
fisttps
mov
or
movsb
jb
sub
stos
add
mov
cs
jbe
add
mov
lods
hlt
sub
adc
into
sbb
jb
jae
arpl
outsb
aad
pop
dec
mov
sbb
sti
pushf
pop
mov
mov
ds
es
cmp
rol
nop
and
mov
out
jp
push
dec
gs
inc
jno
nop
test
push
je
in
jle
sub
mov
test
add
cmp
mov
and
lods
out
repnz
add
push
sub
sub
test
pop
inc
and
pop
cmp
add
jmp
out
sub
add
arpl
fdiv
adc
jmp
mov
mov
arpl
jmp
imul
pop
push
mov
cld
cmp
daa
pushf
rclb
cmp
mov
mov
lret
sahf
dec
notb
lea
and
cli
dec
push
aad
mov
pop
mov
rcll
scas
add
cmpsb
fwait
pop
jb
pop
push
mov
repz
jle
aad
sub
pop
add
add
dec
sub
adc
mov
rorb
jmp
xchg
jae
sarl
cmpsl
repnz
leave
ds
loope
out
xor
dec
xor
int3
mov
mov
aaa
mov
scas
loope
add
pusha
movsb
loopne
mov
insl
stos
sub
outsl
mov
jmp
fdivr
jge
fldenv
mov
push
adc
rorb
dec
mov
mov
test
cmp
cmp
mov
mov
insb
in
inc
dec
ret
inc
xchg
popf
int3
sub
gs
sti
jle
jle
inc
inc
dec
fldlg2
int3
negb
inc
mov
adc
jle,pn
cmp
sub
jne
mov
movl
pop
xor
push
pop
mov
mov
hlt
jb
fsubs
sub
cld
push
sbb
iret
inc
ss
pushf
xchg
mov
inc
hlt
out
cli
test
jno
std
test
add
movsl
jg
or
clc
mov
pop
jg
and
mul
push
adc
sub
ds
mov
insl
pushf
xor
add
cltd
and
mov
mov
pop
mov
aam
adc
pop
imulb
adc
aam
enter
push
enter
cmp
adc
xorb
cmc
inc
fnsave
or
xchg
iret
lahf
jp
mov
jmp
pop
cmp
jle
mov
xchg
mov
jecxz
push
push
jnp
add
movsb
jns
pop
out
loop
mov
dec
fmuls
and
repnz
ja
dec
push
aam
rcll
jnp
fnstenv
fstpl
sahf
into
daa
add
mov
iret
aaa
ret
push
cld
mov
and
icebp
add
xchg
or
jg
pop
fs
aad
xchg
das
fdivrl
sti
cld
fsubrp
or
pop
sbb
rclb
push
mov
mov
xor
push
leave
push
lods
mov
and
mov
jg
or
xchg
xchg
scas
in
sub
test
mov
jle
aad
mov
les
cltd
pop
push
sbb
or
dec
shr
enter
repnz
mov
jge
mov
scas
cmp
and
popa
mov
fnstenv
pop
cmpsb
out
push
push
sbb
pop
adc
rcr
loope
loope
add
sub
fs
push
sub
sub
lods
and
cwtd
lea
movsl
fdiv
dec
hlt
inc
movb
inc
call
in
lods
and
sbb
pop
bound
sbb
mov
mov
jl
hlt
idivb
sahf
pop
add
rclb
mov
fwait
loopne
inc
mov
push
into
jb
sub
xor
insl
pop
push
mov
inc
mov
pushf
fxch
cmp
xor
loope
and
insb
fldt
fptan
mov
stc
or
dec
sub
in
adc
add
adc
out
cli
jb
inc
rolb
pop
gs
mov
mov
mov
insl
mov
push
loopne
mov
mov
and
inc
jnp
sbb
add
jbe
lods
rcrb
cmp
int
mov
cltd
or
xchg
aas
stos
std
mov
push
inc
mov
mov
popf
add
fistps
jmp
pop
pop
nop
pop
push
repz
test
jl
push
shrb
push
push
outsl
arpl
push
add
cmpl
jnp
push
stos
in
or
sbb
fisttpl
inc
stos
aas
mov
es
pop
mov
or
or
dec
cmp
dec
jmp
dec
sbb
xchg
movsl
push
sub
inc
or
jmp
in
pop
addl
popf
jle
mov
mov
pop
push
push
lret
add
pop
daa
pop
mov
cltd
sbb
mov
or
loop
in
imull
mov
shl
sbb
daa
inc
jecxz
sarb
or
xchg
lret
fcmovne
inc
xor
or
shrl
add
adc
dec
dec
and
push
mov
in
enter
xor
lcall
test
adc
sub
int3
in
xor
popf
ja
cmp
pop
ljmp
or
pop
mov
adc
mov
cmpsl
dec
adc
popa
sub
mov
lea
test
icebp
lods
push
dec
jmp
add
dec
dec
pop
cmp
xor
mov
nop
and
sub
dec
add
adc
outsb
push
std
je
sub
inc
jo
xor
and
bound
negb
pop
stos
jle
std
jecxz
pop
jmp
cmp
sub
mov
cmp
cmp
dec
stc
inc
lcall
mov
xlat
pop
lods
pop
cmp
pop
jge
add
adc
mov
jb
sbb
pushf
mov
ja
shlb
stos
sarl
fsubp
pop
mov
push
pop
mov
outsl
shrb
push
mov
xchg
mov
std
in
adc
aas
add
jp
icebp
dec
jg
idivl
cmp
cmp
jne
xor
adc
stos
mov
xor
in
sub
movsb
jo
pop
mov
inc
in
lahf
sbb
cld
mov
cli
cwtl
shll
addr16
dec
int
jae
ljmp
mov
outsl
inc
push
out
insl
stos
je
jge
adc
hlt
or
xor
int
jno
push
add
sahf
cmc
push
std
stos
std
push
jo
xchg
xchg
popf
or
mov
inc
xor
ret
mulb
pop
insw
mov
iret
mov
xchg
push
stos
aad
scas
loop
bound
imul
push
js
push
mov
mov
mov
add
xor
add
cmc
test
mov
mov
sub
mov
test
shl
mov
sub
pop
mov
in
int
mov
mov
std
clc
pop
es
sahf
jbe
xchg
iret
xchg
out
push
cld
cmp
inc
dec
mov
mov
sbb
add
and
push
push
dec
mulb
and
enter
pop
sbb
cmpl
pop
scas
push
aas
push
dec
sub
inc
mov
clc
inc
test
jno
fidivrs
daa
shlb
cltd
dec
push
es
xchg
mov
push
aad
stos
stos
fstl
add
sbb
loopne
popa
and
sbb
or
xor
call
sti
lcall
mov
or
mov
pushf
xlat
adc
aad
adc
adc
roll
bound
jge
jge
add
push
fmull
mov
pop
lret
mov
dec
and
mov
mov
mov
xchg
jbe
popa
cld
pop
add
mov
lret
clc
jne
ljmp
jo
sub
pop
dec
aam
pop
jmp
rcrb
pushl
gs
cmpsl
pop
dec
addb
stc
ret
and
cmp
and
mov
inc
adc
mov
mov
cmp
jge
dec
cmp
xor
roll
jnp
xchg
enter
push
iret
shlb
and
ss
lods
push
mov
add
inc
pusha
jp
pop
push
xchg
and
subl
or
jl
push
add
in
inc
jnp
shl
sti
mov
loopne
sbb
shrl
fbld
dec
adc
imul
negb
icebp
mov
test
pop
aaa
xchg
add
and
jmp
dec
jecxz
mov
fnstcw
add
insl
inc
lods
jecxz
adc
sub
push
test
cmp
and
lret
sub
mov
mov
adc
lods
jnp
cmpsl
push
pop
sub
and
xchg
inc
fdivrs
sub
jo
mov
lret
int
lret
cld
mov
pop
jb
loope
enter
jmp
jecxz
push
adc
icebp
push
in
and
push
push
negb
ret
stc
add
mov
lock
jp
fwait
ret
es
xchg
pop
aas
pop
enter
lods
imul
or
jnp
cmpsb
xchg
pop
scas
int
dec
out
xor
jne
fdivl
ljmp
cmp
sub
mov
sti
out
lods
pop
xchg
or
lahf
or
or
popa
push
xchg
push
mov
in
adc
xchg
mov
push
add
ljmp
mov
addl
sub
sbb
hlt
jns
fwait
push
sbb
mov
pop
cmp
call
les
mov
dec
push
popf
cltd
fistpll
nop
mov
jno
jle
sub
loope
sub
or
pop
dec
xor
repnz
call
aas
cmp
jg
xchg
xchg
mov
prefetcht1
xchg
jmp
adc
mov
stc
and
loopne
or
les
and
jp
sarl
sar
js
inc
dec
mov
mov
ds
loop
clc
pop
xor
jns
or
jb
jmp
pop
jo
arpl
mov
clc
pop
pop
lahf
js
jb
fldcw
xchg
ror
ret
cld
lret
ss
movsb
dec
push
movsl
cmp
insl
call
repnz
mov
or
cltd
or
push
fisubrl
unpcklps
popf
scas
mov
jle
int
leave
jae
jg
jmp
jecxz
or
sahf
add
or
push
jae
ss
push
lcall
jmp
or
sbb
jb
pop
cmpsl
adc
mov
idivl
push
jecxz
xor
xor
movsb
andl
lahf
sbb
lods
in
or
or
loopne
out
out
cmp
adc
push
add
fmul
rcrl
jecxz
jl
xor
jae
inc
imul
push
mov
movsl
clc
add
das
mov
movsb
xchg
inc
mov
xchg
jns
inc
mov
dec
addr16
jl
cwtl
movsl
scas
dec
fidivs
incl
aam
shl
leave
or
scas
lcall
fcomi
mov
jl
fimull
in
je
jecxz
adc
mov
pusha
in
sarl
fimuls
pop
int3
stc
es
inc
mov
lods
pop
and
pop
stos
inc
xchg
jb
push
xor
sbb
push
pop
xor
repnz
inc
cwtl
dec
mov
pushf
clc
sbb
fsubrl
dec
in
mov
xchg
sub
jne
sub
push
imul
cs
lret
insl
jae
fcompl
or
lret
rcl
das
je
shll
lock
int3
adc
fidivrs
pop
adc
mov
add
scas
mov
jo
imul
lods
xchg
xor
hlt
xlat
call
sbb
mov
add
test
std
xchg
mov
dec
aad
lcall
test
js
jae
xchg
push
rorl
sbb
pushw
or
cmp
dec
xor
jnp
insb
xorl
fsubs
cwtl
inc
out
lea
dec
loopne
mov
or
loop
test
popf
flds
mov
icebp
pop
gs
or
in
pusha
lods
fmuls
faddl
mov
sahf
in
mov
mov
cltd
ds
xchg
sub
mov
fidivrs
xchg
cmp
scas
lock
push
cmpsb
sbbl
xor
leave
jge
xchg
icebp
lods
lods
out
sbb
in
leave
cmp
jl
das
dec
fadd
stos
push
jg
lret
gs
push
insb
inc
and
push
sbb
test
in
int3
dec
inc
mov
adc
shrb
pop
shll
std
jo
mov
add
inc
pop
fistl
xor
xor
or
mov
nop
push
mov
cmpsb
jmp
dec
push
mov
lea
icebp
push
inc
pusha
fists
sub
pop
fdivrs
into
mov
lea
popf
cmpsb
fdivl
sub
imul
insl
and
push
loope
dec
mov
mov
leave
mov
inc
pusha
stos
inc
lcall
fcomps
jns
jno
ljmp
or
out
inc
mov
iret
lods
adc
cmpsb
jb
and
jmp
push
movb
jle
clc
ljmp
mov
repnz
cmc
lret
cld
cmp
lods
mov
push
das
fbstp
mov
in
push
xor
jo
or
xchg
movsb
cmpsl
mov
sub
outsb
jecxz
in
and
lds
push
loop
stos
sbb
cwtl
push
ljmp
call
inc
cwtl
insb
jg
push
mov
outsb
xor
push
movl
jnp
movsb
jecxz
mov
push
cmpxchg
or
movsb
mov
test
xchg
dec
jae
ret
add
loope
or
pop
aad
or
or
pop
sahf
in
add
lock
jp
pop
outsb
out
add
inc
pop
pop
ds
out
sbbb
or
and
inc
fiadds
popf
and
loopne
cmp
lret
jl
jp
sub
rcl
scas
lcall
jecxz
lods
jle
sub
sti
pop
fstpt
sub
ss
lds
push
xchg
sub
dec
outsl
push
mov
dec
adc
and
pop
movsb
cs
adc
ds
xchg
mov
or
scas
dec
jecxz
outsl
jle
jge
cld
adc
xchg
in
es
sub
and
les
jl
push
cmpsb
idivl
das
jecxz
ljmp
fists
mov
and
xor
arpl
fsubs
push
cwtl
stos
enter
mov
inc
pop
mov
mov
jecxz
xchg
pushf
ss
or
mov
ja
pop
iret
push
dec
mov
dec
dec
in
shrl
sahf
xchg
das
pop
call
add
fldl
cmp
inc
out
push
bound
jo
adc
pop
xchg
repz
inc
xor
mov
adc
xor
sahf
frstor
xchg
pop
dec
xlat
sub
or
stc
inc
inc
mov
jecxz
cmp
jns
push
sbb
sbb
sub
inc
insb
in
mov
aaa
cld
sbb
mov
int
iret
cmp
loopne
test
insl
mov
mov
lea
ja
or
mov
push
xchg
dec
jl
sub
iret
xchg
jae
or
rcrl
stos
ss
sub
std
pop
shll
pusha
cli
inc
push
insl
in
sub
xor
pop
mov
lret
add
fs
cmp
imul
loopne
add
mov
iret
mov
leave
les
mov
jno
cs
in
jo
aam
call
stos
push
cmc
sub
repz
xchg
mov
cmc
popa
adc
mov
inc
mov
stc
mov
mov
faddp
mov
mov
inc
xchg
int3
das
shll
int3
pop
push
andb
mov
jnp
adc
mov
shl
bound
dec
in
push
mov
movsb
lcall
lds
popf
fildll
xchg
je
cmp
fistpll
call
aam
mov
fidivs
xor
jns
jmp
fldcw
xchg
fisubl
or
xlat
fs
add
or
xor
test
data16
cmp
jle
int3
out
sub
inc
in
lea
mov
popl
or
pop
notl
das
es
sbb
pop
sbb
ljmp
pop
sahf
int
add
adc
adc
mov
lock
iret
aad
adc
pop
andl
jp
data16
call
xorl
andl
scas
sub
mov
xor
roll
stos
adc
out
mov
aad
sti
cmc
rolb
cmp
mov
push
dec
sbb
lcall
push
push
mov
inc
sub
lcall
mov
xchg
lods
je
scas
sub
loope
inc
mov
pop
jo
jge
fistps
or
das
jns
cmpsl
daa
pop
pop
pop
out
ja
mov
ja
xchg
out
lahf
popf
xor
clc
and
inc
cmp
jae
mov
ja
xorb
std
out
push
jbe
test
inc
mov
cltd
and
jmp
mov
inc
xchg
aad
cld
data16
sub
cltd
test
fadds
icebp
jl
pushf
push
push
xor
mov
add
dec
and
hlt
icebp
pop
movsb
mov
or
sbb
cltd
rclb
and
testb
loop
icebp
sub
mov
pop
aaa
xchg
add
je
fisttps
nop
lea
sar
or
inc
inc
outsl
jmp
adc
lods
and
add
xchg
je
enter
lock
sub
lock
jl
xchg
mov
xor
clc
sbb
xchg
or
iret
xor
mov
std
ror
enter
jns,pt
mov
add
mov
nop
repnz
std
or
test
push
cmp
cmp
mov
dec
fnstsw
adc
push
xchg
xchg
bound
xchg
jb
xor
leave
bound
sbb
test
cmp
add
shll
mov
rorl
fiadds
clc
stc
xchg
mov
lahf
and
pusha
add
lods
fmuls
shll
mov
lret
repz
cmc
icebp
jle
outsl
popf
jmp
aas
pop
sahf
sub
xchg
fs
pop
subb
mov
push
pop
pop
push
dec
xchg
and
and
shlb
cltd
push
and
xchg
arpl
cmp
cmp
sbb
cmpsl
mov
xor
pop
aaa
add
mov
push
cmp
ljmp
ds
dec
push
xchg
mov
jl
mov
insl
inc
pop
inc
push
mov
sahf
aam
out
ja
add
xchg
rcr
inc
jns
inc
and
bound
push
out
divl
mov
xor
int3
out
das
iret
push
shrl
or
xor
inc
insl
jmp
mov
mov
or
test
lods
push
outsb
jnp
sub
inc
scas
sti
pop
pop
repnz
and
dec
xchg
std
in
sub
jge
insb
dec
dec
and
imul
stos
pop
jbe
pop
mov
loop
pop
xchg
out
push
xchg
add
mov
mov
aaa
gs
jo
cmp
jmp
out
jge
xlat
push
xchg
and
inc
ret
adc
pop
popf
sbb
mov
cmp
cmp
lret
dec
inc
adc
sub
pop
scas
push
ret
pop
and
xchg
xchg
ljmp
out
pop
push
imul
sub
insb
scas
xchg
mov
loopne
pop
adc
cwtl
sbb
xor
in
addr16
testb
sbb
adc
inc
adc
incb
mov
std
int3
jno
cmpsb
jne
mov
repnz
std
cli
push
sbb
mov
testl
mov
cmp
leave
inc
cmpsl
ret
sub
xchg
adc
sbb
loope
lock
pop
movsl
cmp
daa
mov
int3
cwtl
pop
iret
or
xor
int
repnz
jnp
shlb
ficoml
cmp
daa
jle
xchg
jle
sub
mov
leave
loopne
aad
stos
loop
pop
insb
aas
jae
negb
shlb
dec
cli
mov
sahf
xor
jmp
fs
out
iret
out
fiaddl
xchg
pop
add
repz
push
cltd
pop
add
xchg
rcrb
data16
xchg
push
push
inc
add
fmulp
cmp
jae
push
icebp
popa
andl
decl
cwtl
scas
cli
lret
mov
mov
cmp
ss
cli
lods
dec
insl
push
in
push
test
mov
inc
js
iret
jb
popf
push
and
mov
adc
test
sbb
ljmp
notl
sbb
lods
sub
jo
enter
jp
push
dec
cld
andl
outsl
inc
lret
lcall
movsl
cmp
push
aam
mov
adc
rorb
insl
lcall
push
inc
clc
push
and
jae
or
pop
and
enter
call
pop
pop
enter
push
int3
dec
mov
mov
inc
repnz
mov
mov
cltd
xor
pop
ss
icebp
fmuls
in
call
jmp
imul
out
addr16
shr
inc
xor
xchg
clc
pop
and
or
int3
dec
sub
jbe
sub
fdivrs
fwait
scas
icebp
popf
lahf
imul
inc
cmp
movsl
add
and
sub
push
mov
in
iret
add
or
pushl
lcall
pop
jns
loope
xchg
rol
sbb
sbb
ss
fdivrs
push
rcll
pop
cmp
cmp
nop
outsb
cli
stc
adc
pop
pushf
out
sub
and
dec
xchg
or
int3
xchg
dec
jns
fimuls
mov
sub
push
jbe
lods
enter
adc
jle
sti
nop
lea
shlb
addb
add
or
mov
xchg
mov
shrb
sbb
stos
ret
add
aam
in
and
pushl
or
rcrl
push
mov
cwtl
scas
cli
les
loopne
mov
xchg
cmpsb
add
xchg
xchg
pop
jno
push
pushf
fucom
cmp
test
cmpsl
jno
in
cmpsb
es
lods
mov
lds
mov
xchg
ret
mov
shrl
jnp
jns
aam
add
outsb
mov
jecxz
inc
lock
repz
das
dec
pop
cwtl
cmp
pop
repz
sub
int
cs
test
jbe
push
pop
test
insl
xchg
or
iret
mov
pushf
add
mov
jmp
xchg
stos
ret
fwait
inc
mov
dec
aam
push
aam
lahf
inc
mov
test
inc
insl
scas
stos
in
inc
sbb
into
xor
mov
dec
push
stc
inc
and
cmpsl
aas
adc
sub
mov
fstpl
leave
and
ret
and
sbbb
jbe
jmp
test
leave
rol
or
data16
roll
lret
je
sbb
repnz
jp
lret
xchg
mov
add
cmp
push
addr16
andb
mov
mov
scas
jge
inc
sub
pop
sbb
fucomi
xchg
cmc
imul
out
fnstenv
mov
dec
ret
dec
sub
mov
or
mov
imul
cmc
imulb
mov
and
adc
sti
fdivr
scas
jecxz
sbb
lea
movsb
adc
out
aas
movsl
xor
fdivs
add
add
inc
pop
lret
jg
outsb
pop
cltd
cmp
loop
roll
fs
mov
dec
divb
pop
es
xor
aam
or
mov
movl
ficompl
call
test
les
hlt
aam
or
jb
dec
cmpsb
pop
xor
sbb
hlt
fadds
pusha
mov
jns
out
test
rcr
mov
pop
jbe
cmp
ljmp
jns
dec
data16
call
xor
imul
xchg
test
push
xchg
cmpsl
mov
mov
xor
scas
leave
xchg
and
sti
or
xorb
fnsave
and
sbb
jge
ds
cli
mov
inc
movsl
and
sbb
lock
lock
pop
push
adc
ja
or
cmpsl
adc
sahf
dec
out
dec
adc
mov
mov
sub
push
push
jle
iret
repz
push
add
cmp
xchg
mov
jecxz
mov
mov
out
xchg
mov
jmp
mov
sahf
subw
scas
mov
repz
inc
pop
xor
xchg
push
enter
push
mov
imul
xor
adc
repz
xchg
xchg
ljmp
or
mulb
icebp
fdivr
int
pop
cmp
lahf
out
sbb
outsl
das
pop
test
lcall
repnz
shlb
repnz
and
push
out
js
pop
mov
sti
inc
clc
cmp
jmp
leave
and
in
xchg
sub
push
adcl
and
mov
add
jnp
jge
pop
jle
add
popa
loopne
popf
mov
dec
mov
dec
jo
dec
popf
fisubs
and
adc
inc
imul
lcall
ret
addr16
xchg
scas
push
cmp
sbb
cmpsb
add
mov
mov
inc
sbb
and
fwait
imull
cmp
inc
stc
sbb
and
clc
push
push
and
adc
push
mov
or
cmp
or
loop
call
sbb
add
ds
hlt
fs
movsb
movsl
rcr
cmp
jno
popa
outsl
in
icebp
inc
dec
push
outsb
into
adcl
cmpsb
je
aas
add
jg
aas
dec
insl
gs
push
pop
pop
dec
cmp
pop
mov
ds
adc
in
jno
ret
push
mov
sub
imulb
and
scas
add
and
ss
jge
andb
mov
mov
lods
cli
and
jmp
fistpll
arpl
je
or
jns
aad
push
xchg
or
and
pop
cmp
cli
ja
stc
sbb
inc
popa
and
push
ret
fstpt
test
or
in
push
xchg
aam
pop
das
xlat
mov
js
cmc
add
xchg
je
jne
cli
xchg
sub
xchg
in
fistps
inc
adc
stos
jmp
scas
xorl
cmp
jg
bound
push
sti
data16
clc
dec
cmc
in
es
xchg
add
mov
xor
orl
mov
imul
sub
addr16
cmpl
aaa
adc
in
in
movsb
adc
mov
mov
adc
and
or
lds
xor
sahf
adc
jl
pushf
cmp
lahf
mov
cmp
loop
pop
jo
mov
and
aas
cmp
cltd
and
cmp
iret
imull
repz
in
loopne
xchg
sbb
cmp
cwtl
cmp
dec
call
cmp
in
rcl
lods
and
and
mov
adc
lods
in
cltd
and
mov
in
das
lock
in
cltd
cmp
mov
pop
and
stos
lret
in
mov
shr
loope
mov
jno
adc
jg
add
imul
wbinvd
fwait
setb
and
jmp
stc
sub
mov
sbb
das
and
nop
or
jg
fnstcw
jle
loop
popa
lock
push
pop
dec
mov
clc
js
or
insl
or
xchg
mov
stc
or
int
mov
pusha
cmc
push
add
xor
cwtl
sub
out
lds
cli
dec
inc
and
sub
dec
pop
inc
lcall
jne
fimuls
push
mov
aas
inc
jecxz
dec
lds
push
add
into
lock
aam
jecxz
int3
inc
test
mov
mov
stos
out
je
xchg
jmp
mov
fldcw
mov
mov
stos
add
repz
adc
cwtl
jae
mov
pop
xchg
push
mov
pop
in
out
pop
sbb
mov
add
mov
xlat
mov
mov
pop
jmp
and
popf
dec
ja
adc
out
cmpsl
enter
xchg
jp
jnp
scas
jne
fs
lcall
aad
jl
into
xor
ja
decb
lds
gs
mov
nop
pop
xchg
stc
mov
sahf
sahf
ret
sbb
cmp
test
mov
xchg
iret
jnp
mov
icebp
jg
in
aam
pop
int3
in
xor
inc
stc
mov
ds
sbbb
push
jno
xor
jbe
and
mov
xlat
mov
pop
cli
loop
bound
mov
mul
mov
cli
ret
push
daa
aad
fsubs
nop
push
inc
push
gs
dec
pop
xchg
clc
nop
mov
or
out
mov
jbe
mov
stc
orb
nop
data16
shlb
jg
test
push
mov
stos
lock
daa
cmc
dec
cs
test
shl
push
icebp
lods
push
or
lret
cmpsl
sub
mov
adc
mov
xor
imul
loop
lods
sbb
ljmp
loopne
add
cld
xchg
aam
push
popa
push
gs
and
push
push
lret
dec
in
cwtl
xchg
cwtl
out
mov
pminub
cmpsb
fdivs
push
jecxz
mov
sbb
sbb
pusha
mov
call
lret
das
scas
xchg
jbe
mov
sbb
arpl
negl
pop
cwtl
sbb
aas
inc
lret
pop
ljmp
out
jae
lods
lds
jno
je
push
sub
sub
mov
inc
add
mov
add
xchg
out
aaa
loope
nop
dec
or
jmp
insb
pop
xchg
mov
pop
outsl
xor
stos
sbb
outsb
mov
test
push
push
daa
cld
ret
and
cmpsb
push
push
sahf
jnp
pop
enter
or
repz
adc
insb
or
jp
jmp
push
lcall
adc
or
cmpsl
xor
iret
add
sahf
jo
and
aas
shlb
arpl
dec
ficoms
in
test
repz
lock
std
and
sbb
inc
xor
ja
sbb
push
cmc
pop
lea
push
je
inc
inc
mov
cwtl
push
out
aad
cmp
push
cmc
and
inc
sti
je
mov
adcl
pop
mov
decb
xchg
push
ljmp
repz
pusha
xor
sub
cli
out
imul
pop
cmpsl
push
imul
ds
aas
scas
out
push
push
sbb
push
push
cltd
inc
or
aam
xchg
dec
sub
xor
call
xor
clc
sbb
and
xchg
and
xchg
jbe
mov
in
lret
cwtl
outsl
add
cmp
xchg
aas
lret
add
jg,pt
rol
ret
fs
dec
out
clc
sahf
iret
dec
mov
fldcw
lcall
lds
sub
lods
outsb
jl
std
xchg
and
icebp
jo
pop
mov
dec
daa
xchg
sbb
loop
stos
jge
mov
xchg
or
inc
dec
out
push
mov
in
adc
sbb
jo
inc
out
int3
sub
scas
adc
pop
sahf
lret
stos
insl
inc
fstl
stos
and
cld
jnp
inc
xchg
dec
loope
and
and
imul
es
lret
push
sub
sub
sbb
in
xchg
jp
mov
jg
movsb
shlb
dec
or
nop
loop
pop
stos
into
fisubs
add
lods
xchg
icebp
mov
pop
or
adc
aas
or
out
and
xchg
rorl
push
daa
push
add
popf
mov
dec
push
test
adc
leave
xor
movsl
mov
lret
push
mov
pop
movsl
rcrb
push
insb
dec
les
inc
mov
mov
inc
rcll
push
adc
test
jmp
dec
inc
dec
adc
lret
movsl
xor
scas
push
int3
push
push
maskmovq
negl
call
jmp
xchg
stos
sbb
lods
not
inc
jno
scas
add
xchg
pop
dec
add
add
sub
int3
and
fcmovu
gs
push
mov
jns
jne
stc
aam
pushf
mov
movsb
and
sbb
pusha
mov
setge
subl
in
mov
leave
popf
xlat
int
ret
cmp
jle
and
jle
and
push
pop
mov
addr16
or
stc
jge
add
adc
lods
arpl
into
lret
sub
sub
mov
aam
lds
popf
add
adc
jge
outsb
int3
jmp
sub
xchg
popa
gs
mov
bound
std
test
mov
push
aaa
sub
nop
xchg
testb
mov
jbe
icebp
aaa
into
and
divb
mov
jmp
or
sub
fwait
inc
cmp
xor
inc
xlat
ss
shll
scas
cs
jno,pt
sbb
insl
xor
outsb
inc
jns
inc
popf
jnp
jnp
cltd
sub
das
idiv
nop
xor
mov
es
jl
xlat
mov
movsl
jno
push
dec
dec
mov
movsl
mov
inc
mov
test
dec
dec
loopne
push
cmp
sub
jbe
cmp
mov
xchg
pop
sbb
repz
rcll
xchg
aaa
vucomiss
push
lcall
imulb
add
lahf
push
filds
cmp
popf
scas
fs
mov
testl
sar
mov
sahf
scas
lea
mov
iret
jno
rcrb
fwait
and
loopne
inc
shll
and
pop
outsl
xor
loop
pop
int3
push
xchg
pop
stos
mov
test
mov
sti
adcb
sub
jle
xchg
mov
sub
push
cmp
int
dec
push
scas
test
mov
fstps
mov
sbb
rolb
mov
test
lahf
adc
mov
mov
xchg
in
adcb
jmp
pushaw
mov
push
add
cwtl
xor
adc
out
mov
jmp
adc
xlat
cmp
fwait
in
mov
xchg
lea
daa
push
out
adc
rcl
imul
lahf
js
or
fisttpll
cltd
cmp
clc
dec
ret
aas
loope
rorb
push
mov
mov
mov
xor
out
scas
jb
mov
inc
adc
fwait
xor
push
pop
in
inc
das
out
imul
addl
jne
mov
test
xor
ret
or
push
inc
adc
mov
adc
pop
inc
fst
dec
push
out
test
outsl
hlt
idivl
lock
push
cmpsb
mov
fwait
pop
cmp
dec
aas
repz
xchg
push
mov
rcrl
xchg
mov
adc
sbb
adc
pop
or
and
inc
movsb
imul
leave
dec
out
xchg
filds
into
or
dec
pushf
aad
xchg
and
js
adc
in
cld
jb
jbe
ud2
enter
xchg
shll
mov
mov
and
cltd
sbb
lahf
fists
ss
adc
outsl
cltd
jnp
jecxz
stos
fs
add
jbe
jbe
xchg
mov
mov
nop
mov
daa
push
das
ret
add
mov
mov
das
xchg
fdivrl
clc
adc
or
ret
pop
xchg
push
push
cmp
addr16
jp
fsts
pop
inc
cmpsl
outsb
xchg
dec
sbb
in
aas
xchg
add
cmp
push
and
add
pop
mov
or
rcrl
subl
and
loopne
hlt
xchg
insb
jecxz
pop
lock
popf
jp
mov
dec
aam
add
fldcw
loope
repz
xchg
xor
dec
and
daa
pop
ds
orb
mov
jg
jg
push
cltd
pop
rorb
aam
fnstenv
jne
mov
inc
ss
and
sub
or
repnz
lods
inc
jae
cmp
test
add
sahf
mov
xor
negl
negb
xor
mov
dec
lods
in
dec
mov
repnz
les
stc
insb
add
add
jns
push
mov
cmpsl
fucomi
jmp
cmpsl
repnz
cli
ss
jno
fldt
mov
cmpsb
stos
negl
fdivl
fiadds
xor
pop
rolb
dec
gs
pop
add
or
in
sbb
into
xchg
out
call
jl
push
cmp
repz
lret
adc
add
xchg
in
xor
or
xchg
popf
sti
dec
dec
cs
add
xor
xor
leave
pop
sub
dec
enter
clc
lret
in
mov
imul
call
pop
orb
stos
fisubrs
clc
dec
mov
sub
push
pusha
xchg
js
jbe
cli
or
xor
xor
push
sub
xor
sub
jmp
sub
aam
imul
repz
repnz
mov
mov
lea
sbb
sbb
add
inc
xchg
push
sysexit
subl
push
xchg
into
inc
out
nop
movsl
mov
mov
pop
sub
test
std
dec
dec
aad
and
push
mov
addl
into
call
mov
movsl
clc
imul
jb
jg
int3
bound
int3
lds
cmp
call
bound
mov
and
in
cmc
or
add
sbbl
inc
sbb
sbb
add
loopne
cmp
mov
xchg
pop
cmpsb
sbb
cwtl
out
aas
sub
xor
scas
jae
sbb
rcl
cmp
js
movsb
in
cld
xor
stos
stc
mov
mov
push
xlat
jl
pusha
dec
add
jl
mov
in
sub
aad
inc
ret
imul
sub
xor
xor
lcall
idiv
adc
test
test
into
std
mov
or
mov
dec
pushf
scas
popf
push
jmp
mov
mov
push
ret
arpl
or
cmp
jmp
dec
out
sbb
or
push
cmp
jnp
xchg
push
leave
sbb
push
lods
aaa
cli
flds
add
cmp
cwtl
xor
fiadds
cwtl
arpl
or
hlt
aad
mov
sub
inc
inc
mov
add
stmxcsr
and
jo
fwait
aam
ljmp
lret
fmull
in
fstl
es
xlat
loope
add
stos
jns
xor
cmpsb
and
inc
test
shll
in
inc
adc
mov
rorb
sbb
out
jecxz
inc
jecxz
xor
icebp
mov
push
mov
and
sub
pop
bound
fiadds
mov
jbe
xchg
and
push
into
dec
out
out
jmp
popa
loopne
push
stos
mov
pop
repz
lock
pop
shl
mov
mov
xor
lret
xchg
dec
jo
xchg
xor
mov
add
xor
pop
push
popa
inc
lods
lock
jecxz
add
rcl
pop
cmp
mov
cmp
pop
test
push
int3
sbb
push
pop
popf
mov
nop
inc
je
inc
add
inc
ss
xor
or
cwtl
add
in
cmp
incb
cs
test
mov
aam
xchg
fimull
mov
push
cmp
fldcw
mov
xor
ret
addl
leave
popa
loop
cmp
sub
out
and
mov
lods
sti
push
add
push
dec
pop
mov
mov
pusha
repnz
imul
popf
fstpt
push
jmp
cltd
push
in
xor
outsb
push
cli
push
mov
or
adc
and
sub
add
mov
mov
repz
fmul
insb
shll
push
ja
daa
cmp
enter
jl
ret
lock
inc
push
push
icebp
sub
cmc
dec
movsb
mov
movsl
call
test
push
aas
pop
insb
cli
pop
push
cltd
sub
mov
scas
jge
jge
mov
or
test
sbb
push
ret
loop
iret
popa
sti
jae
jp
jb
sbb
pop
outsb
xor
ljmp
les
dec
cli
and
adc
out
fildll
cmc
adc
fcom
sub
jg
push
jle
mov
and
mov
adc
cmp
adcl
mov
push
lahf
into
push
sbb
xor
fnstenv
mov
sub
ffreep
leave
mov
pop
je
das
lods
xor
cmc
int
mov
add
add
popa
in
mov
frstor
nop
mov
lods
les
popf
hlt
call
mov
dec
mov
cmpsb
pop
fisubrs
add
hlt
adcl
xchg
push
cmp
cmpl
sti
push
shr
cmpsl
xchg
jl
pop
fisttpl
adc
es
in
and
cmp
iret
loope
daa
cmp
aas
inc
arpl
inc
xor
push
js
lods
or
pop
inc
test
push
sbb
push
jge
fcoms
xchg
inc
movsb
das
cwtl
addr16
xorb
outsb
cmp
in
les
int3
lock
sbb
and
jb
add
ljmp
test
jns
inc
sar
movsb
push
lret
stos
imul
jmp
inc
jg
and
sub
mov
das
xchg
or
pop
pop
dec
sbb
mov
xor
sbb
arpl
pop
jmp
sahf
dec
icebp
enter
lcall
sti
inc
push
pop
jo
leave
out
push
je
cmp
ds
addr16
xor
push
push
jecxz
ljmp
lret
mov
dec
dec
aad
mov
std
cli
sub
xchg
aas
push
pop
out
gs
cmpsb
or
iret
das
scas
ljmp
dec
inc
or
leave
or
push
sub
mov
daa
nop
arpl
mov
push
xchg
jb
jge
sub
xor
xor
adc
cmp
call
jecxz
add
jae
sub
or
dec
pop
inc
dec
push
outsl
into
insl
mov
jl
sti
int
push
and
mov
bts
inc
inc
loopne
mov
mov
push
xlat
mov
mov
shlb
mov
hlt
add
pop
aaa
and
adc
scas
sbb
add
pushf
nop
xlat
outsb
imul
push
int3
sbb
sbb
adcl
sbb
mov
mov
mov
push
and
jb
leave
xchg
sbb
xchg
stc
das
into
daa
push
jecxz
push
adc
mov
dec
hlt
push
rcl
xor
bound
mov
lods
mov
xchg
rcl
fstpt
mov
lock
fs
and
pop
xchg
clc
pushf
jnp
aaa
repnz
cli
stos
test
lret
stos
cmp
jle
xor
push
jns
mov
push
sahf
popa
pop
ljmp
fs
jmp
aad
add
sbb
fadd
mov
jns
fs
popf
add
pop
push
sbb
aam
out
and
mov
push
push
cld
fildl
push
ficompl
sbbb
xchg
xchg
fcomp
or
in
add
xor
push
xor
ret
mov
iret
dec
arpl
dec
stos
or
rcrb
mov
cmp
mov
and
cltd
insb
std
mov
push
fcoms
pop
mov
push
test
push
push
lahf
ds
into
lods
add
roll
mov
scas
xchg
xchg
dec
xchg
jbe
dec
clc
jne
and
outsb
push
mov
or
je
das
or
je
xor
push
add
lret
xlat
jbe
inc
lea
ret
jns
adc
daa
test
ss
sbb
mov
mov
dec
and
xor
nop
test
mov
jmp
mov
aas
pop
mov
out
mov
mov
xor
xchg
loop
xor
loop
pop
stc
add
cwtl
je
outsb
js
and
push
mov
push
mov
je
cld
movsl
cwtl
loope
push
or
fcmovb
cwtl
push
xlat
aas
enter
loope
call
aaa
dec
popa
dec
xor
mov
fiadds
and
sbb
loopne
dec
jp
inc
mov
aam
jb
xchg
pushf
dec
aaa
mov
add
in
shr
jo
cmp
mov
push
mov
ficoms
and
roll
jp
out
push
push
pop
call
jno
icebp
cmpsl
stc
and
lock
sbb
hlt
int
in
cmpsl
sub
mov
mov
dec
fsubrl
dec
mov
pop
out
pop
sub
or
repnz
aad
lods
and
sub
nop
ret
nop
lds
mov
cmp
into
mov
add
cli
sbb
ljmp
add
push
cmpb
outsb
cltd
mov
test
stc
rcr
jmp
push
mov
adc
add
bound
adc
dec
js
push
call
lods
in
sub
fdivs
fwait
pop
push
imulb
scas
push
pop
hlt
sbb
arpl
push
xor
sbb
sub
mov
xchg
mov
pop
addr16
iret
lret
test
mov
mov
inc
jbe
ret
aaa
inc
fiadds
icebp
dec
rorb
jl,pn
cmc
data16
dec
add
dec
and
inc
fadds
aad
pmulhuw
sbb
sbb
sbb
or
stos
push
outsw
test
sub
js
mov
push
mov
mov
lods
mov
add
xor
jp
lock
jge
aam
or
mov
cmp
xor
shr
rclb
in
sub
test
aad
iret
pop
daa
dec
rcrl
outsb
fimull
cmc
in
fwait
notb
sti
in
xor
sub
je
test
pop
jp
in
ret
je
insb
push
je
sbb
addl
into
add
xor
mov
icebp
adc
xchg
mov
aad
fcoms
push
ret
inc
pop
test
outsl
push
lea
xor
divb
jmp
sub
or
cmp
popa
leave
cltd
or
fs
cmpsl
hlt
or
sti
mov
xor
test
popa
test
ret
and
jl
fisubs
repnz
cmp
imul
lcall
adc
and
jmp
jno
mov
and
adc
movsl
cltd
lods
push
xchg
jns
mov
xorl
xor
notl
loope
cld
jge
and
lret
and
mov
dec
mov
xor
call
out
xlat
or
lret
scas
int
mov
aas
pop
out
xor
mov
xor
add
insb
add
cwtl
push
push
out
lea
testb
aad
pop
fdivrl
and
push
fdivs
cmp
cmp
jp
mov
ja
lret
jnp
sbb
cwtl
or
push
mov
cmp
jb
cs
loop
aam
mov
and
fstpl
mov
popf
adc
adc
mov
xchg
mov
int
insb
loop
adc
pop
add
testl
js
cmp
int
movsl
roll
pusha
jecxz
rcrb
xlat
or
pop
int
xchg
sbbb
cmp
out
movb
xor
imul
data16
sbb
mov
jge
sub
xlat
cmp
xchg
rcrl
test
inc
out
jnp
ljmp
jge
pop
jg
cmp
je
cmc
scas
inc
jge
lods
or
call
cld
mov
test
jne
push
movsb
outsl
int3
sbb
and
insl
daa
cwtl
mov
nop
loopne
cs
add
jno
cmpb
aam
pop
rorb
jns
jge
ffree
adc
sbb
daa
cwtl
and
aam
cmpsl
sub
mov
pop
mov
xor
outsb
movsb
cmp
jmp
fwait
xchg
push
push
in
push
xor
jl
xchg
jge
repnz
test
pop
icebp
repnz
xlat
push
shll
lret
mov
or
xchg
push
mov
xchg
mov
jns
add
jmp
sub
add
push
cmpsl
in
fstps
add
jne
xlat
loope
dec
movsl
pop
cmp
out
fildl
rorb
xchg
or
jge
dec
loop
fwait
roll
in
mov
sti
daa
xor
iret
cmc
je
pusha
test
push
je
leave
and
lahf
adcl
xchg
out
dec
and
cmp
movsl
and
lahf
fisubs
xor
inc
inc
sbb
ud0
dec
repnz
lret
inc
cmp
xchg
hlt
or
dec
xor
les
add
fistl
jae
jg
ret
ret
sub
add
jecxz
mov
popf
insl
clc
mov
lret
lds
imul
cmc
push
adc
mov
outsl
fucomip
les
adcb
xchg
inc
mov
push
jge
andb
sub
enter
mov
cmp
int
movsl
sbb
imul
pusha
test
push
mov
enter
and
jge
es
lock
cmp
push
pop
xchg
dec
out
cwtl
pop
enter
dec
in
repz
push
call
movsl
in
cltd
mov
dec
mov
cltd
add
mov
xchg
push
push
fnstenv
call
mov
scas
jb
xor
movsl
mov
mov
test
mov
lahf
subb
lock
movsb
out
in
std
sbb
setbe
mov
inc
xchg
into
je
inc
cmp
fistpl
movsl
loopne
cli
xor
fincstp
push
movl
cmpsb
mov
mov
imul
aas
jnp
loope
dec
lea
xor
xor
inc
repz
push
jns
pusha
sbb
je
and
add
fsts
xchg
addr16
xchg
xchg
cli
inc
rcr
clc
lcall
orl
push
xchg
adc
hlt
movsl
dec
lock
out
in
loop
fst
loope
mov
sub
jp
je
cmp
xlat
mov
into
stos
dec
xchg
jae
jns
mov
push
out
iret
mov
xlat
mov
icebp
sub
lods
add
push
pop
add
pusha
mov
daa
mov
repnz
or
xor
pop
out
pusha
push
es
cmpsl
fimuls
add
xchg
popf
shrl
cmp
and
ds
inc
enterw
sub
notl
sub
mov
inc
mov
inc
inc
pop
cs
ss
sbb
fxch
stos
mov
das
sti
jp
pop
inc
mov
sbb
add
jle
out
or
inc
mov
int
jge
jbe
mov
lock
mov
jae
es
lahf
popa
mov
enter
mov
insb
pop
mov
icebp
int3
test
mov
mov
loop
inc
xchg
mov
adc
inc
sub
pop
xchg
mov
add
clc
dec
mov
test
or
xor
mov
outsb
jge
movsl
arpl
push
jne
dec
jo
pushf
pop
test
push
arpl
cmpsb
cmp
jbe
pop
pop
in
push
loop
or
mov
xor
movsb
mov
icebp
sbb
sahf
jmp
pop
xor
or
push
pop
inc
and
stc
cltd
sbb
adc
cld
jle
push
sub
xorb
xchg
mov
mov
add
xchg
aam
in
es
call
cmc
cmpsb
sub
cmp
push
sub
imul
fbstp
push
out
test
sub
dec
aad
int3
jae
pop
cld
pop
pop
mov
lcall
inc
inc
std
test
xor
sti
cmp
push
pop
test
in
xchg
insl
lds
repnz
imul
cmp
ja
sub
and
fiadds
xchg
mov
mov
jp
xchg
jge
mov
jbe
insl
out
and
pushf
inc
mov
imul
cmp
stos
pop
aas
adc
cld
repz
mov
sub
das
mov
add
mov
and
sub
cmp
fbstp
adc
xchg
int
jle
cmc
pusha
lock
mov
mov
insl
les
fisubrs
dec
xor
jge
cwtl
push
jnp
into
rclb
call
sbb
xchg
dec
push
jp
mov
test
pop
pop
test
pop
out
aad
sbb
imul
inc
mov
jo
add
roll
aaa
push
cmp
mov
inc
dec
push
fcomp
xchg
outsb
and
push
inc
mov
aam
repnz
push
rcrl
pop
mov
xchg
int
mov
sub
dec
out
subl
ret
jb
popa
sbb
inc
cmp
adc
notl
pop
xchg
test
jae
cmpsb
les
hlt
push
fiaddl
and
xor
cmc
sub
inc
pusha
inc
dec
push
popf
inc
lahf
std
gs
mov
jle
test
inc
xchg
mov
fldl
int
cwtl
jns
test
mov
xor
mov
sbb
scas
popf
lcall
push
cmc
cli
pop
mov
add
cmp
mov
loope
jl
movsb
bound
jge
pop
test
std
add
sbb
in
sbb
or
dec
sub
bound
nop
and
aad
pop
subl
ffree
int3
fbld
mov
mov
ljmp
inc
sbb
stos
nop
xlat
fs
psrlq
pushf
jmp
xor
ljmp
lds
scas
mov
in
das
cmp
dec
clc
out
add
cmp
addr16
ds
jne
repz
out
push
mov
adc
mov
mov
pop
test
addl
jnp
addr16
cmp
jo
jg
pop
in
ficoml
add
adc
xlat
mov
push
add
dec
je
adc
lods
int
pop
and
or
rol
pop
jae
mov
mov
sub
mov
sub
aam
mov
sub
sbb
sbb
enter
mov
arpl
add
add
aas
aas
push
push
dec
inc
data16
gs
mov
popf
pop
push
loope
mov
es
jp
loope
fwait
ss
rol
shrb
fadds
ss
pop
add
repz
mov
dec
negb
or
pushf
sbb
pop
call
das
and
out
xchg
xchg
ret
loopne
xchg
inc
popa
xor
jmp
xor
in
jge
jecxz
lods
fisubs
popa
dec
push
fsubrl
daa
ja
shl
or
pop
aam
push
rcl
xchg
in
out
push
jmp
ret
inc
ret
push
dec
adcl
jns
xor
shlb
aas
fimull
fwait
mov
push
mov
dec
pop
pop
and
fld
negl
jp
mov
pop
dec
push
into
mov
lret
std
add
inc
hlt
fisttps
mov
insb
cwtl
mov
mov
cmp
arpl
stos
ds
dec
dec
ret
cmp
mov
and
and
cmpsb
add
push
shll
mov
cli
jmp
cli
push
and
push
xor
adc
loope
and
aad
ficompl
pop
test
mov
xchg
sub
cmp
je
mov
or
imul
xchg
subl
cmp
cmp
cltd
cmp
fdivr
rcrb
lret
xchg
scas
loope
inc
xchg
dec
mov
jbe
jo
imul
notb
cmp
and
dec
imul
or
dec
dec
add
push
fldl
bound
imul
jecxz
pop
in
xor
stos
js
xor
pop
lods
aad
push
mov
cld
adc
repz
movsl
pop
adc
adc
outsb
cs
cmp
nop
cmp
les
sub
mov
dec
jne
mov
jp
in
gs
test
shlb
lret
pop
jge
clc
je
int
add
sub
inc
fstpl
leave
inc
dec
out
mov
adc
rorl
xchg
pop
sahf
das
scas
in
lcall
xchg
testl
mov
mov
movsb
iret
sub
pop
sub
sbb
pushf
push
and
jge
push
ret
lret
nop
inc
inc
data16
lods
dec
sahf
xchg
fucomip
jge
xchg
add
addw
add
sub
lret
scas
push
and
leave
test
and
xchg
jecxz
mov
add
fnstsw
jne
mov
cmp
outsb
mov
shll
jecxz
jae
sub
icebp
ret
pusha
or
push
xor
jg
pushf
mov
pop
xor
lret
pop
mov
dec
sub
int3
les
stos
sahf
sbb
adc
mov
pop
stos
jmp
pop
mov
add
incb
push
rorb
and
sub
push
sbb
fmul
icebp
aas
aad
shll
dec
wbinvd
and
push
mov
mov
xchg
fwait
test
xor
xchg
lret
jae
movsl
jo
shlb
xor
sti
or
ror
mov
cld
pushf
iret
jb
and
imul
rcl
push
mov
lahf
aaa
dec
jle
mov
jnp
imulb
in
xchg
imul
pop
sub
fnstenv
mov
clc
out
dec
ret
push
jle
cmpl
in
mov
push
sbb
in
sub
aad
aad
sahf
cmp
xchg
cmp
jmp
lcall
jmp
jne
mov
lods
pop
xchg
mov
repz
repnz
out
daa
pop
dec
sbb
jl
mov
clc
push
aad
xor
sti
jg
jge
in
ret
adc
mov
xor
loope
or
movsb
icebp
lods
mov
int3
in
clc
nop
mov
sub
out
or
ds
pop
in
and
sar
out
inc
push
loop
pop
in
jecxz
rcll
push
sbb
fdivs
push
xchg
xchg
cmc
and
lock
push
ds
ss
cmpsb
sub
fildl
or
or
adc
and
ljmp
dec
les
rcrb
cld
iret
mov
jp
gs
push
pushf
enter
sti
ficoms
xor
fdivr
mov
daa
jg
loop
add
das
sub
or
cmpsl
sbb
fucomp
push
xlat
int3
test
fldt
xchg
scas
pushf
push
in
xlat
fdivrs
loopne
je
cmp
repz
and
xorl
pop
movl
fstpl
and
fsubl
mov
and
add
nop
pop
xor
pop
cmpsl
and
and
aad
mov
mov
mov
add
aad
fwait
out
push
inc
push
sbb
add
jge
push
sbb
push
add
shl
cwtl
imul
or
aad
mov
jmp
enter
pop
xchg
cwtl
je
and
in
add
out
mov
stos
jnp
pop
lea
push
xor
mov
inc
and
mov
mov
pop
adc
mov
pop
dec
xchg
sub
dec
or
sti
cmp
imul
xchg
sbb
pop
je
std
cmp
ljmp
fwait
lock
pop
adc
cmc
and
xchg
sub
cltd
pushf
pop
and
mov
push
xchg
dec
loopne
mov
pop
inc
cmp
outsb
jl
jecxz
sbb
bound
arpl
adc
cmp
insl
mov
mov
dec
imul
jg
xchg
imul
adc
xchg
jnp
mov
or
dec
mov
sub
mov
sub
scas
dec
sbb
jb
lds
lods
dec
arpl
xchg
mov
push
imul
xchg
sbb
adc
aam
stos
out
inc
addr16
or
dec
lds
outsb
push
cmp
shrb
dec
sbb
add
cld
dec
iret
aam
js
dec
mov
enter
pop
mov
shlb
cmp
and
push
push
fadd
dec
dec
sub
mov
xlat
xor
jmp
mov
ja
shlb
xchg
jo
aas
sub
and
sbb
jmp
add
jb
call
shrl
jne
data16
pop
inc
jmp
imul
pop
jns
cmpsb
adc
into
jne
xor
pop
aam
push
decb
mov
push
adc
add
imul
in
push
mov
aam
loop
bound
cmp
and
stos
mov
mov
add
dec
shrl
adc
push
test
adc
xchg
jb
xchg
fidivs
movsl
sub
mov
dec
lods
in
mov
imul
xchg
inc
pop
lods
and
fidivs
stc
into
divl
mov
mov
mov
in
pushf
rcll
xor
xor
ret
pop
mov
cmp
inc
jge
enter
adc
xchg
mov
mov
jmp
loopne
test
imul
mov
xor
cmpsb
aas
jl
sub
rorl
inc
pushl
test
adc
or
lea
cli
sbb
mov
mov
jae
in
out
lret
add
stos
filds
mov
adc
and
stos
pushf
imul
adc
mov
lock
or
movsb
sub
pushf
loop
add
sbb
outsl
push
fwait
ret
popf
pop
repz
scas
pop
lahf
pop
icebp
jl
ss
cmp
data16
das
xchg
mov
std
ss
lea
dec
sbbl
xor
pop
jmp
mov
out
sub
push
sub
or
sub
push
add
nop
sbb
pop
into
adc
fcmovnu
inc
imull
scas
icebp
mov
movsb
test
dec
ret
mov
mulb
xchg
div
not
jno
fldcw
push
or
push
or
jle
jne
es
sahf
and
mov
sbbl
inc
push
mov
stos
lahf
addr16
jmp
cs
push
jge
stos
or
mov
mov
xchg
inc
enter
loope
inc
cmpsl
jl
aas
mov
aad
cmp
xor
pop
cmp
int3
out
sub
dec
sbb
xor
mov
test
add
je
out
mov
loope
out
jnp
lcall
aas
lock
sub
orb
jo
das
or
in
mov
mov
push
test
fstpl
out
jmp
pop
jp
add
cmpsl
xor
ret
divb
dec
sbb
xchg
addr16
dec
push
out
sti
into
sbbb
xchg
daa
sarb
cmc
mov
arpl
rcrl
push
dec
dec
popf
data16
mov
enter
in
xchg
aas
jns
rcll
cld
pop
xchg
sbb
cwtl
rcrb
leave
fildl
jbe
inc
xchg
add
pusha
jge
insl
push
ljmp
out
sub
shlb
addr16
xchg
cmp
sub
out
lods
xor
and
orl
jg
sub
sahf
or
jno
jmp
inc
in
lret
sub
les
aad
insb
lock
mov
mov
ds
mov
out
out
inc
push
cmp
int
sub
xchg
jmp
adc
jg
push
cmp
pop
ret
mov
enter
jnp
jecxz
xor
jl
movb
sub
popa
out
xchg
and
pushf
insl
or
pop
ds
sub
incb
pop
rolb
mov
negl
cmpsb
test
mov
push
lcall
hlt
ror
inc
add
into
fsts
push
inc
push
jb
mov
loope
mov
mov
pop
fs
sub
sarb
adc
push
mov
push
inc
int3
test
push
rol
addr16
in
xchg
add
add
ja
push
dec
js
mov
lcall
push
fisubl
les
cs
inc
add
pop
stos
sub
icebp
xlat
fs
mov
or
imul
jb
scas
loop
jno
and
mov
pushf
mov
addr16
sub
mull
mov
or
data16
pop
out
pop
scas
mov
add
test
jge
mov
jo
in
adc
sub
mov
cmp
lret
mov
xor
mov
or
inc
inc
mov
inc
push
pop
dec
popf
dec
rol
in
dec
fidivrl
loop
bound
cmp
test
testb
repnz
inc
pop
or
aad
dec
es
cwtl
sub
imull
jl
inc
jo
fsubl
mov
xchg
subb
iret
inc
push
loopne
or
icebp
ror
hlt
pusha
roll
cld
xchg
je
add
xchg
dec
push
lcall
test
lahf
loop
pop
adc
inc
nop
das
fcmovne
mov
daa
or
xchg
mov
into
inc
inc
dec
lcall
and
xchg
and
adc
push
imul
mov
dec
add
push
mov
push
sbb
lods
jb
aad
mov
sub
lahf
sti
test
and
bound
push
cmp
icebp
iret
repnz
jne
loop
movsl
cmp
das
jns
loopne
lret
ret
fstl
pusha
ja
mov
adc
xor
jno
jmp
cmc
and
stc
inc
mov
xchg
push
mov
in
sbbl
imul
repz
dec
pop
imul
in
add
rorb
imul
dec
adc
inc
popf
lods
dec
inc
shlb
testl
shll
cmc
mov
sti
test
inc
popa
jne
pop
push
push
out
leave
mov
push
xchg
out
cmp
jb
js
sbb
cmpsb
inc
lock
dec
out
cltd
sub
lahf
xchg
fmulp
sbb
jecxz
pop
repz
fldcw
push
push
ds
lahf
and
sub
mov
fsubp
stos
adc
rclb
pop
sti
xchg
lock
stc
cmpsb
fnop
add
and
stc
imul
fimull
jg
push
jl
jge
jmp
mov
loop
imul
xchg
push
add
jge
scas
sub
mov
lret
lcall
xor
push
cmp
push
int3
sbb
cmp
and
xor
xchg
lcall
rorb
int3
aam
dec
dec
dec
cmc
movsb
loope
les
or
adc
adc
in
pop
stos
pop
inc
add
xchg
hlt
fmuls
fwait
mov
sbb
int3
shrb
aaa
scas
pop
imul
imul
jmp
int3
pop
faddl
mov
mov
cmc
repnz
push
popf
shrl
outsb
mov
scas
xchg
mov
jg
and
in
jbe
sub
or
aad
mov
xchg
adc
pop
cli
push
jno
mov
cmp
loopne
mov
movsb
cld
jmp
mov
aad
rclb
sub
xor
out
cmp
icebp
xchg
xchg
out
fwait
inc
add
into
jb
pop
popf
push
adc
int
notl
mov
and
pop
push
cwtl
jmp
or
jmp
lock
push
jecxz
in
mov
jns
xchg
test
xor
nop
loope
cmp
xor
and
push
and
jecxz
xchg
addr16
push
cmc
rep
fwait
cmp
pop
cwtl
mov
fisttps
js
pusha
out
jecxz
or
daa
jns
lret
and
insb
jnp
fs
scas
sub
mov
out
jbe
mov
ds
xor
dec
adc
add
cmp
mov
in
jno
cld
rclb
dec
outsb
mov
pop
adc
mov
jb
or
push
fbstp
and
inc
mov
xchg
push
lds
xchg
pop
adc
jecxz
test
or
ss
jnp
and
call
mov
inc
mov
stc
leave
cli
or
pusha
fistl
mov
add
cmp
jg
mov
inc
inc
scas
cmp
fnstsw
in
out
loopne
mov
xchg
cld
int3
sbb
pop
pop
push
fldcw
pop
cmpsl
mov
sub
lods
inc
mov
add
mov
push
mov
sbb
xchg
outsb
dec
test
nop
out
xchg
mov
inc
cmp
sarl
jne
fdivs
fwait
rorb
test
je
pop
or
adc
hlt
sbb
pop
mov
out
leave
pusha
ss
flds
jns
jnp
xchg
sar
ds
lods
xchg
pop
loopne,pn
rorb
cltd
add
jno
xor
ret
or
add
enter
lret
adc
pop
aam
dec
adc
test
je
inc
pop
mov
cmp
cmc
mov
mov
cmc
sub
sti
xorb
scas
in
jge
cld
addr16
push
pusha
in
jb
sub
xchg
popf
pop
je
jp
fnstsw
pop
cmp
cmpsb
test
mov
cmpsl
jnp
mov
mov
or
xchg
mov
jbe
xor
aad
pushf
xor
shrb
daa
cmp
cs
mov
mov
test
aad
iret
cmp
js
fistpll
aam
add
xor
pop
cltd
sbb
incl
notb
sahf
fcmove
and
push
roll
fcomip
xor
cmp
sub
pop
mov
insb
rcrb
pushf
inc
adc
mov
mov
aas
dec
enter
mov
scas
outsl
and
xchg
pop
mov
or
dec
cli
xchg
lret
jg
sar
pop
add
movsb
xchg
popf
cwtl
scas
mov
and
scas
shlb
sbb
movb
and
mov
jne
cwtl
mov
sbb
and
shll
pop
lahf
clc
into
loopne
and
shll
ret
xchg
dec
cs
enter
nop
aaa
jmp
xchg
mov
and
adc
pop
cmp
cmc
cmp
xchg
pop
jp
jb
popa
data16
scas
popa
adc
daa
and
jno
xchg
jecxz
push
and
in
mov
adc
decl
and
cltd
xchg
out
pop
into
xchg
push
std
jl
mov
push
push
xchg
xor
in
add
lock
stc
gs
xlat
mov
imul
adc
stc
dec
or
shlb
pop
cld
inc
imul
dec
in
pop
mov
mov
mov
out
or
dec
clc
loop
iret
adc
inc
or
inc
mov
out
cmc
movsl
pusha
repz
lods
cmpsl
jmp
and
mov
sbb
or
xor
in
push
mov
adc
inc
and
imull
mov
push
sbb
das
mov
xchg
mov
test
xchg
add
inc
stos
dec
xor
mov
add
lret
xchg
xchg
jg
shl
aad
stos
fmuls
arpl
add
lea
imul
movsb
adc
insb
stos
cmpsb
cmp
inc
and
push
incb
sub
cmp
test
sahf
les
dec
fcmovne
mov
mov
rcrl
pop
movsb
mov
clc
cmpsl
jbe
push
test
hlt
jo
adc
mov
out
adc
cli
mov
gs
divb
punpckldq
rcll
mov
rcr
or
test
clc
pop
cmpsb
lahf
jns
mov
or
ret
cmp
rolb
mov
lods
ret
in
stos
push
fisubs
ljmp
cld
mov
mov
clc
mov
xchg
jmp
out
pop
sbb
cmpsb
xor
stos
inc
mov
pop
pop
jne
pop
sub
gs
pop
sbb
xchg
xchg
cmc
ss
movsb
lret
xor
jg
in
lret
jmp
jb
data16
push
enter
inc
xorl
lods
push
xchg
cmp
cld
push
mov
add
cmpsl
push
popa
test
jno
mov
fisubrl
and
inc
lock
fcmovbe
outsl
xor
adc
outsl
cmpsb
jle
popf
fimuls
pop
dec
out
mov
int
mov
pop
inc
sbb
in
mov
dec
or
outsl
je
and
pop
scas
popf
jecxz
in
cmp
inc
je
je
pop
pushf
pop
mov
xor
andb
cmp
sbb
inc
ret
pop
sub
sbb
adc
andl
aaa
cmpsl
dec
push
xchg
sbb
inc
jl
call
mov
ja
fistpll
xchg
lret
cmp
lahf
inc
test
iret
call
inc
xor
add
ljmp
gs
testb
cmp
xchg
lock
dec
sub
stos
mov
test
hlt
dec
mov
mov
iret
xchg
clc
mov
push
pop
sub
mov
add
ljmp
loopne
jo
insb
shll
pop
adc
mov
mov
xchg
dec
pop
leave
mov
sbb
and
lods
insb
sahf
int
pop
jne
and
sti
fcoml
pop
fsubrs
fcmovnb
xlat
out
adc
jbe
push
and
insb
mov
sbb
loop
push
push
movsl
xlat
jp
push
aas
loope
push
gs
into
xchg
cmp
lcall
dec
xchg
adc
or
stos
dec
jnp
aam
ss
or
test
cmp
adc
xchg
mov
sbb
js
push
lret
adc
mov
pop
xor
cs
jno
outsb
push
xchg
lcall
dec
cmpsb
jo
mov
subl
pop
je
jge
es
stc
pop
repnz
sub
inc
mov
xchg
cwtl
adc
fistps
ret
loopne
insb
filds
fiadds
sti
repnz
dec
aas
cld
fwait
mov
sub
adc
aad
aas
pop
xor
popa
movsb
xor
or
ss
dec
out
dec
or
mov
pop
xor
daa
cmpps
mov
out
dec
pop
enter
xchg
pop
loop
lahf
mov
sub
js
bound
out
push
mov
fisttpl
clc
inc
dec
and
adc
cli
aam
jno
dec
push
ss
pop
and
inc
jnp
add
ret
pop
int3
sahf
arpl
dec
push
js
ljmp
lea
adc
mov
sbb
push
sahf
or
popf
jno
popa
mov
pop
sub
xchg
pop
sti
rcr
dec
mov
sbb
insl
test
jb
xorl
ss
xchg
sbb
push
movsb
cmp
imul
dec
adc
mov
jo
arpl
not
sahf
int
out
mov
fistps
mov
sub
jae
std
mov
mov
mov
sub
stos
lcall
cmp
pushf
add
lret
push
imul
ljmp
mov
xchg
inc
scas
out
push
cmpl
add
cmp
sbb
sbb
inc
lods
push
adc
lods
roll
dec
loope
and
push
in
out
mov
cli
xchg
xchg
adc
daa
pop
adc
pop
mov
test
cltd
pushf
pop
addr16
push
pop
sahf
insb
push
arpl
inc
lock
pop
push
jnp
je
shlb
or
adc
push
xchg
shrb
xlat
cmp
push
add
adc
jp
daa
imull
or
scas
scas
xor
push
insb
imul
rcll
push
xor
leave
or
sbb
fwait
dec
xchg
lcall
jmp
daa
dec
nop
pop
mov
mov
push
jnp
lret
fbstp
lock
das
push
xor
addb
int
fimuls
push
mov
pop
les
jo
loop
mov
aas
push
cmpsl
cli
aas
into
fwait
mov
push
das
jle
pop
fs
dec
jno
shll
ret
enter
fadd
dec
jnp
and
or
insb
mov
aad
pop
cmp
data16
and
repnz
xor
test
cmp
ret
shll
push
test
lahf
cmp
lcall
or
fwait
stos
mov
sbb
ds
aaa
push
cli
stos
or
adcl
stos
jb
xchg
push
pusha
sbb
and
subb
inc
or
subl
push
sbb
int
sub
pop
push
loop
imul
lret
sub
int
xchg
enter
mov
jmp
xchg
sub
fildll
push
pushf
cmp
fidivrl
adc
ja
ljmp
dec
xor
sahf
xchg
dec
sub
jmp
mov
ljmp
dec
outsl
shlb
outsl
stos
movhlps
outsl
push
sub
sbb
xor
cmp
jb
mov
lea
jbe
test
pop
adc
xchg
mov
mov
xchg
sbb
in
insl
nop
ficoml
test
sub
or
mov
push
mov
popf
sti
and
sbb
mov
daa
test
mov
in
add
sub
xchg
cmp
in
push
xchg
sbbb
push
into
test
je
int3
adc
jbe
cmp
push
push
in
mov
pusha
push
dec
or
addl
or
mov
call
mov
sahf
xchg
adc
push
jb
jns
dec
jnp
fwait
push
push
std
mov
xorb
cmp
int3
add
jbe
jmp
pop
fsubrl
cmp
cwtl
inc
jne
xchg
and
popf
insl
jg
test
cmp
mov
push
dec
test
xchg
sbb
mov
test
bound
cmp
xor
xorl
loopne
lahf
mov
mov
sti
mov
imul
test
int
sbbb
or
mov
enter
ljmp
pop
data16
inc
add
sbb
sti
nop
sub
stos
inc
lds
jmp
ffreep
clc
mov
enter
fwait
mov
sahf
cld
mov
mov
sbb
mov
xchg
and
pop
sarl
push
ret
mov
xor
mov
scas
lock
rorl
inc
sub
pop
mov
cmp
add
pusha
lds
push
jp
inc
in
jne,pn
dec
xchg
int3
jae
pop
cli
inc
loopne
mov
rep
daa
cmpsl
sub
int
fcompl
sbb
into
cmp
insb
pop
cmpsl
cmp
xchg
cmp
inc
int
sbb
jecxz
lret
inc
jnp
sarb
fbld
push
add
push
cmp
push
mov
lea
ficompl
mov
sti
mov
mov
mov
divl
out
ret
test
popa
outsb
aam
shrl
adc
pop
loopne
xchg
push
hlt
inc
imul
adc
gs
scas
js
pop
pop
mov
aaa
ss
popa
adc
xlat
mov
nop
call
jb
popa
jnp
inc
jne
sbb
in
or
push
stc
xor
fs
mulb
jne
jmp
pop
or
jb
jbe
adcb
mov
movsl
push
mov
or
xchg
sbb
cmp
push
jo
mov
add
std
lret
es
push
xchg
mov
mov
pop
adc
sbb
cvttps2pi
or
mov
sub
inc
hlt
jo
add
out
leave
loope
or
pop
jb
mov
cmp
rolb
mov
adc
add
popl
xchg
xor
lcall
lods
enter
adc
push
stos
jp
out
mov
je
fs
mov
jne
test
or
mov
rorl
cmc
xchg
les
add
xchg
in
jge
or
xor
rcr
xor
lahf
push
mov
out
mov
ret
cs
ja
je
shll
jns
push
fscale
subb
pop
loop
pop
ret
fmulp
dec
mov
lea
inc
jb
cli
shrl
cmp
std
iret
push
or
xchg
sbb
in
test
cmp
dec
test
imul
cmp
dec
pop
mov
filds
repnz
loopew
lock
sub
mov
jns
ret
sbb
dec
sub
xor
xchg
push
stos
or
aaa
xor
es
in
sub
fiaddl
ret
jg
inc
fldenv
and
mov
stos
dec
imul
mov
mov
hlt
pusha
sbb
and
popf
enter
and
xor
aad
mov
pop
in
sub
loop
mov
lods
loopne
mov
push
mov
ja
aam
sbbl
insb
mov
push
mov
inc
std
jns
in
fbld
sbb
pushf
fsubrl
loop
jle
adc
enter
xchg
rcrl
cmp
xchg
push
dec
push
push
gs
cmp
push
imul
fs
pop
test
add
mov
sub
sub
dec
mov
movsl
repnz
repnz
xor
aas
and
loop
mov
mov
mov
jge
faddp
in
pop
mov
jb
dec
inc
jp
inc
aad
adc
lds
into
cmpsb
addr16
xchg
outsb
cmp
clc
dec
inc
repz
push
out
cld
or
inc
enter
rcrb
outsl
adc
jne
filds
inc
les
imul
insl
xchg
aam
out
sub
rcr
push
daa
add
sbb
and
push
nop
xchg
push
test
xchg
jecxz
dec
scas
das
insl
lock
cmpsl
jnp
lds
xchg
daa
shl
xor
subb
jns
lret
in
outsl
mov
mov
shlb
icebp
xorb
and
mov
and
push
sbb
xor
mov
pushf
mov
pop
adc
xchg
in
inc
cwtl
and
mov
scas
dec
in
lret
adc
movsl
notb
cld
mov
bound
rcll
flds
sbb
fwait
andl
push
inc
sbb
add
inc
sbb
dec
mov
iret
cwtl
jae
push
sbb
mov
push
dec
xchg
out
xchg
mov
add
lock
stc
add
fcompl
cmp
cmpsl
xchg
fdivs
pop
pop
subb
pop
sahf
jae
sub
bound
cs
adc
jb
inc
sahf
call
lea
int3
fdivrs
inc
rcrl
cmp
xor
arpl
jl
push
mov
clc
mov
dec
ret
lea
sbb
in
add
cmpsb
push
jge
jo
inc
mov
lods
test
adc
mov
aam
sub
xchg
test
jge
mov
in
dec
or
mov
adc
rcrl
xchg
scas
jl
dec
mov
inc
push
insl
mov
shl
lock
insb
iret
imul
mov
popf
cli
out
xlat
rcll
pop
test
aas
add
pop
pop
pop
push
movl
inc
inc
fidivl
icebp
jle
xor
mov
sbb
data16
cmp
iret
repz
mov
mov
in
rcrl
fisubs
dec
popa
xor
sbb
lea
cmpsl
faddl
xor
lods
cli
outsb
add
pop
fs
mov
and
call
ret
cmp
rep
jne
gs
xchg
les
adc
ror
mov
inc
dec
cmp
mov
xor
lock
sbb
dec
repnz
nop
stos
lea
das
mov
add
outsb
pop
adc
adc
inc
leave
cld
mov
cmp
inc
jl
mov
scas
mov
imul
cvtdq2ps
fbld
cmpsl
adc
aad
sub
icebp
pop
fmuls
xor
out
scas
jbe
sub
jb
or
inc
lock
cltd
and
out
ficoms
scas
inc
pop
mov
addr16
lods
jl
adc
cmp
inc
push
jns
bound
rcl
popf
mov
xchg
test
lret
dec
pop
sbb
icebp
fstenv
test
das
leave
outsb
pop
inc
lret
xchg
cmp
pop
lahf
ss
icebp
jge
out
xor
mov
inc
mov
mov
push
add
test
pop
lods
addb
lahf
in
jge
sub
jle
lcall
mov
sbb
rolb
fbstp
ficoml
aad
mov
mov
inc
bound
in
xor
ljmp
xor
fisubrs
xor
mov
mov
faddp
sub
scas
mov
fcomi
sbb
add
icebp
adc
loope
dec
lock
push
loope
xor
pop
jne
mov
push
clc
inc
shlb
divl
inc
inc
add
lcall
cmpsb
ss
insl
jo
sub
mov
xchg
aad
flds
cld
xor
and
jns
sbb
add
sti
sub
js
push
lds
adc
and
setno
mov
pop
cmp
push
cmp
cmp
push
sub
imul
sahf
jle
pop
lods
stos
test
jp
pushf
push
cmp
js
sahf
es
pop
ret
cmp
aad
test
fildll
sti
stos
femms
das
aad
pop
add
sub
pop
pop
jg
fcoms
jno
jge
ficoml
popa
add
mov
xchg
cmp
add
ror
mov
xor
in
inc
xchg
mov
push
cld
push
xor
adc
inc
jmp
xor
adc
repz
xchg
xor
rorb
pop
subl
popa
in
outsb
cltd
sub
or
jle
xchg
popa
aas
les
mov
adc
sub
mov
and
jg
jb
adc
cmp
imul
in
clc
popa
push
arpl
add
push
inc
xchg
pop
push
cmc
jecxz
out
orl
nop
daa
mov
pop
mov
sub
or
scas
dec
jo
fdivr
mov
sub
stos
or
cld
ror
dec
jno
add
mov
sbb
jecxz,pn
cld
sub
sbb
cmpsl
cmp
mov
imul
int
nop
out
ss
pop
aam
jno
and
cmc
rorb
loop
lret
jge
jbe
jle
xor
xchg
lret
fisttpl
lret
sub
test
xchg
rclb
pop
sub
cld
jbe
aaa
adc
sbb
mov
sahf
jnp
inc
insb
push
das
roll
stc
and
out
ljmp
xchg
pop
testb
testb
add
sahf
or
xor
fiadds
sub
adc
jnp
sahf
icebp
dec
clc
push
pop
mov
lods
mov
dec
cs
out
pop
inc
and
push
mov
test
add
pop
cmp
or
arpl
int
jns
loopne
cmp
ljmp
out
dec
push
or
xor
in
push
shrb
cmc
shll
mov
cmp
sub
test
and
lret
hlt
jae
fmul
mov
lret
out
fcmove
pop
fldt
mov
mov
adc
pop
mov
and
enter
in
vmread
das
mov
clc
pop
or
in
jg
bnd
xor
cmp
popf
add
inc
xchg
mov
stos
xchg
cmpsl
sub
das
nop
sahf
imulb
lods
repz
in
cmp
inc
mov
hlt
xor
sub
adc
in
xchg
idivl
inc
test
mov
es
adc
xchg
inc
mov
das
adc
popa
enter
sub
xchg
adc
xchg
jp
pop
mov
sbb
xor
data16
and
cs
mov
cmpsl
mov
pop
call
push
rcl
mov
jae
or
int3
popf
dec
lret
aas
neg
rcrl
xchg
xor
lods
push
lea
frstor
cmp
push
mov
call
outsb
cmp
dec
xchg
cmpsl
inc
lret
in
lcall
pop
rolb
call
lret
and
repnz
mov
pop
mov
ss
les
fcompl
pop
iret
gs
andl
mov
add
icebp
lret
xchg
fldt
xchg
xchg
push
jmp
push
aam
jg
mov
or
in
sub
aaa
pop
scas
jmp
mov
leave
sti
cmpsb
adc
mov
inc
adc
bound
lea
xchg
pop
xchg
call
icebp
adc
test
orb
sub
getsec
pop
je
mov
testl
lock
jb
pushf
ds
xchg
inc
flds
sbb
mov
dec
stos
xor
loope
cwtl
movsb
xor
or
push
enter
jp
push
bound
sbb
cmp
into
or
mov
inc
iret
xchg
ret
xor
and
ret
test
xor
lods
sub
cmp
cmp
jns
addr16
pop
sub
push
jns
cwtl
movsb
jno
sub
inc
inc
shll
jno
mov
lea
mov
or
mov
adc
and
inc
test
scas
lock
mov
addr16
js
into
add
in
mov
sbb
ds
dec
bound
sbb
bound
or
pushf
mov
les
dec
jbe
aas
jp
jo
popf
cmp
mov
or
mov
stos
mov
popf
out
cmp
aaa
inc
and
ret
mov
sarb
sahf
push
or
shrl
call
out
scas
sub
inc
mov
or
push
jae
mov
xchg
mov
pop
or
outsb
or
sbb
xlat
movsb
fstl
je
rcll
fsubs
and
scas
cmp
ror
dec
mov
dec
sub
loop
sbb
mov
mov
push
das
mov
mov
xchg
push
fisttps
pop
sbb
pop
inc
mov
cmpsb
aad
mov
push
cltd
ficompl
cmp
in
das
add
jo
xchg
popl
mov
test
xchg
in
aad
jl
pop
stos
nop
cmpsl
scas
push
das
sub
push
sbb
xor
mov
xor
insl
lock
imul
in
jp
add
dec
or
push
je
jo
mov
push
and
sbb
lock
cmp
adc
loop
dec
inc
cmpl
nop
cmpsb
arpl
add
jbe
or
push
movlps
sub
out
cmp
repnz
mov
xchg
xor
cmpsl
lea
and
xchg
push
jge
hlt
out
mov
xor
fildll
sub
ret
sub
mov
lock
adc
je
pop
cmp
or
aaa
fsub
fiadds
dec
mov
pop
mov
mov
cld
cltd
cmp
and
in
sub
movsl
mov
xchg
pop
test
ja
mov
and
lds
dec
push
ficoml
xor
and
add
or
shrl
cmp
imul
enter
insl
divb
pop
inc
repnz
aam
push
push
sbb
ret
int
xchg
addr16
ret
cltd
fisubl
jge
cltd
insl
adc
add
inc
fld
mov
sub
push
xor
inc
add
sub
mov
add
inc
insb
test
dec
fsub
cld
ss
cli
and
aam
inc
inc
adc
mov
mov
int3
mov
sti
xchg
adc
int3
mov
pusha
cmp
pop
std
leave
cmp
fnstsw
add
ljmp
pop
push
push
rcr
mov
cmc
and
idiv
xchg
cmp
jae
leave
aam
insb
mov
mov
psubusw
gs
mov
mov
add
cli
mov
mov
xlat
jmp
inc
or
lret
in
test
add
sbb
and
xor
repz
mov
iret
jb
cmp
sbb
push
test
aam
mov
inc
push
adc
int
mov
push
xchg
pop
inc
ret
jecxz
or
adc
cmp
daa
adc
int3
jg
and
ss
and
je
inc
iret
push
jbe
mov
in
orb
scas
pusha
mov
aas
movsl
mov
mull
fs
mov
mov
inc
iret
xadd
out
mov
movsb
nop
jmp
push
mov
cs
imul
fs
int3
xchg
push
psllq
mov
js
sub
push
jae
dec
mov
xor
or
or
xchg
cld
sbb
pushf
test
mov
sti
or
lock
sbb
cmp
cmp
faddp
mov
lcall
or
add
dec
pusha
jle
cmp
or
dec
jmp
loopne
cmp
rolb
push
mov
add
fldt
cmp
jb
dec
in
mov
es
dec
cld
sbb
add
mov
sahf
aad
cmp
or
fdivrl
adc
cmpb
daa
aas
loope
xor
push
into
pusha
add
sbb
mov
mov
xchg
mov
fdivs
fstps
fisttpll
movsl
scas
lret
test
lahf
popf
push
xor
icebp
subl
pop
mov
jmp
pop
xor
add
xchg
cld
xchg
dec
dec
inc
out
test
clc
pop
jnp
sbb
mov
dec
test
das
imul
or
insl
jnp
repnz
ja
jp
or
push
ja
xchg
shrl
ds
je
popf
clc
and
jo
in
adc
outsl
flds
jp
bound
js
pop
cmp
sbb
xchg
cmp
mov
pop
cmp
ret
mov
jmp
inc
iret
sarl
sub
push
insl
adc
cmp
jae
xor
in
test
dec
mov
xchg
dec
xor
mov
jns
outsb
cmpsb
dec
sti
dec
push
pop
mov
push
data16
cs
iret
xor
sub
push
cmp
insl
sub
or
ljmp
iret
bound
cltd
rcrl
mov
popa
popa
xchg
out
outsb
xor
adc
in
jp
lods
daa
out
push
popf
xchg
stos
push
sti
test
nop
in
ja
stos
mov
sub
pusha
orl
xlat
cmp
inc
imul
rolb
mov
mov
xor
sahf
sar
insb
mov
call
les
sub
sub
mov
addb
pusha
ficoms
xor
cltd
fstpl
pop
cmpl
daa
inc
mov
xchg
pop
clc
lret
dec
mov
jnp
mov
mov
aaa
jns
scas
enter
iret
cmpb
sub
xor
or
outsl
jnp
pop
sub
movsb
push
push
cmpb
out
sbb
pop
fdivrp
or
add
gs
dec
dec
adcl
sub
rol
pusha
ljmp
pop
clc
std
imul
fistpll
and
icebp
ror
lock
cmpb
jno
push
das
rcrb
xor
fsubrl
je
xor
popa
mov
ds
lahf
mov
mov
jae
ficoml
in
lock
cmp
repnz
movsb
mov
je
xor
jno
jl
xor
out
cmp
stos
pop
imul
mov
push
loope
out
imul
cltd
mov
dec
fmuls
add
lock
in
ljmp
fwait
pop
inc
cmp
xchg
add
lret
fsubs
popa
sub
fdivr
bound
pop
cmpsb
add
adc
mov
add
in
cmc
pop
add
cmp
sbb
inc
adc
mov
jge
push
xchg
scas
mov
lahf
push
add
mov
or
push
bound
dec
pop
cmp
sbb
push
push
dec
enter
sub
outsl
jge
ficoml
push
mov
paddusw
pop
cmp
int
fcoml
ljmp
repz
sbb
fisubl
mov
jp
xchg
pop
xchg
mov
jo
mov
negb
sbb
push
loopne
add
fisubl
pop
sub
push
and
lods
dec
cmp
jle
cmp
or
push
stc
sbb
adc
mov
lret
pop
pusha
xchg
mov
pop
popl
or
xchg
into
mov
rcl
ljmp
push
imul
xchg
sbb
test
mov
out
pop
cmp
popf
leave
pusha
mov
add
bound
add
pushf
xchg
bound
rorl
cltd
sbb
adc
dec
int3
sbb
sahf
dec
or
or
lock
int
mov
sbb
imull
fidivl
jmp
mov
or
ficomps
aam
and
cmp
inc
sub
pop
aam
pop
push
das
jmp
ja
xchg
int3
xchg
fidivs
mov
outsl
xchg
mov
je
gs
mov
aad
inc
mov
test
icebp
hlt
cs
pop
nop
ret
push
xlat
stos
or
aas
push
into
out
ficoml
inc
loop
push
je
cmc
js
icebp
in
mov
lea
xchg
rcll
cmp
out
mov
adc
xor
cld
add
shlb
xor
lea
push
lret
sbb
andl
adc
pop
cmp
dec
and
inc
stos
jmp
fstpt
sti
sub
into
test
jge
jl
push
inc
pop
shll
outsb
dec
mov
fisubs
test
rep
into
or
push
cmp
mov
mov
push
mov
out
xor
xchg
mov
inc
lcall
out
ficompl
xor
das
or
jo
arpl
mov
ret
aam
lock
cmp
mov
insl
push
jmp
mov
incb
jae
or
pop
dec
das
fnsave
es
fadd
dec
movsl
xchg
push
inc
mov
addl
xchg
or
jnp
xchg
sbb
decb
cli
cmc
dec
lret
cwtl
out
aaa
push
sub
repnz
arpl
call
mov
dec
sbb
or
cmc
xchg
cwtl
movsb
jg
cmp
into
mov
shl
das
stos
mov
stos
sbb
ja
js
inc
cmp
fidivs
std
pop
lret
xlat
xlat
inc
mov
xchg
testl
out
dec
pop
xchg
inc
mov
fcmovb
data16
mulb
cmc
imul
fldl
out
adc
cwtl
out
pop
adc
and
mov
pop
xchg
lea
popa
lret
loop
push
fstl
pushf
mov
mov
hlt
pushf
popf
cwtl
sub
fnstenv
mov
stc
stc
inc
and
push
jge
cmpsl
cli
mov
jmp
aaa
pushf
dec
gs
hlt
adc
xchg
sub
sub
stc
sub
stc
inc
mov
data16
xor
int
push
pop
mov
fwait
mov
loopne
flds
mov
test
out
push
sub
mov
pop
dec
aaa
adc
cld
rclb
sti
adc
arpl
dec
testl
xlat
outsl
xor
mov
jmp
out
inc
xabort
mov
pop
loop
pop
clc
add
mov
push
mov
test
movsb
inc
aad
lea
insb
xor
pop
inc
and
pop
jno
jns
insb
leave
stc
jae
pushf
hlt
cmp
icebp
or
scas
outsl
push
inc
or
sub
scas
enter
inc
jle
push
or
add
mov
push
ret
sbb
rcrl
pushf
sub
sub
mov
rcrl
je
stgi
add
fdivrs
sahf
ret
hlt
cltd
mov
popa
add
push
inc
cmpb
fiaddl
sub
mov
sub
push
xor
inc
sbb
aam
pop
jmp
xor
roll
jge
inc
add
jno
sub
or
mov
mov
movsl
inc
les
jl
push
cli
dec
cmpsl
imul
mov
dec
js
jle
popa
lret
adc
leave
stc
mov
jmp
cmc
popa
loope
push
rolb
fwait
int
out
cwtl
arpl
sub
or
mov
jl
enter
das
jne
or
jo
pop
adcb
or
pop
jne
test
push
and
adc
pusha
push
mov
inc
sub
push
fcomi
inc
imul
push
sbb
loopne
in
vfnmaddpd
std
jb
leave
fisubl
sub
push
cltd
mov
aad
add
shr
hlt
add
daa
pushf
scas
push
xor
xchg
mov
jno
repz
xchg
adc
add
loope
mov
out
nop
adc
test
add
lea
enter
cmp
push
inc
or
dec
aad
sub
fcompp
insb
aaa
fistpl
sbb
repz
ja
pop
adc
add
es
mov
push
ret
ss
hlt
jmp
jno
add
negb
xor
xchg
fsub
pop
test
aaa
xor
cmp
test
hlt
clc
sbb
roll
hlt
jle
xchg
gs
push
push
cmp
rolb
sbb
mov
mov
pop
mov
pop
cmp
rclb
in
iret
rolb
jle
push
xor
in
icebp
mov
xchg
das
loop
jns
loopne
aaa
sbb
jecxz
loopne
jmp
fdivr
loopne
sbb
loop
inc
cmp
adc
push
sbb
les
push
xor
rol
cli
mov
lods
mov
inc
jl
in
mov
push
imul
ljmp
xchg
hlt
xor
mov
dec
ret
sahf
test
push
mov
mov
in
in
jge
addr16
sbbb
fwait
rcll
test
push
push
mov
icebp
xchg
stos
loopne
out
int
mov
sub
mov
xchg
in
ja
iret
data16
ret
cmp
ds
push
ss
add
or
scas
sbb
dec
and
mov
fcmovnbe
sarl
mov
je
int
xchg
sub
inc
pop
imul
popa
push
es
dec
mov
jbe
dec
dec
mov
jl
mov
cltd
jae
mov
mov
jp
test
mov
mov
xchg
mov
aaa
adc
cmp
adc
sahf
and
mov
pop
xchg
pop
cmpsb
push
sbb
loope
loopne
in
dec
sbb
into
jne
ffree
jmp
arpl
jb
push
fwait
push
jns
aaa
mov
popa
push
xchg
sbb
scas
lret
pop
adc
movsl
jno
and
push
aam
rorb
jg
dec
pop
ljmp
push
andb
xchg
dec
sub
fisttps
data16
xchg
enter
bswap
cmp
les
je
push
xchg
or
fmull
leave
sbb
arpl
and
hlt
repz
jb
xchg
xchg
repnz
fld
lea
jnp
lds
sahf
xchg
cmp
ljmp
inc
or
mov
inc
jg
dec
dec
int3
fwait
shrb
adc
insb
jns
sar
subl
pop
inc
xchg
cmp
scas
ret
jmp
cmp
test
leave
inc
loop
xchg
dec
mov
sbb
or
fistps
cmp
xchg
sahf
sub
div
pop
negb
outsl
out
and
hlt
mov
xor
or
add
cmp
test
negl
add
in
cli
inc
adc
mov
aad
in
fadd
lcall
cmpsl
push
nop
ret
jecxz
xchg
rolb
fdivs
and
dec
cmp
vcvttpd2dqx
mov
mov
or
insb
lcall
ds
xor
mov
outsl
negb
mov
insl
xorb
pushf
daa
mov
int
cmp
addl
testl
lods
loope
jmp
cmc
gs
repnz
rorl
or
popa
fdivl
fstpl
in
sub
jae
aad
out
inc
sbb
mov
mov
or
cltd
divps
divl
loopne
lret
jae
sbb
sub
pusha
pop
imul
aaa
movsl
imul
xor
cmp
insl
pop
test
adcl
sub
cmp
movsb
mov
fadds
inc
int3
in
or
mov
negl
les
push
in
pusha
bound
mov
sub
shll
add
mov
lret
loopne
ror
in
add
scas
les
mov
mov
dec
mov
idivl
inc
roll
stos
popf
lds
lcall
inc
xlat
add
adc
enter
imul
push
mov
scas
fisttpl
ret
cmpsl
cmp
int
bound
dec
pushf
adc
fiaddl
hlt
add
fisubl
xor
into
dec
xchg
in
je
data16
dec
add
or
repnz
aam
jp
ja
jno
pop
stc
faddl
mov
cmpsb
int
xlat
cli
imul
mov
mov
sub
mov
scas
xchg
cli
nop
cltd
mov
in
jno
and
push
mov
sti
xchg
adc
mov
sub
lret
shrb
and
das
inc
pop
and
push
loop
mov
hlt
adc
pop
lret
lds
stos
inc
jo
movsb
lcall
ds
int
dec
testb
mov
adc
in
mov
sub
sti
pop
push
sub
mov
dec
shl
call
sbb
mov
push
jg
and
push
test
adc
sbb
fistpl
sub
shlb
ss
push
add
test
sub
cmp
cmp
jno
sub
push
jnp
sbb
inc
jmp
jge
cmp
jmp
mov
jae
xor
icebp
dec
jnp
mov
pushf
dec
mov
pop
loopne
les
daa
out
sub
push
push
mov
es
sahf
jns
iret
enter
cmp
out
bsf
sub
or
dec
mov
xchg
daa
sbb
fs
push
je
in
lea
mov
adc
xchg
shlb
inc
mov
outsl
lods
xor
or
add
xchg
in
lahf
fcoms
push
push
outsb
mov
dec
cmp
mov
xchg
and
out
icebp
in
ret
lock
out
and
andb
mov
lcall
mov
jmp
sub
fldl
lods
add
test
jns
das
sbb
mov
jecxz
add
into
adc
and
pop
cmp
das
js
fs
hlt
pushf
pop
and
xchg
push
mov
mov
imull
loop
pushl
cs
popf
loopne
pushf
pop
xchg
call
jne
cwtl
leave
lahf
pushl
jp
and
push
cmp
adc
hlt
test
stc
lret
fiadds
lods
xchg
pop
dec
mov
mov
aas
push
mov
xor
or
ret
out
pop
test
test
mov
xchg
pop
dec
out
inc
jl
mov
pop
adc
loopne
dec
pop
cld
repz
pop
xchg
ljmp
repz
enter
test
cltd
mov
insb
xchg
cli
and
pop
fldt
leave
mov
inc
bound
leave
in
pop
movsb
aad
in
out
repnz
add
int3
cltd
add
inc
or
xor
adc
pop
je
js
ja
pop
xor
insl
inc
inc
test
in
or
icebp
dec
jb
pop
add
pop
xor
repz
test
sbb
in
daa
aad
ds
mov
stos
push
xor
xor
add
sub
xchg
fldcw
mov
and
push
pop
hlt
pop
jno
pop
cmp
in
fisubrs
gs
daa
int
jge
cli
dec
rol
mov
push
or
cmp
adc
enter
call
add
into
shll
lea
js
insb
mov
inc
dec
sbb
cmpsb
mov
xchg
mov
test
into
jp
inc
jecxz
bound
imul
jno
stc
sub
fsubl
iret
xchg
mov
iret
ja
aad
sbb
xchg
ss
jge
insl
cmpsb
mov
xchg
fidivs
int
mov
aad
pusha
push
dec
xchg
aam
jnp
sbb
dec
popf
rcl
lea
fwait
jne
enter
xchg
push
mov
out
or
jmp
stos
js
inc
push
jne
and
sub
xor
push
icebp
lock
das
fisttpll
xchg
sub
adc
push
lea
in
lods
inc
call
sbb
xor
lds
stc
movsb
pop
adc
xchg
mov
mov
and
inc
add
adc
cltd
loopne
mov
es
mov
gs
negb
movsb
adc
add
sahf
jnp
insb
daa
in
mov
adc
out
lcall
mov
outsb
ja
inc
cmpsb
dec
fs
pushf
xchg
sub
jecxz
scas
pop
or
xchg
mov
or
pop
dec
ds
add
mov
mov
es
fmul
aaa
imul
and
sub
dec
es
leave
scas
popl
dec
cmpsb
fldt
jns
jne
sarb
inc
add
sbb
push
outsl
fildll
loope
or
mov
mov
sti
adc
and
addl
loop
mov
mov
out
dec
dec
int
mov
inc
in
adc
push
rorb
fsubrs
sahf
sub
xlat
mov
mov
rorl
ljmp
sarl
dec
cmpb
notb
loopne
mov
pop
xor
insl
rcrl
jle
xchg
mov
sub
fs
icebp
mov
mov
mov
inc
mov
movsb
outsb
or
std
add
lahf
mov
out
xor
pop
sbb
icebp
xor
fwait
dec
call
hlt
ret
dec
xchg
cmc
roll
cmc
dec
fs
jae
add
mov
xchg
jle
mov
es
cmp
loopne
adc
add
pop
lret
sub
sti
or
scas
xchg
push
lods
clc
popf
enter
aaa
or
xchg
test
out
test
sbb
out
add
xchg
cmp
mov
shrl
lcall
or
rorl
cmp
rolb
mov
mov
sub
xchg
or
inc
movl
or
jg
movsl
test
stc
inc
sarl
cltd
test
mov
int3
ds
jae
sbb
popf
test
pop
dec
and
cmp
add
cmpsw
outsb
xchg
push
xchg
scas
cwtl
inc
sar
adc
add
inc
call
sbb
sub
cwtl
mov
nop
sbb
mov
xchg
test
scas
dec
repz
fldt
push
in
in
je
lods
movsb
mov
push
dec
cld
jb
cwtl
cmp
cmp
xchg
or
jmp
mov
clc
push
jmp
cmp
rcll
dec
push
push
mov
xlat
mov
and
push
in
cmp
mov
pop
push
add
inc
dec
jge
and
xor
or
in
daa
lods
cmp
lea
xchg
les
inc
les
lea
inc
fimull
cld
mov
xorl
xchg
fidivrl
xchg
mov
test
jge
movsb
cvtpd2ps
ja
and
fwait
sbb
adc
lods
cld
cmp
repnz
stos
sti
cmp
rcrl
sbb
test
inc
xchg
pop
cmp
pop
enter
lods
shlb
sub
push
fwait
repnz
daa
cmp
sbb
fs
xor
mov
popa
xlat
jl
es
cmp
xchg
outsb
add
xchg
in
test
das
ljmp
push
fidivs
lea
push
test
xchg
icebp
fistpl
mov
rolb
movsl
pop
popf
adcb
lahf
mov
jecxz
sahf
cmpsl
popf
ss
popa
push
or
and
cwtl
cmp
stos
and
stc
mov
daa
pop
leave
push
rcrl
inc
fwait
or
ficompl
inc
inc
add
sub
fldcw
iret
xchg
xor
ret
inc
movsl
xchg
divb
std
lahf
nop
loope
popa
fnstenv
sbb
in
stc
mov
data16
mov
rcrl
mov
and
rclb
xchg
imul
mov
clc
je
cmpsl
jge
jbe
insb
pop
fistpll
imul
clc
push
mov
fcmovbe
addl
lahf
jge
add
push
shll
test
into
add
sbb
in
fldenv
jo
ret
or
loop
or
jo
pop
inc
jnp
pop
addr16
cmc
mov
xor
pop
movb
rcrl
out
scas
dec
add
pop
mov
xchg
imul
cmpsl
jl
cmc
movsb
jmp
dec
push
addl
and
pop
pop
xor
aad
push
lock
or
cmp
in
xchg
mov
lods
mov
mov
mov
icebp
mov
dec
xorl
cli
inc
popa
mov
and
lods
lods
shl
or
xor
sub
dec
jns
in
es
fwait
dec
shrl
cmp
or
test
arpl
mov
pushf
imul
inc
rcll
mov
xchg
mov
int
rcrl
jb
push
ljmp
mov
popf
fnsave
cmp
rorl
cmp
call
shlb
in
inc
lcall
sbb
xchg
xor
rcrb
or
fidivs
fstpl
cwtl
ljmp
les
or
cmp
pop
mov
or
mov
mov
jg
cld
xchg
adc
loope
xchg
mov
sbb
jnp
mov
mov
push
push
mov
lods
into
xor
xchg
iret
rcrb
jns
scas
and
cwtl
mov
nop
ficoml
inc
sbb
and
repnz
mov
aad
aam
jb
jb
cld
cmc
jmp
mov
cs
fisttps
pop
outsb
sub
cmp
aam
add
push
scas
sub
repz
mov
jmp
inc
xchg
lods
xchg
fldt
and
mov
sub
xchg
sbb
es
fchs
hlt
cmpsb
test
mov
jns
iret
test
lods
call
movsb
xor
cld
and
mov
int3
gs
mov
aas
test
pop
cs
jno
adc
cmc
xor
enter
sarl
in
pop
movsb
aaa
imul
stos
ljmp
jge
daa
sub
add
sbb
loopne
insb
sub
xchg
dec
bound
int3
in
jb
fistpl
movsl
rcrl
or
mov
ret
negl
lods
mov
inc
aaa
or
es
lods
pcmpeqb
mov
int
cmp
push
mov
mov
add
inc
test
push
out
xchg
scas
or
stos
mov
mov
adc
in
rcrb
and
mov
test
mov
add
rclb
aaa
pushf
xchg
push
outsb
outsb
shlb
jno
xchg
jmp
mov
mov
mov
imul
lcall
and
pusha
add
stos
xchg
movsb
stos
stc
xchg
sahf
or
rorb
mov
cwtl
mov
mov
inc
inc
mov
sbb
in
loop
mov
outsb
test
ffreep
mov
repnz
in
xchg
jmp
mov
xchg
mov
or
idiv
movsl
sbb
call
push
push
or
jl
pop
mov
dec
cs
inc
pop
lock
in
test
mov
mov
out
or
dec
stos
sub
adcb
scas
enter
roll
sub
xor
xchg
xchg
sub
leave
lock
lcall
test
stc
mov
pushw
into
jne
push
stos
pop
lret
imul
pop
jmp
nop
cmp
pop
and
rorl
adc
flds
adc
mov
shl
sub
pause
in
mov
mov
outsl
mov
je
in
into
add
stc
fwait
or
testb
sub
cmp
dec
enter
in
push
movsb
or
imulb
scas
xchg
out
pop
lret
clc
mov
mov
inc
xchg
jo
lcall
push
lock
ja
jne
mov
lcall
xchg
push
movsb
xchg
jmp
mov
pop
sbb
xor
mov
pop
add
les
pop
outsl
imul
mov
lcall
in
sub
jmp
shlb
xor
mov
sub
orb
dec
nop
mov
aas
aam
sub
jmp
ret
jle
add
or
in
gs
add
js
push
stos
movsb
push
sahf
scas
popa
jns
iret
push
lds
repz
xor
ja
push
sti
jns
arpl
dec
pop
fsubrs
scas
mov
mov
sti
test
mov
jl
sarb
fsubl
insb
jl
fildl
jmp
popf
sub
cmpsb
imul
sbb
test
jno
test
ficoml
or
mov
mov
push
jno,pt
push
mov
lcall
mov
and
push
mov
mov
data16
xlat
add
add
adcl
scas
xor
inc
jecxz
test
out
xchg
dec
inc
mov
push
jp
jp
test
aas
inc
jg
lahf
pop
or
add
add
push
pushf
clc
es
push
cmp
and
stos
shll
sub
hlt
cltd
xlat
test
mov
sub
test
mov
aad
mov
pop
dec
lds
dec
stos
push
das
outsl
push
loopne
or
pop
push
popa
xchg
ss
push
call
cmp
stos
das
ret
jmp
fwait
mov
icebp
mov
loope
dec
in
movsl
scas
lret
mov
and
push
push
repz
ror
pushf
xor
push
gs
popf
cmpsb
pop
push
ror
or
fs
in
fistpll
mov
daa
test
pop
ret
push
outsb
sub
jne
jo
mov
aam
pop
mov
inc
pop
mov
call
je
jbe
scas
gs
pop
popf
js
xor
pop
mov
inc
dec
mov
out
and
lds
rcr
imul
pop
out
lret
and
mov
mov
out
and
xchg
mov
jl
dec
push
into
fsubrs
mov
jmp
cmc
out
sub
insl
cmp
mov
cld
addr16
adc
addl
sbb
fcomps
adc
adc
pop
dec
clc
cmp
cltd
mov
sub
out
mov
aad
mov
push
fidivl
sahf
bnd
xchg
xor
addl
inc
scas
push
mov
dec
sbb
jmp
call
inc
push
or
into
push
hlt
into
dec
jmp
jne
pop
repnz
mov
fbstp
push
xchg
lret
adc
out
adc
lea
push
sub
jg
add
jne
andb
cmpsb
aaa
push
add
insb
test
decl
aas
mul
scas
gs
adc
jle
push
ljmp
mov
inc
or
mov
adc
cmpsl
loope
inc
clc
push
pushl
push
daa
inc
js
sub
or
outsb
mov
js
mov
cmc
push
jge
loopne
pop
ljmp
insl
lret
jne
and
inc
lea
dec
lret
dec
or
lahf
cltd
mov
lahf
push
adc
push
cmp
cmp
dec
push
sub
push
into
mov
lock
insl
xchg
pop
or
push
jb
enter
mov
out
and
sub
mov
cmp
cltd
adc
or
outsl
mov
ja
out
lods
and
cltd
scas
add
add
mov
cli
ljmp
push
das
shl
out
fbstp
inc
adc
insl
sub
outsb
aas
iret
inc
adc
jp
adc
or
add
loope
or
sbbb
sub
int
xchg
inc
fwait
jo
out
in
xchg
adc
loop
stc
dec
jb
xlat
loope
idivl
adc
lret
or
or
in
adc
das
test
neg
mov
ja
insl
lods
aad
cmpb
push
push
cmpsl
subl
pop
cwtl
loopne
cld
xchg
loope
jns
fldt
clc
outsb
pinsrw
std
inc
shlb
movsl
and
bound
adc
push
mov
out
jl
inc
ds
test
fsubs
repnz
cmp
sub
xchg
mov
mov
ret
aam
shrl
filds
into
sub
mov
shrb
add
and
cmp
das
add
imul
pushf
out
mov
outsb
rorb
idivb
xor
cs
push
push
lret
or
ds
cmp
inc
out
and
ror
int3
int3
test
dec
sub
out
push
cmc
dec
es
add
rcrl
xchg
subb
xchg
int
in
pop
push
xchg
mov
sbb
not
add
jnp
notb
arpl
rcll
xchg
cmpsl
fwait
bound
sti
and
inc
lods
dec
das
nop
outsb
push
pop
adc
and
and
out
jge
rolb
cmp
movsb
pop
call
loope
push
inc
adc
and
enter
into
sti
fimuls
jge
inc
rcrl
xchg
xchg
jo
sub
adc
arpl
insb
pop
out
jbe
loope
lret
adc
mov
stos
ret
mov
push
lahf
fsubs
jmp
fstpl
add
movsl
mov
fidivrs
lret
clc
jnp
fnsave
pop
loope
fcomps
in
lahf
arpl
sub
repz
jmp
inc
loopne
mov
clc
popa
orb
pushl
roll
sahf
sbb
daa
mov
aad
pop
int3
dec
mov
into
test
in
and
outsl
sti
xorl
sub
sbb
ljmp
addr16
xchg
in
sbb
and
jmp
xchg
imul
lods
test
cmp
call
inc
lahf
mov
push
test
fwait
cs
and
loop
add
cli
push
cmp
xchg
sub
mul
sbb
aam
mov
dec
loope
daa
fsubrs
jl
shrl
mov
pop
inc
dec
loop
cs
lret
jecxz
and
jge
sbb
cmp
xor
xchg
mov
jnp
pop
add
and
push
sahf
fsubp
cwtl
cmp
mov
repnz
ret
fiaddl
scas
jbe
sbb
jb
rcr
sub
cmp
nop
mov
jg
or
cmp
mov
and
leave
popa
xchg
xchg
les
xor
dec
mov
outsb
and
aam
jbe
adcl
nop
sub
jns
pop
data16
mov
jbe
clc
jae
push
shrb
call
pop
popa
les
ror
add
push
xor
arpl
adc
mov
or
jl
imull
fnstsw
and
pop
lea
ret
sbb
and
leave
mov
sti
and
daa
fsubs
nop
movsb
arpl
mov
into
sbbl
cs
fdivr
inc
aad
jge
xchg
cs
mov
sbb
sbb
add
mov
test
dec
imul
lds
push
xchg
lcall
add
adc
adc
loopne
mov
clc
sbb
fwait
leave
pop
sbb
imul
imul
mov
mov
push
arpl
hlt
adc
repz
icebp
xchg
xchg
fmull
jle
xor
jnp
add
sub
push
mov
mov
sbb
sub
sub
jne
addr16
into
jae
pop
cmp
test
pop
lods
jmp
pop
dec
aas
sub
push
in
sarl
aad
adc
xchg
pop
push
ss
xchg
pop
cmp
mov
jns
cld
add
das
stos
cmpsl
leave
scas
add
cltd
sbb
or
lret
mov
cmp
movsl
dec
pop
and
cmp
pop
add
aaa
xor
aaa
ret
jmp
repnz
addr16
dec
outsl
cmp
repz
dec
adc
adc
enter
pushf
jbe
les
ds
inc
das
pushf
jg
pop
xor
orl
mov
and
xchg
push
cmp
xchg
loop
inc
mov
pop
dec
adc
mov
xor
int3
sub
or
outsl
cs
stos
pop
inc
mov
jp
jno
inc
jp
jno
pop
lea
mov
dec
mov
xor
movsl
imul
sub
fnsave
add
out
jmp
cmp
mov
push
pop
jbe
popf
insb
adc
pop
jmp
jmp
and
dec
cmp
outsl
lds
xchg
scas
popa
jle
cmp
cli
pop
mov
shlb
dec
pushf
xlat
jbe
loopne
aaa
jl
xlat
daa
enter
lock
dec
js
dec
or
mov
ja
cmp
add
popa
scas
cmp
sub
les
sarb
popf
out
add
cmc
aam
xor
int3
add
cmp
add
sub
add
add
add
insl
scas
sub
jbe
jnp
test
cmpsl
mov
adc
xchg
test
jle
jnp
leave
jo
jb
cltd
xlat
inc
mulb
push
in
mov
or
lea
sub
mov
push
adc
daa
jl
mov
mov
stos
sti
mov
jae
mov
xchg
and
addb
push
or
jl
dec
mov
dec
in
adc
movsl
js
popf
icebp
leave
mov
mov
xchg
js
xor
cmp
jp
sbb
gs
test
es
cmp
clc
push
insl
or
cwtl
jmp
mov
test
out
dec
mov
push
push
test
out
jmp
out
xchg
cmc
stc
or
cmp
rorb
mov
adc
pop
fbstp
ja
sti
pop
and
jo
lret
inc
das
adc
adc
arpl
sbbl
xor
pop
hlt
repnz
and
add
or
fidivrl
and
sub
icebp
into
movsl
dec
sahf
ss
insl
repz
std
mov
dec
cwtl
mov
mov
jbe
outsb
and
mov
in
and
lahf
pop
fdivrs
stos
lods
in
mov
push
mov
xor
shlb
mov
das
sti
insb
js
addr16
cs
scas
and
mov
lahf
lret
dec
mov
cwtl
lods
add
js
ja
pop
sbb
mov
and
inc
sbb
push
xchg
add
jmp
push
jp
pop
fisttps
push
into
add
mov
xchg
lcall
jmp
pop
dec
in
jecxz
xchg
pop
jmp
fildl
aam
sbb
push
mov
loope
pop
shrb
pusha
lahf
cmpsb
push
call
lret
inc
dec
mov
std
sub
lods
sbb
lret
fwait
in
mov
mov
in
notl
dec
shlb
dec
or
adc
mov
aad
and
inc
jb
test
push
mov
mov
push
pop
cmpsl
aaa
outsb
jb
jo
pusha
mov
or
pop
test
xor
inc
sbb
mov
mov
push
pop
dec
data16
cmp
out
mov
pop
dec
clc
in
mov
push
inc
mov
dec
fdivp
sbb
outsl
jb
ret
cmpsl
fadds
popa
ret
mov
xor
nop
or
mov
push
in
ja
sahf
push
push
int
xchg
or
aaa
dec
push
jp
pop
stos
push
lcall
insl
cld
adc
sbb
push
or
lret
aas
addr16
or
test
jmp
cmpsl
jne
or
insb
lcall
jne
mov
pop
out
loop
jne
stos
loopne
sarb
jl
in
lds
push
push
or
cs
pop
dec
sbb
mov
leave
daa
scas
test
jge,pt
shlb
cmp
mov
adc
xor
sti
push
xchg
xchg
jae
and
add
dec
xor
mov
dec
inc
sbb
insl
orb
add
filds
or
sub
sti
scas
andl
adc
insb
pop
mov
jb
mov
test
fldcw
pop
mov
addr16
pop
xchg
add
sbb
cmp
mov
jmp
or
jmp
jb
ret
idivb
mov
cmp
pop
mov
cmpsl
repz
insl
insb
mov
mov
inc
jbe
loopne
bound
jmp
xor
ds
repnz
loope
xor
in
sub
cltd
pusha
mov
jns
or
sub
adc
jge
pop
push
and
mov
mov
cld
cmp
lret
and
mov
xor
lcall
push
les
xchg
xor
pushf
aad
imul
jns
jle
dec
arpl
iret
scas
cli
jl
stos
sbb
lds
sbb
sbb
incb
in
out
fstps
pop
push
fidivrl
outsb
jmp
ret
jecxz
addr16
sbb
pop
jl
dec
mov
pop
add
fs
pop
test
mov
shlb
fs
out
push
mov
xlat
out
pop
popf
mov
push
pop
fistpl
shlb
insl
inc
int3
ss
cltd
in
xor
out
sarb
test
fadds
jp
std
mov
xor
test
and
or
daa
sbb
popf
xorl
loop
sbb
scas
dec
xor
cmc
push
bound
shl
rcrl
push
pop
pop
jbe
inc
es
les
shr
jmp
loope
cwtl
add
mov
push
fdivrs
or
xor
mov
mov
aam
push
push
packssdw
xchg
adc
xor
insb
add
into
das
sub
mov
gs
push
sub
cmpsl
mov
push
lds
sub
pop
adc
ja
mov
jecxz
fistpl
xor
xor
jmp
idivb
push
pop
nop
movsl
dec
lock
je
xchg
stos
xor
dec
and
incl
cmpsb
test
ds
sub
std
xorb
xchg
ljmp
out
out
push
js
xlat
outsb
sub
fwait
xchg
and
loope
push
repnz
int
sarl
pop
sub
jo
aam
scas
movl
dec
add
pop
sub
std
sub
mov
lret
mov
xchg
adcl
fidivrs
inc
adc
dec
call
mov
mov
jno
mov
sbb
mov
push
outsb
mov
mov
inc
jne
dec
mov
sti
sbb
or
mov
lcall
jne
sbb
aaa
lret
adc
sti
rclb
fprem
adc
sbb
mov
cmp
xchg
out
inc
add
mov
inc
hlt
test
mov
les
push
xchg
pop
das
scas
inc
das
aam
in
jnp
sbb
sti
jle
push
jecxz
and
xchg
adc
out
mov
xchg
sbb
xchg
movsb
fwait
shlb
mov
push
adc
mov
or
add
mov
jbe
adc
or
jecxz
push
int
inc
mov
cwtl
fldl
les
nop
add
inc
sbb
push
jno
inc
scas
test
dec
int3
inc
push
rcrb
daa
shlb
leave
pop
sbb
ss
out
jbe
xlat
addr16
sbbl
int3
cmp
dec
mov
test
or
and
pop
and
inc
add
test
xchg
push
mov
loop
leave
jb
adc
jle
ret
mov
push
in
xor
imul
idiv
xorb
loope
and
test
mov
call
inc
fwait
dec
call
lods
jl
lret
ja
xchg
jmp
negl
inc
jp
lea
in
jno
sti
dec
push
lods
out
and
xorb
rcrb
mov
lock
addr16
mov
jo
sub
popf
jns
shl
pop
shll
xchg
stos
jle
push
adc
leave
mov
push
popf
adc
mov
sbb
nop
inc
stc
mov
dec
imul
pop
push
popl
mov
in
hlt
stc
popl
loop
mov
je
mov
jb
mov
jmp
data16
shrl
adc
lret
xor
adc
mov
jp
inc
js
imulb
cwtl
sub
shl
jno
clc
mov
mov
lods
repnz
pushf
pushf
lock
jns
mov
fidivrs
push
test
fcmovnb
xchg
or
aas
sarl
aam
pushf
pop
inc
in
sbb
fsubl
movsl
hlt
xor
xor
push
lret
and
inc
popa
lods
out
rcll
mov
ja
jle
fs
add
rcr
xchg
xor
add
sub
daa
ds
jnp,pt
cltd
mov
lods
cmp
xlat
push
imul
test
pop
xor
mov
stos
movl
jo
add
jno
outsb
mov
push
movsb
cmpsb
in
aaa
into
cli
and
and
or
les
test
out
or
in
xor
insb
aas
lock
in
sbb
push
push
sbb
cmpsb
pop
repnz
cld
adc
and
stos
xor
xor
insb
push
dec
push
xor
lock
pushf
add
ret
mov
ret
aam
push
fistpll
xchg
push
lods
sbb
ret
mov
add
add
jg
enter
mul
ss
sub
lcall
xor
jne
daa
push
je
stos
mov
xchg
icebp
cmp
cwtl
mov
and
fs
outsb
xorl
or
jo
sbb
mov
inc
mov
mov
mov
das
ljmp
xchg
arpl
xchg
outsb
lods
push
sub
popa
popa
sbb
fwait
fwait
push
mov
ja
push
imul
outsl
cmp
sarb
outsb
mov
fstl
jnp
add
add
lahf
cltd
inc
mov
fucomi
adc
scas
mov
push
movsb
pop
pop
gs
adc
mov
or
clc
movsl
inc
popa
jl
orb
sub
lret
jnp
inc
pop
adc
roll
rcrb
dec
push
mov
cmpl
jle
push
pushf
jmp
pop
aaa
mov
cwtl
daa
jno
cmp
aaa
movsb
adc
icebp
bound
ret
pop
xor
pop
xchg
push
xlat
adc
jg
imul
push
pop
mov
loopne
shlb
mov
loope
push
jb
sahf
pop
jecxz
sbb
pop
jbe
xor
jo
bound
mov
orl
or
add
pop
cmpsb
adc
add
jl
lcall
sahf
out
das
xor
aaa
or
cmp
sbb
and
fwait
jge
jnp
imul
add
jns
gs
add
dec
pop
mov
sahf
mov
inc
ret
adcl
int3
cmp
xchg
or
cld
pop
push
fstl
int
insb
faddp
jp
xchg
pop
cmc
push
rol
xchg
punpckhwd
cmp
leave
cmc
or
sub
pop
cld
fdivs
push
mov
shrl
push
xchg
mov
sub
sbb
jp
sbb
stos
in
pop
stos
out
test
ds
aas
ret
ret
dec
inc
jecxz
dec
std
xor
cmp
add
fsub
add
cmp
movsb
push
push
jg
xchg
aad
cmp
mov
jl
lcall
dec
add
mov
xchg
test
dec
mov
or
cmpb
mov
push
pushf
or
adc
xchg
inc
rol
adc
pop
cs
xchg
inc
dec
repz
repnz
ficoml
test
shl
dec
mov
and
sbb
into
pop
es
dec
sbb
ret
shrl
cmp
or
sbb
push
mov
sahf
out
sbb
movsl
sbb
or
cmc
mov
outsb
push
xor
sbb
sbb
sbb
mov
jb
inc
xchg
adc
adc
scas
shlb
add
insl
xor
fbstp
aaa
aam
lahf
and
cmp
mov
lret
xor
lret
imul
xchg
inc
jae
xchg
inc
lahf
jmp
loope
pushf
inc
sbb
fs
sub
test
incb
sub
lret
cli
cmp
enter
pusha
mov
adc
push
cli
orb
push
dec
lcall
imul
jno
push
stc
push
das
das
xor
popa
test
mov
addr16
cmp
loop
ja
adc
pop
test
test
xchg
or
xchg
cmpsb
popa
cmp
xchg
mov
repnz
iret
sbb
or
xchg
or
incl
imul
sub
mov
imul
xchg
and
sbb
push
pop
dec
dec
mov
dec
ss
adc
outsl
mov
sbb
sbb
mov
mov
repz
dec
call
dec
jo
lcall
and
test
outsl
mov
push
inc
sub
mov
cmp
sahf
xchg
mov
or
mov
mov
dec
in
icebp
in
xor
fcoms
fisubrs
cmc
xchg
jne
xchg
ret
imul
inc
fisttpll
in
cmp
mov
stos
xor
adcb
lcall
sbb
test
mov
mov
fwait
mov
dec
mov
or
mov
sbb
sarl
in
inc
lods
lret
cs
aad
sahf
mov
pop
push
jle
and
stos
xchg
pushf
out
dec
dec
in
shll
push
adc
gs
stos
sbb
outsb
outsb
lods
dec
fcomps
or
mov
pop
xchg
fcmovnbe
or
mov
mov
push
sub
popa
sbb
aaa
xor
push
pop
addr16
scas
push
rcll
sbbl
insl
sbb
jle
and
shrb
fistl
sbb
cmp
test
mov
cmp
cmpb
fisttps
pop
xchg
stc
pop
jecxz
add
pushf
or
nop
ror
jno
cltd
inc
xchg
xor
insl
je
orb
fs
xor
add
das
inc
push
lods
jo
add
cmp
popa
cmp
mov
fcoms
pop
mov
into
xchg
push
inc
loopne
cmp
add
mov
stos
daa
lahf
mov
cmpsl
sub
pusha
gs
js
mov
rorl
gs
lea
stos
push
mov
jae
mov
aam
adc
fdivrl
sbb
xorb
nop
fistl
test
das
out
sbb
or
cmc
lds
inc
mov
stos
xor
pop
sbb
xchg
adc
mov
inc
dec
fstpt
arpl
stos
or
popf
or
cmpsb
cmp
sbb
iret
pusha
jne
icebp
movsb
mov
cmp
jnp
mov
pop
sub
test
cmp
pop
mov
pop
dec
jbe
fstpt
xchg
lds
jmp
sub
sbb
jge
lods
ds
aam
pop
xchg
mov
fists
out
add
xchg
cmpb
lock
imul
mov
ret
in
dec
inc
inc
stos
mov
inc
icebp
xchg
imul
jmp
and
shlb
mov
dec
in
fnstsw
out
cmp
pop
jl
dec
ds
and
jb
mov
add
mov
fs
pop
gs
test
fisubs
or
or
mov
stos
mov
mov
sbb
subl
mov
add
xor
pop
aad
push
push
add
aam
mov
out
inc
fcomi
jl
gs
xchg
aas
hlt
sub
adc
inc
add
das
jo
rorl
fistl
xor
das
out
cs
lcall
xchg
push
mov
divl
je
std
xchg
nop
pushf
and
push
into
and
push
popf
test
inc
add
push
xchg
cmp
jle
sti
cmp
mov
popa
mov
lock
ret
ss
sbb
and
aaa
movsl
mov
push
ficomps
sbbl
mov
xchg
mov
jmp
iret
out
ret
pusha
xchg
sti
test
inc
sbb
mov
sbb
loop
pop
add
aas
cltd
ret
adc
mov
nop
aaa
stc
and
xor
push
stos
push
sbb
jmp
sarl
and
mov
ds
repz
push
daa
imul
mov
es
fisttpll
loopne
add
negl
outsb
pop
fs
or
jne
test
call
orl
scas
mov
xchg
mov
push
scas
data16
and
push
jns
das
xor
and
into
or
fimuls
shlb
pop
lcall
fsubs
imul
dec
mov
inc
pusha
fsubrp
sub
xor
mov
or
jb
aas
push
ret
adc
xchg
mov
dec
daa
cmp
add
jno
sahf
pop
into
rclb
add
aad
sbb
jle
loopne
rorl
sub
call
inc
xor
add
ja
push
dec
ja
pop
clc
push
or
jo
sbb
sub
mov
cmpl
mov
push
fcoml
mov
lret
and
add
pop
push
les
fsubrs
aam
scas
cmp
sub
jl
xchg
mov
push
jno
movsb
mov
pop
aas
xlat
fwait
sub
ljmp
xsaves
and
sub
outsb
mov
lret
out
int3
fs
aam
cli
lahf
inc
imul
mov
xor
jecxz
ret
les
or
aam
stos
jp
or
push
xchg
ljmp
lret
ror
xor
shll
lods
mov
sbb
push
push
sbb
sbb
inc
jmp
mov
loopne
movsbl
mov
aad
jbe
das
hlt
fs
test
push
pop
push
mov
inc
test
in
jbe
fwait
xchg
fdivrl
cmp
or
adc
stc
rol
jg
mov
push
filds
lds
mov
push
insb
out
xchg
xor
push
pop
lea
xor
dec
jbe
jmp
fbstp
enter
minps
xchg
dec
or
ljmp
es
mov
addr16
sub
and
xor
sbb
and
insl
mov
sub
daa
jmp
mov
cmp
repnz
ret
jo
push
mov
into
lds
xchg
loopne
fnclex
cmc
mov
lock
lds
pop
cmp
inc
cs
ss
movsl
rorb
in
pop
std
push
mov
ret
mov
scas
mov
cmc
adc
mov
cmp
iret
lret
sbb
fisubrs
dec
sub
rorb
pop
jp
lret
jmp
cmp
cmp
testb
frstor
xchg
icebp
pop
dec
addr16
xor
adc
mov
push
push
cwtl
add
inc
setg
pop
outsb
aam
out
shlb
push
sub
cltd
dec
cwtl
movsb
inc
cwtl
jg
mov
mov
icebp
inc
mov
jg
cli
sti
sarb
mov
push
xchg
dec
or
and
icebp
daa
mov
sahf
popf
or
mov
and
rcl
imul
out
imul
push
push
pop
mov
jle
loop
lods
stos
cli
aad
dec
inc
pop
mov
fs
iret
je
cmp
arpl
xor
cli
adc
mov
dec
pop
inc
movsb
ljmp
sarl
jecxz
xorl
outsb
sub
mov
push
cmp
mov
xor
ds
pop
adc
mov
jmp
insl
mov
adc
dec
std
fldlg2
cmp
or
cmp
ss
fwait
push
mov
stc
das
sbb
mov
loope
xchg
inc
push
jno
ss
in
pop
xlat
jmp
xchg
mov
fwait
mov
xor
ljmp
dec
mov
fimull
cmp
inc
xor
mov
mov
nop
gs
lods
mov
addr16
pop
cmp
lock
aam
mov
icebp
cli
and
les
ss
mov
shrb
imul
loop
jmp
std
idiv
das
jl
inc
out
xor
adc
lea
test
cmpsl
ret
mov
aam
stos
and
sbb
and
repz
mov
in
jae
mov
cmpsb
insl
pusha
scas
push
sbb
cmpsl
and
movsl
sarl
mov
mov
mov
sti
dec
loop
xchg
adc
and
insl
int3
push
dec
in
push
xchg
scas
pop
mov
nop
cmp
rclb
int3
jae
push
int3
fs
fisubl
mov
mov
xor
jge
cli
sbb
mov
lahf
sbb
dec
inc
jno
test
and
pop
lods
das
scas
repz
mov
cmpsb
inc
outsl
rcrb
js
jg
mov
hlt
das
dec
loop
pop
add
dec
cld
jno
inc
nop
lods
in
das
mov
cmp
xchg
or
lahf
jns
cmc
test
mov
cli
mov
pusha
es
and
mov
lds
push
inc
outsl
cmpsl
add
lods
or
push
inc
enter
inc
mov
xchg
and
clc
xorb
push
push
mov
mov
and
pop
in
xchg
dec
push
and
leave
int3
xchg
xor
cmp
xchg
cli
leave
or
mov
and
gs
sub
test
sub
bound
negb
lea
out
and
aad
ret
jnp
and
add
inc
mov
push
test
icebp
into
cmpsl
cmp
pop
or
cmp
jae
xchg
inc
mov
loop
push
sub
rol
out
mull
or
hlt
pop
jp
adcb
sti
adc
jg
mov
scas
mov
pop
sbb
pavgw
adc
fimuls
jmp
outsb
jg
mov
cli
lods
xlat
dec
push
cmp
stos
ja
or
push
add
orl
adc
mov
jecxz
sub
shr
xor
and
movsb
xchg
push
mov
jb
ret
cwtl
insb
call
mov
and
push
fimull
fidivrl
push
and
add
sub
dec
clc
fiaddl
sbb
mov
cs
test
mov
daa
outsl
ror
mov
mov
add
movsl
loope
lea
mov
mov
mov
inc
pop
inc
and
or
xchg
hlt
pop
repz
int3
outsb
xchg
xor
jns
add
add
add
lds
fnstenv
xchg
mov
hlt
stc
mov
sbb
or
mov
mov
pop
adc
or
sub
imul
jmp
xor
xchg
mov
push
lret
pop
jns
cmp
mov
pop
mov
jae
inc
sub
shl
adc
xor
or
imul
les
aaa
test
dec
iret
and
xlat
xchg
dec
aas
scas
push
outsl
add
lret
adc
test
and
clc
das
pop
daa
mov
aaa
xlat
adc
mov
or
mov
mov
mov
outsb
ja
xlat
lcall
push
dec
loope
xor
insl
sbb
out
dec
mov
add
mul
dec
call
jb
ret
gs
int
jae
sbb
rclb
mov
jno
leave
xchg
sbb
xchg
adc
testb
mov
mov
push
scas
and
lcall
outsl
pop
sbb
outsl
ja
mov
mov
repnz
scas
dec
cmp
cmp
push
call
xchg
or
inc
push
mov
sbb
mov
in
sub
rcrl
in
decb
push
call
cmp
nop
insl
xchg
lock
or
mov
ret
es
mov
imul
add
sar
push
xor
sbb
xchg
imul
dec
sbb
sub
push
test
mov
xchg
mov
sub
lods
decb
xor
insb
nop
cmpsb
sbb
mov
stos
scas
mov
mov
test
lods
lods
daa
inc
xchg
jo
jmp
movsl
adc
fsubp
out
je
xchg
leave
scas
sbb
insl
push
shlb
jmp
cld
fnsave
jnp
jb
pushf
mov
cmp
dec
stos
into
push
mov
imul
les
lret
pop
mov
xchg
lcall
ljmp
or
xor
rol
mov
lret
xor
mov
cmp
sbb
cmp
xor
jo
aas
lods
in
cmpsb
jmp
call
pop
add
push
mov
out
mov
filds
iret
mov
rcrb
shr
test
daa
add
out
cmpsl
sub
mov
je
xlat
addr16
mov
sti
cmp
mov
adc
push
xor
icebp
js
jb
pop
and
sbb
lock
push
shrb
ret
lds
sti
pop
lret
mov
mov
mov
push
pushf
and
call
sbbl
orb
cmc
add
inc
dec
jecxz
pop
je
xchg
pop
rorb
repz
sahf
mov
mov
jge
adc
js
jl
xorl
xor
ret
push
and
and
mov
dec
es
out
adc
fnsave
jmp
pop
lahf
insb
xor
ljmp
pop
lds
ret
insl
jl
loopne
adc
xchg
enter
add
sbb
xchg
dec
mov
in
mov
mov
icebp
or
inc
push
test
imul
aas
stos
xchg
mov
out
std
jg
je
adc
jno
xor
sbb
dec
dec
jns
sbb
mov
arpl
gs
sub
fistpl
je
or
scas
stos
fwait
in
cwtl
enter
dec
inc
nop
jmp
and
daa
iret
out
add
mov
sbb
mov
pop
inc
lods
cmpsl
jge
aam
in
mov
int
and
or
mov
ljmp
popf
loope
shll
stc
lods
mov
dec
add
cmp
push
scas
fidivrs
push
pushf
out
fisttpll
test
je
into
sbb
lods
daa
test
sbb
or
inc
scas
cltd
cmp
ljmp
lahf
loop
xor
aas
test
inc
es
sbb
mov
es
jecxz
pop
mov
xchg
cld
xchg
and
xor
adc
add
icebp
scas
inc
inc
fsubl
scas
pop
push
mov
loop
pop
and
and
or
pop
mov
add
or
cmpb
xor
sub
das
pusha
subb
xor
or
popa
cmp
jns
xchg
fldenv
rol
dec
adc
and
pop
jg
test
inc
xorb
test
jg
pop
mov
jbe
cmp
je
cmp
add
push
shll
repz
push
inc
adc
cli
xlat
nop
jo
lea
sbb
inc
xchg
lods
scas
sbb
ret
repnz
jl
lahf
mov
jns
insl
jmp
mov
fs
mov
ret
enter
adc
lahf
pop
sti
into
or
in
xchg
lods
into
and
in
dec
inc
jg
adc
and
cmp
out
inc
pop
jmp
aas
mov
push
idiv
aas
adc
pusha
mov
xlat
pop
xor
outsb
pop
int
mov
stos
cltd
test
pop
cmp
jo
add
push
dec
lock
push
pop
sbb
add
add
xchg
std
out
aas
daa
imul
mov
mov
jg
decb
mov
insl
jl
sub
xor
xchg
out
sbb
in
xlat
pop
scas
lods
xor
in
push
mov
popa
add
imul
js
test
adc
mov
jmp
and
jl
jmp
imul
or
test
add
daa
aaa
in
loope
test
cmp
xor
mov
dec
pop
inc
imul
sbb
and
or
jne
lock
jl
dec
xor
ret
sti
movsl
sbb
ja
sbb
aaa
lret
lea
enter
aad
cwtl
push
lds
mov
xor
sbb
push
fadd
mov
mov
and
jmp
inc
mov
pop
fidivrl
imul
sbb
mov
in
loopw
popa
lea
addr16
pop
mov
sub
add
sub
lods
xchg
lods
sbb
sbb
mov
in
or
add
cmpsw
sbb
push
cmpl
loopne
xor
loop
mov
sub
inc
mov
lods
or
sub
movsb
cwtl
out
sbb
in
and
aas
aaa
or
add
sbb
and
icebp
push
lea
inc
mov
mov
push
sbb
add
int
mov
cmp
stos
push
gs
pusha
sub
jp
in
push
adc
pop
xor
jl
adc
mov
xlat
xchg
pop
int3
lea
fwait
xchg
fwait
call
call
lret
ret
cwtl
mov
xor
push
shll
icebp
loope
fcoms
push
cmc
ss
icebp
in
sbbl
mov
in
fdivr
je
imul
jae,pn
mov
shlb
xchg
in
ret
mov
sti
pop
push
es
hlt
mov
pop
dec
aaa
dec
ss
lahf
int3
cmp
xor
mov
out
iret
or
dec
push
cwtl
sti
out
inc
sti
imul
sub
add
dec
sbb
loop
or
sub
inc
imul
or
daa
loope
mov
push
loopne
pop
xchg
cltd
orl
cmp
lahf
rcrl
add
int3
mov
mov
jae
push
in
jns
sarb
test
push
aam
and
gs
xchg
repnz
and
test
cmp
dec
xor
sbb
roll
mov
adc
or
add
mov
adc
jmp
pusha
mov
fadd
fidivrl
or
stos
int3
add
and
or
cwtl
pop
std
or
inc
aaa
cmp
xchg
out
jmp
shrl
jg,pn
shl
jo
iret
lods
mov
sub
fildl
jmp
mov
pop
inc
push
shrl
cwtl
sub
and
mov
push
loope
mov
dec
scas
insb
mov
cmp
and
sbb
jb
add
jp
sbb
lret
loop
pop
jnp
xchg
scas
and
out
into
mov
jae
xlat
fnsave
arpl
xchg
pop
clc
int
gs
xor
inc
adc
cmc
sbb
es
sub
mov
shrb
pop
nop
int
or
ret
pop
jb
mov
rclb
adc
push
adc
insb
pop
fwait
cmp
mov
hlt
mov
or
fisttpll
cli
cmpps
and
call
mov
pop
clc
cmp
jp
xchg
mov
dec
out
mov
cmp
jae
repnz
fiaddl
fisubs
cli
push
daa
dec
cmp
into
xor
int
test
xchg
sahf
in
outsl
pusha
ja
mov
dec
ss
int3
dec
mov
inc
sti
test
dec
sub
xor
push
push
push
cmp
seta
iret
int
push
lcall
pop
mov
psrlw
cmp
xor
xchg
addr16
jge,pt
xor
jno
dec
outsb
xor
scas
iret
inc
loop
popf
pop
lret
mov
jo,pn
call
jl
test
cmp
std
inc
mov
cli
aaa
rcl
jle
dec
push
mov
punpcklbw
push
mov
inc
xlat
and
jbe
in
mov
inc
fcompl
out
dec
sbbl
stc
xor
xor
push
jmp
mov
cmp
jmp
xor
fwait
mov
orb
jge
mov
into
xor
scas
adc
cmp
jae
sub
fisttps
andb
push
sub
pop
gs
inc
adc
dec
test
pop
insb
lea
dec
mov
xchg
into
mov
enter
and
scas
iret
adc
subb
inc
xor
xchg
movsl
movsl
mov
scas
imul
shl
mov
xchg
cwtl
andl
sub
jmp
stos
fistpl
or
movsl
test
sbb
sahf
fs
push
orb
inc
enter
mov
inc
or
sbb
adc
fsubs
lea
cli
les
in
adc
pop
popf
xchg
fimull
fs
sbb
mov
push
and
pusha
push
bound
repz
adc
in
xchg
jnp
cmc
push
cwtl
addb
jge
adc
mov
mov
mov
stos
js
or
cmpsl
leave
inc
inc
inc
push
push
dec
ret
stc
in
sbb
out
imulb
adc
int3
sub
mov
adc
cmp
xchg
sub
in
jae
and
loop
add
push
inc
imul
in
int3
adc
push
rorl
xchg
ds
jecxz
xchg
int
xor
sub
cmp
inc
inc
fucomi
and
add
mov
shll
loop
loopne
cmpsb
inc
adc
lret
mov
mov
push
notl
sti
loop
jb
xor
sbbb
insl
iret
fstpt
inc
dec
daa
sbb
lock
roll
lock
cmpsb
mov
sahf
mov
xchg
mov
aam
or
sub
xor
scas
sahf
daa
mov
xor
loopne
xchg
call
inc
arpl
pop
das
mov
lahf
aaa
and
dec
push
jecxz
sti
push
or
mov
mov
mov
jne
sub
ja
add
cmp
ffreep
jns
xchg
adc
push
stos
bnd
inc
jne
add
sti
cs
cwtl
and
jb
scas
imul
fdivrs
lock
movsb
xor
jno
mov
lcall
jb,pn
std
add
mov
and
es
addr16
mov
add
or
pop
shlb
xor
loop
mov
cmp
adc
ret
pop
pusha
mov
dec
ja
rolb
repnz
call
addr16
nop
xchg
dec
xlat
inc
push
sbb
mov
imul
sbb
sub
inc
dec
cs
and
inc
enter
jmp
xor
inc
push
mov
sub
and
loope
mov
inc
dec
sbb
daa
xchg
sbb
out
scas
jg
lds
sbb
ljmp
jae
push
fwait
adc
int3
lea
push
adc
pusha
xor
mov
push
xchg
repz
and
push
inc
mov
scas
cmp
cmp
test
and
outsl
test
xor
test
pop
pop
imul
xchg
mov
hlt
fwait
pusha
repnz
test
sbb
mov
dec
shrb
push
xor
adc
xchg
arpl
add
pop
dec
cmp
dec
sub
push
and
int
stos
aad
mov
or
mov
mov
mov
mov
sbb
dec
cmp
and
mov
loop
movsl
stos
fdivs
or
mov
sub
fst
in
loope
jne
dec
in
jg
ja
mov
lahf
pop
sbb
f2xm1
test
test
or
stos
in
shr
mov
sub
daa
jbe
je
fstpt
test
hlt
test
and
arpl
nop
sub
aas
mov
push
jmp
xlat
lret
fcomip
push
rcl
in
js
add
jmp
mov
adc
stos
mov
mov
lahf
lahf
hlt
add
adc
and
or
dec
loope
xchg
xchg
mov
pop
pushf
and
sarl
pop
or
adc
dec
xchg
push
jg
mov
fildll
in
hlt
pop
xchg
lock
adc
xchg
mov
jmp
loopne
sbb
add
mov
lea
nop
or
pushf
push
cltd
mov
inc
pmovmskb
add
es
pop
sbb
aaa
sub
cbtw
out
cld
int3
push
imull
jb
inc
jp
incl
pop
push
jno
add
sub
pop
mov
mov
in
in
sub
cmp
jnp
ret
inc
mov
loopne
xorb
cmpsl
testl
mov
repnz
shrl
cmp
xor
out
adc
cmp
push
sahf
mov
testb
inc
pop
adcb
jbe
sbb
mov
adc
in
cmpsl
jb
out
adc
inc
jmp
andnps
pop
pop
sub
sub
aam
mov
sub
dec
dec
bound
outsl
cmp
test
add
pop
mov
fiadds
pop
dec
inc
int3
nop
push
cmp
jecxz
leave
clc
mov
pusha
jge
movsb
pop
mov
orb
sub
or
test
insb
or
mov
cmpsb
mov
subb
sub
dec
daa
idivl
cmp
dec
loop
pop
mov
sbb
push
rorb
pop
jnp
adc
sahf
xchg
push
inc
ljmp
jnp
cmp
bound
cmp
movsb
into
pop
popf
sbb
sub
mov
pop
sbb
pop
jbe
arpl
push
fwait
mov
push
cmpsb
pop
fisttpll
ljmp
js
aam
xchg
movsl
sub
insb
pop
fcoml
fmuls
ffreep
pop
cmp
out
mov
push
inc
jb
xchg
add
mov
cmp
fwait
je
sbb
xlat
shr
mov
incb
es
lret
mov
inc
dec
hlt
xchg
lods
mov
mov
es
or
push
lret
add
fmuls
ja
add
hlt
loope
roll
mov
pop
dec
js
ja
jnp
jl
jecxz
cmp
mov
loope
jge
mov
outsl
cltd
aad
push
jns
in
sbb
sti
int3
outsl
mov
push
inc
sub
jecxz
xchg
xchg
xchg
addr16
xor
leave
fisttpll
xchg
and
cli
lcall
xor
dec
pop
mov
dec
lret
mov
xor
jmp
xor
add
jp
je
addr16
iret
negl
ds
mov
outsl
fs
xor
push
cwtl
add
loope
stos
cs
xor
ja
xchg
test
andl
mov
mov
sub
ret
sub
mov
add
fmull
fwait
jmp
xor
inc
adc
out
add
jp
or
pusha
icebp
xchg
sbb
testb
repnz
adc
or
mov
or
mov
dec
mov
sub
sbb
inc
int3
int
shll
mov
jno
mov
push
mov
pop
adc
mov
pop
imul
and
lcall
fists
inc
lcall
push
repz
sbb
inc
mov
mov
outsb
scas
outsb
cwtl
dec
shl
mov
iret
adc
sarl
dec
mov
add
sbb
notl
xor
mov
mov
dec
mov
pop
fs
sbb
mov
loop
rolb
or
xchg
jnp
xchg
cmpsl
out
jbe
mov
mov
inc
cld
push
shll
pop
sub
push
and
sti
xor
xor
or
andl
cmp
push
fcompl
divb
jno
cli
lea
inc
sbb
jo
adc
out
iret
ja
cwtl
scas
mov
lods
mov
cld
cli
loopne
les
outsl
xor
add
jp
out
jb
negb
mov
das
push
xor
add
or
test
clc
addr16
call
cmpsb
jae
arpl
loop
xor
adc
or
inc
sub
aam
lcall
fwait
sarl
insl
fstpl
mov
jae
xchg
mov
xchg
sub
adc
push
imul
addr16
fisubrl
xor
dec
das
cmpsl
out
and
rolb
shrb
imul
test
cmp
adc
pushf
or
test
adc
outsb
xchg
jecxz
ret
cmpsl
scas
sarl
and
loop
in
mov
popa
cmp
sar
lock
mov
or
aas
stos
cmp
jae
push
ljmp
push
jp
pop
loope
in
ljmp
pop
push
lret
inc
leave
subl
sub
insb
aaa
lds
push
dec
sub
sbb
xchg
push
sbb
mov
fcmove
and
or
push
repz
dec
dec
outsl
in
jmp
xlat
pushf
pop
adc
pop
inc
cmpsb
adc
clc
pop
pop
sbb
ja
jg
stc
daa
sti
dec
push
sub
cli
repz
lcall
out
ljmp
inc
add
mov
mov
mov
dec
lret
dec
je
pop
jge
mov
xor
iret
call
ficoms
push
pop
or
rorb
faddl
jp
dec
mov
adc
jmp
inc
add
add
xor
xchg
inc
xchg
fidivrl
leave
out
jne
xchg
mov
sub
sbb
dec
adc
dec
xchg
xchg
mov
xorl
mov
mov
fdivrl
mov
ss
cld
sahf
dec
fiaddl
push
and
dec
movsb
int
call
ds
loope
orb
mov
dec
xchg
or
and
lods
pop
adc
lcall
mov
xchg
sub
inc
adc
mov
xchg
ror
inc
mov
mov
repz
imul
mov
jmp
idivl
lcall
inc
xor
ss
out
stos
jbe
nop
cmp
or
data16
mov
adc
jnp
pushl
mov
and
push
push
mov
push
cmc
call
sbb
inc
xor
int3
ror
movsl
ds
stc
push
push
stos
dec
int
add
and
cmp
mov
push
inc
mov
pop
fdivrs
fdivl
test
fcmovnb
outsb
rcl
shlb
incl
lods
test
mov
gs
dec
ret
jle
push
cwtl
sbb
testb
mov
mov
test
pop
fistl
cli
icebp
inc
and
cmp
fldenv
and
das
lret
fucomp
cld
in
jns
jl
sub
data16
cmc
out
imul
pop
mov
push
mov
dec
xorl
stos
dec
xor
enter
rcr
pop
add
addr16
inc
push
int
in
int
xchg
lcall
sub
adc
xchg
repz
orl
inc
or
orb
nop
pop
shlb
mov
stc
repz
scas
push
xchg
add
hlt
mov
mov
repnz
pushf
jl
mov
lock
cli
loope
push
nop
stos
enter
stos
xchg
xor
jecxz
adc
push
enter
sbb
addl
repz
std
push
inc
test
in
cmp
mov
or
push
stos
sub
xor
scas
pop
outsb
mov
mov
mov
and
xchg
xor
mov
adc
call
fldlg2
pop
mov
dec
in
inc
imul
dec
push
mov
push
cmp
out
push
test
incb
shr
sbb
aam
fidivrs
cwtl
in
out
xorb
jp
jbe
adc
cmp
mul
repnz
pop
bound
shlb
ret
push
cmp
out
and
leave
test
mov
aam
mov
imulb
aam
adcb
xor
shrl
add
sbb
mov
rcrb
je
fisubrs
dec
mov
stos
inc
inc
leave
jo
mov
dec
fs
pop
insb
and
add
je
push
in
pop
lcall
jno
mov
adc
or
jge
dec
mov
int3
add
xorl
cmp
xor
test
in
addr16
scas
out
mov
push
arpl
jge
into
mov
les
aaa
dec
inc
inc
flds
pop
dec
cmp
inc
mov
into
sbb
dec
fwait
je
pushf
das
js
pop
mov
repnz
mov
dec
inc
cmp
scas
adc
xchg
push
adc
pop
fs
je
seto
dec
jg
into
sub
repz
out
add
push
xor
dec
and
ret
sub
xchg
daa
add
repnz
gs
fdivrl
mov
pop
dec
call
jns
popf
pop
adc
mov
adc
sub
jg
and
dec
pushf
mov
cmp
negb
mov
inc
jge
sbb
mov
out
sub
cs
rclb
cs
scas
adc
es
movsb
xchg
sbb
lcall
push
inc
inc
enter
add
loop
push
mov
adc
mov
pop
and
movsl
ficoml
iret
pop
fcmove
push
push
das
dec
fistps
mov
gs
mov
xchg
or
popf
shlb
jmp
xor
mov
cs
enter
push
rolb
xor
jmp
jp
jo
fists
push
bound
jnp
lds
or
lea
sub
fsubl
jl
or
movsb
pmuludq
sub
aas
jle
or
or
test
pop
lret
pop
inc
into
rolb
push
insl
sbb
gs
cwtl
add
lock
cmp
inc
jge
and
inc
rorl
orl
inc
out
mov
out
inc
xchg
mov
dec
nop
xor
fldt
ret
mov
cs
and
and
xchg
std
xor
push
mov
pop
in
mov
add
popa
push
cmp
push
push
out
gs
adcl
cmpsl
repz
out
mov
jle
xlat
out
dec
int3
les
ljmp
mov
xor
adc
jbe
insl
or
push
xlat
cmp
and
inc
push
pushf
cwtl
mov
jb
mov
int
and
xor
and
cmp
mov
fdivs
or
cmp
in
pushf
push
ret
out
insb
ror
jge
mov
push
add
adc
in
pop
popf
aad
mov
in
fsts
lcall
sbb
cli
mov
mov
ss
jl
or
popa
push
dec
adc
ljmp
dec
push
fwait
or
jle
cmp
mov
pop
sbb
loop
push
test
out
jge
int3
jae
cmp
loope
xor
dec
ja
stos
xor
dec
ret
jp
mov
mov
pop
loope
loope
xor
cmpsl
divl
sbb
dec
cmp
mov
jbe
test
pop
pop
sahf
inc
mov
mov
into
xor
xlat
jne
das
in
sub
cmp
ljmp
rcrb
sbb
or
imul
xchg
sti
out
adc
daa
mov
or
ficomps
pushf
dec
lcall
pop
std
xchg
inc
pusha
jno
or
mov
pop
or
or
or
outsb
push
push
add
sbb
repnz
sbb
js
repnz
int3
fs
jne
sahf
mov
aas
sbb
dec
loope
xchg
mov
test
sub
ret
ss
add
fwait
and
inc
popa
add
push
adc
fiadds
xchg
dec
jo
xchg
test
sahf
inc
or
pop
lods
xchg
pop
cmpsb
insl
cli
icebp
sahf
xchg
and
cmp
push
or
ret
ficoms
push
mov
mov
sub
clc
xor
mov
sti
mov
dec
push
push
in
fdivrl
popf
std
or
dec
scas
arpl
xor
push
xlat
sub
flds
mov
inc
data16
jmp
xchg
push
test
ds
jecxz
and
mov
cltd
dec
sub
popf
push
pop
or
push
adc
mov
inc
pop
ret
mov
loope
negb
imul
shlb
call
sbbl
xor
xchg
xchg
dec
out
dec
pusha
jo
rcr
lcall
movups
mov
pop
loop
out
repz
push
cmp
fnstcw
fimull
cwtl
and
jb
mov
jno
xor
sub
repnz
cmp
dec
das
pusha
lods
pop
fnstenv
orb
stos
ret
arpl
inc
movsb
jae
jae
in
and
ret
jmp
dec
mov
pusha
mov
push
jns
aaa
fstpl
jmp
popf
mov
movsb
ss
shrb
or
push
je
test
mov
int3
mov
jl
in
xchg
bound
call
out
fisubrs
jne
jno
addr16
clc
add
std
xorb
in
arpl
out
mov
sub
loope
fucomi
inc
call
fidivs
daa
and
int3
cmp
test
xor
mov
divb
cmp
outsb
adc
jge
sti
and
stc
jecxz
mov
jmp
xor
pushf
and
jns
jmp
mul
jno
cld
dec
cmp
repnz
push
popf
xchg
cmp
stos
push
xchg
and
addr16
adc
mov
popl
xchg
dec
or
leave
sub
cmpb
fildll
cmpsl
mov
setnp
ficomps
sub
xlat
dec
ret
push
lds
es
adc
sbb
xchg
xchg
outsb
push
or
mov
pop
xchg
cld
push
add
pop
cli
clc
xlat
insb
inc
insl
repnz
int3
cmp
imul
sarl
and
push
repz
ja
icebp
push
lods
lret
outsb
fucom
test
addr16
insl
out
pop
out
icebp
inc
clc
pop
or
push
stos
enter
add
xchg
insb
int3
out
lods
mov
mov
add
xchg
call
sub
rol
fsubrl
xchg
repnz
dec
or
jmp
iret
hlt
mov
push
les
xchg
in
gs
or
mov
mov
fprem1
or
sahf
bound
xchg
push
sub
adc
lcall
lret
cmp
rorl
and
ss
loop
arpl
and
push
xchg
pop
cmp
xor
and
cmp
test
mov
lock
add
roll
dec
mov
push
or
push
mov
pop
jne
push
rolb
sahf
out
mov
mov
fcompl
sub
xchg
sbb
mov
gs
mov
cwtl
cmp
cmp
xchg
repz
cmp
mov
pushf
xor
sbb
pop
or
iret
inc
loopne
mov
daa
and
xor
scas
ficomps
addr16
pop
fldl
xorl
leave
dec
adc
insl
mov
mov
adc
mov
xor
inc
imul
push
repnz
mov
mov
jae
test
aas
adc
jge
mov
pop
pop
leave
mov
add
lahf
mov
mov
in
lret
inc
hlt
pop
outsl
xor
jb
mov
jbe
movsl
sar
out
movsb
mov
bound
sub
js
or
rcr
jb
mov
mov
insl
mov
add
sbb
push
mov
mov
add
leave
mov
mov
jmp
push
cmc
push
loopne
int
mov
cmp
mov
stc
ret
add
push
pop
cmp
js
test
inc
lock
pop
stos
and
inc
xchg
andb
hlt
jge
mov
arpl
in
imul
imul
fucom
jne
mov
gs
inc
cli
inc
movsl
and
mov
xor
push
mov
ficoml
xchg
jae
test
dec
push
pop
cmc
sbb
ss
add
pop
pop
lret
xlat
xlat
stos
aas
cmp
repz
dec
sbb
push
mov
test
icebp
xchg
loope
inc
lods
inc
mov
and
mov
xor
cmpl
mov
lea
push
in
ljmp
dec
push
pop
sub
and
loopne
fisubl
iret
lahf
int
pop
add
in
in
icebp
inc
addr16
icebp
push
daa
cmp
sahf
add
sbb
negb
mov
cmp
push
mov
xor
iret
js
xor
push
lods
ret
cmc
adc
add
cmp
das
inc
and
mov
insb
push
pop
push
daa
dec
ss
sub
xor
into
into
lods
div
fwait
addr16
or
sti
dec
cmp
push
ret
push
sbb
xor
jns
int
rcr
mov
mov
xchg
adc
pop
push
mov
fwait
dec
dec
orl
or
shll
mov
sub
push
and
ffree
and
xor
xchg
or
dec
pcmpeqd
subb
push
add
loop
out
xor
add
insb
dec
mov
push
negb
or
es
std
std
test
sets
gs
xor
mov
out
insb
scas
pop
push
out
repnz
lock
push
mov
mov
std
fcoms
js
lret
aad
xor
inc
pop
cmp
subb
lahf
adc
mov
dec
push
popf
push
negl
outsb
mov
clc
jl
leave
lcall
dec
sub
mov
mulb
js
xchg
add
call
imul
push
rorb
push
add
inc
and
jno
shlb
cwtl
aas
dec
rorl
lea
ds
sahf
dec
sub
cmp
pop
jns
adc
addr16
dec
sarl
cmp
push
idivb
adc
mov
mov
je
sub
pop
jmp
outsl
mov
jp
cwtl
data16
or
orl
xor
push
cmpsb
scas
shrb
adc
mov
jbe
shr
inc
cli
test
jge
ret
mov
xchg
jb
das
das
mov
test
cmc
mov
mov
addr16
mov
cli
push
adc
test
into
cmp
mov
lods
std
aaa
mov
addr16
jnp
adcb
negl
or
bound
pop
bndstx
sub
ficomps
cmp
mov
popa
pop
test
lahf
or
add
sbb
mov
lods
iret
stos
pop
xchg
stos
dec
out
stos
pop
imul
dec
je
pushf
popa
mov
scas
sbb
lods
push
mov
adc
adc
adc
dec
fwait
stc
das
pop
dec
std
cli
hlt
inc
std
xchg
jp
add
sub
and
movsl
jae
jge
dec
mov
cmpsl
pushf
jbe
pop
test
fdivrl
push
cmp
inc
scas
popa
xor
jmp
cltd
xchg
mov
sbb
or
ljmp
lret
jecxz
dec
aaa
mov
inc
jmp
cwtl
in
inc
xor
pop
pop
imul
enter
and
or
jg
add
push
or
dec
adc
or
jg
or
arpl
inc
xchg
push
daa
jg
insl
mov
jbe
push
mov
push
xchg
mov
repz
mov
and
mov
rcl
xchg
jb
sarb
iret
jae
movsl
int3
lds
daa
cmpsb
fcmovu
jb
cmpb
inc
sahf
add
pop
pop
jl
adc
lock
xchg
sbb
ss
out
dec
lea
loopne
or
inc
stos
stc
pop
xchg
sbb
in
into
mov
jnp
lods
jle
test
or
rolb
arpl
sbb
pusha
leave
in
cmp
aas
mov
bound
push
aad
sbb
js
fcompl
inc
pop
mov
ret
ds
push
rol
sub
std
push
sub
xor
sbb
and
add
mov
stos
in
lods
push
popa
pop
jo
mov
cmp
pop
das
xor
xor
jmp
add
js
sub
push
push
xor
add
adc
adc
or
jae
xchg
jae
inc
mull
and
aam
lret
push
cld
xor
jae
push
sbbb
cmp
cmp
push
popa
lret
sbb
sarl
push
in
or
in
out
cmp
adc
loop
sbb
jnp
ljmp
loop
jb
stos
fs
loop
pop
std
out
in
push
pusha
sarb
sub
jge
movl
sbb
pop
popa
bound
mov
movsl
sbb
mov
sub
cmp
xor
cmpsl
pop
pop
and
out
aad
xor
fstps
ljmp
les
ficomps
add
sub
push
add
dec
xlat
mov
repz
or
loop
addr16
xorb
cmpsl
add
fadd
inc
lods
jnp
xchg
and
cmp
push
jae
xor
sub
pop
ror
or
push
sub
outsl
and
pop
or
hlt
stc
popa
fmuls
fsubr
test
xor
loopne
mov
lods
cmp
jmp
mov
int
cmc
or
jp
aas
loop
pop
mov
mov
sub
dec
push
xlat
in
cmp
jae
stc
int3
js
xor
mull
mov
mov
out
jno
cmp
cmp
sbb
cmpsl
xchg
jo
pop
and
mov
push
test
loope
mov
mov
add
sub
loop
pusha
and
pop
cmp
loop
cld
mov
jmp
mov
shl
mov
dec
cmpsb
ss
lea
das
addr16
add
lds
xlat
hlt
lods
or
scas
out
daa
cmp
pop
cmp
or
xor
or
xchg
push
loop
clc
adc
cltd
dec
and
inc
xor
sbb
push
adc
mov
dec
sarb
nop
stc
loopne
lahf
mov
stc
popf
jo
mov
inc
sub
sarb
pop
adc
scas
xchg
fwait
cmp
cmp
dec
div
cmc
mov
xchg
cmp
out
lods
js
jmp
mov
adc
push
xchg
sbb
jae
pop
fcompl
das
mov
sbb
sbb
xchg
gs
inc
xlat
xor
xchg
frstor
pop
aas
jns
shlb
xor
daa
sbb
sub
jno
jb
popa
loope
jg
int
je
add
inc
xor
ret
and
stc
mov
xlat
adc
inc
adc
ds
add
cmpsb
out
ficompl
clc
test
jge
test
insb
movsb
loop
adc
jae
dec
aaa
xchg
in
sbb
pop
push
push
or
pop
xor
leave
xor
iret
cwtl
jno
in
cmp
pop
cwtl
test
sti
and
in
xor
dec
push
mov
push
pushf
lds
repnz
rolb
scas
orb
ret
ss
push
sub
sub
ljmp
gs
or
test
in
sub
fadds
xorl
push
cs
cs
sarb
out
jne
scas
cmp
mov
pop
push
pop
or
popa
adc
jl
sti
mov
mov
sbb
inc
push
aad
bound
out
stc
cmp
mov
notl
and
mov
ds
lea
xlat
je
add
add
jae
sti
insl
pop
in
jge
mov
cmp
cld
cmp
push
imul
add
jno
test
jecxz
lret
mov
out
stos
dec
mov
cmp
jne
sbb
popf
repnz
std
movsb
daa
fsubrl
mov
in
pop
out
push
std
mov
sub
add
xor
or
adc
icebp
lods
cmp
js
fdivrl
cld
jg
pop
add
jne
and
pop
push
cmc
xchg
xor
fildll
scas
fisttpll
push
jmp
mov
movsb
lcall
fdivl
inc
jmp
rorl
add
out
mov
cmp
in
cmpsb
ljmp
or
out
hlt
ja
jle
out
mov
xchg
or
cmp
or
loop
jae
dec
dec
lcall
lods
sbb
call
xor
sub
mov
pop
jmp
adc
adc
jl
popa
gs
and
scas
push
jl
mov
sub
rclb
movsb
mov
addr16
out
inc
mov
sbb
lsl
sahf
inc
lahf
call
jle
mov
hlt
stos
or
mov
cs
push
or
lret
mov
mov
jp
aaa
aad
stos
mov
notb
movb
cs
leave
adc
subl
call
popa
adc
sarl
out
sbb
fneni(8087
flds
pop
inc
test
push
xchg
xchg
lcall
fsub
sbb
and
push
jno
add
int3
jmp
push
push
leave
jg
iret
pop
ljmp
push
lahf
cwtl
enter
push
int3
arpl
lea
sbb
push
mov
or
imul
adc
stc
cli
and
cmp
jmp
mov
mov
push
js
fdiv
mov
jp
js
push
add
push
sbb
sub
add
pop
push
loope
inc
push
insb
mov
push
mov
xor
outsb
push
cld
aaa
test
mov
push
cmp
fmulp
pop
sub
mov
shrb
in
sti
mov
cmpsl
stc
cmc
ds
imul
stos
sub
fmuls
xchg
jl
repnz
sub
and
pop
jp
dec
ficoms
push
imul
orl
hlt
iret
mov
pop
call
push
jns
jmp
adc
inc
xchg
pushf
dec
mov
dec
imul
cmp
mov
lods
pop
jp
mov
hlt
jle
adc
mov
inc
mov
repz
or
in
push
bound
lret
jg
mov
cwtl
sub
imul
cs
sub
lds
add
inc
adc
xchg
shrl
sarb
popa
iret
xor
enter
add
scas
mov
xchg
decb
mov
mov
test
mov
daa
cmp
jo
dec
clc
mov
lahf
dec
xchg
incl
sub
jle
add
sub
pop
cmc
pop
cld
in
es
loope
add
cmpsb
add
es
mov
adc
cs
dec
es
push
jge
add
pop
lcall
mov
xor
push
xchg
inc
pop
push
xchg
fwait
inc
dec
std
loop
aas
sbb
mov
jns
push
jnp
pop
iret
jmp
jg
orb
pop
addr16
leave
jmp
popa
sbb
into
dec
ret
jp
cmc
xor
inc
add
mov
lock
cwtl
pop
mov
cs
jecxz
inc
or
xchg
aam
sbb
loope
adc
subb
inc
adc
fwait
push
outsb
xor
scas
call
movsl
aaa
scas
push
xchg
jbe
lahf
mov
mov
cmpl
fisubrl
mov
sub
fcoml
and
or
cmc
pop
xlat
punpcklwd
imul
sub
pop
xchg
mov
sub
sbb
dec
jge
into
fcomi
add
xchg
rorl
pop
adc
ja
xor
xchg
sbb
outsl
sbb
or
aam
popf
jnp
mov
adc
sub
lock
xor
scas
out
sbb
pop
adc
xor
xor
fs
mov
jbe
sbb
lods
scas
jns
ret
dec
add
out
mov
ds
mov
test
dec
addr16
cmp
push
sub
aam
lods
push
insb
cmp
mov
jl
pop
jnp
push
jbe
test
mov
mov
and
cmp
pusha
lret
sbb
jp,pt
in
mov
jle
ret
std
push
push
dec
xchg
sahf
pop
outsb
leave
add
cmpsl
push
shll
das
nop
paddw
ret
shl
arpl
pop
test
popf
inc
pushf
mov
pushf
sbb
icebp
or
sbb
arpl
sbb
mov
out
or
or
jno
mov
sbb
jle
inc
xor
push
loop
xchg
xchg
jne
xchg
loope
sub
sbbb
int3
add
or
fistl
mov
dec
lcall
ljmp
scas
mov
push
pop
xor
or
sti
pop
and
test
js
lcall
xor
xor
mov
mov
shrb
or
and
xchg
push
outsl
gs
inc
movsb
and
push
cmp
mov
aas
mov
fdivl
sarl
ret
fcomi
push
cwtl
push
mov
push
cmc
test
lret
in
ret
dec
popa
fs
sbb
icebp
xchg
movsl
in
flds
ljmp
mov
jp
cmp
inc
xlat
mov
adc
push
fsubrl
xchg
les
pop
xor
mov
add
addb
pop
sub
and
pop
and
xor
test
or
inc
pop
popa
iret
push
dec
sahf
loop
roll
movsl
xchg
cwtl
xchg
popf
push
inc
dec
xchg
insb
mov
jo
xchg
sub
ret
and
add
pop
inc
add
stos
mov
mull
pop
data16
gs
push
gs
mov
out
pop
sbb
cmpsb
insl
jle
mov
fcmovne
mov
adc
mov
jno
sub
xchg
jmp
xor
cmp
inc
xchg
arpl
xor
popf
pop
popa
mov
imul
loope
jmp
and
sbb
mov
xchg
jmp
cmp
inc
sbb
out
jnp
mov
jo
jecxz
lahf
xchg
jae
and
push
mov
sbb
lahf
xor
mov
lea
pop
xchg
xchg
daa
pop
push
in
mov
movsl
xor
sahf
je
insb
sub
fnstenv
std
cs
mov
out
push
ds
add
hlt
jno
sub
repnz
push
cmp
push
imul
ds
push
mov
mov
loopne
and
outsb
mov
loope
xchg
pop
jno
xor
xchg
adc
sub
mov
das
adc
mov
cs
sti
out
mov
adc
and
fisttpl
push
fwait
orl
fstps
scas
lret
test
and
cwtl
test
notl
jg
sub
inc
cltd
test
rcrb
stc
mov
adc
xchg
cmpb
or
mov
jo
sub
mov
or
pop
adc
mov
push
pop
inc
les
adc
add
mov
cltd
jo
int3
jp
xchg
ss
pop
rcll
push
lds
outsb
push
push
data16
das
clc
ljmp
jno
cmp
jbe
out
shr
adc
sbb
mov
or
ffreep
or
mov
jge
cmpsl
cmp
sbbl
xlat
popa
sub
jle
sub
mov
inc
ret
and
outsl
cli
andl
dec
or
push
je
mov
les
mov
test
test
xor
mov
iret
arpl
pushf
shrb
les
adc
lret
gs
jmp
cmp
sub
mov
inc
aad
jl
cmp
data16
pop
adc
fisubrs
push
dec
mov
popf
dec
pop
insb
daa
testb
sub
std
adc
mov
arpl
sahf
cmpsb
xlat
test
cmc
arpl
lock
hlt
push
jecxz
aaa
sbb
pop
std
cld
and
push
cmpsb
lret
add
leave
cld
insl
mov
cmpsb
gs
inc
decb
js
call
lcall
inc
xlat
add
fs
jo
push
xor
xchg
mov
jbe
lock
aad
outsl
ret
cmpsl
pusha
clc
dec
adc
std
pop
inc
out
aam
jmp
jns
inc
sbb
scas
sbbl
xchg
sbb
sub
mov
dec
add
or
and
clc
push
inc
and
mov
push
aas
pop
lods
push
jge
dec
cmp
adc
into
mov
mov
mov
out
daa
stc
push
arpl
push
mov
cmc
lds
fwait
outsb
into
push
test
inc
pop
outsl
popf
stos
insl
popa
addr16
sbb
inc
push
out
popf
js
xchg
mov
mov
xchg
xchg
cmp
ds
mov
pushf
scas
mov
push
inc
push
imul
mov
xchg
xchg
shrl
fstl
xor
hlt
cltd
iret
mov
pushf
mov
sahf
movsl
daa
xchg
add
sbb
jbe
mov
add
fcompl
decl
out
test
nop
mov
xchg
mov
into
inc
mov
mov
stc
fists
rorl
sbb
inc
aad
pop
loopne
ja
iret
into
pop
clc
fsts
loope
in
arpl
movsb
xor
mov
and
jp
mov
shll
jnp
or
push
add
sti
jnp
jp
std
gs
pushf
mov
loope
xlat
pop
aaa
xor
insb
sub
aam
pop
outsb
arpl
cltd
lods
jns
push
mov
cmp
xor
xchg
mov
popa
test
stos
ja
mov
xor
faddl
sbb
sub
adc
cwtl
clc
icebp
fmuls
sub
call
xchg
stc
in
das
adc
push
cs
sbb
call
imul
inc
rolb
ret
add
mov
pop
jno
mov
xorb
fmull
insl
adcb
mov
adc
pop
adc
loope
ss
cltd
mov
pop
inc
cld
jbe
xorl
jmp
jo
cld
add
push
shll
xchg
inc
fcmovnu
insl
jbe
or
cmpsl
nop
push
out
insb
lcall
xor
les
pop
or
shlb
sbb
pop
lods
cltd
jl
inc
insb
sub
jecxz
fldcw
adc
push
dec
dec
ss
mov
add
mov
mov
test
xor
mov
mov
xchg
mov
cld
sbb
hlt
adc
push
xchg
adc
xlat
or
leave
xchg
xchg
sbb
or
mov
jecxz
xchg
jns
repnz
push
fs
addl
push
push
bound
inc
cmpsb
dec
xlat
call
xchg
mov
jp
push
jae
sub
pop
cld
push
mov
jmpw
xchg
push
dec
mov
ds
xchg
gs
add
cmpsl
pop
jb
outsb
push
int
je
or
mov
dec
dec
int
insb
lods
sub
pusha
bound
pop
jl
fwait
lret
imul
popw
mov
xchg
cmpsb
shlb
push
in
jmp
shlb
add
sbb
ds
test
fcmove
enter
cmp
mov
daa
insb
mov
mov
jb
dec
cmp
ret
inc
mov
xor
hlt
push
and
add
lcall
dec
aad
mov
push
dec
jmp
sbb
stc
shrl
shlb
push
sub
mov
movsl
pop
clc
out
push
pop
call
outsl
and
xor
insb
mov
out
pop
ds
mov
fildl
ljmp
and
pushf
test
mov
call
push
icebp
xor
std
sub
mov
mov
stos
cmp
popf
cli
or
fstps
mov
je
es
or
out
jg
push
stc
push
xchg
mov
mov
mov
stos
in
aas
dec
fnstenv
ss
lods
js
pop
cwtl
movsb
mov
push
out
pop
leave
and
hlt
xor
dec
cltd
jb
iret
ret
cld
xchg
xchg
add
adc
fdivrl
and
sub
or
sub
jmp
imul
lods
repnz
in
xor
sub
lds
mov
rcr
xchg
sbb
in
int3
pop
adc
push
neg
pop
nop
mov
and
cmp
pop
push
mov
mov
aad
jno
add
pop
iret
xchg
sbb
das
hlt
ja
mov
dec
fmuls
cmp
sub
cs
nop
adc
outsb
jbe
jbe
mov
xor
ret
add
xor
add
test
jecxz
fdivr
adc
xchg
push
push
dec
sbbb
xor
ficoms
push
and
sub
inc
and
fpatan
pop
aaa
inc
outsl
cmp
or
das
lock
test
dec
jne
sahf
and
pop
xchg
fcmove
daa
push
or
mov
in
rcll
jae
sub
movsl
cld
mov
hlt
mov
scas
jp
das
mov
push
les
push
lahf
push
imul
ret
mov
aam
mov
subb
sbbb
jae
cmc
test
pop
fsts
movsb
xchg
pop
sti
xlat
sub
inc
adc
or
aad
out
mov
into
cmp
mov
pusha
jl
leave
lahf
jbe
pusha
jmp
jb
mov
fwait
call
dec
inc
shr
popf
into
inc
push
mov
ss
cld
loop
into
jns
lock
loope
mov
dec
popa
inc
dec
pop
dec
xor
push
ss
stos
cli
mov
pop
jp
sub
xchg
sbb
sbb
insb
mov
bound
and
lahf
xchg
cmp
lret
or
mov
fs
pop
mov
in
adc
mov
cs
out
sahf
mov
sbb
xchg
repnz
sbb
ja
int
icebp
out
fiaddl
or
dec
push
lcall
dec
xchg
mov
push
sbb
mov
repnz
xchg
and
push
inc
mov
lret
xor
bound
popa
in
sub
fidivl
fs
and
mov
inc
and
cmp
xchg
sub
fildl
movsb
out
popa
aaa
jnp
insb
pop
jmp
sbb
cwtl
mov
mov
adc
add
xor
inc
or
sarl
mov
xor
xchg
mov
mov
movsb
adc
mov
sbbb
adc
xor
add
adc
pusha
in
and
pushf
adc
sub
stc
movsl
in
add
fnstcw
and
mov
cs
xor
cld
add
repz
adc
or
ds
sub
jbe
in
or
outsl
mov
in
loopne
daa
mov
cwtl
cmp
and
lret
icebp
test
mov
pushf
push
dec
inc
sti
lods
cmp
push
scas
xchg
jl
cmpsl
sbb
incb
push
jge
dec
mov
pop
jae
xor
hlt
fistpl
mov
pop
cmp
adc
in
mov
jno
sbbb
dec
push
xchg
lods
mov
dec
loop
les
adc
imul
das
cltd
xchg
pushf
sub
in
add
sbb
subl
jno
and
pop
and
lcall
jbe
inc
stos
in
cmp
cmpsl
fcompl
cmp
sub
rorl
js
mov
push
iret
mov
mov
pop
jecxz
call
test
cmp
push
les
cld
adc
mov
sti
xor
into
cmp
lods
mov
xlat
sub
or
loope
push
push
lret
lea
or
fwait
cmpsb
add
sub
test
fcoml
sbb
repz
mov
and
adc
dec
push
or
insb
js
jbe
lahf
testb
mov
into
cmp
shlb
push
mov
test
test
cmp
sub
mov
mov
mov
xlat
mov
mov
add
xor
xor
adc
lret
cmp
fiaddl
das
and
insb
add
icebp
in
and
and
pop
mov
imul
cmp
jle
mov
nop
or
lods
cli
dec
and
divb
cmp
inc
adc
mov
dec
push
mov
in
mov
ljmp
es
xchg
imul
fistpl
mov
jb
and
mov
push
cmp
fldt
popf
xor
outsl
add
loop
push
add
ja
cmpb
lock
xchg
movsb
loopne
je
cmpsl
pop
adc
mov
in
xlat
mov
test
dec
inc
xor
lods
push
jno
inc
sbb
mov
push
sbbl
imul
scas
ficoms
sub
mov
mov
sbb
inc
add
pop
inc
mov
movsl
xor
repnz
into
and
push
ss
insl
dec
sub
adc
pop
fiaddl
xchg
or
jmp
inc
pop
sub
xchg
dec
pop
mov
and
rorl
repz
push
in
pop
scas
adc
mov
cs
mov
jae
ret
mov
mov
fisttps
sub
sahf
popa
lcall
lcall
dec
loope
xlat
sti
repz
mov
icebp
movsl
movsb
or
push
push
into
push
push
cmpsl
aam
pop
out
mov
fsts
stc
cld
fnstenv
lock
imul
xchg
movsb
mov
sti
mov
rclb
mov
daa
pop
fistpll
fsubrs
or
cmp
jne
mov
rcrl
add
lods
shrl
push
popa
xor
jg
lock
sbb
cmp
shl
mov
mov
inc
push
pop
mov
mov
mov
mov
std
cmp
mov
call
mov
push
int3
jge
add
pop
inc
inc
aas
mov
sbb
inc
sbb
loop
shlb
mov
call
popa
cmpsb
push
loope
or
in
jg
jnp
in
div
mov
sahf
loop
push
jnp
add
mov
xor
mov
mov
loopne
inc
cli
cmp
aas
pop
inc
leave
jae
mov
jbe
in
adc
pusha
cmpsl
repz
decl
lret
xchg
cmp
pop
repz
cmp
and
sbb
mov
popa
xchg
loope
and
and
or
repnz
arpl
or
dec
stos
xor
ss
out
mov
mov
scas
shlb
adc
sbb
jns
sub
adc
mov
or
adc
in
or
fbld
cmp
mov
xor
loopne
pusha
adc
inc
scas
add
mov
scas
xchg
cmp
shlb
fwait
mov
adc
into
push
push
push
xchg
push
aam
xor
pavgw
inc
cmp
outsb
adc
cwtl
insb
ffreep
push
jno
and
pop
stos
lcall
pusha
aad
fldenv
movsl
dec
imul
xor
cld
rcrl
mov
jl
xchg
xchg
sub
loope
enter
movsl
sub
inc
sub
push
add
pusha
adcb
pop
scas
mov
mov
pop
pop
loope
cld
mov
mov
out
xchg
adc
enter
jmp
leave
xor
int3
inc
mov
pusha
fildl
outsb
stc
repnz
ja
in
sbb
fdivrs
mov
js
jp
imul
iret
mov
in
fucomip
pop
add
es
xchg
pop
data16
adc
add
lods
mov
hlt
add
sti
jb
data16
andb
xor
movsb
popa
out
gs
dec
mov
lods
fnsave
in
push
jg
and
daa
dec
add
orb
leave
hlt
outsl
arpl
cmp
jl
inc
dec
dec
cmp
jp
test
sub
adc
shlb
in
mov
aas
dec
inc
outsb
or
jl
stc
orb
out
std
xchg
mov
into
dec
push
jne
and
stc
mov
cmp
pop
cltd
xlat
enter
shll
lea
lock
cmp
xchg
mov
dec
fld
movsl
shl
inc
pop
lea
loopne
mov
xchg
inc
mov
mov
xor
sbb
pop
mov
jp
fwait
cmp
push
into
mov
ja
jg
sbb
ljmpw
in
cmp
xchg
mov
aad
mov
mov
aam
sbb
lcall
out
jnp
bound
add
mov
movsl
mov
clc
out
cmp
fdivr
lret
push
dec
or
mov
clc
inc
sub
mov
push
jp
jno
push
cwtl
pop
fwait
mov
daa
aam
loop
push
out
xlat
jg
jl
sbb
cmp
push
out
sarb
std
dec
and
cmp
arpl
pop
xchg
xorb
jp
jb
mov
ss
loopne
mov
cmp
ror
aaa
xchg
ret
and
xchg
push
cwtl
pop
fstl
mov
inc
inc
and
sbb
pop
leave
outsb
pop
fcmovbe
loop
adc
adc
inc
lcall
dec
out
mov
leave
and
punpcklbw
pusha
mov
add
data16
icebp
sub
push
in
mov
and
sti
sbb
sub
mov
rclb
or
fs
add
cmc
outsb
mov
loop
ss
lret
sub
cmpsb
dec
mov
shrl
pop
push
pop
xchg
inc
iret
mov
das
xor
push
addl
pop
push
ret
addb
push
inc
jmp
fdivl
sub
lcall
mov
bound
aad
movsl
std
fisttps
aas
fcoml
jne
imul
jge
push
lret
xchg
pop
into
fcmovb
jne
scas
out
push
ljmp
popa
subb
dec
lds
jae
cmp
cltd
sti
cmp
dec
xchg
imul
pop
add
add
ljmp
fwait
jae
jmp
cmc
inc
xchg
cmp
cs
test
bound
jbe
cmpb
imul
loope
lock
jns
sahf
test
int
mov
push
notb
or
push
add
sub
ret
push
test
pusha
mov
movsl
inc
test
mov
andl
mov
shlb
cmp
cmpsl
or
adc
mov
dec
xor
sub
fcmovb
fwait
xlat
lods
sub
in
add
pop
hlt
int
inc
pop
jmp
sub
stos
mov
lret
push
add
push
xchg
js
pusha
dec
xor
dec
addr16
faddl
mov
dec
xor
and
stc
fwait
pop
mov
es
mov
jo
push
cmpsl
rolb
dec
testb
and
cmp
push
xor
into
xor
aaa
into
pop
cwtl
inc
pop
xchg
pop
dec
fs
jnp
enter
and
sbb
nop
or
and
iret
xchg
inc
imul
sti
mov
xor
lret
int
daa
sti
cmpsb
cmpsl
enter
mov
movsl
cmp
stc
pop
insb
clc
adc
inc
data16
hlt
mov
push
arpl
insb
inc
add
std
sbb
insl
popf
aaa
mov
fmull
lcall
enter
mov
ljmp
lds
push
sub
push
sub
sarl
mov
fdivrs
pop
mov
mov
mov
jg
ret
les
inc
iret
outsl
ret
in
rol
nop
pop
sbb
lret
sbb
arpl
cmp
jbe
cmp
fsts
decl
loop
out
fisttpl
jl
xlat
in
adc
mov
mov
nop
and
or
pop
test
lahf
in
sbb
push
cmp
mov
mov
out
dec
mov
jge
jle
sub
or
push
mov
int
xchg
push
fwait
aaa
dec
test
mov
fwait
lea
dec
aaa
scas
lods
insb
into
adc
xor
sub
add
lock
loope
nop
sub
sub
mov
ja
lcall
imulb
sti
jecxz
movsl
mov
mov
aad
loopne
xchg
nop
ljmp
adc
sub
fwait
push
push
in
mov
sbb
sub
mov
pop
xchg
mov
js
and
push
jp
and
lods
cmp
or
aas
mov
mov
in
jmp
out
sbb
push
add
lcall
xor
cltd
daa
insb
ret
xchg
or
loopne
call
push
jge
sub
or
pop
imul
dec
or
add
lods
fidivrs
sbb
jo
and
jno
push
pop
test
orb
cltd
push
sarl
jge
cmpsl
mov
push
lret
lret
and
pop
adc
xchg
jae
mov
xchg
gs
scas
sbbl
and
in
and
rol
movsb
push
pusha
push
out
shrb
insl
lret
leave
rsqrtps
mov
adc
sti
fcoms
mov
insb
mov
lods
xor
nop
mov
pusha
int3
xor
outsb
mov
dec
xor
push
cwtl
sbb
inc
in
scas
fsubs
xchg
jl
and
mov
and
in
test
or
sbb
xchg
data16
ret
stos
add
cltd
mov
outsl
xor
movsb
aad
test
aad
test
or
push
jecxz
sbb
into
inc
and
mov
xchg
add
test
je
mov
xor
jno
das
sbb
or
shrl
movsl
fs
dec
push
aaa
and
and
data16
aas
jno
subb
out
ss
ss
fisubrl
cld
sub
fwait
jle
adcb
pop
xor
fdivs
popf
sbb
out
in
popf
fs
cmp
jo
aaa
pop
rcrb
mov
adc
imul
lahf
and
rorl
pop
shll
xor
aam
test
dec
daa
shl
cmpsb
divb
add
jmp
mov
orb
mov
dec
add
stc
icebp
mov
or
cmp
in
adc
mov
sarb
mov
pop
and
add
mov
sub
les
xchg
xlat
das
jno
lret
icebp
sbb
cmp
mov
arpl
gs
sub
cmpl
dec
bound
add
sahf
mov
mov
jnp
test
lahf
push
pop
pop
mov
test
push
insl
adc
ret
xchg
and
dec
inc
add
pop
xor
fnstenv
push
lea
hlt
icebp
ret
add
mov
out
addr16
xlat
and
inc
inc
xor
fsubl
pop
xchg
jae
jl
cmpsl
lds
iret
xor
mov
int
jmp
xor
push
mov
mov
jecxz
imul
and
mov
mov
xchg
mov
sbb
mov
cmp
lock
pop
stos
or
iret
pop
shll
adc
out
adc
in
rorl
or
mov
push
test
jle
lods
loop
inc
cmp
icebp
pop
cmc
inc
jmp
aas
data16
ljmp
cmp
adc
xor
and
pslld
mov
popa
mov
mov
sub
pop
pop
clc
and
dec
xchg
adc
test
xor
jg
mov
sub
es
divl
pop
faddp
mov
mov
cmc
pushf
loope
shlb
add
and
adc
js
mov
xchg
fs
push
mov
cld
xor
out
mov
mov
cs
cmp
test
jle
sahf
mov
test
xor
movsl
jne
rclb
lds
xchg
mov
xchg
movsb
mov
adc
outsb
lds
test
or
popf
lret
frstor
adc
imul
add
adc
push
pop
or
pop
call
mov
cmp
or
mov
cli
sbb
lods
int
dec
lea
mov
push
cmp
call
lret
mov
dec
inc
add
dec
and
xor
push
adc
adc
jnp
mov
lcall
enter
bound
sub
stos
inc
sub
dec
iret
sub
testl
jno
sti
inc
sbb
push
aaa
ret
sub
push
xchg
push
ret
push
lods
popa
lret
scas
dec
xchg
sbbl
mov
cmp
xor
mov
cmp
mov
clc
sbb
in
in
adc
mov
adc
repnz
xor
popl
fdivrs
xor
clc
mov
popa
insb
cltd
stos
mov
xlat
aam
stos
out
clc
outsl
repnz
pop
mov
lea
into
sbb
movsl
aas
lds
ret
stos
lock
lds
js
das
lea
sbb
sti
aaa
pop
or
test
inc
fidivl
xor
inc
or
testb
das
outsb
adc
aam
xchg
dec
test
out
mov
pushf
xchg
jg
lcall
add
ds
push
test
inc
sbbb
inc
sbb
push
and
es
gs
icebp
jmp
sub
xor
scas
dec
shll
mov
in
shrl
add
pop
test
orl
cs
mov
dec
dec
add
sub
test
shl
shl
pop
ss
aam
adc
cmp
dec
inc
repz
jmp
rolb
xchg
xchg
nop
hlt
popw
xor
xor
push
mov
sub
test
movsl
pushf
shrl
mov
fwait
pop
cltd
cmc
pop
stc
cmp
push
sub
mov
dec
push
jle
jg
insb
cwtl
stos
add
fidivs
jmp
jne
das
into
faddl
xor
jno
cmp
imul
xorb
lds
enter
out
out
lcall
xor
rcrb
mov
pop
mov
jns
xor
cmc
or
out
lods
jmp
movsl
cmpsb
negl
rorl
mov
je
leave
cmp
in
push
sub
data16
pop
ljmp
negl
add
mov
fwait
insl
and
ja
jnp
lcall
or
stos
inc
rorl
lret
daa
sbb
out
sahf
inc
out
mov
pop
sbb
cmp
repnz
jnp
hlt
sbb
mov
add
nop
outsb
xor
xor
loop
dec
movsb
std
or
pop
jl
mov
sub
mov
push
dec
and
pop
faddl
test
and
cmpsb
aaa
mov
sbb
lret
in
and
adc
popa
dec
mov
scas
ret
test
mov
scas
mov
mov
mov
jne
or
push
movsl
xchg
mov
mov
jmp
adc
jl
add
cmp
jae
push
mov
rcrb
xchg
adc
aas
pop
cmp
xor
push
in
sub
mov
in
jmp
cmc
jmp
gs
cs
or
jle
inc
std
cmp
sahf
daa
adc
inc
gs
xor
jge
stos
fdivrp
push
int
aas
andl
nop
imulb
jbe
pop
out
add
in
add
sti
mov
sbb
cmp
push
inc
ljmp
inc
test
dec
rcrl
and
pop
clc
dec
mov
xlat
hlt
arpl
push
sub
jmp
push
sub
rorb
arpl
xchg
pop
pop
pop
shll
cli
jne
add
sbb
loope
ror
jno
xor
cmp
adc
out
push
push
adc
lea
fcomps
push
out
or
rorb
xor
sub
add
fildl
and
lcall
insb
into
outsl
mov
xlat
ret
andb
cli
cld
mov
cmpsb
lret
push
ds
or
sub
push
mov
mov
lret
popf
mov
mov
pop
insl
jmp
pop
ds
jnp
loopne
daa
push
dec
push
pop
mov
pushf
pushf
popf
mov
mov
xchg
inc
adc
cltd
jae
rorb
testl
mov
inc
pop
or
sub
jmp
popl
ftst
mov
mov
int3
adc
mov
xor
xchg
jg
aaa
sbb
push
scas
xchg
jg
cmp
in
pop
adc
test
mov
pop
sub
xchg
mov
cmp
inc
fldt
sbb
inc
mov
mov
cmpsl
loope
lods
jmp
rorl
es
lock
add
sbb
sub
int
cmpsb
jo
pop
xchg
or
jnp
fwait
divb
rol
or
sbb
dec
lcall
outsb
and
icebp
and
loope
or
fnstsw
ret
lock
not
sbb
push
sub
adc
fldl
sbb
and
cmpl
jl
orb
xor
dec
jo
jbe
cli
aas
lcall
fwait
ljmp
daa
in
sahf
or
cmp
lds
cs
ds
cwtl
sub
fucomp
add
in
cltd
int
adc
aaa
push
stc
jecxz
imulb
leave
dec
xor
push
dec
or
sbb
inc
push
push
cmp
mov
cmp
mov
mov
div
mov
test
add
outsl
inc
iret
movsl
push
add
sbb
xchg
jge
dec
sub
imul
mov
sub
bound
pusha
adc
nop
mov
jp
pop
dec
fisttpll
int3
push
repz
jg
lea
aaa
inc
in
inc
push
shld
push
popa
enter
call
cli
out
mov
orb
xchg
and
mov
inc
imul
iret
jle
loope
and
rorb
fimuls
jns
adc
pop
mov
adc
je
hlt
or
dec
add
push
sti
in
imul
pushf
adc
sbb
aad
sahf
xchg
mov
int3
rolb
leave
leave
out
outsl
add
mov
mov
adc
xchg
in
jno
adc
fistps
lock
mov
mov
lds
or
fisttpl
jnp
shll
jecxz
stos
in
lcall
mov
rcr
pop
fwait
rcr
jmp
cmp
mov
mov
sti
dec
daa
jno
cmp
test
pop
ljmp
outsl
xlat
ret
int
jg
das
outsb
loopne
adc
xor
imul
pop
cltd
jle
jno
pop
js
loope
mov
add
mov
pop
adc
jno
or
jno
push
and
jae
insb
xchg
xchg
xchg
xchg
test
xchg
xor
pop
cmp
das
sub
push
pushf
loopne
lret
and
mov
insl
sub
dec
ja
std
adc
mov
ret
sahf
into
js
fstpl
in
inc
pop
jp
nop
inc
mov
int
rolb
lods
sbb
cmc
frstpm(287
into
and
push
clc
dec
shlb
cmpsl
xchg
adc
jmp
add
and
shll
std
add
pop
inc
out
lret
hlt
push
loop
xor
mov
test
pop
sbb
loope
pop
stos
dec
out
cld
cmp
dec
push
mov
mov
sahf
sar
or
push
pop
lret
xor
popf
push
scas
add
xchg
pusha
je
xchg
push
in
push
cltd
mov
xor
and
dec
adc
mov
or
notb
mov
xor
xchg
mov
xchg
iret
cwtl
mov
cmp
cwtl
imul
rorl
pop
aad
cmp
test
inc
pop
pop
cld
cltd
sub
dec
notl
inc
out
mov
scas
inc
add
leave
out
adc
lock
and
sub
lret
test
add
inc
repnz
lock
pop
dec
or
imulb
hlt
mov
mov
inc
sub
lock
mov
out
incb
cli
lret
dec
pop
dec
adc
cmpsl
ror
cli
sbb
mov
xchg
clc
divl
push
mov
mov
iret
mov
jmp
sti
pop
loopne
xor
hlt
lock
dec
jo
out
jno
sub
aad
ror
jns
xchg
pop
dec
mov
inc
mov
rorb
push
lret
test
jns
lds
sbb
in
xor
lcall
test
fsubp
push
stc
pop
rcl
pop
insl
out
into
cmpl
lea
sub
dec
in
int
negb
mov
dec
inc
mov
cld
aam
mov
or
add
xor
fcoms
rcrl
and
loopne
cli
outsb
mov
in
popa
adc
subb
ret
mov
fs
sbb
cld
out
adc
pop
pop
lods
inc
push
push
faddp
inc
pop
cmpsb
cmc
jl
push
mov
insb
xchg
ret
icebp
in
sbb
rcll
pop
lods
or
mov
mov
in
repz
push
out
cmp
jo
cmp
sub
cltd
mov
adcl
fadds
inc
jne
mov
loope
insb
sbb
sbb
adc
imul
xor
imulb
dec
jle
loope
push
adc
push
adcb
sub
cmp
or
mov
cmp
sbb
imul
jp
mov
sub
int
shr
inc
jb
dec
jbe
out
fdivp
cmp
stc
xor
leave
cwtl
lcall
js
nop
in
imul
hlt
mov
adc
iret
pop
adc
in
sbbl
jle
sbb
nop
xor
adc
sbb
loope
push
mov
clc
fstpl
scas
add
xor
mov
jo
sub
xchg
adc
cmp
adc
xchg
sti
out
cmp
mov
test
mov
loop
mov
cmp
or
cmpsl
cmp
mov
mov
mov
jbe
and
jo
add
push
ret
cli
insl
es
inc
push
xor
pand
in
push
mov
sti
cld
popf
rcr
adc
sub
cmc
inc
test
push
sti
mov
jbe
cli
ljmp
mov
xchg
out
movsl
out
popf
push
int3
dec
loopne
dec
out
loopne
mulb
add
data16
lds
xchg
cld
aam
lock
out
hlt
shrb
xor
fwait
in
mov
dec
mov
ret
int
mov
mov
adc
inc
jbe
xor
clc
dec
lock
imul
mov
divl
push
pop
xor
xor
pop
add
mov
pusha
adc
ds
testb
ljmp
fimuls
xchg
pop
push
xor
push
cs
cmpsl
xchg
call
hlt
xorl
pop
faddl
sub
jb
jo
mov
popf
int
mov
jl
push
mov
dec
lea
mov
sub
pop
lahf
int
mov
xor
jae
jns
sbb
mov
mov
divl
repz
idivb
roll
les
sti
fdivl
adc
idivl
sbb
bound
add
jmp
lds
cmp
neg
jl
in
mov
push
lock
pop
cli
add
pop
ret
loopne
lds
cmp
pop
ja
out
mov
push
xchg
or
cltd
jp
push
adc
test
enter
movsb
or
jae
rcl
mov
sbb
xor
cmpsl
add
mov
jle
pop
pop
mov
movsb
mov
pop
iret
and
pusha
int
lret
aad
in
push
jnp
shl
sbb
jbe
or
out
add
fsubs
add
and
int
push
sub
addl
mov
aas
push
out
inc
add
lret
faddl
xor
sub
loopnew
sub
sub
pusha
movsl
lock
mov
sbb
sbb
mov
ret
arpl
pop
into
inc
pushf
and
dec
gs
add
rcll
xor
or
leave
dec
mov
sub
mov
push
inc
cmpsb
or
mov
pop
adc
inc
fcoml
cmpb
idiv
pop
mov
dec
adc
in
inc
icebp
xchg
push
mov
decl
idivl
push
xor
cmp
enter
push
cmp
mov
and
and
fisttps
fcmovbe
dec
test
cmpsb
push
mov
or
sbb
jecxz
pop
xlat
lret
dec
gs
mov
mov
dec
lret
push
sbbl
mov
mov
into
jl
mov
pop
scas
mov
inc
out
mov
shrb
psadbw
ficompl
test
out
rcll
lea
or
mov
lods
fdivrl
or
enter
xlat
arpl
and
mov
loopne
pop
arpl
or
add
and
mov
outsl
adc
inc
jge
xor
std
mov
scas
outsl
cmp
pop
jmp
xchg
cmp
dec
jno
push
enter
and
or
icebp
cs
jle
shl
push
shll
xor
and
adc
cld
lea
lcall
mov
add
sbb
fwait
scas
outsl
sub
xchg
cmp
adc
outsl
xchg
out
push
push
jb
add
loope
js
fisubs
adc
repz
fcomi
insl
mov
nop
xchg
add
inc
and
xchg
xchg
dec
lcall
rcr
outsl
pop
mov
fadds
push
adc
lahf
adc
mov
aas
adc
adc
fidivl
pop
jb
pop
xchg
jbe
dec
in
push
sbb
xchg
hlt
shll
loope
std
push
lock
push
dec
add
dec
mov
dec
jmp
daa
rcl
mov
jne
cmp
cmp
nop
mov
enter
jecxz
jg
arpl
ss
adc
stos
popf
loopne
mov
jg
adc
xchg
cmp
push
lcall
mov
sbb
pop
dec
add
pushf
xor
outsl
jmp
inc
popf
jle
scas
or
aad
mov
dec
lea
movsb
and
cwtl
push
fistps
mov
aad
stos
sbb
shrb
xor
or
cmp
pop
js
negl
add
cmpsb
leave
orl
and
xchg
clc
fiadds
mov
sbb
sti
inc
clc
lret
loop,pn
sbb
cld
xor
jg
imul
dec
or
jge
cwtl
fs
push
or
dec
inc
mov
push
andb
outsb
psubusb
ror
ljmp
divb
das
call
mov
testb
popa
mov
iret
push
mov
xchg
and
or
jnp
xorl
mov
pop
in
pop
xchg
or
dec
xchg
lret
push
pop
add
mov
insl
lods
jg
fbld
mov
mov
data16
sbb
lock
into
push
dec
push
jp
mov
clc
sbb
lea
lahf
mov
jns
cmc
add
dec
dec
inc
xchg
dec
or
xor
lahf
sub
enter
fs
mov
xor
inc
xchg
and
cltd
add
icebp
or
pusha
pop
inc
dec
imul
in
push
out
pop
into
adc
daa
pop
add
repnz
pop
fidivrl
sub
js
adc
lret
int3
leave
sbb
xor
lahf
das
inc
mov
sub
test
lret
aaa
xchg
jge
inc
xchg
lahf
or
rolb
adc
pop
or
imulb
xchg
xchg
jb
sub
jmp
dec
sbb
dec
xor
hlt
pop
test
jbe
sbb
sub
push
adc
mov
cmp
jmp
in
stc
fdivs
sub
jae
loop
test
jnp
pop
fwait
js
mov
pop
mov
in
pop
aas
icebp
dec
xchg
fcomps
addr16
lcall
ret
sbb
xchg
adc
ret
les
cmp
jg
mov
mov
mov
xor
ja
jno
les
or
bound
jecxz
and
mov
lock
fadds
out
pop
sbb
lods
es
mov
testb
sbb
add
stos
inc
in
add
inc
cmpl
enter
mov
rep
rorb
mov
enter
xchg
and
add
movsb
push
inc
jp
fildl
mov
inc
push
das
push
cs
sbb
push
movsw
and
fistps
sbb
ja
je
push
push
sbb
fs
insb
mov
out
jno
sahf
xlat
ficomps
push
adc
jmp
jle
xchg
jb
loopne
cmc
add
cmpsl
jno
and
push
dec
cltd
xor
and
dec
aam
mov
inc
insl
fdiv
mov
jg
or
add
mov
shlb
lock
push
xor
mov
mov
sahf
push
sub
leave
imul
push
icebp
push
dec
jp
dec
inc
movsl
jmp
loope
mov
jmp
icebp
aad
mov
jge
insb
push
daa
sub
les
fcoms
xor
pop
pop
rorl
pop
jae
rorl
mov
out
lods
sub
xlat
dec
fmul
jecxz
fwait
dec
lods
push
mov
cwtl
lock
sub
sbb
lret
jle
adc
push
fsubr
jge
pop
pop
fidivs
and
jno
sbb
jmp
cmp
ret
dec
pop
cld
jmp
cmp
hlt
into
mov
gs
adc
sub
pusha
jno
mov
enter
sbb
or
inc
rclb
outsl
pop
inc
pop
sarl
rol
mov
sub
cmp
sbb
jge
dec
jmp
fs
stos
in
ja
in
lea
rolb
mov
lds
movsb
inc
dec
es
adc
in
ret
or
jae
mov
mov
or
fnstsw
jb
inc
cmp
lcall
ss
loop
mov
inc
or
outsl
push
cltd
aam
dec
push
push
pop
scas
insb
frstor
shll
mov
lea
pop
hlt
mov
pop
push
cmp
mov
andb
xorl
cmp
or
fdiv
sbb
adc
pop
adcb
mov
jbe
adc
xchg
inc
lods
xor
mov
insl
dec
mov
in
xchg
dec
ret
sbb
sub
mov
pop
xor
jns
lret
inc
and
mov
loope
clc
mov
sbb
sti
cmc
sbb
pop
pop
xor
aaa
sub
lcall
push
popf
je
pop
cmp
repnz
inc
imul
shrl
out
jne
outsl
sub
jmp
jmp
xor
mov
addb
insb
pop
in
das
jbe
rcrb
lret
xchg
sbb
cltd
xchg
iret
lods
jae
scas
pop
inc
mov
and
jnp
imul
mov
out
mov
dec
push
test
xchg
or
xor
fidivrl
in
or
add
xlat
pop
xchg
inc
fnstcw
es
jmp
adc
or
ljmp
aad
pop
jmp
mov
pop
xchg
stos
pop
lds
sahf
dec
mov
movsl
and
aam
scas
cltd
sbb
rolb
movsb
inc
pop
stc
jge
push
pop
decl
mov
lcall
mov
ja
mov
mov
fsubl
xchg
push
popf
sub
push
xchg
sub
cmp
insb
ja
cwtl
mov
mov
or
mov
and
xchg
mov
jl
jp
cmp
pushf
mov
ss
xlat
mov
int3
fadd
lds
jbe
clc
sub
xchg
sub
mov
or
mov
lea
mov
pop
sub
andl
cmp
or
and
sbb
lret
pop
sub
mov
aam
mov
addb
mov
iret
mov
xor
fstl
adc
clc
es
fbld
into
leave
xchg
scas
mov
adc
mov
pop
fnstcw
add
stc
stos
xor
das
enter
cmpsb
sub
xor
mov
mov
scas
jae
xchg
xchg
inc
sbb
adcb
aaa
jg
icebp
and
dec
sub
das
cmp
mov
mov
std
and
ret
test
insb
adc
and
addl
adc
js
mov
loope
clc
out
xor
jne
test
push
data16
add
enter
imul
and
and
jg
jge
and
jl
push
lock
lahf
mov
push
jp
not
scas
and
adcl
mov
cmp
cmp
cli
insb
jge
cmpsb
out
pop
pavgw
push
andl
imulb
push
dec
mov
fwait
cmpl
pop
pop
inc
mov
xchg
aam
adc
jmp
sub
xchg
mov
loope
or
bound
nop
gs
pop
push
xchg
hlt
cmp
push
pop
arpl
or
mov
dec
ss
xor
mov
mov
aaa
aaa
push
or
jp
dec
mov
loop
pop
jns
mov
adc
out
fsubp
jg
pmulhw
in
xorl
adc
xlat
push
sub
mov
and
xchg
es
cli
outsb
std
cmpsb
shl
add
inc
aaa
test
mov
ret
and
hlt
pop
outsl
in
pop
push
repz
enter
sub
fs
or
in
mov
pop
arpl
and
scas
sub
sarl
fsubs
je
adc
aad
fcomps
cmpsl
pop
mov
cmpl
nop
ja
push
insb
pusha
dec
push
fldcw
jmp
pop
or
cmpb
orb
dec
movsb
push
xlat
xlat
sbb
das
inc
and
xor
mov
inc
dec
sub
test
dec
test
mov
xchg
cli
fcomp
sahf
sar
stos
subl
mov
mov
adc
das
test
add
sarl
mov
mov
out
int
sub
pop
cmp
out
xorb
xchg
popa
outsb
jl
adc
popa
cmc
sub
pop
mov
add
aas
das
add
push
add
cld
sbb
inc
mov
mov
or
das
sti
cmp
add
ja
xchg
sub
fists
xchg
cld
jle
xchg
sbb
stos
test
mov
dec
je
pop
aas
jns
cmpsl
or
mov
xchg
imul
sub
push
jbe
add
jnp
jno
dec
adc
and
mov
loopne
inc
jecxz
mov
adc
sub
bound
xchg
mov
lahf
ret
lods
pop
enter
and
imul
cwtl
test
xor
loop
ss
shlb
lods
and
add
ja
int
or
push
cli
mov
cmpsl
bound
leave
inc
adc
sbb
loop
cmpsb
in
dec
loop
lock
les
and
lods
test
cmpsl
mov
add
sbb
xor
jo
add
adc
mov
stos
fiadds
lods
adc
or
in
push
imul
adc
inc
ja
daa
jns
sarb
in
ret
cmp
lods
pop
data16
cmp
or
jecxz
mov
sahf
ja
xchg
inc
xchg
inc
dec
popf
dec
inc
es
jae
clc
cmp
test
adc
sbb
adc
ja
sahf
xor
fiaddl
pushf
mov
push
test
aam
push
push
sub
les
sbb
mov
sub
mov
out
add
push
or
cmpsb
inc
nop
push
out
stos
or
pop
add
pop
data16
test
sahf
push
arpl
add
xchg
jp
gs
mov
ficoml
je
mov
pusha
arpl
jno
or
adc
push
cltd
mov
movsb
sbb
and
test
cmp
sub
movsl
mov
nop
push
mov
xchg
fbld
cmpsl
arpl
inc
jo
insl
ss
cmc
adc
scas
movsl
bound
std
lret
mov
xchg
iret
mov
daa
fisubl
sub
push
shlb
inc
push
xor
inc
jecxz
ljmp
popf
and
jp
ja
pop
jmp
and
ss
mov
ss
rcrl
cmp
rclb
call
gs
jmp
sub
dec
xor
mov
sub
imul
loopne
mov
or
fwait
dec
sub
fbld
adc
mov
mov
adc
ret
ljmp
mov
rcll
das
xor
and
cmp
cmpsb
sarl
out
or
loope
loopne
cwtl
pop
jp
pop
leave
call
mov
jnp
ja
adc
xchg
jp
xchg
sub
add
cwtl
ja
sub
cltd
adc
gs
or
adc
pop
push
jbe
mov
int
aas
inc
xchg
lea
mov
add
mov
add
or
repnz
mov
popa
mov
loopne
scas
pop
push
jb
test
arpl
mov
movsl
adc
fiaddl
rol
cmp
test
pop
loop
fld
fidivrs
enter
xchg
in
lds
ret
lock
mov
leave
push
jp
in
fsts
sbb
cwtl
adc
popf
cmp
or
dec
cmc
sub
into
hlt
push
mov
add
daa
mov
sbbb
das
ljmp
addr16
sub
and
daa
dec
cmp
inc
sarl
andb
adc
scas
jno
je
sbb
pop
dec
loope
mov
loop
inc
in
fstpt
push
mov
pop
stos
xor
cmp
dec
dec
mov
cmp
add
add
out
mov
imul
roll
dec
mov
jecxz
int
mov
cmpsb
dec
call
orl
and
popa
das
lods
cmp
in
cmp
sti
mov
dec
jo
xchg
xchg
inc
xorl
inc
push
outsl
jecxz
ja
sub
mov
mov
xchg
sub
cmpsb
dec
ret
mov
cmc
pop
cmp
dec
out
or
dec
jbe
or
push
sub
push
call
jae
adcl
insb
fs
adc
adc
and
push
cmc
xchg
fnstsw
mov
xor
sbb
shlb
ss
mov
rolb
insb
jnp
mov
movsl
daa
shll
in
aam
xor
jmp
test
cmp
outsb
jnp
fdivr
mov
adc
out
insb
stc
inc
out
jae
push
mov
push
fcomip
ficompl
lahf
mov
iret
jmp
test
dec
ljmp
jge
cmp
pusha
dec
cmp
shll
mov
mov
dec
or
fwait
dec
inc
jle
insl
outsl
push
pop
xor
adc
mov
imulb
mov
xchg
jecxz
adc
je
sub
mov
enter
adc
add
inc
ljmp
popa
cmpsl
add
add
rcl
pop
aad
xchg
fsts
mov
lods
pop
mov
adc
ret
or
mov
xchg
mov
fldenv
cmp
or
ret
mov
add
xorb
lret
sbb
pop
jl
test
mov
addr16
sbb
and
int
adcl
scas
sub
adc
pop
mov
inc
outsb
jo
fwait
push
or
mov
mov
icebp
dec
pop
add
cmpsb
pop
insl
pop
pop
loop
dec
mov
testb
jae
push
movsl
adc
pop
sbb
imul
sbb
call
js
jmp
aaa
mov
sbb
fidivl
jb
rclb
pop
int3
sub
push
mov
add
test
or
jne
adc
push
jb
out
cld
xor
xchg
mov
pusha
cli
cmp
inc
and
or
adc
cmp
jae
icebp
adc
sub
lds
xchg
outsl
ret
xchg
int3
sub
adc
pop
mov
loop
divl
cmpsb
movsl
inc
mov
aam
xor
fwait
sti
mov
enter
mov
dec
mov
xor
mov
lahf
out
lahf
add
and
pop
inc
hlt
sbb
dec
dec
aas
mov
adc
ficompl
or
xor
sub
sub
mov
fldenv
xlat
ss
or
int
mov
pop
mov
cmp
out
push
adc
and
xor
clc
sub
test
mov
sub
cs
adc
insb
cs
mov
pop
lret
xor
and
mov
mov
inc
bound
stos
jp
jb
andb
mov
push
ret
das
and
gs
jnp
frstor
dec
jne
push
call
mov
clc
or
std
mov
mov
or
jge
push
lods
sarb
sbbl
lds
sub
or
sbb
mov
fsubr
aad
pop
cs
sar
jmp
loop
fwait
sub
ds
sub
lock
mov
dec
in
fucomp
sub
pushf
aam
xor
mov
xor
mov
fcmovbe
adcl
fnstsw
enter
push
sub
andl
and
leave
push
and
add
push
loop
xor
push
mov
ficomps
out
inc
push
aad
inc
pop
out
cmp
pop
mov
cs
clc
add
cmp
mov
orl
in
inc
shl
cmpsb
cmp
cmp
lods
dec
jle
sti
out
xor
bound
pop
sbb
fdivs
inc
add
mov
cmpsl
inc
shrb
push
sbb
push
cltd
fdivs
sbb
push
test
sub
jnp
in
sbb
sub
mov
adc
faddp
fwait
dec
add
and
clc
add
jmp
lds
mov
bound
lods
mov
fcompl
or
inc
fimull
nop
hlt
mov
pop
push
movsb
mov
popf
rcrl
mov
push
sub
icebp
stos
sub
out
xchg
shr
int3
cwtl
in
into
popf
stos
popf
cmp
repz
fwait
cmpsb
jo
xchg
sub
out
leave
cmp
lcall
jg
es
movsl
xchg
inc
bound
pushf
out
loope
scas
ficompl
jmp
xor
fldl
pop
inc
stos
out
insb
fwait
lret
mov
add
std
pusha
xchg
xor
add
or
sbb
jno
gs
adc
shrb
fbld
fdivrs
pop
mov
mov
sub
outsb
mov
xchg
push
push
mov
jg
mov
dec
add
lret
test
shrb
push
adc
cmp
xor
insb
repz
lcall
das
sbb
add
out
out
mov
mov
xchg
jbe
inc
sub
pextrw
aas
sarl
subl
xor
in
in
pop
pop
es
or
lock
mov
mov
cwtl
push
in
sbb
jb
lahf
push
inc
imul
cmc
mov
push
jmp
idivl
sbb
or
mov
aaa
int3
sub
scas
pop
xor
mov
test
nop
scas
xchg
test
and
scas
add
mov
mov
inc
ret
xchg
pop
adc
mov
pop
out
mov
jl
add
packssdw
add
push
mov
stos
inc
and
sub
orl
xor
mov
jle
dec
je
xchg
push
nop
add
xchg
jge
stc
rcrb
cmpsb
mov
adc
jns
lods
dec
dec
daa
mov
push
sti
push
arpl
repz
adc
adc
orl
pop
lret
lods
inc
dec
mov
insl
mov
sbb
stos
pushw
cmpl
xchg
xchg
fidivs
packsswb
stos
scas
shl
xlat
bound
cmp
aaa
into
push
fidivs
icebp
mov
and
movups
scas
jl
pusha
cld
push
inc
pop
xchg
shrb
jge
test
les
jl
adc
push
push
js,pt
cmovg
jo
jmp
inc
cmpsb
loop
push
icebp
adc
fs
or
mov
inc
mov
inc
in
cmpsl
je
leave
imul
sbb
loop
and
add
gs
sub
je
push
std
xchg
cmp
inc
insl
sti
dec
leave
mov
dec
push
mov
xchg
sub
orl
fucomp
sub
fists
or
xchg
mov
stc
loop
cmp
mov
or
xchg
mov
ret
out
adc
gs
fildl
jno
je
jg
aad
les
shr
pop
sbbb
sbb
jecxz
or
or
push
bound
sub
mov
or
and
cld
pop
xor
int3
cmc
fisubrl
loop
dec
cwtl
aas
jg
xlat
mov
loopne
or
lcall
jb
stc
inc
xchg
aam
inc
call
sahf
add
mov
loop
push
pop
shr
jle
sbb
fldenv
pop
cwtl
ror
dec
lock
lods
out
mov
sbb
sbb
stc
aas
shlb
ss
mov
jne
in
push
mov
icebp
ljmp
adc
or
lcall
std
push
fwait
mov
sti
es
gs
stc
jo
or
rol
sub
bound
pusha
inc
mov
out
cli
mov
mov
sbb
push
add
into
pop
lea
repnz
mov
push
sbb
or
shl
and
jbe
cmp
xchg
hlt
cld
fs
es
cli
popa
sbb
cmp
pop
jbe
repz
and
mov
lahf
je
or
loope
int
stc
sbb
mov
inc
dec
and
daa
subl
mov
pop
sahf
add
das
xchg
sahf
dec
pop
loopne
cwtl
into
xchg
cmp
dec
test
mov
orb
sbb
xchg
pop
push
cld
out
mov
addl
iret
jecxz
or
or
dec
scas
out
and
dec
mov
std
xchg
imul
jecxz
call
frstor
data16
repnz
xchg
aas
xchg
sub
mov
adc
je
pushf
sbb
ja
inc
insb
mov
xchg
and
aas
pop
in
test
ss
xlat
sbb
shrb
dec
mov
dec
jns
mov
adc
pop
scas
mov
cmp
repz
mov
stos
mov
ja
lods
and
lock
push
cmc
jo
ret
data16
pop
jmp
sub
scas
and
xchg
int3
cmp
bound
cmpsb
jae
jecxz
popa
jno
call
or
cwtl
mov
mov
orb
mov
pop
push
fistpl
push
rcr
sbb
xor
jge
jge
xor
jne
fdivs
hlt
shll
push
pop
outsb
xor
dec
int
and
jno
dec
jl
push
sub
mov
sti
push
std
shrb
xor
ret
shl
lock
sbb
or
lods
outsl
pop
sahf
mov
outsl
cmc
xchg
push
shrl
and
xchg
sbb
fldenv
fsubrl
in
push
jns
add
mov
xor
mov
movsb
pusha
adc
imul
sbb
adc
popf
fiadds
push
sti
inc
sub
gs
mov
loope
jmp
add
pop
mov
push
lcall
shll
and
sub
pop
push
cwtl
out
sbb
fs
stos
mov
mov
mov
or
dec
jno
cmp
xchg
mov
adc
push
adc
loope
dec
pminsw
jle
lods
je
pop
rclb
dec
orb
icebp
fwait
shlb
in
or
xchg
std
jp
jo
in
mov
mov
add
xchg
stos
test
push
pop
ja
lock
xchg
int
pop
outsb
mov
adc
sub
in
rcr
fmul
dec
jecxz
xchg
xchg
jl
push
pop
ret
mov
negb
xlat
push
push
popa
mov
push
jae
cmpsb
inc
gs
out
push
push
sub
mov
std
push
sbb
add
cmp
cmp
sub
xor
ficomps
bound
mov
inc
add
pop
dec
mov
les
lods
xchg
or
cmpsb
inc
mov
repz
nop
addr16
dec
das
enter
mov
and
mov
jge
xchg
jns
sbbb
arpl
fmull
cmc
out
ret
hlt
mov
sbb
scas
mov
ds
adc
imul
adc
mov
pop
int3
sahf
roll
gs
inc
jl
pusha
pop
or
mov
xor
faddl
fwait
push
mov
adc
gs
add
fs
push
loop
sahf
sbb
mov
and
call
xorl
push
movsb
inc
add
mov
outsb
mov
push
push
jno
cmp
push
inc
xor
inc
cmpsl
int3
jmp
dec
jmp
ficoml
xor
call
xchg
test
roll
imul
aas
iret
sahf
aaa
push
cmp
adc
in
fwait
cwtl
sub
mov
fisubs
or
adc
jmp
push
or
mov
xor
insb
cli
cmp
push
pop
jo
out
rep
mov
inc
lcall
cmp
scas
jae
xchg
in
je
xor
mov
cmpl
rcll
push
inc
daa
out
push
jmp
inc
pop
clc
xor
sbb
test
jmp
pop
or
push
xlat
scas
mov
pop
jno
gs
cld
ds
push
ja
push
push
popa
jl,pn
mov
in
ljmp
movsb
mov
inc
jns
test
ficompl
stos
cld
fisttpll
inc
ljmp
clc
pop
mov
lods
rclb
nop
std
aaa
pop
dec
rcl
jns
lock
hlt
xor
mov
repnz
sahf
out
xchg
jne
clc
mov
sbbb
push
inc
addr16
lret
dec
pop
stc
in
xor
add
or
ja
push
jae
arpl
jmp
cmp
pop
jae
adc
and
sub
loopne
lock
call
roll
enter
push
add
mov
divb
adc
clc
ljmp
sbb
sub
pop
or
xchg
fistps
addr16
cmp
add
test
pop
loope
jnp
pop
cmpsl
mov
pop
sbb
push
push
pop
mov
adc
cmp
push
negb
cld
sbb
add
sbb
mov
cmp
jg
and
inc
popf
pop
testb
test
xor
jle
movsb
popa
rcr
je
jb
push
dec
pop
and
sbb
jge
inc
cmp
jg
jne
in
pop
orl
js
mov
sbb
stc
repz
dec
or
and
xor
mov
dec
daa
pop
cmpsl
jecxz
sbb
jne
mov
test
clc
mov
rep
cmp
ljmp
ret
ljmp
or
jp
push
arpl
iret
in
movsb
fstpt
dec
add
sbb
imul
mov
insl
aaa
or
inc
mov
jge
add
and
imul
dec
cli
sub
pusha
hlt
out
or
mov
lods
push
add
aas
fwait
jnp
fbld
sub
mul
mov
cmp
ret
mov
gs
jae
das
sub
pushf
dec
mov
out
lock
lret
popa
imul
in
push
cmp
and
sbb
inc
mov
mov
popa
mov
ja
rorl
xlat
jae
mov
fs
loopne
and
pop
mov
test
sbb
test
and
testb
loope
xchg
je
cmp
jg
in
insl
sub
in
imul
scas
mov
nop
xor
fs
loopne,pt
mov
scas
lret
lds
repnz
mov
dec
push
mov
mov
std
cmp
push
fidivs
outsb
sti
cwtl
add
notb
or
xchg
cmp
push
or
inc
jg
mov
call
xchg
fisttpll
lds
xchg
int3
ret
sbb
xlat
dec
add
adc
pushl
inc
push
push
xchg
iret
filds
lret
into
pop
mov
sbbl
jmp
sar
xor
cmp
out
cmc
dec
mov
xor
imul
pop
es
cmpsl
add
std
movsb
push
std
stc
aas
ds
movsl
aaa
or
push
stc
mov
add
aad
gs
lods
arpl
out
in
test
popa
scas
mov
xchg
pusha
fdivs
outsl
cmp
enter
dec
pop
cmpsl
mov
lea
stos
cmp
mov
and
adc
dec
add
addr16
xchg
mov
pop
push
jl
push
add
push
scas
fistpll
loop
lret
adc
xchg
dec
pop
ret
add
loope
divb
xlat
dec
push
test
ss
cwtl
imul
clc
rorl
cmp
mov
sub
add
pop
pusha
jg
jp
xchg
dec
mov
inc
ja
and
ficoml
push
iret
pushf
and
out
dec
xor
jl
jnp
sub
stc
iret
adc
add
inc
lcall
jb
sub
dec
inc
nop
push
test
sbb
rcrb
adc
cld
push
push
jmp
pop
push
in
loope
jne
inc
mov
adc
pop
repz
inc
int3
inc
adc
cwtl
in
adc
fbstp
test
jno
daa
lahf
jp
fwait
sub
mov
sbb
imul
xor
sub
mov
sub
jl
xor
mov
in
or
sbbb
in
scas
jnp
fldt
adc
stos
mov
aas
lahf
sti
mov
mov
push
sub
xchg
jb
aam
leave
push
pop
cmc
stos
sub
sub
mov
jne
or
insl
or
test
push
push
sbb
xorl
out
push
outsl
xlat
movhps
push
test
cmc
adc
cmp
arpl
xchg
mov
insb
adc
lret
sbb
sub
cwtl
lods
cmp
mov
scas
lret
cmp
lcall
lret
mov
scas
pop
mov
dec
cs
test
push
jge
push
xlat
loopne
xor
mov
push
push
dec
mov
and
xor
mov
adc
jb
adc
sub
out
and
pop
lret
insb
shlb
or
dec
or
jg
jmp
or
fadd
xor
jl
gs
add
pop
scas
shr
cmp
push
test
cmp
fldt
mov
decb
mov
test
pop
icebp
sbb
jae
cmp
subb
mov
sbb
push
shrb
mov
or
rcll
cmp
lods
push
pop
lret
dec
inc
sub
sbb
add
fimuls
jge
fidivs
mov
sub
add
gs
push
mov
jbe
add
les
add
gs
andps
mov
test
pop
btr
push
ja
xlat
mov
stc
jmp
rorl
pop
cmpl
dec
or
arpl
xor
mov
cmc
inc
xchg
and
xor
mov
mov
jno
sbb
add
mov
cmpsb
and
push
pop
mov
cmp
pop
repnz
lds
and
aaa
mov
xor
divl
rcl
das
shll
add
sub
cld
repnz
xchg
aam
bound
jecxz
into
sbb
push
inc
push
pop
test
ljmp
ret
ret
add
jmp
outsl
push
cmp
lret
and
mov
lods
stos
mov
pop
push
loopne
aam
pop
xor
push
sub
jmp
jmp
aad
sbb
mov
push
icebp
jne
push
xchg
fiaddl
aad
sbb
lret
in
push
lret
test
ljmp
or
in
add
jp
mov
mov
lret
add
inc
or
es
push
sub
inc
jl
mov
xor
add
lods
adc
adc
lea
ficomps
sti
sub
cmp
sub
pop
scas
mov
adc
mov
js
mov
cltd
bound
pop
clc
mov
mov
jns
stos
mov
shll
adc
push
test
cmp
cltd
imul
popa
dec
shll
dec
xchg
cmp
iret
fiadds
in
imul
out
sbb
sub
jp
mov
dec
lcall
push
and
sarl
adc
rcl
rcrb
push
xchg
pop
rcrb
out
or
jae
xchg
mov
cwtl
clc
scas
cli
cmp
les
fnstsw
sub
fnstcw
shrl
mov
shrb
ss
mov
mov
mov
pop
inc
in
out
dec
test
pop
pop
adc
lds
pop
rorb
cmp
jnp
mov
push
sub
cvtps2pi
std
divl
int
cmp
pop
and
xchg
dec
inc
lods
mov
jnp
jb
push
lcall
fistps
cltd
stos
shl
out
push
orb
pop
dec
and
xlat
les
cs
loopne
frstor
add
and
imul
mov
or
mov
xchg
mov
lock
adc
cmpb
inc
sahf
xchg
aad
cltd
arpl
dec
mov
rolb
in
mov
out
shll
xor
sbb
lret
sbbl
push
mov
out
mov
adc
lock
inc
mov
mov
push
movsb
xchg
rorl
push
adc
mov
cltd
sbbl
adc
enter
fwait
xchg
pop
ja
shrb
xor
adc
cwtl
loop
sbb
adc
sarb
adc
scas
adc
das
insb
mov
out
pop
loopne
lcall
iret
push
mov
pop
adc
dec
xchg
push
dec
jb
idivb
cmp
fadds
mov
fsts
lret
ret
pop
nop
stos
ret
xchg
mov
mov
mov
lret
mov
push
out
paddsb
enter
jno
jnp
jns
sub
fsts
sbb
mov
lea
and
je
dec
leave
inc
lods
out
pop
mov
pushf
mov
lret
pop
mov
mov
cmp
sbb
add
jge
aas
jnp
jecxz
fst
inc
movsl
jbe
aas
popf
add
cmp
imul
sarb
std
push
push
xchg
xchg
shl
cmp
push
bound
cltd
sbb
shlb
mov
fwait
pusha
dec
sub
daa
add
or
repz
lret
fistpl
mov
jns
mov
in
add
xor
jmp
push
lret
addl
lea
mov
popf
and
inc
push
pop
sub
xchg
test
pusha
cwtl
pmuludq
cs
inc
shll
mov
mov
cmc
mov
dec
jmp
pop
popl
je
xchg
mov
cs
inc
cli
mov
cmc
out
sbb
hlt
lods
or
test
in
test
mov
pusha
or
mov
inc
mov
lret
ss
scas
ljmp
adcl
imul
in
jmp
mov
sub
rcll
pop
or
pushf
sahf
inc
aaa
mov
lea
mov
ss
leave
test
hlt
movsl
scas
inc
xor
leave
lea
push
add
or
das
jmp
stc
dec
xor
add
fldl
test
shlb
movsl
out
jmp
push
jp
ss
scas
jecxz
add
add
in
xchg
add
leave
pop
xchg
dec
jp
mov
outsb
mov
xchg
and
mov
or
in
sbb
inc
push
inc
mov
and
cmp
inc
stos
mov
sbb
aad
xchg
jle
int
jmp
jge
add
mov
xor
sbb
adcb
lds
push
cmp
mov
lcall
stos
mov
mov
insl
rol
es
cmpsl
or
clc
scas
pop
cwtl
stc
and
jb
inc
inc
sub
ret
outsb
lock
jns
sub
sbbb
in
mov
mov
sahf
lock
out
ret
cmp
mov
dec
and
fwait
pop
loopne
add
adc
cmp
mov
mov
sbb
mov
shlb
xchg
cli
lods
into
test
popa
mov
ds
ds
icebp
cltd
out
xlat
pop
mov
ret
or
jl
push
out
cs
int3
sti
dec
xchg
push
sbb
ret
jg
mov
or
bnd
in
mov
sti
and
push
pop
pop
popa
in
out
shl
mov
pop
xchg
push
fnstenv
js
rolb
or
pop
jns
enter
sbb
or
mov
xchg
mov
jne
and
mov
inc
pop
inc
mov
mov
inc
fisttpll
std
cwtl
mov
movsb
inc
push
xlat
int
shr
dec
fsubrs
enter
inc
lcall
mov
test
aas
pushf
in
jbe
test
das
scas
and
adc
out
mov
push
scas
std
bound
push
push
pop
dec
inc
jge
sbb
lahf
jmp
cltd
sub
mov
divl
pop
ljmp
mull
ss
mov
xchg
test
loop
das
call
sbb
not
mov
flds
sub
cld
shll
push
idivb
cltd
cmp
rcrb
xchg
cmp
clc
or
cmp
add
syscall
cmp
cmp
nop
int3
roll
mov
pop
push
sub
out
cmpsb
fsqrt
xchg
iret
iret
addr16
and
rcrb
dec
orb
xlat
mov
or
and
mov
js
js
movsl
push
mov
lret
push
js
scas
ret
xor
pushf
jbe
or
add
std
adc
sub
int3
lods
jmp
fildl
lea
rcl
popf
rcrl
or
push
scas
push
inc
sbb
push
cwtl
vcomisd
mov
inc
inc
sub
scas
mov
fwait
cmp
nop
adc
hlt
push
mov
push
jae
gs
jns
dec
inc
add
test
jb
or
out
or
fcmovu
dec
sbb
jl
scas
jbe
cltd
bound
xchg
push
fisubs
mov
inc
mov
jb
sbb
add
insl
sahf
in
push
mov
jne
pop
sbb
les
sub
xchg
mov
movsl
xchg
int
pop
shl
push
hlt
ret
out
and
or
cmp
in
cmp
roll
adcb
push
jge
stos
aas
cli
add
add
ss
pop
std
lods
push
dec
lods
test
xchg
push
sub
fucomp
jg
mov
mov
jg
in
sub
das
mov
lahf
cld
pop
loope,pn
jmp
lahf
mov
or
scas
sub
xlat
cmp
xor
fiaddl
push
clc
rcrl
inc
push
mov
cltd
ja
repz
inc
sub
inc
inc
cmc
xor
gs
pop
int3
dec
popa
xchg
js
dec
xor
sbb
mov
orl
sahf
sbb
dec
addr16
mov
das
imul
rorw
cmpsb
cltd
insl
icebp
pop
js
aad
xor
pushf
mov
cli
xor
fisttps
popa
jnp
enter
cmp
cmpsb
ficoml
push
jmp
inc
not
mov
add
sbb
mov
lcall
pop
push
sub
cmpsl
dec
dec
mov
jl
lret
ja
andb
jnp
sub
push
clc
sbb
sub
adc
add
rol
mov
ret
loop
cmp
aad
add
loop
dec
or
fadds
fsubrl
pop
ljmp
xor
mov
sbb
cs
loope
sub
mov
gs
test
lahf
mov
or
call
xchg
repnz
mov
repnz
inc
or
jge
in
mov
es
mov
jb
sub
fstps
mov
xchg
sti
push
cwtd
in
or
dec
inc
aam
inc
mov
jecxz
in
ret
enter
loopne
pop
add
out
repz
add
sbb
xchg
sbb
pop
or
sti
mov
int
jmp
lods
fildll
gs
shlb
outsb
pop
iret
into
xchg
sar
in
rcll
es
cmp
dec
lahf
sub
xor
xor
lcall
lret
dec
dec
call
jae
sub
mov
push
sbb
or
xor
cltd
inc
mov
adc
add
mov
sbb
fmuls
sbb
sbb
add
sub
stc
jae
add
pop
xor
mov
or
lret
xor
xchg
mov
mov
dec
mov
dec
dec
lret
push
das
jae
xor
hlt
xlat
pusha
pop
testl
push
xlat
and
test
jno
xor
cs
add
mov
clc
cld
adc
sar
mov
rcll
pop
mov
and
push
fstpl
jnp
sbb
daa
xchg
pop
enter
pop
xchg
or
push
fnstsw
xchg
xchg
cltd
cmp
mov
leave
lret
cmp
insb
sub
mov
add
in
push
add
cmc
test
mov
test
xchg
mov
pop
add
dec
jo
std
or
dec
or
fistps
mov
loop
dec
jecxz
adcb
sbb
push
and
add
or
dec
iret
sbb
add
inc
pop
dec
fldz
and
jno
adc
movl
mov
fldl
ja
jae
push
int
in
popf
insb
xchg
pushf
mov
adc
inc
xor
and
inc
int
add
loopne
inc
daa
dec
xlat
pop
shll
push
jno
cmp
xchg
pop
xchg
sbb
sbb
and
outsl
mov
icebp
aam
test
mov
fwait
shll
adc
xchg
aam
sub
sub
jle
stos
fstl
pushf
dec
adc
pop
sahf
or
int3
mov
mov
mov
and
mov
out
loope
push
fcompl
push
cmc
scas
das
pusha
inc
lar
dec
or
jnp
outsl
add
call
xor
mov
mov
xlat
or
xor
int3
mov
and
test
stos
out
mov
ljmp
nop
call
pop
gs
mov
lret
adc
ja
add
shrl
ret
sbb
call
call
lods
shrl
sbb
stos
into
cs
adc
pop
mov
jle
mov
dec
pop
xor
out
and
aam
lret
mov
in
lods
enter
push
sub
insl
sub
movsl
mov
out
add
pop
pop
shr
imul
lods
cltd
jg
rorl
mov
fldl
mov
pop
adcl
dec
mov
ljmp
xchg
jp
ds
mov
cld
mov
xchg
jbe
aam
into
dec
mov
fcoms
mov
in
push
negl
pop
packsswb
or
pop
inc
incb
mov
or
pop
gs
popa
jmp
inc
sbb
sub
sbb
jb
ss
in
mov
shrl
outsb
mov
fldcw
sub
adc
rcrb
xlat
sub
shll
aaa
pop
pop
mov
imul
movsb
pop
data16
pop
bound
mov
sti
lock
pop
pop
and
jg
dec
pop
in
xor
das
inc
js
push
inc
jmp
sbb
push
pop
not
xchg
push
lods
push
dec
rorl
add
push
xchg
cmpsb
aad
and
outsl
lret
inc
or
je
pop
mov
mov
test
adc
mov
cmp
mov
pop
xor
xchg
mov
mov
ljmp
push
xchg
lock
inc
stc
xor
jbe
sbb
jbe
xlat
dec
sub
xchg
sti
es
aas
push
int3
inc
and
mov
xchg
or
xchg
pop
xchg
push
in
sahf
cli
clc
shr
insb
inc
mov
test
dec
rcll
inc
sbb
int
lahf
and
add
add
mov
sub
jecxz
test
imul
push
mov
dec
mov
rolb
or
in
popa
xor
les
mov
and
enter
imul
jecxz
push
jns
std
std
sub
imul
add
loop
add
repz
inc
lahf
shrl
adc
decb
mov
push
and
xchg
cwtl
fmuls
sbb
dec
sbbb
shl
in
xor
aam
dec
or
lahf
add
mov
push
out
push
out
fwait
sahf
lock
lcall
aam
inc
fistpl
jl
or
mov
call
jb
jge
add
sbb
shll
xchg
jnp
clc
negl
dec
jmp
sub
xor
out
fstl
sets
leave
add
in
mov
movsb
movsb
sub
push
lahf
adc
jp
add
gs
mov
xor
mov
mov
xchg
fiadds
shl
xchg
xchg
aaa
mov
sbb
insb
rcll
sti
mov
cmp
dec
cmp
sbb
fisttps
dec
lret
pusha
cmp
pop
adc
mov
rorb
into
data16
mov
pop
inc
sbb
mov
fstpl
xchg
add
inc
mov
pop
jnp
sbb
in
jae
int3
repz
jb
in
and
cmp
ss
sbb
cmp
jge
scas
int
repnz
mov
aad
adc
xor
or
mov
xchg
js
aad
or
outsl
push
sub
js
mov
addr16
add
or
jae
push
mov
mov
mov
lret
test
jp
andl
fildll
idivb
loope
sub
and
clc
adc
push
lcall
ljmp
mov
repnz
lods
sbb
sub
mov
test
xor
xlat
lret
push
jmp
mov
les
repz
xchg
cmp
test
mov
pop
push
xor
push
mov
je
les
outsb
push
xchg
mov
or
pop
popfw
loopne
and
inc
enter
mull
sti
push
jecxz
insl
dec
ds
inc
jecxz
sarl
jbe
add
ljmp
add
and
jnp
xchg
or
add
mov
dec
fistpll
bound
and
lahf
xor
dec
dec
inc
lods
dec
jl
cli
loop
mov
fnsave
movsl
cmp
sbb
jo
adc
dec
adc
push
faddl
iret
xchg
cltd
insb
out
loope
aad
int3
push
xor
lods
inc
and
sbb
or
rorl
add
add
idiv
jae
sbb
into
mov
jle
aad
in
sub
outsb
sub
xor
fstpt
repz
fldenv
sub
jae
add
mov
pop
shl
adc
add
push
add
aaa
aad
iret
pushf
sub
adc
sti
pop
push
stos
addr16
pop
inc
xor
lock
js
push
in
or
xor
int
stos
into
fptan
fimull
jg
push
jecxz
int3
sub
test
sbb
sbb
jle
lcall
add
ret
dec
cli
mov
adc
mov
mov
cli
pop
icebp
push
sbb
cmpsb
sbb
cwtl
sti
lret
into
adc
repz
dec
inc
push
cmp
lds
ret
jns
adc
dec
jmp
cmp
lret
or
cmp
mov
loop
test
gs
repz
mov
mov
cmp
movsl
or
xchg
nop
xor
add
mov
pop
mov
xchg
mov
ja
sub
or
dec
les
in
dec
clc
mov
add
push
push
xchg
out
dec
xchg
or
call
mov
adcl
dec
lret
and
pop
jmp
xor
mov
lea
cmp
scas
and
popfw
xor
push
jmp
mov
xor
push
incl
jo
mov
pop
jmp
xor
fstp
push
jmp
mov
popf
xchg
lods
call
es
sbb
ret
add
xchg
gs
test
sahf
rorl
divb
push
stc
outsl
hlt
int3
aaa
mov
imul
mov
xor
sbb
and
loop
push
movsb
mov
mov
aam
push
add
mov
adc
stos
jno
pop
sub
les
movsb
fdivs
mov
movsb
mov
leave
repnz
pop
cli
addr16
mov
push
leave
push
mov
orb
mov
sbb
sbb
and
fisubl
add
dec
aad
cmp
dec
mov
and
ljmp
mov
cmp
mov
push
jno
aaa
ljmp
imul
xor
sub
adc
imul
ljmp
call
rolb
cs
sarb
outsl
jmp
pop
and
outsl
pop
jmp
xchg
outsl
pushl
test
adc
xchg
in
mov
adc
dec
sti
dec
mov
outsl
cmp
jmp
cmp
xor
cld
adc
jbe
push
push
dec
sbb
in
cwtl
mov
shlb
icebp
xlat
fcoms
icebp
mov
clc
jl
adcl
dec
or
xor
mov
mov
pop
mov
stc
aam
jp
push
ret
lahf
scas
jmp
ret
out
shrl
mov
sarb
sbb
int3
test
and
and
cmp
int3
popa
ljmp
lcall
xchg
xor
test
and
push
or
loop
nop
rolb
and
dec
loope
push
scas
jmp
nop
stos
sub
cli
cwtl
orl
xchg
imulb
inc
lret
out
lods
in
push
aam
shll
add
adc
mov
mov
sub
cmpsb
mov
mov
add
divl
add
inc
dec
decb
cmp
repz
jo
cmp
jmp
add
pop
dec
popa
jno
enter
pop
lock
mov
rcrl
into
and
in
xlat
and
pop
aad
or
push
xchg
cmp
xor
and
loope
sub
sub
roll
insl
mov
imul
and
xchg
pop
jp
rorb
mov
pop
add
scas
sbb
xchg
lods
fwait
icebp
fildl
std
lods
mov
jmp
dec
mov
jnp
or
xchg
xor
in
icebp
pop
aas
out
sub
loopne
cmp
cmp
jp
push
rcrb
fsub
ljmp
or
add
dec
sbb
sbb
jno
pop
pop
push
cmp
insb
int3
or
xchg
xchg
pop
jl
sub
cs
mov
hlt
je
pusha
stos
rclb
and
jbe
and
push
jecxz
lcall
xor
outsb
dec
fsubrl
sti
test
repz
pmullw
call
jg
mov
push
push
jnp
aaa
xchg
sbb
and
sbb
es
sarb
gs
aam
aam
mov
mov
or
adc
add
jmp
lahf
or
stc
decl
xor
sbb
int3
mov
scas
aam
fsubrs
mov
jg
ss
ja
call
mov
outsl
inc
std
lret
into
mov
scas
dec
dec
adc
xor
nop
dec
xchg
int
aad
push
imul
mull
incb
daa
and
xlat
cmp
mov
jmp
adc
sbbl
inc
cld
popf
xor
in
ret
rorl
scas
stc
mov
mov
add
movsb
out
sbb
leave
add
inc
jl
and
cltd
cli
int3
mov
push
cmp
dec
arpl
insl
mov
cmpl
dec
insl
push
inc
mov
mov
ds
ja
sub
in
sahf
scas
sub
pop
lret
add
pextrw
add
sub
arpl
mov
out
xor
add
push
test
add
lods
scas
mov
add
clc
cwtl
sbbb
jle
mov
dec
adc
jecxz
mov
arpl
cmc
pop
nop
sub
push
incl
mov
mov
dec
or
stos
mov
dec
hlt
daa
cmc
cmp
push
pushf
je
adc
cltd
mov
adc
icebp
in
test
int3
push
pop
xchg
mov
cmpsl
pop
cld
roll
xchg
sahf
jge
lods
xor
or
nop
or
jl
test
icebp
lret
sub
cli
cltd
outsb
les
inc
rcr
popa
mov
mov
and
clc
mov
or
imul
and
int3
dec
lahf
scas
dec
imul
fstps
mov
ret
cltd
fisttpll
repnz
pop
cmpsl
stc
lret
bound
movsb
mov
test
push
push
inc
xchg
out
cld
dec
lds
sub
sarl
cmp
fnstcw
lcall
hlt
pop
aad
aam
xchg
out
in
lds
jmp
imul
int
inc
sub
xchg
call
push
adc
lret
popa
mov
and
sub
jb
pop
loope
enter
push
popf
xchg
mov
push
pop
mov
arpl
ret
inc
jnp
test
fadds
ret
sbb
mov
add
adc
sub
pop
pop
lods
popf
and
rcrb
mov
push
xor
iret
test
sahf
push
mov
outsb
fcoml
pop
cmp
pop
inc
pop
dec
adc
inc
lret
sbb
jecxz
fcompl
stos
jnp
clc
pop
iret
sbb
and
scas
lret
xchg
pop
imul
xchg
in
xor
sub
sub
shll
and
cli
orl
cmp
dec
popf
sbb
das
adc
mov
pop
cmp
sbb
mov
jb
ds
sbb
pusha
lret
shrb
fs
test
or
int3
push
aad
and
js
inc
repz
sbb
jecxz
mov
lret
dec
cmp
mov
inc
decb
out
jmp
divb
ret
xchg
inc
cld
jno
in
mov
lods
sbb
shlb
cwtl
cwtl
jmp
stos
aaa
jg
sbb
cltd
call
in
jl
xchg
xor
call
push
out
add
test
jmp
or
and
lahf
xor
in
rclb
inc
or
mov
insl
push
xorl
push
inc
jb
outsl
in
and
add
mov
push
mov
sbb
pop
icebp
jecxz
mov
loop
pop
rorl
rcrl
add
stos
jae
popa
add
js
sub
cmpsl
inc
sarl
pop
pop
mov
fcomip
das
insb
xchg
xchg
pop
jge
data16
pop
jp
popf
sbb
and
call
fwait
leave
andl
mov
decb
sub
cld
insl
es
insb
popa
jmp
cwtl
jns
add
and
push
adc
mov
cmp
scas
xchg
xchg
and
daa
add
cmp
popa
shl
in
mov
aas
rorb
dec
ftst
jmp
xor
in
fnstenv
and
frstor
leave
lds
xchg
aas
outsb
xor
dec
cmpsl
cmp
movsl
stos
out
shll
sbb
iret
sbb
mov
xchg
sbb
adc
mov
loop
mov
push
jne
in
inc
popa
mov
adc
or
fldt
std
mov
dec
aaa
outsb
add
ds
push
pop
cmp
pop
ds
rclb
mov
movsb
cmpsl
fisttps
cmpsb
dec
insl
jae
adc
repnz
cmp
gs
mov
xlat
sub
adc
mov
das
test
lods
push
cwtl
loope
adc
sub
popa
jge
jp
out
cltd
push
sarb
test
mov
adc
aad
xchg
sbb
into
mov
add
movl
enter
leave
xlat
or
jecxz
cli
jae
inc
sub
fstps
adc
add
popa
mov
js
adc
lea
inc
lret
mov
hlt
aas
addb
loop
push
lea
in
or
pop
fisubrs
mov
bound
add
pop
loop
insl
inc
jns
mov
pop
out
fs
enter
je
test
in
and
dec
jno
inc
jbe
mov
push
or
or
mov
in
fsubp
hlt
andl
inc
mov
repnz
fiaddl
hlt
pop
lods
aad
xchg
mov
bnd
adc
out
mov
jne
or
mov
sub
arpl
jo
cmpsb
call
push
ja
mov
pop
sub
cli
inc
xchg
lea
jo
test
pop
mov
sbb
test
xchg
repnz
aad
cmp
ret
push
sbb
dec
repz
sub
xor
lock
push
pop
sbb
icebp
les
inc
adc
lret
popa
or
mov
sub
ds
push
pop
hlt
fiadds
mov
cmp
add
in
cmp
cltd
fwait
jnp
call
fistpl
sub
int3
mov
fldl
xor
push
lret
mov
add
jmp
mov
add
jae
pop
sub
lahf
add
aas
cld
adc
and
mov
daa
leave
inc
xchg
sub
rorb
push
add
subl
cmp
ss
or
in
mov
lahf
pop
dec
stc
clc
imul
rclb
or
pop
or
xchg
xlat
movsl
dec
add
repnz
push
sub
sahf
pop
test
mov
add
jp
rclb
push
jno
xchg
jmp
outsl
sahf
push
dec
mov
rcll
jmp
int3
mov
and
adc
mov
data16
mov
jno
jno
xchg
jne
aad
xor
cli
inc
push
shrb
cwtl
push
xor
repnz
jo
xchg
xor
lods
lods
fildll
and
xorb
insl
add
in
and
nop
int3
jle
into
push
addr16
ljmp
mov
faddp
popa
add
rcrb
fstpl
adc
setge
leave
cld
mov
enter
or
pop
mov
dec
jnp
xchg
jg
das
subb
mov
dec
adc
lock
pop
neg
cltd
jae
nop
ret
movsb
mov
xchg
or
jl
loope
test
shll
mov
lods
clc
and
pop
incl
pop
mov
cmp
fiaddl
mov
pop
adc
repnz
bound
jge
adc
add
jmp
sbb
inc
cmp
fmull
mov
sahf
bound
and
sbb
mov
xlat
enter
inc
push
mov
sub
lea
rcll
dec
add
lods
fildl
or
idivb
lea
inc
popf
int
test
sbb
lcall
xchg
or
mov
aas
adc
jne
mov
ret
cltd
imul
test
xchg
dec
in
jno
sub
ror
int3
xor
jns
or
ja
fs
shl
mov
jl
ja
ret
test
stos
andb
pop
sub
sub
lret
addb
inc
mov
sti
mov
leave
or
imul
movsb
mov
cltd
adc
pop
das
sbb
jge
dec
cld
jl
inc
sub
cmp
xor
mov
clc
lods
loope
or
dec
out
mov
push
aam
dec
add
cmp
xor
das
out
aam
jp
jg
pop
inc
adc
xlat
or
mov
push
mov
lahf
xor
cltd
and
int3
daa
mov
jb
test
jmp
jne
in
test
scas
push
sti
imull
inc
mov
adc
les
loope
mov
dec
adc
das
dec
dec
cli
push
pop
and
or
sub
mov
push
into
inc
jnp
mov
push
call
out
enter
sub
jno
xchg
testl
lods
jle
ljmp
mov
jne
mov
or
out
test
movsl
mov
xchg
pusha
cmp
shll
pop
jle
push
fwait
inc
movsl
sti
push
in
fwait
hlt
mov
inc
bound
mov
or
es
pop
add
and
fwait
mov
and
pop
fcoml
pop
cmc
pop
cmp
gs
mov
movsb
mov
jge
clc
xchg
dec
sub
inc
stos
fsub
xchg
inc
add
mov
ret
adc
or
pushf
xlat
scas
fiaddl
hlt
push
ret
icebp
mov
outsb
repnz
aas
xorb
push
cld
mov
push
lret
scas
popf
cmp
adc
mov
rep
jmp
icebp
pushf
push
push
and
and
prefetcht2
push
outsb
or
les
shlb
in
ret
xchg
sbb
clc
gs
out
addr16
pop
shlb
inc
push
and
sbbb
in
push
mov
push
add
int
lcall
push
cmp
xchg
jg
mov
leave
dec
push
lahf
js
out
cmc
inc
mov
jno
add
sbb
and
fdivl
mov
pop
inc
mov
jmp
aad
popf
mov
imul
ja
insb
pushf
sar
lahf
inc
lock
adc
push
xlat
push
or
or
sbb
hlt
cmp
sub
ja
mov
or
pop
fs
mov
push
pop
jbe
into
lds
test
divb
repnz
iret
arpl
aad
cmp
dec
ja
xchg
loope
icebp
dec
mov
pop
mov
xchg
icebp
sub
jo
int
inc
iret
push
sbb
arpl
movsl
fadds
xlat
push
mov
icebp
shll
sub
fimull
add
cmp
jb
rclb
aam
pop
or
xor
jns
lahf
add
adc
rorl
sub
clc
sbb
mov
gs
pop
lods
repz
mov
shll
lret
inc
loopne
cmp
aad
or
lea
aam
push
int3
jmp
mov
xchg
sbb
jge
xchg
and
mov
outsb
fdivl
mov
jns
les
pop
push
das
addr16
adc
sbb
lea
xchg
dec
mov
sahf
addb
push
add
stos
mov
imul
jp
jo
loopne
rclb
aad
mov
fcomps
and
daa
test
je
ss
aaa
loope
ds
mov
call
mov
shrb
or
cld
mov
jge
dec
scas
pop
lea
stc
mov
xchg
in
mov
fs
adc
mov
fbld
mov
adc
adc
imul
jne
out
fldt
insl
in
lahf
cli
add
jecxz
sub
sahf
dec
out
jns
out
jmp
aaa
test
jp
jg
vpmacsdqh
hlt
mov
adc
mov
sbb
jle
scas
push
aaa
cmp
ret
aas
popl
jne
push
clc
cmp
fisttpll
pushf
fildll
mov
inc
mov
mov
js
and
dec
outsl
fidivl
movsb
jmp
ficompl
iret
scas
cmp
push
sub
mov
dec
int
push
testl
xchg
ror
adc
fs
dec
gs
and
adc
push
or
jge
aam
sub
sub
gs
inc
jno
push
mov
shr
fistl
clc
loopne
in
out
cmpsl
push
test
dec
push
shll
lret
in
test
mov
xchg
jae
shlb
aam
jge
adc
mov
cmp
stc
cld
sbb
or
push
lahf
inc
subl
jb
int3
mov
xor
mov
sub
adc
xor
xchg
adc
iret
mov
fcom
cwtl
push
inc
dec
jge
mov
nop
jbe
int
mov
mov
movsl
mov
cmp
shrb
jl
sub
cmpsl
loope
or
lods
ret
xchg
and
push
fld
cvtdq2ps
test
pop
xor
sbb
enter
or
and
loopne
fsubl
test
mov
notl
lods
jge
int3
pop
aad
ss
push
dec
sub
fidivl
or
jnp
dec
cmp
mov
mov
mov
mov
adc
addb
ret
cmp
ja
adc
pusha
and
shr
inc
sbb
adc
int
dec
lock
clc
mov
dec
jg
orl
pop
clc
rep
ret
jne
movsb
add
cltd
push
mov
shrl
jne
pop
hlt
and
pop
ljmp
andb
in
ret
es
push
add
es
mov
in
cmpsl
jg
xchg
mov
and
mov
loopne
jmp
dec
pop
inc
cld
fistps
stc
fcmove
inc
lret
bound
dec
mov
inc
cmp
pop
je
dec
pop
fcmovu
addl
mov
mov
inc
jge
ret
sahf
push
test
lds
cld
sti
inc
xor
sbb
adc
push
daa
xchg
das
jmp
sbb
cwtl
ljmp
js
lcall
xorb
movsb
or
cmp
sub
or
outsb
lods
push
mov
mov
repz
add
les
xor
sub
adc
push
cwtl
jne
lock
roll
into
insl
fimull
pushf
in
push
mov
mov
int3
lcall
adcl
inc
xchg
inc
mov
das
fcmovnu
test
in
sbb
mov
aad
mov
mov
cmpb
inc
int
push
sti
xchg
leave
fildl
je
push
xchg
sub
decl
in
ret
dec
sar
inc
cltd
out
mov
xchg
mov
bound
sbb
push
mov
test
aad
stos
pop
addb
add
cmp
mov
daa
stc
out
xor
mov
push
lret
adc
rorl
pop
inc
outsb
mov
leave
cmp
test
xchg
jg
in
sbb
in
adc
jl
jno
es
add
and
push
insb
pop
pop
cld
sbb
fs
pop
jbe
cmp
push
jbe
testl
inc
inc
pop
lret
nop
pop
or
jmp
aad
and
mov
scas
fadd
scas
cmpsl
push
loope
lods
push
scas
adc
out
jmp
lret
add
pop
ret
jmp
and
pop
jne
and
jp
ds
push
dec
lret
stc
sub
sub
mov
mov
cltd
inc
add
loopne
mov
fistl
fcompl
fcoml
fisttps
xchg
jl
in
ret
cmp
dec
inc
div
jne,pt
add
sbb
ror
add
call
xchg
adc
scas
and
xor
inc
push
cwtl
sub
sbb
das
pop
scas
scas
mov
dec
jne
xchg
sbb
add
sub
push
push
xor
leave
in
add
adc
and
sub
add
dec
jg
lds
cltd
mov
dec
loope
jg
mov
pop
xchg
push
cwtl
std
stc
aaa
lea
adc
add
pusha
scas
fstp
and
jp
outsb
mov
mov
icebp
dec
pop
in
mov
lock
in
sbbb
das
xor
inc
cltd
jb
sub
outsl
les
jg
inc
pop
cmp
fwait
aam
ds
pop
push
mov
addr16
push
mov
cmpl
iret
faddl
mov
push
inc
enterw
sub
push
sbb
cwtl
movl
lret
in
std
leave
les
aam
pop
mov
cltd
inc
xchg
push
jne
les
sub
outsl
mov
xchg
cmp
rol
fwait
shrb
mov
mov
addr16
adc
cld
faddl
sub
inc
je
pop
lea
inc
xor
lret
mov
or
mov
stos
stos
pusha
fldenv
insl
inc
inc
hlt
mov
cmp
fwait
arpl
mov
sarb
pop
or
mov
push
or
fs
pop
je
sub
mov
or
sub
mov
inc
call
out
cmp
mov
cmpl
mov
aam
dec
pop
loop
push
mov
mov
jg
push
loop
sbb
ret
or
pop
pop
stc
adc
cmpxchg
push
fildll
sti
ljmp
jmp
dec
movsl
call
mov
inc
ljmp
pop
stc
mov
and
xchg
jb
ds
das
push
and
int
into
xchg
xor
je
jbe
jnp
mov
inc
sarl
es
add
jg
adc
mov
into
sub
and
xchg
or
adc
mov
in
xor
dec
mov
jo
sbb
and
popf
add
ficompl
jge
xor
adc
nop
lods
jnp
xchg
test
fdivl
mov
nop/reserved
pand
loop
mov
bound
jne
mov
out
push
jp
mov
push
loope
fucomi
iret
ss
xchg
test
and
sub
adc
mov
push
fs
sub
int3
lcall
pop
add
imul
jno
repnz
arpl
cmpsb
into
les
pusha
fisttpl
cld
xchg
in
adc
scas
adc
push
mov
sub
lods
push
ljmp
shll
mov
add
mov
and
fwait
jne
shlb
sub
arpl
daa
in
into
aam
adc
and
ret
cmpsl
adc
jb
inc
xchg
dec
and
es
mov
add
popf
shr
cltd
test
fcmovne
enter
push
ret
sbb
loope
lcall
mov
xchg
out
jp
push
lods
sbb
cmpsl
mov
ret
inc
insb
push
stos
ret
push
mov
sarl
adc
xor
iret
or
inc
mov
leave
hlt
mov
push
xchg
pop
inc
adc
mov
dec
adc
imul
movb
push
outsb
leave
sti
pop
cltd
loopne
jge
mov
mul
sbb
std
loopne
insb
test
mov
or
lcall
dec
add
push
jb
push
inc
or
xchg
dec
testl
cmc
lock
in
pop
cmpb
mov
jne
aas
mov
cld
adc
ret
pushl
orl
inc
adc
lds
mov
mov
push
dec
cltd
aaa
clc
rol
lds
mov
mov
add
out
and
out
std
addl
xchg
outsl
rorl
fildll
gs
stc
sbb
insb
jae
pop
dec
push
sti
xchg
pop
cmp
push
dec
mov
setns
cmpsb
cmp
jmp
mov
addb
ret
je
jb
mov
into
clc
sbb
lds
imul
xchg
pop
mov
push
add
scas
daa
cmp
addr16
mov
adc
xchg
dec
mov
cmpsw
test
and
insb
dec
pop
stc
loop
bound
add
or
imul
add
pop
sub
add
cmpb
pop
xchg
mov
cmpsb
imul
inc
push
repnz
clc
hlt
out
xchg
push
inc
sub
cmpsb
sub
pop
addl
sub
push
jnp
fwait
iret
cltd
jo
rol
iret
pushf
jmp
cmpsb
scas
sbb
not
nop
cltd
sbb
add
out
xor
or
sbb
sbb
test
daa
cmp
clc
xor
mov
jl
add
cwtl
adc
shll
push
shlb
loope
or
scas
push
aam
in
jb
adc
push
sarl
mov
sub
jecxz
and
cmp
cmp
mov
xchg
inc
ss
xchg
scas
sub
add
cld
add
cmp
mov
mov
or
mov
push
xorl
outsb
jmp
jne
and
imul
mov
stc
xchg
mov
cs
and
sbb
mov
jno
adc
in
rcr
jnp
dec
mov
negl
int
jno
sub
xor
imul
dec
roll
push
aam
dec
xchg
stos
adc
add
inc
idivb
fisttpl
cli
fwait
mov
arpl
adc
mov
les
mov
pop
cmp
fbstp
lret
call
mov
cmp
mov
insb
out
mov
add
aaa
push
gs
xchg
call
jns
std
data16
dec
xchg
add
sbb
add
rcl
xchg
cmp
xlat
movsl
jbe
mov
dec
dec
nop
push
nop
and
shll
imul
icebp
mov
mov
or
xchg
movl
shrb
dec
pop
scas
dec
xor
mov
or
int3
das
inc
inc
dec
mov
push
in
jo
inc
xlat
adc
arpl
inc
fadd
add
lods
pushf
xor
mov
add
adcl
jne
mov
cmpsl
sub
jb
int3
xor
je
adc
scas
lods
cmp
icebp
xchg
sub
int3
lret
aaa
ds
xor
popf
iret
mov
jge
dec
and
jmp
int3
cmp
mov
xchg
xor
test
and
addr16
xor
jne
loope
mov
push
cmpsb
xor
jne
xchg
lods
loope
dec
pop
or
xor
xor
call
call
subb
in
mov
add
fwait
or
test
xchg
in
push
add
cld
scas
mov
xor
popa
jge
out
in
mov
jmp
in
rcrb
jae
je
adc
outsb
mov
std
call
inc
and
js
je
stc
xor
cmp
fwait
cltd
mov
lods
mov
test
push
in
cmpsl
mov
and
in
out
xor
inc
out
xchg
in
xorb
jp
sub
je
add
out
data16
pusha
mov
in
stos
out
stc
cmp
call
enter
hlt
fsubrs
sub
insb
lret
into
dec
xor
xor
mov
in
cmp
clc
int
in
mov
add
pushf
dec
xchg
and
jmp
push
add
inc
inc
shrb
adc
aam
adcb
mov
subl
mov
js
inc
sub
daa
push
or
cwtl
xchg
in
sbb
xchg
shl
xchg
dec
mov
ss
dec
nop
jno
aam
shl
stos
dec
fstl
sbb
or
cli
jbe
arpl
xor
dec
inc
lods
outsb
inc
rorb
rcrl
adc
xchg
mov
dec
test
scas
xlat
loop
rcrl
add
xchg
xchg
stos
aas
pop
lods
inc
pop
loope
das
movsl
xchg
or
cmp
mov
lahf
rsqrtps
loopne
xchg
cmpsb
xor
cmpsb
fildl
out
sub
fdecstp
jo
mov
adcl
mov
rorb
dec
mov
xchg
dec
es
out
xchg
in
cmpsb
fistpll
sub
stos
xlat
add
icebp
std
adc
hlt
inc
lea
sbb
adc
leave
jmp
shrb
cltd
lret
jae
or
jle
pop
cmpsl
xchg
loop
pop
mov
push
fisttpll
mov
mov
aam
je
pop
xchg
int
divb
sub
adc
cmp
pop
fistps
fsub
sub
fimull
add
and
sbb
shlb
and
insl
lods
pushl
mov
mov
movsb
push
cwtl
in
and
pop
add
fs
adc
sarb
lret
dec
cs
out
inc
mov
pop
mov
int
xor
mov
mov
mov
loope
std
jecxz
pop
rcrb
call
jp
xchg
sub
movsl
or
and
das
pushl
fisttps
inc
and
push
popf
push
in
pop
rorl
jae
sahf
or
fcomp
jbe
loopne
shll
and
lds
mov
cltd
adc
push
lods
jle
aam
lods
lods
jge
xor
inc
pop
repz
rcll
lds
jg
mov
fistpll
icebp
sahf
add
dec
jne
mov
cmpsb
das
xor
std
xchg
xor
mov
sub
adc
int3
sbb
dec
repz
mov
fucom
imul
lret
mov
outsb
push
pop
push
xchg
ja
cmp
int
push
scas
test
and
push
dec
imul
cmpsl
jg
inc
jae
xor
loope
pop
daa
es
or
pushl
xchg
push
mov
add
ret
inc
sub
mov
push
and
repz
aaa
xchg
aaa
insb
push
mov
std
rol
in
stos
cmp
outsl
xor
inc
rcl
imul
mov
leave
cmp
xchg
push
adc
push
dec
or
push
cs
adc
stos
add
cmpsl
cmp
iret
jns
imul
imul
icebp
sti
sub
and
pop
pop
cmp
inc
mov
mov
daa
stos
cld
mov
in
inc
sbb
jg
dec
or
mov
xchg
or
rsm
out
popa
inc
lahf
adc
lods
add
pop
inc
fisttpll
push
sbb
lcall
sub
xchg
iret
xchg
loope
into
mov
stc
adc
jae
loope
je
push
or
pop
jae
pop
out
and
inc
std
cmp
cli
adc
in
rorb
mov
fsts
pusha
aad
mov
or
push
and
movsl
bound
mov
mov
sub
lods
pop
imul
dec
dec
clc
add
loope
adc
dec
lret
cbtw
clc
cli
roll
mov
in
and
inc
mov
xor
inc
shr
xor
cmp
sarl
into
pop
dec
enter
adc
pop
repnz
xchg
and
lea
mov
cmp
fs
pop
sti
jns
or
ret
lcall
into
sub
jmp
mov
jb
mov
dec
cmpsb
sbb
rclb
inc
dec
add
cmp
cltd
xor
xor
pop
and
cmp
adc
scas
pop
xchg
fimull
pop
sub
in
sub
push
inc
mov
hlt
into
push
cmp
xchg
inc
lcall
mov
adc
push
jno
movsl
dec
inc
shrl
inc
push
mov
push
pushf
sbb
or
incb
jecxz
cwtl
jae
pushf
add
into
sbb
lods
pop
les
xchg
fsubrp
adc
lret
nop
imul
jb
or
push
stos
pop
mov
dec
cmp
xorl
mov
fdivrl
push
jmp
lcall
and
inc
mov
sub
js
insl
arpl
xor
aad
mov
pusha
or
into
popf
pop
cld
xchg
std
push
jecxz
inc
test
sub
jp
and
xor
cmp
insb
in
cwtl
inc
add
scas
lods
cld
int3
icebp
dec
subb
into
pop
pop
psubq
test
mov
loope
loopne
test
cmpsl
xchg
loop
mov
js
mov
shll
push
outsb
xor
sbb
test
jp
sbb
jl
fdivrs
mov
xor
aad
imul
mov
inc
cli
push
push
cltd
fwait
or
push
jo
inc
fists
push
test
mov
cmp
test
test
in
test
jne
mov
mov
push
or
in
mov
pop
loopne
xchg
sbb
inc
mov
and
gs
jl
test
mov
rcr
mov
inc
call
push
cmpb
lahf
mov
out
cld
mov
in
cld
xchg
dec
pop
in
popa
sbb
arpl
cmp
mov
pop
jb
jno
add
adc
rcl
pop
sub
sbb
and
daa
orb
das
call
psraw
push
dec
lret
jb
imulb
inc
bound
imul
mov
aaa
movsl
jmp
pop
sbb
in
sbb
xor
into
mov
ret
lret
dec
xchg
aad
xor
jmp
jns
mov
aam
inc
loopne
inc
xor
xor
lret
cmp
push
adcb
push
or
xchg
jns
adc
dec
loopne
add
inc
mov
test
sub
jbe
out
jnp
push
ja,pn
movsb
or
call
cmp
cmp
lret
cmp
shlb
outsb
cmp
movsb
add
dec
mov
pop
add
cli
pop
cltd
ficomps
pop
mov
mov
shlb
xor
push
dec
mov
dec
dec
or
jne
mov
and
mov
xor
jnp
int3
adc
and
ret
mov
nop
in
mov
sub
add
push
test
punpckhwd
pushf
push
sub
xchg
xor
push
notb
cmp
sub
dec
inc
sti
clc
mull
push
sbb
pop
rorl
les
lods
mov
je
fdiv
jle
imul
ss
lods
das
sbb
in
push
mull
push
push
jg
lea
lahf
test
adc
push
orl
add
stc
fwait
dec
dec
ss
das
in
add
add
xor
adc
add
pop
cmp
jg
jmp
xor
push
fdivrp
push
push
push
push
fsubr
mov
cli
pop
in
jae
pop
subb
push
dec
out
inc
add
jge
shll
idivl
inc
mov
adc
insl
dec
xchg
pop
in
mov
mov
das
dec
or
mov
sub
pop
push
imul
xchg
lds
mov
or
mov
je
pushf
cmp
nop
mov
lahf
add
or
and
inc
pop
cmp
cmp
and
xchg
popf
sub
dec
outsl
jnp
stos
xor
lret
jg
mov
pop
mov
sbb
mov
cmp
sbb
pop
add
shll
clc
lock
inc
pop
cmpl
cli
cwtl
idivl
lcall
fcoml
fsubl
xor
faddl
xchg
or
je
lahf
js
jne
std
or
lahf
xchg
cmp
push
fadds
push
jl
nop
cmc
cld
cmpsl
push
push
addr16
and
mov
testb
jns
pop
jp
outsl
adc
sbb
xlat
sbb
xchg
inc
aas
fldt
add
out
pop
jb
inc
or
adc
lahf
and
hlt
pusha
ja
xor
inc
dec
cld
push
add
addr16
inc
sbb
nop
sti
into
test
push
stos
and
mov
nop
into
mov
roll
push
clc
mov
and
repz
pop
aaa
test
and
loop
jno
test
push
aam
fsub
hlt
mov
inc
jecxz
popf
in
fdivrl
loopne
ds
cld
ret
cltd
mull
fsubs
pop
xor
or
and
sub
push
fcmovbe
or
pop
pusha
mov
xlat
shlb
faddp
fnstsw
xchg
jo
or
and
xor
sti
pop
mov
push
sub
insb
out
mov
out
andb
add
mov
dec
aaa
cmpsb
jle
dec
add
cmp
mov
push
push
sub
sub
and
negb
fidivs
in
iret
jns
mov
cmpsb
fldl
cltd
jge
loopne
and
movsb
pop
movsl
loop
test
dec
js
sub
sub
sbb
dec
push
jl
push
xor
out
xor
or
rcrl
push
lods
in
cmpl
insb
jns
stos
mov
sbb
jmp
leave
std
popf
or
loop
or
mov
dec
push
jl
mov
mov
insl
cmp
inc
cmp
test
rorl
or
add
dec
popa
and
xchg
push
cltd
dec
enter
in
sahf
jmp
dec
xchg
cmc
xor
lods
in
inc
push
adc
sub
les
push
sahf
or
mov
inc
mov
push
dec
dec
adc
adc
mov
sub
push
xlat
or
int3
push
mov
mov
add
lret
ja
repnz
dec
xlat
jnp
lcall
inc
rcl
inc
mov
std
inc
mov
inc
or
shl
sbb
mov
add
mov
push
lea
adc
pop
jecxz
sub
aad
inc
sbb
iret
or
out
bound
xchg
mov
sahf
add
lahf
icebp
mov
push
das
loope
sbbb
lcall
adc
jo
sub
test
mov
dec
loopne
and
add
dec
icebp
popa
jle
cmp
cmp
scas
mov
aam
hlt
xor
test
pop
jge
fstps
dec
sub
jno,pt
pop
mov
and
add
or
rcr
mov
push
xor
int
xchg
int
mov
or
cmp
xchg
lods
loope
mov
mov
mov
aaa
add
gs
xchg
cld
out
ret
imul
mov
and
add
xor
sub
sti
xchg
sub
or
xor
push
stos
je
pop
std
mov
fsubrs
inc
inc
mov
jns
test
aas
mov
mov
jge
aas
xor
jecxz
mov
cld
xor
sub
jge
pusha
push
jmp
jb
or
jo
lock
xor
or
out
lcall
cmp
add
mov
in
xlat
gs
lock
sbb
pop
adc
mov
dec
cmpsw
xor
dec
or
fcomps
adc
js
js
sub
jbe
cmpsl
sahf
pop
shrb
inc
push
shlb
loope
inc
mov
mov
jecxz
call
xor
arpl
enter
mov
cmp
or
into
sti
dec
dec
sub
mfence
leave
dec
and
lock
inc
sbb
xchg
mov
test
outsb
int3
xchg
and
or
xorl
std
popa
ja
jmp
pop
pop
decb
ljmp
jae
loop
inc
inc
mov
lods
xor
arpl
mov
popf
xchg
jne,pn
imul
insl
loope
outsb
jo
popa
and
lock
push
lods
lahf
cli
movd
repnz
pop
cmpsl
in
test
jmp
repnz
sar
cmp
dec
push
arpl
dec
sub
pop
xchg
jns
jo
adc
jo,pt
cltd
xor
jp
cmp
js
ljmp
pop
jo
out
sahf
and
jb
dec
out
lret
stos
and
xchg
data16
pop
mov
adc
jnp,pn
sub
add
inc
lret
cmp
dec
add
ds
push
imul
imul
imull
or
pop
inc
inc
jmp
mov
arpl
ss
mov
punpckldq
loopne
icebp
mov
aam
pushf
cmp
daa
lcall
push
xlat
popa
push
inc
and
and
das
into
and
rorb
int
sbb
sub
stos
jp
js
mov
xor
xor
cs
xchg
adc
fsubrp
pusha
jb
push
push
adc
xchg
pop
aad
repnz
cmp
or
inc
push
xor
out
jl
dec
or
outsb
pushf
mov
scas
sbb
mov
shl
arpl
xchg
push
or
out
pusha
mov
movsl
and
jl
jb
lcall
lds
lea
pop
dec
rcll
mov
aad
push
fidivs
outsl
jge
adc
jae
outsb
cwtl
aas
sub
lods
push
out
push
pop
aam
xor
and
pxor
or
movsb
push
cmpsl
cmp
inc
push
addr16
test
out
out
add
push
lcall
shrl
rcrl
mov
in
cli
push
mov
decl
mov
ja
fimuls
pop
jg
dec
imul
test
in
jecxz
inc
aam
xorl
imul
imul
mov
dec
divl
lret
cwtl
nop
or
ljmp
push
xchg
pusha
lods
adc
int3
pop
outsb
jecxz
mov
nop
shl
sbb
fists
pop
in
dec
in
pop
cmp
arpl
aam
out
jns
sbb
das
scas
jecxz
cmpsl
ret
or
xchg
stc
mov
into
shl
pop
cs
sbb
pop
stos
dec
mov
sbb
lea
mov
leave
and
and
movsl
add
inc
in
and
dec
sub
lret
cmp
and
or
jg
pop
filds
mov
and
or
dec
cwtl
pop
jmp
call
cmp
lods
or
ss
push
popa
dec
pop
push
or
test
out
pop
out
sub
test
iret
cwtl
scas
xchg
fisttpll
das
mov
push
sub
xorl
out
scas
outsb
int3
mov
push
loop
mov
fildll
lock
or
stos
mov
mov
jne
pop
or
dec
inc
stos
sub
jo
pop
out
push
call
push
lret
lds
rcrb
xchg
out
mov
pop
stos
stc
or
sub
add
push
xor
js
jg
stos
xor
cltd
mov
mov
nop
jl
mov
std
aam
mov
outsl
adc
sahf
inc
pop
jne
push
mov
das
mov
xchg
cmp
cmpsl
cmpsl
inc
loop
add
ds
mov
es
addr16
mov
push
xor
jg
xchg
loop
rcll
jecxz
cli
enter
roll
jge
xchg
add
push
cmp
mov
fs
cld
aad
xchg
adc
push
jp
or
and
test
cmpsl
or
pop
insb
jle
lcall
lock
adc
roll
jle
popf
fadds
mov
cld
push
daa
leave
inc
das
jnp
cli
cwtl
jne
outsl
leave
sbb
pop
in
stc
aad
aaa
xchg
fistpl
inc
es
and
lret
cmp
cmp
cmp
and
hlt
fs
iret
stc
aas
mulb
and
mov
pop
add
jns
add
mov
outsl
test
sahf
fucomip
call
das
mov
jg
jecxz
je
mov
mov
fnsave
shlb
xchg
jmp
pushf
enter
in
je
xor
std
push
cmc
fmuls
dec
cmp
pushf
cltd
xor
adc
fstl
jecxz
test
inc
push
xchg
xchg
xchg
mov
out
icebp
cmpsb
dec
rcr
cmp
dec
lds
jl
repnz
xchg
cld
icebp
lock
mov
mov
aas
loopne
neg
stc
arpl
ret
inc
adcl
bound
mov
pushf
les
adc
repz
pop
je
sbb
rorl
or
lret
fisubrl
mov
pop
insb
inc
lret
inc
cmp
pop
mov
mov
je
inc
test
gs
enter
std
sub
or
mov
sti
push
mov
xor
pop
sbb
dec
xor
orb
das
repnz
repnz
jno
insb
xchg
sub
mov
rorb
pop
lods
jmp
in
pop
mov
cmpb
adc
xor
fstpl
clc
add
lahf
arpl
enter
cmc
insl
les
push
inc
add
inc
mov
push
cmpsb
push
sub
dec
daa
clc
arpl
pop
mov
pop
adc
jno
pop
insl
inc
les
pop
push
scas
and
xchg
popf
and
aas
into
clc
dec
dec
aaa
xor
sbb
jno
cwtl
dec
mov
push
xor
decb
popl
adc
mov
popf
dec
test
movsb
fsubs
mov
push
cmpb
fucom
daa
xchg
jbe
sbb
imul
and
mov
aad
cmp
mov
call
ret
lcall
inc
pusha
cld
jns
mov
xor
mov
dec
xor
or
jns
faddl
and
scas
int
jne
mov
adc
icebp
jnp
jns
mov
fildll
mov
stos
sub
mov
and
cli
xchg
dec
aad
outsb
test
xchg
out
popf
xor
add
inc
dec
or
fnstsw
mov
cmp
shlb
sub
ds
std
jmp
adcb
add
movsb
bound
dec
test
aam
mov
xchg
sarb
inc
pop
dec
sbb
int3
repnz
and
dec
popl
ficomps
cmp
fistpll
dec
jle
add
jb
roll
mov
aad
inc
shlb
jp
stos
test
gs
jg
out
sahf
std
mov
mov
popa
push
inc
lret
cmp
cmc
sub
xor
pop
in
or
fldl
push
mov
push
push
push
dec
jnp
insb
inc
mov
dec
add
pop
pop
and
mov
rorb
cmp
pop
push
push
jbe
arpl
sbb
and
aaa
outsb
mov
and
faddl
xchg
ret
inc
test
les
dec
scas
jmp
int
sarl
sarl
mov
sub
addr16
jle
ds
push
jmp
push
push
pop
mov
mov
test
fmuls
imul
mov
movsb
cmp
aad
cmp
or
je
sbb
and
aad
jge
lret
popf
mov
jp
sbb
test
loopne
es
in
and
mov
je
cmc
les
and
sbb
ret
xor
test
sbb
cmpsb
in
fsubrs
add
into
stos
mov
mov
sbb
inc
sub
push
divl
push
inc
mov
jne
adc
push
rorb
add
imul
dec
xchg
pusha
inc
es
cwtl
stos
ret
sti
loop
jle
xorl
jns
test
ja
pop
cmp
pop
add
mov
dec
test
inc
adc
jmp
and
shrw
addr16
cli
xchg
movsb
add
je
and
xor
adc
dec
sbb
adc
dec
sub
xchg
or
imul
cmp
lret
rcrb
ljmp
leave
pop
iret
loopne
sti
add
popa
mov
das
push
sti
and
je
lea
stos
in
call
xchg
jmp
and
mov
orl
pusha
out
incl
jno
imul
or
lds
popf
inc
xor
les
pop
inc
inc
sub
js
enter
stos
aas
mov
sbb
pushf
adc
xor
cmpsb
push
push
jl
loope
mov
ret
movsb
mov
inc
imul
mov
xchg
cmp
push
and
jmp
daa
and
xchg
dec
adcb
lret
cmp
inc
xor
sbb
dec
push
and
mov
mov
lock
iret
mov
jnp
pop
and
sahf
movsb
cmpsb
jnp
or
push
cwtl
add
popa
cmpb
mov
clc
out
pop
cmp
das
cli
mov
cmp
imul
or
rcll
test
mov
jnp
adc
add
sbb
add
push
das
jmp
stos
adc
sti
subb
mov
or
and
xchg
repnz
inc
mov
mov
xchg
orb
mov
add
cltd
sub
xor
jp
sbb
push
shrl
movzwl
jns
jns
stc
pop
in
jbe
ja
cmc
rolb
out
stos
or
les
pop
arpl
mov
adc
dec
pop
jge
xchg
stos
mov
leave
mov
mov
mov
call
test
or
ret
fisubs
push
ds
adc
std
outsl
adc
sti
lea
adc
add
adcl
ljmp
jno
add
stc
jb
imul
lahf
and
jg
cmp
ret
lock
ja
pushf
gs
pop
hlt
sub
notb
or
inc
inc
testl
ja
fsubs
pop
loope
or
sbb
pushf
push
shlb
sbb
cmpsb
and
cmpb
xchg
sti
push
add
mov
lret
xlat
pusha
cmp
je
mov
add
mov
stos
cltd
dec
sahf
add
or
add
outsl
cwtl
repnz
mov
push
movsl
ja
and
jecxz
fsubrp
outsl
cmp
push
xchg
mov
mov
jbe
and
cli
mov
aam
dec
cmpl
movsb
outsl
cmp
inc
or
and
out
arpl
sub
pop
pop
push
or
pop
inc
test
bound
dec
and
shlb
sub
in
sub
sub
pop
mov
pop
gs
out
add
arpl
mov
test
mov
xlat
out
push
aam
sbb
sbb
mov
push
dec
jl
xor
jnp
mov
inc
fwait
out
inc
arpl
dec
or
push
push
jl
int3
movb
test
shll
mov
sbb
or
and
fdivs
xor
sbb
add
into
xchg
repz
xor
fs
xlat
mov
jmp
inc
clc
dec
or
fcmovbe
xchg
jg
iret
rcl
shl
jmp
adc
nop
aam
test
xor
xchg
and
sti
stos
lock
mul
pop
sbb
pop
push
dec
rolb
and
lea
ljmp
xor
xor
mov
movb
and
rcll
hlt
out
cmp
add
int
xlat
pop
movsb
enter
lret
imull
cli
mov
xchg
and
fisubrl
xor
lock
xchg
ret
mov
pop
mov
les
loop
into
or
iret
fucomp
lock
push
pop
ret
and
ss
mov
fwait
outsl
cli
pop
js
enter
fldenv
or
and
or
dec
in
or
les
mov
daa
jp
and
hlt
mov
fsub
pushl
sub
out
in
int3
ljmp
jmp
xchg
dec
imul
fsubrp
cmc
and
cmpsl
daa
test
cmp
adc
ljmp
fucom
sub
jb
mov
or
and
cmc
adc
xor
xor
ret
icebp
jae
roll
mov
dec
cmp
and
xlat
dec
std
inc
xchg
adc
push
loope
stc
int3
pop
jbe
or
push
pop
jle
nop
fcomp
pop
stos
ret
ftst
jecxz
imul
adc
sub
notb
dec
inc
imull
xor
std
shr
mov
lret
adc
jecxz
adc
mov
dec
sbb
loop
mov
fstpl
add
aam
jg
inc
dec
mov
xchg
gs
cmpsl
jmp
cld
int
ret
pop
xchg
cld
mov
sbb
int
lods
or
fstpt
cli
imul
cmp
push
andb
pop
mov
int
mov
xlat
jge
sub
inc
pop
bound
mov
pop
dec
push
push
adc
add
stos
pop
lcall
adc
aam
orl
dec
test
sti
rolb
stc
dec
dec
je
cwtl
stc
out
push
xor
fwait
gs
das
push
mov
cli
mov
out
pusha
das
xchg
cmp
xor
in
sbb
loopne
mov
push
cld
or
mov
hlt
dec
or
lret
lea
ret
ds
mov
stos
sub
sbb
push
scas
loop
mov
and
daa
and
dec
xchg
rol
cld
add
dec
ja
inc
cs
or
xchg
ljmp
pop
pop
adc
outsl
xchg
test
xchg
mov
fcomps
stc
fwait
lock
inc
sbb
xchg
cmpsb
mov
jbe
cmp
or
jns
nop
and
in
inc
jg
nop
loopne
mov
insb
test
in
add
in
aad
or
mov
push
fmuls
ret
sbb
xchg
sub
push
iret
mov
xor
mov
mov
ret
fistl
or
out
lods
pop
pop
jo
push
icebp
push
std
or
xor
mov
jb
popa
fidivrl
nop
xlat
mov
mov
mov
adc
push
ss
cmpsb
push
cs
cmpsl
mov
lock
pop
clc
adc
or
or
movsb
out
ret
mov
int
cmp
inc
pop
sub
std
in
ss
fnstsw
loop
rorb
jno
mov
cltd
add
add
cltd
pop
cmp
push
ljmp
out
ds
ja
mov
ljmp
mov
mov
xor
dec
test
gs
or
loopne
int3
jnp
push
movsl
fdivp
fstpl
or
and
rclb
loopne
in
jnp
jg
jle
and
das
push
scas
and
sbb
push
dec
cld
jo
dec
imul
mov
lock
lds
in
jno
pop
mull
aad
ja
test
mov
cwtl
js
lods
jmp
pop
mov
scas
es
sbb
pop
mov
or
js
cmp
mov
adc
xchg
mov
incl
xchg
or
push
movsb
repz
add
mov
cmp
pop
cli
sbb
xchg
mov
mov
mov
push
pushf
pop
out
div
xchg
loopne
sub
out
or
dec
fcmovbe
sti
jmp
sub
inc
daa
sti
dec
jns
push
mov
push
insb
in
push
es
mov
js
cmp
and
cmp
xchg
add
hlt
cmc
inc
mov
adc
dec
cmpsb
scas
xchg
jne
fidivl
lea
mov
lock
or
dec
out
shrb
cltd
jb
fstpl
and
mov
cmp
pop
pop
mov
or
sbb
cltd
sarb
stos
xchg
das
cltd
xchg
xor
data16
bound
xor
sbb
add
adc
push
fneni(8087
xlat
push
movsb
popf
mov
imul
add
push
xchg
cli
test
in
sbb
xchg
ljmp
jno
mov
pushf
xor
xchg
ror
pop
xchg
pop
inc
push
out
ret
mov
leave
sub
xchg
lahf
das
inc
dec
daa
lret
imul
dec
cmp
loopne
ds
pop
inc
imul
ret
jo
fnsave
mov
repnz
cmp
sub
mov
ds
inc
or
shl
and
je
sti
jbe
xchg
jns
test
jge
gs
mov
inc
xor
lods
in
jge
sbb
jbe
or
test
jmp
push
xor
pop
sysret
or
scas
pop
xor
lea
add
repnz
mov
cli
dec
sbb
sbb
into
dec
or
push
sub
jns
movsb
mov
push
xlat
jg
cltd
in
inc
mov
iret
adc
mov
mov
sub
sbb
sbb
idivl
call
push
push
inc
and
insb
popf
dec
cmpsl
repz
shrl
jns
je
inc
adc
adc
cmp
dec
sarl
dec
and
repnz
jne
mov
imul
popf
xor
inc
adcb
mov
ds
and
dec
adc
adc
int3
call
inc
xchg
mov
push
push
mov
insb
dec
fidivs
ja
xor
cmp
dec
stos
mov
inc
or
xor
mov
imul
xchg
add
and
pop
out
test
cli
fisubrs
or
sbb
scas
and
cmp
pushl
xor
pop
shrb
std
scas
or
inc
das
push
add
lods
cwtl
insl
sahf
mov
jmp
fldl
inc
popa
and
adc
or
das
xchg
fstl
jp
sbb
cmc
jge
mov
sarb
bound
or
or
test
sbb
leave
jns
rolb
das
imul
stos
arpl
outsl
popf
mov
push
fcompl
dec
std
xchg
jno
ret
pop
xchg
and
xor
xchg
std
movb
mov
adc
jp
ja
arpl
das
cs
and
test
inc
mov
xor
pop
jmp
sub
iret
outsl
stos
aam
pop
add
and
and
push
fsubs
cmpb
mov
mov
cmp
cmp
sub
add
cmp
loop
mov
jnp
sub
imul
out
inc
mov
xlat
dec
out
fsubl
dec
ret
push
rcrl
lret
cmp
test
sarl
jns
repnz
nop
mov
or
jmp
xorb
jae
mov
push
xor
xchg
mov
ret
pusha
das
pop
js
test
xchg
push
pop
or
repz
cmpsb
pop
aad
inc
movsl
and
cmpsl
mov
pop
mov
jmp
aad
test
xchg
add
jl
cmp
popa
fisubs
data16
imulb
dec
test
jae
and
clc
iret
xchg
lret
int3
stos
imul
xor
mov
ss
xor
and
dec
sbb
xchg
sbb
aas
pop
cmp
fcmovnu
sbb
cli
or
xlat
sub
sbb
cmp
negb
jo
sti
pop
inc
sub
or
stos
das
dec
stos
sti
pop
popf
mov
sahf
outsb
shlb
pop
mov
add
pop
push
int
test
push
xchg
inc
mov
popf
or
adc
in
addb
arpl
stos
rorb
jo
mov
cmpsl
and
pop
cs
jg
mov
std
mov
xchg
jl
bound
fcomi
push
dec
add
daa
wrmsr
push
aas
pusha
daa
xorb
jle
mov
mov
dec
cltd
out
out
and
movsb
or
ja
sarl
in
repz
lds
mov
inc
add
scas
cli
push
cmpsb
std
loopne
jge
sbb
or
rcl
fs
jns
pop
mov
jp
and
mov
xor
xor
rclb
sti
xor
in
pop
ds
daa
lcall
mov
inc
out
shlb
popa
xor
jne
lahf
leave
hlt
pop
cmp
xchg
popa
subb
jg
xchg
mov
sarl
lds
inc
sub
xlat
xor
loop
xchg
pop
ds
inc
adc
push
scas
outsl
in
andb
adc
jns
je
loop
nop
fcomps
aam
jb
loop
sub
jns
rclb
insb
jge
cmp
cmp
inc
lahf
mov
call
add
jns
and
sbb
jae
ds
sarb
vandps
jb
inc
fs
and
divb
xchg
roll
cmp
in
cmp
gs
and
int3
loop
dec
insb
cld
out
data16
sbb
jbe
out
pop
mov
mov
push
subb
movsb
dec
in
pop
mov
xchg
dec
or
add
cmpsl
decb
xchg
pop
push
fsubrp
mov
fildll
add
test
movsl
mov
push
mov
cltd
jle
testb
fistpll
fdivs
int3
dec
or
mov
jl
mov
daa
mov
jp
call
sbb
sub
push
mov
into
fstps
std
out
xor
out
sbb
shlb
xor
jbe
lock
cmp
dec
fs
jo
xchg
mov
hlt
mov
aas
nop
out
jmp
cmp
int
outsl
dec
inc
sbb
ficoml
call
xchg
cmp
mov
sub
pop
or
xchg
jmp
xlat
add
pop
outsl
dec
les
xchg
xchg
cld
daa
lret
jne
mov
push
roll
in
xchg
dec
addr16
cmpl
push
imul
out
mov
stos
popa
mov
jmp
std
inc
mulb
js
add
cmp
cmp
mov
and
mov
sub
adc
cwtl
sbb
cs
and
jl
imul
push
notl
call
sub
push
adc
stos
inc
orl
mov
lods
mov
xor
lock
push
stos
mov
in
dec
lods
sti
inc
add
les
sub
addr16
sub
and
ja
xor
cmpl
fsubrl
pop
in
add
in
lret
xor
xor
inc
fidivl
in
dec
popa
and
in
inc
shrl
gs
adc
flds
sbb
cmp
inc
jno
pop
push
test
testl
rol
and
xchg
aam
adc
adc
add
jae
nop
jge
leave
and
mov
xor
dec
cltd
pop
in
rcll
sarl
das
xchg
sub
out
jl
jnp
mov
fistpl
int3
mov
add
test
aad
in
jle
lds
push
xor
fisttpll
test
lods
out
ficoms
insb
xchg
add
jge
dec
jae
data16
aam
aam
int
or
insl
xor
mov
mov
ljmp
xor
sbb
push
aaa
inc
sub
mov
sbb
loopne
jb
mov
cmpsl
test
xlat
xchg
pop
dec
push
mov
jo
repz
into
sbb
mov
mov
pop
lock
push
int3
lods
xor
add
mov
popf
pop
or
rcr
sbb
mov
mov
sahf
jne
adc
ljmp
loope
ds
xchg
outsl
cmpsl
sub
popa
xor
xchg
sbb
test
sub
sbb
push
xchg
les
shl
jno
inc
cmp
cmc
aam
mov
jnp
or
xchg
sub
mov
inc
or
repz
mov
jp
sahf
daa
mov
and
xchg
xor
lea
loope
xchg
mov
mov
stos
je
adc
insb
or
pop
pop
cmpsb
xchg
mov
rorl
iret
add
xchg
push
fnsave
sbb
insb
jnp
push
mov
or
loopne
lea
icebp
in
mov
popf
jp
xor
aas
das
inc
stc
rcrb
and
repz
inc
inc
add
aad
inc
add
in
cltd
ja
sbb
cli
dec
mov
bound
dec
ficompl
lods
xchg
push
dec
mov
int
test
pop
mov
pop
cmpsl
cmp
fiaddl
mov
shll
pop
int3
fidivl
mov
out
es
insb
mov
xchg
mov
lea
ret
sbb
shll
push
ljmp
xor
seta
xorb
push
or
dec
xchg
cmp
sahf
loop
xlat
jmp
mov
inc
fnstenv
scas
push
xor
jecxz
xor
movb
cmp
inc
lcall
sbb
out
das
jmp
lret
clc
pop
mov
rol
rep
sub
mov
iret
aam
sbb
fcompl
nop
aas
pop
mov
pop
add
fisubrs
xor
adc
aad
lods
inc
out
pop
push
cmp
xor
inc
mov
scas
sbb
pop
jmp
and
in
test
xchg
mov
repz
xorb
dec
in
pop
mov
mov
lods
aas
sbb
inc
and
leave
sar
iret
iret
sub
cmp
movsl
test
mov
dec
roll
bound
mov
or
aad
std
add
xchg
mov
fdivp
pusha
adc
jbe
test
xchg
inc
out
ja
out
push
sub
ss
popa
mov
push
leave
out
popa
ret
les
dec
sub
lds
mov
lahf
pop
and
sub
xor
cmp
in
pop
das
mov
popa
push
orl
in
dec
mov
filds
ja
xchg
sub
mov
daa
or
ss
mov
mov
xchg
add
cmpsl
ljmp
jecxz
push
int3
adc
xor
mov
mov
stos
pop
mov
jb
pop
pop
addr16
xor
adc
addr16
pop
mov
jns
xor
cmpsl
mov
addr16
int3
sub
in
sbb
push
repz
cmp
lock
sub
sub
inc
loopne
rorl
in
repz
xlat
or
ret
sub
mov
test
add
jmp
lods
out
mov
mov
mov
aaa
push
mov
ret
lods
mov
daa
lret
jle
test
and
stc
imul
imul
dec
xchg
iret
arpl
mov
lock
or
jge
xchg
lds
xor
sbb
mov
cltd
cmpsl
add
lock
jmp
pop
stos
pop
sub
out
and
mov
sub
pusha
pop
outsl
jo
cld
int
push
and
mov
jae
aad
cwtl
iret
xor
push
pusha
sbb
int
leave
lods
cmpsb
mov
in
mov
add
fiadds
sub
lods
cmp
xor
mov
in
popa
cli
xchg
inc
daa
cld
jle
xor
push
es
push
cmc
aaa
pop
push
out
mov
cmp
int3
pop
sub
xlat
loope
sub
lret
mov
mov
mov
push
std
stos
repz
lods
xor
lock
rcl
test
les
adc
or
add
mov
inc
scas
in
aam
and
loop
mov
pop
clc
xorb
std
cmp
mov
aaa
stos
cmp
nop
shll
xlat
xor
xlat
lds
and
fstpl
or
cmp
rclb
jns
vmulsd
sub
push
mov
pop
icebp
cmp
or
push
jno
jl
pushf
andb
push
and
cmp
mov
push
and
shrl
cmp
movsl
std
out
cmp
mov
test
mov
dec
jb
cltd
ljmp
sbbb
std
inc
cmp
sub
pusha
dec
hlt
out
roll
outsb
icebp
pop
mov
pop
shlb
test
jmp
sar
inc
ja
adc
push
mov
pop
sub
fcmovnb
mov
and
shlb
jle
fisttpll
inc
mov
fldenv
mov
mov
xor
popa
es
push
call
xchg
xchg
jmp
adc
movsl
mov
pop
aaa
push
in
push
add
dec
mov
shlb
mov
pop
aaa
mov
adc
arpl
mov
xchg
jo
push
faddp
frstor
add
jl
jbe
mov
push
test
push
ret
std
push
add
push
orl
jo
ltr
sahf
fiadds
and
sti
xchg
insb
push
adc
data16
push
pusha
test
out
mov
and
gs
in
movsl
mov
mov
mov
jno
addb
and
pop
jmp
or
jns
leave
and
es
repnz
add
loope
test
add
mov
jbe
mov
mov
mov
pushf
dec
mov
and
lods
fldcw
cli
adcb
into
call
add
and
ret
fwait
fs
pop
enter
xor
and
mov
xchg
aas
pusha
dec
rcrb
sti
rcl
cmpsl
rcll
jge
icebp
loope
cs
jne
cmc
or
xchg
pushl
or
mov
leave
push
inc
test
movsl
mov
fs
pop
mov
add
jmp
push
mov
inc
into
insb
sbbl
pushf
ljmp
mov
inc
or
lods
out
mov
ficoms
fstpt
mov
sbb
jb
aam
dec
xor
mov
sub
xor
mov
rcll
xchg
push
dec
negl
insb
arpl
mov
sti
insb
sahf
xchg
adc
mov
mov
cld
mov
ds
subb
mov
xor
pop
aad
fdivr
es
andl
and
push
out
push
xchg
xlat
pop
fidivl
and
xor
jns
sbb
xchg
addl
shlb
cli
xor
xor
xchg
shrl
rorb
or
into
js
inc
xor
push
inc
push
mov
pop
jmp
sbb
add
subb
push
stos
xchg
insb
inc
lock
push
xlat
mov
out
stos
rcr
cmpsl
lret
jl
mov
pushf
stos
fdivrs
cld
ret
jns
test
mov
std
es
test
ret
jns
xor
add
add
jb
imul
and
jge
repnz
psubsw
out
fcompl
cli
ret
mov
mov
iret
outsl
mov
daa
cmpsb
jge
aaa
sub
push
mov
sub
xchg
jl
jo
popf
stc
and
cmp
out
out
push
stos
test
adcb
jnp
inc
stos
pop
fs
pop
outsl
push
jno
dec
int3
add
lds
xchg
pop
xchg
jle
loopne
fs
sub
cvtps2pi
out
inc
adc
addr16
std
push
xchg
pop
push
xchg
pop
insb
dec
mov
test
cmp
xchg
test
aas
cmpsl
into
dec
fs
nop
mov
mov
imul
out
push
push
inc
adc
sbb
or
push
ret
mov
dec
repz
shlb
xchg
jle
movsl
imul
jbe
sbb
ljmp
sub
xchg
sub
cwtl
mov
addr16
out
or
adc
outsl
inc
andl
or
sbb
hlt
popa
and
test
popf
dec
push
rcrb
sbb
cmp
add
jo
and
cltd
pop
jecxz
out
aas
push
cmpsb
testl
ja,pn
fs
cmp
dec
xor
out
scas
stos
nop
test
fwait
ja
sub
mov
rcl
cmpsl
dec
insb
fs
loop
dec
aaa
in
das
cltd
push
fistps
cmp
in
aas
dec
popf
stos
mov
ja
inc
push
jmp
std
or
pop
mov
pop
push
out
fidivrs
add
sub
push
call
mov
sbb
xchg
call
sbb
xor
push
sub
mov
aas
jo,pn
and
dec
or
cmpsb
addr16
lods
adc
xor
out
sbb
gs
insl
call
cmpsl
dec
std
arpl
dec
push
shlw
sbb
add
adc
xor
js
mov
xor
fdivrp
test
icebp
cmpb
inc
ds
int3
jg
subb
mov
add
push
test
arpl
cmc
and
jno
rcll
sbb
xor
sahf
ljmp
jbe
das
inc
xchg
call
add
pop
cmp
pop
or
loop
cmp
aam
fcmovbe
ficoml
sub
jge
xchg
loope
cmp
or
pusha
cli
pop
rol
xlat
inc
add
mov
arpl
lds
adc
scas
roll
mov
and
or
lea
faddp
mov
add
add
mov
mov
shlb
xchg
popf
push
jge
xor
mov
ja
fsubrs
in
or
arpl
clc
popa
pop
loopne
sti
cmp
das
add
inc
jmp
or
movsb
mov
inc
lods
xor
out
mov
dec
cli
cmp
sub
test
xchg
mov
int3
push
jnp
cmpsb
sbbl
and
push
xlat
pop
xor
rcr
mov
xchg
movlps
cmpsb
les
push
ljmp
in
inc
lahf
outsb
aam
dec
lods
adc
push
fst
push
push
call
xor
pop
push
cmc
dec
mov
cwtl
je
push
xchg
jbe
xchg
lcall
or
pminub
enter
arpl
insb
push
jl
jge
xor
mov
cmp
pop
mov
jg
dec
dec
aas
push
pop
lea
mov
push
mov
adc
push
xor
sahf
fiaddl
and
clc
mov
push
add
mov
aam
addl
idivl
inc
or
push
cmp
hlt
lea
jbe
dec
inc
sarl
or
pop
mov
sub
popf
mov
add
cs
jl
sahf
loopne
idivb
aad
andl
mov
sub
mov
inc
popf
pop
push
or
xor
or
into
jb
mov
pop
or
es
scas
adc
and
jl
xchg
outsl
cmc
dec
pop
cmp
idiv
imul
xchg
xorb
shll
mov
push
inc
xchg
mov
subl
jecxz
jb
sbbb
pop
into
fwait
pop
pop
cmp
scas
mov
leave
ljmp
or
pop
mov
and
xchg
in
jo
inc
sbb
out
outsl
imul
mov
fsubr
in
jo
adc
cmpsb
and
fists
ja
ja
pop
test
fldcw
push
sarl
push
adcl
shlb
stos
stos
lahf
push
and
dec
nop
add
xchg
imul
push
cmpsl
and
lock
out
xor
ds
lds
xor
outsl
sahf
cwtl
mov
pusha
mov
push
xchg
sbb
pushf
cmpsl
das
push
aam
psraw
xor
imul
lock
pop
or
dec
shl
dec
mov
mov
mov
pop
pop
cmpsl
pop
push
cs
test
xor
jbe
fcomps
inc
cmp
mov
mov
sbb
das
mov
std
mov
fwait
push
cmc
jmp
dec
jmp
cwtl
or
inc
pusha
pop
aad
mov
sbb
mov
loope
clc
popa
data16
xlat
add
inc
inc
push
lock
mov
cli
add
pop
outsl
repnz
push
sub
fsubs
add
mov
fmull
mov
dec
pop
scas
jecxz
movsb
jecxz
lret
in
lahf
lret
xchg
negb
pop
outsb
jns
popa
enter
push
hlt
push
in
imul
inc
imul
daa
stos
frstor
in
rcll
adc
imul
pop
insl
loopne
leave
or
leave
idivb
cli
lock
sti
xor
xchg
sbb
and
xchg
jnp
les
rorb
arpl
jae
push
andb
xorl
push
push
fdiv
les
lds
rcrl
rcrl
andl
xchg
das
adc
add
cwtl
push
inc
xchg
push
lret
gs
gs
cltd
jmp
push
fsubrs
call
dec
mov
in
pop
mov
movl
jl
push
stos
lds
mov
jmp
test
lods
dec
rcll
dec
sbb
add
mov
xchg
dec
cli
fiadds
mov
js
in
in
adc
mov
test
dec
ss
jns,pt
adc
fistps
dec
mov
cmp
sub
call
je
gs
lods
inc
sbb
cld
loope
add
xor
ljmp
and
push
rclb
test
mov
popa
test
sbb
popa
cs
cs
pop
lcall
inc
mov
inc
xor
push
enter
push
pop
and
sub
pop
in
xlat
fcmovnb
rsm
lods
leave
les
in
sbb
cwtl
xor
sub
mov
push
sub
fsts
icebp
clc
pop
inc
lcall
inc
hlt
rclb
mov
lret
pop
test
lods
xor
or
ds
std
xor
push
adc
or
xorl
in
int
push
js
icebp
aad
je
and
mov
iret
cltd
mov
cmpsl
pop
or
std
mov
xor
inc
dec
mov
or
xchg
loopne
adc
or
and
sbbl
pop
es
leave
cld
sti
cmp
aam
fidivrs
xchg
clc
out
mov
mov
mov
popa
inc
push
lret
imul
sbb
dec
stc
cld
int3
out
sub
dec
lcall
xchg
push
iret
lock
rcr
inc
jecxz
dec
xor
ffree
inc
pop
dec
pusha
jae
iret
ss
insl
dec
mov
iret
test
ja
dec
mov
clc
mov
loope
adc
xchg
cmpsl
push
mov
fnstcw
pop
add
pop
cmp
negb
adc
outsb
cmc
loopne
add
inc
sbb
mov
cmpsb
dec
stos
fistpl
loopne
sbb
in
mov
mov
sbb
jp
in
add
shrl
xor
orb
dec
arpl
adc
inc
push
sarb
rolb
jbe
sub
test
inc
mov
jg
inc
cmp
xor
mov
push
xchg
add
lret
out
sbb
or
imul
inc
lret
mov
add
clc
stos
out
inc
in
jmp
mov
sub
out
repnz
mov
decl
fwait
xchg
cmc
sbb
mov
jp
sbb
negl
imul
dec
fs
push
fwait
cwtl
test
mov
shrl
jae
cmpb
mov
sbb
cmpsb
inc
bound
jl
mov
lcall
lods
addr16
xchg
loopne
pop
mov
jmp
sbb
xchg
mov
pop
add
clc
pop
cmpb
rcrl
add
daa
and
sbb
testb
lods
int
stc
mov
cs
fstpt
shlb
sbb
push
std
sub
loope
fbld
pushf
push
das
sub
incb
lahf
dec
enter
test
or
aad
xchg
cmp
cmc
push
mov
adc
test
pop
add
mov
negl
in
xchg
jae
call
outsb
icebp
fwait
divb
adc
scas
push
cmp
mov
imul
push
xor
ficoms
jae
daa
add
daa
repz
aad
cmpsl
xchg
jmp
mov
mov
cs
cmpsb
and
inc
inc
push
enter
pop
dec
jmp
sbb
jmp
arpl
int3
sub
sbb
pop
pop
pop
cmp
insb
outsb
push
inc
and
cld
xchg
jne
adc
test
frstor
mov
arpl
stos
pop
popa
loop
fsubrp
jns
cmp
cli
aaa
xchg
pop
sbb
adc
loop
sub
mov
je
push
bnd
pushf
or
lea
pusha
push
cli
xchg
push
jge
add
mov
cmp
jge
xchg
lcall
adc
cmp
xchg
fwait
cmpsb
push
adc
movsb
jg
add
rol
je
addr16
lahf
in
and
xor
xchg
sbb
adc
cmp
pop
jl
dec
pushf
bound
pop
and
lods
fisubl
sbb
dec
adc
gs
mov
cld
and
jecxz
call
insl
dec
adc
fwait
sti
cltd
xchg
in
outsb
and
hlt
xchg
or
or
clc
and
in
popa
cmpsl
shl
jae
sub
stos
mov
daa
mov
cmpsl
xor
pop
sub
loop
iret
je
and
adc
sub
and
xchg
mov
insl
nop
out
and
mov
push
fcomip
inc
dec
pop
xor
in
icebp
movsb
jno
out
mov
sti
pop
ljmp
add
inc
ret
rol
sar
jp
jmp
jne
filds
fldcw
dec
fwait
cmovl
mov
jecxz
loop
sbb
ss
xchg
pop
xchg
mov
pop
movsl
cltd
popa
and
lds
fs
stc
adc
jo
std
cld
call
roll
nop
or
jecxz
leave
lods
jno
jnp
es
jnp
decl
sbb
fcmovu
push
inc
pusha
test
jl
inc
mov
in
pop
mov
mov
mov
outsb
ret
dec
push
mov
and
xor
ret
and
inc
jle
jno
scas
xor
lods
jb
test
xchg
adcl
fidivl
add
push
leave
inc
stc
lock
repz
pop
popf
cmp
cmp
add
jp
stos
rclb
cltd
mov
jne
jns
aad
sbbb
movsb
fstpl
aam
or
inc
out
jnp
xchg
mov
add
ja
jne
xchg
in
in
push
add
pop
jb
enter
loopne
jns
aas
cmpsb
jbe
mov
or
push
xor
adc
xor
ljmp
and
cmp
xor
lcall
repz
arpl
dec
and
adc
pop
mov
data16
fs
nop
stos
out
pop
and
out
lret
push
lods
inc
mov
inc
xchg
pop
lock
add
je
mov
adc
pop
sti
es
jnp
shrb
outsl
xchg
pop
lock
daa
mov
or
push
fmull
cmp
cli
bound
adc
xchg
int
adc
sbb
adc
out
push
inc
adc
jae
pusha
popa
inc
mov
shr
push
mov
idivb
mov
fwait
sbb
adc
in
dec
iret
out
nop
sub
dec
inc
inc
xorb
cmpsl
mov
jle
jecxz
in
or
subl
out
fistl
dec
xor
jbe
pop
in
dec
mov
mov
pop
sub
ja
jb
gs
adc
pop
repz
dec
xor
lods
mov
push
loopne
imul
add
stos
arpl
xor
push
xchg
add
gs
cmp
ret
xor
in
rolb
hlt
or
xchg
aas
and
test
sti
gs
insb
fs
dec
icebp
ja
sub
pop
add
lods
loopne
shrl
scas
sahf
clc
fdivs
cmp
or
sub
mov
adc
loopne
and
mov
stc
mov
sbb
insb
xor
mov
jo
orb
mov
enter
lret
sbb
push
stc
pop
int
xchg
cltd
scas
fs
pop
arpl
nop
ficoml
or
ja
mov
psrld
push
test
sbb
out
ret
std
mov
imul
add
aad
imul
jae
lret
add
mov
pop
mov
xlat
sbb
push
pop
lds
aas
cmp
out
and
loop
lock
adc
add
mov
mov
mov
sub
out
cmp
jns
pop
sub
ja
mov
outsl
inc
push
dec
imul
fsub
cmp
mov
imul
push
xchg
push
dec
push
push
std
dec
sub
pop
in
push
and
sub
mov
rorl
out
mov
popf
or
outsl
pusha
mov
fs
stos
add
addr16
sub
dec
lock
repnz
sub
icebp
mov
lcall
and
adc
cmp
xchg
xor
xchg
les
mov
in
ret
scas
or
and
mov
sti
aam
insl
push
mov
cmpb
enter
in
dec
jo
iret
or
mov
fwait
push
test
jns
sbb
data16
fwait
or
mov
inc
cmc
mov
pop
fcomps
sbbb
sahf
lods
dec
mov
cltd
jb,pn
icebp
sar
dec
outsb
sub
cli
scas
fcmove
sbb
push
jle
stc
ja
pop
arpl
xchg
adc
dec
data16
sub
mov
popf
and
push
adc
in
or
stos
fcom
mov
stos
fstpt
daa
in
jl
pop
pop
pushf
jle
sahf
adc
fcmovbe
sub
js
push
push
sub
lcall
fcmovu
xabort
jmp
sub
jb
cwtl
fnstsw
fildll
scas
and
mov
push
and
bound
popf
sub
push
mov
mov
sbb
xchg
fs
and
dec
inc
or
int3
es
mov
sub
fistpl
rcll
jnp
xor
xlat
cltd
pop
or
imul
jmp
jns
or
inc
int3
cwtl
mov
xlat
out
cld
stos
push
daa
or
mov
aam
jg
movsb
fs
call
or
push
mov
jae
out
out
mov
out
pop
sbb
mov
icebp
adc
mov
jno
lea
push
ljmp
xor
xchg
lea
push
ret
push
ja,pt
mov
in
popf
cmp
dec
imul
sub
cmp
insb
fidivs
jp
int
xor
fisubrl
xchg
sbb
cmc
or
lahf
ds
pushf
jbe
sbb
xor
mov
and
add
pop
lret
daa
fmull
and
test
repnz
push
lods
mov
inc
mov
orl
out
mov
pop
sahf
cmp
fsubrl
in
inc
dec
dec
subl
pop
mov
push
inc
xor
add
xor
add
sub
push
test
test
mov
testb
sub
mov
enter
add
shll
movsl
xrelease
mov
rcr
dec
loopne
mov
adc
fdiv
test
xlat
push
mov
xchg
repnz
in
inc
xchg
leave
pop
lods
sbb
jmp
imul
dec
sbb
frstor
outsl
out
adc
imul
aas
mov
out
in
mov
push
or
loope
stos
sahf
inc
sub
test
xor
rcrl
mov
jp
jbe
sbbb
je
mov
stos
dec
pusha
in
add
loop
xchg
push
cmc
daa
loope
fisubs
arpl
xor
sahf
and
lock
lock
sbb
imul
jbe
cli
push
arpl
aaa
fnsave
ret
mov
mov
adc
shlb
clc
in
jno
mov
scas
pop
pop
or
outsl
idivl
dec
pop
push
xchg
push
outsb
dec
mov
dec
int3
sarl
sbb
frstpm(287
mov
addl
das
ret
lcall
pushl
mov
in
mov
adc
mov
decl
xor
imul
clc
mov
out
xchg
pushf
jl
roll
xchg
push
mov
jecxz
push
mov
jmp
sub
leave
add
sub
lcall
sub
repz
je
loopne
inc
sub
cld
fsubl
loope
inc
lret
mov
mov
aam
popa
rolb
add
jno
fiaddl
sbb
cmp
mov
mov
xor
imul
adc
jge
sti
cltd
stc
mov
xchg
sbbl
les
lahf
aam
xchg
xchg
push
outsb
inc
pop
xor
data16
sbbb
ss
cmp
push
cli
lcall
scas
popf
mov
gs
divb
dec
bound
pop
jb
bound
lods
add
dec
add
or
cltd
fs
std
sti
in
loop
dec
mov
sub
push
cmpsb
nop
fxch
adc
sarb
mov
cmp
scas
mov
lea
cmp
arpl
pop
pop
cmp
icebp
mov
int
sbb
adc
pop
sub
cmp
sbb
jno
out
test
inc
inc
into
xchg
insl
mov
mov
das
pop
jg
pop
aam
aas
into
jg
lcall
push
scas
xchg
in
fs
lock
add
das
addr16
push
leave
and
jae
out
adc
jl
or
inc
and
add
xchg
jb
xchg
cmp
jns
loopne
mov
mov
pop
fistps
dec
test
dec
pop
push
push
and
or
mov
in
dec
xlat
xor
cltd
pop
icebp
stos
push
lcall
xorl
pop
icebp
xor
arpl
sub
add
add
add
pop
and
test
cmp
mov
push
stos
iret
data16
sbb
rcl
mov
int3
pop
and
adcb
fsub
pushl
mov
xchg
and
sbb
pop
adc
sub
jne
jp
pop
and
decb
mov
imul
xchg
out
ror
dec
out
into
xchg
and
cmpsl
cmpsb
popf
sub
sti
pop
push
dec
inc
stos
movsl
mov
xchg
mov
dec
mov
lods
pop
inc
in
mov
jb
popl
sbb
imul
insl
sub
in
in
out
xor
dec
mov
and
insl
dec
mov
mov
inc
lahf
mov
or
cmp
iret
add
cmp
insb
ljmp
nop
movsl
popa
pop
jne
gs
jb
ret
aas
mov
or
pop
cmp
inc
sub
inc
repnz
mov
mov
cmpsl
push
or
inc
xchg
sub
cmp
faddl
push
or
popa
mov
inc
rolb
out
xor
push
cmp
call
adc
inc
daa
into
sbb
pop
pop
adc
jg
sbb
cmp
xor
fdivrs
jmp
jmp
xor
fidivrs
scas
push
nop
mov
popf
iret
jle
cmp
and
ja
add
scas
out
outsl
push
out
jl
xor
push
inc
add
movsb
das
mov
inc
cltd
pop
push
jecxz
clc
inc
ljmp
ljmp
pusha
aas
imul
fwait
fs
mov
mov
add
inc
orb
aas
subb
or
pop
daa
inc
test
add
cmc
cld
mov
push
test
in
cmp
loopne
and
and
mov
out
stc
pushl
lods
hlt
mov
outsl
xchg
pop
push
mov
jl
push
fcomps
pop
push
leave
push
push
sbb
add
adc
mov
mov
pop
test
int
pop
sub
dec
out
xor
push
sbb
pop
shrb
enter
icebp
out
cmpsl
repnz
stc
loop
jns,pn
js
or
dec
adc
and
call
pushf
sbb
pop
inc
ljmp
enter
xor
jae
pop
lock
testl
scas
push
rcrb
fwait
cwtl
pop
ljmp
int3
xor
mov
iret
incl
fnstcw
add
adc
mov
sahf
pop
aas
or
cmp
fs
mov
sbb
mov
push
mov
pop
sbb
adc
cmp
xchg
dec
mov
sbb
jp
enter
pushf
jg
jle
imul
push
cmp
movsl
imul
add
dec
movsl
cmp
ljmp
adc
sar
fsubrp
mov
insl
or
mov
lea
fstpl
cmc
sub
scas
adc
mov
mov
xor
sbb
mov
push
cmpsl
stc
ficompl
add
mov
bound
test
insb
add
xorb
mov
loop
xor
adc
mov
jne
das
iret
push
out
fdivl
jmp
jp
lahf
cmpsl
call
inc
call
insl
pop
and
mov
fcompl
inc
rorl
push
rcll
adc
pop
xor
jmp
mov
lods
hlt
sbb
lock
mov
jle
test
lods
mov
xor
jno
dec
xor
cmpl
or
xlat
push
cld
push
jb
mov
sbb
imul
lcall
stos
test
shl
cmp
fsubrs
push
imul
fdivrl
subl
aam
cltd
jmp
fsubr
dec
icebp
sbb
gs
jnp
jns
push
jns
add
xchg
and
test
push
mov
or
inc
xor
bound
or
adc
lcall
inc
mov
fsubl
outsb
mov
lret
push
mov
push
mov
sub
sub
push
mov
adc
xorb
sub
das
cmpsl
dec
or
jo
fs
lock
stos
enter
arpl
jo
sub
xor
fmuls
mov
lea
inc
xchg
jle
and
sahf
lock
sar
sbb
mov
jmp
jne
pop
cwtl
or
faddl
xor
addr16
pop
sarb
js
stos
mov
shll
je
and
pushf
pop
into
jno
cwtl
push
mov
movsl
push
push
lods
mov
sahf
inc
pop
cmpsl
mov
and
xlat
hlt
stc
lock
xlat
and
inc
xchg
cmp
ret
adc
or
imul
or
xchg
and
mov
lock
repnz
or
xchg
pop
mov
pop
xlat
enter
aaa
sti
fs
or
jmp
call
add
mov
push
ret
xlat
sub
push
popa
lcall
inc
push
ret
add
push
mov
pop
sub
push
sbb
jne
push
gs
in
or
mov
mov
scas
repz
fnstcw
add
xor
pop
and
out
push
mov
mov
lds
jnp
das
mov
or
jge
mov
in
or
adc
jno
out
in
sbb
inc
xor
jp
ja
jecxz
adc
or
jg
cmp
push
lods
sbb
mov
push
shll
mov
inc
btr
iret
xor
dec
inc
clc
inc
ret
xor
iret
mov
stos
cmpl
popa
inc
push
int3
jns
test
inc
ja
fs
clc
cmp
bound
into
idivl
imul
mov
or
adc
push
cmp
mov
pop
xchg
jo
add
dec
inc
push
jb
int3
cmp
jecxz
cmpb
dec
adc
dec
jno
push
and
adc
cmpsb
lcall
xor
cli
dec
mov
mov
fdivrs
lock
mov
and
cltd
lea
and
mov
push
jo
or
cwtl
fwait
add
sahf
push
jns
ljmp
leave
pop
add
jb
jecxz
imul
mov
popa
dec
fidivl
sahf
mov
divb
or
mov
in
call
fdivrl
dec
fmull
out
xor
sahf
and
sbb
orl
fcomps
xor
arpl
or
pop
outsb
xchg
ljmp
mov
dec
jl
mov
repz
cmp
mov
and
out
cli
xor
shlb
sbb
inc
lret
stos
sub
leave
fucomp
xor
jmp
push
pop
push
sub
xchg
mov
and
test
jmp
hlt
pop
test
adc
cmpsb
or
mov
mov
cld
icebp
xabort
mov
fstpl
push
cmp
inc
inc
rcll
jnp
mov
in
mov
bswap
adc
psubusw
aaa
data16
pop
lea
xor
mov
ja
jne
or
push
movsb
dec
cmpsl
int
fs
mov
out
popf
ffreep
xlat
ret
lea
sbb
fnstsw
jo
mov
divb
rclb
or
and
cmpsl
push
add
out
jmp
pop
loope
cs
or
out
rcl
test
sbb
lea
cmpsb
insl
jmp
icebp
xchg
mov
xlat
or
sti
xchg
mov
and
push
cwtl
gs
jae
xor
lods
and
aam
mov
sub
adc
dec
outsb
gs
js
mov
fwait
lcall
mov
push
push
xor
pop
in
push
sar
xlat
adc
popf
icebp
dec
lahf
enter
adc
gs
mov
jmp
arpl
push
daa
push
push
push
pop
aad
xchg
or
cld
cli
data16
movsb
mov
popa
and
imul
lods
dec
cmc
dec
insl
inc
je
mov
pop
stos
dec
mov
push
and
mov
push
insb
mov
jmp
push
lahf
or
test
inc
xchg
add
imul
bound
fwait
icebp
jle
mov
aad
mov
jg
test
je
ret
ficoms
and
ret
push
int3
cmp
xchg
outsb
mov
sub
cmpb
les
out
loopne
pop
and
adc
mov
lds
sub
xchg
ss
test
loope
lret
adcb
mov
movsl
mov
test
stos
cwtl
adc
je
or
test
inc
xor
cld
mov
mov
xor
cs
or
jb
pop
pop
mov
xor
push
out
jno
mov
sbb
cs
sub
adc
push
loop
dec
adc
dec
or
jge
addl
cmp
in
ds
or
test
lret
jae
add
jbe
push
push
scas
cmp
fsubs
test
ljmp
push
mov
jns
hlt
inc
jo
lock
push
inc
cmp
sub
inc
call
out
xorl
aas
mov
jo
mov
aam
mov
pop
testl
push
sar
push
scas
jne
mov
xchg
addl
mov
inc
cmp
data16
js
adc
aam
sti
mov
sub
aam
sbb
push
jge
test
mov
or
int
pop
mov
jns
xlat
ficoml
pop
cmp
loop
and
test
rcl
pop
scas
sub
pop
jnp
leave
test
clc
pop
add
stos
rorl
lea
cmp
mov
cld
mov
push
ret
push
sub
mov
nop
ds
and
jb
xchg
and
jo
lock
hlt
test
adc
pop
push
mov
inc
jae
mov
pop
fldl2t
mov
cwtl
aaa
jbe
dec
loope
ret
inc
or
repnz
and
loopne
mov
add
out
repz
jb
push
lret
and
std
push
xor
sbb
pop
ret
rolb
dec
or
inc
gs
mov
mov
or
mov
lds
shlb
mov
and
sbb
ret
data16
enter
leave
ss
rorb
mov
jge
cmp
movsb
jp
xchg
divl
sti
divl
add
pushf
rcr
mov
xor
dec
ss
clc
and
and
mov
fldl
mov
and
arpl
aaa
movsb
int
cli
les
adc
movsl
fcmovnb
mov
xchg
les
test
pop
mov
out
pop
aam
mov
arpl
out
jle
js
fists
iret
adc
xchg
ja
lahf
jb
shlb
lods
test
jp
pop
inc
inc
xchg
lds
ss
mov
sub
fdiv
out
movsl
jle
repnz
mov
enter
push
cli
cmpsl
mov
lods
pop
imul
ds
and
insl
sbb
lret
or
mov
cld
fld
and
mov
es
inc
cmp
inc
mov
xor
push
cmp
lock
fstps
lret
adc
dec
add
rcr
xchg
call
mov
dec
push
cmpsl
mul
mov
subb
jae
sub
loop
shrb
aam
or
loopne
in
jp
mov
dec
push
push
aam
imul
push
fstpl
pop
cmp
push
popa
jle
cld
jecxz
push
pushl
scas
or
push
lret
lret
push
rcrb
cmp
and
fwait
sbb
iret
bound
inc
iret
mov
clc
fistps
cmc
fwait
jno
cltd
inc
inc
inc
out
and
fistpl
mov
pop
or
push
pop
inc
lds
repnz
adc
incl
addr16
mov
adc
adc
inc
push
sbb
push
adc
int3
lcall
mov
movsl
push
or
gs
add
fidivl
mov
inc
mov
pushf
sub
lock
inc
mov
fs
mov
idivl
aam
stos
inc
pop
adc
fwait
and
pop
cmp
call
mov
pop
inc
cmp
add
and
cmp
pop
dec
mov
push
jb
add
or
xchg
out
aam
mov
dec
outsb
and
pop
xchg
sbb
mov
fwait
out
ret
popf
cmp
test
testb
sbb
sub
jle
jns
sub
jne
sub
cli
out
dec
jno
sub
mov
mov
cmpsl
repz
and
scas
jmp
rclb
adc
push
fmulp
or
mov
mov
inc
stos
lret
jg
mov
std
adc
pop
push
cmp
adc
sti
jne
fxch
inc
mov
or
cmc
add
mov
mov
xorl
xor
jge
pop
add
dec
movsl
adc
jecxz
dec
xor
cli
push
fsub
ret
dec
insl
shl
xchg
js
xchg
mov
orw
imul
out
sbb
mov
sub
aad
ss
outsb
cmp
and
jae
pop
das
inc
lret
jb
xchg
push
push
xchg
xor
das
push
push
cwtl
mov
dec
xor
adc
popa
ror
loopne
std
xor
push
push
aam
add
mov
dec
outsl
or
push
mov
adc
jns
andb
mov
jae
and
lds
cltd
out
insb
xchg
xor
std
xchg
inc
pop
add
xorl
std
test
push
rolb
sub
pop
cmpsl
int
or
or
cmp
outsb
push
or
ss
jmp
push
adc
lock
xchg
scas
out
or
rclb
mov
push
mov
inc
ret
cwtl
jbe
pusha
es
mov
insb
insl
ret
outsb
stos
xchg
jecxz
inc
xor
rol
jge
leave
fnsave
sahf
mov
int3
mov
adc
in
xor
cmpsb
mov
vphaddubq
rcll
popf
imul
jecxz
mov
insl
jmp
imul
xchg
cmp
push
mov
or
mov
or
mov
mov
pop
or
mov
add
mov
cmp
pop
into
xor
cli
dec
and
ljmp
push
push
es
stc
pop
rorb
mov
ret
out
xchg
dec
sub
lods
fst
jns
mov
add
sahf
mov
insl
sub
mov
and
pop
sub
and
adc
inc
xchg
aad
or
out
add
push
jg
testb
jns
mov
int3
divl
mov
scas
mov
cltd
sub
fimuls
ljmp
xchg
add
jle
out
sub
dec
push
lds
or
jns
out
adc
mov
sbb
cmp
sbb
loope
seto
mov
or
test
test
out
xor
sahf
push
jl
adc
lods
mov
jle
aam
and
les
dec
pop
push
mov
pop
ja
and
aaa
mov
aam
lret
inc
loope
xchg
xor
arpl
push
repz
sbb
stos
fstpl
testl
mov
lods
pop
ljmp
lret
add
bsr
or
into
or
jmp
inc
add
outsl
fadd
aaa
test
push
push
inc
pop
mov
jmp
sub
or
test
pop
sbb
pop
xchg
clc
sbb
test
idivl
cmp
ja
arpl
addb
push
xor
mov
push
ss
in
mov
stos
mov
add
xchg
xchg
fisttpll
fwait
dec
loop
sub
pushf
jbe
in
insb
sarb
leave
sbb
sbb
dec
pushf
or
je
shlb
cs
jae
fwait
mov
imul
negb
ret
scas
repz
andl
in
jne
les
sbb
mov
or
fiadds
dec
repnz
or
lds
push
std
cmp
jnp
xor
mov
aaa
sub
push
mov
dec
outsl
cmp
sbb
ret
std
ds
add
and
movsl
test
xchg
add
sahf
mov
jb
cmp
lcall
mov
cwtl
push
fwait
scas
add
and
mov
xchg
inc
sar
gs
cmp
or
cltd
and
sti
jmp
cmp
mov
sbb
mov
cmc
dec
jg
repz
xchg
mov
xor
jle
mov
pop
sbb
out
outsb
push
sub
push
dec
jo
fildl
cltd
inc
mov
jle
mov
fcmovnu
jae
call
mov
mov
push
mov
adc
aas
out
jmp
cmp
insl
dec
cmp
int3
mov
adc
adc
out
sbb
xchg
inc
push
rol
lret
mov
mov
inc
pop
in
movsb
xor
add
cli
rcrl
stc
cmp
fstps
push
pushf
pop
popa
movsl
test
add
jne
xchg
leave
aaa
je
add
or
xchg
push
add
inc
aad
mov
add
out
pusha
notl
outsb
arpl
lods
roll
lcall
pop
inc
movb
aam
lock
mov
outsb
pop
js
xchg
shl
fisttpl
lods
and
dec
outsl
jp
mov
mov
imul
inc
pop
mov
dec
jb
mov
jl
sub
and
int3
nop
sbb
and
jmp
pop
cmpsl
mov
xchg
loope
in
std
into
iret
icebp
xor
pop
push
jb
mov
sub
add
lds
cwtl
int
call
decb
out
je
pop
scas
mov
mov
push
jecxz
or
fistps
jbe
pop
push
outsb
jnp
iret
test
jno
dec
gs
rorl
cmp
jge
mov
jb
hlt
xchg
mov
ffreep
push
xchg
push
mov
sub
jae
or
in
mov
jns
jp
add
add
testl
pop
cmp
jecxz
inc
mov
in
inc
fwait
sbb
inc
jns
inc
cli
lret
adc
push
jns
push
jl
fsubl
in
rolb
std
or
out
shlb
push
shrl
add
push
jle
mov
mov
sub
add
mov
pop
sub
dec
or
add
aaa
xchg
sbb
outsl
popf
data16
in
mov
fsubrl
mov
dec
pop
adcl
leave
jns
cmp
and
mov
lahf
pop
sub
lret
testl
dec
lret
xor
out
fldt
lods
dec
mov
gs
inc
push
mov
shlb
add
pop
pop
sbb
jmp
mov
inc
mov
add
inc
xor
sahf
sub
mov
fsubrs
push
xchg
jg
shr
cmp
and
in
adc
notb
pop
imul
lods
pop
lds
cmpsb
mov
xor
mov
mov
sarb
das
vunpckhps
jl
fdivs
push
ret
divb
gs
jne
mov
adc
test
out
or
or
clc
imul
pop
dec
mov
lahf
mov
es
fwait
mov
leave
gs
cmp
mov
les
mov
fistps
push
lea
and
or
aaa
rorb
mov
aad
loop
xchg
in
add
cmpb
xchg
xchg
stos
out
stos
pop
jne
mov
movsl
xchg
dec
shl
aam
and
stos
mov
xchg
imul
sbb
sbb
pop
lods
cmpsl
mov
das
or
addr16
mov
and
lahf
jmp
and
jns
out
pop
test
fwait
rcll
push
data16
dec
leave
add
xor
loopne
push
push
jp
xor
in
std
outsl
out
jle
and
mov
inc
mov
shrb
aas
scas
out
mov
sub
leave
and
xlat
ret
xchg
pop
sti
loope
cltd
leave
shrb
in
sbb
ret
es
pop
lods
insl
or
mov
hlt
scas
mov
test
xchg
loop
jb
push
push
aaa
unpckhps
test
in
fldcw
jmp
mov
imul
sbb
loope
cmp
repz
ja
int
stos
jecxz
scas
sub
adc
mov
xchg
mov
mov
stos
test
arpl
call
sub
cmp
adc
sub
xor
and
and
mov
mov
xor
mov
in
or
xor
aaa
cmp
into
dec
adc
cmpsb
fs
mov
pop
xlat
icebp
jp
xchg
lea
pop
or
xchg
push
iret
ja
push
pushf
jo
xchg
sub
mov
add
pop
mov
ljmp
or
push
inc
loop
mov
jle
inc
sbb
push
out
aaa
xchg
sti
stos
push
aaa
jle
mov
and
dec
inc
lods
dec
xor
cmp
pop
jp
repz
sbbb
jl
ret
dec
cmpsl
fists
add
je
mov
lcall
pop
push
xchg
inc
dec
add
mov
data16
dec
cmp
popf
jne
and
test
cmp
mov
fisubl
dec
mov
fiaddl
mov
arpl
lret
xchg
or
outsl
jno
loopne
xchg
in
sbb
ds
xchg
pop
fisttpl
lods
push
jg
mov
insb
inc
jo
jecxz
mov
int3
mov
repz
cmp
out
inc
sbb
std
add
mov
cmp
iret
js
jmp
add
arpl
es
decb
dec
fisttps
cld
repz
popa
jae
mov
movsl
jb
lods
adc
out
loop
push
cmpsl
in
xchg
in
imul
inc
mov
hlt
adc
pop
adc
push
jno
pop
outsb
enter
rcll
push
fsts
mov
sub
pop
fdivrs
and
and
lret
xor
in
insl
cli
jmp
pop
gs
mov
callw
mov
cmc
or
xchg
dec
je
inc
sbb
add
pop
or
push
mov
clc
xchg
out
leave
daa
movsb
or
xor
pop
fadds
lock
mov
fs
pushf
add
jecxz
mov
mov
pop
daa
repnz
ds
mov
std
mov
pop
jns
push
mov
js
adc
sub
fcompl
adc
mov
sub
stos
addb
sar
aaa
cs
push
push
arpl
test
pop
jmp
sbb
aad
and
jg
lods
cli
test
pop
jmp
popf
int
jns
ret
add
sbb
repz
sub
in
mov
xor
lahf
cld
and
push
stos
cmp
out
inc
or
mov
jecxz
decl
cli
sub
and
pusha
leave
dec
leave
and
ret
mov
daa
test
or
xor
mov
lahf
add
int
cld
jg
pop
repz
movsb
fisttpll
mov
jle
aad
test
mov
std
mov
ljmp
insb
add
das
pushf
jae
pop
add
xchg
cs
cmp
test
and
pop
jge,pt
int
inc
into
aam
cmp
jo
sub
jb,pn
out
lcall
fadds
test
test
xchg
mov
aad
mov
mov
sub
mov
mov
inc
cmp
jle
adc
adc
repz
push
das
test
imul
bound
adc
jae
jbe
mov
sbb
cmpsb
sub
dec
or
sbb
cmc
jl
and
cmc
jo
push
pop
fwait
mov
pop
xlat
leave
das
add
mov
jbe
inc
mov
push
sbb
cmp
addr16
pop
loop
or
lret
outsb
sbb
push
loope
pop
das
ja
scas
push
mov
js
mov
addr16
scas
adc
fistpll
mov
pusha
emms
scas
nop
popf
push
mov
push
add
jle
mov
adc
lods
les
cmp
jbe
aaa
mov
mov
mov
mov
cli
push
push
fiadds
inc
inc
inc
sub
mov
pop
ljmp
dec
sbb
xchg
roll
dec
out
lods
out
lret
ja
adc
pop
push
out
data16
lea
sbb
movsl
hlt
mov
sar
bound
decl
and
jne
scas
jb
jmp
dec
in
mov
dec
mov
jo
rcrb
pop
into
pop
mov
adc
in
movsb
and
mov
out
xchg
stos
sbb
mov
pop
mov
mov
leave
jnp
ja
fsubr
mov
movb
or
xchg
xchg
xchg
push
jo
mov
loope
sub
adc
jg
hlt
test
in
xchg
pop
shll
fidivrs
ljmp
fidivs
jmp
lret
js
mov
movl
adc
data16
or
ljmp
dec
xchg
mov
jo
xor
jecxz
or
aaa
repnz
mov
add
das
ret
mov
xchg
pop
jbe
ret
rcll
push
repnz
jbe
js
cltd
cs
subl
jo
or
mov
es
xchg
inc
mov
cmp
dec
xor
fwait
cmc
push
mov
and
movsl
popf
in
jmp
movsb
and
jmp
ret
ljmp
pop
sbb
xchg
in
icebp
mov
les
mov
sub
arpl
clc
jge
lods
jno
mov
insl
repnz
cmp
or
cli
out
out
insb
mov
cmc
movsl
jno
and
xchg
adc
in
mov
inc
push
lahf
rcrb
sti
adc
adc
scas
clc
add
mov
adc
jl
rorb
mov
int3
mov
out
or
push
mov
pushf
xchg
outsl
fbstp
aam
lods
lods
pop
pop
mov
dec
mov
repz
iret
push
inc
and
std
loop
stc
cs
push
mov
call
cld
enter
cltd
mov
stos
icebp
lock
push
adc
lds
adc
or
data16
xor
andl
push
push
adc
inc
lods
mov
ds
mov
mov
or
loopne
xchg
cmovbe
aaa
sub
mov
mov
inc
dec
stos
es
xchg
jo
mov
mov
leave
and
pop
push
push
xchg
inc
les
inc
adc
icebp
lret
pop
adc
cmp
sbb
ljmp
jbe
xor
mull
out
cltd
in
xor
mov
das
fs
loope
mov
insl
fwait
scas
push
mov
into
stc
movsl
lods
shl
pushf
jecxz
dec
jmp
pop
and
leave
pop
fcmovne
add
xlat
push
insl
and
mov
insl
mov
pushf
aam
add
xchg
push
push
push
repz
or
out
mov
cmp
or
in
stos
jb
pop
pop
pusha
pop
mov
call
xchg
fst
fisttps
mov
push
mov
lret
xchg
insl
mov
mov
addr16
dec
cs
mov
movsb
nop
lock
decl
xor
shr
add
adc
sub
sti
fsubrs
pop
adcb
fbld
mov
lea
outsl
leave
add
ja
ljmp
mov
pop
cltd
sbb
pop
nop
shrb
pop
addb
test
inc
mov
mov
loopne
adc
sbb
mov
mulb
cltd
push
dec
clc
pop
jnp
outsb
push
ret
in
scas
push
mov
mov
cmp
stc
push
mov
not
push
sub
mov
orb
mov
int3
outsl
pop
or
push
jns
test
adc
cmp
ljmp
adc
into
adc
aas
xchg
loope
ficoms
push
incb
mov
scas
into
pop
xor
shlb
jns
cmp
aas
or
lcall
sbb
cwtl
movb
mov
mov
mov
andl
jns
push
xchg
add
insl
xchg
pusha
nop
push
popl
mov
arpl
jle
nop
bound
and
imul
out
fnstsw
mov
in
xchg
sub
jmp
push
pop
or
sub
bound
xor
stos
stos
call
jge
sub
push
push
in
addr16
sbb
es
cmp
stos
mov
imul
pop
inc
xor
fldz
inc
stc
jmp
rolb
cmp
mov
mov
arpl
push
mov
outsl
inc
adc
mov
outsb
xchg
mov
mov
mov
jo
lret
mov
mov
cmp
dec
in
inc
add
inc
leave
les
imul
cs
or
xchg
or
loop
sub
mov
int3
push
add
testl
test
inc
rcl
add
mov
pop
rorl
pop
fs
adc
push
cmc
add
mov
mov
inc
and
jae
push
in
push
inc
fwait
cmp
repz
jmp
outsl
mov
sbb
es
mov
and
cmp
fdiv
mov
jge
dec
lea
jl
clc
hlt
loop
add
cmp
and
jmp
pop
cmp
and
pop
ret
sub
mov
ret
and
or
inc
inc
mov
lahf
pushf
mov
pop
ret
lcall
fsts
fldenv
xor
insl
mov
je
cmovo
iret
std
scas
fsub
das
lock
xchg
xor
outsl
cmp
into
test
int
xlat
sub
test
jl
inc
xchg
es
adc
repnz
sub
and
enter
mov
mov
push
sti
pop
mov
mov
jge
mov
cmpsl
sub
pop
sub
xchg
test
xchg
pushl
fs
dec
pop
push
jmp
and
cmp
sbb
add
rcrl
pop
bnd
ret
push
push
jge
sti
push
push
mov
pusha
inc
loop
push
xchg
or
jbe
cmp
cs
or
sar
dec
mov
or
mov
ljmp
negb
jle
fidivrs
and
inc
or
clc
inc
lods
test
daa
inc
sbb
dec
das
es
fsub
fistpl
sub
lret
cltd
shll
idivb
pop
sti
jmp
in
pop
out
inc
adc
cs
and
loop
lret
lret
push
xchg
lret
gs
fmul
dec
movsl
pop
pop
push
popf
sbb
scas
cmp
outsl
lahf
test
or
ja
dec
adc
xlat
inc
fcoml
pop
iret
pop
shl
mov
std
sub
xorl
dec
adcl
jb
and
inc
inc
xor
hlt
sub
xchg
out
xchg
push
jbe
and
in
sbb
inc
xchg
popa
pushfw
es
lcall
aas
div
cmp
inc
xchg
inc
ljmp
pushf
cmp
cld
lds
loop
in
repz
stos
xor
int3
jg
stc
cs
int3
cs
mov
lods
loop
movsl
mov
lcall
add
mov
stc
es
cld
dec
les
cmp
mov
jb
mov
lods
mov
add
mov
jle
jo
stos
and
ret
loopne
cmp
ja
cmp
xchg
popf
xchg
pop
cmp
aam
das
mov
jnp
jb
xchg
mov
lods
lods
ret
sbb
sar
rorl
cmp
xor
pop
jp
inc
cmp
sub
out
fwait
cs
xchg
lcall
xchg
ret
enter
pop
xor
andl
add
and
in
shrl
push
aaa
mov
jle
mov
enter
and
test
cmp
mov
ret
out
insl
rcl
popa
icebp
or
push
jecxz
mov
cmpsl
aaa
test
xchg
xchg
mov
mov
add
or
stc
addr16
outsl
sbb
in
sbb
adc
outsb
adc
cmp
mov
aas
cmpl
pop
mov
jb
sbb
repnz
fadd
sbb
cmp
ljmp
stos
adc
add
pushf
fmull
mov
inc
test
testl
add
aam
gs
jecxz
or
and
or
rcl
add
call
mov
out
or
mov
lcall
cli
leave
pop
xor
pop
mov
jae
mov
rcll
inc
outsb
mov
push
insl
mov
fwait
cmp
sub
mov
mov
add
sti
notb
pop
imul
jle
inc
adc
jmp
fstpl
jg
or
fcomps
andb
cmp
mov
mov
mov
ret
mov
movzwl
mov
int
push
cmp
inc
jo
mov
mov
xchg
addr16
imul
rcrl
loope
push
bound
cmpsl
push
fwait
xchg
cmpsb
imul
jbe
sbb
sbb
testl
mov
test
and
mov
sub
xlat
fldenv
xor
outsb
repz
shrb
adc
das
and
mov
adc
push
sti
fisttpll
dec
daa
sbb
iret
or
int
pusha
xchg
jmp
push
movsl
push
xchg
xor
movsb
out
xchg
cmp
jne
mov
sbb
fidivs
cmc
ds
inc
jmp
mov
mov
stos
insl
add
inc
cmp
dec
push
test
push
out
mov
inc
fdivr
jnp
pop
movsl
add
retw
mov
icebp
jmp
push
dec
outsb
aaa
mov
sub
bnd
xor
stc
cs
jb
gs
sbb
push
sbb
add
std
mov
push
mov
mov
nop
fildl
push
sbb
cmp
in
lds
fimull
inc
sbb
jp
cld
push
xorb
lcall
popf
mov
add
fstps
push
or
jmp
bound
cli
sub
sub
cmp
out
aam
rcrb
pop
lock
clc
adc
fs
or
stc
dec
not
int
pop
xchg
add
xchg
mov
cwtl
notb
js
ljmp
clc
testb
cmpsl
inc
sub
or
pop
xchg
insl
insl
add
xchg
fwait
lahf
and
jae
fxch
mov
push
xlat
lods
inc
dec
sub
js
push
pop
xchg
lret
out
out
jne
sahf
dec
sub
pushf
stc
add
out
cs
mov
stos
test
mov
imul
inc
push
xor
dec
sbb
sub
pop
dec
xor
jno
out
stc
loopne
divb
jl
mov
push
aam
push
push
or
andl
adc
js
add
or
das
jne
mov
inc
in
rorl
dec
popf
xchg
imul
push
test
and
mov
mov
adc
jnp
out
popa
call
jns
iret
inc
mov
repz
push
sbb
aad
lock
shll
cmpsl
mov
push
mov
mov
stos
fsubl
jecxz
nopl
out
mov
iret
test
push
push
scas
dec
aam
shll
sub
lret
jno
setno
hlt
not
test
pop
push
rcl
das
xchg
jb
mov
xor
aas
aad
sbb
add
jge
add
lret
and
ds
pushf
mov
inc
push
jns
add
add
mov
test
pop
inc
mov
pop
mov
test
sub
mov
pusha
inc
rcll
mov
pop
push
mov
adc
out
lods
mov
sbb
pop
stc
and
subl
cli
jo
push
and
sbb
aad
cmovns
push
sub
shl
cmc
inc
test
cltd
loop
inc
lods
lcall
jne
xchg
dec
fwait
loopne
inc
ficompl
push
shlb
push
jmp
out
xchg
push
pop
fcompl
push
bound
xchg
sbb
jne
lods
sti
add
dec
jne
ret
mov
jno
test
outsl
int3
cli
xchg
rcr
sub
add
push
into
push
xor
out
jns
xchg
jge
negb
sti
push
std
mov
or
jbe
test
leave
jg
push
push
dec
shlb
in
push
shrb
sub
inc
enter
in
push
test
in
in
jge
test
jle
sti
jb
lret
mov
leave
add
iret
lods
mov
lods
jo
arpl
pop
movzbl
xchg
bound
xor
jg
pop
push
push
fsubr
add
mov
push
xchg
push
xor
add
sbb
cmp
xor
add
cmp
push
push
sahf
out
faddl
and
rcrl
xchg
mov
mov
stos
xor
sub
out
jnp
sar
data16
xchg
adc
push
add
rolb
xor
test
bound
cltd
pop
fwait
and
jp
xchg
or
pop
fbld
inc
fxch
sbb
push
jg
idiv
push
cmp
add
pop
push
rcl
int
inc
cltd
dec
fldcw
adc
mov
cld
stc
hlt
jne
fwait
sub
cmp
cwtl
add
inc
add
cmp
inc
or
inc
mov
pop
mov
inc
xchg
push
mov
movsb
pop
push
inc
adc
mov
cmp
in
xchg
adcl
or
mov
mov
mov
fdivs
cmp
shrl
stc
mov
out
add
popf
sbbl
add
cmc
outsl
shrb
cmp
mov
dec
sub
sbb
mov
fs
jb
push
cmp
and
lcall
mov
mov
mov
pop
xchg
cmp
es
sbb
fisttpll
lods
aaa
shlb
cs
sti
adc
inc
shlb
push
decl
mov
inc
stc
outsb
cmpsl
jle
mov
lahf
or
xchg
sar
faddl
imul
andl
inc
mov
call
in
pop
xor
xchg
xchg
imul
lcall
pop
push
mov
lods
daa
mov
lods
movl
lahf
sti
mov
adc
xchg
iret
loopne
or
repz
out
cmp
mov
pop
leave
push
push
pusha
aaa
mov
inc
add
gs
pop
inc
ds
loopne
aam
dec
cmp
and
insb
leave
dec
imul
call
mov
sbb
or
call
jmp
push
loopne
push
lds
mov
js
jns
lds
icebp
imul
cltd
jl
cld
pop
cmp
cmp
imul
add
mov
xor
cmpsb
cmpsl
xlat
ror
jbe
inc
shlb
inc
or
xor
mov
jb
fcmovnbe
sbb
test
int3
cmp
xor
cld
mov
adc
shll
mov
mov
mov
test
mov
adc
push
leave
push
pushf
mov
nop
jns
loope
cmpsl
fs
out
adc
push
lahf
mov
mov
ficoms
xchg
int
or
lea
jg
cmp
cmc
lds
jmp
mov
test
data16
cwtl
mov
lcall
xchg
rol
jl
bound
daa
movsb
xor
test
fwait
mov
fs
add
stc
aas
pop
mov
mov
xlat
inc
pop
mov
cli
ja
mov
mov
push
cli
cltd
test
mov
inc
mov
scas
push
add
or
dec
movl
rcr
jecxz
mov
sub
ret
dec
and
add
ja
inc
cmp
and
push
push
in
pushf
fneni(8087
pop
inc
push
inc
push
cmpsl
fcomps
inc
addr16
outsl
and
xchg
inc
inc
dec
in
es
sub
inc
subl
and
sbb
iret
inc
cwtl
push
xor
xchg
fdivl
repnz
repz
stc
xor
js
shl
call
stos
adcb
mov
mov
xor
xchg
es
aas
adc
loop
or
sti
std
out
clc
arpl
pushw
add
les
dec
fcmovu
mov
pop
insl
xchg
ds
push
cmp
cs
push
lea
dec
in
cmp
stos
inc
xor
int3
pop
sub
shrl
dec
xor
in
pop
loopne
jno
ss
jb
stos
incl
push
cmp
test
mov
push
inc
push
stos
in
imul
sub
loopne
je
mov
dec
addr16
cmp
in
outsl
add
bound
sub
addr16
ret
mov
push
xchg
dec
mov
ret
insl
pop
mov
mov
cmp
xchg
add
psllw
mov
jo
adc
push
dec
push
gs
or
push
mov
rorb
out
nop
push
in
sahf
addr16
sub
sbb
push
xchg
pop
out
lcall
push
push
cmp
xlat
xor
into
and
mov
dec
popa
add
xchg
sbb
add
or
mov
lahf
mov
shl
add
mov
sub
mov
or
push
int3
lea
mov
cli
pusha
sub
push
es
mov
jo
mov
das
add
push
test
dec
xchg
sbb
stos
xorl
clc
movsl
add
xor
test
push
hlt
push
mov
xchg
outsb
and
mov
in
sub
add
mov
loop
scas
adc
jge
adc
stc
jg
lods
xchg
xor
cmpsl
pop
mov
cmc
popf
or
xor
data16
popa
into
inc
jle
insb
dec
xchg
int3
aad
cmp
mov
and
add
movsw
pop
push
out
jnp
insl
mov
mov
enter
cltd
adc
cmc
ljmp
jecxz
lahf
and
scas
rcll
sbb
sub
std
cmp
insb
sti
ja
cmpsb
cmp
pusha
haddpd
popf
mov
jo
add
cld
std
pop
cmp
sub
mov
hlt
les
pusha
cmp
inc
pop
in
das
push
adc
lret
inc
repz
cmpl
xchg
mov
shrl
mov
sbb
push
xchg
loop
inc
xor
andb
jmp
inc
sbb
in
jne
movb
adc
into
or
xchg
popf
repz
addl
js
jns
rorl
test
adc
adc
pop
lahf
je
adc
dec
mov
shll
mov
in
shrl
packsswb
ja
mov
mov
pop
jae
ljmp
loopne
mov
leave
cmp
jecxz
ja
mov
ja
fsubs
es
lcall
mov
mov
jno
xchg
add
or
xor
or
pop
adc
jecxz
push
rcll
fcomp
int3
sub
sub
daa
cwtl
jb
cmp
ficompl
into
adc
sbb
mov
cli
out
mov
xlat
sub
js
outsb
out
mov
fstpl
sub
mov
sbb
pop
cmp
lahf
jae
sbb
call
cmp
mov
cmpsb
pushf
xor
dec
xor
mov
or
loopne
dec
in
cmc
or
pop
pop
iret
or
push
imul
pop
pop
cld
and
or
clc
dec
mov
sub
pop
nop
js
icebp
icebp
mov
cwtl
orb
mov
and
loop
lds
bound
pop
lret
dec
or
insb
arpl
mov
mov
sbb
ja
add
sbb
ffreep
jne
ret
shrb
mov
or
mov
pop
push
stos
int
cmp
xor
notl
jno
cmp
push
lret
inc
shll
aad
mov
dec
xchg
xchg
xor
mov
push
gs
fidivrl
push
xchg
mov
adc
rorl
insb
add
test
scas
loop
inc
popa
inc
dec
shrb
jg
cs
lds
sar
std
or
test
cmp
popa
js
into
rep
inc
out
aam
imul
mov
mov
rcrb
jns
and
repz
pop
loopne
sub
mov
mov
inc
inc
mov
mov
add
mov
pop
cmpsb
cmpl
sub
sub
daa
mov
sbb
push
stos
sub
outsb
arpl
cmpsb
add
repnz
bound
lret
dec
adc
mov
push
jns
in
hlt
sub
jmp
and
and
adc
gs
xor
es
cmp
add
push
gs
ret
adc
pop
pop
je
xor
add
out
mov
popf
lock
das
inc
xchg
arpl
add
inc
lock
push
fdivp
sub
cli
in
mov
mov
not
insl
lahf
dec
inc
jmp
pop
and
js
sub
ficomps
push
lea
pushf
push
fwait
es
mov
movsl
and
push
and
stos
iret
cmpsb
popa
lods
add
or
jle
push
cmp
add
fcmovb
icebp
imul
nop
je
adc
out
cmp
data16
mov
adc
cmpsb
clc
and
sbb
loop
movsb
imul
push
lcall
scas
jecxz
cmc
cwtl
je
adc
in
insl
inc
cmp
popa
inc
out
nop
cltd
mov
xchg
out
push
mov
and
scas
pcmpeqd
sbb
add
movsb
ds
sbb
mov
pop
jns
and
loop
sub
and
shll
mov
sub
jbe
or
rcrl
loope
and
mov
aaa
jae
aas
adc
std
mov
leave
call
cmpsl
loope
clc
and
pop
and
push
pop
rorb
sub
cmp
jnp
and
jbe
xor
bnd
jecxz
nop
outsb
mov
ret
or
es
fstpl
in
inc
cmp
icebp
ja
cmp
jo
test
pop
scas
js
pop
popl
imul
insl
repnz
sti
cmpsl
les
pop
pop
ds
mov
add
sbb
cmc
in
push
jecxz
in
mov
ljmp
cwtl
mov
jo
popf
push
pusha
inc
scas
out
loop
pushf
dec
inc
push
icebp
flds
mov
test
test
adc
in
das
outsl
adc
or
mov
gs
cmpsb
mov
sbb
pop
shrl
push
mov
adc
aas
mov
push
lret
fdivrs
xor
or
movsl
add
aam
into
jbe
test
subb
pop
fists
data16
test
xchg
dec
mov
fdivrs
mov
or
repnz
sub
push
insb
insb
mov
cmpsb
sbb
push
cmpsl
mov
fistpll
or
xchg
mov
cmp
dec
fimuls
and
jecxz
adc
scas
dec
xchg
mov
testl
das
sub
mov
add
fstps
sbb
dec
inc
scas
gs
sub
sub
sub
mov
jp
cld
jb
adc
add
push
faddl
xor
pop
clc
cmp
dec
push
xchg
out
mov
imul
and
dec
sbb
sbb
xchg
cld
mov
jp
xor
sbb
pop
sub
sahf
mov
jge
cmpl
iret
or
cmp
cmp
jno
mull
aad
pop
fwait
xor
jne
sahf
pop
jae
sub
pop
mov
dec
cli
mov
adc
iret
cmp
cmpsl
test
mov
fcom
xor
lret
mov
rcrb
sub
addl
lret
jo
or
pusha
xchg
in
push
or
jb
mov
xchg
sub
in
mov
push
push
and
into
fistpll
test
int3
adc
or
mov
ds
movsb
mov
push
rclb
jb
or
mov
adc
in
and
aam
in
out
or
adc
sti
data16
or
sub
push
stc
mov
ret
loope
rcrl
jg
es
inc
dec
mov
or
push
jge
ret
les
mov
pop
fidivl
ffreep
int
sbb
iret
aas
addr16
mov
adc
pop
sub
dec
mov
sbb
jg
jmp
arpl
mov
xor
inc
cmp
ss
xor
mov
ret
cmpsl
add
cs
fidivrs
xor
fs
cmpl
mov
lcall
cmp
cmp
iret
mov
adc
mov
mov
add
adc
popa
mov
mov
push
fisttpl
add
adc
leave
mov
cmpsl
sbb
les
jnp
adc
lock
repnz
jmp
push
ret
addr16
repz
add
scas
jo
inc
xor
popf
jno
cmc
dec
jge
mov
adc
cmp
push
fnstenv
aam
pop
stos
ret
sbb
adc
inc
aas
mov
gs
pop
add
popa
in
sbb
xchg
sbb
mov
mov
ret
rol
xor
pavgw
in
jge
adc
push
cmp
and
iret
mov
mov
nop
stos
mov
or
or
out
lea
enter
rorl
sbb
mov
push
out
xchg
inc
sub
iret
cmpsl
fsubrs
pusha
push
or
int
cmpsb
xchg
je
iret
dec
aaa
nop
fsubr
clc
shlb
push
sub
jb
outsl
push
imulb
out
sub
push
and
stos
daa
cmc
adc
aas
stc
cmp
jl
rclb
dec
es
gs
into
loopne
mov
inc
andl
mov
lret
sbb
cmp
stos
aad
xor
jae
jle
xchg
lea
aad
loopne
pop
xchg
jnp
inc
adc
loope,pn
mov
sub
les
mov
pop
pusha
test
pop
clc
cmp
pop
outsl
mov
test
sub
add
xchg
sub
mov
movsl
clts
ds
imul
into
sub
sub
in
cmp
xor
dec
mov
into
add
push
addb
push
ds
cmp
adc
add
xrelease
dec
mov
mov
into
lock
pop
cs
push
sbb
ss
sarb
mov
xchg
cld
and
mov
loop
push
std
icebp
push
push
inc
sub
lock
in
out
out
mov
aaa
sti
insb
xchg
xlat
jmp
cmovnp
mov
stos
inc
sbb
cmp
je
stc
pop
xchg
mov
shl
cmpsl
cmp
or
dec
mov
push
data16
orb
xlat
dec
add
in
or
rorb
movsl
fnstsw
scas
cli
ret
lock
pop
das
hlt
jg
inc
and
mulb
push
pop
roll
aam
xchg
leave
scas
icebp
mov
fsub
add
xor
call
lds
mov
xor
hlt
fiadds
xor
loopne
add
pop
mov
adc
pop
loope
shrl
jne
loop
fs
and
inc
mov
xchg
int3
sbb
adc
mov
inc
add
xchg
jle
xchg
in
pop
shll
inc
jmp
push
loope
sahf
mov
or
call
mov
shl
add
mov
adcb
pop
lret
lods
int
push
mov
stos
mov
lahf
shl
popa
lahf
mov
cmp
cmpsb
mov
cmpsb
imul
in
mov
stc
pop
dec
mov
adc
into
pop
cs
and
and
test
arpl
andb
or
dec
or
cmpsl
push
loopne
push
mov
das
xor
jmp
push
stc
xchg
mov
in
incb
jb
insl
daa
repz
fsubrl
lcall
lret
test
xor
jnp
push
fmuls
adc
mov
push
jmp
mov
xchg
mov
mov
cmp
rorb
out
dec
dec
inc
pop
push
cmpsl
addb
cs
cmp
mov
jmp
es
sub
lcall
adc
pop
jnp
mov
out
mov
inc
fisttpll
jle
mov
mov
mov
or
add
fidivrs
mov
std
call
add
insb
stos
fs
scas
mov
inc
adc
ds
jp
pop
das
aaa
jge
int
out
push
or
loope
mov
sbb
sbb
and
add
testl
jmp
insl
iret
xor
incb
dec
loopne
xchg
rcrb
in
fxch
cwtl
xchg
inc
daa
pop
popf
repz
test
mov
jp
cmp
inc
into
cmp
push
push
jne
push
or
and
das
icebp
out
pop
push
mov
dec
mov
ret
mov
dec
mov
mov
pop
mov
leave
loope
mov
loope
outsl
xchg
xchg
sti
mov
repnz
je
frstor
xchg
and
data16
fiaddl
mov
inc
xor
daa
mov
inc
int3
jmp
push
add
cmpl
lods
loopne
pop
iret
sub
loope
cmp
test
jnp
cmp
test
stos
fsubr
out
cmp
hlt
pop
cmp
out
in
dec
rcrb
cmp
lret
dec
mov
jae
clc
mov
pop
xchg
in
shlb
jp
cli
mov
or
ljmp
ja
jl
pop
stos
hlt
daa
mov
lahf
push
push
dec
lret
xchg
jns
repz
dec
cli
cmp
xchg
pop
rolb
loopew
ret
adc
data16
add
div
pusha
icebp
push
popf
jae
push
shll
adc
pop
xchg
xchg
pop
or
sub
adcb
ficompl
xor
rclb
gs
jo
cs
adc
mov
add
jo
push
jne
mov
jno
fs
int3
cmc
inc
cmp
lea
icebp
sub
and
lock
jnp
fwait
add
jmp
ds
cmp
je
pop
ljmp
fwait
in
jp
lret
fcmovu
scas
and
pop
mov
add
jb
filds
mov
mov
insl
mov
scas
fisubrl
cmp
xchg
sbb
imul
and
call
cwtl
dec
jmp
scas
out
dec
add
out
rol
pushf
rorl
out
add
jns
mov
std
add
mov
je
aas
dec
lock
mov
rcl
mov
or
cmp
das
out
lahf
ss
xor
fnstcw
push
sub
inc
jecxz
cmp
ret
cltd
lea
sbb
jmp
test
mov
out
jb
cs
out
adc
loopne
aam
cmp
sbb
pop
add
les
jae
mov
fstl
jno
int3
mov
ljmp
jnp
and
mov
insl
shll
pushf
add
xchg
lahf
loopne
and
aas
xor
push
popa
add
movsb
ret
lret
sub
sbb
mov
clc
cltd
imull
sbb
push
jle
mov
cmpl
pop
inc
aam
mov
aas
daa
lds
scas
push
jmp
mov
cmpsl
nop
adc
or
ret
jmp
push
jae
jno
adc
dec
loop
inc
stos
inc
xchg
je
jne
mov
mov
or
hlt
dec
xor
dec
test
stc
mov
arpl
xchg
inc
push
sbb
pop
lret
test
add
cld
shufps
bound
stc
mov
shl
fcompp
mov
adcl
push
mov
ficomps
adc
sub
in
hlt
stos
insb
ljmp
stos
cld
add
dec
stc
xor
cld
or
push
lret
ja
idiv
mov
fcomps
xchg
pop
cmp
daa
mov
mov
jbe
stc
cld
out
pop
or
push
mov
hlt
inc
sahf
jno
cmp
adc
fiadds
push
hlt
sbb
mov
cmp
or
outsl
cmpsl
sbb
stc
xchg
repz
add
mov
call
nop
fcomps
and
sbb
sub
pop
hlt
inc
pop
mov
jno
lret
ret
std
gs
pop
mov
xchg
add
pushf
and
push
xor
out
jnp
cmp
push
out
mov
cmp
fucomip
stc
arpl
dec
in
negl
cld
nop
dec
cltd
in
insl
stc
aas
push
jne
sub
mov
test
lret
call
adc
mov
fcoms
mov
xor
add
or
leave
fmul
mov
bound
repz
mov
lret
mov
mov
aam
sahf
xchg
sub
rcrb
xchg
and
add
icebp
sar
pusha
mov
aad
mov
inc
pop
jne
dec
les
xor
pop
sbb
mov
push
lahf
nop
orl
cli
mov
jnp
je
cmpsw
loopne
dec
mov
lods
dec
mov
test
cltd
aaa
movhps
lahf
sarb
dec
mov
enter
inc
and
aad
lcall
shrl
pop
scas
aas
addr16
xlat
repnz
adc
inc
push
push
mov
negl
cmpsb
pushf
adc
aam
cmp
mov
out
popa
std
hlt
andl
movl
and
adc
inc
xchg
scas
push
fnstenv
sub
push
cmp
push
fcoml
sbb
iret
or
outsb
push
ret
scas
loope
inc
fcoms
sbb
fwait
xor
lods
test
cltd
out
call
xor
scas
rclb
sub
shlb
test
mov
mov
inc
popf
jecxz
daa
fs
sbb
xchg
xchg
lods
push
arpl
or
loopne
mov
mov
and
aam
xchg
adc
stos
loop
ja
int3
test
xchg
jmp
dec
es
std
or
sbb
inc
lods
fs
addb
dec
cli
les
jp
fsubrp
sub
mov
jmp
mov
lock
test
daa
mov
leave
sbbl
pop
iret
cwtl
sub
outsl
pop
loop
sbb
pusha
leave
test
out
add
rolb
out
adc
ljmp
mov
jae
cmp
pop
add
push
xor
loop
inc
daa
cmp
cmp
inc
jbe
shll
jmp
inc
add
fwait
add
cmc
addr16
push
out
xchg
stc
fcomps
cld
mov
ret
lea
pop
adc
ficomps
pop
mov
scas
es
pop
push
or
daa
out
movsl
jecxz
mov
mov
inc
movb
inc
popf
mov
push
xor
inc
addr16
xor
shrl
mov
leave
std
mov
divl
and
loop
dec
mov
or
mov
mov
imul
int
idiv
add
push
push
js
xchg
cmpsb
push
enter
js
ljmp
dec
mov
int3
sbb
enter
popf
cmp
daa
push
mov
xchg
je
outsl
add
add
js
aad
jb
imul
pop
inc
xchg
in
in
jp
or
filds
mov
sbb
mov
pusha
push
jg
or
push
aaa
cmp
add
xchg
jecxz
leave
pop
pop
add
xor
pop
mov
mov
cwtl
outsl
bound
cmp
xchg
mov
push
dec
rorl
mov
nop
jae
fsubrp
mov
mov
mov
xor
sbb
lahf
xchg
add
bound
mov
in
mov
lahf
adc
xchg
mov
xchg
dec
leave
mov
or
call
scas
outsl
pop
xchg
mov
jb
cmp
or
aad
pop
lods
or
cmpsl
pop
or
jbe
mov
mov
mov
xor
xchg
mov
test
ljmp
out
dec
lcall
divl
pop
outsl
scas
jecxz
jb
fwait
mov
mov
orl
insl
dec
loopne
in
loop
and
in
lret
mov
or
sbb
das
test
jmp
inc
mov
xor
xor
mov
xor
or
pop
rcrl
aas
cld
dec
stos
mov
mov
jae
jp
and
out
lods
icebp
fcoml
sub
pop
fsts
loopne
or
jns
pop
out
sbb
out
inc
xchg
cmp
fisubs
or
xchg
shrb
and
pop
fwait
call
imul
int
sarl
jbe
cmp
inc
sbb
xor
xor
das
xor
std
cmp
testb
mov
dec
js
jno
mov
fwait
cmp
xchg
pushf
popf
add
jne
cwtl
fwait
test
dec
mov
mov
jge,pt
cmc
pop
cmpl
sub
and
pop
ja
pop
ds
nop
xchg
sub
sub
std
xor
mov
mov
loop
push
jecxz
push
push
pop
inc
ja
push
daa
pop
mov
xchg
xchg
clc
arpl
add
aad
daa
mov
and
jp
sbb
mov
bound
rorb
jae
inc
gs
push
fmul
jbe
sbb
inc
jmp
or
pop
xor
dec
dec
inc
push
mov
inc
enter
jge
repnz
test
push
add
or
adc
cmpsb
or
or
adc
jo
cmp
and
sbb
mov
xchg
hlt
sbb
jnp
cmp
das
cmp
shll
popa
push
xchg
cmpsl
idivl
pop
jmp
sub
dec
lret
fists
icebp
clc
jae
bound
subl
xchg
push
iret
shll
xchg
cmp
pop
or
out
cmc
pop
gs
push
pop
pop
leave
loopne
add
cmp
mov
jo
stos
dec
jbe
fidivrs
mov
xchg
fdivrp
adc
pop
aas
outsb
sahf
mov
andb
in
int
mov
pop
ret
cmpsl
mov
mov
or
dec
mov
ficompl
jo
shlb
sahf
rcr
push
push
loop
std
in
mov
push
inc
iret
daa
daa
mov
xchg
sbb
clc
cmp
and
adc
lcall
mov
push
xchg
and
repz
fstpt
mulb
sub
iret
nop
mov
xchg
adc
fs
cld
rcrl
aam
out
mov
jmp
adc
mov
jp
test
sbb
popf
dec
pop
jecxz
push
inc
test
jmp
mov
sub
in
out
xchg
jns
adc
cmp
xchg
push
in
add
jg
sub
push
cld
in
fsubrl
sub
loop
push
xchg
sbb
xchg
loop
add
divl
test
stos
push
inc
bound
mov
lods
push
outsl
cltd
std
cmpsl
mov
loop
mov
jecxz
leave
mov
pusha
lods
lret
mov
fs
jnp
pusha
sbb
jmp
add
adc
inc
adc
sub
cmpsl
xor
pop
lahf
data16
je,pn
and
mov
ljmp
das
adc
lret
divl
popf
sub
sub
mov
call
mov
ja
nop
fisttpl
out
imull
mov
cmc
xchg
push
ret
gs
mov
sbb
add
ffreep
popf
dec
and
loopne
lods
pop
push
ljmp
arpl
imul
out
lods
out
jle
jmp
test
xchg
jne
int3
daa
out
pop
inc
or
dec
insb
jnp
mov
leave
push
insb
jne
lcall
addr16
cli
mov
pop
sbb
das
sub
sbb
push
mov
cmp
mov
add
mov
mov
push
and
cmp
mov
jbe
pop
clc
cwtl
dec
lds
out
add
mov
ds
insl
scas
cmp
pop
sbb
rorb
xor
aaa
pop
hlt
mov
jae
jl
push
cmp
ja
ja
cmpsl
cli
mov
hlt
aaa
lret
lds
and
sti
sbb
adc
jnp
mov
sbb
test
js
mov
loope
fwait
movsb
jne
pop
jle
pavgb
xor
out
mov
jae
inc
xchg
shrb
outsl
cmpl
or
push
ror
mov
lock
inc
jne
inc
movsb
aaa
in
cld
aam
mov
sub
bound
adc
mov
mov
stos
repnz
das
out
sbb
jge
push
sbb
bound
mov
je
xchg
js
lods
ret
addr16
sub
xchg
in
fadds
pop
arpl
pop
pop
pop
mul
mov
test
push
mov
pop
sbb
sarb
call
jmp
inc
ja
mov
cmp
cli
mov
sqrtps
pop
fisttps
pop
pusha
fidivrs
or
test
lds
adc
cmp
dec
mov
push
push
orl
push
push
test
enter
mov
push
ljmp
sub
orb
mov
add
ficomps
loope
js
lds
cmp
loopne
iret
jno
pusha
dec
mov
aam
jl
cli
xor
sbb
stos
test
inc
loop
mov
jno
dec
mov
inc
test
push
pop
cli
rorl
movl
insb
je
out
push
sbb
mov
test
cmc
out
loop
test
rclb
lds
or
aaa
jae
jae
pop
xchg
andb
xor
cmp
lods
mov
mov
add
sbb
or
cmpsl
mov
inc
fucom
mov
pushf
xchg
cmpsl
inc
dec
and
je
or
xchg
mov
sub
sbb
stos
sbb
fcmovbe
movsb
repnz
mov
sub
cltd
insl
sbb
xchg
inc
rcl
mov
xor
sbb
scas
ss
aaa
lds
iret
outsl
pop
cmp
loopne
hlt
pusha
imul
nop
cmp
int3
add
and
lods
jl
xor
cld
sbb
sbb
jae
ljmp
jno
testb
ds
out
movsl
xchg
ja
in
pop
inc
xchg
ss
and
xsavec
stc
dec
test
cmp
jp
inc
loopne
cmp
pop
in
adc
stc
movsl
insl
push
sar
stc
adc
xor
fs
leave
fiadds
inc
clc
out
out
inc
xchg
sub
adc
push
addl
outsl
out
popf
mov
push
bound
lcall
sti
or
sarl
and
mov
fcomps
xchg
movsb
or
add
dec
and
mov
imul
sar
lods
adc
in
add
gs
mov
loope
fdiv
shll
xchg
sub
push
out
dec
cli
jmp
daa
fcmovb
add
cmp
mov
pop
loopne
jnp
jmp
and
es
mov
or
je
aad
mov
loopne
fisubl
mov
mov
mov
pop
sub
mov
dec
js
mov
and
aas
jno
or
int
and
inc
sbb
cmp
add
dec
stos
mov
mov
popa
jmp
mov
ljmp
fwait
gs
mov
xchg
dec
pop
jnp
sbb
sarb
jp
inc
mov
shrb
mov
xor
imul
jle
cli
jbe
lods
mov
lret
pop
mul
inc
iret
pushf
gs
inc
scas
xor
dec
mov
and
in
fdivl
cmpsb
mov
bound
ficompl
mov
and
xchg
fsubrl
int
sub
pop
or
mov
dec
jae
outsl
ret
testl
mov
sub
sub
jecxz
subl
cmp
jmp
mov
sbb
mov
imul
add
popa
jns
pop
add
and
sbbl
pop
loope
and
mov
lretw
adc
jle
pop
inc
and
push
mov
test
inc
das
sub
stos
scas
lds
mov
data16
clc
pusha
pop
inc
sbb
test
adc
sub
addr16
cmpsb
std
xor
push
or
paddsw
lcall
jle
cli
inc
adc
mov
push
incb
adcb
mov
mov
pusha
inc
adc
out
dec
mov
in
adc
int3
sub
xor
mov
push
cmp
sbb
and
adc
inc
test
leave
and
add
push
push
sub
sbb
xor
xor
int
fstl
ljmp
cmp
in
inc
cmp
and
orb
fwait
sub
mov
and
cmp
mov
push
sbb
jl
pusha
mov
bound
push
sub
sub
ja
inc
mov
inc
mov
inc
test
scas
cmpsb
out
adc
pop
adcl
xchg
jmp
sti
cs
sub
sbb
jmp
and
sub
sahf
dec
xor
sub
adc
mov
xchg
mov
adc
jecxz
inc
mov
int
mov
out
imul
cmpl
and
pop
rol
cwtl
pop
pop
stos
mov
cli
mov
lods
cmp
pop
adc
cmp
xchg
out
push
inc
sbb
loop
fmull
or
aam
adc
push
mov
lds
cmp
orl
push
hlt
test
jp
sub
in
cmpsb
enter
data16
shrl
inc
dec
adc
jbe
test
pop
mov
stc
add
movsl
inc
or
cmpsb
xor
jb
adcb
add
sbb
add
jne
shrl
inc
mov
daa
out
das
ljmp
mov
push
mov
stos
repz
loope
push
icebp
sub
jmp
shrb
in
gs
aaa
mov
mov
cli
sbb
daa
cltd
or
push
mov
and
out
int
outsl
sub
ds
adc
arpl
lds
mov
sub
cmp
push
inc
add
push
pop
sbb
mov
insb
fstpl
cmp
dec
sub
adc
jno
or
or
or
xor
daa
xchg
test
or
jecxz
sub
std
xchg
imul
mov
lods
ss
lcall
inc
icebp
aam
mov
xchg
sub
xor
pop
adc
xchg
and
xor
jno
jmp
jmp
cwtl
cmp
lahf
test
inc
lcall
int3
out
lcall
lcall
mov
lods
add
into
lods
loopne
jo
dec
sbb
lea
mov
jb
sahf
mov
jno
xchg
xchg
call
cmp
xor
push
lcall
out
push
or
test
movsb
jae
jl
inc
xlat
dec
cmp
pop
aas
bound
mov
jecxz
fwait
rorb
push
mov
cmpsl
pop
pop
addr16
cmp
push
or
mov
test
sbb
fsubrs
sub
push
cmpsl
fs
adc
jae
push
lret
xlat
addr16
in
add
gs
shll
ds
addl
push
cmp
mov
test
add
xor
xor
lahf
and
or
push
insb
ffreep
mov
or
insl
test
jmp
sar
adcb
jns
sbbl
movsb
cmp
mov
sbb
mov
in
adc
stc
cld
sbb
mov
push
sub
es
pop
fbstp
imul
push
xchg
aas
inc
inc
push
ffreep
xchg
xlat
fbstp
xchg
movsl
pop
int
mov
cmp
imul
sbb
insb
lods
xor
jmp
sbb
jp
cmpb
cli
pop
into
loop
sub
int3
push
loopne
inc
in
addb
or
pop
dec
mov
insb
js
in
out
jo
es
out
addr16
sub
pop
or
ret
xchg
dec
and
cs
cmp
add
repz
imul
movsl
cmp
adc
mov
ret
or
dec
mov
xlat
bswap
loope
xchg
imul
lods
adc
popl
shll
xorl
ss
std
addb
inc
fsubrs
jbe
xor
fcoml
push
pop
jecxz
aam
icebp
mov
pushf
vpunpckhwd
xor
jl
pop
lock
or
sub
mov
and
test
and
cld
jg
je
or
lds
aam
addr16
ljmp
lahf
sub
or
xchg
stos
movsb
repnz
mov
sub
ja
outsb
add
in
lcall
imul
xchg
pop
shl
sub
pop
mov
outsb
push
cli
xor
mov
int3
and
and
mov
in
stos
rolb
pop
or
or
aam
jl
ljmp
out
lods
addl
shlb
mov
sub
adc
test
pop
cmp
and
jmp
jb
fnsave
es
jnp
testb
xchg
cmp
repz
sbb
aaa
xchg
jg
dec
push
leave
fwait
sub
sbb
cmc
lahf
and
jge
imull
rcrl
mov
nop
xchg
fwait
lea
mov
in
inc
xchg
xchg
in
cmp
sbb
fwait
mov
andl
inc
xchg
lods
sub
mov
jg
shrl
leave
push
mov
mov
sub
push
mov
lea
pop
and
sbb
loop
in
int
push
mov
ja
inc
jo
mov
xchg
push
mov
push
sbb
fadd
inc
xchg
mov
and
mov
pushf
xchg
pop
add
out
mov
mov
pop
push
xchg
and
cmp
and
daa
or
in
out
inc
arpl
inc
hlt
aam
ds
pop
mov
mov
mov
xor
or
add
push
push
sarl
sub
pop
dec
xor
mov
leave
jl
shl
shrb
int3
es
decb
pop
ret
add
xchg
sub
std
call
dec
mov
mov
mov
mov
inc
mov
xlat
insl
ja
in
sbb
inc
push
scas
xor
je
popf
icebp
sbb
mov
push
pop
jae
add
push
mov
out
add
cmp
popf
mov
gs
mov
push
repnz
jge
loope
clc
jle
xchg
testl
mov
lds
aaa
ljmp
add
xor
pushf
pop
xlat
popa
or
cmpb
jmp
ss
cvttps2pi
mov
aaa
cmpsb
sbb
filds
mov
loopne
cmp
scas
cli
sbbb
aas
in
imul
mov
inc
mov
les
popf
xchg
dec
push
and
addb
ffree
sbb
imul
cmp
adc
push
dec
pop
pop
aas
int
fwait
inc
inc
leave
add
in
push
call
stos
inc
mov
jge
outsl
fstpt
push
ret
lahf
xor
or
cmc
inc
xchg
lret
mov
jmp
mov
push
mov
out
neg
lock
lcall
adc
mov
aad
cmp
fimull
gs
push
lods
ja
push
sub
fmul
fcom
mov
mov
inc
dec
jae
loopne
shl
xchg
and
pushf
bnd
push
lahf
xchg
cmp
dec
sbb
gs
repnz
mov
into
arpl
inc
idiv
mov
sub
in
ss
mov
jo
mov
sbb
add
in
es
cmc
mov
xchg
icebp
loop
outsl
jg
adc
xchg
sbb
int
rcr
out
imul
xor
scas
pop
sbb
push
cmpsl
push
xchg
movsb
lret
and
mov
cmp
mov
into
cmp
les
and
stos
sub
sub
sbb
xor
dec
sbb
lock
inc
lds
lods
cmpsb
insl
scas
cmc
rol
xchg
int
and
hlt
xchg
sbb
adc
pop
ss
dec
mov
cmp
push
mov
inc
cmp
jle
movsb
iret
les
mov
jns
and
div
je
push
jmp
xchg
psubsb
mov
enter
cmp
les
push
dec
shrb
out
stos
inc
mov
xchg
xlat
cmp
mov
imul
loop
push
sbb
outsb
test
jae
nop
dec
ja
faddl
jg
sbb
mov
mov
bound
pop
add
mov
addr16
push
aas
inc
cmp
xor
pop
pop
mov
call
add
xchg
cmpsb
ljmp
mov
insl
inc
and
hlt
mov
inc
or
loop
mov
mull
xchg
cs
mov
rorb
xchg
mov
stc
jp
or
jns
push
sbbb
iret
icebp
mov
lcall
mov
inc
cmpb
jecxz,pt
stos
sbb
cmp
push
mov
icebp
lret
adc
sub
cmpsl
inc
mov
xchg
jp
fsubrl
sub
sbb
add
lds
mov
iret
test
fcoms
sub
mov
jecxz
push
xor
add
and
sbb
adc
push
jg
jecxz
jl
dec
push
mov
jnp
daa
imul
ljmp
jbe
xor
incl
enter
add
mov
fmul
lods
imul
add
mov
repz
cmc
mov
and
icebp
xchg
push
insl
ret
mov
js
jno
cwtl
scas
pop
jge
pushf
iret
cld
mov
outsb
sub
ja
out
add
add
cmc
addr16
cld
loop
pop
pusha
dec
in
and
je
xor
shlb
rcll
and
cwtl
notb
aas
xchg
or
int
pop
mov
xor
iret
gs
insl
push
out
subl
ljmp
sub
fildll
pop
jnp
ljmp
in
jge
cli
incl
pop
jecxz
add
xlat
push
movsb
shll
ljmp
jnp
mov
dec
pop
loope
xchg
mov
fstpt
sub
dec
nop
ljmp
sub
cmpsb
repz
pop
popf
insb
sub
mov
xor
mov
xor
test
imul
test
push
push
mov
xlat
xor
pop
inc
orl
adc
adc
lret
xchg
ret
sub
pop
repz
push
push
pop
sbb
xchg
stos
test
inc
push
dec
xchg
jl
xorb
xchg
insl
dec
icebp
daa
mov
mov
jge
iret
leave
cld
xor
or
lea
mov
pop
ja
sar
js
adc
into
pop
push
movsb
test
scas
push
pop
xchg
xchg
mov
cwtl
rolb
repnz
int
push
mov
cmpsb
daa
xor
cwtl
push
lock
lea
inc
jecxz
insl
out
inc
fucom
add
xchg
sub
ljmp
inc
shrl
sub
out
es
scas
ljmp
ret
int3
fldt
insl
aas
cmp
pushf
mov
push
pop
mov
xchg
sub
ret
add
push
scas
and
rolb
jae
xor
notb
int3
xor
fstpl
in
mov
bound
movsl
dec
int3
insb
lcall
push
adc
push
fsts
jp
mov
or
out
mov
pop
xlat
mov
pop
sub
xor
jbe
and
adc
lods
xor
pop
xchg
cmp
and
adc
cmc
fiaddl
fcompl
pop
cmp
mov
outsb
ficoms
lret
inc
je
add
add
ret
jle
into
or
sub
dec
sbb
pop
push
add
push
dec
iret
enter
popf
shll
push
andl
jno
shlb
imul
or
mov
cmp
push
adc
sbb
iret
imul
repnz
mov
or
insl
pushf
and
aaa
mov
jbe
jl
xchg
adc
lods
push
nop
leave
push
ror
addr16
or
cmp
outsb
cmpsb
repnz
xchg
pop
outsb
mov
dec
cmc
xlat
insl
fadds
pop
dec
inc
mov
iret
jnp
mov
testb
inc
les
cmp
jnp
push
push
shl
cmp
push
sarl
add
lcall
mov
fimull
bound
mov
mov
inc
daa
ss
repnz
sub
cwtl
imul
xlat
xchg
jmp
fldl
sbb
sub
sub
imul
pop
in
dec
mov
mov
and
xchg
and
xor
mov
xchg
sub
xor
out
lcall
vmwrite
dec
xchg
repnz
mov
daa
inc
sub
lret
or
sbb
jp
cltd
lods
pusha
ret
or
outsl
inc
xor
jae
push
xor
add
pop
lcall
mov
insb
iret
cmp
sbbl
dec
adc
es
jecxz
mov
pop
jnp
out
dec
rcll
xchg
in
or
es
mov
push
adc
clc
xchg
fwait
mov
mov
in
test
clc
mov
imul
fcmovu
test
mov
or
cmp
inc
sahf
sub
test
mov
int3
pop
jb
lahf
imul
lock
andl
dec
adcb
aas
mov
push
mov
add
dec
push
dec
and
cmp
bound
fs
sub
fbld
pop
push
cmp
jo,pn
xor
ljmp
mov
inc
cmc
leave
ffree
inc
mov
push
call
jb
sti
add
ret
cmpsl
pushf
mov
mov
repz
cmp
sbb
push
jge
stos
ljmp
lahf
sub
test
pop
mov
push
inc
nop
pop
loopne
cld
sub
aam
xchg
test
fsubrp
inc
out
pop
xchg
xchg
imulb
add
adc
or
adc
inc
adc
adc
sub
push
fwait
xor
ffree
mov
in
jnp
movsl
pop
or
xchg
fcos
dec
dec
sub
lock
cltd
addr16
lock
rcrb
add
jl
pop
dec
push
js
mov
movsl
and
mov
xchg
fidivs
sbb
cld
mov
dec
ret
loopne
int
cltd
lds
push
xlat
adc
xor
pop
xchg
ss
daa
xor
add
fstl
pop
add
scas
mov
jg
or
movsb
aad
hlt
rorb
pusha
dec
test
mov
jmp
xchg
icebp
pop
adc
dec
and
leave
add
pop
sub
int3
push
jns
aas
cwtl
aam
hlt
jle
mov
dec
mov
aaa
notl
cmc
leave
shll
push
xchg
and
sbb
add
sub
mov
push
pop
mov
dec
cli
outsb
mov
ljmp
inc
test
push
int
add
cmpsb
ja
lods
popa
scas
jae
pop
fwait
leave
cs
pop
call
clc
shll
movsl
sbb
mov
clc
xor
bound
xchg
hlt
push
xlat
into
loopne
xlat
je
ljmp
fdivrl
hlt
pop
decb
mov
ror
ret
push
outsl
mov
xor
fildl
push
outsb
mov
outsl
sti
addl
daa
outsl
or
inc
push
mov
xchg
xor
lret
and
xchg
loop
stos
rorb
test
hlt
out
pop
lret
pushf
xor
mov
or
fnstenv
pop
nop
imulb
push
push
adc
test
cmp
mov
cmpsb
test
cmp
push
lahf
lock
jnp
add
cmpsb
sbb
cmp
cwtl
jle
stos
jo
incl
jne
aas
mov
fwait
push
mov
dec
testb
mov
xchg
loop
outsb
inc
stos
out
lods
add
adc
or
movsb
cmp
jmp
sbb
adc
mov
js
daa
mov
mov
mov
mov
fwait
inc
inc
inc
pop
xor
lcall
xchg
pop
and
xor
sub
test
test
cmp
inc
adc
pop
adc
cmc
or
mov
mov
jns
pop
sub
or
add
lahf
jno
es
inc
mov
loope
xchg
or
dec
pop
fldl
jecxz
jno
cmp
xchg
inc
sub
and
test
inc
pop
or
mov
rcl
dec
push
or
loopne
mov
popf
mov
mov
sub
jae
mov
mov
std
mov
xor
inc
addl
js
lret
cmp
sub
jb
dec
add
sub
jge
or
lods
and
xchg
xchg
sbb
pop
test
fists
orl
push
dec
stos
test
in
rcll
std
mov
cld
xchg
adc
ds
sub
out
daa
test
sub
xor
xchg
mov
xrelease
call
push
scas
adc
loopne
dec
mov
aas
outsl
mov
mov
cmp
jae
adc
out
jmp
pop
in
sbb
ds
add
xchg
pop
outsb
imul
or
mov
cwtl
out
jecxz
adc
lcall
xchg
cmp
inc
sbb
sub
nop
pop
push
iret
aas
fcompl
add
scas
aas
fisttpl
pusha
in
stos
daa
sbb
sub
mov
xlat
cmp
cmc
jge
inc
xor
out
rcrb
loop
lods
jo
fildl
push
daa
loop
ret
sbb
das
dec
push
aaa
jecxz
jl
cmp
loopne
dec
in
int
ljmp
scas
dec
mov
push
mov
outsb
mov
das
cld
sbbl
xchg
jmp
add
shlb
xor
fidivrs
jg
insl
adc
pushl
popa
shl
xor
scas
ret
inc
mov
add
movl
aam
scas
frstor
dec
je
cmp
fwait
lret
aaa
pop
in
mov
aad
mov
mov
seta
in
add
or
dec
pop
add
mov
xchg
and
jb
push
xchg
xchg
sub
mov
xchg
sub
rcl
mov
aad
jl
lods
sub
add
test
jecxz
pop
sub
jns
and
jbe
adc
sub
lahf
cltd
inc
cli
in
divl
cld
push
mov
scas
mov
mov
inc
xor
mov
sahf
mov
dec
loope
push
stos
xor
cmp
push
repnz
es
cmc
or
pop
sahf
pop
and
sub
les
cmp
mov
cmp
pusha
leave
lcall
mov
cmp
cmpsb
notl
sahf
sbb
iret
fcmove
sbb
xor
lret
imul
lock
in
ret
into
jp
leave
mov
in
jmp
mov
call
imul
out
cmpsb
cld
adc
mov
popf
jnp
loop
lret
adc
cltd
fadd
inc
clc
fstpt
dec
adc
std
enter
sub
int3
lods
inc
push
push
fnstenv
arpl
mov
sub
popa
aad
dec
aad
xchg
mov
jne
cli
dec
pop
or
push
repz
shl
mov
mov
xor
pusha
or
andl
push
xchg
jecxz
aas
lea
filds
mov
pop
mov
fsubs
outsb
jp
inc
push
cmp
psubsb
fisubrl
mov
in
aaa
inc
jnp
inc
push
mov
cmp
adc
adc
hlt
andl
imul
mov
lds
shll
push
pushf
aam
add
sub
sbb
push
jp
gs
fnstenv
xchg
mov
scas
sbb
pushf
mov
add
adcb
loopne
push
mov
add
xor
int3
xor
negl
cwtl
and
inc
aad
leave
fidivs
dec
subl
stos
or
nop
int
dec
mov
adcb
repnz
test
fcoms
in
and
add
movb
cmpb
int
and
sahf
leave
xchg
push
xor
das
popa
les
test
xchg
andps
or
lea
xor
sbb
pop
and
sbb
mov
aad
orl
push
cmp
mov
stos
nop
clc
jg
add
and
or
pop
mov
lods
pusha
lahf
divb
xchg
xor
adcb
aam
rcrb
mov
adc
jae
jg
int
inc
test
scas
fimuls
lcall
fsubs
push
stc
adc
and
inc
dec
sbb
inc
lods
outsl
vcmppd
add
mov
mov
mov
xchg
sti
pop
fldenv
cmc
dec
push
add
push
xor
pop
push
imul
mov
cmp
out
daa
aaa
jecxz
sbb
add
xlat
test
leave
dec
mov
push
and
xlat
jge
addl
jae
pop
cmp
data16
sbb
pop
dec
test
sarl
xchg
mov
mov
mov
mov
in
rcr
or
cmp
sub
xchg
mov
lods
out
std
inc
xchg
stc
adc
pop
jb
xchg
test
in
jecxz
push
add
jb
adc
push
dec
pop
inc
ss
pop
pushf
pop
hlt
cli
test
push
ds
ret
cmpsb
mov
inc
enter
and
lea
xchg
pop
pop
popf
bound
mov
push
int3
clc
mov
scas
int3
sahf
pop
loope
sbb
pusha
cmp
pop
out
or
in
iret
loope
js
mov
mov
rcr
push
xchg
test
les
test
push
rclb
xchg
mov
lds
in
adc
pop
test
test
fidivl
fwait
cmp
push
and
out
fldl
es
shll
loop
cmpsb
mov
mov
mov
xor
sub
cs
and
lea
mov
xor
sub
pop
inc
fbstp
testl
cmp
jbe
mov
aad
mov
scas
int
jnp
int
xchg
incb
xor
lds
neg
xchg
sub
cmp
gs
es
or
adc
testb
aas
mov
jne
jl
arpl
push
cmp
test
add
cs
xchg
rol
mov
xchg
mov
pushl
push
mov
cmp
test
sub
xor
insb
mov
bswap
fnsetpm(287
pop
or
push
jne
adc
stos
loopw
arpl
and
shll
shrb
jge
in
into
cli
repnz
mov
or
orb
sub
or
shll
cmpsl
adc
les
jge
iret
xor
dec
fwait
sbb
adc
jo
pop
and
xchg
outsl
add
je
test
cmp
or
fdivp
or
mov
mov
dec
into
leave
andl
sub
pop
cmp
xchg
push
xchg
jae
outsl
jb
inc
dec
dec
adcl
outsl
sbb
aaa
js
fildl
aas
sti
mov
lret
cs
into
popw
or
mov
xchg
jle
andb
xor
fldcw
mov
xor
pop
push
dec
es
fwait
out
jle
shlb
pop
pop
mov
mov
mov
dec
icebp
jmp
add
ror
scas
pop
push
les
lret
roll
adc
test
mov
shll
and
cmp
jmp
mov
hlt
dec
push
lahf
push
pusha
cmp
addr16
cli
xchg
imul
cli
lods
clc
pop
inc
stos
repz
mov
xchg
cld
mov
lahf
pop
push
es
fwait
pop
orb
adc
lcall
daa
movsl
pop
mov
sbb
int
popa
inc
ljmp
mov
push
std
sub
mov
dec
mov
pop
inc
movsl
adc
ljmp
sub
mov
cmp
mov
push
cltd
dec
jmp
inc
popa
fildll
pusha
xor
daa
xor
fwait
out
lds
sar
xor
push
lahf
fstps
and
xor
fwait
repnz
mov
push
mov
cs
in
repz
ja
push
ficompl
cli
add
push
ja
or
mov
mov
push
fs
sbb
js
clc
in
mov
mov
or
int3
and
mov
out
sub
xor
lds
lea
into
pop
dec
aas
pop
daa
je
ret
dec
int3
jp
jne
xchg
repnz
and
cs
int
int
sti
inc
or
int3
adc
and
in
jae
pop
div
test
xlat
bound
dec
push
jns
xchg
insl
sbb
lret
mov
push
sbb
out
and
inc
cmp
push
stc
pop
and
shlb
cmp
inc
jne
outsl
add
fnstenv
icebp
jl
adc
jbe
cmp
inc
jns
push
sbb
ss
pop
inc
mov
or
aaa
xlat
xlat
mov
es
jmp
lahf
push
add
cltd
sbb
andb
jo
dec
mov
paddw
mov
sub
pop
lea
add
sbb
in
jle
aam
pushf
mov
cld
xchg
adc
dec
push
in
loope
inc
xor
test
in
in
clc
mov
push
ja
pusha
dec
mov
test
sub
jbe
rep
aad
cld
inc
popa
hlt
or
push
lret
mov
xchg
nop
stc
fcmovne
xchg
xor
xor
jae
pop
fmulp
sub
sbb
dec
sub
cmp
rolb
ror
xchg
in
inc
cmp
pop
xlat
mov
xchg
jmp
fisttps
inc
jae
add
and
sbb
inc
jg
aam
jle
adcl
jmp
outsb
add
test
jle
ret
and
jmp
fst
adc
mov
das
mov
repnz
inc
fidivl
loopne
xchg
pop
push
sub
jo
push
stos
sub
bound
xor
outsl
sub
push
fcmove
jne
dec
mov
jge
call
jno
pop
cltd
sar
in
aam
xchg
insb
in
and
sub
cmp
jmp
cmpsl
in
pop
jnp
pop
or
lcall
cmp
lods
cmpsl
lds
adc
add
lods
dec
or
xchg
pop
insb
out
nop
lds
jns
imul
jecxz
adc
in
lds
dec
aam
aaa
fs
daa
mov
mov
lods
ret
in
cmp
adc
adc
mov
hlt
test
xchg
push
jle
nop
adc
lods
lahf
mov
test
sub
xchg
js
xchg
jnp
mov
jp
fsubs
mov
add
mov
and
negb
sbb
push
xor
int3
test
pusha
lods
in
jb
sti
push
add
pusha
xchg
jl
mov
mov
ljmp
push
lods
out
leave
pop
daa
push
ficoml
mov
pop
jecxz
jmp
push
push
int
loope
mov
lret
sbbb
xlat
ficoml
push
in
add
push
mov
outsb
add
pushf
iret
sub
mov
enter
dec
sbb
mov
aad
in
lock
pop
add
mov
les
mov
test
dec
cs
push
test
jns
fs
popf
jl
dec
gs
push
shll
test
jge
iret
rclb
adc
pushl
subb
push
sub
pushf
mov
cmp
sub
stos
xchg
push
mov
lods
clc
sub
dec
pusha
mov
jp
jbe
popf
lcall
mov
mov
pop
enter
cmp
sarl
into
push
or
add
int3
dec
sti
aaa
inc
xchg
pop
mov
cmpsb
xchg
imul
jne
push
mov
lods
loope
out
jno
pop
fs
int3
cmpsb
clc
add
sahf
fdivr
jbe
pushf
sbb
fcoms
cmpsl
mov
adc
mov
mov
jnp
int
mov
inc
xchg
hlt
mov
inc
imul
mov
mov
sub
cmp
or
pushf
lods
mov
mov
icebp
inc
stos
cmp
clc
bound
adc
cmpsb
mov
mov
loopne
clc
push
icebp
stc
xchg
test
rol
mov
mov
mov
inc
mov
dec
jmp
mov
pop
in
bnd
cmp
ja
jae
aaa
popf
pushf
sbb
in
push
or
out
addb
pop
data16
mov
add
stos
shll
adc
inc
leave
in
sbb
movsb
jno
int3
daa
lret
jns
aas
fisubrl
lea
xchg
shrb
or
inc
inc
lahf
mov
and
lods
or
sub
movsl
rclb
xor
push
aaa
jg
int
mov
pop
jp
push
sbb
adc
fsts
sbb
xor
adc
push
jno
push
stos
jns
lcall
and
jp
sbb
fistl
jge
lock
inc
xchg
push
int
iret
pushf
jno
in
out
lods
sbb
xchg
xchg
mov
jg
stc
dec
lock
dec
xor
js
xchg
mov
ljmp
push
cmp
cmp
rorl
lods
imul
cltd
mov
mov
les
lock
inc
jp
jecxz
sbb
dec
cmpsl
cmp
jne
mov
push
dec
mov
frstor
cltd
ds
ljmp
xchg
notb
pop
mov
fistl
xchg
xlat
bound
lret
dec
popf
xchg
setp
mov
lcall
cmp
mov
mov
inc
fs
punpcklbw
jno
fdivrs
neg
pop
fcompl
xchg
lea
and
mov
adc
out
fs
sbb
rcll
jae
inc
adc
bound
mov
adcl
cmp
scas
mov
pop
ss
sbb
icebp
lahf
xor
mov
xor
add
cltd
das
aas
mov
cmp
mov
ja
adc
dec
lods
ret
pop
sub
or
shlb
dec
aad
add
and
pushf
and
cmp
jle
mov
dec
dec
stos
loopne
inc
sub
into
fwait
or
xor
inc
cs
int
addl
sub
stos
push
inc
pop
aas
cmp
push
xor
push
mov
mov
jmp
jae
sub
outsl
outsl
nop
repz
sarl
test
xchg
cli
in
xchg
push
xchg
and
test
lea
cmp
insb
jno
pushf
shll
cmpsb
add
xchg
mov
inc
jae
or
in
xor
les
sar
lock
push
mov
negb
cmp
jb
jge
and
adc
scas
inc
in
test
sbb
mov
jb
fs
fisubrl
dec
cmp
and
stos
loope
or
movsb
cmp
mov
pop
ja
fistps
pop
lods
lret
int3
cmp
dec
sub
sub
sub
jg
int3
inc
stc
daa
cmp
sub
inc
sub
or
lods
rcll
mov
xor
cmpsb
mov
icebp
out
jg
imul
loop
cmpsl
mov
sahf
push
inc
pop
and
nop
fdivl
xchg
or
bswap
out
sub
push
out
xchg
xor
es
mov
pop
or
in
leave
shll
and
mov
aam
nop
push
inc
sub
hlt
adc
lcall
mov
pop
and
leave
pop
mov
or
push
add
es
dec
mov
pop
push
scas
sub
fmull
repz
test
jae
mov
cmp
inc
xor
aam
sbb
scas
outsb
push
sbb
mov
leave
mov
or
lahf
sbb
mov
mov
js
pop
mov
and
roll
jo
popf
add
imul
ret
outsb
shll
lcall
lds
push
pop
test
inc
mov
popa
fisubrs
inc
push
js
das
iret
std
addl
outsb
scas
arpl
sbb
mov
inc
or
jae
std
pop
sahf
call
mov
and
jecxz
je
jns
bound
fsubrs
mov
fucomp
lods
or
rorb
leave
jecxz
dec
cmp
mov
cmc
ror
repz
es
cmp
jecxz
add
aas
adc
in
xor
popa
addl
lcall
es
adc
in
lods
andb
fsts
pop
mov
pushf
mov
pop
push
push
negb
and
mov
push
jmp
sub
and
add
int3
fwait
in
in
bound
icebp
cmp
inc
neg
mov
jl
loope
repz
hlt
loopne
loopne
adc
mov
aam
outsl
add
mov
sub
lahf
shrl
test
cmp
rorl
cs
outsb
adc
decl
lods
pop
mov
jns
ds
jae
fbld
lds
arpl
sti
and
or
inc
int3
in
mov
rcll
push
push
cmp
dec
lea
adc
cmp
jo
fcomps
dec
loope
add
aad
jne
pop
xchg
xchg
rcll
lods
push
in
outsl
mov
sbb
xor
jmp
cld
nop
add
adc
pusha
push
push
test
sub
mov
enter
aaa
cmpb
sub
pushf
mov
arpl
dec
insl
decl
jmp
sbb
popf
mov
les
push
pushl
cmpsb
dec
test
jmp
cmp
pop
call
in
mov
movsb
mov
icebp
cmp
js
iret
push
js
loop
inc
fdivl
cmpsb
sbb
sbb
add
gs
push
xor
xor
pop
xor
in
mov
mov
and
scas
xchg
mov
push
xor
sbb
orl
mov
or
cltd
adc
push
pop
xchg
xor
mov
rclb
divl
adc
lahf
adc
mov
out
sbb
fldenv
xchg
inc
aad
dec
cmpsl
lcall
addb
mov
in
loopne
aas
xor
lret
scas
mov
and
rcrb
adc
loope
mov
xchg
sub
pop
or
adc
mov
addl
sbb
inc
mov
xchg
loope
or
sbb
sub
std
add
out
lret
push
fcmovnu
incb
ret
inc
je
outsb
cmp
xchg
add
mov
cmpsl
cld
hlt
cwtl
jne
xchg
rclb
pop
enter
shlb
idivl
sbb
jns
int
inc
jne
lcall
inc
lds
add
iret
fwait
repz
mov
jns
lcall
sahf
cmpsl
pop
int
pop
mov
cli
push
iret
push
xchg
xor
fcomip
cmp
jp
pop
stos
mov
es
sub
pop
xchg
fstpt
loope,pn
out
fwait
mov
test
mov
call
mov
inc
cs
test
ret
sbb
xchg
sub
cli
or
adc
mov
aas
test
int3
imul
mov
iret
iret
xorl
and
in
pop
mov
dec
subl
pop
sub
imul
mov
xlat
xchg
xor
shrl
lods
das
cmp
popf
mov
sub
adc
xchg
test
call
xor
xchg
push
jmp
fldt
push
bound
push
mov
orl
mov
xor
fdivl
repnz
addl
inc
jae
sub
add
mov
jecxz
leave
mov
jne
cmp
inc
add
icebp
fcmovbe
das
push
sub
push
inc
push
xor
andl
xchg
iret
inc
out
imul
or
inc
xor
mov
popa
xor
add
iret
mov
jne
xorl
mov
sub
popa
fsubrs
in
push
jp
and
mov
adc
aad
repz
dec
fdivr
imul
mov
jo
mov
add
sub
sub
sarl
xchg
mov
cli
jbe
mov
insb
in
movsl
fstl
fbstp
call
cli
jge
jbe
in
push
cmp
cmp
mov
dec
lods
jl
hlt
add
sbb
xor
gs
add
inc
cmp
icebp
adc
cmp
sub
adc
mov
test
push
loope
int3
les
cmp
je
sbb
inc
or
fwait
lea
into
scas
repnz
hlt
inc
stos
mov
sbb
lea
jnp
jge
adc
fadds
loope
mov
add
push
push
and
jecxz
pop
adc
icebp
push
lods
stos
mov
loop
jnp
call
ja
movsl
cmpl
repz
inc
jg
push
push
ljmp
scas
sub
std
cmp
loopne
inc
pusha
std
sbb
fbld
pusha
xor
sbb
cmpsl
aam
sub
test
xchg
xor
cmpsl
xor
daa
int
xlat
pop
or
mov
dec
cltd
xchg
xchg
adc
dec
lds
mov
lea
lret
inc
and
jae
pop
adc
leave
out
shrl
pop
push
fcmovne
lods
test
inc
jmp
pop
push
les
xor
jg
out
stc
cmp
out
lods
mov
arpl
xchg
clc
cmpsb
mov
push
stos
pop
movsb
pop
mov
cmp
cmp
aaa
out
sbb
jnp
loope
dec
jge
xor
js
mov
iret
mov
jo
jle
inc
inc
jbe
iret
and
xor
jmp
add
mov
shlb
adc
dec
push
shll
jg
mov
inc
push
push
gs
sub
jp
int
aam
mov
dec
xor
push
and
adc
out
pushf
mov
mov
cmpsw
loope
inc
inc
lods
movsb
out
aas
and
pop
mov
push
ret
es
stc
les
out
loopne
jecxz
fisubl
sub
push
mov
mov
dec
out
pushw
mov
ficompl
imul
mov
das
pop
faddl
repnz
xchg
push
adc
sub
xor
insl
cmp
lret
fs
mov
call
in
out
adc
and
pop
shl
fucom
out
sub
hlt
xor
mov
mov
mov
lds
subw
loopne
cmpsl
sbbb
push
mov
inc
mov
mov
call
push
cmc
cmp
pushf
sub
xor
xchg
pop
lock
hlt
hlt
pop
jp
pop
mov
addr16
dec
int
movsb
ret
sahf
adc
jge
pop
loop
bound
cli
js
add
outsl
lock
adc
pop
sbbl
mov
ljmp
xor
inc
in
xor
and
or
xchg
mov
push
pop
jle
pushf
mov
fnstenv
adc
jp
add
fldt
or
fcoms
xor
xor
jno
pop
mov
dec
popa
aaa
fsub
ds
movsl
stc
in
push
pop
out
mov
add
xchg
je
bnd
hlt
insl
xchg
lret
negl
mov
sbb
mov
insb
jle
insb
sbb
pop
pop
sbb
or
ss
push
cli
scas
mov
jnp
into
fsub
lret
inc
xchg
sbb
jmp
jl
pop
ljmp
jo
ret
push
fldenv
shll
sub
pop
daa
dec
loop
les
inc
rcrl
sbb
sub
and
adc
sbb
in
data16
ficompl
pop
rorl
out
loopne
flds
repnz
addr16
cmp
adc
fistpl
jmp
jae
mov
fcompl
lahf
push
scas
push
mov
cmpsl
dec
sub
into
xchg
or
test
mov
rcrl
mov
insb
mov
mov
push
outsl
mov
les
pop
repz
or
mov
mov
lcall
mov
mov
popa
cmp
inc
push
je
cmpsl
push
fdivl
loopne
cli
movsb
repnz
shr
mov
repz
xor
std
sbb
enter
push
cmpsb
cld
rcll
sbb
push
ja
rorl
xlat
ljmp
cwtl
pop
fldenv
jg
inc
les
mov
pushf
mov
lret
sahf
push
fidivl
daa
or
adc
mov
lods
loop
mov
or
xchg
loopne
outsb
xchg
lods
or
and
rolb
mov
leave
aas
mov
inc
jb
xchg
lret
repz
pop
rol
lea
imul
scas
mov
sub
daa
outsb
repz
in
or
lea
std
loop
pop
int
or
aas
sarl
iret
xchg
pop
ret
and
lret
push
daa
lahf
jmp
cwtl
cs
mov
sub
push
xchg
xor
cmc
mov
jmp
ss
cmp
es
xchg
ja
mov
inc
jl
iret
pop
rcr
cmp
pusha
pop
or
and
xor
cwtl
xor
pop
test
dec
cmp
jge
repnz
stc
loopne
pop
arpl
adc
lds
in
lock
xor
xchg
jecxz
std
push
add
cmp
adc
xchg
dec
add
cli
sbb
loopne
sbb
ja
and
xchg
imul
iret
sbb
pop
jp
pop
mov
lcall
inc
or
roll
push
cwtl
or
sbb
xchg
loopne
mov
sahf
inc
xchg
dec
in
mov
xlat
pop
sbb
push
and
outsl
mov
jno
sarb
or
pop
mov
or
pop
mov
and
sbb
notb
lret
or
popa
add
xor
dec
dec
aam
dec
xor
mov
sarb
out
test
push
push
jmp
int
lds
out
leave
int
pop
out
sub
push
and
fistps
cmpsb
mov
and
xchg
pop
loope
scas
scas
sbb
aam
push
jl
xchg
sub
shl
lock
xor
mov
xor
ret
xchg
dec
sub
pop
js
cmpsb
fsubrs
pop
fistpll
insl
rol
jp
fs
in
fwait
push
fnstsw
pop
outsl
mov
mov
cmp
jg
negb
mov
fidivrl
out
jbe
mov
subb
dec
imul
ret
lret
xor
mov
jle
cmp
push
es
out
addr16
scas
pop
sub
dec
dec
out
xchg
jo
cmp
add
sbb
sub
cmp
popf
cmpsl
jmp
pop
imul
pop
movsl
pop
sbb
mov
dec
rorb
jge
push
xor
cltd
cmpsb
xchg
test
mov
sarb
mov
pop
jp
pusha
test
xchg
xor
pop
jb
push
sbb
out
jnp
ja
movsb
cld
iret
psubb
jmp
inc
xchg
sahf
in
loope
cmpsb
lods
cltd
iret
mov
mov
fwait
xor
filds
push
add
mov
sbb
lcall
mov
mov
ret
aaa
mov
jb
jp
add
sbb
lock
xor
maskmovq
call
or
dec
sub
ret
je
les
or
or
or
sahf
adc
loop
test
mov
popa
test
jb
roll
cmc
loopne
mov
and
cmpsl
sahf
mov
xchg
jne
cli
sbb
call
pop
mov
rcll
adc
or
push
repz
jb
orb
mov
dec
bound
mov
push
push
xor
mov
loope
push
xchg
in
notb
xchg
lods
mov
mov
inc
push
xchg
push
inc
xchg
data16
mov
sbb
mov
xlat
fisubl
rol
xchg
add
pop
pop
stc
and
and
iret
mov
stc
test
mov
pop
test
mov
je
xor
mov
dec
ja
mov
xlat
jo
cld
fwait
cmc
repz
rolb
ljmp
fistl
inc
nop
cwtl
jge
adc
popf
shll
subb
addr16
les
dec
fnstenv
mov
je
or
push
in
ror
cwtl
cmp
mov
xchg
int3
testl
insb
jl
lds
lea
loope
sub
sbb
movsl
sub
jp
divb
sbb
pop
sarl
mov
sbb
leave
sbb
dec
icebp
loop
mov
xchg
insl
lretw
imulb
mov
les
cmpsb
movsl
cmp
add
inc
pop
mov
loope
push
repz
mov
inc
mov
stos
mov
and
push
jl
mov
inc
inc
or
inc
in
cmp
push
lods
lock
and
inc
mov
add
aas
sub
push
inc
push
jmp
dec
add
jecxz
outsb
sub
js
xor
and
and
xor
cmpsb
mov
outsl
and
dec
pop
pop
mov
repnz
add
xor
ret
scas
cmp
fists
adc
js
lret
xchg
lret
add
or
addb
or
fincstp
mov
dec
in
push
loope
adc
cmc
sbb
divb
shll
and
cmpsl
cld
inc
mov
test
clc
dec
push
add
popa
jb
mov
pop
jg
mov
mov
test
mov
pop
jecxz
inc
mov
dec
inc
cwtl
jbe
sbb
mov
mov
mov
sub
sbbl
repz
adcl
call
orl
fldcw
mov
test
sbb
dec
addr16
les
mov
outsl
test
popf
insl
inc
sbb
pop
repnz
fs
push
mov
pop
mov
mov
rclb
xor
xchg
sub
xchg
inc
mov
pop
mov
sub
fwait
dec
push
push
js
daa
dec
es
scas
and
or
cmpb
xor
out
or
mov
push
pop
add
in
adc
fldl2t
dec
and
pusha
pop
cmpsb
add
dec
cmp
push
sub
cmc
jo
push
ret
and
cmpsb
pushf
gs
test
inc
mov
mov
out
sbb
les
add
mov
add
aaa
jl
outsb
negb
stos
pop
adc
and
add
pop
xlat
xlat
xlat
outsb
jl
adc
cmp
in
flds
stc
cmp
mov
scas
inc
stc
clc
cmc
push
cmp
int3
in
sub
mov
pop
lret
pop
xchg
ret
insb
add
xor
dec
adc
enter
outsl
sub
and
test
ljmp
mov
daa
in
xor
mov
mov
mov
lret
fcomip
xchg
adc
xor
hlt
mov
sbb
stc
dec
mov
cs
data16
or
in
cmp
es
lods
xchg
jnp
aam
cmc
popf
mov
leave
push
push
daa
je
out
fldcw
mov
popf
in
xlat
mov
mov
or
mov
xchg
fs
int3
mov
enter
out
pop
pushf
sub
jae
cli
xchg
mov
pop
cmpsl
xor
pushf
add
imul
stos
push
mov
inc
or
pushf
mov
notl
dec
sub
lock
aam
jb
dec
js
push
decl
imul
jle
stos
test
mov
pop
inc
adc
dec
push
add
adc
in
add
mov
and
add
mov
pop
mov
movsb
jle
adc
cmovle
shll
stos
push
out
xchg
test
inc
sub
xor
jle
mov
mov
nop
inc
xchg
fwait
bound
dec
out
aas
mov
dec
lds
fmulp
scas
xlat
add
rorb
mov
xchg
sub
insl
push
lods
adc
mov
xchg
jae
paddw
call
aad
jae
mov
inc
pop
fstpl
push
mov
jb
xchg
cmp
mov
loop
inc
cmp
cwtl
aaa
sub
mov
inc
out
jmp
ja
mov
subl
xlat
adc
lahf
jnp
aas
jg
adc
mov
dec
mov
stc
je
lret
sbb
sbb
inc
jbe
into
cld
mov
cmpsb
xchg
add
xchg
mov
popa
outsl
mov
aaa
add
push
in
push
mov
ja
data16
add
dec
jmp
loope
aas
mov
push
and
or
test
test
lea
in
dec
jns
jnp
les
mov
xlat
dec
mov
add
imul
mov
jne
dec
or
loopne
pop
aad
das
and
xchg
aam
lea
sub
dec
xlat
mov
inc
and
bound
mov
add
mov
or
xchg
cld
incb
adc
xchg
push
jo
into
popa
in
mov
clc
jno
aad
cmpsb
and
add
daa
inc
sti
cmpsb
sahf
cmp
cwtl
dec
and
rcrl
pop
les
jg
lret
push
add
mov
pop
in
dec
mov
cs
gs
call
call
cli
call
gs
movsb
cmp
aam
cltd
jne
xchg
leave
aaa
adc
jp
out
add
jo
in
pusha
xorl
lods
jmp
mov
sub
in
das
popa
dec
mov
iret
and
cmpsl
add
mov
pop
adc
jp
out
in
cmp
outsl
adc
xchg
xorb
sub
mov
jecxz
lock
fldenv
inc
adc
fcompl
xchg
xchg
sub
push
cld
lret
adc
mull
cld
push
fcmovnbe
and
cmc
call
std
mov
pop
icebp
pop
push
sbb
in
jecxz
xchg
arpl
shrb
loope
fucom
pop
add
add
push
push
inc
and
test
jg
imul
mov
mov
push
cmpsl
pop
inc
fstp
push
and
adc
ljmp
fnstenv
iret
mov
cli
dec
imul
or
aaa
jne
aas
test
sub
and
insl
sub
sti
stc
jnp
jnp
cltd
out
stc
mov
loope
setl
cld
dec
mov
fldcw
mov
xchg
ljmp
or
jecxz
pop
lahf
call
call
add
pushf
xchg
lea
push
fadds
lea
into
adc
or
arpl
fiadds
ss
pusha
or
scas
jns
inc
mov
int3
inc
push
jns
mov
call
mov
pop
cwtl
repz
movsb
add
pop
push
xlat
pop
idivb
inc
fnstsw
xlat
mov
xchg
lcall
arpl
call
ret
or
add
subb
ret
gs
inc
paddsw
fsubrs
lods
out
iret
jge
cmp
mov
icebp
js
js
fcmovbe
adc
out
outsb
fsubrs
insl
xor
jge
mov
sbb
adc
test
ss
out
jp
xchg
jle
add
push
inc
lret
jns
xor
inc
fldenv
adc
addr16
cmpsl
jne
movsb
jnp
sbb
fs
je
mov
int3
dec
mov
in
sahf
inc
dec
dec
out
ffree
adc
repnz
mov
dec
cli
xchg
fnstsw
cmp
pop
and
cltd
xchg
ret
sub
pop
ss
in
add
js
mov
sbb
and
mov
imul
mov
dec
mov
stc
lret
pop
test
mov
and
sbb
jno
jae
arpl
repz
jne
test
sub
into
aas
mov
jg
or
xor
mov
push
mov
push
rorb
cmc
push
or
out
mov
jnp
mov
shlb
cmp
sbb
pop
xor
ljmp
jg
jg
jg
sbb
cmp
push
lods
mov
aas
adc
sub
pop
daa
iret
mov
mov
int
insb
inc
jbe
adc
mov
and
int3
dec
testl
lahf
xchg
or
xchg
adc
lea
and
icebp
fildl
pop
insb
loope
cwtl
inc
sub
lods
sub
jnp
ret
mov
popf
shrl
gs
xor
icebp
cli
add
pop
mov
inc
int3
dec
inc
push
jmp
stos
mov
sub
xchg
pop
and
xchg
mov
sbb
test
cmp
frstor
mov
loop
and
dec
add
inc
push
fstpl
lods
cmp
xlat
daa
jg
mov
ret
aaa
lock
mov
fdivs
jle
add
push
push
aam
jb
pop
adc
fildl
pop
and
loop
cwtl
inc
test
pop
xor
jp
lock
scas
filds
mov
pop
dec
in
jmp
fists
mov
loopne
es
or
add
mov
push
out
fwait
ljmp
inc
ds
jo
sbb
rolb
fbstp
push
push
adc
pop
push
les
es
fisttps
push
xor
ret
lret
pop
icebp
jecxz
ret
and
dec
push
mov
enter
out
mov
mov
dec
pushf
incl
or
sbb
rorl
add
imul
and
cmpsb
insl
or
push
adc
iret
in
adc
and
jns
stos
sar
add
in
dec
push
mov
scas
push
xchg
test
stos
push
fidivrs
add
mov
or
jnp
push
add
mov
mov
mov
mov
in
aam
and
lods
jge
out
andb
inc
hlt
push
fsts
dec
rcll
ficoms
repz
xchg
xor
push
aaa
stos
or
dec
insl
xchg
out
mov
dec
rorb
stos
lods
jge
push
push
rorb
in
sbb
bound
mov
add
xchg
dec
push
dec
inc
fmull
daa
jae
int3
inc
jecxz
and
sub
push
nop
nop
xlat
mov
pop
icebp
pop
mov
pushf
or
push
sub
daa
mov
pop
fwait
arpl
mov
and
inc
repnz
outsb
aaa
and
scas
mov
mov
mov
dec
inc
xchg
mov
cmpsl
adc
inc
not
push
int3
sahf
in
xor
cli
push
negb
hlt
or
adc
imul
bnd
out
cmp
sub
stc
outsb
and
xchg
sbb
push
jo
cwtl
jmp
pop
je
pop
push
gs
and
fwait
inc
xchg
fs
jecxz
pop
add
mov
sub
jo
xchg
xor
or
xchg
pop
and
std
repnz
sub
popf
into
cmpsl
lods
xchg
xor
stc
insl
pop
sbb
mov
xor
das
add
xor
dec
push
or
out
mov
into
xchg
xchg
adc
pop
ds
mov
fdivs
cmp
jecxz
clts
xor
cmpl
sti
pop
test
push
add
int
sbb
cltd
add
scas
stos
mov
mov
sub
sub
push
jbe
hlt
dec
insb
lret
sbb
pop
and
sahf
cmpsl
jno
inc
out
jno
aas
mov
xor
cmpsb
les
xchg
icebp
and
sbb
xchg
sbb
adc
dec
sahf
inc
ljmp
inc
jmp
inc
decl
adc
push
inc
aam
xor
mov
pop
sub
ret
cmp
mov
daa
cmp
pop
or
inc
out
fcos
sar
fisttpll
sub
sbb
clc
lcall
sbb
jno
push
movsl
sbb
push
jg
scas
push
aad
xor
xchg
dec
nop
cmpb
mov
cmpl
add
jmp
fcomps
scas
rclb
push
and
repz
sbb
cmp
jbe
sub
mov
imul
sub
in
popf
repz
mov
jnp
stc
and
cmp
adc
scas
lahf
out
cmp
push
sub
aas
sub
sbb
loope
mull
jo
lock
xlat
mov
push
push
das
pop
cltd
fdivs
pop
jae
mov
mov
push
push
cld
push
popa
fistpll
and
stc
xor
hlt
push
push
cmc
cwtl
sahf
shrb
rclb
je
mov
xchg
cmc
insb
mov
rolb
repz
cmp
mov
xchg
mov
push
xchg
mov
shl
testb
cwtl
adc
test
sbb
frstor
push
xor
dec
out
sahf
xchg
add
xchg
dec
je
adc
inc
lock
bound
dec
in
xor
popfw
gs
mov
dec
xor
ljmp
gs
adc
sahf
in
pop
leave
jecxz
into
ljmp
add
int3
add
cmp
div
inc
fildll
sub
test
sub
hlt
push
loop
in
xor
stc
bound
push
fnsave
xchg
cmp
mov
pushf
cli
sbb
dec
out
dec
sub
sbb
data16
cmp
sahf
or
push
dec
ds
cs
xchg
cmp
inc
loope
push
out
cmp
iret
int3
push
sbb
xchg
mov
dec
mov
sub
sbb
xchg
push
push
fists
add
jo
adc
stc
lods
movsl
cmp
hlt
cltd
cwtl
pop
dec
fsubl
lods
cmp
loopne
jnp
fs
cs
das
mov
push
push
xchg
pop
jge
cmpsb
popl
adc
mov
test
test
cmpsl
jnp
xchg
popa
or
js
ds
inc
dec
mov
push
lret
aad
push
sahf
js
mov
mov
xor
cltd
data16
insb
loop
lods
out
cmp
mov
enter
cmpsl
jne
dec
mov
neg
fistl
test
jl
jmp
in
jae
ret
out
aas
dec
dec
mov
pop
inc
int3
mov
or
mov
mov
pop
ja
les
or
fidivrs
cmpsl
jb
mov
sub
movb
pop
testb
mov
adc
lcall
mov
jg
shrl
mov
sbb
sbb
leave
icebp
dec
aam
pop
jnp
cmp
sub
push
ficomps
xchg
sbb
in
and
jl
or
sbb
and
mov
das
fmull
daa
test
test
cltd
lahf
or
lret
add
lret
pop
repz
jbe
and
mov
popf
idiv
add
test
dec
dec
dec
loope
vcvtdq2pd
mov
arpl
stc
cmp
xor
push
andl
mov
fidivl
push
mov
and
pop
jg
or
cmp
and
test
cmp
sub
inc
and
imul
sahf
mov
inc
push
push
in
push
lret
push
test
jle
cmp
add
sbbb
add
test
adc
mov
cmp
roll
inc
jns
sbb
mov
mov
rorl
mov
add
jmp
and
xor
cmp
mov
je
fiadds
mov
inc
gs
xchg
out
jecxz
inc
mov
pop
ds
jl
xchg
cwtl
add
mov
mov
fs
pop
cld
jmp
xchg
mov
lcall
sbb
adc
je
ret
sbb
addr16
mul
flds
pop
adc
test
int3
adc
loopne
xchg
xchg
aad
mov
push
pop
cs
push
push
insb
sahf
out
stos
lcall
inc
cmc
mov
cmpsb
inc
jnp
test
xor
cmp
sub
inc
in
nop
subb
sub
iret
sbb
int
repz
out
dec
bound
push
fnstenv
addr16
aaa
lods
rcrb
subl
mov
cmpsl
jl
lret
sbb
jno
or
lods
sti
mov
fldcw
mov
scas
jmp
jnp
das
dec
stos
cmp
xorb
add
inc
xor
pop
mov
popa
dec
mov
pminsw
mov
test
aaa
test
ret
mov
xchg
stos
mov
hlt
mov
or
inc
add
pop
sbb
pop
mov
rclb
sbb
cmpsl
cwtl
daa
mov
out
jnp
xor
or
xlat
fdivr
xchg
pop
pop
dec
adc
sbb
outsb
pop
mov
push
stc
jp
outsb
push
dec
fld
adc
mov
js
mov
nop
mov
pop
cmp
imull
ja
lock
or
rorb
dec
inc
add
data16
jg
and
loope
insl
mov
mov
mov
fnstsw
in
or
push
mov
push
lods
xor
aad
mov
fs
push
test
out
mov
jl
lods
cltd
inc
fdiv
mov
mov
cmpsl
ljmp
and
xchg
stos
or
mov
js
fldl
push
dec
cmpsb
stos
imul
cld
sub
xchg
cld
sbb
jne
pop
cmpsb
scas
aad
push
pop
inc
dec
cmp
mov
enter
outsb
out
fistpll
adc
mov
addr16
iret
loop
hlt
outsl
sbb
aad
cmpsb
orl
addr16
aad
fidivl
cmpsl
mov
push
push
sbb
add
add
shll
cmp
popf
sub
mov
push
add
mov
les
sub
lock
gs
xor
scas
add
or
lret
sbb
pop
push
push
out
jb
adc
xor
jo
pop
mov
and
inc
hlt
idivl
arpl
ficoml
xchg
dec
sub
mov
mov
mov
mov
insb
mov
push
lcall
push
pop
jnp
cmp
pop
faddp
mov
iret
sub
aam
mov
fldpi
insb
scas
scas
add
inc
pop
push
je
test
inc
loope
nop
mov
adc
pushf
cli
jg
xlat
mov
cwtl
out
das
mov
lret
mov
sub
mov
sbb
fsts
xor
in
jecxz
adc
and
mov
aaa
cmp
shl
xor
loop
stc
add
out
mov
lret
ja
stos
in
cmp
lds
inc
pop
jp
push
lods
arpl
jns
mov
cli
rorb
lods
lea
jmp
popa
xchg
rorl
mov
loop
iret
jb
sbb
mov
push
sub
test
mov
mov
xchg
adc
loop
mov
data16
xor
mov
imul
iret
loopne
cmp
push
rcrb
shlb
mov
dec
pop
dec
push
cltd
jmp
std
mov
pop
fs
jle
ljmp
fldl
pop
pushf
and
push
cmp
adc
xor
cmp
jecxz
mov
jb,pt
movsl
mov
cmp
cmc
aas
xchg
pop
dec
cmpsl
je
das
scas
shl
mov
jo
or
mov
das
mov
rclb
jmp
insb
cmp
sub
test
inc
or
aas
mov
and
ja
repnz
or
mov
sub
and
adc
inc
or
stos
stc
dec
hlt
outsl
push
pushf
sti
cltd
and
jmp
repz
mov
jno
cs
cwtl
add
mov
jl
movsl
sti
sbb
stos
inc
subl
jb
leave
cmp
loopne
or
popl
mov
shlb
out
adc
or
cmpsb
es
adcb
movsl
test
lods
add
and
icebp
jne
xor
repnz
insl
adc
aam
push
jns,pt
mov
out
xor
cmp
rol
dec
pop
out
push
shlb
lret
insb
cmpsl
test
adc
dec
mov
mov
or
push
adc
jnp
lods
clc
aad
and
pop
mov
aam
jo
dec
sub
js
xor
xor
aas
std
out
add
xor
xor
fcoml
sbb
cld
sub
mov
fwait
cmp
pop
daa
cmp
xor
pop
and
dec
jo
push
xchg
and
aam
stos
cmpsb
cmp
lret
insl
jns
andl
ficoms
cmpsb
ret
inc
pop
jnp
das
enter
arpl
sbbl
ds
dec
xlat
mov
jns
adc
frstor
scas
scas
in
xchg
aaa
bound
int3
int3
stos
mov
add
sub
dec
add
mov
sub
mulb
imul
mov
push
test
mov
in
outsb
fstps
addr16
sbb
push
mov
fistl
push
xchg
push
adc
data16
pop
icebp
repz
daa
test
bound
sbb
xchg
in
in
pop
mov
out
test
cmp
sub
loope
xlat
mov
imul
dec
and
xor
adc
fldl
jno
cli
jge
outsl
pop
push
xchg
dec
xor
addl
out
or
sbb
add
shrb
adcb
push
mov
mov
aad
mov
dec
jmp
dec
push
loop
mov
jbe
adc
in
sar
pop
sarb
dec
xchg
xchg
into
test
cmp
mov
mov
mov
or
mov
loopne
mov
dec
imull
sub
test
sub
or
mov
add
test
push
pop
out
jne
loopne
push
les
pop
andl
mov
lods
xchg
xlat
lret
shll
jnp
inc
jle
js
hlt
sbb
jbe
in
inc
pushf
and
outsl
cmpsl
dec
cmpb
add
add
call
xchg
sbb
add
mov
pop
dec
dec
lods
pop
sub
and
test
xor
adc
inc
xor
lret
mov
scas
cmpsl
sub
fldt
sub
push
xor
fwait
adc
clc
ret
das
ficoms
push
ret
xchg
sbb
jl
lcall
xchg
pop
jp
dec
lods
arpl
adc
add
test
ds
jmp
insb
test
jp
jmp
cs
and
out
mov
push
inc
and
xor
mov
jmp
pop
lock
jb
jne
arpl
adc
mov
mov
aad
in
jb
icebp
fildll
lods
jo
xchg
push
movsl
or
cld
jge
ds
test
cmpsb
imul
vmaxps
adc
in
insb
adc
repnz
dec
iret
lcall
lcall
pop
inc
in
sysret
fstl
movsl
shl
adc
sbb
aam
mov
mov
mov
xchg
aam
inc
push
fsubrs
jle
adc
mov
repz
cwtl
cwtl
and
fstps
js
mov
dec
dec
dec
repz
adc
or
shrb
das
fdivs
int
adc
imul
lcall
mov
dec
pop
in
sti
mov
sar
fucom
fcmovnbe
ss
aad
jmp
es
mov
pop
push
cmp
mov
mov
and
movb
xchg
dec
aas
or
subl
sub
mov
imul
cmpsb
ret
mov
xor
lock
loope
push
xchg
scas
orb
cmpl
jp
popf
or
repz
mov
lea
cmp
jecxz
iret
sbb
cmp
pushf
jp
jns
stc
pop
pop
lret
out
mov
sbb
sub
sub
push
xor
push
shrb
xchg
stos
sub
lods
add
xchg
cltd
nop
icebp
daa
jns
mov
or
aad
dec
fnsave
fmull
ret
sbb
dec
xchg
stc
sub
dec
lahf
in
out
sub
push
and
data16
mov
fcomps
or
pop
inc
stc
sub
cs
bound
xor
test
add
mov
test
and
out
xchg
js
lret
or
jns
movsl
pop
insb
sub
push
stc
data16
and
popa
ret
or
push
xchg
arpl
pop
sbb
ret
xor
mov
pop
pop
negl
cmp
clc
mov
les
add
mov
adcb
push
popa
insl
out
dec
adc
dec
lcall
and
add
out
js
daa
sub
adc
frstor
jbe
sub
inc
mov
inc
idivl
mov
dec
and
aaa
pop
cmp
roll
rcrb
arpl
adc
outsb
add
push
lcall
popf
xor
sbb
dec
inc
xor
ljmp
popf
idiv
xor
sbb
sbb
cli
push
outsl
adc
xchg
out
jg
fucomip
imul
inc
icebp
movsl
sbb
stos
jle
inc
enter
inc
lahf
les
xorl
stos
inc
adc
stos
pop
bound
mov
icebp
mov
xor
push
insb
add
call
adc
mov
je
push
imul
or
mov
lods
out
int
sub
cmp
sub
rcrb
cmp
mov
xchg
and
repz
bound
notb
push
sub
aas
sbb
cmp
add
push
es
gs
xor
xor
cli
rcl
out
sti
jge
push
xchg
cmp
imul
push
adc
xor
cmp
and
insl
mov
push
ss
cmp
sub
in
sets
jge
enter
lods
dec
xchg
and
orb
pop
or
cli
lock
xlat
imul
xchg
dec
xchg
inc
cmp
repnz
jbe
imul
in
cmpsl
notl
mov
mov
inc
loop
xlat
mov
insl
mov
or
cmpsl
aad
mov
push
pop
jae
into
and
aaa
cmp
fistpll
xchg
out
pop
call
mov
cmp
je
fsubrp
jb
add
sub
xchg
pop
sub
dec
mov
ret
mov
adc
mov
scas
xchg
sub
xor
push
outsb
cli
cmp
jbe
jge
hlt
mov
dec
imul
or
sbb
ficoml
jmp
jle
sub
daa
aaa
xor
repnz
mov
sub
aam
adc
popf
jnp
sub
cmp
mov
jo
jp
pop
or
in
movl
in
cmpl
out
out
and
push
push
ret
inc
loopne
leave
jecxz
mov
and
push
ja
in
outsl
and
jg
jnp
mov
loopne
pop
divb
pop
loop
mov
mov
push
fidivs
jg
mov
mov
out
mov
outsl
fwait
lods
je
out
mov
gs
fcoms
sub
fcomip
lock
imul
int3
push
xorl
jle
mov
jo
pop
and
sbb
sbb
fimuls
jge
xchg
out
out
jge
aas
xchg
xchg
inc
gs
jo
outsl
cmp
add
shrd
sbb
loopne
and
loope
sbb
xchg
faddl
sub
jmp
push
and
ja
dec
rclb
minps
cmpsl
scas
aad
push
lahf
ffree
pop
in
lret
arpl
dec
dec
orl
adc
jmp
pushf
enter
push
cmp
lcall
mov
push
dec
jg
pop
in
scas
pop
mov
jno
sbb
dec
mul
fdivrs
fmuls
sub
jno
jne
icebp
jno
test
sub
fcompl
loope
xlat
fisubs
and
ret
cli
sbb
cmp
adc
push
mov
lret
in
call
cmpb
ljmp
xor
push
or
in
cmc
popf
lahf
push
lods
enter
mov
fstl
fisttpll
sbb
movsl
ja
cli
ret
iret
adc
ret
sub
fnstcw
sbbb
test
jbe
cmc
or
popf
push
and
aad
movsl
cmpl
push
jne
adc
and
lahf
mov
lock
sub
push
out
call
lret
and
push
psubsw
repnz
lds
cld
out
test
push
and
xchg
mov
lds
aad
cmp
xchg
dec
sub
dec
jle
outsb
xchg
cltd
sbb
or
std
pop
je
xchg
pop
jl
push
sbb
push
test
test
hlt
mov
jae
cli
cld
dec
shl
aas
inc
in
dec
jne
sbb
xor
lahf
adc
sti
inc
xorb
dec
sahf
jecxz
fbstp
loopne
or
adc
jb
iret
cmpsb
iret
test
loopne
push
xchg
xchg
mov
fldcw
xchg
or
and
mov
bound
dec
xor
jne
ja
or
or
out
cld
cmp
repnz
ds
mov
repnz
pop
cmpl
or
outsl
push
sub
aam
in
fs
call
push
xchg
mov
cmp
loop
adc
iret
or
sbb
inc
testl
ss
stc
push
jnp
sbb
idivb
cs
xchg
xor
rorb
test
xchg
imul
je
push
stos
aad
jo
dec
sahf
ficompl
sar
jg
mov
rcrb
xor
repnz
pop
mov
ficomps
rcl
lret
xor
ret
mov
sub
repz
pop
out
lea
ljmp
inc
imul
cs
push
lods
imul
mov
ds
jge
inc
cli
out
sti
and
in
mov
out
dec
mov
cmpsb
pop
imul
ret
movsl
inc
sub
or
adc
dec
rorl
sbb
shl
pop
xorl
cli
daa
je
movsl
xor
jecxz
adc
mov
js
xor
sarb
fmul
fs
sahf
addl
sahf
pop
xor
loope
sbb
in
popf
xchg
insb
sbb
cmp
xchg
xor
scas
cmp
cmp
fistps
cmp
jmp
mov
mov
es
js
mov
mov
push
arpl
sub
mov
sub
dec
pop
std
testl
arpl
cli
jne
pop
inc
mov
xor
push
jmp
jbe
stc
or
and
out
fs
jmp
sub
lds
clc
lods
data16
fsubrl
push
xchg
aam
cmp
mov
insb
mov
xor
inc
incb
or
iret
and
cltd
jge
addr16
pop
sbb
push
or
cs
fistpll
push
shlb
and
aad
cmc
jl
pop
into
mov
vxorps
adcl
xor
push
jbe
inc
lea
lods
jnp
pop
aaa
xor
mov
jmp
sbb
jg
nop
or
cmc
adc
mov
scas
push
stos
mov
stos
xchg
dec
mov
fwait
and
repz
in
std
fimull
ja
out
inc
sarl
jns
adc
jmp
dec
data16
out
jbe
std
out
push
and
rcrb
xorl
daa
pusha
lds
cs
push
and
addl
jge
and
sub
test
mov
shlb
xchg
int
sub
shl
jge
mov
add
lods
rorb
sub
or
int
mov
imul
push
lds
scas
jecxz
add
fsubrl
aam
in
lcall
mov
push
or
xchg
pop
jmp
mov
in
cwtl
rcll
mov
jae
mov
aam
sbb
xor
testb
jae
dec
mov
sub
pop
fistps
pop
bound
mov
lmsw
cmc
xchg
xlat
sub
push
je
adc
sbb
aam
xchg
and
mov
sbb
fwait
popa
aad
dec
maxps
push
ja
mov
ss
pop
nop
outsl
jo
das
mov
xchg
xchg
xor
jo
inc
stc
imul
rorb
xchg
cmp
mov
popf
mov
push
cmpsl
dec
push
sti
add
ret
das
mov
and
mov
nop
sti
dec
outsl
imul
cltd
dec
mov
sub
gs
inc
sub
mov
push
sbb
jae
adc
clc
icebp
jbe
jge
rolb
sub
stos
inc
hlt
adc
inc
xor
mov
cmp
mov
push
inc
pusha
sbb
pop
cld
out
pop
ret
cmc
sbb
inc
decb
mov
push
add
inc
jmp
jg
test
fisubs
dec
cmc
adc
jl
xor
and
jb
out
or
sbb
lea
mov
sbb
pop
jnp
ja
std
and
imul
mov
pop
mov
imul
das
xchg
cmpsb
xchg
lods
pop
mov
test
fcomps
aad
inc
std
cmpsl
dec
jne
sub
inc
mov
inc
and
lahf
xor
call
inc
sub
xor
fistl
ss
jnp
int3
mov
xchg
xor
loop
mov
int
in
add
lret
mov
orl
or
cmp
aad
xchg
addb
jecxz
sbb
pop
cmp
xor
pusha
push
out
add
mov
pushf
mov
xchg
pop
mov
mov
xor
je
jl
ljmp
lret
std
enter
push
or
mov
pushf
insl
jae
push
lds
scas
pushf
sub
adc
testb
je
push
pop
iret
or
mov
lret
jnp
dec
sub
mov
rolb
mov
lret
cltd
add
pop
push
jge
roll
or
es
jmp
inc
mov
mov
xchg
xor
jbe
adc
stos
out
leave
imul
pop
sahf
cmpsl
sub
nop
dec
adc
popa
insl
decl
cmp
jmp
lret
mov
jp
and
push
or
outsl
mov
sbb
testl
xor
fdiv
les
xor
jbe
xor
sahf
fsts
movsb
add
xor
lcall
sbb
imul
mov
test
test
or
mov
mov
sahf
popa
mov
or
push
pop
sbb
add
sub
or
data16
iret
xchg
xchg
ffreep
adc
push
mov
notb
xchg
xchg
cmp
pushf
repnz
push
push
mov
ret
mov
jl
inc
pop
push
xchg
push
outsl
icebp
fldt
dec
xor
cltd
xchg
sub
ficompl
mov
test
lods
dec
in
lahf
out
xchg
lret
push
es
rcrl
mov
jne
test
or
data16
add
cmc
pop
xchg
jbe
pop
out
mov
sbb
negl
fdivr
cs
mov
nop
inc
sub
mov
gs
xor
inc
pushf
pop
fucomp
adc
gs
mov
mov
imul
mov
add
dec
and
mov
mov
xor
stos
adc
imul
lods
inc
out
push
xor
mov
insb
push
push
jmp
jbe
out
sub
loop
push
push
cmp
xchg
sub
pop
jo
adc
popa
mov
andl
sbb
cli
pop
sbb
inc
push
mov
xor
jge
pop
inc
ljmp
imul
fcmovnbe
je
xchg
dec
inc
add
pop
bound
cmp
lcall
jmp
mov
rcr
shrb
cmp
mov
repz
adc
dec
xchg
aas
orb
xchg
cs
mov
out
lret
or
fiadds
mov
lret
cli
decl
movsl
mov
or
and
pop
fdivl
sub
mov
in
push
pop
push
aad
ja
dec
comiss
inc
rcr
pusha
lahf
stos
flds
fmulp
ret
stc
int3
push
jecxz
adc
clc
inc
adc
jecxz
mov
rcrb
insb
jg
pop
sbb
sti
gs
pop
or
mov
mov
xor
push
gs
repz
int
ss
aam
aas
jle
adc
vpshlb
inc
popa
or
push
mov
stc
enter
arpl
inc
arpl
mov
pop
out
push
test
mov
call
push
fwait
jnp
pop
dec
mov
iret
stos
inc
shll
pop
sbb
mov
cmp
mov
insl
mov
cmp
inc
out
xor
lods
stc
das
test
mov
dec
jbe
gs
movsb
data16
stc
popf
bound
pop
fnstenv
sbb
sub
dec
outsb
ljmp
cmpsb
sbb
ss
stc
fisubl
dec
push
aaa
and
xchg
and
aad
jo
mov
stos
sub
add
mov
jb
push
fdivp
adc
ja
push
js
lea
or
jo
cmpsb
movsl
dec
ret
mov
bnd
insl
xchg
ret
mov
ljmp
lods
shl
sub
pop
frstor
jae
std
mov
lret
jge
mov
xor
jno
sub
in
xor
negl
sub
cmpsb
mov
imul
jmp
sbb
xlat
mov
stos
notl
dec
xchg
jno
adc
aas
sarb
cmovno
mov
xor
mov
pop
ret
sbb
cld
lods
add
les
inc
pop
rol
es
sti
sbb
and
les
xchg
dec
push
or
or
jmp
push
push
test
adc
mov
sbb
mov
loope
pop
sub
pop
dec
lret
icebp
aad
and
add
and
in
imul
jle
data16
aam
inc
ds
mov
shlb
leave
xchg
rcrl
push
mov
mov
cmp
pushf
add
icebp
ret
loop
mov
xchg
xor
sahf
stc
mov
inc
aas
aad
lods
xchg
or
rcll
jae
xchg
push
stos
xchg
add
outsb
icebp
xchg
out
aam
jns
jb
shl
mov
imul
popf
inc
repz
imul
xor
inc
sbb
jae
and
inc
rcrb
mov
adc
cs
in
fidivs
jg
xlat
jl
test
pop
ja
ljmp
fstpt
inc
dec
or
inc
sub
jae
xchg
jns
lret
addr16
inc
mov
dec
inc
out
mov
test
roll
aas
mov
inc
lcall
push
into
mov
push
pop
lcall
daa
sarb
ficomps
jbe
pop
pop
jmp
xor
sub
popf
loope
pop
sub
inc
or
mov
movsl
pop
imul
mov
jb
clc
retw
add
adc
testb
push
mov
xor
sbb
sbb
add
pop
inc
stos
mov
je,pt
int
add
jecxz
push
push
jl
dec
ljmp
mov
push
cmp
pop
movsb
sub
icebp
dec
xchg
xchg
sbb
movsl
ja
call
aad
cli
movsb
adc
lods
sbb
dec
jae
xchg
cmp
pop
das
xor
ljmp
adc
aad
push
mov
xlat
flds
jg
icebp
loope
outsb
ret
ljmp
mov
adc
ss
clc
inc
mov
sbb
adc
inc
push
and
mov
pushf
pop
out
inc
inc
push
pop
sti
nop
jno
or
test
add
dec
aaa
xchg
pop
ror
and
add
and
pop
stos
daa
outsl
ret
stc
xchg
or
mov
push
fwait
adc
inc
cmp
ss
mov
sub
pop
icebp
and
and
fsubl
jb
pop
cwtl
lea
or
jb
dec
fsubrl
ret
pop
pop
cmpsl
pusha
test
push
xchg
mov
push
jmp
or
xor
pop
lods
movsl
mov
nop
fdivl
jnp
lea
ficomps
stos
test
nop
icebp
sbb
add
leave
cmp
cli
add
xchg
ret
into
fsts
push
pushf
ffreep
cmc
movsl
xchg
rol
out
mov
jecxz
test
sub
fsts
pop
push
sahf
cltd
xor
pop
shr
cmp
dec
mov
inc
mov
mov
clc
lret
cmp
or
test
lea
dec
mov
adc
inc
inc
jg
xchg
jns
fidivrs
lret
mov
xor
in
sti
pop
sar
cmp
xchg
and
xor
stc
lods
inc
xor
xor
lea
dec
lret
add
xlat
aas
ret
jae
lock
mov
shrl
push
arpl
popf
ss
inc
or
jecxz
cmpl
outsb
xor
pop
outsl
dec
adc
mov
je
jp
mov
jb
je
sti
gs
sub
push
xchg
sets
ret
insb
test
cmpsb
shrb
mov
out
push
mov
popl
iret
lahf
les
dec
mov
jbe
pop
cs
cmp
es
push
punpckhbw
cmp
inc
pop
jg
adc
pop
jmp
fwait
sub
mov
call
jecxz
cmc
sub
mov
fs
outsb
out
inc
out
pop
xchg
je
jge
pusha
add
mov
lcall
sub
in
dec
dec
lea
lret
mov
test
jne
sub
mov
fistpl
out
or
testl
pop
ret
mov
lods
fmull
pop
movsb
xchg
addr16
add
lret
adc
mov
add
or
cmp
xlat
rol
add
fs
sbb
sti
lcall
push
loope
sub
pop
lods
sbb
dec
jae
sahf
ds
sub
adc
add
xor
ss
lea
gs
lcall
outsl
xor
pop
rcll
jnp
arpl
and
fimuls
push
jl
cs
cmp
lcall
loope
jp
js
sti
fs
add
lahf
arpl
sbb
mov
repnz
popa
clc
and
orb
popa
cld
lret
mov
mov
outsb
fcomip
cmp
fwait
test
jl
in
aam
bound
lcall
cmp
mov
sbb
pushf
loop
js
push
les
test
sarb
xorl
push
xchg
cmp
cli
sbb
sbb
xchg
loope
fistl
xchg
pop
sub
push
xor
mov
iret
mov
inc
iret
or
rcll
femms
cmp
icebp
outsl
popa
adc
mov
xlat
bound
push
test
ret
test
xor
or
shl
or
jne
std
sarb
ficomps
cld
mov
xlat
enter
stc
ret
dec
jae
clc
sahf
inc
testb
nop
aam
jl
mov
shl
or
lds
fcmovnb
and
cwtl
jae
inc
out
adc
xlat
mov
enter
popa
lret
push
cwtl
push
sbb
daa
shl
ss
jbe
cld
dec
test
push
mov
rolb
cmp
push
test
daa
sub
les
ret
pop
xor
mov
movsb
push
mov
push
cmpsb
cmp
iret
xchg
cmp
push
mov
mov
add
pop
les
inc
aam
scas
sub
jo
jmp
fs
test
call
aaa
pop
xchg
cltd
cmp
mov
jbe
cmc
pop
sbb
outsl
xchg
mov
adc
test
jne
push
jp
fdivrs
fnsave
aad
xchg
xchg
cmpb
outsl
xor
jp
adc
stc
mov
mov
sbb
call
cmp
cmp
and
dec
mov
xor
dec
ss
nop
pop
insb
stos
fs
sti
stc
cmp
sub
cltd
xor
mov
ljmp
mov
rcl
jle
mov
insl
out
mov
mov
sahf
pop
inc
js
cmp
and
lcall
jge
outsb
jnp
daa
and
je
notb
sbb
sahf
cmp
stos
inc
adc
faddl
ret
test
dec
xchg
cmp
sub
mov
ret
iret
insb
xor
push
mov
imul
xchg
push
cltd
stc
sahf
sbb
bound
insl
scas
daa
inc
add
mov
xchg
stos
or
xor
rolb
mov
mov
hlt
jns
xchg
out
imulb
xchg
test
inc
lods
cltd
out
add
cmpsb
inc
cli
daa
xchg
jo
add
fsubl
push
dec
in
adc
ja
outsb
xlat
scas
pusha
scas
push
or
push
int3
inc
add
sub
movb
or
loop
xor
ret
push
lret
mov
dec
cmp
test
sub
jg
mov
mov
and
push
jecxz
shlb
push
cmpb
lods
cmpsl
mov
adc
out
mov
aam
fs
orl
and
scas
repnz
jl
push
push
adc
fimull
mov
pop
and
and
adc
popf
inc
fnsave
addl
push
and
inc
mull
rorb
sub
xor
or
hlt
xchg
add
jle
or
imul
push
adc
es
and
subl
cmpsb
imul
jb
xor
xor
ljmp
lea
testl
out
xlat
stc
xchg
xchg
cmc
ss
inc
imul
lea
int
add
pop
in
mov
cmc
cwtl
pop
pop
pushf
fstpt
in
test
lds
push
sub
shl
pop
rcll
push
in
pop
lcall
aad
dec
mov
fldcw
inc
int3
pop
adcl
push
dec
mov
lret
or
jp
repz
jecxz
repnz
add
mov
cmp
mov
sub
and
adc
adc
ds
dec
mov
push
and
fistpl
push
adc
sub
push
xchg
adc
loopnew
pop
pop
cmp
jno
orb
pop
adc
out
dec
xchg
adc
rorb
loopne
loope
ja
lret
into
inc
imul
int3
mov
negl
inc
pusha
mov
rolb
mov
inc
jmp
loopne
xchg
xor
xchg
test
xchg
fs
bound
in
cli
sub
sub
push
inc
mov
aad
sbb
cld
pusha
or
iret
rorl
add
rcl
outsb
pop
out
fsts
sbb
into
aaa
or
mov
sbb
fs
cmpsb
fs
and
xchg
leave
or
push
push
sub
orb
stos
push
lods
popf
cmp
xchg
sarl
sbb
popf
ljmp
dec
mov
aas
mov
es
and
or
fs
push
push
dec
lods
orb
lds
pop
aad
repnz
jmp
mov
and
sub
push
fstp
push
push
jne
es
enter
inc
test
je
xchg
and
popa
jae
xor
subl
stc
data16
jmp
movsb
pop
imul
and
push
mov
mov
movsl
adc
into
daa
fildl
out
or
leave
xlat
adc
in
sub
cli
test
pop
push
je
mov
lret
dec
jae
inc
add
iret
cmp
imul
jbe
sub
sub
mov
xchg
dec
dec
inc
std
cli
shr
mov
lcall
fisubs
mov
pop
inc
push
mov
hlt
add
jecxz
scas
xor
mov
loope
adc
iret
or
and
mov
xor
dec
mov
aad
xor
sub
subl
mov
movsl
in
jl
mov
push
xchg
int
xchg
jno
jp
and
dec
sti
mov
mov
push
cmpxchg
jmp
ljmp
mov
mov
loopne
add
into
int
shrl
jno
in
and
inc
mov
xor
mov
cltd
pop
mov
mov
mov
stos
mov
xchg
shll
xchg
push
mov
out
sarl
jns
pop
mov
lcall
les
inc
sbbl
clc
enter
or
mov
lea
dec
xor
in
jmp
and
mov
mov
pop
in
es
mov
popf
test
and
fnstenv
cmp
clc
int3
pusha
push
jge
adc
sbb
cmc
std
add
loopne
dec
rolb
push
inc
clc
jmp
in
mulb
test
sbb
jb
lret
mov
hlt
jo
jecxz
push
nop
cmp
jns
gs
pop
mov
mov
fidivrs
call
sub
aad
cmpsb
adc
iret
movl
imul
test
mov
push
adc
imul
cmpl
test
jae
xchg
mov
adc
sbb
cltd
bound
lea
pop
push
cwtl
lea
insl
dec
movsb
in
inc
leave
add
jbe
pusha
pop
outsb
aam
xor
ja
add
das
aas
mov
dec
dec
loopne
into
into
stos
or
add
sti
mov
fsubs
in
mov
shlb
push
testb
lret
inc
mov
data16
ja
cli
fs
jmp
push
aas
pop
inc
cltd
out
mov
xchg
dec
pusha
xchg
leave
in
and
int3
mov
aaa
xchg
test
mov
subb
loop
push
imul
cmp
fs
pop
inc
adc
mov
mov
aaa
data16
loope
dec
das
gs
add
push
mov
push
push
mov
cmp
push
dec
cmpsb
cmp
dec
sub
aas
mov
pop
stos
push
ljmp
in
orl
dec
inc
jbe
popf
aaa
addl
mov
test
sbb
pop
jge
je
mov
enter
es
xchg
ds
xor
out
sahf
test
aas
in
leave
mov
inc
mov
jg
dec
bound
ljmp
push
int3
rcrb
incl
ret
fidivl
mov
xor
insb
mov
mov
cli
ret
fstl
jno
mov
test
mov
push
shrb
sti
out
addr16
scas
push
into
in
pop
pop
iret
adc
sti
dec
push
movsl
mov
mov
add
mov
add
cmc
fwait
pop
dec
and
sbb
test
or
nop
sub
mov
data16
scas
jge
fnstsw
sbb
in
and
adc
jo
gs
sti
push
xor
rorl
dec
cmp
sbb
testb
xchg
xchg
adc
mov
leave
xchg
ljmp
or
xchg
mov
mov
cmc
push
pop
stc
stos
test
push
pop
bound
stos
inc
inc
daa
ret
dec
xchg
in
jg
insb
movsb
rorb
enter
mov
xchg
pop
xchg
call
push
adc
jbe
xchg
add
cmp
pop
out
es
test
cmc
mov
xchg
andl
out
mov
fs
inc
loope
int
ss
fnstcw
inc
inc
negl
push
push
test
push
push
shrl
mov
aam
fisubs
sub
mov
loope
icebp
insl
adc
adc
or
mov
or
or
out
pop
cmp
outsl
les
ss
mov
flds
lds
fmull
scas
stos
enter
ret
cltd
inc
and
popf
cs
mov
xor
pop
test
add
and
pop
pop
fbstp
pop
fmulp
or
shrl
pop
repz
inc
inc
xchg
cmp
inc
nop
or
test
inc
enter
mov
add
cltd
mov
cmp
jnp
les
or
into
adc
aad
adc
add
sti
or
pusha
cli
roll
adc
clc
pop
and
fdivp
inc
mov
fimuls
ds
add
and
adc
sbb
int3
fcomi
stos
mov
inc
xor
adc
or
out
sub
dec
or
aam
fwait
mov
ds
inc
cmp
stos
sbb
orb
cmp
xor
cltd
ds
mov
mov
out
sub
inc
push
outsl
test
jge
outsl
or
fcomi
xchg
loopne
std
outsb
mov
push
xor
stos
and
or
mov
inc
sbb
xor
or
scas
in
sti
insl
sti
adc
mov
sub
sbb
and
icebp
pop
mov
subl
xor
mov
into
cmpsl
out
push
ja
imul
and
addr16
push
scas
movb
iret
jne
pusha
jmp
sti
mov
jbe
mov
aas
pusha
pop
out
sbb
xchg
stc
ficomps
mov
mov
add
movsl
sbb
jecxz
xor
jmp
fwait
cmp
call
lea
sub
enter
push
mov
sbb
in
adc
andb
mov
dec
jmp
scas
sub
jno
jnp
add
cli
cmp
add
and
mov
pop
pop
cli
add
test
imul
fsubl
mov
dec
roll
push
leave
aas
xchg
stc
xor
fmul
imul
jmp
sbb
mov
loop
mov
jnp
inc
out
call
aaa
bound
scas
mov
insl
cmpsl
in
frstor
data16
jg
cmp
xchg
xchg
int
jecxz,pt
cmpsb
lods
pop
add
call
and
and
cwtl
mov
stos
or
cli
insb
pop
test
test
test
fidivrs
pop
jp
xchg
jns
jae
in
xor
xor
lret
sub
add
sahf
nop
jecxz
dec
mov
cld
dec
mov
jo
ror
cltd
jl
cmp
push
inc
xchg
xchg
push
adc
xchg
fwait
mov
jle
mov
push
mov
orb
jnp
lret
cmpb
rclb
pop
mov
push
jge
ret
test
and
or
rcll
lret
mov
dec
or
fwait
xchg
insb
shl
in
js
pop
movsb
out
popa
xor
push
std
fisttpl
or
in
in
sti
fldl
incl
cmpl
pop
mov
jmp
js
jle
sbb
mov
cmp
aas
out
dec
cmp
mov
and
push
test
sub
pushf
pop
insb
pusha
mov
push
scas
sub
sub
js
mov
into
nop
mov
pop
pop
ret
adc
inc
testb
mov
sahf
cltd
jns
lret
aas
stos
xchg
sbb
loopne
sbb
inc
ret
ret
lret
pop
and
sbb
rcr
dec
inc
mov
fucomi
and
sbb
xchg
in
cmp
mov
fldl
loope
mov
in
mov
orb
insb
daa
orb
flds
push
enter
inc
pop
iret
xchg
xor
sbb
xor
out
push
pop
xor
ret
sbb
dec
ficoml
push
scas
mov
fwait
dec
aas
int3
add
xor
sbb
xchg
fwait
mov
in
pop
imul
xchg
and
scas
shlb
push
pop
cltd
setne
aas
inc
xor
push
and
je
xorl
pop
mov
int
lea
jns
ja
into
and
pop
pop
mov
je
jb
mov
out
mov
dec
fs
in
scas
movsl
push
imulb
and
jno
adc
cs
xchg
mov
repnz
fstpl
mov
pop
loope
cltd
xor
mov
mov
jne
shl
pop
jno
sub
lret
cmp
mov
imul
inc
mov
lahf
mov
push
in
andb
rorb
cmp
sub
decb
jle
loope
jg
bound
mov
mov
inc
mov
push
ja
cmp
pop
dec
loopne
repz
jae
sbb
repz
loop
ja
out
xchg
sbb
mov
jmp
sarb
daa
cmc
push
adc
xor
movsl
add
mov
dec
push
out
neg
adc
and
mov
leave
lods
adc
dec
sbb
xor
test
dec
push
inc
pop
mov
adc
inc
push
mov
mov
sbb
ljmp
xchg
dec
js
xor
pushf
shrl
dec
inc
icebp
or
into
mov
out
xorl
or
out
inc
aad
data16
dec
and
inc
repnz
mov
xchg
adc
sti
jns
xor
dec
iret
addr16
adc
idiv
enter
mov
stos
repnz
fwait
loop
sub
stos
xor
mov
cs
call
arpl
or
test
cli
mov
jmp
mov
inc
mov
push
sbb
stos
imul
mov
aam
push
das
xlat
pusha
mov
xchg
pushf
push
dec
or
jecxz
jle
cld
jns
scas
jbe
pusha
fisubrl
les
sbb
and
test
rcrb
into
lock
jmp
std
sub
loopne
clc
inc
inc
cli
mov
jo
dec
sbb
xchg
dec
test
roll
icebp
mov
mov
cltd
in
xor
int3
push
stos
sti
jb
add
add
dec
inc
push
lret
pop
xchg
or
shl
ja
sub
dec
add
scas
cmp
fs
insl
sbb
dec
fisubrl
mov
fldenv
jg
int
dec
andl
and
lods
ss
sub
call
xchg
push
lcall
sub
in
inc
dec
dec
scas
push
and
adc
cmp
mov
cmp
mov
jmp
lods
ret
sbb
inc
out
dec
jp
push
das
ret
add
jnp
icebp
pop
push
sub
hlt
ret
cmp
aad
in
push
sbb
lea
rorb
mov
in
mov
inc
cltd
mov
paddb
out
push
inc
pop
cltd
fistpl
jge
icebp
dec
jecxz
or
and
jo
aas
sbb
inc
leave
push
jb
incb
mov
pop
or
sbb
rolb
mov
test
xor
add
testl
mov
inc
dec
xchg
inc
in
xor
mov
jne
idiv
jecxz
inc
mov
push
bound
roll
jmp
stos
mov
out
dec
adc
inc
and
dec
ss
pop
adc
sti
jb
xchg
test
pop
je
out
push
push
call
mov
cmp
pop
push
jp
pop
push
insl
enter
cmp
xor
xchg
lret
sbb
cmp
loope
pop
and
jae
push
shll
lahf
push
sti
mov
and
add
into
scas
pop
pop
rorb
dec
sub
daa
ret
int3
cli
fcom
cmovl
out
outsl
sub
lahf
add
and
mov
out
cmc
adc
mov
lds
movsl
decl
pop
cmc
fwait
lret
mov
ret
dec
jg
dec
movsl
stos
jle
sar
mov
add
not
xchg
hlt
jae
lret
adc
in
inc
mov
push
arpl
and
jo
add
inc
rcl
sub
add
mov
lcall
loopne
sbb
sti
into
shlb
out
js
test
je
adc
icebp
pmaddwd
jbe,pn
int3
and
aad
cwtl
popa
jnp
sbb
movsb
cltd
outsb
icebp
xchg
subl
aas
mov
int3
jge
sar
popa
and
movsl
or
movsl
imul
cld
lret
inc
and
cmp
data16
cwtl
jle
cmp
mov
imul
rcr
mov
fmuls
mov
inc
cmp
insl
hlt
sub
fimull
sbbl
mov
addr16
mov
lock
mov
test
into
addr16
cmc
pop
pextrw
in
sbb
gs
mov
pop
push
xor
cmp
xchg
repz
sub
arpl
jb
sahf
sbb
sub
cmc
shl
pop
cld
enter
pop
daa
loop
jnp
popa
xlat
repz
testb
sbb
and
jp
mov
pushf
add
push
imul
cltd
and
mov
popa
cmp
fidivrl
pop
cmp
sbb
or
cmpsb
or
pushf
xor
mov
mov
enter
sahf
xchg
into
xchg
js
rolb
mov
adc
aas
inc
mov
out
js
and
cld
mov
dec
cltd
mov
lods
push
in
pop
cld
xlat
mov
push
in
fwait
testl
or
mov
xor
addr16
test
test
xor
jl
pop
cmp
das
inc
out
jp
in
popf
fidivl
test
aas
cmc
mov
movsb
pop
sbb
mov
icebp
inc
aaa
sbb
shl
psubb
lret
lods
repz
fistpll
cwtl
hlt
ja
lods
out
mov
ds
daa
mov
into
int3
aad
jmp
and
nop
sub
or
and
push
aas
scas
mov
js
cmp
lret
loop
xor
aad
inc
int
call
in
insb
adc
outsl
int
sbb
and
fildl
cmc
loope
fstpl
pushf
lret
es
jmp
mov
out
mov
and
outsl
lea
inc
inc
fisttps
ficoml
xchg
enter
dec
mov
aas
std
mov
sti
sub
in
cmp
mov
outsb
test
jae
adc
cs
insb
and
push
pop
pop
jbe
pop
push
cmpb
ja
sbb
dec
and
add
add
mov
sub
push
ljmp
add
mov
aas
jg
adc
cmc
loopne
or
jle
mov
push
xor
bound
mov
mov
lods
loope
or
std
adc
fistl
push
cmc
push
mov
nop
clc
cmp
inc
daa
xor
je
dec
jecxz
rol
inc
mov
pop
sub
sub
lret
jb
fwait
cmp
cmpsl
mov
arpl
mov
inc
jecxz
outsb
adc
shll
push
and
movsl
sub
and
xchg
jl
cwtl
out
daa
loop
cld
sahf
insl
leave
dec
nop
jmp
push
jns
pop
add
orb
lahf
in
mov
push
inc
insb
fbld
adc
in
sbb
push
jae
xor
dec
inc
jo
repz
pop
ljmp
cmp
outsl
mov
sub
mov
mov
mov
jmp
mov
imul
add
mov
xlat
mov
or
shlb
std
sub
mov
cs
aas
int3
out
test
nop
dec
sbb
inc
add
push
pop
out
je
cli
inc
cwtl
nop
scas
xchg
or
sub
xchg
outsb
sub
sub
jo
dec
mov
mov
lahf
sbb
loop
icebp
sbb
mov
outsl
sub
sub
dec
nop
xchg
pop
pop
xor
jae
mov
dec
sub
ss
cmc
mov
pop
enter
daa
add
jmp
adc
pop
add
or
frstor
and
dec
mov
dec
inc
sub
cmp
leave
pop
jmp
movsb
hlt
adc
shlb
mov
test
pusha
mov
std
jmp
loop
adc
xor
dec
push
aam
xsaveopt
lock
rcll
lcall
push
xor
mov
sbb
mov
xor
fldenv
jg
iret
dec
xor
imul
xor
popf
mov
dec
fistps
dec
push
mov
push
or
lret
push
push
add
mov
cld
adc
enter
stos
mull
pop
cs
lods
push
popa
int3
sbb
insl
mov
call
pop
or
sub
xor
pop
scas
lret
repz
sti
fisubrs
add
cmpsb
js
fwait
call
stos
add
test
lahf
popf
pop
sub
jg
gs
push
jbe
cmpsl
mov
outsl
jno
jns
push
fcompl
jl
inc
cmpsl
jb
xchg
aas
sets
mul
pop
and
jae
jo
pop
cwtl
dec
popa
mov
sub
mov
lret
imull
mov
daa
stos
fnsave
stos
push
push
cmp
push
xor
aas
gs
data16
push
pushf
addr16
mov
add
and
xor
xchg
or
out
les
xchg
loop
daa
dec
lods
lea
in
sti
cltd
add
arpl
loope
jecxz
xchg
cmp
loopne
scas
dec
mov
xor
jl
into
data16
cmc
mov
fwait
enter
ss
sub
pop
inc
xor
repnz
scas
jbe
inc
lahf
imul
mov
cmp
orl
fcmovnu
leave
push
mov
cmp
das
cmpsb
loope
sub
lcall
push
or
cmp
jbe
cmp
inc
int3
xor
cltd
enter
push
xchg
aam
mov
push
orb
mov
shrb
arpl
sbb
or
cmp
and
jae
ljmp
or
or
call
xor
push
mov
cmp
pop
xor
dec
inc
int3
mov
lcall
inc
dec
fistpll
pop
lods
fs
rdmsr
dec
test
inc
movsl
sti
sbb
push
ss
test
add
dec
push
in
stos
arpl
mov
ss
inc
xorb
loopne
loopne
add
int
mull
inc
inc
fs
cmp
adc
shlb
xchg
repz
mov
shlb
sub
sbb
mov
cmc
stc
int
jge
cltd
jo
into
sbb
int
xor
dec
movsl
inc
out
pop
push
mov
mov
and
mov
cmc
andl
pop
jne
cli
sbb
pop
int
test
jnp
jp
add
inc
sub
mull
outsb
jle
or
incb
clc
ja
cmpsb
mov
sub
shrb
xor
sbb
push
scas
repnz
lret
pop
add
js
test
and
sar
and
add
cmp
mov
icebp
push
lock
roll
mov
add
sbb
and
mov
push
int3
lret
xchg
or
mov
les
push
out
jp
inc
jmp
pushf
iret
das
pusha
repz
addr16
mov
pop
sub
outsb
jmp
fcoml
fs
mov
mov
fs
and
xorl
push
pushf
cmc
out
fnstcw
pop
rorl
imul
movsl
add
mov
push
cltd
inc
out
xor
push
fs
jbe
pop
fwait
cmp
xlat
les
cmp
scas
add
or
dec
cmp
aas
movsl
fs
ficoml
loope
daa
jnp
lret
lahf
and
pop
sahf
add
jl
iret
aaa
lods
sbb
sti
jg
clc
call
adc
and
xchg
xorl
push
out
jmp
or
jno
fsubp
xor
out
or
push
adc
cltd
jg
jne
mov
movsl
repnz
ret
push
stc
and
insl
mov
sub
into
ss
jl
stos
aas
mov
aad
lahf
pushf
adc
fidivs
jmp
xor
cli
xchg
insb
xchg
pop
sbb
mov
js
andb
jmp
mov
in
or
mov
cmp
movsb
nop
inc
test
push
pop
shrl
out
out
mov
mov
jmp
into
cmp
cli
imul
or
in
shl
ret
cmp
mov
pop
sbb
sbb
fsubrl
test
int3
dec
xchg
mov
sub
lret
inc
insl
xor
pop
flds
cmp
cwtl
cld
jo
rorl
mov
sahf
int
mov
jb
hlt
mov
and
jb
mov
mov
shlb
scas
push
fs
js
add
das
ljmp
sub
xor
mov
mov
insl
sub
jno
lret
loopne
jp
mov
cltd
fcoms
fwait
xchg
mov
mov
jmp
or
sub
xor
or
mov
loop
imul
aaa
add
cmp
xor
and
mov
pop
add
mov
sub
mov
sub
adc
mov
jl
push
icebp
xor
push
mov
inc
sub
and
mov
pop
movb
mov
jns
sub
or
shll
inc
push
inc
or
fwait
ljmp
andl
xlat
aaa
fs
inc
and
and
dec
jmp
jg
rorb
popf
dec
mov
mov
mov
rclb
pop
out
pop
inc
pop
or
sbb
pop
aaa
into
push
lcall
jb
test
ret
rcrb
mov
fidivrs
imul
add
and
push
imul
mov
loop
lds
mov
dec
lcall
sbb
or
mov
sub
int
lret
push
add
ret
sarb
shr
push
or
stc
xchg
arpl
scas
into
imul
fdivs
sbb
inc
adc
fcmovbe
bound
mov
adc
aas
cmp
inc
add
inc
cmp
pop
cmc
cmp
scas
cmp
sub
push
xor
dec
fs
or
cmp
jmp
cltd
jp
inc
orb
sbb
add
imul
sub
or
cmp
mov
pushf
icebp
sbb
adc
and
lods
fistps
jge
jo
stc
aad
dec
lcall
pop
rolb
mov
popf
cmp
push
adc
xchg
pushf
xchg
or
cmc
out
mov
mov
push
jge
push
std
or
mov
sub
sbb
push
xor
push
mov
sahf
push
xchg
push
inc
adc
or
aad
and
xor
ljmp
sub
aas
push
das
and
ljmp
fisubrs
mov
jo
mov
pusha
mov
in
fldt
data16
xchg
mov
push
push
test
cwtl
fisttps
btc
cltd
push
stos
mov
outsb
cmpl
push
push
xor
inc
mov
outsb
add
mov
cmp
inc
test
xchg
cmp
pop
inc
mov
mov
fsubrl
cmpl
fwait
roll
cmc
call
or
fwait
adc
jecxz
push
push
dec
jg
push
push
cmpsb
or
xchg
lods
cmp
mov
sbb
stos
xor
shlb
popf
push
in
cmpsb
sbb
divb
scas
imul
sti
in
add
stc
push
data16
add
movl
sub
push
pop
add
cmp
leave
cmp
loope
jnp
sbb
cmp
stos
mov
dec
icebp
mov
test
into
rorb
xor
pop
jnp
add
inc
xchg
out
xchg
sub
mov
sub
fistpl
repnz
dec
and
rorl
lcall
dec
stos
pop
mov
ja,pt
rclb
or
cmp
push
sti
imull
jl
lahf
xchg
outsb
jb
xor
imul
cmp
cs
ret
xchg
call
mov
inc
cmpsl
imul
stos
fcoml
call
inc
adc
int3
jl
add
in
inc
or
call
insb
sarb
ljmp
cmp
repz
dec
lret
je
sub
mov
in
mov
es
cld
fdivs
mov
pushf
fildll
sbb
iret
jge
sbb
xor
test
mov
cmc
data16
mov
mov
inc
add
sahf
iret
sbb
adc
sbb
xor
scas
fs
arpl
jno
adc
ret
jae
mov
pop
cmp
mov
testb
inc
popa
dec
test
inc
pop
pop
dec
mov
jecxz
mov
insb
iret
repnz
xchg
lret
push
or
jge
dec
cmp
xor
jl
into
sub
popa
repnz
imul
lods
inc
pusha
jle
inc
movsb
mov
and
and
test
and
add
sub
insb
int3
and
iret
mov
cli
inc
inc
push
int
dec
test
aas
push
cs
cltd
mov
mov
mov
movsb
js
inc
xchg
in
data16
into
loope
and
in
dec
ret
jo
mov
leave
scas
bound
enter
jo
pop
cld
jns
jl
std
aam
insb
push
cmpsl
andb
add
repnz
adc
js
inc
sbb
shll
sub
xchg
es
inc
lahf
repz
and
and
xchg
pop
data16
aad
lret
clc
fidivl
push
test
leave
and
cmpsl
cli
fs
sbb
mov
add
cwtl
lock
icebp
mov
mov
fs
rcrl
into
icebp
mov
pop
pop
lret
sub
xor
gs
test
or
fdivrl
jmp
icebp
mov
pushf
sahf
mov
sbb
and
push
cmp
ljmp
push
xor
cltd
fcmovnu
gs
je
push
xchg
cmp
mov
adc
dec
adc
ret
and
add
std
pop
fldcw
adc
out
aaa
inc
testb
adc
lret
rcpps
loopne
ret
loope
out
cmp
jmp
inc
pop
jl
popf
or
std
xchg
pop
pop
aam
inc
filds
pop
sbb
nop
dec
push
pop
movsb
mov
jnp
dec
xor
xchg
dec
fwait
sub
in
cwtl
leave
mov
cmc
inc
mov
cmp
fsubl
pop
in
pop
ud0
adc
fisttpl
push
push
cltd
add
out
pusha
mov
lcall
add
inc
lods
or
btc
mov
xchg
fdivr
fcos
out
xlat
movsb
ljmp
sub
movsl
ret
pop
imul
psubsw
cli
popa
inc
call
xchg
test
jb
ja
push
mov
mov
mov
das
test
dec
jne
cmp
int3
mov
sbb
jmp
gs
mov
cmc
sub
inc
xchg
jle
dec
pop
xor
ds
outsl
out
ja
xchg
in
leave
out
sahf
cmp
mov
mulb
sahf
cmc
cli
clc
push
fs
add
mov
popf
sbbb
mov
test
int3
inc
jmp
outsl
mov
sbb
aaa
ret
and
arpl
iret
sbb
es
jno
out
sub
push
add
pop
fadd
xchg
mov
stc
icebp
ret
and
ljmp
inc
cmc
subl
call
mov
mov
je
xchg
bound
mov
sub
mov
pop
mov
jmp
insb
or
sbb
pop
je
in
fwait
and
jno
into
or
filds
xor
jns
push
cmp
dec
icebp
fxch
jge
push
cs
lcall
push
push
and
movsl
push
loop
jmp
push
mov
jg
adc
sub
dec
lahf
les
sub
dec
mov
dec
mov
js
mov
mov
push
sbb
add
je
jmp
daa
mov
test
movsb
adc
adc
add
xlat
imull
in
leave
inc
sub
mov
aad
adc
mov
lret
push
push
ror
fadds
sbb
aam
xchg
cli
inc
out
loopne
popl
or
scas
xchg
push
cmp
push
pop
cwtl
fcom
jne
cmp
xor
sbb
inc
or
aam
scas
aas
cmp
stos
lock
fs
sbb
lret
push
push
lods
cmpsl
mulb
addr16
fstps
cmp
and
faddl
sub
and
mov
ljmp
icebp
lret
and
cmpb
int3
fwait
xchg
call
lret
cmp
cmp
es
push
stc
sub
jp
pop
mov
jmp
movsl
xchg
cmp
aaa
cmp
cmp
and
sub
and
dec
lods
ds
subb
std
push
mov
push
cmp
jecxz
dec
mov
loope
popl
push
pop
add
and
push
mov
add
scas
dec
push
dec
push
mov
push
mov
dec
sahf
sbbl
test
stos
xor
hlt
lcall
adc
out
sub
mov
stc
icebp
add
dec
notb
jg
xor
sub
dec
test
rclb
cmpsl
andl
gs
pop
loop
mov
aaa
dec
fdiv
push
or
mov
jb
outsb
sub
nop
or
or
sub
bndldx
test
cltd
cmp
and
in
and
pop
out
xchg
jecxz
push
in
add
lahf
push
mov
pop
into
enter
add
aad
inc
stos
divb
mov
std
lret
cmp
jo
sub
aam
mov
je
test
jo
mov
cltd
cmp
xchg
cmp
pop
mov
js
clc
cmpsb
cmp
cli
sbb
repnz
dec
mov
ljmp
dec
enter
add
mov
out
adc
mov
cltd
rclb
push
push
outsl
jg
nop
aad
mov
ret
fs
sbb
fstpt
push
cmpl
mov
pop
and
rorl
adc
jl
sub
dec
sbb
adc
aaa
jmp
jg
inc
ret
and
lcall
addr16
push
and
push
enter
jnp
mov
data16
ret
addr16
mov
xor
lret
test
ljmp
or
cmp
jne
dec
add
scas
stos
ret
add
sbb
jmp
lcall
test
inc
pop
sbb
push
inc
loop
test
cld
mov
sbb
test
mov
mov
stos
add
xor
xor
mov
out
jb
or
dec
testb
rorb
data16
and
insb
rorb
movsl
sub
xor
sbb
repz
imul
pop
lahf
clc
pop
sbb
data16
lret
dec
mov
push
xor
mov
fistps
dec
pop
mov
outsl
cltd
in
xor
push
out
lcall
fwait
mov
adc
push
icebp
sbb
movsl
sbb
cmc
sbb
mov
inc
pushf
dec
lock
xchg
inc
cmp
or
nop
in
les
add
out
imul
push
icebp
int
into
pop
rcrl
test
adc
and
mov
mov
into
xchg
sarl
imull
push
mov
push
jne
jp
and
xchg
mov
mov
mov
pop
mov
inc
or
xlat
int
mov
xor
loop
out
shlb
repz
leave
shrl
jno
cmpsb
xlat
mov
pop
and
inc
cmp
jb
icebp
adcb
adc
xchg
lret
mov
fcompl
pop
int3
xor
mov
fisttpll
das
mov
sub
mov
scas
loope
cs
mov
shr
adc
scas
lods
xchg
sbb
in
imul
jns
es
lret
andl
sub
and
adc
mov
add
jmp
dec
rorb
test
sbb
pop
addr16
repnz
les
adc
rcl
mov
les
pop
in
xchg
enter
pop
in
dec
or
dec
out
popf
test
push
xchg
andl
call
imul
mov
push
gs
pop
dec
in
fldenv
cmpl
or
cmpsb
adc
pusha
sub
xor
and
inc
adc
xor
in
aaa
popf
fisttpl
jmp
stos
dec
mov
mov
loop
dec
stc
pop
dec
push
pop
outsl
ret
cmp
arpl
pop
icebp
push
repnz
pop
test
inc
nopl
scas
push
sti
cs
mov
popa
sub
push
int
mov
sbb
je
fnclex
jae
mov
push
push
out
pop
inc
xlat
inc
mov
hlt
shll
test
popf
pop
fwait
xor
jbe
cmp
mov
fwait
aaa
jmp
add
popa
repnz
xor
or
xchg
dec
jle
xlat
insb
in
out
sti
icebp
pushf
hlt
dec
push
xchg
dec
add
sub
sbb
cmp
or
inc
sub
test
mov
or
jl
adc
dec
aam
sub
dec
mov
lea
popa
sbbb
data16
cmp
iret
into
andl
mov
jno
pop
gs
enter
insl
fs
cs
sbb
fsubl
mov
mov
rol
and
mov
cwtl
mov
jecxz
xchg
xchg
out
addl
cmp
fimull
cmp
nop
and
cld
cmp
divl
imul
insl
fildll
fs
push
jae
xchg
adc
outsb
les
lds
xchg
mov
loopne
pop
cmpb
xchg
add
fldt
inc
stos
aas
push
outsl
sbb
jmp
ss
decl
adc
jg
pop
pop
cmp
jno
mov
aas
and
inc
pop
sahf
es
jmp
cmp
dec
iret
sub
fcmovne
test
mov
push
jnp
fsub
test
test
sbbl
sti
icebp
jp
and
adc
and
ret
fs
dec
not
leave
sarl
mov
pop
stos
mov
pushf
fiadds
dec
mov
cmp
mov
xor
pop
dec
loop
pop
or
adc
cwtl
inc
xchg
xchg
and
or
pop
mov
adc
sbb
push
mov
add
sub
jne
cmpl
ljmp
mov
xchg
cmp
cld
cwtl
dec
ret
out
cmp
gs
rorb
add
fadds
es
je
in
sbb
mov
repnz
and
mov
loop
add
nop
gs
jo
int3
dec
adc
ja
scas
sbb
loop
jnp
mov
pop
jb
ret
iret
or
int
mov
inc
mov
dec
out
and
hlt
movl
cld
and
and
cltd
xchg
lret
bound
lahf
inc
movsl
fsubs
scas
out
in
leave
stos
mov
mov
push
push
in
mov
pop
jle
in
cmp
pop
out
or
mov
aas
mov
ljmp
add
jb
mov
pop
xor
aam
or
jl
dec
ret
mov
push
out
lods
lods
adc
pushf
testl
mov
nop
flds
lahf
shrb
mov
jl
mov
cld
insb
xlat
sbb
push
sub
insl
adc
jle
add
iret
out
xchg
cwtl
and
xchg
loopne
in
cltd
jno
lods
jge
cmpsb
scas
or
mov
sbb
sbb
adc
add
dec
and
or
mulb
sar
mov
dec
dec
and
pop
xchg
ret
or
or
xchg
mov
inc
popa
fstps
lods
addr16
inc
fisubs
mov
cmpb
cmp
pop
mov
fs
gs
jle
jne
push
xchg
adc
and
repnz
and
mov
adc
adc
jne
lea
push
jo
mov
sbb
mull
andl
mov
jl
mov
lcall
mov
push
mov
mov
jl
sub
mov
clc
cs
pop
jo
push
shlb
in
mov
psrad
push
aaa
and
and
mov
fistl
and
sbb
pop
add
es
dec
sbb
pop
into
cltd
loope
sahf
jp
stc
fisubrs
mov
jp
jne
jecxz
sub
mov
repnz
cmovs
mov
outsl
xchg
push
cmc
sbb
jno
add
dec
call
or
stc
es
test
ds
imull
aaa
xchg
ds
mov
mov
push
in
push
lods
sub
cmp
xchg
mov
aam
lret
popa
or
mov
lret
mov
jo
sbb
enter
ljmp
add
sti
test
push
fildll
xchg
adc
loop
push
add
cmp
xchg
mov
cmp
add
add
xchg
clc
sbb
pop
jg
lods
daa
fs
inc
daa
cwtl
jecxz
dec
pop
mov
pusha
int
inc
add
fsubs
xchg
ret
push
xchg
adc
xor
cltd
push
mov
in
or
int
lds
xchg
and
cmp
lcall
cli
fisttpll
dec
xchg
mov
add
and
fs
jae
in
and
aam
push
je
mov
mov
incl
icebp
fistpl
add
inc
push
push
imul
daa
sub
fisttps
movsb
fisttps
pop
les
clc
dec
sahf
or
je
icebp
data16
inc
stos
dec
or
lret
jns
jno
adc
cmp
lods
arpl
sbb
cmp
subl
scas
xchg
sbb
dec
dec
jae
mov
sbb
push
into
cmpsl
xchg
adc
rclb
adc
adc
mov
or
pushf
cmp
adc
iret
lds
mov
lahf
sbb
push
lret
leave
popa
push
jae
fnstenv
cmp
mov
je
pop
insl
xchg
pop
flds
fs
push
mov
pop
mov
lods
jae
push
inc
adc
mov
sbb
lods
add
dec
xlat
dec
in
and
xchg
inc
sbb
orl
xchg
scas
jne
ljmp
add
add
bound
xor
pop
shll
packuswb
pop
inc
or
adc
mov
xor
sbb
jecxz
aas
call
or
mov
mov
ffreep
jmp
mov
or
sbb
or
xchg
scas
jle
and
ret
scas
andl
adc
ds
jge
mov
push
loopne
sti
cmpsb
lds
je
aas
mov
lock
adc
push
push
jl
dec
negb
jp
mov
nop
mov
lahf
pushf
fdivrs
or
hlt
or
xor
adc
movsb
xor
or
fwait
jnp
sub
popf
xchg
inc
cmp
pop
adc
mov
push
cmp
gs
stos
jns
mov
js
stc
pop
xor
sub
adc
or
es
push
mov
sub
sub
fcomi
sahf
ljmp
push
push
enter
cmp
fs
inc
and
inc
in
es
xor
push
mov
mov
aam
lcall
pop
int
add
in
dec
mov
repnz
hlt
imul
mov
outsb
mov
jg
scas
mov
ss
inc
fbld
test
pusha
push
add
aam
imul
or
xorl
sub
adc
and
int3
int3
loopne
inc
loope
add
mov
xchg
in
decb
lods
xor
cmpsl
mov
hlt
bound
insb
shlb
push
repnz
mov
xchg
push
insb
add
inc
mov
jno
cmp
adc
inc
and
aam
ret
push
in
es
push
sbb
sub
mov
shr
push
insb
scas
mov
mov
jecxz
repnz
dec
xchg
enter
outsl
fbld
push
cwtl
dec
push
subb
and
pop
lret
push
sbb
in
mov
ficoml
adc
adc
adc
popa
in
xchg
das
imul
sub
out
sub
mov
adc
aam
xchg
add
and
mov
stc
xor
mov
addr16
imul
or
cmp
xor
scas
push
jbe
idivb
lret
out
pushf
xchg
push
out
jns
mov
insb
loop
or
int3
leave
inc
jb
sub
pop
stos
mov
sub
mov
add
push
pop
mov
mov
in
ret
or
xchg
mov
sub
ficoml
in
pusha
xchg
outsl
es
testb
inc
pushf
loope
jecxz
jmp
pop
push
mov
pop
fdivr
ss
cld
jl
pop
test
and
dec
adc
aam
js
fs
push
push
xorb
jg
fwait
xor
pushf
pop
mov
mov
jp
add
sarl
inc
pusha
stc
jecxz
pop
stc
nop
test
mov
pop
outsl
and
xchg
fiaddl
xchg
movsl
push
push
rcll
outsb
xor
mov
mov
sub
lret
sahf
jnp
or
divl
cmpsl
stos
fwait
or
jnp
das
dec
loop
in
dec
iret
ss
addr16
cmpsl
std
push
lahf
pop
not
lock
and
lahf
cmp
pop
jne
lahf
fisttpll
push
push
or
cmp
fistl
push
pop
pop
sub
stos
and
test
enter
sub
mov
xor
out
xor
mov
pop
jne
jae
ja
mov
xchg
iret
push
inc
dec
aam
mov
test
xchg
int
call
repnz
out
adc
ret
jecxz
sahf
insb
mov
les
dec
jecxz
mov
xchg
movsl
xor
xchg
and
jns
cmp
repnz
add
cmp
movsl
aas
fwait
push
inc
daa
push
scas
test
push
fdivrs
mov
jno
xchg
or
out
xor
aas
mov
and
enter
pop
fsts
and
sub
dec
insl
out
sub
xchg
mov
arpl
imul
dec
inc
mov
iret
or
mov
sahf
xlat
movsl
fs
cmp
sbb
leave
mov
imul
mov
scas
ljmp
jb
mov
mov
dec
std
daa
in
popa
or
cmpsl
push
adc
inc
cmp
add
xchg
adc
sbb
xchg
les
sti
movsb
fucomp
pop
mov
pop
jb
pop
mov
mov
mov
in
sarb
call
push
iret
ss
mov
mov
sub
test
xchg
sbbl
enter
xchg
jne
lcall
stc
pop
mov
push
in
adc
jns
xchg
push
push
xchg
daa
lret
mov
clc
mov
inc
hlt
out
and
and
movsl
adc
cwtl
cld
pushf
jns
jne
jns
fsts
adc
mov
and
pushf
leave
into
or
sub
xor
push
in
cmpsb
add
rcrb
inc
dec
mov
pop
imulb
xchg
add
in
add
lds
push
mov
pop
cmp
repnz
push
mov
cmc
push
push
mov
fsubl
cmp
lcall
mov
cmpsl
pop
ljmp
fists
mov
fwait
es
push
ja
sbb
orl
aas
arpl
out
sbb
xchg
dec
iret
notl
sbb
add
mov
subb
repz
in
scas
orl
stos
pop
pop
sbb
push
incb
push
popf
inc
and
xor
xchg
pop
into
aad
fdivl
arpl
xor
cmp
inc
xchg
ds
cmp
leave
std
popa
dec
inc
std
pop
push
or
mov
enter
stos
adc
pop
out
rcrl
xchg
fidivs
dec
sbbb
or
stos
out
pop
xlat
push
cmp
in
sub
push
xor
xchg
repnz
pop
jne
call
cltd
js
xor
mov
xchg
insb
xchg
mov
push
cli
dec
push
mov
mov
cmp
cmpb
jmp
pop
aaa
dec
xorb
mov
jbe
insb
aaa
clc
aas
ja
sti
or
mov
xchg
fldt
add
mov
inc
xor
pop
mov
push
lods
scas
inc
test
adc
pop
dec
daa
sub
jp
jb
ret
or
sbb
test
and
test
stos
and
adc
pusha
push
pop
jnp
aad
dec
in
cmp
pop
mov
gs
loop
lods
into
sahf
push
inc
shufps
popa
popa
adcb
outsb
sub
arpl
arpl
test
dec
jmp
mov
cmc
lcall
jmp
mov
es
pop
cmc
cli
dec
adc
cli
lods
out
bsf
mov
cmp
jo
stos
jnp
leave
mov
and
clc
sbb
je
into
arpl
ljmp
pop
filds
out
sbb
adc
and
pop
es
push
lods
ret
std
imul
stc
cli
dec
mov
jbe
xchg
movsl
push
ljmp
rcrl
and
cmpsl
inc
mov
cli
mov
jecxz
aam
sub
call
out
sahf
lods
cli
sbb
mov
shll
or
pop
pop
cmp
call
lret
jo
fisttpll
inc
cmp
jno
rol
in
imul
mov
iret
jae
sbb
push
test
sbb
jbe
pop
xchg
sub
bound
jbe
addr16
push
cmp
mov
push
jg
and
dec
fbstp
popa
cld
sub
cltd
mov
xor
push
in
push
mov
push
sarl
inc
pop
or
js
jecxz
leave
push
mov
sub
rolb
daa
iret
aaa
jp
adc
adc
movsl
test
adc
sbb
lods
fcoml
or
xor
lret
mov
sub
out
cmp
aaa
mov
sahf
js
lcall
mov
xchg
mov
inc
outsl
into
stos
aaa
sub
fdivs
push
jl
std
pusha
push
push
rorb
pop
push
xlat
cwtl
xor
xor
aas
ja
sarl
scas
in
lar
cwtl
dec
test
daa
mov
pop
sarb
cwtl
loop
pop
pop
jg
push
and
xor
ret
jl
xlat
test
mov
jns
add
dec
mov
iret
xor
mov
mov
xor
xchg
sub
fsubrp
dec
insl
sbb
cltd
jge
fistpll
push
and
adc
and
mov
add
outsl
xchg
jnp
cli
mov
sbbb
xlat
arpl
test
fbstp
jb
or
xlat
xor
icebp
shlb
xchg
sbbl
dec
ss
jmp
fwait
push
pop
pop
adc
aam
ficoms
inc
lds
addl
xchg
mov
cmp
mov
jb
pop
jnp
enter
stc
mov
leave
dec
or
mov
lock
sbb
cltd
add
mov
ds
lock
mov
cmp
sti
mov
sbb
pop
adc
ds
dec
push
iret
xor
aad
ljmp
cmp
sub
gs
sarb
into
adc
mov
stc
insl
inc
pusha
pop
and
nop
jmp
or
mov
popa
loopne
jno
add
mov
mov
jne
mov
gs
or
ja
jg
and
das
cmpsb
js
push
rcrb
dec
inc
mov
aas
lds
mov
insb
push
lcall
xor
ficomps
stos
jl
or
cmc
aaa
xchg
les
push
dec
js
add
xor
adc
icebp
jle
push
ss
push
clc
mov
test
jb
insl
mov
loope
push
cmp
js
loope
add
data16
push
sub
lcall
mov
out
add
lcall
xor
lret
js
ret
cmp
sub
je
stos
outsl
adc
cmc
mov
gs
mov
fdivl
jecxz
clc
orl
pop
mov
dec
sbb
inc
outsb
xchg
lea
or
mov
push
xchg
xchg
iret
pop
test
jle
mov
int
push
fsubs
push
subl
pushf
mov
ss
mov
add
xor
jns
lods
shlb
notb
jnp
test
mov
fwait
cltd
daa
jg
jl
int
cld
mov
aam
es
sahf
push
xchg
data16
push
xor
inc
outsl
ja
xchg
inc
lret
pusha
mov
and
xor
pop
push
fisttpl
loope
and
loope
loop
jge
adc
enter
lret
mov
pop
lods
ret
stos
sbb
aad
inc
push
mov
mov
decl
cmp
inc
fcmovne
pop
loope
push
bound
push
dec
enter
mov
jae
adc
inc
imul
cwtl
cmpsl
mov
jmp
cmp
outsl
and
int
iret
pop
inc
push
and
int3
and
push
cs
add
push
lcall
jne
lock
lahf
popa
addb
mov
adc
enter
mov
and
test
insl
andb
repz
mov
jmp
scas
mov
insl
arpl
lsl
dec
adc
sahf
out
test
mov
inc
sahf
enter
bswap
jne
loope
daa
lds
or
cmp
xor
add
pop
mov
cmp
fwait
pop
popf
xchg
rcll
xor
and
div
scas
push
roll
incb
sub
mov
leave
and
jp
incl
dec
cmpsl
jg
mov
gs
dec
xor
call
sbb
add
and
push
andl
cmp
sbb
push
std
pop
mov
lds
out
jns
pushf
bound
add
mov
repnz
inc
mov
sub
insl
jno
fdivl
push
lods
adc
xchg
ja
mov
rolb
mov
imul
jp
sti
lret
xor
stos
jmp
mov
nop
or
enter
scas
pop
cmc
fimull
rorl
mov
je
fdivp
or
mov
add
lahf
fadds
jmp
in
ds
into
inc
lret
xor
xchg
scas
cltd
dec
fwait
xor
test
inc
aas
push
je
jge
test
mov
imull
adc
pusha
movl
int
inc
sbb
inc
popf
repnz
fcomip
mov
mov
jae
mov
ror
push
hlt
or
in
add
outsl
xchg
sub
nop
push
dec
loope
roll
stos
push
dec
add
mov
btr
mov
dec
rcr
call
cs
adcl
jp
fs
cmp
imul
leave
fstl
sbb
push
pop
mov
js
mov
or
clc
cmp
cmp
std
jb
in
add
push
mov
push
or
push
cwtl
mov
imul
mov
movsl
fs
mov
push
ljmp
mov
jp
fldl
jne
inc
adc
mov
jecxz
jp
outsl
push
lea
popa
push
mov
pusha
fs
dec
fs
loope
lods
push
push
arpl
add
mov
inc
out
mov
pop
xor
push
clc
push
add
mov
mov
int3
jno
pop
push
jp
xor
les
jns
jg
cmp
ds
scas
aas
test
dec
arpl
inc
decb
push
movl
mov
sbb
insb
lret
pop
adc
cltd
sub
xor
fldenv
xor
sbb
pop
or
sarl
test
out
js
test
lods
jecxz
shl
push
dec
inc
std
jnp
xchg
fwait
arpl
sub
cs
int
adc
arpl
push
sbb
mov
jbe
ficoms
xchg
outsl
jbe
jge
nop
add
sti
mov
ljmp
mov
incb
lret
and
outsl
add
jae
cmpsb
push
sti
clc
dec
jge
push
jae
and
ret
jle
mov
pop
paddw
std
test
cmp
and
bnd
push
xlat
jecxz
push
movsl
fsubrl
xchg
aad
sub
adc
stos
xor
loope
insb
adc
outsl
xor
pushf
dec
xchg
add
xchg
push
test
stc
mov
cld
lcall
imul
jmp
leave
push
jl
jnp
mov
std
je
cmp
jle
xchg
inc
push
pop
bound
fdivs
in
mov
lock
jb
jnp
insl
or
sub
inc
subl
cli
je
leave
mov
sub
fs
ret
test
xor
sbb
out
hlt
pusha
inc
adc
jbe
adc
sbbb
scas
flds
push
mov
push
bound
sbb
jl
and
xlat
test
imul
sub
mov
psubusb
adc
mov
movsb
das
mov
mov
enter
aas
scas
pop
ds
aad
sbb
in
push
jle
jae
repnz
pop
mov
cmc
dec
in
jp
adc
ja
jnp
ret
inc
in
pop
jbe
fnsave
or
push
mov
pop
and
rolb
roll
int3
stc
outsb
inc
sbb
nop
adc
add
test
ret
and
lods
lods
cs
jge
pusha
jbe
mov
adc
mov
push
sbb
sub
ss
mov
stos
out
mov
xchg
rcl
pop
jns
ss
ret
shl
pop
mov
jb
ret
arpl
fldt
jae
fwait
dec
ret
fnsave
push
xchg
lcall
sub
inc
inc
lea
or
ffree
xchg
test
shll
mov
dec
push
ja
fs
stos
pop
xchg
adc
es
push
jo
lock
inc
mov
call
push
hlt
xchg
pop
ret
or
pop
jbe
mov
dec
mov
and
mov
imul
inc
imul
gs
outsl
shrl
xchg
fdivs
clc
neg
movsl
cmp
loop
je
adc
push
or
dec
insb
push
add
cmp
dec
pop
imul
out
lods
scas
sbb
enter
mov
sbb
push
fildl
jne
mov
in
daa
fistps
push
and
iret
fcoml
fnstcw
testb
in
or
lcall
cmpsb
imul
push
rdtsc
decl
sub
inc
loopne
imul
jecxz
cltd
dec
out
add
test
mov
jg
scas
adc
add
mov
add
cltd
cwtl
repnz
iret
andl
pop
adc
adc
es
enter
or
cmpsb
or
push
jle
inc
addl
xor
push
lret
mov
cmp
mov
ljmp
jp
adc
xor
mov
aad
in
pop
stos
mov
push
inc
stos
mov
inc
mov
or
sub
mov
test
stc
out
call
and
sbb
repnz
mov
add
cmc
mov
aaa
roll
xchg
xchg
sub
insl
xor
cmp
dec
xchg
jecxz
cmp
jnp
push
out
subl
imul
mov
data16
cmp
dec
jnp
ljmp
stos
add
cmpl
xor
sti
fcmovb
shr
in
into
push
inc
insl
push
test
jle
ja
xor
push
push
pop
js
stc
mov
pop
pusha
loope
pusha
push
dec
add
sub
nop
frstor
push
jae
std
enter
rorb
movsb
movsl
andl
pop
inc
sbbb
xchg
push
mov
ja
pop
dec
lret
loope
xor
lahf
jecxz
add
lea
mov
cmp
out
mov
adc
ja
iret
push
es
push
ljmp
ret
fisubrl
jle
popf
jnp
push
loope
dec
pop
push
jne,pt
sub
adc
mov
sbb
in
push
jb
stos
pop
push
or
dec
sub
xor
mov
clc
scas
imul
inc
pop
out
js
push
mov
add
cmp
jp
int
jecxz
mov
lcall
and
xchg
shld
jg
sub
xchg
push
cwtl
dec
sub
cmp
push
mov
cwtl
ds
dec
mov
jb
mov
push
add
cmp
pop
dec
adc
clc
push
push
lods
or
pop
subb
cmpsb
mov
mov
es
in
ret
in
stos
pop
out
ret
rorb
sub
xor
push
adc
cmp
arpl
jp
orb
and
imul
xchg
xchg
xor
inc
cmp
mov
popa
fnsave
mov
fcoms
dec
out
iret
xchg
sbb
outsl
xchg
aaa
movq
dec
inc
test
das
vmulss
inc
rclb
loopne
push
cmc
pop
incl
fwait
mov
mov
and
es
movsl
sahf
inc
rol
sub
xor
lret
clc
mov
sbb
in
and
leave
sub
js
std
andps
adc
cmp
mov
mov
inc
fnstenv
out
test
aaa
pop
fmull
ret
sahf
jo
je
int
clc
mov
sbb
mov
iret
popf
dec
dec
mov
addb
lret
test
push
pop
adc
sub
into
gs
pop
stos
call
aam
movsb
je
iret
lahf
inc
mov
sbb
aas
pop
mov
testb
xor
scas
in
xor
and
or
dec
push
push
sti
iret
cmp
push
call
lea
aad
dec
push
and
fdivrl
out
ret
push
rclb
test
addl
dec
in
cmp
xlat
mov
or
push
test
sbb
pop
push
test
test
imul
adc
data16
xchg
int3
lods
sbb
stc
cmp
pop
pop
loope
dec
add
arpl
fdivrs
shl
jns
insl
pop
stos
xchg
shl
push
dec
insb
mov
fwait
in
outsb
ficoms
mov
dec
pop
std
popa
pop
call
jbe
cmp
sub
mov
or
shlb
mov
mov
fldl
fwait
inc
push
pushf
dec
rolb
ja
test
fs
dec
pop
jle
gs
ret
jno
ljmp
mov
ds
icebp
mov
mov
inc
mov
or
dec
nop
out
xchg
lret
fisubl
loop
cmpsl
adc
mov
mov
pop
loope
push
out
mov
inc
push
xchg
sbb
push
ret
xchg
cmpb
loop
dec
add
lahf
stc
aam
mov
xchg
xor
in
nop
iret
cmp
mov
daa
pop
aaa
jecxz
sbb
jo
inc
popa
mov
pop
sti
jg
xchg
mov
out
and
pop
ljmp
test
mov
movsl
jmp
inc
sub
in
aaa
stos
scas
cs
sub
inc
mov
loope
je
outsb
mov
sbb
decl
xchg
ret
aad
xor
jl
out
pop
or
outsl
lahf
ss
dec
cmc
les
mov
add
test
mov
fninit
sbb
xor
or
neg
mov
cmc
popf
or
jmp
jae
add
fnstenv
pushf
sahf
gs
jb
daa
or
sub
jp
jnp
int3
sbb
mov
push
ss
outsb
pop
rcrb
sbb
sub
pop
push
xchg
xor
cli
ss
loop
adc
and
loop
out
push
les
test
cmc
jno
push
loopne
xchg
and
mov
xchg
inc
into
cmp
jae
out
xor
jns
pop
push
xchg
xchg
push
push
stos
fldt
cwtl
call
adc
jg
mov
cwtl
and
rclb
sbb
cmp
and
sbb
in
adc
xchg
or
test
ja
lret
push
jge
pusha
sti
clc
dec
mov
xchg
fs
inc
fistps
ljmp
sti
loop
xchg
adc
dec
jnp
je
dec
push
mov
scas
and
pusha
sbb
sbb
lock
xor
adc
repnz
fwait
movsl
int3
sbb
inc
mov
out
cmp
xorb
mov
lahf
sbb
dec
ljmp
adc
das
mov
xchg
mov
loopne
in
stos
adc
testb
jmp
push
jne
inc
gs
out
jl
mov
fxch
rolb
and
lret
mov
xchg
shll
adc
cmpsl
cs
inc
mov
test
inc
aaa
adc
test
adc
dec
xor
aad
pop
ja,pt
arpl
jp
jnp
inc
adc
mov
sub
xchg
add
pop
mov
add
outsl
xchg
push
in
out
jns
sub
add
ret
jle
add
mov
cmc
sub
movb
xor
cmp
std
and
cs
sbb
insb
xor
inc
mov
daa
in
sbb
and
xlat
rcrl
jle
xchg
stos
jns
outsb
lea
push
inc
push
cli
ds
cmp
rolb
imul
aad
add
sti
aam
arpl
pop
ds
inc
add
adc
adc
cmpsb
jbe
pop
inc
bound
sarb
jecxz
sub
inc
lods
mulb
add
push
sbb
mov
or
xchg
adc
cmp
pop
test
or
lds
xor
xor
jle
xchg
dec
push
pushf
pushf
or
dec
xchg
xchg
imul
call
sub
shll
push
fidivs
daa
int
jns
mov
cmc
adc
jecxz
imul
jecxz
aam
loopne
push
xchg
inc
sub
call
fwait
mov
or
lods
fidivl
shl
leave
enter
loop
add
test
cli
xor
sbb
jo
xchg
lret
aam
push
es
test
mov
cmpsl
xor
enter
roll
int3
dec
pop
jp
fistpll
jmp
dec
into
push
mov
out
fsubl
loopne
test
seta
pop
mov
mov
lods
cmpsb
subl
pop
stos
jmp
vpaddb
lahf
sbb
movsb
repz
stos
out
dec
xchg
mov
movsb
xor
hlt
push
rcl
js
push
adcb
bnd
jmp
push
sbb
fcmove
pop
push
and
sub
pusha
push
loop
adc
dec
nop
imul
dec
pop
lock
scas
dec
adc
mov
push
loopne
sbb
push
push
mov
xlat
fistpl
xor
cmpsl
fmulp
xor
pop
mov
cs
out
mov
sub
pop
mov
insl
stc
pop
dec
mov
imul
sbbb
cmp
rdtsc
xchg
inc
dec
call
fs
mov
sub
rorb
cwtl
xor
ret
xchg
hlt
sbb
sbb
pmulhw
fwait
mov
andb
js
imull
dec
cmp
mov
in
mov
and
dec
xor
cwtl
lods
jo
flds
adc
mov
mov
mov
push
push
push
or
dec
adc
sbb
call
sarl
in
pop
imul
mov
jo
sbb
into
imul
loope
std
call
xor
icebp
push
push
and
xor
add
xchg
int3
ret
sbbb
pop
stos
cmp
fcmovnbe
sub
sub
daa
fs
ljmp
xchg
sub
xchg
fidivrl
fbld
xchg
add
out
ud0
pusha
adc
dec
cmp
mov
pop
mov
pusha
sub
scas
pop
dec
shrl
add
xchg
pusha
rorb
sbb
inc
mov
and
hlt
adc
fisttpl
pop
xor
loopne
rorb
les
call
add
inc
mov
xor
testl
pop
shrd
dec
mov
and
pop
dec
adc
lods
pop
out
sbb
lods
mov
test
lods
test
ljmp
popf
rcrb
cs
dec
dec
outsb
dec
enter
jg
mov
or
sbb
jl
pop
xor
jmp
mov
pop
test
dec
jle
and
push
insb
dec
xlat
xchg
gs
sbbb
inc
jg
jecxz
cmc
outsl
xchg
movsl
and
fistpl
sub
in
adc
push
stos
popf
pop
jns
insb
xchg
mov
pop
fbstp
mov
lret
or
mov
mov
or
mov
cltd
mov
mov
push
mov
cwtl
jmp
addr16
movsl
cmp
adc
lds
adc
stos
es
lea
ljmp
mov
xchg
xchg
jns
vcvtdq2ps
pop
ss
test
fdivrl
hlt
xor
sbb
pop
movlps
ret
cmp
xchg
mov
mov
jne
mov
int
fdivrp
dec
imul
and
sbb
cmp
jns
and
jg
jae
cmp
test
cld
int3
cmc
fbld
outsb
jb
xchg
adc
and
outsl
push
mov
dec
repnz
add
add
mov
aam
pusha
jae
xor
xchg
stc
mov
frstor
andb
mov
mov
movsb
pop
xor
mov
sub
jle
rorl
movsb
fildll
cltd
lret
add
rcll
adc
fcoms
mov
jbe
or
jb
inc
out
push
lods
push
stos
cld
push
in
sahf
shlb
insb
je
inc
adc
int3
fisubs
and
pop
add
icebp
pusha
and
pop
xor
insl
sbb
add
and
test
inc
jns
adc
add
cld
int
sub
outsl
or
jae
push
shrl
push
mov
push
mov
adc
pop
push
mov
cmp
cmp
out
lahf
test
push
aad
lcall
ret
insb
lcall
cltd
leave
outsb
lcall
adc
push
loope
sbb
ret
in
cmp
pop
lods
outsb
jb
sbbl
inc
jb
imul
cmp
push
xlat
fadds
mov
loope
das
mov
movsl
pop
cld
pop
loop
ljmp
das
mov
inc
inc
sbb
cmpl
dec
push
or
mov
push
mov
or
test
xor
sub
sub
lret
xorb
ret
mov
push
dec
test
xchg
dec
int
adc
push
imul
sarb
mov
daa
sbb
xchg
xlat
mov
inc
xchg
cmp
mov
pop
xor
cmpsb
out
fstpl
repnz
adc
out
fs
pop
pop
scas
ss
jb
mov
cmp
dec
jbe
daa
or
cmpsl
pop
mov
ret
mov
insl
xchg
je
jecxz
mov
ljmp
and
addb
out
xor
imul
gs
inc
xlat
xchg
ljmp
mov
cmpsl
xor
sub
push
call
fimuls
nop
pop
push
lock
push
fcomi
push
mov
loop
lock
adc
repnz
push
into
out
and
mov
jno
push
add
mov
rcrb
mov
jne
add
sub
jne
mov
sbb
hlt
jo
leave
jp
xor
fs
loop
fmul
xor
repnz
push
pop
stos
jae
call
ret
imul
ljmp
in
shrl
push
jecxz
hlt
xchg
sbb
add
fistps
xor
add
cmp
in
icebp
and
jmp
push
lods
aas
xchg
xchg
pop
subb
mov
fmull
jns
icebp
out
aam
loope
and
test
jmp
stc
jno
imul
ljmp
notl
mov
mov
jae
outsl
gs
sbb
adc
outsb
mov
cmp
call
in
inc
push
mov
enter
sub
daa
or
push
imul
jae
mov
enter
ficoml
jne
dec
sub
shr
push
sbb
or
cli
cltd
insb
outsl
bound
push
dec
or
fwait
in
jb
cmpsb
aas
lret
adc
mov
int3
jnp
call
xor
cmp
dec
cmp
out
shll
aaa
mov
lods
sbb
rcrb
lods
and
jmp
stc
in
fwait
pop
dec
xor
mov
add
push
jae
xchg
pop
push
inc
pop
das
fcoms
dec
cmc
and
js
mov
push
aad
divl
adc
mov
loope
mov
lahf
inc
xor
aaa
mov
sbb
mov
cmpl
xchg
jp
mov
push
mov
loopne
mov
test
lds
popa
cltd
xchg
lock
loope
aam
pop
and
jne
xor
push
fnstsw
lock
mov
rcll
adc
sbb
xchg
icebp
rorb
aam
mov
mov
fstl
movsb
xchg
mov
clc
mov
test
es
ss
test
cmpb
jb
inc
push
stc
pop
dec
scas
add
subb
scas
shrl
inc
xor
add
jecxz
xchg
push
sub
sub
lds
pop
popa
data16
call
jl
xlat
outsl
call
or
mov
push
cmp
mov
sub
push
mov
xchg
sub
pop
pop
pop
or
out
in
daa
xor
jp
push
mov
mov
int
test
xchg
lret
cmc
lahf
push
scas
mov
subb
pop
pop
cmp
and
push
call
daa
nop
xchg
dec
test
mov
sahf
enter
pop
jp
repz
shll
stc
mov
loope
adc
mov
stos
mov
jnp
icebp
mov
repnz
in
pop
mov
sbb
jae
xor
orl
xchg
push
loop
pop
cmc
mov
scas
dec
add
fsubl
fnstenv
jno
shlb
bound
int3
aaa
jecxz
xor
les
stos
push
push
stc
daa
jg
or
ds
push
jno
scas
mov
add
or
ftst
and
mov
pusha
iret
sahf
popa
scas
and
into
push
mov
inc
push
adc
pop
and
mov
popa
jnp
mov
sub
scas
push
push
sbb
adcb
loop
xchg
inc
or
nop
ret
pop
mov
addl
xchg
aam
faddp
pop
cmp
rcrl
fldl2e
pushf
pop
leave
push
jge
inc
enter
insb
scas
sub
xchg
nop
or
fcmovu
lds
push
xchg
and
fisubs
jmp
ljmp
jle
lcall
xorb
fsub
out
jae
in
xchg
scas
xchg
rcll
pop
sub
mov
mov
pop
add
lret
out
pop
or
mov
mov
jnp
addr16
jmp
mov
inc
push
pusha
fxch
repnz
dec
and
das
pusha
lret
push
push
jnp
mov
scas
pop
es
aam
push
aam
or
xchg
mov
xchg
fucomip
jae
test
xor
mov
jb
bound
push
inc
stos
push
addr16
je
dec
aas
inc
xor
xchg
adc
push
pop
fisubl
push
push
ficoms
insl
pop
es
inc
jle
fldl
mov
frstor
dec
sbb
adc
sbb
int3
cmp
adc
jo
inc
adc
repz
into
mov
sbb
adc
je
in
adcb
xchg
push
mov
sub
jp
mov
and
or
int3
jp
movsl
mov
fs
mov
clc
data16
push
xchg
popa
sub
inc
js
mov
insl
idivb
dec
popf
pusha
and
cmpsb
subb
fisubs
adc
push
and
clc
xchg
aad
sbb
jmp
mov
les
push
leave
mov
adcb
pop
jbe
add
mov
dec
xchg
pop
out
xor
shr
leave
popa
aaa
clc
xchg
dec
jecxz
sbb
fcoms
fwait
cld
cmp
inc
or
push
jmp
pop
jbe
ljmp
iretw
iret
sti
jae
sub
pop
ret
hlt
inc
lock
add
xchg
mov
jecxz
loopne
or
lahf
mov
pop
sbb
inc
pushf
push
test
cmp
out
addr16
and
es
jb
pop
ret
aam
sub
lds
push
les
in
or
ret
shl
dec
lahf
or
xchg
xlat
dec
rcrb
or
frstor
jl
dec
gs
mov
dec
out
xlat
lret
inc
out
cli
xchg
pop
sub
cltd
push
inc
test
out
mov
inc
scas
mov
jns
cmp
ljmp
leave
int
insb
std
jmp
cmp
add
dec
aas
bswap
call
ds
cmp
ljmp
xor
fisttps
test
xchg
push
add
rol
bound
push
sub
lea
mov
push
dec
sti
dec
mov
je
push
aad
jns
lea
addr16
jg
jecxz
push
repnz
mov
mov
push
xor
cmp
mov
jmp
jecxz
or
std
repz
jbe
sbb
fidivs
sub
ja
les
sahf
cmpb
mov
aad
dec
hlt
cmc
test
fcomps
jns
dec
xlat
add
xchg
and
fmulp
addr16
ret
pop
and
repnz
adc
xchg
adcb
shll
lods
inc
jo
hlt
int3
xchg
ret
paddd
sbb
cmc
sbb
jnp
sbb
push
shll
jns
add
call
xor
stc
in
jmp
scas
push
pop
movsl
sbb
lahf
int3
lcall
arpl
shll
push
pop
mov
push
adc
xor
daa
push
cmp
push
dec
cmp
push
lret
je
insl
popa
add
int
sub
jb
add
push
pop
jge
out
mov
jmp
adc
push
ds
in
jle
loop
std
movsb
loope
fnstsw
mov
pop
ja
mov
ja
into
lods
jbe
cmp
pop
adcb
cmp
lea
pop
jmp
out
mov
addl
insb
dec
jmp
jae
imul
inc
mov
lcall
ljmp
mov
ja
insb
cmc
mov
fwait
imul
jne
clc
cmp
imul
adc
pop
enter
xor
je
int
dec
push
push
dec
mov
fstpt
inc
test
clc
and
xlat
rcrb
pop
loope
add
cmpb
ljmp
add
out
mov
gs
ret
dec
flds
nop
leave
fsubs
sub
test
call
in
sbb
movsl
test
mov
loopne
gs
sbb
xor
and
xchg
add
nop
xor
or
rcl
adc
cs
mov
ljmp
inc
xchg
andl
sub
dec
adc
pop
push
rcll
cmp
arpl
imul
xlat
stos
inc
inc
jmp
sub
pop
loopne
out
aaa
sahf
sbb
sub
cmpsb
movsb
add
xchg
jbe
mov
inc
pop
shr
test
shlb
in
movsl
and
xor
jmp
mov
pusha
lds
xchg
mov
jae
sub
and
dec
mov
les
loopne
cmc
push
lahf
push
fdivs
fwait
into
std
cwtl
popf
cmp
push
mov
out
loope
test
jnp
or
std
xchg
test
fwait
enter
fisttpll
mov
push
inc
hlt
fidivs
and
or
mov
ret
outsl
mov
pop
lods
in
inc
adc
sub
ljmp
push
mov
fstl
cmp
cmp
shlb
insl
enter
mov
fwait
cmpsb
shrb
cmp
or
pushf
inc
jno
adc
iret
fldcw
movsb
pop
sub
dec
mov
test
mov
inc
int3
adcb
insb
imul
mov
push
push
stc
adc
lcall
push
stos
sub
or
xor
cwtl
andb
clc
mov
fsts
mov
mov
mov
mov
inc
je
leave
aad
cwtl
sub
push
mov
out
fsqrt
push
xchg
or
mov
jo
loope
pusha
mov
es
sar
mov
mov
or
dec
push
jp
lods
jns
add
jp
hlt
lods
mov
xchg
cmp
ret
mov
mov
fs
jle
mov
inc
xor
out
pop
adc
test
lods
add
mov
adc
mov
lret
mov
sub
scas
insb
adc
pop
mov
push
mov
xlat
lods
sti
jb
scas
lock
test
lcall
imul
negl
in
adc
loopne
pop
cwtl
mov
dec
mov
mov
ss
mov
mov
ret
mov
xchg
adc
sbb
and
popa
shrl
inc
cmp
mov
mov
jge
std
mov
addl
clc
xchg
test
sub
ret
and
incb
xchg
inc
or
push
cltd
mov
pop
mov
jmp
and
cmpsl
pop
mov
scas
fists
and
inc
xor
xor
push
test
out
lds
sub
movsb
jae
test
fisttpll
inc
mov
xchg
ret
ror
sub
lods
mov
lea
sbb
xlat
inc
cwtl
push
hlt
push
or
xorb
pushf
fimuls
outsb
xchg
in
add
dec
sub
jg
adc
jns
cld
xor
sub
mov
fdivrp
nop
fs
jo
insl
mov
out
xchg
jecxz
jo
lods
add
lahf
aad
sub
dec
push
call
cmp
adcl
pop
sbb
inc
pop
jns
inc
and
or
push
cmp
addr16
ss
add
jp
and
insl
sbb
out
dec
pop
cld
cmp
jnp
jnp
sbb
sub
out
sub
ss
push
loop
xlat
mov
loop
loop
xor
adc
iret
pusha
enter
lcall
add
fs
rcrl
cmp
sar
sub
cwtl
sub
enter
fiadds
add
imul
dec
jns
outsl
sbb
in
cmp
pop
add
xor
sti
cvtps2pd
lds
lods
xchg
mov
push
mov
ret
xor
xchg
imul
outsl
add
icebp
cli
and
push
jb
out
stos
lahf
andl
aam
adc
cs
jecxz
cmp
les
lcall
lods
out
push
lds
sbb
data16
mov
rcr
mov
shlb
mov
push
xor
adc
outsb
popf
lea
push
add
push
aas
jns
mov
mov
daa
cmp
push
clc
insb
out
hlt
push
xor
mov
pop
jmp
leave
hlt
add
inc
jbe
xlat
sti
jle
xchg
mov
test
add
rclb
in
sbb
out
adc
sub
pop
test
push
cwtl
loope
inc
jb
in
mov
in
jns
xchg
inc
loop
mov
out
pop
pop
mov
mov
mov
aam
mov
xchg
inc
fwait
lock
out
loope
ror
mov
mov
add
pop
clc
or
push
add
fcmovnu
test
sub
mov
jne
leave
fnop
cmpsl
jno
mov
cmpsb
fptan
jmp
xchg
push
and
cmp
and
xchg
pop
mov
sbb
les
out
xchg
cld
in
push
outsl
sub
stos
xchg
test
xchg
or
enter
push
lcall
lret
sar
lock
or
add
mov
sub
mov
add
jns
lock
push
pop
or
adc
das
sub
lahf
inc
sarl
nop
shrl
mov
mov
bound
lock
out
sbb
daa
xor
inc
jge
sti
pop
mov
lds
out
jge
js
ds
xor
das
push
rorl
sbb
ret
add
outsl
pop
add
mov
mov
push
mov
pusha
xor
call
push
lcall
ret
mov
mov
push
dec
sbb
inc
pop
jg
in
in
test
jnp
nop
xchg
bound
call
dec
xor
xor
lea
aam
ffreep
addb
test
pop
lahf
cs
mov
or
jmp
aad
call
sarb
stc
rcll
jecxz
jbe
lods
aad
jo
cltd
fistps
pop
test
in
bound
sub
loopne
mov
mov
dec
ret
test
sbb
jmp
or
clc
lcall
sbb
mov
sahf
lahf
pop
mov
adc
pop
mulw
adc
mov
inc
test
es
and
mov
xor
dec
xchg
jge
sarb
ret
and
lds
xorb
test
xchg
jae
cld
icebp
inc
xchg
repnz
adc
lock
mov
dec
and
pop
or
dec
dec
sub
nop
in
sub
inc
mov
addr16
fisttps
lock
ja
or
arpl
push
dec
xchg
cmp
fnstenv
out
fmuls
xchg
jae
jge
out
add
xor
mov
push
fcmovu
cwtl
ret
sbb
cmpsb
jmp
fwait
sub
sub
lea
push
xchg
push
and
nop
bound
sbb
push
enter
xchg
or
mov
jo
cmp
jno
sbb
push
int
cmpsl
push
fwait
or
ret
insb
and
add
nop
sahf
xor
add
mov
in
cmpsb
pop
adc
and
movsb
adc
fstl
mov
mov
lods
dec
push
xchg
sub
movsb
popf
iret
lahf
es
xor
aaa
icebp
ret
mov
icebp
addr16
and
adc
xorb
sbb
push
adcb
js
out
add
xchg
in
outsl
cld
xor
out
dec
add
jns
lock
cld
lock
ljmp
sbb
movsb
push
pop
or
pop
add
sub
aaa
sub
test
repz
mov
or
out
ss
xchg
jns
sbb
adc
insl
popa
test
dec
orb
sub
sahf
pushf
ss
repnz
pusha
push
adc
push
mov
ja
shrl
add
ror
jg
lock
mov
mov
jno
jmp
sahf
cmpsl
int
jmp
sbb
pop
push
push
cmp
popa
pop
and
sti
xlat
push
in
xorb
test
and
cmp
insl
jno
outsb
mull
fstpl
mov
xor
jp
je
mov
xchg
lret
pop
inc
orl
sbb
hlt
mov
loope
cmpsl
adc
jb
fwait
push
add
fst
pop
out
sub
lahf
push
cmp
or
push
xor
mov
mov
lahf
push
pop
fadd
or
aas
mov
add
cltd
pusha
jg
xchg
ror
int3
inc
mov
inc
popf
lea
jns
movsb
add
mov
fs
jmp
outsb
ret
cmp
dec
dec
jnp
jge
jg
push
jg
inc
push
sbb
sbb
cmp
repnz
xor
sbb
jne
into
fwait
xor
xchg
mov
push
inc
xor
hlt
lret
xor
dec
insl
ja
bound
in
cmc
mov
loope
inc
lcall
fstpl
loope
mov
stos
dec
dec
add
jb
jge
pop
ret
mov
dec
cwtl
pop
lret
inc
sub
sub
or
sub
call
pop
aad
std
cld
movsl
xchg
xor
pop
push
push
dec
dec
pop
cli
movsb
mov
inc
aas
xchg
mov
and
inc
pop
jo
cld
push
mov
sbb
sbb
sahf
add
or
dec
mov
cltd
push
pop
out
mov
adc
dec
insl
scas
addb
mov
int3
aad
mov
sbb
into
icebp
int3
adc
pop
mov
outsb
inc
or
in
cmpsb
shll
push
xchg
push
jecxz
mov
imull
es
sbb
jle
outsl
cs
popa
adc
xchg
scas
mov
or
rcll
xor
ja
mov
push
loopne
inc
lret
push
sub
adcl
lock
loopne
mov
pop
push
push
nop
fwait
cmc
insl
into
hlt
test
pop
mov
cld
movsl
pop
mov
add
hlt
xor
lods
push
fwait
jae
pop
lods
mov
mov
arpl
jg,pt
mov
push
jle
dec
pop
mov
mov
adc
stos
pusha
dec
mov
fildl
fmuls
xchg
sti
inc
test
mov
inc
outsl
sbb
leave
adc
jo
dec
out
xchg
imul
sub
xchg
lock
sbb
inc
lret
aad
out
jmp
xchg
mov
pop
push
sbb
es
and
jno
pop
jo
mov
pop
inc
and
pushf
leave
leave
les
or
mov
pop
sarb
add
ret
jae
and
add
mov
pop
push
mov
imul
test
out
add
push
push
ret
inc
shl
pop
lret
js
jmp
je
in
pushf
xor
dec
scas
fmuls
and
aam
orl
lock
insl
ljmp
sub
rclb
jae,pt
inc
test
or
sbb
add
or
shrl
pop
subl
adc
nop
or
test
iret
and
xchg
shll
repnz
test
jg
xor
lahf
pop
rorl
lods
es
adc
pop
data16
outsb
add
sbb
in
sub
adc
pop
test
lods
out
loopne
clc
lods
jmp
sbb
xchg
ljmp
popa
out
lret
adc
int
cld
jp
push
jo
aam
mulb
lock
sysret
cmp
adc
test
incb
and
mov
or
sarb
xor
or
jbe
mov
sub
adc
and
dec
cmp
inc
lcall
cltd
xchg
ret
push
gs
test
rol
cmpsb
and
push
shlb
mov
pop
and
aaa
cmp
sub
pop
cld
xchg
scas
push
and
dec
aas
jae
jp
out
les
fcomps
jmp
outsb
sbb
ret
add
gs
out
add
in
pushl
jl
adc
movsb
inc
push
xchg
mov
stos
sbb
pop
dec
mov
test
hlt
nop
mov
pop
dec
or
lods
mov
mov
xchg
mov
sub
sbb
leave
mov
je
mov
test
or
mov
push
call
adc
sbb
inc
mov
jmp
popa
push
stos
cmc
pop
insl
adc
es
inc
aas
repnz
adc
in
mov
xchg
mov
test
cmp
ret
mov
or
fistpll
dec
push
out
dec
push
sub
in
test
inc
sti
adc
pop
test
and
scas
sar
add
mov
call
loopne
adc
pusha
cld
mov
inc
les
bound
bound
sub
pop
add
shrb
stos
sub
cmp
and
inc
xor
cli
sub
das
xchg
xchg
lods
ret
inc
mov
cli
mov
adc
xorb
push
mov
lcall
jge
shl
repnz
aaa
adcl
jmp
pop
rcrb
adc
cmp
loop
sub
jns
in
push
dec
xchg
mov
in
cmp
fcoml
fstps
mov
adc
shll
std
shrl
mov
jnp
fstl
sbb
xor
xchg
mov
pop
scas
mov
pop
repz
inc
insl
out
je
and
sub
push
jnp
sub
push
xchg
es
mov
ror
sbb
lock
rorb
jo
mov
icebp
add
ss
xchg
insl
and
and
adc
int3
push
mov
dec
mov
gs
pop
xchg
movsl
cmpsb
scas
jecxz
testl
mov
mov
jg
jae
sub
add
ja
add
or
xchg
mov
sbb
jecxz
insl
lahf
mov
cmp
popf
lds
sti
dec
xchg
and
out
mov
fldt
dec
arpl
in
repz
fsubrs
sbb
add
out
nop
inc
js
sub
rcll
mul
outsl
push
mov
test
test
shl
mov
out
mov
cld
lds
or
xchg
mov
insl
stos
xchg
xchg
inc
in
je
lods
test
xchg
or
cld
push
scas
fnstsw
xor
lea
ret
fldt
push
adc
mov
cmp
ret
sarl
shlb
push
mov
je
iret
dec
xor
cli
icebp
and
pop
aaa
insl
out
jns
sub
xchg
pop
and
xchg
pop
aaa
cs
nop
leave
outsl
out
std
xchg
idivl
mov
pop
insb
pop
scas
mov
dec
dec
sub
loope
in
imul
push
es
mov
cld
sbb
push
out
push
push
dec
lret
or
adc
mov
sarb
into
icebp
mov
add
jbe
dec
daa
fisttps
jo
insl
stos
or
ja
in
sub
popa
lret
cmpsb
and
sahf
sarb
mul
ja
adc
adc
xor
scas
sub
jge
cmpsl
pop
rcrb
xchg
daa
sbb
dec
test
xchg
testl
ret
sub
sub
lahf
cs
mov
fwait
lock
js
or
or
repnz
out
fstl
cmp
xchg
popf
cmp
mov
retw
aas
pop
ret
int3
das
cmc
inc
mov
jecxz
aam
movsb
add
push
call
call
in
jecxz
and
sub
lods
and
cwtl
shll
mul
sysret
add
xchg
loope
mov
lods
lret
fcoml
or
rcrb
inc
iret
mov
int
mov
out
sbb
add
test
movsl
test
ret
imul
fisubs
sbb
test
jne
jmp
jg
sub
sbb
mov
adc
fisubrl
movsb
fbstp
mov
dec
cmpsl
dec
xchg
push
sub
sti
das
fcom
mov
pop
out
jno
and
xor
shrb
push
out
enter
lcall
pop
out
fs
mov
outsl
flds
sbb
enter
xor
mov
popf
cmp
int
lahf
add
sub
pop
push
lods
insl
add
jo
scas
ljmp
or
add
faddl
fs
xor
test
dec
sub
dec
sbb
sbb
cmc
mov
in
mov
pop
rcrb
std
movsl
test
push
sub
iret
mov
jae
ja
jb
mov
outsb
or
daa
test
xchg
mov
into
das
jl
or
data16
lods
mov
pusha
nop
popa
js
pop
add
les
push
fs
xor
cmpsl
aam
xchg
xor
pop
jle,pn
cs
xor
jle
mov
mov
into
xor
jp
xor
xor
xor
test
push
into
xchg
pop
jl
mov
call
outsl
push
lea
lods
adc
xchg
out
repz
pop
stos
jbe
cld
rclb
jmp
cmp
or
inc
mov
subl
mov
push
dec
mov
cld
mov
adc
jnp
repnz
mov
sbb
sub
out
fs
or
xchg
mov
adc
sbb
pop
stos
fsubrl
cmc
sub
shlb
mov
cli
popf
dec
cmp
mov
ret
les
xor
fcomi
test
and
test
mov
push
lock
call
push
rcrl
out
and
adcb
cmp
inc
getsec
pop
xchg
repz
aam
fs
or
out
sti
loopne
mov
xor
mov
arpl
or
mov
fcoms
push
and
mov
aas
mov
imul
inc
mov
jne
scas
outsb
aad
pushf
xor
push
lret
in
mov
gs
jb
mov
cs
push
mov
jge
jbe
jne
pop
inc
sbb
jl
xchg
test
scas
dec
and
popa
bound
lea
lods
sbb
fs
icebp
icebp
inc
inc
jp
fdivrp
jns
ret
and
push
lods
aad
shr
xor
xlat
cmpsl
or
je
imul
imul
mov
adc
lods
jae
dec
mov
cmp
mov
cmp
xchg
movsb
adc
mov
sub
mov
stc
or
je
ja
pop
or
popf
cltd
mov
xchg
and
mov
mov
xchg
mov
inc
in
or
xlat
inc
aad
mov
shlb
lcall
nop
jo
les
dec
sub
lds
fs
xchg
mov
sub
push
fiadds
push
jnp
rorl
push
stos
xchg
push
popf
jo,pn
popa
add
or
dec
aas
in
or
test
jb
xchg
push
dec
jns
xacquire
xchg
pop
push
mov
jnp
in
leave
mov
jno
pusha
loope
add
insb
adc
ss
mov
dec
test
gs
aas
nop
xchg
scas
dec
aaa
fbstp
push
leave
jp
xor
lods
mov
repnz
sti
in
push
in
sub
clc
sti
out
add
loope
jl
adc
cs
sti
pop
dec
inc
xchg
pop
pusha
frstor
and
add
data16
xchg
cmp
into
push
clc
stc
pop
dec
test
lcall
inc
adc
call
or
add
mov
adc
pop
fldcw
pop
xor
icebp
jmp
pop
adc
stos
in
xchg
sub
or
arpl
std
adc
loope
sbb
pop
inc
add
xlat
int
aaa
loop
jo
loopne
cli
cmc
in
cmc
cmp
hlt
push
jecxz
pop
pop
aad
movsb
mov
cmc
ljmp
test
sbb
xchg
ss
cmp
rorb
push
rcrb
shr
daa
dec
loop
sbb
cli
jle
or
xlat
sahf
push
mov
or
addl
lahf
mov
pop
add
jae
int
push
jns
adc
mov
inc
xchg
cmpsl
pop
in
pop
aam
dec
popa
movsb
lahf
sarb
inc
leave
loope
cmp
popa
aas
clc
xchg
add
lcall
inc
xor
out
addr16
cmc
cli
jmp
test
xor
mov
xchg
idiv
mov
mov
sub
mov
dec
pop
mov
add
mov
stos
xor
fcoml
jmp
or
adc
add
cwtl
or
incl
and
xchg
cld
int
in
rcrl
dec
outsl
adc
lret
dec
mov
test
jne
insl
add
or
xlat
aas
mov
sub
mov
mov
push
int3
mov
add
cmp
std
push
inc
adc
sbbb
out
in
pop
pop
dec
dec
sbb
scas
xchg
test
push
scas
negl
inc
add
idiv
lods
cmp
in
and
sbb
arpl
mov
daa
jmp
outsb
pusha
data16
addr16
xor
icebp
fwait
popf
out
scas
dec
xor
mov
mov
sub
je
add
icebp
cmp
cmp
cmp
insl
xor
dec
stos
mov
rcrl
aaa
cmpsl
mov
loop
pop
scas
mov
cmpsb
dec
or
sbb
mov
adc
lock
sub
lea
sbb
test
fs
sbb
dec
adc
outsb
out
cwtl
stos
sub
sbb
inc
je
pop
add
loopne
andb
or
test
pop
push
pop
pushf
xlat
outsl
movb
daa
je
in
fucomip
pop
ss
xchg
inc
push
fwait
outsb
out
push
pop
push
dec
adc
gs
mov
sbb
push
clc
pop
jbe
popf
adc
cmp
xor
mov
xor
mov
out
mov
jge
test
sub
add
movsb
mov
in
movsb
cmp
or
pop
out
loope
pop
dec
jne
jb
iret
out
push
xchg
mov
add
ljmp
jge
es
adc
cmp
jmp
and
cmp
mov
stc
das
mov
mov
cs
cmp
xchg
arpl
xor
repnz
jecxz
lahf
icebp
mov
sbb
push
lret
mov
mov
ja
jnp
inc
jns
mov
jle
lret
dec
push
cmp
mov
test
mov
mov
fcmovb
mov
pop
dec
mov
dec
xor
fcmovb
sbb
out
and
push
sbb
mov
icebp
xor
add
mov
or
mov
std
pop
xor
lahf
insb
loope
movsl
add
push
inc
mov
shlb
and
insb
pop
mov
push
ss
cmp
jae
push
outsl
mov
pop
cmc
inc
inc
cmp
mov
movsl
xor
lods
mov
inc
stc
lcall
fs
mov
dec
ret
stc
push
push
fimuls
scas
dec
bound
mov
and
bound
pop
test
orps
arpl
into
out
gs
dec
and
sti
cmpsb
pop
xchg
add
xchg
sub
aas
sub
cmp
mov
mov
push
pop
sbb
mov
push
mov
inc
add
inc
push
or
rorl
push
call
xchg
push
xchg
sub
inc
daa
scas
test
in
pop
out
repz
adc
cwtl
call
sbb
push
lods
push
mov
sbb
mov
gs
out
out
lds
out
xor
add
sub
aas
push
ja
mov
add
dec
push
arpl
fcmovu
sarb
adc
icebp
imul
inc
cmp
in
dec
daa
inc
and
mov
leave
enter
test
push
mov
inc
adc
movsl
push
into
dec
pop
sub
xchg
mov
enter
mov
mov
push
addr16
dec
push
in
xlat
aaa
inc
sbb
sbb
xchg
or
inc
rolb
xor
xchg
add
cmp
ret
xchg
pop
out
loopne
sbb
push
ljmp
push
mov
or
xor
xchg
push
stc
outsb
sti
or
sbb
cmp
inc
adc
jg
int3
ss
xchg
ds
pop
inc
jle
stos
lea
divb
es
xor
jmp
les
movsl
mov
cmp
fadds
mov
adc
arpl
mov
pop
fucomi
inc
push
mov
js
xchg
adc
dec
imulb
jb
mov
data16
in
mov
mov
enter
out
dec
adc
pop
std
dec
mov
push
hlt
aas
ror
xchg
xlat
lods
xor
test
cmpsl
loopne
cli
inc
aam
sahf
jp
mov
cmp
pop
cwtl
cmpsb
call
aam
cmp
mov
xchg
lret
cmp
fs
stos
push
xchg
jle
cmp
pop
push
loopne
xor
sbb
mov
xor
jne
dec
jae
mov
or
fisttps
gs
clc
mov
enter
call
out
and
scas
mov
insb
rorb
adc
jb
test
fldl
jg
mov
adc
dec
sub
and
pushf
or
pusha
mov
sbb
cmp
cmc
not
xchg
les
pop
sub
out
stos
imul
mov
gs
add
mov
cltd
add
mov
and
arpl
sub
sbb
xor
xor
jo
jecxz
jnp
mov
aam
adc
cmpsb
add
jecxz
mov
xor
mov
testb
testb
iret
repnz
push
test
icebp
idivb
ret
popf
pushf
xor
mov
js
jmp
xchg
mov
cmp
inc
sbb
sarl
xor
mov
or
stos
outsb
inc
ja
lcall
jno
xchg
xor
fwait
ss
xchg
lods
data16
dec
sbbb
pop
jp
fbstp
xor
popf
cmp
push
inc
out
sti
mov
rcrl
add
out
lcall
popa
rorl
bound
scas
sub
pop
dec
popa
mov
iret
adcb
sahf
aaa
pop
daa
dec
cmp
lcall
sub
inc
ss
jnp
das
push
jmp
and
or
out
mov
dec
dec
andps
call
add
or
mov
inc
enter
aam
sub
hlt
cwtl
mov
mov
fstps
jne
pop
in
test
repnz
test
cmpsl
jg
mov
jmp
call
dec
fsubrl
rcrb
mov
imul
fwait
out
fidivrl
or
test
adc
inc
cmp
add
push
mov
sub
out
aaa
imul
out
jbe
jo
xor
inc
sbb
sbb
pop
mov
je
in
daa
jle
cmpsl
xchg
js
ljmp
ljmp
in
jno
inc
xor
xor
push
les
inc
int
xchg
or
sub
cmpsb
dec
dec
out
jl
jns
shrl
jmp
stos
das
sbb
mov
ret
inc
and
jmp
pop
andb
xchg
and
outsb
sbb
dec
xor
orb
test
loop
add
xor
iret
mov
dec
pop
lret
inc
icebp
push
lock
inc
push
cmp
dec
adc
lret
xchg
mov
sti
dec
popf
adc
addr16
out
pusha
add
int3
pushf
mov
mov
imul
or
xchg
cmp
inc
repnz
aam
cmp
jmp
sbb
mov
sbb
out
xchg
jge
arpl
pop
xchg
out
lret
arpl
or
inc
inc
cmpl
sti
std
xchg
shlb
lcall
pop
mov
mov
movsb
mov
dec
push
ffreep
cltd
or
jmp
fincstp
rorl
lret
mov
stos
mov
notb
xchg
in
pop
cld
and
add
popf
movsl
jle
xchg
inc
sbb
mov
fwait
cmp
sub
push
fldcw
xor
imul
or
ja
clc
wrmsr
ja
popa
push
cmp
js
or
repz
jecxz
rolb
add
mov
pop
mov
fcompl
in
test
ficoml
lods
outsb
addr16
xchg
push
enter
or
push
push
cmpsb
popa
mov
incl
xchg
jle
lret
js
lds
mov
out
cld
or
mov
pop
jo
rcr
ljmp
jmp
sbb
pushf
mov
fidivrl
pushf
test
ret
arpl
ret
fsubl
pop
cmc
xchg
xchg
or
sbb
dec
aaa
push
xchg
jno
cld
scas
mov
daa
lea
push
inc
pushf
mov
fwait
sbb
push
xchg
idivb
stos
ja
loope
test
sub
addb
inc
dec
xchg
mov
popa
fisubs
mov
dec
push
in
incb
into
add
ja
fidivrs
dec
cli
mov
pop
daa
scas
cmpsl
pop
xor
in
in
or
loopne
out
cmp
divl
and
jl
inc
daa
dec
call
gs
aas
mov
cli
pop
fucomi
in
push
add
xor
sub
mov
mov
and
jae
mov
sub
out
lea
sub
adc
in
lret
push
cltd
mull
sub
or
ffree
add
add
cmp
cld
fwait
jge
jno
inc
negl
ja
xchg
xchg
jne
and
lahf
and
out
lret
sub
lret
pop
in
sbb
mov
push
xlat
or
jge
lea
out
lcall
jecxz
xor
pop
add
cmpsb
jecxz
mov
lret
loope
xchg
sti
arpl
jg,pn
sub
inc
push
mov
xor
lcall
adc
lods
lods
int3
pop
mov
sub
and
sub
jb
add
or
aad
sbb
fcmovnb
fists
inc
pop
fldl
mov
sub
das
adc
mov
or
adc
jle
xchg
mov
gs
in
mov
iret
cmp
cltd
test
notl
sbb
hlt
jecxz
aas
cld
push
ja
imul
pop
outsl
test
rcll
xor
jne
adc
mov
sarl
fwait
xor
and
or
push
add
mov
dec
aas
icebp
test
mov
std
add
arpl
popf
cltd
iret
test
push
loop
dec
mov
mov
and
scas
test
sbb
dec
inc
cli
imul
sbb
lock
cmpsl
mov
leave
jae
xchg
scas
push
mov
sbb
inc
enter
ja
outsb
push
ss
scas
and
cwtl
in
push
cld
or
adc
testl
repnz
outsl
cltd
lods
pushf
dec
rcrb
aam
mov
mov
int
cmpsl
jo
hlt
add
loop
loopne
dec
clc
xchg
sarl
rclb
jl
popf
repz
sub
cltd
lahf
and
outsl
cltd
daa
in
es
loop
outsl
add
xchg
dec
sar
sub
pop
dec
inc
or
stc
rolb
lea
xor
cmp
adc
sub
cwtl
mov
pop
cs
jno
in
mov
fsubrl
add
ds
push
dec
repz
aaa
movsb
loop
lods
cmovbe
push
and
xlat
xchg
daa
jo
cld
xlat
jmp
mov
dec
jns
int3
clc
xor
cmp
dec
push
repz
jnp
cmp
xor
ljmp
repz
dec
dec
pop
lret
in
dec
sti
mov
add
adc
sub
cs
adc
push
mov
rcrb
shll
dec
movsb
push
sahf
or
add
sbb
and
or
fisttps
pop
sub
rcll
gs
int3
jb
cs
sub
xlat
hlt
in
repz
inc
sub
sbb
out
push
out
push
xor
cmp
mov
inc
jbe
popa
jne
pusha
xlat
fldenv
adc
push
loop
imul
pop
test
mov
adc
scas
bound
dec
mov
shll
ret
xchg
fdivp
arpl
or
mov
push
and
sub
push
ljmp
lea
ficomps
jecxz
in
adcl
daa
iret
out
cmpsb
aad
xor
mov
call
jns
pop
ret
sbb
fwait
jne
leave
rcr
sub
cwtl
mov
lahf
xchg
outsl
popf
mov
jb
cmp
clc
fstpl
shrl
test
roll
mov
jno
in
lcall
or
sub
mov
rcll
cmpsl
fwait
xchg
mov
test
xchg
cmc
lods
lret
mov
lahf
int
dec
popl
lret
mov
loop
nop
mov
pop
mov
dec
andb
jmp
test
bswap
cmp
inc
out
into
leave
sahf
insb
lds
xorl
adc
xlat
adc
test
mov
jns
sbb
aaa
mov
xchg
inc
ss
dec
mov
lea
mov
lcall
sub
and
sbb
sub
leave
mov
movsl
add
gs
dec
xlat
mov
jp
inc
insl
das
mov
fnsave
inc
fisubrs
ss
fdiv
out
mov
xor
popf
mov
std
jbe
scas
insb
inc
repz
ljmp
push
movsl
insl
mov
sahf
jl
aad
subb
in
xor
in
mov
in
bound
loop
out
repz
ret
xchg
jle
sbb
aam
aad
lds
sbb
mov
cmp
int
mov
jo
mov
pop
cmp
pop
xlat
test
mov
push
cmc
adc
push
push
cmp
xchg
fbld
cmp
mov
push
clc
inc
jle
cmc
mov
push
cmp
xor
shrb
adc
mov
and
dec
inc
rcll
dec
lret
cs
enter
stos
jbe
or
ret
or
mov
shrl
rclb
xor
pop
push
add
mull
jecxz
pushf
mov
in
test
jmp
push
cwtl
jg
lret
adc
pushf
movsl
stos
movsb
fidivl
dec
adc
xchg
js
jmp
lods
mov
cmp
add
push
jno
and
fbstp
adc
add
adc
insl
adc
xchg
loope
inc
mov
or
test
insb
cmp
lods
jle
cli
ljmp
int3
xor
jnp
daa
dec
add
ss
xchg
fs
hlt
xchg
dec
imull
enter
std
pop
push
lods
jp
cmp
cwtl
cwtl
cmp
enter
adc
push
or
xlat
pusha
int
push
or
jle
stos
jle
cmp
ret
mov
sub
add
icebp
ja
xor
dec
or
xchg
fisttpll
mov
iret
push
mov
mov
dec
rcrl
ds
lea
xorl
dec
push
sarl
ss
cmpsb
mov
push
mov
call
pusha
pop
sbb
pusha
fnstenv
dec
push
mov
test
dec
inc
mov
push
outsl
test
adc
insl
sub
cmpsb
and
insl
sbb
sbb
jmp
xor
mov
cmpsb
and
popf
pop
push
pop
adc
xchg
mov
mov
in
cmp
adc
ret
lods
outsb
xor
xchg
mov
sub
cs
adc
sub
ja
scas
jg
ljmp
or
int
iret
xor
mov
xchg
push
imul
cmpsb
cwtl
fists
out
repnz
cmp
pop
stc
in
pop
int3
mov
push
cmp
mov
push
xlat
out
movsl
add
call
pushf
cli
ja
jp
ret
in
and
stos
jmp
and
sti
lods
or
pushf
imul
push
xorl
mov
push
out
cs
xor
ljmp
mov
sahf
add
fdivp
popa
data16
dec
mov
mov
lcall
rolb
add
jae
rcl
ljmp
cmp
shll
loop
dec
call
mov
xadd
jbe
pop
lret
mov
sbb
push
pop
mov
lret
cmpsb
adcb
pop
sbb
pop
push
push
pop
inc
icebp
add
sbb
adc
mov
pop
lahf
rclb
push
incb
and
cmp
mov
sbb
scas
fwait
xchg
or
rorl
push
push
xchg
pop
call
jp
mov
xor
cmp
pop
pop
push
insl
enter
xchg
mov
jo
pushf
mov
xchg
push
fmuls
nop
pushf
mov
lret
mov
mov
test
mov
inc
hlt
mov
jmp
mov
lds
jae
dec
adc
mov
sbb
out
cmp
repz
mov
sbb
je
cmp
mov
orl
test
stos
ljmp
je
push
sahf
push
xchg
cwtl
pop
divl
lock
cs
popa
rcll
idivb
idivb
sub
pop
add
in
fistps
aaa
adc
sub
sbb
repnz
mov
cld
pop
push
adc
mov
movsl
xchg
inc
aaa
xrelease
fisttpll
or
notb
aaa
add
push
jno
ja
sub
lods
push
inc
jns
inc
xchg
jmp
adc
jle
sub
pop
into
es
sub
ficoms
cmp
push
fs
lds
xor
and
and
dec
pushf
jle
aas
pop
and
jbe
or
and
jb
lds
jg
lahf
imul
pop
daa
lret
outsb
mov
aaa
jmp
push
push
daa
in
mov
cmp
sar
jne
jno
inc
xlat
push
xlat
stos
pop
fdivs
pop
xor
fisubs
fstpl
mov
fidivl
pop
pop
insb
addr16
inc
xchg
lret
mov
cmp
xchg
sbb
rolb
outsb
sub
dec
data16
repnz
xchg
aad
xchg
orb
out
cmpsb
neg
aas
aaa
stos
call
cmpsb
stos
cwtl
mov
mov
xchg
sarl
jbe
mov
bound
in
mov
adc
push
jge
rep
and
lret
imul
mov
mov
adcl
push
add
jg
xchg
in
dec
xor
stos
jnp
cld
cmp
mov
jb
cmp
cmp
adc
jmp
adc
repnz
pop
mov
pop
scas
pop
mov
scas
push
and
sub
cmp
mov
sub
stos
loopne
sub
pop
cs
or
sar
ja
xchg
movsb
out
cli
mov
test
xlat
insl
sahf
mov
jecxz
aaa
rclb
inc
adc
les
das
fnstsw
movsb
adc
test
out
imul
xchg
aad
fimull
mov
cmp
push
push
adc
add
aam
test
sub
bound
scas
xor
or
add
js
loope
ret
inc
fwait
dec
arpl
test
mov
dec
push
cmpsl
loopne
adc
mov
dec
movsl
aam
mov
pop
lods
enter
mov
pop
mov
cmc
cmp
jp
jmp
cmp
pop
jmp
inc
dec
jnp
std
mov
cld
adc
jg
xlat
push
pop
outsl
lea
test
and
lock
lret
ja
lds
ret
adc
in
dec
lock
in
jl
push
pop
xchg
out
mov
rcl
lahf
or
inc
pop
inc
hlt
push
dec
icebp
xchg
cmp
jo
ljmp
inc
ja
icebp
xchg
daa
jle
inc
push
faddl
movsb
movsl
push
xor
jle
addb
add
fmulp
sub
ja
jmp
pop
out
out
mov
xlat
setae
imul
lret
fnstsw
arpl
cwtl
rcr
clc
pop
cmp
jae
add
fists
and
ds
ficoml
in
mov
out
xchg
mov
jle
inc
push
jne
test
scas
mov
pop
mov
daa
mov
jp
loope
movsb
inc
sub
inc
or
call
bound
jno
and
pusha
leave
arpl
mov
in
jns
test
ret
pushf
in
xor
ss
mov
inc
mov
add
cmpsl
mov
testl
pop
adc
lret
cltd
scas
lahf
rorb
inc
repnz
fcomip
sahf
aam
cmc
outsb
mov
jno
out
or
inc
xchg
jge
outsb
int
inc
pop
sub
ljmp
sub
sbb
push
fbld
aas
mov
das
or
pop
pop
push
loopne
mov
mov
dec
adc
sbb
outsb
daa
icebp
lds
cld
leave
shlb
lret
xor
inc
arpl
push
xlat
imul
or
sbbl
pop
aas
stos
cmp
je
ret
aaa
ss
and
or
jae
outsb
out
mov
cli
call
hlt
in
lds
pop
jo
jns
and
imul
pop
dec
dec
fstpl
lret
mov
xlat
ljmp
mov
iret
sbb
adc
add
clc
icebp
mov
std
push
test
mov
jg
xor
into
enter
adc
loop
enter
mov
jne
subb
cmp
sbb
insb
inc
sti
int
jb
inc
shl
push
popf
cltd
adc
sub
mov
cmp
jns
and
jecxz
jp
ds
sar
push
jne
cmp
filds
shrl
pop
xchg
add
push
movsb
jecxz
lds
jecxz
cltd
out
ja
sbb
outsb
mov
inc
sbb
cmpsb
es
xchg
clc
push
scas
orps
enter
sub
je
jno
add
cmc
into
dec
jno
sti
pop
jp
pop
pop
push
ficoms
and
sti
mov
ljmp
mov
fcmovbe
cmp
loope
adc
jmp
enter
les
aad
jmp
adc
push
sub
out
mov
sbb
repz
bound
inc
xchg
cmp
jb
xor
movsb
fstps
movl
fmuls
bound
notl
or
fs
push
cmc
jo
jecxz
adc
and
int3
or
ljmp
jo
outsl
or
mov
movsb
mov
mov
jg
sub
xor
int3
fwait
enter
add
jnp
push
mov
mov
or
dec
repz
enter
add
divl
insl
adc
mov
xchg
test
repz
add
das
xor
dec
lret
mov
ret
daa
xor
xchg
push
out
sub
mov
mov
test
push
xchg
jecxz
inc
cmp
inc
ds
mov
bound
jg
mov
adc
cmpsl
jno
add
int3
into
insl
or
inc
adc
cmp
je
jge
fstps
popa
dec
mov
pop
xor
call
addl
das
and
cmp
and
sbb
mov
std
movl
xor
cmp
jns
mov
pop
lds
and
push
stos
or
xor
lahf
jb
cmp
cltd
mov
das
cs
movsb
test
cmp
cmc
mov
ret
add
pop
inc
mov
lea
sahf
dec
jmp
mov
in
iret
jne
mov
punpckldq
jle
fnstsw
adc
mov
ret
dec
inc
push
lea
roll
movsl
cli
sti
flds
or
xchg
popf
add
stos
jge
fnsave
leave
mov
sahf
in
int3
es
jecxz
mov
cmc
fcmovne
call
mov
test
mov
and
movsl
rorl
icebp
je
xchg
mov
or
pushf
sbb
lahf
pop
jbe
dec
call
out
jno
in
xchg
jp
gs
mov
mov
lea
lods
xor
dec
test
out
out
xchg
loop
xchg
dec
add
sub
ja
dec
int
std
mov
aad
mov
pop
les
subb
cli
loopne
fs
lds
cmc
mov
push
xor
aad
xchg
orb
sar
dec
jo
imulb
loopne
mov
cmp
iret
shrb
cmp
mov
mov
inc
cwtl
jb
and
and
leave
cwtl
je
pop
and
outsb
loope
and
cld
popa
mov
dec
ds
sbb
pop
les
jl
sarb
clc
scas
push
arpl
and
sub
pop
test
cmc
gs
lds
pop
push
cltd
sub
in
movsb
push
xchg
cwtl
inc
nop
sub
aam
jb
popa
mov
mov
mov
addr16
push
mov
lret
xor
mov
dec
and
sbbb
aad
push
mov
lret
cs
dec
scas
xchg
xor
insb
dec
mov
lods
bound
pop
jp
sarb
mov
sbb
nop
iret
xchg
lcall
jecxz
outsl
cmp
xchg
sbb
push
ljmp
push
sbb
and
xor
adc
jbe
out
invd
lret
test
mov
aaa
cmc
pop
mov
sub
cmp
ja
add
stos
pop
sbb
jge
add
in
or
test
fsub
lea
xchg
mov
sti
sub
mov
mov
jns
xchg
jecxz
xchg
ja
mov
fisttpll
cmpsb
into
pop
and
push
loope
push
cmp
dec
sub
popa
adcl
movsb
outsb
arpl
mov
fdivs
pop
jb
outsb
popa
sub
adc
add
mov
xor
pop
insb
sti
push
add
inc
adc
adc
and
rcll
jge
jp
mov
idivl
scas
sbb
xlat
imul
leave
out
aas
pop
leave
loope
xor
sub
popf
ljmp
sbb
int3
cmpsl
les
sahf
mov
cmp
mov
cld
push
shlb
adc
mov
xchg
stc
push
add
xchg
push
dec
int3
aaa
or
sarl
and
cmp
rcrl
xor
jmp
or
lcall
mov
xchg
jle
fcmovne
dec
ss
iret
cmpsl
xchg
xchg
adc
mov
add
xchg
std
fistl
xlat
mov
push
mov
sbb
std
jns
out
in
jb
fidivs
mov
or
pop
cmp
iret
rorl
pop
pushl
fcomps
aas
xlat
jge
jg
jmp
scas
imul
into
aas
or
test
sbb
aaa
call
add
push
adc
pop
aam
iret
stc
jmp
pushf
incl
cmpsl
xchg
rorl
adc
jnp
xchg
andl
in
dec
dec
mov
out
outsl
addr16
ja
orb
pop
sbbb
mov
sbb
test
mov
xchg
xchg
and
roll
nop
out
sub
inc
mov
mov
pushl
aad
and
cltd
clc
cmc
cmpsl
xchg
cmp
lock
in
adc
jae
xor
pop
mov
arpl
inc
outsb
sub
pusha
mov
mov
lahf
roll
call
popf
cmp
or
and
fsubrp
cltd
xor
or
mov
cmpb
and
bound
push
ja
mov
sbb
mov
test
lcall
mov
pop
enter
xorl
inc
and
aam
xchg
push
cwtl
sti
pop
hlt
xchg
lods
push
fs
dec
sbb
inc
loop
xchg
loope
dec
cld
and
push
fnstsw
pop
mov
pop
mov
clc
lods
scas
and
dec
push
and
dec
xchg
mov
ss
jb
cmc
sbb
clc
loopne
icebp
shlb
mov
sub
mov
cmp
das
cmp
cmp
and
fnsave
and
xchg
mov
addr16
mov
sub
adc
push
add
sub
data16
outsl
cmc
test
sub
stos
xchg
push
and
mov
jno
enter
sub
and
xchg
adc
mov
sbb
cmp
cmpsl
lds
lret
aas
ja
cmp
insb
scas
cmp
cmc
mov
pop
push
scas
xor
cmp
sub
adc
mov
add
icebp
cmp
imul
dec
push
arpl
xlat
inc
cmp
imul
bound
pop
push
cld
sub
xchg
lcall
repz
lock
mov
out
pop
stos
mov
dec
imul
pop
jge
xchg
les
mov
pusha
fistl
imul
jnp
cwtl
inc
xchg
adcl
fistpll
fists
int3
imul
jae
in
out
mov
scas
push
hlt
inc
fs
sbb
lock
cmpsb
pop
test
fcmovnb
jmp
dec
test
mov
fsubs
pop
or
stc
jo
fdivs
pop
out
lret
xchg
mov
or
and
xchg
lret
fcmovu
loope
movd
xor
testl
orb
cmpsl
mov
xor
add
cmp
push
jnp
inc
in
cmp
mov
and
into
xchg
daa
jp
xchg
mov
jmp
ficoml
pop
and
jl
jecxz
nop
lds
cmp
test
mov
in
fnstsw
or
js
bound
and
into
flds
das
mov
leave
or
push
and
pop
testb
mov
adc
mov
fs
xor
outsl
pop
cli
pusha
mov
mov
or
pop
inc
adc
jecxz
ret
and
sti
gs
push
stos
sbb
dec
fcmovnu
xchg
popf
icebp
int3
push
mov
iret
add
jmp
add
cmp
mov
xor
push
mov
test
testb
inc
sbb
and
sti
aad
or
repnz
jae
mov
cli
pop
and
xchg
shl
aad
fsubp
aas
stc
addr16
or
sub
sti
js
xchg
sbb
jge
sub
pop
add
inc
std
pop
mov
xor
daa
scas
push
inc
sbb
movsb
jae
push
test
rcrb
jb
fs
idivl
ret
hlt
inc
stc
jne
sbb
stos
pop
mov
aas
xchg
imul
popa
adcl
in
sub
sub
mov
jle
mov
lcall
cmp
pop
adc
clc
mov
hlt
xchg
ds
movsb
sahf
shll
adc
xchg
sbb
mov
mov
icebp
enter
inc
out
orl
dec
bound
popf
push
jae
and
das
mov
daa
aas
bound
lahf
push
cs
repnz
fs
push
pushf
push
push
aad
or
fcoml
pushl
rol
push
mov
aas
add
fwait
sub
sbb
cmc
push
data16
jo
call
std
pop
add
dec
sub
fistpl
pop
xor
js
fdivrs
sub
cld
xor
sub
xchg
mov
testl
psubsb
mov
int3
xor
jb
xor
insl
test
mov
dec
imul
inc
in
sbb
mov
pusha
push
cmpsl
inc
jmp
lods
jbe
xlat
or
xor
dec
js
subb
dec
cmp
push
test
fldl
sti
gs
inc
add
enter
negl
xor
and
push
push
stos
push
mov
lcall
ja
jl
fnstenv
ficompl
cmp
popa
xchg
fmulp
mov
cs
pop
ljmp
out
jge
in
cltd
pop
jp
flds
movsl
pushf
pop
add
jns
push
mov
adc
push
aaa
inc
js
sbb
dec
push
mov
insb
xchg
cmp
lds
decl
mov
mov
iret
shl
clc
fdivs
subb
pop
sahf
pop
pop
enter
fs
add
sbb
arpl
test
bound
sbb
jae
stos
adc
loopne
or
mov
aaa
gs
popf
in
xor
xchg
cld
push
aam
or
popf
dec
lcall
aas
scas
fidivrs
push
insb
xchg
sbbl
push
cmpsl
jp
jge
das
cs
cld
imul
push
dec
mov
mov
rorl
push
dec
mov
movl
adc
push
outsl
mov
icebp
dec
fildll
xchg
xor
mov
ret
jge
ret
mov
dec
add
out
mov
std
mov
mov
xchg
push
loopne
inc
fcmove
inc
int
jmp
scas
push
push
popf
addb
fdivl
mov
jmp
test
sbb
jb
sbb
dec
inc
lock
xor
xchg
adcl
incb
add
sub
notl
jg
fadds
rcll
mov
sub
mov
lea
xchg
fwait
cmpsl
xchg
stos
or
jl
sbb
jbe
sahf
repnz
je
push
pop
ja
mov
cmc
adc
test
cmpsl
lock
lods
push
add
dec
mov
out
jb
repz
int3
cmpsl
and
xchg
pop
xchg
mov
pop
add
adc
add
cmovp
add
push
or
pop
push
sub
mov
dec
popa
mov
ror
adc
xor
outsl
jle
cmpsb
ljmp
les
jg
xchg
lds
repnz
jge
inc
and
mov
enter
mov
jb
mov
xor
cwtl
mov
sbb
leave
jge
andb
jne
enter
ljmp
sub
repnz
fs
mov
sub
push
pushf
jmp
fimuls
push
call
inc
mov
mov
shll
repz
or
adc
inc
jmp
pop
pusha
jmp
enter
aaa
in
or
dec
jmp
into
and
andb
mov
ret
sbb
lock
aad
adc
sub
incb
lods
jp
jmp
inc
xor
mov
lods
das
insl
inc
xor
lock
in
fcompl
or
inc
lods
mov
fwait
or
out
cs
and
pop
push
sbb
mov
pop
and
arpl
mov
mov
cs
mov
jae
push
mov
repnz
mov
xor
push
adc
xor
enter
jns
jl
in
xchg
sbb
aaa
push
ljmp
shll
lods
xor
push
or
or
push
or
daa
mov
dec
fisubs
clc
cmp
dec
cmp
mov
sbb
xor
clc
push
mov
push
pop
pop
imul
mov
xchg
mov
dec
out
pop
mov
sub
ja
mov
dec
push
movsb
push
sbbl
jns
sub
xchg
adc
or
pusha
jo
sub
and
xchg
out
imull
fst
sub
jg
adc
mov
lahf
mov
dec
jl
les
cmp
fmull
out
mov
rcrl
push
sbb
cmp
cs
jmp
fnstenv
scas
or
mov
jecxz
inc
std
jge
xor
cmp
mov
or
pop
rorl
cmc
ss
jno
lret
ret
mov
xor
in
mov
inc
bnd
in
push
pop
stos
cmp
test
dec
mov
cli
mov
daa
jnp
xor
inc
add
lock
call
gs
mov
leave
and
lds
jg
xchg
xor
popf
push
mov
enter
test
cmp
movsb
push
lret
stos
sti
gs
scas
mov
loop
cmpsb
add
cli
or
lret
sbb
ss
arpl
cmp
pop
rcrl
movsb
push
test
test
pop
shrb
mov
gs
rcll
insb
mov
lods
xor
call
cmp
xor
push
aas
push
or
sub
gs
xor
dec
inc
pop
sub
pop
arpl
jb
lahf
aad
or
nop
add
loopne
fistl
mov
add
jne
add
ds
push
negl
lahf
loope
sub
mov
or
fstl
jo
lea
add
push
bound
loope
subb
mov
fnsave
xchg
xor
jmp
sub
xor
or
test
push
mov
repnz
in
mov
jle
dec
cltd
in
mov
cmp
inc
into
cli
pop
xchg
sub
in
pop
dec
xchg
fisubl
inc
idiv
pop
fldenv
into
fistps
clc
fwait
out
push
movsb
mov
push
loope
mov
mov
sbb
orb
scas
into
dec
mov
dec
outsb
cmp
and
or
lret
and
pop
outsb
inc
dec
imul
iret
mov
loop
push
popa
and
and
cs
adc
cli
jp
and
xor
xor
adc
dec
and
in
fs
dec
add
jge
sub
int3
xchg
mov
bound
mov
xchg
stc
cs
xor
icebp
adc
xorl
inc
mov
pop
or
jecxz
imul
jo
outsb
xor
push
das
pop
ja
clc
xchg
mov
movhps
xor
fmull
insl
jns
scas
int
mov
sub
cmp
push
adcb
aad
cwtl
jbe
orb
call
sarl
sti
lods
lea
or
mov
jnp
popf
pop
push
xchg
sbb
and
int3
pop
int
sub
jp
push
fcmovb
call
xor
pop
xchg
push
ja
arpl
push
and
mov
dec
adc
das
jae
mov
into
pop
cld
xchg
adc
lds
cmp
cld
sbb
sub
mov
stos
jle
or
les
in
cld
add
imul
and
and
fisubrl
xor
and
aad
add
jg
ljmp
lcall
sbb
xchg
cmp
jg
pusha
lods
fsubrs
jmp
in
icebp
sbb
repz
xlat
push
jecxz
push
jp
cmp
sbb
mov
lods
xchg
add
jg
xor
xlat
outsl
hlt
mov
push
fnstenv
pop
cmpsb
imul
push
pop
or
iret
repnz
loopne
ljmp
repnz
mov
inc
iret
mov
outsb
xchg
adc
dec
sub
outsl
les
int3
sub
icebp
dec
jge
roll
dec
lcall
lods
adc
xchg
jecxz
sarl
adc
cltd
daa
cmp
iret
mov
sti
add
out
loop
aad
fdivrl
mov
cli
int
pusha
add
pushf
jp
or
int
jae
dec
addr16
or
movsl
ljmp
cmc
adc
outsl
or
sbb
je
sub
pop
and
push
fldenv
and
int
push
lods
mov
mov
push
push
outsb
mov
xchg
xchg
jmp
sbb
pop
jecxz
add
rorl
pop
in
out
push
orl
sub
dec
lods
out
dec
jmp
push
xchg
shrl
mov
hlt
stc
lds
xchg
cmpsl
mov
and
jecxz
mov
and
push
je
pop
push
int
and
andb
mov
lods
das
cmp
mov
xor
inc
inc
push
imul
pop
repnz
xorb
xor
dec
loopne
ja
xchg
fiaddl
cwtl
push
faddl
loop
adc
mov
fisubs
dec
add
clc
subb
insl
sbb
data16
les
js
mov
xchg
cmpsb
and
adc
pop
jns
add
imul
inc
out
repz
inc
aam
jge
jg
add
mov
sti
decl
xorl
outsl
inc
push
loope
sbb
mov
lods
icebp
mov
cmp
jp
js
adc
cmp
std
lret
loopne
push
cwtl
push
fcomps
jmp
dec
les
mov
int
cmp
int
xor
lock
decb
cmp
xchg
pop
cmp
dec
xchg
lods
into
lock
push
int3
ss
ss
fistpl
xchg
or
sti
mov
mov
hlt
sub
stos
inc
mov
pop
push
inc
xchg
sub
pop
cmp
dec
out
cltd
mov
es
jl
push
dec
and
test
scas
jecxz
jae
add
and
inc
ret
jle
sub
aam
jge
repz
mov
out
cmc
daa
shll
mov
inc
sub
divl
faddl
jecxz
dec
fidivrl
mov
inc
cltd
sbb
inc
out
sbb
push
icebp
fdiv
mov
jmp
ljmp
divb
mov
inc
push
repnz
xchg
xor
aad
or
inc
in
loopne
nop
inc
push
xor
or
shrb
jmp
dec
xor
mov
xchg
dec
sti
inc
sahf
xchg
cmp
repz
mov
sbb
das
sub
ds
jg
iret
lret
add
lret
dec
fistl
add
in
adc
aas
arpl
cltd
out
jecxz
or
pop
push
jl
in
repz
sub
pushf
or
sarb
cli
mov
lret
sub
mov
xor
push
mov
js
gs
inc
sarb
dec
jnp
es
push
adc
add
dec
ror
rcll
popl
xchg
leave
shll
pop
lahf
insb
aas
out
fwait
mov
and
mov
mov
xchg
cltd
mov
hlt
test
ja
and
xchg
cmpsl
rcrb
pop
push
jae
xchg
daa
std
jns
int3
dec
movsl
jg
cmpsb
or
test
imul
inc
or
mov
add
popa
out
out
push
pusha
sub
sub
pop
jo
scas
inc
js
mov
cmp
jmp
ljmp
jo
cwtl
or
repnz
cmp
cld
pushf
orb
insl
sbb
jno
lea
cmc
adc
dec
outsl
out
sub
outsb
in
enter
dec
ja
into
aaa
cld
mov
fs
adc
nop
dec
ret
imul
jbe
ror
mov
xchg
push
loop
cmp
outsb
pop
push
fisubrs
mov
dec
pop
mov
push
mov
mov
hlt
xchg
push
mov
or
fdivrl
aad
decb
movsb
xor
movsl
jl
cmpb
pop
inc
jne
mov
jecxz
mov
or
xor
push
enter
ficomps
push
cmp
repz
mov
pop
mov
movsl
pusha
out
cmpl
je
out
lods
orb
jo
push
mov
jl
push
imul
call
mov
xchg
cmpb
ror
mov
pop
pop
ljmp
shlb
xchg
adc
xchg
aad
call
mov
rorb
fwait
jle
pop
adc
jge
decl
jge
lret
xchg
or
mov
ret
mov
sub
js
jl
nop
jns
arpl
insb
xchg
or
xchg
mov
sub
mov
sub
xchg
inc
iret
outsb
cmp
xchg
out
lods
loop
dec
dec
jb
push
movsb
mov
jg
and
in
cli
pop
jo
xchg
push
popa
mov
mov
clc
data16
insl
and
sarb
xchg
addr16
xor
outsb
xor
in
stos
into
pop
mov
xchg
imul
sub
int
in
or
mov
or
stc
pop
or
orb
int3
adc
fwait
mov
mov
xchg
fmull
xor
into
inc
sbb
cmc
push
je
mov
mov
mov
bound
int
pop
xor
scas
push
jle
push
xchg
jbe
popf
sti
in
cltd
mov
mov
xor
out
daa
out
loopne
push
push
pop
xor
add
in
or
push
push
sub
movsl
aaa
addr16
mov
sub
sbb
test
ret
ja
xor
ret
fdivrs
test
adc
sbb
sbb
xor
dec
cli
cmp
ja
xor
mov
cli
push
pop
sub
cmp
imul
xchg
adc
xor
mov
pop
je
imul
cli
dec
xchg
lods
jo
adc
cmp
add
fiadds
fistpll
in
lret
leave
dec
popa
xlat
or
jns
sahf
mov
cltd
cmp
pop
stc
xor
shll
call
jg
and
test
aad
xor
ds
movsl
cmp
inc
adc
ret
xor
pop
mov
cmp
not
inc
lret
lock
aam
loope
mov
sub
mov
dec
loopne
insb
arpl
inc
mov
pop
mov
xchg
xor
push
call
dec
movsl
cmc
lret
pusha
jl
dec
sbb
jbe
mov
mov
in
scas
lcall
mov
pop
inc
sbbb
scas
std
aad
daa
cmc
lods
jnp
shr
pop
add
mov
inc
adc
jnp
fstl
cli
push
inc
loopne
aam
push
ret
mov
cli
and
adc
push
cmp
sbb
outsb
pop
stos
pop
xchg
nop
notl
fwait
jns
test
dec
notl
add
ss
jecxz
pop
push
mov
rcrl
movsl
pusha
fldl
stos
mov
xchg
adc
or
lahf
pop
cli
push
cmp
mov
mov
sbb
pmaddwd
pop
push
rorb
outsb
jl
mov
fwait
int3
push
jg
mov
addb
movsb
fmull
ret
or
and
jmp
sub
mov
outsb
bound
cmp
lods
mov
push
and
mov
inc
xchg
and
out
sti
out
ret
and
imul
enter
xlat
addl
sti
add
dec
xchg
mov
and
pop
fists
sar
scas
rorl
push
add
and
jl
mov
cmc
push
rorb
xchg
xor
in
xor
aaa
push
fcoms
and
aad
mov
mov
push
loop
xchg
cmp
cli
adc
pop
adc
or
xchg
xor
xchg
sub
fs
add
sbb
popa
mov
push
jle
cs
or
dec
aam
xchg
adc
loope
das
es
inc
movsb
mov
mov
in
mov
adc
jns
mov
dec
out
xchg
push
and
mov
es
push
add
mull
sub
shll
icebp
add
mov
arpl
std
adc
in
mov
negb
pop
nop
xchg
loope
or
shrl
shl
mov
pop
dec
test
call
dec
ja
ficompl
adc
mov
adc
add
in
movsb
cmp
pop
xchg
cmpsb
lods
fs
nop
mov
xor
mov
inc
sub
repz
daa
xor
dec
pop
mov
inc
xor
pop
add
add
xchg
push
mov
jno
mov
sbb
cmp
mov
pop
pop
shll
fisttpl
cltd
gs
sub
xchg
int3
jne
xchg
loope
dec
stos
xor
mov
jne
mov
decl
pusha
mov
stos
lds
out
or
pop
movsl
dec
in
pop
lods
mov
mov
dec
je
jnp
push
orb
pop
aaa
pop
xchg
popf
ljmp
lea
pop
sub
mov
dec
add
inc
das
xchg
sbb
lods
loopne
or
cmp
pop
lock
mov
movsb
out
mov
cs
sub
fisubrl
xchg
pop
loopne
popa
or
into
xchg
adc
fsts
lahf
mov
cltd
jns
hlt
dec
inc
rep
std
and
sbb
in
sbbl
dec
les
insl
ljmp
inc
ss
jmp
cmc
or
call
jne
popf
ja
cli
or
stos
mov
pop
aas
dec
and
jmp
mov
inc
jb
inc
shll
xchg
pop
test
psubb
mov
out
fcomip
sub
out
push
pop
push
push
enter
pop
dec
push
cmp
lock
mov
insb
add
into
xchg
aam
add
into
sti
pop
ljmp
mov
insl
ss
cmp
fsubs
ret
xor
mov
fwait
aam
adc
xchg
es
inc
in
cltd
mov
test
dec
mov
pop
jnp
pop
sbb
sar
mov
sti
test
testl
pop
and
popa
push
lods
xchg
lea
sub
push
subb
jno
cmp
inc
dec
fnstsw
pop
sub
pop
lret
push
movsb
jmp
mov
xor
icebp
test
xchg
loopne
mov
inc
mov
js
out
sbb
aaa
sbb
cltd
dec
cwtl
push
mov
movsb
aad
repz
mov
mov
add
movsb
jg
cmp
loope
aad
and
xchg
mov
push
std
or
inc
std
das
test
xor
lea
sub
xchg
pop
fisttpll
and
cli
stos
repz
test
mov
xchg
shl
sbb
fldcw
cmp
dec
mov
bound
shl
lret
in
xor
pop
mov
push
lcall
inc
and
xor
or
fisttpl
push
jnp
ljmp
clc
xchg
sbb
xchg
ljmp
xor
mov
jle
add
ja
sub
push
ret
fwait
and
aas
mov
mov
sbb
xchg
in
and
fnstenv
aad
and
loopne
shrb
leave
mov
sub
inc
repz
xchg
fildll
out
bound
sbb
daa
mov
ret
clc
sub
mov
mov
pop
shrb
and
sbbl
push
sub
push
push
cmc
and
cmpsl
dec
xchg
enter
xchg
or
or
or
push
or
cmp
pop
dec
pop
cs
and
add
int3
xchg
mov
jne
jae
adc
mov
insl
mov
sub
xchg
inc
dec
lret
mov
cmp
jg
out
sbb
add
cmp
cs
adcl
das
fucomip
and
push
add
stos
int
pop
sub
shl
xchg
sub
push
mov
insb
in
leave
adc
inc
push
data16
mov
dec
push
mov
mov
mov
dec
test
scas
out
mov
mov
mov
sbb
push
and
dec
sbb
nop
and
or
pop
in
int
in
nop
xchg
xor
insb
lret
in
gs
cmp
roll
push
pop
mov
xlat
cmp
xlat
test
mov
aas
ljmp
pop
or
jbe
pop
pop
movsl
nop
lods
mov
add
popa
scas
pop
mov
cwtl
movsl
add
lret
cmpsl
sub
adc
movsb
loopne
add
jns
cmpsl
cmp
lea
fisttps
or
aam
lahf
adc
inc
test
bound
mov
push
push
jg
sbb
push
and
fwait
dec
and
jmp
inc
xor
daa
push
xchg
dec
lahf
xchg
sbb
jb
sub
and
mov
ja
stos
lods
or
scas
jmp
fwait
out
xchg
insl
or
call
fiaddl
rorl
cmp
push
jmp
push
cld
je
fistpl
imul
popf
mov
mov
or
pop
and
lahf
addb
pushf
mov
popl
loop
hlt
pop
lods
aad
mov
flds
sbb
dec
cmp
sbb
andl
repnz
mov
out
cli
jne
shll
ret
adc
push
in
int
adc
inc
push
es
pusha
ljmp
aam
fildl
sahf
ret
jl
and
jg
add
pop
adc
in
inc
cmp
lock
and
jmp
mov
mov
mov
mov
scas
xchg
ja
cmp
ja
cmp
jne
push
nop
dec
movsl
or
mov
mov
xor
sub
xor
or
add
mov
cmp
jg
imul
fdivr
mov
xchg
in
or
outsl
sub
pusha
jns
test
fwait
sub
add
push
ret
shll
mov
loop
outsl
stos
jecxz
mov
mov
sbb
mov
out
jg
mov
stos
xor
mov
adc
xchg
and
sbb
mov
iret
lea
and
ljmp
ret
sahf
mov
and
jp
push
cmp
jae
mov
sub
and
xchg
cmp
sbb
xchg
pushl
pop
xchg
aaa
mov
push
cmp
push
dec
mov
xor
push
inc
ljmp
inc
movsl
imul
jecxz
iret
pop
add
ss
popa
in
xchg
add
push
xor
and
aaa
push
insb
add
lret
gs
lods
dec
adc
or
xor
adc
jne
push
adc
shr
andb
lcall
and
stc
setns
cmp
mov
outsb
popa
imul
cmpsb
imul
dec
mov
pusha
mov
sahf
mov
fisubs
aam
loopne
xor
sub
xlat
sub
imul
sbb
repz
mov
pop
shll
fadds
add
xor
hlt
dec
loopne
pop
and
ss
push
mov
cwtl
xor
sub
add
ds
stos
add
enter
jmp
aas
dec
ds
or
push
outsb
mov
fsts
inc
fs
fisubrl
push
js,pt
int3
push
and
sub
mov
lret
out
sbb
cld
scas
sub
mov
mov
inc
mov
loopne
jecxz
out
push
push
sub
xor
cmp
inc
mov
dec
sub
sbb
cmp
arpl
mov
push
push
xor
ljmp
stos
mov
dec
gs
or
sbb
repnz
pop
sahf
movsb
std
aaa
cmp
dec
rcll
repz
pop
pop
pushf
jge
lcall
add
mov
addr16
imul
adc
sbb
mov
ret
pop
fimuls
addl
lahf
aam
loope
push
jns
xchg
movsb
outsl
mov
mov
xorl
ss
std
inc
ds
sbb
mov
adc
mov
sbb
xchg
dec
insl
adc
push
mov
daa
mov
loop
movsl
xchg
cltd
lcall
pop
inc
mov
mov
cmp
push
sub
sbbl
mov
rorl
mov
ljmp
cmp
fs
or
push
xor
add
test
sbb
cmp
jmp
push
and
into
loop
mov
adc
pushf
xchg
jo
icebp
xlat
jne
das
cmp
out
enter
outsl
adc
add
arpl
or
fstl
out
popf
and
movsl
arpl
fcomp
push
repnz
xor
xchg
shlb
ds
mov
jge
xor
psubd
xchg
cli
push
add
dec
cmpl
gs
adc
cmpsb
cld
jmp
mov
es
inc
adc
insl
adc
aas
test
lcall
dec
or
sub
xor
je
mov
add
addr16
popf
mov
xchg
and
xsave
ret
push
jecxz
inc
pop
sbb
or
and
xor
pop
add
pop
data16
cld
and
pop
jp
pop
test
pop
and
int
mov
test
je
cmp
pop
fwait
mov
push
js
xchg
mov
jnp
xor
fiaddl
insb
mov
sub
and
jecxz
insb
ret
push
repnz
iret
popl
inc
inc
sub
mov
inc
inc
sti
sub
jecxz
and
xchg
ss
insb
popa
movsl
lret
orb
sti
inc
jmp
inc
push
add
inc
rorl
mov
mov
add
cmp
loop
xor
mov
mov
pop
ret
push
fcomps
and
xor
pop
mov
inc
sub
inc
shr
and
mov
loop
daa
dec
shrb
loope
jbe
roll
sbb
push
popa
sub
push
push
nop
mov
in
dec
test
inc
orl
lahf
cmp
scas
jl
repnz
pusha
adc
sub
dec
mov
sbb
aad
cltd
inc
test
mov
das
push
sbb
insb
adc
lss
in
test
or
push
pop
dec
push
lods
sub
mov
jmp
mov
rcrl
mov
pop
push
jae
in
xchg
fdivr
push
icebp
aaa
repnz
mov
inc
aas
inc
testb
sub
sahf
dec
sbb
leave
mov
push
ltr
jge
push
aaa
mov
mov
outsl
stos
test
and
leave
sbb
mov
into
je
fwait
push
lret
push
push
cli
dec
addl
sbb
shl
xor
xchg
shrb
mov
sub
cmp
int3
push
mov
or
add
cmpl
pop
jno
and
das
xchg
xchg
rolb
fwait
xchg
push
xchg
xchg
cmp
jnp
jge
out
cld
test
fistpl
mov
hlt
out
mov
jae
push
fwait
dec
cld
xor
dec
sub
xchg
outsl
jo
dec
int3
mov
sub
mov
stos
pop
jne
aam
in
scas
xchg
and
andb
push
data16
jle
xor
cwtl
sbb
mov
xchg
cmp
loopne
andl
mov
push
fcompl
pop
notb
loope
sub
push
or
scas
mov
lds
cmpsb
pop
pop
pop
cmp
fdivrl
lock
mov
jmp
sub
xchg
dec
and
mov
outsl
and
inc
mov
int
out
ljmp
movsb
jbe
mov
and
adc
dec
movsl
jcxz
mov
mov
into
xchg
scas
push
ror
adc
and
cmpsb
sahf
adc
int
dec
ss
push
ret
ljmp
movsl
ja
out
xchg
mov
cmp
in
mov
aas
or
mov
add
cmc
sbb
and
cmpsl
xchg
divl
loope
add
sbb
in
add
cmp
xchg
aad
into
jo
xchg
inc
nop
push
orl
mov
in
or
mov
in
jle
xchg
push
or
adc
out
clc
inc
mov
or
lods
xchg
out
sub
lahf
stc
inc
mov
sub
stc
push
fwait
xor
in
sbb
jns
inc
roll
pushf
dec
scas
nop
pop
pop
mov
orb
dec
cmp
in
mov
lds
out
pop
pop
mov
aas
repz
mov
bound
out
sub
in
dec
iret
rorb
cmp
and
or
adc
arpl
pusha
mov
out
sub
xchg
movsb
pop
outsl
cwtl
scas
out
cltd
lds
jb
enter
test
andb
in
js
xchg
lret
push
and
sub
xor
repnz
cmp
sub
pushl
cwtl
sub
loop
sub
inc
mov
xchg
out
mov
fdivs
ss
pop
int
insb
js
mov
dec
jno
pop
jg
es
jno
aaa
pop
mov
dec
and
fstp
sbb
js
lret
scas
push
inc
jns
mov
lahf
mov
and
jmp
dec
push
in
bound
fisubrs
xor
jb
and
leave
aam
sub
cmp
pop
xchg
clc
enter
jae
push
aas
scas
out
out
js
dec
sub
push
rcr
test
dec
mov
add
mov
les
dec
dec
loope
dec
fdivl
push
pop
jb
fldcw
push
push
rcl
stos
lock
jb
loopne
jno,pn
ljmp
jno
dec
sub
fidivs
mov
push
mov
sbb
pop
lods
pop
insl
lods
sti
jae
xchg
or
bound
aad
or
xchg
fwait
mov
push
xor
rcl
addr16
std
mov
test
lds
je
aas
popa
and
addl
ret
lcall
pop
inc
outsl
mov
fists
addb
jne
pop
in
daa
test
pushf
lds
ja
in
sub
jbe
push
and
mov
push
mov
push
or
pop
mov
lea
add
addr16
fidivrs
mov
push
push
cmp
rolb
xor
pushf
mov
nop
aam
adc
xchg
push
je
or
jo
icebp
add
mov
imul
data16
jp
std
dec
xor
jnp
xchg
adcb
xor
or
popa
add
mov
mov
push
jb
jecxz
iret
or
and
sub
scas
mov
and
dec
xchg
repnz
pop
and
pop
inc
inc
rorl
dec
push
cmp
loope
push
push
mov
mov
jl
str
ret
std
sarl
scas
cltd
xchg
add
jp
cmp
fwait
adc
fwait
mov
add
mov
lahf
sarl
jae
add
add
lods
outsl
jp
sub
cmpsl
cmc
push
sub
xchg
jmp
and
jg
xor
lods
and
icebp
fldl
add
inc
arpl
lds
fnstsw
sub
add
loopne
mov
mov
cltd
cmp
push
push
shlb
jecxz
xchg
int3
inc
icebp
test
stos
fsubs
cmpsb
ljmp
push
ljmp
outsb
mov
jecxz
dec
inc
mov
sbb
jne
pinsrw
add
push
mov
or
testl
mov
or
outsl
out
inc
clc
dec
xor
adc
ret
std
push
ljmp
add
cmp
mov
aam
jbe
lods
mov
mov
movsb
mov
cmp
les
push
lds
movsb
mov
scas
loopne
push
movsl
and
cmpsl
push
add
push
xchg
shld
or
outsl
sub
dec
pop
outsl
cmp
dec
movsl
in
mov
repnz
sbb
int
mov
adc
jae
push
loope
mov
cmpl
repz
mov
repz
out
test
and
data16
lock
nop
sti
out
xchg
push
mov
inc
nop
hlt
nop
adc
push
cmp
test
fs
jmp
arpl
fists
les
sub
jb
dec
imul
std
aad
icebp
in
bound
sub
std
lret
repz
loope
sti
fsubrp
gs
sbb
and
sti
mov
adc
lcall
cs
or
inc
ja
addb
cmp
add
adc
inc
int3
cmp
lret
ljmp
sub
adc
jo
out
mov
push
push
and
or
xor
orb
add
scas
add
sub
push
mov
das
rcrb
cmpb
loope
and
aad
clc
adc
adc
and
loopne
and
sub
inc
mov
test
dec
or
insl
mov
iret
test
pop
pop
arpl
fs
and
and
sti
mov
sub
xchg
or
pop
pop
test
out
xchg
push
add
mov
mov
mov
lds
sub
jbe
xor
xchg
dec
cwtl
daa
sbb
mov
jno
mov
ret
out
mov
add
test
push
jo
push
cmpsb
addr16
mov
dec
addb
pushf
mov
fcompl
lcall
ret
or
and
pop
ret
pop
jo
lret
leave
cmp
fnstenv
sbb
pop
jae
sub
mov
mov
js
jne
outsb
xchg
fwait
mov
mov
in
lds
out
jne
incb
imul
xor
mov
cmp
push
scas
test
mov
icebp
xchg
ficoml
loopne
jmp
repnz
fs
lret
in
jl
jne
aaa
out
pop
mov
dec
dec
insb
shl
adc
jae
loopne
inc
cmp
stos
mov
out
leave
xchg
xchg
sahf
mov
repnz
inc
cs
fstps
lahf
dec
xchg
pxor
aaa
sbb
pop
jo
mov
inc
ljmp
lret
xlat
dec
adc
xor
stos
icebp
iret
sub
sub
or
or
pop
xor
rep
dec
faddl
and
cmp
jns
fidivrs
dec
mov
add
mov
pusha
fwait
or
mov
lock
and
ret
std
loopne
std
or
mov
adc
add
inc
adcb
test
fnsave
loope
pushf
repz
rcpps
andb
mov
insb
insb
pop
frstor
and
push
sarl
dec
inc
jmp
dec
pop
in
repnz
shll
enter
pop
addr16
pop
adc
pop
jmp
in
mov
cmp
xchg
int
cmp
fisttpl
xchg
fs
xchg
in
jmp
stos
mov
xor
inc
sub
sbb
test
shlb
fiaddl
ret
pop
push
mov
in
lcall
arpl
push
dec
out
frstor
pusha
push
shr
mov
sbb
pop
jne
sbb
call
shrl
xlat
mov
leave
xchg
mov
test
movsl
xchg
shl
jp
bound
cmc
scas
icebp
sub
add
cli
in
outsl
popa
mov
cmp
xor
ret
movsl
pop
mov
xor
add
mov
mov
xchg
in
in
aas
pusha
test
lret
xlat
arpl
dec
inc
insb
out
movsl
mov
push
pop
push
imul
xor
cmpl
dec
arpl
scas
movsl
insb
je
aas
pusha
xchg
int
movsb
std
push
dec
cwtl
lcall
jbe
psubsw
cmpsl
add
js
add
xchg
mov
pop
movsl
ficoml
dec
scas
sub
out
je
or
inc
ss
jns
rol
daa
ljmp
pop
sti
inc
pop
fdivs
js
das
push
add
call
jmp
add
jns
sbb
xlat
inc
pop
into
addr16
and
inc
inc
and
scas
jle
les
ljmp
nop
adc
push
cmp
sub
lods
inc
in
and
cmp
daa
adc
out
aad
or
leave
sti
jnp
pop
xor
add
sub
rorb
or
jae
jle
add
in
imull
or
cmp
pop
dec
out
xchg
loope
daa
rcrb
bound
mov
in
or
rcll
ret
jge
loopne
cmp
xor
mov
in
mov
xchg
pop
and
xchg
lahf
test
add
fcoms
icebp
shrb
movsb
stc
xor
jmp
insb
out
pop
pop
sti
add
lock
int3
popa
mov
clc
and
xchg
jnp
in
data16
shll
repz
rdpmc
add
outsl
jge
mov
mov
sub
scas
and
fimull
movsl
mov
rorl
enter
fidivrs
or
out
andl
stos
bnd
jge
stc
lahf
outsb
mov
sbb
out
repnz
inc
cmpsb
push
push
adc
xchg
push
lock
cs
cmp
sbb
add
xlat
mov
stos
sub
loop
jp
and
push
call
stos
add
stos
mov
inc
and
aam
mov
and
pushl
mov
mov
xor
sar
rolb
outsl
ret
xchg
inc
fdivr
push
mov
in
and
ss
adc
mov
scas
daa
inc
sbb
data16
loop
call
test
leave
jp
push
lods
cs
clc
mov
mov
dec
shrl
mov
inc
mov
cmpb
jge
pop
inc
in
and
adc
loopne
and
or
divl
aas
and
movsl
jle
add
test
out
mov
pop
inc
test
xchg
daa
dec
mov
inc
fcomip
subl
pop
outsl
mov
mov
movsl
ds
add
mov
jecxz
icebp
mov
ror
xor
data16
cmc
inc
andl
leave
out
ret
lds
inc
mov
xlat
gs
or
gs
jecxz
push
int3
cwtl
mov
adc
in
pop
cmpb
mov
jl
xor
fisubrs
pop
in
push
mov
dec
call
in
icebp
push
xchg
mov
lret
cmp
mov
test
push
ss
lods
sub
mov
lret
testl
sar
in
test
dec
push
mov
jb
in
mov
add
xchg
dec
lret
mov
ret
in
jbe
divl
mov
ljmp
xlat
pop
inc
push
movsl
xchg
stc
xchg
xlat
push
jle
shlb
dec
jecxz
packsswb
jge
sbb
adc
andb
test
pusha
adc
out
rcll
sbb
ret
cmpsb
idivl
pusha
adc
roll
mov
int3
inc
push
xor
xlat
ljmp
pop
cmpsl
popa
add
dec
mov
les
lret
mov
inc
push
inc
int3
pop
mov
fldl
push
call
fildll
adc
mov
push
xorl
sbb
cltd
pop
xchg
out
cmp
ror
rorl
dec
cmp
ja
pop
pop
outsb
jno
ret
mov
into
out
push
mov
into
gs
adcb
push
mov
shlb
add
sub
ret
lock
mov
ss
aas
mov
mov
push
dec
inc
push
in
arpl
dec
lea
insb
dec
cmp
jecxz
loope
test
xor
cmp
sbb
dec
jl
in
pusha
adc
push
xchg
xor
vpsrad
mov
in
dec
sbb
shlb
adc
adc
rcr
sti
outsb
das
sbb
cltd
xchg
cmc
xor
push
fsubrl
inc
hlt
jno
addr16
je
pop
sahf
fistps
push
jno
or
and
stc
push
addl
scas
cmp
dec
sub
rcrb
dec
dec
mov
xor
cmp
mov
xchg
mov
loope
movsb
pop
and
aad
cmc
or
out
ja
mov
shl
out
out
jno
adc
push
xor
mov
fsubrs
loop
adc
cmp
mov
aam
ljmp
rorl
lahf
jmp
xchg
sbb
and
iret
arpl
movsl
lcall
sahf
pop
addb
or
mov
cmp
jno
sbb
movsb
mov
ret
icebp
dec
cmp
jns
inc
repnz
fisttpll
pop
mov
inc
xchg
cmp
scas
inc
inc
repz
cmp
movnti
mov
movsl
jbe
shr
les
ret
mov
lret
or
out
mov
mov
in
xchg
stc
es
inc
xor
pop
mov
dec
inc
adc
add
aam
into
ficoms
test
fisubrl
int3
mov
int3
lock
inc
xchg
and
push
out
mov
sbbb
aas
push
leave
outsl
pop
lods
jle
rorl
enter
in
dec
repnz
shrl
pop
pop
fwait
jns
sbb
pop
stos
xor
or
mov
cmc
out
jne
sub
dec
mov
jns
enter
icebp
arpl
mov
lahf
repnz
lods
call
hlt
paddsb
jle
notl
or
xor
in
jl
out
aam
push
outsl
inc
dec
icebp
and
rcl
mov
mov
out
test
clc
out
lds
add
mov
lcall
mov
mov
jnp
movsl
jno
push
inc
sbb
in
mov
and
jmp
xchg
adcl
lock
push
fldcw
pushf
test
sbb
lods
pop
ds
push
or
xchg
mov
mov
insb
leave
add
and
mov
pop
jns
daa
setae
add
aaa
mov
adcl
test
inc
push
jne
in
jns
leave
loop
cmp
mov
jmp
shrl
xchg
xor
pop
lods
rcrl
nop
xchg
andl
jp
jg
dec
push
pop
sbb
insb
pushf
data16
sbb
cld
loope
cmpsb
notl
shll
fcoml
insb
push
mov
or
lods
movl
pop
hlt
mov
cld
adc
scas
or
mov
ret
in
mov
leave
sti
and
dec
mov
rorb
lods
mov
jno
add
loop
subb
addl
addr16
scas
inc
in
cmpsl
add
mov
and
jae
push
call
std
mov
mov
xchg
movsl
addl
call
adc
test
out
int
scas
sub
push
or
in
fimuls
insb
cli
jl
in
xor
sub
push
xor
cltd
pop
adc
pop
mov
inc
jge,pt
out
push
ds
mov
inc
in
jecxz
test
sti
sbb
pushf
xor
pop
out
sub
out
inc
pop
or
sahf
cli
pop
outsl
out
and
push
outsl
and
cmc
sbb
xchg
or
cmpsb
jg
and
call
mov
cwtl
call
loope
pusha
mov
xchg
test
or
dec
lods
cmp
cmp
pop
push
iret
lds
mov
hlt
pop
fildl
push
cli
sahf
adc
cld
jmp
adc
sbb
in
cmp
sahf
in
fbstp
jp
pop
jmp
inc
aad
jbe
jo
sub
adc
and
inc
insb
shl
fnstenv
adc
fidivs
xor
orl
int
lods
iret
lret
push
mov
addr16
dec
fdivrp
lret
add
mov
mov
or
nop
mov
push
aas
dec
dec
dec
mov
fwait
xchg
add
xchg
lea
out
mov
out
push
jo
lret
and
int3
and
sbb
test
jle
pop
mov
xchg
fucomi
cmp
into
aas
mov
dec
ret
out
jecxz
loope
xchg
loope
subl
enter
ficoms
mov
aaa
out
popa
jge
xchg
imul
es
fs
popl
mov
movsl
cmpb
addr16
pushl
jb
gs
bound
push
lods
jne
adc
add
pop
jecxz
mov
mov
outsl
repnz
or
or
inc
xchg
lret
or
sbb
inc
jb
sub
in
cmc
push
dec
and
hlt
mov
xor
bound
and
jae
outsb
mov
xlat
cmpsl
addl
and
sarl
mov
shl
mov
cld
insb
clc
sti
or
fiaddl
mov
lahf
mov
aaa
adc
out
lret
pop
lock
push
sub
xor
test
das
pushf
decb
nop
bound
fdiv
sbb
cmp
dec
adc
inc
ficompl
ja
adc
push
lcall
aaa
xlat
xlat
dec
adc
icebp
push
loop
sub
cmp
movsl
xor
xor
xor
cmp
ljmp
or
inc
mov
cmpsl
cmp
cwtl
push
push
mov
clc
mov
stos
and
in
mov
pop
stos
mov
sti
add
hlt
outsb
jg
popa
das
lock
insb
cmp
sub
xchg
push
es
shll
sub
sbb
cmp
scas
add
add
outsl
rcrb
adc
int
push
icebp
in
shlb
and
movsl
mov
in
outsl
cltd
cmp
mov
adc
mov
jnp
jp
xchg
mov
add
sub
fxch
leave
ljmp
xchg
daa
lahf
insb
inc
xlat
test
fnstenv
add
fistps
push
aas
xor
dec
ljmp
add
push
cld
add
mov
cltd
dec
sub
insl
lea
sub
mov
fs
adc
and
or
xor
test
xchg
aad
add
xor
addr16
dec
stos
jno
pop
pushf
mov
xor
subb
dec
stc
mov
add
ficoms
cmp
or
lea
fnstenv
cmp
push
mov
lcall
mov
fdivl
loope
jns
xchg
jmp
data16
jmp
insl
movsb
cmpsb
std
cmp
imul
pop
pop
fs
dec
adc
fisttps
and
cmp
jns
ret
mov
or
mov
add
jle
sub
jge
test
les
test
mov
std
imul
xchg
lds
and
ss
int3
inc
fidivs
js
insl
mov
cltd
fmuls
add
push
fwait
inc
std
movsb
into
or
aas
pop
jle
adc
cmp
test
jg
cmp
maskmovq
divl
sub
pop
rcll
xchg
lea
fstps
mov
xchg
lea
mov
cs
jo
loop
jne
mov
or
call
out
mov
push
fwait
mull
dec
dec
xchg
push
mov
stos
fdivr
push
iret
stos
sbbl
dec
int
test
lcall
cli
mov
in
xlat
jbe
dec
dec
outsl
mov
inc
into
or
jge
int
fistpl
inc
jl
pusha
dec
sbb
mov
sbb
and
cmc
or
lahf
sub
movl
xorb
push
inc
add
fidivs
inc
xor
mov
cwtl
fs
xor
imul
adc
lahf
adcb
adcb
js
nop
icebp
idiv
test
mov
pop
push
mov
es
mov
jae
jae
add
int3
nop
sub
mov
mov
mov
jae
jp
stos
lret
arpl
shlb
fcmovu
and
out
and
adc
jg
push
imulb
es
sub
adc
jns
fmull
ds
jl
les
jmp
int
testl
lcall
inc
cs
rol
and
push
pop
aaa
xchg
les
shl
test
mov
mov
xchg
popa
dec
subb
sub
andl
mov
lods
jp
push
dec
sbb
mov
push
pop
mov
add
sub
mov
xchg
loopne
sbb
push
sbb
aas
imul
aaa
fbstp
aam
pusha
enter
inc
ss
adc
out
push
mov
lods
push
jno
testl
push
test
into
repnz
loopne
lds
jl
mov
shll
sbb
jo
cld
sub
push
cmp
jns
outsl
lock
push
leave
xlat
sub
dec
jnp
mov
pop
push
es
mov
addr16
repnz
xchg
add
sub
ds
lret
fs
pop
mov
test
mov
add
inc
xor
sbb
lock
sti
fcomps
xor
aam
leave
xor
cmp
xor
loop
shl
mov
add
enter
into
fnsave
jge
imul
sbb
repz
xchg
aad
incl
adc
xchg
xchg
std
adc
inc
sub
add
jmp
xchg
insl
push
icebp
in
cmpsb
mov
int
or
mov
adc
cwtl
mov
xchg
inc
sbb
ja
incb
push
pop
lock
push
ret
xor
xor
les
pop
popf
out
lods
push
xor
das
outsl
push
and
sbb
rclb
pop
bound
mov
mov
roll
mov
rolb
sbb
xor
inc
adc
xchg
or
mov
add
mov
roll
out
data16
inc
cs
xor
xchg
lods
sub
push
ljmp
cld
jbe
jg
push
xchg
ja
fists
sbb
jnp
insb
push
mul
mov
dec
shll
push
mov
lcall
push
xor
adc
das
adcl
jbe
in
xchg
adc
enter
test
mov
jp
fstps
in
mov
lods
fidivrs
or
arpl
xchg
push
jg
fistps
xor
push
add
mov
fsubl
sub
je
mov
sti
test
mov
pop
mov
jae
xorl
idiv
rcr
pop
mov
mov
cld
movl
cmp
and
rcll
dec
sbb
dec
xchg
sub
test
or
repnz
mov
push
sbbl
push
pop
test
mov
cmpsl
fcomip
psubusb
push
adc
mov
mov
xor
sub
fadds
xchg
dec
dec
sahf
xchg
xchg
cmc
loopne
cwtl
mov
lcall
cmpsb
adc
push
scas
mov
mov
je
std
jb
mov
fstpt
rcrl
jg
lahf
dec
sbb
aad
movsl
fisubrs
cmp
loope
xchg
arpl
push
xchg
push
jle
daa
jge
inc
outsb
inc
mov
lcall
xchg
aad
xchg
jp
mov
pop
push
dec
lock
jno
add
fsubp
sbb
push
idivl
inc
and
sti
das
jbe
aam
fnstenv
insb
inc
dec
fwait
loope
xor
ds
fidivs
dec
adc
in
cmc
pop
jp
push
fstl
fs
shrb
add
out
jno
ret
ljmp
sbb
jecxz
xchg
in
and
sub
mov
iret
jmp
mov
xlat
and
or
inc
inc
decb
fidivs
ljmp
data16
shrb
mov
fcmove
sub
push
outsl
leave
rclb
xor
push
gs
sti
ret
or
int3
leave
js
bound
imull
cmp
jnp
adc
push
dec
lcall
inc
ds
ja
fstps
mov
jo
sti
test
in
imul
push
or
jle
xchg
adc
js
and
aam
or
int3
das
int3
cwtl
add
mov
mov
adc
leave
mov
popf
sbb
out
push
add
ljmp
pop
mov
push
std
cmp
dec
push
iret
or
add
push
int3
adc
call
mov
dec
jge
divb
mov
push
adc
jmp
push
ss
mov
testb
mov
add
loopne
iret
data16
push
in
and
and
sbb
mov
jb
jns
mov
loope
sbb
push
ja,pn
int
pop
aaa
into
es
sub
adcl
jnp
xchg
mov
rorb
adc
dec
or
rorl
lds
out
add
or
dec
mov
cmp
jb
sub
add
pop
imul
mov
rorl
mov
test
mov
xchg
repnz
pop
cwtl
cmpsl
push
scas
jge
outsb
outsl
sub
inc
sub
enter
in
or
in
lds
add
mov
pop
inc
scas
push
call
rcr
repz
stos
inc
push
cs
dec
mov
jl
sbb
cltd
sbb
push
add
loopne
pop
jl
stos
enter
mov
push
cmpsb
lcall
aaa
out
adc
stos
lret
aad
clc
xchg
outsl
popa
push
jl
sarl
jb
das
xor
cwtl
rorl
shlb
adc
dec
cmp
ja
dec
pop
ja
les
xor
push
push
jb
out
and
sbb
mov
and
leave
popf
pop
mov
movsb
sbb
popa
stc
mov
adc
in
in
mov
mov
sub
lret
out
cmp
imul
xchg
test
int
std
lods
fiaddl
inc
mov
mov
aas
lods
xchg
mov
adc
jmp
int3
mov
jecxz
stos
iret
xchg
popa
dec
or
jbe
loop
fwait
lds
sub
scas
xor
jmp
adc
cltd
pop
inc
dec
and
iret
add
inc
add
test
and
fcoml
aaa
stos
jl
jns
xlat
jno
stc
mov
arpl
sbb
pusha
gs
fcoms
adc
push
fmul
add
aas
xor
push
xchg
mov
out
dec
jecxz
xor
ret
xor
mov
cwtl
add
aaa
std
notb
adc
or
and
mov
and
mov
xchg
pop
add
xor
loopne
add
pop
out
jmp
aaa
test
les
jnp
cld
add
adc
decl
jb
sub
dec
arpl
jo
les
xor
jb
fcmovnb
mov
lret
jo
mov
sbbb
lds
jb
jmp
xchg
and
jl
and
daa
repnz
ja
and
pop
psllq
sbb
inc
mov
push
subl
or
movsl
cmpsl
inc
aam
ja
fidivs
fiaddl
and
sub
fstpl
cli
fldl
shll
cmp
jb
repz
test
sub
lret
push
lcall
push
sbb
cmp
in
and
mov
pop
lret
popa
xor
jno
jnp
add
dec
push
adc
push
sbb
pop
or
fdivrs
jmp
pop
push
pop
mov
xor
xchg
add
lods
pop
adc
ficoml
inc
scas
xor
pop
lret
adc
sub
jo
pop
ljmp
dec
mov
rep
xor
dec
ret
sbb
mov
jp
inc
mov
add
std
scas
pop
repz
out
jnp
or
xor
jne
in
stos
xchg
divl
test
loop
lods
bound
inc
cmpsl
push
loope
int3
outsb
xor
movsb
arpl
push
cmp
pop
add
xchg
cmpl
adc
mov
pop
leave
mov
rorl
enter
out
mov
loop
mov
into
ret
out
jne
mov
js
mov
xor
jmp
bound
leave
addr16
cmp
lcall
int3
loopne
pop
xor
sbb
push
push
inc
out
sub
fdivl
mov
lods
lcall
imulb
cld
xchg
lods
addr16
add
mull
xor
adc
push
add
cltd
jg
fnstenv
insl
pop
imul
pusha
inc
xor
aad
sti
xchg
sbb
push
rcrl
and
jno
divb
mov
fs
inc
xchg
hlt
cmp
mov
negb
inc
inc
movsb
xchg
xor
out
jle
mov
lret
xor
sti
pop
fs
cmc
int
cli
add
arpl
daa
daa
pop
jmp
push
lods
insb
xor
xchg
adc
push
jno
mov
sbb
into
iret
push
insl
jb
or
and
xor
inc
cmp
mov
mov
jg
imul
sub
mov
das
pop
xchg
sbbl
test
cmpsb
jecxz
xchg
incl
filds
outsb
dec
sub
hlt
pop
jno
sub
out
outsl
sub
cmpsb
cmp
fadds
int3
push
xor
ljmp
mov
lret
fmul
pop
inc
pop
ds
push
cld
mov
mov
add
mov
xchg
adc
xor
daa
in
out
add
pop
jl
das
repnz
mov
jl
xchg
mov
mov
hlt
mov
sti
shl
lock
repz
js
mov
add
sub
sub
jmp
daa
pop
mov
ret
cwtl
test
or
out
fs
getsec
sub
loope
scas
push
sbb
dec
lock
cli
mov
sbb
fsubrs
jns
jmp
pop
mov
add
repnz
fsubrp
in
icebp
repnz
sbb
adc
into
mov
xor
fcompl
xlat
int
dec
aas
sub
popf
push
rorb
out
ss
sbb
cmp
test
jge
gs
push
gs
aam
cmp
in
mov
push
add
imul
cmpsb
mov
xor
rorb
inc
fisubrl
or
xor
idivl
lods
fldl
mov
shlb
jecxz
loop
xchg
imul
ljmp
lds
lock
xor
mov
je
es
and
adc
notb
aam
jno
fistps
imul
jp
fidivs
cs
sub
inc
cmp
lahf
or
or
hlt
jae
mov
inc
sarb
mov
mov
repz
in
sti
lock
sub
xchg
add
mov
ja
loopne
sub
sbb
insb
popa
inc
cld
mov
cmp
and
adc
mov
lods
daa
mov
jb
lea
jecxz
das
xor
xchg
insl
popa
out
lock
filds
xlat
mov
ret
fwait
sbb
jp
movsb
push
mov
mov
cmp
push
aad
dec
loop
in
inc
ret
mov
sbb
fwait
sar
inc
test
stos
push
sti
cmp
push
sar
clc
addr16
push
cmp
sub
loop
sub
mov
inc
loope,pt
inc
mov
mov
bound
into
rolb
inc
es
mov
fnstsw
mov
outsb
out
push
pop
ja
sbb
inc
adc
hlt
dec
fdivs
leave
mull
shll
sub
push
cmpsl
outsb
icebp
jle
sub
out
push
inc
iret
sbbb
add
jg
leave
mov
cmc
call
addr16
mov
std
jmp
dec
clc
and
scas
cmp
fisttps
jno
nop
out
in
pop
push
push
cmpsl
adc
in
jl
xchg
addr16
les
sub
aaa
or
pop
enter
or
in
add
sub
cmp
test
jno
cmpsl
push
xlat
in
jnp
xor
sbb
push
into
jae
insl
dec
pop
aaa
mov
in
gs
leave
inc
sbb
mov
inc
mov
dec
lds
xor
mov
add
sbb
push
sub
test
push
and
jae
ds
int
es
sub
jp
js
subb
fnstcw
mov
push
and
push
outsl
adc
subb
ljmp
mov
pop
sub
and
test
cmp
loope
mov
jl
in
pop
lret
call
xchg
popf
int
inc
fs
scas
inc
xchg
in
push
mov
icebp
ljmp
test
sbb
ret
pop
push
and
or
cli
mov
dec
int3
les
lock
pop
add
aas
bnd
and
mov
imul
daa
into
push
insb
push
pushf
clc
add
push
nop
dec
cmpsb
stos
adc
jp
mov
aam
mov
dec
mov
fists
sub
js
into
pop
inc
out
sub
adc
xchg
daa
inc
daa
cmpsl
lods
jl
inc
ficoms
lcall
je
stc
cmp
mov
in
dec
jbe
sub
sub
xor
inc
sbb
sbb
pop
sub
adc
jae
jl
dec
xchg
sar
sub
daa
andl
mov
imul
xlat
popaw
pop
daa
xlat
or
in
inc
jge
add
daa
dec
data16
clc
jp
mov
pop
fs
pop
sub
mov
es
mov
pop
sub
shl
push
mov
js
push
int3
mov
iret
xor
push
or
ud1
or
inc
pop
ss
jmp
lcall
xchg
leave
mov
and
mov
movl
testl
jns
jno
pop
add
cwtl
sysret
or
lock
and
and
sub
mov
jno
cs
xchg
sbb
movsb
push
rcr
adc
push
jle
sbb
pop
mov
sti
shlb
out
popf
out
loop
lea
add
jno
in
jnp
aas
add
pusha
dec
mov
subl
add
adc
scas
ret
lcall
insl
adc
dec
mov
pop
gs
ror
enter
icebp
lods
sbb
mov
jne
rdmsr
push
fiadds
test
test
outsb
rol
int3
mov
ja
out
mov
mov
add
lock
mov
cmpsb
sub
js
repnz
dec
jne
and
loopne
sbb
inc
insb
dec
dec
ja
dec
push
fwait
iret
push
xor
je
adc
rolb
xchg
out
lahf
jle
jmp
insl
mov
jl
dec
jnp
sti
fwait
mov
jp
lock
mov
popf
jns
mov
lock
outsb
adc
movsl
xchg
ljmp
rclb
mov
fdivs
dec
adc
fidivrl
pop
cmpsl
dec
mov
jno
out
call
and
imul
xchg
adc
sbb
call
outsl
pushf
fisttpl
lods
popa
mov
lcall
rclb
and
xor
pusha
stos
dec
adc
subb
and
jmp
adc
xchg
fldcw
jbe
into
xor
nop
push
aaa
pop
pop
sub
stc
inc
xlat
pop
xorl
add
ret
inc
mov
shrl
mov
sbb
sub
add
enter
fwait
icebp
mov
rcrl
and
adc
mov
mov
dec
and
adc
push
push
xchg
ret
cmp
and
xchg
mov
mov
or
aad
xor
jge
push
jne
mov
mov
and
dec
shll
inc
inc
mov
leave
push
les
ret
adc
adc
imulb
and
sbb
out
ficomps
loopne
xlat
inc
fwait
lock
out
cmp
mov
int3
adc
ljmp
inc
fistps
push
dec
dec
pusha
mov
or
ret
sub
inc
pop
pop
jmp
add
inc
sbb
aad
cmp
push
in
faddp
xchg
or
repz
inc
in
pop
sub
hlt
jbe
and
repz
arpl
and
and
inc
push
jg
xor
cld
xor
dec
dec
adc
jmp
cmp
loope
mov
dec
mov
ljmp
jge
add
jge
pusha
out
dec
push
popf
push
add
dec
mov
hlt
test
inc
jb
mov
push
xor
fistps
push
mov
loop
icebp
test
enter
comiss
jnp
aas
and
in
push
sbb
decl
leave
jecxz
mov
movsb
jo
lcall
mov
jbe
mov
shrl
aas
movsb
push
mov
inc
xor
jnp
cmpsl
adc
add
rcl
rclb
in
xchg
pusha
daa
push
insb
and
inc
imul
xor
mov
mov
push
sub
inc
fs
lret
subl
es
daa
sahf
out
mov
jne
add
lahf
mov
pop
dec
xchg
out
or
lock
ljmp
leave
xor
dec
adc
sub
xchg
lahf
ljmp
xchg
js
add
imul
cmp
or
push
ret
cli
ret
pop
loop
sub
scas
push
sub
xchg
pop
adc
cmc
cltd
pop
fs
jo
adc
cld
dec
fs
shll
xchg
repnz
lret
push
cwtl
adc
push
gs
inc
adc
iret
pop
movsl
or
es
xor
mov
mov
shrl
push
inc
popa
cmp
push
fcomp
xor
jb
sub
or
push
loop
fidivrl
and
jnp
je
cmpsb
scas
dec
inc
inc
push
scas
sbb
adc
mov
add
and
in
push
lock
sub
sub
cmpsl
mov
pop
cmp
rcr
push
out
hlt
pop
iret
adc
push
and
or
jno
out
adc
out
xor
inc
sub
mov
repnz
mov
out
dec
jnp
push
push
cmp
push
shlb
jp
aaa
insb
push
xor
fst
sbb
das
fistpl
faddp
add
xor
lods
in
jecxz
push
jmp
push
cmc
cmp
mov
and
jns
xor
pop
inc
add
ljmp
sub
cwtl
xor
fmull
sbb
push
sbb
cmp
popf
imul
adcl
in
or
test
mov
fcoms
in
dec
les
repz
test
and
scas
sub
or
xchg
int
cmp
pop
dec
test
bound
cs
enter
xor
pushf
push
inc
mov
pushf
repz
rcrl
shlb
jb
dec
mov
xchg
lods
mov
inc
sbb
cmp
shlb
jae
inc
fidivrs
xor
sub
push
dec
ficoms
sbb
pop
dec
roll
jo
ret
push
adc
shlb
cmp
push
add
adc
pop
and
jbe
sbbl
pop
mov
xchg
cwtl
outsl
ja
popf
adc
jp
fnstcw
cmp
cli
or
bound
std
ljmp
jge
inc
push
lock
ret
rol
jp
xor
popa
jp
cmpsb
roll
in
mov
mov
ror
ja
pop
jno
or
dec
cmp
mov
mov
mov
xchg
ficomps
divl
push
adc
xlat
jns
jge
jmp
fimuls
mov
aas
pop
pusha
clc
mov
xchg
mov
into
or
cs
inc
push
leave
adc
das
popa
sub
in
cli
mov
mov
jmp
mov
or
cwtl
add
les
je
mov
dec
add
jg
movsl
sub
testl
aaa
cli
call
mov
in
cmp
lds
inc
and
into
dec
jnp
aad
xchg
push
adc
pop
mov
outsl
std
fimuls
mov
jle
xor
inc
mov
pushf
les
sbb
pop
filds
repnz
xchg
js
sbb
dec
jmp
dec
adc
ret
cmp
mov
fmull
xchg
shrl
jns
sub
imul
jbe
jae
imul
imul
mov
loope
mov
push
fucomi
jns
jle
and
imul
lcall
xchg
sar
fs
cmp
add
pop
iret
loopne
fs
subl
adc
sub
xor
jmp
and
addr16
mov
inc
mov
enter
adcb
cmpsl
in
sub
rcrb
jge
add
decl
ja
xor
into
and
cmp
loop
mov
fdivl
int3
out
mov
sub
dec
mov
js
sub
lahf
daa
mov
lret
out
xchg
out
arpl
outsl
pop
push
mov
mov
ljmp
sti
push
jno
mov
notl
mov
popa
mov
dec
add
insl
xchg
mov
cmp
xchg
jae
adc
xchg
mov
and
lcall
or
adc
push
adc
sbb
cmpsl
jmp
sbb
mov
mov
cmp
xor
mov
add
mov
dec
out
loop
and
xchg
imul
pop
out
mov
movsl
lret
call
inc
pop
out
cmpsb
pop
inc
ficomps
dec
cwtl
xlat
jae
or
push
sub
mov
test
dec
add
xchg
cwtl
fmull
jmp
mov
outsb
jp
push
push
xor
mov
xchg
imul
mov
das
push
jo
hlt
sub
shll
xchg
nop
test
xlat
shr
fidivs
outsl
hlt
loope
dec
in
or
add
fnstcw
jb
rol
push
xchg
leave
dec
stos
fs
ret
cltd
mov
and
aad
jge
push
movsl
fists
lods
in
xchg
fldl
xor
gs
or
push
mov
call
es
sub
sbb
popf
jmp
mov
fists
sbbb
inc
xor
and
aad
push
repnz
mov
je
pushl
verr
in
cmp
mov
insb
or
xchg
loope
rorl
sbb
pop
ret
lcall
xchg
sub
insl
into
xor
xchg
cmp
fisubl
inc
inc
les
pusha
pushf
push
test
lret
add
or
mov
sarb
xchg
push
aaa
adc
add
popf
jbe
in
cmc
popf
pop
das
sbb
push
loope
mov
xor
or
loop
push
dec
mov
psubd
inc
loopne
cmp
rcr
xchg
mov
daa
into
imul
add
nop
out
ds
gs
or
sub
push
push
push
push
push
enter
dec
jp
int3
cli
loope
sbb
shl
push
icebp
in
repz
lods
mov
push
lock
xor
aam
pop
sub
mov
fstpl
inc
outsb
pushf
xchg
xor
idivl
push
and
rol
mov
or
sub
pop
lea
add
jnp
int
mov
sti
cmp
cld
push
lods
test
enter
popf
fucomi
outsl
jns
sbb
test
inc
and
or
stos
mov
insl
aas
sub
clc
sub
in
mov
dec
iret
movsb
test
xchg
jge
xchg
outsl
jl
or
bound
imul
in
lahf
out
imul
je
loopne
jl
or
std
dec
push
or
fidivs
xlat
jbe
push
sub
shlb
mov
pop
popa
sub
and
mov
aaa
andl
cltd
mov
sub
cmp
inc
pop
inc
fwait
mov
push
clc
push
mov
gs
pop
and
out
mov
cmpsb
lods
ds
pop
sbb
cmp
lock
sub
testb
stos
inc
push
iret
push
repz
mov
aas
int3
xchg
mov
js
inc
sub
sbb
cmp
les
gs
mov
xchg
xor
test
adc
or
push
xor
cmp
dec
add
test
xor
xchg
es
dec
popf
mov
imul
lods
xor
and
ss
icebp
jb
cli
orb
js
popf
jae
mov
outsl
scas
jns
subb
enter
jecxz
cmp
pop
mov
xor
push
lock
jo
jno
xchg
xchg
ficoml
mov
mov
es
test
jbe
sub
push
xor
repnz
mov
fstl
out
xchg
cmp
shl
jecxz
loope
scas
repz
add
mov
xor
jmp
jae
inc
mov
lock
push
dec
fbld
sub
repnz
pop
or
shrb
and
adc
add
ret
stos
sbb
popa
xor
inc
mov
fdivrs
add
sahf
cs
sahf
in
fildll
imul
scas
pop
mov
jmp
dec
pop
xchg
pop
mov
add
insl
xor
mov
sbb
icebp
jae
rcl
jl
dec
xchg
imul
icebp
or
pop
lods
fcomps
fists
sub
inc
call
lock
xor
pop
stos
es
fisttpl
mov
xchg
pop
outsb
fdivr
insb
mov
xlat
mov
das
mov
or
punpckhbw
sarl
dec
cmp
lahf
push
jle
lret
lahf
popa
jl
test
xor
call
iret
out
push
jns
sarl
push
movsl
mov
xor
leave
xchg
sidtl
es
or
aaa
ljmp
dec
scas
or
xchg
xchg
sahf
xchg
div
outsl
jge
add
aas
das
cs
push
pop
cld
inc
cmp
mov
add
cmpsb
mov
repz
adcl
test
outsb
jns
add
or
scas
mov
adcl
sbb
cmpsl
pop
outsb
aam
movsl
out
dec
mov
adc
xchg
insl
add
sbb
mov
stos
cmpsb
jg
jo
xchg
xchg
cmp
dec
adc
icebp
stos
arpl
push
jecxz
dec
mov
jge
loope
jecxz
lock
in
cli
add
lea
mov
jne
mov
mov
xor
jle
sbb
add
test
mov
or
shlb
fsub
push
into
xchg
or
out
out
mov
add
js
xchg
xchg
push
cmc
imul
aam
jl
sahf
ret
sbb
loope
push
int3
mov
cmc
fwait
sub
ds
rclb
cmp
ljmp
outsl
mov
adcb
ds
loop
jno
pop
adc
lea
sbb
lods
dec
andl
mov
test
addr16
movsb
dec
xchg
sub
das
hlt
in
fsubrl
sarl
sarb
into
daa
in
dec
mov
cmp
roll
jmp
add
mov
xor
out
dec
fwait
shrb
in
lret
add
dec
lahf
push
daa
jnp
xlat
and
nop
insl
jecxz
or
test
dec
ja
pusha
pop
test
ljmp
jns
ss
mov
push
xor
cmp
xchg
jne
pushf
add
test
jns
jg
mov
or
jp
mov
pop
sbb
pop
jo
adc
add
mov
das
lods
mov
out
push
pop
mov
negl
sub
adc
mov
mov
cmpb
repz
out
sarb
out
mov
adc
aam
movsl
xchg
mov
xlat
inc
and
stos
jg
mov
add
jg
and
cmp
xor
call
gs
jg
mov
dec
push
cmc
icebp
ror
nop
cmp
cmp
add
pusha
call
pop
inc
push
fmull
sub
dec
sarb
aam
mov
mov
mov
mov
inc
adc
mov
mov
cwtl
js
out
jb
int
inc
repz
cmp
dec
orb
and
test
outsl
icebp
bound
fdivrs
jmp
frstor
stos
jg
xchg
cmc
push
dec
lock
adc
scas
popa
movsl
stc
lret
mov
outsb
sub
sub
xor
pop
lret
out
xchg
mull
xor
xchg
adc
aas
inc
divps
mov
data16
test
sar
in
faddl
aam
pop
clc
adc
mov
lahf
test
in
addb
jbe
out
ret
mov
scas
mov
inc
pop
ret
mov
cmc
stc
jbe
in
dec
sbb
dec
lods
aaa
aaa
es
push
mov
dec
daa
iret
aaa
scas
lea
sbb
fiaddl
pop
mov
ret
jmp
andl
enter
dec
sbb
and
fwait
jb
or
rclb
out
bound
stos
adc
cmp
cld
pop
loop
lds
add
mov
clc
dec
clc
xor
jb
cmc
cmp
int
sbb
insl
mov
mov
ja
cmp
push
jnp
adc
jnp
pop
mov
or
test
movsl
mov
arpl
and
mov
pop
out
js
leave
test
cmp
mov
movsb
inc
sbb
int3
mov
in
jne
dec
andl
fsincos
sti
fistl
scas
mov
out
xor
mov
je
ffree
dec
ljmp
outsb
gs
push
into
or
inc
mov
xchg
lahf
sbb
fstpl
lcall
pushf
stos
inc
mov
shll
pop
or
idiv
arpl
lcall
pushl
adc
sti
lcall
jbe
xlat
mov
add
mov
xorb
add
jno
jbe
mov
add
pusha
adc
xor
push
lods
add
push
pop
stos
jmp
rol
add
xchg
fcmove
aad
cmp
pop
into
mov
xchg
ljmp
stos
xor
lock
xlat
mov
and
lahf
aaa
ds
arpl
sub
je
add
es
lahf
daa
mov
test
cmp
add
ss
and
stos
mov
dec
sti
jg
into
ds
xchg
setp
jp
es
in
out
sti
lret
lods
push
pusha
fisttpl
or
add
xor
addr16
imul
hlt
jns
andl
les
dec
sub
mov
mov
shlb
sbb
sbb
pop
hlt
adc
test
mov
push
inc
xor
daa
and
imul
add
ljmp
sbb
adc
popa
sbb
dec
and
xchg
sbb
adc
rcrl
pop
push
jge
xchg
shll
push
add
testl
pop
sti
stos
sahf
pusha
int3
or
pop
jno
daa
xor
nop
dec
imul
mov
cmpsl
sbb
sub
out
cmpsb
jae
sahf
sti
sarl
mov
es
es
add
clc
cmp
in
dec
ja
movsb
and
cwtl
mov
inc
or
cltd
icebp
adc
xor
cmp
mov
test
sub
outsl
mov
sub
mov
das
nop
xchg
aad
xchg
inc
pusha
jecxz
xchg
pop
data16
mov
inc
repz
jp
enter
test
insl
push
out
aam
aad
fcmove
xchg
dec
mov
cltd
add
cmpsb
adc
fisubrs
movsb
enter
scas
pop
movsb
push
call
mov
stc
or
insl
arpl
push
cmpsl
stc
outsb
icebp
loopne
and
sti
pop
pop
push
xchg
sub
sub
stos
or
cmp
push
cmp
jge
cmp
test
pop
incb
out
jnp
inc
rcll
cmp
sbb
xor
mov
fldenv
fisubl
xor
jnp
cwtl
int
out
lea
cmpsl
add
out
dec
inc
add
daa
push
ljmp
jno
clc
cmpb
fwait
xor
lds
pop
out
addr16
xchg
cmp
adc
add
adc
mov
xchg
hlt
data16
cmpsb
ds
incb
adcb
push
cmc
push
insb
mov
repnz
sub
mov
sub
lret
jecxz
mov
push
mov
mov
in
shlb
jmp
aad
mov
add
stos
aaa
sbb
and
pop
inc
pop
cmp
iret
int
lods
pop
jmp
stos
mov
push
ret
inc
dec
mov
push
out
cmp
mov
sahf
lods
xor
sbb
loope,pt
jecxz
push
and
add
cmp
aam
inc
or
xorb
stos
xor
mov
jb
push
pop
lret
jl
outsb
sbb
insl
outsb
out
mov
iret
and
aam
mov
test
push
fnstsw
inc
cltd
push
icebp
imul
push
xchg
mov
or
les
leave
mov
pop
jp
fidivrs
fucomi
sub
jne
xor
hlt
addl
imul
hlt
adc
pusha
faddl
outsl
lods
jne
aaa
icebp
into
divb
scas
mov
cmpsb
adc
mov
pinsrw
outsl
lea
pop
sbb
jae
fucom
add
mov
adc
or
shll
mov
mov
cmp
cmc
test
pop
lret
mov
ret
not
subl
push
jnp
ficompl
xchg
aaa
or
fnsave
mov
inc
and
add
xchg
fiadds
pop
shrb
idivl
mov
pop
inc
arpl
test
daa
or
pop
pop
js
out
push
pop
cli
ret
out
jge
xor
lahf
repnz
mov
dec
sbb
jbe
mov
xchg
pop
pmulhw
mov
cltd
add
outsb
xchg
fiaddl
adc
loop
mov
call
gs
inc
xchg
in
xlat
jno
xchg
sub
loope
adc
daa
sub
mov
sahf
loop
cmpsb
and
scas
dec
imul
stos
jb
sub
shl
fistl
out
sbb
test
cmp
dec
fcoml
loope
movb
std
xchg
gs
sbb
call
push
imul
loopne
adc
iret
mov
push
push
lcall
fwait
scas
sbb
pop
loop
test
stc
inc
inc
data16
into
xor
lret
movsb
test
add
inc
in
imul
out
pop
sub
shl
mov
xlat
inc
movsb
bnd
nop
sbb
adc
pop
and
ds
mov
mov
pusha
into
cmp
push
sub
out
movsl
subl
jle
insb
xchg
lds
mov
lock
cltd
mov
decl
iret
mov
dec
sbb
dec
in
inc
pop
and
jne
inc
mov
mov
stos
fwait
pushf
les
xchg
mov
repz
inc
mov
fs
inc
into
scas
jno
jp
pusha
push
and
test
adc
push
sbb
xchg
inc
dec
mov
dec
leave
mov
add
or
ret
cltd
fs
push
sub
add
in
mov
push
lahf
stos
inc
inc
psrld
shl
loop
jb
fs
mov
cmp
lahf
sti
pushf
out
cmp
movsl
mov
cmpsb
mov
int
jge
es
pushf
add
mov
push
sbb
mov
mov
pop
lods
fwait
xor
fisttpll
pop
add
and
cmp
inc
ret
outsl
mov
adc
sbb
inc
mov
scas
add
cmc
push
cmp
incb
ljmp
aas
xchg
out
out
outsl
add
enter
and
ficompl
scas
fcompl
pop
mov
pop
mov
bound
xor
mov
mov
call
pusha
mov
mov
enter
aas
rcr
jle
push
xchg
popa
cmp
xchg
or
dec
pop
mov
hlt
aas
sti
cmp
dec
mov
dec
pusha
mov
or
lahf
in
loop
pop
push
enter
jp
hlt
mov
xor
data16
and
adc
jmp
dec
or
jecxz
inc
jnp
jns
push
dec
pop
nop
or
push
mov
xchg
cltd
pusha
dec
mov
int
sub
out
and
xchg
pop
repz
push
pop
sti
xchg
mov
stc
adc
arpl
dec
or
cmc
jecxz
jo
fbstp
mov
nop
stos
cwtl
xchg
inc
sub
push
cmpsl
mov
and
xchg
xchg
cmp
icebp
sub
or
push
sub
dec
sbb
or
movl
pop
jne
scas
mov
cld
rcrl
jg
cltd
inc
addr16
cmc
pop
and
addr16
pop
cmp
mov
mov
jbe
test
pop
adc
xchg
inc
xchg
lods
fs
inc
pushl
dec
jnp
mov
das
outsw
xor
jl
les
xlat
xchg
sub
mov
adc
punpckhbw
add
mov
je
mov
push
inc
mov
push
cmc
xor
pop
ret
push
inc
scas
out
test
sbb
fisubrs
mov
push
repz
xchg
and
roll
pop
fsubrl
cmp
xchg
dec
xor
in
imul
lods
inc
fistpll
fidivl
and
xchg
ds
lcall
clc
inc
mov
mov
mul
inc
or
arpl
and
cmpsl
ret
pop
cwtl
mov
pop
js
sbb
cltd
and
iret
rorl
mov
jno
lods
mov
sbb
sahf
out
nop
mov
xchg
jns
jbe
dec
and
jae
stc
sub
imull
aaa
hlt
fucomip
xor
cmp
add
pushf
loopne
xor
popf
mov
fcmovne
ret
test
je
rcll
jbe
jp
pop
test
sar
fwait
mov
pop
push
data16
cmp
aas
inc
and
scas
aaa
jb
push
lahf
mov
loop
pop
lea
test
cld
or
or
sbb
cli
xor
les
sub
sub
adc
lahf
mov
stos
jle
loope
xorl
jmp
push
mov
loop
negb
je
cli
es
push
aaa
lcall
repz
sub
out
cli
mov
xchg
sub
scas
and
mov
add
fcoms
adc
loop
push
adc
je
std
cltd
jbe
mov
jmp
inc
fs
incl
sti
pushf
lock
push
mov
or
mov
arpl
mov
mov
jno
jecxz
enter
arpl
out
in
cld
in
jnp
aaa
sbb
adcl
push
into
push
push
xor
or
jnp
iret
dec
mov
inc
test
and
sub
push
andb
xlat
test
cmpsl
in
daa
xor
jae
jge
inc
ljmp
jae
add
inc
xor
dec
outsl
add
xchg
jae
cmpb
xor
les
xchg
jo,pt
mov
in
lea
stc
or
adcb
inc
sbb
add
xchg
in
dec
xchg
mov
call
adc
in
sbb
sbb
sub
rcl
cmp
addr16
ds
push
push
adc
fidivrl
adc
cmp
pop
stos
and
jno
cli
mov
out
mov
dec
jge
dec
add
fistl
loop
orb
fiadds
mov
xchg
aas
pop
xchg
inc
rorl
mov
xchg
inc
xor
mov
dec
inc
cmp
mov
iret
pop
jecxz
sbb
lcall
loope
add
clc
add
lret
movl
mov
mov
jae
lcall
test
mov
cmp
lods
xlat
xor
rolb
push
repnz
in
sar
inc
ljmp
loopne
xchg
lods
lds
in
adcl
xor
and
pop
enter
stc
adc
inc
cmpsb
xor
lahf
pop
xchg
mov
sub
adc
int
xor
sub
pop
adcl
in
fisubl
bound
fwait
push
mov
jg
jg
in
lods
add
push
les
shlb
je
cld
cmp
push
ds
push
mov
cli
lea
loopne
iret
js
sub
add
xlat
sti
add
cmp
jl
add
or
fnstsw
push
stc
jb
sbbb
imul
clc
shl
mov
push
or
xor
xchg
add
push
int3
add
xor
jo
cmp
xchg
xor
or
hlt
mov
lds
or
pusha
in
xor
sub
lods
pop
mov
mov
push
add
rcr
test
fcomps
ror
sbb
int3
push
pop
dec
mov
xor
add
pop
lea
ret
out
or
fninit
push
sub
xchg
jp
jge
cmp
dec
sub
lods
pusha
leave
dec
cltd
mov
push
scas
cmp
pusha
jp
fidivrs
or
add
cmp
jl
jmp
or
fbstp
or
les
ret
xchg
xchg
inc
jbe
popa
movsl
aad
data16
mov
movsl
dec
subl
mov
add
mov
pushf
rcr
jno
or
jno
xchg
icebp
push
in
mov
add
cld
inc
out
mov
or
pushf
fst
sub
jmp
and
cmp
fwait
div
stc
imul
testb
mov
ret
jecxz
mov
ja
out
loopne
cmpsl
dec
in
jge
push
lock
jbe
repnz
jno
scas
cld
cmc
inc
hlt
cmp
adcb
fistpll
xor
jno
addr16
xchg
outsb
in
jnp
pop
leave
xchg
push
in
jne
insl
iret
mov
or
out
mov
popf
icebp
xor
adc
and
add
mov
mov
and
mov
ret
repz
push
iret
es
xor
mov
cmp
dec
jb
fs
mov
or
xchg
dec
lcall
and
or
in
ret
adc
cld
cwtl
test
pop
lret
je
cmpb
pop
adc
xchg
fstl
scas
loope
gs
out
mov
test
setle
pop
mov
mov
popa
lahf
sub
subb
repnz
xchg
js
adc
xor
out
mov
adc
pop
push
movsb
pop
push
sub
cwtl
and
mov
adc
rcrl
lcall
fs
decb
notl
or
cltd
aas
push
pushl
pop
or
pop
push
loope
xchg
sub
stc
in
fsubl
js
inc
loope
ret
push
imul
push
push
fiadds
mov
fstpt
inc
fdivl
mov
pop
andl
pusha
adcb
cmpsl
mov
jmp
pushf
xor
aas
mov
jp
mov
mov
push
mov
inc
mov
outsl
jle
aaa
xor
adc
xchg
push
or
push
pop
movsb
cmp
test
rorl
sub
or
adc
aaa
fisttpll
push
rcrb
cmc
imul
leave
xor
xor
push
rcrl
out
gs
and
cmp
call
imul
stos
mov
jo
call
pop
push
repz
cmp
cmpsl
outsl
sbb
push
ja
xchg
cmp
fisubl
push
test
jmp
lock
pop
cmp
jp
mov
sbbl
jmp
fs
dec
jecxz
dec
and
mov
fwait
pop
outsl
cmp
inc
add
xchg
nop
pop
add
fwait
push
adc
and
xor
rcrl
sahf
out
push
rol
adc
mov
push
lock
push
orb
lods
jge
jmp
icebp
aaa
lcall
shr
and
mov
fldt
imull
popa
js
out
jnp
mov
push
mov
add
insb
push
scas
adc
adc
sahf
es
mov
push
cmp
mov
ficomps
stos
nop
xchg
ja
mov
data16
mov
ret
sbb
cmpsb
jne
shlb
outsb
mov
mov
add
inc
sahf
stc
rorl
mov
addb
ret
inc
xchg
mov
dec
sub
sti
mov
pop
les
fnsave
adc
jecxz
in
xlat
mov
aad
lods
push
adc
repnz
cmp
movsl
push
push
pop
test
add
jl
fdivl
and
movb
stos
dec
cmp
rorl
sbb
cmpsl
xchg
jno
push
mov
xor
out
ret
or
aas
mov
clc
std
shrb
call
and
mov
int3
sbb
mov
cmp
xor
hlt
add
jo
sub
dec
js
fsubl
ret
mov
xchg
sub
sub
test
jne
lret
mov
mov
es
jnp
cmp
add
pop
mov
pusha
mov
jae
jnp
dec
mov
mov
push
cmpsb
rcrb
xchg
sub
mov
jns
insb
or
jecxz
or
mov
mov
pop
mov
mov
imul
sbb
sub
out
mov
in
xor
dec
movsl
pop
xor
jge
jg
dec
mov
xor
push
out
mov
ret
rcl
movd
in
sbb
xchg
scas
jae
pop
add
xor
lret
out
xlat
ret
mov
mov
lret
pusha
outsb
pop
or
lds
das
scas
aas
dec
jne
aas
repnz
and
mov
divb
sub
bnd
rolb
icebp
enter
pop
mov
and
add
and
and
arpl
sti
sbb
add
loopne
dec
lods
insb
es
inc
mov
test
test
std
insl
aad
das
inc
test
outsb
lret
cmp
pusha
les
xor
mov
or
movsb
mov
mov
pop
cltd
aad
js
mov
xchg
jge
pop
mov
mov
ret
inc
lahf
mov
stos
cwtl
int3
inc
pop
push
pushf
nop
cltd
addr16
aaa
jbe
mov
loopne
pop
sbb
jmp
mov
pusha
cmp
daa
sbb
bound
daa
push
xchg
in
xchg
in
ret
sbb
xorl
roll
and
sti
fwait
scas
fstps
aas
xchg
or
xor
call
pop
jmp
and
iret
es
js
sbb
pop
arpl
andb
xchg
jl
call
mov
jge
hlt
inc
roll
int
dec
sub
ficoml
mov
int
icebp
mov
iret
sub
sub
mov
xlat
mov
popf
aam
mov
xchg
mov
loopne
ss
fcmove
pop
push
imul
adc
cmp
cmp
cmp
fwait
cmp
cmp
cmp
pop
xor
dec
dec
sbb
add
xlat
fst
inc
rcll
jmp
ret
les
jg
mov
jns
jle
in
sbb
mov
inc
add
jp
ds
mov
push
dec
jb
push
adc
mov
and
sub
sbb
mov
add
fcoml
jo
out
cmp
faddl
sbb
mov
push
pop
fwait
clc
sub
test
add
mov
fwait
jb
xor
addl
xchg
inc
xchg
adc
or
mov
dec
insb
sti
jb
dec
popf
adc
outsb
ds
mov
sub
xorb
jae
out
stos
inc
lods
lock
shll
and
repnz
cmpsb
nop
push
popa
adc
shlb
mov
shll
pop
dec
and
stc
adc
cli
fstpl
and
lods
mov
pop
sbb
lret
fdivrs
jmp
xchg
dec
sbb
sub
xchg
push
call
jl
in
shlb
jg
fs
add
mov
pop
ljmp
test
jl
pushf
mov
lret
dec
fistpl
cs
test
fs
testb
jbe
out
sbb
jl
jns
inc
mov
test
xor
ss
lahf
mov
sub
cmp
loop
push
and
hlt
pop
push
dec
pop
fdivrl
es
xchg
mov
pop
push
into
jle
dec
psubd
pop
xorl
test
sbb
iret
lock
pop
pusha
mov
adc
out
mov
sub
outsl
xor
xor
sbb
lods
int
sub
mov
jecxz
mov
push
insl
sub
fucomp
sbb
mov
cmc
loop
js
sub
dec
jne
stc
push
push
adc
lods
data16
and
cmc
xchg
lahf
addr16
inc
sub
sbbb
aad
sahf
jl
jp
xor
sbb
push
jecxz
dec
cmc
dec
jne
or
pop
ss
mov
out
movsl
add
inc
rorl
pop
pusha
cld
jp
jno
daa
add
jne
lds
adc
lahf
shlb
xor
mov
test
mov
insl
sub
xchg
dec
ds
popl
jp
icebp
jnp
cmp
jg
inc
jmp
clc
popa
daa
out
pop
cmp
jmp
xlat
out
mov
xor
jbe
cmpsb
xor
xor
xchg
sbb
pop
cwtl
pop
out
sbb
mov
fs
xor
xchg
mov
mov
cmp
mov
shll
std
cs
sti
mov
repnz
repnz
mov
mov
jbe
xor
int3
sub
or
cmc
int3
jge
and
arpl
cmp
dec
mov
push
gs
adc
mov
inc
testl
add
loop
dec
xchg
push
adc
cmp
stc
or
cmc
mov
dec
mov
or
sub
mov
fnsave
or
gs
int
rcl
dec
inc
push
dec
loop
push
hlt
cmp
cmc
dec
sarl
mov
out
jbe
lret
adc
shr
cld
sub
cmp
je
sbb
xchg
repnz
and
popf
or
push
pop
sub
pushf
sbb
xchg
jae
mov
fucomi
push
cmc
rcr
andl
loopne
mov
scas
ss
pop
jb
add
lcall
xor
dec
pop
dec
fldt
lods
pushf
jg
cmp
add
add
sbb
sbb
mov
dec
ja
sti
add
es
rorb
xchg
and
stos
adc
push
pusha
xor
lods
arpl
icebp
pop
in
push
lret
mov
movl
sub
mov
sbb
mov
xlat
shlb
shll
rcrl
xlat
or
cmp
fisubrs
jmp
ret
leave
adc
jo
lcall
or
repnz
sbb
roll
gs
aaa
adc
rolb
aas
es
aas
pop
push
iret
ja
fnstsw
jb
jnp
lret
dec
xchg
add
outsl
dec
mov
incb
out
jae
jecxz
repnz
daa
sahf
xchg
pop
push
mov
mov
je
insb
mov
inc
xlat
mov
and
mov
data16
xor
xorl
popf
inc
jno
add
hlt
jmp
add
sbb
loop
jbe
xchg
xchg
cwtl
bound
pop
mov
pop
push
jmp
clc
or
mov
mov
pop
or
or
jnp
pop
imul
pop
xor
xor
push
jo
xor
lret
jecxz
xchg
or
and
sti
arpl
insb
dec
xchg
dec
test
jns
daa
pop
cmp
cltd
and
mov
inc
clc
insb
mov
xor
push
movsb
out
push
cmpsb
std
out
jae
shrl
cmp
aad
lods
cmp
fiadds
imul
dec
dec
ret
andl
mov
aad
jg
test
lahf
sub
outsl
lds
pushf
pop
mov
sub
fucom
mov
shlb
push
adc
mov
cmp
cmpsl
mov
fiadds
sub
mov
insl
or
push
in
mov
jge
sub
not
push
jns
adc
push
out
in
xchg
into
pop
or
lock
scas
push
stc
call
jnp
xor
pop
int
sub
inc
inc
je
gs
sbb
jne
bound
mov
pop
sub
nop
popf
and
popf
lock
in
xchg
and
shrl
dec
cltd
add
xchg
mov
cmp
mov
inc
in
xlat
adc
xchg
fidivrl
mov
mov
jae
dec
sbb
shll
lahf
cli
dec
push
enter
mov
pop
mov
cmp
and
or
out
aam
fstpl
or
mov
or
sub
cmp
lds
push
stc
icebp
dec
pop
add
loop
sub
cmc
pop
fcmovnb
xor
ret
jmp
gs
rcrl
dec
sbb
jne
fs
cs
inc
popf
pushf
fiaddl
dec
les
lcall
test
mov
les
lret
gs
mov
inc
iret
sahf
jg
pop
test
pop
pop
mov
mov
stc
ja
in
add
das
mov
into
std
repnz
add
cwtl
data16
push
sahf
push
or
fsubrl
pop
es
test
push
push
add
testb
push
sub
inc
movsb
cli
push
fcomps
xorb
sbb
je
rclb
test
fstpl
sbb
push
xchg
xor
dec
xchg
push
outsl
xor
into
int
jne
pop
lods
mov
cmpsl
iret
ja
push
aaa
push
stc
push
mov
insl
sbb
popf
push
xorb
add
jbe
adc
loopne
iret
xchg
ret
xor
xchg
cmpsl
fisubrl
or
push
sbb
pop
popa
insb
mov
mov
std
js
mov
jmp
lods
jns
les
ljmp
jmp
add
or
or
xor
mov
aam
jp
dec
sub
push
rorl
push
arpl
test
notl
clc
lods
cmp
out
into
pop
sbb
and
and
cs
inc
mov
into
std
insl
jns
sbb
imul
xor
lret
enter
fstpl
xor
dec
adc
push
jns
loopne
cmpsl
fcomps
inc
pop
sbb
dec
outsl
cld
imul
mov
cmp
mov
outsb
repnz
xchg
mov
lods
push
sub
pop
sbb
divb
sub
test
jmp
push
iret
icebp
jns
scas
mov
jae
data16
stos
jle
sbb
ret
loop
mov
mov
imul
sbb
loop
sahf
aaa
clc
and
clc
mov
inc
lods
inc
movsb
push
and
xor
aaa
scas
shlb
dec
nop
in
push
xor
and
xor
sbb
lea
test
pushl
fsts
cmpsb
sub
in
insl
pop
pop
add
jecxz
lea
mov
cmpb
jp
lea
gs
lds
sub
int
dec
in
fiadds
push
jbe
aad
scas
adc
sbb
dec
inc
xchg
addl
and
lea
fdivs
xchg
sub
cmc
jmp
inc
stc
pusha
popf
jmp
int
jcxz
jnp
enter
adc
mov
jg
into
loopne
loope
inc
mov
das
xchg
je
loop
and
pop
xchg
lahf
pushf
insl
jge
clc
mov
sub
gs
mov
iret
jae
sbb
test
int3
jbe
lods
sti
xchg
push
cmp
or
mov
xchg
mov
push
jno
mov
scas
mov
pop
int
dec
movsb
pop
and
ss
and
jo
add
xor
jecxz
dec
pop
inc
ret
mov
shll
call
ja
xlat
pop
jne
add
js
inc
jge
jl
cmp
stos
stc
sub
pop
mov
in
bndstx
rcrl
inc
mov
xchg
push
fdivl
outsb
push
cltd
loope
sbb
popa
int
add
jo
aam
int3
jp
shll
jmp
sub
fisttps
mov
add
sbb
lods
fimuls
mov
inc
xor
jg
decl
cmpsb
fsubs
mov
nop
cmpsb
enter
mov
pushl
mov
adc
jo
test
lahf
inc
push
gs
arpl
fs
lea
xchg
adc
jg
xchg
mov
addb
cmp
leave
sub
imul
es
addr16
fwait
push
inc
xor
adc
dec
les
jns
inc
mov
or
push
repz
and
mov
aas
sarl
sbb
xchg
jl
mov
and
mov
dec
rcll
add
mov
loopne
mov
call
jns
js
imul
loopne
dec
inc
jne
imul
fwait
pop
xor
and
out
test
jmp
push
cmp
sub
xor
mov
pop
cmpsb
jg
leave
stos
data16
out
pop
insb
rclb
in
jns
mov
movsl
in
pusha
jmp
movsb
jmp
ficoms
ror
not
fisubrs
mov
cmp
xor
xchg
lret
inc
sub
into
out
xchg
subl
ss
dec
ret
add
cmp
mov
test
or
mov
es
mov
inc
jae
xor
jno
lret
aas
pop
mov
and
xchg
or
xchg
cwtl
cwtl
sbb
cmpsb
mov
bound
xchg
daa
adcl
daa
pop
inc
cltd
inc
roll
lods
pop
cwtl
or
or
inc
xchg
push
mov
aas
and
mov
inc
jl
cmp
sub
sub
sbb
pop
xor
ret
add
ret
mov
inc
out
es
inc
mov
mov
mov
pushl
std
jne
add
es
dec
cmp
je
jp
jbe
rol
pop
push
cmp
and
aam
jb
subb
jnp
sub
test
adc
cli
test
popw
scas
adc
mov
in
test
and
mov
popa
into
add
pop
das
sbb
stc
fs
hlt
bound
daa
js
cmp
jp
vucomiss
jg
push
outsl
repz
or
and
aad
into
xor
cld
jp
dec
idivl
xchg
and
push
movsl
mov
pop
sub
sar
out
jp
rcll
imul
jno
xchg
loop
fimull
jle
jbe
repz
xchg
mov
mov
stos
fstpt
into
push
xchg
and
add
jae
orb
sub
jns
and
inc
xor
fisubrl
cli
mov
pop
and
insb
ljmp
pop
lods
loopne
sbb
pop
test
and
dec
rolb
fptan
xchg
out
sbb
cwtl
push
addl
cmpsl
add
std
mov
into
int3
test
mov
dec
sub
push
dec
pop
idiv
sub
arpl
leave
sbb
pushf
ja
leave
dec
lahf
inc
scas
cld
pop
mov
iret
imul
lcall
es
daa
scas
cmp
jnp
push
sbb
cmp
dec
xchg
push
jge
pop
sub
xchg
push
mov
cmp
movsl
fists
mov
lea
out
loopne
add
sub
push
fsubl
jmp
push
test
mov
xlat
int3
push
mov
dec
or
push
scas
dec
inc
test
sahf
push
mov
pop
dec
repnz
imul
ljmp
mov
push
push
cmp
movl
in
test
fstl
push
and
sub
jp
fsubrl
lods
and
jge
stos
repz
shll
xor
aad
mov
lret
mov
lea
mulb
es
sahf
enter
fsts
sbb
and
insb
mov
mov
sub
xchg
pop
push
mov
mov
jbe
out
lret
aad
clc
jo
xchg
scas
int
imul
rorb
sbb
bound
xorl
fiadds
inc
push
out
into
sub
cli
xor
je
add
ret
pop
cmpsb
pop
in
sti
dec
cmpsb
arpl
inc
mov
inc
cmp
shrb
cmpb
jbe
inc
mov
lods
pop
ret
movsl
xchg
clc
push
add
scas
movsb
mov
push
out
mov
imul
hlt
adc
pop
sbb
sahf
and
bound
out
push
frstor
push
cmp
jecxz
out
xor
sti
cli
mov
popf
sbb
mov
shr
adc
sub
sti
add
in
dec
clc
rclb
and
fisttpll
fldt
xor
es
bound
adc
jle
and
addb
imul
add
clc
shrb
mov
mov
push
jnp
or
mov
mov
repz
adc
out
lods
adc
popa
push
jnp
jle
imulb
mov
mov
mov
mov
inc
ret
imul
sbb
addr16
mov
mov
popf
mov
jg
aas
xchg
and
cli
out
dec
lods
cmp
dec
sub
dec
sbb
cmp
rolb
push
aam
mov
incb
sub
inc
arpl
sarl
xchg
mov
xlat
mov
and
testb
push
xchg
jg
ret
jecxz
adc
adc
pop
push
xchg
push
lcall
arpl
xchg
add
fs
fstpl
andl
jecxz
inc
cli
cmp
pop
jnp
push
push
cmpl
aas
out
and
mov
xor
jge
ret
daa
mov
adc
das
stos
push
arpl
sti
fcmove
xlat
mov
lcall
sbb
sti
sub
fwait
rcr
es
in
and
int
lds
outsb
test
or
mov
test
ret
add
inc
and
aad
inc
sub
aad
lods
cmp
cmp
jns
jl
sub
inc
mov
fsubrl
or
adc
and
ja
jmp
xor
push
jecxz
loopne
aaa
fwait
sbb
cmp
push
cmp
inc
repnz
xor
mov
cmp
lock
xor
sub
cmp
fdivp
scas
inc
movsb
mov
pmaxub
jle
jle
cmp
xor
mov
outsl
push
push
pop
cmp
scas
in
inc
mov
fcoms
scas
or
test
imul
push
dec
fldenv
int
mov
mov
pop
jno
jns
dec
sub
insl
mov
leave
incl
mov
inc
andl
mov
fdivrs
jo
repnz
mov
shll
or
jle
test
dec
cmp
inc
ljmp
dec
cmp
frstor
mov
mov
int
sbb
out
frstor
enter
and
sub
push
repnz
movsb
sub
bound
jmp
xor
cmp
inc
scas
outsb
scas
jmp
or
cmc
push
mov
jnp
fs
xor
sbb
hlt
and
pop
cltd
lock
mov
cmpsb
mov
test
xor
testl
popl
and
cs
leave
inc
cli
and
fs
sub
fs
mov
fisubrl
aam
mov
push
lret
push
mov
adc
popa
stos
or
fs
inc
clc
scas
loopne
jmp
add
pop
push
cmp
popa
sete
stc
loop
xchg
mov
jns
adcl
je
push
push
hlt
push
add
add
addr16
cli
das
push
iret
push
pushf
scas
sub
cmp
sbb
or
sub
jbe
and
lea
lds
inc
sbb
dec
push
pop
aam
add
mov
xchg
push
icebp
pushf
push
ds
int
cwtl
inc
sub
xor
jmp
pusha
sub
loop
sbb
out
fs
out
inc
lret
push
and
pop
cmpsb
push
aad
push
push
or
or
lods
mov
push
jp
imul
cmp
xor
xchg
pop
lods
scas
dec
lret
das
xchg
sub
mov
sbb
hlt
mov
sbbl
aaa
je
popf
adc
push
ret
jmp
mov
pop
inc
and
das
dec
jae
mov
push
rcr
mov
fwait
jae
inc
mov
inc
cwtl
adc
adc
into
or
push
pop
enter
ror
add
xor
mov
sub
pop
pop
mov
xor
mul
cmc
push
cmpsl
cmp
mov
arpl
mov
mov
sub
stos
lods
cltd
cli
fwait
or
es
mov
push
cmp
dec
stos
divl
inc
loope
aam
mov
mov
stos
xor
push
xlat
jl
push
cmc
rclb
inc
lret
xor
cwtl
jae
cmp
adc
jmp
push
mov
mov
mov
or
mov
add
jnp
bound
adc
pop
bound
rcrb
pusha
mov
push
lea
adc
rcrb
push
lret
int3
jp
mov
lcall
cmp
es
fst
sbb
jae
sarb
cmp
mov
cmp
nop
cmpb
mov
jecxz
jge
imul
scas
jge
mov
jb
pop
mov
mov
insb
or
xor
lds
cmp
push
out
call
xchg
mov
mov
push
jne
arpl
add
cmp
mov
fdivrs
pop
push
or
cld
ljmp
cli
int
sarb
cld
jg
mov
fsts
mov
sub
adc
mov
cmp
xchg
lods
insb
lret
push
mov
scas
into
sbb
mov
out
arpl
jns
fidivs
cmp
cmp
jbe
out
xchg
xchg
repz
mov
cmp
in
mov
jecxz
sub
push
adc
cs
sub
cmp
pop
dec
lock
leave
adc
idivl
add
popl
mov
aam
push
lock
ja
xor
lds
mov
adc
and
movsl
adc
xchg
in
adc
jge
scas
out
inc
mov
push
dec
push
push
inc
cmpl
xchg
out
mov
leave
inc
push
mov
jo
sahf
dec
rolb
fildll
fucompp
pop
or
ljmp
mov
ja
cmp
mov
push
aam
cmpsl
sbb
or
in
mov
jmp
out
fwait
push
rcll
xor
mov
mov
push
push
icebp
cmpsb
ljmp
adc
movb
xor
cmp
mov
cmp
jbe
and
mov
fsubl
pop
cmp
cmp
cmpl
nop
push
jmp
mov
setle
bound
dec
fwait
enter
xlat
dec
push
fwait
outsl
lea
mov
fidivl
imul
jne
pusha
xchg
add
and
dec
xor
cmp
inc
jl
shll
push
addb
adc
xchg
neg
pop
in
and
stos
jo
subl
adc
add
xchg
cmp
jge
or
and
ljmp
push
push
sub
cld
cltd
mov
shl
xor
cmp
mov
lods
mov
add
jle
jb
bound
cmp
sub
dec
mov
in
fcoml
adc
mov
fisubs
outsl
dec
dec
mov
sbb
xchg
mov
imul
lahf
add
push
js
lods
lock
fwait
out
jge
stc
pushf
imul
and
ja
shll
xchg
mov
xor
and
aam
jmp
hlt
pop
mov
xor
and
imull
push
lds
jne
sbb
mov
xchg
js
pop
sub
adc
push
or
imul
xchg
rcrl
je
xchg
push
roll
lcall
andl
fistl
inc
clc
inc
mov
dec
xchg
mov
xchg
cmp
daa
dec
and
push
xchg
movsb
mov
fdiv
mov
xor
and
stos
jmp
jg
in
jbe
lret
cmpsb
pop
adc
enter
push
push
jno
pop
push
sarl
sub
inc
daa
pop
add
imul
jnp
inc
dec
test
push
leave
je
jnp
rcrb
cmp
cmp
mov
jecxz
lahf
push
jnp
add
es
add
cs
addr16
cmp
insb
dec
jbe
sub
adc
out
jo
lea
dec
out
or
push
and
sbbb
pushf
or
out
pop
xor
es
or
dec
mov
jnp
je
movsb
cltd
and
shll
shrl
rcrb
bound
inc
pusha
push
sbb
add
sbb
mov
xor
or
jbe
pop
loopne
add
repnz
loopne
push
fimuls
aas
inc
daa
lahf
or
pop
sub
lret
lods
mov
pop
scas
pop
out
fwait
and
mov
mov
icebp
cmp
ret
mov
vcvtdq2ps
bound
mov
shlb
loopne
out
int
mov
push
filds
fs
xchg
sbbl
shlb
mov
arpl
repnz
or
int3
call
gs
jo
arpl
lds
and
mov
mov
push
cwtl
idiv
add
and
xchg
scas
pop
mov
js
stc
mov
jno
insb
mov
sbbb
loop
hlt
jle
repnz
mov
xor
mov
mov
sbb
dec
out
nop
xor
mov
sarl
push
xchg
pop
push
ret
and
daa
xor
xchg
adc
xchg
cmp
lret
push
adc
mov
sub
xchg
or
add
lods
sti
fs
push
add
iret
or
gs
sbb
movsb
std
jle
insl
mov
lret
pop
sbb
or
xlat
dec
test
and
lret
add
and
mov
push
push
insb
jne
mov
movsl
pop
shll
aas
and
inc
cmpsl
ljmp
leave
jp
cmpsb
test
dec
ljmp
mov
data16
inc
mov
mov
pop
inc
mov
pushf
pop
pop
das
push
les
out
pop
jmp
stc
or
loop
sbb
dec
stc
fisttpll
add
add
leave
jmp
cli
enter
sub
or
mov
test
cmp
lods
jae
jge
and
adc
sbb
mov
testb
add
jb
push
jle
xchg
sahf
std
sbb
xor
imul
push
jno
mov
xlat
inc
mov
jp
out
ds
xor
mov
movsl
inc
or
sbbb
std
imul
jb
arpl
xchg
or
dec
fbstp
loop
arpl
ljmp
out
mov
pop
pop
xchg
sub
loop
xchg
mov
lret
mov
imul
sbb
gs
mov
fbstp
jge
adc
ficompl
push
notb
lea
in
xchg
jle
jp
add
push
cmp
stos
ficomps
in
add
add
fbld
bswap
xor
cmp
cmpsl
xor
adc
popa
filds
repz
cs
das
popa
daa
call
mov
cmp
das
inc
clc
lods
jb
cmp
inc
das
ss
mov
xor
sbb
and
lods
sbb
pop
bound
test
jl
outsl
adc
icebp
add
hlt
test
inc
or
sbbl
fs
xor
xchg
shrl
lcall
pop
hlt
pushf
inc
jne
jg
sbb
sahf
jle
xor
and
and
mov
mov
roll
hlt
fs
ret
xor
lahf
sti
les
loope
xchg
mov
leave
scas
out
mov
insb
out
adc
inc
out
popf
mov
push
rorb
add
and
das
pop
lock
mov
ret
inc
mov
leave
mov
pop
gs
pop
test
rcr
or
xchg
leave
push
into
outsl
push
mov
push
add
pop
mov
sub
lretw
push
aas
push
in
imul
pop
loope
leave
pop
sub
cwtl
cmp
mov
loope
mov
daa
pop
loopne
jo
sbb
lods
mov
sbb
mov
sub
cli
sub
aam
fs
lahf
add
mov
jle
adc
repz
fs
sbb
and
popa
jns
in
jmp
cmp
out
sub
mov
lret
mov
or
fcoml
jbe
aam
fildll
jge
aaa
sub
add
cld
lahf
test
xor
xor
jp
in
sbb
lock
push
jbe
sbb
cmc
dec
loope
and
mov
adc
mov
test
fildl
cmp
pushf
dec
repnz
pop
shl
es
imul
addr16
xchg
adc
and
enter
js
iret
sbb
popf
movsb
dec
pop
out
pop
inc
or
movsb
clc
fisubrl
cs
cmpb
ret
arpl
sbb
xchg
add
push
or
repz
sti
sbb
das
outsb
lret
or
test
or
das
mov
scas
inc
lea
es
out
cmpsb
loop
pusha
xchg
cmp
addr16
imull
mov
xor
leave
sbb
inc
insl
ret
jae
imul
mov
jne
sbb
xor
repnz
xlat
ss
xor
inc
xchg
mov
sbb
mov
lahf
add
mov
xor
push
or
jb
loopne
add
lods
mov
lcall
jg
mov
aaa
in
add
inc
sbb
lds
adc
ss
gs
cmp
scas
pusha
pop
xchg
imul
sub
mov
lahf
hlt
cmp
out
or
out
aad
sub
jb
sub
push
popf
fidivrl
push
push
div
mov
cmp
pop
insb
les
loopne
outsb
push
add
stos
pop
sub
test
mov
cmp
loope
xor
sub
das
not
js
ds
imul
mov
enter
mov
pop
pusha
movsl
inc
enter
testb
pop
jge
jb
xchg
jns
jb
pop
outsl
adc
loopne
sbb
lahf
ret
das
add
fcoms
outsl
fldenv
xchg
pop
sbb
xchg
push
pop
out
orl
pop
clc
hlt
mov
pop
push
lods
jne
hlt
fisubrl
mov
rcl
std
sbb
cld
ja
das
lret
ljmp
mov
push
pop
test
mov
push
insb
imul
mov
and
xchg
test
loop
cmp
xorb
xor
inc
dec
mov
lock
hlt
mov
out
mull
fs
testl
je
into
bound
xor
sahf
leave
lahf
add
pusha
sub
pop
cs
mov
cmpsb
mov
ret
ja
mov
jno
mov
test
adc
addr16
je
inc
mov
rcll
out
add
or
cmp
rcrl
insb
test
inc
into
scas
popf
test
push
jne
cld
imulb
jmp
push
add
std
incl
jl
js
aaa
rclb
in
test
jecxz
pop
xchg
jp
adc
inc
mov
xor
loope
stos
aam
insl
and
std
cmpsl
xor
push
cmp
dec
mov
sbb
pop
lahf
lods
iret
add
leave
mov
cmp
add
push
cmpsl
addr16
pop
js
fstpt
out
packssdw
test
shlb
xchg
push
test
push
push
out
pop
pusha
dec
mov
cmp
dec
dec
mov
inc
mov
jp
std
adc
arpl
jle
icebp
arpl
push
adc
ljmp
lretw
push
out
sti
xor
mov
fsubrl
dec
add
rcr
adc
sub
mov
mov
mov
cmp
jo
xchg
gs
sbb
inc
jo
xchg
sub
lock
and
sub
cmp
pop
lahf
mov
lock
jle
hlt
mov
mov
test
vpsubq
adc
icebp
add
adc
add
outsl
adc
push
ss
mov
jl
inc
and
mov
jne
push
and
fldt
jmp
jns
xchg
orb
xchg
and
pushf
scas
mov
das
test
xchg
xor
lret
sub
stos
loopne
inc
mov
gs
mov
mov
js
aaa
fwait
jb
cmc
inc
xor
cs
adc
addr16
stc
sbb
arpl
rcrb
xchg
add
popa
push
adc
lock
jmp
mov
mov
fs
jle
pop
mov
xor
stc
pop
dec
jp
jb
or
enter
or
and
pop
mov
push
sbb
or
sahf
mov
cmp
pand
and
adc
xor
in
cmpsl
sub
aas
mov
test
cmpsl
xchg
lret
das
das
out
jmp
loopne
sub
pushf
add
cmpsl
mov
xlat
xchg
and
iret
out
push
movsb
cli
inc
jb
sub
jg
dec
fimull
dec
mov
shll
xor
add
bound
inc
iret
insb
inc
popf
mov
mov
orb
inc
cmc
and
xor
xor
adc
testl
mov
jmp
push
push
ja
push
mov
xor
xchg
xchg
add
addl
mov
sub
ret
push
jmp
les
cmc
insb
jmp
sti
pop
leave
mov
fdiv
test
or
and
add
ret
loop
cli
sti
sbb
sub
cmp
pop
js
jb
jno
cmpl
stos
insb
push
sti
cmpsl
and
loop
fistl
inc
and
stos
and
jno
enter
movsl
hlt
add
adc
jmp
jp
leave
in
stc
out
jp
aam
je
out
xchg
push
ss
mov
loope
test
test
ror
inc
xchg
movl
xchg
mov
popa
out
js
mov
push
or
in
inc
repnz
das
ds
das
add
ret
pop
fldenv
pop
dec
rorb
push
bnd
dec
cs
test
mov
lret
outsl
sti
imul
scas
xchg
inc
pop
cli
orl
inc
add
jno
dec
or
dec
mov
sti
dec
mov
sarb
and
aam
std
inc
lret
push
testl
dec
fcomip
hlt
adc
lock
add
xor
jecxz
repnz
cs
cwtl
or
pusha
mov
scas
sub
cmp
pop
push
es
loopne
movsb
fistps
push
lret
sahf
in
in
pushf
shr
or
sub
in
push
push
push
xchg
pop
aaa
and
lcall
push
mov
add
xor
out
loope
xchg
out
xchg
sbb
cmc
cmc
call
into
jp
xor
orl
movsl
inc
inc
fadd
enter
and
jnp
js
cltd
pop
and
push
cmp
int3
imul
js
pop
imul
dec
sub
popa
cmp
dec
mov
dec
outsl
jne
ja
fimuls
rorb
push
popf
icebp
xchg
push
fstpt
mov
cmp
lods
dec
xchg
mov
add
test
and
push
test
dec
sub
aam
or
sbb
mov
ss
xor
iret
sub
daa
pop
jp
ljmp
into
mov
bound
mov
sbb
daa
sarl
lcall
dec
or
pusha
bound
mov
jp
sbbl
int
inc
push
sbb
and
and
ror
dec
push
pop
out
repnz
jp
incb
and
testb
cmpsb
fs
fsub
mov
cmp
adc
push
test
int
out
dec
andb
push
sti
sbb
sbb
repnz
aaa
sub
dec
inc
jecxz
pop
fldenv
into
test
iret
add
sahf
and
and
bound
push
sti
sti
sbb
xor
jne
xlat
adc
addr16
jnp
and
fsubl
pop
pop
lcall
pop
and
mov
fcom
lcall
movsl
les
lcall
cmpsb
jno
mov
sbb
jge
jo
lea
dec
mov
push
inc
mov
gs
push
mov
stos
cmp
xchg
adc
inc
mov
xor
mov
movsb
out
out
ffreep
scas
out
ret
xor
pop
jnp
cmpsb
mulb
push
sti
xchg
int
mov
mov
push
lea
pop
mov
sbb
xchg
stos
sub
aas
push
push
repnz
adc
out
push
xor
mov
jo
testl
mov
xor
push
pop
add
ja
popf
sub
or
or
mov
jle
push
popa
push
dec
shrl
movsl
jnp
inc
xchg
sbb
jle
lods
lea
and
dec
xor
dec
push
jge
dec
insb
bound
mov
sub
add
push
xor
dec
dec
out
fwait
mov
add
mov
add
and
mov
xchg
inc
xchg
cmpsb
adc
ret
cmp
jmp
dec
arpl
into
mov
test
jne
out
out
mov
aad
pop
jno
movsl
int3
loope
or
and
sbb
movsl
lret
jbe
push
push
insb
outsl
and
sar
pop
daa
stc
fdivp
loopne
fs
test
inc
cwtl
shl
out
adc
das
pop
jmp
imul
jbe
out
test
sub
imul
jb
sbb
les
jne
pop
mov
cmp
scas
aad
adc
xchg
dec
inc
mov
addr16
xor
pop
jb
cmp
mov
add
jbe
push
clc
add
sbb
sbb
inc
push
mov
jle
mov
inc
ret
sub
dec
sub
into
movsb
test
jmp
cwtl
nop
and
and
lea
sub
dec
and
loop
sbb
xchg
push
pop
xchg
push
lcall
pop
or
lods
out
lsl
pop
mov
scas
push
add
sub
rolb
jg
cmpsl
dec
sub
pop
dec
mov
cli
stos
int
mov
push
push
lods
sbb
divb
xor
stos
lods
xchg
jp
test
cld
fbstp
dec
lods
cmp
fadds
xchg
adcb
dec
mov
push
shlb
pop
sbb
data16
push
ljmp
mov
xchg
adc
sbbl
pop
aam
iret
clc
mov
sti
push
sub
push
add
adc
cltd
push
xor
cltd
jns
cltd
ss
mov
fwait
push
dec
ds
test
scas
mov
mov
inc
es
stos
push
xchg
jmp
or
aas
aaa
mov
and
ds
mov
hlt
ficoml
idivl
fildll
into
fiaddl
or
movsl
add
mov
push
cmp
or
push
lods
add
or
xor
icebp
call
inc
mov
lret
xorb
stos
pop
xchg
dec
call
cmpb
iret
and
fsts
les
popf
or
rclb
das
arpl
cmp
test
imul
or
pop
test
sub
loopne
mov
repnz
jns
stos
adc
push
imul
pop
or
fimull
mov
sbb
mov
fldcw
adc
xchg
lret
mov
mov
xchg
iret
lea
mov
sub
jbe
dec
test
cltd
aas
xchg
sub
repz
push
and
or
sbb
pop
test
das
push
lock
mov
out
fistl
jnp
inc
bnd
dec
inc
xor
stc
and
test
jns
bound
movsb
pushf
repnz
aas
xor
xor
shr
pop
in
or
iret
and
pop
ret
pop
mov
mov
jae
sbb
incl
dec
addr16
xor
push
lcall
lea
adc
mov
xor
xor
sbbl
nop
jns
dec
push
dec
add
pushf
lret
add
call
int3
or
fcoml
lahf
jecxz
jbe
jb
testl
or
out
ret
and
lret
push
test
dec
ja
inc
inc
mov
or
js
cmp
jmp
or
imul
in
imul
sarl
push
push
jno
mov
pop
out
xor
xlat
jne
insl
jecxz
adc
jbe
arpl
and
jg
popa
pop
fwait
jmp
xor
pop
pushf
add
jge
test
das
shll
loopne
stos
mov
cwtl
clc
imul
bound
lds
rcl
jmp
loope
outsb
adc
push
imul
xor
adc
stc
pop
shlb
mov
mov
adc
or
pop
sbb
shr
outsb
sbb
and
jne
mov
xchg
xor
cli
push
jbe
add
cli
std
test
mov
aas
loopne
pop
imul
data16
jecxz
andl
jnp
std
dec
jmp
fsubr
std
faddl
or
out
arpl
sti
xchg
inc
js
sub
inc
pop
test
adc
adc
fadds
mov
mov
sarb
sub
push
jae
mov
xor
nop
xor
sbb
fisubl
mov
sub
push
push
cmp
das
test
xchg
xchg
loopne
jge
mov
jne
not
daa
mov
xchg
mov
dec
cmc
in
jbe
push
leave
outsl
mov
mov
mov
inc
aam
bound
push
dec
dec
test
lock
xchg
inc
xor
sbb
xor
mov
lret
xor
test
fsts
loope
jb
out
cmp
vpsubusb
push
lods
lahf
sub
lds
mov
rolb
movsl
push
es
xlat
jb
leave
cmp
push
sub
mov
out
out
and
push
inc
or
sarl
arpl
sub
jo
int3
cmp
sub
sti
movsl
lock
nop
push
inc
sub
or
lods
jo
mov
or
add
icebp
cwtl
mov
jge
sbbb
fisubrs
dec
jne
stos
mov
shlb
dec
push
pop
dec
stos
xchg
pop
jl
or
fldenv
cs
mov
push
mov
fwait
mov
jp
lahf
leave
or
mov
into
xchg
fsubr
rclb
rclb
inc
scas
je
cmp
pop
mov
or
mov
jo
sti
out
and
nop
bound
lcall
repz
out
sbb
shrb
out
nop
pop
cs
jne
mov
mov
lcall
icebp
fimull
out
pop
mov
ficomps
insl
fisttpl
inc
rcr
cmpsb
pop
call
imul
xchg
sti
dec
in
add
mov
inc
insl
or
mov
cmpb
testb
jae
fsubr
xor
push
repnz
repnz
cltd
cmp
push
push
lret
out
xchg
fsts
imul
sub
pop
int
push
add
xlat
mov
or
rolb
xor
add
cmp
or
inc
sarb
xor
ret
mov
out
pop
adcl
scas
mov
ljmp
mov
mov
mov
pop
sti
arpl
idivl
fisubs
dec
fsts
cmp
sahf
cltd
popa
ljmp
nop
pop
int
xchg
sbb
inc
inc
in
jne
popf
daa
sub
outsl
inc
ror
mov
outsl
fnstcw
cmp
sti
add
fs
mov
cmpsl
mov
std
fs
ds
inc
call
fdivrl
cs
fcompl
sub
sahf
mov
in
adc
loope
mov
fcmovbe
xchg
cli
adc
ret
scas
loopne
les
rcrl
icebp
push
enter
xor
add
std
xchg
mov
ja
pop
sbb
or
ret
pop
mov
incl
or
lods
mov
imul
aam
rol
mov
sub
arpl
hlt
mov
idivl
enter
test
in
xchg
test
cmp
inc
push
ret
mov
inc
addr16
pop
dec
dec
sub
pop
dec
mov
test
mov
lret
push
inc
and
aas
sub
push
xchg
hlt
sbb
jo
nop
testl
or
aam
rcrl
jle
push
int
je
icebp
mov
out
in
pop
lcall
clc
sbb
fs
mov
addr16
lret
mov
shr
scas
sti
rcrl
or
cltd
jne
insl
jb
adc
test
mov
xor
in
mov
mov
adc
ja
popa
pop
arpl
imul
dec
in
ss
mov
imul
and
and
ljmp
fiaddl
add
lock
in
inc
cmp
pop
jnp
test
mov
pop
add
jns
cld
inc
mov
xchg
repnz
addr16
call
sahf
cmp
xchg
rorb
lds
dec
xchg
push
jge
sbb
ret
sub
mov
lods
hlt
cld
repz
sub
pop
mov
dec
pushf
jne
push
cmc
dec
dec
jmp
mov
mov
cmpsb
mov
mov
dec
sbb
pop
mov
cmc
fistl
insb
pop
cmp
movl
gs
je
mov
cmpsb
iret
cmp
push
inc
lock
mov
pop
insb
cmp
xchg
cltd
imul
dec
sbb
in
xor
add
jl
cmp
mov
out
fsubrs
aam
sbb
inc
pop
xor
push
and
push
aaa
mov
adcl
xchg
mov
insb
jne
cmp
adcb
out
mov
xor
fsubr
inc
ds
loop
sub
test
das
pop
xchg
scas
or
xchg
ds
xor
aas
rcl
adc
test
xchg
vminps
out
cli
movsb
push
push
mov
fcmovnu
jo
mov
jnp
cld
dec
addl
out
jbe
lret
or
sbb
xchg
cmp
std
loopne
in
lret
stos
std
popf
test
movb
cmpsb
jg
out
aaa
jb
push
lds
jnp
mov
jp
inc
push
loopne
int
sub
sub
fwait
adc
sti
jnp
test
mov
or
sar
cmp
loope
movsb
int3
mov
adcl
dec
loopne
lock
adc
push
lock
mov
mov
in
jae
imul
sbb
add
inc
orb
xor
fsubr
xlat
push
dec
cwtl
xchg
jnp
mov
push
or
sbb
dec
sti
clc
fnstenv
fcmovnb
mov
jp
mov
xor
inc
mov
mov
and
mov
xor
fidivs
call
orb
shll
insl
cmp
jae
cmp
stos
mov
incl
mov
fstl
mov
and
test
adc
and
xchg
icebp
movsl
bound
jae
inc
add
xchg
xchg
mov
dec
popf
out
call
jnp
pop
loope
mov
nop
mov
je
mov
push
xchg
xor
mov
dec
mov
cmpsb
push
and
ret
and
xor
jmp
sub
dec
xor
lods
xchg
lcall
xor
push
jge
call
pop
mov
cltd
xchg
jg
cltd
mov
data16
add
sub
fwait
incl
push
xchg
mov
aaa
push
inc
clc
inc
xchg
push
ljmp
dec
jp
xor
cmp
sahf
fwait
ret
adc
ljmp
push
mov
shlb
fiadds
push
jge
std
bound
inc
mov
jle
popf
dec
or
into
push
outsb
fnsave
lods
cmp
lods
dec
and
aaa
scas
cmpl
mov
and
push
pop
mov
sub
add
movq
jg
dec
out
daa
movsl
sbb
fcmovnu
sbbl
push
push
add
popf
cmp
aaa
popa
fdivp
out
dec
inc
aas
push
ret
push
icebp
sbb
fiadds
pop
ja
xor
mov
mov
in
into
out
ds
lea
cmp
mov
push
jmp
ljmp
outsb
push
fisttpl
loope
fwait
mov
ror
loopne
mov
movsl
movsb
scas
jmp
ds
mov
int
pop
lock
adcb
bound
inc
jmp
lret
inc
ret
shlb
pop
cli
adc
dec
ja,pn
aaa
mov
shrl
mov
push
addl
nop
sbb
pop
mov
fstps
insb
mov
xor
jb
adc
add
xchg
fildl
daa
mov
pop
pop
add
iret
scas
fisubl
mov
test
push
outsb
ss
daa
imul
pop
fnsave
hlt
mov
inc
inc
adc
mov
dec
orb
stos
or
ljmp
cmpsl
lods
pop
loopne
adc
jnp
or
adc
ficomps
cld
sbb
sub
mov
js
int3
push
and
sub
or
sub
aas
scas
pop
cmpsb
repnz
pop
jns
add
mov
add
bswap
xchg
out
mov
or
and
mov
outsb
aas
inc
shl
cmpsl
cwtl
add
or
out
orb
stc
and
jg
imul
in
dec
and
rcl
cmp
pop
cmp
rorl
mov
mov
cli
adc
adc
mov
mov
icebp
jns
fnstenv
call
call
in
pop
mov
jl
xchg
test
in
out
sbb
fcoml
vmwrite
and
mov
pop
dec
test
ror
cld
add
rolb
je
insl
add
cmp
shlb
insb
rolb
in
lcall
rcrl
fwait
xchg
adc
or
scas
test
jge
dec
or
jae
mov
pusha
negl
adc
fs
stos
or
mov
popf
orl
adc
adcl
lods
lods
scas
add
pop
inc
leave
arpl
test
in
pushl
ret
push
mulb
dec
xchg
loop,pt
cmp
cli
jle
xchg
mov
pop
aad
xor
push
jecxz
ljmp
test
pop
idivb
repnz
je
xor
sbb
into
insb
push
cmpsl
xor
jb
and
js
lret
cmp
adc
cmpsl
sti
or
xor
cmp
sub
rorb
movsb
and
pusha
ror
mov
jp
mov
mov
cmpsb
in
add
insl
mov
ss
mov
mov
jmp
and
cmc
lods
mov
stos
gs
int3
xchg
pop
aas
clc
outsb
out
movsl
out
mov
jecxz
push
sbb
lcall
xor
cmp
and
dec
pop
shlb
in
cmp
adc
icebp
cli
jmp
push
hlt
mov
rcll
lret
je
std
sarl
enter
rcrl
jne
add
and
mov
xchg
dec
mov
inc
jno
pop
pop
je
sub
lods
adc
or
popf
clc
or
dec
lcall
mov
push
push
mov
dec
mov
cmpsl
xchg
sub
test
outsb
movsb
add
aaa
dec
and
mov
fsubrl
rcr
cmc
out
dec
in
or
add
cmpsl
jbe
lea
pop
jae
test
imul
jg
flds
in
movsb
aas
sub
inc
and
scas
inc
push
pop
pop
insb
jnp
adc
adc
pop
push
jns
movb
jb
cmp
dec
cmp
inc
sbb
inc
dec
insl
addb
aaa
add
ffreep
jbe
out
mov
movsb
lahf
sbb
lret
test
daa
jl
enter
xchg
sbb
cmpsb
leave
jle
lods
cmp
xor
cmp
inc
mov
pusha
mov
mov
and
popa
push
mov
rcr
mov
xor
mov
scas
hlt
xor
and
pushf
inc
sbb
adc
mov
xchg
pop
enter
lds
cli
jbe
pop
dec
pop
mov
sub
push
clc
jge
call
iret
pushf
icebp
xchg
mov
not
mov
mov
mov
push
jae
push
fwait
pusha
insl
pop
pop
inc
add
pop
mov
lret
ljmp
or
push
sbb
jl
test
das
movsb
sarb
dec
jp
dec
mov
pop
jne
mov
inc
adc
mov
inc
cmp
lahf
mov
ret
fildll
lahf
mov
xchg
cmp
ret
insb
xor
xchg
and
dec
fisttpll
andb
mov
xorb
ret
fadds
mov
inc
xchg
jmp
dec
sti
scas
push
clc
out
sub
das
fistpll
lods
paddsb
cmpsl
test
sub
test
lahf
js
shlb
das
sub
imul
or
imul
xor
mov
and
cmp
push
enter
adc
or
sbb
ss
fcom
decb
jno
jmp
mov
xchg
clc
arpl
sub
test
xchg
or
scas
jl
xor
mov
lods
out
ja
cltd
lods
scas
cmp
sub
addb
call
into
arpl
aaa
insb
lret
mov
and
in
cmp
xor
out
push
lock
outsl
mov
jno
add
insl
or
inc
jmp
inc
aaa
xor
daa
ljmp
jge
cli
pop
jl
or
out
xchg
mov
mov
bound
push
add
fldl
sarb
add
pop
or
push
stos
aas
sub
mov
ret
add
aad
pop
jle
fidivrs
fucomp
or
adc
push
jo
xchg
repz
jecxz
adc
adcl
adc
sbb
jne
add
sub
push
inc
lahf
xchg
fisttpll
stos
ja
mov
cld
das
lds
dec
popf
gs
sbb
stc
lock
jns
mov
mov
push
xor
mov
int
xchg
ds
jnp
adc
xchg
imul
addr16
adc
mov
imul
pop
imul
cs
cld
push
test
ret
int
jmp
or
stc
rcrl
into
enter
ss
jge
popf
addr16
mov
sahf
mov
dec
rcr
je
sahf
fwait
ss
push
bound
rcll
mov
or
pop
inc
mov
sarb
and
mov
sbb
jmp
fcomps
std
in
sub
push
ss
ja
out
or
sbb
pop
bnd
jnp
mov
xchg
iret
arpl
fstpl
les
push
cmp
mov
lret
aaa
ret
fidivs
mov
data16
sbb
mov
std
xchg
les
repz
push
mov
cmp
sahf
pop
jno
push
push
push
mov
les
nop
mov
push
sub
mov
ja
xor
mov
push
test
xor
loop
lcall
dec
into
pop
sbb
mov
cmp
mov
insb
push
mov
ror
ja
ja,pt
out
pop
movsb
lcall
or
ss
sub
movl
add
sbb
pop
cmpsb
or
mov
mov
mov
iret
xchg
cmc
mov
sbb
and
sbb
dec
adc
icebp
pminsw
fstl
xor
rclb
mov
add
or
jbe
jmp
mov
sub
and
mov
xor
scas
scas
iret
push
hlt
mov
je
xchg
inc
movsl
loopne
lret
sbb
fisttpll
popa
and
xchg
out
fs
test
jb
mov
add
mov
mov
repnz
fbld
rorl
lret
sbb
fidivs
adc
repnz
scas
in
xchg
ja,pn
push
out
fucomi
mov
inc
aas
mov
inc
out
fistpl
rsqrtps
adc
imul
int
pop
das
mov
add
or
add
lock
mov
xchg
fs
push
inc
inc
or
popf
sbb
rorb
xchg
inc
test
insb
push
sarb
and
mov
inc
pop
or
sub
pop
fcoms
movsl
xor
movsb
imulb
int
lcall
pop
cmp
dec
cli
dec
popa
lea
test
js
mov
outsl
rcr
adc
push
or
pop
imul
imul
cmp
cmp
jb
jns
jae
add
js
jnp
jl
adc
mov
pop
js
lahf
cmp
adcl
rclb
mov
aas
push
shll
cmpsb
fdiv
xchg
or
sbb
subl
pop
or
out
scas
stc
pop
sub
adc
mov
imul
stos
pop
mov
adc
dec
dec
xor
mull
push
jmp
pop
xor
cmpsb
and
inc
xchg
push
xchg
rol
cmc
fidivrs
popa
and
mov
jbe
dec
add
in
cltd
add
movsb
dec
aas
loope
mov
fisubl
fistpl
icebp
repz
je
mov
jae
insb
inc
sbb
out
ror
in
aaa
fstl
xchg
push
or
in
xchg
arpl
sar
jge
data16
cmc
sub
and
push
pushf
rcll
jle
test
or
aas
rcl
fisubs
cmp
lahf
fxtract
fstps
xchg
push
les
dec
fnsave
jle
pop
xor
adc
push
push
test
insb
aam
xor
xor
add
fcoml
pop
imul
push
subl
add
push
sarb
sub
repz
shll
idivb
sub
jg
jae
adc
in
stos
jns
and
xchg
nop
add
mulb
pusha
sahf
nop
pop
push
fucomp
mov
jmp
mov
xchg
dec
lret
shrl
dec
cmpsl
bound
jnp
sub
std
xchg
jg
mov
add
inc
xor
pop
gs
jmp
test
dec
rorb
push
subb
push
int
inc
xchg
rcrl
sbb
jae
dec
push
inc
movb
and
mov
out
pop
sub
test
cmp
aam
cli
jns
cmc
int3
pop
sbb
imull
push
mov
mov
into
pop
inc
dec
mov
test
push
or
xchg
and
jg
cmpsb
js
pop
test
inc
jle
push
lock
popl
int
jmp
jno
je
dec
stos
addr16
or
push
jp
aam
ds
inc
gs
insb
sub
stc
loop
in
fstl
sub
insb
lock
arpl
cmp
inc
xchg
pmaddwd
jecxz
xorl
in
mov
mov
pop
xchg
pop
mov
mov
imul
cmc
sub
lcall
cmp
iret
jle
aas
lret
test
push
dec
and
sub
xchg
cmpsl
pop
int3
inc
xor
adc
lret
dec
mov
jge
test
xor
push
movsb
pop
sarb
xor
aad
lret
out
loopne
hlt
fldt
popf
push
sub
and
lahf
inc
paddb
pop
cmpsb
pop
dec
xor
ljmp
or
jmp
xor
enter
push
shrb
pop
sbb
or
xor
mov
xchg
push
ret
xchg
pop
pop
mov
loope
nop
push
insl
cmc
dec
xor
inc
push
jecxz
lea
fwait
pop
jg
ror
jmp
femms
inc
push
mov
lea
mov
inc
or
push
jmp
cmp
pop
mov
push
in
in
push
xchg
test
push
sub
addr16
or
xorb
adc
jl
fs
loop
das
cmp
scas
fstp
xor
inc
leave
adc
inc
xchg
mov
mov
gs
fisubs
lock
mov
jmp
mov
cmpsl
mov
xor
mov
les
jle
loope
mov
into
cmpl
gs
mov
stos
pusha
jecxz
pop
fimuls
ja
xor
jge
out
mov
repnz
sub
sbb
faddl
mov
xchg
subb
push
mov
and
insb
cmc
int
cmp
or
push
jno
ja
fwait
add
jl
push
and
mov
sub
cld
les
pop
dec
mov
rcrb
fsubr
mov
sub
xchg
and
fcmovbe
enter
jmp
pop
popa
enter
push
sbb
dec
addr16
shrb
jb
je
lds
add
out
cli
imul
jnp
xchg
mov
mov
orb
rclb
add
cmp
jno
cmpsl
mov
and
inc
sbb
push
mov
js
push
jle
arpl
jmp
or
lret
add
sub
mov
xor
aas
sbb
es
push
repz
in
cmpsb
adcb
cmp
lock
nop
mov
adc
push
fwait
mov
xor
insl
movsb
cmpsb
js
sub
test
fsubrs
pop
pop
sub
test
out
popa
movsb
test
adc
xor
xchg
stos
mov
sub
ss
rcll
dec
xor
jge
dec
stos
adc
lret
pop
rcll
aas
push
aas
ljmp
call
jl
pushf
xor
xchg
xchg
inc
addr16
orl
xor
pop
push
push
fcoml
and
push
and
add
popa
subl
cmpsb
lret
sub
pop
ret
mov
std
pusha
dec
lcall
inc
dec
pop
add
in
or
popa
cmp
sub
add
leave
mov
and
es
leave
sbb
jno
pop
data16
xlat
and
and
sbb
mov
popa
and
xchg
repz
mov
jb
movsl
jmp
test
inc
loopne
xchg
mov
outsl
xchg
mov
lret
cwtl
dec
jle
and
sbb
mov
lret
pop
nop
mov
pop
cwtl
stos
push
mov
fs
fxch
data16
pushf
mov
add
push
jge
and
aaa
pop
pop
add
imul
cwtl
cmp
xchg
inc
cld
mov
stc
cltd
push
stos
pop
cmpsb
mov
pusha
stos
ss
call
sub
mov
pushf
ret
fcmovnbe
pop
aad
xor
testb
add
icebp
add
mov
cmp
stos
inc
jno
inc
cld
test
mov
movsl
lret
cmp
push
xchg
test
out
jae
addl
aaa
add
loope
push
xor
xor
lods
dec
xor
clc
fcoml
pushf
outsb
test
ds
xor
pop
sbb
add
inc
es
or
fyl2x
inc
shll
xchg
cld
xchg
fsubrl
pop
push
and
nop
mov
pusha
stc
sahf
inc
cli
add
fidivs
into
cmp
add
aad
mov
mov
sbb
xchg
insb
mov
idivb
es
test
pop
fidivl
fwait
dec
xchg
mov
adcl
push
lods
or
mov
mov
mov
inc
adc
cmp
stos
pop
sbb
outsb
negb
pop
add
sbb
or
ss
inc
or
push
xorb
xchg
cmc
fnstcw
mov
mov
out
shll
jmp
in
jb
push
xor
ds
dec
cwtl
adc
outsl
inc
fiadds
daa
jle
push
dec
jmp
sub
dec
mov
mov
xorl
and
mov
sbb
and
js
rclb
icebp
jg
gs
push
arpl
xchg
xchg
hlt
jbe
test
mov
pusha
mov
in
aaa
mov
loope
pop
repz
out
adc
fstps
jle
data16
fdivl
lret
das
cld
push
jecxz
mov
xchg
mov
mov
inc
fsub
pop
shrb
mov
adcb
in
mov
leave
mov
enter
cmpl
mov
push
push
in
fnstenv
cmp
lds
pop
cli
pop
mov
fdivrl
pop
xchg
and
loopne
and
cmp
les
dec
imul
sub
inc
cmc
ds
or
dec
insl
inc
add
sbb
ljmp
adc
jo
fstps
or
push
and
and
jnp
loope
jbe
xchg
scas
sub
xor
push
inc
and
scas
adcb
adc
scas
and
cmp
push
es
mov
or
std
stos
xchg
outsl
jmp
pop
es
or
jns
inc
test
pushf
dec
pop
mov
xchg
jbe
push
mov
clc
xorl
outsl
hlt
sbb
ja
ljmp
push
into
or
movsl
daa
out
jg
stc
mov
shr
les
pop
andb
adc
faddl
mov
out
cmp
movsl
push
leave
mov
pop
lods
xchg
xor
stos
loopne
xlat
dec
lret
sub
jnp
pop
dec
or
outsl
ljmp
jo
mov
jp
mov
hlt
dec
das
cld
call
adcl
out
and
jns
cld
mov
inc
pop
and
leave
push
ds
sub
xchg
xchg
mov
arpl
inc
jg
push
int
push
add
sub
xor
push
fwait
out
scas
add
scas
sahf
inc
pop
cli
add
orb
data16
mov
push
popaw
loop
stos
sti
pop
enter
bound
nop
add
push
test
pop
mov
and
loope
test
es
frstor
pop
cmpsb
lret
cmp
lds
and
dec
push
jnp
xor
gs
and
jmp
hlt
inc
dec
sbb
or
jecxz
rcll
negb
xchg
xchg
adc
scas
or
arpl
mov
repnz
ljmp
imul
xchg
xlat
es
sub
add
inc
in
xor
inc
dec
jns
pop
cmpsl
cltd
ljmp
pop
or
inc
cmpsl
mov
pop
push
mov
xor
dec
mov
je
pusha
popf
shlb
icebp
mov
jg
cmc
or
cli
dec
mov
xchg
imul
lds
and
lret
xor
btc
xchg
xchg
cmpsb
in
jo
jle
imul
cltd
les
mov
test
ret
cmp
arpl
aam
mov
jnp
xor
xchg
nop
shll
xchg
jae
stc
jg
jge
scas
and
cmp
pop
push
cmp
icebp
popf
stc
mov
xchg
stos
pushf
stos
dec
popw
cmp
xor
mov
and
or
test
mov
das
or
xchg
mov
cmpsb
in
mov
lock
inc
inc
or
add
xor
scas
cmp
push
adc
pop
pop
jp
sbb
lock
sbb
or
xchg
mov
adc
loop
stc
xchg
push
jns
repz
xor
inc
sahf
mov
inc
repnz
xchg
pop
mov
cli
sbb
pop
adc
dec
jae
int3
lcall
imul
mov
pop
jp
or
jmp
pop
lret
sahf
rcll
jg
fcomps
out
fstpl
sub
mov
mov
fmuls
jbe
das
in
out
outsl
iret
pop
pop
movsb
mov
fs
pop
sahf
pop
cmp
push
out
fcoms
movsl
fmull
js
push
mov
add
out
aaa
add
mov
les
ss
negl
inc
push
into
fcomps
outsb
fmulp
adc
cmp
push
lods
repz
dec
sbb
jge
adcl
int
cmp
jns
ja
leave
push
cmp
out
sub
lret
js
cmpsb
shl
adc
es
push
lea
push
mov
sahf
xchg
mov
push
es
add
neg
pop
add
sahf
cmc
subb
pop
push
jl
xchg
shlb
dec
mov
sbb
add
dec
repnz
push
jns
dec
sahf
fs
aaa
sbb
xchg
pop
add
js
test
mov
shll
dec
or
pop
mov
dec
jbe
incl
stc
lcall
sub
outsl
sub
pusha
jle
cld
adc
fdivrs
pusha
movsl
pushf
jns
add
jb
push
jmp
sahf
inc
je
cmp
pop
xor
mov
dec
cmp
fsub
cltd
jns
xor
adc
mov
out
inc
andl
filds
adc
dec
dec
rorl
dec
and
jb
ret
inc
pop
xchg
lahf
jae
shll
lds
cmp
andl
or
sahf
or
mov
dec
test
test
in
lods
push
jle
aaa
add
push
addl
insb
outsb
das
xchg
cmpsl
lods
mov
or
adc
add
ss
push
mov
mov
test
mov
out
mov
test
xchg
rol
rclb
mov
ss
lret
push
aam
cmp
scas
sarl
lods
push
xchg
cmp
add
jmp
jne
inc
sub
outsb
push
sbb
push
movsb
push
sbb
jb
push
fwait
clc
fs
push
ret
imul
jle
xor
add
fistl
mov
sbb
out
mov
xchg
push
xchg
mov
sti
mov
test
arpl
stos
in
je
test
movsl
lods
jb
shrl
aam
fcmovnb
xor
aad
or
fisubl
xchg
data16
or
xchg
sbb
push
mov
jns
adc
cmp
rcr
inc
mov
imul
and
push
and
sub
jge
icebp
cld
jg
mov
sbb
lret
xchg
inc
jle
or
cwtl
mov
jns
outsb
pop
mov
imul
movsl
cltd
loopne
pop
movswl
pop
stc
sbb
outsl
call
xor
cmpsl
or
in
sbb
xchg
fisubl
nop
push
cltd
cmp
pop
pop
pop
ret
lcall
or
xchg
push
out
push
sbb
out
cmp
mov
jae
sbb
sbb
mov
dec
xchg
add
pop
cld
pop
nop
lcall
cmp
mov
call
dec
pop
push
push
xchg
inc
stos
lcall
insb
jae
xor
daa
push
fwait
sub
cmp
jecxz
pusha
aam
add
jmp
jno
icebp
out
sub
and
add
orb
pop
push
xchg
ss
test
adc
std
shl
add
xchg
inc
xchg
fidivs
adc
adc
arpl
lods
mov
test
push
pusha
scas
hlt
cmp
lcall
mov
xchg
test
sbb
jb
cmp
adc
push
imul
pop
popf
cmp
leave
jmp
addr16
inc
leave
xor
mov
cli
mov
xchg
mov
mov
sub
pop
arpl
xchg
mov
or
push
loope
addl
ret
xchg
xchg
jge
adc
nop
mov
cltd
inc
sub
mov
cltd
outsb
outsb
outsb
insb
add
popf
shr
hlt
out
fsub
repnz
sbb
push
add
mov
stc
sbb
jb
cmp
arpl
pop
mov
mov
adc
inc
pop
sti
sub
inc
jl
add
and
in
fdivrp
es
cltd
or
adc
mov
jnp
cld
pop
fidivl
or
jl
adc
fstl
subl
jne
std
dec
push
fsubr
jb
hlt
adc
pop
xlat
rep
jg
enter
mov
cmp
xor
jae
pop
stos
and
mov
mov
aad
and
imul
sub
inc
sub
neg
sahf
into
mov
js
jg
jp
sbb
mov
jge
inc
xchg
add
jb
cwtl
inc
shrb
out
mulb
jno
pop
sub
cmc
sbb
mov
xor
xor
dec
test
xchg
rcl
adcb
in
push
sub
ret
lods
xchg
popa
cmpsl
outsl
xchg
sbb
mov
jecxz
dec
mov
jbe
shl
xor
out
ret
int
imul
jns
xchg
xchg
lea
inc
xor
sub
lcall
ss
or
arpl
jg
ss
add
scas
pushf
xchg
push
push
or
std
test
add
push
add
stos
les
inc
rol
inc
bnd
cmp
add
testl
dec
in
inc
pop
pop
ljmp
lock
aam
or
aam
push
popf
jmp
lahf
mov
cmp
mov
jo
mov
ss
adc
iret
int3
ret
aad
mov
cli
add
mov
aaa
jns
sbb
addr16
fsubrl
xchg
cwtl
jle
mov
movsl
or
sbb
out
jg
pop
mov
cmp
test
cmp
fwait
xchg
adc
and
xor
adc
mov
dec
jbe
add
pushf
sbb
jmp
xor
test
mov
test
repnz
out
lea
popf
sub
add
jl
and
push
xor
addr16
cltd
aaa
call
fisubrs
mov
shl
push
clc
out
das
xor
imul
movl
xchg
subb
addb
stos
loopne
popf
add
sbb
scas
test
cmp
push
pushf
aad
xor
nop
jnp
ret
mov
mov
push
pop
add
les
dec
out
pop
movsl
into
mov
fnsave
test
pop
std
aaa
pop
dec
push
push
subl
jns
xlat
sub
std
mov
pop
arpl
and
xorb
enter
les
jbe
loop
scas
cmc
scas
xor
pushf
mov
cmc
loope
adc
add
or
ret
loope
and
inc
mov
or
inc
jecxz
inc
lods
pop
inc
jg
xchg
mov
or
cmp
mov
push
inc
jbe
cs
xchg
sbb
mov
cmp
addr16
inc
data16
pop
xchg
aam
gs
dec
dec
dec
nop
rclb
movsl
sub
sar
and
stos
push
outsl
push
negb
cld
sbb
movsl
lea
addb
arpl
pop
lock
dec
fistpl
mov
in
stc
mov
pop
fisttpl
test
add
aas
push
sub
jmp
push
fisttpll
insb
pop
test
pop
cmp
xchg
pop
int3
les
pop
adc
jae
pushf
sti
jg
insl
push
lock
fidivrs
jp
ret
or
adc
add
dec
add
movsb
sahf
cld
cmpsl
arpl
cmp
xchg
adcl
ljmp
les
push
or
loopne
je
mov
imul
mov
insl
gs
adc
cmp
pop
les
xchg
imul
jb
xlat
or
fnsave
inc
add
stos
adc
scas
sub
pop
icebp
scas
repz
inc
dec
jb
or
jl
leave
neg
sub
js
and
rcll
insl
cltd
or
out
outsl
ja
std
stc
insb
aaa
out
or
and
dec
shlb
lret
cli
adc
mov
adc
push
std
aaa
jns
push
rcll
adc
jo
mov
cld
std
ds
pop
push
mov
pop
xor
push
cmp
lds
fnstenv
shlb
add
adc
lcall
xchg
or
int
pop
or
jne
mull
adc
pop
or
pushf
pop
jb
adc
lock
shll
in
mov
push
and
add
cli
mov
cli
jnp
idivb
ds
and
ja
jl
dec
xor
dec
int
xor
cli
sub
pop
pop
shl
jbe
add
sbb
xchg
ds
add
repnz
clc
mov
in
mov
cmp
or
js
mov
js
jle
sbb
movsl
lock
xor
mov
pusha
pop
or
leave
jg
and
xor
push
dec
shr
push
int
repnz
inc
sub
dec
insl
ljmp
xchg
xlat
mov
or
roll
loope
aam
jmp
dec
adc
adc
xlat
outsl
pop
out
pop
sti
push
jnp
sub
dec
jle
outsl
hlt
mov
xor
test
test
fidivrs
mov
loopne
sub
dec
pop
outsl
pop
int3
push
les
hlt
pop
out
push
sbb
xor
aad
andb
lods
mov
add
mov
leave
sbb
lcall
inc
int
cli
cmp
mov
mov
bound
jge
lret
incb
mov
cmp
mov
xor
shl
int3
cmp
call
scas
pop
push
rdmsr
push
sub
mov
fidivl
out
pop
ja
inc
adc
iret
dec
das
dec
cmpsb
sub
or
adc
js
aad
jo
leave
test
into
push
cmp
icebp
adc
sahf
adc
push
clc
int
outsb
jecxz
lret
xor
cmp
fdivrs
adc
in
std
pushf
mov
mul
int
les
pop
sub
in
in
and
mov
rcll
sahf
sbb
add
add
cmpl
fsubs
aaa
subl
nop
add
shl
insl
jg
inc
ror
and
push
or
mov
cwtl
into
and
dec
dec
push
xlat
shll
jmp
mov
stos
rorl
stos
mov
ds
mov
and
aas
and
daa
sub
pop
je
dec
repz
xor
sbb
or
mov
outsl
das
lock
repz
es
test
adc
mov
fsubrl
test
leave
cwtl
fucomip
cmpsb
mov
fs
mov
outsl
call
jl
pushf
pop
rcr
mov
push
pop
shlb
int3
sahf
icebp
je
push
call
pop
imul
pusha
pop
mov
loopne
movsl
clc
xchg
je
or
movsb
into
push
aad
ds
ret
lea
addl
or
sbbl
mov
enter
add
fstpl
mov
fldl
mov
cmp
mov
jo
dec
fisubl
not
fsub
mov
mov
mov
inc
pop
jns
addr16
push
shrl
movsb
sbb
xchg
in
std
xor
jb
push
add
adc
movsl
lea
mov
les
push
in
cmc
jnp
clc
dec
dec
ds
mov
je
xor
mov
pop
xchg
pslld
roll
push
out
sub
repz
sbbb
xchg
xorl
jl
inc
mov
or
sarl
mov
in
push
push
sub
shrl
dec
sbb
adc
ret
sar
in
push
dec
dec
mov
dec
test
divl
loope
mov
ja
xchg
push
jecxz
and
iret
or
setg
bound
add
insb
fisubl
mov
push
ljmp
push
mov
lret
mov
leave
ficoms
shl
pop
call
xor
dec
and
bound
mov
fisubrs
test
lret
adc
mov
shlb
jecxz
push
inc
mov
mov
js
sub
xor
shlb
xor
in
lea
in
je
mov
lret
fistl
xchg
and
loopne
filds
cmp
cmpsl
xchg
popf
mov
xchg
leave
jno
sahf
cmp
xor
loope
cmp
jecxz
icebp
add
out
adc
rol
dec
cmp
mov
mov
push
pushf
cwtl
sahf
push
sbb
data16
idivb
dec
inc
mov
inc
dec
aaa
cmp
fwait
cwtl
push
andb
xor
mov
call
ja
std
pop
pop
cli
hlt
subl
lret
insb
inc
icebp
xor
jo
push
sti
stos
sub
out
dec
xchg
push
js
icebp
lret
pop
int
out
test
leave
cmp
leave
and
ljmp
jno
mov
gs
sbb
sti
sbb
cmp
in
gs
xorb
addl
pushf
adc
popa
js
aaa
xchg
pop
loope
daa
pop
mov
cld
ret
jecxz
mov
test
push
pop
call
subb
vmread
dec
lock
cmp
int
mov
cmp
fsubs
in
aas
cmp
into
xchg
sbb
or
inc
ds
repz
dec
sbb
adc
adc
jmp
sub
fdivr
out
fldenv
cmpsl
adc
arpl
mov
sub
imulb
leave
fildl
in
notb
dec
movsb
out
xor
cmc
mov
jge,pn
xchg
jmp
cmpb
mov
outsl
sub
add
fstpt
dec
sar
fisubs
pop
push
cmp
repnz
ja
jo
data16
xor
lret
stos
mov
sub
push
into
sti
jmp
loop
add
rcrl
cld
repz
xchg
lods
stos
callw
xchg
int
push
stc
lea
and
lahf
movsb
sub
rorl
sub
add
dec
jno
mov
repnz
shll
mov
imul
xor
ret
adc
push
mov
push
imul
push
in
mov
popf
cmp
imull
insb
sbb
scas
popa
xchg
pop
add
jnp
int
sar
leave
out
pusha
es
les
dec
bound
popa
lock
sub
repnz
lds
xor
push
fcomps
dec
lret
incl
ror
outsl
test
rcl
cmc
xchg
fmuls
and
les
aaa
cmp
dec
rol
or
rol
xorb
sbb
enter
mov
ret
dec
inc
push
push
je
xor
repz
iret
sub
lcallw
add
push
xlat
scas
daa
data16
arpl
mov
jl
sbb
jge
aam
or
sub
inc
dec
and
pop
add
sti
pop
mov
xor
mov
mov
cwtl
loop
mov
test
pop
popa
inc
out
dec
pop
or
cmpsl
push
sbb
mov
cmp
popa
and
mov
or
movsl
mov
cli
insl
mov
fld
sub
cld
js
lret
cltd
fbstp
loopne
data16
pop
and
or
pop
lods
add
add
push
roll
stos
push
rol
in
jns
cli
push
xor
xchg
inc
dec
icebp
pop
jg
inc
dec
cmp
cmpsb
es
xchg
pop
sbb
stc
lahf
jns
adc
ss
shrb
les
jo
push
xchg
sbb
sbb
ret
mov
aam
push
jmp
xor
repnz
sub
hlt
push
inc
add
dec
dec
les
gs
sahf
cmpsb
dec
and
push
aaa
adc
dec
jbe
dec
ret
push
data16
cmp
sar
je
xchg
pusha
xor
inc
and
push
lcall
or
pop
adc
cmp
mov
pushf
test
test
mov
mov
xchg
cwtl
jmp
iret
push
and
dec
pop
nop
sub
xor
fucomi
or
movsl
or
cmc
cmp
rcr
stos
cmp
test
ss
adc
mov
mov
xchg
test
movsb
mov
dec
and
mov
mov
aad
add
fs
test
push
xor
test
mov
xchg
outsl
imul
pusha
jnp
movsl
mov
test
xchg
lock
adc
data16
push
mov
cs
push
ret
jg
test
push
xor
sbb
lods
mov
imul
cli
adc
adc
out
sub
or
xchg
sbbb
faddp
or
mov
and
xor
xchg
mov
cmp
mov
xor
daa
inc
test
fs
les
ret
xlat
inc
cmpsl
push
test
mov
lcall
ret
lret
ret
push
xorl
icebp
leave
inc
sbb
popa
cmp
in
sarl
push
dec
push
push
sbb
xor
dec
xor
mov
sbb
or
ds
xchg
repnz
shll
inc
mov
pop
rolb
push
xchg
push
stos
mov
fs
loop
cmpsb
cmp
sub
jmp
andb
add
outsb
adc
mov
mov
sbb
jp
hlt
stos
cmp
or
mov
jg
xchg
or
lock
mov
pop
mov
shrb
fwait
push
lods
test
roll
jns
lret
adc
and
mov
gs
push
stc
pushf
inc
lock
jno
repz
and
movsb
sub
pop
ljmp
fistpl
movsb
jnp
mov
mov
or
jo
inc
lret
movsbl
cwtl
mov
and
pop
sti
iret
cs
outsb
push
push
xor
xchg
mov
mov
pop
fcomps
mov
lret
mov
cmpsl
pop
jae
mov
andl
mov
dec
lock
addr16
xorb
cmp
inc
aas
cmp
pop
jmp
insb
int
enter
call
ljmp
inc
xor
lock
hlt
faddl
dec
sub
insl
sub
or
daa
dec
push
cmp
adc
mov
lock
into
test
and
shll
and
add
mov
in
scas
push
ret
adc
je
sub
xor
add
lock
aaa
mov
fwait
loopne
add
adc
push
dec
stos
sti
loope
cmpsl
stos
les
adc
jl
mov
sub
nop
popa
adc
push
ret
pop
mov
hlt
sub
and
unpckhps
bound
adc
cmp
fimuls
xchg
dec
jb
push
mov
jecxz
jae
add
adc
popf
sub
ret
fdivl
pop
mov
xor
adcb
mov
pop
in
in
outsb
jo
jno
int3
insl
pop
and
and
sub
ss
rcll
mov
in
lea
dec
xor
push
xchg
push
mov
in
lcall
scas
fbld
mov
ds
shlb
ja
inc
xchg
add
ja
add
dec
xchg
and
inc
notl
adc
sarl
mov
pop
add
cmpsb
cmc
jno
into
dec
popa
mov
movsb
icebp
adc
mov
or
pop
push
sbb
out
test
in
lods
cmpsb
add
cltd
ret
inc
and
mov
pop
or
arpl
repz
and
fwait
pusha
adc
fucompp
pop
push
inc
jl
repnz
in
and
or
xchg
jne
dec
in
add
sbb
mov
mov
pop
jns
std
ret
sbb
aas
dec
push
sahf
ljmp
push
movsl
lods
and
outsb
out
fstpt
and
pop
cmp
push
mov
cld
imul
leave
ss
sarl
mov
adcl
and
dec
arpl
fidivrs
sub
stc
sbb
jl
push
inc
add
sub
pop
imul
cmp
push
aas
lods
sub
sub
shr
clc
pop
sub
inc
int3
clc
call
push
dec
ja
cli
and
ret
dec
mov
sub
lea
cs
mov
repnz
adc
xchg
push
pop
leave
in
addr16
pushf
lock
cmpsl
cmc
loope
mov
rcr
nop
mov
shl
sub
mov
xchg
push
adc
mov
jge
cli
push
cmp
test
and
add
outsb
xchg
pop
clc
sbbb
cwtl
pop
push
xorl
cli
push
xlat
sub
mov
and
push
mov
jae
mov
and
jmp
cmp
dec
dec
sub
mov
lea
mov
and
push
int
adc
cmp
mov
cltd
sbb
push
enter
into
cmp
fisubs
adc
pop
mov
andl
rol
mov
nop
mov
sbb
das
aad
push
jg
out
call
push
test
repz
int3
push
adc
cmp
push
pop
jmp
call
mov
xchg
mov
cmp
push
shrl
xadd
xchg
ret
mov
pop
sub
push
pop
jo
xchg
xchg
sbb
cld
adc
shlb
or
mov
cmpsb
mov
mov
out
lea
sbb
pop
aad
lcall
mov
pop
gs
test
pop
mov
mov
sbb
scas
movntq
and
jle
out
incl
lret
push
adc
loop
jb
out
out
mov
test
mov
jns
xor
push
jmp
adc
aas
mov
sub
jg
push
mov
and
stos
mov
pop
gs
cmp
sbb
adc
xchg
xchg
clc
lret
mov
out
shll
xchg
imul
aam
sti
lods
test
sbb
out
insb
test
or
mov
xchg
daa
push
jecxz
jl
roll
add
lods
cmp
out
pop
addl
leave
into
insl
xor
or
stos
outsl
int3
fbstp
xlat
pop
add
inc
and
push
sub
mov
xor
adc
repz
cmp
adc
aas
test
xor
sar
jae
andb
and
cld
inc
xchg
in
addb
cmpsb
mov
jne
inc
sub
push
repnz
mov
clc
out
push
out
std
pop
pusha
ljmp
sti
mov
jle
hlt
jmp
xchg
jb
call
jg
ja
cmpsl
leave
shrl
dec
ret
mov
int
cmp
xor
mov
pop
mov
je
inc
push
fdivs
jno
xor
xchg
inc
mov
mov
pop
sub
aam
popf
pop
cltd
xchg
xor
jl
gs
out
xor
jle
or
push
loop
cmpsb
mov
xchg
je
dec
xchg
add
mov
std
jg
push
lods
imul
cmpsb
inc
test
out
cmpsb
lret
cld
ret
mov
mov
in
jecxz
into
sbb
xor
add
repz
out
and
bound
dec
push
and
push
jb
mov
fistpll
cltd
repnz
lret
fbstp
mov
shl
push
mov
out
mov
xchg
or
test
xor
xchg
and
sahf
xlat
dec
fst
out
add
xchg
add
icebp
es
add
sbb
sub
cmp
mov
cmc
push
add
std
pusha
inc
sbb
xchg
xchg
hlt
inc
stc
sbb
pop
dec
or
clc
test
dec
jecxz
pop
mov
inc
dec
mov
test
xor
add
sbb
sbb
jmp
ja
mov
fistl
mov
test
xchg
jp
sbb
inc
outsb
cmpb
xor
inc
fucomi
cwtl
in
pop
adc
sub
jge
ror
mov
scas
mov
pop
or
dec
fnstsw
sub
out
inc
or
repnz
cmpsl
mov
das
out
sub
aam
ds
mov
lea
aam
and
decl
scas
arpl
bound
cmc
sbb
pop
cmp
xchg
mov
fwait
dec
or
es
scas
stos
push
mov
arpl
outsl
in
and
idivl
std
stos
jns,pn
add
or
jae
in
dec
ret
mov
pop
xor
sub
dec
lret
and
fisubrl
sub
lahf
push
bound
fs
mov
out
adc
test
ljmp
inc
pop
push
pop
cmp
adc
ss
push
insl
mov
mov
leave
push
or
jae
jecxz
pop
jle
pushf
je
jp
jbe
repz
ret
add
incl
mov
xchg
sarl
jecxz
pop
or
dec
fcomp
jle
pop
aaa
dec
xchg
in
jecxz
fisttps
fcmove
aaa
das
out
push
outsb
sub
jae
nop
les
dec
mov
cmpb
push
mov
push
and
lcall
je
cltd
or
inc
popf
xor
sti
or
jno
push
adc
mov
jae,pn
adc
xchg
pop
dec
pop
pmullw
mov
mov
mov
xchg
add
jl
imul
jg
push
push
mov
xchg
pop
std
mov
clc
push
in
sub
pusha
nop
xchg
jge
xchg
or
fs
push
pop
gs
push
ds
jp
scas
sbb
jae
pusha
pop
add
sub
icebp
sarl
cmc
fldt
push
adc
hlt
insb
daa
lock
out
fucomip
cmpsl
and
cmc
mov
sbb
mov
ss
xchg
mov
repz
mov
sub
xchg
jno
mov
jmp
fs
fcom
data16
sub
jl
movsb
fsubs
data16
insb
push
mov
jns
test
pop
xlat
imul
pop
jb
pop
jmp
mov
aad
or
push
insb
subb
insb
jg
xor
shrb
lods
mov
and
pop
or
pop
mov
push
or
sub
dec
andb
xor
lret
lock
bound
sbbl
pop
or
mov
mov
add
imul
mov
mov
shlb
and
sub
loop
lods
mov
cmp
pop
jmp
jle
mov
sahf
mov
icebp
sub
and
out
add
movsl
or
fwait
jp
mov
fidivs
ret
dec
test
sub
adc
lock
fisubrl
xchg
inc
and
shll
idivb
mov
jge
add
jno
pop
cmpsb
mov
cmp
xor
push
xchg
test
shrb
push
mov
pushf
mov
adc
xchg
adc
pushf
jnp
pop
pushf
mov
test
pop
cmpsl
pop
mov
icebp
mov
push
movsb
mov
mov
sub
cltd
mov
rorb
frstor
mov
addr16
and
outsb
std
imul
fmuls
xchg
push
lcall
scas
outsb
sbb
adc
xchg
cmc
fcompl
shll
xor
shr
insl
jno
mov
inc
jl
or
or
sub
and
mov
dec
fwait
data16
add
mov
out
add
mov
dec
bnd
repnz
xchg
pop
cmpl
cs
stc
xor
arpl
incl
and
mov
jge
js
data16
sbb
lcall
sbb
fstl
xchg
cld
shll
fcmove
fimull
push
mov
movsb
fldt
data16
leave
dec
jne
mov
mov
movsb
push
pusha
pop
jo
js
xchg
jae
decl
inc
imul
rcll
push
outsl
fstl
dec
int
fwait
jno
test
push
ret
outsb
test
jmp
rcrl
jecxz
mov
ds
adc
or
fs
fists
lcall
push
jge
subl
pusha
shll
into
add
mov
add
arpl
sbb
mov
inc
ffreep
shll
xchg
push
add
push
push
fimull
movsl
xor
negb
lods
cld
mov
jmp
and
jne
cmp
int3
imulb
ljmp
test
push
push
xchg
jmp
enter
dec
stos
aaa
insl
ret
ret
inc
out
in
pop
and
popf
rorl
imull
xchg
fs
mov
ret
push
pop
lods
fcompl
jbe
out
imul
mov
scas
cmpsl
xor
pop
adc
dec
lret
mov
shrb
adc
inc
shll
mov
jno
ror
dec
pop
adc
sub
in
add
cmp
sbb
pop
jbe
mov
loope
lods
jae
push
xchg
dec
testb
insl
arpl
cmp
cmpsb
fwait
xor
shll
int
xchg
mov
stos
imul
push
mov
std
cmp
test
push
aad
pop
cmpsb
ret
pop
mov
lock
test
addb
pop
jbe
repnz
mov
comiss
sub
mov
inc
push
bnd
jne
ltr
shrl
mov
out
out
mov
dec
test
xor
adc
imul
jb
xor
cmp
les
sbb
loop
movsl
push
movsb
or
adc
push
adc
decl
aad
xorb
jae
sbb
dec
call
or
mov
push
push
or
and
jne
xchg
jns
mov
sbb
add
lret
mov
mov
pop
xchg
sahf
inc
repz
sub
fiaddl
int
outsb
push
inc
aam
add
dec
pop
pushf
cmp
jae
pop
pop
movsl
sub
add
cmpsb
ljmp
popa
imul
cmp
jle
pushf
push
les
push
xchg
lods
test
scas
push
xchg
ficoms
sarb
das
je
sarl
out
rolb
push
xlat
cli
pop
orb
and
in
jbe
sbb
ror
add
push
aaa
adc
push
jg
cmp
sbb
movsl
mov
inc
adc
mov
xchg
ret
mov
inc
pop
fldl
sarl
pop
pushw
and
in
or
icebp
mov
or
idivb
xlat
inc
jmp
lret
jno
loope
pop
out
mov
roll
daa
jb
cmp
lret
pop
xchg
in
adc
mov
add
or
cmp
xor
mov
fsubr
xlat
loop
adc
xlat
mov
ljmp
jns
jge
out
mov
xchg
xor
mov
or
loope
or
fdivrl
xor
mov
jecxz
jns
test
andb
shl
rcl
pop
add
sbb
scas
mov
mov
mov
push
xlat
mov
out
into
cmpl
sarl
mov
push
aam
rcll
push
test
pop
in
cmpsb
push
or
in
mov
arpl
sbb
mov
sbb
and
in
sub
cli
cmp
adc
xchg
sti
mov
int
call
std
int
bound
adc
ja
mov
add
xor
mov
outsb
mov
cmpsl
xlat
flds
enter
mov
icebp
subl
cwtl
jle
hlt
push
icebp
arpl
push
out
aad
scas
lds
adc
gs
cmp
sub
mov
mov
inc
lea
push
loop
add
sbb
and
pop
or
ljmp
cmpsl
mov
orb
inc
mov
adc
cli
pop
adc
xor
xlat
enter
push
ficoms
inc
mov
add
xchg
popf
inc
es
xchg
xchg
pop
pushf
mov
rcl
inc
sub
stos
jmp
leave
fdivrs
pop
test
cmp
jg
jl
mov
and
add
idivl
arpl
mov
sbb
xor
xor
jle
subl
sbb
cs
or
aas
cmpsb
adc
xchg
clc
inc
mov
fbstp
mov
pop
nop
icebp
test
cmp
jne
fiaddl
jg
iret
fisttpll
nop
sti
cmp
cs
inc
mov
in
push
into
jo
testb
add
out
js
hlt
xchg
adc
pop
xor
mov
es
pop
int
das
mov
shrb
cmp
leave
rcrl
pop
fwait
cmp
inc
mov
out
mov
push
sub
sub
int3
cli
push
jno
repnz
loope
cs
push
filds
pop
adc
lock
xchg
test
mov
adc
cmp
movsb
pushw
fdivrs
mov
jecxz
jge
stos
inc
xor
mov
jno
scas
insb
xor
loope
faddp
ret
dec
mov
sub
out
mov
lea
clc
xchg
aad
cs
sub
inc
fistpll
lods
xchg
pop
mov
inc
dec
testb
pop
push
add
jae
xor
fistps
xor
mov
mov
test
pop
and
mov
sbb
pushf
cmp
sub
aam
add
xchg
roll
sub
xchg
aad
ficoms
xor
insl
pop
pop
add
outsb
sbb
dec
or
cli
mov
inc
sub
xlat
mov
jp
sarl
jns
into
sbb
mov
jno
add
sbb
cmpsb
pop
sbb
in
and
xchg
push
fmuls
addr16
stos
inc
inc
xor
es
dec
or
sbb
data16
and
popa
shl
mov
mov
pop
fnstsw
mov
mov
sbb
ret
test
out
lcall
jl
mov
fcoml
mov
push
stc
stc
mov
mov
shrb
pusha
pop
iret
lods
lock
xor
incl
mov
mov
or
push
cmpsl
mov
add
scas
sbb
aam
movsb
loopne
sub
xchg
inc
aaa
iret
jl
mov
mov
repnz
pop
repnz
rclb
push
cmp
inc
sub
and
sti
push
pop
cmc
imul
jecxz
sarb
pusha
push
cmp
repnz
rcrb
fidivrs
mov
mov
fists
push
mov
push
adc
pusha
sahf
insl
mov
mov
dec
fadds
ss
mov
rcrl
mov
mov
adcl
and
imul
gs
int
lret
pusha
pop
inc
aad
dec
loope
sub
shll
ret
sarb
jle
test
mov
sarb
call
fadds
aas
xor
dec
adc
or
jns
movsb
paddsw
clc
mov
sbb
add
xchg
enter
xor
aad
jne
nop
xchg
data16
push
push
into
sbb
popf
push
pop
dec
push
fnstcw
repz
test
aaa
test
lahf
sbb
and
mov
jno
in
inc
loope
mov
loop
mov
or
add
cwtl
roll
in
insb
mov
insl
loopne
sarl
push
ja
ret
insb
mov
cmp
or
xchg
leave
mov
test
ss
dec
out
pusha
jae
shrl
je
outsb
and
pop
in
xchg
lret
pop
push
mov
add
and
scas
sbb
add
sbb
pushf
jno
lock
push
sbb
repnz
clc
xchg
xchg
xor
int3
hlt
push
sub
and
lahf
add
mov
movsb
mov
ss
je
add
loope
rcl
les
addl
inc
fstps
jo
sarl
leave
cs
lahf
mov
jns
cmp
outsl
xchg
mov
xchg
sti
ret
push
repnz
push
xchg
push
outsb
mov
xchg
mov
add
ja
aad
adc
push
xchg
xor
cmpsb
adc
call
cli
movsb
mov
fs
jmp
mov
cmpsb
out
jne
daa
mov
cmp
mov
jmp
mov
dec
mov
pop
sub
data16
stos
fcomps
pop
in
push
pop
push
shl
ret
lock
xchg
add
rorl
ljmp
in
mov
mov
mov
mov
cld
fiaddl
dec
pop
out
push
xor
xchg
in
pop
call
fcomi
jg
aas
push
imul
push
int
stc
push
or
push
dec
add
out
testl
xorl
adc
cmpsl
fistpl
or
lret
ficoml
push
sub
fwait
pop
pop
test
gs
adc
sub
mov
jp
cmp
or
xor
int
jl
rcl
cmpsb
pop
fimull
lahf
movsl
xor
pop
pop
fists
xchg
push
push
inc
popf
pusha
jl
clc
in
movsl
mulb
insb
add
mov
lcall
andl
add
pop
mov
lret
testb
sub
push
jo
es
adc
sub
add
xchg
and
xchg
ret
mov
int3
pop
sti
es
int3
xor
push
sub
loopne
cmp
shrl
loopne
sbb
jns
xor
jbe
push
scas
popa
and
ljmp
ficoml
adc
fcomps
int3
and
or
sbb
dec
mov
repnz
push
mov
jnp
jae
cmp
mov
data16
dec
out
or
pop
jno
sub
push
lea
add
mov
mov
out
insb
hlt
lods
xchg
and
scas
movsb
add
movsb
ds
leave
push
xlat
add
daa
scas
push
jb
lods
lcall
mov
sub
push
js
inc
inc
addb
pop
fstl
inc
loop
sbb
lret
mov
cld
adc
push
fidivs
dec
cld
rcl
xchg
ret
dec
push
repz
sar
mov
popa
loope
xchg
jno,pt
push
popl
pop
jb
jl
int
inc
aam
pop
lahf
in
push
mov
and
mov
roll
aas
and
sarb
popf
out
in
ss
sahf
popf
jmp
mov
inc
cmp
rcrb
leave
jp
sub
push
inc
pop
mov
lahf
sub
pushf
push
not
dec
adc
or
or
mov
or
xchg
xchg
add
mov
int
arpl
ret
shr
cmpb
xchg
hlt
lret
repnz
iret
xchg
pop
lea
mov
sbb
jge
sbb
push
sbb
loopne
loop
movsb
insb
inc
add
sbb
out
push
xchg
push
xchg
push
pop
and
in
movsl
adc
dec
pushf
lret
cmp
jle
mov
xchg
mov
push
mov
push
add
mov
xor
or
fs
inc
mov
sbb
lock
or
jecxz
mov
xor
sbb
cli
ret
mov
pushl
das
and
and
sbb
xor
in
and
add
in
imul
or
dec
loopne
xchg
sahf
sub
jnp
mov
cmp
jp
ljmp
xchg
mov
fs
mov
or
xchg
pushf
nop
fsubs
pop
ret
ja
push
sub
test
push
jecxz
xor
cmp
es
fucomip
or
adc
xchg
sbb
xor
jnp
stc
mov
cmp
loope
aam
cmpsb
je
movsl
enter
or
jo
stos
adc
lret
jb
aam
and
inc
inc
lds
dec
mov
xchg
add
leave
push
push
push
mov
xchg
scas
dec
or
xchg
inc
ret
mov
adc
xor
mov
cs
pop
adc
lea
xchg
frndint
cmovns
cld
inc
adc
jo
popf
pandn
lds
lock
mov
std
add
ja
in
fidivrl
or
adc
popf
xchg
das
xor
lods
in
inc
and
out
fwait
int3
or
jle
cld
mov
jae
sbbb
adc
ret
popf
flds
jecxz
xchg
mov
rcr
cs
out
enter
stos
xchg
mov
or
lds
and
mov
inc
and
add
cmc
cmc
jo
lods
jb
and
mov
mov
cs
pop
cmc
test
xor
inc
out
pop
push
mov
loope
jle
pushf
dec
pop
sbb
sbb
cli
push
push
fcoms
mov
out
ret
jecxz
xchg
inc
cmp
cmp
aaa
sbb
iret
push
push
xor
push
inc
adc
cmp
inc
aas
cmc
cmpl
fs
inc
lods
rorb
push
lods
ret
bound
xchg
mov
into
jge
inc
lods
push
fcoml
mov
xor
inc
mov
stc
sahf
and
pop
stc
or
movl
incb
in
fcmovb
xor
or
add
je
xor
add
mov
addb
jp
andb
or
jae
or
xor
xchg
pop
adc
jae
pop
mov
dec
pop
xchg
aaa
aad
sbb
and
shlb
lret
adc
fldenv
in
fdivl
aas
lock
aas
sub
or
lods
mov
mov
or
stos
mov
sahf
or
pop
xor
sbb
inc
xor
sbb
cmp
sbb
jo
repnz
sbb
mov
dec
add
mov
jo
jae
shrb
jge
mov
lahf
ljmp
or
xor
mov
scas
sub
std
add
enter
dec
mov
inc
xor
pop
hlt
push
scas
add
adc
and
pusha
dec
pop
lret
leave
xor
ret
imul
or
xlat
mov
pop
ror
push
icebp
loope
or
dec
addb
cmp
jge
mov
clc
xchg
mov
icebp
cmp
mov
movsl
sbb
jmp
addr16
ljmp
pop
jg
jle
ss
pushf
je
jmp
out
in
pop
push
push
pop
jo
mov
ds
push
pop
loopne
out
test
xchg
adc
jns
dec
scas
js
lods
push
jecxz
dec
lret
dec
iret
call
pop
push
scas
jbe
jbe
xor
out
lea
cmp
cmp
fmul
mov
sub
sub
mov
ficompl
mov
push
shr
push
lods
or
xor
lahf
push
sub
and
and
test
dec
lret
test
inc
je
sub
das
rclb
push
adc
jl
mov
dec
mov
jle
cmp
jae
dec
repnz
and
fwait
mov
add
jecxz
pop
nop
fisubrl
mov
or
cmp
flds
in
gs
cmp
rorl
fwait
inc
add
ss
jns
stos
fildl
mov
cmpsl
out
adc
pop
xchg
das
out
jbe
cli
repnz
int3
fbld
fsubrs
add
das
mov
fwait
sub
mov
and
mov
add
or
xor
adc
clc
into
shrb
aaa
lret
test
mov
fwait
jge
cmpl
mov
fsubs
rcll
xchg
negl
mov
shrl
sub
fsubl
cmp
cli
xchg
out
jo
sbb
test
mov
add
sub
ret
scas
lds
pop
cmp
cmpsl
pop
insb
scas
push
pop
pop
std
sub
add
mov
out
push
mov
jg
je
or
imul
mov
mov
insl
frstor
mov
xor
in
fwait
cmpsl
sbb
nop
and
lret
xchg
pushf
outsl
leave
push
fimuls
jecxz
adc
aaa
cmp
imull
lods
xor
mov
cmc
mov
push
repz
sub
adc
test
or
xchg
xchg
aaa
fsts
mov
adc
jne
mov
pop
das
clc
push
jno
mov
dec
cmpb
and
mov
dec
add
outsb
pop
in
inc
xchg
fidivrs
in
outsb
sub
or
ret
lcall
push
lahf
popf
lahf
and
out
adc
or
cld
mov
js
inc
sbb
push
rcrb
jne
cltd
enter
int3
mov
pop
gs
adc
inc
test
out
fildll
jl
aam
pop
mov
mov
xchg
xchg
inc
pop
mov
shr
sbb
push
mov
lahf
mov
jno
fcmovnb
cmp
cld
mov
xchg
mov
cmp
inc
jmp
ficomps
inc
pavgw
push
cmp
movsl
imul
mov
jecxz
sub
add
xor
sub
xchg
xor
pop
stc
ljmpw
or
mov
pusha
push
sbb
aaa
and
jge
mov
cmp
psrad
shlb
in
jns
sub
inc
push
xchg
jbe
roll
inc
in
cli
aam
dec
xchg
or
dec
jp
cmp
cltd
xor
mov
mov
aaa
fsubl
pop
ljmp
pop
sub
pop
rcrl
mov
or
sbb
insl
pop
sbb
aad
je
mov
add
mov
push
cli
xchg
adc
or
jne
clc
dec
cld
sub
cmp
adc
or
jmp
in
cs
sub
jmp
add
aad
jge
jb
pop
sahf
psubb
and
shrb
push
mul
repz
cmp
mov
into
lcall
ficomps
mov
lahf
jle
pop
out
mov
push
lahf
mov
adc
les
add
and
mov
mov
test
adc
stc
les
rorb
mov
inc
cmc
or
stos
and
mov
lods
add
jl
inc
je
daa
jnp
int
lea
xchg
and
shll
lds
push
push
xlat
es
xor
pop
mov
push
std
les
sbb
popa
mov
test
lcall
cld
push
mov
sbb
pop
test
push
jmp
shrb
pop
cwtl
xor
or
adc
sahf
add
aas
jmp
xchg
xchg
stc
nop
lods
xchg
jnp
jmp
ja
mov
js
ljmp
clc
fidivs
xor
adc
cltd
add
and
mov
pop
add
xchg
lahf
mov
mov
mov
xor
fwait
shrl
dec
adc
rcrb
lahf
and
in
cmp
push
pop
jae
adc
stos
push
leave
dec
xchg
fmul
call
push
enter
jecxz
adc
rolb
fistpll
bound
insb
or
popf
xchg
imul
xor
lds
xchg
shll
inc
mov
ss
cmpsl
jmp
outsl
jb
pop
adc
xchg
cmp
int
adc
cli
clc
xor
push
and
divb
push
pop
jbe
push
dec
ss
add
sti
and
pop
fs
test
fcomi
rclb
inc
xchg
scas
inc
dec
sar
mov
mov
popf
arpl
addb
clc
mov
mov
xor
sub
pop
stos
and
subb
cwtl
cltd
shlb
clc
push
mov
sub
shrl
sbb
mov
cld
mov
loope
mov
int3
push
int
andl
arpl
sbb
sub
xor
jg
and
es
mov
nop
imul
adc
jno
adc
sub
ljmp
xchg
imul
lods
je
inc
push
add
insl
sarl
mov
push
push
ret
xchg
mov
push
testl
data16
negl
and
fbld
jl
cli
imul
ret
cmpsb
call
adc
add
or
mov
mov
stos
push
sbb
insl
pop
or
mov
pop
dec
inc
jp
jne
pop
bound
mov
ja
cmp
jmp
jo
popf
loope
ret
xchg
push
mov
lahf
enter
std
icebp
dec
xchg
inc
mov
cmp
push
xchg
hlt
mov
pop
bound
leave
rcrl
jne
xchg
jno
pop
add
movsb
xchg
pop
cli
add
sbb
cmpb
dec
imul
jl
cli
ljmp
add
and
mov
and
xlat
add
pushl
mov
ljmp
cltd
mov
jae
sub
out
fbstp
jo
testb
inc
les
outsl
mov
lods
push
sub
mov
ret
out
fists
rcrb
or
insb
cmp
jge
xchg
xchg
stc
movsb
add
jo
clc
sub
cmp
pop
dec
adc
xor
dec
out
aaa
lahf
inc
shll
sbb
dec
out
popa
push
xor
or
test
insb
push
xor
xchg
addl
add
lock
jle
aas
jo
xchg
lods
mov
xor
jg
xor
add
jp
mov
mov
movsb
mov
sub
test
mov
xchg
scas
adc
mov
shr
mov
and
mov
xchg
mov
lcall
add
jns
mov
rcll
or
scas
ficompl
push
or
das
std
sbb
enter
mov
inc
aad
jb
imul
fisubrl
test
push
mov
xchg
sbb
pop
rcrl
push
cmp
popa
mov
push
jbe
xor
rclb
loop
inc
js
mov
rcl
jle
push
sub
call
call
mov
add
std
xor
add
mov
and
jmp
out
or
in
mov
add
stos
push
sti
rorl
xchg
mov
ffree
aaa
mov
xchg
cmp
loope
mov
mov
push
mov
stos
and
ds
inc
push
jnp
inc
movsb
ficomps
movsl
insb
ret
or
inc
movsl
sub
sbb
iret
xorl
inc
push
shl
push
and
stos
dec
dec
pushf
mov
jmp
in
push
push
inc
cmp
cmpsl
and
mov
aas
add
outsb
cmp
cmpsb
or
lcall
mov
lods
lahf
loop
out
out
adc
cmp
or
sbb
xchg
or
vmread
scas
mov
lret
fstps
testb
ja
sub
jge
mov
pop
enter
jecxz
mov
rcl
dec
sti
mov
loope
out
insb
xchg
cwtl
and
cli
mov
pop
mov
outsl
cmp
movsl
sbb
aas
push
test
push
lds
es
lods
sahf
mov
scas
sub
pop
mov
jmp
jle
cmp
ret
nop
sbb
mov
lahf
sub
fimuls
mov
pop
or
mov
mov
push
test
outsl
ja
daa
fldl
mov
add
inc
sub
or
jg
adc
insb
inc
inc
fwait
pop
fcoms
insl
xchg
test
mov
ret
sub
mov
mov
shrl
iret
out
insl
dec
addr16
aam
cmp
test
jmp
sub
jb
shll
xor
xchg
sbb
jb
jo
push
inc
pop
imul
adc
mov
lret
cltd
lcall
xor
sarl
rcll
out
jecxz
xchg
xchg
out
xchg
xlat
push
enter
stos
sahf
adc
jne
pop
adc
inc
add
sbb
push
movsb
stos
pop
rorb
jecxz
fsubrs
lcall
scas
xchg
inc
inc
and
and
jge
dec
scas
hlt
push
nop
xor
setl
mov
nop
inc
mov
push
inc
hlt
jecxz
xor
loop
mov
xor
out
push
pusha
mov
dec
lcall
push
and
mov
arpl
aaa
in
add
mov
leave
aam
lods
in
and
in
jnp
mov
pop
jmp
dec
sbb
mov
or
lea
pop
dec
or
rcrb
or
ret
repz
negl
mov
test
push
inc
ja
add
mov
icebp
pop
mov
or
aam
xor
outsl
test
outsl
mov
es
or
xor
sub
vpcmpgtb
jne
lret
push
dec
inc
arpl
or
leave
jmp
xchg
mov
xor
xchg
int3
flds
loop
cmpsb
push
xchg
dec
scas
jbe
into
xor
fmull
int
and
pop
xor
push
or
cmp
lahf
loope
xor
repnz
cld
mov
xchg
stc
or
jge
jbe
aam
adc
enter
sbb
frstor
or
push
pop
cltd
mov
sub
lock
ret
fistpll
jo
hlt
add
xorl
cltd
sub
adc
push
cmpsl
arpl
dec
test
inc
xor
jp
and
mov
xchg
je
sub
add
jmp
pop
xchg
xchg
mov
cli
adc
pop
lods
aad
jle
movsl
lods
int
inc
xor
ror
cli
add
add
mov
xor
das
mov
rorl
jns
inc
testb
mov
mov
jb
in
xor
sbb
fsub
jb
lret
push
insb
test
leave
nop
mov
mov
inc
push
jg
push
hlt
cmp
subl
push
aad
loopne
aam
inc
inc
sub
jo
dec
adc
inc
ja
xchg
out
mov
push
xor
mov
stos
pusha
cmpsb
mull
mov
jmp
cmp
ljmp
cwtl
fcompl
mov
mov
inc
aaa
sbb
jno
daa
cli
lods
insl
sub
test
cmp
fwait
movsl
cld
mov
fcoms
icebp
aad
pop
mov
lahf
or
sbb
push
cmp
fs
rorl
stc
lods
lea
mov
ret
add
pop
scas
mov
popa
fsubs
out
fs
xchg
push
ja
ljmp
pop
in
jp
mov
add
fmull
cltd
sbb
push
dec
dec
push
out
mov
cmp
add
cwtl
xor
lods
icebp
js
inc
cwtl
pop
sbb
adc
out
das
mul
jecxz
adc
sub
fwait
xchg
orl
inc
mov
lds
and
jle
fs
pop
xchg
test
nop
add
hlt
or
je
in
mov
pop
jg
pop
xchg
test
xlat
loop
xchg
data16
sub
jo
aad
push
mov
mov
push
cmp
lcall
insb
cltd
adc
arpl
cmp
out
sbb
aad
fcoml
cmp
cli
popf
dec
scas
dec
add
add
sub
and
int3
cs
add
sahf
fistl
jle
sbb
mov
adc
fidivl
xchg
popf
inc
mov
repz
mov
adc
repnz
fsubl
mov
clc
cmp
je
or
mov
ds
mov
xor
sub
push
adc
adc
mov
push
mov
cmp
jmp
in
inc
fnsave
fucomp
xchg
push
jge
xor
xchg
mov
js
adc
repnz
sahf
or
and
and
lea
decb
aaa
hlt
xchg
ljmp
orb
sbb
xchg
adc
daa
subb
xchg
sbb
hlt
loopne
push
jno
cli
gs
sub
xchg
cmp
movsb
inc
jmp
mov
jg
mov
lds
sbb
sbb
out
test
scas
test
jne
ret
xchg
mov
cwtl
push
jecxz
leave
adc
or
ljmp
insb
adc
or
pop
lock
xor
pop
fwait
jl
cmc
xor
test
adc
cs
adc
xchg
xchg
lea
mov
mov
aaa
pop
fwait
loop
es
mov
dec
cmp
mov
mov
sub
xor
add
and
push
inc
pop
cli
loop
mov
sub
sub
push
int3
test
xchg
mov
testl
test
popf
icebp
aas
pusha
ret
push
xchg
cmp
insb
push
mov
cs
lahf
hlt
mov
adc
push
scas
and
and
mov
je
in
add
stos
xor
test
jp
scas
icebp
loop
int
clc
push
ljmp
xchg
mov
hlt
jb
adc
addr16
or
cwtl
jbe
sarl
pop
lods
push
adc
int
sub
clc
xlat
mov
sub
mov
dec
movsl
clc
scas
cmp
xlat
mov
mov
testl
push
popa
add
faddl
pop
xchg
jg
cli
mov
dec
scas
repz
fisubrl
shlb
jnp
mov
mov
mov
dec
cmp
jnp
jle
in
or
js
dec
mov
or
pop
mov
push
lcall
rcrl
icebp
jl
adc
pop
cmp
push
idiv
inc
push
inc
dec
sbb
mov
dec
dec
xchg
mov
lret
clc
sahf
rolb
sub
mov
enter
hlt
pop
mov
rcll
inc
testl
push
push
jge
jne
sbb
pushf
xchg
icebp
jo
dec
outsl
xor
sbb
push
xchg
mov
icebp
hlt
jns
inc
xor
lcall
xchg
movsb
in
scas
jl
add
sbb
cmp
sbb
notl
test
pop
add
xor
out
jbe
and
mov
dec
out
hlt
sub
clc
ds
pop
fwait
enter
loop
ds
js
imul
mov
or
repz
imul
xchg
inc
outsl
adc
rcll
clc
das
sbb
repnz
jle
test
aam
and
clc
push
rcl
and
subl
jge
imul
xchg
fstpl
sub
pop
out
dec
and
adc
jo
xorb
hlt
cmp
stos
lcall
decb
stos
clc
dec
xchg
xchg
jo
push
pop
test
adc
and
repz
ret
jbe
mov
mov
cmp
into
jmp
out
push
sbb
mov
push
rcll
rorb
dec
lods
cs
repnz
add
adcb
pop
shrb
or
xchg
mov
jo
xor
fidivl
popf
mov
icebp
or
mov
repz
xchg
cltd
inc
cmp
and
xchg
cmp
shlb
aad
fists
pop
mov
sub
fmull
test
pop
mov
mov
mov
mov
dec
fisubs
std
cmp
or
adc
shr
mov
out
xlat
jns
jbe
inc
push
leave
in
jp
ret
int3
lret
or
data16
mov
les
inc
xchg
fidivl
out
shl
mov
lret
cltd
xchg
cmp
add
call
addb
in
push
stos
sahf
inc
in
adc
clc
mov
cmpsb
inc
mov
sub
shll
je
sub
jne
xor
mov
push
cld
mov
pop
lret
addr16
negl
xchg
xor
dec
mov
inc
and
mov
push
call
aas
cmpsb
sbb
inc
repnz
call
sub
pop
add
xchg
outsb
shlb
push
jb
mov
les
test
xchg
mov
dec
xor
js
mov
ud1
jno
push
icebp
jnp
jecxz
shlb
xor
xchg
push
in
in
call
enter
pop
sbb
xchg
imul
sub
fsts
adc
dec
pop
ljmp
arpl
lds
add
in
das
add
and
sbb
repnz
or
rclb
add
and
mov
aad
es
xchg
arpl
adc
push
push
leave
data16
xchg
jae
jmp
cmpsl
fcomp
and
cmp
bound
push
mulb
jo
rcrl
ss
sti
shrb
push
xor
into
sbb
aad
test
mov
dec
pcmpeqw
repnz
ljmp
or
mov
and
sti
das
pop
data16
cmp
mov
cmp
jmp
mov
hlt
mov
out
fisubrs
adcb
lods
scas
movsb
aam
and
xchg
dec
sub
pop
sbb
cltd
jb
mov
and
ds
add
hlt
cmp
mov
dec
jns
rol
daa
push
push
insl
pop
fs
in
in
dec
sti
jecxz
sahf
push
outsl
movsl
xorl
aam
sub
xlat
das
sbb
xlat
notl
rolb
xchg
pop
lcall
pop
pop
jno
cmp
fdivs
out
daa
cmpsl
mov
push
sbbl
cmp
inc
rcrl
cld
push
cmc
mov
int3
lret
xchg
insb
push
dec
mov
xor
rorb
lcall
adc
push
scas
movsl
ja
sbb
imul
je
lcall
test
jge
mov
cwtl
lods
mov
mov
push
dec
cmp
jno
lret
ds
std
push
jge
sti
ret
and
cmp
pop
or
cmpsb
aaa
hlt
fistps
sbbb
data16
insb
les
or
jo
mov
push
xor
adc
hlt
push
ficomps
sub
xchg
aaa
ss
test
lds
adc
adc
cmp
loop
inc
mov
xor
cmp
dec
xor
cld
mov
cmpsl
xor
in
daa
in
movsb
das
fistpl
jbe
mov
mov
adcb
in
iret
bound
jbe
stc
xchg
inc
in
pop
rolb
jnp
push
dec
icebp
mov
push
jmp
push
jmp
imul
sbb
aas
sti
add
jo
enter
std
gs
pop
in
stos
aam
int
jge
or
popl
jo
inc
dec
xorl
mov
xchg
test
das
and
lret
shlb
aas
mov
arpl
pushf
and
data16
cwtl
pop
mov
and
out
fldcw
movsl
nop
pop
lods
cwtl
sub
cmp
lret
hlt
jmp
and
cs
sbb
popa
and
xor
andl
mov
bnd
std
lods
rcrb
xchg
ja
stos
test
adc
sub
ljmp
ja
lds
push
jg
mov
js
leave
add
mov
aas
outsb
add
lea
rolb
add
push
fcmovb
and
js
and
incb
pop
insl
and
addr16
lret
icebp
sub
add
rcrb
mov
hlt
test
in
int3
aam
loopne
jmp
js
aad
lahf
adc
pshufw
dec
aaa
sbb
leave
xchg
fidivrl
repnz
push
and
pop
pop
sub
push
sbb
or
jl
sub
dec
je
inc
xor
adc
jne
enter
or
inc
jnp
mov
jp
jb
clc
jge
sbb
lock
add
movb
xor
lahf
mov
out
outsb
cmc
jge
ret
xchg
xchg
mov
and
lea
mov
imul
cmp
sbb
jns
outsb
sahf
mov
test
cmp
popf
shrb
and
std
jle
stc
cmp
mov
pop
aas
sub
mov
push
fldl
loop
imul
add
out
std
stc
daa
jle
dec
xchg
imul
outsb
out
mov
stos
bound
fdivrl
addl
es
int
test
lock
mov
lock
sub
lcall
jnp
sub
hlt
add
or
mov
in
subb
fstpt
mov
push
pop
mov
dec
cli
or
jl
pop
pop
jg
pusha
push
or
sbb
imul
push
jb
or
ja
mov
cwtl
inc
aas
xchg
pop
dec
mov
je
jl
andb
ja
jo
xchg
repnz
xor
mov
cmp
mov
fdecstp
insl
sub
adc
push
js
movsl
cmp
push
xor
js
sub
rorl
fldcw
jle
xchg
fs
aas
lahf
pop
mov
xorb
dec
mov
cld
shll
addb
enter
and
xchg
cmp
dec
sbb
fsubl
inc
loopne
mov
pop
adc
fs
jae
cltd
cmpsb
push
lcall
out
cwtl
imul
xchg
xor
cmp
inc
ljmp
popf
scas
lea
pushf
fldcw
jg
cltd
and
pushf
sub
add
mov
xchg
rcrb
out
add
mov
test
lret
test
mov
nop
pop
aam
cmp
subb
sbb
andb
mov
cmp
std
aad
repnz
inc
fld
xor
xlat
push
jg
pop
arpl
and
lcall
stc
jg
add
cmp
mov
cmp
xlat
dec
in
rcll
pop
and
sbb
mov
xchg
cmpsl
pop
out
add
sbb
out
sub
pop
xchg
movsl
lods
out
pop
fcompl
push
popa
or
nop
inc
mov
rcrl
jae
xor
mov
adc
stos
mov
or
lock
lock
mov
pop
stos
ret
push
repnz
mov
or
mov
inc
xor
pop
fcoml
cmp
in
inc
push
pop
sarl
sub
push
imull
mov
dec
push
rclb
jl
subl
inc
cmpsb
sub
lods
fwait
or
nop
mov
popf
rcr
sahf
pusha
fdiv
inc
jne
pushf
mov
fistps
loope
test
pop
jl
sbb
pop
addl
add
ss
ret
xchg
jp
out
scas
in
leave
sbb
je
sti
dec
daa
lods
ljmp
in
insl
cmc
pop
pop
xchg
lods
add
loope
add
ss
dec
mov
adc
test
add
mov
adc
into
int3
push
adc
loope
mov
xchg
cmpsl
fsubl
mov
aam
and
lea
jle
daa
std
scas
sarl
iret
adc
fiaddl
xor
sbb
mov
sbb
lea
out
popf
out
popf
pop
pop
subb
xchg
popa
aas
adc
sbb
jge
or
mov
rclb
xchg
xchg
jmp
int3
or
std
jmp
test
in
sbb
jae
xlat
ja
dec
cmpsl
imul
push
rorb
nop
and
sbb
mov
lods
mov
mov
lock
stc
fwait
jl
je
stc
stos
inc
in
imul
sti
xor
jge
fwait
repz
std
lret
cmp
incl
cltd
icebp
sub
dec
fcomps
sbb
mov
lahf
call
jle
lret
in
jmp
inc
inc
fistpll
jecxz
push
call
pop
xor
call
filds
push
data16
jbe
test
pop
pop
xchg
mov
pop
ljmp
rcll
popf
movsb
pop
mov
mov
jge
cmpsl
cmp
in
mov
xor
cltd
addr16
bound
scas
loope
mov
test
orb
pop
nop
fbld
or
sub
lods
mov
dec
adc
cmc
sahf
stos
xchg
xchg
addb
inc
cwtl
mov
mov
sub
sub
jmp
jp
mov
dec
repz
sub
push
push
mov
mov
sarl
push
mov
dec
das
jl
add
popa
jmp
push
lods
fstl
xlat
jo
inc
loop
cmpsl
in
rcrb
jne
je
dec
jge
push
sbb
sbb
stc
or
mov
popf
cmp
push
push
jo
xor
jbe
push
mov
nop
pushf
push
mov
sub
es
leave
add
mov
mov
adc
fwait
fwait
pop
sbb
pop
neg
stos
dec
lcall
or
mov
ret
sub
loope
aam
arpl
mov
leave
ss
cmp
lret
loope
dec
mov
into
xchg
fstps
cmp
out
mov
add
mov
sub
and
xchg
mov
negb
pop
outsl
sub
repz
push
popf
push
push
adc
jb
mov
pop
mov
jmp
scas
bound
add
dec
and
or
seto
stc
dec
adc
test
add
sbb
mov
ret
dec
adc
xchg
clc
and
push
sub
aas
dec
js
addr16
add
pop
scas
negb
xor
or
fisttpll
push
shlb
sub
push
mov
adc
jne
mov
aas
in
sahf
lods
insl
dec
adc
push
mov
hlt
ss
or
shll
push
adc
repz
xlat
mov
push
cmp
jns
dec
xorl
repnz
stc
mov
dec
into
mov
in
jo
inc
pop
pop
mov
lret
xchg
leave
imul
inc
pop
jo
test
mov
inc
scas
stos
call
inc
add
cmc
pop
or
pause
cs
xor
sti
pop
sub
cld
push
test
sbb
shl
dec
arpl
sbb
sbb
push
adc
pop
imul
and
mov
push
mov
repz
jns
and
adc
sub
dec
or
cmp
daa
je
xchg
or
or
xchg
in
sub
jmp
or
cltd
les
push
les
frstor
xor
and
mov
mov
lods
add
or
adcb
insl
in
mov
xchg
mov
dec
jno
mov
ljmp
push
cmpsl
je
rcrb
insb
push
jp
subl
mov
inc
jno
and
or
cmp
loopne
add
lcall
out
push
pop
call
inc
ret
push
popa
or
lret
mov
sbb
addr16
leave
push
cmpsb
dec
js
sub
mov
xor
and
testl
push
lds
cmp
in
mov
jmp
mov
sub
js
subb
jno
leave
test
sbb
hlt
aad
in
add
or
add
pop
inc
stos
jb
cmpsb
mov
fldt
pop
fwait
dec
loop
sti
repz
fxtract
or
dec
pusha
mov
mov
or
xchg
aaa
mov
in
js
jnp
sbb
dec
setp
sub
shlb
rcll
mov
mov
cwtl
loopne
cmp
or
iret
and
ret
shr
and
xchg
pop
ljmp
out
xor
jp
rorl
je
subl
adc
mov
fidivs
push
add
sbb
mov
icebp
scas
dec
mov
adc
jp
adc
push
push
ret
sub
mov
add
mov
cwtl
mov
pusha
cmpsb
push
in
mov
xchg
cmp
jp
xor
loop
test
add
pushl
cmp
in
sub
dec
pop
push
les
aaa
nop
xchg
insl
pushf
lea
mov
jl
xor
mov
xchg
and
cli
dec
mov
jle
xchg
dec
pop
int
addr16
shrl
mov
and
aas
es
fidivs
aad
out
sbb
xor
lcall
sbb
mov
dec
in
adcb
push
loope
in
bound
jp
shlb
sahf
xorl
jns
iret
mov
mov
mov
mov
jb
ds
enter
ret
dec
pop
nop
add
outsl
aam
pop
cmpsb
xor
mov
or
cmp
sub
lds
inc
inc
mov
jmp
leave
fcomps
ret
popf
push
sbb
cmp
inc
xchg
xchg
fwait
jg
cmp
imul
pop
inc
out
sbb
add
test
jno
mov
dec
adc
add
xor
cmp
sbb
arpl
jmp
mov
pop
push
and
lods
sbbb
push
cltd
jno
pushf
adc
and
les
cmp
mov
sbb
sahf
lahf
mov
cmc
mov
pop
and
rcr
sahf
in
inc
imul
mov
aaa
or
ljmp
pop
aad
or
cmpsl
xor
in
cmpsb
add
lds
mov
adc
xor
stc
cwtl
test
shl
cmp
ret
push
fsub
int
cmp
fidivs
mov
loopne
adc
out
out
fstps
sub
addr16
cmp
ret
ja
and
push
js
cs
jne
das
and
add
and
add
imul
pop
adc
adc
cltd
movhps
cmp
hlt
mov
jns
xor
mov
nop
sub
sbb
loope
sub
cmp
and
decl
daa
add
jno
popa
adc
popf
push
scas
rclb
test
cmpsl
fs
fcomps
sub
fisubrl
pop
mov
ds
fwait
add
fwait
and
jmp
sub
xor
adc
push
fsubl
jecxz
lock
or
pop
addr16
shrl
xor
icebp
mov
cmc
jbe
xchg
sub
mov
ffreep
shrb
dec
sub
dec
jno
loopne
loopne
int3
push
sub
xchg
in
mov
xlat
sbb
cltd
test
icebp
xchg
js
push
mov
mov
fsub
mov
cltd
inc
fadds
and
adc
stc
jno
or
jecxz
sbb
aam
cmp
sbb
sbb
fs
adc
je
fsubl
movsb
dec
jle
jmp
ret
lock
adc
xchg
lret
scas
dec
pop
ret
sub
loopne
addr16
or
adc
movsl
fisttpl
cs
rol
aad
dec
jb
hlt
pop
sbb
add
cmc
lret
sub
out
mov
sbb
push
and
jl
cwtl
rcrl
pop
xor
push
xor
xor
jg
inc
dec
rcrb
cld
imul
inc
push
and
cwtl
inc
mov
lods
ss
cmp
mov
in
iret
sbb
or
mov
push
jge
and
fwait
jae
out
repnz
xchg
adc
call
pop
cld
dec
ds
mov
dec
jecxz
push
pop
jg
cmp
aaa
stc
mov
jge
mov
pop
or
outsl
jmp
imul
addr16
dec
push
and
shrb
jg
add
or
xchg
dec
push
push
cwtl
nop
ja
flds
dec
jb
sar
adc
das
orl
int3
cmpsl
mov
mov
das
rcrl
pop
int
stos
xchg
loop
xchg
fdivr
mov
xor
or
sub
test
cld
dec
shrl
nop
cmpsb
adc
stc
lret
add
lahf
iret
mov
add
and
add
adc
inc
mov
movsl
aam
inc
add
add
jg
outsl
add
xor
in
xchg
ficompl
hlt
jae
ja
outsb
lock
push
into
and
dec
mov
popa
pop
dec
mov
mov
mov
cmp
stos
or
rcll
aas
sub
push
lcall
jne
xchg
pop
das
sbb
add
jge
push
sbb
fstps
scas
sarl
and
les
jne
dec
cltd
add
push
add
adc
insl
out
out
ja
cmp
rclb
rcll
xlat
nop
rcrb
mov
cmp
rcrb
add
addb
inc
rcl
xor
cmp
stc
pusha
aas
jno
mov
addb
sbb
rorb
push
stos
sub
shlb
mov
add
sbb
sahf
cmp
sahf
xlat
xchg
stos
repz
dec
out
je
shlb
pop
mov
cmp
aaa
xchg
push
rcrl
adc
xchg
and
insl
popf
and
out
jno
dec
push
hlt
push
xor
insl
pop
sbb
push
ds
mov
cmp
lods
jmp
sarb
xchg
loopne
xor
icebp
aam
lds
rcrl
cmpsl
or
sar
mov
mov
jo
out
xchg
push
pushf
js
divl
jg
stos
lea
inc
push
mov
inc
ss
mov
xor
mov
movsb
xchg
push
xchg
jns
sbb
popw
pusha
arpl
clc
adc
repnz
imul
cltd
pop
stc
mov
cmpsl
inc
xchg
testb
mov
ja
mov
test
and
push
adc
and
inc
jo
push
and
mov
xor
pop
adc
jo
jle
leave
lret
push
cwtl
or
and
xor
jae
popf
int3
andl
popa
and
xlat
data16
mov
add
mov
mov
es
or
lret
mov
mov
mov
ja
pop
dec
test
mov
dec
por
repnz
push
inc
adc
xchg
sti
lahf
aaa
pusha
inc
pop
xor
in
adc
dec
lods
mov
rol
jns
push
or
xor
flds
movsl
data16
dec
les
push
and
aas
cmpl
arpl
es
or
adc
repz
stos
mov
mov
adc
popl
dec
dec
dec
jo
ja
sub
sub
call
push
pop
xchg
subl
xor
mov
pop
mov
mov
xchg
mov
orl
mov
push
mov
ret
pop
and
sti
dec
push
mov
cwtl
hlt
or
mov
mov
outsb
clc
xlat
inc
lcall
sahf
lea
mov
repz
sti
add
out
and
popf
mov
jnp
gs
cld
mov
xor
inc
dec
adc
push
cmpb
idivb
inc
inc
outsb
pop
push
pop
pop
pop
mov
loope
mov
adc
mov
ficoms
push
mov
stos
int
enter
jno
fildl
inc
dec
xchg
in
push
out
stc
fisubl
mov
adc
xchg
xor
stos
and
xlat
movsb
cmp
cmp
cmp
lods
imul
pop
orb
incb
pop
imul
stos
mov
xchg
xchg
into
cmpsb
out
add
icebp
ja
push
frstor
push
inc
inc
xchg
out
in
gs
ret
cltd
das
jbe
test
cmc
fdivs
push
in
mulb
mov
jns
sbbb
pop
or
push
jnp
test
pop
push
adc
out
fwait
ss
idivl
pop
out
push
xchg
mov
sahf
pop
cmp
dec
dec
outsl
mov
daa
stos
mov
popf
mov
out
lds
popf
test
sbb
in
push
fxch
rorl
sbb
loope
mov
fsts
insl
fcomps
idivl
cmp
stos
iret
mov
scas
repnz
fcompl
dec
cmp
movsb
xchg
cli
loope
scas
out
dec
jbe
mov
out
or
lods
xor
test
movsl
xchg
dec
mov
mov
mov
sbb
es
jae
lahf
adc
inc
adc
in
cmc
add
pop
jp
mov
les
sbb
dec
int3
sbb
dec
sub
pop
push
mov
out
aad
mov
call
cltd
dec
mov
sbb
jp
mov
inc
out
je
mov
enter
cmp
push
jecxz
mov
addr16
test
push
xor
sub
xor
test
jns
in
loop
adc
mov
jae
cmp
adc
outsl
adc
je
pop
mov
lds
xchg
xchg
add
xor
and
mov
or
stc
test
fidivl
lret
mov
adc
jb
jge
aaa
es
lods
leave
and
lods
jns
repz
jno
repnz
enter
lret
ja
inc
repnz
adc
sarb
arpl
lods
fadds
cmp
pop
aam
in
jae
pop
xchg
push
pop
fdivl
notb
mov
ds
mov
xchg
xchg
mov
in
cmpsl
push
aad
mov
jbe
jns
gs
fwait
int3
icebp
add
mov
hlt
mov
or
and
scas
hlt
ja
mov
cltd
mov
in
popf
in
add
hlt
dec
out
fdivrl
dec
mov
imul
xchg
fwait
push
in
sti
mov
addr16
jo
stc
mov
push
stos
and
pushf
aaa
or
inc
xchg
sbb
and
call
les
push
arpl
push
inc
xor
xchg
fmuls
xchg
int
xchg
cmp
mov
inc
adc
int
sub
cli
rolb
cmp
inc
or
mov
mov
push
inc
aaa
mov
outsl
push
bound
pushf
movsl
mov
add
repz
cmp
push
int
nop
or
sahf
out
xchg
test
stos
dec
jecxz
mov
leave
sbb
inc
dec
pop
pop
sbb
pop
loop
repnz
sti
notb
and
das
cmp
ljmp
mov
fidivrs
inc
push
stc
pushf
scas
mov
in
lret
push
pop
idivl
xchg
add
push
pushf
push
mov
loope
data16
in
ss
jae
lods
xchg
cmp
sti
insb
and
sbb
in
and
mov
jb
jle
xor
xor
icebp
jl
ficoms
add
and
dec
push
sub
cmpsl
or
data16
cmp
lods
in
push
pop
adc
xor
xchg
popf
sub
sub
aam
mov
xor
dec
adc
pop
add
je
mov
or
insl
dec
add
js
ja
mov
ja
jecxz
stos
in
fnsave
push
push
mov
xchg
jnp
cli
pushf
mov
mov
add
xchg
lds
push
push
xor
pop
jb
mov
ret
rcrb
xor
jo
mov
xor
push
jo
shr
std
jns
add
stos
push
or
inc
and
mov
xor
xchg
sub
xor
lret
xchg
cmp
pop
jle
inc
call
xor
inc
push
jecxz
hlt
pop
pop
scas
gs
cmp
mov
cli
cltd
das
jb
loop
ds
cmp
in
aaa
adcb
fs
mov
push
clc
pop
and
loopne
jns
arpl
shll
cmpl
ret
jmp
cli
enter
clc
mov
ret
and
inc
and
test
sti
cmp
xchg
cmpl
or
ret
mov
sub
and
push
scas
clc
or
sub
xor
push
pop
scas
fisubs
sub
xchg
js
call
mov
dec
push
dec
xchg
pop
insb
rcll
fildll
mov
sbb
movsb
ret
push
ja
fldl
int3
das
repnz
mov
stc
xor
cmpsl
cmp
aam
es
orb
sbb
pusha
pop
xor
movsl
leave
sti
xor
inc
stos
mov
mov
movsl
andb
and
and
or
mov
movsb
insb
in
mov
fildll
mov
ljmp
lods
pop
movsb
adc
xchg
dec
jmp
pop
dec
aad
movsb
or
xchg
add
inc
and
adc
out
pop
sbb
lea
nop/reserved
into
jge
mov
jp
push
or
out
add
cmp
pop
scas
loope
mov
sbb
xor
sbb
mov
fnstsw
jmp
or
cmpsl
or
das
cmpsb
sarl
push
dec
xor
sbb
rorb
iret
add
lock
ret
lret
dec
pop
or
xchg
xor
fwait
sbb
scas
outsb
aam
cmp
cmpsb
mov
mov
loope
xchg
dec
int3
push
notl
pop
adc
mov
sbb
mov
mov
hlt
adc
jae
xlat
in
add
pop
or
adc
roll
dec
sub
test
or
fnsave
aaa
mov
dec
cli
ficompl
jle
leave
icebp
insb
dec
or
dec
roll
mov
lcall
inc
pusha
imul
fcmovu
movsb
xchg
or
ds
imul
mov
movb
jo
cwtl
andl
stc
pop
ret
ret
setp
js
mov
dec
stos
popa
xchg
lcall
inc
das
or
cmp
nop
pushf
cmc
push
test
repz
cltd
iret
shlb
jo
mov
rol
repnz
dec
add
push
mov
stos
xchg
or
inc
pop
dec
add
jl
lods
mov
andb
jge
loop
out
notl
xlat
lods
xor
push
cmp
xchg
or
stos
std
popf
mov
xchg
into
mov
loop
cltd
push
ret
xchg
xor
push
push
je
nop
push
dec
sbb
add
jbe
bswap
imul
mov
dec
aas
xchg
and
xchg
pop
xor
orb
insl
sbb
outsb
lock
add
std
fmuls
and
xchg
xchg
cwtl
jne
xor
loop
lock
sub
sbb
repz
out
pop
into
or
mov
in
cmpsl
pop
jg
mov
mov
gs
pop
jo
loope
cmpsl
xchg
mov
pop
ret
sub
jno
xlat
jno
jecxz
cli
sbb
popa
hlt
sti
pop
ud2
outsb
jmp
inc
dec
xchg
sahf
cmp
loopne
vcmpps
sbb
insl
xchg
xor
hlt
int
xor
sub
ss
fwait
pop
test
lret
push
cmp
sti
loope
das
mov
insl
inc
sahf
cwtl
cs
pop
popa
lods
aad
subb
dec
adc
mov
rolb
out
adc
ja
lods
lret
imull
or
dec
cmp
dec
inc
pop
repnz
lret
in
int
loopne
fimuls
out
roll
mov
dec
mov
mov
or
out
add
add
sahf
cmp
add
jle
cltd
mov
mov
or
jmp
enter
nop
test
push
xlat
es
cmp
push
add
push
out
mov
pop
push
shll
or
adc
shll
xor
ds
in
inc
fadds
jp
jnp
and
cs
push
or
inc
popa
jl
and
and
js
ds
rcr
inc
mov
mov
or
fsubrs
adc
dec
lds
in
in
dec
jp
rsm
aam
adc
xchg
add
fdivrl
cmp
cmpsb
mov
jg
fidivrs
pop
cli
add
xlat
ficompl
test
pop
test
ficoml
sbb
imul
pop
xchg
shr
cld
mov
adc
and
jg
das
cmp
cmp
ljmp
sbb
cmpsl
xor
inc
fcom
iret
mov
faddl
cmp
add
fldl
movsb
addl
movsb
sbb
pop
xor
rcll
mov
setl
idiv
clc
push
fisubrl
dec
adc
das
data16
imul
int
dec
cmc
xchg
data16
adc
and
in
stos
adc
pop
popf
test
inc
ror
pop
inc
fwait
jp
mov
or
std
fcoms
aad
mull
ficompl
or
ret
stos
xchg
jnp
mov
mov
jne
mov
xchg
or
jbe
xchg
das
lret
mov
mov
mov
jle
push
jae
xor
pop
push
sub
aaa
inc
push
fucomip
sub
fcmovnbe
lock
test
sti
pop
push
push
stos
jl
push
test
cwtl
cwtl
sub
inc
push
cmpb
pop
inc
jo
mov
repz
cltd
pop
icebp
or
or
jp
mov
ret
or
gs
out
or
push
aam
rolb
iret
scas
dec
cmp
and
fldz
neg
mov
sbb
lcall
xor
xor
stos
into
lds
jmp
jo
or
mov
push
push
cwtl
or
mov
xor
fs
mov
sub
or
push
imull
outsl
addr16
add
gs
mov
mov
jnp
aad
aaa
movsb
fs
scas
push
pop
loope
rcl
cmpl
icebp
mov
mov
dec
int3
icebp
hlt
shlb
fsts
mov
popf
jmp
in
js
imul
inc
testl
gs
lds
pop
push
dec
outsl
insl
out
jecxz
xor
mov
xor
push
push
hlt
inc
mov
push
xchg
loopne
mov
lea
daa
insb
enter
imulb
sti
outsb
or
push
notb
mov
or
scas
and
adc
outsb
jecxz
mov
imul
inc
adc
lret
jo
pop
add
push
adc
cmp
mov
sbb
xor
xor
inc
daa
xchg
mov
into
fcompl
jae
iret
mov
inc
dec
fcom
cltd
lds
push
in
mov
cmp
adcb
push
adc
mov
dec
sbb
sbb
mov
and
dec
mov
jno
aam
ror
daa
and
xor
adcb
fstpt
mov
pop
and
test
mov
cli
pushf
add
mov
dec
sub
sahf
lahf
pop
sti
pop
and
xor
daa
fdivrl
inc
mov
pusha
xchg
scas
and
fisttpll
push
push
or
push
cmp
sbb
js
lret
stos
mov
pop
dec
xchg
mov
mov
add
fcmovne
leave
pop
cwtl
leave
push
xchg
aam
movsb
pop
dec
jno
mull
push
mov
jae
inc
rcl
sub
lahf
pop
inc
xor
adc
adc
scas
pop
push
cli
out
dec
or
push
ds
scas
stc
pop
adcl
adc
add
pop
xor
cmp
int3
push
xchg
push
sub
mov
call
mov
lods
pop
subb
inc
adc
jb
mov
dec
into
xorl
mov
jo
lods
or
int
int
inc
shl
in
cmp
scas
fsubl
inc
ds
dec
scas
sbb
cwtl
sbb
out
mov
scas
mov
xchg
pop
push
mov
xchg
inc
rorl
les
or
sbbl
loope
inc
xor
inc
in
out
pop
popl
lods
lea
mov
insb
push
pusha
rol
clc
out
sub
shrb
fisubs
clc
cmpsl
addr16
fmulp
stc
cmc
mov
dec
in
and
or
mov
add
sbb
jmp
sub
push
mov
adc
adc
dec
adc
xor
sbb
fwait
mov
push
jg
sbb
jecxz
push
dec
add
jb
aad
sti
into
adc
inc
cmp
mov
ds
icebp
rorb
xlat
cld
fcomps
adc
aaa
orl
push
fisttps
lods
leave
sarb
mov
sbb
aad
mov
popa
add
xor
sub
in
gs
imul
aaa
pop
sbb
popf
cmp
push
push
or
jo
js
jno
das
inc
test
jno
outsb
cmp
cs
pop
aas
sbb
out
jg
push
xchg
pop
pop
or
sub
inc
sub
and
popa
sub
push
pushl
lcall
cmp
popa
ret
sub
mov
sbb
sbb
aam
aas
jo
jno
adc
or
inc
mov
lret
mov
dec
fisubrs
sarb
into
les
sub
stos
mov
inc
aas
mov
jno
push
add
adc
sub
xchg
fwait
out
pop
mov
mov
adc
loop
cltd
cmpb
xchg
sub
popa
nop
shlb
dec
je
cld
sbb
lock
in
mov
fldt
cmp
repnz
push
mov
pop
das
cltd
fiaddl
ficompl
ror
jbe
gs
pop
enter
xchg
out
enter
ret
push
jne
mov
gs
sbb
mov
xor
movsb
les
sub
mov
or
cmp
sub
sbb
rorb
or
mov
and
mov
cmp
push
int3
mov
cld
bt
fsts
inc
push
cs
sub
cld
jne
cmp
sbb
and
idivl
sahf
xor
xorb
mov
rcrl
daa
out
mov
lods
cwtl
stc
sbb
sub
push
inc
mov
inc
nop
add
xor
out
xchg
pushf
xchg
pop
add
and
sub
mov
imul
or
xchg
test
pop
movsl
imul
mov
dec
loope
adc
sbb
mov
mov
lds
cmp
jmp
sub
pusha
imul
adc
test
lahf
xchg
repnz
lods
ret
xchg
lods
jb
fstpt
push
test
push
je
adc
fisubs
mov
cmp
cltd
sti
and
mov
xchg
inc
js
repz
inc
stos
pop
andl
popl
mov
push
push
push
xchg
sarl
pop
icebp
jo
popf
adc
add
stos
cltd
add
sbb
sub
pop
int3
fdivl
add
arpl
xor
cmp
jnp
mov
add
bswap
outsl
fimuls
scas
data16
lea
xchg
daa
and
loope
cld
lock
pop
add
jo
sub
or
cltd
dec
arpl
lret
pop
ret
inc
xchg
push
insl
push
mov
sarb
into
movsl
stos
pop
incl
in
imul
pop
negl
sub
or
sbb
rcr
aad
aam
ret
adc
push
mov
mov
xchg
fdivl
mov
jb
stc
into
push
add
call
sub
insl
add
iret
jae
rolb
int
and
pop
mov
or
mov
mov
imul
jae
ret
out
pop
fs
sti
roll
push
push
aad
and
dec
cltd
xor
rol
test
mov
in
pop
and
mov
mov
hlt
cmp
pop
lret
shlb
aam
fs
jae
movsl
pop
cli
shrb
sbb
or
out
add
outsb
cmpsb
ror
test
cli
inc
lock
pop
outsl
mov
fcom
push
push
mov
mov
popf
pop
push
xlat
xchg
adc
xor
add
pop
test
push
pop
rorb
xchg
mov
and
pop
mov
mov
xlat
cs
call
xchg
enter
lods
xchg
pop
arpl
clc
or
mov
orb
scas
int3
mov
lret
or
scas
jp
add
fld
jne
sti
sbb
stc
gs
dec
repnz
pop
fwait
add
in
cld
jle
fsubr
mov
faddl
movsb
ss
jl
ss
mov
mov
shrl
mov
inc
push
aad
push
inc
ja
sti
icebp
aas
les
sbb
sub
jno
cmovbe
pop
mov
or
mov
xor
and
daa
adc
popa
adc
add
rolb
mov
adc
xor
leave
sbb
cmp
out
popa
adc
insb
mov
nop
and
test
fcmovnb
lock
dec
arpl
pop
addr16
les
fldl
loop
cmp
adc
xor
cmp
movsl
mov
add
push
jg
test
sbbb
lock
mov
test
inc
out
dec
into
pop
into
push
nop
cs
lds
mov
push
dec
pop
and
scas
outsl
mov
mov
mov
sbb
xor
aad
ljmp
shr
jnp
or
repz
icebp
cmpsb
sub
push
push
out
push
mov
ret
cwtl
cli
mov
xor
cmp
leave
lcall
xchg
stos
sbb
cld
xlat
ja
and
mov
push
fs
jle
adc
pop
mov
push
jno
dec
mul
nop
cmp
ljmp
imul
mov
ja
fidivrl
mov
cmp
nop
fists
inc
jecxz
out
outsb
lcall
jle
jae
jbe
adc
adc
adc
mov
mov
inc
gs
out
adc
bound
adc
and
and
mov
sub
fmull
jae
add
pushf
sub
sub
add
lea
icebp
mov
jl
insl
cmc
push
mov
insl
stc
and
ja
lret
repnz
jno
xor
xor
add
jbe
scas
pop
xchg
xchg
data16
lods
cmp
inc
mov
shll
push
mov
std
xchg
dec
adc
pop
mov
iret
lcall
test
dec
rsm
sbb
jno
jmp
fstps
lock
jne
pop
push
xor
popl
test
repz
ficoms
pop
cmp
lcall
je
xor
cmp
or
arpl
fmul
aam
ret
repnz
cmp
insb
out
jbe
sti
pop
pop
sub
movsb
pop
fnstcw
and
ficoml
sbb
lock
cmp
mov
daa
sub
inc
pop
test
mov
fsubs
adc
push
in
xchg
addr16
mov
adc
xchg
mov
and
or
mov
popa
or
rorb
ljmp
push
pop
jmp
js
int
popa
repz
push
xchg
cli
or
fsubrp
or
jne
out
ja
mov
aad
ja
loope
jg
push
lahf
jae
cmp
adc
mov
pop
popf
lahf
and
or
int3
ret
clc
fdivrl
dec
scas
jge
jmp
jle
jae
cmp
xchg
aas
mov
and
ds
mov
mov
sub
ljmp
in
lea
ficompl
cmpsb
dec
pop
mov
mov
xchg
cmp
xor
adc
into
push
shrl
sbb
test
test
aas
mov
or
add
aaa
push
lods
cmp
jge
cmp
fldenv
fwait
std
sub
repnz
jno
adc
cli
pushf
sbb
inc
test
add
inc
clc
adcl
mov
fisttpl
push
out
xchg
arpl
jo
movb
addl
mov
fistl
push
mov
fadd
jns
sub
mov
mov
lea
pop
jge
jle
jnp
iret
sub
or
add
cmp
stc
pop
lods
arpl
shlb
das
lds
push
mov
adc
ret
test
adc
and
enter
and
mov
inc
inc
outsl
push
inc
cwtl
xchg
mov
pop
pop
add
or
out
dec
cmp
dec
and
cmp
push
scas
dec
cmpsl
pop
hlt
sbb
pop
fwait
lods
lock
cltd
mov
adc
stos
shr
cmc
mov
movsl
mov
scas
test
xor
cmpsl
pop
sub
add
pop
jg
aad
dec
adc
xchg
mov
fcoms
movsb
sahf
lods
pop
pop
jne
in
mov
adc
or
inc
movsb
sti
lds
je
repnz
icebp
mov
and
je
aad
and
pop
rolb
inc
jnp
fsubl
mov
sub
div
gs
stos
fs
pop
add
push
and
fdivr
push
fsubrl
mov
es
dec
hlt
sahf
fbld
inc
cmp
cmp
mov
sar
cmp
lods
ljmp
push
pusha
out
dec
mov
imul
xor
add
popa
and
hlt
ljmp
sbb
jns,pt
int3
enter
ret
pop
sbb
push
sbb
inc
cmp
xchg
add
lds
lea
hlt
mov
mov
fists
dec
lods
xchg
add
mov
insl
je
dec
je
jl
inc
adc
fadd
mov
sbbl
jb
int3
cmp
dec
je
adc
xlat
out
dec
shr
adc
addl
call
stc
mov
mov
sub
lret
inc
clc
sbb
mov
xchg
mov
test
add
shlb
cmpsb
arpl
or
adc
xchg
sub
into
aas
int3
xor
and
xor
daa
mov
jae
adcl
shlb
push
cmova
inc
cmp
out
add
and
mov
push
mov
loopne
jle
jb,pn
sarl
outsb
sti
lahf
mov
repnz
jg
sahf
jge
inc
jb
fdivrl
xor
les
data16
ss
hlt
push
xor
aaa
inc
cmp
cmp
cmp
or
ret
call
mov
nop
xchg
addb
xchg
xchg
sub
mov
or
pop
mov
into
add
into
dec
jmp
movsb
pop
xor
test
pop
inc
adc
pop
mov
test
scas
lds
pop
xchg
or
mov
scas
js
jno
xchg
out
lret
in
cmp
in
ss
cmp
pop
call
or
ret
sbb
jl
pop
push
jnp
jb
fwait
addb
jge
aaa
insl
sbbl
clc
xor
mov
inc
xchg
dec
xor
sub
mov
push
cmp
or
sbb
mov
ja
inc
movsb
and
gs
mov
loope
lret
insl
or
lahf
cmpsl
dec
cmpsb
or
jmp
test
mov
dec
das
es
jnp
rorl
inc
sub
or
movb
arpl
or
test
dec
xor
leave
call
pop
test
loopne
add
jo
mov
lods
mov
lds
lahf
das
lds
cmp
testl
xlat
ds
and
lea
or
jne
sbb
pop
in
aas
push
ljmp
lock
sub
dec
mov
ja
ja
call
mov
cltd
push
js
into
push
pushf
negb
xor
pop
add
enter
or
mov
addr16
aaa
in
add
sub
mov
mov
pusha
xor
std
mov
cmpsb
int
test
ljmp
je
cmpsb
repnz
rcrb
lret
in
js
push
lret
or
das
bound
bound
sub
mov
lahf
fdiv
mov
xchg
pop
pop
jmp
loope
sub
add
sbb
fsubrs
pop
in
int
pop
lock
xor
and
outsl
in
jo
pushf
mov
pop
sub
add
sti
inc
jns
dec
icebp
rorb
scas
icebp
xor
push
pop
push
shll
lahf
fld
mov
popa
outsl
into
test
mov
dec
and
push
es
mulb
test
xor
testb
mov
popf
pop
push
jge
mov
mov
sbb
les
push
adc
jo
push
dec
mov
mov
xchg
sub
pop
movsl
adc
faddl
shrb
sahf
movsb
sbb
sbb
mull
xchg
mov
or
xchg
cli
mov
mov
xor
xchg
cwtl
lea
les
lds
incb
les
or
push
jnp
fptan
ja
pop
or
icebp
mov
xor
inc
fiaddl
aaa
cld
mov
dec
test
inc
pop
sbb
addl
fiaddl
cltd
add
jae
arpl
mov
ret
cwtl
addr16
cli
inc
jo
add
lret
xorb
imul
pop
push
lds
inc
push
cld
mov
addl
inc
xchg
xchg
data16
adc
je
sub
dec
movsl
lcall
into
sub
fs
mov
push
push
cmpl
cmpsb
sarb
mov
mov
jge
pop
sbb
into
insb
aam
pusha
scas
xchg
dec
push
cwtl
or
lods
push
cmp
and
ds
and
aad
sahf
les
fld
mov
aaa
stos
inc
daa
inc
adc
inc
imul
push
mov
push
shrb
sub
push
push
inc
rcrl
xlat
testl
cmpsb
fbstp
js
pop
in
or
xor
fidivl
inc
or
fmulp
dec
xor
stos
cwtl
mov
dec
pop
test
cmpsl
jle
clc
ficomps
or
pop
popa
add
out
addr16
fisttps
push
pop
cwtl
pop
push
xchg
and
and
iret
lea
cmp
jo
shrb
mov
test
or
dec
or
dec
adc
or
pop
mov
and
adc
stos
pop
dec
std
mov
mov
ret
sbb
dec
arpl
push
inc
ret
jne
adc
flds
jge
rolb
mov
dec
aas
jle
push
movsl
adc
sbb
movsb
rcr
std
jno
pop
icebp
and
lahf
out
mov
sub
xchg
pop
cmp
xchg
jmp
xchg
sub
repnz
cmpsb
xchg
add
hlt
xchg
inc
jb
sbb
dec
ret
cmp
xlat
int3
adc
adc
sbb
lret
push
mov
mov
pushf
add
inc
push
or
stos
push
ret
xchg
cmp
cltd
xchg
push
sub
out
loop
xor
lds
ror
xor
inc
inc
lret
xchg
and
mov
loop
daa
ss
shrl
mov
insb
and
push
push
cltd
mov
lods
es
jecxz
or
sbb
fwait
rcrl
es
insb
cmp
add
fdiv
mov
mov
jno
pop
sti
lods
stos
and
adc
inc
fyl2xp1
dec
lods
inc
jle
push
pop
push
xor
adc
hlt
pop
out
pusha
sti
popf
hlt
insb
mov
dec
or
inc
dec
dec
aam
and
cmp
jp
push
push
nop
test
cmp
mov
cltd
add
and
jle
movsb
jle
insl
ljmp
push
cmpsb
loop
das
lock
push
ret
mov
push
mov
jecxz
jae
mov
add
cmp
hlt
mov
roll
jae
pushf
ret
add
inc
leave
shl
dec
mov
in
mov
cld
mov
and
aam
inc
jg
aad
mov
ror
scas
insb
lahf
in
lock
or
fisubrs
jne
iret
fisttpll
cmp
dec
cli
push
int
mov
sbb
mov
sti
or
fisttps
push
ljmp
xchg
ret
xchg
push
out
arpl
pop
xchg
push
fdivl
subl
stos
sbb
les
mov
jae
push
movsl
roll
lds
pop
push
push
mov
je
fsts
call
mov
jge
ror
insb
hlt
es
dec
mov
ja
xchg
outsl
out
int3
lahf
out
outsb
fdivs
mov
add
int
add
xchg
mov
mov
add
adc
sbbb
imul
incb
jg
push
mov
push
loope
mov
pop
sti
inc
mov
stc
imul
arpl
stos
xor
jnp
es
aas
sti
adc
mov
fisubrl
gs
sub
cld
mov
jmp
icebp
int3
andl
xchg
or
iret
mov
adc
cmp
mov
test
adc
or
cld
addr16
lods
fbld
fwait
pop
scas
das
push
stos
and
mov
inc
lret
arpl
fistpll
lock
je
data16
int3
std
sbb
pop
adc
push
adc
lods
jp
jecxz
adc
jl
push
jno
shlb
int
xor
fsts
out
repnz
shrb
mov
cmp
fmul
mov
mov
adcl
mov
in
cmpsl
sub
test
int
cmp
dec
xlat
loop
mov
scas
or
xor
sub
push
xor
xor
jecxz
outsb
xlat
inc
push
add
shll
push
arpl
mov
xchg
push
xlat
xorl
xor
adc
mov
mov
iret
mov
inc
push
and
xchg
leave
push
mov
imul
sbb
lcall
dec
aaa
mov
inc
cmp
sub
or
lock
clc
lret
mov
fwait
out
into
cmp
add
mov
test
cltd
mov
cmp
mov
insb
push
mov
sbb
inc
gs
push
mov
mov
mov
mov
dec
cmp
data16
sub
mov
es
xchg
mull
or
xor
xor
jae
rorl
out
in
sbb
mov
scas
arpl
fld
cmc
aad
aas
push
test
js
inc
dec
popf
out
dec
xchg
inc
std
mov
sub
fimuls
pop
jne
jnp
decl
mov
mov
dec
or
inc
push
in
les
stos
hlt
xor
fcompl
iret
orb
fistpll
xchg
push
xor
pop
in
push
xor
popa
fs
lcall
mov
cld
cmc
dec
sti
jne
jle
sahf
push
sub
cmp
fisttpll
mov
fidivrs
mov
jle
dec
gs
fsubrl
jo
mov
in
xlat
and
xor
cli
sbb
and
in
repz
mov
daa
jno
mov
rclb
addl
mov
hlt
test
mov
insb
push
xor
stos
arpl
test
aam
push
sbb
mov
repz
ss
lcall
adc
xchg
cli
inc
nop
incb
mov
xchg
mov
sub
in
pop
push
psubusb
or
mov
and
cmpsb
mov
xchg
in
mov
movzbl
hlt
cmc
push
loope
inc
xchg
stos
mov
cmp
and
sub
test
xchg
add
icebp
push
loopne
cwtl
int
sbbl
outsb
inc
sub
es
leave
dec
mov
fildll
add
jle
in
sub
sbb
fildll
std
arpl
sbb
aad
adc
cmp
scas
push
sub
push
dec
mov
xor
stos
fbstp
sbb
mov
rclb
jno
jae
adc
xor
popf
xchg
js
rorb
mov
push
xchg
clc
loope
add
push
ret
and
mov
and
fs
add
inc
lds
sbb
sahf
push
sbb
and
cmp
push
adc
add
lods
fldl2e
dec
mov
inc
sbb
cmp
jbe
jb
rcll
pop
mov
xchg
sbb
and
xor
lret
xchg
cltd
imul
sub
add
push
out
pop
xchg
sbb
lock
out
xchg
xchg
and
mov
mov
mov
add
jno
sti
clc
cwtl
cmp
loope
es
push
or
hlt
push
lea
mov
push
sbb
movsb
push
imul
jb
mov
push
inc
mov
arpl
sub
incb
cmp
inc
and
call
hlt
sahf
add
mov
clc
ret
add
or
lds
xor
add
iret
inc
jb
xchg
cmp
or
sub
mov
add
arpl
mov
push
mov
enter
or
into
dec
daa
sub
pop
mov
sbb
jge
pushl
xchg
pop
and
sbb
imul
sbb
sbb
in
scas
sub
xor
dec
inc
sub
loopne
jecxz
scas
leave
xor
pop
xchg
lret
cmc
xchg
loopne
aaa
shlb
loope
test
repz
push
mov
push
rcrb
ja
cwtl
inc
pushf
push
sub
pop
xorl
pop
adc
mov
frstor
or
in
lods
or
push
outsb
andb
pop
push
pusha
add
stos
push
mov
jg
inc
or
rcl
ret
mov
push
jl
inc
mov
jg
push
jp
jb
and
stos
in
mov
sub
mov
push
sub
push
scas
in
sbb
cld
aaa
dec
rcr
mov
clc
adc
popf
faddp
in
pminub
dec
stos
jo
scas
xchg
iret
xchg
jns
popa
sub
adc
push
sbb
cmp
std
rclb
add
pop
inc
iret
in
sub
push
adc
inc
adc
pop
lret
jbe
cwtl
arpl
cmc
jl
imul
pop
push
gs
pop
mov
outsb
lahf
es
imul
mov
or
xlat
mov
jae
xchg
std
mov
xchg
aaa
repz
lret
and
and
sub
sub
push
aad
add
dec
stos
insl
or
rcl
dec
sub
pop
mov
call
div
ficoms
jbe
inc
les
rolb
lea
loop
stc
ljmp
mov
xor
mov
cltd
mov
ds
mov
or
cmp
iret
xchg
sti
pop
xlat
lock
mov
push
dec
inc
loope
mov
push
add
pop
ret
mov
and
sub
out
addr16
lods
nop
orb
data16
mov
adc
dec
add
add
fistps
int3
addr16
cmpsl
notl
inc
pop
sbb
lea
xchg
lds
rol
and
lret
sub
mov
aad
sbb
pop
sahf
insl
adc
ret
nop
lock
cs
ret
push
divb
lods
es
jb
in
hlt
nop
mov
mov
xor
call
cmp
das
sahf
xchg
push
repz
mov
inc
add
test
fwait
addr16
mov
ret
lea
in
fldl
mov
and
stos
nop
fcom
mov
or
sahf
jge
sbb
fld
dec
add
out
add
cmp
aad
ret
je
cmpsl
pushf
mov
mov
pop
or
mov
sbb
xor
dec
call
arpl
push
cmp
scas
cld
dec
popa
push
popa
in
jle
mov
adcl
mov
dec
sub
outsb
jbe
jmp
lods
ret
rcl
mov
xchg
in
icebp
push
mov
int3
push
ror
test
inc
adc
jl
popa
lret
jo
int
test
mov
roll
jno
out
mov
dec
and
cwtl
sbb
test
or
bnd
bound
data16
push
xor
pop
sub
cmp
mov
lds
or
or
and
xor
repnz
push
daa
inc
cmp
fnstcw
mov
outsl
cs
cmp
mov
mov
ds
xor
addr16
jo
push
mov
dec
sbb
cmpsl
lods
jno
lock
xor
xchg
push
dec
cmp
pop
ljmp
mul
or
xor
ret
stc
aaa
xor
scas
aaa
push
lds
xchg
push
fs
dec
push
jp
inc
cmp
adc
hlt
lahf
dec
int
and
mov
and
fcmovnu
es
lods
sub
stos
rcr
sbb
pop
in
xor
pop
rcl
add
and
ljmp
iret
push
pop
cmp
xor
sbb
stos
movsl
sahf
mov
push
jg
test
xchg
bound
xchg
cmp
rcrb
mov
push
loop
cmp
mov
test
sti
fwait
pop
inc
lcall
mov
aaa
push
insl
and
ret
xchg
pop
add
sbb
inc
xchg
mov
ficomps
fildll
std
cmp
adc
fcomps
lret
push
arpl
in
jns
stc
cmp
lcall
xor
out
mov
ficoms
dec
je
cmpsb
dec
cmp
xchg
cmp
add
add
inc
pop
jle
sbb
gs
jbe
fimull
mov
add
xchg
clc
int
sub
imul
jno,pt
mov
sub
and
xor
int
mov
push
mov
gs
mov
aas
jae
sti
outsl
push
sahf
pop
sub
xchg
mov
jne
cmpb
stos
jmp
adc
test
movsb
lea
test
or
jl
ss
ficomps
jbe
inc
dec
cmp
push
pop
and
pop
mov
jmp
ljmp
loope
inc
cld
ret
movsb
add
shlb
seta
push
scas
xchg
pop
into
push
ss
clc
mov
mov
mov
orb
xor
aad
es
mov
mov
scas
cli
fwait
mov
xor
fsts
mov
cmp
fwait
repz
pop
lret
sub
sbb
sahf
and
xor
mov
mov
pop
inc
imul
ds
pop
cld
mov
and
push
mov
cwtl
je
or
xchg
pusha
ds
iret
movsl
rclb
mov
leave
ja
out
jmp
xchg
out
ret
rolb
mov
sbb
cmp
push
sbb
mov
sbb
xor
pop
int3
pushf
in
cltd
je
mov
pop
mov
inc
sub
mov
jbe
in
or
popf
pop
ljmp
mov
pop
xchg
loop
ds
aad
inc
fnstsw
pop
test
fdivr
sub
shl
dec
jmp
out
sbb
jnp
stos
lret
clc
scas
mov
je
das
in
push
rclb
xor
les
jnp
add
and
in
mov
jg
xor
xlat
icebp
mov
int
add
and
cwtl
push
pushl
outsl
jnp
jbe
mov
xor
inc
push
add
adc
mov
hlt
mov
and
pand
dec
das
ret
jb
scas
adc
xlat
les
int
je
xchg
shll
sbb
inc
rolb
imul
jo
jo
adc
scas
ljmp
outsb
add
stc
repnz
ljmp
and
sbb
lcall
sub
lahf
dec
ret
inc
inc
popa
call
dec
aad
push
pop
imul
and
push
sub
pushf
pop
sub
subb
xor
in
movsb
jns
inc
mov
add
in
movsl
jl
xor
and
aas
add
xlat
mov
inc
loope
adc
in
sub
mov
xor
nop
subl
dec
push
inc
lea
push
andl
addl
and
rorl
lods
test
jne
pusha
cmp
jp
clc
adc
cli
mov
fs
inc
mov
bound
xor
push
mov
fldl
into
aas
inc
adc
dec
fldt
xor
dec
test
sbb
xor
xor
cltd
add
inc
enter
jge
push
sub
mov
push
insl
aaa
jne
sarb
jne
cmp
push
jl
sbb
or
xor
call
imul
xchg
cmp
bound
call
test
push
or
fldt
inc
loop
push
jmp
imul
scas
push
lds
or
jnp
inc
dec
cmc
or
insb
mov
add
mov
jp
fisttps
add
bound
fnsave
xor
push
out
daa
mov
insb
xchg
add
jge
or
mov
or
push
mov
pop
sub
mov
add
mov
outsl
sbb
push
mov
cltd
mov
aam
pop
jl
out
aam
in
std
inc
pop
dec
mov
imul
mov
and
sub
and
mov
inc
mov
arpl
out
fadds
fcoml
xchg
pop
sahf
jne
cli
ja
fwait
outsb
cmp
and
jmp
xor
push
arpl
sbb
adc
outsl
nop
inc
jae
mov
mov
repz
loope
mov
jmp
lods
sahf
scas
lods
scas
push
imul
adcb
xor
mov
jl
pop
inc
mov
lock
cmp
inc
loop
addr16
adc
sbb
clc
inc
in
push
pop
int
mov
cmpsb
inc
push
jmp
sbb
lods
cwtl
mov
sub
mov
push
sbb
stos
jb
push
dec
addl
fstp
sti
shll
dec
adc
jno
inc
xorb
inc
pop
in
scas
push
cmp
imul
mov
add
sub
xchg
jno
rcll
nop
add
pushf
mov
adc
cmp
aaa
adc
xchg
fstl
std
cmp
xchg
mov
outsb
push
add
or
aad
push
lods
jecxz
test
ss
nop
repnz
jns
inc
lods
sbb
push
xcrypt-ecb
cmpsl
or
cmp
sbb
adc
andb
ss
and
cmp
ret
scas
imul
adc
ret
jno
sub
sub
negl
lret
xlat
lret
and
mov
and
lods
fstp
pop
jl
xchg
fwait
mov
aam
pop
imul
cmp
push
cld
cs
adcb
enter
jb
xlat
call
mov
js
xor
xor
xchg
outsb
inc
jle
jmp
jo
jo
cwtl
xorb
dec
jnp
test
sub
orl
mov
mov
mov
enter
stc
add
pop
xchg
xchg
dec
loopne
loope
cmc
cmp
jp
adc
pop
aam
mov
enter
icebp
jb
xor
pop
rorb
aad
adc
pushf
out
icebp
inc
adc
push
test
mov
fidivl
sub
insb
push
repnz
test
sub
aaa
outsb
add
imulb
mov
adc
frstor
cld
dec
sub
ror
inc
xor
test
int
inc
loopne,pt
inc
stos
push
and
outsl
cli
cmpsb
movsb
shlb
inc
ficoml
lea
fisttps
test
and
jmp
les
jl
inc
hlt
mov
add
mov
sbb
sub
lds
sub
sbb
ss
xchg
repnz
into
fs
sbbb
mov
daa
insl
xchg
nop
mov
cmp
xchg
stc
sbb
data16
dec
mov
add
mov
aam
insl
cmpb
xchg
ss
or
mov
and
inc
hlt
and
cmp
insb
mov
mov
jl
dec
pop
and
cltd
out
cwtl
in
cmpsl
mov
js
push
cmp
cmc
ds
jo
dec
jle
jne
inc
ss
add
test
fdivrl
xchg
into
jno
push
aad
pop
inc
fadd
shlb
rcll
add
mov
imul
mov
lea
bnd
mov
add
std
nop
js
cmp
fwait
mov
or
mov
mov
mov
jns
shl
xchg
orl
mov
mov
test
or
popf
lods
sbb
and
scas
sbb
mov
dec
or
ficompl
outsl
xor
cmp
xor
das
inc
ds
icebp
cli
iret
out
pop
call
fwait
push
sbb
sub
scas
sub
fdiv
jne
pop
adc
adc
popf
scas
and
sub
mov
sbb
out
cltd
das
call
icebp
das
sarb
orb
aam
daa
dec
fcoml
sub
out
and
adc
xcrypt-ctr
cmpsl
pop
cli
jb
jb
mov
dec
mov
push
and
sub
pop
push
or
ds
lock
adcl
repz
shrl
outsl
test
sub
stos
imul
adc
xchg
leave
popf
loop
cwtl
insb
adc
pop
pop
inc
and
call
and
imul
aam
es
mov
inc
out
scas
dec
xor
mov
out
out
add
sbb
rclb
jae
jb
lahf
imull
or
movsl
ljmp
xchg
fstl
mov
push
mov
mov
push
pop
xchg
sbb
inc
push
xor
pusha
and
pop
adc
dec
fldenv
sti
push
fs
idivb
mov
xchg
loope
push
jae
dec
mov
pop
ds
jg
daa
jb
in
fnstenv
lods
rcrl
and
ljmp
test
lcall
cmp
dec
mov
dec
xor
sarb
sbb
xlat
sbb
stc
mov
mov
lret
mov
pop
es
mov
mov
xorb
push
insb
les
in
jp
or
and
mov
lods
jl
add
cmp
shl
call
test
orb
xor
push
test
inc
mov
iret
mov
stos
loope
add
sub
ret
adc
cmp
add
mov
and
add
lods
dec
sub
sti
sbb
test
adc
leave
add
or
popf
scas
mov
xor
lcall
mov
adc
fstps
shll
ljmp
adc
jbe
xor
cld
inc
in
xlat
stos
dec
loope
mov
dec
in
cmp
mov
iret
in
int3
fcmovb
in
bound
popf
out
push
repnz
mov
inc
fsts
ja
sub
mov
aam
cmp
out
mov
or
stos
rorl
aad
mov
xor
cmp
dec
mov
push
sbb
mov
sbb
inc
xchg
jg
sub
stc
mov
insb
pop
mov
push
fs
and
mov
or
inc
sub
das
nopl
stos
mov
leave
aam
push
mov
lods
push
test
fisubrl
imul
cmp
push
ja
in
jb
aad
mov
std
adc
mov
cmp
and
mov
lods
imull
mov
iret
and
es
add
pop
leave
jns
dec
adc
jmp
and
cmp
xlat
imul
mov
and
inc
add
push
dec
daa
pop
in
in
dec
cmp
mov
cwtl
fisttpl
clc
xchg
xlat
outsl
xchg
pop
add
fists
jle
jge
arpl
xorb
adc
ds
mov
popa
das
fwait
mov
sbb
stc
xchg
sbb
jbe
iret
cmp
add
repnz
pusha
shll
mov
push
out
xlat
inc
popf
mov
lods
loope
lea
dec
mov
aad
xchg
push
xchg
sub
add
in
and
mov
jg
roll
inc
lret
out
and
test
popa
rorl
xor
pop
dec
cmc
bound
jbe
pop
cmp
push
les
push
pop
adc
nop
cmpsb
xchg
jae
mov
fs
loope
cmp
nop
mov
mov
pop
ljmp
cmpb
sub
cmp
lods
dec
ja
dec
mov
loope
and
bound
shl
sub
pop
sub
movsb
pop
add
test
clc
jno
fcmovu
ss
inc
cmpsl
or
sbb
dec
xor
or
add
mov
add
in
ljmp
call
popa
adc
push
pop
push
adc
inc
mov
sbbl
into
imul
inc
lods
push
jl
lods
jge
cld
dec
and
in
lea
outsl
icebp
xchg
sbb
les
xor
add
arpl
and
cs
jecxz
or
cmc
adc
push
cmp
sbb
mov
mov
inc
xchg
lcall
mov
lods
mov
xchg
fwait
pop
add
mov
ret
xchg
je
dec
xchg
xchg
push
into
dec
lcall
and
test
add
cmp
fcmovu
or
and
rclb
fisubl
push
leave
sahf
xchg
adcb
push
ret
jae
std
xchg
gs
imul
pop
jns
icebp
idiv
out
add
mov
push
cld
clc
in
mov
outsb
mov
int3
and
lret
iret
mov
dec
in
push
adc
add
sarl
inc
sbb
pop
inc
lds
sbb
jmp
cmp
xchg
in
orl
sub
push
and
sbb
xor
sbb
xor
push
sbb
pop
lea
stc
add
fisttpl
sub
push
jge
push
jae
int3
inc
push
cmp
xor
mov
jge
mov
cmp
sub
add
mov
push
pushf
xor
jns
lret
mov
jbe
testl
push
aad
cmp
adc
iret
test
cwtl
mov
mov
jg
jns
cmc
dec
push
dec
popf
fwait
inc
add
repnz
mov
cmpsb
lcall
xor
xor
insb
inc
cmp
mov
in
push
loop
std
shl
mov
pop
lock
rcr
or
xor
sub
mov
fdivl
and
bound
dec
std
or
push
cmp
jb
push
cmc
das
pop
daa
in
xchg
dec
inc
mov
mov
mov
shll
or
call
push
sub
cmp
imul
in
xchg
sub
bound
push
and
pop
aaa
hlt
xchg
gs
mov
repnz
ljmp
fs
dec
in
mov
in
xchg
push
push
shrl
ss
cs
stos
loopne
ret
and
addr16
jmp
cld
xor
xchg
clc
lcall
push
sub
aaa
leave
bound
lcall
lcall
jno
push
je
cld
repz
repnz
or
fstps
test
rcrl
cmp
ficompl
xchg
inc
jmp
cmp
adc
rorl
xor
jmp
js
jp
mov
mov
cli
jmp
adc
jle
daa
aam
pop
dec
inc
push
and
rcrb
jns
jbe
inc
cli
lods
out
out
subl
dec
and
sarl
mov
mov
jbe
ja
nop
xchg
mov
lds
fcoms
fsubp
stc
pop
push
jns
test
and
or
push
sub
push
push
pop
imul
mov
mov
mov
pop
es
push
mov
sbb
mov
fdivl
jge
scas
mov
clc
pop
add
arpl
jae
push
sti
push
fs
sar
movb
xlat
pop
sbb
xorl
fadds
popf
leave
in
cmp
and
fisttps
dec
int
cs
adc
dec
movsl
test
adcl
xchg
jne
out
push
and
cmp
mov
jle
pop
cmp
jmp
xor
ficomps
push
lahf
leave
ljmp
sbb
stos
jns
loope
cwtl
cmp
insl
mov
jb
adc
xor
sbb
mov
stos
or
lret
imul
jnp,pt
pop
dec
push
cwtl
mov
mov
xchg
in
inc
pushf
mov
into
add
in
ja
add
cmp
in
cwtl
cmpsl
pusha
lods
mov
loope
sbb
push
inc
mov
sbb
push
pop
loop
sub
outsb
leave
jae
and
push
addb
inc
in
sbb
nop
mov
gs
sbb
mull
sbb
fsubs
pop
push
mov
int
jae
shll
scas
lret
sbb
fldenv
jp
sub
stc
je
push
repnz
rclb
fisttpl
scas
jbe
mov
fdivs
aas
mov
gs
mov
mov
xor
fists
ficoml
call
aam
inc
pop
xor
and
pop
and
cmp
pop
add
or
jmp
pop
cmc
and
jg
es
das
scas
test
and
insb
mov
xor
jne
call
loop
xor
scas
dec
add
or
sub
loope
jp
cmp
sbb
pop
push
outsb
push
xchg
mov
imul
iret
sbb
sub
ljmp
movsb
sbb
inc
test
sbb
lock
xchg
inc
in
lahf
sbb
mov
stc
or
arpl
loopne
sti
push
add
pop
push
stc
and
xchg
into
rol
testl
jnp
leave
lods
xor
sbb
push
and
test
je
dec
out
add
pop
push
mov
or
stc
mov
cltd
mov
movsl
loopne,pn
fdivrs
mov
icebp
movsl
std
movsb
xor
hlt
sub
das
mov
mov
adc
xchg
xor
imul
mov
out
mov
out
in
sub
and
mov
sbb
jne
mov
cmp
sahf
pusha
lods
ljmp
adc
jbe
or
mov
fs
jnp
stos
mov
sub
loope
fsts
repnz
mov
scas
push
adc
scas
sbb
out
and
sbb
pop
lahf
cmp
and
push
pop
sarl
push
scas
jbe
push
dec
inc
mov
sub
notl
dec
add
mov
test
and
insl
leave
xchg
jmp
in
lahf
or
sahf
aam
add
jmp
xor
inc
stc
xrelease
repnz
out
xlat
push
loopne
shlb
add
sub
ffreep
mul
adc
pop
and
and
cmc
xor
or
add
pusha
popa
inc
xchg
ljmp
adc
or
mov
dec
outsl
add
loopne
inc
adc
es
in
ja
outsl
les
jp
out
stc
sbb
or
inc
icebp
insb
pop
mov
adc
mov
pop
or
pop
popa
push
or
roll
leave
jns
push
cmp
and
and
cmc
mov
sub
cmp
in
and
push
push
dec
insl
fidivrl
xchg
jmp
cmp
dec
pop
sub
lds
pop
xchg
stos
jae
int
sbb
sbb
mul
jb
push
xor
dec
sbb
fildl
fwait
shr
sahf
jne
rclb
push
scas
pop
repz
lcall
add
fwait
xchg
add
add
stc
adc
add
pop
out
shl
bound
mov
or
push
lock
mov
adc
dec
bound
sti
xchg
inc
cmp
xchg
inc
aas
cmp
out
rcll
ljmp
xor
push
dec
jmp
or
add
jb
test
xchg
mov
faddl
xor
daa
je
stos
in
aaa
aaa
ret
imull
shrb
stos
les
jl
xor
inc
das
push
ja
dec
lods
out
lds
adc
inc
jge
and
cmp
loope
hlt
jmp
lahf
sub
je
inc
add
loopne
sahf
adc
dec
mov
xchg
arpl
jp
xchg
sahf
adc
jle
fcmovne
sahf
adc
and
xchg
sub
cwtl
ret
or
out
jo
ljmp
repnz
sbb
push
push
pop
or
xor
in
adc
rep
mov
sbb
xchg
sub
int3
push
adc
std
es
fsincos
popa
test
xchg
xchg
fwait
es
dec
push
mov
jmp
adc
or
push
inc
mov
icebp
in
fs
je
jge
nop
jnp
cmc
xor
mov
fstl
les
mov
ret
dec
xor
or
lahf
insb
dec
int
ret
shlb
sub
mov
faddl
mov
ss
lds
std
lds
daa
or
cmpsl
scas
lds
mov
shlb
sbb
cmc
stos
xor
lea
add
dec
fwait
es
cmp
xchg
add
dec
sub
mov
dec
jecxz
sahf
sub
or
repz
jmp
cmp
je
rcpps
adc
mov
mov
arpl
scas
sahf
sbb
push
shl
xor
inc
fcmovne
cmpb
enter
push
jbe
stos
push
mov
movl
testl
mov
cmp
out
inc
fsubrs
jl
jno
cmp
dec
mov
ljmp
and
data16
in
test
cmc
call
enter
inc
mov
mov
adc
jmp
xchg
lahf
sub
fstp
sbb
mov
mov
dec
add
scas
inc
dec
cwtl
mov
push
in
movsl
movsb
add
test
or
lods
cmpb
mov
jl
in
cmp
mov
sbb
stos
sub
push
addr16
shr
or
outsl
dec
fsubs
push
addb
add
sub
lahf
es
decl
mov
inc
mov
or
adc
xlat
cwtl
push
cmp
pop
sbb
push
jnp
imul
out
push
pop
inc
loopne
sbb
sbb
xor
movsb
ret
insb
jae
sbb
xchg
push
lahf
cmp
cmpsl
scas
xor
clc
je
jno
ds
xor
jns
dec
sub
jmp
dec
ror
mov
mov
popf
cltd
lcall
mov
dec
xchg
pop
cwtl
clc
into
aaa
bound
int
push
cmp
cmc
push
out
adc
and
mov
imulb
sub
xchg
push
add
sbb
lret
dec
sub
divl
inc
add
sub
and
divl
cltd
mov
loop
add
pop
pop
lcall
loop
mov
add
mov
add
push
rorl
cmp
lahf
jb
sbb
mov
sbb
pop
jns
aam
dec
mov
xchg
fs
je
xchg
shll
pop
add
mov
fstpl
iret
xlat
sub
adc
es
jae
xor
inc
mov
and
sub
fs
sub
cmp
add
jnp
lret
fildl
fisubl
mov
jl
push
popf
cwtl
jle
cmc
cmp
test
mov
sbbl
inc
arpl
add
rclb
lods
mov
cmp
insl
aaa
out
xor
stos
decb
mov
in
add
xchg
mov
sub
xor
dec
jge
popa
cmpsl
push
xorl
xor
test
mov
and
mov
pop
or
add
jg
scas
pop
orb
inc
lret
out
adc
mov
mov
loopne
shlb
pop
jae
popl
jmp
cmc
add
pop
mov
dec
cpuid
roll
rorb
push
push
int3
out
movsl
mov
jbe
iret
dec
movsl
std
mov
xor
and
test
insl
xchg
sub
mov
push
inc
clc
xlat
sub
mov
rorb
adc
jmp
dec
mov
sub
mov
icebp
adc
ret
mov
iret
outsb
xchg
push
jle
sbb
fwait
andl
pop
out
ret
sub
mov
xchg
test
dec
pop
fstps
mov
add
loope
mov
mov
mov
aaa
mov
fisubl
pop
add
lds
sti
push
add
jl
cs
shlb
push
inc
push
xchg
adc
adc
inc
pusha
mov
mov
repz
adc
shlb
hlt
rorl
movsb
gs
mov
roll
jae
mov
loopne
or
push
pushf
or
jmp
push
pop
call
add
shll
inc
xchg
adc
mov
fwait
mov
fucomip
sub
lcall
addr16
test
inc
rorb
lods
jo
xor
push
jl
or
pusha
enter
or
mov
mov
push
sub
in
push
mov
out
inc
dec
in
sti
cmp
mov
push
fistl
int3
or
in
and
push
outsb
cmpsb
push
out
mov
imul
pop
adc
mov
lods
or
jno
jl
aas
aad
nop
aad
fs
sbb
out
xlat
mov
data16
dec
sahf
loop
call
in
or
rolb
mov
in
dec
lahf
stos
mov
dec
shrl
mov
jecxz
push
sbb
xor
in
jmp
int
mov
lcall
jle
lods
adc
fcompl
movsb
cmpsl
lds
mov
sti
shlb
popa
popf
push
cmpsb
in
push
lds
les
bound
adc
inc
mov
out
mov
lods
int
andl
xchg
popf
adc
inc
loopne
mov
jecxz
aas
cwtl
pop
sbbb
add
push
movsb
scas
mov
dec
outsb
pop
aas
inc
mov
jns
xor
push
add
stos
int3
fisubrl
and
test
sti
cmc
push
mov
xchg
xor
xchg
jle
add
or
mov
fxch
cmp
or
pop
popf
jmp
ja
inc
xchg
sbb
dec
repz
movsl
jo
xlat
push
insb
xchg
insb
ret
std
fldenv
xor
push
sbb
mov
addl
fcoml
sahf
divl
inc
push
dec
jne
ret
xchg
adc
dec
aad
pop
mov
xor
movsb
adc
adc
pushf
xor
jns
sbb
xor
imul
icebp
mov
adc
jb
pop
mov
jo
scas
mov
lret
mov
hlt
and
cld
inc
dec
fistpl
in
enter
pop
push
rcrl
arpl
bswap
imul
sub
mov
orw
inc
xor
pop
lea
dec
push
push
clc
mov
pop
mov
push
out
jecxz
cld
sub
test
add
dec
jg
sub
sbb
pop
shll
fs
pusha
jle
jns
dec
push
jecxz
aad
inc
subb
jecxz
push
pop
pop
test
aam
mov
daa
es
out
fdivl
inc
dec
add
mov
sub
addb
sbb
jecxz
lret
dec
pop
push
in
mov
xor
sbb
xchg
or
cs
test
dec
or
cld
clc
bound
icebp
or
pusha
xchg
xchg
cwtl
mov
clc
test
jmp
out
mov
jle
lea
std
cld
cmp
mov
add
xchg
cmp
xchg
cmc
out
repz
xor
mov
call
xor
jbe
lcall
sti
idivl
pop
add
mov
addb
adc
xor
mov
inc
xchg
ret
fscale
mov
ret
out
xchg
cmp
andb
test
loopne
push
pop
popa
mov
insb
fucomip
dec
and
adc
int3
mov
add
fimuls
and
jo
pop
jmp
jnp
adc
pop
pusha
jecxz
clc
ror
sub
sbb
das
std
mov
or
add
das
xor
sub
push
mov
clc
jbe
sbb
mov
andl
jge
mov
or
sbbl
sbbb
ss
lods
pusha
popa
je
sub
fistpl
adc
xor
mov
push
fsubl
repz
mov
cmp
iret
push
jo
cmp
sbb
ss
inc
jp
sbb
adc
das
push
mov
mov
pop
fdivp
loop
inc
fnstcw
hlt
add
data16
das
jns
push
mov
mov
adc
ja
out
fidivrl
add
adcl
pop
jae
stc
cmpsb
xchg
pop
repz
int
inc
ljmp
mov
and
in
inc
or
lret
lds
loopne
test
xor
out
cmc
dec
pop
and
rcll
and
ljmp
cltd
add
xchg
add
inc
mov
arpl
scas
icebp
js
mov
into
out
nop
addr16
sti
xchg
lea
jae
out
imul
adc
subb
jp
icebp
push
xorb
or
lock
clc
repz
jmp
mov
jecxz
or
dec
add
cltd
sbb
insl
push
mov
inc
lods
pop
orl
push
fnstenv
cli
jbe
jbe
add
cltd
jle
add
sub
shll
aaa
fiaddl
dec
outsl
je
cmpsl
lcall
xorb
and
add
test
mov
and
dec
addl
shrl
arpl
add
adc
cmp
in
mov
lcall
hlt
enter
outsl
pop
lock
lret
mov
xor
mov
sti
outsb
sbb
inc
add
jmp
or
jns
ljmp
dec
dec
jae
loopne
shrl
mov
mov
push
or
adc
scas
js
dec
aas
mov
pusha
push
xchg
out
outsl
inc
aaa
sub
cmp
mov
insb
imul
jl
cmpsb
sub
cmp
fildll
out
lcall
hlt
jg
pop
adc
mov
mov
and
sub
inc
sbb
jae
cmp
mov
add
sub
leave
mov
orl
dec
adc
and
dec
pop
rcrb
daa
push
arpl
mov
test
clc
lods
pop
push
cmp
jg
xlat
imul
xchg
jb
adc
data16
mov
rorb
idiv
pop
mov
ficoms
dec
pop
roll
sub
push
inc
icebp
in
mov
jno
push
stos
stos
es
or
in
dec
and
mov
sub
jp
dec
mov
mov
mov
cs
rcrb
jecxz
int3
cmpsl
inc
sbb
sbb
outsb
xchg
addl
stos
fwait
mov
xor
dec
pop
dec
push
push
sbb
int3
mov
sbb
jae
mov
add
insl
dec
fwait
or
pop
loop
xchg
hlt
or
aas
cmp
shr
adc
xor
pop
ds
pushf
neg
shlb
ret
mov
in
adc
adc
cwtl
jnp
mov
in
out
hlt
xchg
mov
jne
dec
hlt
cmpsl
int
pop
cmpsl
xor
or
rolb
negl
js
mov
push
or
cmp
insb
and
in
fsubrl
or
mov
push
lahf
dec
pusha
int3
push
cld
cmp
test
in
repnz
ficomps
xor
xchg
and
pop
call
dec
mov
rcll
stc
inc
loopne,pt
or
rorl
jbe
push
jge
jl
inc
pusha
call
mov
cs
adc
mov
cmp
or
call
mov
cmp
call
stos
test
adc
or
in
loopne
push
fwait
lcall
ja
popa
adc
sub
sub
jae
mov
das
jne
pusha
cwtl
std
mov
xor
xchg
xchg
cmp
cs
outsl
sub
xchg
ret
jecxz
cmpsb
xor
jno
stos
notb
jmp
test
pop
addr16
out
xor
in
inc
jmp
aam
clc
jbe
mov
pop
iret
es
mov
jg
add
test
lods
call
xorb
push
mov
mov
xchg
mul
addr16
push
xor
push
or
push
inc
mov
rolb
push
lcall
add
ret
dec
fcos
pop
gs
inc
std
cmp
mov
mov
pop
mov
fnsave
sub
call
pushl
out
in
ljmp
push
test
push
mov
pop
push
lret
mov
in
lea
imul
mov
in
cmc
inc
mov
mov
add
push
mov
dec
xchg
mov
mov
sarl
nop
dec
scas
push
arpl
aaa
dec
popa
xchg
leave
cmpsb
outsl
pop
and
jecxz
fimull
xor
scas
sbb
leave
xor
enter
testb
jmp
shll
and
out
ja
fmul
negl
adc
push
call
sub
mov
out
out
ficoms
cwtl
add
mov
pop
jg
fsubrs
loop
adc
cmp
pop
mov
cmp
xlat
repz
ficoms
in
dec
insl
and
lds
gs
or
xor
cli
mov
pop
sub
mov
push
mov
cmc
pop
inc
mov
add
xchg
sub
cmpl
sub
add
mov
push
xchg
xchg
adc
mov
xchg
jecxz
xorb
shrb
xchg
icebp
std
data16
dec
jnp
lret
cmp
adc
cmp
lret
mov
pusha
push
clc
sub
jl
jp
mov
mov
add
arpl
dec
bound
jp
jns
cmp
xchg
in
inc
sub
cmp
mov
icebp
popa
push
xor
lret
jmp
lret
mov
pop
push
filds
aas
dec
or
pop
fistl
into
cmp
pop
adc
lret
stos
out
and
sub
xchg
ds
fiadds
out
mov
mov
or
jno
jbe
pushf
ja
jns
jge
movsl
insl
mov
add
pop
outsb
and
inc
lock
mov
addr16
jmp
sub
mov
call
in
dec
loopne
rol
pushf
jo
jp
push
mov
pop
pop
inc
add
mov
jecxz
popf
jnp
xor
fs
sti
xor
mov
dec
mov
pop
jg
push
mov
sub
sub
pop
sub
mov
pop
in
xor
sub
subb
inc
daa
sahf
fildl
jp
call
and
sbb
adc
xchg
sub
xor
jl
mov
scas
cmpsb
pop
pop
popf
ss
mov
and
inc
fldenv
mov
push
sub
sub
inc
jb
popa
pop
mov
jo
stos
loop
dec
ret
popf
adc
cmp
and
fiadds
add
push
mov
out
pop
add
push
subl
cmovl
dec
into
sub
and
fs
call
outsb
or
adc
enter
pop
sub
push
mov
int
out
lods
nop
fs
adc
add
leave
cwtl
insl
lret
imul
jle
sub
std
jg
gs
repnz
imul
incb
les
scas
adc
push
lods
push
xchg
lahf
mov
mov
addr16
mov
dec
pushf
inc
dec
sub
loope
dec
mov
mov
push
out
int
jns
mov
sub
hlt
push
dec
xchg
dec
es
adcb
fwait
dec
ja
adc
dec
movb
xor
push
imul
or
jno
test
pop
push
push
shlb
mov
jnp
mov
insb
and
subb
pop
push
mov
xor
and
aam
loopne
pop
mov
ret
xchg
test
cli
outsb
mov
aaa
xchg
jnp
mov
mov
repz
int3
dec
loop
and
jmp
sahf
stc
dec
jnp
mov
mov
inc
add
mov
lods
cld
adc
mov
jle
es
dec
pop
sbb
sbb
mov
and
outsl
leave
xor
xor
rcrb
dec
pop
sbb
movsl
sub
sbb
sahf
popa
repnz
xor
add
aaa
xchg
push
stc
ficompl
fidivs
xor
cmpsb
sub
sbb
lret
mov
dec
fstpt
outsb
hlt
add
or
jl
sahf
fistps
xor
mov
sub
ja
inc
mov
mov
stc
push
sub
in
shrl
iret
mov
or
mov
cmp
inc
sbb
dec
lret
mov
xor
je
out
sahf
out
xor
and
push
pop
mov
out
in
xchg
daa
aad
lods
sub
pop
dec
push
and
inc
iret
sahf
pop
fnstenv
pop
call
aam
adc
add
lcall
out
xor
dec
push
mov
loopne
rclb
add
pop
mov
cmp
sub
out
mov
rcrl
insb
push
push
imul
test
pushf
sti
or
shr
notl
pop
mov
lret
push
movb
xchg
hlt
xor
scas
gs
xchg
jb
mov
pop
push
jns
or
pop
mov
xor
lahf
xchg
pushf
adc
xor
push
add
xchg
xor
inc
bound
bnd
leave
sarl
into
mov
push
xchg
push
cmpsb
scas
stos
fs
pop
ficomps
ror
iret
pop
dec
inc
pushf
mov
jl
test
xor
popa
push
cmp
add
mov
test
mov
or
adc
sbb
je
cmp
dec
mov
mov
xchg
or
int3
or
mov
test
es
testl
out
adcb
ret
or
xchg
scas
xor
movl
cmpsl
pop
jmp
adc
jne
push
pop
out
push
cli
ret
mov
mov
mov
ffree
adc
pop
lret
mov
pop
fwait
clc
xchg
xchg
cmp
mov
adc
icebp
loopne
mov
push
or
and
mov
or
mov
add
je
movsb
and
repnz
push
mov
movsb
sub
imul
mov
mov
adc
dec
es
std
lea
cltd
jb
in
iret
jge
sbbb
outsb
push
inc
push
lret
add
pop
mov
push
cmp
popf
inc
add
dec
adc
jg
sbb
xchg
aad
mov
subb
sbbl
mov
cmp
into
jl
dec
fwait
movb
xlat
lcall
inc
sbb
jae
shl
out
iretw
inc
cmpsb
push
fwait
mov
mov
lds
adc
inc
and
mov
pop
adc
xchg
push
lcall
dec
dec
sbb
xor
inc
xchg
clc
ret
aad
push
jbe
or
dec
out
mov
or
pop
mov
mov
out
inc
cmp
inc
xor
cmc
jle
mov
idivb
js
fwait
cmpsb
sub
jbe
adc
inc
daa
sbb
inc
fucomip
mov
gs
cmpsl
icebp
lods
call
push
fidivrl
jp
shrb
in
decl
movsb
cwtl
or
mov
int3
push
xor
inc
jp
or
lcall
jmp
cld
rolb
and
cmpsl
ljmp
pop
divb
cmp
out
xor
cli
pop
shrb
xchg
jae
iret
sub
subb
pop
adc
inc
dec
adc
in
jl
push
faddl
dec
push
out
xorb
out
push
sub
push
bound
lahf
mov
mov
aas
sbb
decl
xor
inc
test
sub
cltd
into
nop
jecxz
stc
mov
cli
lods
outsl
icebp
pusha
jmp
lret
mov
lret
arpl
xor
xchg
add
push
btcl
aam
jnp
lods
push
ja
stos
gs
out
xlat
jnp
fsubr
cmp
mov
in
je
repnz
sbb
insl
cltd
loopne
mov
int
mov
decb
aas
test
sarl
stc
or
int3
jle
fnstenv
or
dec
mov
mov
popf
aam
or
shl
rcl
xor
fwait
cmp
cmp
movsl
pushf
dec
repnz
enter
out
mov
jns
cmpsl
imul
movsb
cmp
fists
pop
stc
push
inc
sbb
clc
cmp
xor
pushw
mov
lock
inc
icebp
dec
imul
inc
sub
jbe
leave
jg
loope
test
aaa
cmp
out
push
jne
dec
fxch
in
enter
outsb
es
add
data16
bndldx
pop
shll
dec
cmp
sub
into
or
adc
cltd
add
fldt
jmp
addr16
pop
sub
es
cmpsl
jecxz
fdivp
aam
mov
and
test
jb
ret
push
cwtl
push
push
xchg
mov
test
ljmp
pop
imul
fnstenv
dec
push
test
clc
cmpsb
movb
jg
adc
mov
call
cltd
mov
xlat
lock
push
negb
add
call
pop
lock
insb
adc
cmpl
fwait
or
mov
xchg
push
shrl
aas
aad
push
fldl
xchg
xor
push
cmp
call
cmp
xchg
je
xlat
dec
mov
stos
bound
stos
xlat
cmc
mov
adcb
adc
xchg
mov
xlat
test
dec
dec
clc
ret
sarl
pop
repnz
jbe
lahf
adc
stos
daa
push
inc
jg
dec
aas
clc
push
ds
and
jno
and
dec
and
dec
mov
cmp
pop
into
mov
mov
ret
icebp
cmp
xchg
pop
or
fbld
scas
frstor
inc
fistpl
xchg
push
add
push
aaa
shrl
frstor
jmp
xor
sarb
dec
jae
mov
cmp
lods
lret
mov
out
push
jp
xchg
test
andb
pushf
dec
shl
sbb
hlt
push
push
rcl
cmpsb
jnp
sub
shl
mov
int3
sbb
adc
fcmovnu
out
rorb
mov
jae
adc
sahf
adc
pushw
add
stos
testb
movsb
xorb
xor
or
sub
sbb
xlat
scas
movsl
enter
mov
fildl
enter
and
add
aas
mov
outsb
orl
and
mov
or
xchg
rcrl
cmp
mov
push
push
iret
shll
mov
jmp
mov
cmp
xorb
cmc
xor
ror
scas
or
lahf
movsb
xor
cmp
add
outsl
sub
pusha
inc
mov
scas
adc
push
rolb
pop
shll
add
icebp
jb
pop
shrb
fiaddl
or
mov
push
push
int
into
scas
jg
ffreep
aaa
je
fwait
push
popf
aaa
add
pop
mov
out
mov
xchg
xor
test
xchg
xor
out
dec
push
shlb
out
aam
jg
std
roll
mov
mov
xorb
adc
or
icebp
cltd
sub
scas
repnz
out
adc
sti
jno
push
mov
xor
fsubr
shl
lret
ret
mov
lods
mov
ret
js
add
push
arpl
dec
mov
out
adc
out
sbb
icebp
nop
xchg
and
dec
inc
add
fistpll
sub
pop
cs
jle
aam
mov
mov
and
or
sbb
inc
jo
jl
adc
and
lds
mov
push
cmpl
cmp
aaa
sbb
or
outsb
popa
es
lods
dec
addr16
add
mov
jg
out
mov
fisttps
ficomps
jp
cmpsb
mov
sub
ret
sub
mov
lret
enter
mov
and
add
sbb
mov
mov
push
dec
push
xchg
les
lretw
jecxz
rolb
cli
mov
lea
adc
daa
xchg
cwtl
push
fstl
sbb
lea
jnp
mov
out
lret
sub
ret
sub
jmp
cmp
movsl
cwtl
sub
fsubrl
movsl
rorb
add
loop
addl
dec
pop
inc
mov
adc
leave
jl
iret
add
mov
shlb
or
arpl
cmp
dec
mov
lahf
mov
sub
mov
leave
sahf
sub
adc
clc
pop
icebp
add
sub
push
xor
sub
mov
xlat
dec
icebp
jne
int
mov
dec
iret
cmp
jnp
xlat
sub
aaa
lret
push
mov
xchg
inc
jl
ret
xlat
add
jg
mov
dec
add
fdivs
movsb
xlat
jne
orb
mulb
test
arpl
add
pop
sub
and
xor
mov
dec
test
repz
xchg
inc
adc
push
mov
call
xor
or
scas
jg
fdiv
hlt
pusha
out
jp
icebp
out
push
xchg
inc
subl
push
jecxz
addb
or
mov
lock
cwtl
jns
out
adc
mov
push
lods
or
cmp
pusha
lock
aas
aam
or
testb
push
lahf
mov
dec
adc
inc
push
push
cmp
ret
xchg
lret
pop
in
or
das
outsl
xlat
movsl
and
and
lcall
jp
adc
shl
or
repnz
popf
fwait
mov
mov
and
add
test
mov
ror
mov
rolb
sbb
popf
in
mov
popf
pop
sbb
dec
inc
into
jmp
subb
ja
cmpsb
push
in
mov
jle
filds
inc
mov
pop
fadds
push
jnp
aaa
jp
and
jae
in
loop
mov
loope
sbb
jne
mov
xor
adc
xchg
or
arpl
pop
lret
push
push
or
cld
lock
pop
adc
xchg
stc
sahf
lcall
ljmp
sub
pop
in
push
jge
cltd
cmpsl
jg
ret
sahf
rcrl
daa
test
mov
mov
xor
lret
push
mov
dec
rcrl
push
xor
pop
inc
or
ret
fistl
jle
out
je
outsb
dec
hlt
mov
cmpsb
pop
outsl
icebp
fsubr
jb
push
jo
int
sub
sub
jnp
mov
push
lret
shrl
fisubs
or
mov
dec
loop
inc
mov
sbb
xor
xor
pushf
inc
xchg
stos
in
mov
cli
add
xchg
loopne
mov
cs
rorl
jnp
pop
loopne
inc
xchg
adc
and
jge
lds
cli
sti
shlb
push
aas
aaa
cmpsl
cmp
push
push
mov
test
add
push
pop
sbb
fistl
cmp
pop
sbb
into
adc
jecxz
or
mov
push
sbb
add
mov
dec
fists
mov
and
xchg
sbb
jno
ss
cmp
sbb
pusha
jge
lret
jno
jo
cmc
mov
xor
sub
xor
xor
pop
leave
das
cmp
cmp
jo
fldenv
cld
das
sbb
sbb
xchg
jmp
imul
imul
or
mov
xchg
xchg
adc
int
xor
addl
dec
push
popa
lret
jae
mov
push
dec
xor
das
shr
ficompl
or
inc
cli
push
mov
pop
aam
movsb
dec
jne
repnz
jg
mov
cmc
push
test
xchg
dec
mov
dec
cwtl
inc
repnz
xor
stc
fcoms
cmp
fsubr
sub
sbb
sbb
arpl
adc
add
dec
push
mov
cmpsb
outsb
adc
add
ror
insw
fwait
lahf
mov
nop
add
and
and
call
lds
add
movsb
es
movb
or
aam
lcall
cld
jp
dec
fnsave
les
stc
in
or
js
xor
dec
cmp
dec
js
fadd
or
decb
insl
push
push
lahf
cmp
add
in
and
sub
arpl
mov
inc
ljmp
test
jne
xchg
hlt
sbb
test
ja
push
popa
inc
add
inc
rcl
add
pop
mov
cmp
mov
filds
push
cld
push
xor
push
mov
cmp
int
test
mov
loop
mov
sti
lds
test
mov
adc
cmpsl
fs
sub
out
dec
popf
shlb
push
in
adc
cmp
inc
movsl
and
pop
sbb
and
je
or
pop
cli
bound
cmpsl
jnp
cld
xchg
hlt
jbe
mov
and
mov
pop
lods
or
movsb
and
xorb
or
jne
jns
sti
pop
cmp
insl
es
bound
icebp
jmp
imul
mov
add
inc
gs
fwait
pop
mov
inc
mov
aas
icebp
inc
std
neg
dec
mov
bound
cli
sub
inc
outsl
mov
stc
push
addr16
sbb
cwtl
hlt
push
out
push
dec
xlat
popa
push
sbb
pop
xor
scas
sbb
les
xchg
push
fiaddl
xchg
cs
or
xchg
enter
mov
mov
push
cs
push
dec
mov
push
xor
push
pop
je
addr16
mov
jnp
ret
jmp
arpl
xchg
or
pop
fsubrs
stc
enter
hlt
cld
lds
dec
outsb
in
shlb
inc
scas
mov
ret
dec
xor
iret
sahf
lahf
sub
test
push
fsubrs
clc
pop
push
and
inc
leave
aam
xor
cld
das
jmp
andl
shlb
popa
into
fnstenv
daa
repz
mov
addb
lock
add
xlat
jb
mov
mov
jp
imul
push
and
pop
out
pop
mov
packsswb
lahf
xchg
ret
push
cld
pop
dec
in
addr16
fisttps
xchg
add
sub
insb
test
ja
out
inc
clc
sbb
xor
mov
xor
cmp
pop
mov
lahf
mov
mov
xchg
shlb
leave
rcl
mov
ret
xchg
inc
nop
jp
xor
add
nop
inc
insb
aad
cmpsb
push
pop
inc
aaa
push
iret
pop
xor
daa
mov
lods
pusha
sub
test
push
jbe
es
sbb
hlt
cmpsb
add
mov
andb
inc
jnp
mov
stos
pop
clc
icebp
inc
je
lock
das
mov
adcb
dec
add
ret
imul
cmp
icebp
ss
cmp
sub
pop
cmp
inc
test
cmpl
and
xchg
inc
cmp
fsts
fnstcw
xchg
lods
push
xchg
push
ret
in
cmp
xor
or
push
insl
or
sub
and
dec
push
sub
fsts
stos
mov
mov
stos
lock
pop
rcll
sbb
push
push
xor
addl
jo
std
mov
sbb
ljmp
or
sbb
inc
dec
iret
pop
xor
cmp
or
rolb
or
rorl
loope
sahf
mov
inc
scas
sub
stc
aaa
sbb
lods
cld
mov
lea
pop
stos
push
fiadds
ljmp
test
jmp
xchg
stos
enter
jae
mov
ret
dec
inc
jns
ret
fiaddl
xchg
insl
movsl
sub
mov
jle
test
popa
inc
mov
test
insl
scas
or
sbb
sub
pop
sub
pop
jns
pop
adc
ficoml
mov
mov
push
enter
addr16
jmp
sahf
stos
lcall
xor
pop
adc
mov
jmp
jecxz
cmp
cmp
jbe
test
xchg
xchg
out
fnstsw
jg
adc
stos
pop
sbb
decb
or
xchg
mov
in
pop
aad
jecxz
sub
pop
imul
std
jae
dec
adc
xchg
push
mov
sbb
lea
sub
jne
xchg
mov
mov
setns
sub
test
mov
shrb
jge
push
push
les
gs
mov
dec
outsl
es
xchg
lock
notl
aas
in
and
mov
adc
shll
push
cmp
inc
insl
mov
sub
inc
fcomps
mov
test
into
sub
in
ret
push
clc
xchg
or
mov
stos
add
xchg
pop
rolb
aad
pop
jl
sti
js
leave
or
les
ja
les
jle
jl
jg
inc
mov
std
imul
xor
js
jns
mov
jno
xlat
and
subb
inc
add
lcall
mov
jno
andb
in
pop
std
outsl
adc
sarl
cmp
jo
add
fsubs
out
mov
fucomip
cmc
mov
push
pushf
sub
ja
popa
ljmp
nop
sbb
loop
in
popa
cmp
lods
orl
out
mov
pop
and
push
xchg
xchg
icebp
jns
pop
add
or
lahf
mov
xchg
pop
movsb
outsb
cld
in
or
stos
daa
xchg
pop
mov
in
cmpsl
jo
or
es
sbb
pop
sub
pmaxsw
inc
ret
mov
cmp
mov
aad
and
repnz
pop
cmp
mov
mov
shr
adc
mov
mov
dec
dec
sbb
addb
enter
or
add
rorb
cmpsb
loopne
arpl
lds
lods
sti
test
nop
mov
jp
and
jmp
mov
jnp
jg
mov
cmp
add
pop
add
fwait
add
pop
add
sbbl
dec
push
or
cltd
sub
cmp
jns
insl
mov
xlat
and
divl
in
cmp
mov
push
sbb
xchg
out
inc
mov
or
cmp
popa
or
jbe
repz
inc
push
adc
insl
fcompl
inc
das
sbb
dec
or
inc
push
push
cmp
fildl
lods
xchg
enter
loopne
mov
jbe
adc
adc
std
cmpsb
inc
addr16
lods
xor
das
xor
xchg
jmp
ret
inc
xchg
sub
in
cs
sub
sub
hlt
in
sbb
xor
repz
mov
dec
shl
push
es
loope
mov
or
ljmp
mov
push
jbe
jnp
sub
inc
in
fcom
popf
mov
mov
out
sub
lcall
stos
cld
test
cmp
lret
or
and
mov
js
out
add
mov
push
stc
add
ret
test
add
stos
rorl
pop
in
fcmovne
aam
iret
dec
pop
cmp
inc
leave
ret
rcl
mov
rol
ret
and
xchg
dec
divb
cmp
cmp
out
loopne
clc
jg
mov
data16
fimull
jo
cmp
and
adc
xchg
cmp
out
es
lods
aam
lahf
inc
jo
std
add
stos
lods
aas
loop
pop
mov
mov
dec
and
sbb
or
cli
andb
es
outsl
xchg
xor
push
jg
xchg
or
insl
cmp
mov
pushl
call
ljmp
mov
sub
ds
movsb
scas
xor
adc
add
sbb
dec
mov
or
fdivr
je
inc
mov
dec
and
popf
in
xchg
clc
loop
jecxz
and
xor
fwait
add
repnz
iret
sbb
inc
sub
mov
add
or
or
adc
mov
out
dec
xor
mov
dec
notb
mov
cmp
mov
and
aas
cmp
insb
scas
sahf
sbbb
xchg
lods
and
stc
mov
pusha
bound
mov
iret
lds
cmpsl
ds
dec
add
jle
aad
pop
xchg
shlb
lret
sbb
add
in
jg
les
aaa
mov
jae
jb
mov
ja
mov
ret
xorl
cmpsb
jl
call
mov
mov
call
popf
arpl
dec
sbb
xchg
outsl
loope
pushf
push
test
dec
cmp
ret
sti
jp
cmp
mov
xor
sbbl
and
pop
mov
aad
mov
adc
mov
cmp
push
add
push
sbb
ret
insl
add
push
mov
fcoms
sub
pop
loopne
jp
gs
pop
pusha
call
rorb
cli
dec
adc
xchg
bound
inc
addr16
pusha
push
insl
or
test
cmp
inc
loop
jbe
adc
sbb
fcoms
and
push
leave
push
cmp
add
xchg
mov
fistl
shrb
mov
pop
fistpll
and
mov
ss
dec
dec
sub
movsb
xlat
mov
imul
out
scas
mov
pop
loop
pop
movsb
inc
pop
or
call
orb
sub
jns
imul
dec
or
xchg
jl
lahf
in
or
pop
lds
inc
mov
subl
sbbb
jp
test
loope
lods
out
out
cmc
mov
xor
and
push
into
xchg
ficoms
mov
scas
dec
aaa
out
stos
inc
xchg
xchg
fldcw
jae
iret
lock
jo
jle
int
je
dec
je
imul
rcl
sub
cwtl
movsb
jb
sub
push
dec
arpl
push
imul
hlt
mov
add
mov
icebp
add
arpl
and
lods
and
inc
and
lret
push
sub
bound
outsb
or
popa
daa
sbb
dec
cld
fdivrl
stos
push
sbb
pop
xchg
xchg
stos
in
fldl
repnz
push
int
or
sub
es
push
jmp
mov
inc
ds
jmp
fwait
pushf
sbb
cmp
jmp
sar
jmp
sbbl
movsb
inc
or
lock
mov
aad
cmc
inc
mov
sub
mov
xchg
xor
mov
clc
sbb
push
inc
aad
jge
into
sbb
mov
jp
cmp
sub
sahf
loop
cmc
sbb
inc
in
mov
lahf
rorl
add
popf
mov
lcall
inc
lea
xchg
sub
sti
pop
dec
lock
mov
jo
leave
cmp
and
mov
stos
adc
stos
sahf
inc
push
sahf
nop
add
push
aas
or
stos
sub
arpl
xor
imul
jb
dec
in
loopne
lods
and
std
cwtl
mov
jge
adc
lret
adcl
and
inc
adc
aas
sbb
lss
roll
lods
imul
jnp
je
shrl
fcoms
in
sbb
cmpb
mov
mov
lock
adc
mov
nop
mov
popf
sbb
mov
out
outsl
aaa
jo
pop
pop
adc
shrb
and
test
mov
jb
in
jmp
add
movsb
adc
popa
mov
repnz
enter
test
mov
and
push
scas
cwtl
adc
mov
sub
mov
imul
aam
jle
push
or
repnz
mov
sbb
and
lcall
out
pop
lea
pop
inc
fnstsw
sti
imul
ret
dec
or
dec
cs
dec
enter
mov
sub
outsl
aas
pop
dec
pop
and
outsl
scas
push
and
jecxz
dec
xlat
shr
les
cmc
aaa
pusha
out
sahf
out
ret
out
pop
mov
sti
jo
pop
cld
addr16
out
lcall
xor
enter
or
cmpsb
sarl
jns
jbe
data16
sub
lcall
cmp
ret
scas
or
xchg
loop
jb
jbe
sbb
push
adc
mov
push
mov
ret
mov
call
popa
pop
inc
jmp
sub
jo
push
sti
leave
xor
ja
push
lcall
or
es
loope
or
mov
and
test
movsl
pop
out
mov
lea
loopne
pop
scas
add
mov
xlat
inc
negl
mov
pop
jbe
cmp
jbe
pop
out
dec
iret
outsb
inc
sub
stc
jle
fiadds
js
push
or
icebp
push
mov
xor
scas
bound
push
test
lahf
dec
callw
fnstcw
cmc
mov
sahf
mov
mov
popf
fisttpl
fs
fistpl
pop
jns
lea
and
das
inc
daa
cs
rorl
sbb
gs
pop
mov
adc
bnd
adc
xor
std
inc
pop
dec
add
stos
mov
popa
mov
mov
dec
outsb
out
push
mov
cli
cmp
jge
popa
pop
arpl
mov
insb
into
mov
test
nop
dec
test
mov
or
pop
ljmp
and
mov
sbb
fsubrs
mov
xchg
push
decb
mov
sub
jnp
iret
xor
jg
leavew
pop
test
dec
out
lods
fists
nop
and
push
inc
jae
aas
or
lds
dec
inc
rorb
adc
xor
addl
outsb
sbb
or
clc
jg
loop
pop
aas
sti
or
jmp
xor
leave
or
xchg
enter
daa
push
lock
adc
sub
mov
mov
and
xchg
imul
fnclex
outsl
mov
loop
sub
cld
cld
int
loope
xor
mov
mov
jge
inc
jae
dec
bound
or
fnsave
out
cmp
dec
sub
aad
mov
scas
sub
outsl
call
sahf
loope
in
std
shlb
rcr
insl
dec
sbb
lea
test
std
fstpt
pop
lret
int
sub
pop
fistpll
aaa
dec
out
xchg
in
addr16
fldl
jbe
pop
sub
mov
icebp
pop
mov
addb
inc
cmpsl
xchg
dec
jne
or
xchg
jnp
add
jno
cld
sbb
mov
push
dec
addr16
pusha
sub
lret
je
data16
pop
pusha
dec
or
fs
mov
and
and
pop
cmp
cmp
jne
mov
sub
stc
mov
stos
mov
out
dec
out
roll
jno
lahf
cld
xchg
xchg
jp,pt
rorb
shll
mov
mov
jmp
adc
push
inc
mov
test
jecxz
and
fistpll
xor
push
inc
adc
pop
sarb
mov
dec
jns
rclb
ljmp
cld
cltd
test
test
or
int
imul
adc
loope
push
cmpsb
cmpl
push
pushf
dec
dec
fsubrs
loopne
push
imul
cwtl
xchg
pop
insl
mov
and
int
cld
pop
int
inc
scas
sub
push
test
repz
movsb
pand
and
jbe
loop
xchg
cltd
ror
sub
adc
cmp
sbb
push
sbbl
ficompl
repz
icebp
lds
orl
test
loope
mov
add
aas
push
jecxz
ficompl
shr
dec
adc
in
vmulsd
les
cmpl
add
mov
popa
and
lahf
out
cmc
movsl
test
shll
sbb
xchg
xchg
fildll
into
inc
pop
mov
push
insl
mov
dec
cmpsb
mov
cmc
test
mov
or
mov
push
mov
scas
and
stos
adc
pusha
inc
pop
adc
out
mov
jg
add
adc
fnstcw
roll
xor
popf
js
iret
adc
ficoml
in
fildl
inc
addr16
mov
sub
bnd
adc
cmp
jge
jb
mov
test
imul
in
mov
out
aad
fs
cld
adc
or
xchg
mov
mov
rorb
cld
pop
sub
pop
mov
add
sub
jbe
aaa
imul
jnp
pop
xor
das
int3
mov
and
fcmovbe
push
out
sub
mov
rcll
fdivrs
xor
xchg
int
addb
stos
push
jecxz
fcomi
enter
sub
loope
jmp
mov
lock
dec
pop
push
loop
jl
cmp
out
cmp
adc
lock
push
xchg
rorb
jmp
xchg
jle
pop
xchg
lods
insl
stos
mov
into
adc
clc
clc
jb
std
ret
xor
mov
cmp
cmpsl
lret
dec
test
scas
dec
int3
testl
mov
mov
cmp
xchg
bnd
pop
sub
cltd
mov
sub
in
sub
add
xor
or
xor
push
or
cmp
clc
daa
inc
add
ljmp
testl
dec
push
push
mov
sbb
mov
mov
bnd
lock
je
xchg
inc
push
push
mov
mov
push
sti
stc
dec
inc
dec
stos
adc
in
test
int3
insl
fstl
out
nop
insl
inc
les
jnp
xchg
test
std
push
call
mov
scas
dec
pop
pop
dec
adc
test
xor
jb
jb
inc
pop
inc
jnp
fcmovbe
mov
jmp
sbb
cmp
loop
inc
mov
cmpsl
clc
pop
xor
add
xor
cli
icebp
aaa
inc
sbb
rcrl
cmp
aam
mov
out
jl
and
push
xchg
idiv
cwtl
mov
push
out
subb
xchg
add
loop
inc
mov
decl
xorb
xchg
jge
adc
pop
mov
mov
lahf
lock
adc
or
popa
out
stos
xchg
pusha
jg
cmp
sbb
cmp
jnp
adc
rol
imul
std
sub
xor
in
xor
lds
idivl
cmp
inc
popa
inc
nop
mov
xor
lock
sbb
or
pop
lahf
or
out
or
pop
std
pop
aas
out
and
add
into
pusha
cltd
jne
lret
push
mov
fbld
sub
jg
insb
dec
mov
shl
jo
addr16
daa
cs
jb
popl
adc
dec
rol
mov
sbb
mov
jl
push
jmp
xchg
adc
jne
mov
in
in
cld
incb
rcl
adc
sub
mov
sub
xchg
pand
mov
repnz
addl
pusha
je
add
ss
dec
lret
dec
mov
jae
in
mov
mov
fld
aas
pop
clc
push
add
lods
inc
xchg
sbb
into
call
mov
xlat
xchg
pop
dec
jle
outsb
andb
lods
pop
pop
out
jmp
adc
and
ljmp
mov
aam
aam
in
mov
data16
xchg
cmp
test
adc
in
mov
jge
aaa
cmpsb
xchg
sbbb
or
iret
sub
or
ret
cmp
nop
cwtl
dec
mov
cmp
mov
xor
aas
lods
pop
jo
push
sbb
push
popf
add
hlt
pop
jmp
adc
sbb
popa
repnz
dec
jmp
out
mov
movsl
sti
pushf
xchg
inc
lret
call
in
call
pop
fisttps
and
sbb
ds
sbb
dec
jne
aaa
cmc
and
and
leave
fsubl
xlat
cmc
xchg
insb
dec
ret
mov
in
fistpl
inc
jo
mov
pop
mov
outsw
rcrl
push
cld
shlb
mov
add
std
cmp
arpl
ficompl
movl
xchg
icebp
mov
jae
data16
sub
in
hlt
es
loop
dec
divb
inc
aaa
mov
test
popf
push
notl
dec
pop
arpl
mov
loop
arpl
inc
mov
movsl
out
insb
push
lock
dec
not
jg
jp
pop
shlb
imul
cmp
sub
xor
lods
inc
or
ret
push
and
pop
int
arpl
push
int3
loop
add
cmp
mov
xchg
fiaddl
cmp
fcoml
adc
pop
out
mov
mov
es
cltd
rorb
imul
fldcw
mov
test
pop
xor
jno
mov
rorb
cmp
pop
xor
aaa
xchg
mov
inc
dec
lods
aad
push
pushf
mov
push
movsl
fs
cmc
bound
mov
xor
mov
mov
std
xchg
pushf
addl
mov
cmp
inc
inc
pop
xor
repz
xlat
jne
inc
dec
dec
push
sbb
lret
fs
push
popl
jo
in
xor
cmp
aam
insb
pop
add
insb
movsb
rolb
leave
je
daa
or
jge
cmp
pop
popa
mov
xchg
dec
rcrl
push
pop
dec
mov
ret
into
arpl
push
xchg
dec
lea
mov
xor
or
cmp
jne
pop
xchg
pop
mov
sub
lea
push
fildll
ret
jno
pop
push
and
clc
cmp
adc
mov
lds
mov
fwait
daa
ret
adc
mov
ret
cmpl
jge
cmp
mull
mov
lcall
adc
mov
das
cs
pop
iret
push
mov
adc
inc
lahf
out
inc
sub
ja
in
mov
loop
sbbb
cmp
data16
mov
arpl
arpl
insb
rcrl
repz
sub
push
mov
pop
xor
jae
jb
sbb
jge
adc
pop
xchg
or
popf
mov
mov
lock
movsl
cmc
dec
scas
sbb
das
jle
out
mov
stos
inc
loopne
pop
mov
in
pop
jmp
inc
imul
add
movsb
add
jge
cmp
or
pop
add
push
sub
inc
sbb
push
adc
loope
mov
ret
iret
out
sahf
ljmp
dec
mov
or
cltd
pusha
in
testl
sub
repnz
into
push
popa
fnstcw
and
rorl
fbld
or
fcomip
mov
or
aam
jnp
sti
or
mov
adc
push
popa
iret
fdivr
mov
cmp
mov
lea
leave
and
jb
lcall
leave
popf
movsl
sbbb
pushf
out
xchg
xchg
fwait
cmp
pusha
pop
xor
mov
push
scas
mov
adc
pop
jbe
mov
mov
ds
push
aas
xor
js
cmpsl
filds
mov
ja
pop
xchg
dec
enter
and
sub
bound
aas
push
xchg
and
add
sbb
lds
mov
xlat
lea
xchg
cwtl
fcmovu
sbb
and
rolb
pusha
or
jne
inc
xor
jg
xchg
js
xor
mov
sbb
inc
adc
inc
shl
push
cli
sbb
adc
fnstsw
cmp
cmp
aas
add
popa
scas
fistl
shr
add
scas
icebp
jge
jg
mov
push
mov
adcb
cltd
aaa
rol
fcmovnbe
dec
mov
or
cmp
and
sahf
mov
pop
dec
push
dec
movsb
data16
jbe
cmp
sarl
inc
push
mov
js
mov
int3
bound
inc
das
mov
push
xchg
jo
xor
pop
and
ret
mov
lahf
mov
pop
dec
aaa
push
xchg
out
pop
sub
loope
and
das
dec
cmpsb
inc
movl
pop
arpl
frstor
lock
jmp
xchg
scas
pop
push
into
mov
js
jo
xchg
pop
adc
mov
cmp
repz
loope
mov
xlat
pop
or
lcall
loopne
cwtl
pushf
pop
or
sub
scas
cmc
pushf
cmpsb
nop
das
pushf
les
lahf
loopne
cs
cld
cltd
sbb
or
lods
cltd
mov
daa
ja
rcll
xchg
jb,pt
in
sub
cmp
cs
inc
cmp
cmp
stc
movsl
int
sub
aad
pop
jns
and
stos
dec
jo
jnp
sbb
xchg
scas
xor
in
imul
imul
dec
dec
dec
push
shll
and
and
jns
scas
ror
lods
mov
mov
xchg
and
mov
jae
pop
xor
popf
mov
decb
insl
rclb
bound
xchg
out
lock
fwait
xchg
mov
pop
mov
scas
push
bound
jnp
mov
xchg
push
mov
stc
test
xor
loopne
pop
sbb
xor
addb
push
loopne
aad
aaa
das
inc
lcall
loope
into
jae
jmp
lds
mov
sbb
loope
inc
imul
insl
cmc
fs
repz
add
clc
je
nop
push
stos
push
stos
insb
cmp
adc
xchg
mov
sbb
mov
jg
ja
mov
testb
fsubl
dec
xchg
ljmp
pop
jo
daa
jmp
xor
dec
dec
mov
or
daa
clc
mov
dec
es
push
or
inc
fsts
cmp
and
pop
cld
adc
pop
xlat
mov
jmp
jg
insl
push
xchg
lods
mov
and
scas
dec
subb
mov
pop
pushf
mov
xchg
cmp
es
push
stos
bound
cmp
cli
and
add
cmp
and
test
push
mov
mov
mov
mov
int3
pushl
inc
cld
imul
insl
mov
shlb
aas
repnz
or
dec
ljmp
mov
roll
sbbl
shl
push
stos
sub
es
xor
dec
jb
xchg
and
push
fisttpl
loope
and
mov
out
xor
cmp
psubw
xchg
stos
pop
scas
sbb
jmp
pop
or
fwait
adc
insb
cmp
ja
stc
jle
xchg
cltd
inc
dec
test
or
pushf
pop
add
mov
mov
cmc
jmp
loop
adc
adc
jmp
mov
das
jo
push
xchg
lds
xchg
ds
or
fmull
push
ja
add
xor
xor
or
sub
mov
shrb
inc
sahf
aaa
jns
movsb
nop
add
pop
and
jmp
cmp
lock
fcompl
mov
and
mov
push
out
cmp
add
pusha
insl
mov
xchg
loopne
cmpsl
cmp
jb
xor
push
stos
mov
mov
and
sbb
ret
ret
loope
jle,pn
jecxz
push
shrd
int3
push
or
je
lret
cwtl
pop
mov
mov
xor
adc
lcall
out
inc
pop
xchg
mov
add
dec
incb
mov
sahf
mov
push
push
lods
mov
lock
sahf
xor
mov
jne
mov
add
mov
xchg
imul
fwait
xlat
or
mov
or
cmp
xchg
cmpsb
mov
xor
lock
outsb
lock
dec
popf
jmp
mov
gs
xor
mov
mov
xchg
add
push
xor
sub
subl
imul
es
notb
mov
adc
ret
jg
sub
or
rclb
mov
pop
mov
fsubrs
jnp
mov
out
movb
aas
pop
xor
mov
fld
test
bound
jecxz
lea
faddp
and
out
or
call
or
in
pop
fmull
sub
test
push
into
idivb
fisubrl
aam
inc
jo
scas
xchg
in
add
mov
divl
cli
mov
jb
mov
sub
int
jo
popa
push
mov
iret
mov
rcrb
in
ficoms
cmc
mul
xorb
xor
add
mov
jbe
aad
into
push
orl
aas
jns
fsubs
jl
xchg
add
popa
mov
push
ret
leave
pop
and
in
jle
aad
pop
push
sbb
pop
mov
in
adcb
lahf
mov
out
ret
icebp
jb
mov
addb
test
cli
mov
mov
mov
mov
or
divb
push
dec
aas
jne
sub
jge
in
adc
dec
lret
out
out
xchg
pop
and
inc
jo
leave
xchg
dec
mov
out
arpl
dec
add
and
ficomps
push
mov
push
rorb
ja
push
dec
mov
sbb
push
adc
mov
aam
outsl
stos
scas
dec
mov
cmc
test
xchg
sub
or
jecxz
or
jno
das
movsl
daa
add
adc
popf
fisttps
clc
ja
pop
sbb
flds
incb
push
xor
data16
mov
mov
add
inc
jb
ret
dec
xchg
lods
insl
sub
mov
aaa
xor
mov
dec
daa
cmpb
cmpsl
cmp
and
rcll
inc
pop
sbb
fsubrl
in
cltd
add
push
cmpsb
jbe
mov
lods
xor
sahf
loop
inc
ljmp
out
outsb
mov
cmp
xchg
push
cli
or
fdivp
pop
cmp
shlb
test
paddsb
fnstsw
sar
test
mov
ds
push
jns
push
cwtl
pop
or
bound
mov
sbb
or
insl
sub
lahf
fldenv
inc
je
sub
or
and
sub
dec
fbld
hlt
adc
mov
jecxz
fdivs
inc
in
inc
xor
test
push
fsubrs
mov
mov
cmp
sub
dec
sub
sub
cmp
and
cmp
movsb
jb
sbb
popa
lock
fwait
cli
cltd
xlat
pop
cmp
add
jl
gs
imul
mov
mov
dec
sti
stos
mov
and
leave
fstps
mov
daa
fwait
xchg
mov
std
or
lret
sub
jmp
scas
cli
dec
and
imull
ja
out
pop
push
negl
mov
lcall
jb
xlat
hlt
popf
mov
pop
shlb
das
movsb
pop
rclb
ljmp
pop
push
inc
repz
sub
aad
xor
loopne
add
ja
fisubrs
push
and
lds
outsl
push
aaa
movsl
fdivl
es
aad
mov
inc
popa
loope
xor
scas
fsubl
fsubs
dec
in
mov
imul
xchg
dec
cld
jae
sti
add
inc
add
xor
and
insb
sbb
cmpsb
outsb
sbbl
out
adc
loop
dec
mov
dec
sub
or
popa
fmull
pop
sti
stc
rcrb
mov
ljmp
pop
jno
into
adc
lds
push
mov
test
repz
inc
xchg
mov
ljmp
inc
pop
inc
xchg
vcvttsd2si
sarl
and
xor
jecxz
loope
jns
cltd
hlt
and
test
and
jg
dec
es
das
clc
adc
adc
push
enter
adc
hlt
fstps
sbb
adc
mov
dec
lahf
push
cmp
ficompl
adc
or
jmp
dec
sub
ss
or
imul
int3
mov
and
adc
mov
xor
jb
adc
sub
inc
fcoms
xlat
mov
sub
pop
call
cli
jo
sbb
fidivrs
aad
xchg
pop
sbb
inc
in
andl
nop
or
int3
xchg
outsl
mov
add
mov
mov
or
push
jmp
mov
arpl
pop
jmp
subl
or
testb
jbe
stos
inc
addr16
sbb
dec
mov
jecxz
pop
dec
push
hlt
xchg
movsl
dec
adc
popa
sbb
jae
mov
mov
dec
cmp
pop
jle
cli
and
and
fwait
loope
and
mov
dec
enter
add
test
jmp
rcrb
cld
imull
mov
or
ret
pop
cmp
push
cmovs
xor
out
and
in
jo
das
lcall
popa
cli
js
xchg
cld
or
sub
pop
sahf
cs
sub
nop
outsb
inc
sbb
inc
push
sti
dec
xchg
in
test
dec
shlb
mov
gs
sarl
orb
adc
pop
inc
mov
jmp
pop
mov
pop
enter
jmp
rorl
xor
bound
pop
clc
pop
stc
adc
adc
loope
jecxz
scas
jb
push
das
pop
push
jmp
imul
in
lret
cmpsb
xchg
dec
repz
cmp
repz
pop
mov
imul
call
ret
pop
sub
and
lahf
fnstcw
adc
sbb
xor
push
mov
jge
out
pop
sbb
sub
xchg
dec
imul
adc
lret
scas
mov
xor
lds
cmpsl
push
sub
lret
aam
adc
lret
lods
outsb
ss
ss
push
add
test
xor
xchg
mov
and
lret
adc
bound
and
adc
shrl
xchg
addr16
bound
js
and
int
aam
ret
cmp
movsb
xchg
xor
loopne
cmpsl
in
outsl
mov
jmp
jae,pn
loop
and
cmp
mov
add
aam
xor
leave
cmpsb
add
rolb
insl
cmp
jl
lea
int
jbe
sbb
add
mov
and
adc
xchg
scas
icebp
cmp
movsb
inc
aas
cmp
dec
aam
mov
and
not
inc
push
scas
in
in
les
movsl
xchg
lcall
mov
fnstcw
loopne
cmpsl
mov
jbe
pushf
out
mov
mov
aaa
sbb
out
inc
mov
and
mov
repz
fcoml
adc
mov
je
lds
inc
mov
ret
inc
sub
pop
add
sub
and
rolb
cwtl
dec
jae
xor
insb
call
imul
jp
repnz
xchg
xchg
subl
test
jne
cld
push
jp
es
cmp
int3
testl
mov
js
dec
aad
mov
push
push
nop
jbe
icebp
and
clc
bound
push
faddl
pushf
mulb
mov
cld
sbb
in
mov
sahf
xor
out
xor
sub
dec
leave
jl
cwtl
or
enter
mov
repz
mov
jge
sbb
sub
pop
lods
rclb
adc
inc
mov
sarb
mov
fwait
add
cltd
lods
pop
imul
or
sub
scas
cmp
jge
xchg
movsl
test
cltd
out
and
mov
dec
sub
jecxz
rcl
fmul
mov
sti
sahf
pop
cltd
cmpsl
xchg
xor
dec
push
sub
sub
lods
pop
xchg
xlat
repnz
sahf
call
das
dec
inc
ja
ffree
push
nop
adc
je
mov
mov
xor
cmp
test
mov
mov
inc
sbb
sub
roll
ja
jae
push
or
sub
clc
mov
pop
push
xor
pop
call
pushf
scas
mov
inc
in
ret
ja
push
pop
ja
dec
pop
add
inc
movsl
int3
push
jl
push
xchg
mov
in
dec
cltd
pop
not
loopne
mov
inc
test
hlt
push
push
scas
push
leave
pop
add
repz
inc
pop
jb
jecxz
pop
aaa
mov
outsl
scas
xlat
dec
jns
popa
into
mov
es
inc
inc
rorb
ret
lea
mov
cmp
lret
cmp
outsb
pop
rorb
adc
jmp
sarl
mov
or
sbb
push
add
jb
test
xor
popa
adc
daa
pop
jo
mov
adc
mov
mov
test
imul
mov
or
pop
pop
rclb
aad
in
add
xorl
stos
or
pop
inc
xchg
or
ds
jb
and
dec
cmp
mov
shlb
adc
cwtl
ss
pop
sarb
jl
cmp
xor
push
add
or
notl
fcomp
jne
mov
imul
outsl
mov
cmp
in
push
sar
sub
pop
jecxz
sbb
push
fsubrs
andl
gs
xor
mov
mov
das
mov
or
bound
cmp
fsubrl
nop
add
mov
add
jmp
xchg
into
scas
xchg
pop
push
lcall
fdivs
mov
cltd
xlat
push
lahf
xor
je
pusha
dec
pop
or
add
cld
dec
mov
mov
ja
dec
ret
or
cld
movb
push
imul
into
dec
out
cld
lret
mov
lret
shll
mov
sbb
insb
adc
ffree
and
or
xchg
mov
push
or
inc
rolb
shr
in
pop
xor
mov
cmpb
add
pop
mov
ds
push
dec
sub
insl
or
add
cli
mov
repz
leave
mov
es
testb
inc
xchg
push
inc
pop
in
jns
into
ljmp
fsub
add
mov
aaa
dec
cmovg
clc
add
and
int
or
mov
stc
mov
mov
push
int
mov
enter
stc
sub
and
nop
adc
lea
dec
iret
or
bound
test
mov
mov
loopne
pop
std
xlat
inc
push
mov
bound
rcrl
rcrl
gs
add
sub
sarb
mov
rorb
icebp
xchg
jb
nop
cmpsb
dec
jae
and
call
push
sbb
icebp
je
mov
daa
and
sbb
xchg
sysret
scas
negb
sahf
lret
pop
out
icebp
push
es
sbb
leave
mov
test
mov
adc
sub
add
test
outsl
mov
cmp
adc
mov
cs
xor
cmp
cli
imulb
mov
mov
jle
push
adc
test
adc
and
pop
sbb
loop
mov
pusha
cmp
add
std
pop
inc
sub
fildll
cmp
outsl
idiv
push
xlat
pop
push
enter
in
mov
loop
jae
inc
repz
lods
sbbl
loop
xchg
mov
test
incb
pop
lock
ds
cmp
jg
rcrb
cmp
shr
out
push
jnp
sub
fidivs
lea
pop
sub
cli
pop
ss
jle
xchg
out
xlat
push
sub
xchg
fldl
leave
fildl
fcomps
sti
in
shrl
loop
mov
dec
pop
clc
lret
pop
push
das
mov
xor
repz
repz
add
fcmovnb
into
mov
ds
movsb
xchg
js
mov
adc
js
pop
shl
pop
sbb
or
mov
bound
outsb
mov
jecxz
std
push
stos
dec
mov
loope
out
stos
fstpt
push
jl
inc
stos
inc
pop
leave
ret
cmpl
ret
add
pop
lods
xchg
or
mov
push
sub
sub
xor
or
push
psubusw
and
filds
cmp
and
inc
push
clc
sub
mov
pop
in
jno
sbb
or
enter
push
imul
jl
fwait
jmp
outsb
test
shl
jl
pop
mov
lcall
cmp
mov
or
in
popf
je
jnp
out
lds
mov
das
arpl
push
jg
adc
sub
cli
test
jle
lods
push
aas
out
ja
xchg
xor
mov
jne
paddusw
in
aas
push
lds
fildll
push
pop
daa
cmp
and
cmpsb
inc
jns
xor
dec
xorl
cli
mov
pusha
xor
cmc
xchg
xchg
idivb
and
xchg
fcmovnb
cmp
xchg
in
jb
fs
inc
cld
push
in
shrb
push
xor
dec
mov
push
pop
push
sbb
data16
mov
jl
hlt
into
inc
pop
lea
dec
or
push
loopne
in
jmp
mov
rcr
and
xor
fcompl
scas
insb
test
push
push
jp
inc
adc
pop
call
cli
ja
or
fmul
add
inc
mov
adc
push
aaa
jecxz
push
add
jns
fstpt
adc
push
xor
sbb
dec
leave
jle
jmp
cmp
or
cwtl
fdiv
xchg
insb
ror
decl
xchg
std
push
push
add
inc
mov
stos
push
mov
hlt
or
sahf
add
enter
test
sarb
jl
in
xchg
jle
cltd
pop
mov
cltd
and
sub
push
jbe
and
shll
jge
notb
lahf
or
subb
dec
addb
dec
les
out
cmp
pushf
mov
leave
lret
pop
scas
inc
cld
jp
test
mov
sahf
lret
push
loop
aam
clc
cli
bt
int3
add
jne
dec
pop
mov
push
mov
out
in
push
mov
adc
push
test
or
iret
mov
xchg
dec
jo
xchg
stos
add
popf
lods
xor
push
push
pop
cs
aad
data16
adc
sti
adc
call
add
pushf
mov
inc
scas
push
testl
lret
fldcw
cmp
mov
sbb
inc
std
pop
mov
and
popf
lods
lea
lods
mov
jns
jmp
and
sub
mov
loope
lcall
shlb
ljmp
xchg
aam
shlb
push
imul
ljmp
or
lea
push
in
push
inc
daa
sarb
cmp
sbb
or
dec
xchg
cmc
adc
sub
lods
hlt
sub
xor
bound
leave
sbb
inc
and
daa
shrl
mov
cmp
lds
or
lret
inc
xlat
and
sbb
mov
jno
xchg
adc
push
adc
push
mov
push
testb
xchg
push
jb
dec
das
aam
out
cmp
imul
dec
mov
nop
js
sub
int
mov
sbb
int
test
bound
pop
xor
int
mov
leave
rcrb
add
iret
xchg
test
mov
sbb
dec
cmc
inc
jge
orb
clc
inc
adc
mov
jmp
mov
cltd
xchg
adc
push
pop
push
push
ficomps
mov
xchg
in
fwait
int
mov
jb
in
and
scas
lret
stos
push
cmp
stc
mov
or
cltd
div
sub
jno
or
sbb
aam
push
xchg
inc
sbb
andl
loop
or
enter
and
cmp
fadd
push
cmp
and
and
or
xlat
or
test
sbb
inc
lea
es
mov
fwait
aad
mov
fcompl
das
test
and
dec
jge
mov
jno
mov
fdivr
mov
xchg
dec
or
aam
sub
and
stos
rcrb
push
cmc
cmp
call
out
vmwrite
mov
cmc
mov
dec
mov
fs
dec
inc
or
pop
mov
negl
mov
or
sbb
and
repnz
sbb
or
pop
lods
lret
in
push
andl
xchg
inc
leave
cmp
xor
cmp
mov
fwait
idivl
mov
stos
mov
cs
xchg
add
icebp
pop
xchg
orl
xchg
add
and
and
out
push
pop
imul
dec
push
aas
mov
outsb
fsub
mov
inc
popa
mov
xor
inc
cltd
inc
pop
ret
stc
fs
xchg
mov
and
mov
mov
add
lcall
aam
in
and
mov
sarb
dec
mov
pop
lret
or
dec
fstpl
push
notb
mov
enter
andb
mov
jp
ljmp
cmp
sub
mov
lret
and
lods
outsl
and
pop
inc
loop
out
stos
lcall
notb
inc
xor
inc
out
inc
out
pop
div
push
leave
inc
pop
testb
pop
stos
stos
test
lahf
and
stos
inc
or
repnz
sbb
xor
addl
mov
scas
lcall
mov
sub
repz
add
sbb
xor
je
popa
adc
std
xor
fnstsw
or
jns
mov
ret
addr16
add
inc
mov
add
sbb
push
aad
dec
pop
mov
pushf
addb
dec
scas
negb
mov
cmp
lods
fiaddl
inc
rcl
lods
or
jbe
ljmp
lret
dec
pop
dec
sbb
push
adc
sahf
dec
and
pop
mov
pop
mov
pop
mov
lods
inc
mov
cmp
xchg
lret
lcall
jle
pop
in
xchg
pop
sub
stos
mov
daa
push
cmp
xchg
cmp
clc
test
adc
repnz
mov
rcr
pop
ret
push
imul
mov
xchg
mov
pop
xchg
rcr
xchg
xlat
shrb
mov
pop
inc
int
xor
lods
cmp
scas
movsl
jle
or
in
out
push
jne
aad
leave
repz
mov
outsb
push
sub
or
fldcw
lret
nopl
lods
das
cvtpi2ps
pop
jge
cld
stos
mov
adc
pop
lds
stos
lahf
jmp
cltd
loopne
ja
popf
stos
sub
fcomps
cmp
mov
ja
inc
jns
popf
inc
out
addl
and
in
xchg
cli
xor
sbb
lods
outsb
cmp
mov
mov
out
mov
lds
or
pushf
es
dec
and
xchg
jp
dec
cmp
repz
inc
arpl
fcoms
push
adc
dec
mov
inc
fs
sti
shrl
cmp
daa
xor
out
mov
pop
mov
xchg
sbb
aaa
dec
dec
jmp
sub
mov
lahf
dec
jmp
push
xor
mov
movsb
nop
inc
add
lea
js
inc
inc
adc
pop
xlat
xchg
iret
out
lret
lock
lds
into
sbb
loop
or
sbb
cli
dec
dec
and
mov
sahf
mov
jnp
sub
pop
xor
fcomi
sahf
scas
fimuls
inc
loop
cmp
inc
arpl
fiadds
dec
les
xchg
imul
in
addb
arpl
pop
dec
lea
je
mov
jle
xlat
out
adc
dec
int3
xor
cmc
orl
fidivl
ficompl
jns
mov
mov
stos
or
popa
xchg
imulb
jg
nop
add
sti
pop
outsb
ss
jne
inc
aad
push
sub
cmpsb
jne
jb
pop
mov
orb
or
pop
mov
enter
inc
leave
mov
inc
or
xlat
xor
lcall
or
adc
ljmp
jno
stc
xor
cmp
lods
cmp
stos
fisubrs
ret
xchg
or
into
call
test
dec
jecxz
mov
xchg
xor
xchg
mov
cmp
dec
mov
push
sub
jnp
sub
jbe
and
scas
mov
js
subps
or
loop
cmp
repnz
inc
test
js
in
scas
sbb
cmp
mov
mov
mov
mov
in
aas
pop
into
in
push
sarb
add
push
lods
imul
push
pop
popf
sub
and
jle
mov
stos
fimull
sub
or
in
and
jl
or
decb
inc
and
xor
add
push
test
shll
int
dec
divl
test
sbb
insl
ljmp
xor
rcrb
cli
xor
test
inc
or
daa
imull
xchg
sti
cmpsb
xchg
nop
out
mov
sahf
outsl
pop
aas
scas
shll
ljmp
pusha
cmp
pop
add
lret
and
data16
inc
out
push
jo
sbb
pop
scas
xchg
arpl
in
or
mov
add
mov
jmp
arpl
add
in
add
es
ficoms
xchg
xchg
in
mov
cmc
mov
sub
push
mov
bound
mov
add
jno
scas
jecxz
lea
mov
sahf
adc
cmp
or
jp
bound
xchg
xor
out
fs
gs
inc
fcompl
shll
mov
gs
iret
and
ret
ret
mov
mov
mov
std
pop
test
xchg
push
fwait
cs
or
cmp
subb
lds
call
sub
in
xchg
sbb
sbbb
inc
std
nop
std
jle
jne
dec
inc
dec
fwait
lret
inc
jns
fimull
mov
mov
jnp
jns
aad
adc
pop
lcall
jns
std
das
mov
mov
aas
mov
dec
sub
push
daa
shll
ss
faddp
sti
inc
lods
dec
sbb
sub
adc
push
test
fidivl
adc
sub
jno
sub
mov
cmp
lret
jne
adc
xor
test
pusha
fs
jae
in
jmp
shl
ret
leave
dec
or
inc
adc
push
jp
mov
mov
push
in
lock
xor
cmp
mov
lods
fsin
lahf
xchg
testl
test
mov
inc
push
and
jle
pop
cld
sbb
cltd
cmp
nop
pushf
or
jg
cmc
cltd
test
mov
mov
xchg
mov
jo
push
aam
ffree
test
jecxz
in
xchg
stc
dec
jb
mov
addr16
dec
push
orb
and
add
dec
shrl
adc
adcl
mov
aaa
test
das
rorl
fidivl
fistl
sub
fisttpl
push
jns
cmpb
ret
lcall
aad
or
fstpt
scas
in
popa
mov
sub
test
mov
inc
sub
mov
dec
call
ficomps
xchg
movsb
xor
mov
or
xchg
sbb
ss
and
cmp
lea
mov
js
mov
push
loopne
adc
dec
jge
mov
jae
fucomip
shl
mov
cs
stos
xchg
aas
adc
or
popf
cmpsl
cmp
sbb
hlt
out
pusha
into
sub
loopne
stos
sbb
insl
sahf
jno
cli
inc
repnz
cmc
jo
mov
aam
fistpll
pop
cmc
scas
vcvtdq2ps
mov
lods
or
xlat
es
inc
xchg
mov
mov
xchg
fbstp
out
popf
lods
popa
ret
fisttps
jb
inc
xchg
and
xor
insl
lds
lods
add
mov
pop
jne
push
xor
leave
repz
fs
mov
icebp
mov
mov
xorl
jge
das
xor
imul
xchg
iret
scas
push
ljmp
repz
aam
negb
xchg
lea
lods
lret
imul
mov
adc
clc
jo
mov
lock
dec
cmpsl
push
in
dec
cmp
ret
adc
inc
mov
cmpsb
add
movsl
xchg
and
pop
mov
mov
xchg
add
jae
daa
out
mov
das
jnp
fdiv
mov
addl
ds
push
addr16
popf
dec
scas
das
push
dec
mov
negb
js
and
mov
dec
mov
mov
push
adc
push
outsb
dec
dec
bound
pop
push
mov
and
jbe
js
push
dec
scas
push
xchg
andb
push
push
jp
cli
jge
out
xchg
or
sub
rcll
popa
lock
lcall
js
and
aaa
daa
aaa
mov
jle
sbb
xchg
data16
add
lods
adc
jbe
xchg
sub
inc
adc
mov
lea
insb
int3
add
or
arpl
jno
in
lret
or
dec
jmp
mov
mov
lcall
dec
sub
popa
xchg
stos
push
sbb
lods
sub
divl
mov
mov
dec
mov
shl
pop
mov
cmc
shl
and
sbb
xchg
add
jle
add
or
xchg
mov
xor
jne
pop
iret
rcrb
or
cwtl
lcall
call
test
jbe
imul
insl
hlt
xchg
sub
sbb
es
popa
adc
sbbb
fdivrl
mov
mov
push
xor
dec
pop
lret
jle,pt
sub
jmp
lret
out
cmpsl
ljmp
add
call
lret
adc
mov
ds
int3
sub
pop
imulb
sbb
js
dec
lcall
imull
xchg
push
xchg
sub
pop
and
mov
mov
add
push
sbb
test
dec
out
std
xchg
pop
nop
scas
xchg
dec
push
sbb
and
sub
fadds
push
jnp
pop
mov
mov
out
or
jp
and
mov
lret
movsb
cmp
fmuls
les
std
xchg
ljmp
jecxz
jne
out
out
pop
lcall
xchg
in
jae
scas
adc
ja
adc
outsl
xor
add
outsl
xchg
fwait
mov
mov
roll
ret
iret
xchg
pusha
scas
cmp
ja
fisubs
out
jg
daa
mov
test
jmp
sbb
mov
aas
push
inc
mov
clc
stos
mov
scas
enter
dec
jns
inc
gs
call
mov
and
imul
add
and
xchg
fcoms
iret
xor
repnz
pop
sti
mov
mov
bound
fadds
movsl
stos
xchg
adc
jecxz
jg
leave
in
lahf
sub
mov
pop
fldcw
cmp
movsb
pop
loopne
sbb
sub
cmp
mov
cltd
movsl
ja
jo
ret
pop
cmc
inc
ret
sub
xlat
testl
outsl
nop
xor
mov
jno
inc
dec
inc
pop
stos
inc
jg
sub
mov
mov
jns
cld
mov
pop
sbb
xchg
sub
test
imul
in
xor
inc
ret
mov
out
ss
add
lods
xchg
mov
xor
push
mov
ret
test
dec
add
push
lcall
jl
ficompl
pop
int3
sbb
sarb
xor
icebp
push
fcomps
lds
mov
fxch
les
mov
movsl
cwtl
mov
movsl
test
fbstp
call
mov
stos
mov
lea
jmp
dec
lret
ret
jp
sbb
addb
pop
jmp
push
xor
mov
pop
lret
xchg
arpl
mov
xor
cltd
stos
aam
mov
in
xchg
pop
jb
xor
and
je
jle
insb
adc
movl
mov
inc
pop
pusha
popa
or
pushf
dec
sti
aam
add
sub
mov
jecxz
inc
cld
sbbb
movsb
outsb
mov
leave
adc
inc
clc
mov
mov
daa
mov
mov
mov
mov
test
aad
jo
movsl
ret
xchg
mov
insb
inc
int3
push
push
cmpsb
sbb
pop
enter
adc
or
inc
xchg
xor
addb
dec
pop
adc
pop
push
xor
xlat
dec
insb
jmp
out
test
ret
cltd
and
je
dec
dec
loop
into
std
test
dec
sub
dec
div
adc
js
mov
mov
sub
pop
in
jb
aad
into
jbe
loopne
cmpsl
rorb
dec
mov
mov
jns
pop
mov
adc
add
mov
ds
push
and
test
arpl
in
shl
int
frstor
lea
add
imul
dec
mov
in
pop
fstpl
push
loope
pop
mov
or
in
push
xor
mov
pop
xchg
bound
mov
in
or
lea
sbb
test
jns
push
lahf
lock
stc
fidivrl
scas
cmc
aas
in
dec
ret
outsl
jle
jl
loope
imul
lret
aaa
mov
loop
and
inc
jg
xchg
xlat
cmpb
incl
xchg
cmp
aaa
cmc
stos
xchg
mov
jecxz
add
stos
cltd
icebp
stos
ret
in
imul
pop
add
mov
xchg
mov
call
inc
and
out
imulb
ja
ljmp
push
in
imul
in
in
and
fs
cmp
sarl
mov
out
push
lret
inc
fnstenv
mov
int3
cld
pop
out
pop
dec
xchg
fcmovnu
push
mov
nop
divb
and
sub
adc
jmp
iret
jb
xlat
call
out
loope
add
negl
jb
shlb
sahf
mov
jno
or
jle
pusha
pop
pop
das
jecxz
sbb
movsb
and
test
fdiv
cmp
jl
dec
xor
jne
cmp
lock
mov
push
sbb
add
stos
mov
stc
lcall
add
gs
add
ret
mov
inc
push
push
sub
dec
sbb
mov
and
mov
xchg
sti
and
pop
fdiv
repz
fwait
mov
cmp
jmp
adc
mov
pop
adc
add
outsb
inc
inc
pop
pop
and
dec
mov
mov
mov
rolb
mov
clc
pusha
xor
fsub
pushf
mov
inc
inc
mov
push
push
loope
enter
adc
mov
out
dec
jg
insl
xchg
mov
ret
inc
fmuls
imul
bound
xchg
les
push
mov
pop
or
pop
jne
sahf
loop
push
leave
lods
xchg
imul
and
mov
sub
insb
or
mov
xlat
pop
sbb
sub
lods
ja
push
sub
add
xchg
mov
sub
lret
popa
lock
loopne
mov
movsb
sub
sbb
adc
dec
sbb
mov
jmp
push
fdivp
inc
popa
add
add
add
dec
xchg
mov
mov
inc
mov
xchg
cli
inc
fcompl
dec
or
push
mov
subl
fwait
push
jle
fnstenv
mov
cmc
lea
and
ds
stos
int3
in
leave
repz
xchg
or
mov
fidivrl
sub
xor
pop
add
mov
cwtl
pop
mov
idiv
dec
push
out
xor
rclb
enter
cmpsb
mov
sbb
jp
rorl
mov
mov
push
jo
jl
xor
push
sarb
push
daa
lock
out
adc
fs
or
int3
sahf
cmpsl
lods
decb
mov
jo
ds
insl
cmpsb
adcb
xorl
test
ret
push
sbb
mov
jge
jle
add
repz
xchg
imul
xorb
scas
repnz
aas
xlat
jno
in
ljmp
divl
sbb
inc
add
data16
jne,pt
cmp
sbb
insb
repz
lods
test
sbb
mov
mov
add
and
lds
xor
divl
iret
mov
movsl
sti
fdivrs
sbb
out
rcrl
insb
inc
cli
out
cmp
jb
push
dec
arpl
test
jo
xchg
cmp
ret
xchg
scas
mov
add
dec
popa
subb
xchg
iret
or
icebp
sub
jae
dec
push
fwait
inc
pop
cmpsl
out
pop
fldcw
push
testb
jecxz
mov
jge
mov
outsl
fcoms
push
or
sbb
push
dec
dec
adc
bound
divb
popf
inc
mov
add
cmp
sub
cmp
adcl
add
push
sahf
out
pop
add
mov
in
imul
sbb
dec
sub
cmpsb
int3
mov
dec
cmpsl
sub
xlat
dec
sbb
rcll
test
and
mov
stos
out
int3
adc
fcoms
pop
aaa
cmp
adc
pop
out
rcrl
and
pop
adc
sbb
sub
outsl
aam
xor
sarb
pop
ret
cmp
cmp
add
rcll
dec
mov
mov
aas
inc
das
ss
inc
xchg
jg
push
mov
inc
clc
ss
push
push
movsb
repnz
call
std
in
mov
jnp
xchg
in
lcall
pusha
add
ret
inc
daa
jb
pop
dec
loop
xlat
pop
xor
jae
rcll
addr16
jg
shll
fildl
inc
inc
dec
xor
cmp
jp
xor
in
fwait
sarb
xor
pop
adc
or
stos
mov
shlb
pop
mov
sti
je
cli
sbb
xor
and
dec
sbb
xchg
loop
sbb
mov
mov
and
das
cmp
mov
push
adc
xor
pop
es
dec
ret
bound
lock
sahf
jecxz
mov
adc
movsb
jbe
sarl
mov
hlt
push
cmp
cmp
cmp
add
ret
push
mov
sar
mov
out
add
scas
sbb
cltd
and
pop
cmp
test
gs
pop
lods
dec
movsl
sbb
test
pop
es
dec
dec
add
hlt
dec
xchg
pusha
inc
out
sbb
xor
std
or
push
push
mov
dec
cwtl
sbbl
int
clc
lods
lret
dec
lods
push
sub
xchg
jnp
insl
or
or
mov
ss
jecxz
fwait
inc
decb
enter
sub
add
add
or
test
xor
xor
xorb
xor
fsubs
out
mov
loopne
sbb
movsl
ds
add
subb
popf
call
lret
gs
jmp
inc
jb
xchg
sub
lods
mov
mov
aad
in
jg
jg
xor
stos
cld
loopne
and
dec
push
cmpsl
adc
iret
fldl
mov
inc
mov
mov
push
xchg
sub
pop
xchg
mov
mov
frstor
test
push
xchg
xlat
mov
sub
mov
movsl
loop
sbb
jle
xor
fldt
outsl
adc
data16
aad
adc
rorb
cmp
cmpsb
jne
mov
lret
inc
in
dec
movsl
xchg
or
lahf
je
and
jo
cmp
sub
sub
inc
stc
ds
out
dec
movsb
sbbb
outsb
je
fistpl
cmp
das
ret
and
add
inc
jno
iret
sub
cmp
xchg
xor
sub
dec
cmp
xor
in
sbb
je
cmp
subb
sti
pop
add
fistpll
cmc
popf
pop
jmp
adc
adc
pop
sub
push
push
pop
fcmovnb
dec
push
ja
insb
scas
sbb
lcall
scas
mov
pop
aas
fbld
xor
test
pop
push
inc
push
jae
cltd
outsw
rorl
addl
into
je
pop
mov
xchg
fs
xchg
pop
clc
and
sbb
in
orb
aad
fs
sub
jle
cli
xor
loope
inc
push
outsl
rep
mov
bound
imul
in
push
jnp
pop
pop
cli
xor
clc
pushf
push
stos
bound
pusha
jo
out
shl
adc
repnz
out
push
imul
lds
rorl
scas
lea
cmp
fwait
push
cmpsl
fstpl
mov
fadds
lds
push
cmp
aam
hlt
dec
push
push
push
sub
inc
xor
add
ss
sbb
push
jb
cli
xchg
out
shll
pop
ret
aad
push
insb
xchg
test
sbb
pusha
xchg
loop
in
fwait
sub
sub
fdivrs
and
gs
jecxz
iret
fdivrs
xor
inc
adc
fwait
daa
push
popf
pop
mov
fsub
jg
ficompl
sub
int
push
testl
outsb
xor
dec
xchg
nop
or
stos
into
jecxz
pop
xor
test
js
in
shll
iret
xchg
pop
mov
or
mov
push
js
insl
icebp
push
iret
sbb
divb
xchg
mov
xor
and
std
jns
mov
ss
ret
jecxz
lods
xchg
lock
arpl
dec
and
jle
adc
mov
hlt
fwait
movsl
out
jne
add
popa
sbb
es
mov
sbb
out
sub
sub
sbb
and
pop
and
push
pop
rclb
push
push
cli
pushf
arpl
punpcklbw
and
fdivl
jecxz
inc
jo
xchg
and
fwait
mov
xor
jns
pop
pop
mov
inc
dec
adc
imul
inc
repz
push
ljmp
sar
adc
faddl
mov
mov
out
mov
cmpsb
jne
sbb
cmpsl
xlat
cmpsb
in
aad
push
arpl
jae
pop
xchg
or
clc
loopne
mov
pop
xor
mov
mull
icebp
lods
jbe
sub
xor
mov
lcall
addr16
adc
xchg
fsubp
push
mov
pminsw
sbbb
ss
pop
xchg
pop
cmp
xor
mov
adc
shlb
ret
ja
adc
dec
aaa
pop
ss
jae
mov
push
and
rcrl
out
dec
test
mov
and
jge
test
fstpl
adcl
or
jecxz
lret
into
xor
sub
and
shlb
insl
cs
mov
fistpll
xor
xchg
std
out
inc
fdivrl
inc
cmc
cwtl
inc
test
jp
pusha
dec
pop
arpl
sub
jge
mov
dec
mov
pusha
mov
sub
popa
imul
push
mov
dec
pushf
sbb
inc
xlat
sbb
test
or
mov
rolb
pop
jle
cmp
inc
adc
jns
and
xor
cmpps
jae
mov
in
lock
movsb
jle
and
sub
cmc
xor
and
mov
adc
push
xchg
test
cli
push
xor
fcomi
push
adc
xor
mov
push
cmp
mov
adc
inc
leave
xor
or
stos
addr16
add
fstps
sub
xchg
mov
push
movsl
mov
xor
push
leave
das
mov
adc
jae
rolb
mov
sub
cmpsl
add
dec
das
movsb
mov
cmp
imul
ret
mov
add
repz
add
into
mov
lcall
ja
pop
cmp
out
mov
out
jae
sar
cwtl
stos
out
rclb
sub
cmp
movsb
sarb
clc
mov
pop
push
into
shrl
popf
pop
rolb
add
rorb
or
jno
rcll
push
adc
arpl
mov
adcb
pop
lds
add
cmp
mov
cmp
cmpl
cmp
cli
push
add
push
xchg
pusha
sub
jp
pop
daa
jecxz
fidivs
into
es
mov
pop
mov
mov
sar
pop
sahf
into
divb
jmp
xchg
leave
and
mov
push
push
fstpl
andb
adc
dec
lahf
xchg
or
pop
xorb
fs
xchg
inc
pop
xor
sahf
enter
mov
push
and
inc
jo
shll
bound
mov
inc
pushf
and
cmpsb
adc
jnp
mov
mov
int3
test
jl
xchg
pop
sbb
push
lods
or
push
jecxz,pt
arpl
inc
test
cmp
mov
stc
pop
outsl
xchg
popf
rcll
test
xchg
jmp
popf
out
enterw
lods
decl
arpl
out
mov
sub
push
inc
outsb
xchg
repnz
test
aas
cwtl
or
mov
pop
sbb
inc
daa
adc
repz
or
cli
out
mov
movsl
or
rcr
push
push
xchg
push
ja
andb
sub
xor
stc
int
je
xchg
into
push
sbb
pop
hlt
xchg
testl
or
cmpsl
movsl
xchg
les
push
sar
adc
add
ret
fcmovb
ds
scas
test
jle
fnstcw
or
outsb
push
jmp
rclb
jg
sbb
dec
fldenv
sbb
out
sub
pop
pop
cmpb
ret
ljmp
mov
push
mov
pop
pop
jg
cmp
dec
test
lea
inc
push
int3
lahf
fmul
test
xor
nop
fstps
fs
stos
add
mov
ret
js
sahf
or
icebp
rcll
pop
ljmp
loopne
adc
push
and
out
mov
pop
xchg
add
neg
xchg
xor
mov
inc
xchg
push
and
cwtl
xchg
mov
lods
pop
cs
xor
pop
pop
pop
lahf
outsb
mov
inc
lret
adc
popa
inc
sbbl
mov
cmpsb
add
mov
jp
sub
mov
out
push
push
pop
pop
rcrl
jmp
sbb
dec
mov
mov
movsl
pop
out
add
jbe
rcrb
fisubrl
xchg
and
inc
mov
popa
adc
mov
fisttps
aam
mov
std
xor
hlt
dec
out
orl
ret
xchg
mov
mov
gs
mov
push
pop
ljmp
pushf
lldt
and
arpl
add
push
adc
mov
mov
aad
repnz
inc
xchg
jnp
push
push
xchg
or
fists
and
mov
pop
imul
fstp
clc
xchg
dec
inc
jl
repnz
fsts
and
mov
mov
enter
sub
add
and
xor
mov
push
jp
movsl
adc
lods
xor
repnz
scas
add
fwait
out
ret
aam
es
or
dec
cli
or
movsb
adc
push
fildll
push
in
cmp
scas
sbb
lret
xor
inc
sti
lcall
fisubl
nop
jl
adc
inc
jb
xchg
mov
insb
rorb
fwait
shr
xor
dec
mov
icebp
das
mov
push
jle
shlb
fwait
ja
mov
cmc
shrb
cli
lret
bound
mov
inc
pop
xor
mov
in
adc
and
xor
repz
scas
mov
stos
jo
and
lahf
sbb
xchg
sub
leave
lret
rcrl
and
pop
lcall
roll
hlt
nop
test
cmpsb
or
pop
into
or
pusha
xor
pop
mov
scas
xchg
adc
fstl
xor
dec
fwait
arpl
sarb
mov
mov
or
add
cmp
xchg
or
fucomp
pop
mov
ds
mov
jecxz
cmp
int
std
outsl
call
movsl
cmc
and
adc
cmp
sbb
cmp
lret
incl
scas
jg
push
xor
jb
test
aas
aam
sar
js
out
decl
mov
fnsave
cmp
js
jnp
pop
enter
scas
xor
dec
in
inc
mov
xchg
and
mov
addr16
sbb
pushf
xor
mov
jmp
xchg
data16
adc
incb
jge
andl
sti
icebp
dec
dec
ret
adc
xchg
clc
repz
mov
xor
cmp
cwtl
cmp
cltd
xor
inc
repz
cmp
loop
inc
mov
bound
stos
out
cmpsb
adc
imul
lds
into
mov
lds
pop
out
in
lcall
fwait
sub
and
sbb
arpl
nopl
sbb
mov
mov
xor
loop
scas
pop
jne
mov
and
cmpsb
xlat
int
popa
in
cmp
mov
inc
cmp
cltd
imul
mov
mov
cmp
xor
imul
sub
mov
xchg
pop
and
cld
je
push
cmp
adc
xchg
mov
inc
daa
adc
sahf
push
push
icebp
scas
addr16
xchg
insb
jno
cli
mov
xchg
negl
jae
jbe
ret
push
repnz
cmc
xor
iret
mov
sbb
sub
add
sub
lock
pop
and
mov
pop
sbb
xor
push
out
or
les
adc
out
cld
call
in
imul
lock
cmp
or
popf
scas
xor
in
jg
pushf
push
mov
mov
xor
add
lret
test
cmp
lret
insb
jnp
popa
aas
rol
xchg
mov
daa
and
mov
jbe
adc
pop
cmp
sbb
fildll
mov
xchg
sti
int
push
mov
bound
sub
in
and
adc
mov
dec
mulb
lods
pop
test
cmp
dec
pop
je
fldcw
mov
das
pushf
dec
dec
xchg
pop
sahf
mov
dec
mov
push
ss
sub
pop
int3
ja
pop
sub
lahf
mov
popa
imul
or
loopne
enter
sti
push
lock
mov
inc
cmp
xor
sub
sub
and
cmp
test
mov
rcrb
outsb
xor
dec
xor
loopne
popf
pop
test
xchg
aaa
lea
jmp
jae
jl
inc
add
sbb
inc
cmc
mov
test
mov
daa
cmp
shlb
cmp
dec
popa
sbb
int3
jg
pop
mov
hlt
add
shl
pop
adc
insl
sbb
inc
aaa
mov
xorb
pop
fwait
insb
into
test
adc
loope
insl
fcmove
mov
push
js
mov
push
jo
sub
aam
cmpsl
into
inc
lods
jg
mov
pop
shl
jmp
jb
cmp
dec
mov
pop
nop
cwtl
sub
sbb
push
icebp
jb
mov
dec
adc
xchg
int
xor
into
movsl
xchg
popf
xor
daa
fcmovu
aas
sbb
fst
pop
arpl
dec
fnstsw
out
test
and
stos
clc
cmp
out
push
push
loop
test
xchg
lahf
add
stc
sarl
push
nop
jmp
loope
lret
dec
xchg
cmp
ja
fisubrs
and
inc
add
cvttps2pi
and
cmp
add
mov
mov
pop
call
pop
jmp
sub
in
in
insb
shrl
lock
xchg
push
mov
mov
and
test
xchg
jo
jmp
jns
mov
mov
call
jns
sub
es
pop
loope
add
fstl
outsl
ret
mov
rcrl
inc
push
cmp
popf
add
outsl
insl
pop
dec
movsb
add
ss
adc
hlt
lea
lcall
mov
ret
inc
roll
add
lods
fninit
and
push
push
push
fs
sub
mov
icebp
push
pop
and
movsb
adc
nop
mov
push
cmp
fsts
imul
ljmp
dec
filds
jp
dec
adc
xchg
xchg
jge
mov
lods
xchg
add
jnp
pop
vxorps
mov
xchg
jae
mov
sbb
in
jbe
sub
sbb
mov
fcomip
std
mov
fiaddl
ljmp
dec
mov
mov
testl
in
shlb
in
inc
xchg
xchg
test
leave
int3
lods
add
jnp
jmp
dec
jge
lahf
xor
add
sub
fstpt
lret
jae
dec
sub
fiadds
cmpsl
bound
pushf
adc
add
cmp
test
stos
cltd
inc
or
and
movsb
adc
jl
dec
cmp
mov
sbb
aam
cmpsb
xchg
push
cmpsb
sub
ret
mov
cmp
sahf
popf
mov
popa
push
sbb
push
pusha
into
leave
cmp
mov
jae
mov
pusha
push
mov
aaa
push
test
lea
mull
daa
jb
out
into
stc
sub
imul
movsl
jae
ds
jp
adc
mov
pop
jne
je
loope
push
hlt
sub
xchg
loope
inc
into
add
loopne
mov
push
jmp
jne
aam
popa
es
cmp
repz
sub
sub
add
cmp
insl
jns
mov
clc
cmp
sub
popa
cld
mov
in
gs
ds
push
test
cmp
pop
add
and
movsl
pushf
bnd
in
adc
test
mov
lret
sarl
stc
orb
add
xor
push
aad
aas
mov
sbb
int
divb
or
sbb
push
aaa
in
sbb
out
pop
ret
test
into
jge
ficompl
xchg
aas
cltd
lret
aas
jae
push
xlat
mov
add
add
inc
push
pop
push
pop
insb
xchg
mov
ret
xor
push
cmpl
sbb
add
push
mov
jmpw
popa
fsubl
insl
jnp
cmpsb
insb
jle
cmpsb
test
sub
mov
sti
addr16
test
mov
inc
xchg
jno
cli
push
pop
and
faddl
pop
mov
inc
cmp
adc
dec
leave
jo
loopne
mov
imul
mov
sbb
adc
ret
dec
je
rep
and
divb
repnz
and
mov
sbb
cmc
lea
sub
inc
frstor
out
arpl
ficoms
or
or
into
sbb
je
mov
sub
ja
iret
push
mov
shrl
adc
jl
inc
xlat
sub
mov
dec
enter
dec
sahf
or
mov
cmp
std
cmpsb
iret
lds
adcl
addr16
cli
insl
pushf
xlat
mov
movl
sarl
fisttpll
es
cs
xlat
xchg
das
out
test
cmp
popf
fadds
xor
jb
pop
arpl
dec
xor
mov
lcall
cmp
sbb
mov
and
or
test
lods
or
imul
xchg
or
fwait
leave
cli
push
fdiv
inc
bsr
or
iret
stos
imulb
fidivl
lahf
jg
cmp
aaa
jns
add
add
sub
xchg
adc
int
add
jge
jnp
xchg
xchg
sub
add
push
mov
cmp
xchg
hlt
repz
addb
push
repz
lds
sub
arpl
cmp
xchg
or
mov
aaa
not
mov
jecxz
and
fldcw
lds
fsts
popa
ljmp
sbb
pop
cltd
sub
fwait
shl
mov
popf
in
xchg
cmp
nop
fldcw
lods
mov
imul
ljmp
scas
sti
xor
dec
addb
and
out
out
pop
push
and
or
sub
imul
into
popf
mov
push
dec
test
or
jmp
not
jmp
fimuls
pop
scas
jmp
sub
fmull
mov
daa
xchg
sbb
sbb
mov
call
jnp
mov
jmp
sbb
stos
notb
push
sbb
jae
fsub
pop
out
in
jns
and
or
jo
mov
xchg
cmpl
adc
inc
fldenv
mov
int3
outsl
flds
popa
cwtl
fsubrs
cmp
xchg
ljmp
add
jne
mov
pop
mov
sbb
mov
xorb
clc
adc
cwtl
push
pop
xor
test
mov
cmc
dec
dec
repz
add
negb
out
std
mov
sti
push
mov
xchg
test
inc
aad
push
sbb
lret
lea
loop
mov
out
insb
movsl
loop
mov
aas
cld
cmp
insb
lcall
cld
cmpsl
or
test
cs
aam
sahf
das
dec
fcmovbe
mov
fidivrl
push
aaa
jb
mov
or
outsb
pop
mov
mov
rcl
fildl
leave
jnp
shlb
outsb
jl
cs
cmp
jnp
inc
mov
scas
hlt
mov
std
pop
fisubrl
mov
test
jo
daa
ds
adc
in
outsl
and
xlat
loop
push
dec
ljmp
push
not
cli
fdivp
loope
add
adc
push
daa
jbe
lret
pop
jecxz
jne
test
test
inc
add
pop
pusha
mov
sti
test
cmp
cld
push
fnsave
int3
int3
int
clc
xor
test
imul
cmpsb
dec
repnz
inc
push
xor
jnp
push
add
bound
pop
enter
mov
scas
ret
cmc
mov
lea
sub
sub
mov
add
dec
arpl
test
pop
enter
enter
push
push
xchg
sub
jne
add
jo
jne
rcl
push
cld
cld
out
and
pusha
test
scas
fdivs
shll
xchg
cmp
int3
adc
aad
out
loope
jmp
into
insb
mov
repnz
cwtl
cmpsl
or
rorb
inc
and
fldt
push
insb
push
or
xchg
arpl
jl
mov
dec
pop
and
cmp
mov
fistpl
ficompl
imul
mov
push
call
push
cmp
stos
lods
xor
setb
jg
std
lods
out
jns
sub
sub
outsb
jo
js
fwait
mov
jg
faddl
popa
jmp
in
in
or
adc
jbe
push
pusha
subw
sub
and
movsb
dec
loopne
outsb
mov
lods
xor
adc
add
ds
cld
mov
test
shll
adc
fwait
pop
sbb
cmp
inc
jp
adc
push
and
not
lods
pop
push
push
ja
mov
sub
mov
std
adc
add
fsubp
pop
enter
scas
fisubrs
xchg
stos
stos
aaa
sub
mov
adc
mov
out
iret
inc
mov
mov
mov
mov
pop
jge
lcall
icebp
mov
cmp
scas
adc
sub
mov
jecxz
xchg
pop
mov
xchg
sahf
jle
dec
add
mov
mov
jnp
dec
and
dec
aam
add
jle
or
inc
roll
imul
pop
jno
or
dec
mov
mov
jl
ret
nop
stos
bound
and
cmp
mov
add
pop
mov
test
pop
sahf
pop
dec
add
inc
xchg
cmc
xorl
test
ret
fsubr
and
iret
sbb
jbe
cs
fwait
ja
outsb
push
inc
test
pop
jns
cli
lods
cld
clc
fcomps
ss
sub
jns
dec
push
cmp
sub
divl
inc
repnz
add
stos
roll
jbe
lea
das
cmp
movsb
out
push
pop
xchg
sahf
xchg
mov
mov
test
jecxz
stos
cmp
out
lods
arpl
jecxz
mov
or
sahf
jnp
push
adc
shrl
cmp
aad
leave
and
loope
ret
dec
cmp
inc
sub
cmp
xlat
mov
sarl
jns
test
xchg
mov
lock
xchg
cmp
scas
cmp
or
mov
mov
sub
sahf
add
inc
xor
pop
pop
mov
xchg
test
push
jle
jnp
lods
gs
fnstsw
cli
mov
push
dec
in
cmp
fnstcw
ss
adc
pushf
xchg
popa
insb
cmpsl
inc
sti
adc
in
mov
sarl
push
and
gs
mov
out
out
sbb
bound
jno,pt
dec
xchg
repz
add
movsl
out
push
repz
and
jae
push
adc
hlt
xor
dec
jo
ljmp
jp
repnz
jno
xor
mov
clc
and
mov
sub
ja
and
add
mov
adc
mov
fdivrl
mull
fstpl
sub
cmp
les
pop
jne
dec
push
cmc
push
push
mov
aam
addr16
inc
push
aas
popl
aam
repz
fiadds
cmp
insb
cltd
nop
cmp
outsb
xor
dec
xchg
sbb
nop
sti
lret
mov
test
in
xchg
lods
jl
lcall
ss
fldcw
adc
dec
sub
ja
mov
pop
sbb
xor
push
mov
mov
inc
lea
push
fisttps
mov
inc
mov
xchg
adc
add
out
adc
inc
gs
jo
pop
out
push
push
xchg
and
or
xor
out
pop
sub
xchg
fucom
fistpl
or
add
xor
fidivs
out
fwait
mov
inc
shr
xchg
jne
cmc
les
sub
js
out
xor
xchg
jae
int
sub
pop
pop
mov
clc
das
xor
arpl
sub
mov
icebp
into
and
sbb
push
inc
icebp
push
jg
loopne
insl
inc
in
push
cs
jne
es
lds
jno
xchg
ljmp
sbb
or
or
loope
sarb
por
lds
popf
sbb
sub
call
mov
jo
pop
or
out
vshufps
cmpsb
push
js
pop
push
or
or
int3
add
cmp
inc
push
fldt
push
push
mov
push
inc
aad
jecxz
insl
push
sub
aam
mov
mov
add
out
adcl
clc
push
nop
lock
inc
push
add
xor
insl
xchg
dec
inc
daa
lcall
imul
mov
dec
and
jg
jo
mov
test
xlat
sub
pop
jne
add
add
mov
mov
imul
mov
scas
and
add
rcl
es
or
leave
loop
cld
pop
mov
push
adc
mov
dec
shl
mov
fadds
movsb
xchg
ljmp
lret
xor
fists
pop
cmpsl
icebp
cmp
mov
arpl
adc
xchg
pop
lret
and
ret
adc
aas
stos
das
lds
xchg
and
addl
ds
mov
int3
sahf
lea
pop
daa
push
sub
cmc
or
push
imulb
notb
out
test
call
mov
jmp
mov
orb
addl
push
add
gs
sub
inc
insl
mov
add
dec
cmp
arpl
push
jl
pop
stc
cmp
hlt
ret
test
ret
psllq
jecxz
int
pop
stos
xchg
stos
test
jno
lret
dec
dec
add
jecxz
xor
push
lcall
dec
and
push
cs
dec
xrstor
push
enter
nopl
aad
adc
outsl
pop
loope
sbb
dec
into
cmpl
test
pop
ret
orb
fidivrs
adc
inc
push
mov
jo
add
mov
jbe
ret
jmp
dec
dec
and
aas
jmp
loope
dec
data16
jb
mov
jge
out
mov
roll
dec
popa
imul
outsl
insb
or
int
icebp
subb
jns
into
scas
xchg
pop
ret
mov
add
scas
addr16
push
dec
lods
fsubs
xorb
jbe
popf
push
movq
adc
in
sbb
imull
xor
sti
shll
inc
fdivp
in
dec
mov
pop
daa
pslld
push
stos
scas
outsl
test
xor
and
jnp
jg
mov
mov
lahf
xchg
xchg
sbb
xchg
in
sub
mov
addr16
inc
pop
repnz
inc
fwait
clc
push
bnd
das
imul
out
mov
push
sarl
sbb
jg
cltd
bound
mov
sbb
push
jle
sbb
push
inc
dec
pop
pop
jle
aaa
xchg
fwait
inc
iret
es
stos
mov
call
gs
push
aad
pop
bound
jmp
dec
jae
hlt
add
test
aam
inc
and
je
mov
mov
dec
add
jge
sub
test
fprem
and
jae
sti
push
in
sbb
int
dec
push
inc
dec
rcl
mov
xchg
sbb
in
adc
pop
adc
mov
jg
clc
jns
xlat
or
stc
push
jae
add
sbb
mov
addl
mov
movsb
cwtl
push
mov
addl
pop
mov
cli
cmp
fisubs
mov
int
xchg
xchg
sub
or
icebp
push
push
cmpb
fidivrs
push
scas
sbb
addr16
sub
imul
pop
adc
mov
int3
xor
pop
test
roll
cli
push
test
in
jecxz
int3
push
sub
pusha
and
mov
std
orl
push
jo
jo
nop
mov
testl
dec
sti
aam
inc
lret
movsl
jge
mov
inc
movsb
sbb
je
rclb
jl
aam
arpl
inc
sub
adc
sar
xor
aaa
ficoml
or
into
dec
or
stos
xchg
repnz
xchg
pusha
jle
sub
nop
orps
scas
vmread
int3
pop
pop
mov
inc
lret
sar
stos
ja
jbe
std
adc
inc
jmp
stos
sbb
dec
push
jl
add
push
sbb
push
pushf
mov
subl
cmp
bound
test
xlat
add
jl
or
insl
mov
add
xlat
sbb
xchg
or
cmpsb
xor
and
shll
sbb
stc
leave
aaa
hlt
mov
cld
add
pusha
out
dec
in
clc
xchg
imul
cmpb
pushl
cld
lods
out
jno
xchg
sub
jbe
scas
lret
js
test
repz
push
sbb
jle
dec
inc
fcmovbe
push
ja
mov
pop
call
scas
mov
inc
popf
pushf
sahf
and
sub
inc
inc
and
jnp
mov
jg
pop
roll
sub
movsl
sub
adc
popa
xchg
xchg
ret
lods
push
dec
fadds
pop
addr16
ja
lret
in
mov
cli
in
jnp
add
adc
jle
mov
push
dec
mov
add
cld
repnz
imul
lods
nop
sbb
lock
adc
push
mov
pop
ficoms
sbb
mov
shlb
cmp
lcall
in
fists
mov
inc
ficoms
mov
mov
xor
sub
nop
sbb
jno
data16
sbb
jle
pop
jmp
sbb
push
push
push
sub
outsl
jne
dec
repz
push
dec
xor
sub
and
scas
pushf
mov
das
cmpsb
outsb
mov
dec
adc
push
adc
push
dec
je
xor
loop
repnz
xchg
cmpsl
imul
fbld
jge
sub
push
int3
loop
adc
push
dec
shrb
and
icebp
adc
arpl
test
xor
mov
lds
xchg
mov
jne
aam
stos
pop
std
out
or
sbb
test
fisubl
jo
xchg
mov
pop
sbb
sub
cltd
adc
mov
mov
call
fmul
lock
loope
sbb
and
jbe
cld
mov
jl
pop
dec
mov
push
shll
nop
jno
inc
dec
inc
dec
dec
and
xchg
add
lds
pop
out
adc
cli
mov
sti
cmc
loope
test
mov
or
adc
jb
adcb
pop
add
sbb
cmpsb
daa
aad
push
call
scas
push
fstps
popa
cmp
stos
ss
les
std
sti
sbb
mov
sub
dec
xchg
xlat
adc
fldlg2
dec
loop,pn
jnp
sbb
ret
out
cltd
lds
jbe
adc
cwtl
imul
xchg
mov
jb
sbb
xor
cmc
xlat
cmpsb
fimull
lea
cmc
nop
xchg
cmpsl
push
bound
ds
or
xor
push
sarb
imul
std
mov
addl
adc
xor
mov
xchg
cmp
lea
mov
add
insl
add
mov
mov
mov
add
xor
sub
das
popa
xorl
or
xor
cmp
push
fsts
sbb
fisubrs
and
or
rolb
rcll
xchg
sbb
sbb
pop
cmp
sub
jp
cmp
adc
in
sub
sub
test
lret
fcompl
ja
pop
fstpl
mov
mov
call
xor
mov
stos
jae
dec
clc
out
lcall
out
ds
repz
mov
add
jnp
xchg
gs
mov
cli
jp
ljmp
jecxz
push
sti
fistpl
popa
jecxz
xchg
xchg
cmp
pop
shl
std
addb
leave
hlt
dec
mov
mov
clc
push
nop
fwait
test
loope
cmp
jae
rorl
dec
fwait
push
mov
aaa
xor
adcl
dec
pushf
fdivrp
mov
js
mov
test
mov
jo
loope
mov
jge
jo
lock
mov
jl
xchg
xchg
sub
and
adc
sti
lret
push
mov
or
mov
inc
push
sbb
repnz
jecxz
jnp
lods
push
decl
dec
jb
xchg
fisttpll
and
push
mov
addr16
out
out
out
push
jns
mov
sub
xchg
mov
mov
pop
inc
test
int3
pop
pusha
cli
mov
dec
xor
sub
imul
jmp
cmp
les
xchg
daa
jl
add
sub
test
and
out
aaa
scas
mov
popa
jbe
mov
data16
adc
sub
mov
mov
xor
or
xlat
jmp
aaa
addr16
fwait
inc
jle
dec
mov
push
insl
xchg
mov
loop
push
add
outsb
push
inc
lret
leavew
push
addb
xor
test
push
movsb
ret
arpl
cmp
jno
ret
mov
and
rcrb
xlat
clc
outsb
push
stos
mov
cmpsb
fnstcw
loope
mov
cs
jecxz
decl
nop
xchg
leave
mov
filds
mov
leave
push
mov
sub
mov
ret
insb
mov
movb
div
xchg
jle
mov
das
fincstp
mov
cld
add
jns
or
pop
mov
sbb
push
les
fs
sbb
into
mov
and
cmpl
sbb
loopne
push
fwait
mov
xor
fistps
add
popf
pop
pop
xchg
mov
outsb
push
dec
push
mov
cmc
or
lret
test
xchg
popa
sti
pop
cmp
sbb
mov
add
add
add
or
sub
dec
into
je
sbb
mov
fs
jle
inc
les
dec
sarb
push
daa
call
idiv
dec
test
rclb
aaa
push
pop
lcall
mulss
jl
fcomip
das
mov
pop
cld
dec
and
push
ja
push
sbb
sbb
pop
in
and
xchg
aas
dec
xor
dec
push
fstpl
push
lods
xor
dec
repz
push
rolb
test
lods
cmp
testb
aas
dec
loopne
push
sub
or
xor
dec
xchg
xchg
or
pop
jnp
movsl
push
dec
push
hlt
icebp
ret
and
adc
fnstenv
xchg
shll
push
xor
push
aad
movsb
gs
xchg
add
aaa
scas
jbe
mov
testl
cmp
mov
stos
xor
sub
mov
inc
sbb
fs
mov
mov
xchg
call
lret
mov
scas
out
pop
adc
call
adc
jnp
js
sub
int3
jl
adc
roll
test
orb
mov
pop
sti
clc
mov
pop
sub
cmp
mov
xor
jle
dec
inc
insb
sahf
rclb
sub
cmc
xchg
test
or
movsl
or
rcl
sbb
inc
xor
clc
cmp
sbbl
mov
dec
adc
mov
jns
cmp
pop
push
and
jo
push
imul
out
xchg
idivl
push
gs
jl
xchg
push
cmp
pushf
fcoms
add
mov
xor
adc
mov
clc
fldt
mov
add
ljmp
ja
cli
rcrl
es
jp
inc
sub
outsb
inc
ret
dec
insl
jae
or
xor
jns
pop
or
cmpsb
mov
mov
or
inc
dec
fs
mov
imul
fidivrs
jae
mov
fcmovu
mov
xor
rcll
and
cmp
dec
mov
jae
pop
dec
pop
out
inc
sbbb
sbb
divb
cltd
cmp
fld
daa
stos
sbb
movsl
dec
mov
gs
or
test
daa
popf
sbb
stc
insl
dec
arpl
push
stc
mul
dec
xor
inc
cli
js
inc
add
sbb
fiaddl
pop
mov
mov
scas
das
push
dec
in
mov
push
jle
sar
fildll
and
sahf
and
repz
pop
jae
mov
xor
inc
mov
xor
jae
add
dec
cli
pop
into
mov
arpl
pusha
mov
shl
push
stos
xchg
dec
push
mov
jmp
jns
pop
xchg
push
fs
stos
or
mov
push
out
vpminub
or
in
loopne
adc
lret
movsb
in
leave
rcll
cmpl
dec
stc
add
xchg
jl
mov
test
scas
outsb
xchg
adc
pop
adc
int
mov
xor
call
inc
fidivl
sbb
rcl
jl
xorb
jne
adc
je
pop
sbb
scas
repz
movb
mov
fdivl
stos
ret
lret
pop
mov
push
into
jl
inc
jae
mov
pop
lods
je
and
data16
aas
add
adc
fsts
mov
mov
xchg
sbb
ds
mov
push
outsl
int3
fcomps
cmp
fs
mov
mov
stc
ljmp
ret
lret
jecxz
push
pop
lods
mov
mov
jae
push
dec
out
and
dec
iret
or
jmp
into
ljmp
aas
or
mov
xchg
pop
cli
divl
push
add
push
cltd
cld
das
rorl
push
push
and
cmp
mov
idivb
jo
xlat
push
popa
mov
hlt
jns
jbe
in
xlat
cs
js
movl
fcmovnb
cmp
mov
frstor
sbb
movsb
mov
xor
jg
test
pusha
adcl
mov
jmp
jge
les
inc
pushf
in
int
mov
sub
loopne
into
loop
mov
cmp
add
repnz
fidivs
je
test
push
mov
pop
movsl
fiadds
pop
sbb
or
and
push
sbb
or
xchg
mov
femms
adc
mov
sbb
sub
inc
push
fstps
insb
lahf
out
pop
nop
out
jo
pop
and
loop
jmp
ljmp
lcall
lret
sub
xchg
cmp
out
xchg
lods
lret
sbb
rcrl
and
call
rcl
clc
pop
jge
insb
dec
and
push
lods
mov
sub
inc
iret
fisubs
lock
jle
fcmovu
lahf
mov
mov
mov
loopne
push
jo
or
imul
ja
aas
jbe
lret
jmp
sbb
dec
push
fidivs
test
arpl
jecxz
mov
jle
int3
adc
dec
pop
daa
cmc
popf
mov
pop
push
ret
jb
test
adc
inc
fwait
lcall
xchg
aas
aam
push
roll
pop
loopne
xor
jno
or
jmp
movsb
in
inc
es
popf
or
xchg
mov
in
sahf
stos
jge
jle
rclb
mov
aam
push
ja
dec
filds
pusha
nop
push
jmp
sub
push
adc
shl
shrb
call
sub
cs
out
and
xchg
cld
sub
dec
xchg
fsubs
arpl
cmp
mov
xchg
lock
add
pop
dec
rclb
xchg
mov
ret
test
sti
cmp
jg
or
jg
mov
mov
cmp
mov
into
push
ds
add
cmpsb
arpl
cs
insl
mov
in
insl
iret
into
data16
lret
testl
pop
pop
ljmp
sbb
test
pop
push
aam
int3
push
cmp
adc
into
adc
sbb
cmp
decb
out
std
add
and
stc
test
dec
outsb
inc
test
and
push
idiv
mov
jg
movsl
jg
cmc
lret
inc
xchg
ja
addl
vpsubd
aad
iret
lcall
inc
pop
fwait
inc
sbbl
fwait
push
iret
inc
ret
dec
and
jl
jae
pop
loopne
mov
mov
lods
je
push
sub
pushf
out
addr16
push
in
jae
xchg
jecxz
sbb
sub
jae
cwtl
std
addr16
xor
inc
scas
push
push
leave
js
fnsave
inc
inc
jnp
sbb
subl
icebp
jbe
inc
push
jg
leave
pop
add
jnp
ja
imul
pop
test
in
inc
out
xorb
adc
test
cmp
sarl
mov
xchg
pop
iret
mov
aad
xchg
pop
test
std
add
call
adc
jmp
push
cmc
hlt
lds
sub
xlat
xor
sahf
cwtl
cmp
mov
mov
loopne
sub
nop
into
mov
jno
orl
add
push
xchg
mov
sub
dec
mov
test
dec
adc
in
pop
ret
or
or
or
int
push
es
mov
fcmovnbe
xlat
inc
jnp
jo
dec
mov
sub
jo
sub
fwait
decl
xchg
sbb
sub
cwtl
jg
adc
or
xchg
adc
sub
nop
dec
fcomi
js
mov
mov
or
shll
ds
dec
out
pop
aaa
fwait
sbb
push
cmp
dec
mov
adc
popf
je
xor
aaa
rorl
enter
mov
std
add
push
push
jg
stos
or
stos
sbb
add
inc
sub
sub
enter
xlat
jmp
mov
mov
test
xor
cmc
sbb
sbb
loop
stc
and
sbb
jmp
dec
push
xchg
scas
inc
dec
icebp
mov
rclb
xor
adc
lock
lods
fwait
es
pop
fnstsw
dec
ret
mov
aaa
jp
fildl
out
fcmovbe
jle
lock
test
imul
push
cltd
pop
push
mov
cmpsl
mov
test
stos
test
mov
inc
mov
out
and
je
mov
out
faddp
stos
mov
mov
les
cmp
pop
movsl
ret
fdivr
push
movb
jb
inc
in
fisubrl
test
testb
xchg
push
add
lea
mov
jl
pushf
repnz
jbe
decb
xlat
stc
loope
jno
mov
sbb
dec
mov
fistpl
jno
mov
add
into
xchg
pop
repz
ds
sbb
sub
inc
pushf
sbb
push
call
or
pop
mov
jmp
les
mov
out
rolb
add
jmp
fmull
mov
out
jle
push
push
push
sub
push
mov
lock
and
mov
xchg
and
outsl
ds
dec
lock
cli
xchg
or
jmp
imul
inc
jne
adc
add
cwtl
scas
ret
mov
mov
daa
pop
ds
or
je
enterw
dec
cs
and
cmp
pop
popf
and
and
dec
xchg
cld
fs
and
push
lret
adc
out
xor
mov
mov
loope,pn
stos
jp
adc
jo
dec
pop
and
dec
and
dec
inc
rolb
and
in
jecxz
sub
pop
inc
push
pop
mov
pop
icebp
adc
pop
stos
addb
lea
repnz
xchg
add
jmp
pop
rolb
xlat
dec
add
jnp
mov
push
adc
add
pop
and
iret
movsb
aad
lds
cwtl
shlb
stc
jp
loope
mov
dec
fmull
push
add
mov
mov
pop
mov
lcall
fdivrp
in
jbe
dec
sub
lock
ret
gs
stos
pop
sub
icebp
ss
out
sub
mov
pop
hlt
ja
add
mov
jg
dec
fs
testl
xor
loopne
popa
stos
ljmp
hlt
ficompl
dec
sbb
int
and
shl
fxam
push
bound
dec
jl
outsb
pop
fs
mov
inc
and
pop
mov
xor
stos
inc
sbb
bound
push
insl
xor
push
xor
sub
in
es
adc
scas
xor
push
mov
push
lods
repnz
fadd
shll
ss
jb
cmp
ret
jg
pusha
into
movsl
gs
in
stos
inc
and
sub
or
dec
iret
leave
in
xor
and
mov
rclb
fwait
push
pop
dec
dec
mov
and
sbb
mov
jmp
cltd
inc
sarl
push
lcall
cltd
push
inc
ss
test
insl
cwtl
or
pop
jnp
push
xchg
stos
xchg
in
cmp
xlat
and
adcb
ds
mov
push
jbe
dec
fdiv
sub
xchg
cmp
mov
cmp
and
fstps
xchg
push
cs
jne
leave
pop
pusha
cmp
cltd
shrl
cmp
fs
insl
nop
adc
jae
cmpsl
adc
add
stc
jecxz
xor
jg
and
push
dec
add
push
fimuls
jmp
in
fisubl
roll
sbb
xor
mov
mov
mov
movsb
sahf
cmpb
adc
add
mov
popf
lds
or
dec
add
inc
rcrb
pop
push
lcall
dec
js
push
or
mov
icebp
movsb
push
mov
ja
mov
adc
adc
jmp
js
xchg
sub
jbe
mov
push
popa
sbb
cmp
in
jb
popf
cmpb
lods
out
aad
ss
les
mov
add
or
and
or
mov
jns
ret
popf
dec
je
dec
dec
psllq
dec
jnp
cmp
stc
pop
xchg
insb
ficoms
xor
rcrb
mov
push
sbb
stos
xchg
or
inc
inc
imul
sahf
cmpsl
inc
imul
or
dec
addr16
inc
rcrb
add
inc
mov
sbb
or
bound
hlt
int
jo
add
and
cli
jle
sti
pop
sbb
jp
or
stos
push
mov
push
pop
fcmove
dec
or
aam
cld
test
cli
pop
mov
shll
pushf
outsl
test
and
or
xchg
jno
xor
xchg
mov
adc
sub
ljmp
inc
pop
cmc
ficomps
dec
and
rorb
jge
in
push
mov
cli
in
out
push
xchg
push
das
inc
dec
xor
pop
and
repz
mov
mov
pop
movsb
pop
enter
je
test
cmpsb
popf
push
or
loope
fisubl
je
dec
mov
mov
mov
out
mov
and
frstor
jnp
pop
sbb
cltd
pop
js
xorb
xchg
repnz
fsts
nop
repnz
jp
jle
and
ja
loop
pop
mov
xor
xchg
jbe
jp
cmp
xor
push
sbb
lock
sbb
stos
jge
test
sbb
fwait
mov
jp
pop
test
jo
jge
xor
sub
inc
inc
enter
jns
xor
jnp
repz
xchg
or
mov
push
loop
mov
cmc
jno
inc
xor
sub
xchg
dec
jb
scas
or
sbb
xchg
fbld
test
das
insl
sub
hlt
cs
or
insb
mov
dec
pop
sub
pop
xor
inc
inc
movsl
add
ss
and
sbb
outsb
cmp
and
mov
ss
cmp
notl
inc
jbe
movsb
push
rcl
adc
xchg
outsb
out
inc
mov
xchg
leave
push
insl
xchg
dec
std
xor
jnp
jb
mov
mov
out
stos
lock
add
or
daa
in
out
jp
and
inc
jb
imul
mov
mov
jge
cltd
cmc
inc
scas
roll
adc
pop
out
testl
mov
pop
bswap
inc
mov
push
xlat
and
mov
and
pushf
sub
jmp
pop
pop
mov
iret
jl
scas
sbb
loope
dec
add
imul
addr16
cmp
jo
cmp
fdivrl
aad
sub
lret
cmp
aad
ret
cmp
add
add
push
jae
aad
andl
mov
pop
nop
and
movsb
insl
jge
xchg
out
js
adc
popf
lret
mov
pop
push
push
xchg
jmp
push
adc
xchg
xlat
push
je
sub
sar
notb
repnz
jle
mov
ljmp
leave
jno
inc
push
ret
mov
mov
push
ret
cmp
nop
push
add
fxch
xchg
lock
sbbb
repz
xlat
clc
add
shl
stos
inc
scas
das
and
orb
aaa
xchg
incl
lret
push
and
movsl
bound
test
addr16
jp
push
out
or
xor
xchg
push
cmp
lcall
jg
jge
aam
fidivs
out
ljmp
sti
shrb
js
mov
je
xchg
test
cmp
hlt
mov
mov
mov
ret
ds
mov
lock
adcb
jno
or
xor
loop
mov
stc
rcrb
das
fstps
scas
mov
cltd
xchg
lock
jp
je
sub
dec
adc
lods
xchg
insb
cli
dec
mov
mov
push
inc
mov
aad
and
cmp
mov
ret
jne
dec
dec
ss
lock
jnp
push
inc
bnd
sub
mov
sahf
rol
pop
and
adc
movsl
fsubs
sbb
xor
call
loopne
pop
jb
ljmp
lahf
and
mov
and
jbe
and
stos
sbb
ljmp
inc
out
mulb
imul
loopne
stc
les
inc
jb
das
inc
movb
sbb
icebp
stos
xchg
dec
pop
je
or
pushf
call
adc
jl
dec
xor
mov
rol
push
rorl
aad
and
adc
addr16
pop
in
std
mov
mov
ja
cld
bound
jge
outsb
xor
mov
mov
sbb
cmp
loope
pop
or
sub
cmp
popa
adc
loope
sbb
jnp
daa
cmc
xchg
movsb
fnstsw
repnz
pop
enter
jecxz
jmp
adcb
inc
push
push
sbbb
shrl
js
cmpsl
stos
movsl
pop
add
push
sub
mov
mov
dec
test
jl
dec
xor
out
in
imulb
push
xor
in
jp
mov
push
ds
rcrb
push
clc
aam
fisubs
and
push
repz
enter
or
clc
pop
cwtl
sbb
and
mov
pushf
xor
adc
or
jmp
test
or
adc
outsb
xchg
add
mov
or
mov
fwait
js
jle
jae
lcall
btr
push
into
dec
lret
push
or
jo
andb
in
push
scas
aad
mov
jle
in
arpl
dec
pop
inc
mov
mov
rcrb
std
scas
aaa
cli
popa
mov
jo
cmc
pop
in
jmp
ljmp
or
cmp
sub
sahf
mov
repnz
loopne
xor
dec
mov
cmpsb
stc
sbb
call
inc
xchg
scas
mov
sti
ljmp
ret
sti
pop
jge
add
repz
das
or
gs
dec
pop
in
out
fildl
and
popa
jo
and
dec
jno
cmpsl
aas
test
mov
xchg
roll
fiadds
mov
ficompl
inc
ds
jl
jbe
pop
fxam
dec
pushf
ds
enter
add
ja
add
clc
cld
inc
outsl
icebp
popf
repz
xlat
xorps
adc
inc
sbb
and
stos
ret
mov
mov
push
jo
cltd
adc
dec
add
scas
dec
cmpsl
call
scas
cwtl
stos
push
mov
lds
fldt
mov
push
cmpsb
imulb
mov
shlw
fwait
fwait
int3
sub
lahf
adcb
mov
push
incl
fucomi
add
cmp
push
jmp
jne
fcmovne
xor
add
scas
ss
pushf
sub
cmp
mov
xor
cld
xchg
mov
or
insb
push
sub
movsl
mov
arpl
fisubs
mov
repz
jmp
mov
xchg
or
cltd
xor
xchg
outsl
fs
cs
dec
jnp
sub
sbb
xor
out
jne
das
adc
mov
sbbb
movsb
xor
std
push
cmp
push
mov
xchg
cmp
dec
pop
stos
in
jg
adc
jae
sbb
cwtl
shlb
cmpb
pop
mov
insl
repnz
les
xor
cmpsb
call
insb
add
ds
and
xor
push
in
xlat
pop
ficoms
push
test
int3
push
icebp
js
sar
add
and
push
stos
mov
fst
inc
lods
push
inc
lock
and
clc
ss
ret
je
mov
push
sub
in
dec
push
mov
add
lods
fsubs
mov
repnz
push
xor
add
mov
pop
push
pop
sbb
pop
jg
sbb
inc
lods
push
insl
fwait
stc
sub
hlt
xchg
and
jb
pushf
aad
and
cmp
out
add
add
inc
jo
call
push
sahf
dec
sbb
fwait
lods
out
addr16
dec
outsl
out
dec
inc
fidivl
mov
adc
mov
push
mov
push
stos
adc
clc
inc
test
cmc
and
fcmove
inc
xor
sub
scas
pop
fdivl
jmp
out
adc
sbb
jp
sub
repz
repnz
pop
pop
lret
nop
mov
sub
sub
bound
nop
aam
inc
fistps
cld
out
sub
cmp
adc
push
imul
xlat
out
xchg
fs
adc
adc
inc
das
int3
push
sbb
outsb
arpl
jbe
dec
cmp
cmp
andb
test
nop
fisubs
or
loopne
pushw
xor
pop
mov
cmp
aam
add
pop
lock
add
ja
lea
adc
xchg
mov
xor
outsb
jle
pop
push
jae
add
jge
ficoml
cmp
daa
cmp
aam
push
mov
lcall
fisttpl
adcb
es
pop
out
mov
nop
fdivrs
inc
int
xor
mov
jno
outsl
push
dec
stos
lcall
or
adc
pushf
cmp
jnp
fcomps
adc
in
jp
fwait
mov
out
movb
inc
rclb
sub
adc
incl
adc
shll
dec
push
std
into
sub
movsb
inc
jmp
push
push
xchg
sbb
orb
cwtl
cmpsb
jbe
add
or
into
dec
xchg
jg
mov
sbb
insl
outsb
cmp
adc
push
dec
enter
mov
xor
ffreep
clc
add
add
popa
icebp
fucomip
sarb
test
leave
lret
ficomps
or
jno
out
jb
jmp
rclb
out
ret
push
mov
mov
jbe
and
or
xor
fcomps
adc
pushf
xor
and
ret
int3
lods
or
inc
inc
mov
adc
repnz
stos
push
sbb
nop
jae
icebp
xchg
sbb
loopne
in
push
pop
outsl
adc
aas
dec
mov
add
aad
xor
js
sbbb
mov
mov
dec
inc
out
andb
subb
xchg
mov
xor
popa
xchg
or
andl
cld
les
or
aaa
shll
and
test
xchg
roll
pop
add
pop
push
fsubrs
mov
movsl
xchg
cmpsl
mov
outsl
fsub
mov
fwait
mov
add
out
jp
sarb
mov
dec
adc
iret
outsb
bnd
dec
xchg
xchg
inc
add
sub
jg
icebp
lods
sub
xor
in
jecxz
stc
pop
fisubl
icebp
xchg
mov
aad
shrb
jo
push
in
jmp
in
jmp
sub
scas
ja
add
out
jns
mov
adc
pop
stos
xor
xchg
mov
and
jp
sarl
lods
mov
fstps
es
inc
int
in
xchg
aad
in
jg
and
and
mov
push
lret
jg
out
xor
aad
and
sub
cmp
movsl
dec
inc
test
push
leave
mov
imul
pop
ret
jg
mov
push
add
int
mov
ss
popf
aas
mov
push
ret
fdivrs
pop
stos
inc
sahf
cmp
imul
into
out
xor
push
fs
test
adc
adc
jmp
jle
and
sbb
inc
lea
sbb
andl
push
add
jns
dec
adc
out
lret
dec
nop
mov
lock
cmp
and
and
cmp
sbb
cwtl
dec
movb
inc
sbb
mov
xchg
pop
in
sarb
mov
jb
add
dec
push
sub
pop
fsubl
jge
ljmp
pmullw
je
xlat
pop
nop
movsb
mov
jg
cmp
popl
iret
clc
leave
push
int3
mov
stc
dec
xor
xchg
jmp
adc
xor
add
dec
ja
mov
jnp
pushf
stos
fidivrl
loopne
sti
push
jmp
mov
out
int3
push
addb
jmp
jmp
adc
xchg
mov
jnp
fmuls
inc
pop
aaa
sub
sti
add
daa
out
das
or
xor
jae
es
repz
mov
push
int3
cmc
out
dec
out
stos
pop
test
adc
rcr
xor
or
sbbl
sub
lcall
xchg
mov
fidivrs
popa
pushf
shl
or
dec
subl
sub
scas
test
lds
in
mov
in
or
mov
insl
xchg
jae
dec
pop
int
pop
cs
loope
mov
les
aad
mov
push
shll
stos
jmp
lods
lds
mov
ljmp
pop
stc
push
lock
nop
ss
push
sti
and
mov
push
faddl
les
xor
push
push
pop
xor
cmpsb
xchg
arpl
inc
pushf
les
fs
sbb
add
inc
jo
rclb
xor
cmp
add
into
cmpsb
rolb
xchg
rorl
aas
sbb
dec
out
sub
loopne
dec
into
subb
push
dec
sbb
ret
fistps
cmp
cmp
insl
push
mov
add
xchg
daa
aas
shr
push
std
daa
lods
xchg
out
mov
rcll
gs
movsl
dec
pop
jg
inc
jne
dec
popl
fisubrl
aas
mov
movsb
and
mov
sarb
jo
mov
cwtl
int3
push
push
cs
fnsave
mov
insb
cltd
and
scas
sahf
lahf
push
cmp
popa
add
mov
repnz
in
sub
insl
mov
xor
sub
test
outsl
mov
xor
jno
mov
jl
subb
iret
ja
mov
push
mov
cld
sarb
std
mov
cmpsl
sar
lret
int3
fistl
mov
cwtl
inc
xor
addr16
push
jmp
xor
fisttps
xchg
jno
or
push
lea
jmp
mov
mov
scas
add
stc
sub
sarl
test
mov
js
lods
negl
add
mov
hlt
sti
or
popa
sahf
nop
pop
mov
or
push
xor
dec
pop
mov
push
push
lea
mov
jecxz
adc
pop
or
stos
dec
icebp
out
pop
inc
mov
in
out
ror
jmp
pop
adc
dec
clc
scas
sub
into
sbb
arpl
sbb
leave
mov
shlb
and
mov
xor
popf
ljmp
xchg
xor
stos
cmp
push
or
outsl
mov
lret
daa
cmp
dec
mov
jle
in
mov
movntq
out
jbe
cmp
xor
ret
xchg
rcr
sti
add
in
loop
flds
xorl
scas
push
jae
sub
movsb
xchg
ss
jne
lock
push
mov
pop
shrl
xor
xchg
imul
mov
sub
pop
xchg
movsl
scas
mov
jmp
les
shll
cmp
inc
insb
push
add
pusha
jecxz
push
adc
cmpsl
jns
sbb
ret
and
mov
aam
cmp
enter
notl
adc
cmp
loope
inc
xor
andb
lret
rcrb
inc
mov
jmp
mov
scas
mulb
xchg
mov
xchg
cmp
mov
ss
aaa
pushf
push
inc
aad
pushf
mov
jnp
jg
je
xchg
fcmovbe
test
pop
xchg
push
or
push
add
add
jb
mov
lret
aam
and
jle
jp
inc
andl
loop
and
xchg
adc
int
fsubrp
and
fcomps
or
xor
inc
mov
inc
addr16
aam
cmp
push
ss
sti
sub
arpl
fnsave
or
cmp
sbb
pop
jnp
jns
adc
and
dec
cmp
inc
test
sub
dec
sub
inc
ret
cld
push
mov
xor
repnz
push
pop
loope
adc
outsb
cmp
js
ja
pusha
rcrl
add
ja
lret
insl
or
fisubl
mov
leave
or
cmpsb
or
lret
cmpsl
addl
push
xorb
dec
loope
or
or
cs
xlat
call
adc
mov
dec
dec
jp
pop
test
cmpsb
adc
mov
mov
sar
mov
dec
xchg
pop
jb
push
or
sub
jmp
mov
adc
xchg
pop
mov
push
cs
pop
dec
dec
rorl
cwtl
fcmovnu
push
or
test
hlt
mov
scas
pop
sub
and
and
out
xchg
fisttpll
jmp
jle
mov
xchg
sub
push
add
lds
pusha
bound
mov
mov
repnz
cmp
mov
cmpsl
add
cltd
sbb
lods
mov
test
dec
mov
add
sbb
movsb
sbb
les
test
jl
out
fdivrl
cmp
add
cmp
adc
adc
inc
cmp
inc
cmp
in
or
sbb
mov
sbb
shll
cli
outsb
mov
mov
dec
arpl
inc
adc
in
push
mov
repz
popa
fiadds
mov
xchg
out
sarl
push
lgs
jmp
or
mov
jecxz
fisttps
fnstenv
jl
mov
leave
mul
test
cmpsl
out
lret
insb
sub
ss
jo
pop
test
lret
in
jmp
nop
push
push
int
mov
pop
mov
jecxz
push
dec
test
pop
int
and
in
xor
xchg
mov
bound
inc
inc
pop
je
jns
xchg
inc
shll
cmpsb
mov
xor
mov
mov
fbstp
jb
jp
sub
repz
sbb
pop
out
push
pusha
mov
pop
lcall
inc
js
jge
dec
sbb
or
fwait
in
iret
clc
shl
loop
mov
scas
push
push
mov
leave
in
pushf
ret
adc
ds
mov
add
ja
sti
test
mov
and
aas
mov
addl
jb
xlat
add
mov
cltd
imul
xor
outsl
inc
dec
mov
adc
fmull
ja
ljmp
cmp
mov
into
and
pop
mov
push
bound
jno
jno
cmpsl
push
cmp
adc
leave
cmpsb
loopne
leave
jo
sbb
js
test
nop
jo
fisubl
sbb
xor
ret
adc
xchg
cwtl
xchg
xor
inc
and
popa
mov
inc
pop
xchg
push
and
adc
mov
lret
pop
pushf
mov
in
xchg
imul
xchg
cmp
sbb
rorb
scas
pushf
insb
sub
inc
jp
dec
test
push
ret
stc
fisubrs
lcall
leave
enter
ret
fwait
xor
sub
popf
test
pop
out
sub
lods
and
xchg
cld
add
pcmpeqd
aad
cs
cli
pushf
jecxz
dec
or
fisubs
cmp
inc
test
in
xor
bound
les
pop
mov
mov
xor
ret
popa
jecxz
sbb
js
adcb
in
lahf
pop
int3
cmp
orb
inc
mov
in
push
sub
dec
mov
cld
sub
cltd
in
hlt
iret
into
js
inc
push
mov
dec
cmc
mov
add
js
dec
xchg
aam
mov
sbb
fcoml
hlt
shl
mov
shrl
ret
cmp
in
repz
sub
ja
and
aaa
stos
jge
push
test
cmp
popa
inc
jl
dec
add
enter
jbe
jnp
cs
out
pop
iret
lds
and
sahf
adc
cmpsb
sar
std
nop
xchg
test
inc
lods
daa
add
bound
or
push
lret
sub
outsb
push
push
push
outsl
shrl
in
dec
mov
les
cs
stos
xlat
stos
jmp
push
push
jl
daa
inc
or
inc
pop
pop
lret
lods
sbb
mov
and
sub
mov
in
jnp
or
push
dec
mov
push
and
dec
rol
bound
cmc
adc
dec
sarl
ret
mov
mov
mov
dec
cmpsl
insb
fucomip
cli
es
add
pop
adc
dec
scas
sub
sub
aas
insb
xchg
pop
mov
ja
mov
rolb
jg
test
xor
mov
push
notb
sbb
xorl
pop
or
mov
mov
pop
sub
mov
cmp
xor
dec
fidivl
and
xchg
int
ds
clc
icebp
sbb
xchg
bound
or
push
and
idivl
and
psubq
dec
cli
cmp
mov
mov
jae
cwtl
push
mov
cmpl
insl
in
int
dec
jbe
data16
aas
in
in
and
mov
pop
clc
sub
das
or
jge
out
inc
es
lock
pusha
push
inc
test
cwtl
cs
std
or
imull
fwait
push
mov
adc
std
dec
imul
add
and
and
add
pop
xchg
jp
fcomi
in
inc
sbb
scas
xchg
jne
lret
rol
xor
inc
inc
adcl
bound
mov
xorl
call
fidivs
lds
in
jno
or
aam
add
jecxz
lea
mov
in
inc
mov
push
inc
xor
push
cmp
inc
lods
lds
in
xor
outsb
out
sets
mov
lock
test
fs
aas
movsl
add
or
orb
js
mov
data16
add
jp
pop
add
imul
out
bound
frstor
mov
sub
inc
sbb
out
aas
push
dec
add
push
sti
and
fs
inc
mov
push
out
jmp
mov
mov
push
es
test
ret
insl
mov
out
mov
mov
rcr
sub
or
sbb
push
xchg
xchg
test
loope
push
les
mov
shr
or
mov
mov
xchg
xor
pop
sub
fst
testb
push
inc
xchg
addr16
dec
xor
sbb
fwait
adc
ret
cmp
cltd
in
pop
mov
adc
cmp
pop
cmp
aas
cmpb
dec
out
out
cmp
test
gs
mov
mov
cmp
das
icebp
aam
pop
leave
or
push
adc
fidivs
nop
jno
sahf
cmpl
ljmp
aaa
ficoms
mov
push
mov
mov
lret
clc
stc
lahf
pusha
sarb
mov
arpl
pop
xor
pop
push
sub
imulb
rcrl
gs
jb
push
mull
xchg
push
pop
and
aaa
mov
xchg
mov
movsb
jl
lcall
jbe
scas
adc
or
sbb
fisttps
test
xor
and
cli
out
repnz
dec
mov
arpl
adc
mov
cmc
cmp
mov
jns
mov
cmpsl
scas
dec
push
pushf
fwait
test
shl
xor
sbb
shr
sub
out
pop
and
daa
add
test
or
xchg
aad
cmpsb
jbe
sub
ds
sbb
cld
pop
xlat
jae
push
mov
adc
adc
dec
sub
xchg
lcall
out
inc
mov
mov
push
push
and
mov
or
dec
stc
push
pop
pop
add
rcrl
aas
lret
and
and
and
cltd
loope
push
push
xchg
insb
js
push
call
movsb
cmp
outsl
jmp
loope
das
inc
mov
leave
mov
dec
aam
dec
aam
sarb
jmp
lds
add
rcl
inc
or
dec
mov
inc
xor
data16
fwait
popa
gs
and
imul
mov
not
fs
bound
jmp
push
mov
dec
cmp
and
cltd
enter
shlb
lahf
out
rolb
inc
test
adc
enter
call
push
lcall
push
int3
aaa
fistl
sub
es
push
mov
jl
inc
push
call
cltd
dec
sbb
loopne
movsb
sub
pop
dec
sarl
sbb
imul
nop
cmp
aaa
xchg
leave
jge
push
cmp
pop
sbb
dec
imul
nop
fxch
jo
aam
push
add
inc
xlat
mull
arpl
hlt
mov
jg
and
mov
push
adcl
movsl
sub
inc
push
sub
int
lret
sbb
push
xor
push
mov
out
aas
scas
push
in
scas
jp
sub
jge
sbb
dec
mov
jp
clc
ss
mov
sbbb
push
jp
xchg
jae
jp
stos
inc
es
add
cmpsb
loopne
mov
jo
push
lock
or
stc
ret
stc
bound
mov
jae
mov
mov
adc
sub
xor
fxch
xor
mov
stc
stos
lods
loopne
div
xchg
insb
add
sbb
std
jno
push
jno
or
mov
jge
push
ja
iret
loope
xlat
xor
fidivs
out
in
cwtl
movsb
fisttpl
std
aad
rcrl
out
mov
leave
mov
into
imul
aad
cmp
fidivs
jo
sub
xor
and
sahf
aas
and
push
cmp
xor
ja
pusha
sbb
jbe
fdivs
daa
jle
push
lock
mov
xor
sarb
lcall
mov
je
xchg
dec
sub
mov
or
fisttpll
call
cmp
mov
lock
fsubl
sti
mov
jb
mov
aam
movsl
sub
inc
fildll
test
push
cmpsl
sub
sbb
ficomps
lret
pop
pop
arpl
pop
hlt
mov
cli
pop
xchg
push
out
adc
mov
inc
je
sahf
bound
xlat
sbb
fstl
shr
fwait
in
cmp
add
cwtl
out
sub
popa
test
jl
adc
push
leave
out
cmp
je
and
pop
sub
xchg
loope
lds
shlb
lret
adc
sbb
in
fisubrl
data16
push
les
and
int3
mov
aam
shrb
jne
dec
enter
jo
cltd
jge
jo
and
push
cli
insl
insb
pusha
cmp
lret
loope
cmp
cmp
mov
inc
rcrl
pop
push
adc
jp
gs
js
mov
sub
sbb
mov
cli
sti
inc
jge
jge
sbb
mov
iret
adc
imull
sub
lret
push
fiadds
dec
loope
xchg
mov
mov
push
inc
mov
cmp
lcall
dec
gs
inc
fstps
cmp
cmp
dec
pop
test
fdivr
xor
mov
xchg
dec
jle
jg
jne
xchg
fwait
cltd
inc
rcr
mov
push
pop
sub
push
aam
adc
sbbb
js
pop
lcall
inc
mov
and
jne
and
add
mov
outsb
push
push
sub
test
dec
scas
push
loopne
jns
cmp
subb
xorl
dec
ss
in
mov
cld
sub
stos
popf
das
mov
ret
mov
icebp
inc
scas
xor
lds
xchg
jl
lahf
cmpsb
clc
imul
jmp
in
push
sbb
fisubl
pop
and
sub
mov
dec
pushf
adc
or
adc
sbb
pop
les
out
jge
mov
rorb
pop
iret
push
js
pop
mov
pop
sbb
test
cmp
xor
xchg
rcll
jp
cmp
adc
iret
clc
adc
addr16
ja
adc
lds
xor
ja
inc
test
xchg
imul
insl
push
negb
mov
adc
mov
je
fs
and
frstor
push
push
pop
cmp
repnz
decl
mov
dec
fstps
mov
testl
out
xchg
aaa
xor
mov
icebp
and
or
pop
push
das
test
jne
jo
xor
push
addr16
stos
sub
push
or
nop
xchg
popf
std
adc
loope
stos
outsb
or
pop
push
add
push
insl
sbb
mov
sarl
int
ror
sub
xlat
add
shll
sbb
lds
jp
lock
jle
cmp
cmp
xor
push
add
insl
xlat
popf
insl
jb
aaa
cwtl
inc
es
cltd
and
mov
lret
icebp
mov
std
mov
and
mov
xchg
mov
jne
test
xchg
sub
dec
out
add
and
adc
adcl
push
mov
scas
jns
push
imul
ficoml
push
leave
fwait
mov
cmp
cmp
dec
jmp
xchg
sbb
pop
mov
mov
cmpb
pusha
mov
jl
jns
or
dec
leave
insl
daa
and
adc
pop
or
mov
out
xor
test
push
sub
mov
lods
cwtl
or
and
cli
mov
mov
mov
and
lods
add
mov
sbb
test
fimuls
repz
xchg
fwait
aad
mov
int3
xchg
mov
dec
mov
cld
add
stos
pusha
mov
js
inc
lcall
mov
ret
pop
ret
or
sahf
jl
xor
jl
insl
aaa
or
jae
mov
push
mov
cmpsb
shrl
add
int
add
into
arpl
or
pop
test
dec
push
dec
sbb
outsl
ret
mov
je
and
inc
das
sub
test
popa
test
inc
lea
imul
ljmp
jbe
repz
aad
push
inc
or
dec
mov
sbb
test
rorb
pop
jl
or
lods
sbbl
fwait
scas
xor
adc
xor
inc
pop
fwait
pop
fiadds
mov
aas
data16
push
ret
or
mov
mov
std
int3
loop
loopne
jae
ret
int
sbb
ss
stos
loop
scas
int
xchg
repnz
or
push
push
xor
aad
adc
rorb
testl
xor
test
push
sub
lods
dec
test
rcll
push
adc
aam
fstpl
in
aas
sar
or
xorl
gs
out
sub
inc
jge
and
sub
mov
movsb
or
out
sub
mov
inc
es
pop
sub
pop
dec
mov
adc
leave
lock
das
pop
push
shr
sahf
jo
test
ret
xor
repnz
cmp
mov
mov
clc
repnz
andl
xchg
push
or
mov
cmpsb
sti
mov
fcomps
loop,pt
repz
ret
sub
scas
pop
arpl
inc
add
test
repz
jg
mov
fisttps
nop
push
jge
push
sbb
pop
pushf
jnp
pusha
cmp
add
std
fimuls
jno
dec
and
mov
jae
cltd
fldenv
pop
sub
jp
rcrl
inc
test
push
test
loop
sub
adc
lret
aas
das
pop
insb
dec
lods
add
mov
push
lock
or
mov
mov
jns
mov
out
mov
in
lcall
aam
mov
xchg
mov
mov
cs
mov
push
aam
pop
dec
cmp
fistl
adc
pop
test
dec
mov
mov
mov
rolb
lods
test
out
lods
lock
shrb
mov
adc
jno
sub
sub
jno
xchg
jne
fnstenv
int3
push
bound
cwtl
popl
loop
mov
cmp
orl
shlb
pop
xor
bound
pusha
mov
daa
std
in
hlt
rcll
xchg
mov
sub
fbld
leave
icebp
jb
fwait
pop
pusha
dec
xchg
or
arpl
pop
aam
lahf
fidivrs
nop
lds
mov
jo
aad
daa
inc
and
lret
lret
cmp
rclb
dec
sub
leave
in
xor
repz
push
xchg
xor
sbb
out
movsl
sub
lahf
and
imul
sub
pusha
nop
bound
repz
outsb
mov
loopne
add
das
inc
mov
cmp
or
jle
mov
pop
cmpsb
sub
test
jne
fmuls
outsb
sub
add
add
xchg
jmp
dec
lahf
xchg
int
push
xchg
scas
sbb
lock
sbb
push
std
cmp
xor
enter
jmp
int3
sub
adc
and
or
addr16
lea
cmp
iret
jecxz
xchg
xor
jbe
cmp
bound
dec
add
sbb
flds
fldenv
add
mov
mov
shrl
shll
sti
sub
dec
cs
divb
imul
out
scas
ret
leave
push
xor
rcrl
inc
aaa
cmpsb
and
cmpsl
int
stos
fidivrl
push
sbb
rcl
or
nop
lret
test
mov
and
lods
inc
lds
cmp
push
pop
imul
mov
int3
xchg
adc
cmp
test
push
sbb
cld
in
sub
xlat
cmp
sbb
ss
test
mov
out
stos
push
push
aam
add
stc
push
add
imul
adc
or
std
repnz
push
lock
pusha
je
js
mov
jo
hlt
daa
fildll
lcall
or
sbb
or
inc
sub
fnstcw
cmp
cmp
lods
xor
repnz
adc
cmp
scas
xchg
lret
lods
adc
mov
and
jns
shr
clc
gs
lods
pusha
push
movsl
lods
sbb
pop
inc
xor
arpl
mov
movsl
into
aad
mov
cmp
mov
cmp
sbb
xchg
lret
mov
jo
movsl
mov
andl
sub
imul
lock
push
inc
aad
filds
stc
lods
data16
imul
jb
mov
jne
test
in
jns
sub
enter
push
xlat
popf
sbbb
cli
test
stos
jmp
mov
imull
cmpl
int
push
movb
hlt
sub
loop
loope
ret
test
les
aam
enter
sbb
fwait
push
lds
loop
mov
pushf
mov
inc
xchg
in
cmpsb
ljmp
xchg
outsb
mov
in
enter
xchg
pop
testb
in
ss
mov
mov
add
and
out
push
mov
mov
sbb
nop
shlb
jp
adc
cld
mov
jbe
dec
test
push
inc
mov
mov
xchg
fcompl
mov
pushf
mov
out
fisubrs
test
cmp
push
mov
out
ss
add
mov
lds
pop
dec
jge
inc
ja
add
push
sub
lea
je
add
mov
push
movmskps
or
jge
sub
test
pop
mov
fimull
adc
cld
xchg
outsl
and
aam
rorl
mov
and
and
negb
push
sbb
ficomps
rcrl
ja
jmp
push
push
call
in
fs
fsub
je
std
dec
icebp
or
push
mov
fldcw
xor
xor
jno
inc
push
push
cmp
ljmp
gs
dec
loopne
gs
push
fdivl
jp
xchg
pop
mov
sub
mov
aam
xchg
movsl
jae
push
mov
sarb
mov
in
sbb
push
sbb
in
orl
jecxz
cmc
sahf
rcl
and
add
xor
in
pop
ficompl
xor
lea
int3
sub
pop
out
dec
push
dec
ja
aaa
cmp
adc
into
dec
fmuls
push
fiaddl
pop
ret
push
test
pop
stc
test
lds
fnsave
inc
arpl
scas
fwait
jmp
jmp
push
xchg
sub
add
stos
pushf
pusha
popa
cmpsb
sbb
xor
and
aad
jmp
jno
cmp
cmp
add
pop
mov
rcrl
rclb
fildl
les
imul
in
push
out
call
sub
out
fcomip
popf
dec
fs
pushf
addr16
aad
nop
into
out
aas
int3
xor
les
sbb
sbbl
mov
push
out
inc
push
jns
imul
mov
mov
enter
in
dec
scas
pop
ret
sub
and
out
and
call
and
cmp
and
sub
lea
jecxz
fstpl
jmp
cmp
and
gs
stc
icebp
pushw
mov
pop
sbb
and
mov
int3
stos
es
mov
fucomi
insb
sar
jmp
fiadds
add
les
out
xor
cmp
into
movsb
cmp
mov
dec
icebp
dec
pop
imul
mov
pop
leave
add
ja
mov
imul
hlt
dec
push
pop
int3
pmullw
movsb
sbb
or
jae
movsb
bound
sarl
xchg
inc
in
out
int3
and
jns
jecxz
in
call
loop
andb
sahf
sbb
fnstcw
pop
sub
fidivl
fcomip
push
mov
dec
inc
mov
sub
test
mov
or
mov
repz
mov
xor
ds
adc
or
idiv
adc
jb
fs
pop
dec
dec
out
mov
jecxz
cwtl
out
fsubrl
lea
dec
inc
arpl
xchg
jns
test
in
sbb
shrl
xor
cmp
into
addr16
sbb
outsl
ljmp
pop
bound
in
mov
lock
outsl
xlat
xor
or
or
es
mov
adc
testb
lods
in
roll
test
cli
shr
loope
test
data16
movsb
jbe
leave
pushw
jb
pop
in
adc
pusha
push
jnp
cmp
push
movsb
pop
push
sbb
int
push
pop
or
add
std
out
cmp
int3
jl
sbb
sub
pushf
and
or
push
in
push
mov
and
lods
adc
lods
push
aam
fdiv
les
mov
sub
sbb
push
movsb
cmc
sahf
or
adc
scas
cld
loopne
fmuls
pop
sub
jge
repnz
clc
dec
xor
push
push
push
enter
xlat
test
push
rcl
mov
pop
mov
sbb
push
push
sbb
or
push
fstl
inc
cltd
push
dec
and
negl
push
cld
lea
mov
cmp
inc
test
mov
stos
push
repz
mov
adc
rcll
fidivs
aad
in
push
test
out
mov
push
xchg
mov
push
or
lea
cmp
les
mov
lea
push
inc
adc
sbb
loopne
scas
mov
mov
mov
mov
jle
add
lods
fdivr
movsl
popf
int3
xchg
bound
andl
scas
ret
xchg
adc
mulb
jp
pop
push
push
sti
ljmp
in
enter
push
hlt
xor
mov
mov
sbb
pop
daa
mov
das
aas
lcall
bound
xor
mov
mov
push
xchg
inc
jle
std
into
pusha
or
inc
in
jns
andb
std
mov
cmpsl
mov
addr16
or
lcall
mov
push
aad
mov
data16
sarb
addr16
mov
dec
clc
add
lds
das
mov
movsl
dec
and
aam
xchg
cld
inc
sti
sub
inc
shll
scas
pop
xchg
jmp
sub
cmp
movl
dec
adc
repz
jmp
les
jns
jns
jb
into
and
cs
xor
push
sahf
testl
test
icebp
mov
add
xchg
mov
dec
fisubl
sbb
pop
lods
outsl
lods
test
test
or
mov
xchg
imul
jmp
aad
outsl
in
cmp
sbb
cmp
cmpsb
sub
and
imul
aad
or
and
jg
cltd
leave
incb
test
jbe
xchg
add
add
fs
sbb
mov
jg
out
mov
pop
dec
das
jae
aas
pop
mov
inc
xor
test
xor
sub
iret
clc
jb
fmuls
sub
xlat
xlat
sub
pop
cmp
xchg
jno
pop
mov
lods
iret
mov
in
or
out
push
sub
cs
pusha
push
daa
xor
mov
push
subl
mov
xor
insb
stc
adc
dec
cwtl
inc
cmp
push
jecxz
test
out
stc
lock
lret
in
mov
sahf
lahf
mov
cltd
xor
outsl
shl
rorl
mov
cmp
xchg
loop
jecxz
int
test
in
push
lds
xor
dec
cmc
fimuls
pop
jne
das
sbb
xchg
stos
push
or
test
aam
in
sbb
in
or
and
jle
outsl
aas
ret
push
push
or
repz
mov
or
sbb
jecxz
aam
fldcw
mov
sub
cli
jge
and
dec
js
insl
xor
aad
inc
rcrb
repnz
push
clc
icebp
dec
dec
out
data16
and
mov
ret
outsb
lods
or
push
and
mov
xor
dec
insb
cltd
pop
fisubrl
scas
cmp
push
sbb
jg
inc
cmp
ret
jns
notl
cmp
dec
inc
sbb
scas
adc
lahf
and
and
lods
jns
pop
xor
and
xlat
sub
mov
gs
and
sbbl
inc
mov
adc
insb
out
fucomp
xor
movsb
fisttpll
xchg
sbb
fildll
clc
call
adc
xlat
popa
and
scas
sub
mov
fildl
adc
lds
cmpsl
sahf
daa
jmp
xchg
sbb
sub
stos
mov
adc
and
test
leave
pop
bound
jg
jb
jg
jge
outsb
lahf
push
cwtl
or
mov
loop
push
sbb
cmp
push
into
cmpb
dec
bound
push
push
sub
je
mov
xchg
jnp
jb
sub
fucomi
jge
leave
or
stos
inc
test
repz
cmpsl
inc
inc
or
cmc
push
aas
add
js
lahf
xchg
pop
insl
pop
pop
stos
icebp
inc
in
push
mov
or
jb
sub
cmp
pop
adc
lds
and
dec
out
cli
mov
mov
das
sub
fsts
mov
js
adcl
mov
notl
xor
mov
insl
xor
pcmpeqw
dec
out
lret
in
movsl
cmp
fisubs
push
mov
aaa
add
cmpb
pusha
mov
push
dec
xor
movsb
arpl
ds
stos
mov
xchg
imul
xor
loope
or
pusha
repnz
mov
adc
xchg
mov
push
dec
inc
loope
xchg
pop
imulb
outsl
out
nop
hlt
jbe
or
and
hlt
ficomps
sti
mov
mov
mov
iret
push
fmul
loope
das
arpl
or
lods
aam
mov
push
sbb
sub
or
test
mov
and
sub
add
lds
adc
gs
ljmp
cmc
arpl
xor
jno
cmp
or
or
add
jbe
xor
inc
std
mov
or
add
inc
push
stos
stos
dec
mov
add
stos
or
xor
mov
stos
jb
enter
in
data16
scas
pop
mov
das
daa
dec
inc
xor
scas
pop
mov
xchg
push
ss
popa
jp
outsl
inc
lret
ljmp
mov
mov
das
push
jl
iret
je
pop
mov
sbb
mov
or
fistpll
iret
push
cwtl
or
movsl
lcall
loop
int
sbb
cmpsb
xor
jmp
loop
dec
add
aam
pop
aaa
hlt
rcrl
and
aaa
es
add
push
jmp
push
sub
insb
mov
sbb
jb
or
jo
out
jb
incl
lods
mov
sbbb
sub
add
push
pop
int
movsb
lds
sti
sub
mov
lahf
sbb
mov
jge
ja
jb
inc
leave
jbe
inc
or
or
pop
stos
sbb
lcall
cmpsl
adc
repz
lds
out
outsb
int
sub
bound
add
dec
repz
cmp
mov
shlb
cli
inc
xchg
adc
cmpsb
orl
outsb
mov
lret
xchg
fstpl
add
lret
fbld
mov
addb
scas
dec
cmpsl
addr16
or
repz
fistpll
and
in
adc
or
stc
xor
fwait
mov
pop
cmpsl
shr
scas
adcb
addr16
js
mov
scas
leave
mov
dec
rcrb
lods
pop
pop
shl
mov
int3
add
mov
or
mov
or
cmp
fists
dec
mov
jl
ret
mov
dec
add
mov
popf
adc
xchg
xchg
sbb
mov
and
cmp
ljmp
xor
mov
popf
pushf
stos
jb
push
fnsaves
adc
dec
pop
stos
scas
hlt
sub
sbb
mov
inc
stos
fcoml
pop
mov
sbb
mov
or
xlat
lock
xchg
jne
adc
sub
pop
inc
iret
adc
inc
rclb
pop
xor
ret
push
lods
bound
and
mov
jecxz
idiv
jnp
sub
adc
mov
dec
push
push
mov
aaa
mov
lds
cmp
stos
fsub
pusha
out
cmpsl
inc
pop
in
dec
jl
shlb
dec
addb
mov
arpl
mov
fadds
rolb
pop
dec
nop
jae
pushf
xchg
mov
mov
rolb
sub
sbb
xlat
iret
rcrl
cmpsb
jb
mov
sbb
push
dec
inc
fs
rol
inc
lods
and
repnz
cli
mov
cwtl
ss
movsb
and
scas
stos
test
scas
inc
sbb
cld
mov
adc
xchg
hlt
sub
stos
addr16
sti
jle
fwait
xor
and
loop
in
lcall
decb
cmc
loop
or
add
hlt
xchg
mov
push
add
inc
sar
cld
push
mov
out
out
pop
push
xchg
shrl
sahf
lcall
je
vmread
mov
rclb
outsb
out
cld
popf
mov
add
pop
stos
in
lret
jbe
push
into
push
enter
cmp
aas
lret
aas
mov
in
dec
enter
xlat
gs
stos
ret
popa
pop
jo
imul
shlb
out
popa
jo
imul
push
sbb
and
mov
dec
fildl
lcall
jge
dec
add
xor
scas
mov
jl
add
in
addr16
mov
mov
lcall
sbb
jae
lret
loop
cmp
dec
mov
cmp
dec
push
fstps
mov
ljmp
jb
std
push
and
rcl
dec
mov
push
pusha
mov
xchg
jbe
outsb
popf
mov
push
cmp
adc
push
andl
imul
cwtl
shll
push
inc
lret
repz
mov
xor
cwtl
adc
popf
cmp
mov
add
cwtl
dec
mov
lock
orl
inc
jae
sbb
cwtl
jge
fists
iret
gs
sub
lock
inc
lods
xor
cmc
nop
dec
jo
lods
fsubs
add
mov
sbb
push
xor
inc
push
ss
fnsave
cmp
rol
mov
cmp
and
and
and
lea
jle
mov
adc
sub
cmpsb
test
stos
test
ljmp
pop
dec
xchg
sub
repnz
loopne
cs
cmp
mov
lahf
lahf
fs
enter
push
mov
aaa
int3
mov
and
xor
sub
adcb
xor
repz
pop
cmpsl
push
mov
stc
inc
je
dec
hlt
loopne
push
xchg
cwtl
pusha
add
testb
mov
sahf
mov
dec
jle
inc
or
xor
scas
into
cld
addr16
rorl
jecxz
fisubl
aad
dec
mov
movsl
pushf
clc
loope
push
lcall
inc
pusha
cld
pop
movsl
cli
push
fldcw
sbb
jecxz
sub
jnp
lret
cmp
int3
dec
mov
popf
pop
aam
jbe
cwtl
bound
cmp
les
daa
jbe
stos
adc
rorl
negl
fidivrl
pop
mov
sarl
bound
mov
sub
or
and
jmp
lock
add
adc
jmp
mov
mov
dec
jnp
outsl
insl
imul
mov
pop
jmp
adc
and
lea
sbb
dec
outsb
leave
sbb
loopne
mov
and
mov
push
loope
push
jmp
sbb
loopne
daa
enter
dec
pop
dec
fadds
xor
insb
cli
jb
stos
cmp
sub
inc
test
cs
push
and
pop
jno
xor
or
jmp
cmp
pop
push
pop
int
lret
jmp
sti
dec
loope
filds
pop
xchg
decl
mov
arpl
xchg
cli
test
cmp
imul
or
fldenv
xchg
xchg
sbb
mov
cmc
mov
or
sub
sbbb
arpl
loop
jbe
fdiv
pop
xor
xchg
xchg
jle
mov
or
and
adc
jl
jne
jo
xlat
popa
mov
xchg
jne
pop
fnstenv
push
test
mov
pop
sahf
inc
insb
lds
inc
dec
sub
js
repnz
popf
push
clc
je
aaa
and
mov
push
roll
scas
xor
xor
std
cmc
adc
add
mov
xlat
mov
jnp,pt
xor
inc
push
sub
add
cli
push
mov
fidivl
push
jg
adc
xor
dec
xchg
mov
ror
inc
enter
loopne
sbb
call
repnz
inc
inc
xor
mov
cs
mov
mov
mov
ficompl
iret
adc
lds
or
iret
adc
push
imul
jae
sub
jo
xlat
push
xchg
adcl
sahf
xor
outsb
pop
iret
das
les
roll
and
fwait
jmp
insb
movsb
pushf
fdivrp
mov
sarb
or
pop
lea
lods
xlat
mov
sub
js
xchg
test
jno
int3
pop
or
sub
add
aas
sub
outsb
ret
xchg
lahf
jmp
xor
lcall
fadd
shrl
inc
lods
and
dec
xchg
repnz
arpl
std
add
dec
mov
js
pop
xlat
inc
jbe
ret
loop
jl
daa
mov
jo
adc
mov
scas
stc
in
leave
jmp
cmp
stos
cs
mov
fstpl
add
inc
in
ljmp
cmc
leave
pop
dec
scas
pop
jmp
or
pusha
fadd
pusha
jl
mov
mov
je
punpckhbw
sub
mov
cmp
inc
inc
jns
movsb
cmpsl
adc
push
inc
int
or
jp
aad
add
dec
add
dec
jo
inc
pop
cwtl
mov
push
scas
xlat
test
clc
add
dec
dec
add
decl
or
push
adc
loopne
push
dec
inc
leave
fdivl
vfmsubadd231ps
jecxz
mov
mov
fisttps
repz
out
push
loope
pop
jne
ficompl
jecxz
sarb
sbb
dec
outsl
mov
mov
mov
jne
add
xchg
fwait
mov
jae
movsb
imul
sbb
fs
imul
lock
enter
mov
push
dec
lret
popa
ljmp
inc
je
push
add
xchg
mov
add
inc
rcl
loope
and
jg
imul
adc
fwait
fwait
stos
out
insb
call
outsl
add
cmp
into
dec
data16
add
pop
aad
cmpsl
or
cwtl
xor
ja
mov
sbb
push
stos
jno
push
sub
stos
sti
std
pop
mov
das
cmp
fmul
mov
fwait
pop
insl
insl
mov
add
push
rcr
sahf
lock
mov
out
mov
adc
add
les
adc
sbb
mov
adc
mov
adc
xor
in
xor
adc
mov
adc
aam
adcl
push
outsb
lahf
cmp
enter
lods
pop
jl
pop
fldl
jno
in
inc
pushf
fildll
xor
cmpsl
mov
stos
lcall
sbb
repnz
je
jmp
mov
adc
mov
fcomps
mov
daa
add
test
jo
xchg
sbb
or
dec
data16
popa
lock
stc
xor
or
repnz
xchg
daa
sbb
mov
push
and
xor
pop
sbb
dec
enter
aam
cmp
sarl
sbb
push
mov
push
pop
dec
mov
fistps
or
xor
leave
pop
and
call
fisubs
gs
xchg
jo
fstl
lcall
push
mov
sahf
fs
or
jecxz
fwait
jo
add
xchg
or
mov
sbb
inc
jl
outsl
inc
mov
in
ljmp
popa
mov
pop
push
sbb
or
mov
lods
xor
fistpl
test
and
jno
sbb
stos
scas
xchg
jle
subb
fst
int
lcall
out
sub
adc
mov
pusha
out
mov
mov
push
push
sub
scas
push
ret
xor
scas
cli
pop
jmp
add
jp
loop
mov
jmp
jb
lea
cltd
mov
xor
fbstp
push
ffree
mov
pop
lods
cltd
test
data16
jae
testl
lods
mov
std
sbb
xor
adc
push
movsb
cmpsl
mov
loop
ds
adc
int3
mov
je
push
das
pop
in
cmpsb
ljmp
xchg
mov
int3
repnz
sti
push
mov
js
inc
sub
mov
pop
lock
iret
loope
jl
push
bound
sbb
movsl
mov
loopne
andl
xchg
pop
mov
mov
aad
inc
pop
lds
cmpl
adc
addb
jp
int3
push
xchg
hlt
subb
jle
dec
and
je
dec
lcall
ja
lcall
loopne
inc
imul
out
lcall
mov
outsl
cwtl
es
rcpps
sbb
cmp
hlt
testl
jg
sti
add
sub
push
sti
and
loopne
mov
aad
imul
cmpsl
repz
mov
aad
ss
mov
mov
push
cmc
or
popf
sub
or
push
or
push
sbb
out
sub
and
jl
and
mov
iret
sbb
pop
movsl
sub
xchg
xlat
xchg
dec
shrl
rolb
out
mov
ja
out
jae
orl
add
lods
dec
lods
inc
or
inc
lods
pop
ss
stos
jne
mov
push
mov
cli
jo
stc
iret
cmp
pop
adc
ret
mov
fadd
imul
aaa
hlt
fwait
jle
in
and
sbb
aad
cmpsl
lea
adcl
dec
dec
in
jge
addl
outsl
sub
sbb
decb
lret
cmpsb
mov
cmc
nop
mov
or
mov
fisubs
push
mov
es
mov
or
pop
mov
idivb
mov
sti
push
xchg
jne
lret
xor
aam
jbe
cmp
sbb
fidivrs
sbb
adc
mov
push
testl
pop
push
inc
and
jbe
push
dec
out
fsubrs
push
push
dec
addb
sbb
mov
mov
shrb
fdivl
bound
jmp
leave
lods
imul
mov
pop
inc
les
sbb
sahf
std
or
addr16
jecxz
sahf
loop
iret
or
pop
test
push
lcall
mov
fstpt
push
and
stos
cmpsl
stos
hlt
lds
stos
shrl
mov
int3
cmpsb
push
ljmp
mov
cmc
add
push
mov
mov
adc
stos
icebp
mov
adc
fcmove
add
jbe
popl
call
outsb
pop
sub
cmp
jnp
aad
push
push
loope
ss
fsts
sahf
repnz
bound
pop
jg
int3
xchg
out
pushf
push
pushf
repz
dec
sub
xor
add
aaa
lods
addr16
outsb
pop
insb
inc
adc
ret
lret
aas
jne
call
push
mov
adc
sbb
cltd
dec
data16
data16
cmp
flds
push
push
mov
jb
mov
jmp
push
adc
and
pop
cmpl
sbb
imul
xchg
lret
in
popf
cmp
mov
push
jge
aaa
rol
aam
popa
inc
jns
cmpl
and
cmp
sbb
test
jmp
jnp
adc
mov
ficomps
leave
or
push
pusha
test
out
cmp
mov
pop
mov
jmp
pushf
or
sbb
add
xorb
stc
testb
adc
mov
cli
lock
imul
push
mov
stos
dec
dec
movsb
ljmp
jno
jno
insb
pop
and
sbb
adc
adc
outsl
and
dec
rolb
push
lock
dec
testl
inc
pushw
sbb
mov
daa
dec
push
pop
and
jl,pn
hlt
ss
stc
dec
sbb
jl
push
sahf
repz
stos
add
push
jns
fwait
pop
incl
xchg
adc
fstpl
repz
lock
sub
movsb
mov
or
push
out
pop
pop
adc
loope
add
sub
push
mov
and
xchg
lret
sub
aas
dec
mov
cmp
push
mov
pop
or
and
fildl
aad
push
mov
mov
loopne
adcb
jnp
push
ljmp
xchg
aaa
clc
adc
movsb
pop
rcrl
xchg
jae
add
gs
xchg
stos
loopne
das
testl
push
les
mov
push
mov
dec
andb
mov
cmpsl
and
out
jp
je
cmp
loope
das
cmp
pop
push
dec
out
add
add
mov
notl
ss
lcall
jb
mov
dec
ret
testl
idivl
or
cmp
and
int
cmp
jae
outsl
mov
adc
fbld
jl
xchg
mov
add
xor
add
xchg
xor
pop
cltd
sti
enter
dec
xchg
or
std
out
pop
mov
sub
lret
movl
mov
test
test
dec
sbb
dec
pushf
loopne
out
and
shrl
in
dec
paddb
sbb
add
or
push
ret
xor
stc
cmpsb
ja
test
xchg
push
or
and
pop
test
sub
add
cmpb
mov
or
repnz
aaa
aam
popa
adc
xor
imul
cmp
jle
push
mov
jae
setb
dec
xlat
push
xchg
xchg
xchg
repnz
popf
aas
int3
xchg
dec
nop
or
pop
aas
arpl
jge
xchg
push
mov
mov
lods
push
and
push
in
in
xchg
mov
adc
movsb
arpl
mov
mov
mov
mov
fisttpl
int3
jle
cltd
faddp
pop
repz
push
and
daa
cltd
test
js
sbb
sbb
sbb
push
xor
sub
add
jno
cwtl
or
jno
pop
rclb
sbb
xchg
mov
push
pop
mov
pop
bound
out
popa
in
leave
loop,pt
ret
mull
popa
shrl
cmp
icebp
xchg
imul
push
xchg
mov
std
fsts
push
scas
pop
inc
outsl
pushf
cmpsb
loop
fwait
lds
loop
adc
dec
shl
mov
adc
aaa
mov
or
add
xchg
lret
repnz
mov
sub
push
popf
adc
inc
mov
inc
pop
rcrl
scas
sbb
sbb
in
bound
xchg
pop
mov
cmpsl
repz
mov
data16
dec
pop
fs
arpl
ds
pop
pop
mov
xor
jmp
sbb
outsl
inc
inc
adc
pusha
xor
hlt
push
cmc
mov
xchg
out
ficompl
xchg
cs
out
xchg
clc
add
push
dec
fbstp
xchg
or
add
jo
vmovss
cmp
cld
jbe
jmp
mov
cmp
xorl
xchg
fistpll
mov
sub
mov
ljmp
jmp
out
inc
add
pop
fwait
out
stos
mov
pop
dec
pop
insl
sbb
push
loop
iret
mov
fs
sti
dec
xor
cld
inc
and
shlb
xchg
mov
jl
mov
add
xor
cmp
mov
loop
ss
jmp
iret
lret
xorb
arpl
jp,pt
movsl
mov
fdivrs
das
jne
jecxz
mov
adc
pop
gs
ret
test
imul
aaa
inc
test
push
mov
inc
je
mov
sahf
std
ja
iret
int3
push
jne
cmpsb
xchg
or
add
int3
or
adc
sti
adc
adc
cmpl
or
jns
pop
xor
inc
add
cltd
cmp
xchg
inc
push
into
shll
mov
shl
fimull
adc
inc
loope
in
inc
pusha
repnz
stc
scas
loope
lcall
mov
jo
mov
jmp
pop
mov
les
inc
cltd
mov
in
daa
lcall
ss
and
push
sub
js
icebp
rolb
cmpsl
enter
and
jb
jno
dec
pop
jl
push
or
into
xor
insl
ret
xor
push
jo
pusha
adc
inc
sbb
dec
dec
xorl
push
jae
push
or
lret
clc
adc
mov
inc
into
push
andb
xor
pop
mov
pop
js
outsb
pop
jl
push
push
insb
icebp
jp
mov
add
insl
sbb
sbb
pop
mov
dec
test
adc
in
leave
lcall
andb
adc
jnp
xor
outsb
mov
sub
hlt
and
std
pop
mov
lods
sbb
icebp
pop
dec
fnstsw
je
sbb
adc
add
push
ds
and
stos
mov
out
dec
mov
test
jno
mov
int3
fiadds
out
xchg
out
cld
les
arpl
jo
daa
sbb
xchg
cmp
cld
sub
or
mov
scas
loop
push
addl
ret
xchg
leave
mull
push
fisubs
adc
les
aas
daa
jl
jae
dec
test
cli
push
xor
pushf
xchg
jne
mov
mov
and
aas
imul
xor
rcl
ds
jmp
mov
into
add
mov
push
jg
cmp
jmp
js
xchg
mov
inc
inc
cmc
iret
pop
out
add
cwtl
lods
cmp
btr
xchg
push
jae
lods
sbb
cli
pop
sbb
or
jns
jns
push
sub
sahf
int3
xchg
inc
cmp
std
jle
lcall
jno
cmpsb
adc
in
popa
lock
mov
loop
mov
ss
mov
jno
lods
lds
jnp
jns
inc
fimuls
add
idivl
pop
js
loope
hlt
jns
lret
in
dec
push
out
cmp
les
lds
adc
loope
stos
imul
dec
cmc
pop
xchg
rorb
xlat
dec
cwtl
inc
mov
or
call
orl
pushf
outsl
rcrl
cld
insb
push
mov
fucom
cmc
mov
adc
bound
cld
loop
sub
test
shlb
add
clc
mov
or
push
pop
mov
push
sub
push
or
aas
xchg
jmp
out
mov
ret
ljmp
je
aaa
shlb
mov
and
mov
pop
in
push
xchg
add
xchg
hlt
cs
sbb
xadd
movsl
mov
xchg
push
jl
mov
add
fwait
push
mov
push
cmp
shlb
js
dec
jle
cwtl
in
add
fists
test
dec
add
sbb
mov
and
movsb
pop
cmp
pop
lea
call
stos
push
mov
mov
pop
jl
pop
xchg
cmp
xchg
xor
push
add
enter
dec
mov
sbb
or
xchg
xchg
out
repz
cs
inc
cli
xchg
push
mov
mov
inc
dec
roll
push
sbb
stos
shlb
daa
pop
in
jmp
mov
dec
jecxz
or
imul
mov
pop
sbb
mov
mov
cs
loope
jne
and
nop
jbe
jp
jp
ficompl
clc
inc
scas
adc
fnstcw
jne
insb
push
lods
mov
cmp
imul
nop
inc
push
mov
ret
lea
sub
adc
shrb
in
mov
enter
gs
ja
cmp
jecxz
dec
pusha
clc
lods
imul
push
mov
arpl
pop
leave
in
lcall
sub
in
mov
jb
xor
icebp
mov
fidivs
push
icebp
ret
push
out
cld
push
les
add
fwait
out
jg
jecxz
xor
mov
jnp
fadd
daa
jae
test
mov
mov
and
mov
mov
enter
into
inc
fildl
ljmp
shlb
adc
and
cmp
or
dec
jg
notb
loope
mul
ret
add
adc
mov
push
enterw
cltd
push
mov
push
jp
ret
xchg
mov
arpl
clc
fiadds
and
cmpsl
in
inc
sub
jo
arpl
dec
mov
mov
gs
and
adc
fldl
add
inc
data16
iret
inc
leave
sbb
cmpsl
shl
lahf
scas
enter
xchg
mov
pop
push
fs
pop
loop
fdivrl
fsubrs
aaa
leave
cmpsl
sbb
add
movsb
or
push
mov
cli
push
stos
pop
jge
out
icebp
cmp
inc
push
or
icebp
dec
mov
and
test
fcomip
int3
xorl
dec
pop
push
mov
loope
jl
pop
xor
mov
arpl
lock
xchg
inc
rclb
in
adc
insb
lods
pop
mov
test
mov
sub
aad
dec
ljmp
je
mov
cmp
adc
push
lret
mov
jecxz
adc
mov
lret
push
loopne
enter
xchg
sbb
add
frstor
mov
int
pop
mov
push
mov
add
dec
push
ss
aad
or
pop
stos
pop
test
stc
jb
pop
mov
imul
mov
dec
les
pop
mov
dec
aas
stos
enter
ss
cli
mov
dec
imul
or
inc
push
sahf
fnstcw
push
push
push
insb
pop
pop
dec
aad
add
xor
iret
iret
movsl
repnz
push
jg
mov
test
sbb
or
stc
icebp
and
add
mov
push
adc
call
loopne
fldcw
xchg
jmp
adc
mov
mov
ja
jecxz
push
cs
xorl
or
test
dec
scas
je
lea
inc
sub
aaa
dec
mov
xor
andb
dec
xor
lcall
add
mul
mov
clc
into
xor
fsubr
outsl
cld
pop
push
ja
rcl
cld
cmpsl
lods
adc
test
xor
daa
mov
jle
pop
jne
xchg
adc
fisubrs
push
inc
out
mov
push
filds
insb
ljmp
hlt
test
xor
fwait
out
scas
and
je
sub
dec
call
push
stos
pop
sub
cld
lods
das
orb
lds
stos
mov
sub
dec
popa
movsb
scas
push
lret
lock
repnz
mov
lock
ret
cltd
in
inc
sub
stc
stos
pop
stos
adc
or
nop
bound
mov
mov
insb
stc
dec
in
outsb
push
dec
inc
loop
xor
call
call
dec
ljmp
or
sub
test
mov
and
insb
pop
in
cli
push
cmp
sub
scas
mov
arpl
or
add
sub
xchg
dec
inc
add
or
mov
add
ret
dec
aaa
imul
roll
stos
iret
enter
sbb
xchg
data16
xchg
xchg
mov
imul
popa
jnp
ds
mov
mov
ret
loop
shll
repnz
cmpsb
das
or
mov
lods
lock
add
ss
rolb
xor
mov
jmp
inc
or
mov
sbb
and
lcall
mov
lcall
je
clc
jp
cwtl
cmp
mov
cwtl
push
xor
fs
icebp
mov
xor
roll
sbbb
jmp
dec
jne
pop
in
lcall
dec
stos
aas
enter
mov
fisubl
aad
mov
bound
push
out
adc
xrelease
aad
or
ret
aam
sub
sbb
leave
dec
jb
cmp
pop
adc
les
test
or
repnz
mov
cltd
push
mov
fwait
bound
fiadds
push
addr16
xlat
ret
out
stos
shlb
rol
add
dec
jmp
les
jnp
int
arpl
push
sahf
js
incl
sahf
sub
inc
or
xlat
mov
mov
xchg
mov
das
mull
cmp
add
push
mov
sub
jns
mov
popa
loope
fimull
stos
and
jo
roll
push
pushf
xor
xchg
das
push
pop
iret
push
sub
aad
movsl
inc
das
sbb
push
dec
adc
popf
add
into
mov
in
out
popa
push
or
je
int3
mov
ds
clc
pop
inc
xlat
xorl
push
mov
mov
jae
out
push
push
mov
add
lods
inc
addr16
mov
shlb
lds
dec
cld
dec
test
mulb
mov
pop
clc
icebp
out
dec
enter
shrb
lret
push
adc
pop
test
add
xchg
jecxz
sarl
push
xchg
xchg
sub
mov
mov
xchg
adc
sbb
inc
ret
sbbb
insl
inc
mov
mov
adc
sbb
xchg
xorl
adc
dec
jbe
sahf
or
mov
pop
ret
pop
cs
mov
fsubl
cmpsl
fstps
dec
lea
add
pusha
insl
sahf
jmp
dec
push
xor
add
push
mov
cmp
adc
pop
dec
or
jae
int
jno
jne
mov
inc
in
xor
and
push
push
imul
fistps
mov
stos
ret
push
jnp
jle
xchg
cwtl
mov
xchg
decl
xchg
fisttps
pop
pop
sbb
push
xchg
ss
out
mov
mov
lahf
inc
push
push
cmp
imulb
mov
cmp
imul
ja
in
pop
popa
loopne
push
pop
loop
and
enter
mov
stos
xchg
inc
cmp
and
add
std
leave
in
sub
cltd
xorb
pop
lret
lock
push
fldl
cwtl
xor
loope
cmp
pop
outsl
aaa
xor
adc
adc
adc
leave
push
inc
jmp
hlt
adc
mov
cmpsl
mov
jp
lcall
xor
adc
pop
jbe
jo
imul
jae
cmpsb
or
nop
inc
nop
lcall
stos
stos
sti
mov
mov
test
lea
lds
out
outsl
call
jo
inc
mov
ret
jmp
or
and
and
add
fisttpll
fildll
popa
ret
mov
cs
jno
sub
inc
lahf
xchg
loopne
or
add
shl
jae
pop
cwtl
jne
sub
jb
add
mov
sub
cmc
adc
xchg
test
and
xchg
xchg
dec
in
mov
pop
test
lcall
inc
add
lahf
sub
sbb
data16
cwtl
adc
mov
cmp
pop
adc
roll
cmp
or
inc
inc
std
dec
scas
mov
push
push
inc
xor
inc
pop
movsl
out
inc
inc
mov
adc
ds
ss
pop
rorl
test
shll
stos
int3
dec
dec
inc
rcl
loop
stos
addr16
je
and
mov
gs
lock
int
movsl
jne
mov
jg
push
addr16
ret
imul
arpl
outsl
push
mov
dec
imul
ret
xchg
ljmp
stc
roll
ror
cli
xor
sbb
aas
mov
or
cmp
enter
cmp
cmp
lret
movb
jg
scas
aam
push
lahf
loope
mov
jg
xor
imul
or
out
aam
add
adc
and
sti
das
mov
jle
mov
popf
xor
push
push
test
jo
arpl
fwait
hlt
add
daa
mov
je
jbe
sahf
clc
fwait
dec
loop
in
out
jg
lock
leave
pop
icebp
repnz
jecxz
bound
mov
sbb
repz
pusha
mov
jo
lods
push
mov
cltd
movb
popf
and
pop
scas
int3
sub
imul
dec
subl
push
inc
or
xchg
loop
imul
movsb
jge
mov
fcmovnb
or
mov
cmp
mov
daa
xchg
push
sub
test
jo
sbb
xor
lds
or
mov
jno
mov
mov
ljmp
pop
test
xchg
inc
ds
xor
gs
stos
inc
adc
fsts
shrb
cmp
mov
int3
in
mov
cli
pop
loopne
mov
push
insl
stc
pop
cmpsl
xor
and
mov
inc
xchg
xchg
sub
popf
push
popa
rcll
test
inc
and
rcrl
mov
pop
xor
add
or
loope
jp
das
pop
xlat
aad
mov
cmp
dec
push
push
push
shll
out
outsb
inc
out
fisubrs
ret
lods
sti
inc
fidivrs
pop
stos
pop
lock
push
sbb
inc
out
inc
jbe
insl
push
pop
inc
sti
cld
xor
fwait
call
pusha
fwait
jno
xor
adc
or
jmp
arpl
frstor
jge
aam
dec
inc
lods
add
pop
push
inc
cmp
xor
adc
sbbl
imul
cmp
cmc
mov
out
imul
pop
sub
rclb
jl
dec
lods
push
add
sbb
xchg
or
adc
pushf
add
int
mov
loop
inc
cs
imul
adc
stos
rorb
xchg
mov
lahf
rcrl
sbb
aam
jbe
xchg
fisubrs
hlt
mov
cmc
and
add
sub
pop
stc
mov
ja
xchg
je
jnp
imul
adc
cmpb
fidivrl
int
dec
cmp
jecxz
pop
mov
and
sbb
std
jecxz
ss
fcmovnu
decb
jmp
aas
jae
stos
sbb
mov
cmp
fcoms
mov
lahf
aad
xchg
xchg
push
push
sbb
jo
add
sub
pop
cmp
pop
and
loop
jnp
sbb
cli
xchg
or
hlt
lret
cmp
hlt
ret
jmp
in
xor
and
ss
xchg
rcrb
pop
lret
mov
cmp
call
test
cmpsb
insb
jbe
pop
fmulp
push
insl
adc
and
jge
cltd
dec
cltd
sub
mov
xchg
outsl
jo
pop
dec
push
mov
out
jecxz
loop
or
dec
adc
pushf
fisttpll
pusha
stos
mov
xchg
fstps
push
movsb
movsl
and
adc
insb
and
rorb
test
lcall
sarb
leave
addr16
enter
cld
test
mov
sti
adc
insb
adc
cltd
inc
xchg
ds
in
fwait
push
repz
push
outsl
icebp
fildll
push
xchg
mov
fwait
sbb
lea
sub
mov
cs
mov
sbb
add
xor
pop
lret
sbb
push
mov
and
arpl
add
pushf
push
jo
jecxz
sti
iret
pop
outsl
adc
aad
inc
add
pushf
ja
das
inc
push
adc
addr16
push
xor
insl
jnp
jmp
adc
adc
mov
xor
pop
dec
or
arpl
aam
xchg
ud2
jl
stos
and
xchg
fmul
fcomi
dec
inc
xchg
jo
out
sbb
mov
scas
aam
jp
cmp
xor
in
mov
int
jo
cwtl
mov
mov
adc
xchg
ja
push
and
std
inc
push
push
jno
jnp
adc
sti
xchg
dec
les
jno
adc
arpl
aam
es
test
lea
outsl
movsb
sbb
cmp
push
mov
xchg
and
xchg
sarl
outsb
nop
mov
shll
adc
aam
cmp
testl
adcl
movsl
nop
cs
sarb
lcall
test
xchg
xor
mov
cld
das
repz
dec
ljmp
and
es
frstor
lret
push
adc
insl
adc
loop
popf
and
xchg
fs
aad
and
test
pop
pusha
cwtl
imul
or
pop
adc
cwtl
int
test
addr16
imul
test
orb
fldenv
mov
xchg
mov
and
xchg
inc
add
cmova
pushf
xor
call
mov
fadds
push
int
lahf
iret
es
inc
sbb
out
push
dec
push
sub
mov
out
push
cld
cwtl
cmpsl
push
jg
pop
ja
fwait
mov
xchg
test
and
cmpb
pushl
mov
cs
int
mov
jle
xor
fwait
xorl
sahf
xor
and
cld
xor
test
mov
shrl
xchg
add
stc
xchg
push
cli
aas
dec
push
adc
jns
pop
cmp
sub
xor
mov
stos
idivl
das
stos
or
mov
xchg
xor
loopne
sahf
xchg
push
leave
lea
hlt
jg
sbb
jne
movsl
test
dec
ss
mov
xchg
or
loope
cs
jmp
adc
adc
cmpsl
push
mov
mov
in
gs
mov
xchg
sbb
aam
push
leave
into
adc
shr
sub
hlt
or
dec
stos
and
mov
pop
subl
outsb
out
jo
outsb
adc
cmp
mov
cmpsb
dec
pop
jne
adc
fists
fdivl
int3
sbb
call
mov
sete
mull
setl
mov
test
sbb
sti
pop
push
xchg
lcall
orl
add
mov
ret
pop
sub
jne
gs
vmovaps
jae
pop
push
push
stos
push
imul
aas
imul
daa
out
or
addl
rcrb
cwtl
int
mov
xchg
inc
dec
xor
jmp
push
xchg
dec
fists
mulb
jbe
mov
sarl
pop
mov
ficomps
mov
push
jns
mov
mov
cmp
mov
shlb
xlat
jns
sbb
push
dec
push
sub
imul
xor
mov
pop
inc
xor
xchg
xchg
mov
leave
lret
xor
cmp
cmpsb
xlat
cmp
pop
scas
jp
and
inc
fistpll
cmp
push
mov
hlt
popa
jne
xlat
jecxz
or
sbb
movsl
mov
shrb
cltd
jbe
pop
in
and
mov
es
lock
mov
dec
rcrb
out
in
stc
int
jmp
xchg
adc
push
or
and
sarl
sbb
lret
jb
mov
dec
inc
push
stos
xor
test
add
mov
jle
enter
jle
pop
out
sti
jg
adc
jmp
shr
iret
jle
jmp
ret
orb
sti
xlat
dec
push
into
lods
xchg
sub
cltd
negl
out
fldl
sbb
sbb
aas
mov
sub
dec
mov
inc
stos
xchg
lock
dec
jae
mov
push
mov
inc
negl
out
popf
shlb
icebp
cwtl
or
ret
hlt
xchg
sub
cmpsb
jnp
mov
pop
idiv
xchg
imul
jo
dec
rorl
pop
pop
and
mov
sub
fldl
and
pop
xchg
shrb
inc
stos
cmpsb
push
pop
in
fcomip
push
or
mov
pop
stc
xor
and
pop
mov
mov
cmc
mov
mov
and
aam
cmp
xor
addl
imul
jbe
xor
fisttps
push
and
ror
mov
dec
jecxz
sahf
shll
lock
mov
leave
push
dec
sbb
and
sub
hlt
dec
les
pop
cmp
xchg
jne
push
inc
and
xchg
imulb
sti
das
pop
or
loopne
dec
fistpll
xchg
push
js
outsb
aas
mov
daa
shrl
out
out
xchg
stos
sbb
cmp
xchg
adc
mov
dec
jb
xlat
bnd
andl
addr16
mov
loope
addr16
int
mov
mov
js
outsb
aam
faddl
or
pop
or
ss
aad
divl
bound
xor
add
jno
fstpl
lea
add
inc
arpl
mov
mov
add
inc
or
into
cmp
stos
nop
lock
ds
inc
inc
popa
jp
mov
shr
mov
fisubl
or
adc
ja
push
out
cmp
mov
stc
xor
sahf
mov
add
mulb
mov
mov
inc
je
push
loope
rcl
lds
stc
das
jge
insb
lret
push
das
out
sahf
loopne
setns
or
js
mov
push
dec
test
xchg
addl
add
imul
ffreep
jae
push
pop
fists
frstor
mov
lahf
mov
xlat
ljmp
mov
mov
inc
add
js
int
sub
add
adc
mov
imul
jge
ljmp
cmpb
push
or
nop
mov
xchg
xor
push
aas
int
and
out
pop
pop
fcmovnb
fildll
jae
mov
je
mov
and
or
mov
nop
bound
lds
jl
stos
cmp
and
ret
into
inc
xor
je
into
rcll
sub
insl
jecxz
insl
lods
pop
add
outsl
ret
pop
jmp
cmc
dec
cli
inc
mov
cmpsb
sub
test
aam
clc
mov
jg
cmp
push
out
sbb
mov
dec
xorb
lds
adc
out
xchg
push
aad
jno
push
insb
push
mov
inc
xor
xchg
xchg
push
mov
clc
cmp
lahf
xchg
jae
push
fistl
mov
jnp
add
fnsave
adc
js
int
sub
pop
mov
jge
adc
fwait
mov
das
popa
jg
dec
xchg
push
fnstsw
insl
scas
push
in
shll
mov
sub
push
dec
jecxz
in
mov
xor
xor
fcoml
xchg
orl
out
xlat
lods
mov
pop
lods
mov
in
cmc
jg
test
enter
xor
jno
push
pop
rcll
mov
orb
pop
bnd
jb
iret
mov
add
rcrb
addr16
add
xchg
and
in
add
mov
fldt
ss
clc
das
pop
sub
int
leave
insl
push
dec
in
mov
and
pop
imul
jge
addl
repnz
incl
popf
sti
sar
cmp
jmp
pop
or
cmc
shlb
xchg
outsl
and
test
mov
rep
xor
cmp
adc
mov
pop
jo
cli
les
push
inc
push
scas
pop
mov
fs
cli
pop
in
jg
insb
cmp
fisubrl
and
push
cli
xlat
dec
and
movsl
add
pop
push
jecxz
sbb
in
mov
inc
xor
cmpb
aas
mov
mov
pop
jbe,pt
lahf
imul
jbe
xchg
mov
pushaw
shlb
lods
jb
dec
ds
lcall
mov
imul
push
cmp
cltd
adc
pop
add
xlat
fcompl
fcomps
dec
test
push
and
fsubrs
addr16
pushf
in
cmc
lahf
arpl
clc
push
mov
scas
loope
cltd
subl
pop
pop
add
call
pop
xchg
jg
mov
pop
negl
dec
dec
cwtl
cmp
aam
push
lea
dec
xchg
pop
repz
test
shl
ret
outsb
daa
test
push
addl
aad
movsb
push
adc
notb
mov
mov
stos
outsl
mov
push
mov
dec
rcl
aad
cld
popf
push
xchg
mov
scas
mov
mov
mov
xchg
jbe
lods
xor
and
dec
mov
mov
popa
jg
out
daa
ss
or
dec
dec
dec
cmpsb
jns
sbb
xor
nop
xor
in
xor
and
nop
popf
and
inc
ja
fsubp
pop
pop
sbb
lods
in
stos
ljmp
xor
stc
mov
mov
ljmp
pusha
inc
data16
in
std
outsb
test
push
mov
aaa
push
and
inc
jle
addb
mov
aaa
inc
push
mov
sbb
mov
pusha
cmp
mov
mov
pop
scas
mov
insb
inc
ss
leave
loope
sub
fstl
in
cmp
sub
aaa
sbb
repz
mov
mov
mov
mov
fisubl
xchg
fimull
rcrb
out
out
mov
add
fnstcw
sbbb
outsb
pusha
lret
sarl
inc
popa
icebp
push
sub
pop
pusha
lahf
inc
in
and
ret
bound
dec
jmp
das
fwait
loope
add
push
fiaddl
cmp
scas
cmc
xchg
sbb
imul
mov
mov
outsl
mov
mulb
dec
cmp
subl
xchg
or
xchg
mov
push
dec
jbe
sub
jb
or
mov
ja
sbb
into
jns
xchg
jo
pop
es
xchg
js
mov
xchg
out
mov
xchg
aam
loopne
xor
into
jle
xor
pushf
stos
mov
addr16
lret
cwtl
dec
cmp
pop
movsb
sbb
lret
xor
adc
mov
jne
add
xchg
ret
xor
test
push
stc
cwtl
sub
enter
xchg
adc
jns
cmp
clc
mov
scas
fucomi
cmpsb
jg
inc
jb
cmpsl
sahf
xchg
xchg
inc
popf
sbb
addr16
xchg
clc
repnz
hlt
and
or
push
push
pushf
push
push
and
out
jecxz
lea
dec
mov
cmpsb
sbb
mov
or
add
cmpsb
stos
cli
push
dec
shrb
ljmp
loopne
ds
adc
and
add
shlb
add
outsl
data16
daa
push
pop
pop
std
lea
sub
ret
xchg
xchg
mov
sbb
push
mov
mov
or
push
arpl
xchg
cld
jmp
sbb
jo
mov
ds
leave
jns
shlb
mov
mov
rclb
das
lahf
jl
cltd
lods
cmp
dec
and
mov
inc
add
mov
cs
push
cs
cmp
inc
inc
inc
adc
jbe
test
bound
incb
cmp
es
or
sbb
cmp
adc
sbb
dec
jo
ss
imul
pop
mov
xor
dec
popa
push
dec
sti
pop
jo
mov
xchg
sub
dec
jnp
lds
cs
inc
fbld
dec
pop
enter
js
cli
fiadds
rep
lgs
mov
xlat
dec
out
stos
test
popf
lahf
outsb
pop
orb
mov
push
dec
into
add
scas
cmp
push
int
cltd
pop
lods
inc
sbb
mov
stc
sub
adc
adc
in
and
push
sub
adc
xlat
push
pop
aam
insb
ficoml
notb
mov
mov
dec
cmp
clc
insb
mov
mov
push
and
jns
cmc
inc
jmp
shl
mov
jmp
sbb
movsb
jbe
scas
fwait
or
adc
jb
dec
jg
bound
cmp
xchg
iret
js
pop
jno
cmpsb
outsb
out
pop
aas
sahf
dec
ljmp
push
push
mov
loope
stos
jne
pop
cmc
mov
lret
pop
xlat
pushf
push
out
movsl
xchg
cwtl
sub
fidivrl
cld
push
lods
sbb
ret
push
aam
jmp
arpl
add
mov
sub
sub
addr16
fsubrl
and
dec
pop
movsl
push
out
push
testb
sbb
fisttps
add
aaa
push
int
stc
jno
insl
sub
dec
cmp
ljmp
cmc
cmpsl
lods
fwait
pop
lahf
fldlg2
push
and
in
xlat
test
repz
adc
aad
cmp
andl
mov
std
incl
stos
cmpsl
push
and
test
pusha
adc
popf
xchg
adc
fld
loopne
mov
cmp
in
les
es
out
mov
jge
loopne
insl
mov
add
hlt
sub
lock
aad
idiv
dec
mov
out
mov
in
xchg
outsb
inc
xor
mov
inc
int3
lds
jno
xlat
ja
ret
lea
dec
pop
push
pop
mov
repnz
and
jb
mov
insl
es
push
das
aas
in
test
lea
mov
push
and
jno
mov
sbb
enter
outsb
cmpsb
in
popf
or
pop
pushf
add
xchg
jmp
stc
xchg
mov
ret
add
ret
pop
mov
fmull
outsb
gs
mov
mov
imul
outsb
xchg
or
dec
sbb
shlb
pushf
sti
pop
push
daa
jg
xchg
or
jne
fidivl
mov
xchg
xor
loopne
xchg
cmp
cs
fdivrs
mov
test
xchg
adc
rcrb
push
out
sub
mov
xchg
insl
inc
out
jb
lret
inc
lret
sub
cmpb
mov
iret
jge
daa
popa
cmp
xchg
push
in
mov
movsb
push
or
in
icebp
ja
add
mov
addl
mov
push
scas
push
lock
rol
in
lcall
jl
stos
popf
loopne
push
xchg
leave
pop
dec
dec
aam
add
xor
jl
repz
adc
sub
jo
pop
add
adc
xor
ret
jp
dec
jg
into
stos
or
pusha
nop
jge
mov
and
inc
or
push
cmp
xchg
std
je
inc
xchg
mov
cmpsl
xor
add
xchg
loope
daa
cwtl
clc
fisubs
imul
in
loopne
push
or
adc
add
inc
inc
repz
or
call
pop
pusha
test
inc
add
testl
les
data16
ja
adc
xchg
hlt
iret
cmp
push
test
imul
stc
icebp
xchg
ss
xchg
add
fmull
mov
sbb
cmp
jle
bound
test
int
fs
mov
and
mov
repz
dec
dec
movsb
dec
push
test
outsb
fisubs
notb
and
test
and
sub
ret
jl
jbe
rcl
add
aad
int3
push
je
and
fldcw
sarb
fiadds
mov
movsb
mov
pop
xlat
or
lahf
cmpsb
inc
jno
ret
cmpsl
dec
movsb
adc
mov
cmp
jb
test
lret
sbb
aaa
jo
mov
add
push
push
addr16
jae
out
xor
out
xor
lret
shr
fiadds
js
add
out
push
es
test
mov
cmp
push
in
fisubrs
ja
sbb
aad
adc
hlt
dec
imul
into
bound
push
sbb
test
ljmp
rclb
subb
fimull
jnp
xor
pop
xor
jmp
ret
repz
inc
dec
sbb
pop
into
adc
xor
cli
xor
rcr
dec
ljmp
int3
rcr
pusha
out
out
arpl
aas
inc
cmp
jno
xlat
push
sbb
add
scas
push
nop
aaa
sub
cmp
outsl
mov
loopne
test
xor
aaa
lock
adc
jg
ficoml
inc
add
cld
mov
leave
hlt
cs
lea
mov
xor
imul
lahf
jb
jne
pop
xlat
mov
pop
leave
add
mov
out
sysret
jno
and
les
rol
js
sbbb
movsl
aaa
imul
mov
push
out
add
fs
and
or
cmp
cmp
out
pop
sub
xchg
inc
mov
unpckhps
push
fbld
ds
lea
stc
push
or
inc
out
insb
aad
aaa
call
call
loopne
add
in
loop
ja
aas
pop
jl
adc
jge
ljmp
pop
fnsave
jecxz
popf
das
sar
call
cmp
fcompl
out
sub
pop
out
cmp
imul
push
lds
cmp
cmc
mov
out
fldl
add
mov
xchg
fst
in
lea
cltd
lret
jns
lods
test
xlat
out
or
lcall
pushf
inc
cmp
mov
or
add
inc
inc
mov
stos
cmc
dec
xor
xchg
push
add
dec
repz
xchg
adc
gs
push
push
je
sbb
adc
push
fst
sub
sub
or
inc
push
les
add
mov
in
mov
xchg
xor
jbe
das
bound
test
aad
imul
hlt
leave
push
pop
addb
cmp
fisubrs
cmpsb
fdivl
shll
xchg
fidivs
fs
shl
jne
lds
test
out
sub
sbb
cmp
ss
imul
shll
pop
call
pusha
gs
pop
mov
enter
inc
int
mov
imul
repnz
cwtl
adc
xor
pop
cmp
jo
pop
and
cmp
mov
cmp
adc
lcall
cli
mov
dec
mov
cmc
sub
add
mov
push
pop
lcall
arpl
pop
out
inc
push
insl
les
push
pop
das
cmp
jo
scas
add
push
xchg
outsb
jmp
out
incb
fwait
lods
push
scas
daa
push
sbb
dec
mov
mov
jge
loop
inc
hlt
mov
faddp
cmp
ret
les
stos
ja
cmp
push
in
push
jbe
sub
loop
fs
fadds
out
stc
pop
cmpsb
inc
test
test
fwait
jb
mov
jae
std
mov
mov
into
andl
and
lahf
xor
push
les
sub
cwtl
aas
xor
jo
test
sub
div
fldl
dec
sub
std
jne
or
popf
sub
sahf
mov
jb
rclb
adc
jle
lods
ja
or
movsl
xor
addr16
mov
mov
mov
shl
imul
add
enter
dec
inc
nop
out
sbb
pop
cld
fcomps
movsl
lods
jo
in
ret
push
or
push
sbb
mov
or
mov
mov
dec
sbb
dec
fcmovnbe
stos
inc
arpl
ss
or
les
pop
mov
shld
mov
add
ds
sarb
lock
pop
mov
sub
ffree
mov
xor
inc
mov
add
push
insl
addb
cmpsb
mov
sub
cltd
dec
iret
push
and
jnp
fldl
loop
inc
lods
les
mov
xchg
lret
adc
inc
sub
ja
sub
sbb
jne
sahf
je
sub
jmp
jg
ljmp
shll
xor
fwait
clc
lahf
out
fs
bound
dec
adc
test
pop
push
adc
out
cmpsl
aam
lret
cld
inc
lea
lret
jns
xchg
dec
jnp
add
ds
popf
lret
xor
in
add
imul
mov
inc
xor
popw
push
inc
out
popa
mov
push
xchg
in
lret
jns
mov
push
scas
xchg
add
add
inc
cwtl
or
push
insl
in
or
xchg
mov
cmp
sahf
xchg
fsubl
mov
dec
and
mov
jg
insl
ret
ja
add
scas
je
aas
lea
and
insl
icebp
dec
push
xorb
imul
cmp
and
cli
push
xchg
test
mov
iret
repnz
or
mov
jmp
pop
sti
add
mov
sbb
mov
push
add
fidivl
les
mov
jae
repz
sbb
out
hlt
fiadds
fidivl
inc
adc
sub
or
daa
push
push
mov
les
pop
jecxz
mov
dec
dec
adc
lret
mov
xor
mov
inc
fidivrs
inc
popf
rclb
stos
enter
insb
shlb
xor
inc
or
shl
mov
push
push
pop
mov
ja
push
jle
lds
clc
xchg
mov
loope
xchg
iret
pop
popf
pushf
add
push
xor
push
out
ss
dec
and
push
pop
fstps
mov
repz
cmp
xchg
test
in
mov
xchg
ljmp
outsb
inc
inc
or
ss
out
mul
fsubrl
inc
add
mov
fldt
mov
cld
mov
imul
or
sbb
mov
enter
and
loope
push
stos
hlt
adc
mov
cmc
and
lret
jno
loope
lock
adc
or
mov
sub
xchg
out
sub
pop
test
xchg
push
mov
cmp
rorb
sbb
rol
jmp
in
call
out
int
cs
mov
in
pop
and
inc
push
push
dec
sub
pop
mov
iret
mov
push
in
mov
mov
cmpb
sub
fs
int3
adc
mov
std
jb
mov
push
or
insl
push
adc
or
cmpsb
add
jne
repnz
sti
stos
mov
xlat
ret
test
push
insl
mov
sbb
xorl
inc
aas
cmp
scas
aas
mov
in
and
pop
int3
add
inc
stos
loop,pn
ror
push
nop
fwait
or
cmp
js
in
fiaddl
loope
mov
jecxz
fadds
test
and
sub
loope
aas
rcrl
and
enter
pop
rcl
jbe
out
pop
xor
pop
pop
jecxz
pushf
inc
into
xor
test
imul
lea
add
out
hlt
ljmp
scas
lret
jno
test
int3
and
cli
push
jb
xor
push
push
cwtl
add
xchg
mov
stos
push
lcall
and
into
mov
sub
out
repz
or
mov
jecxz
jge
xor
cmc
sbb
outsl
sub
pop
movntps
mov
add
lock
fnsave
mov
subps
testl
mov
dec
xorl
dec
mov
pop
push
mov
cli
gs
ljmp
inc
mov
xchg
sahf
out
sub
in
or
inc
mov
lret
xor
dec
dec
test
and
inc
push
imul
mov
ds
movsl
push
shrb
pop
xchg
cmp
push
cs
loop
rcrl
push
xchg
popa
mov
stc
fists
movsl
inc
cld
icebp
xlat
test
lock
jg
and
or
in
pop
cli
ljmp
lcall
dec
nop
inc
add
addr16
lret
xor
pop
pop
nop
ret
out
sub
mov
push
mov
rolb
push
shlb
mov
iret
nop
cmp
movsb
gs
adc
xorl
sub
jge
mov
sbb
mov
mov
sub
in
adc
mov
push
jae
sub
xchg
std
int3
das
mov
jp
fwait
cli
pop
xchg
pusha
jb
cld
or
jno
mov
aaa
cli
cmp
mov
pusha
jp
imul
out
mov
loope
lds
pop
inc
das
and
cmp
xchg
aas
fimull
push
jnp
pop
dec
push
pop
jb
xchg
popa
and
ss
sbb
loope
pop
movsl
mov
cs
sbb
pop
imul
sbb
repz
notl
fsubrs
imul
in
push
hlt
movsl
mov
mov
inc
mov
jb
add
leave
add
dec
popa
or
test
je
ja
insb
jne
adc
roll
push
jb
in
xor
mov
sub
cltd
cld
jl
adc
sahf
xor
mov
push
add
cmc
inc
xchg
mov
mov
int3
gs
pop
cmp
mov
xchg
ror
fstl
aaa
dec
xchg
add
pop
xchg
pop
jg
sub
cmp
dec
nop
mov
aam
fdivr
int
stc
push
push
subb
mov
sti
dec
loopne
in
ja
cs
xchg
xor
push
inc
jg
push
test
inc
inc
pop
add
pop
mov
xchg
push
push
arpl
popf
ds
sbb
fwait
daa
cmp
cltd
dec
subl
data16
lods
sub
mov
mov
mov
fnstenv
into
out
adc
aam
clc
push
jb
aad
into
add
je
mov
add
inc
aas
stos
jmp
and
jge
mov
jo
aaa
ja
fisttps
ret
mov
je
movsb
lock
xchg
push
bound
push
jb
push
cltd
scas
aam
and
mov
std
sbb
add
xor
in
sbb
push
cli
push
sbb
push
lahf
dec
inc
pop
push
xor
movb
imul
pop
rorl
fucomi
and
test
pop
adc
xchg
xor
fimull
xchg
shlb
add
imul
lret
cmp
iret
add
xor
xchg
movsb
xor
arpl
leave
ss
and
js
ss
sbb
push
mov
sub
aad
rcl
mov
insl
dec
int3
ror
or
movsl
lahf
pop
inc
imul
repnz
std
es
mov
lods
pop
in
or
sub
mov
or
fmuls
and
shrb
xchg
imul
fwait
lds
add
push
jmp
call
lcall
push
dec
inc
push
stos
lock
dec
pop
mov
insl
xchg
insl
pusha
cmp
addr16
mov
iret
stc
xchg
push
push
sub
lahf
pop
outsb
mov
dec
movntps
lods
pop
lea
lret
push
sbb
or
inc
add
push
push
out
pop
cmp
mov
fcompl
ds
add
add
rcl
adc
dec
pop
rcrb
dec
sbb
es
insl
or
popf
cmp
pop
jae
pop
and
cwtl
sub
cs
int3
imul
insb
xchg
call
xor
mov
addr16
xchg
aas
and
mov
or
mov
dec
fadds
gs
inc
vlddqu
adc
les
mov
xchg
ja
cmpsb
push
stos
push
mov
insl
mov
inc
xchg
pop
and
push
mov
cs
ficoms
inc
out
mov
les
test
push
arpl
lcall
clc
and
into
xchg
dec
xor
mov
out
mov
pop
js
xchg
out
jmp
or
roll
jmp
mov
cmc
xchg
testb
ret
mov
and
pop
mov
mov
fwait
xchg
imul
pushf
movsl
push
scas
popf
pop
lods
movsl
aad
sbbl
xchg
inc
pop
lods
aad
or
ret
mov
lods
pusha
arpl
imul
aas
imul
sbb
jo
sub
xlat
test
and
and
test
mov
sahf
js
aad
push
push
and
scas
push
xlat
xor
andb
adc
clc
push
mov
dec
mov
push
pop
and
xchg
ja
mov
mov
fsubl
push
std
add
jbe
push
das
xor
mov
insb
pop
xchg
xor
push
ja
push
mov
std
adcl
sti
bound
cld
push
and
hlt
mov
je
fstp
fstpt
aam
lahf
inc
jmp
test
dec
mov
ret
nopl
in
push
adc
mov
lahf
movsl
pop
lea
sub
jno
fsubrl
out
xor
aas
popa
pop
enter
xor
mov
fcomp
idivl
mov
ja
loopne
stc
xor
add
push
mov
jno
iret
and
and
xlat
mov
mov
cmovg
and
into
xchg
xor
mov
sar
mov
rorb
jno
iret
adc
or
jle
insl
mov
andb
push
das
js
or
sti
jbe
mov
xchg
repz
jge
cli
push
bound
xchg
out
divb
les
mov
or
shlb
cli
jnp
ficomps
fidivrs
push
and
hlt
outsb
mov
mov
cmp
sbb
fwait
push
shl
aas
test
cwtl
mull
mov
sbb
cmp
cmp
add
in
dec
mov
and
and
jle
sahf
psubw
ret
arpl
cmp
aaa
jge
cmp
les
mov
jbe
out
mov
or
shlb
cwtl
sbb
into
xlat
xor
fimull
pop
and
push
sub
lods
xchg
pop
rcr
mov
mov
mov
push
push
mov
fwait
mov
fimuls
pusha
fcom
faddp
and
iret
in
sbb
js
xor
add
xchg
and
jmp
test
ficomps
adc
jno
stc
cmp
mov
dec
aam
test
xor
fs
mov
addl
xlat
inc
lds
insb
ja
jge
ljmp
lods
fisubrl
lahf
cltd
into
in
jno
fcoms
in
icebp
mov
ja
lahf
xchg
adc
jbe
add
rcl
insb
jns
cmp
xor
je
cmp
push
cmpsl
stos
xor
call
mov
loop
jl
mov
add
push
ficomps
pop
fstpt
test
push
sub
jmp
cmpsb
inc
pop
std
bsf
movups
movsl
in
sbb
movsb
int
out
cli
push
jae
divl
mov
jo
lea
sub
or
lods
mov
cmp
fwait
es
xchg
mov
and
xchg
mov
mov
push
inc
enter
jecxz
cmp
addr16
dec
jle
jns
sbb
push
mov
jge
mov
mov
pushf
pop
fwait
out
inc
pop
push
mov
daa
xchg
mov
jo
jno
xchg
sub
sbbl
mov
lea
push
dec
dec
in
cmp
push
push
fadd
fldl
mov
sahf
jne
jo
inc
inc
popa
frstor
fildl
mov
push
shll
or
scas
xor
jle
mov
push
cmp
add
inc
mov
outsb
pop
jbe
xchg
mov
fiadds
xor
fcmovne
sbb
clc
movsl
lods
outsb
sub
lods
les
cwtl
ja
mov
mov
fcomps
out
add
xchg
imulb
mov
add
mov
sarb
rolb
jp
jg
sub
cmp
or
sub
aaa
and
fisubrs
add
mov
jmp
sbb
test
inc
mov
dec
pop
enter
aad
out
adc
stc
stc
stos
add
in
stc
mov
jno
inc
add
mov
adc
push
cwtl
and
lea
and
into
das
adc
inc
jp
int
pop
cs
xor
push
mov
inc
aaa
out
lcall
or
sbb
mov
loopne
push
mov
xor
or
cmpsl
in
push
movsl
push
add
mov
leave
adc
and
popa
adc
adc
les
clc
movsb
in
roll
and
jb
js
push
push
xor
popf
out
mov
xor
loopne
sub
addr16
sbb
lret
arpl
loopne
aad
rcrl
adcl
dec
rcll
inc
std
mov
xchg
inc
lret
fdivrl
outsl
aas
xchg
jl
stos
shlb
sahf
je
sub
test
push
push
addr16
out
jb
hlt
inc
idivl
insl
and
xor
mov
push
mov
popa
out
andb
xchg
pop
enter
fwait
lret
pushf
shll
hlt
mov
scas
xor
ret
sar
rolb
adc
xchg
dec
std
or
rolb
ret
cmpb
div
outsb
sub
fwait
push
aam
bound
jns
fsubr
add
pop
and
orl
xchg
inc
sub
lods
mov
aas
ja
jae
xor
lahf
pusha
xor
jmp
mov
adc
sahf
mov
jns
cmpsl
idivl
mov
cmp
fwait
jmp
push
or
xchg
dec
mov
jle
xlat
lds
adc
repnz
dec
dec
test
jecxz
xor
add
mov
jae
fstpt
dec
insb
cmp
mov
fildll
cwtl
sbb
jbe
mov
dec
mov
popf
sbb
adc
adc
js
out
add
imul
mov
dec
push
fcomps
xlat
leave
call
and
jno
rcrb
ret
sub
iret
xchg
test
lcall
xchg
dec
sbb
data16
sub
sub
push
cmp
jnp
adc
cmp
mov
jge
mov
lock
faddp
les
and
imul
repz
leave
sub
lea
sbb
mov
mov
pop
dec
iret
push
je
add
repnz
popa
fs
imul
into
or
and
stos
xchg
aaa
test
sub
lods
orl
call
jecxz
sbb
mov
pop
fiaddl
mov
mov
cmp
scas
ret
mov
cli
cmp
loopne
lods
mov
push
pop
xor
stos
test
out
dec
mov
cltd
in
fbld
imul
and
jl
xchg
jle
stos
enter
xor
cmc
dec
daa
popa
mov
and
cmc
sub
lods
loopne
jmp
cwtl
test
cwtl
sub
pop
sti
nop
mov
fwait
rol
push
jb
shlb
mov
inc
pop
fimull
sahf
movsb
cmpsl
rcr
sbb
enter
loop
mov
lret
sub
cmpsl
orl
xor
cwtl
inc
push
sub
adc
sub
rcrb
push
sbb
addr16
gs
notb
xor
leave
movsb
mov
push
popa
mov
gs
sbb
add
ljmp
pop
xor
push
in
jl
mov
push
bound
jecxz
fcoml
sub
loope
dec
or
repnz
sbb
pop
sbb
sub
in
stos
test
lcall
repz
sti
pop
cmc
jnp
xchg
movsl
adc
pop
xchg
jo
jbe
mov
adc
lret
mov
lahf
sub
sbb
out
fcomp
rol
adcb
push
jmp
push
dec
mov
nop
jge
and
adc
clc
iret
imul
pop
int3
vpcmpgtd
in
int
xchg
scas
dec
addb
addb
or
or
xchg
adc
xchg
in
call
out
fcompl
faddl
sbb
inc
xchg
cmp
pop
ret
fidivrl
dec
in
in
aad
loopne
outsb
bound
shrl
add
adc
push
mov
ja
dec
rol
push
xor
xchg
pusha
cld
xlat
test
xchg
shrl
pop
push
mov
or
cmpsl
mov
pop
lock
cmpsl
int
out
pop
push
in
filds
dec
push
je
pop
xor
cwtl
push
scas
popf
jge
jne
shlb
mov
sbb
frstor
cmp
sti
hlt
sub
mov
cmpsl
sub
mov
les
mov
std
adc
dec
in
fdivrp
fisttpll
test
jne
gs
repz
jb
or
mov
mov
stos
add
sbb
clc
or
fstl
adc
fwait
push
sbb
nop
out
pop
push
add
sub
pushf
mov
xchg
mov
pop
enter
mov
mov
and
imul
adc
jnp
addl
mov
cmc
ja
rcrb
lea
sbb
pop
ja
xchg
mov
sbb
jl
add
icebp
ds
cmc
shlb
lds
aam
push
inc
addl
sbb
out
mov
sub
das
sub
dec
xchg
mov
jge
or
adc
xchg
add
test
bound
sbb
mov
jle
in
outsl
lds
mov
sub
cmp
jle
jno
pop
je
in
push
and
push
xchg
add
push
mov
adc
mov
mov
stos
shrl
cmp
add
shrl
and
mov
push
mov
adc
xor
push
aas
mov
fwait
les
mov
xor
sbb
int3
push
jb
dec
addr16
arpl
mov
test
jmp
xchg
cmpsl
inc
jge
sub
popf
lods
xorb
insl
pop
jmp
insb
xchg
push
cmp
xlat
adc
push
xchg
xlat
push
mov
loop
or
cmp
pop
popl
nop
pop
test
stos
mov
lods
add
mull
dec
ss
lahf
lea
popa
or
cmp
repz
dec
dec
outsl
add
loopne
adc
dec
jp
std
or
jp
push
mov
nop
cld
lock
int
add
xor
adc
jle
icebp
xchg
sub
inc
std
movl
mov
incl
adc
leave
int
dec
mov
fcomp
repnz
lret
pop
lds
negl
xchg
mov
sbb
add
out
xchg
mov
stc
and
xor
lret
pushf
mov
dec
aas
hlt
fdivl
outsl
mov
popa
mov
xchg
xor
les
inc
xor
sbb
pmulhw
leave
es
cs
jl
fwait
sbb
sbb
dec
loopne
and
xor
je
stc
cwtl
roll
sbb
fwait
push
nop
in
jno
fidivrs
arpl
repz
jno
sub
or
aaa
les
mov
xlat
dec
and
push
inc
inc
stc
sbbb
and
pop
out
arpl
addr16
lret
dec
pop
mov
movsb
mov
sti
mov
push
sbb
stos
cli
js
mov
jg
cmp
fistpl
cltd
mov
imul
adc
or
sbb
mov
pop
add
or
arpl
xchg
push
mov
cmpsl
lods
dec
ja
jne
mov
test
data16
out
fldl
mov
outsl
fbstp
pop
push
mov
adc
in
jp
dec
in
push
rclb
out
lea
sub
mov
test
mov
out
add
or
stos
adc
pushf
sbb
jmp
sbb
jmp
pop
ss
daa
iret
dec
fisubrs
lds
push
sbb
inc
lock
adc
push
call
add
lahf
push
lcall
imul
adc
or
shll
cmp
mov
or
cmpsl
jne
mov
repz
mov
fstpl
xchg
outsb
xor
ret
pop
lret
pop
mov
cmpl
loopne
add
jne
repz
and
sti
mov
pop
movl
out
or
dec
iret
addr16
dec
dec
sub
outsl
xor
inc
sbb
xchg
fsubr
push
sti
inc
xor
cmpsl
mov
leave
loop
mov
sub
scas
fld
sbb
fildl
cmpsb
into
cmp
cmp
push
jecxz
xchg
jo
aaa
repz
fsubl
fcomip
mov
scas
mov
mov
dec
sbb
push
stos
jp
fcompl
mov
dec
jmp
imul
push
add
repnz
dec
mov
popl
sbb
mov
lods
cwtl
out
cmp
roll
jle
shl
sub
adc
add
dec
dec
gs
mov
cmp
fldcw
imul
jbe
xor
dec
nop
lret
rcrb
xchg
lock
mov
scas
cmp
fnstcw
hlt
insb
or
pop
loopne
test
cmpsb
in
loope
mov
xchg
loope
popf
int
orb
dec
int
or
jne
sub
sbbb
cmc
mov
xchg
push
cmp
xchg
jno
jno
movsl
call
arpl
bound
push
je
push
imul
push
sub
test
inc
ds
imull
adc
mov
call
mov
lret
xchg
dec
repz
xchg
pop
js
loop
xchg
out
pusha
lods
push
insb
mov
ret
xor
cmp
es
mov
popa
and
or
in
pop
adc
lods
ss
and
movsl
lret
sbb
xchg
test
test
es
adcb
rcr
or
mov
nop
ljmp
xorb
xor
sub
in
rcl
rcrb
push
enter
inc
and
addr16
pop
cmp
sbb
sbb
mov
cmp
outsl
xchg
or
mov
aaa
es
push
dec
enter
insb
lods
imul
sub
call
mov
sbb
shl
and
lods
es
movl
or
adc
mov
inc
nop
adc
jno
je
dec
push
aam
scas
orl
jno
jecxz
dec
push
adc
and
cmp
sub
int
sbb
adcb
sub
push
iret
xchg
pop
nop
addr16
subl
cwtl
ljmp
inc
xchg
fmuls
out
div
push
iret
add
mulb
xchg
xor
mov
xor
cwtl
insl
jmp
lret
mov
push
loope
pop
mov
aam
nop
xor
pop
and
imul
pop
jb
xchg
lock
mov
stc
cmpsl
bound
test
repz
or
out
xchg
mov
jne
shlb
jae
pinsrw
pop
dec
call
test
orl
mov
pop
ja
pop
enter
movsb
and
lods
mov
pop
add
cmp
fdivr
scas
add
pop
out
fsubl
inc
in
mov
cld
adc
sub
es
inc
mov
into
pop
and
pop
insl
movsl
stc
fisubrl
ja
ss
mov
repz
test
aad
jmp
test
cmp
xchg
aas
push
cwtl
sub
sti
jmp
loopne
xchg
mov
mov
fildll
push
sbb
mov
in
cld
js
stos
fadd
xchg
je
ficompl
xchg
mov
test
adc
sahf
xchg
cmp
sub
jl
push
jns
xchg
ja
pop
stos
mov
les
lea
pop
xor
pop
and
xchg
inc
test
add
dec
jne
rclb
sbbb
mov
xor
je
xor
sbb
lods
xor
add
cmp
repz
pop
mov
mov
out
lcall
xchg
jmp
cmovnp
sub
mull
loope
and
es
dec
shlb
push
scas
xlat
add
push
das
pop
push
xor
cwtl
pop
mov
inc
xchg
hlt
xor
and
sbb
imul
fmul
les
outsb
jns
aas
inc
imul
push
xchg
push
in
es
pop
sbb
push
ffreep
ret
add
add
cwtl
jns
cs
mov
xor
lock
sbb
insb
push
mov
mov
xchg
arpl
push
icebp
fisubrl
mov
nop
xor
push
aaa
mov
rcl
sbb
mov
lea
sbb
pop
push
loop
sub
and
outsl
decb
lcall
fstpt
out
test
and
jle
sbb
outsb
cs
adc
cmpb
adc
xchg
mov
arpl
cli
adc
dec
pop
cmp
loope
mov
bound
push
std
mov
loopne
out
fs
sub
fnstcw
adc
stos
cmp
dec
insl
outsb
jge
shl
sarl
and
popf
inc
in
add
sub
cwtl
jns
add
lods
in
in
push
outsl
ret
nop
fwait
jbe
das
push
cs
repnz
jge
xchg
pop
stos
test
scas
gs
and
xchg
jecxz
lahf
mov
das
xchg
mov
rdpmc
mov
mov
adc
icebp
inc
cmpsb
mov
fdivl
or
pop
adc
sub
ds
jne
add
jecxz
add
enter
pop
mov
jecxz
dec
cmp
inc
cmp
rcrb
push
mov
ficoms
or
aas
add
lahf
push
js
test
sub
call
insl
scas
pop
sbb
xor
mov
gs
fs
pop
cmp
sub
pop
loop
stos
xchg
pop
gs
jp
jb
or
lret
dec
add
jmp
pusha
adc
je
loop
test
sarb
test
test
cmp
rorl
inc
push
shl
cs
sbb
andl
adc
adc
hlt
mov
roll
popa
mov
cmp
jecxz
sbb
cmp
arpl
insb
clc
out
lcall
mov
or
shll
arpl
int
mov
loopne
adc
ret
lret
icebp
mov
dec
xchg
cmpsb
push
cld
xchg
mov
xor
mov
ret
lahf
in
in
in
sbbl
bound
out
outsb
leave
mov
inc
xchg
xlat
mov
or
insb
fldcw
shl
shrl
mov
mov
jp
adc
popf
push
sub
push
adc
fisubs
cmp
inc
mov
inc
cmp
imul
imul
inc
aas
loope
push
scas
mov
int
push
adc
test
aam
xchg
leave
mov
sbb
jbe
and
jg
xor
cmp
or
ljmp
push
pop
je
mov
scas
pop
dec
xchg
in
jne
inc
pop
adc
test
adc
xor
mov
rcrb
add
outsl
in
add
and
pop
xor
mov
xor
jg
push
dec
ljmp
es
mov
add
or
xor
jge
insb
add
cmp
cmp
push
fdivl
cmc
sub
rorl
adc
in
dec
pop
pop
outsl
ret
scas
pop
and
test
push
cmp
jle
sar
lahf
and
in
lret
jle
xor
stos
ss
rclb
add
fists
or
iret
pop
shll
jl
and
sub
shl
sub
dec
pop
mov
in
repnz
xchg
or
aam
mov
mul
sub
nop
pusha
dec
xor
repnz
inc
fcomps
jp
xchg
das
pop
fs
jo
pop
in
cmp
insl
pushf
xchg
dec
or
adc
lods
and
mov
out
mov
or
ret
cltd
ret
out
inc
in
popa
aad
and
cs
xchg
mov
sbb
loopne
jne
jg
sbb
sub
or
xchg
adc
dec
cli
adc
lods
xchg
push
arpl
cmp
inc
jb
icebp
add
mov
pop
test
xor
or
test
sarl
add
imul
test
cwtl
xor
mov
and
test
push
testl
and
movsb
test
mov
jbe
lock
mov
or
enter
ja
lret
ror
mov
mov
clc
xchg
lret
sbb
daa
sarb
mov
pop
outsb
pop
dec
cmp
add
inc
push
cs
xchg
mov
sbb
adc
arpl
test
in
fcompp
jmp
jmp
sub
out
ss
icebp
mov
sub
mov
mov
dec
fstp
inc
xor
ss
pop
jb
push
loop
in
ljmp
pop
fistpl
les
in
xor
push
cmp
adc
xor
cmp
mov
jns
arpl
jae
jne
adc
jge
sub
jnp
mov
push
addb
mov
repnz
adc
int3
cs
fcomps
jle
les
add
out
fdiv
or
inc
jne
cmp
pushf
in
es
notl
shl
mov
jne
or
cli
sub
ret
scas
insb
movsb
cmp
cmp
mov
inc
popa
loope
fwait
xor
add
dec
into
inc
xchg
sti
jge
cwtl
xor
dec
stos
call
cltd
mov
ljmp
pushf
ds
pop
inc
loopne
lcall
cmp
lods
push
out
cmp
pop
dec
mov
movsl
andb
mov
faddl
inc
jge
mov
xor
lea
or
sbb
fdivl
sbb
jno
loop
negl
std
jb
xor
push
jp
or
adc
enter
dec
ret
cltd
movsb
je
stc
dec
jecxz
jne
aaa
mov
push
cmp
imul
inc
das
aam
pop
pop
stos
fwait
rclb
div
pop
mov
add
les
mov
dec
xchg
fs
lods
cmpl
movsb
sar
stos
sbb
mov
mov
stc
lret
sbb
dec
leave
xlat
test
hlt
xor
mov
xchg
mov
out
sahf
or
jecxz
scas
jno
pop
xchg
push
dec
fs
mov
adc
loope
int
mov
xor
daa
cmpb
cld
leave
mov
jb
mov
sahf
imull
std
pop
divl
mov
mov
cmpsb
jbe
fs
pusha
dec
jecxz
jge
lods
sub
fbld
mov
push
push
pop
ljmp
shrl
add
test
aas
in
or
sbb
stos
jl
fildl
push
xor
xor
out
ret
xchg
and
xchg
adc
out
xchg
mov
imul
in
push
faddl
mov
dec
popf
jl
jmp
jae
sbb
add
les
lcall
or
mov
adc
jmp
lret
pop
xchg
xchg
loope
adc
mov
js
mov
cmp
test
notl
mov
cmp
repnz
repz
xchg
jae
inc
lods
mov
push
xor
orl
sub
nop
cmp
pop
mov
ret
dec
add
push
movsl
adc
mov
shll
loop
lods
xlat
mov
out
mov
pushf
jo
and
inc
xlat
mov
test
inc
test
test
mov
inc
xor
loop
push
arpl
mov
mov
std
fwait
push
stos
mov
xchg
mov
cmp
mov
int
pop
push
mov
mov
lcall
mov
mov
inc
insb
mov
pop
mov
jbe
push
pop
inc
stos
add
sub
sub
mov
out
scas
push
xchg
sub
jecxz
inc
sub
dec
out
xor
jo
bnd
or
cmp
stos
mov
int
scas
nop
lock
shrb
sub
xor
mov
dec
daa
lea
pop
and
sub
stc
pop
lret
out
push
aaa
shlb
xor
jno
call
dec
cmp
hlt
jge
mov
xor
je
jbe
outsl
lock
cmc
jl
pop
mov
daa
push
lcall
lahf
fsubs
and
sbb
in
scas
mov
inc
ret
out
clc
xchg
or
out
adcl
stos
push
lods
test
cmp
cmp
in
cmp
push
inc
xchg
enter
push
inc
xchg
imul
in
jmp
test
cmp
imul
xor
inc
popf
test
xchg
mov
int
add
push
sahf
out
xor
mov
adc
iret
mov
adc
mov
push
les
jnp
repnz
inc
sbb
push
fisttpll
cmp
in
mov
scas
mov
js
aad
aas
mov
pop
mov
xchg
popa
pop
add
test
xor
imul
divl
xchg
mov
add
sar
int3
add
jmp
mov
xchg
push
add
mov
cli
push
std
cmp
and
scas
scas
xchg
pop
xchg
fldcw
leave
fists
jbe
ret
sbb
int
add
mov
push
mov
add
inc
jle
add
push
lret
scas
and
dec
bound
ja
mov
dec
mov
adc
mov
and
mov
cmp
inc
rorl
lcall
mov
icebp
mov
pop
inc
mov
push
dec
popa
mov
adcb
sarl
cwtl
mov
push
ja
jle
stc
and
add
js
je
test
sbb
loop
pop
lcall
push
subl
or
push
ljmp
pusha
xchg
notb
xchg
daa
cmpsl
lret
sub
add
push
dec
mov
outsb
push
mov
pop
aaa
inc
sub
adc
rcll
jmp
das
jb
push
shll
hlt
das
lret
sbb
mov
jle
pop
xor
pop
cmp
pop
sub
jp
mov
xchg
stos
inc
sbb
ja
cmp
jle
iret
jecxz
popa
inc
inc
adc
loope
push
test
pop
xchg
ljmp
into
push
pop
test
bound
fisttps
imul
cli
mov
mov
pushf
adc
data16
rcr
sahf
mull
xor
rcr
pop
sub
fs
inc
hlt
cmp
and
xor
jge
mov
xchg
inc
out
push
pop
lods
leave
pushf
xlat
xor
cltd
cld
push
push
outsl
jns
mov
lret
dec
rcrl
in
das
icebp
loopne
push
cmp
adc
jge
cmp
aad
es
mov
lahf
push
stc
lret
jae
push
mov
or
jmp
ds
cmp
std
and
in
add
popa
sbb
adc
push
mov
shl
and
dec
sbb
pop
jns
jb
data16
sub
jne
movsl
pop
push
and
adc
cmp
dec
adc
cmp
push
push
and
lds
inc
pop
jge
pop
adc
fwait
ljmp
cltd
add
bndldx
pop
add
jmp
fdivrp
cltd
mov
testl
inc
add
xchg
in
mov
vscatterqps
ret
mov
out
or
into
add
mov
jno
mov
cmc
mov
cmpsb
pop
fidivrl
aaa
outsl
and
adc
test
cld
dec
xor
pop
pop
ffreep
call
outsl
jnp
and
and
add
pop
movsb
aad
push
lahf
sub
dec
fucomi
xchg
jge
fs
movsl
xlat
inc
sub
xchg
inc
out
xchg
xchg
pop
inc
jecxz
bound
int
outsb
inc
xchg
xchg
sub
jne
adc
popa
cltd
int3
pop
js
xchg
xchg
mov
jle
insl
xlat
pop
fcmovu
pop
in
push
test
dec
and
jp
inc
adc
sub
or
and
lods
add
push
and
ss
sbb
dec
and
jle
xchg
mov
inc
stc
or
out
das
inc
sbb
andl
cmp
sub
aad
mov
sub
mov
push
mov
xchg
xor
and
hlt
arpl
es
iret
xchg
inc
mov
or
mov
stos
jl
lret
dec
and
push
jbe
jne
popa
dec
hlt
mov
xchg
repz
push
test
jle
scas
cltd
shlb
xlat
das
clc
inc
jge
xor
cmp
fs
push
inc
sub
popa
imull
or
in
sbb
and
xor
insb
call
rorb
daa
xor
mov
push
push
stos
jnp
xchg
push
xor
jmp
sub
enter
and
jg
sub
pushf
sbb
push
pop
call
in
cltd
jmp
push
xchg
xor
pop
std
push
cmp
popf
dec
not
aaa
cli
in
xor
imul
inc
xchg
lods
pop
and
mov
or
negl
mov
cmc
cmp
add
push
mov
data16
rcr
jp
or
sub
and
std
fbld
cmp
jp
sub
pop
das
imul
mov
jecxz
sub
mov
movsb
add
sti
cmp
ljmp
shrl
jge
nop
lods
push
pop
daa
pop
filds
push
xchg
lret
pop
scas
js
cs
push
sbb
int
sar
add
xor
sub
mov
ds
cwtl
rcrl
adc
pop
cltd
jbe
in
test
mov
ret
fs
add
push
xlat
ds
push
xchg
mov
xor
adc
loopne
movsl
jl
cmp
cltd
xlat
dec
mov
mov
push
test
loopne
cmp
ficoms
pop
cli
mov
and
popa
ds
xchg
inc
rcll
jecxz
mov
xchg
or
inc
sbb
push
lahf
jae
mov
loope
push
aas
test
in
outsb
dec
in
inc
jge
shrb
popa
rcr
and
mov
pop
mov
jns
add
dec
lretw
xchg
int3
je
pop
push
cmp
dec
xor
lcall
loope
insb
add
ja
daa
mov
bnd
repnz
sarb
in
push
dec
out
xlat
je
or
shld
or
mov
cmpsb
push
test
push
out
aas
pop
jp
sahf
lcall
xor
xor
cmc
mov
push
xor
mov
jnp
addb
dec
leave
jecxz
adc
pop
lcall
fisttps
push
stos
stos
adc
pop
mov
sub
jbe
dec
or
mov
imul
or
test
jb
cmp
arpl
xor
xor
cmp
sbb
js
push
outsb
cli
in
pop
rol
insb
aaa
adc
scas
popf
das
setno
in
arpl
jbe
into
iret
adc
pop
push
pop
repnz
sub
and
outsb
shr
mov
repnz
pop
mov
and
mov
sbb
popf
faddl
incl
adc
push
or
push
add
mov
popf
inc
roll
dec
std
rcr
mov
or
cmc
shll
aaa
cwtl
fisttpl
push
dec
pop
enter
faddl
or
stc
js
outsb
setb
in
pop
lahf
inc
add
ds
sub
lea
int
inc
test
iret
cmpsb
std
adc
out
dec
ljmp
nop
add
adc
add
sub
mov
adc
fidivrs
jno
dec
adc
and
cmp
popf
or
stc
clc
addb
fwait
test
add
leave
jle
xchg
jg
dec
or
lock
dec
cmpsl
test
movsl
imul
cmp
sbb
rorl
enter
lahf
lret
fdivl
pusha
out
xor
ljmp
jne
das
shr
dec
fs
lock
and
cmpsl
and
mov
in
xor
sub
int
xchg
sub
daa
inc
mov
sub
js
push
movsb
rcrl
les
cmp
int
test
ja
or
xor
adc
jg
jecxz
adc
jbe
mov
jmp
mov
pop
xchg
pop
mov
adc
cmp
mov
jecxz
mov
fldl2t
jo
pop
xor
sub
nop
int
jns
lods
jp
jl
lds
xchg
lds
dec
xchg
dec
lea
cltd
sbb
jge
push
jo
cmp
arpl
push
push
ftst
mov
arpl
xor
dec
or
stos
gs
js
adc
movsl
sbb
pop
sbb
push
xorl
and
lret
mov
adc
xchg
iret
les
sbb
ds
adc
sub
adc
xor
dec
test
addr16
cli
popa
divl
xchg
push
stos
loop
clc
or
divl
xchg
dec
xchg
adc
mov
add
push
aad
addr16
mov
xchg
aaa
mov
xchg
mov
lret
or
pop
sub
in
je
inc
adc
inc
jb
lds
jg
mov
push
dec
mov
sub
jno
addl
test
out
shrl
push
or
mov
daa
mov
fs
nop
jmp
mov
mov
sub
movd
mov
bt
jle
or
pop
push
xor
and
pop
lods
bound
jecxz
lahf
jle
push
mov
jge
into
dec
add
les
mov
mov
test
int
pop
mov
mov
les
push
inc
sub
es
push
cmp
push
lea
jecxz
or
loopne
mov
popf
repnz
sub
call
fisttpll
daa
sub
lds
xor
cltd
jp
ret
mov
js
test
out
jecxz
sbb
movsb
cli
and
mov
push
adc
lret
mov
xchg
inc
imul
mov
cmc
push
aaa
cmpsl
ret
xchg
push
adc
pop
sbb
sbb
pop
xor
loop
inc
push
je
jmp
les
inc
push
addl
add
enter
xchg
xchg
mov
mov
and
mov
jge
push
add
mov
mov
cld
jecxz
push
sarb
loope
xorb
repz
into
push
int3
push
push
mov
dec
and
cmc
gs
xchg
dec
cmp
or
cmc
es
adcl
out
xor
xor
sarb
shll
int
jo
lds
notl
insl
mov
pusha
out
sub
pushl
mov
daa
xorl
sub
aad
mov
test
test
and
test
in
mov
mov
stos
inc
testb
jmp
cs
jne
js
sub
mov
xchg
aaa
fldt
push
lods
into
adcb
lret
gs
cmpsl
xor
lahf
push
je
adc
nop
jne
sub
popf
pusha
rcrb
pop
loope
sub
xor
lock
orb
xchg
rcl
out
mov
cmp
and
adc
cmp
mov
or
pop
mov
add
push
jnp
mov
mov
mov
je
inc
push
xchg
mov
popa
adcb
sbb
mov
sbb
sbb
fwait
inc
outsb
xchg
sbb
mov
mov
jbe
push
pop
mov
fsubrs
fsubrs
add
mov
pop
iret
aad
fstps
lds
iret
inc
or
shrl
pop
inc
sub
jle
sub
jl
shl
mulb
dec
pop
ljmp
add
stos
xlat
push
mov
shrd
out
popf
stos
mov
push
cmp
mov
pop
fcompl
mov
dec
repnz
pop
sub
dec
leave
cmp
mov
dec
push
xchg
adc
test
mov
mov
lods
sahf
into
je
clc
mov
iret
jl
imul
test
mov
jmp
pop
inc
add
xor
loopne
mov
test
daa
clc
ja
and
pop
dec
sub
cltd
lock
and
lret
pusha
pusha
flds
xor
and
fs
mov
stc
push
popa
and
mov
push
xchg
mov
leave
pop
orb
jecxz
mov
or
adc
jl
ret
scas
jle
and
out
fucompp
in
test
push
lret
jecxz
mov
adc
mov
push
nop
mov
adc
jge
shll
loope
xchg
cmp
sbb
fidivrs
outsl
xchg
jg
xlat
adc
sahf
mov
mov
pushf
sbb
mov
adc
les
fcomp
pause
xchg
xor
add
mov
loopne
repz
fsubr
sub
xchg
adc
mov
bsr
add
inc
in
shrb
lods
cmp
imul
push
std
xchg
or
fcomi
mov
mov
and
push
dec
xor
jecxz
add
inc
mov
xlat
add
mov
mov
loop
sar
mov
dec
mov
and
pop
inc
into
out
imul
xchg
je
adc
sub
pop
outsl
jns
idivl
mov
inc
push
mov
mov
ret
iret
aad
xchg
jns
lret
syscall
mov
lea
int3
aaa
mov
push
mov
xor
pop
sub
shl
xor
inc
cmp
jg
jmp
fwait
adc
cs
into
addl
jl
movl
jge
and
jmp
pop
adcb
jno
inc
stc
lods
mov
sbb
and
cli
stos
xchg
rorb
mov
xor
jl
out
sti
out
ja
fs
mov
sbb
insb
mov
data16
jne
and
pushf
inc
repnz
sub
cmp
adc
mov
js
pop
sarl
lahf
rcr
dec
lea
into
fnstsw
das
ret
sbb
aad
fisttps
add
add
push
and
jo
loop
mov
mov
cli
ret
lahf
sahf
dec
push
lods
rcr
bound
push
jl
mov
dec
repnz
ljmp
test
fnstcw
lock
dec
sub
mov
push
cwtl
jns
xchg
xor
mov
push
cmp
xor
lcall
test
shll
cli
pop
inc
xor
icebp
lods
lods
lahf
rorl
in
xchg
gs
int3
sbb
push
mov
fdiv
add
inc
aad
xchg
notl
or
xor
lock
or
jp
outsb
fisttpll
test
cmp
pop
push
add
ss
lods
sbb
repz
fwait
adc
mov
jle
xchg
lret
adc
clc
inc
addr16
push
in
jnp
add
call
and
push
or
mov
sub
mov
and
push
xor
push
aad
mov
cmpsb
je
pop
mov
rcll
mov
jnp
lret
jo
outsl
fwait
or
pop
ljmp
lret
xorb
mov
lret
add
leave
movsb
dec
aad
lea
xor
jecxz,pn
das
ss
xchg
sbb
lret
shrl
and
xorl
pop
enter
into
jno
cli
mov
xchg
adc
aam
add
mov
adc
test
jp
or
out
inc
mov
push
or
ret
mov
pop
jb
dec
cmpsb
push
ret
jnp
sbb
outsl
xchg
push
push
out
je
push
daa
mov
inc
insb
js
pop
push
mov
hlt
gs
or
xchg
pop
xor
data16
loope
repz
cli
jp
pop
adc
pop
add
enter
ss
imul
lods
push
cmp
mov
pop
push
inc
mov
enter
repz
add
mov
je
inc
jp
mov
jbe
pop
dec
das
fisubl
cmc
mov
shr
hlt
jnp
aas
cmpsb
dec
repz
icebp
adc
cli
mov
shll
testl
or
movsl
xor
and
xchg
pop
ja
call
dec
std
adc
push
sbb
ds
fwait
pop
stc
popa
push
lea
ror
dec
test
bound
mov
sbb
inc
push
into
dec
addr16
add
jne
arpl
jge
jmp
nop
cmp
pusha
gs
test
add
jecxz
mov
cmp
clc
roll
iret
or
xor
fnstcw
mov
mov
fistpll
lods
insb
fucomi
int3
jb
stos
sbb
xor
adc
je
adc
push
inc
rol
leave
adc
inc
mov
cmp
and
mov
push
dec
xor
mov
pop
or
bound
fbld
nop
ret
movsb
xchg
push
stc
mov
aaa
insl
mov
jp
scas
lret
mov
cmovb
push
mov
ljmp
xlat
and
aaa
sbb
jbe
and
test
push
nop
add
xor
inc
push
lods
inc
test
cld
icebp
xchg
test
cmpsb
and
xor
stos
mov
ret
cwtl
mov
and
mov
push
pushf
sbb
sbb
mov
jmp
dec
int3
jecxz
call
dec
jno
inc
shlb
push
or
mov
pop
mov
adc
out
sbb
jle
xchg
mov
fildll
lret
fs
jge
jle
test
fists
xchg
mov
jmp
cmp
sar
dec
add
push
and
xor
mov
imul
cmp
jecxz
mov
shl
addb
cld
das
pop
push
inc
out
cmp
lea
dec
int
clc
movsb
out
dec
aad
push
lret
loope
into
out
sahf
xorl
xor
adc
mov
pop
idivb
lcall
lods
cli
repnz
out
push
inc
ret
ret
and
rcl
add
push
jbe
filds
xor
lcall
adc
mov
cmp
aas
lock
dec
push
push
sbb
negl
jecxz
fcomip
dec
mov
ds
mov
push
cli
les
lret
push
jl
or
xchg
dec
mov
lds
xchg
pusha
jo
push
lds
fisttpll
ss
sub
lock
loop
dec
sub
mov
lea
lock
aad
cmpsb
xchg
rcrl
mov
pushl
inc
inc
mov
xor
scas
and
dec
inc
mov
jmp
jmp
lock
pushf
adc
lcall
aas
add
nop
pop
or
jo
mov
jmp
rcrb
cld
jns
mov
jg
dec
in
add
cmc
imul
test
and
cld
mov
gs
and
mov
mov
cmp
push
pop
pop
jae
fucomip
mov
shrl
mov
imul
subl
test
aam
dec
popa
mov
sbb
push
pop
test
mov
mul
rorl
push
push
lds
dec
and
and
ret
pop
ja
shrb
mov
mov
inc
movnti
mov
xor
cltd
mov
shll
mov
jne
mov
cld
clc
sahf
jo
jge
lret
imul
mov
aad
mov
pop
sahf
mov
inc
scas
leave
mov
push
mov
dec
pop
xor
mov
js
push
push
add
addr16
je
jg
dec
adc
ficoms
add
push
mov
adcl
and
aaa
pop
pop
les
adc
adc
adc
test
out
adc
push
mov
mov
jnp
xchg
dec
mov
pop
fucomi
and
adc
out
je
int3
and
divl
add
jo
add
dec
dec
enter
les
idivb
loopne
cmpsb
test
lds
lcall
test
aaa
dec
or
ljmp
xor
mov
in
mov
xchg
mov
mov
mov
inc
cmp
aas
test
cmc
test
adc
or
imul
jle
push
loop
pop
je
push
in
ds
pushf
sbb
insl
cltd
push
push
pop
jne
mov
shlb
xor
les
idiv
jge
xor
arpl
mov
push
mov
loopne
inc
fsubl
and
fdivl
cli
jp
xor
sub
add
push
out
aaa
cmpsb
or
add
cs
das
ret
pop
add
or
mov
rorl
push
cmc
jae
nop
sbb
pop
push
cmp
mov
das
jg
loop
in
or
adc
add
or
inc
fwait
mov
leave
aad
and
push
nopl
mov
or
ss
adc
mov
sbb
cmp
fmull
cmp
inc
inc
cs
dec
adc
rclb
popa
repnz
pop
lret
xor
insb
stos
lcall
icebp
cld
mov
std
jg
pop
insl
pop
rol
xor
dec
mov
insb
insl
sub
in
ja
dec
cmp
jg
mov
mov
lock
ja
fwait
push
movsl
lods
dec
jle
je
add
xchg
mov
mov
lds
pop
adc
pop
push
negb
sbbb
outsl
push
xchg
ret
int
and
cmpsl
jp
cmp
je
sbb
inc
cmp
xchg
jnp
call
mov
xor
mov
sahf
pop
outsb
outsl
jle
xor
inc
repnz
pop
bound
mov
cmpsb
fisubl
in
add
xchg
cmp
repz
push
inc
bound
je
sti
js
or
pop
ljmp
outsb
mov
push
int
push
mov
inc
push
ror
out
add
mov
daa
fwait
in
mov
jl
sbb
inc
in
mov
push
jne
testb
cmp
scas
and
das
in
aaa
es
push
or
cmp
sbb
stc
mov
xor
test
dec
leave
out
adc
sbb
movsl
dec
push
fbstp
and
or
movsl
sub
add
push
fcomps
inc
aam
adc
pop
pop
lret
dec
inc
or
pop
lds
jnp
negl
test
jge
jp
push
xlat
sti
push
sti
add
addb
push
movsb
xchg
xchg
inc
mov
es
into
push
mov
jnp
mov
loopne
xchg
xchg
adc
fisubs
xchg
popl
lahf
xor
jbe
add
iret
outsl
push
sub
int
mov
lea
adc
cmp
adc
jmpw
mov
fisubs
dec
inc
or
pop
mov
sbb
lea
adc
shlb
jle
and
movsb
or
mov
push
pop
adc
mov
cltd
or
maskmovq
negl
dec
popf
or
sub
add
std
jns
mov
inc
adc
mov
mov
rcll
or
xchg
lcall
in
pop
dec
mov
in
xlat
leave
in
mov
sub
or
pushf
mov
out
ret
push
lcall
out
call
jg
insb
orb
sbb
arpl
push
in
mov
adc
fdivl
cmpsl
add
cli
xchg
je
mov
mov
and
dec
or
pushf
mov
loope
loopne
cld
repz
sub
test
xor
xor
arpl
sbb
out
inc
push
fsubl
bound
pushf
aad
cmpsl
push
ljmp
push
inc
cli
push
lcall
push
sbb
sub
aaa
jno
loop
loopne
adc
repz
mov
dec
repz
dec
ljmp
hlt
cmp
lods
loop
shrb
mov
lret
sub
xor
sub
jo
fwait
inc
sub
fsubr
lock
or
sub
and
lahf
push
vmread
ret
add
mov
mov
jecxz
or
repz
push
sbb
xchg
add
sub
out
fcomps
sub
mov
cmp
mov
imul
cmp
sbb
push
pop
lods
pushf
xchg
push
xchg
jg
xlat
test
pop
test
mov
adc
mov
arpl
rcr
call
lcall
shlb
and
lods
fistpl
mov
jmp
xlat
int
lret
push
sbb
and
inc
sbb
dec
out
cltd
bound
and
sub
cmp
mov
das
jmp
repz
inc
lds
inc
or
mov
test
and
xlat
push
adc
mov
pop
scas
cmc
mov
mov
fildll
lea
subl
adc
inc
jmp
lret
clc
sbb
add
out
add
test
and
mov
push
jbe
fmul
push
push
ret
xchg
imul
sti
jg
shlb
testl
scas
jge
inc
icebp
jo
and
adc
adc
ljmp
cmp
and
imul
or
add
mov
scas
inc
divb
push
push
jmp
sub
inc
insb
js
test
and
cltd
lcall
xchg
loope
push
clc
sub
es
inc
pop
dec
dec
jl
xlat
sub
filds
call
cmpsb
add
xor
int3
xchg
outsl
movsb
or
xchg
testb
test
movsl
xor
push
mov
adc
leave
fildl
jbe
cs
sub
and
lods
push
subl
scas
sbb
fs
sub
sbb
xchg
sbb
insl
mov
and
mov
mov
push
pop
popa
pop
jp
mov
mov
popa
lods
sbb
add
mov
jae
mov
add
mov
popa
test
fistl
cli
orl
xchg
cs
rorb
xchg
jno
in
mov
add
xor
in
dec
xchg
pop
in
dec
out
jge
loopne
cmpsl
sbb
adc
shll
push
insl
xchg
test
push
pusha
jl
lcall
mov
cmp
push
push
push
dec
push
push
iret
and
flds
rclb
jno
sbb
dec
sub
mov
cmp
test
lods
in
leave
push
gs
jp
push
bound
cmp
jl
aas
inc
push
xor
ljmp
cs
bnd
insb
mov
out
in
sbb
xchg
pop
cmp
cwtl
gs
scas
sarb
inc
mov
cmp
loopne,pn
adc
mov
pop
and
fwait
out
push
fisttps
pushf
inc
cmpsl
and
scas
jle
ljmp
or
xlat
daa
inc
mov
sbb
mov
and
mov
scas
jo
and
jmp
add
mov
xchg
pop
cmpsl
mov
roll
mov
mov
push
pop
or
xchg
pop
jbe
out
cli
loope
jmp
incl
and
mov
dec
pop
pop
lods
divl
std
xchg
jo
fstpl
jno
and
shll
fsubl
jp
jno
insb
adc
lahf
in
mov
pusha
adcl
mov
mov
push
xlat
loope
jbe
loop
jb
add
sbb
in
lret
inc
xorb
sahf
and
test
sahf
loope
stos
dec
aaa
mov
sahf
cmp
in
leave
sbb
loopne
jns
cwtl
jmp
or
xchg
jecxz
and
mov
lods
mov
daa
adc
xchg
inc
mov
cwtl
jbe
sbb
cmp
add
movsb
jo
fwait
and
or
inc
dec
mov
lahf
repnz
push
bound
fstpl
js
bound
repz
xchg
out
movsb
push
aad
push
jb
ret
cmp
popa
sarl
adc
jo
jae
lahf
insb
loop
pusha
icebp
lret
popf
cmpl
test
stos
movsl
popa
mov
sarl
popf
or
xor
in
adc
in
divl
fsubs
nopl
cwtl
pop
mov
enter
rep
xchg
push
nop
popf
dec
jmp
dec
insl
pop
testl
xchg
add
lea
sbb
mov
cmc
mov
call
cmp
in
jge
shlb
out
fisttps
cmpsb
ja
push
mov
fdivs
aad
js
lock
cmp
filds
cwtl
adc
jp
dec
int3
inc
cmpsl
sarb
dec
jmp
mov
inc
jl
fldt
jl
xlat
iret
mov
mov
jge
xor
xchg
lods
sbb
mov
cmp
mov
data16
jbe
push
mov
bound
mov
int3
inc
es
mov
mov
sbbl
sub
mov
add
push
push
decb
in
push
in
and
inc
cwtl
mov
inc
xchg
mov
and
imul
mov
pop
es
mov
into
orl
mov
test
pop
push
orb
jae
lods
sub
jmp
pop
push
ds
dec
cld
xchg
mov
lcall
out
push
popf
push
xor
lahf
rcll
xor
bnd
imull
gs
push
mov
out
xor
pop
in
pop
pop
out
mov
mov
sti
xchg
xchg
or
imul
test
cmp
repz
lea
cmp
cltd
mov
jne
xchg
inc
insl
stos
scas
mov
jg
test
addr16
or
sahf
leave
shl
mull
and
cld
pop
cmp
sub
outsb
jne
cmp
jb
add
xchg
mov
fstp
repz
pop
xchg
nop
popa
outsl
sub
sub
sub
jb
test
shlb
or
subb
ljmp
xor
das
icebp
das
hlt
in
loopne
enter
inc
mov
inc
mov
jns
aas
cmp
fisttpll
cltd
cmp
cmp
pop
adc
dec
data16
outsb
mov
in
mov
cmp
jb
insl
pop
adc
insl
sub
xor
add
xor
or
pushf
push
sub
lcall
xchg
flds
ret
icebp
pop
in
xor
cmp
dec
xor
fcomps
inc
stc
fldl
push
cmpsb
ret
dec
jge
and
pusha
jo
adc
jae
xchg
es
push
sub
scas
lret
mov
sbb
push
jecxz
jl
data16
jecxz
or
insl
call
enter
adcb
jns
pop
sti
mov
xchg
cltd
imull
push
aam
fwait
dec
inc
out
jae
lret
jmp
pop
insl
jb
or
mov
neg
fidivs
cs
push
adc
addr16
add
sti
popf
or
or
dec
ret
rorl
pop
adc
sti
iret
mov
pop
sbb
push
pop
punpckhdq
mov
addr16
dec
mov
pop
gs
out
pop
adc
lds
test
stc
inc
cltd
jns
mov
xor
xchg
scas
and
popf
aad
xchg
inc
mov
pop
das
rcrb
daa
lcall
jp
andl
mov
mov
xchg
sahf
rclb
pop
in
lds
mov
je
outsl
pop
and
pop
add
cmpsb
lahf
pop
pop
push
dec
clc
sub
leave
adc
add
mov
pop
in
cli
repz
cwtl
push
out
in
cmpsb
push
cld
fidivl
fs
sbb
sbb
scas
jb
push
enter
cmp
stos
mov
mov
je
xchg
imul
push
shll
popa
js
icebp
sub
and
or
out
add
sub
push
cs
addr16
mov
pop
dec
loopne
popa
mov
out
sahf
cld
sub
mov
imul
cmpsb
test
jmp
scas
daa
jmp
push
mov
push
sbb
ljmp
aaa
and
cltd
xchg
in
repz
push
mov
repz
testb
sub
outsb
fistl
mov
and
cmpsb
adc
push
xor
sbb
popf
jl
pop
sete
xchg
scas
xor
loop
pop
xchg
cmp
add
xchg
out
mov
aaa
sub
pop
sarl
montmul
cmpsb
add
push
cmp
push
cmpsl
lcall
gs
out
adc
sbb
lcall
pop
loop
daa
pop
rcll
addl
daa
add
into
ja
sbb
push
repz
jge
into
xor
dec
loopne
movsl
add
pop
mov
in
mov
loopne
sub
xchg
mov
pop
adc
xor
pop
bound
push
testb
roll
sub
rcl
push
inc
arpl
pop
aad
or
mov
jecxz
push
xor
je
rcr
inc
mov
dec
sahf
xlat
inc
cmp
int
add
push
mov
jl
lret
xchg
jl
fwait
cwtl
xor
cmpb
inc
test
das
mov
pop
jno
std
sub
pop
in
arpl
movsl
cld
dec
push
icebp
jns
cwtl
insb
into
adc
lret
cmpsb
adc
inc
jecxz
xor
divb
push
sahf
mov
fs
pop
ds
dec
mov
lods
sbb
mov
push
xor
mov
aas
pop
das
xlat
adc
lcall
jg
adc
xorb
and
clc
mov
jno
inc
insl
xor
ja
jo
fwait
cmpl
jo
mov
andb
jmp
addl
xor
pop
sub
mov
and
cmp
out
stc
or
xor
loope
xor
push
repz
or
or
sahf
ds
pop
push
sbb
sub
mov
pop
sti
cmp
add
gs
pop
rolb
stos
mov
push
clc
cmpsl
daa
ljmp
xlat
fbstp
sti
and
test
aaa
in
mov
jp
adc
mov
dec
push
jns
mov
popf
inc
pop
cli
sarl
arpl
xor
jl
ja
sbb
out
repz
sbb
ss
dec
or
in
xor
adc
inc
lret
or
or
gs
adcb
mov
pop
adc
mov
pop
add
or
leave
rclb
inc
mov
hlt
js
movsb
das
inc
mov
jne
xor
mov
mov
xchg
inc
adc
out
aas
mov
xchg
lods
dec
scas
in
sbb
ret
icebp
cwtl
xor
outsb
jmp
cmp
ljmp
pop
inc
repz
adc
test
cmp
push
add
out
daa
mov
lret
adc
xor
in
xor
imul
in
cli
mov
sub
hlt
push
aam
cmp
adc
and
push
push
pop
lds
xor
adc
adc
loope
out
test
data16
xorl
mov
loop
andb
fidivl
stos
dec
enter
inc
jge
loop
xchg
sbb
in
push
int3
jle
les
out
sbb
shufps
cmp
xchg
pop
cmp
iret
cmp
roll
adc
in
or
cltd
popa
loop
cli
and
or
ds
push
push
sbb
ret
fildll
mov
daa
mov
cli
sub
ret
adc
inc
or
stos
fwait
in
xchg
add
cmc
out
fdivs
dec
pop
jmp
fiadds
scas
jle
into
mov
test
mov
lock
sahf
movsl
pop
movsb
pop
jecxz
lret
mov
inc
xchg
scas
loop
cmp
jp
cmp
fcomi
in
aas
xchg
iret
xchg
xlat
fsub
ja
scas
sbb
jae
or
ret
fdivr
lahf
mov
xchg
sahf
mov
out
jl
int
iret
xchg
into
pop
push
fsts
subb
add
xchg
cwtl
add
mov
outsl
jns
maxps
orb
dec
outsb
jmp
jmp
xchg
in
xlat
jnp
xchg
inc
xchg
sahf
aad
popa
mov
ret
popa
adc
sub
pop
push
cmp
mov
jnp
xchg
push
aas
iret
shr
es
adc
popl
fimuls
cltd
lret
out
jge
jo
insb
push
jmp
int3
push
ljmp
test
mov
cmp
sbb
dec
scas
mov
cld
mov
lret
iret
mov
loopne
mov
scas
pusha
mov
lret
insl
mov
cmpsb
fisttpll
stos
cmp
xchg
fdivrl
sahf
gs
lea
je
sub
jo
mov
cmc
cwtl
lret
stc
push
clc
lds
jne
lods
push
out
fsubrs
sbb
decb
out
dec
cwtl
dec
mov
push
push
mov
adc
ret
mov
shlb
int
std
xor
sub
repz
sbbl
int3
loopne
xchg
xor
imul
lret
inc
insl
nop
push
repz
jbe
push
or
cwtl
bound
xchg
pop
push
call
jmp
pop
fcoms
lcall
jb
pop
insl
sbb
xlat
mov
sbb
inc
cltd
adc
jnp
shll
das
or
mov
shrb
dec
jne
movb
lea
dec
cmp
cwtl
int3
fstpl
sub
inc
loope
mov
das
inc
leave
ficoms
fucompp
cmp
movsb
jne
xor
and
sbb
push
jge
cmc
ja
movsl
addr16
out
ret
xchg
xorb
pop
lret
shll
xlat
fbstp
jle
fisttps
inc
fucomi
je
imul
push
jnp
pushf
cltd
addr16
filds
push
sarb
xchg
lods
add
andb
inc
out
jns
push
dec
imul
mov
les
test
int3
and
jmp
lock
and
mov
cmp
test
and
inc
nop
mov
loopne
xorb
in
pop
call
mov
pop
cld
clc
js
repz
mov
cmpl
pushf
jmp
fsubrp
jge
lods
sbb
cmp
ja
dec
ds
out
xor
mov
xor
lock
daa
push
sub
inc
shlb
pop
and
sbb
aas
cmp
push
enter
popf
mov
or
arpl
sub
pop
and
or
mov
mov
cltd
mov
ds
cmp
ret
ret
fs
rorl
or
mov
aad
fsubrs
pop
fcmovne
lret
cs
in
push
adc
xor
and
pop
xchg
mov
ret
inc
les
push
xchg
stc
shll
push
xchg
push
mov
jmp
push
sahf
pop
out
imul
pusha
adc
arpl
cmp
cmc
testl
or
lea
cld
cli
movsb
clc
add
ljmp
or
inc
out
cmp
xchg
in
cmp
imul
inc
shll
xchg
mov
add
inc
mov
lea
je
inc
inc
popf
and
xor
xchg
add
bound
push
mov
dec
and
pop
outsl
push
push
cltd
pop
ja
dec
lea
cmp
jno
adcl
loope
mov
sub
imul
ss
push
in
pop
xchg
mov
fwait
aas
inc
cmp
rcl
jno
or
push
inc
repz
mov
movsl
mov
mov
les
js
les
imulb
aas
arpl
enter
jg
jbe
ja
fs
xor
inc
fcompl
sbb
ds
ljmp
sub
nop
testb
and
shlb
or
pop
mov
ljmp
and
inc
and
shll
mov
lret
lret
ljmp
pop
fdivl
mov
add
cmc
cltd
inc
or
xchg
aam
xchg
inc
pop
push
pop
addl
mov
aad
pop
decb
xchg
in
jle
fwait
rolb
xchg
out
xchg
in
sahf
push
loope
orb
ret
mov
push
cmpsl
xchg
cmpl
aam
out
sti
mov
loop
pushf
data16
and
stos
inc
ficoml
fists
mov
outsl
lds
leave
outsb
out
mov
ficomps
cmp
xor
pop
dec
pop
add
pop
ss
idivb
add
out
arpl
pop
ret
loop
fwait
sub
mov
and
shrl
mov
sub
cmpb
repz
pushf
inc
insb
repnz
and
jne
pop
idiv
xchg
mov
divb
push
mov
push
inc
push
dec
hlt
pop
repz
or
inc
stos
jno
fst
insl
add
imul
daa
cmp
fnsave
dec
pop
mov
adc
loopne
mov
ret
iret
mov
sub
sbb
jo
iret
dec
popa
sub
add
out
sub
mov
adc
loop
adc
mov
insl
ss
or
in
inc
shlb
adc
aad
mov
push
fadds
mov
sub
je
outsl
aam
xlat
add
and
imul
jo
sbb
dec
sbb
or
stos
or
test
mov
dec
pop
adc
dec
movsl
lret
insl
ljmp
lret
cmpsb
cltd
int
mov
xor
rcll
pop
testl
sbb
lret
xorb
fsubr
shrl
push
inc
iret
shl
repz
xchg
pop
jl
add
into
call
dec
imul
cmp
sbb
fcompl
sub
sbb
jne
inc
jo
adc
out
or
std
in
xor
fisttpl
mov
xchg
add
gs
push
out
aaa
insl
int
sbb
iret
xchg
inc
push
aad
pop
sbb
daa
inc
jbe
inc
inc
push
setno
mov
fstpl
out
cmp
mov
jge
rclb
lock
jne
sub
add
add
call
or
loop
or
mulb
pop
sbb
jge
push
sub
es
jecxz
and
or
adc
leave
xchg
push
andl
pop
xlat
popf
cmp
ficoml
in
test
jae
adc
scas
es
mov
leave
cmpl
mov
decl
xor
or
je
or
mov
xchg
jb
jecxz
or
xchg
lcall
and
jb
sbb
notb
pop
xchg
xchg
ret
nop
xor
dec
xor
adc
or
lock
ss
data16
mov
or
pop
mov
in
adc
and
fldt
js
push
push
adc
xor
sbb
test
mov
dec
inc
sub
shl
mov
xchg
mov
call
jbe
in
jle
cmpsb
cmpsl
fs
mov
imulb
out
inc
scas
aam
jae
cmp
repnz
std
xchg
fsub
insl
mov
and
mov
jno
adc
push
mov
test
fbld
push
into
aaa
daa
notb
xor
ret
push
mov
stos
bound
ljmp
pop
pop
or
das
aad
jge
sti
cmc
jnp
and
insb
movsb
mov
sbb
push
cmpsl
inc
pop
imul
push
push
pop
inc
xor
sbb
fwait
mov
mov
fdivrs
fmuls
jmp
sub
divb
dec
and
fcomp
mov
jnp
jecxz
fimuls
and
stos
pmulhw
inc
in
sbb
sub
jns
stos
lea
mov
fcmovnu
cmp
jg
or
in
std
dec
popf
mov
add
mov
inc
mov
outsb
and
jbe
sahf
cmpsb
xchg
outsl
popa
jns
out
add
pop
xchg
xor
out
sti
push
mov
dec
pop
push
fsubrl
shrl
push
sarb
lods
int
rol
movb
cmp
or
dec
push
xchg
inc
shrl
je
pop
adc
jle
test
enter
nop
pop
aas
push
sbb
mov
mov
je
dec
xlat
outsb
cmc
jge
fildll
bound
xor
inc
ficoml
iret
pop
xchg
rolb
in
repnz
in
out
mov
pop
add
mov
dec
pop
cltd
mov
mov
inc
mov
js
movsb
outsl
scas
test
mov
xchg
in
mov
out
adc
push
nop
inc
inc
ss
icebp
addb
xlat
sti
and
mov
repnz
clc
fidivl
rclb
lods
nop
mov
clc
xor
adc
xlat
sahf
mov
or
icebp
fildll
lret
dec
fmull
xchg
dec
cltd
push
cwtl
push
mov
xor
xlat
push
xchg
imul
loopne
xor
dec
js
mov
xor
sbb
add
jl
sub
sbb
cli
inc
fwait
dec
adc
xchg
jmp
mov
lahf
je
dec
mov
out
sub
in
shrb
jae
ss
aad
inc
std
sbb
sbb
gs
push
and
xchg
mul
sbbl
int3
sub
pushf
inc
mov
cmp
sbb
xor
pop
cmp
xchg
adc
pushf
push
fisttpll
mov
lock
clc
in
pushf
aam
stos
das
jbe
or
mov
xor
mov
cld
mov
repz
xchg
xchg
test
jo
xor
mov
inc
call
mov
dec
xchg
cli
in
divb
pop
lahf
or
jle
enter
das
addr16
jnp
adc
rcrl
push
sbb
stc
gs
cmc
xlat
mov
adc
test
lods
pop
and
and
or
in
add
jnp
xchg
xchg
mov
sbb
mov
adc
pop
adc
sbb
test
or
and
dec
and
iret
and
cmp
push
enter
in
cmp
add
mov
inc
es
fcmovnbe
lret
ljmp
push
out
jns
nop
xchg
lock
push
jo
cmp
out
stc
xor
adc
mov
sbb
in
ret
popa
fmuls
lods
inc
es
mov
daa
cmc
xchg
dec
mov
xor
mov
data16
stos
cltd
fsubrs
mov
jp
test
jl
adc
jnp
mov
popa
pop
push
rcrl
add
adc
inc
leave
dec
subb
push
xor
lahf
in
adc
inc
stos
xchg
or
jne
and
push
xchg
mov
push
add
test
fnstenv
xor
and
push
aaa
and
add
adc
lds
inc
fbld
lret
xchg
mov
mov
out
dec
and
syscall
xor
pop
rcpps
inc
aas
leave
adc
ror
incb
push
into
sahf
sbb
push
repnz
sub
adc
mov
in
stos
stos
add
xchg
mov
pop
mov
daa
mov
dec
out
push
sub
pop
sbb
jle
stos
push
mov
xchg
xor
test
dec
push
cmp
not
mov
inc
loop
mov
push
paddsb
pushl
jns
push
mov
xchg
shlb
adc
add
xchg
aam
adc
ror
aaa
stc
adc
out
insl
fidivrl
out
mov
cli
daa
push
fisubs
cmp
stc
stc
adcb
scas
in
jl
stos
in
add
push
into
mov
and
fs
clc
add
lret
or
cmc
fsubrp
cmp
mov
sub
or
jo
adc
pop
or
cwtl
pop
in
pop
das
sub
out
xor
hlt
sbb
stos
sbb
sub
aam
subb
lds
jmp
adc
div
cli
lods
dec
pop
stos
addr16
cmpsl
adc
addr16
mov
mov
cmc
and
rcrl
jmp
push
aad
in
std
xlat
es
jecxz
jmp
fisubrl
mov
cs
js
ret
addr16
dec
in
in
bound
outsb
xchg
sbbb
push
sarb
lock
aad
gs
cwtl
jne
jns
movsl
sbb
popa
jecxz
in
adc
ja
lock
das
sbb
xchg
les
jo
out
mov
lret
idivl
popf
and
push
cmp
pop
xor
sbb
mul
insb
sarb
test
inc
inc
push
xor
cmpsb
add
mov
mov
xor
rcll
data16
xchg
icebp
xchg
xchg
push
mov
rcrb
adc
fsubs
cmovne
mov
push
incb
imul
xchg
out
adcl
jbe
mov
mov
aaa
mov
inc
lcall
fmull
and
lcall
add
stc
ret
movsl
mov
push
js
mull
mov
mov
sbb
jae
subl
cmp
ret
iret
dec
cmpsl
inc
fs
push
xchg
push
pop
imul
inc
scas
lods
out
lea
mov
mov
push
negl
mov
mov
pusha
push
mov
insl
out
pop
jg
es
mov
aas
xchg
test
sbb
adc
in
mov
pop
fwait
inc
addr16
out
pop
les
dec
inc
mov
xchg
das
clc
mov
and
inc
sub
jle
ja
push
daa
lods
sbb
outsl
cs
cld
mov
xchg
clc
adc
mov
data16
lods
xchg
lods
aas
mov
mov
aam
jmp
insb
pop
sahf
stos
std
dec
mov
js
aas
fcoms
xchg
mov
xor
xchg
cs
ljmp
and
bound
mov
add
daa
mov
sbb
pop
clc
das
ret
xchg
push
scas
mov
cmp
or
lcall
or
lea
add
imul
daa
loope
cmp
cmp
mov
mov
aaa
lret
xchg
pop
test
and
movl
mov
jns
insl
mov
inc
mov
test
mov
adc
dec
cmp
mov
jnp
int3
cld
lahf
subb
cwtl
leave
test
inc
out
pop
subb
mov
xlat
hlt
cs
enter
mov
test
sub
neg
fisubs
adc
and
sahf
repnz
repnz
js
adc
sbb
outsl
xor
ret
or
arpl
jp
movsl
jecxz
xchg
mov
mov
aas
xchg
pop
test
jbe
jno
imul
and
xchg
das
fidivrl
xor
adc
mov
or
push
mov
push
cs
stos
into
push
add
popf
insl
lret
jo
je
cmc
lods
fistpll
fdivrp
ljmp
in
out
std
js
xchg
jmp
push
jl
and
insb
cmp
stc
mov
sbb
xchg
dec
fsubl
jno
stos
test
icebp
mov
imul
sarl
int
push
fidivs
push
hlt
mov
fwait
push
imul
cmc
xchg
mov
pop
push
fildl
push
cwtl
pop
mov
push
lret
xor
fldl
imul
addb
loope
enter
and
pop
dec
mov
cmp
inc
and
mov
xchg
xchg
out
fbstp
imul
enter
mov
lods
lods
ficomps
jecxz
aas
lahf
popf
arpl
sbb
mov
fs
and
inc
outsb
push
or
jno
cmp
xchg
sub
mov
sti
leave
cmpb
aam
jg
ret
push
sub
mov
lret
sbb
mov
mov
scas
cltd
bnd
imul
movsl
jge
xchg
pop
cltd
cmpb
mov
xchg
int3
outsb
mov
mov
loope
adc
sbbb
out
mov
push
push
sbb
dec
mov
ret
dec
lret
enter
xor
mov
out
sub
adc
loope
push
aas
push
je
and
dec
xchg
xchg
dec
and
inc
icebp
mov
cli
mov
sub
pcmpeqw
lods
nop
nop
mov
lods
sti
clc
mov
cld
push
sarl
icebp
ret
dec
cmp
xor
push
test
jp
ds
addb
or
pop
movsl
scas
arpl
cld
pop
out
push
es
pop
jp
inc
and
sub
pushf
dec
or
cmpsl
sahf
pop
ret
mov
enter
imulb
xchg
jnp
imul
lea
cmp
pop
cmp
sti
mov
sarl
xor
imul
mov
mov
mov
lods
ds
mov
fists
pop
jno
pusha
fmul
xlat
les
jns
jne
jnp
call
fldenv
movsl
lret
out
mov
and
insl
call
dec
xor
dec
je
pop
loopne
test
test
rcll
call
mov
aam
push
ret
call
sbbb
cmp
xchg
mov
int
jnp
stos
add
out
nop
push
jno
mov
sub
imul
out
inc
cmp
mov
int3
cmp
jbe
pop
lret
insb
mov
icebp
lea
push
add
jne
mov
mov
mov
lds
inc
or
test
movsb
loop
jg
lods
sub
xor
into
sbb
mov
push
cltd
cltd
out
jno
in
jo
jno
mov
das
sub
or
addr16
and
xchg
pusha
or
fsubl
mov
add
fnstcw
pop
in
addb
test
mov
imul
sbbl
pop
mov
mov
inc
pop
in
mov
leave
push
stc
xchg
pop
jecxz
roll
test
inc
inc
clc
and
shlb
mov
fimull
stos
outsb
test
je
inc
popf
pop
mov
fsub
nop
mov
aad
ret
push
mov
negl
cmp
mov
addr16
in
push
mov
dec
aad
jp
lret
push
dec
mov
and
hlt
insl
dec
movl
mov
sub
dec
test
cltd
sub
fisttps
outsb
adc
dec
adc
repz
or
ret
lahf
js
lods
mov
xchg
push
fwait
in
or
and
ss
add
imul
les
sub
jecxz
mov
push
repnz
lods
stos
fwait
xchg
jge
addr16
dec
push
fisubrl
mov
daa
pop
in
jns
cmp
sub
stc
out
jg
outsl
insb
iret
scas
neg
enter
mov
or
jnp
sbb
fcoml
fcomi
sub
int3
fcoml
mov
out
cmp
in
mov
mov
fiadds
inc
cli
jmp
sub
and
scas
dec
fisttps
add
fiadds
cmp
jnp
and
test
sbb
or
inc
sbbb
aas
sti
mov
dec
jb
push
aas
pop
push
cmp
pop
leave
stos
and
adc
leave
sub
xor
inc
dec
mov
stos
pop
pusha
jne
cmpsl
shll
pop
fstpt
mov
pop
push
inc
cld
xor
cltd
push
xor
push
popf
inc
add
xor
mov
cmp
insl
imul
inc
stc
or
pusha
aas
int3
data16
cmp
push
aam
sbb
pop
ret
out
and
jmp
es
dec
or
int3
jnp
or
add
sbb
es
in
add
jg
sub
ds
add
inc
call
xchg
aaa
outsl
and
adc
fmull
ljmp
pop
push
mov
xchg
test
mov
sub
arpl
pop
test
mov
jbe
sub
dec
sub
push
in
test
mov
shll
leave
test
push
mov
fcmovu
cs
add
push
jmp
xor
mov
cli
dec
jmp
mov
mov
xchg
dec
arpl
fdivs
sub
or
shll
jl
push
test
and
xchg
jb
mov
cmp
repnz
mov
loop
mov
jae
shll
mov
push
gs
and
push
movsb
into
xor
insb
mov
lcall
lea
xchg
ret
pop
push
ret
ret
jg
and
xchg
sti
jnp
cwtl
dec
xchg
decl
xchg
inc
xor
mov
pop
cmp
pop
mov
jle
sub
cmpsb
mov
inc
aam
cmp
mov
jbe
inc
pop
aad
out
dec
fadd
test
sbb
aam
sub
movsl
lcall
jmp
cwtl
orl
cmp
push
int
insl
frstor
sbb
mov
test
or
mov
orb
cmc
jge
shl
rorb
or
sub
repz
fwait
inc
lret
orl
lea
ret
sub
push
out
dec
in
push
aam
fdivl
mov
xchg
iret
mov
xchg
cmp
andl
cmp
notb
mov
cltd
int3
pusha
fwait
sub
rclb
call
rcrb
rorl
dec
ret
rorl
in
jne
lret
test
or
sbb
pusha
decl
js
and
sbb
pushf
ds
mov
fadds
jnp
sbbb
lds
jp
inc
in
mov
dec
daa
fidivrl
ja
aas
cmp
pop
ror
jae
imul
adc
scas
repz
jl
inc
cld
cwtd
xor
ja
or
lods
sub
jg
fmul
bound
xorb
inc
enter
cld
xchg
push
daa
or
xor
std
inc
xor
sbb
cltd
rcrl
xadd
lds
jo
outsb
inc
cmp
mov
loope
and
xor
lock
rorb
lods
fimull
mov
sbb
mov
lea
out
jne
rclb
paddd
in
and
int3
out
call
push
rol
shlb
dec
in
test
xor
enter
add
mov
add
dec
mov
or
adc
decb
add
push
sub
int3
and
dec
inc
or
jno
xchg
enter
cmpb
outsb
xor
xor
aas
pushf
xor
dec
outsl
mov
jg
push
xchg
dec
cmp
jne
fs
mov
out
add
popf
pcmpeqd
dec
inc
or
mov
neg
dec
adc
rcll
rorb
mov
test
sub
flds
mov
lds
roll
dec
pop
imul
xor
sub
test
idivl
and
pop
dec
jae
test
fs
adcb
nop
xchg
push
fdivrl
ret
xchg
das
dec
mov
and
mov
andl
pusha
pop
push
mov
ss
adc
pushf
inc
fsubrs
mov
daa
jbe
mov
sub
push
sub
jae
inc
push
insb
pop
xchg
daa
push
mov
cltd
sbb
jl
mov
hlt
es
jae
sub
jo
bound
jo
cmp
out
lret
fstpt
jno
xorb
cli
test
nop
iret
xchg
pushf
gs
sbb
pop
mov
ja
test
xchg
xchg
sbb
ss
pop
adc
jbe
pop
shlb
scas
movsb
xchg
inc
stos
ret
sub
mov
lods
scas
or
ficompl
cmpsl
push
lret
sub
repnz
out
cmp
push
mov
xchg
push
repz
adc
in
xchg
push
movsb
and
int
push
out
cs
jne
and
jg
push
pop
adc
out
add
lods
sarb
mov
insl
push
pop
movntps
sahf
fisubs
pop
lea
imul
inc
loope
or
push
lds
mov
sbb
and
adc
or
repnz
mov
jecxz
lds
out
shll
sbb
dec
add
dec
call
loop
xor
xchg
push
mov
ds
push
cwtl
mov
jno
push
jae
mov
push
popa
inc
lret
mov
lds
and
add
insb
je
sbb
cli
cmp
add
loopne
in
enter
aad
mov
cmpsb
pop
inc
outsb
fimull
enter
push
mov
jl
and
clc
cmp
and
adc
adc
std
inc
adcl
mov
xor
test
lret
popa
loope
roll
cmp
mov
push
repnz
shrl
jmp
cwtl
mov
bound
add
mov
insb
in
dec
push
lret
mov
icebp
adc
std
insb
mov
jns
fists
pop
jge
clc
aam
add
mov
imul
add
cmp
sbb
jno
cmpsb
mov
adc
pop
loopne
jmp
insb
push
lods
xchg
mov
lds
data16
popa
shll
jnp
sbb
push
mov
xor
lahf
lret
sub
xlat
fildl
and
jbe
jo
mov
mov
test
inc
es
test
add
repnz
lcall
and
insb
adcl
push
xchg
or
lcall
xor
ret
xchg
mov
stc
cmp
in
xchg
into
xchg
stc
mov
cltd
icebp
js
dec
loopne
cmpsl
aam
imul
test
adc
sub
xchg
outsb
out
jnp
xor
mov
inc
out
mov
jo
test
lods
push
push
lcall
dec
xor
xchg
xor
test
scas
mov
fidivl
sahf
add
jne
gs
adc
movsl
jmp
js
xchg
push
fists
xchg
push
or
inc
mov
sbb
cs
mov
pusha
out
sbb
fcomp
cwtl
in
add
ud2
push
xor
mov
les
jmp
mov
testb
mov
cmp
aas
aad
scas
std
mov
xchg
mov
repz
push
and
push
push
push
orb
in
or
push
jnp
cmpsb
xchg
xchg
ror
in
inc
or
xor
cs
dec
pushf
into
xor
inc
xchg
xlat
and
and
or
lods
push
enter
int
imul
cmp
lea
aas
or
popa
mov
xorb
mov
pop
jecxz
scas
hlt
inc
out
push
adc
cmp
xchg
sub
stc
xchg
fsubrs
cmp
and
sbb
xor
mov
adc
popf
aam
mov
dec
aas
js
cmp
lods
push
or
pop
mov
mov
sbb
xchg
jl
int3
inc
and
int3
test
in
notb
pop
sub
iret
imul
inc
inc
bswap
sbb
shr
jne
movsw
stos
out
call
fistpll
mov
jno
addr16
cmpsl
xchg
ds
xor
inc
outsb
hlt
fmull
aam
cmp
mov
scas
push
inc
movsl
bnd
xor
cmc
enter
rcll
dec
clc
iret
sub
push
int
popa
addr16
imul
pop
xchg
pop
scas
add
jmp
sub
je
ret
add
in
add
xor
add
cmp
dec
mov
jno
clc
inc
mov
clc
imul
xchg
or
jbe
jb
sti
lahf
xor
pusha
into
insb
mov
adc
je
shll
xchg
push
xor
dec
leave
fistps
or
and
dec
lock
rolb
xorl
mov
cs
sbb
stos
lods
push
mov
das
push
cmc
xchg
frstor
push
div
ds
ss
jp
mov
stc
dec
aam
mov
mov
push
loope
add
xchg
fldl
or
pop
fucomi
dec
cmc
adc
mov
push
jmp
or
pusha
popf
inc
mov
cmpb
push
icebp
jnp
pop
pop
xchg
stos
pop
mov
add
jmp
mov
xor
lea
dec
rol
repnz
and
xchg
daa
dec
cmp
adc
cmpsb
divb
mov
dec
pusha
sub
xor
out
inc
dec
fcompl
lahf
sub
cmp
cmp
ss
std
and
mov
xor
add
inc
sbb
or
jne
dec
xchg
adc
pop
cmp
mov
adc
lea
inc
jno
je
lds
cmpsb
push
pop
test
js
es
cltd
sub
jecxz
cld
mov
int3
out
pop
add
add
mov
and
in
add
add
push
clc
xchg
nop
imul
test
jae
push
pushf
stc
insb
repz
test
xor
push
xor
and
adc
dec
and
pop
stc
gs
hlt
xor
leave
aas
andl
insl
outsl
and
dec
dec
dec
cmp
cmc
pop
push
dec
mov
adc
cmp
sbb
hlt
jecxz
testb
xchg
cmpsl
mov
mov
cld
aam
mov
aam
and
add
out
xor
sbb
push
into
sub
mov
test
fdivrl
add
xor
xchg
adc
pop
shl
ret
repnz
push
icebp
add
pop
vsubps
das
jecxz
or
ds
pop
decb
cmp
jno
inc
pop
outsl
jle
xchg
jg
inc
push
sbb
jo
xchg
sbb
and
adc
ret
inc
fs
loop
sbb
sbb
fistpl
adc
je
mov
xchg
insb
out
dec
xchg
fxsave
jge
add
push
xor
ja
pop
xor
add
inc
sbb
inc
sbb
test
add
dec
mov
push
adc
insb
ja
shrl
xchg
loope
xchg
sub
loop
xor
add
or
sub
push
jbe
push
movsl
fs
daa
jb
cld
cmp
in
mov
enter
mov
shr
pop
jne
mov
sahf
xchg
in
jns
or
mov
add
jle
xchg
sub
xor
cmp
mov
aad
inc
in
push
mov
enter
andl
and
cmp
and
addr16
lock
adc
mov
jbe
jmp
pop
mov
movsb
out
cmpsb
cmp
and
icebp
lods
push
rcl
mov
aaa
cli
out
mov
popf
xor
icebp
mov
lahf
xchg
ret
ret
or
sarl
fwait
imul
subb
push
xor
add
sbb
adc
stos
test
pushf
sub
mov
in
or
inc
aaa
sbb
aas
inc
inc
jmp
leave
aad
lods
out
xor
test
pop
xor
insb
outsb
mov
gs
jg
out
outsb
mov
int3
repnz
mov
mov
jb
testb
jp
loope
add
jnp
insb
sti
push
jge
jecxz
and
mov
test
inc
int
pop
add
popf
test
cmp
aaa
insl
sahf
aam
imul
out
test
aaa
imul
pop
test
pop
jmp
pop
mov
in
jb
shrl
push
jne
stos
or
or
stc
dec
jmp
js
rorb
stos
pusha
fcoml
test
loop
mov
push
loope
adc
ds
movsb
mov
cltd
add
loope
mov
xchg
mov
int3
das
push
cmpsb
mov
pop
mov
repz
inc
or
cld
pop
xchg
cmp
out
pop
enter
ret
and
not
cmc
and
xor
jne
bound
xor
js
ja
repnz
adc
aas
push
in
pushaw
lahf
jnp
lods
pop
rcrl
pop
mov
popa
pop
lods
int
add
sbb
jp
ja
int3
sub
clts
stos
popa
or
inc
push
dec
pop
xor
hlt
cli
rcrb
inc
movsb
pop
xchg
int3
jl
popa
nop
aaa
imulb
adc
add
fcmovne
cmp
xchg
xchg
fistps
add
cli
loop
jns
imul
cltd
pushl
mov
stos
or
add
loop
sub
add
in
insl
mov
rol
mov
adc
fs
mov
ss
inc
mov
adc
push
pop
adc
cmp
sub
cmp
test
mov
in
test
das
in
push
leave
daa
repnz
cmp
adc
sti
push
fs
addb
adc
aad
xchg
sub
loop
dec
xor
pusha
in
dec
sub
push
imul
call
mov
sbb
inc
add
in
xchg
mov
pop
das
add
rcrl
aas
mov
sarb
add
repz
mov
or
jmp
jns
decb
jmp
jae
jne
mov
scas
fidivrl
mov
push
mov
add
jmp
dec
sub
cmc
xchg
or
push
imul
sbbl
cltd
cmp
mov
shl
test
mov
subl
or
jmp
adc
stos
pop
sbb
xor
in
fwait
sbb
pop
outsl
cltd
lret
in
jbe
dec
mov
xchg
lods
add
sbbl
push
cmpsl
dec
ret
add
mov
xor
sub
pop
jp
inc
rclb
or
lds
xlat
mov
adc
mov
cmp
cltd
js
stc
repz
arpl
xchg
rolb
aas
aaa
mov
sub
sub
pusha
insb
inc
mov
jo
data16
lcall
lock
mov
xchg
jnp
addr16
inc
jp
xor
das
dec
add
mov
sbb
mov
scas
mov
mov
pushf
cld
sti
std
push
js
cmpsb
mov
stos
mov
iret
mov
out
and
in
popf
push
mov
jmp
rorl
sbb
jmp
mov
pop
sti
ficoml
ljmp
inc
mov
push
cmc
das
jp
insb
std
dec
aad
fwait
pop
xor
jb
daa
pop
xchg
xchg
je
movb
test
xchg
repnz
xchg
sbb
out
test
ds
cmp
in
pop
mov
xchg
cltd
test
jmp
adc
jg
rorb
movsl
lret
mov
outsl
inc
insb
add
clc
cmp
sbb
pop
mov
pop
mov
lods
call
and
adc
mov
dec
ficoms
sahf
and
sbb
xor
jecxz
dec
or
pop
xor
test
jle
repnz
jnp
mov
lret
scas
mov
cmp
shll
fsub
pop
or
inc
cli
add
cmp
lret
dec
clc
sbb
and
arpl
iret
or
jp
adc
mov
gs
popf
jmp
adc
fnsave
pop
test
adc
in
out
mov
jp
inc
leave
out
ljmp
xchg
mov
divl
cld
in
incl
mov
imul
aas
jl
cli
inc
pop
jnp
loopne
ret
cmpl
mov
fdivrl
test
adc
das
fs
mov
jp
popf
add
sbb
sbb
lds
imul
or
sahf
loop
lods
mov
and
lods
push
inc
sbb
sub
adc
pusha
mov
xchg
dec
in
adc
and
xor
inc
aam
xor
je
dec
loop
nop
pop
out
cmp
or
mov
stos
arpl
arpl
btr
aaa
inc
pop
jmp
por
cmp
cmpsl
xor
in
mov
sbb
xchg
sbb
sub
inc
roll
or
in
jbe
cs
mov
mov
in
mov
pop
xor
sbb
movsl
and
xchg
sarl
out
jge
test
xor
push
push
mov
clc
inc
mov
push
das
xor
cmp
push
out
clc
mov
test
nop
xchg
movsl
jno
out
sub
jge
and
lret
inc
inc
xor
je
sbb
or
mov
cmpl
ljmp
fidivrs
orl
mov
jnp
adc
arpl
arpl
mov
pop
mov
ljmp
stos
xchg
inc
sub
dec
popa
add
data16
je
in
mov
sub
xchg
adc
lock
mov
cmp
mov
sub
ss
add
xor
mov
cltd
call
lods
sub
pushf
movsb
outsb
jnp
fstpt
lahf
sbbl
daa
push
lods
mov
xor
dec
ret
adcb
stos
xchg
sub
shll
and
cmpsl
mov
mov
sahf
pop
lods
ss
mov
das
in
mov
movsl
jge
push
stos
mov
inc
pop
mov
xchg
ljmp
jnp
mov
push
inc
jne
adc
cmp
adc
shlb
sub
inc
fsts
mov
mov
in
jmp
or
cli
jnp
cld
lea
xchg
popa
jle
das
aam
loope
add
enter
mov
test
xchg
cmp
scas
mov
or
test
std
xor
add
scas
popa
mov
jl
sbbb
out
fistpl
outsl
pop
xor
ja
sub
lods
lahf
adc
xor
test
nop
xchg
int3
es
repz
dec
cmp
mov
rclb
mov
jns
lret
test
sbb
xchg
repz
dec
clc
out
sub
and
xor
inc
inc
stc
pop
push
enter
outsl
cmpb
cmpsb
shlb
push
mov
sub
out
mov
sub
dec
sub
shrb
fwait
or
sti
jmp
or
xchg
mov
or
mov
or
fisttpll
dec
or
lahf
ja
shlb
jle
andb
mov
mov
repnz
fmul
sub
cli
cmp
dec
out
jo
push
cmp
scas
outsl
mov
lahf
sbb
fisttpll
dec
call
sti
mov
in
rcrb
pop
aam
daa
call
pop
dec
pop
jnp
jmp
call
icebp
shl
ljmp
test
mov
sub
in
mov
push
cli
adc
pop
push
mov
stos
movsb
xor
pop
cmp
xchg
pop
mov
mov
add
fisubl
push
cmp
pop
movsb
lds
and
and
pusha
lds
jle
daa
imul
lds
add
sbb
mov
jp
xor
pushf
add
arpl
xchg
push
insl
shlb
jb
ljmp
mov
inc
and
mov
out
stos
cmp
in
inc
jmp
mov
push
inc
bswap
mov
sbbb
nop
xchg
imul
adc
sbb
or
fmull
loop
aaa
in
push
stos
ja
mov
stos
pop
or
xchg
jno
fisubrl
mov
cs
stc
mov
into
aam
stc
jle
lea
test
or
shrb
xor
aad
rorl
dec
outsb
cld
aas
sub
sub
into
dec
test
cmp
jne
cmp
sub
clc
sbb
jmp
test
ret
lds
push
inc
aaa
cmp
mov
and
fldl
sbb
and
bound
or
xor
pop
xor
jmp
cmpsl
leave
add
lret
shrl
and
jmp
or
ds
out
xchg
lcall
adc
fidivrl
ret
into
scas
test
lret
cmp
insb
sub
mov
inc
sbb
pushf
jmp
fisttps
push
iret
in
mov
jecxz
jmp
adc
enter
decb
push
add
daa
ret
sbb
inc
mov
mov
mov
retw
or
loope
mov
push
shll
andb
ljmp
gs
lods
sub
aas
cmpsl
es
sub
cmp
insl
fucomi
sbb
fbstp
rcrl
int
pop
loop,pn
dec
sbb
sbb
ficoml
push
xchg
add
adc
xchg
out
sub
jmp
pop
mov
shlb
rcrb
sub
arpl
mov
fstpl
dec
mov
jp
jge
pop
or
sub
iret
cmp
jle
mov
xchg
jmp
test
testl
repnz
fstps
xchg
push
mov
adc
cmp
add
jb
ficompl
add
ret
sub
data16
sbb
cmp
insl
or
push
jae
mov
cmpsb
loope
push
adc
inc
test
jg
lock
ja
iret
cmp
fs
sbb
inc
or
js
xchg
flds
gs
pop
cwtl
adc
call
mov
mov
jbe
stos
mov
xor
adc
or
js
mov
maskmovq
divl
lahf
mov
sub
rol
int3
cs
mov
cmp
lods
mov
pop
addl
lods
xor
cwtl
xchg
sti
scas
push
xchg
add
lods
jae
movsl
cld
mov
aas
sbb
scas
clc
mov
shrl
pop
fstp
ja
in
cltd
jp
arpl
sbb
andl
out
hlt
mov
add
arpl
mov
xlat
mov
gs
sub
jno
inc
sbb
dec
xlat
or
jmp
sub
cli
test
or
stc
aad
aaa
stos
pop
lods
xchg
outsl
sti
mov
clc
inc
mov
scas
scas
iret
stc
rol
inc
clc
lods
xchg
lret
and
mov
daa
or
dec
stos
sub
xchg
insb
leave
xor
insl
sbb
cmp
jo
mov
fcmovb
mov
dec
imul
iret
mov
arpl
add
mov
jae
lret
dec
pop
lea
das
pop
outsl
sub
mov
lods
jp
inc
clc
cwtl
mov
push
mov
lret
add
std
in
scas
cmp
pop
outsl
jecxz
and
jmp
adc
add
inc
les
push
inc
sbbl
mov
cwtl
inc
cmp
add
inc
je
mov
adc
mov
xor
shlb
imul
dec
add
pushl
leave
push
jmp
loopne
jmp
sub
xchg
sub
cmp
sbb
xor
add
loopne
and
jg
lret
into
jo
adc
addr16
neg
xor
int3
call
mov
dec
or
lods
adc
mov
es
cmpsl
sub
push
insb
dec
sbb
imul
das
sub
dec
xor
adc
fmul
cmp
inc
mov
adc
jo
push
xchg
push
bound
enter
and
xlat
lret
push
scas
and
in
aam
popf
add
stos
scas
or
adc
xlat
xchg
sbb
icebp
aas
xchg
cli
push
pusha
insb
mov
ror
jp
lea
jbe
add
lahf
shl
or
pop
shll
lods
pop
aas
dec
repz
jbe
mov
bound
je
outsb
pusha
imul
dec
leave
and
loop
out
dec
test
pop
cmp
gs
incb
and
sbb
enter
psubusw
rcrb
pop
inc
push
mull
mov
xchg
scas
bound
lret
loop
fwait
vpcmpgtb
and
pop
popa
cmpsb
sti
cwtl
gs
adc
inc
in
xchg
xor
inc
jb
mov
or
add
loope
popf
or
lahf
sub
add
outsb
xor
cli
pop
popa
and
xor
call
sub
dec
test
test
fsubrs
in
sub
jno
rclb
sbb
int3
sbb
cmp
lret
pop
int3
out
les
jbe
jg
pusha
cmpsb
adc
sbb
in
dec
sbb
out
xchg
add
pop
iret
aaa
adc
jo
stc
int3
inc
xchg
lret
imul
mov
mov
cmc
lock
stos
out
xchg
push
or
ffree
call
cmp
sbbl
mov
jmp
stos
push
add
repnz
aas
mov
stos
test
and
adc
ds
call
inc
cwtl
out
dec
insl
lods
mov
cmp
iret
pop
mov
or
push
fldl
lahf
add
stos
adc
pop
outsl
push
jae
xor
xor
cltd
inc
test
mov
ja
jmp
mov
mov
or
in
out
jae
sbb
sub
cmp
mov
jp
mull
cmp
mov
adcb
int3
sub
loope
xor
popa
xchg
xor
xchg
push
mov
and
xor
scas
adc
dec
test
pop
fisubs
ds
push
sbb
adc
xchg
jmp
fildll
pop
push
cltd
sbb
push
push
sub
push
scas
sub
das
xchg
div
mov
mov
xchg
or
fdivrs
dec
fwait
inc
xlat
popa
xchg
jmp
lods
mov
inc
inc
sbb
inc
cmp
add
dec
push
cmp
shlb
into
jmp
int3
jnp
jg
fimuls
add
cmp
scas
sarl
pop
lret
cwtl
scas
inc
inc
mov
adc
daa
sti
mov
jg
sbb
hlt
stc
faddl
pop
push
or
xor
jno
push
push
dec
mov
cmp
aad
pop
xor
xchg
iret
jg
les
mov
inc
xchg
lret
pop
jge
jge
inc
loope
jg
pop
dec
cmp
pop
sub
inc
or
lea
jae
jbe
aaa
lret
iret
or
and
xchg
outsb
jo
inc
into
mov
lret
pop
cltd
xorl
sbb
outsl
fcomip
mov
lcall
mov
push
ja
push
mov
jnp
scas
pusha
inc
push
jle
xchg
xor
mov
pop
adc
inc
or
loope
sahf
testl
test
fstl
inc
pop
in
inc
outsl
sahf
sbb
or
roll
and
out
dec
sbb
test
scas
sahf
cmp
lods
fists
jl
push
sub
mov
cmp
jne
adc
jl
push
and
imul
xor
mov
jb
sbb
dec
addr16
je
shrb
pop
daa
xor
dec
sbb
movsb
push
in
lahf
cmp
adc
jp
jp
xchg
leave
sti
jbe
mov
add
testl
push
test
mov
stos
and
sarb
and
push
nop
test
leave
addr16
mov
and
je
in
and
and
add
fwait
sub
sbb
pop
push
or
mov
into
ffreep
subl
push
test
ficomps
cmp
sub
stos
sarl
repz
std
adc
mov
cwtl
dec
mov
xor
xchg
ss
insl
push
fiadds
fdivl
xor
fwait
adc
in
mov
js
jl
lcall
fwait
cli
ss
inc
arpl
popa
cli
ja
out
cmp
mov
and
mov
mov
xchg
repz
fnsave
add
or
fldl
scas
inc
adc
repnz
jecxz
fnstenv
in
repnz
das
mov
lds
imul
mov
mov
cmp
stos
out
mov
sbb
test
subb
mov
jbe
pop
ret
dec
pushf
gs
sub
sub
data16
cmpsb
xchg
jecxz
int3
js
pop
lahf
pusha
inc
ljmp
popa
out
mov
push
lds
add
jp
ret
or
clc
aam
data16
shll
sti
sbb
negl
jae
pop
jp
stos
mov
or
out
jp
cmpsb
adc
pop
inc
cmc
fldl
fwait
loop
aad
add
int
shrb
shrl
fisubs
inc
pop
cmpsl
test
outsl
dec
push
mov
push
scas
mov
jle
fstpl
pop
jno
sbb
add
pop
pop
fmuls
add
push
int3
lahf
jne
test
sahf
and
mov
mov
jmp
repz
mov
dec
flds
dec
out
jne
pop
add
das
jmp
lods
call
test
mov
mov
and
mov
jg
adc
fwait
jle
imul
inc
xor
push
cli
mov
lahf
aaa
push
push
cmp
xchg
cmp
push
add
clc
es
or
inc
adc
adc
and
jle
mov
push
adc
mov
dec
pop
nop
daa
add
fstpl
lcall
rcll
stos
inc
pop
loop
jne
fisttps
je
mov
sahf
lods
adc
jns
ret
jns
inc
rolb
inc
les
cwtl
push
mov
aaa
enter
sub
add
inc
jno
enter
inc
wrmsr
mov
aam
xor
xchg
leave
je
hlt
nop
jp
outsl
xor
insb
in
lods
and
pop
pop
aas
and
mov
adc
mov
cwtl
and
push
inc
add
loop
sub
nop
jno
loop
adc
movsl
aad
mov
outsl
call
mov
and
cmp
adc
jmp
lods
push
daa
xor
js
lfs
push
test
lods
mov
adc
cmpsb
cld
xor
sub
jl
ja
fsubrs
lea
xchg
lcall
cli
or
movsb
adc
jg
or
outsl
insl
out
imul
mov
push
inc
repnz
xor
jnp
xchg
mov
imul
cld
lahf
jbe
shrb
lea
sar
repz
and
je
nop
repnz
inc
jp
mov
fistps
sbbb
push
ret
sbb
lret
xchg
into
or
mov
adc
mov
ss
adc
stos
dec
pop
mov
or
inc
mov
int3
in
jle
insl
xchg
fimuls
sbb
inc
xchg
mov
sbb
sbb
and
jne
cmc
sbb
lea
xor
mov
inc
pushf
jno
pushf
inc
push
push
jnp
or
out
call
movsl
test
test
xchg
aas
and
lret
adc
js
cmp
add
lds
fwait
lahf
push
fcomi
push
xchg
ret
mov
sub
dec
test
gs
jnp
push
les
push
jg
es
inc
mov
sbb
fsts
cs
in
cmp
pop
and
and
inc
stos
xor
cmpsl
add
or
sbbb
popa
pusha
mov
lahf
pop
decb
xchg
cmp
movb
dec
rclb
mov
dec
push
adc
sbbl
or
push
shl
cwtl
jp
jne
dec
jb
nop
sbb
out
push
or
bound
xor
mov
clc
xchg
jns
xor
lcall
arpl
pushl
test
inc
pop
lret
push
addb
xchg
pop
sar
stos
cmp
mov
mov
ss
inc
loopne
in
rcrb
mov
push
int
loope
jns
mov
sbb
add
call
fimuls
test
cmp
in
sbb
push
dec
cltd
andl
lods
out
fxch
xor
inc
notb
lods
add
js
in
in
push
aam
fidivl
cmpsb
xor
int
mov
add
test
jge
outsb
cmpb
in
xor
push
mov
and
lret
sbb
adc
xchg
das
int
insl
cmpsl
js
cmp
and
mov
jmp
inc
dec
jnp
push
push
mov
mov
test
addr16
mov
imul
cmp
mov
cmp
cmp
push
cmp
mov
fadd
or
xor
mov
mov
pop
mov
lock
mov
cmp
lret
mov
sbb
fisubrl
push
inc
mov
cmp
das
ret
pop
ret
add
das
adc
fisubrs
ljmp
mov
push
pop
mov
into
sahf
stos
sub
jp
mov
je
sub
mov
pop
mov
js
cli
test
fidivs
icebp
sub
bound
mov
test
scas
sub
jnp
insl
fiaddl
dec
sbb
mov
cmc
scas
mov
mov
repnz
jbe
in
jno
cmpsl
mov
fisubrs
sbb
pop
add
sbb
mov
xor
jbe
and
fidivrs
loopne
jp
xchg
dec
dec
ja
pop
cwtl
and
mov
mov
scas
or
ret
add
xlat
es
loope
movsb
sbb
test
pop
stc
cmp
add
gs
stos
jmp
rclb
mov
xchg
movsl
loop
add
xchg
xor
out
pop
popa
in
push
rorl
jl
outsl
fstl
push
xor
xchg
fisubs
jp
popf
mov
rcrb
daa
insb
dec
inc
xchg
pop
mov
loope
scas
push
and
push
jl
repnz
dec
xor
push
pop
or
push
inc
imul
inc
cmpsb
jmp
fmuls
jmp
addb
mov
pop
shlb
or
leave
push
mov
fadds
lret
sbb
icebp
cmp
lret
cli
iret
and
inc
mov
xchg
out
nop
push
into
or
jg
mov
scas
scas
lcall
xrelease
mov
ss
lret
test
fldenv
push
or
jbe
lret
mov
pop
sbb
cmp
add
dec
add
or
adc
in
adc
jle
cltd
repnz
mov
and
aas
aaa
jg
mov
leave
out
repz
xchg
or
icebp
addl
test
mov
pop
inc
sub
sub
cmpsl
adc
and
add
jbe
sbb
daa
jp
dec
out
cmpsb
pop
xchg
push
in
dec
dec
jp
push
outsl
ds
addr16
inc
or
push
scas
jl
cmp
fcompl
shll
lahf
cwtl
xor
dec
dec
adc
addl
adcb
aam
fnstsw
sti
out
in
idivb
jmp
xchg
dec
in
inc
mov
push
xchg
pop
adc
mov
dec
xlat
jg
popf
test
sub
jg
and
adc
mov
inc
xchg
repz
inc
jae
cwtl
in
mov
pop
mov
inc
mov
imul
push
lcall
movsl
sahf
jns
or
addb
mov
jle
xchg
lods
cmc
addb
inc
mov
cmpsl
jecxz
pop
add
push
dec
and
pop
mov
call
stos
add
shll
lret
in
sbb
insl
scas
cli
adc
cwtl
imul
roll
outsl
mov
lods
out
and
jnp
pop
test
stos
sbb
push
movl
inc
cmp
cmpsb
cmp
jns
mov
fbld
xlat
inc
icebp
repnz
fsubrs
call
push
arpl
lret
pop
jb
ljmp
je
or
mov
dec
inc
lahf
cwtl
or
sbb
fwait
push
xor
pop
and
push
adc
adcl
pop
fwait
es
lods
or
std
popf
push
stos
leave
clc
ret
icebp
cli
push
ljmp
push
int3
aas
jbe
adc
aam
call
cmc
aaa
xorb
dec
mov
nop
mov
jns
dec
popa
mov
mov
jecxz
mov
jnp
enter
mov
roll
add
or
addr16
sbb
sub
cwtl
cltd
mov
sbb
xchg
push
mov
push
mov
xchg
add
mov
std
sbb
insb
adc
pop
and
xor
pop
das
in
and
xchg
popa
gs
sub
sub
add
addr16
sbb
fwait
adc
push
scas
lods
shlb
in
or
cltd
add
lret
cmp
jbe
jnp
loope
ret
daa
jae
cwtl
ret
mov
ljmp
loopne
or
pop
lret
stos
pop
mov
dec
lea
pop
dec
movsb
sub
jmp
jge
cli
pushf
push
pusha
jae
sub
pop
dec
mov
les
sub
add
fwait
imul
xchg
imulb
xchg
fsubl
pop
cmpl
add
jae
mov
lock
fcompl
addr16
stos
jp
cmp
or
dec
sarb
mov
dec
mov
int
jb
add
push
adc
sub
lds
sub
dec
ljmp
cmp
adc
and
in
test
push
not
inc
pop
xchg
sub
and
stos
mov
mov
negb
scas
js
mov
mov
push
into
pop
ror
sub
fisubrl
dec
cmc
arpl
cwtl
push
xor
sahf
xor
xchg
dec
inc
mov
test
out
je
popa
outsl
out
xchg
mov
mov
add
dec
and
xchg
push
lods
add
in
sti
xor
mov
pop
pop
jp
popa
loop
and
das
loope
repz
xor
pusha
movsl
ret
es
imul
cmpsl
dec
or
out
lods
sbb
ret
pop
test
insl
pop
xchg
loope
inc
and
adc
loopne
js
xchg
push
lds
mov
enter
mov
jno
add
mov
lock
pushf
ficoml
sar
adc
mov
cmpsl
test
lcall
ljmp
sub
arpl
dec
insb
addps
add
xchg
incb
cmp
mov
mov
fistl
sbb
dec
sbb
inc
add
scas
mov
sub
aad
or
xor
lret
pop
cmpsl
inc
add
jmp
mov
adc
test
loop
fsub
sbb
adc
jmp
lock
push
sbb
jmp
push
mov
mov
adc
jae
inc
or
sub
jae
mov
imull
and
ror
out
cli
and
sub
loop
add
lret
fidivs
daa
fildl
movsb
cmp
popf
push
adc
xor
lea
mov
pop
popa
sbb
lahf
fnsave
mov
out
jg
mov
sbb
jbe
out
mov
decl
pop
xor
test
push
dec
lea
push
data16
pop
cmp
lods
gs
jns
out
call
int3
xchg
jl
enter
imul
xchg
pop
mov
sub
cs
jb
je
int
mov
pusha
out
jno
push
enter
in
cmove
add
call
mov
xor
adc
arpl
cmp
scas
cmp
mov
bound
mov
out
push
rcrb
das
push
clc
or
scas
pop
sub
mov
roll
dec
push
or
fs
inc
cmp
dec
ret
sub
mov
fstp
sbb
xor
aam
or
jo
jle
inc
nop
dec
stos
fisttpl
ds
mov
xor
hlt
daa
fwait
sbb
enter
pop
aad
fidivrl
clc
xchg
dec
out
sub
inc
xor
mov
jo
icebp
movsl
add
int
ljmp
fsubr
fildl
daa
enter
cmc
loope
xchg
inc
testl
mov
stos
dec
push
in
mov
dec
icebp
rorb
test
pop
cmp
xchg
xchg
shl
out
insb
jp
dec
dec
fwait
pop
mov
xchg
sbb
push
cwtl
fcmovu
int3
in
jmp
pop
aam
inc
xchg
cli
push
push
mov
aam
ret
nop
fsts
sbb
outsl
mov
cld
sub
xchg
stos
push
ljmp
push
add
test
out
mov
and
in
loop
push
push
shlb
in
in
cmp
jbe
pop
repz
sub
push
xorl
pop
cmc
mov
mov
jle
mov
push
xorb
push
aad
pop
aam
shl
fisttpl
sub
pop
adc
insb
mov
dec
adc
sub
aam
daa
sbb
scas
dec
test
sbb
pushf
cmp
push
adc
fwait
mov
push
and
mov
enter
sbb
ret
fdivrl
shrb
xlat
mov
add
dec
jg
mov
daa
pop
outsb
sahf
jne
sbb
scas
jnp
adc
test
add
addr16
std
imul
insl
in
mov
jo
adc
rcll
cwtl
sbbl
cmp
outsl
es
mov
clc
lds
aad
in
shll
mov
call
test
test
xor
and
mov
mov
outsb
sbb
jecxz
call
mov
xlat
cmp
insl
dec
sar
xchg
outsb
add
sub
enter
xchg
lea
dec
lcall
aad
lret
mov
adc
cmp
inc
aas
mov
leave
cwtl
xchg
xchg
pop
pop
or
gs
xor
fiaddl
aam
adc
and
imul
ror
mov
sub
lock
aaa
fxch
adc
loop
mov
mov
and
call
ret
xchg
push
fnstcw
mov
cmpsl
xchg
lret
sbb
aad
add
adc
cmp
cwtl
mov
pop
cmp
add
aaa
movsb
or
cmp
dec
and
mov
push
cmpsb
add
repz
in
push
pop
mov
pop
mov
add
xchg
pop
sub
lea
outsl
in
inc
pusha
mov
mov
cld
pop
jmp
jne
mov
ret
shlb
xorl
cmpsl
inc
test
mov
jecxz
dec
pop
xchg
call
out
int3
aaa
es
call
rcl
mov
faddl
pop
das
imul
mov
test
mov
mov
ja
push
dec
int
mov
aad
add
mov
dec
stc
mov
mov
loopne
xor
cmp
rorb
add
xchg
dec
cwtl
jmp
addl
or
or
mov
inc
mov
push
arpl
sub
mov
mov
insb
fdivs
push
pop
test
sbb
call
cmp
xor
in
mov
push
mov
test
mov
xchg
dec
and
daa
push
adc
sub
fcomps
jbe
scas
das
std
push
imul
push
add
cmpl
int3
and
movaps
cld
lods
or
mov
add
mov
and
mov
aaa
out
loop
push
push
clc
or
sub
xchg
cld
and
pop
jb
movsb
dec
pop
test
jmp
cld
pop
sub
xchg
inc
adc
and
mov
stc
repz
sbb
outsb
sbb
mov
lret
jb
sbb
les
mov
clc
xchg
adc
mov
das
add
ds
es
sbb
mov
arpl
dec
dec
mov
loop
push
and
sbb
fiaddl
stos
jbe
mov
leave
xchg
fcmovnu
clc
xchg
inc
sub
into
mov
inc
dec
push
jbe
fildl
dec
lods
cmpsb
test
push
fcoms
mov
call
xor
in
jae
ret
popa
pop
inc
adc
aam
xchg
dec
and
xchg
es
nop
iret
push
jnp
movsl
cld
inc
mov
push
jnp
fdivr
scas
pop
cmp
js
imull
xchg
push
and
into
int
das
xor
jnp
je
push
aad
xor
flds
add
loop
testl
or
pop
leave
lret
aaa
int
sub
mov
push
adc
and
shr
test
sbb
decl
sbb
repnz
insb
push
popa
nop
xchg
mov
repnz
xor
pop
adc
sbb
mov
call
jo
and
push
mov
push
or
imul
into
cli
fildll
bound
and
jp
xchg
test
xchg
push
and
add
and
test
push
int
int
xchg
data16
mov
test
push
enter
in
aaa
inc
leave
shl
jge
push
sub
sarb
or
ds
imul
into
lds
mov
das
insb
fstpl
pop
test
lods
dec
lret
lcall
pop
pushf
and
movsl
lods
push
insb
and
mov
in
gs
sbb
xchg
or
mov
mov
mov
subb
outsl
inc
ja
mov
into
fisttpl
ds
in
aam
repz
insb
lods
shr
xchg
xchg
ret
and
mov
cli
mov
iret
leave
mov
add
xor
jle
loopne
bound
icebp
in
scas
xchg
push
inc
sub
mov
inc
push
xchg
xchg
or
mov
sub
sbb
js
pusha
mov
into
mov
in
add
rorl
inc
jl
xchg
in
scas
xchg
test
data16
and
cmp
dec
imul
cs
addr16
imul
stos
push
xchg
add
mov
leave
mov
dec
adc
jl
sbb
inc
idivb
pop
addr16
sbb
addr16
push
es
pop
cs
movsb
lock
loopne
lods
or
dec
adc
or
icebp
sub
nop
flds
add
pop
dec
mov
mov
pop
mov
jb
call
xchg
std
cmp
ror
xor
andl
shrb
jecxz
psllq
mov
sub
das
pop
jecxz
pop
in
xchg
int3
xchg
dec
lea
xchg
push
jl
jmp
jecxz
inc
addr16
jae
and
rorb
data16
in
or
imul
ss
mov
cltd
fstpl
call
int
fdivrs
aaa
lret
push
hlt
mov
hlt
ds
jp
in
and
into
andb
add
mov
je
xchg
sysexit
mov
mov
dec
lcall
mov
xor
lret
pop
imul
sub
pop
ljmp
sub
sarl
loope
shlb
out
stc
push
aaa
and
les
jnp
mov
ljmp
mov
fs
fldenv
imul
and
push
xchg
adc
das
es
xchg
mov
inc
subb
xchg
or
or
mov
jne
sub
sbb
and
pop
mov
fwait
sbb
cmp
gs
imul
les
mov
lcall
xchg
adcl
aas
cld
push
jb
cwtl
int
or
push
shl
mov
repnz
add
cli
dec
std
jp
mov
and
jnp
add
push
in
or
mov
and
xchg
mov
loopne
mov
mov
fcoms
popa
addr16
sarb
cmpsl
xchg
and
cmc
outsb
xchg
push
icebp
inc
xchg
xchg
inc
add
fstpt
inc
leave
inc
fs
dec
adc
mov
sbb
fwait
adc
clc
sbb
or
fsts
fwait
aad
jmp
push
inc
xor
ror
dec
pop
add
pop
cltd
push
lea
inc
std
addl
xor
jle
push
les
push
ds
cmp
jp
cmp
pop
pop
fwait
jnp
roll
loopne
sar
xchg
cmpsb
ja
jle
or
repz
mov
out
push
loope
jnp
jecxz
nop
mov
mov
pop
pop
jle
mov
mov
je
sbb
sub
lahf
mov
and
cmp
test
mov
xchg
pop
into
imul
pop
sbb
aas
xchg
mov
pop
loop
mov
sbb
addr16
mov
push
adc
les
cmp
enter
scas
adc
add
mov
add
stos
cmpsl
jae
divl
sbb
push
or
xchg
mov
stos
rolb
lret
dec
mov
sub
lock
push
add
push
xor
lcall
and
sub
pop
dec
xor
push
out
push
in
sub
mov
sahf
cmpsb
push
imul
mov
ret
add
ja
les
movsl
pop
arpl
lret
or
cltd
mov
aad
cmp
addr16
sarl
pop
test
loopne
mov
scas
pop
sub
iret
dec
sbb
cmpsl
xchg
xchg
xchg
adc
and
or
pop
push
cmp
fisttpl
pop
lret
fsubrl
mov
add
mov
jecxz
out
mov
jecxz
outsb
adc
pop
mov
lock
movsl
jecxz
inc
jne
dec
ds
pop
mov
shll
xor
js
stos
les
cld
push
mov
pushf
inc
jle
lret
fmuls
mov
adc
lds
add
cmp
pop
shlb
lcall
arpl
mov
or
std
sahf
movsl
jp
lret
mov
add
sbb
xchg
and
insl
inc
adc
cltd
es
jne
fnstcw
mov
ljmp
push
sbb
cwtl
pushfw
lds
addr16
xchg
int3
pop
adc
bound
mov
out
subl
sub
outsb
mov
push
cs
dec
push
arpl
adc
repnz
es
mov
ja
xor
or
cltd
xchg
andl
sub
pop
jge
xchg
mov
xlat
inc
test
popa
sarb
cmpsl
pop
mov
shl
sbbl
mov
adc
jmp
cmp
and
inc
out
and
clc
iret
xchg
dec
xor
dec
push
call
add
shlb
pop
ds
pushf
cmp
fisttpl
adc
inc
dec
and
sbb
and
push
dec
in
daa
imul
arpl
mov
ljmp
jecxz
mov
pop
outsb
sbb
jo
ds
popl
frstor
scas
lret
adc
jnp
adc
cmp
lods
lret
shr
pop
scas
pusha
or
push
test
shlb
in
jne
daa
xchg
jecxz
pop
or
lods
xchg
out
movsl
mov
je
lcall
adc
inc
fs
addl
das
xchg
xchg
in
push
jge
fst
sbb
and
lahf
jne
aaa
lret
xchg
pop
test
sbb
lods
ror
adc
js
subb
movsl
dec
and
sbb
fwait
pop
xlat
rolb
push
inc
int3
push
and
lret
bound
jp
sub
aad
data16
or
outsl
mov
cld
cld
movsb
or
std
pop
fcomip
cmp
mov
and
jge
lods
movsb
adc
dec
add
and
mov
je
lea
ret
mov
cmp
mov
lret
icebp
mov
sbb
pop
subl
pop
cs
stos
lcall
mov
loope
xor
mov
mov
fidivrs
mov
lret
mov
movsl
insb
clc
pusha
cwtl
fstpt
std
ds
sbb
jne
insl
ror
xchg
or
xchg
adc
or
or
add
inc
fdivl
call
inc
cltd
sbb
sbb
mov
lods
jg
add
lret
jl
lahf
push
lods
loopne
jg
ljmp
test
cmpsb
mov
js
aam
push
ljmp
imul
rol
pop
sub
sub
roll
jmp
outsl
mov
iret
pop
adc
jbe
add
dec
push
sbb
add
xchg
xor
pop
adc
mov
mov
xor
xchg
popf
ljmp
cld
sbb
ret
jl
mov
andb
adc
je
push
xor
xchg
inc
mov
roll
push
mov
cltd
mov
scas
out
test
or
lea
out
addb
xchg
rcll
outsb
mov
push
out
mov
scas
inc
jns
testb
jno
mov
mov
jge
sbb
sahf
movsl
fstps
negb
push
pop
dec
out
pop
int
rep
insl
lds
dec
out
xchg
outsb
push
add
jns
rcr
jbe
hlt
das
push
test
lds
pop
mov
mov
fsubrs
test
mov
test
nop
ds
movsb
aam
test
repz
nop
mov
aas
xchg
mov
dec
inc
rcrb
or
jge
jno
jo
fs
cmp
xchg
iret
sub
sarl
cmp
in
addb
inc
fsubrs
cmp
add
negl
pop
push
out
sbb
pop
inc
nop
fstl
es
loopne
cmp
sub
jl
dec
test
jg
js
mov
sbb
outsb
pop
testb
gs
lods
out
sub
fs
lcall
xlat
ds
xor
dec
and
cmp
mov
les
jno
sub
mov
jne
shlb
dec
xor
lret
pop
mov
sbb
or
xchg
into
cmpsb
mov
push
mov
icebp
loope
sbb
mov
sahf
fsub
push
xor
push
jecxz
popf
mov
and
sbb
icebp
test
sbb
jbe
scas
call
cmp
testb
or
dec
or
jg
cwtl
and
jg
jecxz
loop
inc
sub
pop
mov
aaa
mov
loop
div
gs
in
int
aam
bsr
jmp
je
mov
and
mov
cmpsb
xor
push
dec
xchg
pop
inc
and
cmp
push
xchg
popa
out
sbb
jg
xchg
inc
fwait
or
int
mov
sbbl
mov
jl
xchg
push
imul
fldl
insb
pusha
test
pop
xchg
add
xchg
mov
mov
cmp
call
dec
xor
mov
pusha
sub
andl
in
stc
dec
lds
gs
mov
mov
push
ds
push
push
decb
sbb
fcmovne
es
movsl
mov
mov
dec
sbb
xchg
outsb
fsub
pop
notl
fwait
scas
mov
ret
cmp
ret
sbb
std
mov
cs
push
iret
push
cmpsl
cmc
dec
push
and
testl
lahf
std
pop
pop
jns
and
dec
in
aam
inc
mov
mov
loopne
or
call
mov
pop
xchg
push
fs
addl
jae
test
shrl
mov
mov
xchg
inc
xchg
scas
pop
cwtl
ja
sbb
sbb
sbb
loope
ja
mov
xor
cmpsl
sbb
and
shll
cmp
push
lea
mov
adc
aam
clc
push
sbb
lea
repz
in
cmpb
add
fistpl
idiv
xchg
push
ret
mov
into
inc
xchg
inc
les
int
addr16
mov
push
iret
ljmp
sub
push
int3
sti
mov
sahf
jp
jge
jb
cmp
bound
jg
cs
push
or
mov
outsl
popa
imul
scas
mov
sbb
mov
aaa
popa
adc
sar
cs
adc
xchg
mov
cmp
stos
pop
fwait
in
pop
mov
push
xchg
dec
dec
aam
add
xchg
jmp
sbb
ret
pushf
cltd
push
push
outsb
push
dec
mov
jnp
ja
dec
cli
mov
jb
mov
mov
fndisi(8087
add
mov
jge
mov
sbb
push
pop
inc
mov
add
xchg
movsb
xor
dec
pop
push
mov
xchg
add
arpl
cmp
xor
xor
mov
mov
and
xchg
or
bswap
push
cmc
xchg
rcrb
or
adc
mov
dec
shl
mov
sub
loope
inc
push
fidivs
int
outsb
inc
adc
sbb
mov
imul
bound
cmpsl
mov
sub
shlb
jb
mov
sahf
pop
and
inc
in
lock
xchg
mov
mov
inc
add
dec
cwtl
adc
shlb
lds
sti
adc
inc
repnz
dec
adc
adcb
cmpsl
lcall
or
lcall
jp
and
sub
cmc
pop
cmp
ret
or
xchg
mul
mov
imul
cmp
fists
scas
imul
shlb
loopne
dec
imul
arpl
je
arpl
repnz
add
js
or
negl
push
jecxz
xor
imul
dec
xchg
pop
cmp
notb
or
mov
and
jle
fiaddl
or
xorl
adc
pop
jae
xor
mov
sub
mov
sub
je
and
pushw
loope
ret
dec
xchg
push
mov
and
adc
loopne
shlb
push
int
rclb
rcrl
clc
mov
bound
insb
cmc
lret
inc
cmp
scas
jno
sbb
pop
pushf
xchg
pop
sbb
out
mov
lods
jg
out
cmp
xchg
pop
iret
mov
jmp
repnz
sbb
fsubr
pop
repnz
insl
hlt
cmp
leave
insb
mov
ret
cmp
in
int3
add
sbb
jecxz
test
enter
in
xchg
cwtl
data16
leave
mov
inc
add
sahf
xchg
xchg
push
negl
mov
sahf
or
out
subl
cmpsb
insb
cld
cmpsl
sbb
jmp
cmpsl
je
add
add
xor
or
cmp
loopne
out
or
mov
cmp
cld
cmpsb
sahf
adc
scas
sbbb
adc
pop
cmp
cmpsb
jns
inc
push
mov
or
cmp
mov
or
mov
mov
xor
adc
mov
inc
mov
lret
dec
xchg
pop
stc
les
push
xchg
adc
push
cltd
jbe
pushf
lret
enter
xchg
mov
xchg
sahf
cmp
pushf
sbb
pop
icebp
std
scas
mov
scas
jae
subb
or
pop
daa
push
out
in
mov
push
adc
lret
es
xchg
add
mov
les
je
jno
ja
xlat
jb
dec
lods
mov
test
sbb
adc
fnstcw
xor
push
daa
or
dec
fsubp
ret
imul
lcall
pop
sbb
lahf
push
je
jb
sarb
test
xchg
mov
subb
push
jne
or
add
xchg
test
int3
or
ja
bound
xchg
add
inc
cli
shlb
stc
lods
pop
push
fcoms
or
addr16
out
mov
leave
cltd
fbstp
bound
xchg
add
mov
mov
rolb
pushf
insb
push
cltd
rcll
call
test
je
rorb
fidivl
xchg
daa
jae
add
arpl
jmp
js
stos
fldenv
mov
cmp
sbb
push
mov
xchg
or
call
pop
in
pop
inc
into
sbb
mov
cmp
push
frstor
faddl
sub
cmp
aas
dec
mov
mov
jne
jecxz
push
mov
scas
testl
lods
push
xor
add
ret
jle
daa
cmp
scas
push
mov
fwait
addb
dec
mov
xchg
sub
mov
lret
push
out
pop
movsl
lods
push
pop
adcl
stc
jg
inc
icebp
call
cmp
fcomp
mov
mov
test
mov
xor
adc
inc
xor
cwtl
push
push
xchg
cmp
bound
movsl
fistps
lahf
daa
jle
js
mov
and
pop
mov
dec
cmp
cmp
pop
xor
bound
repnz
int
inc
mov
sbb
mov
ficomps
sarb
mov
pop
jmp
add
jmp
xchg
mov
push
loopne
addl
stos
inc
lcall
mov
or
sub
jne
jle
imull
mov
sti
mov
xor
nop
arpl
gs
rorl
or
dec
aaa
icebp
sub
scas
filds
loopne
and
push
push
andl
movsl
jmp
sub
mov
pop
test
bound
pop
lahf
outsb
pop
daa
xlat
insl
mov
ficomps
movb
mov
inc
repnz
nop
lea
or
pop
dec
xchg
pop
pop
sbb
lahf
push
add
mul
lods
add
mov
pop
repz
sarb
psubq
inc
cli
jge
push
mov
fidivs
inc
es
jmp
inc
jo
pop
pop
mov
clc
or
mov
mov
cld
pop
add
xchg
fistl
xor
pop
mov
hlt
mov
mov
and
into
and
inc
ret
rol
rep
aam
lods
movsb
fcoml
icebp
sbb
nop
ret
xchg
test
aaa
int
sbb
add
iret
push
jae
lods
aam
sub
sub
sub
movsl
sbb
aas
sahf
rcrb
repnz
push
leave
scas
aas
xor
or
arpl
jmp
sub
enter
lret
shr
arpl
mov
mov
stos
xchg
lcall
fisttpl
lods
and
shl
pop
fisubs
filds
sub
test
sbb
cmc
in
mov
fs
fidivrl
add
add
mov
pop
lock
pop
test
sbb
js
imul
ficoml
push
sub
repz
imul
adc
mov
push
in
sub
inc
cld
xor
mov
mov
sbb
xchg
xchg
rcl
iret
es
push
mov
pop
dec
faddl
cmp
mov
enter
es
jmp
data16
cmpl
popf
add
je
and
outsl
xchg
pop
enter
stos
adc
mul
movsb
xlat
push
mov
push
jae
ljmp
and
pusha
mov
sub
sub
dec
jbe
nop
cmp
or
outsl
fnsave
dec
ja
test
dec
popf
fisubrl
int
stos
jge
dec
push
ret
mov
subl
sbb
push
push
int
jne
mov
cmp
rcrb
inc
push
add
or
cmpsl
divb
pop
out
push
sahf
push
mov
cwtl
mov
xchg
add
into
cmp
pushl
addr16
out
xor
and
fsubr
jl
mov
push
or
inc
cmc
push
mov
add
xor
lcall
mov
or
xchg
mov
das
mov
ss
insl
sahf
sarl
fwait
dec
lds
sbb
ret
cwtl
movsb
mov
pop
mov
imul
xchg
movsl
sub
imul
clc
shrl
push
mov
dec
xchg
loope
lret
testb
inc
ss
aad
inc
rcrb
xor
jecxz
pop
imul
mov
loopne
wbinvd
into
mov
outsl
pop
lret
std
arpl
mov
add
mov
lahf
nop
rorl
push
jmp
push
rcll
pushf
mov
insl
add
xchg
aas
dec
mov
cmp
dec
lea
lret
fisttpl
cmp
and
xchg
sahf
out
les
mov
dec
out
mov
aad
stc
mov
stc
sub
push
sahf
pop
scas
and
mov
mov
out
psubsw
inc
pop
mov
xchg
mov
adc
shl
mov
or
mov
gs
sub
stos
lods
imul
sti
push
jbe
arpl
testb
nop
lahf
inc
xor
sub
mov
and
out
push
jne
cli
aas
dec
sbb
js,pn
sahf
divl
ret
jle
cltd
ret
insl
imul
sub
shl
test
pop
rclb
ljmp
repz
push
test
push
jns
sub
sub
fs
mov
bound
gs
icebp
pop
out
mov
mov
lods
cmp
pop
inc
cmp
insl
clc
cmpsl
sbbb
xlat
mov
sub
or
push
dec
addl
push
gs
sbb
jne
jge
test
push
add
sub
lret
mov
sbb
push
fimull
push
jecxz
test
ds
shll
mov
pop
and
sti
rolb
adcl
stos
mov
movl
and
imul
ds
mov
mov
outsl
gs
push
gs
mov
loop
jp
push
mov
xchg
cmp
push
or
dec
imul
lahf
mov
push
adc
cmp
mov
jg
repnz
pop
stos
popf
add
jno
pop
lods
dec
scas
add
mov
sub
mov
xlat
push
jns
aam
add
jle
lret
jecxz
addr16
aad
push
or
and
bound
push
mov
sub
jo
imul
pop
or
sub
pushf
out
ss
andb
pop
mov
xchg
aam
inc
js
pop
insb
fsubrs
mov
fcmovnb
nop
fs
enter
lea
fmul
pop
out
test
ret
add
fiadds
jns
cmp
notl
pusha
mov
inc
jge
fbstp
les
rorb
push
stos
gs
aam
jne
dec
push
stos
cltd
xchg
pop
pusha
push
mov
dec
xor
ss
js
jne
add
add
or
pop
fidivs
hlt
lock
xchg
call
loopne
out
aad
mov
outsl
push
inc
test
pop
push
sbb
mov
out
push
stos
xchg
adc
leave
jb
stos
dec
add
mov
xchg
mov
out
es
add
and
movsb
js
sub
fistl
data16
push
aad
or
dec
sti
out
mov
shll
stc
fldcw
inc
cmc
inc
test
lods
mov
push
xlat
lea
jno
cli
jmp
popa
int3
pop
push
shl
fstpl
imul
mov
enter
and
pop
filds
bound
out
lret
adc
mov
cmp
mov
daa
hlt
cmp
or
xor
sbb
data16
inc
ss
aaa
sbb
add
mov
int
sub
fistpl
addr16
push
scas
pushf
xor
dec
fimuls
arpl
and
lahf
in
pop
in
data16
fld
push
cmp
fwait
imul
fiadds
ficomps
sub
jne
jno
sub
mov
add
mov
and
in
adc
push
pop
rcll
mov
xor
lret
mov
hlt
cmpsb
aam
inc
jmp
dec
cwtl
sti
mov
xlat
adc
jae
jecxz
dec
adc
repz
js
xchg
pop
push
mov
pop
imul
xchg
jl
aad
xchg
xchg
adc
xor
int3
sbb
cmpsb
pusha
loop
pop
mov
repnz
scas
xchg
adc
mov
test
adc
aas
cltd
pop
in
add
xchg
xor
xchg
sbb
cwtl
inc
xchg
mov
enter
aas
push
sub
stos
aas
push
dec
xor
xor
in
pop
es
out
xchg
mov
or
jbe
dec
stos
mov
push
aas
clc
xchg
ds
and
movsb
loopne
movsl
xchg
pushf
aad
xor
mov
mov
sahf
out
and
cmp
gs
gs
stos
xor
sbb
xor
inc
push
and
lret
sti
lds
or
cmp
push
mov
xor
lret
pop
test
jmp
test
gs
ss
or
ljmp
cmpsl
lea
sti
cmp
nop
cmpsb
adc
xchg
std
pop
lea
sbb
mov
push
mov
inc
dec
mov
sub
fwait
inc
push
pop
repnz
scas
insl
or
stc
arpl
ficoms
movsb
fstp
int3
xchg
and
xchg
push
decb
add
xchg
aaa
repz
out
dec
mov
fadds
xor
xchg
dec
ds
addr16
test
fnstcw
cs
test
pop
cmp
add
adcl
adc
adc
ret
in
jge
or
daa
test
popf
aad
fists
ficoms
add
jl
jbe
push
subb
cwtl
push
clc
cmp
bswap
mov
push
sbb
repnz
shrl
jns
ljmp
adc
ret
cs
in
and
cmp
adc
jge
pop
lock
sbb
popf
push
xchg
pop
mov
rclb
fwait
clc
ret
dec
std
xor
cmc
lea
jge
mov
jb
ds
ret
pop
in
cltd
xor
jmp
pusha
push
imul
sub
movsl
rclb
icebp
inc
jl
pop
test
mov
imul
jnp
popf
cmp
sbb
std
outsl
pushf
xor
pop
jb
and
cwtl
je
cmp
pop
jnp
xchg
jns
pop
les
xchg
push
sub
mov
orl
dec
pop
movsl
pop
push
ss
js
mov
inc
or
arpl
lret
push
mov
shll
ficompl
out
leave
out
fimull
daa
push
dec
and
and
dec
into
mov
sbb
xchg
xor
mov
add
dec
inc
jns
push
adc
adc
xor
or
jp
mov
out
pop
push
fdivrs
pop
outsl
rclb
das
pop
jnp
sub
cs
cmpsb
pusha
test
insl
xchg
inc
icebp
pop
xlat
aaa
jg
mov
pop
aas
mov
loop
cmp
add
push
pop
loopne
clc
mov
mov
ja
rclb
adc
mov
cmovne
pop
mov
bound
stc
mov
sub
mov
jl
pop
pop
out
mov
adc
call
stos
adc
pop
stos
pop
add
xchg
daa
pusha
adc
push
sub
fisubrl
jge
gs
xlat
adc
aad
scas
push
sti
in
call
jmp
push
mov
lods
std
mov
rcll
push
repz
cld
imul
add
mov
orl
daa
loop
push
xchg
add
inc
cmp
xor
and
mov
test
mov
iret
xchg
sub
std
xbegin
sbb
push
pop
jnp
jecxz
mov
adc
mov
jne
cltd
fildll
mov
mov
xchg
mov
jp
sbb
ret
lahf
add
leave
sub
aad
or
popa
cmp
in
mov
lea
imul
sub
add
fcomp
scas
leave
xchg
jne
insl
fildll
push
ja
ljmp
arpl
mov
inc
sub
add
mov
je
cld
loope
pop
xor
jecxz
mov
pop
mov
mov
mov
mov
or
sub
mov
jae
cmc
ret
inc
test
pushf
push
movsl
inc
cmp
mov
gs
daa
imul
fsubrs
inc
loop
in
dec
or
jecxz
jmp
mov
arpl
jbe
and
adc
xchg
test
lcall
cmp
dec
jecxz
push
test
mov
dec
xor
add
cmpsl
jl,pn
pop
or
fdivrl
pushf
xchg
dec
mov
cmpsb
stos
cmc
sbb
pop
push
cmp
and
xchg
fnsave
push
je
mov
fwait
push
jmp
fcoms
lea
mov
jb
subb
jmp
add
mov
mov
mov
jg
into
call
add
aad
inc
cmp
fs
cmpsl
jno
loop
scas
cwtl
pop
sbb
xchg
lcall
fstl
test
and
jecxz
xlat
mov
adc
jg
push
inc
dec
or
xchg
adc
mov
fs
lahf
stc
mov
jmp
sbb
adc
push
fsub
xchg
cs
mov
xor
cltd
fstps
in
idivb
cmpsb
pop
add
mov
xor
cmp
es
jne
pextrw
scas
push
js
xchg
je
xorb
mov
jno
int3
jp
or
aad
jno
pop
xor
pop
mov
iret
or
jo
je
mov
jbe
cli
push
adc
cmpl
cmp
xor
inc
ret
repnz
sub
jae
and
icebp
aam
repnz
stos
sti
mov
arpl
fisttpl
cmc
testl
stos
lea
dec
fs
aaa
sbbl
es
aaa
lods
dec
mov
xchg
imul
pop
pop
and
add
xchg
test
neg
call
std
or
xchg
dec
adc
ss
pop
imul
mov
inc
mov
or
mov
lods
and
inc
cmc
mov
cmpsl
mov
jle
cmp
jmp
jl
inc
fcmovne
or
outsb
dec
ds
add
sub
adc
or
cmp
mov
inc
and
leave
jns
int
imulb
jo
pop
mov
ss
push
mov
rclb
pop
mov
cmp
pop
xlat
mov
lods
push
xchg
es
sbb
and
insb
cmpsb
pop
inc
repz
fstps
lret
xchg
adc
dec
mov
jmp
cmp
dec
push
cmc
mov
aas
add
in
aam
test
sarl
aaa
mov
pop
adc
icebp
jge
mov
mov
push
mov
sbb
imull
cli
cmp
push
and
daa
sbb
inc
inc
mov
xchg
sub
lahf
inc
dec
lcall
jbe
pop
add
jle
or
mov
ja
push
in
loopne
shll
mov
in
dec
sub
mov
sub
sbb
das
nop
cmpsb
inc
xchg
ljmp
inc
sub
jae
repz
clc
inc
pop
out
lret
mov
and
push
fstpt
cmpsl
sub
insb
and
sub
es
je
xchg
movsb
loop
mov
or
lds
fistl
mov
or
add
inc
mov
test
iret
sub
ss
mov
fnstsw
push
jecxz
adc
cmc
cmp
and
aaa
jae
or
sub
push
xchg
mov
int
iret
std
js
imul
fistps
pop
xchg
or
mov
sbb
rol
sbbl
cmp
stos
or
inc
out
xor
xor
or
jge
sub
das
mov
jnp
inc
gs
cmp
icebp
push
jae
pop
xchg
mov
cli
xchg
sbb
sti
scas
call
sub
loopne
mov
ret
jecxz
hlt
push
lods
mov
shlb
dec
mov
add
push
xchg
mov
fsubs
mov
cwtl
push
adc
sti
or
ret
rorl
xchg
lds
into
or
mov
mov
jns
push
cwtl
pop
sarb
add
push
out
dec
mov
sub
cmp
push
imull
ficomps
pop
sahf
in
ljmp
loop
sub
sub
push
repnz
fmul
out
cmp
orb
cmp
jb
sub
xchg
xchg
xchg
sub
mov
and
push
push
or
test
add
loop
dec
mov
popf
cmp
mov
out
xchg
xchg
ss
test
ret
cmpl
dec
jg
mov
ja
add
insb
popf
pusha
daa
jnp
add
sbb
gs
in
scas
adc
clc
cltd
mov
loop
mov
fsubr
cmc
push
rcll
mov
incl
and
popa
sbb
adc
dec
imul
fwait
pop
scas
pop
jns
xor
mov
mov
scas
test
mov
inc
pop
and
lret
daa
mov
sbb
fnsave
in
pop
and
pop
inc
movb
setb
adc
mov
inc
add
mov
es
jg
xor
jl
das
sbb
inc
pop
data16
add
ljmp
repz
int3
mov
pop
leave
jae
outsb
repz
add
mov
jo
adc
divl
ja
add
out
adc
mov
sbb
cmpsl
jno
je
lods
lret
fstl
inc
lods
cmp
fscale
imul
pop
xlat
dec
or
cwtl
fdivr
cwtl
out
or
cld
test
stos
jg
aam
fldl
addb
cmp
movsb
flds
inc
push
jp
cmpsl
adc
dec
xchg
es
fisubl
nop
add
sub
lahf
int
cli
xor
cmp
add
out
popf
divl
movsl
pop
adc
lret
pop
mov
addr16
cs
sbb
inc
cmp
mov
mov
aas
mov
inc
addr16
enter
cmpl
dec
push
loope
pop
lods
fdivrp
aam
outsb
mov
pop
idivb
add
jmp
out
xor
in
cmc
add
pop
pop
into
adc
arpl
push
mov
into
aad
das
jp
stc
int3
xchg
je
iret
outsl
test
roll
xor
loopne,pt
mov
dec
and
mov
int3
mov
push
addb
je
cltd
sbb
mov
sahf
test
xchg
sub
or
lret
push
push
pop
xchg
jmp
fbld
popf
ss
mov
addr16
popa
xorb
sbb
scas
mov
mov
cwtl
mov
sbb
fs
fsts
decb
mov
scas
cmp
movsb
fldcw
out
in
rep
mov
jne
rolb
cld
in
js
lret
loope
sahf
and
or
cmp
int
divb
enter
scas
mov
xchg
inc
test
or
mov
cli
sbb
pop
inc
push
xchg
lcall
gs
fmuls
data16
and
sbb
imul
ja
pushf
sahf
outsb
push
jno
push
push
jmp
add
mov
xchg
icebp
cmp
mov
adc
hlt
push
adc
or
dec
arpl
loopne
fwait
sbb
push
jo
xor
or
sbb
fisubs
mov
xor
inc
mov
or
dec
jp
xchg
fldcw
add
cmp
push
insb
lock
or
in
and
daa
repnz
fcomip
mov
mov
push
repnz
filds
pop
xor
pushf
ljmp
push
xor
clc
or
lcall
lcall
xor
mov
push
loop
jnp
cld
or
mov
test
test
sti
lds
sti
out
cwtl
mov
dec
push
inc
scas
popa
sbbb
jne
mov
mov
add
xchg
cvtps2pd
daa
xchg
lds
pop
xchg
and
jae
addr16
movsl
lret
aaa
mov
or
xchg
pop
dec
push
insb
xor
add
cmpsl
and
xchg
and
test
mov
dec
and
sbb
gs
adc
cmpsb
push
cltd
dec
pusha
in
cmp
inc
cmpsb
cld
negb
imul
loopne
xchg
inc
mov
popf
aad
stc
sub
push
push
fmul
xchg
push
insb
push
cli
xor
cmp
push
sbb
jle
cmovnp
adc
jecxz
test
gs
pop
movq
xlat
shrb
repz
dec
and
fmuls
push
cmc
loop
jns
shlb
jbe
adc
idivb
xor
cmp
xchg
xlat
nop
push
mov
pushl
mov
jno
xchg
insb
lock
hlt
lahf
lds
repnz
dec
pusha
shll
in
jns
jl
pop
fwait
or
scas
lock
mov
lods
fstpt
test
cld
lcall
mov
add
or
mov
xchg
mov
insb
sub
clc
add
shr
jp
loop
pop
nop
test
ret
or
loopne
jns
push
pop
push
movsl
mov
dec
neg
cmpsb
mov
cld
or
sbb
scas
xor
cmp
rorl
xor
fucomip
mov
jb
xor
imul
push
inc
subb
fnstenv
lods
pop
ficomps
out
or
pop
popf
rorb
loop
sti
cmp
decb
xchg
out
lock
mov
mov
xor
loop
cli
pop
cld
out
push
add
pop
or
imul
xchg
popf
cmp
sub
leave
adc
xor
sbb
xchg
adc
mov
dec
movsb
xchg
xchg
lods
or
dec
jmp
aam
das
cltd
xor
mov
insb
sbb
and
movsb
or
push
vshufps
mov
fistpll
sahf
dec
aam
or
jle
mov
sub
cli
jmp
push
pop
ftst
test
cmp
or
cmc
add
arpl
divb
pop
jno
xchg
mov
xchg
or
sahf
outsb
lcall
sub
inc
xor
fimull
loope
rclb
mov
insl
xor
sbb
out
jne
adc
jne
inc
sub
ret
pop
jbe
jns
je
clc
adc
mov
pop
pusha
and
sub
mov
repz
cmpsb
test
and
cmp
sbb
shlb
cltd
pusha
inc
scas
inc
lcall
push
fsubr
repz
adc
movsb
xchg
fisttpll
aad
sbb
jbe
and
or
pop
xorl
sti
cmp
xor
lret
notl
sarb
mov
xor
idivl
lahf
in
mov
testl
in
imul
pop
mov
pop
std
popl
mov
push
sbbb
inc
jecxz
aaa
jge
ret
xchg
or
jmp
jle
and
mov
mov
test
sbb
rol
cmpsb
dec
in
cmp
sbb
stc
mov
scas
jbe
adc
pop
in
add
mov
mov
jae
stos
ds
sub
xor
movsb
ss
je
movsl
xor
dec
xchg
ja
lods
xchg
jp
insl
pop
jle
jl
mov
jo
clc
add
and
in
std
cmpsl
enter
fldl
or
sbb
xchg
cmp
in
lret
sub
loop
lea
jbe
pop
mov
fs
inc
push
mov
or
adc
adc
sub
shll
bound
pop
fnstsw
repnz
add
adc
shll
push
pop
lcall
out
cld
mov
fucomip
stos
in
jl
mov
enter
call
loop
scas
xor
sub
roll
xor
loopne
inc
and
outsl
pop
mov
std
rcll
push
xchg
adc
leave
mov
inc
loopne
push
push
push
cmpsl
add
mov
out
repnz
and
rcll
dec
mov
and
sub
out
out
dec
sub
and
shr
xchg
mov
inc
and
mov
aaa
inc
mov
dec
jle
adc
and
sbb
inc
push
loop
jne
cmc
cmc
je
shll
dec
icebp
adcb
popf
inc
inc
lcall
test
xchg
rol
xchg
lahf
dec
je
rcrb
loope
dec
ret
int3
scas
filds
xor
pusha
ljmp
scas
jle
jbe
lahf
andb
lds
flds
std
pop
std
rep
out
aaa
leave
dec
cltd
cmc
rcl
cmp
ficompl
subl
cltd
ja
push
cmpsb
mov
bound
mov
push
jnp
sub
std
ja
pop
das
pop
or
xor
ret
push
mov
mov
dec
lcall
clc
add
lods
gs
adc
push
push
ljmp
and
mov
mov
sahf
sub
mov
mov
or
inc
push
inc
inc
xor
xor
jg
cltd
movsb
stc
ret
cmp
jno
jp
inc
sub
out
cmpsb
pop
pop
push
fldl
xor
orb
fdivrl
mov
sbb
data16
pop
scas
out
andb
mov
add
sarl
inc
adc
mov
dec
inc
sub
dec
test
scas
test
test
sbb
div
sub
inc
jecxz
xor
xor
push
movsb
xchg
addr16
jnp
sub
sbb
mov
xchg
mov
add
test
xor
or
inc
mov
orb
pop
xor
lahf
daa
ljmp
loope
xchg
bound
push
sti
xchg
mov
mulb
push
push
cli
pop
lods
and
nop
loope
bound
add
hlt
pop
aaa
mov
fwait
or
cld
mov
cmc
mov
fsubl
pop
sub
xor
lods
cmp
adc
or
xlat
pop
cmc
sub
cmc
and
imul
insl
lcall
iret
push
mov
stos
bound
rolb
adc
adc
cld
pushf
or
daa
xor
mov
mov
fcmovnbe
jno
lods
or
icebp
or
or
xchg
push
out
sahf
movsb
stc
faddp
jb
push
mov
fldt
mov
std
adc
fnstsw
rorb
cld
lock
mov
adc
lock
out
icebp
push
push
xchg
dec
xchg
xchg
sub
test
xchg
sar
fildl
lods
in
and
push
mov
in
test
ss
aad
hlt
fwait
mov
test
in
lret
cmp
fmul
das
data16
push
push
jge
in
xchg
cmp
aad
sub
lea
and
cld
add
pop
daa
into
rorb
xchg
cs
movsb
ror
das
insb
mov
popf
fmull
shrb
xchg
popa
adc
test
xchg
cli
xor
movsl
daa
add
jle
adcb
ds
pop
popf
ret
xchg
jecxz
into
mov
dec
add
xlat
ja
add
fcompl
test
out
ror
aas
out
icebp
and
push
ds
xchg
jecxz
into
dec
insl
pop
dec
sti
dec
push
cld
fnstsw
insl
sbbb
fmul
dec
lods
adc
and
mov
adc
add
dec
in
aaa
jbe
cmc
or
jbe
into
cmp
inc
stos
mov
push
gs
test
pop
xchg
dec
movsl
and
mov
inc
jae
aam
and
adc
sahf
mov
xor
jo
repz
movsb
shll
nop
xchg
xchg
push
dec
xlat
sbb
mov
push
adc
lea
cmp
jmp
dec
nop
popf
inc
jo
into
lea
ficoml
mov
loopne
push
int
or
in
or
sub
and
dec
arpl
push
dec
arpl
std
mov
mov
ja
or
lock
out
aam
xor
js
std
xchg
push
lods
sbb
cmc
in
push
or
jmp
jb
pop
out
fimull
leave
fs
outsl
jno
lods
push
xchg
and
pop
adc
out
cmp
push
lods
mov
repnz
sbb
aas
loop
popa
adc
jb
mov
mov
fdivrp
xlat
and
outsl
aaa
xchg
gs
out
movsb
loopne
push
js
and
push
inc
dec
dec
xor
in
sbb
cmpl
cmc
mov
or
push
cmpsb
xlat
push
aad
jnp
jno
push
not
addr16
por
xchg
stc
inc
jg
jecxz
clc
icebp
push
imul
jbe
push
mov
shll
lods
mov
mov
cwtl
in
mov
ja
repz
mov
xchg
pop
test
adc
ret
inc
mov
dec
cmpsl
inc
mov
cmp
xchg
push
mov
aas
pop
pop
fildll
cmp
fbld
mov
push
xchg
sub
push
movsb
mov
out
test
adc
mov
push
in
ljmp
sahf
fcompl
fbstp
mov
inc
fstpt
push
inc
xchg
sub
push
sbb
loopne
xor
jno
sub
andl
in
ss
mov
jg
dec
sbb
xchg
rcrl
xchg
fimuls
pop
pop
adc
aam
insb
mov
sahf
sub
jo
popa
xchg
in
cmpsl
add
or
data16
or
dec
adcb
subb
inc
inc
in
call
std
mov
iret
jnp
call
shlb
cmp
icebp
sub
in
cmp
adc
xchg
aam
outsb
jmp
ret
sbb
add
insl
call
xor
test
lret
roll
stc
xchg
or
repnz
inc
repnz
ds
and
xcrypt-ofb
cmpsl
sub
xchg
negb
popa
xchg
pop
or
and
mov
xchg
xchg
popa
mov
lret
sti
xchg
mov
lods
mov
mov
dec
icebp
lahf
push
xchg
insl
sbb
es
mov
pop
cltd
ds
test
shr
cli
es
dec
pop
in
xor
repnz
inc
arpl
add
mov
jle
push
xlat
mov
xchg
push
lret
or
inc
daa
xchg
in
cld
pop
mov
cmp
xchg
loop
mov
loop
mov
jmp
test
xchg
gs
jle
inc
push
mov
fldl
es
lret
inc
or
sarl
test
push
sub
add
push
sbb
jmp
and
xlat
push
arpl
mov
adc
push
push
xchg
fisubrl
popa
fucomip
shrl
daa
sarl
scas
jmp
sbb
sbb
mov
mov
aam
out
mov
cmovo
mov
sbb
popa
bound
fisubrl
decl
sub
mov
push
test
jno
arpl
sub
jl
xlat
das
repnz
jecxz
jg
mov
int
pop
test
push
pop
sub
jle
or
movsl
fcmovb
int
cld
adc
dec
push
mov
dec
jne
nop
imul
divl
xchg
mov
jle
cmc
xchg
jo
jp
int3
aam
add
dec
test
xor
in
xor
add
mov
inc
in
jo
test
repz
sahf
lret
int3
add
rcrl
das
data16
mov
cli
inc
xor
pop
aaa
or
fsubrl
mov
movsl
ss
mov
imul
mov
dec
cmpsb
out
pop
push
adc
sbb
cmp
mov
jbe
stc
mulb
jns
mov
pop
inc
pop
dec
repnz
sub
sub
mov
adc
adc
or
pushf
outsl
and
or
mov
lahf
sbb
sahf
loop
or
in
lret
hlt
lret
jl
mov
movsb
imul
arpl
jl
push
mov
fldl
jg
lock
incl
ljmp
cwtl
dec
scas
outsb
arpl
pop
cmp
aaa
and
daa
sbb
pop
stos
sub
inc
scas
sarl
and
add
fcmovne
mov
mov
or
lds
test
pusha
mov
ret
xchg
mov
icebp
iret
mov
cmp
sub
fs
out
je
cmp
xor
das
xchg
xchg
pop
shrl
es
adc
sbb
jb
mov
push
fistps
xor
dec
int
scas
aad
shll
jns
pusha
cmpsl
pop
lods
lods
loopne
or
aas
test
ja
sbb
xchg
cwtl
jbe
cmp
mov
out
cmp
movaps
nop
sbb
pusha
xchg
adc
aaa
sub
push
sbb
and
cmc
jl
imul
cli
jns
cmp
add
jg
xor
push
mov
mov
fidivrs
jecxz
mov
push
pushf
hlt
daa
pop
pop
xchg
lock
inc
or
pop
push
nop
pop
dec
lret
aas
jecxz
ficoms
dec
enter
lods
jbe
inc
jmp
sahf
and
cmpsl
dec
or
cmp
lea
shr
pop
or
int
and
jne
bound
sub
and
cmp
pop
mov
jmp
popf
and
cmpsl
dec
cmp
sub
jae
dec
or
sbb
sti
mov
call
mov
pop
pop
mov
inc
jne
fwait
cli
nop
pop
int
dec
stos
fidivl
in
jg
hlt
inc
jl
sarb
cmp
sub
add
pop
std
and
jge
sahf
add
call
push
xchg
pop
loopne
push
dec
push
loopne
adc
outsl
js
xchg
loopne
lods
adc
js
xchg
mov
popl
pop
mov
leave
sub
mov
rcrl
testb
add
popf
out
clc
mov
or
popf
add
shlb
test
pop
xor
shll
cmpsl
mov
add
pop
and
cwtl
mov
adcl
adc
mov
movsb
mov
push
gs
xor
arpl
outsl
add
xor
lods
jo
mov
fisubrs
cmp
gs
mov
inc
mov
stos
sub
inc
ret
movsl
lea
mov
inc
fdivl
outsl
cmp
lcall
or
sbb
ret
pop
xchg
inc
and
dec
test
cwtl
cli
sbb
out
pusha
mov
inc
cmp
negl
js
lods
clc
push
xchg
test
and
jb
adcb
mov
je
sti
das
xor
outsb
add
pop
push
shl
sub
push
mov
dec
sbb
les
mov
lret
or
or
pushf
cmp
repz
lcall
fdivrs
das
je
jae
add
fcomps
mov
insb
mov
jl
lods
add
bound
cmp
pop
cmp
xor
rol
and
xor
std
mov
or
cmp
cwtl
jle
loope
clc
inc
pop
add
and
pop
push
add
fdivr
stc
aaa
ret
pop
stos
push
mov
outsl
test
sub
sbb
xchg
dec
sbb
sub
push
test
lcall
shll
xor
shlb
out
jg
movsb
add
mov
pop
imul
jge
stc
jle,pn
test
mov
mov
fisubrl
jnp
outsl
sarb
je
lods
bound
imul
rol
fmull
insb
test
fadds
jg
and
mov
mov
out
dec
mov
push
pushf
xor
xor
adc
sub
push
pop
mov
sub
frstor
xchg
pop
popf
fadds
int3
xchg
loopne
push
fisubl
cmp
or
inc
cs
or
add
sbb
jb
notb
adc
mov
daa
std
inc
in
daa
mov
pop
dec
test
adc
ret
xlat
ret
hlt
imul
sub
mov
pushf
outsl
push
loopne
cmp
push
sub
ret
mov
aaa
mov
fisubrs
es
sub
ret
insl
push
mov
repnz
dec
jmp
dec
aam
xchg
and
mov
mov
std
xor
xchg
xor
cltd
shrl
xorl
lcall
fistpl
inc
mov
mov
pop
insb
rol
xchg
dec
stos
xor
fsubl
sub
inc
push
xor
int
push
gs
sub
cmc
mov
mulb
andb
dec
fnstcw
int
in
insb
rolb
xchg
and
imul
pop
jno
addl
shl
adc
cwtl
sub
sub
or
iret
xlat
je
repnz
and
push
repz
scas
or
mov
fwait
mov
aad
sbb
std
mov
or
pop
or
cmc
mov
jns
push
jl
lret
and
cmp
aam
clc
inc
mov
sub
les
xchg
outsb
pushf
inc
fmulp
inc
andl
push
mov
std
sbbl
inc
mov
test
bound
lods
cmpsl
or
jecxz
inc
lock
gs
push
sbb
push
adc
in
mov
pop
fwait
bound
inc
jne
cltd
xchg
xchg
nop
test
call
enter
xchg
lret
sub
and
jb
shll
dec
cmp
lcall
stos
or
add
or
sbb
xchg
or
dec
inc
insl
xor
mov
adcb
sub
and
lret
lea
or
dec
je
call
push
dec
loop
icebp
aaa
addr16
fninit
mov
cmc
mov
nop
hlt
inc
rcr
or
cwtl
xlat
xchg
stos
or
mov
mov
sub
pop
mov
clc
fisubs
test
call
addb
mov
mov
add
mov
jp
iret
fiaddl
sub
xor
ret
shrl
cmovp
or
outsb
clc
js
es
cld
test
sbb
fists
adc
sbb
aaa
mov
cli
jns
jecxz
imul
add
ret
aam
add
xor
mov
test
jl
lret
stc
outsl
mov
sahf
xor
fdivrp
nop
shll
stc
insl
fiadds
enter
or
mov
sarl
das
in
jo
add
lcall
aad
pop
fs
dec
inc
fsubrl
lds
sub
dec
ss
fs
mov
shlb
test
lahf
test
dec
and
sub
push
inc
insb
sub
xchg
push
je
flds
mov
leave
pop
icebp
cwtl
loop
bound
aad
mov
mov
jnp
jnp
fistpll
jnp
push
out
out
aas
inc
cmc
into
mov
or
mov
mov
sub
push
mov
jbe
xchg
push
leave
xor
ficompl
mov
mov
sbbb
jno
ja
call
adc
je
arpl
inc
push
and
ret
jns
dec
mov
push
or
jnp
jmp
and
cmc
mov
jmp
jecxz
jno
ljmp
jecxz
arpl
iret
sahf
pop
or
pop
aam
mov
test
pop
mov
add
aas
xor
movl
sbb
leave
push
jbe
inc
jge
dec
inc
xchg
lods
push
ud2
xchg
idivb
sub
out
fstps
mov
jnp
mov
nop
hlt
pop
stos
pushf
mov
jnp
xlat
lahf
cmc
paddusb
xchg
xchg
dec
adc
pop
xchg
xor
jno
adc
or
and
aad
add
fistps
push
cwtl
stos
test
mov
push
mov
inc
int
jne
adc
pop
pop
inc
mov
inc
lods
lahf
pop
sub
sahf
pusha
jmp
and
mov
push
repnz
push
add
sub
sub
das
orb
enter
enter
push
pop
mov
sti
xchg
je
and
jg
mov
add
cmpsl
ret
mov
sarl
aas
push
lahf
and
daa
mov
addr16
aam
nop
out
xor
shl
andb
shr
fdivr
sti
dec
inc
in
ja
sti
adc
adc
bnd
das
mov
add
jb
inc
push
inc
in
nop
push
and
mov
test
lret
into
sub
jno
mov
xchg
mov
leave
add
inc
dec
push
add
adc
fcomps
decb
fldenv
sahf
ret
orps
push
cmp
xor
mov
cmp
or
and
cmp
orb
insb
test
xor
pusha
xchg
sahf
jge
ljmp
pop
insb
das
cmpsl
cmp
clc
push
cmp
out
out
clc
lock
addr16
jae
adc
inc
pop
test
add
in
insl
movsb
pop
test
sub
ja
add
or
fimuls
int3
icebp
rclb
fildll
sbbb
insl
imul
ret
repz
cli
movl
xchg
inc
insl
jnp
and
push
or
cs
adc
scas
jbe
push
enter
out
call
les
lret
pushw
stos
fwait
adc
pop
popa
jo
aad
jb
mov
xchg
gs
xor
xor
mov
and
jle
sbb
mov
scas
inc
aas
xor
mov
add
inc
inc
xor
cld
scas
rolb
mov
outsb
xor
mov
cmp
dec
dec
sbb
and
dec
rcl
or
or
sub
cld
adc
das
test
clc
pop
stos
mov
adc
imul
inc
sarl
push
jg
push
dec
push
nop
jo
out
cmp
loope
xor
pusha
pop
stos
or
ret
pop
jne
incl
and
in
int
out
mov
fsubrs
and
sub
popa
jb
mov
in
dec
push
adc
mov
inc
sbb
dec
add
gs
imul
into
mov
das
cmp
rcrl
in
pushf
enter
cmp
jp
xchg
fimull
lods
cltd
fucomip
jb
loope
cmp
pop
iret
mov
and
sbb
xchg
int
pop
pop
clc
xor
pop
mov
xchg
fisttps
movsl
jge
sahf
fs
clc
enter
cltd
sub
cli
and
pushl
clc
insb
jmp
dec
sub
dec
xlat
aas
imulb
sti
pop
rol
fistl
push
sbb
inc
fcmovu
add
add
popl
push
jle
pusha
xchg
jmp
fsubrl
cli
lods
cmc
inc
jnp
cs
ret
cmpsl
dec
xor
outsb
lods
mov
rcll
mov
js
loopne
mov
jb
mov
mov
jg
insl
xchg
icebp
lcall
ss
mov
push
mov
xor
mov
je
cmpsl
xchg
and
sub
daa
aaa
cmp
fucomp
mov
xchg
xchg
divb
scas
mov
xchg
outsb
nopl
imul
popa
push
xor
pusha
rep
add
lock
bound
mov
je
out
daa
cmp
add
fcmovu
les
fbstp
mov
or
lcall
add
push
stos
fisttpl
aaa
cmpsb
add
lahf
int
xor
adc
adc
mov
cltd
mov
into
cmp
fs
fstps
outsb
cmp
test
jecxz
std
pop
inc
cld
sbb
lret
sub
lret
js
inc
aam
cmp
sub
jae
dec
or
aam
ss
fdivs
popl
mov
inc
sarl
lods
and
xchg
rclb
mov
pop
fwait
dec
cli
pusha
repnz
and
or
shlb
test
out
sbb
mov
cmp
xor
or
scas
arpl
lahf
pop
cmpsb
mov
repz
inc
ret
xchg
jp
mov
nop
test
in
mov
mov
lods
test
jb
or
push
dec
add
fisubrl
shll
mov
dec
mov
ljmp
adc
int3
adc
jb
or
inc
xor
loopne
mov
add
add
adc
sub
push
cld
ljmp
xor
mov
ljmp
js
movsl
mov
mov
mov
xor
into
pop
call
fnstcw
pop
mov
push
ljmp
and
mov
jns
repnz
cltd
or
enter
pop
cltd
pop
mov
pusha
fcoms
sbb
adc
sub
std
cmp
das
jns
test
adc
xchg
ljmp
test
sbb
dec
or
xor
cmpb
add
mov
add
or
jo
fcoml
dec
in
movsb
add
andb
mov
xchg
mov
outsl
dec
adc
adc
xchg
push
loopne
sar
xchg
add
inc
stos
rolb
out
mov
xor
imul
or
dec
mov
or
add
call
std
mov
push
cmpb
jge
mov
cs
push
out
loope
mov
sub
dec
mov
dec
or
sbb
cmpsb
xlat
jle
pop
mov
mov
inc
and
sub
out
mov
stos
push
jle
sbb
cmc
fsub
bound
cmp
jmp
and
fadds
mov
je
repnz
ret
shll
iret
nop
add
cmc
pop
jmp
shl
sbb
popf
addr16
inc
mov
adc
push
jl
into
inc
call
dec
mov
add
cmp
inc
lds
jo
pusha
and
rcll
icebp
mov
decb
sbb
jle
test
rcl
addl
movsl
icebp
jb
cmpsb
insl
pop
in
mov
cmp
jbe
push
leave
imul
shl
mov
lret
cwtl
jg
mov
addr16
sbb
pop
xor
int
xlat
mov
xor
cmpsl
push
add
cmp
push
xor
cmp
insb
inc
sub
std
loop
push
lea
or
inc
adc
sub
xchg
pop
pop
in
cmpsl
cmpsl
and
insb
leave
and
jmp
fs
int
push
sub
or
in
imul
cmp
xchg
mov
in
sahf
clc
cmp
dec
adc
inc
iret
xchg
or
outsb
fwait
jno
repnz
fidivrs
adc
jg
insl
cld
or
push
cli
addr16
pop
push
push
lcall
inc
cmp
imul
mov
das
cwtl
adc
test
sub
cmpl
daa
push
aaa
jmp
mov
and
cwtl
adc
ret
ja
inc
push
mov
dec
push
loope
mov
imul
cmp
into
jp
int
inc
inc
scas
lods
dec
jno
mov
cmc
xchg
mov
xor
cmp
psllq
dec
inc
mov
cmpsl
cltd
cmc
dec
sbb
pop
int3
xor
fldt
ljmp
or
or
jns
cs
lahf
push
subb
imul
sbb
insb
jp
sub
or
jmp
test
mov
sbb
negb
push
call
sub
jb
aad
xchg
je
pop
xchg
dec
dec
mov
dec
sub
mov
mov
push
mov
pop
mov
cmp
lahf
cs
je
cmp
jge
popf
ret
dec
push
xchg
dec
sub
popf
inc
or
mov
sti
lahf
mull
sbb
pop
mov
inc
jno
cmpl
sub
and
dec
sub
cmp
sub
mov
jge
add
sbb
inc
add
pop
popa
adc
lock
adc
mov
stc
inc
call
in
into
test
sahf
sbb
add
inc
sub
gs
lret
inc
jae
or
pop
lret
in
or
xchg
js
sub
mov
inc
call
inc
clc
or
jge
inc
pop
mov
aaa
and
into
xchg
and
dec
lcall
aad
in
std
inc
fistpl
lcall
cwtl
aad
fiaddl
pop
jle
jae
js
xor
bound
add
mov
push
lods
iret
das
xchg
jae
fwait
movsl
jl
cmovo
jp
push
ss
pop
push
fs
fmuls
jb
out
ss
sub
push
push
cltd
mov
jmp
xor
xlat
idivb
pop
push
leave
ss
movsb
adc
inc
lds
jae
and
ljmp
mov
jns
repz
mov
xor
mov
loopne
jle
gs
xchg
push
mov
stc
repz
cmp
shll
add
mov
lahf
les
outsl
sbb
popf
jp
jo
loop
lds
fsubr
adc
orb
cmpsl
into
mov
bound
jmp
sbb
xchg
les
ja
js
mov
sbb
dec
aaa
cmp
aas
push
mov
jl
shlb
dec
add
test
int3
loop
daa
imul
push
jae
jge
ljmp
scas
jmp
add
add
pop
push
je
aad
lods
pop
inc
aas
xchg
xchg
lret
cmp
call
dec
pop
lods
add
out
lea
mov
jmp
out
scas
push
and
nop
mov
adc
mov
xor
filds
addr16
outsb
out
or
sahf
mov
xor
push
data16
ret
ret
jns
pop
jbe
movsl
int3
filds
subb
dec
push
mov
mov
pop
mov
pusha
lea
sbb
movsb
jle
dec
jle
in
push
push
jnp
lahf
or
jmp
push
out
andb
rcll
repnz
and
mov
xchg
push
pop
adc
cli
mov
mov
pop
out
mov
push
xchg
enter
jns
sub
cmp
inc
xchg
sub
std
cmp
pop
jl
jnp
pop
das
dec
in
pop
sbb
loopne
sub
mov
stc
sub
or
ljmp
out
push
xchg
push
ror
sbb
mov
aad
ret
jge
dec
add
xor
xchg
lcall
scas
fcompl
hlt
xchg
cmpsb
cld
shlb
inc
imul
movsl
imul
xlat
cmp
jne
lods
ret
and
mov
xor
xlat
dec
xor
push
out
push
paddusb
or
dec
inc
adc
xchg
not
outsl
xchg
dec
dec
in
push
cmpsb
mov
mov
mov
stos
aas
push
ret
fwait
xchg
idivb
add
cli
stc
jb
fs
add
jo
mov
add
xchg
xor
popf
adc
cli
hlt
mov
push
stc
sub
push
mov
or
pop
cmp
daa
xor
fidivrl
test
data16
inc
and
adc
adc
xor
inc
scas
loopne
ja
repnz
fwait
or
sahf
and
call
push
cs
xchg
cmp
sbb
sbb
dec
mov
enter
out
loope
cmp
and
adc
es
orl
inc
dec
repz
xor
jne
int
int
dec
ret
add
aas
xchg
out
jmp
pop
scas
scas
push
test
xchg
mov
cmp
push
inc
or
xchg
outsl
sbb
fbstp
adc
loopne
lret
idivb
lcall
mov
xchg
lahf
nop
movsb
adc
jb
mov
mov
jae
sbb
add
mov
push
pop
imul
sub
xor
xchg
xor
jecxz
add
aas
daa
jno
mov
inc
es
mov
aaa
stos
push
pop
ds
mov
bound
es
adc
mov
push
fstps
cltd
arpl
shl
arpl
pop
push
or
fmuls
repz
cmp
xchg
mov
jns
stc
je
lcall
mov
test
add
sbb
pop
in
dec
jne
fdivrp
out
add
cmp
adc
pop
insb
pop
and
in
xor
push
outsb
add
inc
fstps
lods
popf
pop
shl
stc
in
aam
inc
das
mov
insl
fs
aam
lret
mov
or
or
fwait
enter
inc
fldl
bound
cmp
call
fnstcw
icebp
jo
fcoml
sar
mov
jo
andb
rorl
pop
mov
jle
aam
pop
xchg
test
sbb
out
sbbl
adc
jnp
or
les
int
sar
repnz
out
xchg
xor
inc
push
mov
repnz
lret
jns
xor
cmp
push
mov
mov
xchg
or
jbe
jg
mov
sarl
push
call
xacquire
jg
adc
adcb
addr16
inc
in
xor
sub
test
cmp
xor
xor
sbb
push
out
repz
add
in
sub
lret
notl
out
in
pop
loop
cwtl
sbb
xor
iret
xchg
dec
xor
push
mov
mov
mov
or
js
pop
push
lea
sti
iret
cwtl
mov
sarl
ljmp
fbstp
mov
xor
and
aaa
and
xchg
mov
or
fs
dec
push
imul
inc
inc
inc
mov
mov
or
sbb
fcmovnu
stc
outsb
icebp
sub
jb
mov
orb
pusha
xor
outsb
mov
and
add
fldcw
xchg
dec
mov
add
cltd
lahf
xchg
pop
scas
into
inc
dec
fimuls
push
dec
rcr
mov
fdiv
sbb
mov
std
jecxz
popf
fisubs
sub
pop
sbb
fmull
mov
or
xchg
add
subl
adc
and
repz
mov
hlt
sti
decl
xor
cmp
cltd
dec
fidivs
jno
xor
stos
sub
clc
mov
aaa
jno
mov
js
mov
mov
jmp
xchg
daa
lahf
push
sub
jg
addl
pop
repnz
sbb
pop
adc
jno
int
push
and
sbb
rcll
mov
cltd
adc
frstor
int
bswap
adc
popa
push
push
xchg
call
or
mov
mov
cmp
orb
jg
sbb
push
call
cmp
andl
sbb
movsl
test
and
aad
in
insl
jge
repnz
adc
popa
stos
pop
mov
mov
data16
and
mov
xchg
adc
adc
ret
mov
pushf
sbb
cmpsb
adc
cmpsb
pop
ss
jle
sahf
dec
mov
pop
lock
mov
loop
pop
int
mov
lret
add
roll
or
stc
sub
inc
scas
aam
lret
dec
and
jnp
loope
jecxz
loop
or
mov
loope
repnz
jp
or
adc
push
or
mov
jne
push
out
sbb
movsb
push
pop
jge
dec
shll
and
shll
add
lock
rclb
xchg
out
ja
dec
jp
sbb
add
ret
inc
and
push
or
cli
mov
loop
lds
aad
mov
nop
add
mov
test
or
add
pushw
lea
aaa
sarl
dec
and
push
jnp
ja
in
xchg
out
iret
inc
dec
inc
out
rcll
pop
xor
mov
jl
pop
int
xchg
cmp
adc
mov
pushf
or
and
sbb
jl
jmp
xchg
fdivrl
add
ret
xchg
and
arpl
and
add
lahf
je
and
std
dec
cmp
jae
mulb
sub
stc
sbb
mov
aam
pushf
jle
sbb
sbb
loopne
xchg
es
mov
cmp
xor
add
or
mov
xor
mov
jmp
mov
scas
fwait
push
ljmp
push
icebp
jg
mov
mov
mov
add
xlat
inc
stc
stos
test
inc
and
or
lret
out
cmp
lods
mov
cltd
pop
in
leave
mov
xchg
nop
pop
daa
push
call
mov
sahf
jno
jns
pop
enter
jo
add
rcrb
in
inc
sbb
sub
cli
das
dec
pop
push
pop
pop
push
mov
adc
jle
pop
lods
pop
mov
test
das
ss
rclb
or
xchg
sub
test
mov
add
add
vpmacssww
sarl
push
sbb
sar
mov
dec
lahf
fistps
pop
sbb
adcl
or
lds
and
or
daa
mov
pop
inc
out
imul
and
push
lret
pop
out
das
outsb
pop
jle
mov
test
push
aam
inc
dec
inc
lock
popf
outsb
cmp
daa
sub
lock
fsubrs
int3
clc
jnp
adc
jae
mov
lds
test
test
inc
test
mov
cmp
dec
cmp
add
sarl
pushw
jecxz
sub
add
ret
jno
imulb
or
jbe
xor
call
add
sbb
push
sub
pop
icebp
out
ret
inc
jno
sub
movsl
scas
je,pn
mov
jg
filds
adc
lea
popa
sbb
inc
notl
sti
mov
or
fbld
adc
adc
fbstp
mov
arpl
cltd
in
stc
cmp
lahf
int
or
or
xchg
mov
psadbw
pushf
xor
mov
insb
in
bound
dec
lods
sub
push
js
out
cld
push
add
add
xor
xchg
adc
dec
lock
out
cmp
inc
mov
repnz
dec
and
mov
sub
sti
repnz
jne
pushf
push
out
nop
mov
lcall
sbb
push
out
arpl
idivb
pushf
sbb
or
push
dec
mov
jnp
fimuls
cmp
pop
jno
push
fcmovu
and
lods
orb
enter
dec
leave
xor
out
outsb
mov
xchg
pop
mov
jl
adc
mov
fcompl
sub
sahf
cmpsb
xlat
jb
fstpt
jge
mov
dec
popa
jnp
jp
fsubrs
pop
scas
mov
insb
filds
or
or
mov
js
in
adcb
adc
das
pop
sti
inc
sub
push
cmc
insb
adc
or
aaa
xchg
ret
and
xor
stos
jmp
xchg
scas
cmp
loopne
xor
arpl
in
xor
push
dec
jns
cmp
dec
dec
movsb
arpl
push
and
rclb
repz
mov
jg
push
or
sahf
fsubp
sbb
jo
loope
test
add
nop
jnp
push
cmpsl
jne
cmp
mov
out
test
push
mov
mov
into
hlt
arpl
mov
inc
scas
mov
xor
jae
repz
mov
dec
loope
inc
adc
adc
dec
cmpsl
cmp
nop
add
push
adc
dec
xchg
push
push
pop
xchg
mov
ret
sub
fcoms
jae
in
or
mulb
loop
add
lret
xor
cmp
insl
sbb
cmp
movsl
push
jmp
inc
push
cmp
inc
push
inc
insl
iret
push
xchg
cmp
gs
outsb
cmp
jo
mov
fwait
stos
xchg
xor
repnz
xchg
xchg
rclb
loop
mov
mov
mov
mov
lds
add
inc
mov
sub
push
sbb
les
push
add
xchg
mov
dec
and
popa
xorb
clc
icebp
clc
rorl
push
cmp
ljmp
scas
push
sub
repnz
dec
addr16
xchg
jno
push
iret
sub
mov
lret
mov
push
sub
pop
repnz
mov
jl
inc
pop
pusha
les
adc
in
jo
mov
aas
inc
les
rcrl
sbbb
sbb
xchg
jle
xor
test
loopne
dec
je
and
dec
out
sbb
inc
or
jbe
inc
dec
mov
stos
jle
mov
fwait
mov
stos
in
xor
std
xchg
cmp
push
jge
push
push
stos
adc
inc
sub
std
shr
add
das
stos
jno
fwait
loop
mov
cmp
shl
jns
je
push
rolb
shll
jb
idivl
sbb
push
je
daa
aad
and
sbb
stos
mov
decb
pop
out
xor
les
adc
ret
je
pop
sub
push
shlb
add
in
mov
and
ds
out
xchg
mov
add
rcrl
xchg
add
mov
fdivr
add
xchg
xlat
mov
push
test
in
dec
jecxz
mov
sti
stos
rclb
out
ret
jbe
inc
cmp
xchg
addb
mov
or
in
dec
dec
mov
fwait
push
ror
es
xor
lea
jmp
cmp
jl
aaa
stos
loopne
je
rol
repnz
xor
xchg
movsb
mov
clc
mov
sub
mov
sbb
jbe
scas
outsl
pop
xor
lods
ljmp
dec
lock
loopne
pop
mov
fadds
add
jnp
jge
lds
fs
sbb
and
ljmp
cltd
mov
mov
cmpb
fucomp
cmp
sahf
cmp
dec
xor
xchg
fists
jl
pop
js
or
jp
test
shll
lods
xor
xchg
loop
inc
and
test
popa
push
mov
mov
icebp
sub
mov
loop
xchg
les
sub
std
mov
out
cmp
and
fdivrl
enter
mov
fdivl
out
jp
jne
mov
and
decl
or
or
cmp
mov
xchg
stos
sub
mov
cmp
icebp
xlat
mov
lahf
shlb
inc
mov
push
clc
push
rcrl
add
dec
push
adc
cmp
mov
negl
addb
adc
mov
adc
dec
and
adcl
jb
lahf
aad
push
cltd
cmp
inc
lea
in
cwtl
xor
jo
add
mov
fldlg2
mov
pop
andl
dec
in
mov
push
xor
loop
xor
cmpsl
mov
mov
fdivrp
adc
sbb
rcrb
push
ss
std
sub
push
mov
mov
xchg
mov
inc
cs
push
fwait
mov
add
outsl
push
jle
int3
inc
mov
mov
lds
incb
ret
outsb
cmpsl
xor
test
pop
in
dec
sbb
mov
jne
mov
rcll
pop
xchg
call
pop
adc
push
rolb
test
xor
stos
ds
add
dec
ret
cmp
lods
add
jbe
ret
pop
movsl
cld
in
imul
and
inc
adc
xchg
pop
sub
aam
sub
xchg
dec
xor
iret
shll
mov
xor
add
stc
dec
scas
jno
js
lock
dec
xchg
fmulp
sbb
notl
inc
xchg
aas
jbe
int
sub
cwtl
push
in
insl
imul
and
mov
push
pop
mov
mov
mov
shrb
sti
push
push
in
mov
dec
movsl
pand
dec
jbe
pop
std
pop
dec
push
inc
jg
mov
add
jne
cmpsl
fdivrs
push
sub
cmp
rorl
jb
hlt
leave
add
dec
lds
loopne
test
notb
lds
loopne
loope
xor
add
pminsw
fiadds
jl
jmp
mov
lods
loopne
insl
icebp
enter
imul
ss
clc
pop
pop
lods
pop
js
dec
add
loop
mov
mov
aam
jge
adc
jae
cmp
into
xchg
xor
or
lcall
mov
sarb
xorb
mov
jp
mov
xchg
sbb
mov
aaa
jnp
cwtl
mov
xor
mov
push
pop
mov
push
cmp
sub
pop
cmp
es
mov
xchg
pop
mov
iret
stc
test
int
addr16
loop
and
xor
jns
inc
into
data16
lock
push
cmp
or
mov
ret
pop
xor
pop
mov
add
add
mov
in
jle
lds
and
repz
push
nop
xor
mov
pop
test
incl
push
loope
push
sub
out
sub
pop
mov
mov
aas
lret
cmc
pushf
cwtl
add
test
aam
stos
xchg
lods
call
insl
sbb
mov
xchg
mov
sbb
out
pop
xor
jae
dec
into
sub
jl
mov
mov
loope
add
pop
inc
adc
rorb
mov
add
out
loop
movsb
pop
sarl
or
mov
cltd
pop
insl
es
pushl
mov
cmp
ja
bound
repz
and
inc
pushf
and
xor
xchg
jg
scas
inc
hlt
dec
nop
ss
pop
inc
out
pop
dec
pop
sub
sub
imul
imul
add
push
outsb
orl
insl
in
stos
xchg
nop
fimuls
shlb
jo
mov
cltd
test
sub
data16
mov
les
jle
dec
es
cmp
fdivrs
cmp
les
frstor
cltd
mov
push
fmuls
sbb
out
dec
jno
and
stos
inc
xchg
push
lcall
jno
hlt
sbb
mov
xor
scas
jnp
insl
sahf
mov
mov
nop
fbld
mov
xchg
ret
scas
inc
cmp
jl
out
sub
cmp
cmpsb
lcall
xchg
xchg
hlt
add
arpl
xor
mov
mulb
mov
jle
cmp
leave
and
pushl
adc
mov
mov
mov
out
cli
jo
xor
inc
bswap
lcall
into
pop
lcall
add
sbb
lret
cmpl
xchg
popf
hlt
dec
inc
and
adc
addr16
and
fsubp
and
scas
jl
dec
cmp
insl
cmp
leave
pop
push
fstpl
push
nop
stos
sbbb
sahf
lea
hlt
xor
push
repnz
repz
arpl
mov
cvttps2pi
adc
lock
mov
pop
enter
icebp
mov
push
leave
jb
mov
xor
cmp
adc
adc
lods
or
andl
cld
lods
stc
dec
push
xchg
cmp
cmpsb
loopne
jge
movsb
sbb
ret
test
mov
mov
sahf
and
or
imul
mov
pop
stos
sub
iret
das
mov
data16
xor
aas
loope
xchg
test
lock
mov
push
loopne
add
insb
inc
add
stos
insb
xor
fbld
jge
lods
dec
sbbl
xchg
jg
les
addl
push
pop
fidivrs
iret
das
sbb
jl
mov
fdivrl
sti
sub
repnz
out
lcall
fisubrl
adc
cmpsl
mov
sbb
int3
jno
jg
iret
cmpsl
fndisi(8087
stos
sbb
add
imul
cmp
rolb
add
fucomi
push
ljmp
adc
je
rcl
and
fs
sbb
sub
inc
decl
mov
nop
or
dec
cmp
out
pusha
cltd
into
iret
push
sahf
pop
repz
cmpsl
les
jmp
shlb
pop
dec
sbb
repnz
movsb
insl
das
and
fstl
js
daa
in
fdivrp
xor
dec
push
xchg
cmp
inc
stos
jle
xchg
cmpsb
neg
fs
loope
sar
lcall
scas
xor
ja
int
add
push
imul
in
adc
dec
lcall
mov
or
jmp
pop
pop
xor
fwait
out
sub
fistpl
incl
xchg
outsl
ja
and
es
aaa
mov
pop
leave
and
inc
inc
ss
std
pop
movsb
pop
stc
mov
or
sbb
add
jmp
mov
mov
cli
lods
add
es
and
das
mov
sub
outsb
mov
pusha
pop
xlat
or
scas
and
inc
mov
jnp
mov
xchg
fildll
lret
mov
mov
lahf
inc
mov
ds
mov
hlt
mov
and
adc
inc
addr16
int
push
aad
cmpsl
mov
xchg
or
mov
jl
add
dec
fimull
jp
dec
push
in
stos
hlt
or
pop
jl
inc
gs
es
fldenv
addl
test
push
lds
fisttpll
iret
scas
imul
pushf
stc
rorl
in
or
popa
fnstenv
xchg
stc
mov
push
loope
add
sbb
cld
mov
insb
insl
popf
inc
sub
xchg
pop
cmc
cmpsb
jecxz
mov
test
cmp
jmp
repz
pop
cmpsl
mov
mov
sub
mov
lds
jg
mov
ss
arpl
pop
sbb
in
dec
jne
sar
pop
sub
andl
xchg
mov
jo
dec
arpl
lcall
jge
out
add
dec
cwtl
or
dec
imul
adc
cmp
jo
popw
jp
fsubrp
pop
mov
arpl
xchg
jnp
and
pushf
addb
xchg
dec
or
roll
and
mov
cmp
lods
sub
test
imulb
fbstp
dec
lcall
rolb
rolb
xchg
and
push
push
mov
cmp
jbe
pusha
xchg
xor
add
call
pusha
orl
inc
push
xchg
pop
lret
lahf
insl
stos
pop
inc
push
cmpsl
cmpsl
xchg
adc
jp
xor
outsb
adc
or
or
aaa
pop
sbb
xor
and
rcl
push
int
mov
or
cltd
loopne
ficompl
lret
push
xchg
repnz
jge
mov
test
ja
pop
jle
rolb
sub
ret
fs
cmp
jne
mov
pop
stc
scas
hlt
jo
lret
xor
test
lret
shll
dec
es
xchg
insl
clc
add
cltd
mov
push
jns
jno
and
int3
push
add
and
add
xchg
push
jle
ljmp
aaa
sub
repz
loopne
inc
movsl
not
ds
sub
mov
inc
jg
mov
push
rcrl
pop
iret
iret
addr16
jno
in
repz
xchg
pop
push
sbb
pop
xor
int
adc
icebp
pop
pop
pop
xchg
or
leave
jns
cld
int3
pop
cmp
imul
xchg
sub
test
out
out
xor
shrb
xor
imul
scas
imul
push
xor
dec
mov
adc
hlt
sbb
shll
fisttpl
rcll
push
scas
and
jo
mov
arpl
shll
jno
sbbl
adc
idiv
push
xor
popa
outsl
in
je
loopnew
daa
mov
and
fimull
jo
mov
adc
sbb
pushf
stos
and
movsb
cld
add
sub
sub
fsubrp
arpl
ljmp
dec
stos
sbb
mov
imul
mov
pushf
inc
rcrl
ds
dec
cmpsb
xchg
adc
stos
in
sahf
jb
sbb
add
clc
cmp
push
push
pop
mov
adc
lods
nop
cmp
pop
in
jp
gs
lahf
jmp
sahf
js
movsl
xlat
hlt
jle
iret
sbbl
dec
lods
pop
pop
sbb
sub
fnstcw
mov
xchg
xor
cmp
gs
lock
mov
stos
jecxz
rcrb
repnz
push
cmp
pop
inc
push
daa
adc
or
xor
adc
pop
pop
xlat
loop
mov
mov
cmp
mov
pusha
arpl
mov
movsb
aaa
dec
rolb
sbb
fsts
insb
mov
jns
fwait
sbb
adc
pusha
adc
sbb
pop
shl
sub
repz
sbb
leave
sbb
mov
mov
fdivr
xlat
cmpsl
addr16
cmp
sbb
add
mov
jp
mov
xchg
and
jns
out
lahf
fldt
fdivs
fisubs
pop
push
mov
and
sub
in
jno
pop
or
jns
jmp
aaa
push
jne
insb
sahf
popl
fsubr
jns
adc
mov
xchg
mov
int
sbb
stos
pop
mov
pop
mov
push
inc
shl
das
and
daa
sti
insb
fisttpl
pop
dec
and
imulb
pop
cs
mov
mov
jo
ja
int3
scas
stos
sub
add
or
cwtl
fcompl
cmp
mov
fwait
mov
int
je
rolb
cmpsl
leave
push
dec
pop
mov
mov
into
jmp
xchg
movsb
es
iret
shll
inc
loopne
sbb
fwait
mov
xor
xchg
and
shlb
nop
jmp
fiaddl
and
xor
inc
cmp
scas
sti
sbb
cltd
scas
xlat
push
jne
stos
push
mov
rcll
or
fbld
mov
cmp
shll
inc
ret
ja
fucomip
or
cli
imul
stos
gs
sbb
xchg
xchg
nop
daa
pop
iret
lea
cmp
dec
rolb
push
cmpsb
dec
xor
into
xchg
movsl
cli
cmc
test
sahf
sub
and
jge
push
decl
add
popf
add
adc
int
test
pusha
popa
clc
mov
out
mov
in
stc
adc
popa
clc
push
pop
mov
lock
push
clc
imul
pop
mov
stc
inc
mov
sti
inc
out
loopne
je
les
sbb
adcb
mov
mov
mov
out
movsl
pop
sbb
call
mov
test
xchg
jnp
dec
inc
out
fcomps
shll
ret
testb
test
cmp
inc
jo
imul
idiv
jecxz
cld
in
sbb
fsubrp
add
sub
xor
push
and
f2xm1
repz
lods
push
test
push
mov
add
test
add
ljmp
cmpsl
and
xor
jnp
add
mov
mov
inc
and
mov
mov
mov
jecxz
jp
dec
rorb
add
add
jp
dec
cmp
shr
lods
lcall
out
inc
sub
inc
das
and
add
pushf
cmp
mov
aad
cmp
inc
imul
adc
fisubrs
sbb
add
nop
imul
dec
xor
inc
push
lcall
int
cwtl
mov
out
aas
push
outsb
jg
bnd
xchg
into
lcall
out
dec
xchg
mov
xlat
cmp
fs
xchg
cmp
mov
stc
xor
push
shlb
or
ficompl
scas
loopne
dec
or
test
test
out
and
ret
and
cmp
div
sub
inc
jp
lret
xabort
fst
sbb
call
mov
mov
scas
pusha
rcr
cld
push
push
pop
in
std
and
mov
cmp
and
xor
xchg
pop
and
pop
daa
dec
xchg
bound
and
and
fsubl
cmp
cli
sbb
or
pushf
xor
mov
xchg
into
jg
imul
xchg
in
leave
movsl
mov
mov
aad
scas
push
push
ret
mov
jno
add
sub
lds
mov
add
jne
adc
movsl
fcomi
mov
movsl
jmp
popf
pop
inc
sub
inc
dec
rcrl
mov
push
out
sub
lods
dec
add
sbb
inc
data16
rolb
pop
xchg
inc
add
pop
lret
push
ret
enter
or
inc
es
imul
idivl
inc
mov
rorb
push
fwait
inc
outsl
sbb
mov
xchg
aad
insl
lret
xchg
dec
or
dec
cmp
dec
adc
inc
incl
mov
rcll
loop
mov
lcall
fildl
lea
shll
add
loop
aaa
test
pop
es
or
dec
jae
aaa
pop
arpl
mov
mov
pop
xchg
hlt
incb
add
xchg
lods
out
out
add
lahf
rdtsc
mov
mov
shlb
and
mov
adc
nop
cltd
aas
out
cmp
inc
pop
mov
out
pusha
orb
out
xchg
rorb
sarl
dec
daa
fadd
jae
xchg
lods
mov
lcall
adc
jp
dec
das
mov
mov
cld
mov
add
ja
pushf
icebp
mov
daa
push
and
jo
mov
pop
dec
popa
mov
mov
std
mov
call
movsb
mov
jns
ss
jp
mov
or
jmp
loopne
ja
jo
out
lret
xchg
pop
test
repz
push
test
mov
ficompl
pop
push
enter
lds
mov
pop
xchg
icebp
xlat
jne,pn
push
and
stos
mov
cmp
or
pop
push
inc
repnz
leave
lahf
roll
adc
or
and
and
dec
inc
jl
push
dec
xchg
mov
in
jmp
jne
sub
mov
sbb
sbb
ja
push
popa
scas
into
ljmp
cwtl
jb
xchg
mov
xchg
pop
fdivs
jbe
je
jno
lcall
jmp
xor
mov
mov
jbe
xor
pop
sbb
je
fists
push
stc
push
js
cld
pop
push
movb
icebp
in
jecxz
sarl
mov
loope
dec
mov
cmp
mov
xchg
int
fstpt
out
lods
jle
fmull
jmp
jmp
shr
loopne
cltd
gs
xchg
push
dec
sti
call
ss
add
pop
in
arpl
iret
lcall
adc
call
pop
rolb
cmp
push
repz
pop
movsb
scas
int
fistl
imul
fisttpl
adc
inc
pop
inc
aaa
fcmovnbe
ja
jbe
cmpsl
xchg
jmp
testb
push
scas
je
rorl
pop
les
adc
out
inc
std
mov
cmp
inc
cmpsl
sbb
and
adc
mov
dec
add
or
mov
jo
mov
xchg
icebp
lds
mov
arpl
adc
mov
pop
jg
lods
sub
pop
loop
je
pop
jne
or
push
mov
xor
data16
add
lock
xchg
xor
aam
jno
and
and
xor
and
push
mov
sub
insl
mov
fcom
cmpsb
sub
inc
enter
jno
nop
sbb
adc
arpl
cs
imul
stos
pop
adc
adc
sub
mov
aam
loopne
pop
repz
ja
sbb
nop
mov
mov
jno
test
repz
jmp
mov
push
mov
fcompl
sbbl
fcmovne
adcb
scas
pop
push
scas
and
adc
loop
loopne
fcoms
jmp
ljmp
push
mov
rolb
mov
jmp
scas
imul
xor
or
adc
xchg
enter
add
mov
testl
adc
xchg
jmp
inc
movsl
dec
xchg
pushf
stos
pop
jge
loopne
ret
xchg
push
xchg
jmp
mov
cmc
mov
sub
push
jne
jg
mov
cld
call
xlat
test
mov
mov
sub
cmp
pushf
mov
test
out
jl
or
mov
js
and
xor
sti
subb
mov
pop
push
xchg
jbe
adc
stc
test
mov
lds
jl
cld
or
xor
adc
adc
xor
xchg
hlt
push
movsl
and
xlat
je
pop
fisttpll
dec
dec
in
push
out
inc
in
adc
movsl
std
loope
in
sub
int3
xchg
inc
xlat
int
jo
aaa
xchg
lock
sti
jle
sarl
addl
in
cwtl
je
mov
data16
or
loopne
roll
loopne
in
mov
push
push
cmp
jmp
shll
xchg
lahf
inc
mov
cmp
xchg
pop
dec
mov
or
cmp
add
or
movsl
add
stos
pop
outsl
add
xor
arpl
xchg
inc
push
repnz
push
scas
cmp
out
test
fcompl
mov
inc
lods
ds
cmpb
push
stos
jns
fcmovu
pop
and
jo
lock
rcl
in
je
addl
mov
dec
stos
in
mov
mov
fdivp
fidivrl
into
pop
inc
icebp
daa
cltd
dec
shrb
and
repz
dec
dec
inc
push
push
loopne
inc
roll
loope
jno
int
lret
jmp
jnp
in
and
mov
inc
cmp
movsb
adc
fsubrp
in
clc
xchg
or
repnz
xchg
jle
add
dec
add
pop
out
sub
cmp
loopew
jl
test
pop
inc
push
xchg
das
xor
int3
stc
fldenv
add
call
cld
nop
test
out
jbe
pop
jmp
inc
add
test
mov
xchg
ja
test
sarl
dec
mov
lret
cmpl
adcb
xchg
es
shlb
shll
add
push
cltd
das
pop
sub
ret
stos
adc
imul
loop
dec
fs
add
cmp
dec
lods
testl
mulb
add
or
loope
mov
pop
test
outsl
out
andb
jno
push
lea
cmpsb
mov
jle
jl
push
fildll
mov
push
imul
push
xchg
dec
lods
jp
jecxz
daa
lock
dec
jae
and
loopne
iret
cmp
pop
repnz
sub
or
bnd
cmp
es
dec
iret
adc
bound
in
mov
fmul
out
sub
cs
pushf
mov
daa
xchg
jnp
sbb
xchg
repz
xchg
mov
je
pop
sub
mov
jno
int
std
fdivl
cltd
std
push
or
push
enter
fmuls
and
sarb
aaa
fcomip
mov
in
push
out
out
mov
hlt
mov
mov
inc
cmpsl
lock
test
sarl
inc
fsubl
jg
andb
xorb
mov
and
js
loope
and
and
nopl
outsl
or
mov
daa
inc
js
je
cmp
fwait
sub
push
pop
inc
mov
arpl
cmp
inc
sbb
adc
push
pop
xchg
xchg
cld
adc
pop
jp
out
out
stc
and
into
xchg
lods
out
ds
pop
mov
lds
pop
push
jmp
mov
les
sar
stos
shlb
aam
lods
or
jle
mov
adc
in
aaa
adc
cmp
sar
sar
cmp
push
push
pop
fnstsw
cli
aas
out
adc
xchg
mov
mov
sar
mov
mov
pop
pop
popa
addr16
lahf
mov
push
ret
lock
es
out
cmpsl
jmp
push
mov
outsb
sub
adc
gs
arpl
hlt
in
pop
scas
packsswb
int
js
adc
cmpsb
jmp
cmpsb
es
add
iret
mov
les
lods
xchg
cmp
bnd
cmpsl
and
loopne
ja
loopne
mov
adc
aam
adc
add
sub
sub
inc
dec
shll
xchg
xor
mov
sbb
mov
sti
int3
leave
mov
repz
mov
sahf
cmp
popf
fst
cmpsb
iret
xchg
fwait
pop
xchg
popa
ja
push
mov
push
adcb
adc
add
sbb
ss
xchg
mov
loope
out
pop
cmpsl
mov
ret
xchg
jle
test
shlb
addr16
push
mov
jnp
negb
cs
test
inc
rorw
sub
fwait
pop
aaa
in
add
mov
rorb
and
add
mov
cli
lret
push
repz
shlb
jns
lcall
test
arpl
int
test
in
xor
and
pop
pushf
adc
xchg
fwait
movsl
jl
jns
pop
mov
in
ret
repz
fwait
xor
push
loop
pop
lahf
mov
jge
shrb
test
mov
orb
add
loopne
add
clc
aam
mov
sbb
dec
mov
lock
mov
sbb
clc
aas
mov
dec
clc
outsb
jo
inc
iret
sub
adc
pop
sahf
mov
inc
repnz
push
cld
and
icebp
aas
jb
sub
pop
popa
mov
pusha
dec
testb
jmp
roll
loope
sub
xchg
sbb
ss
xchg
sahf
iret
adc
aaa
adc
sub
jno
pop
push
jle
scas
pop
jno
dec
fistpl
movsb
imul
push
push
ja
lock
scas
or
out
add
lret
cmpsl
repnz
lock
psadbw
clc
sbb
cltd
mov
ljmp
mov
mov
pop
fld
cli
or
add
lahf
jo
ret
cmp
adc
jo
dec
mov
pop
sbb
inc
jp
shl
push
mov
frstor
jle
bound
and
lods
ds
xchg
adc
mov
xor
mov
in
jmp
pop
cmp
clc
adc
fsubrs
push
add
fisubl
je
jle
testl
xlat
dec
mov
movb
mov
in
clc
in
ret
lods
outsl
mull
test
sbb
push
mov
loop
push
test
mulb
dec
imul
les
faddl
sti
cmc
je
shrl
rorl
mov
cmp
daa
test
jo
std
inc
mov
movsl
or
cmc
jge
mov
shlb
aaa
movhps
iret
rcl
sbb
jbe
sbb
xchg
loopne
sbb
out
fadds
movsb
dec
lods
stos
pop
insb
enter
cmp
and
cmc
dec
leave
clc
cmpsb
outsb
das
lds
aam
subl
sahf
pop
icebp
js
mov
mov
in
mov
pop
and
idivb
imul
pushf
add
pop
jo
adc
xchg
jg
clc
pusha
jge
lret
into
adc
cmpsl
jg
push
es
mov
out
mov
adc
mov
icebp
sbb
daa
pop
adc
push
mov
adc
cltd
sub
lahf
mov
or
push
mov
fnsave
jno
adc
push
cltd
cld
xor
testb
stos
pop
out
xor
lods
mov
gs
jno
mov
int
outsl
add
push
jae
sub
mov
insb
cwtl
or
and
sub
movsl
popf
outsl
push
push
xchg
cmp
pop
jo
adc
or
js
fisttps
fdivrl
jae
jle
and
mov
mov
loopne
in
andl
lods
aas
add
dec
xchg
pop
cmp
sub
loop
jp
jl
bound
pop
xor
lcall
aam
add
hlt
es
push
adc
jmp
fidivrl
scas
mov
xchg
and
ret
push
rcll
arpl
test
sbb
pop
push
sti
aaa
or
xchg
fs
mov
pusha
sub
outsb
in
pop
je
push
jle
adc
mov
aas
xchg
cld
fsubrs
ja
lods
std
xchg
push
xchg
inc
loopne
adc
push
sbb
sbb
loop
in
lock
stc
sti
mov
hlt
push
icebp
test
pusha
add
jp
clc
dec
inc
std
inc
hlt
imulb
fucomp
xchg
data16
mov
xchg
xor
ja
fidivrl
mov
ret
pop
mov
mov
out
aam
mov
xchg
pop
in
data16
test
and
push
sbb
jne
ss
or
icebp
test
sbb
adc
shrb
cmp
cmc
mov
aad
daa
cmp
in
dec
jg
pop
xchg
popf
lret
gs
pop
cmp
mov
rclb
imul
xchg
mov
aaa
xchg
in
rolb
mov
or
popa
cmpl
jne
negb
sub
mov
fisubs
mov
mov
add
les
outsl
insb
xlat
dec
rcl
sub
test
rorb
fnsave
or
mov
ja
mov
je
mov
pop
or
and
xor
insb
inc
movsl
test
rorb
jae
les
loope
lea
cmp
mov
mov
add
add
lea
je
and
dec
addb
rcrl
adc
int3
inc
jecxz
add
xor
and
cvtps2pd
cmpl
subb
adc
and
add
xor
cmp
sbb
mov
or
xchg
and
cmpb
into
mov
push
in
fstpl
out
sbb
xor
and
rolb
jae
and
loop
adc
pop
cmpsl
mov
mov
out
push
out
xchg
ret
xlat
sbb
and
mov
movb
ja
addr16
sahf
jl
sbbl
sub
sbb
cmp
xor
dec
inc
jmp
dec
xorl
in
icebp
movsb
sbb
push
mov
add
mov
jl
and
add
and
in
inc
xor
inc
repz
mov
lods
push
cs
cmp
outsb
in
push
outsb
jns
sub
sbb
jp
sbb
in
mov
arpl
fwait
es
xchg
jmp
es
sub
mov
sbb
and
icebp
mov
cmp
xchg
mov
push
ret
out
and
insb
pop
mov
dec
dec
mov
lock
shll
push
xchg
std
cwtl
and
sahf
pop
lret
pop
sbb
cmp
jmp
dec
mov
xchg
cs
stos
repnz
lcall
cli
xchg
es
adc
dec
jl
or
and
loop
test
jp
add
lcall
lahf
xor
int
mov
cmp
mov
push
dec
pop
xchg
loop
leave
jns
mov
cmpsb
lcall
lahf
add
insb
jb
sbb
sbb
cmp
mov
rcr
loope
fcmovne
mov
fists
jo
pop
jno
gs
and
daa
ljmp
pusha
das
mov
jg
cmp
fadds
inc
dec
jge
fidivs
mov
mov
pop
dec
xor
into
mov
leave
dec
outsl
xor
fisubrl
mov
mov
mov
bound
aaa
je
adc
sarl
test
les
test
or
shlb
ds
jbe
inc
mov
sub
push
popf
mov
dec
xor
jb
cmp
mov
push
or
addl
ror
adc
ljmp
inc
xor
or
sub
sbb
je
mov
jno
push
or
adc
adcl
sub
gs
pop
or
pop
xchg
pushf
xchg
ds
mov
pop
iret
cmp
pushf
shll
lods
pop
mov
rclb
out
ljmp
pop
adcl
inc
jo
adc
inc
push
inc
out
lret
jl
mov
xor
lods
inc
enter
outsb
ds
in
cmp
add
pop
add
add
mov
repz
push
xchg
cltd
mov
mov
inc
fidivl
xor
adc
scas
mov
and
or
dec
es
roll
mov
inc
push
shll
frstor
movsl
dec
arpl
faddl
dec
std
jg
inc
mov
mov
shlb
sbb
out
shr
pop
push
call
cmpsl
add
scas
sub
mov
sbb
pop
pushf
mov
push
stc
test
push
xor
and
jbe
push
add
jp
mov
mov
cmp
popa
ds
mov
lea
nop
int
push
push
adc
mov
add
icebp
xor
push
sti
adc
xchg
mov
outsb
fstpl
jle
mov
clc
cmp
push
mov
sti
call
and
sbb
clc
fdivrl
adc
mov
mov
mov
pushf
sub
cld
lds
sbb
loop
jo
sub
sub
dec
cli
xor
ret
cli
lahf
xor
pop
add
jo
and
pop
jbe
mov
sbbb
dec
mov
pop
or
repnz
mov
imul
andl
iret
xchg
sub
dec
cmp
inc
fsincos
aas
push
dec
push
pop
cmp
in
int
jmp
sub
in
pop
jbe
mov
insb
sbb
repz
mov
push
push
fwait
mov
cmp
stos
fistl
aaa
sbb
xor
jbe
jne
dec
nop
daa
sub
push
sti
into
leave
dec
imul
movsb
mov
addr16
mov
pop
test
movsl
pop
mov
dec
fidivrs
xchg
push
je
add
fsubs
shlb
insb
xchg
xchg
inc
data16
and
ret
push
addr16
add
mov
loope
mov
dec
rcll
dec
dec
mov
lock
imul
cmp
sbbb
adc
js
or
aas
jb
jo
mov
pop
shll
mov
mov
xchg
jb
xor
fdivl
outsb
outsl
and
jle
arpl
add
push
mov
mov
jo
leave
xchg
xchg
gs
dec
xchg
out
xchg
into
pop
pop
mov
ret
daa
jmp
pop
cwtl
jae
cs
mov
jnp
ja
andl
sub
dec
imul
pushf
inc
lock
lret
mov
fisttps
cmp
ljmp
mov
jo
arpl
mov
addr16
stos
out
arpl
ret
add
mov
sbb
and
or
jg
lret
push
push
sarb
mov
adc
xor
orl
imull
pop
fdivrs
dec
jne
and
scas
iret
inc
xchg
inc
js
mov
outsb
imul
mov
nop
scas
test
dec
pop
test
lcall
sahf
mov
mov
xchg
gs
add
fidivs
inc
int
hlt
sub
xor
cmp
mov
inc
dec
adc
adc
std
or
stos
lea
lret
pusha
add
mov
mov
add
sub
shr
mov
mov
inc
cli
push
mov
cmpsb
mov
loop
ret
lret
clc
int
sbb
pushf
shll
xor
cmp
inc
xor
repnz
repnz
fsubrl
jmp
addr16
push
cmp
sbb
aad
leave
adc
xchg
stos
loopne
xchg
mov
xchg
add
lods
add
stos
cmp
ret
xor
cmp
jns
sub
mov
cmp
aaa
xchg
jb
leave
xchg
mov
mov
les
test
outsl
packsswb
jne
out
ror
lahf
sar
out
negb
mov
mov
pop
aas
mov
ss
or
sar
and
xchg
sbb
ss
adc
inc
push
insb
push
mov
ret
push
data16
fld
and
adc
sahf
push
loop
fldt
adc
jecxz
push
in
jp
repz
xor
jns
mov
add
fsubp
int3
inc
mov
pop
sub
aaa
les
inc
out
pop
mov
ds
into
pop
lock
mov
test
adc
in
enter
xchg
out
js
jno
and
cmp
iret
pop
imul
mov
int3
fwait
mov
jne
inc
into
jne
cmpsb
loope
dec
lret
loop
inc
xchg
and
in
add
inc
mov
mov
and
lods
popf
shlb
test
xchg
add
cli
in
or
mov
cmp
stc
repnz
or
sarl
fcomps
inc
lds
xchg
nop
or
sub
ret
cmp
mov
test
in
in
aad
mov
jl
mov
or
inc
stc
push
mov
jns
sub
inc
or
dec
push
cmp
xchg
fmuls
xor
pop
mov
iret
sbb
jge,pn
jae
push
pop
xor
in
xorl
idivl
in
cmp
xchg
push
ja
cltd
xchg
movsb
xchg
repz
jge
push
add
fmulp
add
ja
push
dec
imul
inc
xor
cmpsl
adc
jnp
xor
jae
and
jb
xchg
pop
fwait
sub
jl
mov
jp
sbb
xchg
fisubrs
bound
mov
sbb
jle
sbb
pop
fs
sbb
out
fildll
mov
cld
dec
jns
mov
sub
inc
cmpb
test
lods
push
xchg
sbb
mov
sbb
mov
jecxz
mov
dec
or
cmpsl
jno
adc
js
outsl
push
mov
mov
xor
or
add
xor
cmp
sub
sub
pop
and
mov
jbe
xchg
xchg
aas
popa
fwait
sub
push
xchg
push
add
mov
test
or
sbb
xchg
rclb
lock
mov
push
lods
jg
mov
mov
or
xchg
das
orb
cmc
loop
cmp
ficoml
cli
push
bsf
scas
lret
outsb
arpl
cmp
dec
or
mul
sbb
and
enter
imul
push
scas
aaa
xor
xor
inc
xor
dec
jmp
nop
mov
ror
mov
movsl
iret
push
cwtl
ss
pop
shlb
subl
jp
bound
mov
sbb
or
xchg
xchg
ret
jmp
add
sti
jmp
jle
add
arpl
lods
dec
or
arpl
insb
adc
pop
mov
xlat
xchg
cmp
inc
mov
pop
mov
or
pop
xchg
rcl
jle
loope
ret
xchg
insl
push
movsl
lret
cmp
jg
mov
daa
int
jge
mov
push
repz
repnz
mov
mov
jge
sti
imul
je
xchg
repnz
mov
dec
imul
scas
xor
ffreep
ljmp
adc
stos
loopne
lock
mov
mov
in
xchg
clc
sub
test
std
in
mov
pushf
sbbb
lods
adc
repz
lcall
in
pop
xor
cmc
mov
cltd
lea
cmp
mov
xchg
cld
insl
mov
inc
mov
and
fwait
cmpsl
inc
xor
jbe
mov
or
or
xchg
jmp
cmp
incl
jbe
loopne
jbe
cwtl
mov
in
adc
jmp
out
sbb
add
pop
jae
mov
faddl
andl
pop
sbb
push
jmp
cmp
jae
aam
cli
adcb
xor
push
leave
jge
xchg
inc
scas
cmpsb
xor
adc
loope
jecxz
dec
int3
popf
lods
push
js
jnp
lret
out
lods
fbstp
xchg
jo
xor
or
repz
push
dec
xchg
jae
roll
ljmp
in
sbb
mov
les
mov
test
addr16
out
xchg
dec
mov
aad
int
addr16
aad
push
lock
jo
mov
sub
sbb
xchg
imul
sbb
inc
cli
shll
inc
push
sbb
fwait
cwtl
dec
pop
cli
xchg
mov
cwtl
shll
push
dec
adc
iret
jmp
push
pop
lods
add
adc
aad
add
sahf
pop
sbb
fnstsw
loopne
push
stc
xchg
fildl
cmp
test
pop
inc
ja
pxor
mov
pop
adc
int3
or
test
stos
add
in
sbb
add
scas
movsl
dec
xchg
mov
jecxz
mov
add
decb
sahf
pop
lods
push
push
xorl
inc
adc
das
jo
dec
xorl
lds
pop
push
inc
ret
sbb
cmpsl
movsb
adc
push
fwait
popa
jl
sti
jp
cmpsb
das
jno
xchg
jl
mov
repz
push
cmpsb
mov
xor
cmp
cmp
fcomip
xchg
mov
stos
sbb
mov
in
popa
mov
out
mov
adc
int
arpl
or
add
popf
clc
stos
push
mov
xchg
cli
pushf
ljmp
das
into
pop
add
ret
sbb
sahf
adc
mov
pcmpgtb
outsl
ret
fistpl
sub
nop
push
lahf
js
xchg
les
cmp
mov
dec
stos
mov
movsl
fcoms
mov
cs
mov
cltd
cmp
cmp
jne
mov
pop
mov
fstp
or
mov
dec
mov
pop
lcall
pop
out
mov
inc
or
push
dec
mov
cmp
test
xchg
jae
cmc
sbb
jp
mov
leave
stc
push
call
xor
jg
or
out
outsl
pop
daa
in
mov
insl
addr16
or
lret
mov
mov
add
es
cltd
cs
xor
pop
xchg
jecxz
mov
push
jbe
popa
push
xlat
adc
sbb
ficomps
add
jbe
push
sbb
cld
test
or
repz
pop
mov
test
shlb
jge
pop
mov
lds
lahf
adc
add
jp
andl
stc
mov
hlt
add
js
int
mov
movsl
shl
add
dec
mov
and
and
ljmp
je
mov
sub
aam
ja
dec
and
into
arpl
pop
pop
pop
push
fistps
pusha
xor
pop
int
jmp
lods
xor
aam
sub
sti
mov
mov
pop
cmp
inc
mov
sbb
xchg
out
pusha
add
mov
clc
sarl
cmp
pop
insb
pop
aas
mov
pop
xchg
decb
in
sub
push
xchg
fs
sbb
mov
lods
movl
or
icebp
bound
scas
lahf
std
repnz
pop
mov
cmp
dec
stc
cli
adc
ret
andl
lret
xchg
ljmp
rcrb
sti
stc
outsb
arpl
mov
lock
mov
addl
not
arpl
mov
pusha
push
add
ja
push
rcl
pop
sub
fimuls
into
sub
cmp
jl
mov
rcll
imull
dec
daa
gs
dec
and
icebp
push
push
repz
lcall
add
icebp
insb
mov
je
mov
in
dec
jne
rep
popf
and
in
xor
jns
adc
pop
out
jmp
xchg
mov
pop
mov
inc
imul
leave
ja
cmp
sub
jne
sub
popf
fmulp
cmp
arpl
pushf
int
cmc
dec
pop
add
adc
clc
clc
and
cmpsl
out
mov
cmp
loope
cwtl
pop
or
cltd
shll
mov
sbb
cmp
cld
stos
popa
imul
mov
or
scas
jmp
popa
movsl
xor
or
jmp
lret
bnd
test
mov
bswap
add
in
lret
jne
loopne
jno
notl
cmpsb
lret
and
push
mov
push
bound
fisttps
or
les
xor
xchg
and
adc
jge
cli
and
scas
pushf
push
dec
push
push
in
xchg
int3
in
cmp
cmp
in
xchg
push
add
adc
arpl
gs
scas
add
jp
daa
pusha
fldt
jge
jmp
test
incb
jnp
movsb
dec
jl
cld
fwait
xlat
jo
lods
shlb
dec
fdivr
sbb
notb
dec
scas
into
lcall
and
jle
js
pop
orb
sbb
pop
pop
adc
arpl
jno
std
movsl
or
jnp
adc
dec
inc
or
xchg
out
mull
mov
add
cmp
stc
jno
pusha
inc
stos
sub
sbbl
ja
fs
int
je
in
aas
das
fcmovnu
jge
inc
ljmp
cmp
mov
dec
out
cmpsl
sti
fstpt
mov
and
pop
pop
int
andl
sub
push
icebp
iret
aaa
fsubr
sub
out
jb
lods
outsb
shlb
test
mov
ror
mov
repz
cmp
movsl
sti
pop
mov
xor
pop
pushl
push
inc
sub
cli
xor
rcrl
push
add
pop
mull
or
xor
xchg
mov
and
movsl
inc
dec
stos
xchg
cld
mov
sbb
mov
jns
shr
push
decl
jg
ret
fsubp
fimull
mov
adc
sbbb
cmp
movsb
fimull
pminub
aas
imul
in
iret
dec
out
clc
cmp
daa
jne
lds
sub
mov
insb
insb
pop
or
or
jno
notl
loope
out
push
aas
sub
jae
dec
neg
mov
xor
lds
dec
test
cmp
dec
xchg
pop
shll
mov
adc
fsts
mov
test
jle
push
push
test
cld
stos
aad
dec
dec
in
stos
sbb
add
pop
loop
cmp
lcall
dec
adc
mov
mov
into
into
sub
js
jmp
cmpsb
xchg
aas
je
ficoms
ljmp
mov
call
and
data16
sbb
rorb
hlt
or
shlb
push
jl
sti
orb
pop
fs
push
pop
lods
insb
sti
mov
sub
arpl
inc
mov
jae
std
cmpl
iret
das
cmpsb
xchg
pop
out
mov
ret
bound
sub
add
xor
add
pop
pop
xor
mov
xchg
lock
aam
out
outsl
and
or
push
jg
scas
cmp
xor
push
out
inc
mov
sbb
dec
lahf
xchg
jo
sahf
mov
orl
movl
dec
inc
mov
jnp
mov
inc
inc
das
inc
xor
jae
mov
xchg
sbb
lret
fcmovnb
insl
add
mov
out
mov
xchg
cwtl
pop
pop
xchg
sbb
stos
cmc
or
mov
dec
mov
sbb
mov
pop
scas
dec
std
or
adc
jg
fidivrs
inc
sbb
mov
data16
push
aas
movsl
push
adc
dec
mov
je
cmc
push
roll
push
sahf
insl
aas
ja
dec
call
push
push
test
je
jnp
xor
adc
jg
dec
faddl
pushf
mov
mov
or
pusha
add
mov
or
pop
cmp
cld
int
ret
pop
sbb
divb
gs
adc
jmp
dec
dec
in
xor
pop
push
xor
pop
push
in
mov
movb
rol
mov
clc
in
dec
dec
xor
push
mov
scas
mov
mov
and
enter
inc
aad
push
andb
jp
test
cmp
in
push
jae
jge
movsb
sahf
inc
into
add
lret
outsb
outsb
test
hlt
cmp
pop
inc
mov
jns
add
pop
sub
fs
enter
mov
cmp
adc
popa
clc
aas
mov
movsl
icebp
popf
or
fimull
stos
imul
scas
pushf
mov
scas
psrld
les
xor
cmpsl
or
cmp
mov
push
pop
mov
je
pop
aam
test
jecxz
mov
mov
jge
jbe
adc
ljmp
mov
scas
dec
fistpll
adc
add
leave
jne
or
xchg
push
and
movsb
je
push
cwtl
pop
aad
cmp
dec
xchg
mov
sarl
idivl
orl
insb
mov
fxch
cltd
pop
xchg
xchg
movsb
andb
add
and
lods
cmp
cld
mov
outsb
push
test
andl
or
adc
xchg
sti
popf
ss
cli
mov
leave
inc
leave
aaa
cltd
add
mov
dec
mov
jbe,pt
add
mov
jno
lods
mov
loope
xor
cmpsb
jl
movsb
jns
outsl
dec
jb
sbb
sub
fwait
cmp
xorb
lods
adc
test
loopne
aas
add
shll
lds
or
sarb
popa
rcl
std
pop
mov
shll
inc
inc
sub
jl
push
push
or
fwait
mov
lcall
mov
and
inc
and
xchg
fwait
outsb
inc
xchg
sub
sub
add
outsl
dec
mov
xchg
xor
sbb
sbb
decl
stos
js
mov
dec
fs
fdivp
pop
lods
ficompl
pop
pop
and
mov
adc
adc
stc
movsl
inc
test
scas
ljmp
pop
stos
shl
push
mov
shlb
adc
ds
pop
adc
lea
aam
addr16
push
ret
iret
cld
cmpsb
xchg
int
pop
in
aaa
pop
fidivl
into
mov
cltd
pop
or
or
or
andb
adc
insl
push
cmpsl
sbb
in
and
test
and
mov
xchg
ficompl
loope
fmull
add
xchg
hlt
mov
add
popa
adc
ljmp
lds
push
rorb
lahf
mov
and
mov
push
dec
adcl
jnp
sub
mov
out
loope
aam
adc
loope
inc
test
add
rorl
call
int
addr16
shr
sub
adc
pop
sub
mov
jecxz
and
lcall
out
mov
aas
mov
mov
or
xchg
and
adc
iret
es
push
inc
mov
pop
mov
or
clc
test
cmp
outsb
mov
popa
notb
call
xchg
loope
inc
inc
add
das
aad
mov
sahf
stos
sarl
aad
adc
mov
sahf
data16
ffreep
ja
mov
xchg
fnsave
insb
in
jo
icebp
dec
rorl
cli
call
mov
sbb
cmp
cmp
cmp
scas
in
sbb
mov
addl
ds
xor
scas
xchg
andl
adc
inc
xchg
xlat
ja
and
ljmp
out
lret
mov
xchg
std
push
rcrl
loop
xor
outsl
cmp
sbb
movswl
add
pushf
out
jg
gs
push
scas
fsubl
push
cmpsb
sbb
add
mov
or
xchg
subb
inc
sti
or
aaa
xor
incl
jle
das
dec
cmp
inc
inc
mov
xor
pusha
cmp
push
and
mov
pop
icebp
push
call
xchg
fcoms
mov
loop
and
mov
aam
out
fsubs
mov
cmp
dec
and
dec
sub
icebp
pop
stc
stos
ja
dec
mov
aam
scas
xchg
lret
push
sub
dec
dec
mov
or
push
dec
jne
out
or
mov
and
mov
pop
aam
test
cmovns
into
nop
stos
rorl
cmp
and
sbb
not
cld
xor
lock
xor
das
nop
adc
inc
cmpsl
pop
dec
dec
or
inc
xor
pop
rcll
dec
adcl
lahf
lahf
sbb
add
out
js
jg
aaa
ret
mov
push
jmp
stos
inc
divl
sbb
roll
shll
jo
aad
sbb
call
add
dec
xor
std
lahf
push
fmuls
popl
xchg
jns
ficomps
js
jg
pop
iret
sub
lcall
mov
add
in
push
mov
addr16
push
mov
shr
andb
cmpsb
xor
sbb
inc
pop
cmp
xchg
ss
mov
fiadds
xor
add
cltd
xlat
je
into
sub
addl
out
jle
sti
mov
jl
jle
adc
push
push
lds
or
mov
xor
arpl
es
shl
mov
lahf
pop
push
add
int3
test
arpl
pop
mov
jb
inc
pop
mov
lods
adc
mov
data16
ss
mov
mulb
lock
fwait
or
xchg
lods
add
cwtl
in
cmp
or
cmp
inc
cltd
fs
mov
push
push
aaa
mov
add
aaa
mov
fidivl
sub
jmp
mov
pop
sub
push
mov
daa
into
sub
gs
adc
sbb
sbb
dec
adc
bound
pop
fdivrs
sbb
pop
xlat
inc
xchg
adc
in
in
xchg
aas
or
push
sbb
xlat
scas
mov
mov
xchg
int
addl
lret
sub
add
inc
sbb
orl
fcmovnu
sbb
rol
mov
sub
or
xchg
movsb
mov
mov
enter
jle
ja
or
xchg
or
mov
int3
das
jbe
outsl
test
jne
ret
fcomps
dec
test
push
xor
jae
inc
iret
andl
fstl
loop
or
add
stos
popf
aas
inc
adc
or
pusha
aas
pop
push
mov
scas
fcmovbe
dec
ljmp
rcrb
imull
lahf
pop
adc
cmp
mov
or
cmp
enter
xlat
lods
add
nop
and
js
stos
fxch
comiss
in
sti
jnp
xchg
push
or
shrb
test
cld
rcrb
xlat
je
adc
aam
pop
sbb
or
fsubrs
xor
arpl
pop
rcrl
jmp
je
push
xchg
test
cld
gs
inc
hlt
fisttpl
jne
sahf
into
in
jmp
mov
arpl
add
fs
jge
fnstenv
xor
add
inc
lea
xor
jg
pop
xchg
or
stos
pop
mov
ljmp
dec
pop
les
mov
enter
lods
xor
pop
outsb
aad
cmp
lea
ljmp
ficompl
in
lock
rclb
outsl
fisubl
mov
xor
jae
je
xchg
roll
data16
jecxz
stc
ss
cmp
in
sub
enter
stc
shll
jl
out
test
add
addr16
and
cwtl
dec
push
mov
hlt
lea
xor
and
pop
xchg
sarl
orb
arpl
cmpl
dec
mov
in
dec
scas
push
in
sbb
xchg
iret
out
imul
andl
addr16
push
add
xchg
les
imul
leave
sub
pop
movsb
pop
pop
repz
mov
test
mov
adc
movsl
sub
dec
lock
push
iret
dec
repz
pop
xor
sub
aas
mov
xchg
fst
jecxz
adc
adc
popa
adc
sbb
inc
xchg
popa
popa
dec
pop
into
sahf
jmp
xor
push
ds
jle
or
push
cs
or
cmp
jecxz
in
inc
loop
jae
decb
clc
iret
int3
cwtl
movsb
test
adc
fcom
mov
mov
leave
xchg
cmp
cmp
adcb
notl
scas
xorb
push
scas
pop
test
xchg
sub
push
call
push
mov
mov
jp
leave
jecxz
mov
push
or
loop
or
push
fmul
add
dec
popf
iret
lcall
mov
xchg
jae
jg
stos
cltd
mov
xchg
das
into
in
mov
rcrb
rclb
subl
repz
les
repz
dec
inc
xor
xor
movb
lea
fs
insl
mov
loop
push
sub
mov
inc
fcomi
fwait
sub
jmp
or
mov
in
lret
adc
popa
insb
cmp
not
cmp
lret
gs
cmp
jg
cld
xchg
in
and
subb
popa
pushf
sbb
sarb
je
out
pop
mov
xchg
rorl
mov
mov
jge
sub
xor
ds
lahf
cwtl
stos
adc
xor
xchg
pop
repz
or
scas
es
div
pop
lret
adc
cld
inc
mov
nop
sbb
push
mulb
and
xor
icebp
loopne
xchg
add
jae
insl
jg
rorb
movsb
push
rorb
push
cmc
add
adc
pop
std
cmp
bound
loope
push
adc
shl
aaa
ljmp
cli
addb
add
jnp
dec
xor
pop
add
jnp
addb
jp
adc
and
or
ficompl
outsb
sti
xlat
pop
inc
push
pushf
loope
xor
jecxz
xchg
es
push
pop
dec
cmp
xor
test
and
mov
add
mov
adc
xor
mov
movsl
inc
hlt
stc
subl
mov
xchg
mulb
sti
insb
sub
andb
add
outsl
sub
ljmp
sbb
xor
mov
fwait
out
imul
bnd
iret
cmc
sahf
mov
dec
mov
push
adc
and
loope
sbb
mov
lret
fcompl
and
lahf
fnsetpm(287
push
in
jo
mov
dec
mov
and
sbb
mov
cwtl
cmp
sub
test
sub
jbe
ja
hlt
fsubrs
xchg
xor
push
jno
mov
mov
sub
cmp
xchg
pop
arpl
adc
lahf
out
cli
jge
xchg
pop
bound
clc
pop
dec
sbb
mov
pop
mov
xor
int
adc
fisttpl
test
jae
int3
fucom
scas
mov
push
add
and
push
xchg
adc
push
nop
xor
mov
movsl
jmp
ds
stos
jne
and
inc
dec
and
aaa
inc
leave
sbb
mov
adc
das
or
in
outsb
mov
sub
jbe
mov
or
in
jno
jmp
dec
pop
push
cmpsb
xchg
daa
xor
jbe
ds
pop
bound
std
fidivs
xor
mov
xchg
mov
pop
jbe
test
xchg
jg
sbb
fsubrs
insl
lea
leave
addr16
call
lcall
lahf
or
shlb
cli
xchg
cmpsl
pop
es
cltd
mov
jbe
aad
cmp
sbb
mov
aad
and
lods
subb
out
dec
push
test
rcrb
out
push
sbb
movsb
push
lods
jne
and
fs
scas
shrl
xor
test
xchg
mov
mov
jns
sbb
lcall
les
xchg
cwtl
mov
xchg
stos
imul
sub
sbb
pusha
test
cmp
loope
aad
fidivrl
mov
icebp
lods
ficomps
repnz
jmp
adc
inc
movsl
push
cmp
lods
out
pop
mov
cmpsl
mov
inc
in
cmc
push
outsb
mov
jecxz
outsb
nop
mov
push
leave
aaa
mov
push
inc
pop
mov
xchg
ja
sub
pop
cmp
and
lds
mov
jno
xchg
add
fucomp
add
adc
shll
stos
xchg
or
mov
outsl
pop
iret
jge
mov
in
out
rolb
sbb
inc
lret
clc
lods
pop
fwait
sbb
sbb
cmpl
mov
in
cli
and
rcrb
jbe
pop
jge
push
arpl
out
cmp
test
fcmovb
push
mov
or
xor
leave
xor
cs
int3
pop
xchg
mov
movsb
gs
sbb
sub
dec
div
or
mov
jo
pop
and
idiv
xchg
sub
jbe
loopne
push
push
inc
and
call
mov
jle
rcrb
ficompl
sbb
bswap
lret
pop
sub
dec
shll
mov
xchg
fistpl
std
fstps
in
and
cli
push
sbb
insb
lret
sbb
cli
jg
xchg
sub
sti
push
adc
inc
insl
lea
cmc
sub
add
lods
xchg
mov
xor
das
sbb
mov
icebp
nop
xchg
fwait
xchg
int3
sub
xchg
xor
test
lret
icebp
popf
mov
sahf
idivl
adc
and
jno
adc
sbb
jo
icebp
adc
jg
or
and
idivb
push
lret
or
inc
jecxz
mov
movsl
loope
and
cli
jmp
icebp
mov
hlt
sahf
cmp
adc
ret
shll
jb
aas
pop
and
pop
ss
dec
mov
mov
push
mov
mov
cmp
sub
and
out
out
test
jg
test
pop
mov
xlat
push
aas
dec
or
dec
jne
pop
fwait
dec
lahf
dec
fldcw
jecxz
ret
ret
popa
adc
inc
pop
ja
and
inc
pop
rcrb
mov
lret
adc
popa
jle
pushf
cmp
mov
sbb
mov
dec
in
pop
or
xor
movsl
int3
cmpl
lret
mov
clc
cmpsl
rcl
outsl
push
stos
fldl
jle
jno
ret
mov
or
int
ret
out
lds
outsl
test
push
cmpsb
push
add
pop
jo
cmpsb
push
addr16
arpl
mov
cmp
jg
into
out
adc
mov
add
xchg
gs
loope
pop
xor
cli
je
pop
addr16
sub
dec
std
leave
xor
add
cmpb
mov
call
es
bound
mov
je
adc
jmp
dec
insl
aad
and
push
or
dec
pop
dec
adc
push
ds
insl
hlt
jno
adc
inc
shlb
cld
or
adc
fistpl
loopne
add
fnstcw
sti
mov
adc
adc
in
adc
lahf
sahf
imul
pop
lods
mov
lds
bound
sub
jbe
inc
mov
push
out
push
push
mov
xchg
pop
mov
mov
in
dec
cmpsl
pop
push
call
jnp
cmp
inc
inc
lods
aas
xor
mov
ret
inc
mov
pop
movsb
inc
cmp
into
xchg
lcall
scas
pop
jb
sahf
mov
movsb
in
test
fdivrs
out
pop
xor
aad
jl
popf
in
clc
mov
push
jns
sahf
stc
lret
in
adc
dec
push
xor
in
imul
pop
std
pop
out
jle
lods
xor
sbb
ss
in
sub
inc
xchg
adcl
cmp
int3
stc
fcmovbe
cmpsl
dec
dec
add
loopne
push
mov
in
test
in
clc
adc
dec
xchg
sub
jp
xchg
push
inc
fcmovnu
into
cld
lock
sti
or
mov
adc
sbb
lcall
imul
fsubs
pushf
mov
sbbb
cltd
call
pushf
ljmp
pop
mov
jecxz
popw
imul
sti
jns
sbb
xchg
mov
xchg
fisttpl
cmp
mov
jno
sti
stc
pop
jg
stc
cmp
adc
idivb
adc
aaa
sub
scas
int
mov
enter
stc
xchg
add
and
jns
sbb
sub
cltd
insl
sub
mov
sbbl
lock
jge
pop
pop
cld
pop
adc
movsb
scas
das
fnstcw
out
int
jae
packsswb
adc
adc
xchg
imul
add
fidivrs
arpl
shrb
mov
xor
mov
cltd
xor
mov
cli
dec
lahf
jae
jg
rcll
lret
mov
adc
cmc
cli
jae
jle
dec
std
xor
sub
push
and
fwait
adc
pop
notb
dec
jle
pop
sahf
jo
inc
clc
xor
cmp
xor
call
aaa
fcoml
aam
aam
push
nop
dec
sahf
cmc
bound
fidivl
scas
cmc
out
fistl
cs
xchg
lret
xor
sub
pop
inc
dec
int3
setne
jmp
xchg
add
xor
xchg
adc
mov
icebp
outsl
or
ret
mov
dec
lahf
loop
adc
shll
cmc
sbb
roll
pushl
gs
mov
xchg
cli
mov
push
popf
fwait
dec
xchg
loop
int3
mov
ds
lock
sti
inc
icebp
popl
mov
jle
push
enter
ja
xchg
fstps
xchg
mov
jb
inc
ss
mov
fcompl
fwait
mov
in
loopne
sti
pop
xadd
and
pop
out
inc
inc
xor
push
push
dec
test
push
ret
cmpsl
pop
adc
cmp
or
xor
fbld
adc
mov
jecxz
shll
arpl
pusha
cmpsb
repnz
dec
jne
mov
jae
jo
clc
xchg
or
jmp
xchg
in
dec
cld
sbb
mov
fs
adc
push
jno
loope
jge
aaa
mov
cmpb
int3
filds
ljmp
daa
pop
in
outsb
jb
into
je
sub
cmp
add
mov
xchg
and
ja
xor
xor
xchg
sub
cld
sub
jle
ljmp
fiaddl
sbb
pop
push
adc
cmp
movsb
out
arpl
jp
sbb
cmpsl
jp
cmp
or
int3
jo
or
fdivp
xchg
ljmp
mov
fistl
and
call
es
xor
mov
cli
or
mov
test
iret
sub
xchg
lahf
mov
daa
inc
inc
ja
mov
into
pop
jne
jmp
jmp
aad
outsl
jno
push
or
or
sbb
dec
sahf
lea
clc
cli
insl
dec
cmpb
xlat
test
jo
lret
inc
xchg
and
in
or
repz
jecxz
add
mov
mov
movsb
bound
out
mov
xchg
sbb
dec
cld
stc
inc
popa
adc
fwait
cmp
movsb
lahf
pop
pop
fidivl
adc
cmpsl
pop
inc
xor
shll
lods
addl
or
iret
mov
into
sahf
mov
or
cs
addr16
xchg
jmp
or
movsl
xor
data16
shll
mov
lret
cmp
jl
xor
jle
cld
cld
sbb
jl
add
xor
lahf
enter
outsb
push
in
js
inc
sbb
xchg
fisubl
dec
dec
inc
repz
addr16
pusha
adc
inc
in
negb
sahf
out
fnsave
cmp
and
pop
mov
xor
push
mov
aaa
je
test
jo
add
or
stos
mov
out
adc
jle
xchg
test
in
xlat
sub
bound
pop
xor
mov
ret
mov
gs
and
das
adc
adcl
sbb
mov
add
je
insb
aas
popf
mov
jns
jmp
mov
add
cmpsl
pop
pop
cmc
dec
out
mov
lock
cltd
in
sub
push
mov
fwait
xor
xchg
xor
fadds
jg
mov
dec
decb
aam
cmc
filds
imul
dec
xor
aam
mov
out
xchg
sbb
int3
xor
enter
xor
pusha
fst
fistl
ljmp
push
rolb
mov
sbb
push
sub
xchg
call
inc
jecxz
xchg
aas
out
cmp
and
sub
jae
jo
jmp
cmp
fs
and
sub
sub
inc
cltd
ds
or
cmp
mov
pop
das
mov
jb
pop
mov
xor
mov
jl
xor
lea
aad
sbb
mov
push
cwtl
xor
xchg
dec
or
xor
jl
mov
loopne
sub
fsubl
mov
adc
inc
inc
pushf
mov
push
mov
xor
mov
inc
fldt
mov
jle
mov
dec
fidivrl
movsl
add
mov
insl
cmp
repz
stc
cmpsb
shl
call
sahf
push
addr16
cwtl
sbb
add
pop
stc
adc
cmc
fldenv
shrl
jno
into
mov
cmp
out
gs
pop
das
movsb
pop
pop
cmpsl
sbb
mov
xorb
adc
js
les
mov
in
int3
adc
fstp
or
sub
xchg
rclb
imul
fcom
mov
xor
div
jp
or
cmpsb
or
push
cli
inc
inc
test
shlb
cld
xor
push
cltd
or
adcl
add
negl
fsubs
pop
stos
repnz
inc
mov
lcall
subl
mov
stos
sub
call
mov
popa
ja
xor
xor
cltd
xor
mov
add
shl
xchg
cmpsl
bound
cmp
pop
lock
leave
dec
arpl
sbb
xor
mov
lea
movsb
out
scas
mov
dec
mov
fiaddl
in
ljmp
sub
or
cmp
pop
xchg
xor
std
push
outsb
cmp
dec
push
push
xchg
mov
mov
xchg
mov
pop
dec
pop
push
scas
jns
loope
or
dec
stos
stc
mov
or
les
test
int3
adc
jmp
or
pop
pop
mov
push
or
hlt
mov
push
rolb
incb
push
xchg
xor
adc
xor
mov
adc
mov
push
lret
fnstenv
xchg
adc
loopne
xor
sub
scas
data16
jbe
inc
push
aad
mov
xchg
in
lea
adc
scas
and
cs
aas
mov
sti
loopne
pop
mov
rclb
int
cmp
ret
mov
test
sbb
shrb
mov
and
movsl
rcr
adc
idivl
adc
cmp
push
mov
aam
jne
insb
adc
jp
mov
andb
loope
pop
int3
mov
popa
dec
in
cmp
push
shlw
mov
cli
lods
dec
adc
icebp
in
fidivrl
jle
mov
sub
insb
loopne
ja
sub
lcall
enter
icebp
xchg
xor
add
movsl
xlat
popf
mov
push
ficomps
mov
xchg
pop
pop
mov
or
xlat
xlat
fidivs
scas
mov
lret
push
in
scas
xor
pop
mov
fiadds
xlat
aad
inc
mov
sub
shlb
js
and
sub
inc
sbb
fnstsw
mov
imul
sbb
or
add
out
cli
cmp
cmp
push
out
adc
int
mov
push
out
sbb
icebp
inc
jle
lds
ljmp
sub
inc
mov
popf
shlb
pop
icebp
cmp
das
outsb
leave
hlt
aas
and
sti
push
outsl
leave
outsb
mov
and
hlt
jle
test
pop
pushf
leave
mov
mov
mov
sub
aam
test
adc
sub
pop
pop
imul
mov
xor
mov
leave
shr
lock
add
in
sub
mov
loop
aam
pcmpeqd
fwait
sub
jb
jnp
xchg
pop
mov
mov
repnz
jle
push
jg
ficompl
add
movsb
scas
int
sbb
sbb
repz
in
xor
cmpsl
subb
dec
jle
mov
sbb
loop
out
pushf
insl
mov
loop
mov
push
test
lret
repz
lock
aad
sbb
das
sub
ja
daa
outsb
mov
push
push
pop
fs
jne
into
outsb
and
lret
xchg
push
shrb
or
cmp
out
push
insb
loopne
clc
out
jge
push
sahf
hlt
stos
xchg
into
pop
popa
sbb
int3
xorl
int
mov
and
mov
aam
aad
lods
pop
sub
mov
lods
dec
and
sbb
and
xchg
xchg
aad
icebp
add
add
mov
xchg
xlat
cmpsl
test
nop
pop
addr16
lret
cmp
fucomip
out
lcall
jg
test
adc
push
sub
fidivs
fsubrs
pop
mov
pop
cmp
ret
testb
sub
push
mov
imul
pop
cmpsb
fsave
mov
nop
aaa
mov
mov
aaa
in
aas
daa
arpl
sahf
push
gs
test
push
mov
push
arpl
mov
sbb
dec
jns
ret
scas
pop
aaa
out
mov
pop
xor
adc
jge
add
cmp
mov
push
jns
testb
aam
dec
mov
pop
lret
cmp
and
mov
int
xchg
mov
pushf
pushf
inc
fcompl
inc
mov
call
sub
shl
addr16
pop
inc
push
push
push
inc
cmp
mov
ds
outsb
and
js
fwait
int
inc
push
mov
sbb
cltd
ja
shrb
sub
xchg
aaa
cmp
mov
xchg
ret
add
lret
cwtl
lock
dec
lea
aaa
iret
xor
loop
gs
loope
ja
daa
push
jne
dec
jb
adc
or
mov
push
jmp
aas
sbb
mov
push
ds
adc
ficoml
scas
sahf
aaa
lods
inc
repz
add
push
fistpll
jmp
push
xchg
insl
scas
or
push
lds
lret
rolb
icebp
cmpsb
dec
cmpsb
fcomi
jb
adc
push
inc
flds
outsl
mov
sub
mov
pop
movsb
sbb
push
xor
adc
dec
pop
jne
iret
xchg
mov
and
mov
adc
movsb
push
push
sbb
cmp
sbb
pop
fbstp
push
outsb
mov
jg
insb
jne
xchg
push
push
stos
loop
xchg
and
mov
sbb
cltd
sarb
frstor
scas
sar
sbb
inc
xchg
mov
iret
rclb
insl
mov
imull
out
pop
test
mov
pop
insl
jle
cltd
or
inc
outsw
jbe
outsl
and
ds
dec
push
mov
inc
mov
jl
in
repz
inc
popa
pop
fidivl
adc
dec
lods
cli
test
mov
and
mov
adc
or
sbb
jns
ljmp
aam
cli
out
inc
fsubrp
pusha
je
pop
and
enter
repnz
mov
imul
push
stos
mov
dec
push
push
lock
cmp
inc
cmc
int
pop
xor
jg
mov
nop
das
xchg
mov
cmovbe
dec
and
dec
pushf
movsb
mov
in
lock
das
cmpsb
out
js
aaa
push
cmp
cltd
lock
cltd
test
jg
and
fdivrl
jmp
jl
push
mov
hlt
mov
jge
adc
gs
subl
nop
lahf
xchg
pop
jae
mov
inc
bound
enter
aas
mov
fs
popa
inc
xchg
xchg
mov
pop
jmp
out
xchg
xor
aad
mov
cwtl
mov
int3
xor
lret
adc
jbe
or
fisubrl
aaa
add
push
in
rol
popa
in
setno
bound
cmc
pusha
mov
inc
mov
adc
pop
fmul
inc
ljmp
and
and
inc
inc
jns
or
test
pop
mov
popa
mov
std
cmp
push
ret
scas
sub
inc
sub
pop
or
mov
scas
mov
call
jge
mov
repz
mov
inc
sbb
repnz
mov
divb
or
mov
cmp
inc
lret
movsb
adc
inc
xor
repnz
push
adc
rcl
lahf
mov
add
jmp
jp
mov
sub
and
sbb
push
daa
clc
cwtl
jp
test
lahf
mov
mov
les
pop
xchg
mov
mov
push
inc
cmpb
and
sti
insl
out
xchg
jnp
push
popf
insl
mov
mov
mov
pusha
sub
lret
pop
test
push
add
cmpsl
sub
cmp
and
negl
outsl
xchg
lea
lret
jae
adcl
mov
mov
or
dec
mov
popf
out
inc
xchg
fdivrs
rcrb
jnp
stos
pop
adc
and
push
pop
and
mov
inc
and
out
push
sti
pop
cmpps
int3
gs
outsb
dec
push
mov
xchg
mov
inc
stos
xor
cltd
mov
das
repnz
or
ja
push
jne
fwait
mov
cwtl
adc
cwtl
xchg
sub
enter
xchg
lcall
lods
push
jecxz
std
fcmovu
fldl
test
mov
in
sub
jecxz
rorl
or
je
mov
fdivrl
mov
lret
je
pusha
add
add
cmpsl
pop
xchg
and
pop
aas
xchg
pop
and
ret
pop
add
cmpsb
scas
jb
mov
pusha
js
xchg
jl
ret
rcll
sbb
sti
subl
dec
les
xor
xchg
and
pop
pop
jne
int3
scas
xchg
int
fisubrs
fists
and
jne
push
aam
add
push
call
adc
leave
outsb
push
mov
xor
mov
sarb
out
subb
inc
mov
add
hlt
leave
scas
xlat
sub
adc
movsb
mov
loopne
mov
mov
push
mov
rcrb
les
adc
out
mov
xchg
mov
mov
call
aas
outsb
mov
push
xchg
pop
mov
and
aaa
mov
xchg
popl
loopne
pop
insl
pop
stos
inc
movl
cmp
leave
loopne
pop
mov
fwait
xchg
sbb
jns
jae
dec
mov
loopne
stc
lock
insb
add
es
mov
outsl
addr16
fcmovnb
bound
movsl
filds
nop
call
cs
jno
jb
or
xchg
jmp
mov
pop
xchg
cmp
test
and
aam
lds
out
test
pop
jge
jns
push
sbb
mov
sti
sbb
iret
popa
shrl
ficomps
push
cwtl
mov
mov
xor
pop
fcom
popf
lret
inc
imul
out
std
push
xchg
and
test
inc
gs
push
sarb
cltd
cs
push
pop
movsl
ds
clc
cld
repz
xor
inc
lea
aaa
sti
jae
xor
addr16
dec
jl
add
sbb
cmp
hlt
loop
cmc
shlb
rcr
lods
lret
rcrl
stc
sti
jg
or
cmp
outsb
mov
push
xor
lds
push
add
das
pop
je
or
les
outsl
dec
aam
mul
push
cmp
movsl
sub
cmp
push
and
insl
aad
cmpsb
sub
insb
xchg
jg
stos
fsubr
test
fildll
mov
shrl
mov
jns
dec
xor
or
push
push
and
aas
jmp
cli
lret
dec
or
jle
xchg
lock
jnp
adc
mov
cmp
push
push
mov
push
and
stos
into
jae
rcrl
adc
jae
xchg
or
test
mov
in
mov
aam
addl
xchg
mov
sahf
dec
push
lods
sti
pop
xor
xor
mov
inc
outsl
cmp
dec
push
and
pop
int
push
outsl
xchg
sbb
dec
push
jnp
js
je
lea
pop
aam
cmp
mov
and
call
mov
jo
sahf
push
pop
stos
icebp
mov
dec
adc
sti
int
push
arpl
lods
repz
and
xchg
or
sub
lock
xchg
dec
mov
sbb
sub
jbe
mov
push
xchg
scas
mov
ret
and
and
xchg
or
pusha
mov
clc
xchg
sbb
sbb
jbe
and
andb
jno
aas
lods
add
adc
lcall
movsl
add
jbe
outsb
lods
repz
push
sti
aaa
mov
test
adcb
test
inc
push
mov
mov
adc
and
out
xor
int
mov
xchg
movb
subb
enter
addb
mov
add
add
mov
jno
fwait
sbb
and
cli
sub
ja
cmp
cs
cli
jmp
adc
fwait
push
add
push
insb
outsb
test
lcall
add
add
add
or
dec
or
cmp
movsl
shr
rolb
or
jbe
xor
lea
fcoms
sbb
and
and
stos
movsb
pop
shll
xor
jge
push
push
mov
mov
outsb
xorps
mov
inc
mov
dec
xchg
daa
rolb
push
clc
cmp
sti
jecxz
sub
xlat
push
pop
dec
aad
sbb
and
fcoms
iret
int
pop
outsl
pushf
repnz
jbe
in
push
outsl
inc
cld
popa
iret
adc
jg
push
cmc
dec
nop
cmp
jnp
out
movsb
cmc
addr16
add
fnstsw
aas
or
sub
push
xor
into
aaa
and
fdivl
fcomip
inc
gs
adc
dec
jo
call
idivl
or
clc
sub
adc
push
in
xchg
mov
mov
push
mov
and
es
popf
lods
cmpsb
and
mov
inc
adc
or
sbb
shlb
mov
push
ds
push
push
pop
dec
js
dec
mov
ds
insb
mulb
sahf
xlat
push
imul
pop
mov
add
adc
cmc
sbb
addr16
call
stos
into
mov
xor
mov
mov
loop
ss
and
rorb
fistl
aam
scas
pop
xchg
push
mov
mov
mov
fs
jns
jge
mov
lcall
outsw
fs
inc
iret
test
inc
sub
lahf
pop
ret
mov
imul
sub
xchg
push
pop
mov
out
jmpw
sbb
mov
rclb
xor
orl
mov
lods
mov
adc
rclb
xchg
xchg
sbb
jg
pop
pop
lret
ljmp
aam
or
xchg
xor
xor
push
cmp
insl
std
cmpsl
mov
xchg
cmp
in
neg
push
out
push
and
psrlq
cmp
sbb
inc
pop
sub
addb
dec
ret
pop
cmpsl
jecxz
jo
push
sbb
sbb
pop
mov
and
test
pushf
flds
jl
mov
inc
js
sarb
mov
jo
mov
adc
fsubr
je
icebp
mov
sti
cmp
add
bndstx
lcall
loope
jb
inc
add
cmp
nop
or
cmp
push
mov
push
cwtl
push
popa
pop
mov
sbb
pushf
fidivl
ret
mov
cmc
dec
movsb
pop
cmp
mov
mov
dec
inc
mov
outsl
inc
add
clc
mov
push
xchg
nop
inc
ret
pop
push
insl
ds
out
clc
add
dec
outsl
sub
jle
pop
cmp
add
and
lret
jae
ret
sub
popa
mov
pop
push
mov
adcl
cld
pop
pop
ss
push
xlat
lcall
test
ja
mov
popf
test
push
push
in
fadd
into
push
rclb
fistl
incb
pop
imul
dec
imul
aas
mov
mov
mov
mov
cltd
pop
xlat
sti
adc
int
jne
pushf
pop
xchg
push
imul
out
adc
mov
or
jne
loop
push
sub
lret
xchg
and
bound
sbb
int3
inc
ds
mov
push
iret
iret
jl
mov
imul
shr
insb
cmc
sub
jno
rclb
jne
mov
push
pushf
jo
fwait
pop
addr16
dec
cmp
ss
dec
jno
shlb
shl
jnp
leave
movb
push
call
pop
in
movsb
popf
repz
sub
nop
mov
fcmove
xchg
adc
xchg
xor
sbb
fs
adc
lds
imul
movsl
or
jns
fldenv
cli
imul
push
push
xor
jns
pop
xchg
mov
sti
mov
lea
jmp
shl
sbb
sbb
mov
fidivs
inc
push
cltd
into
lock
xor
movsb
dec
push
repz
xchg
in
dec
sub
mov
xor
iret
pop
stc
out
cmp
xor
out
mov
lods
and
inc
mov
jl
push
test
insl
add
stos
ss
mov
daa
xchg
mov
xor
cmp
mov
jp
popf
push
sub
and
cld
out
mov
xlat
scas
cmpsl
and
mov
pusha
mov
dec
pop
and
xchg
lods
push
adc
jg
dec
or
mov
loop
mov
dec
push
mov
popa
popf
repnz
push
ja
xorb
aam
mov
adc
sbb
xlat
hlt
std
xor
out
imul
jp
rcrb
and
xlat
and
fimull
xor
lods
lock
sbb
mov
xor
dec
repnz
loop
jg
lods
shrl
jge
mov
push
stos
jge
ret
insb
shlb
flds
inc
stos
jne
mov
dec
rcl
insl
push
jns
xor
adc
pop
or
lock
and
pop
imul
ljmp
sbbl
xchg
push
sub
jb
xor
cmp
pushf
mov
and
scas
test
jg
cmpl
shll
fcoms
stos
mov
cmp
xor
mov
mov
lods
xor
mov
jp
lahf
inc
mov
not
adc
stc
in
push
outsb
repnz
sub
push
and
aam
daa
or
mov
mov
add
lea
movl
mov
jmp
inc
xor
outsb
mov
lcall
jle
xchg
sub
movsb
and
repnz
dec
cwtl
dec
gs
and
cmc
adc
cmpsl
push
add
loope
jecxz
sbb
ret
std
mov
and
fcomps
mov
pop
adc
stc
mov
mov
andb
xchg
cmpsb
mov
pop
cmp
stc
add
add
xchg
pop
aad
jae
test
sub
xchg
or
xchg
adc
lock
movsb
jae
sbb
xchg
mov
frstor
jno
cmp
or
push
inc
jecxz
in
xchg
add
and
mov
mov
xchg
fmuls
push
adcl
inc
cld
dec
xor
cld
sti
repnz
fisubl
sbb
pop
push
jne
rcrb
jle
sub
daa
sub
out
pop
and
pop
jns
outsl
xchg
xor
cmp
mulb
xlat
insl
test
inc
sbb
lcall
dec
cmp
mov
jno
add
cwtl
int
fldenv
sub
push
cmp
xchg
sbb
push
ss
mov
cmp
orb
daa
mov
ds
leave
ret
hlt
cmp
pop
jg
loop
repnz
mov
sub
lods
cltd
pop
xchg
cmp
int
lahf
dec
cli
push
sahf
or
lods
in
pop
dec
pop
push
xor
dec
lods
imul
ret
mov
adc
sub
mov
std
jae
shrb
out
movsb
mov
mov
incb
aad
xchg
or
iret
mov
xlat
xor
push
jmp
mov
addb
jge
iret
xchg
lret
fs
sub
stos
xor
jle
and
test
cs
sti
aas
sarb
xchg
push
jle
dec
or
mov
xor
or
ret
cmpsl
jmp
inc
jle
lea
inc
cltd
ret
and
mov
loope
sbb
filds
sbbb
lahf
cmp
xor
ds
adc
gs
xchg
mov
cmp
push
loopne
pop
dec
push
mov
lret
xchg
roll
jmp
mov
push
mov
sbb
and
scas
add
cmp
mov
sti
fsubs
mov
cwtl
lock
addr16
dec
dec
insl
aad
xchg
jns
mov
bound
adc
insl
xchg
stos
or
inc
scas
pop
push
mov
adc
push
mov
filds
cmp
sub
daa
inc
loope,pn
xchg
je
loop
clc
jecxz
insl
add
adc
mov
sub
pop
sbb
or
xor
dec
xchg
int
xchg
sub
rorb
cwtl
push
ds
bound
jne
fstpl
mov
mov
cmp
sub
mov
les
lret
cmp
nop
lret
sub
push
ret
in
jecxz
subb
push
adc
inc
adc
adc
mov
aas
and
stos
xchg
in
cli
lret
mov
push
inc
call
into
push
cmc
xchg
inc
enter
adc
hlt
mov
icebp
and
pop
test
loop
add
cmp
cmp
xlat
push
sbb
push
mov
loop
xchg
add
mov
cmp
adc
add
sub
mov
int3
xlat
orl
ret
addr16
add
dec
inc
xchg
push
scas
cs
mov
mov
popf
cmp
cs
jl
lahf
fldl
into
js
out
lret
rclb
fdivrl
sbb
mov
test
stos
jmp
pop
int3
xor
idivb
roll
mov
ret
dec
pusha
push
cmp
fnstsw
cwtl
dec
mov
jle
mov
mov
ret
jno
lcall
lods
pop
sbb
rolb
xor
lock
fisttpll
clc
mov
push
outsb
stc
pushf
cmp
icebp
pop
jne
out
sbb
iret
xchg
shrb
mov
loope
ficoml
inc
jnp
lds
test
push
pop
fsts
push
bound
xchg
in
ds
call
loop
xchg
dec
xchg
jmp
sub
nop
test
inc
jmp
sti
jmp
rcll
inc
lahf
add
add
dec
scas
rol
push
adc
jb
push
mov
je
or
dec
rorb
mov
adc
xchg
addr16
xlat
jo
jb
fimull
add
sub
xchg
iret
xchg
push
push
test
adc
aam
ss
insb
mov
xor
stos
push
and
inc
cmc
ds
enter
roll
ja,pn
ret
or
inc
ret
fsts
or
jne
xchg
mov
sub
in
push
js
pop
cmp
xchg
outsb
xor
cmp
jle
push
and
jg
adc
add
or
mov
cmp
popf
mov
push
lods
ja
push
pushf
push
ret
sub
lds
imul
sub
mov
in
cmp
sbb
or
aam
push
out
je
pop
pop
adc
dec
or
adc
mov
in
or
lods
pushf
pop
xor
mov
test
ret
mov
loop
loopne
and
sub
cwtl
mov
scas
inc
dec
add
loope
pop
push
in
clc
ljmp
mov
rep
jnp
or
pop
xchg
xchg
adc
mov
mov
test
jge
mov
dec
sbb
pop
out
sub
xor
es
test
push
cmp
sbb
or
out
psrlq
pop
clc
jns
call
sub
in
pushf
or
imul
bound
push
mov
negb
mov
jecxz
dec
push
xlat
lods
mov
xchg
insl
add
mov
cwtl
data16
inc
add
sahf
cmp
mov
testl
jmp
xor
or
sbb
push
jns
xchg
test
sbb
test
addr16
out
mov
mov
mov
mov
iret
in
fisubl
mov
ljmp
in
lret
cmp
xor
jbe
fcompl
cltd
cli
clc
xchg
jae
adc
imul
insb
ljmp
loope
imul
sbb
mov
stos
mov
je
imul
mov
andl
lods
push
lock
xchg
std
fdivrl
jns
lret
adc
loope
jbe
fistps
lods
out
mov
add
lods
or
cld
mov
and
outsl
mov
lret
sub
js
fnsave
xchg
sti
xchg
xlat
ljmp
xlat
imul
cmp
jecxz
add
xchg
mov
push
in
arpl
jae
push
mov
call
add
je
xor
xchg
out
cltd
add
nop
or
enter
fdivs
cmp
sub
and
mov
sub
roll
ret
sub
les
push
xchg
mov
dec
dec
iret
xchg
mov
cmp
aaa
pop
addr16
push
jp
cwtl
xchg
into
mov
jo
jmp
lods
mov
out
idivl
inc
push
xchg
mov
int3
inc
adc
push
jmp
push
das
mov
nop
cmpsl
jb
fmuls
int
call
jecxz
pop
xor
bnd
xor
es
addr16
jp
xchg
sbb
push
repz
push
shr
jns
cli
in
iret
xor
outsl
or
mov
or
cli
add
push
or
hlt
inc
adc
pop
call
inc
enter
cmc
mov
cmp
jg
mov
inc
dec
inc
or
xchg
inc
xchg
xor
adc
xchg
push
or
lock
mov
mov
data16
dec
add
pop
mov
jb
mov
sti
loope
cmp
in
push
mov
xchg
or
dec
sub
out
sti
into
int
xchg
mov
loop
push
mov
dec
push
jg
mov
or
ss
add
jp
push
std
pop
or
stc
cmpl
cmc
dec
add
mov
gs
pop
test
sbbb
in
bnd
mov
mov
or
xchg
pop
fistpl
into
mov
dec
mov
mov
fwait
add
xchg
mov
in
adc
in
fisubrl
xor
adc
iret
inc
jl
rorl
xchg
push
add
add
pop
lret
lock
cli
sti
xor
xor
inc
daa
cmp
les
lret
les
sub
pop
and
add
mov
jne
adc
mov
push
cmp
movsl
scas
test
sub
leave
ret
or
orb
adc
mov
rorl
lods
insb
mov
test
stos
fadd
mov
inc
xor
jno
in
ret
out
sbb
mov
imul
insl
mov
push
dec
mov
ja
push
mov
lock
js
mov
adc
dec
shll
js
xchg
cwtl
adc
nop
dec
out
je
xchg
sbb
std
adc
xchg
jbe
sbb
gs
add
mov
sbb
scas
shlb
pop
ficomps
jnp
lret
aad
mov
pop
mov
pop
ljmp
arpl
nop
scas
lret
jne
arpl
shll
adc
idivb
jge
xchg
jns
push
xlat
imul
sbb
pop
adc
movsb
dec
mov
mov
stos
xor
loope
mov
jno
push
pop
cli
inc
cmp
test
dec
out
ret
lcall
xor
call
xor
inc
stos
repnz
jp
pop
or
into
and
leave
mov
sbb
xchg
insl
dec
xchg
fnsave
dec
imul
pushf
jp
or
dec
xchg
jl
lods
rclb
push
call
lea
hlt
jp
inc
push
ds
scas
je
iret
gs
dec
cltd
addb
cld
div
lcall
push
out
inc
or
decl
pop
inc
mov
push
mov
push
or
aad
push
mov
jae
cli
jg
int
inc
inc
in
jp
push
dec
adc
or
sub
mov
sbb
fidivrs
push
inc
jmp
jge
arpl
dec
js
inc
cmp
pop
cs
add
daa
push
adc
rol
inc
mov
mov
mov
cld
xchg
loope
mov
adc
fs
jg
cwtl
sti
ficoms
inc
in
xchg
in
repnz
test
out
adc
lahf
pop
inc
push
jno
lahf
mov
lea
pop
data16
pop
int3
xchg
stos
pop
mov
and
adc
insb
ljmp
mov
popa
jae
dec
cmpsb
jbe
cmp
push
lods
rclb
dec
fs
xor
mov
dec
repz
cld
dec
jmp
push
pop
or
sub
or
jno
test
xchg
imul
ja
scas
mov
adc
rcrl
faddl
mov
or
ret
ja
pop
xchg
push
add
push
insl
fdiv
xchg
add
stc
into
lcall
movsl
popf
mov
xor
divb
xlat
jecxz
insb
mov
popf
sbb
xchg
push
orb
in
or
enter
sub
lret
push
data16
aad
xor
xchg
inc
mov
loopne
and
dec
jb
and
push
mov
pop
pop
sbb
push
pop
rcr
sti
mov
xchg
fs
fisubs
xchg
inc
adc
pop
movsb
lds
dec
sti
pushl
sti
mov
fmull
pop
aam
loope
push
inc
int3
jmp
ljmp
out
rorl
mov
adc
lcall
roll
scas
aaa
inc
cmp
bound
mov
sarl
sbb
xor
ja
leave
roll
stos
push
das
popa
fistl
test
dec
cmp
and
imul
and
shlb
cmc
in
and
mov
add
and
popa
stos
mov
sbb
incl
mov
mov
cmp
fdiv
xchg
pusha
jns
mov
stc
icebp
sub
mov
mov
outsl
popf
mov
aaa
fists
rcrb
mov
fistpll
mov
sbb
pusha
dec
mov
xchg
mov
loopne
mov
stos
and
popf
mov
push
xchg
int
popf
lods
dec
mov
inc
pop
mov
xchg
mov
push
bnd
sbb
pop
pop
xchg
addl
orb
and
push
xlat
lods
dec
pop
mov
mov
loope
xor
jne
nop
dec
iret
repnz
stc
xor
or
xor
jno
cltd
icebp
icebp
adc
pop
loope
push
sub
aaa
jnp
arpl
or
mov
add
dec
out
ds
mov
scas
push
inc
pop
es
movsl
jns
lcall
fwait
pop
or
subb
test
xchg
rcll
mov
cmp
xor
push
orl
fistps
add
push
shlb
negl
push
push
xchg
pop
cmp
clc
xlat
jo
sbb
ljmp
hlt
std
lret
call
jecxz
xchg
jge
std
fmuls
cmpsb
out
push
cld
sbb
call
ret
mov
push
fs
jp
sbb
loop
or
or
push
mov
adc
enter
pop
cltd
nop
pop
push
inc
pop
movsl
mov
in
and
add
ja
sahf
add
test
pushf
shrb
xor
add
out
push
mov
loop
ret
outsb
push
lds
add
aam
inc
mov
mov
xor
test
mov
aaa
leave
mov
sub
xchg
lock
mov
cmc
jl
mov
out
or
stc
rolb
pop
popf
xchg
sahf
test
gs
pusha
mov
scas
dec
and
cwtl
scas
lret
jge
aad
sti
fmulp
jg
lret
sub
inc
and
roll
add
inc
test
out
or
lea
cmc
out
cld
in
js
mov
inc
loope
sbb
mov
stos
xlat
loopne
mov
fmulp
out
and
pushf
pop
mov
dec
in
lods
rcrl
jno
filds
sbb
scas
sub
pop
insb
and
loopne
xchg
and
sub
cmpl
aaa
aam
mov
jbe
jno
sti
insl
push
outsb
pop
sub
cmp
movsl
int3
call
mov
icebp
inc
mov
rclb
cmc
movsb
lds
das
icebp
add
jns
or
cmp
sub
jp
ret
mov
lcall
mov
lcall
scas
jno,pt
jnp
dec
inc
xor
shlb
or
jg
mov
mov
iret
stc
xor
mov
ret
mov
push
cmp
push
stos
sub
out
or
mov
inc
fwait
xchg
cld
mov
jae
jmp
movsl
insb
push
iret
mov
stc
push
ret
sarb
sbb
jge
and
adc
div
cmp
rcrb
popa
insb
push
sub
xchg
sub
mov
jg
pop
icebp
inc
mov
out
arpl
dec
aaa
inc
sti
test
hlt
cli
jl
jno
sahf
mov
jecxz
sbb
xorl
mov
sub
mov
je
scas
sbb
clc
out
push
and
div
call
in
cmpsl
adc
bound
test
pop
enter
pushf
fdivp
push
sub
push
aaa
or
arpl
gs
add
pop
lret
insl
bound
mov
cltd
sub
jl
mov
push
inc
hlt
hlt
iret
push
inc
or
add
inc
idivl
inc
dec
nop
mov
mov
imul
dec
sbb
iret
inc
movsb
repnz
or
inc
push
xor
arpl
sbb
mov
pop
rolb
xor
lds
mov
mov
mov
and
pop
dec
sbb
dec
mov
jno
int
call
dec
mov
mov
mov
add
shr
in
mov
add
push
pop
nop
into
fs
movsb
jne
sub
in
sti
adc
adc
ja
mov
mov
sbb
xor
les
fldl
dec
sahf
mov
and
lods
aad
les
dec
cltd
mov
leave
fmulp
pop
mov
push
stos
insb
repz
sbbb
fsubl
nop
xor
xor
test
mov
fwait
clc
lods
pop
or
stos
movsl
xor
push
xchg
incb
or
pop
or
lea
jns
test
xchg
jbe
inc
xor
nop
and
out
mov
mov
push
ficoml
inc
cwtl
insl
sub
xchg
or
lcall
dec
push
test
pop
jmp
sbb
aas
push
int3
pop
sub
ret
dec
dec
mov
jb
or
mov
sar
int
inc
jp
xchg
roll
jp
fwait
nop
inc
popf
bnd
std
mulb
dec
and
lods
xorl
pop
imull
push
arpl
test
adc
inc
dec
xchg
push
push
icebp
sub
nop
mov
mov
jo
lcall
xchg
push
setae
icebp
sub
xchg
addr16
test
and
and
icebp
arpl
dec
cmp
jbe
jge
push
mov
test
enter
gs
inc
or
out
inc
cmp
jmp
lock
bound
in
and
repz
push
es
cmp
aad
movsl
fnstcw
xor
mov
repnz
dec
pusha
mov
idivb
xor
daa
add
jle
dec
nop
lcall
sub
mov
cltd
dec
push
jb
jbe
cmp
mov
hlt
cmp
gs
hlt
push
mov
xchg
std
mov
jo
ds
jae
push
push
mov
add
call
xor
and
mov
data16
notl
fcmovb
clc
push
or
add
push
xchg
iret
stos
imul
lock
push
jns
mov
xor
jle
and
pop
push
leave
pop
negb
jne
sti
cmp
add
ss
jg
sub
dec
push
pop
cmc
or
pop
cmpsl
adc
adc
dec
add
cmc
sarb
mov
pop
int
fst
icebp
adc
rorl
push
ret
jno
jmp
je
or
sub
mov
fnstenv
cmpsb
imul
inc
mov
mov
leave
pop
repz
cmp
sub
xor
mov
jns
out
mov
es
dec
leave
sub
pop
or
mov
loop
imul
add
flds
xorb
push
lods
inc
into
aas
jg
lods
out
pop
add
bound
push
or
jp
lret
inc
adc
cmp
notl
mov
sub
mov
pop
push
mov
sarb
loope
jmp
ja
push
sbb
insl
jbe
dec
aaa
mov
mov
cmp
adcl
push
shl
sub
stc
adc
mov
mov
dec
xchg
stc
into
out
lcall
into
fisubrl
xorb
push
lret
and
cmp
and
push
stos
push
lods
imul
sbb
push
in
in
fimull
xor
lds
int
popf
mov
arpl
mov
mov
xchg
and
pop
js
push
fisttpl
xchg
cmp
arpl
popf
adc
js
adc
js
inc
dec
or
in
cmp
es
inc
xchg
ds
add
or
inc
push
mov
arpl
iret
pop
clc
xor
jnp
fcmovbe
mov
push
in
cmpb
push
or
and
fmull
dec
loopne
push
scas
in
adc
mov
or
push
rcrb
das
pushf
into
pop
add
add
call
ds
mov
pop
stos
xchg
mov
fnstenv
test
gs
mov
or
mov
add
dec
mov
or
mov
mov
sahf
js
mov
out
testb
push
lds
and
insb
incl
arpl
push
popa
nop
sbb
or
ss
sbb
mov
insl
add
mov
mov
and
stos
out
xor
imul
iret
xlat
xchg
enter
pop
shrl
cmpsb
pusha
sbb
fmul
loop
xchg
cs
ss
mov
icebp
insl
cmc
popa
mov
xchg
mov
loope
in
mov
pop
jp
xor
addl
fildll
pop
ret
xchg
sbb
fistl
mov
test
ds
push
cmpsl
ja
ret
pop
fidivrs
adc
push
mov
cltd
clc
xor
in
mov
orb
aaa
jbe
dec
lret
and
cltd
adc
fcmovu
cs
mov
xor
mov
jns
adc
cltd
mov
push
and
sbb
scas
cmpsb
fidivrl
sub
rorl
dec
test
sub
cmc
icebp
test
adc
fldenv
push
mov
dec
popf
push
mov
sub
das
sub
cmpsb
push
repnz
mov
jae
xchg
or
add
add
into
out
mov
imul
mov
jbe
mov
cmp
and
sbb
ficoml
popf
lcall
mov
xor
fwait
shlb
mov
addb
xor
sub
mov
jge
hlt
pop
in
add
sahf
and
out
add
loop
or
shll
dec
add
lods
xor
fldenv
data16
mov
aaa
xchg
pushf
sub
sbb
and
setp
in
jae
js
add
inc
mov
out
push
sbb
pop
scas
fsubp
int
mov
jne
pop
cmp
mov
and
cmpsb
out
subb
sub
lret
test
testb
jl
push
jae
mov
mov
test
lfs
out
mov
push
and
dec
add
popl
add
mov
cwtl
data16
jg
sahf
stos
lcall
add
jns
jae
lock
mov
les
fwait
or
insl
push
or
pop
test
dec
pop
cld
repz
je
push
hlt
or
ficoml
and
int3
lea
dec
add
jg
add
cld
dec
and
testl
aam
and
lods
cmp
adc
add
mov
xor
or
sub
sbb
aaa
ds
jnp
dec
int
mov
insb
xor
cmp
mov
clc
andps
inc
add
leave
scas
lahf
mov
jns
bound
cmpb
add
adc
fldt
dec
sub
aas
popf
pop
popa
dec
lret
jb
cmp
jo
pop
dec
imul
test
mul
std
andl
scas
je
jne
mov
scas
out
cwtl
cli
xchg
add
divb
adc
xchg
cvttps2pi
inc
adc
ud2
xchg
dec
rol
ret
jle
cld
cmp
test
adc
sub
test
inc
popa
pop
ret
leave
jne
sbb
nop
adc
in
pop
clc
mov
lahf
mov
outsb
pop
or
mov
sti
imul
xor
cmp
cli
loope
pop
mov
lahf
mov
and
cmp
in
jnp
add
inc
adc
sbb
inc
call
fadd
pop
adc
fsubs
adc
mov
adc
call
mov
es
ror
mov
jae
mov
push
dec
dec
icebp
mov
mov
repnz
scas
ja
push
outsb
cmp
sub
cld
xchg
loop
and
ret
and
adc
sbb
cmp
dec
leave
lock
push
inc
fcmovu
push
push
or
movb
andl
sub
out
insb
mov
in
les
loope
adcb
repz
or
jne
insl
test
pop
test
push
lock
or
sti
imul
insb
je
in
outsl
lcallw
add
cmp
fs
iret
jne
outsb
les
push
sbb
adc
unpcklps
movsb
xorl
push
cmp
aam
loopne
ja
in
in
fistps
mov
push
xor
xchg
out
inc
inc
adc
into
mov
in
dec
scas
popa
aam
ljmp
mov
sub
inc
add
push
and
cmp
ljmp
xchg
add
mov
ret
adc
fimull
cmp
fstpl
xchg
out
pop
jl
fdiv
push
mov
stos
int3
je
outsb
mov
sbb
inc
lret
call
fdivl
test
mov
xchg
dec
adc
mov
stos
aam
push
push
xchg
cltd
cmp
xor
jmp
sub
nop
mov
xor
loope
cmp
cmp
adc
mov
dec
and
fs
add
mov
movb
aad
int
or
mov
cmp
dec
repnz
pop
es
fcoms
pop
enter
xor
sub
cmp
adc
mov
pop
add
jns
add
adc
cmpsl
lods
test
push
mov
je
out
dec
mov
inc
sahf
andl
iret
cmp
lret
leave
cmp
mov
icebp
jmp
or
mov
dec
push
rcr
xchg
xor
shrb
lds
fmulp
gs
sar
scas
adc
out
mov
pusha
sub
sub
leave
dec
jns
adc
fstpl
add
scas
ja
in
fcompl
mov
loop
sub
sbb
sub
cmp
mov
mov
test
fisttpl
dec
pop
push
mov
push
imul
lahf
jnp
lea
shl
mov
cmpsl
lock
jns
lods
ljmp
sbb
nop
addr16
adc
adc
dec
push
mov
sbb
sub
call
jmp
rorl
jnp
std
mov
std
cmp
dec
bound
rcll
sbb
gs
dec
aaa
xor
mov
jl
jb
arpl
fistpl
mov
dec
pusha
js
cs
and
fcoml
push
jmp
test
ror
cmp
out
int3
cmp
adc
loop
sbb
and
mov
xchg
imul
clc
std
sub
or
jo
in
pop
add
and
and
sarb
lret
scas
jmp
jb
push
and
ficomps
xchg
jns
ss
stos
dec
subb
fists
jns
imul
lahf
loopne
jne
pushf
stos
int3
push
xchg
or
or
fnstcw
adc
fbld
push
je
inc
dec
arpl
add
les
lret
in
mov
lods
pop
cmp
mov
sub
push
jne
cmp
dec
iret
add
jae
in
sub
iret
insb
sahf
push
pop
inc
adc
movb
es
lock
cmp
dec
lds
add
xor
and
xorl
cli
es
outsb
jb
pushf
sbb
jbe
mov
push
pushf
mov
mov
scas
imul
test
cmpsb
pop
icebp
repz
inc
mov
jge
mov
ds
mov
or
das
mov
mov
scas
push
cmp
dec
push
and
pushf
popa
and
test
add
or
mov
cmpsl
jle
lret
imul
cmp
sub
cltd
xor
bound
push
ja
lahf
xchg
jb
gs
std
int
mov
push
push
cltd
bnd
call
daa
mov
jb
out
dec
mov
pop
dec
dec
std
cmp
aad
repnz
enter
add
sti
dec
gs
lods
dec
fisttps
dec
push
cs
xchg
pop
sbb
sbb
shr
or
pop
jge
mov
xor
addr16
pop
xor
sub
or
inc
xchg
inc
lock
jl
cltd
cs
outsl
cwtl
cs
sbb
jecxz
pop
mov
cmpsb
enter
sbbl
jmp
cmpsb
stc
jle
jmp
lret
adc
bound
dec
fwait
das
ds
xchg
mov
pop
jno
iret
xor
or
pop
or
pop
shll
out
mov
sbbb
sbb
sbb
jg
mov
xor
cmp
sub
sbb
mov
fbstp
mov
cmp
jb
or
inc
gs
mov
hlt
insb
push
dec
rol
mov
mov
add
and
bound
mov
push
adc
fildll
sub
lock
repnz
into
imul
xchg
ds
dec
sahf
divb
aam
cmp
sub
fsubrl
aam
imul
popa
xor
xchg
jmp
aaa
sbb
sub
andl
ds
adc
add
mov
sahf
xor
fnsave
cmp
pop
movb
rolb
cs
aas
js
ds
shlb
inc
inc
adc
lret
icebp
mov
pop
jb
fiadds
fldt
mov
loopne
jne
pop
sub
sub
inc
sbb
repz
xor
mov
mov
sub
xor
and
xor
mov
jmp
mov
sub
mov
mov
pop
aas
sbb
push
loopne
scas
inc
cmp
and
push
mov
ja
add
sbb
lds
mov
inc
hlt
cwtl
loopne
in
push
hlt
push
pop
pop
sbb
mov
fsubrl
jecxz
and
nop
inc
sti
fs
pop
mov
dec
xchg
sbb
jbe
in
xor
push
add
aad
add
pop
jle
ret
movsl
fwait
sarl
rcll
clc
jae
mov
icebp
call
shll
mov
xor
int
stc
xchg
bnd
shlb
adc
sbb
in
movsb
gs
jb
fsub
nop
and
les
into
sti
xchg
xchg
outsl
cmp
pop
push
and
roll
cmp
hlt
push
stos
jae
addr16
or
adc
lret
push
out
or
add
cmp
xchg
jne
and
pop
pop
pop
mov
add
inc
ss
stc
sub
inc
fstps
iret
jns
or
push
push
sbb
cs
cmp
aaa
and
dec
test
outsl
sub
mov
mov
insl
pop
jl
xchg
or
arpl
mov
add
jmp
or
pop
fisttpl
cltd
stos
pop
pusha
add
inc
ja
out
xchg
sahf
shl
pop
adc
pop
mov
and
icebp
pop
adc
rcrb
adc
jg
xor
inc
cwtl
xlat
cld
pop
popf
xor
push
mov
lock
jns
jne
cs
icebp
ja
in
repnz
in
pushf
xchg
shrb
mov
sub
int3
loopne
dec
ffreep
ret
rorb
sbb
fdivl
mov
enter
int3
aad
xor
push
mov
mov
lea
into
inc
addr16
inc
mov
test
adc
cmpsl
lock
or
inc
out
mov
push
ret
movsl
sub
push
mov
psraw
test
pop
mov
jbe
add
repnz
push
xchg
xor
sahf
cli
mov
in
enter
adc
xor
push
loop
push
aam
bound
jmp
cmp
out
mov
sbb
mov
iret
sbb
andl
xchg
outsl
nop
xor
dec
adc
adc
into
sub
movsb
inc
mov
jbe
pop
push
push
call
adc
call
sti
out
add
insb
mov
push
push
roll
sti
lods
cmp
add
jne
div
pushf
lds
lcall
mov
aas
mov
nop
out
cmpsl
clc
xor
fsub
aam
mov
and
inc
and
xlat
leave
jns
inc
or
cmp
ss
in
push
scas
jp
imul
imul
sbb
lock
int
dec
out
xchg
mov
out
test
fsubrl
aas
sub
test
bound
adc
cs
add
addr16
mov
pop
fwait
sub
ret
out
daa
inc
test
mov
loopne,pt
push
sub
xor
popf
xchg
subl
loope
cmc
imul
cmpsl
stc
scas
and
xor
fs
mov
ficoml
mov
xchg
inc
gs
incb
aas
gs
mov
adc
mov
stos
iret
or
stos
loope
pop
mov
out
movsl
xor
xchg
push
stos
es
xor
rol
ret
add
int3
xchg
sbb
xchg
push
daa
push
or
push
mov
adc
inc
pop
popf
test
orl
dec
push
fbld
cmpsb
inc
test
mov
hlt
leave
or
adc
mov
sbb
fistpl
mov
push
pop
sbb
jbe
repnz
fs
je
fsubrs
jle
popa
loopne
arpl
push
pop
addl
and
rcl
mov
push
xor
push
movsl
dec
pop
inc
mov
mov
sbb
xor
xchg
sub
scas
mov
dec
int
push
and
dec
cmp
out
loop
je
stc
mull
xchg
clc
xchg
in
rorb
clc
mov
nop
fsubrl
das
loop
dec
push
into
pushl
jmp
pop
xchg
pop
js
pop
sbb
cmp
je
sbb
sbb
loopne
sub
xlat
roll
push
fimull
movsb
popa
sub
call
xlat
adc
lods
pop
jo
movsl
xchg
sbb
and
les
add
xchg
push
dec
vmptrst
mov
sub
ret
cmp
rorb
in
adc
xor
xlat
dec
mov
arpl
sbb
cltd
push
inc
jo
xchg
push
aad
pop
cmp
out
popf
cmpb
testb
sahf
push
and
jmp
in
aaa
cwtl
scas
shlb
or
cmc
insb
cmp
roll
imul
sub
in
adc
call
add
loop
negb
pop
sahf
popa
add
jmp
jne
add
mov
mov
fidivl
mov
aaa
les
cmp
ds
shrb
lahf
adc
pop
pop
je
mov
insl
inc
adc
mov
ret
shlb
mov
jecxz
add
or
aad
lea
fmull
into
jb
lock
shlb
ficoms
pop
xlat
cli
lock
addr16
pop
sbb
sub
xchg
lret
sub
jo
fsubs
inc
inc
adc
lcall
pop
das
sub
fs
rcll
mov
lds
call
mov
loopne
pusha
mov
sbb
stc
xchg
xor
out
daa
stos
jp
lret
inc
ds
mov
xchg
rcll
clc
aas
pop
xchg
jge
push
out
dec
test
pop
push
jns
popf
out
jnp
into
out
lds
push
pusha
mov
hlt
cwtl
ljmp
je
sub
test
jb
mov
sbb
ss
push
pop
xor
std
negl
cmpsl
gs
xor
repz
mov
pop
xchg
sub
push
lds
daa
add
in
pop
mov
sbb
cmp
fists
pop
cmc
lcall
sub
cmp
inc
mov
pushf
xchg
adc
insl
or
xor
fcoms
mov
pop
mov
adc
push
rorl
adc
lahf
test
int3
and
ds
cmpsl
jmp
dec
pop
push
ds
fmul
sbb
fimull
push
loope
lods
mov
mov
pop
xchg
jecxz
xor
stc
xor
mov
pop
pushf
mov
mov
jae
rcll
cld
int
xor
cltd
gs
ret
sub
icebp
movsl
cmp
mov
mov
push
jnp
sub
add
mov
es
push
mov
in
push
in
movsb
loop
jmp
and
sub
inc
repz
sub
fs
pop
mov
xorb
cmp
push
in
xor
jo
inc
mov
dec
cwtl
jae
negl
test
mov
and
inc
adc
cli
rorb
or
sti
in
popa
dec
inc
cli
jl
sub
fstpl
pop
sub
out
daa
les
loop
cli
pop
icebp
jbe
inc
leave
or
dec
call
cmpsl
testl
jmp
scas
xor
imul
std
dec
test
mov
cmovle
and
je
iret
mov
sbb
add
push
adc
xor
das
test
insl
jp
push
cmc
dec
ja
adc
loope
mov
xchg
cmp
add
or
jo
cmp
arpl
fistpl
aam
sub
mov
cld
add
push
es
pusha
std
call
or
push
lods
lret
lcall
mov
pop
xor
ret
pop
cmp
add
cmp
jge
je
push
mov
mov
mov
js
sbb
ljmp
and
jnp
clc
xlat
pop
sbb
pop
sbb
xchg
sti
loopne
lock
shlb
mov
adc
inc
add
fstpl
repz
xchg
enter
mov
jae
jmp
hlt
and
fidivs
inc
popf
push
movsb
add
aam
add
adc
fnstcw
mov
into
xchg
popa
sub
sub
loopew,pn
pop
lret
rol
mov
icebp
pop
fldcw
mov
aam
clc
and
fistpll
push
pop
inc
sbb
mov
mov
jo
adc
mov
js
sub
xor
std
dec
stos
lcall
shrl
lret
nop
sbb
inc
xchg
mov
dec
cs
aas
leave
bnd
cwtl
movsl
adc
cwtl
paddq
push
push
mov
sub
add
test
xor
sub
andnps
mov
movsb
arpl
mov
adc
shll
jge
out
sbb
int
cmp
fsubs
sbb
repnz
lret
jg
xlat
jns
dec
les
jmp
movsb
mov
sbb
pop
fwait
ja
popf
lret
xchg
je
pop
shl
push
ret
daa
lret
jl
mov
daa
insb
ds
aad
jp,pt
cmp
push
inc
pop
sbb
and
mov
les
popa
dec
cmp
xor
sti
pop
sbb
dec
sub
jg
out
inc
pop
in
pusha
mov
or
cmp
nop
pop
mov
mov
or
push
in
test
xor
pusha
mov
ljmp
pop
ficoml
pop
pop
pushf
inc
imul
add
and
out
pop
sbb
jg
sbb
imul
mov
cmpb
pushf
or
fsubrl
out
adc
add
gs
xlat
mov
outsl
push
cld
mov
adc
mov
test
popa
sarl
mov
jge
js
cltd
mov
push
ds
movsl
std
jmp
lea
mov
sub
push
adc
push
adc
outsb
and
or
lock
imulb
add
sub
fdivl
test
jge
stos
in
jb
jmp
sbb
dec
cltd
cmp
push
cmp
xlat
addr16
clc
sbb
imul
les
lea
sbb
cmp
add
add
pop
out
mov
stos
xlat
or
js
cli
icebp
push
aad
adc
mov
and
pop
sub
ret
cmp
and
sbb
and
aaa
sub
out
push
ret
bound
rcl
sub
sahf
mov
and
xor
lea
movsl
pop
jbe
in
adc
mov
test
and
loopne
in
insb
sbb
lock
repz
out
jp
stos
loop
fdivs
or
push
stc
cmp
outsl
jnp
sbb
inc
pop
dec
jg
das
ja
jp
pusha
xchg
scas
lret
sbb
rcll
rcll
inc
push
or
mov
mov
xor
shll
lods
call
xor
mov
lcall
or
insl
andl
mov
sbb
icebp
iret
mov
loopne
jne
push
test
pop
pop
loope
push
jb
enter
push
je
clc
scas
test
push
sbb
outsl
mov
pop
jmp
test
jp
daa
add
mov
lods
pop
fldl
sbb
xchg
test
imul
cmp
out
lret
lret
notl
call
push
cmp
and
ss
push
mov
mov
inc
aam
xor
mov
push
adcb
lret
leave
lock
jmp
pshufw
pop
mov
lds
outsl
shlb
loopne
xchg
call
inc
lcall
test
insb
orl
mov
push
call
sbb
aam
adcb
loope
test
mov
je
adc
mov
sub
fistl
daa
jle
inc
pushl
in
jns
movsl
loope
push
aam
imul
push
mov
lret
mov
mov
dec
insb
leave
pop
call
insl
dec
pop
rolb
jne
inc
outsb
ret
mov
dec
rcll
push
mov
sub
pop
mov
sti
popf
fstpl
sarb
loop
cmp
adc
mov
and
and
mov
inc
fidivrl
andl
mov
movsb
scas
mov
xorl
in
es
imul
fld
jl
xchg
push
push
mov
loope
call
jno
js
push
fld
pop
sub
je
push
arpl
or
ds
sub
or
mov
mov
cmp
fwait
pushf
pop
and
lods
mov
add
mov
int3
or
mov
xor
fwait
stc
enter
popl
pop
repz
lret
repnz
inc
or
pop
movsb
or
aaa
xchg
inc
je
repz
jle
in
xchg
test
cs
xchg
fwait
dec
jecxz
xor
adc
sub
cmp
mov
adc
scas
adc
enter
or
cmp
aas
jae
jns
dec
jle
push
mov
xor
ljmp
aas
inc
sub
loop
jp
sub
jno
dec
push
out
sub
dec
shlb
data16
pop
pop
outsb
cmp
mov
jb
inc
fistl
fisttpll
stos
lods
in
add
jo
mov
adc
out
sahf
sub
test
dec
dec
mov
cs
inc
lods
xchg
stos
mov
in
sahf
jp
mov
insl
test
jb
iret
sbb
sbb
in
adcb
incl
lret
add
xchg
mov
out
sti
adc
mov
push
xor
ds
xchg
iret
mulb
mov
loopne
mov
mov
xor
sbb
jne
xor
jmp
lret
push
mov
jae
push
imul
test
mov
pcmpgtd
in
lret
jge
fistpll
arpl
xchg
mov
loopne
sub
das
mov
inc
lret
dec
ljmp
inc
in
cmp
xorl
insl
cmp
jo
pusha
les
xchg
add
dec
lcall
lcall
lods
xor
in
sub
mov
xchg
dec
idivl
pop
insl
popl
cld
inc
ret
mov
pusha
movsb
int3
mov
or
fnsave
out
fcomps
sbb
out
movl
jg
jae
pop
mov
out
std
test
popa
shlb
jg
push
imul
cmp
icebp
out
or
jne
or
movsb
shld
and
inc
add
lds
add
inc
vfmadd213ss
ret
test
pop
cwtl
scas
add
mov
fadd
imul
sbb
mov
mov
mov
dec
cmp
ss
mov
inc
cmp
xchg
test
inc
cmp
inc
mov
addr16
gs
leave
push
cmc
mov
pop
adc
aaa
or
test
cmpsb
rol
inc
cld
add
pushf
pop
xlat
bound
lea
arpl
addb
push
call
sti
and
dec
and
imul
push
jnp
repnz
insb
xchg
sbb
or
jle
xor
push
loop
lods
cmp
repz
xchg
jge
inc
jae
mov
add
sbb
xor
ljmp
shll
test
pop
mov
addr16
test
xor
lea
adc
pop
iret
imul
cmc
lcall
or
cltd
pop
sti
inc
adc
jne
push
push
cltd
jb
sahf
shll
xchg
cmp
test
outsl
cmp
mov
mov
and
sbb
ficomps
sbb
rcrl
xchg
enter
jb
out
pop
insl
xlat
cmpsb
lods
inc
adc
jo
dec
push
xchg
jge
cmc
fcmovne
loope
mov
cli
jbe
and
in
mov
outsb
inc
hlt
outsl
sbb
decb
mov
loop
ja
inc
push
push
imul
test
arpl
imul
fnstcw
rorl
sbb
cwtl
push
loope
sbb
pop
xchg
xchg
in
test
clc
dec
data16
add
mov
addr16
je
sub
jge
iret
out
xchg
hlt
jb
cmp
out
popa
lret
lock
loop
sub
fs
enter
rorb
xchg
xchg
fisttpl
add
cmpb
insb
xor
insl
and
pushf
aas
or
push
icebp
push
pusha
lods
int3
dec
les
pop
imul
stos
gs
and
xorb
repz
popf
push
fcomps
cmp
sbb
call
mov
mov
andb
adc
pop
stc
pop
fstpt
xlat
mov
or
in
pop
out
jbe
testl
ljmp
repnz
addr16
adc
stc
cmp
jne
faddp
pop
push
xlat
lret
cld
xchg
push
mov
sub
into
push
call
lock
dec
adc
push
sub
sub
jb
cmp
sub
cld
popf
out
jmp
cmp
inc
cmp
push
inc
add
jne
adc
mov
mov
adc
adc
daa
xchg
sbb
mov
jge
cmp
fsubrl
mov
dec
mov
mov
jl
movsb
ret
data16
jecxz
repz
aaa
xchg
mov
out
test
and
jo
mov
add
pusha
sub
mov
xorl
pop
xchg
mov
test
xchg
inc
in
xchg
bound
or
xor
mov
sub
xchg
cwtl
int
mov
nopl
pop
fldt
movsl
jg
stos
daa
addl
mov
enter
cmp
mov
sbb
xchg
mov
int
jle
ds
mov
cmpsb
inc
negl
data16
sub
sbb
or
xor
ficomps
xor
ret
adc
adc
insb
popf
rclb
adc
mov
cli
cmpsl
fwait
inc
pcmpeqb
add
mov
je
fldenv
mov
adcl
jg
xchg
push
jmp
inc
add
faddl
add
add
dec
jnp
loopne
add
pushf
movsb
bound
popa
mov
in
dec
cmp
insb
ja
std
ljmp
fnstsw
pop
dec
daa
leave
mov
inc
ljmp
xor
nop
leave
scas
leave
out
mov
movntq
and
dec
test
std
push
repz
fucomip
and
push
jmp
pop
les
push
xchg
xor
cmp
wrmsr
flds
cmp
aaa
lret
adc
lea
xorb
in
fcoms
frstor
mov
insb
fcmovnbe
sub
push
stos
xorb
pop
ret
iret
push
mov
inc
jne
xorl
push
gs
lahf
stos
test
je
cmpsl
pop
mov
cld
and
xchg
push
lahf
pop
jns
shl
jmp
test
push
jo
es
mov
arpl
lods
loope
adc
add
inc
push
es
mov
into
mov
pop
adc
adc
sbb
leave
jle
ret
stos
nop
dec
loopne
call
loop
mov
push
push
jmp
xor
cmp
jnp
into
sub
and
mov
ljmp
mov
dec
cs
pop
inc
outsl
jg
ja
and
into
sbb
mov
imul
mov
popf
int
push
les
aaa
mov
cmp
imul
lahf
sbb
mov
jg
sbb
lds
push
jp
cltd
in
cmc
nop
lds
dec
mov
cmp
scas
aaa
mov
negb
icebp
sbb
out
or
mov
lods
mov
mov
push
repz
popf
push
popf
xchg
mov
lods
and
push
aas
dec
dec
in
std
popa
cmc
test
jl
ret
and
cld
hlt
daa
mov
loopne
aad
cwtl
dec
push
push
jp
addr16
shrb
sahf
mov
jecxz
test
gs
xchg
xor
mov
xchg
ret
mov
gs
test
cli
data16
leave
mov
cld
dec
add
stos
ret
adc
lods
movl
outsl
cltd
lock
xchg
mov
sub
jecxz
aam
push
or
jge
adcb
cs
scas
xchg
or
sahf
lret
sub
mov
mov
or
inc
in
sub
sti
adc
movsb
cltd
push
testb
pop
mov
int3
sti
out
add
outsl
inc
sbb
inc
xchg
dec
out
push
cwtl
std
xor
adc
xchg
jecxz
dec
xlat
sub
ss
clc
inc
test
insl
sub
dec
xor
test
test
or
push
ss
inc
divl
rclb
dec
out
mov
add
sub
sahf
mov
xchg
cld
ficoms
out
cmp
mov
bound
popa
pop
out
arpl
jae
and
xchg
xor
lea
popf
jae
jle
into
aaa
and
lcall
push
int3
hlt
jns
xchg
sbb
shl
ss
xchg
add
jl
add
jle
or
jp
fdivs
lods
ret
out
je
jmp
and
pop
mov
sub
notb
fwait
inc
scas
mov
cmp
pop
xlat
fwait
lods
dec
pusha
add
ds
fstpt
xchg
cmp
pop
pop
or
jnp
xor
xor
adc
sub
imul
mov
loop
xor
xchg
jl
jle
test
push
jmp
stos
pop
xchg
jp
dec
mov
adc
stos
imul
sub
gs
lea
cmp
mov
stos
push
in
int3
loop
repz
iret
std
add
mov
push
jecxz
inc
into
shl
add
or
mov
fdivp
cmpsb
lahf
arpl
xlat
adc
mov
jo
and
sub
xchg
cmp
xor
xor
jmp
xor
gs
mov
mov
xchg
cmp
sub
into
inc
mov
cmc
adc
ret
pusha
in
insl
rcl
cli
lret
into
cmp
xchg
fs
pop
mov
and
data16
pop
xchg
punpckhwd
push
lds
lods
faddl
popa
xchg
repz
sub
or
or
test
push
or
adc
test
xlat
add
inc
xchg
xchg
test
add
cmp
xor
mov
push
pusha
xchg
arpl
adc
arpl
push
lret
cmp
inc
leave
xor
mov
cmpsl
push
out
lods
jecxz
mov
jl
and
loope
mov
xchg
mov
inc
adc
outsl
jp
mov
push
or
repnz
sub
sub
notl
mov
push
test
mov
push
testb
push
lea
ds
rol
mov
test
jns
or
adc
xor
scas
fcoms
push
sbb
add
push
mov
jno
xchg
sbb
stos
jnp
cmp
js
mov
into
jge
mov
shl
sbb
mov
scas
in
push
insl
aad
sbb
xor
cld
adc
ljmp
cmp
ret
iret
pop
sbb
loopne
cmpsl
dec
push
cmp
divl
xlat
clc
add
xchg
pop
or
scas
mov
adc
mov
shl
les
pusha
ss
pop
dec
sub
clc
arpl
adc
shr
and
sti
and
movsb
outsl
pop
insl
in
add
pop
lods
pop
mov
fisubrs
mov
mov
pop
xlat
xchg
sub
sub
dec
fadd
aaa
jns
adc
test
xchg
sub
imul
sbb
loope
sarb
dec
mov
mov
jnp
fwait
loop
jb
or
cmp
fldcw
mov
test
sub
adc
inc
mov
fmull
fsts
ljmp
inc
iret
in
push
subl
push
das
repz
mov
in
test
xchg
sbb
fdivrl
arpl
sbb
pop
sti
dec
imul
jle
cli
and
push
mov
xor
lret
mov
xchg
stos
xor
mov
iret
lret
dec
jb
test
inc
pop
scas
addr16
mov
cmc
mov
xchg
mov
outsb
jns
outsl
movsb
push
fadds
dec
push
and
out
push
xor
xchg
lods
adc
and
loopne
and
push
data16
les
or
pop
jo
push
jmp
add
dec
lods
sub
add
out
mov
lods
mov
shr
bt
push
push
popf
loop
adc
cmp
pop
push
cmp
punpcklbw
test
add
sub
jbe
or
icebp
sbb
addr16
dec
lea
out
xchg
mov
mov
mov
push
ja
jne
leave
mov
and
test
mov
pop
into
imul
daa
xor
pop
mov
xor
jg
mov
les
jb
iret
mov
dec
fstpl
in
shl
fsubs
shlb
stc
adc
roll
cmp
dec
adc
push
fsubl
lods
aaa
and
inc
outsl
movsl
lret
lahf
cs
test
div
rolb
adc
dec
je
or
dec
adc
xchg
lods
jge
lods
test
test
repz
xchg
mov
shlb
jnp
xor
arpl
out
lods
push
dec
cwtl
imulb
into
cmp
mov
and
inc
inc
add
push
sahf
loope
fisubrs
icebp
or
jl
sti
out
xchg
aad
or
or
aaa
jae
in
lock
ret
pop
adc
rorl
cmp
inc
adc
fmuls
pusha
sub
dec
mov
outsl
popa
ss
sti
inc
jo
cli
leave
iret
sbb
mov
dec
cmpsb
lods
pop
push
xchg
hlt
loop
loope
popa
mov
hlt
stos
mov
loope
ljmp
push
mov
insb
pop
xchg
nop
sub
cld
mov
fdivrs
cmpl
ds
add
cmp
imul
adc
popf
sarl
inc
xchg
imul
fsubrl
sub
xchg
xchg
ljmp
daa
push
or
fisubrl
sbb
shlb
aam
mov
sti
daa
lcall
and
or
sti
adc
xchg
scas
inc
cmp
fidivrs
clc
and
shll
stos
iret
cld
add
and
sub
sbb
jnp
in
mov
stos
pop
in
mov
dec
pop
jb
lds
xchg
insb
and
dec
and
push
xchg
jbe
xor
in
loop
pop
cmp
imul
add
lret
jl
data16
adc
out
jl
jne
aad
hlt
aad
test
jb
xchg
add
mov
mov
sarl
cwtl
das
fsubrp
xchg
cltd
popf
outsl
fcomps
xchg
dec
leave
sbb
and
in
movsb
adc
mov
outsl
int3
cs
fmulp
mov
sub
stos
jle
fwait
repz
fnsave
or
in
and
mov
imul
leave
gs
mov
push
jo
cltd
push
mov
fdivs
jp
int3
dec
jns
jl
mov
in
imul
dec
lods
ret
mov
dec
imul
loopne
mov
and
hlt
aam
push
hlt
inc
push
popf
mov
push
cmpsl
mov
mov
int3
ss
cmpsl
cli
mov
out
out
cmp
nop
insl
add
ret
fdivr
xor
stos
pop
dec
das
dec
sub
sbb
mov
jp
inc
dec
movsl
sbb
push
cmp
in
sub
andl
les
lods
sbb
dec
cmp
inc
inc
push
mov
jp
mov
mov
mov
test
sbb
dec
movsl
sbb
sbb
jle
aam
dec
nop
bsr
pop
push
pop
lret
mov
mov
pop
push
mov
xor
nop
fidivrs
bound
xchg
popa
mov
push
jnp
mov
xchg
pop
cmc
jecxz
nop
lea
or
xor
jg
hlt
sbb
mov
add
sbb
adc
and
movsl
jecxz
ja
push
adc
push
leave
xchg
cmp
lods
movsb
dec
push
ret
pop
sub
jae
popa
inc
push
addb
mov
mov
jl
xor
xchg
out
cmc
scas
popa
sbb
iret
rcll
sub
mov
lods
pop
inc
hlt
lea
pop
in
jae
dec
lds
xchg
fs
mov
push
int3
add
scas
mov
out
ud1
push
mov
sub
adc
push
and
dec
pop
mov
ret
jne
aad
ja
dec
je
mov
lcall
rclb
jmp
pop
pop
mov
and
orl
adc
mov
icebp
into
fs
aam
pushf
in
loopne
pop
mov
cmp
jae
push
fnstenv
lods
pop
repz
or
fadds
cwtl
mov
jae
or
or
add
dec
xlat
push
xchg
xchg
and
loopne
movsb
push
mov
out
dec
push
mov
movl
push
dec
mov
out
icebp
test
dec
jge
sbb
jecxz
xchg
cmp
push
pop
aad
push
mov
cmp
addb
cmp
inc
mov
xor
dec
mov
mov
dec
test
out
fsubrs
mov
cltd
fs
inc
vphsubwd
mov
jae
ljmp
outsl
ja
sti
push
test
fld
mov
loopne
fwait
int
lret
int3
mov
cmp
iret
int3
cltd
ljmp
push
add
mov
add
jns
lods
or
aad
dec
sbb
aaa
and
pop
ret
call
sub
sbb
inc
lcall
xchg
ss
inc
rcrl
push
stos
sub
mov
cmc
sbb
bound
mov
aas
push
mov
arpl
pushf
call
pop
jmp
mov
lods
hlt
mov
jb
pop
repz
movsb
mov
sub
out
lea
sbb
mov
inc
jnp
pusha
dec
fucomp
mov
movsl
les
xchg
jmp
iret
fs
and
outsb
in
ja
cmp
cmp
mov
push
dec
adc
push
clc
sarb
jmp
push
inc
adc
scas
jb
cmpsb
out
mov
leave
out
loop
popa
push
pop
fcomps
jo
out
add
fldt
pop
dec
sub
fs
sub
sbb
arpl
ficoml
push
int3
lahf
movsl
and
and
xchg
pop
sub
mov
jb
pop
push
aad
sub
divb
cmpsl
jns
rcrl
jp
cld
jne
sub
mov
pop
mov
pop
pushf
popa
or
hlt
jle
aad
mov
pop
clc
jg
sahf
xor
icebp
xchg
imul
fmuls
mov
insl
xchg
push
mov
lret
or
enter
sbb
sti
nop
jne
mov
push
movsl
and
cmp
jle
jbe
xchg
pop
sub
ss
movsl
test
cwtl
add
insb
and
xor
push
fdivl
in
leave
or
mulb
loop
add
or
enter
jp
cmp
icebp
jne
idivb
jmp
imul
xchg
pop
mov
out
and
lret
test
and
jmp
xlat
clc
sbb
testl
test
jecxz
adc
cmp
shl
cld
lods
call
movsb
inc
mov
xchg
clc
adc
repz
sbb
out
lcall
xchg
bsr
sti
cltd
mov
add
addr16
cmp
outsl
ljmp
sar
repnz
or
sub
gs
sbb
aad
pcmpgtw
aas
inc
jmp
in
loop
pop
sti
notb
push
lcall
jb
cmp
xor
inc
popl
and
movsl
sbb
mov
cltd
sar
sub
aaa
loopne
ds
push
loope
clc
imul
or
add
cmpsb
jecxz
cwtl
insl
popa
repz
addl
leave
cli
lods
xlat
das
mov
xor
pop
xlat
cmp
imul
int
cmp
inc
sub
jge
add
shlb
mov
or
and
fcompl
ds
push
in
enter
sub
jg
or
ret
mov
repnz
xchg
jbe
inc
mov
cmp
mov
add
ret
push
xchg
push
adc
std
ret
inc
cld
xor
and
dec
push
into
jecxz
mov
pop
inc
push
dec
aas
push
int3
or
xchg
mov
dec
data16
lcall
je
sbbb
push
pop
or
inc
xor
cmp
fnstsw
adc
call
jne
or
push
push
stos
inc
gs
xchg
scas
pop
mov
mov
fs
mov
fimull
add
in
xor
mov
xchg
jl
ret
bound
and
lods
adc
pusha
pop
inc
data16
cmp
cmp
inc
data16
pop
pop
int3
and
and
push
or
into
hlt
cmpsb
inc
movsl
sub
mov
mov
idiv
mov
pop
ror
xlat
shrl
sbb
in
cwtl
xchg
dec
test
or
xchg
jg
fs
call
stc
mov
cmpsb
shr
jg
push
or
bound
mull
or
sbb
bound
xchg
bnd
cltd
mov
stos
mov
and
fistps
or
js
inc
popa
or
mov
into
shll
outsl
cmp
outsl
or
push
mov
sahf
jp
ret
push
pop
and
pushf
in
push
mov
scas
add
movsl
xchg
das
insb
pop
xor
arpl
sub
dec
call
dec
pop
push
sbb
sub
cs
push
cmp
jl
pop
addr16
fcmovb
add
push
rclb
mov
std
sbb
pop
int
push
rcll
aad
lock
mov
jle
xchg
mov
jmp
lds
enter
and
lods
scas
mov
ljmp
loope
or
jle
fs
in
repz
adc
dec
jmp
mov
out
fs
add
test
add
mov
push
jecxz
inc
lock
push
dec
andl
shll
mov
ljmp
and
notb
aad
pop
inc
inc
cmp
andb
push
cmp
enter
cmp
pop
test
dec
and
pop
out
loope
out
and
xor
sub
popa
push
ss
xor
test
mov
jecxz
sbbb
push
inc
push
lods
push
repnz
and
popf
inc
xorb
push
mov
insb
sti
cmp
pop
jl
xor
scas
fstl
mov
push
test
sti
inc
push
adc
dec
mov
pop
jne
addl
ljmp
stc
inc
mov
push
inc
dec
roll
sti
enter
xor
mov
shrb
mov
push
ud1
or
sub
enter
leave
les
mov
mov
ja
or
push
loopne
or
and
daa
movsb
rcll
mov
mov
sbb
push
push
mov
or
xchg
fnstcw
ficompl
push
or
xor
aas
clc
pop
adc
outsl
push
sub
hlt
jge
shll
mov
xchg
pop
loope
mov
bound
orb
jle
pop
iret
xchg
pcmpgtw
mov
add
push
lods
and
ljmp
stos
xor
lret
inc
out
enter
inc
testb
sarb
shll
aas
movsb
and
cmpsb
adc
arpl
cmpl
cld
iret
andl
sub
mov
pop
mov
and
test
in
mov
mov
jle
cwtl
movsb
pop
stos
orl
pushf
xor
int
dec
jg
mov
movsl
jecxz
sahf
add
jo
ret
xorb
pushf
loop
mov
inc
inc
repz
testl
mov
dec
inc
sbb
or
cwtl
pushf
pop
push
movaps
push
hlt
mull
fbstp
adc
lret
in
shrb
dec
andl
out
pushf
xchg
test
gs
cs
lret
push
aaa
xchg
mov
xor
dec
add
xchg
xchg
out
cmc
bound
adc
pop
and
push
or
mov
sarl
pop
aaa
sbb
or
or
mov
dec
push
adc
in
iret
add
int
movsl
or
shlb
mov
xchg
fldl
jle
in
dec
sti
mov
lds
or
push
imull
js,pt
leave
shlb
hlt
and
test
cmpb
push
xchg
mov
sub
cmp
and
jnp
push
test
add
shl
loop
or
dec
int3
xor
mov
mov
repz
insb
sahf
inc
jb
xor
adc
jne
sbbl
push
arpl
sar
stos
test
filds
sbb
mov
shrl
inc
cmp
repz
jo
cmp
or
adc
sub
mov
fisubrl
js
test
lods
cmp
roll
mov
lods
imul
sbb
xchg
dec
sub
or
es
popf
jb
out
rcll
arpl
push
scas
bnd
mov
xchg
jge
testl
cmc
mov
insl
fimuls
fsubrs
mov
jmp
mov
sbb
fmul
outsb
and
ret
cmp
in
movswl
or
push
mov
inc
jmp
ja
cmpsl
loop
jl
adc
inc
pop
mov
add
test
xchg
inc
push
cli
test
cmc
jnp
mov
pop
outsb
xor
adc
mov
mov
jge
mov
loopne
jmp
jl
stos
jg
rcrb
mov
dec
push
mov
jbe
dec
jp
xchg
cmp
int
inc
cmpsl
cltd
xchg
ja
je
jl
adc
inc
fstpt
and
mov
mov
test
push
inc
iret
in
je
sbb
sahf
sbb
test
sbb
jmp
sbb
insb
aaa
ficoml
cs
cmp
sbb
push
adc
test
pop
inc
in
mov
jg
xor
push
ljmp
xor
ss
mov
adc
mov
and
adc
push
mov
cmpb
push
mov
ljmp
mov
xchg
pop
bnd
mov
cmp
dec
mov
call
sbb
sti
mov
add
add
mov
jo
jb
pop
sbb
mov
cltd
orl
sub
mov
inc
push
iret
out
xor
cld
xchg
xor
xchg
sub
addr16
push
stc
cmp
xor
jmp
jno
jae
mov
movsl
shl
sti
scas
mov
mov
and
and
xchg
sub
xor
orl
imul
mov
mov
cmpsb
and
cs
adc
daa
xor
es
and
mov
pop
popf
dec
es
loope
daa
movsb
dec
jp
xor
dec
add
mov
icebp
xor
pop
in
jo
jnp
daa
cmp
sub
in
sbb
xchg
imul
popf
mov
xor
pusha
mov
xor
int
cmp
mov
xchg
outsl
cld
pop
xchg
jae
cli
test
add
iret
out
mov
cmpsb
int3
cmp
push
sbb
xchg
and
jmp
fcoml
cwtl
mov
addb
movsl
and
in
mov
fwait
pushf
cmp
push
jmp
outsb
cmp
mov
or
cmpsl
clc
xchg
mov
notl
stos
inc
mov
ljmp
inc
jge
repnz
xchg
mov
cmp
cld
orl
cmp
inc
sbb
mov
inc
mov
or
frstor
aaa
inc
inc
pop
sub
mov
mov
fisttps
mov
fwait
sub
xor
xorl
lahf
pop
jg
and
mov
adc
mov
cmpsl
push
mov
xlat
cli
xchg
push
movsl
mov
clc
jp
dec
loop
fisttps
push
mov
movsl
xlat
mov
xchg
mov
mov
xchg
enter
ja
jmp
or
cmp
sbb
popl
popa
and
push
mov
scas
movsl
sbb
fadds
ror
scas
xor
inc
mov
mov
inc
cwtl
iret
adc
cmpsb
rcr
lcall
clc
adc
xchg
add
dec
mov
cmp
dec
inc
and
cmp
sub
mov
jnp
xor
xchg
lahf
sub
aaa
mov
add
shlb
mov
cld
movsb
in
test
push
fwait
int
cltd
jb
and
fistps
adc
icebp
jns
mov
push
fs
mov
imul
jmp
sub
fisubrs
mov
in
pop
cld
push
sbb
fwait
out
cwtl
ret
pop
push
mov
int3
lahf
fsubrl
xor
inc
iret
cmp
mov
out
jg
mov
mov
pushf
fadds
fdiv
and
jle
loop
int3
jno
mov
lret
iret
dec
jns
mov
loopne
lcall
jmp
loop
mov
enter
sub
push
xchg
cltd
cmp
sbb
cmp
xor
dec
or
dec
mov
pop
mov
inc
push
dec
mov
shrb
mov
jbe
shrl
or
and
lret
inc
int
pop
mov
inc
sbb
pop
insl
fmul
mov
mov
pop
inc
fstpl
aas
adc
loopne
pop
push
mov
jle
lret
mov
dec
test
push
mov
jecxz
rcrb
pusha
xchg
rol
loope
xor
je
jp
sbb
jecxz
dec
add
in
xchg
sbb
inc
mov
mov
xchg
inc
mov
js
adc
mov
inc
outsl
mulb
test
outsl
in
cmp
sarb
int
mov
mov
adc
lret
xor
inc
pushf
mov
pop
mov
pop
jg
les
mov
push
fs
mov
in
jl
push
gs
inc
dec
into
sub
lds
imul
pop
enter
insl
push
das
idivb
add
sti
fmuls
lcall
int3
lret
or
popf
add
mov
push
push
and
inc
aad
repz
mov
or
xor
adc
push
xchg
sarb
pop
sub
mov
fwait
hlt
inc
ds
and
ljmp
enter
xor
mov
outsb
int3
ja
xchg
insl
shll
out
and
fstpl
sbb
xorl
jno
lds
adc
test
dec
add
cltd
xor
je
mov
push
or
int
jmp
cmp
cmp
fbstp
aad
jb
xlat
in
out
es
lock
xorl
add
iret
repz
in
cmp
out
lret
aad
cmc
and
stos
lods
lea
jp
mov
fnstcw
shlb
popa
gs
push
sub
mov
push
in
push
scas
jnp
cmp
leave
and
dec
cld
push
xchg
cmp
out
outsl
mov
mov
sbb
daa
inc
mov
daa
jl
xor
push
jns
inc
sbbb
rclb
jo
mov
mov
sbbl
jno
mov
dec
sub
jnp
ja
xchg
xlat
jg
lret
and
mov
mov
icebp
sbb
cmp
shlb
sti
stc
pushf
push
cmpsl
ret
jo
ljmp
xorb
mov
pop
sbb
std
aas
pop
loop
mov
lret
jle
xchg
ret
xchg
rorl
cli
dec
inc
insl
subb
lea
lea
xor
cmp
rcrl
jae
js
out
insb
push
jge
mov
inc
lds
es
mov
mov
loopne
loop
xor
inc
pushf
mov
hlt
in
stc
sbb
jge
pop
mov
mov
mov
mov
insb
es
push
push
movsb
outsb
js
xchg
jns
inc
mov
or
xor
popf
xor
jl
pop
mov
push
adc
push
addr16
cmp
jge
into
jl
call
je
daa
pop
shll
ds
sub
push
pop
bound
ja
mov
insl
push
jo
insl
push
sarl
xchg
add
loope
xor
xchg
inc
adc
popf
cli
and
push
test
pop
fadd
xchg
fwait
mov
es
sahf
in
arpl
outsb
push
fnsave
mov
adc
imul
fisubrs
pop
sub
adc
mov
pop
sub
cmp
cltd
pop
or
imul
xor
bound
pop
and
dec
call
in
xlat
lahf
insl
jbe
and
or
inc
aad
fwait
mov
ret
pop
lds
lcall
ret
adc
daa
pushl
scas
mov
lahf
loope
imul
inc
fdivs
push
lea
jecxz
scas
adc
clc
jno
xchg
mov
sub
mov
xchg
sub
mov
lods
mov
mov
inc
pop
or
inc
cmpsb
mov
or
mov
gs
pop
and
push
jae
lret
dec
filds
mov
pop
jae
cmp
sbbl
lods
cli
jb
pop
xor
push
loopne
insb
pop
outsl
mov
nop
cmpsl
jmp
out
jns
mov
hlt
les
add
add
jg
arpl
xchg
cmp
mov
jl
frndint
repnz
mov
test
and
push
cmp
lock
add
cld
lret
mov
in
push
mov
xchg
test
mov
stos
push
lret
ficoms
fsubrl
aam
call
js
shll
ror
popa
insl
cs
repz
jle
fists
lock
testb
repz
test
xor
sbb
out
inc
push
popa
push
jnp
cmpsb
cmc
jl
icebp
sbb
inc
adc
pop
bound
lret
pop
cmp
inc
adc
icebp
inc
xlat
imul
movsl
adc
mulb
mov
cli
psraw
sbb
and
and
fwait
std
ljmp
pop
inc
jns
jb
iret
es
jle
adc
int3
push
ja
insl
xor
int3
int
sbb
mov
pop
cmp
daa
or
mov
sarb
lret
imul
push
int3
push
xlat
orb
fdivp
jne
arpl
and
or
lret
cmp
pop
test
jle
xchg
jg
pop
out
jg
push
pop
lods
lahf
nop
shlb
pop
and
in
cmc
pop
cmp
lea
cmpsb
add
and
jnp
test
sub
es
xchg
sbb
fists
rcrb
roll
movsb
ret
mov
sbb
cmovle
jo
stos
xlat
in
mov
and
leave
or
sbb
mov
sub
scas
xor
xor
push
jbe
mov
mov
mov
popf
mov
lcall
jno
pop
test
in
hlt
sbb
loope
pop
cmp
movsl
pusha
and
ds
jb
cmp
mov
addr16
in
mov
popa
lret
in
lods
sub
cmp
add
mov
shlb
jp
mov
pusha
add
and
jge
jae
lods
rcrl
shll
sbb
lret
cmpsl
movsl
in
push
inc
xlat
sub
jbe
inc
sub
or
fstpt
ja
shl
and
aad
mov
mov
and
mov
out
int
jge
lret
add
push
pop
pop
or
jmp
cli
fwait
ds
test
jb
sub
push
cmp
mov
pusha
and
ss
and
out
popa
dec
jge
movsb
stos
cld
out
or
sub
dec
repnz
cmpsl
mov
inc
outsl
dec
adc
inc
int
sub
jae
sbb
inc
mov
mov
test
clc
cmp
ljmp
test
mov
gs
cltd
pop
push
shll
enter
and
or
sub
mov
push
into
jnp
repz
xor
mov
lds
mov
mov
cmp
dec
and
fistl
jb
inc
pop
jo
inc
xor
aaa
sub
and
insb
mov
push
imul
push
scas
hlt
push
rcrl
inc
add
sahf
daa
dec
dec
cld
or
add
aaa
adc
call
aas
jle
inc
inc
popl
xor
sub
mov
pop
dec
insl
scas
inc
lods
aaa
sub
mov
lock
scas
lods
xor
loope
mov
push
xchg
jb
addr16
fwait
jae
xor
aam
jns
les
xchg
out
repnz
sub
cmp
lea
cmp
and
aam
xor
fsubrs
xorb
imul
rol
xor
xor
loop
js
add
testl
push
push
add
flds
in
xchg
sbb
movsl
inc
inc
aam
cmp
fs
xchg
inc
sbb
int3
mov
subl
fiaddl
push
adc
adc
call
mov
in
cmp
adc
push
mov
lea
adc
pop
lds
cmp
outsb
adc
cmp
icebp
pop
ret
cmp
lret
xchg
in
fsubrl
pop
cltd
jmp
mov
dec
outsl
jg
daa
xor
test
sbb
mov
data16
ret
imul
inc
aas
mov
dec
mov
aam
or
movsb
fiadds
or
xor
add
mov
in
in
inc
cmpsb
dec
or
mov
testb
xor
inc
lahf
sarl
sbb
popa
fidivs
loope
fcoms
xchg
divb
mov
enter
aaa
lods
imul
lds
push
mov
sub
mov
lea
cmpsb
shrb
dec
mov
jp
orl
decl
mov
mov
pusha
mov
add
call
cwtl
pop
and
jno
pop
lea
ret
cmp
dec
push
jmp
popf
jae
and
mov
clc
add
xchg
data16
pop
divb
mov
lods
xchg
lock
movsl
stos
std
mov
cmp
data16
mov
or
scas
push
fiadds
ljmp
pop
cltd
jg
add
xchg
mov
sub
test
rorl
bound
jns
mov
adc
mov
inc
cmp
jno
add
inc
add
push
test
in
xor
push
fptan
mov
xor
subb
pop
dec
dec
mov
push
xor
aad
movsl
sarl
fnsave
jns
sbb
daa
sbb
movsl
xor
cs
inc
popa
pop
fwait
xchg
int
rorb
movsl
lahf
nop
jns
dec
mov
mov
adc
xchg
movl
push
push
je
lret
nop
mov
mov
inc
cmp
jae
mov
sub
jae
push
fs
in
das
adc
movsl
fildl
xchg
mov
xor
shll
or
js
rorl
mov
jnp
div
cli
sbbb
jo
lahf
mov
dec
ljmp
lret
aas
or
xchg
stos
and
sbb
ret
rol
jp
and
jge
lret
rcrl
sarl
push
push
xchg
adcl
sbb
adc
xchg
cmpsl
mov
cmp
cmpsl
push
adcl
imul
push
pop
cmpsl
cmpsl
in
adc
dec
insl
jo
in
and
or
mov
sbb
xchg
enter
rcrl
mov
pop
rorb
mov
push
sbb
outsb
jg
addr16
cs
iret
sbb
sub
mov
pop
out
push
repz
dec
mov
scas
cmp
fisubrl
imul
inc
sub
cmpsb
dec
popf
in
xchg
test
mov
mov
stc
cmp
dec
stos
cmp
mov
cltd
push
not
divl
outsb
pop
push
adc
xor
lahf
mov
insl
dec
loope
movsb
aad
sub
add
push
inc
orl
push
aas
push
sub
subl
push
or
and
out
pop
flds
lds
mov
insl
mov
inc
std
push
mov
push
mov
jle
mov
and
xor
sub
jo
xlat
pop
imul
mov
repz
push
sbb
adc
push
mov
aaa
mov
sbb
jne
pushf
out
shl
cmp
lret
xchg
pop
mov
stc
jno
push
mov
rcrb
or
jle
push
sbb
pop
cmc
push
sbb
or
test
dec
pop
lret
jnp
xchg
and
mov
inc
in
lds
ds
std
jns
sbb
inc
scas
pop
pop
pop
scas
mov
int3
fwait
pop
add
fidivl
je
or
cmp
lock
lods
or
mov
lret
loop
lods
jl
xor
sub
fidivrs
mov
cli
sbb
push
mov
sbb
inc
imul
sbb
sub
movsw
mov
mov
in
mov
mov
mov
jmp
cmp
int
mov
dec
call
aam
and
pusha
pop
roll
or
in
fsubrs
fisubrl
out
and
rcrb
pop
xchg
call
dec
adc
mov
jmp
push
data16
loop
or
sbb
cmpsl
adc
subb
roll
and
jecxz
jg
jg
pop
add
push
leave
sub
jmp
dec
out
mov
inc
inc
adc
loop
dec
adc
int3
repnz
mov
inc
xchg
ret
and
xor
jnp
hlt
pop
xor
addr16
call
xor
dec
push
mov
insl
into
cmpl
push
push
jecxz
cmp
or
inc
jno
gs
fistpl
or
dec
mov
pop
xor
lods
clc
add
sbb
and
push
mov
sbb
push
dec
leave
ds
xorl
mov
shrb
push
rcl
fists
push
repnz
xor
pop
repnz
push
sub
push
or
and
sub
fisubrl
push
mov
jne
jmp
mov
call
nop
outsb
mov
or
insb
mov
jae
cmp
sub
mov
cmpsl
dec
mov
fs
pop
mov
fisubs
dec
sarb
xchg
xchg
xchg
rcll
pop
mov
addr16
jae
rorb
pop
in
inc
or
shlb
sbb
push
mov
mov
loope
dec
out
popa
into
and
xchg
lock
inc
cmpsl
arpl
pop
mov
shlb
mov
sahf
out
dec
xor
xchg
je
mov
cmp
and
aad
out
mov
push
sbb
stc
fbstp
bnd
add
cld
aas
inc
cmp
aaa
sarl
aad
fs
insl
and
out
cmpb
test
adc
sub
push
lret
test
cli
xchg
lcall
enter
jmp
enter
out
mov
fsubs
xchg
gs
adc
js
pop
fildll
imul
rcrb
or
notb
ds
aad
jl
adc
sbb
mov
test
pop
xchg
rorl
jg
mov
cmpsl
enter
jmp
mov
or
jb
aas
xchg
and
mov
push
jp
dec
cld
pushf
sub
outsb
dec
adc
bound
aas
mov
or
push
loope
sub
cmp
int
xor
addr16
pop
xor
imul
pop
sbb
leave
pop
push
js
fists
insb
lsl
call
in
mul
lahf
mov
stc
add
dec
dec
sub
jne
push
inc
dec
mov
out
ss
cli
movsl
jle
cmp
es
add
pusha
in
shl
sbb
fincstp
add
xchg
xor
testb
out
xor
or
shl
cmp
dec
mov
inc
xchg
scas
out
pusha
mov
es
dec
cwtl
and
inc
sub
pop
xor
jo
addr16
rol
sub
setnp
pop
pandn
or
cmp
xchg
mov
inc
and
jmp
js
xor
bsr
lret
adc
neg
out
cmp
sbb
loopne
test
adc
lods
or
inc
fdivl
dec
dec
pop
sub
or
cmpsb
test
outsb
cmp
ja
ds
xor
pop
out
mov
es
stos
xchg
int
cmp
xchg
pop
stc
cwtl
mov
sbb
int
xchg
aam
fdivrl
dec
cmp
clc
ds
je
rorb
aaa
dec
dec
xorb
js
dec
adc
mov
cmp
adc
shlb
jg
iret
mov
fucomp
das
stos
dec
mov
dec
mov
pushf
orl
clc
mov
jl
sbb
jno
xchg
jb
sbb
add
mov
mov
pop
jp
and
pop
and
mov
mov
rcr
icebp
outsl
xor
sbb
adc
pusha
negb
test
cmp
cwtl
xchg
andl
mov
xchg
sbb
cmp
scas
or
mov
xlat
mov
jge
cmp
mov
cmpsl
xchg
outsb
jle
dec
add
sti
sti
aaa
ret
and
jno
daa
push
xchg
loopne
dec
jae
call
add
ds
adc
shl
rorb
je
sbb
fucom
adc
sahf
hlt
xor
dec
cmpsb
outsb
xor
mov
test
test
fdivl
stos
push
vmovlpd
addb
pop
xchg
jl
lret
insb
cltd
xchg
and
pusha
lods
movsl
stc
in
ficoms
aaa
sub
sub
jl
aad
mov
shll
popa
xchg
xchg
pop
das
xor
out
dec
xor
xor
orl
test
xchg
cmpsl
pop
repnz
sub
dec
hlt
dec
cltd
rcrb
add
sbb
ja
cmp
mull
dec
dec
mov
or
push
or
jnp
nop
mov
testl
adc
sbb
cmp
sub
into
add
xchg
push
push
dec
sbb
sbb
adc
ss
push
jmp
out
je
pushf
out
pop
dec
cmp
repnz
ds
sub
shll
or
or
in
jle
cmpsb
mov
pop
cmp
imul
arpl
icebp
ja
fmuls
and
mov
ror
xor
push
push
push
cmp
pop
mov
jns
inc
or
sbb
stos
and
movsb
loop
insb
cmp
scas
sbb
and
and
decl
push
data16
jecxz
lods
mov
sub
test
repz
ret
icebp
clc
ja
std
xchg
pop
fidivl
sub
sarb
cmp
scas
fcoms
push
ficomps
test
pop
or
sub
out
popf
out
push
push
push
mov
lahf
dec
xchg
mov
mov
sub
stos
xchg
inc
and
mov
jle
stc
inc
test
push
sahf
ljmpw
aas
mov
push
push
sbb
outsl
dec
test
xchg
mov
in
sub
test
and
sub
add
pushf
cli
xor
inc
in
iret
sti
sti
mov
std
in
pop
sbb
jmp
in
stos
or
sbb
push
or
punpckhdq
pop
add
adc
inc
pushw
data16
inc
ret
xlat
mov
xchg
or
xchg
xorl
push
jg
std
out
xor
jne
xchg
ret
scas
repz
add
insb
or
lret
push
dec
cltd
subb
lret
mov
and
ret
ja
fsub
cld
sbbl
subl
sub
insl
or
movsl
mov
xchg
mov
das
sub
add
sub
mov
sub
xchg
js
sbb
xor
ret
and
lods
xor
pop
cltd
jge
xchg
push
xor
jbe
fisttps
js
add
mov
js
shrl
shlb
mov
std
cwtl
push
fs
sbb
mov
inc
adc
int3
scas
mov
push
lret
add
inc
cmp
mov
mov
sbb
jle
mov
int3
lea
push
shl
and
stc
lret
push
push
adc
out
mov
jnp
loope
push
or
leave
or
push
push
mov
xor
push
pop
data16
xchg
fs
mov
ret
mov
adc
push
xlat
sbb
insl
pusha
inc
and
sbb
jno
hlt
pop
lea
sahf
push
int
jp
adc
std
xor
psadbw
negb
popl
insb
and
mov
inc
movsl
jbe
pop
add
sub
pop
sbb
or
pop
mov
andl
les
push
ret
rcrl
inc
sbb
push
sbb
insl
out
out
pop
push
fstpl
mov
cmp
in
in
fwait
xchg
add
nop
imul
mov
push
ja
divl
outsl
bound
jmp
jne
pop
addr16
call
out
jnp
jmp
jns
adc
gs
push
imul
std
idiv
push
xchg
inc
setb
shll
and
clc
pop
add
mov
bound
mov
push
bound
sbb
jg
imull
insb
pop
int
push
std
jbe
das
inc
dec
pop
and
dec
ds
and
pop
fs
dec
inc
add
push
xor
mov
mov
cltd
mov
je
leave
rorl
adc
cltd
and
scas
mov
push
mov
dec
mov
mov
mov
inc
sarb
mov
dec
jmp
pop
fs
jnp
and
mov
ljmp
cld
push
cwtl
xchg
mov
sbb
jae
xchg
xor
aas
xchg
pop
daa
clc
cli
mov
or
pop
mov
push
cld
mov
cwtl
movsl
push
push
dec
mov
dec
iret
nop
dec
fistpll
lods
scas
push
mov
imul
pop
rorl
dec
xchg
roll
jmp
arpl
mov
call
xchg
lahf
mov
jmp
in
repnz
sub
adc
nop
hlt
inc
inc
js
jp
sbb
mov
push
int
enter
mov
sbb
idivb
xor
and
stc
mov
mov
loopne
xchg
or
adc
lods
cltd
repz
mov
loope
test
jo
loope
mov
jmp
add
push
jg
adc
jb
leave
ficoms
mov
aad
sub
xchg
out
dec
add
mov
es
pop
xlat
xor
out
or
cmp
and
dec
rcll
nop
jne
lods
subl
andl
inc
sub
mov
loop
fidivl
divl
push
adc
and
xor
and
cmp
dec
lds
pop
sti
movsb
test
jle
jno
cmp
mov
lds
clc
cmpsl
or
jae
pusha
push
mov
adc
lret
lds
ja
outsl
sub
in
lods
cmp
add
and
pop
xchg
pop
test
mov
lret
aas
push
xchg
scas
jae
pop
mov
aad
pop
xchg
cld
and
cmp
sahf
cld
nop
fs
rorl
jg
inc
pop
scas
in
dec
xor
bound
loopne
sbb
arpl
ret
push
and
pop
inc
es
popl
shl
loopne
cmp
push
sub
push
dec
adc
nop
push
stc
dec
and
mov
mov
out
mov
cmp
arpl
in
sub
jg
mov
dec
leave
xchg
xchg
out
sub
mov
cmc
sub
test
sub
mov
ds
orl
mov
adc
or
fsubrs
adc
hlt
imul
ljmp
mov
add
inc
das
idivl
nop
out
ljmp
outsl
mov
mov
in
divl
sub
data16
and
mov
cli
mov
xlat
mov
push
int
ret
rep
shll
test
imul
xchg
pop
adc
addr16
push
xchg
mov
xor
ficomps
std
test
pusha
dec
leave
adc
pop
cwtl
int
cmp
pop
jns
leave
pop
jl
mov
mulb
dec
ja
adcb
nop
jle
lcall
aas
adc
add
dec
jl
mov
insl
push
rcr
xchg
test
xchg
dec
mov
sbb
pushf
ljmp
jg
or
push
adc
aaa
bound
ljmp
sub
dec
test
add
mov
stos
rcrb
shlb
cwtl
xchg
popa
cmp
sub
dec
adc
or
leave
push
xchg
bound
scas
and
bnd
jns,pn
mov
shr
pop
pop
outsl
divl
cmp
mov
sub
add
dec
int3
jge
push
lock
xchg
cmp
jb
outsb
addb
cmp
sub
in
add
sbb
imul
stos
sbb
insb
lret
push
adc
in
add
sub
popf
sub
insl
in
jns
cmp
jmp
repnz
test
cld
mov
out
fdivl
mov
cli
adc
roll
sub
clc
cmp
into
and
addr16
stos
jecxz
sub
pop
adc
pusha
adc
sbb
sub
mov
xchg
std
std
inc
xchg
push
jae
sub
ret
cmc
sub
dec
mov
sub
xor
dec
inc
xlat
cmc
jl
push
sub
outsl
push
faddp
int3
jno
out
jae
lret
out
out
xchg
and
push
dec
pushf
in
testb
push
ficomps
xor
mov
inc
mov
imul
and
lret
aaa
mov
mov
inc
push
jno
cmp
into
add
jae
mov
mov
jne
mov
xor
mov
pop
mov
and
cs
xor
stos
or
leave
adc
jbe
or
and
in
and
outsb
shl
xchg
jo
mov
int3
insl
cmp
push
les
ljmp
cmp
testl
int3
rcl
cmp
ljmp
std
test
mov
jb
in
cmpsb
sbb
insb
pop
xor
or
insl
sarb
enter
or
jns
lret
cmp
mov
scas
or
nop
push
sahf
cmp
push
push
repnz
lods
iret
mov
dec
repz
and
stos
dec
and
hlt
lret
fdivl
sbb
mov
cltd
mov
push
and
jle
hlt
in
jo
inc
std
aad
and
jnp
mov
cmp
cmp
shl
out
mov
xor
mov
dec
inc
test
cli
loop
stos
in
fsubl
push
ljmp
in
int3
mov
cmc
test
jnp
jmp
and
stos
xor
cmp
ds
mov
addb
mov
add
out
in
movsl
xor
mov
dec
dec
orl
cmp
arpl
lods
sbb
test
pop
aaa
fldcw
cld
sub
mov
dec
cmp
dec
lods
mov
insl
shlb
cmp
mov
insl
stos
shrb
sbb
push
fdivrl
push
aas
clc
mov
mov
pop
arpl
xchg
arpl
xor
pop
cmp
out
dec
pop
jbe
cmpb
test
fldt
lcall
mov
bound
xlat
sbb
aad
sti
cmp
hlt
js
ja
popf
adc
lods
out
shll
cmp
idivb
mov
cmp
push
or
out
je
push
jne
sub
xchg
lods
xor
jno
cmpsl
jno
jbe
mov
bswap
sub
lds
dec
arpl
mov
hlt
mov
sbb
repz
inc
mov
nop
jp
jno
fmulp
sbbl
cmpsb
daa
jmp
popa
or
push
aaa
add
daa
jg
aas
sub
cmpsl
xchg
test
push
mov
dec
fdivrl
mov
test
sbb
cltd
shlb
inc
dec
xchg
fistpl
sub
ret
jns
jb
add
sub
rorb
imul
jae
and
mov
inc
cmc
jb
in
pop
mov
and
adc
jecxz
dec
popa
xor
test
loop
xchg
jecxz
mov
push
enter
and
mov
je
pop
sbb
xchg
and
jnp
outsl
mov
shrl
mov
jo
push
adc
call
ficoms
jns
xor
xor
or
xor
mov
scas
testb
seto
int
cld
int3
ret
fchs
aad
push
mov
cmp
movsb
outsb
jns
int3
adc
pop
push
test
es
mov
push
xchg
lock
das
xchg
add
dec
lahf
xor
push
mov
jnp
inc
jae
aad
and
ljmp
mov
fisttpl
fmull
push
or
mov
inc
fsubrs
pop
cmp
inc
scas
and
cld
pop
jle
inc
adc
outsl
add
cltd
xor
xchg
out
cmp
mov
jecxz
dec
sbb
stos
cli
cmpl
push
mov
sbb
cltd
push
out
pop
mov
iret
or
aas
and
popf
test
xchg
jbe
or
or
push
xlat
outsb
cmc
out
rcrl
cld
jae
jns
mov
push
fidivl
fstpl
inc
push
pop
and
jo
fucomi
mov
sbb
test
inc
out
mov
movsl
cmp
mov
fchs
cmp
test
mov
inc
pop
jecxz
test
out
adc
jge
ret
cmc
aas
add
or
lahf
pop
pushf
loope
fsubrl
cmp
and
loopne
lcall
pop
and
push
pop
mov
xchg
std
push
pop
push
flds
gs
push
aas
xchg
out
test
in
rcll
cmp
sbb
aad
jnp
push
jp
into
cltd
int
int
mov
or
and
mov
aas
sub
icebp
inc
leave
jo
or
testb
jp
mov
shll
sub
jecxz
xor
das
xchg
adc
push
call
movsl
fiadds
insl
dec
ljmp
loop
vmwrite
mov
leave
divb
test
or
test
mov
jge
lods
test
and
rcr
ret
mov
mov
fistps
lods
ja
mov
sbb
mov
sbb
mov
or
and
add
mov
movsl
xchg
testl
lcall
pop
jns
mov
cs
mov
mov
cmp
lret
pop
sarl
rcrl
pusha
push
pop
xchg
or
mov
push
mov
push
in
aas
outsb
cmp
push
mov
push
dec
lret
cmc
int3
cmpsb
clc
fwait
lock
bound
leave
insb
sub
lret
mov
int3
pusha
or
andps
mov
push
sbb
jmp
mov
sbb
xor
xor
mov
mov
add
mov
lds
fnstcw
adc
enter
mov
orb
pop
pop
add
sti
or
xchg
popa
dec
add
ret
adc
jo
pop
addr16
dec
and
adc
cld
inc
mov
fisubrs
sahf
pop
test
mov
push
and
xchg
mov
cmc
jecxz
inc
dec
xchg
or
mov
ljmp
lcall
mov
cwtl
adc
adc
mov
xchg
outsb
repnz
push
xor
cmp
pop
in
mov
dec
push
mov
enter
sarl
je
lahf
stos
popa
adc
push
mov
shll
jo
add
test
ret
sbbl
stos
popa
dec
lahf
fmul
jo
add
dec
and
test
push
push
cmp
imul
jns
lock
cli
pop
sub
lahf
adc
cmc
dec
fsts
xchg
push
bound
les
cmpsl
mov
shll
and
dec
mov
sub
out
nop
jae
xlat
mov
xor
add
decb
mov
pusha
jle
xchg
and
sub
clc
sbb
sbb
iret
mov
hlt
cmp
cmpsl
jl
aam
fldl
mov
stos
sbb
lock
cmc
xchg
mov
mov
jmp
addr16
cmpsl
and
dec
inc
dec
hlt
fnclex
cmpsb
sbb
inc
mov
mov
xchg
fbld
sub
cwtl
idivb
jb
in
adc
js
xlat
add
adc
adc
mov
divb
out
cmpsb
test
inc
xor
bound
int
loop
scas
jle
push
jno
sbb
xor
je
push
pop
push
mov
or
test
mov
dec
sti
dec
push
mov
mov
push
jb
or
out
or
fs
or
in
insb
andb
add
xchg
stos
xor
jmp
and
dec
cwtl
subb
xchg
mov
and
fcompl
rclb
mov
ficoms
or
push
test
popf
andb
les
test
in
pop
scas
insb
jns
sahf
shr
mov
mov
and
cmpsl
sbb
mov
inc
xchg
das
mov
clc
sub
lea
push
dec
pop
pop
sar
push
roll
call
icebp
enter
out
adc
outsb
push
cli
hlt
and
sbb
lods
mov
mov
mov
adc
and
sti
testb
mov
movsl
lret
xchg
cld
icebp
in
movsl
outsb
test
call
jbe
addr16
xor
pop
mov
js
stos
xchg
mov
stos
cmp
push
popf
fsubr
mov
push
mov
cmpsl
ds
leave
shrb
and
add
imul
and
ja
add
lock
push
andb
pminub
pop
leave
lods
add
xor
imul
push
bnd
push
jbe
jge
inc
mov
movsb
cli
xor
das
push
push
fdivp
push
std
push
mov
push
cmpsl
mov
push
fs
adc
mov
xchg
xchg
and
std
mov
and
xchg
push
mov
mov
mov
movsb
lret
sti
pusha
iret
dec
xchg
lock
movsb
into
rcr
sub
lcall
xchg
inc
xor
inc
push
leave
cmp
mov
dec
mov
movsl
jge
jmp
pusha
test
ss
cli
jg
mov
lods
add
fdivl
fists
inc
cmp
pop
fwait
sbb
ret
inc
in
test
mov
subb
outsb
lret
les
cmp
mov
push
xor
xlat
mov
xor
roll
cmp
shl
push
pop
jge
mov
mov
mov
xor
push
loopne
cmpsb
jne
mov
or
xchg
jmp
pop
ss
cmpsb
push
lret
sub
je
ljmp
rorb
adc
jae
adc
clc
jbe
inc
pop
mov
jb
test
fs
fnstcw
mov
mov
incb
pop
jg
lods
popa
mov
pop
push
sub
mov
xchg
iret
sbb
loop
sti
cmp
clc
mov
jg
addb
aas
jo
xchg
jne
mov
push
shrb
mov
shll
gs
mov
sub
in
xchg
les
push
cs
sahf
dec
and
fs
stos
pop
push
jmp
mov
and
mov
jp
movsl
jno
mov
inc
insb
test
insb
sbb
mov
out
add
xchg
sub
icebp
icebp
inc
inc
adc
xchg
push
loopne
into
jl
testb
cmp
gs
xor
shll
push
call
cmp
and
fs
jp
enter
test
test
jecxz
aaa
dec
icebp
ret
sbb
xor
mov
aas
xchg
lods
data16
bnd
or
xor
mov
xchg
inc
sbb
aas
xchg
daa
fstpt
cld
add
mov
stos
mov
fidivrs
push
jno
aad
add
or
lea
xchg
out
loope
jne
shlb
aam
sbb
ljmp
test
movsw
mov
mov
adc
shrb
push
enter
iret
fnsave
stos
jb
pop
mov
dec
push
cwtl
dec
push
test
pusha
cmp
cmpsb
or
pop
or
out
ret
das
repnz
mulb
cmp
inc
jne
repz
mov
nop
call
sub
mull
insl
lock
and
mov
push
bt
xchg
push
push
stos
cmp
or
mov
jb
jge
mov
bound
or
add
adc
clc
mov
mov
movsl
mov
sbb
mov
ret
lret
addr16
leave
pop
sbb
jne
ret
movsb
jnp
ret
xor
outsb
lahf
sbb
sub
dec
movsb
aaa
cmp
pop
adc
sub
mov
mov
inc
shl
sbb
push
adcb
daa
cmpsl
rorl
adc
iret
das
jns
daa
adc
mov
stc
adc
iret
add
sbbl
cmp
roll
and
mov
cmpsb
pushf
add
xchg
mov
addr16
fisttps
cmp
pop
lods
pop
cmp
int3
pop
jecxz
out
js
lret
ss
cld
push
xor
mov
stos
dec
outsb
cmpsb
pop
and
jb
dec
test
popf
add
out
lock
loop
subl
inc
xor
mov
repz
mov
test
imul
test
mov
push
add
inc
ja
inc
push
inc
or
jae
push
stc
or
es
mov
test
ret
jo
fwait
aad
pop
stos
and
adcl
fimuls
icebp
out
int3
mov
add
mov
repz
jmp
lcall
inc
ljmp
lods
loopne,pn
pop
repnz
xchg
stos
testb
popa
pop
jg
jo
fwait
sub
inc
aaa
int3
push
cwtl
cli
mov
stc
pop
out
stos
jae
push
sub
popa
dec
push
scas
mov
inc
push
or
push
push
in
lds
mov
aad
gs
add
mov
loop
ret
mov
jp
xchg
push
je
sbb
mull
fld
fs
xor
cmpsl
cmp
or
mov
insl
or
mov
or
cmp
mul
inc
ljmp
adc
frstor
jecxz
mov
jnp
sbb
loopne
in
fisubl
shrl
loop
mov
sti
add
mov
pop
add
pop
xchg
adc
dec
sbb
mov
in
test
add
mov
pop
orl
mov
or
movsb
pminub
mov
fistl
aas
adc
cmp
adc
mov
leave
jbe
or
sahf
orl
loop
xor
mov
pop
mov
xchg
cmp
mov
or
pop
movsb
rcr
inc
sarl
mov
xchg
jns
rorb
js
mov
xchg
push
mov
inc
adc
movsb
cmp
sbb
xchg
mov
push
cmp
mov
xlat
dec
aad
out
lods
cmc
adc
xor
fisubrl
es
mov
and
adc
ja
ds
lret
dec
imull
fstpt
or
sarb
jge
jmp
testb
push
jg
aam
lcall
mov
push
leave
pop
negb
xchg
js
push
scas
and
jle
pushl
ja
sub
and
jno
out
pop
jne
or
adc
fisttpll
push
mov
shlb
or
inc
int3
add
mov
inc
movsb
popa
add
mov
jecxz
push
mov
xchg
cs
cmp
sub
les
out
cwtl
imul
mov
mov
or
cmp
xor
sbb
loopne
pop
adc
jmp
inc
ss
icebp
sbb
rolb
je
push
inc
push
lret
into
fsubrs
scas
push
inc
faddl
and
outsb
lds
inc
sbb
les
test
mov
add
pusha
and
cmp
test
cmpsl
sub
sub
mov
iret
or
mov
cmp
and
loop
cmp
and
pop
popf
sti
outsl
movl
aaa
std
insb
enter
cmp
cmp
sub
push
jbe
jg
cmc
mov
inc
ficoms
inc
insl
add
fisubl
pop
cmp
mov
sbb
data16
push
mov
int
lods
push
outsl
or
adc
dec
fildll
clc
xchg
add
dec
or
add
push
mov
lock
insl
in
orb
hlt
in
test
inc
addr16
sahf
jae
cmp
fimuls
sbb
mov
jae
jns
in
pop
pop
lcall
movsb
inc
mov
and
push
orb
cld
dec
idivb
xchg
adc
and
sbb
loope
lds
cmpsb
jne
sbb
xchg
cmp
mov
cmpsb
push
stos
stos
cmp
add
adc
jg
or
mov
inc
push
adc
xor
ret
in
or
outsl
stos
or
into
xchg
ret
mov
adc
add
xor
imul
jg
cs
mov
dec
xor
cmp
int3
insb
das
adc
dec
int
repz
mov
lods
inc
or
jp
test
xchg
rolb
mov
push
xchg
sub
int3
in
gs
pop
add
shll
sbbb
jp
or
sbb
mov
sbb
cmp
xor
and
xlat
sarl
fdivrs
fbstp
int
mov
popa
out
lret
add
jae
dec
arpl
mov
or
fwait
cmp
shl
ret
cmp
les
insb
les
in
ficompl
push
jae
nop
fisubrs
iret
ret
testl
mov
cmp
test
push
sub
shrl
mov
stos
mov
lret
jmp
into
sub
dec
cmc
adc
out
mov
fildll
push
push
dec
mov
pusha
ja
jno
mov
jb
in
xchg
push
sbb
aad
ss
loopne
in
cld
pop
push
mov
jo
xchg
cmp
mov
add
lahf
inc
inc
stos
lret
lea
push
and
mov
pop
add
fucomp
push
ljmp
ds
daa
add
mov
je
loope
pop
cmpsb
loope
fcompl
insb
movsb
stos
sbb
into
subb
or
cmc
leave
mov
fiadds
mov
outsl
arpl
ljmp
pop
icebp
adc
mov
pop
mov
insl
fldln2
push
cmp
jle
pop
push
aam
and
sbb
lret
ret
mov
xchg
inc
jecxz
sbb
pusha
jge,pn
xchg
inc
pop
mov
mov
sbb
sbb
jae
in
fs
lcall
or
jg
sbb
adc
jae
aam
bound
xor
mov
pop
jno
ljmp
add
push
daa
imul
orl
or
stc
enter
mov
dec
inc
push
mov
subb
movsb
loopne
mov
mov
and
mov
shlb
addr16
pop
in
setnp
pop
cmp
ss
jnp
pop
jno
adc
sbb
aaa
sub
sub
jo
mov
and
jmp
aaa
xchg
push
push
movlhps
inc
cmp
ret
outsb
fildl
data16
gs
mov
imul
rolb
mov
cli
mov
mov
inc
sub
sub
mov
sub
lods
inc
jns
out
pop
xchg
imul
lds
nop
test
iret
aam
adc
mov
lea
push
mov
inc
int
fstps
fildl
loope
cmpb
gs
es
xchg
add
xor
and
adc
push
adc
jbe
mov
js
cmp
dec
add
ss
addr16
ja
dec
iret
add
mov
fbld
lods
sbb
orl
in
lahf
xchg
mov
adc
inc
test
mov
jns
scas
flds
arpl
rorl
orb
mov
js
lea
inc
jecxz
dec
das
int
cli
lods
push
insb
mov
xchg
mov
jbe
cmpsb
jns
mov
movsb
cs
push
cmp
imulb
add
ja
jecxz
ss
dec
mov
fcompl
xor
pop
add
insl
leave
add
popa
sbb
dec
lock
mov
pop
cld
cmpsb
dec
aaa
mov
add
xchg
stc
xchg
sbb
rcr
aas
sti
movsl
inc
push
sbb
jno
or
cld
jnp
lds
je
push
cwtl
mov
jns
hlt
movsb
sahf
adc
xchg
inc
xor
rol
int
mov
cmp
xchg
mov
push
cld
out
jg
inc
ljmp
or
mov
imul
movsl
lret
ljmp
push
cmpl
cs
repz
add
test
fldt
pop
into
jnp
insb
dec
adc
inc
inc
mov
jmp
push
pop
hlt
out
nop
push
and
int3
out
push
adc
loope
test
jmp
aam
xchg
cltd
jmp
rol
sbb
aaa
mov
fstps
rorb
sbbl
js
mov
lea
pop
inc
push
cmp
mov
fst
push
mov
sub
gs
enter
dec
mov
movsl
push
push
mov
jle
jb
push
mov
mov
push
add
aaa
aas
insb
mov
addr16
repnz
push
popa
loop
inc
push
push
sbb
loop
jl
push
xor
xor
mov
testb
fnstcw
lret
test
and
jne
int3
xchg
aad
sbb
das
pop
push
imulb
xor
addr16
jbe
mov
cltd
push
hlt
cmp
mov
sahf
fldenv
stos
loope
mov
fs
mov
gs
add
adc
and
sbb
stos
xor
leave
ja
out
lahf
bound
sti
ja
andb
cmp
dec
shll
lea
loopne
jle
jge
xchg
mov
shl
mov
sbb
sbb
sub
xor
sub
cld
cmp
lods
imul
pop
xor
push
and
orb
mov
repz
loopne
pushf
adc
jge
or
sub
pop
adc
fmul
jmp
orl
repz
cmc
mov
in
or
call
faddp
push
and
in
fldt
dec
jbe
fstl
jle
add
mov
hlt
lods
sbb
in
jmp
clc
push
flds
dec
stos
mov
ljmp
push
mov
gs
in
mov
mov
sbb
and
pop
sbb
repz
add
xchg
hlt
and
out
sub
and
sbb
adc
push
setno
cmp
out
lret
int3
adc
mov
sbbl
jno
jmp
jne
xchg
fiaddl
fwait
dec
jbe
mov
test
daa
stc
in
add
cmp
loop
fsubrs
pop
cmp
mov
mov
sub
pop
mov
jae
mov
shl
adc
and
add
or
jmp
adc
push
enter
jnp
or
jl
imul
inc
sub
inc
aas
test
fadd
xor
dec
sub
andb
mov
jmp
ljmp
sbb
pusha
fwait
loopne
dec
inc
pop
test
js
mov
dec
cmc
dec
scas
mov
push
es
cmp
or
xchg
pop
loope
pop
negb
push
push
repnz
js
jae
mov
test
not
ds
mov
loop
xlat
sub
into
dec
pop
adcb
outsb
push
stos
outsb
adc
aas
cltd
addl
cwtl
fidivrl
or
push
or
push
sub
test
mov
movsl
mov
mov
out
fcompl
mov
jne
leave
dec
sub
jo
movsb
push
push
aam
int3
sbb
jp
inc
jp
aad
lahf
adc
pop
xchg
add
fstl
add
add
aad
je
jp
cld
or
mov
aas
stos
ss
insl
ja
out
cmpsb
push
outsl
mov
data16
mov
cmpsl
pop
adc
pop
jo
cmp
jp
in
sub
sub
test
xchg
dec
adc
roll
test
cmpsb
jecxz
adc
add
and
insb
sub
lods
pop
ds
add
movsb
or
test
add
cmp
cmpl
mulb
pop
push
sub
fnstcw
xor
test
lahf
xchg
mov
outsl
clc
or
add
mov
sbb
loope
lods
xchg
cmp
mov
out
mov
mov
js
push
cmp
inc
xor
gs
sub
jno
mov
out
mov
gs
mov
out
mov
int
jge
ja
jnp
sbb
pop
inc
dec
movb
mov
pop
loopne
xor
pop
test
fwait
add
ja
insb
repz
mov
faddl
sti
mov
push
andb
adc
cmpsl
push
mov
push
or
mov
shlb
pop
xchg
cltd
pop
mov
adc
int
lds
or
mov
ret
cmp
cmpsl
ja
and
or
mov
jns
subb
mov
out
dec
test
xchg
dec
gs
add
jne
ficompl
xor
loope
leave
xchg
xorl
stos
pop
pop
dec
push
lea
lahf
shrb
mov
fwait
loop
mov
enter
cmpsb
sub
jmp
cmpb
bound
adc
push
xchg
notl
rorl
sahf
and
adcb
push
mov
jbe
mov
in
inc
fldenv
aad
dec
iret
push
add
es
adc
or
jae
out
fs
mov
scas
jg
dec
mov
test
dec
jge
std
hlt
sub
lds
mov
mov
sbb
xor
mov
jl
mov
mov
add
mov
jbe
pop
dec
sub
adc
mov
jg
div
loope
cwtl
arpl
mov
ljmp
cwtl
jns
mov
inc
xor
pop
pop
clc
je
xor
jnp
jge
sbb
mov
sub
inc
rorl
mov
add
icebp
repnz
in
ljmp
mov
ljmp
sub
add
and
test
sbb
pop
sub
cmpsb
int3
shlb
repz
mov
pusha
xor
ljmp
inc
daa
sub
add
adc
std
sub
dec
fistl
add
icebp
into
add
adcb
rol
and
movsl
fcoms
daa
insb
out
xchg
sub
sbb
pusha
sub
mov
mov
add
cs
cmp
mov
xlat
stc
stc
mov
mov
ss
je
adc
xor
in
cmp
lea
ds
pop
dec
dec
mov
xchg
and
xchg
mov
lcall
lds
push
pop
imul
add
and
aam
mov
mov
mov
loopne
js
imul
push
ret
sub
daa
mov
pop
iret
int3
data16
push
pop
sti
call
lahf
xchg
pop
pop
xchg
push
aas
xchg
xor
add
xor
dec
int3
test
jbe
sbb
inc
mov
pop
inc
fs
shl
pusha
jge
mov
shlb
stos
xchg
mov
sbb
into
xor
inc
rolb
adc
pushl
mov
or
mov
inc
pop
mov
xor
mov
jl
scas
sbb
mov
and
repz
mov
or
int3
icebp
cld
test
or
push
rol
pop
add
push
mov
mov
inc
inc
push
xor
jmp
pop
lods
testb
lds
call
ja
xchg
xchg
xlat
mov
gs
push
in
lahf
mov
add
pop
and
push
xlat
pop
movsb
mov
lcall
loope
imul
pop
jl
cmp
jp
mov
jns
leave
dec
mov
pop
push
sub
adc
and
bound
clc
push
ret
xchg
cmp
push
lahf
xor
or
dec
mov
icebp
push
das
stos
mov
xor
ret
add
je
lret
enter
fabs
mov
arpl
cs
mov
push
dec
lahf
jl
and
outsb
adc
push
loopne
mov
mov
cs
mov
dec
and
popf
jno
ficoms
jg
popl
pop
or
rep
mov
shrb
mov
xor
xchg
fdivrs
mul
sub
loope
jmp
mov
test
pop
mov
shll
mov
in
repz
mov
mov
divl
or
mov
mov
cmp
inc
xor
cmc
xor
and
pop
adcb
addr16
mov
cld
fildll
push
push
idivl
mov
lret
xor
ss
lret
out
leave
cmp
cs
mov
incl
rcrb
push
jp
pop
clc
daa
outsl
mov
aas
jecxz
mov
shlb
shll
mov
enter
or
fnstsw
insl
sub
aaa
or
mov
pop
and
cltd
fwait
sarl
lods
dec
insl
out
fldl
sub
int3
xchg
sbb
lods
cwtl
bound
mov
or
inc
dec
movsl
jp
cmp
inc
push
jnp
mov
cld
nop
xchg
sar
lcall
adc
or
lret
pop
xor
pop
and
mov
cld
jp
jns
xor
imul
dec
rcr
jbe
pop
mov
pop
mov
sahf
sbb
add
decl
sti
pusha
js
fs
subl
xchg
mov
xor
push
dec
pop
outsb
xchg
jns
cmc
outsl
int
mov
jmp
jno
push
inc
ja
dec
sbb
jecxz
jmp
ljmp
popf
inc
mov
dec
fisubrs
xchg
fnstsw
imul
mov
jl
cmp
leave
jge
movsb
xchg
js
lock
jns
es
imul
js
mov
dec
adc
inc
cs
jns
test
cmp
pop
pop
pop
push
inc
or
outsb
mov
aaa
pop
adc
mov
aas
in
rorl
sarb
lds
arpl
ret
or
scas
addr16
sbb
xchg
daa
and
lods
dec
lahf
roll
je
sub
scas
int
fisubrs
xchg
and
xchg
int
mov
and
adc
inc
mov
jae
stos
push
das
mov
outsl
test
fisttpl
std
push
call
popf
subb
hlt
mov
mov
mov
and
inc
aas
mov
iret
cmpsb
lock
cmpsl
ja
aas
push
adc
or
inc
jno
or
icebp
xchg
jne
dec
orb
push
or
sub
adc
enter
fwait
cmp
enter
and
cmp
mov
pop
mov
push
jg
lahf
test
testl
push
push
nop
mov
sbb
int3
mov
adc
jne
sti
ljmp
je
mov
rorl
int
pop
inc
cmp
in
insb
dec
shl
pushl
sub
push
incl
test
pop
mov
or
inc
call
out
push
cmp
lds
and
mov
push
pop
enter
cmp
mov
in
jmp
mov
mov
and
mov
cmp
mov
jo
cs
mov
rcl
and
mov
and
les
or
xor
xorb
pop
inc
daa
mov
sub
pop
adc
pop
roll
cmp
lea
popa
add
shll
ss
dec
jp,pn
outsl
xchg
jb
lret
out
push
leave
pop
popf
xlat
out
and
gs
sub
adc
jno
xchg
pop
inc
adc
mov
movsl
iret
jae
xchg
loope
scas
dec
mov
rol
scas
pusha
sar
lds
out
adc
mov
cmp
add
rolb
dec
adc
sbb
pop
out
push
add
xor
mov
pop
cltd
jbe
xchg
push
pop
repnz
xor
aas
jnp
das
cs
and
popf
push
xor
cltd
dec
cmc
aam
pop
jge
cmpsb
lods
rcrl
loope
cltd
out
push
xchg
push
in
or
mov
pop
sbb
subl
mov
mov
ja
mov
cmpb
push
xchg
rorb
stc
ret
pushf
ss
add
mov
fldcw
or
test
push
or
cmp
dec
call
lods
fbstp
inc
repnz
sbb
in
rol
add
in
push
fisttpl
cmp
mov
in
arpl
mov
shlb
dec
scas
jmp
imul
or
outsb
push
sbb
test
rcl
xor
push
ret
add
lahf
stos
dec
fadds
mov
adc
inc
loopne
clc
repz
mov
mov
dec
cmp
shlb
inc
push
rolb
repnz
js
cltd
aas
adc
jg
das
mov
inc
dec
push
mov
insl
ljmp
ja
mov
in
cmovs
jbe
push
fnstenv
dec
pop
adc
idivb
ja
repz
cmp
call
cwtl
std
inc
out
xchg
dec
pusha
jne
dec
or
add
jns
std
mulb
and
aad
ret
xchg
mov
out
testb
pop
mov
xor
cmp
push
dec
sarl
into
xchg
test
mov
mov
jecxz
shlb
push
xchg
or
fst
lret
dec
xor
ds
mov
xchg
push
mov
fimuls
mov
je
mov
jle
jl
js
pop
xor
nop
adc
and
pop
fisubrl
xchg
sahf
add
jmp
pop
test
inc
add
cld
mov
das
mov
test
lcall
and
fdivr
lods
cmpsl
mov
mov
int3
sbb
mov
mov
popa
xchg
add
mov
stc
std
mov
push
xor
repnz
sbb
aas
int
or
adc
out
iret
dec
cmpsl
xchg
int
idiv
fwait
lds
pop
sbb
mov
in
hlt
dec
movsl
aas
xor
and
xor
in
cmc
rolb
fisttps
lds
inc
stc
cltd
test
fwait
negb
je
jl
lds
mov
dec
mov
stos
cmp
mov
and
sbb
jle
test
daa
inc
lea
mov
fcomps
gs
jl
cmc
jo
cmc
dec
lds
out
fsts
mov
or
mov
jl
pop
pop
andb
jno
dec
mov
cmpsb
or
sbb
xlat
pop
popa
mov
in
push
mov
jb
into
test
cs
imul
xlat
cmc
arpl
mov
fst
in
pop
fdivrp
inc
out
outsb
jnp
add
js
or
addr16
sub
pop
mov
mov
dec
xchg
nop
sbb
testl
stc
xor
jae
push
jmp
cmp
adc
out
int
jae
mov
mov
pop
sarb
push
js
mov
inc
jbe
mov
sub
psubusw
inc
inc
mov
sbb
cld
or
fmull
inc
into
hlt
movsb
and
arpl
jo
and
pop
xchg
nop
dec
adc
pop
add
dec
xchg
xor
xor
divl
cmpsl
stos
xchg
jns
repnz
adc
dec
movsb
jle
pop
xchg
xchg
push
sti
adc
sbb
sub
lret
and
xchg
mov
lcall
scas
jns
mov
jae
cmp
mov
fisubrl
test
aaa
fucom
sahf
mov
popaw
aas
xor
sub
rcrl
dec
mov
call
push
je
sub
mov
aas
lods
aas
hlt
sbb
lret
mov
sbb
in
pop
xor
out
sbb
mov
aam
imul
xchg
push
add
lock
add
fadds
out
jae
xor
adc
mov
cmpsl
dec
inc
in
cli
lret
test
into
outsl
push
mov
nop
shrl
mov
pusha
push
popf
popf
in
data16
xchg
jle
mov
movsl
cmp
or
insl
sahf
out
push
xor
sub
dec
scas
xchg
and
dec
fs
and
ljmp
mov
cmp
jl
xor
arpl
out
sbb
jl
jnp
repnz
aaa
mov
je
and
xor
fsts
add
jmp
add
out
xor
xor
test
mov
jb
or
adc
cs
mov
push
and
testl
movaps
in
andb
movsl
mov
inc
gs
cmpsb
mov
iret
mov
sub
loopne
sahf
xchg
jo
mov
push
jno
outsb
push
or
sbb
push
repz
andb
xor
pop
mov
je
stc
dec
jp
push
std
or
test
repnz
js
movb
and
jge
subl
push
jecxz
in
pop
fs
and
push
std
xor
xchg
jb
mov
mov
mov
cmp
xchg
pop
adc
or
pop
std
mov
sahf
push
push
shlb
sub
mov
mov
in
mov
jmp
les
mov
imul
and
xchg
outsl
mov
jns
in
xchg
push
inc
jecxz
or
in
leave
loopne
jl
fwait
jmp
dec
cs
repz
leave
fwait
gs
and
inc
dec
fsts
fwait
sbb
stc
fdivl
mov
mov
inc
push
sbb
adc
pop
in
jecxz
mov
mov
adc
mov
cmp
popa
ljmp
and
jnp
mov
loop
int3
mov
gs
adc
or
andl
xor
pop
cmpsb
or
aad
cmp
inc
inc
lcall
out
xorb
addr16
js
imul
add
jno
and
std
and
call
lret
push
inc
out
push
jns
ja
cmp
or
mov
scas
push
jne
mov
imul
popa
test
jo
cld
or
or
jmp
outsb
pop
push
loopne
xor
call
cmpsb
adc
dec
push
jg
aam
xor
loope
adc
jge
xchg
jle
lods
add
sbb
sub
mov
mov
shrb
test
lret
sbb
xor
dec
insb
hlt
xor
mov
or
mov
nop
ja
inc
sub
nop
addl
adcl
mov
push
insl
out
jne
andl
lea
adc
pop
out
std
add
mov
shlb
popf
lods
vcmpss
xchg
sub
or
xchg
das
pop
popa
gs
repnz
aam
fisubs
cmp
rorb
sbb
inc
clc
dec
dec
jae
sub
adcl
mov
test
jns
roll
ds
push
mov
dec
nop
test
dec
sbb
push
aad
out
mov
inc
cmp
fsts
fwait
adc
stos
mov
xchg
cmc
sbb
add
mov
jbe
pop
fsubr
les
stc
cmc
jmp
cs
push
xchg
pop
cltd
cmp
test
cli
xor
ja
and
pop
jle
out
add
cmp
cmp
push
cmp
adc
mov
push
cmp
cmpsl
jge
or
xchg
xor
lds
cmc
lods
out
or
negl
dec
imull
dec
filds
lret
xchg
xchg
xchg
add
or
inc
adc
cmp
mov
aad
outsl
xor
cmpb
adc
push
inc
add
pop
daa
push
dec
cmpsl
mov
and
movsb
fimuls
cmp
pop
pop
push
test
adc
repz
fwait
movsl
sub
sub
mov
in
out
in
sahf
call
jb
je
jmp
xchg
xchg
lcall
mov
sbb
icebp
fldenv
xchg
adc
jge
and
add
shll
mov
loop
into
lret
adc
stos
jp
in
mov
sub
fucomi
mov
cwtl
or
out
push
push
leave
stc
adc
push
iret
adc
ss
stos
mov
mov
lea
pop
lahf
or
fcompl
sub
pop
dec
push
lcall
cmp
icebp
mov
xchg
es
rcll
or
daa
outsl
orb
ret
scas
add
imul
lods
cmp
adc
jbe
push
mov
mul
inc
iret
inc
mov
dec
fcmovu
loopne
push
jp
sbb
nop
and
imul
cmp
nop
rcl
jnp
orl
lods
cmc
stos
cltd
sbb
daa
mov
mov
dec
inc
nop
xor
jp
lahf
push
fdivrl
fsubl
daa
leave
ja
mov
jbe
sbb
out
push
dec
mov
xchg
jno
int3
lods
gs
mov
scas
dec
inc
inc
mov
push
outsb
cmc
leave
lock
mov
data16
push
sbb
mov
adc
and
push
stc
cs
and
mov
sbb
mov
dec
in
popa
sbb
fnstsw
inc
pop
popf
jo
sbb
jb
mov
adc
mov
jge
loopne
lret
dec
pop
lods
in
movsb
mov
or
adc
es
sarb
mov
mov
sbb
icebp
adc
mov
ret
dec
lret
sbb
push
ja
sbb
add
add
mov
shl
cld
sbb
jo
push
setno
push
in
outsb
jne
jb
pop
inc
jle
cwtd
cmc
bound
call
push
repz
dec
fstps
mov
adc
push
mov
std
xor
test
jbe
pop
mov
xchg
lcall
inc
fisubrl
icebp
add
cs
or
jo
sbb
push
clc
outsl
pushf
ds
sti
arpl
ljmp
js
dec
pusha
sub
repz
stos
rcrl
mov
lock
fs
ja
xor
fs
inc
xor
cmp
sti
or
lret
mov
jge
popf
or
mov
sahf
cmp
jmp
push
cld
cwtl
adc
pusha
rorl
jb
lahf
setb
lcall
mov
pop
cmp
mov
cmp
mov
sbb
popf
jmp
cmp
and
test
push
out
in
jmp
xchg
xchg
or
push
clc
xor
adc
outsl
sbb
xor
push
cmp
daa
ficompl
inc
adc
stos
mov
mov
imul
mov
iret
aaa
xlat
or
scas
pop
ret
inc
jns
roll
mov
sarl
push
lret
addb
push
inc
gs
mulps
inc
imul
sub
ret
jge
shl
pop
push
sbb
aaa
in
xlat
fildll
lds
push
out
sbb
es
icebp
mov
test
add
faddl
repnz
loop
bound
punpcklbw
dec
jo
es
pusha
inc
add
fwait
cli
cld
lret
test
sub
jnp
and
test
iret
fucomi
icebp
mov
cmpsl
fsubrl
jecxz
xlat
lds
out
out
bound
pop
aad
stos
push
xchg
and
dec
xor
fistpll
pop
pop
jnp
jge
and
out
out
subb
pop
loope
es
daa
sub
jns
jne
sbb
dec
imul
bound
xchg
aaa
and
pop
test
negl
leave
and
and
and
sbb
dec
dec
lock
test
lea
mov
mov
xchg
repnz
xor
mov
or
sahf
das
fsubrs
or
imul
insl
test
push
sbb
xchg
stc
push
xchg
negl
fldt
pushf
test
inc
and
mov
or
je
mov
stos
movsb
negb
mov
mov
arpl
push
mov
adc
or
xlat
push
lds
repz
jns
pop
sahf
cmp
inc
mov
push
mov
xchg
mov
movsb
arpl
add
jle
jne
mov
adc
and
js
and
mov
data16
cmp
sti
lock
and
and
in
mov
fcoms
in
stc
les
push
push
jp
jae
pop
iret
cs
adc
jg
mov
pop
movsb
lret
sbb
xor
pop
lds
ds
hlt
aad
addr16
test
push
pop
lea
mov
addr16
dec
shrl
std
xor
insl
jg
int3
mov
inc
mov
pop
sub
out
inc
adc
push
xchg
scas
mov
leave
sbb
cwtl
gs
pop
mov
fs
dec
push
mov
out
fiadds
mov
cmp
pop
imull
movsl
dec
daa
inc
dec
pop
out
push
sbb
sbb
cmp
xchg
in
ljmp
mov
subb
pop
cmp
push
sub
push
xor
scas
mov
jbe
lret
aaa
jae
cwtl
out
and
xor
mov
fisubrl
notb
push
sub
aam
out
cmc
push
push
inc
cld
fimuls
mov
pushf
mov
cld
fcomp
fistps
mov
les
mov
or
adcl
sbb
push
or
fwait
mov
xchg
mov
mov
inc
popa
imul
push
inc
mov
inc
lods
lds
in
and
fimull
popa
and
leave
push
js
das
xor
cli
idivb
mov
push
lock
xchg
lods
cmp
lcall
and
sbb
or
xorl
dec
mov
int
jl
fiadds
push
mov
leave
adc
lret
push
xor
ja
sbb
mov
outsl
imul
cmpsb
or
call
ret
lds
or
or
push
inc
aaa
xchg
xlat
sub
jo
cltd
sbb
xchg
pop
cmp
sub
xchg
fmul
movsb
out
out
je
inc
cs
lea
mov
add
sbb
jo
add
daa
lods
mov
pop
mov
ds
leave
mov
adc
insb
movsl
outsb
fimuls
sbb
int
insb
cmpsb
pushf
xchg
sub
mov
enter
fcmovne
mov
mov
arpl
add
push
xor
jp
or
xorl
clc
ficoms
pusha
out
or
imul
shll
push
mov
mov
jle
orb
outsl
bnd
popf
cli
cmp
inc
sub
add
fstpl
mov
xor
mov
jle
dec
jne
fcmovnb
and
test
mov
or
sarl
test
mov
outsb
mov
or
je
xchg
hlt
adc
jg
ja
das
or
nop
mov
and
in
or
pop
sti
in
jmp
loop
add
repz
dec
mov
ss
negl
sub
jns
clc
push
pop
mov
dec
xchg
aaa
cmpsb
mov
pop
mov
out
rclb
jmp
movsb
xor
popa
mov
aad
addr16
mov
pop
pop
mov
xchg
mov
rorb
sbb
lret
dec
repz
pop
cmpsl
xlat
mov
and
adc
add
mov
push
scas
mov
cmpsl
imul
jne
leave
repz
mov
movsl
lret
and
inc
cmp
sbb
and
adc
sarb
sub
sar
out
mov
pop
sti
sub
lret
and
cmp
pop
orl
push
xlat
pop
or
inc
fnstsw
aas
out
call
test
out
imul
jbe,pt
dec
js
jle
das
pop
cmpsl
or
mov
notb
ds
pop
mov
xlat
pusha
pop
sti
gs
out
xchg
xchg
jle
int3
mov
jmp
cli
push
out
jo
cmc
test
stos
sub
leave
mov
jle
sub
xor
ja
repnz
push
mov
adc
lock
std
rcll
iret
cmpsl
pop
push
sub
adc
xor
iret
dec
or
dec
jl
cltd
xchg
das
cli
inc
je
insb
notb
loope
je
mov
jmp
outsb
jns
cmpsl
mov
hlt
xchg
dec
jno
cmpsl
les
xchg
clc
cmpsl
mov
and
cmp
mov
and
rorl
outsl
xor
pop
repz
fdivr
stos
and
sti
sti
shl
add
ret
mov
sarl
push
test
test
das
stc
sbb
add
into
push
lods
imul
ss
notb
pop
ror
lds
aam
mov
mov
pop
imul
push
sarb
push
call
les
push
addr16
jge
mov
inc
ja
hlt
mov
push
or
test
add
push
int3
mov
adc
mov
sahf
test
movsb
pushf
cmp
inc
insl
testb
adc
dec
out
imul
test
add
dec
adc
aad
movl
push
rolb
ret
lea
fs
and
fimull
cmp
shrb
push
adc
les
pusha
sarb
into
stos
mov
cltd
lahf
aad
dec
jmp
push
insl
aaa
cmp
clc
inc
outsb
pop
ss
inc
test
push
mov
addb
mov
or
jae
test
mov
jae
testl
xor
in
outsl
jbe
hlt
loopne
cmc
je
push
int3
mov
ss
pop
cmp
popl
out
enter
dec
pushf
push
stc
add
xchg
push
and
addr16
or
arpl
gs
jb
lret
xor
leave
notb
sysexit
dec
movsb
cs
lods
mov
fstpl
mov
sub
ss
andl
leave
cmp
add
sub
aam
outsb
xchg
adc
pop
ud1
leave
dec
jle
xchg
movsb
push
mov
mov
push
push
add
in
add
pop
adc
add
inc
loop
add
lea
mov
jge
lret
dec
mov
cmp
call
popf
out
cmp
rolb
outsb
sbb
push
cmpsb
pop
ret
movsb
rclb
inc
jb
loop
mov
xchg
jae
loop
sub
sbb
jle
enter
sub
mov
jmp
addr16
mov
out
and
mov
mov
jns
push
pop
js
aad
cltd
loope
dec
dec
xchg
lret
popa
movsb
push
pop
push
sti
mov
mov
cwtl
xor
and
jg
cmp
mov
sbb
cmp
jns
fimuls
stos
mov
xchg
int3
lods
cmpl
mov
int
test
sbb
xor
test
loopne
scas
rcl
int3
mov
and
pusha
rorl
daa
sbb
push
idivl
out
rcll
push
or
aam
sahf
mov
mov
repnz
lds
fildll
cwtl
adc
fdivl
push
jne
mov
dec
cmpsb
add
and
xor
adcb
inc
pop
fwait
or
adc
imul
lcall
pushf
cmp
pop
bound
hlt
mov
insl
mov
fnstenv
lods
and
add
adc
int
cltd
inc
cmp
ret
and
mov
jb
mov
mov
xor
mov
stos
jnp
adcb
xlat
repz
and
jl
sbb
pop
mov
rcrl
lods
xor
cmpb
dec
pop
std
dec
mov
add
add
cmc
or
inc
test
into
loopne
cld
fidivrl
inc
cmp
mov
mov
outsb
add
movsl
mov
movsb
hlt
xor
lret
adc
push
mov
cwtl
pop
imul
mulb
jns
shlb
pop
mov
jge
loopne
cli
les
xor
cld
cmpsl
loope,pt
flds
outsb
js
adc
xchg
or
inc
jl
or
mov
add
xchg
jo
dec
and
rclb
push
stos
mov
lcall
in
push
negb
mov
cmp
cmp
ljmp
dec
and
xchg
sub
lock
pushf
dec
and
or
or
sub
xchg
cmp
dec
jno
scas
adc
andl
xor
or
push
add
dec
mov
sub
shrb
mov
mov
adc
xchg
xchg
in
ljmp
mov
and
in
or
repz
push
clc
ljmp
mov
sbb
mov
add
outsl
adc
push
test
jge
testl
xchg
adc
lds
mov
adc
or
push
ret
sbb
pop
scas
adc
cmp
outsl
nop
cltd
shll
xlat
addr16
filds
xchg
mov
jmp
jnp
add
or
sarb
cltd
ja
ret
cwtl
cld
mov
sbb
subl
push
pop
ljmp
call
fdivl
or
fidivrs
xor
repnz
mov
add
jnp
fwait
rcl
in
xor
cmp
sbb
add
cmpsl
mov
mov
rcll
dec
imul
xor
arpl
jb
or
cmp
leave
mov
cmpsb
jecxz
mov
mov
mov
dec
inc
shrl
dec
repz
inc
pop
pop
mov
mov
movsb
js
into
push
rclb
out
cmp
pop
es
outsb
dec
je
scas
popl
jae
pop
jge
mov
inc
int3
ja
mov
mov
xor
fbstp
fidivrl
pushl
in
icebp
sub
js
cli
jp
mov
xchg
pop
movsl
scas
jb
xlat
add
inc
sbb
pop
xor
clc
dec
int
aad
test
push
jge
into
push
lods
or
jge
shl
mov
dec
iret
enter
and
and
jno
cmp
cli
ja
sub
push
or
inc
movsl
push
adc
xchg
and
fildl
lock
rorl
cmpl
aad
in
sub
inc
inc
outsl
orb
add
pop
push
sar
fcoms
daa
xchg
bswap
add
inc
and
pusha
test
cmp
outsl
roll
mov
push
movsb
shlb
in
shlb
mov
sbb
sub
les
int
xchg
pushf
sti
adc
adc
js
sahf
subl
and
mov
xchg
xchg
sub
cmp
loop
rolb
fstpt
push
pop
jb
cmp
out
push
pusha
arpl
cwtl
es
insb
jmp
lock
mov
aas
loope
dec
push
jno
lret
or
pop
repz
repz
pop
xor
mov
mov
add
dec
xchg
cmc
roll
sbb
int
aam
lcall
push
mov
push
frstor
int
iret
fstp
inc
clc
mov
push
daa
fdivrs
dec
es
mov
gs
jbe
lret
pop
shlb
add
das
pushf
fistpll
sub
and
repnz
movsb
ficoml
ds
dec
int3
pop
ret
scas
imul
and
loopne
dec
pop
xchg
vsubps
jnp
add
bound
push
aas
pop
add
in
mov
outsb
scas
inc
es
lods
popa
andl
ds
push
dec
mov
xor
xchg
sub
xor
add
and
add
aam
inc
sahf
push
lea
sbb
mov
insb
stos
js
mov
jle
dec
push
mov
call
stos
push
cmp
je
movsl
inc
ficoml
xor
jns
jo
mov
push
pop
jge
or
push
test
orl
lea
pop
sarb
mov
sahf
jp
xchg
jnp
pushl
mov
add
pop
loop
mov
inc
lods
pushf
popf
in
push
jp
cmp
cmc
outsl
push
int3
mov
add
pop
push
dec
pusha
mov
cmp
outsb
xlat
ret
fidivl
xor
xor
sbb
xor
imul
stc
xor
fistpll
sahf
lds
jg
rolb
xor
and
popf
adcb
cmp
xor
scas
push
mov
in
jae
add
jne
ret
outsl
cwtl
push
stos
or
xchg
dec
aaa
inc
mov
sub
ds
pop
xor
int
cmp
inc
test
jmp
repnz
call
movsl
test
call
push
cli
jno
lock
cltd
jns
lcall
imul
mov
shlb
rorl
jg
mov
stos
dec
push
enter
cmpb
xchg
pop
jb
jg
xchg
push
bound
jmp
leave
ret
mov
pop
mov
jne
mov
jl
sti
cmp
jns
in
loopne
movsb
mov
lahf
xchg
adc
sbb
addl
inc
pop
testb
stos
push
adc
push
cmp
aaa
inc
adc
cmp
xchg
pop
testb
inc
call
das
push
ret
je
mov
test
popa
cmp
cmp
sti
imul
stos
fsubr
push
cld
insl
clc
xor
in
mov
shlb
insl
lcall
fsubrs
lcall
cltd
imul
stos
sub
les
xor
loopne
gs
test
pop
scas
pop
sbb
mov
leave
mov
lcall
cmp
sti
shrb
popf
bound
lea
xor
xor
or
add
mov
ret
loopne
js
and
cmpsl
pop
jo
sahf
mov
mov
xor
mov
in
sub
mov
out
scas
mov
jl
cmc
out
xor
dec
shl
mov
push
jmp
mov
ud2
scas
fs
lahf
add
pop
ljmp
dec
pop
mov
jnp
shlb
fidivrl
adc
adc
aas
jne
dec
mov
or
push
emms
ja
mov
sbb
test
add
and
push
inc
mov
sbb
cltd
rolb
xchg
sbb
scas
mov
clc
jl
xchg
imul
leave
stc
adc
popf
mov
push
and
xor
loop
pop
jno
cmc
fstp
adc
int
cld
int
xor
subl
in
add
sub
ret
push
sbbl
imul
js
pop
clc
xor
jle
mov
xor
stos
sbb
xchg
and
cmp
gs
mov
cld
sbb
mov
stc
jmp
xchg
call
sub
fcomp
push
xchg
xlat
pop
xchg
inc
push
movsl
js
adc
mov
lret
xor
outsb
jnp
test
out
cmpsl
out
jne
mov
mov
dec
push
mov
dec
leave
inc
inc
add
sub
loop
data16
jecxz
jmp
mov
mov
mov
dec
jp
pop
sub
dec
loopne
into
push
sarb
push
jbe
pop
pop
stos
into
fistpll
jg
in
cmp
cwtl
mov
add
jp
lea
xchg
ret
xor
enter
in
cli
mov
dec
aaa
fcompl
sbb
adc
dec
and
add
rcrb
inc
loop
jbe
shrl
ret
ret
jo
rol
into
out
jmp
mov
mov
test
jne
loope
or
pop
dec
push
in
pop
sub
gs
popa
mov
mov
xchg
inc
outsb
jae
popf
or
daa
jb
iret
lret
sub
pop
push
imul
push
fisubs
into
data16
movsl
into
cltd
adc
or
inc
push
add
mov
pop
inc
dec
add
jb
cmpsb
adc
cld
pop
lock
push
cli
jns
icebp
pop
test
sbb
cwtl
pop
dec
insb
insb
sbb
rsqrtps
jo
pop
and
je
mov
out
inc
inc
scas
sti
jne
je
or
jbe
cmpsb
xor
out
insl
adc
inc
movsb
lret
cmpsl
insl
jo
mov
nop
cmp
lods
mov
adc
cmp
add
sbb
movsb
add
xor
outsb
fwait
xchg
or
dec
nop
imul
lahf
dec
pop
ds
mov
xchg
mov
and
xchg
xchg
sbb
mov
or
int
sub
mov
clc
adc
cwtl
jmp
in
ds
in
jb
mov
cmpsb
pop
les
out
test
add
lds
js
push
iret
cltd
fbld
enter
push
mov
fdivl
inc
xor
loop
pop
repnz
fmull
push
xchg
and
cmp
fs
mov
fldenv
flds
lahf
mov
cmp
sub
sbb
shll
mov
rolb
aaa
btr
adc
jno
jle
je
mov
push
pop
outsl
std
loopne
enter
stc
mov
jmp
sbb
popf
lea
mov
inc
sahf
xor
loopne
fisubs
rclb
cli
xchg
fnsave
cltd
sarl
xchg
outsb
sbb
nop
les
pop
outsl
push
jecxz
adc
fstpt
xor
loop
lods
dec
and
lahf
push
cmp
cmc
push
insl
int3
loop
cmc
or
mov
push
mov
les
lock
lret
aaa
das
mov
sub
hlt
jb
xor
test
lret
pop
call
jbe
iret
push
cmp
dec
cmpsl
mov
pop
cmpsl
loope
lods
xchg
out
addr16
outsb
dec
jle
lods
mov
adcl
or
mov
insl
jnp
pop
aaa
sbb
mov
out
adc
mov
dec
pop
aaa
leave
xchg
scas
dec
jge
pop
ds
push
dec
pop
xchg
pop
subb
mov
adc
pop
xchg
cmp
scas
push
or
mov
rorl
mov
mov
jecxz
frstor
pop
loop
lcall
mov
dec
xchg
pop
data16
call
pop
int3
dec
lds
rcll
fsts
jl
push
sub
ds
add
pop
stc
cltd
js
aas
fldl
jno
jle
loope
push
mov
push
sbb
mov
test
jp
andl
jo
popf
jo
insl
in
mov
scas
sub
or
push
incl
out
aas
push
dec
daa
rcl
cmp
xchg
aas
decb
mov
aam
mov
dec
adc
fdivrs
outsb
imull
sbb
pop
mov
pop
je
sbb
les
or
push
sbb
jge
pushf
pop
sbb
add
cmp
push
ja
jp
out
cmpsb
jl
and
insl
xor
inc
mov
insl
mov
adc
adc
call
aad
dec
clc
pusha
aas
add
push
xor
jno
and
pushf
ljmp
or
adc
mov
out
rcrl
xchg
out
pop
gs
mov
ja
pop
cmc
fdivr
stos
imul
insb
jecxz
aad
lret
jmp
psraw
cmp
mov
lahf
push
lods
or
mov
testb
test
imul
sbb
cmp
sub
adcl
movsb
stos
push
loopne
out
sbb
lods
adc
push
push
outsl
inc
jns
mov
inc
nop
inc
pop
xchg
shll
mov
scas
xchg
dec
and
stc
adc
ret
lods
rorb
push
add
and
sub
push
sub
aad
jp
in
aam
or
je
lock
xchg
jne
dec
add
xor
leave
loopne
popf
push
adc
sahf
negb
pop
push
cmc
ret
and
dec
popa
jno
pop
sahf
jne
rcl
add
mov
in
inc
outsb
test
shll
inc
cmp
mov
jnp
popf
cmp
and
decl
push
fimuls
dec
sub
sub
movsl
xchg
xor
mov
add
mov
mov
dec
push
iret
xchg
aaa
lcall
cmp
xchg
cltd
insl
rcrb
jbe
in
xchg
push
push
pushf
rcl
or
cld
cmp
imul
inc
and
fiaddl
xor
sbb
rcl
adc
lret
cmp
insb
rolb
icebp
shlb
daa
insb
fcmovnu
arpl
xor
pop
inc
inc
out
pop
sbbb
push
pusha
jno
dec
lret
outsl
jnp
cli
loopne
pop
jp
mov
push
cmpsl
shlb
adc
mov
ja
mov
and
fiadds
sahf
sub
outsl
test
mov
and
jne
into
lret
mov
fstpt
sbb
dec
subl
aas
mov
fcoml
pop
and
incl
movl
and
cmc
pop
mov
mov
sbb
xor
jb
pop
ret
jbe
xor
mov
sub
jg
dec
fidivl
jg
icebp
lock
iret
nop
sub
mov
sub
add
clc
push
int3
push
dec
out
in
push
sar
mov
push
cs
ret
adc
ljmp
and
clc
das
cs
ret
adc
les
pop
fwait
lcall
mov
inc
jns
loop
push
sti
cli
stc
push
aam
xorb
mov
push
cld
into
shll
lea
lahf
cmp
orl
aad
fldcw
imul
xor
rorb
jl
stc
int
pop
test
mov
jmp
sarb
inc
jge
adc
jp
push
fdivl
mov
test
jno
push
adc
lret
push
test
scas
jp
pusha
enter
push
jne
faddp
addl
loop
notb
and
cmpsb
shlb
sarl
mov
cmp
insb
mov
iret
jmp
sub
pop
or
testb
sub
imul
add
inc
xlat
pop
sub
aaa
push
mov
sub
push
insl
mov
adc
xchg
adc
lea
sub
sahf
outsl
cmp
repnz
fidivs
in
dec
dec
outsl
inc
dec
fdivr
push
pop
or
mov
data16
rcrb
dec
je
leave
xchg
lea
scas
mov
ficoml
pushf
cmp
cwtl
cmpsl
movsb
and
mov
jmp
sbbl
shll
cld
stos
cmpsb
adc
pushf
outsl
out
ds
mov
xchg
loopne
cwtl
sbb
hlt
push
int3
scas
cs
jnp
sub
xchg
fimull
xchg
rorl
aas
add
in
inc
mov
pop
add
testb
incl
mov
push
cmp
fsub
mov
aaa
cs
cld
outsl
testl
xlat
adc
pop
lock
shrl
test
shll
fwait
xor
sub
enter
sbb
gs
fdivrp
insb
rorl
or
push
loope
sti
adc
dec
xor
cmc
cmpsl
imul
loope
cli
mov
mov
cmp
fiadds
shll
insb
push
stos
or
fstpl
mov
push
addl
inc
pop
cmp
push
cs
add
mov
pop
xchg
adc
lods
je
inc
scas
fisubs
inc
adc
icebp
jne
leave
mov
sub
mov
mov
or
mov
lahf
jmp
into
and
cmpb
jge
push
inc
in
inc
cmp
std
cs
hlt
and
xchg
subb
pop
loope
xchg
push
xchg
xchg
mov
add
in
mov
push
in
mov
mov
hlt
js
notl
das
clc
mov
out
sub
repnz
rclb
and
idiv
adc
fs
out
sahf
rcrl
test
sbb
jo
ret
jmp
pop
lods
inc
adc
sub
int3
pop
mov
mov
dec
lock
jmp
inc
rcll
dec
or
lods
ds
sub
add
fcomi
jns
lea
test
dec
je
mov
les
push
xchg
shl
cmpl
cvttps2pi
sub
shrl
ljmp
mov
orl
inc
insl
push
leave
das
lret
push
iret
jmp
leave
mov
roll
lock
cmp
xor
mov
stc
adcl
and
pusha
lods
daa
xor
ds
push
push
jo
lds
push
cmpsb
sub
or
ficompl
sbb
and
xor
jns
jp
mov
mov
outsl
xchg
cltd
mov
fisttps
xor
test
cmp
shrb
dec
dec
insl
je
loopne
mov
inc
mov
sbb
jb
cmc
jbe
mov
xchg
cmp
outsb
push
push
xchg
int3
aam
sbb
repnz
outsl
arpl
stos
in
and
fistl
and
pop
cmpb
cli
je
pop
ss
mov
mov
sub
jecxz
push
movsl
push
adc
push
pop
out
mov
repz
sbb
push
xor
mov
xor
in
stos
mov
out
mov
cmpsb
into
dec
jmp
out
sub
mulb
and
mov
mov
ds
push
popa
outsl
or
sarb
xchg
pop
cmpsb
inc
pop
or
inc
jle
insl
aaa
test
or
jecxz
inc
or
cmp
xorl
pop
mov
mov
inc
daa
les
push
movsb
or
outsb
movl
mov
adc
jp
xlat
ret
mov
mov
jg
push
push
pushf
push
jbe
mov
inc
xor
aad
mov
insl
mov
push
sub
jp
loop
inc
and
dec
jne
sti
mov
add
cmp
out
push
and
jecxz
repz
and
jbe
pop
jnp,pn
push
xor
test
data16
cmc
cmp
adc
inc
ss
sub
push
and
int
cmp
ss
and
shll
mov
mov
jbe
mov
dec
movsb
jne
pop
jl
cmpl
pusha
shll
mov
jge
int3
and
xor
stc
jg
or
push
mov
jl
insb
outsb
lcall
xchg
out
pop
push
test
fidivrs
addr16
mov
mov
jbe
int3
in
loop
aas
mov
mov
xor
movsl
or
jb
js
aad
aam
jecxz
add
fcoms
movsb
jb
xchg
sub
hlt
out
mov
xchg
sbb
and
loopne
es
xchg
jle
mov
fnstenv
jp
add
and
push
in
or
es
pusha
jle
lds
insl
jae
xor
subl
popf
pushf
xor
jne
shll
ljmp
test
or
clc
stos
dec
mov
xor
sti
in
iret
mov
mov
stc
push
adc
repz
push
pop
lcall
xor
dec
pop
pop
xchg
nop
lret
cmc
xchg
and
hlt
lahf
push
movsb
gs
adc
dec
and
repnz
jecxz
jecxz
int3
push
xor
mov
cmp
lds
aas
test
xor
or
out
es
cld
pop
ljmp
shrl
xor
outsb
hlt
mov
stc
cmp
loop
pushf
xchg
aas
inc
adc
pop
mov
pop
adc
leave
repnz
lds
out
fsubl
adcl
imul
popf
sahf
fbstp
cwtl
movsl
out
ljmp
mov
push
jp
cltd
pop
push
push
push
movsb
fwait
push
mov
jns
xchg
fdivl
mov
mov
sbb
ja
mov
and
sbb
je
gs
push
xchg
movb
mov
xchg
popf
or
iret
sbb
clc
nop
sahf
lock
enter
repz
fmull
inc
add
cmp
dec
das
push
cmpsl
pop
lods
xor
add
movsl
jo
push
xchg
sub
ljmp
pop
pop
movsb
dec
jb
adc
es
push
das
pop
pop
frstor
out
aas
dec
dec
rclb
add
addr16
sbb
sbb
aam
stos
xchg
dec
lea
mov
cmpsb
icebp
mov
pushf
mov
adc
xchg
mov
or
push
dec
xchg
and
cmp
xor
ja
push
mov
jb
cmc
in
jmp
xchg
test
dec
inc
sti
arpl
xor
ja
dec
inc
leave
mov
push
lock
xlat
movsb
js
mov
imul
jp
dec
mov
fisubrl
in
test
xchg
in
mov
and
sub
xchg
popf
cmp
test
jno
sbb
or
inc
mov
in
xor
js
pop
mov
mov
xor
scas
or
dec
loope
sbbl
or
fiaddl
inc
or
or
test
inc
int3
pop
inc
sbb
or
iret
cmp
rorb
pop
lods
cmp
mov
into
test
addl
sbb
mov
mov
lahf
test
mov
xchg
popa
xor
stc
negl
dec
shl
dec
and
gs
jl
dec
or
adc
jecxz
imul
mov
frstor
or
adc
in
rolb
jae
mov
repz
pop
add
inc
ss
adc
mov
cld
mov
cltd
bound
jp
cmp
mov
inc
sub
scas
pop
sahf
jp
adc
arpl
clc
adc
bound
push
jb
andl
mov
adc
int3
and
and
or
ss
jne
stc
pushf
mov
ffreep
jnp
ss
pop
jl
xchg
mov
outsl
pop
dec
js
aam
mov
shll
pop
sbb
inc
sbb
mov
test
dec
pop
xor
stos
inc
fisubs
shlb
mov
dec
vmovlpd
sarl
mov
daa
fmul
test
add
pop
scas
jge
add
fiadds
sti
andb
imul
mov
hlt
das
adc
loope
adc
and
or
mov
adc
andl
mov
mov
std
jp
mov
lcall
sahf
das
out
nop
adc
jb
xchg
adc
or
mov
xchg
icebp
cwtd
jb
shlb
dec
jle
in
xchg
cmpsl
imul
pop
es
push
pop
lahf
xlat
je
std
mov
or
adcb
rclb
test
xchg
mov
cwtl
adcl
lock
test
push
leave
cmc
test
cmp
inc
out
sti
insl
in
or
jg
mov
xor
lret
dec
xchg
leave
fldenv
sbb
or
ds
cmp
shl
jmp
sahf
iret
xchg
stos
jns
push
xor
call
inc
test
lret
dec
mov
xchg
movsl
mov
xchg
scas
cmc
test
inc
jbe
add
mov
div
cmp
addr16
ret
loope
gs
add
and
mov
mov
fwait
adc
adcb
fistpll
xor
insl
and
sub
rclb
aas
sbb
inc
pop
inc
and
cmp
mov
pop
cmp
pop
jecxz
popf
dec
jns
pop
mov
xchg
lea
mov
popa
lcall
cwtl
in
pop
pop
std
mov
add
scas
test
out
jno
xchg
push
rcll
daa
imul
adc
repnz
pop
jle
jne
outsb
sahf
xchg
stc
mov
add
cmpsb
mov
lcall
lea
push
js
dec
xchg
mov
push
insb
adc
or
into
push
stc
xor
push
cmpsl
js
fwait
jmp
and
dec
lret
inc
mov
adc
jo
aas
ret
rcr
and
xchg
mov
adc
xor
lret
leave
xchg
les
cmc
mov
push
xchg
ret
js
jne
cmpsl
mov
mov
push
jnp
rorl
cs
pop
test
iret
ret
rcr
cmp
aad
hlt
mov
aaa
pop
lea
ficompl
sbb
enter
lods
inc
sub
stos
lods
lock
test
cmp
aam
mov
and
dec
jg
sub
mov
aad
add
xlat
ret
jge
mov
int3
xor
jl
mov
adc
leave
mov
sahf
test
mov
fdivs
and
and
insb
push
adc
or
repz
adc
data16
pop
dec
or
inc
jo
sub
fildll
add
lds
lock
aad
push
jbe
mov
mov
and
and
push
push
jecxz
xchg
jg
loopne
push
test
xor
push
lock
arpl
mov
hlt
in
mov
inc
lods
sbb
push
mov
fistpl
ja
push
or
mov
bound
fwait
stos
dec
cli
xchg
jne
mov
mov
and
xchg
imul
ljmp
inc
inc
sub
jno
mov
push
sbb
xchg
sbb
into
adc
repnz
mov
mov
xorl
loope
in
add
gs
sbb
sbb
push
outsl
lods
je
insl
imul
fdivrp
push
scas
mov
push
lods
lahf
push
cmpsb
lret
aam
loope
cmp
in
aam
jbe
cmpl
jmp
scas
andb
jl
adc
and
pushf
add
jl
adc
data16
ret
insl
jge
mov
inc
sbb
mov
test
lods
dec
sahf
cs
orb
in
jo
jae
int3
sbb
mov
das
xchg
sub
sub
xchg
xor
sbb
in
pop
add
sub
popf
cmpsb
ds
xchg
stos
cli
out
in
push
iret
lret
fbld
rcrl
cmc
dec
add
icebp
scas
dec
mov
test
xchg
sbbb
lods
mov
cli
rclb
sbb
push
xor
test
sub
dec
xchg
mov
xchg
mov
inc
es
mov
push
jp
and
mov
int3
cmpsl
mov
in
ret
dec
cmp
into
mov
push
inc
shl
repnz
cli
negb
aaa
into
ja
enter
pop
in
sbb
jmp
fs
fsub
pop
mov
stos
and
es
cmp
mov
ud1
test
cli
lahf
inc
mov
vmovq
je
xor
and
or
loopne
insl
loope
dec
or
pop
mov
movsb
jge
icebp
es
notb
mov
je
cmpsl
sbb
das
dec
push
fistpll
jb
lock
ret
lds
or
aam
mov
pop
shlb
jmp
mov
outsb
test
lds
sub
rclb
shlb
add
lret
adcl
popl
aad
push
sbb
fildl
jecxz
inc
imul
jno
mov
sbb
mov
inc
shrb
jmp
popa
pop
fdivs
xchg
pop
lods
xchg
std
adc
jl
adc
mov
je
loop
test
xchg
mov
xor
icebp
imul
icebp
loop
add
xor
or
sub
aaa
dec
jae
push
add
imul
ss
mov
sti
mov
shlb
pop
xor
xor
sub
imul
mov
and
dec
movsb
cmc
jecxz
inc
lahf
adc
hlt
loopne
xor
mov
lds
stc
mov
aaa
inc
cld
test
sub
in
pop
push
repz
mov
and
sarb
sub
sbb
icebp
add
adc
sbb
das
sub
test
jmp
je
ret
mov
inc
sbb
shll
scas
shlb
idivb
sbb
jb
or
or
mov
xor
mov
push
sbb
add
hlt
lds
xor
jne
js
not
movsb
mov
xchg
loop
or
add
sub
loop
dec
push
xor
addr16
clc
sub
ja
inc
sub
in
leave
jns
clc
ljmp
pop
lods
inc
adc
push
and
dec
and
mov
cmp
xlat
jecxz
xor
scas
clc
outsl
add
into
dec
and
cmp
int3
fdivrl
xchg
and
adc
fcomip
jno
sti
and
repnz
jbe
inc
adc
outsl
dec
mov
inc
outsb
fnstenv
xor
mov
idiv
in
xor
into
hlt
dec
push
insl
push
xchg
data16
pop
mov
xchg
cmp
adc
and
mov
jns
sub
xor
rcrl
add
inc
adc
popa
rcl
jecxz
or
pop
xchg
jae
xchg
fcomip
mov
cmp
enter
pop
jge
push
enter
movsl
ljmp
arpl
ret
fdivrl
lahf
jb
add
inc
push
pushf
mov
xchg
mov
loope
test
lock
call
dec
cmp
dec
dec
popl
cmp
dec
mov
or
fisttps
dec
and
inc
pop
mov
jno
mov
jno
push
push
mov
and
dec
fwait
mov
fstpt
push
and
mov
ljmp
xor
mov
mov
and
jl
xor
sahf
lds
shr
adc
insl
ds
inc
in
lds
enter
mov
fists
fwait
std
mulb
mov
fisubl
sub
push
dec
out
or
jg
cltd
xor
adc
mov
loop
sbbb
sbb
aaa
in
jae
andl
adc
test
mov
outsl
adc
out
cld
mov
and
stc
push
cld
daa
mov
lahf
addb
loopne
mov
enter
int3
or
sbb
push
dec
mov
adc
sbb
jmp
movl
or
sbb
pop
pop
and
push
jmp
orb
pop
lock
and
in
cmpsb
push
repz
mov
movsb
repnz
lock
mov
lahf
clc
fadds
mov
jle
dec
bound
xchg
mov
push
gs
sbb
shll
inc
ljmp
pushf
repz
mov
popf
sub
sbb
push
orl
cltd
cmp
dec
or
push
cmp
mov
in
outsl
sahf
pop
or
xor
dec
sub
adc
jge
mov
jle
mov
ss
mov
sub
jbe
daa
add
lods
nop
xor
xchg
jbe
xchg
xor
or
xlat
mov
pushw
scas
jbe
adc
test
cmovbe
int3
das
pop
into
js
or
sub
adc
inc
and
std
cltd
shr
dec
or
outsb
dec
fistl
xchg
ja
scas
mov
out
insl
add
cltd
mov
mov
mov
shrl
mov
sbb
das
loopne
pop
stos
popf
jno
stc
imul
adc
enter
inc
sub
jecxz
xchg
into
mov
lock
js
jne
xor
in
test
int
jl
and
cli
xchg
movsl
xchg
aad
das
lcall
add
xlat
or
xor
lcall
test
stc
es
xchg
push
ss
clc
fs
and
and
sbbb
push
int
in
fisubs
mov
cmp
ja
push
rorl
outsl
shrb
pusha
pushf
and
out
inc
push
pop
call
pop
rcll
cmpb
repz
jo
and
xor
inc
push
xchg
movsb
aas
pop
fdivrs
aas
nop
ret
pop
sub
mov
sub
movsb
pop
lods
and
mov
fsts
into
ficompl
dec
aas
test
shlb
mov
std
or
lret
fsts
mov
test
jno
cs
flds
int3
inc
push
adc
and
and
and
test
cmp
enter
rcrb
adc
push
xor
into
jp
add
jno
lock
mov
fisttpll
jp
cmp
clc
test
int
and
jl
add
roll
cmp
push
ret
mov
cmp
sahf
test
icebp
clc
rcr
mov
mov
or
sbb
leave
jmp
iret
call
movsl
jle
xchg
aas
push
popa
popa
mov
dec
movsb
adc
clc
and
inc
pop
jns
pop
dec
imul
repnz
les
hlt
add
dec
sub
jb
test
pusha
inc
divb
or
jle
es
ss
idivl
repz
push
xchg
lds
mov
fcomps
test
sbb
test
mov
out
test
mov
scas
icebp
subl
add
loope
out
fsubs
aas
repz
sub
loop
or
gs
cmp
aaa
bound
inc
out
push
pop
and
pop
or
int3
sub
mov
push
popa
push
add
and
inc
xchg
inc
nop
lret
adc
or
jp
repz
jns
jmp
lcall
pop
es
addr16
gs
mov
and
daa
jmp
push
jnp
pushf
std
test
lcall
int3
xchg
xchg
test
push
imull
shl
cmp
and
xor
std
adc
xchg
cld
jno
dec
ret
sahf
adc
mov
mov
test
int3
mov
stos
pop
adc
pop
mov
xor
fwait
hlt
sub
adc
aad
js
inc
out
push
inc
fcos
gs
add
xor
push
and
loop
cmp
or
push
int3
call
xchg
push
xor
mov
cld
mov
cli
sbbb
inc
push
inc
scas
add
shl
sahf
mov
add
loop
neg
xor
mov
adc
and
enter
add
jno
mov
in
stos
mov
insb
sti
cmp
ret
adc
cmpsl
repz
and
inc
sub
add
or
cmp
imull
mov
pop
fldcw
dec
scas
imul
sbb
dec
fdivs
jg
shrb
mov
mov
out
mov
cmp
jne
out
xchg
xor
xor
popa
mov
test
xchg
dec
outsl
jb
mov
jns
pop
pop
in
xor
gs
adc
add
iret
fdiv
mov
leave
sub
repz
push
xchg
push
ds
scas
mov
push
leave
call
ret
and
mov
hlt
jg
mov
cmp
jecxz
lods
fdivl
repnz
stc
mov
icebp
repnz
push
xchg
mov
pop
mov
xor
les
xchg
mov
cmp
xchg
arpl
mov
xchg
adc
repz
xor
aas
rcr
js
mov
stc
hlt
aaa
sahf
sub
xchg
cmpl
xlat
in
jle
and
push
mov
outsb
dec
dec
mov
jg
fcomps
sahf
xor
sbb
mov
imul
cmp
pop
in
icebp
jns
dec
ficompl
jnp
int
insb
insl
push
shl
or
out
ljmp
aaa
and
fbstp
hlt
dec
insb
leave
daa
push
in
std
mov
mov
dec
xor
mov
loop
push
or
inc
inc
popf
outsl
inc
popf
add
add
push
in
mov
repz
mov
pop
pop
and
ret
xchg
lock
fsubl
pusha
adc
push
jmp
pop
loope
add
and
out
aas
sti
je
push
rcr
cmp
mov
mov
cwtl
repz
dec
mov
nop
dec
decb
mov
adc
add
dec
fisttpl
mov
or
push
mov
stos
lret
mov
dec
sub
dec
addb
out
sahf
and
jmp
dec
aaa
sub
jmp
psubsw
xchg
jns
mov
cwtl
jb
mov
xchg
insl
loop
or
in
lcall
dec
fbld
aad
rorl
pop
aas
pop
ret
mov
movb
jne
push
and
lret
sar
fstpt
push
inc
ljmp
std
adc
or
ss
pop
pop
mov
das
leave
inc
mov
mov
test
mov
lds
push
push
xchg
in
sbb
je
je
das
outsb
cmp
push
rolb
mov
push
and
jo
sbb
rcrb
sub
mov
inc
dec
push
push
sbb
mov
lock
dec
jle
jno
cltd
push
cwtl
jne
cmp
pusha
loope
ror
dec
out
fistps
mov
push
lahf
mov
xchg
jb
jge
int
and
lret
and
push
jnp
xchg
xchg
push
mov
mov
mov
repz
stos
dec
xor
shlb
xor
leave
ds
lret
push
sub
sub
pop
sbb
jge
mov
out
cmp
imul
mov
jne
lods
fidivl
and
xchg
inc
jmp
jae
js
sbb
mov
int3
frstpm(287
cmpsb
stc
adc
cmp
int3
fs
cmc
fbstp
and
clc
je
lods
out
icebp
jb
push
mov
mov
xor
or
fmuls
fwait
scas
in
ror
pop
ss
shr
push
xor
add
stos
xchg
mov
mov
arpl
jge
fsub
jmp
and
call
stos
xchg
add
add
pop
and
loope
push
mov
imul
outsb
mov
mov
cmp
filds
dec
add
repnz
xchg
repnz
mov
xlat
mov
mov
mov
pop
shl
or
inc
push
push
daa
cmp
cmp
aad
cwtl
rcrb
pop
frstor
push
pushw
test
test
pop
dec
dec
push
loope
push
push
jle
stc
or
fs
xlat
pop
into
jno
aam
xchg
xlat
mov
adc
out
loopew
mov
mov
dec
lods
iret
sbb
in
sub
pop
mov
in
mov
js
mov
adc
lods
mov
ds
fdivs
repz
mov
aaa
lock
mov
das
shll
adcb
mov
or
jnp
movsb
outsl
aas
sbb
mov
inc
sub
inc
loopne
push
adc
push
pusha
stos
inc
adc
lcall
push
jae
mov
mov
in
pop
cmpsl
mov
mov
xchg
lahf
js
inc
jne
sti
repz
aaa
dec
outsb
nop
lds
cmp
push
mov
jb
iret
call
inc
mov
mov
test
pop
inc
inc
inc
addr16
and
inc
and
pusha
and
sub
in
push
dec
sbb
lret
cli
xchg
je
dec
xchg
mov
push
into
iret
cmp
mov
int
test
scas
inc
pop
pop
arpl
out
rcrl
xchg
xchg
xor
lds
shlb
mov
sti
jo
sbb
mov
fsubrl
mov
or
inc
xor
stc
push
adc
sbb
mov
stc
mov
mov
ja
icebp
mov
cld
jo
fists
test
mov
ds
fidivl
fistpll
adc
mov
xor
adc
or
xor
std
push
xorb
dec
mov
cmpsl
xor
sahf
mov
addl
or
fidivrl
mov
mov
inc
movsb
mov
pusha
ret
les
push
xor
stc
outsl
mov
ror
test
jae
bound
adcl
push
das
nop
shl
inc
push
push
out
insl
add
and
add
dec
jnp
jbe
mov
xor
mov
cmp
xor
subl
add
mov
inc
xor
mov
scas
and
pusha
out
xchg
fisttpl
sbb
rolb
jmp
lock
scas
pop
es
fwait
iret
das
mov
or
imul
aad
sbb
push
mov
xchg
adc
rcrb
lock
cmp
nop
pop
and
sbb
adc
stos
repz
dec
stos
loope
jae
xor
popa
nop
cmpsb
movsb
pop
xchg
xor
test
testl
and
pop
outsl
movsl
xorl
aas
dec
adc
mov
stos
inc
xchg
sub
outsb
popa
mov
outsb
jmp
test
add
xor
mov
sbb
inc
xchg
adc
ja
dec
sbb
jb
and
jmp
adc
jg
movsb
repnz
je
rdpmc
loope
xchg
lcall
jecxz
push
jbe
int3
mov
sbb
jnp
adc
lcall
xchg
xchg
inc
cmpl
icebp
xor
push
cmp
je
mov
and
out
sarl
xchg
flds
or
sahf
cmp
sti
and
loop
mov
add
fnstenv
inc
icebp
jns
imul
mov
pushf
movsl
and
popf
dec
mull
and
adc
std
dec
movsl
je
lret
sbb
aam
cmp
jbe
int
mov
jp
ret
aam
cmp
aas
push
jnp
ficomps
push
test
mov
pop
xchg
inc
xchg
lods
stc
inc
inc
add
aam
and
test
std
shl
scas
cmp
lret
or
cmp
roll
add
repz
pop
nop
sbb
mov
rorb
push
insb
jl
test
inc
pop
ret
mov
jne
push
cwtl
mov
xchg
repz
mov
test
push
and
or
jnp
sub
fistpll
pop
rorb
xor
xor
test
and
mov
sub
mov
xor
leave
fs
pop
xor
cltd
stc
jae
loopne
sbb
jbe
loopne
or
subb
cmp
dec
nop
jg
pop
and
mov
pushf
push
xor
xor
std
std
int3
dec
lret
lea
mov
test
out
lods
push
mov
in
enter
sub
add
sbb
enter
aad
inc
outsb
cmp
pop
ja
lock
cld
xchg
lods
mov
adc
out
push
lock
mov
lahf
fisubl
fcmovne
cltd
inc
mov
fnsave
and
push
add
mov
and
pushf
or
test
fs
in
mov
push
xchg
mov
jno
ja
jne
jb
sbb
sub
sbbb
xor
add
std
insb
mov
imul
or
push
in
loope
hlt
daa
and
add
jmp
movsb
pop
pop
sar
fisubrs
sbb
shlb
mov
fstpl
sbb
decl
inc
and
outsb
mov
xchg
dec
and
aas
push
mov
mov
fsts
pushf
leave
push
push
mov
xor
mov
outsb
iret
mov
inc
push
aam
stos
orb
sub
test
outsl
test
ror
xchg
mov
mov
jle
rorl
mov
insb
push
jmp
sub
xchg
data16
or
cmc
and
mov
mov
data16
mov
mov
inc
test
loope
loope
and
dec
xchg
cli
cmpsb
push
inc
test
hlt
jae
loope
sahf
jbe
ret
or
addl
ljmp
dec
dec
jp
popf
fimuls
inc
push
and
adc
jnp
testl
jle
leave
xor
adc
repz
xor
mov
mov
bound
dec
mov
sbb
mov
mov
xor
cltd
cli
mov
aas
push
push
clc
sahf
mov
dec
mov
push
fildl
push
xor
xor
loopne
fsub
add
outsb
mov
dec
and
addr16
dec
sub
dec
push
test
sub
mov
cmpsl
xor
and
adc
imul
repz
faddl
popf
adc
push
jle
push
bound
cs
and
int
flds
jne
sahf
test
test
jb
mov
sbb
out
int3
add
mov
cmp
inc
movsb
and
aad
imul
sub
les
cmp
mov
rcrb
adc
enter
pop
imul
loopne
xlat
xor
mov
mov
pop
pusha
mov
lods
pop
pop
cwtl
and
andl
das
mov
mov
jae
out
cltd
icebp
bnd
stos
mov
addr16
inc
mov
fwait
jbe
jo
mov
cmp
ret
shr
push
mov
sbb
stc
fbstp
mov
inc
loopne
sbb
in
sub
pop
lret
cltd
repnz
dec
sti
js
adc
sbb
mov
mov
icebp
shl
sbb
mov
in
mov
imul
xchg
xor
adc
xchg
fdivrs
pop
and
and
test
sub
inc
dec
push
push
inc
mov
xchg
fists
gs
push
xchg
or
pop
pop
sub
xchg
mov
insl
sub
mov
dec
push
ja
insb
in
sbb
xor
in
xor
out
aas
jne,pt
add
cli
sti
adc
xchg
stc
lods
hlt
ds
push
mov
inc
fnstcw
sub
in
inc
xor
mov
andl
cmp
insl
cmp
ret
data16
inc
bound
pusha
aas
nop
push
mov
mov
scas
out
pop
pushf
mov
or
mov
int
inc
push
ja
fsubrs
xor
fldcw
cmpsb
mov
mov
mov
pop
dec
inc
fs
pop
ret
test
test
push
shrb
and
mov
enter
xor
xchg
dec
test
xor
in
dec
aad
insb
push
inc
sbb
xchg
cli
int3
daa
rcrb
xlat
xor
fcoms
shl
or
xor
sar
dec
ja
or
ret
lret
cmp
inc
fwait
add
imul
jbe
insb
jmp
sub
repnz
ljmp
jne
out
call
cmp
repnz
mov
ret
add
dec
loop
jns
into
arpl
movsl
sub
adc
jle
bswap
inc
adc
cmpsl
pop
cmp
loope
insb
dec
push
addb
mov
xchg
je
into
lock
fsubr
out
es
add
push
imul
rcrb
cli
js
xor
sbb
jle
pop
mov
ja
insl
out
mov
mov
cld
or
push
push
stos
scas
jb
xchg
fdivr
in
xchg
je
pop
adc
inc
cwtl
mov
cld
lea
xor
loop
incb
and
addl
xchg
add
push
mov
dec
iret
pop
xor
in
arpl
loope
insl
movb
xchg
dec
in
mov
testl
cmp
or
sbb
test
repnz
push
adc
dec
push
push
aam
mov
loop
and
jl
push
inc
xor
into
jno
insb
insl
nop
xchg
cmp
scas
push
popf
adc
jl
sbb
jle
arpl
push
sub
in
sub
cli
mov
cmpsl
aam
cwtl
mov
clc
adc
popa
mov
out
fmuls
ret
pop
das
je
xchg
adc
in
jno
adc
idivb
int
into
sti
je
flds
outsl
shrb
cmc
in
rol
push
aad
clc
fdivs
add
mov
fnsave
lret
push
or
fldcw
push
adc
inc
js
cld
in
mov
insl
adc
int
mov
inc
push
cmp
hlt
pop
loope
add
sub
pusha
push
mov
xlat
inc
outsb
dec
and
test
es
dec
mov
xor
xor
vorpd
pop
mov
mov
xchg
adc
lds
and
xor
inc
xor
fisttpl
repz
leave
mov
adcl
loope
ss
lahf
notl
jl
push
inc
jb
pop
jle
sti
adc
xchg
and
insb
mov
and
popf
int
xor
jecxz
fldcw
pop
sbb
mov
add
mov
push
mov
test
nop
push
jnp
ds
cmp
or
stos
or
and
push
mov
out
sub
idiv
cmp
inc
xor
stos
cld
scas
cmp
cmp
pop
rcll
fdivrs
cmp
xor
lret
mov
ja
jbe
mov
mov
jno
popf
fnstcw
lods
adc
movsb
mov
insl
or
sbb
mov
add
fdivr
and
sub
dec
mov
mov
mov
inc
push
sbb
pusha
jae
loop
cltd
xchg
add
mov
cmpsb
mov
pop
and
orl
iret
add
mov
adcl
fs
push
stc
stos
adc
sbb
jl
ret
mov
jbe
push
addb
int
arpl
mov
inc
cmpsb
mov
outsl
popf
pop
les
in
xlat
mov
dec
sbbb
push
lret
jl
jns
aad
das
testb
xor
and
repnz
dec
push
inc
inc
mov
mov
cltd
stos
jp
cwtl
lods
leave
jo
arpl
dec
lds
aaa
cmpl
test
pop
mov
push
iret
cld
sub
cli
shrl
out
lds
enter
int
mov
repz
out
bound
sub
xlat
sar
sub
sbbb
outsl
dec
dec
jnp
scas
mov
adc
mov
mov
imul
pop
lods
popa
inc
scas
loop
sub
pushf
dec
dec
sti
sub
cmp
dec
pop
and
imul
pushf
pop
cli
test
lods
mov
aam
push
jecxz
ret
xlat
sbb
sahf
enter
sti
in
bswap
or
rol
jl
xchg
fs
out
sbb
sub
sub
subb
add
add
cmpsb
inc
imul
mov
shrb
test
data16
jmp
push
loop
inc
fwait
mov
adc
nop
std
mov
rcrl
psubusw
mov
and
insl
filds
sub
sbb
test
cmp
mov
jp
add
push
jbe
mov
leave
adc
std
and
enter
icebp
jp
jl
sbb
repz
aaa
stc
pop
shll
push
sarb
mov
negb
add
rcr
cmpsl
sahf
sbbl
adc
mull
sub
or
aas
jl
jg
repnz
mov
adc
push
mov
mov
aad
js
iret
ret
bound
rcrb
add
push
push
and
cmp
lock
dec
aam
cmp
push
adcb
jno
mov
sbb
adc
xchg
cmp
xchg
or
add
dec
loope
and
fisubl
pop
xor
jmp
fmul
lret
out
push
imulb
fadd
cmp
mov
ffreep
mull
call
xor
mov
push
ret
fistl
scas
mov
xor
xchg
pushf
ljmp
addb
loope
or
stos
test
add
jns
xchg
or
inc
fistpl
cmp
dec
es
fcompl
data16
jo
mov
xchg
inc
push
jl
fwait
mov
lret
jnp
outsl
bound
add
xchg
adc
inc
jbe
or
sbb
into
lret
xchg
mov
xor
cmp
dec
pop
mov
bound
cmp
sbb
inc
loopne
lret
mov
adc
test
lds
push
mov
and
mov
cmp
lods
scas
subb
sbb
data16
sub
call
jne
pop
into
adc
arpl
mov
lods
adc
aam
clc
lcall
push
sub
pop
mov
mov
pusha
mov
testb
imul
lds
imul
lods
xor
or
mov
cs
or
dec
popf
and
std
test
mov
sbb
xor
and
dec
xchg
cmpsb
in
jbe
out
push
js
mov
lods
andl
daa
mov
dec
aaa
dec
in
jns
mov
ljmp
push
je
mov
shrl
pop
inc
lods
or
cmpsb
jno
cmp
incb
push
xchg
inc
insb
icebp
leave
mov
adc
test
in
jle
sub
or
sub
pop
jo
mov
lret
lock
mov
mov
js
out
cmp
testb
xor
fcompl
xchg
xchg
mov
faddl
pop
ja
pop
sub
dec
int3
adc
loopne
xchg
jge
lock
mov
jmp
std
pop
mov
mov
mov
jnp
ret
int3
stos
aad
or
add
mov
loop
add
cmpsl
push
addr16
or
scas
inc
pop
mov
addr16
jl
xor
sbb
jb
ret
push
test
sbb
push
push
ret
addr16
int
jmp
in
cmp
and
out
inc
inc
aad
push
mov
add
mov
sbb
sbb
mov
ja
lret
lcall
ror
cmp
gs
dec
cld
pop
lds
shrl
adc
shll
push
mov
movsb
mov
mov
hlt
out
roll
lretw
pop
popa
push
inc
add
push
xor
inc
add
jmp
push
daa
popa
aam
inc
sub
orl
cmp
fidivrs
xchg
inc
or
inc
cmp
mov
inc
mov
js
or
lret
test
xor
mov
jnp
out
lds
fmuls
je
sbb
or
mov
test
mov
lret
mov
push
int
adc
mov
or
out
lock
hlt
popw
inc
jae
divl
mov
fstl
in
adcb
mov
mov
push
sbb
ja
pop
sub
aam
or
pop
shl
ret
adc
dec
mov
or
sbb
addr16
xchg
mov
in
in
cmp
dec
dec
mov
outsl
cmc
inc
mov
cmp
enter
and
inc
jge
arpl
cmp
fimull
push
xchg
aam
adc
jmp
mov
mov
data16
mov
dec
xor
das
jne
fnstsw
insb
hlt
outsb
out
scas
psadbw
cmp
mov
xor
xchg
shrb
xchg
mov
lahf
mov
and
insb
pusha
ret
test
adc
jmp
or
mov
cmp
mov
xor
scas
mov
aad
mov
fisubs
sar
sti
pop
sub
sbb
jns
scas
sbb
xchg
scas
push
dec
sub
aaa
mov
xlat
test
lcall
push
das
push
push
loop
and
lds
notl
cmp
and
inc
inc
out
mov
push
addl
xchg
add
mov
add
shlb
sbb
adcb
cmp
rcl
enter
xchg
jb
mov
jmp
add
sub
sub
add
fistpll
call
jns
stos
pop
mov
loope
ss
fistl
repnz
mov
xchg
orl
jne
dec
cld
shlb
nop
sti
jg
imul
aam
in
mov
jl
ficompl
cli
mov
sarb
out
or
mov
and
or
fcmovnu
adcl
xor
hlt
sub
ds
sub
jne
inc
out
and
push
lcall
js
dec
lods
int
sarl
inc
jb
jo
xorl
push
push
in
bound
mov
cwtl
cmpsb
ljmp
xchg
jl
jg
in
adc
push
fidivrl
outsb
mov
repnz
push
sbb
decb
pop
or
adcl
mov
dec
mov
dec
out
jmp
imul
sti
cltd
cmp
and
fstps
arpl
sub
adc
add
clc
push
and
in
ret
lcall
cmpsb
jmp
mov
xchg
lret
js
adc
jp
pop
iret
movsl
jle
xor
add
mov
xor
adc
mov
daa
lods
lock
sbb
cwtl
sub
sub
adc
and
sub
cmc
hlt
xchg
orb
insl
add
push
sub
call
or
dec
push
pop
push
pop
mov
sbb
js
inc
fimuls
lock
es
fadds
shl
jns
adc
add
push
lcall
add
mul
popa
xlat
xor
movsl
popa
leave
int3
xor
daa
in
dec
cmp
lcall
gs
data16
sub
fldt
clc
cmp
inc
jge
and
pop
pop
xor
fmuls
addr16
mov
inc
push
ljmp
xchg
in
mov
out
fisttpll
dec
add
jnp
iret
xor
pop
loop
mov
xor
add
insb
fisubl
mov
sub
aaa
pop
and
cld
or
gs
xor
jb
xchg
jge
pop
lret
dec
mov
push
sarl
inc
rcll
sbb
xchg
pushf
dec
xchg
ret
arpl
mov
out
pop
push
rclb
jbe
ss
stos
ja
xlat
out
sub
iret
sub
daa
dec
mov
repz
sub
push
jecxz
lods
rcrl
dec
xorb
jnp
dec
aad
add
cli
dec
push
sub
call
addb
inc
outsl
outsb
and
inc
icebp
xchg
ja
cmp
out
and
pmaddwd
sub
cmp
scas
mov
jmp
lret
cmpsb
xchg
and
dec
add
into
mov
xor
inc
mov
sbb
je
add
mov
lahf
push
lea
inc
dec
pop
jl
sbb
or
mov
xchg
mov
out
jbe
adc
cmp
inc
mov
outsl
and
xor
rcrb
sbb
repnz
mov
andb
fsts
mov
cmpsl
xchg
lret
inc
int3
sub
sbb
sbb
add
xor
adc
data16
cmp
fisttps
adc
test
adc
mov
mov
in
ret
out
movsl
lahf
nop
movsb
mov
mov
shlb
aam
adc
imul
cmp
jb
xchg
pop
mov
inc
mov
lods
ret
mov
jle
mov
dec
sub
ja
and
notb
dec
cmp
xor
xchg
fimuls
pop
cmpsl
mov
iret
rorl
insb
xor
daa
outsb
or
lock
sub
stos
lcall
pop
in
mov
jge
adcb
shlb
fsubs
stc
xchg
ficoml
popa
or
je
sbb
push
aaa
xchg
popa
jnp
and
sub
out
inc
orl
or
sub
adc
pusha
xor
insl
sub
pop
and
lods
fwait
adc
add
adc
popf
mov
dec
insl
mov
mov
ds
jne
jmp
pop
inc
mov
das
adc
in
pop
out
and
sahf
mov
cld
aaa
sub
lret
fmulp
and
pop
jns
jbe
mov
mov
popf
cmp
jb
loopne
in
pop
or
sahf
repnz
xor
je
cmp
and
cltd
fdivl
add
mov
aaa
jae
fbstp
sbb
jge
mov
xchg
pop
fbstp
inc
sbb
push
enterw
adc
xchg
imul
xchg
mov
cmpsb
daa
jecxz
push
push
pop
sbb
jbe
mov
rol
xor
js
push
aaa
les
jmp
pop
dec
pop
dec
nop
mov
ficomps
cld
jo
push
out
rorl
nop
ret
xor
rcll
aam
test
jb
cld
xor
cmp
std
cmp
es
jg
pop
adc
cmp
inc
pusha
daa
pop
pop
pop
pop
lock
add
or
push
sub
loop
xor
and
xor
dec
xor
mov
aam
scas
sub
add
divl
xchg
mov
mov
push
or
test
mov
xchg
adcb
loop
out
inc
inc
jne
pop
lret
jno
sbb
jo
shrb
nop
dec
lods
or
cmc
std
fdivs
xor
push
insb
push
sub
sbb
jge
xchg
in
lods
ret
movsb
adc
push
movsb
and
aas
cmp
adc
jns
stc
cmp
adc
inc
cmp
rorb
xor
adc
mov
xchg
gs
mov
int3
movsb
imulb
add
sbb
cmp
gs
scas
repnz
inc
bsf
adc
xchg
pop
in
call
mov
or
cmpsb
mov
lret
frstor
inc
xchg
pushf
mov
inc
and
mov
fisubrl
mov
adcb
push
jecxz
movsb
pushf
mov
and
cmp
lahf
mov
out
push
push
or
push
sbb
dec
mov
outsb
call
fsubrs
xor
jno
push
fcomps
fdivrl
test
dec
mov
push
lods
cwtl
jne
stos
mov
insb
and
xchg
or
ja
mov
jg
test
std
and
pop
loope
lods
or
jle
mov
shrl
insb
dec
imul
push
jae
scas
int
rsqrtps
stos
leave
out
cmc
dec
lret
mov
jge
xorl
push
jb
shl
sbb
sub
push
movsl
loop
xor
xor
xor
repnz
add
aad
stos
xchg
sbb
sub
rcrl
push
into
inc
cli
jbe
adc
lods
addb
pusha
inc
movsl
and
jecxz
hlt
push
inc
mov
xor
int
mov
fwait
lcall
enter
bound
loope
or
mov
xchg
out
mov
pop
out
rorl
or
push
or
and
cmp
enter
mov
mov
sbb
mov
sarl
movsb
lock
cmp
sbb
mov
xchg
je
bound
movsl
and
mov
imul
lea
mov
fidivl
insb
push
xchg
sbbb
cld
jle
and
mov
iret
insb
movsb
xchg
sub
test
daa
adc
je
out
jno
fsubrl
fdivs
add
sbb
sub
jle
jl
push
xor
outsb
push
call
adc
add
pop
inc
inc
mov
inc
pop
popf
pop
popf
je
mov
outsb
rorl
scas
mov
lret
jno
push
pop
lcall
push
test
out
ja
and
push
jge
loop
adc
xchg
mov
pop
lds
out
jp
leave
loope
test
loop
cli
mov
xchg
cmp
and
inc
jle
push
cwtl
fisubl
lea
cltd
stos
xor
inc
add
pop
xchg
fs
aad
mov
dec
scas
sahf
xchg
call
xchg
ja
adc
hlt
js
out
ss
add
ss
les
in
rolb
jne
mov
lahf
push
push
mov
add
inc
outsl
cwtl
inc
jle
lahf
scas
push
xchg
and
and
push
mov
jg
pop
jg
pop
outsb
cli
in
bound
enterw
sub
and
test
jle
sbb
mov
fbld
sti
ds
pusha
sbb
xchg
sbb
jbe
outsb
mov
inc
cmpsb
jno
dec
popf
mov
scas
clc
and
icebp
xchg
pop
jae
imul
xchg
dec
lods
jo,pn
dec
jnp
clc
push
jp
test
inc
cs
jb
xlat
xchg
adc
mov
pop
fadds
scas
and
push
and
pop
mov
lea
imul
adc
divb
addr16
sub
mov
adc
out
rorb
xor
add
inc
sub
dec
dec
and
cs
imul
mov
adc
cli
push
and
mov
jl
xchg
daa
jne
add
aas
ja
push
stc
int
adc
clc
sbb
and
call
mov
push
cmp
cmpsb
pop
pop
fildl
nop
mov
out
aaa
sub
adc
mov
imul
outsl
pop
jo
out
aaa
out
outsb
loopne
xchg
push
cwtl
xchg
adc
outsb
jb
movsl
and
daa
lret
xor
add
mov
pushf
jp
hlt
xchg
enter
or
movsl
xor
xchg
xlat
jno
cmp
sbb
fdivr
repnz
sarb
dec
xor
jg
in
ret
and
call
sbb
ret
xchg
es
adc
js
mov
xor
test
jne
dec
pop
fidivs
movw
and
into
cmp
int
subl
ret
lcall
mov
aaa
mov
push
test
addl
push
dec
xchg
jb
sub
arpl
sub
sbb
lods
cli
mov
or
mov
add
movsl
push
test
add
inc
testb
dec
mov
jb
fsts
jle
mov
icebp
lea
cltd
mov
add
fmul
inc
nop
hlt
xor
in
dec
imul
mov
inc
call
pushf
and
mov
jo
jle,pt
push
xchg
loopne
pop
fmulp
mov
je
stos
icebp
loopne
mov
mov
dec
aaa
push
jp
clc
xchg
add
jg
nop
push
dec
mov
mov
pop
ja
mov
pop
xchg
ljmp
push
lret
sub
cmpl
sub
call
dec
inc
shll
jmp
int3
inc
arpl
in
pop
ss
imul
inc
pop
fdivp
cs
lcall
leave
insl
int3
sbb
aaa
rcr
mov
leave
or
add
and
sarb
and
mov
inc
adc
je
or
ret
std
lea
mov
mov
add
in
hlt
out
fsubl
pop
mov
std
mov
cltd
mov
jne
sub
sbb
push
push
sbb
adc
inc
fsubs
int3
popf
cmp
subl
loopne
sub
jb
xor
nop
ljmp
cmc
adc
xchg
pop
or
cli
pop
pop
push
or
aaa
cwtl
xchg
loopne
adc
inc
xchg
daa
repz
cltd
ds
pusha
sub
lahf
inc
inc
out
mov
sub
lcall
mov
or
cmp
xchg
scas
in
xlat
pop
movl
dec
outsl
push
xlat
pusha
or
inc
xchg
sbb
adc
test
push
ljmp
sub
shlb
lcall
repnz
scas
rorl
pop
sbb
mov
inc
jg
test
sbb
jo
lds
jge
es
sub
adc
lods
das
push
addb
in
or
push
push
xchg
and
cmp
cmpsl
in
xchg
or
sub
fsts
sub
clc
stos
mov
mov
jl
inc
push
data16
in
push
cmpsb
loop
pop
insb
mov
bound
xor
popa
mov
pop
rorb
xchg
imul
cmp
sbb
scas
subb
xor
lret
mov
cmpsl
pop
cli
fldt
lret
jno
sbb
shrl
pop
ja
popa
sbb
test
je
pop
cmp
rolb
mov
jno
sbb
xchg
test
xchg
xor
sti
pushf
imull
ss
lods
or
in
mov
xchg
imull
mov
dec
loop
out
stos
bound
cs
cmp
cmp
push
adc
lret
repz
hlt
pop
pop
loop
arpl
fcmovne
sbb
pushf
adc
sub
icebp
sbbl
cmp
imul
ds
ret
out
fucomip
into
cmpsb
xchg
out
int
cltd
jmp
mov
inc
xor
gs
leave
fildll
cmpsb
shll
push
repz
in
xlat
and
dec
rcrl
mov
cmpb
arpl
cwtl
xchg
rcrl
arpl
iret
loopne
ret
cmc
mov
mov
or
add
xor
subb
push
add
sti
stos
sbb
or
push
pop
pop
fidivl
xchg
push
clc
sub
xchg
lods
int
xchg
inc
lret
or
and
sbb
jmp
sahf
dec
dec
jecxz
aas
pop
jg
shll
and
cmpsl
cli
jp
nop
jge
or
xor
cmp
int
fwait
hlt
es
and
sbb
test
or
cmp
mov
leave
xor
lret
out
int
insb
std
cmpsl
fidivs
push
in
sarl
sbb
push
pop
ja
movsl
mov
jb
xchg
inc
rcr
mov
test
setle
push
push
scas
scas
inc
mov
push
lds
mov
jmp
int3
idivb
imul
add
lock
imul
inc
or
lods
cld
fiaddl
mov
push
fistpll
roll
aas
mov
stos
nop
jp
xchg
mov
das
sub
aas
scas
popf
jno
lcall
ss
cmp
mov
adc
add
jae
mov
sbb
add
mov
sbb
xchg
fwait
mov
push
js
sbb
es
sbb
jb
jmp
cmp
mov
inc
or
add
inc
ret
sarl
stos
adc
mov
cmpsb
add
dec
int3
jmp
pop
andl
push
pop
inc
jne
int
pusha
popf
jnp
movsb
mov
pop
xlat
xlat
inc
dec
lea
push
into
negb
arpl
lret
xlat
fcomi
xchg
sub
sbb
popa
andb
lahf
add
push
fmulp
js
sbb
out
push
add
xchg
leave
pop
test
sarb
pop
xchg
inc
and
jecxz
jg
ficomps
adc
and
mov
sbb
test
leave
sbb
jnp
in
mov
pop
addr16
pop
cmp
xchg
jb
xor
jne
inc
jno
test
push
lds
lods
xchg
sub
out
popa
pop
fisubs
jg
clc
enter
in
mov
mov
enterw
leave
mov
out
adc
andb
notl
xchg
daa
sub
cltd
push
lods
repnz
lds
lods
int
pop
sbbb
mov
out
and
scas
or
push
gs
outsl
push
les
loope
fimull
jno
movsl
repnz
jge
fs
jae
mov
mov
addr16
in
xchg
mov
dec
jecxz
arpl
pop
sub
dec
mov
fildl
lds
mov
out
jae
sub
xor
daa
xor
xor
shlb
repnz
cmp
repz
cmp
out
cmpsb
pusha
or
push
dec
insb
or
push
sbbb
ja
iret
shll
lcall
sbb
call
add
nop
ja
call
pusha
dec
push
and
mov
or
inc
sub
xor
xchg
cltd
out
cmp
scas
mov
fstps
fwait
sbb
into
xor
psrld
into
adcb
imul
cmc
mov
dec
imul
sub
in
repz
jmp
aam
inc
insl
out
popa
jb
adc
adc
out
cmp
ret
push
fsubrs
pop
pop
mov
push
xchg
mov
shlb
scas
stos
cmpsb
push
sarb
fists
adc
mov
repz
sahf
aaa
mov
cmp
sub
shrb
jge
cltd
ljmp
jle
cmc
and
stc
es
pop
movsb
xor
mov
aas
stc
jnp
and
mov
push
sub
mov
call
dec
imul
push
or
mov
add
ficompl
ja
jno
mov
je
pop
fs
jo
fwait
cmpsl
pop
repnz
test
pusha
loopne
fisttpll
push
rol
pop
pop
sbb
mov
outsl
es
std
or
ficoms
jl
pop
imul
and
aad
pop
call
dec
cwtl
rclb
sub
fxch
stos
ljmp
add
mov
push
imul
sbb
cmp
stos
insb
jno
repz
xchg
mov
pop
in
or
cmpl
subb
mov
orl
push
lock
mov
icebp
dec
pop
dec
push
cmp
mov
push
daa
rcll
sbb
inc
aas
adc
push
xor
jge
pusha
mov
and
stos
out
xchg
in
inc
enter
insb
aad
mov
in
adc
mov
aaa
or
inc
and
stos
and
fstpl
xchg
mov
xchg
es
testb
jmp
add
loop
cltd
push
sub
es
negl
cmpsb
add
cmp
dec
mov
mov
fwait
in
mov
popl
pop
stos
pop
stc
mov
ret
push
ds
leave
mov
fwait
jae
int
jno
xlat
aaa
in
fcomp
dec
mov
xor
dec
mov
sbb
pop
shrb
fiaddl
das
aad
orb
shrb
xchg
sub
adc
jle
ret
popf
jbe
sar
out
ja
fnstsw
mov
xchg
xchg
idivl
js
lock
mov
ss
dec
push
arpl
inc
cmp
shrb
subb
adc
jae
jmp
icebp
and
mov
or
mov
in
inc
cmp
jle
aaa
push
sti
mov
inc
mov
scas
gs
pop
daa
bnd
sub
stos
loop
movsl
jmp
bound
into
jo
or
in
scas
mov
movhps
setne
add
cmp
in
clc
fisubl
adc
add
dec
mov
mov
sbb
cmp
shrb
dec
lock
lea
imul
pop
and
xor
test
pop
lss
jno
or
push
mov
mov
cli
sbb
mov
xor
mov
movsl
dec
imul
push
mov
dec
dec
or
ljmp
push
jb
or
movsl
cmp
adc
sbb
nop
ja
cmp
pushf
mov
es
test
insl
int
sahf
rcll
les
pop
sbb
popa
xchg
es
and
arpl
aad
lahf
dec
xor
stos
cmc
pop
mov
or
jl
jmp
adc
icebp
lea
repz
push
mov
adc
imul
fisubrs
iret
test
dec
fwait
sub
push
jo
xchg
cmp
jne
sub
jmp
add
jecxz
test
pop
in
xor
iret
rorl
daa
cmpsl
mov
dec
or
bound
pop
or
push
push
daa
les
ret
test
in
stos
fdivrl
pop
sub
and
mov
divb
mov
test
cs
outsl
or
aas
mov
push
jl
cmp
ret
ret
out
push
ret
subl
jl
push
push
mov
pushf
xchg
int
sbb
lahf
sbb
fmulp
push
lret
stos
cwtl
inc
clc
add
mov
sti
fistl
icebp
jl
dec
ror
push
mov
lods
addb
mov
leave
or
jge
jp
dec
jp
jno
imul
xchg
cli
sbb
bound
push
stos
aas
cltd
rorl
enter
or
sbb
xchg
or
dec
jae
dec
jl
pop
jmp
aam
push
stos
repz
aas
cmp
xchg
mov
jo
xchg
fldcw
mov
mov
mov
xchg
inc
je
or
mov
shll
je
xchg
xchg
pop
scas
sub
pop
cmp
and
enter
addb
mov
push
inc
jae
int3
mov
arpl
cmpl
sub
repz
sub
jnp
or
clc
cmpsl
les
int
cmpsb
xchg
out
fcoml
mov
stos
mov
adc
push
mov
cltd
cmp
add
in
pop
pop
or
nop
pop
ficompl
jae
pop
jmp
sti
mov
decl
fsubrl
inc
cs
enter
scas
dec
rcrb
cmp
dec
cmp
test
flds
xchg
inc
pop
jbe
mov
sbb
cwtl
je
xor
push
pop
lret
or
and
xor
mov
pushf
sahf
inc
cli
lods
or
dec
rcll
push
lret
jae
add
faddl
test
xchg
sbb
sti
das
fnsave
xchg
insb
stos
ljmp
sti
mov
lahf
les
mov
mov
cmp
xor
adc
test
pop
les
rol
and
insl
into
outsl
shrl
xor
mov
lds
loopne
stc
inc
adc
xchg
icebp
push
test
icebp
fadds
ficoml
call
xchg
stos
pop
cmp
or
nop
js
and
xor
push
fwait
push
cmp
mov
imul
mov
call
adc
bound
stos
inc
xchg
shlb
xor
and
jb
dec
mov
xchg
gs
mov
and
mov
cwtl
push
push
cmp
loopne
lcall
mov
sub
sbb
pop
addr16
cmp
mov
xchg
gs
mov
sub
fmull
rorb
jnp
and
pop
jecxz
adc
cmc
push
cli
fidivrl
stos
mov
aad
dec
fnstenv
inc
leave
xor
ds
sub
adc
pop
lret
into
push
bound
js
xor
mov
pusha
mov
mov
or
nop
sbb
movsb
shlb
addr16
dec
shrb
rclb
icebp
lcall
lahf
xor
dec
sub
mov
jl
arpl
and
pop
in
mov
cmp
and
xor
arpl
xchg
xchg
cmc
fldcw
push
pop
sahf
in
std
cld
jmp
stc
mov
dec
cli
adc
shlb
addb
adc
push
addr16
js
and
or
sub
in
ja
dec
lahf
mov
pop
cmp
xor
imul
xor
dec
mov
aad
rcll
jmp
or
cmp
aas
lds
jo
mov
mov
in
jge
dec
and
sbb
jle
dec
pop
push
jecxz
dec
push
xchg
scas
pop
dec
dec
mov
iret
outsb
pop
adcb
ds
sub
xor
push
jno
loop
cmp
or
pop
out
fwait
stos
lds
dec
out
mov
jle
popf
sbb
sub
mov
lcall
test
or
fidivl
sbb
ds
jb
lret
arpl
add
scas
dec
cmp
mov
addr16
inc
test
int
jl
jnp
jae
mov
data16
cmp
adc
add
jae
sub
test
test
out
movsl
dec
push
cltd
xor
jno
xor
cmp
xor
lods
repnz
lock
push
mov
movsb
push
mov
adc
xlat
push
push
das
sbb
rcrl
push
inc
js
fucom
cwtl
call
push
fs
stc
mov
xor
jle
or
jnp
lret
es
jp
push
popf
stos
push
shlb
ret
mov
test
out
pop
push
dec
icebp
lds
pop
xor
mov
loop
push
lret
aas
dec
mov
outsb
nop
xor
insl
out
paddsb
jno
mov
lock
minps
push
add
sbb
out
dec
popf
shrb
scas
int3
add
sub
fwait
lcall
ja
jae
hlt
sub
mov
pop
pop
jge
mov
jns
pop
test
leave
cltd
bound
xorb
popa
jge
enter
mov
pop
add
cmp
jecxz
sub
dec
xchg
sbb
pop
rep
mov
xchg
pop
nop
dec
je
jo
out
and
stos
lock
jnp
cmpb
mov
mov
sub
push
addl
pop
cli
mov
jmp
add
pusha
dec
cmp
adc
or
mov
stc
inc
test
sub
cmp
cmpsl
jnp
cmc
mov
fiaddl
aad
test
cmp
out
inc
lahf
xlat
push
jb
test
rorb
cli
andl
or
jne
adc
dec
mov
mov
lcall
adc
ss
dec
jg
stos
cmc
and
jmp
fsubl
popa
pop
or
aad
or
add
mov
push
sbbb
adcl
push
lea
mov
mov
cmp
pop
jo
or
pushf
push
xchg
sbb
xor
cwtl
dec
and
rolb
filds
dec
mov
adc
add
call
jns
mov
loop
add
call
enter
out
mov
test
push
mov
mov
cwtl
push
pop
fistps
sub
test
mov
dec
jbe
and
add
cmc
sbb
mov
stc
xchg
sub
leave
pop
out
jecxz
mov
xchg
movsb
test
push
mov
pop
sub
shlb
and
pop
dec
ljmp
inc
outsb
cltd
xor
dec
mov
ficoml
or
xchg
sbb
jo
mov
int3
jmp
in
addl
pop
mov
std
mov
jns
scas
inc
jbe
repz
lds
xchg
xlat
cli
adc
jae
nop
aas
xchg
mov
and
xchg
dec
clc
dec
and
pop
repz
adc
jne
dec
mov
lock
ret
aad
adc
inc
movsl
mov
int3
test
push
or
aaa
xorb
jne
bnd
insb
push
sbb
xor
out
addr16
mov
xor
cmpsb
push
out
sbb
sbb
mov
andb
push
flds
in
loopne,pn
and
pusha
nop
jle
das
push
xor
mov
not
imul
movsl
mov
lret
test
rolb
pop
mov
mov
jmp
mov
push
xor
cwtl
xchg
outsl
inc
dec
out
mov
test
mov
or
mov
aas
xor
add
fbstp
sub
jmp
add
repnz
gs
xchg
cmp
fldcw
and
test
and
or
jo
repz
jne
mov
and
cmp
outsb
fistpl
push
jnp
into
in
push
pop
mov
xchg
pusha
ljmp
stos
or
push
push
mov
lret
shrb
mov
pop
fdivrl
dec
cmp
sub
sahf
and
and
insl
xchg
mov
hlt
fisttpll
adc
addb
gs
dec
leave
lcall
jo
xlat
cmp
dec
aas
push
xchg
call
aas
bnd
push
mov
das
jbe
push
inc
sub
xchg
sub
nop
lods
and
adc
call
stc
pop
push
test
fwait
std
push
jp
mov
sub
lea
and
mov
js
andl
push
xlat
and
stos
and
hlt
cmp
mov
xor
adc
insb
mov
add
push
xor
cmp
jp
mov
daa
add
xchg
test
cwtl
inc
sub
imull
subb
mov
ljmp
xor
mov
loopne
dec
pop
jle
or
mov
aaa
jne
sbb
call
cmc
fnstsw
xor
rcrb
fimuls
mov
mov
sbb
inc
roll
inc
xor
cmp
sbb
jecxz
lcall
adc
mov
outsb
sbb
int3
cmp
mov
cmp
jge
fiadds
cwtl
jbe
shr
mov
stos
cs
scas
shll
inc
out
hlt
out
xor
stc
push
and
sbb
cmpsl
movl
pushf
das
push
pop
xor
push
jnp
jle
cs
or
push
mov
sbb
cld
fldl
dec
jmp
xor
shll
stc
jne
dec
adc
jecxz
cmp
dec
and
jo
addr16
je
xor
outsl
sub
ret
lret
xchg
push
adc
inc
xor
ret
fbstp
fwait
out
in
lods
adc
stos
xchg
xchg
lods
add
sub
or
dec
aaa
push
jo
sub
jo
sub
hlt
decb
test
cmp
pop
mov
adc
ret
aaa
mov
jne
pop
fiaddl
orb
or
test
sahf
xchg
shlb
das
xlat
repz
sbb
mov
stc
sarl
mov
cmp
adc
mov
xor
subb
mov
mov
xchg
not
inc
nop
insb
stc
pusha
cmp
push
arpl
fdiv
movsb
adc
rolb
mov
daa
mov
arpl
adc
mov
nop
push
dec
xor
ss
fwait
cmp
fcoms
push
cmp
insl
enter
icebp
or
xchg
mov
test
adc
ficoms
data16
je
ds
xchg
pusha
push
or
in
repnz
mov
fs
and
dec
stc
dec
out
mov
mov
pop
sbb
ja
mov
call
mov
roll
xchg
adc
jl
scas
loopne
dec
or
jbe
push
lds
cli
stos
in
iret
mov
xchg
mov
adc
pop
lods
insl
mov
scas
pop
fsubrs
call
addr16
inc
data16
add
dec
xchg
imul
xabort
push
movsb
negb
lds
lea
arpl
jle
out
int3
cmc
lods
scas
pop
mov
fnsave
scas
lods
push
outsb
push
jb
mov
jb
xor
loope
lcall
mov
mov
mov
aad
les
shrb
push
test
das
push
out
mov
push
rcr
mov
jno
pop
push
adc
or
cmp
jge
pusha
push
and
mov
lahf
fs
push
out
cmp
adc
push
pop
out
pop
mov
shr
loope
cli
nop
mov
aaa
adc
push
sbb
idivb
shrl
sbb
das
repz
lcall
fiadds
leave
repz
xlat
je
movb
xchg
and
mov
outsb
das
and
inc
icebp
ret
shll
push
lret
in
push
pop
sbb
mov
scas
popf
das
outsb
cmp
cwtl
dec
inc
fmuls
clc
mov
mov
mov
mov
adc
in
push
cmp
xor
jp
bound
xchg
jb
pop
ja
adc
push
add
dec
loop
or
shl
enter
sub
adc
outsb
fmull
lds
cmpsl
sub
lods
cmp
push
pop
into
loope
aas
jg
xchg
jmp
push
xchg
jp
and
inc
adc
push
xor
mov
push
ja
mov
cwtl
mov
adcl
and
mov
ror
or
xchg
aaa
cmp
dec
adc
mov
adc
scas
push
inc
ficomps
negl
inc
or
lcall
jnp
shll
ljmp
sub
pmulhw
mov
popa
xlat
leave
fisttps
sub
cli
lret
pop
jmp
fbstp
pop
into
mov
test
mov
data16
pop
mov
mov
leave
inc
lret
scas
mov
aad
inc
dec
inc
jbe
aas
adcb
xor
push
or
jo
nop
sbb
js
jg
pop
push
push
loop
in
cld
pop
ficomps
fs
out
int
out
inc
adc
dec
popa
push
sub
mov
int3
lds
pusha
cmp
std
push
icebp
push
test
sbb
xor
pop
fsubp
sub
adc
mov
mov
cwtl
test
xor
sbb
push
je
or
and
scas
add
leave
test
ja
shlb
fdivr
cld
les
push
scas
adc
stos
bound
out
push
fadds
loope
mov
movsl
jmp
xchg
add
jno
add
xlat
jmp
outsb
pop
mov
arpl
xor
mov
sbbl
sbb
lds
stos
and
lock
adc
gs
ffree
jg
or
pop
stc
or
mov
loope
jbe
xchg
xchg
int3
sub
xchg
outsb
mov
outsl
hlt
push
aaa
jnp
popa
cwtl
pushf
mov
pop
mov
inc
mov
clc
loop
jbe
xchg
xchg
mov
cmpb
jg
es
hlt
xchg
push
arpl
shlb
mov
pop
ret
dec
lods
stc
add
out
cli
xor
or
or
inc
ret
ja
push
sub
push
lds
cli
mov
pop
sbb
sub
aaa
push
cmp
cmp
mov
sbb
jmp
dec
xlat
jno
inc
mov
call
mov
pop
push
sarb
mov
mov
mov
jecxz
ljmp
dec
repnz
jnp
std
nop
xor
dec
and
lds
xchg
push
repz
push
adc
add
subl
mov
in
not
enter
hlt
insb
sbb
push
mov
lahf
sbb
sbb
and
inc
push
ljmp
xchg
xor
or
sub
pop
jbe
sub
mov
in
faddl
xchg
maxps
add
pop
xlat
and
dec
or
sbb
loope
pushf
ljmp
js
std
xor
scas
push
enter
pop
push
mov
add
jne
jno
hlt
insl
ja
ss
stc
pop
int3
call
fldl
out
xchg
arpl
adc
jmp
cld
cmp
loopne
jg
popf
je
inc
cmc
hlt
fstps
jb
dec
lret
sbb
je
ret
test
jecxz
lea
xchg
sbb
add
daa
mov
pushf
jge
push
xchg
das
fs
xor
jno
mov
lods
ret
inc
shll
mov
push
pop
jecxz
push
push
mov
adc
shrl
negb
mov
mov
cltd
push
ret
sub
les
mull
or
jp
adc
adc
lcall
lea
mov
push
vpavgw
sbb
aaa
popf
into
jge
cs
ljmp
dec
imul
inc
or
xor
add
pop
jbe
sub
cs
jp
shl
mov
lods
je
adc
adc
test
pop
jae
insb
xor
pop
ss
cmp
adc
xchg
sub
ret
dec
imul
mov
mov
shr
cmp
lock
jecxz
icebp
es
push
subb
and
cmc
sti
ret
imul
cmp
cmp
cltd
mov
sbb
dec
cltd
aaa
add
jge
inc
push
sub
rcrb
lods
fstpt
push
inc
cmp
idivb
mov
jge
cld
xor
xor
cmc
shlb
push
test
push
jb,pt
jns
ljmp
sar
xor
cmpsb
mov
jecxz
test
out
adc
mov
andl
fldt
loopne
add
fsubrl
xchg
insb
in
mov
arpl
pusha
push
mov
or
stos
cmp
popf
insb
popf
out
dec
mov
adc
test
test
in
mov
or
or
pop
lods
addb
mov
pop
aam
pop
push
loope
mov
push
jnp
das
mov
mov
ja
jge
inc
xor
repz
sub
dec
into
add
sub
xchg
mov
mov
gs
pop
push
in
xchg
inc
bound
fsubrs
arpl
movsb
rcr
pop
sbb
dec
popa
pop
cmpsb
mov
sti
sub
or
lock
adc
xor
and
inc
cmpsl
push
int
cs
or
popf
divl
sub
mov
dec
jnp
jge
mov
jne
jecxz
fiaddl
popa
shr
lds
lock
dec
sub
xor
jnp
nop
test
inc
int
ret
sbbl
jbe
push
mov
cs
pushf
adc
sahf
scas
mov
mov
jae
in
dec
jns
incb
dec
outsl
lret
mov
jmp
cmpsl
leave
push
adc
cmpsb
sti
dec
pop
into
out
push
popa
loope
aam
mov
iret
int3
rcll
xor
jmp
imul
jae
fwait
jmp
push
shlb
jno
pop
stc
dec
xor
scas
dec
arpl
jecxz
xchg
int
dec
push
scas
scas
js
jo
movsb
inc
push
add
in
not
lret
ds
ret
xor
call
add
loope
aam
lret
cmpsb
repnz
jae
sbb
icebp
lcall
daa
pushf
repz
int
negb
sbb
sti
cwtl
lea
pop
rolb
pop
add
mov
adc
mov
jl
into
add
jo
pop
lahf
sub
mov
popa
mov
into
xchg
jns
subl
jne
lods
cmp
addr16
pop
jp
pop
push
std
lahf
mov
mov
cmc
sub
cmpsb
das
jmp
and
es
pop
push
daa
stos
lods
loope
rclb
mov
jnp
enter
les
push
pusha
pop
and
xor
cmp
jl
adc
mov
add
inc
pop
fistpl
adc
add
addl
scas
fwait
adc
sbb
mov
nop
mov
push
pop
cld
mov
fldcw
push
outsb
push
mov
jns
das
mov
pop
and
mov
adc
jns
inc
stos
or
add
cmpsb
insb
call
daa
xchg
mov
add
inc
xchg
dec
jmp
jmp
xlat
jb
sbb
cmp
cmp
xlat
jg
xchg
pushf
lcall
inc
and
pop
imul
mov
pop
cmpsb
pusha
inc
inc
xor
hlt
jae
xchg
subb
mov
xor
mov
insl
mov
in
fimull
push
push
or
aam
insb
std
sbb
addb
sbbl
lock
iret
sub
add
popf
fcompl
mov
xchg
cwtl
in
and
mov
push
mov
xchg
das
stos
mov
cmp
and
add
ljmp
iret
aas
lcall
es
adc
sbb
ds
cmc
and
stc
adc
lods
push
inc
pop
mov
jae
mov
cmp
jb
add
lret
adc
jno
mov
scas
fistps
mov
push
xchg
in
inc
mov
xor
inc
stc
adc
testl
in
shlb
rcrl
sbb
sbb
movsb
sub
fwait
loopne
mov
xlat
int
mov
outsl
movsb
mov
mov
loopne
add
push
leave
ficompl
fnstenv
fwait
mov
lods
mov
cli
push
mov
stos
lods
addb
lock
rcr
enter
push
adc
dec
push
add
and
sbb
and
aas
test
cmp
dec
mov
mov
mov
mov
cmp
dec
pop
push
xchg
scas
cli
hlt
jp
decl
lret
xorb
push
sahf
iret
es
jge
stos
dec
mov
lea
and
clc
sbb
fwait
push
popa
lds
lock
push
sbb
sub
xor
and
mov
adc
out
mov
jl
fsubl
ss
fs
rclb
dec
movsl
xor
iret
lcall
fimull
lods
mov
addl
ret
jmp
jae
sbb
adc
adc
mov
stos
mov
xlat
push
sti
mov
inc
int3
sub
subb
or
clc
jp
lods
sar
loopne
aaa
and
dec
fnstsw
and
and
cs
and
xchg
stos
sbb
adc
jecxz
shll
test
xchg
sub
push
mov
sbb
sti
or
push
pop
xor
je
pop
out
add
ljmp
add
mov
inc
jge
pop
dec
mov
push
push
xchg
mov
dec
fsubrl
inc
xor
gs
pop
shlb
cmp
bound
xchg
push
pop
insl
in
in
adc
jb
popa
out
inc
sahf
adcb
je
fisttps
mov
jecxz
sub
pop
xor
lret
popa
fnstcw
sub
fwait
scas
add
ret
jp
daa
data16
mov
insl
scas
in
pop
push
ljmp
mov
sub
and
sbb
roll
xor
sub
or
mov
jmp
int3
test
jmp
mov
xchg
pop
insb
adc
mov
jnp
popf
pop
push
les
loop
or
cmpsl
test
or
call
xchg
dec
lcall
xchg
es
push
dec
and
call
or
je
push
out
into
lock
and
stc
pop
mov
xorb
out
jl
push
fidivrl
jecxz
ljmp
adcb
xlat
repz
xor
lcall
outsb
push
popf
push
push
cmpsl
nop
repz
mov
pop
mov
mov
inc
dec
stos
lahf
xchg
adc
cmp
rorl
jge
sub
inc
pop
dec
mov
cltd
push
in
mov
dec
adc
inc
into
movsb
jmp
adc
xor
test
testb
pop
inc
gs
sti
sub
xor
testb
xchg
push
ficoms
cmp
cmpsl
div
cmp
mov
hlt
mov
arpl
call
roll
add
xchg
dec
dec
cmpsl
push
xchg
push
insb
imul
das
push
scas
xor
in
outsb
ret
sbb
pop
mov
mov
icebp
rcr
das
std
jnp
cmpsb
rclb
cmc
fwait
cmp
sub
push
inc
mov
in
sub
adc
jl
imul
call
mov
lea
jmp
jno
imul
mov
outsb
sbb
sbbb
test
jne
sub
cmpsb
inc
xchg
sbb
fbstp
sbb
push
arpl
roll
loopne
inc
out
ss
cmp
dec
fs
or
out
mov
icebp
lcall
mov
xor
jg
push
add
push
jmp
movsl
inc
pop
mov
hlt
mov
dec
outsb
inc
mov
dec
into
mov
mov
add
popf
cmc
int3
cltd
adc
dec
mov
cli
loope
rorb
mov
out
inc
jmp
sbb
sub
sbbb
dec
xchg
rolb
lods
fidivrs
movsb
jo
addr16
rcl
cmp
mov
es
aad
xor
fcomps
mov
xchg
jg
mov
push
push
cmp
add
mov
xchg
mov
mov
pop
cltd
inc
movsl
jns
and
sbb
mov
in
or
sub
pop
jne
iret
out
call
icebp
or
push
cmpsb
add
repz
and
or
repz
jne
dec
mov
jno
and
arpl
mov
das
decl
push
inc
sti
aaa
ret
cmp
sbb
call
push
pop
add
mov
push
test
push
ret
ss
fsts
fwait
movl
mov
jbe
inc
scas
sbb
or
aaa
xor
xchg
add
xchg
mov
and
in
pop
stos
jle
cmpb
jne
sub
adc
and
jecxz
in
ret
pop
push
xlat
cltd
fwait
lahf
xor
jo
xlat
dec
adc
cmpsb
mov
fdivr
mov
es
lret
cli
nop
jmp
pop
cmpsl
cmp
lret
mov
or
out
aam
lock
cmp
cld
inc
in
mov
test
push
xor
fmul
push
cmp
mov
add
outsl
inc
sbb
insb
cld
cs
lds
bnd
imul
int3
xorl
pop
sub
loopne
lock
inc
ret
imul
sbb
push
fnclex
lret
add
insb
ljmp
les
loope
pop
gs
rcr
adc
cmp
push
pop
ret
xchg
ja
add
inc
ja
mov
cmpb
sub
push
sbb
cmp
movl
cmp
sar
ds
sbb
ret
or
xchg
pop
pop
lret
xchg
lea
cmp
repnz
adc
fdivrl
pop
jno
loopne
cmp
repz
pop
mov
shr
pop
push
fs
and
xchg
jo
mov
pop
ja
icebp
cmc
int3
lahf
lock
fucom
aas
subl
shrb
je
mov
insb
adc
mov
xor
push
xor
jge
jmp
int
lea
int
jo
pop
aas
das
pop
mov
or
jg
subb
bound
fiadds
bound
mov
inc
pop
sbb
addr16
insb
cmp
mov
mulps
sbb
or
xlat
push
and
in
xor
cmpsl
add
jnp
cs
adc
pop
loope
xor
out
fnstenv
dec
arpl
daa
arpl
or
loop
mov
dec
mov
mov
sub
jmp
pop
outsb
cmp
sbb
pushf
sbb
insl
rolb
jno
cmp
xlat
jb
sub
repnz
bound
ficomps
or
ficompl
pop
rorl
sarb
mov
cmp
dec
xor
sub
pop
bound
xlat
je
sbb
xchg
call
fwait
push
imulb
xor
in
std
and
pop
scas
inc
stos
mov
add
xor
fnsave
cmpsl
push
jmp
jno
lea
repnz
xchg
push
fcom
sub
or
and
sbb
repnz
stc
movsb
cs
lret
out
mov
loop
xor
or
lahf
fcomps
mov
lods
lcall
aad
cli
pop
ja
mov
jno
mov
add
dec
cmp
mov
add
fcmovu
adc
pop
mov
loope
pop
out
int
push
jp
repnz
in
stos
mov
es
testl
sub
mov
stos
mov
mov
shll
loope
xchg
pop
jl
ljmp
in
inc
xor
dec
jle
adc
mov
aam
push
daa
test
xchg
hlt
leave
add
xchg
dec
sti
enter
and
shlb
ss
fnstsw
dec
jns
lcall
push
popa
push
mov
push
out
jb
dec
and
pop
std
push
cwtl
dec
int
xchg
insl
push
hlt
xor
jbe
mov
push
fsubl
mov
les
mov
adc
push
hlt
movsb
lock
call
fucomp
add
pop
or
add
insb
hlt
fwait
jbe
lcall
pop
add
test
aad
xchg
fisubrs
scas
sbb
dec
jne
jbe
pop
push
loopne
jmp
pop
xor
insb
inc
dec
or
fcoms
mov
mov
insb
test
push
sub
inc
cmp
jno
in
add
fwait
push
lea
lret
neg
xchg
repz
xor
and
or
cmp
call
insb
shl
pop
aam
ds
cld
mov
shll
xor
clc
mov
and
pusha
add
dec
aad
inc
sub
in
pusha
jno
xor
in
dec
and
adc
shl
push
add
jecxz
cmpl
adc
dec
fimuls
xor
fwait
hlt
xor
or
pop
test
lret
or
std
test
mov
jmp
jb
pushf
sbb
mov
and
mov
bound
shrl
sbb
mul
mov
test
and
sahf
add
cli
mov
imul
jl
cmp
pop
fwait
dec
sti
pushf
lcall
int
divb
bound
mov
push
xchg
xchg
dec
xchg
mov
or
adc
lret
sbb
and
cmpsb
movsl
shrb
mov
xchg
or
rcll
pusha
enter
fnsave
pop
inc
adc
mov
divb
push
mov
mov
out
adc
lret
xor
cmp
fnstsw
pop
mov
inc
push
pop
xchg
aam
mov
push
inc
push
dec
lock
cmp
out
jecxz
adc
sub
fisubs
bound
jl
hlt
je
inc
adc
jns
testl
sub
loop
int3
jmp
mov
lods
sbb
cli
aaa
jb
and
and
jl
dec
ret
and
and
mov
outsb
dec
iret
repz
stos
xchg
or
push
sbb
xor
jle
lods
jge
fstpt
push
std
jp
repnz
push
addr16
push
pop
prefetcht2
test
sbb
add
sbb
adc
pusha
push
sti
cld
xchg
xchg
sub
xchg
mov
mov
pop
and
xchg
loopne
pusha
adc
out
or
call
loope
and
ret
popf
mov
cmp
js
dec
jne
in
mov
fs
push
insb
sarb
jmp
dec
sbb
cmp
cmp
adc
jb
push
pop
xchg
pop
lods
pusha
das
sbb
xchg
rcrl
mov
in
lret
aaa
push
xorb
and
adcb
or
pop
dec
or
sub
push
or
mov
mov
pop
cs
add
shll
addl
push
mov
push
jmp
jmp
mov
dec
sub
mov
mov
test
xor
mov
out
xor
jle
inc
and
dec
sub
lock
shlb
or
push
in
mov
xchg
loope
lods
fistl
or
scas
loop
ret
ljmp
das
mov
repnz
adc
or
lahf
cmp
mov
iret
xchg
insl
dec
addr16
fists
push
aas
insb
inc
mov
pop
addr16
fnstcw
mov
mov
in
leave
jmp
lds
fisubrs
xchg
and
mov
enter
cmp
inc
clc
fcoml
inc
popa
and
cld
dec
lcall
stc
inc
cmp
nop
or
push
sahf
fisttps
mov
icebp
mov
mov
jns
dec
shll
or
mov
add
pushf
lds
dec
cld
cld
xchg
fidivl
in
fs
je
and
ja
call
fwait
or
out
xor
fdivl
cld
push
pop
repz
pop
shll
jmp
lar
push
mov
icebp
push
pop
fldt
outsb
mov
xchg
enter
cmpsb
outsl
mov
push
enter
cs
pop
and
pop
mov
int
repnz
lds
push
sbb
adc
les
mov
pop
in
test
lods
pop
jnp
in
mov
dec
mov
pop
inc
mov
ja
mov
subl
mov
xor
xchg
rorb
out
scas
ret
jle
xchg
add
scas
or
cmp
jp
dec
fisubrs
das
sbb
xchg
pop
cli
mov
movsb
inc
jmp
pop
adc
mov
xchg
xchg
mov
das
push
bswap
push
andl
xchg
or
pushf
and
mov
ds
enter
pop
adc
movsl
ja
lahf
mov
data16
cltd
sti
push
mov
in
xchg
fisttpll
cmc
idivl
sbb
sti
pop
mov
mov
dec
stos
xorb
adc
jbe
aaa
nop
loope
int3
cmpsb
sti
pop
push
adcl
jecxz
arpl
in
cmp
lock
clc
stc
sub
xlat
jl
jp
inc
pop
push
test
inc
mov
mov
jg
cli
mov
push
ljmp
fisubrl
cltd
ret
pop
cs
sub
out
xchg
jne
xor
push
fucomp
sti
jge
cmpsb
orb
inc
add
aaa
inc
mov
add
add
sub
ret
lea
pop
sub
push
jne
sbb
lcall
cltd
or
loope
push
adc
dec
stc
bound
enter
add
mov
inc
cltd
sahf
lcall
sti
jg
out
add
xor
decb
test
in
ret
in
gs
cld
in
enter
xchg
fidivrs
xor
aaa
lea
into
xchg
mov
mov
cmp
lods
pop
gs
add
dec
mull
mov
movsl
in
and
hlt
pushf
or
out
lret
jl
movsl
das
push
out
aam
out
int3
lret
dec
dec
xor
enter
data16
jmp
popf
xchg
add
jbe
outsb
les
push
push
aas
and
sarl
jb
pop
or
aas
inc
es
xchg
hlt
jnp
mov
cmp
sbb
cmp
cmpsl
push
cmp
loopne
test
cmp
leave
imul
popa
aam
pushf
mov
sbb
fsubr
inc
xor
inc
test
les
lock
pop
aam
adc
push
movsl
pop
and
inc
dec
cmpsb
pop
insl
repz
or
leave
pop
xor
dec
xor
out
cltd
dec
mov
fiadds
pusha
xchg
adc
inc
adc
cwtl
adcl
mov
mov
inc
push
jle
and
dec
fcoms
syscall
cmp
inc
adc
pop
mov
sub
aaa
fnstsw
cmc
mov
stc
lods
adc
cmpsb
and
addl
imul
add
cmp
xchg
fnsave
xchg
and
sub
push
incl
dec
xchg
daa
ret
mov
jmp
dec
pop
or
call
loopne
mov
fidivrs
mov
pop
pop
push
popa
cmp
pop
out
lea
sub
pop
adc
roll
push
pop
sub
test
jne
jge
dec
add
sub
cmp
dec
imulb
enter
sub
out
xchg
mov
sub
fistpll
mov
loope
jp
dec
stos
jb
popf
inc
jecxz
mov
and
mov
sbb
pop
leave
xor
loope
pop
out
and
and
test
push
dec
scas
pop
mov
outsl
jp
fisttps
jge
sub
rcrl
cld
dec
lret
push
pop
sub
lods
je
pop
movsl
mov
cmp
insb
ret
push
nop
or
ror
cltd
nop
sti
and
int3
mov
ret
aas
mov
addb
xchg
pushf
fcmovne
mov
and
cmpsl
sahf
add
popf
lret
popf
scas
ret
pop
cli
jns
inc
mov
jne
insb
and
out
loop
add
insb
loope
imul
je
arpl
imul
ljmp
loope
and
fisttps
mov
or
inc
mov
mov
imul
cwtl
sti
hlt
mov
into
jbe
add
mov
jbe
idiv
ljmp
std
dec
xchg
push
es
mov
popa
push
xchg
rcll
jo
lods
dec
repnz
dec
push
das
hlt
dec
add
sbb
loopne
outsl
fildll
ror
ja
call
loope
xor
sti
loope
movsb
lock
push
or
dec
popf
ds
movb
popf
pusha
mov
decb
ds
jl
mov
movsl
mov
and
sbb
add
stos
push
xchg
fwait
inc
push
mov
jle
cmp
cli
xchg
aam
cmp
or
fs
cltd
scas
push
adc
inc
xchg
imul
cmpb
pop
push
sub
stos
divb
pop
and
add
sbb
sub
in
loope
call
mov
sub
jecxz
or
fcoms
popf
sbb
or
mov
aam
pop
cmp
adc
or
adc
pop
mov
or
data16
dec
enter
movsl
lahf
mov
iret
nop
pop
icebp
jb
scas
mov
sahf
sbb
aaa
repz
sub
aad
xchg
adc
cltd
cmp
xor
scas
lea
lods
pop
xor
sbb
lods
les
sub
sbb
push
sub
mov
jne
mov
add
add
lret
xchg
cmp
loop
aam
jg
sbb
mov
pop
jb
in
sub
push
push
jge
inc
jo
jo
addr16
push
adc
push
xor
pop
push
push
jns
and
xchg
stos
pminub
inc
aad
nop
in
or
imul
mov
cmpsb
mov
in
mov
xor
leave
stos
inc
dec
jge
in
mov
imulb
or
das
push
dec
lods
dec
and
xchg
jbe
lock
push
or
xor
sub
stos
rcrl
jecxz
jmp
dec
add
adc
clc
cli
imul
std
xchg
rcrl
imul
test
mov
push
mov
cmpsb
clc
mov
mov
in
movsl
mov
pop
jle
dec
push
imul
in
sub
fdivl
pushf
ss
inc
out
imul
aas
ror
add
test
push
stos
ljmp
outsb
jbe
jnp
push
clc
imulb
out
sbb
dec
push
mov
outsl
inc
push
or
sti
in
sbb
insl
lods
sti
add
lcall
lcall
add
xor
movsl
dec
jbe
imul
xchg
data16
hlt
or
or
or
xor
mov
fistps
and
leave
in
les
incl
jle
lods
daa
popf
and
rcrl
push
adc
mov
push
ret
mov
mov
cld
or
mov
jns
jmp
subl
sti
mov
xlat
outsb
dec
add
push
jno
sti
pop
sbb
mov
mov
imul
faddl
jp
push
push
sbb
fchs
repnz
pop
mov
addl
ss
inc
mov
cmp
lahf
orb
es
daa
cmpl
out
out
call
xor
mov
lock
sub
and
mov
mov
stc
sub
jle
and
mov
popa
movups
xor
in
xchg
push
mov
ljmp
xor
or
scas
dec
lds
mov
sub
push
sub
add
and
lds
aaa
xlat
into
xchg
xchg
shlb
mov
pusha
pop
xchg
dec
cmpsb
sbbl
lods
jne
fdivs
dec
jge
cmp
jns
or
jo
fnstsw
mov
clc
cli
mov
mov
mov
das
pop
icebp
push
bound
cmp
cmc
sbb
sub
scas
les
mov
jae
dec
jns
cltd
movsl
sahf
add
add
jno
sbb
push
je
xchg
ss
mov
cmp
stc
ljmp
pop
dec
inc
pusha
pop
jbe
std
mov
lea
mov
out
pop
shlb
jae
outsb
sub
push
aam
sub
iret
and
int
push
out
shlb
mov
inc
mov
mov
imul
out
mov
pop
xorw
inc
push
or
jge
fsubrl
mov
or
mov
test
cmp
jge
and
out
out
and
sti
mov
inc
xchg
setbe
sti
aam
xchg
mov
xchg
fstps
add
arpl
add
inc
mov
test
ss
fdivrl
js
xlat
xchg
push
mov
dec
sbb
and
cmp
outsb
cmp
aam
sbb
fsts
jle
jbe
ret
pop
popa
mov
adc
fnstenv
cmc
mov
in
mov
lcall
fildll
testb
ficompl
sub
icebp
pop
dec
mov
inc
inc
xchg
scas
outsb
push
aas
inc
xchg
jmp
sub
std
jne
or
mov
lods
test
cltd
subb
pop
and
out
jg
jge
out
lock
scas
sti
pop
sti
xchg
fisubrs
pop
xor
mov
imul
add
das
das
dec
adc
push
sahf
scas
inc
pop
push
addb
jmp
or
adcl
add
iret
fldenv
lcall
dec
mov
pop
sub
cwtl
fsts
dec
dec
push
into
ret
xor
xchg
or
loopne
and
pop
push
mov
sbb
inc
repnz
stos
add
jge
fs
ja
and
addr16
mov
shll
jo
jp
or
xor
pop
push
movzwl
ss
jae
fstpl
add
pushf
jge
push
hlt
xchg
sahf
test
fidivrs
orb
mov
sub
mov
ljmp
and
pop
shlb
aad
and
xchg
addr16
pusha
loopw
popa
sbb
lea
sbb
arpl
pop
ds
test
jns
cmpsb
sbb
pop
fwait
insb
in
fidivrl
lahf
in
mov
fnsave
mov
lcallw
xchg
popf
nop
out
loop
xlat
mov
jne
adc
dec
jb
loope
pop
adc
ror
pop
cmp
ret
push
inc
mov
pop
sti
mov
mov
js
adc
and
int
dec
in
or
or
lock
stc
xor
bound
mov
inc
jae
leave
jle
push
loope
fwait
cmp
add
data16
pop
inc
mov
dec
dec
and
jnp
data16
mov
pop
das
les
int3
ja
push
push
jmp
fmulp
iret
sub
ret
loopne
adc
in
cs
jmp
popa
sbb
das
les
or
test
lods
mov
sub
pop
cwtl
xor
jbe
fldenv
cmpb
scas
push
scas
mov
das
mov
add
inc
jmp
pop
mov
fcomi
cwtl
xor
aad
lea
adc
cmpsb
and
mov
aaa
adc
jle
mov
data16
test
push
sub
lock
lods
test
adc
mov
int
xchg
pop
out
mov
sbb
xchg
adc
lcall
pop
popa
jecxz
test
cmp
lret
lret
push
sub
sub
push
add
into
adc
repz
cld
push
stos
hlt
pusha
fmull
aas
xchg
std
or
lret
mov
sub
jge
push
jnp
or
popa
cltd
add
and
jl
push
dec
loopne
mov
enter
sbb
xchg
xchg
gs
fistps
adc
jle
and
xchg
add
daa
inc
adc
out
push
jle
imul
mov
push
int3
icebp
mov
xor
add
xchg
xchg
jecxz
test
aas
loopne
jb
fimull
add
push
repz
push
testb
aam
sarb
lret
fcmove
das
sub
cmpsl
mov
repnz
xchg
and
push
adc
cli
push
dec
xchg
mov
add
lcall
cwtl
das
jmp
icebp
fwait
mov
addl
xor
test
movsl
mov
pop
movsl
sbb
aas
and
mov
pop
lock
lahf
aad
xlat
popf
call
sbb
mov
mov
cmp
xchg
shl
cltd
inc
inc
push
pop
sub
or
or
sahf
pop
inc
iret
push
xcrypt-cbc
cmpsl
push
test
push
jns
out
mov
pop
mov
divl
adcl
pop
mov
sbb
frstor
add
mov
enter
pop
push
scas
in
inc
shrl
out
or
inc
mov
scas
sbb
and
pop
bound
mov
lods
and
push
stos
shll
pop
mov
ja
ret
lock
shl
mov
mov
lods
pop
cwtl
mov
enter
jne
mov
or
pop
cmp
push
push
adc
pop
out
icebp
jne
push
testl
and
push
aam
int
sbb
mov
in
jmp
leave
stos
enter
mov
iret
das
neg
add
add
push
xor
fdivr
inc
and
inc
rorl
fnstsw
repz
inc
ja
ss
mov
lods
dec
and
out
pop
cld
dec
cmpsl
pop
dec
sahf
lret
fstpt
iret
gs
jmp
xchg
imulb
cltd
mov
repz
ds
ret
push
in
or
enter
lret
or
inc
push
add
mov
and
dec
jl
in
mov
lcall
leave
mov
jge
sbb
sub
lods
mov
and
mov
mov
jg
out
xchg
xor
push
insl
out
cmp
mov
and
mov
orl
sub
cmp
test
cwtl
in
sub
jmp
xchg
dec
pop
sti
int3
cmp
mov
dec
lds
jecxz
or
lock
fcoms
jo
jb
pop
std
imul
xchg
sub
scas
cmp
ror
sub
dec
jl
cmc
test
rclb
pop
or
push
test
add
insl
cmpb
pop
cs
sbb
mov
lock
in
cli
movsl
mov
divl
xor
aas
pop
dec
jle
dec
fldcw
ljmp
movsl
pusha
mov
inc
lret
out
mov
mov
sahf
and
add
das
dec
push
out
xorb
aaa
xchg
test
mov
fimull
in
outsb
cwtl
shlb
ljmp
idiv
xor
xor
sbb
cmpsb
popa
cltd
dec
xchg
fcomps
int3
inc
in
pop
scas
xchg
sarl
aaa
jnp
xchg
add
and
pop
and
addr16
outsb
fstl
cmp
jbe
push
mov
xorl
call
les
pminsw
mov
adc
cmp
mov
test
cmp
fwait
icebp
aad
cltd
xchg
cmc
pop
ret
lret
mov
or
sahf
mov
xlat
adc
into
int
sahf
push
cmpsb
mov
adc
stos
mov
mov
bound
sub
and
jl
pusha
in
arpl
adc
ret
inc
aaa
jge
or
xor
cwtl
stc
ror
das
iret
divb
jae
mov
add
mov
xchg
insl
arpl
adc
in
out
shlb
outsl
cwtl
jmp
mov
aad
lods
and
inc
mov
pop
and
mov
xlat
jp
sbb
out
pop
pop
jl
mov
out
bound
outsl
xlat
cmp
cltd
sub
pop
dec
lods
outsl
sti
rorb
orl
dec
mov
lock
jb
mov
or
cmpb
pop
stos
loopne
fcmovu
and
les
loope
or
daa
jge
mov
mov
sub
sbb
inc
mov
xor
jp
fstpt
stos
xchg
push
leave
fwait
dec
xchg
test
xor
gs
mov
or
dec
mov
push
mov
push
xchg
inc
or
mul
in
sbb
test
fstpl
mov
or
or
inc
cwtl
sbb
lcall
test
int3
pop
aas
cmpsl
and
ss
cli
xor
in
test
aaa
insl
xchg
insb
imul
jle
stos
xchg
lea
out
xor
push
mov
aas
lock
daa
adc
mov
xlat
cmpl
push
pop
hlt
push
mov
inc
sbb
pop
rcrl
lods
xor
ja
notl
mov
mov
xchg
ret
pop
jge
popa
call
and
loopne
push
jne
cmpb
pop
test
lea
test
popa
inc
jno
mov
repnz
scas
xor
adc
jb
pop
pop
jg
div
test
add
dec
cmp
mov
fidivrl
mov
inc
mov
dec
test
mov
mov
stos
outsb
add
rclb
data16
jnp
stos
int
or
and
or
repz
add
out
packssdw
std
adc
aas
arpl
stos
shlb
lret
pop
enter
mov
int
mov
xchg
in
mov
pop
push
mov
outsl
sbb
rcrl
pop
cmc
inc
stos
ds
call
jmp
push
lcall
sarb
leave
inc
sub
data16
ficomps
imul
jmp
lock
repz
loope
jge
xor
sbb
gs
pop
adc
fisubl
inc
lds
std
pop
xor
inc
dec
jge
gs
cmp
mov
roll
adc
adcl
xchg
xchg
sbb
and
pop
cmpsb
arpl
jb
in
in
arpl
cs
ret
dec
cwtl
std
repnz
loope
cmp
fisttps
or
jno
dec
jp
xor
dec
movsl
hlt
adc
inc
inc
sbb
fucomp
cmpl
arpl
dec
mov
subl
inc
mov
jle
nop
xchg
test
das
addr16
adc
aaa
adc
loop
popf
and
cmp
orb
inc
inc
out
pop
push
gs
mov
pop
popf
ret
stos
jne
jl
repz
dec
adc
lret
lcall
dec
mov
loope
aas
lods
cwtl
push
lea
outsb
test
in
cmp
xor
push
ja
aam
add
pop
or
stc
push
mov
loop
pop
sub
int3
aam
inc
cmpsl
xchg
adc
rorb
in
hlt
and
in
fsubrp
lea
es
xlat
fsubrs
and
fidivl
aam
adc
testb
shr
pop
lcall
cmp
ds
inc
xor
and
mov
or
dec
mov
and
push
and
fcoml
dec
movb
dec
scas
pop
in
mov
pop
xchg
orb
add
xchg
cmpsb
pop
add
pusha
cmpsb
ljmp
jno
ret
imul
loopne
test
flds
test
stos
or
int3
dec
adc
fs
or
imul
push
inc
cmp
sbb
mov
cmpsl
jne
pop
jne
test
sarl
sbb
sti
frstor
mov
stos
clc
ret
cmp
mov
push
filds
mov
mov
std
ja
cmpsl
in
out
pop
lret
push
fidivl
in
sbb
mov
pop
jbe
xchg
fwait
inc
and
adc
cs
jp
call
cmp
mov
sbb
testb
jecxz
call
xchg
xor
mov
call
jns
jg
pop
fcompl
outsb
aad
mov
ss
push
and
jne
mov
dec
je
xor
clc
mov
pop
shlb
mov
cwtl
setne
lods
xchg
adc
test
cmp
lret
inc
pop
mov
sbb
out
jns
push
jmp
sbb
pop
or
sbb
in
xor
outsb
inc
adc
add
cmpsb
cmc
jecxz
cmpsl
and
sbb
xchg
xor
js
mov
jae
jnp
mov
pop
mov
in
push
xlat
iret
insl
and
aam
xchg
mov
pop
mov
in
and
and
dec
mov
nop
cld
test
sub
mulps
jmp
dec
push
mov
cmpsb
aam
sub
mov
xchg
xor
cs
pop
rorl
fsub
outsl
push
add
xchg
pushf
jg
ss
test
in
es
inc
jne
call
je
les
mov
roll
push
adc
sub
movsb
das
popa
and
aad
sahf
dec
rcll
sub
dec
cltd
test
push
mov
in
jge
cmpsl
shl
inc
jne
cltd
lea
mov
test
daa
sbbl
addb
push
push
ja
pop
add
mov
xchg
adc
xor
ret
push
dec
mov
xor
lds
add
icebp
andl
and
pop
push
inc
mov
jg
frstor
sub
xchg
rolb
jbe
dec
cld
jmp
adc
adc
adc
sahf
jo
filds
es
jnp
jg
mov
sbb
xor
imul
test
bound
or
ret
push
fmul
inc
pop
mov
pusha
push
jb
sbb
inc
pushl
fwait
in
rolb
mov
aad
outsb
outsb
in
cmpsl
pop
inc
insl
adc
and
pop
ja
mov
push
js
es
pop
out
push
jo
xor
mov
push
cmpsl
mov
lahf
mov
mov
sub
int
scas
and
cmp
hlt
push
push
gs
rorl
mov
mov
stos
mov
ret
mov
mov
pop
and
mov
add
lea
insl
in
dec
iret
insb
imul
dec
shlb
mov
ret
add
xor
and
and
mov
and
pusha
gs
and
mov
cli
pop
cmp
aam
mov
jb
and
addr16
cmp
pop
dec
pop
mov
xor
out
sub
fwait
lock
in
cmpsb
aam
cmp
inc
aad
dec
or
push
dec
pop
inc
fs
mov
mov
push
aam
subb
sub
mov
pop
mov
and
mov
pop
sbb
jbe
sub
sarb
push
popf
lcall
stos
sbb
outsb
cwtl
idiv
leave
test
rol
arpl
push
xchg
iret
pop
popa
jmp
or
lret
mov
loopne
aas
mov
int
xchg
mov
cmpsl
xchg
push
xor
jb
push
fiadds
addr16
mov
repz
cmp
mov
int
js
jno
mov
jae
pop
outsb
repz
push
clc
imul
loopne
sub
sbb
jns
mov
jbe
inc
int3
or
iret
mov
mov
or
fisubrl
push
test
fst
in
cli
adc
inc
clc
sti
or
mov
and
dec
les
jle
dec
or
ljmp
stc
cmp
adc
xor
rclb
inc
jae
push
cmp
fwait
lret
cmc
add
shr
mov
or
inc
rcr
outsl
ret
fcmovb
imul
mov
aaa
movsl
fs
pop
mov
add
lock
movsl
dec
test
lods
jmp
test
xchg
stos
gs
out
mull
mov
sbb
dec
orb
cmp
sahf
and
nop
cld
mov
js
sbb
loopne
in
std
xor
icebp
sub
outsl
mov
and
push
lret
push
movl
cmp
aad
xchg
icebp
xor
mov
shr
and
insl
repz
xchg
inc
mov
inc
sub
and
mov
je
push
fstl
push
or
jle
jb
xor
jne
jnp
xor
mov
push
xor
dec
xor
dec
test
add
leave
add
xchg
pop
pop
jg
mov
insl
jmp
sbb
inc
ret
mov
je
movsb
outsl
push
adc
add
in
jae
sub
adc
or
xor
jns
jle
sub
mov
aam
test
data16
fmuls
sbb
push
cmp
jb
mov
es
std
pop
xchg
and
pop
jl
cmpsl
and
mov
popa
jecxz
pop
inc
xor
lret
jle
jmp
xchg
stc
lret
push
pop
or
shrb
addb
test
dec
fcmovnbe
mov
and
loope
pop
ficoml
jo
cmp
dec
mov
jp
jae
sar
push
out
sbb
cmpsl
add
inc
cmp
mov
outsl
jge
pop
xor
xor
lock
fs
ds
pop
andl
mov
push
arpl
mov
sarl
in
or
xchg
sahf
fstl
rclb
lods
insb
in
sub
mov
stos
in
push
mov
push
pop
pop
icebp
cltd
divb
test
scas
in
inc
pop
inc
mov
xchg
inc
inc
and
leave
sub
cmp
pop
loop
pop
jo
mov
loopne
stc
cmp
stos
sub
bound
insb
in
enter
push
lea
scas
mov
sbb
leave
xchg
aad
insl
push
push
mov
add
popa
cmc
mov
nop
and
fnsave
das
jmp
and
mov
jbe
dec
push
inc
or
lret
dec
stc
pop
xchg
hlt
xchg
push
and
lret
mov
inc
ret
cwtl
fcomps
repnz
jb
xorl
xchg
int
hlt
ss
nop
je
stc
adc
xchg
dec
loopne
pop
sbb
arpl
dec
sub
sub
mov
jmp
addr16
and
xchg
add
add
xlat
inc
loope
cmp
xchg
notl
sahf
mov
mov
xchg
add
xchg
scas
cmp
or
ds
mov
addr16
and
lahf
das
mov
sti
lds
outsl
mov
fisttpl
out
and
ret
pop
cmpsb
xchg
addr16
sti
cld
mov
jnp
mov
gs
and
pop
cmp
dec
xchg
hlt
loop
insl
mov
pop
sub
iret
lahf
test
rcll
adc
in
das
mov
sub
push
mov
sbb
cwtl
arpl
xchg
push
mov
or
scas
rolb
and
out
jmp
cmp
pop
loope
rdtsc
mov
popa
xchg
js
xchg
xchg
rclb
das
xor
sbb
mov
and
fneni(8087
xchg
out
sbb
sti
out
sti
test
sub
in
fdivrs
adc
movsb
xchg
nop
pop
es
sub
enter
mov
adc
sub
push
fimull
inc
mov
fidivs
int3
xlat
sbb
sahf
mov
add
and
jae
pop
xchg
and
leave
jmp
or
aad
pop
adc
push
cs
push
mov
and
popf
scas
push
incb
out
addr16
or
leave
xlat
add
inc
mov
insl
loopne
sbb
cmpsb
mov
xchg
shrl
cwtl
sbb
mov
or
jnp
jecxz
cmp
les
movsl
xchg
add
stos
add
dec
xor
adc
jmp
xchg
jp
xchg
add
push
jno
or
add
aam
sbb
xor
repnz
pop
ficomps
add
sbb
repnz
mov
jne
imul
popf
jo
sbb
aaa
push
jl
lods
mov
insl
pushf
mov
and
sub
sub
in
insb
scas
cmc
test
adc
cmpsl
push
shr
pop
shlb
adc
cmp
pop
icebp
fidivl
outsl
jne
clc
xlat
ret
loope
in
mov
dec
stos
aam
movb
rclb
fistpl
fsubl
test
sbbl
mov
mov
nop
ljmp
mov
inc
mov
cmp
or
out
add
cwtl
pop
inc
mov
add
jae
add
xchg
out
xchg
xor
mov
leave
pop
jp
mov
mov
or
jmp
xchg
arpl
dec
repz
shlb
xchg
cmpsb
sti
adc
sub
jae
xchg
dec
pop
nop
lock
out
sub
fwait
call
mov
and
fs
clc
mov
inc
and
adcl
into
mov
xchg
cwtl
sub
int3
cmp
mov
pop
mov
and
jns
arpl
mul
out
int3
mov
mov
out
out
js
in
test
sub
scas
pop
mov
mov
push
push
dec
in
add
push
in
lahf
es
iret
mov
out
hlt
add
xchg
mov
and
push
mov
addr16
add
cld
ljmp
daa
bound
stc
ret
jnp
add
mov
or
je
aas
insl
push
jmp
push
push
cld
mov
push
ret
cmp
or
xor
inc
jle
aas
in
imul
dec
add
mov
pop
cmp
lea
jnp
add
pop
pop
jp
lods
push
mov
js
imul
in
xor
ret
mov
mov
das
rep
and
stos
loop
sbb
push
int
ret
cmp
and
rcrb
or
mov
test
test
ss
int3
dec
fistpl
mov
outsb
inc
rcll
shl
addr16
sub
adc
sub
aam
push
mov
mov
ds
call
add
mov
orb
leave
mov
cmp
sub
shrb
rcrl
sub
cmc
pusha
pop
mov
andb
and
fs
push
fwait
cmpsb
sub
mov
jae
inc
push
pop
sub
call
in
in
in
ljmp
pop
jge
cmpsb
adc
mov
add
push
js
pop
cltd
daa
and
inc
or
rol
sti
aaa
int
fcmovbe
fldl
xor
jne
sbb
cs
ljmp
in
lea
sti
out
and
adc
and
inc
mov
push
or
cmc
or
rolb
fsubl
lock
pop
sub
cld
push
and
shl
or
scas
cli
js
ret
xchg
and
mov
daa
pop
push
in
ror
push
xchg
cmpsl
into
pop
jb
sbb
jbe
add
popf
xor
lret
cmpsl
pop
cld
subl
mov
xor
movsb
dec
push
or
out
inc
pop
lret
sahf
into
mov
sub
out
ss
loopne
rcll
sub
jp
dec
aam
sub
test
cs
sub
jno
or
mov
and
add
pop
fcoms
and
jno
andl
add
out
lret
fisubrs
push
movsb
or
aas
adc
hlt
cmp
fs
js
push
popf
and
ret
dec
jae
sbb
sub
or
push
mov
xchg
adc
daa
inc
cltd
push
nop
cmp
cmp
xchg
cmpsb
cld
sbb
jns
fildll
fdivrp
into
jnp
push
jecxz
and
sbb
movsb
cld
mov
pop
or
dec
popa
cmp
shlb
mov
je
cmp
fwait
in
enter
push
mov
mov
pop
psrld
ret
add
sbb
inc
in
sub
fnstsw
cli
sub
cmp
sbb
sub
cmp
ss
mov
int
mov
shlb
pop
or
in
sahf
pushf
mov
movsb
movsb
sbb
xor
stos
movsb
jo
lds
sub
jmp
add
out
cs
xor
in
jle
addb
jo
jge
orl
jbe
cmpsl
dec
or
imul
ljmp
add
rclb
or
mov
nop
imul
push
or
divb
push
inc
ja
sbb
mov
out
stos
scas
xchg
cmp
imul
in
shl
mov
std
sbb
je
mov
test
xchg
dec
xchg
pop
sub
aad
fiadds
and
cmp
or
lods
mov
cmovl
dec
cmpb
rorb
mov
dec
fcomp
dec
pop
sub
cmpsl
xchg
cmpsb
fwait
adc
push
dec
sbb
int3
mov
and
fucomi
outsb
add
push
not
mov
loope
int
testb
inc
adc
inc
add
outsl
movsl
iret
or
stos
out
push
mov
add
pusha
adc
inc
dec
jbe
jecxz
sub
pusha
push
call
sub
cmp
cmp
ret
or
fwait
aas
and
cvttps2pi
mov
mov
jg
push
mov
hlt
pop
div
adc
pushl
or
cmp
fistpl
dec
mov
cmp
jb
imul
jecxz
jbe
ret
cmp
addb
dec
aaa
nop
jmp
ret
inc
push
dec
fadd
jb
orb
daa
adc
ret
popa
sub
sbb
inc
sbb
clc
iret
xlat
add
ljmp
fwait
cmpsb
xchg
xor
filds
inc
icebp
subb
dec
add
cli
jmp
dec
fnstcw
xlat
cmpsl
pop
fwait
mov
pop
bnd
clc
bound
mov
adcl
into
orl
leave
ljmp
addb
aas
aam
xor
dec
js
or
inc
cmp
call
mov
mov
fisubs
rolb
mov
cmpsb
push
sub
push
mov
pop
pop
lea
or
shrb
jne
mov
mov
pop
imul
test
test
in
xchg
test
icebp
push
test
fisubrl
push
bound
sub
dec
mov
je
pushf
std
movsl
shlb
in
dec
xor
cmp
arpl
xor
cmc
or
sub
pop
sub
stos
and
sbb
push
in
inc
ficomps
inc
stos
dec
inc
jbe
xchg
mov
leave
dec
shl
testl
push
and
pop
sub
addr16
das
jno
cmp
xor
mov
jecxz
pop
add
or
pop
arpl
adc
testb
and
jp
mov
push
iret
and
mov
ret
inc
cmpsl
jmp
daa
data16
pop
mov
in
into
mov
lret
sub
jecxz
pop
mov
dec
fisubl
jns
push
popa
nop
jg
lods
xchg
jmp
mov
pop
push
xchg
dec
inc
loopew
xlat
xor
test
or
inc
or
daa
mov
cmp
push
mov
hlt
movsb
call
stos
sbb
pop
fsubrl
push
xchg
cmp
sub
push
in
stos
fwait
xchg
jne
iret
stos
mov
and
mov
fnstenv
mov
int
int3
cmp
loopne
dec
jecxz
loope
dec
nop
addr16
cmc
push
shlb
mov
or
fisubl
xor
arpl
dec
mov
mov
or
mov
clc
and
pop
and
addb
xchg
insl
push
divb
xor
xor
stos
jno
test
mov
mov
int3
cmpsl
add
adc
jmp
push
push
shrb
sbb
int
ljmp
out
jnp
fs
inc
sti
negl
and
mov
or
push
mov
inc
out
shll
mov
mov
mov
cmpsl
add
insl
inc
popf
lcall
pop
outsb
stos
xor
out
enter
ja
jmp
sbb
fwait
mov
and
and
adc
dec
xor
into
jmp
lods
xchg
repz
loop
gs
pop
pushf
mov
insb
push
jge
xor
ss
cmp
cmc
lret
push
aaa
loop
seta
jg
in
lods
mov
jg
fwait
arpl
movsb
adc
lcall
xor
jo
fs
iret
add
inc
filds
mov
or
lods
push
daa
sahf
xor
lock
and
popf
cmp
fbstp
jp
push
fstpt
push
aaa
push
test
add
jne,pt
inc
pusha
popa
inc
jno
sub
out
xchg
xlat
inc
js
xor
orb
cmp
push
sbb
adc
dec
pop
pop
inc
mov
lock
push
ret
pop
test
jno
ficoms
cmp
and
fsubrs
hlt
jg
leave
test
and
adc
dec
xchg
rclb
cld
clc
push
iret
jg
cmp
les
cld
outsl
xchg
or
hlt
dec
pop
clc
jae
out
xor
or
push
add
add
cmc
push
out
or
mov
nop
push
imul
or
add
sbb
inc
hlt
movsb
jp
pop
push
in
inc
jo
xlat
push
fadds
int
jno
pop
adc
xor
lock
rcrb
lock
bound
repnz
or
into
rcll
aam
into
pop
sub
jno
push
sti
dec
lock
pop
xchg
cmp
shlb
pop
mov
fdivr
jb
mov
sub
mov
pop
or
sub
xor
movsb
push
mov
and
dec
jle
clc
test
pop
dec
pop
mov
pop
scas
bound
gs
mov
sbb
mov
cmpsl
ss
cmp
jno
or
fidivrl
mov
and
pop
mov
cltd
fdivs
sbb
mov
cld
jno
sub
test
out
iret
xor
pusha
pop
push
mov
adcl
dec
pop
fcoml
aad
mov
lcall
dec
pop
call
dec
cmp
jl
fildll
icebp
cmc
add
int3
inc
pop
out
or
mov
test
xor
lock
push
sub
aaa
aam
int
dec
mov
cli
push
arpl
shl
adc
sub
sbb
movsb
jns
in
cld
dec
add
cmp
cltd
adcb
adc
outsb
jns
mov
push
andb
add
push
jno
push
adc
in
or
cmc
pop
mov
push
mov
push
arpl
out
pushf
dec
mov
push
jo
std
and
mov
icebp
or
test
xlat
orl
sub
mov
out
call
push
mov
xchg
std
jecxz
pop
scas
stc
nop
ficomps
shll
std
sbb
mov
sub
sub
and
mov
popf
or
es
sub
cwtl
mov
sarl
cmove
mov
pop
in
scas
sub
or
sbb
or
popf
lahf
inc
into
cmpsb
leave
xor
lods
dec
loopne
es
mov
scas
pop
cmp
lds
call
pop
aas
int
fcoml
mov
push
sub
jne
mov
dec
sbb
adc
sub
mov
lcall
dec
mov
aam
inc
aas
mov
fistps
clc
cmpsb
add
add
aam
sub
loop
jl
shr
and
pop
jo
cmp
inc
mov
inc
add
aas
dec
leave
cmp
test
xchg
adc
out
iret
jnp
inc
fsubrl
sub
xchg
shrl
adc
pop
aam
call
addl
loope
arpl
mov
push
xchg
push
pop
pusha
imul
sub
sub
in
lods
add
insb
in
stos
pop
repz
shrb
xchg
popl
add
call
lea
mov
pop
jne
adcl
aaa
das
push
and
jge
repz
mov
out
mov
stos
xchg
popa
lods
jno
jbe
cmp
adc
sub
cmp
sbb
jnp
jg
rorl
outsl
push
shll
jp
sub
xlat
cltd
popa
lds
fsub
movsl
pop
imul
xor
outsb
mov
and
bound
ljmp
loopne
push
sbb
rol
nop
loop
mov
js
sarb
add
adc
adc
and
sbb
jg
lock
shl
fistpl
and
jl
ret
sbb
mov
test
sbb
jo
jne
push
stc
popl
cmp
and
cli
cld
gs
popf
fs
xor
sbb
sbb
push
pop
aad
dec
inc
or
vmovaps
jb
cltd
push
test
in
cwtl
mov
sbb
call
sti
dec
add
mov
mov
push
pusha
mov
jne
lods
scas
mov
push
jl
int3
and
push
in
insb
xor
pop
ds
fildll
daa
or
mov
mov
dec
push
push
push
inc
jne
pop
sub
mov
es
clc
bound
test
out
lock
fs
ja
lds
mov
add
jbe
pop
push
jno
xor
sub
mov
jp
pop
push
fsub
aas
mov
sarb
movsb
dec
dec
lahf
out
frstor
lock
sahf
imul
mov
in
mov
sub
out
lret
popa
cli
add
mov
add
into
shl
pushf
ss
adcb
mov
clc
aaa
and
pusha
xchg
and
cmp
pop
jbe
push
lret
cmp
lods
lds
jb
ret
mov
mov
test
jl
dec
add
mov
and
outsb
inc
adc
ss
mov
sarl
ret
movsl
aad
pop
mov
lahf
or
sahf
stc
adc
divl
add
scas
xor
popf
xchg
rcl
je,pt
and
out
ja
lret
inc
adc
adc
mov
inc
clc
pushw
lahf
cmp
adcb
add
cmpsl
sub
push
jp
std
sbb
sahf
cmp
insl
subl
icebp
mov
and
aad
mov
sub
jmp
cmovge
ss
packsswb
test
adc
enter
bound
loope
cli
int
rcr
inc
negb
jle
cwtl
and
cmpsl
push
in
jmp
aam
xchg
stc
mov
in
loop
xor
lcall
andl
test
loopne
xlat
xchg
lods
inc
sbb
or
push
mov
jmp
in
mov
int3
pop
and
ljmp
mov
pusha
aad
in
and
cli
data16
mov
jge
lcall
cs
sti
outsb
in
pusha
inc
pop
xchg
sbb
dec
adc
sti
xchg
sahf
jnp
add
in
insb
mov
ja
push
xchg
or
jmp
ss
cs
cmp
adc
mov
outsl
nop
insb
mov
pop
dec
movsb
pop
mov
leave
mov
push
bound
add
mov
imul
mov
xlat
cmp
or
call
and
fwait
scas
loopne
cmpl
and
xchg
ret
sub
test
fxch
pop
in
mov
jl
inc
aas
das
mov
out
jge,pn
or
push
call
cmp
mov
and
loope
rcrb
or
xchg
mov
cwtl
adc
into
jne
xor
cmp
xor
push
sub
add
jno
mov
pop
inc
add
cmp
repz
lret
lcall
decl
pushf
shlb
cwtl
cwtl
rorb
aad
aaa
dec
mov
outsl
pop
out
pop
out
ficompl
jle
stos
sbb
lods
xor
sahf
sti
add
jo
fimull
and
inc
xchg
and
dec
sbb
test
jge
sbb
lret
imul
scas
mov
mov
call
and
dec
movsl
adc
add
push
inc
dec
dec
inc
shl
pop
pop
dec
xor
push
pop
arpl
and
out
pop
inc
std
xor
cmp
out
dec
vstmxcsr
jmp
inc
je
jns
xchg
pop
clc
xchg
loope
out
loop
jb
movsl
or
or
mov
leave
xchg
jle
cmp
push
cmp
jg
mov
das
cs
push
ljmp
je
sti
call
insl
adc
add
inc
cmc
jno
popa
add
arpl
mov
cltd
mov
sahf
scas
xlat
scas
xor
lret
fistpl
fcoml
push
scas
movsb
stos
jle
inc
arpl
xor
inc
call
mov
jp
shlb
jecxz
dec
enter
push
push
fsubs
mov
add
movsb
sub
sarl
adc
xor
mov
mov
hlt
push
lds
xchg
add
lock
xchg
in
lods
ret
push
cmp
cmpsb
push
mov
push
xchg
stos
icebp
mov
popa
addl
gs
mov
int3
mov
addr16
pop
imul
xchg
dec
les
xchg
orb
or
mov
pop
std
mov
xorl
sub
sub
sbb
sub
xchg
leave
dec
pop
push
in
ljmp
and
pop
push
fstpl
mov
repnz
and
mov
lcall
ds
std
icebp
popa
pop
faddp
fistpl
and
sub
xchg
movsb
mov
test
pop
add
dec
cltd
outsb
mov
jb
add
pop
fsub
pop
mov
mov
or
inc
sub
xor
push
pop
pop
arpl
bound
cmp
cld
xchg
ss
sbb
sub
and
cmp
test
inc
repnz
int
push
repnz
xchg
jle
inc
stos
sub
jl
aad
add
push
fsub
lock
push
fwait
lret
stos
sub
push
xor
dec
mov
lahf
push
xchg
stos
jb
xchg
sub
roll
mov
mov
jp
sbb
imul
rorb
lods
fidivs
leave
or
fs
xchg
orl
stos
decl
sub
notl
pop
adc
clc
push
out
cli
cmpsl
ljmp
jp
add
jnp
cmp
push
lea
fwait
jno
mov
cmp
sbb
dec
and
sub
push
test
inc
mov
rcll
adc
fsubrs
inc
cltd
loope
inc
cmp
mov
push
and
shr
andl
mov
bound
push
lret
mov
popa
int3
sub
adc
pop
sbb
in
xor
pop
movsb
call
mov
pop
cmp
xchg
aad
push
iret
pop
mov
dec
sub
cld
out
shlb
call
push
or
dec
fisttpll
pop
movsl
andb
in
adc
sahf
jo
movsb
jl
xor
mov
imul
sub
sbb
sub
repz
cwtl
int3
inc
cmp
mov
pop
xor
dec
mov
lds
xchg
cs
cld
pop
stos
mov
in
outsb
adc
and
cs
adc
in
sbb
mov
adc
int
scas
and
stos
aas
inc
roll
bound
ljmp
in
jle
and
adc
sbb
xor
sbb
mov
sti
scas
fimuls
popa
push
dec
hlt
mov
and
or
movb
push
push
inc
sahf
mov
ss
filds
cmpsl
test
cwtl
xchg
cmp
dec
pusha
inc
scas
inc
mov
lods
inc
and
lret
push
ss
rclb
int
adcb
mov
xlat
pusha
jbe
add
inc
jge
es
or
sub
pop
pushf
insb
gs
fdivs
aaa
inc
sbb
jbe
dec
imul
popf
lods
or
xchg
inc
cmpsl
ret
xor
sub
lods
mov
jbe
xchg
cmp
jp
clc
push
push
pusha
fcomip
mov
aam
mov
or
jae
aad
lret
pusha
bound
inc
inc
and
iret
xchg
xchg
and
ror
mov
in
insl
es
in
fidivs
out
test
pop
dec
xorb
out
lods
in
mov
lds
pop
push
mov
xchg
inc
aam
fldl
adc
sahf
mov
jno
jge
dec
enter
push
inc
mov
mov
cs
dec
xchg
and
jo
dec
sub
sbb
sub
jle
push
lods
lock
xor
mov
push
test
andb
cmpl
enter
pop
in
dec
stos
pop
or
loope
mov
scas
scas
popf
fwait
xchg
lds
dec
cwtl
sbb
daa
aam
sub
clc
xchg
mov
outsb
mov
inc
stos
cmp
lds
sub
cmp
loop,pt
mov
xchg
dec
aam
cmc
pop
jns
sbb
shlb
test
ljmp
cmp
adc
mov
lods
ljmp
add
into
call
jno
popa
sub
mov
add
test
inc
outsl
cmp
out
sahf
push
jne
pop
inc
xlat
mov
lds
push
pop
test
jg
ret
ljmp
xchg
pusha
cld
sahf
outsl
mov
xchg
sub
dec
xchg
mov
cmpb
adc
sbb
imul
pop
xchg
sbb
cmp
in
pop
les
loope
in
sbb
jl
outsb
inc
bnd
in
ds
sub
xchg
aam
dec
jmp
pop
xor
sub
mov
xchg
not
xchg
sahf
inc
and
in
xor
xchg
mov
xchg
fucomip
dec
repnz
gs
cli
jle
cmc
test
jns
adc
pushf
inc
mov
jl
add
negb
shlb
jp
out
shrl
xchg
pop
popf
adc
sub
lock
fisttps
xor
jnp
adcl
lret
xor
mov
das
fcmove
repnz
mov
mov
add
push
aam
mov
in
fistpl
out
or
dec
sbb
push
aam
in
jno
test
idiv
divl
lcall
popa
je
push
jge
loop
xlat
out
arpl
mov
cli
and
out
dec
stos
aaa
push
xor
sub
mov
mov
cmp
mov
xor
test
add
ret
repnz
cmp
mov
les
cli
cwtl
and
inc
add
xchg
jno
pop
bound
arpl
cmp
sub
pop
xchg
notl
jns
jecxz
push
popa
jns
scas
pop
icebp
and
push
push
fidivrs
pushf
mov
sub
cmp
xchg
mov
push
pushf
jge
mov
add
adc
pop
mov
cwtl
sti
aas
js
outsl
adc
stc
and
and
cmp
test
and
add
mov
push
hlt
jle,pt
lds
dec
dec
dec
outsl
lods
and
aaa
dec
cmc
test
inc
popf
jae
ret
push
inc
pusha
lret
sub
in
insl
jbe
xchg
inc
fwait
aad
cmpsl
fcmovnu
es
dec
mov
adc
xchg
mov
dec
adc
test
inc
add
or
cli
fcomi
fildl
mov
pop
xchg
rcr
in
pop
andl
dec
imul
jbe
je
xorb
xchg
ja
sub
sbb
out
in
cli
cmp
jmp
cmp
jnp
cmp
pop
popf
in
push
pop
cmc
cmp
pop
testb
fs
mov
in
pop
dec
lahf
mov
hlt
push
imul
lret
sub
sub
push
gs
daa
lds
mov
mov
xor
test
lcall
addr16
int
ljmp
lods
inc
and
cmp
popf
adc
xor
std
bound
das
add
push
arpl
insb
insl
or
dec
dec
ljmp
and
scas
ss
push
sahf
adc
int
mov
mov
pushf
jne
stos
and
dec
mov
cli
jp
mov
push
jg
fidivs
scas
lret
jae
cmp
out
push
int3
push
cmp
or
popa
fisttpll
dec
dec
je
sub
dec
hlt
int3
lcall
lret
and
and
hlt
outsb
fwait
scas
sub
adc
xchg
lahf
dec
adc
xchg
into
out
repnz
push
fmulp
pop
std
inc
xchg
ss
lret
imul
lea
popf
jae
movsb
sbb
loopne
mov
stos
stc
std
inc
mov
xor
mov
lock
test
sbb
or
pop
or
dec
imul
pop
ss
xchg
add
fnstsw
iret
inc
mov
lret
sub
fidivs
jnp
out
mov
outsl
orb
sar
sbb
data16
out
jno
popf
pop
into
or
js
lods
lcall
lds
mov
shlb
call
scas
insb
iret
fsts
sarb
ljmp
inc
add
lods
push
jnp
sub
push
inc
out
and
jae
jnp
in
inc
repz
jmp
xor
icebp
int3
in
cmp
sbb
aaa
cs
insb
mov
or
jnp
outsb
and
and
mov
cmpsb
dec
stos
cwtl
adc
sub
subl
lds
lock
xlat
inc
xchg
cwtl
add
subl
push
ror
and
push
fwait
loopne
outsb
push
loope
cmp
push
test
or
pop
aas
xor
jle
ffree
cmpsl
or
pop
or
jl
push
adc
pusha
add
pushf
call
call
cli
xor
mov
loope
int3
in
out
pushf
fcmovbe
dec
xchg
adc
lods
jbe
and
in
loope
xchg
test
scas
test
int
pop
sbb
int3
adc
nop
daa
push
mov
fnsave
and
fiadds
sbb
lock
mov
les
adc
pusha
and
pop
rorl
xor
inc
in
jmp
mov
push
jno
jbe
adcl
inc
jno
dec
cmpsl
arpl
xlat
stos
and
fistl
mov
leave
int3
rorb
sbb
cmc
loope,pn
outsb
xchg
dec
inc
push
rolb
in
push
jae
rol
out
mov
dec
loopne
out
rcll
inc
sub
inc
lret
adc
mov
or
fdivrs
stc
mov
and
loope
pop
push
out
addb
mov
sub
out
push
or
stc
jae
inc
stc
fcmovb
subl
dec
outsl
fildll
jecxz
leave
shlb
pop
fwait
mov
adc
pop
fdivs
cmp
ljmp
test
std
mov
jmp
push
cmp
shrl
loope
lock
dec
xor
dec
inc
push
imul
test
xchg
rcr
sub
insb
ds
mov
imul
add
sbb
mov
mov
jge
pop
jl
mov
jmp
cmc
pop
sbb
cwtl
ljmp
pop
lret
adc
push
outsb
aam
push
jb
lret
sub
lahf
xor
mov
sarl
sbb
fcmovnu
xchg
sub
fsubr
mov
inc
mov
xchg
lcall
push
test
dec
mov
jmp
adc
and
loope
mov
test
jle
push
mov
sbb
and
sub
inc
adc
mov
lret
insl
sub
push
js
gs
aas
or
add
xchg
scas
and
mov
rcrl
pop
mov
pop
insl
inc
data16
mov
adc
xlat
xchg
and
mov
int3
aad
mov
add
push
jp
dec
mov
pop
in
sbb
insl
cmovno
out
jbe
push
fstl
rcll
and
jp
add
ljmp
xchg
aam
das
ds
mov
push
popa
dec
mov
jne
bound
hlt
pusha
pop
jae
and
or
and
push
mov
sub
push
adc
lcall
mul
add
fiadds
dec
or
clc
setb
roll
dec
jg
and
sub
sbb
push
mov
push
push
imul
rcl
xor
cmp
mov
cli
sub
outsb
adc
rol
popf
test
pop
out
mov
and
pop
ret
cli
sbb
lret
cli
mov
imul
rcrl
dec
xchg
shrb
aad
jmp
push
mov
inc
sahf
add
aas
mov
sbb
or
add
mov
or
outsb
inc
addb
insl
ret
push
jp
jae
testl
ja
pop
sbb
push
sub
push
or
mov
or
insb
push
pop
and
sbb
lea
push
cmpsb
fidivrs
pop
sub
push
and
in
mov
repnz
xor
inc
push
pop
scas
sahf
push
adc
pusha
mov
enter
or
ljmp
mov
fstps
sbb
xchg
push
rcll
push
lret
dec
loope
and
fildll
lods
pop
xor
inc
adc
insl
adc
lods
and
lahf
pop
decb
sbb
and
sub
cmpsb
cltd
js
enter
push
mov
ljmp
adc
sti
mull
iret
data16
push
sbb
pop
pop
subb
js
in
aad
pop
dec
xchg
or
mov
sbb
call
bound
jns
add
cmp
jg
jmp
bound
std
lods
int
repz
xchg
call
dec
mov
lret
push
and
filds
mov
add
push
jnp
loop
in
cli
call
cmp
sub
or
enter
xchg
decl
sbbl
cltd
pop
mov
cmp
lods
or
xchg
je
inc
dec
mov
xor
add
pusha
mov
fisttpll
jb
sbb
idiv
bound
push
lret
mov
mov
pop
cltd
in
inc
cmp
addr16
xchg
xchg
cltd
adc
nop
lea
dec
arpl
dec
lds
ror
out
enter
push
test
je
cmpl
mov
fwait
mov
add
faddl
cltd
ret
fs
insb
pop
cmp
cld
dec
insb
push
mov
enter
sbb
leave
xchg
cmp
lds
mov
jp
add
sub
cmp
add
or
add
mov
push
add
sti
in
push
les
pop
sbb
mov
dec
pop
testb
xor
mov
jbe
sub
ret
xchg
mov
mov
dec
mov
popf
fsubr
mov
fdiv
push
add
lret
cmp
sub
shr
pop
lret
je
lret
push
push
xor
or
gs
adc
mov
mov
inc
pop
dec
mov
out
insl
sub
xchg
daa
pop
nop
xor
pusha
das
std
mov
xor
mull
popa
dec
sar
inc
icebp
outsb
into
fstenv
aas
stos
aaa
in
mov
jo
cmpl
dec
push
dec
outsb
cmpsl
imul
inc
adc
insb
cmp
test
int
jno
xlat
mov
adc
jg
enter
dec
out
imul
push
popf
es
mov
or
iret
sub
outsb
push
mov
inc
gs
es
in
jmp
enter
jno
push
lret
rorl
les
push
movsb
cmpsb
xchg
cltd
dec
dec
scas
in
xchg
push
stc
push
outsl
lea
adc
lcall
xchg
pushw
dec
daa
in
repz
or
fwait
stc
int
cmp
sbbb
insb
mov
dec
out
lods
xchg
mov
popf
ljmp
testl
test
js
cmpsb
jns
xchg
mov
addr16
jg
repz
push
and
jbe
int3
adc
xor
adc
into
cmp
dec
cmp
and
ret
je
or
mov
and
je
add
dec
negb
cmp
scas
filds
pop
fwait
clc
idiv
mov
fnsave
mov
fs
pop
out
xchg
lret
iret
jmp
push
pop
xlat
fiaddl
rcrl
push
stc
rol
hlt
imul
sub
push
mov
fcoml
adc
std
in
je
ja
scas
sub
mov
lret
ret
or
xchg
mov
xorb
or
sbb
lock
call
xchg
xchg
pop
mov
orl
cmp
push
shll
lods
push
lods
xor
fwait
int
not
mov
sti
inc
popa
add
adc
xor
add
mov
or
mov
cli
lods
and
mov
sbb
or
xchg
adc
jb
test
mulb
sti
out
out
ret
jne
jns
cmp
mov
inc
jecxz
pop
jg
push
jnp
mov
rorl
xchg
jno
and
push
sub
popf
cltd
xor
jle
mov
mov
mov
lock
jge
jecxz
imul
pop
adc
cwtl
stos
cltd
mov
movsb
sbb
mov
aad
ss
inc
int
pop
or
inc
les
adc
imul
xchg
inc
push
pushf
inc
scas
les
dec
jae
jle
cmp
ja
mov
outsb
lods
mov
sbb
mov
push
mov
scas
jge
das
pop
dec
and
push
adc
sbb
dec
cs
jmp
and
gs
icebp
xorb
xchg
test
jo
je
pop
or
ja
stos
scas
lcall
lea
int3
je
inc
mov
repz
lret
sti
stos
inc
mov
mov
aam
filds
mov
xchg
lods
loopne
xchg
test
nop
adc
pop
es
mov
sbb
adc
test
xlat
data16
iret
das
dec
mov
push
scas
dec
pop
mov
movsb
pop
inc
jp
dec
das
sbb
insl
sub
aad
or
repnz
mov
jne
mov
in
pusha
ret
and
psrlw
push
mov
std
push
inc
lds
out
rcr
lahf
mov
in
lret
dec
mov
cmp
xchg
push
sarl
push
mov
test
cmp
xchg
fdivp
adc
ds
dec
fisubl
aaa
push
aas
and
mov
xor
fistpll
mov
adc
or
mov
fdivl
adc
pop
lods
lds
push
mov
mov
xchg
mov
mov
lcall
cmpsb
lea
mov
and
cwtl
fwait
cmp
jns
push
mov
inc
mov
icebp
pop
mov
nop
repz
push
mov
cmp
xchg
orl
push
movsb
pop
insb
sti
repnz
cmpsl
jge
into
mov
and
hlt
mov
xor
ja
lock
out
adc
sub
and
ja
repz
icebp
add
int3
mov
xlat
fsubrl
and
or
pop
lret
adc
and
ficomps
and
aad
xchg
sub
daa
push
iret
mov
ljmp
add
into
xor
addr16
icebp
scas
loopne
or
les
movsb
sahf
es
lret
mov
sahf
clc
je
mov
dec
mov
fadd
or
das
add
xor
mov
mov
sbb
rcrl
xchg
cmpsl
mov
ja
push
fmuls
push
sbb
rorl
nop
and
in
lea
jns
push
or
dec
xlat
adc
fcoms
mov
sahf
test
loope
movsb
fildll
mov
inc
jns
js
sarl
fimuls
mov
aas
or
in
aas
sbb
arpl
data16
in
inc
test
nop
pop
test
adc
loop
push
call
insl
lret
daa
mov
jno
cmp
xlat
and
fcomps
lret
das
out
adc
mov
xor
ret
cltd
cmp
cwtl
pop
in
aas
cmpsb
and
inc
mov
adc
jle
shlb
lock
xchg
je
pop
mov
inc
and
mov
int3
stos
dec
pop
mov
push
and
imul
inc
xchg
push
mov
icebp
push
xor
jmp
int
negb
sbb
aas
lea
sarb
in
pop
fcoms
mov
ror
pop
cmp
dec
in
push
push
aaa
push
and
sbb
adc
lock
shl
sub
add
vcvtps2pd
ss
inc
int3
mov
jno
ja
mov
push
outsb
push
push
movsl
pop
or
sub
inc
add
out
ficompl
xchg
loopne
outsb
sbb
dec
dec
or
adc
inc
xchg
lock
pop
or
lods
shr
inc
insl
pop
dec
push
incb
mov
mov
fidivrs
and
xchg
xlat
mov
loop
cltd
rsqrtps
pop
or
ret
adc
mov
push
cld
iret
lahf
out
jo
dec
clc
xchg
sbb
pop
pop
nop
sbb
sti
mov
imul
mov
imul
xchg
aad
push
in
cmp
sbb
pop
cmp
cmp
pop
xchg
sbb
test
mov
mov
xor
shl
loope
mov
lret
call
adc
aad
fidivl
jg
xchg
or
ljmp
sub
inc
inc
and
xor
neg
mov
xchg
int
cltd
and
push
mov
in
dec
outsb
sub
int
add
int
out
loopne
mov
add
iret
fdivrl
add
scas
xor
pop
or
sarb
test
js
data16
mov
shrl
rcll
jmp
nop
mov
jo
pop
cmc
leave
iret
jle
adc
mov
mov
push
mov
mov
js
stos
xor
dec
dec
xchg
and
and
or
in
mov
pop
jle
mov
les
inc
pusha
imul
and
jle
lea
sbbl
pop
stos
popf
jo
mov
sub
mov
mov
sub
pop
mov
imulb
adc
rolb
lods
repnz
cmc
call
out
insl
pop
adc
inc
fucom
divl
jg
mov
in
fildl
pop
xor
out
popa
mov
lcall
or
or
push
sti
cmp
push
jmp
adc
sub
cltd
test
cmpsb
add
cld
movsb
fwait
divb
jno
ficoml
push
aam
adc
push
mov
pop
or
jnp
xor
pusha
mov
int3
cli
mov
mov
nop
inc
loop
mov
xor
insb
inc
movsb
or
adc
pop
mov
inc
cmpsl
xor
mov
adc
in
notb
aam
int
cmpsb
push
xorb
mov
lret
add
popa
ret
scas
movsl
popl
gs
call
pop
aas
mov
jo
rcl
jp
xchg
push
shrl
icebp
cmc
sahf
mov
pop
je
sbb
in
push
sbb
movsb
inc
sbb
clc
rorb
pop
mov
inc
sarb
and
push
push
mov
pop
inc
push
pop
push
mov
test
stos
pushf
adc
xchg
enter
mov
shrb
cmp
shll
addr16
pushf
stc
fcomps
mov
push
imul
shll
mov
mov
or
out
mov
mov
aaa
sahf
jnp
cmp
js
jno
or
jnp
imul
frstor
inc
or
adc
and
sub
lock
jb
lea
cmp
loope
in
mov
inc
in
sti
orl
xchg
aam
loop
sbb
mov
mov
pop
xchg
leave
rcrb
repz
cmpl
in
xor
and
push
ret
adcb
lahf
imull
cmpsl
not
loopne
mov
rcrb
dec
cs
test
stc
test
inc
mov
mov
inc
adc
jne
into
cmpsl
imul
lahf
mov
shlb
inc
out
es
cmpsb
push
les
inc
dec
in
inc
mov
sbb
mov
lods
xlat
mov
push
jmp
nop
sub
cmp
adc
ret
sub
outsb
fimuls
cmp
push
lcall
and
or
hlt
add
dec
aas
add
pop
or
or
hlt
jb
cmp
jne
clc
je
arpl
les
inc
sbb
mov
cli
xor
rol
xchg
in
jg
mov
lahf
std
pusha
ss
das
shll
inc
push
lea
out
xor
test
add
scas
repnz
in
arpl
mov
mov
jge
out
and
xchg
add
adc
std
or
jns
xor
dec
jle
movsl
push
ljmp
or
outsb
stos
je
sbb
pop
lds
popa
xchg
rolb
xchg
pop
ficoms
pop
mov
pop
pop
inc
mov
mov
push
in
adc
rcr
leave
adc
mov
mov
je
or
inc
loop
mov
xor
mov
test
ds
fsubrl
dec
mov
pushf
dec
test
jmp
lods
add
push
xor
das
daa
mov
dec
xlat
sub
push
push
and
push
call
cmp
jge
data16
leave
jl
out
jge
add
jmp
insb
lret
adc
inc
into
jb
mov
or
jns
inc
movsb
xor
popf
imul
jae
xchg
jns
hlt
lds
add
cmc
js
incb
xor
pusha
lods
push
xor
test
cmpsl
mov
jne
arpl
adc
mov
aaa
data16
ret
cmp
insb
jecxz
lret
fbld
adc
pop
jecxz
loopne
mov
lret
aas
jl
scas
and
xor
xor
mov
and
push
scas
pusha
es
jne
or
ret
xchg
lret
ja
out
mov
lcall
xor
dec
int
mov
enter
fldenv
inc
cltd
out
add
enter
test
pop
pop
cmp
shlb
or
scas
dec
cmp
mov
mov
mov
popf
cli
dec
paddb
subl
sbb
iret
jb
sbb
popa
add
testl
loop
or
loop
lock
stos
sub
fcompl
cli
lret
and
adc
pop
cmp
ja
jmp
jecxz
jmp
dec
jne
inc
lahf
in
sub
ja
or
cmpsl
push
push
pushl
mov
lods
mov
js
sahf
mov
cmp
jp
cmp
adc
xchg
das
cmp
das
mov
pop
sub
add
xchg
jg
sub
mov
and
mov
ficompl
push
xchg
sbb
loop
fsubp
pusha
pop
pushf
and
adc
push
mov
dec
es
int
mov
xor
and
xor
jl
mov
sbb
sbb
scas
inc
out
adc
lods
daa
jno
jmp
dec
cmp
add
jp
outsb
jecxz
test
lods
cltd
mov
pop
fimull
mov
mov
mov
cvtpi2ps
popa
rcl
add
into
inc
adc
cld
fdivrs
cmpb
add
adc
add
sarb
add
sahf
mov
hlt
data16
add
in
ljmp
stos
and
sub
cmpsl
cmp
and
sbb
test
aas
fucomp
sahf
xchg
xchg
cmpl
cli
scas
cwtl
ja
arpl
mov
pop
leave
outsb
mov
sbb
mov
pop
lock
mov
call
dec
mov
fs
aas
pop
in
and
pop
lds
or
testl
insl
and
and
add
pop
call
jne
xor
inc
cmp
jle
push
imul
cmp
jno
gs
mov
hlt
ds
mov
cmp
ficompl
mov
call
ss
aam
addr16
daa
outsl
cmp
pop
rorb
aam
iret
push
mov
cltd
fldt
scas
sbb
push
xor
shlb
jno
stos
mov
cmp
pop
lea
outsb
out
pop
xor
cmp
dec
xlat
push
mov
xlat
outsl
pop
fimull
xchg
pop
gs
adc
pop
outsl
sub
pop
dec
cwtl
scas
pop
scas
cli
ljmp
sahf
pandn
int3
into
xchg
xor
pop
rcl
int3
push
and
push
inc
imul
cmp
xchg
or
mov
out
imul
lret
repnz
pop
stos
mov
dec
jne
push
pusha
mov
shrl
xchg
int
inc
adc
loopne
ds
or
adc
fwait
loop
dec
testl
fisubs
mov
mulb
push
insl
cltd
dec
dec
cli
pushf
mov
incl
jns
stos
imul
fsubs
mov
jge
nop
mov
jns
in
popf
fisubrs
roll
xor
dec
adc
scas
lcall
cmc
imul
insl
adc
ret
jg
out
jns
sbb
mov
mov
cltd
aad
jg
ja
and
outsb
addl
push
mov
std
sub
sti
sbbb
inc
outsl
int3
pop
insl
nop
adc
and
sub
mov
mov
loope
shll
jecxz
hlt
popf
xor
jecxz
aaa
andb
in
hlt
mov
xchg
pop
dec
cmpsb
fbstp
in
cmp
bound
mov
jns
pop
jne
pop
cmpl
cli
lock
push
stos
xchg
cmp
dec
call
in
fildl
aas
in
sahf
pusha
and
sub
cmp
pusha
dec
dec
pop
psubusb
cmc
sbb
cmc
cmpsl
push
mov
into
mov
mov
bnd
add
leave
in
pop
adc
scas
add
in
sub
hlt
pop
rolb
dec
xor
lea
sbb
jae
or
xchg
mov
xor
cmpsl
cmp
test
sahf
xchg
out
push
mov
add
out
push
ja
mov
xchg
mov
xor
cmc
aad
mov
mov
das
jle,pn
adc
xchg
add
sbb
push
xor
pop
pop
int
push
xchg
push
dec
pop
ret
push
movsl
xchg
pop
fbld
jnp
push
int3
scas
sub
outsb
cmp
lret
repnz
int3
dec
or
out
mov
insb
jnp
jns
scas
mov
ss
lcall
test
inc
xor
mov
daa
movsl
je
cmp
xchg
pop
out
repnz
or
adc
sarl
mov
imul
out
pop
or
jno
cmpsb
inc
push
cmpb
mov
dec
xchg
sub
jnp
jnp
or
mov
arpl
repz
scas
cmp
loop
aad
imul
pop
mov
push
outsb
mov
test
incl
and
je
xlat
mov
push
cs
iret
cltd
inc
repnz
outsl
xchg
loop
mov
jo
adc
shl
add
or
es
mov
adcb
imul
loop
push
pop
ficoml
lcall
dec
xchg
shlb
int
out
roll
dec
xchg
and
push
leave
subl
sub
sahf
xchg
aas
cld
adc
sbb
cld
ja
and
out
and
add
mov
dec
fiaddl
imul
ja
loopne
fistl
loope
cwtl
repnz
mov
ror
xchg
pop
push
mov
xor
sbb
mov
pushf
leave
lret
sub
mov
push
jle
pop
or
adc
add
and
cs
stos
movsb
stc
sbb
sub
shl
subl
mov
sarl
fiaddl
xchg
jbe
sub
pop
insb
mov
lahf
mov
adc
iret
int3
lock
stc
sub
sbb
int
dec
clc
cmpsb
mul
cmpsb
cmp
into
jecxz
insb
adc
aaa
sbbl
inc
sti
xchg
mul
je
dec
pop
xor
dec
jge
rolb
in
pop
out
call
fcmove
mov
addb
mov
cmp
movsb
insb
ret
xchg
or
pusha
adc
mov
adcb
mov
mull
add
pop
cmpsb
cli
cmp
scas
push
aad
push
adc
aas
leave
mov
sbb
xchg
xchg
mov
dec
push
mov
xchg
jg
lcall
push
push
nop
call
fcmovbe
les
add
loope
xor
je
cs
leave
lods
sbb
adc
rclb
ret
push
fimuls
adc
daa
shl
stc
add
fs
add
push
pop
pop
push
lahf
sahf
stc
pusha
ds
ss
inc
dec
inc
sub
inc
lret
mov
push
das
and
andb
repz
and
divl
ljmp
cmp
pop
jge
daa
jmp
mov
or
int
in
imul
dec
lret
jae
enter
pop
push
mov
and
roll
outsb
push
mov
popf
hlt
aad
aam
into
addr16
call
bound
roll
mov
fbld
sbb
fs
bound
shl
fmul
jle
mov
adcb
lahf
adc
leave
cld
xor
mov
sub
fcoms
mov
lret
test
loope
jnp
adc
shlb
movsl
and
js
dec
inc
in
dec
or
xchg
adc
mov
repz
sbb
mov
inc
rolb
mov
mov
dec
cwtl
call
ja
sub
mov
or
push
in
cmp
xor
fistpl
popf
pop
test
adc
add
push
sti
fildl
and
outsl
xchg
jg
popa
adc
out
or
mov
loop
into
repnz
jmp
cmp
pop
inc
shld
jne
icebp
mov
hlt
addr16
ljmp
and
mov
inc
pop
pushf
shll
div
xchg
stc
stos
mov
add
rclb
pop
shlb
xor
or
jmp
push
rcrl
sbb
cs
out
push
pushf
loop
test
or
bound
js
or
loopne
in
jo
mov
loop
jl
adc
aad
jb
lcall
movsb
jbe
cmp
sbb
test
xchg
es
add
icebp
jno
mov
dec
cmp
cmp
test
sub
push
enter
ds
dec
add
mov
dec
mov
xor
and
inc
or
lahf
bound
xchg
out
xor
push
in
push
imul
rcl
or
push
pop
mov
dec
outsl
outsb
stos
cmp
loopne
pop
lret
inc
addr16
fdivrs
insb
dec
inc
dec
sbb
mov
outsl
xchg
pop
adc
mov
movsb
cmpsb
mov
adc
push
out
aam
inc
ficompl
fwait
lods
subb
fs
or
push
xlat
divb
mov
aaa
imul
jp
lahf
ja
sbb
mov
sub
add
cmp
lds
in
out
fs
jno
rol
sub
mov
push
dec
add
addb
xchg
add
notb
stos
cmpsl
outsl
and
jno
jno
mov
push
or
sbb
std
inc
xchg
ljmp
pop
lock
adc
sub
dec
xor
fmull
scas
dec
pop
shrl
add
movsl
mov
cmp
scas
sub
dec
cmpsl
insl
aaa
lods
sbb
clc
mov
out
cmp
xchg
pushf
insl
jmp
xchg
push
adcl
scas
loopne
push
outsl
aaa
jl
insl
daa
ljmp
pop
negl
mov
sbb
or
jae
cmpsb
adc
gs
sub
call
iret
inc
cld
cld
push
mov
aad
mov
mov
movsb
fidivrs
add
or
fsts
xchg
out
imul
jge
pop
fists
add
call
jp
mov
gs
loopne
add
push
mov
loopne
mov
xchg
ret
jnp
pop
push
add
cmp
cmp
fnstsw
push
xchg
mov
jg
bound
es
mov
jae
dec
mov
jo
es
out
test
cmp
dec
ds
scas
iret
cmp
push
and
and
adc
push
pop
scas
std
das
lret
push
setns
hlt
cwtl
cmp
jo
inc
adc
sub
lods
sahf
add
or
rolb
lret
fcoms
gs
add
mov
xchg
mov
imul
mov
ljmp
pop
push
sbbl
outsl
adc
mov
test
or
mov
movsl
arpl
data16
push
clc
sub
dec
dec
test
fsubrl
mov
sbb
std
jg
adc
push
inc
aas
and
andb
es
jb
mov
stos
xor
mov
fwait
lock
cwtl
hlt
jb
adc
sbbb
aas
fcoms
clc
outsl
inc
scas
sub
insl
dec
mov
jmp
push
insb
or
dec
jmp
or
push
mov
add
push
mov
jmp
add
les
fbstp
dec
xor
imul
arpl
test
mov
bsr
lock
dec
push
test
stos
mov
xchg
sbb
xor
pop
adc
sub
jge
and
movsb
mov
mov
push
ds
addr16
xor
cld
loope
mov
sbb
hlt
andb
jl
loope
and
dec
incl
cmp
lahf
inc
pop
stos
cltd
ficompl
pop
scas
xchg
mov
aas
imul
aas
inc
jle
sub
aaa
cli
pop
dec
sahf
xorl
cmp
mov
out
enter
jns
shl
xchg
xchg
pop
mov
int
sbb
stos
jbe
loope
mov
insl
xor
jle
sub
adc
in
movsb
inc
and
jb
cmp
andl
mov
xchg
bound
outsl
in
call
inc
adc
inc
stos
jb
and
inc
cmp
stos
in
sbb
int3
shll
mov
daa
or
lock
and
adc
xor
in
arpl
inc
push
fiaddl
and
dec
mov
inc
and
inc
je
push
dec
adc
jle
cmp
sbb
jno,pn
lahf
fldl
test
addr16
aaa
loopne
dec
xlat
or
fnstenv
and
sub
std
xchg
aaa
pop
xchg
or
xchg
pop
jmp
adc
les
add
mov
adc
out
jp
mov
add
lds
cmp
sub
test
push
pop
adc
in
ss
fldt
lods
inc
pop
fucomi
dec
cmp
lods
jbe
fldt
orl
outsl
push
pop
aam
out
repnz
push
sbb
inc
fstps
out
rorl
sbb
test
and
es
cli
cmc
mov
pop
mov
imul
orl
into
rcrl
shlb
inc
imul
les
jle
cmp
lods
mov
loope
jge
mov
cwtl
stc
add
mov
lods
push
jne
add
push
ljmp
mov
xor
imul
loop
test
outsb
ret
xchg
inc
sbb
iret
in
es
and
clc
push
loopne
aas
mov
pop
gs
ljmp
pushf
jns
sub
sbb
cmp
aad
sub
mov
push
cwtl
mov
out
push
negl
jb
pop
std
dec
dec
adc
cli
fsubr
xchg
xchg
into
dec
test
adc
daa
nop/reserved
iret
sub
jl
jmp
data16
jae
push
push
fsubrl
mov
stos
bound
adc
in
push
and
insb
dec
sahf
imul
test
pop
test
mov
das
roll
dec
push
cwtl
test
data16
xchg
std
push
ja
mov
std
push
adcb
movsl
push
jns
pusha
cwtl
jae
inc
or
outsb
sahf
sub
adc
cmpsb
sub
xchg
jmp
mov
jle
cmpsl
mov
push
dec
shr
jl
inc
dec
adc
lea
pop
or
scas
rcrl
xchg
pop
dec
call
popa
adc
sbb
xor
cmpsl
insb
add
sbb
push
out
test
xor
jl
stos
je
mov
cmpl
pop
jl
les
mov
fmuls
imul
dec
jb
xlat
ds
inc
mov
sahf
cmc
outsb
mov
dec
pop
iret
add
arpl
das
ds
cmp
cli
push
out
cmc
xor
cmc
mov
std
xor
adc
dec
jmp
ficompl
outsl
dec
inc
mov
cwtl
shll
outsb
jge
gs
sub
mov
scas
xchg
lods
and
jmp
enter
sbb
popa
insb
adc
pop
jae
out
push
xchg
and
mov
pop
pop
jnp
into
cwtl
leave
jecxz
fcomps
cmp
xchg
mov
in
mov
in
stos
pop
or
jnp
mov
inc
xchg
aam
scas
mov
sbb
nop
addr16
faddl
sbb
push
movsb
cltd
cmpsb
dec
rcl
jle
iret
hlt
stos
mov
lock
add
jb
pop
pop
xchg
or
sbb
sbb
rcrl
cmp
xchg
aam
push
ret
mov
or
push
cmp
mov
fnstenv
orb
dec
gs
data16
mov
repz
rorb
pop
imul
mov
mulb
inc
ret
mov
scas
mov
xor
mov
popa
xor
mov
sub
mov
sar
shlb
popf
and
jb
or
cmp
add
orl
popf
xchg
shll
mov
enter
shl
mov
out
dec
sub
sbb
aam
xor
cmp
sahf
or
lods
gs
mov
dec
repnz
mov
inc
mov
sti
mov
ja
jae
and
arpl
xchg
mov
gs
clc
ljmp
je
fldt
jle
and
fcoml
sbb
add
dec
push
mov
imul
jne
add
adc
cli
pop
ret
mov
mov
hlt
sar
push
or
call
mov
xor
inc
adc
xor
jbe
pop
rol
scas
cmpsl
sub
shll
mov
mov
insl
int
pop
or
cmpsb
push
bound
adc
lds
in
cmp
cmp
jns
dec
push
cmpsb
mov
fldcw
and
mov
mov
pusha
mov
inc
push
in
pushf
xchg
fxch
ret
addr16
fdivrl
fiaddl
cmp
push
outsl
lret
repz
jmp
cmp
das
daa
pushl
int3
fimuls
ficomps
inc
lahf
fdivrl
bound
scas
cltd
inc
idiv
out
repnz
popa
cmp
dec
push
mov
inc
rorl
mov
dec
jno
stc
movsb
mov
xor
sub
add
lods
push
sti
jp
pop
and
add
enter
pop
lods
outsl
adc
lahf
jno
or
cwtl
adc
or
push
rcrl
mov
sbb
movsb
jp
push
sbb
lods
psrld
and
hlt
or
or
push
subl
xchg
aad
push
jae
pop
fnstenv
popa
popa
or
xor
cmp
dec
dec
sbb
adc
cld
pop
or
pop
xor
add
lret
pop
je
and
mov
ss
adc
bound
cmpsl
movsl
cwtl
jne
es
push
jnp
inc
mov
xchg
mov
out
mov
inc
jge
xor
movsb
dec
aad
fisubs
mov
fst
sbb
data16
cmpsl
ja
cmpsb
mov
ret
int3
pop
inc
fsub
mov
out
jle
pop
lods
sti
arpl
loope
cli
xor
mov
test
ficoml
test
pusha
xchg
leave
call
pop
cmc
out
sbbb
xchg
test
fsubrs
jbe
out
sub
xor
jmp
sub
inc
mov
pop
mov
cmp
xlat
sbb
mov
aas
adc
cld
test
and
fstpt
les
xchg
lret
stos
or
fistpl
repnz
test
cmp
imul
outsb
add
jns
iret
jmp
mov
outsb
dec
or
fisttps
cli
xchg
cmpl
inc
int3
cmp
adc
pusha
or
insb
pop
dec
dec
testl
leave
stc
aad
xor
aas
sub
popf
pop
dec
push
dec
mov
xchg
sub
pop
xor
and
movsl
outsl
cmp
out
cli
push
mov
shlb
leave
negl
pop
scas
push
cmp
push
push
pop
out
add
sbb
out
aam
add
mov
hlt
jl
test
faddl
int3
stos
ljmp
adc
or
insb
mov
aam
mov
mov
xlat
fidivs
sub
inc
lods
jmp
cwtl
cmp
rcr
mov
inc
leave
scas
outsb
xorb
pop
ljmp
int3
mov
out
adc
jp
fs
jecxz
add
pop
inc
inc
xor
jns
lret
mov
call
cmc
ds
jmp
mov
pop
push
mov
in
adc
push
pop
push
xor
int3
rcrl
mov
pop
test
test
mov
xchg
data16
inc
mov
sub
scas
push
lea
xor
std
lock
mov
jl
out
or
sub
xchg
xchg
sbb
xchg
xor
movsb
sbb
mov
rcl
add
insl
andl
cmp
adc
jg
adc
mov
call
or
xchg
cli
mov
jno
xchg
scas
sti
mov
push
into
cld
in
push
pusha
xacquire
pop
int
mov
mov
inc
arpl
pop
push
jg
imul
push
leave
and
mov
sbb
jo
adc
xor
negw
dec
push
test
cmpsb
mov
mov
insl
xchg
inc
fistpll
loopne
pop
xchg
or
push
sbb
adc
cmp
aaa
xchg
xchg
xchg
cmp
cmpsl
inc
sub
or
idivl
xchg
sahf
jbe
loop
jge
inc
cltd
mov
leave
xchg
ret
jecxz
test
cmp
push
cltd
adc
cwtl
int3
je
xor
mov
ds
push
mov
lret
xchg
xchg
addr16
and
add
mov
or
lock
adc
cmpsb
scas
test
mov
adc
or
gs
pushf
int3
adc
sarl
outsb
lds
insb
mov
mov
hlt
arpl
notb
push
pop
push
mov
int3
mov
shlb
pop
aaa
addr16
inc
cwtl
bswap
dec
cmp
push
rcrb
fwait
pop
pop
addr16
pop
daa
xor
adc
mov
popf
imul
mov
pusha
sbb
ljmp
shrl
ljmp
repz
add
shll
jg
push
outsb
out
ja
sbb
pop
fisttpl
xchg
fdivrl
inc
inc
aaa
into
dec
fsubl
lret
das
adc
push
dec
jne
jmp
das
add
insl
xlat
popa
inc
push
jmp
cli
lods
mov
aas
xchg
jo
cli
mov
mov
push
add
fisubrs
xchg
adc
jge
push
or
sarb
jnp
mov
cltd
imul
imul
push
aad
cwtl
out
mov
xchg
movsl
in
in
sub
jp
movsl
fs
divb
push
mov
dec
jns
in
push
iret
icebp
sub
incb
jmp
popa
push
sarl
sub
xor
mov
jl
das
test
inc
mov
das
pop
ds
insb
rorb
push
mov
or
jecxz
out
std
dec
ffree
repnz
ret
fs
mov
scas
lahf
test
mov
add
xchg
inc
rolb
jp
mov
inc
mov
data16
pop
adc
mov
sub
and
mov
fldt
jp
mov
daa
fcoml
xchg
jns
cmp
gs
pop
cs
into
leave
lret
aas
mov
enter
pop
xor
or
leave
fnstsw
mov
xor
xchg
dec
inc
test
out
in
mov
repz
mov
push
cmp
inc
insl
jbe
jge
jg
fistps
fsubs
stos
sarl
mov
jnp
inc
stc
lea
adc
sbb
out
jecxz
jp
xlat
jl
inc
inc
int3
mov
shll
sahf
js
movsl
sbb
jae
mov
enter
sti
ret
jo
and
cltd
mov
sbb
mov
or
pop
cmp
xor
and
je
and
dec
push
sbb
icebp
jnp
and
lock
leave
das
and
inc
sbb
nop
hlt
and
mov
int
es
mov
shlb
or
out
sti
imul
xchg
adc
jl
rcr
and
mov
das
dec
add
sbb
xor
icebp
sbb
negl
dec
outsl
test
cwtl
pop
sahf
adc
aam
xchg
push
stos
stc
xor
xor
fcmovnu
pop
push
data16
cmp
cmp
sbb
ret
xor
xor
jle
je
dec
mov
jl
adc
xor
fcmovnb
jns
push
mov
enter
cmpsl
sbb
cld
std
aad
fcomi
mov
cmp
or
mov
mov
push
in
call
dec
fdivrp
lret
pop
sub
stc
inc
gs
dec
fistl
out
xor
xor
sub
stos
cmpsb
add
xor
adc
insb
mov
or
dec
jmp
ljmp
into
adc
pop
mov
pusha
dec
nop
push
scas
imul
jb
pop
or
and
and
sub
and
mov
cltd
and
xchg
fldl
fisubl
dec
mov
movsb
and
jae
and
or
and
and
jmp
addl
pusha
outsb
ror
or
in
lock
push
jns
loope
add
xorl
imul
sub
mov
pop
test
sbb
adc
das
jmp
pop
js
mov
dec
and
and
dec
push
jb
enter
add
xchg
lods
mov
jns
jno
jmp
ret
pop
sbb
ja
insl
adc
jle
dec
cli
xchg
loopne
rcll
cmp
dec
adc
mov
out
dec
cmp
stos
jg
mov
cli
sub
pop
es
leave
push
add
sub
mov
xchg
adc
es
pop
mov
clc
aaa
pushf
xchg
sbb
xlat
jmp
xchg
or
scas
out
lock
mov
pop
ret
das
pop
lds
inc
lahf
cmp
test
mov
push
add
push
repz
or
sub
mov
adc
adc
pop
nop
xor
or
xor
push
mov
stos
xor
dec
push
inc
cmp
and
lock
or
test
aas
loopne
out
inc
gs
arpl
imul
push
or
pop
fadds
xor
test
lcall
fsts
aas
std
insb
ret
push
pop
pop
lcall
aam
aam
dec
xchg
sbb
dec
push
mov
das
lret
aam
and
aas
mov
adc
inc
jbe
nop
leave
jnp
movsb
cld
pop
mov
or
pop
mov
jge
lods
shlb
sbb
mov
mov
xchg
and
sbb
insb
mov
xchg
mov
enter
inc
inc
cli
sbb
and
add
pop
or
dec
jb
ss
test
cmp
adc
dec
add
out
fldcw
or
push
lret
loop
mov
fnstsw
movsb
scas
jns
sbb
push
pop
add
aas
loope
and
in
dec
add
xor
test
xchg
int3
pop
sub
out
push
lea
push
xchg
in
mov
nop
xor
aad
jne
inc
jno
cld
mov
aad
inc
insb
movsl
jne
and
ret
fstpl
int
sbb
fidivl
call
insl
ss
add
cmp
pop
dec
xlat
cmpsb
fsubl
pusha
push
sbbl
clc
pop
mov
clc
push
jle
std
adc
mov
bound
std
mov
jnp
loop
icebp
movsl
enter
or
lcall
dec
push
dec
push
gs
sti
hlt
pop
cltd
addr16
or
cwtl
xchg
dec
hlt
push
lcall
lret
jo
inc
adc
ret
mov
in
fs
rolb
ljmp
cld
ss
loope
lahf
mov
add
xchg
pop
mov
in
add
jmp
cwtl
cmp
xor
inc
inc
add
cmp
pop
adc
js
test
jno
std
xchg
and
pop
divl
mov
cmpsb
dec
cmp
jae
jle
ja
mov
and
sub
mov
cs
hlt
popa
or
push
scas
hlt
push
mov
fcmovu
mov
pushf
pushl
inc
outsl
sbb
aaa
data16
repz
mov
pushf
xor
and
hlt
repz
fdivrp
jo
es
pusha
mov
jg
lcall
arpl
xor
int3
inc
mov
orl
stc
rorl
mov
xchg
xchg
std
xchg
push
es
pop
or
jp
leave
pop
lret
loope
or
and
jb
or
push
mov
imul
dec
icebp
fsubs
fnstenv
es
or
mov
rol
mov
xchg
and
mov
mov
outsl
pop
add
push
jb
scas
in
shl
pop
ljmp
aas
xor
hlt
xor
hlt
pushf
sub
push
in
in
lock
lret
push
lcall
push
jecxz
jne,pt
xchg
in
ds
sbb
xlat
push
cltd
test
psllq
in
pushf
xorl
imul
shlb
loope
push
xchg
fsts
lds
inc
hlt
test
lea
mov
push
fists
sbb
cwtl
mov
and
push
push
movsl
xchg
xchg
mov
pop
cmp
scas
inc
inc
push
add
pop
in
jns
xchg
pop
jmp
cmpsb
int
sti
push
push
jae
jns
and
mov
ficoml
jb
inc
aad
stos
imul
aas
or
fst
es
sub
xorb
xor
mov
sbb
test
fdivs
pop
in
pop
and
add
mov
push
jb
jnp
bound
mov
mov
sbb
sub
lock
int3
shlb
gs
sub
into
repz
lea
inc
jbe
xor
mov
pop
std
mov
stos
psubsw
test
sub
cmpsb
idivb
add
fimuls
jmp
push
xchg
inc
push
pop
icebp
dec
fcoml
sub
jno
push
and
push
data16
jmp
mov
pop
mov
jmp
stos
sarl
ret
jnp
jl
cld
jmp
and
mov
push
imul
dec
add
ret
xchg
xchg
pop
sti
mov
push
add
aaa
divl
aaa
and
imul
nop
xchg
push
xchg
mov
mov
mov
jp
xchg
call
sbb
xor
or
sbb
movsl
adc
lret
cltd
cmp
es
in
fidivl
leave
dec
xor
sbb
lods
ja
leave
movsl
mov
push
dec
dec
push
loopne
ds
inc
popf
adc
add
add
jbe
mov
mov
push
jg
insb
cmp
jb
xchg
jo
add
mov
in
ret
repnz
aas
movsb
in
pop
sub
cmpsl
outsl
xor
call
push
jg
sbb
lcall
jns
sub
test
sub
jmp
dec
mov
into
fistps
ret
pusha
mov
cmp
xor
push
add
cmp
cmp
pop
lcall
cmp
add
imul
pop
add
xor
jp
dec
pushf
rorl
jle
mov
aas
fcompl
iret
sub
xchg
xchg
fmull
jb
dec
lds
fldl
push
cmpsl
inc
mov
rolb
clc
fabs
sub
add
and
sbb
es
pop
stos
dec
push
stos
addr16
lret
out
daa
cs
stos
xchg
cmpl
mov
mov
or
dec
mov
jmp
in
or
xlat
mov
stc
stc
rcll
jno
mov
and
push
sbb
mov
cmp
outsb
cli
xchg
adc
mov
hlt
es
xchg
dec
sub
dec
inc
adc
outsl
scas
testl
and
lret
xor
lods
iret
lods
rcll
pop
in
pushf
hlt
mov
sbb
push
insb
in
and
stos
dec
aad
jae
pop
dec
out
es
pop
in
scas
scas
pop
stc
dec
repnz
mov
enter
push
stos
sbb
cmp
dec
and
das
in
push
adc
lret
xchg
lds
push
sbb
pop
and
adc
sbb
movsb
mov
jecxz
je
inc
out
ror
decb
mov
inc
test
bnd
lcall
gs
sbb
ret
xchg
loop
push
cmc
and
in
js
or
orb
out
shll
and
add
daa
testb
imul
ds
fs
sub
cmp
xchg
mov
incb
fcoml
cmpsl
push
jne
sbb
mov
or
divb
sbb
test
push
inc
jne
dec
jnp
jmp
enter
mov
jns
or
xchg
cltd
idiv
nop
push
add
loop
jns
inc
xor
sbb
sbb
sbb
outsl
dec
sub
add
sarl
mov
insl
xlat
test
es
push
push
jmp
xchg
test
stos
out
sbb
es
negb
outsb
mov
jnp
idivl
mov
xchg
xor
pop
addb
adc
fistpll
add
sub
lahf
int3
push
popf
js
or
jecxz
into
xor
lock
push
mov
xchg
ret
adc
mov
adc
popa
sbb
ret
jecxz
ljmpw
lahf
jmp
push
ss
movsb
pop
in
xchg
sbb
add
dec
jnp
jns
xor
mov
ss
ljmp
popf
roll
js
addb
push
addr16
pop
jo
cmpsb
outsl
nop
cmp
out
les
sub
jecxz
daa
cltd
add
movsb
faddp
mov
inc
adc
dec
mov
jb
fwait
add
jnp
test
inc
jmp
fs
testb
les
mov
imul
lret
data16
xchg
je
jg
mov
mov
ds
push
jmp
mov
call
xchg
push
pop
orb
push
cmp
jbe
inc
cmpsl
mov
mov
adc
shlb
push
sub
mov
ret
xchg
cld
lock
pushf
mov
sbb
dec
divl
int
fwait
jae
inc
mov
dec
mov
add
movsl
lahf
push
xchg
shlb
loopne
leave
test
subl
xor
insl
pop
push
cwtl
mov
push
movsl
rcll
cmp
mov
inc
shl
mov
sub
mov
adc
cmp
movsb
int3
sub
loopne
or
mov
into
and
lods
jecxz
adc
push
repz
aas
je
xlat
aaa
mov
sub
adc
pop
test
mov
int
and
test
push
ret
xor
jbe
mov
push
cmc
and
bnd
cmp
or
test
je
testb
xchg
inc
out
enter
imull
daa
push
jle
cmpsb
inc
xlat
sbb
jae
es
mov
jne
lret
mov
xor
jne
sub
xchg
testb
cmp
cmp
frstor
lret
repnz
add
imul
pop
mov
ljmp
aam
jmp
and
insl
xchg
jmp
sbb
les
add
into
inc
js
xchg
xor
test
scas
or
inc
inc
es
jp
nop
fildll
cmp
cmc
mov
ss
movsl
scas
outsl
test
mov
adc
xchg
jmp
add
jns
out
jae
xchg
push
js
pop
lcall
aaa
xchg
inc
push
mov
ret
jns
sub
aam
cli
jbe
mov
push
loope
mov
sarl
pop
mov
cwtl
pop
roll
mov
sbb
js
pop
cmpsb
jo
je
push
sub
or
rcl
pop
adc
push
scas
mov
aad
and
mov
popl
bound
ret
leave
adc
sbb
repz
lods
xchg
inc
movsb
push
pop
lock
pop
dec
jb
cmp
bound
pop
or
nop
ret
lock
pop
dec
xchg
fwait
cs
lcall
ret
test
stos
stos
pushw
push
mov
inc
icebp
paddb
lods
les
xchg
rorl
pop
ficomps
es
test
jnp
mov
lea
insb
stos
and
ret
out
or
mov
dec
cmp
sbb
adc
and
and
xchg
xor
ret
and
pop
fwait
outsl
fwait
pop
push
adc
cmp
xchg
mov
adcb
push
out
adc
jne
sub
sbbl
push
out
popf
mov
xchg
out
jecxz
lods
xor
rcll
push
sub
dec
into
pop
sub
pop
sti
xchg
or
orl
arpl
push
scas
fisubrl
fsubl
mov
out
xor
in
sub
lea
movsb
repnz
push
mov
xchg
repz
mov
or
data16
mov
shll
leave
jp
or
sub
mov
popf
es
xor
dec
repnz
dec
jge
in
imul
shrl
pusha
add
out
test
clc
cmc
push
xchg
cwtl
cmp
jne
xor
jg
mov
push
sub
jno
mov
sbb
mov
or
repz
jle
jp
aas
adcl
cwtl
jecxz
addb
sbb
aaa
loope
jecxz
mov
ss
lea
xor
cmc
outsb
div
ljmp
cmc
inc
push
aad
cmpb
inc
stos
scas
call
jno
add
lock
pushf
mov
les
push
dec
jge
je
popa
xor
sub
pop
jle
mov
or
loop
sbb
mov
add
jle
in
mov
pop
adc
cmp
mov
inc
jmp
lods
mov
xchg
xchg
rclb
jne
out
dec
outsl
sub
pop
stos
jmp
fisubrl
ja
mov
outsl
push
ror
and
gs
ret
ljmp
addr16
mov
push
add
ja
stos
sub
push
sahf
mov
mull
push
xor
fnstcw
leave
pop
inc
mov
mov
dec
xor
nop
imul
aas
adc
push
inc
popa
call
mov
loop
aam
rolb
cmp
lods
add
out
sub
pop
pop
mov
pop
sbbb
lret
mov
mov
stos
out
inc
jle
cmp
jg
cwtl
repz
add
pop
int3
dec
xchg
scas
in
cmp
cmp
aas
ret
in
sub
mov
sub
sbb
shll
mov
inc
or
or
in
nop
add
or
inc
movsl
push
test
outsl
pop
nop
cmp
in
movl
and
or
ds
ljmp
jb
push
rcrb
imul
sbb
sbb
mov
out
bound
and
and
mov
push
jecxz
xchg
mov
jnp
fs
stos
pop
jne
sti
mov
jmp
repnz
daa
je
sbb
ret
pop
and
rol
push
shrl
popf
push
sbb
fnstenv
xchg
mov
sub
adc
or
ret
mov
aaa
push
cmp
xchg
xor
js
js
jnp
push
xchg
jb
pop
add
loope
cmp
push
daa
mov
fadds
push
jge
add
cwtl
xor
and
bound
cmp
sub
push
cmp
rol
iret
pop
fldl
pop
sbb
lret
es
imul
sub
aaa
adc
push
mov
call
movsl
mov
cmp
sub
jle
ret
repnz
xchg
addl
scas
push
scas
in
das
leave
xchg
cli
das
pop
mov
call
mov
sbb
mov
ljmp
cli
loope
loop
cmp
sub
adcl
addb
mov
ror
insb
xor
pop
cld
inc
inc
push
idivb
popa
stc
add
xchg
push
pop
sti
xchg
loop
lods
jmp
xor
aam
or
test
test
loopne
inc
pop
pop
pand
clc
fidivs
pop
jmp
adc
mov
loop
xchg
and
mov
rorl
pop
mov
dec
mov
cmp
pop
mov
fdivs
iret
scas
gs
ficoms
and
inc
dec
and
jnp
gs
scas
movsl
outsl
mov
add
cmp
xor
cmp
push
push
dec
push
mov
lahf
add
pop
orb
mov
cmpsl
ljmp
je
adc
xor
cwtl
dec
push
lds
jno
sbb
mov
or
mov
push
stc
rolb
sbb
in
cmpsb
xchg
notl
dec
icebp
subb
test
and
int
sbb
js
sti
dec
xchg
or
aam
or
repnz
adc
xchg
lods
or
fwait
jg
addl
adc
fisubl
stos
dec
out
sbb
js
sbb
mov
in
cmp
data16
cltd
das
adc
lret
mov
adc
mov
bound
push
sti
jne
add
mov
cmp
sub
xor
out
lret
jb
push
hlt
inc
stos
or
iret
shlb
div
sbb
mov
sahf
ret
lock
push
inc
add
pop
sbb
in
or
movsl
mov
cmp
pop
xlat
push
sarl
dec
pop
pop
sub
sarb
out
jns
jns
pop
into
data16
out
sub
stos
out
and
pushf
jo
lods
lods
sbb
mov
jnp
cmpsl
out
call
ss
iret
test
leave
test
cmp
loope
ljmp
xchg
or
shl
movsb
mov
clc
cmc
cmp
jge
push
xchg
outsb
pop
out
lods
adc
clc
mov
pop
rcrl
dec
adc
push
push
addr16
mov
inc
sbb
adc
mov
out
cmp
pop
fdiv
lahf
push
shll
sbb
in
out
outsl
mov
out
repz
arpl
leave
jp
and
cmp
inc
add
pop
mov
jbe
jnp
shrl
inc
loopne
loope
sub
jl
popf
jg
jno
loopne
inc
cltd
dec
jne
mov
fldt
popfw
sbb
ret
clc
testb
mulb
scas
sbb
and
jb
add
push
loope
sbb
cmp
mov
jns
daa
dec
jl
sbbl
loope
outsb
add
fistpl
mov
test
pop
mov
in
push
mov
aam
mov
push
mov
test
sub
and
and
imul
test
sbb
rorl
es
fimuls
push
pop
jg
adc
or
lret
scas
sub
je
addl
jbe
cmp
xor
je
scas
pop
sub
loopne
sbb
jp
xchg
aaa
mov
and
dec
and
inc
out
mov
sbb
fstpl
cmc
outsb
mov
arpl
push
sbb
or
mov
pop
pop
jg
loop
sub
js
and
jge
nop
fnstenv
in
je
push
call
dec
cli
pop
xchg
sub
xor
mov
popf
adc
jg
push
leave
cmp
ja
out
shll
cmp
fs
xlat
add
mov
insl
test
flds
sti
bound
and
push
inc
pop
dec
jnp
out
cmp
mov
mov
ret
dec
lds
add
popa
les
sbbl
fimull
ficoms
mov
fnclex
mov
ljmp
cmp
aad
dec
paddusb
out
xchg
pop
push
and
jae
mov
mov
fildl
fisttps
inc
fidivrl
icebp
push
push
or
pop
cmp
push
out
shlb
adc
sarb
in
sbb
mov
bound
lock
outsb
das
lret
int
push
mov
pop
push
push
jmp
pop
lret
dec
cwtl
mov
out
dec
fs
stos
ret
ror
push
adc
dec
lcall
add
push
mov
lcall
jg
stos
or
pop
out
sub
and
sahf
xchg
or
pop
push
sbb
fisubs
jb
and
push
push
addr16
jns
push
shll
and
jle
jo
push
fsubrl
cwtl
addr16
sahf
cmp
dec
mov
pop
int
cmp
sarb
dec
mov
inc
lcall
sub
test
fsubl
add
fwait
mov
out
lret
dec
andb
ret
sbb
insb
fldenv
jge
push
or
mov
mov
ss
pop
mov
dec
inc
push
arpl
orb
xchg
pop
scas
mov
push
xchg
and
sbb
popf
pop
jg
maskmovq
testl
mov
mov
xchg
out
call
push
mov
dec
push
lods
fs
inc
cltd
adc
jge
ret
rorl
mov
sbb
mov
ja
lret
repz
adc
xor
mov
xchg
dec
push
std
xchg
movsb
mov
pmullw
and
push
xor
xlat
int3
sbb
pop
aas
dec
sub
aam
les
sub
and
shl
dec
mov
xorb
sarl
pop
xchg
pop
stos
pop
hlt
aaa
icebp
out
jae
adc
jle
dec
or
cs
xchg
ljmp
lahf
mov
movb
addl
sub
ljmp
push
inc
fistps
adc
dec
imul
mulb
fsubl
lock
inc
pop
cmp
jmp
jp
lds
mov
dec
mov
jo
pushf
push
push
stos
xchg
fcomps
imul
adc
add
jo
sbb
jge
inc
mov
shrl
xchg
mov
in
mov
aaa
jle
sarb
or
ja
adc
jecxz
cmpsb
and
stc
lods
shlb
repz
je
pop
and
sbb
jo
sub
les
adc
testb
dec
ds
xor
jb
movsl
test
pop
or
stc
es
femms
pop
and
enter
sarb
jle
xor
inc
push
mov
mov
xchg
lds
push
pop
mov
jns
mov
std
mov
int3
lret
int
dec
jg
pop
outsb
push
inc
xor
push
xchg
xchg
mov
test
mov
push
and
cmp
push
push
lods
icebp
jae
fwait
pop
lods
sti
adc
stos
and
enter
mov
or
and
repz
xchg
xor
outsl
nop
cmp
mov
sbb
jbe
les
dec
mov
dec
push
sbb
test
out
mov
xchg
rcrb
add
adc
push
repz
popl
movsl
lock
cld
je
pop
es
jl
mov
daa
mov
add
add
movsl
sbb
insl
mov
test
jle
pusha
jecxz
pop
jl
add
and
cmp
jmp
add
imul
push
lock
cmc
push
jp
mov
mov
dec
push
movsl
cmpsb
or
test
sub
les
inc
xchg
add
sub
ljmp
movsl
mov
imul
xchg
mov
mov
lds
orl
push
shll
mov
out
fistpll
jmp
cmp
mov
ds
pushf
pop
pop
lds
lret
push
fisubs
push
adc
dec
icebp
mov
hlt
out
rcl
pusha
or
xor
mov
pop
cmp
mov
mov
jle
xor
or
lcall
ds
sti
std
fcomi
in
push
sbb
imul
repz
loop
add
sbb
sbb
bound
imul
jge
test
mov
adc
push
add
xor
xor
fidivl
cmp
scas
push
xorb
loopne
lcall
inc
in
push
pop
pop
out
push
call
inc
fldl
ret
scas
xchg
je
fildl
mov
mov
mov
bound
inc
cli
testl
insb
push
jns
nop
fsubrs
cmp
mov
fsubs
adc
daa
add
daa
jns
loopne
std
mov
mov
in
mov
shll
jnp
and
mov
stos
sbb
sub
add
arpl
arpl
dec
pop
mov
mov
lea
imull
loop
fimull
out
mull
stos
dec
loop
lahf
cmp
fwait
addr16
int
arpl
jbe
cmpsl
adc
mov
andps
add
mov
and
jg
fsts
pop
mov
stos
dec
cmp
les
sarl
add
lods
push
std
bound
and
out
pop
orb
sbb
out
and
sbb
add
jmp
xor
lahf
pop
mov
sbb
sub
cs
loop
mov
cmp
ljmp
inc
js
xor
push
fucomi
outsl
and
cmp
icebp
or
ss
dec
sub
mulb
int3
xor
aaa
jle
xchg
sbb
loop
or
cwtl
inc
xchg
pop
adc
push
rcrb
mov
popf
adc
inc
popa
hlt
fs
lret
cli
sub
mov
rolb
pusha
loope
repnz
fs
adc
clc
push
mov
inc
dec
in
cmc
popa
pop
mov
pop
call
lahf
or
or
andb
arpl
push
push
loopne
push
push
xor
mov
adc
lcall
add
lcall
gs
fld1
lock
xor
sbb
inc
fs
sub
push
xchg
in
out
sbb
lcall
pop
jb
lods
mov
xchg
call
sbb
and
push
rclb
inc
push
jge
jo
push
push
subl
into
into
push
ss
xchg
add
inc
dec
lret
or
dec
clc
gs
and
hlt
push
mov
inc
or
idivl
loopne
sahf
mov
jno
add
daa
vaddps
mov
leave
push
inc
push
mov
data16
sar
outsb
xor
mov
pop
mov
adc
icebp
cmpsl
mov
call
hlt
shlb
cwtl
mov
pushf
mov
mov
sub
mov
sti
pusha
addb
sub
mov
and
add
enter
xor
cmpl
inc
fucom
add
push
cmp
xor
push
cmp
dec
fnstsw
mov
push
cmpsl
jnp
incb
mov
cmp
push
jb
pop
dec
pusha
xchg
push
std
lock
das
sbb
push
push
mov
jne
add
add
adc
push
xor
mov
movb
bound
pop
sub
cmp
les
lods
jge
jp
fwait
add
arpl
mov
ret
cli
cld
dec
int3
cli
mov
ret
adc
inc
xchg
pop
loope
xchg
into
cmp
xchg
dec
incl
pop
call
dec
push
add
dec
and
cmp
mov
xchg
dec
sub
pop
fstpl
mov
scas
push
rclb
lock
push
subl
andb
jecxz
scas
cmp
sbb
repz
mov
fs
and
xor
inc
dec
mov
mov
cwtl
add
sub
fadd
inc
xor
adc
gs
jmp
mov
mov
add
cmp
sub
mov
push
push
push
inc
push
imull
jns
xor
stos
add
adc
lret
mov
mov
cmp
jb
mov
pop
mov
ret
mov
pop
add
and
add
movsl
push
add
stc
loopne
or
loop
xor
call
push
les
lret
movsb
in
mov
jecxz
arpl
cmp
in
xchg
pop
pop
shlw
cmc
in
insl
mov
leave
fisubrs
and
jne
dec
mov
andb
sbb
cld
aaa
mov
add
das
mov
xor
xchg
lret
pop
popa
dec
bound
int3
and
sbb
in
les
subps
lds
lods
call
xchg
mov
sbb
out
mov
inc
filds
inc
add
rorl
adc
es
push
mov
into
out
sbb
insl
xchg
adc
fadd
mov
ret
shlb
mov
push
push
push
cmpsb
cmpxchg
dec
nop
js
or
stc
ror
repnz
jo
jbe
xchg
aas
dec
shl
shl
mov
outsb
lock
sbb
es
jmp
mov
mov
push
dec
mov
lea
ss
mov
push
clc
push
or
imul
insb
dec
xor
clc
test
stc
insl
popa
inc
iret
push
mov
sbb
aaa
mov
cmp
xchg
je
mov
mov
jmp
mov
gs
rcrb
mov
mov
lds
hlt
jle
xor
or
inc
je
and
jle
push
mov
push
imul
ret
cli
fs
jg
dec
pop
mov
test
adc
xchg
xchg
and
mov
pop
dec
xchg
mov
test
cld
repz
in
or
mov
and
push
and
jmp
cmp
mov
sub
in
sahf
dec
out
stos
dec
sbb
aad
popa
sahf
add
cs
mov
movsl
repnz
mov
sub
dec
cmp
jnp
sbb
ljmp
in
ret
je
decl
and
adc
hlt
icebp
cmpsb
xor
push
inc
xchg
cmp
sbbb
repnz
adc
lret
mov
movb
mov
addr16
add
sar
pop
adc
arpl
outsl
and
xchg
mov
rclb
aam
or
fcoml
dec
pusha
test
push
in
movsl
movsl
in
pop
rcrl
xor
scas
lahf
dec
inc
fwait
add
repnz
bound
movsb
xchg
loop
call
pop
push
xchg
and
cltd
int3
sub
arpl
lret
movsb
aaa
mov
push
mov
dec
cwtl
ja
lods
inc
lock
xor
in
aam
lods
xchg
repz
dec
xchg
mov
dec
mov
aaa
sbb
mov
lahf
xchg
aad
mov
adc
ss
inc
test
fstl
rcrb
mov
dec
enter
fidivs
idivl
out
dec
push
call
addr16
jne
stc
jg
pinsrw
call
xlat
ss
mov
cmp
push
cmpsb
push
cmp
xchg
hlt
les
cmp
shr
addb
pusha
pop
lock
out
mov
movsl
xchg
jge
pop
mov
cld
pop
jbe
xlat
rcr
dec
dec
push
arpl
xor
cmp
pop
dec
movsl
or
push
mov
xor
sbb
push
testl
lahf
push
mov
xor
mov
add
and
dec
sbb
fsub
push
repnz
sub
push
mov
xor
jno
sub
or
sbb
xor
shl
push
mov
mov
out
stc
xchg
inc
aad
jb
nop
sbb
cmp
mov
mov
out
imul
mov
xchg
mulb
add
out
pop
popa
pop
out
iret
jo
pop
ds
sub
aam
fldenv
shlb
jmp
jle
jmp
pop
jge
out
lcall
adc
sub
mov
adc
dec
hlt
loop
adc
mov
and
dec
jl
cmpsl
xchg
cmp
mov
jecxz
in
push
popa
inc
cmp
jnp
dec
xchg
sub
jne
icebp
inc
lahf
mov
leave
pop
or
out
icebp
mov
shl
cmp
xchg
pop
push
xor
inc
xlat
scas
cltd
cmp
pop
dec
dec
inc
mov
cmpsb
incl
fwait
sbb
sub
gs
ret
xor
out
into
inc
cmp
je
pop
cmp
dec
sbb
pop
jl
leave
xchg
test
jae
mov
push
fmul
xor
scas
pop
mov
cmp
sahf
in
fcoms
cmp
mov
mov
cmpsb
adc
rorb
jg
test
pop
dec
int3
ds
outsb
mov
in
insl
bound
pusha
in
js
cmp
push
imul
lea
out
mov
sub
fwait
shlb
mov
fcomps
icebp
push
dec
lock
int
adc
sbb
mov
clc
scas
imul
sbb
frstor
popa
or
cmpsl
or
into
stos
ds
mov
mov
push
scas
lock
inc
xorl
mov
mov
jae
stos
adc
out
fs
jbe
aas
popf
inc
add
mov
or
mov
sbb
movsl
popf
std
inc
or
dec
pushf
mov
add
enter
cmp
repnz
popf
in
je
mov
adcl
sbbb
mov
pop
out
sahf
int
pop
jne
out
mov
inc
add
mov
fisubrl
mov
push
xchg
sub
das
cwtl
in
ret
cli
popa
ret
neg
cmp
pushf
pop
xor
sbb
xchg
push
sub
inc
mov
testw
out
movsb
jmp
clc
iret
stos
nop
jg
sub
pop
ja
dec
dec
inc
sbb
stos
call
mov
push
mov
xor
push
push
pop
fdivrl
inc
stc
cmpl
stc
dec
aam
es
mov
and
aas
cltd
mov
rclb
jae
icebp
add
xchg
cmp
dec
lcall
fidivrs
add
insb
mov
stos
push
mov
inc
ja
imul
xor
or
fstpl
lcall
cmp
adc
arpl
es
lcall
mov
xchg
cld
out
inc
xchg
ret
xrelease
xchg
das
mov
in
popl
or
xor
scas
cmp
int
enter
push
jecxz
push
dec
push
ret
mov
jns
ja
xor
add
and
mov
ret
lea
sub
dec
sbb
fwait
adc
imul
sbb
lahf
fnstenv
shlb
dec
jp
cmpsl
jecxz
enter
lret
mov
outsb
sarb
in
mov
sarb
mov
jns
xchg
popf
sbb
lret
push
pop
ljmpw
in
aad
jmp
popa
fnstenv
mov
ds
pop
lret
jno
hlt
leave
pop
and
ja
jo
loope
inc
hlt
retw
pop
sysenter
stos
out
sub
dec
inc
or
adc
fbld
and
mov
inc
daa
enter
outsb
ja
sub
insb
add
or
xchg
in
ret
roll
xor
add
xor
push
jo
fwait
adc
imul
aad
test
jne
cmp
xchg
push
pop
pushf
les
loope
insl
push
sub
sub
test
add
or
dec
xchg
in
xlat
jo
jecxz
pop
ds
mov
mov
mov
in
sbb
daa
mov
movsb
lods
test
call
arpl
push
aad
cmpsl
ds
fistpl
pop
push
fwait
int3
add
sub
push
cli
and
mov
add
sbb
into
out
out
jo
xor
popa
mov
adc
sahf
iret
jmp
femms
sbb
pop
xor
loope
test
out
inc
jo
lods
mov
inc
loopne
fcoms
jmp
mov
and
mov
xorl
loopne
push
dec
stos
push
pop
push
adc
xor
xor
daa
popf
scas
adc
mov
push
ja
mov
test
pop
push
lock
lret
test
sar
jae
mov
inc
xchg
xor
insb
and
xchg
fisubl
mov
sub
das
xchg
repz
adc
dec
xchg
dec
cmpsl
lret
out
dec
outsb
mov
pop
xchg
cmp
sti
rorb
popa
je
jge
nop
mov
xchg
rorl
fimull
add
adc
int3
pop
xchg
cli
lcall
fsubp
js
bound
ja
pop
sbb
hlt
mov
bound
pusha
push
fmull
clc
test
out
pop
xlat
mov
mov
mov
jb
mov
mov
mulb
xchg
push
sub
jmp
adc
fucompp
lock
inc
jg
and
scas
jecxz
jecxz
or
mov
jb
sahf
push
repnz
daa
imulb
insb
data16
inc
mov
ljmp
mov
mov
push
cmc
mov
push
or
mov
std
sbb
scas
dec
sub
lcall
shr
lret
dec
mov
sub
repnz
adcb
cmpsl
lret
or
xchg
js
cmp
ret
fisubrs
cmp
mov
mov
xchg
pusha
outsb
cmp
cmp
push
sbb
aad
and
icebp
pop
adc
leave
shr
jge
sub
cmp
sbb
inc
mov
rorl
mov
fcmovnu
lcall
mov
cmp
movb
push
int
repnz
mov
jecxz
shrl
mov
scas
jb
lret
xchg
cmp
mov
mov
xor
lret
les
call
cmp
sub
ds
lcall
shll
xor
outsl
push
and
loope
shll
iret
pusha
scas
cmp
sarl
inc
test
cmp
inc
mov
mov
cli
aas
ret
sub
pop
dec
and
inc
sub
insb
out
testl
jp
xchg
push
pop
dec
pushf
rcrb
xchg
add
and
das
cwtl
lahf
xor
out
inc
xor
jg
leave
dec
dec
shlb
enter
fwait
push
aaa
shr
scas
insl
jbe
mov
and
mov
mov
jmp
pop
dec
and
add
xor
push
xlat
push
sarl
insl
aas
test
out
adc
jg
cmp
jne
pop
mov
data16
lret
aad
out
inc
sbbl
pop
xchg
or
enter
in
mov
push
out
jns
into
pop
lret
popa
push
movsl
dec
jle
cmp
xorl
mov
in
loopne
mov
ret
out
cmc
sbbl
push
mov
sub
ds
cmpsb
cs
fadds
inc
cli
sbb
add
roll
sub
xor
mov
inc
inc
sarl
loopne
es
dec
ret
mov
lods
cs
add
bound
xor
or
inc
dec
mov
mov
pushf
xchg
dec
jbe
insl
push
pop
sti
and
adc
pop
jp
stc
in
dec
int
jl
flds
movsl
xchg
icebp
add
in
fildl
sub
sbb
shrl
pushf
mov
nop
pushf
lock
aam
or
xchg
sar
stc
cld
xor
into
fsubr
rcrb
jb
mov
xchg
push
xor
xor
aas
out
dec
sbb
pop
cmpsb
mov
and
mov
lds
sahf
clc
dec
mov
mov
repnz
add
repz
fisttpl
ss
lahf
lahf
data16
sbb
mov
outsl
pop
push
pop
lea
dec
dec
js
sbb
test
frstor
xor
das
cmp
mov
inc
mov
xor
jle
cltd
pop
incl
fnsave
sbb
pop
sarb
xlat
xor
cmp
mov
push
scas
xor
mov
sbb
nop
inc
dec
sub
sub
inc
fisubs
push
andl
test
cwtl
aas
lahf
and
adc
rorl
xorb
int3
push
shll
dec
pushf
ljmp
mov
xor
push
xor
int
lods
je
xchg
rclb
adc
xchg
sahf
lock
pop
imul
leave
sarl
inc
mov
shrl
adc
or
fadds
sbb
jnp
push
rcr
sub
out
cmpsb
xor
icebp
movsb
nop
insb
xchg
and
xor
xor
pushf
sbb
daa
add
cli
imul
popf
cltd
popa
in
dec
out
jle
adc
pop
mov
dec
and
cmp
cmp
insb
xor
xchg
mov
pop
or
jl
andl
push
sub
inc
sub
shrb
stos
movsb
and
test
xor
sub
sbb
xchg
dec
push
or
xchg
enter
jne
test
aam
bt
rorb
call
addr16
mov
pusha
push
test
sub
xchg
daa
mov
shlb
ss
xchg
jle
test
out
fsubl
sbb
xchg
popf
cmc
mov
pop
out
push
mov
or
jmp
xor
push
sbb
stos
mov
or
push
add
iret
pushf
mov
aaa
mov
jmp
mov
xchg
sahf
rol
icebp
insl
lahf
lock
xlat
mov
adc
in
shrb
xchg
arpl
repz
xor
cli
mov
fwait
je
cmp
enter
lret
mov
call
aam
dec
mov
cltd
imul
in
adcb
mov
xor
or
rcll
mov
xlat
jb
cld
lret
sbb
mov
int3
mov
fwait
scas
sub
or
pop
mov
imulb
xchg
aaa
adc
sahf
xchg
mov
rolb
ficompl
dec
into
andb
xchg
or
jns
enter
jle
insb
out
dec
xor
bound
mov
pop
inc
imul
pop
sbb
arpl
in
pop
out
out
inc
sbb
xchg
lret
aad
jb
xchg
lret
xchg
pop
pop
cltd
fst
jns
fistpl
pop
out
push
movsb
mov
sub
cmpsl
xor
ret
subl
out
mov
adc
stc
mov
mov
ss
mov
jmp
jle
sub
and
pop
repz
mov
std
cltd
mov
sarb
pop
xor
dec
push
jno
addl
negb
inc
cmp
in
push
ja
clc
mov
mov
pop
lods
jp
in
mov
andl
mov
roll
pop
in
jns
inc
dec
cmp
mov
aam
xchg
pop
sti
add
icebp
mov
lahf
ljmp
je
pop
and
fcmovnb
push
sbb
or
lods
and
dec
jg
scas
push
lret
pusha
xchg
cmp
fdivrl
clc
imul
ljmp
add
xchg
pop
hlt
or
dec
inc
xor
lds
lods
mov
roll
mov
inc
test
push
dec
xchg
inc
dec
xor
sbb
cmp
movsl
scas
and
xlat
xor
cli
add
pop
clc
cmp
loope
cwtl
mov
inc
jnp
aam
sti
mov
ljmp
dec
pop
sub
rcl
dec
sbb
test
lahf
stc
push
in
pop
or
filds
faddl
rcrl
sbb
mov
jb
inc
mov
test
leave
cwtl
and
dec
mov
pop
outsl
cmp
aaa
repz
dec
stc
sub
mov
data16
mov
sbb
jl
push
mov
cmc
add
aam
xor
leave
insb
mov
cmp
or
dec
mov
pop
mov
popa
aas
cmp
sbb
sub
aam
push
jle
jge
ja
fst
jg
jo
xor
imul
shrl
scas
andl
rcll
sub
push
cmpb
cs
sub
cli
lcall
or
punpcklbw
mov
rolb
cltd
mov
jp
inc
fistpll
pop
mov
int
add
js
and
shlb
sbb
xchg
adc
fwait
xchg
jp
sbb
gs
rolb
jns
fwait
ret
test
negb
int
or
mov
add
aas
negb
or
and
or
stos
mov
xor
es
pop
lret
adc
sbbb
faddl
rclb
xchg
test
mov
push
xchg
out
mov
cltd
add
sub
aad
and
mov
push
ds
add
dec
mov
and
jg
dec
jnp
inc
ficomps
imul
jnp
add
sub
xchg
add
sub
aad
push
dec
testb
aad
push
xchg
and
jl
adc
fistpl
adc
xchg
out
lock
mov
cmp
ret
rclb
jle
jbe
ret
insb
mov
dec
cmp
popa
jp
cmpsl
inc
repz
lret
cmp
loop
fwait
out
mov
pop
repz
jne
sbb
push
pushl
cli
inc
sub
push
movsb
les
scas
or
sbb
jl
cmp
jne
bound
div
pushf
dec
dec
and
loopne
jne
sti
xchg
xchg
push
mov
add
inc
and
sub
nop
jno
std
adc
iret
subl
pop
lea
insl
mov
sbb
mov
into
mov
dec
mov
inc
add
out
ja
daa
jmp
pop
pop
roll
pop
loope
pushw
aad
inc
pop
or
sbb
cltd
lcall
adc
int3
insb
loopne
adc
mov
mov
fldt
dec
arpl
push
xor
push
mov
add
lret
sbb
rcll
push
outsl
mov
mov
cmp
pop
sbb
scas
lret
jp
or
mov
mov
jge
mov
dec
int3
jmp
dec
and
mov
enter
mull
test
push
inc
and
push
mov
inc
cltd
hlt
dec
enter
scas
mov
shl
scas
shrl
sub
in
sar
int3
cwtl
loopne
inc
movsl
aaa
push
xchg
add
fcmovu
gs
adc
xor
loope
jle
sub
aas
xchg
into
pushf
nop
in
stc
push
push
and
push
and
push
cltd
fsubl
xchg
fbstp
ret
scas
inc
adc
dec
es
sub
add
xchg
mov
mov
adc
in
loopne
lahf
enter
jo
xchg
add
js
lret
popa
push
gs
mov
lahf
cltd
adc
jge
inc
push
sahf
clc
and
mov
sti
sub
and
cmc
dec
pop
pop
vpmacssww
loop
xorl
mov
stos
sub
pop
jns
loopne
cli
mov
xchg
test
pusha
mov
les
mov
inc
pop
push
sub
fs
mov
mov
lods
fisubrs
or
stos
dec
ja
jp
dec
shrl
popf
adc
jp
push
inc
lods
mov
incb
cmc
clc
shl
push
in
fisttpl
mov
or
xchg
fnsave
add
xchg
setns
push
jle
lds
jae
jp
sub
cmp
insl
sbb
scas
outsl
mov
jae
loope
cmpb
out
aaa
xor
pop
test
mov
sbb
lret
aaa
or
xchg
xchg
cmp
imul
mov
inc
mov
icebp
sarl
adc
es
aaa
ret
imul
lods
jle
mov
push
fnstsw
cli
push
je
push
inc
xchg
dec
add
xor
sar
into
dec
test
call
fwait
xchg
lods
rcr
popf
cs
inc
mov
scas
loop
scas
stos
rol
xchg
lods
mov
dec
or
push
jmp
sbbb
fwait
in
jnp
lds
dec
push
ljmp
ret
lret
clc
sbb
inc
mov
xchg
mov
pop
imul
mov
sub
dec
adc
mov
popf
scas
sub
fxch
push
les
push
int3
mov
in
shlb
xor
mov
xchg
sahf
xlat
xchg
fbld
pop
push
cltd
or
push
mov
int
push
push
nop
inc
cmpsl
ss
scas
xor
add
addr16
sub
movsb
sbb
mov
jno
outsl
jne
pop
or
push
adc
xchg
cmpsl
and
jmp
adc
push
imul
insb
notl
test
add
dec
jg
mov
rcrb
cmpb
or
out
mul
inc
or
sub
gs
js
mov
xor
clc
mov
rolb
int3
pop
fadds
or
mov
lcall
rcrb
inc
jle
hlt
loopne
test
push
in
pusha
inc
dec
mov
inc
pusha
inc
xor
mov
movsb
in
xchg
dec
sbb
push
pop
clc
test
ljmp
sub
mov
pop
mov
jecxz
nop
and
daa
sets
jle
push
sbb
xor
addl
mov
add
jp
add
clc
stos
cmp
and
push
mov
push
daa
lods
inc
movl
arpl
mov
outsb
popa
int3
jno
cs
fwait
dec
or
sbb
xor
fildl
push
out
outsb
dec
mov
pop
and
sbb
lods
mov
mov
leave
out
stc
lahf
xor
in
mov
in
inc
jnp
mov
push
cwtl
push
xor
xchg
or
out
dec
scas
sbb
mov
mov
jne
sub
push
mov
jg
push
inc
add
pusha
shlb
xor
sub
cmp
jmp
int3
lcall
out
xchg
das
lcall
mov
js
and
les
imull
mov
sbb
in
imul
jp
ss
or
out
sbb
xchg
cwtl
pop
push
xor
xchg
ret
in
mov
lahf
ret
test
push
xor
test
jmp
in
xchg
sbb
mov
and
pop
dec
jle
dec
sub
test
pop
push
stc
adc
jbe
ja
and
hlt
inc
fldt
data16
mov
inc
sbb
daa
test
test
xchg
lret
jo
cmp
dec
jo
cmpsb
add
jne
dec
movsb
fldt
xlat
repz
mov
fdivrl
popf
jmp
xor
xor
ss
insb
inc
pop
ret
imul
mov
pop
call
push
es
add
xchg
mov
mov
jbe
inc
test
jne
in
sbb
and
sbb
in
addr16
loope
adc
jp
cmc
mov
mov
das
sub
sub
mov
ss
cmp
jmp
lcall
test
push
jle
mov
mov
add
mov
or
jg
dec
movsl
add
xor
aam
jo
mov
inc
xor
aam
sbb
out
sub
jecxz
lahf
cmc
leave
or
mov
das
inc
jae
pmovmskb
xorl
and
adc
pop
push
cwtl
pop
pop
sbb
jecxz
xchg
aad
sbb
es
cwtl
dec
push
push
mov
mov
sub
push
repz
sbb
jne
add
cmp
movsb
or
pop
ds
sub
push
in
sub
shl
xchg
rorl
shrl
aad
mov
shrb
fwait
hlt
ljmp
cli
icebp
adc
cmp
int3
mov
adc
xlat
sub
and
cmp
in
xchg
sbbb
int3
stos
je
add
test
mov
push
mov
cmp
mov
xor
jmp
xor
in
clc
pop
sti
movsb
jb
cmpsb
cwtl
or
lods
test
push
negl
dec
mov
mov
xchg
jbe
gs
pop
cmp
mov
cmc
bound
outsl
pop
lods
sbb
mov
decb
js
mov
jae
fstpl
dec
pop
push
test
sub
sub
fiaddl
push
mov
mov
push
add
in
pop
sub
xchg
or
inc
dec
outsl
fmulp
outsb
out
dec
or
cwtl
and
adc
push
rcrl
and
das
fimuls
lock
jl
in
xchg
popaw
add
inc
adc
mov
pop
fidivs
shr
add
jg
sbb
fisttps
add
lret
pop
push
cmpsb
push
loopne
fstpl
rolb
les
add
call
out
outsl
mov
movsb
push
mov
mov
fstl
mov
andb
int3
pop
adc
test
xchg
dec
call
push
popa
fwait
popa
push
out
xlat
popa
pop
jg
or
mov
stos
cmc
clc
out
data16
push
sub
mov
hlt
loop
xor
pop
mov
dec
shll
enter
cwtl
test
shrl
movb
cmp
dec
bound
sti
mov
sahf
test
out
dec
dec
mov
pop
inc
cmovbe
sti
popf
cld
mov
mov
rorb
hlt
cwtl
mov
fistps
ljmp
xchg
cmp
cli
inc
pop
stos
lods
out
dec
je
xchg
push
mov
in
jo
and
xchg
in
ficoms
popf
inc
stos
sarb
mov
mov
jp
push
fisttpl
cmpsb
jae
jmp
inc
imul
mov
push
popf
jnp
cmp
xor
mov
jne
or
pushl
hlt
scas
repnz
mov
mov
mov
sub
lret
stc
jo
aad
mov
mov
cmp
arpl
dec
mov
mov
pop
icebp
cmpsb
arpl
cmp
mov
xor
data16
sbb
scas
int
loope
aad
negb
cmp
aas
outsb
dec
cld
fidivrl
inc
mov
les
dec
jle
js
xlat
dec
inc
lock
jne
dec
xchg
icebp
cmp
or
cli
fisttpl
sub
sbb
and
sbb
faddl
dec
lock
lods
add
fadds
aaa
push
fldcw
test
lods
bound
repz
and
xchg
lock
and
pop
aas
mov
lods
and
mov
lods
mov
sub
iret
mov
insb
xor
repz
jb
xchg
mov
cmp
xor
ja
pusha
shrb
mov
popa
mov
push
cld
test
into
push
dec
mov
sub
inc
insl
adc
aaa
cmp
jecxz
in
ja,pt
loopne
xchg
cmp
xchg
imul
test
fstpt
sarl
xorb
shlb
daa
ret
icebp
xor
jl
aam
ja
sbb
xor
push
dec
adc
inc
iret
ja
push
daa
xchg
outsl
mull
lds
cmp
xor
push
xor
mov
inc
push
loope
cs
push
pop
mov
add
insb
hlt
loopne
adc
lods
pusha
rorl
mov
cmp
mov
gs
lods
push
push
inc
arpl
push
sbb
in
mov
sahf
add
jo
xchg
hlt
inc
and
push
mov
jle
jge
pusha
xor
and
and
sub
daa
push
xchg
pop
mov
sub
dec
gs
in
daa
std
cmp
mov
inc
int3
cli
jo
push
fimull
xor
ss
cmc
xor
test
jns
push
lcall
cmp
mov
nop
pushl
and
inc
jb
movsl
setl
imul
inc
ret
fnstsw
sahf
dec
pushw
out
pop
sti
les
push
jb
loopne
inc
sbb
lock
or
sbbb
daa
mov
stos
xchg
adc
pop
fstpl
flds
fcoms
flds
mov
xchg
push
push
pop
stos
insb
fwait
xor
cmpsl
mov
push
test
mov
in
inc
cmp
adc
dec
dec
dec
sbb
pop
rorb
bound
xor
gs
mov
and
adc
inc
mov
aaa
incb
xor
subps
mov
out
jns
scas
mov
jecxz
roll
mov
cmc
lret
imul
rorb
std
scas
mov
jl
inc
cltd
shlb
pop
adc
pop
pop
mov
xchg
and
cld
cs
fs
adc
loope
adc
lret
inc
mov
aas
jecxz
xor
mov
lahf
jno
lret
ret
out
popf
nop
aad
scas
adc
xor
int
mov
pop
cmp
addr16
pushf
test
jb
out
sub
xchg
jo
lock
pop
cmc
add
xchg
in
test
mov
outsb
jg
and
mov
jle
loop
movsl
sub
and
inc
xchg
shr
pop
jge
pop
inc
jbe
enter
push
adc
lods
mov
fst
pop
cmp
lahf
punpckhdq
divl
cmp
sub
push
inc
mov
and
das
rclb
mov
ret
cwtl
jecxz
jo
mov
inc
or
push
or
cld
mov
push
repz
sahf
pop
outsl
std
test
test
add
test
iret
lcall
test
mov
inc
and
in
les
mov
xchg
subb
scas
into
mov
out
add
inc
push
sub
shlb
mov
cmpsl
in
sarb
psllw
dec
jp
mov
mov
nop
xlat
or
inc
or
call
ds
test
push
in
push
call
push
gs
jns
push
cmp
imull
mov
mov
mov
arpl
imul
sbbl
xor
jecxz
clc
add
or
addl
push
inc
mov
add
jp
pop
or
mov
inc
sbb
cmp
out
stc
loope
sahf
add
mov
das
je
mov
or
pop
adc
aam
sti
xchg
popaw
mov
popf
mov
popf
push
dec
push
lods
mov
fmuls
jbe
stos
cmp
leave
rcrl
sub
sbb
repz
test
adc
sub
pop
into
fsub
sbb
jns
pop
fstps
cmpsl
xor
sub
cmp
jns
lret
push
mov
popf
mov
mov
jnp
hlt
es
int
aas
repnz
fbstp
popa
sahf
xor
cli
jmpw
inc
cld
inc
xor
imul
in
mov
dec
adc
call
mov
gs
movsb
es
pop
lret
xchg
mov
cwtl
jmp
fsubr
outsl
fsubs
imul
loop
xlat
jmp
pop
and
cmpsb
mov
mov
insb
int3
js
adc
arpl
xchg
mov
jb
mov
cmp
mov
or
or
jl
xor
mov
inc
adc
mov
jnp
repnz
dec
sbb
cmp
fsubl
mov
testl
cmp
fsubrs
out
cli
nop
adc
clc
lea
popf
mov
or
inc
sbb
jg
fdiv
sub
sbb
loope
pop
adc
or
xor
call
pop
adc
push
cmp
pop
mov
mov
repz
cmp
aas
repnz
in
test
inc
pop
lret
jne
push
jmp
jb
mov
adc
mov
and
mov
popa
in
push
pop
shlb
pop
mov
icebp
rcrl
sub
ss
mov
xchg
add
mov
ret
mov
int
inc
jl
xor
inc
sbb
ret
mov
repnz
imul
jmp
aam
mov
pop
dec
idivb
dec
mov
xor
dec
out
jp
aam
cmc
imulb
movsl
mov
int
out
scas
mov
jae
inc
outsb
out
push
sbb
fidivrs
shll
imul
outsl
or
lret
ret
ficomps
ret
lret
fsubrl
sbb
out
xlat
cwtl
bound
pop
push
xorl
sub
dec
stc
add
fs
inc
sbb
leave
std
and
aaa
xor
hlt
hlt
xchg
or
jns
cmp
dec
pop
sub
add
or
faddp
cmp
pop
mov
sub
cmp
mov
jg
push
es
pop
icebp
pushf
arpl
push
adc
and
sahf
loop
stos
or
mov
xchg
iret
push
adc
cmp
mov
shlb
sub
fdivl
out
lahf
dec
sbb
ret
xor
inc
hlt
add
mov
paddq
dec
pop
daa
enter
fnstsw
lahf
es
sbb
and
mov
push
popa
shrl
scas
xor
ret
and
mov
and
xchg
je
imul
dec
ds
ds
je
iret
pop
ret
push
scas
sub
cmp
xchg
mov
shll
les
lret
rcrb
aad
inc
dec
movsb
mov
inc
mov
add
or
je
in
mov
jl
sub
clc
xchg
lds
jbe
xchg
xor
pusha
mov
and
fwait
xchg
dec
inc
icebp
repz
stos
fisubs
ret
push
push
adc
hlt
mov
xchg
ficompl
aas
addr16
mov
mov
andb
lcall
insl
adc
scas
xchg
outsl
das
add
mov
mov
jle
push
dec
sahf
pushw
cmp
jl
mov
adc
inc
nop
lret
fdivp
sub
xchg
dec
or
loop
ret
adc
ja
and
enter
jns
mov
in
insb
jmp
outsl
mov
jle
outsl
mov
sub
sub
leave
cmp
das
les
push
jno
xchg
mov
es
inc
mov
pop
lods
cmp
push
stos
out
jno
leave
cmpsb
idivw
cmpsl
fists
pop
dec
es
push
pop
xchg
decb
out
bound
adc
cld
adc
mov
lcall
insb
adc
sbb
es
lock
mov
fucom
or
shlb
iret
test
cmc
fcomp
repnz
lock
xchg
out
cltd
icebp
sub
mov
inc
push
mov
mov
jb
mov
test
cmpb
xor
lods
sub
sbb
scas
xchg
ljmp
jne
sbb
aaa
push
adc
mulb
pop
jl
adc
fiaddl
enter
fwait
std
cli
int3
leave
inc
jmp
sti
inc
jle
test
popa
dec
aad
repz
scas
mov
pop
or
fdivrl
push
stos
fstpt
out
xor
xor
clc
daa
int3
sti
pop
xchg
mov
cs
inc
and
data16
sub
out
jg
iret
or
bnd
test
call
iret
cmp
dec
daa
es
rcrl
xchg
jp
sarb
pop
adc
rdtsc
push
jb
push
shrl
fcompl
xchg
jg
cmp
mov
rolb
push
push
jno
sbb
adc
or
pop
and
xchg
sub
push
cmp
mov
cmc
testb
sub
adc
push
loopne
incb
ljmp
mov
xchg
cmp
jo
stos
loopne
push
loope
das
jno
int
xlat
mov
sti
or
and
cmp
dec
cmp
push
push
les
mov
sbb
pop
stos
mov
out
cmp
xchg
cmpsb
mov
push
cmp
shr
hlt
out
jnp
dec
push
out
dec
dec
cli
mov
pop
or
outsl
xchg
je
bound
push
mov
sti
inc
fildll
xchg
push
and
jnp
cltd
lret
dec
sbb
cmpsb
or
loopne
popf
test
fstp
push
lcall
insb
inc
bound
sbb
dec
mov
popl
scas
add
mov
or
and
or
jg
lea
push
dec
hlt
movsl
jp
sbb
imul
push
repnz
inc
dec
dec
outsb
adc
aaa
xchg
ret
xor
push
push
mov
and
test
orb
pop
push
fstpt
sub
jne
xchg
dec
popa
xchg
mov
dec
std
push
inc
mov
test
pop
in
mov
jecxz
stos
and
loope
jl
or
mov
cmp
in
out
or
jg
dec
loopne
sub
in
popa
mov
testl
insl
cltd
repz
sub
cmp
or
call
dec
jb
jge
sbb
ficompl
roll
jge
or
dec
dec
mov
pop
xchg
sbb
push
xor
je
cmp
add
sbb
out
dec
hlt
mov
imul
movsl
jb
loop
addr16
pop
inc
cmp
or
insl
xor
std
nop
testb
xchg
pop
push
cmp
dec
mov
mov
pop
enter
jb
les
push
dec
ffree
cmc
mov
xor
xchg
xchg
adc
jb
cld
pop
adc
pop
sub
xchg
adc
xchg
xor
jge
icebp
cmp
xchg
rcrb
cmpsb
fadd
adc
or
dec
aas
loopne
ret
insl
in
scas
mov
lea
mov
and
jnp
sbb
sub
stos
adcb
mov
jp
push
and
mov
lret
subl
mov
cmp
lods
int
and
sub
jae
aaa
jg
in
ljmp
shll
pop
lret
ds
dec
or
scas
lret
mov
js
out
ret
mov
inc
movsb
jo
mov
dec
in
xchg
mov
mov
mov
jp
push
movhlps
cmpsb
out
cmp
mov
cmp
test
sbb
out
sahf
or
cmp
jmp
or
add
inc
adcb
in
ficoml
js
add
push
inc
jo
sti
sar
mov
in
test
insl
stos
mov
xlat
push
add
mov
mov
popf
movsb
aaa
push
insl
xlat
cmp
and
pop
gs
and
pop
jne
out
call
icebp
jl
ret
mov
arpl
mov
and
aad
icebp
sbb
fsubrs
jle
pop
mov
outsb
test
sbb
xor
mov
add
xor
inc
push
jnp
mov
pushf
stos
rcrl
push
jne
cmpsl
mov
clc
pusha
push
movsb
pop
aam
js
adc
in
ret
das
or
jle
add
dec
push
or
lods
or
mov
rclb
and
outsl
adc
push
add
sub
out
adc
cmp
jne
push
pop
leave
dec
cmp
aas
sbb
out
icebp
repz
imul
xor
lods
jb
push
jno
push
sbb
dec
and
jne
jp
sub
std
push
dec
or
scas
cmp
out
andb
ja
dec
orl
daa
xchg
or
push
mov
push
popa
sarb
test
push
push
jmp
cmp
les
imul
mov
cmp
out
sbb
subl
mov
rcrb
std
addl
or
pop
pop
fidivrs
dec
fstp
mov
movsb
in
sub
ja
dec
and
out
leave
notl
xlat
xor
sbb
repz
fwait
out
popa
iret
xchg
mov
push
das
mov
add
insl
dec
incl
mov
lods
mov
fisttps
into
xor
sbb
or
je,pt
mov
orb
and
sti
mov
pop
xchg
pusha
cmp
out
xchg
lds
sub
mov
lret
inc
pop
stc
test
xchg
push
fsubrs
inc
cmp
jb
push
lret
push
fcompl
mov
sarb
mov
cmp
out
push
sub
out
xor
mov
mov
jbe
sub
lea
test
leave
mov
jb
mov
jbe
repnz
test
mov
popa
int3
xchg
pop
cmc
lods
cwtl
pop
adc
inc
and
xchg
push
xchg
cltd
enter
mov
and
stos
fwait
ss
pop
sub
std
sub
or
stos
cmp
mov
cmp
xchg
insl
dec
test
ja
mov
inc
dec
ja
subb
push
jle
mov
popa
rcrl
rorl
orb
mov
pop
push
mov
mov
pusha
inc
and
fdivl
mov
dec
xchg
aas
mov
insb
add
push
cld
loope
mov
enter
test
sbb
out
insl
clc
jecxz
xor
mov
sarb
stos
and
stos
out
jle
cmpsb
lods
outsb
scas
fwait
xchg
les
mov
xchg
adc
loopne
pop
mov
cmp
mov
pop
mov
loop
sub
mov
push
mov
push
lods
xor
stc
ficoms
lea
push
sbb
fistl
push
lods
ret
clc
loop
jo
cmp
inc
pop
test
push
insb
sub
movsl
xchg
inc
push
add
sbb
insb
arpl
sbb
pop
push
iret
sbb
lods
sarb
lret
jo
outsl
push
xor
jo
push
add
lret
mov
add
dec
add
scas
push
aas
xor
add
push
jg
jnp
popf
inc
adc
test
aad
cltd
dec
dec
std
adc
push
or
pop
fs
add
in
shrl
pusha
mov
gs
inc
out
mov
and
test
jb
popa
sbb
data16
jmp
in
inc
jle
rorl
cwtl
test
lea
jb
xchg
mov
xor
xchg
dec
pop
data16
lods
fidivl
cli
inc
mov
scas
add
adc
lret
and
xor
hlt
xor
mov
xchg
call
or
sahf
and
out
dec
lock
std
orl
sbb
mov
or
add
testl
mov
call
nop
adc
daa
inc
das
push
sbb
mov
push
and
adc
scas
sbb
dec
push
mov
xor
pop
sar
xchg
scas
cmp
adcb
les
mov
inc
mov
into
add
inc
addr16
inc
rcll
insb
inc
pop
out
inc
mov
adc
bound
or
sbb
inc
popa
arpl
cmpsl
jge
mov
sub
mov
xor
hlt
cld
nop
mov
negl
aad
fmuls
cwtl
stos
and
mov
mov
ljmp
cmp
testl
mov
cli
outsb
out
imul
cmp
mov
sbb
jns
and
outsl
adc
aas
push
pop
pop
mov
adc
in
insl
adc
or
leave
mov
dec
addr16
stos
stos
push
sbb
push
sbb
adc
xchg
in
or
adc
adc
fincstp
iret
pop
mov
adc
cmovle
mov
push
sti
mov
mov
cld
cli
fwait
pop
pop
lock
aaa
mov
pop
mov
xchg
inc
outsb
cmpsb
dec
iret
or
aam
cwtl
or
push
push
adc
bound
dec
test
inc
adc
push
popf
dec
mov
out
cmpsl
daa
int3
pop
sti
loope
enter
cmpsl
stos
xchg
leave
lea
in
popf
sahf
loopne
push
xchg
test
mov
popa
test
push
cmc
sub
push
pop
add
push
ljmp
jae
fcomps
loopne
mov
or
xchg
sub
int3
and
adc
mov
and
add
fldt
push
adc
inc
popa
cmp
lods
das
fcmovnb
or
jbe
fwait
pop
jae
flds
sbb
or
lods
sbbl
push
stc
dec
sbb
push
cs
mov
outsb
and
icebp
imul
clc
jno
jo
pop
push
jle
movsl
test
sub
insl
movsb
mov
sbb
test
jg
add
enter
dec
push
movsl
loope
lret
xchg
cmp
nop
add
jmp
cmpl
mov
fwait
or
or
movsl
mov
mov
and
push
push
jmp
mov
adc
popf
jns
pop
xor
mov
addb
mov
push
lods
push
mov
push
out
jb
and
hlt
or
jp
sbb
test
jo
pop
sbb
sbb
pop
inc
nop
xchg
rcr
aas
sbb
pop
mov
push
cwtl
cmpsl
inc
lds
or
inc
mov
push
sbb
or
push
enter
imul
scas
cmp
pop
sub
jg
adc
mov
stc
push
and
clc
jns
outsb
jnp
mov
mov
sbbl
sbb
mov
subb
push
fwait
addr16
cltd
and
loopne
pop
popa
sbb
filds
sub
sbb
call
cld
ficomps
data16
repnz
jne
mov
dec
or
push
fdivrl
fcompl
call
out
jb
je
fcoml
rcl
psubb
inc
cld
adc
in
arpl
cli
sti
lods
and
sub
pop
test
icebp
pop
pop
pop
pop
subb
xchg
mov
pop
push
dec
sbb
xor
pop
movsb
inc
xchg
mov
cmpsl
inc
inc
mov
mov
lods
fdivp
clc
sbb
ds
lgs
inc
xor
add
sub
or
jmp
popa
adc
pop
ret
dec
jo
cmp
pop
pop
lea
mov
lahf
lret
or
icebp
imul
xchg
ret
dec
call
mov
xchg
lods
xchg
mov
pop
popa
and
enter
mov
aad
fbstp
inc
mov
in
xchg
aaa
out
pusha
testl
inc
jnp
pop
jnp
les
loope
jge
stos
int3
push
cmp
js
bound
pusha
sbb
pop
xchg
out
ss
in
sub
xor
push
push
out
sbb
and
jns
stos
xlat
aam
sbb
pop
xor
pop
stc
jae
pop
pop
xchg
fcomps
stos
add
aas
inc
dec
nop
psubq
adc
out
lods
adc
call
adc
jge
test
mov
and
jno
sbb
jmp
push
das
sbb
jns
sub
cmc
mov
jno
cmovs
sub
popa
stc
and
scas
jns
and
and
pushl
imul
bound
gs
and
push
test
inc
jnp
adcl
rcrl
sets
fidivs
xchg
es
arpl
test
and
add
pop
lods
out
push
scas
jmp
gs
inc
cwtl
ret
mov
in
pusha
dec
xchg
lea
xchg
jnp
inc
mov
sti
test
rorb
cld
mov
cmpb
stos
insb
imul
xchg
test
scas
fcoms
pop
inc
fwait
mov
iret
add
int
leave
dec
ja
jecxz
dec
cmpsb
inc
nop
or
xor
cmpsb
in
dec
or
mov
stos
inc
lcall
shrb
shl
mov
int3
popa
out
lods
mov
out
inc
mov
mov
jnp
add
pop
sbb
fidivs
fisubrs
out
into
push
sub
and
mov
mov
shl
ss
fucomp
fisubs
mov
xchg
and
xor
or
test
nop
dec
jl
jnp
xchg
jl
xchg
adc
inc
inc
add
loope
fs
aad
in
repnz
js
push
enter
leave
mov
mov
pop
sbb
int3
cmpsl
sub
mov
lds
mov
and
xchg
popf
xchg
daa
les
out
push
cmp
call
mov
shll
sub
xchg
xchg
mov
or
or
cmp
mov
xchg
out
xor
std
negb
es
sub
filds
xor
movsb
pop
add
iret
ljmp
cmp
je
outsl
sub
dec
fistps
call
cmp
jecxz
notl
pop
or
mov
jne
jl
cmp
lahf
inc
aaa
in
cli
adc
pop
sbb
movsb
fidivs
icebp
sysexit
push
pushf
fsubrp
fsubl
cvttps2pi
or
push
xchg
and
bound
sbb
or
in
push
lods
sub
ja
shl
ret
leave
pop
sub
mov
loop
dec
xor
cmp
mov
xchg
in
lret
adc
std
jo
jne
push
popa
add
imul
popf
xchg
nop
xchg
mov
out
gs
and
dec
fcompl
jge
filds
cmc
nop
shll
je
pushf
enter
iret
mov
mov
add
dec
fcomps
mov
add
mov
cli
mov
test
mov
lds
pop
sub
cwtl
outsl
lahf
jae
pop
mov
dec
call
inc
shll
push
push
popf
shlb
bound
fdivrp
mov
sarb
ret
push
push
in
jp
or
lock
ficoms
enter
cmc
inc
jo
stos
lret
test
neg
loope
dec
shr
inc
sub
sbb
jae
pop
ret
and
cmp
cs
sahf
popf
add
stc
pop
outsl
mov
xor
sbb
jle
xor
cmp
sub
popa
jmp
inc
cli
mov
movsl
xor
jns
adc
call
push
xchg
outsl
popaw
inc
sub
outsl
test
mov
dec
sbb
movsl
push
xchg
adc
mov
dec
dec
popa
push
cmp
gs
mov
lods
in
leave
addl
repnz
mov
pop
popa
mov
dec
out
lret
inc
mov
and
jno
out
sarb
lods
insb
js
xor
inc
ss
mov
fdivr
testb
mov
xchg
push
mov
cmp
or
jg
sbb
lods
aas
mov
mov
enter
inc
xchg
sti
and
mov
and
clc
addr16
jns
pusha
fdivrp
cmp
lods
dec
pop
adc
jne
mov
jno
inc
sub
cmp
mov
in
adc
lods
repnz
add
pop
mov
pop
cmp
and
insl
je
or
adc
scas
pop
aaa
xchg
or
movsl
stos
insl
clc
imul
push
fildl
cmp
mov
add
movsl
sub
mov
xchg
inc
jns
pop
xor
addr16
push
sub
orl
out
cmpsl
mov
cwtl
test
push
fs
movsb
push
loopne
popa
pop
or
dec
and
xchg
sbb
ljmp
iret
and
mov
adc
out
fs
push
sub
sahf
push
pop
daa
xchg
mov
and
sbb
mov
pop
pop
ror
mov
loopne
dec
sar
pop
fimuls
loopne
mov
or
xor
or
rclb
andb
filds
cwtl
fcmovnb
push
mov
pop
psubusw
cmp
cli
push
lock
mov
push
xchg
into
fsubr
pop
xorl
dec
jmp
pop
outsl
sbb
adc
cmp
xchg
dec
dec
or
lret
mov
jbe
bound
dec
imul
push
sub
adc
dec
pop
mov
xor
inc
daa
ret
test
mov
fxch
jae
jns
push
mov
pop
or
dec
xor
aam
mov
cmpsb
push
cmp
pop
sbb
cmp
fisttpl
mov
jo
addr16
rolb
sub
jmp
sbbb
jb
outsl
rclb
dec
mov
mov
or
pop
cmp
into
pop
int3
ja
ja
cltd
das
fs
scas
pop
das
aam
ja
fstpl
stos
inc
adc
mov
iret
pop
xchg
iret
jmp
repz
add
pop
mov
jle
fs
jo
adc
dec
pop
lock
call
pop
add
dec
jb
fwait
sti
jno
push
fwait
lea
jae
loope
stos
or
and
stc
fisubrl
inc
ret
dec
cwtl
out
insl
mov
xchg
sub
xchg
lea
sbb
ret
jp
in
jp
test
or
push
inc
mov
lahf
cs
insl
jmp
mov
pop
adc
sahf
push
rcrl
cmp
mov
xchg
cwtl
jp
add
mov
dec
outsl
xlat
scas
mov
pop
mov
push
pop
or
inc
icebp
mov
or
adc
mov
sti
mov
pop
enter
add
pop
jns
add
sbb
mov
es
es
sbb
sbb
cmp
inc
jne
mov
scas
addr16
dec
gs
sbb
adc
inc
rol
add
ret
mov
or
test
lods
ljmp
and
push
xor
mov
adc
fmull
push
add
bound
lret
test
inc
fadds
lahf
int
jg
mov
add
in
clc
in
jg
in
jns
push
sbb
jne
mov
sahf
mov
iret
fisubs
inc
roll
fwait
xchg
insb
xchg
popf
inc
shlb
adc
stos
sarl
pop
ljmp
insl
ljmp
and
or
push
mov
fiadds
daa
mov
dec
mov
pop
out
sub
imul
fmull
mov
in
xlat
popa
into
int3
scas
in
inc
sub
pop
cmp
mov
xchg
sbb
mov
outsl
jle
cmp
lds
jns
orb
sub
or
jecxz
mov
inc
or
in
mov
push
clc
stc
push
lahf
lock
inc
jo
xchg
mov
push
cld
push
loop
sbb
loope
mov
jo
mov
pusha
inc
aaa
sbb
stos
cmc
xor
cmpsl
xchg
xchg
lcall
in
testl
fcomps
dec
push
sbb
es
cmpsl
push
mov
ficoms
jp
fchs
out
aam
fists
jge
mov
jo
shr
jno
outsl
cmp
in
fbstp
mov
or
sarl
into
int3
push
jle
sbb
or
fnstenv
lods
pop
and
scas
mov
sub
sbb
push
cmp
jmp
into
or
ljmp
daa
jns
ss
jl
inc
mov
vmovntdq
fs
int
mov
aad
mov
pop
sub
lret
push
add
sub
fnstcw
ret
fbstp
xchg
mov
sbbb
mov
sarb
pop
aad
mov
call
popf
xchg
aam
adc
mov
lock
inc
and
stos
gs
add
pop
sbb
xor
cmpb
das
fldl
sbb
scas
pop
xchg
out
jmp
mov
push
rcll
mov
call
gs
mov
pusha
sub
ja
imul
mov
jbe
add
xchg
mov
das
sti
push
lahf
xlat
push
xchg
out
xchg
push
lahf
bound
push
shll
notb
and
or
iret
iret
sbb
sub
cmc
loop
jnp
and
cmc
dec
cld
shlb
repz
aaa
push
cld
add
mov
sbb
cli
add
into
mov
adc
mov
lock
fbstp
stos
mov
popa
shll
aam
enter
add
mov
test
dec
push
xchg
daa
loopne
ret
aaa
mov
mov
or
rolb
mov
xchg
sub
andb
fwait
repz
mov
aam
in
enter
push
notl
bound
cltd
adc
sbb
sub
xchg
pop
mov
inc
adc
jae
inc
mov
fildll
cmp
jg
sub
sub
mov
addr16
dec
je
call
xlat
and
stos
setbe
int
fprem
and
mov
stos
pop
xor
arpl
pop
or
or
in
jae
sarl
mov
fadds
sub
aam
arpl
or
pop
fildll
mov
fidivrs
pop
cmp
int
outsb
cmpsl
jbe
jnp
mov
cltd
sub
std
lea
dec
xchg
mov
lea
inc
icebp
push
test
loopne
dec
jge
ds
ds
cmp
dec
pop
pop
jbe
lahf
sub
gs
mov
add
outsb
or
dec
sbb
es
sub
dec
jl
sbb
inc
aas
ss
sub
cmpsl
sbb
or
dec
adc
sub
lods
jecxz
loope
inc
mov
add
addl
xor
div
scas
insl
mov
pop
les
ret
cltd
pop
xchg
push
arpl
negl
and
jmp
test
fcmovnu
in
jecxz
push
pop
int
cli
out
pop
fwait
lret
or
nop
inc
inc
jae
pusha
in
gs
imul
mov
xchg
and
jns
mov
out
jecxz
dec
dec
rol
sbb
data16
mov
jp
das
fucomi
sti
gs
mov
ss
dec
push
mov
pop
and
notb
out
mov
lret
fs
sahf
mov
nop
mov
out
rep
xchg
mov
mov
inc
mov
jnp
addr16
push
lret
jae
push
int3
push
aad
inc
adc
rorb
ret
rorl
iret
test
mov
out
mov
jae
mov
fwait
dec
daa
xor
sqrtps
fstps
sbb
rclb
mov
nop
insb
mov
push
and
xor
or
mov
addr16
icebp
dec
cmp
xor
mov
xchg
pop
jns
xchg
xchg
pop
popa
push
push
repz
imul
cwtl
jl
or
pop
xchg
cld
clc
push
imulb
xchg
push
inc
dec
mov
out
test
jno
std
pop
and
pop
and
adcb
mov
roll
aam
aaa
aas
jl
aaa
cli
cli
out
pop
mov
xchg
sub
add
or
dec
dec
cs
rol
pop
aaa
fildll
xlat
xchg
je
sub
push
xchg
rclb
mov
mov
or
rorl
ljmp
ret
inc
setg
push
lods
cmp
bound
into
nop
ja
js
arpl
dec
jne
nop
mov
rcr
and
ljmp
std
lods
or
xchg
push
dec
mov
mov
iret
xchg
dec
mov
gs
mov
test
adc
jbe
fsubr
dec
incl
inc
stc
into
dec
mov
movsl
hlt
xchg
cld
rolb
jno
mov
shr
sbb
nop
pop
inc
hlt
mov
mov
fbstp
cmp
pop
pop
xor
rcrl
mov
es
push
imul
and
outsl
jecxz
cltd
mov
jns
push
mov
jbe
int
lret
pop
inc
cmpsb
daa
mov
in
das
sbb
arpl
arpl
hlt
and
hlt
lods
push
xor
addb
in
sbb
xchg
cmpsb
sub
loop
sub
or
push
aam
in
lock
push
hlt
cmp
jae
aam
cmp
push
insl
insb
and
js
in
outsb
movsb
adc
mov
cmc
bound
push
movsl
stos
jo
gs
fcmovb
cld
dec
jge
icebp
pop
dec
movsl
std
in
mov
pop
insl
sbb
jns
add
test
jle
sbb
bound
stos
imul
push
adc
lods
or
je
rorl
inc
pop
movsb
daa
jecxz
mov
mov
ficoms
add
sbb
ficomps
push
inc
sbb
pusha
outsb
dec
dec
pop
sbb
sub
mul
nop
pop
and
mov
ret
faddl
lock
je
dec
pop
cmp
bound
adc
mov
cmp
lods
or
xchg
cs
adc
push
shlb
int
push
pop
stc
xchg
add
rcrl
sbb
sti
insl
dec
into
cmpsl
loopne
jecxz
mov
mov
and
gs
dec
test
fdiv
push
outsl
repnz
arpl
jge
ret
pushf
lahf
push
jnp
adc
lods
xor
pop
lods
dec
push
repz
pop
add
push
dec
mov
ja
mov
in
adc
pop
mov
pushf
xor
xchg
sbb
aad
fsts
pop
mov
add
sbb
xlat
std
ret
lods
mov
xor
testl
stc
push
mov
or
mov
sub
leave
sbb
in
mov
lods
mov
mov
lcall
xor
pop
fwait
adc
jns
xchg
push
repz
sbb
fwait
lret
xor
or
int3
mulb
inc
lahf
and
or
sbb
xchg
xlat
sub
mov
and
pop
test
adc
scas
push
cmpsl
les
icebp
mov
xor
dec
sbb
dec
mov
rolb
cmp
test
xchg
mov
outsb
mov
inc
test
cli
es
sbb
repz
xor
or
lods
mov
daa
inc
addl
sbbb
outsb
ret
out
rorb
adc
xlat
lcall
pop
pop
idiv
sarl
dec
xor
sub
jne
push
cmc
outsl
frstpm(287
adc
jmp
sub
ffree
pop
push
pop
repz
jbe
hlt
inc
push
pop
jno
mov
inc
insl
es
ds
test
pop
insl
cwtl
inc
loopne
push
dec
lock
aaa
jo
lcall
jne
dec
and
mov
sbb
daa
mov
movsl
fst
and
pop
adc
adc
pop
iret
inc
mov
lock
xor
sbb
shlb
xor
xor
add
or
mov
stos
out
aaa
xlat
addr16
out
inc
jp
dec
cli
mov
pop
cld
sarl
loope
loop
jne
inc
cltd
imulb
cmp
xchg
mov
or
cmp
rorb
mov
xchg
out
loop
xor
cmpsb
movsl
cmp
jp
mov
cmp
xchg
add
sub
pop
arpl
dec
and
inc
shll
sti
pop
clc
arpl
loop
cmpsl
inc
mov
pop
les
push
push
xor
movlps
and
xchg
pop
pop
xchg
sbb
ficomps
jns
mov
jmp
jb
arpl
test
dec
xor
push
push
push
movsb
jg
clc
pop
or
cmp
push
out
addr16
dec
cmp
pushf
xchg
sbb
pop
mov
or
daa
imul
sbb
sbb
fadds
inc
ljmp
jge
cli
jg
inc
repz
inc
jb
jb
inc
cmp
mov
sub
mov
jbe
pop
jnp
mov
xchg
shrb
sbb
xchg
ljmp
mov
mov
sub
dec
lods
cwtl
push
adc
in
mov
adc
aaa
ret
test
test
jl
sbb
fcoml
or
sub
mov
and
int3
add
xor
and
nop
push
mov
pop
in
data16
test
mov
or
lock
add
int
orl
or
daa
push
cs
addr16
lds
xchg
call
jno
cmp
pop
aas
cmpsl
in
or
sarb
leave
in
fldl
clc
inc
pusha
rcrl
dec
jmp
xchg
jns
out
mov
pop
jmp
xor
mov
insb
lret
movsb
or
push
int
xor
sub
lret
in
mov
or
rcrb
mov
sbb
xchg
inc
cltd
push
test
call
ficoml
xor
lea
loopne
hlt
xlat
jecxz
jne
or
push
and
repz
sbb
xchg
repz
arpl
xor
lahf
mov
ret
hlt
sbb
ret
mov
fidivs
in
aaa
decl
mov
mov
add
dec
outsb
push
jge
aas
add
fnstcw
rclb
push
push
repz
push
mov
inc
iret
icebp
test
push
rcl
repnz
imul
jge
stos
subb
push
adc
cmpsl
mov
jnp
cmpsl
jl
adc
mov
push
ja
push
pop
cs
push
js
imul
enter
iret
sti
hlt
inc
inc
adc
dec
sti
inc
push
sahf
daa
cmc
cli
mov
lea
pop
mov
add
add
arpl
sub
xchg
pop
pushf
xchg
cmpsb
inc
mov
mov
lods
push
mov
push
and
lods
lret
mov
fiaddl
xchg
rcrb
cld
inc
insb
ficoml
cmp
shlb
pop
xchg
mov
aaa
fbld
inc
fisubs
jmp
movzwl
roll
mov
jg
mov
pushf
cltd
aas
sahf
mov
stc
sar
push
fbld
sti
ja
pop
sti
sbb
sub
pop
mov
enter
sbb
fsubl
movhps
mov
sarl
xchg
and
jl
xor
out
cwtl
mov
pop
scas
adc
pop
add
pop
or
leave
or
or
add
dec
ret
mov
xor
call
mov
enter
pop
in
dec
pop
adc
mov
add
in
xchg
fs
mov
shl
ss
cmc
push
les
lods
loope
jp
push
push
dec
mov
push
ret
mov
add
mov
cmc
add
loop
loopne
ss
scas
sub
add
dec
pop
loopne
es
push
stos
fstpl
pop
scas
push
mov
mov
sbb
nop
push
repz
pop
inc
ret
outsb
aad
push
js
jns
mov
mov
lods
out
sub
cmc
iret
mov
data16
insl
rcrb
aam
pop
inc
or
sub
andb
jno
jg
mov
rorb
shlb
xchg
adc
jns
shl
inc
fdivrl
push
jecxz
stc
xor
mov
movsb
test
mov
fdivrp
jp
int3
inc
push
xchg
pusha
cltd
xor
sub
cli
sti
xchg
std
mov
adcl
in
inc
push
mov
xor
add
leave
mov
jg
jbe
mov
mov
xchg
sub
xchg
test
shlb
cmc
push
jo
leave
shll
add
jecxz
sti
cmp
mov
stc
pop
push
sti
push
int3
sbb
push
fwait
dec
jb
lea
inc
das
inc
sbb
imul
test
cmp
enter
dec
pop
add
je
and
push
jmp
adc
push
imul
cmc
sub
xor
out
pusha
call
jb
inc
js
mov
inc
pop
addl
clc
aam
repnz
in
enter
xor
dec
sbb
pop
stc
add
push
pop
stos
push
add
std
mov
mov
leave
and
push
mov
mov
xchg
stc
push
andb
leave
jmp
mov
push
push
pop
push
adc
jmp
insb
in
and
cmc
pop
je
mov
rclb
rcl
mov
sahf
add
cltd
and
xor
fadd
xorb
push
mov
mov
out
adc
and
into
ja
aam
mov
pusha
in
mov
fcmovu
lcall
scas
arpl
mov
pop
stos
fmuls
testb
test
stos
jne
sarl
icebp
mov
inc
add
inc
mov
cmp
outsl
aad
dec
in
dec
fcmovnb
mov
daa
dec
fildl
frstor
inc
fwait
in
mov
pop
sbb
incl
push
repz
aas
sbb
cmpsb
test
enter
inc
int3
lds
xor
es
pop
push
push
imull
loopne
or
push
dec
jge
shl
aam
adc
mov
neg
fcomps
lahf
jbe
shl
test
loope
lds
sub
mov
mov
sti
roll
xchg
mov
jl
jp
jae
mov
ficomps
adc
mov
push
cmp
mov
lea
inc
add
stos
or
loop
out
lret
push
jecxz
pushf
clc
jae
mov
aad
mov
test
shll
lahf
push
or
mov
sub
push
sbb
mov
lahf
push
ljmp
fs
nop
nop
aas
xchg
and
dec
test
sti
insl
xor
in
sub
stos
fmul
pop
jmp
or
or
fcmovb
stc
inc
xor
sbb
lret
xlat
mov
xchg
out
mov
repnz
mov
jno
add
rcrb
xor
les
add
je
pop
lret
adc
dec
in
int3
mov
jge
mov
mov
inc
pushl
ret
mov
xchg
jbe
test
dec
jle
add
mov
mov
mov
insl
outsb
stos
add
adc
mov
adc
hlt
addr16
xor
push
pop
test
in
jnp
sbb
cmc
lock
cli
jb
push
fidivl
out
lock
inc
orb
rclb
sbb
pop
lods
insl
mov
imul
pop
lods
mov
add
jge
scas
xor
mov
aam
leavew
jb
mov
pop
mov
jbe
pop
lods
and
lods
push
test
mov
cmp
pop
dec
out
enter
mov
push
pop
leave
jb
jnp
fsts
jp
mov
ja
mov
inc
test
ljmp
ret
test
cmp
or
inc
and
ret
pushf
mov
mov
push
in
outsl
jbe
add
mov
and
or
loopne
adc
in
pop
pop
nop
hlt
mov
cmp
lds
sub
dec
push
cli
cmpsl
pushf
push
rcrl
mov
jmp
mov
inc
xor
inc
ret
add
sbb
jns
xchg
jns
xchg
xchg
lahf
sahf
sti
mov
inc
mull
ret
cmp
popaw
shlb
mov
add
dec
and
xor
and
xchg
lods
daa
xchg
lea
jecxz
push
outsl
mov
sub
lock
xor
adc
xchg
and
insl
fimuls
xor
or
adc
xor
xchg
cmp
lock
mov
daa
jns
mov
lock
movsb
aad
not
push
cmp
fsubs
out
test
cmp
call
addr16
add
insb
sahf
jge
pcmpeqw
stc
pop
dec
or
shll
dec
mov
shrb
adc
fisubrl
sub
test
lahf
add
stc
mov
shll
xchg
popf
push
cmp
movsb
outsb
xchg
nop
daa
mov
imul
aam
mov
lahf
sub
int3
adc
xchg
nop
or
add
stos
pop
iret
das
sub
inc
jl
adc
mov
fs
add
dec
pop
push
sbb
or
scas
add
push
xlat
lahf
cmp
shlb
mov
cwtl
test
movsl
xchg
hlt
pop
pop
movsl
push
movsl
cmp
inc
jbe
mov
mov
stos
in
mov
and
mov
insb
rcrl
jp
cmpsb
dec
mov
inc
or
lcall
popf
int
lret
mov
insl
or
mov
jb
push
sbb
fnstsw
scas
int
mov
mov
cmp
aam
and
icebp
test
pushf
movsb
push
or
mov
out
aaa
repnz
push
add
fistl
or
jg
cmp
mov
cmp
and
jb
cmpsb
mov
loope
xchg
out
push
xor
shll
cmp
push
scas
mov
xchg
mov
fstpt
push
je
sbb
in
cmp
dec
test
sub
push
fistpll
push
jbe
enter
ljmp
movb
mov
mov
push
pop
bound
sub
dec
arpl
out
aam
adc
rcll
xchg
mov
xchg
mov
loopne
add
and
add
ret
dec
movsl
rdseed
aam
enter
pop
xchg
lods
jg
cs
add
lds
and
loop
adc
mov
shlb
loop
movsl
jae
in
pop
add
push
adc
add
movsl
jb
mov
mov
enter
outsb
fwait
leave
movsl
add
xor
jb
mov
mov
jle
xchg
rcrb
subl
push
repnz
push
aas
sbb
pop
pcmpeqd
and
sbb
pop
addr16
lods
nop
sbb
hlt
xchg
pop
addr16
in
adc
cmp
repz
push
add
imul
sbb
mov
jbe
lcall
in
pop
push
in
sub
push
pop
negb
push
popa
fstpl
mov
sub
fsubl
jp
push
arpl
jnp
pusha
and
xchg
mov
mov
or
test
fadd
mov
ja
aaa
jo
push
mov
dec
push
xchg
adc
fstl
sbb
add
mov
aaa
bound
nop
std
dec
sbb
xchg
nop
ja
cli
test
aas
push
cmp
cmc
loope
push
stos
into
and
addr16
dec
enter
scas
or
gs
jo
scas
int3
push
cmpsl
dec
cmpsb
outsb
jns
cmp
insb
fs
push
addr16
jge
je
das
pop
jecxz
js
add
fnclex
jmp
testb
add
lahf
jle
cmp
fsts
sub
das
ret
bound
icebp
sbbl
mov
daa
ss
mov
mov
push
pop
lea
js
push
or
xor
inc
int3
inc
inc
sub
xchg
aas
adc
mov
bound
lods
mov
dec
cmp
xor
pop
cmpsb
xchg
pop
scas
daa
dec
adc
ret
push
mov
inc
lcall
sub
jne
les
or
push
inc
inc
out
jg
xchg
pop
or
mov
stos
test
in
stos
jno
arpl
fimuls
and
stos
sub
pop
movsb
ljmp
pop
cmp
in
std
test
int3
mov
loop
or
mov
mov
mov
pusha
mov
je
dec
lret
test
test
fldenv
xchg
adc
cmp
popf
adc
jmp
aam
pop
and
push
xchg
push
cmpl
sub
dec
push
or
lret
xor
sbb
leave
or
pop
test
pop
movsl
mov
xor
sar
fwait
lcall
test
push
sbb
in
mov
lcall
mov
fnstcw
cwtl
jno
sbb
jp
inc
mov
cmp
repz
inc
jns
mov
in
or
test
enter
jmp
inc
sbb
in
sub
loopne
xchg
cmp
add
push
mov
mov
xor
add
sub
andl
mov
push
je
lret
jecxz
clc
lock
xchg
mov
add
inc
js
pop
xor
jae
cld
pop
sbb
mov
xor
sbb
mov
mov
clc
jbe
fcoml
dec
aad
clc
daa
sbb
jl
rorb
ficompl
lahf
xchg
xchg
cwtl
add
ljmp
into
jg
divb
hlt
lahf
ja
adc
pop
mov
push
xchg
addb
mov
adc
mov
fsub
sub
nop
xchg
mov
xor
dec
scas
cmpl
inc
imul
dec
repz
fwait
je
push
and
xchg
xor
in
inc
test
xchg
clc
sbb
mov
xor
push
sbb
lahf
push
push
dec
pop
cwtl
pop
ljmp
sbb
jb
push
push
test
stc
cmpsl
pop
mov
adc
sbb
std
mov
aad
jns
and
inc
test
ds
xor
pushl
push
push
les
push
cmp
shll
shrb
dec
mov
cmp
aas
stos
and
dec
sbb
and
popa
inc
fadds
orb
out
xchg
test
xor
push
cltd
outsb
fsubrs
mov
in
mov
jno
inc
push
inc
adc
add
inc
or
repz
mov
jmp
inc
dec
mov
stos
xor
mov
jae
cwtl
xchg
push
test
orl
or
fsubs
jl
clc
arpl
jle
lock
scas
jne
xorb
mov
jp
jge
xor
inc
push
add
sbb
repz
mov
xor
mov
adc
hlt
gs
xchg
push
enter
movsl
pop
sub
cli
test
movsl
aam
sub
cmpsl
fistps
mov
mov
out
push
outsl
insb
sbb
push
mov
imul
and
fisttpll
mov
mov
test
in
cld
faddl
out
xchg
lods
mov
push
lods
pusha
jge
mov
sub
jno
aad
test
fisttpl
or
aas
push
pop
push
push
add
icebp
ds
xchg
mov
sbb
rolb
popa
sti
test
orb
lret
in
cmp
xchg
jae
lahf
cltd
cmp
shll
sub
cmp
outsl
cmpsl
mov
outsb
cmp
mov
jmp
push
jl
jno
neg
lahf
mov
pop
lea
data16
cmp
cs
sub
add
push
cmp
ret
mov
decl
xchg
xchg
cld
jg
fdivrl
or
mov
and
push
lock
cwtl
sub
dec
rorb
pop
pop
pop
test
cmc
popa
cmp
mov
mov
or
jo
cmp
jle
mov
or
fdivp
testb
insb
push
cmpsl
mov
loop
or
pop
movsl
xor
scas
das
pop
out
mov
imul
negb
pop
addr16
test
dec
mov
popf
xor
in
out
push
jo
mov
xor
add
popa
sbb
xor
in
push
aad
and
push
jb
test
mov
cmp
lret
sbb
sbb
add
mov
pop
xlat
arpl
mov
movsl
inc
add
dec
xor
dec
jno
fisubrs
in
pushf
roll
jne
or
pop
iret
stos
outsb
jl
fwait
xchg
sbb
cltd
incl
insb
int
xor
out
mov
es
sub
subb
cltd
sahf
lahf
xchg
xchg
in
nop
inc
enter
inc
push
sahf
adc
lcall
mov
sub
pop
cmp
mov
dec
das
icebp
mov
data16
inc
adc
sbb
or
cmp
jp
js
testb
pop
mov
imul
jecxz
sub
inc
inc
out
sub
push
push
xchg
and
lret
cmp
and
add
cli
cwtl
out
xchg
jmp
or
and
stos
scas
pop
jbe
xchg
sub
in
sbb
movsl
aas
xor
and
pop
aad
test
js
rclb
jg,pt
psllw
mov
repnz
std
jae
iret
cld
out
jmp
push
popf
fnstsw
aad
dec
sub
orb
mov
jecxz
or
xchg
adc
cmp
faddl
ret
les
mov
gs
and
loopne
jp
test
bound
repnz
adc
fadds
pushw
pusha
cwtl
lock
adc
xchg
cmp
xor
loope
sub
mov
pop
out
test
fldcw
jno
xchg
pop
loop
pop
push
pop
nop
sub
cli
cmp
pop
cs
sub
jle
cwtl
dec
out
cmp
ret
fstl
imul
repnz
xor
jae
xchg
sbb
jnp
mov
inc
jg
hlt
filds
inc
jbe
jb
imul
xchg
cmp
cmp
js
push
fs
test
adc
inc
push
loope
pop
and
cmpsl
xchg
cmp
sbb
shl
pop
scas
push
sbb
xchg
outsl
or
mov
out
fcompl
inc
aam
add
pop
inc
fisttpl
jg
mov
out
mov
sbbb
sub
mov
fdivp
pop
dec
punpcklwd
ret
cmp
mov
imul
pop
add
and
mov
push
jl
iret
lcall
push
sbb
stos
lret
pop
div
scas
sbb
ret
hlt
stos
mov
push
ss
scas
arpl
sti
pop
cmpsb
sub
add
sub
imul
out
xchg
lret
insl
push
jle
in
icebp
arpl
aad
arpl
pop
xor
xchg
out
jmp
out
sub
loopne
lock
aas
add
inc
xchg
in
test
ds
mov
enter
sub
rcr
fiadds
lods
pop
adc
jmpw
and
jle
addr16
sub
pop
inc
aas
mov
adc
cmp
iret
aad
enter
sub
dec
les
ss
cmpsl
call
mov
mov
xchg
iret
out
out
pop
sbb
das
movsl
imul
fdivrl
rclb
jl
mov
repz
sub
andl
sub
test
push
rcrb
jp
sub
xor
mov
test
jl
test
jge
push
push
xchg
xchg
out
and
popa
decb
xor
lcall
insl
ret
xor
lret
xchg
pop
mov
or
mov
add
testb
insb
sbb
mov
mov
dec
out
or
inc
imul
test
sub
add
push
ljmp
adc
jmp
adc
clc
pusha
adc
mov
ficoms
loope
jb
sti
dec
inc
aas
and
mov
sbb
and
dec
push
sbb
hlt
lret
jo
jl
pusha
jecxz
mov
mov
mov
iret
mov
movsl
push
fs
inc
and
add
les
pop
bound
push
sbb
aam
addr16
push
or
jbe
adcl
or
or
call
inc
mov
jp
into
xor
ljmp
jno
jge
test
xchg
shr
jge
mov
xlat
dec
adc
ds
sub
out
jbe
dec
push
outsb
loop
push
leave
outsl
mov
mov
push
mov
sbb
sahf
xchg
or
sub
outsb
mov
lret
je,pt
aam
lret
scas
into
xchg
jne
lds
cmp
leave
adc
xchg
jecxz
ret
sub
lock
je
out
imul
lock
das
ret
add
int
pop
filds
pop
push
xor
loop
xorl
sarl
pop
jno
idivl
pop
mov
ss
scas
cmpsb
pushf
xchg
pop
outsl
fdivrl
or
sbb
xchg
inc
hlt
hlt
dec
push
sbb
inc
push
push
pop
jbe
repnz
stos
inc
je
mov
mov
xor
pop
scas
fcomps
cmpb
mov
mov
ret
mov
leave
sti
bound
dec
inc
int3
popf
pop
adc
jmp
push
adc
add
mov
loop
fisttpl
les
mov
add
into
push
cwtl
mov
and
pop
mov
add
mov
jl
test
mov
mov
fcom
sbb
dec
cmc
push
push
iret
cmpsb
sub
jb
cmp
scas
ss
mov
movsl
out
sub
ja
sub
fdivrs
mov
cmc
fwait
popf
stos
fidivrl
sub
mov
call
push
push
movsb
ss
shll
jp
mov
ss
jbe
cmp
xor
push
fs
sbb
test
lret
sbb
clc
pop
mov
dec
add
push
sbb
sub
adc
pop
mov
xchg
or
out
pop
inc
xchg
inc
pop
add
and
cwtl
pop
lods
xchg
sti
int
xor
repz
push
insb
cltd
ret
push
lds
nop
pop
push
inc
mov
call
push
sti
cmp
add
data16
jb
aas
aas
jnp
cmp
xor
jmp
scas
les
or
out
adc
xchg
push
fildll
jmp
jbe
in
iret
push
iret
das
jno
mov
mov
cmp
outsl
mov
and
in
incl
aaa
pop
shlb
adc
dec
mov
jmp
stos
add
into
jmp
mov
pop
outsl
add
xlat
pop
jb
in
mov
dec
aad
pushf
test
mov
or
test
outsb
jae
jb
clc
and
xor
dec
andl
gs
stc
push
pop
or
or
lock
mov
ret
mov
lods
pop
mov
and
inc
mov
ds
mov
cltd
in
push
ret
enter
test
cli
pop
inc
push
adc
repz
mov
sbb
mov
hlt
xchg
add
test
ljmp
sbb
fisubrs
inc
xchg
pop
in
sbb
cmp
out
addb
stos
dec
lahf
cmp
pop
addr16
push
mov
dec
icebp
xor
incb
push
xor
sbb
jne
subl
arpl
lea
xlat
shrb
rcrb
scas
xor
dec
jmp
in
fwait
mov
lret
pop
and
test
sbb
mov
xor
lret
cmp
ret
mov
xor
incb
jnp
mov
lock
add
pop
adc
ja
inc
xor
xor
jb
push
sub
cmp
adc
out
pop
test
ljmp
mov
ds
or
mov
or
fnstenv
xchg
lea
in
out
sub
and
mov
into
movsl
xchg
pop
xchg
movl
mov
sbb
clc
adc
daa
mov
int
add
sub
jp
fidivrs
aad
test
cmp
aam
pop
cmp
mov
scas
mov
inc
shrb
mov
mov
mov
push
fxch
jae
sbb
fsub
add
push
int
and
sbb
inc
sbb
outsl
xchg
jecxz
cmp
xchg
xchg
mov
xchg
negl
je
mov
pop
mov
jo
inc
jae
add
sbb
std
enter
out
push
aad
faddl
push
mov
vpunpckldq
lcall
icebp
div
cmp
lret
dec
lret
cmp
pop
arpl
mov
sbb
add
fstpl
aaa
in
xlat
lret
imul
lods
jl
xor
inc
mov
loopne
lcall
inc
out
cmc
stos
mov
stc
sbb
subl
mov
cmc
pushf
out
pop
mov
cmpsl
sub
in
lret
mov
xchg
mov
out
xlat
loopne
fdiv
inc
dec
cmc
fwait
clc
xor
pop
sbb
imul
cs
push
test
sbb
xor
dec
jno
ljmp
jp
jle
ljmp
stos
jbe
fs
push
add
cmp
xchg
mov
xchg
adc
jnp
jle
rcll
insb
pop
jbe
pop
imul
hlt
cmp
in
aaa
fstps
inc
imul
pop
add
mov
dec
cmp
dec
jp
dec
icebp
jmp
stos
xchg
loope
gs
mov
repnz
popf
hlt
jno
or
adc
jae
push
fdivrl
jmp
jbe
push
rcr
shrb
fnsave
mov
xorl
mov
mov
jl
dec
dec
pop
movsb
pop
aas
dec
mov
add
int3
hlt
xchg
mov
leave
movsb
mov
loopne
shrb
lock
loope
sbb
cmp
js
aas
xlat
shll
jle
outsb
roll
jno
sub
movntps
jb
aaa
movsl
xchg
cmp
or
dec
lahf
addr16
loop
pop
loopne
aam
push
jp
inc
push
ret
push
data16
test
add
sbb
push
xchg
xlat
inc
adc
adc
loop
sti
aam
inc
push
cmp
and
xlat
test
ret
xchg
hlt
or
or
inc
lds
ss
stc
push
das
ret
cld
push
test
mov
cmpsl
xchg
loop
push
pop
push
cwtl
dec
sub
std
popa
cmc
adc
int
mov
push
push
jns
jge
lds
dec
out
and
mov
and
vmload
jg
in
aam
adc
inc
jb
in
or
cld
jno
mov
sbb
mov
inc
js
pop
jns
inc
xor
jl
stc
pop
cmpb
mov
rorl
add
or
adc
call
stos
test
test
ret
scas
xchg
mov
movsb
or
movsl
aas
sub
ficoml
sarb
aam
pop
lcall
jl
dec
xlat
popa
mov
xor
nop
jmp
xor
push
dec
lds
iret
xchg
push
pop
test
jecxz
jno
notl
mov
scas
ret
lea
shrl
mov
fcomi
jne
mov
mov
shl
mov
xchg
mov
mov
adc
ljmp
fst
and
or
iret
mov
jl
jns
aam
loopne
outsl
mov
jne
sub
add
push
mov
pop
dec
test
push
mov
outsl
cmp
fstl
aaa
mov
out
cmpsl
push
adc
dec
in
leave
or
mov
test
mov
xchg
in
insl
hlt
lret
mov
test
push
mov
sbb
arpl
push
push
jmp
ljmp
gs
fimull
lods
inc
sbb
orl
sbb
insl
test
or
outsb
and
loop
pop
sarl
jmp
add
aad
pop
or
lea
dec
sar
jb
stc
add
sahf
in
decb
add
mov
push
add
outsb
pop
lods
fidivl
test
mov
jbe
xchg
xchg
sub
lcall
push
jp
xchg
mov
int3
clc
sub
jnp
pop
dec
dec
inc
negl
inc
stos
cmp
addr16
shrb
add
pop
pop
dec
sti
data16
inc
in
cmp
push
cmc
sbb
clc
mov
popa
xchg
sub
stc
push
ss
jae
sub
push
leave
sub
ret
movsl
inc
push
xchg
test
inc
lds
out
das
insl
inc
jb
or
and
repz
cmp
insb
inc
out
add
push
mov
lods
sbb
cltd
stos
mov
dec
cmp
push
jmp
nop
pop
jns
js
dec
movsl
ret
insl
push
je
dec
push
lds
in
les
and
jae
pop
mov
push
mov
hlt
lock
mov
jnp
leave
push
mov
sbb
jl
dec
mov
or
jbe
scas
or
jnp
fmulp
dec
jle
popa
pop
mov
and
fimull
nop
pop
int3
out
cmp
push
ja
popa
lods
dec
punpcklbw
push
inc
mov
ljmp
pmuludq
iret
mov
mov
or
lret
adc
jl
ljmp
cmp
add
xor
inc
dec
mov
add
sbb
sbb
ljmp
sub
dec
jecxz
aam
xchg
jecxz
enter
mov
ja
add
jmp
dec
jmp
cmp
xchg
lock
test
xchg
xchg
push
insb
fwait
adc
scas
cwtl
mov
loope
psrlq
push
out
jmp
cwtl
lea
pop
sbb
insb
shll
dec
mov
stos
mov
cs
and
js
or
shlb
push
xor
pop
jne
sub
lods
xchg
rcl
push
fadds
sub
gs
arpl
cmpsl
inc
cld
data16
rolb
in
fldcw
aas
pushf
filds
xor
pop
stc
cmpsb
popa
inc
push
mov
jno
push
sub
xor
adc
aas
cmpsb
nop
int3
fmull
sub
sahf
or
scas
and
xchg
mov
mov
outsb
shl
adc
cs
loope
fidivrs
sbb
cwtl
adc
jp
xor
out
in
xlat
arpl
lcall
pusha
xchg
hlt
cmp
pop
inc
mov
mov
js
test
xchg
ret
mov
cld
sub
scas
dec
out
jae
insb
iret
pop
cli
sbb
cs
insl
outsl
dec
push
ja
jmp
adc
xor
shrb
imul
shrb
fistpll
out
mov
xchg
fwait
addr16
mov
clc
adc
lcall
popf
mov
or
mov
mov
pop
mov
add
out
mov
and
gs
daa
test
scas
inc
rclb
jb
jne
push
leave
push
and
adc
xor
repz
stos
fcmovu
lret
sub
les
jns
daa
push
dec
enter
lods
les
leave
jecxz
test
xor
clc
xor
fsubrs
pop
xchg
lahf
fs
jno
in
dec
sub
loop
add
jg
push
mov
arpl
out
out
pop
mov
testl
arpl
pushf
pop
in
lds
pop
dec
in
iret
pushf
lds
xor
ss
pop
das
lcall
daa
rorl
cmpsl
daa
mov
push
faddp
xor
outsl
inc
push
sbb
pop
mov
call
cmp
popf
sti
mov
xchg
add
or
push
mov
in
ret
pop
icebp
mov
xchg
js
addr16
iret
sub
rclb
push
addr16
sub
fists
xchg
mov
pop
jp
test
push
jae
bound
jo
inc
push
ret
mov
dec
jb
add
mov
cli
mov
out
inc
cmpb
cmpsb
adc
jmp
push
push
push
imul
fmulp
test
daa
sub
mov
inc
jmp
ret
xchg
lahf
andb
xor
fcmovnbe
rcl
fldt
jmp
js
mov
ljmp
xchg
add
aaa
imul
pop
in
dec
dec
pop
adc
das
cmp
fs
mov
sarb
inc
insb
and
mov
test
fwait
push
or
sbb
xor
jns
test
repnz
xlat
and
inc
jno
cmp
xor
mov
mov
sbb
cltd
sahf
add
fucom
or
mov
dec
je
cmp
cmc
cmpsb
shlb
xor
mov
leave
gs
inc
hlt
pop
or
outsb
cmp
fldcw
push
and
jnp
push
mov
sub
cmp
into
sub
mov
cli
aam
and
ret
lea
test
or
sbb
cmp
inc
push
sti
inc
jmp
fldl
inc
stos
sbbl
add
jge
jo
mov
imul
jg
sbb
dec
out
es
out
pushf
js
in
push
sbb
imul
adc
pop
aaa
dec
test
xor
pusha
arpl
fcmovu
xchg
in
ds
inc
inc
outsl
roll
test
outsb
in
mov
xor
pop
clc
repz
cld
mov
xchg
pop
inc
in
and
sbb
add
mov
sbb
in
mov
cltd
popf
or
sub
or
pop
mov
and
mov
test
inc
aaa
jg
out
in
jg
pop
inc
ret
jle
ret
jmp
je
push
adc
mov
js
pop
jbe
jo
push
cmpsl
mov
out
int3
or
ror
push
test
mov
js
testl
add
daa
dec
xchg
push
pusha
loop
int
push
cmp
xchg
pusha
mov
or
addr16
cmc
fdivrs
add
cs
iret
push
test
shll
into
imul
jp
lea
pop
inc
xor
negb
pop
cmp
sub
ja
outsl
jecxz
pop
addr16
push
mov
repz
push
pop
sub
lock
xchg
pop
inc
sahf
mov
sbb
add
mov
fdiv
ss
dec
scas
inc
xchg
fcmovnbe
cmp
cmp
insb
lret
cltd
xor
js
jle
push
cltd
xchg
mov
sbb
xchg
add
negb
faddl
mov
mov
movsb
adc
outsb
fwait
pop
cmpsb
decb
in
push
push
stos
cmp
test
dec
and
scas
xor
leave
dec
mov
popa
cmc
in
loope
shll
jp
push
shl
cmp
inc
lock
cmp
mov
xlat
mov
push
mov
pop
popf
sbb
fadd
push
outsb
mov
or
in
inc
fcmovbe
in
xor
mov
push
or
int
sub
pop
mov
mov
and
sbb
xor
or
popf
mov
imul
dec
ret
lea
jge
pop
pop
pop
push
add
add
mov
pop
fidivl
jne
ja
jmp
dec
push
sub
pusha
inc
mull
imul
mov
sahf
ljmpw
or
push
inc
shl
jl
xchg
cltd
pop
lock
stos
mov
or
sbb
jl
mov
out
aam
sbb
or
cmp
jmp
data16
sub
jbe
or
add
jo
pop
sbb
sbb
sarl
add
fcompl
adc
jb
dec
sbb
mov
aaa
pop
rorl
ja
push
int
lods
lret
pop
jnp
xchg
pop
outsl
ds
punpckldq
push
icebp
sbb
xchg
add
jl
int
dec
das
xchg
pop
cmp
jb
dec
mov
dec
sbb
scas
cwtl
and
lds
out
inc
dec
push
push
stc
pop
adc
orb
xchg
dec
ja
daa
sbb
add
andl
pop
ja
out
push
cli
mov
cmpsb
arpl
pop
in
add
jbe
aas
in
fimuls
scas
mov
arpl
xchg
push
fldt
fcomp
mov
les
cmp
sub
add
xlat
shrb
test
cmp
fnstsw
imul
pop
add
andl
sti
add
lock
mov
mov
shll
mov
pop
loopne
mov
movsb
lret
mov
dec
mov
and
push
jns
or
pop
dec
mov
or
and
cmpsb
push
inc
call
inc
and
sub
mov
repz
xchg
sti
xchg
adcl
pop
sub
xor
aaa
sahf
int3
in
and
fidivrl
cmp
xor
xchg
mov
scas
dec
pusha
int
je
mov
sub
jne
mov
ret
in
repnz
mov
outsl
sub
pop
xor
dec
jno
jecxz
jp
loopne
lods
aaa
cmpsb
stos
aam
fdivrs
mov
pusha
fadd
fcoml
leave
into
mov
cli
cmovp
mov
fdivs
mov
and
out
mov
pushl
push
lret
addr16
sbb
mov
push
loope
pop
mov
lret
into
dec
out
xlat
add
mov
out
inc
xchg
mov
jl
push
sub
hlt
js
pop
orl
and
das
pop
inc
out
add
jmp
push
dec
inc
dec
inc
pop
lret
xchg
jge
mov
sbb
inc
js
pop
insl
lock
cs
mov
stc
enter
xor
lock
pop
mov
or
fidivrs
sub
jmp
andl
sbbl
and
rolb
loop
addr16
sbb
add
rclb
adc
dec
push
pop
mov
scas
loope
or
xchg
sbb
fstl
nopl
jnp
push
jle
ds
jl
cmp
popf
xorb
dec
jl
mov
and
pop
shrl
xchg
adc
bound
aas
test
in
bound
xor
popf
pop
pushf
jno
push
pop
andl
jae
outsl
icebp
inc
mov
dec
cmp
mov
daa
push
lret
mov
jb
pop
pop
jp
jae
mov
sub
fistpl
add
cmp
inc
mov
adc
cmp
lahf
push
push
add
xor
sub
jno
dec
adc
call
jb
nop
inc
lret
jae
mov
aad
jnp
stos
stc
test
mov
and
lea
jo
ss
or
xchg
outsl
inc
xor
lahf
rep
pop
jnp
stos
mov
lods
fwait
cmpb
push
test
int3
inc
mov
imul
ss
cmp
inc
xchg
in
mov
arpl
imul
into
sub
push
fidivrs
outsl
bound
adc
pop
xchg
arpl
jo
xchg
jecxz
hlt
pop
insb
sbb
sub
jno
dec
push
cli
xor
andl
iret
and
xchg
mov
stos
stc
push
data16
pop
leave
or
inc
mov
dec
jns
out
data16
out
sub
sahf
push
pop
or
sub
mov
mov
mov
jno
cmp
je
fildl
dec
rcrb
and
mov
mov
lea
adc
popf
cld
pushl
pop
pop
pop
test
cmp
mov
xchg
jle
popf
add
cli
mov
gs
mov
lret
jle
sub
daa
lahf
loope
or
inc
and
mov
inc
dec
loopne
lret
ds
test
adc
addl
dec
push
out
cmp
dec
mov
aas
mov
and
pushl
push
mov
mov
cltd
pop
add
jnp
xchg
sbb
sub
das
xor
mov
push
in
test
fidivrl
push
xor
jo
jmp
jp
movsb
repnz
fs
cmpb
push
adc
arpl
lea
push
push
fisubs
adc
arpl
cld
dec
sub
sbb
lret
mov
inc
loope
cli
sub
sbb
outsb
pop
test
imul
adc
test
mov
fisubrl
sub
push
sti
dec
push
imul
leave
and
mov
push
dec
cmp
icebp
or
sub
dec
push
je
mov
jno
je
aaa
xchg
cld
mov
sub
ds
push
or
mov
mov
cmp
inc
insb
cmp
pop
repz
xchg
arpl
dec
adc
je
test
fldenv
in
push
add
leave
popa
xchg
xor
mov
lods
fwait
sub
inc
sub
push
pop
int3
in
mov
mov
pop
inc
xor
xor
dec
ss
movsb
cltd
mov
cmpsl
loop
les
stc
jns
pusha
pop
xchg
mov
xor
sbb
mov
sbb
out
inc
pop
stos
adc
aas
jbe
mov
mov
or
sub
fnstsw
pushf
sbb
jg
sahf
insb
sbb
or
rcrl
dec
jle
mov
pop
mov
jge
scas
test
leave
insl
or
xchg
inc
jge
fidivrl
decb
shrl
sahf
leave
push
lcall
notl
add
gs
jp
jge
rorl
jge
xchg
adc
jmp
add
je
aas
ret
aas
jle
adc
test
dec
push
sbbl
mov
dec
orl
inc
aaa
or
pop
push
mov
dec
rolb
mov
inc
mov
and
adc
xchg
loope
jmp
shlb
xchg
inc
cmc
jmp
adc
jmp
jae
xchg
adc
sbb
stc
gs
scas
rcrl
sti
call
add
mov
adc
jno
jbe
out
cmpsl
dec
fcomi
cmp
mov
hlt
xchg
divl
push
andl
mov
pop
pop
js
mov
push
lcall
xor
in
or
mov
xor
inc
mov
or
imulb
aam
adc
mov
iret
sbb
adcl
inc
inc
popf
dec
ja
les
lahf
mov
inc
push
dec
leave
cmp
sub
lods
dec
push
or
jle
xchg
adc
cmp
or
jmp
mov
add
cld
test
inc
sub
aaa
in
jnp
sub
add
xchg
cs
jp
inc
cs
divl
mov
jmp
pop
daa
and
rep
loopne
pop
dec
scas
mov
aam
shlb
dec
iret
jb
mov
repz
jo
rclb
xchg
int
inc
xchg
stos
pushf
scas
dec
mov
xor
xor
sub
cmc
ljmp
movsb
ret
flds
out
movsl
cmp
sbb
and
and
addr16
pop
es
es
xchg
loop
inc
xor
xor
mov
xchg
push
mov
mov
nop
orb
scas
fdivl
out
push
mov
or
xchg
lods
xchg
mov
pop
push
mov
pop
cs
adc
inc
out
adc
push
out
sub
aaa
outsb
mov
jmp
sahf
les
lcall
loopne
mov
sti
out
rorb
in
cmpb
push
inc
lock
xor
mov
enter
mov
lods
les
xchg
or
inc
mov
xor
std
shlb
loope
adcl
mov
jne
ss
es
add
stc
lret
push
pop
sbb
push
testl
fmuls
and
or
mov
pop
push
add
insb
flds
mov
fisubrl
popa
cs
pop
dec
mov
pop
jno
cmp
mov
into
xor
xchg
lret
jge
outsl
adc
sub
mov
adc
adc
xor
mov
dec
daa
mov
leave
adc
fwait
inc
mov
xchg
jecxz
push
jnp
pushf
inc
aaa
mov
lock
fildl
int
rolb
hlt
ds
mov
jmp
dec
adc
sub
jg
movl
xchg
pop
lods
outsl
fwait
in
adc
imul
insl
lret
mov
ja
cmp
adc
pusha
mov
dec
cmp
cld
sub
test
das
rolb
mov
fidivrl
repnz
push
inc
or
es
xchg
mov
cltd
movsb
mov
xchg
xor
out
jns
push
shrb
fistps
sbb
xchg
push
jecxz
divb
mov
xchg
int
aaa
cmc
cmp
aaa
mov
cmp
jb
jmp
jno
in
sub
pop
clc
stos
mov
push
lea
andl
sbb
clc
in
mov
xchg
xor
cmp
int3
mov
push
lds
xchg
inc
and
stos
inc
dec
movsl
mov
push
aam
sahf
add
out
dec
loope
ss
push
jo
out
test
pop
into
mov
movsb
add
mov
out
imul
sbb
jg
pop
in
jnp
dec
and
bound
add
cli
and
lds
movsb
cltd
daa
inc
mov
fdivl
and
sub
in
or
cmpsl
jmp
push
mov
stos
je
inc
hlt
bound
sbb
push
push
inc
ss
mov
mov
add
jmp
lock
or
addr16
mov
add
mov
les
sub
xor
das
sti
insb
dec
pushf
loop
leave
cmc
jo
mov
fcmovne
sbb
iret
scas
test
out
and
dec
xchg
popf
push
xchg
imul
loopne
xlat
add
mov
lea
adc
cwtl
jmp
adc
insl
adc
dec
mov
js
dec
push
push
not
stc
inc
jle
xchg
xor
insb
and
pop
pop
jecxz
push
arpl
or
test
sbb
fidivrl
fimuls
xor
or
shll
push
mov
inc
and
inc
nop
int
inc
test
sbb
sbb
scas
outsl
or
flds
mov
std
lret
xor
jg
adcl
fnstcw
and
popa
mov
lds
mov
mov
adc
flds
xchg
int
loopne
lret
jge
xchg
movsb
ss
frstor
cld
repz
dec
leave
ret
adc
addr16
int
mov
dec
sahf
and
push
pop
outsb
test
sub
in
add
xor
and
imul
and
xchg
cmpsb
lret
ljmp
rcl
lret
xor
cwtl
cwtl
inc
pop
cmp
cmpl
dec
lock
cmp
jo
pop
mov
pusha
data16
in
popa
test
pop
pop
hlt
cmp
aas
stos
test
jae
jecxz
xchg
andb
push
pop
cmp
ja
dec
aam
mov
sahf
sbb
xchg
dec
cmp
gs
dec
sbb
adc
push
jge
sahf
push
int3
daa
std
outsl
rcrl
jle
inc
ret
out
bound
or
jo
int3
lret
fstl
ja
xchg
cmc
and
icebp
mov
negb
push
push
sahf
mov
fcoml
stos
stos
sub
imul
clc
cwtl
popf
fdivrs
push
in
sbb
dec
push
ret
mov
enter
mov
or
dec
popa
jl
dec
cld
insb
or
in
out
cmpl
sub
or
cmpsb
out
mov
sub
ljmp
xchg
fstpl
xchg
xor
je
add
push
ficoml
popa
cli
mov
test
out
mov
test
ficomps
rcr
mov
stos
cld
sub
mov
gs
cmp
arpl
pop
repz
pop
adc
pop
sarl
cld
test
and
cld
inc
mov
cmpsb
leave
add
bound
mov
pop
push
jbe
inc
or
xchg
jmp
cmp
sbb
sub
dec
fcoms
adc
cmpl
repz
jge
xor
loopne
add
xchg
sub
fistl
int
test
sub
inc
outsb
sub
stos
pushf
scas
pusha
and
in
cmp
sti
test
es
addb
lods
jg
mov
or
cmc
shrb
xor
pushf
test
pop
xchg
pop
mov
loope
cwtl
xchg
xchg
xchg
sbb
jl
enter
ret
lahf
insl
lds
jge
xor
sub
jg
pop
inc
pop
outsb
addr16
mov
lahf
xlat
leave
push
pop
mov
inc
rorb
or
or
sbb
out
push
fcmovbe
insl
jne
pop
sbbl
stc
lods
or
rolb
mov
movups
mov
add
mov
and
es
mov
stos
dec
ds
icebp
jno
enter
mov
and
fidivl
pop
lods
inc
jne
test
aam
push
push
es
jb
mov
lret
pop
adc
mov
cmp
add
sbb
jne
sub
test
dec
stos
sti
mov
xor
cmp
cmpsl
inc
xor
jbe
jbe
ja
repnz
xchg
xor
fdivrs
mov
push
shll
sahf
inc
ljmp
jno
pop
and
cmpsl
push
fs
cld
js
dec
and
out
loopne
ror
adc
jmp
inc
js
pusha
negl
push
enter
push
pop
stos
cmp
or
jp
std
pusha
push
loopne
fsts
gs
ss
bnd
cmp
jb
lahf
xchg
push
fisttpll
mov
push
sbb
or
mov
mov
lret
int3
push
inc
cmpl
push
inc
inc
icebp
cld
jae
movsl
adc
xchg
negl
cmp
inc
inc
iret
bound
js
inc
push
mov
testl
mov
mov
jecxz
mov
adc
jg
scas
mov
lods
fs
xchg
jp
jge
mov
sbbl
aas
dec
dec
bound
mov
aam
inc
lods
push
sbb
jge
cmp
jmp
push
je
mov
mov
mov
out
mov
sub
popa
sub
ror
ss
dec
fisubs
xchg
popa
adc
jno
fistpll
fwait
int3
lea
mov
mov
or
jle
imul
loop
jg
xchg
clc
dec
xchg
dec
mov
pop
test
jae
ds
mov
mov
inc
aas
sub
test
push
jmp
das
hlt
or
test
and
push
mov
clc
inc
hlt
sub
fwait
ret
int
insb
pop
dec
imul
xor
mov
cmp
xor
add
repnz
inc
insl
mov
jecxz
push
lds
lret
data16
sub
lock
nop
inc
inc
jnp
fwait
jle
cmp
fiaddl
mov
leave
xchg
xchg
jecxz
xor
xchg
out
xchg
out
mov
sbb
iret
test
in
push
aam
dec
ret
push
outsl
jg
lcall
addr16
xchg
dec
sub
sti
clc
dec
sahf
cli
and
or
sti
mov
mov
or
sbb
imul
xchg
outsl
js
inc
jmp
cmp
stos
clc
inc
mov
mov
jle
test
mov
data16
jl
arpl
es
and
cmp
je
xor
test
ds
xchg
and
iret
pop
inc
sbb
mov
cmp
rorb
mov
pusha
lds
imul
cmp
mov
out
add
jmp
repnz
seto
sub
add
lahf
es
scas
insb
test
sbb
jbe
insb
arpl
xchg
jecxz
mov
fwait
mov
push
mov
data16
cmp
ja
add
xor
std
test
or
push
cld
call
aaa
loope
jge
xchg
xchg
mov
stos
fistps
call
scas
gs
xor
into
or
ss
test
xchg
cli
pop
dec
shlb
ljmp
mov
sbb
test
or
mov
rcr
inc
push
cwtl
push
fwait
shrb
push
ljmp
xchg
leave
mov
and
test
push
push
mov
rcl
sarl
push
push
adc
ror
cli
stc
push
movsb
add
jp
bound
popa
loop
cmp
loope
leave
scas
test
imul
loop
scas
pushf
scas
xor
rorb
pop
xor
fildll
jne
inc
xchg
mov
push
mov
dec
ja
sti
les
testb
cltd
movsl
jecxz
mov
and
sbb
mov
repz
dec
mov
pusha
and
rcr
push
fistps
adc
sbb
add
ret
sbb
jb
in
sub
push
arpl
xor
adc
mov
mov
fptan
adc
aam
test
cmp
sbb
testb
in
test
cld
ret
in
jo
xor
cld
or
and
or
or
pop
insb
xchg
roll
mov
mov
inc
sub
sub
cltd
aas
push
ss
out
out
push
aaa
and
cmp
insb
in
outsb
inc
jno
fucomi
pop
gs
inc
pop
mov
imul
mov
out
xchg
jp
mov
or
mov
pop
jp
icebp
push
cmpsl
mov
lahf
loope
outsl
push
push
xor
popf
fcomps
dec
xor
xor
sub
xor
je
mov
rcr
aas
dec
fisubrs
fcoms
sbb
xor
pop
mov
push
dec
sahf
test
out
pop
sbb
in
inc
mov
sbb
aaa
or
adc
mov
mov
sbb
pop
scas
clc
mov
or
les
push
push
cmp
dec
jge
mov
imul
icebp
add
dec
jl
add
mov
test
xchg
icebp
or
rcll
aaa
lods
shlb
push
orl
pop
movups
xchg
mov
adc
cmpl
popa
ss
enter
mov
sti
pop
js
and
pop
pop
fwait
pushf
cmc
mov
mov
pop
cmp
stc
ljmp
sbb
adc
mov
lods
inc
inc
pop
push
xchg
inc
into
mov
cmc
jae
cmp
cmpsl
adc
xor
jl
scas
out
fldenv
xor
push
cli
sbb
je
pop
ds
mov
subb
lcall
sbb
xchg
flds
jae
push
pop
rorl
inc
xacquire
fs
adc
xor
ret
sub
inc
pop
sub
push
and
mov
daa
sbb
addb
jb
xchg
xchg
lret
outsb
mov
mov
push
push
ds
jbe
fs
and
cmp
movsb
pushf
jle
pop
xchg
sbb
out
jecxz
jmp
or
mov
out
pop
aam
xor
dec
cli
lods
mov
jg
int
sub
js
pop
pop
cli
clc
ret
jnp
mov
lea
sti
inc
cld
aam
mov
push
dec
mov
mov
pop
push
insb
scas
lods
jbe
mov
inc
sub
leave
sub
dec
xor
in
mov
in
cmovg
mov
sbb
mov
adc
nop
shrb
fldl
inc
push
add
mov
outsb
cmc
mov
and
mov
push
push
cmp
jmp
fs
cmp
jle
xchg
es
jle
fxam
aam
inc
enter
or
xchg
pop
and
aad
inc
sbbl
xlat
mov
jg
cmp
faddl
push
or
or
cmp
outsb
sbb
jge
push
cmp
mov
pop
xchg
mov
cmove
aas
data16
jle
jo
lods
inc
leave
mov
dec
fisubrl
stos
fucom
dec
sub
xchg
rcr
sub
pop
inc
push
pop
js
adc
mov
lds
pop
test
daa
mov
or
aam
mov
jg
pushf
mov
mov
cmp
mov
xor
aaa
cli
jl
jo
ss
or
add
push
dec
pop
push
cwtl
sbb
adc
data16
ljmp
test
mov
push
clc
push
mov
out
jo
adc
imul
dec
jo
inc
jmp
xchg
ret
inc
pusha
inc
xchg
dec
inc
mov
mov
push
jo
lahf
pop
pop
sub
loope
insb
notb
into
fs
call
jp
in
subl
jle
dec
sbb
enter
subb
inc
out
sbb
jp
mov
sbb
push
sbb
hlt
jmp
xchg
cmc
xor
mov
ljmp
dec
hlt
or
iret
inc
sub
dec
stos
aas
test
ljmp
pusha
adc
add
and
pop
pop
and
push
mov
pop
xor
fisttpl
xchg
sahf
notb
movsl
in
mov
adc
leave
cmp
gs
ficomps
filds
out
cmp
stos
sub
xor
stos
cmp
add
push
pop
xor
fidivrl
or
fstpl
mov
xchg
jecxz
push
pop
dec
in
and
xchg
pcmpgtd
ds
inc
xchg
jle
cmp
scas
push
movsb
loop
adc
rcrl
push
or
pushf
lods
add
adc
mov
sbb
jns
repnz
and
gs
ficomps
xor
mov
fistl
fdivr
shrb
cmp
xchg
push
aaa
xchg
jmp
push
xchg
int
and
mov
outsb
call
lods
hlt
jg
sbb
leave
int3
ds
or
push
add
jb
jo
repnz
test
push
mov
mov
mov
mov
loopne
push
insl
test
jns
into
xor
xchg
jne
es
inc
jle
xor
push
repnz
jae
lods
dec
add
pop
insb
adc
sub
ljmp
xchg
push
and
into
les
pop
xchg
xchg
dec
cmpsl
mov
inc
pop
shl
jge
pop
and
cltd
cs
stos
testb
mov
dec
enter
adc
push
scas
std
adc
jno
insl
mov
es
sbb
add
in
dec
lahf
adc
ret
dec
mov
out
mov
scas
lods
adc
mov
xor
xor
sti
cli
push
rolb
sahf
addr16
aaa
je
xchg
pop
mov
imul
xchg
sbb
push
scas
push
cmpsl
or
mov
sbb
mov
cmp
loopne
outsb
cli
push
mov
ret
push
fadds
push
and
ljmp
daa
xor
loopne
sbb
jnp
jl
and
addl
out
popf
add
insb
jle
inc
mov
pop
lock
testl
pop
stc
sub
push
add
std
mov
inc
rorb
cmp
sub
adc
test
mov
pop
fcoms
aas
mov
fldenv
in
stos
xlat
mov
inc
push
bound
cwtl
gs
pop
sbb
sbb
jecxz
test
nop
xorl
sbb
cwtl
cwtl
push
cmp
hlt
fistl
lock
pop
addr16
and
lea
and
stc
cmpsb
sar
mov
or
fsubrp
or
sarl
jge
jb
sti
xor
mov
mov
jo
and
imul
in
insb
adc
push
push
bound
mov
jo
push
cmp
and
fisttpll
shl
and
sbb
cmp
icebp
mov
mov
cmp
add
insb
mov
lea
loop
xor
inc
jo
movsl
cmp
lds
mov
cli
out
dec
push
ret
push
and
push
outsl
inc
repnz
sub
mulb
sbb
lds
outsb
sub
fdiv
mov
ds
scas
lret
or
rcrb
aaa
xor
add
daa
iret
loopne
lret
dec
inc
xchg
mov
adc
sub
dec
dec
out
dec
lods
pop
movsl
sub
jl
dec
or
dec
adc
add
iret
and
mov
jnp
jno
and
push
sbb
lea
jae
stc
ds
gs
push
dec
sbb
imul
ss
xchg
roll
mov
and
sbb
cli
pop
test
in
int
push
orl
notb
sbb
jecxz
out
jo
mov
pop
mov
xor
sbb
xchg
popf
cld
inc
jo
std
cmp
add
xlat
xor
push
fdivrs
mov
enter
cmpsl
out
mov
das
fcmovu
rclb
mov
sub
imul
inc
sbb
insb
sbb
call
mov
jne
pop
in
mov
aad
dec
jo
dec
adc
inc
icebp
cs
xor
fsubrs
lret
or
inc
cwtl
rclb
sub
push
stos
iret
fwait
jle
ret
out
mov
jmp
add
add
mov
sbb
hlt
jle
jbe
je
es
fdiv
rclb
adcl
stc
xchg
in
pop
addl
mov
adc
dec
sub
daa
mov
sar
bound
mov
ja
jl
stos
mov
sti
jb
mov
dec
adc
mov
mov
rcrb
sub
cmpsb
lock
test
out
outsl
or
in
pop
pop
mov
cmp
cli
mov
outsl
dec
jb
int
stc
rcll
das
push
cmp
sti
cmpsl
push
mov
adc
sarb
xorl
dec
mov
fisttpll
xchg
or
dec
fmull
or
sti
dec
and
sbb
lods
lcall
cmc
and
pop
pushf
xor
adc
cmp
xor
in
aad
iret
or
out
loop
mov
mov
stc
lret
lahf
xor
push
or
adc
pop
xorl
and
fldl
mov
xor
cmpsl
outsl
inc
push
adc
jae
mov
cmc
aaa
pop
jle
cmp
sub
enter
mov
mov
sbb
mov
xor
test
iret
push
cmp
and
pop
in
xor
pop
aam
adc
jae
outsb
xchg
rorl
int3
push
bound
cld
stos
clc
and
movsb
xchg
xchg
adc
outsb
aaa
dec
pop
lret
mov
jbe
sbbb
test
jg
icebp
pop
fidivrs
pop
andl
imul
gs
adc
out
sub
pop
cmpb
push
sub
int3
jp
fidivrs
mov
int
pop
mov
ja
mov
mov
add
sbb
cmp
test
hlt
xor
rcrl
jle
sbb
test
aas
es
xorb
call
rcrb
lea
and
xor
jne
out
push
dec
rcrb
mov
xlat
mov
int3
pop
aam
add
add
and
or
add
mov
popf
xchg
ds
sub
sub
stos
or
test
stc
arpl
mov
sahf
fidivl
sbb
in
push
jmp
mov
push
test
sbb
mov
fisttpll
loop
ja
icebp
add
push
mov
jp
repnz
popa
cmpl
pop
cmc
or
xchg
xor
rorl
jbe
adc
subb
or
add
add
dec
call
into
fisubl
std
mov
and
cmpsb
hlt
jnp
movsb
pop
mov
popw
cmpsl
mov
mov
clc
shrb
cmpsl
icebp
cwtl
mov
xlat
ret
sbb
test
sub
mov
dec
push
cmpl
jbe
int
fs
mov
sub
fsubrs
in
push
sbb
dec
add
inc
loope
dec
std
leave
sbb
jns
adc
sahf
xor
movsl
loope
in
xchg
xor
scas
insl
iret
movsl
mov
or
pop
ss
bound
pop
cmpsb
mov
dec
lods
fisubrl
in
sbb
fildl
and
pop
imul
pop
inc
mov
adc
jmp
xchg
xor
and
jne
inc
sbbl
ja
lea
fldt
or
repnz
mov
pop
dec
and
outsl
jbe
push
pop
and
cmp
ret
iret
adc
data16
cmp
or
cmp
scas
repz
ret
sub
xchg
hlt
fbstp
push
aas
call
out
push
std
jno
pop
repz
mov
stc
inc
idiv
add
mov
sbb
jmp
pop
mov
cwtl
adc
jns
scas
in
inc
mul
jecxz
and
stc
es
lcall
jnp
int3
rcrb
cli
aam
or
mov
les
sbb
jbe
popf
pop
push
jo
cmp
lea
mov
inc
mov
dec
inc
push
lods
cld
int
jmp
aaa
ss
xchg
pop
lods
sub
mov
rcr
test
lea
mov
scas
addl
repnz
and
add
mov
sti
movsb
pop
mov
adc
and
dec
out
add
push
aaa
pop
sbb
shll
pop
aad
xor
ret
mov
outsl
dec
and
out
mov
adc
ss
loope
movsl
sbb
adc
lahf
xchg
inc
std
lret
sbb
adc
sbb
aaa
fs
aad
jecxz
push
clc
sbb
ja
xchg
xor
pop
fsts
mov
mov
pop
testb
mov
and
pusha
sarb
test
gs
repnz
xor
in
enter
xchg
push
out
jg
fnstcw
leave
daa
push
lret
adc
mov
addr16
adc
stc
cli
mov
dec
cli
pop
notl
sub
xor
out
push
std
mov
outsl
sub
mov
cmpsb
jo
mov
add
xor
cld
outsl
sub
adc
xor
loop
addr16
push
lods
and
pop
mov
dec
and
mov
dec
jp
cs
xchg
imul
jge
ret
adc
push
call
sbb
inc
ljmp
xlat
shll
cli
or
stc
xchg
ljmp
lods
daa
nop
outsl
pop
sub
sub
es
test
jl
dec
aam
out
aas
dec
mov
pop
jno
add
xor
popf
sbb
push
sbb
pusha
and
push
xchg
mov
mov
inc
jne
push
push
mov
les
push
das
xor
mov
add
pop
mov
lret
imul
pop
push
scas
mov
xor
test
xor
pop
mov
mov
xchg
mov
push
add
cmpsl
loope
in
cs
js
cmp
inc
jo
fnstcw
int3
cmp
fistl
shlb
inc
int
pop
lock
cli
mov
push
dec
push
xor
lret
mov
add
fs
and
nop
dec
mov
pop
jge
daa
mov
ffreep
push
rcrl
mov
popa
jne
ss
sub
jge,pn
lea
es
pop
dec
jecxz
pop
xchg
hlt
incb
adc
outsl
fwait
xchg
fnstenv
out
dec
insb
cmp
jle
push
leave
sbb
xchg
xor
sub
fsub
mov
out
cmp
loop
pop
mov
push
lea
mov
sbb
sub
xor
div
pop
xor
scas
jle
pop
sub
jb
sbb
jl
sub
or
popf
xchg
lret
mov
fmuls
adc
rcl
ret
xchg
aad
ftst
pop
call
mov
lds
out
movsl
xchg
js
xor
cmp
popa
cmpsl
xchg
sarl
mov
sbb
xchg
or
lea
cmpsl
push
sti
addl
aam
xchg
xchg
dec
popf
cmp
pushf
fistl
pop
pop
sub
addr16
mov
insb
ja
fisttpll
push
cmp
cltd
mov
aam
push
push
mov
js
fwait
jb
cmp
push
inc
sbbl
fisubs
xor
pop
pop
adc
cmp
mov
mov
imulb
push
pop
mov
jb
and
cs
out
int
arpl
mov
mov
loope
jns
neg
rcrb
jle
sub
fisubs
out
cli
or
loope
inc
jge
loopne
mov
leave
insl
add
lods
bound
xchg
decl
jbe
sbb
adc
pop
push
rorb
mov
push
xchg
cmp
inc
cli
cli
xor
dec
xor
xchg
mov
mov
jecxz
sbb
push
out
mov
push
mov
ljmp
adcl
sahf
xlat
insl
out
dec
dec
xor
or
mov
fld
dec
pop
stos
cmpsb
mov
mov
test
mov
jno
outsl
mov
leave
pusha
stos
shlb
pop
xchg
mov
xchg
dec
ss
xchg
fwait
shr
lea
mov
sahf
jmp
or
testl
pop
push
push
xchg
jg
stc
dec
ficomps
add
dec
rcr
or
cld
cmc
daa
sbbb
inc
mov
xor
jno
es
pop
jmp
ljmp
insb
outsb
jb
addl
scas
dec
imul
sub
in
in
pop
xor
stos
jns
add
repnz
in
test
mov
mov
stos
push
fcoml
sbb
xor
insb
xor
mov
pop
mulb
in
mov
in
hlt
cmp
rcll
xlat
les
or
test
and
sub
insb
mov
dec
push
ret
out
lds
enter
inc
es
xchg
sbb
pop
in
jo
pop
xor
out
sbb
xor
sub
pop
pop
mov
sti
add
into
test
mov
pop
xor
rcrb
inc
inc
stos
jbe
push
movsl
stos
je
test
adc
lret
aaa
sbb
mov
insb
mov
popa
mov
jbe
js
xchg
push
pusha
adc
cli
push
mov
cmpsl
cmp
stos
mov
int
int
mov
fsubl
inc
adc
out
addr16
and
ja
repz
cltd
and
cmp
xchg
lock
push
rcrl
das
ljmp
pop
inc
sbb
push
mov
insl
shl
arpl
inc
nopl
cmp
adc
push
pop
mov
dec
mov
into
push
xor
popa
mov
out
jge
pop
dec
nop
idiv
pushf
loopne
xor
jl
push
imulb
dec
mov
cmp
imul
sub
push
jle
sbb
ret
orl
mov
loope
cmp
cmc
popa
inc
or
pop
inc
xchg
test
pop
scas
sub
repnz
cmp
lcall
in
lret
lret
sarb
jbe
shll
xor
insl
mov
stos
mov
sar
addr16
dec
daa
pop
loopne
push
sub
pop
dec
loopne
mov
inc
cmpsb
jge
call
jp
mov
and
insb
sbb
ret
sub
testb
lods
scas
bound
xor
xchg
mov
mov
jle
insb
insl
sub
ja
mov
out
mov
pop
xor
lret
mov
ja
leave
xchg
sbb
shll
ret
lret
in
jno
decb
mov
xor
es
imul
pop
pop
or
lea
mov
sub
fcmovnb
popf
cs
add
or
or
or
jbe
hlt
mov
popa
mov
inc
test
sbb
jge
cmc
stos
test
lods
sarb
sub
jne
aaa
lock
es
shl
orb
xor
and
outsb
push
mov
xchg
ret
hlt
dec
adc
in
aam
sub
cmp
dec
push
stos
and
ja
popf
lret
ss
jb,pn
jnp
inc
adc
scas
cwtl
dec
shrl
dec
mov
jns
and
push
ret
sti
push
lea
stc
sub
test
adc
in
out
mov
test
lahf
fwait
or
je
loope
cmpsb
cmp
jg
ret
sub
dec
or
icebp
int
das
jl
fimuls
jle
xchg
lret
lret
shrl
rcrb
inc
roll
fdivl
stos
xchg
mov
sub
es
adc
mov
mov
mov
cld
cmp
sub
add
lock
jge
rcpps
lahf
testl
dec
and
push
test
lock
out
lods
xor
xlat
lcall
push
andb
int
lret
ss
fidivrs
not
test
sbb
std
iret
adc
pushf
jge
add
std
adc
hlt
inc
andl
add
inc
adc
lcall
jecxz
scas
dec
mov
fidivrl
je
adc
and
je
add
jge
out
mov
jns
imul
das
add
pop
dec
movsb
mov
stc
push
dec
mov
sahf
scas
add
stc
adc
lock
in
aas
sbb
mov
daa
and
fdivr
mov
cli
dec
in
test
xor
cmp
andb
lock
iret
adc
adc
adc
ret
ret
and
sub
and
mov
dec
test
je
xchg
sub
lods
loop
lods
notb
mov
mov
loopne
mov
push
or
cmpsl
in
sbb
cmp
ss
cld
pop
nop
fstpl
shlb
adc
sub
dec
xor
addl
nop
outsb
rcrb
sarb
jp
int3
inc
test
cmp
dec
repz
mov
xor
sbb
in
push
pop
jb
push
jbe
rcrl
push
scas
aaa
jecxz
aas
adc
in
clc
push
add
mov
jbe
mov
lods
aam
in
cltd
js
xor
gs
adcb
adc
aas
out
jp
lods
pop
ljmp
es
add
jg
imul
or
jno
mov
in
xor
cld
out
mov
sahf
xchg
ret
fbld
fmulp
jmp
cmp
stos
mov
mov
and
inc
lock
in
cmpsl
lods
xchg
push
aas
inc
and
jbe
movsl
lds
pop
pusha
mov
mov
jl
bound
fisubrs
mov
out
pop
pop
jg
lock
xchg
inc
cmp
pop
das
cmp
aam
xor
mov
or
es
inc
mov
icebp
add
jbe
ljmp
add
cli
popf
dec
or
arpl
mov
mov
shrl
mov
cmp
mov
into
rcrl
xchg
xchg
xchg
push
pop
lods
mov
leave
mov
mov
push
in
loope
imul
xor
leave
and
push
sub
or
scas
jg
and
movsl
inc
mov
push
pop
js
sbb
test
fstp
int
xchg
and
mov
rcr
leave
js
fcomi
xor
cs
and
sub
shrl
jo
sbb
ds
mov
std
out
sbb
xchg
and
sbb
or
add
sti
pusha
call
call
lock
mov
loop
adc
not
sbb
cmpsl
test
sbb
fcmovb
dec
adc
rcrb
jns
mov
pop
cmp
sub
jns
add
dec
cmp
imul
aad
jne
inc
pop
pop
iret
fbstp
and
xor
es
push
js
hlt
ja
mov
fdivs
aas
cmp
scas
xchg
mov
sbb
in
aam
lea
cwtl
xchg
or
out
insb
pop
test
cmp
cwtl
push
pop
stc
pop
sub
into
adcl
dec
mov
sbb
mov
inc
mov
jns
mov
xor
test
mov
loope
jo
into
mov
push
push
push
lods
mov
or
test
xchg
jns
push
clc
outsb
hlt
add
not
xchg
test
ds
bswap
mov
cs
insb
pushf
xchg
jle
add
mov
loopne
ljmp
fnsave
sbbl
nop
sahf
sbb
push
fs
cltd
fbld
mov
rorb
call
sub
cmp
or
push
mov
sar
inc
nop
mov
xlat
mov
sub
insb
sbb
push
push
cmc
cmp
inc
icebp
ret
add
sbb
mov
jb
mov
jg
icebp
je
and
fldt
insb
push
push
test
xchg
dec
call
cmp
out
mov
jge
add
bound
cwtl
loop
xchg
or
pop
ljmp
inc
test
pop
mov
add
pop
call
or
push
inc
daa
imul
cmp
clc
xchg
mov
or
adc
cmp
add
stos
mov
lret
fsts
rolb
test
jo
out
das
pop
lods
loop
mov
cmp
mov
mov
adc
pop
lock
cwtl
and
loop
out
sbb
dec
cltd
lret
push
enter
mov
jge
mull
pushf
repz
adc
cmpsl
or
adc
pusha
out
lds
outsl
pop
sbb
inc
xor
inc
divb
sbb
jmp
out
daa
pop
hlt
sub
sub
mov
xor
pop
xstore-rng
cmpsl
ret
in
xor
rclb
lcall
or
sbb
or
andl
push
mov
je
in
add
sbb
les
pop
and
inc
sbb
repnz
xchg
xchg
dec
inc
mov
xchg
popa
mov
or
mov
and
dec
mov
test
mov
orl
jae
xor
mov
roll
inc
rcrb
cmp
ss
adc
cld
jno
mov
push
test
or
out
pop
jbe
xchg
add
pushf
imul
xchg
out
pop
jmp
out
jno
push
insl
pop
push
sbb
out
shl
shlb
mov
scas
jge
sbb
sbb
incl
cmp
popa
inc
xor
bound
pop
frstor
mov
inc
mov
or
inc
jns
xor
repz
es
repz
shlb
leave
dec
jno
jp
das
fistpll
cs
aam
sbb
xchg
sbb
pop
test
and
mov
mov
xchg
cmp
pop
dec
cmpsb
out
push
popf
mov
sub
mulb
stc
jo
jbe
les
std
xchg
xor
pop
sub
pop
mov
lahf
inc
movsb
cld
ja
xchg
lods
add
pop
sti
rcrb
sti
out
lahf
push
fmuls
testl
or
cmp
cltd
dec
xlat
xchg
iret
ljmp
mov
sub
xchg
add
cmc
out
div
cwtl
dec
movsl
je
and
xchg
jmp
scas
imul
mov
les
jae
dec
jne
adc
and
test
xlat
and
orb
into
out
xchg
ljmp
fdivrl
mov
sbbb
push
aam
fisttps
xchg
inc
mov
fsubs
test
add
out
sarb
rolb
lahf
pop
es
addr16
lret
xchg
ficoms
mov
push
cmp
xor
dec
jnp
fmuls
cli
sub
add
push
insl
mov
cmp
add
out
addb
add
xchg
mov
sbb
dec
mov
push
ficoms
popf
inc
bound
push
jns
xchg
push
cltd
sbb
or
ljmp
mov
push
subl
dec
enter
shr
xor
dec
imulb
push
js
pop
jmp
mov
out
add
pcmpgtb
imul
out
mov
xor
add
and
repnz
sub
imul
rcrb
std
mov
jmp
ljmp
mov
dec
add
mov
andb
add
imulb
push
ja
sbb
and
push
and
sbb
mov
out
imul
xor
jo
mov
es
sub
inc
int
cmp
movsl
jecxz
icebp
or
sbb
test
mov
add
cmp
fs
sbb
stc
dec
leave
out
cmp
push
outsb
add
inc
mov
ja
dec
mov
dec
pop
xor
adc
push
adc
call
test
in
jecxz
nop
mov
notb
sub
push
add
jo
scas
popa
mov
dec
scas
rcl
scas
push
ss
aad
divb
rcrb
setle
dec
inc
ja,pn
mov
add
jb
into
adc
push
cmp
adc
mov
jne
out
dec
fsubrl
inc
push
popf
movhps
push
dec
adc
mov
mov
jns
mov
cld
cmc
or
dec
mov
fwait
shll
jecxz
popa
je
or
sbb
bnd
lahf
lcall
add
dec
and
mov
xor
jmp
iret
xor
or
stc
pop
incb
jne
pop
xchg
loopne
mov
mov
or
pop
jp
jns
or
add
icebp
shll
pop
add
lock
jo
and
add
xor
cmp
and
imul
mov
cmpsb
inc
jne
and
insb
jecxz
lret
stos
fcompl
xchg
push
cmpsl
push
jno
push
cmc
jge
nop
xchg
pop
mov
pop
rcll
xor
jbe
mov
fs
fisttps
cmp
mov
add
and
or
pop
clc
add
xlat
imul
data16
add
pop
cmp
jg
and
lret
fmuls
inc
sbb
int
push
notl
stc
sbb
push
mov
mov
in
mov
cmp
icebp
stos
lds
insl
and
add
jp
cli
in
and
xchg
fisubrs
jo
pop
jae
add
push
push
sub
sub
jnp
loope
xor
mov
lods
aad
push
dec
js
lock
js
cmp
mov
mov
mov
pushf
xchg
mov
push
iret
xchg
jo
ljmp
xchg
inc
dec
jge
jnp
mov
xor
enter
jecxz
je
int3
xchg
ljmp
outsl
cmp
xchg
lods
loopne
jo
in
sar
push
daa
test
sub
rcll
pop
jo
push
in
push
rorb
push
iret
inc
adc
or
pop
jns
leave
and
pop
fistpl
cs
repnz
and
test
xlat
fsubrl
jae
mov
mov
add
out
pop
dec
mov
es
push
stos
push
insl
adc
fstpl
mov
or
bound
jle
pop
add
mov
nop
movsb
stc
jne
inc
cmp
push
dec
repz
xchg
int
pop
pop
leave
pop
push
lahf
repnz
adc
inc
stos
in
loop
sbb
inc
popf
inc
jle
dec
outsl
add
cmp
ret
mov
add
aas
jmp
cmp
in
adcl
movd
jecxz
fs
jle
pushf
xor
aam
pushl
cmp
es
jp
scas
adc
lds
stc
popa
inc
js
mov
pusha
lret
cmc
in
ljmp
sahf
or
cld
mov
jecxz
mov
mov
les
xor
mov
mov
ds
adc
std
cvtpi2ps
or
xor
test
mov
dec
fldcw
sub
push
jle
int3
fistpl
cmpl
jge
xchg
pop
jb
shlb
outsl
lret
cmpsb
movsb
pextrw
xor
xchg
cmp
or
scas
js
dec
dec
cltd
mov
dec
jmp
inc
imul
mov
nop
int3
mov
je
movsb
xor
out
lret
enter
es
stos
mov
pop
dec
gs
xchg
push
pusha
testb
movsl
rcr
scas
js
jb
popa
aaa
or
outsb
out
fildl
cmpsb
outsb
pop
dec
mov
pushw
xchg
mov
stos
xorl
stc
or
mov
jae
call
repz
pop
sbb
push
pop
outsb
pop
ret
inc
xchg
pop
jns
daa
cltd
cmp
lock
outsl
pop
jb
mov
jecxz
pop
ss
leave
jo
lds
call
pop
in
fdivs
jl
mov
cmpsb
xor
jno
insl
nop
pop
push
dec
jno
dec
shll
sbb
add
push
mov
ljmp
adc
adc
adc
sbb
imulb
aas
jae
jl
xchg
pushf
push
ret
popa
aam
jl
mov
adc
or
gs
repnz
jg
fnstenv
mov
int
mov
inc
cltd
xor
inc
into
les
fcmovb
xchg
out
push
add
aaa
lahf
in
inc
cmpl
mov
test
xchg
dec
adcl
mov
test
jae
out
jno
add
pushf
cmc
cld
mov
sub
xor
out
movsl
enter
shll
jmp
mov
dec
xchg
in
nop
cmp
mov
outsl
stos
add
pop
fwait
insl
loope
cmpsl
sub
xlat
mov
and
ja
dec
xlat
push
or
test
cmp
inc
add
cmp
xor
loope
push
test
out
sub
sbb
sub
ffreep
loop
and
dec
outsb
xor
or
mov
shrl
aas
push
scas
test
inc
xchg
jecxz
add
push
enter
and
jae
loope
mov
sub
cs
lods
xor
dec
adc
cmc
loope
sarb
into
jbe
cli
rolb
imul
fidivrs
adc
pusha
jmp
pop
mov
mov
xor
out
scas
fisubl
subl
stos
push
std
sti
ret
xor
insl
mov
mov
cli
xchg
xor
call
int3
inc
in
frstor
pop
add
sbbb
mov
push
mov
aas
pop
xchg
cld
lret
pop
jnp
inc
xchg
out
in
cwtl
popf
rcrl
mov
mov
ret
scas
dec
hlt
es
loope
jp
sub
mov
xor
dec
push
aam
xchg
repnz
or
xlat
mov
adc
add
mov
or
scas
pushf
push
ja
mov
decb
rcrb
push
into
movsb
inc
xor
or
push
int3
add
ret
sbb
dec
and
adc
pop
sub
mov
fmul
mov
daa
mov
aam
ss
mov
adc
popa
mov
stos
into
insl
jge
xor
ss
and
jno
cltd
in
sbb
cmp
push
movsl
push
in
gs
rol
adc
push
xchg
push
fldl
dec
inc
movsl
cmp
and
add
mov
push
push
sti
add
xchg
dec
test
cmp
mov
pop
push
mov
test
addb
out
sti
push
jle
imul
jecxz
ficoms
sub
fstp
pop
les
cmc
sub
push
xor
pop
cmpsl
loope
stc
stos
cmp
lds
cmc
es
adc
inc
idivb
js
enter
xlat
ljmp
push
aas
adc
pop
push
xchg
cmc
out
ja
or
xor
sbb
dec
sbb
bound
nop
jb
push
cwtl
add
xor
mov
mov
xor
popa
aaa
lcall
mov
or
stos
gs
sbb
adc
mov
xor
pop
push
fsubl
jl
jo
adcb
imul
pop
push
jbe
or
lock
adc
mov
and
insb
cmp
loope
and
sbb
and
popl
and
xor
shl
add
aas
mov
sarb
shlb
bound
int
push
add
pop
jo
test
in
sbb
push
adc
imul
xchg
out
gs
inc
jle
cmpsl
lahf
sahf
lock
pop
jl
cmp
imul
push
or
jb
cmp
add
dec
icebp
out
mov
jp
leave
aam
and
adc
sbb
pushf
xchg
iret
lret
push
add
scas
not
or
pop
push
shrb
jmp
scas
add
and
cli
addr16
mov
add
fbstp
and
mov
or
es
sarl
or
xor
lods
ret
xlat
pop
rolb
and
sub
test
pop
dec
adc
frstor
icebp
enter
adc
push
adc
push
lcall
mov
loope
lret
testb
out
xor
sub
xchg
mov
outsb
dec
fisubl
pop
mov
sub
push
cltd
mov
rol
cmpsl
test
int
lcall
inc
and
push
ret
mov
sbb
sbb
pop
in
cwtl
adc
pusha
test
mov
std
rorb
xchg
cwtl
fisubl
stos
and
mov
sbb
lret
sbb
icebp
cmc
imul
or
fistpll
nopl
repnz
jnp
mov
dec
lods
out
sub
aam
repz
inc
pop
test
mov
loope
sbb
lock
fs
mov
sbb
cmp
cmp
hlt
frstor
jge
sub
cmc
xor
clc
mov
dec
out
push
push
gs
dec
insb
mov
push
cmp
xor
jmp
gs
mov
pop
cs
sub
hlt
dec
fidivrl
lods
mov
dec
adc
int3
mov
xor
sbb
popf
in
sbb
cmp
or
adc
and
sub
mov
mov
or
lock
or
xor
stc
adc
in
dec
fildl
xchg
mov
movsl
fwait
std
xchg
mov
or
or
pop
and
or
jmp
in
cmpsb
and
dec
push
in
or
push
add
jmp
and
popa
and
dec
dec
inc
sbb
fimull
call
pop
lea
pop
inc
sbbl
in
or
dec
add
sbb
inc
mov
push
testl
lahf
pushf
sub
inc
rcrb
push
cs
pushf
dec
sbb
outsl
and
dec
push
in
xor
pushf
pop
sbb
ret
dec
cs
and
scas
mov
cmp
ret
lods
mov
mov
inc
sub
adc
es
jne
push
dec
scas
pop
gs
mov
iret
dec
xchg
pop
addr16
cld
mov
lret
xor
js
mov
add
jl
mov
sbb
rcl
xor
push
nop
fildll
loop
cmp
lock
ljmp
fsub
push
test
and
xchg
dec
lods
inc
addb
daa
int
sub
push
push
test
mov
clc
fcomps
push
rcr
loopne
cmpsl
out
pop
cwtl
adc
inc
out
loope
nopl
test
xchg
incb
push
nop
out
fwait
pop
pushl
sbb
or
jnp
mov
adc
pop
lea
je
insb
repnz
loopne
out
lcall
push
dec
nop
imul
scas
outsb
pop
or
jnp
lcall
or
xcrypt-ofb
cmpsl
jmp
push
sti
cmp
or
dec
test
inc
add
out
call
fiadds
xor
or
inc
out
push
adcb
test
mov
xchg
add
jbe
inc
push
inc
repnz
or
xorl
pusha
lret
adc
jp
inc
jp
xchg
mov
adc
adc
dec
mov
movsl
sti
add
jp
adc
dec
xor
push
lahf
cmc
inc
aaa
popa
adc
push
or
in
mov
pop
int
jo
scas
cmpsl
movsl
imul
ret
jp
add
inc
scas
loopne
pop
mov
in
pop
adc
and
sbb
cli
cmp
lods
jns
psllw
imul
inc
mov
or
mov
jns
jns
mov
test
subl
mov
inc
dec
ja
xchg
stos
dec
jne
in
into
fbstp
insl
lods
adc
stc
push
daa
movsb
lcall
notb
fisttpll
push
call
inc
lds
dec
out
push
mov
jg
xor
les
cmp
fsubl
psrlw
inc
inc
ja
pop
or
rclb
jp
mov
lahf
ja
nop
sub
xor
imul
sbb
mov
adcl
jo
leave
repz
es
mov
divb
in
jmp
push
lret
mov
into
test
adc
notb
pusha
jae
stos
imul
fsubs
lret
test
loopne
sbb
mov
in
test
pop
xchg
and
xor
lds
mov
jne
push
in
leave
mov
mov
adc
test
mov
nop
lcall
hlt
sub
mov
xchg
aad
mov
pop
jle
ss
dec
add
push
repz
shr
pusha
fisttpl
jecxz
cli
scas
das
test
inc
lcall
test
mov
es
lahf
daa
sbb
insb
dec
aam
and
repnz
push
jo
fildl
imul
in
icebp
or
xchg
mov
push
and
outsb
into
push
adc
enter
mov
pop
push
xorb
test
sbb
std
xchg
lds
loope
mov
cwtl
dec
mov
inc
add
xor
adc
xchg
and
jb
mov
push
push
inc
imul
icebp
ss
adc
stos
and
shll
xor
pop
xor
fdivs
mov
xchg
jmp
cwtl
mov
fisubrs
push
test
cmp
in
cmp
call
faddl
lds
adc
jbe
cmp
mov
cmp
jle
xchg
dec
loopne
in
inc
sbbl
mov
rcll
outsb
lock
fxch
ss
dec
imul
adc
push
cwtl
dec
sub
mov
rcll
ja
cwtl
test
fwait
mov
cld
out
repnz
rcl
test
int
mov
xchg
je
ficomps
inc
or
dec
addl
cltd
add
sbb
rcr
push
push
sbb
aas
inc
lret
and
jmp
call
inc
push
cli
cmpsb
outsl
clc
pop
jmp
shl
shlb
push
xchg
mov
stos
xchg
xor
xor
std
push
cli
mov
add
jp
gs
push
xor
push
movhps
in
sbb
mov
arpl
fldt
loopne
popf
add
add
insl
pop
loopne
jl
ret
es
add
jne
mov
push
xchg
push
iret
loopne
mov
sub
dec
or
push
sub
push
mov
fnstcw
sar
aad
lea
loope
in
adc
sub
mov
add
outsl
fwait
cmp
cmpsl
iret
adc
jo
arpl
neg
jle
test
jno
rcrl
nop
pop
add
jns
call
aaa
loope
lock
fs
jb
data16
gs
inc
push
lret
sub
and
push
call
in
pusha
mov
mov
pop
mov
push
and
mov
shll
jnp
push
xchg
mov
pusha
xchg
int3
xor
xchg
ljmp
scas
xchg
sub
mov
inc
nop
xor
mov
dec
xchg
jge
imul
pop
orl
outsl
inc
xor
mov
dec
xchg
jmp
ret
fildll
jo
inc
addl
mov
adc
push
mov
idivl
mov
mov
fldt
mov
pop
pop
dec
jmp
ret
jb
mov
nop
adc
jnp
imulb
mov
sahf
push
or
jnp
in
dec
in
inc
icebp
js
mov
and
dec
mov
outsl
movsl
sbb
outsl
xlat
push
cwtl
inc
dec
jno
popf
call
xchg
into
je
inc
adc
push
ss
rorl
call
push
jbe
sbb
xor
je
jb
mov
dec
xor
sbb
xorb
push
out
and
and
cld
icebp
cmpsb
popf
mov
cld
sub
shrb
iret
and
fldcw
stos
popf
cmpsb
les
jl
mov
and
mov
cmp
call
pop
jl
sbb
mov
push
int
ss
lock
mov
add
shll
pop
cmpsb
xchg
and
stc
inc
incb
sbb
mov
lods
mov
mov
int3
sbb
cmpsb
int3
cmp
jnp
cmp
ud0
xchg
xchg
jg
in
pop
jmp
test
js
adc
pop
ljmp
add
mov
sbb
mov
pop
push
aas
jg
jp
mov
in
loope
xchg
lcall
icebp
jl
jbe
ljmp
into
fcoml
inc
gs
jge
adc
xchg
mov
fdivl
notb
cmpsl
add
subb
push
in
aas
pop
fwait
movsb
int
cmc
push
fidivl
enter
push
or
insb
sub
pop
mov
adc
mov
push
sbb
sarb
jae
sub
mov
scas
outsb
clc
fs
rcr
addr16
sbb
popw
cmc
xchg
lds
adc
pop
repnz
cli
scas
das
mov
lods
push
popa
xorl
outsl
sarl
mov
leave
sub
and
mov
fwait
jge
movsb
push
mov
xor
xor
inc
xchg
mov
mov
adc
stos
pop
sbb
sub
dec
out
lods
gs
xor
and
out
scas
sub
out
mov
pop
fstps
mov
or
inc
mov
movl
hlt
pushf
jae
imul
xchg
ret
mov
int
pop
mov
and
xor
dec
dec
xlat
rcr
and
scas
pop
fidivs
nop
push
les
out
sub
ret
aam
outsb
xchg
mov
adc
inc
in
divl
xor
enter
ss
sti
adc
inc
popf
popa
mov
mulb
push
adc
mov
lods
lret
leave
adc
pop
cwtl
pop
jp
popa
jle
nop
pop
inc
lods
rcl
aas
loopne
outsl
gs
sub
cltd
mov
adc
inc
cld
xor
enter
leave
pop
movsl
ds
lods
int3
cmp
test
call
ret
hlt
adc
arpl
dec
add
test
sbb
mov
jl
insb
ret
cltd
fmul
shl
sbb
add
scas
cmc
mov
and
adc
mov
mov
inc
adcb
call
sbb
incb
aam
fwait
loop
fcompl
xchg
jecxz
dec
xor
mov
cltd
scas
jae
repnz
imul
mov
or
int
xor
jge
jle
shl
repnz
adc
je
lds
popa
jp
aaa
enter
push
push
sti
ucomiss
adc
sti
jne
shlb
fcompl
movsb
dec
push
cmp
jg
adc
xchg
mov
fs
cmpsl
mov
cmpsb
xchg
fisttpl
jl
or
add
ljmp
jno
mov
mov
xchg
adc
inc
jle
xor
xor
ss
sahf
pop
xor
enter
out
dec
in
shrl
mov
inc
lahf
jae
mov
sub
jp
cmp
in
sarb
push
sub
dec
ret
pavgb
xor
test
scas
daa
inc
sbb
rcrb
fwait
mov
add
xor
test
ss
mov
les
pop
or
cmp
pop
test
dec
xchg
arpl
adc
inc
dec
addr16
jb
aaa
mov
xchg
loopne
pop
fxch
inc
sbb
jno
shr
lret
mov
pop
xchg
aad
sub
or
push
sub
lea
mov
fwait
popf
nop
aas
inc
inc
sub
fcmovu
dec
fbstp
dec
mov
ds
push
cltd
ret
cmpb
stos
subl
and
sub
dec
fisttpll
mov
ret
and
loope
dec
fisttpl
cli
add
movsb
cmp
cmp
sub
int
or
jge
or
cmp
mov
lret
aam
xchg
movsb
xchg
xor
das
xorl
shl
mov
dec
cld
mov
sti
iret
xchg
sahf
xchg
xlat
push
gs
push
inc
popf
insb
push
xchg
or
xor
mov
cmp
in
mov
addb
xchg
xchg
div
pop
mov
sti
mov
jno
add
and
and
mov
fbld
insb
lret
in
fsubrl
jle
data16
je
cld
icebp
addr16
dec
rcll
jecxz
jns
pop
sar
cmpsl
popa
popf
mov
mov
fbld
push
ret
imul
mov
sub
mov
subl
aad
arpl
loopne
xor
scas
inc
js
mov
fimull
xor
scas
pop
mull
jg
enter
pop
jp
mov
shrb
rsm
jae
cld
loope
mov
pop
cs
loope
int3
cli
aam
lds
mov
inc
jle
shll
fwait
jp
jle
sbb
icebp
push
cmpsb
add
popf
popf
xor
push
xor
xorl
cmp
int3
pop
push
cmp
les
loope
cmpsl
hlt
popf
fs
push
cmp
or
cmpl
adc
scas
adc
push
movsb
pop
xchg
popa
inc
mov
push
push
xor
mov
mov
fisubrl
repz
insb
mov
mov
out
adc
bound
inc
adc
pop
xor
fiadds
repz
push
sub
pop
mov
sub
aas
pop
pop
fisubrl
lds
pop
aaa
mov
xchg
mov
mov
in
pop
add
pop
fdivrl
xchg
cld
jae
icebp
lcall
ds
jnp
adc
sbb
dec
lods
jle
xor
mov
jmp
cmp
jp
cli
jg
mov
inc
sbb
fnstenv
js
and
sti
mov
add
rclb
call
repz
fimull
sbb
cli
rclb
mov
and
push
inc
fucomi
frstor
hlt
popa
cmp
or
popf
pop
xchg
sbb
lods
sub
add
data16
and
jb
pop
sbb
ret
popa
mov
mov
call
inc
dec
cmp
mov
mov
push
les
pusha
mov
inc
mov
lods
aam
pop
jb
jb
pop
cmp
sub
repz
push
imul
cs
lods
lcall
adc
xor
mov
in
cmp
xor
ret
cltd
cmp
jno
cmpsb
push
cmpl
hlt
mov
xor
mov
pop
and
lods
add
add
dec
push
pop
lea
aam
inc
cmpsb
cmp
mov
enter
xchg
loope
adc
and
roll
out
mov
adc
iret
leave
das
repnz
cli
mov
rcrl
loop
sbb
lods
xchg
loop
sub
jo
int3
mov
movsb
movsl
pop
test
fidivs
xor
cs
push
out
sbb
lahf
add
enter
and
pop
sub
push
shll
aas
or
push
mov
stc
or
movsl
dec
push
jle
lahf
xorb
and
out
fnstsw
dec
xlat
cs
push
mov
push
push
pop
sarb
dec
loopne
std
out
and
out
push
xchg
mov
mov
std
cmc
pop
xchg
dec
cmp
jmp
xchg
lret
push
mov
adc
xchg
aad
or
aaa
cmpsl
xorl
fnsave
outsb
into
sbb
jne
sub
insb
cmp
test
clc
cmpsb
popa
loope
pop
dec
cs
dec
push
and
shll
push
push
add
addb
pop
inc
ljmp
in
xchg
jl
ds
fisubs
fucomp
dec
outsb
add
adc
mov
dec
fsubr
icebp
imul
mov
lea
pusha
and
jmp
imul
push
iret
shr
inc
stc
fcoml
das
pop
sub
add
push
sbb
pop
dec
xchg
mov
and
in
mov
clc
dec
sbb
and
mov
mov
push
inc
jl
mov
mov
add
mov
jbe
es
sbb
inc
pop
pop
js
mov
and
pop
mov
sbb
sub
inc
jae
fidivs
sbb
and
aam
gs
add
pop
jne
jbe
mov
mov
mov
fcomp
and
lcall
inc
xchg
lea
pop
jmp
test
xchg
or
es
lcall
addb
pop
dec
xor
push
test
sbbb
push
dec
imulb
ret
or
xor
fisubl
je
or
push
mov
sub
inc
or
bound
sahf
push
mov
fistps
add
and
mov
and
fs
lods
mov
movsb
test
clc
bound
fsubs
std
addr16
push
js
mov
addr16
add
fisttpl
jecxz
or
xchg
adc
jo
lods
jnp
push
mov
cltd
sbb
mov
adc
insb
mov
popf
jge
sub
push
xchg
jge
jb
ror
daa
repnz
add
mov
or
out
mov
mov
jge
in
pop
jecxz
xchg
jge
out
pop
or
mov
into
scas
out
jp
add
jbe
cmp
xor
cmp
xor
andl
cmp
outsl
adcb
cmp
or
adc
divb
mov
add
push
push
sbb
andb
jmp
push
adc
test
xchg
cmp
in
push
popf
mov
insb
push
testb
cmp
adc
adcl
in
arpl
mov
and
sub
movsb
or
or
adc
in
pop
arpl
out
decb
dec
pop
shlb
bound
call
inc
or
movsb
and
cmp
push
inc
popa
lret
push
dec
jne
clc
or
imul
pop
imul
adc
je
mov
jns
adc
push
push
adc
inc
sbb
xchg
jg
add
pop
jg
xchg
inc
leave
fbld
test
les
cli
add
sbb
stc
mov
idiv
ror
push
loope
xor
jne
sbb
int
loope
xchg
push
xchg
fiaddl
stos
cmp
push
stos
pop
jmp
mov
dec
clc
jg
cmpb
gs
pmaxsw
push
data16
adc
loope
pop
push
add
mov
jmp
lret
inc
cmp
and
fcoml
inc
inc
rclb
dec
shll
and
test
push
sti
add
push
dec
adc
and
fs
sbb
mov
mov
inc
ret
shll
in
jl
xor
inc
lods
test
jo
sahf
jecxz
mov
mov
decl
mov
lret
lea
add
sub
in
jle
dec
lret
sub
out
lds
pop
test
adcl
outsb
movsl
xchg
repnz
aad
xchg
push
mov
pop
subl
mov
out
data16
jmp
popa
iret
sub
sbbl
aad
ficomps
cwtl
jae
xlat
xchg
inc
mov
test
sbb
mov
or
cmp
jge
jns
sub
inc
xchg
icebp
cld
push
and
ss
mov
mov
push
push
sbb
pop
cmp
ljmp
push
std
inc
in
jnp
jne
ret
mov
mov
dec
inc
push
jb
cld
es
jp
int
inc
push
xchg
fcoml
shl
mov
ljmp
push
push
jle
aad
mov
int3
jbe
push
and
mov
mov
call
xor
out
pop
push
out
loopne
mov
ss
mov
int3
sub
sar
push
mov
dec
xor
cld
fstpt
pop
loop
je
push
mov
std
adc
mov
rolb
out
clc
mov
fwait
inc
icebp
mov
outsb
cs
out
ds
ljmp
pop
dec
or
dec
lods
mov
mov
and
add
xor
mov
add
mov
ret
mov
add
cwtl
dec
hlt
arpl
sbb
dec
xorl
mov
je
orl
dec
mov
pop
int3
insb
scas
test
in
stos
test
out
inc
adc
loop
mov
mov
lahf
jp
in
sub
pop
mov
or
aam
xchg
mov
pop
iret
push
es
out
scas
repz
call
repnz
aaa
and
pop
in
ljmp
mov
lret
push
fmull
sbb
imul
popa
faddp
pushf
mov
mov
stos
cli
sbb
pop
pop
aas
add
pop
adc
cs
loop
in
and
stos
faddp
jns
das
je
xchg
add
in
and
push
leave
jge
push
out
cmp
jo
icebp
stos
xchg
fcomps
bound
or
sub
in
mov
sub
sbb
sahf
lcall
dec
mov
sbb
mov
dec
and
fimull
sbb
out
fsubl
xchg
fwait
mov
scas
out
jecxz
sarb
test
pop
movl
dec
and
jne
mov
adc
andb
pop
scas
cli
xchg
push
mov
fiaddl
testl
sbb
mov
mov
push
jmp
adc
ja
cwtl
into
pop
out
and
push
dec
jns
test
mov
mov
cmc
mov
inc
or
aaa
lret
dec
jge
outsl
add
insl
jecxz
out
dec
mov
cmp
jmp
jl
bound
scas
lahf
mov
movsb
or
stc
jnp
stos
scas
add
mov
jnp
rclb
or
enter
repz
xchg
mov
inc
inc
fisttpl
iret
pushf
stc
sbb
into
cwtl
jns
mov
lea
and
ja
stc
out
clc
inc
mov
sbb
push
inc
scas
mov
jl
push
jbe
scas
pop
adc
sbb
or
ja
mov
mov
fdiv
mov
push
xchg
sub
aam
fwait
nop
gs
sbb
fiaddl
pusha
push
mulb
inc
shlb
repz
addb
pop
and
mov
jo
dec
jl
popf
rolb
pop
js
jg
fisttpll
pop
jmp
sub
lret
sub
mov
sub
in
adc
push
test
js
xor
call
js
lret
outsb
fildl
pop
test
in
fildll
sub
push
leave
mov
or
imul
add
orb
lea
ss
ja
cmpsb
inc
loop
in
jbe
jecxz
out
xor
and
addl
mov
lock
jl
sbb
fldl
xchg
inc
pushf
aad
add
fdivrl
stos
dec
mov
jo
xchg
add
pop
fldt
push
jmp
cmp
sub
imul
into
sbbl
ficomps
push
fwait
mov
icebp
lods
arpl
cmp
jge
pop
lret
push
mov
shll
xor
jb
aam
adc
jp
das
mov
dec
test
cli
les
jns
pop
mov
insl
and
xlat
sbb
stos
fists
cmp
add
cmp
je
notl
xor
fstps
xchg
ror
sar
xor
mov
sub
rclb
arpl
add
xchg
mov
lock
jp
mov
das
mov
mov
inc
jno
mov
test
scas
xor
fdivrs
mov
inc
pop
push
cmp
cld
and
jmp
jns
mov
sub
loopne
cmp
lods
sub
es
xchg
test
jb
loopne
nop
or
in
or
loopne
push
jo
xor
arpl
mov
jge
outsb
cli
mov
into
push
dec
jb
aad
dec
sub
cmp
mov
pop
xor
pop
in
sub
imul
inc
adc
subb
add
outsl
mov
sub
shll
mov
inc
push
jecxz
cmpb
fs
add
out
shl
sub
jmp
out
push
lret
outsl
scas
popa
sbb
jg
cmp
loop
in
ss
out
jno
mov
imul
andl
jmp
incl
cld
xchg
loop
outsb
outsb
cmp
das
and
sbb
push
cmp
push
push
sub
jne
repnz
into
inc
and
cmp
and
sub
imul
les
dec
jmp
imul
int3
jle
jge
sbb
adc
gs
out
mov
xchg
cmpsl
adc
mov
inc
mov
mov
sahf
fs
pop
and
inc
mov
add
mov
mov
lods
subb
lock
leave
xor
xchg
dec
push
sbb
test
dec
enter
rcrb
xchg
out
mov
fcomps
xchg
and
jbe
sti
lret
mov
xor
mov
stos
test
and
inc
pop
ret
add
dec
jbe
push
in
cltd
fdivs
addb
jo
mov
aaa
mov
jmp
insb
rcr
int
inc
ds
fstps
into
js
sahf
pop
mov
xchg
jno
sub
sbb
js
dec
sbb
pop
xchg
push
jg
cmc
cmpsl
mov
fimuls
push
pop
inc
mov
add
lret
ja
mov
imul
shrl
push
pop
push
mov
cmp
mov
pushf
and
mov
leave
int
mov
sahf
scas
lcall
rcrl
add
outsb
fistpl
jecxz,pt
xor
adc
and
sub
cmp
push
ljmp
iret
xchg
ljmp
ffreep
xor
mov
dec
stos
jnp
loop
sbb
fadd
movsb
fmul
xor
mov
idivl
sub
xor
int3
shlb
jno
je
sub
outsb
mov
lock
add
jp
adc
leave
stos
arpl
cltd
mov
andb
xorb
pop
or
dec
lds
ficoml
inc
add
dec
inc
nop
faddl
lret
repz
adc
mov
aam
lcall
out
xchg
xchg
lock
std
and
arpl
mov
and
xor
mov
pop
mov
rolw
lods
cmpsb
imul
mov
and
or
and
stos
aad
jp
outsl
push
inc
fadds
add
pop
xchg
loope
sbb
push
in
dec
sub
fcmovb
or
or
push
pushf
mov
xchg
shr
in
flds
push
lret
pop
or
clc
lods
iret
mov
ret
mov
sbb
rcrl
lea
out
adc
mov
or
fwait
movsl
roll
cmp
pop
loopew
test
dec
in
and
push
add
mov
sub
pop
sbb
cmp
push
dec
cmpsl
inc
inc
aas
fs
push
pop
mov
insl
icebp
dec
imul
dec
fwait
add
add
ss
cli
sti
test
xchg
dec
insl
inc
mov
inc
xchg
fisttps
cmp
mov
inc
cmp
lahf
popa
fdivrs
or
addr16
adc
popf
push
shll
push
dec
push
frstor
lret
lret
xorl
call
jg
and
cmp
fldt
int3
mov
and
mov
push
fdivr
mov
loop
fucom
cwtl
loope
mov
dec
cmpl
test
xchg
sbb
setle
push
push
mov
ds
xchg
lds
rorb
imul
or
mov
cmp
test
test
fpatan
mov
xor
mov
sbb
push
inc
jnp
out
test
push
push
sub
jmp
xchg
adc
insl
add
push
aaa
mov
loope
and
push
fdivrs
and
filds
clc
mov
mov
fbstp
mov
daa
mov
xchg
out
stos
addr16
and
ja
sub
pop
mov
pop
mov
and
cmp
addr16
sbb
mov
cmpsl
and
add
rcl
orb
out
scas
sub
mov
aas
sti
leave
or
mov
push
and
arpl
cmp
jne
jo
push
push
and
out
fisttpll
cmp
outsb
dec
sub
jbe
cltd
inc
push
aam
and
mov
cld
xchg
js
jnp
ficoms
pop
mov
imull
cwtl
sbb
or
adc
int3
xchg
sbb
add
aam
or
lret
mov
dec
dec
insb
jmp
les
inc
pop
jle
mov
in
mov
jle
cmpsl
mov
fcmovnu
inc
push
mov
dec
xchg
shrb
rclb
and
in
push
jns
or
mov
sub
repnz
xorl
add
sub
ret
unpcklps
addr16
bound
test
pop
pop
mov
xor
push
sbb
ficomps
imul
out
dec
push
andb
sti
scas
sub
popf
or
pop
cmpsl
shl
sahf
pop
outsb
stc
fildll
out
in
bound
call
loopne
mov
int3
mov
cmp
push
out
lret
test
aaa
sub
enter
imul
sbb
jp
test
out
cmp
dec
popa
sub
cmp
or
mov
adc
sbb
adc
orl
nop
enter
int
lods
insl
or
into
mov
orb
mov
or
ret
lods
push
cs
add
mov
pop
xchg
cld
out
jns
ficoms
pop
shlb
push
adc
iret
rol
inc
inc
cmp
pop
repnz
push
and
stos
adc
xchg
adc
iret
sub
dec
xor
push
jns
pop
adc
add
jns
inc
out
or
jbe
call
and
push
and
test
add
popf
pop
leave
and
sbb
cltd
icebp
ss
cmp
pop
rorl
lcall
call
and
outsl
adc
jbe
jg
mov
jno
into
and
lock
loope
into
std
xchg
lods
sbb
push
pop
pop
inc
imul
push
jnp
jne
in
pop
fwait
imul
jge
mov
fists
hlt
iret
cmp
fnstcw
cmpsl
cmp
push
sbb
loopne
sub
jo
shl
jecxz
adc
scas
push
xor
call
out
fsubs
push
push
mov
mov
scas
adc
pop
enter
jle
adc
fwait
sbb
xchg
adc
lret
add
in
lahf
mov
xor
mov
repz
ret
inc
cltd
inc
and
jne
outsb
rorl
enter
testl
insl
xor
movsl
fbstp
pop
es
fildll
dec
adc
fld
insl
pop
add
stos
scas
jo
stos
cmc
xor
movb
mov
xor
xchg
cmc
push
adc
mov
xchg
mov
pop
fiaddl
fbstp
out
arpl
inc
popa
add
dec
not
popf
inc
mov
add
cmp
xchg
sub
sbb
dec
aad
or
mov
push
test
cmp
adc
pop
mov
jle
dec
inc
cmc
dec
fimull
pop
test
clc
jbe
popf
pop
ljmp
testl
xor
imul
push
ja
arpl
lret
insb
imul
fdivrs
dec
mov
pop
add
js
xor
shlb
ficoml
stos
xor
fldl
js
sbb
jb
nop
inc
dec
pop
and
fdivrp
inc
lret
shl
test
dec
mov
or
xchg
fnstenv
outsl
sbb
pop
xor
fsubs
mov
out
fwait
add
xor
mov
inc
test
adc
daa
sbb
movsb
sti
sahf
xchg
mov
je
push
and
jne
add
cmp
dec
push
sbb
popa
fcompl
movl
add
sub
add
ret
cmpsl
cmc
or
jle,pt
push
jle
and
push
leave
dec
out
inc
add
cwtl
lret
cli
xchg
int3
cmp
lret
add
mov
or
imul
inc
mov
test
movsb
dec
cmpsb
pop
mov
sarb
adc
aad
adc
and
stos
jo
enter
mov
cwtl
xchg
adc
pop
sbb
test
or
mov
push
inc
add
cmp
cmp
ja
lds
pop
clc
and
pop
xchg
ljmp
ret
sahf
dec
movsl
mov
xor
mov
lahf
cmp
dec
push
dec
mov
jne
repnz
mov
aas
dec
or
orl
and
test
into
mov
jg
xor
or
movsb
jo
int
adc
sub
mov
sbb
inc
inc
gs
inc
cmp
insb
push
xlat
js
insb
inc
adc
xchg
into
ficompl
push
xor
das
cmpsb
cmpsb
in
push
outsb
aas
rorl
and
mov
pop
cmp
jnp
inc
xchg
push
add
adcb
out
dec
enter
sahf
hlt
cmpb
xchg
jno
add
add
outsb
jno
fwait
dec
fidivl
arpl
add
xchg
add
push
inc
es
dec
or
xchg
popa
fcomip
lret
js
dec
into
nop
aam
sbb
mov
lcall
cs
fwait
ljmp
hlt
or
out
or
out
mov
in
scas
inc
dec
add
inc
xor
enter
inc
jl
pusha
stos
jge
test
inc
jge
xchg
cmpb
xchg
adc
xor
imul
in
fs
inc
dec
dec
pop
ret
xchg
xorl
lods
sbb
jb
rorb
adc
loopne
sbb
call
mov
out
cmpsl
loop
stos
out
or
push
mov
loop
push
dec
js
mov
out
jne
out
movsl
mov
js
pop
pop
xchg
ds
adc
cmp
lods
cli
in
jmp
pusha
fucomp
xchg
ss
jno
cmp
aam
cmp
jg
lods
cmpsl
xchg
xor
call
lahf
jnp
pop
inc
cmp
dec
mulb
sbb
repz
nop
pop
adc
pop
popa
inc
sub
cwtl
add
xchg
repz
mov
adc
nop
int3
ljmp
push
lods
or
outsl
or
iret
cmc
addr16
cmpl
xor
jne
int3
cmp
lds
rorb
add
xchg
pop
mov
das
cmpsl
sti
sbb
sub
cmpsl
loop
outsl
push
aam
lea
incl
xor
dec
jle
ror
jnp
push
xchg
pushf
negb
fsubl
in
mov
push
pop
add
aaa
cli
mov
sub
rcrb
js
lret
test
ljmp
ret
cs
ret
and
imul
and
push
mov
testl
sub
divb
add
lea
fbstp
jns
bound
mov
lods
dec
repnz
xor
stos
xchg
out
jnp
gs
jnp
and
and
sub
mov
inc
lea
pusha
mov
jle
xor
mov
pop
inc
push
inc
xchg
outsl
lods
jns
pop
xchg
or
es
and
push
sub
mov
or
mov
and
pop
das
lcall
adc
sub
xlat
clc
sbb
sbb
mov
xor
xor
push
pop
jns
push
xchg
sbb
mov
dec
sbb
pop
int3
cwtl
cmp
sub
cs
out
or
movsb
dec
mov
cmp
pop
hlt
cwtl
loopne
nop
push
lds
jne
and
aaa
mov
xor
or
dec
cld
inc
add
data16
out
mov
leave
mov
sbb
ja
sub
nop
jl
dec
xchg
cmpb
std
std
pop
stos
js
enter
sub
inc
cld
sbbl
adc
inc
test
mov
mov
out
shl
push
pop
and
aad
in
cmp
dec
inc
pop
enter
shl
sub
xchg
mov
sbb
pop
mov
test
imulb
jge
imul
popf
push
cmpsb
loop
xchg
cmp
inc
imul
or
lods
test
jecxz
adc
rcr
adc
mov
ljmp
imul
sti
push
imul
jbe
andb
pop
dec
rcrl
mov
popa
mov
andb
js
scas
cmpb
inc
or
fisubs
ds
insb
lock
das
adc
xlat
adc
pop
mov
in
mov
lret
ret
pop
pop
in
out
imul
xor
rol
pop
mov
iret
int3
out
scas
cwtl
divl
push
mov
cmpsl
in
test
xchg
cmc
movsb
mov
pop
sbbb
hlt
ja
xchg
int
in
aas
loopne
mov
int3
gs
and
xchg
icebp
cmpsl
popa
fldenv
add
inc
push
inc
ds
cmp
rorb
mov
sub
push
jl
cmp
lea
push
nop
ss
cmp
enter
jb
divps
lcall
rclb
and
insb
push
lods
sbb
ds
call
xor
sahf
cmpsb
lcall
inc
inc
lock
mov
cmp
push
cmc
jnp
adc
xchg
xor
and
sarl
push
mov
insb
xchg
fsubrs
lcall
dec
mov
push
fdivl
add
sahf
pop
cmp
insb
leave
cmp
push
dec
lock
xorb
mov
sub
adc
aas
stos
adc
push
and
mov
mov
out
imull
pop
push
sub
xor
test
sti
or
in
dec
push
insl
pop
mov
rcll
sbb
ret
mov
cmpl
lcall
cmc
dec
mov
add
jo
push
jl
dec
ljmp
mov
mov
mov
or
fdivs
test
push
lea
rol
add
test
ret
iret
std
add
aas
jg
movsl
mov
mov
dec
push
inc
jnp
xor
cmc
adc
pop
mov
iret
iret
xor
inc
lock
cmp
sbb
idivb
cs
cmpsb
lock
lods
sbb
jle
in
bound
jg
inc
and
pop
icebp
mov
dec
pusha
leave
test
sbb
xchg
mov
call
aad
add
int3
adc
mov
lods
inc
mov
repz
sarl
mov
mov
xchg
push
jl
pop
jne
jle
adc
sti
cwtl
out
shrb
mov
lods
stc
pop
push
xor
or
sbb
cwtl
xchg
ficoml
sub
sahf
mov
jns
jl
add
in
out
dec
mov
jge
jp
jge
sbb
push
dec
sahf
lahf
xor
out
dec
and
daa
xchg
push
sbb
jo
iret
ss
push
test
rdtsc
sbb
popf
subl
int
mov
mov
sub
nop
iret
adc
sbb
stc
loope
jno
pop
rolb
clc
imul
fsts
jl
sbb
out
push
xor
adc
out
loop
and
insl
sub
push
cmp
call
dec
lock
mov
shlb
or
popa
xchg
mov
and
pop
dec
xor
aas
push
mov
out
cs
inc
mov
sarl
fwait
pusha
pop
aas
stos
scas
call
adc
fsubrl
enter
jae
lret
ror
push
divl
pop
mov
push
pusha
iret
push
rcrb
and
mov
and
push
les
aas
xchg
packsswb
dec
mov
push
inc
adc
and
xchg
iret
adc
mov
paddsw
inc
inc
jae
sbb
add
shl
jne
xor
cmp
adc
or
lahf
aad
dec
aas
push
ja
jno
in
sti
sub
jae
out
or
pop
inc
cwtl
mov
dec
out
stc
jg
push
xchg
push
sbb
sahf
jecxz
ret
mov
mov
mov
adcl
iret
xor
or
rcrl
xchg
jg
fiaddl
mov
cmpsb
cmp
mov
es
mov
adc
push
cld
xor
dec
add
lcall
xchg
jmp
loopne
int
adc
gs
insb
mov
or
stos
adc
or
mov
lret
cmp
mov
insb
enter
pop
lock
loopne
pop
mov
call
cld
ret
mov
js
imul
dec
sarb
out
stos
sbb
mov
push
fnstsw
aad
flds
jno
ds
pop
aas
outsl
insl
cmp
cmpsb
xchg
xchg
mov
mov
jnp
outsb
jae
jp
aam
lods
mov
jmp
jnp
dec
xor
push
stos
in
les
das
xchg
out
test
mov
popf
push
mov
movsb
leave
imull
lahf
mov
pop
dec
arpl
call
sahf
xchg
in
ud0
push
inc
and
cmp
inc
xor
insl
pop
andb
int3
ret
cmp
das
jnp
dec
imul
mov
loope
out
pop
lods
and
int3
fildl
sub
and
mov
mov
push
cmp
pusha
in
pop
cmp
outsl
dec
rcrl
int
xlat
into
sub
xor
dec
pop
lret
arpl
lock
pop
sbb
cmp
mov
mov
leave
push
popf
inc
cmpsw
pop
and
pop
cld
addr16
aaa
cmp
cmp
loope
jle
cmp
sbb
jns
sub
dec
cltd
addr16
jg
out
bound
sti
subl
mov
xor
cmp
cmp
dec
divps
fistps
inc
push
pop
popl
fsub
xchg
cmp
fbstp
cltd
pushf
mov
mov
lods
pop
dec
in
and
xchg
lock
xchg
pop
sub
or
scas
mov
mov
cwtl
sbb
ss
mov
mov
push
repz
mov
xor
push
mov
out
fldcw
or
shlb
mov
ret
mov
pop
cmc
xchg
sub
js
fmul
pop
fs
xchg
push
mov
mov
lret
sti
adc
aas
xchg
dec
dec
pop
or
icebp
xorl
and
xor
test
lahf
jle
jecxz
dec
jae
inc
add
and
rcll
fbld
inc
sbb
ret
pop
cld
push
inc
pusha
loope
das
cli
and
push
xchg
in
int
int
fs
std
inc
clc
int3
xor
mov
push
jmp
pop
mov
jae
movsl
out
inc
add
jle
inc
add
loop
aam
jbe
cmp
aad
pop
nop
pop
and
xor
adc
add
mov
dec
insl
sub
stos
test
xor
jp
stos
adcb
lods
jno
mov
leave
and
daa
cmpsl
movsb
inc
and
aad
add
cmp
jb
xchg
pop
xchg
mov
push
push
dec
cmc
push
movsl
dec
dec
subb
sbb
mov
or
jns
pop
ret
cmpsl
aas
cs
xor
int3
roll
jns
push
pushf
cld
push
daa
inc
push
or
push
inc
dec
outsl
repz
adc
jno
imul
test
int
push
out
adc
fisubl
loope
pushf
inc
push
pop
or
push
xor
add
dec
les
mov
div
call
adc
fwait
and
add
xchg
xchg
push
mov
cmpsl
rcl
adc
out
sub
movsl
and
loop
or
pop
inc
jns
adc
jno
push
mov
mov
aas
aad
push
pushf
in
fisttpl
lahf
dec
xor
daa
mov
cmp
xchg
cltd
mov
mov
dec
pop
dec
test
sbb
add
stos
ss
or
rolb
add
addr16
pop
add
outsb
pop
cs
adc
lods
mov
mov
in
sub
ljmp
push
and
cli
add
loope
xchg
jnp
jnp
enter
lods
mov
cmp
inc
push
sub
mov
test
dec
or
lret
pop
clc
mov
adc
shlb
test
pop
sub
adc
int
std
mov
int3
movsb
test
and
ss
mov
fwait
subb
popf
lods
outsb
cmp
dec
fs
pushl
push
or
xor
rcrl
iret
repnz
add
xchg
and
repz
mov
pop
xchg
cmp
jbe
push
cmp
mov
inc
std
xlat
pushf
add
jnp
or
dec
hlt
sub
inc
inc
add
movsl
fnstenv
aam
rolb
mov
test
sbb
inc
cld
mov
inc
and
pop
push
sbb
add
int3
js
out
xor
pop
push
and
mov
cwtl
test
mov
and
daa
jbe
mov
push
inc
pop
sub
push
inc
dec
std
adc
addr16
shr
jp
in
nop
lcall
xchg
mov
mov
adc
adc
cli
shlb
mov
jmp
or
inc
dec
mov
cmp
xchg
xor
fadd
test
stos
incb
jecxz
sarl
out
icebp
mov
scas
shll
xchg
ss
decb
dec
or
or
pop
inc
push
mov
movb
sbb
pop
dec
loop
es
mov
imul
pop
add
lret
popa
rcrb
jl
mov
shlb
or
sub
lcall
movb
jne
fcmove
xchg
pop
ret
scas
imul
aaa
fs
les
aaa
lret
push
std
adc
fs
fisubrl
loopne
push
cltd
xchg
and
push
mov
push
inc
aaa
aas
lret
jle
add
aad
imul
xor
inc
out
hlt
notb
clc
sbbb
adc
inc
add
imul
push
insl
push
sub
add
std
sub
testb
ljmp
mov
stc
shll
shr
bound
scas
push
stos
andb
cmp
popa
mov
cmp
or
xor
jmp
fnstenv
adc
jae
sub
jb
or
fbstp
das
and
dec
loopne
push
ret
sbb
lds
adc
rolb
add
pop
movsb
enter
not
cmpsl
inc
push
stc
inc
xor
inc
bsf
mov
adc
adc
stos
adc
cvtdq2ps
push
ss
push
sub
loop
icebp
and
cltd
or
sub
and
repnz
pop
mov
mov
inc
stos
or
dec
loop
mov
adc
outsl
js
lods
jae
in
mov
shll
jo
push
inc
jo
enter
and
leave
push
push
ret
jb
pop
mov
and
mov
xchg
xor
loopne
leave
fldcw
xchg
test
adc
inc
or
pop
mov
xor
xchg
jg
lea
dec
jns
cs
repz
loop
into
pusha
dec
decl
dec
ljmp
push
or
scas
xor
addl
stos
push
sbb
cmp
or
xor
std
xor
or
ss
ljmp
rorb
fisubrl
inc
pop
dec
movsl
push
orl
fstl
cmp
mov
mov
pop
push
xor
mov
xchg
movsb
inc
sbb
xor
lds
pop
arpl
or
inc
jp
adc
shlb
xlat
cwtl
rcrl
adc
xchg
mov
jmp
dec
push
push
pop
ret
mov
das
aam
inc
mov
add
and
lea
dec
scas
push
dec
imul
jp
movsb
xchg
adcl
daa
xchg
wrmsr
shrl
and
ds
cmpsl
pop
into
xchg
push
scas
test
sub
dec
lea
dec
mov
enter
ljmp
inc
jae
lods
fnstcw
das
jae
bound
clc
hlt
push
mov
and
and
sbb
clc
sub
and
pop
inc
mov
or
mov
popf
xchg
or
sbb
aad
dec
std
ds
and
cmp
cmc
cli
add
push
es
aaa
lea
dec
imul
lods
inc
jecxz
out
lcall
inc
or
fildll
sar
jns
mov
push
stos
mov
xor
fcompl
nop
fiaddl
inc
push
imul
inc
jnp
xchg
sub
pop
push
add
movb
cmovs
mov
and
in
ss
adc
adc
jno
scas
outsb
cmp
aaa
add
inc
adc
sub
jg
lea
or
seta
xchg
cmpb
pop
testb
push
xor
mov
add
push
adc
dec
xlat
jl
push
psadbw
pop
aas
cltd
xacquire
outsb
jb
shl
fs
repnz
mov
mov
into
pusha
lods
daa
outsb
mov
mov
sub
mov
cmpb
sub
pop
add
incl
int
outsl
dec
dec
cltd
mov
mov
mov
push
lea
iret
outsb
push
xor
rorl
xchg
inc
inc
mov
fildll
test
sub
orb
and
pop
lcall
mov
add
scas
push
inc
fisubl
mov
fstl
bound
mov
repz
inc
stos
adc
shrl
and
push
cmp
or
scas
add
divb
sbb
cld
pop
movsl
cmpl
inc
mov
jbe
mov
out
jo
aaa
rclb
mov
jnp
jne
sbb
addb
out
sbb
mov
repnz
push
jno,pn
ret
jmp
mov
push
pop
lods
dec
pusha
gs
jne
jp
cmp
sub
dec
jmp
ja
mov
jae
inc
repz
inc
add
lods
cwtl
pop
lcall
enter
pop
jle
imul
rcrl
xchg
inc
imul
call
sub
fs
jno
out
push
lods
les
xchg
out
mov
xlat
jle
adc
sbb
ds
shr
jecxz
es
sbb
jb
sbb
sarl
leave
shrl
ljmp
jb
movsl
adc
and
subl
mov
rcrb
rsqrtps
gs
cmp
adc
mov
into
jg
decl
mov
inc
jns
adc
pop
in
ljmp
fcoms
pop
fisttpll
dec
mov
cltd
pusha
lods
push
pop
lods
jno
outsl
shl
sbb
daa
lea
or
sahf
fisubl
mov
xchg
adc
mov
shl
shr
xor
xchg
mov
sbb
lock
ss
jg
call
cmovp
cmp
pop
lcall
cmp
outsl
xchg
iret
popa
dec
scas
aad
inc
out
mov
outsb
mov
and
out
fstl
cmpsb
cltd
ss
mov
dec
dec
sub
add
lret
mov
je
cs
cmpsl
sub
addr16
mov
cmpsb
and
gs
subb
xor
mov
xchg
xchg
les
and
imul
dec
and
dec
shlb
xchg
mov
mov
or
in
sbb
cli
das
fcomps
jb
fmuls
jmp
mov
clc
pushf
pop
mov
insb
pop
push
mov
xor
jo
mov
adc
xlat
and
dec
ret
xchg
out
lods
and
push
mov
pop
push
sub
out
leave
dec
dec
sub
jo
mull
mov
sbb
ljmp
loope
sbb
mov
test
jb
js
xchg
movsb
lcall
add
nop
sub
add
mov
lret
shlb
push
sbbl
mov
add
push
das
addr16
mov
fbstp
sbb
popa
cmp
shlb
daa
mov
mov
je
inc
cmp
jnp
fdivr
ret
fnstcw
add
insb
adc
iret
outsl
pop
xor
hlt
fsts
add
jnp
sub
std
and
rcll
imul
cmp
in
xorb
push
lcall
in
push
xchg
movsl
test
fwait
lock
add
outsl
movsb
test
add
pop
mov
push
cmc
or
add
lret
lock
cmp
and
and
icebp
mov
mov
jne
fidivrl
cmp
in
stos
es
roll
add
fnstenv
popa
jo
sbb
inc
adc
xchg
inc
dec
sub
xor
mov
inc
cltd
dec
daa
jecxz
push
or
fwait
mov
mov
or
cld
out
inc
aaa
rcl
mov
xor
lret
and
mov
mov
jmp
leave
test
xchg
mov
js
add
and
andb
pop
sub
xor
pop
repz
dec
xlat
cmpsb
pusha
mov
push
xchg
addr16
es
jge
mov
cld
lcall
mul
and
mov
inc
push
in
sbb
dec
or
addb
sti
or
in
insl
sahf
cmp
jmp
stc
aam
sub
jmp
popf
iret
push
outsb
lds
pop
in
xorl
jp
cmp
sub
or
adc
pop
jns
add
push
leave
bound
scas
and
ret
adc
add
sub
ret
sahf
push
dec
fisttpl
sti
mov
jne
fs
dec
out
xchg
sahf
push
in
xor
aaa
or
dec
mov
cmp
std
repz
mov
sub
loopne
test
sub
jge
aad
push
outsl
mov
jmp
ret
lock
std
jae
out
inc
out
fdivl
sub
rcll
iret
popf
test
mov
sub
mov
pusha
leave
sahf
in
xor
pop
and
test
mov
test
pop
mov
adcb
lock
std
mov
cmp
or
push
ror
jl
adc
mov
jns
cli
inc
les
ja
shll
add
imul
jl
pop
jnp
ja
or
inc
mov
push
in
and
or
or
jp
fisubs
or
rol
push
mov
repnz
sbbl
xchg
dec
push
adc
in
xor
mov
icebp
lret
cmpl
mov
das
pusha
rcll
or
cltd
jmp
fs
jmp
push
sub
push
insl
in
cli
adc
sbb
js
xchg
iret
cmp
sarl
sbb
jne
pop
jl
imul
enter
mov
mov
mov
mov
pop
cltd
test
popa
filds
xor
push
hlt
rcl
mull
xor
mov
or
inc
rcll
adc
lcall
jg
pop
lds
xor
pusha
push
fwait
out
jmp
pop
pop
cmp
cld
into
xchg
xchg
jbe
adc
mov
pop
test
mov
testb
arpl
mov
gs
rcrl
cwtl
add
lds
popa
cmp
sbb
les
dec
enter
ljmp
lods
fsubrs
xchg
pop
cmp
dec
aaa
and
mov
rol
xor
in
ds
andl
outsl
xlat
push
cmp
sub
dec
cmpb
xchg
jne
loopne
daa
insl
jl
push
push
aas
in
sbbb
xchg
insb
dec
sub
cmp
add
ljmp
pop
ds
int3
loope
push
or
stc
adc
dec
lds
mov
cmc
cmp
in
test
stos
lahf
cmpsl
mov
adc
cld
outsl
dec
push
xchg
sub
aam
jge
xlat
aam
jmp
dec
inc
mov
xchg
or
divl
out
je
orb
push
mov
xchg
in
dec
inc
sbb
lock
test
xor
decb
fstl
sub
mov
ja
cmp
stos
mov
data16
sahf
nop
sub
sahf
pop
mov
xor
cmp
or
sti
cmpsl
jnp
inc
inc
cs
push
lods
xchg
addr16
and
sub
sub
dec
or
divb
fcomi
sbb
jge
mov
adc
pop
xchg
push
lret
jns
cs
sub
daa
ljmp
pop
pop
test
adc
sub
mov
inc
pop
and
stos
mov
xor
aas
lcall
mov
cmp
fstps
mov
jo
pop
ds
add
jnp
mov
inc
into
in
dec
ss
xchg
fadds
in
rclb
and
jne
in
jb
imul
sahf
sbb
adc
cld
sbb
cltd
les
pushf
add
gs
leave
outsb
xchg
mov
ror
bound
adc
into
xor
mov
addl
out
push
in
loopne
inc
or
mov
cmp
insl
mov
mov
mov
loop
pop
shr
arpl
orb
xor
repnz
mov
aaa
push
push
push
mov
adc
pop
movl
inc
inc
fcmovb
or
insb
mov
ret
pop
in
leave
jno
scas
xchg
xlat
insb
mov
dec
mov
mov
lahf
popa
pop
outsb
ret
gs
cmp
fiaddl
fildll
inc
outsb
push
adc
sub
lods
adc
ljmp
nop
xor
mov
sub
pop
mov
or
sub
lea
pop
or
adc
test
insl
dec
pop
adc
fxch
xlat
jnp
adc
popf
in
popa
xchg
jne
pusha
rcll
cwtl
cmpb
incl
or
xchg
aas
pop
inc
mov
loop
lea
mov
push
dec
push
daa
mov
bound
arpl
rcr
push
mov
inc
pop
fistpl
or
fidivrs
fstps
pop
mov
lds
add
jne
mov
insb
pop
outsb
mov
xor
scas
call
stos
or
std
xchg
insb
std
popa
xchg
mov
leave
inc
insb
inc
jno,pt
ss
iret
dec
addl
leave
add
js
arpl
pop
push
adc
push
adc
mov
cmp
jmp
jp
js
out
sub
jbe
lcall
mov
fcom
mov
push
rclb
mov
cmp
sub
push
out
daa
repz
sti
es
xchg
int
inc
imul
pop
add
adc
xor
or
jl
mov
notb
ds
movsl
faddp
scas
test
push
les
loope
adc
xor
push
jge
insb
push
inc
push
xchg
dec
sub
jmp
lock
adc
fstps
inc
and
cmp
pushf
scas
mov
push
and
outsb
xchg
jno
push
call
push
lds
jo
push
repnz
scas
or
js
into
imul
int3
inc
outsb
jecxz
jmp
lahf
pop
in
dec
lret
adc
out
jg
fldenv
sbb
fs
push
push
fists
inc
or
add
stc
jmp
sbb
dec
in
dec
jl
and
push
test
jae
xor
gs
lds
and
movsb
jbe
es
arpl
mov
sbb
ja
and
iret
cmp
frstor
sub
repnz
dec
fidivrl
adc
push
jno
sbb
sarl
dec
icebp
xlat
ljmp
js
sarl
xor
mov
or
jno
add
add
imul
stos
movsl
push
cmp
cmc
enter
hlt
aad
xchg
and
push
cwtl
imul
in
fprem
dec
clc
sbb
out
push
add
insb
nop
mov
ja
sub
mov
nop
dec
fnstcw
hlt
xchg
rclb
xor
fdivl
push
or
daa
jle
cmp
sahf
loope
xor
inc
jle
je
sti
cmpsb
dec
addr16
or
push
cmpsl
or
dec
cmp
fmul
cmp
sub
stos
add
dec
mov
cltd
idiv
xchg
push
inc
stc
mov
or
mov
pop
ja
sbb
mov
cmpsb
imul
push
aad
pop
scas
orl
mov
into
mov
mov
push
lahf
pop
fmull
add
cmp
dec
int
mov
movl
jp
push
insb
xor
pop
sub
inc
xchg
jns
and
prefetcht2
push
cmp
stos
rorl
xchg
jge
cmp
push
outsl
ret
push
push
dec
inc
mov
jmp
into
mov
xchg
inc
sbb
int3
xchg
push
repnz
outsl
fcmovnb
mov
iret
inc
jnp
jp
dec
rolb
ret
inc
repnz
mov
pop
xor
jp
sbb
sti
dec
test
aas
inc
and
push
mov
push
bound
adc
pop
xor
dec
shl
jg
mov
movb
movsl
lods
mov
aaa
pop
fdivrs
adc
push
and
fs
popf
pop
push
movsl
rolb
or
add
jbe
out
xor
dec
inc
aam
scas
outsl
push
or
dec
lock
cs
inc
popf
fadd
and
nop
test
fwait
inc
movsl
insl
adc
mov
add
jno
add
push
cmovbe
or
lea
cmp
fstpl
mov
push
out
cmc
adc
pusha
cmp
stos
dec
lret
loop
outsb
inc
and
popf
push
mov
push
shll
out
icebp
adc
inc
enter
jbe
outsb
mov
add
cmp
push
fcomip
mov
or
add
cmp
in
pop
ljmp
jle
pop
out
rcll
sbb
push
sti
mov
or
test
js
inc
sub
mov
mov
adc
sub
sti
dec
ljmp
test
inc
decl
jge
imul
xchg
xchg
scas
push
sbbl
into
notl
ja
test
mov
cmc
xchg
adc
mov
popf
xchg
jmp
mov
jnp
or
bound
lock
cmc
ret
xor
add
adc
je
push
mov
push
push
cmpsb
cli
lret
push
aad
or
and
cmpsb
xchg
ret
mov
xchg
push
inc
inc
xor
push
test
rcl
push
or
pop
adc
sub
xchg
in
in
subb
stos
pushl
sbb
popa
push
cmp
shlb
push
ja
add
adcl
es
xchg
sti
leave
pusha
add
ret
ror
mov
dec
pop
jg
xor
lock
add
fndisi(8087
push
and
xchg
mov
fucom
pop
pop
nop
mov
fistl
xchg
in
push
xchg
pop
lcall
mov
xchg
pop
mov
repz
in
xchg
aam
lock
sub
mov
jae
out
push
push
arpl
test
iret
sbb
lea
aas
jb
sub
xchg
js
inc
rcl
mov
push
adc
cwtl
fcmovbe
sub
adc
cmp
push
dec
add
cli
mov
push
push
hlt
or
popf
es
and
movsb
cmp
loope
int
lds
pop
fisubl
jmp
cmp
jbe
push
orl
mov
loop
in
lahf
xchg
inc
mov
sbb
ss
jb
adc
in
aas
mov
sarl
test
and
mov
call
dec
pop
xor
push
cwtl
sub
rcl
dec
or
cmp
shld
push
mov
fmull
je
xchg
sbb
cmp
xchg
lock
ljmp
mov
mov
xor
out
xchg
dec
xor
lods
or
push
movsl
call
shrb
sub
sub
loopne
repnz
mov
icebp
jnp
sub
sarl
jns
in
jl
push
repz
loopne
in
add
cmp
jecxz
adc
push
imul
fsubl
sbb
fst
dec
aam
adcl
sub
xchg
loop
std
sti
xchg
gs
dec
aas
inc
das
or
fimuls
and
jmp
js
stc
inc
mov
fisttps
add
dec
les
data16
mov
js
test
int
mov
aas
sbb
cld
je
and
cmp
mov
scas
sbb
shrl
test
or
add
mov
or
ds
xlat
push
scas
ficompl
jae
es
test
testb
pop
mov
jmp
jmp
sub
rorl
stc
cld
mov
fisubrl
cli
out
shl
jae
lods
cmp
in
imul
shll
cltd
adc
sub
inc
add
add
loope
ret
subl
xchg
sub
adc
or
mov
push
jo
inc
aam
adc
and
sub
cmpl
cld
leave
jbe
scas
and
xor
pop
cmp
inc
and
add
sbb
dec
outsl
jle
pop
or
lret
pop
inc
fwait
pop
cltd
xchg
mov
mov
es
mov
xchg
mov
outsl
sahf
out
pop
inc
imul
inc
sub
icebp
pop
cmpsl
adc
repnz
rorb
daa
mov
adc
shlb
scas
call
add
add
sub
push
adc
and
mov
icebp
popl
je
out
cmp
jp
mov
ret
adc
sub
fs
xchg
fcmovu
js
into
xor
pop
ds
lahf
sbb
lret
dec
add
cmp
sub
and
addl
loope
and
and
jnp
into
bound
and
cmpsb
test
cmp
jno
add
inc
addr16
cmpsl
pusha
or
or
imul
movsl
xchg
sub
add
pusha
dec
mov
outsl
add
aam
jne
dec
mov
sub
push
add
add
in
aam
insl
in
movb
stos
cmp
inc
adc
rclb
sub
jle
mov
adc
adc
adc
aaa
fmuls
push
cltd
xchg
fdivl
repnz
mov
movsl
lock
pop
xlat
mov
adc
ror
repz
ret
mov
cltd
mov
mov
imul
ss
mov
hlt
lcall
out
jno
testl
test
jbe
rorb
xchg
arpl
pop
push
add
mov
or
jo
jge
aam
cli
fwait
inc
int3
xchg
cli
notb
jmp
sahf
lcall
imul
repnz
dec
shrl
xchg
and
jae
pop
into
aaa
pop
js
mov
into
mov
cwtl
xor
out
mov
mov
cmp
push
es
fdivs
pop
daa
das
cmp
push
jae
fs
fisubrs
mov
mov
pop
aad
popf
xor
sub
cmp
out
bound
or
scas
cmp
jne
mov
in
fwait
loope
mov
adc
cwtl
scas
stos
and
sub
icebp
test
mov
rcll
cmp
mov
cmp
test
xchg
outsl
pushf
dec
jp
dec
cs
shl
push
push
sti
push
cmp
and
test
xchg
inc
push
stos
movsb
push
mov
ds
fsubp
sbb
cmp
xchg
arpl
jmp
or
rorl
stos
iret
xor
inc
cmpsb
jecxz
jno
dec
sbb
scas
dec
stos
lds
sub
incl
test
jle
lret
sbb
stos
push
cmp
xchg
pusha
fsubr
loopne
pop
pusha
xchg
cmp
add
and
stos
inc
xlat
ss
enter
pop
enter
call
outsl
and
pop
cmpsl
mov
lret
std
xor
sar
and
adc
les
adc
xchg
cmpl
scas
dec
push
cmp
adc
or
pop
test
shll
fcmovnb
sub
and
lods
cld
aad
push
movsl
hlt
push
pop
push
mov
or
stos
shlb
enter
adc
out
rcr
pop
jecxz
push
icebp
jno
int
push
jp
and
sahf
popf
cwtl
mov
jle
and
cmp
jbe
loope
sub
push
add
daa
lea
mov
jns
clc
cmp
outsl
jbe
add
add
push
cmp
and
sbb
inc
stos
adc
icebp
es
popa
das
insl
jmp
push
movsb
mov
in
cmpsb
push
jmp
jo
add
loopne
int
inc
and
push
dec
in
psadbw
mov
sub
jb
shrb
jns
sbb
test
mov
xchg
pop
and
inc
addr16
xchg
push
loope
test
cmp
xchg
mov
movsb
insb
movlps
mov
xor
loop
inc
cmpsl
stos
das
imul
aas
ds
sub
sub
leave
les
test
push
mov
mov
js
aad
and
push
inc
rorb
add
pop
xchg
jb
xor
inc
mov
aam
jge
adcb
lret
lret
orl
loopne
push
gs
out
jno
mov
pop
lods
jmp
push
adc
movb
cmc
push
dec
std
pop
mov
adc
xchg
push
add
stc
ss
jae
xchg
pop
negb
aad
xchg
loop
xor
inc
mov
adc
das
xchg
sbb
fwait
cmp
cmp
fistpl
or
std
shll
adc
roll
fbld
cwtl
mov
xchg
adc
xor
loop
fsts
mov
jg
or
adc
inc
pushf
arpl
and
cmp
push
test
fcompp
addr16
test
test
adc
aam
lret
mov
add
xchg
std
inc
jb
out
sarb
popaw
push
and
adc
in
jbe
dec
xchg
cmp
jle
push
lret
dec
mov
add
sub
orl
and
dec
ret
jl
xchg
jb
ljmp
into
mov
out
sbb
aaa
leave
outsl
fistpll
insl
pop
popf
or
mov
sub
leave
inc
inc
rorb
cmp
lret
push
rcrl
test
icebp
mov
or
sub
lods
jl
int3
cmp
orb
mov
add
mov
jmp
aad
dec
std
cmp
mov
mov
cld
sbb
jecxz
lods
xchg
pop
xchg
stos
shll
popf
xchg
mov
sub
aad
ss
leave
adc
ljmp
pop
dec
lock
addb
fldl
rcl
pop
int
fdivrl
loopne
fwait
lahf
cld
icebp
shl
jnp
ficoml
mov
cmpps
xor
std
lret
adc
jne
cli
adc
jecxz
loop
mov
sahf
nop
mov
cmc
aad
fstpl
into
sub
cs
aad
js
popa
inc
imul
cmp
adc
mov
dec
jnp
xlat
fidivs
filds
pusha
adc
and
aaa
inc
pop
aas
mov
pop
cmp
lret
mov
mov
pushf
stc
mov
das
test
shrb
mov
test
div
sub
mov
mov
mov
js
std
outsl
pop
aaa
mov
cs
neg
loopne
into
jne
gs
mov
nop
jecxz
in
enter
inc
jecxz
popa
pop
nop
pusha
add
test
dec
stc
aad
int
add
faddp
sbb
jecxz
sbb
mov
jge
out
inc
sti
mov
sub
or
inc
js
sbb
popf
push
inc
loop
ja
jo
cld
jg
xchg
mov
cmp
cmc
dec
mov
dec
mov
mov
xor
pop
pop
lcall
ss
scas
mov
add
cmp
sub
insb
mov
mov
pop
lods
popf
scas
aaa
cltd
add
mov
jne
xchg
mov
sub
mov
mov
popa
mov
cmp
dec
pop
sub
jno
lds
mov
andb
mov
lret
in
cmpsb
and
jl
mov
and
cmp
outsb
lret
mov
fsubrl
jbe
push
sar
mov
fcoml
jns
push
jno
out
mov
lcall
jg
out
push
pop
rcll
popa
mov
lret
lea
cmp
jmp
inc
int3
adc
xchg
cmp
jbe
sub
mov
jecxz
aaa
mov
movsb
insb
cmp
cmp
out
mov
sub
test
sti
mov
test
push
incb
cmp
lcall
movsl
test
inc
movsl
mov
outsl
insb
stos
dec
pop
xor
cmp
ficoms
outsb
pusha
push
inc
add
in
and
loope
push
inc
cmp
push
mov
call
out
or
adc
shlb
fidivl
test
sarb
dec
jp
test
mov
jnp
fdivp
dec
mov
add
imull
outsl
pushf
mov
stos
or
fwait
mov
int
lock
les
mov
push
inc
ljmp
lcall
ficoms
stos
int
push
lods
add
and
mov
test
repz
lea
xor
add
frstor
cmp
je
negl
and
out
arpl
sub
js
inc
cmpsb
testl
xchg
incb
pop
inc
mov
stc
xor
pop
jmp
mov
push
add
lea
xchg
iret
pushf
mov
fisubl
dec
mov
jg
data16
xor
mov
leave
jb
or
rclb
int
adc
push
cs
xorl
cmp
test
dec
pop
cli
dec
sub
push
stos
mov
test
fldl
mov
in
repnz
js
jle
jp
push
inc
xchg
inc
and
jp
sbb
fildl
std
inc
insb
jnp
lret
xorl
pop
pusha
js
add
push
inc
sbb
mov
mov
cmp
mov
cmpsb
inc
rcl
rolb
mov
inc
lods
scas
in
imul
xor
movsl
fmull
add
mov
les
pusha
out
notl
lahf
xchg
mov
lds
or
in
inc
cld
ret
test
in
pop
jmp
fisubs
out
test
jno
in
imulb
jle
jge
loop
arpl
jbe
or
sub
fldenv
movsl
iret
sbb
fisubl
lock
pushf
clc
mov
cwtl
cli
cltd
rcr
mov
mov
push
flds
test
ss
cmp
jmp
lret
or
inc
xorb
dec
jge
mov
cmp
aas
pusha
inc
fimull
jb
sub
adc
jne
dec
leave
jecxz
in
shl
out
or
repz
pop
jl
push
xchg
fisubrl
hlt
push
fwait
inc
mov
filds
push
test
cmpsl
sub
stc
xor
and
fldl
scas
jns
cmp
dec
sbb
sbb
gs
push
lcall
sbb
dec
test
dec
repz
sti
imul
adc
adc
xor
andl
out
inc
je
ret
fdiv
sub
sbb
out
cmpsl
sub
pop
leave
adc
dec
std
sub
testb
pop
jns
inc
mov
out
sub
pop
js
xor
call
jge
std
scas
fwait
daa
mov
dec
cmpsl
inc
add
xor
cld
addl
dec
fwait
jecxz
and
inc
mov
movsl
dec
and
aaa
sub
or
mov
stos
inc
jb,pn
sar
flds
push
add
sti
mov
flds
enter
loop
or
pop
lret
aas
push
cs
iret
inc
lods
addb
push
mov
bound
sbb
add
push
addr16
icebp
icebp
ds
test
mov
data16
std
ds
bnd
in
aas
dec
lcall
divb
push
sbb
outsl
mov
xchg
es
pop
adc
sub
mov
nop
push
sub
jnp
je
push
fcomi
sub
ficoml
dec
xchg
xchg
icebp
cmp
adc
cmpsb
and
mov
stc
ja
or
cmp
cmp
dec
adc
mov
iret
jp
scas
lock
adc
xchg
pop
add
lcall
cwtl
sbb
and
jae
jne
xlat
xchg
aam
push
mov
ret
xchg
rolb
xchg
sub
pop
mov
inc
imul
mov
subl
fwait
adc
pop
sub
scas
dec
mov
test
fs
jo
icebp
inc
int
rcrb
pop
or
loopne
sub
dec
adc
and
mov
push
popa
or
in
mov
pop
test
mov
cld
out
dec
mov
and
inc
cwtl
je
xchg
and
xchg
add
jg
cltd
mov
mov
ljmp
add
into
or
cmpb
jmp
cmp
and
jnp
pop
cmpsl
xchg
out
stc
push
lea
push
aam
lcall
jp
mov
pop
jge
js
add
in
sahf
std
outsl
shll
dec
push
cs
xor
nop
fmulp
std
add
fwait
test
rorl
push
and
mov
pop
rcll
pop
idivb
push
es
fsubl
cltd
mov
pop
lea
test
imul
ficompl
arpl
mov
xchg
adc
jl
lcall
cmpl
ja
aaa
fists
daa
mov
lcall
fsubl
aaa
jge
addl
mov
fstp
sbb
and
psubw
hlt
aad
adc
inc
xchg
xchg
ja
jle
scas
loopne
jae
movsb
ret
jmp
jecxz
adc
clc
ret
mov
lods
lcall
and
iret
inc
test
jg
xlat
push
ljmp
test
shll
add
out
negb
mov
idivb
mov
or
fsubl
rcl
pop
out
dec
xor
xor
test
lcall
cmp
loop
inc
or
sbb
pop
popf
pop
xor
or
mov
cmp
inc
ljmp
adc
push
and
inc
ret
sbb
xchg
cmp
nop
sbb
int3
and
cmp
mov
ficomps
sti
mov
fisttpll
and
and
push
fisttps
cs
lahf
mov
pop
jecxz
mov
ds
dec
mov
aaa
jecxz
push
and
bound
lods
nop
cmp
mov
jae
adc
push
fwait
sarb
icebp
and
inc
xor
jae
popa
cmp
add
inc
inc
call
cmp
lods
jge
xchg
lods
jns
pop
stos
repnz
xor
cmpsb
in
mov
sub
xor
call
or
jnp
pop
sub
das
leave
enter
ja
sbb
out
and
inc
push
stos
mov
clc
pop
sbb
cmp
xor
pop
jle
push
pushl
or
pushf
inc
popf
xchg
or
xchg
cmp
ss
movsb
jb
out
mov
lods
cwtl
test
out
sub
mov
popl
add
mov
cmp
aam
call
cmp
xor
pop
out
dec
dec
into
popl
inc
jns
jp
repz
dec
loop
and
push
adc
sbb
push
in
push
adc
adc
push
sbb
or
mov
inc
shll
mov
adc
dec
sbb
pop
pop
jno
data16
sub
hlt
cmc
arpl
pop
outsb
fnstenv
lods
les
gs
cmp
popa
and
jbe
iret
imul
je
sahf
out
cltd
cmc
add
sarl
leave
enter
or
ss
insl
repz
mov
and
es
mov
ja
xlat
std
xor
test
and
ficompl
lock
stc
push
popa
outsl
cmp
lods
sbb
mov
pop
pop
xor
and
dec
xchg
add
es
mov
sub
mov
sbb
jg
mov
pop
hlt
mov
out
cmp
cmp
mov
stos
xor
lcall
inc
lods
insl
xor
mov
iret
cmpsl
mov
into
mov
cmp
test
rcrb
repnz
or
inc
notb
push
mov
and
arpl
sbb
gs
test
xchg
int3
xchg
outsl
loope
pop
arpl
push
sub
scas
imul
and
jle
mov
cmpsb
or
lea
xchg
mov
nop
int
mov
les
pop
mov
in
gs
sbb
aad
into
notl
ja
cli
fdivs
mov
addr16
push
inc
mov
lahf
xchg
cmc
mov
dec
and
mov
add
mov
cmpsb
mov
leave
adc
nop
mov
or
sub
xchg
arpl
mov
out
imul
gs
jge
pop
out
loopne
imul
pop
clc
jmp
cmp
movsl
mov
xchg
cmp
dec
insl
int
outsl
dec
ret
xor
sbb
cs
jp
cmpsl
cli
pop
jmp
sbb
sbb
jle
dec
mov
jae
push
insl
and
iret
nop
sub
add
xchg
leave
pop
lea
jle
sbb
jmp
inc
femms
inc
ficomps
adc
mov
rcrb
or
xchg
adc
pusha
loopne
aaa
jle
cmp
lods
pop
mov
xor
fidivl
jge
xor
fidivrs
pushf
repz
insb
xor
and
es
push
in
mov
call
push
mov
pop
dec
cmpb
mov
rcrl
sbb
mov
dec
jns
jo
hlt
sti
jmp
sbb
add
jnp
and
push
aaa
pop
cs
push
fsubr
push
insb
pop
in
dec
divl
repz
aam
aad
or
ja
jnp
pop
mov
jns
dec
leave
cmp
add
std
je
and
and
mov
pop
cmc
les
mov
sti
push
dec
mov
pop
mov
mov
mov
xor
mov
fsts
pop
mov
test
push
dec
add
jnp
stc
test
add
mov
mov
xor
push
lcall
jo
mov
xor
insl
loop
jge
pusha
cmc
lea
mov
sahf
pop
inc
or
mov
add
lods
jno
xchg
lock
cwtl
pop
popf
jns
cltd
push
jecxz
sahf
xchg
sbb
pop
movsb
dec
lock
mov
dec
popa
pop
add
dec
pop
in
enter
jns
daa
jno
lret
xor
pop
into
mov
sti
enter
neg
add
fwait
popa
fsubl
xchg
nop
les
xchg
add
int3
stos
enter
xchg
sub
or
insl
fwait
dec
inc
mov
sub
xchg
cmp
bound
sub
nop
ss
jbe
movsl
adc
sti
push
cmp
pop
std
dec
aam
xchg
push
push
sbb
ret
fucomi
inc
jecxz
mov
inc
cmp
pop
into
jne
mov
or
pop
int3
loop,pt
dec
xchg
xchg
repnz
std
out
clc
mov
repz
stos
dec
in
leave
jnp
insl
sahf
xchg
adc
shrb
pop
fisttpl
add
and
adc
std
imul
popa
adc
lods
int
xchg
push
scas
icebp
cmp
adc
sarb
repz
inc
xor
cmp
jnp
sahf
xchg
add
xor
aaa
pop
out
sbbb
cmc
xor
cmp
subb
sbb
mov
scas
hlt
mov
mov
cmp
dec
adc
rorb
mov
and
add
cmp
jno
inc
jmp
fcom
xor
mov
sbbl
pop
push
imul
sub
push
xor
mov
jb
test
sarl
das
xor
into
add
jmp
sbb
adc
arpl
cltd
jno
insl
mov
in
mov
fdivs
adc
sbb
pop
cmp
mov
adc
pop
nop
aaa
mov
andl
ds
jge
and
shlb
es
or
dec
pop
or
daa
mov
and
arpl
shlb
push
add
pop
xchg
call
xor
adc
dec
mov
push
jnp
int
or
in
mov
pop
addb
leave
push
xchg
adc
imull
shlb
pop
inc
mov
lret
sub
in
push
jp
into
cmpsl
inc
lods
cmc
mov
pop
jae
shrl
sub
add
dec
stos
loopne
jge
shrl
mov
lahf
loope,pt
jle
ffree
movsl
ret
jg
cs
in
add
mov
imul
lods
movsb
dec
cmpsl
jl
jno
jns
cmpl
xchg
ss
cli
cmc
stos
cmc
test
daa
pop
fldenv
nop
add
push
popa
adc
icebp
shl
test
mov
inc
pop
pusha
iret
jb
into
hlt
leave
push
in
pop
jmp
jmp
dec
xchg
sbb
in
sbb
pop
in
out
iret
sub
xchg
jmp
mov
pop
shl
push
enter
or
aaa
jp
jno
xor
pop
xor
xor
movsl
ds
scas
pop
fimull
xor
xor
gs
outsb
or
gs
ss
cmp
int
dec
das
mov
rolb
mov
cmp
sbb
jb
hlt
pop
sarb
push
mov
dec
aas
lds
pop
insb
jmp
push
psubsw
dec
icebp
loop
insb
enter
loopne
xchg
push
xor
inc
cmp
gs
mov
mov
push
mov
lret
icebp
add
ret
ret
xor
nop
mov
xchg
stos
or
xchg
insb
sub
add
shr
int
fsubl
add
pusha
loop
loopne
and
cmp
dec
xchg
clc
xchg
jnp
lds
in
hlt
cwtl
pop
out
cwtl
mov
roll
mov
leave
je
jmp
repnz
adc
pop
icebp
fcmovb
mov
sbb
pop
fcompl
push
cmpsb
jns
sbb
xor
iret
pusha
adcl
inc
adc
arpl
lret
xor
or
je
adc
test
cwtl
rcl
or
jle
sarb
and
mov
xor
dec
sub
fcoml
xor
mov
mov
int
mov
cmp
push
jbe
push
xor
andl
negb
lret
pop
out
insl
ljmp
xchg
and
mov
fmul
lret
inc
mov
mov
dec
sub
mov
jl
das
clc
inc
xchg
leave
js
out
mov
mov
cmp
xor
xchg
inc
popf
fwait
ret
inc
mov
cmp
rorb
lret
or
fldcw
mov
lds
pop
jmp
std
cltd
jbe
orb
stc
jp
test
addl
lret
sahf
loop
out
inc
dec
mov
dec
loope
pop
push
iret
push
addl
mov
pop
inc
out
je
outsb
mov
nop
dec
push
xor
mov
xchg
sub
repz
inc
repz
adc
mov
or
xlat
push
rorl
xor
xlat
pusha
cltd
rcl
lea
out
lea
cmp
push
sub
dec
sbb
jg
stc
subb
int3
mov
rcl
and
xor
mov
fistl
jb
push
fnsave
jne
dec
iret
push
insb
xchg
jecxz
aaa
mov
jp
add
or
jg
mov
call
jp
movsb
adc
jo
inc
mov
dec
fucomi
loope
add
jle
mov
pop
mov
jmp
mov
outsb
arpl
or
shrb
mov
push
and
loope
out
adc
outsb
mov
lods
lea
mov
and
or
push
mov
inc
cmp
adc
push
repnz
mov
sbb
imul
and
iret
arpl
xchg
mov
push
or
xchg
jb
mov
inc
sti
mov
subl
sti
push
aam
sub
mov
jl
adc
imul
jmp
or
push
fcompl
pop
movsl
jnp
daa
lret
jo
jns
or
inc
loopne
adc
xchg
push
xchg
ret
or
mov
fisubs
cmova
sbb
cld
xor
jmp
mov
adc
mov
inc
add
stos
stos
sbb
push
xlat
mov
pop
sti
jecxz
int3
add
movsb
mov
sti
stos
jbe
jne
aas
jle
test
sub
sbb
out
dec
lds
xor
lret
cmpsl
xor
insb
push
xchg
xlat
xchg
imul
push
rcpps
lods
push
sbb
jno
insl
mov
pop
aaa
mov
mov
fildll
xor
stc
mov
cli
sysret
sub
mov
les
dec
shlb
cli
and
cmpsb
add
or
popa
idivl
pop
xchg
sub
test
btr
xor
mov
mov
jge
mov
jae
jl
outsl
adc
mov
popf
mov
test
fdivs
in
add
pop
imul
mov
pop
jbe
cmp
scas
lret
testb
lds
enter
dec
add
aas
jb
add
mov
and
mov
push
push
lret
lcall
jae
xchg
push
and
or
lds
mov
in
or
mov
add
into
jnp
mov
fldcw
dec
data16
push
ds
xchg
mov
cli
popf
adc
movsl
add
flds
ds
in
add
repnz
adc
mov
rcl
xchg
popf
mov
leave
mov
pop
repnz
mov
xchg
add
mov
fwait
aam
shlb
sbb
push
fildll
fs
xchg
mov
sarb
pushf
pop
push
or
adc
or
or
out
mov
repz
ljmp
test
sbb
fsubr
sub
dec
sub
and
cmp
inc
inc
push
mov
ljmp
jge
sub
out
popa
mov
sti
xor
ljmp
invd
jl
fs
lds
push
loope
add
mov
pop
cmp
mov
sbb
mov
in
mov
push
leave
push
mov
pop
test
or
add
fcoms
in
insl
into
xchg
test
rcrl
jne
push
cmc
and
xor
fstpt
jae
cwtl
stos
fs
popa
inc
outsb
cmp
dec
xchg
mov
and
pop
mov
gs
jne
mov
aad
sahf
mov
jecxz
and
push
jge
out
mov
mov
pop
pop
adc
addb
arpl
pusha
push
xchg
insl
push
adc
fmuls
add
push
xchg
fwait
xor
sub
popa
mov
jmp
cli
mov
ja
dec
pop
outsl
dec
outsb
test
sahf
pusha
sub
stos
pop
sbb
test
pop
arpl
and
push
nop
lods
push
mov
out
js
adc
push
daa
fists
xchg
fwait
lods
pop
sub
test
mov
xchg
shrl
pop
sar
mov
push
scas
or
mov
leave
jp
fsubl
mov
daa
mov
adcb
mov
xor
push
jl
cltd
out
adcl
mov
test
sarl
mov
sbb
cmp
ds
xchg
cmpsl
lret
addr16
sbb
xor
mov
or
stc
bound
je
inc
int
lods
cs
or
xorb
xchg
adc
faddp
cld
mov
outsb
lock
divb
sub
pop
outsb
insb
sub
inc
jg
sar
add
test
xchg
mov
jb
cs
cmove
nop
in
sbb
out
into
or
std
aam
mov
add
adcb
xchg
inc
push
pop
das
mov
mov
and
push
cmp
shl
jns
xlat
enter
sbb
out
jae
out
mov
aad
arpl
ss
call
push
test
inc
jmp
in
push
pop
loope
add
and
push
out
addr16
xor
mov
xor
and
mov
int
cmp
jno
fidivl
or
jo
scas
or
pop
sbbb
movsl
push
div
lds
mov
lret
push
insb
sub
cld
enter
loope
sub
cwtl
ffreep
cmp
adc
hlt
or
pop
jb
out
cld
inc
mov
sbb
jae
push
lds
fwait
ret
insb
sub
rcll
xchg
clc
xor
xor
cmp
inc
jbe
imul
ret
mov
xchg
and
sub
lcall
cmc
loop
mov
mov
lcall
mov
popa
jns
imul
sbb
inc
push
insl
repnz
and
jl
mov
ljmp
push
pop
mov
hlt
and
mov
inc
jge
ljmp
jmp
loop
cmp
adc
fwait
xchg
call
xchg
dec
xchg
dec
or
sbb
stos
incl
pop
mov
adc
loop
iret
testl
and
mov
mov
pop
aaa
fcmovbe
and
inc
dec
xchg
xor
outsb
jns
insb
pop
xchg
jge
xlat
scas
or
nop
stos
clc
mov
lock
cmp
lret
mov
fucom
bnd
dec
ljmp
jmp
notb
dec
push
or
lahf
sbb
bound
shl
ret
cld
xorb
and
sub
adc
lcall
mov
push
add
mov
je
adc
mov
and
sub
and
rcrb
xchg
scas
jne
pop
sbb
leave
mov
xchg
jb
loope
pusha
xchg
sub
dec
dec
ljmp
leave
jae
fwait
or
nop
cltd
addr16
jb
ds
jmp
push
sub
loope
dec
jle
lock
rcrl
fs
stos
jge
mov
sbb
lea
js
stos
cmp
test
cmpl
arpl
lods
jg
call
ja
jecxz
inc
mov
xor
jecxz
cld
mov
lcall
movsl
cmp
loope
call
adc
ret
xchg
inc
add
adc
ljmp
loopne
sarl
lret
mov
jae
dec
shrb
jl
mov
inc
dec
lcall
jecxz
iret
sub
mov
movsb
roll
shrb
dec
mov
into
clc
or
addr16
cltd
pop
xlat
cmc
jp
mov
adc
push
js
sbb
push
filds
ffree
dec
bound
popf
xchg
lds
mov
fcoms
icebp
int3
push
sbb
sub
mov
fidivrl
leave
fadds
cmp
je
lahf
inc
or
mov
xchg
jg
mov
jns
xor
push
pop
cmp
mov
dec
outsb
cltd
and
xchg
sub
cmp
pop
inc
mov
shlb
in
push
dec
push
dec
adc
cmpsb
jno
imul
xor
test
movsb
insl
bound
jo
popf
stc
cmp
adc
mov
ds
insb
adc
aaa
test
and
sub
shlb
stc
push
push
sub
xchg
mov
dec
movsb
pop
loope
divl
xlat
jno
xchg
pop
pop
mov
mov
and
movsb
lret
int3
imul
pop
test
or
enterw
push
pop
rolb
pop
xchg
mov
mov
or
jp
stos
fwait
and
mov
or
scas
sbb
out
jno
sbb
lds
push
popf
out
mov
and
fnsave
mov
ret
xor
dec
sub
sbb
arpl
mov
testl
out
jl
ret
adc
out
jbe
ds
add
popf
push
jg
cmp
adcb
fstps
dec
push
and
add
cmp
repnz
or
push
movsb
adc
mov
clc
sbb
pop
adc
fdivs
dec
in
jb
into
cmpsb
rolb
mov
fs
fnstsw
xchg
inc
pop
jmp
jno
inc
pop
lock
xor
pop
addr16
out
lea
cmc
bound
lret
scas
fwait
test
in
push
mov
out
cmpsb
mov
cltd
outsl
lods
and
out
push
push
pop
hlt
loopne
mov
shr
adc
sub
xchg
icebp
addr16
push
ficoml
repz
dec
xchg
stc
xchg
mov
inc
push
jno
or
mov
dec
out
dec
mov
into
movb
into
cld
or
or
sub
adc
xchg
lret
cmp
xchg
sub
push
and
cmp
aaa
xor
fcmovu
sbb
mov
xchg
js
test
test
cmp
sti
cmp
test
cwtl
add
lret
mov
imul
shl
cmp
fs
rorl
push
in
dec
sarl
jne
cld
cmpsl
lock
mov
test
loop
pop
icebp
add
xchg
aaa
ljmp
pushl
mov
ljmp
iret
cmp
ss
jo
mov
cwtl
pop
loope
dec
fiadds
adc
insl
mov
push
jnp
ljmp
lahf
inc
jne
adc
xor
inc
fidivrs
mov
scas
jge
sub
push
xchg
sbb
addr16
lea
jb
or
push
xchg
scas
in
daa
addr16
xor
insb
rcrl
mov
mov
fwait
push
pop
test
push
outsb
jns
push
shlb
and
dec
ds
addr16
push
pushf
sti
cmp
sbb
sbb
mov
xorb
push
iret
leave
test
jl
int
movsl
cltd
mov
mov
stos
jge
xchg
cmpsb
aam
mov
pop
xor
test
mov
mov
stos
out
mov
test
insb
fcmovu
xor
ror
adc
clc
xchg
sub
xchg
shrb
push
sub
mov
mov
jb
adc
mov
cltd
pop
leave
enter
pop
fimuls
bound
cmp
lahf
cs
mov
or
test
add
xchg
pop
aad
cwtl
and
mov
xchg
sub
psllw
cmp
sbb
push
mov
pusha
cld
fwait
dec
outsw
push
sbb
sub
shll
adc
insl
in
push
test
cmpsb
popf
lods
repz
inc
jle
addr16
rorb
push
in
imul
ss
fsts
push
cmp
add
pop
mov
pusha
in
jns
in
les
adc
dec
or
jo
shll
sarl
loop
out
hlt
idivb
dec
out
add
mov
arpl
and
inc
mov
inc
dec
stos
popf
divb
dec
xchg
stos
mov
add
pop
fidivrl
fbld
push
cmp
xchg
xchg
adc
lea
cmpsb
push
dec
pop
xchg
aad
shlb
imul
pop
mov
out
xchg
out
push
mov
sahf
pop
inc
pop
xchg
fistps
jg
xor
add
out
cmpsl
add
and
or
add
ret
je
xchg
pusha
mov
or
push
dec
xchg
imul
push
dec
test
imul
les
test
arpl
pushf
dec
or
ror
das
dec
cmp
test
filds
popf
arpl
fdivrl
fcmovu
std
pop
mulb
sbb
or
sub
les
or
pop
jno
add
dec
mov
push
cmp
clc
rcl
mov
xchg
lahf
sub
mov
ficoml
push
stos
in
xchg
vandnps
mov
mov
sub
cld
test
jbe
xor
add
notb
icebp
ljmp
add
mov
push
xchg
cli
sub
cmp
pop
fistl
lcall
inc
jbe
xchg
pop
jl
push
popf
aam
arpl
push
out
xor
pusha
and
cltd
lahf
mov
push
mov
rorl
roll
or
jl
test
lea
scas
jg
loopne
movsl
push
pushf
lahf
dec
add
inc
lcall
jle
decb
aaa
cmc
in
push
iret
inc
and
dec
mov
fcmovne
mov
mov
lret
fcompl
sub
es
sbb
jg
mov
cwtl
xchg
xor
mov
mov
aaa
mov
notb
xor
ficoms
leave
mov
sub
loop
int
adc
fldt
jnp
cmp
mov
es
mov
xor
in
loope
ds
push
loop
mov
pop
outsl
in
push
movsl
mov
mov
and
xchg
xchg
sub
inc
push
je
cmp
and
mov
mov
mov
je
lock
lret
mov
mov
inc
push
mov
inc
insb
ja
imul
inc
in
inc
aas
add
sub
push
rolb
test
or
imull
mov
cmp
test
adcb
and
add
mov
fwait
pop
jo
jg
stos
sarb
push
fcmove
mov
cmp
pop
call
adc
cmpl
cltd
ja
mov
imul
xchg
pop
cmp
dec
sbb
fwait
test
loopne
mov
mov
lret
sub
jmp
hlt
fcoms
mov
adc
gs
dec
dec
sub
adc
xchg
add
cmp
loop
push
in
xchg
sbb
inc
lret
lods
mov
pop
shrl
bound
icebp
aam
dec
gs
sub
inc
adcb
outsb
insb
or
xchg
mov
jge
loope
cs
fidivrs
outsb
movsb
movsl
repnz
xlat
orb
xchg
adc
sarb
push
sti
sub
cmp
xor
pushf
out
inc
mov
dec
push
in
out
push
ja
push
dec
testl
jae
dec
ret
jecxz
das
movmskps
pop
data16
jnp
sarb
pop
sarl
xchg
jno
outsl
or
lock
sbb
jae
sub
and
mov
insl
mov
leave
add
pop
and
scas
fldcw
addr16
mov
cld
and
repz
outsl
pop
cltd
rcrl
jo
mov
adc
repz
gs
mulb
lds
push
pop
xchg
div
aad
sbb
mov
add
pop
aam
or
lea
mov
push
mov
add
jae
and
in
popf
frstor
pop
add
sub
sbb
or
pop
mov
cmp
pop
push
js
lahf
ret
push
int
push
jbe
hlt
insl
bound
lods
dec
mov
xchg
xchg
out
fcomip
in
lods
bound
fists
fldl
loope
scas
push
and
xchg
jnp
xchg
icebp
sbb
cld
pop
lds
add
mov
cmp
lret
ret
sbb
mov
xor
xor
mov
pop
dec
mov
inc
or
pop
outsl
push
cltd
ret
enter
or
loop
jne
push
aad
sub
and
imulb
pop
cmp
xor
inc
stos
sbb
pop
cld
sbb
pop
jno
and
pop
cmp
mov
rorl
mov
xorl
dec
int3
les
sbb
add
out
subb
in
adc
or
push
repnz
int
add
mov
addb
adc
mov
mov
and
ljmp
test
add
test
sub
and
inc
sub
push
xor
rclb
or
mov
sarl
mov
rcl
sub
std
or
fbld
inc
jmp
push
aaa
into
mov
repz
xor
jl
xor
sub
adcb
push
gs
sahf
xchg
or
orb
loopne
push
outsb
sub
outsb
mov
rolb
fs
inc
pop
aad
test
add
rcrb
sub
push
jle
icebp
inc
mov
lcall
mov
ljmp
movsl
subb
icebp
fsubs
inc
and
add
decl
pop
data16
mov
icebp
sub
lret
xchg
stc
out
mov
scas
cmc
cltd
mov
add
inc
daa
xor
and
es
popa
dec
inc
lds
stc
xchg
sbb
push
shll
mov
cmpsb
jns
push
mov
and
mov
push
addr16
or
adc
outsb
je
cmp
mov
sti
rorl
arpl
jns
inc
lcall
xchg
or
dec
iret
test
in
lds
jne
lahf
push
repz
and
sbb
xchg
cmp
mov
xchg
out
xor
mov
dec
in
push
loope
jae
xor
mov
pop
and
jo
cmc
cmp
js
mov
and
dec
jnp
loop
ljmp
mov
lahf
inc
incb
fldt
jge
push
pop
sbb
sub
incl
xor
sub
inc
into
movsl
jge
pushf
sub
in
xor
xor
and
jae
push
jge
int
fwait
loope
mov
or
sbb
ret
cmc
aam
jp
out
stc
jmp
push
lods
sarb
out
out
cmpsl
test
mov
adc
dec
cmp
xchg
popa
outsb
xor
jmp
xcrypt-ctr
cmpsl
pop
pop
push
xchg
movsl
inc
test
push
scas
pop
pop
stc
or
testb
inc
mov
pop
xrelease
rorb
add
dec
pusha
mov
xchg
outsl
nop
decb
fs
sti
call
imul
int3
andb
fwait
and
movsb
jae,pn
lods
mov
add
bound
mov
xor
lea
loope
dec
lret
sbb
pop
add
inc
mov
js
data16
jbe
xchg
out
dec
mov
jne
aad
pcmpeqb
mov
mov
xor
jno
mov
sbb
push
icebp
mov
inc
mov
cltd
jo
les
decl
loopne
addr16
test
mov
jecxz
pop
mov
pop
lahf
sbb
xchg
jmp
andl
cmpb
or
jl
adc
dec
and
or
add
jle
jmp
out
rcl
jecxz
out
xorl
mov
in
mov
dec
fsts
dec
push
jmp
xor
mov
mov
lods
into
lsl
jns
mov
scas
push
sbb
mov
popl
cmpsb
mov
cwtl
xchg
and
outsb
popa
pop
cmp
xchg
and
or
loope
dec
int
mov
popf
rcrb
push
jge
jae
fisttps
mov
shrb
stos
cmp
push
jae
cwtl
pop
in
sbb
inc
xchg
mov
pop
pusha
adc
mov
cmp
ret
pop
call
fcmovb
les
adc
jl
adc
jne
popf
repnz
sub
inc
jmp
negb
or
ret
dec
adc
xchg
scas
push
mov
stos
push
or
inc
or
xor
jne
popa
test
ret
cmc
mov
in
mov
adc
mov
sbb
movsl
mov
ja
popa
jae
mov
sbb
push
lods
cltd
mov
pop
jo
xchg
xor
or
push
in
xchg
mov
out
or
adc
push
rcl
sub
lods
ret
daa
mov
adc
sbb
out
cmpsb
ret
dec
sar
adc
jmp
sub
lods
mov
mov
outsb
mov
into
pushf
rclb
enter
imul
or
jg
xchg
enter
jl
mov
xor
lds
movsl
mov
push
test
stc
mov
jno
xor
insb
xor
jnp
notb
dec
ss
and
xor
aaa
sbb
add
and
test
add
mov
in
jns
scas
test
mov
fisttps
out
push
outsb
inc
jmp
and
shll
mov
add
mov
xchg
or
mov
sbb
mov
or
stos
push
and
and
jnp
sbb
fildll
sbb
movsb
and
add
inc
cmpb
and
sub
sahf
cld
arpl
jmp
mull
jae
cmc
test
xor
push
mov
imul
bound
fdivs
xchg
cmpsl
lods
adc
psllq
imul
in
dec
jl
xchg
mov
sbb
push
cltd
push
jne
and
dec
popa
mov
cwtl
push
xor
inc
xor
lret
add
inc
movsl
pop
out
mov
mov
test
mov
pop
pushf
test
dec
int3
aad
lret
gs
add
cs
filds
sub
sbb
mov
addb
nop
loop
adc
lock
jns
adc
notl
lds
sbb
out
jmp
nop
ja
or
fwait
jno
mov
cmpsl
cmp
push
inc
xchg
and
sub
sarl
ror
cs
mov
rcll
data16
iret
or
xor
sahf
jecxz
clc
push
jbe
movsb
fdivl
pop
pop
sbb
jo
jmp
dec
jne
in
dec
into
xor
popa
push
fadds
or
imull
mov
popl
mov
pop
or
mov
movsb
push
das
leave
mov
fisubs
add
sar
mov
cmp
imul
orl
mov
cmp
pop
int3
dec
notb
ds
imul
dec
push
add
mov
jp
sarl
add
and
cmp
call
sub
cmpsb
sbb
sub
hlt
jge
int
inc
aas
cmpsb
cli
iret
xchg
pop
mov
and
sahf
test
dec
jp
mov
mov
push
mov
sub
adc
int3
mov
add
in
xchg
in
inc
lods
xchg
jnp
sarl
test
andb
daa
jbe
lods
loope
ja
mov
in
or
cld
pop
jl
out
xchg
pop
orl
pusha
add
xchg
fucompp
les
js
push
cwtl
out
mov
push
ljmp
ja
mov
fidivrl
fistpl
lods
mov
fisubl
cmp
xor
sub
lcall
jmp
andb
jbe
and
xor
popf
xor
mov
insb
mov
test
cs
jge
or
cmp
inc
pop
xorb
adc
or
mov
out
jl
into
insl
inc
jge
jg
fwait
cs
loopne
sub
or
ja,pn
cmp
mov
das
xor
sarl
and
idivb
inc
push
inc
mov
ret
repz
test
add
cmpsl
shrb
in
data16
insb
pop
fwait
lods
xorl
lods
sarb
daa
dec
jae
cmp
icebp
or
sbb
push
mov
inc
aaa
adc
sub
cmp
fwait
push
ficomps
stos
leave
outsl
call
inc
imul
jmp
test
pop
and
iret
pmuludq
push
popa
mov
test
mov
fsubrs
inc
jl
xchg
scas
movsl
xchg
popa
dec
mov
mov
rorb
pop
pop
mov
call
icebp
ss
adc
inc
inc
jae
clc
inc
int3
sub
dec
dec
mov
divb
cmovl
sbb
leave
push
inc
pop
mov
inc
push
and
test
cmp
cmp
xor
imul
lret
stc
cmp
out
fldl
pop
xor
and
out
pop
cs
in
push
jge
loope
sub
inc
push
sbb
inc
sub
lcall
push
cmpsl
xor
or
cs
jns
aad
ds
cltd
aaa
nop
push
lret
cmp
push
push
cli
inc
out
out
std
inc
dec
jb
cmp
js
jo
loopne
mov
xchg
push
mov
or
xchg
jecxz
inc
inc
mov
dec
lea
cmp
mov
jp
jmp
add
bound
arpl
xorl
call
jbe
cmp
push
repz
jns
hlt
fmull
rcll
jno
mov
and
and
or
xchg
push
jns
mov
fcoms
push
popf
dec
jl
repz
jnp
jns
jp
xchg
fucomip
sub
dec
pop
push
bound
movsb
aad
fstpl
lahf
in
ret
loope
xchg
les
sub
mov
push
mov
int3
hlt
lea
mov
loopne
cmc
mov
in
mov
inc
jl
insl
xchg
sti
push
xchg
and
insb
sti
in
mov
adc
leave
aas
fldt
rcrl
sti
orl
insl
jb
mov
dec
cmp
jge
fwait
notb
dec
dec
in
mov
xor
jne
ljmp
pop
imul
test
sbb
xorl
push
mov
pause
js
lret
fs
xchg
sub
pop
test
cld
fmull
lret
xchg
mov
popa
dec
pop
scas
and
mov
lcall
pusha
decl
mov
cmp
mov
push
push
xchg
jb
pop
inc
je
lahf
push
in
jl
jle
xor
dec
cmpsb
inc
in
add
mov
stos
int
lcall
leave
movsl
xchg
out
leave
inc
lods
push
scas
push
daa
mov
in
jns
adc
ret
dec
test
in
je
add
dec
jmp
fbstp
jae
iret
shlb
mov
pop
inc
frstor
cmp
in
icebp
fsubrs
dec
lods
shlb
lret
sub
adc
mov
xchg
jg
adc
les
pop
int
lds
test
shl
sbb
test
enter
pop
add
pop
aam
pop
rorb
bound
inc
cmp
insl
popf
dec
xor
xor
rep
ljmp
cmc
out
xor
rclb
pop
or
jbe
mov
iret
mov
push
mov
mov
inc
add
lea
fdivl
push
mov
dec
add
jmp
movsb
in
insb
inc
push
cmp
in
or
sub
adc
inc
sbb
int
xchg
add
mov
shlb
dec
dec
mov
fildll
mov
cwtl
push
mov
push
xchg
leave
in
mov
mov
push
scas
mov
aas
mov
pop
jl
cmp
sahf
out
stos
push
mov
in
xor
ja
or
in
jne
dec
movsb
xchg
mov
repz
mov
out
js
inc
pop
enter
push
adc
jl
nop
nop
ds
decb
fldt
sub
cmp
mov
inc
ret
ficoms
das
mov
fcomps
xchg
dec
xlat
mov
push
ret
in
pop
je
push
xor
ficoms
or
push
std
inc
adc
xor
shll
xchg
sub
sarb
or
jns
xchg
out
ret
pop
lret
gs
test
mov
push
and
dec
dec
bound
mov
inc
mulb
lea
aad
or
stos
jge
lods
dec
cmp
pop
push
jns
dec
mov
cmp
imul
mov
cs
inc
rcl
rcl
mov
or
imul
adc
or
fucomi
or
data16
inc
push
incl
cmpsl
and
cmp
scas
scas
fistpl
ret
subl
push
cmp
stos
stc
inc
nop
addl
fsubrs
sub
stc
mov
adc
cmp
mov
xchg
sub
jo
dec
dec
stos
in
jmp
push
mov
mov
pop
into
pop
out
xchg
sbbl
sub
pop
push
pusha
add
add
insb
jg
or
pop
addr16
lods
sbb
lea
pop
jne
jne
xor
push
push
xor
and
dec
jb
xchg
jle
push
jg
push
inc
popa
mov
inc
mov
xchg
aad
scas
pop
fdivp
jnp
and
add
test
insb
js
movsl
sub
lods
insb
push
push
test
popa
and
mov
sub
stc
or
mov
lods
insl
frstpm(287
sarb
push
jmp
push
scas
inc
dec
mov
sti
push
jne
aas
push
xor
movsb
pop
mov
jae
clc
movsl
fists
daa
mov
out
int3
adc
cmpsl
mov
dec
inc
adc
jno
jne
jle
xchg
cmp
clc
repnz
lods
dec
jl
pop
psadbw
jge
dec
fs
scas
mov
add
mov
das
lahf
or
mov
adc
inc
pcmpgtb
jb
dec
scas
fiadds
in
mov
fcompl
adc
push
pop
ds
pop
sub
lret
fcompp
aaa
xchg
fnsave
sbb
fstps
aas
lock
not
push
pop
stc
aas
xor
xchg
xchg
insl
iret
inc
dec
jns
test
gs
push
cmpsl
and
fbstp
or
sbb
shl
push
mov
mov
pop
imul
pop
lds
dec
mov
xchg
mov
cmp
mov
jle
rol
in
jno
pop
adc
pusha
stc
fs
dec
adc
mov
pushf
cmp
mov
test
into
lfs
pop
shrl
ja
scas
dec
dec
or
fisubl
jnp
andb
mov
sub
mov
in
icebp
xor
dec
push
orl
mov
dec
mov
daa
adc
fildll
cld
push
out
daa
sbb
mov
sbb
bound
xchg
movsl
fistpll
push
mov
jp
cmp
mov
bound
pop
mov
jmp
or
mov
int3
mov
jge
mov
mov
jno
mov
xchg
shll
push
mov
push
mov
mov
arpl
adcb
add
lods
adc
stc
pushf
movsb
and
fidivl
dec
add
dec
cmpsl
rcrb
jmp
jb
jns
mov
add
testb
shll
fldl
add
syscall
cwtl
int3
jg
and
jge
icebp
and
add
scas
test
sbb
orl
jnp
int3
cwtl
icebp
mov
xor
loop
push
dec
xchg
cmp
mov
mov
add
xchg
shll
jae
sbb
rolb
inc
enter
mov
and
push
mov
adc
outsl
imul
mov
mov
je
mov
aam
bound
sub
add
out
pshufw
mov
divl
iret
sub
jne
mov
repz
jae
insl
call
popf
and
push
xchg
shlb
jnp
pop
cmpsl
inc
jp
loope
adc
xor
pop
repnz
adc
mov
xchg
ret
push
popa
mov
lea
fbld
cmp
movsb
and
in
stos
push
lea
shr
je
inc
push
pop
lds
call
gs
or
hlt
push
or
add
push
insl
or
mov
sti
xor
mov
jns
fidivs
daa
sbb
scas
arpl
int3
and
jbe
push
xor
push
mov
push
dec
xchg
test
mov
mov
int
mov
out
cmp
ds
arpl
xchg
jge
lcall
aad
cmpsl
insb
movsb
cmp
xlat
xchg
mov
xor
pushf
test
push
push
pop
mov
dec
cltd
adc
mov
dec
and
cmp
inc
jb
sub
cmpsb
sub
and
inc
fwait
cmc
inc
push
xlat
lea
and
popf
nop
dec
sbb
rorb
push
cmp
push
or
shl
mov
lahf
aam
inc
mov
cmp
adc
cmp
scas
stos
aad
sbb
incb
jno
cs
sbb
jbe
movsb
js
ss
dec
ja
adc
mov
rolb
icebp
push
rorb
dec
fisubs
xchg
jbe
mov
call
lea
inc
fs
cmpb
cwtl
mov
inc
adc
pop
fwait
lea
jl
jb
out
and
enter
outsb
push
jmp
add
xor
and
test
decl
loop
in
mov
sbb
inc
aam
out
jle
lods
ret
add
cmp
mov
shlb
xor
mov
nop
es
lock
into
in
inc
lcall
jecxz
daa
cld
lea
icebp
or
lcall
pop
arpl
dec
mov
fistpll
mov
cmc
mulb
cmp
mov
add
push
push
loope
ficoml
add
or
or
jbe
daa
mov
pop
cld
xor
add
cmp
fs
and
jb
jg
pop
adc
jge
dec
clc
pop
mov
or
shll
pop
dec
jp
fwait
je
lret
mov
sub
mov
call
push
mov
or
in
dec
jb
sbb
int3
sub
sub
push
cmc
sbb
outsb
andl
stc
cmpsb
jns
adc
jmp
subb
mov
push
sub
cmp
dec
sti
fstpl
add
sub
dec
jns
cmpsl
shlb
xchg
or
mov
sbb
ljmp
xor
and
pushf
pop
or
jb
mov
mov
enter
cmp
fldl
xchg
mov
scas
push
add
adc
inc
ljmp
mov
subl
push
inc
sub
sub
pop
or
jp
xor
mov
pop
pop
inc
push
or
pop
sub
scas
lock
xchg
and
add
mov
es
push
pop
cmp
sbb
xchg
mov
pop
push
mov
lret
lcall
fisubs
or
in
and
mov
fnstenv
popf
cmpsb
int
mov
testl
cmp
xchg
lea
sbb
inc
push
stos
movsl
andb
jo
push
xor
faddl
mov
jp
out
adc
push
sub
xor
push
fiadds
xor
dec
es
aam
hlt
sarl
fiadds
inc
punpckhwd
movsl
nop
lods
out
insl
cmp
push
jns
push
cmc
cmp
pop
mov
div
jns
add
dec
aad
popf
data16
jecxz
add
or
ret
out
pop
lahf
aas
jo
pop
mov
push
mov
addr16
jg
scas
pop
mov
sub
xchg
mov
movsl
andb
dec
jns
or
push
sahf
mov
add
push
sbb
in
and
bound
mov
mov
arpl
imull
icebp
fcmove
subl
push
mov
clc
xchg
fs
push
popf
pop
stos
adc
adc
nop
ljmp
loopne
jle
movsl
push
dec
mov
sub
pushf
bound
outsb
fiadds
dec
ret
repz
xor
xchg
or
mov
xchg
cmpsl
mov
push
or
std
pop
jnp
incl
sbb
cli
call
aas
xchg
cmp
inc
inc
and
jmp
adc
mov
sub
xchg
popf
jbe
or
scas
xchg
lcall
addr16
test
gs
pop
mov
lret
dec
jno
fldl
sbb
cmp
jmp
xor
sti
cwtl
push
lret
and
roll
xor
repz
notb
sbb
push
cmp
mov
sbbb
push
adc
mov
cli
add
mov
add
mov
repz
fs
sbbb
lds
push
mov
or
fs
std
cmpsl
ljmp
cmpsb
cwtl
andl
or
jb
xchg
out
dec
icebp
lods
repnz
mov
addr16
xor
mov
in
rcl
xor
sarl
out
or
cmc
stc
shll
jg
pop
sahf
mov
mov
jp,pn
push
lahf
pop
and
pop
xchg
xchg
cld
icebp
repz
push
mov
or
movsl
nop
loop
les
insb
xor
sbb
repnz
ds
scas
mov
sub
mov
pop
add
loope
loope
out
std
or
addr16
lock
nop
pop
cli
lret
repnz
dec
cmp
iret
pop
enter
sub
adc
mov
or
xchg
movsb
mov
mov
mov
scas
fwait
lock
sbb
scas
jecxz
ja
inc
loope
ljmp
sub
mov
inc
adc
arpl
mov
cmp
stc
xor
insl
cmp
fsubl
ret
push
inc
call
xchg
pop
inc
and
fisubl
sbb
ss
cmp
dec
pusha
test
pop
xor
stc
ljmp
in
out
push
xor
mov
int
std
mov
ret
inc
jl
insl
and
dec
shll
push
dec
mov
mov
stc
hlt
rcrb
mov
inc
jae
jl
lret
ss
sub
mov
push
repz
ja
lods
in
popa
cmpsb
cmpsb
pop
fiadds
seta
bound
sbb
or
and
xor
icebp
cmp
pushf
xchg
pop
or
push
adc
in
movsb
mov
std
push
imul
add
scas
xchg
xchg
xlat
repnz
jnp
dec
push
mov
adc
push
pop
pushf
shr
es
mov
ss
js
nop
mov
repnz
xchg
sbb
fadd
fcompl
sub
enter
sarl
xor
in
int
lods
sarl
cmp
dec
mov
int
addr16
push
sbb
ret
ds
push
loope
push
adc
daa
xor
call
fcomip
inc
adc
pop
pop
loopne
loopne
pop
insb
mov
insl
push
xchg
stc
xor
lcall
scas
lea
ja
ficoml
popa
imul
jp
daa
iret
fstp
ds
fmulp
das
hlt
sub
jle
push
and
add
jb
rorl
mov
sub
and
dec
jl
popf
lds
mov
adc
les
into
fildl
jnp
lds
in
add
xor
jns
adc
testb
loopne
lds
ret
push
xor
xor
loop
push
pusha
mov
scas
es
pop
int3
adc
hlt
pop
sarl
pop
xlat
pop
xor
mov
xor
and
das
sbb
fs
mov
push
es
or
dec
iret
push
mov
fnstcw
mov
lods
ret
mov
fwait
xchg
adc
xchg
lahf
ret
add
jo
rcrb
pop
andb
orl
lods
es
icebp
daa
mov
lds
int3
pop
or
jmp
pop
popa
and
loop
add
sub
push
mov
pusha
mov
push
cmp
mov
stos
pop
pop
sub
mov
jbe
xchg
and
cmc
inc
lea
sbb
lods
jg
inc
adc
inc
mov
into
xor
divb
sub
and
sbb
mov
add
push
hlt
std
lret
cmpsl
mov
dec
or
xchg
or
adc
icebp
fwait
adc
roll
sahf
push
clc
mov
add
mov
mov
push
imul
clc
adc
scas
ja
pop
xor
scas
jns
add
and
in
js
int
cmp
xlat
loop
outsl
jnp
cld
nop
adc
in
push
jle
dec
mov
repnz
subl
xor
sahf
or
adc
mov
in
pop
adc
aas
cmpsl
mov
pop
fwait
lahf
loope
aam
adc
cwtl
jae
pop
into
fldt
imul
jae
lcall
in
je
icebp
pushf
das
and
mov
popf
pop
mov
sbb
xchg
mov
bound
or
loopne
scas
mov
mov
jl
sahf
in
outsl
fcomps
idivb
cmpsl
shld
mov
popf
outsl
xchg
mov
int
lret
xchg
or
imul
sti
dec
pop
adc
add
in
or
pop
jmp
pop
cli
adc
dec
pop
insl
idivb
rcrl
out
sub
xor
es
mov
jmp
out
mov
dec
jge
ljmp
lods
jb
push
mov
loope
add
scas
add
inc
in
mov
sbb
push
pop
push
mov
jg
pop
xor
ja
or
xchg
pop
adc
pop
hlt
pop
push
cmpb
mov
inc
mov
aam
jge
or
dec
fwait
xlat
or
add
repnz
pop
loopne
lahf
mov
fwait
das
push
add
lret
mov
push
cwtl
inc
mov
movsl
xchg
and
pop
popa
iret
xchg
or
xchg
data16
and
icebp
inc
iret
xchg
xor
cmp
test
sbb
outsl
push
sti
pop
lock
or
xor
imul
mov
mov
vpcomw
inc
enter
gs
je
es
paddd
stc
bound
pop
dec
dec
addb
test
loop
xor
inc
mov
dec
sbb
fidivrl
sbb
inc
or
dec
cs
xor
inc
fwait
aaa
mov
lds
jae
jge
adc
mov
mov
mov
into
jbe
mov
cmp
jmp
dec
sbb
dec
mov
ret
dec
jle
popf
or
dec
stos
mov
int3
add
dec
pop
pop
lods
mov
filds
cmp
fsubrs
pop
jno
pop
push
test
sbb
movsl
pushf
popa
mov
and
inc
test
cmp
mov
ror
pop
adc
adc
rolb
dec
int3
sub
inc
mov
outsl
loope
inc
mov
div
das
sbb
or
fstps
jbe
push
inc
inc
inc
sahf
inc
faddp
xor
mov
inc
test
test
dec
add
jno
mov
pusha
mov
xchg
pop
roll
sbb
testb
sbb
stos
jmp
hlt
xchg
fwait
jg
test
hlt
movsl
or
sti
add
xor
clc
pop
sahf
xor
cmc
mov
push
cmp
jae
mov
jmp
adc
in
pop
in
pshufw
out
push
lcall
sar
in
rolb
jmp
cmpb
daa
in
dec
mov
outsb
test
lret
push
ret
flds
sbb
outsb
mov
scas
mov
and
out
or
push
ja
mov
out
or
lret
cmp
popf
nop
sbb
int3
sub
js
pusha
push
push
hlt
cmp
or
aad
repz
adc
xor
xor
pop
adc
ljmp
std
push
in
bound
and
sub
pop
lods
mov
add
cmc
inc
xchg
test
cltd
test
stos
fidivl
lahf
into
out
cmp
xor
cwtl
pushf
loopne
pop
xchg
lods
outsb
or
cwtl
jecxz
push
stc
jg
shrl
stos
outsl
sarb
mov
test
ud1
or
mov
movsl
push
or
fwait
sbb
inc
nop
add
mov
fisubrs
xchg
mov
popf
push
push
test
pop
int
sub
sbb
mov
pop
js
push
xchg
xchg
pusha
inc
lahf
push
pop
cs
push
movsb
sub
mov
xchg
xor
xor
stc
sub
mov
push
inc
push
ret
test
pop
dec
stos
mov
push
lods
push
mov
cmp
mov
lcall
xor
jg
mov
outsl
mov
sub
or
jns
cmp
adcl
cmp
int3
sti
ja
sbb
mov
ret
cmpb
js
jp
addr16
dec
lcall
nop
ret
xchg
adc
add
cmpxchg8b
sbb
gs
sub
sar
in
cld
push
insl
rorb
mov
cmc
ret
mov
cmp
jnp
xor
arpl
setle
imulb
icebp
lods
pop
cmp
inc
cmp
repz
mov
pop
xchg
inc
gs
insl
inc
stos
cmp
repz
incl
jb
push
xchg
mov
jp
fcmovnu
sub
lret
pop
jno
jno
push
jl
cmpsb
mov
subl
sbb
add
stc
int
mov
push
cmp
or
mov
pmulhuw
and
pop
mov
mov
xor
and
adc
or
movsb
cmp
push
dec
inc
lods
mov
or
xchg
xchg
ficoms
fxtract
out
cwtl
pusha
adc
fucomi
push
pop
adc
inc
push
pop
mov
insl
dec
stos
sub
test
fiadds
stc
aad
cmp
mov
orl
call
roll
loopne
cmp
mov
pop
mov
push
fmull
mov
imul
inc
std
in
adc
imul
icebp
push
adc
fdivr
sub
fcomip
jnp
inc
sbb
mov
shr
mov
sub
jmp
ds
add
sub
lahf
mov
fistpl
fiadds
call
cmp
sbb
adc
imul
sub
pop
jecxz
xchg
incl
loopne
fld
xor
inc
xor
and
leave
adc
shlb
out
pop
inc
mov
leave
popf
fsubrs
push
fidivrl
sub
test
stos
adc
fistpll
mov
aaa
jmp
out
xchg
sub
pop
test
repz
out
mull
xchg
lret
fldenv
les
push
das
stc
addr16
push
xor
add
pushf
addw
dec
cmp
jbe
cltd
faddl
jp
add
das
fidivs
in
pop
addr16
arpl
insl
push
jne
sub
lret
cmp
cmp
pop
push
push
mov
or
inc
sub
clc
test
fsts
push
add
mov
push
mov
popa
jg
inc
scas
lea
in
pop
ja
jnp
dec
sub
arpl
nop
inc
test
and
fdivl
xchg
les
bsr
roll
bound
fadd
divl
les
mov
adc
leave
ss
test
inc
xor
xlat
insl
pop
jg
inc
outsl
shlb
inc
cmp
jg
cmp
pop
cmp
sbb
jg
stos
push
mov
ja
popa
sti
aas
sub
sbbb
adc
ja
mov
jmp
inc
mov
and
stc
fwait
mov
dec
stc
or
lcall
lret
cltd
inc
inc
sbbl
cli
add
mov
mov
mov
dec
out
ja
adc
fwait
sbb
aas
loop
imulb
jno
cmp
jmp
addr16
repz
negl
popa
out
iret
inc
and
fcoms
push
mov
xchg
sbb
jge
cmpsl
adc
pop
push
cmp
aaa
ljmp
pop
leave
inc
mov
aad
movsb
stc
nop
out
add
fcoms
scas
loope
rcrb
cmp
cmp
mov
aad
sub
mov
nop
dec
imul
add
mov
pop
lret
jb
pushf
scas
loopne
out
jnp
testl
fldcw
jb
lahf
mov
or
ret
dec
xchg
and
cmpsb
stos
xor
sub
sbb
cmp
or
adc
sbb
and
inc
xchg
and
out
xchg
dec
mov
repnz
pop
xchg
enter
call
inc
idivl
shlb
mov
jnp
repz
pop
outsl
test
or
mov
pop
xlat
adc
jmp
loope
mov
push
pushf
pusha
lahf
inc
repnz
je
out
mov
dec
je
leave
hlt
mov
push
ret
gs
and
mov
fs
clc
jmp
out
adc
pop
bnd
in
jns
xchg
lock
aas
mov
push
inc
mov
push
inc
xchg
jbe
xor
xor
xchg
mov
lahf
xor
int
fstpt
sbb
iret
pop
push
scas
je
andl
scas
and
leave
cmpsb
push
repz
xchg
hlt
inc
aad
test
sbbb
inc
adc
out
or
stos
add
sbb
xchg
mov
dec
adc
sub
jb
mov
bound
pop
outsb
es
lret
fstps
lret
faddl
into
cs
and
into
fnstenv
shll
negl
pop
dec
pop
jbe
popf
dec
jl
adc
aas
inc
adc
in
js
lea
mov
pop
jbe
or
pusha
ljmp
fwait
push
mov
mov
xchg
lcall
xchg
mov
fwait
jnp
repz
and
xchg
aaa
mov
jno
jne
jmp
mov
cld
xlat
test
daa
cwtl
push
sahf
leave
push
jge
jle
cld
dec
mov
inc
lock
pop
insl
nop
dec
sbb
in
or
cmp
xor
arpl
xchg
mov
rol
adc
pop
mov
notb
scas
push
xchg
in
out
lret
push
dec
mov
jno
cmp
decl
jnp
pop
mov
daa
ja
movsl
sbb
rcll
xor
mov
stos
cmp
pop
jo
out
in
mov
dec
sub
std
lret
aaa
rol
test
faddl
sbb
sbb
mov
jae
mov
xchg
insb
outsl
pop
jmp
pushf
mov
sbb
imul
sbb
ds
push
jno
jge
imul
pop
orb
seto
cmp
adc
xchg
xor
call
lcall
stos
cltd
mov
push
adc
enter
arpl
mov
or
mov
adc
mov
or
lods
aam
add
push
sub
sub
ss
push
es
mov
out
addr16
aam
lret
addr16
clc
and
stos
jae
and
sub
inc
pop
add
lds
inc
and
sti
sbb
xchg
xor
or
pop
ja
push
fs
or
push
insl
mov
subl
sbb
rorb
adc
das
or
xor
in
pop
or
mov
std
inc
js
lcall
jnp
ret
mov
ljmp
adc
cltd
inc
stos
add
mov
dec
imul
repz
mul
adc
out
shlb
fwait
test
es
and
popf
test
ljmp
jno
cmpsl
dec
cmp
mov
stos
cmc
inc
les
enter
outsb
mov
push
addb
stc
ljmp
insl
pop
sub
pop
xor
cltd
and
int3
or
cltd
push
test
aaa
mov
push
cwtl
push
push
mov
and
pop
clc
fdivrs
mov
push
mov
adc
jmp
fldt
lea
push
stc
test
jnp
jb
cmp
inc
aam
dec
jmp
lods
ret
call
stos
mov
mov
add
jp
lds
push
jno
aas
out
mov
and
popa
pop
out
xor
xchg
xor
fisttpl
out
mov
hlt
idivb
jb
mov
in
add
sbb
and
jo
push
test
decl
jne
or
pop
dec
inc
add
faddl
cli
ret
lret
inc
loope
cli
mov
sub
out
push
orl
es
gs
cmp
push
iret
std
ficoml
push
add
adc
clc
and
cmp
jg
xor
out
sbb
adc
jge
jbe
loope
andl
jmp
into
jnp
push
mov
test
imul
inc
fists
mov
or
icebp
or
pusha
push
adc
arpl
in
sti
dec
sahf
call
enter
sbbb
mov
inc
std
pop
les
popf
sti
jp
or
int
out
push
and
rolb
popf
mov
or
sbb
ss
rorb
dec
cmp
jne
cmp
daa
imul
or
and
mov
imul
mov
loop
fistps
jnp
jae
jns
dec
sahf
add
test
mov
or
cld
out
jo
add
lcall
jo
mov
decl
cmpsl
lahf
ret
fbld
adc
dec
test
mov
in
adc
inc
cmp
out
insl
leave
pop
cmpsl
clc
cld
in
incl
aaa
sub
out
xorl
push
pop
adc
insl
jae
aaa
push
add
cmp
fwait
ss
mov
scas
xchg
mov
scas
adc
pop
mov
xchg
push
mov
lods
sub
xchg
hlt
dec
scas
adc
mov
stos
adc
imul
dec
mov
add
jo
lcall
ss
cwtl
scas
rol
cmp
popa
mov
std
push
xchg
dec
xchg
mov
lahf
sbb
iret
dec
inc
and
test
lcall
mov
sub
jg
imul
and
add
add
push
aad
negb
inc
int
add
jae
sub
loope
push
lea
enter
sbb
mov
mov
push
data16
inc
xchg
call
mov
pusha
or
cmp
int
ret
into
and
lds
in
push
scas
out
push
mov
add
and
xor
outsl
jge
nop
or
jno
test
xor
adc
mov
bound
fsts
lods
mov
loopne
mov
xor
jne
inc
into
pop
pop
stos
daa
in
or
jbe
insl
jl
popf
inc
pop
lock
cmp
bound
mov
push
imul
sbb
lods
xchg
jle
dec
sub
shrl
pop
jmp
pop
repnz
rolb
out
pop
pop
popf
and
cmp
xchg
in
push
out
jb
jnp
outsb
jg
inc
dec
push
or
xor
pop
shll
leave
fs
sub
xor
inc
xchg
pushf
mov
jne
in
mov
cltd
scas
mov
aaa
mov
loop
sbb
ret
insb
pusha
push
insl
mov
cmp
xor
in
add
pop
sti
jmp
sbb
push
dec
lods
cmp
dec
xor
fmuls
int3
adc
jnp
mov
mov
xchg
jge
insl
pop
mov
jge
sahf
and
mov
jb
sbb
call
fwait
mov
mov
sbb
and
jg
mov
out
sub
leave
out
jnp
scas
push
movsl
paddd
daa
xor
xchg
adc
xlat
faddp
imul
cmp
mov
mov
pop
fildll
push
pop
push
adc
lret
pop
lods
shl
sbb
imul
and
stc
push
cld
or
mov
mov
pop
jnp
loopne
ficomps
outsb
clc
cwtl
pop
add
cs
xchg
andb
clc
repnz
call
sahf
dec
mov
xor
lcall
into
negb
cltd
xor
pop
adc
aas
xchg
xchg
cmp
xor
lahf
repnz
or
jge
cmpsl
add
pop
adc
aam
rorb
sub
mov
ds
shll
and
mov
jp
jmp
inc
mov
shrb
in
dec
adc
clts
test
mov
in
xor
sbb
cwtl
mov
add
hlt
aam
inc
inc
xchg
cmp
fldln2
out
ds
and
pop
adc
ds
lcall
xchg
das
and
cmc
in
pop
hlt
jg
push
dec
mov
scas
pop
fwait
insb
push
pop
test
xor
enter
adc
cmp
fs
repz
sbb
adc
sub
arpl
lahf
cltd
cmp
mov
sti
frstor
fcompl
inc
push
lea
pop
movsb
fmull
stos
sbb
cs
pop
push
inc
int
gs
les
ljmp
pop
xor
aas
ja
adc
lods
jo
sahf
adc
lods
pop
inc
adc
sbb
pop
pop
mov
pop
stos
add
inc
in
cmpsb
repz
jbe
mov
iret
outsb
sub
lret
ds
xchg
pop
nop
mov
bound
fnstenv
cli
sbb
push
jle
out
call
iret
push
out
jne
cli
loopne
jae
and
popa
pop
or
aas
adc
mov
scas
out
and
movsl
sti
test
push
lret
sahf
les
dec
xor
insl
adc
mov
inc
dec
jbe
addl
jg
stos
xchg
jae
mov
mov
cmpl
add
hlt
adc
sbb
iret
dec
inc
dec
pop
ljmp
loope
movsl
add
lahf
cmp
icebp
dec
dec
clc
popa
enter
lea
sti
xor
popa
outsb
mov
add
clc
lock
dec
imul
mov
pop
cmp
daa
hlt
mov
dec
mov
adc
mov
sub
mov
lods
add
cmc
nop
dec
cli
jnp
lds
jp
push
bound
ret
push
enter
push
push
aam
sub
repnz
or
cmp
jae
mov
inc
cmp
out
cltd
scas
fidivs
ja
xor
adcl
add
lods
add
dec
pop
dec
xchg
sbb
movsl
xor
popf
xor
imull
xor
jecxz
ret
lret
dec
mov
int
fidivrs
stos
xchg
scas
shrl
or
adc
out
shlb
nop
pushf
mov
mov
fstps
mov
les
data16
icebp
lahf
add
dec
ret
cmpsl
sti
jl
in
cmp
mov
les
sar
ja
ret
pop
mov
mov
sbb
roll
stos
mov
leave
nop
cmpsl
sub
arpl
jmp
xchg
out
sti
and
lea
movsl
or
pop
mov
lds
out
mov
xchg
out
adc
xchg
xor
call
imul
mov
dec
or
andl
dec
cmc
out
movsb
pop
in
pop
pop
idivl
mov
stc
ds
fldenv
xor
xor
mov
fwait
push
mul
out
test
lock
xlat
mov
clc
fcmovu
lods
data16
pop
pop
imul
das
pop
in
ret
loopne
out
clc
andl
dec
lods
adc
jbe
mov
in
js
ss
push
add
negl
and
pop
mov
mov
jb
out
xchg
sub
out
sti
or
and
xchg
test
inc
push
add
icebp
mov
xchg
insb
lock
xchg
dec
int
iret
pop
mov
repnz
jp
push
or
mov
xchg
sti
push
call
adc
dec
jge
jb
pop
imul
xchg
lcall
jecxz
movsb
gs
enter
jns
inc
mov
aas
jno
lret
mov
dec
mov
jp
add
dec
data16
loop
adc
frstor
fimull
jb
and
loopne
dec
loope
jno
cmc
mov
mov
cmp
or
push
lea
dec
pxor
shrl
adc
push
push
popa
ja
mov
push
adc
in
xor
mov
insl
loopne
dec
add
jecxz
mov
movsb
in
stos
or
in
ljmp
ljmp
and
jge
pop
pusha
pop
mov
mov
push
loope
lret
pop
push
xchg
and
jecxz
loopne
notb
js
jb
aaa
fsts
sbb
sbb
ret
dec
xchg
xor
aas
dec
and
push
pop
dec
lods
mov
lret
pop
or
inc
daa
clc
xchg
inc
pop
insl
cmp
hlt
shrl
add
popl
dec
cltd
dec
xor
pop
xchg
push
fisttpl
dec
je
xchg
pop
inc
outsl
sbb
mov
sub
jo
and
popf
mov
out
call
sbb
mov
mov
ret
imul
cltd
mov
mov
addr16
addr16
aas
popa
shll
mov
inc
adc
insl
cmp
xor
popf
cmp
fnstsw
enter
dec
rorb
aam
pushf
mov
sbb
xor
movsb
orl
adc
jmp
lds
xchg
lret
jnp
repnz
mov
push
fnstcw
lcall
inc
test
cmp
lahf
pop
jno
xchg
mov
es
rcrb
xchg
mov
mov
mov
dec
test
imul
test
inc
cmp
xchg
mov
dec
sub
add
into
add
jo
cmp
daa
jnp
dec
mov
xchg
dec
xchg
pusha
mov
insb
lret
daa
mov
outsl
mov
stc
ljmp
or
ret
dec
dec
adc
out
scas
xor
iret
sarl
shlb
jne
xchg
xlat
popa
jmp
pop
cmp
pop
cmpsb
inc
push
mov
pop
cmpsl
insl
icebp
pop
pop
lea
mov
mov
out
add
sbb
mov
jne
cli
xlat
popf
xchg
sub
and
movsl
lcall
and
dec
lea
push
push
test
fisubrs
pop
pop
lahf
daa
cmp
fistpll
inc
jp
iret
add
aaa
or
xchg
mov
jbe
adc
test
aas
mov
mov
push
sbb
fidivl
pop
pop
cs
adc
jge
xor
pop
fdivp
repnz
lcall
and
sbb
mov
pop
addb
addb
out
aaa
adc
pushl
sbb
jl
sub
mov
test
lret
out
xor
push
cmp
outsl
call
imul
outsl
push
sbb
imul
imul
add
pop
movsl
push
jmp
mov
mov
mov
cmp
dec
out
inc
out
fimull
lcall
xchg
pushf
add
adc
roll
push
mov
push
inc
mov
adcb
std
int
lods
sub
mov
loope
dec
insb
push
js
jge
xchg
popa
dec
xchg
out
lds
jecxz
mov
lahf
call
mov
int3
andb
lds
sub
sub
fcmovb
jbe
mulb
push
xor
or
iret
test
arpl
pop
inc
jns
xchg
mov
test
jb
js
sbb
ds
push
stos
popf
das
inc
aas
xchg
test
jb
add
sub
lods
hlt
divb
inc
into
xchg
mov
fbld
xor
outsl
lret
out
jne
int
cmp
fnstsw
push
lods
sub
and
cli
xor
push
addr16
add
ret
pushl
mov
xlat
gs
xchg
jge
jne
jecxz
jle
out
or
outsl
push
rcr
insl
or
cmp
into
mov
mov
pop
pop
pop
lea
outsb
mov
outsb
js
notl
push
jl
and
scas
pushf
sbb
int
fldl
inc
cmp
popf
aad
test
and
inc
jp
fsubs
jge
dec
adc
out
add
jmp
aas
test
mov
xor
pop
popf
cmp
addr16
xchg
sbb
mov
jp
mov
sbb
lds
rorb
adc
push
inc
ds
push
mov
pushf
xor
jg
push
popa
mov
cmpsl
mov
cmp
cmpsl
pop
cmc
popa
and
mov
ret
cwtl
lahf
xor
or
ja
jmp
or
hlt
rol
enter
sbb
cwtl
mov
mov
loope
je
push
jle
pop
lea
push
arpl
mov
xchg
pop
push
outsl
sbb
fstpt
es
lods
test
push
rclb
jl
enter
call
in
and
dec
pop
add
in
xlat
xchg
cmp
repnz
adc
sub
mov
fs
aad
and
mov
es
stos
and
sti
cltd
mov
stos
xchg
or
mov
dec
call
je
inc
cld
or
les
negb
cltd
add
ret
add
sub
dec
repnz
or
sub
mov
inc
pop
dec
popf
mov
sbb
cmp
mov
hlt
std
or
lods
sahf
jle
mov
lret
test
addb
loop
push
cli
cmp
mov
stos
je
pushf
out
xor
and
mov
aaa
cmp
out
pop
cmpsl
add
xchg
push
int3
push
dec
movb
dec
or
dec
shl
pop
push
and
xchg
mov
jb
push
inc
inc
popl
mov
mov
scas
xor
mov
fs
addb
mov
xor
cmp
or
or
pop
mov
add
lcall
or
add
aas
lea
ss
leave
dec
sbb
xchg
iret
push
shlb
jae
sbb
ds
popa
pop
cmpsl
mov
test
dec
shr
bound
inc
or
into
enter
sub
push
and
or
xchg
roll
jne
sbb
xchg
fidivl
ljmp
mov
dec
ljmp
je
adc
fwait
dec
jle
cmp
std
dec
in
mov
mov
xlat
push
pop
aam
xor
xchg
mov
test
cmp
cmp
jecxz
repz
add
lock
ss
subb
lahf
add
insl
popa
and
fildl
shll
fistpll
xchg
push
jge
movsl
add
pop
add
bnd
push
cmp
test
dec
jns
mov
jp
push
aad
fists
xor
in
in
jnp
sbb
into
jecxz
dec
gs
cmp
add
or
mov
sub
pop
ret
sahf
jg
out
jl
add
call
add
inc
lcall
adc
xlat
push
mov
ficoml
fs
dec
shll
sub
push
mov
xor
jb
and
test
mov
jecxz
add
adc
pop
mov
in
ds
ds
push
mov
in
xchg
xor
cli
ds
stc
jae
fimuls
mov
and
es
aam
iret
mov
adc
or
lcall
add
ljmp
loopne
or
call
insb
mov
loop
mov
rcll
shlb
rolb
mov
mov
and
cmp
or
out
rcll
pop
xlat
mov
mov
inc
sahf
test
test
pop
mov
cmp
mov
push
fadds
pop
dec
sub
dec
jecxz
or
dec
test
mov
sti
mov
repz
movsl
xchg
inc
pusha
add
jge
xor
out
adc
sbb
movsb
mov
lds
rcr
fucomi
xor
jge
jb
adc
pop
sub
mov
imul
and
rcl
jmp
pop
sub
adc
inc
outsl
fcmovnbe
pop
popf
stos
les
xor
push
pusha
mov
jns
nop
lods
xchg
test
gs
adc
xchg
mov
or
loope
jnp,pt
mov
test
mov
popa
mov
rorl
mov
lret
dec
leave
pop
push
enter
aad
jne
lea
mov
jbe
mov
and
pop
call
sbb
cmp
fwait
push
repnz
jae
mov
aad
sub
add
lods
rol
insl
xchg
popa
aad
ficompl
push
and
inc
shll
fbld
into
inc
jns
jne
pop
subb
push
cltd
lcall
call
test
pop
cmp
icebp
and
sub
pop
dec
mov
dec
scas
dec
imul
sar
fistl
xor
adc
aaa
mov
and
inc
inc
jae
js
ret
lds
push
lret
shll
or
cmc
cli
shlb
sbb
aam
in
movsb
or
or
and
movsb
loope
adc
shll
mov
and
cmp
and
dec
push
repz
add
jns
leave
dec
mov
push
mov
push
imul
xor
fnstsw
pushf
test
push
adc
leave
jb
test
mov
in
mov
and
mov
es
inc
mov
repnz
jp
adc
dec
js
push
shll
lret
outsb
adc
daa
ds
jno
add
xorl
popf
out
mov
scas
pop
push
movsl
in
jge
fnstcw
fldl
mov
mov
aaa
push
push
loop
in
cmp
imul
push
xchg
xor
and
fucompp
popf
shll
fmul
mov
inc
es
jae
push
lea
fucomip
lock
call
add
orl
sbb
mov
jns
test
inc
push
jnp
push
lret
jo
sti
out
jnp
and
es
mov
div
fstpl
loopne
iret
out
jle
arpl
dec
mov
lret
and
sub
lcall
pop
ja
and
scas
cmp
mov
data16
rorl
mov
or
cmpl
adc
dec
leave
gs
pop
mov
rolb
push
inc
daa
jl
push
stos
cmp
mov
js
xchg
mov
into
cli
mov
jecxz
fiaddl
mov
mov
push
dec
loope
inc
scas
jnp
je
mov
loope
pop
inc
dec
cmc
sub
iret
aad
sbb
sbb
cwtl
push
cmp
bnd
push
push
dec
inc
cmpsb
js
out
xchg
mov
dec
and
lret
cmp
out
jmp
test
jbe
stos
mov
stos
lea
mov
in
lods
daa
adc
loop
adc
repnz
sbb
xchg
push
push
jle
les
add
fcmovbe
push
idivl
jns
rcll
sbb
mov
sbb
ss
jae
or
pop
mov
sahf
sti
test
add
int
mov
pop
mov
and
pop
xchg
ret
mov
in
ss
jle
jmp
out
sbb
dec
shr
adc
and
hlt
rorb
dec
mov
cmp
pop
add
scas
pop
and
js
mov
lret
pop
mov
int3
repz
adcb
pop
lods
mov
popa
out
fxch
mov
cltd
scas
fidivrl
fwait
mov
dec
out
jns
das
xchg
popaw
cmp
aas
jbe
mov
push
fistpl
cmpl
shlb
rol
insb
ss
addb
add
ds
imul
pop
inc
es
mov
jle
sbb
mov
pop
fildl
outsl
mov
mov
rcll
inc
out
mov
cmp
lods
xchg
add
in
sbb
outsl
mov
xor
rorb
xchg
xchg
mov
pusha
fidivl
jmp
test
lock
call
sti
mov
out
cmp
push
es
cld
mov
jl
jnp
mov
push
cs
mov
daa
shrb
scas
insb
lahf
addl
loopne
lods
and
mov
pop
sub
aad
testb
movsl
or
sub
push
inc
roll
or
stos
add
cltd
mov
inc
or
cmp
in
loopne
pop
std
jle
and
aaa
rorl
push
aas
sub
out
jae
dec
paddb
loopne
mov
aaa
xchg
dec
push
icebp
fdivrs
push
inc
shr
mov
in
outsb
aam
push
mov
scas
jle
nop
or
sub
cli
sub
xor
cmc
dec
jge
mov
sbbb
sbb
leave
add
push
jo
addr16
sub
sub
push
xchg
js
jo
dec
mov
fimull
jns
inc
dec
pop
xchg
pop
xchg
mov
dec
or
js
inc
dec
out
movsb
pop
stc
adc
jno
aad
push
xchg
dec
pop
pop
xlat
imull
mov
mov
nop
fstps
or
jo
addr16
sbb
leave
test
fimuls
inc
in
pop
mov
cs
fsubs
lods
xchg
sbb
mov
ss
push
out
pop
daa
sub
xchg
and
clc
jo
push
imul
inc
loopne
les
sub
lea
cld
mov
or
xchg
xchg
mov
mov
dec
js
pop
sub
in
mov
cmp
fs
nop
sar
pop
int
adc
jmp
stos
push
sbb
sbb
cmp
add
jns
cltd
push
mov
inc
imul
stos
mov
rolb
and
sub
fadd
add
jb
aad
sub
das
rclb
lea
stos
xor
fsts
or
fldcw
push
cmp
orb
cs
int
jecxz
dec
jbe
cmp
cmpsw
repnz
mov
pop
push
or
xor
inc
mov
cmc
fisubs
ljmp
inc
ret
sahf
aam
stc
xor
xchg
mov
xchg
fistpl
push
pushf
js
sbb
cmpb
adc
and
call
je
mov
inc
unpcklps
mov
fistl
into
scas
data16
xchg
arpl
jbe
ljmp
jle
push
xchg
loop
mov
repz
jae
cmpsb
add
cmp
fwait
aaa
or
add
jl
sub
shrb
push
sub
sub
push
fsubs
pop
es
cmc
out
cmp
inc
mov
xor
pop
inc
cltd
push
xlat
cmp
stos
jmp
sbb
lahf
inc
push
gs
adc
iret
pop
add
mov
mov
cli
cmpsb
movsl
mov
rcll
repz
and
sub
pop
jecxz
lock
cs
sbb
cs
fs
lods
add
imul
lret
mov
push
push
jo
ret
mov
and
lcall
push
shll
xchg
inc
and
add
mov
cmp
test
mov
idiv
push
fildl
enter
push
xor
jns
jne
mov
cmp
adc
cmp
pop
lea
lock
dec
mov
pop
and
loope
in
popf
and
pop
mov
jne
gs
movsl
mov
xchg
sbb
cld
lahf
ret
outsb
or
jnp
call
fdivp
sub
pop
sbb
xor
sbb
lret
mov
stos
mov
cmpb
gs
add
int3
mov
scas
adcl
sub
xchg
pop
scas
in
je
cmp
daa
sub
cmp
icebp
mov
loopne
sbb
or
and
roll
push
mov
std
std
fs
cmp
xchg
mul
and
ds
cmpsb
loopne
cltd
xchg
dec
lods
roll
loope
out
pusha
mov
or
inc
cmpsl
lahf
push
arpl
in
jns
cmc
ss
pop
test
adc
jg
sti
xor
gs
push
sbb
adc
and
xlat
pushf
pop
inc
gs
outsb
xchg
mov
int3
push
out
daa
cmpsb
decl
jg
mov
cmp
dec
out
cmp
inc
data16
test
ret
imull
pop
inc
lret
out
add
pop
nop
leave
mov
jl
xchg
imul
popf
dec
mov
fwait
lds
jne
inc
arpl
inc
je
int
enter
mov
stos
adc
cmc
or
xor
adc
add
or
adc
xchg
in
ljmp
in
xchg
ss
out
xor
inc
insl
iret
inc
or
fldt
in
outsl
dec
lret
inc
cmc
or
jmp
sub
adc
cmpsb
dec
inc
pop
dec
xor
in
push
pop
pushf
ss
loopne
popf
cmp
cli
lock
inc
aas
mov
stos
push
popf
jbe
pop
ljmp
sahf
loop
ficoml
fs
xor
push
insb
jge
sub
mov
cmp
int3
mov
insb
rcll
stos
xchg
xchg
adc
dec
iret
fildll
and
pop
jg
hlt
mov
outsl
inc
jns
loope
pop
jl
fisttpl
mov
cmpsb
mov
dec
sbb
sbbb
cs
rcrl
push
cmc
push
cmp
jo
adc
xor
sub
add
or
mov
mov
pop
and
inc
fmuls
add
cs
cltd
mov
pop
adc
and
insb
cmpsb
push
into
les
or
addr16
std
imul
xor
mov
pop
add
in
inc
pop
lcall
jae
icebp
and
inc
xlat
lds
mov
cmpsb
dec
popa
repnz
scas
push
ficompl
push
cmp
cli
xchg
cwtl
mov
add
xor
arpl
xchg
pop
push
loop
js
hlt
shr
and
sub
lea
fucom
repnz
sbb
cwtl
jg
sub
dec
mov
sti
movhps
shr
inc
add
lock
int
js
pop
outsb
sbb
xchg
fs
mov
js
add
cmpsl
jo
or
je
loop
push
daa
xchg
sbb
les
cmpsl
in
cli
push
xchg
sub
out
jns
mov
test
je
mov
inc
mov
dec
mov
fldz
and
outsb
adc
std
sub
mov
sbb
mov
int
mov
dec
bound
mov
mov
push
test
aaa
mov
mov
sub
idivb
jge
and
lret
cmp
mov
loopne
fucom
push
and
cmp
xchg
aaa
cmp
mov
pop
cwtl
sti
xchg
cli
sbb
or
dec
leave
inc
icebp
jb
mov
leave
mov
fnstenv
sbb
mov
scas
nop
xchg
sub
cli
movsb
jbe
or
clc
test
inc
inc
imul
inc
lock
lcall
addb
int
std
decl
inc
mov
xorb
out
sub
pop
sbb
xchg
push
pushf
dec
inc
xchg
mov
sub
out
insb
sahf
inc
push
rcrb
cwtl
icebp
inc
js
insb
int3
filds
dec
test
or
cmpsl
add
setge
sbb
pushw
adc
xor
xchg
jo
cld
pop
adc
dec
rclb
xchg
or
fmuls
xchg
pop
ret
pusha
int3
or
push
and
xchg
out
and
or
lcall
mov
lret
sbb
jns
int3
fcompl
or
and
sahf
jge
test
fwait
arpl
jnp
xor
mov
mov
cmp
jle
add
cmp
xor
test
jns
inc
int3
bound
xchg
loope
mov
pop
push
jb
add
insl
jmp
cmpl
cmpsl
jbe
add
xor
xchg
push
pop
push
mov
jb
pop
mov
push
mov
test
xor
mov
add
nop
mov
out
pop
scas
xchg
loopne
stos
mov
ret
out
push
jns
and
cltd
xor
out
ja
adc
and
das
stos
lock
jns
js
icebp
jo
adcl
lods
mov
les
cmp
out
mov
pop
mov
push
pushf
push
dec
inc
dec
insb
jno
sub
mov
mov
jo
movsl
aas
mov
int3
jmp
pop
sbb
scas
jne
aad
lods
out
sub
jo
add
push
mov
jmp
pop
dec
fcoml
mov
mov
adc
je
fistps
inc
jno
ret
outsb
les
xchg
in
popa
mov
movsl
out
enter
push
popl
mov
insw
rorl
and
mov
jns
loop
lcall
mov
jp
fnstenv
inc
sub
mov
mov
fistl
out
inc
jg
cs
int3
jl
sbb
call
and
xchg
sub
push
xchg
pop
mov
dec
ret
aas
cmp
add
mov
mov
xor
push
je
gs
pop
imul
jmp
push
ja
je
push
subl
cmp
add
sub
leave
push
ja
push
idivl
dec
pop
xchg
arpl
std
mov
stos
jp
mov
setge
xchg
in
add
inc
jbe
sahf
ja
lret
clc
mov
and
add
mov
outsl
sbb
inc
inc
into
mov
shlb
xchg
stos
and
mov
sub
movsb
push
into
dec
clc
xchg
or
fwait
xor
mov
jae
mov
imul
xor
sbbb
insl
jmp
sbb
jo
cmpsl
xlat
push
pop
xor
pop
enter
fwait
mov
sti
sub
push
adc
or
imul
push
adc
dec
mov
ret
pop
push
icebp
movsb
shrb
sbbl
jne
mov
pushf
mov
pop
nop
pop
add
xor
in
ss
mov
in
mov
pop
push
adc
push
mov
ret
xor
popf
cmpsl
dec
divb
ds
int3
pop
pop
out
add
or
aam
stos
fnsave
das
insb
mov
stos
fldl
pop
pop
add
dec
mov
daa
add
adc
mov
mov
xlat
ljmp
fs
std
cld
cmp
je
iret
cwtl
inc
stos
add
inc
mov
in
xchg
xor
sbb
popf
mov
add
mov
or
jmp
and
sub
mov
jo
es
stc
adc
mov
stos
mov
jo
cwtl
inc
aam
in
insb
orb
jns
aam
pop
test
sarb
neg
adc
sbb
xchg
das
xor
adc
xor
movsb
xchg
push
xor
sbb
sbb
fwait
mov
add
or
sub
lods
lock
add
lds
mov
faddl
nopl
mov
mov
mov
push
shrl
or
hlt
adc
popf
scas
cmpsl
mov
leave
or
fidivl
fwait
insl
inc
popw
lret
cmp
in
fsts
icebp
cmpsb
out
in
mov
lret
sahf
outsb
push
xor
jae
das
pop
pop
test
pop
mov
loopne
cmc
push
addb
push
mov
cld
arpl
cmp
sbb
mov
dec
fs
loop
pop
out
rcr
pusha
sbb
jae
push
test
orl
sub
dec
jbe
data16
aam
push
inc
mov
repz
or
vprotb
mov
popa
push
cltd
movsl
in
ss
xchg
lahf
popf
cmpsl
pop
mov
cmpsb
popa
push
sbb
sub
lret
sbb
stc
jle
dec
ds
stos
shlb
aad
jecxz
jmp
and
jle
xor
lahf
push
pop
loop
cmp
into
inc
loope
and
in
in
xchg
nop
scas
nop
push
sbb
pop
or
inc
sbb
adc
add
mov
movsl
adc
add
push
adc
fcos
test
repnz
int
add
repnz
aaa
hlt
stc
test
and
and
pusha
cmpsl
mov
xchg
inc
mov
xor
pop
add
and
fisubl
push
inc
and
pop
dec
cli
mov
xor
sub
call
xor
jns
xchg
sub
ficoml
fwait
push
clc
mov
sub
mov
sbb
bound
inc
stos
pop
mov
lods
cwtl
and
out
push
addr16
repnz
jno
mov
jle
cltd
packssdw
icebp
stc
xor
cmpsl
push
cli
mov
dec
jb
mov
or
mov
ljmp
push
adc
outsb
mov
fwait
or
aaa
dec
xchg
subps
idivb
push
jmp
push
xor
imul
mov
gs
add
xchg
xchg
dec
or
pop
and
outsl
xlat
cmp
add
in
pusha
jnp
mov
inc
jp
shr
adc
dec
pop
aas
jl
fwait
inc
mov
fdivl
pop
test
pop
or
ror
cld
sbb
ror
aaa
mov
dec
iret
mov
mov
mov
and
stc
dec
mov
fcomps
sbb
and
push
in
push
imul
mov
jecxz
inc
bound
rcrb
xlat
and
pop
xor
or
fmull
add
sbb
aad
jge
cmp
and
sub
inc
dec
mov
adc
je
adc
ret
sub
and
pop
cld
imul
fisttpll
jl
inc
mov
loop
jge
cmp
pop
jno
outsl
rol
push
int
xchg
lods
enter
push
mov
jmp
daa
xchg
data16
xchg
loope
les
cmc
cmp
mov
test
stos
ja
dec
dec
mov
jg
in
cmp
idiv
outsb
cmpsl
xchg
int3
daa
pop
in
stos
mov
outsl
or
andl
inc
je
je
mov
push
popa
inc
jne
xchg
into
jnp
cmp
adc
push
test
pop
pushl
mov
outsb
push
xchg
jp
xchg
and
popf
jnp
test
enter
test
mov
mov
dec
daa
fs
negl
mov
insl
mov
loop
mov
bound
mulb
fstl
sbb
mov
jo
outsb
aad
fwait
in
inc
pushf
xor
push
mov
cmp
add
imul
fcmovu
jp
fidivrs
jp
cmp
mov
mov
aas
xchg
sti
dec
repz
jae
push
mul
imul
hlt
sbb
test
cmp
sti
scas
jle
and
aas
shlb
icebp
mov
enter
push
add
push
push
push
cli
jl
gs
loopne
into
loope
mov
hlt
inc
lret
jno
stos
xor
and
movsb
add
sub
test
pop
popa
gs
or
mov
add
lds
fadd
jno
negb
lea
fucomip
leave
fcoml
jl
pop
leave
je
lahf
adc
leave
mov
inc
addr16
cmpsl
xorl
call
ljmp
enter
add
jns
loopne
jne
and
sub
mov
test
pop
mov
push
sti
pop
jge
adc
adc
mov
cmc
sub
ret
fisttps
push
fidivrl
movsb
imul
outsb
pop
cmp
push
addr16
xchg
mov
rclb
jbe
push
lds
stos
popf
into
sti
sbb
xchg
pop
out
push
ror
xor
popa
mov
mov
sub
jno
lods
fnstcw
in
inc
sub
sbbb
mov
or
incb
xor
or
movsb
mov
fldl
pop
jp
fs
mov
rorb
in
mov
sub
fiaddl
aaa
int
lcall
popf
cwtl
push
adc
into
scas
mov
iret
aas
fmull
cmp
out
sbb
and
aaa
lret
rolb
cltd
sub
pop
jb
jl
in
popa
repz
mov
sbb
popf
nop
out
add
hlt
daa
xor
cmp
pop
mov
bound
mov
cld
lahf
inc
push
cmp
cmp
mov
xor
aaa
mov
mov
and
stc
dec
mov
pop
mov
cmp
inc
movsl
ret
popf
jno
scas
fisubl
xchg
fldenv
cmc
addr16
gs
jb
sub
sub
push
jno
mov
mov
mov
cmp
or
out
adc
xchg
xchg
call
dec
std
sub
out
pop
push
mov
xchg
xchg
cmc
pop
pop
xor
test
dec
adc
pop
daa
dec
fstl
jg
out
loopne
and
mov
and
sub
xor
test
fiadds
jg
fmuls
call
sub
sbb
jp
xor
jbe
in
sub
jns
mov
push
fcmove
jae
mov
xchg
bound
mov
inc
pop
xchg
add
xchg
cmc
shlb
das
or
sub
scas
and
and
sub
test
daa
dec
cmp
cs
mov
aaa
addr16
cmpsl
decl
sbb
sub
je
mov
dec
divb
and
ffree
rcrb
or
rcrl
cmp
dec
sub
mov
lods
inc
lahf
mov
sarl
cli
lret
adc
mov
or
push
mov
jns
xchg
adc
xchg
or
popf
jl
test
int3
pop
shrl
sti
push
mov
or
fiadds
ret
xor
cmpsl
leave
clc
fsubs
xchg
and
insl
jns
insl
jecxz
addr16
dec
iret
dec
mov
and
inc
ss
fildll
movsl
push
add
jle
daa
roll
enter
dec
jbe
jl
in
loope
lea
jg
in
push
and
lea
ja
xchg
jnp
lods
cmp
pop
mov
enter
cmc
inc
sbb
mov
jp
mov
jno
outsl
xchg
in
push
mov
aad
jle
popa
adc
popa
cmp
cltd
xor
gs
aad
sub
mov
loop
fcomps
pop
fcompl
xchg
sub
add
mov
jno
movsb
jl
ds
fs
fdivrl
fbstp
add
gs
adc
fidivrs
dec
mov
mov
aaa
lods
cmpsl
out
jge
les
cmp
andb
and
lods
mov
xchg
xor
fmul
loop
stos
lret
xchg
shrl
mov
imull
mov
adc
sub
fnsave
add
xchg
mov
loop
push
xor
popf
xchg
inc
sbb
insl
outsb
dec
out
icebp
ds
into
push
jecxz
jae
outsb
dec
and
mov
pop
lock
call
xor
mov
sbb
sub
mov
icebp
pusha
addl
pop
or
xchg
adc
out
sbb
andb
in
jge
out
aaa
iret
jno
add
cli
xchg
push
adcb
jmp
and
lods
mov
ja
push
int
dec
std
or
adc
ja
jp
push
test
sub
push
lds
aaa
int
xlat
mov
and
incb
dec
inc
jno
ss
outsl
pop
cmp
hlt
inc
mov
push
cmp
pop
out
xor
fildl
jbe
dec
push
test
out
push
movsb
mov
sbbl
rcr
xchg
mov
add
ret
dec
pop
mov
inc
dec
ficompl
fyl2xp1
add
mov
or
hlt
adc
and
mov
cli
mov
cmp
and
pop
and
xchg
dec
insl
jl
mov
popl
cmpsb
jnp
push
push
mov
sbb
daa
add
pop
mov
in
cmpsl
and
es
insb
movsb
add
lods
xchg
dec
and
stc
lret
outsb
ja
xchg
pushf
cmp
jnp
repnz
mov
add
xchg
leave
pushf
push
xchg
jp
cmp
push
pop
loopne
mov
and
push
sub
scas
lds
popa
pop
sahf
mov
fisubs
push
js
xchg
out
enter
and
xor
in
jl
sub
and
or
mov
stos
mov
sbb
sbb
jno
cmp
rclb
add
mov
sub
xchg
mov
cwtl
jno
adc
nop
adc
jno
xlat
test
inc
push
cltd
cmp
pop
ret
test
pusha
aaa
addr16
les
lods
push
pop
les
xor
imul
pop
pushf
lret
inc
fwait
jl
and
push
aaa
adc
adc
xor
lahf
test
sub
cmp
jno
sbb
mov
aas
cmp
cli
cld
cmp
ja
xor
sub
stos
sub
dec
das
int
add
and
or
popa
or
js
lcall
das
test
xlat
inc
cltd
xchg
adc
or
adc
daa
rclb
bound
xchg
pop
je
imul
push
lcall
cmpsl
sbbb
mov
jbe
pop
aad
movsl
and
xchg
mov
orb
rcrb
gs
lahf
mov
leave
cmc
loope
sti
out
cmp
mov
or
cmpsl
dec
xchg
push
add
mov
mov
xchg
std
in
es
sub
aad
mov
mov
cmpl
roll
pop
test
pushf
jns
mov
add
and
shll
and
lods
call
pop
popa
lea
shlb
lock
idiv
subl
or
fwait
pop
xchg
into
fldenv
subb
iret
mov
loopne
jp
xchg
in
clc
pop
insl
adc
add
cwtl
stc
dec
negl
and
jg
in
push
mov
subl
sarl
lods
cmp
jmp
mov
and
std
push
rcl
ss
shll
mov
dec
mov
in
jnp
je
dec
xchg
mov
xchg
adc
pop
gs
cmp
pop
stos
popa
in
and
sub
outsl
repnz
xchg
imul
adc
or
arpl
jae
addb
into
cmpsb
test
cmp
arpl
shll
popa
enter
sbbb
decl
sbb
dec
xor
dec
xor
sub
xor
in
nop
xor
into
xor
mov
sub
sub
das
push
sub
int3
pop
or
loopne
out
psraw
insb
pop
in
xor
xchg
cld
hlt
std
mov
dec
jl
fnsave
dec
xor
xor
or
mov
xlat
cs
rolb
jge
enter
jnp
xchg
fcmove
inc
in
inc
data16
stc
cli
into
imul
adc
icebp
in
mov
gs
jo
xlat
adcl
int3
push
push
rcrb
out
scas
or
xor
push
mov
call
stos
dec
cmpsl
mov
daa
push
out
push
clc
scas
lods
pushf
pop
mov
cs
out
sti
sarl
add
jecxz
jecxz
ja
out
rclb
mov
pop
call
inc
lea
or
push
imul
dec
push
fsubrl
or
pushf
cs
jne
hlt
cli
ret
stos
xor
faddl
mov
sub
sbb
cmpsl
mov
sbb
fmul
jmp
xchg
popa
test
pop
loopne
ljmp
xchg
sarb
mov
mov
jo
int3
pop
rol
pop
xchg
cmp
jge
out
mov
jo
popa
js
stc
inc
call
dec
mov
add
mov
add
mov
lret
subl
pusha
add
insb
in
xor
rorb
xchg
popa
loop
lret
sub
divb
fwait
push
sarl
pop
lret
cmp
aas
or
xchg
mov
mov
orl
mov
imul
fsubs
int
sbb
xchg
jle
mov
pop
inc
xlat
pop
mov
sti
or
lea
aam
popf
fsts
sti
fstpl
aam
sub
pop
test
dec
ja
sahf
push
and
mov
test
ja
push
mov
in
push
and
push
inc
out
adc
or
mov
and
outsb
outsl
in
push
mov
adc
enter
xchg
fisubrl
or
push
fsubp
jbe
dec
jge
daa
mov
cwtl
xchg
pushl
rcrl
sarb
mov
mov
sahf
rolb
int3
loopne
loope
test
xchg
lock
and
xchg
add
daa
sbbb
mov
xchg
inc
pop
sbb
mov
sbb
mov
adc
mov
gs
test
test
cmp
loopne
jge
sbb
add
pusha
nop
mov
fidivs
jb
aaa
stos
jg
sbb
and
int3
aas
push
stc
sbb
scas
sub
fdivs
inc
rcrl
xchg
sub
adc
iret
sbb
insl
cwtl
fdivrl
test
jb
insl
mov
xor
pop
jnp
dec
jne
push
sub
and
mov
jae
xor
aad
or
mov
pop
jnp
xor
and
mov
fdivs
andl
dec
movsb
adc
cmp
adc
pop
xor
fildl
popf
jmp
mov
and
mov
mov
xchg
push
jmp
ljmp
sub
sbb
adc
inc
push
lret
aaa
in
pop
jle
add
jne
or
daa
stos
jle
xchg
fbld
sbb
dec
dec
lret
jl
aas
push
mov
repz
out
dec
ret
out
andb
sbbl
lock
loop
xor
aam
dec
aad
scas
push
scas
xor
xlat
sub
push
cmp
js
fs
lock
les
shlb
cmp
imul
mov
push
or
and
add
xlat
bound
pop
aaa
sbb
sub
xor
jb
stos
pop
stos
jnp
mov
dec
sbb
je
sbb
out
jl
add
push
inc
jg
clc
dec
aaa
int
stos
sub
pop
in
int
fistpl
sub
adc
sub
mov
in
sub
movsb
loopne
sub
cmp
and
shr
cmc
roll
stos
sbb
aaa
das
mov
jle
jmp
adc
xchg
sub
cmp
adc
mov
cmc
popa
lret
add
pusha
inc
jno
jmp
push
xor
orb
adc
sub
out
loopne
sbbb
inc
test
xchg
dec
mov
push
cmpsb
mov
sbb
inc
fldl
sub
ja
jnp
mov
arpl
sub
add
loop,pn
clc
sbb
or
into
out
pop
jae
mov
jp
setle
push
scas
std
xchg
roll
xchg
xor
inc
dec
imul
or
je
cmpsl
ds
push
jbe
jns
loopne
dec
test
push
dec
shl
gs
jmp
stc
dec
xchg
mov
inc
mul
pop
mov
shlb
cmp
in
xor
inc
out
icebp
jmp
sahf
roll
outsl
notb
sahf
mov
inc
push
pop
cmc
repnz
addr16
xchg
test
and
std
adc
movsl
div
jge
cmpsb
addr16
mov
leave
and
xor
add
popf
call
mov
cltd
inc
pop
cmp
mov
cmpl
lods
in
cli
mov
das
bound
pop
dec
ret
dec
xor
out
inc
dec
or
push
lds
lock
pop
sub
push
dec
jge
in
mov
xor
insb
sbb
mov
jb
js
add
sub
dec
mov
push
movsl
call
push
mov
mov
ror
nop
push
and
pop
inc
jecxz
cmp
cltd
lret
mov
mov
movsb
sbb
dec
repz
push
pop
mov
and
jo
inc
stc
push
sarb
repnz
hlt
and
mov
out
movl
cmp
push
lock
and
adc
enter
and
xchg
repz
inc
push
std
xchg
divb
jge
shrb
dec
mov
fldenv
mov
mov
insb
mov
or
mov
and
sub
sti
mov
sub
mull
and
or
add
lcall
ret
shrl
in
and
test
leave
aad
dec
inc
xor
mov
and
and
popf
das
xchg
push
sbbl
push
mov
push
cli
jbe
bound
sub
pop
add
xor
push
xor
push
out
lods
adcb
add
push
rcrl
jl
lea
jbe
into
inc
repnz
mov
movb
jne
in
aad
inc
or
or
add
aaa
mov
decl
xor
xor
dec
in
popl
push
mov
pop
push
das
jnp
test
dec
ffree
push
dec
mov
inc
jae
push
mov
sub
xlat
push
and
mov
inc
mov
out
pop
js
inc
leave
inc
mov
fs
bound
movsl
rorb
fidivl
lret
sub
sar
lcall
scas
xchg
repnz
cs
scas
or
inc
imul
dec
iret
pushf
iret
cmp
gs
cmp
jl
add
test
inc
push
mov
push
dec
adc
lret
aam
xchg
push
fs
and
lret
jb
mov
into
xor
mov
pop
daa
adc
repnz
cmpsl
cld
dec
sbb
mov
popf
jmp
in
test
pop
xor
fisubrs
xor
or
test
push
add
push
lar
loopne
sbb
call
sub
and
test
or
mov
xor
cli
xchg
dec
jbe
insb
cmpsb
outsl
inc
xchg
sub
xor
lret
mov
lret
mov
test
clc
pop
into
imul
cmp
fldcw
cmc
sbbl
jecxz
mov
pop
xor
sbbl
mov
loope
mov
fldenv
add
dec
in
sbb
in
adc
mov
mov
stc
pop
push
xchg
pop
mov
jmp
dec
or
int
jecxz
insl
divb
cli
lds
mov
pusha
mov
fimull
cmp
sbb
mov
out
in
subb
stos
xor
and
mov
and
daa
jg
fcomps
xor
sub
out
xor
adc
xchg
and
lret
aas
stos
lcall
inc
loopne
cmc
je
jo
sub
ficompl
sub
sub
loope
mov
inc
cmp
ja
out
sub
adc
and
jp
sbb
adc
and
outsl
int3
cld
sub
test
or
stos
fdivr
xor
push
adc
repz
sahf
ret
xor
pop
ljmp
add
mov
imul
dec
and
outsl
test
or
push
inc
dec
sub
cmpsl
cmp
mov
lds
inc
fwait
jle
add
push
in
jmp
jae
xor
jmp
xor
fsts
sub
bound
cmp
mov
movsb
add
enter
xchg
xlat
lret
push
jno
stos
pop
xchg
jl
sti
sti
xor
pop
push
leavew
or
sti
orb
adc
xchg
add
pushf
mov
sub
outsl
sbb
lahf
repz
test
in
repz
adc
inc
and
mov
lret
ds
pop
dec
stos
push
sub
std
jge
aam
lods
imul
xchg
imul
mov
das
mov
sahf
cmpsb
jbe
sbb
push
or
leave
das
mov
pop
nop
fimull
in
adc
dec
jno
sub
ret
ljmp
repnz
cmp
mov
inc
popf
fisttps
mov
clc
js
push
loop
xchg
add
jp
add
mov
adc
mov
push
sbb
add
lock
pop
outsb
jp
rorl
movsb
stos
imul
iret
jns
lods
xor
in
or
pop
loopne
mov
fnstsw
fadds
inc
pop
jno
ror
jge
xchg
and
pop
arpl
rorb
stos
xlat
push
xor
adc
jle
lret
repnz
stos
inc
int3
testl
mov
mov
ret
sub
out
mov
sbb
xchg
in
sub
and
push
leave
movsb
pop
push
or
mov
xchg
dec
sbbb
cld
test
frstor
jge
aaa
inc
sti
outsb
imul
sbb
loope
xchg
xor
jp
jns
mov
xor
mov
and
sub
loopne
cmpsl
aas
cmpb
push
fisubrl
daa
push
cwtl
xchg
xor
jmp
dec
adc
roll
dec
dec
fildl
mov
add
loopne
shlb
out
lods
mov
in
test
movsb
rclb
andnps
out
pop
inc
inc
xchg
repnz
mov
mov
xchg
mov
pop
stos
outsb
icebp
xchg
push
les
insb
xlat
xchg
aam
jae
push
adc
mov
or
icebp
aam
jle
xchg
push
lret
es
mov
push
dec
sub
add
movsb
sbb
mov
xor
xor
fcomp
xor
add
sub
pop
add
leave
mov
xor
pop
or
add
and
mov
mov
loop
mov
gs
xor
pop
mov
popf
adc
dec
rol
fstpl
and
fsubl
data16
sub
inc
lret
iret
jmp
xor
dec
pop
popa
fidivrs
xor
rcrb
shrb
popa
sbb
imul
bound
push
xor
loop
aaa
mov
enter
mov
sar
shrl
lock
jne
inc
lock
stos
add
or
movsl
cld
inc
fdivr
pusha
dec
ret
xor
dec
mov
arpl
dec
add
mov
fnsave
pop
loop
sti
icebp
add
std
call
jp
sub
dec
divl
cmp
sub
mov
mov
rclb
mov
lea
xchg
mov
ret
jmp
sti
int
sub
xlat
pop
xchg
jns
or
push
pushf
test
fnsave
repnz
mov
popa
lock
movsb
cmp
push
cld
rorb
push
rclb
cmpsb
mov
in
fimuls
sub
cmp
pop
daa
add
repz
inc
add
test
rclb
adc
cmc
sub
loop
pop
cmpsb
fcomps
iret
cs
xchg
test
adc
movsl
xchg
and
and
out
shlb
outsb
or
sub
xor
pushf
aam
adc
dec
or
int
fstpl
push
xchg
xchg
jns
out
adc
mov
sbb
cs
mov
cs
icebp
out
orl
cmpsb
xor
dec
in
mov
icebp
addr16
lret
mov
mov
out
jle
insb
ljmp
aad
idivb
xchg
ret
add
mov
mov
inc
out
jbe
dec
xchg
roll
mov
mov
lods
mov
add
dec
jp
das
push
fimuls
pop
mov
shl
mov
and
pop
and
aam
mov
xchg
aas
cltd
leave
jmp
ret
mov
inc
lahf
push
out
dec
inc
mov
sbb
fildl
into
mov
and
mov
loop
pop
aas
mov
sti
dec
scas
inc
cmp
ljmp
mov
decl
push
mov
mov
mov
mov
cmp
nop
add
dec
cs
pop
add
xor
pop
jno
sbb
loope
subl
dec
jge
aaa
arpl
mov
data16
mov
fsubp
imul
xchg
push
dec
xor
lcall
mov
mov
cmc
rolb
xor
pushf
test
fisubrl
les
lock
mov
adc
pop
add
enter
test
sbb
stos
inc
push
dec
mull
mov
mov
outsb
adc
cmpsb
push
mov
add
lret
adcl
sbb
cmpsb
ret
mov
xchg
popa
jmp
jecxz
xchg
jp
icebp
cmp
movsl
ret
jns
andb
jns
inc
mov
fstl
pop
mov
push
flds
or
dec
dec
sahf
bound
jae
repz
lahf
pop
mov
ljmp
cmp
aas
es
jecxz
push
data16
outsl
call
or
lahf
adc
ret
inc
fldt
jl
xlat
cmp
fcmovb
scas
ds
xchg
ljmp
push
lret
mov
jmp
leave
stos
mov
sti
sbb
xor
mov
adc
test
mov
sub
dec
mov
mov
mov
daa
mov
es
lret
test
mov
ds
ss
xor
dec
sarb
adc
rclb
adc
rcr
dec
loopne
jge
mov
icebp
in
xchg
cmp
or
fistpl
cmp
lcall
or
push
into
sti
pushl
fisttpll
testl
xor
jle
clc
sti
loopne
lret
xor
mov
pop
inc
arpl
les
push
js
leave
mov
xchg
mov
cmp
sbb
or
dec
mov
pop
cmpsb
insl
pop
xor
and
gs
enter
mov
mov
scas
cmp
inc
jecxz
mov
pop
je
adc
hlt
push
add
pop
pop
push
sbb
lcall
js
aaa
iret
lret
js
dec
adc
fdiv
rcrl
xor
dec
jg
mov
jo
lcall
loopne
in
pop
iret
push
aad
mov
jnp
test
in
jnp
sbb
xchg
sbb
pushf
or
mov
movsl
cmpsb
movsb
stos
dec
mov
cld
push
push
mov
out
cmc
int3
push
out
xchg
fdivs
push
fsub
mov
popf
popa
mov
out
loop
test
cmp
aam
mov
jmp
inc
mov
sbb
das
and
jnp
imul
jnp
mov
outsl
xchg
xchg
les
repz
mov
push
sub
pop
sti
push
add
adc
filds
pop
push
or
sahf
add
sti
pop
loop
aas
and
cs
cli
je
test
dec
test
sub
andb
ret
jno
cltd
call
sub
rcrb
sub
aad
test
pop
int
insl
clc
sbb
int3
clc
push
dec
mov
in
and
adc
or
sbb
push
mov
mov
jl
dec
fcoms
pop
cmpsb
ja
mov
bound
stos
jle
outsl
dec
mov
loop
cs
jp
imul
mov
mov
xor
mov
bound
orb
bound
lock
seta
je
or
xor
mov
dec
mov
push
aad
dec
test
push
shll
xor
shlb
ljmp
jbe
inc
mov
cmp
shll
mov
mov
daa
ficoms
clc
mov
rcrl
jmp
mov
xlat
jl
ds
and
mov
js
push
and
ja
mov
dec
sub
xchg
adc
es
ret
pop
orl
cmpsl
dec
jo
mov
jg
inc
cmp
paddsb
fwait
hlt
movsl
or
or
sub
popa
xor
jae
add
lea
mov
out
mulb
decl
shll
jb
fstpt
cmpsb
xchg
mov
stos
pop
pop
cmc
sbb
mov
jo
call
jnp
pop
iret
pusha
inc
sub
add
enter
iret
fs
fs
xchg
add
pop
or
loope
in
mov
inc
jg
xchg
insl
insl
movsb
mov
dec
xor
adc
push
pop
dec
inc
data16
nop
ds
repnz
sbb
sbb
ret
cmp
xor
rcrb
insl
push
xchg
jl
sub
mov
js
stos
out
inc
out
add
xor
and
lods
lret
mov
rol
sub
inc
imul
lret
insl
mov
cli
inc
roll
push
xor
pop
test
push
dec
add
pop
dec
out
ljmp
xlat
ror
in
or
out
mulb
add
cli
adcb
add
push
sub
in
loope
scas
arpl
pop
je
lock
hlt
inc
or
les
movsl
sti
mov
add
insl
sbb
mov
mov
lret
inc
dec
loopne
or
inc
mov
adc
push
and
pusha
xchg
pop
lods
ret
or
sbb
in
xor
mov
push
xor
stc
sub
fisubs
push
mov
movsb
jae
sub
fcomps
push
in
mov
cli
pop
fildl
out
nop
scas
lods
sbb
into
fdivrs
inc
jae
pop
push
fistpll
fistpll
push
inc
imul
xlat
std
push
mov
or
in
mov
jg
loop
nop
test
jecxz
mov
or
lds
mov
mov
jge
fmuls
mov
add
es
mov
in
xor
inc
jno
cmp
test
hlt
dec
outsl
jnp
pop
jbe
test
and
pop
cmp
push
mov
jge
mov
or
int3
fidivrs
xor
pop
xor
sahf
out
xchg
cli
lret
jle
stc
add
sbb
push
and
cld
inc
sub
mov
repz
movsb
push
add
hlt
in
adc
setno
or
mov
mov
xor
mov
shr
loop
xor
mov
lods
ljmp
add
and
push
push
lods
lahf
or
mov
jns
mov
fdivl
fsts
dec
lret
add
dec
ljmp
lahf
les
add
push
ljmp
imul
pop
sbb
scas
outsl
aaa
or
subl
mulb
push
scas
dec
jnp
das
loope
or
test
sbb
fbld
daa
sbb
mov
in
xchg
bound
or
mull
int3
mov
cmp
out
or
cmp
jo
sbb
lret
cmp
pop
out
stc
inc
mov
xor
aaa
insl
mov
in
pop
add
les
push
xor
mov
dec
js
jb
iret
push
into
mov
addb
ja
jp
mov
icebp
aas
mov
daa
adc
enter
push
dec
rol
inc
popa
jno
mov
mov
pop
addr16
ljmp
pop
cmp
inc
sbb
pop
pop
or
aam
dec
mov
sbb
mov
fisubrs
subb
scas
dec
xchg
cmc
pop
loopne
xchg
xor
mov
push
mov
in
xchg
in
inc
fcoml
sub
pop
daa
mov
ss
ret
xchg
sbb
xchg
pop
dec
ss
sbb
in
jl
sbb
mov
lahf
mov
fwait
repnz
test
mov
mov
lret
pop
mov
outsb
cmp
inc
jne
jne
push
bound
sahf
shrl
xchg
enter
add
mov
mov
rclb
lods
dec
mov
push
test
cmpsb
out
ss
sub
adc
xlat
fcmovne
or
fdivs
cltd
aaa
pop
sub
fwait
add
adc
lcall
mov
or
add
and
and
aaa
sbb
inc
hlt
or
int
add
divl
in
rorb
es
adc
fidivs
mov
dec
imul
push
pop
cmpsb
movsl
add
xchg
cmp
mov
cli
jb
push
adc
dec
punpckldq
aam
push
mov
adc
in
dec
and
mov
dec
insl
inc
cmp
push
push
xchg
lea
jp
lea
jb
or
pop
dec
loopne
dec
mov
out
call
shr
pushf
cmp
inc
clc
xchg
mov
cli
jl
sbb
cmpl
pop
mov
pop
xchg
loope
and
xor
jecxz
dec
out
push
adc
movsl
xor
push
pop
pop
divb
mov
shll
mov
or
repnz
mov
loope
cmp
loop
mov
fistl
jmp
test
insb
jle
mov
jecxz
scas
jle
push
lock
push
mov
jp
ficomps
jb
leave
xlat
js
mov
or
orb
jns
lock
mov
shrb
scas
cmp
jecxz
pop
xchg
cmp
scas
call
jge
mov
jns
or
or
dec
imul
lods
outsl
jmp
or
mov
xlat
iret
iret
das
or
jecxz
and
adc
lcall
js
test
fwait
dec
push
mov
mov
daa
jbe
cmpl
mov
shll
cmpsl
orb
lret
sub
orb
jb
lock
dec
int3
jnp
xchg
push
out
sbb
or
rcrb
daa
sub
sbb
adc
and
jmp
mov
fnstsw
inc
mov
adcl
jbe
repz
and
sub
test
sbbb
lcall
out
out
insw
xlat
leave
dec
cli
sar
sbb
inc
scas
xchg
sub
cmpsb
loopne
mov
dec
fwait
mov
or
fsubrs
inc
lods
jns
cmp
jo
jbe
imul
clc
repz
cmp
cli
mov
sub
pop
mov
add
adc
dec
sbb
mov
dec
scas
aaa
sbb
pop
orb
insb
pop
fimull
test
mov
mov
lods
mov
xchg
sbb
mov
in
jg
cltd
pushf
push
test
and
pusha
xchg
pusha
or
or
jo
int
mov
jmp
cmp
insb
xor
xchg
jp
push
jno
cmp
aas
popa
cwtl
call
nop
jmp
cmp
rolb
or
push
jb
stc
adc
stos
insb
iret
roll
daa
cwtl
loopne
inc
mov
fldcw
inc
sbb
fdivrs
sbb
rolb
popa
inc
incb
xchg
data16
subb
stos
jb
mov
cmp
jae
loope
subl
subb
pop
cmpsb
call
xor
pop
push
dec
ret
sarb
cmp
mov
ljmp
pop
xchg
and
cmp
repnz
pop
int
aas
xor
faddl
loopne
sbb
adc
pop
daa
ds
hlt
and
popf
sub
add
flds
xchg
jp
movsb
push
sahf
adc
dec
cmc
aad
xchg
test
test
fwait
mov
je
cmp
xchg
fisubrl
mov
mov
stos
add
fwait
and
enter
ficompl
push
jnp,pt
imul
xor
ficomps
frstor
add
cmpb
jmp
cli
and
dec
je
push
hlt
mov
fldenv
sbbl
xor
and
sahf
fwait
mov
lds
sub
sar
push
fisttpl
movsb
inc
and
cmp
inc
add
paddusb
fmull
cmp
mull
jae
bound
mov
and
sub
mov
xchg
dec
cmp
popf
dec
inc
fwait
nop
sub
and
cmp
jbe
dec
es
filds
xor
dec
enter
inc
or
push
sti
jp
cltd
dec
call
inc
cmp
fdivs
ret
movsb
push
mov
mov
lcall
pop
xor
push
cli
stos
push
pop
imul
mov
daa
or
and
sbb
xor
adc
xor
dec
pop
jl
jno
pop
jge
rcrb
xor
mov
lock
xchg
sub
pusha
or
pop
bound
repnz
xor
pop
push
repz
orl
jns
insl
jno
fnsave
aaa
or
insl
mov
in
lea
or
cli
rol
or
add
xor
test
and
out
fdivl
scas
pop
cld
mov
sbb
jle
out
jns
push
mov
repnz
mov
lds
cld
or
mov
mov
icebp
cld
aas
loope
ja
jge
jmp
xor
jecxz
pop
push
fdivs
or
popa
repz
sahf
aam
sub
cmp
jbe
and
ret
lds
imul
ljmp
jae
xchg
mov
xchg
leave
and
add
and
in
fisubl
loope
jg
sti
cld
rolb
dec
in
movsb
cld
cld
cld
fs
jno
xor
cwtl
inc
ret
popa
lahf
push
dec
add
in
push
in
shrl
or
jnp
adc
sub
pop
ss
js
dec
mov
dec
es
jbe
cli
mov
add
dec
leave
add
ficoms
lret
adc
jp
xor
fisubrs
aad
dec
push
or
sar
mov
lcall
jne
das
outsb
pop
sarb
bound
pop
mov
adc
ret
sbb
mov
push
mov
hlt
inc
test
mov
mov
inc
mov
mov
dec
push
cli
test
sbb
mov
js
rclb
testl
dec
and
pusha
sbb
add
shlb
dec
mov
cmp
fdivl
dec
sbb
xor
cli
mov
dec
cmpsl
jnp
and
mov
aam
daa
stos
arpl
in
push
xor
int3
mov
fbstp
inc
test
stc
or
xor
jbe
pop
mov
sahf
js
scas
push
in
jnp
mov
fcmovne
icebp
adc
fsubp
ret
sbb
das
pop
dec
mov
mov
jmp
mov
fwait
pop
int3
setge
inc
sbb
push
push
sldt
gs
push
mov
mov
aas
jge
clc
push
fcoml
adc
inc
cmpsb
sahf
mov
mov
push
test
mov
pop
xlat
sub
mov
testl
cltd
das
nopl
in
inc
mov
roll
stos
ret
jno
or
dec
mov
je
or
push
push
fs
push
cld
int
insb
inc
es
cmpsb
jbe
sub
sub
fwait
jp
lcall
or
mov
jbe
aad
test
insl
ret
andb
xlat
add
push
mov
pop
lock
mov
in
jle
daa
rclb
xor
bound
stc
clc
mov
movsl
push
cmp
pop
pop
mov
cmc
pop
cltd
dec
sub
aaa
mov
cmc
pushf
addl
sbb
push
out
xchg
stc
cmp
loop
cmc
jnp
pushf
add
push
fstps
jecxz
cld
sub
sbb
mov
call
insl
xchg
jl
aaa
daa
dec
push
sbb
sbb
inc
cmpsl
jecxz
inc
lret
lcall
jge
mov
ret
ds
adcl
push
mov
fcmovnbe
test
mov
out
adc
adc
xchg
mov
pop
xor
arpl
sub
ds
push
mov
xchg
pop
mov
loopne
or
or
icebp
pop
pop
adc
fdiv
jne
enter
cmpsb
push
sar
insl
add
in
shrl
leave
inc
sti
sbb
add
jl
xor
enter
mov
idivb
jno
bound
stos
fs
cmp
dec
test
pop
ret
iret
jmp
addr16
imul
cmc
jp
jmp
xchg
jae
mov
imul
push
pusha
inc
pop
mov
aam
fstpt
or
in
or
ficompl
inc
mov
jl
and
pop
xor
rcr
call
js
insb
loopne
pop
pop
cmpsb
insb
dec
inc
ret
mov
popa
stos
popf
arpl
cmp
mov
xor
aaa
cmp
divl
pop
std
repz
test
xlat
movsl
out
inc
out
fsubs
mov
mov
lds
inc
in
xchg
ss
std
stos
addb
jecxz
ret
addr16
xor
scas
cmp
lret
mov
mov
pop
inc
pop
inc
loope
push
lret
or
add
lea
xchg
sbb
lds
insb
popa
push
pop
stos
add
testl
insb
jmp
mov
ss
inc
jp
popa
jp
rolb
add
clc
xchg
pop
pusha
mov
cld
jno
rcrb
inc
cmp
xchg
into
pop
adc
fcmovu
mov
clc
les
sub
xchg
cmc
mov
push
fbld
rcr
sbb
sbb
push
inc
sub
or
cmp
arpl
xor
arpl
insb
daa
adc
dec
cmpb
sub
mov
sbb
cs
push
lcall
cltd
cmp
pop
adc
dec
idiv
add
aas
cmp
jg
push
and
or
rorl
cmp
out
dec
fiaddl
dec
ret
lcall
jne
repnz
stc
fidivrs
or
cmc
add
adc
sub
fbld
push
out
outsb
pop
in
mov
loop
pop
and
mul
ds
jp
and
xchg
mov
xchg
ljmp
sbb
hlt
data16
leave
push
int3
push
sub
outsl
dec
lods
adc
dec
sub
add
stos
mov
adc
clc
int
add
arpl
call
in
fwait
inc
pop
jno
sbb
xchg
mov
mov
adc
xchg
mov
xor
adc
add
lret
jl
loope
incl
or
pop
mov
push
pusha
out
cmp
add
lods
push
jo
cmp
dec
sub
sbb
dec
fmul
rep
or
movsb
icebp
xlat
test
adc
inc
push
xchg
imull
lcall
mov
xchg
mov
add
xlat
je
movsb
add
sbb
sub
lret
fisubrs
neg
xor
sbb
aaa
or
scas
mov
mov
xchg
cli
lret
pop
push
push
push
mov
pop
cmc
and
mov
shl
and
jno
dec
cmc
into
push
in
icebp
test
lcall
rclb
sbbl
pop
lahf
vandps
sub
cmp
test
mov
jns
cltd
inc
adc
mov
xchg
fildll
ds
inc
rcrl
xchg
cmpsb
inc
jge
das
icebp
mov
inc
mov
xchg
aas
jnp
call
sub
inc
adc
xor
mov
xor
aas
mov
sbb
subb
int
popf
lcall
jp
aaa
push
push
aaa
sbb
mov
loope
arpl
fildll
mov
inc
stc
push
or
cmp
inc
push
rorl
push
xor
mov
ret
aaa
arpl
push
insl
inc
stos
fisubl
add
xlat
arpl
bnd
lea
jne
jecxz
orb
int3
imull
je
movsb
jecxz
or
outsl
stos
xchg
xchg
and
es
xchg
push
and
mov
lods
xchg
push
sub
mov
sbbl
sahf
mov
cs
int3
imul
push
out
stos
xlat
pop
mov
or
cwtl
lds
rcll
and
loopne
jno
and
shlb
and
addps
cmp
push
sbb
push
leave
test
outsl
fwait
add
cld
pop
bnd
and
fidivs
out
rcll
xlat
mov
test
lods
fcoml
cmp
push
sbb
nop
scas
pop
movb
pop
inc
xchg
es
cwtl
mov
sbb
int3
push
jnp
push
addr16
jno
push
movsb
ds
cltd
mov
lret
pop
adc
xchg
callw
ljmp
dec
in
dec
or
sub
lods
scas
cmp
xlat
fs
cmp
lret
aaa
or
repnz
mov
out
or
scas
clc
and
imul
and
mov
test
inc
icebp
or
ret
bound
and
adc
adc
and
dec
mov
dec
mov
sbb
dec
das
push
nop
scas
or
push
pop
xchg
xchg
sub
dec
dec
repnz
inc
aad
popf
add
push
sub
test
jns
inc
or
xor
out
cmp
stos
test
cs
pop
repz
out
ret
jne
or
lods
add
lods
push
jne
lahf
loope
mov
and
or
je
mov
movsl
mov
sbb
xchg
inc
inc
sub
imul
loopne
imul
push
push
dec
sahf
inc
jecxz
clc
add
xchg
pop
mov
loop
cmp
int
jbe
pop
mov
xchg
fs
clc
loopne
and
push
dec
roll
ficoms
leave
xchg
mov
dec
and
mov
fmuls
cltd
pushf
cmp
cmp
mov
xor
mov
and
sub
dec
dec
cli
xorl
jns
loope
push
stos
push
push
testb
mov
flds
pushf
jle
insl
pop
adc
mov
lods
mov
ss
repz
mov
cli
gs
dec
nop
pop
lock
and
push
xor
mov
je
ja
and
outsl
sbb
aaa
stos
cmc
xchg
cs
dec
outsl
mov
and
xchg
es
mov
mov
lcall
push
fildll
je
gs
js
test
loop
test
mov
pop
add
or
mov
jo
das
in
paddsb
mov
mov
mov
cmp
bound
aad
mov
stc
cmp
jne
seta
push
and
sti
lock
lcall
insb
cwtl
xchg
shrl
out
shll
xchg
pop
data16
jmp
mov
xor
pop
cs
mov
test
push
mov
out
add
jp
mov
and
lods
sub
inc
aaa
adc
stos
xchg
push
sbb
mov
inc
sbb
idivl
sub
pop
mov
mov
fcomps
jne
pop
lea
adc
fwait
inc
addb
dec
add
dec
pop
popf
pop
or
icebp
mov
sbb
pusha
jmp
mov
jnp
sub
jo
sbb
sbb
out
xor
jae
repz
dec
mov
popa
and
mov
adc
test
adc
mov
leave
add
mov
mov
stc
outsl
jb
jnp
movl
jle
call
insb
imul
out
mov
es
dec
push
lret
mov
ficoml
jl
cmpsb
jmp
push
inc
clc
dec
pop
xlat
adc
mov
outsb
adc
ds
movsl
call
fldenv
in
adc
cmp
and
fs
aad
lret
lods
pop
int3
in
je
mov
sbb
imul
push
sbb
repnz
subl
aad
cltd
jg
repnz
pop
int3
fwait
and
add
xchg
xchg
inc
mov
out
xchg
repnz
adc
cmp
add
adc
push
shlb
jne
cmp
and
and
jo
add
fsts
cmp
ljmp
cld
jecxz
icebp
inc
repz
clc
fwait
out
sbb
repnz
add
rcrb
ret
pusha
push
testl
mov
mov
aaa
mov
lock
daa
inc
sub
gs
xor
pop
xchg
lods
xchg
nop
insl
pushf
outsb
xchg
add
movsb
sub
incl
push
xor
or
mul
out
mull
repnz
lret
lcall
inc
clc
cmp
cltd
mov
sbb
test
cmp
sub
stos
push
xchg
mulb
negb
hlt
adc
xchg
shrl
add
jg
rclb
pushf
mov
rclb
mov
xchg
cld
les
adc
sahf
cmpsb
cld
bound
retw
adc
lret
ja
std
fsubs
enter
sub
add
xor
repnz
mov
cmp
aam
inc
xor
fdivl
int3
and
in
fmull
mov
fidivrl
jp
aam
subb
xor
mov
fucomp
jl
jb
xchg
xor
dec
and
pop
shlb
mov
or
cmp
push
xchg
mov
lea
inc
jne
mov
rcr
bound
jb
popf
fdivrs
jl
cmpsl
xchg
into
cs
xor
pop
pop
popf
daa
scas
cltd
popf
cmp
out
adc
pop
cs
clc
stc
and
cmpsb
out
xchg
xchg
shl
xchg
out
stos
mov
mov
cwtl
sahf
nop
jp
movsl
je
leave
jle
loopne
enter
stos
fnsave
nop
dec
jb
test
stc
das
imul
test
xor
lcall
in
push
or
adc
mov
mov
and
movsl
dec
cmp
sbb
cmp
add
sub
rorl
insb
les
nop
xorb
les
das
aaa
jl
das
jle
adcl
sahf
call
das
leave
inc
fistpll
jae
pusha
ficompl
or
sbb
inc
and
fsubrl
test
jmp
fdivrl
out
rolb
mov
mul
loopne
lods
cmp
lds
out
and
cltd
fcmovu
mov
mov
mov
xchg
xchg
mov
mov
pop
dec
arpl
xchg
push
sub
mov
and
adc
mov
mov
mov
mov
fdivrs
out
adc
push
clc
mov
mov
push
test
cmp
mov
mov
int
insb
aaa
mov
lret
mov
sub
and
and
cmpsb
leave
ds
adc
adc
fs
and
xchg
add
sub
cs
andl
aas
add
lods
shl
mov
lods
call
lret
cmp
pop
dec
sub
push
repz
not
pop
insb
cmp
lahf
pusha
push
dec
and
cs
sub
mov
repnz
les
ss
test
sbb
sub
or
sub
outsb
daa
int3
ret
icebp
sbb
mov
jmp
xchg
mov
movsb
jae
inc
shrb
std
cmp
or
cwtl
popa
bound
shlb
dec
inc
lahf
pop
loopne
imul
lret
push
fsubp
xor
adc
or
and
mov
inc
sarb
lods
je
in
pop
xchg
out
dec
mov
cmp
adc
xor
je
jl
xchg
ljmp
stos
xchg
add
mov
addr16
decb
rcrb
jecxz
lahf
popa
rclb
imul
in
mov
cld
fisubrl
fwait
out
outsb
xchg
movb
ds
adc
add
bound
xchg
pop
int
push
rolb
xchg
adc
pop
push
repnz
xchg
outsl
jmp
mov
cmpsl
push
mov
inc
dec
or
dec
xor
adc
dec
cmp
inc
ja
int
pop
int3
das
cli
fwait
test
mov
dec
adc
imul
xor
mov
push
ss
cmp
mov
jnp
stos
rcrl
pop
stos
out
lods
add
int3
shlb
dec
push
bound
loopne
mov
or
sub
dec
sbb
in
dec
fsubs
in
push
pop
jmp
inc
js
mov
test
inc
jmp
cltd
imul
idivb
dec
xchg
and
or
in
sbb
mov
dec
dec
negb
mov
gs
std
inc
stos
or
cmc
orb
in
aaa
jnp
lcall
inc
dec
mov
push
dec
adc
jbe
xor
mov
int3
jg
dec
mov
out
in
sbb
in
mov
enter
mov
jl
ja
xchg
popf
mov
sarl
xor
lea
sub
stos
and
fstl
imul
outsb
pop
xacquire
shlb
xchg
mov
pop
pushf
fistl
xchg
or
sub
cmp
lret
data16
sbb
push
push
rcll
out
cltd
movsl
dec
cmp
imul
int
ja
mov
repnz
jno
jmp
jb
inc
mov
call
frstor
arpl
and
sbb
mov
outsb
orl
xchg
cs
mov
loope
sti
shr
popa
aad
adc
ljmp
data16
hlt
pop
shrl
mov
pop
adcl
arpl
scas
pop
mov
arpl
sub
sub
pop
cmp
cli
daa
addr16
rcll
lret
lods
and
dec
out
int3
ljmp
mov
daa
sub
sub
push
cmp
sar
xlat
js
outsl
or
cmpsl
repnz
sbb
outsl
pop
out
and
iret
add
xor
inc
sbb
push
insb
or
xchg
inc
daa
fidivl
pxor
addr16
loopne
fdivp
add
or
or
or
shrl
leave
stos
jmp
sbb
and
cld
je
sbb
jo
xlat
out
ljmp
sbb
aaa
ljmp
push
xlat
push
and
mov
cmp
sub
fldenv
mov
jl
lods
cmc
mov
sub
xor
jno
rol
mov
cmp
mov
pop
and
xchg
mov
repz
sbb
jl
daa
and
hlt
lret
out
fisttpl
fsubs
jno
aaa
sbb
mov
push
xor
add
popf
and
add
pop
or
xchg
scas
nop
iret
dec
loop
lock
cmp
sbb
iret
outsl
out
dec
mov
add
or
fistpll
mov
lds
and
sar
scas
shll
std
lret
and
loopne
cmp
or
leave
je
pop
pop
inc
jg
mov
movsl
inc
fisubl
push
ud0
cli
mov
mov
fcmovne
fistpl
ljmp
mov
mov
pop
sar
lahf
test
push
in
xchg
add
adc
rcrl
loop
nop
mov
outsb
addr16
xchg
mov
fbld
jo
jne
testb
scas
sbb
pop
cli
sbbl
sub
aas
stos
adc
jg
mov
jnp
or
jge
repz
mov
clc
jl
jae
test
imul
push
pop
xchg
orb
nop
or
mov
add
pop
ljmp
test
cmp
cmp
pop
pop
cmp
lds
and
xlat
jo
jp
inc
lret
dec
push
pushf
les
mov
rolb
repnz
ret
repnz
icebp
xor
mov
lret
push
lock
fsubrl
les
dec
dec
shrb
shrl
das
sbb
fs
mov
mov
mov
adc
ja
jns
dec
cmp
mov
mov
mov
sub
push
sub
push
sub
dec
adc
cmp
mov
xor
outsb
lcall
in
lcall
dec
or
rolb
xchg
push
and
jb
jp
mov
fcompl
add
cmc
lea
mov
imul
push
addr16
pop
addl
int3
shr
jp
ss
cmpsl
cmp
arpl
test
inc
das
xchg
stc
sub
cmp
pop
popa
push
lret
mov
mov
lahf
adc
cmp
jle
mov
or
jge
xchg
dec
out
scas
stos
imulb
shll
repnz
push
imul
mov
adc
iret
push
push
pusha
sbb
push
sbb
repnz
fstpt
popa
scas
imulb
daa
mov
mov
mov
jno
ret
cltd
push
lahf
lret
jle
mov
adc
lahf
mov
add
popa
add
adc
lods
movsb
daa
es
push
ds
es
jb
lds
out
lret
bts
leave
and
jp
pop
fidivrl
sti
jnp
fucomip
loop
jmp
outsl
sbbl
out
dec
adc
in
xor
mov
push
jae
jnp
sbbl
loop
or
jae
push
aam
xor
xor
mov
or
rep
cld
je
subb
add
js
shrb
cmpsl
imulb
mov
lods
and
ljmp
and
popa
sub
out
testb
xor
pop
adc
adc
jmp
and
xchg
mov
pop
xor
rolb
cmp
jmp
pop
dec
add
xchg
aas
pop
sbb
mov
js
lcall
jbe
xor
mov
test
mov
ret
stos
ds
lahf
pop
in
dec
inc
mov
fwait
imul
xor
push
mov
ljmp
in
mov
sub
icebp
aas
mov
jg
and
test
xor
xchg
push
int3
repz
jmp
je
adc
push
loop
sarb
jp
mov
pusha
xor
sbb
lods
mov
sbb
dec
lcall
adc
cs
out
or
testb
roll
sub
pop
mov
mov
iret
loope
int
jl
inc
xchg
stc
jecxz
sbb
mov
outsl
push
add
std
inc
imull
gs
inc
jge
test
pusha
xchg
xchg
aas
inc
pop
cld
in
or
roll
or
iret
or
std
cmpsb
xchg
xchg
mov
rcl
push
xor
call
pop
sbb
fstl
jg
pop
out
or
or
lock
in
or
mov
jl
mov
and
cmp
sub
daa
mov
sub
xor
xchg
jb
orl
xor
dec
popa
pop
mov
cwtl
pop
out
sbb
xor
and
cmpsb
sub
mov
ljmp
mov
mov
mov
cmp
mov
jg
fimuls
push
ret
push
negb
roll
es
icebp
adc
mov
mov
sbb
rep
push
pop
push
and
stos
jns
addr16
pop
ljmp
jp
fidivl
nop
cmp
and
inc
sarl
cltd
cmp
jo
mov
les
loope
xchg
or
xor
adc
xor
add
mov
push
xor
scas
dec
pop
xchg
jl
xor
inc
imul
inc
mov
pop
or
testb
mov
rcr
into
into
out
mov
in
cmp
jecxz
sbb
pop
push
cmc
stc
xchg
adc
mov
ds
ror
movsl
xor
outsl
mov
std
pop
jl
addr16
xchg
pop
fdivrl
pop
fs
les
dec
pop
and
stos
mov
lahf
stos
mov
stos
ds
mov
push
sti
shll
mov
inc
and
gs
adc
inc
push
aaa
out
and
push
in
insb
outsl
in
lret
sub
in
adc
jmp
daa
jb
clc
cs
cmp
nop
jl
add
and
cmp
aaa
movsl
scas
int3
or
adc
push
sub
lret
popf
cmpsb
push
add
ljmp
xor
lds
divb
mov
pop
cmpsl
stos
push
stos
push
ljmp
das
sbb
clc
cltd
mov
aaa
sbb
adc
or
push
enter
movsl
or
std
shl
inc
out
icebp
jae
cld
inc
stos
push
divb
pop
js
pop
imul
mov
mov
pop
xor
std
imul
pop
fsubrl
in
dec
cmp
inc
testb
loopne
xchg
inc
enter
adc
es
and
popf
cwtl
cmp
pop
out
dec
sub
aad
dec
dec
fs
cmp
dec
jmp
pop
and
add
mov
mov
loope
add
stos
add
add
aas
out
ror
cli
pop
je
inc
mov
jb
out
mov
std
push
add
mov
or
jmp
call
jl
roll
sbb
sbb
icebp
mov
and
sbbl
cli
push
shlb
inc
mov
lods
pop
mov
stc
jae
sti
insb
mov
cmp
ds
xchg
int3
je
push
push
add
inc
sarl
jg
push
imul
out
add
lods
sbb
gs
decb
adc
fld
jle
and
and
testl
test
and
repnz
sub
jnp
lcall
mov
push
roll
bound
jl
iret
inc
orb
js
and
inc
adc
pop
or
jecxz
mov
xor
xor
lods
ds
pop
xchg
mov
xor
cmpsl
int
shrb
popa
cmp
mov
or
insb
mov
inc
push
test
dec
adc
fs
push
mov
pop
mov
out
hlt
out
movsl
sub
jge
les
inc
inc
int
or
lahf
jnp
and
push
test
loopne
mov
rol
fnstsw
shrl
in
cmp
loopne
fst
lock
into
leave
push
aam
ret
std
jne
int3
std
mov
test
mov
cmpsl
pop
movsb
movsl
cmp
faddl
aam
outsb
jo
mov
cli
sub
fnstcw
je
mov
sahf
xchg
sbb
aas
inc
jmp
xor
dec
test
xor
and
lods
fisttpll
and
call
ds
add
xchg
cmp
call
idivb
daa
popf
lds
dec
loope
mov
add
rclb
les
ljmp
mov
sub
sbb
dec
fcompl
cmpsl
repnz
pop
lahf
mov
lods
sbb
and
aam
sbb
scas
fs
shr
mov
mov
mov
pop
push
sahf
decl
das
clc
push
jg
arpl
mov
sbb
movsb
inc
icebp
into
jbe
adc
cmpsl
cmp
mov
pop
scas
addr16
xchg
stos
xchg
in
mov
stos
lods
shlb
xchg
stc
mov
mov
add
scas
aad
mov
sbb
iret
push
push
dec
sarl
repz
or
fistpll
mov
test
xchg
rorl
hlt
shl
sbb
push
sub
mov
adcl
mov
jbe
xor
stc
movsl
out
pusha
lods
ss
mov
lods
sbb
sub
xor
pop
out
xchg
sbb
xor
dec
sub
out
xchg
mov
add
sub
pop
or
and
ret
xor
mov
cmp
aam
adc
push
out
jns
cmp
push
sbb
je
in
mov
out
xchg
idivb
shll
jne
pushf
mov
and
call
outsb
outsb
loopne
mov
pop
jg
popa
sbb
mov
pop
ficompl
cmp
das
pop
jle
imul
roll
inc
pop
ret
mov
mov
sub
pop
push
dec
ja
mov
js,pt
xchg
push
xchg
aas
inc
out
sub
and
loopne
test
sub
adc
es
xchg
outsb
xor
out
gs
lock
arpl
xchg
add
xor
cs
lcall
pop
push
inc
xor
jb
arpl
mov
push
mov
and
lock
and
cmpsl
dec
dec
mov
aam
push
push
and
lret
out
lret
cmpsl
fdivs
pushf
push
cmpsb
sub
repz
out
and
xor
push
dec
pop
bound
stos
das
jnp
inc
lds
out
adc
and
lcall
lahf
adc
lcall
rcll
loopne
shll
mov
aad
jb
and
or
pop
push
ljmp
sbb
xchg
pop
push
ljmp
mov
mov
and
jge
mull
mov
xor
add
mov
sbb
leave
lock
push
xchg
test
add
andl
inc
jge
out
inc
stc
jo
and
inc
and
loop
or
lock
shll
adc
insb
repnz
outsl
fbstp
xchg
jmp
popa
sbb
push
repz
xchg
xor
sbb
sbb
in
mov
shrb
test
outsb
cs
push
imul
iret
and
sub
les
add
pop
ljmp
pop
pop
adcb
shlb
fs
push
add
mov
mov
cmp
xor
ds
test
add
push
jb
and
mov
pusha
insb
adc
fnstcw
jns
sub
ja
fistpl
popa
cmp
push
fsubrs
pop
ret
cs
pop
shll
icebp
notl
mov
push
fisubrl
stc
cmp
push
ja
mov
ss
sub
mov
aaa
cmp
xor
xchg
xchg
leave
aam
lahf
and
repnz
pusha
push
mov
loopne
int3
mov
push
mov
push
adc
cltd
sti
aam
cli
adc
xchg
ret
xchg
mov
pusha
mov
stc
lds
sti
or
adc
outsb
sub
inc
pop
push
sub
jo,pt
lock
in
hlt
jb
jnp
inc
cmp
mov
sti
stc
mov
insb
jb
insb
rcll
sub
iret
bound
mov
mov
imul
std
sub
insl
dec
ror
dec
inc
icebp
mov
out
shr
rcr
xchg
je
mov
cmp
negl
out
loope
into
lahf
mov
call
mov
pop
in
mov
add
xlat
lcall
dec
xor
cmp
cltd
iret
push
sub
pop
inc
arpl
xorb
mov
rol
daa
jae
repnz
xchg
mov
mov
lret
loopne
sbb
daa
push
insl
loope
xchg
insb
xchg
pop
xchg
daa
mov
and
adc
lret
mov
sahf
jae
mov
cmpsl
aad
mov
cli
mov
inc
pushf
xchg
jbe
fwait
add
mov
movsb
xchg
pop
dec
mov
test
test
xchg
clc
sbb
inc
pop
xor
cmovb
adc
outsb
jno
jle
fldenv
sub
arpl
lahf
cmp
sub
mov
or
iret
outsb
cmp
fnstenv
or
xchg
shrb
xchg
repnz
adc
push
jg
mov
dec
push
in
sbb
xchg
cmpsl
lods
jbe
enter
loop
push
popf
or
insb
rolb
xorl
aas
adc
pop
pop
test
xchg
dec
lcall
mov
dec
mov
xchg
sbb
sbb
testb
pushf
jge
sahf
outsl
add
sbb
clc
sbb
add
stos
test
mov
imul
adc
fidivl
mov
mov
mov
mov
dec
imul
in
mov
movsl
arpl
fs
insl
stos
pop
cmpl
push
mov
mov
insb
js
push
cmpsb
fadds
push
sbb
xchg
mov
ljmp
inc
bound
mov
add
xor
sub
mov
push
mov
iret
ret
int
or
sub
mov
pop
adc
or
push
mov
xchg
scas
or
xchg
mov
fs
cmp
sbb
lods
int3
test
imul
push
sub
jp
add
xor
jnp
adc
mov
enter
and
jecxz
add
inc
xlat
stos
movsb
inc
pop
fs
inc
and
cmc
and
not
push
jns
xor
push
out
xor
popf
in
xchg
fstps
sbb
mov
mov
inc
xchg
xor
sbb
into
das
mov
push
loop
mov
pop
push
mov
shll
imul
cld
or
iret
xor
rcl
inc
sbb
adc
mov
pusha
jg
fstpl
repz
mov
ret
cmp
xor
xlat
or
mov
out
dec
mov
insb
ljmp
push
ret
lock
imul
stc
sahf
stos
aad
aad
cltd
push
leave
jbe
cli
lods
push
arpl
sar
out
andb
jl
adc
xor
mov
subb
jnp
call
add
push
xchg
jg
cmp
clc
data16
test
cmp
pop
xchg
fwait
dec
gs
ja
cmp
push
adc
xchg
mov
out
dec
sarl
xchg
sub
jmp
imulb
pop
outsl
fmull
dec
out
jns
popf
rorb
cwtl
jecxz
call
test
pop
jp
mov
sti
inc
mov
ds
push
sbb
push
mov
push
xlat
lods
xlat
sub
lods
adc
shll
jl
jbe
jp
fucomp
dec
add
xchg
arpl
les
cmpl
xlat
mov
fsubrs
ret
nop
or
add
xor
js
sub
popa
mov
push
stc
pushf
xchg
inc
lcall
or
lahf
stos
pop
mov
pop
add
jae
stos
inc
pusha
test
insl
rcr
jb
in
mov
or
dec
dec
xchg
je
sub
rclb
jecxz
cld
insl
inc
pop
rcrl
or
push
add
ja
sbb
sub
js
lret
sub
nop
into
inc
shrl
xor
mov
call
sub
rolb
cmc
add
mov
jo
fidivrl
sbb
jbe
inc
mov
cltd
mov
xor
in
lds
int3
mov
mov
in
xchg
dec
jb
sub
inc
sbb
shl
test
xchg
xchg
hlt
addr16
jnp
flds
mov
pop
push
and
and
shlb
adcb
pushf
pop
enter
pop
in
fmull
xorl
imul
imul
into
in
leave
push
leave
out
mov
not
aas
out
test
data16
dec
cmp
mov
pop
shrb
shlb
and
sbb
pop
pop
push
pop
push
js
inc
pop
xchg
cltd
jmp
xchg
push
push
jns
data16
divb
clc
into
rclb
and
loopne
fwait
into
out
es
daa
leave
repz
fsubrl
mov
push
dec
dec
push
sti
sbb
sarb
cmpsl
pop
mov
sbb
cmp
faddp
sub
aas
and
add
push
dec
sarb
cmpb
mov
nop
ja
mov
subb
xor
shrb
cmpsl
test
ss
sbb
loopne
int
and
push
ss
fidivrs
xchg
cld
sub
sub
dec
jnp
loop
mov
inc
out
sub
cmpb
adc
xchg
cmp
cmp
loop
push
add
aas
cld
ret
stos
arpl
adc
insl
jno
mov
insb
add
adc
jge
add
dec
popf
push
adc
loope
mov
rolb
sbb
xor
push
mov
adc
adc
stos
adc
mov
mov
xor
add
pushl
jnp
mov
sub
dec
aad
cltd
test
push
lret
jb
mov
popf
fistps
pop
sarl
and
or
xchg
sarb
sub
mov
test
inc
or
clc
fcompl
leave
out
dec
xor
addr16
clc
mov
popa
sbb
lahf
mov
loopne
mov
shr
test
cmp
addr16
arpl
or
bound
stc
jp
mov
jno
int3
dec
jmp
jbe
mov
pop
nop
popa
dec
dec
mov
dec
dec
loopne
pushf
lods
xchg
in
or
dec
js
dec
sahf
xor
dec
dec
ficoms
in
enter
inc
inc
cs
out
pop
sub
cmp
pop
fsubrs
dec
fwait
cmpsl
gs
inc
push
test
push
mov
jae
adc
in
repnz
fstpl
mov
xlat
mov
xchg
ljmp
gs
fists
xor
mov
inc
xor
sbb
xchg
roll
daa
push
jmp
xchg
jle
inc
or
adc
lock
add
sbb
dec
mov
mov
push
adc
jo
inc
iret
cmp
xor
repz
mov
pop
adc
jbe
jno,pn
adc
cmp
jbe
aam
adc
scas
movsl
stc
push
add
gs
mov
fwait
xor
cli
cmp
sub
loope
mov
ja
data16
xchg
mov
loopne
std
lods
xchg
jecxz
or
js
fnstcw
out
js
add
shll
icebp
ror
mov
xor
mov
cmc
or
loop
test
dec
sahf
add
stc
pop
test
dec
dec
cltd
xchg
dec
xor
jecxz
cmp
pop
stc
pusha
adc
lods
cwtl
dec
adc
stos
fisubrl
outsl
dec
out
adc
pusha
ret
test
stc
clc
lret
testb
test
andl
mov
mov
jp
and
mov
jge
into
jbe
nop
sbb
addr16
pop
sub
mov
sbb
dec
push
test
mov
push
cltd
push
popf
imul
and
aaa
mov
cmp
ret
repnz
inc
movsl
ret
popa
daa
hlt
stos
jno
bound
je
adc
outsl
mov
or
lds
or
sub
aaa
lret
sbb
iret
data16
mov
test
pop
scas
xor
enter
in
xchg
mov
jno
sub
ret
test
sbb
sbb
jno
leave
jns
mov
push
pop
add
jb
push
cmpsb
xor
push
pusha
jp
sub
jl
push
dec
dec
jno
adc
and
xchg
adc
call
in
xor
pushf
mov
pop
xlat
sub
in
inc
cmc
sbb
sahf
loopne
scas
jle
jno
mov
push
xchg
mov
jnp
or
xor
mov
cmp
xchg
sbbl
jns
rcrl
jmp
pop
push
lret
sub
pop
jo
andb
xchg
lret
lea
xor
mov
bound
jo
idivb
cmp
mov
inc
lahf
push
lods
loopne
je
mov
pop
mov
push
add
std
out
adc
mov
jbe
fldl
xor
repz
pop
loopne
out
mov
xchg
mov
notl
pop
inc
adc
addr16
shrl
jo
pop
popa
aaa
lods
roll
inc
scas
jge
sbb
xor
jg
sbb
scas
movsl
cmpsl
cmpsl
adc
arpl
xor
dec
sub
sub
xor
and
xchg
cmp
ljmp
cmp
int
jns
jecxz
mov
or
push
xchg
mov
daa
cmpsl
push
xor
in
inc
jg
aas
scas
cltd
inc
in
xor
fcomps
xor
adc
mov
clc
nop
insl
jno
mov
jecxz
out
and
mov
mov
dec
add
jo
pop
and
mov
push
mov
xchg
xor
bound
in
pop
out
xor
outsl
sbb
frstor
sahf
and
mov
and
call
int
pop
addl
and
pop
mov
pop
mov
mov
je
inc
repz
mov
lcall
and
dec
outsb
push
cwtl
loop
aaa
loopne
aad
or
lods
aam
aam
repnz
jb
test
pop
push
sub
aad
sub
bound
sbb
adc
and
les
mov
xchg
insb
sbb
jp
imul
mov
mov
and
sbb
mov
cmpsl
mov
or
ror
lock
jo
pop
jae
pop
xchg
adc
dec
aad
gs
lret
xchg
in
sbb
iret
or
in
test
lret
fiaddl
ds
imul
aam
adc
push
jle
xor
imul
jb
xor
dec
sahf
mov
push
stos
or
insl
jno
xchg
fmull
cs
cwtl
in
fbld
xlat
enter
sbb
and
roll
lods
loop
jp
fistpl
roll
dec
jecxz
and
hlt
push
ljmp
jle
loope
call
das
adc
call
jns
in
decb
aaa
push
pop
lahf
int
dec
add
jecxz
lods
xchg
mov
or
dec
jno
push
test
xor
into
sbb
in
inc
bound
sarl
pushf
lods
es
bound
ret
sbb
mov
nop
mov
test
cli
ja
aaa
and
xor
add
clc
cltd
xchg
xor
iret
rol
popl
mov
inc
icebp
cmc
and
les
mov
das
mov
inc
adc
lret
call
cmpsb
dec
cmp
dec
imul
shlb
into
or
cmpsb
mov
repz
adc
ret
mov
daa
sub
jno
outsl
or
das
add
add
sbb
shll
push
pop
xchg
test
ljmp
rorl
xchg
cmp
inc
dec
fdivl
test
rol
insb
dec
jnp
arpl
jns
bound
je
lahf
jno
mov
sbb
outsl
dec
lock
sbb
imul
sub
addr16
jae
xchg
pop
fcomip
shrb
lret
fdivl
insl
cli
mov
cmp
jg
andb
imul
pop
int
push
sbb
out
fnstcw
push
jmp
sbb
mov
loope
clc
and
cmpsb
sarl
add
pop
movsb
rolb
stc
dec
mov
dec
mov
int3
push
jle
icebp
pop
outsb
je
addr16
divb
sarl
dec
das
stc
mov
sbbb
int3
mov
jecxz
stos
test
sti
push
mov
lea
mov
xchg
repz
emms
out
cmp
xchg
inc
mov
mov
pusha
icebp
pop
add
stos
mov
lcall
jl
dec
call
stos
sbb
lods
jae
sahf
stos
inc
lret
adcl
inc
rcl
es
cwtl
repnz
repnz
ror
mov
jbe
jae
xchg
xchg
es
test
aam
push
ss
mov
mov
mov
aam
out
lods
sub
loopne
mov
mov
lret
xor
out
dec
mov
leave
jbe
fldl
push
jnp
sbb
mov
add
aad
jg
jno
int3
in
mov
add
push
out
roll
add
jge
mov
add
dec
push
mov
mov
lock
ss
ja
mov
cli
pop
arpl
pop
or
addr16
notb
hlt
cmc
xor
cli
loop,pn
mov
fs
dec
inc
sarl
scas
enter
imul
ljmp
mov
cli
lret
mov
jae
xchg
add
mov
enter
xchg
add
and
add
sub
lock
xchg
add
add
cmp
cs
repnz
add
das
insl
mov
sarb
xchg
test
arpl
pushf
leave
or
enter
cmp
in
cmpsl
fdivrs
addr16
xor
jmp
mov
mov
xchg
imul
push
mov
fwait
test
push
sub
je
int
test
push
xor
mov
test
stos
jp
add
mov
push
pop
mov
xchg
jmp
sbb
std
std
mov
mov
pop
xchg
mov
jge
insl
outsl
loop
mov
lea
push
mov
jmp
stos
jg
sbb
cmc
pop
push
flds
hlt
xchg
push
sub
and
shrl
out
mov
pop
stos
ja
mov
ja
inc
ret
pusha
leave
sub
popf
sahf
inc
rolb
orl
insb
rcrb
je
or
out
add
push
sbb
pop
sub
loopne
clc
ret
test
imul
mov
std
in
mov
pop
xor
pop
dec
or
je
dec
lods
sarl
pop
xor
sbb
aas
mov
lret
push
int3
lea
and
xor
and
testb
cmc
in
lea
ret
pop
cs
push
fisttpll
fstl
xchg
cmpsb
add
rclb
outsl
dec
xchg
fisttps
sbb
mov
push
xchg
dec
clc
sahf
mov
xchg
jg
adc
adc
test
push
adc
and
jno
aam
cmp
and
clc
lahf
jg
push
mov
frstor
pop
imul
ficoml
and
push
push
loope
mov
loopne
test
inc
rcl
js
mov
mov
fldcw
mov
add
mov
outsl
xchg
and
into
out
imul
sub
clc
pop
and
xlat
fwait
cmp
mov
movsb
push
vpmuludq
adc
inc
sets
in
das
testb
inc
mov
scas
or
in
daa
dec
inc
addr16
imul
incl
cmp
jl
sbb
adc
mov
imul
or
dec
add
dec
mov
dec
lds
addr16
add
adc
pusha
and
shrl
cmc
pop
mov
xor
mov
xor
mov
mov
and
xor
notb
fs
shl
jno
pushf
in
leave
icebp
mov
push
scas
lods
xorl
cmp
ds
cmc
adc
jl
lret
in
jmp
ficompl
jo
stos
dec
mov
push
imul
cmp
sti
rorb
mov
and
dec
mov
cmp
dec
lret
xchg
into
dec
aaa
push
adc
ljmp
mov
xor
fs
arpl
in
cmp
push
into
aaa
sub
inc
in
add
out
fstpl
and
jecxz
repnz
repz
jmp
in
sub
dec
lds
cmp
call
mov
ret
xor
pop
mov
xchg
fiaddl
pop
rcrl
mov
je
sub
mov
inc
xlat
jb
lock
pop
std
mov
jmp
adc
out
sbb
dec
arpl
scas
data16
lahf
and
sub
int
push
pop
xchg
nop
add
push
add
pop
adc
shll
shll
add
jb
inc
pop
inc
adc
jbe
inc
int
out
ljmp
add
lret
add
inc
out
sbb
ja
scas
lcall
idivl
push
cwtl
mov
mov
xchg
cltd
xchg
gs
fwait
sub
xchg
std
std
mov
je
ljmp
pusha
push
fsubrl
or
fsubs
or
in
mov
lahf
aas
pop
lcall
or
add
out
jnp
addr16
sub
mov
push
stc
sbb
lods
sbb
mov
cmp
push
rolb
push
flds
test
dec
sub
push
pop
ja
xorl
inc
loope
lock
mov
lcall
pop
les
push
loope
pop
std
mov
lods
in
lock
fwait
lahf
mul
dec
incl
je
mov
xor
adc
jae
jg
mov
sbb
mov
daa
in
repz
aam
inc
cmp
fldl
adc
sbb
cvtps2pd
loope
ja
mov
out
in
mov
pushf
icebp
pop
shlb
fldt
ss
subb
int
jbe
pop
pushf
xchg
adc
adc
rep
cmp
repnz
icebp
pop
jo
test
sbb
mov
mov
stc
inc
cmovnp
pop
rolb
bnd
pop
cmpsb
xor
jg
push
in
jge
mov
std
pop
pop
and
jo
repnz
pop
jno
mov
shlb
jo
lret
adc
cmp
mov
or
imul
fs
jp
sbb
imul
nopl
push
adc
mov
or
or
loopne
fisubs
pop
loop
ret
adcb
addr16
or
dec
mov
rcrl
int3
or
push
test
xchg
lahf
push
fisttps
cmp
mov
dec
gs
aas
xlat
and
dec
incb
dec
mov
lcall
cmpsb
test
add
jo
repz
push
inc
out
cmp
je
imul
pushf
outsb
in
std
icebp
pop
ret
divl
add
mov
or
pop
testl
daa
mov
out
sub
aad
sti
add
test
movsl
scas
shl
sbb
int3
jbe
arpl
popa
adc
out
lea
popl
sbb
test
rcrb
sahf
sbb
dec
movsl
sub
xor
jns
jb
xchg
es
pop
enter
cmpl
dec
or
outsl
ret
clc
cmp
add
pop
mov
push
notb
xchg
or
lret
addr16
push
push
add
cmp
push
lods
aaa
je
jb
dec
mov
outsb
roll
add
push
icebp
mov
popa
aam
mov
and
jb
inc
idivl
es
jb
xor
pop
pop
pushl
mov
test
add
push
stos
js
leave
neg
ret
scas
pop
jle
jns
popa
mov
jne
cltd
jb
pop
push
in
enter
sbb
shr
push
lock
mov
imul
mov
jmp
stc
std
sub
mov
push
pop
xchg
lock
sbb
mov
push
push
xchg
dec
out
mov
cmc
rolb
push
test
add
adc
or
pop
test
lcall
cs
adc
lds
push
test
nop
insb
dec
in
dec
gs
aam
repz
mov
lret
mov
shlb
and
and
jecxz
add
movsl
dec
bound
xchg
xchg
push
leave
adc
or
sti
or
scas
out
je
into
mov
mov
adc
adc
xor
mov
jnp
sub
pop
sti
mov
jl
shlb
xchg
sbb
sub
xor
data16
jnp
cwtl
sbb
mov
inc
dec
sub
dec
popf
insb
arpl
lods
test
sbb
aas
aaa
inc
fildl
and
call
sub
sti
sub
int3
push
das
push
aas
jno
ss
fdivrs
dec
in
daa
sub
mov
xor
push
test
mov
or
push
ja
mov
cltd
pop
in
inc
rolb
xchg
xor
push
and
aaa
and
lahf
cmpb
xchg
and
mov
mov
fidivrl
adc
mov
int3
xor
or
aam
into
jge
xchg
sti
test
mov
int3
rcll
ja
add
outsb
pop
mov
add
cmpsl
xchg
pop
movsl
ret
inc
rcll
bound
scas
pop
adc
jns
xchg
jo
mov
push
jne
rcl
daa
pop
inc
mov
dec
mov
shr
push
xchg
int
push
rcrb
test
in
in
push
cmp
pop
daa
fsubs
push
cmp
inc
out
jb
xchg
scas
pop
les
pushf
sbb
xchg
lock
and
ss
xlat
subl
shl
movsl
push
cmp
sbb
jl
push
outsl
mov
das
inc
inc
sti
jns
test
pop
inc
rorb
jns
sbb
lret
or
jg
adc
jae
out
mov
andb
xor
cli
inc
mov
xchg
test
sti
arpl
incb
int3
xchg
dec
mov
popa
leave
test
or
int3
js
pop
and
divl
aas
lcall
in
stos
paddsw
and
xchg
mov
mov
dec
adc
test
mov
push
inc
inc
mov
arpl
ror
cmp
jp
or
sub
xor
jl
inc
repnz
mov
mov
push
aaa
aam
femms
inc
xchg
dec
mov
mov
cmpsb
shl
mov
mov
pop
mov
and
mov
mov
aam
and
lahf
cmp
mov
data16
bnd
movsb
mov
and
lock
and
scas
shrl
or
add
repz
jnp
mov
adc
imul
mov
inc
jbe
ret
mov
daa
test
notb
jne
pop
pop
ljmp
push
or
lds
aas
gs
cs
shll
mov
dec
scas
in
push
jne
pop
xor
cli
stc
aad
xchg
pop
movsb
roll
sub
and
mov
push
push
adc
mov
adc
fmul
outsb
xor
in
adc
mov
outsb
cli
lods
jl
dec
ret
and
out
lds
outsb
or
daa
adc
pop
call
aas
das
aad
inc
push
outsb
cmp
test
shll
push
sub
mov
ret
out
adc
mov
xchg
and
in
sbb
and
dec
in
imul
push
push
in
push
mov
cmp
sbb
int3
popa
lahf
mov
leave
sub
lret
shl
in
pop
ljmp
imul
shlb
adc
mov
mov
iret
iret
cmp
mov
stos
shlb
dec
or
popa
int3
push
cli
jg
leave
pop
push
adc
jl
xor
mov
mov
cmp
call
xchg
js
lock
aaa
jg
xor
inc
scas
in
gs
xchg
roll
sub
add
out
mov
imul
call
lcall
jmp
dec
clc
cmpsl
lock
xor
lea
push
cmpsl
xchg
lcall
faddl
push
add
or
sub
sub
cmp
pop
push
push
and
xchg
pop
and
push
mov
or
xor
arpl
enter
popa
xchg
and
push
jp
inc
jge
cmp
cli
mov
xchg
mov
xor
loope
in
scas
xchg
ret
imul
dec
lods
sbb
adc
stc
add
mov
xchg
lds
mov
lds
int
mov
adc
std
in
repz
xor
lahf
test
lret
and
xchg
adcl
jae
adc
mov
imul
xchg
pop
and
xor
jne
push
cmp
shrb
andb
jns
xor
leave
lcall
add
push
cmp
inc
mov
in
xchg
sbb
lret
movsb
bound
push
xchg
jae
inc
ja
cli
dec
mov
cmp
int
inc
roll
sbb
mov
inc
dec
sbb
ja
mov
xor
mov
sbb
push
test
jg
nop
sbb
jb
dec
sbb
inc
push
mov
icebp
out
fwait
lgs
fnstsw
dec
lcall
fs
dec
mov
push
stos
xchg
lahf
shll
push
adc
pop
ljmp
loopne
dec
or
ljmp
pop
or
test
jecxz
xor
pop
inc
jnp
les
fnstsw
push
jp
sti
leave
cmc
mov
and
and
jecxz
test
inc
cmp
add
jbe
cltd
xor
pusha
and
cmp
popf
fldt
jo
outsb
repnz
or
sub
push
pop
and
movsb
aas
decb
pop
call
into
pop
rcl
mov
js
call
jl
cs
xor
sub
inc
xchg
adc
popf
sarl
mov
cmp
push
pop
sahf
gs
ja
shlb
inc
cmp
ljmp
push
outsb
jmp
je
and
lods
mov
xchg
mov
out
push
je
dec
xchg
sub
insl
cltd
pop
add
sbb
ds
adcb
aad
popl
cmp
je
and
jle
fcoms
imul
xchg
lds
cmpsl
inc
mov
push
xchg
test
jbe
mov
mov
adc
leave
into
pop
faddl
push
push
push
out
das
push
pop
jae
jl
push
mov
mov
jns
push
call
push
popa
pop
mov
lods
or
add
xor
or
pop
repnz
cld
push
mov
mov
add
shll
xorl
js
aam
divb
outsl
dec
pushf
push
lea
lods
loope
int3
idivl
cmp
xchg
or
pop
push
les
pop
call
xchg
or
out
daa
cld
cmp
aas
insb
mov
cmp
mov
xchg
data16
inc
rol
push
dec
ja
cld
push
rclb
xchg
iret
adc
jbe
in
add
xor
inc
mov
lock
mov
mov
lds
fwait
mov
sub
jnp
movsl
fildll
leave
inc
cmc
imul
mov
sysret
ss
les
xor
cmp
sbb
insb
andb
fldenv
in
sbbl
fisubrs
jecxz
push
repnz
or
ds
mov
pusha
insb
xor
lods
push
sub
mov
mov
fidivrl
and
and
sub
out
ss
mov
inc
push
push
jo
nop
fsubrl
divb
sar
idivb
sbbl
lahf
ja
loope
setns
or
adc
push
aaa
int
cmp
push
pop
cltd
pop
xor
xchg
pop
pusha
dec
movsl
or
cmpsb
cmpsb
jae
into
jg
jp
sbb
mov
jmp
sbb
xchg
idiv
aas
ficompl
sub
jg
push
xorb
scas
and
fdivrs
push
mov
sbb
les
outsl
lret
subb
jg
push
jo
leave
xchg
add
sbb
arpl
add
fmulp
or
lret
mov
lds
push
ds
sbb
mov
and
mov
cmp
or
aas
inc
adc
xor
daa
movhps
cmp
sbb
mov
push
add
out
mov
cli
jg
jp
sbb
scas
inc
lds
fs
roll
mov
and
or
or
or
loopne
add
push
dec
inc
cmpb
out
dec
lods
xchg
cmpsb
clc
add
lods
adc
shll
ljmp
clc
pop
ja
scas
cmc
ret
inc
xchg
adc
andb
dec
test
mov
cmp
insl
mov
mov
fcoms
or
dec
and
fcmovne
jg
xor
sbb
data16
push
enter
add
orb
jo
sarb
sbb
mov
inc
test
adc
iret
inc
mov
or
or
test
les
aas
cmp
sub
xor
sbb
or
js
mov
dec
sub
fldenv
jl
out
inc
add
mov
xchg
mov
mov
lahf
sbb
jecxz
in
dec
mov
and
and
cltd
pop
cmpsb
insl
sbb
adc
jg
jae
mov
std
iret
repz
mov
imul
in
jne
pop
fisttps
lret
insb
pop
mov
aaa
loop
out
sti
adcl
shrl
cmp
mov
jl
pop
xchg
mov
push
test
add
test
incl
add
add
movsl
pop
or
stos
bound
mov
repz
adc
icebp
sbb
mov
loopne
xchg
adc
cmp
mov
rcrb
adc
mov
jmp
jge
mov
dec
xchg
ljmp
fdivrl
aam
cmc
loopne
push
mov
pop
jge
fcomi
xchg
or
xchg
mov
aas
ret
xchg
sbb
lret
mov
cmp
mov
test
pop
adc
sub
test
and
mov
adc
loop
jp
mov
inc
jl
iret
push
mov
outsb
js
add
pop
js
popa
gs
fstps
push
mov
stos
sub
cli
das
inc
stos
mov
daa
cmp
jmp
mov
mov
nop
mov
inc
repz
and
int3
lods
pop
pop
aad
sub
test
inc
out
push
loopne
or
mov
ret
jle
repnz
imul
decb
cmp
aaa
roll
test
aad
adc
insb
sub
adc
dec
in
xchg
jo
xor
lods
bound
sub
sub
sub
add
dec
xchg
xchg
push
mov
repz
xchg
pusha
or
cmpsl
sbb
outsl
sbb
jmp
xchg
rolb
movsb
ficomps
ror
popf
or
cltd
scas
pusha
xor
fwait
sahf
mov
cmp
cmp
popf
lcall
cltd
and
push
dec
or
in
gs
dec
rorb
stos
scas
sub
clc
int
ret
xchg
imul
out
xor
jg
pop
fidivl
inc
out
sub
sahf
lock
mov
mov
mov
fsubl
adc
mov
xchg
inc
xchg
dec
imul
cmp
sbb
xchg
out
mov
jae
enter
push
sub
incl
daa
mov
mov
outsl
jmp
outsb
mov
loop
aas
mov
stc
in
xchg
repnz
push
xchg
push
mov
sub
idivl
adc
ret
dec
xor
ret
and
inc
cli
aaa
ljmp
imul
mov
push
lock
inc
jb
ficoml
mov
hlt
icebp
xor
std
mov
inc
outsb
test
sbb
inc
mov
and
add
loope
xor
mov
jle
cli
mov
lcall
arpl
ljmp
out
jb,pn
movsb
push
lock
xchg
out
xchg
gs
xchg
movsb
std
xor
stc
inc
push
sub
rorl
arpl
imul
push
pop
dec
pop
fs
cmpsb
jecxz
sbb
cwtl
pop
and
dec
cmpb
fs
push
jo
xchg
je
push
push
jb
fisubrs
stos
lds
jge
jmp
stos
lds
jge
pushf
xchg
pop
nop
sub
clc
mov
and
shl
inc
add
push
push
cmc
add
cmp
clc
cmp
sub
cwtl
cmp
xchg
jo
jns
pop
mov
dec
jp
push
push
fistpl
mov
mov
jne
ljmp
push
test
rorb
add
les
add
and
jmp
icebp
std
test
fisttpl
add
fcmovnbe
xchg
mov
scas
xchg
adc
mov
dec
cwtl
cli
push
mov
and
adc
jnp
lods
cwtl
pavgb
mov
xchg
add
jle
lea
adc
rorl
jmp
dec
lods
push
mov
cmpsb
dec
inc
adc
lea
jp
es
xor
inc
adc
xor
dec
xchg
adc
mov
or
int
sbb
jl
pusha
jg
adc
mov
and
pop
push
push
dec
adc
btc
outsb
dec
das
cwtl
add
jge
shll
adc
cwtl
cwtl
push
push
test
mov
mov
mov
add
sbb
pop
bound
dec
pushf
ret
push
mov
push
adc
rcrb
add
aas
inc
movsb
ret
and
add
test
or
loopne
push
xlat
sub
ss
inc
jg
loop
adc
popa
jp
push
xchg
mov
in
push
jno
mov
jns
adc
mov
ds
xor
adc
fbstp
je
xchg
mov
adcl
popf
fidivl
xchg
or
xor
jg
mov
and
push
sub
ds
adc
jno
je
sub
imul
repnz
mov
pop
mov
jmp
adc
rclb
int3
inc
cmc
cmpl
push
jne
push
add
xchg
in
mov
inc
dec
test
cmp
and
inc
sub
adc
add
sub
xor
int3
mov
jae
lods
bound
add
std
xchg
inc
push
sbb
inc
addl
sbb
icebp
jecxz
xor
into
std
icebp
or
sub
push
dec
add
and
ret
test
test
loopne
popf
cmc
aad
data16
cmc
cltd
lock
int3
mov
adc
pushf
mov
das
rclb
js
hlt
and
loopne
add
dec
movsb
popa
test
mov
dec
repz
inc
pop
int3
push
incl
daa
mov
nopl
std
lock
stos
stc
cmp
fidivs
aad
xor
repnz
push
mov
pop
outsl
shlb
sarl
cmp
sar
jmp
xor
aad
out
jecxz
std
push
and
test
iret
sub
sbbb
inc
mov
push
ficompl
adc
cmpsl
cwtl
mov
xlat
or
out
xchg
mov
fstpt
pushf
or
popa
pushf
aas
sbb
mov
in
push
cmp
adc
mov
adc
jge
xchg
in
inc
ds
in
cmp
lret
in
sub
aam
aas
imul
ss
cmpsl
cmp
sub
mov
sbb
in
jp
pusha
add
push
lock
testl
mov
arpl
repz
iret
outsl
cmp
pushf
icebp
add
div
adc
in
mov
mov
lret
xor
shrb
dec
mov
stos
cli
dec
cmp
cmp
call
xor
mov
jne
xchg
lret
sarb
and
jns
xor
jge
push
orl
test
add
sub
jb
popf
inc
test
xchg
out
scas
leave
push
dec
or
sub
pop
dec
inc
pop
je
push
cmc
fucomp
lea
adc
clc
out
push
xorb
and
enter
cli
pop
sbb
mov
inc
xchg
jmp
lcall
jbe
cmpsl
cmc
add
adc
mov
arpl
fdivr
aam
jle,pn
fcoms
xlat
add
lds
lds
in
int
pop
jno
leave
and
out
sbb
jle
xor
outsb
test
lcall
orb
sub
pop
int3
push
outsl
mov
sub
xchg
movb
jnp
xchg
lock
cmp
sbb
unpcklps
xchg
mov
ljmp
cld
adc
xchg
hlt
push
and
lods
adc
or
repz
mov
fs
pop
je
push
inc
mov
pop
xchg
push
test
xchg
jecxz
push
lret
dec
rcll
cmp
fstpl
mov
je
mov
fcmovb
cmp
or
rcl
jg
pop
xchg
clc
xor
cltd
les
pop
pop
and
scas
mov
movsl
or
fwait
sahf
loope
jmp
mov
mov
mov
ficoms
les
mov
and
sbb
daa
aad
inc
dec
xlat
and
idivb
ljmp
sbb
mov
mov
out
mov
or
sbb
out
cwtl
mov
repnz
imul
test
and
mov
and
inc
mov
mov
imul
loop
iret
sbb
rcrl
xlat
or
cmc
or
xor
clc
addr16
push
pop
sbb
mov
inc
or
sti
loopne
sub
mov
out
cmpsb
jno
mov
xchg
mov
jge
xor
inc
rolb
adc
mov
mov
xor
push
sarb
mov
in
jl
pop
mov
cmpl
shl
shlb
push
push
in
fimuls
mov
lock
in
dec
mov
out
iret
mov
cmp
ja
pop
repz
inc
out
xchg
xchg
imul
adc
sub
mov
icebp
std
imul
push
lcall
ret
xor
decl
mov
icebp
mov
jecxz
mov
lea
mov
pop
add
push
add
pop
push
shl
lods
test
cwtl
adc
iret
ffreep
stc
push
adc
lds
jo
orl
push
ja
fidivrs
subb
adc
dec
arpl
mov
andb
enter
add
lods
ljmp
push
pop
sbb
xchg
js
adc
push
adc
sbb
in
pushf
fsts
xor
pop
jb
push
dec
adc
inc
mov
mov
dec
addr16
inc
mov
jmp
leave
movsl
aad
nop
shll
lds
pop
push
xchg
add
popf
jb
pop
cld
and
adc
in
mov
jge
outsb
or
jge
out
ret
dec
imulb
jbe
and
nop
dec
xchg
xchg
aas
mov
sbb
xchg
int
ds
or
pop
or
push
jns
sar
mov
push
mov
and
cmp
insb
cltd
in
insl
insb
test
imul
popf
cmp
ljmp
adc
fisttpll
push
lahf
mov
repz
adc
int3
popa
test
sub
mov
movsl
cmpsl
jl
mov
test
sbb
repz
adc
pop
adc
mov
jae
mov
shll
cmp
jne
dec
and
fwait
xchg
mov
sub
xchg
cmp
xchg
fwait
pop
mov
push
loope
jno
or
out
jnp
icebp
sub
in
cld
cmp
mov
mov
jno
dec
pop
cmp
lock
mov
cwtl
mov
mov
faddp
mov
insl
pop
sub
lret
cmp
and
jl
std
shrl
jmp
mov
bound
stos
call
dec
jo
mov
jae
es
sbb
sti
je
and
add
out
test
xor
add
cmp
sbb
int
push
and
xor
push
mov
pop
ficompl
test
inc
dec
leave
cs
inc
add
inc
sub
scas
pop
inc
inc
iret
cmpsl
rorb
dec
cmc
jb
and
and
cmp
insl
sbb
jle
cmp
test
fsub
push
or
fsubs
aad
in
pop
mov
sub
les
mov
push
push
jle
add
sub
adc
test
in
mov
lock
pop
cmp
xor
xchg
push
xchg
lods
out
and
pop
gs
pop
lods
sub
test
jecxz
aam
loopne,pt
and
inc
or
jmp
sub
or
fiaddl
push
sarb
clc
ljmp
ljmp
add
sbb
lret
in
dec
mov
cmpsb
aad
aad
repz
jmp
insb
inc
mov
jmp
sub
xchg
or
push
xchg
mov
les
hlt
cmp
pushf
mov
repz
aas
adc
inc
jp
mov
mov
jge
ret
bound
or
jnp
push
fstps
cmp
inc
sti
mov
flds
adc
jmp
popa
test
xor
or
out
movsl
cvtdq2ps
sti
jmp
popa
nop
adc
pop
sbb
xchg
jecxz
adc
mov
and
xchg
jp
mov
push
popf
fnstenv
lret
jae
add
push
dec
in
addb
sarb
popa
lods
sarl
lea
jmp
imul
jp
pop
sub
and
test
jb
and
jecxz
mov
dec
enter
mov
adc
cld
outsl
cmp
rcrb
mov
lret
scas
lret
mov
xchg
fstpt
xchg
pop
ficoml
sbb
xchg
das
inc
mov
test
cwtl
mov
pop
sub
xor
adc
outsb
inc
pushf
loope
mov
mov
in
mov
xor
ret
xor
mov
dec
jle
mov
ret
push
outsl
add
mov
outsb
loop
pop
rorl
enter
push
mov
loopne
roll
sbb
aam
lock
jnp
mov
in
cmpl
mov
pushf
popf
sub
push
fstpt
sbb
or
mov
dec
dec
jne
stos
and
inc
test
insl
mov
nop
and
repz
mov
popf
scas
sti
shlb
push
inc
jg
sub
sbb
pop
mov
icebp
cmp
mul
or
lea
cwtl
jge
sti
cmpsl
adc
test
out
push
xchg
mov
xchg
test
stos
std
loopne
mov
dec
cwtl
jno
mov
shrb
push
repz
sub
cmpl
shrb
push
test
stos
mov
ss
jnp
cld
sbb
mov
and
xorb
mul
adc
inc
push
mov
jecxz
sbb
repz
dec
inc
ja
cltd
jge
jbe
and
subl
insb
jmp
adc
dec
adc
sub
cmp
mov
push
push
xor
push
std
push
add
cmp
loop
rcrl
dec
into
das
xchg
call
fprem1
imulb
idiv
mov
nop
pop
pop
pop
pushf
loope
sub
into
lahf
cmp
pop
jle,pt
lea
scas
mov
mov
cwtl
sbb
popf
add
jmpw
cmp
jecxz
xor
lods
sub
es
incb
sub
jne
leave
cmp
out
xorl
lds
jno
sahf
cmpsl
shrl
cltd
and
push
push
cld
adc
movlps
cwtd
popf
sti
aaa
inc
jmp
out
imul
mov
js
movsl
pop
and
shll
pop
lds
fadds
adc
repz
aas
mov
adc
into
xor
call
mov
lret
ljmp
mov
cmp
ret
and
xor
lock
push
push
push
mov
mov
sbb
stos
adc
movsl
aad
stos
stc
sub
out
fmull
mov
lods
xor
dec
cmp
je
jb
ds
sub
sub
out
cvtdq2ps
incb
pop
xchg
sti
leave
mov
mov
mov
popf
dec
cs
popf
dec
pop
mov
push
jge
or
jae
adc
dec
std
dec
js
stos
xchg
and
mov
lahf
in
dec
loop
ret
cli
call
mov
sarb
dec
in
xor
xchg
or
sub
mov
daa
out
test
jge
inc
jecxz
imul
xchg
insb
sti
movsb
inc
stc
jb
sbb
add
push
sub
rclb
push
les
aam
decl
sbb
mov
cmp
sbb
cmp
dec
movaps
mov
push
cwtl
cmpsl
movsl
and
dec
adc
xchg
mov
xor
push
dec
inc
sahf
inc
xchg
jge
lods
fimull
test
add
pop
test
cmp
movsb
jo
fwait
les
cmp
xchg
fisubrl
cmp
ds
dec
adc
out
inc
jb
insb
fs
xor
aam
pop
ljmp
jbe
xchg
imull
mov
sbb
mov
adc
lcall
cld
lods
pop
mov
in
sub
pop
cmpsl
cltd
inc
push
mov
sbb
inc
je
lods
fwait
adc
ficompl
sub
fwait
test
ror
je
xchg
mov
push
pop
lods
jecxz
xor
aaa
push
mov
mov
cmpsl
fiaddl
mov
jecxz
adcb
ds
pcmpgtw
loope
fsubrs
mov
mov
jno
sbb
sub
pop
push
rclb
daa
pop
lahf
adc
pop
mov
xor
xchg
imul
es
and
and
sbb
sbb
aaa
rol
adc
int
pop
ret
jl
mov
sub
xchg
sub
repnz
outsl
pop
add
aam
add
into
mov
pop
enter
ljmp
js
imul
and
int
pop
subl
lcall
repz
rclb
xchg
inc
sub
stc
add
add
inc
add
pop
cmp
mov
inc
adc
adc
add
mov
les
adc
stos
loop
daa
sbb
push
test
pop
add
push
mov
xchg
and
test
sub
sbb
fs
dec
push
orb
scas
sub
cmp
cmpsl
pop
pusha
xor
mov
les
addr16
pushf
pop
cmp
mov
push
xor
xlat
sub
fistpll
or
xchg
scas
aaa
pop
loop
mov
xlat
jns
fwait
insl
sbb
push
orl
loop
pop
fwait
adc
les
jp
enter
aam
and
into
out
mov
dec
mov
cmpsb
clc
mov
pop
scas
or
push
push
aas
mov
out
xor
ljmp
jnp
add
pop
cmp
pushf
out
ds
or
pop
mov
jnp
inc
mov
call
cli
cs
fisubrs
mov
xchg
sti
add
test
das
sbb
fwait
jae
cmp
jl
and
cmp
in
mov
dec
insl
bswap
enter
pop
dec
ds
mov
inc
std
ret
ret
nop
iret
fnstcw
add
dec
adc
leave
and
das
xchg
adc
push
lcall
insb
lea
addr16
outsb
aaa
sbb
xlat
cmp
ja
gs
adc
stos
inc
test
xchg
les
mov
push
xor
cmp
addr16
jge
push
fmuls
lahf
stos
adc
add
add
mov
push
push
add
mov
inc
shll
arpl
cld
fnstcw
mov
rclb
pop
sti
pop
and
xchg
je
mov
fs
adc
pop
int3
pusha
pop
enter
in
das
ds
mov
or
fwait
cmpsl
mov
push
push
pop
pop
or
pusha
mov
loopne
add
pop
jbe
jge
lret
out
out
rcll
mov
in
pop
cmp
mov
outsl
mov
mov
cmpsb
fsubr
test
pop
lods
cltd
push
jo
scas
cmp
ret
xchg
inc
pushf
cmpsl
lret
dec
js
call
inc
fstl
pop
test
pop
dec
and
push
push
jmp
loop
outsl
mov
repnz
inc
sbb
movsl
outsb
fisttpl
in
ds
jbe
shlb
xchg
sbb
test
sub
mov
lret
and
mov
adc
fcmovu
cmp
xchg
push
pop
rclb
inc
f2xm1
aad
and
bound
add
inc
out
mov
push
sbb
add
mov
and
fmull
add
inc
jecxz
jns
and
push
test
sbb
test
push
mov
data16
xchg
ss
loop
into
hlt
jno
add
or
and
xchg
bnd
inc
cmp
push
xor
pop
jecxz
movsl
push
ss
push
sbb
out
incl
sbb
aas
repz
add
jne
rcrl
fisubrs
and
adc
add
fimuls
add
dec
xchg
cmp
fnstenv
and
lret
cli
mov
ds
adc
loopne
xor
cmp
sub
mov
xchg
shl
bswap
adc
push
dec
insb
or
sbb
mov
inc
cwtl
mov
stos
lods
mov
fcomi
sbb
xor
addr16
popa
jl
mov
xor
add
push
or
dec
mov
pop
push
xor
sub
orl
mov
xchg
test
add
rorl
fisubl
repnz
xchg
dec
jo
pop
sbb
loope
push
rorl
into
mov
das
ds
lahf
pop
cli
in
xchg
subl
pop
xchg
daa
dec
inc
add
pop
push
xor
push
xchg
in
jb
outsl
test
or
lock
push
push
fcmove
push
and
mov
js
cmp
and
testb
and
xorl
in
daa
sub
jae
shl
sbb
fldl
mov
notl
fiaddl
sbb
xchg
mov
xchg
mov
stos
sbb
jge
or
pop
in
fmull
lods
fsub
adc
pushf
hlt
mov
jno,pt
inc
jmp
xchg
fiadds
push
bound
stos
stos
popf
adc
loop
shr
jne
popa
fcmovbe
pop
fiadds
add
cmp
int3
jg
and
ja
gs
fisubrl
pop
dec
jb
lret
push
hlt
in
and
sbb
push
imul
xor
mov
rcrl
out
js
imul
iret
loope
shrl
es
push
out
jmp
das
bound
les
mov
popa
sar
push
or
js
bound
or
bound
out
sbb
and
inc
jl
rorl
cmp
add
xchg
xlat
fnsave
subl
pop
lods
and
mov
loop
mov
push
inc
adc
push
nop
or
not
lds
inc
dec
sub
sub
loope
xor
inc
mov
ds
repnz
jecxz
sbb
mov
aas
add
sub
dec
dec
addr16
jo
or
mov
cs
jae
jns
bound
mov
sbb
fdivp
fsubr
sahf
mov
aaa
inc
divl
sub
jecxz
mov
scas
mov
rolb
scas
adc
xchg
jmp
mov
popa
pop
mov
ljmp
mov
pop
jno
mov
ja
es
mov
daa
test
addr16
fstp
sub
cs
call
lock
loop
js
lret
addr16
in
add
popa
xor
jle
push
les
push
adc
les
out
je
push
mov
in
inc
xchg
sti
mov
pop
jnp
push
stc
cltd
enter
enter
push
xchg
addr16
mov
lds
jnp
mov
and
mov
xchg
lret
or
pop
jnp
jno
sahf
sbb
mov
jnp
jno
jg
mov
mov
bound
stos
jp
or
jmp
push
in
xlat
sub
or
dec
sti
mov
add
adc
es
fnsave
add
mov
cmp
push
inc
inc
mov
ds
or
xchg
jg
jne
pop
pop
cmp
adc
adc
sti
rolb
out
mov
jmp
mov
das
adc
mov
arpl
into
mov
out
cwtl
decb
pop
cmp
add
mov
lcall
push
mov
push
push
dec
xor
ds
and
pushl
sub
mov
negl
push
lret
test
iret
push
push
scas
fisubrs
pop
pop
mov
pop
mov
xlat
out
add
push
sar
lret
and
loop
insl
pop
fsubrl
xchg
or
test
xor
cli
in
inc
imul
add
mov
scas
sub
bound
scas
push
jmp
iret
mov
pop
adc
and
and
mov
inc
cmc
xchg
lahf
enter
fstps
andb
cmp
out
ret
cmpsb
daa
pop
adc
xchg
inc
jl
mov
adc
cltd
int
mov
cmp
inc
lods
mov
out
lret
xor
cmp
dec
dec
add
idiv
sbb
adc
pop
jg
inc
inc
test
prefetch
or
mov
lock
mov
jge
mov
lret
mov
xchg
popf
push
mov
mov
negb
testl
mov
inc
in
ret
xorl
scas
xchg
push
xchg
xchg
pop
mov
cs
repnz
lret
aaa
inc
adc
cmp
les
xchg
mov
add
popf
jp
stos
movsl
jge
bound
add
adc
das
sub
mov
mov
loop
fcoms
mov
pop
dec
push
mov
sahf
das
dec
popf
pop
int3
pop
cmc
push
cmp
pop
push
mov
cmp
xchg
cld
adc
ret
js
pop
push
in
jnp
cld
inc
aas
out
in
movsb
ss
popa
mov
adc
sbb
or
std
jbe
mov
stos
cmp
xor
xchg
mov
fs
inc
fidivs
sbb
call
out
out
les
or
sub
push
dec
xchg
xlat
lret
jge
rclb
rdtsc
jae
xchg
test
das
out
int
cmp
jg
outsl
lahf
cmpb
jo
add
fistpll
inc
scas
call
and
mov
ja
dec
lods
cmp
and
cwtl
jne
jno
aas
or
push
and
push
hlt
push
xchg
lahf
add
stos
clc
cmpsl
sub
cmp
mov
xor
push
popa
xor
jge
leave
stos
and
jnp
cmp
or
push
hlt
and
xchg
cmpsl
pop
sbb
lods
fdivrl
js
sbb
push
push
cmp
jo
adc
into
mov
filds
jb
lods
lea
sub
dec
cli
pop
cs
mov
and
mov
adc
movsb
insl
outsl
ss
movsb
test
fdiv
and
orb
arpl
cmp
pop
in
push
mov
pop
fwait
xchg
lret
loope
jo
sub
adc
or
in
icebp
stc
fisttps
je
les
std
rcrb
cmp
les
mov
rorw
out
mov
adcl
pop
mov
daa
addb
pop
dec
mov
jae
outsl
adc
lods
cmp
pop
add
arpl
adc
jo
cmp
or
jecxz
cmp
out
and
or
imul
sbb
shlb
out
rclb
jnp
lods
andl
cmp
xlat
mov
mov
mov
jp
lods
enter
add
adc
vshufps
xor
xchg
jle
push
push
inc
cld
pop
jl
mov
nop
cmp
fldcw
iret
inc
rcrl
ss
jnp
push
pop
in
mov
test
sahf
adc
adc
dec
das
mov
jmp
xchg
push
stos
dec
or
mov
jne
call
pop
jg
add
xor
xor
xor
roll
fs
test
cmpsb
xor
xchg
push
ficomps
inc
dec
jno
movsl
cmp
imul
sbb
cwtl
pop
out
mov
int
and
inc
cmp
mov
lock
and
data16
inc
mov
cmp
sbb
add
out
xor
in
sbb
divl
pop
inc
pop
pop
add
sahf
pop
fcoms
cmp
mov
push
mov
cmp
imul
dec
xor
dec
and
inc
jecxz
or
push
divl
decl
popf
jecxz
daa
xchg
xchg
data16
stos
outsl
das
pop
push
mov
inc
pop
fnstcw
lods
data16
lahf
and
xchg
fnsave
add
push
subb
ljmp
pushl
xor
ds
lahf
pop
insl
in
movsb
addr16
xchg
add
stos
xchg
xor
jg
fs
mov
sbbb
stc
pop
mov
lds
xor
push
pop
xor
sub
mov
rorl
cwtl
mov
in
cmp
stos
mov
call
ja
pop
iret
lock
rcrb
adcb
xchg
int3
and
dec
cmpl
adc
add
cli
adcb
xor
je
push
nop
mov
imul
test
sti
jp
in
fs
cmpsl
fisubs
sub
inc
cmpsl
and
inc
wbinvd
stc
and
fstpl
js
stos
lods
jle
test
pushf
cmc
iret
sbb
jo
push
fdivrs
pop
xchg
call
jl
mov
jge
push
jmp
stos
adcl
cmp
push
push
xor
mov
inc
andb
pop
adc
jge
arpl
jae
push
jg
sub
xchg
in
push
mov
das
dec
add
mov
jno
jecxz
jecxz
push
mov
mov
pusha
jg
xchg
add
lea
cwtl
push
mov
sbb
jle
sahf
addr16
adc
mov
push
outsb
jmp
and
push
sub
out
fmul
lods
pop
mov
pop
jo
and
dec
lds
mov
sub
testb
pop
and
movsb
push
fstl
data16
push
ljmp
inc
mov
cmp
mov
rcll
rcll
xchg
push
fcmovbe
test
push
sub
cmpl
ret
sub
enter
adc
repz
or
mov
or
jnp
mov
mov
push
fs
ret
cmp
divb
rcll
lods
mov
push
and
test
add
das
ds
pop
insl
data16
hlt
jg
lock
jl
or
and
xchg
inc
cwtl
dec
movsb
push
int3
inc
cltd
or
jo
or
dec
adc
loope
ljmp
jmp
fnsave
cld
cmpsb
pop
loope
jbe
inc
shlb
aas
data16
cld
in
mov
test
sbb
sbb
push
push
mov
ret
iret
rorl
sub
mov
xchg
sub
test
jmp
mov
test
lods
imul
mov
xor
je
mov
xor
loopne
test
push
or
mov
mov
in
cltd
imul
enter
pop
dec
xchg
addr16
jns
adc
leave
scas
cmp
loop
aaa
out
and
mov
sbbb
cmp
and
mov
pop
and
mov
dec
mov
cs
call
test
das
addr16
mov
push
mov
test
sub
dec
push
in
or
rcrb
or
xor
mov
test
mov
loopne
in
or
rcll
pop
shlb
jne
test
dec
ss
int3
loope
fldt
sub
push
scas
mov
pop
ret
push
jne
sbb
fsub
pop
lcall
arpl
inc
lock
lret
push
dec
pop
adc
popa
int3
xor
ja
ljmp
cld
dec
shl
fwait
loopne
jb
pop
aam
pop
jp
aad
xchg
dec
xchg
insl
pop
sbb
stc
and
popa
test
outsb
outsb
inc
xchg
ds
jle
adc
cwtl
fwait
imul
icebp
and
call
out
aaa
ret
adc
sarb
out
and
or
pop
in
push
rcrl
imul
andl
mov
mull
add
sbbb
aad
fisubl
adc
pop
mov
adc
icebp
mov
loopne
mov
cltd
xchg
aam
cmp
sbb
lahf
subl
mov
repz
int
gs
xor
cmp
jns
pop
push
jne
add
scas
mov
out
jp,pn
clc
dec
cmp
adc
jne
sub
add
insl
sbb
pop
mov
ja
dec
cli
ret
mov
sbb
and
mov
loope
jns
enter
std
movsl
pop
sarl
insb
into
outsl
push
and
test
ret
jne
aas
mov
and
scas
push
mov
hlt
mov
mov
data16
cmpsb
xor
and
rcrl
mov
ret
mov
and
mov
stos
cwtl
fimuls
cli
inc
mov
cmpsl
jo
fstps
shlb
out
icebp
lods
cmp
add
dec
xor
jge
out
mov
cmpsl
fiadds
sub
popf
mov
mov
in
jecxz
in
hlt
rcrl
sbb
fs
pop
push
jmp
mov
idiv
les
les
jge
xchg
dec
inc
cmpsb
daa
cmp
or
xor
ret
mov
inc
enter
push
jge
and
aas
aaa
sbb
xchg
lods
xor
inc
dec
xor
adc
add
sbb
imul
in
out
fistps
cmp
mov
adc
scas
imul
out
int3
xor
dec
mov
mov
pop
add
daa
int3
push
jg
das
pop
and
xchg
push
lea
shrb
mov
lret
mov
lahf
iret
fnstcw
aam
xor
pop
movsl
push
stc
lock
add
dec
jg
out
ja
sbb
mov
stos
add
jno
jb
jno
xorb
mov
roll
in
mov
lods
or
adc
mov
push
hlt
cmp
clc
jnp
pop
les
cmp
adc
pusha
outsb
gs
xor
fwait
mov
cmp
in
in
pushl
xor
pop
pushf
mov
outsb
lahf
hlt
cmpsb
cli
or
add
loop
stos
fcomip
mov
fsubrl
adc
nop
mov
jl
add
repnz
add
dec
stos
andl
dec
or
add
hlt
rorl
add
dec
xchg
fs
inc
divl
mov
jle
inc
out
xchg
mov
mov
lock
dec
lret
xchg
mov
pop
push
xchg
push
xchg
cmpl
out
cmpsb
loopne
fmulp
cmc
xor
inc
movsl
imul
xor
lods
mov
sbb
adc
cs
dec
pop
nop
push
inc
mov
sbb
scas
gs
lds
repz
mov
das
insb
ljmp
dec
add
inc
sub
sub
sahf
shr
aas
and
xchg
push
sub
mov
in
xchg
pop
lcall
stos
int3
sub
cmpsl
adc
jp
xlat
cmpsl
jbe
nop
push
orb
inc
testb
pop
jne
out
jge
inc
cltd
fists
pop
xor
cmp
xor
xchg
cmp
mov
push
rcrb
adcb
push
cwtl
sbb
pop
inc
mov
inc
lahf
popl
add
in
lret
jb
or
dec
mov
mov
jno
mov
repz
jp
and
das
inc
insb
dec
mov
xchg
fisttpll
and
fistl
pushf
pop
stos
mov
xorb
add
stos
mov
dec
mov
into
aaa
mov
out
and
movsb
pop
stos
push
jmp
mov
mov
pavgw
cmp
stc
push
pop
in
add
mov
xlat
call
push
push
cmp
mov
cmpsl
rcrl
dec
dec
ret
fildll
xchg
adc
lods
and
inc
push
int3
push
jbe
sbb
add
in
lods
dec
pop
call
push
pushf
insb
dec
cli
je
stos
adc
jo
dec
movsb
inc
pop
lret
sti
mov
cwtl
pop
pop
add
hlt
test
sub
cmp
lods
js
push
sti
lcall
dec
pushf
outsb
push
ret
imul
ficoms
xor
inc
sub
xor
lea
mov
pop
xor
addr16
andb
push
and
pop
in
fwait
sbb
dec
jnp
push
inc
mov
xchg
insl
cli
enter
xchg
in
ficoml
movsb
shll
or
mov
and
stos
pop
and
scas
mov
outsl
gs
sbb
icebp
jg
jo
fs
mov
les
jns
mov
jg
sub
insb
push
sbb
inc
mov
in
in
call
sub
pop
push
imul
hlt
pop
sbb
xchg
xchg
std
adcb
icebp
xor
and
shll
cmp
int
loope
lock
cmp
push
cmp
in
xlat
pusha
popf
add
adc
sbb
mov
inc
ret
mov
mov
pop
aas
mov
mov
or
add
adc
and
cmp
and
xor
mov
inc
sub
xor
pop
and
push
test
push
mov
aad
int3
and
mov
test
imul
js
adc
test
outsb
adc
js
addr16
aam
ret
jl
inc
inc
or
clc
mov
pop
push
pop
fcomps
add
orl
imul
les
dec
arpl
repz
xchg
out
lods
and
inc
outsb
jp
jecxz
sahf
aad
push
push
insb
scas
repnz
sub
hlt
not
lret
jo
js
shll
lods
push
cs
mov
repz
inc
inc
mov
inc
pusha
mov
loop
jmp
mov
sbb
push
es
imul
cltd
out
adc
or
aaa
lret
xchg
bound
cmpl
inc
mov
sub
cli
dec
es
mov
cmpsl
std
push
xchg
rcrb
mov
sahf
mov
nop
or
out
jb
sub
mov
pop
jge
mov
xchg
push
outsl
push
scas
push
mov
popa
and
imul
cwtl
test
inc
insl
push
ret
repz
mov
add
xchg
pop
jno
or
and
icebp
and
mov
mov
xor
in
and
aad
sub
mov
jb
nop
or
jbe
in
movsl
mov
shr
push
or
mov
data16
outsl
loop
dec
sbb
das
or
push
fisubrs
aam
push
pop
popa
loopne
xchg
push
or
rcrl
scas
arpl
test
jle
sub
in
xchg
mov
andl
pop
sti
or
aas
movsb
std
es
push
shlb
xchg
push
fsubr
rcrl
fisubrs
les
iret
popf
arpl
inc
push
mov
dec
loope
rclb
into
ret
push
mov
sub
es
outsl
pop
subb
push
cld
sbb
inc
lea
outsl
enter
jge
cmc
addr16
ja
fsub
cwtl
rclb
faddp
dec
pop
data16
js
movsb
out
scas
xchg
leave
cmp
lahf
hlt
mov
lahf
clc
sub
enter
pushf
push
jnp
inc
punpckhdq
xchg
stc
mov
xor
lret
dec
jnp
repz
dec
jns
cmp
mov
adcl
stos
pop
fdiv
ds
jge
sbbb
negb
add
adc
shll
dec
mov
cwtl
out
adc
dec
xchg
daa
or
std
mov
arpl
jecxz
cmp
shll
or
loop
icebp
mov
push
lds
bnd
insl
lahf
or
mov
loopne
and
xchg
push
aas
add
int
xchg
jecxz
in
and
xchg
mov
lea
into
rcrb
xor
aam
fidivl
push
test
jge
fnstcw
mov
repz
pop
aam
idiv
add
aas
fnstsw
sub
sbb
es
push
lret
push
sti
outsl
shlb
xchg
cmp
mov
fistpll
sarb
int3
pop
pop
shrl
inc
cmp
fsubs
ficoml
mov
or
pop
jmp
push
mov
in
mov
loopne
mov
jo
dec
movsb
and
xchg
nop
add
test
ret
mov
shlb
inc
fistpl
imul
lods
pushf
xor
scas
mov
loope
mov
int
pushf
inc
dec
cmp
repz
cmpsb
icebp
mov
sahf
inc
inc
imul
dec
fstpl
dec
jns
pop
test
lods
sbb
jb
out
fdivl
xor
xchg
stos
sbb
jg
iret
mov
jb
nop
and
idivl
inc
jle
xchg
pop
jbe
mov
mov
inc
inc
imul
inc
gs
mov
sub
or
xchg
int
push
add
inc
push
inc
pop
mov
mov
mov
fs
push
shl
jno
sbb
popa
jmp
jo
jnp
sub
sub
xor
dec
ja
cmp
add
jne
lcall
repz
cld
dec
sub
push
and
jmp
mov
jecxz
mov
sarb
in
adc
xor
loopne
fnsave
repnz
adc
mov
xchg
dec
or
adc
fstp
sub
lods
in
sub
aas
roll
mov
shll
fsubp
fmuls
push
lahf
sbb
mov
rorl
hlt
jo
and
outsb
cwtl
mov
testb
ret
add
dec
jne
jle
cmp
jp
jns
xor
mov
sub
dec
cmp
lret
jne
les
push
pop
jb
ret
rcl
repz
mov
out
xor
and
sub
rclb
mov
arpl
or
out
adcl
and
pop
inc
and
or
mov
stos
fisubrl
sbb
add
xor
mov
mov
dec
ljmp
or
cmpsl
cmp
and
mov
cli
push
push
jecxz
push
sbb
ja
inc
das
and
dec
xchg
pop
test
out
in
insl
jle
faddp
jb
push
mov
push
subb
shll
inc
fcomi
sbb
fidivs
jb
in
insb
push
mov
test
mull
or
pop
fwait
ss
push
cli
dec
mov
xor
jg
or
pop
mov
dec
or
sub
or
cmpsb
cmp
rolb
or
fsubs
cltd
je
into
lea
mov
mov
pop
jne
and
push
xchg
pop
or
lcall
popa
mulb
push
stos
enter
mov
je
xchg
fdivrl
aad
idivl
pop
mov
cmp
test
mov
mov
push
inc
pop
and
arpl
mov
mov
lods
in
fiadds
cmp
push
add
xor
test
lods
inc
fwait
dec
iret
sbb
cld
fcmovu
call
push
int
sub
std
pushf
dec
push
lret
out
lods
cmpl
cmp
mov
rorb
add
sbb
jae
push
fbstp
rcr
fistps
jecxz
std
insb
ja
daa
add
xor
jne
outsb
push
mov
jns
test
test
mov
imul
int
jae
lods
aam
lock
shl
fninit
pushf
pop
push
adc
or
stos
pop
fisubs
adc
xor
imul
insb
in
lret
inc
stc
mov
jns
and
adc
adc
jno
sub
pop
mov
test
sbb
xchg
arpl
aam
inc
adc
fs
pop
fwait
dec
adc
cltd
push
lret
cmpsb
jne
push
add
lods
jle
add
dec
adc
xchg
mov
out
rclb
fs
cs
mov
imul
in
repz
sbb
subl
ret
jo
fcoml
cmp
lock
cmp
lret
clc
dec
mov
lret
popf
out
xchg
int3
pop
loope
inc
out
mov
add
test
lcall
out
xor
pushl
cwtl
cltd
sub
xchg
and
sar
add
sub
mov
dec
cmp
insl
pop
out
inc
jns
mov
and
imul
xchg
add
cmp
mov
push
jno
test
hlt
adc
mov
mov
xchg
test
repz
sub
jb
mov
inc
jo
cmp
sti
adc
and
sti
and
adc
push
test
pop
test
das
fs
and
dec
dec
sbb
cmp
sub
stos
testb
in
sub
lret
xor
jmp
mov
sub
mov
add
add
mov
ret
and
rcl
cmp
int3
and
imul
and
fwait
add
mov
loop
fildll
insl
pop
jns
adc
daa
sub
mov
test
xchg
push
sahf
je
stos
inc
repz
out
ljmp
mov
lret
loop
loope
fisttpll
in
jmp
enter
shl
into
test
into
aam
xlat
xchg
test
imul
push
and
sub
cld
jae
hlt
jbe
es
mov
jecxz
push
dec
cmpb
mov
pop
add
inc
sti
inc
fiadds
or
fwait
jl
imul
cmpsb
pop
sbb
push
movsb
mov
fiadds
push
mov
mov
xchg
ret
into
ret
out
enter
xor
jg
add
mov
cmp
add
push
push
pop
sub
jnp
test
inc
out
pop
arpl
push
jl
outsb
mov
hlt
outsb
mov
and
shlb
in
mov
adc
jmp
bound
adc
out
mov
pop
mov
inc
mov
xor
push
shl
mov
andb
lods
iret
xchg
inc
mov
mov
and
inc
inc
shrl
push
mov
cmpsl
dec
icebp
or
sub
xchg
mov
jg
ret
inc
stos
pop
jns
decl
aaa
popf
nop
out
mov
pop
xchg
jg
clc
subb
int3
pop
call
xor
jb
mov
push
mov
mov
mov
xor
dec
add
mov
ror
adc
mov
cltd
adc
xchg
imul
insl
pop
mov
into
lcall
ss
mov
push
sub
fucomi
inc
stos
lcall
testl
push
adc
xchg
xchg
cmp
inc
pcmpeqb
sbb
or
adc
jne
ret
inc
mov
rcrb
or
adc
inc
aad
addl
fwait
mov
xor
jne
jb
fcoms
cld
dec
jae
stos
orl
scas
xchg
mov
push
mov
push
cmp
movsl
ss
add
or
ja
jmp
fs
stos
xchg
or
cmpsb
mov
sbb
sbb
mov
mov
repnz
inc
mov
loope
xor
stc
decb
ret
stos
fistpll
jb
into
add
lret
pusha
pop
and
inc
cs
loop
stos
mov
fwait
xchg
mov
jns
or
cmp
dec
inc
sub
jb
add
or
daa
scas
xlat
outsl
push
inc
mov
or
adc
adc
jl
inc
jmp
arpl
pop
xchg
aam
jb
ja
rol
xor
jbe
lahf
xchg
popf
std
xchg
xchg
imul
add
xor
cmp
xchg
arpl
es
test
jp
lea
jg,pt
xchg
pop
pop
adc
iret
test
pushf
lret
fxtract
pusha
adcl
outsb
and
dec
cmp
mov
dec
adc
fcmovnb
mov
cmp
ja
mov
ja
in
inc
xor
int
or
sahf
inc
jnp
lods
mov
inc
jnp
cli
out
cmp
dec
xor
xchg
add
stos
xor
ja
and
sub
repz
cwtl
pop
sbb
xchg
sbb
ret
je
test
mov
fmuls
mov
sub
stos
test
enter
ret
jbe
fists
mov
jp
stos
xor
pop
jecxz
sub
mov
daa
sub
outsl
cmp
pop
lahf
mov
adc
sar
hlt
cmc
ja
jl
pop
ret
sbb
andb
dec
and
inc
jp
mov
cltd
mov
int3
repnz
xchg
mov
pop
mov
xchg
clc
insb
add
xchg
jns
jns
mov
mov
bound
xlat
jmp
js
mov
repnz
rcl
add
push
test
add
in
inc
insb
mov
dec
pop
negb
mov
mov
sbb
sub
addb
rcrb
adc
ret
push
mov
lea
xlat
int
xchg
rclb
dec
stos
pop
imul
inc
xchg
and
gs
pusha
loope
movsl
jge
fwait
outsb
cmpsb
push
scas
cli
inc
cmp
mov
sub
push
mov
mov
inc
mov
mov
sub
sbb
out
inc
loopne
test
xchg
inc
and
pushf
jbe
add
mov
jb
cltd
push
das
mov
push
mov
cmp
mov
sbb
pushl
xchg
stc
mov
sub
ljmp
mov
jp
out
sub
inc
arpl
icebp
mov
pop
aas
jae
int
test
popf
push
nop
aas
sti
popa
add
or
push
jmp
adc
cld
out
inc
scas
das
cmc
enter
adcl
fldt
jne
pop
pop
cmpsl
dec
jg
xchg
jmp
inc
xor
sahf
or
pusha
sbb
push
inc
mov
jmp
dec
xor
add
adc
mov
mov
mov
lcall
data16
xchg
mov
les
fmul
dec
out
push
gs
fcomps
xchg
cmp
movsb
push
icebp
out
cmp
mov
add
and
and
xorl
jge
xchg
add
in
cmp
std
in
mov
dec
mov
into
and
mov
inc
sub
popa
out
sbb
xchg
cmp
pop
inc
data16
adcl
mov
pushl
shl
leave
jmp
add
fists
inc
or
shl
pop
and
xchg
add
inc
ret
daa
std
jo
cmp
std
jge
fsubs
js
or
test
push
and
sysexit
cmc
icebp
xlat
aas
dec
lea
inc
fwait
pusha
xchg
cmp
sbb
or
inc
loop
adc
xchg
mov
add
cli
das
pop
xorl
adc
sbb
ret
adc
data16
or
add
push
mov
jecxz
mov
jecxz
xor
in
mov
push
jb
fsubrs
xchg
inc
adc
jecxz
adc
movsl
mov
test
xchg
xor
fidivl
and
out
mov
fcomp
shl
push
pop
loopne
out
jno
mov
jb
lods
cwtl
orb
cmpsl
clc
pop
jl
movsl
push
lods
mov
scas
ljmp
jmp
and
scas
add
lock
into
or
stos
lret
mov
mov
icebp
cmpsb
pop
push
clc
push
test
cwtl
test
pop
and
out
mov
and
add
add
dec
lret
pop
add
aas
xorl
les
and
and
cwtl
adc
mov
add
adc
add
cmp
imul
int
pop
jp
dec
sub
xchg
pop
pushl
in
rcrb
int
adc
and
arpl
xlat
push
inc
push
adc
repnz
cwtl
pushf
ret
fldl
inc
xor
pop
xchg
lods
ss
fnstenv
mov
fincstp
and
push
add
out
div
cmc
xchg
xor
push
mov
adc
popf
mov
in
mov
hlt
cltd
add
sub
test
xor
xchg
dec
clc
icebp
dec
dec
ret
dec
cmp
mov
fldl
mov
jle
add
cltd
push
insb
jo
nop
fbld
aad
aad
inc
push
pop
mov
or
xchg
inc
mov
xorl
xchg
cltd
mov
hlt
cmp
lods
and
pop
out
sti
push
xchg
mov
repnz
add
leave
or
jno
in
mov
xchg
iret
push
mov
mov
dec
mov
pusha
clc
mov
cmp
jo
push
push
push
xor
dec
imul
mov
and
out
rcr
mov
adc
std
mov
xchg
outsb
jl
xor
dec
fimuls
cmp
and
inc
cmp
adc
pop
addr16
adc
bnd
sbb
adc
and
stos
fwait
cs
jb
inc
mov
sbb
add
cmp
dec
dec
out
dec
fs
out
jg
add
or
xchg
or
xchg
jb,pt
lock
icebp
iret
das
xor
mov
xor
dec
add
imul
mov
push
aaa
lock
inc
decb
int
xor
loopne
scas
test
data16
jecxz
mov
mov
xor
dec
pop
or
cmc
push
testb
mov
jmp
aas
adc
xchg
fldl
scas
sbb
addb
cmp
adcb
mov
inc
pop
lret
popa
iret
rcll
xchg
cmc
sub
inc
daa
jnp
pop
test
fsts
insl
add
pop
jno
in
pop
aad
add
sbbl
lds
jmp
cmp
js
aad
pop
pop
arpl
cmpsb
aam
addr16
test
jmp
iret
or
mov
and
jl
fisubrs
sub
and
stos
mov
inc
dec
orb
aaa
sti
dec
mov
sar
loop,pn
xchg
jmp
xor
cli
ficompl
xchg
xchg
clc
in
mov
addr16
test
popa
push
adc
xor
pop
ss
negb
or
out
pop
es
test
pop
add
sarl
out
inc
imull
pop
gs
shl
das
mov
push
in
or
inc
enter
imul
stos
dec
popa
insb
dec
call
faddl
mov
inc
push
push
push
test
shlb
jbe
pop
cmpsl
push
mov
inc
cld
adc
inc
jb
stos
aaa
mov
pop
jns
or
lds
mov
mov
mov
adc
mov
mov
pop
cmpsb
gs
repz
shl
and
xor
loopne
lcall
jb
pusha
lea
or
into
ja
jl
cmpsl
cmp
and
arpl
jle
in
fidivrl
push
mov
xchg
fs
pop
ja
movsb
add
push
xor
in
adc
das
pop
jo
or
sti
add
scas
ret
and
adc
xchg
inc
push
pop
mov
loope
insl
push
jmp
orl
in
in
mov
int3
dec
jecxz
or
push
sbb
or
test
orb
mov
fadd
add
hlt
test
jmp
and
loope
and
jne
sbb
mov
sbb
mov
fstps
inc
inc
rorl
mov
ret
flds
notb
fstl
and
sbb
sahf
fcoml
pushf
or
xchg
lahf
daa
jns
xor
ds
xchg
stc
inc
jmp
std
or
xchg
jle
or
out
adc
pop
iret
push
dec
or
inc
push
outsb
loope
daa
iret
loopne,pt
loop
arpl
mov
mov
sbb
cmp
jle
lods
into
aaa
lock
push
gs
jge
pusha
int3
imul
stos
mov
stc
das
jb
stos
push
scas
lods
movsb
pop
mov
test
jae
cmp
fnstsw
lahf
popf
mov
mov
scas
clc
pop
jne
addl
bound
dec
push
icebp
cmp
sub
fs
lds
mov
xchg
and
dec
testl
aas
lahf
mov
mov
out
xor
sub
push
inc
jbe
push
push
hlt
dec
fcoml
popf
inc
xorb
addr16
lock
push
pop
adc
xchg
mov
dec
sbb
idiv
aad
gs
fstpt
out
and
pop
stos
pop
mov
dec
call
jns
je
loope
lods
aam
jnp
icebp
lcall
fsts
push
lret
jb
push
into
add
push
das
cmp
mov
sbb
in
push
and
mov
jo
dec
pushf
ja
dec
add
pop
ds
and
fildl
in
pushf
cmp
inc
inc
fimuls
fisubl
jns
stos
cmc
push
ret
pop
push
inc
cltd
xchg
xor
shl
in
cmc
ds
mov
les
movsl
lret
adc
lahf
sub
xor
std
dec
xor
fimuls
sub
inc
insl
xchg
inc
mov
cs
nop
daa
push
in
hlt
xor
aas
pop
add
int
int3
or
mov
negl
aad
imul
push
adc
repnz
inc
adc
fstps
xchg
dec
arpl
mov
popf
int3
shlb
pushf
icebp
inc
xchg
mov
mov
call
push
in
jns
dec
lahf
add
mov
into
rorl
aad
pop
fs
in
and
xchg
gs
mov
mov
aam
lret
mov
mov
sub
sahf
mov
pop
dec
pop
dec
andb
xchg
js
cmp
xorl
incb
les
xchg
jae
and
je
lea
mov
or
xlat
dec
movsl
and
inc
outsb
mov
test
test
aas
jne
cmp
or
clc
cmp
xor
or
pop
add
hlt
lea
cmp
push
mov
in
mov
sbb
leave
mov
into
in
call
sub
sbb
push
lret
push
pop
imul
add
sbb
cltd
sub
add
add
xorl
xchg
and
pop
lods
int3
aam
xor
add
int3
hlt
inc
push
imul
out
push
loop
fdiv
push
mov
cmpsb
ret
jo
sub
add
inc
jbe
pmaxub
and
imul
aaa
xor
rorb
mov
fstl
add
mov
sahf
iret
jecxz
mov
or
fcmovnb
scas
mov
xchg
xchg
xor
aaa
popf
mov
lds
or
or
push
inc
jne
pop
pop
aam
sub
push
call
ret
pop
inc
xchg
pop
mov
mov
xor
cwtl
xchg
adc
je
sbb
push
jne
cmpl
xchg
mov
jmp
xor
cld
sti
xchg
mov
jle
adc
enter
and
pop
pop
mov
cmp
sarb
push
js
dec
sbbb
jp
xchg
notl
mov
adc
sti
hlt
sar
jne
loop
sub
inc
pop
hlt
mov
pop
imul
aaa
xor
jmp
and
mov
call
loop
aas
data16
or
jle
stc
popf
inc
mov
sbb
jno
outsl
inc
mov
movsb
lahf
out
lret
xchg
push
ds
out
mov
aam
jbe
fdivrs
cmp
inc
mov
test
sub
mov
pop
lds
fcmovnb
aad
add
mov
enter
movsl
dec
fsubp
jp
mov
jbe
inc
sbb
mov
sbb
push
inc
cmp
icebp
mov
cmp
ljmp
pop
pop
sbb
jl
fisubrs
mov
subb
pop
ffree
jae
lods
je
orl
and
adc
adc
ficomps
les
mov
stos
mov
test
fstpl
pushf
cmpsl
shl
or
test
in
in
mov
cmpsb
mov
pop
sbb
cmp
dec
pop
cmp
sbb
adc
sub
decb
stc
pop
xchg
sbb
mov
xchg
aad
xor
pusha
lahf
shrb
sarl
pop
aam
xchg
mov
xlat
aam
jl
pop
cmp
push
lds
lds
dec
adc
mov
das
jnp
cwtl
popf
cwtl
xor
cmp
das
mov
insl
scas
add
mov
in
inc
cmp
aaa
mov
sub
popw
dec
mov
dec
ljmp
loope
jno
test
fsubrs
int
inc
xor
in
mov
inc
out
lret
flds
mov
cltd
xor
cltd
adc
stos
dec
xor
lret
sub
outsb
xchg
push
sub
jle
dec
xchg
in
pop
mov
cmp
lea
fisubrl
ja
inc
ret
add
hlt
filds
imul
and
out
ss
ss
cmpsl
xlat
cwtl
inc
lds
in
dec
jns
mov
mov
stos
mov
aam
fnstsw
xchg
push
mov
out
arpl
or
movsb
pop
or
addr16
mov
cmp
cwtl
test
jg
and
mov
rclb
jo
arpl
ret
jp
in
jns
xchg
xorb
hlt
lcall
lods
xor
test
sahf
movl
jne
pop
or
dec
ret
pop
les
clc
fcompl
clc
mov
outsl
popf
cltd
and
adc
das
rcrl
cs
mov
data16
ja
pop
jl
imulb
icebp
jge
xchg
push
out
pop
aaa
mov
int3
lea
pop
hlt
push
outsb
and
mov
xor
insl
cmp
push
aam
xchg
add
ret
mov
mov
push
jecxz
adc
sbb
and
jg
es
cmp
or
aam
pop
out
ss
xlat
or
fimuls
ljmp
cmp
je
xchg
stc
jmp
repnz
sbb
mov
test
lret
or
int
ljmp
jle
sbb
shlb
shrl
bswap
mov
or
dec
frstor
cmp
pop
pop
mov
mov
aas
popf
xor
insb
cld
lods
out
orl
pop
xchg
out
xlat
cmp
xchg
adc
jae
cltd
mov
pop
adc
in
mov
xchg
lret
insb
inc
and
xchg
outsl
pop
fldt
daa
mov
adc
paddusb
dec
shrb
loopne
or
sbb
int
add
xchg
data16
dec
and
cld
jnp
popf
adc
out
test
pop
mov
cmp
jle
mov
fldt
sub
popa
gs
in
fs
insl
jo
xor
ja
jecxz
push
jl
xchg
shl
lret
push
lea
fisttpl
jnp
mov
in
cmp
js
cmp
xchg
mov
popf
pop
icebp
mov
popa
xor
outsl
dec
call
int3
sub
mov
mov
clc
jecxz
add
hlt
mov
ror
xchg
jne
or
sub
add
jb
pop
decl
fisubrs
mov
out
cs
sarb
mov
ds
and
mov
mov
mov
xlat
std
outsl
adc
sub
push
sub
add
push
mov
in
lods
pop
jnp
jbe
cwtl
cld
imul
cs
jle
adc
push
jmp
and
bound
add
js
pop
fbstp
addr16
dec
and
rcrl
dec
sbb
ljmp
pop
jno
es
mov
mov
pop
xor
test
cmp
jbe
push
arpl
cmp
add
mov
std
cwtl
or
jo
cmp
testb
push
fwait
mov
dec
cmp
mov
std
adc
pushl
imul
jbe
add
fcmovnbe
sar
daa
mov
push
sbb
dec
sub
push
jnp
lret
inc
xchg
shlb
lock
mov
mov
jnp
lret
iret
cmp
add
pop
jbe
mov
cmpsl
or
push
addb
mulb
in
inc
cmp
outsb
push
repz
imul
mov
imul
fisubl
aas
xchg
imul
out
mov
int
subb
ficomps
out
lock
arpl
insl
decl
jl
add
popa
inc
xor
xor
repz
lods
and
adc
mov
inc
xchg
inc
int
push
icebp
cli
cmp
shl
xchg
sbb
or
mov
push
punpckhbw
ja
insb
xor
xor
sub
xor
inc
repnz
popf
push
dec
lret
iret
es
adc
fbstp
call
movsl
xchg
push
loopne
mov
imul
pop
inc
rorl
addr16
xorl
and
cs
xor
inc
leave
and
andl
je
xor
push
sub
dec
out
popf
inc
out
pop
pop
lea
push
loop
mov
pop
sub
pop
test
mov
fidivrl
mov
int
and
xlat
daa
enter
mov
movsb
incl
ret
sub
pop
das
sti
repnz
jecxz
push
xor
add
xor
lret
orb
insl
or
sub
fnstcw
jne
mov
pop
jg
sub
add
loope
adc
cmpl
repz
stos
das
push
into
aas
sbb
lret
mov
daa
mov
mov
das
fcoml
and
movsb
xchg
daa
es
xor
sub
ljmp
mov
and
stc
leave
push
pop
iret
lock
mov
xchg
push
or
mov
imul
aad
inc
pushf
sbb
icebp
fmuls
ret
ret
xor
popf
in
jge
sbb
lahf
pop
mov
push
xchg
sahf
lods
mov
push
jae
mov
sarl
cwtl
jbe
xor
lods
inc
jmp
dec
push
pop
push
push
imul
sub
and
lds
insl
pop
inc
cmp
mov
aas
cmp
std
dec
pop
add
rorl
lcall
pop
dec
mov
daa
mov
dec
lods
add
mov
push
std
sub
and
xchg
mov
lahf
aam
jo
dec
inc
pop
sbb
jns
stc
idiv
dec
call
leave
sbb
and
and
aad
stos
lcall
pop
dec
into
movsl
rorb
mov
and
idiv
repz
ret
rorl
iret
adcl
push
sub
mov
jge
or
mov
aaa
lds
scas
out
mov
jecxz
sbb
mov
pop
mov
ret
ficomps
es
popa
sbb
addl
popa
int3
bound
das
dec
cmp
cld
cmc
pop
dec
js
mov
in
pop
lret
loop
jmp
repz
add
push
jecxz
test
bound
cmp
xor
stc
movsl
or
adc
push
stc
inc
jl
xor
in
bound
stos
pop
data16
lock
sbb
push
pop
and
test
les
xor
dec
xor
and
push
imul
inc
sahf
lret
or
lds
cmpb
and
fisttpl
inc
addb
mov
addr16
cli
adc
jle
sahf
out
insb
and
out
jb
jne
inc
repnz
mov
scas
jp
xchg
leave
insl
sub
sahf
ret
xor
jmp
cmp
xlat
pop
inc
cmp
scas
xchg
and
shrb
mov
adc
test
pusha
mov
cwtl
call
add
push
insb
into
sub
jnp
mov
sbb
cmp
and
pop
mov
xchg
bound
mov
mov
mov
ja
rcrl
in
js
dec
sbb
xor
das
call
xor
divb
jmp
xor
sub
mov
pop
cmc
xchg
dec
out
filds
inc
shll
insb
jae
mov
gs
sahf
iret
cmp
add
fnsave
inc
push
lock
xchg
inc
pop
sub
sbb
leave
cmp
ret
mov
push
insl
mov
clc
jmp
js
pushf
clc
aaa
jb
call
cmp
mov
vcvttsd2si
cli
push
iret
inc
cmp
repz
out
out
cld
divb
icebp
test
sbb
mov
fcomps
inc
pop
mov
mov
in
sbb
mov
dec
jp
notl
stos
xor
lds
fcomip
cmpsb
sti
push
cmp
dec
jecxz
nop
iret
add
sub
jp
lds
sbb
cwtl
pusha
pop
adcb
and
dec
dec
mov
sub
mov
push
mov
pop
jno
js
cmpsb
pop
push
push
xlat
pop
jge
mov
je
mov
mov
sub
mov
mov
mov
jl
push
inc
adcl
fs
loop
cmp
mov
jp
lret
inc
mov
movsl
pop
pop
mov
hlt
pop
sub
mov
xchg
xor
mov
int3
cmc
ds
pop
add
loopne
mov
push
fwait
push
setl
arpl
and
scas
jae
push
jge
add
push
sub
pop
int3
jno
pop
inc
dec
adcb
sbbl
nop
test
mov
sbb
outsb
xchg
jbe
and
in
adc
and
fbstp
inc
fimuls
sub
push
movsl
out
addb
add
insl
dec
popf
in
lods
in
push
or
jecxz
ret
cmpb
ret
push
fsubs
sbb
test
imulb
aam
xchg
lods
lods
cmpsb
aaa
lea
insb
dec
in
stc
mov
mov
jge
mov
add
lods
and
orl
push
stos
lahf
inc
les
ds
xchg
daa
pop
fmull
das
testl
in
arpl
sbb
jg
adc
sub
pop
into
addr16
in
jl
imul
lds
iret
ljmp
cmp
adc
pop
push
mov
add
das
and
fldt
cmp
mov
add
repz
pusha
mov
and
add
jge
jbe
and
fwait
popf
add
mov
outsb
jb
mov
enter
call
les
mov
dec
and
rclb
mov
push
movsl
inc
cmpsl
or
fs
insl
sarb
jecxz
int
popf
xor
mov
lods
loope
scas
popf
fucom
mov
fidivrl
and
cmc
pusha
xchg
rorb
add
xor
sbb
arpl
xor
test
pop
out
and
in
cmp
out
rcr
add
mov
jmp
das
adc
or
fistps
leave
aam
cmp
jmp
out
xchg
add
push
test
xor
ret
insl
push
push
loope
ret
in
pushf
mov
mov
js
pop
into
xchg
lds
pop
push
shlb
repnz
sub
es
pop
cmc
mov
rcrb
mov
dec
fiadds
push
mov
mov
outsb
pop
xor
call
loopne
cmpsl
push
push
cli
dec
mov
shrb
add
subb
xor
jbe
jae
stos
adc
add
and
setg
pop
jp
xchg
leave
jo
jmp
cmp
sub
jle
or
push
push
sar
dec
and
mov
push
push
xor
loopne
aaa
mov
sar
ss
jecxz
sbb
int
xor
rcr
jp
das
mov
fs
sbb
lea
jno
fnstcw
fisttpll
sub
xlat
mov
jne
mov
cltd
pand
jmp
xchg
mov
jno
jg
jnp
lods
cmp
js
hlt
mov
daa
cmpsl
insb
pop
inc
mov
out
scas
mov
mov
sbb
rorb
sbb
popa
xorl
sub
jne
cltd
mov
stos
pop
ds
fs
xchg
insl
sbb
int
xor
xchg
xor
mov
or
aad
test
bound
pop
push
arpl
iret
push
xor
jnp
mov
ret
sub
mov
aam
pushf
adc
jae
scas
mov
testl
pop
lods
dec
sub
test
inc
xchg
mov
ficompl
jg
fdivs
sub
mov
push
mov
mov
lea
jbe
inc
fcomip
int
ret
out
jae
nop
divl
add
xchg
or
jb
jecxz
lds
sbb
int3
js
sbb
sbb
rorb
in
inc
sub
mov
cmc
inc
int
fisubs
and
mov
dec
int
test
mov
mov
aad
aaa
das
sar
and
xchg
mov
or
in
sub
sub
dec
shr
je
push
mov
jmp
xchg
hlt
ss
add
pusha
out
sub
or
xchg
mov
ret
popa
push
pop
push
push
std
xchg
ja
data16
cs
mov
lret
pand
xlat
sub
rcrl
push
stos
cmp
mov
xor
jge
test
adc
adc
push
xchg
inc
xlat
sub
mov
lahf
rolb
lds
daa
lock
push
mov
sub
rcrl
ds
mov
shr
cmp
dec
addl
jg
inc
fisubrl
lret
das
dec
mov
sub
cmpsl
aad
or
pop
andb
fisubrl
in
jnp
aaa
pop
mov
jns
stos
xchg
fwait
inc
dec
pop
or
xchg
cs
cmp
dec
lock
sbb
popa
sbb
lret
testl
xchg
shll
push
orl
hlt
incl
movsl
int
or
ror
xor
pushf
xor
mov
shrl
cld
mov
inc
xor
or
push
jbe
mov
push
adc
push
stos
inc
or
test
std
data16
inc
add
pop
jnp
cs
bound
dec
insl
popa
push
in
ja
dec
adc
push
das
xor
insl
push
mov
pop
cmpsl
shrb
mov
jb
fistl
fidivrs
outsl
sub
mov
sbb
in
adc
xchg
popf
jb
xor
push
pushf
xor
rol
dec
fwait
in
cmp
jno
cmp
fisubrl
andnps
loope
mov
adc
mov
xchg
and
rcl
dec
or
int
push
push
jecxz
dec
mov
lods
push
push
out
jns
pop
cmp
repnz
mov
rclb
aas
jle
ds
push
orl
sub
adc
xorl
in
or
inc
mov
imul
sbb
jmp
loopne
addr16
lret
jbe
adc
dec
sarb
inc
lods
int3
xchg
push
sahf
cltd
mov
push
rorl
inc
and
mov
test
repnz
hlt
and
xchg
or
dec
xchg
and
cmp
xchg
xchg
cmc
mov
mov
mov
icebp
or
or
pop
xor
mov
pop
out
lret
or
jge
cwtl
fcoml
sub
pop
outsb
roll
gs
leave
cli
in
sbb
aaa
pop
lret
mov
or
lock
xchg
addl
push
scas
sub
sub
cmpsb
loop
mov
or
pop
pop
test
sub
ljmp
hlt
aas
mov
or
insl
mov
dec
inc
mov
fnstsw
out
mov
es
push
sti
das
insb
push
outsl
xor
rorl
movsl
es
adc
es
inc
in
mov
fdivs
xchg
lahf
xor
inc
sbb
push
dec
sbb
dec
mov
imul
xchg
and
pop
adc
inc
movsl
ret
lret
cmp
std
cli
bound
jns
pop
insl
cmp
stc
adc
cmp
xor
inc
stos
mov
leave
cmp
jmp
arpl
rcrl
adc
and
cmp
xchg
test
ret
cmp
xor
sbb
jb
xor
lcall
add
xchg
sub
enter
lods
aas
or
sbb
inc
mov
mov
cmp
xchg
adc
shll
jecxz
loopne
fwait
inc
sub
push
cmpb
cmc
mov
dec
into
pop
bound
repnz
testb
out
call
add
out
push
daa
int
dec
xor
bound
cmp
lcallw
insl
aam
std
imul
mov
mov
push
cmpb
cmp
fcmove
pop
push
cmc
out
jp
cmpsb
lahf
imul
mov
jb
mov
cmc
adcl
and
js
xchg
scas
mov
nop
push
pop
mov
pop
sbb
lret
sub
cmp
cmp
div
stos
or
mov
ss
aam
dec
cltd
push
stos
cvttps2pi
xchg
insb
xor
jle
adc
shll
jno
fwait
ljmp
iret
mov
sub
out
dec
ds
push
jno
popf
lods
enter
push
xlat
arpl
cltd
mov
and
fdivrs
sbb
cmpb
adc
mov
iret
mov
std
and
and
int
lcall
cmp
jno
cli
addr16
xor
dec
stos
adc
es
flds
xor
shlb
xchg
dec
mov
mov
push
mov
pop
mov
sub
lret
push
subl
in
push
pop
dec
add
pop
fdivrl
xor
push
dec
into
test
leave
and
sbb
sbb
xchg
int3
sbb
sub
lret
push
add
add
shll
cmp
sbb
mov
das
in
and
pop
ja
pusha
mov
pop
jl
xor
push
mov
sbb
mov
outsb
int3
stos
movsb
fbstp
test
daa
loope
jae
int3
mov
jno
mov
mov
mov
or
fs
mov
or
test
mov
or
sbb
cwtl
fcompl
ret
pop
sub
pop
lret
aad
sub
pop
mov
dec
mov
int3
jl
cmp
push
inc
ret
cmpsb
test
inc
test
jmp
jno
jmp
faddp
pusha
lods
add
push
adc
cmpb
sbb
pop
movsb
mov
lock
sbbb
int3
les
jae
pop
rorb
add
add
lret
subl
xchg
xor
lret
pushf
jns
lahf
scas
lcall
xlat
xor
adc
cmovg
repnz
fadds
xchg
addr16
and
hlt
stc
ret
aam
in
mov
mov
dec
pop
lods
pop
ret
rorl
push
pop
insb
cmp
or
cmpb
mov
mov
jnp
mov
pushf
inc
mov
mov
ja
or
fs
out
ljmp
les
or
add
negb
in
mov
subb
push
gs
scas
add
test
divb
lret
or
fnstenv
adc
out
mov
repz
mov
jmp
mov
dec
inc
sub
or
aad
popf
push
jns
cmpl
clc
mov
jbe
adc
into
dec
jo
mov
andl
mov
rcrl
inc
arpl
enter
test
add
js
mov
mov
stos
in
test
mov
sub
lret
mov
pop
scas
xchg
jne
sub
sar
mov
sbb
push
out
bound
pop
dec
std
jmp
xlat
sub
or
mov
in
fnstsw
push
sarl
in
cmpsl
xchg
jge
std
call
xor
sbbb
xlat
popf
ret
data16
pop
icebp
dec
ja
movsb
in
and
inc
icebp
hlt
mov
enter
xchg
mov
rcl
jle
pop
stos
sbb
pop
in
push
nop
push
js
lahf
out
jge
fldenv
outsb
nop
data16
push
loop
roll
jl
test
pop
xor
and
xor
das
and
out
push
inc
out
xchg
mov
mov
rcrl
lret
xor
clc
jecxz
cwtl
jp
movl
imul
ret
mov
orb
mov
repz
int3
sar
lahf
pop
lock
daa
call
pop
iret
and
mov
xor
out
pushf
imul
pop
mov
sub
cli
mov
sub
repnz
movsl
mov
loopne
push
pop
push
stc
pop
pop
rcrl
stc
inc
aas
pop
cwtl
cmp
sub
repz
inc
mov
repz
xchg
push
sbb
push
les
cltd
cltd
jbe
mov
test
xlat
in
xorl
nop
aad
push
es
out
pushf
push
fisubs
inc
popa
lock
ret
pop
shl
cmp
or
jmp
pusha
sub
push
aas
and
jne
push
pushaw
jmp
sbb
xor
lahf
xor
pop
mov
inc
add
pop
xor
cmp
sbb
mov
leave
inc
cmc
or
lods
dec
mov
xor
xchg
fmull
mov
add
cmp
mov
ja
arpl
adc
sub
loop
div
ljmp
sub
sti
sbb
xchg
inc
xchg
xchg
or
test
fadds
xchg
sahf
aaa
dec
pop
jge
push
jbe
int3
subl
jns
add
xchg
and
repnz
aam
xorl
call
mov
jle
out
mov
mov
mov
add
mov
jmp
icebp
popa
pop
inc
pop
out
mov
gs
repnz
fcmovnbe
lret
sti
mov
imul
insb
jmp
push
fwait
lret
xchg
enter
sub
into
call
shll
das
or
mov
testb
mov
lcall
je
cmp
mov
ret
xor
jge
popf
shrb
mov
sbb
sub
push
adc
das
gs
xor
jp
cmp
jbe
daa
call
jnp
lods
clc
insb
push
cwtl
test
xchg
pop
fcomip
inc
fildll
xlat
push
lea
adc
xor
in
addr16
push
or
mov
push
test
cmpb
and
push
loopne
dec
je
dec
add
xchg
lods
xor
loopne
loopne
or
mov
add
add
call
insl
or
loope
rcr
cwtl
jle
scas
xchg
insb
fidivs
fdivp
fnstcw
or
ficompl
lods
shlb
and
mov
sub
xor
popf
or
ss
int
aad
push
out
or
sub
ja
decl
lea
push
xor
jae
stos
mov
pop
stc
and
test
cmc
aam
mov
adc
push
push
xchg
or
adc
push
stos
in
lods
sbb
ljmp
mull
fstp
scas
out
aas
std
add
sub
and
dec
js
add
inc
and
in
sbbb
loop
sarb
test
cmp
sub
cli
xor
cld
fwait
movsl
xor
aaa
inc
add
sbb
add
fiadds
aas
mov
addr16
arpl
add
mov
cmp
mov
jbe
and
setg
push
jb
rcll
inc
mov
leave
stos
jo
cwtl
cmp
jg
popa
lods
data16
fldl
xor
movsl
push
jp
xchg
mov
mov
lahf
jg
insb
push
mov
dec
out
push
jae
insl
shl
hlt
rcrl
inc
lret
push
test
in
jmp
jns
aam
xchg
fdivrs
fidivl
in
decl
and
cmp
sbb
pop
xor
movsl
push
add
clc
inc
iret
sub
jo
inc
dec
repz
iret
ficoms
dec
and
xor
mov
les
ljmp
imul
adc
gs
ja
inc
xchg
dec
ficomps
jle
jb
mul
sub
dec
adc
cmp
dec
cmp
sarb
idiv
jle
sbb
cmp
cmp
xchg
jecxz
movsl
and
adc
xchg
mov
sub
pop
mov
sub
push
jmp
sub
pusha
mov
incl
or
mov
cmp
and
cmp
jg
aaa
jo
inc
push
jno
iret
cld
fdivl
cwtl
cwtl
and
mov
sbb
mov
push
dec
push
dec
test
push
adc
out
stc
call
stos
push
mov
jns
cmp
iret
and
jne
mov
mov
jg
dec
push
push
movsl
jb
add
and
xor
fidivrl
jle
mov
sahf
adc
xor
stos
clc
cmp
cmp
push
test
jns
fisubs
das
pop
fs
mov
pop
sbbl
add
xchg
and
mov
insl
rcll
call
inc
xor
test
imul
dec
stos
pop
xlat
aaa
mov
addr16
adcl
inc
inc
inc
gs
inc
les
mov
pop
addr16
xchg
shll
int
lcall
or
iret
pop
inc
jg
sti
negl
pop
fs
faddp
push
aaa
add
xor
jbe
jns
mov
add
clc
int3
dec
sub
into
leave
mov
mov
dec
imul
pop
sti
jns
inc
or
out
add
or
add
stc
imul
testb
sub
lret
adc
inc
sbb
jl
or
adc
push
jle
push
jle
jle
repnz
fistl
dec
lea
sub
clc
cmp
lret
js
add
cmp
dec
pop
pop
mov
sbb
insb
pop
jge
jg
push
mov
mov
pop
jg
shrl
jmp
ljmp
cmp
mov
stos
adc
fisttps
xor
insb
cs
popa
test
fdiv
lea
jg
add
popa
pop
imul
push
sahf
pop
sbb
jl
jae
into
fucomp
jnp
dec
adc
xchg
sub
mov
push
xor
sbb
pusha
cmp
xor
push
mov
call
mov
dec
nop
mov
pop
stos
loope
mov
fstl
mov
jns
les
mov
fldcw
mov
add
pusha
popf
jl
cmp
outsb
arpl
cli
call
or
and
pop
xchg
sbb
push
dec
mov
imul
mov
outsl
aad
push
nop
lods
pop
loop
mov
push
xorb
or
fwait
jno
shr
dec
int
test
jle
mov
ret
adc
das
push
std
push
aad
jecxz
out
lret
and
mov
scas
in
stc
test
bound
sub
test
mov
std
in
lods
pop
jecxz
enter
jmp
sbb
sbb
adc
cmp
js
lds
das
pop
pop
rcr
inc
or
and
cmp
or
pop
test
es
push
cwtl
mov
mov
sti
icebp
xor
div
out
fs
sbb
cmp
cmpsb
lret
loopne
aam
inc
out
fstl
push
sahf
je
pop
rcrl
pusha
es
or
inc
sub
or
jge
call
das
loope
outsl
stos
jb
pop
mov
inc
mov
ret
pop
sub
dec
mov
xchg
add
mov
mov
out
dec
ret
sti
push
mov
clc
icebp
xlat
pop
push
adc
add
inc
cmp
ss
cld
jmp
das
fisubl
mov
das
adcl
fdivs
xchg
push
mov
push
movsb
pop
pop
jno
aad
mov
mov
stos
cwtl
sti
add
pusha
cmp
scas
das
stos
cmp
jae
rcll
negl
mov
sub
sbb
bound
inc
arpl
repnz
jbe
xchg
or
or
mov
aad
in
lret
popf
cmp
push
mov
orb
inc
clc
or
loop
jecxz
cmpsl
int3
ficomps
in
shlb
in
fsubrs
pop
insl
les
adc
fiadds
jge
xchg
je
pushf
jae
cltd
sbb
jbe
icebp
ljmp
aad
pop
adcl
add
mov
int3
in
shrl
dec
ret
mov
push
push
fs
stos
addr16
or
lods
in
in
jno
lret
inc
pop
cmp
mov
fdivrp
xchg
inc
into
xchg
ficompl
lret
add
cmpsl
imul
adc
lods
mov
shlb
pop
jmp
les
sub
dec
mov
or
loop
in
push
pop
inc
cltd
call
dec
test
xlat
scas
push
lods
in
jmp
stc
jmp
push
xchg
jp
mov
adc
jp
das
js
mov
lock
jmp
cli
fidivl
push
iret
pop
mov
add
popf
leave
sbb
and
jne
mov
jle
mov
dec
mov
inc
jmp
add
xor
or
divb
std
sub
adc
dec
jno
sti
push
pop
dec
mov
mov
jecxz
mov
jge
aaa
xchg
push
mov
lock
pop
lss
lds
jns
rorl
or
push
inc
cli
stc
scas
mov
add
xchg
ret
jmp
adc
pop
and
xchg
xorl
outsl
mov
popf
hlt
lret
inc
stos
xchg
test
repz
and
push
aas
jae
xor
cmovge
add
aad
pop
imul
xchg
sahf
notl
xor
sub
jnp
push
ds
add
cmp
adc
in
add
pop
std
or
cmc
dec
fs
test
dec
int3
dec
or
divb
scas
pop
jo
xchg
iretw
mov
and
xchg
sbb
icebp
sub
inc
mov
sarl
lods
mov
sbb
sbb
test
mov
sahf
loope
or
cld
push
dec
jle
sbb
inc
shlb
loop
es
pop
push
gs
xchg
scas
add
jg
add
and
rcl
adc
cld
shlb
sbbl
test
sbb
cmp
rcrl
leave
fnclex
pop
sbb
inc
sbb
add
cmpsl
jmp
insl
push
xchg
jge
mov
mov
or
cwtl
push
pop
jbe
xchg
cmpsl
dec
and
push
scas
into
sahf
cli
sbb
push
mov
mov
arpl
xchg
ret
mov
push
push
sbb
pushf
adc
into
inc
shrl
movsb
sbb
or
xlat
nop
dec
cwtl
push
movsl
rcll
mov
xchg
cld
inc
test
jmp
sbb
jnp
push
mov
add
push
iret
jge
cld
lea
mov
lahf
pop
int
sub
pop
into
movsl
mov
fldt
test
sub
sbb
xchg
loop
push
shlb
je
push
xor
mov
test
lahf
jecxz
mov
fucomp
cmpsb
cmp
popa
pop
cmp
push
sti
ds
addl
xor
rclb
out
mov
mov
or
bound
adc
add
lock
xor
outsb
dec
std
and
pop
aaa
dec
sbb
sub
frstor
imul
arpl
mov
loopne
loope
popa
mov
xlat
pushf
add
std
adc
stos
pop
mov
sub
shlb
dec
daa
popa
xchg
inc
cmp
adc
mov
xchg
inc
jl
pop
mov
nop
push
iret
dec
mov
jmp
adc
mov
push
adc
cmp
dec
je
sbb
in
push
and
dec
sbb
pop
cs
mov
pusha
xor
xor
in
add
lret
pop
test
mov
push
filds
push
push
aad
hlt
xchg
jmp
mov
and
sub
sbb
iret
xchg
mov
jmp
in
sbb
shll
or
bound
adc
jmp
jnp
jb
fsub
jge
aam
xchg
or
stos
das
mov
clc
xchg
addl
dec
daa
cmp
ret
lods
or
or
mov
adc
scas
out
je
pop
test
mov
adc
push
es
cmc
fwait
stos
outsl
clc
mov
mov
xchg
adc
cli
add
test
add
mov
and
jecxz
and
inc
or
test
aam
xchg
cmp
pop
repnz
ja
std
das
rcll
xchg
sub
inc
mov
cli
fdivs
ss
inc
negl
or
fsubs
add
push
pop
lret
fsubrs
add
dec
push
mov
sahf
stos
mov
push
sub
sahf
repnz
out
add
sub
inc
xchg
xchg
mov
and
xor
xlat
pop
and
jle
dec
fdiv
jns
push
xchg
out
outsb
sub
jnp
dec
add
popf
ds
das
push
ljmpw
xor
imul
or
ret
cmp
repnz
movd
push
inc
pusha
stos
lods
fadds
push
addr16
xorb
dec
xor
inc
inc
jne
mov
sub
imull
sbbb
outsl
and
mov
add
sbb
cld
mov
in
call
xorl
push
xchg
pop
sbb
lcall
cmp
jge
lods
data16
dec
sti
or
jl
rorb
push
or
out
add
es
lods
lahf
scas
loopne
in
pop
lret
pop
or
push
push
sti
jbe
cltd
mov
add
add
scas
mov
addb
and
mov
jno
push
cld
fdivs
jo
xor
int
ss
add
pop
call
inc
js
lods
mov
add
fldz
test
pop
imulb
cmp
ret
and
add
movsb
jbe
jb
add
push
jae
scas
jne
stos
push
nop
xor
jp
sub
or
jg
movsl
rcrl
mov
jns
imul
push
push
jae
jecxz
pop
sub
es
lret
ret
clc
rcll
stos
sbb
sub
mov
inc
and
pop
and
and
mov
out
mov
int3
lcall
jmp
mov
popf
dec
dec
ret
les
push
mov
fildll
mov
xchg
mov
push
xchg
mov
inc
sub
data16
dec
aad
arpl
xchg
xchg
sbb
leave
xor
jmp
and
sbb
scas
test
jl
movsb
nop
cmp
fcompl
cmp
xchg
pop
cltd
insb
pop
fadd
cmp
imul
inc
es
arpl
rol
out
inc
je
sbb
ffreep
inc
push
xorb
in
mov
outsl
xor
jne
mov
rcrl
call
sbb
ficompl
inc
mov
dec
jle
cmpsl
lahf
pop
out
push
aad
jmp
outsl
outsl
mov
icebp
test
sarl
fildll
shlb
mov
push
mov
push
bnd
inc
popf
mov
jnp
loopne
push
pop
int
add
and
push
es
fwait
inc
hlt
leave
xchg
outsb
pop
in
jns
mov
arpl
push
rcl
ret
sbb
decl
and
adc
mov
or
push
pop
outsl
in
fdivs
insl
lods
cmp
xchg
fucomip
adc
push
dec
and
lcall
mov
sbb
shl
adc
lahf
sbb
lahf
and
andl
repz
pop
mov
cmp
sarb
pop
pop
je
out
stc
add
enter
fs
sub
addr16
movsb
jle
add
add
mov
nop/reserved
pop
loope
and
shlb
inc
inc
mov
fistpl
cmp
mov
icebp
les
xchg
sbb
dec
sbb
lcall
push
and
lods
push
pushf
pusha
dec
mov
jmp
loop
lods
repnz
adc
pop
rcrb
mov
jno
mov
push
test
push
dec
sahf
or
test
stos
adcl
clc
xchg
and
rolb
test
and
out
xchg
vmovntps
shll
jns
pop
mov
fsubs
dec
lds
shr
jg
sub
or
sbb
xchg
jge
popf
sbb
push
inc
in
test
int3
data16
idiv
jne
das
mov
fisubs
sub
xor
lret
sub
lea
sbb
inc
jo
or
cwtl
mov
ss
jle
push
pop
shr
push
icebp
and
mov
add
insl
sub
and
out
loope
std
jo
sbb
dec
xor
sbb
int3
push
popa
push
adc
test
loope
add
inc
dec
loopne
insb
inc
clc
sub
pop
loop
dec
je
movsl
inc
mov
xchg
rol
fmuls
cmpsl
cwtl
push
xchg
repz
xchg
inc
push
ja
dec
mov
pop
ja
mov
lahf
xchg
sub
jne
or
push
add
jp
out
cmc
stos
ja
test
inc
daa
pop
jp
mov
insb
loope
sub
sahf
xchg
push
pushf
daa
add
adc
js
fsts
enter
pushf
div
clc
xchg
mov
dec
jecxz
ljmp
icebp
cmc
scas
stc
gs
icebp
push
mov
scas
cld
mov
xchg
and
jb
jo
push
sbb
adc
adc
sarb
xor
mov
in
pop
adc
mov
sbb
adc
xchg
clc
lea
dec
loop
les
test
inc
cltd
ss
out
test
adc
int3
xor
and
cmp
sub
xchg
popf
je
fsubrl
xchg
jmp
icebp
cwtl
mov
mov
add
add
mov
nop
pop
dec
jg
push
lret
adc
or
inc
addr16
mov
xor
cmp
in
aas
pop
loop
lock
mov
sqrtps
cmpsb
nop
xchg
xchg
rolb
dec
cmp
notl
push
popa
sarb
ljmp
mov
xor
xchg
mov
and
jbe
add
push
nop
orl
push
imul
inc
jl
mov
mov
sub
inc
icebp
dec
rcll
arpl
loope
mov
mov
add
xor
jo
movb
inc
mov
loopne
outsb
loope
bound
lea
insb
int3
js
push
xchg
mov
fsubp
adcb
sti
inc
adc
movsb
inc
ljmp
mov
mov
add
es
sub
mov
leave
sar
pop
cmpsl
xor
fcoml
adc
js
dec
xchg
cmp
dec
xchg
push
jae
cs
ret
daa
adc
jno
mov
mov
inc
cmp
fnstcw
aad
js
popa
xor
push
ds
rcl
lret
hlt
ss
add
adc
xchg
xchg
hlt
mov
test
push
cld
push
or
ret
adc
mov
and
cmp
mov
jnp
mov
sub
into
scas
xchg
shl
jns
push
sub
cwtl
popa
stos
add
mov
sbb
sbb
add
or
into
mov
sbb
inc
std
adc
sahf
clc
pop
pop
cwtl
jns
cmpsl
mov
sub
pop
call
rclb
sub
dec
fs
sub
inc
adc
arpl
inc
jl
mov
push
dec
mov
cmp
ds
fisubl
fisttpll
and
bound
lahf
adc
cmp
cmp
or
in
shll
cmpsl
cmp
mov
jbe
lcall
cmp
and
jmp
pop
adc
outsl
mov
push
mov
loop
imul
add
add
lods
icebp
rcrb
xchg
in
mul
into
push
lods
mov
lret
cli
js
push
in
add
cld
icebp
jecxz
repnz
idivl
xor
push
adc
inc
jle
push
ljmp
fimull
vpdpwssds
idivb
or
sbb
addr16
rolb
insb
dec
cmp
loopne
enter
push
push
mov
and
push
sbb
test
shll
mov
and
nop
das
test
sbb
xchg
add
ljmp
xor
push
in
icebp
pop
aam
pop
fwait
inc
call
insb
lods
push
adc
dec
enter
stos
inc
test
sub
lock
aad
inc
lahf
test
and
and
adc
pop
mov
sbb
sub
mov
add
test
mov
adc
stos
sub
fdivl
push
scas
test
jp
inc
jnp
mov
mov
shrl
cmp
mov
popa
fucomp
inc
jnp
call
loopne
loope
lds
out
add
xlat
push
in
xchg
call
lock
xor
lahf
xor
outsb
add
addb
push
lahf
push
popa
and
fld
outsl
add
mov
pop
jae
push
decl
mov
aad
push
iret
sbb
fsts
call
orl
adc
push
je
jl
popf
inc
inc
xchg
dec
xchg
push
sahf
mov
mov
lock
out
push
xor
adc
inc
ja
mov
fistps
mov
in
leave
inc
je
mul
insl
cmpsl
mov
add
jbe
mov
mov
loop
popa
pop
enter
jnp
cld
testl
cmp
inc
push
lret
out
call
push
sbb
test
mov
sbb
das
cltd
aam
add
lcall
push
fists
or
or
push
pop
cwtl
popf
cmp
sarb
imull
xchg
pop
hlt
and
imul
jb
xchg
and
and
mov
pop
fs
cmp
jnp
jge
add
sub
sub
int3
adcl
in
mov
out
fwait
add
dec
or
jle
xchg
popa
xor
insb
sub
mov
popa
xchg
dec
les
sub
fnstsw
fimuls
out
mov
inc
mov
ja
lock
or
cltd
cmp
dec
sub
loopne
cld
movsl
popa
inc
pop
inc
and
sub
test
leave
push
insb
pop
out
jns
sar
adc
add
sub
push
inc
xchg
rcll
aam
loop
rcrl
push
dec
jne
pop
and
pop
into
lods
xor
cld
fucomi
bound
adc
sbb
lods
jnp
xor
xchg
inc
shrb
int
xchg
test
sbb
mov
cwtl
jb
cs
sbb
cmp
ficoms
cld
jl
jo
xchg
mov
and
mov
jnp
stos
test
cmp
dec
je
pop
lds
pop
xor
loope
pop
sbb
jmp
dec
cmpsb
fsubl
fdivp
mull
ss
and
cmc
std
popf
cmpsb
cmp
dec
mov
iret
ss
inc
mov
rcrl
push
sbb
addb
dec
add
mov
lds
imul
in
and
loopne
aad
or
rcr
adc
sbb
add
test
xor
mov
push
fildl
ja
and
mov
adc
subb
enter
xchg
mov
jmp
ja
sub
or
rclb
xchg
xor
xchg
rcrl
cli
data16
add
pop
movsl
xchg
lcall
push
cmp
pop
in
stos
imul
add
pushw
ret
add
inc
das
sub
fcompl
lds
or
mov
pop
cmp
fildll
push
pop
push
dec
roll
ss
adc
repz
cmp
or
cld
inc
sbb
jns
leave
and
loopne
inc
or
adcl
jecxz
and
dec
ja
test
mov
cld
pushl
xchg
xchg
shrl
fdivp
cltd
dec
mov
jg
arpl
jg
or
inc
fistps
sub
shl
ret
fidivrs
mov
jmp
cwtl
test
mov
sub
pushf
push
mov
aas
popa
ret
xlat
pop
dec
push
lea
iret
mov
xchg
dec
push
out
and
xchg
add
sub
cmp
divb
cltd
loop
push
jno
cltd
outsb
dec
test
mov
into
sbb
std
pop
inc
jmp
xor
sbb
test
leave
cmp
mov
inc
push
mov
mov
stc
and
cmp
cmp
add
loope
pushf
in
xchg
call
xor
rorl
leave
loopne
mov
movsl
stos
adc
ds
int
sbb
sarb
mov
jp
jl
out
sbb
clc
pop
ds
cmp
push
aaa
std
rol
shrb
sbbb
cmp
popf
scas
sahf
out
jmp
repz
aam
popl
adc
daa
shrb
ds
push
jl
arpl
and
sbb
scas
rclb
mov
test
push
ljmp
sbb
rclb
mov
and
shrl
push
icebp
mov
xor
add
scas
pop
mull
fadds
mov
sbb
add
stc
xchg
xor
fsub
dec
xorl
ficompl
addr16
mov
jmp
xchg
push
push
pop
into
jle
mov
inc
inc
cltd
into
inc
push
popa
insl
ret
je
loopne
stos
sti
hlt
jns
in
out
subps
ret
sbb
jae
and
movsl
stos
and
les
push
test
jp
or
sub
pop
sbb
or
gs
xchg
add
jns
fwait
cmpsl
xchg
les
push
rcll
ds
adc
outsl
xchg
and
cmp
shl
cs
insl
cwtl
les
js
cmc
sbb
mov
nop
out
xchg
fcomps
push
cmc
scas
sar
pop
fwait
xchg
loopne
add
lahf
mov
in
push
shll
loopne
pushf
nop
pop
rcrb
mov
cmp
jo
xor
xchg
adc
jmp
and
dec
adc
aaa
mov
addr16
cmpsl
mov
mov
jl
add
test
test
insb
in
and
and
inc
add
mov
jl
sub
push
mov
inc
cmc
int
ror
sub
out
pop
or
cmp
xchg
inc
push
cs
push
dec
cmpsb
jbe
jecxz
lret
dec
test
mov
insb
outsb
pop
mov
es
stc
sti
dec
xor
push
jbe
xchg
jmp
stc
out
dec
dec
lret
sti
jbe
ljmp
int3
int3
aam
es
in
fidivrl
pushf
rcrl
dec
xchg
push
or
sub
mov
stos
or
mov
jb
cmpsl
pop
lret
jae
xor
jb
bound
add
jns
jno
mov
enter
call
mov
aam
in
jmp
enter
test
fabs
data16
rolb
cmpsl
mov
pop
add
jne
dec
cmp
xor
mov
aam
clc
sub
in
mov
adc
rclb
loope
add
cmpsl
jnp
shlb
outsb
dec
in
lock
gs
int3
push
pop
inc
in
pop
dec
dec
sbb
mov
xor
dec
inc
call
call
gs
xorl
sahf
jecxz
out
dec
xchg
add
lods
icebp
mov
or
mov
push
stos
in
sub
jle
dec
inc
jb
popl
cmpsb
jnp
jne
add
jb
pop
fcomi
xchg
or
jno
add
ret
lret
test
xor
aas
adc
ss
xor
sub
orb
pop
decb
mov
into
divl
sbb
mov
xchg
push
or
cmp
inc
mov
ret
jmp
movsb
das
scas
rcrl
test
push
test
test
lcall
push
rclb
add
test
test
movsb
inc
inc
clc
fsubl
das
pop
lock
lea
mov
fcomip
pusha
jae
lret
jge
addr16
add
xor
popf
cltd
adc
xchg
sbb
sub
insl
sub
pop
insb
movsb
pop
adc
in
mov
shl
ret
ss
adc
cmp
aam
call
stos
xlat
add
sub
mov
push
jns
mov
sbb
push
mov
shlb
mov
decb
adc
lods
adc
xchg
aad
push
push
and
ret
jp
adc
daa
fwait
dec
lret
mov
lds
ficomps
imul
xchg
sub
jae
or
mov
mov
fldl
and
outsb
ljmp
das
cmp
xor
push
jo
movsl
or
xchg
mov
jl
sub
mov
sub
subb
scas
xchg
mov
mov
mov
sbb
pusha
test
shlb
mov
dec
mov
cmp
and
out
jbe
xor
jne
lea
sbb
jmp
or
adc
pushf
lock
mov
cmpsl
inc
shlb
leave
inc
andb
cmc
and
pop
mov
dec
fcompl
add
fisubl
and
xchg
push
std
and
cmc
add
cmpsl
mov
add
subb
mov
add
sbb
adc
fdivl
jns
ficompl
arpl
lret
out
hlt
jno
lock
xchg
sub
or
mov
out
and
in
inc
es
push
mov
int
pop
add
dec
dec
adc
mov
scas
mov
inc
and
fdivrs
xor
cmp
dec
xchg
adc
cld
xchg
pop
mov
fwait
sub
aaa
sbb
push
and
out
pop
scas
xor
mov
ret
sahf
add
sub
inc
pop
add
ljmp
adc
mov
inc
xchg
push
imul
cli
and
or
rcrl
adc
aas
dec
pop
aad
dec
adc
in
orl
jnp
out
push
sbb
into
es
jo
in
daa
dec
arpl
sub
lods
cmp
jle
add
test
pusha
sub
lahf
mov
add
cmp
xchg
pop
cmp
inc
bound
jecxz
jb
pushf
stos
fcoml
stos
int3
push
bound
lea
ljmp
ja
sub
ret
int
insl
add
movsl
nop
pusha
jno
icebp
xor
movsb
sbb
repnz
mov
inc
mov
mov
cmp
dec
ja
mov
dec
adc
and
lret
in
daa
arpl
in
jb
mov
jmp
jecxz
xchg
cmpsl
in
in
ds
fwait
es
daa
andl
mov
push
push
cltd
cld
jnp
fdivl
fmul
inc
ret
arpl
les
mov
inc
es
jbe
xor
sbb
inc
add
sbb
fs
stos
cmp
inc
adc
and
mov
decl
sarb
out
inc
xor
sub
lret
imul
jbe
cld
jge
arpl
xchg
lret
shl
add
and
push
popa
mov
insb
mov
lahf
xor
incb
mov
cltd
cmp
popa
push
dec
cmc
idivl
push
adc
and
inc
aaa
outsb
mov
in
insl
cmc
incl
jbe
jecxz
into
rcrl
mov
fbld
xchg
xchg
adc
inc
add
leave
cmpb
pop
iret
loopne
movsb
sub
adc
les
pusha
enter
lret
ja
test
cltd
lods
sub
loop
xchg
jnp
jae
pop
jo
mov
and
into
inc
in
out
cwtl
paddsw
negb
test
dec
insl
pop
adc
cmpb
shll
jbe
pop
subb
push
or
sbb
mov
fisubs
aad
mov
mov
jnp
pop
sbb
js
push
jp
sub
add
adc
outsl
cmp
int
sub
xor
data16
sahf
popa
pop
mov
cs
lods
fstp
xchg
lea
loop
repz
dec
sbb
push
repz
cmp
or
cmp
fwait
add
test
jb
nop
imul
push
pop
cmp
mov
into
mov
cmp
mov
outsl
adc
lods
push
xchg
outsb
fwait
add
jo
cld
mov
jnp
jp
sbb
pop
mov
insl
and
loope
sbb
jne
andb
cwtl
repnz
mov
push
leave
push
push
mov
loopne
std
add
jecxz
or
iret
adc
or
pop
jle
imul
roll
stos
mov
mov
fwait
insl
iret
add
jp
dec
jbe
ds
insl
pop
sub
mov
and
test
inc
lea
call
scas
jg
pushf
add
add
aad
and
repz
stos
stos
int3
mov
or
loope
ret
sub
pop
cmp
mov
movsb
int
testl
movsb
cmp
add
ljmp
sbb
push
pop
out
adc
jecxz
ret
xor
push
test
adc
dec
lds
pop
hlt
ss
fmul
mov
adc
mov
adc
mov
js
fbstp
fisttpll
sbb
popa
into
lea
dec
mov
imul
popf
movsl
jae
xor
pop
test
adc
xchg
fcmovnb
daa
sbb
scas
inc
aaa
push
pusha
iret
jne
pop
aad
loopne
jmp
ret
xor
inc
mov
mov
sub
mov
pop
and
jno
ret
push
cmp
std
jecxz
push
mov
cmp
pop
push
sbb
xchg
sarl
pop
push
push
jge
lret
cmpsb
mov
iret
gs
dec
mov
push
icebp
rolb
pop
aam
jge
jmp
xchg
jle
jbe
inc
xchg
es
or
in
xlat
xchg
jmp
add
push
adc
pop
shll
adcb
mov
fsubr
test
sbb
dec
cs
lret
data16
add
icebp
jno
xchg
shll
mov
adc
cs
popa
daa
jnp
imul
pusha
xchg
fcmovu
xchg
xchg
out
jecxz
lods
call
adc
stos
or
mov
jp
and
push
xchg
or
filds
ret
push
or
loop
adc
pusha
adc
mov
in
std
popf
pop
push
das
xor
xor
mov
lds
pushf
in
pop
test
lea
cmpb
sahf
adc
mov
jecxz
ror
imul
cs
ja
inc
in
out
pop
or
loop
sar
mov
mov
mov
ret
add
sti
mov
lock
inc
sub
push
push
inc
aas
mov
xchg
std
stc
ret
aad
cmp
push
out
add
sbb
fldcw
cmpsb
ror
jge
ret
dec
sbb
cmp
es
stc
cmp
mov
ret
push
xor
lds
test
cwtl
push
pop
push
ja
ret
xchg
lds
nop
lahf
push
xor
loopne
rclb
test
mov
cmp
pop
mov
pop
inc
and
adc
daa
ss
cmp
inc
and
aam
je
std
cmp
je
ljmp
ds
inc
push
push
mov
jg
lcall
cld
xlat
shrb
xchg
call
aam
mov
jae
repz
jmp
insb
test
jne
sub
pop
pop
in
mov
or
jb
xor
sbb
jp
and
jp
mov
loopne
push
dec
or
mov
or
lods
ds
mov
sub
xor
mov
mov
movsl
mov
in
xor
mov
mov
or
sbb
adc
mov
mov
mov
sbb
inc
mov
rolb
or
outsl
aad
insl
popf
loop
int3
imul
xor
cmpsb
inc
ret
jle
in
add
ds
xor
pop
mov
lret
aas
arpl
je
shlb
jo
add
adc
jmp
or
fistpll
fadds
xlat
negl
cwtl
pop
pop
adc
xchg
js
jae
push
xor
repz
sub
or
push
iret
fsts
pop
lods
test
dec
in
call
insl
cmp
mov
xchg
mov
scas
mov
or
scas
vandps
lods
lea
xor
int
adc
dec
push
xchg
pop
xor
in
lret
mov
stos
dec
roll
movsb
and
sbb
sub
mov
stos
das
pop
push
insb
imul
and
sahf
or
or
out
push
out
sbb
mov
mov
or
aaa
lcall
je
mov
mov
sbb
stos
out
pop
mov
mov
call
mov
or
dec
pop
shlb
mov
mov
addr16
dec
sar
pop
insl
sub
mov
and
test
popl
cmp
mov
sub
mov
imul
fbld
pop
sahf
repz
aaa
data16
les
xchg
adc
mov
loope
xchg
fcomi
imul
xor
fisubrs
nop
test
bound
jb
adc
fs
pop
or
int
les
jl
pop
or
lds
insb
xor
neg
push
pop
mov
push
decb
shll
aam
mov
pop
xchg
mov
adc
movsl
ss
sbb
insl
mov
and
clc
jae
stos
rolb
push
mov
adc
into
je
mov
cmp
pop
test
mov
push
push
mov
adc
dec
mov
testb
lock
push
mov
addl
sbb
jnp
push
mov
ljmp
pop
push
ret
xchg
in
mov
insl
ds
imul
add
mov
orl
mull
mov
push
inc
xor
int3
arpl
jb
sub
xchg
mov
out
inc
call
jmp
test
inc
push
sbb
push
daa
sub
xchg
push
dec
cwtl
or
lods
lret
pop
sub
mov
loop
mov
mov
shll
adc
and
sub
xor
mov
sub
inc
jne
xlat
pop
add
ss
sbb
out
dec
jo
mov
popa
nop
out
and
jge
mov
pop
sbb
std
cmpsb
push
scas
cmpsl
out
repnz
sbb
lods
mov
mov
push
fneni(8087
push
inc
icebp
movsb
jle
call
cmpl
adc
movsl
leave
dec
ror
mov
test
sub
push
pop
and
fs
les
mov
mov
iret
xchg
fcmovnu
xor
add
push
add
mov
mov
jo
or
insl
add
pop
int3
xchg
mov
dec
pop
adc
clc
xlat
popa
and
jmp
out
das
in
jge
clc
and
mov
nop
inc
mov
fdecstp
push
out
xchg
ret
xchg
pop
out
popf
ja
sub
jo
xor
into
imul
shl
scas
push
aam
sbb
xchg
lret
xor
scas
jns
cmp
mov
sbb
xchg
roll
mov
gs
jnp
dec
pusha
and
mov
pop
adc
fidivl
add
mov
push
sbb
lock
popf
out
mov
xor
and
mov
push
popa
fdivrl
repnz
es
test
sub
rcll
mov
sbb
add
adc
out
incb
inc
gs
mov
ss
sbb
push
jno
sub
fisubl
xchg
sub
test
push
in
insl
scas
movsl
iret
subb
cs
mov
insb
pusha
repz
adc
vmovsd
adc
mov
scas
xchg
xchg
dec
sub
sub
daa
adc
les
mov
idivl
add
cmpsb
test
sub
mov
push
and
mov
mov
or
sbb
or
add
mov
cmpl
jmp
jmp
fldl
daa
js
sbb
lahf
in
fmul
pop
lods
pop
dec
rcl
test
ret
inc
rcl
push
das
out
enter
and
fiaddl
fucomip
cltd
es
ja
cld
mov
mov
lcall
jecxz
push
jmp
xor
mov
daa
dec
adc
cmp
add
gs
inc
pop
in
xor
int
add
and
leave
mov
mov
ja
and
xchg
dec
jle
dec
push
jbe
dec
mov
mov
inc
mov
jecxz
pop
and
or
in
sti
jns
pop
jl
dec
pop
movsl
jns
fwait
and
and
xor
mov
out
adc
ja
and
notl
and
adc
push
mov
add
test
mov
xchg
jp
inc
sub
mov
dec
loopne
dec
push
mov
cmp
insb
cmpsl
cmp
out
sub
rcrl
dec
daa
fst
in
sub
pop
mov
stos
movsb
pop
or
push
lods
imul
enter
nop
stos
mov
add
call
add
mov
js
fildl
xor
fbld
cmp
dec
inc
xlat
jae
popa
mov
adc
fdivp
lds
sbbl
mov
das
mov
or
cmpsl
add
test
dec
mul
mov
cwtl
jb
pop
mov
std
dec
add
rcll
dec
mov
push
mov
notl
push
mov
in
ret
sbbb
fs
push
cmp
pop
pop
loope
sbb
loopne
ja
mov
xor
xchg
sahf
mov
shlb
sbb
push
imul
enter
notl
pop
mov
push
cmpsl
lea
roll
stos
xchg
sub
out
ljmp
cmp
sbb
jg
cmp
aad
aad
adcb
push
pusha
dec
xchg
addr16
dec
dec
pop
mov
jne
mov
jbe
fstpt
push
in
es
mov
mov
adc
fidivs
inc
pop
xor
sub
imul
mov
sub
fcmovne
xor
cmp
and
call
pushf
mov
mov
push
mov
iret
out
leave
ljmp
push
fs
aas
das
xchg
or
mov
add
repz
aas
aam
arpl
mov
mov
imul
jp
cmp
mov
je
enter
mov
push
mov
je
cltd
shll
jl
imul
dec
sbb
shrl
jle
hlt
jl
imul
dec
rcrl
int
push
fstl
jae
xor
xor
addr16
stos
pop
aad
mov
push
xor
push
add
imul
dec
sub
loope
xlat
daa
or
ds
jae
xchg
insl
inc
imul
andb
pop
mov
mov
push
sbb
lret
xlat
in
jbe
jno
mov
mov
loop
rorb
stc
repnz
mov
push
jnp
jg
lret
or
add
sbbl
adc
mov
stc
mov
inc
imul
jo
push
std
cmc
mov
pop
or
daa
xor
movsb
lcall
sti
addb
mov
jmp
aam
ret
pop
xchg
aad
mov
sub
arpl
sub
test
add
in
lods
jnp
add
cmp
fmull
xchg
ret
hlt
shll
call
lret
mov
add
cld
jo
insb
push
push
inc
inc
imul
aas
xor
pop
xor
mov
movsb
or
int3
sbb
ja
les
mov
aaa
push
pop
aas
outsl
arpl
adc
dec
aam
sbb
push
mov
mov
and
jbe
push
xor
out
pushf
cmp
pop
icebp
aaa
mov
sbb
addr16
in
cltd
push
aam
pop
rcrb
pop
sub
cmp
or
add
jb
xor
call
xchg
inc
xchg
jl
ja
jbe
fxch
shl
jmp
mov
push
inc
pusha
jecxz
aaa
sbb
sub
mov
dec
mov
js
xchg
out
and
mov
or
pop
push
std
or
cmp
mov
insl
adc
cmp
imul
mov
pop
imul
out
rolb
repz
mov
out
icebp
lods
xlat
pop
mov
push
stos
xor
push
adc
sub
sbbl
inc
xchg
cmp
mov
lcall
or
cmp
jb
adc
dec
mov
ljmp
or
bts
shl
jmp
and
sbb
ss
and
and
jge
cs
xchg
inc
mov
inc
das
jecxz
repnz
jns
sub
iret
imul
dec
mov
fistps
call
jbe
outsb
pop
lret
popa
xor
add
fwait
movsl
js
push
mov
add
mov
pusha
mov
loop
and
cmp
in
jg
mov
push
scas
add
in
add
leave
xchg
lea
add
pop
sahf
stos
sahf
ja
popf
push
outsb
pushf
into
mov
mov
jmp
nop
push
movsl
cmp
in
fcomps
test
icebp
shrl
add
mov
and
aas
stos
push
repz
es
lahf
insb
cli
cmp
fs
mov
outsl
imul
cli
pop
fimull
scas
mov
out
ds
mov
call
xchg
cltd
fcomi
add
stos
pop
jge
add
xlat
push
stc
leave
cmp
aam
mov
loop
mov
mov
stc
or
mov
mov
sub
es
jnp
or
out
jp
sub
xor
cmc
push
jp
clc
sbb
hlt
incb
and
aas
or
rorl
inc
outsl
fisubs
pop
adc
adc
push
pop
add
mov
dec
or
or
fldt
adc
cmp
pop
lods
fs
mov
jle
stos
ds
push
and
push
lods
movsb
inc
mov
imul
dec
in
mov
loopne
cmc
jecxz
jne
in
bnd
ficoms
jbe
push
out
mov
subb
ljmp
in
out
sub
lods
sbb
arpl
cmp
fwait
pop
fwait
int
mov
pusha
stos
aaa
es
pop
jno
aaa
in
sub
mov
lods
repnz
adc
dec
sbb
mov
icebp
in
insl
fadd
inc
loop
cwtl
outsb
int3
lds
or
sbb
xchg
sbbb
stc
movsl
or
pop
and
mov
insb
and
adc
mov
test
scas
sbb
adc
pop
call
push
inc
inc
push
addr16
idiv
mov
mov
mov
shrl
push
mov
mov
popa
repnz
cmpsl
ret
pop
std
fwait
rorl
cld
jecxz
pop
imul
orl
add
adc
popf
bound
lcall
aam
xlat
roll
add
fwait
clc
or
insl
adc
mov
and
and
pusha
sbb
xor
mov
mov
imul
xchg
mov
lret
mov
cwtl
xlat
nop
and
mov
cmp
insb
mov
sbb
out
loop
out
fcmovnb
lods
lar
and
cmp
dec
pop
mov
push
out
mov
cwtl
outsb
enter
mov
push
push
test
outsl
xchg
mov
inc
jo
mov
pop
lea
sahf
ret
mov
sbb
insl
loope
bound
push
rcl
repnz
jnp
pop
jle
xchg
js
pop
jp
bound
push
jp
mov
and
mov
dec
xor
xchg
fcompl
pusha
jnp
mov
push
test
xchg
ret
subb
stc
lahf
sbb
cld
xor
push
add
mov
mov
sti
xchg
cmp
jmp
dec
call
fucomi
out
xor
call
cli
sbb
xlat
add
cmp
sbb
fdivl
dec
shll
mov
pop
addr16
dec
test
mov
inc
scas
sbb
inc
loope
mov
or
int3
adc
sahf
xlat
xor
imul
dec
fsubr
inc
dec
iret
pop
imul
mov
sbb
or
incl
jb
in
roll
and
pop
and
jge
add
in
sbb
inc
or
xchg
add
test
je
aas
cltd
pop
bound
adc
inc
sahf
sbb
std
clc
add
nop
test
sbb
mov
adc
mov
out
cld
xchg
negb
fwait
lahf
mov
jb
push
inc
inc
fistpll
jp
push
push
push
mov
in
jno
or
add
xchg
rolb
or
test
int3
add
xchg
or
mov
ss
aas
inc
ret
cwtl
cwtl
mov
and
rorl
push
push
push
push
cmpl
icebp
mov
lods
pop
repz
push
jb
push
mov
pop
xchg
cli
mov
mov
mov
xchg
mov
nop
jb
push
mov
sub
mov
push
imul
mov
cltd
frstor
jo
sti
sub
je
aas
or
push
pop
sub
or
cmc
icebp
fidivrl
fdivrs
call
sahf
daa
faddp
cmpsb
bound
test
aad
mov
mov
cmp
imul
jecxz
clc
xchg
xchg
sbbb
int
pop
jg
sbbb
mov
scas
arpl
sbb
aas
and
scas
push
outsb
mov
xor
dec
lds
dec
fnstcw
rcll
pop
test
test
scas
sub
dec
mov
into
outsl
inc
push
dec
std
pop
pop
fcompp
sahf
loope
pop
or
cmp
jle
data16
dec
iret
sbb
push
sarb
icebp
sbb
mov
nop
or
add
insl
in
repnz
fisttps
xor
outsl
iret
mov
inc
mov
xchg
inc
push
adc
in
add
mov
inc
daa
test
xchg
jp
push
cmp
mov
push
jae
icebp
loopne
jg
mov
xor
jbe
cmpsl
aad
nop
lret
mov
adc
jnp
data16
cmp
enter
mov
les
jge
into
popf
mov
pop
lret
data16
jbe
aaa
leave
pop
ljmp
mov
fnsave
sbb
cmp
pop
pop
mov
imul
or
pop
push
stc
jl
or
lds
xchg
je
sub
xchg
fnstcw
mov
stos
inc
int
cld
mov
daa
pop
call
dec
lock
cmp
add
sub
daa
xor
outsb
push
and
cmpsl
cltd
push
insb
mov
out
in
xor
cmp
in
pop
cli
push
mov
popf
das
pop
imul
xchg
imul
xchg
xor
movsb
lds
cmc
jp
sub
daa
std
fmull
pop
pop
push
add
mov
xor
lret
and
xchg
stos
js
or
push
pop
cmp
scas
mov
test
xor
test
or
jge
lret
lods
mov
jae
das
xor
popf
add
mov
jecxz
call
mov
sahf
sti
cli
and
addl
leave
stc
lahf
xchg
addr16
ror
jmp
or
and
in
mov
cs
cmp
push
push
pop
mov
hlt
mov
add
push
sub
rcr
int
cmp
repz
push
push
iret
push
rolb
frstor
adc
sub
dec
fs
cmp
pop
je
test
popa
insl
jne
cmpsb
rolb
push
mov
add
inc
imulb
clc
adc
es
popf
rcr
add
scas
sbb
pop
sub
mov
ret
cs
jo
arpl
fimuls
jo
sbb
rcr
xlat
jnp
inc
sbb
sbb
in
mov
push
lret
negl
adc
cmp
inc
or
add
xchg
mov
sti
leave
or
add
cmc
lret
lahf
ss
mov
insl
jnp
dec
int3
outsb
adc
jmp
mov
fiadds
aam
in
xchg
test
jb
cwtl
push
jo
lret
inc
test
mov
jae
shr
add
mov
xchg
xor
mov
jg
sub
mov
jl
pop
push
in
jmp
dec
jl
jno
cmpsb
inc
into
data16
jmp
dec
jae
aas
push
loope
xchg
sbb
cmp
out
cwtl
jnp
es
gs
xchg
das
jae
mov
mov
push
xchg
cmc
insl
in
cmp
inc
cmp
and
inc
xchg
rol
pop
jae
jno
stos
jb
cmpsl
or
jecxz
cmpl
frstor
les
mov
repnz
jne
sahf
ret
xchg
call
xor
pop
pop
and
insl
mov
mov
shll
cltd
add
push
cmp
ficoml
ja
or
movb
pushl
xchg
jle
add
push
cld
iret
scas
mov
push
test
pop
das
lods
popf
push
test
stc
pop
jmp
test
dec
pop
pop
or
xorb
movsl
das
push
dec
nop
push
mov
pusha
xor
pop
pop
sbb
outsl
mov
cmpsb
fcomps
mov
hlt
ljmp
cmpsb
or
mov
jle
cld
pop
and
cmpb
lods
stos
shl
cmp
scas
scas
popa
mov
pop
lret
pop
mov
dec
popa
jmp
jle
lret
inc
jl
fsubl
jle
mull
fdivs
repz
movsl
mov
add
and
push
stos
mov
adc
es
adc
or
sub
insl
testb
push
or
shll
in
ljmp
fcmovb
stc
cwtl
sub
sarl
sti
push
out
sub
xor
push
lds
ljmp
add
sti
js
adc
jb
fistpll
cmpsb
jmp
jl
push
pop
or
and
int
mov
loopne
movb
scas
mov
and
xchg
lret
inc
and
mov
inc
jle
fisttpl
icebp
mov
adc
xor
ret
or
jns
add
std
and
gs
sahf
push
div
repnz
mov
cwtl
adc
aad
mov
jl
cmp
pop
mov
pop
xchg
sub
jecxz
cmp
lcall
int3
mov
jecxz
mov
xchg
insl
adc
pop
lcall
cmc
jge
jp
mov
iret
lods
cld
rol
ja
das
fwait
pop
icebp
outsb
inc
sahf
fs
fdivp
imul
adc
call
into
xchg
dec
imull
adc
adc
in
mov
and
stc
ret
sbb
lcall
mov
xlat
mov
or
das
ja
jecxz
xor
sbb
cli
out
loope
cmp
bound
ficomps
mov
in
bound
std
mov
dec
outsl
adc
xchg
adc
jne
in
add
ret
xorl
xchg
pushw
test
std
sub
pop
xchg
stos
rorl
sarb
in
and
movsl
lock
outsl
mov
fwait
gs
jle
je
dec
adc
mov
pop
and
pop
daa
inc
jae
cmp
daa
inc
mov
mov
cmp
mov
mov
cli
add
test
das
or
xchg
adc
mov
or
sbb
jnp
add
sub
jmp
push
test
ja
mov
inc
mov
in
jbe
rcl
xor
call
adc
jge
push
jb
scas
mov
mov
xor
filds
ficompl
xchg
or
ret
fildll
inc
fs
inc
cmp
xor
mov
fldcw
clc
dec
sbb
mov
fistpll
mov
xor
xchg
pop
lret
push
sbb
mov
jbe
aaa
cmp
mov
sarb
cmp
in
sbb
xor
repz
enter
pop
bound
stc
or
sub
jo
insb
inc
mov
lret
cli
cmpsl
aas
std
mov
loopne
aas
or
jp
lret
das
movsb
outsb
jns
jg
int3
les
into
mov
out
dec
pop
sub
mov
cli
imul
cld
adc
xchg
xchg
jmp
je
mov
xor
in
sbb
jge
push
fbstp
insb
mov
aam
push
sbb
mov
pop
iret
add
out
mov
lret
pop
jne
jmp
inc
in
insl
mov
add
arpl
out
xor
ret
icebp
sub
ja
daa
loopne
hlt
inc
lods
adc
sbb
dec
pop
or
scas
shrb
pop
jo
jle
push
jae
xor
mov
ljmp
dec
movsl
fimuls
adc
outsl
mov
insl
fstpl
and
inc
mov
fcmove
dec
call
sbb
fsubr
cwtl
loop
mov
cmp
fcoml
push
repnz
xchg
out
addr16
imull
push
xor
fwait
out
testb
shll
mov
pop
inc
adc
stos
addr16
imul
mov
mov
adc
inc
inc
sub
jbe
xchg
gs
add
jo
in
ret
sub
mov
test
adc
mov
inc
jae,pn
mov
fs
ret
cmpsl
mov
cmp
jmp
pop
jae
popa
mov
push
cmc
xchg
test
enter
lret
adc
jnp
add
and
pushf
pop
fwait
outsl
mov
inc
fsts
add
xor
pop
xor
or
sti
test
mov
lds
iret
stc
push
lock
pop
cmpsb
cld
ficompl
mov
jbe
mov
pop
call
scas
mov
mov
mov
sub
test
in
mov
icebp
xchg
movsl
xchg
fsubrl
or
sbb
arpl
fstpl
sbb
fstpl
repz
pop
jecxz
pop
add
xchg
aaa
mov
ss
mov
pop
adc
aad
xor
dec
mov
mov
dec
add
pop
jo
sub
fwait
inc
push
loop
pop
jmp
mov
inc
aad
dec
movb
dec
mov
cmp
daa
cmpsl
push
cmp
fs
jmp
lods
mov
mov
push
movsl
jmp
outsb
imul
push
out
in
incb
in
fsubl
lret
dec
sbbl
xchg
jo
cmp
push
fsubl
sbb
push
ds
insb
add
dec
jno
push
pop
insl
push
cmpsb
lock
sbb
test
in
pop
test
mov
cwtl
push
xor
adc
mov
xchg
pop
sub
cmp
or
cli
int
mov
pop
cmp
pop
jnp,pt
or
repnz
fcmovbe
cmp
sbb
inc
cmp
cmp
or
test
sbb
push
mov
lock
shr
dec
push
gs
mov
push
inc
push
fmul
or
shrb
mov
mov
xchg
xchg
movsb
sbb
pop
sarl
popa
sbb
push
clc
adc
lea
sub
adc
add
sbb
popf
and
fimull
clc
push
scas
mov
mov
xchg
stos
ret
test
push
sbb
xchg
push
lahf
cmp
push
xchg
ja
loope
rsqrtps
mov
ja
cmpsb
arpl
fstpl
adc
add
pop
jle
insl
cwtl
dec
sbb
das
mov
imul
xchg
sahf
inc
adc
mov
cli
and
loop
push
ss
cwtl
dec
sub
mov
test
test
icebp
adcb
hlt
push
and
or
test
dec
jmp
push
fs
int3
xor
mov
dec
jecxz
sub
add
pop
mov
sbb
mov
xchg
jne
shrl
push
mov
xchg
rcrb
pop
inc
push
cmp
cs
inc
and
inc
inc
pusha
pop
jl
std
add
stos
cld
stos
in
or
popf
mov
fsubrs
mov
cld
cmp
cmpl
cmpb
sub
mov
stc
jle
jns
jge
fildl
or
mov
fmull
aaa
jle
push
data16
jmp
sub
jno
scas
mov
cmpsl
dec
enter
shrl
xchg
xchg
arpl
inc
test
push
push
movsl
sarl
mov
cmp
cmp
xchg
jge
fdivr
int
xor
cltd
fidivl
lret
lahf
sbb
out
mov
test
add
andl
ljmp
test
cwtl
scas
jmp
push
idivl
sarl
fstl
ss
gs
in
xor
mov
das
mov
aad
jecxz
sub
imul
jbe
cmpsl
jne
pop
movsl
out
popa
mov
pop
cwtl
push
lds
xchg
and
push
jg
mov
daa
xchg
pop
sub
or
pusha
les
in
sbb
push
lods
pop
je
inc
das
int
xchg
in
or
pop
fucom
scas
cld
lods
jo
cli
clc
cmc
int
pop
fldt
jl
lret
mov
sub
clc
adc
ljmp
push
pop
notl
das
sbb
psubb
cltd
outsb
shl
or
fldcw
int
rolb
gs
orb
mov
push
sbb
lcall
add
pop
xchg
pusha
imul
fwait
mov
push
push
sub
rorl
hlt
std
or
aad
into
xchg
cs
dec
jb
mov
fs
cs
testb
cwtl
sub
or
and
out
fstps
std
mov
mov
daa
loop
repz
sti
mov
push
int3
cmpsl
cmpsb
daa
mov
popf
arpl
sti
cmp
sar
cmp
cltd
cwtl
jne
gs
pop
lret
dec
ret
mov
ja
jno
lea
sub
mov
lret
pop
movsb
push
inc
aaa
test
xor
sahf
jmp
sub
mov
dec
push
push
dec
xor
cli
and
loop
inc
or
aam
rorl
cmpl
das
movl
fsub
mov
add
shll
xor
jmp
sub
orb
mov
and
dec
inc
cmp
or
mov
jo
jns
out
icebp
mov
pop
pop
repnz
dec
shll
sub
pop
les
shrb
dec
jo
loope
lahf
mov
sti
jne
insb
test
mov
sub
insl
out
add
xor
pop
subl
movsl
sahf
mov
mov
inc
ja
add
inc
inc
out
bound
pop
arpl
push
leave
outsl
cmpsb
jne
shrl
in
xlat
mov
inc
in
fwait
cmpsb
mov
ret
sub
imul
js
inc
jno
add
je
subb
inc
cltd
cmpsl
jmp
and
lahf
fsubrs
push
sub
mov
sbb
push
sub
in
idivb
sbb
ret
cs
cmp
cs
sbb
mov
and
mov
jmp
sub
inc
pop
dec
daa
jl
pop
bnd
pusha
test
dec
out
jbe
rcrb
enter
cmp
xorb
out
fs
dec
enter
dec
pop
adc
add
iret
aaa
jge
testb
sbb
cmp
icebp
ljmp
mov
addl
push
test
pushf
or
cwtl
sbb
jb
push
imul
sub
mov
repz
sbb
mov
pusha
repnz
or
sbb
insl
ret
mov
adc
pop
sbb
jecxz
mov
sahf
mov
cs
pop
lea
mov
jbe
aas
push
repnz
cmp
mov
or
fninit
pop
rorl
lcall
sbb
lock
fwait
rcrb
jecxz
inc
sti
ja
pop
loopne
mov
lea
fsts
add
mov
pop
sbb
adc
push
jg
and
inc
cld
mov
sub
stos
pusha
aaa
xchg
pop
leave
jg
xchg
xchg
aas
in
mov
rcrl
in
stos
gs
movsl
push
push
lods
mov
jge
jno
xchg
jp
add
pop
icebp
adc
mov
sub
sbb
bound
xchg
rcl
and
test
mov
aaa
add
mov
cmpsb
cmpl
cmpsb
out
shlb
cmp
nop
inc
jne
jecxz
sub
cld
cmp
xor
and
cmp
add
cmp
add
mov
ljmp
mov
jmp
cmc
shlb
movsl
sub
cs
jo
dec
pop
popa
mov
test
jg
mov
aam
push
xor
loop
mov
xchg
shll
and
popf
fcoms
ja
push
cmp
js
addr16
jb
fnstenv
adc
mov
insl
mov
movsb
jg
ss
inc
out
adc
cmpb
jecxz
test
cmp
hlt
mov
push
xchg
xchg
add
jnp
scas
bound
notb
mov
xchg
cmp
adc
add
lods
jbe
xor
loopne
les
mov
and
sbb
adc
enter
push
lahf
and
add
inc
mov
lods
inc
mov
or
pushf
jecxz
lods
or
mov
cmpsl
insl
insb
push
lods
leave
inc
inc
inc
inc
xchg
or
test
jecxz
push
lods
jle
mov
jmp
leave
dec
jmp
pop
push
sbb
or
ret
hlt
xor
xchg
push
aas
icebp
xchg
shrl
aam
out
sar
adc
ret
push
pop
xchg
dec
xchg
or
dec
mov
push
mov
xchg
pushf
adc
or
adcl
pop
push
or
jnp
xchg
and
fdivs
xchg
pop
inc
mov
and
loopne
dec
imul
cmp
rcll
in
xchg
lock
or
pushf
popf
in
ds
mov
aaa
bnd
loopne
sub
scas
notl
xor
jno
dec
in
pop
jecxz
add
sbb
ret
pop
aas
not
int
jp
sbb
push
bound
xchg
mov
pop
outsl
xor
push
xor
mov
out
xchg
sbb
sub
in
test
and
rolb
jbe
jle
xchg
es
add
inc
ret
push
fwait
repz
add
adc
pop
jp
add
xchg
mov
mov
jecxz
das
sub
mov
lret
dec
test
sbb
cwtl
nop
lds
and
imull
jge
outsb
jle
fsubrp
mov
mov
or
inc
mov
iret
mov
daa
aad
mov
add
bound
cld
and
call
or
pushf
add
jecxz
mov
cmpsl
sbbl
sbb
mov
jbe
and
cltd
fsub
lds
jb
hlt
es
in
push
jns
or
jp
stc
jb
popa
jmp
mov
es
push
add
push
inc
pop
push
stos
ljmp
mov
movsb
gs
sbb
push
call
push
mov
out
dec
pop
cmp
shr
insl
sahf
mov
inc
lcall
in
mov
repnz
frstor
dec
fstpt
xor
lods
int3
popa
jge
jb
dec
jno
push
inc
hlt
cltd
xlat
mov
cs
inc
decl
dec
lea
inc
or
cmp
std
pop
into
loopne
icebp
inc
mov
shr
sbb
adc
fildll
out
push
stos
mov
lahf
lcall
es
adc
int
jl
or
and
and
fidivl
out
sbb
ds
inc
leave
call
subb
xchg
ljmp
xchg
ror
sbb
push
loop
rcrl
divb
add
lock
test
int
xor
out
lock
cmp
scas
imulb
sar
inc
sahf
sbbl
fstpl
mov
int
sub
mov
movsb
and
push
cmc
mov
fldcw
fiadds
jae
fstl
xlat
cmc
js
js
jg
mov
shll
mov
jnp
add
jae
lods
push
and
and
cmp
xor
mov
push
mov
add
adc
mov
xchg
jg
jp
shll
iret
jecxz
xchg
andl
push
lods
aam
fwait
test
push
sbb
push
sbb
dec
cli
mov
aad
ds
push
xor
fsubs
push
pop
fadd
and
js
cs
fstps
call
mov
add
imul
inc
bound
xchg
arpl
sbb
and
xchg
xor
inc
xchg
mov
xor
scas
insl
jbe
icebp
sbb
nop
jecxz
loop
inc
sbb
xor
out
pop
cmp
pop
bound
scas
imul
stc
add
mov
ret
push
xchg
adc
cmp
test
jnp
enter
insb
ja
push
xor
push
fwait
in
sbb
pop
lds
aad
stc
orb
daa
iret
push
shll
fdivs
bound
out
stc
int3
movsb
adc
rcr
mov
mov
mov
int
daa
in
pop
fs
mov
push
mov
push
mov
cli
mul
inc
repnz
xchg
lods
inc
or
aam
adc
adc
jns
movsb
stc
adc
or
in
imull
call
pop
nop
mov
add
jb
push
inc
hlt
inc
pop
mov
dec
mov
jb
insb
push
add
je
pop
mov
mov
jp
lahf
or
or
out
push
push
xor
loop
adc
mov
xchg
xchg
stc
pop
rorb
pop
mov
cmp
mov
fbstp
cmpsl
dec
jp
adc
and
jp
lret
test
in
mov
mov
pop
dec
push
sahf
jge
out
stos
add
into
sub
pop
xchg
xor
cmpl
daa
loop
insb
loopne
neg
and
aas
iret
arpl
dec
cmp
add
jge
stos
inc
cmp
fldt
push
and
sub
adc
cld
ss
or
mov
vpaddusb
adc
add
into
adc
adc
inc
sub
nop
or
popf
dec
insb
xor
xor
and
inc
fdiv
jge
in
xchg
push
bnd
mov
inc
pop
mov
lea
aad
jle
jl
cmp
pop
and
push
shll
jle
inc
and
mov
repnz
xor
mov
xchg
cwtl
movsb
pop
push
out
sbb
push
xchg
sahf
jl
jg
hlt
scas
dec
mov
test
fs
dec
xor
call
pusha
and
adc
jae
fdivp
outsl
jle
in
sub
jmp
mov
andl
lcall
jb
cmp
orl
daa
rol
adc
push
pop
repnz
pop
int
xchg
push
or
int3
iret
fcomps
xchg
mov
mov
rcrl
pusha
mov
cmp
and
mov
aad
dec
loopne
sub
xchg
aam
mov
sbb
stos
adc
andl
and
dec
and
in
mov
stos
dec
cwtl
in
fwait
xor
adcb
nop
in
addb
mov
ret
push
adc
push
addr16
inc
into
imul
add
fs
xchg
cwtl
pop
and
push
mov
add
mov
sti
mov
dec
mov
rcrl
push
cmp
sahf
lods
add
push
jge
adc
mov
stc
jno
and
pusha
add
data16
loopne
das
mov
jg
mov
aad
bound
shll
dec
out
push
mov
rcrb
or
lods
inc
dec
inc
icebp
mov
or
test
jmp
mov
movsb
aam
cmp
outsb
sub
or
cltd
add
or
mov
into
dec
lcall
dec
sub
das
stos
push
jp
fstpt
repnz
pop
mov
xchg
js
stc
push
and
ds
or
mov
cld
movsl
and
dec
daa
lea
stos
cmp
xorb
lods
push
xchg
lods
stos
insl
lea
mov
xchg
xor
jmp
cmp
xorb
arpl
dec
mov
cmp
cld
mov
mov
push
sbb
in
xchg
stc
movsl
push
ds
dec
out
ret
js
sbb
imul
add
mov
inc
dec
out
stos
adc
jp
xor
adc
inc
jl
int
lret
fsubrs
lret
mov
xchg
lcall
push
in
xor
mov
pop
jo
xchg
jno
and
sub
jl
adc
int
pop
imul
xchg
out
mov
inc
jo
call
add
jo
fisttps
addr16
sbb
loopne
shlb
inc
lock
inc
ffree
lea
sbb
fistps
jmp
jb
mov
loop
jp
and
fstps
push
lret
std
cmp
andb
out
movsb
mov
mov
jp
mov
mov
mov
pop
insb
jb
or
or
scas
cld
inc
inc
imul
adc
mov
rcll
fstps
das
add
jecxz
lods
jnp
cli
andb
sbb
pop
and
pusha
push
dec
je
push
or
pop
adc
xor
xchg
enter
xorb
or
nop
push
push
cmc
cmpsb
scas
dec
or
fwait
mov
lret
and
insb
mov
mov
inc
dec
sub
xchg
pop
push
iret
dec
fisubrs
xchg
xchg
hlt
out
test
insb
idivl
mov
leave
sub
xchg
jl
inc
mov
push
mov
mov
cld
stos
iret
scas
jmpw
mov
pop
push
addr16
mov
mov
xlat
xlat
icebp
iret
push
mov
es
push
xor
lcall
push
mov
popf
ret
dec
lock
call
inc
cmp
mov
mov
cmc
sub
test
and
add
sub
inc
sbb
movsl
xlat
movl
dec
scas
mov
and
push
int
fwait
jbe
and
fsubr
cs
cmpsb
sbb
jae
push
roll
xlat
push
or
xor
sub
xor
push
mov
sub
or
mov
stc
mov
bound
sbb
je
inc
pop
jo
push
test
push
jp
mov
dec
call
mov
insl
fs
pusha
cmp
repz
in
fcmovu
ja
sbb
adc
xchg
sub
push
inc
sbb
jmp
loope
push
es
xor
pop
test
push
inc
into
pop
cli
sti
dec
mov
mov
inc
xchg
enter
jmp
in
imul
inc
call
push
or
jbe
xor
jmp
addb
mov
lods
movsb
jl
lret
xchg
lahf
neg
rcrb
pushf
lret
add
insb
out
sub
mov
dec
cmpsb
mov
inc
adc
pop
sti
jp
mov
std
ficomps
dec
imul
xchg
push
jns
fmul
ror
daa
adc
fdivs
add
push
push
mov
xlat
popa
pushf
mov
cltd
test
pusha
fisttpl
pop
add
xchg
inc
test
or
out
xor
dec
mov
pop
pop
imull
inc
test
mull
push
fwait
sub
cltd
stc
adc
push
and
imul
xor
inc
jb
out
aas
lret
push
xchg
fidivrl
test
mov
call
and
fbld
mov
in
enter
cmpsb
sbb
pop
bound
std
dec
cmp
mov
repz
mov
add
dec
lea
mov
cmp
pushf
mov
inc
mov
xchg
pop
lcall
insl
repz
push
out
movsl
popa
mov
adcl
xchg
push
ds
pushf
gs
fcoms
fidivs
clc
in
ljmp
mov
insl
out
mov
fistps
insb
out
inc
xchg
mov
adc
mov
js
jo
push
jnp
cmp
enter
or
pop
enter
sar
leave
cmc
mov
or
hlt
jg
push
mov
fcmovbe
xchg
ljmp
lock
ret
cmp
fbstp
dec
stc
jno
push
out
pop
mov
sbb
push
jecxz
or
xor
into
loop
or
clc
outsl
mov
cmp
repz
bound
pop
andl
sbbb
cmc
call
rcl
outsb
in
dec
inc
pop
leave
mov
mov
push
and
cmp
xchg
inc
aam
xchg
jg
jne
out
jl
adc
push
inc
push
outsl
imul
fwait
int
repnz
add
and
sub
adc
loopne
jo
cli
pop
or
push
xchg
and
mov
xchg
sbb
add
pop
mov
pop
test
arpl
and
test
xchg
mov
inc
mov
and
movsb
xor
or
jno
lret
out
je
xchg
push
movsb
or
pop
mov
adc
roll
pop
sub
mov
les
mov
call
inc
push
or
push
ja
es
gs
sub
std
shll
filds
xor
xor
add
je
push
loop
lret
imul
mov
nopl
cld
sbb
dec
repz
and
inc
jl
add
push
xor
jmp
sub
mov
fs
stc
test
lcall
pop
and
and
mov
fmuls
dec
cmovae
push
cmc
pop
mov
movsl
dec
inc
jne
mov
jmp
dec
jno
cmpsl
cld
lock
in
test
arpl
pop
push
and
jmp
fcomip
pop
jne
rcll
or
and
jns
addl
lret
ret
mov
push
cmp
in
imul
dec
sub
lods
pop
pop
mov
lds
insb
int3
mov
push
aad
nop
icebp
test
mov
jmp
sub
sbb
sbb
arpl
add
pop
and
xchg
mov
mov
into
inc
lea
in
pushl
jecxz
mov
and
idivl
jmp
mov
rolb
pcmpeqb
xor
test
inc
iret
push
enter
jle
pop
fs
iret
pusha
xchg
je
lcall
dec
fimull
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
xor
out
xor
push
pop
and
push
and
arpl
adc
add
iret
es
fs
iret
addl
sahf
into
push
mov
push
popa
arpl
pop
scas
popf
sti
pop
fsts
add
cld
cmp
test
jae
ss
int
ja
aam
scas
add
xchg
les
sub
and
popf
sbb
mov
add
add
jmp
incl
xchg
lock
or
loope
xor
and
ret
add
cmpsb
dec
mov
sub
mov
mov
jecxz
scas
xor
push
jbe
arpl
pusha
rcll
adcl
addr16
xor
ret
jecxz
loop
std
in
jo
int3
xor
jb
xlat
add
mul
mov
hlt
push
jle
lock
aam
sbb
rolb
clc
loop
inc
sahf
mov
push
push
mov
xlat
push
push
mov
mov
ljmp
cmp
or
add
and
loop
fwait
xor
push
fstl
lahf
pop
fists
aad
or
outsl
test
and
xchg
sbb
cld
aad
xor
jae
lret
leave
ja
lcall
into
jae
sbb
inc
mov
data16
cli
sbb
hlt
mov
add
hlt
mov
add
pop
lods
xor
mov
add
add
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
add
mov
