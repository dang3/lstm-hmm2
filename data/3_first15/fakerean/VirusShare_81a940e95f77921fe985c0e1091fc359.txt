add
add
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
add
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
test
inc
add
decl
decl
test
mov
daa
inc
add
popf
pusha
decl
test
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
add
mov
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
add
adc
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
add
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
mov
je
mov
cmp
je
lea
add
mov
push
pushl
push
push
pushl
pushl
pushl
push
push
call
test
jne
test
je
add
add
mov
push
push
call
xor
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
jmp
xor
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
mov
test
lea
jne
mov
test
jns
push
mov
call
cmpl
jne
xor
test
jne
mov
mov
call
call
lea
push
push
call
call
lea
scas
sub
push
push
call
add
pop
ret
mov
jmp
push
mov
push
push
xor
cmp
je
cmp
jle
push
push
push
mov
lea
push
push
push
call
mov
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
test
mov
je
mov
mov
lea
push
call
mov
lea
push
pushl
push
call
test
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
mov
lea
call
mov
mov
xor
lea
call
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmpb
je
push
push
mov
movsbl
cmp
jle
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
mov
and
mov
movb
mov
mov
mov
add
cmpb
jne
xor
add
push
ja
movzbl
jmp
mov
push
push
push
or
mov
call
jmp
mov
sub
cmpl
jg
mov
sub
jmp
push
push
push
push
call
test
jne
mov
push
push
push
or
mov
call
jmp
mov
sahf
into
cmp
mov
cmp
mov
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
push
mov
pushl
lea
mov
mov
call
cmpl
je
mov
lea
or
inc
add
testb
je
push
call
test
pop
mov
je
mov
cmp
je
cmp
je
movb
mov
mov
cmp
je
cmp
je
movl
mov
mov
push
add
push
lea
push
call
mov
test
mov
je
mov
add
call
test
je
mov
add
sbb
add
or
push
mov
add
call
mov
test
pop
je
mov
test
jne
mov
call
mov
test
mov
jne
mov
test
jne
mov
call
test
jne
mov
test
jne
lea
call
mov
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movb
mov
movl
mov
mov
mov
movl
mov
movl
movl
mov
mov
xor
inc
cmp
je
cmp
je
mov
mov
movl
movl
mov
lea
push
mov
mov
call
cmpl
jne
mov
mov
cmp
mov
jne
mov
mov
mov
orw
cmpb
jne
mov
lea
call
mov
pop
pop
pop
ret
cmpb
je
mov
jmp
mov
push
call
mov
test
je
cmpb
jne
mov
mov
mov
mov
jmp
mov
orl
mov
mov
mov
mov
mov
jmp
mov
movl
movl
mov
movl
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
add
push
or
adc
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
add
jne
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
mov
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
push
push
push
call
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
push
mov
push
mov
push
pushl
pushl
call
add
test
push
push
pushl
jl
call
add
test
jg
push
push
pushl
call
add
test
mov
jge
pop
pop
ret
call
add
test
jl
push
push
pushl
call
add
test
jl
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
mov
jne
test
jne
xor
cmp
setne
cmp
mov
jb
mov
shr
imul
add
cmp
movl
jbe
lea
imul
add
cmp
mov
ja
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
add
test
je
cmp
jg
add
shr
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
add
imul
add
lea
mov
mov
mov
cmp
ja
mov
cmpl
jne
mov
test
mov
jne
test
jne
test
jg
jne
cmpl
mov
movl
jne
mov
mov
mov
mov
mov
add
mov
add
cmp
jbe
jmp
imul
lea
add
cmp
jae
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
push
push
push
call
mov
add
jmp
cmp
ja
mov
lea
cmpl
jne
mov
test
mov
jne
test
jne
test
jl
jne
test
movl
jne
mov
mov
mov
mov
sub
mov
sub
cmp
ja
mov
jmp
mov
push
push
push
call
mov
add
jmp
test
je
push
push
call
mov
add
jmp
cmp
ja
test
je
cmp
mov
mov
jg
mov
shr
jmp
lea
mov
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
add
movl
sub
jmp
test
je
push
push
call
mov
add
jmp
mov
mov
imul
add
cmpl
je
mov
mov
mov
sub
sub
cmp
mov
jge
test
jle
mov
sub
cmpl
jg
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
test
jg
mov
mov
sub
sub
sub
cmp
jl
test
jg
cmp
jle
mov
mov
push
push
mov
xor
div
push
push
push
call
add
cmp
jle
mov
sub
mov
mov
xor
div
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
movl
sub
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
lea
cmp
jae
mov
mov
sub
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
jmp
mov
shr
imul
lea
mov
add
mov
push
add
push
mov
push
call
mov
mov
lea
push
push
sub
push
call
mov
mov
mov
sub
push
sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
push
inc
inc
add
push
call
mov
test
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
inc
inc
add
pop
leave
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
add
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
call
out
add
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
add
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
add
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
add
or
test
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
add
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
inc
add
push
push
push
add
push
call
and
jne
inc
add
test
cld
lea
call
mov
cmp
je
inc
add
push
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
add
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
inc
inc
add
add
adc
pop
mov
call
inc
add
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
add
pushl
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
inc
add
add
jne
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
inc
add
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
es
add
mov
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
imulb
inc
add
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
add
mov
dec
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
add
push
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
add
add
add
clc
ss
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
jne
mov
call
push
call
pop
push
lea
call
cmpl
mov
jne
mov
cmp
je
cmp
je
mov
add
call
lea
call
mov
test
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
cmpw
mov
je
jmp
push
lea
push
call
test
jne
jmp
cmp
jne
cmpw
je
jmp
cmp
mov
mov
jne
mov
jmp
push
mov
push
andl
push
push
mov
push
mov
lea
call
mov
pushl
add
call
mov
test
js
mov
mov
mov
push
call
lea
call
pop
mov
pop
leave
ret
cmpl
je
mov
push
mov
call
test
jne
pushl
mov
mov
call
cmp
je
mov
push
push
push
mov
call
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
jne
testb
je
jmp
int3
int3
int3
int3
int3
push
push
mov
test
mov
je
push
mov
push
xor
lea
cmpl
jne
cmp
je
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
push
push
call
add
test
jne
cmp
jne
test
mov
je
mov
mov
push
call
push
call
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
mov
pushl
push
call
mov
and
neg
sbb
and
pop
ret
push
mov
test
je
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
movb
xor
pop
ret
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
mov
test
push
push
je
lea
adc
inc
add
pushl
call
mov
cmp
jne
mov
pop
pop
ret
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
xor
jmp
xor
jmp
mov
mov
push
inc
push
push
call
test
je
mov
mov
incl
lea
ret
xor
ret
push
mov
push
mov
push
mov
test
jbe
push
add
andl
lea
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
push
pushl
xor
push
inc
call
pop
pop
pop
leave
ret
incl
add
cmp
jb
jmp
push
mov
push
push
push
push
mov
push
mov
xor
cmp
je
cmp
je
inc
add
mov
call
mov
lea
push
push
call
push
lea
mov
call
mov
lea
add
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
mov
je
inc
add
call
lea
call
lea
call
cmp
jne
inc
add
pop
leave
ret
push
mov
push
push
push
mov
xor
push
lea
mov
mov
call
lea
push
mov
mov
call
mov
mov
and
pop
jne
mov
mov
mov
push
pushl
pushl
call
cmp
jne
mov
mov
push
push
push
call
mov
lea
call
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
sub
je
andl
andl
lea
push
lea
lea
movl
movl
mov
call
testl
jne
mov
mov
push
push
lea
push
push
call
mov
mov
mov
push
pushl
pushl
push
pushl
push
call
add
mov
movl
mov
mov
pop
lea
call
mov
pop
pop
leave
ret
push
mov
test
je
push
push
mov
test
jl
mov
cmpb
jne
andl
mov
pop
mov
movb
xor
pop
pop
ret
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
xor
test
je
mov
test
je
add
movzbl
rol
xor
mov
test
jne
ret
mov
push
push
mov
movl
dec
inc
add
inc
add
or
add
or
add
lea
xor
add
test
inc
js
shlb
adc
pop
mov
mov
push
call
lea
add
movl
and
lea
lea
movl
push
inc
add
add
add
sbb
mov
add
call
lea
call
lea
call
lea
call
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
shr
push
mov
and
mov
mov
mov
jne
mov
mov
cmpl
je
mov
push
push
call
test
je
mov
call
movl
lea
movl
movl
movb
movb
call
mov
orb
mov
mov
mov
mov
mov
mov
cmpl
jne
movl
movl
cmpl
je
mov
andl
push
mov
lea
call
mov
test
je
mov
call
test
jne
lea
call
xor
cmp
jne
mov
push
mov
push
xor
lea
call
cmpl
mov
mov
mov
mov
je
mov
cmp
mov
jne
pushl
andl
pushl
mov
lea
push
call
lea
push
call
mov
andl
lea
push
push
pushl
lea
pushl
pushl
push
lea
push
push
call
lea
push
call
mov
lea
mov
mov
call
add
mov
cmp
je
test
je
mov
call
mov
test
mov
je
mov
cmp
je
inc
mov
mov
push
pushl
pushl
push
call
cmpl
je
mov
mov
lea
push
push
push
mov
mov
call
cmpl
jne
mov
mov
mov
mov
lea
xor
push
and
push
or
mov
push
je
call
lea
push
call
lea
call
pop
pop
xor
pop
leave
ret
push
call
pop
mov
jmp
andl
push
call
test
je
andl
jmp
pushl
lea
pushl
push
call
lea
push
call
mov
jmp
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
cmp
jne
mov
cmp
je
cmp
je
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
pushl
call
call
lea
call
add
call
pop
pop
pop
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
and
push
xor
or
cmp
lea
mov
mov
mov
jne
mov
mov
lea
lea
lea
cmp
jne
test
jne
mov
mov
imul
lea
lea
cmp
jne
test
jne
cmp
je
testl
je
lea
cmp
jne
pop
pop
pop
mov
pop
ret
test
push
je
mov
lea
movsbw
cmp
jne
sub
add
add
test
jne
xor
pop
ret
movsbw
movzwl
movzwl
sub
pop
ret
push
mov
push
push
mov
push
mov
cmp
je
push
pop
cmp
je
andl
test
je
push
call
pop
push
lea
call
cmpl
je
mov
pushl
mov
pushl
mov
push
call
test
jne
mov
test
je
and
mov
test
jne
mov
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
pop
pushl
mov
call
test
pop
jne
jmp
xor
jmp
mov
cmp
jne
ret
push
mov
cmpl
push
mov
jne
test
je
incl
mov
test
mov
pop
pop
je
jmp
push
mov
sub
push
mov
push
xor
cmp
mov
je
push
pushl
lea
call
mov
cmp
pop
mov
je
mov
lea
push
push
push
call
test
js
cmp
mov
je
mov
test
mov
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
mov
lea
push
push
pushl
push
call
cmpl
jne
mov
test
mov
jne
mov
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
cmpl
je
mov
mov
push
push
pushl
call
test
je
andl
lea
call
inc
add
pop
mov
lea
call
mov
pop
pop
pop
leave
ret
push
mov
and
sub
push
mov
mov
cmp
push
push
je
cmp
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
inc
ret
push
mov
cmpl
jne
xor
inc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
call
add
test
jne
push
push
push
push
push
call
add
cmpl
mov
mov
mov
jne
push
mov
call
add
cmp
jne
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
ret
pop
pop
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
fldl
push
fstl
push
fldl
push
fstl
lea
fldl
mov
faddl
fldl
faddl
lea
fxch
push
mov
fstpl
fxch
push
fstl
push
fstpl
fxch
fstl
fstpl
fstpl
call
fldl
add
fstpl
xor
fldl
fstpl
jmp
fstp
fstp
fstp
fstp
mov
mov
lea
push
lea
push
push
call
fldl
fldl
add
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
fldl
fldl
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
add
cmp
jl
mov
fxch
fstl
pop
fxch
pop
fstl
pop
fxch
fsubp
fstpl
fsubrp
fstpl
mov
pop
ret
fstp
fldl
fstl
jmp
fstp
fldl
fstl
jmp
cmpl
jne
mov
test
je
incl
mov
test
mov
jne
ret
pushl
mov
movb
call
ret
push
mov
push
mov
test
jne
leave
ret
push
mov
mov
push
xor
cmp
movl
jne
mov
cmp
jne
push
push
add
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
pop
pop
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
je
mov
call
testb
je
push
call
jmp
mov
call
mov
call
ret
pushl
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
push
push
call
test
jne
mov
xor
mov
push
lea
mov
call
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
js
mov
mov
push
push
push
call
test
js
mov
mov
mov
add
call
push
push
push
push
call
push
push
push
pushl
call
test
js
mov
mov
lea
push
push
call
test
lea
js
mov
call
mov
mov
push
lea
mov
mov
call
mov
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
jne
lea
call
lea
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
push
mov
mov
call
add
cmp
jl
jg
mov
cmp
jbe
mov
mov
mov
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
mov
call
add
je
sub
inc
and
pushl
pushl
pushl
pushl
pushl
push
lea
push
push
call
test
je
jmp
lea
call
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
push
xor
cmp
push
je
pushl
pushl
call
pushl
mov
pushl
call
mov
add
push
mov
call
pop
xor
pop
pop
pop
ret
mov
push
call
test
je
mov
push
call
test
je
mov
orl
jmp
push
mov
mov
test
je
mov
push
push
call
mov
test
je
andl
pushl
mov
call
pop
ret
push
lea
sub
mov
xor
mov
cmpl
mov
jge
test
push
push
je
andl
push
pop
mov
jnp
inc
add
lea
push
mov
mov
mov
push
movl
mov
movb
call
test
js
mov
andl
test
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
andl
lea
push
lea
lea
push
mov
movl
mov
mov
movb
mov
push
call
test
je
testb
jne
testb
jne
lea
call
testb
jne
testb
jne
xor
pop
pop
mov
xor
call
add
leave
ret
pushl
lea
call
pushl
mov
cmp
inc
add
or
add
call
pop
pop
lea
call
pushl
pushl
call
pop
xor
pop
inc
jmp
mov
add
call
ret
mov
test
je
mov
dec
push
mov
lea
mov
add
rorb
add
push
mov
mov
push
push
mov
call
test
pop
pop
jne
mov
andl
and
xor
or
jne
mov
pop
pop
ret
push
push
mov
test
je
cmp
jne
mov
and
or
jne
cmpl
jne
cmpl
je
pushl
mov
pushl
push
call
test
je
mov
pop
pop
ret
xor
jmp
mov
and
or
jne
mov
call
mov
jmp
mov
add
mov
call
mov
jmp
xor
jmp
push
mov
push
mov
push
push
push
lea
call
test
jne
mov
test
jne
mov
test
jne
mov
mov
mov
mov
lea
call
test
jne
test
jne
mov
mov
push
pushl
push
call
test
je
pop
pop
pop
pop
pop
ret
xor
jmp
pushl
mov
mov
call
mov
jmp
incl
jmp
pushl
mov
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
xor
cmp
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
mov
mov
cmp
mov
jne
mov
test
je
test
js
test
jne
add
cmpl
jne
test
mov
mov
mov
mov
jne
mov
mov
mov
pop
pop
xor
pop
ret
mov
test
lea
je
test
js
xor
jmp
mov
test
je
test
js
xor
jmp
mov
jmp
mov
jmp
push
mov
call
cmp
jne
mov
xor
jmp
mov
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
call
mov
mov
jmp
mov
test
je
mov
jmp
push
mov
mov
call
cmpl
je
mov
jmp
mov
mov
lea
push
push
call
mov
pop
movl
mov
pop
xor
pop
ret
mov
mov
lea
push
push
call
cmpl
jne
jmp
mov
cmp
jne
mov
cmp
je
xor
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
xor
push
mov
push
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
test
je
test
jne
mov
rolb
add
jne
mov
call
mov
mov
mov
cmp
movb
mov
mov
mov
jne
mov
mov
inc
add
sbb
incl
sarb
mov
sbb
inc
add
cmp
jne
lea
push
lea
push
sub
cmp
mov
mov
mov
jne
mov
mov
mov
push
call
cmp
je
mov
mov
mov
mov
call
mov
mov
cmpb
jne
mov
mov
mov
mov
jb
inc
add
add
mov
and
cmp
jne
mov
mov
and
inc
add
lea
push
push
call
cmp
mov
mov
jne
jmp
mov
mov
mov
mov
and
or
movl
jne
mov
call
mov
mov
push
mov
mov
mov
call
mov
push
push
call
mov
mov
add
push
lea
mov
mov
call
mov
add
cmp
mov
jne
mov
call
mov
mov
inc
add
mov
jmp
mov
push
mov
mov
call
mov
cltd
xor
decl
dec
add
xlat
decl
xor
shr
and
call
in
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
mov
lea
call
mov
pop
leave
ret
int3
push
mov
mov
test
je
call
testb
movl
je
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
push
mov
mov
test
mov
jne
test
jne
movl
mov
test
jne
testb
je
push
call
add
mov
pop
pop
ret
lea
push
call
add
test
jne
push
call
add
jmp
push
mov
push
push
push
mov
mov
cmpl
jge
mov
andl
mov
push
call
mov
test
pop
jne
test
mov
jne
testb
jne
lea
mov
lea
call
xor
mov
call
andl
push
call
mov
test
pop
pop
pop
je
mov
push
push
call
lea
call
leave
ret
push
mov
push
mov
push
lea
push
lea
push
xor
push
pushl
mov
call
cmp
je
cmp
push
jne
xor
testb
je
mov
mov
mov
cmp
je
mov
mov
cmp
cmc
cs
add
jne
cmp
jne
cmp
jne
mov
pop
pop
leave
ret
lea
push
push
inc
add
jne
mov
test
jns
push
mov
call
cmp
je
mov
jmp
mov
mov
mov
call
cmp
jbe
pushl
mov
pushl
mov
pushl
call
xor
jmp
xor
jmp
xor
inc
jmp
mov
cmpb
jne
push
call
test
je
pushl
mov
pushl
push
call
ret
mov
cmpb
jne
mov
push
lea
call
test
je
mov
lea
call
xor
ret
push
mov
lea
call
mov
test
mov
je
add
push
call
test
pop
jne
push
call
pop
pop
ret
push
mov
sub
pushl
andl
mov
lea
movl
call
mov
test
jne
push
push
mov
lea
cmpl
push
je
xor
call
lea
mov
test
je
mov
lea
pushl
push
call
xor
mov
call
xor
mov
call
mov
test
mov
je
mov
push
call
test
jne
mov
mov
call
mov
test
jne
lea
mov
test
je
mov
mov
orl
mov
mov
and
jne
orl
cmpl
je
test
jne
call
add
mov
andl
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
mov
jne
and
neg
sbb
and
push
call
call
mov
jmp
mov
mov
lea
call
pop
pop
xor
pop
leave
ret
push
mov
push
mov
push
pushl
call
mov
pop
pop
ret
push
mov
push
push
andl
push
mov
push
mov
test
mov
je
push
call
pop
movl
mov
call
test
je
xor
cmp
jne
cmp
je
mov
cmp
je
cmp
je
push
call
pop
xor
pop
pop
leave
ret
test
je
movzwl
mov
mov
mov
incw
movzwl
cmp
je
test
je
cmpl
je
push
call
pop
xor
inc
jmp
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
push
call
mov
mov
lea
mov
mov
mov
mov
lea
call
mov
lea
call
mov
call
mov
test
jne
mov
xor
cmp
mov
mov
je
push
call
pop
movl
push
lea
call
lea
push
push
mov
call
test
jne
call
pushl
mov
call
cmpl
pop
jne
cmpl
mov
jne
cmp
je
inc
mov
mov
movl
cmpl
jne
mov
sub
add
push
pushl
call
pop
pop
xor
cmp
je
cmp
je
pushl
call
pop
mov
cmp
je
mov
push
call
lea
call
cmp
je
mov
test
jne
cmpl
jne
lea
call
lea
call
pop
pop
xor
pop
mov
pop
ret
cmpl
je
andl
decl
jmp
movl
cmpl
je
decl
pushl
lea
call
mov
jmp
push
mov
sub
push
mov
push
push
mov
call
test
mov
je
mov
sub
mov
mov
mov
sub
pop
pop
mov
mov
pop
leave
ret
testl
je
mov
push
pushl
pushl
call
xor
ret
movl
jmp
push
mov
and
sub
push
push
push
lea
call
mov
lea
mov
mov
xor
mov
add
mov
push
mov
lea
push
mov
call
mov
test
jne
mov
cmp
jge
mov
xor
mov
and
inc
shl
mov
shr
shl
not
and
and
cmpl
je
lea
call
lea
push
mov
call
cmp
je
xor
inc
push
push
push
pushl
call
mov
andl
test
jne
mov
andl
test
jne
push
push
lea
push
call
lea
push
call
pop
pop
pop
mov
pop
ret
push
mov
push
mov
push
mov
call
test
je
push
mov
mov
mov
call
test
mov
je
mov
push
call
mov
test
je
mov
push
call
call
pushl
mov
push
call
mov
push
mov
call
mov
test
mov
je
mov
push
call
add
call
mov
pop
leave
ret
xor
jmp
push
mov
push
push
mov
cmpl
mov
mov
jne
call
mov
push
pushl
lea
push
mov
call
mov
test
mov
je
cmpl
push
push
jne
mov
mov
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
andl
push
lea
call
mov
mov
lea
push
push
call
test
js
mov
test
je
xor
cmp
jne
inc
mov
push
push
push
push
call
lea
call
xor
leave
ret
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
xor
cmp
mov
je
lea
call
mov
mov
call
push
push
push
push
push
pushl
mov
call
mov
lea
call
pop
mov
pop
leave
ret
push
andl
test
mov
je
mov
push
call
mov
test
je
mov
push
call
cmpl
jne
mov
pop
ret
push
mov
and
sub
cmpl
push
push
jne
pop
pop
mov
pop
ret
andl
lea
add
push
push
mov
movl
call
mov
mov
test
jbe
push
pop
mov
mov
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
je
call
add
decl
jne
lea
call
lea
call
lea
call
jmp
mov
push
push
call
jmp
push
mov
and
push
push
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
jne
pop
mov
pop
ret
mov
push
push
call
jmp
mov
call
cmpl
jne
xor
inc
cmp
jne
cmpb
jne
ret
xor
ret
push
mov
push
mov
push
push
mov
call
test
jne
cmp
jne
mov
call
mov
call
test
je
mov
call
cmpb
jne
xor
jmp
mov
push
pop
call
test
je
pushl
mov
call
jmp
xor
mov
mov
call
pop
pop
pop
pop
ret
mov
and
or
jne
xor
ret
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
pop
mov
je
or
ret
andl
ret
xor
jmp
mov
jmp
push
mov
lea
movl
call
lea
call
mov
call
testb
jne
mov
pop
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
pushl
mov
push
pushl
call
add
mov
xor
mov
test
jne
pushl
mov
pushl
pushl
pushl
push
pushl
pushl
call
add
sbb
pop
jne
xor
inc
leave
ret
push
mov
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
add
or
je
jmp
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
shl
test
lea
jbe
mov
mov
test
je
andl
andl
add
dec
jne
mov
add
pop
ret
xor
pop
ret
push
mov
push
andl
push
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
cmpl
je
pushl
add
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
push
push
lea
push
pushl
xor
inc
lea
movl
movl
mov
call
testb
mov
mov
jne
testb
jne
test
je
mov
mov
push
call
mov
mov
andl
push
push
add
push
lea
movl
movl
mov
movl
mov
call
mov
push
lea
push
push
call
testb
mov
jne
testb
jne
testb
jne
testb
jne
mov
test
jne
mov
mov
lea
push
push
call
test
jne
cmpl
je
mov
mov
mov
push
push
push
call
add
jne
mov
mov
lea
push
push
push
call
test
jne
cmpl
jne
mov
mov
lea
push
push
push
call
add
jne
mov
mov
lea
push
push
push
call
test
jne
cmpl
jne
mov
andl
mov
lea
push
lea
push
push
push
call
test
jne
pushl
add
pushl
call
mov
mov
mov
add
push
push
push
call
test
jne
mov
test
je
mov
push
call
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
lea
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
fldl
mov
fstpl
fldl
mov
mov
fstpl
mov
mov
mov
add
mov
mov
add
mov
fildl
mov
fildl
sub
fxch
fstl
lea
fxch
mov
fstl
fxch
fstpl
fstpl
call
lea
call
lea
call
test
jne
mov
test
je
lea
mov
mov
movb
mov
rep
lea
push
lea
push
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
inc
sbb
pop
and
mov
test
je
mov
fldl
mov
fstpl
fldl
mov
mov
fstpl
sub
inc
add
and
lea
mov
call
mov
add
mov
add
mov
fildl
mov
fildl
sub
fxch
fstl
lea
fxch
fstl
fxch
fstpl
fstpl
call
lea
lea
push
push
call
mov
add
add
add
in
add
ret
filds
cmpsb
push
addb
imul
add
js
mov
movsl
mov
mov
add
add
stos
add
in
add
push
push
lea
push
push
push
lea
push
push
push
call
int3
add
add
lret
add
in
enter
mov
leave
xchg
rcr
mov
add
jge
pop
addl
mov
add
add
add
cmpb
fdiv
add
mov
call
add
xchg
scas
add
and
xchg
nop
mov
cld
lea
pop
popl
push
push
lea
push
push
lea
push
push
call
jns
add
imul
test
jmp
xorb
add
add
cld
add
filds
in
add
add
cmpsb
mov
add
push
lret
enter
add
int3
mull
sbb
push
push
lea
push
push
push
push
call
jmp
fstpt
push
add
clc
stos
leave
add
mov
fisubl
add
arpl
fildl
jecxz
ljmp
stos
mov
push
pushf
xchg
jmp
repnz
add
fiadds
jmp
lret
jp
imul
shl
add
jns
add
mov
add
adc
push
push
push
push
lea
push
lea
push
call
in
add
mov
jecxz
add
xchg
out
roll
mov
sarb
add
jns
xchg
add
pop
cmpb
pop
mov
add
enter
add
int3
lods
flds
add
mov
xchg
add
jle
sti
clc
mov
lea
pop
push
push
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
call
lea
test
jmp
mov
pop
test
js
mov
popl
gs
add
fcoml
mov
add
je
jo
std
add
add
scas
jge
add
push
add
jge
jns
roll
fcomi
pop
jb
in
in
mov
lea
pop
call
call
push
push
push
call
xlat
add
lods
pushf
pop
jge
stos
jmp
jecxz
enter
add
ja
pushf
sahf
push
add
fcomps
lret
push
imul
mov
add
add
mov
mov
lea
pop
push
push
push
push
lea
push
push
push
push
call
iret
add
sti
push
mov
add
add
add
mov
add
mov
mov
pop
add
cld
add
mov
mov
add
cmpsl
jb
add
cld
add
outsl
jo
add
pop
add
pop
call
push
push
lea
push
call
mov
gs
add
imul
sti
add
add
mov
mov
imul
pop
add
mov
fwait
mov
negl
add
push
jnp
arpl
cmpl
lea
pop
jmp
ret
push
push
push
push
call
lahf
mov
add
outsl
add
pop
add
xchg
scas
mov
lea
add
jb
add
cld
add
addb
mov
mov
add
jnp
add
out
add
lea
pop
mov
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
xchg
lods
popf
add
roll
outsl
add
add
pusha
jbe
add
xchg
add
cli
add
jnp
cwtl
loop
xchg
add
addl
xchg
jnp
js
add
add
loopne
add
arpl
add
cmpsb
add
in
add
add
add
mov
lea
pop
mov
push
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
jp
add
aam
add
lahf
rolb
jp
into
add
lds
cmpb
add
out
mov
lock
lcall
lods
aad
add
mov
lea
pop
add
push
push
push
push
push
push
push
push
call
lret
lods
add
divl
aam
add
loopne
idiv
add
jo
add
pop
cmc
test
out
mov
mov
jl
iret
cli
leave
mov
add
pop
repnz
mov
mov
mov
mov
mov
lret
test
mov
add
jbe
mov
lea
pop
add
push
push
push
push
push
push
push
call
in
orl
jns
testl
add
ret
mov
xchg
stos
add
rcl
add
arpl
out
mov
add
add
cld
add
pop
pop
add
add
add
pop
add
push
push
push
push
call
xchg
mov
stc
add
mov
add
add
add
cmpsl
add
sahf
fiadds
orb
roll
std
add
pop
mov
popf
jge
add
mov
int
add
lock
test
fwait
xchg
pop
push
add
add
jle
add
clc
add
orb
mov
push
push
push
call
add
add
hlt
lcall
add
scas
xchg
add
add
cmpsl
ror
mov
xchg
clc
stos
into
fildl
pop
add
fs
je
ficomps
test
add
xchg
pusha
add
in
add
add
add
add
clc
loop
jnp
iret
add
add
andb
jp
mov
add
push
stos
xchg
ror
out
clc
jecxz
jge
add
mov
add
add
mov
lea
pop
xor
push
lea
push
lea
push
push
call
pop
sti
xchg
add
popa
stos
add
add
js
xchg
ficompl
lcall
pop
mov
add
fsubs
add
mov
mov
add
add
insb
add
add
add
data16
add
mov
fimuls
lea
pop
add
push
push
dec
add
push
or
inc
add
sub
sub
sub
pop
pop
push
push
push
push
call
rolb
push
add
addr16
in
mov
fcmovu
movsb
pop
add
add
out
xchg
add
std
fisubrl
add
faddl
stc
pop
cmpsl
insb
arpl
add
add
xchg
in
out
add
popa
pushf
bnd
lcall
push
jmp
pop
add
shl
mov
lea
pop
pushl
push
push
push
call
aad
add
add
jb
stos
jo
filds
push
add
xchg
popl
add
mov
add
add
out
add
add
call
scas
mov
jne
pop
add
frstor
js
add
add
out
rorl
mov
mov
lea
pop
call
mov
push
push
push
push
push
push
push
call
add
add
outsl
pop
into
lret
jno
add
add
push
out
add
add
jnp
stos
add
jb
icebp
add
pop
lds
cmpsl
add
fildll
lock
mov
test
lock
add
xchg
add
add
movsl
mov
add
out
movsb
test
bound
movl
push
push
push
push
push
lea
push
push
push
push
call
jne
jnp
add
jle
popf
icebp
xchg
add
jle
add
add
xchg
out
add
scas
mov
stc
fldl
stos
faddl
pop
add
cli
loopne
mov
add
incb
mov
add
add
add
loop
cmpsb
mov
add
add
pop
lea
push
push
push
lea
push
push
push
call
add
leave
js
add
fisubl
add
leave
rcll
mov
add
out
add
out
add
mov
repnz
xchg
mov
add
add
jle
js
add
add
add
popf
xchg
add
add
lret
add
movsb
loop
mov
jmp
add
cld
lea
pop
push
push
push
lea
push
lea
push
push
call
je
rcll
add
add
xchg
repnz
xchg
push
add
loopne
add
add
cmpsb
add
cmp
out
pop
add
call
add
add
pop
pushl
push
push
push
push
lea
push
push
call
enter
add
add
mov
push
pop
add
in
test
leave
lods
pop
clc
in
xchg
lods
mov
add
fadds
mov
add
loop
rolb
mov
add
add
add
mov
icebp
add
add
mov
add
loop
lds
sti
add
les
add
add
add
hlt
fistps
mov
mov
lea
pop
pushl
push
push
push
push
call
lea
add
add
lds
mov
add
xchg
add
add
leave
stos
add
add
cwtl
lret
add
xchg
add
add
add
mov
sti
cmpsb
add
outsl
pushf
jp
lcall
movsb
add
test
movsb
out
roll
xchg
testl
adc
out
add
push
push
push
push
push
call
jne
pop
add
lahf
add
insb
add
mov
xchg
xchg
mov
leave
push
xchg
roll
add
pop
mov
add
mov
pop
xchg
add
pop
loopne
mov
jbe
pop
add
xchg
jo
ljmp
lea
pop
pushl
push
push
lea
push
push
push
lea
push
push
lea
push
call
movb
add
push
xchg
add
add
mov
add
add
xchg
sti
stos
add
mov
stos
nop
imul
add
add
jno
hlt
jl
stos
add
lahf
stc
jns
add
mov
lea
pop
pushl
push
lea
push
lea
push
lea
push
push
push
push
lea
push
push
call
cmc
jno
add
in
clc
mov
add
incb
jb
add
stc
add
in
mov
fnstsw
lea
add
add
sti
leave
add
push
enter
les
pop
add
pop
call
push
push
shr
push
xor
add
ror
sub
inc
dec
sub
pop
sub
pop
push
push
lea
push
push
push
push
call
jmp
add
pushf
add
stc
add
les
add
mov
add
filds
lods
hlt
mov
add
add
clc
stos
add
popf
cmc
stos
mov
rclb
lock
add
add
pop
pushl
call
push
push
push
push
push
call
sahf
fbstp
fadds
add
push
xchg
add
rolb
xchg
add
mov
add
jo
out
pop
xchg
les
add
out
movsl
xchg
iret
loope
add
add
add
add
mov
add
add
push
add
loop
cmc
mov
mov
lea
pop
push
push
push
add
push
and
add
inc
shr
rol
shl
sub
not
pop
rol
dec
pop
push
push
push
call
neg
add
xchg
jae
pushf
stos
add
gs
cwtl
xchg
outsl
xchg
add
jle
test
cmc
pop
jb
add
nop
mov
add
sbb
iret
mov
add
mov
add
lret
fs
add
mov
out
cmpsl
pop
add
repnz
int3
add
push
lock
scas
mov
lea
pop
push
push
lea
push
push
call
cmpsl
addr16
mov
jns
int3
add
jo
add
add
add
add
add
add
vmulss
fwait
add
add
xchg
add
loopne
add
add
pop
push
push
push
push
call
xchg
add
xchg
add
add
mov
mov
add
icebp
add
add
stos
add
xchg
add
movsl
clc
add
push
jbe
out
jb
add
add
gs
aam
js
add
add
add
jecxz
cld
lea
pop
call
push
push
push
push
push
push
call
test
ja
jb
push
mov
lock
add
call
test
lds
cmpsl
mov
pop
add
add
xlat
pusha
in
add
call
pop
mov
movsb
lock
add
mov
lea
pop
mov
push
push
lea
push
push
call
add
in
repnz
movl
mov
cld
mov
push
nop
jl
lea
push
and
movsb
cli
add
fdivl
add
fsts
xchg
jae
bound
lods
pop
mov
add
add
add
xchg
xchg
sub
add
filds
scas
outsl
pop
stos
mov
lea
pop
push
push
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
scas
add
add
add
repnz
aam
jecxz
add
add
in
insb
add
xlat
incb
add
int
mov
popf
push
sar
pop
add
jecxz
add
mov
cli
cli
insb
add
rolb
ja
add
int3
add
lret
imul
hlt
lea
pop
push
mov
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
push
xchg
add
add
jge
lock
add
pushf
add
add
rcrl
jecxz
add
rcl
add
add
jmp
out
mov
test
lahf
sarl
xchg
add
out
add
in
mov
mov
add
cwtl
jmp
mov
pop
cli
out
jb
mov
cli
mov
cltd
outsl
hlt
pop
add
add
fnsave
data16
mov
lea
pop
add
push
push
call
imul
add
fildl
pushf
ja
add
add
lret
mov
addl
movb
into
fadds
pop
jmp
ja
rorb
filds
mov
mov
mov
lea
pop
add
add
push
lea
push
call
add
mov
fsubr
add
aad
add
pop
imul
add
stos
icebp
add
push
add
add
loopne
add
popa
add
mov
arpl
addr16
gs
add
in
movl
add
add
mov
add
add
add
pop
mov
xor
push
push
lea
push
push
push
push
call
add
movsl
add
xchg
add
add
add
push
jmp
insb
add
add
scas
add
add
mov
xchg
imul
add
scas
out
add
loop
lods
les
cltd
push
mov
lea
pop
add
push
push
push
push
push
push
push
lea
push
push
lea
push
call
add
mov
add
xchg
test
roll
add
fiadds
add
outsl
xchg
stos
mov
xchg
mov
add
insb
add
hlt
mov
lea
pop
push
push
lea
push
lea
push
call
add
gs
in
data16
lods
add
addl
jmp
add
xlat
mov
add
add
sti
outsl
in
std
xchg
add
mov
xchg
add
add
push
imul
add
lea
add
mov
add
add
add
mov
int3
lea
pop
mov
xor
push
push
push
push
push
push
lea
push
push
call
push
add
cld
ja
popf
add
xlat
mov
frstor
roll
add
add
pop
mov
mov
add
mov
in
jbe
shlb
in
add
mov
cmpsl
jge
icebp
cli
push
add
add
pop
cwtl
in
mov
les
lock
push
push
push
call
xchg
add
cld
jae
js
cmpsb
add
add
xchg
fcmovb
out
popl
std
pushf
sar
add
add
aad
xchg
add
add
add
mov
push
add
shrl
mov
int3
cli
fildl
sar
add
pushf
clc
xchg
mov
int3
lea
pop
mov
push
push
push
push
push
push
push
push
push
call
mov
adc
sahf
test
mov
add
imul
add
rolb
push
add
mov
faddl
lock
add
xchg
add
jbe
lock
add
aad
loopne
add
call
add
arpl
pusha
fistps
fiadds
add
les
or
push
push
lea
push
push
call
out
fisttps
add
loop
lcall
jmp
add
lods
leave
add
pushf
add
add
add
nop
repnz
addl
add
mov
lea
pop
add
push
push
push
call
mov
loope
add
add
xchg
leave
gs
jo
add
mov
pop
add
add
stc
add
add
mul
add
ret
add
add
add
flds
add
icebp
orl
jnp
shrb
pop
add
fiaddl
mov
bound
push
push
push
push
push
call
add
add
add
repnz
add
push
pop
add
out
out
incb
add
mov
push
add
lock
add
test
mov
stos
test
pop
add
or
data16
loopne
fdecstp
mov
addl
mov
add
add
mov
mov
add
lods
push
mov
push
add
mov
xchg
mov
lea
pop
mov
xor
push
push
push
push
push
push
lea
push
push
push
push
call
pop
push
ljmp
out
add
add
mov
add
add
lds
add
subb
add
add
out
add
int
rolb
add
push
addb
cmpsb
add
pop
pop
pop
mov
int
add
fcompl
pop
call
lea
pop
sub
pop
push
push
push
push
push
call
ret
push
insb
ja
pop
pop
lods
popf
add
jns
lea
add
rclb
add
jbe
arpl
add
mov
push
mov
add
icebp
add
add
cld
mov
add
nop
loope
xchg
mov
add
mov
add
ja
add
xchg
add
add
lahf
loope
cmpsb
mov
insb
push
add
pop
rep
pop
push
push
push
push
lea
push
call
push
mov
mov
add
and
out
jno
cltd
leave
outsl
jmp
lret
shr
jne
jmp
jmp
mov
jmp
cmpsb
out
in
pop
jnp
add
add
aad
les
js
mov
add
push
add
add
add
mov
sahf
in
pusha
add
lea
pop
mov
push
push
push
push
call
mov
pop
out
add
nop
add
add
add
out
scas
mov
mov
add
add
stos
add
sbbb
xlat
imul
mov
mov
add
add
test
add
mov
add
add
add
sarb
fcmovnu
in
test
popa
adc
pop
in
push
push
push
lea
push
push
push
push
call
fs
add
out
lret
outsl
testl
add
cmc
call
xchg
add
lods
in
mov
scas
push
fdivrl
xlat
lods
aad
cmc
push
add
imul
add
pop
mov
rcrb
cmpsb
popa
fmul
add
out
nop
int3
add
add
mov
lret
add
lods
mov
lea
pop
add
push
push
push
push
push
push
push
push
push
push
call
add
add
in
mov
xchg
xchg
lods
add
add
int
mov
mov
add
icebp
stos
xchg
cli
add
pop
popf
add
iret
scas
push
xchg
push
add
xchg
add
add
jb
add
iret
add
pop
add
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
xchg
add
nop
arpl
xchg
sahf
add
negl
mov
test
add
add
test
add
test
add
xchg
mov
stos
add
add
repnz
add
add
jne
lret
push
add
test
jb
popa
cli
imul
test
add
jle
fstpl
add
add
lea
pop
add
pop
mov
xor
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
out
pop
push
fildl
mov
add
mov
add
add
hlt
jbe
fwait
add
cmpsl
mov
xchg
ljmp
jae
shr
add
jmp
test
mov
lea
pop
mov
push
push
push
push
push
lea
push
push
call
add
aad
out
push
out
fildl
add
pop
mov
mov
cli
add
xchg
xchg
add
add
xchg
add
cli
movsl
jp
add
je
call
arpl
sub
mov
sti
stos
add
gs
xchg
add
push
stos
xchg
pusha
pop
int3
mov
loopne
popf
mov
lea
pop
xor
push
lea
push
push
lea
push
push
call
add
jno
jne
add
add
incb
popf
mov
xchg
add
hlt
add
icebp
mov
call
add
in
lods
stos
push
in
fsub
in
add
xchg
into
push
test
add
pop
add
push
push
push
push
lea
push
push
push
push
push
push
call
popf
add
add
out
add
loop
popf
add
add
jmp
lods
jae
orb
roll
push
add
xchg
mov
outsl
mov
pop
in
test
mov
hlt
lea
pop
mov
xor
push
push
push
push
lea
push
push
push
push
push
push
call
push
outsl
ljmp
test
stos
scas
data16
jmp
fstpl
push
add
mov
add
add
bound
add
bound
add
add
arpl
mov
add
add
jecxz
sub
popf
xchg
add
sub
ret
push
push
push
push
lea
push
push
push
push
push
call
jnp
mov
hlt
repnz
add
xlat
mov
mov
xchg
incb
jmp
arpl
add
repnz
add
pop
lahf
mov
push
ja
add
mov
cwtl
add
add
icebp
add
into
add
loop
push
add
add
add
int3
add
add
stos
rolb
xchg
pop
mov
push
push
shl
push
or
not
add
rol
dec
sub
xor
pop
not
dec
add
pop
push
push
push
call
mov
add
leave
addr16
lcall
lds
add
add
test
outsl
add
mov
aad
xchg
xchg
add
add
std
xchg
pop
addb
add
xchg
push
xchg
cli
add
add
jno
mov
imul
lret
mov
lea
pop
pushl
call
push
push
push
lea
push
call
movsb
add
add
add
popl
add
pop
xchg
add
jp
mov
aad
out
pop
lock
iret
in
xchg
imull
xchg
add
cmpsl
mov
movsb
add
mov
add
xlat
mov
add
pop
lahf
jl
xorb
stos
add
pop
push
push
push
rol
shr
push
xor
add
rol
not
sub
pop
add
ror
pop
push
push
call
jecxz
push
add
pop
pop
add
add
pop
repnz
pop
popl
std
repnz
add
cmpsl
mov
mov
cltd
movsb
hlt
add
mov
popf
bound
xchg
xchg
incb
jnp
outsl
jl
mov
lea
pop
push
push
push
lea
push
lea
push
call
add
out
mov
xchg
clc
mov
les
add
fiaddl
add
out
incb
add
clc
add
xchg
mov
add
jmp
mov
add
in
add
add
add
lret
leave
xchg
ljmp
add
lods
add
jb
add
pop
fiadds
add
imul
xchg
add
cld
lea
pop
push
push
push
lea
push
push
call
addb
add
leave
testl
add
lock
push
mov
add
push
add
xchg
add
ret
jnp
flds
add
je
lock
mov
add
roll
add
mov
xchg
add
mov
decb
xchg
push
addb
fmull
rclb
xchg
push
lea
push
push
call
jne
add
add
ret
out
cld
xchg
idivl
ja
add
je
add
add
addb
jo
add
in
add
addl
fcomps
add
xlat
sti
mov
add
lahf
lahf
add
into
jnp
lea
add
push
in
add
pop
mov
push
lea
push
push
call
movl
pop
mov
mov
clc
cltd
push
add
stos
lock
popa
mov
add
push
sahf
loopne
mov
add
cmpsl
movsl
add
cltd
add
rcl
mov
hlt
lea
pop
push
push
push
push
push
lea
push
call
popa
loopne
scas
push
push
add
jns
add
outsl
add
cli
fs
stc
mov
js
addr16
fcomps
in
hlt
add
rclb
lretw
lea
mov
add
xchg
popa
mov
mov
add
movsb
add
enter
add
jge
add
mov
lea
pop
push
push
push
lea
push
push
lea
push
push
push
call
mov
loop
mov
cmc
add
add
clc
add
add
add
add
hlt
add
cld
cmpsb
cmpsb
add
mov
test
xchg
ja
add
add
stc
aam
mov
add
mov
int3
lea
pop
mov
push
push
push
push
lea
push
push
push
push
lea
push
push
call
add
clc
fcoml
std
call
add
in
in
scas
cltd
add
push
test
roll
add
xchg
sahf
jbe
add
bound
ficomps
leave
add
add
int3
mov
pop
cli
add
mov
loop
lcall
lret
add
loop
xchg
lcall
add
mov
lea
pop
add
add
push
push
push
push
call
jne
lahf
fiadds
add
add
add
xchg
test
xchg
je
fldl
mov
add
add
cli
xchg
jmp
add
xchg
jge
clc
add
xchg
add
add
mov
adc
ret
mov
add
push
push
push
lea
push
call
add
clc
push
out
aam
repnz
mov
mov
xchg
add
pop
mov
popf
test
cmc
add
add
add
jb
pop
mov
add
push
add
out
ljmp
nop
xchg
add
mov
sahf
mov
add
pop
lret
test
lea
pop
mov
xor
push
lea
push
push
lea
push
push
push
lea
push
call
mov
mov
add
add
add
add
lock
faddl
lods
int
xchg
add
add
jmp
fs
add
mov
add
add
xlat
in
addl
add
loopne
adc
addr16
add
lea
pop
add
push
push
push
push
push
push
call
add
add
shll
add
add
jns
ja
push
add
filds
add
add
add
test
add
add
imul
jo
test
xchg
xchg
add
add
fiadds
pop
leave
mov
data16
add
movl
leave
sti
add
mov
lea
pop
mov
xor
push
xor
not
pop
add
push
xor
pop
pop
push
lea
push
push
call
stc
add
add
lods
jmp
push
fisubrl
add
mov
add
add
rolb
lods
jb
xchg
add
xchg
add
pop
add
add
xchg
add
mov
popa
add
lods
cmpsl
push
test
lock
add
lds
add
add
loop
add
repnz
mov
lea
pop
mov
push
push
lea
push
push
call
mov
add
mov
add
test
loopne
cmpsl
ljmp
mov
add
mov
loope
fadds
cld
add
out
add
shll
lcall
mov
pusha
or
xor
push
push
lea
push
push
push
push
push
lea
push
push
push
call
add
aad
jle
push
jge
fwait
aad
data16
add
add
add
add
add
pop
movsb
mov
xchg
test
add
rolb
add
lcall
pop
mov
add
mov
lea
pop
add
push
shr
pop
rep
push
push
push
call
add
pop
ror
mov
scas
mov
mov
add
add
mov
mov
faddl
hlt
push
fcmove
mov
faddl
leave
add
arpl
add
pop
mov
xor
push
lea
push
push
push
lea
push
push
push
call
gs
add
mov
jb
js
int
xchg
rolb
not
add
mov
in
jbe
je
add
add
jmp
add
imul
push
pop
add
in
imull
pop
or
je
mov
xor
push
add
rol
pop
mov
xor
push
push
push
push
lea
push
push
push
push
push
push
call
mov
clc
movsl
xchg
push
inc
add
lret
popf
add
mov
enter
repnz
lds
mov
add
mov
add
push
mov
add
ja
add
addb
add
bound
pop
add
push
add
lea
add
xor
pop
add
push
dec
pop
push
mov
xor
push
push
push
lea
push
push
push
push
push
lea
push
push
call
mov
mov
in
jo
rcrl
out
push
add
mov
hlt
push
icebp
test
out
lret
cmp
add
jge
scas
add
push
add
lret
fldl
add
mov
shl
jl
add
rcrl
add
add
add
bound
pop
add
push
add
xor
not
shl
pop
pop
push
push
push
push
push
push
push
call
stos
add
xchg
jno
sti
rcrl
jnp
jl
push
jno
mov
add
add
addl
pop
lods
mov
into
add
add
add
fadds
mov
insb
jp
mov
add
add
push
mov
imul
lea
pop
rep
mov
push
push
lea
push
lea
push
push
push
call
add
mov
add
push
add
in
mov
add
xorb
loope
aam
add
add
movsb
add
adcl
sahf
add
add
mov
lea
pop
xor
push
push
push
call
int
outsl
jge
rclb
je
rcl
jnp
int
add
jne
mov
cmc
add
pop
xchg
mov
add
xchg
fadds
add
hlt
aad
add
mov
add
mov
loop
cmpsl
add
hlt
lea
pop
add
push
push
lea
push
push
call
add
add
push
jge
aad
add
out
add
mov
add
jecxz
lods
add
add
test
push
jbe
jb
mov
fsubl
mov
icebp
stos
ret
lea
pop
or
je
mov
push
lea
push
push
push
lea
push
lea
push
call
roll
popf
fcoml
jmp
add
xchg
mov
jmp
lret
mov
add
cmp
add
icebp
fstpl
scas
add
add
add
jge
jb
int3
lods
out
add
stc
xchg
add
lock
add
push
ret
mov
cli
add
add
add
jno
add
lea
pop
add
add
push
shr
lea
shr
add
pop
rep
push
lea
dec
add
pop
pop
push
push
sub
ror
push
or
not
add
sub
sub
sub
dec
pop
not
sub
add
pop
push
shl
add
shl
pop
pop
push
lea
dec
pop
mov
push
lea
push
push
lea
push
push
lea
push
call
loop
faddl
add
push
add
mov
cmc
ljmp
mov
add
je
lcall
pusha
mov
add
mov
movsb
ret
test
repnz
data16
insl
in
push
push
push
lea
push
push
push
push
lea
push
call
add
add
add
insb
icebp
in
loope
scas
les
mov
add
add
imulb
imul
add
aad
add
add
out
mov
lea
pop
mov
push
dec
lea
add
pop
jmp
push
add
pop
push
push
sub
add
pop
mov
add
push
push
lea
push
push
lea
push
push
push
call
add
xchg
add
testl
add
push
jecxz
add
icebp
xchg
add
add
rcr
add
push
ja
cmpb
bound
add
add
add
mov
mov
lea
add
hlt
xchg
in
lahf
push
lock
pusha
add
in
jmp
mov
lea
pop
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
mov
test
add
mov
xchg
push
sti
rcll
jge
aam
out
mov
arpl
add
xchg
add
add
add
xchg
jmp
lret
cld
fnstsw
and
push
push
shl
sub
inc
pop
push
push
push
add
lea
add
xor
pop
mov
push
push
push
push
push
push
push
push
push
push
call
mov
push
notb
lods
scas
add
outsl
add
icebp
add
mov
xchg
lock
sti
je
mov
stos
mov
mov
add
rolb
add
add
add
add
cli
add
mov
add
sahf
add
pop
push
add
add
add
mov
lea
pop
pop
push
push
push
push
lea
push
push
push
call
ficompl
add
add
data16
mov
fldl
add
add
cld
add
add
jb
mov
iret
xchg
add
out
mov
bound
iret
mov
out
xchg
out
jae
addr16
add
push
bound
add
add
pop
add
xchg
test
add
lock
mov
lea
pop
pop
push
dec
sub
pop
pop
push
rol
pop
pop
leave
push
ror
xor
sub
pop
ret
push
add
pop
push
push
push
push
call
into
add
lret
pop
xlat
push
ljmp
add
aad
mov
add
mov
mov
push
add
add
jnp
in
lret
add
lret
lea
pop
mov
push
xor
add
ror
lea
pop
add
push
pop
push
push
sub
shr
sub
pop
push
push
shl
pop
push
push
push
push
lea
push
call
mov
add
fildll
add
mov
orb
fs
add
mov
test
sarb
cld
jmp
xlat
add
xchg
out
je
push
add
cwtl
int3
add
test
add
mov
lea
pop
push
push
push
push
push
push
push
call
add
jmp
jle
add
xchg
leave
add
loop
mov
in
outsl
imul
stc
xchg
mov
call
xchg
stos
stc
fadds
adcb
movsb
shl
add
xchg
add
cmpsb
add
xchg
add
out
push
pop
add
loop
mov
add
mov
out
add
mov
lds
out
pop
ret
cli
out
loope
add
jbe
xchg
mov
lea
pop
movl
addl
push
inc
dec
sub
pop
test
je
push
inc
xor
shr
pop
mov
push
lea
push
push
lea
push
push
call
add
add
add
test
jnp
mov
add
add
xchg
jl
mov
addl
add
add
jmp
int3
add
mov
add
xchg
add
in
push
push
in
mov
ficompl
je
add
jbe
into
cltd
add
add
into
mov
adc
pop
push
push
lea
push
lea
push
call
pushf
add
cltd
xchg
shlb
pop
mov
add
add
fsubs
lea
in
je
in
int3
add
lahf
jl
add
fidivrs
xchg
je
add
add
mov
mov
mov
arpl
mov
add
pushf
add
arpl
pop
xchg
jge
pushf
mov
add
testl
iret
in
repnz
add
in
jo
add
pop
pop
pop
push
inc
add
shl
pop
pop
push
push
push
push
push
push
lea
push
push
lea
push
push
call
add
add
mov
rclb
mov
add
in
add
add
add
fcoms
pop
mov
push
call
js
clc
test
addb
pushf
add
lds
popa
push
mov
add
lret
lret
lahf
cmpsl
int3
xchg
pop
adcl
mov
mov
jnp
fiadds
shrb
add
add
fucomi
add
add
add
mov
lea
pop
leave
ret
push
push
push
lea
push
push
push
push
call
lods
jle
in
pop
cli
movb
iret
add
mov
xorl
push
xchg
pushf
mov
shl
mul
add
leave
add
cmc
push
add
add
movsl
mov
in
mov
mov
jnp
loope
jmp
add
add
mov
add
lret
add
icebp
jmp
test
add
pop
push
mov
push
lea
push
push
push
call
lock
mov
add
test
add
add
ja
add
int
out
jbe
push
pop
jns
add
rolb
imul
mov
jne
add
jae
flds
js
mov
lea
pop
add
push
push
not
pop
push
push
lea
push
push
push
push
push
push
lea
push
push
call
mov
mov
xchg
add
insb
add
add
ret
push
cmpsb
add
jb
add
mov
add
pop
rclb
test
lcall
cld
jb
pop
jb
pop
add
scas
mov
add
cwtl
add
add
into
add
iret
rolb
add
add
add
add
hlt
push
lods
xchg
fs
lea
pop
push
push
ror
pop
push
testl
push
shr
pop
addl
push
push
push
push
lea
push
lea
push
push
call
ja
sahf
add
add
add
add
fcmovnbe
push
add
mov
bound
lret
test
movsb
lods
jnp
mov
add
jmp
add
mov
movsl
lods
mov
add
add
add
in
add
pop
call
push
push
push
push
lea
push
call
stc
mov
add
fnsave
pop
stos
pop
add
fwait
scas
mov
testb
sti
test
sti
add
shl
mov
add
add
pop
divb
roll
add
loope
mov
aam
bound
mov
push
dec
pop
pushl
push
push
push
push
call
test
add
add
mov
neg
clc
add
add
add
add
mov
add
in
mov
add
sti
xchg
add
mov
push
loopne
movsl
in
add
add
push
loopne
pop
ljmp
add
push
lods
add
add
lods
in
sti
mov
fucomip
add
pushf
add
add
pop
push
push
ror
shl
shl
pop
push
push
shr
inc
pop
call
push
push
push
push
push
push
push
lea
push
lea
push
push
call
add
pusha
mov
add
add
loope
ljmp
add
add
pushf
mov
add
std
int
add
add
lcall
mov
jno
stc
add
add
add
add
int3
lea
pop
cmpl
jne
push
shr
pop
pop
push
rol
add
sub
pop
pop
push
sub
add
pop
pop
push
ror
lea
dec
pop
pop
push
push
push
push
push
lea
push
lea
push
call
test
add
add
sbbl
mov
js
testb
fcomps
add
pusha
add
add
fsubs
add
lahf
les
xchg
mov
add
add
mov
add
mov
add
add
iret
mov
stc
add
scas
add
add
jp
add
addr16
leave
push
lea
pop
ret
push
lea
pop
push
push
push
push
call
add
push
xchg
add
icebp
scas
add
add
pop
stc
add
cwtl
mov
mov
add
enter
add
pop
jmp
add
add
add
mov
in
pushf
xchg
shr
je
add
jae
mov
cwtl
aad
add
add
imulb
mov
lea
pop
mov
push
push
push
push
push
lea
push
push
call
mov
add
mov
fildl
flds
add
add
add
add
add
out
add
push
add
int3
add
add
sbb
add
push
push
shr
ror
shl
pop
push
push
push
push
push
push
push
push
push
push
lea
push
push
call
push
testb
enter
mov
pop
add
cmpsb
pop
mov
shr
add
add
add
add
cli
addb
add
fsubs
add
fiaddl
clc
add
aam
les
pushf
add
mov
xchg
pop
rolb
add
mov
add
addr16
mov
add
pusha
pop
scas
add
push
mov
add
cmc
add
mov
lea
pop
push
push
rol
shr
pop
movl
push
push
push
push
lea
push
push
push
call
rol
add
add
add
mov
arpl
add
lret
mov
pop
xchg
add
cmpsl
mov
pop
mov
mov
fiadds
shll
add
fisttps
add
cmc
js
arpl
test
sar
out
add
mov
mov
aam
bound
pop
call
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
aad
pop
mov
pop
add
add
add
call
mov
xchg
add
cmc
les
aad
loop
push
js
push
arpl
cmpsl
popf
repnz
mov
ja
in
add
add
add
out
icebp
les
addb
add
push
add
add
add
add
test
lcall
add
add
ljmp
push
call
push
push
push
push
push
push
lea
push
push
lea
push
call
jnp
add
add
out
add
add
mov
push
jns
push
xchg
ljmp
add
add
push
pop
mov
mov
lret
add
mov
cli
fiaddl
add
scas
add
add
add
hlt
lea
pop
subl
push
push
lea
push
push
lea
push
push
call
mov
mov
insb
sti
int3
pop
xchg
mov
test
enter
add
sti
iret
add
add
add
push
add
sti
add
add
leave
ret
push
js
add
gs
lret
pop
xchg
iret
in
add
addr16
les
xchg
gs
pop
xchg
filds
add
xchg
add
lahf
add
hlt
lea
pop
cmpl
jne
push
not
lea
not
rol
pop
pop
push
pop
pop
push
push
lea
push
push
push
push
push
push
push
push
call
shl
add
lcall
mov
add
clc
test
xlat
add
xchg
add
testl
pop
js
movl
add
add
add
jbe
aam
bound
pop
pop
push
shl
pop
pop
push
lea
push
lea
push
push
push
push
push
push
push
push
call
add
jbe
lahf
add
add
xchg
shl
add
pop
add
out
notb
icebp
add
int3
test
add
aad
mov
rcr
iret
add
add
in
out
scas
insb
clc
add
in
push
add
movsb
cli
lret
test
add
mov
lea
pop
leave
push
add
inc
shr
pop
ret
push
push
lea
push
call
in
out
add
fistps
add
lock
add
loop
add
mov
push
je
add
movsb
cld
cld
push
add
add
add
add
add
stos
add
lods
fcmovne
testb
cmc
jne
in
add
jns
mov
lea
pop
mov
push
ror
pop
add
push
push
push
push
push
push
push
push
lea
push
lea
push
call
add
int3
fadds
add
add
out
mov
bound
loop
add
je
push
pusha
push
cld
jns
jns
add
andl
cwtl
mov
add
mov
leave
add
out
add
add
jb
add
rorl
push
push
push
push
push
push
lea
push
push
lea
push
call
add
stos
rolb
add
add
add
jne
in
pushf
add
pop
xchg
lret
cli
mov
jle
pusha
fidivl
cltd
jno
jne
nop
cmpb
hlt
mov
add
push
fldcw
mov
and
push
lea
push
push
lea
push
call
add
mov
sahf
mov
mov
mov
add
add
popf
mov
leave
fs
rol
add
or
add
loop
hlt
add
jno
je
xchg
clc
jecxz
push
add
add
lods
mov
lea
pop
push
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
jge
mov
add
out
pop
mov
pop
test
add
add
jmp
push
mov
shlb
bound
jns
movsl
stc
xchg
add
mov
out
jno
cmc
out
mov
add
mov
mov
lea
pop
push
push
sub
add
shr
pop
mov
lea
push
push
push
call
mov
lods
pop
je
ljmp
jb
add
pop
lahf
pop
movsl
add
mov
xchg
jmp
ljmp
add
xacquire
outsl
push
add
int
mov
jno
nop
mov
add
fistpl
push
add
mov
lea
pop
sub
push
lea
pop
mov
push
lea
push
push
push
call
push
mov
mov
add
cmc
aad
test
xchg
add
xchg
mov
add
add
mov
jne
jge
stc
aam
mov
add
add
add
add
fadds
cwtl
in
add
pop
add
data16
call
push
not
add
shr
sub
pop
mov
mov
push
push
push
push
push
lea
push
push
push
push
call
add
mov
stos
pop
mov
nop
add
add
add
in
filds
xchg
add
xchg
jno
add
mov
mov
fcmovnbe
jnp
bound
test
into
add
fadd
out
js
jno
les
mov
mov
hlt
lea
pop
add
add
push
sub
add
pop
mov
mov
push
add
inc
pop
cmp
jne
push
xor
dec
pop
cmp
jne
mov
push
shr
pop
movl
push
lea
push
lea
push
call
add
mov
add
add
into
andb
jmp
cwtl
imul
mov
lcall
icebp
add
mov
addb
add
arpl
add
stc
mul
fildl
pop
fnstcw
add
jno
mov
loope
mov
lea
pop
jmp
push
push
push
call
push
pop
lds
add
add
pop
scas
mov
add
add
bound
test
shr
lods
add
lret
mov
cwtl
cmpsl
pop
sbbb
add
mov
lea
pop
mov
push
xor
ror
not
pop
mov
sub
jne
push
sub
pop
mov
movl
push
push
call
add
add
mov
pop
mov
push
add
jecxz
test
add
add
add
pop
loopne
add
add
addb
sahf
roll
add
add
cmpsl
pushf
fdivl
mov
loop
ret
mov
mov
mov
lea
pop
jmp
push
lea
push
lea
push
push
lea
push
call
test
add
jecxz
loop
push
int
add
add
mov
add
mov
jecxz
add
mov
cmpsl
sahf
add
add
test
push
mov
jns
pop
out
add
lds
add
les
loopne
add
mov
pusha
add
pop
pusha
shr
add
loope
add
add
add
add
testb
pop
mov
lea
pop
mov
push
ror
pop
mov
push
push
push
call
add
add
add
lea
scas
add
push
pop
add
add
rcr
addl
enter
pusha
pop
fcomps
add
add
pop
jmp
pop
add
add
xlat
mov
jp
add
fldl
mov
lea
pop
cmp
jne
mov
push
inc
rol
shl
pop
movl
push
lea
push
call
add
ljmp
add
movl
add
xlat
mov
out
cltd
jmp
imul
add
add
mov
pushf
add
add
add
add
add
cltd
add
add
cmc
lahf
ficoml
out
pushf
add
add
pop
jmp
push
lea
push
lea
push
lea
push
push
push
push
push
push
push
call
fldt
add
ror
add
add
roll
add
movsb
fiadds
mov
leave
mov
add
jl
movsl
enter
push
add
push
add
add
mov
lea
pop
mov
push
add
add
lea
pop
cmpw
jne
mov
push
push
lea
push
lea
push
push
call
add
popl
mov
add
lock
add
sarb
sahf
les
add
loop
add
lcall
out
mov
out
scas
notb
testb
add
add
loope
add
cli
add
loope
js
add
xchg
cmpsl
add
add
add
aad
add
xchg
test
lret
movsb
xchg
jno
cld
lea
pop
movl
jmp
push
push
call
add
add
jmp
add
jmp
fadd
add
mov
jb
jne
cwtl
add
jo
call
lds
add
pop
cwtl
in
add
pop
cmc
add
pop
pop
add
gs
add
out
loop
xchg
mov
lea
pop
pushl
push
sub
ror
rol
pop
pop
push
push
push
call
loop
add
movb
add
xchg
fldpi
filds
push
jne
popl
add
mov
lods
add
fcmovne
icebp
add
add
mov
repnz
add
jno
add
add
arpl
mov
mov
push
push
push
call
call
cmpsl
sarl
ret
imul
in
sbb
add
xchg
add
les
pop
mov
add
add
add
push
fwait
bound
add
xchg
add
enter
add
pop
push
cli
jle
mov
fstps
fiadds
mov
and
mov
lea
pop
mov
push
push
inc
dec
push
or
inc
add
rol
xor
inc
sub
ror
ror
rol
dec
pop
add
pop
push
add
pop
push
push
sub
xor
pop
call
cmpl
je
push
push
add
push
and
add
add
sub
pop
dec
pop
push
push
call
insb
add
pusha
pushf
add
add
add
mov
in
pop
add
add
push
add
fiaddl
mov
add
jo
mov
add
add
jbe
test
add
add
xchg
out
mov
testl
add
pop
push
call
push
add
ror
pop
cmpl
je
push
push
add
shl
xor
push
sub
add
sub
shr
add
pop
dec
sub
pop
push
rol
rol
pop
push
call
push
ror
ror
rol
pop
cmpl
je
push
push
sub
shr
shl
xor
push
sub
add
add
rol
sub
sub
lea
dec
pop
dec
sub
rol
pop
push
xor
inc
add
pop
push
push
ror
not
sub
pop
call
push
pop
cmpl
je
push
push
lea
ror
add
push
or
inc
add
ror
not
ror
sub
add
lea
pop
dec
dec
xor
pop
push
push
push
call
out
in
pop
xchg
les
lret
xchg
stos
call
fadds
add
std
fadds
add
add
add
movsl
stos
add
add
add
leave
ret
lea
pop
push
push
sub
inc
shl
dec
pop
call
push
lea
xor
inc
add
pop
cmpl
je
push
push
sub
shl
add
push
or
not
add
add
inc
sub
xor
rol
ror
pop
add
pop
push
shr
rol
shr
pop
push
push
push
push
push
push
lea
push
push
lea
push
push
push
call
bnd
jnp
in
fnstenv
rcl
int3
xchg
subb
jge
add
rol
mov
int
insb
add
add
test
ret
add
insb
cmpsl
add
push
add
hlt
add
popa
int3
lods
lcall
push
cmpsb
mov
pop
add
loop
mov
xchg
add
mov
lea
pop
call
push
push
lea
push
push
push
call
add
ficoms
add
add
loope
lock
incb
int3
bound
add
roll
into
add
sahf
out
add
insb
add
in
add
add
add
ror
pop
cmc
fstpt
out
jle
leave
enter
fiadds
add
mov
add
cltd
add
push
jp
je
cwtl
jbe
loop
fcmovnu
push
movsl
call
xchg
mov
les
cmp
rol
je
push
push
ror
push
xor
add
sub
sub
xor
add
pop
lea
rol
shr
pop
push
push
push
lea
push
push
push
push
push
push
call
faddl
add
pop
les
pop
add
lods
add
rolb
add
je
pusha
mov
js
add
jae
popf
imul
mov
rolb
xchg
lret
add
xchg
js
subl
shl
add
pop
push
push
lea
push
call
stc
xlat
add
add
add
mulb
lret
mov
pop
push
mov
add
int
add
cli
addl
add
xchg
xchg
add
aam
mov
out
add
add
add
out
fstp
add
xlat
add
arpl
sahf
ret
lds
jle
sahf
test
mov
lea
pop
call
push
inc
not
inc
pop
cmpl
je
push
push
ror
sub
push
or
inc
add
shl
shr
add
sub
shl
ror
sub
pop
lea
not
dec
add
pop
push
push
push
push
push
push
push
push
call
push
imul
fnstsw
mov
add
stos
mov
add
int3
shlb
stos
cli
add
cltd
into
add
push
add
test
out
xchg
add
scas
mov
lret
jecxz
pop
add
in
add
cmc
call
frstor
xchg
enter
add
lods
lret
sahf
add
fiaddl
jle
mov
lea
pop
push
call
push
shl
inc
inc
xor
pop
cmpl
je
push
push
add
push
and
add
shr
sub
not
pop
not
pop
push
inc
ror
xor
sub
pop
push
call
push
lea
shl
shl
pop
cmpl
je
push
push
not
shl
push
or
inc
add
shr
lea
add
sub
lea
xor
shr
pop
ror
not
pop
push
add
shl
pop
push
push
pop
call
push
xor
dec
add
pop
cmpl
je
push
push
xor
shl
push
push
pop
add
xor
add
sub
lea
shl
pop
add
rol
pop
push
push
push
lea
push
push
push
call
into
pop
loopne
cld
call
stos
fiadds
movsl
std
lret
jne
add
mov
add
add
out
xchg
xchg
out
mov
add
testl
sahf
call
loope
incb
imul
rolb
add
repnz
lea
pop
push
push
xor
sub
pop
call
push
push
push
push
push
call
push
sti
fwait
add
push
add
add
test
add
add
add
add
mov
add
add
aam
mov
fiaddl
add
xchg
jo
add
add
add
pop
cmpl
je
push
push
sub
rol
not
push
and
add
ror
sub
inc
rol
add
not
pop
dec
inc
pop
push
lea
push
push
push
push
call
xlat
test
shlb
jns
jno
popf
add
add
add
add
push
pop
add
add
add
popf
add
icebp
loopne
mov
add
std
add
int3
add
add
xchg
add
add
add
add
push
loopne
add
mov
test
bound
push
call
push
dec
dec
shr
ror
pop
cmpl
je
push
push
lea
push
or
not
add
xor
ror
sub
sub
pop
shr
shl
pop
push
rol
not
pop
push
call
push
add
pop
cmpl
jne
push
add
shr
pop
mov
push
push
call
mov
lods
mov
add
nop
add
addl
add
scas
mov
in
fldenv
negb
std
les
int3
in
xchg
add
mov
fistpl
mov
pop
add
clc
jae
add
add
mov
mov
lea
pop
movl
push
shr
sub
pop
jmp
push
lea
push
lea
push
push
push
push
push
push
call
mov
shll
add
add
mov
je
mov
add
mov
add
lds
movsb
add
mov
push
icebp
int3
add
xchg
call
add
leave
lret
stos
test
and
mov
xlat
fadds
add
add
pop
add
movl
add
and
rcrb
cld
push
lea
push
call
mov
add
shlb
cli
rolb
add
out
fadds
aam
imul
call
mov
mov
je
lods
out
xchg
push
add
add
add
add
pop
rcl
rclb
stos
push
add
add
pushf
int
add
les
xlat
jae
cltd
scas
mov
lea
pop
pop
pop
push
lea
push
push
push
push
call
add
cwtl
roll
fcmovb
imul
mov
add
add
mov
stos
sbbl
add
popf
roll
out
add
mov
mov
mov
insb
lds
xchg
push
mov
push
mov
jp
jns
mov
lea
pop
pop
leave
push
shr
xor
sub
pop
ret
push
shr
pop
push
mov
push
push
push
lea
push
call
jne
out
nop
pop
in
add
jb
add
add
scas
mov
popf
repnz
push
divl
icebp
xchg
lods
test
lock
cmpsl
add
jno
add
mov
jbe
bound
ljmp
add
add
add
xchg
insb
add
test
int
ja
fst
arpl
add
lods
pop
sbbl
mov
lea
pop
add
cmpl
jne
push
push
sub
ror
lea
push
xor
add
dec
sub
sub
not
pop
dec
shl
pop
push
push
push
push
push
push
push
push
push
call
add
mov
pop
xchg
popl
add
add
jbe
movsb
scas
cli
pop
mov
in
push
sahf
call
add
jp
gs
add
add
in
jmp
rolb
add
add
pop
addl
lods
mov
mov
add
into
pop
lcall
imul
pop
movb
add
jo
add
ljmp
orl
call
push
push
push
push
push
push
call
pop
push
add
cmpsb
push
fidivrs
add
addb
loope
jnp
in
out
add
test
add
cld
jecxz
jne
add
rolb
add
cltd
fwait
jl
add
ret
add
add
add
mov
jecxz
ja
add
iret
push
mov
fdivrs
add
les
call
sarb
sub
pop
call
push
rol
pop
jmp
push
ror
shr
sub
pop
cmpl
je
push
push
push
call
int3
test
pusha
add
mov
lea
cmpsb
in
filds
add
outsl
push
add
add
std
fbld
add
add
mov
test
test
test
leave
add
lcall
add
lea
ja
out
mov
add
sarl
mov
je
jecxz
mov
out
add
mov
lea
pop
cmpl
jne
push
push
lea
push
lea
push
lea
push
push
push
push
call
pop
xchg
push
add
add
add
ljmp
loopne
add
push
mov
jmp
add
add
imul
test
add
add
push
fiadds
lds
add
add
fiaddl
lock
xchg
add
fsub
add
xlat
pop
shll
test
fsubl
add
rcrb
mov
lea
pop
leave
push
shl
pop
add
pop
push
sub
pop
pop
push
push
lea
push
call
mov
pop
mov
add
loopne
ljmp
mov
pushf
addb
add
les
loopne
add
stos
xchg
rcll
push
push
add
test
iret
in
add
add
testb
aam
add
jns
jle
mov
add
pop
pop
push
shr
pop
pop
push
sub
lea
pop
leave
add
push
lea
push
push
push
push
push
lea
push
push
push
lea
push
call
lret
in
pop
add
jns
call
add
mov
jl
add
lock
add
add
jns
mov
pop
jecxz
add
imul
add
mov
add
lea
pop
ret
push
sub
rol
dec
pop
jmp
cmpl
jne
push
push
add
push
or
not
add
shr
shl
dec
sub
shl
sub
pop
add
shl
sub
pop
push
lea
push
lea
push
push
push
push
call
cmc
outsl
shl
add
add
pop
mov
stc
cmc
popf
add
add
pop
out
add
insb
push
add
jae
pop
add
add
add
mov
add
ret
add
add
push
frstor
shll
movl
add
push
lea
addr16
mov
lea
pop
pushl
push
push
push
push
push
push
push
lea
push
call
add
jo
cltd
add
hlt
jmp
pop
add
pop
pop
add
jnp
lea
pop
mov
mov
fwait
push
repnz
add
out
int
movsb
add
xchg
add
aad
add
mov
cltd
cli
scas
stos
subb
add
lahf
jb
xchg
add
ja
jmp
and
loopne
add
push
push
rol
dec
pop
call
push
push
push
call
lock
add
pop
lods
enter
mov
add
popf
pop
jbe
add
fiadds
xchg
lret
add
add
mov
add
loop
add
add
mov
test
rcrl
ret
add
mov
lea
pop
jmp
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
push
cmc
bound
xchg
popl
scas
add
add
jmp
mov
pusha
add
rolb
xchg
add
add
insb
js
mov
test
test
fwait
add
cmc
add
add
mov
nop
add
lock
add
jmp
lds
test
mov
lea
pop
cmpl
jne
mov
push
sub
sub
pop
mov
push
push
push
rol
push
or
not
add
inc
sub
add
add
pop
shr
rol
dec
pop
push
lea
push
lea
push
lea
push
call
add
xchg
bnd
stos
mov
mov
pop
jnp
add
jle
mov
nop
popl
call
mov
add
push
add
in
pusha
add
mov
pushf
movb
add
jp
add
jo
xchg
cmc
mov
add
jno
aad
shr
add
mov
popf
imul
test
jno
cld
cwtl
xchg
int3
lea
pop
pushl
call
push
push
rol
inc
inc
push
xor
add
ror
rol
sub
rol
pop
lea
not
inc
pop
push
xor
shr
pop
pushl
push
lea
push
lea
push
push
push
push
push
push
call
ror
add
add
fninit
add
data16
add
jge
add
add
add
insb
fildl
push
push
aam
fsubrl
sti
loop
mov
mov
lea
enter
lea
pop
call
call
push
push
not
add
sub
push
or
not
add
dec
shr
sub
ror
ror
pop
ror
shr
rol
pop
push
pop
pushl
push
push
push
push
call
add
add
jae
mov
pop
add
mov
fadds
mov
add
add
add
add
sahf
pop
addb
push
popf
imul
call
insb
add
push
add
pop
mov
fldl
add
clc
lret
add
loop
test
mov
mov
pop
mov
push
ja
les
mov
add
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
add
push
in
add
add
and
flds
add
cli
jne
notl
lret
cli
add
add
add
mov
incb
mov
mov
add
add
add
add
out
add
pop
call
push
push
add
push
sub
add
add
xor
sub
not
lea
add
shl
pop
lea
inc
inc
pop
push
sub
shl
add
sub
pop
pushl
call
push
lea
push
call
in
addb
jge
add
add
push
push
mov
flds
nop
add
add
cltd
ficomps
mov
add
xchg
rolb
mov
stos
pop
jge
data16
add
cmpsl
pop
idivl
int3
push
popa
mov
xchg
out
mov
pop
xchg
jmp
mov
ljmp
ffreep
add
jle
add
mov
lea
pop
call
push
push
not
not
push
xor
add
sub
sub
not
add
dec
pop
add
shr
pop
push
push
push
push
push
push
push
call
add
add
test
movb
add
add
in
add
add
push
pusha
out
push
pop
xchg
push
lods
jne
add
add
xchg
xchg
mov
add
add
add
fldl
pusha
mov
lea
pop
pushl
push
push
push
push
lea
push
push
push
push
call
mov
add
insb
cmc
rol
add
lahf
add
add
add
add
jge
add
mov
add
add
rclb
test
leave
aam
sti
mov
cwtl
pop
add
add
out
ficompl
int3
add
push
popa
out
add
mov
push
mov
mov
divl
movsb
sar
add
add
add
aam
bound
pop
call
push
not
lea
pop
call
push
push
xor
add
push
sub
add
add
sub
inc
pop
xor
add
pop
push
push
call
addb
lds
xchg
imul
mov
pop
add
add
into
add
fildl
jmp
in
addb
addr16
jp
add
lods
loopne
pop
shlb
add
add
xchg
add
roll
outsl
add
add
jne
add
cmpsb
push
fwait
jns
testl
loope
mov
lea
pop
pushl
push
sub
sub
add
shr
pop
call
call
push
dec
dec
pop
call
push
push
inc
sub
lea
push
xor
add
xor
xor
sub
shl
pop
dec
dec
pop
push
add
sub
sub
pop
pushl
push
lea
push
push
lea
push
lea
push
call
add
mov
xchg
std
cli
addb
add
pop
ja
add
lods
testl
mov
pop
mov
add
add
push
mov
add
mov
mov
lea
pop
call
push
push
push
lea
push
push
call
aam
push
enter
xchg
lds
jbe
jbe
push
pop
mov
loop
out
icebp
xchg
cwtl
jecxz
fs
mov
add
add
add
cmpsb
addr16
add
add
je
mov
add
test
add
xorl
lods
add
mov
lea
pop
lea
push
push
lea
push
push
call
lods
add
into
add
jbe
add
xchg
add
add
pop
pop
mov
add
fistpl
add
mov
fucom
scas
mov
fs
lret
xchg
inc
add
cmpsb
iret
add
add
xchg
test
add
pop
push
push
lea
push
push
lea
push
push
push
push
lea
push
lea
push
call
rolb
sti
jmp
add
enter
add
fwait
add
rcrb
add
rcrb
fiadds
add
add
jno
out
mov
cmpsb
cwtl
add
add
cwtl
loopne
gs
data16
mov
add
xchg
mov
mov
lea
pop
call
push
push
inc
inc
add
ror
push
or
not
add
add
lea
lea
sub
sub
lea
dec
rol
pop
inc
pop
push
push
push
lea
push
call
add
add
sti
adcl
add
int3
outsl
call
jmp
mov
xchg
filds
xchg
push
push
movl
int3
mov
lea
pop
pushl
call
push
push
lea
push
lea
push
lea
push
push
call
aam
add
add
add
mov
cltd
mov
clc
add
mov
xchg
jns
jecxz
add
add
add
bound
add
shlb
pop
add
cli
fnstsw
mov
add
jle
mov
popf
add
lret
lcall
cmpsl
xchg
add
jge
add
mov
out
insb
mov
lea
pop
call
push
push
rol
sub
push
and
add
sub
shr
sub
shr
ror
pop
shl
sub
pop
push
ror
lea
pop
pushl
call
push
lea
inc
pop
call
push
push
push
xor
add
add
dec
sub
shr
pop
sub
pop
push
add
pop
pushl
call
push
lea
push
push
push
push
push
call
insb
cld
hlt
out
jae
fldl
out
jb
add
fbld
add
in
nop
add
mov
mov
gs
add
clc
add
push
xlat
test
mov
add
idiv
xchg
add
add
data16
rclb
lea
push
push
rol
shl
add
push
or
inc
add
sub
xor
ror
sub
not
inc
rol
pop
sub
ror
dec
pop
push
not
pop
pushl
push
xor
not
pop
call
push
push
lea
push
lea
push
push
call
add
add
add
leave
add
call
rorb
mov
add
mov
push
add
mov
xchg
leave
add
data16
add
in
nop
jbe
add
jo
mov
add
iret
mov
add
lret
add
jnp
push
lcall
loope
add
pop
call
push
push
shr
push
push
pop
add
shl
shl
ror
sub
inc
xor
dec
rol
pop
add
not
sub
pop
push
shl
shr
dec
pop
pushl
call
push
push
lea
push
push
push
push
call
push
add
leave
pushf
add
add
stos
fldl
out
in
loope
add
add
test
lret
out
leave
add
push
imul
mov
outsl
add
xchg
add
cwtl
add
add
in
imul
add
add
add
aam
bound
pop
call
push
not
pop
mov
push
push
dec
push
xor
add
not
xor
add
xor
sub
rol
pop
pop
push
push
lea
push
lea
push
push
push
lea
push
call
mov
add
in
add
xchg
pop
addr16
push
push
imulb
gs
xchg
mov
add
add
pusha
push
subl
je
add
push
mov
lea
pop
pushl
push
push
push
push
push
push
call
lret
xchg
mov
xchg
add
mov
sahf
outsl
add
stc
add
mov
add
add
add
xchg
lods
cwtl
mov
mov
je
add
cltd
add
rorl
pop
call
push
push
lea
push
push
push
push
lea
push
push
call
xchg
add
pop
add
clc
pushf
xchg
test
rolb
adcb
mov
add
mov
movsb
xchg
add
push
add
add
xchg
xchg
add
add
add
add
popa
scas
xchg
add
test
arpl
in
add
xlat
add
xchg
jp
add
lea
push
xchg
int
faddl
rorl
pushl
call
push
push
shl
xor
add
push
or
not
add
xor
add
shr
sub
not
sub
inc
pop
ror
pop
push
add
not
pop
pushl
call
push
push
sub
push
sub
add
shl
ror
sub
rol
pop
shr
sub
pop
push
push
xor
shr
sub
push
push
pop
add
sub
add
pop
shr
shl
pop
push
rol
rol
rol
pop
call
push
push
rol
push
or
not
add
dec
ror
dec
sub
dec
ror
shl
pop
shr
rol
pop
push
lea
sub
pop
pushl
push
push
push
push
lea
push
call
add
push
mov
add
insb
cwtl
jle
into
add
xchg
add
add
pop
add
mov
jmp
add
add
add
enter
sti
fdivl
add
pop
call
push
lea
pop
mov
lea
push
dec
sub
pop
lea
push
push
push
push
push
push
push
call
pop
add
shr
jae
add
mov
jecxz
pop
ret
test
incb
add
mov
add
lahf
dec
test
add
add
out
push
jo
xchg
mov
add
add
jo
lret
add
icebp
add
imul
outsl
pop
ffreep
add
xchg
fyl2xp1
add
add
pop
push
push
rol
add
sub
pop
push
push
sub
pop
push
push
push
push
push
push
lea
push
push
push
push
call
add
add
cmpsb
add
add
add
out
add
add
add
add
movsl
add
add
pop
push
movsl
mov
add
out
incb
add
pop
push
push
push
not
shr
add
pop
push
push
push
lea
push
lea
push
lea
push
call
jne
outsl
sti
add
add
add
into
rclb
add
add
cltd
pop
pusha
mov
popf
rolb
add
xchg
jae
in
pop
add
repnz
pop
add
mov
add
jmp
rclb
adc
jne
push
xor
xor
pop
push
push
sub
pop
call
push
push
shr
add
push
and
add
ror
sub
sub
shr
add
sub
pop
shl
pop
push
push
call
add
sti
add
add
add
clc
mov
add
mov
fsubr
filds
hlt
jp
add
scas
out
add
lds
imul
shlb
iret
mov
lea
pop
cmpsl
jno
add
add
popf
roll
jae
mov
add
test
mov
rorl
pop
pushl
push
inc
shl
dec
xor
pop
call
push
lea
push
push
push
push
lea
push
push
push
push
call
add
pop
out
fldl2t
lds
add
leave
jbe
mov
scas
xchg
js
xchg
pop
mov
shll
leave
imul
add
into
jle
pop
add
add
gs
add
out
add
add
cmpsl
add
stos
cmc
add
hlt
loope
shll
add
xlat
jb
arpl
out
add
mov
aam
bound
call
push
push
push
lea
push
push
push
push
call
loope
add
andl
jb
add
add
filds
push
add
add
lcall
add
add
lahf
xchg
loop
add
push
add
jae
xchg
sarl
testb
add
insb
xchg
bound
xorl
mov
aam
bound
mov
pop
push
add
shl
shl
shr
pop
dec
jne
push
push
push
call
movsl
add
repnz
add
jp
call
add
mov
add
pop
jmp
addb
pop
lock
mov
adcl
shll
call
lret
add
add
jae
mov
jae
add
mov
lea
pop
jmp
call
push
push
inc
lea
push
or
inc
add
add
inc
rol
inc
sub
pop
sub
add
add
pop
push
add
pop
pushl
call
push
rol
sub
add
pop
push
call
push
shr
ror
add
pop
mov
push
push
push
push
push
lea
push
push
push
call
add
sti
popa
add
xchg
fidivs
data16
add
mov
add
add
add
add
subl
jno
pusha
xchg
add
out
add
add
xchg
pop
add
add
movl
add
add
add
pop
lea
push
push
xor
sub
push
and
add
add
lea
dec
shl
sub
add
add
pop
shl
add
pop
push
push
push
push
push
lea
push
push
push
call
cmpsb
movsb
lret
add
add
scas
je
loop
add
out
xchg
mov
add
xchg
mov
shr
out
dec
add
sahf
loope
cmpsb
loope
cli
divb
add
add
add
test
mov
lea
pop
pushl
push
lea
push
push
lea
push
push
push
lea
push
call
add
push
pushf
add
push
push
popa
aam
xchg
add
add
mov
add
call
ljmp
add
add
flds
testl
add
mov
mov
xchg
mov
add
movsb
add
xchg
add
loopne
add
fiadds
jmp
add
xchg
lock
cld
lea
pop
call
push
push
sub
add
shl
add
pop
call
push
push
shl
push
and
add
sub
xor
pop
xor
sub
shr
pop
push
push
push
push
push
call
int
stos
jne
pop
add
add
add
jbe
scas
stos
sar
add
add
sbbl
lods
add
repnz
add
mov
mov
in
add
xchg
test
add
xchg
add
mov
loop
xchg
push
mov
lea
pop
pushl
call
push
dec
pop
call
mov
push
lea
push
call
push
add
aam
add
jae
add
movsl
insb
add
mov
in
icebp
add
add
add
add
in
filds
popf
add
mov
mov
mov
int3
subb
jns
icebp
add
add
aad
fiaddl
add
add
add
mov
add
jmp
add
push
mov
testl
test
insb
pop
push
cwtl
cmpsb
mov
lea
pop
lea
push
push
dec
push
push
pop
add
xor
sub
add
sub
rol
shl
pop
rol
pop
push
lea
push
push
push
push
push
push
call
js
enter
idiv
ljmp
mov
lret
add
popa
mov
xchg
add
add
incb
add
jne
iret
add
aad
add
add
ret
sub
mov
mov
xchg
add
xchg
add
out
scas
add
add
xchg
add
cltd
mov
pop
add
lods
jge
add
fmull
jne
push
lea
push
push
push
push
push
call
add
add
add
ljmp
frstor
add
stos
add
data16
mov
push
aad
mov
mov
addl
mov
add
test
into
popf
iret
add
add
mov
lea
pop
call
push
push
lea
push
call
add
popa
add
popf
mov
add
mov
add
add
add
fstpt
mov
push
leave
leave
xchg
test
mov
pop
add
lea
pop
lea
push
push
shr
sub
pop
push
push
push
push
lea
push
push
call
pop
xchg
test
add
clc
xchg
add
mov
add
add
aam
fcompl
in
imul
in
mov
add
popf
add
out
add
jl
add
pushf
jle
add
mov
mov
icebp
add
xchg
je
add
pop
add
add
pushf
out
add
mov
aam
bound
push
pushl
push
push
sub
shl
push
or
not
add
shl
sub
rol
pop
add
sub
add
pop
push
shl
shl
shl
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
add
fwait
loopne
add
add
in
loop
mov
add
xchg
add
add
pop
mov
cltd
insb
xchg
popa
leave
add
fcompl
add
jae
addb
add
add
pop
add
pop
mov
add
jle
sbbb
mov
mov
popa
sub
shrb
xor
in
push
shl
push
and
add
lea
add
ror
sub
sub
pop
shr
pop
push
lea
shr
pop
pushl
call
push
rol
pop
push
call
push
push
shr
not
lea
push
or
not
add
sub
sub
dec
inc
pop
lea
shr
pop
push
pop
pushl
push
push
push
push
push
lea
push
push
push
call
add
jbe
flds
mov
add
rcll
filds
lea
fs
add
add
push
mov
js
add
lods
pop
add
scas
add
jmp
hlt
ljmpw
add
add
mov
add
add
pop
xchg
add
jae
mov
add
int
mov
mov
lea
pop
call
push
push
push
push
push
push
push
call
xchg
push
add
mov
add
ficoms
pop
add
jge
add
add
ja
int
add
pop
mov
add
in
add
cwtl
movsb
ftst
pusha
add
push
lods
loope
xlat
add
sar
call
arpl
add
push
imul
jnp
addl
mov
lea
pop
call
push
push
push
push
push
push
lea
push
lea
push
push
call
subl
js
stc
mov
les
add
mov
add
add
addl
add
roll
xchg
pop
testb
add
add
add
add
hlt
lea
pop
jmp
pushl
push
push
push
push
call
xchg
add
add
add
add
mov
shl
jle
add
mov
xchg
add
loope
pop
push
stc
add
lock
gs
add
add
sub
cld
lea
pop
mov
push
push
lea
push
push
push
push
push
push
lea
push
call
add
add
fists
in
movsl
push
mov
rolb
jecxz
add
rclb
add
outsl
addb
sar
jnp
rolb
lcall
add
je
add
jbe
add
add
int
add
mov
lea
pop
jmp
push
push
inc
push
xor
add
add
not
sub
not
sub
pop
rol
pop
push
push
push
push
call
iret
pop
add
bnd
icebp
add
mov
push
pop
mov
testb
mov
lahf
leave
mov
add
fadds
add
pop
stos
add
fdivrs
add
out
mov
mov
add
xchg
sti
jo
enter
add
push
add
cwtl
add
mov
mov
out
add
mov
lea
pop
pushl
call
push
sub
shr
pop
push
push
push
push
lea
push
lea
push
call
add
cmpsb
xchg
add
add
mov
in
in
jbe
mov
xchg
clc
cwtl
xchg
add
add
addr16
repnz
test
in
add
scas
rorb
add
add
add
xchg
xchg
jbe
mov
les
push
add
jge
add
mov
fdivrl
push
add
sti
add
sti
lock
adc
call
push
push
xor
push
xor
add
dec
dec
sub
sub
lea
pop
not
pop
push
sub
pop
pushl
push
push
push
lea
push
lea
push
push
push
push
push
call
add
add
mov
pop
outsl
mov
repnz
lret
push
add
data16
rcrb
rolb
add
push
mov
cmpsb
repnz
add
movsl
xchg
add
lret
xchg
test
add
add
add
jmp
nop
add
add
mov
add
rcrl
mov
mov
pop
call
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
call
add
push
in
add
mov
gs
fcom
pop
add
in
loopne
popa
add
mov
add
loope
add
movl
add
js
add
data16
lea
pop
push
call
push
push
push
lea
push
push
lea
push
push
push
push
call
add
loop
cld
mov
add
jns
int3
mov
shl
cltd
add
lcall
xchg
add
call
cmpsb
iret
out
push
test
push
add
loop
sti
mov
clc
add
fs
pop
add
add
pusha
mov
lea
pop
leave
push
inc
pop
add
push
push
push
push
lea
push
push
push
call
push
sti
repnz
shlb
hlt
push
mov
imul
cld
pop
add
fdiv
pop
mov
sbbl
jle
add
fs
lret
add
in
rcrb
int3
add
out
add
call
add
xchg
add
in
jp
in
mov
mov
pop
pop
push
push
push
push
push
push
lea
push
call
arpl
add
xchg
lret
jmp
push
pop
add
xchg
add
out
add
mov
add
add
movsb
addr16
jne
fwait
xlat
add
data16
add
add
add
mov
add
add
ficoml
jmp
mov
add
add
add
ja
mov
lcall
add
adcl
sbb
pop
push
push
lea
push
push
push
push
push
push
call
add
add
push
add
push
mov
fiaddl
add
xchg
add
add
into
add
add
in
add
mov
mov
fiadds
push
add
xorb
insb
jecxz
add
call
add
pop
pop
pop
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
loopne
sti
jl
xchg
or
xchg
into
mov
pop
add
loopne
fsubs
out
add
in
add
mov
xchg
mov
add
push
mov
add
add
add
popa
and
leave
push
lea
push
lea
push
push
push
push
push
call
lea
jle
lahf
lahf
movb
jmp
add
add
add
arpl
add
add
add
add
lds
add
fists
testl
add
add
pop
add
ret
push
push
push
push
push
call
push
fmul
add
clc
pop
lahf
scas
add
add
movb
loop
add
xchg
scas
jge
stc
add
add
jbe
add
into
roll
add
mov
out
add
add
out
test
faddl
int3
jb
lea
add
add
popa
test
xchg
lcall
aam
les
push
push
push
lea
push
lea
push
call
jle
mov
into
test
enter
iret
add
frstpm(287
ror
jle
ljmp
pop
add
add
add
add
ret
jecxz
add
add
fmull
or
push
shr
xor
not
pop
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
add
popa
mov
add
jmp
add
test
mov
lods
bound
clc
cmc
add
push
jae
mov
nop
add
add
jb
add
add
lret
lea
pop
mov
cmpl
jne
push
rol
pop
mov
push
add
not
pop
jmp
push
push
push
push
push
push
push
push
push
push
call
push
add
add
add
add
test
mov
loopne
js
add
lods
add
jo
pushf
lea
mov
aad
add
add
icebp
cmc
jae
clc
add
mov
add
cltd
add
add
xchg
lahf
repnz
mov
lea
pop
mov
and
push
push
push
push
push
push
call
jns
xchg
pop
testw
cmpsb
pop
les
add
add
add
push
test
add
test
add
lcall
add
mov
ja
add
into
nop
cli
addb
add
add
add
pop
testl
test
push
pop
add
add
iret
add
mov
lea
pop
xor
push
ror
not
pop
xor
push
push
push
push
push
push
lea
push
push
push
call
popf
add
xlat
loope
js
mov
scas
pop
xchg
add
data16
loopne
add
jmp
jmp
int3
lret
xchg
imul
fwait
cltd
shr
loope
add
push
pop
test
push
add
add
add
fs
jp
add
lret
xchg
pop
add
lea
pop
add
push
push
push
push
push
push
lea
push
lea
push
push
call
add
add
add
lahf
flds
stos
in
scas
mov
mov
test
pop
add
xchg
pop
test
add
mov
jo
add
add
add
js
add
aad
add
insb
scas
add
add
mov
addb
add
pop
xor
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
mov
push
rolb
push
add
sub
add
aad
add
cmpsb
mov
cmc
jle
test
loope
loopne
add
icebp
xchg
push
push
fiaddl
mov
add
imul
add
add
add
mov
jbe
je
lret
ljmp
rolb
cmpsl
imul
add
jb
jecxz
add
mov
lea
pop
dec
push
push
push
push
lea
push
push
lea
push
lea
push
call
lcall
movsl
mov
add
add
ja
sahf
push
add
add
jo
add
xchg
add
add
lock
test
cld
pop
add
addr16
add
add
add
js
add
add
add
fcmovnbe
cwtl
jnp
add
stos
add
cli
jnp
add
mov
popf
add
add
add
mov
lea
pop
sub
push
push
push
call
add
gs
insb
push
jnp
xchg
add
sti
lahf
add
imul
test
sti
ja
data16
pop
add
add
jns
loopne
add
stc
popa
add
cwtl
fiaddl
add
mov
in
repnz
test
add
out
add
pop
jmp
push
push
push
call
add
filds
popf
popa
fildl
add
pop
cli
sahf
add
add
add
add
add
stos
cmpsb
lret
add
add
jecxz
mov
mov
mov
push
add
add
add
shl
rcl
out
add
imul
jnp
add
je
loopne
push
mov
xchg
add
in
arpl
pop
add
add
add
jmp
lea
pop
sub
push
lea
push
push
push
lea
push
push
push
push
call
iret
jnp
sbb
xchg
cli
push
jno
add
ljmp
add
movsb
mov
mov
fsubs
xor
jp
add
jle
mov
fdivl
imul
aad
jo
pop
test
mov
les
xor
rcrb
push
shl
shr
pop
sub
push
push
call
sbb
add
fcoms
cli
push
push
add
nop
int
mov
add
add
popa
add
test
std
push
mov
pop
add
pop
roll
cli
add
jp
sar
flds
pop
loope
outsl
mov
lea
pop
cmp
jne
push
push
push
push
call
add
xchg
addb
fldl
movsb
pushf
mull
xchg
ja
pushf
push
lods
mov
fldl
add
shrb
incb
jne
lcall
jl
add
bound
cmpsl
fdivs
add
stc
hlt
add
loope
add
pop
mov
lea
push
shr
inc
shr
ror
pop
sub
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
jae
pop
imul
add
add
jge
add
mov
fiaddl
out
add
add
add
mov
mov
roll
popa
add
pushf
out
movsl
jl
mov
lods
add
mov
xchg
iret
mov
rcrb
nop
lods
mov
lea
pop
mov
push
lea
push
push
push
push
push
push
push
push
push
call
add
lret
mov
out
add
add
push
add
test
pop
add
add
mov
fildl
mov
add
roll
test
add
mov
pop
iret
add
add
add
divb
add
lcall
test
gs
in
add
fildl
jo
add
int3
lea
pop
shr
push
add
xor
pop
add
push
rol
shl
lea
ror
pop
sub
push
push
lea
push
call
mov
testl
lods
cwtl
add
int
add
jecxz
outsl
test
hlt
add
add
shrb
add
mov
bnd
arpl
negb
mov
movsb
mov
pop
add
add
out
xchg
add
movl
jae
fsubrp
add
add
scas
add
pop
pushl
push
lea
add
pop
pop
shr
push
rol
lea
inc
pop
and
push
push
call
mov
add
jnp
add
add
xchg
add
test
popa
pop
add
mov
mov
push
pop
add
add
add
xchg
arpl
push
push
fucomi
loop
add
sahf
addl
jno
add
ret
add
pop
enter
add
aam
xchg
int
sti
movsb
fsubl
xlat
fsubs
popa
sti
add
xchg
add
mov
lea
pop
sub
cmp
jne
push
push
push
push
push
push
push
push
push
call
movsl
add
add
add
jge
add
fcomps
mov
add
jae
pop
out
fwait
loope
jecxz
int
add
pop
jp
int
stc
mov
loopne
add
add
mov
add
jbe
add
mov
add
add
jge
les
ret
push
push
push
push
push
call
lea
mov
add
mov
fnstsw
add
fcmovnbe
add
jb
jno
add
in
add
mov
add
add
add
icebp
add
insb
mov
out
push
add
addr16
mov
insb
add
add
mov
out
pushf
add
add
iret
add
pop
push
push
lea
push
push
push
lea
push
push
push
call
cltd
pop
mov
add
ljmp
add
andb
push
push
roll
data16
mov
push
test
add
push
add
not
cwtl
add
mov
mov
enter
test
cmc
add
pop
mov
push
push
push
push
push
push
call
pop
mov
stc
into
xchg
fwait
add
add
xchg
cwtl
jecxz
call
xchg
jmp
loope
add
lds
add
out
lret
add
bound
add
hlt
push
mov
lea
pop
add
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
add
lock
add
ficomps
add
in
lret
pop
add
add
mov
add
add
mov
xchg
je
add
jl
hlt
mov
pop
push
loopne
ret
add
imull
jmp
scas
mov
lea
pop
push
push
push
lea
push
push
push
push
push
lea
push
call
add
loopne
mov
fadds
add
ret
jo
jno
add
add
jmp
push
addl
mov
lock
add
imul
jl
mov
mov
xchg
fistps
insb
add
add
pop
add
pop
add
andl
lea
pop
push
push
push
push
push
push
push
call
cwtl
fadds
lock
add
add
popf
mov
mov
push
push
add
test
iret
cli
pop
mov
add
in
leave
add
xchg
lret
lret
pop
add
add
add
add
mov
ljmp
jge
mov
lea
pop
push
push
xor
pop
mov
lea
push
add
pop
sub
mov
push
lea
push
push
push
lea
push
push
push
call
add
add
lret
aad
add
test
lcall
push
add
add
add
add
popf
loope
mov
add
jns
scas
add
pusha
jbe
mov
add
pop
shr
add
push
push
push
push
push
call
add
add
movsl
cmc
add
push
mov
add
ret
cmpsl
hlt
add
add
add
loop
int
mov
testb
sarl
add
rorb
jl
push
enter
jae
scas
add
jo
sahf
testb
push
aad
dec
mov
stos
add
add
add
mov
adc
mov
add
push
push
push
push
push
push
lea
push
call
lret
pop
push
add
add
stos
lds
in
mov
pop
xchg
fisubrs
mov
add
jle
add
add
stos
add
push
fstl
xlat
pop
mov
add
add
jb
add
add
add
add
pop
mov
push
push
push
push
push
push
push
push
lea
push
lea
push
call
add
rclb
add
sarl
add
lds
pop
scas
add
pop
add
add
shrl
mov
aam
jmp
add
pop
mov
pusha
sub
jge
push
lea
push
push
push
push
lea
push
push
call
add
add
add
add
mov
add
add
int3
jns
add
fldz
add
add
add
add
fs
into
mov
mov
mov
ret
xchg
add
imul
out
add
push
enter
lea
pop
xor
mov
push
xor
rol
lea
pop
and
push
push
push
push
call
imul
add
add
add
cli
mov
mov
lret
jnp
add
repnz
lahf
rcrb
add
add
pusha
mov
add
push
add
xchg
jp
mov
push
add
add
fiadds
shrl
fisubs
mov
mov
ljmp
add
leave
add
fldenv
hlt
lea
pop
rol
push
push
push
lea
push
push
push
push
call
add
mov
fiaddl
xchg
cli
add
add
add
shl
clc
add
add
add
icebp
lods
add
xchg
add
hlt
int
add
add
testl
push
push
push
push
lea
push
call
add
add
add
incb
std
add
add
xchg
xchg
add
stc
cwtl
mov
mov
xchg
icebp
addb
jno
jecxz
stos
add
add
cld
push
call
ljmp
scas
add
arpl
xor
push
push
push
push
push
push
lea
push
push
push
call
movsl
cmc
xchg
sti
aad
lods
gs
addb
aam
push
movsb
frstor
mov
jmp
push
out
mov
add
int
add
add
fistpll
mov
lea
pop
inc
cmpb
jne
push
push
push
push
push
lea
push
push
call
add
shr
lret
jbe
add
add
add
xchg
pop
mov
add
enter
loop
xchg
add
out
push
add
push
sti
outsl
fldcw
popa
cli
add
loop
xchg
push
mov
in
xchg
xlat
add
add
addl
add
mov
jo
insb
fs
add
orl
add
cmp
je
push
dec
shl
sub
pop
add
push
sub
shl
inc
ror
pop
cmpl
jne
push
push
push
push
push
lea
push
push
call
roll
imul
add
xchg
mov
arpl
add
xchg
movsb
add
add
xchg
jmp
icebp
mov
addb
mov
add
add
add
aam
out
lds
add
add
add
jge
hlt
lea
pop
xor
pop
push
lea
push
push
push
push
call
pop
mov
add
fistl
mov
xchg
add
mov
add
movb
outsl
lods
add
les
cltd
add
xchg
add
add
add
mov
mov
out
add
pop
add
shll
mov
testl
test
lea
pop
pop
push
sub
pop
pop
pop
push
pop
pop
push
xor
pop
leave
push
shr
ror
inc
inc
pop
ret
push
inc
lea
lea
add
pop
mov
push
push
lea
push
push
push
push
push
push
lea
push
push
call
add
mov
into
mov
shlb
jno
add
add
xor
add
jnp
cmpsl
call
lret
add
add
mov
add
lahf
add
add
pop
into
icebp
add
imul
out
addb
lock
add
add
call
add
lret
add
mov
mov
lea
pop
add
push
lea
push
push
push
lea
push
push
push
call
xchg
mov
mov
std
faddl
push
xchg
add
frstor
call
add
mov
add
add
sti
add
jae
add
xchg
mov
push
push
mov
pop
cmpsl
push
pusha
mov
add
add
mov
add
sbbl
imul
lea
pop
push
push
push
pop
add
mov
push
sub
pop
cmpw
push
push
push
push
push
push
lea
push
push
lea
push
push
call
add
push
jno
add
mov
mov
add
mulb
loope
add
xchg
clc
add
mov
push
imulb
popf
mov
add
stc
pop
stos
jb
add
repnz
add
lret
mov
cltd
add
roll
mov
add
jbe
icebp
icebp
jmp
mov
lea
pop
pop
push
lea
push
push
lea
push
push
push
push
push
push
call
add
leave
stos
push
into
into
inc
data16
mov
add
shrb
add
xchg
add
add
add
jle
xlat
mov
add
rolb
add
add
xchg
mov
mov
int3
mov
lea
pop
pop
push
push
call
jno
add
add
call
test
add
add
mov
jecxz
mov
mov
jl
add
xchg
lods
test
add
out
add
add
xlat
add
out
mov
mov
mov
jns
push
push
popf
imul
fiadds
popf
mov
pushf
test
mov
cmc
mov
lea
pop
mov
push
push
lea
push
push
push
call
add
add
mov
arpl
add
nop
fcomps
cwtl
subb
push
faddl
push
add
xchg
add
add
fiaddl
std
push
add
in
add
pop
out
je
add
add
loop
add
add
ret
add
arpl
cld
lea
pop
push
call
push
add
ror
pop
xor
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
add
mov
sahf
mov
add
add
cmpsl
mov
add
add
mov
add
into
shl
mov
pop
scas
sahf
loopne
add
scas
jb
int
rolb
add
add
push
add
add
mov
add
in
add
out
mov
lea
pop
pop
push
not
pop
pop
pop
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
jb
lock
test
add
add
push
xchg
push
movsl
xchg
int3
fs
pop
jecxz
add
pop
in
add
xchg
mov
std
add
cld
lea
pop
pop
pop
push
xor
sub
pop
leave
push
sub
dec
dec
ror
pop
ret
push
push
push
lea
push
call
add
mov
add
mov
in
andl
fneni(8087
add
loop
add
add
mov
jge
add
add
filds
add
push
out
in
add
fwait
shll
jnp
jb
add
fiadds
mov
add
fbstp
jge
call
int3
pop
mov
lea
ja
xchg
jae
add
pop
mov
add
push
push
push
push
push
push
call
add
fwait
stc
push
or
lret
roll
push
lock
add
pushf
sti
add
add
mov
add
pusha
out
add
mov
add
add
std
nop
add
stc
push
test
mov
add
mov
pop
in
mov
call
js
add
add
mov
add
add
stc
int3
mov
cld
lea
pop
push
push
ror
inc
pop
push
push
push
sub
lea
pop
push
push
push
push
push
lea
push
push
push
call
add
add
add
add
cltd
call
loop
mov
mov
je
add
mov
mov
leave
add
test
add
arpl
add
mov
lea
pop
mov
push
xor
add
add
shl
pop
push
pop
push
rol
dec
add
pop
lea
sub
push
push
push
push
call
add
arpl
in
add
mov
test
out
jns
mov
cmc
jle
add
add
push
add
loop
xchg
mov
add
add
mov
add
movsl
mov
jl
movb
cmc
fcmovu
add
xchg
pop
add
imul
pop
mov
push
rol
not
pop
shr
add
push
not
add
sub
pop
mov
push
inc
pop
add
pushl
push
lea
push
push
lea
push
push
call
add
add
stos
add
add
add
lahf
in
rolb
add
addb
push
add
lods
iret
enter
out
add
add
add
add
add
int3
popf
mov
add
mov
fcmovbe
jecxz
add
add
mov
xlat
out
aam
push
jae
je
lahf
jmp
fimuls
pop
popl
push
pop
mov
push
push
push
call
mov
imul
jle
mov
add
fsub
mov
fsubrs
test
fcompl
fdivrl
add
bound
mov
jne
cmpsb
mov
in
add
add
add
add
popa
aam
lahf
outsl
loop
lahf
xchg
add
lods
mov
lds
add
add
jnp
mov
jo
mov
lea
pop
add
xor
push
pop
lea
push
sub
add
sub
pop
mov
push
push
push
push
push
lea
push
push
call
jecxz
cltd
add
jbe
xchg
ljmp
add
stos
add
mov
jmp
movl
mov
add
add
hlt
add
add
lret
add
mov
add
pop
add
push
add
sub
pop
xor
push
dec
sub
pop
rol
push
push
lea
push
lea
push
call
pushf
shll
lahf
add
lret
add
add
jno
outsl
popf
jecxz
add
push
fnstcw
popf
leave
je
call
out
data16
out
stos
mov
stos
add
jmp
jp
out
add
add
pop
nop
nop
push
push
call
add
add
add
faddl
jle
stos
test
mov
pop
add
fmuls
cli
jb
out
add
add
lahf
mov
in
stc
add
add
pop
mov
aad
enter
add
add
xlat
cwtl
add
loopne
mov
jl
cli
push
bound
xchg
pop
add
xchg
add
fadds
lcall
or
add
xchg
pop
sub
fwait
inc
nop
scas
push
push
lea
push
call
mov
pusha
pop
hlt
jns
add
lods
mov
add
mov
in
add
xchg
jb
loop
mov
pop
cmpsb
shlb
xchg
mov
iret
add
rolb
popa
lret
add
add
add
fadds
mov
in
out
add
nop
add
rorl
pop
nop
push
lea
sub
pop
nop
push
add
pop
inc
push
dec
ror
shl
rol
pop
nop
push
push
lea
push
lea
push
lea
push
call
push
add
imul
mulb
add
fwait
add
je
gs
jecxz
stc
adcb
loop
jmp
test
xchg
add
add
push
mov
popf
lods
mov
lea
pop
nop
cmpb
jne
push
push
push
lea
push
lea
push
call
add
add
jnp
rcll
xchg
js
add
loop
xchg
push
add
roll
cmc
mov
popf
pushf
add
lcall
push
add
add
mov
jle
shlb
add
cmpsb
fbld
add
out
stc
add
add
fiadds
mov
lea
pop
add
push
lea
push
call
cmpsb
jns
add
popf
add
int
stos
in
mov
imul
shrb
loope
stos
les
cmc
pop
in
xchg
pop
jbe
add
add
jne
enter
pop
push
mov
cmpsb
add
filds
addl
cwtl
jno
add
movsl
add
aad
push
mov
lea
pop
nop
push
shr
pop
nop
cmp
je
push
lea
push
push
lea
push
push
lea
push
push
call
mov
mov
lods
add
test
mov
fiadds
cwtl
popa
lret
popa
mov
out
ja
pop
add
movb
cli
add
add
fcomp
fstl
xchg
loop
add
mov
xchg
mov
add
mov
repnz
add
add
add
add
jb
mov
lea
pop
nop
push
pop
nop
inc
push
push
lea
push
push
push
push
push
call
in
add
mov
push
ja
movsb
mov
xlat
add
add
aam
add
mov
out
add
cli
movsl
mov
sarl
xchg
mov
add
into
add
add
add
mov
lea
pop
nop
push
add
pop
nop
push
sub
shr
not
rol
pop
cmp
jb
xor
push
inc
lea
inc
pop
jmp
push
push
call
add
add
add
push
jle
in
xchg
pop
add
sbbl
loope
cmpb
addl
add
mov
xchg
push
clc
fadds
add
add
add
add
pop
mov
fiaddl
aad
int
rolb
mov
je
pop
js
addr16
push
add
add
mov
mov
lea
pop
mov
add
push
push
push
push
call
ja
lahf
out
loop
stc
add
faddp
pop
mov
add
add
push
push
xchg
xchg
add
xchg
pop
ret
add
mov
iret
mov
insb
add
call
lcall
xchg
sbbw
neg
je
xchg
stc
mov
out
mov
add
jo
add
add
adc
mov
jb
sub
sub
not
sub
pop
mov
add
push
inc
pop
mov
push
shl
pop
xor
push
inc
sub
pop
xor
shl
push
inc
shl
shr
xor
pop
xor
shl
push
push
lea
push
call
fdivrl
lods
test
fisubrl
lods
mov
rolb
mov
add
mov
mov
add
xchg
mov
xlat
out
add
add
outsl
sbbl
add
out
stc
sti
test
movsb
push
out
add
cltd
add
add
push
test
xchg
pop
add
or
xor
push
push
push
push
push
call
jb
mov
jecxz
lahf
jl
jno
mov
mov
stos
pushf
in
cmpsl
pop
add
add
sahf
add
pop
popa
add
add
add
mov
mov
lea
pop
shl
push
lea
lea
pop
xor
mov
push
push
push
call
lods
mov
mov
add
imul
add
push
clc
lods
in
loope
add
ljmp
imul
roll
lret
add
push
lds
add
mov
in
popa
out
xchg
pushf
add
gs
pushf
mov
push
lcall
arpl
add
push
push
push
push
call
add
pop
add
hlt
add
je
add
jne
add
jmp
add
stos
addb
mov
mov
add
add
lahf
push
pop
roll
mov
loop
sbb
mov
lea
pop
pop
push
ror
lea
shl
sub
pop
pop
pop
push
push
lea
push
push
call
movsb
add
fistpll
lret
add
je
ljmp
icebp
add
loop
xchg
in
xchg
add
push
in
in
add
pop
add
jns
bound
add
add
mov
rcll
add
int3
je
xchg
addr16
hlt
mov
lea
pop
pop
push
push
push
push
push
push
push
call
add
add
pop
cmpsl
add
jle
add
out
pop
add
add
lcall
push
test
add
add
imul
jo
mov
clc
mov
add
jns
add
lret
stc
arpl
out
mov
hlt
add
js
pop
mov
cld
mov
lea
pop
leave
push
pop
ret
push
push
add
dec
dec
pop
mov
push
push
push
push
push
push
push
lea
push
push
call
jo
cmpsl
add
mov
jp
add
mov
in
hlt
pop
push
mov
add
add
orl
lret
add
add
xchg
mov
add
scas
jp
imul
out
aas
inc
pop
push
push
push
push
push
push
push
lea
push
call
ljmp
js
push
add
mov
loop
add
mov
jb
add
add
pop
add
pop
add
add
add
add
cwtl
stc
xchg
mov
lods
add
rcrb
sti
xchg
xchg
push
scas
out
add
add
nop
add
add
rcrl
data16
push
push
push
push
push
push
push
push
call
add
add
add
stos
jbe
out
fdivl
fistps
add
repnz
in
add
mov
lods
xchg
lds
add
std
add
mov
lea
pop
push
mov
push
push
push
push
push
push
lea
push
push
push
push
call
mov
add
mov
add
add
cmpsl
pop
jge
ret
xchg
add
lcall
pop
repnz
jns
mov
mov
add
jge
xchg
imul
fdivrl
mov
add
add
lods
testl
add
xchg
mov
push
divl
push
hlt
fldenv
bound
pop
mov
push
not
add
add
pop
mov
test
je
push
push
lea
push
call
pop
add
mov
testl
fsubrs
add
add
sti
add
cmpb
mov
add
lcall
add
lahf
clc
add
icebp
testb
testl
add
mov
fisubs
aam
bound
mov
push
ror
pop
test
je
push
rol
xor
pop
mov
mov
push
push
push
push
push
push
push
call
add
add
outsl
scas
add
mov
add
cli
sti
adc
mov
xchg
add
stc
add
divl
icebp
add
negl
add
jb
jecxz
add
add
add
add
add
mov
loopne
cltd
mov
stos
add
pop
add
mov
mov
add
hlt
mov
mov
jl
fisttpl
pop
mov
push
rol
add
pop
inc
push
pop
cmp
je
push
inc
sub
pop
test
je
push
push
push
lea
push
push
lea
push
push
push
push
push
call
outsl
add
add
add
fwait
add
xchg
mov
xchg
mov
add
add
add
jle
add
data16
pop
add
fsubs
data16
out
add
jbe
xchg
ja
les
push
push
add
lea
rol
pop
inc
push
rol
sub
pop
cmp
je
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
pushf
int
imul
sahf
add
fldl
push
add
jae
pop
add
add
add
jle
add
xchg
ja
jp
push
popf
popf
add
add
add
iret
add
pop
test
jne
push
push
push
call
insb
divl
mov
push
cli
add
xlat
mov
add
add
add
add
add
add
add
add
add
add
mov
mov
add
lcall
in
add
add
add
nop
cltd
xchg
popa
cltd
push
pop
add
lahf
add
int3
mov
lea
pop
xor
push
shr
rol
pop
pop
push
pop
pop
pop
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
add
fldt
hlt
add
into
add
rcr
jmp
mov
add
stc
push
fiadds
std
addr16
add
mov
out
in
fiaddl
add
add
add
insb
fcom
hlt
lea
cmc
add
lds
add
stc
xchg
cltd
mov
add
aam
sahf
add
add
andb
jle
mov
fcmovb
andb
pop
pop
push
push
call
add
add
aam
jge
add
xchg
add
add
aad
add
testb
xchg
push
add
add
lods
push
fisubrl
push
mov
lret
lea
pop
leave
ret
push
push
push
call
add
add
add
push
add
jo
add
shlb
xlat
push
add
ljmp
jbe
xchg
jecxz
imul
ljmp
xchg
ret
add
add
mov
add
je
outsl
add
movsl
int3
mov
test
filds
add
cmpl
aad
lds
pop
mov
push
lea
pop
inc
push
ror
add
add
pop
cmp
jne
lea
push
push
push
push
push
lea
push
push
push
push
call
add
add
add
add
rol
add
in
mov
mov
add
roll
test
mov
rcl
fcmovb
imul
add
add
lret
push
lahf
add
add
jb
jl
add
pop
mov
test
je
push
push
push
push
push
push
push
push
push
lea
push
call
mov
in
add
add
add
cmc
popa
fildl
jnp
shl
mov
mov
add
call
stos
roll
mov
add
xchg
add
mov
add
add
add
arpl
add
rcrb
mov
add
add
lods
xchg
add
add
xchg
sahf
push
mov
lea
pop
mov
add
push
pop
cmp
jne
mov
push
push
push
push
call
lahf
cwtl
les
hlt
cmpsl
add
mov
loopne
jp
add
add
out
lcall
roll
add
jle
add
add
push
call
add
std
mov
loope
shrl
les
pop
test
cmpl
lock
xchg
addr16
add
bound
add
add
add
add
les
rorb
add
add
lea
push
push
lea
push
push
push
call
iret
hlt
add
add
mov
fildll
movb
jge
add
push
enter
xlat
push
jbe
jbe
add
mov
add
mov
add
add
add
hlt
lea
pop
add
push
push
push
lea
push
push
lea
push
push
push
push
call
jp
add
push
add
add
add
imul
data16
add
roll
pop
lods
jecxz
push
in
add
add
in
push
add
add
add
add
js
nop
mov
mov
pusha
and
cmp
je
push
push
lea
push
push
push
push
push
push
push
call
add
mov
mov
add
jge
scas
loope
in
cwtl
pusha
popa
stos
cmpsl
ljmp
mov
movsl
add
add
mov
bound
push
xchg
add
mov
mov
cli
add
mov
add
add
add
add
shll
add
in
add
pop
jmp
xor
push
push
call
add
sarb
add
mov
jbe
push
hlt
lcall
add
mov
push
add
loope
addr16
in
mov
js
jecxz
add
xchg
addb
testl
add
loope
jnp
outsl
movsl
faddl
add
enter
mov
lea
pop
pop
push
ror
pop
pop
push
push
push
call
out
insb
int
call
ficompl
test
mov
add
add
loop
mov
add
push
aad
mov
div
add
add
add
out
mov
jecxz
movsb
add
mov
hlt
push
subb
mov
into
test
mov
add
imul
test
cld
lea
pop
pop
pop
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
call
loope
icebp
add
add
lret
add
add
add
push
lahf
add
testl
add
add
add
roll
lds
jnp
ret
add
add
mov
iret
into
mov
icebp
add
add
leave
add
pop
xor
mov
lea
pop
leave
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
int
gs
jecxz
jb
mov
sbbb
push
add
ret
push
jle
addb
popf
leave
scas
xchg
add
mov
add
aad
add
mov
mov
int3
mov
add
jle
jp
add
int3
data16
add
fwait
add
mov
lea
pop
ret
push
rol
pop
lea
push
rol
sub
xor
inc
pop
pop
push
not
lea
pop
pop
push
push
lea
push
call
add
rolb
stc
cmc
add
add
mov
mov
add
add
pusha
fadds
sarl
push
lcall
add
add
mov
add
xchg
add
mov
add
aam
bound
pop
push
push
push
push
push
lea
push
call
add
out
jge
add
add
std
cld
out
add
add
add
add
xlat
add
add
add
mov
add
stos
add
xlat
add
add
aam
bound
pop
pop
push
sub
pop
leave
push
inc
sub
pop
ret
mov
push
push
call
out
bound
hlt
lods
into
fwait
cwtl
jecxz
add
add
mov
push
pop
mov
or
push
stos
out
in
pop
jo
int
movsl
mov
cli
push
add
push
mov
add
mov
mov
int3
lea
pop
pop
push
push
push
push
lea
push
push
push
push
call
jp
jae
add
mov
add
push
add
add
push
add
add
hlt
rol
add
mov
add
add
mov
int
sar
add
mov
pop
add
add
add
add
into
test
loopne
mov
mov
add
loop
add
pop
pop
push
lea
ror
pop
pop
push
push
lea
push
push
push
push
push
push
lea
push
call
add
jbe
mov
add
loopne
jb
add
test
pop
orb
add
add
mov
add
add
add
jnp
movsb
ljmp
sarl
add
xlat
mov
mov
mov
add
add
mov
lea
pop
pop
push
inc
not
sub
pop
leave
push
sub
ror
lea
pop
ret
test
push
test
jae
test
jb
lret
push
int
jae
jae
test
jae
sub
jb
jne
inc
add
sub
push
jg
push
dec
movsb
pop
idiv
popf
adc
insl
sbb
daa
ret
lock
out
adc
mov
mov
dec
and
mov
jbe
xchg
push
or
ljmpw
ret
push
mov
push
cmp
std
pop
lea
imul
out
and
inc
inc
fisubrl
push
ret
mov
aam
insl
insl
mov
sub
cmpsb
mov
mov
ja
inc
xor
lods
xchg
dec
repnz
enter
xchg
loop
adc
xchg
xchg
inc
aad
test
fs
mov
add
lcall
jo
sbb
sbb
cmp
out
cmp
mov
cwtl
push
pop
jno
es
mov
cld
cmp
stos
mov
into
imul
mov
add
daa
inc
xchg
test
loope
outsw
mov
ljmp
jle
mov
scas
cmp
sbb
push
mov
lret
out
xchg
shlb
aad
into
in
add
lcall
adc
jno
negl
inc
add
push
mov
ds
mov
xchg
jge
push
loopne
popa
les
pusha
xlat
dec
sahf
mov
add
or
jg
imul
xor
pop
ror
mov
push
inc
stc
mov
bound
lds
push
xchg
xor
mov
mov
ror
add
mov
push
rcr
sbb
movsl
inc
repnz
xchg
dec
push
mov
jmp
mov
xlat
imul
addb
or
xchg
cld
jo
sbb
ljmp
lock
mov
pusha
jp
cmc
int3
mov
xor
dec
mov
pop
mov
sti
inc
rcl
in
mov
dec
decb
rclb
insl
out
dec
inc
popa
test
jbe
cmp
mov
lds
xchg
aam
inc
outsl
call
jno
insl
push
addb
mov
mov
jb
sbb
lret
pop
in
je
out
jge
pop
adc
jne
sub
xchg
cmpb
loop
test
xchg
cs
inc
mov
or
mov
cltd
mov
cmc
dec
in
dec
fwait
call
jns
mov
test
jae
push
push
push
push
sbb
sub
jae
mov
rorl
pop
lods
mov
mov
les
lds
push
fimuls
lds
mov
mov
inc
loopne
std
pop
shrb
jmp
out
dec
push
pminub
mov
fsubs
and
lahf
arpl
cmp
sti
pushf
gs
sub
cs
shll
mov
notb
inc
inc
or
cmp
sbb
adc
lods
out
clc
push
clc
lcall
push
push
or
mov
loop
and
test
loop
jno
loopne
dec
sub
imul
stc
gs
push
dec
idivb
mov
mov
int3
jle
jge
jo
sbb
es
jecxz
mov
adc
and
iret
cmp
mov
outsb
cmp
mov
in
mov
xchg
inc
and
jmp
ja
ss
fsubrp
orb
mov
sub
pop
or
outsl
jo
pusha
cmp
xor
imul
push
loope
mov
xadd
test
cmp
cmp
test
mov
mov
roll
adc
fnstsw
cmp
xchg
sub
subl
out
push
es
imul
mov
push
scas
and
push
test
lcall
sbb
xor
dec
push
sub
lcall
mov
arpl
xchg
rorb
jno
mov
pusha
mov
aad
mov
dec
dec
imul
sub
fstpl
insl
or
adc
push
adc
sbb
xor
sarb
add
enter
dec
insb
loope
notl
fistpll
pop
mov
in
lcall
pop
add
sub
call
xchg
mov
pop
adc
push
aad
lods
cmp
rcrl
jge
nop
dec
daa
shl
xchg
or
or
shlb
jl
addr16
inc
insb
or
lahf
and
leave
lcall
dec
mov
sub
out
imul
fnstenv
adc
pop
dec
mov
iret
add
xchg
lea
int3
mov
je
push
or
xor
cmpsl
xchg
test
mov
popa
xchg
daa
out
push
adc
add
xchg
jnp
or
js
jae
mov
sahf
fists
test
test
or
mov
imul
dec
outsl
push
loope
in
fisubs
cmp
movsb
hlt
outsb
out
add
ja
sub
sub
adc
pop
repnz
push
movsl
std
sbb
dec
fidivl
rclb
cmp
int3
xor
int
push
dec
push
inc
lret
insl
outsb
fs
js
icebp
or
lret
cmp
cwtl
cs
std
xchg
orb
push
adc
adc
stos
in
push
xor
cltd
inc
mov
pop
adc
clc
push
mov
lods
pop
lock
lds
ja
jge
sub
scas
adc
in
and
jp
rcrl
ss
inc
jns
outsl
adc
popf
enter
push
aaa
lcall
mov
faddl
xor
inc
jle
mov
fdivr
into
je
aad
aaa
or
ljmp
loope
add
pop
or
and
jno
call
leave
pop
xor
popf
mov
and
js
push
jo
adc
call
int3
push
leave
sbb
call
in
push
xchg
dec
vmread
and
mov
scas
mov
push
mov
mov
fdivl
call
ret
outsb
inc
lods
jecxz
aam
cwtl
aas
shll
aam
leave
movsl
add
fisubl
js,pn
in
ret
sub
fldcw
rcrb
fcomps
push
pop
dec
sub
popf
push
ds
test
repz
ss
push
mov
cwtl
xor
xchg
cwtl
sti
mov
add
dec
xchg
scas
xor
lods
les
ret
dec
ds
add
leave
mov
iret
sbb
into
sbb
jl
push
mov
push
dec
adc
in
pop
fwait
inc
subb
into
dec
pop
dec
leave
test
inc
lods
dec
cs
in
scas
leave
icebp
frstor
mov
imul
and
out
fsubrp
push
dec
data16
sbb
jmp
jbe
in
sarb
push
repz
in
insl
das
push
or
repz
imul
into
hlt
jo
lret
mov
bound
or
xchg
into
loop
lret
xchg
ficomps
jl
aas
add
dec
inc
dec
loop
push
insl
and
ret
iret
cmp
jo
cltd
and
sahf
xchg
js
aam
cmpsl
inc
xor
popf
ficoml
pop
int
add
sub
insb
sub
fcomp
stos
test
aad
popa
jecxz
icebp
test
or
test
xchg
pop
and
add
jbe
add
add
stc
loopne
stos
test
enter
mov
inc
aaa
xchg
xchg
test
fimuls
adc
push
movsb
jnp
inc
hlt
push
adc
fwait
shrb
popa
mov
aad
pop
xor
pop
gs
das
in
dec
mov
inc
scas
les
inc
and
repz
subb
mov
push
fs
dec
mov
and
mov
cmp
movb
xor
push
dec
jmp
cltd
inc
shll
push
std
jl
les
and
mov
xchg
in
jo
rol
xchg
cld
inc
mov
fdivrs
add
dec
jge
aaa
dec
pusha
xchg
adcl
in
and
pushf
mov
js
push
test
xor
cmpl
rcrb
cmp
ja
fldpi
mov
push
dec
dec
out
inc
mov
sub
loope
repnz
and
aam
jg
jns
push
ja
pop
inc
jp
jle
and
or
cmpsl
iret
inc
jge
sbb
adc
mov
fwait
sub
add
movsb
xor
push
xor
push
sarb
inc
iret
jbe
clc
and
aam
cmp
sbb
fstl
das
adc
ja
xchg
incl
out
insl
imul
adc
loop
sub
shll
xchg
xchg
push
bound
adc
call
jp
push
and
insl
sbb
rorl
pusha
xchg
lahf
addl
adc
mov
stc
mov
mov
jae
sahf
pop
push
aad
bound
nop
dec
lea
cmc
jecxz
fldt
repnz
push
lock
or
add
sub
jae
std
xor
xchg
sbb
stc
fildl
add
mov
sub
and
or
adc
repnz
push
lds
mov
add
mov
sbb
add
test
js
inc
xor
cmp
outsl
aas
sahf
aaa
pop
and
stos
mov
in
or
mov
and
mov
add
mov
test
fs
jge
stc
mov
and
adc
incb
scas
xchg
dec
es
or
cwtl
fistpll
addr16
fcompl
stc
jl
xchg
insl
mov
dec
adc
add
sub
icebp
xchg
xor
aaa
jecxz
mov
jb
dec
into
repz
push
ret
sbb
movl
lret
cmc
add
adc
std
jmp
je
fnstsw
dec
shlb
and
cmp
nop
cmpb
in
inc
push
dec
jp
scas
adc
in
test
ljmp
xchg
mov
mov
push
mov
popa
cmpsb
cmp
frstor
clc
fdivs
mov
in
enter
cmc
dec
imul
in
daa
jmp
pop
push
out
fimull
stos
sbb
fisubs
xchg
popa
mov
and
push
and
xor
data16
pop
out
test
mov
jb
jecxz
xchg
out
lahf
jmp
pusha
test
adc
out
fildll
mov
addb
pop
leave
sub
add
xchg
shll
inc
mov
inc
sub
sub
pop
and
gs
add
mov
icebp
jmp
fstl
clc
shlb
push
pop
or
testl
outsl
cmp
sbb
sbb
shll
adc
sub
mov
stc
test
mov
mov
mov
inc
loopnew
aam
js,pt
ds
inc
mov
les
lods
clc
inc
rolb
add
lahf
jae
xchg
enter
adc
inc
mov
sub
push
nop
fistl
pop
imul
or
push
testl
das
nop
icebp
imul
std
out
xchg
pushf
dec
es
out
cmp
mov
mov
and
pop
fsubs
icebp
loopne
pop
popa
pop
repnz
lret
mov
shrl
shl
inc
xchg
pop
js
shll
clc
fidivl
outsl
pop
fwait
rorl
cmp
and
out
repnz
arpl
mov
mov
jno
sub
add
jecxz
notl
ja
enter
testb
mov
mov
das
dec
fdivrs
aad
daa
jnp
pop
dec
jge
test
outsl
push
fwait
jne
imul
enter
adc
mov
push
aaa
push
fcoms
aam
sub
mov
jns
imul
in
daa
xchg
adc
mov
xchg
stos
cmp
sub
pop
cld
das
outsl
pop
js
cmp
shll
in
and
jp
pop
clc
and
dec
inc
inc
jmp
call
test
loopne
and
cwtl
and
pop
mov
inc
shll
ficoml
pop
ds
mov
js
data16
push
sbb
mov
repnz
or
in
xor
popf
push
lea
lods
sbb
xchg
pop
loop
insl
jnp
mov
decl
pop
sub
test
rcrb
add
cli
js
cwtl
imul
in
mov
repz
jae
sub
movb
aaa
fldcw
xchg
ret
and
and
add
fldl
mov
and
ds
int3
scas
pop
lods
xor
out
mov
dec
jg
idivl
lret
or
xchg
or
sbb
pop
sub
inc
or
pop
jb
mov
stc
mov
sub
pop
mov
sub
nop
mov
test
mov
pop
sbb
in
adc
inc
jmp
dec
test
add
ja
mov
les
push
repnz
or
push
fstps
fisttpll
enter
inc
or
mov
jae
test
insb
dec
loopne
in
arpl
add
scas
fcompl
ja
lret
xor
mov
sbb
mov
int3
lcall
pop
and
jmp
pushf
mov
sbb
lds
out
cmp
arpl
in
mov
cmp
cmpb
stos
lcall
inc
movsl
sub
ljmp
and
in
or
jns
xchg
nop
or
and
mov
cwtl
lret
mov
cld
lods
mov
leave
mov
imul
bound
pop
fdecstp
loope
jae
jle
movsl
aad
lahf
fcmovnb
and
ss
insl
outsb
rorb
negb
dec
lahf
in
int
insl
xor
insl
xchg
aad
xchg
ja
test
mov
push
sub
mov
icebp
sub
loop
imul
jmp
pop
stos
aas
call
repz
pop
mov
jp
imul
mov
dec
pop
fwait
xchg
xor
repz
imul
mov
xchg
cmp
inc
push
pop
shll
mov
jo
mov
cmp
jg
jl
add
cwtl
xor
testl
mov
leave
xor
orb
jle
cmp
out
cmpsl
pop
sub
pop
add
bound
loope
sub
cmp
and
cmp
aaa
lods
cmp
lcall
cs
cmp
push
ss
jnp
insb
pop
xchg
push
lahf
jecxz
mov
adc
inc
das
xchg
repz
lahf
mov
inc
cmp
mov
cmp
sub
xchg
inc
daa
cmp
test
add
lahf
mov
dec
xchg
test
pop
push
aad
gs
js
lock
ret
sbb
rcll
cmp
mov
fs
sub
ja
test
les
movsb
insl
repnz
scas
pop
xor
dec
pop
js
decb
into
add
inc
push
cmpsb
mov
push
cmpw
mov
add
push
out
outsb
dec
dec
addl
or
rolb
mov
mov
and
js
loop
popf
lret
pop
xchg
lcall
cmp
in
in
or
jecxz
out
push
mov
jb
sub
in
mov
push
jnp
fstp
xchg
into
lods
xchg
xchg
rcll
fwait
in
bound
pop
inc
call
sahf
pushf
lea
fstpl
popf
adc
fstp
test
cmpsl
mov
std
jno
adc
mov
mov
pop
scas
add
add
cmp
into
lea
push
jmp
mov
jno
fnstcw
dec
inc
cmc
in
sarl
and
in
sbb
nop
jecxz
out
loop
or
ret
imul
mov
dec
sbb
xchg
xchg
adc
aam
loop
adc
jg
xlat
fwait
jb
js
jp
add
jno
dec
gs
int3
xchg
or
loopne
and
lcall
fisttps
out
nop
stos
and
mov
stos
adc
pop
cld
data16
push
in
adc
divl
xchg
out
divl
into
push
hlt
adc
je
insl
insb
fbld
out
addr16
repnz
ficoml
sub
adc
and
gs
lods
or
scas
push
ret
dec
lods
add
out
mov
cltd
les
jne
xchg
sbb
in
add
inc
mov
scas
aas
bound
arpl
push
and
ljmp
aam
adc
in
les
hlt
loopne
dec
out
outsb
adc
dec
cmp
mov
out
push
fbld
push
les
fdivrl
out
inc
fwait
push
mov
jp
int
rolb
cli
jecxz
loopne
xchg
mov
popa
dec
repz
imul
loop
xchg
outsl
xchg
push
nop
mov
pop
push
xor
sarl
lock
xchg
test
cmp
inc
mov
and
aam
das
jp
xchg
dec
movsb
xor
insl
gs
jge
test
mov
loope
ss
mov
or
test
push
xchg
xchg
or
lea
push
xchg
addr16
loop
ds
stos
push
fstpt
fwait
pop
lahf
mov
push
mov
in
mov
or
dec
push
test
fcoms
mov
dec
sbb
push
clc
jge
mov
shrb
ds
negb
mov
lds
iret
fisubl
pop
je
dec
adc
and
adc
mov
out
add
pop
cmp
sbb
push
in
rcr
fsubrl
jb
popf
sbb
mov
popf
mov
js
movsb
insb
subb
loopne
gs
add
test
sarb
push
shlb
lret
das
decb
test
mov
mov
cmp
mov
pop
jno
rcl
mov
inc
lods
or
mov
mov
dec
repz
lahf
icebp
and
mov
inc
or
xchg
das
sbb
pushf
mov
aaa
or
mov
sub
std
pop
pop
pop
fcompl
and
mov
inc
sub
addb
ss
test
push
dec
movsl
cmc
imul
sbb
shlb
shl
jmp
fcompl
jle
mov
add
fucom
iret
ja
xchg
pop
jne
outsl
out
mov
pop
and
sbb
cld
xchg
xchg
comiss
push
fisubrl
sti
pop
sbb
push
jmp
adc
xor
pushf
or
sub
es
enter
icebp
push
xchg
sub
add
dec
or
jb
sub
je
pop
es
push
call
cli
xor
xchg
push
aam
pop
rep
and
in
arpl
loope
sub
mov
ja
sub
and
out
idiv
xchg
idivb
andl
lret
shrb
dec
mov
sbb
je
jle
or
sub
lret
outsl
loope
adc
lcall
mov
push
testl
iret
sbb
int3
dec
jb
dec
or
imul
pop
incb
imul
or
sahf
pusha
mov
rcrl
xchg
outsb
fbstp
adcb
movsl
pop
mov
xor
loope
dec
addr16
mov
cmp
or
movsl
outsl
jns
xchg
xor
jnp
ljmp
sarl
out
inc
in
push
push
rol
test
fimuls
pop
sub
mov
add
loope
pop
add
and
incb
subb
sub
fistps
scas
jge
movsb
pop
hlt
jge
in
xorl
lret
xorl
xor
out
add
mov
sub
fimull
cmpl
fisttpl
cmp
popf
xor
dec
ret
mov
xchg
mov
sub
out
fisttpll
clc
pop
fists
pop
sbb
mov
pop
xchg
add
xchg
and
mov
mov
pushf
mov
and
roll
fmulp
jmp
pop
je
inc
dec
addr16
inc
or
nop
add
add
mov
cmpsl
out
pushf
fstpl
in
aad
imull
sub
jnp
mov
stos
sbb
push
loopne
xchg
or
fstl
repz
lods
sahf
sbb
dec
das
adc
or
in
push
bound
or
pushf
dec
mov
jmp
xchg
stos
rclb
cmpsl
mov
arpl
aad
mov
outsl
int3
push
add
in
pop
cmp
decb
mov
jmp
push
les
setl
inc
addb
lock
mov
mov
fisttps
sub
pop
js
adc
sti
out
popa
daa
sub
fnsave
mov
push
lds
or
jno
or
and
push
jbe
or
cmp
and
out
add
adc
in
fidivrl
ds
push
and
mov
xchg
mov
mov
xor
adc
les
fsubrs
jp
imul
add
push
loopne
jae
sbb
ds
push
cmp
cmpsl
and
insb
outsb
dec
mov
pop
pop
sbb
pop
or
xor
int
pushw
les
sub
fcomi
enter
es
sub
mov
adc
shll
es
mov
mov
fcmovnbe
mov
insb
orl
mov
lds
xor
test
popa
adc
aaa
cwtl
mov
mov
push
pop
fs
jo
ljmp
mov
clc
stc
cmp
fstpt
and
sbb
je
jnp
push
bound
mov
sti
jg
jnp
fiadds
adc
mov
jmp
mov
stc
xchg
adc
cwtl
dec
push
js
fcmovnu
es
das
mov
add
and
cs
stos
add
in
and
bnd
test
mov
daa
xor
mov
int3
movsl
clc
jge
adc
push
cmp
pushf
dec
jecxz
loop
cltd
outsb
dec
pop
inc
add
xor
in
insb
xchg
lods
clc
test
iret
push
setle
in
lock
mov
pop
inc
xorl
mov
push
dec
inc
fwait
pop
dec
mov
xor
sbb
push
mov
adc
or
mov
repnz
push
cmpsb
insb
cmp
js
or
cltd
mov
mov
stc
ljmp
ret
test
push
sbb
jmp
incl
divl
nop
in
jo
cli
adc
das
xor
int
dec
or
cld
jl
sbb
cmpb
dec
sbb
pop
dec
and
scas
outsl
add
fwait
lahf
shll
mov
pop
xor
enter
adc
cmpsb
inc
lds
gs
lea
push
push
test
mov
add
int
push
popf
jno
jp
movsb
fwait
scas
push
aam
push
aam
sub
jb
cmp
pop
adc
mov
dec
je
outsl
dec
lds
fs
pop
js
mov
xchg
sub
hlt
test
jle
sbb
pop
lock
xchg
lret
xorb
shrb
xchg
mov
sub
movsb
xchg
aaa
mov
ja
in
enter
shll
pop
adc
or
aad
out
xor
pusha
xor
cmp
fucomp
in
aam
dec
lahf
pop
fstl
in
mov
lahf
or
jns
and
cltd
popfw
pop
sub
cmpsb
pop
dec
sub
dec
mov
and
idivb
inc
mov
nop
lods
dec
test
mov
test
dec
adc
cmp
cmpb
insb
and
cmp
lahf
imul
push
aad
lcall
cmp
mov
inc
data16
adc
mov
xchg
icebp
mov
mov
icebp
pop
ss
pop
dec
ret
mov
int
mov
push
loope
mov
int3
jno
mov
or
enter
dec
ss
pop
ss
sbb
or
lods
jecxz
cmp
roll
fsubs
cmp
js
scas
push
pop
xor
lods
nop
test
cld
cmc
mov
sub
loop
mov
es
fsub
aad
cwtl
pop
dec
or
outsl
push
and
and
mov
cmp
inc
mov
popa
or
mov
sub
mov
or
movsl
adc
insl
inc
cwtl
xlat
addb
jp
cmp
cmpsl
pop
xor
and
jecxz
jo
fidivs
xor
lret
add
adc
rcr
addr16
sbb
xchg
xchg
lcall
cmp
adcb
dec
sahf
sub
std
inc
lret
je
shrb
mov
jl
les
lods
pusha
mov
gs
xchg
mov
pop
mov
mov
push
cmc
push
int
inc
repnz
cli
pop
push
xor
stc
or
test
rcl
xor
shrb
lods
arpl
ret
popf
xlat
sub
inc
inc
jecxz
sub
sbb
stc
sub
and
lea
mov
cwtl
or
ror
and
popf
adcl
cmpsl
sarb
gs
dec
out
add
cltd
and
lods
bound
xor
lcall
cmc
jle
in
jnp
sbb
adc
adc
sub
cmp
lahf
pop
xchg
data16
mov
in
es
dec
add
test
sti
enter
xchg
fadd
outsl
xlat
inc
fnstenv
jmp
lahf
dec
les
faddl
mov
add
dec
cmp
pop
lahf
mov
xchg
out
test
jmp
and
pusha
out
ljmp
lds
imul
add
mov
pop
mov
mull
mov
rcll
clc
test
mov
pop
inc
sbb
jge
mov
shrl
jbe
es
pop
mov
mov
add
dec
mov
adc
lock
inc
xchg
psrad
rorb
shrb
mov
pop
and
jno
sub
movhps
cmp
inc
adc
xor
pop
and
addb
enter
sahf
in
das
and
adc
js
pop
inc
xchg
push
int3
push
pop
in
and
dec
sbb
and
or
inc
xchg
addr16
mov
sub
rorl
xor
das
jg
jmp
adc
fistpl
push
add
add
mov
xchg
arpl
push
or
shrb
sar
and
push
lret
test
dec
mov
lret
xchg
xchg
in
fwait
call
sbb
in
cmp
sbb
subb
fdivs
and
add
fldcw
jne
scas
dec
int3
push
inc
repz
xor
dec
sbb
xor
sbb
or
aad
shr
xchg
cli
jmp
or
dec
sbb
fs
add
daa
jmp
aas
andb
pusha
push
mov
xchg
xor
mov
push
and
adc
xorb
xlat
dec
or
adc
push
movlps
int3
aad
ljmp
bound
add
loope
mov
ljmp
or
lahf
ds
or
and
inc
sbb
fsubs
mov
mov
daa
mov
push
js
movsl
push
jge
cmp
cmc
cmpsl
and
mov
sub
and
add
xchg
xorl
test
insl
sbb
mov
pusha
or
in
repnz
test
inc
into
shrl
mov
fucomp
lea
inc
push
and
cmc
out
dec
xor
mov
cwtl
cmp
scas
imul
mov
push
call
lret
pop
pop
and
mov
jmp
xorb
mov
jg
inc
add
fs
mov
das
data16
loop
cmp
icebp
jl
sub
cld
inc
add
inc
mov
pop
sbb
sub
stos
xor
and
jo
xor
mov
pop
pop
push
bound
inc
adc
sbb
push
mov
stc
and
and
xor
xchg
dec
inc
shlb
push
mov
jl
pop
leave
cwtl
aas
fwait
jg
mov
mov
adc
push
push
insb
jne
cmpsl
dec
jns
das
cltd
bound
fisubs
fdivrl
xchg
inc
adc
call
scas
int3
mov
pop
fdivrs
jnp
jo
mov
xor
aam
xor
push
push
aad
jne
in
sbb
lahf
inc
pop
or
test
cmp
addb
lds
ficompl
lds
sbb
lret
sub
jle
mov
mov
out
mov
inc
outsb
add
incl
mov
ljmp
push
lea
sbb
arpl
add
jns
mov
leave
out
ljmp
loop
jmp
or
dec
addr16
movl
es
push
mov
popl
dec
xor
adc
jecxz
xor
xor
imul
mov
sbb
mov
sbb
or
test
cmp
test
nop
mov
or
mov
mov
std
scas
inc
pop
ja
jecxz
pusha
in
mov
jae
stos
xchg
sti
jp
imul
vpshab
pop
dec
aad
or
jmp
ja
add
dec
adc
shr
adc
cmp
dec
or
jb
mov
stc
sahf
jns
xor
scas
in
sub
inc
jecxz
movsb
sbb
mov
gs
or
inc
mov
andb
sbb
or
sahf
insl
mov
cvtps2pi
push
or
xchg
js
mov
ret
mov
jnp
add
dec
nop
or
lret
sub
rcrl
mov
push
test
mov
jp
popa
sbb
btc
or
xchg
aaa
pop
ljmp
xchg
loop
push
jo
stos
cwtl
fldcw
xchg
test
adc
dec
addr16
mov
jle
dec
pop
and
pop
lock
mov
xor
fs
sbb
ret
and
or
and
cs
add
mov
push
fists
or
push
daa
daa
test
dec
inc
push
mov
test
inc
data16
cmp
or
sahf
xor
push
popa
dec
aas
cltd
out
and
sbb
sub
xchg
jmp
repz
ret
push
xchg
jmp
inc
outsb
sub
xor
mov
data16
push
rorl
jmp
xor
sub
jmp
jmp
adc
inc
outsb
xchg
loope
and
fwait
dec
sbb
movsl
pop
adc
aad
adc
into
jb
sidtl
jne
mov
xchg
pushf
sub
sub
nop
pop
data16
aas
jo
iret
outsb
sbb
sub
xchg
shrb
cld
jo
es
shll
mov
push
icebp
frndint
in
out
pushf
inc
mov
pop
jl
mov
adc
add
xor
frstor
repnz
xor
aam
daa
scas
lea
dec
addr16
sub
roll
shll
inc
and
dec
daa
mov
ret
sub
inc
mov
lcall
cmp
ds
fsubs
mov
mov
addb
aaa
in
repnz
inc
inc
adc
lods
call
push
sub
lahf
sbb
sahf
ficoml
inc
push
and
xchg
sub
push
int
loopne
std
movsl
or
ja
mov
jb
and
inc
dec
int3
xchg
outsl
aad
aas
mov
add
pop
cmpsl
cmp
push
mov
fidivl
xchg
rolb
pushf
and
cmp
xchg
adc
or
loopne
sahf
inc
movsb
mov
dec
lods
daa
int
repnz
push
jns
imul
sub
lods
rol
cli
jne
xor
adc
xchg
pop
sbb
repnz
mov
sbb
call
mov
repnz
mov
ja
or
in
push
les
sub
sbb
dec
xchg
stc
test
jno
cltd
cs
jl
xor
sar
xchg
sbb
popa
mov
lahf
jp
fidivrs
push
sub
shrl
mov
cmp
insb
loop
adc
jecxz
loopne
divl
jbe
mov
insl
jb
ret
jge
push
lock
adc
inc
or
sbb
sbb
test
pop
mov
mov
push
push
fistpll
pop
pop
fimuls
inc
jns
sbb
xor
adc
cmp
jge
test
sahf
add
inc
gs
push
inc
add
ss
xchg
cltd
pusha
adc
ret
pop
popa
add
stos
ss
cmp
notl
lods
xor
add
push
mov
add
call
out
xor
push
ret
arpl
stos
jle
pop
dec
jecxz
pop
fisubrl
mov
std
xchg
or
push
jae
jne
je
mov
push
insl
inc
mov
into
and
add
sbb
test
pushf
sti
aam
test
fistpl
lock
mov
jno
loope
pop
flds
lret
sbb
mov
or
mov
pop
scas
and
popa
add
test
fdivl
adc
jo
das
daa
cwtl
add
sub
sub
mov
sbbb
push
dec
jg
enter
ja
mov
push
scas
shl
push
aam
pop
adc
shll
add
xchg
push
leave
aas
and
push
pushf
mov
adc
out
sbb
cmp
cmc
daa
dec
inc
cwtl
pop
sbb
xchg
jle
lcall
jp
rcrl
pand
pop
mov
jecxz
xor
cmpsl
ds
aas
sub
fmuls
jo
repz
iret
sti
dec
xchg
mov
add
xorb
adc
insl
push
loopne
xchg
shll
and
sub
adc
jecxz
mov
stos
sar
mov
sbb
xchg
lret
inc
xchg
pop
lret
dec
pop
mov
loop
and
js
ds
cwtl
mov
mov
cmp
inc
lea
dec
push
add
mov
mov
pop
aad
lods
add
pop
stc
roll
aam
add
fs
popf
fwait
arpl
mov
push
jmp
int3
stos
shr
or
loop,pt
dec
cmp
lds
sub
das
test
inc
and
xorb
pop
lea
xor
push
jmp
js
daa
test
les
mov
adc
repz
bnd
xchg
or
cmp
mov
jl
sub
addr16
scas
popf
movsl
xor
xchg
add
jno
ret
pusha
aam
or
test
adc
xor
cs
and
sbb
jmp
push
clc
data16
les
bound
and
push
aad
mov
sub
lods
mov
rorl
repz
fadds
pop
mov
mov
xor
xchg
repz
shr
stos
pop
push
arpl
shlb
and
jnp
adc
shrb
mov
xor
mov
lods
xchg
push
leave
clc
adc
shlb
mov
rorb
xor
data16
sbb
fimuls
and
ja
inc
ljmp
pop
adc
pop
lcall
cli
enter
sbb
mov
js
add
pcmpgtw
push
xor
sub
jo
loope
xchg
push
or
femms
daa
loop
pop
push
or
or
pop
loop
xchg
repz
psrad
fwait
data16
lret
icebp
imul
in
push
pushf
clc
pop
add
mov
push
cmc
mov
mov
in
sbb
xor
pop
outsl
inc
leave
fmull
inc
fisttps
cmp
lret
rcll
jbe
mov
jno
xchg
jno
adc
and
mov
sub
lods
insl
out
loop
add
cmp
dec
in
dec
test
or
out
push
aam
repnz
sbb
pop
test
sbb
sbb
inc
pop
bound
movsl
popa
hlt
out
xchg
xchg
mov
cld
cmp
jmp
mov
sub
xchg
jecxz
pop
stos
mov
stos
pop
mov
xlat
mov
loop
in
fwait
in
stos
lret
add
icebp
repz
subl
xchg
insl
outsb
loop
iret
arpl
jp
es
in
mov
lret
mov
adc
xor
sub
mov
dec
shl
jne
pop
mov
adc
jge
dec
je
sahf
xlat
cmpsb
mov
xchg
adc
xchg
ds
sbb
xor
fnsave
mov
roll
xchg
jp
in
les
movsl
jne
mov
aad
pop
pop
jmp
lods
push
sahf
or
sbb
mov
fsts
in
hlt
add
sbb
aaa
mov
xlat
clc
jb
ret
stc
fstpl
fistps
or
int
add
cmpb
mov
outsb
ss
daa
dec
sbb
aad
incb
cmp
mov
push
ret
inc
scas
cmp
adc
lret
ss
test
jmp
in
ds
in
aas
jo
call
sti
sti
sbb
pop
lock
and
fmuls
je
aaa
add
mov
inc
dec
sbb
mov
lahf
add
dec
jo
clc
arpl
inc
and
jb
jle
jp
push
je
cld
loop
and
popa
cmc
cld
lret
lahf
in
stos
inc
xorb
adc
sub
int
gs
shrl
adc
int3
lret
push
mov
repnz
adc
mov
add
popf
mov
in
pop
add
arpl
test
insl
outsl
test
test
popa
dec
std
mov
fstpt
xchg
jmp
loopne
push
sub
adc
lods
gs
mov
add
pop
sub
adc
cmp
movsl
and
inc
rcrb
sti
dec
mov
fs
pop
daa
pop
ss
sub
sti
shll
push
push
mov
lcall
je
or
add
and
outsb
in
sbb
xchg
xchg
or
jmp
mov
lock
addr16
mov
sbb
dec
sahf
lods
fcoms
xchg
adc
cmc
jbe
fidivrs
xor
js
lods
add
or
mov
lods
fisttpl
sub
popa
test
mov
sbb
les
ficompl
inc
mov
or
push
scas
xchg
clc
xor
push
mov
jg
iret
xor
xchg
jb
mov
pop
push
mov
lods
jl
or
sbb
cmp
test
inc
repz
cmpsb
sub
and
mov
sbb
pop
push
dec
sbb
insl
mov
cli
insb
cmp
cmovb
in
mov
jne
mov
aad
xchg
fisubl
jnp
out
test
lea
or
out
enter
cltd
out
xchg
sbb
sarl
and
mov
rcrb
cli
push
imul
xchg
mov
dec
dec
sub
loopne
and
xor
daa
push
out
jnp
pop
xchg
add
iret
test
loope
cltd
in
int
inc
addr16
jae
and
in
lods
mov
ss
std
lret
std
aas
cmp
inc
xchg
mov
xor
xchg
xchg
js
lahf
push
jo
aad
jb
lcall
mov
jmp
lcall
or
sub
mov
out
test
shll
adc
add
inc
add
xor
jnp
out
out
imull
test
pop
push
xor
dec
and
repz
xor
xor
jae
stc
jge
in
jae
mov
push
jo
and
push
push
lds
pop
mov
xchg
loop
add
dec
push
fidivs
push
shll
stos
stos
loop
mov
adc
mov
ljmp
pop
cld
mov
add
mov
pushf
repnz
iret
dec
push
ja
dec
xchg
or
fiaddl
add
jle
or
push
push
pop
movsl
xor
pop
push
in
arpl
int3
lock
xchg
push
jecxz
in
push
orb
jbe
push
mov
push
insb
gs
lret
ret
mov
xchg
xchg
ss
out
rolb
lahf
rolb
xor
fwait
add
sbb
out
dec
stos
dec
push
cmc
cwtl
pop
cmpsb
cli
pop
cli
inc
dec
dec
fldenv
mov
xchg
pop
push
xchg
jno
adc
inc
mov
test
or
or
or
inc
lcall
and
lods
mov
cmpsl
jg
pop
js
mov
inc
in
mov
dec
addb
push
sub
mov
out
xchg
pop
mov
jecxz
dec
test
cli
mov
popa
imul
scas
orb
mov
mov
pop
stc
clc
pop
jns
lcall
movsb
sub
jmp
rcrl
xchg
sub
divl
cmp
dec
sbb
jo
mov
testl
jno
js
ja
jmp
mov
dec
add
push
xor
into
mov
std
arpl
mov
xor
pop
mov
mov
adc
clc
dec
in
lret
testb
sqrtps
and
in
adc
out
cmp
ret
popa
fisubs
movsb
dec
sbb
push
les
add
lds
and
pop
sbb
les
cs
mov
jle
out
inc
or
sbb
ja
aaa
gs
repnz
pop
sbb
out
outsl
test
sub
in
nop
stc
sub
add
push
bound
xor
cmp
bound
push
fidivrs
es
ljmp
jp
imul
xor
jmp
and
sbb
mov
out
mov
dec
push
pop
jg
push
jne
mov
js
pop
mov
mov
lret
or
pop
push
mov
ljmp
mov
insl
xchg
ljmp
cs
mov
movsl
or
jecxz
addr16
cs
out
mov
add
push
add
jbe
inc
popw
iret
push
repz
xchg
iret
cmc
and
adc
inc
insb
sub
and
and
loope
daa
cmp
mov
xor
mov
jae
cmp
sti
in
pusha
or
xchg
jbe
jg
ss
push
adc
cs
je
jo
mov
lds
pop
sbb
pop
aam
testb
mov
stos
mov
mov
out
shl
cmpsl
xor
adc
cmp
or
xor
and
mov
add
fidivs
enter
js
mov
stos
xchg
lcall
dec
enter
fsub
outsl
xlat
mov
adcb
shrb
in
push
mov
mov
nop
movsl
sbb
movsl
xchg
pop
mov
pop
loop
not
sub
cs
inc
popf
push
lret
es
inc
fidivrl
rcll
and
sbb
int3
jmp
aas
fsubrs
insl
fwait
in
mov
xchg
add
nop
shll
fcoms
leave
jbe
mov
rorb
in
mov
das
out
sbb
mov
cmpsb
xchg
xor
scas
ljmp
aam
jne
pop
arpl
pusha
xor
jnp
out
ficomps
fdivs
out
xchg
or
lahf
or
xchg
aad
pushf
in
mov
jmp
mov
adc
inc
stc
sub
mov
popf
aam
jg
cmp
push
sbb
in
out
aam
loopne
add
cmp
inc
stos
sbb
cmpsb
fcompl
cltd
pop
xor
scas
dec
rorb
cs
jne
add
mov
jecxz
setno
leave
and
xchg
test
cmp
lock
imul
les
inc
inc
or
mov
xor
xor
sub
movsb
out
jge
add
je
popa
push
xor
outsb
testl
jnp
ss
add
dec
iret
out
dec
mov
js
test
icebp
shr
add
add
lods
pushf
adc
push
cltd
pop
xchg
ss
pop
adc
cwtl
push
xchg
in
arpl
push
cmp
js
outsl
or
jo
cltd
inc
and
and
clc
pushl
insl
out
rolb
dec
push
mov
pop
push
mov
sub
push
xchg
dec
loope
jo
lods
adc
pop
lret
lods
xchg
ja
push
mov
int
and
stos
adcb
shlb
add
dec
add
jno
std
push
push
sub
mov
and
mov
stc
insb
shll
mov
xor
nop
fistpl
je
pop
inc
mov
mov
jnp
xchg
arpl
push
mov
hlt
jp
outsl
or
sbb
mov
jns
in
aaa
icebp
push
pop
push
loopne
incb
push
mov
inc
push
mov
and
or
jge
cli
js
mov
mov
mov
clc
pop
sub
pop
xchg
ret
ret
sbb
cld
xchg
in
adc
dec
sub
push
movsb
push
aas
and
and
out
repnz
std
dec
hlt
mov
and
sub
jl
pop
xlat
shll
inc
mov
dec
mov
or
xchg
in
push
push
or
xchg
jge
jne
popa
dec
or
call
enter
stos
pop
stc
lcall
call
nop
test
push
jns
xor
scas
cmp
fnstcw
jle
add
lods
adc
rorl
clc
inc
and
add
ficoms
pusha
imul
add
aas
cmpsl
cmpsb
pop
push
jmp
pushf
jmp
or
jbe
cmp
add
add
stc
std
cmpsl
popf
mov
and
jns
outsb
in
fsubr
mov
mov
lock
lret
stos
xchg
fwait
pop
dec
adc
and
cmp
pop
mov
cmp
sbb
fstl
sub
sbb
fcmovu
lock
inc
jge
push
leave
sub
sub
pushf
loop
gs
inc
push
aam
cs
sahf
xor
fldcw
leave
cs
or
test
addr16
js
xchg
sub
lahf
rcll
int
pop
pusha
add
lret
addb
mov
mov
cmc
pop
out
jae
nop
mov
sahf
xchg
js
push
pushf
mov
loope
push
ss
aaa
mov
out
sub
inc
jb
ds
ds
mov
outsl
mov
aam
push
xchg
fisubrs
outsb
fidivrl
mov
add
sti
pop
mov
pop
in
add
ret
sub
aad
push
dec
xchg
lcall
aaa
cmp
arpl
adc
in
mov
jns
nop
in
cwtl
inc
xchg
mov
fidivrl
pop
mov
popa
mov
rcrb
loope
mov
push
int3
mov
pop
jg
and
push
cmp
sub
dec
sbb
pop
fmul
pop
push
jno
cld
ret
pop
mov
push
adc
loop
mov
jnp
cltd
push
lret
lea
into
pop
and
and
test
int
push
or
add
push
dec
loopne
std
sub
cmp
popa
popa
or
cltd
xor
jle
push
or
imul
into
repz
je
pop
in
mov
outsb
jb
incb
xchg
xor
enter
inc
cld
adc
xor
mov
mov
ss
outsl
add
rcr
into
push
or
push
stc
xchg
adc
jl
and
test
dec
lahf
mov
jle
sub
mov
pop
inc
push
in
clc
xchg
aad
pop
adc
fbld
sahf
test
dec
adc
cmpl
jmp
in
cmp
cmp
dec
orb
add
sbb
idivb
bound
gs
push
jae
movsb
test
push
add
repz
mov
das
xchg
mov
imul
ret
dec
pop
ret
daa
out
cmpsb
cmp
ljmp
in
es
inc
shl
lcall
inc
ficoml
pop
jns
adc
cmp
pop
dec
sub
xchg
push
mov
sub
cmp
fbld
fldcw
jbe
lret
pushf
or
or
scas
mov
pop
stos
push
pop
test
sub
mov
sub
dec
lahf
xor
dec
mov
shll
xchg
lock
jp
xchg
dec
rcrb
subb
cltd
shrl
lcall
pop
addr16
ja
jno
les
adc
cs
xchg
mov
sbb
pop
flds
cmpsl
lret
enter
xchg
or
cmp
and
or
loop
cmp
out
mov
jge
ja
das
fmul
mov
cmp
or
sub
shll
mov
push
pop
stos
mov
test
movsl
fsubs
xchg
and
inc
sub
das
cmp
push
je
sahf
mov
stos
ficompl
lret
rcr
push
cs
stos
adc
adc
jne
jns
loopne
outsb
cwtl
shrb
mov
inc
ljmp
cmp
iret
push
cmp
stos
dec
jnp
push
jecxz
insb
fcoml
or
andb
cli
fwait
aad
push
loope
lods
fisubrs
xor
jge
xorl
test
ljmp
rorb
paddq
jg
in
pop
and
mov
push
xor
mov
sub
aas
enter
inc
scas
jp
push
sbb
jmp
push
xchg
xor
pushf
sbb
lret
inc
pop
mov
out
or
xor
xchg
mov
pop
scas
mov
sbb
sub
shr
popf
stos
fdivr
inc
femms
jle
in
jecxz
push
lahf
insl
mov
adc
stc
ss
call
adc
test
xchg
inc
imul
in
mov
adc
jo
cmc
aaa
ljmp
add
cmpsl
repz
or
mov
out
jecxz
scas
cli
dec
fdivs
sbb
bound
sbb
cwtl
dec
jle
dec
imul
ret
mov
pop
mov
lock
cld
outsl
pushf
and
jecxz
movb
rcll
imul
call
xchg
data16
sti
push
cld
pop
xor
rcll
mov
sub
mov
xor
lret
mov
ss
lret
cli
add
xlat
fiaddl
lcall
iret
imul
cmp
test
mov
lea
lock
movsb
push
faddl
cmp
sti
mov
add
and
cltd
scas
pushf
fidivs
out
add
adc
sbb
pop
cmp
outsb
push
dec
mov
imul
sbb
or
fldenv
dec
loopne
and
sbb
mov
cli
push
jno
cmc
mov
jbe
inc
dec
pop
dec
ret
fistps
jnp
cmp
cmp
mov
xchg
pop
pop
test
xor
fwait
enter
pop
popf
jge
dec
sub
inc
dec
in
inc
pushf
cs
dec
dec
xchg
sub
xchg
outsl
pop
dec
lods
inc
xchg
bound
dec
in
xor
jns
arpl
adc
adc
loope
adc
out
hlt
mov
mov
daa
cmp
fs
pop
test
out
mov
shl
cli
inc
sbb
xor
cld
add
fildll
jo
dec
lock
pop
xor
fwait
inc
xor
in
in
into
je
pop
inc
mov
mov
rcrl
fstl
rcl
inc
cmp
aad
mov
xchg
test
movsl
mov
cs
out
mov
and
push
xchg
hlt
add
dec
push
adc
push
pop
cltd
in
sub
inc
mov
int
or
and
push
pop
insb
sbb
xchg
fsubrs
mov
rorb
lock
xchg
adc
sbb
mov
ss
inc
insl
jp
and
aaa
cmp
jl
fisttpll
out
jns
ja
inc
mov
jb
mov
cwtl
sub
fdivl
cmp
or
add
jmp
aas
mov
cmp
cmp
dec
js
sbb
xchg
xchg
repnz
std
cld
cltd
xchg
push
sbb
inc
out
cmp
pushf
iret
lret
inc
push
fucomi
mov
les
lret
push
dec
xchg
mov
icebp
xor
sbb
mov
adc
orb
xchg
out
gs
lcall
bound
cmp
xlat
cli
add
dec
dec
pop
and
pop
test
or
xlat
xchg
push
lods
jno
imul
dec
inc
pop
pop
and
cli
pop
push
mov
leave
lea
out
and
in
inc
and
ret
es
dec
insl
aas
jbe
lods
std
xchg
push
pop
bound
and
jae
stos
stos
push
or
or
ja
movsl
insb
adc
daa
lods
cmp
out
int3
or
xorl
mov
int3
adc
xchg
pop
lcall
into
jae
mov
inc
sbb
jne
test
sti
inc
fistpll
push
mov
xor
aad
mov
dec
mov
insl
mov
sbbb
int3
lods
pop
inc
int3
int3
aam
mov
mov
aad
cwtl
mov
mov
jg
fdivs
xor
loopne
push
loopne
dec
cltd
push
pusha
fsub
xor
aas
insb
test
rcr
pop
inc
lret
xor
sub
stos
inc
adc
loop
xchg
and
dec
addr16
outsl
mov
jns
and
xor
mov
daa
mov
scas
or
xchg
inc
ret
fs
aad
adc
or
es
stc
mov
sub
out
pop
xor
pop
and
enter
jl
fcmovbe
cmp
dec
add
lods
jmp
lods
mov
movsl
inc
out
sub
cmpb
into
insb
nop
ljmp
arpl
mov
cmp
cmpl
fsts
jno
lock
cmp
loop
sub
out
lret
test
aam
mov
cmp
and
cmp
sbb
adcl
inc
pushf
and
adc
pop
lcall
pop
jmp
mov
cmp
push
mov
mov
mov
and
adc
std
jo
sbb
xor
xor
adc
test
out
mov
pusha
loop
mov
testb
pop
ja
lret
inc
fildl
repz
popa
iret
jno
add
jno
push
cmp
or
bound
arpl
jnp
and
rclb
jp
or
ret
push
ret
imul
movsl
add
scas
mov
lret
rcrl
punpckhwd
xchg
cmp
in
jns
jnp
dec
fidivrs
xor
cs
out
cli
and
adc
je
xchg
push
shlb
inc
pop
rclb
sbb
sub
in
mov
xchg
dec
xchg
sbb
sub
gs
js
int
push
mov
sub
cld
push
outsb
jecxz
pop
ret
inc
ficoms
push
stos
cmp
in
and
jmp
mov
imul
and
push
inc
mov
cmp
xor
add
sub
push
fs
imul
inc
ss
lret
jp
dec
in
add
cmp
jl
or
pop
scas
mov
push
cmp
lds
into
inc
add
mov
cmpsb
dec
add
jbe
out
jg
xlat
push
push
push
rcll
cmpl
loope
insb
jmp
das
and
mov
mov
ss
ja
nop
iret
jp
jbe
out
mov
sbbl
mov
adc
push
test
and
mov
divb
and
cwtl
adc
and
insl
xchg
fmul
push
inc
rcrb
daa
mov
cwtl
jae
xor
lea
fisubrl
test
int3
loope
push
inc
movsb
push
cmpl
popa
loope
cmp
cld
mov
pushf
inc
push
les
neg
push
xchg
pop
adc
rclb
cmc
test
adc
and
aaa
sbb
std
movsb
pop
sub
insl
arpl
adc
or
inc
push
sbb
or
add
addl
inc
outsl
ja
inc
lods
bound
xlat
int
repnz
xchg
add
adc
mov
adc
jp
call
mov
mov
les
nop
dec
lods
add
inc
cmp
sub
cmp
mov
add
pop
aad
sub
cli
loopne
in
mov
clc
enter
or
xor
adc
dec
pop
sbb
jl
push
xor
adc
ficoms
sbb
out
decl
xchg
out
aad
aad
add
jp
in
aas
mov
orl
cmp
or
xchg
inc
movsb
mov
and
and
clc
and
fsubl
sahf
inc
addb
scas
xorl
loopne
jb
pop
pop
cmp
dec
bound
xchg
mov
mov
push
dec
scas
int3
xchg
adc
in
xlat
push
stos
jbe
mov
outsb
mov
data16
adc
bound
sub
dec
aad
dec
add
jne
inc
or
adc
ja
xor
movsb
mov
sahf
out
sub
push
das
ss
ret
xorb
inc
lock
andb
and
into
dec
jl
in
adc
pop
bound
mov
cmpsb
dec
jp
test
mov
fdivs
addb
movsl
adc
inc
and
adc
xor
add
cmp
push
cwtl
inc
jge
add
push
cltd
test
scas
inc
js
loop
das
jge
cmp
shll
out
faddp
xchg
push
ret
mov
push
aam
push
adc
lar
inc
roll
xchg
mov
dec
fnstenv
cmp
cmp
jb
push
dec
in
fbstp
in
pop
stos
addr16
syscall
and
xor
jmp
add
loop
lret
aaa
cwtl
sbb
mov
mov
add
lods
mov
leave
repz
popf
ret
faddl
test
sti
das
dec
mov
shlb
sub
jne
into
in
es
std
cmp
repz
stos
ret
fistpll
adc
fiaddl
push
mov
cmp
push
xchg
cmpsb
cmp
enter
test
sub
xor
fld
push
int
loope
cmp
cmp
dec
and
adc
test
dec
les
mov
sub
scas
rorl
repnz
add
mov
xchg
cltd
testl
outsl
mov
adc
ficomps
mov
cmpsl
mov
and
pop
cltd
lahf
popa
cmp
add
cmp
jbe
test
in
enter
and
sbb
sahf
or
ljmp
stos
imul
jbe
ja
call
popf
ljmp
and
stos
and
dec
lds
repz
mov
sti
outsb
int3
adc
mov
cmpsb
scas
inc
divl
xor
daa
enter
lcall
call
cmp
arpl
sub
cli
jne
lock
mov
int3
sbb
inc
sub
dec
jl
jbe
call
cwtl
lret
inc
mov
jbe
push
lret
stc
dec
shrb
pop
push
sbb
adc
adc
mov
mov
mov
push
outsb
js
std
iret
adcb
dec
jge
jge
jo
decb
les
and
lods
pop
lahf
mov
mov
mov
pop
jp
push
xchg
cld
test
pop
in
psrld
into
inc
mov
repz
leave
test
es
mov
mov
and
fiadds
ja
cvtps2pd
jbe
es
test
adc
dec
inc
pop
xor
popf
dec
mov
dec
cmc
das
sbb
sahf
loope
push
ds
pop
mov
loop
push
or
stos
sbb
addr16
mov
sbb
adc
cmpsb
sub
xor
loop
push
mov
adc
fisttpl
adc
xchg
je
ret
or
push
pop
out
xor
pop
mov
mov
pop
cmpsl
out
jg
adc
jns
xchg
mov
aad
dec
cmp
inc
pushf
add
dec
mov
ret
test
inc
and
mov
mov
das
adc
xor
pushf
pop
jge
int3
loop
and
pop
adc
sahf
pop
adc
sub
js
push
cmc
or
das
loop
dec
popa
shlb
data16
pop
dec
daa
enter
and
pusha
sarl
mov
pop
in
ljmp
xor
cli
pop
push
mov
cwtl
lret
cmpsb
sub
push
mov
mov
data16
or
add
mov
dec
cltd
lcall
call
andb
sarb
test
adc
and
xchg
inc
jbe
imul
mov
out
inc
jae
dec
clc
xchg
insl
mov
xchg
subb
add
mov
es
xor
xchg
scas
out
mov
cmc
mov
fcmovu
adc
int
mov
fwait
arpl
adc
test
mov
sbb
out
inc
fnstcw
xchg
fmuls
out
fmul
sbb
cmp
jnp
xor
ja
daa
cmp
pushf
pop
sbb
rcrb
imul
adc
es
sub
and
data16
into
mov
int
scas
fstl
test
mov
leave
xor
and
setle
sbb
mov
out
jmp
xchg
fdivl
pusha
add
ljmp
xor
sub
sbb
xchg
roll
lcall
arpl
mov
pop
imul
lret
jmp
notl
push
dec
push
mov
loopne
gs
repz
or
fwait
lds
jecxz
jo
enter
cld
xorl
rcr
xchg
sub
adc
inc
aaa
xchg
sti
mov
cwtl
clc
dec
ret
cmpsl
mov
jmp
imul
mov
pop
out
aaa
sbb
mov
popa
or
faddl
sbb
cmp
daa
repnz
jae
dec
lock
push
mov
push
leave
mov
or
lahf
push
in
sti
pusha
enter
pop
jae
adc
lret
out
cmp
lcall
sbb
xor
jnp
ja
inc
pop
mov
dec
frstor
popf
enter
out
pushf
push
xchg
lods
bound
btc
and
stos
xor
int
in
outsl
pop
in
mov
sub
fcomi
sbb
sub
and
les
dec
mov
cmp
mov
sub
sub
jae
xor
cmpsl
push
xor
inc
xor
test
pop
sbb
lcall
aas
mov
xlat
call
or
add
dec
cmpsl
mov
out
movsb
dec
push
or
pop
add
push
cwtl
scas
hlt
adc
ljmp
int
pop
adc
fidivl
in
or
cmpsl
pop
lahf
inc
out
push
mov
ja
push
xchg
lods
test
cld
ja
mov
ret
inc
iret
cmpsb
cmc
std
pop
pop
jge
repz
or
in
shl
sbb
shlb
inc
or
ss
iret
xchg
scas
cmc
sahf
ror
pop
sbb
jb
notb
dec
inc
mov
and
daa
sbb
mov
divps
push
push
leave
adc
push
cmp
mov
cmp
es
sti
sti
mov
into
xchg
mov
cwtl
data16
imul
xchg
add
outsl
xlat
cltd
sub
in
mov
pop
jmp
leave
inc
jge
std
hlt
cwtl
mov
xchg
mov
enter
sub
outsl
or
push
lahf
jb
out
xchg
mov
jp
or
and
push
jmp
sti
insb
mov
add
clc
fucomi
dec
filds
imul
push
xorl
jl
mov
push
int3
cs
repnz
ds
int
fildl
hlt
cmpsb
xchg
add
xchg
push
popf
jmp
push
add
sbb
sbb
sbb
push
rcr
mov
and
or
push
dec
stos
adc
xchg
push
add
imul
std
mov
mov
test
pop
cmp
adc
dec
idivb
mov
and
mov
pop
rcl
and
aad
inc
sbb
aad
pop
pop
jg
add
push
dec
iret
dec
aad
and
push
mov
sub
adc
mov
xchg
and
push
mov
mov
aad
sahf
lods
adc
mov
addb
lea
mov
sbb
scas
mov
sub
mov
xchg
mov
leave
repnz
hlt
cltd
cmp
dec
mov
push
sahf
mov
push
popf
pop
ss
ljmp
test
leave
clc
mov
mov
test
mov
jp
hlt
jg
cmp
ds
cmc
shll
jb
int3
pop
add
outsb
std
jae
xchg
pushl
jp
sub
pop
subb
in
scas
insl
mov
sub
add
scas
lods
sbb
rclb
out
add
cld
adc
inc
lods
cs
mov
nop
and
xor
xor
push
push
cmp
pop
xor
ljmp
sbb
call
mov
gs
xor
dec
mov
add
mov
lret
adc
shll
jecxz
push
cmpl
ja
pop
clc
aas
lahf
push
fiadds
fs
rcr
in
sub
lods
xlat
mov
inc
cwtl
and
mov
mov
stos
mov
jno
xchg
sub
pop
repz
mov
inc
movsb
bsr
stos
ljmp
push
lret
rorl
repnz
mov
xlat
fldt
add
and
inc
or
ret
bound
aaa
lcall
add
shr
nop
aam
je
out
lret
push
addb
xor
or
mov
sub
sbb
in
cmp
ja
adc
cmc
pop
inc
imul
mov
sahf
adc
es
mov
outsl
push
mov
sbbl
xor
mov
add
push
lods
ret
push
mov
cmp
push
add
or
bound
mov
lods
mov
jae
test
jns
add
mov
sub
ror
es
mov
sub
cli
dec
adc
cltd
push
scas
filds
sarb
imul
addl
mov
mov
mov
jle
je
dec
pop
je
mov
inc
xor
dec
std
lcall
sahf
push
rcrl
pop
leave
pop
pop
fcomps
jp
clc
or
adc
inc
jno
enter
mov
jns
scas
enter
test
arpl
add
mov
pop
arpl
mov
je
shlb
insl
ds
adc
push
xchg
test
inc
cmp
push
sub
mov
add
dec
xor
add
pop
pop
stos
fidivrs
cmp
loop
arpl
pop
icebp
je
out
fwait
gs
hlt
dec
add
sbb
in
lods
push
ret
mov
xchg
fnstcw
nop
mov
adc
and
and
aam
bound
in
test
pop
jno
lahf
pusha
jbe
movsb
adc
repz
cmp
roll
dec
sbb
das
mov
bound
cmp
bound
adc
int
repz
shrl
test
inc
mov
jp
cltd
sbb
pop
pop
push
ret
cmp
ret
int
jno
mov
cmp
push
divb
sar
dec
lahf
ret
jmp
les
lea
scas
sbb
cmpl
mov
loopne
pushf
mov
jg
ror
ljmp
mov
cmp
add
pop
bnd
addr16
adc
jg
mov
sub
cmc
sbb
pop
shlb
add
imul
out
mov
sub
je
push
lock
add
out
aas
out
sub
mov
outsl
xor
rorl
jae
pop
cmp
xchg
add
cld
fs
add
fucomi
sbbl
std
test
adc
and
push
jo
mov
mov
rol
pop
mov
out
stos
pushw
outsl
jl
mov
inc
ret
cld
xchg
mov
fisubs
es
sahf
cmp
xchg
dec
pop
pusha
jmp
imul
daa
enter
shll
loop
sbb
push
sarl
out
fs
pushf
out
aam
shlb
mov
push
mov
call
xchg
ficoml
sbb
lods
cmpb
mov
push
add
jp
jmp
pop
fwait
mov
sahf
cs
dec
gs
cmpsb
popf
dec
rorl
push
mov
pusha
rcl
into
shlb
pop
clc
shr
add
fadds
mov
fcmovu
lret
mov
mov
or
pop
repnz
adc
dec
fdiv
insb
sbb
fs
fwait
lods
aaa
lea
jecxz
mov
in
fldl
lock
cmp
inc
mov
jb
mov
leave
xchg
in
add
xchg
sub
xchg
cli
aas
js
add
inc
daa
or
mov
add
dec
or
add
fstp
outsl
xor
out
sub
or
in
arpl
aaa
and
rcl
rcl
push
psrlq
cmpsl
jl
fsubs
mov
adc
pop
inc
shl
ret
cwtl
dec
adcb
or
mov
scas
dec
lods
insb
and
pop
lahf
movl
je
bound
ret
jne
xchg
mov
xor
test
mov
out
jmp
test
jne
mov
fiadds
sub
ds
adc
xchg
pusha
loope
test
and
sbb
mov
orb
das
mov
ret
out
loope
mov
outsb
sbb
dec
mov
jnp
jae
loopne
mov
xchg
pop
leave
add
mov
ret
in
mov
xchg
inc
push
push
sbb
decb
fsubs
loopne
lret
shlb
stos
lret
es
pop
popa
jo
sub
xorl
out
jb
add
cmp
push
mov
lret
stos
pop
in
stos
or
add
cmp
rorl
mov
mov
fdivrl
rorb
jnp
std
xchg
imul
dec
dec
jae
mov
fdivs
xor
xchg
sbb
pop
inc
sub
int3
cmp
inc
add
sbb
arpl
and
inc
inc
test
js
enter
sti
xchg
clc
sub
out
fisttps
jae
xor
adc
xor
lahf
xchg
in
loop
dec
fxch
push
out
push
rolb
mov
ss
push
xchg
outsl
andb
xchg
stos
mov
mov
clc
xchg
jl
push
mov
push
inc
mov
enter
lret
lret
stc
repz
fbstp
imull
adc
pusha
mov
mov
jl
std
out
cmp
loop
adc
mov
push
mov
push
sub
iret
ss
inc
movsb
sbb
or
ret
shrl
dec
popa
pop
jmp
out
pop
inc
pop
ss
push
decl
mov
ljmp
scas
lcall
leave
stos
lds
pop
adc
mov
cmp
dec
fwait
aam
cld
insl
ja
out
fwait
lahf
lods
inc
sbb
clc
test
xchg
aam
mov
jae
inc
pop
incl
lods
jge
cld
sbb
mov
sub
inc
test
add
adc
jp
sahf
out
fucomp
fildl
adc
lahf
mov
aaa
xor
in
mov
mov
sub
aam
mov
popa
push
imul
cmp
cmp
mov
cs
mov
mov
push
lret
adc
fdivp
les
sbb
push
ret
das
cmp
sahf
and
cli
mov
sub
or
lods
mov
mov
jne
sarb
stos
addl
sbb
repnz
mov
push
ds
rorb
popf
push
push
cmp
add
fsts
repz
ror
mov
adc
xrelease
cld
int3
fadds
pop
pop
add
loop
mov
push
lret
inc
leave
shl
into
loope
cmpb
adcb
jmp
stc
loopne
f2xm1
push
shll
jmp
subb
dec
pop
iret
xchg
mov
cmpsb
or
mov
jecxz
popl
andl
pop
mov
and
int
je
sarb
rcl
icebp
dec
or
imul
lret
inc
xlat
idivb
mov
cmp
cmp
ror
insl
push
sub
movsl
jg
xor
push
cmpsb
cltd
xorps
add
sbb
por
sbb
cmp
push
test
push
dec
push
movsl
lods
test
xchg
xchg
fcmovnu
add
mov
enter
xchg
add
push
fbld
lret
dec
push
lcall
pop
es
xchg
int
cmp
jbe
vcvtpd2psy
pop
xor
ja
enter
subb
fs
push
bnd
adc
mov
ret
cltd
or
insl
inc
jne
fs
roll
lds
lods
jno
les
pop
out
xchg
mov
test
pop
sub
int
lods
mov
addb
jo
lock
iret
lods
mov
dec
pop
arpl
push
fdivrs
pop
or
jecxz
lods
jle
mov
mov
les
scas
enter
movsl
push
jae
push
popf
out
out
or
sub
call
fbld
das
call
push
idivl
push
aam
stc
add
incb
sahf
lods
mov
cmp
sub
add
leave
dec
iret
xchg
pop
movsl
sbb
push
dec
mov
mov
in
lods
jb
imul
mov
jne
push
inc
ja
inc
sti
mov
xor
dec
pop
stos
sub
test
sbb
sbb
movsb
test
xor
jno
outsb
xlat
mov
dec
loopne
pop
wbinvd
stos
mov
orl
xchg
cmp
lock
movsb
mov
jle
add
pop
mov
and
push
test
sbb
add
add
loop
sbb
insl
lahf
ljmpw
dec
mov
or
js
ja
out
xchg
jns
add
xor
push
adc
fcmovb
jbe
sbb
ljmp
add
cmp
sbb
cltd
mov
sbb
pop
stos
testl
mov
mov
lret
jp
ja
and
jne
and
adc
pop
icebp
lods
push
jl
addr16
sub
xchg
int3
in
rcrl
insl
cld
mov
sti
or
fs
clc
into
cs
sub
popf
cmp
or
jnp
sbbb
lock
push
adc
pop
or
adc
and
scas
mov
fstpl
add
mov
mov
fimuls
outsl
push
jle
dec
adc
xor
sbb
lret
pushl
pop
xchg
adc
sahf
push
lds
mov
iret
test
subl
gs
adc
addl
lret
popf
fwait
mov
add
mov
mov
lea
mov
notl
sbb
fnstenv
clc
rolb
aad
push
out
inc
mov
ljmp
mov
into
xchg
sbb
jb
add
xor
sahf
sarb
stos
aas
fisubrl
out
fs
xor
push
scas
jnp
jmp
xchg
je
dec
pop
jecxz
dec
mov
pop
inc
dec
out
bound
je
jp
mov
dec
mov
inc
test
xlat
nop
imul
call
mov
addb
rcll
cltd
and
adc
int
leave
push
cld
lods
loopne
mov
adc
pop
xor
out
mov
cld
test
fsub
inc
lods
lods
mov
or
and
push
fsubs
dec
pop
push
lret
int3
sarb
lcall
cmpsb
test
jmp
out
push
sub
pop
and
mov
cmp
ret
ljmp
dec
cs
fs
xchg
xchg
movsb
and
std
jmp
add
loope
ss
jno
dec
mov
jae
and
out
xchg
jl
gs
call
loop
rorl
push
mov
stos
mov
stc
pushl
in
cli
adc
fisubl
subb
and
push
fisubl
std
mov
aas
das
imul
xchg
and
xor
sub
add
xor
fs
gs
inc
dec
xor
inc
mov
pop
jne
sub
adc
pop
loope
cmc
sbb
push
mov
lock
xchg
addr16
sub
repnz
mov
xor
insl
movsb
xor
mov
testb
jo
testb
jns
cs
push
push
push
fcom
push
pushf
add
pushf
jmp
aad
mov
iret
outsl
mov
pop
mov
mov
push
xchg
ja
daa
sbb
lret
fidivrs
shlb
insl
ljmp
adc
ret
xchg
or
in
jge
or
mov
fbld
push
aas
jg
pop
pop
mov
lods
in
push
cmp
push
adc
ret
ds
and
adc
jno
fisubrs
in
inc
sbb
loopne
outsl
cmpb
fwait
std
lahf
in
lods
sub
outsl
pop
popf
jns
inc
push
popf
dec
or
xchg
mov
jbe
in
xchg
test
xchg
and
mov
les
sar
insb
js
xchg
inc
pop
gs
pushf
shl
inc
fisttps
or
dec
xchg
xchg
inc
ret
popf
jbe
mov
loop
lret
cld
je
negb
push
mov
cmpsb
ss
int3
les
or
jecxz
aam
sub
push
cs
outsb
pop
ljmp
movsb
push
sbbb
rol
ret
clc
pop
pop
pop
adc
dec
test
repnz
cmp
pop
adc
cmpb
push
and
ja
int3
movsb
fcoml
cli
mov
ret
jne
sbb
push
testb
int
xor
pop
add
fs
xchg
dec
cmp
lahf
cmp
lcall
push
xchg
gs
pop
sub
xchg
add
push
scas
xor
adc
sbb
sbb
mov
jle
dec
ljmp
adc
fnstcw
mov
test
cmp
and
iret
mov
push
push
xchg
pop
shl
aad
xchg
xchg
sub
addr16
inc
ret
imull
push
ret
std
mov
pop
sub
xor
cmpsb
sarl
fdivp
and
scas
repnz
setl
mov
mov
push
fimuls
inc
push
fidivrl
mov
xchg
sbb
rcll
int3
imul
test
mov
lock
int3
jmp
into
sub
add
movsb
fstl
sbb
mov
rclb
cmc
cmpl
cmp
cmpsb
dec
pushf
and
cmpl
cmp
and
lret
inc
push
addr16
mov
cli
fwait
jle
adc
cmc
mov
push
je
sbb
jmp
lahf
push
nop
iret
je
ret
stos
jae
xor
fistl
insl
xchg
add
xchg
mov
aas
test
repnz
cmp
inc
xchg
cltd
ss
pop
sbb
jecxz
cld
add
div
and
jb
arpl
shl
push
push
jnp
adc
ret
and
cmp
in
lahf
jp
add
idivb
aam
in
cmp
rclb
xor
fildll
outsb
stos
sbb
cmp
inc
hlt
mov
mov
or
pop
mov
fstps
mov
push
sub
or
pushf
lahf
jmp
in
jbe
mov
aam
sti
push
mov
xor
in
mov
lret
stos
pop
push
cmpsl
adc
jg
movsl
dec
movsb
jge
sbb
dec
lcall
cmc
add
jmp
je
ss
dec
sub
jbe
jb
sub
call
sbb
push
push
jmp
stos
outsl
lea
mov
mov
push
loop
cld
repnz
jmp
lcall
mov
and
int3
imulb
dec
push
enter
xchg
pusha
loope
loop
mov
jmp
lea
ljmp
addr16
add
aaa
sarb
cmp
sarl
popa
pop
sahf
push
lret
ja
jl,pt
inc
ret
push
jae
dec
xor
test
int
ret
roll
push
mov
pop
push
imul
add
scas
xor
das
fstpt
dec
and
das
jmp
push
js
sarl
iret
xor
movsb
push
outsl
fbstp
into
cli
out
pop
sbb
sbb
out
dec
loop
pop
pop
frstor
and
jp
sbb
jb
sbb
sahf
fwait
mov
sub
sbb
ss
ds
scas
into
pop
lret
mov
dec
add
and
cmpsb
jne
adcb
mov
sti
insl
jbe
fdivr
outsl
fwait
cmp
cmp
sarb
pop
xor
cltd
xchg
pop
stc
roll
pop
push
sarl
jmp
in
addl
and
mov
iret
push
mov
adc
mov
jg
inc
insb
add
dec
xchg
hlt
mov
xchg
inc
cmp
add
or
mov
add
stos
add
mov
das
xor
repnz
jl
sbb
mov
add
aam
data16
cmp
mov
in
fwait
sbb
orl
std
cld
daa
aad
add
and
xor
jbe
inc
add
flds
or
subl
imul
dec
shll
inc
imul
push
sub
or
or
das
adc
outsl
or
sbb
inc
popa
int3
xchg
popf
add
imul
fwait
sar
add
inc
int3
lcall
stc
cmp
mov
loope
jp
enter
mov
inc
mov
xlat
dec
and
mov
push
mov
adc
fdivl
subb
jg
cld
sbb
out
inc
pop
shl
adc
ret
jae
in
fisttpll
sub
scas
sub
ret
mov
shlb
jmp
dec
inc
push
fsubrs
ljmp
int
movsb
aam
aas
pop
push
mov
dec
cld
jle
push
adc
ret
daa
xchg
out
mov
repnz
pushf
int3
enter
jo
or
push
xchg
inc
addr16
xchg
dec
ficoms
pop
push
cwtl
or
out
sub
lods
jns
rorb
pop
cld
pop
mov
mov
pusha
pop
fdiv
adcb
loopne
add
xchg
cwtl
cwtl
scas
repz
push
xchg
test
jecxz
inc
dec
out
mov
and
inc
push
sbb
nop
inc
push
dec
inc
sbb
iret
ja,pn
or
xchg
movsb
inc
mov
adc
xchg
mov
jnp
push
clc
pop
int
ja
sahf
js
test
cltd
add
insb
fs
repnz
mov
xor
pop
and
xor
mov
aad
scas
lods
fwait
lods
xor
and
sub
cmc
push
push
mov
shll
pushl
pusha
in
push
cmpl
std
movl
outsb
or
aad
sub
fimuls
es
push
lds
push
mov
xchg
mov
inc
cmp
mov
lods
mov
sahf
scas
mov
add
xchg
or
iret
mov
inc
or
lahf
jmp
std
push
pusha
popa
or
leave
arpl
push
aad
lea
in
or
xor
leave
lods
cmc
in
adc
push
in
mov
sarb
loopne
xor
mov
rcrl
mov
add
mov
sub
cld
cmp
lea
xchg
les
dec
mov
pusha
rclb
jb
mov
mov
cwtl
mov
loopne
cmp
jle
mov
xor
and
sbb
xchg
and
sarb
insb
jae
inc
aad
mov
mov
mov
fadds
dec
seto
jo
popf
fwait
test
hlt
mov
fs
inc
cmp
dec
pop
add
fs
push
scas
scas
jnp
adc
xchg
insb
add
push
sbb
xor
clc
clc
sub
pop
adc
mov
stos
mov
gs
fisttps
std
jb
cmp
cmp
jns
das
add
sahf
leave
push
fsubs
push
out
mov
ljmp
jg
mov
test
rcl
adc
jp
sbb
data16
mov
mov
cwtl
pop
roll
stos
xchg
xchg
mov
out
fnsave
fwait
or
cmp
orl
test
push
pop
lahf
in
std
mov
fwait
pop
je
xor
xor
mov
sbb
mulb
stc
and
sub
mov
mov
jecxz
in
aam
insl
push
pop
mov
ds
push
cs
aam
ret
push
pop
push
jmp
or
and
pusha
fnstsw
mov
xchg
sbb
and
pushf
ret
lock
andl
loop
repz
dec
fistl
pop
arpl
and
xchg
push
imul
outsl
xchg
lret
imul
in
xor
lcall
fs
jmp
inc
cmp
lods
adc
sub
pop
js
inc
lcall
jmp
inc
test
sbbl
shll
in
data16
or
stos
or
inc
popf
ficoms
xor
mov
inc
iret
fdivrs
xlat
push
sub
cmp
lds
sbb
addr16
aam
ja
jl
int
jmp
fwait
movsb
jl
fcomi
inc
out
or
push
cwtl
fisttpl
lock
vpunpckhqdq
or
push
or
mov
lret
aas
nop
jns
and
into
lea
cmp
mov
mov
jl
mov
mov
hlt
rcrl
icebp
jbe
xchg
fs
and
jbe
cmp
sti
xchg
jne
adc
lret
insl
mov
inc
mov
jae
mov
in
popf
add
jl
icebp
ljmp
imul
or
adc
hlt
cld
push
or
sub
aaa
jl
inc
idiv
mov
lahf
stos
push
mov
iret
push
jo
xchg
mov
daa
jl
and
clc
sbbb
jge
lcall
or
in
out
mov
cmp
imul
xchg
xor
add
int
mov
rcrl
cmc
inc
in
ret
clc
sub
jbe
add
push
jle
cmp
test
push
movsl
pop
jb
or
push
ljmp
dec
hlt
mov
leave
lret
push
nop
fidivrs
cmp
xor
mov
sbb
fistpll
xorl
sub
pop
in
mov
sbb
inc
push
mov
sbb
or
add
test
push
jae
push
in
imul
ret
mov
add
aam
pop
data16
add
shll
loopne
and
push
lret
pop
push
pop
mov
ret
mov
in
jg
scas
sub
push
ds
subps
mov
outsl
and
sbb
shl
sbb
cld
ja
jns
pop
lods
inc
pop
pop
xor
fsubr
push
popa
cmc
xor
adc
out
cmp
and
sbb
xor
jae
test
sti
or
jo
adc
fadd
and
scas
leave
loope
add
aaa
ficompl
push
xor
jg
xor
adc
jno
mov
cltd
movl
or
fdivr
popa
xor
pop
push
movsl
push
cwtl
pop
ret
in
mov
ja
mov
add
mov
jp
sub
pop
sbb
sub
mov
lds
cmp
and
bound
xchg
mov
jg
std
bound
xor
push
aad
scas
sbbb
ss
scas
test
adc
test
ret
xchg
cmp
mov
mov
scas
fst
lds
jnp
ficomps
hlt
rclb
adc
push
fimull
and
dec
in
outsl
jae
xor
clc
xor
dec
xchg
in
cwtl
push
ficoml
pusha
or
lods
sub
jns
lret
roll
in
ret
add
das
cwtl
jns
push
push
pop
mov
mov
xlat
lods
jae
lock
cltd
mov
adc
sahf
push
outsl
add
rclb
add
repnz
xor
sbb
mov
push
lret
mov
pusha
in
lret
cmpsl
xor
hlt
push
daa
addb
push
mov
sub
jo
call
ja
jo,pn
arpl
aam
iret
push
adc
repz
xor
fisubl
sub
push
xor
sub
mov
bound
and
enter
push
nop
dec
mov
fistl
sbb
movsb
xchg
mov
lea
and
ret
and
xchg
push
mov
add
popf
inc
sahf
imul
mov
xchg
dec
scas
in
imul
xor
filds
inc
adc
fsubrs
stc
inc
test
mov
std
aad
and
cltd
xchg
pop
jbe
sbb
adc
in
int3
mov
or
sahf
fiaddl
enter
xchg
lock
popl
or
sbb
push
dec
dec
movsb
test
push
add
int
cmpl
push
insb
jo
je
push
insb
mov
gs
sbb
pop
or
fdivrs
into
xor
into
sub
mov
xchg
sub
pushf
pop
out
aad
mov
stos
mov
push
fisubl
sbb
lock
sub
inc
iret
ss
xor
shlb
cmp
outsb
sub
and
out
or
rorl
les
pop
in
fbld
fstps
sub
outsl
sahf
xor
roll
insl
scas
outsb
mov
dec
jl
lods
or
je
cmp
adc
nop
mov
mov
mov
clc
xchg
and
rcrl
shlb
push
arpl
scas
pop
pushf
or
aad
fmull
cmp
adc
jne
pop
js
gs
push
dec
push
scas
adc
fmuls
outsl
dec
int
out
cltd
add
xchg
add
sti
adc
push
test
mov
and
adc
in
add
add
adcb
sbb
popf
mov
repz
ss
push
and
lea
fs
push
and
lock
sbb
in
inc
xchg
sub
fucomip
or
and
and
push
outsl
xchg
mov
or
pusha
into
es
out
adc
cmp
dec
repz
call
pop
fidivrs
pop
adc
sbb
mov
je
xchg
sahf
push
movsl
inc
dec
pop
xchg
fildll
mov
mov
push
stos
pop
mov
adc
jg
jnp
pop
sbb
rcrl
imul
leave
xor
sbb
inc
pop
sub
ja
fnsave
adc
or
popf
subb
pop
adc
icebp
push
cmp
ret
outsb
mov
jmp
mov
fistpl
cmp
cmp
cmp
cmp
stc
ds
sbb
jmp
fwait
addr16
scas
push
in
pop
dec
ror
aas
cmp
gs
mov
dec
xchg
test
sti
sbb
fisttpl
dec
fnstsw
sti
sar
dec
inc
test
jnp
jl
add
push
andb
xor
roll
adc
les
das
mov
sbb
into
mov
jbe
and
mov
pop
push
aaa
cli
push
fisttps
add
sahf
sahf
cmpsb
and
xchg
aaa
fucomp
and
xchg
jg
inc
pop
nop
xchg
dec
icebp
mov
sub
xchg
sbbl
and
sbb
sbb
sbb
mov
insl
test
or
loop
cmp
mov
pusha
sub
push
daa
sar
cli
inc
arpl
movsl
enter
dec
mov
es
mov
cmp
xor
outsl
mov
shl
pop
ret
xchg
aas
cmp
mov
and
mov
dec
mov
jp
repz
and
ljmp
test
lcall
jbe
or
sub
shll
sub
inc
popl
shlb
push
fmull
bound
and
inc
les
jg
lock
dec
xor
int3
popf
mov
insl
mov
inc
cmpsl
call
sbb
push
jecxz
or
push
aam
pop
imul
cld
pop
xor
sub
push
push
sbbb
out
ja
inc
jmp
xchg
xor
imul
push
jle
mov
scas
lahf
cwtl
loopne
ss
lret
push
mov
xor
imul
cmpsl
stos
shll
mov
fwait
xchg
sub
test
push
dec
push
iret
outsb
pop
jbe
pop
dec
xor
and
mov
sbb
hlt
dec
int
sub
lock
dec
jg
cld
icebp
sub
movb
incl
sub
nop
mov
push
sbb
stos
es
dec
jle
or
push
int
push
fwait
pop
jmp
test
xchg
hlt
ljmp
rorl
add
or
sbb
repz
test
mov
mov
push
sub
xlat
push
fidivrs
or
cmp
mov
cmp
xchg
lds
push
int
out
aaa
mov
or
popf
arpl
and
push
push
std
mov
scas
jle
stos
cmc
pusha
mov
push
push
loope
xchg
jns
mov
sahf
jl
sbb
fistpll
mov
mov
movsb
rcl
xchg
testl
test
push
sbb
sbb
adc
push
jg
push
and
int
out
popa
sbb
cmp
sbb
cwtl
imul
in
mov
pop
bnd
xchg
dec
mov
std
movsb
insb
jne
lret
sub
push
cmpsl
aad
aas
sbb
xchg
es
mov
sbb
lea
lods
mov
push
add
jns
clc
roll
bound
ficomps
cmp
lock
jmp
xor
ret
and
addr16
test
inc
jnp
scas
jo
mov
fcmovb
and
or
iret
mov
jmp
pop
loopne
mov
je
loopne
fwait
mov
hlt
insl
insl
loop
jmp
fnstcw
loopne
mov
mov
mov
scas
cmp
in
or
aaa
xchg
or
lcall
sbb
repnz
mov
repz
fsubs
shrl
mov
adc
and
cmp
xor
xchg
int3
mov
mov
cwtl
add
sub
lret
into
xor
xchg
sub
mov
repnz
aad
mov
mov
and
pop
cmp
push
or
or
lea
enter
push
popa
clc
pusha
xor
in
dec
jmp
cmp
daa
xor
push
in
ss
sub
push
add
fld
adc
sti
cmp
push
negl
adc
fndisi(8087
add
mov
cmp
andnps
out
jae
int3
ss
fadd
sub
inc
and
stc
and
loop,pn
clc
adc
xchg
push
ljmp
push
push
push
adc
inc
jbe
mov
sbb
xlat
repz
mov
mov
mov
insb
jne
and
jmp
cmp
call
push
movsb
enter
cld
pushf
ja
das
mov
cmp
pop
hlt
in
jnp
sahf
mov
in
sar
xor
cmp
mov
mov
fsub
pop
xor
lock
pop
sarl
movl
or
test
sbb
pop
xchg
lock
pop
testb
jns
jl
cltd
xor
sbb
mov
mov
cli
adc
add
and
inc
inc
mov
adc
lods
sbb
jle
aaa
sub
in
add
pop
fimull
cltd
in
mov
test
aam
es
xchg
out
shlb
push
fldenv
hlt
lcall
sbbb
inc
inc
js
into
ja
mov
add
jns
or
xor
cmpsl
sbb
or
push
adc
pop
mov
and
ret
out
push
mov
pop
add
popf
or
mov
sub
sub
xsha256
cmpsb
adc
dec
xchg
sti
fistpll
andb
ljmp
mov
mov
js
jae
push
sbb
pop
inc
push
mov
mov
je
stos
imul
into
pop
jle
movsl
mov
addl
jae
test
inc
lods
sub
stos
jae
movsb
aad
fidivl
dec
popf
sub
sub
cmc
imul
fmuls
push
push
mov
or
cltd
cs
adcb
dec
sbb
sub
dec
cmc
mov
or
movsb
jmp
test
sahf
inc
mov
xchg
xor
and
jo
shrb
cmp
pop
push
dec
mov
push
push
inc
sbb
pop
cmp
rorl
sbb
lahf
mov
je
and
or
push
jmp
mov
in
ret
out
dec
ret
sbb
insl
jl
inc
pop
push
xchg
cs
and
pop
fildll
push
add
imul
cmp
cld
push
jno
add
sub
movsb
fucom
jp
jg
inc
popa
not
sub
lcall
lret
pop
je
sbb
add
dec
rcl
les
lret
fdivrs
popf
add
jbe
add
add
ficomps
int
mov
xchg
insl
mov
aam
sub
mov
pop
in
add
xchg
mov
imul
outsb
insb
push
sub
mov
nop
cmp
inc
lods
imul
inc
xchg
ret
movsb
ret
and
dec
cmpsl
xchg
pop
iret
std
xor
frstpm(287
mov
out
mov
push
mov
test
sub
ret
in
jl
gs
adcb
aad
stos
enter
jl
imulb
xchg
lret
adc
mov
mov
sub
test
adc
mov
scas
cmc
dec
jl
out
fistps
pusha
pop
dec
popa
or
push
aad
lahf
sub
popa
in
xor
push
add
adc
adc
ss
inc
mov
js
pushf
adc
into
inc
dec
adcl
jmp
xchg
sbb
xor
pop
add
insl
mov
cmp
scas
scas
dec
jno
out
jmp
push
xor
lds
fbld
int
test
movsl
fldcw
pop
adc
mov
inc
adc
stc
sub
das
movsl
notl
jmp
push
shll
inc
dec
push
clc
inc
xchg
cmp
data16
push
or
jge
cs
inc
ljmp
int
dec
and
inc
push
push
rolb
mov
cmpsb
push
xor
push
jnp
daa
decb
nop
rcll
mov
cmc
mov
xchg
sbb
stos
push
popa
dec
jbe
add
test
mov
test
sbb
mov
cmpsb
add
xor
xor
ficomps
cmp
mov
roll
mov
jnp
scas
sub
xor
les
add
add
out
fmulp
shll
dec
mov
gs
jge
xor
ljmp
sub
adc
xorb
sbb
cld
and
mov
cmp
ljmp
jge
or
loopne
add
arpl
roll
xorl
repz
add
inc
out
in
fldcw
push
or
cltd
int
in
add
mov
pop
mov
fcompl
or
test
cmc
xchg
int
push
scas
enter
cmp
addb
fadd
imul
pushf
or
or
out
mov
insl
call
inc
fwait
mov
inc
pop
mov
mov
xchg
mov
out
xor
push
dec
shrl
push
xor
ja
push
mov
sarl
mov
adc
cmp
je
dec
push
sti
jae
and
push
leave
jecxz
mov
in
dec
and
pop
aad
lock
cld
and
dec
pop
inc
cmp
incb
loopnew
lods
ss
sti
push
loopne
xchg
and
dec
unpckhps
test
cmp
xor
push
jo
cwtl
stc
adc
ss
xchg
pop
jecxz
and
fldt
sti
jns
lds
sub
out
pop
cmp
repnz
jge
adc
jnp
popf
adc
add
cmpsb
rcll
subl
mov
mov
cmp
fcmovnu
jle
enter
leave
xchg
test
dec
pop
or
push
mov
in
xlat
cmpsl
jge
cmpsb
scas
inc
xchg
and
in
iret
pop
icebp
testb
pop
fcom
loopne
dec
loop
dec
daa
fs
nop
xchg
xor
fistps
or
push
insb
sub
jnp
icebp
pop
icebp
inc
jge
hlt
xor
jecxz
fadds
pusha
mov
aaa
fildll
sub
add
sti
mov
repz
lds
repz
cmp
pop
loope
adc
xor
dec
jnp
imul
call
rol
xor
fisubrs
mov
imul
mov
xchg
into
jmp
lock
inc
testl
push
mov
push
pop
mov
stc
sarl
pop
lods
sub
mov
and
movsb
xchg
adc
and
js
stos
flds
lret
test
dec
movsl
sub
mov
mov
fiaddl
sahf
lret
adc
iret
and
push
mov
dec
dec
xorb
je
pop
mov
shrl
pusha
outsb
push
and
mov
scas
jo
out
inc
jge
insb
test
push
or
inc
stos
mov
jg
cli
mov
pop
xchg
or
cmpsb
xchg
adc
stc
adc
push
inc
sbbl
in
movsb
jbe
jecxz
add
sbb
inc
push
cmc
gs
je
mov
mov
fmull
fsubr
add
cmp
aam
in
sahf
lret
shr
icebp
xchg
pop
pop
popf
adc
inc
repz
sarl
sbb
mov
into
es
test
imul
movhps
shlb
mov
dec
incl
adc
mov
sub
mov
das
xchg
cmpsb
pop
cmpsb
ss
xorl
mov
mov
sub
mov
repnz
bound
mov
loop
insl
xchg
inc
out
pusha
out
gs
int3
push
icebp
imul
pop
adc
pusha
orb
rcrl
jnp
imul
add
pop
out
sbb
adc
fstl
xor
imul
mov
movsb
mov
mov
mov
lahf
call
mov
adc
pop
inc
outsl
and
icebp
adc
rorb
insb
mov
je
std
cld
lods
sbb
popf
push
jne
mov
jmp
sub
jmp
mov
int3
fidivl
cmp
adcl
pushf
ja
hlt
ds
ret
cmp
ror
or
mov
mov
or
es
rcrl
mulb
jp
int3
mov
les
rorb
lea
inc
mov
scas
in
orb
inc
jns
decl
jecxz
int
pop
jo
pusha
mov
lret
out
and
inc
jns,pn
pop
faddl
addr16
inc
loopne
and
inc
xchg
js
dec
jb
movsb
push
pop
mov
pop
cmp
xor
decb
push
jp
stc
inc
cmp
repz
sahf
stos
in
je
aam
xor
xor
js,pn
push
xor
leave
mov
inc
xor
lret
sub
xor
daa
push
push
or
push
add
pop
mov
and
and
pop
stos
daa
mov
sbb
ss
out
xchg
cmp
jecxz
cs
jmp
loopne
or
jle
inc
xchg
insb
dec
in
push
rorl
mov
dec
enter
push
or
int
imul
jl
sub
imul
aam
xlat
shlb
shlb
bswap
ror
test
ja
out
outsb
mov
fwait
movsl
sub
push
xchg
jo
and
shlb
push
push
mov
xchg
mov
imul
inc
pop
cli
pop
outsb
repz
das
popa
test
mov
mov
pop
repnz
lahf
sti
fstl
pop
add
mov
stos
rcrb
cmp
push
and
dec
call
inc
push
sub
and
lahf
out
push
inc
push
lods
int
pop
std
fsubrl
mov
xor
pop
adc
jecxz
fidivs
pop
leave
dec
icebp
dec
ffree
loopne
push
into
or
cltd
test
jmp
rcl
test
adc
in
addr16
out
push
adc
pusha
out
ret
pop
mov
lods
and
pop
adc
sub
or
pop
mov
inc
lahf
sub
mov
outsl
sbb
sbb
jb
sbb
or
add
and
sub
mov
pop
into
mov
push
and
mov
mov
ja
cmp
insb
outsb
jno
jne
sub
icebp
mov
scas
adc
jnp
aas
and
pop
stc
jnp
or
js
jmp
push
pop
lcall
rcrb
gs
push
or
sub
sub
jno
inc
cli
sub
ss
sahf
push
add
mov
xchg
shrb
ljmp
pop
pusha
test
jns
syscall
sub
xor
fsts
in
adcb
pop
and
scas
dec
imul
push
sahf
addr16
jmp
int3
inc
xor
insb
lahf
mov
sbbb
push
and
mov
pop
mov
jnp
xor
pushf
loop
loopne
dec
jno
enter
mov
out
or
or
out
iret
rclb
pop
nop
jbe
ret
sti
enter
addl
stos
sbb
sub
lds
cltd
mov
nop
nop
repz
adc
dec
ss
add
loop
and
mov
mov
cmc
add
and
xlat
into
fwait
sub
inc
stc
bnd
fidivl
inc
lds
push
dec
hlt
scas
icebp
out
add
ret
int3
data16
inc
or
icebp
jle
push
mov
xor
sub
in
and
xor
jl
stos
insb
sbb
cmp
pop
dec
cmpsl
xor
jne
scas
lods
xor
adc
and
or
popa
popf
adc
int3
ljmp
aam
adc
data16
loope
xchg
cmc
lock
rolb
xchg
arpl
dec
js
lea
mov
imull
test
aaa
cmpl
mov
iret
adc
in
sbb
test
sub
or
pop
jnp
dec
stos
fdivrl
sub
xor
sbb
sub
lcall
adc
sbbb
test
mov
inc
fsts
xchg
sbbb
cli
dec
mov
cmpsl
mov
and
or
xchg
push
push
leave
data16
idivl
cmp
xlat
pop
inc
mov
or
xchg
ljmp
adc
aas
enter
js
sbb
repnz
loop
push
sub
shr
in
mov
pop
pop
prefetch
push
cli
mov
aad
xlat
in
jle
fwait
pop
aad
into
std
ficomps
and
push
loop
mov
dec
or
xchg
jo
jno
and
dec
mov
cmc
in
sbb
fadd
sbb
adc
dec
or
mov
dec
bound
push
stos
js
jnp
push
loop
aas
int3
shlb
jo
push
fwait
pop
push
sbb
sub
add
sub
push
hlt
dec
roll
dec
pusha
sub
sahf
popa
mov
daa
addr16
cmp
mov
je
fildll
mov
or
ss
mov
dec
ficoms
dec
sti
sbb
cmp
jmp
adc
pop
repz
lret
cld
inc
cli
mov
in
in
pop
pushl
sbb
push
pop
roll
scas
cltd
mov
ficoml
insb
insl
clc
dec
out
pusha
mov
daa
mov
mov
mov
jmp
mov
clc
fwait
mov
inc
xchg
outsl
loope
cmp
xchg
lods
jae
inc
cmpsb
jb
in
and
adcb
rep
adc
scas
xchg
arpl
sub
arpl
call
dec
sub
sub
pop
lds
rorl
inc
loop
jge
ss
arpl
xor
mov
sbb
pop
call
jno
xlat
sub
negl
xchg
mov
sub
sub
xchg
cmp
out
and
sub
jmp
push
xor
out
inc
jmp
xor
inc
repnz
and
pop
inc
stos
in
and
das
jecxz
sti
or
cmp
sub
jl
std
ret
stc
adc
jl
cwtl
push
push
and
stc
imul
and
outsl
jne
aad
adc
ja
ss
adc
cwtl
sbb
ficompl
repnz
jmp
fisubrs
arpl
bound
xchg
sahf
inc
and
inc
inc
sub
mov
xchg
inc
inc
cmc
addr16
mov
push
dec
fistpl
std
xchg
mov
in
lea
xor
cmp
sub
adc
push
lds
add
aam
jecxz
js
fcomi
push
pop
out
mov
inc
imull
push
jmp
iret
push
outsb
stos
xor
jbe
pusha
outsl
ds
test
xor
rorb
mov
and
inc
sbb
rcr
mov
dec
jecxz
add
push
jno
sbb
outsb
shr
mov
js
in
stos
je
add
mov
aas
ja
cld
mov
jb
in
jmp
xchg
sub
inc
mov
movl
sub
andb
mov
ljmp
loope
sub
mov
dec
pop
outsl
sbb
push
jb
jb
cmp
mov
arpl
dec
adc
add
call
outsb
mov
mov
sbb
leave
add
jle
sti
jae
add
pop
sub
std
push
mull
add
outsb
mov
cmp
mov
and
dec
pop
mov
cli
sub
scas
sbb
sbb
shll
jo
aad
iret
push
xchg
adc
outsb
call
subl
fs
out
xlat
sbbb
test
push
mov
addb
cmp
dec
jmp
sub
xchg
xor
outsl
mov
xchg
hlt
cmc
push
xchg
sbb
test
push
sbb
sub
call
andl
pop
test
pop
iret
or
xor
xchg
dec
in
ljmp
inc
outsb
adc
inc
push
test
mov
movsb
lock
aad
mov
mov
add
out
cli
out
xchg
xchg
daa
mov
dec
sub
cmc
cwtl
add
or
mov
mov
cmp
jns
dec
popf
je
add
out
sub
out
popa
cmp
mov
std
push
push
cmp
fadds
pop
negb
cltd
repz
mov
dec
pop
lea
lahf
inc
and
das
dec
xchg
aas
xchg
cmp
imul
into
push
jecxz
ljmp
push
js
push
add
and
lret
xor
dec
loope
jo
loop
pop
decl
mov
sub
adc
imul
jo
sbb
scas
mov
data16
je
lahf
mov
dec
mov
mov
into
cmp
or
add
adc
dec
mov
jecxz
sbbb
imul
in
mov
inc
aad
test
pop
adc
or
pop
scas
aas
mov
cmp
pop
jge
push
lcall
jb
iret
or
cmpsl
pop
test
ja
mov
data16
imul
lods
insl
loopne
mov
nop
nop
fcmovnu
enter
adc
js
xchg
or
push
inc
xor
push
mov
les
inc
out
inc
lcall
or
mov
sbbl
das
xchg
imul
mov
mov
mov
test
addb
stos
cwtl
testb
sub
or
fnsave
pop
imul
mov
addr16
and
loop
mov
mov
scas
leave
mov
mov
ucomiss
xchg
les
dec
sub
jae
hlt
xor
sbb
mov
mov
sub
add
aaa
test
cmpsl
pop
mov
cmc
ret
fwait
sbb
adcb
aam
sub
add
ss
sub
push
mov
loope
rclb
icebp
xor
cmp
sbb
fadds
push
add
mov
ds
sub
pop
inc
repz
sbb
mov
cmp
roll
into
and
cmovae
cs
int
inc
cmp
mov
cmp
mov
test
je
aad
clc
dec
mov
fdivl
cmpsb
lret
xchg
xchg
cs
mov
testb
sti
lcall
loope
pusha
into
xor
push
cld
xchg
push
dec
dec
jle
mov
xchg
and
xor
mov
pop
xchg
pop
fiaddl
in
mov
mov
cmpsb
cmp
test
in
xchg
mov
push
inc
or
jnp
mov
aaa
repnz
add
aam
arpl
mov
out
outsl
push
and
ffree
mov
lahf
mov
cld
xchg
or
repz
xchg
pop
jecxz
gs
or
aam
loop
xor
mov
adcl
jo
sub
call
sub
js
adc
lret
arpl
mov
int
pop
xchg
rcrl
dec
adc
ret
outsl
adc
jg
out
cmp
dec
fldenv
pop
aad
fisttpll
push
and
mov
push
cwtl
test
lods
test
aam
xor
lods
ljmp
fwait
scas
pop
jmp
loope
xchg
mov
and
insb
sbb
into
cmp
xlat
mov
add
pushl
test
test
xchg
mov
aam
es
or
push
pop
inc
out
jb
cmp
dec
mov
add
push
mov
fs
xchg
repz
mov
adc
adc
cmpsb
inc
pop
pop
xchg
xchg
mov
insl
rorl
pop
push
xor
repz
mov
mov
cli
test
filds
packuswb
jnp
or
lds
stos
outsb
mov
mov
adc
xor
or
cld
lods
outsb
mov
jl
das
pop
cmp
lods
push
mov
fsubrs
fmull
push
jp
test
add
cmp
cmp
jmp
shrb
push
push
scas
push
and
cmp
jo
jbe
div
fcoml
push
inc
sub
pusha
add
std
nop
mov
lods
xor
cmp
adc
and
rorb
aaa
xchg
cmp
or
leave
or
xor
cmp
insl
mov
out
mov
xchg
jb
jle
xor
push
movsl
sub
lea
add
dec
cmp
stos
push
xor
sub
pop
or
inc
jmp
ljmp
inc
dec
push
mov
cmc
push
mov
popa
jns
adc
cmpsl
enter
adc
stos
adc
cmp
cmc
push
xor
int3
lahf
pop
mov
xchg
jo
fmuls
pop
movsb
fstpl
and
xlat
in
fucomip
mov
push
int
ja
jg
movsb
cwtl
sbb
mov
or
mov
adc
mov
xor
xor
cmp
mov
icebp
repz
xor
aas
xorb
dec
dec
sub
xchg
or
out
mov
dec
enter
cmp
shl
addl
mov
push
arpl
clc
xlat
adc
ljmp
sub
shl
pop
mov
sbb
mov
repnz
dec
ffreep
push
lock
mov
push
xor
lret
inc
mov
inc
pop
cmp
int3
inc
add
cmp
das
pop
in
jl
mov
fisttpll
icebp
aad
dec
popf
rcll
or
imul
test
cmp
dec
adcl
ret
insb
dec
lods
push
mov
add
inc
mov
mov
mov
pusha
or
repz
jo
mov
push
xchg
jo
movsb
inc
arpl
in
dec
mov
add
inc
pop
aas
lods
aam
mov
sub
xchg
or
adc
sahf
and
in
lea
sub
cli
cmpsb
daa
jnp
stc
movsb
adc
in
xchg
clc
fsts
inc
loop
subb
or
add
leave
or
gs
mov
ss
mov
aad
push
cmp
adc
push
int
icebp
lock
negb
sbb
cmp
jp
test
inc
ds
inc
rclb
add
xchg
ja
ja
sahf
sbb
lds
jae
xlat
and
jge
add
loopne
dec
je
xchg
pop
stos
sbbl
shlb
jp
jnp
xchg
adc
subl
int3
jns
negl
paddb
add
inc
adc
pop
adc
mov
inc
clc
sbb
push
jmp
lret
cmpsl
fmul
rcl
and
notb
dec
popf
push
in
xchg
cli
jl
cld
add
add
xchg
ljmp
cmc
rorb
push
movsb
jbe
push
mov
negb
ficompl
stc
fs
lea
mov
lods
popa
inc
push
shrb
dec
pop
mov
xor
xchg
mov
mov
or
lock
fs
std
adc
adc
adc
push
add
dec
xchg
pushf
mov
jmp
push
ljmp
subl
add
ffreep
cld
push
daa
fcmovnbe
gs
in
into
xchg
xlat
push
test
pusha
xchg
cmpsl
mov
cmpsb
pop
cmp
jp
sub
sub
xchg
cmp
ja
xor
rcrl
loopne
sub
imul
mov
inc
aam
xor
cmpsl
in
cmp
adc
add
xchg
cs
adc
hlt
adc
mov
les
stos
sbb
imul
jmp
pop
inc
xchg
fisttps
jae
loopne
psubsw
cmp
fstl
sub
mov
inc
xchg
lock
fndisi(8087
fisubl
dec
xchg
cmpsl
dec
pushl
ljmp
enter
inc
ficomps
dec
int
aas
loope
jmp
cmp
in
push
insb
jl
mov
mov
popf
in
loope
mov
lret
sub
lret
test
sbb
roll
outsl
mov
xchg
or
fildl
out
xchg
test
scas
xchg
outsl
outsb
pop
rorb
xor
pusha
out
loopne
scas
into
xor
xchg
pop
orb
xchg
jmp
repnz
mov
push
pop
and
mov
ds
pop
ret
inc
in
mov
notb
sub
sbb
cli
xor
mov
repnz
mov
mov
pop
push
hlt
or
imul
add
push
pop
data16
push
bound
cmp
shlb
out
xor
out
push
shlb
xlat
xlat
loop
mov
sub
push
xchg
fdivr
imul
test
mov
jmp
icebp
dec
dec
movsb
sbb
shrb
mov
adc
cmc
push
and
pop
je
inc
xchg
ljmp
je
in
cld
subl
xor
jl
mov
bound
pop
or
adc
and
xor
das
rcll
aaa
scas
push
xchg
clc
mov
sbb
and
cwtl
rorb
mov
mov
inc
movsb
idivb
xchg
sarb
stc
dec
mov
gs
and
outsb
pusha
roll
movsl
pop
and
push
cmp
push
adc
xor
outsl
inc
push
pop
cmpsb
push
sbb
adc
inc
pop
adc
jbe
fbstp
ret
or
or
lods
xchg
sub
and
outsb
stos
ficompl
ret
pushf
ret
loop
xor
sub
fiaddl
inc
xor
jbe
mov
fsubl
mov
lret
ficoml
lods
cmpsl
outsl
es
rorb
es
test
mov
mov
insl
mov
or
mov
sbb
dec
or
fsubs
int
addl
mov
mov
pop
scas
pop
sub
rclb
jns
or
cmpsb
inc
add
mov
sub
mov
lods
add
imul
pop
add
mov
xchg
cld
and
rcr
jbe
sub
lret
ljmp
ds
aad
das
push
outsb
push
outsl
movsl
mov
sbb
mov
dec
leave
stc
lahf
sub
adc
movups
stc
fdivl
test
movsb
adc
jbe
mov
sub
bound
ds
adcb
fildl
popf
sub
jo
ljmp
push
stos
xor
sbb
jg
cmp
mov
dec
xchg
jb
repz
insl
and
pop
mov
mov
push
cs
fdivl
jb
in
das
xor
es
xchg
push
xor
pop
fdiv
out
mov
xor
jbe
pop
popa
fiadds
fucomi
push
dec
insb
jns
sbb
rol
rcll
out
imul
sub
cmpsb
aaa
adc
insb
and
push
enter
push
daa
xchg
ljmp
divl
push
push
out
int
fnsave
push
mov
jecxz
and
cmp
test
daa
scas
sub
mov
xor
or
outsb
mov
out
fnsave
pop
dec
mov
jg
push
push
test
lahf
cmp
hlt
jb
mov
popf
push
fdivrs
jb
fcoml
add
xchg
inc
pop
js
mov
or
imul
insl
arpl
mov
push
dec
jecxz
xchg
pop
movsb
jl
sbb
adc
xchg
pop
fildll
fmull
lods
arpl
ja
cmp
shr
jg
fisttps
cmp
imul
pop
rolb
mov
dec
fwait
pop
int
push
mov
shll
mov
add
lea
cwtl
or
out
cli
push
cmpsb
xor
or
sbb
sti
push
push
repz
scas
subl
mov
je
repz
add
vmovss
xchg
mov
and
push
ss
cmp
and
in
mov
jge
stc
outsl
mov
iret
js
cmpl
repnz
loope
xorl
test
mov
jmp
mov
push
xchg
imul
ljmp
cltd
jne
sarl
cmp
je
push
inc
xchg
adc
mov
fwait
das
fnsave
add
push
and
cmpsb
loopne
or
and
add
jge
add
mov
mov
leave
aam
stc
ja
cwtl
stos
imul
sub
popf
aaa
lea
pop
pop
pop
aas
sbb
push
sub
scas
ret
enter
lods
inc
jno
out
adc
ljmp
nop
sbb
cmp
aaa
sub
xchg
fwait
mov
orb
inc
pop
insb
jno
xlat
scas
cmp
push
and
das
or
pop
stc
ret
imul
mov
sub
scas
sahf
cmp
out
loop
mov
push
cmpsw
cmp
scas
out
imul
push
fadd
fs
jae
mov
js
xlat
lcall
fiaddl
adc
mov
jae
mov
data16
push
jg
jae
fidivl
cmp
mov
mov
fwait
icebp
add
std
pop
mov
insl
push
mov
pop
adc
and
or
call
fildl
mov
and
xor
xlat
push
push
mov
xchg
sbb
mov
pop
push
das
xor
ds
xor
inc
xor
stc
cmp
push
in
pop
movsb
mov
cwtl
push
aas
cmp
and
pop
push
outsl
fsts
aad
dec
jge
add
scas
testb
jnp
js
loopne
insb
enter
das
imul
std
jle
dec
mov
pop
cs
shll
sub
lahf
xchg
lahf
lahf
pop
cmpsb
test
or
xchg
jge
and
fadds
push
stc
inc
mov
movsl
adc
xor
mov
jmp
sbb
ljmp
dec
xor
sahf
aad
insl
loop
mov
scas
fiaddl
popa
js
jmp
test
cmp
sub
mov
movsl
stos
cs
mov
out
ret
mov
out
loopne
mov
movsl
add
lods
inc
sarl
or
enter
test
shl
aaa
dec
cmpsb
jne
sbbl
add
dec
push
call
mov
push
sbb
xchg
sarl
nop
fwait
add
sbb
outsb
addl
in
push
xor
sub
pop
xor
insb
mov
sbb
and
les
loop
mov
push
lcall
dec
xchg
ja
nop
add
jo
cmc
xor
xchg
sub
pop
test
aad
jbe
pop
push
mov
lds
es
mov
jbe
push
inc
fsubs
fs
mov
pop
xor
cmp
in
mov
mull
popf
or
adc
addr16
mov
adc
jecxz
orb
sbbb
adc
enter
pop
jns
in
lahf
push
jle
cmp
sahf
inc
push
ret
pushf
mov
jae
sbb
arpl
mov
insl
or
imul
inc
pushf
rolb
sub
mov
xchg
cld
negb
enter
push
or
push
dec
fs
int
push
push
push
daa
lret
sbb
and
insl
sbb
sbb
cli
mov
mov
jo
ss
les
inc
xchg
pop
mov
cmp
mov
cmpsb
mov
orb
std
frndint
pop
das
loopne
inc
mov
negl
or
movsb
sti
enter
push
lock
pop
inc
stos
push
inc
cltd
xor
push
cld
mov
or
aaa
cmpsl
and
xlat
lahf
les
inc
xorb
mov
cmp
sub
adc
dec
aaa
push
hlt
or
xor
sbb
push
cwtl
invlpg
jge
repnz
or
mov
and
xlat
dec
addl
fimull
aad
adc
pusha
push
icebp
inc
rcr
sub
loopne
jbe
movsb
push
mov
adc
mov
jg,pt
mov
push
nop
shr
pop
add
pop
mov
or
loopne
sbb
adc
in
xchg
subl
lcall
xor
imul
out
hlt
insb
test
mov
push
cwtl
insl
sub
pop
jmp
pop
jb
loop
lret
sub
lret
cmp
add
sbb
scas
sbb
mov
or
clc
test
mov
push
xchg
cli
mov
pop
movsb
mov
mov
cli
xchg
sbb
push
or
xchg
aas
shl
mov
jne
into
xchg
sbb
push
jmp
lea
dec
call
jnp
mov
push
jns
inc
gs
mov
or
sub
ja
stos
jno
add
mov
out
add
xchg
mov
addr16
mov
sbb
xchg
lods
loope
cmp
lcall
imul
sahf
mov
sub
scas
cmp
mov
mov
mov
mov
cld
mov
cmpsl
jae
js
mov
add
loopne
xchg
cmp
in
ljmp
and
sub
gs
push
pushf
dec
mov
ret
and
leave
xchg
mov
add
pop
and
mov
sbb
mov
fdivrs
mov
test
call
add
xchg
mov
cmp
cmp
inc
cmpsl
mov
dec
adc
mov
in
dec
add
loop
int
mov
popa
insl
fxch
and
leave
mov
xchg
fisttpll
fwait
addb
ror
jmp
pop
add
sbb
and
and
out
push
fnstenv
dec
adc
lcall
fs
add
xor
loop
cmc
shr
cmp
mov
loope
push
xchg
add
xor
xchg
out
stos
icebp
cld
mov
inc
sbb
mov
cwtl
in
repnz
cltd
dec
das
lods
mov
push
scas
fisttps
sbb
add
scas
mov
sti
mov
push
lods
stos
or
cltd
cltd
sbb
lods
sahf
out
test
cmp
adc
out
es
jae
ror
rcrb
fsubs
mov
adc
add
fwait
clc
notb
add
pop
cmc
fcoms
push
clc
iret
cmp
sub
lahf
cwtl
nop
push
xchg
cmp
stos
adc
push
lds
sti
test
jecxz
jg
dec
movsb
test
mov
out
pop
or
lods
int3
cmp
mov
je
cld
loopne
pop
int
jle
insl
fidivrl
push
outsb
arpl
mov
jbe
shrb
loope
dec
pushf
repz
shrb
aam
cld
jb
and
mov
sahf
ror
inc
cmc
cltd
lcall
jg
loope
mov
jg
sbbb
jecxz
cmp
sti
lods
dec
js
and
push
gs
test
push
push
roll
xchg
pop
mov
xor
adc
jns
pop
ja,pt
xlat
and
xor
ret
mov
lods
cmpl
adc
dec
mov
push
or
dec
mov
cmp
xor
shlb
out
fwait
jge
or
adc
cwtl
jb
or
dec
cmc
mov
sub
cmp
or
adc
cmp
lahf
sarl
pop
cld
mov
jbe
arpl
xchg
sub
jecxz
testl
xchg
xchg
jbe
out
in
xchg
popa
int3
lret
clc
ret
mov
imul
adc
and
les
inc
lods
rcrb
push
bswap
jnp
xor
cmpsb
outsl
sub
jle
inc
add
mov
ffreep
in
lcall
icebp
inc
mov
iret
xor
cld
insl
inc
call
add
test
mov
xchg
sbb
cmpsl
xchg
popl
sbb
das
mov
mov
movsl
add
push
xlat
sbb
sub
movswl
ds
std
xchg
jb
pop
mov
jmp
pusha
test
repnz
cmc
jl
popa
push
aad
mov
mov
jecxz
jae
aas
and
push
pop
data16
push
sbb
notb
mov
divl
push
mov
mov
xchg
add
in
pop
inc
inc
cld
lock
cmp
add
push
pop
cmp
pushf
loopne
push
stc
xor
mov
mov
rcrb
push
inc
ss
pop
fbld
sbb
in
add
out
das
decb
mov
xchg
and
dec
fnstenv
popa
dec
sbb
jbe
stos
dec
shlb
data16
outsl
loope
cmp
sahf
mov
dec
push
and
and
sbb
addr16
pop
cs
iret
cmc
in
mov
icebp
cmc
sbb
loop
adc
sbb
outsl
xchg
dec
movsl
in
into
stos
xchg
xor
mov
xchg
les
xchg
arpl
in
cmpb
sbb
xor
mov
inc
fucom
jle
push
dec
mov
je
sarb
fcompl
cmp
jo
jmp
cmpsl
stos
outsl
fidivl
shrl
or
lret
push
out
inc
stos
mov
in
in
test
mov
push
popa
cwtl
mov
rsm
push
aad
adc
add
mov
mov
in
jne
sbb
pop
addr16
jne
or
mov
fbstp
mov
dec
es
adc
mov
mov
cmp
jmp
mov
adc
ret
ja
xchg
ret
and
addl
daa
jno
stc
sbb
add
and
cmpsl
xchg
pop
pop
faddl
and
in
adc
psubsw
das
fcoms
jg,pn
call
aas
jecxz
in
mov
push
inc
xor
xchg
jne
aaa
dec
pop
xchg
mov
inc
pop
iret
sub
enter
sarb
int
xor
sbb
fistpll
repz
mov
mov
hlt
sti
fs
and
xchg
insb
sarl
cltd
test
add
adc
mov
sbb
lea
xchg
cmp
fimull
stos
mov
cmp
fstpt
popa
test
dec
mov
jmp
hlt
push
sarl
xchg
bt
jbe
adc
jmp
mov
sbb
sub
mov
and
movsl
push
imul
in
push
mov
mov
aad
inc
xchg
int
test
mov
and
fidivs
out
int
and
outsl
lret
xor
mov
xor
push
jne
push
shl
lcall
jne
push
mov
sub
sbb
adc
xor
cwtl
test
jbe
fcmovnbe
jns
mov
loopne
popa
fisttps
fwait
and
loope
inc
gs
mov
popf
mov
test
popa
lds
out
scas
aas
cld
mov
js
mov
int
mov
cmp
inc
mov
inc
stos
mov
fs
mov
fldenv
cmpsl
cmp
rclb
add
mov
pop
inc
fs
cmp
mov
xchg
jmp
dec
mov
fprem1
not
pushf
cmp
push
popf
jb
jle
lret
inc
push
xchg
add
sti
addr16
cmc
sub
shrb
sbb
js
cmp
xchg
adc
dec
cmpsb
fdiv
pop
adc
bound
mov
sti
pop
jge
in
xor
push
mov
aad
mov
mov
cmp
jge
mov
faddl
rep
sub
movswl
repnz
jo
xlat
loop
aas
or
int3
fcompl
mov
insb
nop
repnz
xchg
pusha
mov
mov
daa
jbe
mov
imulb
or
ja
mov
push
lock
xchg
sbb
mov
mov
outsb
mov
lods
lret
xchg
sub
jmp
test
and
lods
test
clc
outsl
inc
jp
out
jnp
imul
addr16
cli
xchg
cmc
mov
sahf
add
mov
inc
or
xchg
fsub
fwait
mov
sbb
add
inc
dec
sbb
xchg
and
push
mov
and
jb
sbb
cld
cmp
fisubrs
add
sarb
arpl
sub
test
out
insb
cmp
and
cld
mov
arpl
ftst
mov
xchg
mov
inc
fildll
mov
push
mov
bound
rorl
pop
shl
pop
sub
aam
pop
addr16
pop
pop
cmp
lods
mov
loopne
push
and
and
and
test
pop
xchg
lcall
xchg
shlb
or
cmpsl
mov
aam
mov
mov
test
pop
pusha
adcb
je
frstpm(287
adc
mov
mov
and
push
out
cmc
arpl
add
mov
mov
xchg
push
scas
loop
and
cltd
pop
out
nop
push
outsl
and
shrl
mov
ss
jae
out
push
mov
and
bound
fdivrs
cmpsl
xchg
pushf
cmp
xchg
arpl
inc
xlat
xor
mov
sbb
sub
punpcklwd
sbb
and
loop
mov
popf
jo
push
orl
cmp
mov
int3
push
imul
ljmp
scas
cmpsb
iret
adc
xlat
out
test
roll
mov
imul
outsl
cmc
mov
hlt
push
test
cli
mov
test
pop
movsl
rorb
cmp
popa
mov
inc
es
pushf
filds
inc
xchg
add
sbb
mov
and
leave
mov
bound
jge
inc
push
dec
sbb
popa
gs
mov
mov
or
dec
js
fs
adc
loope
inc
imul
out
cmp
cld
jmp
pop
xor
test
fsubrl
mov
xchg
fsts
les
out
cmp
mov
ret
cltd
popa
lahf
push
repnz
test
add
sbb
lahf
pop
adc
sbb
sti
shll
or
or
fs
orb
sub
or
js
arpl
cmp
pop
cmp
in
scas
int
lds
push
lods
mov
pop
dec
dec
xchg
dec
hlt
arpl
ja
outsb
or
aas
adc
push
shlb
insl
adc
mov
pop
cli
pop
pop
mov
fistl
test
outsl
inc
xlat
mov
sbb
or
push
mov
sub
gs
dec
cmpsl
jge
inc
aaa
sbb
jg
mov
or
flds
scas
popa
fcom
sti
fs
icebp
addr16
aaa
rorb
lods
int
inc
sbbl
lahf
mov
imul
mov
or
loope
rcrb
sbbb
test
pop
fildl
daa
mov
aam
mov
aad
pop
xchg
aas
mov
lea
sbb
addr16
xchg
pop
and
lahf
push
dec
out
pop
hlt
out
mov
ja
je
loopne
jl
cmp
subl
push
jmp
jbe
bound
inc
popf
jp
and
lret
add
and
es
jne
push
xor
pop
cmp
repz
stc
icebp
mov
inc
xor
das
loope
das
sub
inc
cltd
fldcw
jo
imul
inc
or
fisttpl
xchg
adc
add
adc
lods
mov
testb
add
and
dec
icebp
scas
mov
out
push
jge
xchg
dec
fisttpll
pop
mov
inc
push
aad
sub
xor
hlt
mov
in
in
pop
lret
aad
add
test
insb
in
je
movsl
xchg
js
mov
or
mov
sub
pop
cmp
inc
xor
lret
dec
pop
out
mov
mov
pop
add
mov
sti
xchg
inc
pop
test
call
pop
outsb
stos
push
mov
xor
mov
fimull
daa
cs
or
adc
popf
fwait
sub
sti
push
push
adc
dec
sahf
test
sbb
arpl
mov
add
mov
jae
fisubl
adc
cmp
and
sub
cmc
enter
dec
test
into
xor
rclb
test
int
mov
int
adc
adc
insb
loop
mov
dec
and
sbb
sub
rcrl
or
inc
loopne
loop
and
bound
jle
xor
sbb
popa
xchg
mov
dec
push
popf
jne
aad
lods
aam
dec
xlat
repnz
fwait
xor
adc
jo
add
shll
dec
addb
cwtl
xor
sub
leave
in
fstps
jecxz
inc
test
adc
test
lods
jg
mov
aam
ja
popa
mov
ljmp
orl
shll
test
lahf
adc
cmpsb
rcl
test
mov
test
pop
sbb
push
mov
mov
lret
ds
aaa
cmp
addr16
cmc
adc
mov
push
xchg
nop
or
fisttpl
les
dec
pop
mov
sub
shrl
mov
push
or
xor
inc
or
mov
jnp
mov
mov
adc
sbb
out
ret
call
divb
das
pop
out
pop
mov
xor
dec
dec
xchg
push
sti
or
cmp
les
inc
pop
fmul
push
pop
inc
je
shrb
xchg
lods
xor
mov
pushf
adc
sub
adc
pop
outsl
shl
ds
pop
cmp
xchg
or
pusha
sbb
bound
pop
xchg
cmp
cmpsl
adc
xchg
ljmp
add
into
mov
adc
mov
mov
pushf
scas
lods
stos
sbbl
lock
popa
mov
inc
pushf
repz
cltd
testb
mov
sbb
es
and
cmpsl
imul
pushl
loopne
sub
or
pop
dec
cwtl
mov
dec
call
xor
andb
test
movsb
jmp
int
pop
push
push
sub
lcall
cld
and
ret
iret
jb
jae
inc
sub
or
ljmp
loopne
test
xchg
out
movsb
inc
enter
adc
shrl
xor
mov
vpshaq
mov
bound
pop
pop
adc
lcall
add
pop
fstpt
push
mov
in
stc
and
arpl
aam
inc
negb
adc
sub
daa
push
pop
push
cmp
cli
cmp
or
out
pop
push
xchg
lcall
dec
or
inc
ret
jge
push
or
fsts
sub
push
aad
shlb
sbb
ljmp
bound
andb
fcmovbe
cs
cmpsb
push
and
ljmp
xor
jmp
inc
icebp
dec
xlat
pop
mov
test
std
adc
mov
cld
xor
pop
mov
int
sbb
inc
js
js
push
dec
and
mov
es
mov
das
bound
push
push
out
mov
inc
scas
sbb
pop
leave
or
lcall
add
jp
in
and
insl
adc
mov
imul
ja
bound
fxch
push
arpl
adc
scas
les
xchg
dec
pop
fiaddl
data16
out
mov
icebp
fs
sbb
movsl
push
rclb
xchg
sbb
movb
mov
inc
xlat
test
aad
roll
mov
int
pop
add
sub
mov
pop
mov
aaa
and
movsl
out
sbb
inc
inc
jle
out
iret
pusha
xchg
ljmp
lea
mov
dec
mov
pop
sbb
rorl
movsl
adc
sarl
imul
xchg
test
test
mov
repz
push
cmp
mov
xor
mov
mov
sbb
jnp
inc
sub
adcl
push
iret
cli
push
repnz
mov
sbb
jne
jne
adc
pop
inc
push
push
loopne
notl
cmp
pop
inc
push
inc
ja
sbb
adc
xchg
jecxz
mov
adc
int
lock
cmp
cmp
and
jne
pushf
lret
mov
cmp
lret
xchg
hlt
xor
inc
pop
add
pop
stos
mov
add
test
loop
psubw
push
test
sbb
jne
hlt
adc
push
xchg
mov
stc
out
movsb
jg
xchg
mov
push
das
push
mov
call
lret
sub
inc
rep
xor
sbb
nop
jge
stos
into
xchg
sub
xchg
inc
fbstp
lock
call
into
mov
sti
stos
sbb
jge,pt
sbb
xor
sahf
movsl
mov
sub
jns
dec
lret
int3
mov
mov
pop
daa
test
and
or
aas
xchg
in
sub
es
xorl
mulb
dec
xor
or
and
in
mov
gs
stos
pop
push
mov
je
push
popf
flds
inc
sub
ds
adc
cmp
frstor
pusha
aad
ss
pop
rorl
mov
outsl
in
rorb
inc
adc
out
addb
nop
jmp
pop
clc
mov
mov
xlat
ret
ds
push
jge
dec
jo
add
adc
cmp
or
fimuls
jle
cmp
cmp
loope
in
nop
sub
fidivs
jmp
int3
mov
xchg
push
outsb
xor
xchg
jo
mov
add
jmp
lahf
cmpl
ds
call
out
adc
pop
mov
daa
cmpsb
scas
push
mov
pop
jo
xlat
cs
sbb
cltd
inc
sbb
popa
sub
cltd
adc
push
add
dec
lods
and
jne
popf
mov
lret
push
push
jnp
mov
lods
in
mov
fisttpl
cmc
aam
and
ss
hlt
push
push
movl
push
add
in
rorl
push
ljmp
sbb
inc
sbb
loopne
jecxz
int
ss
mov
add
call
dec
loope
or
jb
ds
mov
xchg
cmpsb
jl
add
mov
inc
hlt
jno
jne
pop
adc
rorl
psubq
lea
divl
insb
pop
leave
ja
xor
daa
push
les
int3
adc
and
push
movsb
pop
xor
imul
int
push
shrd
hlt
cmpsl
cmp
subl
test
cmc
fwait
jle
mov
and
push
mov
jo
mov
cmp
rol
mov
icebp
cmpsb
in
aas
xor
adc
pop
pop
out
push
add
lods
xchg
pushl
loopne
fisttpll
cld
and
inc
jo
sub
cmp
leave
inc
pushf
hlt
mov
jo
cwtl
nop
fs
sub
lods
int3
push
vpmaxsw
shll
adc
pop
pushf
cmp
inc
data16
imul
mov
fcomps
cmp
and
lock
pop
testb
pop
and
stos
in
cmpsl
lcall
decl
xor
jb
push
push
mov
cmpsb
cli
fiaddl
repz
pop
fwait
jne
mov
out
push
add
in
ror
aaa
jle
or
and
and
ror
dec
cmp
cli
or
pop
shl
sub
xchg
xchg
fstpl
pop
fwait
and
addb
popa
adc
xor
push
ljmp
sbb
daa
mov
jp
nop
inc
imul
mov
aad
adc
adc
xchg
imul
jns
add
das
push
inc
in
xor
dec
clc
nop
ss
cld
push
push
call
xchg
push
sahf
mov
cmp
pop
mov
shlb
mov
pop
js
and
bound
fsubs
fstl
cmp
sub
mov
mov
mov
icebp
ficoml
inc
lods
mov
lcall
fmulp
pop
inc
out
fimuls
out
jo
sar
in
fwait
lods
movsl
addb
in
push
xchg
sbb
push
fisubs
fistpll
mov
xchg
pusha
dec
out
cmc
add
outsb
pop
jne
push
xchg
rcrb
push
adc
test
mov
push
roll
lods
imul
and
outsl
xor
dec
cmc
std
and
cmp
scas
add
rclb
cmp
jb
xor
mov
jno
ficoml
mov
mov
dec
and
pop
adc
rcr
mov
pop
sbb
fstl
leave
and
ljmp
adc
enter
mov
fstp
add
mov
jb
pushw
dec
cli
and
xchg
xor
mov
setnp
fsubrl
mov
pop
cmp
pop
inc
sbb
enter
daa
sub
mov
and
and
sbb
or
ss
dec
xchg
sbb
mov
in
inc
pop
mov
in
test
push
shrl
popf
push
jp,pt
in
cmp
push
xor
push
inc
out
push
iret
aam
xchg
test
imul
add
daa
lcall
push
imul
mov
out
in
lret
sbb
mov
pop
mov
das
das
xor
adc
lcall
mov
out
jp
movsl
aad
xor
xchg
cmp
shl
cmpsb
outsb
push
inc
adc
sbb
pop
bound
cmc
xlat
push
mov
jae
pushf
pusha
cmp
sti
incb
cmp
or
lahf
idivl
ss
fwait
or
enter
mov
inc
jnp
lock
aas
inc
or
out
mov
jecxz
pop
ficoms
cmp
adc
jae
mov
fisttpl
and
cmpsl
in
adc
insb
icebp
adc
insb
in
pop
shlb
xlat
dec
or
lea
and
daa
loopne
cmc
mov
rorb
inc
dec
insb
in
cmp
adc
aam
mov
int3
push
cmp
out
dec
jp
pop
scas
pop
scas
cli
mov
dec
inc
rolb
popf
sub
push
fldenv
push
push
pop
movsl
popa
jnp
jo
pop
mov
decl
mov
addr16
int
mov
mov
daa
xor
cld
xor
inc
in
dec
or
and
ljmp
out
pop
or
and
test
mov
je
rolb
mov
iret
mov
clc
stos
fnsave
leave
ljmp
push
leave
jnp
insb
mov
mov
mov
rcrb
adc
cld
fmul
hlt
mov
ss
fwait
mov
ror
ss
mov
pop
hlt
or
add
in
rcrb
mov
cmp
mov
xchg
stos
mov
jbe
js
mov
add
or
and
scas
xor
add
inc
cmp
cmp
data16
dec
add
pushf
fistpl
push
aad
mov
loope
int3
scas
popf
inc
mov
pop
cmp
push
adc
js
jb
test
mov
dec
push
call
xchg
adc
imul
push
lds
stos
pop
pop
jecxz
pop
pop
cmpb
fs
ljmp
jb
xor
push
es
or
icebp
inc
push
icebp
imul
roll
jae
cli
lahf
fnstenv
xchg
sbb
nop
shll
mov
mov
xchg
mov
push
mov
aas
sub
adc
mov
cmpsl
sub
ficompl
aam
je
jb,pn
movsl
cli
pop
sbb
lock
out
mov
test
xchg
movsb
fwait
jecxz
and
xor
aam
fs
lret
stos
in
mov
outsb
sbb
lea
mov
mov
stc
cmc
loope
xor
xchg
js
pop
cmp
mov
inc
mov
mov
xor
push
popf
fbstp
loope
xchg
sti
loop
test
shrb
in
out
lods
test
cli
push
and
inc
pusha
sbb
xchg
loop
adc
icebp
bound
pop
pop
jb
push
popa
shll
inc
aaa
pushf
aas
test
out
mov
mov
mov
jg
fisubl
sbb
insb
adc
repz
rep
xorl
sbb
mov
mov
push
jnp
xchg
mov
push
loop
lods
pop
ss
cmp
mov
ss
mov
lret
dec
out
ss
into
adc
fcompl
mov
jne
loopne
add
sub
add
jo
pop
fidivrs
jne
jle
mov
dec
inc
sub
inc
add
adc
xor
lock
out
or
dec
jne
push
pushf
pop
add
push
in
add
in
add
cmp
inc
das
sub
test
mov
push
pop
ret
imul
dec
andb
arpl
pop
sub
or
sbb
mov
inc
les
mov
mov
lea
shll
xor
add
pop
mov
mov
nop
push
leave
jns
fs
loope
ss
adc
fmull
out
or
pop
in
mov
js
ret
notb
and
pop
lret
or
stc
out
addl
mov
and
jbe
pusha
loop
js
pusha
out
fidivl
mov
xor
arpl
cmpsl
jno
pop
arpl
test
sti
or
out
cmp
ffreep
and
es
xchg
xlat
xchg
inc
cli
lods
addb
jne
dec
data16
push
test
xchg
icebp
rcrb
xor
jmp
sub
mov
dec
inc
gs
test
cmp
mov
pop
fs
push
xor
test
bound
add
sahf
ss
and
in
fnstsw
daa
lods
enter
shl
xchg
mov
pop
loop
sub
mov
stos
pop
andl
dec
pop
ds
cld
dec
push
jne
pop
mov
cmpsb
and
in
dec
push
inc
into
imul
mov
int
add
bound
or
pop
push
lea
push
decb
std
mov
fadd
mov
aaa
arpl
roll
lods
lock
and
lock
mov
icebp
cmp
xor
jg
push
xor
adc
testb
ja
add
addr16
popa
sbb
or
in
mov
out
pop
lea
lods
out
and
jnp
out
pop
jecxz
adc
inc
aam
sbb
mov
insb
dec
xchg
sar
push
out
inc
push
rorl
push
push
sbb
js
mov
adcl
adc
aam
push
es
fwait
pop
xchg
test
rcrb
lods
leave
lcall
cs
and
inc
and
cmpsl
jo
xchg
mov
les
mov
daa
inc
cmp
psubw
or
sti
push
cmpsb
loope
add
push
xchg
test
movsl
pop
cmpsb
mov
fwait
pop
xor
dec
pop
jb
inc
sbb
jnp
mov
xor
scas
bound
vpunpckhbw
pop
mov
repnz
inc
movsl
push
in
cmp
xchg
jmp
push
lret
mov
cld
mov
push
out
sbb
and
mov
or
mov
sub
rcll
scas
cmp
inc
in
xchg
pop
gs
lahf
sbb
fwait
mov
cmp
or
adc
aas
or
sub
jne
arpl
stc
into
dec
stos
test
pop
mov
out
test
push
or
jle
std
or
add
push
lret
outsl
sbb
adc
add
imul
movsl
rclb
xlat
jecxz
xchg
mov
aam
inc
lahf
fwait
aaa
mov
decl
movsb
clc
aaa
call
dec
xchg
testl
jecxz
sub
sbb
sahf
and
jne
mov
mov
xor
inc
dec
sub
mov
rorl
mov
mov
push
out
mov
fs
mov
adc
lds
jp
mov
sbb
pop
nop
daa
xchg
pop
lods
inc
in
in
mov
clc
mov
adc
add
and
mov
push
cli
inc
push
bound
mov
sub
pop
and
adc
lret
cs
push
pop
pop
cltd
mov
js
pusha
shrl
mov
pop
adc
mov
subb
pop
sub
or
inc
movsl
arpl
hlt
mov
and
cmp
shl
call
xor
jmp
sub
psadbw
addb
mov
pop
cmpsl
pop
repz
xchg
enter
jbe
push
movsb
pmaxsw
pop
xor
cmp
adcb
fildl
cmp
pushf
and
dec
cwtl
inc
gs
setp
adcb
adc
mov
fldt
add
mov
nop
test
jne
dec
and
or
aaa
add
jnp
xor
pop
cwtl
push
and
imul
incw
mov
pop
adc
ret
or
inc
pusha
cs
sub
std
mov
cmp
xchg
dec
jo
cld
jbe
adc
lock
loopne
arpl
lds
ja
aaa
jmp
scas
xchg
lahf
test
adc
lret
ljmp
mov
sub
xlat
pop
inc
add
popf
mov
add
ss
sub
pushf
mov
mov
push
inc
lret
fcmovbe
testl
xor
popf
fisttpll
int
mov
dec
push
cmp
pop
pop
pop
pop
xchg
dec
push
and
cmp
or
and
mov
mov
xchg
push
xchg
cs
and
ret
xchg
mov
test
cmp
imul
mov
js
fbstp
les
gs
in
or
jmp
stos
insl
test
daa
push
add
jp
sbb
js
add
sub
std
subl
aam
mov
dec
cs
mov
xor
mov
adc
mov
clc
adc
lahf
loop
push
or
fst
leave
gs
sbb
or
dec
stos
ljmp
and
push
es
mov
push
roll
xchg
ss
aas
pop
lret
sar
xor
bound
addb
mov
mov
inc
xor
ja
jle
int
dec
je
ret
xchg
lcall
and
arpl
adc
sbb
mov
cmp
popf
incb
lcall
bound
add
mov
adc
inc
mov
mov
repz
cmp
cmpsl
pop
cmp
dec
jo
imulb
popf
shll
mov
fimull
sbb
fbstp
jg
in
add
insl
pop
pop
sbb
bt
mov
jge
repnz
aam
jbe
inc
test
scas
dec
sbb
mov
lods
mov
leave
hlt
jge
mov
insl
js
test
xchg
mov
movsb
lds
cwtl
xchg
enter
data16
ja
and
orb
xchg
lret
lahf
insl
adc
jp
data16
dec
sub
ror
mov
test
adc
jle,pt
dec
gs
jecxz
push
mov
add
cmp
adc
mov
xor
in
adc
xor
in
pop
xor
mov
sbb
jecxz
xlat
into
pop
pop
cmp
addr16
nop
mov
pop
mov
sbbl
mov
ja
insb
mulb
jns
stc
cltd
rclb
mov
pop
ret
arpl
psrlq
add
xchg
dec
insl
pop
cmp
scas
fwait
inc
sbb
ss
shr
push
in
push
adc
push
pop
data16
int
dec
mov
test
rclb
fsubs
push
pushf
loope
xor
imul
adc
ljmp
cli
pop
inc
fwait
pop
pop
xchg
aad
ret
cmp
push
push
inc
add
dec
ja
outsl
loope
daa
lock
jne
push
push
xchg
cmp
adc
into
adc
push
mov
clc
xchg
ffreep
pop
mov
jp
leave
rcrl
mov
aas
cmp
iret
stos
jo
aas
pushf
jp
adc
or
xchg
jecxz
ret
mov
mov
cld
add
cmp
lods
shll
imul
std
dec
jnp
add
cmp
mov
sti
dec
push
cmp
adc
hlt
mov
push
pop
cmp
stos
push
inc
add
jo
rorb
iret
enter
sbb
cltd
pop
mov
mov
inc
inc
in
into
jbe
subl
sahf
xchg
fsub
dec
lods
jne
dec
movb
in
jmp
sahf
sub
jle
popa
sbb
imul
unpcklps
test
xor
repz
outsb
call
popf
lods
sar
mov
xchg
lcall
aas
xor
ret
loop
inc
mov
sbb
xchg
mov
or
pop
insb
push
pop
in
std
pop
xor
mov
into
xchg
adc
jae
sub
push
cld
jb
mov
in
mov
inc
add
pop
mov
mov
fbstp
mov
sarb
xor
xor
push
add
xlat
cmc
cs
out
iret
mov
ret
sbb
lahf
xor
dec
pop
fwait
bound
and
decb
out
imul
ret
out
ljmp
icebp
loop
loopne
pop
test
scas
sbb
pop
mov
mov
cltd
js
push
add
dec
pushf
mov
mov
rolb
out
test
pop
mov
sbb
mov
test
jecxz
sti
mov
enter
add
nop
je
js
cmp
push
fisttpl
or
mov
enter
popa
addb
popf
jle
in
mov
xchg
push
fistpll
jl
push
adc
mov
mov
mov
ss
jnp
add
push
int3
mov
push
in
sub
dec
stc
sbb
sbb
add
add
rorl
add
aam
cld
sub
push
push
or
lods
dec
fcoms
adc
jge
xor
in
lock
cwtl
sub
gs
pop
mov
shll
dec
inc
in
testb
lcall
inc
cmpsl
sbb
test
mov
arpl
je
lea
faddl
leave
xor
mov
xchg
xchg
outsb
mov
std
loop
add
scas
enter
xchg
mov
lods
mov
pop
xchg
hlt
nop
pushw
fistpl
and
test
arpl
jae
or
sti
and
and
bound
cmpsl
sbb
or
add
shlb
or
sub
inc
fildll
dec
adc
jne
leave
and
pusha
mov
mov
fsts
mov
and
fidivl
in
jg
stos
inc
test
inc
icebp
sub
push
xchg
mov
jbe
into
pop
adc
cmp
pusha
dec
jle
sahf
mov
jno
shrb
out
sarl
cmp
push
xorb
ja
sbb
mov
pop
aad
mov
jbe,pn
push
jecxz
or
cmp
mulb
dec
out
mov
das
inc
mov
inc
inc
push
jge
jae
sub
and
push
lods
nop
or
aas
jg
mov
adc
fs
and
fsubl
xchg
movsl
lock
xchg
jns
shl
push
mov
mov
fisttpll
and
js
xchg
lahf
xor
fmuls
outsl
out
mov
lcall
or
test
xchg
mov
xchg
leave
add
cmp
or
xchg
cmp
xor
pop
in
cmp
or
popf
pop
mov
xlat
add
pop
insl
dec
push
dec
push
jae
pop
fistl
ljmp
mov
push
stc
adc
aad
loope
fnstcw
add
inc
mov
scas
test
pop
repz
insb
in
and
dec
iret
cwtl
les
int3
mov
xchg
push
imul
cltd
or
bound
test
jno
xchg
loope
shrb
daa
mov
and
repz
pop
dec
mov
dec
adc
sbb
pop
or
push
mov
mov
call
ret
mov
pushf
xorl
sbb
cmc
leave
std
in
mov
mov
adc
test
adc
ret
repnz
je
inc
ljmp
clc
scas
call
in
inc
mov
cmpsl
std
dec
sti
jbe
cmp
aam
add
scas
cmpsl
and
pop
pop
icebp
and
fucomp
shl
mov
test
sub
pop
int
daa
data16
adc
sbb
sub
pop
pusha
mov
push
and
aad
mov
js
daa
xchg
lea
dec
ja
lock
hlt
sub
xchg
insb
jp
xor
xchg
mov
pop
inc
jle
sbbb
dec
add
xor
jmp
cli
xchg
popf
inc
out
push
dec
dec
lret
push
mov
jmp
ljmp
ja
in
stos
ds
sbb
mov
push
shrb
aaa
sub
cwtl
add
movsl
push
add
dec
fisubs
scas
stos
inc
sbb
cmc
mov
dec
in
in
shll
sbb
test
js
jb
add
cli
dec
rclb
popa
jl
cli
inc
mov
or
sub
jl
jp
inc
adc
scas
jb
push
in
push
int
leave
stos
inc
pop
arpl
lahf
jg
sahf
rclb
fsubr
loopne
ret
stos
inc
mov
and
push
out
sbb
xchg
notb
pop
xchg
inc
pusha
popf
xchg
jecxz
jmp
or
push
push
aas
lret
mov
loopne
and
in
and
xchg
add
cwtl
pop
gs
dec
jg
xor
jp
insb
fisttpl
sub
or
push
inc
and
in
dec
cmp
mov
mulps
hlt
and
insb
ljmp
xchg
std
pushf
cmp
push
out
daa
pop
fbstp
sub
popa
add
push
push
mov
or
pop
rclb
out
mov
fcmovnbe
stos
aaa
adc
jl
mov
push
dec
add
mov
sub
repz
push
adc
out
dec
dec
xchg
fstpl
mov
dec
xor
inc
xchg
inc
and
insb
std
lcall
jbe
movsl
js
sub
jge
mov
out
and
dec
or
stos
pop
push
std
cmp
jge
out
cmp
mov
mov
add
mov
dec
and
mov
xchg
cltd
dec
arpl
xchg
pop
ss
push
jo
sbb
push
push
enter
sbb
mov
fcmovnu
rcrb
pop
out
xchg
xlat
pop
data16
push
out
pop
push
repnz
fisubrs
inc
jl
inc
das
stos
call
push
sbb
lahf
sub
test
into
leave
push
les
enter
shll
sti
adc
pop
and
pop
dec
push
ss
fisttpl
insl
add
and
iret
roll
adc
nop
aas
push
dec
insl
mov
add
cltd
outsl
in
ss
and
aaa
addl
ficoml
movsl
jno
xor
and
sbb
cltd
jb
or
jp
cmpsl
jae
push
call
or
mov
ds
dec
in
mov
inc
mov
mov
cli
mov
aaa
sbbb
cmp
cwtl
jns
mov
lret
jmp
mov
stos
lret
out
push
faddp
test
je
inc
push
mov
in
aad
dec
fldenv
idiv
dec
negb
lahf
subb
pop
aas
stos
mov
jnp
inc
pushf
movsb
add
add
mov
fdivs
sti
pop
inc
pop
int
lock
mov
nop
cmpsl
adc
repnz
aad
or
add
fwait
adc
push
push
xor
loop
pop
out
jbe,pt
push
sbb
inc
ja
sub
mov
mov
in
xor
mov
mov
mov
sub
and
cli
xor
inc
pop
ds
adc
les
xchg
adc
adc
dec
test
fidivs
push
jne
xor
pop
xlat
add
adc
sub
daa
xchg
arpl
int
aaa
cltd
sub
popa
insb
sub
or
sub
dec
scas
stos
dec
mov
fistl
lret
xlat
dec
push
mov
lock
mov
aas
lods
xor
jno
adc
mov
jnp
fdivs
dec
mov
int
aas
aas
shll
lcall
mov
in
cli
ljmp
lahf
mov
in
cmp
xchg
jecxz
int3
sahf
mov
xchg
inc
jmp
movsl
inc
fbstp
lret
adc
mov
push
dec
pop
mov
push
subl
fsubrp
inc
call
dec
push
lcall
or
inc
xchg
int
ficoml
cmp
testb
neg
cmp
cs
mov
xor
mov
cmpsb
bsr
bound
mov
imul
nop
movb
and
enter
cmpsl
or
fistl
add
or
ret
test
rcr
fistpl
sub
add
lods
xor
cmpsb
sub
outsl
jae
pop
xor
dec
xchg
subl
jnp
mov
leave
dec
mov
cwtl
mov
dec
test
mov
xor
add
mov
mov
xchg
xchg
and
dec
fcmovnb
and
and
inc
sbb
pop
push
pop
inc
pusha
jg
jns
lods
repnz
jnp
jecxz
jl
xchg
nop
jmp
mov
lcall
mov
push
imul
xor
bound
pushf
sbb
add
push
jecxz
ss
push
push
lret
pop
dec
enter
mov
sub
std
add
nop
daa
add
call
stos
pop
jnp
popa
jae
gs
fwait
xorl
sbb
xchg
jbe
xlat
aaa
sub
jmp
arpl
imul
cmp
jg
ja
insl
add
movsl
lea
xor
mov
and
xor
mov
lret
xor
xchg
xchg
es
bound
daa
jno
and
jb
test
adc
call
out
jne
lea
lods
or
loop
xlat
pusha
shlb
jle
add
mov
out
pop
aad
pop
mov
and
cmp
cli
mov
int
popf
dec
dec
mov
test
jmp
and
fmull
xchg
mov
inc
jns
xor
mov
lcall
sbb
in
mov
enter
popf
pop
push
rcrb
xchg
rcr
mov
mov
or
xchg
rorb
mov
les
popf
cld
ja
icebp
mov
mov
fisubrs
nop
sub
xchg
pop
lret
aad
fldt
xchg
xchg
cli
stos
push
fdivl
lret
push
dec
and
inc
repz
adc
mov
xchg
lcall
mov
mov
or
cld
shlb
sbb
scas
jp
scas
or
xchg
push
out
dec
cs
add
push
int
pop
out
iret
je
repz
clc
sar
mov
movsb
or
sbb
push
cmp
inc
add
gs
inc
or
jecxz
loopne
cmc
push
mov
mov
cli
loopne
sbb
ja
jecxz
out
cmp
mov
or
inc
aam
cs
enter
das
data16
cltd
aas
cmpsb
pop
pop
jae
xchg
mov
imul
testb
or
insb
pop
cmp
aas
pop
mov
dec
cli
popa
mov
pop
testb
jnp
xchg
pusha
mov
adc
pop
mov
leave
aaa
xor
push
nop
mov
jp
lods
orl
xchg
ds
inc
cs
inc
dec
test
iret
lock
or
push
jnp
nop
popa
cmpsl
dec
pop
leave
mov
loope
icebp
or
xlat
jb
push
jg,pn
cld
jle
dec
mov
out
js
sub
dec
insb
mov
mov
mov
aam
sub
repz
mov
adc
adc
iret
mov
mov
adc
mov
mov
mov
dec
adc
test
pop
sbb
or
inc
test
push
test
push
sbb
push
sub
jl
push
push
pusha
dec
decb
add
mov
pop
data16
fcoml
inc
add
sub
mov
push
pushf
sbb
cli
pop
cmp
pop
lret
pop
and
mov
daa
or
sbb
lcall
adc
or
mov
mov
test
std
add
jp
gs
cmp
xor
test
pop
in
rorl
icebp
inc
mov
mov
mov
xchg
mov
adc
jmp
shll
or
or
dec
add
pop
mov
sahf
or
xor
idivb
xchg
cwtl
push
cmp
mov
sbb
mov
mov
lret
xor
cmpsb
xor
call
insb
in
mov
inc
push
ret
pop
sahf
mov
ret
enter
mov
dec
adc
cmp
sbb
sbb
lods
pop
cld
imul
sti
pop
jp
mov
lcall
lea
add
mov
pop
cmp
aad
xor
jo
pop
ret
shl
into
push
test
sub
insl
mov
pushl
mov
sti
dec
or
aas
xchg
insl
or
testl
lahf
adc
outsb
loope
mov
aad
in
dec
and
sbb
dec
in
sub
popf
dec
sbb
ja
pop
lods
dec
insb
iret
shufps
insb
in
push
jnp
stos
pop
jb
stc
rclb
pushf
jl
xor
ret
jae
cmp
mov
sahf
in
adcl
mov
mov
adc
cmp
add
je
hlt
aad
iret
imul
ljmp
inc
ljmp
mov
adc
dec
mov
out
gs
shll
mov
shll
test
icebp
arpl
xor
dec
mov
xchg
jl
js
out
andps
sbb
xchg
sarb
les
xor
xor
dec
subl
fs
shlb
mov
jmp
addr16
es
jg
not
dec
add
rolb
sbb
sahf
mov
sbb
popf
xlat
push
lret
aam
sarl
dec
dec
sub
lods
mov
icebp
sbb
icebp
mov
in
andl
jmp
int3
arpl
test
inc
dec
data16
rclb
pop
cmp
push
mov
jno
sub
mov
push
jg
out
mov
mov
mov
sti
lods
in
stc
cmp
jbe
jb
outsb
mov
lock
xchg
sbb
xlat
fldl
imul
jns
mov
pop
or
sub
mov
pop
add
fcoms
pop
aam
lods
repz
test
xchg
lret
pop
jl,pn
inc
xchg
sub
shll
xor
popf
sub
loopne
cmp
dec
insb
cli
fwait
negb
in
sub
clc
lock
cmp
lock
rol
aas
test
mov
insb
test
sbb
popa
xchg
lods
not
pop
jne
repnz
sub
mov
sbb
mul
addr16
xchg
push
or
push
dec
xchg
cmpsb
loop
inc
add
add
test
mov
adc
lock
outsl
mov
ret
lret
cmp
test
mov
dec
data16
shr
sub
imul
rorb
pop
loop
jb
jmp
push
mov
sub
mov
xor
pop
imulb
xchg
stc
enter
jno
and
pop
cltd
jno
mov
jno
das
insb
mov
mov
mov
push
js
and
mov
mov
repz
push
cmp
ljmp
ret
xchg
cmpsl
adc
fbld
cmp
and
data16
cmpsl
add
jp
xor
add
add
jb
mov
push
jp
cmp
pop
sub
loop
pop
push
push
adc
pop
push
aad
es
cmp
scas
stc
dec
shll
and
inc
xor
iret
lcall
enter
mov
dec
icebp
int3
das
xor
jg
mov
xchg
push
push
jmp
shrb
jl
cmp
mov
mov
sarl
xchg
pop
sbb
mov
aam
xchg
mov
bound
xchg
mov
adc
fs
lret
sbb
adc
xchg
push
lds
mov
sbb
aaa
dec
dec
movsl
ret
sbb
jo
lret
clc
and
into
adc
lret
orb
mov
dec
sub
pushf
dec
or
push
loope
jb
daa
mov
xchg
jge
setl
rol
ret
les
mov
leave
outsb
mov
dec
test
pop
dec
push
adc
lahf
inc
movsb
sti
xchg
lret
adc
jnp
in
mov
fidivrl
movsl
subb
add
mov
jno
xchg
mov
outsl
fcomp
and
or
test
sbb
stos
aas
outsb
rorl
aas
sub
push
lret
aas
jecxz
in
push
cmpsl
cmc
rep
call
xchg
stos
cli
cs
adc
mov
shr
adc
push
push
int
sbbl
das
negl
lock
test
fildll
outsl
out
leave
mov
dec
jae
adc
dec
mov
pop
cltd
cmp
sbb
adc
sbb
sub
lock
daa
out
pop
repz
sbb
das
ljmp
push
repnz
mov
fisubl
inc
cmpsl
fildl
mov
jae
pop
jg
push
cmp
jp
jl
fwait
xlat
cwtl
pop
pusha
rcr
shrl
addr16
sub
cmp
pusha
xor
cmp
ljmp
jecxz
sarl
adc
in
test
lret
push
mov
rcrl
cmpsb
push
sbb
jbe
cltd
pop
out
mov
mov
push
dec
or
scas
mov
aam
lods
andl
dec
adc
or
repnz
insb
dec
imul
pop
incb
and
loope
stc
xchg
sbb
mov
push
pusha
push
shrl
stos
inc
adc
mov
dec
cmp
add
mov
dec
iretw
arpl
scas
xchg
data16
add
in
mov
sub
jl
mov
xor
jo
push
repnz
std
enter
in
icebp
aas
mov
inc
imul
push
push
push
pop
and
push
outsb
xchg
mov
add
repnz
sbb
sub
ret
scas
xor
add
in
clc
stc
shlw
sbb
bound
int
mov
mov
jg
push
xchg
hlt
push
dec
pop
xor
adc
pop
jle
call
es
movsl
xchg
mov
iret
insb
inc
lcall
ljmp
out
adcb
movsl
adc
adc
push
xchg
push
imul
mov
jp
dec
ds
loope
cmp
mov
arpl
dec
xchg
adc
or
xchg
aam
mov
cwtl
mov
test
movsb
mov
jae
mov
mov
pop
and
out
dec
sbb
outsl
icebp
out
xor
fadd
je
lcall
mov
icebp
and
push
js
out
addr16
das
push
xor
test
cmpsb
mov
imul
in
lock
cwtl
scas
stos
push
cmpb
ljmp
cmp
test
cltd
push
mov
add
sub
adc
inc
adc
adc
adc
lret
adc
lea
bound
mov
sahf
xlat
xor
aaa
push
inc
mov
mov
imul
icebp
add
pop
xchg
ret
clc
add
sbb
lock
adc
or
jl
scas
out
andb
cmpsb
xchg
xor
sub
int3
mov
xchg
xchg
cmc
test
dec
fnsave
sbb
mov
bound
xor
arpl
add
lret
xlat
dec
std
xor
jne
sbb
arpl
sbb
cmc
push
fstps
imul
cmp
sbb
inc
enter
lret
xor
mov
les
aas
stos
loope
jl
adc
pop
ds
sahf
lods
push
rcl
mov
push
add
ret
xchg
jo
sbb
sahf
insl
mov
jge
sub
in
cmp
loopne
mov
mov
mov
pop
outsl
jne
mov
sahf
mov
inc
orb
push
jbe
jecxz
adc
sub
and
in
inc
xor
movsb
fistl
cmp
jle
and
inc
in
sbb
sub
movsl
test
stos
fsubs
push
pop
pop
pop
sahf
lcall
adc
jmp
clc
in
enter
mov
fsubrs
ja
mov
mov
into
sbb
jl
mov
mov
sahf
insb
or
jo
test
out
jmp
or
mov
inc
mov
mov
ret
push
sbbl
dec
pusha
mov
inc
adc
xchg
aam
mov
scas
pop
les
fisttpl
fsin
push
or
lcall
sub
pusha
push
pop
xchg
nop
inc
stos
sbb
into
std
arpl
test
shll
adc
push
insb
lds
test
pop
mov
scas
sub
push
xchg
adc
pushf
and
inc
dec
scas
push
das
push
mov
stos
mov
cmpb
add
push
imul
dec
push
inc
sub
inc
les
aad
dec
mov
hlt
pop
add
pop
repz
bnd
pop
jbe
inc
jno
xchg
push
adc
push
cmpsl
out
sbb
imull
es
iret
out
stc
jge
xchg
xchg
movsb
je
daa
shll
lods
push
insb
xchg
sbb
inc
in
dec
daa
jo
inc
sub
mov
dec
cmp
inc
cmpsl
mov
mov
push
push
cmp
adc
xor
or
sub
jae
jns
xchg
lahf
or
cli
pop
movsb
fs
jl
cltd
cmp
cmp
mov
faddp
stc
jo
out
xor
stos
add
mov
es
dec
movsb
push
push
cmp
imul
sbb
cmpsb
cmp
testb
add
cltd
js
orb
aam
mov
insb
rcll
add
push
test
push
ret
je
arpl
gs
cs
roll
xor
aad
daa
gs
add
jbe
ja
lahf
lds
inc
in
imull
pop
jae
and
sbb
xlat
push
das
add
test
dec
gs
pusha
pop
dec
mov
ds
or
loope
jnp
pop
subb
push
fsubrs
ja
mov
into
sbb
pusha
lds
mov
in
scas
lods
and
negl
rolb
ds
icebp
mov
mov
in
fdivrs
fisubrs
popf
jne
fmuls
loope
xchg
sarb
scas
mov
fnsave
sub
rcl
imul
int3
adc
sbb
cmp
adc
sbb
sub
aas
xchg
adc
shrb
test
xchg
jle
sbb
adc
cmc
dec
out
outsb
add
fwait
hlt
orl
lods
mov
mov
mov
xor
clc
into
jbe
dec
sbb
loopne
popa
test
stos
cs
loopew
cmp
rcr
cmpl
incl
adc
out
ljmp
mul
sbb
jae
mov
or
xor
cmp
std
call
pop
xor
gs
dec
fwait
ret
add
aad
dec
inc
xchg
add
inc
cmp
lods
push
mov
xchg
mov
hlt
inc
cmp
inc
call
pushf
outsb
jbe
add
test
push
daa
mov
inc
jle
and
jmp
movsl
inc
in
sahf
push
inc
push
popa
and
xor
dec
xchg
cs
lods
mov
pop
movsb
xchg
jbe
sarb
pop
xchg
sbb
ss
xlat
push
fs
jle
jle
xor
ficompl
push
shrl
jbe
loop
ds
lret
add
cs
lcall
leave
push
aad
and
xchg
call
test
insl
sub
mov
mov
jnp
fcomps
scas
cmpsb
test
loop
adc
dec
les
cmp
mov
pop
sahf
in
mov
pop
or
mov
jmp
pop
jmp
push
push
or
shlb
sbb
add
or
rcll
pop
arpl
cmp
shll
mov
cwtl
sub
mov
fwait
in
sbb
pusha
jl
jmp
cwtl
dec
test
icebp
ss
iret
and
mov
mov
sub
shlb
cmp
push
fsubs
and
outsl
fstps
hlt
and
hlt
dec
lods
lods
pop
adc
sub
cmc
jo
lock
xor
jp
bound
test
sbb
lret
or
jge
gs
sti
pop
mov
daa
aam
imul
jns
push
mov
cmp
cmp
mov
loop
xor
mov
mov
ds
pop
in
test
dec
mov
xor
enter
iret
mov
rcrb
cmp
mov
xchg
inc
jmp
insl
jmp
ss
jle
cmpsl
push
lea
push
mov
pushf
cltd
xorb
stc
popa
jo
lock
pushf
pop
xchg
xor
adc
imul
js
out
dec
out
jge
inc
jg
and
clc
mov
mov
enter
shll
test
mov
jmp
shlb
xorl
push
xor
les
ficoml
stc
mov
inc
xchg
push
pop
inc
xlat
cld
js
cmpsb
scas
mov
cmp
or
mov
hlt
mov
fisttps
adc
add
dec
mov
push
loopne
in
jg
fsubrl
mov
mov
adc
sub
push
test
arpl
iret
imul
push
shll
sbb
lahf
adc
adc
cmp
in
sbb
pop
dec
cmp
ds
mov
pop
into
js
xchg
test
sbb
mov
outsl
adc
mov
sub
cmpsl
pop
mov
jo
sub
ret
push
sbb
mov
xor
fmul
sub
dec
sbb
cwtl
mov
es
add
scas
dec
jmp
mov
add
daa
mov
scas
xor
cmpsl
loope
es
sub
sub
subb
pop
test
cli
mov
ficomps
js
and
dec
cmp
fiadds
xchg
subl
cmp
clc
out
adc
mov
and
mov
cld
mov
mov
dec
and
push
dec
jp
sub
popf
add
leave
cmpsl
or
sub
sub
popf
outsb
xchg
pop
cld
leave
cmp
mov
pop
push
mov
xor
sti
fnstenv
mov
pop
mov
xor
das
divb
push
pop
mov
sub
dec
addr16
pop
jle
push
push
jge
mov
adc
inc
aaa
xchg
pop
dec
push
ja
dec
jbe
push
push
mov
dec
pusha
pop
outsb
dec
jg
xor
ss
lret
je
mov
call
xchg
and
insl
mov
sbb
mov
mov
or
int3
cld
xchg
push
clc
cli
addb
int3
ljmp
rcrl
es
mov
icebp
sahf
aaa
jns
mov
idivb
cmpsb
loop
or
or
jnp,pn
mov
lcall
sahf
xchg
pop
test
outsb
push
in
cmp
out
lods
movsl
loopne
sub
cmp
pop
xchg
lods
lea
clc
arpl
pop
iret
cmp
xlat
pop
ja
dec
pop
pop
into
cld
pop
push
cmp
daa
mov
sub
jbe
cmpsl
xor
and
xchg
sub
out
cli
cld
out
cmp
inc
inc
in
sub
jne
xchg
loop
subb
test
jmp
pushl
in
xor
inc
icebp
inc
mov
in
lret
jmp
shll
test
lods
repz
cmpsb
repz
add
icebp
in
pop
mov
pop
xor
mulb
mov
sbb
lock
adc
pop
cmp
mov
and
sbbl
test
pop
inc
fldcw
xchg
push
enter
mov
pop
pop
cwtl
dec
jmp
inc
aam
mov
test
or
cmpsb
in
fisubrl
pop
push
push
mov
loopne
enter
mov
mov
cwtl
mov
int
mov
xor
idivb
sti
xchg
dec
int
add
test
pop
imul
cli
cltd
mov
xchg
jno
je
es
out
and
mov
cmp
and
ficoms
repz
nop
lods
lock
adc
icebp
aam
mov
fwait
push
push
cmpsb
adc
sub
iret
daa
repz
cmpl
pop
jb
pop
adc
icebp
push
loop
sub
add
cmpsb
xor
pop
pop
cs
icebp
lock
mov
clc
iret
fistpll
xchg
push
roll
fs
sub
fcomps
stos
inc
ficoml
enter
lret
aad
and
out
fwait
arpl
pop
push
decb
mov
shlb
cmp
int3
je
mov
int
stos
rclb
movsb
iret
in
js
sub
outsb
push
in
or
xchg
das
data16
ds
sub
lock
lea
test
test
sti
add
push
push
in
inc
pcmpeqw
or
mov
loope
add
jmp
insb
pop
pop
xchg
outsl
or
pop
xor
enter
ficompl
dec
inc
mov
aam
rcll
adc
fdivrl
popf
loope
testl
mov
mov
sbb
adc
out
repnz
dec
jae
mov
sbb
push
fincstp
insb
xchg
pop
jmp
fistpl
or
js
ret
repz
iret
out
pop
imul
sub
icebp
mov
iret
inc
cs
inc
cmpsl
sbb
subl
or
pop
push
xchg
dec
test
pop
cld
inc
and
and
notl
xchg
repnz
mov
out
js
clc
pusha
sub
sub
scas
jmp
and
fmuls
push
stc
pusha
icebp
mov
das
lahf
rcr
sahf
pop
push
cmp
gs
mov
stos
dec
push
pop
sbb
push
addr16
pop
arpl
pop
loopne
push
out
and
dec
sbb
bound
cmpsl
adc
enter
dec
adc
fmull
and
cli
out
insb
push
adc
ljmp
fs
dec
pop
add
in
shlb
push
loope
push
pop
dec
inc
pop
cltd
shlb
nop
popa
or
and
jnp
sub
xor
push
js
sub
adc
mov
popf
adc
mov
aas
sub
add
jo
mov
sbb
in
shlb
inc
adc
fmuls
cli
inc
test
loopne
leave
pop
inc
pop
lret
inc
mov
jecxz
inc
sub
scas
sahf
mov
aaa
lret
add
pop
or
lods
fmulp
ret
dec
insb
pop
shl
adc
in
sahf
sub
pop
mov
ljmp
pop
add
jbe
jge
js
cwtl
mov
sarl
ja
adc
imul
xor
cmpl
loope
lret
pop
pusha
pop
shrb
popf
arpl
ja
add
pusha
dec
lret
js
mov
ja
jl
mov
repz
xor
cmp
arpl
cltd
outsb
sahf
ja
or
push
mov
inc
sub
cwtl
add
jne
arpl
sub
movl
daa
gs
aaa
and
push
out
inc
push
lret
mov
mov
shrb
arpl
cltd
andl
mov
xchg
xchg
mov
lock
push
cmp
cmc
xor
mov
or
jo
lock
dec
iret
dec
push
sub
in
loope
fnsave
fcmovu
xchg
ds
lods
xor
pop
mov
push
sbb
int
shlb
fstpt
and
ljmp
mov
mov
fnstenv
jae
icebp
xor
or
jle
ss
add
pop
in
and
jbe
inc
cmp
sub
jl
push
jae
aaa
out
add
je
jg
mov
adc
xchg
mov
fcoml
in
imul
shrb
cmp
addl
pop
jl
and
mov
mov
imul
push
int3
adc
pop
ss
xchg
sbb
mov
jnp
jne
or
ror
mov
test
push
in
jmp
fildl
add
fdivrs
jnp
ficoms
xlat
jge
cmpsb
jo
lock
xchg
hlt
pop
sahf
lock
lahf
mov
and
mov
pop
fmuls
lock
loope
js
sbb
aam
xchg
add
lds
push
adc
push
xchg
fdivrs
jmp
and
fmull
lret
pop
cmp
es
sar
fldenv
cmp
aaa
mov
or
fisubrl
fwait
xchg
fistpll
xor
negb
mov
test
flds
mov
dec
mov
xchg
dec
sbb
mov
mov
fcompl
and
cmpb
xchg
nop
scas
inc
andl
jbe
and
sbb
scas
pop
popf
call
push
push
mov
cli
mov
adc
jo
push
cli
fs
out
jecxz
or
pop
inc
xchg
repz
imul
ficoms
and
rcrl
push
push
mov
or
cmp
mov
mov
enter
sub
and
pop
jno
cli
jmp
xor
pop
out
into
jge
xorb
pop
stos
add
pop
scas
mov
and
cmp
jl
jp
fiadds
xorb
leave
pop
push
arpl
leave
push
fs
xchg
lods
or
xlat
mov
adc
fidivl
movsl
mov
dec
out
mov
and
flds
lea
cmc
fisubrl
sbb
dec
jbe
push
cmpsb
ret
push
xchg
xor
in
insb
push
push
repz
jnp
stos
roll
pop
rcll
sbb
pop
jae
xchg
sbb
rep
clc
imul
roll
dec
push
mov
or
stos
jb
dec
clc
stos
dec
push
add
cmpsl
cmp
mov
add
dec
sbb
test
push
fmuls
mov
ret
push
out
sbb
sbb
arpl
and
pop
xchg
cmp
inc
xlat
ja
out
xchg
into
sub
jbe
add
pop
bound
dec
mov
aas
push
subl
xor
popa
jg
lret
out
call
sbbb
mov
xchg
call
dec
xor
or
sahf
enter
mov
or
sbb
ds
push
imulb
jbe
repnz
ds
jmp
xor
sbb
sbb
stc
cmc
jl
dec
ljmp
sahf
and
es
cld
dec
outsb
imul
mov
insb
std
fldl
mov
xchg
and
mov
cwtl
cmc
add
mov
inc
mov
jecxz
add
push
and
xor
or
jecxz
add
stos
inc
pop
jb
fistpll
ficomps
out
mov
jmp
popa
adc
cmp
insb
pop
jg
sbb
mov
mov
xchg
xlat
dec
dec
andnps
sub
push
in
add
rcr
fildll
sub
or
or
out
sub
inc
cmp
xchg
sbbb
pop
jnp
jle
mov
push
xor
sahf
fmull
dec
cmp
adcl
xchg
frstor
sub
repz
addr16
sbb
adc
testl
cld
scas
hlt
dec
popf
push
dec
push
adc
scas
xchg
or
pop
mov
out
pop
sub
push
into
dec
jl
push
xchg
adc
aaa
jmp
and
jnp
xchg
test
xor
dec
sub
scas
ret
daa
ror
dec
sbb
sub
lds
add
adc
mov
and
pop
scas
push
loope
cmp
movsl
pop
add
pop
mov
push
mov
inc
mov
mov
mov
push
iret
fstpl
hlt
add
mov
fdivrs
dec
sbb
lret
jle
popa
insl
lods
repnz
into
sub
pop
lods
jl
lret
mov
je
or
lock
jp
mov
test
sub
sbb
jns
gs
or
xchg
and
arpl
mov
and
jecxz
shrb
mov
pusha
mov
or
pop
es
dec
pop
gs
repnz
inc
xchg
jle
xchg
dec
cli
ja
xchg
test
mov
sbb
mov
lahf
and
push
push
lcall
je
xchg
adcl
mov
cmpl
hlt
or
sub
dec
jne
out
sub
outsl
sbb
mov
arpl
xor
jns
testb
mov
call
sbb
jnp
jno
aas
add
or
idiv
jg
cmpsl
shrd
push
jge
test
pop
xchg
add
outsl
sub
scas
lcall
sub
cmc
and
adcb
in
sbb
push
inc
call
add
sub
pop
mov
in
in
jg
sbb
dec
pop
int
or
cmpsl
lret
arpl
fists
rol
cld
popf
insb
cmp
mov
ret
cltd
jae
jmp
jmp
test
or
mov
aad
push
sub
push
divb
inc
mov
insb
sub
jmp
dec
dec
xor
inc
rorb
bound
rolb
fistps
xchg
in
add
mov
sahf
pop
xchg
roll
mov
sahf
dec
mov
hlt
js
cld
mov
jp
sbb
inc
lods
xchg
in
das
jae
data16
inc
repnz
xor
popa
jmp
cmpsl
lods
mov
inc
out
inc
mov
push
cmp
xlat
in
ja
je
jne
add
test
jo
sub
xchg
lret
sbb
sti
adc
sti
inc
arpl
fisttpl
sbb
daa
mov
push
inc
incb
ret
scas
dec
cmc
push
cmp
roll
es
mov
aad
das
pop
jmp
shll
mov
stos
cs
inc
dec
xor
cmp
mov
shl
lret
adc
jo
das
ret
nop
stos
sub
mov
cld
mov
sub
bound
sub
mov
jno
cmpsb
inc
outsb
les
xor
testb
or
mov
mov
jmp
data16
ret
push
hlt
shrb
in
aaa
inc
inc
imul
cmp
bound
leave
test
das
xchg
roll
les
cmp
jl
aas
add
push
xlat
aam
push
inc
rclb
dec
push
nop
int3
xor
mov
add
fucom
les
lret
mov
js
pop
push
and
or
cli
xchg
adc
pop
xor
lods
lods
xor
and
pop
lret
add
movsl
iret
adc
les
dec
push
addr16
adc
mov
dec
add
and
stos
rcrb
mov
cwtl
xor
es
out
fdivrl
mov
dec
sub
mov
jmp
jae
add
nop
jnp
dec
scas
push
shll
loop
data16
into
test
mov
push
push
pop
jl
ss
clc
xchg
sti
rcl
call
or
xor
and
cmpsl
sub
jne
adc
and
sub
test
sbb
mov
je
movsb
sbb
sbb
jns
or
loop
stos
pop
lock
inc
outsl
sarb
cltd
cmp
outsb
cwtl
xor
popf
adc
push
ljmp
cltd
xor
or
andl
adc
andb
enter
movsl
rcrb
jne
cltd
jb
mov
adc
outsb
mov
cmp
imul
push
push
cwtl
pop
sub
xor
insl
pop
fwait
enter
or
cmpsl
loope
push
sub
ds
mov
jmp
sbb
and
push
pop
add
cli
add
lods
fucomp
xor
push
sub
loop
pop
mov
push
test
lea
sti
and
into
std
mov
fisubl
mov
sbb
mov
xchg
mov
in
cmp
into
inc
test
cmp
ds
push
or
fsubrp
lcall
push
arpl
gs
or
or
in
sbb
xchg
add
cmc
cmp
fcoms
push
insl
dec
adc
add
jle
insb
mov
sti
test
jo
mov
jp
and
dec
push
cli
cmp
sub
xchg
stc
push
pop
ffreep
orb
cltd
inc
frstor
out
arpl
push
out
daa
and
cwtl
test
jae
sub
test
je
mov
fisttpl
mov
xchg
sti
sti
adc
addb
xor
cmp
daa
push
dec
pop
nop
mov
add
icebp
add
call
pop
and
mov
int3
std
mov
and
add
pop
stos
mov
aaa
out
xchg
jmp
add
push
cmp
mov
lcall
stc
daa
mov
xor
mov
repnz
iret
inc
cwtl
jbe
arpl
fdivrp
fbld
outsb
adc
cltd
mov
lret
popf
inc
mov
int3
mov
push
jle
xor
mov
dec
mov
popa
and
pop
dec
addr16
xlat
outsb
decl
inc
xchg
mov
sbbl
leave
mov
cltd
in
int
sbbb
cmp
dec
inc
mov
maskmovq
mov
sbb
or
imul
mov
cmpsl
sbb
lock
out
repz
stos
lods
fistl
dec
dec
or
mov
add
sbb
pop
sbb
sbb
mov
or
jae
insb
mov
mov
cmpsb
lahf
ds
inc
fbstp
and
cltd
inc
mov
xor
gs
lahf
push
push
nop
pop
xor
jl
loop
into
add
dec
enter
jns
mov
lds
jl
jbe
push
out
xchg
xchg
popf
mov
aas
addr16
rcrl
push
pop
sbb
in
mov
mov
rol
or
push
xchg
push
in
out
cmpsl
cmpsb
pop
movsb
lcall
js
popw
call
fstpl
roll
out
jmp
xchg
mov
clc
cmp
sub
pop
jo
xchg
dec
add
in
xor
mov
cs
or
je
clc
sarl
push
out
outsb
xchg
int3
jl
sbb
xchg
daa
mov
mov
inc
sbb
jb
dec
scas
cltd
mov
and
cld
xchg
lret
adc
jge
push
pop
mov
sub
push
lods
push
cmp
loop
and
in
pop
adcb
push
pop
mov
aad
in
xor
mov
insl
sbb
xor
stc
icebp
pop
dec
push
das
push
rol
sub
push
pop
out
sbb
or
loopne
mov
sub
pusha
mov
push
fsub
gs
jo
sub
or
test
add
inc
and
ret
pop
out
fnstcw
push
mov
or
sbb
mov
pop
jle
imull
lock
orb
lahf
jb
movsb
ret
add
out
inc
jnp
pusha
push
leave
jb
hlt
or
mov
stos
mov
mov
loopne
lret
scas
mov
movsb
and
adc
stos
push
subb
mov
dec
pop
gs
add
push
shlb
stos
mov
cs
mov
fsubl
cmc
push
jge
imul
cmp
clc
lods
cmp
push
push
fs
pushf
and
stc
rclb
jle
ret
and
mov
sub
movsl
lock
pop
loope
jmp
inc
or
cmp
dec
jnp
sub
or
mov
and
aaa
js
mov
mov
out
ret
andb
cmp
sub
inc
dec
arpl
cmp
dec
mov
adc
lahf
cmp
js
sub
or
test
fadds
push
fs
or
or
cs
push
movb
pop
repz
cltd
aad
pop
pop
jge
adc
insl
dec
cwtl
jecxz
mov
sbb
faddp
cmc
mov
leave
or
pop
cwtl
add
ret
pop
push
cmp
bound
dec
and
inc
sub
divl
js
mov
sub
out
fimuls
hlt
mulb
or
incb
push
push
pop
fstp
mov
push
pop
sub
lret
push
cltd
xor
nop
ss
add
push
add
roll
push
sub
lcall
adcl
ret
push
cwtl
jae
jp
jbe
dec
dec
scas
shl
lcall
out
push
push
pop
jmp
or
jo
sbb
out
orl
xchg
mov
xchg
arpl
repz
xor
aad
push
push
int
fstl
cmp
out
into
fmuls
jae
cmp
push
adc
mov
jecxz
pop
mov
mov
push
pop
pop
pop
aas
and
mov
ret
inc
dec
sbb
dec
sbb
pop
arpl
adc
aaa
xor
xchg
mov
mov
js
jae
jb
mov
frstor
fldcw
mov
testl
in
lcall
add
stc
inc
call
lret
push
ret
loope
adc
mov
lret
adc
xlat
data16
push
sti
popf
pop
fwait
sbb
add
sub
jle,pn
int3
shl
iret
ljmp
add
cs
je
imul
inc
aas
cmp
cld
subb
mov
shll
outsb
lahf
lret
mov
push
push
inc
and
ret
mov
cmp
push
jbe
shlb
enter
jge
mov
stc
jmp
sbbb
sub
notl
iret
jmp
loope
outsb
push
mov
subl
xchg
in
add
pushf
mov
mov
scas
push
sbb
outsb
sub
fsubs
ffree
xor
in
adc
test
sub
rcll
in
mov
out
cli
ficoms
or
lds
lret
int
bnd
sarl
push
movsl
or
jl
xor
mov
imulb
mov
and
inc
into
mov
mov
xchg
lods
adc
out
mov
pop
fdivrl
popf
lret
in
sbbb
fs
or
shr
adc
mov
arpl
aas
pop
xchg
loopne
shrb
fs
in
shrl
bound
dec
inc
inc
aas
cmp
mov
mov
std
imul
cmpb
mov
nop
out
add
ud2
push
dec
out
mov
cld
out
jle
clc
roll
xor
inc
or
out
in
push
jecxz
lods
dec
gs
arpl
out
int3
das
test
add
push
inc
adc
push
das
sbb
int3
hlt
fmulp
add
jae
ja
mov
movsl
aam
sbb
xchg
stos
and
scas
add
inc
dec
insb
scas
movsl
adc
mov
inc
ljmp
or
ljmp
xorl
push
cmp
jl
ljmp
mov
or
or
and
sub
add
rclb
jns
aam
pop
dec
jns
pop
ss
mov
dec
and
rcrl
lods
in
sub
lods
iret
add
add
or
push
sti
shrl
leave
sub
dec
pop
pop
cld
sbb
fsubl
fcoms
cmpsl
scas
mov
inc
cmc
iret
inc
fldl
xchg
and
shrb
jb
pusha
cmovo
mov
xor
inc
ret
das
movsl
sub
dec
call
sbb
add
sub
lret
cmp
fucomi
ja
test
into
icebp
stos
dec
in
jp
pushf
ficoms
pop
cmp
add
scas
dec
ljmp
outsl
insl
fsubr
jl
je
inc
in
cmpsl
lods
pop
int3
jg
pop
jl
lea
pop
scas
iret
mov
aas
ljmp
adc
bound
push
push
pop
sub
scas
jl
dec
out
push
mov
cmp
add
in
mov
lea
add
inc
cmpsl
pop
fsub
testb
aaa
mov
jmp
mov
push
inc
bts
xchg
jns
mov
inc
mov
aam
cmp
dec
pop
out
iret
xchg
push
cmp
ss
pop
les
cld
outsb
jp
aam
enter
ljmp
pop
rep
xchg
fs
mov
movsl
cmpsb
dec
out
xor
adc
pop
inc
fstpt
sti
xchg
sbb
push
repz
mov
push
push
in
cmp
mov
jl
dec
lret
adc
fwait
lea
sbb
push
or
jae
mov
int3
fisubl
push
pusha
adc
fcoms
or
add
lret
pop
fwait
cmp
aaa
push
jecxz
mov
lahf
jg
pop
pop
adc
or
and
pusha
sbb
xchg
mov
xor
inc
mov
imul
xor
subb
dec
xchg
sbbl
mov
pop
je
mov
int3
pop
jbe
adc
mov
and
add
repz
mov
xor
imul
mov
xchg
ficoml
sbb
shrl
sti
enter
mov
les
pop
pushl
dec
int3
insb
xor
pusha
dec
neg
mov
in
mov
fiaddl
stos
mov
loop
cld
data16
stc
jg
push
xchg
rorl
adc
adc
cmp
lock
psrlq
shr
lret
cmpb
cmpsl
jg
adc
adc
aam
sbb
mov
movsl
mov
aam
loop
jae
fisubl
sub
addb
push
push
fneni(8087
loope
jle
push
sub
scas
and
les
or
pushf
movsl
imul
xchg
jns
lahf
divl
sbb
dec
add
xor
sub
cmp
lcall
inc
call
mov
test
add
push
add
xchg
xor
ds
cltd
push
xor
movb
sub
cmp
jecxz
popf
and
loop
or
pop
and
rolb
stos
movswl
fmuls
adc
cmp
insb
lahf
mov
das
inc
jle
or
xchg
nop
pop
xchg
lret
outsl
xor
call
sbbb
gs
mov
jg
dec
or
out
aad
xor
dec
xchg
pop
sbb
jp
adcl
int
out
push
inc
xor
mov
enter
dec
inc
pop
pop
mov
ret
and
cmp
shll
and
sbb
add
roll
fistps
mov
repnz
xor
xor
pop
es
jecxz
add
scas
fs
mov
xor
dec
add
inc
daa
xchg
outsl
xchg
xchg
ljmp
in
or
call
xor
mov
mov
iret
or
push
jmp
call
cmpb
and
xchg
je
shl
inc
jge
in
lock
call
add
jg
push
popf
push
ja
jp
loope
lahf
fdivl
fisttpl
clc
push
testb
cmp
mov
scas
push
mov
mov
fwait
push
adc
jne
stc
push
fmul
in
inc
shlb
push
mov
pop
xchg
cmp
shl
cmp
xchg
psrlw
pop
std
in
shl
int3
lret
sarl
mov
xchg
repz
jg
fsubl
xor
lods
pop
clc
pop
sbbb
ficoml
xchg
mov
test
push
inc
mov
scas
cs
inc
lock
sub
xorb
xchg
loope
jno
daa
adc
imulb
add
push
jae
xchg
pop
pop
adc
or
int
mov
sub
sahf
lods
mov
cmpsb
jb
jle
mov
xor
push
testb
push
movsb
in
and
loop
pop
push
mov
cmp
ret
jmp
xchg
addr16
jp
mov
push
insb
pop
insl
mov
sbb
push
jnp
and
xchg
xlat
or
sbb
cwtl
imul
imul
or
filds
xchg
lcall
mov
flds
jo
clc
jp
mov
rcl
pop
xor
sbb
mov
sbb
inc
dec
cmpl
cmp
mov
xchg
imulb
data16
push
cmp
add
dec
and
inc
and
ljmp
push
cld
in
leave
das
push
stos
push
inc
movsb
pop
push
cld
or
sbb
decb
sahf
mov
das
movsb
jmp
test
xor
ja
enter
les
decb
loopne
sbb
add
in
popf
jno
es
lret
sbb
fidivs
rolb
mov
and
xchg
cmp
iret
mov
loope
test
loope
sbb
and
cli
cwtl
ds
push
jae
and
xchg
dec
or
das
mov
mov
out
dec
out
sub
rcll
arpl
xchg
pop
inc
jns
mov
aas
dec
or
inc
xchg
pushf
ja
rcr
pusha
cmp
test
sbb
add
daa
fwait
cli
scas
add
decl
inc
push
xchg
lcall
sub
cmp
push
popf
movsb
xor
fs
std
scas
in
xor
movsb
bound
out
pop
pop
mov
mov
mov
pop
dec
dec
les
add
xchg
adc
sti
mov
sub
fildll
mov
call
jg
and
sbb
xor
and
cmovns
xchg
ret
iret
notl
inc
shl
in
int3
std
cs
and
sub
push
mov
add
outsb
ret
mov
fadds
push
lahf
add
outsl
xchg
jge
xchg
mov
pop
ficomps
sarl
xchg
mov
xchg
dec
inc
or
jns
jmp
sub
jb
adc
and
sub
in
stc
call
push
adc
and
sti
adc
push
mov
lcall
adc
out
lods
jecxz
mov
imul
adc
gs
std
push
movsl
ljmp
jnp
fbld
in
enter
andl
frstor
sbb
cltd
int3
and
call
cltd
lret
cmp
lcall
adc
movsb
inc
ss
inc
mov
dec
scas
cwtl
fldt
negl
lahf
jae
cltd
push
push
xchg
pop
imul
mov
xchg
fcomp
dec
cmp
test
fdivs
cmp
icebp
xor
sbb
rep
mov
fcoms
subb
pop
aad
hlt
jns
mov
inc
loope
sbb
sub
or
pop
dec
lahf
scas
xchg
inc
loopne
clc
xchg
cmp
fs
inc
xor
xchg
sahf
and
mov
scas
xor
jle
pop
stos
call
sbb
repz
addl
or
mov
mov
cmp
sbb
jnp
sub
outsb
xchg
sub
enter
pop
jns
mov
xor
add
xlat
nop
cwtl
lret
or
jae
ret
out
pop
mov
mov
or
rol
pop
mov
orb
jo
xchg
addb
stos
imul
fs
lcall
inc
sbb
pop
add
xchg
adc
inc
xchg
frstor
enter
outsb
imul
jg
push
push
outsl
fisubrs
pop
push
xor
ljmp
test
sub
fildll
icebp
loopw
adc
pop
test
outsl
lcall
jp
jo
in
push
cmp
iret
scas
mov
and
mov
xchg
xorb
cmp
cmp
xchg
or
xor
mov
fmuls
or
mov
push
inc
mov
mov
inc
cmpsl
lock
sti
inc
xor
dec
mov
or
je
pop
in
outsb
jmp
fildll
sbb
jae
es
fildl
xor
add
xchg
addr16
push
out
shrl
xchg
ds
movsb
insl
lds
fsubrl
sarl
frstor
push
or
in
pop
dec
push
and
lret
inc
int3
rolb
in
pop
ja
mov
incl
sub
cmp
sub
mov
pop
loopne
aam
lcall
mov
push
int3
adc
dec
dec
and
loop
ret
jb
aad
dec
pop
repz
jmp
fisubrl
pop
xlat
call
imul
mov
test
lds
dec
xchg
test
xlat
push
push
sub
xor
xchg
adc
mov
imul
lret
mov
jp
cs
cli
lock
out
movl
jnp
jbe
dec
aad
lods
loopne
mov
test
adc
dec
jmp
jecxz
jp
adcl
mov
fldlg2
jmp
adc
or
mov
leave
testl
jae
loope
push
mov
popf
cmovo
cltd
add
stc
add
jae
lcall
sbbb
xchg
outsb
lock
push
gs
popa
mov
iret
mov
outsl
mov
scas
movsl
dec
xor
add
insl
mov
enter
loopnew
and
push
cmp
xor
pop
adc
sbb
or
in
daa
in
movsl
ret
mov
test
lret
inc
push
inc
xchg
xor
in
mov
dec
ret
mov
test
movsl
pusha
xchg
inc
inc
xchg
ss
sub
pop
adcb
or
add
dec
push
push
pop
sub
ret
sub
lret
insl
in
pushf
mov
push
inc
fbld
sbb
sub
movsb
or
bound
add
xor
sbb
sbb
imul
xor
data16
iret
popl
and
inc
inc
xchg
add
int3
sbb
xchg
nop
push
das
push
pop
xor
dec
and
in
jo
bound
aas
icebp
xor
sub
mov
sbb
in
mov
jecxz
mov
stos
filds
clc
push
mov
popa
mov
je
sbb
jp
sbb
test
gs
xor
clc
mov
push
cmp
pop
inc
mov
inc
adc
mov
cwtl
push
push
push
push
adc
inc
lret
popf
mov
sub
decl
outsl
xchg
jecxz
cmp
std
imul
rorl
fs
xorl
mov
fildll
xchg
xor
fadds
movsl
xor
mov
dec
dec
jmp
cmp
cmp
addb
push
jmp
ret
xchg
das
xchg
or
fldl
mov
xchg
mov
sub
in
pop
out
lret
add
inc
and
dec
dec
les
and
pop
and
or
jle
shl
add
aam
insb
gs
dec
pusha
and
xor
xchg
mov
inc
xchg
mov
movsb
repz
int3
js
lret
cmp
ret
les
data16
sti
mov
fmulp
lods
inc
cmp
mov
pop
fldl
outsb
push
es
jle
add
shrb
xor
dec
cmp
xchg
lret
xchg
jb
adc
arpl
lret
sbb
mov
pop
in
in
mov
jns
mov
xchg
fnstenv
inc
lea
jecxz
dec
lock
fsubrs
ret
insb
add
sub
ja
xor
mov
jg
les
add
cmp
mov
clc
cmp
jg
orl
cwtl
fcmovbe
repz
loopne
lds
out
movl
pop
test
fisttps
push
cmc
pop
gs
mov
fsubs
loop,pt
mul
push
inc
mov
popf
sub
fistl
loopne
test
fimuls
or
inc
mov
sub
pop
rol
push
loop
loope
in
cli
out
or
lock
sub
stc
pop
cltd
sub
pop
nop
dec
push
xor
inc
imull
dec
sahf
cmp
fmuls
mov
aas
cmp
imul
mov
stos
xor
arpl
adc
mov
cmpsl
push
int3
fstl
mov
insl
aas
cwtl
inc
jecxz
mov
cld
out
mov
dec
xchg
cmp
xor
jg
mov
sti
cmpsb
adc
es
mov
inc
and
mov
push
push
add
xlat
imul
lret
push
push
lock
inc
jbe
mov
aas
xchg
movsl
mov
cmp
sub
or
push
jmp
pop
jp
jb
insb
data16
sbbb
mov
jae
xchg
adc
xor
and
jmp
mov
mov
inc
pop
outsl
dec
fldenv
insb
xchg
scas
outsb
jp
mov
jg
lods
dec
notb
adc
add
cmp
add
das
push
ret
and
fs
push
repz
int3
gs
daa
outsb
aaa
xor
rolb
sbb
test
in
sbb
js,pn
or
mov
push
jbe
add
xchg
add
add
cmpsl
mov
ret
sub
aaa
xor
sub
push
mov
mov
xchg
roll
sub
jecxz
pop
arpl
das
and
push
loopne
sarl
scas
add
push
mov
mov
shl
call
pop
pop
dec
unpckhpd
adcl
sbb
cmp
or
into
insl
mov
mov
pop
push
inc
jne
cld
stos
mov
xchg
std
in
sub
dec
xchg
inc
cmp
inc
xchg
in
imul
adc
dec
pop
pop
stos
mov
sub
mov
insl
and
cltd
cli
xor
jge
mov
in
fwait
add
xor
rorb
out
mov
mov
jecxz
stos
or
add
xchg
cmp
aad
xor
fcomip
xlat
mov
add
int3
add
xchg
stos
insl
enter
push
movsb
or
loope
out
jmp
pop
or
jmp
inc
lahf
inc
push
or
in
cmc
inc
fwait
or
pushf
mov
pop
jne
jecxz
icebp
mov
mov
test
mov
jno
push
sti
js
or
dec
xor
inc
sbb
jb
pop
dec
leave
lea
out
into
cmp
insl
add
enter
mov
gs
lods
ret
jmp
addl
test
jge
addb
dec
fidivs
pop
ss
cli
xchg
aam
and
and
testb
int
xchg
xor
lret
jb
pop
mov
repz
xchg
repnz
dec
mov
jl
inc
daa
and
notl
movzwl
out
xor
ret
cld
insb
lcall
add
xor
mov
mov
xchg
out
in
popf
sub
mov
cltd
sar
inc
jb
jae
dec
mov
mov
repnz
xor
shl
sbb
jge
pop
dec
mov
jle
ret
mov
or
mov
sbb
popf
ret
mov
or
push
mov
sar
dec
mov
dec
test
sub
iret
cmpsb
push
mov
cmp
lcall
aaa
pop
inc
mov
into
jle
call
push
push
mov
xchg
aaa
push
ljmp
hlt
mov
push
mov
fs
mov
pushf
jle
mov
es
push
and
xor
imul
mov
test
dec
sbb
mov
jnp
int3
inc
enter
pushf
sbb
jl
push
mov
xchg
cmp
xchg
mov
jne
sbb
in
test
ret
push
jbe
outsl
insb
push
lds
xorb
fldenv
sbb
jecxz
test
cmc
iret
and
pop
adc
cmp
mov
sbb
push
or
pop
scas
lods
inc
popa
dec
push
cmp
mov
cmp
in
fbstp
sbb
mov
hlt
xchg
inc
lock
jns
imul
aam
push
xchg
mov
cmpsb
adc
sbb
jae
sbb
or
push
sub
or
scas
clc
xor
shrb
jmp
imul
rorl
outsl
sub
mov
lret
dec
repz
xor
adc
leave
aam
jo
or
outsl
scas
push
and
or
pop
insl
enter
aam
rcl
pop
popa
mov
call
xchg
jmp
outsb
add
cld
out
std
xchg
xchg
xor
inc
dec
paddw
movsl
mov
leave
push
std
inc
imul
popf
jge
jmp
cwtl
cmp
pop
push
mov
idivb
pop
and
xor
jge
pop
mov
jl
scas
xchg
bound
scas
xchg
xlat
into
imul
inc
int3
dec
xchg
push
test
popf
cli
popf
cwtl
movsb
bound
in
mov
fimull
js
insb
jmp
mov
daa
arpl
dec
daa
push
dec
and
sub
jne
movsl
das
pop
add
fadd
pop
push
popl
push
xchg
rcrb
or
in
std
cltd
inc
jl
out
cmp
jp
jnp
mov
cmp
lea
iret
cs
push
jge
sbb
inc
test
cld
aaa
add
sti
nop
imul
jp
into
repz
negb
or
iret
daa
aaa
insl
sahf
lcall
fadds
or
push
mov
mov
cmp
loopne
in
xchg
pop
out
cwtl
adc
mov
sahf
sub
iret
les
add
add
jae
mov
xchg
jle
lret
aam
add
and
push
insl
out
inc
ss
push
inc
mov
daa
push
sbb
scas
and
or
imul
cmp
inc
sbb
push
cmc
cld
dec
xchg
stos
xchg
jae
jne
and
jnp
mov
xchg
dec
pop
or
push
push
dec
or
mov
mov
lods
pushf
int
jns
stc
add
fisttps
fisubs
lock
in
movsl
pop
mov
icebp
jne
adc
xor
push
aas
setne
xchg
or
imul
push
xor
xchg
lds
cvtdq2ps
xchg
into
or
pop
push
pop
or
mov
scas
adc
sbb
push
push
imul
pusha
jg
fnsave
adc
mov
dec
test
test
enter
mov
mov
js
fildll
insb
inc
adc
add
arpl
lods
aam
insb
das
rcr
pop
mov
mov
push
cld
mov
outsl
jge
bound
add
xchg
popf
repz
popf
pop
lds
popl
pushf
stos
push
loope
mov
hlt
cmp
frstpm(287
sahf
mov
jge
adc
adc
jo
stc
dec
pusha
loop
in
test
popf
jg
aas
lds
mov
mov
and
fnclex
xlat
xchg
daa
sahf
inc
adc
jbe
sbb
insb
xchg
sub
enter
mov
lock
pop
push
outsl
scas
and
mov
imul
cli
dec
xchg
clc
aaa
or
push
shlb
push
adc
insb
adc
inc
nop
nop
lds
fdiv
pusha
jg
xchg
push
loope
loope
dec
arpl
inc
push
movsb
insl
fxch
sub
jb
daa
addr16
sbb
push
xor
and
dec
push
push
int
sbb
dec
xchg
adc
fildl
push
arpl
jmp
dec
jg
inc
mov
adc
ljmp
inc
xchg
outsl
mov
in
clc
test
inc
push
nop
jle
cltd
rcl
fistpl
lea
subl
and
js
aam
jbe
test
sbb
mov
sti
add
mov
push
repnz
rcr
push
inc
xchg
addl
or
add
fistpl
daa
mov
stos
roll
lahf
cli
iret
loopne
sub
loop
mov
insb
fldl
or
mov
push
nop
jg
pop
fisubl
or
xchg
hlt
or
push
in
mov
dec
jnp
push
imul
sub
js
sub
adc
mov
jp
inc
nop
jno
mov
or
subl
fwait
mov
mov
xchg
cmp
or
xlat
aad
jl
mov
xlat
das
addr16
inc
sbb
std
push
mov
add
stos
or
add
dec
ja
fs
test
pop
roll
jge
int
sub
sub
and
mov
out
cs
ljmp
insl
in
push
out
mov
je
xchg
inc
dec
lods
add
xchg
jge
pop
dec
dec
je
movsb
or
pop
test
jns
dec
xor
mov
xchg
stos
or
stos
push
sub
pop
imul
xor
cld
hlt
and
adc
aas
into
jp
xor
cmpsl
xor
add
adc
in
mov
sub
arpl
dec
cmp
aam
popf
mov
sbb
movb
js
jecxz
inc
sub
mov
pusha
cmp
pop
cmp
icebp
std
xor
push
pop
js
push
loopne
sbb
sub
daa
das
test
nop
dec
test
xchg
fisubrl
iret
in
sub
dec
and
mov
loope
sub
push
mov
scas
adc
sbb
imul
sub
dec
dec
xor
shrb
leave
pop
jns
ret
andb
xchg
push
pop
jg
pop
dec
aam
es
jmp
xchg
shrl
orl
aam
push
pop
daa
sub
lret
ds
push
sbb
pop
int3
jno
mov
icebp
or
and
bound
roll
popa
test
hlt
and
aas
dec
pop
jnp
jge
scas
stos
push
fcmovu
popa
mov
clc
add
xor
aam
mov
mov
pop
push
cmp
fmulp
fs
sub
clc
imul
push
test
sbb
js
xchg
xchg
mov
in
popa
mov
imul
loop
sub
fadd
clc
xor
lods
pop
lahf
dec
mov
cli
adcb
sub
ret
push
mov
jae
loope
cwtl
loope
shlb
xor
dec
xor
repnz
rorl
mov
aad
push
mov
lret
sarl
shlb
and
adc
int3
and
ret
push
orb
inc
xchg
sbb
xor
adc
je
lret
mov
icebp
js
aaa
ja
cs
sub
ss
fildll
mov
int
subl
mov
cmp
nop
ds
cmpsb
pushl
insl
lea
and
repz
ss
scas
lea
or
out
jnp
mov
fwait
xchg
mov
sbb
xchg
xchg
push
mov
std
mov
insb
enter
add
xor
push
mov
push
mov
xor
ds
lods
fsubp
popf
and
test
or
cli
push
enter
push
dec
and
jl
jae
ret
mov
enter
and
sbb
in
jecxz
mov
test
aam
popl
mov
dec
shl
xor
lods
add
mov
jo
in
pusha
push
and
ret
mov
cmp
out
or
rcll
add
mov
rcll
mov
loopne
pop
push
call
fists
cmpsb
xchg
cld
pop
icebp
jnp
push
mov
inc
or
repz
mov
push
cwtl
mov
mov
adc
inc
in
insb
add
cmc
inc
pop
lea
xor
push
cmc
push
cld
inc
fwait
loop
mov
or
jg
lds
sub
pop
mov
dec
fwait
lock
in
jb
mov
cld
es
std
sti
fsubl
lock
fsubl
sbb
xchg
push
stc
cmovns
and
inc
mov
mov
mov
adc
mov
cmpsl
js
fcompl
lds
arpl
xchg
push
jle
push
sub
cli
and
pop
add
xchg
out
sbb
cld
outsb
jae
call
cmp
jns
mov
mov
fmuls
ret
repnz
in
dec
add
lds
mov
mov
inc
out
pop
jmp
lock
outsl
jns
pmullw
arpl
jo
popa
pop
rclb
lret
mov
mov
sub
xchg
sub
fstpt
negl
jecxz
or
push
pop
in
in
mov
dec
rorl
xor
push
add
pop
stc
js
push
nop
mov
mov
bound
out
gs
es
stos
mov
mov
inc
jle
sarl
arpl
loop
fsubrl
inc
mov
jnp
sub
or
jne
std
sti
aas
cmpb
sbb
pop
shll
or
mov
lret
adc
push
or
repz
stc
mov
or
shlb
and
pop
outsl
leave
pop
out
jbe
fbstp
dec
jle
ficomps
push
in
push
push
cld
lea
cld
inc
das
mov
xchg
arpl
lret
xchg
push
pop
cs
push
aaa
or
cltd
xor
sub
mov
sti
shr
xchg
adc
js
sbb
jne
xor
pop
scas
insb
mov
insl
pusha
enter
mov
adc
lea
in
cmp
arpl
addr16
movq
je
lods
pop
outsb
mov
pop
mov
push
movsb
lahf
xchg
sub
dec
daa
int3
push
testl
inc
call
les
sub
cmc
pop
sbb
dec
mov
cltd
pop
and
fs
mov
mov
lcall
sarl
sub
movsl
add
cmp
xchg
xchg
ljmp
sub
test
adc
inc
addr16
inc
and
iret
fsubl
xor
inc
gs
mov
and
inc
scas
in
mov
clc
add
mov
push
rcll
ss
mov
ds
xor
adc
test
addl
push
lret
outsl
lcall
cli
loop
out
add
fiaddl
sbb
jecxz
int
out
mov
in
pushf
cmp
sub
cmc
add
out
xor
pop
sahf
xorl
xlat
push
sbb
jno
lods
sti
cmc
int
int3
js
mov
or
sar
ss
orb
mov
std
push
sbbb
sub
dec
mov
test
xor
sub
add
aad
mov
js
repz
xor
aad
dec
cmp
push
insb
add
xor
fnstcw
jno
xor
inc
or
mov
push
lea
inc
mov
inc
xor
ds
inc
push
cli
sub
lahf
insb
divl
ficompl
pop
lret
into
jle
add
sbb
daa
jle
test
jmp
xor
xor
subl
out
inc
mov
test
fistl
cmp
cld
xor
popa
and
fldenv
add
das
jno
sub
push
int
fisubs
shr
insb
daa
dec
mov
add
movsb
jmp
mov
imul
adc
pop
sbb
xchg
or
sti
pop
lret
nop
lahf
push
push
or
pop
mov
fdivrs
lock
jae
inc
or
cs
insl
push
es
xchg
into
jb
mov
into
and
ficomps
xor
aas
fwait
xor
imul
pop
jg
stos
dec
test
add
test
hlt
addr16
pop
lea
in
push
or
rolb
sar
mov
dec
cltd
or
sub
mov
lcall
cmp
sbb
push
and
and
adc
es
add
test
mov
jecxz
jg
lret
cmp
sub
in
cmp
or
pop
sub
inc
adc
shlb
xor
lods
enter
pop
lods
sub
ss
int3
aad
adc
cmp
mov
js
lea
sub
push
pop
cmp
or
jae
mov
adc
xor
iret
out
or
aam
movsb
lock
mov
out
xchg
inc
pop
inc
xchg
subb
insl
and
dec
jmp
js
inc
fnsave
pop
sbb
out
mov
outsb
test
stos
into
xchg
mov
imul
js
cmpsb
cmp
fldl
iret
inc
int3
stos
pop
xor
mov
pop
inc
jno
js
in
mov
mov
jb
jmp
imul
jb
xchg
cmp
sbb
push
dec
lret
and
xchg
mov
aad
push
dec
pop
mov
inc
jmp
cmp
imul
add
sub
nop
adc
aaa
xchg
lret
ljmp
or
sub
push
fucomip
xchg
addl
pop
inc
jecxz
cld
inc
cli
stc
lods
inc
mov
shrl
xchg
div
adc
or
and
mov
sbb
push
adc
icebp
and
or
mov
in
sbb
addr16
in
hlt
sti
inc
and
stos
add
pop
and
je
ret
ds
aas
test
stos
movsb
hlt
mov
in
jnp,pn
aaa
js
sbb
push
insl
xchg
test
sub
ja
mov
test
pop
jo
lods
cmp
xor
movsb
inc
movsb
flds
inc
mov
push
in
sti
sub
cmp
lret
sub
xchg
pop
fidivs
inc
xchg
out
pop
dec
loopne
xchg
aaa
ljmp
shrb
fisubrs
cmpsl
stc
sub
orb
dec
popf
js
mov
in
xchg
fcompl
mov
xchg
out
sbb
aas
je
sub
jns
out
test
orb
scas
pop
iret
jge
dec
xchg
movsb
das
push
addb
ret
shrl
enter
call
or
les
xchg
mov
xchg
test
mov
rorb
outsb
push
cmp
xchg
jb
ja
nop
mov
cmpsl
iret
rorl
stc
fcoms
inc
loope
add
xorb
rclb
lea
int
popf
outsb
stc
cmp
xor
xchg
xchg
insb
mov
sub
push
aad
mov
mov
dec
or
dec
not
jmp
sbb
add
mov
adcb
jno
mov
cmp
xor
jl
cmc
sub
fildll
mov
inc
push
notb
push
jno
push
jmp
mov
pop
test
lock
sub
mov
ficoml
mov
xor
inc
das
div
scas
dec
cmp
insl
adc
cwtl
jle
enter
inc
mov
inc
rolb
in
cmp
xlat
inc
jp
push
mov
lods
pop
or
repnz
std
js
xchg
test
xchg
inc
ret
push
mov
cli
add
into
mov
mov
test
cmp
arpl
jge
xchg
rcll
les
jge
cmp
dec
test
mov
gs
xor
rcl
mov
stc
pop
jno
mulb
add
inc
and
xchg
push
cmpsl
es
jno
push
in
jno
pop
pop
or
rcr
inc
pusha
xchg
ja
out
xchg
scas
jno
and
outsl
loope
sbbb
mov
jo
ljmp
das
fldcw
rcll
je
popa
or
mov
sbb
mov
lea
lret
cmpl
ret
leave
mov
mov
in
pop
push
call
jnp
push
dec
jb
xlat
cmp
fmul
sub
mov
push
leave
xor
lahf
les
pop
aad
pusha
or
testl
inc
insl
ffree
mov
cld
mov
loop
in
cmc
subb
in
adc
lds
add
sahf
add
cs
xchg
and
cmp
sbb
and
mov
push
mov
je
add
push
sub
ss
stc
pop
add
adcb
sahf
adc
mov
jno
pop
inc
je
icebp
test
jecxz
stos
fucomi
leave
lods
cmpb
and
shrb
mov
pusha
or
movsb
loope
adc
iret
bound
inc
adc
inc
and
and
xchg
jmp
out
mov
jne
pop
sahf
sub
push
pop
xor
dec
addr16
or
imulb
enter
xchg
popf
lods
cmpsl
das
adc
mov
sbb
cmpsl
sbb
cmp
mov
outsl
stos
pop
outsl
cmc
insb
movsb
inc
das
add
mov
xchg
sti
mov
jl
jae
xor
jnp
lods
jno
leave
add
stos
sbbb
pop
jae
mov
cld
mov
or
jbe
or
mov
fldenv
aad
jge
out
cmp
sbb
pushf
scas
jg
outsl
fldl
out
sub
xchg
sbb
dec
stc
jp
std
inc
push
or
sbb
mov
mov
aam
imul
or
popf
mov
push
lds
stc
push
in
push
imul
fimull
inc
pop
imul
xchg
sbb
fwait
mov
lahf
popf
lcall
fldcw
cmp
ja
dec
scas
lret
lea
push
fistpl
cmp
cmp
icebp
xorl
and
jp
mov
lret
test
fstpl
fwait
sbb
add
icebp
in
sbb
jmp
mov
jno
push
or
mov
mov
insl
jnp
cwtl
lahf
jno
test
int3
aaa
xchg
jle
repnz
pop
add
cmp
cmpsb
and
andps
js
loop
pop
ljmp
xor
sub
inc
repz
repz
ret
negb
stos
pop
test
imul
iret
lret
mov
jl
pusha
adc
dec
shll
or
sbbl
fidivrl
pop
test
mov
test
popa
icebp
xchg
daa
mov
or
mov
sbb
xor
jmp
out
add
jno
push
hlt
adc
jp
stc
and
frstor
mov
cwtl
add
inc
les
add
gs
loope
in
dec
out
sub
fwait
mov
adc
iret
pop
nop
or
jecxz
lcall
pop
add
inc
aam
sub
mov
mov
jle
out
xor
jne
shrb
mov
jo
jb
imul
into
sub
into
push
repnz
jmp
xor
mov
mov
xor
lret
sub
imul
cmp
push
iret
aaa
push
shr
addb
out
inc
or
inc
in
ja
mov
mov
cmp
repnz
or
xor
leave
imul
fs
push
push
imul
pop
jmp
daa
in
push
or
ficoml
sub
out
stos
leave
mov
in
jl
shr
in
jne
in
pop
dec
shlb
lcall
movsl
out
fisubrl
jb
popa
push
jp
test
and
push
cmp
jnp
dec
ljmp
xchg
dec
fdivs
rclb
in
push
mov
push
sbb
je
mov
jmp
cmpsl
lret
mov
fdivr
mov
and
fnstenv
push
jbe
add
sub
push
lar
lea
jmp
test
xor
idiv
stos
sub
push
ret
movsl
popf
inc
mov
sbb
pushf
out
cltd
dec
dec
fmul
ds
jmp
and
ja
cmpsb
sahf
mov
lods
in
jno
sbb
dec
jb
push
aaa
mov
xor
cli
fcoms
pop
in
movsl
fwait
stos
arpl
mov
push
cltd
fmulp
fs
xchg
xlat
hlt
jae
aas
test
cmp
fistpl
in
loop
imul
mov
sbb
xchg
sbb
stos
jne
stc
icebp
bound
test
enter
daa
loope
repz
mov
push
bound
xchg
xchg
popf
push
and
daa
scas
mov
outsb
jl
pop
add
push
flds
into
cltd
xchg
addr16
pop
fimuls
loopne
and
and
popf
cltd
dec
fisttps
push
cmp
mov
pop
lahf
fdivs
cwtl
filds
sbb
sbb
xor
aad
lcall
adc
inc
push
scas
pop
dec
xor
push
cld
sub
data16
inc
inc
out
inc
mov
sub
xchg
popf
or
or
push
pop
scas
aam
push
leave
xchg
and
movq
add
cmpsl
stos
ss
mul
scas
outsb
imul
xor
cmc
and
loop
popf
movsl
inc
sbb
jg
iret
xor
inc
pop
mov
or
inc
pop
ljmp
mov
cmp
lahf
jns
sbb
data16
jmp
push
aad
fwait
pop
adc
jle
push
push
hlt
and
fsubl
push
push
ret
movsb
lahf
mov
adc
lods
jnp
in
mov
and
dec
lcall
cmp
mov
inc
imul
mov
xor
fs
mov
sbb
mov
mov
std
jp
popa
subl
cmp
testb
mov
repz
adc
ret
cltd
rol
adc
sbb
xor
inc
inc
fs
aam
insb
loopne
jp
pop
pushf
pop
fwait
dec
mov
add
sub
sti
stc
fxch
xchg
leave
dec
adc
jmp
push
test
push
int3
inc
fists
enter
sub
jl
sub
scas
mov
jmp
jns
aaa
jmp
cmp
xor
das
out
inc
dec
sub
jecxz
in
xchg
sbb
cmc
xchg
mov
insl
in
jb
data16
mov
rorb
aad
mov
mov
mov
sub
imull
xlat
decl
sub
test
gs
out
pop
je
push
mov
sub
cmp
loop
hlt
icebp
cmp
mov
pop
push
adc
jno
pop
pop
pop
pop
adc
aas
mov
sbbb
dec
jno
outsl
cmp
sub
add
and
pusha
xor
sbb
cs
aad
fmull
and
mov
dec
jb
outsl
test
inc
xchg
pop
ror
mov
fs
call
and
ss
orl
mov
xchg
push
xchg
push
out
pusha
enter
or
ss
dec
and
pop
xchg
ret
xchg
aad
or
push
not
inc
jg
mov
sub
dec
subb
inc
push
mov
pop
mov
mov
adc
out
mov
inc
pop
lds
int3
add
rol
test
dec
and
bound
repnz
in
repz
xor
add
in
push
inc
jb
mov
pop
cwtl
jmp
insl
in
inc
insb
call
and
push
test
cmp
int
or
xor
and
pop
popf
test
sbb
es
scas
add
add
or
cmp
jno
jbe
mov
repnz
shrb
jo
jnp
mov
jp
stos
imul
and
xchg
stc
adc
sbb
mov
aad
adc
xchg
pop
sbb
and
lret
sbb
hlt
insb
inc
xor
push
and
dec
subb
inc
nop
cmp
mov
pushf
test
les
pop
mov
cli
scas
popf
adc
test
cmp
imul
push
je
fdivrs
sub
lods
xchg
scas
jae
cmp
xor
mov
pop
popa
push
adc
dec
scas
repnz
sub
dec
xor
and
mov
jl
fistps
and
pop
mov
jmp
rcrl
imulb
cltd
inc
sub
test
loopne
out
sbb
cs
stos
pop
cld
pop
push
bnd
adc
insb
dec
fisttpl
test
ja
xor
or
mov
mov
stos
cmp
pusha
in
mov
sub
and
or
loope
das
mov
sub
jmp
leave
enter
fists
xchg
std
xchg
adc
push
and
push
mov
cmc
pop
dec
cmpsb
jge
arpl
ljmp
mov
cmp
mov
fdivrl
mov
dec
dec
jl
push
in
sbb
xchg
jo
or
lea
dec
push
frstor
out
cmp
mov
pop
mov
outsb
fisttpll
cmp
lock
pop
test
mov
lea
cwtl
popf
jle
mov
pop
fs
outsb
xlat
gs
jae
sub
sti
jo
loope
xchg
cmpsl
mov
cmp
dec
dec
adc
jg
out
lea
popf
sub
loop
sbb
inc
mov
push
cli
and
xchg
inc
call
sub
add
inc
mov
pop
xchg
loop
fcmovu
aaa
xlat
ret
and
out
mov
ds
decb
mov
movsl
xchg
stos
lods
xor
mov
push
cltd
adc
mov
push
pop
adc
std
cmp
inc
xorl
xorl
leave
imul
push
and
jne
lret
sub
inc
mov
mov
fwait
aam
sub
mov
and
jecxz
sti
mov
mov
pop
jp
cltd
out
mov
mov
cmp
in
push
repnz
mov
and
mov
cmp
mov
add
into
inc
pop
ret
mov
mov
out
inc
or
sub
cltd
loopne
out
mov
loope
testl
pop
shrb
outsl
lock
xchg
rcrl
cltd
mov
cli
jg
xor
ss
test
lea
jecxz
inc
dec
loopne
aaa
adc
or
loop
push
out
dec
sub
cmp
rol
cmpsl
xchg
dec
xor
popa
sub
ljmp
sbb
popl
pop
and
stos
fprem
sti
mov
loope
push
add
xor
aaa
loop
mov
cld
jg
push
mov
insl
cmove
popf
insl
enter
adc
inc
call
pop
gs
lods
fsubrl
xor
pop
rorl
arpl
pop
lock
dec
xchg
xchg
sbb
lds
mov
pop
add
cwtl
insl
gs
or
loopne
sbb
cli
movsl
repnz
in
jl
les
inc
push
push
inc
xchg
xchg
lahf
dec
fisttps
jns
cmp
es
insb
icebp
lods
mov
dec
jmp
out
xchg
stc
and
dec
push
movsl
jg
adc
pop
lock
mov
popa
ret
mov
sub
xchg
insl
popf
js
push
into
repnz
int3
imul
push
xlat
mov
adc
sub
out
cmpsb
and
or
fwait
lods
sbb
sbb
jl
mov
insb
fldpi
add
mov
imul
add
cmc
push
add
xchg
cmp
fisttps
test
fs
mov
xchg
in
sub
std
pop
fisubs
xor
inc
leave
adc
lret
adc
pop
imul
add
mull
push
jne
push
fdiv
std
mov
hlt
mov
mov
add
inc
es
and
cmpsb
add
pop
dec
into
mov
aas
pop
daa
lods
mov
push
je
jno
testl
mov
xchg
sbb
outsl
fwait
mov
mov
int
cmpsl
sbb
sbb
test
pextrw
and
inc
rol
or
shr
fwait
cmpsb
mov
jno
stc
xchg
test
mov
sahf
xchg
aas
cmp
push
push
xchg
shlb
pop
pop
into
add
stc
jno
add
add
std
movsl
int3
pop
sub
out
xor
fcmovne
imull
xchg
lcall
mov
mov
push
sbb
in
in
divl
lcall
scas
ds
popa
into
xchg
leave
push
aas
scas
lret
fsubrp
sbb
and
mov
dec
test
push
fsubrp
jbe
xchg
imul
inc
mov
sti
dec
pop
pop
jbe
and
icebp
xchg
or
push
in
add
or
repz
rclb
mov
faddl
pop
incb
mov
or
mov
inc
push
dec
fbld
data16
dec
ret
int
lds
lcall
xchg
xor
mov
popf
aaa
lock
addr16
shrl
push
jle
sbb
fstpt
sub
push
mov
dec
lods
push
inc
aas
mov
xor
lock
mov
nop
cmp
fimull
push
insb
mov
jbe
dec
outsl
int3
cmc
lods
add
dec
push
test
test
and
into
cmpl
and
mov
mov
daa
mov
xchg
sub
inc
mov
mov
cmpsl
stc
xchg
out
iret
inc
mov
pop
mov
pop
fwait
push
mov
inc
push
sbb
xorb
push
test
les
xchg
dec
sahf
push
adc
dec
sbb
test
loopne
adc
xchg
mov
or
dec
mov
push
clc
popa
add
and
mov
jp
xchg
adc
push
fwait
jb
test
mov
pop
mov
adc
cmp
subl
pop
nop
xor
add
mov
mov
sbb
jno
ss
push
cltd
jmp
sbb
scas
fimull
hlt
mov
fcoml
leave
adc
push
mov
lods
dec
cltd
mov
pop
loopne
icebp
inc
dec
pop
jge
int
mov
and
sahf
jle,pn
in
jb
jg
sti
pop
js
jg
sub
pop
pop
xor
imul
push
jb
out
adcb
mov
xchg
sub
xchg
push
stos
mov
push
test
push
aas
mov
or
lds
out
stos
fdivrs
xchg
ficompl
shl
lods
addr16
pushf
aas
loope
maxps
jg
jecxz
fdiv
scas
jns
cmp
dec
pop
sbbb
mov
cmp
adc
sub
pop
test
ds
sub
test
xor
inc
loopne
add
xchg
and
mov
ljmp
test
imul
in
adc
sub
test
pop
aam
pushf
inc
enter
and
push
lret
popf
sahf
rcl
cmp
xor
mov
push
lds
rolb
sbb
in
adc
aad
adc
es
cli
iret
lea
jmp
addl
shll
jb
xchg
aam
jne
adc
push
mov
pop
cld
mov
orl
add
rorb
mov
pop
and
push
mov
lods
lea
popl
dec
orb
icebp
aad
pop
jne
orl
lods
out
dec
sub
loop
cli
xchg
daa
call
pop
aas
hlt
push
test
mov
lods
cli
and
outsb
mov
ret
dec
in
lods
xor
aad
dec
add
in
push
bound
pop
mov
inc
xor
cmp
dec
stc
mov
decl
inc
jge
cltd
sbb
push
icebp
orb
popf
jno
movsl
and
sbbb
enter
sub
mov
jae
aaa
mov
nop
andl
loopw
pushf
cmp
ror
jns
push
invd
out
mov
xchg
push
js
leave
ret
movsl
dec
mov
pop
hlt
sub
xchg
inc
sbb
sar
xchg
cs
rcrl
xor
mov
sbb
cltd
xchg
jg
mov
aaa
jg
popa
mov
flds
ret
sub
mov
sarb
mov
ss
inc
movsl
insl
cli
cmc
mov
shll
or
mov
ret
push
dec
push
loope
jp
std
aaa
mov
ret
aam
push
scas
mov
jb
jo
popa
cmpsb
jne
xlat
out
movb
mov
add
mov
inc
fdivs
jmp
addr16
xchg
mov
dec
icebp
inc
adc
fmul
fs
lcall
push
pop
and
stos
daa
mov
sahf
test
cmp
ret
inc
mov
aas
ljmp
cs
xor
outsb
jle
xor
pop
movsb
arpl
add
xlat
cmp
in
jle
mov
roll
std
cltd
sbb
pop
cmp
sub
jno
decb
sub
cld
icebp
movsl
and
push
int3
push
shrd
stos
icebp
mov
mov
and
fstpt
dec
aad
popf
and
sbbl
xchg
xor
pusha
xchg
add
push
bound
pop
sti
adc
inc
mov
cld
cmp
push
xchg
cltd
fwait
out
ret
into
mov
or
shlb
shrb
adc
aaa
mov
mov
stos
and
call
movsl
inc
push
jecxz
icebp
loop
jb
mov
lret
jb
or
mov
xchg
pop
and
movsb
outsb
add
push
mov
out
pop
add
aam
jg
xchg
sbb
rolb
sub
call
mov
inc
lods
or
js
sbb
icebp
in
jo
push
push
insl
pop
dec
daa
jl
sbb
lods
jb
jl
push
and
add
bound
or
add
push
cmpsl
jecxz
or
adc
sub
jae
push
inc
test
sbb
adc
xor
push
jae
cld
jae
nop
push
jecxz
into
call
mov
idivb
repnz
adc
fldt
and
fcmovne
ljmp
jge
mov
and
addr16
fbstp
adc
inc
outsl
xlat
push
push
fwait
xor
push
sub
xchg
test
loopne
movsb
inc
sub
lods
insl
mov
dec
mov
je
jmp
pop
and
push
jp
cli
push
addr16
repnz
sub
loopne
ret
push
fiaddl
jmp
test
lret
test
jle
ftst
xchg
push
xor
adc
cltd
sbb
cmp
ds
and
fiaddl
mov
adc
in
pop
shrl
inc
mov
aas
nop
addr16
movsl
clc
jle
mov
test
push
add
jnp
cltd
ja
dec
enter
negb
pop
jnp
mov
xor
pushf
and
in
lcall
mov
pop
adc
mov
cmp
xchg
nop
outsb
jns
mov
ja
inc
xchg
sub
daa
push
jb
bound
mov
mov
sbb
pusha
imul
jnp
aas
arpl
xor
loopne
mov
mov
xor
es
aas
out
lret
mov
out
xor
data16
pop
push
ljmp
rcrb
add
push
cmp
lds
sbb
cmpsb
push
enter
or
scas
dec
push
add
dec
xchg
hlt
insb
jp
jmp
xor
mov
in
in
inc
add
mov
or
xchg
or
pop
shrl
in
mov
xor
popf
fldl
pop
ljmp
inc
or
mov
lahf
jg
popf
movsb
xchg
pop
xchg
int3
adc
ret
in
jl
fcmovne
icebp
clc
cwtl
insb
and
ret
fistl
cmpsb
inc
sbb
inc
and
jns
inc
scas
xor
je
cli
xchg
mov
int3
mov
in
ror
call
or
and
ret
cmp
mov
dec
mov
push
sbb
push
rorb
cmp
movsb
ss
mov
das
jle
fcmovbe
aas
sbb
cltd
dec
sub
imul
js
out
bound
clc
daa
ja
adc
mov
leave
jp
sbb
in
xchg
shrb
in
adc
ja
jae
inc
sub
pop
cmp
cld
aad
aad
ret
or
fcomp
addr16
enter
push
sbb
dec
lret
bound
xchg
pop
out
in
cmp
mov
aas
leave
dec
inc
cmpsb
push
aad
daa
imul
xchg
dec
jns
xor
mov
or
cmpsl
inc
shrb
pop
test
mov
lods
inc
adc
fidivrs
adc
stc
insb
sub
mov
ja
movsb
test
and
jp,pn
sti
test
mov
rcrb
enter
pop
mov
in
cld
enter
stos
pusha
mov
das
xchg
mulb
cmc
stc
or
inc
and
xor
or
jmp
or
sub
sbb
inc
or
and
mov
sbb
mov
dec
sahf
sbb
cld
testb
add
push
loopne
aas
mov
hlt
cmp
or
pop
xchg
jl
xchg
jo
push
mov
ficoms
cmpsb
jle
mov
and
int3
dec
adc
jb
xlat
mov
out
or
push
or
add
in
pop
adc
push
movsb
ficoml
xchg
add
addr16
sub
adc
pop
rorb
push
add
dec
lea
gs
add
fistpl
scas
and
mov
lret
add
fwait
roll
xor
jns
adc
setge
push
sbb
jp
cmp
fsubrl
rcr
and
call
lret
and
cltd
jmp
dec
jle
out
lret
mov
mov
and
je
stos
pop
and
inc
adc
in
inc
pop
aaa
lahf
loop
sbb
daa
cli
mov
or
enter
insb
inc
sbb
lea
and
cmc
cmp
adc
add
icebp
repz
hlt
test
icebp
sbb
popf
rorl
pop
leave
push
xor
cli
pop
clc
add
imul
hlt
fisttps
into
xchg
inc
xchg
test
addr16
inc
push
fisubs
in
fucompp
mov
adc
aad
fs
mov
movsl
mov
xor
pop
mov
jo
arpl
push
cmp
lock
dec
push
dec
xorb
cltd
sub
fisttpl
and
sub
insl
cmp
xchg
test
inc
cmc
pop
mov
cwtl
leave
insl
dec
test
scas
hlt
mov
mov
mov
shrl
xchg
fs
push
mov
popf
or
test
movsl
cmp
mov
sbb
fnstcw
sbb
aas
addr16
imull
add
xchg
test
mov
push
jl
loop
test
scas
jb
cwtl
jp
shrb
xchg
mov
scas
imul
jmp
jg
pop
jl
popf
ret
mov
mov
jbe
push
mov
daa
adc
and
clc
in
lea
mov
xchg
cs
lea
xchg
mov
fidivs
inc
in
arpl
dec
sahf
lcall
jbe
mov
enter
arpl
jmp
cwtl
cmpsb
imul
mov
addr16
stc
rcrl
and
addr16
lret
icebp
inc
daa
cli
test
mov
outsl
sbb
pop
sub
and
jb
jno
lcall
adc
outsb
mov
xchg
mov
mov
shl
cmp
pop
cmpsl
adc
or
pop
pop
test
cld
inc
sbb
mov
sub
add
outsb
sbb
cmpsl
and
pop
in
ret
divl
cmpsb
notl
les
int3
repnz
repz
pushf
or
icebp
mov
imul
cmp
sbb
leave
add
xchg
xor
bnd
xchg
shlb
inc
sbb
aam
lods
adc
fldt
lock
push
lcall
jecxz
sub
icebp
out
inc
repz
cvtps2pd
push
lods
mov
xchg
mov
aad
les
nop
mov
push
and
ret
movsl
addr16
sbb
mov
adc
sbb
xchg
stos
call
cmp
add
sub
push
push
nop
jns
bsr
test
es
push
lret
lret
loop
sti
xchg
aas
cmc
cs
inc
push
lret
hlt
inc
inc
ja
mov
sub
sbb
or
popa
loopne
mov
dec
adc
outsl
insl
lds
jmp
adc
imul
gs
adc
scas
pop
inc
adcl
negb
and
or
sub
in
fiaddl
dec
adc
andb
pop
loopne
mov
add
pop
out
jmp
stos
sub
sbb
pmaxsw
mov
test
ret
jo
nop
jno
jecxz
lahf
cmpsb
inc
push
decl
es
icebp
and
mov
fisubrs
fnstcw
pop
xchg
out
mov
ret
sbb
sub
and
sbb
popl
cmpsl
ljmp
push
hlt
xor
aam
sbb
lods
sub
fwait
jg
aam
pop
aad
ljmp
inc
imul
ja
cltd
push
mov
sahf
dec
movsl
dec
test
jbe
mov
sti
xchg
lds
in
or
mov
inc
sub
jae
rorb
sti
xor
lcall
xor
loopne
mov
aam
sbb
lods
adc
int3
leave
mov
mov
or
aad
lds
ljmp
cltd
fwait
lds
inc
inc
std
stc
jl
imul
leave
mov
fidivrl
aam
sbb
jp
shlb
push
aam
push
xor
pop
mov
mov
push
stos
mov
xchg
addb
sti
dec
scas
lcall
notl
and
mov
sub
rcpps
mov
cmpsl
lods
sahf
mov
inc
jle
mov
push
mov
out
in
inc
stc
xchg
add
nop
pop
dec
iret
xlat
cmp
sub
xchg
sahf
xchg
out
mov
jecxz
stos
cmpsb
lcall
test
inc
pushf
dec
lods
xchg
ret
jae
sbb
mov
das
jae
mov
pop
test
pop
push
sti
fsubrl
dec
movq
sub
pop
xor
out
stos
ljmp
loope
stos
andb
loope
sti
pop
mov
xor
in
jns
fdivrl
jns
repz
ss
mov
jo
xchg
rcll
jae
lret
rcrb
xor
out
nop
inc
stos
mov
fcmovnbe
pusha
pushf
mov
pushf
cmp
mov
xor
mov
jns
pop
insb
repnz
xchg
sub
dec
jecxz
fisttps
std
dec
and
int3
loope
outsl
mov
into
dec
add
inc
ja
das
mov
mov
lods
loope
lcall
lock
mov
js
mov
cmp
call
sbb
aaa
lret
jmp
fidivs
mov
jnp
mov
and
mov
pop
data16
orl
pushf
movsb
fisubrs
jg
add
pop
loope
xchg
push
mov
and
movsl
cmp
xchg
adc
out
cmc
fcomps
mov
and
dec
cmp
mov
insl
jp
mov
pushf
ror
ja
mov
out
sbbb
shlb
jp
andb
lods
rorb
js
lahf
xchg
cli
mov
loopne
push
cmpsl
test
in
jno
daa
dec
fwait
pop
std
adc
shll
mov
push
mov
sbb
jecxz
not
lcall
sbb
or
jmp
jne
mov
pop
pop
iret
mov
or
fwait
mov
cmp
push
sti
xchg
xchg
mov
push
int3
cmpb
mov
ror
outsl
in
lcall
std
bound
pop
jle
pop
push
dec
pop
push
xlat
hlt
ja
ret
js
out
frstor
int
cmp
lods
mov
sbb
lahf
in
sbb
test
push
fistpl
bnd
inc
add
inc
sub
out
imul
mov
mov
or
cmpsl
in
add
aad
inc
dec
jle
xor
xchg
pushf
cmp
jmp
in
adc
and
out
lcall
sahf
jl
imul
js
or
jns
push
stos
inc
fcmovbe
add
addb
jns
pop
mov
add
push
ret
pmaxub
sbb
imulb
xchg
call
loop
xchg
outsl
les
daa
inc
clc
mov
adc
jmp
adc
adc
jecxz
mov
adc
mov
jge
jbe
insb
movsl
pop
sbb
mov
orl
xor
jp
pop
test
inc
adc
and
mov
addr16
or
inc
mov
outsl
push
popf
imul
mov
out
push
shrl
cs
dec
hlt
add
and
lock
pop
cwtl
sahf
gs
les
aad
das
jl
lock
mov
int3
xchg
adc
pop
push
add
les
pusha
dec
mov
fsubrs
shl
fisubs
dec
scas
movsb
jmp
lret
mov
sub
xorl
xor
lret
mov
push
sub
in
and
push
loopne
outsb
aaa
call
aas
lcall
test
add
inc
xor
loope
lock
pshufw
ss
pop
jnp
std
repz
pop
lcall
ffreep
int3
cld
xor
pop
mov
bound
dec
add
cmp
sbb
in
add
push
pop
cmp
call
sub
cmp
ja
adc
fcomi
jb
testl
out
lock
and
lcall
jge
cmp
xchg
mov
inc
xchg
xor
adc
movsb
mov
jmp
push
shr
test
ds
adc
mov
jnp
and
adc
pusha
std
mov
and
out
fcomps
dec
mov
jb
xchg
out
scas
add
xchg
aad
imul
cmpl
push
das
je
and
xor
mov
mov
jo
and
je
inc
inc
aaa
jle
in
inc
ljmp
mov
out
mov
bound
test
xchg
cmp
shrb
test
xor
lcall
xchg
jb
stc
stos
jne
push
imul
jae
pop
and
push
pop
pop
cltd
xchg
add
xchg
ret
test
xchg
push
inc
jnp
gs
xor
inc
push
arpl
adc
fistps
paddw
pop
lea
outsl
mov
cmc
sbb
push
xor
xchg
mov
dec
push
les
lock
inc
and
sbb
mov
pop
cmpsl
sti
cwtl
in
fdivrs
push
dec
sbb
adc
call
sbb
jg
xor
je
or
cmp
addb
sbb
xchg
test
mov
xor
shrb
adc
test
xchg
pop
rcrl
js
mov
xchg
fisubrs
and
xor
dec
mov
lret
jnp
cmpsb
ss
push
mov
sti
repz
pop
orl
insl
dec
xor
cmp
cli
or
lea
adc
js
test
into
pop
mov
cmpsb
or
push
mov
filds
movsb
cmpsl
out
cmp
imul
cs
jmp
mov
cmp
adc
sub
xorb
clc
or
cmc
out
or
stc
iret
or
dec
jg
sbb
dec
mov
xchg
xorb
stos
sbb
push
mov
jo
shlb
sbb
jmp
mov
sbb
scas
aad
movsb
ret
das
sub
pop
outsb
mov
pusha
subl
movsb
sahf
insl
mov
push
xchg
ret
fiaddl
insb
dec
lds
pop
sbb
pushf
hlt
roll
test
pop
adc
fstpt
sbb
or
clc
mov
xor
jmp
mov
pop
fs
setp
add
cmpsb
dec
xchg
jne
jae
dec
inc
out
in
sbb
xlat
mov
out
clc
fs
mov
jmp
adcb
imul
push
sahf
enter
dec
mov
push
mov
jae
inc
aas
cltd
cmp
pop
out
inc
adc
jecxz
xchg
push
mov
cmpsl
and
push
inc
movsb
aaa
xchg
push
inc
sbb
enter
jns
nop
mov
pusha
out
push
xchg
pop
pop
int
cmp
adc
adc
dec
mov
mov
pop
mov
divl
in
jmp
mov
dec
add
mov
mov
and
sbb
outsl
and
loope
mov
cmpsl
fdivrl
repnz
stos
mov
dec
out
jp
pop
push
imul
outsl
dec
in
sarl
mov
mov
ss
and
bound
pop
stos
das
sub
or
jg
adc
xor
ret
pop
hlt
mov
and
pop
shll
push
sbb
out
fdivrs
add
lea
mov
sub
mov
pop
stc
inc
xor
pushf
xor
add
sub
and
imulb
mov
sbb
int3
mov
jbe
insl
add
scas
inc
sub
xor
or
push
jp
push
test
mov
cs
faddp
cmpsl
pop
dec
mov
pop
scas
test
dec
or
js
dec
mov
test
mov
loopne
pop
cmpsb
jge
mov
push
cli
enter
push
mov
test
aad
mov
or
mov
stos
inc
xchg
xlat
pop
fldt
movsl
iret
faddl
decb
cwtl
mov
arpl
jo
push
pop
js
xchg
and
stc
jp
adc
xchg
leave
jle
fdivl
movsl
push
gs
adc
xor
je
outsb
lret
les
mov
in
jbe
jmp
sub
cmp
push
fs
jle
pop
test
shll
rorl
push
adc
lods
xchg
adc
pop
inc
imul
sbb
rorb
mov
lock
rcl
aam
mov
sbb
movsl
or
imul
inc
lds
adc
shll
ficomps
or
aam
pop
loope
out
jno
pop
in
inc
pop
clc
or
jecxz
lock
sbb
mov
dec
sbb
in
inc
mov
enter
push
sbb
jge
jnp
push
pop
dec
jb
mov
sbb
inc
jno
xorl
fisttpll
jmp
xor
add
pop
xlat
add
fiaddl
jmp
xchg
cltd
sbb
je
sbb
mov
xchg
sbb
adc
or
cltd
fisttpll
jae
mov
sti
pop
dec
jno
xchg
mov
pushf
sahf
repnz
mov
sub
inc
cmp
cwtl
and
sub
in
push
mov
jbe
iret
aaa
lds
push
out
pop
push
repz
xchg
xchg
push
lret
lahf
add
mov
pop
xchg
in
outsb
fdiv
pusha
cmc
inc
jmp
insb
out
mov
or
mov
movb
lahf
mov
lods
mov
lods
xchg
pop
movl
sti
sbb
inc
mov
mov
loop
xor
fstpt
xor
sbb
test
inc
daa
add
push
jo
or
push
jnp
insl
push
inc
and
xor
sbb
ljmp
fwait
pop
scas
fcoms
lcall
fmulp
cwtl
icebp
jge
push
mov
adc
inc
pop
in
insb
fnsave
sbb
outsb
lods
imul
sahf
pop
add
mov
test
jbe
or
popa
inc
or
jae
push
xchg
data16
mov
pop
jb
or
dec
jle
into
cmp
fdivrs
cld
movsl
je
in
jae
je
cmp
inc
dec
sub
test
shr
imul
jmp
cmpsb
sub
in
insb
out
pop
sbb
orb
test
in
iret
daa
out
mov
and
es
cmp
out
mov
push
lret
push
pop
xor
jns
lods
jmp
mov
pop
ret
sahf
jmp
mov
pop
loope
sub
ja
insl
mov
xchg
push
outsb
sbb
xor
shlb
or
inc
mov
jb
pusha
sbbb
mov
in
imul
movsb
jg
mov
loop
cmpsb
mov
pop
inc
pop
frstor
inc
call
adc
mov
out
repz
mov
dec
icebp
mov
sbb
je
xor
mov
hlt
enter
mov
rorb
mov
mov
jbe
in
xchg
repnz
add
leave
lock
push
data16
fnstenv
cwtl
es
ljmp
push
jl
dec
dec
mov
aam
adc
adc
adc
fsubl
loop
push
cli
clc
sbb
imul
aaa
sahf
xchg
jns
in
lock
shl
imul
jnp
sub
mov
dec
mov
push
ffreep
test
mov
bnd
insw
lahf
enter
add
push
fidivrs
rclb
push
cmp
or
push
sub
sbb
cmp
xchg
sti
sub
imul
mov
test
xchg
aad
std
fs
sbb
js
ret
pusha
out
and
clc
jne
cmp
in
pop
inc
icebp
lods
cmp
je
movsb
xchg
clc
sub
lods
cwtl
fwait
leave
lahf
sbb
pop
push
scas
xor
scas
pop
into
xchg
push
fwait
jnp
sarl
jp
pop
and
daa
dec
inc
fstl
dec
ja
jmp
cmp
popa
je
mov
repz
test
imul
mov
cmp
mov
mov
in
mov
js
shl
jl
adc
adc
mov
pop
cmpsb
push
scas
fldt
mov
jno
fsubs
push
dec
insl
outsb
loopne
stc
jle
inc
and
and
mov
sub
push
test
loop
pop
inc
jns
mov
imul
rorb
push
mov
sbb
ret
sub
xchg
add
ljmp
xor
call
inc
dec
incl
dec
dec
add
adc
mov
dec
push
gs
mov
inc
outsl
xchg
popa
sti
fidivrl
xchg
pop
ds
adc
jae
popa
cmp
add
aas
cmp
fimuls
andb
stos
repz
lods
test
daa
and
in
test
jne
shll
ficompl
pop
add
jne
test
pop
jo
jb
outsl
jecxz
lcall
mov
int3
movsl
filds
mov
pusha
ret
gs
mov
or
mov
xchg
push
pop
loop
pop
cmp
pop
dec
lret
shlb
push
outsl
jae
clc
test
sti
mov
sbbb
adc
add
mov
or
mov
pop
je
movsl
jmp
pop
lret
je
cmc
fwait
mov
rcll
add
xchg
scas
add
cld
pop
mov
jmp
out
popa
xor
or
fcoms
mov
repnz
adc
cmc
hlt
imul
pop
mov
xor
mov
jg
add
mov
arpl
loopne
and
leave
ret
mov
stos
inc
lea
lods
rep
sbb
adc
out
mov
mov
sbb
pop
push
mov
lahf
push
mov
sub
popf
lret
mov
inc
dec
mov
in
xchg
jo
add
adc
pop
sahf
test
outsb
jno
mov
cli
pop
aaa
lds
repnz
jno
js
bound
pop
push
push
pop
add
outsb
subl
jg
lods
outsb
xchg
int3
lahf
pushl
adc
lcall
mov
dec
xchg
mov
fsubrs
loop
mov
push
mov
rclb
or
cli
ss
mov
arpl
and
pop
xor
in
psrlw
pop
jle
inc
push
xor
jmp
inc
mov
or
pop
aam
movsl
and
jae
pop
mov
adc
outsb
out
test
sub
or
mov
add
add
dec
adc
xchg
sti
push
inc
pop
bound
or
adcl
std
adc
push
xchg
jbe
or
cwtl
pop
popf
and
fwait
je
mov
aam
dec
sarl
inc
mov
aaa
int3
mov
jge
xchg
fcoms
lea
cmp
daa
in
jae
inc
mov
xor
or
fldl
ret
push
mov
mov
push
dec
hlt
sbb
cld
dec
mov
mov
movsl
inc
test
push
xchg
xlat
or
sbb
cmp
adc
fistps
mov
mov
xchg
std
sbb
testl
in
repnz
cmc
lods
stos
and
lods
mov
in
mov
cli
jle
mov
jecxz
pop
test
inc
and
icebp
imul
jnp
mov
or
lret
loopne
fbstp
cwtl
push
jmp
adc
sbb
sbb
ss
es
lock
pop
push
adc
gs
and
sub
fisttps
push
cmp
lcall
or
pop
or
daa
dec
mov
lahf
or
into
mov
sub
clc
jno
ljmp
pop
pusha
jge
lods
xor
jg
sub
mov
jg
repnz
mov
inc
lea
inc
sub
rcll
enter
mov
movsl
push
clc
dec
int
mov
sub
pop
daa
and
sbb
inc
jmp
jmp
or
push
outsl
mov
inc
cmp
push
cs
insb
xor
pushf
add
jnp
mov
jp
gs
bnd
idivl
cwtl
add
dec
ficompl
stos
mov
pop
pop
mov
and
xor
test
stos
cwtl
popl
das
test
inc
xor
and
push
pop
mov
mov
sbb
jl
mov
int3
mov
mov
xchg
lea
mov
out
je
adc
mov
test
std
fnsave
pop
cld
or
int3
outsb
adc
cltd
adc
imul
inc
iret
out
imul
mov
sbb
xor
pop
call
add
adc
mov
mov
mov
mov
xchg
inc
int
add
pusha
sub
xorl
and
sub
pop
or
push
flds
cmp
mov
jns
adc
inc
imul
add
mov
push
pop
jg
inc
loope
fbld
inc
shr
in
cmc
aad
jnp
jmp
mov
loope
movsl
inc
push
push
popf
mov
icebp
cmp
repnz
sbb
or
or
outsl
xor
jne
xor
and
bound
sbbl
js
push
loopne
adc
jns
mov
in
cltd
mov
mov
sub
in
cmpsb
mov
stos
fdivs
push
nop
outsb
or
in
in
push
mov
std
pop
jge
test
push
test
sub
sub
add
flds
xor
ret
cltd
mov
mov
ljmp
xor
insb
lret
idivl
mov
ret
lret
aas
mov
stos
inc
jge
ds
mov
sbb
and
jb
dec
in
sti
xchg
or
fwait
sbb
push
pcmpgtw
mov
dec
scas
adc
cmp
adc
iret
call
pop
mov
add
mov
scas
xlat
stc
inc
push
mov
mov
loope
dec
xchg
mov
aad
jns
mov
pop
jb
ljmp
mov
outsb
xor
mov
pusha
lret
inc
addr16
push
in
mov
lock
bound
xchg
arpl
cld
or
adc
lret
cli
std
iret
pop
dec
cmpl
cmpsb
cmp
add
lock
sahf
enter
fdivl
insl
inc
add
sub
lock
loop
xlat
das
xor
xor
sub
cs
int3
sbb
or
xchg
es
pop
jle
mov
arpl
insb
jne
xor
dec
aaa
in
push
addl
stc
sub
jae
sbb
xchg
das
sbb
movsb
jecxz
ficompl
sbb
fsubs
jns
lret
inc
xchg
xchg
cmp
xor
js
adc
mov
mov
sub
or
in
and
aas
in
add
inc
lret
and
out
mov
addl
add
leave
jmp
in
mov
mov
es
cmp
pop
cmpsb
dec
mov
mov
fildl
sbb
pop
mov
jl
dec
cs
imul
jno
jecxz
popf
inc
dec
rcrb
cmp
shrl
sub
xchg
jl
inc
sbb
shrl
lea
in
fsubrs
aaa
lret
xlat
jmp
into
push
cli
sbb
xchg
lods
ds
mov
out
inc
xchg
sub
rclb
ret
fs
mov
sub
xorb
fstl
sbb
or
movsb
sbb
into
dec
mov
iret
dec
or
das
jl
sbb
xor
mov
mov
mov
or
xor
stos
rclb
pushf
rcl
icebp
add
lock
push
xor
lret
pop
xor
or
xor
sar
loop
jne
add
inc
add
in
mov
sahf
into
sbb
stc
out
movsl
rcll
daa
jecxz
ret
pusha
repnz
in
ror
inc
dec
pusha
fdiv
and
adc
das
jb
mov
and
mov
cltd
sbb
xchg
cld
pop
jmp
int3
lods
ljmp
cltd
aam
lcall
mov
mov
mov
mov
mov
loop
inc
movsb
jge
in
out
test
mov
les
mov
call
js
sub
into
shll
inc
adc
or
mov
and
cs
aam
xchg
mov
arpl
das
mov
movsb
mov
sahf
or
xor
testb
not
scas
and
or
sub
sub
das
sbb
or
and
inc
iret
repnz
imul
mov
dec
inc
fbstp
imul
into
sbb
aam
jnp
mov
and
je
sub
movsl
dec
insb
test
xchg
cmc
insl
mov
imull
sarl
push
fwait
jmp
lret
sbb
adc
mov
and
in
cli
rorl
repz
jae
lea
adc
xor
rcl
ja
int3
pop
xorb
adc
jnp
pop
push
mov
jl
jo
sahf
xor
or
addr16
adcl
mov
and
in
pop
insl
push
mov
xchg
inc
mov
dec
add
jge
inc
cli
and
mov
pop
xor
mov
xchg
jecxz
pop
cld
dec
sbb
ficomps
shl
loope
mov
mov
xchg
cmp
cmp
sbb
xchg
inc
fldcw
es
outsb
mov
sbb
das
sbb
lods
jno
lret
jmp
pop
adc
push
or
mov
jl
mov
push
xchg
jns
int
or
les
popa
add
jp
rcrl
push
fwait
xor
jge
and
dec
int3
or
in
jmp
pop
sub
std
pop
shlb
insb
loopne
and
cmp
sub
jmp
mov
pop
or
or
xor
aaa
popa
add
mov
jmp
jl
jnp
loopne
add
lea
jno
es
jae
ljmp
fwait
btcl
aad
xchg
movsb
les
push
mov
jecxz
arpl
fnsave
mov
cmp
into
add
pop
xor
shl
xchg
xor
xor
jle
jp
jle
fdivrs
sub
in
dec
fnsave
icebp
push
cmc
daa
xchg
or
lock
push
and
fwait
xchg
fildll
adc
push
stc
sbb
mov
lcall
cltd
or
test
inc
xor
pop
jle
ja
mov
sub
mov
push
lret
ljmp
pop
orl
sbb
lods
adc
loope
decl
test
cmp
mov
ja
scas
sar
in
sbb
and
sub
fucomip
adc
jg
leave
xchg
or
scas
enter
out
shlb
mov
or
sahf
lea
and
xchg
sbb
pop
pop
out
lret
mov
mov
and
mov
rclb
loope
sbb
dec
adc
xchg
xchg
and
jae
jno
pop
insb
nop
dec
inc
shlb
cmp
loope
xor
test
pusha
stos
cli
mov
fcomps
mov
xor
inc
jae
dec
dec
ljmp
out
addr16
jp
das
daa
push
fdivrs
adc
fucomi
sub
mov
leave
add
push
cmpl
cwtl
mov
fadds
scas
mov
test
mov
mov
pusha
inc
movsl
fadd
imul
mov
fldcw
push
or
inc
dec
sti
test
adc
fldcw
push
leave
jne
enter
or
xor
push
cwtl
les
and
mov
push
jecxz
loop
xor
inc
stos
addl
xchg
neg
inc
mov
int3
and
sub
xor
or
icebp
or
enter
xchg
stos
pushf
cmpsb
jp
mov
adc
push
scas
add
stos
mov
je
rcrb
mov
lcall
cli
jno
mov
outsb
push
in
and
addb
test
sub
mov
mov
lods
outsb
outsb
sub
push
mov
pushw
subb
ret
imul
movsl
pop
xchg
mov
mov
mov
cwtl
iret
pop
jmp
push
call
cmp
fidivrl
or
xchg
add
data16
aam
push
pop
push
test
dec
push
ds
jle
mov
stc
into
sub
lods
pop
add
mov
test
lret
pop
inc
mov
inc
inc
inc
dec
adc
icebp
sbbb
push
ds
stos
xor
pop
pop
hlt
jns
ret
pusha
ret
jmp
or
gs
jbe
cmp
pop
cs
xchg
and
cmp
stos
inc
cld
xor
aam
cmp
adc
je
lret
xchg
or
mov
push
imul
out
or
setbe
daa
mov
sub
out
pop
adc
in
adc
in
xchg
iret
cld
pop
pusha
jge
pushf
jge
addr16
jecxz
mov
mov
dec
mov
mov
and
jne
pop
or
and
jns
and
loope
dec
sahf
inc
mov
xor
dec
mov
loop
fidivrl
mov
loop
rclb
imul
nop
pop
inc
xlat
dec
fldenv
dec
adc
or
lods
adcb
sbb
daa
aam
xchg
mov
mov
sbb
lods
outsl
and
or
add
xchg
aam
scas
outsl
jbe
push
test
jle
in
xchg
mov
add
lods
or
sub
mov
xchg
in
hlt
lods
lods
je
sub
loop
xor
sbb
mov
mov
inc
and
outsl
das
push
adc
cmpsl
xor
sbb
mov
sub
or
xor
mov
cwtl
call
out
xchg
js
dec
mov
inc
cmp
pop
adc
cmp
and
jle
scas
push
sbb
gs
xchg
adc
dec
xchg
filds
and
jnp
and
js
out
data16
call
pop
movsb
mov
popf
insb
xor
xor
mov
orl
xor
mov
and
in
and
push
lods
pop
add
or
frstor
sbb
dec
js
xchg
mov
push
sahf
mov
xchg
xchg
inc
mov
insb
insl
pop
out
push
mov
sub
fwait
mov
test
mov
mov
outsl
cltd
sub
icebp
ja
ret
inc
cs
sub
jbe
mov
xor
into
dec
xorb
push
out
mov
mov
or
in
push
outsl
in
xchg
or
push
push
mul
lcall
sbb
mov
cmc
lret
mov
pop
dec
sbb
sbbb
insb
mov
and
pop
cmp
mov
sbb
jno
call
xlat
push
movsl
rolb
pop
pop
ret
daa
flds
cld
pop
ja
jbe
push
xor
mov
sub
xchg
enter
jae
popf
sahf
jae
add
es
out
pop
out
pop
pop
call
enter
sbb
xchg
jp
sub
movsb
fbstp
rcrl
cmpsb
xor
jmp
or
push
push
adc
xchg
or
and
sbb
add
sub
mov
in
and
imulb
loopne
scas
cltd
outsl
and
addr16
arpl
test
add
inc
pop
pushf
cmp
push
jecxz
fmulp
lea
xor
je
in
push
jmp
lea
add
push
lcall
jmp
xor
and
fucomp
shll
xchg
pop
repz
sbb
sahf
iret
insl
pop
cmp
call
dec
sbbl
push
pop
js
scas
fcomip
les
xor
cmp
pop
mov
sub
mov
dec
xor
add
push
fcoms
test
push
clc
push
jmp
das
xchg
jnp
insl
xchg
xlat
cmc
fsubrs
mov
scas
clc
dec
notb
out
loopne
and
mov
jno
test
shrl
pop
popf
int
push
mov
jb
int3
insl
pop
arpl
adc
push
fsubl
xlat
pop
icebp
orl
dec
fstpl
adc
or
lods
sub
jge
pop
aad
mull
call
enter
xchg
cs
icebp
fdivs
lock
mov
lds
scas
add
rorl
fstps
flds
mov
mov
popf
mov
push
movsb
cmp
pop
and
aaa
push
test
xorl
aad
sub
adc
addr16
shll
ret
loop
insl
ds
mov
loop
clc
push
and
or
xchg
ds
xor
xor
cmp
mov
loop
ret
ss
sbb
lahf
add
sahf
add
jle
mov
icebp
pop
dec
stos
outsb
test
cmpsl
mov
aad
cltd
aas
or
sub
push
cmp
sbb
and
xchg
leave
inc
xor
pop
insl
cmpsb
mov
adc
sbb
cmc
adcl
cli
rorb
sub
pop
pusha
adc
mov
xchg
mov
fistl
pop
out
sub
sub
into
add
test
inc
and
test
hlt
sahf
pop
sar
and
xor
sti
test
dec
add
add
jl
inc
or
dec
or
jmp
lret
jnp
cmp
adc
dec
pop
ret
ss
sub
pop
sbb
adc
adc
cltd
lcall
sbb
int3
xor
mov
icebp
add
cmp
sub
negb
sbb
pop
sbb
jnp
repnz
push
imul
xor
lret
fdivrs
out
adc
jns
repz
stc
jl
verr
jle
sub
ljmp
loope
jle
mov
add
rep
scas
insl
pop
rcrb
mov
xor
adc
cmp
mov
mov
test
lea
leave
mov
inc
les
lea
out
in
mov
jp
mull
testl
push
ss
xchg
out
mov
lahf
dec
in
repz
fsubl
loope
push
xor
and
xchg
aad
negb
mov
cmp
jg
jnp
mov
jae
cmp
stos
nop
and
mov
mov
add
jb
inc
jns
jns
shrb
mov
aas
fldcw
push
int
push
xchg
insl
or
scas
ret
sub
imul
or
push
inc
xor
aam
cmc
adc
and
shll
cltd
or
push
cmp
mov
lahf
dec
inc
xor
lcall
aaa
add
cmpsl
and
ljmp
mov
mov
push
adc
ficompl
and
cmp
and
fcoml
cmpsl
clc
loop
mov
loopne
test
xor
loope
ss
sbb
fsubrl
lods
xor
dec
shlb
or
xchg
pushf
pop
dec
add
mov
push
shll
jnp
test
cmp
sbb
leavew
fwait
popa
cmpsl
push
mov
out
shll
lcall
cli
roll
out
sub
bound
lret
xor
mov
pushf
pop
cltd
sbb
and
lahf
adc
push
pop
loopne
mov
fnstcw
inc
sbb
cltd
ret
cli
in
sub
add
push
mov
or
xor
outsl
icebp
cmp
inc
mov
jle
lcall
lret
leave
in
mov
shl
lret
enter
mov
dec
pop
js
inc
add
push
shrb
mov
dec
rep
popa
negl
popa
mov
int
and
dec
sbb
push
push
scas
mov
adc
mov
hlt
push
inc
push
pop
cli
loopne
jge
inc
and
dec
push
movsb
inc
jae
pop
arpl
pop
xchg
sub
jg
mov
xor
cld
lock
cs
dec
jg
or
dec
test
and
loope
mov
cmpsl
bnd
jo
mov
mov
mov
and
dec
sti
lret
and
mov
int3
or
popf
mov
mov
jnp
fnop
rcll
ss
dec
jle
or
lahf
cmpsl
sbb
ret
sbb
loopne
insl
lock
lea
and
rcrl
pop
jae
jp
and
xorb
xlat
cmp
sub
and
adc
jb
sbb
lods
rcl
or
xlat
lods
lahf
stc
sbbb
jp
vmptrst
into
lds
sarl
lea
push
sbb
ss
int
push
mov
cld
shlb
dec
cmc
les
mov
lods
adc
and
mov
sbb
sub
imul
ljmp
sub
lret
scas
aad
pop
push
ljmp
jnp
imul
or
inc
sti
bound
sbb
cwtl
push
nop
les
mov
cmpb
adc
insl
jmp
ret
or
jne
push
xchg
jae
adc
inc
filds
sub
and
bound
add
pop
mov
test
fs
xchg
loop
cwtl
sbb
hlt
aas
push
test
data16
xchg
addr16
and
dec
jbe
mov
add
sub
in
out
jp
mov
popw
pop
inc
pop
jmp
out
push
aas
aam
xlat
std
cld
inc
std
add
cs
scas
leave
outsl
inc
jne
mov
mov
in
inc
sbb
stos
daa
rorl
int
ja
cmp
dec
jmp
cmpsl
and
cltd
nop
pop
arpl
and
fs
push
pop
xchg
fmull
jnp
into
test
jbe
fdiv
clc
jmp
nop
imul
dec
sub
scas
aaa
pop
adc
loop
xchg
pop
push
inc
or
scas
gs
mov
mov
fcompl
iret
nop
popl
push
mov
aam
dec
add
push
sbb
add
fwait
pusha
inc
mov
stos
ds
lahf
movsb
daa
cmp
xchg
sbb
jg
xchg
push
loop
lock
js
hlt
movsb
int
je
xchg
jp
mov
pop
and
cmpsl
incb
add
xchg
pop
lock
jno
fiaddl
data16
push
mov
das
jg
fisubs
test
mov
ds
mov
sbb
call
pushf
repz
dec
sub
enter
rcr
adc
insb
fs
xor
jo
lock
stos
mov
jae
pop
clc
jmp
cmpsb
dec
es
stos
pop
decb
dec
xor
leave
out
jmp
cmp
mov
mov
cmpsl
jmp
jns
mov
jno
xor
popa
lcall
fnstcw
dec
or
jno
cmp
repz
js
imul
aaa
jecxz
ljmp
arpl
ja
test
mov
ret
and
repnz
dec
pushf
aam
inc
adc
adc
icebp
or
sti
mov
lods
cmpsb
mov
sti
jnp
cmp
cli
mov
pop
outsl
dec
mov
into
cwtl
ja
and
and
add
in
mov
xor
mov
pop
jmp
or
repnz
xchg
sbb
push
jmp
push
sbb
aaa
hlt
pop
out
test
dec
dec
or
xchg
adc
xor
std
movsl
mov
jnp
dec
jne
dec
stos
mov
stc
fsubs
fnstcw
iret
mulb
cmp
test
pusha
jb
aaa
test
dec
insb
mov
xchg
mov
ds
in
cmp
cmp
sub
mov
sbb
mov
inc
cmp
sub
mov
negl
imul
mov
jp
ja
adc
jo
sbb
xchg
xor
xchg
stc
mov
pop
mov
pop
jp
inc
icebp
add
stos
push
sbb
push
xchg
xchg
daa
lret
fs
adc
jb
push
data16
incl
mov
cmp
pop
pushf
cmp
or
iret
mov
and
xchg
jge
jg
ds
push
mov
sub
and
loope
inc
inc
sbb
mov
icebp
ret
mov
sbb
and
scas
inc
sub
test
or
sub
lcall
mov
mov
out
ret
add
and
bound
fmul
fs
fstpl
push
addl
inc
and
mov
dec
pushf
imull
addr16
lds
adc
gs
pop
inc
add
dec
xchg
or
xchg
mov
pushf
inc
pop
jno
sarb
adc
rorb
imul
push
inc
repz
das
andl
cmpsl
or
cmp
xchg
out
push
mov
sahf
inc
lret
cmp
outsb
cld
adc
lock
jmp
mov
sbb
jp
xor
inc
jb
ds
xor
or
xor
fs
lds
fwait
mov
imull
fwait
out
and
lcall
mov
fadds
push
jge
mov
inc
ja
cli
shl
cmp
cwtl
shll
cmp
das
ljmp
rolb
mov
mov
ds
or
std
stc
and
cmp
mov
flds
push
dec
fisubl
or
mov
icebp
in
xor
mov
rcrl
mov
add
xchg
sbbl
jno
jne
sbb
cmp
out
mov
lock
je
insl
add
jae
mov
inc
mov
lock
dec
sbb
sub
dec
aad
in
xchg
mov
push
sbb
idivl
add
imul
pop
roll
mov
int3
repnz
pushf
icebp
sbb
mov
cwtl
mov
sub
les
lods
paddusw
loopne
mov
xchg
cmpl
insb
pop
push
mov
jmp
aas
mov
push
aas
popa
sub
mov
test
movsb
nop
push
leave
mov
or
inc
jne
movsb
roll
mov
stos
inc
iret
xlat
out
iret
inc
mov
ds
shlb
movsb
popa
cltd
xor
stos
stc
cmp
mov
les
mov
or
out
imul
or
lock
test
add
ljmp
fchs
daa
inc
clc
loope
adc
scas
xchg
ljmp
mov
mov
adc
stc
lahf
xor
rcl
pusha
add
jmp
jae
pop
xor
mov
int3
shrl
rorb
sub
cmp
pop
push
push
and
fadd
js
jno
sbb
xchg
xchg
lcall
xor
add
push
mov
and
out
push
jne
mov
fcmovbe
stos
mov
in
test
jecxz
push
test
test
outsb
dec
daa
in
lahf
or
scas
bound
outsl
cmp
out
push
adc
ja
add
in
or
sbb
adc
data16
in
jg
xor
cmc
test
test
adc
xor
sbb
pop
hlt
xor
aas
dec
xor
push
sti
pusha
mov
mov
mov
outsl
xchg
adc
mov
add
cmc
and
adc
rorl
jbe
in
sarb
pop
imul
sbb
inc
jnp
in
repz
mov
pushf
mov
lea
imul
jae
inc
sahf
ret
stos
mov
xor
and
sbb
test
cmpsb
hlt
mov
inc
mov
iret
aas
cltd
inc
imul
push
lahf
sarl
jp
mov
mov
stos
mov
cwtl
dec
out
mov
xor
fdivp
sti
outsb
idivb
sbb
xor
xchg
xchg
cmpsb
push
aas
xchg
sub
xor
loope
xchg
sub
pop
sub
jns
push
in
test
lcall
aaa
and
cmpsb
dec
jp
mov
xor
leave
dec
jns
aam
jno
sub
inc
pop
leave
add
inc
add
xchg
imul
xchg
mov
repz
shl
gs
add
cld
push
rcrb
lods
lcall
jb
xchg
pop
push
popf
ret
add
sbb
fmull
iret
adc
dec
push
push
dec
xlat
sarl
repz
inc
xor
push
or
adc
pushf
or
jmp
pop
es
mov
xchg
xor
into
dec
mov
lds
and
sub
test
push
mov
imul
jge
sbb
ljmp
sub
sub
adc
inc
cmc
test
jns
add
js
xchg
sbb
pop
sub
sub
xchg
js
inc
mov
leave
push
pop
mov
ret
push
cli
adc
jg
ljmp
sbb
lock
shll
jae
inc
test
aas
fsubr
sub
pop
and
inc
sub
cmp
addr16
leave
movsb
addr16
add
push
test
lods
pop
jmp
sub
in
mov
mov
xor
iret
dec
pop
orb
dec
pop
sub
lea
ss
outsl
test
xor
iret
es
jae
arpl
or
movsl
mov
mov
daa
mov
and
cwtl
sbb
pop
xor
mov
and
cwtl
sub
push
xchg
pause
cmovl
adc
pop
mov
dec
and
mov
inc
addr16
mov
aaa
pop
testl
mov
cmp
inc
jns
mov
shlb
or
loope
les
pop
jo
jnp
icebp
enter
sbb
adc
jo
jle
adc
test
dec
adc
push
and
int
xchg
mov
dec
adc
insb
sbb
fwait
inc
scas
jge
and
mov
lcall
sub
xlat
fbstp
sti
adc
inc
and
nop
or
orb
in
pop
pop
push
fcoml
or
and
mov
les
dec
push
call
movsb
cmp
aaa
fstpl
inc
inc
inc
mov
adc
sbb
popa
jns
cli
sbb
js
ret
jnp
sbb
lock
int3
cwtl
ja
xchg
cli
add
or
jecxz
popa
cmp
out
mov
je
pop
cmp
jnp
adc
mov
jg
fsts
xchg
xchg
push
dec
jl
lds
dec
clc
and
push
addb
test
les
mov
clc
movsb
test
lahf
sti
sub
push
mov
pusha
xchg
dec
gs
lods
jne
or
jns
mov
sbb
ss
shlb
jge
adc
add
sti
push
push
popl
cmpsl
xchg
pop
in
out
jnp
hlt
dec
dec
popa
cmp
rcrl
popa
loop
mov
js
mov
pusha
data16
pop
out
or
and
mov
xchg
lock
dec
hlt
addr16
lods
mov
mov
insb
sbb
das
jmp
add
sbb
dec
jb
cmpsb
sub
inc
ds
sbb
mov
cmp
mov
gs
enter
adc
inc
loop
dec
xor
ds
jl
xchg
push
js
sbb
lahf
clc
test
imul
xchg
cld
in
cmp
div
dec
loopne
dec
loop
in
rcrl
pushl
data16
adc
aas
cli
shrb
shrl
mov
fwait
dec
lock
pop
xchg
mov
sub
retw
nop
int3
xchg
data16
stc
dec
mov
pop
movsb
lods
pusha
push
add
mov
or
insl
loop
inc
lcall
mov
xlat
imul
mov
dec
inc
xor
cmp
test
jmp
push
bnd
lock
mov
xchg
or
loopne
lods
into
adc
test
jnp
jle
mov
mov
xor
jns
je
and
in
lods
dec
subl
sbb
mov
xchg
mov
or
push
inc
gs
pop
push
movl
scas
mov
aad
fdivrl
sbb
stc
rcr
push
push
in
aas
decl
add
sbb
cwtl
lods
std
ljmp
add
adc
in
insl
push
add
mov
and
es
mov
enter
xorb
jbe
das
into
test
or
sbb
jb
fsubrp
pop
mov
jae
test
sub
push
pop
mov
lret
cmpsb
dec
inc
pop
pop
sbb
ljmp
out
inc
bound
adc
cmp
push
xchg
flds
je
loope
sbb
je
mov
jae
mov
cmp
fsubs
fcomps
popf
mov
xchg
add
ds
mov
xchg
jbe
dec
mov
xlat
pop
ds
ja
and
mov
ja
mov
add
js
insb
mov
into
and
pop
addr16
jg
mov
pop
sti
das
jbe
xchg
popa
xchg
fidivrl
dec
lahf
sub
nop
xor
ror
pop
imul
sub
es
inc
lods
push
xor
mov
inc
call
sub
inc
cltd
push
out
daa
insl
xor
lds
fwait
stos
arpl
adc
push
xchg
lahf
fisubrl
repnz
pop
dec
inc
or
insl
mov
aas
les
sbbb
leave
pushf
and
adc
fstpl
push
and
pop
jg
inc
in
sbb
mov
jnp
jp
xchg
cmpl
test
sbb
fcoms
xchg
jmp
dec
push
jmp
enter
inc
rolb
xchg
push
lea
sbb
adc
cmpsl
sahf
mov
xchg
arpl
gs
aad
ss
fdiv
fnstenv
stc
adc
dec
cmp
xor
loope
jno
imul
inc
cmpsl
mov
mov
stos
adc
xchg
inc
in
mov
xor
xor
adc
adc
lea
inc
pop
ficompl
jmp
loop
lahf
into
dec
stos
aas
fs
adc
mov
add
test
mov
insl
inc
out
loope
mov
inc
and
std
and
ret
pop
mov
pop
addr16
mov
sub
sub
pop
sahf
bound
push
js
sahf
push
and
pop
imul
mov
and
repz
imul
jg
ds
sbb
in
and
fidivs
mov
inc
cmpsl
mov
js
jbe
pusha
bound
fidivs
xor
pop
mov
cli
mov
test
scas
jne
add
in
pop
or
insb
insb
adc
pop
scas
dec
ret
mov
push
pushf
adc
fmuls
jnp
xor
test
popf
loop
lods
dec
fmul
jb
testb
xor
hlt
fxtract
jle
xchg
cmp
dec
in
xchg
mov
or
cmp
decl
rclb
mov
aas
lea
xlat
cmc
orb
popa
js
in
xchg
xchg
ret
arpl
repz
fs
fucomip
push
or
adc
sub
rcrl
or
sbb
sbb
jnp
das
fstpt
fwait
cmp
sub
adc
push
pop
popa
stos
mov
das
test
inc
jle
jbe
jg
xor
loopne
push
adc
inc
push
pushf
push
jae
jns
jmp
gs
daa
or
add
ficompl
fidivrs
faddl
dec
dec
icebp
outsb
jnp
inc
and
push
sub
imul
pop
mov
sub
lds
hlt
fs
xchg
mov
pop
les
popf
xchg
loop
bound
fmulp
out
or
loope
das
push
xchg
sub
jecxz
xlat
jmp
sub
test
mov
sahf
pushf
mov
adc
xchg
and
sub
outsl
jmp
rorb
loop
iret
les
ds
fdivl
or
popa
lds
mov
pop
stc
incb
cs
xor
in
xor
xor
mov
lahf
pop
out
adc
sub
inc
inc
out
pop
cmp
popa
adc
mov
push
outsl
lret
fs
outsb
add
pop
mov
repz
pop
inc
in
inc
xlat
adc
cwtl
hlt
and
inc
icebp
je
mov
jae
adc
cli
pop
mov
bound
std
ss
and
clc
mov
mov
pop
movsl
add
jb
jg
jo
inc
cmp
cmpl
icebp
mov
mov
fnstenv
lahf
sub
push
add
ret
outsl
jl
jne
dec
fidivrl
addr16
subb
push
add
fisttpll
or
fbld
mov
adc
xchg
std
pop
lods
mov
push
int
movl
inc
sub
pop
jb
in
xor
mov
sub
test
dec
inc
out
xor
inc
mov
iret
test
rcrl
mov
loopne
xchg
push
xor
xor
cmp
add
in
mov
cwtl
hlt
ret
outsl
inc
push
pop
push
repz
mov
push
sub
sbb
and
adc
push
adc
add
ret
fsts
jecxz
pop
gs
mov
lret
sahf
loope
jno
jl
mov
fnop
and
loop
idivl
int
cltd
pop
push
jl
arpl
pop
lcall
xor
cwtl
sahf
mov
frstor
mov
mov
sahf
cmpsb
xchg
mov
and
pop
add
add
out
push
popa
gs
xchg
fadd
jne
sub
push
popf
je
aam
jbe
int3
jl
ds
and
mov
push
ss
mov
lahf
and
or
mov
insl
push
cmc
sbb
push
jne
iret
lds
push
mov
leave
mov
jge
pop
js
or
outsb
lahf
cs
call
xchg
test
sahf
cmp
and
inc
jg
sbb
jno
add
and
cmpsl
sub
std
push
ja
bound
push
inc
sti
mov
push
scas
mov
add
mov
xor
sbb
inc
cmp
cmc
scas
sbb
and
in
pop
sub
gs
gs
cmp
push
nop
cmc
mov
ret
icebp
pop
push
pop
or
jle
adc
push
jne
test
out
es
xchg
lock
flds
rorb
das
jecxz
iret
sahf
stos
push
or
push
jb,pt
ds
add
fwait
andl
inc
xchg
lret
call
pop
xor
sbb
push
push
cmp
iret
add
mov
cwtl
mov
mov
cmpsb
ja
cmc
jne
mov
sub
out
pop
cmp
mov
jecxz
dec
adc
cwtl
lds
mov
jmp
mov
xchg
and
fcmovbe
jne
ljmp
pop
testl
pop
addl
lret
xchg
repnz
int3
mov
test
sar
add
pop
mov
push
mov
es
jo
out
mov
sti
sub
mov
popf
movsl
mov
push
rorb
hlt
pop
ret
mov
call
repz
dec
jp
mov
sub
pop
loope
shrb
in
push
popa
adc
sbb
cmp
xor
push
lret
jge
mov
pop
mov
xchg
lock
ret
pop
jno
add
xor
push
pop
mov
sbb
outsl
addr16
push
mull
sti
fisubrl
out
mov
push
and
or
stos
js
cmpsb
movsb
test
jmp
in
popa
xchg
mov
pop
fidivl
mov
inc
mov
fnsave
insl
in
and
mov
ss
sbb
fwait
jmp
aaa
test
arpl
mov
pop
xchg
mov
cmpsb
xchg
insl
lock
ffree
add
mov
popa
inc
je
outsl
mov
jge
mov
push
pusha
fisttpll
mov
enter
nop
popa
mov
cld
jne
movsb
test
pop
leave
loop
loop
and
cmp
adc
inc
popa
lahf
or
in
xor
andl
cmpsl
mov
jnp
hlt
scas
mov
mov
and
std
xchg
sub
cmp
mov
xchg
test
dec
lock
jecxz
popf
pop
iret
lods
test
rcll
divb
cld
pop
addr16
in
mov
lods
pushf
stc
xor
jmp
xchg
js
cvtps2pi
mov
addb
inc
aam
hlt
bnd
icebp
jns
mov
outsb
leave
je
push
inc
je
xor
enter
xchg
xor
jg
je
loope
sti
sbb
lea
or
rcrl
test
cwtl
stc
pop
dec
int
pop
in
lcall
cmpsl
cmp
fisubs
fnsave
in
mov
xchg
add
pop
in
push
lret
or
orb
pop
inc
mov
jno
mov
cld
push
test
aad
mov
pop
fcomi
out
pop
sbb
mov
or
lahf
push
dec
mov
inc
adc
clc
popa
push
les
add
out
sub
jl
rclb
pop
in
test
sbb
xchg
add
aas
pop
mov
jl
movsl
aad
shrb
dec
push
mov
stos
inc
in
push
and
outsl
jle
test
cltd
mov
jb
je
jg
pushf
jp
mov
jno
icebp
inc
out
mov
fs
movsb
xor
sbb
adc
xchg
arpl
mov
xchg
aad
push
daa
bound
out
and
xchg
sub
mov
rcr
rcrl
rcrl
fidivs
int
cwtl
aad
pusha
mov
mov
mov
or
jmp
push
mov
push
cmp
jae
movsb
int3
pushf
sahf
cmp
jmp
mov
and
pop
rol
mov
jp
insb
dec
call
xchg
lock
inc
mov
bound
lods
movsb
mov
cwtl
lock
sahf
and
jns
fcmovbe
sbb
out
into
inc
and
adc
enter
or
mov
icebp
repnz
add
mov
dec
int
scas
mov
pop
cmp
push
adc
fmulp
call
addl
pop
mov
mov
addr16
hlt
ffreep
lcall
sbb
mov
add
push
imul
sbb
js
in
insl
mov
int3
scas
push
lds
fstpl
orps
outsl
dec
shll
cmp
pusha
clts
push
xchg
in
outsb
push
sbb
mov
sbb
popa
lcall
leave
mov
dec
mov
cltd
cmp
loopne
add
and
xlat
mov
nop
incl
inc
inc
mov
lds
outsb
subl
lods
sub
add
pop
mov
jmp
push
inc
fwait
mov
call
mov
stos
jl
rcrb
xchg
sbbb
ret
jo
bound
push
xor
pop
and
and
lock
mov
and
stos
fildl
orb
dec
cld
repz
jnp
xchg
movsb
dec
sub
sub
gs
push
outsl
popf
sbb
inc
insl
mov
fadd
rorl
pop
ret
lds
dec
sti
sub
mov
and
add
ds
jb
popf
pop
std
bound
mov
out
movsl
cmovs
scas
dec
or
sub
inc
cmp
dec
jne
int
jle
hlt
cmp
xchg
sub
xchg
fmulp
xlat
mov
mov
jno
cmp
movsb
jns
xchg
movsb
push
gs
mov
xor
aaa
cmp
xchg
cmp
push
xlat
je
loop
adc
inc
and
add
xchg
dec
xor
int3
push
xchg
adc
mov
xchg
mov
pop
xchg
outsl
sbb
mov
sbb
sbb
mov
cli
dec
inc
push
repz
sub
fwait
leave
xchg
adc
xchg
cmpsb
xor
lods
mov
imul
push
lds
sahf
mov
lea
in
daa
sub
xchg
pusha
xor
aaa
mov
cmpl
cmp
test
mov
inc
fisttpll
das
cmp
nop
sti
xchg
push
test
iret
rcll
pop
inc
pop
cmc
fbld
fmul
mov
fwait
jmp
inc
fisubs
mov
or
inc
jl
mov
pop
rcl
xor
lods
sti
shll
xor
mov
push
jbe
mov
lahf
icebp
pop
xchg
cmp
or
push
lahf
sbb
cs
rcrl
hlt
cmp
lret
ret
test
pop
out
stos
iret
or
dec
add
clc
push
jnp
jb
mov
jecxz
movsl
push
jno
insb
push
cs
push
mov
imul
or
cmpsl
jl
int3
fstp
pop
sbb
aad
ret
fwait
sbb
sub
pop
pop
jns
push
xchg
repz
mov
or
add
loopne
sbb
rclb
push
lock
inc
cmp
or
cmp
mov
adc
lds
add
and
call
xor
les
pop
jg
mov
aas
dec
mov
jecxz
push
dec
subl
xchg
mov
imul
jo
cmc
es
adc
mov
sub
cmp
pop
mov
lds
stos
and
xor
shll
mov
pop
mov
aam
or
cmc
cmpsl
sbb
mov
fnstsw
push
push
jno
push
xchg
xchg
xchg
mov
sub
fcompl
xor
and
xor
icebp
sub
in
and
sarb
or
addb
cmpsb
sbb
adc
jns
das
sti
loopne
test
out
leave
sbb
nop
pop
lcall
and
and
insb
test
sarb
icebp
cwtl
enter
cmc
mov
xlat
push
pop
sbb
pop
repnz
mov
cmp
xchg
push
lods
or
sbb
repz
adc
push
xor
imul
data16
mov
xor
pop
mov
cltd
xchg
xchg
ds
lahf
sbb
loope
jbe
xchg
push
inc
and
xchg
mov
ffreep
in
adc
sub
je
ret
pop
jge
mov
test
adc
pop
adc
test
cmp
add
inc
mov
sbb
fimull
inc
sbb
mov
test
sbb
or
push
in
loope
faddp
jmp
pop
cmp
mov
inc
jmp
leave
pusha
movsl
xchg
inc
gs
loop
jecxz
dec
es
mov
add
inc
ret
mov
andb
movd
sahf
inc
mov
es
cmp
sbb
push
leave
push
push
leave
push
repz
inc
mov
push
sub
or
and
add
lea
shll
cs
ret
push
adc
ret
ljmp
repz
fucomi
test
push
cmp
add
ficoms
or
xor
lret
scas
imul
jge
aaa
dec
lahf
add
add
xchg
ds
sbb
sti
mov
in
dec
fstps
ret
cmc
pop
sub
mull
and
dec
fisttpl
push
mov
sub
pop
add
stos
mov
cltd
out
inc
lcall
xchg
stos
divb
out
jge
push
fdivrl
ja
adc
outsb
jg
jbe
xor
cltd
mov
jb
mov
mov
aas
das
adc
push
test
fcoms
repz
inc
or
add
dec
mov
push
lcall
jne
shrb
sbb
cmp
cmp
ror
sbbb
mov
fsubrs
dec
clc
lods
mov
daa
add
push
jge
pop
test
mov
xchg
test
mov
pushf
out
pop
mov
mov
xchg
and
fs
leave
sar
add
in
loope
nop
outsl
dec
cltd
push
int3
stos
mov
push
jne
out
inc
or
cmp
dec
and
sub
mov
f2xm1
or
dec
andl
scas
sahf
push
out
mov
cmp
sbb
push
in
shlb
popa
stc
mov
loopne
pop
inc
inc
shlb
outsb
hlt
add
add
mov
sarb
xor
cmpsb
stos
mov
cmc
insl
jmp
addr16
das
andb
or
mov
and
dec
inc
inc
int3
pop
sub
bound
test
lcall
jg
mov
xchg
sub
cmp
iret
cmp
xchg
nop
jg
cmp
cmpsb
clc
mov
fisttps
lea
popf
es
in
mov
mov
xor
adc
imulb
lods
cmp
aas
cmp
mov
sub
and
inc
in
fiaddl
xchg
pushf
popf
inc
sahf
aaa
jae
out
fcompl
xchg
sbb
mov
sarb
aad
aas
std
and
out
jb
scas
push
mov
rcrl
sbb
leave
adc
mov
out
jae
mull
xchg
pusha
test
pop
mov
imul
les
ljmp
jp
std
add
jmp
jg
cmc
push
add
andl
dec
fldpi
add
loop
inc
lret
cmp
stos
pusha
push
nop
test
xchg
ret
imul
and
xchg
pop
in
pop
pop
repz
lret
loope
mov
aaa
jge
mov
sbb
sti
add
mov
cmpsl
lods
mov
iret
fadds
in
mov
push
xchg
dec
mov
insl
add
and
sbb
inc
sbb
mov
dec
fcomp
sub
jmp
scas
add
mov
dec
js
push
mov
jbe
push
jae
add
push
cld
inc
dec
pop
xchg
inc
dec
clc
fs
push
cmp
cmp
and
push
mov
add
int3
arpl
insl
enter
lahf
addb
in
dec
mov
sub
negb
int3
mov
sbb
out
lret
movsl
inc
inc
inc
ret
out
push
jnp
out
rcrb
sbb
loope
inc
jae
push
jbe
or
fsubl
push
mov
stos
sar
movsb
sahf
ljmp
repnz
testl
push
push
scas
das
gs
cmp
xchg
push
lock
fidivrl
mov
lret
xor
inc
and
pushf
push
pop
sti
hlt
into
mov
push
adc
pop
pop
add
mov
jecxz
mov
cwtl
push
jl
mov
jbe
rcrb
mov
stos
sbb
ljmp
sbb
mov
outsl
sahf
jns
fwait
jl
jbe
lahf
mov
movsl
lds
push
push
mov
adc
xchg
sbb
lock
xorb
in
xor
and
lock
or
cmp
lock
fisttpl
test
adc
mov
dec
leave
mov
inc
adc
inc
inc
lahf
rolb
cwtl
adc
cli
in
fwait
mov
in
inc
cmpsl
test
cs
lock
mov
js
pop
rcl
out
and
js
push
inc
sbb
mov
cwtl
dec
cmp
je
call
mov
xchg
sub
mov
pusha
fucom
iret
pop
sarb
lods
and
adc
mov
insl
inc
mov
sti
pop
mov
xor
sub
jbe
fcomps
jmp
mov
in
pop
inc
jmp
xchg
push
in
in
movsl
add
dec
mov
push
adc
out
add
das
stos
jne
aam
imul
jmp
stc
xchg
jl
test
minps
stos
inc
inc
dec
call
call
insb
sub
adc
sbb
adc
fbld
fsubr
xor
jo
jno
hlt
dec
or
fwait
into
add
call
pop
in
aas
sbb
imul
aaa
cld
out
xchg
push
xor
add
cld
push
mov
jbe
cs
push
fldl
int3
gs
stos
mov
sub
bound
call
xchg
push
jecxz
push
jns
outsb
push
sbb
test
mov
adc
cwtl
std
push
cmc
push
test
shll
daa
int3
cmp
mov
sbb
push
jnp
imul
cltd
pop
imul
loop
sahf
fs
push
push
or
sub
mov
hlt
xlat
mov
sub
scas
and
into
enter
test
add
jns
inc
rcr
ds
loopne
push
mov
arpl
lret
jle
xchg
lret
mov
int
bound
in
jecxz
add
ret
dec
dec
mov
add
adc
pop
cwtl
and
jno
lcall
sub
cmp
movsb
jb
test
or
mov
popf
mov
xor
dec
mov
push
adc
xlat
std
aaa
dec
and
movsb
fistps
add
push
int
push
lods
negb
outsb
xchg
xchg
fwait
iret
inc
stos
and
jo
xchg
std
mov
push
fiaddl
popl
mov
fildl
cmpsl
push
pusha
push
adc
ss
je
in
jne
pop
xchg
xchg
pop
sbb
add
adc
pushf
pop
push
and
jo
mov
jecxz
push
inc
mov
mov
mov
daa
mov
mov
nop
pop
jnp
xor
popf
hlt
cmc
jmp
mov
jne
dec
divb
test
xchg
into
sub
out
and
xchg
jne
or
jae
movsb
mov
adc
jl
xchg
xchg
pop
cli
mov
mov
pop
in
and
ljmp
cmp
cmpsl
mov
jg,pn
push
mov
fmuls
test
mov
data16
lret
out
pop
in
add
aas
fcomps
fldcw
fsubr
xchg
sub
shl
cmpsb
lock
outsb
fcmovne
repz
cmpsl
notb
xchg
cmp
mov
push
scas
push
fadd
adc
clc
aas
hlt
cmc
sub
jg
rcrl
das
ja
pop
incb
adc
mov
dec
out
gs
xor
jnp
jb
sbb
xchg
push
test
cs
movsl
inc
mov
mov
outsl
adc
rcll
xchg
and
or
lea
xlat
fcoms
and
lret
call
loope
aas
fiadds
or
dec
je
cmp
lea
test
movsb
mulb
cli
ds
fistl
mull
outsl
mul
imulb
sbb
int3
mov
inc
fidivrs
in
mov
pop
pop
dec
mov
lret
sarl
popf
jecxz
repnz
inc
jbe
and
addr16
sbb
xchg
cmp
stos
out
cmp
jmp
adc
lcall
out
jmp
push
push
fxch
js
std
pop
push
jecxz
lahf
fcmovnbe
dec
loop
insl
in
shrb
and
cmp
test
sbb
or
out
and
xor
shlb
repz
and
jmp
xor
mov
dec
shll
jne
mov
leave
adc
pop
push
inc
adc
mov
push
ficompl
scas
lock
jb
add
mov
rolb
std
cltd
push
xchg
repz
push
pusha
sbb
sub
aaa
add
pusha
inc
dec
fstpt
mov
add
push
pop
test
add
imul
fidivrl
imul
sub
pop
call
out
insb
add
bound
xor
lea
pop
out
cwtl
mov
dec
xor
ret
mov
pop
mov
adc
sahf
out
adc
mov
mov
inc
out
mov
pop
stos
fmulp
cmp
dec
jne
jmp
inc
sub
push
mov
jne
jno
ret
push
insb
pop
pop
stc
sub
adc
cli
or
mov
fsubl
adc
add
fcomps
pop
mov
js
cmpl
clc
add
cmpsl
or
adc
add
dec
dec
cmp
dec
fcomps
cmpsl
dec
or
inc
add
test
mov
jmp
lock
mov
mov
pop
mov
test
jo
xchg
adc
cmp
popa
dec
rclb
fcoms
push
add
ljmp
test
jnp
scas
mov
lcall
mov
nop
xor
daa
out
lea
push
or
sub
sub
out
cmpl
enter
bound
mov
jbe
fwait
rol
aad
push
jno
mov
in
cmp
mov
aaa
add
sub
cmpsl
adc
pop
push
pop
in
pusha
inc
cmc
xchg
call
call
sbb
mov
dec
imul
push
adc
mov
adcl
rcrb
xchg
loop
jbe
sub
inc
dec
xor
mov
cmp
push
cmp
jmp
imul
addr16
inc
or
xor
mov
cmp
mov
pop
rcll
xchg
testl
xor
adc
mov
sar
add
pop
xchg
outsl
xlat
jmp
ds
cli
jmp
xlat
dec
sbb
cli
cwtl
mov
fidivrs
pop
lahf
jo
dec
cwtl
push
xchg
push
addb
sahf
push
adc
jl
dec
push
pop
rcll
nop
dec
cli
mulb
sub
dec
fidivrs
inc
dec
in
xchg
stos
xchg
sahf
xor
jge
imul
or
mov
sbb
js
clc
add
ja
mov
add
ja
scas
inc
inc
cld
adc
call
outsl
jmp
sbb
shrb
cmp
xchg
dec
push
xor
pop
xchg
xchg
std
jmp
sub
xchg
int
ja
mov
pop
and
imul
mov
push
outsb
mov
mov
xor
rclb
inc
daa
mov
cmp
sbb
inc
cmpsl
ret
mov
call
sub
aam
repnz
and
fst
inc
dec
or
int3
dec
jb
lret
mov
ret
or
mov
add
push
dec
popf
push
inc
shlb
mov
pop
dec
lods
push
shlb
adcb
fistpl
xor
jo
hlt
test
rcl
enter
sub
inc
cld
add
int
in
mov
adc
mov
mov
lds
lahf
es
data16
xchg
mov
call
ja
ficompl
arpl
jno
xchg
dec
mov
push
xor
lahf
sbb
mov
mov
lds
loopne
push
scas
fidivl
les
in
nop
ror
mov
mov
jnp
and
xorl
fistpl
inc
mov
insl
in
cmp
clc
lret
xchg
xchg
pusha
jo
mov
cltd
adc
pop
ss
xlat
pushf
stc
dec
adc
sub
inc
aam
push
into
mov
mov
adc
and
pushw
xchg
lds
lock
popf
lock
clc
add
xchg
push
imul
pop
popf
xorb
jge
pop
xor
xchg
cmpsl
lea
fs
lods
or
mov
xchg
out
adcl
push
cmp
stos
ss
jle
gs
sbb
fistl
mov
adc
sbb
fyl2x
lods
inc
mov
into
add
iret
pop
xor
out
jne
pop
and
mov
arpl
movsb
push
xchg
aaa
movsl
scas
sub
sbb
pop
dec
hlt
jl
xor
iret
mov
lock
push
adc
mov
shrl
pusha
sbb
dec
xchg
out
cld
out
mov
scas
cmp
xchg
and
shlb
repnz
fcoml
daa
das
rol
in
cmp
inc
lcall
mull
repz
movsl
push
repz
popl
push
stos
mov
loopne
xchg
shl
mov
jle
sbb
dec
int3
test
xor
xchg
jno
and
lods
sub
lcall
fwait
repnz
stos
aas
pushf
or
je
cmp
jns
pop
aaa
ficomps
cmp
or
into
sti
shlb
test
dec
sbb
mov
shlb
mov
fistps
ret
sbb
out
push
out
cmpsb
and
out
test
cwtl
mov
xchg
testb
fists
dec
lods
push
add
inc
ss
and
cmp
push
adc
rcll
xchg
xor
mov
sub
push
xchg
in
xor
hlt
ret
iret
pop
lds
mov
push
xchg
sar
mov
aam
or
pmaxub
or
in
subb
test
mov
ficompl
mov
xchg
xlat
xchg
sbb
mov
push
decb
popf
or
sub
call
xchg
scas
and
in
sbbl
movsb
sbb
into
push
mov
mov
cmp
mov
fadds
and
icebp
cmpsb
les
mov
jae
sub
and
or
jecxz
outsl
jne
cmpsb
inc
or
cmpsb
cmp
jne
mov
adc
push
fs
out
js
jne
aas
pop
xrelease
mov
fstps
das
daa
mov
lret
pop
icebp
rolb
mov
pusha
or
add
xchg
fidivrl
cmpsl
dec
es
nop
xlat
mov
xchg
gs
and
cmp
into
jg
ret
adc
popa
jl
or
mov
out
test
call
adcb
stos
sti
add
adcb
stos
out
movsl
and
xor
in
and
test
fwait
and
xor
test
xorl
push
sub
add
and
hlt
xchg
loopne
inc
shrl
gs
or
mov
pop
cmc
push
test
sbb
pop
adc
adc
xchg
mov
adc
stos
outsl
in
mov
and
orl
shll
sub
adc
mov
xchg
pop
inc
pop
adc
cmpl
inc
jmp
fstpl
jg
cmpl
out
pop
mov
aas
adc
or
lret
xor
scas
jg
mov
cmp
mov
and
fcom
mov
or
jno
cltd
push
jbe
lods
sarl
iret
call
and
xchg
popa
das
es
sahf
loope
cwtl
cmp
dec
and
jnp
inc
daa
mov
jo
out
cs
xchg
lock
adc
mov
sbb
add
pop
orb
bound
or
pop
xor
out
xor
jecxz
pushf
add
jmp
jmp
pop
dec
fldl
mov
divl
push
les
std
or
jp
jg
push
js
mov
jbe
xchg
int
or
fisubs
dec
enter
pop
movsl
dec
cs
mov
bound
sub
mov
mov
xor
insl
test
mov
jno
mov
ret
adc
adcl
sti
xor
mov
test
and
add
dec
movsb
sub
add
into
mov
repnz
in
loop
hlt
jle
ljmpw
mov
insb
js
cld
mov
add
push
fcomps
iret
xchg
outsb
in
aaa
into
and
xor
lahf
and
js
in
mov
sarl
lds
push
ret
cmp
enter
dec
fucomip
jo
add
cmpsb
push
mov
xchg
mov
stc
aaa
lcall
mov
fmuls
add
test
add
or
lcall
fwait
inc
jbe
data16
ja
dec
daa
pusha
xor
bound
dec
adc
loopne
xor
push
filds
pop
dec
add
jnp
movsl
mov
pop
mov
fwait
mov
out
ss
fadds
rcl
jo
pop
or
cmc
push
aas
mov
sbb
cmp
repnz
arpl
mov
xchg
hlt
push
scas
jae
add
scas
jno
clc
pop
das
in
inc
sti
sbb
jne
cmp
sbb
icebp
or
nop
sbb
and
push
and
insl
ret
cmp
cld
mov
sahf
jge
es
cmpsl
dec
in
out
dec
jl
dec
aaa
aas
stos
xor
cmp
push
ret
shll
pop
mov
dec
dec
jge
fs
add
add
pop
mov
sub
jb
sbb
adcl
outsb
adcl
imul
xor
ret
adc
pushf
mov
and
add
mov
imul
sub
rcrb
repz
sti
filds
aad
inc
nop
in
icebp
inc
sub
sbb
out
mov
pop
loope
movb
jle
jp
adc
pusha
lret
scas
dec
ljmp
fsubrl
jp
dec
bound
bound
inc
icebp
enter
dec
xor
int
fwait
pop
adc
pop
aas
ret
and
mov
mov
or
mov
stos
div
dec
repz
fidivl
mov
cltd
into
cwtl
cmp
cmp
mov
shll
adc
adc
shll
and
scas
gs
mov
and
pop
stos
add
mov
shlb
and
mov
jns
idivl
mov
add
cltd
dec
jl
jae
push
dec
loope
and
inc
cmpsl
movsb
xchg
lods
sub
popf
repnz
xor
outsb
cmpsb
fs
push
sub
pop
xchg
adc
cmpsb
xchg
wbinvd
add
out
repz
jp
mov
cmp
xor
ja
xchg
mov
call
mov
mov
or
mov
in
xchg
adc
jle
inc
xor
shlb
sub
push
es
add
push
inc
pop
pop
xchg
out
fwait
add
jno
sub
loopne
mov
out
sbb
xchg
add
push
or
cs
inc
inc
ss
je
cwtl
pusha
push
ret
rep
iret
pushf
add
push
pop
scas
int
call
xchg
out
inc
pop
stc
mov
inc
adc
push
mov
xchg
mov
add
lock
inc
mov
push
xchg
push
mov
push
rolb
push
jg
cmp
mov
lret
cmp
out
scas
push
mov
imul
dec
xchg
mov
xor
xor
lods
ret
or
orl
sub
mov
or
xchg
dec
outsb
xchg
sub
pop
call
or
fistl
xchg
xor
mov
arpl
sub
test
and
lds
cli
push
cmp
std
ret
rol
lret
mov
xchg
and
and
mov
and
cld
daa
sub
pop
jae
mov
jl
jno
ds
data16
fidivrl
shlb
push
stos
dec
sub
popa
add
or
push
pop
xchg
dec
cmpsb
iret
icebp
jecxz
jle
sub
mov
addr16
punpckhbw
mov
push
imul
mov
jle
and
push
fisubrl
ds
lret
jl
fisttpl
adc
imul
mov
pop
xchg
icebp
add
stos
call
rorb
lret
pop
fcomp
inc
outsl
cmpsb
or
in
pop
dec
add
repz
push
andb
or
stos
ret
mov
mov
sbb
lods
adc
cld
fldt
jmp
insb
adc
mov
outsb
mov
lods
jbe
cmpl
scas
sahf
sbb
sub
add
push
pop
sub
ret
ret
cwtl
daa
xchg
lods
mov
clc
sahf
jno
xchg
das
push
fistpll
adc
loopne
pop
adc
rorb
jns
and
test
lahf
enter
pop
pop
in
xchg
xchg
mov
clc
test
nop
js
dec
mov
lahf
or
popf
repnz
inc
sbb
je
cmpsl
scas
repz
loopne
add
jns
sbb
scas
xchg
insb
cmp
xchg
adc
aam
dec
jle
adc
inc
lahf
push
rcrl
xchg
rolb
hlt
xchg
push
mov
adc
mov
shll
call
dec
pop
dec
jg
dec
lcall
push
xor
ss
loopne
fcompl
xor
mov
push
xchg
fisubl
fnsave
fdivr
out
loope
pop
in
js
mov
mov
jo
outsb
mov
cmp
sahf
jo
adc
fwait
ja
call
enter
seto
iret
popa
sub
fdivp
mov
in
and
mov
and
popf
cmp
pop
popf
out
xlat
pop
inc
jbe
push
jp
xchg
testb
into
gs
cwtl
xchg
sbb
inc
mov
jg
push
test
arpl
icebp
mov
dec
stos
mov
add
sarl
push
push
dec
pushf
roll
data16
xchg
cmc
dec
sbb
lea
cmc
stos
pusha
push
mov
and
jg
mov
mov
in
ljmp
pop
mul
pop
sahf
test
inc
push
lock
jmp
repz
pop
mulb
std
ja
test
outsb
lcall
pop
sbb
xorb
stc
jne
into
or
pop
sub
les
pusha
add
lods
xorb
out
add
xor
adc
dec
add
int
je
enter
mov
cmpb
ds
adc
mov
xchg
clc
insb
es
imul
or
jnp
cmp
adc
int
jl
int
inc
enter
and
jnp
adc
inc
jb
mov
lods
inc
xor
jge
clc
jae
sub
out
jp
mov
ror
testl
movsl
cli
pop
sbb
out
cmpb
addr16
outsb
sub
dec
cmpsl
mov
mov
lret
aam
cmp
aam
int3
movsl
add
mov
fstps
xor
cli
orb
jo
fmull
jo
bound
iret
call
lock
in
test
add
fmul
xchg
add
push
xor
cmp
sbb
mov
scas
stos
jp
cs
inc
cmp
sub
jns
fisubs
js
test
pop
xchg
mov
sbb
ss
push
sbb
sar
cmp
adc
nop
inc
test
imul
sbb
dec
xchg
ljmp
call
push
pop
test
pop
mull
xor
adc
nop
xor
mov
cmp
mov
mov
xchg
call
mov
cmp
insl
lods
cmpl
fldcw
mov
push
dec
lds
jg
out
mov
call
xchg
xchg
adc
add
das
ret
lcall
push
sar
aas
adc
je
or
jg
xchg
rorb
lods
sbb
pop
addr16
cs
add
iret
test
push
adc
xchg
inc
leave
and
mov
aad
and
dec
nop
clc
sbbb
inc
dec
int
cmp
and
test
inc
js
in
and
test
xor
loopne
divl
xor
sub
inc
sub
push
mov
jae
in
in
jo
test
mov
movsl
adc
mov
jp
xchg
or
shlb
jg
cltd
mov
add
mov
jne
push
inc
pushf
sub
je
fisttps
sbb
lods
jae
roll
lret
and
mov
test
arpl
pop
out
fcom
add
stc
xchg
jnp
mov
in
es
add
dec
jl
xchg
loope
test
mov
fxch
nop
loopne
lea
test
repz
daa
pushl
sbb
scas
xor
int3
orb
aad
je
jo
jbe
jg
mov
sub
push
sub
mov
icebp
sub
int3
nop
and
mov
jmp
les
test
sbb
int3
add
cmp
addr16
ss
gs
inc
dec
lcall
imul
lret
sub
mov
cmp
pop
mov
cs
add
les
jmp
pop
cmpxchg
pusha
adc
jb
shll
mov
out
dec
and
adc
cli
sbbl
lods
mov
and
sub
mov
xchg
xchg
lods
repz
cld
inc
mov
mov
xchg
jae
inc
and
or
lcall
loopne
aad
cli
in
inc
push
or
maskmovq
testl
push
rcrb
xchg
inc
push
movsb
xor
ss
jae
jmp
aam
add
mulb
mov
mov
pop
dec
add
sub
jmp
xor
fiaddl
jne
mov
jo
jmp
dec
and
leave
cmpsb
or
jbe
lods
fisttpll
rcrl
sbb
dec
aam
rcrl
add
subps
cld
inc
pop
or
cmp
push
popf
test
pop
add
sbb
push
push
test
in
in
mov
imul
mov
push
sarb
mov
leave
cmp
mov
push
lock
sbb
push
jne
js
inc
in
aaa
andb
bound
push
mov
jg
loope
mov
ds
bound
or
push
ffreep
xchg
psubq
add
xlat
addl
xchg
xchg
daa
cwtl
jno
mov
add
lret
imul
movsb
xor
push
jecxz
sarl
dec
pop
inc
in
sarl
repnz
xor
xlat
jmp
xor
and
sahf
movsb
xchg
cltd
roll
popf
push
adc
cld
xorb
adc
cld
sbb
fucom
sub
scas
inc
sahf
cmp
pop
push
sarb
les
movsl
pop
push
inc
je
enter
mov
xor
push
pusha
lea
mov
jl
jle
or
sbbb
rolb
bound
mov
xchg
xor
dec
jno
das
adc
push
pop
dec
das
pop
loope
sbb
scas
pop
jmp
mov
cli
addr16
loopne
xor
lods
aas
cld
pop
scas
cmp
shll
rcll
push
xor
dec
and
aam
cmpl
adc
xchg
sub
out
push
das
aam
inc
pop
pop
adc
sbb
pop
fbstp
fcompl
mov
movsl
jge
inc
addr16
dec
adc
adc
pop
add
paddq
pop
dec
stos
jge
mov
mov
mov
push
lods
jne
sub
arpl
add
aaa
cwtl
dec
sbb
ret
data16
push
inc
test
jle
jle
jl
data16
jmp
adc
test
pushf
xor
out
lahf
dec
aam
aas
sub
mov
enter
and
fwait
sbb
jo
mov
jne
ficoml
dec
jae
lock
or
fstpt
icebp
mov
or
popa
cmpsb
lret
sbb
test
fisubrl
cwtl
dec
or
dec
fsubrs
dec
xchg
dec
dec
push
xchg
and
xorb
imul
repnz
lock
mov
and
pop
pushf
flds
or
add
repnz
adc
imul
add
and
lea
xor
jns
and
cmp
pop
cmc
jmp
out
inc
dec
inc
cmpsb
rorb
mov
pop
int3
paddq
cmp
popf
ja
mov
aaa
or
flds
xchg
sub
das
adc
cli
or
daa
in
sahf
adc
ficomps
cmp
and
sub
fsubs
jbe
std
xchg
xlat
push
jle
xor
les
lcall
cld
lcall
les
mulb
xlat
xchg
jp
cli
xor
daa
rorb
add
iret
xchg
or
inc
fmuls
insb
jo
cli
leave
adc
imul
jnp
cmp
lods
int
push
push
movsb
je
cli
cli
adc
pop
decb
movsb
pusha
divl
push
in
test
pop
and
aaa
aaa
mov
jecxz
jne
sarl
sub
lock
lahf
repz
es
mov
repz
jle
lahf
leave
outsb
aaa
call
push
adc
cli
sub
jmp
xor
lds
xlat
jne
enter
aam
pop
dec
dec
rcrb
mov
cmp
test
lret
mov
fcompl
fcoms
push
into
out
shr
loope
sub
pusha
mov
or
sti
sahf
adc
pop
add
pop
inc
scas
loopne
daa
jae
pushf
xchg
adc
fisttpl
xchg
icebp
push
imul
dec
enter
call
push
push
mov
inc
pop
push
scas
mov
sbb
pushf
repz
or
sahf
js
ja
mov
jg
aaa
jmp
addl
mov
jg
jmp
pop
sbb
adc
cmc
lods
je
pushf
mov
jb
pop
data16
imul
xchg
mov
sti
push
adc
out
push
inc
and
arpl
jg
jl
inc
lcall
or
jge
pop
sub
push
ja
cmc
shlb
mov
out
loopne
stos
xchg
cmc
js
xchg
xchg
sbb
xchg
mov
clc
stos
shlb
stos
je
leave
or
pop
cmp
xor
push
jo
jae
jl
fs
and
xor
pop
push
mov
lret
mov
mov
adc
dec
arpl
jmp
jl
test
pop
cmp
les
jo
xchg
jg
aad
sahf
mov
loop
push
cltd
or
or
enter
sbb
push
adc
xchg
sub
cltd
cmpsb
xor
test
cmc
fisttpll
outsb
adc
mov
mov
add
xchg
sub
adcb
mov
mov
mov
stos
push
cmp
xorl
rcrb
xchg
loop
lock
fdivl
cmp
push
push
xchg
mov
mov
jge
movsl
js
cmp
icebp
int
mov
push
jns
jo
inc
add
fwait
push
shrl
js
sub
mov
mov
push
mov
xchg
and
push
jle
shll
subl
and
rclb
scas
icebp
or
or
test
icebp
cs
fld1
push
cmp
mov
cmp
stos
les
stos
fwait
sub
nop
sbb
inc
jns
mov
mov
pop
lods
sbbb
dec
dec
hlt
jg
pop
shrb
movsl
jg
jmp
loopne
xor
mov
pop
inc
iret
add
and
pop
and
xchg
mov
cmc
les
mov
mov
cmc
insl
jb
imul
jbe
ja
inc
scas
add
push
add
testb
push
xchg
ror
sub
lcall
aas
mov
cmp
fdivl
mov
fst
add
and
aas
popa
lods
cmp
clc
mov
mov
ret
popf
ret
lock
lods
cmpsl
outsl
pop
nop
filds
pop
pop
dec
popl
adcl
xchg
push
sub
pop
scas
iret
popf
xchg
addr16
mov
fdivrs
stos
sub
leave
push
xchg
mov
iret
xor
pop
je
aad
sarb
add
jns
jmp
jecxz
jmp
aad
mov
enter
lea
pop
xorl
fdivrl
lahf
loope
inc
loop
and
jge
fldt
xorl
or
popa
arpl
test
maxps
and
test
cwtl
icebp
or
movsl
repz
mov
std
cmc
scas
outsb
out
mov
xchg
lret
mov
sub
in
or
lock
sbbb
lods
frstor
add
loope
enter
loopne
mov
jp
stos
pushf
leave
gs
adc
dec
inc
repnz
dec
roll
and
dec
addr16
cli
pop
xor
ja
xlat
pop
or
sub
js
mov
aaa
adcb
mov
xchg
mov
cmp
cmp
lcall
sub
ljmp
je
dec
in
add
pop
adc
and
stos
leave
fimuls
push
je
jbe
add
or
adc
es
je
fisttpll
inc
loopne
mov
psrlq
mov
loope
mov
xor
push
cli
bnd
push
jo
insl
inc
mul
mov
ret
or
push
test
in
push
cmpsl
pop
out
pop
jg
cmpsl
out
int3
add
lock
icebp
xchg
fnstenv
pop
push
mov
mov
pcmpgtd
fidivrs
in
out
jo
mulb
jg
inc
dec
in
mov
jns
and
pop
push
sbb
push
shlb
mov
jb
mov
jecxz
pushf
das
nop
cltd
and
mov
arpl
mov
in
push
enter
scas
data16
adc
hlt
add
cmp
mov
dec
fs
mov
popa
mov
divl
imul
ret
xor
add
pop
in
mov
aas
adc
sub
xlat
stc
jnp
lret
add
jp
lret
sub
xor
fidivrs
or
daa
mov
mov
jge
xchg
cmpsb
insl
mov
aaa
dec
push
in
pop
dec
lcall
daa
das
inc
iret
mov
cmpl
adc
adc
sbb
or
andl
rol
nop
loopne
rclb
dec
adc
in
stos
mov
call
xchg
pop
cmp
and
push
test
test
jae
in
js
mov
and
cmp
inc
gs
outsb
lcall
gs
scas
sub
lock
ds
les
shlb
sbb
dec
sub
xchg
jnp
or
add
gs
dec
push
jg
mov
and
jge
imul
sbb
pop
pusha
mov
and
xor
das
pushf
sub
inc
repz
scas
jae
pop
sub
ret
xchg
lahf
pop
stos
xchg
cmp
and
in
pop
xchg
dec
jle
cwtl
aas
push
adc
or
int
outsl
movsb
add
fsubl
adc
arpl
inc
inc
add
decl
shlb
adc
lret
and
lods
dec
test
test
push
add
sar
je
loop
scas
mov
movsl
or
cmpsb
ror
cld
leave
fwait
lea
ss
js
mov
sub
xchg
mov
push
jp
ficompl
sbb
mov
add
gs
pop
aad
cmp
out
jbe
les
mov
sub
cmp
out
out
xchg
div
leave
push
dec
movsb
jno
or
divl
sub
cli
sub
xor
aad
fcomip
xor
cmpsl
pop
mov
sub
push
aam
sbb
enter
iret
pop
fistl
fnsave
dec
addl
dec
jp
xor
pop
fs
add
mov
sub
fcomp
cmc
inc
pop
clc
inc
lcall
sub
call
frstor
out
or
dec
jmp
xchg
cli
loop
sub
test
sub
push
dec
pop
push
xor
ds
inc
mov
sub
cmpsb
xchg
sub
jno
xor
and
ret
jp
cltd
in
call
xchg
or
ret
dec
mov
clc
jbe
push
in
dec
mov
lock
aas
mov
hlt
sbb
pop
jnp
das
xchg
fwait
out
mov
pushl
cltd
pop
ljmp
in
jne
xchg
mov
dec
jnp
outsl
sub
add
cmp
mov
mov
mov
mov
jl
rcrb
aas
hlt
mov
in
mov
xchg
dec
mov
mov
push
cmp
cld
sbb
sub
ja
mov
pushf
lea
xor
mov
add
adc
insb
out
je
into
push
pop
push
mov
mov
xchg
call
xor
xor
es
es
ret
cmp
cmp
push
jmp
jnp
jne
cmp
popl
aam
aam
aas
clc
loope
adc
inc
jmp
out
dec
xor
insl
int3
iret
mov
lcall
dec
push
mov
movsb
mov
add
rclb
and
cmp
test
imul
stos
repz
fdivp
push
es
jmp
and
movsl
cmpb
xchg
mov
xchg
mov
xor
imul
xchg
dec
hlt
cmp
test
push
sbb
pop
incl
push
hlt
int
mov
mov
xchg
lcall
inc
mov
ja
cmp
ret
xchg
lret
push
rclb
pop
lods
mov
mov
ret
outsb
into
ficoml
sub
xchg
sbb
adc
mov
es
add
adc
mov
fsubrl
icebp
add
xor
and
sbb
fnstsw
add
pop
ret
adc
sub
pop
xchg
cmpsl
lahf
mov
add
jp
stos
xlat
sub
fistpll
xchg
jle
inc
bound
sub
cmpsb
rcrl
jecxz
in
push
pushf
adc
inc
cmp
cmpsl
sbb
add
cltd
imul
xor
ljmp
inc
cmc
aas
andl
cmp
pop
xchg
ret
nop
xchg
test
inc
push
and
ficomps
and
ret
std
pop
lock
sbb
lods
fistps
jecxz
mov
mov
jg
pop
or
push
enter
cmc
adc
jl
repnz
je
or
imul
jne
das
cmpsl
mov
bound
push
shl
aam
lock
inc
xlat
sti
jnp
int3
das
sti
imul
push
test
in
imul
enter
add
mov
sbb
xor
flds
fmull
or
clc
xchg
dec
mov
push
add
cmp
cmpsb
jb
sub
cmp
das
inc
aaa
es
inc
push
push
scas
fisubs
shrl
pop
lahf
int3
dec
or
rorb
in
pop
in
push
xor
mov
rorl
cmp
popa
das
es
mov
in
add
inc
loopne
bound
pushf
test
jg
mov
es
inc
xor
xchg
push
movsb
jo
xchg
jae
add
push
or
ss
mov
push
pop
iret
adc
ja
loopne
out
lret
loope
js
jge
cltd
inc
cmp
dec
xchg
xchg
jecxz
cwtl
fwait
popa
jo
popa
pop
insl
fidivl
imul
cld
das
inc
push
fsubp
cmp
mov
adc
popa
iret
andps
cmpsl
pop
or
push
movsl
inc
hlt
push
int
xchg
aad
cld
adc
xchg
push
push
adc
or
fadds
hlt
sti
pop
sub
pop
cmpl
sarb
jp
push
mov
push
test
jmp
jl
leave
sub
add
dec
test
dec
lcall
pop
push
adc
rcrl
mov
sahf
inc
inc
shlb
push
xchg
dec
mov
andb
and
pop
ljmp
push
cmp
pop
mov
add
fs
inc
mov
loopne,pn
mov
mov
mov
ror
test
aad
icebp
ret
xchg
xchg
or
xor
out
aaa
stos
mov
mov
inc
pop
xor
lods
jne
pop
push
push
pop
cmp
add
pop
inc
sbb
sub
lds
mov
mov
mov
push
add
jne
loop
dec
cvtdq2ps
push
pusha
test
mov
fnstcw
sbb
mov
int3
or
vcvtdq2pd
fwait
dec
fistpll
mov
pop
stc
mov
jo
pop
mov
sub
mov
stc
popa
fnop
mov
push
cmp
pushf
push
inc
pop
mov
stos
movsl
out
in
popf
mov
mov
fchs
stc
cltd
fsubrs
inc
leave
or
add
aaa
imull
push
ret
mov
es
cmp
pop
sub
je
cmp
lret
mov
movsb
inc
ja
mov
mov
dec
cwtl
lcall
lahf
sbb
lret
mov
xchg
jne
xor
jb
inc
in
push
popf
lds
lds
je
js
cld
jge
mov
xor
fcomps
int3
mov
pop
mov
and
aaa
xor
enter
les
scas
add
scas
and
call
push
inc
inc
lds
mov
mov
cld
mov
add
adc
mov
fldenv
lea
or
dec
out
jne
imul
mov
pop
stos
push
mov
push
add
xor
fstpt
add
sarb
sti
shrb
xchg
aaa
ja
inc
mov
outsl
pushf
sub
loop
scas
push
adc
inc
cld
pusha
ja
das
mov
in
cmpsl
fdivrs
out
xor
negb
cmp
mov
ret
add
fmull
ja
fs
pop
mov
hlt
adc
dec
dec
add
push
fwait
enter
pop
cmp
sub
les
test
das
in
clc
fsts
ss
popf
test
das
adc
adc
fbld
push
jmp
aas
push
push
outsb
fsubr
je
pop
repz
xor
or
add
sbb
movsl
leave
loop
in
xchg
push
xchg
mov
fadds
cmp
nop
jmp
jne
cmpsb
lahf
mov
andb
cltd
ficompl
lcall
xor
jb
aas
mov
xchg
ljmp
add
inc
addl
mov
cmp
fcmovne
mov
jg
pop
cmpsb
mov
mov
xchg
fs
cmp
sahf
rclb
mov
mov
je
add
mov
imul
inc
loop
and
lods
fs
push
pop
rclb
std
movsl
jno
inc
leave
lods
or
or
inc
pop
repz
dec
cmpsl
pop
mov
inc
cmp
and
mov
popf
cs
jecxz
leave
sbb
pop
inc
cmp
push
or
pop
jl
mov
aas
pop
push
and
adc
repz
jecxz
fmuls
insb
lret
gs
fdivs
push
scas
push
mov
inc
addb
loop
sarl
cmp
mov
pop
or
sbb
inc
and
mov
add
dec
xlat
mov
outsl
imul
das
mov
adc
sti
mov
or
int3
push
int3
mov
lods
cmp
rclb
sub
inc
repz
mov
shlb
mov
xor
mul
outsb
ret
jo
stos
jbe
mov
sub
enter
add
push
mov
adc
push
lods
popf
sbb
ret
leave
jg
cmp
jmp
add
add
mov
jbe
push
shlb
in
rcl
loopne
ja
jbe
jae
adc
jl
inc
sub
fdivs
or
sub
aad
loopne
sarb
pusha
mov
sbb
es
add
mov
jae
arpl
push
mov
insb
and
mov
test
int3
fcomps
fistl
mov
cmp
flds
jl
fnstsw
and
inc
cmpsl
or
out
in
push
mov
jmp
inc
cmpsb
inc
cmp
ljmp
jno
arpl
sahf
push
rol
js
pop
or
es
mov
or
sub
xchg
lahf
xchg
ljmp
imul
lcall
inc
sbb
jle
fs
inc
movb
lcallw
or
jo
stc
pop
inc
subb
sbb
sbb
faddl
mov
mov
xchg
cmp
out
popf
daa
outsb
outsl
aas
xchg
mov
add
movsb
pop
repz
movsl
xchg
dec
adc
loopne
dec
ret
push
push
sbbl
and
push
mov
es
popa
in
mov
ret
add
xchg
adc
data16
mov
loop
aaa
push
call
aam
call
das
xor
xor
cmp
mov
loope
out
lea
push
mov
xor
jae
cltd
xchg
mov
dec
loop
xchg
ret
dec
pop
xchg
pop
int
push
adc
cmc
testb
jne
out
pop
pop
push
mov
sbb
fcomp
enter
pushf
test
mov
jnp
pop
lock
add
adc
nop
cmovbe
lret
into
jmp
shrl
mov
xchg
jne
mull
and
adc
adcb
cltd
jae
lret
inc
mov
push
lock
adc
int3
cmp
insl
add
xor
popa
in
mov
test
xchg
ficompl
mov
jbe
ret
arpl
add
xchg
fdivrl
or
pusha
test
in
and
inc
aas
out
push
lock
data16
das
and
fstl
imul
sbb
stos
cmpsl
popf
pop
pop
xor
test
mov
or
push
int3
daa
xor
jl
cmp
mov
scas
cmp
int3
test
enter
adc
cmp
push
sub
or
sbb
sarl
cmp
inc
loop
xchg
pop
cwtl
es
pop
loope
add
stc
int3
add
or
sbb
setb
rol
push
mov
xor
sub
jne
dec
xchg
sbb
gs
mov
inc
mov
hlt
loop
push
pop
push
negl
sbb
cltd
inc
mov
jle
jp
ja
sub
mov
push
mov
pop
cld
fidivrl
call
or
dec
imul
rorl
dec
les
test
jl
cltd
dec
mov
mov
in
data16
and
sub
in
adc
push
notl
xchg
push
pop
test
int3
push
xchg
mov
inc
mov
std
add
or
loop
push
daa
movsl
xlat
out
push
scas
movsb
inc
push
loop
pop
clc
inc
jecxz
lock
in
lahf
repz
loop
in
mov
push
int
adc
clc
arpl
dec
xchg
adc
and
adc
test
xor
xchg
xchg
jge
sub
xchg
leave
inc
push
aam
aam
inc
xchg
jno
mov
mov
fnstsw
add
mov
mov
sub
pop
adc
mov
inc
xchg
hlt
mov
stc
jp
mov
push
mov
push
xor
fcoml
bound
cmp
push
cld
sarl
mov
mov
sbb
les
cmpsb
or
cmp
jecxz
cmp
push
fwait
jae
push
test
leave
adc
pop
orb
mov
pusha
lahf
ds
stos
in
mov
jle
out
and
cmp
dec
shld
cmp
adc
fldcw
in
jg
sbb
cld
loop
shll
pop
test
fistps
popf
cmp
cmp
or
mov
lcall
shr
lock
xor
xor
inc
sub
pop
push
inc
xchg
mov
lcall
and
dec
ficoms
iret
xorl
jecxz
fistpll
adc
dec
maxps
imul
fucomip
cmp
test
push
pushf
test
jnp
mov
hlt
out
xchg
pop
in
fbstp
add
arpl
imul
fcmovu
jg
out
repnz
subb
dec
ficoms
jmp
mov
and
and
push
aaa
ljmp
data16
cmpsl
iret
nop
jp
mov
repnz
jg
add
mov
xchg
cmp
popa
or
jp
xchg
xlat
push
push
inc
cmp
pusha
mov
insl
mov
rolb
jno
push
stc
add
cli
fisubl
mov
je
adcb
pushf
cmp
xchg
ja
mov
pop
jmp
dec
clc
je
call
fstps
inc
mov
sbbb
cmp
mov
push
rorl
pop
xor
popa
in
js
out
jne
imul
xchg
jmp
addr16
inc
mov
adc
test
shll
stos
pop
and
mov
cltd
dec
xlat
icebp
dec
or
or
jne
mov
movsb
sbb
add
enter
xor
movsl
mov
std
mov
sub
or
fs
cmpsb
fmuls
cli
jge
push
cwtl
dec
in
ffreep
add
ss
and
adc
js
leave
mov
dec
shr
stos
xor
dec
push
jbe
and
xlat
and
pop
mov
gs
insb
pushf
jmp
mov
shll
fisubrs
mov
cmp
inc
cmp
cmp
or
movsb
je
push
call
fidivrs
sub
xor
gs
fistl
and
pop
lret
or
sbb
je
pop
shl
es
leave
push
dec
jno
or
and
insl
ret
inc
mov
mov
je
cmp
push
inc
sti
nop
sarb
fisubrs
and
sbb
leave
inc
out
mov
shlb
sbb
mov
xchg
dec
ret
aad
mov
inc
cwtl
iret
push
xchg
sub
add
and
jbe
scas
into
and
xor
sbb
js
dec
sub
jne
cmc
sti
stc
iret
inc
jecxz
mov
data16
loopne
and
incl
icebp
arpl
nop
sbb
cmp
mov
test
dec
xchg
fistpl
sti
mov
arpl
lods
test
inc
jg
dec
and
loopne
cs
negl
mov
jle
pop
mov
pop
sub
in
ret
loope
xor
vmread
js
js
lcall
mov
lods
stos
icebp
xchg
jge
push
mov
xor
xchg
iret
hlt
in
xorl
push
andl
fbld
ret
xchg
cld
sahf
stos
or
xor
stos
repz
out
pop
cmpsl
mov
inc
mov
xchg
jmp
daa
or
andl
dec
pusha
sub
or
and
xlat
adc
xor
insl
xchg
mov
sub
sbb
les
cltd
scas
out
cmp
aam
jmp
ror
lods
inc
ret
pop
jmp
inc
inc
je
and
addr16
inc
sbb
mov
adc
dec
loopne
mov
lahf
mov
fisubs
push
outsb
mov
notl
push
lcall
nop
pop
push
repz
stos
call
testb
pop
adc
xor
or
xorl
mov
out
cmp
inc
xor
ljmp
xlat
push
mov
mov
adc
cmp
std
sub
pusha
aas
pop
decb
icebp
xor
xchg
ds
iret
inc
out
push
addr16
stos
mov
adc
cmp
sahf
jg
mov
loope
orb
push
sbb
fdivl
test
inc
jo
lret
cmp
push
das
subl
sbb
imul
outsl
mov
int3
inc
and
push
lret
ret
loopne
pusha
imul
push
inc
scas
mov
xchg
std
test
jg
or
xchg
mov
xchg
call
rdtsc
rorb
subb
xor
xlat
adc
push
push
dec
cmp
pop
inc
ja
in
cmpsl
cmp
mov
out
fsubs
or
lahf
subb
lock
aas
insl
sahf
inc
fildl
sub
add
ja
dec
cmp
pop
stc
daa
insb
daa
repnz
dec
push
xchg
ja
inc
mov
cmp
xchg
add
jge
int
stc
lret
pop
add
insl
loop
lea
data16
mov
dec
pop
sbb
jle
imull
xchg
stos
xchg
mov
insb
or
js
sub
mov
xchg
out
mov
loopne
mov
shlb
push
fwait
jne
cmp
push
mov
out
mov
shr
sub
test
mov
in
not
das
leave
ljmp
pop
icebp
out
xor
jb
pop
pop
fildll
jns
notl
jecxz
ret
adc
scas
push
dec
fwait
aad
inc
jmp
stos
jne
adcl
fcomps
cmp
push
push
add
dec
movsl
cmp
xor
mov
push
jg
fld
inc
lret
inc
add
mov
xchg
sbb
nop
sbb
outsl
adc
fadds
addb
pusha
lods
jp
xor
cmp
add
push
sbb
gs
mull
mov
xor
xchg
imul
pop
xor
pushl
xor
adc
mov
push
cmpsb
cmc
and
int3
xor
stc
mov
xchg
inc
orl
push
cmp
mov
divl
xchg
imul
jle
nop
pop
cmp
sbbb
mov
imul
nop
dec
push
xor
dec
or
sbb
jno
jnp
sar
movsl
loope
hlt
fcoml
bound
cmpsl
out
jmp
sahf
inc
aam
mov
shl
push
sub
sbbb
pop
repz
jno
mov
fisubs
aad
xor
mov
bound
mov
addb
loop
loop
mov
push
repz
inc
cmp
pop
xor
mov
cmpsl
adc
ja
loopne
mov
lods
pop
ds
adc
fdivrl
notl
mov
iret
pushf
fwait
icebp
jae
fistpll
mov
xor
pop
mov
lahf
adc
inc
clc
pop
sahf
pop
test
movsl
ret
mov
inc
popf
call
pop
cmp
pop
pop
pop
jno
sbb
jns
ficoml
shrl
int
pop
push
mov
push
xor
push
lock
inc
lcall
xor
mov
loop
xchg
aad
outsb
xorb
fs
rol
dec
dec
sbb
jb
mov
cwtl
push
cmp
xor
mov
inc
inc
and
aas
mov
stc
clc
push
mov
stc
rclb
inc
pop
stos
loope
mov
xchg
push
jnp
in
lret
add
rcrb
loope
pop
fldz
push
or
out
les
data16
mov
adc
fcomi
pop
lret
in
outsb
adc
es
ss
xchg
aad
dec
inc
sub
cmp
lahf
ljmp
jg
scas
jno
adc
cmpsl
mov
push
loopne
and
lea
fwait
pop
push
adc
xchg
inc
js
loopne
mov
fisttps
inc
das
pop
push
dec
jge
mov
lods
outsb
or
and
cmp
cmp
jne
gs
loope
cmp
ffreep
pop
les
xchg
jmp
add
cmp
mov
adc
inc
sub
insb
jg
or
ds
cmpsl
xor
in
push
pop
dec
push
nop
sti
sub
mov
push
or
sub
inc
cltd
arpl
dec
into
in
ret
outsb
popf
adc
push
inc
cmpl
inc
lds
sahf
sahf
mov
sub
jno
fidivs
movsl
mov
jmp
sbb
fwait
scas
ficompl
pusha
leave
aad
in
bound
pushf
repnz
push
loop
loop
sbb
adc
iret
add
push
cli
xor
cld
dec
call
sub
push
lods
inc
ja
dec
dec
imul
xor
addl
std
aad
jne
mov
xor
aas
pop
xlat
xchg
mov
test
mov
jae
flds
mov
xor
mov
mov
clc
inc
inc
out
in
jno
ss
jle
jb
push
fsts
adc
dec
cwtl
cld
push
sub
lods
or
repz
nop
or
cld
adc
cmp
mov
mov
push
sbbb
mov
jae
imul
loope
mov
cmp
push
sti
stos
clc
inc
adc
mov
cvtdq2ps
cli
push
jnp,pt
push
int
jno
xor
cmc
mov
out
and
jns
dec
sbb
fisttpll
cld
push
stc
scas
dec
mov
aaa
inc
incb
jnp
dec
mov
cmpsl
mov
or
jns
aas
add
sbb
jp
add
leave
sbb
gs
adc
sbb
test
jno
xor
lcall
mov
inc
inc
pushf
sbb
das
mov
lock
mov
sbb
bound
jae
aam
mov
inc
dec
imul
push
stos
add
and
xchg
cmpsb
or
lcall
mov
test
sti
scas
daa
inc
mov
scas
mov
xor
fldt
lds
inc
mov
adc
std
out
xor
cs
adcb
cmpsb
fsts
fimull
out
xor
pushf
lret
inc
jmp
test
ds
jno
aas
stos
jbe
mov
icebp
sahf
daa
jnp
xlat
loop
jnp
into
pop
div
or
inc
inc
out
insl
int3
lods
jb
sub
jb
mov
mov
iret
out
pop
shlb
inc
push
popa
mov
push
out
xchg
js
sahf
inc
imul
cmp
jnp
fisttpll
into
cltd
ss
fs
add
push
lock
andl
hlt
push
jb
sub
mov
roll
push
data16
mov
gs
cmp
xchg
adc
pop
adc
clflush
testb
es
inc
and
imulb
mov
and
xchg
fldcw
cmp
mov
loopne
std
hlt
mov
mov
jb
gs
icebp
sub
shlb
and
ljmp
aaa
mov
pusha
insl
loopne
cmp
pop
lods
xchg
insb
outsl
aam
dec
push
inc
fs
sbb
pushf
das
stos
xlat
shll
cmp
imul
cwtl
arpl
repnz
mov
sub
dec
outsb
fwait
xchg
dec
cld
inc
or
js
push
mov
fadd
adc
adc
aaa
stos
xchg
ds
sti
sbb
pavgw
adc
cmovb
add
cmp
lds
mov
inc
mov
fcmovb
mov
adc
icebp
movsb
add
repz
outsb
dec
test
mov
les
int3
mov
mov
js
mov
pop
xchg
pop
push
popf
adc
mov
out
sarl
lea
fldcw
nop
push
fs
pusha
sbb
and
jle
call
movsl
in
jns
lock
pop
stos
inc
mov
scas
xchg
mov
scas
cmc
add
je
jbe
push
xchg
sbb
sub
icebp
push
add
inc
sub
int
xchg
enter
fcompl
push
fisttpll
das
in
pop
jbe
mov
sub
sub
dec
mov
clc
jmp
clc
mov
jb
gs
cmp
popf
enter
bnd
mov
xchg
adcl
or
push
sub
loopne
imul
insl
pop
mov
inc
mov
dec
push
mov
dec
jne
pop
sub
or
pop
xor
js
jge
push
or
inc
and
mov
push
or
aaa
adc
les
ss
mov
jl
sbb
fidivrs
pusha
or
rcrb
add
jmp
test
pop
xchg
shll
fcmovu
insl
pushw
adc
enter
das
mov
pop
dec
mov
pushf
out
jg
xchg
push
adc
push
dec
sahf
aaa
push
leave
icebp
mov
packsswb
and
jl,pt
insb
push
mov
mov
jbe
in
js
add
sub
mov
das
nop
out
lret
lds
lret
flds
out
test
aas
daa
mov
xlat
insl
ja
jg
dec
xor
test
int
mov
loop
into
and
cmc
int
das
sbb
inc
pop
cld
mov
sbb
mov
mov
aam
lock
and
mov
or
mov
push
push
push
inc
cmc
imul
fwait
and
mov
mov
inc
xor
pop
adc
into
cli
int
jp
sub
ljmp
add
cmp
mov
jp
mov
dec
inc
lods
cwtl
test
mov
fwait
push
ja
test
test
pop
in
jo
lahf
in
je
lock
aam
mov
std
mul
std
stos
mov
dec
lds
pop
inc
add
es
cmc
xchg
cmpsl
jne
xlat
sub
push
insl
bound
jne
xor
push
mov
mov
sti
mov
adc
call
rorl
into
leave
xchg
aas
mov
outsl
cltd
das
push
mov
mov
push
push
mov
fs
ljmp
cmp
lods
mull
dec
xchg
add
xor
mov
xor
xchg
cli
in
mull
inc
pop
roll
test
mov
aaa
xchg
cmc
dec
xor
push
fidivl
sbb
scas
add
dec
xor
push
es
mov
inc
aas
jne
adc
inc
xchg
pop
into
rclb
bound
outsb
in
cmp
add
call
lock
pop
mov
push
push
pop
or
jmp
xor
jecxz
and
inc
xchg
call
push
xor
sbb
pop
jne
ds
push
in
or
popl
push
in
sub
dec
das
pushf
cld
addl
scas
sahf
movsl
in
pop
int3
push
pusha
imul
inc
inc
sbb
cmpsl
rcrb
inc
shlb
into
cmpsb
out
scas
lods
mov
in
sti
inc
xchg
mov
cltd
outsl
pop
pop
cmp
fs
mov
mov
in
fisttps
sahf
aad
into
hlt
mov
or
jl
xor
or
cli
sbb
fstpt
sub
fldt
inc
aas
ja
pop
and
mov
mov
xchg
sbb
mov
sbb
les
jl
jmp
mov
out
dec
pop
fidivrl
fs
xor
stos
addr16
int
rcrb
addr16
pmuludq
pop
dec
dec
pop
loopne
cli
lods
xchg
sub
lea
shl
mov
sbbb
ljmp
js
dec
pop
or
lods
lret
popf
or
sbb
mov
lret
dec
or
cmp
jl
out
mov
loop
cmp
jge
cmp
sub
cmp
das
imul
and
sbb
inc
xorl
xchg
cmp
cmp
sbb
xchg
daa
adc
cmp
mov
repnz
in
es
jae
cmp
mov
shrb
ljmp
fcmovnu
leave
fiadds
pusha
ljmp
out
in
sbb
popf
mov
insl
pop
pop
dec
mov
fwait
shlb
aas
xchg
jmp
mov
sbb
push
push
sub
cmp
cmp
orl
loope
in
jne
jns
and
mov
pushw
rorl
xor
inc
fistpll
aam
pop
jae
mov
ja
cmp
dec
pop
sbb
dec
xchg
and
dec
aad
mov
cs
cmp
ds
fistpll
xor
jb
pop
push
sbb
lds
scas
add
in
mov
hlt
sahf
mov
stos
inc
sbb
or
sahf
and
jmp
divb
ret
addb
out
add
jbe
or
jg
xor
mov
jg
xchg
or
jmp
push
arpl
cmp
leave
pop
fldt
pusha
mov
aam
insb
add
mov
cmp
inc
int
mov
pop
jae
push
pop
out
repz
loopne
dec
lea
repnz
push
xlat
rclb
cmpsl
push
int
inc
negl
sarb
sbb
inc
cwtl
and
out
mov
xchg
ds
decl
insb
inc
inc
jo
jns
fcom
dec
aad
push
stc
insb
jle
mov
cmc
xchg
lods
loopne
and
fcmovnu
jl
pushf
xor
into
hlt
inc
adc
int
adcb
fisubrs
inc
icebp
scas
xchg
int
xor
enter
push
jne
xchg
xor
mov
mov
xchg
xlat
mulb
xchg
mov
push
nop
push
xchg
dec
sub
xor
or
adc
insb
adc
pop
mov
cltd
mov
stos
jb
xor
mov
int3
and
jbe
push
adc
push
cmpsl
icebp
push
icebp
pop
lods
lods
popa
ljmp
leave
sbb
push
shl
xor
xor
mov
cmpsb
sub
adc
inc
xchg
arpl
rorb
repz
clc
popf
test
out
cwtl
cmp
or
mov
ret
fmuls
push
mov
and
mov
repz
jae
and
xchg
int3
pop
pop
into
pop
shrb
add
push
xor
xlat
jg
lods
lea
and
pop
jns
ret
pop
frstor
xchg
xlat
cli
inc
imul
ret
cmpsb
push
push
out
mov
fimull
ret
aam
sub
data16
pop
push
xor
mov
shrb
jge
ljmp
roll
addr16
mov
xor
sbb
or
fs
loope
test
mov
test
and
jmp
mov
push
das
mov
or
lret
enter
xor
jae
cmp
pop
ljmp
mov
leave
lea
imul
jge
push
xor
outsl
mov
iret
addl
inc
jno
xchg
push
fsubrl
add
jecxz
or
dec
push
dec
sbb
popf
fnstenv
movsb
mov
jge
out
incb
mov
cmpsl
cmpsl
mov
cmp
rcrb
mov
mov
and
mov
mov
jno
pop
lahf
mov
xor
enter
enter
xchg
pop
fsts
stos
sbb
mov
lret
sub
inc
imul
lcallw
dec
mov
mov
shrb
je
pop
mov
push
das
xchg
push
push
push
rcl
lret
or
or
js
shrl
mov
mov
fwait
sub
jns
stc
pop
inc
sub
divl
mov
lea
ret
pop
jb
rcrl
or
lods
push
jnp
aam
imul
xchg
in
in
sahf
push
jmp
lahf
mov
ja
call
lahf
inc
inc
dec
pop
rclb
dec
test
iret
jno
inc
xor
xchg
sahf
dec
pop
jae
mov
sbb
cmpsb
pushf
inc
add
xchg
ret
push
mov
push
sub
push
in
sbb
pop
les
cmpsb
push
test
sar
std
sub
call
call
lahf
mov
shlb
push
fstpl
fs
icebp
aas
mov
mov
jno
mov
sub
pop
xchg
ret
jmp
or
in
jp
adc
shll
fbstp
rcrb
mov
mov
mov
sti
movsb
inc
jg
sub
sbb
push
lret
or
clc
cmc
push
insb
aas
push
add
push
pop
lds
pop
mov
mov
fstl
fisubs
cmpb
mov
push
popf
repz
in
push
fwait
push
ret
cwtl
cs
inc
stos
inc
cwtl
inc
mov
mov
fiadds
mov
push
dec
inc
cwtl
or
les
leave
mov
subb
call
les
xor
or
cmp
push
mov
or
xchg
out
iret
bound
testl
xchg
sbb
je
push
mov
or
jb
shlb
repnz
xchg
std
xor
mov
mull
pop
push
jb
lcall
shlb
add
int3
ljmp
out
daa
ret
js
add
cmpb
inc
pop
in
mov
rcr
enter
out
rorl
sbb
mov
push
inc
jae
mov
add
in
inc
aaa
shlb
icebp
add
sub
jl
js
popa
pop
pop
test
int
test
jg
scas
pusha
mov
into
jbe
pop
cmp
pop
adc
sbb
push
out
cmpsb
int
add
mov
xor
stc
dec
cmp
or
repnz
push
pop
mov
or
fists
and
sbb
mov
aad
orl
test
inc
enter
out
push
cmp
into
fwait
popf
pop
fsubs
pop
push
mov
inc
rol
dec
mov
mov
lods
sub
out
stos
das
bound
and
in
adc
fistpll
lea
data16
sbb
mull
inc
or
dec
inc
push
xor
sbb
jge
stos
sub
xor
mov
sub
insl
pop
js
inc
adc
dec
bound
movq
cld
and
pop
and
cmp
out
mov
scas
repz
pushf
mov
loopne
insb
loopne
jno
mov
inc
daa
mov
pop
xor
push
iret
lods
xor
adcb
mov
jp
fwait
xchg
enter
and
pop
and
imul
movsl
mov
fs
sub
bndstx
lock
mov
add
sbb
xor
std
inc
push
cmp
lds
dec
cmp
mov
notl
cmc
in
outsb
pop
and
jns
jbe
outsl
mov
stos
jbe
push
sbb
push
mov
shrb
cmp
mov
mov
insl
inc
mov
push
das
lds
mov
xor
gs
stos
cmp
sbb
mov
imul
aam
hlt
cld
stos
aas
sbb
sub
add
cmp
add
jbe
gs
jb
cmp
pop
cmp
ja
and
out
sbb
int3
or
jo
fistl
insb
les
adc
cmp
negb
push
movl
cli
add
movsb
sub
addr16
lahf
loope
lret
inc
idivb
cmp
ret
inc
jge
pop
arpl
push
dec
add
sbb
inc
sahf
mov
sub
out
in
mov
pop
adc
movsl
fcomi
mov
jbe
pushl
int3
aam
dec
sbb
mov
rorb
sbb
pop
jns
push
inc
iret
jbe
inc
addr16
jmp
sub
leave
testb
xchg
pop
addr16
pop
sbb
inc
add
xchg
fisubl
aaa
sbb
repnz
push
sub
orb
sbb
mov
test
loopne
push
ljmp
in
popf
inc
adc
sub
push
aam
loop
sub
je
cmp
fisttpl
xlat
loop
ss
cmp
aas
mov
sub
fnstenv
xor
test
jle
shl
test
push
repnz
sti
fiaddl
outsl
mov
in
aaa
ret
orl
ljmp
adc
pop
int3
fmul
cli
dec
fisttpll
jmp
sti
xorb
cmp
adc
adcl
sbb
sbb
sub
mov
insl
jle
add
sti
imul
ret
cmp
mov
inc
adc
out
aas
inc
push
cmpsl
mov
cmp
imul
lea
cmp
mov
enter
inc
sub
mov
gs
dec
mov
dec
cltd
into
das
and
mov
mov
sub
daa
dec
and
xchg
stos
pop
and
testl
cmp
jb
mov
mov
mov
gs
fcompl
lret
adc
xor
clc
lahf
xchg
les
cmp
mov
mov
lea
xor
push
mov
xchg
jno
and
rclb
jbe
mov
popa
mov
rcll
subb
icebp
pop
or
pop
lock
or
mov
faddl
fstps
data16
lods
push
fisttpll
jae
push
fstp
stc
xor
add
adc
jmp
jmp
data16
mov
shlb
inc
lds
jp
fildl
out
jbe
int
std
fdivr
inc
cld
flds
sub
iret
pop
xchg
push
and
mov
adc
xchg
inc
dec
cmc
into
push
xchg
jge
test
adc
sbb
xchg
aam
sbb
mov
lds
inc
mov
mov
in
push
xchg
or
jnp
sar
cs
jecxz
aam
pop
stos
je
clc
mov
iret
xor
cmc
arpl
lahf
scas
adc
mov
dec
jecxz
addr16
xchg
push
xor
insb
mov
mov
and
loopne
lods
push
sbb
mov
mov
ds
lcall
and
xor
movsb
pop
or
lods
cli
push
sbb
jb
inc
loope
sub
push
fiadds
and
sub
mov
out
dec
cmpsb
insb
cmp
hlt
mov
cmp
inc
cmp
or
popf
rcrb
or
dec
mov
mov
inc
push
enter
dec
and
dec
mov
insl
lcall
lods
mov
sub
jb
or
pop
scas
add
shlb
stos
push
sbb
in
push
mov
int
lds
lahf
pop
inc
stc
xchg
add
imul
jne
xchg
fisubl
cmc
dec
lock
sub
iret
mov
testl
xchg
mov
adc
ljmp
in
sub
add
jnp
dec
xchg
pop
mulb
mov
std
jg
imul
ret
test
xor
pop
pop
rorb
sahf
cs
dec
and
jg
movl
mov
jo
lods
loopne
aas
ja
add
out
cmc
mov
sub
std
out
xchg
nop
lds
dec
adc
push
pop
lock
js,pt
xchg
mov
insb
pushf
push
mov
jns
stos
push
mov
sub
push
fwait
mov
push
loop
sbb
int3
out
adc
sub
push
jmp
jns
icebp
mov
lcall
popl
movsl
pop
outsb
std
mov
or
out
pushf
xor
mov
test
daa
lcall
inc
mov
gs
and
push
inc
shll
into
jne
stos
and
jno
mov
test
movsb
nop
sbb
mov
mov
mov
mov
inc
rolb
xchg
or
xchg
xor
pop
pop
dec
pushf
push
mov
or
fists
lods
adc
sarl
mov
dec
mov
mov
roll
mov
testb
xor
stos
fistps
test
push
enter
fstps
out
jno
sub
and
call
dec
cmp
fimull
sbb
imul
scas
cmp
div
ljmp
cmp
fsts
outsl
pop
dec
test
adc
lods
loop
aad
or
lret
sbb
es
adc
popf
or
popa
lcall
mov
icebp
xchg
sub
cmp
repnz
jmp
push
jo
scas
aaa
cs
push
adc
adc
jno
addb
stos
imul
movsw
sub
push
sub
lods
pop
cs
shll
adc
dec
xchg
cmp
xor
push
and
aas
fld
cld
loope
lods
inc
or
lcall
loop
pop
repz
shl
pop
bound
push
popa
mov
pop
rcrb
push
call
xor
jp
shll
add
int3
mov
push
push
lret
inc
ret
push
xchg
mov
pop
add
rolb
jae
sti
pop
rep
addb
jns
adc
adcl
leave
and
out
xor
in
sub
aas
in
lret
shl
aas
lret
dec
xchg
xorb
out
cmpsb
xor
aas
xor
xor
pop
add
cmpsl
iret
hlt
scas
repnz
cmpsb
sub
lock
xor
pop
test
push
and
ja
pop
fstpt
push
sbb
les
test
jns
mov
lcall
movsl
mov
clc
inc
push
inc
out
jns
mov
hlt
test
lcall
push
fistpll
sub
pop
dec
scas
inc
fidivrl
cmp
cli
into
fadd
and
fwait
shl
xchg
pop
in
jns
sub
add
mov
inc
or
jo
ljmp
add
mov
subb
cmpsl
stos
lods
inc
lcall
sbb
sub
dec
add
stos
mov
adc
dec
mov
daa
sarl
adc
sub
cmpb
push
or
sub
xor
in
into
add
xchg
jecxz
ret
jge
xchg
inc
xor
jb
jae
sub
cmc
or
subl
sbb
xor
inc
push
push
aad
ljmp
cld
add
sub
xchg
sbb
lds
and
xchg
rcl
test
fmuls
das
pop
jecxz
add
push
mov
and
pop
xor
mov
out
cmp
js
mov
mov
dec
adc
push
mov
pop
fistpl
or
imul
nop
inc
inc
sub
stos
mov
push
fsts
stc
xor
xor
mov
jb
movsb
add
adc
push
fiadds
jg
icebp
insl
sbb
push
popf
pusha
dec
pop
gs
jge
xor
cmp
mov
daa
dec
movsb
xchg
push
inc
mov
imul
sbb
jge
sti
sbb
mov
mov
addb
pop
cmp
xchg
mov
mov
push
push
pushf
andb
xchg
jb
sub
dec
lahf
scas
lret
addl
pushf
shl
mov
mov
pop
adc
push
fwait
jne
in
orl
and
inc
jge
sub
popa
adc
in
jecxz
xchg
ja
mov
pop
cmc
mov
das
mov
sbb
jne
stos
dec
enter
xchg
pop
cli
cmp
inc
das
dec
fnstenv
mov
mov
leave
popf
xchg
sarb
or
push
and
fcmove
lret
pop
xchg
rcrb
scas
or
in
repnz
push
out
daa
orl
loopne
mov
test
clc
out
cld
cwtl
or
mov
lretw
mov
cmp
jns
jb
mov
push
sub
mov
mov
mov
movsb
jnp
push
loop
cli
out
cmpsl
dec
jno
xchg
mov
push
test
lds
sbb
sahf
xchg
andb
mov
fstps
xchg
fsub
mov
xlat
int
fs
inc
ficoms
jl
push
mov
mov
lret
pop
sub
rorl
xchg
das
out
pop
repz
jl
lods
fistpll
and
or
jmp
cli
lret
cld
sahf
nop
add
mov
daa
cld
jge
push
push
imul
or
or
and
pop
dec
icebp
xchg
mov
dec
cmp
jmp
daa
and
fnsave
frstor
pop
push
inc
or
hlt
xchg
icebp
test
nop
xchg
add
cmp
inc
imul
out
dec
xchg
pop
jno
shlb
pop
test
out
jmp
mov
sbb
cli
ds
movsl
pop
push
sbbl
sub
rolb
mov
popa
jmp
cmpb
sbb
cs
push
enter
jle
popf
insb
jb
mov
push
sub
push
add
inc
fistpl
mov
xchg
push
inc
inc
sbb
mov
pop
divl
mov
sbb
je
outsl
shll
xchg
sbb
popa
dec
inc
push
sahf
adcl
dec
ror
cli
cmp
inc
xchg
testb
adc
je
mov
push
or
xchg
out
adc
popa
cmp
push
je
cmp
outsl
out
mov
repz
addr16
jecxz
mov
mov
icebp
daa
xchg
das
es
loopne
jae
fimull
pop
int3
ljmp
rcl
std
gs
fildll
int
mov
rclb
int3
sarl
test
sub
dec
ja
mov
dec
pop
cmp
popa
jns
inc
xchg
cli
mov
push
mov
xchg
jns
jge
add
sahf
shrb
rorb
mov
rol
addb
pop
movsb
jmp
or
push
fs
outsl
addr16
jecxz
je
shrb
jbe
in
std
jmp
scas
add
sub
dec
in
int3
jp
mov
cmp
stos
enter
mov
jl
les
rcrb
add
adc
ds
fstpt
sbb
and
cmp
adc
dec
jge
mov
test
pop
mov
dec
xor
das
push
xchg
mov
or
test
push
push
pop
cmp
push
mov
in
push
push
push
lahf
push
ret
cmc
jo
jge
xor
cmp
add
addl
sub
pop
cltd
push
mov
xchg
nopl
pop
and
xor
or
push
lock
mov
pop
sbb
dec
mov
sbb
xor
int
dec
stos
sub
push
xchg
int3
dec
xchg
fcompl
test
std
mov
fsub
in
adc
orb
inc
rcr
icebp
dec
aam
push
sub
fcoms
icebp
pop
or
mov
inc
xor
ds
jo
imul
xor
sub
lock
out
outsb
pop
sarl
iret
or
stc
jl
sub
test
aas
call
dec
dec
sbb
pop
cmp
jns
fwait
push
das
jecxz
dec
in
test
xchg
movsl
adcb
pusha
dec
and
sub
fs
jnp
pop
lea
bound
mov
ret
dec
mov
cli
ret
mov
cmp
mov
cmpsl
in
xchg
pop
lds
out
mov
xor
test
push
pop
mov
push
jmp
testb
push
cmp
and
jbe
sub
sar
fwait
and
into
sbb
mov
jnp
mov
mov
xor
repnz
dec
xchg
sub
adc
inc
add
addl
popa
rolb
xor
lods
lock
xchg
mov
movsb
jmp
push
and
out
adc
mov
xchg
pop
cmpsl
push
sahf
aam
cmpsl
pushf
movsl
cltd
imul
xchg
in
adc
jecxz
push
jb
inc
xor
nop
lcall
iret
jno
scas
mov
sbb
lea
mov
sbb
push
popf
lods
mov
es
sbb
or
lods
jg
inc
push
xchg
sub
cmpsl
mov
mov
mov
xchg
cltd
xchg
pop
inc
sub
mov
push
pop
pop
out
and
in
push
repz
mov
sbb
xor
ds
mov
cmp
fdivr
repz
mov
and
jecxz
movsb
ss
pop
xor
arpl
inc
mov
or
fs
ds
xor
shr
popa
clc
cmp
sbb
jp
xchg
mov
push
push
stos
add
xor
cli
repz
pop
xchg
orb
shrb
fmuls
xchg
aaa
fstl
adc
dec
adc
sbb
xchg
sbb
push
aad
lahf
pop
fsubs
ret
cld
push
mov
test
dec
xor
adc
addb
rcll
rorb
out
sub
popf
jbe
es
adc
int3
or
dec
in
add
es
sbb
mov
jne
jns
aam
sub
leave
cmp
lock
gs
aad
push
pop
mov
insl
mov
ja
cmpsb
sub
lcall
loop
lahf
int
arpl
inc
shrl
fstpt
mov
js
lock
lods
cltd
dec
sub
mov
mov
jae
int3
inc
fdivl
mov
pop
mov
pop
leave
lahf
inc
shll
inc
mov
adc
test
js
aad
out
sbb
clc
addr16
pop
js
addl
push
inc
add
aas
loopne
in
xchg
xchg
pusha
mov
mov
sub
fnsave
and
into
jge
ficoml
mov
push
xor
mov
xchg
sbb
hlt
or
out
imul
push
inc
inc
repnz
sub
bound
sub
pop
hlt
test
inc
cmpsb
pusha
insl
adc
sub
in
jnp
call
cli
and
dec
lcall
mov
xor
xlat
jecxz
sbb
ror
out
mov
leave
mov
sub
jecxz
lock
and
jae
psubsb
call
iret
dec
cmc
xchg
loop
mov
in
lahf
fisubs
sbb
dec
out
loopne
cmp
or
scas
cli
lds
lcall
call
roll
jae
je
dec
or
mov
in
mov
nop
ret
cmp
mov
cmp
lods
cld
xor
sbb
iret
dec
mov
jl
inc
aam
cmpsl
js
test
sub
lods
flds
cld
mov
jg
dec
stc
mov
push
arpl
jne
xlat
xor
add
sub
icebp
cmp
or
or
in
or
jns
adc
int
arpl
lret
in
icebp
test
pop
cld
fisubs
xchg
fisubrl
mov
xchg
cld
ja
cs
mov
mov
orl
enter
pop
imul
stc
mov
xlat
push
pop
sbb
mov
scas
jo
xor
test
jb
jecxz
fsubl
fcomip
lock
pop
loop
dec
ja
inc
add
adc
lcall
daa
imul
insl
lds
inc
andl
push
inc
loopne
inc
stc
call
mov
movsl
das
mov
push
sbb
cmp
cli
ljmp
push
mov
pop
mov
negb
movb
mov
and
mov
movsb
addps
es
daa
cltd
xor
xor
adc
popf
dec
std
cmpsl
lcall
mov
mov
sbb
rorb
or
pop
pop
in
sub
mov
fimuls
fdivr
mov
shl
sbb
push
into
sti
popl
push
out
jnp
jl
adc
clc
push
lods
pop
cmp
imul
test
jg
mov
inc
add
jae
add
shl
negb
bound
call
add
icebp
push
cwtl
cmpsb
shl
ja
push
lahf
jb
dec
jne
adcb
lock
jo
aas
push
xor
adc
push
pslld
enter
flds
jns
push
cltd
ret
jb
data16
repz
lret
push
jl
mov
int3
mov
xchg
push
sub
push
sub
mov
cmp
std
cltd
ds
xchg
xor
jge
repnz
fsts
lods
pop
xchg
cli
jecxz
cmp
inc
mov
add
cwtl
push
lea
sar
cmp
xor
imul
cld
jb
fldt
mov
fnsave
xor
popa
addl
sbb
das
lds
or
insl
jl
inc
cld
nop
repnz
pop
cld
push
orl
fs
xor
add
and
pushf
daa
push
lret
pop
mov
and
mov
mov
mov
movsl
aad
test
call
in
mov
or
xchg
xchg
fistpl
push
add
jo
cltd
adc
push
mov
and
xlat
popl
js
cmpsb
addr16
mov
and
cmp
movsb
repz
sub
repnz
cmp
jge
loope
and
iret
dec
in
jge
cmc
push
icebp
lahf
xchg
push
sbb
add
inc
das
shlb
mov
cmp
xchg
jne
ficomps
or
repnz
int3
aad
mov
lret
jmp
adcb
inc
sbb
push
jns
nop
cmp
repnz
das
pop
adc
xchg
inc
mov
xchg
ds
mov
pop
jmp
mov
jp
mov
jge
divl
call
push
cmpsb
mov
or
std
push
sbb
int
add
out
mov
sub
lcall
cmp
cmp
lods
insl
mov
shll
and
pop
jle
lret
mov
lcall
xor
stos
data16
sbb
dec
inc
xlat
in
jno
cmp
js
cmp
insb
jl
jecxz
dec
fbld
lods
iret
and
shlb
rcrb
jno
adc
cmp
daa
mov
pop
sbb
es
jo
push
nop
xor
sub
fnstsw
or
lret
jecxz
xor
cli
or
cli
popf
inc
lods
lods
ss
and
and
push
mov
repnz
je
mov
je
ja
mov
sbbl
pushf
push
cli
jnp
sbb
pop
fistpl
out
std
fistps
dec
test
das
fsubrp
push
and
rcrb
je
rcll
sti
call
hlt
push
gs
mov
incb
sbb
pop
into
adc
mov
aas
sbb
repz
lahf
jnp
ret
popf
pusha
bt
fs
test
nop
mov
cmpsl
jecxz
pop
cmp
cmp
jmp
es
mov
add
adc
out
or
adc
iret
sbb
mov
loop
sbb
fisttpl
sub
imul
in
xor
cmp
inc
pop
inc
push
mov
jnp
mov
sbb
pop
movl
dec
mov
shr
xchg
cwtl
fistpl
subl
pop
in
hlt
loopne
bound
or
cmpsl
dec
xchg
lcall
push
sub
outsl
popl
xchg
xor
push
fcmove
cmpsb
mov
outsl
and
dec
mov
mov
or
stos
daa
jne
and
lods
iret
adc
mov
pop
inc
push
push
cld
jmp
push
adc
repnz
mov
insl
out
fcmovnu
jno,pt
mov
test
pop
and
lock
push
cli
ds
dec
iret
or
andb
sbb
cmp
outsb
lcall
outsb
add
inc
sbb
adcl
and
jne
popf
cmp
mov
cmpsl
sub
and
out
nop
fldcw
mov
or
cmp
dec
jle
inc
cwtl
mov
push
scas
push
xchg
fstps
pop
xchg
std
out
push
sub
imul
adc
inc
or
subl
mov
in
clc
lods
jb
adc
cmp
inc
dec
cmp
test
mov
popf
out
xchg
cmp
test
mov
lods
dec
cmp
push
arpl
xor
repnz
cmp
mov
aad
mov
and
mov
pop
xchg
and
dec
js
loope
adc
lock
popf
add
xor
jb
mov
fwait
outsb
repz
lahf
xchg
lods
imul
lods
xchg
mov
das
xchg
out
cli
ss
mov
mov
jnp
xchg
test
ljmp
popa
in
pop
and
xchg
jae
sahf
into
ds
jmp
and
inc
xor
call
enter
cmc
ljmp
and
mov
and
mov
dec
clc
mov
and
sub
mov
cmp
jmp
dec
flds
mov
je
ret
cmpb
call
enter
sbb
xchg
add
xor
fcmove
cmpsl
jecxz
paddw
bound
dec
js
cmp
imul
mov
pusha
out
xor
add
sbb
sbb
out
adc
mov
les
push
and
adc
sbb
jmp
sub
adc
add
inc
inc
in
mov
mov
icebp
cmpsb
test
ja
popa
or
jo
ret
popa
pusha
and
xor
in
kmovb
inc
js
jae
movl
cmp
xor
int
cmpl
add
int
pop
aam
push
mov
dec
jle
add
cwtl
inc
jmp
sub
pop
sub
xchg
inc
and
stos
mov
mov
das
test
cmp
pop
and
sbb
fadds
jae
push
scas
add
mov
test
imul
pop
sbb
nop
sub
nop
xor
int
stc
loop
pop
adc
push
out
xchg
adc
es
inc
dec
loop
das
sub
fld1
sbb
adc
push
adc
gs
push
xor
scas
pop
jne
jns
pop
add
or
orb
mov
pop
adc
jp
test
stc
or
orl
pusha
pop
pop
push
mov
pop
dec
repz
and
and
adc
xchg
mov
repnz
add
xchg
cmp
outsb
sbb
xchg
mov
push
mov
iret
inc
mov
push
sub
jbe
jno
push
mov
xor
xor
sbb
jl
and
lock
and
jmp
jnp
lahf
sbb
inc
pop
push
mov
push
and
xor
stos
lea
ret
mov
mov
stc
mov
pop
lcall
push
shlb
loopne
push
js
fucomp
and
leave
cld
mov
repz
ja
cmp
in
or
sahf
fs
adc
dec
gs
or
dec
daa
xchg
push
outsb
xor
call
lret
inc
lods
add
orl
jb
jo
jmp
inc
mov
out
dec
mov
sti
sbb
or
mov
subl
scas
addr16
push
jno
lds
xor
das
or
faddl
insl
cmpsl
xchg
ds
shlb
or
jo
fmuls
cmp
and
jg
mov
cmp
push
ja
jg
fidivrs
push
hlt
add
cmpsl
pop
je
hlt
or
adc
ja
shrb
scas
das
sbb
cld
cmpsl
sti
mov
adc
pop
jecxz
mov
inc
mov
xor
test
aam
subb
xor
or
or
xor
sub
mov
je
xor
adc
pop
mov
mov
fisttps
xchg
jns
test
scas
popa
das
push
cmc
sbb
xchg
icebp
or
lret
xor
mov
divb
je
bound
jl
push
sub
lock
mov
mov
push
fwait
xlat
lahf
adc
xchg
stos
and
xor
cs
test
mov
bound
lahf
inc
inc
jp
scas
mov
in
ss
dec
rcll
int3
pop
xor
out
lahf
push
dec
adc
popf
mov
lahf
lret
and
inc
movlhps
repnz
int
aam
mov
mov
jg
xchg
and
push
cmp
mov
sarl
dec
add
xor
adc
xchg
bound
inc
dec
cltd
add
dec
sahf
sti
push
cmp
enter
mov
mov
mov
enter
mov
cmpsl
push
shl
xor
das
shrl
cwtl
call
jmp
sbb
cmp
movsb
lea
mov
fs
gs
xchg
mov
iret
inc
push
pop
insl
xor
out
cmp
jp
mov
add
adc
jle
push
lcall
imul
fisubrs
lret
std
xchg
and
pop
test
ret
popf
mov
add
xlat
add
fidivl
xchg
and
pushf
popa
dec
subl
mov
test
popa
xor
adc
sub
mov
mulb
pop
and
inc
ffreep
mov
push
cmp
pop
insl
enter
xchg
and
push
call
leave
sbb
or
or
sbb
adc
int3
jmp
test
js
lock
rcrb
aaa
dec
push
sbb
cmp
adc
jge
sbb
push
mov
mov
jnp
incb
push
dec
ret
arpl
stc
es
add
scas
jl
movsl
mov
aad
xor
jle
roll
mov
jnp,pt
jb
push
xchg
enter
pushl
sub
cld
jae
adc
sbb
inc
loopne
nop
cltd
hlt
pop
vandnpd
cmp
push
inc
rcl
lock
gs
add
lods
adc
push
jl
and
pop
push
and
lret
push
mov
inc
imul
pop
push
pop
inc
push
push
cs
jmp
jmp
cld
fsubrs
pop
xchg
pushf
mov
cmp
or
daa
push
in
mov
xchg
arpl
inc
ficoml
iret
imul
outsb
gs
xor
fucomi
sbb
jne
in
cmpsl
testl
cltd
push
leave
inc
mov
repz
dec
dec
rol
mov
dec
rclb
loope
setne
inc
movsb
shlb
pop
mov
dec
iret
dec
dec
arpl
out
shrl
popa
and
mov
movsb
push
push
mov
mov
ret
mov
fld
icebp
cmp
or
xchg
movsl
or
lock
mov
loope
fldenv
hlt
ss
adc
cmp
jp
mov
popa
hlt
test
jb
sbb
ja
or
lea
cmp
insb
jbe
mov
cmp
mov
push
aam
xchg
cmc
lret
lahf
push
sahf
mov
mov
cmp
fwait
xor
mov
jg
stc
mov
adc
xchg
icebp
mov
push
jae
aaa
lcall
jmp
adc
mov
jb
in
and
mov
insl
fsubl
aaa
popf
inc
scas
xchg
jmp
stos
divl
sbb
push
repz
clc
std
int3
mov
inc
imul
imul
mov
je
dec
inc
lods
dec
pop
repnz
dec
xor
mov
aad
mov
sub
jo
mov
add
push
push
mov
dec
test
jae
inc
dec
in
jp
and
cmp
jmp
clc
bound
sub
lods
clc
push
jp
xor
and
jl
cmp
and
es
inc
and
or
dec
cmpsl
decb
sbb
test
loope
push
dec
sbb
adc
cmp
jmp
pop
add
mov
inc
and
clc
xor
std
push
and
std
dec
add
pop
or
popf
outsl
int3
mov
jp
insb
sub
lods
lahf
sbb
stos
lods
movzwl
fmuls
pop
push
or
mov
shll
rol
out
sub
insl
sbb
xor
inc
cmp
nop
inc
fildll
pop
ja
decl
add
push
sub
pushf
orl
push
xor
mov
mov
xchg
jge
and
pop
jl
gs
pop
mov
subl
mov
inc
loope
dec
popf
aad
cmpsl
dec
xor
push
lods
or
push
add
adc
or
mov
shr
xor
sti
fwait
jmp
and
inc
incb
call
adc
push
sub
into
int
jns
loopne
ja
pop
icebp
xchg
dec
jnp
mov
adc
push
xchg
jmp
sbb
test
fsubrs
dec
cmc
dec
in
jg
adc
out
sub
jg
shll
scas
ljmp
add
decb
jp
pushf
xchg
add
fs
and
xchg
leave
lds
add
cmc
scas
shlb
push
inc
les
test
imul
jo
ja
mov
push
inc
jo
dec
ret
pop
inc
inc
cmp
mov
fdivs
sbb
fucomp
and
and
mov
jecxz
add
mov
mov
or
imul
mov
mov
inc
xchg
xor
xor
adc
dec
or
xchg
jp
pop
sub
jbe
shrb
pop
nop
jg
sbb
ror
fdivl
dec
mov
xor
xchg
sbb
mov
enter
imul
cmp
inc
adc
shl
mov
mov
insl
sub
addr16
repz
inc
or
cmpsb
je
add
lret
sahf
dec
push
push
fstpl
dec
mov
pop
icebp
out
pushf
jo
test
sub
push
push
xchg
lret
hlt
push
lock
sub
push
loop
je
cmp
inc
push
adc
mov
les
push
adc
lods
outsl
call
cld
add
xchg
cmp
adc
dec
xor
gs
ljmp
cvtps2pd
mov
jl
je
cmp
xchg
push
fildl
adc
add
aad
fisttpl
mov
in
outsl
insb
pop
in
movsl
sbb
push
lret
cmp
jne
loop
stc
dec
movsl
and
pop
aad
pop
lock
test
insl
dec
test
jo
dec
pushf
mov
mov
shll
cmc
js
cmpsb
dec
or
jl
subb
mov
push
imul
bound
cmp
or
ret
fwait
lds
fistps
sbb
pop
sbb
mov
inc
out
mov
aas
dec
pop
cmpsl
push
and
lcall
sarb
loopne
fwait
scas
push
pop
push
push
and
dec
and
add
sbb
fs
movb
inc
