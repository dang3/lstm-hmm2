push
push
call
andl
push
push
call
pop
pop
movl
jmp
xor
inc
ret
mov
movl
xor
inc
call
ret
push
mov
push
push
push
push
xor
sub
mov
mov
mov
mov
and
jns
dec
or
inc
cmp
jne
cmpl
jle
mov
imul
lea
mov
xor
jmp
test
jne
cmp
jle
mov
xor
lea
mov
sub
mov
addl
and
rol
add
inc
cmpl
jb
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
leave
ret
push
mov
sub
push
push
call
push
call
mov
cmpl
jge
push
call
mov
mov
push
push
call
cmp
jne
movl
jmp
mov
xor
mov
pushl
mov
mov
call
pop
cmp
je
lea
jmp
call
test
je
push
push
push
call
mov
mov
shr
mov
shl
or
mov
mov
and
mov
push
mov
neg
sbb
and
push
pushl
call
mov
push
pushl
pushl
call
add
push
call
push
call
mov
mov
push
call
leave
ret
repz
int3
int3
int3
int3
neg
jmp
push
push
push
push
push
lds
add
movups
sub
jnp
sub
add
andl
lahf
pop
aam
dec
pop
ljmp
mov
lret
push
sbb
mov
xor
sub
popf
adc
jnp
mov
into
insb
ds
cmp
jl
pop
sub
cmp
xchg
mov
xlat
scas
mov
insl
leave
lods
mov
ret
cld
mov
je
push
testl
pop
movsb
lds
ffree
xchg
adcl
pop
pop
jg
clc
imul
subl
cli
fdivrs
add
sub
xchg
mov
push
jbe
mov
lret
mov
and
adc
dec
cmpsb
enter
mov
xchg
push
sarl
call
mov
xlat
mov
mov
mov
andb
inc
lock
add
or
in
mov
adc
mov
inc
fmull
inc
aaa
mov
cmp
jnp
cmp
cs
and
jge,pn
jmp
sbb
jae
jle
mov
push
or
int
or
lea
and
sahf
or
push
negb
lock
push
hlt
les
js
hlt
mov
shr
pusha
scas
jno
push
xchg
scas
push
jbe
outsl
popa
xchg
sbb
cwtl
addb
imul
nop
sbb
or
and
add
or
pusha
notl
mov
fdivs
data16
mov
or
push
and
stos
add
inc
and
outsb
sub
sub
shr
arpl
icebp
dec
jg
sahf
lret
or
xchg
add
fidivl
fldcw
repnz
mov
cmp
ds
clc
dec
das
call
mov
addr16
imul
add
pop
mov
in
jg
add
testb
pop
ret
push
pop
mov
mov
sub
xchg
sbb
jno
dec
cmp
xchg
call
adc
shrl
mov
mov
inc
and
mov
xor
cli
mov
xor
movsl
push
das
hlt
notb
ret
mov
pop
push
mov
arpl
adc
mov
mov
icebp
aam
lds
jle
jns
jp
add
mov
sbb
scas
lock
jg
push
daa
adc
mov
mov
lcall
dec
rorb
inc
ffreep
jp
push
lods
jo
xchg
push
in
cmp
decb
cmp
movsl
mov
jbe
movsl
jge
pushf
adc
pop
mov
pop
inc
jmp
lret
rcrb
loop
cwtd
stc
add
jge
push
pop
inc
in
add
icebp
filds
outsl
cltd
mov
xchg
or
dec
sub
insb
idivb
or
mov
outsl
mov
cmp
jbe
out
shr
test
fldl2e
push
add
pop
dec
aas
incl
out
pop
lds
xchg
sbb
hlt
and
sub
mov
jge
cmc
inc
mov
lods
push
shll
jl
inc
push
sbb
ss
dec
lret
stos
mov
jmp
cmp
cmova
and
jns
mov
sub
stos
sub
jbe
pop
mov
sub
mov
pop
stc
mov
leave
cmp
cmp
and
lahf
xor
or
pop
or
dec
push
aas
retw
out
lret
jecxz
and
jmp
pop
in
cmp
adc
mov
in
imul
movsb
lds
mov
add
xor
hlt
dec
and
sbb
popa
sub
mov
jnp
inc
out
push
xlat
mov
cmp
in
jbe
sbb
inc
add
aas
mov
mov
ss
lahf
sbbl
add
int
or
push
popa
movsl
adc
jge
lods
mov
sbb
dec
sahf
adc
inc
movsl
xchg
cmp
or
ret
test
mov
ret
pop
idivb
fiadds
mov
test
mov
test
test
sti
fcoms
xchg
push
push
pop
adc
push
mov
sub
mov
daa
sub
sub
ljmp
movl
mov
divl
sbb
dec
push
sub
inc
adc
jg
inc
sub
popa
mov
fnstcw
inc
mov
push
ret
add
popa
xchg
inc
int3
ja
stos
dec
push
mov
mov
mov
add
add
xorb
vpshufhw
mov
mov
stos
scas
dec
es
lret
leave
fdivs
into
push
sub
mov
mov
movl
sub
fs
add
lret
les
cmpb
out
adc
pop
xor
inc
fcompl
adc
cmc
sub
push
lods
inc
add
sub
roll
mov
test
sub
enter
mov
cmpsl
enter
xchg
jns
fidivrs
pop
or
sbb
push
cmp
dec
fstps
gs
mov
mov
lahf
sub
jg
push
inc
jge
shrb
pop
scas
mov
pop
aas
xor
popa
push
into
ja
mov
push
cmp
lret
jne
add
fsubp
test
dec
xor
mov
mov
into
add
std
mov
mov
shr
mull
movsb
sub
add
mov
repz
xchg
test
or
pushf
das
std
add
push
arpl
movb
ja
mov
and
imul
test
cmp
icebp
mul
cmp
mov
sbb
push
lahf
jmp
fwait
jne
push
lcall
ja
mov
movsl
and
sbbb
jns
or
mov
mov
mov
sub
into
bound
dec
lea
sbb
inc
enter
cmpsb
int3
mov
movsb
cmp
fwait
mov
jo
cmp
push
flds
mov
cmpsl
jle
stos
cmp
into
sti
fcoms
sub
pop
mov
leave
std
mov
jns
movsb
insb
imul
push
enter
fstl
pop
sub
cmp
inc
and
and
inc
sub
ss
loopne
inc
pop
dec
loope
mov
inc
mov
mov
cmc
mov
shll
jmp
das
xchg
movsb
cltd
loope
scas
add
nop
aam
inc
inc
adc
int3
lret
out
es
mov
mov
adcb
sbb
push
mov
ja
ss
add
iret
mov
jno
jne
sbb
dec
push
jmp
mov
nop
loopne
dec
aam
mulb
in
in
pop
or
jae
xor
push
jl
sarl
push
add
mov
jecxz
ds
imul
mov
xchg
push
dec
stc
adc
jnp
test
xchg
out
sub
fistps
ja
test
imul
fs
mov
stc
test
add
mov
sar
add
shrl
xor
pop
out
gs
inc
push
sub
addr16
dec
jge
test
lret
adc
fidivrs
mov
sarl
xor
test
pop
in
mov
in
jnp
pop
into
mov
push
out
lret
clc
mov
mov
sub
rcrb
lods
leave
mov
mov
mov
test
jb
cmp
sub
aam
loop
jae
sbb
pop
jnp
test
mov
mov
mov
ret
xchg
out
je
repnz
xlat
aas
cs
xchg
scas
adc
inc
addr16
add
fdivrs
or
fiadds
in
xchg
cmpsb
cmpb
inc
daa
sbb
xor
mov
mov
xorb
or
arpl
mov
pop
cmpsl
cmp
mov
dec
cmp
jb
es
mov
cli
movsb
sbb
scas
mov
pop
or
jmp
or
js
mov
inc
mov
pop
fsts
arpl
addl
pop
and
xor
push
or
in
mov
gs
sbb
ljmp
sbb
mov
aas
jbe
adc
push
shrl
insl
and
mov
dec
jae
movsl
lret
dec
push
jp
adc
lcall
jle
pusha
push
mov
js
pusha
dec
mov
sub
jmp
or
pop
arpl
push
shl
mov
sbb
enter
jl
in
sub
add
sub
bound
cs
add
xor
xchg
or
and
sarl
lea
fistps
loopne
cli
sbb
xchg
mov
add
xor
inc
mov
lds
inc
lock
es
out
cmpsb
dec
out
xchg
pop
dec
xor
mov
dec
or
out
rol
loop
lock
xor
les
ret
sbbb
insl
mov
int
loopne
jge
inc
stos
xchg
sbb
jo
std
and
dec
lods
out
xchg
mov
add
test
into
jp
xchg
loopne
mov
pop
mov
ret
mov
dec
cmp
sbb
cmp
iret
shlb
or
lcall
aaa
mov
dec
insb
js
xor
or
inc
inc
gs
paddusw
dec
push
pop
jae
stc
rol
aad
outsb
shlb
int3
mov
mov
inc
jnp
mov
jno
jmp
outsb
imul
mov
pop
lahf
out
jne
mov
ror
jmp
push
sti
mov
mov
int
push
fidivs
lods
ret
addr16
push
cmpsb
xor
cmp
xchg
aaa
into
sub
xchg
mulb
mov
xor
lods
jg
fdivr
pop
dec
push
rcrb
sub
out
hlt
sti
dec
cmc
test
imul
test
inc
xchg
in
and
add
and
fdiv
sbb
lea
clc
add
sbb
add
or
loop
aaa
add
cmpsb
aas
or
mov
pop
shll
mov
inc
negb
test
jne
in
lea
gs
fildl
xchg
jne
loop
lock
adc
fs
loop
mov
mov
mov
out
lods
ss
aad
push
push
in
and
sub
push
sti
pusha
push
je
fimuls
mov
push
dec
iret
adc
dec
lea
jecxz
adc
pop
xchg
inc
dec
xor
xchg
lods
pop
test
and
xor
hlt
lret
rcll
arpl
loop
pusha
or
enter
and
shlb
xlat
scas
sbb
out
mov
inc
and
add
inc
imul
lods
ret
ljmp
hlt
aaa
jle
and
cmp
shl
mov
jg
jg
dec
insl
and
call
test
mov
test
jg
fidivl
test
mov
addr16
sub
in
scas
sarl
push
xor
shlb
jne
aaa
test
mov
ljmp
jbe
cltd
ret
lds
jp
pop
in
mov
int
fnstenv
in
shl
fwait
mov
sbb
push
orb
fidivl
or
jp
push
shlb
bound
loopne
dec
fwait
xchg
xor
adc
ret
aad
fs
xchg
adc
xchg
and
sbb
mov
scas
scas
xchg
dec
and
pop
jecxz
rorb
xchg
dec
loop
push
ljmp
movsl
push
push
jno
adc
xor
cmp
fisubs
aam
incl
sti
inc
mov
jbe
out
jp
pop
ret
fxam
addr16
xlat
or
jge
xor
test
xor
pushf
dec
fisubrl
arpl
dec
mov
test
test
push
movsl
mov
leave
sub
and
mov
shlb
jnp
stos
mov
sahf
ja
adc
xor
iret
pop
negb
rcrb
stos
cmc
sbb
mov
loopne
cmc
push
push
sbb
enter
xor
push
adc
aaa
sbb
mov
pusha
popf
jne
push
sbbb
mov
xor
inc
je
sub
dec
mov
jp
shlb
imul
imul
popa
pop
xchg
popa
lds
stos
add
pop
cmp
push
in
cmpsl
jle
in
xchg
call
fdivrl
cmc
fcom
stos
pop
pop
mov
sbb
sub
jne
inc
mov
aam
inc
jg
out
mov
xchg
jnp
xor
nop
aam
mov
dec
and
leave
jge
subl
mov
inc
jmp
cmp
inc
and
filds
pop
pop
iret
add
push
sbb
lea
pop
or
mov
mov
push
ljmp
push
xchg
and
xor
loope
pop
lret
and
dec
mov
add
stc
dec
lahf
imul
add
ja
mov
or
push
movsl
in
and
jb
andnps
stos
shrb
addr16
leave
fs
pop
xchg
test
cmp
out
stos
repnz
cmp
xchg
cmp
fs
mov
ljmp
mov
cmp
daa
push
and
adc
cmp
jle
ds
fildl
icebp
mov
int
outsb
in
and
ret
loopne
xchg
test
ds
scas
adc
or
insl
bound
std
jno
gs
jno
lds
xchg
jo
pop
mov
iret
or
mov
mov
dec
jae
add
sub
push
and
das
mov
and
scas
adc
outsb
or
or
and
push
jp
les
adcb
xlat
xor
scas
xchg
mov
notb
ja
jb
rcrb
inc
in
fcomps
and
shr
mov
je
jge
dec
xchg
scas
mov
into
pop
repnz
jge
pop
dec
and
out
jle
scas
cmp
pop
mov
leave
dec
dec
and
xor
or
loopne
ret
lock
loopne
push
jb
aad
jno
out
pop
shl
adc
dec
push
mov
add
mov
test
test
sub
dec
lds
push
dec
adc
inc
cmp
aas
loope
pop
cmp
stos
mov
adcl
ss
mov
test
pop
adc
out
add
inc
cmp
mov
pop
mov
ja
or
and
scas
pushf
and
insb
mov
adc
es
lcall
clc
pop
out
out
fldt
ss
addl
in
bound
movsb
xorl
mov
dec
inc
out
rclb
push
fnop
pop
ret
clc
sub
gs
sub
sbb
sub
xor
xorb
fisubl
insb
and
jmp
cmc
xchg
daa
pop
aaa
or
inc
mov
inc
sub
inc
mov
sbb
lahf
mov
insl
test
pushf
mov
lret
jmp
xchg
cmovns
add
cli
cmp
push
cmp
cld
adc
pop
mov
dec
push
out
popf
jg
es
aam
sbb
pop
lahf
inc
nop
mov
scas
out
add
jne
add
jg
pop
inc
jmp
mov
je
in
xor
ds
mov
sar
and
cld
push
cwtl
and
call
push
dec
mov
movsb
fldt
adc
and
lcall
cmp
and
adc
mov
daa
jne
cmp
pop
adc
int3
ss
mov
mov
push
mov
jle
repz
into
mov
mov
insb
adc
mov
ret
in
test
push
and
scas
enter
inc
and
repnz
andl
jnp
adc
sub
sbb
adc
ret
lret
lret
je
dec
inc
and
lret
sub
roll
pop
jle
mov
in
fnclex
pop
cwtl
and
jnp
xorb
sbb
jmp
stos
adcl
xchg
add
push
sbb
and
addr16
icebp
call
add
imul
sub
adc
call
and
and
xor
mov
aaa
adc
ret
leave
rcll
nop
stos
retw
mov
popa
shlb
movsl
and
ljmp
out
fldt
aam
outsb
int3
sbb
outsl
inc
int
inc
jge
repz
dec
movsb
mov
into
xchg
inc
sbb
aad
mov
sub
xor
imul
sub
lock
cs
cmp
scas
push
adc
pop
adc
mov
push
leave
inc
sbb
pop
or
cmp
sti
xchg
jns
in
loope
insb
or
inc
xchg
sti
cmpsb
add
jne
xchg
popf
int3
fs
arpl
sti
stos
fdiv
add
jge
adcb
push
sarb
xor
fisubs
pop
lret
repz
sahf
sarb
lahf
in
lret
inc
lods
mov
push
insl
popf
mov
rcr
ret
cmc
stos
xchg
shrb
lcall
xor
dec
sbb
fs
push
dec
inc
stos
ds
xor
sub
xchg
mov
cmp
jg
jae
cltd
rorb
dec
cmpsl
lock
or
pushf
repz
push
jbe
mov
ret
subl
aam
push
jae
cwtl
in
fwait
adc
sahf
inc
xchg
ljmp
and
cmpsl
mov
push
sub
mov
not
fcompl
enter
insl
aad
mov
data16
adc
gs
push
popf
mov
loopne
call
add
sub
jl
in
cmpsb
aam
jae
and
dec
push
add
mov
inc
jae
imul
pop
cmp
adc
adc
sbb
pop
add
ss
scas
jmp
sbb
test
mov
insl
xor
outsb
mov
and
pop
stc
push
xor
scas
nop
pop
fnstcw
sarb
or
pop
daa
pusha
jmp
jmp
lret
fs
xor
inc
mov
hlt
mov
adc
out
test
push
test
cs
mov
pop
hlt
and
fdiv
sub
sti
sahf
out
sub
jb
pop
jnp
pop
outsl
fiaddl
test
cmp
mov
xchg
inc
sbb
dec
addr16
jns
mov
mov
addr16
ss
into
sub
in
insb
mov
daa
mov
sysexit
add
outsl
stos
pop
lock
xchg
xchg
push
std
jmp
dec
mov
lds
hlt
dec
insl
lahf
loop
nop
arpl
test
push
pop
notb
ret
jbe
lea
gs
inc
es
xchg
es
mov
adc
shl
pop
push
and
xchg
inc
add
leave
inc
fldpi
xor
push
dec
call
hlt
pop
pop
mov
cld
jp
aam
jmp
xchg
repnz
enter
and
loop
mov
fsubp
mov
fdiv
aad
lret
cmpsb
ja
pusha
lea
rol
int3
test
xor
lods
aam
push
sub
cmpsb
lock
cltd
pop
push
add
xor
fnsave
push
pop
scas
push
jns
inc
ds
ljmp
cmpsb
movsl
and
lret
pop
lea
aam
decl
mov
and
sbb
cs
je
adc
jg
xchg
inc
stos
sbb
and
fmul
movsb
jb
push
pop
shlb
dec
imul
movsb
mov
xchg
lcall
aad
push
mov
sbb
push
fmuls
lds
jo
pop
in
aam
sub
mov
sbb
mov
lea
xchg
push
sbb
shlb
movsl
mov
xlat
sub
pop
cld
cli
insb
push
hlt
inc
fimull
lahf
xor
adc
pop
push
cmp
test
sti
push
lock
xor
cmp
scas
ret
mov
rol
gs
loope
pop
mov
mov
mov
pop
xor
mov
filds
mov
or
jge
sub
lahf
sub
pop
mov
xorl
mov
daa
dec
sub
popa
push
pop
xor
cmp
je
fwait
rorb
xchg
mov
les
lret
ja
test
jmp
inc
sbb
stc
mov
jae
xchg
sbb
adc
jbe
int3
push
push
in
idivl
xchg
shrd
call
jge
mov
test
cld
stos
jne
lds
movsb
call
aas
adcl
jp
icebp
jge
mov
out
sbb
dec
or
sbb
sbb
mov
addr16
sahf
dec
mov
sub
sti
aad
xchg
les
or
add
popa
pop
std
mov
divb
das
outsb
out
or
mov
inc
inc
or
or
pop
and
push
mov
add
fistl
dec
outsb
mov
and
push
scas
jle
xor
push
mov
push
sti
jbe
std
movsl
jl
in
repz
push
push
jae
stc
mov
sbb
outsb
sbb
pop
dec
add
add
mov
ficomps
mov
sbb
pop
subb
test
loopne
sub
movb
stos
add
rcrb
push
inc
mov
aam
ds
outsb
jecxz
xor
in
push
enter
cmp
push
addr16
aas
push
sub
or
fldt
adc
sbb
inc
scas
push
mov
or
int3
dec
insb
loope
call
jne
xor
push
jae
sbb
jle
test
dec
inc
popf
jnp
nop
leave
test
sub
push
insl
jl
xchg
inc
call
fidivl
and
adc
add
add
cltd
int3
aad
dec
es
xchg
int3
cmpsl
jmp
in
or
add
dec
jmp
ret
iret
xor
cmc
mov
rcll
pusha
in
xor
and
jmp
xchg
sbb
ds
jns
mov
inc
jno
cmp
cld
loopne
xchg
dec
rorb
or
ja
sbb
xor
mov
sbb
jle
inc
fmull
adc
or
inc
rcll
jae
adc
jmp
insl
xor
rcrb
pop
fdivr
insb
inc
out
rorb
repz
enter
addl
push
stos
inc
mov
jle
sahf
pop
mov
lock
pop
and
mov
addr16
mov
ficoml
movsb
mov
fmul
stc
mov
and
cmc
sbb
ja
xor
les
aaa
fs
cmp
cmpsl
pop
xor
jge
jl
enter
stc
add
and
lcall
fwait
gs
xchg
and
dec
repnz
ljmp
or
sub
xchg
dec
lret
or
scas
fcoms
cmp
or
and
in
js
lahf
jecxz
lcall
inc
stc
mov
nop
sub
cs
mov
sbb
jle
push
mov
push
jb
inc
arpl
sbb
mov
movsb
mov
in
mov
sub
dec
mov
dec
scas
sbb
and
lahf
add
pop
out
into
push
cmp
xchg
pusha
sahf
scas
out
in
insb
jno
cmc
sub
xchg
xor
adc
fnstsw
loop
mov
shll
and
mov
inc
and
mov
out
xchg
insb
cmp
pop
push
or
cld
add
xchg
push
sbb
push
data16
shrb
fcoml
fwait
sbb
dec
push
jns
push
repnz
jle
roll
dec
es
xlat
cmp
jl
lahf
adc
jecxz
mov
lock
fildl
lcall
imul
movsl
mov
lock
sahf
or
add
inc
aaa
push
popa
add
pop
push
mov
pop
mov
pop
mov
stos
pushf
ret
out
out
mov
lret
andb
push
cmp
inc
push
xchg
out
sbb
sub
fdivl
pop
hlt
lcall
cmp
sahf
jl
add
iret
ret
outsb
or
popf
cpuid
shr
loop
cmp
dec
movsl
jno
sti
jno
sarl
rorl
std
xchg
dec
inc
adc
jne
inc
scas
mov
lret
jle
notb
and
mov
arpl
repz
out
cltd
pop
mov
fwait
rcl
jg
je
lock
mov
repnz
dec
push
std
sub
fisubl
push
xorl
pop
adc
add
sbb
mov
add
aam
mov
sub
push
inc
push
xor
and
xor
xor
orb
add
cwtl
insl
inc
ret
aam
jns
mov
pop
es
lea
addl
aad
call
xor
and
pushf
dec
mov
nop
cmp
jmp
cmpsl
sbb
shl
adc
out
dec
mov
dec
or
dec
mov
hlt
nop
lea
push
jb
cmp
jp
inc
lcall
out
mov
imul
sahf
cmp
bound
inc
lods
nop
jne
cmp
sbb
sbb
inc
sbb
scas
outsb
mov
inc
and
or
mov
shll
sub
in
popa
leave
xor
sub
and
or
out
fsts
test
mov
cmp
inc
mov
mov
sbb
int3
in
aad
scas
push
jno
addb
lahf
mov
and
aad
jae
out
cld
negl
inc
std
mov
pop
push
jo
push
addr16
insl
imul
fs
jae
arpl
repnz
shrl
lods
leave
jecxz
dec
int3
lret
aaa
call
xchg
arpl
xor
mov
mov
adc
or
mov
lods
add
xchg
shlb
shrl
rcrb
adc
cmpl
add
scas
mov
mov
sub
mov
cmp
repnz
or
add
inc
sbb
shrb
scas
jge
mov
adc
add
jle
icebp
stos
pop
jecxz
and
out
subb
jb
popf
add
fadd
cmp
mov
movsl
xchg
push
or
sub
mov
mov
lods
lock
lods
xchg
xchg
inc
lods
and
imul
jmp
nop
int
lea
xor
loopne
imul
aam
inc
shrb
test
adcb
inc
inc
jp
cmpsl
and
mov
cmp
ljmp
mov
enter
jno
je
fst
and
stos
imul
add
dec
pop
inc
mov
mov
jns
jge
mov
loope
pop
sarl
das
add
stc
outsl
mov
dec
and
mov
mov
loopne
incl
js
mov
shlb
insl
xchg
fs
icebp
sbb
sub
dec
dec
or
lods
push
cwtl
cmp
or
ror
push
iret
ficoml
xchg
cmc
xchg
sbb
rorl
repnz
xor
pop
dec
push
push
filds
inc
ja
dec
shlb
mov
dec
ss
and
daa
jecxz
mov
mov
cmpb
dec
push
clc
jb
ja
int3
mov
pop
pop
lock
sbb
jmp
sbb
aam
xor
daa
jle
pop
mov
dec
sbb
and
loop
jl
loope
out
roll
pop
enter
xor
jne
shlb
xor
jae
sbb
movsl
mov
pop
xor
xchg
dec
xchg
or
push
jp
mov
andb
jg
mov
xlat
daa
fldenv
paddsw
add
pop
mov
flds
jmp
push
hlt
jl
mov
sub
fisttpl
jl
inc
xor
xchg
inc
pop
xchg
mov
inc
and
dec
mov
mov
aam
imul
jne
pusha
scas
test
pusha
scas
jg
test
jnp
in
adc
push
sub
leave
lea
insl
dec
push
lahf
sbbb
jp
lahf
iret
add
jnp
in
inc
xchg
fidivrl
adc
imul
jmp
mov
pusha
imul
cwtl
loop
xor
lds
pop
jp
xchg
jge
xlat
test
imul
add
xchg
mov
inc
and
fstps
aaa
bound
sub
inc
xor
push
jecxz
mov
jb
nop
ret
push
out
push
cltd
inc
dec
pop
call
hlt
mov
sahf
mov
rol
and
sub
mov
xor
popa
loopne
nop
add
ret
loope
sub
ds
cwtl
ss
shl
repz
call
mov
fadds
mov
sub
mov
outsb
call
ds
pop
out
jle
sub
cli
movsb
pop
insb
adc
int
mov
pop
sub
outsl
mov
into
out
into
add
cmpsb
pop
mov
jno
mov
xchg
test
push
adcl
xor
add
sub
inc
xchg
or
movsb
nop
push
into
cmp
push
cmp
test
ds
sub
arpl
out
jne
jp
fwait
aas
or
dec
push
std
or
jge
jae
je
cmp
pop
mov
scas
adc
gs
aad
or
fdivrl
adc
pop
mov
inc
mov
icebp
xlat
jno
or
mov
sub
and
cmp
leave
dec
jge
push
or
xor
adc
lret
lcall
inc
mov
rcrb
arpl
nop
orl
sub
ja
test
jecxz
and
cmc
das
nop
andl
push
sub
leave
notb
ret
inc
loop
lahf
stos
and
adc
stos
lret
in
add
pop
ret
jecxz
mov
xor
push
jne
mov
jecxz
dec
sarb
push
out
aas
and
fwait
shll
aas
enter
add
int
pushf
push
andl
mov
fnstcw
fimuls
hlt
movsb
cmp
inc
and
mov
sub
outsl
pop
inc
cmc
push
mov
int3
dec
lret
push
mov
lret
cmp
fistps
mov
sub
mov
lock
in
lret
push
mov
push
ret
sbb
jnp
and
daa
xchg
ss
gs
pop
mov
les
out
in
aaa
pop
xchg
lods
cmpsb
and
push
icebp
fsubl
sub
add
push
dec
popf
lret
sbb
sub
imul
sahf
or
mov
sub
mov
jle
aaa
sub
adc
mov
mov
push
iret
mov
pushf
or
loop
adc
add
mov
scas
pop
push
mov
fistpl
inc
lret
mov
rolb
mov
and
leave
jp
xchg
push
test
pop
jno
int3
push
xchg
fs
das
imul
or
enter
adc
add
add
sbb
addr16
test
fcompl
pop
push
insl
lahf
add
mov
roll
pop
adc
popa
in
add
call
in
in
fldcw
xchg
sahf
lods
pop
popf
es
mov
mov
repz
rcrb
jge
xchg
les
hlt
scas
push
out
sar
icebp
inc
and
mov
cld
adc
lock
jg
fdivl
cmc
push
mov
ss
fsubl
pop
scas
in
loope
xor
mov
outsb
push
push
divl
pop
mov
mov
mov
jns
lds
outsb
popa
adc
xchg
xchg
jge
mov
inc
dec
cmpl
aam
adc
popa
pop
push
pop
or
stc
hlt
loope
pop
outsl
and
icebp
dec
pop
jge
test
fidivrl
out
push
in
mov
dec
pop
sahf
pop
fcoms
inc
popa
outsb
mov
push
add
sbb
rcrl
test
mov
addb
pop
jp
enter
xchg
mov
cli
sub
lcall
push
push
dec
jb
push
dec
sbb
notl
inc
xor
shlb
stc
mulb
call
or
inc
jge
cmp
inc
daa
in
xor
add
add
loopne
xor
add
int3
daa
mov
or
out
pop
pop
cmpl
adc
fdivr
nop
bound
test
out
pop
mov
xor
ljmp
pop
int
std
shrl
xchg
and
mov
inc
sub
jge
or
loop
mov
aam
iret
xor
jb
cmpsl
scas
mov
pop
mov
dec
adc
aas
cmp
rcll
adcb
and
mov
imulb
rol
fdivrs
cs
sub
js
xor
fwait
add
xorl
cltd
mov
or
and
sbb
mov
xor
sub
adc
cmp
in
lea
ss
sub
mov
mov
stos
inc
cld
insb
add
and
add
hlt
shll
xlat
pop
xchg
xchg
or
in
lods
jl
jmp
sbb
pop
mulb
das
sub
cmpsl
icebp
call
stos
jg
les
ficoms
lahf
xor
jnp,pn
pop
sti
sub
inc
cli
cmpsb
sbbb
imul
scas
xchg
je
pushf
cmp
mov
in
lret
add
sub
into
dec
dec
sbb
lods
sbb
add
lods
jns
jmp
dec
xlat
hlt
ja
les
adcl
jns
inc
fsubr
notb
sbb
test
scas
pushf
stos
sbb
sbb
add
pop
mov
dec
pop
shlb
and
push
cs
arpl
jb
sub
test
jb
cltd
dec
or
cmp
xchg
push
jo
out
aam
fdivl
sbb
cs
jbe
repz
jecxz
inc
adc
fwait
sub
stos
imul
add
xchg
out
jne
dec
cwtl
push
sbb
std
xchg
mov
aaa
pushf
movsb
out
jno
inc
lcall
adc
inc
sbb
cmp
lods
icebp
nop
jmp
xorl
sbb
sbb
xor
sbb
dec
imul
xchg
sub
ret
or
cwtl
cmpsb
jo
in
call
cld
xchg
dec
xor
sub
jb
cmp
pop
mov
mov
inc
mov
pop
dec
lret
xor
mov
cmp
xchg
jns
and
sbb
jne
push
jg
push
sub
mov
jmp
sbb
cwtl
add
mov
mov
pop
cltd
pop
xchg
out
xchg
inc
cli
jo
shll
das
out
nop
and
mov
std
cmp
outsl
bnd
inc
xchg
clc
clc
test
xchg
jmp
jmp
cmp
mov
ja
icebp
mov
pop
imul
xchg
mov
int3
dec
iret
pop
cld
stc
pop
sti
int
jl
push
movsl
push
imul
fstps
or
mov
dec
sahf
stos
push
mov
xor
popa
or
cmp
ss
pop
imul
in
filds
fistpll
int
xor
hlt
imul
sbb
les
jmp
dec
adc
rol
and
je
push
fldcw
mov
add
repz
fdivrs
das
push
cmp
inc
mov
mov
push
into
jno
push
sbb
les
loop
jge
sbb
lods
mov
and
aam
dec
insb
shrl
mov
movl
orl
jge,pt
sub
lret
cmp
lcall
xchg
popa
cmp
jge
aam
lret
pop
cmp
fs
xchg
lods
mov
insl
fsubr
or
mov
imul
and
sub
mov
enter
jg
mov
jb
in
aad
cld
ss
lahf
push
push
push
xchg
loopne
pop
and
sub
adcl
xor
fildll
sub
mov
push
sbb
mov
pop
xchg
addl
nop
orl
cli
call
popf
cs
pop
jae
jb
insl
mov
mov
in
inc
sub
in
in
ss
test
adcl
mov
imul
in
cmp
jb
xchg
pop
insb
inc
pop
jmp
lret
xor
sbb
inc
push
scas
fstp
jmp
popa
mov
adc
sbb
mov
ds
sub
push
pop
clc
inc
mov
aas
jbe
add
ljmp
inc
inc
inc
dec
add
lock
push
xor
xor
mov
sub
adc
add
psubusw
mov
jno
dec
push
fnstsw
test
mov
dec
inc
in
and
into
jns
xchg
push
mov
enter
in
mov
mov
or
test
sti
mov
pusha
cld
imul
int
xchg
shlb
mov
mov
dec
mov
mov
sarb
jae
lods
mov
rclb
pusha
inc
in
inc
mov
sub
in
inc
out
stos
loopne
and
xlat
cltd
jbe
and
mov
fs
mov
cli
jo
xlat
cmpl
xor
mov
cmc
cli
xor
fcomi
sub
sub
repz
fmulp
loopne
and
test
int3
cli
xchg
mov
cmpsb
mov
jo
or
decb
jmp
aaa
repnz
mov
jmp
je
jg
imul
je
arpl
js
push
shl
push
lock
dec
arpl
out
push
outsl
dec
xor
movsb
shlb
and
add
sbb
sbb
movsl
jne
lock
enter
jle
es
cli
rcll
in
out
push
aas
mov
or
cmp
repnz
xor
mov
mov
mov
into
loopne
jge
ret
pop
xchg
cli
pop
aad
test
pop
add
stc
repz
shrl
cwtl
push
xchg
loop
popa
pop
popa
sbb
sub
sub
mov
xchg
adc
stc
loopne
xchg
test
imul
jo
pop
mov
outsl
sub
int3
ficoml
cmpb
mov
add
cli
adcl
cmp
mov
sqrtps
mov
adc
mov
inc
jbe
test
mov
mov
pop
dec
dec
je
in
jp
ljmp
pushf
je
lret
inc
mul
gs
cli
push
cmp
lahf
hlt
int3
cmpsl
fldenv
inc
pusha
jb
jae
dec
mov
mov
pushw
addr16
dec
dec
xor
cmp
call
adc
lret
inc
nop
popa
ss
xchg
aaa
shr
icebp
xchg
mov
pop
loope
cwtl
lret
testl
sub
movsl
subb
pop
loopne
adc
jmp
cmp
mov
mov
and
mov
cmp
es
jg
pop
out
add
jge
inc
add
cmp
imul
add
cmp
cli
xchg
sub
cmpl
lds
addr16
test
in
out
pop
mov
out
add
stos
cmp
mov
lahf
enter
test
dec
inc
movsb
mov
inc
dec
popf
cmp
pop
pop
push
push
pusha
je
fildll
imul
lret
repnz
mov
pop
adc
js
push
scas
jo
ljmp
stos
cmc
lahf
push
in
inc
test
jl
popa
dec
push
insl
dec
mov
clc
int3
xchg
jmp
clc
stc
jo
popa
add
daa
sbb
lcall
mov
lods
pop
adc
cltd
out
stos
add
inc
xchg
scas
clc
jno
fwait
xor
xchg
inc
adc
out
jne
movsb
sub
mov
pop
sbb
ss
je
xchg
inc
adc
lcall
popf
ds
and
aam
xchg
lret
or
add
cmp
push
dec
insl
sbb
pop
movsl
fmuls
and
cld
add
cltd
mov
ljmp
bound
pop
mov
jle
sbb
mov
sti
inc
sub
dec
mov
cmp
ss
mov
lea
adc
lret
push
or
int3
cli
cmpsb
repz
aaa
push
pop
add
enter
call
and
and
adc
insb
push
dec
add
jo
adc
or
gs
jmp
es
jg
cld
push
pushf
inc
rolb
sarb
push
pop
iret
push
js
xlat
inc
icebp
nop
and
in
or
pop
aam
aad
or
loope
mov
cmp
out
and
inc
add
addr16
sub
fndisi(8087
inc
cmc
loop
xor
outsb
into
test
pop
ret
jmp
movsl
popa
rorb
sbb
aaa
loopne
add
jg
idivb
add
popf
aad
mov
ret
push
mov
test
imul
es
shr
popf
daa
inc
cmp
loope
sub
mov
mov
sub
cmp
insl
push
hlt
int3
jne
sbb
call
push
fldt
add
icebp
addr16
movsl
fbstp
sub
mov
cli
jns
scas
jp
mov
test
adc
mov
pop
inc
or
testl
aam
adc
pop
ds
mov
dec
mov
pop
insb
adc
xor
add
and
outsb
push
adc
sbb
jecxz
pop
sbb
fwait
out
das
lods
mov
mov
add
cmpsl
and
loopne
mov
ret
inc
je
lea
scas
mull
scas
xor
xor
jnp
inc
and
dec
stc
inc
pop
mov
xchg
or
icebp
cltd
jecxz
int
cld
and
mov
leave
mov
data16
in
leave
adc
ret
lea
into
test
out
stc
rcrl
xlat
mov
or
aaa
jo
mov
sbb
inc
pop
inc
jmp
fisubs
out
in
jle
mov
cwtl
jl
push
fwait
push
mov
mov
iret
loopne
sbb
and
sti
gs
dec
in
xchg
movsb
or
shl
andl
movsb
inc
or
inc
leave
loopne
daa
xlat
sub
push
add
pop
cs
jne
xchg
ret
outsl
adcb
mov
int
jg
sbb
aas
jnp
push
shlb
ja
pop
push
lcall
sub
push
add
add
jne
icebp
jno
mov
xor
mov
jl
push
dec
inc
call
mov
mov
mov
inc
adc
cmp
mov
push
or
sub
mov
sbbl
mov
mov
pushf
outsl
mov
push
adc
or
lods
out
xor
ds
jge,pn
loop
rcl
mov
pop
aaa
testb
repz
popa
out
mov
lret
sub
mov
mov
repz
shrb
test
sub
pop
xor
lds
or
sahf
leave
sbbb
nop
cmp
std
hlt
mov
jg
dec
push
jae
rorl
push
sub
or
jo
push
repz
fcmovb
adc
inc
mov
sbb
adc
imul
add
ljmp
push
mov
sub
pop
cmc
xabort
push
rcll
fdivrs
fisubrl
outsb
cmp
lods
cmp
stos
jecxz
fwait
sbb
fistpll
inc
add
add
or
gs
add
add
xlat
cmpsw
and
mov
movsb
cltd
out
call
push
out
stc
pushf
xor
inc
outsl
ljmp
ret
adc
test
and
mov
inc
mov
notb
cmp
ror
xchg
dec
cmp
xchg
and
xchg
popa
lahf
imul
xlat
imul
popa
push
clc
ret
jnp
dec
test
stc
jnp
adc
adc
aaa
xchg
inc
shll
mov
pop
sbb
fimull
pop
pushf
jp
out
push
or
jle
aad
sarl
mov
xor
adc
dec
popf
daa
pop
sbb
lea
mov
jmp
mov
mov
sbb
sub
inc
adc
lret
jp
lcall
lret
ds
fs
call
push
popf
inc
pop
nop
lret
xor
inc
cltd
outsb
loopne
fldt
mov
mov
test
inc
jg
or
fcmove
mov
imul
pop
inc
pusha
jne
pop
mov
add
imul
pop
cmpsl
jmp
jns
cmpsb
out
out
mov
jecxz
mov
in
jo
rcll
cmp
fimuls
push
xchg
test
push
addr16
xlat
ja
add
add
inc
scas
lcall
popa
add
shl
and
and
sti
inc
and
sub
cld
aam
outsb
sub
into
movsb
mov
inc
xchg
add
hlt
adc
mov
mov
imul
mov
xor
lods
mov
lahf
mov
jg
push
fwait
divb
mov
dec
stos
add
das
imul
add
push
ret
xchg
cmp
dec
test
loop
cli
outsl
dec
mov
mov
aam
lret
sbb
out
dec
stos
and
ret
mov
jbe
out
xor
or
push
push
fs
adc
aaa
pusha
add
out
inc
pop
icebp
and
dec
mov
scas
mov
dec
add
insl
xor
or
fcmovnb
js
stos
jnp
mov
and
pop
adc
mov
adc
push
mov
jecxz
ja
jne
xchg
fistpl
shrb
mov
movsb
jmp
sbb
aam
cld
stos
call
push
sbb
or
jl
rolb
ljmp
mov
add
aas
hlt
icebp
push
mov
test
in
inc
hlt
cmp
arpl
mov
fisubrs
cmp
mov
add
out
sbb
and
pop
jnp
sahf
xor
out
jp
test
dec
jb
sar
fstps
adc
cli
jo
shrb
lret
rorl
adc
pusha
sub
mov
mov
es
out
sbb
mov
loope
pop
aas
or
orb
dec
adc
sub
stos
push
js
mov
das
pop
push
fistpll
sbb
add
add
mov
push
int
or
push
inc
std
stc
dec
xchg
rclb
mov
lret
dec
mov
mov
loopne
adc
rol
xor
pop
dec
ret
adc
push
adc
sbb
addr16
dec
rclb
dec
or
sahf
or
hlt
mov
inc
sbb
add
inc
jg
jp
loopne
xchg
mov
bound
cmp
xor
or
jecxz
add
loopne
jg
xchg
icebp
imul
movsb
mov
add
data16
test
mov
mov
sbb
jl
cld
mov
or
jg
mov
or
push
rol
mov
nop
scas
dec
sbb
fwait
xchg
fcompl
mov
cmp
ret
cmpsb
mov
fs
mov
or
dec
adc
faddl
sbb
cmpl
enter
fisubrs
lods
gs
call
pushf
aaa
adc
jmp
scas
or
mov
flds
push
popa
or
adc
dec
js
pop
lret
sbb
aam
ret
inc
pop
movsl
and
xchg
lcall
cmp
inc
pusha
jnp
or
mov
inc
cmp
cmc
inc
jp
sub
cmc
mov
fisttpl
das
cmpsl
add
push
decb
stos
push
pop
subb
insl
out
add
cmp
fs
xor
int
mov
jae
dec
push
aad
insb
push
addr16
xchg
sub
mov
stos
cmpsb
lret
mov
pop
jp
int3
fistps
addr16
into
roll
data16
pop
gs
cld
je
xchg
lcall
xchg
mov
xchg
insb
idivl
into
jbe
and
push
or
aas
imulb
xchg
fwait
dec
mov
or
sbb
sahf
int
mov
popa
sub
push
pop
mov
arpl
lods
pushf
call
sub
xor
push
xor
out
pextrw
add
sbb
adc
mov
jl
jnp
je
jbe
in
jmp
test
arpl
and
cwtl
or
lcall
cmp
aam
jmp
pushf
shr
jg
sub
push
inc
fimuls
sbb
sbb
bound
mov
imul
lret
push
push
fs
fisubrs
xor
sub
push
pop
test
enter
mov
jae
popf
sub
add
movsb
push
add
dec
sub
dec
stc
add
mov
xchg
push
int
imul
lea
pop
mov
lock
dec
imul
xchg
outsl
mov
or
inc
xchg
cmp
xlat
sbbl
test
cmp
addr16
sahf
jnp
sbb
dec
push
idiv
mov
or
mov
xor
ljmp
cmp
nop
jnp
mov
add
xchg
cmp
bound
mov
popf
icebp
pop
ficoms
daa
mov
mov
sbb
orb
jge
sbb
xchg
and
lret
mov
or
pop
or
jge
dec
mov
outsl
js
mov
inc
jns
repnz
jecxz
in
pop
cmpsb
and
mov
jecxz
and
pop
xlat
pusha
lret
inc
stos
popa
fwait
pop
js
adc
pop
lret
test
push
fs
test
pop
mov
cmp
ret
cltd
mov
imul
and
das
cmpsb
imul
test
push
push
les
into
adc
fstl
push
mov
add
aad
cli
add
je
fdivl
shlb
sub
cld
xchg
jle
sub
lock
push
mov
inc
dec
cmp
call
push
jo
cmpsb
mov
bound
pop
push
jb
lds
call
in
add
fcompl
and
or
mov
jo
popa
pop
mov
add
xchg
mov
testw
mov
aaa
xor
mov
pop
cmp
mov
ret
sbb
das
nop
or
clc
or
jae
movsb
inc
xchg
inc
ret
stos
push
cmpsl
das
dec
mov
rcr
or
mov
ret
jecxz
add
std
insl
dec
inc
mov
jo
data16
insb
mov
loop
aaa
sti
nop
das
stos
iret
xchg
push
ja
insb
aas
add
shll
adc
push
test
fmul
mov
inc
sarl
lahf
inc
or
in
jno
jbe
pushf
jp
add
and
ljmp
mov
sub
daa
lock
mov
and
iret
jge
or
push
stos
fadd
dec
loop
in
cwtl
je
in
jbe
dec
loop
jge
jbe
dec
add
mov
xlat
push
mov
add
orl
mov
rcrb
repnz
mov
inc
pop
stos
mov
dec
pop
inc
jne
mov
ja
in
dec
or
into
fmuls
mov
sub
inc
xchg
dec
mov
testb
fs
pop
inc
cmp
pusha
or
test
pop
fistpl
dec
test
fcmove
jns
je
mov
mov
push
sbb
sbb
cltd
stos
or
scas
imul
aaa
into
cmp
imul
aaa
xchg
sbb
fmul
sub
mov
pop
adc
cmp
sbb
cli
dec
movsl
test
ss
pop
xchg
fs
jle
mov
jp
jecxz
sbb
xchg
jge
push
cmc
dec
ret
adc
cmp
cmp
cltd
mov
aaa
xchg
inc
push
out
xor
dec
arpl
pushf
adc
aam
sub
sbb
xchg
imul
mov
sarl
js
and
cmp
xchg
cltd
pushf
loop
dec
push
push
sbb
mov
push
insl
mov
lret
cli
inc
push
popf
mov
popf
jecxz
es
adc
out
outsl
jae
ret
inc
xchg
lods
into
xor
add
jne
cli
testl
add
dec
xchg
or
je
cmp
into
mov
iret
insb
pop
dec
daa
mov
movsb
add
int
sub
or
inc
mov
sub
jle
fistl
jl
push
jge
aam
jne
outsl
mov
push
lds
fisubrl
and
cmp
dec
push
mov
in
daa
jecxz
adc
mov
pusha
repz
imul
xchg
leave
push
stos
mov
mov
icebp
arpl
imul
aas
fs
ret
stc
adc
imul
enter
add
in
stc
jnp
sbb
xchg
lods
pop
fadd
int
inc
mov
icebp
imul
ret
push
repnz
lods
mov
pop
rcrb
lods
loopne
mov
add
xlat
cmp
push
lcall
repz
fidivs
mov
lea
mov
pusha
call
or
cmp
imul
and
xchg
pop
jmp
hlt
jne
jp
mov
mov
orl
loop
sbb
pop
shrb
lcall
adc
ret
arpl
mov
enter
inc
xchg
divl
int3
scas
push
out
pop
xchg
lock
mov
cmc
jae
jae
sbb
mov
jmp
mov
sub
shl
sbb
inc
test
jno
sbb
insl
dec
and
sbb
xchg
inc
cli
clc
ljmp
or
mov
add
adc
mov
sub
jno
cmpsb
mov
clc
fcomi
add
outsb
or
adc
xchg
sbb
push
lahf
test
cmp
pop
ja
in
iret
mov
sahf
mov
add
xchg
mov
mov
cwtl
mov
test
adc
aam
fsubrl
mov
mov
subl
sub
jecxz
adc
mov
stc
jnp
dec
mov
ret
pushf
cwtl
inc
pop
inc
and
mov
mov
je
push
xchg
mov
test
push
imul
leave
gs
sbb
call
ja
in
xchg
aam
cmp
frstor
fcmove
popa
sbb
aad
fdivrl
pop
scas
or
in
mov
pop
loopne
cltd
sbb
popa
les
fwait
inc
and
dec
lret
mov
xchg
lret
mov
cld
cmp
lret
jge
call
jp
mov
xor
xor
jae
sub
add
test
xchg
mov
cmp
dec
loopne
mov
repnz
nop
mov
insb
adc
arpl
rclb
lret
out
or
sub
sete
jnp
int
test
mov
cmp
sbb
fwait
fwait
xchg
shll
pop
push
stos
bound
int3
popf
xchg
rcrl
pop
xor
mov
jg
and
add
idivb
int3
jb
xor
arpl
and
pushf
sbb
dec
and
in
shlb
aam
push
aaa
mov
jo
nop
in
jl
dec
pop
mov
jecxz
das
data16
xor
or
inc
pop
not
notb
push
sbb
or
jge
add
stos
outsb
or
xor
add
xchg
inc
rolb
dec
jno
xor
sub
mov
lret
aad
aam
pop
cmp
add
mov
adc
lret
jns
lret
into
push
pusha
pop
push
lret
subb
fcoml
mov
lock
fdivs
cmc
pop
out
sbb
mov
jge
dec
sub
push
or
lret
jle
push
ja
std
hlt
hlt
push
cltd
xchg
cmp
cmp
mov
repnz
jmp
out
xchg
and
mov
lcall
inc
cmpsb
mov
fisubl
adc
pop
ljmp
fucom
xchg
stos
mov
lods
xor
pushf
xchg
data16
lahf
xchg
inc
jl
sti
add
inc
add
rorl
mov
rcll
js
fsubr
das
out
cld
fidivrl
ljmp
in
mov
mov
sbb
aas
gs
xor
jecxz
pop
and
inc
test
xor
jae
testb
adc
jmp
lahf
mov
nop
xchg
cmpsl
fiaddl
dec
xor
xchg
xor
inc
xlat
or
test
jge
sub
addl
xor
mov
aas
dec
xor
or
inc
in
xchg
inc
mov
cld
stc
rclb
outsl
inc
test
popl
daa
pusha
dec
push
lcall
ds
cli
inc
adc
repz
xor
xchg
stc
cmp
or
mov
pop
or
orl
fisubs
push
mov
cs
repnz
lret
xor
push
dec
lret
cmpb
xor
lods
mov
pushf
lret
and
fsubrp
stc
stos
std
ret
sbb
push
and
add
pop
mov
test
and
out
dec
pop
stos
aam
cmp
mov
pop
and
fstpl
imul
or
adc
push
out
pop
pop
xchg
cmc
mov
mov
cltd
aam
dec
sbb
adc
push
push
scas
pop
lods
fsubs
mov
cltd
push
lret
pop
in
insb
pop
fwait
dec
lahf
mov
mov
std
push
mov
inc
push
dec
pop
cs
nop
fwait
inc
aaa
inc
in
sbb
loope
xlat
scas
xchg
insb
outsb
xchg
movsl
jno
repnz
arpl
mov
mov
sbb
mov
stos
dec
stos
ja
popa
mov
mov
mov
into
inc
mov
sbb
mov
les
ds
mov
es
add
in
pop
fwait
decb
fdivrs
sbb
xchg
enter
pop
mov
repnz
enter
shrb
push
jbe
ja
cmp
rcll
xchg
loop
rorl
add
addl
mov
mull
sbb
mov
push
adc
cmp
cmpsl
ljmp
jge
sbb
adc
lock
ljmp
repnz
xchg
call
dec
das
les
stos
mov
sub
or
pop
mov
stos
xor
nop
push
sub
pop
sub
sarb
pushf
mov
jg
and
fsubr
notb
lds
lahf
mov
mov
mov
loopne
sub
cmp
or
imul
fadds
xor
or
push
fsubs
jbe
dec
bound
add
push
cmp
xor
sbbb
call
mov
sbb
adc
scas
pusha
jbe
stc
sti
xor
push
subl
mov
ds
outsl
fcom
or
sbb
out
shrb
mov
imul
pusha
xor
adc
in
lcall
cmova
dec
cmpsl
fs
inc
mov
lahf
and
push
addr16
dec
push
push
jecxz
jns
lock
jo
sub
sbb
insb
cltd
mov
push
loope
lock
xchg
repnz
popa
xchg
sub
add
xchg
mov
push
xchg
mov
aad
xor
lcall
sbb
and
pop
dec
jb
push
out
shld
imul
lods
ret
pusha
gs
add
scas
jae
sub
lcall
mov
mov
mov
ret
mov
cld
loop
xchg
addb
iret
in
scas
dec
mov
xor
xchg
adc
push
xor
faddl
clc
xchg
adc
mov
push
imul
adc
dec
push
mov
jb
jb
inc
and
shrb
mov
fisubs
out
imul
shll
or
adc
cmp
sub
arpl
pop
movsb
sti
sbb
repz
xor
into
test
sub
fcoms
sbb
mov
ret
sbb
pop
fwait
lea
imul
mov
jmp
lock
out
xor
xchg
push
or
add
daa
add
mov
sbb
jnp
push
xchg
ds
mov
mov
and
mov
pop
aad
fstpl
add
mul
pushw
loope
mov
stos
das
pushf
xor
push
out
or
adc
sub
outsb
or
adc
lret
loopne
dec
stc
bound
scas
mov
push
cmp
adc
adc
andb
mov
jb,pn
shrb
mov
test
test
insl
loopne
mov
and
loop
loopne
xor
out
lods
push
mov
lcall
mov
mov
push
push
stc
pusha
push
leave
imul
mov
es
xchg
sbb
dec
pop
loop
rolb
js
int
fidivrl
mov
mov
dec
popa
lahf
mov
bound
inc
push
leave
lods
roll
sub
out
mov
cmpb
sub
pop
test
xchg
jo
pushf
mov
xor
pop
adc
mov
movsl
fadd
sti
mov
add
sbb
mov
xchg
iret
inc
mov
add
pop
inc
sbb
mov
pop
es
ror
je,pt
mov
mov
xlat
and
in
cli
dec
xor
loopne
ljmp
mov
and
incb
mov
dec
leave
lret
adc
in
push
jle
mov
es
dec
mov
in
movb
jnp
inc
test
mov
mov
fmuls
lock
popf
push
jle
and
fwait
sbb
movsb
dec
xor
sub
mov
imul
adc
cmc
popa
mov
insl
push
mov
mov
loop
jae
adc
dec
cmp
inc
push
ficoml
xchg
cmpsb
mov
push
inc
push
call
gs
imul
jg
loopne
push
mov
or
xchg
adc
mov
lds
mov
push
pop
jmp
sbb
or
inc
mov
lds
repz
movsb
aas
adc
mov
push
pxor
dec
jae
jns
sbb
inc
jg
pop
jecxz
lcall
lret
shrl
pcmpeqw
notb
jge
das
mov
xlat
and
sarl
rol
sbb
push
fiaddl
lret
mov
aas
mov
std
hlt
cmpsb
xchg
jno
mov
pop
xor
mov
loope
add
cmp
sarb
test
in
out
sub
int3
sub
mov
dec
ss
lret
cli
jg
jl
ds
cld
push
lret
add
jo
testl
mov
mov
out
mov
sbb
xlat
mov
lods
sub
fdivl
jecxz
pushf
push
cmp
loopne
imul
jecxz
cmc
inc
cltd
pop
push
xchg
aad
jo
stos
mov
mov
lods
xchg
gs
mov
sahf
loope
add
push
xor
push
pop
into
mov
movsb
addr16
out
daa
mov
imull
sarb
into
pushf
mov
mov
dec
sub
and
mov
sbb
fcoml
inc
aad
mov
xchg
sti
inc
inc
mov
xchg
jns
mov
adc
insb
pop
push
adc
ret
pop
fsub
mov
ret
lock
pop
je
test
and
dec
xor
jo
out
or
fcmovb
inc
fdivl
loop
cmpsb
xor
pop
cmp
xor
aad
ret
pop
inc
and
sub
mov
scas
movsb
jbe
mov
jno
mov
adc
gs
in
nop
xchg
jl
jge
sub
xchg
sti
inc
and
push
or
inc
daa
rclb
pop
jecxz
fisubrs
push
movsb
repnz
ljmp
and
enter
xchg
movsb
mov
cmp
jno
pushf
insb
arpl
cmpsl
jmp
notb
pushf
xor
mov
jae
cmp
sub
sbbl
jns
push
xor
adc
adcb
stc
pop
xlat
shr
xchg
cld
and
jge
push
in
pop
arpl
sbb
scas
test
mov
test
add
inc
sbb
push
mov
lods
fldcw
into
cmp
hlt
cmpsb
mov
sbb
push
xchg
inc
cmp
leave
xchg
das
xor
test
stc
in
lret
sub
push
dec
int3
mov
int3
data16
lods
sbb
mov
aad
pusha
fsts
out
cmp
cld
inc
jge
cli
hlt
mov
test
es
shll
or
sbb
add
sarb
in
add
ret
enter
jle
pop
repnz
add
and
stos
xchg
jnp
fdiv
cmc
cmc
jmp
das
inc
sbb
cmp
lods
les
popf
shlb
and
test
dec
jle
sbb
sub
xchg
mov
cmc
out
xor
ljmp
mov
push
xchg
push
push
ds
clc
aad
scas
push
loopne
mov
int3
data16
cs
fmuls
sbb
lret
jg
cmpb
dec
iret
fdivrp
ja
fldenv
dec
ljmp
dec
pop
cli
xchg
mov
ljmp
popa
inc
fcmovbe
ljmp
adc
and
lea
sub
lods
outsb
std
test
inc
fs
push
mov
movsl
fldt
push
dec
xor
das
or
mov
sbb
gs
rclb
xchg
push
lcall
lock
mov
xchg
ljmp
and
dec
in
mov
insl
mov
arpl
mov
testl
cli
add
xor
push
and
and
mov
adc
mov
push
fstps
sub
jns
or
mov
mov
xor
cld
push
jge
out
dec
cmpsl
mov
push
mov
loopne
adc
fisttps
jae
push
sbb
mov
je
shrb
dec
inc
jmp
push
sbb
sbb
mov
pop
call
pop
and
xor
xchg
test
insl
mov
cmp
mov
cmp
jnp
push
and
xchg
sub
loope
ds
rcll
hlt
popa
popa
rorb
pop
leave
lcall
lods
ret
mov
add
jnp
gs
mov
adc
scas
push
std
and
enter
test
dec
inc
out
pop
movsl
fisttpl
lods
sub
out
hlt
xchg
mov
hlt
popf
das
mov
and
push
push
mov
shll
jns
xchg
and
dec
std
or
imul
pop
dec
xor
sub
gs
out
into
loopne
jp
out
test
daa
fidivrs
xor
das
xor
stos
mov
lahf
xchg
lret
mov
leave
push
xchg
pop
jle
cld
xchg
inc
pop
pop
pop
stos
cwtl
sub
or
and
push
jl
push
add
push
imul
insb
inc
and
fstpl
out
lds
mov
jbe
sub
shll
push
xor
mov
adc
push
sbb
in
xchg
loopne
dec
dec
imul
fs
out
rolb
dec
lea
lcall
lahf
lret
mov
push
inc
and
addb
inc
sub
mov
insl
call
shrb
nop
sub
pushf
inc
pop
push
fnstsw
in
js
cmp
push
sub
jae
push
out
pop
cld
sahf
add
mov
loopne
and
imul
imul
lea
pop
daa
fimuls
aas
jmp
fwait
shlb
fldl
mov
enter
sbb
mov
jmp
frstor
lcall
xchg
out
lods
lcall
std
pop
adc
gs
scas
in
hlt
js
jnp
repz
pop
outsb
jmp
mov
lret
aaa
adc
sbb
sbbb
push
sub
xlat
addr16
adc
and
call
mov
mov
cs
imulb
in
add
push
shrl
xchg
push
push
jg
repz
cld
icebp
out
xor
jae
imul
adc
addb
cwtl
lea
out
lret
fcoms
add
add
inc
cmp
fistps
xlat
sahf
popa
xchg
and
es
icebp
jae
cmc
inc
fldt
cmp
outsl
pop
sarb
xchg
lds
std
adc
or
cmpsb
fdiv
jmp
jge
out
jmp
test
in
outsl
shll
cmp
movb
cwtl
pusha
or
sub
in
dec
sub
loopne
adc
std
rcrb
cmp
icebp
or
lretw
sarb
mov
mov
stos
mov
pop
mov
add
test
das
pop
js
pop
lea
push
xor
add
xchg
stos
or
stc
adc
test
mov
or
xchg
mov
mov
add
repz
stos
pop
mov
jno
inc
jae
inc
xorl
mov
adc
mov
lret
or
ret
sub
call
jb
pusha
cs
dec
repnz
popl
out
es
xor
adc
inc
xor
bswap
clc
mov
nop
pushf
shll
mov
push
adc
loop
lods
cltd
leave
push
outsb
or
or
xchg
aad
or
inc
inc
mov
cmp
aaa
push
cmp
mov
fwait
and
adc
push
dec
imul
loopne
pop
in
cmp
pop
mov
inc
jmp
lahf
xor
dec
mov
sub
lds
sub
lcall
ja
add
scas
lret
mov
movsb
push
jge
sbb
sub
and
or
inc
in
xor
inc
sbb
leave
sub
cwtl
xor
pop
outsb
and
js
dec
mov
xchg
cmp
sbb
inc
iret
mov
outsb
pop
ficompl
mov
xor
xor
in
sub
hlt
push
test
jo
scas
jl
sub
cmpsl
mov
stos
rclb
dec
into
aad
popf
xor
mov
push
fwait
inc
xor
adc
andb
rorl
inc
xchg
data16
cwtl
movsb
out
decl
push
sub
cmp
cmp
fldenv
arpl
xlat
mov
aas
aam
cmpsl
test
mov
ficompl
movsb
mov
pop
sbb
jno
or
cmp
cmc
push
adc
ret
mov
xchg
out
jmp
int
ja
lds
mov
imul
mov
push
shrl
ds
jg
movl
push
leave
pminsw
ja
shll
inc
rolb
test
xchg
imul
loop
out
flds
test
sbbl
cmp
insl
loopne,pn
xor
inc
push
xchg
add
lds
pop
lret
cmp
push
xchg
adc
fidivrs
xor
mov
repz
aam
aad
push
jp
xor
sarl
popa
insl
push
pop
pushf
das
aad
add
add
mov
sub
popl
rcll
mov
imul
out
sub
les
std
pop
lret
or
add
mov
sub
sub
pushf
sub
test
ret
in
inc
fcmovne
sarl
mov
push
jne
setge
rep
loopne
xor
xchg
and
xor
dec
ret
sar
push
arpl
rclb
incb
in
popa
mov
mov
inc
or
push
shrl
fldt
ljmp
sub
in
movsb
pop
sub
cmp
cmpsb
fidivl
jmp
sahf
mov
stos
es
popa
or
out
cmp
sub
inc
cmp
push
leave
or
inc
adc
sub
fidivrs
push
insb
dec
mov
push
push
inc
mov
adc
mov
clc
scas
loopne
rdpmc
into
jecxz
mov
ljmp
add
push
inc
idivl
loop
fstpl
xchg
daa
cltd
jnp
cmpl
sbb
or
cltd
jne
cli
sti
mov
aaa
mov
and
arpl
sub
cmp
jge
out
pop
xchg
les
mov
mov
inc
sbb
roll
jle
xor
aaa
in
dec
repz
shlb
mov
pmaxub
in
inc
pop
aam
jp
xchg
xchg
inc
push
fimull
xchg
mov
xor
push
test
mov
imul
lds
cmpsb
sub
lahf
and
dec
xchg
loop
scas
xchg
push
and
aaa
outsl
jae
sub
inc
jnp
xlat
sar
xor
lock
jae
lods
mov
ret
mov
pushf
lcall
sbb
push
lods
outsl
hlt
add
out
inc
or
mov
mov
mov
int
jb
pop
adc
xor
xchg
jecxz
mul
dec
xor
pop
out
inc
imul
addr16
push
sub
jle
and
cld
xchg
addr16
sub
test
scas
cmp
addr16
xchg
sbb
or
xor
int3
scas
dec
mov
fdivrs
inc
fst
jmp
ss
jno
mov
pop
lock
lcall
in
mov
adc
lods
sub
pop
lods
mov
ja
pusha
jo
sub
les
mov
and
and
xlat
mov
sbb
pop
jb
xor
lahf
out
icebp
fsubr
mov
push
leave
mov
mov
mov
xchg
loop
movsl
pop
push
sar
out
ficoms
lret
hlt
orb
clc
mov
jle
stos
sbb
sbb
mov
adc
int
lahf
mov
mov
test
xchg
add
cmpsb
jae
push
pop
lds
pop
add
mov
scas
dec
out
inc
mov
ret
repz
loopne
faddl
pop
mov
pushf
xchg
movsb
cmp
in
sub
jg
cmp
ficoms
je
dec
sub
fildl
adc
push
test
les
sbb
pop
fistl
repz
mov
je
loope
lahf
cmpsl
js
pop
neg
test
sub
subb
mov
xlat
dec
push
clc
lds
cmp
sub
jns
add
jne
lret
mov
push
es
lret
fdivl
ds
sahf
clc
sahf
add
shll
sti
mov
in
movsl
outsb
mov
push
call
mov
dec
popf
loopne
or
imul
and
dec
mov
xchg
and
xor
rcr
add
mov
out
iret
insl
daa
dec
inc
or
aas
add
add
pop
ror
leave
xlat
pop
sbb
icebp
and
fcmovbe
mov
addr16
adc
mov
repz
popf
xchg
push
cwtl
mov
mov
lds
pop
push
push
lcall
or
adc
es
cmpsb
sub
inc
test
inc
pop
jbe
cli
arpl
popf
pop
inc
push
inc
mov
add
sti
mov
subl
mov
fldl
sub
push
xchg
lret
repz
adc
frstor
inc
and
in
fwait
or
push
and
cmpsb
push
xor
sbb
clc
cmp
push
mov
sti
movsl
cwtl
mov
mov
int
outsb
incb
daa
xlat
mov
bound
adc
stc
sahf
mov
cmp
xchg
jae
imul
sbb
cmpsb
scas
add
adc
mov
mov
mov
in
insb
loopne
cld
cmp
mov
or
sbb
aad
imul
push
out
sar
adc
mov
aas
jl
ds
push
add
rol
jg
sub
pushf
xchg
sti
mov
push
daa
jmp
icebp
aaa
pop
xor
enter
inc
push
or
dec
outsl
loopne
lret
das
dec
jb
lahf
cmp
arpl
cli
in
and
push
jne
jge
dec
mov
cmpb
mov
xor
fs
es
gs
pop
hlt
xor
and
sub
mov
pushf
mov
repz
iret
out
cs
mov
xorl
loope
hlt
test
or
insl
xchg
mov
outsl
and
inc
jl
aaa
pop
pop
xchg
cmpb
cwtl
xor
sbb
adc
xor
ret
add
pop
int3
xor
int
add
push
lods
add
out
and
mov
sub
fs
js
std
out
xchg
insl
in
sbb
xor
xchg
inc
sbb
jmp
adc
ret
inc
sarl
rcll
lods
mov
insb
adc
js
pop
aad
cld
mov
stc
ja
aas
mov
add
sbb
out
sbb
pop
dec
pop
jae
aaa
push
pop
ret
lcall
daa
cmc
lret
lock
ret
add
sub
icebp
out
jmp
repnz
insb
insl
bound
dec
addr16
sub
pop
push
stc
imul
inc
dec
push
push
mov
mov
bound
mov
dec
jo
icebp
pop
mov
push
andb
or
xor
js
jno
pop
int
in
dec
scas
push
cmp
les
sbb
mov
cli
inc
push
jmp
aaa
mov
ret
jns
divb
cmp
add
mov
sub
imul
xor
sbb
lahf
xorps
mov
js
lods
pop
push
rcrb
out
mov
sbb
insb
js
adc
call
dec
cltd
pop
test
sarb
mov
outsl
enter
ret
push
scas
shl
xor
lret
inc
das
daa
imul
pusha
push
pushf
out
push
fsubrp
jb
fwait
xor
imul
lahf
sbb
xor
rcrb
jg
xorb
jg
or
cmp
cmc
cwtl
and
leave
and
lahf
lcall
sahf
inc
test
mov
js
loop
popf
mov
cmp
push
imul
lahf
lahf
js
mov
or
icebp
or
dec
or
je
fwait
shrb
rol
stos
sbb
add
inc
mov
jg
fiaddl
cli
cmc
cld
in
dec
push
pop
mov
and
cmp
sub
cmp
fcompl
pop
cli
mov
sub
sbb
enter
gs
loopne
rorl
jbe
fnstcw
mov
shlb
xor
dec
jl
xchg
hlt
add
xchg
or
push
jl
jb
testb
popf
xlat
daa
inc
push
ljmp
cli
jno
and
mov
in
mov
push
cmp
leave
out
push
cltd
sub
mov
push
repnz
arpl
and
xchg
jmp
lret
popa
pop
lods
adc
enter
or
es
pushf
cmpsb
jno
scas
push
and
push
out
mov
rolb
sbb
jl
pop
push
push
xchg
sbb
jmp
cli
inc
and
xor
mov
movsl
mov
xchg
pop
mov
push
jg
in
mov
rcrb
push
ds
fldt
jg
sbb
out
lods
adc
clc
adc
mov
aam
cld
mov
cmp
or
aad
lea
or
je
movsl
inc
or
jbe
adc
lret
scas
andb
filds
lahf
mov
sub
ret
xchg
lcall
scas
test
aas
std
xchg
std
sbb
xchg
add
out
sub
mov
jae
data16
fisttps
adc
and
inc
negb
lea
xlat
imul
sahf
xor
out
inc
fdivp
add
and
jmp
jp
push
test
sub
cmpsb
pop
aam
cwtl
cmpsl
outsl
clc
jae
movsb
loop
popa
add
lods
dec
pop
push
bound
jg
jnp
inc
ss
jmp
push
or
cmpsl
jo
cltd
sub
and
sbb
scas
xchg
repnz
movsb
adc
lds
pop
push
sub
ja
addr16
pop
xchg
movsl
outsb
mov
inc
scas
loop
cmpsl
adcb
hlt
outsb
xor
lea
sbb
int
test
mov
mov
lret
fidivrs
jae
cli
fsubrs
cmp
bound
aad
adc
icebp
jge
adc
or
cmpl
sub
mov
jmp
sub
push
iret
out
cmp
test
xchg
inc
mov
jmp
rclb
bound
adc
and
sbb
and
sbb
scas
and
arpl
sub
and
inc
xor
push
rcll
mov
lods
cltd
or
jl
cmp
mov
mov
dec
cli
and
repz
sahf
in
pop
ja
fbld
rorl
imul
push
push
fildl
sarb
jmp
das
fwait
hlt
roll
int
ret
lods
cmc
iret
and
push
and
stc
sbbb
xor
ljmp
repnz
mov
add
ja
add
cld
cmp
js
pusha
popf
xor
xor
mov
jle
add
dec
outsl
gs
scas
aas
outsb
xchg
adc
add
out
jo
dec
into
bnd
adc
fcmovnu
mov
dec
add
xor
adc
insb
test
int3
scas
xchg
push
sub
xor
inc
movsb
pop
inc
lock
add
lods
icebp
insl
test
cwtl
and
cmp
test
jge
sbb
xchg
mov
and
mov
fwait
add
push
scas
push
sub
clc
ss
adc
push
mov
push
dec
ja
xor
mov
xor
add
popa
stos
and
mov
cmpsb
jl
xlat
nop
add
cwtl
insl
pop
shll
movsb
mov
outsl
ja
arpl
lcall
out
fnsave
rolb
hlt
bound
add
ljmp
out
lods
leave
cmpsb
xchg
jb
add
adc
rcrb
adc
jmp
push
or
inc
mov
inc
jge
shl
loope
push
mov
pop
mov
loope
jg
push
data16
cmp
mov
adc
test
call
jle
sti
adc
nop
out
gs
outsb
fs
cmpsb
hlt
adc
mov
fiaddl
test
ds
pop
xor
xor
add
pop
jle
mov
push
std
xor
add
jp
jl
ret
xchg
outsl
imul
mov
add
lcall
lods
outsl
add
add
pop
shl
xor
es
add
inc
push
enter
in
insl
mov
push
sbbl
jbe
add
test
mov
and
mov
out
sbb
sbb
sbb
adc
mov
shlb
iret
mov
and
dec
adc
cmp
sub
iret
pop
and
hlt
lds
sbb
sahf
cmpl
fadd
daa
xor
mov
shrl
mov
cmp
dec
xchg
cmp
insl
lcall
rcrl
fcmovnb
jmp
mov
fcmovnu
gs
mov
adc
popl
sarl
cmpsb
inc
das
push
js
sbb
lock
int
mov
ja
add
pop
inc
inc
push
scas
pop
cmp
movl
adc
insl
cmp
arpl
loopne
push
cmp
nop
mov
cltd
adc
mov
add
das
push
dec
xchg
mov
jo
scas
or
or
pop
out
enter
push
shll
filds
fwait
scas
inc
add
dec
roll
fidivl
icebp
outsl
pusha
fs
add
pushf
sahf
mov
sbb
push
lods
hlt
in
mov
loopne
fucom
sub
push
ret
aas
in
sbb
lods
int
stos
or
rol
mov
dec
pop
mov
mov
js
mov
mov
adc
inc
in
sbb
pop
pop
ljmp
and
jl
pop
loope
ret
mov
arpl
cmp
or
repz
shlb
inc
aas
shrb
xchg
jmp
loopne
push
mov
jbe
mov
fwait
xor
popf
jo
jb
mov
fwait
cmp
test
movsb
jbe
or
push
xchg
sbb
add
push
inc
cwtl
mov
sahf
jl
cltd
mov
pop
fstl
inc
pop
push
add
out
repnz
pop
arpl
sub
sub
sub
sbb
xlat
test
inc
subb
dec
or
jbe
mov
enter
dec
in
jb
sub
inc
jle
adc
fimull
sbb
dec
push
or
mov
jb
std
xchg
lcall
sbb
cmp
xchg
push
cs
add
inc
rclb
sbb
adc
nop
sbb
mov
js
pushf
insl
sbb
shl
xor
xor
call
xchg
jg
lods
pop
sbb
aas
in
jg
add
outsb
jo
sub
inc
icebp
add
mov
out
aad
outsb
aam
xchg
lods
mov
subb
xchg
sahf
pop
inc
test
and
sub
mov
inc
sbb
xor
and
sub
movsl
fcompl
stos
aaa
test
mov
pop
cmc
mov
adc
cmp
sub
pop
mov
or
inc
dec
mov
mov
outsl
add
mov
inc
ljmp
xchg
rcr
iret
fsubs
cmpsb
shlb
stos
lds
gs
cmp
mov
popf
jle
xchg
clc
xorl
mov
add
adc
and
cmpsl
int3
filds
mov
ss
sub
leave
mov
insl
adc
pop
sahf
mov
popa
lods
pop
jnp
in
imul
adc
out
arpl
xor
jg
mov
fwait
xor
in
out
dec
popf
sbb
inc
hlt
arpl
dec
cwtl
mov
inc
mov
jno
cmpb
aad
or
or
popf
add
sbb
dec
enter
add
pop
and
je
add
mov
loope
movsl
or
adc
mov
add
xchg
loope
stos
gs
pop
add
ja
out
outsb
stos
mov
outsl
pop
push
int
into
mull
mov
mov
or
fstl
sbb
in
sbb
xor
lcall
mov
pop
xor
subps
jecxz
int
or
shll
mov
adc
in
xor
incl
inc
mov
inc
enter
hlt
add
xor
getsec
add
in
adc
adc
pop
in
insl
jle
mov
enter
xchg
mov
or
clc
in
cli
test
out
jno
jns
or
int3
push
mov
imul
mov
jl
push
popf
outsb
jp
js
xlat
fisubs
mov
ss
add
mov
out
enter
dec
enter
add
adc
or
mov
jmp
mov
lcall
pop
push
out
push
popa
fimuls
mov
add
cmc
and
popa
icebp
mov
sub
sbb
add
mov
pop
add
xchg
jp
xor
mov
add
mov
jne
ljmp
mov
stos
addr16
jne
inc
sub
outsb
sub
cmpsl
adc
icebp
es
push
lret
sbb
mov
lcall
imul
test
enter
andl
divl
test
into
add
jnp
and
sub
cld
mov
pop
and
mov
cwtl
dec
shrb
sets
sub
cmp
lret
jne
pop
je
lock
sbb
add
leave
cmc
test
dec
cltd
push
scas
push
cmp
das
inc
aaa
or
inc
add
mov
inc
fildl
aaa
sbbl
mov
inc
pop
sbb
das
push
ret
mov
push
mov
sbb
arpl
inc
testl
aas
sub
push
mov
ret
push
sub
pop
aam
adc
xlat
divl
mov
push
mov
sbb
push
cmp
icebp
dec
sub
fwait
cld
and
push
popaw
pop
inc
int3
ljmp
inc
cli
push
mov
stos
cltd
test
xor
mov
sbb
push
movsl
outsl
and
dec
mov
stos
xchg
cmp
cltd
loop
popa
mov
popf
push
pop
and
and
or
mov
push
push
dec
pop
popa
test
push
mov
icebp
je
cwtl
bnd
dec
lcall
mov
addr16
fcomp
ss
mov
es
mov
fidivrs
push
cmp
rclb
push
bound
insb
mov
fsts
and
dec
fidivl
dec
xor
out
dec
jae
daa
adc
pop
push
lods
pop
mov
xchg
pop
sbb
add
rclb
xor
out
xor
add
xor
cmp
and
adc
sub
stos
loop
test
and
decb
xchg
push
push
pusha
and
sbb
lcall
ds
push
and
or
daa
xor
popf
shrb
bts
mov
jae
mov
lret
and
cs
mov
jle
fildll
imul
adc
jg
jle
out
xchg
insl
mov
cmpsl
pusha
xor
dec
sub
cmp
cmp
sub
lds
scas
int3
pop
mov
push
int
pop
popf
push
inc
shlb
xor
and
push
insb
sub
sub
or
and
jmp
pushw
scas
push
mov
in
or
add
push
ret
mov
mov
test
or
mov
movsb
add
cltd
and
shl
insl
dec
dec
cmp
pusha
outsl
je
adc
xor
loop
fsubrs
mov
faddl
or
pusha
jae
and
pop
lret
cmpsb
inc
je
std
fcompl
bound
das
ja
xchg
sub
icebp
ja
popf
jg
push
jb
daa
jge
js
or
and
or
pshufw
lcall
cmpsb
fs
xchg
cld
hlt
roll
cmpsl
loopne
inc
out
lea
and
sbb
lret
popf
or
js
cmpsl
shll
popa
sahf
stc
lret
les
es
xchg
enter
stos
xor
sbb
mov
je
rcrl
in
arpl
lea
lods
and
mov
pop
arpl
xor
jl
jle
mov
in
pop
mov
mov
xchg
into
cmp
inc
cs
cmp
cld
stc
and
andl
inc
mov
xor
jle
jnp
push
jmp
mov
das
dec
lahf
sbb
jnp
stos
fstl
scas
xchg
mov
stos
mov
push
sbb
mov
movsb
fdivl
mov
out
push
int
test
mov
fsub
scas
dec
sbb
add
jecxz
sbb
adc
cmp
xchg
mov
sub
xchg
gs
pop
js
sub
stos
pop
rorb
jmp
pop
mov
nop
pop
cltd
leave
adc
int3
repz
fdivr
repz
jnp
jne
mov
scas
mov
inc
cld
shll
fstps
cmp
sbb
rcl
or
xor
mov
nopl
loopne
das
repnz
ret
movsl
cmp
mov
mov
cmp
or
sub
inc
ljmp
jns
js
loopne
gs
aas
test
gs
sbb
inc
fnsave
aam
sbb
in
fadds
subl
fisubrl
adc
add
ss
sub
cmp
gs
inc
je
jbe
fwait
sub
adc
or
outsl
mov
rcr
fistl
int
sbb
inc
push
loopne
xchg
xchg
testb
cmpsb
repz
lret
cmp
adcl
adc
inc
pop
or
mov
out
mov
adc
xchg
insl
mov
dec
mov
xchg
lcall
sbb
les
dec
aas
aad
jl
add
inc
pop
movsl
push
fmulp
loope
xor
outsl
add
pop
fcoms
in
loopne
pop
rcrl
mov
addr16
mov
cmp
inc
cs
iret
aad
dec
jbe
lret
fisubrl
out
pop
les
adc
ret
sbb
inc
test
call
xchg
iret
cld
sub
jl
call
mov
es
push
icebp
lcall
xor
in
jns
jecxz
dec
daa
inc
adc
fs
je
and
jno
push
das
pushf
insb
jno
cmc
mov
movsl
mov
es
loope
mov
ja
inc
outsb
adc
in
xchg
fdivrl
mov
fisttps
sbb
loopne
jnp
inc
mov
call
sbb
popa
push
mov
inc
and
pop
inc
incl
aas
inc
cld
aam
or
cmp
shr
push
jno
cmp
aas
or
mov
jnp
xor
mov
mov
xchg
arpl
lcall
leave
mov
movsb
mov
inc
and
xchg
push
mov
pop
xchg
push
cwtl
jbe
push
cmp
imul
int
mov
cmp
shll
pop
ja
pop
cmp
cmp
or
ret
dec
mov
lods
or
jmp
mov
dec
lret
les
into
in
lcall
mov
stos
popa
out
stc
rclb
or
mov
ja
hlt
and
push
adc
mov
sub
fs
enter
das
cmp
adc
dec
mov
adc
add
or
pop
insb
lcall
jg
mov
mov
sbb
rclb
mov
in
xchg
ss
lahf
jae
cltd
dec
mov
sti
jne
ret
lcall
pop
scas
xor
inc
popf
test
jns
mov
ljmp
jno
and
subb
imul
pop
data16
xchg
fnstsw
idiv
out
shlb
or
and
inc
sahf
mov
pop
nop
nop
rorb
lret
call
jecxz
jnp
add
int
mov
out
testl
cmc
sub
inc
add
xchg
ss
adc
sub
int
mov
mov
pop
aad
sbb
inc
xchg
or
xchg
insl
jns
xchg
aam
and
fmul
xor
std
scas
push
inc
inc
cwtl
mov
das
in
jecxz
inc
pop
add
jge
sbb
lods
or
stos
int3
cwtl
lret
iret
pop
pushf
pop
cmpsb
mov
mov
mov
aad
dec
xor
mov
dec
in
push
es
jle
test
fcoms
or
sarl
lea
fxch
mov
or
outsl
sbb
xchg
mov
aas
cvtpi2ps
dec
ja
pop
and
or
and
insb
out
loopne
lahf
insb
mov
jge
popf
jmp
push
loop
sbb
ja
pop
push
mov
fs
push
inc
adcl
mov
sti
jp
das
jae
jbe
sbb
negb
dec
shll
out
imulb
ja
sbb
push
mov
mov
inc
xor
in
mov
dec
xor
inc
xor
movsl
hlt
andb
mov
shlb
out
std
mov
outsl
fwait
add
dec
outsb
jnp
out
jl
jno
call
cmp
repz
repz
jle
int
xor
cmp
adc
sub
cmp
jl
inc
or
jecxz
fiaddl
push
cli
mov
mov
pop
inc
cmp
leave
dec
or
out
sarl
setge
inc
or
dec
out
and
lods
roll
xchg
js
in
in
clc
or
jo
movsb
aas
xor
stos
rorl
inc
dec
sbb
enter
xlat
ljmp
cli
dec
pop
sub
shrb
ja
insl
int
add
adc
inc
xor
jg
mov
stc
mov
dec
in
cld
pop
xlat
ds
xchg
pop
scas
mov
cmp
enter
stos
scas
jg
and
xor
fldt
fs
sbb
sub
inc
sbb
or
jbe
lcall
mov
fwait
loop
aad
subl
mov
test
jne
pop
inc
stos
aad
fsub
xchg
add
mov
lds
aad
in
sub
mov
inc
jae
or
fwait
sub
push
push
mov
add
out
pop
xor
std
mov
sbb
cmpsl
fldcw
adc
shrl
xchg
adc
movsb
add
ret
es
mov
out
fistpll
ret
dec
cs
push
andb
adcl
and
and
and
andb
add
sbb
pusha
mov
xchg
xor
mov
loop
ds
add
nop
call
pop
xor
pop
popa
outsl
pop
ds
stos
add
or
icebp
cmp
or
fxch
add
pop
sbb
jecxz
mov
sub
repz
aaa
lods
dec
repz
imul
push
gs
test
jmp
jae
mov
cmpsb
sub
inc
movsb
mov
mov
call
shll
jge
pop
or
ret
cmp
scas
sti
sti
jb
imul
lods
cs
clc
cmpsb
lods
mov
fsts
mov
cwtl
mov
out
shrl
jle
push
cmc
mov
ss
push
mov
insb
fsubp
loope
jmp
push
adc
push
mov
addr16
fs
pop
mov
clc
shl
scas
daa
repz
int
pop
or
test
jecxz
imul
cltd
ja
mov
insl
sub
movsl
adc
das
ret
daa
xor
or
fmull
push
inc
push
adc
addr16
pop
loopne
pop
in
inc
js
aas
iret
xor
outsb
xchg
push
rolb
pop
dec
lds
out
mov
dec
repz
insb
inc
inc
fs
divl
enter
jge
push
cli
jmp
frstor
pushl
push
mov
mov
adc
out
add
sbb
idivb
xchg
cld
jle
sub
subl
push
pop
pop
shrl
das
cli
push
pop
jmp
sbb
insl
sbb
int
mov
pop
lcall
lock
fmuls
scas
jecxz
and
inc
and
ror
sbb
push
mov
sub
fsubrs
jno
mov
add
movsl
rcrb
movsl
mov
push
add
dec
xor
or
inc
jo
popa
xchg
xchg
mov
rcrb
dec
ljmp
push
movnti
pop
jmp
sahf
xchg
call
sub
mov
loop
jo
movsb
int3
addr16
mov
stc
jl
ss
ficoms
cmp
fcmovu
adc
add
jns
lock
and
dec
or
gs
and
outsb
shl
lcall
mov
cmp
push
rcll
pop
js
in
push
lock
xlat
inc
mov
ljmp
mov
stos
mov
sbb
mov
rol
sbb
sub
adc
ret
int3
test
adc
inc
loop
mov
ja
decb
in
mov
add
scas
sub
stos
shlb
or
imul
xchg
pandn
or
mov
cmpb
xor
mov
gs
pop
xchg
jmp
fwait
es
movsl
int
adc
icebp
mov
in
movb
rol
xor
cmp
or
mov
inc
xchg
mov
int
cmp
test
ljmp
in
daa
movsl
add
mov
ret
sti
cmp
test
cmp
movsb
sahf
mov
jg
fimuls
pop
bound
cmc
push
dec
ss
push
sarl
inc
jp
pop
ja
mov
roll
lods
pusha
out
test
in
lods
outsl
clc
lock
xchg
lea
popf
add
jnp
repz
dec
ret
inc
jmp
push
out
mov
pop
insb
xchg
or
mov
adc
dec
loop
add
dec
inc
mov
jp
mov
mov
arpl
mov
out
push
mov
inc
fstl
in
out
push
sub
ret
push
shl
lods
mov
nop
pop
aaa
ljmp
es
or
gs
lea
lock
mov
lret
js
or
fdivl
xor
jo
loop
push
dec
push
lods
pop
sub
push
add
add
loop
call
cmp
cmp
pop
hlt
pop
cmc
inc
jmp
sti
je
push
movsb
jmp
sti
bound
ja
sbbb
nop
lds
cmp
gs
inc
mov
insl
pop
stos
test
test
add
and
test
push
xchg
pop
enter
adc
inc
sub
lock
fs
push
dec
pop
inc
pusha
les
or
cli
mov
shrl
jns
jno
jnp
mov
lods
stc
cltd
repz
xlat
out
mov
push
xchg
lcall
sbb
insl
and
jno
test
fnsave
aaa
jg
dec
fcoml
lret
sub
cmpsl
imul
sub
jae
imul
jbe
dec
cli
outsb
decb
loope
adc
xchg
dec
ret
xchg
stc
fucomp
ficompl
cltd
mov
inc
cmp
sbb
call
cmp
lods
std
fnstenv
mov
cs
cmpsl
cmpsl
xchg
and
std
inc
or
add
das
jecxz
mov
jo
xor
or
push
jge
cmpsl
ja
sub
insb
push
das
enter
jno
pusha
mov
loope
inc
adc
xchg
adc
mov
add
mov
std
ret
mov
and
cmp
pop
ljmp
add
adc
pop
cmpsb
jge
or
mov
insl
sbb
add
dec
fs
cmpsl
fwait
out
imul
mov
imul
iret
mov
xor
out
sbb
inc
scas
mov
cmp
ja
les
xchg
sub
xor
stos
push
ss
nop
sahf
gs
xor
sub
add
adc
cmp
notb
aaa
nop
jle
call
aaa
mov
mov
fcomi
lods
pop
bnd
jbe
pop
push
fs
pop
xchg
adc
fwait
jmp
add
ja
mov
jl
push
pop
std
dec
test
cmp
fbld
push
jle
mov
inc
inc
push
sub
enter
cmp
out
push
inc
mov
into
gs
mov
lock
insb
push
movsl
cmp
and
xor
jmp
aam
in
iret
or
jae
into
mov
and
push
mov
movl
add
loopne
mov
cmp
and
or
addr16
bound
pop
idivl
mov
orl
jae
mov
imull
cwtl
xchg
cmpsl
adc
cmp
addr16
mov
gs
aaa
xor
imul
and
mov
sub
out
out
cmp
cmp
add
or
sub
out
jbe
dec
sub
pop
mov
outsb
popf
jne
mov
mov
popa
in
dec
lret
add
jecxz
stc
xor
insb
xchg
push
arpl
cltd
insb
sub
lods
xchg
add
iret
daa
jno
and
inc
in
lds
imul
mov
lahf
sub
push
ret
aad
mov
je
ficomps
mov
cmp
xchg
push
xor
scas
fldt
push
andb
lock
imul
loop
push
push
daa
cmpsl
cmp
movsb
mov
mov
test
pop
lea
testb
cltd
cmp
mov
sub
mov
adcb
push
cmc
mov
dec
jno
and
lods
or
int3
or
pushf
enter
insl
jecxz
xor
add
insb
push
xchg
repz
sti
inc
cwtl
cwtl
sti
or
or
jns
scas
push
adc
add
or
jnp
in
mov
add
add
pop
stos
ret
xchg
imulb
into
add
leave
lods
xchg
xorb
nop
mov
sbb
xchg
ret
fwait
movsl
xchg
fwait
dec
gs
mov
mov
xor
push
idivl
arpl
aam
or
nop
out
aas
popf
scas
int3
push
loope,pn
push
mov
xchg
pop
adc
fildl
sub
insl
xchg
or
xchg
bound
add
xchg
push
insb
aam
js
and
imul
in
xor
inc
cli
ficoml
jl
and
pop
add
jae
arpl
xor
dec
push
jns
gs
loop
scas
add
xchg
sbb
mov
leave
mov
stc
test
xchg
jae
out
pop
arpl
xchg
inc
pop
fcomps
dec
inc
pop
loope
lahf
sbb
dec
mov
inc
int
push
loope
pop
xor
sub
fwait
add
loop
jno
packssdw
insb
jne
and
or
xchg
push
imul
pop
loop
dec
cmp
add
cmp
aas
pop
jmp
sub
jo
mov
mov
fstl
mov
push
pop
push
rorl
dec
ljmp
mulb
out
hlt
xchg
lods
or
add
sbb
es
mov
push
lea
xchg
or
and
mov
arpl
popa
lods
in
int3
lret
and
push
shufps
fcmovbe
cld
iret
cmpsb
imul
cs
dec
xlat
je
lods
sbb
push
into
outsb
push
dec
movsl
daa
or
and
mov
test
add
orl
jge
loopne
mov
pop
mov
or
popl
xchg
and
dec
andb
mov
xor
mov
inc
js
addr16
adc
test
xchg
repnz
and
cli
mov
ret
xchg
sbb
fisubs
sub
mov
dec
ja
jmp
xor
sub
popf
sbbl
cmp
jmp
hlt
adc
mov
scas
mov
inc
mov
movsl
jo
cmp
cmpsl
lret
insb
call
inc
stos
mov
jge
mov
test
mov
or
push
push
xorl
add
pop
xor
dec
call
cmp
aam
cmp
inc
mov
mov
daa
push
mov
addb
and
inc
xorl
flds
pop
inc
out
ja
mov
and
xchg
inc
call
jmp
and
push
push
decl
pop
lret
jg
out
xchg
adc
lahf
das
xor
cmp
sbb
xor
dec
jmp
adc
jae,pn
and
jp
aad
lret
push
push
movsb
xchg
insl
fwait
pop
mov
lahf
mov
add
into
insl
cmpsb
mov
and
movsl
rorl
sbb
sub
lds
out
bound
or
in
dec
sub
and
aam
push
push
gs
in
dec
gs
sub
mov
mov
sbb
add
xchg
pop
imul
mov
push
push
out
fdivrl
arpl
cmpl
cli
xor
lret
jne
xor
shlb
dec
test
or
es
jns
pop
hlt
lock
enter
daa
in
fistl
dec
add
outsb
mov
mov
loope
pop
mov
sbb
jns
pop
call
int
loope
mov
inc
stos
or
sahf
lret
addb
jno
or
xchg
repz
cli
adc
sbb
loope
pop
data16
sbb
push
xlat
mov
add
in
das
jae
jbe
push
adc
int3
dec
and
dec
and
popa
stos
mov
mov
xchg
sub
push
leave
bound
leave
sbb
shrl
adc
fldl
xor
pop
inc
stc
dec
add
lds
dec
das
lahf
test
cmp
loope
in
repnz
xor
inc
dec
loopne
cmpsl
rcrl
sahf
or
roll
icebp
js
jle
mov
idivb
cmp
std
xorb
xchg
mov
mov
cmc
ds
sbb
dec
adc
int3
rorl
ljmp
popa
xchg
test
dec
mov
pxor
mov
xor
outsl
rcll
pop
inc
push
gs
outsl
dec
and
push
scas
leave
push
pusha
add
jecxz
adc
js
nop
mov
cmp
call
int
out
cs
mov
cld
lret
movsb
cltd
stc
mov
inc
adc
sub
xor
or
jo
out
xchg
pop
adc
jp
fisttps
mov
dec
push
stc
dec
xchg
mov
ret
or
pop
xchg
adc
lahf
rcrb
xchg
pop
fisubl
xchg
fnsave
mov
sub
test
pushf
jnp
xor
inc
sbb
out
sbb
sbb
dec
mov
adc
cmp
mov
mov
fmuls
roll
xchg
pop
aas
scas
push
aam
sub
lcall
loop
xchg
cmp
popa
fwait
inc
mov
fstps
xchg
rcr
push
or
push
push
and
addr16
test
push
sub
popf
sarl
arpl
arpl
movsl
out
pushf
popa
sbb
fisubl
sbb
in
push
pop
pop
stos
sub
mov
mov
pop
dec
xchg
iret
int
xor
pop
sbb
sbb
lahf
inc
dec
lds
adc
pop
cmp
or
push
mov
int3
mov
cmp
in
dec
adc
lret
sbb
push
clc
sbb
push
iret
mov
nop
mov
mov
shl
dec
dec
inc
out
push
fisttpl
push
sub
dec
cmp
gs
mov
pusha
add
shlb
push
stos
std
outsl
mov
test
lahf
push
fimull
jl
or
ss
xchg
cs
sbb
inc
repnz
jnp
mul
outsb
mov
jns
cmp
fwait
int3
das
or
xor
xchg
mov
mov
mov
cmc
inc
int3
jno
fsubs
iret
push
daa
dec
or
notb
shrb
insl
push
sbbl
das
fwait
cmp
xorb
adc
es
or
stos
test
add
rclb
add
jmp
jno
mov
mov
xchg
xlat
js
lock
adc
imul
lods
imul
cli
mov
repz
stos
pop
cli
pop
pop
int
or
sub
ret
cmp
jne
add
xchg
jle
or
lahf
outsb
jae
jle
push
subl
addl
lret
pop
sbb
or
bnd
pop
mov
pushf
sbb
pushf
sub
out
jb
inc
xchg
mov
insb
ss
lahf
popa
push
loope
orb
dec
mov
mov
ja
mov
or
pop
pop
sub
add
pop
push
mov
sbb
lret
push
xchg
ficomps
jae
mov
lods
lahf
test
outsl
arpl
lcall
shl
ss
add
call
outsb
or
jle
push
clc
and
dec
fnstsw
adc
dec
lcall
inc
sti
gs
bound
mov
jmp
pop
call
mov
nop
int
stos
mov
mov
jecxz
pushf
sub
rol
std
pop
mov
repnz
xchg
lock
cmp
data16
adc
push
and
push
cli
push
popf
test
cmp
mov
xlat
ficoms
and
sub
add
shlb
pop
inc
fs
or
jbe
inc
aam
out
pop
or
test
mov
dec
jl
jp
stc
cwtl
nop
jmp
int
inc
adc
cmp
and
xchg
sub
and
mov
adc
cmp
push
rorb
cltd
subb
dec
dec
sub
xchg
loopne
aas
mov
dec
jl
add
xor
cmc
add
xchg
bound
test
jmp
mov
dec
call
mov
dec
std
enter
and
movsl
lret
pop
add
mov
push
and
xchg
or
lcall
scas
lret
push
out
add
sbb
sbb
mov
dec
sahf
push
out
cmpsl
int
std
insl
mov
pushf
jp
cmp
cmp
sub
ss
roll
adc
bound
pop
mul
movsb
adc
jo
inc
mov
mov
nop
bndstx
and
sbb
js
add
movsl
sbb
dec
sub
lea
add
mov
andl
ja
xor
popa
sbb
jns
add
call
movnti
mov
xchg
xor
push
sub
mov
lret
jb
sbb
iret
or
adcb
test
loope
in
sahf
jne
mov
push
jmp
cmpl
mov
add
cmp
inc
xlat
inc
inc
mov
outsl
jbe
mov
adc
jo
mov
jecxz
movsb
repnz
lock
lret
xchg
push
sahf
cld
pop
xchg
int3
imul
sub
mov
pusha
mov
subl
mov
sbb
jno
dec
inc
mov
push
push
pushf
push
mov
push
sbb
mov
fcoml
mov
mov
dec
xchg
pusha
push
pop
cld
test
add
repz
adc
int
aas
inc
enter
lret
jg
xor
mov
cmp
test
or
adc
test
jb
fcoms
dec
aad
xor
enter
dec
outsb
xchg
inc
inc
js
les
lahf
jbe
testb
push
outsb
les
inc
jo
mov
xchg
add
in
outsl
add
test
and
in
lock
push
or
cmp
cltd
data16
in
in
fnstenv
je
mov
loop
jmp
mov
inc
xchg
xor
lea
pop
leave
shlb
xlat
mov
adc
shl
add
mull
sbb
in
mov
jge
adc
dec
nop
test
aad
adc
dec
cmp
into
hlt
add
fcompl
into
add
nop
or
ds
mov
incb
cmp
mov
into
test
out
out
dec
nop
cmp
cmp
test
sub
cmc
or
mov
mov
lcall
fcompl
aas
mov
dec
mov
sub
xchg
and
cltd
arpl
fstps
dec
sti
rcl
ljmp
jns
subl
loope
and
in
adc
adc
mov
sub
cmp
popa
mov
adc
outsl
mov
ficompl
mov
pop
orl
push
je
mov
movq
mov
std
popa
fmull
cmp
push
std
xsha1
cmpsb
repz
test
fcoms
push
enter
jbe
cltd
sbb
pop
rcll
cmpb
dec
dec
sub
es
mov
cmp
cmp
call
adcb
pusha
ret
out
xchg
iret
pop
std
and
jne
mov
out
cld
push
mov
xchg
cmp
dec
push
fisttpl
cmc
ffree
cmpsb
adc
cmp
xchg
jbe
add
xor
xchg
pushf
sbbl
repz
xchg
addb
fistpll
test
cmp
dec
pop
stc
std
or
push
pop
jmp
mov
inc
je
cld
fprem
sbb
pop
mov
mov
in
xor
mov
pop
mov
imul
cmpsl
stos
daa
push
inc
sub
xor
lods
outsl
jmp
xchg
mov
jg
jnp
inc
sub
push
filds
pop
sti
faddl
inc
cmpsb
sbbb
inc
lcall
pop
int3
imul
mov
aaa
in
pop
cmp
lea
and
ja
pop
push
ret
dec
push
add
lods
loopne
nop
jnp
inc
mov
add
out
jmp
xlat
sbb
adc
sub
cmp
add
xchg
rcrb
std
sbb
jge
xor
pusha
xchg
or
test
sbb
imul
aam
pop
in
jbe
push
pop
or
jl
das
xor
add
loopne
mov
xor
fisubs
aas
adc
xchg
shlb
push
lds
dec
push
mov
outsl
cmp
jno
xor
cmp
mov
iret
stos
xor
push
sahf
xchg
cmp
mov
mull
hlt
jns
xchg
scas
aas
test
scas
xor
and
lods
mov
int3
mov
jecxz
sahf
inc
push
mov
sub
stos
imul
ljmp
xlat
xchg
or
sbb
inc
or
pop
mov
inc
outsl
lret
mov
arpl
pop
pop
in
ret
lcall
lcall
xchg
test
out
cltd
mov
or
sti
add
inc
xor
loope
lods
mov
jg
enter
cltd
mov
pop
push
pop
push
xchg
rolb
push
movsb
loop
std
add
mov
mov
das
in
xchg
inc
mov
push
iret
jne
push
movsb
mov
inc
push
imul
dec
mov
je
sub
jecxz
loope
push
pop
out
and
and
dec
lods
sahf
dec
test
sbb
mov
test
arpl
push
mov
mov
inc
mov
or
insb
imul
data16
aad
xor
sub
call
sbb
out
pop
mov
andb
jbe
mov
mov
jnp
jp
arpl
xor
add
lds
out
xchg
pop
lds
add
gs
fistpl
jnp
xchg
orb
xchg
sub
add
inc
sbb
push
test
shll
repnz
push
add
stc
pop
stos
inc
xchg
mov
mov
push
sub
fwait
push
pop
fcomps
dec
scas
pusha
or
cld
shl
add
nop
daa
or
ds
leave
insb
fdivs
ret
repnz
imul
jb
jmp
fs
cltd
outsb
push
push
mov
pop
out
cmp
ror
sub
and
idivb
enter
in
addb
ret
lods
or
popa
xchg
sahf
push
sbb
pop
jge
loopne
xlat
jg
jecxz
adc
stos
push
loopne
orb
movsb
dec
shlb
pop
mov
les
stc
int
jmp
aam
jp
xchg
jo
enter
imulb
or
pusha
adc
xor
mov
sbb
sub
push
sbb
mov
xchg
not
push
cwtl
adc
aad
mov
inc
nop
and
add
cld
out
ret
xchg
sbb
xor
cmp
pop
or
cs
mov
xor
or
incb
pop
mov
xorl
sub
sub
inc
push
jl
test
popf
shl
and
cmpsl
sub
jo
mov
ss
cmp
fs
and
into
sbb
push
andnps
jns
outsl
stos
sub
repnz
mov
and
xchg
in
out
pop
pushf
add
hlt
sub
test
imul
push
scas
aaa
testl
pop
pop
ljmp
movsl
ja
mov
push
or
adc
je
inc
xchg
lock
add
imul
push
mov
fs
fs
idivl
ja
dec
jecxz
mov
arpl
in
sub
xchg
cmpb
xor
lock
cmp
lea
push
cli
insb
popl
enter
jp
xor
cmp
stos
pop
fcmovb
fsts
ds
jae
or
mov
in
lea
or
inc
push
sarl
lds
aas
fcmovnb
sub
mov
add
push
outsl
insl
lock
and
pop
cwtl
je
pop
cmc
xlat
hlt
arpl
lret
jp
xchg
roll
push
or
popa
push
or
lcall
sahf
loop
inc
jno
mov
ja
imul
adc
jg
cmp
jb
pusha
pop
xchg
int
add
fcmovnb
and
shl
fdivr
lcall
fdivs
mov
xorl
xchg
int
sbbb
clc
mov
add
xor
push
or
loop
jb
mov
jno
sbb
add
scas
pop
cmp
mov
int3
jge
scas
xchg
push
sahf
test
and
insb
aas
jl
xor
sbb
fisttps
lret
ja
outsl
sbb
cmp
and
dec
xor
sub
rclb
cmc
push
adc
leave
jg
ljmp
cs
popa
test
mov
push
sti
sarl
repz
rcl
xchg
sbb
mov
aad
call
push
ja
lods
push
add
dec
movsb
cmp
inc
test
inc
dec
sub
roll
popf
mov
pop
incl
mull
push
cmc
rcl
ds
rcrb
scas
imul
pop
leave
xor
add
add
or
jne
rorl
and
cmp
jns
out
test
mov
and
xor
mov
xor
lea
push
mov
or
fs
pushf
xchg
adc
cltd
jge
hlt
xchg
mov
xchg
lds
push
sbb
hlt
vmread
mov
in
pop
rclb
fisttps
mov
push
adc
pop
cmc
insl
jb
cmp
pop
in
insb
and
out
shlb
arpl
fcmovnbe
inc
lahf
mov
inc
sti
pop
inc
into
push
pop
push
and
stc
mov
inc
pop
dec
jp
sarb
outsl
xchg
mov
mov
aam
decb
sbbl
dec
mov
sbb
test
loope
fldenv
jns
cs
fldl
jno
insb
push
mov
and
xchg
sti
popf
les
ret
and
lret
ljmp
jge
data16
fwait
sub
add
ljmp
punpckhwd
cmc
adc
mov
adc
fmuls
call
testb
mov
clc
lcall
inc
jle
data16
in
subl
cmc
cmp
test
ljmp
xchg
sub
in
imul
bound
xchg
ret
mov
mov
adc
std
test
cmp
test
repnz
pop
outsl
jp
inc
sbb
pushf
cmp
xor
mov
add
xor
hlt
nop
cli
jno
inc
mov
imul
arpl
int3
std
mov
xchg
pop
jnp
push
shll
js
push
int
push
pop
push
and
sbb
rcr
dec
inc
mov
add
test
push
push
movsb
xchg
push
pop
ss
sbb
stos
sahf
jp
add
repnz
popa
insb
mov
int
push
lods
xor
jp
into
inc
insl
aas
js
push
cwtl
mov
rol
cmpsl
push
mov
and
sti
cmp
pop
add
sub
stc
mov
sub
scas
les
sub
addr16
repz
sti
int3
xchg
outsl
jo
div
in
fnstsw
cmp
xor
outsl
jbe
ret
push
nop
leave
imul
clc
lods
inc
mov
pushf
cld
sub
cmp
cmc
xor
je
sarb
shll
xchg
scas
in
sub
and
adc
cwtl
fildl
dec
sti
mov
add
sub
fcmovnbe
lods
call
popf
jb
mov
inc
in
lcall
push
xorl
pop
fisubrs
inc
rcrb
in
loop
mov
or
mov
and
dec
and
mov
sbb
cmp
xchg
test
add
cmpsb
xor
out
sbb
or
ljmp
idivb
insl
sub
jae
fiaddl
adc
stc
sbb
pop
mov
ret
loop
jl
sub
xor
shr
mov
scas
sbb
inc
mov
lret
shll
loop
mov
adc
cmp
cmp
mov
das
out
sub
add
aad
adc
xchg
dec
mov
loope
add
lods
lds
mov
jg
loop
push
inc
inc
scas
push
push
out
adc
stc
xchg
outsl
mov
mulb
clc
movsb
mov
nop
fwait
mov
jae
sarb
enter
div
roll
divb
inc
ljmp
pop
adc
iret
adc
fistpl
pop
repnz
js
mov
je
inc
mov
test
push
arpl
dec
mov
and
cli
lods
sub
fnstsw
rorl
lea
vmulps
fadd
jg
insl
dec
mov
mov
inc
xorl
mov
push
jo
cmp
insb
or
inc
jge
xchg
xchg
mov
push
push
psubusb
test
jmp
and
int3
out
cmp
movsb
dec
in
cltd
sbb
lahf
mov
dec
es
adc
in
test
int3
xor
rcl
dec
dec
aas
mov
adc
shll
xchg
xlat
adc
lret
jb
mov
xor
mov
in
or
cltd
sysenter
or
add
sub
push
cmpsl
jle
rol
dec
pop
xchg
add
mov
fsubl
cwtl
movsl
mov
scas
cmpsl
mov
cs
es
inc
or
mov
sbb
jno
cltd
adc
repnz
jecxz
xchg
mov
jae
xor
sbb
inc
mov
in
push
mov
mov
pop
loop
sbb
mov
and
mov
adc
sbb
in
mov
sbb
dec
or
fsubrl
push
out
xchg
fsub
jl
pop
mov
add
pop
mov
test
aad
nop
insb
mov
xchg
jle
sbb
jp
test
test
sbb
bound
repz
sbbl
and
jecxz
xchg
cmp
cmp
daa
fistpll
or
mov
cmp
repnz
fisubrl
fdivrp
mov
jae
sysexit
xchg
scas
pop
cmp
or
fs
lahf
xor
mov
sub
inc
push
test
aad
mov
mov
dec
je
jne
pushf
testl
push
sbbb
mov
lret
push
or
nop
fwait
out
rep
imulb
push
add
dec
clc
pop
sub
repz
repnz
jmp
jmp
iret
sub
lcall
lahf
xlat
es
pop
ljmp
xchg
jno
xchg
into
lcall
lea
inc
jg
sti
loope
mov
popa
cmpsl
insl
dec
loopne
loope
int
stc
push
dec
xor
inc
mov
xchg
push
div
lahf
orl
push
aaa
sarb
jmp
mov
pusha
imul
sar
cli
lods
movsl
movsl
xor
jge
xchg
xlat
push
cmpsb
dec
mov
add
in
jns
pop
pushf
sub
cld
mov
pop
mov
lcall
aas
fmull
xor
mov
xor
sub
addr16
xor
fcmovb
pop
das
aas
cli
or
mov
or
stos
outsl
xchg
sbb
stos
cmp
jecxz
xchg
mov
xchg
lcall
sub
mov
aas
mov
lods
outsb
outsl
outsb
pusha
inc
ljmp
sub
fcompl
or
stos
and
insl
jl
in
lds
push
dec
jecxz
xchg
inc
ror
addr16
jmp
jnp
or
sub
dec
sbb
lret
xor
bound
sti
pop
mov
cltd
hlt
add
add
jp
pop
cmp
or
and
mov
sub
fldlg2
fdivrs
jo
icebp
push
and
sti
and
adc
inc
jnp
and
jge
and
clc
add
ficoms
xchg
mov
and
or
ljmp
push
loop
and
enter
out
incb
xchg
test
sub
fdiv
fisttpl
jg
or
test
loopne
popl
adc
add
dec
mov
fdivs
pop
aam
cmp
mov
xchg
and
insb
scas
pop
push
mov
inc
cmp
ficoms
push
dec
pop
vmwrite
push
incl
fiadds
and
mov
scas
in
fs
mov
std
and
jecxz
mov
shll
jno
lret
inc
dec
rcrb
icebp
sbb
dec
dec
into
push
mov
out
jge
int3
ret
sbb
push
pop
test
movsb
inc
leave
fmul
pop
inc
pushf
and
or
mov
inc
movsbl
cmp
call
movsb
cmp
jle
imul
les
test
test
in
xor
movsl
push
out
push
negb
shll
sti
scas
sbb
cld
dec
sub
xchg
out
bound
sub
es
jle
scas
imul
cmpsb
bound
push
xchg
pop
subl
scas
xor
cwtl
repz
pop
das
cmp
pushf
sub
xor
add
mov
mov
or
lds
fdivs
push
mov
les
jb
shl
imul
lods
sbb
push
adc
adc
addr16
mov
jns
dec
xchg
mov
in
add
or
sbb
stos
sbb
std
sbb
mov
addr16
mov
or
outsw
divb
cmc
adc
xlat
xor
mov
popa
push
or
push
xchg
and
dec
test
or
adc
fs
data16
test
sbb
and
pop
mov
mov
or
aaa
adc
jb
mov
shll
mov
sbb
and
xlat
jmp
dec
adc
jne
iret
insb
mov
xor
rorb
or
pop
push
cmp
daa
leave
cmp
xlat
or
lahf
dec
test
and
pop
jbe
out
icebp
pop
dec
out
dec
dec
cmp
or
xor
std
popf
lods
jno
mov
xchg
jns
inc
aaa
mov
shll
nop
ret
and
add
adc
fdivl
mov
in
sub
xor
jmp
leave
lods
xchg
mov
dec
lcall
mov
scas
std
mov
sahf
mov
sbb
xor
cmp
push
jnp
cmp
in
mov
inc
pop
fdivrl
xchg
xor
inc
test
jo
jbe
jl
push
dec
or
in
fwait
push
sar
les
mov
rep
clc
mov
sti
xchg
jnp
or
iret
cmpsb
movsl
mov
jge
mov
xchg
js
aad
sub
lds
xor
sub
mov
lods
popf
fmulp
xor
add
sub
mov
rclb
addb
stos
or
ficomps
pusha
xchg
ds
in
scas
pop
movsb
inc
dec
test
pop
add
mov
push
dec
cltd
aad
rolb
and
mov
or
or
cwtl
and
rcll
shll
addl
dec
pop
and
jnp
loopne
and
mov
pop
and
shrl
faddl
mov
sub
jo
xor
icebp
subl
fcmovne
lret
sub
pop
inc
cmp
add
mov
call
sub
ljmp
aam
push
jbe
out
sbb
popa
jo
outsl
sahf
and
call
aaa
pop
xlat
push
call
inc
xor
or
lcall
lgs
push
daa
xor
int
xorb
test
jnp
cwtl
cmp
xor
and
mulb
xchg
or
ret
in
and
add
mov
sbb
xlat
test
into
adc
xor
xchg
pop
mov
inc
cwtl
xorb
popa
int
fdivrl
mov
test
xchg
ss
imul
jge
xchg
push
pop
adc
out
sahf
jmp
fs
scas
push
scas
lods
mov
rclb
push
adc
or
fidivs
mov
sub
ds
push
mov
imul
gs
mov
push
lock
leave
call
sbb
dec
and
sbb
fwait
xor
movsb
sub
mul
lds
cs
lret
hlt
pop
rcl
xor
repnz
xchg
cmp
daa
pop
or
ljmp
lock
mov
mov
movsl
add
push
call
jp
lods
cmp
jp
xor
sub
mov
icebp
xchg
notb
inc
fwait
xor
sbb
push
mov
mov
push
stc
cltd
outsb
xchg
js
pop
lods
jge
mov
mov
stos
mov
int3
cmp
xor
ss
mov
xor
add
mov
ss
movsb
dec
jb
negb
clc
addr16
inc
sarl
push
jmp
ret
pop
mov
scas
aas
arpl
andb
ss
inc
shlb
out
pop
push
mov
pop
sbb
popf
aaa
cmc
loope
outsl
mov
add
sarl
pop
les
jmp
jb
loopew
mov
mov
jnp
in
mov
xchg
xorb
std
pop
jbe
cwtl
pop
lret
jge,pt
jmp
imul
mov
sbb
push
mov
lcall
das
lea
insl
mov
add
push
hlt
enter
stos
bound
mov
incb
xchg
mov
mov
jmp
out
scas
adc
mov
cmp
ljmp
test
mov
jmp
and
mov
insl
xor
adc
lds
xchg
adcl
shlb
sbb
xchg
test
js
xchg
inc
push
in
mov
orl
adc
fsubr
repz
sahf
mov
lock
dec
inc
adc
mov
add
and
mov
cli
sub
ljmp
sarb
mov
cli
sti
nop
inc
into
or
insb
push
sti
leave
jg
adc
add
popa
insb
imul
mov
ret
and
xor
fdivr
shll
push
shlb
loope
mov
mov
sbb
inc
popa
pop
mov
and
ret
add
in
sti
push
jno
lcall
repnz
hlt
dec
mov
xchg
stos
and
sub
aas
push
loope
mov
scas
pop
loopne
shll
mov
jno
pop
mov
sbb
leave
mov
jno
test
mov
frstor
inc
mov
subb
loop
jmp
fidivrl
inc
or
stos
xor
lahf
pop
or
aas
enter
mov
dec
sbb
mov
inc
data16
inc
rorl
dec
mov
add
mov
lcall
xchg
pusha
mov
iret
es
fildll
jg
sbb
dec
add
movsb
push
xlat
fisubrs
xor
mov
jle
fisttpl
mov
out
icebp
add
adc
loop
or
xor
fidivrs
adc
adc
insl
hlt
mov
cmp
lret
jge
fwait
fwait
mov
sbb
cs
and
test
dec
add
and
adc
or
mov
or
int3
out
arpl
pop
jecxz
testb
fists
fnstsw
aas
jmp
or
jp
inc
xor
jle
clc
and
mov
pop
popa
lock
adc
sub
sbb
inc
jnp
jae
mov
cmp
out
mov
xchg
call
and
fwait
lods
xchg
sub
in
adc
pop
adc
push
cmp
loope
lret
test
or
clc
lods
je
in
sub
jnp
popa
mov
dec
mov
out
enter
rclb
sbbb
dec
out
cld
jmp
scas
pop
mov
pushf
push
sbb
or
sbb
mov
push
mov
jle
in
adc
jmp
rcr
jnp
lds
xor
pop
les
xchg
cld
jg
js
notl
xchg
push
xchg
jmp
bound
adc
pop
pop
xchg
cli
fcomps
cld
inc
js
pusha
adc
or
movsl
mov
icebp
sarb
ficoms
frstor
push
pop
jmp
pop
outsb
into
and
iret
in
stc
mov
jge
sbb
jmp
xchg
sbb
fidivs
pusha
jmp
push
fcmovbe
sub
sbb
mov
push
mov
cmp
leavew
int
push
push
cmp
mov
add
pop
cwtl
sbb
xlat
int
pop
lret
push
fcmovne
pop
aad
adc
push
out
jno
cld
pop
out
es
arpl
push
std
mov
loope
or
mov
xor
mov
inc
nop
aam
sub
cmc
loop
dec
add
in
out
aaa
mov
nop
je
das
hlt
in
add
jmp
push
insl
or
add
mov
cmp
sbb
je
popf
pop
xor
mov
jnp
cmp
mov
push
push
cwtl
adcl
cmc
pop
add
lea
adc
dec
out
xor
cmp
fs
pop
ret
fdivrs
cmc
cmp
aad
aas
repz
jge
mov
jg
test
nop
lods
decb
push
test
ficoml
test
daa
sbb
sbb
loop
push
icebp
sbb
pop
lds
fstl
push
mov
xchg
insl
stc
pushf
out
fld
sub
push
sti
jmp
insl
test
mov
and
mov
sub
pop
xchg
dec
das
dec
test
mov
add
ja
sahf
aad
pop
and
mov
data16
push
loope
or
sahf
imul
mov
jmp
stc
cli
rcrb
push
mov
repnz
adc
dec
stos
imul
aam
stos
cmp
nop
es
mov
in
push
loope
add
and
pop
loopne
cmp
hlt
xor
jmp
lahf
pop
imul
mov
inc
jecxz
add
ds
fsubl
movsb
nop
addr16
insl
mov
push
mov
je
lret
adc
pop
push
push
movsl
push
jmp
adc
loop
ljmp
imul
popa
sarl
frstor
push
lahf
xchg
mov
test
lahf
pop
lret
xor
push
pop
mov
cmp
pop
sbb
and
mov
inc
mov
dec
dec
mov
jle
xchg
dec
aam
sub
cltd
cmp
adc
mov
andl
adc
xchg
mov
imul
adc
add
int
xor
xor
push
mov
int
sbb
into
adc
and
pop
aam
ret
pop
and
pop
cmp
sub
xchg
int
push
insl
cltd
jmp
pop
out
lods
mov
ss
jle
mov
sub
pop
test
cmc
clc
sub
dec
aaa
jmp
push
scas
xchg
push
loop
dec
hlt
cmp
push
inc
out
xorb
mov
outsb
into
cmp
mov
push
and
jecxz
loopne
out
subb
fisttpl
mov
stos
aam
push
or
sub
call
xor
repz
pusha
adc
nop
inc
mov
xchg
cld
test
aad
jle
cli
subb
jb
in
xchg
pop
add
inc
iret
ror
shll
fcmove
jae
xchg
aam
dec
nop
inc
sbb
insb
jmp
cmpsl
pusha
mov
mov
push
inc
push
mov
push
fsts
out
in
fldt
lahf
jmp
pop
ds
dec
popa
xor
lock
sub
xor
aaa
scas
scas
imul
out
jnp
xchg
faddp
sub
arpl
inc
outsb
fiaddl
jo
int
jle
movsl
cmp
out
imul
dec
push
pop
push
cwtl
mov
fmull
fildll
add
scas
es
loope
mov
jge
sbb
pop
jl
add
test
mov
mov
add
icebp
ja
pop
add
inc
push
daa
mov
movsb
xchg
dec
ret
not
cmp
mov
xchg
andb
xor
stc
jle
or
jle
stos
out
fwait
cmp
into
sbb
mov
stc
mov
out
cltd
out
pop
pop
scas
sarl
int3
movsl
adc
imul
lret
xlat
push
and
insb
nop
test
and
inc
mov
test
in
lods
lods
xchg
mov
xchg
ljmp
xorl
push
push
push
add
fstpt
jno
shr
dec
lret
xchg
mov
and
fildll
out
popa
push
jnp
daa
mov
cwtl
arpl
xor
jno
popa
jmp
pop
dec
pop
out
jmp
std
sbb
sbb
pusha
pop
or
sbbb
movb
pop
pop
inc
xor
imul
cmpsl
mov
les
dec
orl
xchg
scas
es
out
xchg
adc
mov
cmovl
out
inc
mov
daa
xlat
cmp
and
sbb
or
push
pop
frstor
cmp
lods
sbbb
in
out
and
mov
jnp
jo
pushf
stc
fists
insb
jbe
testl
mov
outsb
loop
pop
push
in
push
out
insb
push
loopne
pushf
fcoms
stos
xchg
lods
outsl
rorb
cmpsl
add
xor
and
jle
lods
pop
mov
pop
mov
mov
inc
mov
enter
arpl
out
add
scas
sub
cmpsb
shl
inc
xlat
js
push
fsubrs
imul
in
fwait
jge
xchg
and
outsl
pop
xchg
pop
dec
mov
push
es
bound
inc
pop
sbb
and
xchg
aam
xchg
aad
clc
add
enter
in
repz
add
je
leave
inc
and
repz
mov
xor
push
shrb
pop
xor
ret
sbb
sahf
dec
jmp
fistpl
jp
pop
sub
mov
cmp
inc
out
aad
movsb
xchg
add
adc
mov
js
decl
nop
roll
mov
fcomip
je
loopne
rcl
add
and
jmp
aaa
sub
and
push
iret
mov
incl
sub
inc
cld
adc
sbb
imul
push
dec
sbb
mov
jg
fwait
xchg
mov
inc
sub
pop
scas
adc
push
mov
test
sub
push
mov
pop
lds
rolw
mov
pop
mov
repz
lahf
jns
sbb
sub
call
push
stos
push
xchg
test
jb
stc
test
mov
inc
dec
test
pusha
add
mov
jbe
pop
popf
aas
mov
jns
push
pop
adc
adc
xchg
int
out
add
adc
notl
or
icebp
mov
ret
in
xchg
fsubrl
cwtl
add
pop
int
pop
sub
call
or
pop
jae
mov
cmp
aaa
push
das
mov
nop
mov
or
sub
lock
mov
mov
shrl
ss
insl
adc
mov
in
sar
adc
loopne
movsl
sub
es
xor
mov
push
xlat
sub
outsb
fiaddl
gs
pop
pushf
enter
in
je
clc
ret
jl
mov
xor
iret
icebp
cmp
in
add
push
inc
dec
sbb
lea
inc
sbb
mov
inc
gs
or
sti
cmp
loop
arpl
dec
pop
pusha
fbld
rclb
jno
jbe
mov
es
lahf
fcmovnbe
adc
and
xchg
xor
fwait
fs
xchg
cltd
adc
inc
and
mov
outsb
add
mov
stos
aas
adc
int3
popa
icebp
repnz
js
dec
mov
jecxz
push
mov
cmp
xchg
cmp
mov
sbb
jns
jne
popl
enter
mov
or
adc
mov
xchg
scas
fucom
incl
jmp
and
lcall
xor
sub
loop
test
adc
mov
popf
pusha
popf
addb
mov
xlat
jl
pop
out
pusha
jbe
shr
loope
xor
adcb
mov
push
cmc
xor
xchg
mov
out
pop
or
xchg
pop
or
les
mov
movsl
xchg
or
and
cmp
mov
mov
sbb
xor
pop
add
xlat
shll
sub
movsb
inc
iret
icebp
xor
cmp
xchg
mov
mov
imull
lock
test
nop
jbe
loope
in
push
jae
out
pop
jbe
sub
push
jmp
jb
int3
iret
add
mov
mov
pop
mov
dec
jecxz
adc
adc
std
push
sti
pop
xchg
loope
add
pop
iret
xchg
adc
cmp
test
cwtl
das
aad
test
sahf
mov
add
jl
subb
mov
xlat
adcb
in
stc
adc
adc
sbb
test
adc
adc
mov
sarl
or
xor
leave
or
pop
ret
mov
scas
gs
or
pop
mov
push
scas
loopne
js
sub
mov
push
jns
cmp
fldt
in
xor
dec
aam
mov
adc
add
inc
int3
add
lret
repnz
gs
lea
ret
jns
dec
lea
int
fcompl
jb
sub
sub
popa
shrl
xchg
cmp
cmp
pop
add
sub
dec
test
out
subb
es
push
mov
lret
test
sub
mov
dec
testb
adc
jmp
jmp
push
mov
jmp
mov
and
push
cs
aas
push
adc
jns
xor
cmpsb
stos
jmp
in
pusha
and
mov
daa
pop
xor
pop
xchg
inc
jmp
stos
cmp
fnstsw
cld
jmp
pop
mov
add
dec
dec
scas
jb
je
int3
in
mov
push
popf
xor
or
xchg
jmp
int
sbb
xlat
dec
test
add
add
test
jns
hlt
sub
int
out
aaa
inc
test
inc
mov
insb
cmp
fbld
jecxz
xor
dec
lea
or
push
push
test
js
jnp
rclb
in
mov
dec
mov
or
dec
jecxz
loope
rol
adc
jmp
fstpl
inc
mov
pop
insl
loope
ss
insl
scas
sub
cli
mov
fnstsw
cmp
ret
add
nop
enter
ret
cmp
cltd
adc
mov
mov
pop
cmp
jp
mov
ss
mov
imul
and
and
aas
nop
dec
mul
aas
pop
mov
mov
mov
sbb
sbb
addr16
and
xchg
imul
or
pop
and
bound
aam
jmp
pand
ja
mov
sub
push
ret
aam
insb
mov
outsl
je
adc
push
sbb
imul
hlt
aaa
cmp
fs
xchg
mov
xor
sbb
pop
in
xchg
dec
daa
rcl
xchg
dec
add
inc
mov
loop
out
jmp
andl
dec
nop
inc
aad
les
test
xchg
icebp
jbe
jno
es
aas
fimuls
cmc
shll
push
jno
ja
mov
mov
fsubr
dec
sti
sahf
add
xchg
pop
jae
mov
cmpsb
lcall
mov
loopne
push
add
and
mov
lret
mov
cmp
cmp
sbbl
gs
sbb
dec
mov
into
jmp
push
movsl
pop
sbb
dec
repnz
test
imulb
jg
jnp
lahf
stc
test
pop
test
stos
scas
push
mov
nop
fisttpl
mov
push
test
ljmp
mull
dec
inc
sbb
cwtl
sbb
in
fcmovu
imul
addl
insb
shlb
sbb
sbb
lds
cmpl
add
ja
shll
add
sub
rcll
cmp
stos
movsl
sbb
or
fildl
lods
jae
negl
das
pop
filds
sbb
push
push
lret
inc
inc
mov
jne
and
call
popf
xchg
mov
stos
jae
js
scas
cmc
aam
out
mov
ljmp
mov
push
shrb
mov
pusha
jp
mov
sub
push
sbb
jecxz
cwtl
or
das
fldt
data16
cmpsb
mov
popf
push
cmp
std
xor
idivb
pop
addb
movsl
addr16
mov
mov
sub
fsubl
out
popf
rcrb
and
pop
jae
push
add
mov
adc
movlps
sarl
movsb
pop
test
shr
mov
add
pop
flds
stos
inc
lret
test
mov
mov
imul
and
bound
lcall
rorl
fldt
insl
cwtl
ret
cmp
in
lcall
jmp
iret
sub
sbb
dec
dec
psubusb
in
pop
pop
pop
stos
dec
mov
stc
lods
and
call
cmp
xchg
dec
dec
cli
enter
into
adc
xor
rcl
mov
das
add
add
or
cltd
clc
int
push
push
push
sub
out
sub
loope
cmp
pop
sbb
and
mov
cld
mov
mov
mov
xchg
ljmp
sub
add
cmp
inc
inc
inc
int
sahf
bound
lea
add
or
inc
jg
test
and
sub
push
add
loope
jbe
iret
mov
pop
fiaddl
dec
sarl
inc
pop
iret
push
movsb
jnp
adc
push
fstpt
pop
jge
push
pop
add
jmp
ja
sub
mov
loope
insl
mov
xlat
push
mov
inc
bound
lahf
movsb
sbb
jp
ljmp
add
fisubs
or
sub
addr16
sahf
mov
int3
call
out
mov
cmp
xchg
adc
leave
pusha
ror
cmp
adc
adc
sbb
push
inc
test
arpl
data16
mov
nop
sbb
outsb
mov
xchg
sub
dec
shlb
dec
xchg
cmp
das
sbb
xchg
lods
mov
cld
dec
lock
sbb
push
push
jnp
sub
lds
dec
aas
xor
in
iret
dec
mov
lret
mov
pop
jmp
xchg
lods
inc
cmp
xor
xchg
cmpb
fistpll
inc
sub
mov
aas
adc
repnz
idivb
mov
aam
clc
lcall
sbb
cmp
xor
sbb
add
mov
shrb
outsl
fcmovnbe
jp
jns
xor
sub
sahf
dec
call
cmpsl
aas
xor
and
sub
lahf
adc
orl
cmpsb
and
mov
mov
and
sbbb
test
ffreep
xor
lcall
cmp
loope
cmp
add
mov
sbbb
jnp
jle
jge
cmp
xchg
xchg
das
jmp
ret
xor
bound
outsl
mov
ss
fldcw
push
test
xor
cs
mov
dec
ljmp
adc
push
lcall
mov
mov
pop
mov
ret
mov
movsl
xor
jmp
push
mov
insb
xchg
add
jbe
jp
out
and
scas
dec
xor
jns
iret
xchg
mov
ss
hlt
xchg
lea
cld
mov
sbb
in
dec
daa
stos
imul
dec
les
sub
xchg
or
adc
sub
xchg
repz
popf
or
and
cs
push
shrl
je
and
gs
mov
cmp
xor
test
xor
and
mov
int
or
aad
sub
xchg
wbinvd
les
mov
inc
mov
xchg
mov
xor
pop
movsl
dec
notb
daa
rorl
in
sub
mov
in
xchg
mov
sub
mov
adc
xchg
das
ja
test
pushf
fnstcw
push
sbb
fneni(8087
ret
ss
inc
scas
jb
or
aam
pop
mul
sarl
xchg
jp
xor
mov
out
ret
js
push
mov
and
insl
shrl
mov
aam
inc
xor
cmp
add
fldenv
jmp
jno
cmp
mov
int
lahf
in
ret
popf
mov
xlat
mov
out
int3
xchg
je
jg
inc
pop
adc
int3
movsb
scas
arpl
cmp
ljmp
cmpl
jle
push
lods
adc
pop
mov
lds
ss
sbbb
sbb
lock
sar
add
loope
lret
adc
cwtl
fimull
divb
test
decl
aam
mov
xchg
xor
lfs
fmull
push
lret
int
fwait
lods
sbb
mov
sahf
push
sub
sbb
lea
outsl
add
dec
pushf
add
push
outsl
icebp
fstpl
adc
ret
sahf
sub
add
imul
jb
pop
mov
nopl
rcll
aam
add
jo
outsb
mov
push
cmc
mov
mov
xor
mov
mov
int
arpl
ljmp
and
popf
sub
in
sbb
dec
sbb
cld
jnp
repz
sub
and
scas
das
mov
in
test
fdivr
icebp
xchg
and
stos
push
les
pop
sub
mov
inc
mov
loope
sbb
xchg
incb
pop
popf
mov
jg
pushf
movsb
adc
or
es
pop
jle
jmp
fdivl
jnp,pt
sbb
dec
repz
xchg
popf
and
shlb
mov
jno
push
test
insl
popa
or
push
mov
xchg
sub
pop
jbe
mov
add
shll
pop
fwait
std
push
xchg
pop
movsb
call
ja
mov
dec
inc
insb
cltd
push
dec
sub
imul
jmp
xor
out
inc
rcrl
push
ja
xor
xor
insb
test
sub
push
lcall
pop
mov
xor
push
push
movb
xor
insb
push
movsl
std
insl
sub
mov
adc
dec
pop
push
nop
xchg
xchg
movsl
ljmp
sti
lea
movsl
sub
je
push
sahf
add
sub
lret
sbb
ret
jno
push
fs
and
mov
push
sahf
sti
fisttps
mov
cmpsb
push
loopne
push
pop
rcr
mov
cmp
int
pusha
sbb
mov
mov
aas
mov
imulb
push
lods
push
xor
push
lahf
add
mov
sbb
fwait
aad
push
xchg
fadd
push
mov
mov
jbe
cld
pop
dec
movsb
xor
call
xchg
pusha
xchg
push
loope
adc
adc
insb
adc
xchg
daa
pop
cwtl
mov
mov
stc
adc
pop
mov
push
jmp
rol
fs
ror
pop
push
gs
push
fdivrl
xor
pushl
and
sbb
cmp
inc
jbe
mov
and
adc
in
add
dec
pop
outsl
in
sbb
test
jne
xchg
call
scas
arpl
mov
mov
mov
fidivl
adc
cmpsb
ret
mov
mov
out
xor
xchg
mov
lret
xor
sub
jle
xorl
mov
or
gs
xlat
mov
jmp
jp
pop
es
or
jne
scas
add
inc
std
xlat
test
nop
push
sti
mov
jmp
fldenv
dec
jle
mov
sub
out
push
jo
xchg
and
push
lahf
pop
jbe
mov
mov
ret
mov
pop
das
push
imul
inc
leave
orb
mov
inc
push
and
push
pop
xchg
jl
xor
ret
jg
cmp
inc
adc
or
adc
add
out
xchg
std
fcoml
and
or
jo
cmp
mov
subl
repnz
mov
inc
in
push
mov
xor
adc
clc
test
cmp
cmc
adc
mov
stos
or
jne
popl
in
mov
aam
sahf
lea
xor
cwtl
cmc
fs
inc
lds
add
in
in
and
mov
ror
sub
fwait
or
add
imul
sub
fcmove
fidivl
aaa
and
mov
xor
inc
mov
jle
ror
xor
push
in
cli
and
aaa
mov
leave
mov
jae
jmp
mov
daa
sbb
lods
mov
mov
cmp
sub
sahf
outsl
loop
lock
jnp
test
jl
out
insb
pop
lock
add
mov
cmp
dec
shll
mov
outsb
out
ss
leave
and
sbb
or
pop
mov
cmp
add
jmp
fnop
jge
popf
fcmovbe
lcallw
enter
outsb
scas
in
loope
fildl
pop
mov
cmp
mov
inc
jmp
out
sahf
cmp
js
xchg
lcall
aad
outsl
test
xor
fidivs
push
inc
orb
or
jecxz
outsb
jb
xchg
xchg
adc
add
repnz
and
and
mov
ljmp
jmp
mov
adcb
dec
mov
fcompl
mov
cmc
test
jae
movsb
rorb
mov
hlt
repnz
jno
int3
sub
push
mov
pop
addb
sbb
jg
mov
cwtl
out
lret
outsl
aad
out
test
ret
insl
pop
lret
arpl
add
cmp
xlat
jl
lea
push
fnclex
out
sbb
fidivrs
cmc
mov
lock
enter
mov
mov
ljmp
neg
cmp
scas
cmp
les
adc
test
out
sub
in
and
test
jnp
insb
xchg
jne
movsb
jl
mov
jl
xchg
sarb
or
xchg
xor
negl
cmp
mov
sbb
sahf
cmpsl
inc
jno
jbe
cmp
push
ret
iret
cmc
in
imul
dec
jo
or
sub
jecxz
subl
shl
stc
xchg
scas
popf
daa
aas
xchg
in
not
sbb
and
push
aaa
enter
insl
sub
call
cmp
push
mov
push
rcr
cmp
and
mov
push
mov
jl
fs
sbb
add
jns
decl
add
notl
push
pop
mov
dec
inc
mov
rol
cmpsl
insb
mov
or
scas
lods
sub
leave
cmp
arpl
jb
and
dec
mov
test
mov
jo
xchg
sbb
xchg
inc
mov
push
sub
push
test
lret
push
mov
xchg
movsb
out
popf
leave
push
jg
fstpl
addr16
adc
dec
hlt
adc
push
mov
jae
dec
mov
lock
pusha
mov
sbb
fbld
mov
sbb
sbb
cltd
pop
push
setbe
mov
sbbl
push
out
test
push
lods
fdivl
or
pop
mov
add
insl
add
lcall
adcl
cmp
int3
mov
jb
test
shrb
insl
popa
leave
fwait
sub
and
push
pop
dec
add
loopne
lahf
mov
ja
arpl
mov
js
xchg
insb
mov
sub
fsubs
adc
pop
adc
pop
sbb
sub
jb
pop
stos
mov
enter
xor
xor
gs
jmp
mov
jnp
xchg
rcll
stos
inc
loope
notb
fwait
dec
xchg
xor
xlat
sub
lret
inc
cld
cltd
sub
push
test
cmp
jo
pop
adc
adc
xor
in
sbb
mov
sub
dec
inc
cmp
nop
pop
mov
pop
mov
fnstenv
pop
dec
cmp
lock
xor
int
mov
lods
sbb
xchg
fnstenv
sbbl
dec
jne
xchg
lds
mov
xchg
jg
mov
xor
add
and
js
scas
not
sbb
daa
faddp
in
loope
xchg
lret
lret
push
call
jecxz
pusha
jae
inc
ret
cwtl
push
dec
loop
push
push
inc
push
gs
push
adc
lcall
jmp
push
mov
inc
inc
pop
push
cmp
js
fidivrl
popa
cmp
insl
orl
jle
push
inc
mov
sbb
adc
pop
stos
insb
jle
add
out
or
rorw
ret
push
sahf
daa
adcb
mov
movsb
movsl
inc
mov
js
fimull
es
sub
or
jge
ljmp
fldcw
daa
mov
test
pushf
enter
test
outsb
popa
and
or
push
mov
sahf
rorl
inc
add
sbb
or
gs
loope
loopne
fwait
mov
scas
xchg
sti
or
icebp
pushf
data16
sbb
lret
repz
xor
cli
arpl
mov
cmp
in
mov
lret
pop
fadd
ret
outsl
or
pop
fcmovbe
pop
lds
push
pop
pop
sub
movsl
inc
jbe
int
inc
sahf
jo
fists
lods
insl
push
and
inc
out
mov
xchg
xor
pop
mov
shlb
outsl
jae
dec
cmp
lea
aad
add
addr16
sbb
xlat
cltd
in
loop
scas
adc
mov
add
mov
and
mov
aam
movsl
jmp
lcall
xor
cmp
mov
cmc
xchg
lea
and
jl
push
clc
xchg
mov
cli
push
mov
or
push
pop
push
aas
arpl
mov
std
repz
aaa
rclb
orl
les
jno
shrb
ja
pop
or
xchg
outsl
cmp
xor
and
push
pushf
adc
imul
add
push
push
mulb
sti
jae
ljmp
jp
loope
jle
jle
aam
lahf
nop
enter
cmpsb
jmp
icebp
inc
jp
inc
lret
out
aaa
xchg
das
xlat
push
cmpsb
cmpsl
push
dec
push
push
test
inc
orb
jo
cwtl
push
es
xor
shll
mov
imul
nop
push
push
imul
lahf
cwtl
rorb
or
push
rcrb
xor
fildll
add
cmp
scas
sub
fstpt
xchg
stos
or
push
cld
adc
nop
cmp
sbb
jo
dec
mov
mov
hlt
loopne
jmp
aaa
mov
xor
aas
iret
inc
ret
sbbl
adc
mov
pop
and
fsubs
push
xor
add
inc
dec
mov
adc
jae
movsl
adc
daa
mov
out
adc
outsl
jl
add
adc
les
leave
out
ret
dec
iretw
sbb
sub
insb
shll
icebp
cmp
mov
xchg
daa
movsb
movsb
fidivrl
ror
or
inc
test
arpl
sub
mov
cmp
loop
jae
xlat
mov
out
hlt
sub
dec
push
or
push
adc
clc
call
imul
xor
xchg
pop
fcoml
jno
dec
push
adc
sbb
movsb
fnsave
pusha
nop
shll
cmp
jb
lea
push
dec
mov
xlat
sbb
jecxz
sbb
stc
movsl
pop
cmpsb
jmp
push
adc
cli
sbb
pop
inc
lods
int3
packuswb
mov
mov
sti
gs
adc
mov
or
xchg
mov
push
and
or
xorl
sbb
fiaddl
cmp
mov
jmp
jnp
mov
jbe
test
push
xchg
das
add
mov
and
jns
cs
sub
mov
pop
enter
mov
pushf
lods
and
xchg
adc
sub
mov
ljmp
inc
fsubrl
popf
jg
or
sti
jle
jmp
xchg
imul
scas
into
ja
por
dec
push
adc
dec
xchg
call
test
fistps
loopne
fs
mov
xchg
arpl
mov
cmp
inc
jp
cmovae
pop
lea
inc
dec
std
ds
jns
mov
dec
sbb
inc
scas
jb
ss
mov
call
pop
xchg
jle
mov
in
mov
mov
mov
add
es
ficoms
jae
jns
adc
repz
sbb
cli
pop
stos
push
mov
aam
es
nop
dec
hlt
jmp
pop
popa
mov
sub
pop
push
dec
movsb
cmp
pop
das
into
sub
jp
wrmsr
test
mov
sbb
push
shlb
mov
jge
int
pop
cmp
mov
pushf
loop
push
dec
repz
push
in
mov
lea
es
pop
pushf
dec
xor
jmp
or
xchg
mov
jnp
mov
pop
xor
inc
inc
test
push
fcom
scas
push
fisttpl
jl
mov
in
mov
in
jmp
outsl
out
insb
xor
roll
aas
jecxz
stos
imul
popa
in
sub
or
lcall
adc
sti
push
lock
imul
ja
or
dec
xchg
jne
pop
ret
push
jmp
or
lods
jbe
ret
scas
int3
jmp
std
out
mov
pop
pop
cmp
call
and
in
mov
out
xor
mov
xchg
cmp
frstor
cmp
mov
jle
inc
jno
cltd
push
cmpsb
lcall
insl
stc
cltd
xchg
pop
cmp
into
lods
pop
jle
jb
test
cs
stos
inc
inc
push
rcrb
push
pop
mov
lcall
sub
add
out
mull
fdivs
aaa
jp
loopne
dec
add
push
inc
cmp
push
cmp
addl
or
or
cmp
shrb
inc
and
jae
sbb
ret
insb
xchg
inc
lods
idivl
mov
lock
adc
jb
jae
nop
mov
sub
jo
and
insb
rolb
lcall
je
sar
js
pop
movsb
xchg
divb
jns
insl
inc
stos
mov
jns
adc
add
outsl
dec
int
and
adc
and
cmpsl
test
fildl
cmpsb
cmp
addl
cmp
movlps
and
mov
pop
sub
jl
mov
mov
les
cltd
mov
mov
push
pop
insb
iret
test
xchg
sbb
cltd
shrb
mov
mov
lahf
fiaddl
mov
sbb
insb
xchg
repz
push
push
jle
fnstsw
xlat
int
mov
sti
lcall
xchg
mov
ss
in
out
and
add
xchg
loope
push
rcrb
stc
add
sbb
lret
les
sti
mov
dec
in
push
push
or
and
mov
mov
into
xchg
cmp
out
sbb
xchg
dec
dec
push
jg
mov
in
inc
clc
sti
xchg
add
mov
rcrl
lock
mov
loop
xor
cld
shlb
das
ss
lret
mov
lods
sbb
mov
cmp
inc
add
add
adc
adc
mov
loope
push
pop
mov
cmc
in
mov
and
adc
push
pop
fdivp
sub
aas
stos
mov
scas
push
mov
test
imul
pop
inc
cmpsb
sbb
adc
mov
bnd
add
mov
inc
fadd
mov
mov
cld
cmp
or
icebp
fidivrl
push
and
stos
les
lea
and
inc
lock
hlt
negl
xchg
adc
scas
lock
in
cwtl
outsl
popf
lea
clc
xor
add
insb
test
lret
das
data16
jle
js
or
pop
je
outsb
dec
jecxz
mov
enter
sub
jle
sub
pop
divl
dec
mov
pop
popf
and
lea
fcmovne
sub
adc
pop
repnz
jae
mov
lods
xor
adc
xlat
lahf
or
ss
pushf
cmp
lahf
aas
mov
mov
dec
adc
sti
test
jo
inc
or
leave
add
push
cmpsb
dec
add
xor
fldcw
push
or
faddl
sbb
mov
sub
test
imul
inc
mov
xor
mov
xchg
scas
mov
and
fdivl
lret
mov
adc
fs
andb
cmp
mov
mov
shll
sub
in
inc
js
mov
jg
inc
push
sub
or
fistpl
push
mov
int
or
sub
push
inc
js
dec
sub
add
push
testb
mov
js
or
ficoml
mov
gs
addr16
jnp
cld
fwait
jns
daa
pop
jno
shlb
mov
sub
int
lret
mov
jg
push
out
xchg
ficoms
fdivs
inc
push
test
mov
mov
xlat
mov
std
inc
mov
pop
xchg
daa
rcrb
jae
or
mov
push
sub
popf
test
or
cmp
fs
daa
dec
in
movsb
jnp
add
and
mov
jp
loope
jo
or
xchg
pop
jecxz
loope
lock
dec
sub
imul
aaa
sarl
or
sbb
mov
xchg
jns
loope
push
sarb
stc
pop
and
dec
stc
ret
xchg
mov
add
add
test
jmp
jne
cld
pop
mov
fisubl
add
sbb
xlat
ret
pop
lock
mov
sub
pushl
out
in
imul
shlb
sub
push
out
sbb
sub
mov
cltd
xchg
in
data16
dec
repnz
pop
out
mov
addr16
xor
out
pop
adc
lds
movsl
sbb
xor
idivl
imul
cmp
aaa
loope
inc
cmc
mov
sub
jl
or
subl
and
push
flds
ja
jns
repz
inc
mov
cmpsb
icebp
enter
xchg
sub
out
call
lods
cmp
fwait
jae
pop
dec
add
and
push
pop
jnp
add
fistps
sbb
jo
aaa
mov
stos
cmpl
ds
cmp
aad
stos
add
hlt
sub
cmpsl
adc
xor
jne
stos
mov
insb
mov
pop
scas
adc
xor
mov
xchg
enter
fprem1
insb
aaa
mov
push
add
loopne
notb
mov
mov
stc
call
mov
and
adc
lods
xchg
int3
dec
insl
lret
imul
adc
cld
mov
rclb
in
xor
xlat
cmp
jne
pop
jns
nop
jmp
xchg
pop
cwtl
mov
repz
and
jo
mov
lods
call
push
mov
pushf
dec
ds
jl
js
adc
jge
loope
ret
aad
add
out
and
ret
pusha
push
mov
sbb
cwtl
mov
jae
lods
jl
das
push
pushl
ja
jge
jo
movsl
enter
jne
mov
jge
cmpsb
cmp
jbe
sub
jp
jp
les
lods
loop
ror
ret
or
jnp
mov
dec
dec
aad
ss
and
cmp
cmp
cmp
icebp
mov
movd
inc
dec
stc
cwtl
lods
ret
decl
and
fimuls
outsl
adc
lock
mov
adc
cwtl
fidivs
and
aam
sbb
sarb
cmc
dec
or
insl
hlt
mov
enter
ds
lret
mov
add
jne
sub
jmp
mov
or
test
mov
cmpsb
inc
ret
ljmp
repnz
cld
in
xor
lahf
in
in
cmpsb
pusha
xor
cmc
sub
test
dec
in
sub
xchg
pop
pop
enter
push
xchg
ja
sub
push
in
xor
arpl
sahf
cli
jg
pop
adc
or
mov
sub
sbb
inc
and
lock
lcall
cmp
test
call
enterw
jnp
mov
hlt
sbb
das
es
pop
test
sbb
or
pop
xor
loopne
xchg
add
stc
inc
fsubl
add
outsb
ss
js
std
loopne
sbb
lcall
rcr
jns
outsl
mov
jae
in
roll
sub
mov
test
mov
ror
movsl
mov
dec
int
mov
sbb
dec
les
sbb
es
dec
mov
pop
mov
jp
mov
inc
pop
mov
pop
xchg
xchg
ds
or
or
cld
int3
or
sbb
push
int3
push
xchg
sti
cwtl
jnp
add
xchg
mov
ret
ficompl
out
adc
fsubp
das
mov
mov
rolb
ss
lret
lea
cltd
sub
jecxz
cmp
ret
push
xchg
sbb
push
lcall
pop
cld
sbb
mov
jle
adc
jae
inc
pop
xchg
sbb
movl
sub
pop
movsb
ficompl
or
cmpsl
out
add
inc
pushf
lahf
into
lds
inc
adc
mov
and
ret
pop
and
nop
out
mov
adc
cwtl
sbb
ds
jmp
pop
jmp
inc
pop
and
push
insl
dec
fildll
adc
out
rcll
jnp
fadd
add
dec
add
push
dec
push
push
daa
imul
ljmp
rcrb
enter
arpl
or
add
sub
cwtl
inc
call
jns
and
sbb
stc
dec
das
test
inc
mov
jns
aam
ret
jae
decb
pop
jnp
sbb
adc
insl
pusha
mov
jl
dec
jl
nop
jge
inc
fwait
in
push
dec
cmpsb
mov
repnz
js
lock
test
xchg
and
adcl
insb
data16
sbb
adc
jl
mov
sti
add
shll
mov
dec
jb
pop
loopne
insl
into
mov
cmp
inc
mov
mov
sbb
dec
xchg
cmpsl
int
sub
mulb
adc
cmp
push
cmp
fld
inc
std
test
rcrl
ret
mov
ret
xchg
adc
ret
xor
divps
adc
rol
add
or
dec
loope
stc
lret
sarl
xchg
idivl
call
push
lds
ror
pop
adc
mov
push
int3
movsb
das
mov
add
jnp
mov
stos
adc
in
mov
cmp
popa
inc
push
aad
inc
xor
mov
je
clc
jno
lret
xor
popf
aaa
xchg
arpl
and
cwtl
mov
jae
xchg
repnz
add
sbbb
sbb
repnz
test
clc
or
and
and
xchg
dec
int3
data16
add
in
dec
sbb
xor
pop
enter
dec
int
in
enter
in
outsl
je
std
test
push
or
lea
ret
mov
js
xchg
sahf
imul
xchg
fxsave
stos
decl
add
test
sbb
lret
fimull
fxtract
mov
and
sbb
daa
jb
ss
sbb
imulb
shll
mov
fildll
dec
or
mov
sub
jle
leave
and
add
add
out
stc
arpl
imul
test
lret
push
sbb
clc
adc
roll
in
lds
ja
mov
scas
mov
adc
mov
dec
sbb
je
aad
filds
and
in
sbb
xchg
cwtl
aas
sbb
aas
fcmove
cmp
int3
movsl
shrb
sub
lret
movsb
or
xor
mov
and
in
dec
ja
les
push
in
test
sbb
lea
mov
xchg
fsts
mov
into
data16
pop
das
je
popf
hlt
ss
mov
cmovns
xor
jmp
or
loopne
test
adc
lods
mov
cli
lahf
loop
push
push
xor
add
sub
mov
jb
jecxz
out
add
int3
daa
inc
std
cmpsl
popf
xchg
or
cmpsb
cli
fcomp
repnz
stos
call
push
movsb
mov
sbb
lahf
movsl
aas
std
push
test
jp
inc
inc
andl
mov
jbe
add
adc
add
dec
std
jecxz
xor
das
ja
sbb
cwtl
shlb
arpl
imul
xchg
sbb
adc
add
sub
and
cli
mov
jne
lock
repnz
imul
and
jg
cld
sub
or
xchg
sbb
push
add
and
fwait
fwait
and
xor
faddl
xor
xor
adc
cs
pop
orl
test
sub
xchg
mov
inc
je
mov
lret
test
sub
gs
mov
inc
stos
cli
fs
and
popf
dec
out
inc
aas
sub
cmp
inc
insb
inc
push
pusha
xorl
xor
inc
pop
push
lods
ja
std
push
clc
fadd
mov
out
sub
jmp
pop
loope
orl
jle
movsl
stos
enter
bound
adc
pminub
daa
xlat
ljmp
mov
mov
iret
pop
or
addl
xor
andb
cmp
inc
sbb
inc
jge
test
jns
imul
stc
mov
stos
iret
pop
dec
shlb
fs
loopne
nop
sahf
pop
sub
pop
scas
xchg
aas
mov
enter
cld
std
lret
lods
je
lret
rolb
pop
jecxz
push
mov
push
in
sub
cmp
pop
dec
cmp
rolb
arpl
stos
dec
jle
push
sub
bound
cmp
jnp
into
dec
rol
fabs
scas
push
rep
xor
adc
adc
sub
cli
sti
push
xorb
cmp
push
fisubrl
inc
lret
mov
dec
jns
cwtl
int
insb
pushf
into
cmp
cltd
xchg
in
shrl
popa
dec
les
cmpsb
dec
lea
jle
in
cs
int
mov
lds
jnp
push
pop
xchg
mov
dec
adc
pushf
ss
inc
cmp
int3
pop
dec
xchg
mov
sarl
mov
cmp
jbe
aas
sti
lods
mov
pop
mov
lret
inc
clc
ss
cmpsb
fcomps
xchg
xor
nop
scas
and
enter
in
mov
push
xchg
rclb
call
adc
arpl
loope
xchg
jns
push
scas
or
inc
sub
fisttps
clc
mov
fadd
mov
xchg
dec
inc
dec
cld
aad
leave
pop
mov
stos
js
or
mov
sbb
xchg
int
sub
arpl
pop
sub
das
imul
test
dec
and
sub
adc
lret
mov
cmp
cmp
ss
ja
dec
div
gs
xor
pop
jbe
addr16
xor
popf
cltd
rcrb
and
push
into
lahf
clc
lods
dec
dec
jmp
ljmp
or
ret
mov
mov
inc
mov
pushf
repz
jle
enter
daa
pop
icebp
scas
xchg
int3
int
jmp
lcall
jmp
lahf
leave
cmp
pop
pushf
cmpsb
push
sbb
dec
adc
sbb
std
dec
mov
sbb
aam
mov
insl
dec
popa
dec
adc
push
push
cmc
aam
mov
out
test
imul
mov
repnz
lock
dec
mov
sbb
dec
leave
inc
addb
ja
pop
jo
popf
popa
cld
sbb
idivl
add
outsl
adc
loope
jne
xor
cmpsb
arpl
out
js
fistl
aaa
jb
or
and
xchg
andb
lods
js
mov
or
negl
pop
mov
int3
aam
add
sbb
inc
dec
cmp
lret
cmp
push
out
int
sbb
xor
inc
xchg
adc
and
jne
inc
shrl
iret
pop
jbe
cmp
jge
dec
jae
mov
or
std
adc
mov
aaa
sbb
pop
mov
lret
jae
jne
xor
lock
push
outsb
sahf
xorl
adc
in
testl
in
cld
enter
jp
in
mov
xor
mov
pop
imul
in
mov
repnz
pusha
out
xor
mov
mov
xchg
js
in
pushf
in
sbb
lcall
movsb
dec
aam
mov
jmp
ret
enter
mov
cmpsl
sub
idivb
xor
xlat
mov
sub
movsl
mov
jmp
in
jle
adc
psllq
in
mov
js
testb
mov
push
out
xchg
lret
out
inc
aam
stc
hlt
out
stos
roll
decl
test
js
popa
popa
aam
outsb
push
orb
xchg
cmp
sbb
pop
add
jmp
mov
jmp
dec
scas
scas
notl
mov
cmp
or
ja
mov
jb
push
and
enter
sbb
dec
lds
out
inc
and
mulb
rcl
mov
mov
cmp
pop
out
cmp
inc
jns
push
add
mov
iret
add
pop
xchg
cmp
jae
mov
mov
sarb
xchg
mov
inc
jnp
roll
mov
call
mov
loopne
lret
xor
dec
in
pop
shlb
xchg
adc
and
out
pop
test
pop
push
jmp
push
outsb
stos
push
or
loopne
test
sbb
add
leave
mov
cmp
cmp
xor
mov
pop
insl
dec
add
dec
fidivrl
add
lret
stos
mov
xchg
outsb
std
xor
outsl
fs
int3
mov
movsb
mov
add
out
jbe
dec
decl
adc
pop
das
dec
int3
add
dec
lds
das
icebp
test
xchg
bound
jg
push
pusha
lods
cmp
fildl
push
lea
add
bound
int3
xchg
movsl
xchg
mov
xchg
lods
jmp
xor
adc
lea
outsb
pushf
and
xchg
repnz
stos
adc
outsl
pusha
repnz
add
les
and
xor
outsb
push
or
lcall
insb
mov
lcall
inc
sahf
jae
sbb
negb
mov
ss
push
test
mov
lods
repnz
or
cmp
jmp
lods
mov
test
ds
push
xchg
in
fistps
stos
fbld
inc
or
cwtl
cmp
pop
rorl
xor
mov
and
mov
dec
divb
xchg
mov
clc
lock
dec
fimull
cmp
cmp
dec
lret
cmpl
pusha
jb
mov
push
shrl
dec
mov
mov
inc
faddl
inc
add
out
stos
clc
fildl
push
xchg
pop
xchg
add
add
dec
fnstcw
mov
pusha
data16
or
jecxz
clc
or
sub
jl
sar
mov
lea
adcb
mov
cld
sbb
mov
imul
mov
int
lock
popf
sbb
push
fldl
fs
aaa
cli
aad
add
and
dec
adc
add
insb
stos
arpl
push
jns
mov
andb
das
test
pop
push
jno
jle
test
in
das
pop
sbb
xlat
cmp
xor
lds
addl
mov
xchg
pop
push
or
mov
sti
pop
nop
imul
lret
add
mov
ja
and
mov
cs
sub
ja
push
cmp
mov
mov
gs
sahf
mov
jae
aam
das
inc
mov
shll
pop
xchg
xor
sub
sbb
inc
jnp
ret
push
mov
pusha
or
jns
pop
and
dec
movsl
adc
adcb
sbb
iret
or
pmaddwd
pop
jae
clc
insb
mov
or
ret
mov
sbb
shl
pop
mov
sub
mov
call
mov
js
inc
mov
push
add
cld
cwtl
ja
movl
loop
popf
mov
xchg
loop
xchg
sbb
js
pop
inc
pop
mov
dec
add
enter
push
adc
sub
xor
pop
mov
push
dec
push
les
aas
cmp
lret
test
dec
jg
jae
sbb
int3
sti
mov
call
sbb
dec
mov
sub
cmp
mov
xor
test
and
mov
add
xor
xchg
mov
cmp
pop
inc
fists
mov
js
fmull
cmpsb
push
xorb
sarb
jno
pop
xor
and
in
fcmove
jecxz
adcl
or
xchg
jmp
nop
out
mov
mov
fstl
cli
outsl
cmp
push
mov
push
mov
aam
mov
inc
pop
js
std
push
stos
icebp
mov
out
cmp
jne
xor
mov
jnp
outsb
push
in
aaa
xor
push
push
xchg
or
add
fisubrl
mov
mov
push
sbb
imul
lock
push
call
enter
mov
jp
xchg
jns
push
mov
fs
push
mov
jnp
sub
arpl
dec
stos
xchg
pop
shrb
lahf
mov
cmc
mov
cmp
mov
or
jbe
bound
or
ficompl
xor
movsb
adc
rorb
ljmp
sbb
xor
mov
add
rcrl
sarb
or
add
add
iret
pop
out
stos
lock
add
fstpl
lods
es
call
aas
xchg
jbe
dec
cmc
push
icebp
xor
fs
das
iret
mov
mov
or
rorb
push
push
sub
jmp
scas
dec
xchg
inc
mov
jbe
daa
clc
xor
out
neg
jbe
push
xlat
outsb
add
add
jge
xor
or
ja
fcmovnb
push
outsb
jbe
add
shll
test
data16
scas
jnp
and
push
or
idiv
out
iret
pop
mov
js
add
into
lods
jmp
mov
lea
mov
imul
ficomps
mov
jae
inc
cmpb
std
xchg
dec
mov
mov
lret
inc
jmp
adc
mov
js
cmpsl
or
and
xchg
jno
rorb
push
push
adc
mov
sbbl
repz
lods
or
pop
pushf
lret
adc
jbe
stos
mov
adc
xor
xor
in
and
mov
or
bound
inc
pop
jae
pmaxsw
push
mov
adc
mov
repz
dec
fsubr
gs
pop
lret
xchg
inc
jecxz
sbb
loope
jnp
pop
insb
pop
aaa
popa
fimuls
inc
lds
fcoml
push
inc
imul
xchg
mov
lret
jge
mov
pusha
je
cmp
rcrb
push
dec
or
inc
cltd
mov
rcrl
pop
lods
pop
sub
mov
push
or
mov
or
in
popw
push
dec
sbb
inc
lcall
fidivrl
and
xchg
fs
das
fisubrl
das
push
jb
loope
mov
mov
cmc
jge
xchg
cmp
divl
dec
in
sub
xor
sub
cwtl
dec
xchg
bound
xchg
into
lods
mov
faddl
jnp
add
fsts
jmp
fisubrl
jb
mov
adc
add
rolb
inc
push
mov
sahf
aas
sbb
xchg
out
ret
mov
mov
clc
push
shl
mov
stc
xchg
xchg
movsb
fldz
mov
or
insl
addr16
mov
stos
jnp
sti
or
inc
lea
cwtl
add
adc
ret
xchg
push
or
scas
fisubrl
sub
fiaddl
into
out
test
aaa
mov
cltd
or
pop
jns
push
outsb
xchg
sub
ds
movsl
lcall
int3
ja
inc
or
arpl
pusha
lahf
test
jno
dec
ret
or
jns
je
int
test
mov
add
push
insb
mov
cmp
imul
add
mov
jmp
xor
mov
enter
mov
xor
sarb
cmpsb
jbe
mov
cs
std
mov
xor
pop
fprem1
push
js
enter
add
sub
cmp
sbb
add
xchg
inc
in
jb
push
pop
movntps
xchg
and
cmp
frstor
insb
lea
push
pop
std
jo
imul
sarl
add
add
jl
leave
stos
xor
mov
mov
lret
mov
lods
cld
data16
data16
fs
clc
adc
cmp
dec
into
test
es
or
movsb
rol
aam
ss
in
test
cs
jbe
adc
mov
lods
mov
jae
cmp
pop
push
negl
loopne
xchg
shll
inc
cli
loope
mov
sub
push
imul
into
jecxz
xor
mov
sub
outsb
aaa
xor
fincstp
and
or
out
sub
lret
test
push
inc
cmpsl
lcall
mov
dec
cwtl
bound
xor
adc
xchg
shll
mov
out
ljmp
leave
push
jmp
sahf
das
push
dec
pop
fistps
xchg
pop
mov
sti
test
mov
aam
test
xchg
popa
into
mov
into
dec
out
test
lahf
sub
jmp
jns
loop
inc
and
push
fldt
push
gs
scas
fprem1
cmp
stc
dec
and
outsb
arpl
icebp
test
jb
pop
adc
add
cmp
sub
pop
insb
loopne
or
leave
addr16
add
in
test
fwait
pop
notl
repnz
xchg
push
ljmp
iret
mov
mov
adcb
shll
fisubs
adc
sti
push
jp
andb
sbb
pop
adc
and
add
sub
push
aas
mov
inc
leave
sub
sub
shl
movsb
adc
or
add
out
pop
dec
test
js
test
sub
popa
cmp
leave
and
pushf
adc
cmc
sub
cs
sub
shlb
das
icebp
jle
and
repz
ret
add
test
xor
scas
pop
int3
or
subb
shlb
add
leave
popa
xchg
inc
out
cmc
inc
loopne
push
aas
xchg
cmp
push
lcall
inc
std
data16
add
or
stos
out
lcall
stc
pushf
xor
divps
push
pop
call
mov
push
jg
and
and
fdivrl
das
sbb
mov
fistps
push
inc
gs
into
xchg
in
movsb
add
sbb
mov
xor
xor
dec
scas
test
pop
pushf
int3
mov
dec
pop
sub
lret
out
fldl
rcrl
test
cmpsb
mov
add
insl
and
sbb
add
rolb
fcmovb
lea
ret
jg
sub
dec
push
jmp
jmp
and
pop
adc
mov
iret
cmc
ror
push
xor
cli
cmc
mov
out
hlt
add
ret
mov
shl
repnz
enter
je
popf
push
cltd
ret
dec
pop
icebp
aas
or
xor
jnp
jnp
sbb
xchg
cmp
nop
mov
and
pop
lods
je
sbb
add
mov
and
popf
dec
call
ja
gs
call
add
sbbl
add
xor
in
or
jbe
scas
movsb
sub
lods
popf
xor
fcmovu
push
fisubs
inc
test
pop
shll
rcll
scas
adc
dec
or
gs
out
fiadds
push
and
and
mov
loopne
dec
or
push
pop
icebp
loopne
xor
das
xchg
scas
fistl
or
inc
mov
je
jge
arpl
orb
mov
mov
es
xlat
repz
cmp
push
inc
ds
pop
mov
jp
in
pushf
jge
mov
mov
push
mov
insb
mov
mov
adc
pusha
xchg
push
add
imul
sbb
dec
dec
incl
inc
stc
xlat
int
lods
cltd
jne
xchg
loop
xchg
jnp
lret
jecxz
inc
add
aas
popa
push
arpl
or
dec
jge
dec
loopne
stos
push
fwait
push
pop
cmc
cmp
imul
mov
xchg
fimull
sti
mov
and
or
mov
xor
cmpsb
adc
inc
icebp
call
jns
jecxz
xchg
and
sarl
mov
jb
xchg
jo
inc
daa
popf
fs
cmc
daa
sbb
dec
mov
push
jge
ss
jae
aaa
lret
pusha
ss
je
add
push
mov
hlt
adc
jbe
pushf
arpl
fld
std
pushaw
add
sbb
js
mov
sarb
lds
outsb
cmc
jnp
cmpsl
outsb
pop
clc
push
push
cltd
js
adc
mov
push
push
cld
or
stc
pop
push
add
xchg
and
lods
gs
lds
sbb
out
popa
mov
dec
pop
sub
cld
movsb
jns
rol
jns
push
mov
stc
push
jnp
jle
and
cli
xchg
xchg
jnp
or
popf
std
fldenv
dec
aaa
xchg
cmpsb
push
in
cmp
int3
sbb
stos
in
and
sbb
aam
es
enter
jmp
in
xchg
sbb
mov
xlat
lds
xor
dec
xor
jnp
push
int
loop
xchg
adc
push
repz
inc
xchg
and
cmpsl
jno
sub
testb
int3
cmp
or
dec
pop
ds
dec
sub
mov
jle
jo
stos
negb
xchg
mov
mov
fldl2t
mov
push
pop
jg,pn
sub
adc
xor
pop
lods
dec
ret
xchg
scas
add
lods
lahf
aaa
loop
lods
dec
dec
insl
mov
movsl
mov
stos
push
sbb
sub
dec
jl
decb
jnp
jmp
lock
jnp
mov
jo
cld
fwait
sahf
and
jno
arpl
inc
and
cwtl
loop
fwait
out
neg
imul
and
fstp
insb
adc
pop
adc
sbb
cld
sbb
push
and
xor
mov
fistps
sub
dec
push
sbb
sub
int
pop
adc
inc
das
imul
fwait
ss
pop
int
adc
jb
imul
addl
adc
adc
test
dec
hlt
ret
sbb
adc
xlat
xchg
movsb
cmp
pop
and
jne
lret
scas
pop
fisubl
push
imul
lahf
pusha
inc
insb
jle
aam
or
fwait
pop
cmpsb
into
cmp
shl
or
push
pop
daa
ficompl
adc
out
lcall
inc
lea
inc
xor
mov
jge
mov
nop
rclb
lret
adc
xor
fisubl
pop
push
xor
outsl
sbb
push
push
adc
leave
mov
fistpll
dec
sub
popf
int
xchg
sub
pop
push
or
push
fstpt
imul
adc
jmp
iret
jg
loopne
cmp
pop
xor
out
mov
rcrb
or
sub
pop
sub
sahf
lods
or
sbb
ret
inc
loopne
jns
test
cmpsl
icebp
xchg
add
loopne
clc
dec
cmpsl
sub
aas
faddl
ret
sbb
sbb
jmp
ret
andb
clc
jne
pop
ss
inc
adc
add
fsubl
das
cmp
je
dec
ss
mov
clc
pop
add
or
cmp
pop
pop
aaa
adc
adcb
leave
push
call
dec
mov
add
shlb
xchg
mov
stc
in
fbld
jle
imul
inc
xchg
push
popf
shrl
adc
add
mov
or
jmp
mov
out
xchg
sbb
add
dec
sbb
ret
dec
insl
sub
std
mov
add
pop
arpl
cwtl
sbb
mov
sub
and
repnz
das
mov
orb
xchg
into
pop
or
ljmp
fsubl
dec
inc
mov
jmp
div
push
dec
push
nop
cmp
mov
mov
mov
testb
push
xlat
jl
jecxz
clc
cmp
enter
pop
lods
adc
vcvtss2si
js
popf
cmp
fstpt
mov
pop
pushf
mov
imul
test
cmp
or
sbb
aam
aad
add
fsts
push
ss
dec
ffree
out
jg
dec
cmpsl
and
aaa
pop
arpl
outsb
popf
pusha
jne
pop
fwait
sbb
mov
jle
xlat
xchg
and
mov
and
insl
adc
lahf
xchg
addl
ljmp
push
push
mov
ret
pop
cmp
adc
lahf
jg
sahf
aam
xchg
in
sub
dec
in
dec
jge
fisttpl
pop
mov
dec
vpsraw
pop
mov
mov
in
cmpsl
inc
cmp
xor
pop
dec
es
idiv
dec
xlat
nop
data16
jb
cli
ficoms
arpl
aam
xor
iret
mov
sbb
xor
jmp
imul
fildl
mov
jmp
mov
hlt
or
mov
add
dec
push
and
fs
xchg
fstp
jmp
cmp
divl
dec
adc
xchg
jb
call
inc
mov
insb
sub
pop
fidivl
dec
in
dec
stos
shlb
mov
xchg
ss
call
cmp
aam
dec
mov
sbb
sub
sub
sbb
xor
addb
sar
aas
fistl
loope
pop
add
clc
jmp
out
mov
push
jnp
cmpsl
push
pop
add
cli
in
xchg
inc
mov
pop
xchg
cmp
xor
mov
xor
sarb
add
int3
pop
cmp
cmc
xchg
lret
pop
lds
dec
icebp
testb
test
cmp
or
ja
out
add
push
xchg
arpl
mov
daa
lret
repz
pop
inc
jb
dec
pop
push
push
sub
cs
and
fdivrl
lea
cmp
pushf
jmp
push
or
push
data16
test
enter
fsubl
cwtl
out
leave
mulb
and
mov
mov
imul
push
lods
pop
push
stc
adc
push
jg
or
cs
cmp
jne
add
xchg
es
mov
mov
sbb
mov
addl
nop
arpl
mov
in
das
mov
pop
inc
test
jp
gs
in
adc
scas
pushf
pop
fwait
pushf
sbb
mov
cltd
int
enter
cmp
dec
lods
lcall
ljmp
orl
ficoml
bound
jbe
and
pop
xor
repnz
xchg
push
mov
sub
adc
and
and
aad
mull
ret
sub
inc
mov
pusha
call
sbb
lahf
jbe
dec
std
or
loop
add
sbb
xor
mov
lods
sbb
sub
cmp
xor
mov
sti
sbb
mov
iret
pop
and
mov
arpl
movzwl
jno
jnp
jg
lock
adc
ljmp
test
xor
jl
leave
jae
test
mov
addr16
out
adc
cmc
das
mov
ds
std
hlt
iret
xlat
movb
ret
js
sub
xorb
aad
loop
jb
outsb
pop
sahf
push
jne
rclb
pop
sbb
int3
and
iret
in
cli
mov
lret
jmp
jbe
pop
inc
push
sub
cmp
and
icebp
jb
fimuls
jne
xchg
jbe
mov
dec
dec
dec
cmpsb
ret
stos
popa
sahf
cmpsl
jg
sub
push
mov
in
pop
jg
mov
shll
inc
scas
mov
dec
les
ret
sub
inc
push
fists
jle
jge
adc
pop
mov
stos
inc
inc
sarl
jne
mov
call
add
daa
stos
dec
data16
xchg
repz
mov
pusha
cli
cmp
bound
in
xor
mov
scas
and
or
je
insb
mov
mov
inc
orl
bound
adc
mov
es
int3
dec
xchg
mov
jg
dec
iret
sub
sbb
dec
stc
repz
in
xchg
add
repnz
fldl
sbb
mov
xchg
push
sbb
gs
push
test
or
and
fdivr
scas
fcmove
jno
jns
cli
shrl
sbb
dec
fidivs
mov
movsb
mov
xlat
ss
test
frstor
imul
push
ljmp
adc
sbb
mov
mov
xor
cmpsl
push
cmp
xlat
jmp
adcl
inc
loope
inc
and
adc
sub
aas
jp
fwait
aam
popa
outsb
nop
or
cld
sbb
repz
dec
xlat
or
or
dec
jo
popa
rcrb
std
es
imul
call
sbb
jne
push
inc
loopne
push
mov
or
into
xor
test
in
andl
aam
mov
pop
cltd
jae
jmp
scas
insb
movsb
mov
dec
mov
mov
test
js
dec
or
sub
push
or
aas
arpl
jge
movsb
inc
mov
pop
gs
dec
addl
xchg
adc
sbb
mov
mov
aam
imul
mov
xor
jle
lods
jns
xor
jmp
movsb
push
and
inc
sahf
dec
adc
xchg
dec
mov
test
dec
sub
scas
inc
dec
sbb
es
xchg
mov
gs
and
mov
and
sbb
jae
mov
and
and
sub
lods
sbbl
outsb
divb
ds
mov
aam
ss
mov
jg
dec
pop
cmc
aas
fwait
sbb
mov
mov
insb
push
rcr
dec
pushf
sarl
loop
loope
sbb
sub
jmp
fisttps
inc
repz
lcall
inc
mov
push
bsf
sbbl
mov
jle
in
lods
aad
mov
add
sti
insl
outsl
xchg
and
pushf
sbb
lods
sahf
xchg
adc
or
sub
sub
mov
es
arpl
inc
cmc
xlat
cmp
push
mov
add
leave
testb
dec
adc
in
jmp
sti
data16
sub
out
int
jg
fldt
in
or
mov
fs
lods
inc
xchg
xchg
insl
and
jle
and
adc
cmp
movsl
movsl
inc
cmpsb
rcrb
mov
pop
lcall
cmpb
pushf
nop
xchg
daa
jecxz
jbe
std
xchg
pmaddwd
in
xchg
fists
pop
jp
test
mov
add
sar
out
pop
int
xchg
jge
or
pop
sub
adc
nop
mov
xchg
aas
cwtl
roll
inc
int
mov
sbb
mov
pop
arpl
dec
xchg
jle
mov
hlt
test
decb
sbb
or
push
shr
fs
andb
icebp
gs
pushf
insb
adc
add
mov
sbb
jnp
inc
mov
stos
das
xorb
popa
mov
sbb
sbb
cld
dec
scas
and
stos
adc
pop
xchg
sarl
addr16
adc
pop
roll
mov
test
xlat
in
loope
ja
fstps
cmp
aas
or
xlat
iret
ss
xchg
ja
aam
int3
mov
inc
lods
fwait
mov
sub
lret
mov
test
inc
push
mov
inc
push
bound
xchg
xor
or
push
cmpsb
nop
jl
rolb
dec
inc
insl
mov
adc
in
outsl
aas
cmpsl
ret
or
into
cmpsb
loopne
into
adc
pop
jbe
aas
lods
xchg
cmp
jge
push
adc
xor
loopne
pop
xchg
pop
sbb
mov
add
ss
sbb
xor
loope
repz
xchg
movsl
adc
addr16
pop
pop
inc
mov
xchg
inc
out
gs
loope
xorb
aaa
cwtl
insl
cwtl
push
or
xchg
shlb
push
imulb
cmp
cmp
xchg
dec
cmp
jae
mov
into
sbb
cmp
aad
pop
rclb
jae
dec
push
scas
mov
mov
test
mov
aas
jge
jnp
pop
lods
lods
loopne
cwtl
fs
lret
sbb
add
aas
jbe
push
loop
mov
sti
out
add
inc
imul
popf
rcrl
lret
add
xchg
out
sub
mov
jnp
insb
cmc
mov
adc
scas
push
mov
jne
mov
mov
popf
push
ret
adc
and
pop
mov
cld
loope
insl
and
repnz
std
repz
sbb
cli
pop
lods
mov
mov
out
dec
add
mov
ja
mull
daa
call
pop
push
adc
and
pusha
mov
fldenv
fdivr
rcll
xor
mov
add
fnstcw
nop
mov
and
mov
scas
xor
fmuls
ret
andl
sub
repnz
lcall
rclb
pop
mov
push
inc
loope
cmp
in
out
insb
inc
scas
das
orl
cmpb
xchg
insl
dec
roll
or
out
xor
lcall
adc
andb
push
mov
pop
inc
inc
sub
or
mov
test
fildl
mov
js
and
outsl
lock
aam
out
jg
add
or
js
mov
dec
add
shll
mov
sbb
jle
xor
mov
cmc
adc
xor
cmp
jp
lret
jbe
test
lock
add
addr16
dec
cltd
xchg
pop
push
xor
ret
jae
jle
push
jb
push
and
leave
lods
dec
xchg
mov
test
fbld
mov
jmp
adc
mov
cmp
pop
mov
sbb
out
nopl
subb
fldt
rolb
loop
rorl
cmp
or
stos
add
in
or
ret
pop
shlb
jge
dec
pushf
sarl
xor
mov
or
inc
test
sahf
out
out
jg
pushf
int
cmpsb
insb
loop
xchg
add
jne
insl
mov
sbb
push
scas
push
fldl
std
and
mov
add
out
loope
push
or
pop
and
ficompl
test
lgs
bound
dec
int
mov
mov
test
sub
sbb
test
cmp
leave
out
inc
jbe
add
divb
cmp
rorb
lock
test
jmp
xchg
xchg
adc
js
mov
xor
lret
sbb
in
scas
imul
sahf
jle
inc
mov
jns
dec
cltd
out
xor
cld
mov
mov
jno
out
cmpsl
roll
sbb
xor
cmp
inc
push
frstor
jno
jp
lahf
or
pop
ficompl
pushf
pop
insl
push
rolb
pop
ja
xchg
mov
outsb
data16
rcr
inc
lahf
lret
xchg
loopne
hlt
cwtl
xlat
repz
jo
or
mov
iret
sbb
push
fnstcw
adc
movsl
nop
add
jmp
orb
add
loopne,pn
ljmp
js
xor
sbb
mov
dec
std
push
add
sub
sti
cmpsb
push
shl
lea
shrb
push
push
pop
ljmp
dec
orb
adc
ja
addr16
sub
pop
xchg
mov
loope
fwait
scas
add
dec
inc
lds
lods
std
dec
out
inc
dec
or
jge
dec
pushf
rcl
mov
outsl
lcall
int
and
fsubl
xor
mov
dec
jbe
pop
pop
push
or
mov
and
rclb
inc
add
les
leave
imulb
repz
sub
popl
arpl
pusha
rclb
inc
insb
pop
fisubrs
mov
mov
cmp
adc
mov
and
inc
jmp
repz
nop
pop
mov
mov
xchg
mov
inc
pop
jb
adc
mov
fldl
add
int
mov
out
jl
inc
jnp
loope
loop
addr16
lret
xchg
inc
cmc
insb
or
in
int3
out
rol
jne
out
popa
fdivrs
rol
sub
cmp
mov
mov
fcmovbe
inc
xchg
sbb
push
mov
stos
sbb
rclb
add
xrelease
ficoml
xchg
int
sti
inc
js
jnp
mov
sbb
mov
test
dec
aad
xchg
push
or
lahf
scas
xor
jne
insb
mov
and
sub
add
fbld
adc
xor
cs
xchg
dec
add
pop
js
add
imul
adcl
std
mov
mov
jne
xchg
push
sub
lahf
xchg
mov
adc
mov
or
fwait
repnz
cmp
fsubl
sub
pop
shrb
out
dec
repz
fwait
jp
push
mov
lcall
xchg
and
add
dec
cld
or
adc
rcr
jg
xchg
movsb
or
dec
cmp
sbbb
rolb
xchg
into
push
pop
ds
outsb
icebp
mov
ret
mov
cmp
jecxz
not
cmp
mov
pop
test
cld
scas
pusha
add
or
add
imul
xor
cmp
push
lds
mov
xor
adc
orl
mov
sbb
sub
bound
jae
add
xchg
lret
mov
arpl
xchg
xchg
cli
into
imul
jns
inc
adc
mov
shrb
jg
les
xchg
adc
add
sbb
mov
ret
and
pop
aas
les
jg
mov
mov
scas
shrb
jmp
mov
shll
xchg
or
into
pushf
cmp
mov
pop
mov
addr16
push
dec
lods
cmpsl
dec
rol
mov
jmp
jae
ds
add
sub
or
jl
fcmovne
in
xor
add
mov
jo
adc
sub
and
loop
mov
cmp
pop
sbb
lcall
std
aaa
xor
jecxz
scas
mov
mov
jge
jae
jge
xor
out
clc
xchg
sub
xor
jns
inc
pop
scas
test
xor
sub
inc
mov
mov
cmp
test
flds
ret
xchg
xchg
icebp
jp
mov
pop
cli
fiadds
movsl
imul
or
loop
jmp
and
inc
pushf
push
sarb
sbb
cmp
xlat
and
cmp
fcomip
dec
push
popa
shl
fdivrs
bound
mov
out
mov
jmp
leave
push
insl
cmp
inc
out
jo
clc
xor
mov
inc
sahf
test
push
mov
fcomps
mov
sbb
mov
in
gs
pop
xor
ret
shll
das
rorl
jge
testl
adcl
arpl
rolb
adc
push
jns
inc
out
jbe
mov
dec
sbb
jl
lods
jb
mov
loope
and
iret
hlt
mov
inc
repz
ja
rorl
inc
fidivrs
xchg
push
out
jle
fisttpll
pop
push
popa
sarb
js
mov
addr16
and
mov
into
aad
movl
pop
xor
repnz
sahf
push
fcom
scas
add
sbb
xchg
sbb
stos
bound
lods
ja
mov
sarl
add
xchg
lds
mov
cmp
mov
sbb
in
fbld
jmp
into
out
es
fdivrl
sub
fdivrl
jo
daa
push
in
lea
xor
cmp
lret
jge
outsl
arpl
movsb
iret
pop
jmp
icebp
sahf
xorb
mov
test
pop
enter
jle
add
cmp
or
cltd
aam
jl
add
or
pmovmskb
cmp
jae
xchg
mov
jl
dec
in
or
or
les
sti
adc
adc
xor
lods
jae
out
sbb
jb
inc
es
jle
fmuls
cltd
cmpsb
fists
sbb
mov
jl
mov
addr16
jbe
xchg
cmp
mov
cmc
sbb
sbb
cmpsl
lds
push
cs
gs
mov
push
ss
loopne
test
sahf
jp
repz
mov
add
das
add
inc
add
push
addr16
cmp
lds
test
orb
adc
js
fnsave
push
or
sbb
popf
mov
lcall
cmp
push
test
fcomps
sbb
test
pop
popa
push
lret
scas
sbb
sub
out
sahf
jp
popf
std
movsl
in
fisubs
cmpsl
das
jno
push
inc
setno
mov
adc
scas
inc
jmp
jl
dec
or
jno
rorb
adc
lss
mov
mov
mov
gs
repz
inc
cld
adc
jns
daa
jecxz
inc
cwtl
inc
rorl
push
xchg
stos
pop
jno
sbb
nop
adc
movsb
pop
or
mov
test
push
pop
negb
sbb
jb
xor
inc
inc
xchg
pop
xor
aam
std
hlt
fs
repnz
notl
push
add
cmpsb
loope
xlat
testb
test
xlat
mov
push
add
cmc
out
inc
scas
xchg
sbb
outsl
movsb
loop
mov
sub
insb
clc
bound
fistpll
ds
addr16
imul
or
movsb
pop
loop
cmpsl
mov
les
sbb
aad
stos
push
add
inc
popf
add
popl
aas
or
pop
mov
xor
mov
aam
cmpsb
arpl
dec
cs
push
push
fldenv
outsl
ret
dec
lods
sub
mov
jno
lea
in
dec
in
mov
and
int3
das
inc
fnstsw
pop
xor
iret
jns
shll
lret
inc
xor
xchg
ret
stos
xchg
mov
cmpsl
mov
jo
mov
lock
dec
pushf
inc
pop
dec
cmp
sub
fwait
leave
test
aas
out
and
or
xchg
sti
aas
push
xor
fistpll
lcall
ss
mov
xchg
and
orl
push
xor
pop
xchg
pop
into
pop
aaa
outsl
mov
pushf
add
adc
lea
nop
sub
mov
in
cmp
insb
out
cmpsl
mov
jb
pusha
mov
test
ss
sahf
lods
fstps
push
shl
adc
shll
ds
inc
adc
xor
aas
aad
movsl
jbe
sbb
mov
jbe
flds
add
fwait
inc
aad
das
jae
push
jmp
dec
jg
mov
subb
mov
mov
mov
cmc
xchg
vmovdqa
sub
shlb
adc
sub
mov
shrb
bound
mov
inc
ljmp
pop
add
dec
cmp
xchg
hlt
push
mov
mov
and
xchg
loop
jo
mov
mov
fcoml
and
sbb
test
push
rorb
ret
mov
lcall
jg
fidivrl
sbb
xlat
xor
pop
orl
rcrl
lret
aam
mov
ss
rorb
adc
andl
ficoms
and
andl
sub
pop
cmp
clc
int3
inc
nop
push
out
jp
dec
int3
cltd
lahf
jp
pop
mov
jecxz
or
not
ficoms
fsub
push
insb
pop
jle
sbb
imul
cltd
shll
sahf
out
add
add
jl
insl
mov
sti
arpl
mov
hlt
dec
or
insl
sbb
mov
fucom
fldt
mov
mov
rcll
loope
add
pusha
lds
mov
dec
add
rorb
sbb
xchg
mov
mov
popa
int
ret
pop
jns
jb
sti
cld
mov
lcall
sbbl
popf
adc
ret
sahf
outsl
scas
adc
daa
push
pop
test
sub
aam
push
sbbl
jle
lea
into
pop
lea
shll
dec
xchg
je
mov
xor
mov
movsl
test
adcb
sub
mov
jp
leave
dec
or
sahf
bound
frstor
lods
fildl
imul
inc
out
lahf
mov
push
les
test
in
push
mov
rclb
or
ret
sbb
cmp
mov
out
in
test
xchg
jbe
into
icebp
add
divl
jnp
cli
aas
and
sarl
mov
or
dec
cmpsb
mov
sbb
rcrb
cltd
aaa
fnstcw
pushf
jne
sbb
stc
lods
adc
test
fs
enter
out
cmp
aaa
imul
add
push
sbb
nop
cmp
je
jg
repz
sub
push
cmpsb
and
out
roll
fmuls
into
sbb
imul
popa
mov
xchg
nop
inc
mov
mov
lret
aas
pop
shrb
imul
aas
gs
or
cmp
push
pop
or
in
aas
enter
sub
inc
mov
pushf
ds
mov
dec
xchg
add
enter
in
push
pop
xor
inc
add
addl
push
outsl
mov
icebp
into
imul
mov
mov
hlt
mov
sbb
xchg
pop
mov
or
daa
iret
mov
adc
dec
mov
sbb
jno
jo
mov
stos
int3
sti
mov
jbe
push
xor
sbb
xchg
subl
pcmpgtb
in
cld
mov
inc
aaa
jnp
ds
xor
ret
addr16
pusha
fisttpl
into
lret
lock
jp
pop
data16
in
cmp
aam
ja
arpl
or
loop
sub
push
out
jo
fisubrs
repz
lods
pop
cld
push
cld
dec
movsb
mov
jne
je
and
mov
mov
std
dec
data16
lods
adc
jmp
inc
mov
inc
sub
xchg
lcall
or
lods
xchg
icebp
inc
mov
cmp
bound
sub
dec
daa
cld
notb
lods
mov
ss
jno
fstpl
loop
jecxz
out
lret
mov
pop
push
incb
mov
daa
in
add
xchg
imul
mov
push
push
je
adc
cmp
xchg
dec
shl
fldcw
int
mov
test
or
and
sbb
addr16
xor
in
stos
dec
mov
lret
pop
lock
stc
ss
sub
add
pop
loope
insl
xchg
pushf
shlb
fimuls
push
pop
fnstsw
iret
xchg
loopne
jp
dec
test
outsb
stos
pop
mov
leave
or
in
call
cmpsl
adc
xchg
mov
cltd
clc
or
or
test
jno
jge
roll
sbb
inc
xor
mov
cld
mov
out
push
and
mov
fists
push
out
adc
lods
cmp
mov
mov
pop
and
mov
movsl
movsb
cli
dec
into
es
mov
mov
lret
rep
and
cmpsl
icebp
lock
pop
iret
sub
mov
xchg
sahf
mov
insl
jmp
rcrl
in
stc
lods
clc
jecxz
xchg
xor
inc
int3
xchg
jecxz
mov
mov
arpl
sbb
movsb
lea
ja
add
cwtl
mov
xchg
shll
lods
jge
push
inc
fyl2xp1
repz
lock
inc
addr16
xchg
add
sbbb
jp
adc
imul
jb
ja
insl
push
or
xchg
mov
shll
xchg
mov
jp
cmpsl
clc
dec
nop
mov
or
pop
dec
sub
out
das
movsl
jmp
out
shll
movsl
cltd
push
add
mov
adc
cld
dec
sbb
mov
xchg
insl
cmpsb
cmp
in
mov
xchg
jbe
or
stos
arpl
outsl
mov
adc
int
sub
scas
jecxz
lock
dec
hlt
mov
push
cmp
scas
push
jmp
mov
rolb
dec
and
and
divl
gs
cmp
std
imul
dec
cli
call
fstpt
dec
sub
and
mov
imul
cmc
mov
lret
inc
pushf
sub
or
dec
push
testb
inc
lods
rol
shr
adc
repz
cwtl
and
jecxz
sub
and
rorb
in
and
mov
inc
xchg
mov
test
mov
push
mov
jmp
xor
push
push
mov
jle
sbb
adc
lods
dec
cmp
pop
aas
pop
lods
xor
mov
jp
dec
std
pop
xlat
ljmp
into
insb
int3
pop
mov
jmp
pop
es
jg
jecxz
sbb
in
sbb
push
fsubs
movsl
or
int
mov
cmp
imul
pushf
xor
repnz
xor
xchg
out
adc
out
icebp
sub
subl
movsb
iret
mov
jmp
inc
scas
sbb
gs
push
enter
rorb
in
mov
mov
cltd
mov
in
bound
mov
rcll
inc
cwtl
push
sbb
push
push
mov
imul
ret
push
loopne
je
fldenv
fnsave
sub
pop
out
pop
adc
add
adc
shll
rcrb
cmpsb
cmp
fstp
or
lock
pop
js
mov
mov
je
mov
sarl
inc
mov
xor
mov
gs
dec
cmp
xlat
lahf
ljmp
xchg
out
pop
xorb
shlb
fistpl
xor
mov
inc
movsl
out
push
das
adc
xor
js
stc
sub
loopne
mov
dec
sbb
js
jo
xchg
jmp
fsts
icebp
adc
mov
and
outsl
jg
push
repnz
addr16
add
aad
xor
imul
lods
jae
jg
mov
cmp
cmp
dec
and
adcl
push
add
int3
mov
gs
test
xchg
dec
add
jbe
out
pusha
cmp
mov
call
int
dec
test
out
lret
imul
jg
adc
pop
xlat
data16
and
iret
setbe
out
push
into
and
pop
iret
cmp
pop
pop
mov
fstpl
test
jo
arpl
fcmove
aam
fisttpl
jnp
add
test
shll
cmp
push
dec
xchg
out
imul
xchg
mov
and
loope
fisttpl
add
das
movsl
mov
push
arpl
dec
pusha
test
add
xor
lahf
aad
mov
daa
mov
mov
rcr
mov
ret
inc
jns
mov
data16
into
shrb
icebp
xchg
xchg
or
popf
pop
pop
aas
or
inc
jne
fwait
cs
jge
xor
mov
push
fimuls
aad
ret
push
dec
cli
out
das
mov
dec
test
lret
or
dec
xchg
pusha
pop
adc
sbb
push
mov
push
add
xlat
add
inc
shll
inc
lcall
mov
cwtl
sub
divl
shrb
push
xor
mov
das
sbb
adc
or
sbb
jmp
cmp
push
aas
in
decb
cltd
dec
in
mov
jnp
ljmp
scas
xorb
orb
outsb
lods
imul
das
add
cmp
sti
mov
xchg
sbb
or
mov
jnp
lock
cmp
dec
mov
sub
sbb
or
clc
or
adc
or
adc
roll
in
cmp
xchg
jo
ret
clc
push
mov
sbb
cmp
sub
fwait
pushf
in
test
lret
push
sub
or
sbb
jb
loope
mov
dec
les
cli
cmpsl
cmc
mov
pop
mov
mov
mov
and
xor
add
lds
mov
xchg
clc
popa
push
test
and
dec
cmc
dec
mov
inc
cmpb
daa
out
mov
es
jne
iret
cld
dec
call
ljmp
jae
or
shl
pop
dec
sbb
outsb
xchg
fisttpl
int
neg
int3
out
cmp
aaa
aaa
repnz
jno
test
push
and
mov
push
aas
test
inc
repnz
dec
or
push
ja
cmc
mov
icebp
es
fbstp
pusha
pop
ss
sbb
pop
pop
bnd
stos
mov
inc
fmuls
mov
jnp
xchg
out
mov
mov
xchg
lcall
mov
xchg
cmpsb
fucomi
dec
out
push
dec
push
add
mov
lock
xor
inc
addb
aaa
push
cltd
xchg
loope
aas
sub
pop
ljmp
or
pop
arpl
jmp
push
rol
dec
jae
mov
jo
push
data16
aad
pushf
xchg
xchg
dec
pop
sbb
jo
sub
stc
xor
xchg
rclb
mov
adc
daa
dec
mov
cmpl
sahf
notl
or
xchg
ds
fdivs
mov
mov
insb
sub
pop
jmp
cmp
cmp
cmp
sub
fisubrs
mov
push
mov
insl
cltd
test
inc
mov
imul
jae
dec
cmp
jmp
imul
lds
cmp
cld
pop
test
data16
fisubrs
cmpsl
push
aas
jns
pop
sub
or
jns
mov
cmp
nop
adc
repz
pop
sbb
push
mov
push
xchg
pop
scas
add
scas
pop
jo
mov
fistps
cmp
sbb
dec
ret
xor
nop
lods
pop
lret
insl
pop
adc
testl
push
in
jg
scas
pop
add
or
add
shlb
jbe
jne
repnz
cmpsl
pop
add
cmp
popf
out
ret
loope
jns
rorl
std
int3
ja
mov
adc
add
jne
lea
jo
pop
push
int
jno
mov
stos
imul
push
or
outsl
mov
pop
in
les
sbb
push
and
or
lahf
ret
xchg
add
push
dec
xlat
sti
sub
jo
add
jecxz
mov
and
mov
push
dec
xor
fmull
int
mov
pop
cs
mov
cmp
dec
shlb
in
push
in
jno
adc
mov
iret
sub
xchg
test
push
bound
ret
cmpb
aam
jp
loope
adc
lock
push
pop
movsb
cmc
push
mov
adc
jns
mov
mov
cmp
adc
test
or
outsb
push
arpl
jnp
shrb
xchg
shrb
mov
push
xor
lea
push
pushf
in
xchg
adc
xlat
mov
xchg
push
out
out
in
adc
sub
imul
add
mov
xchg
rcr
sbb
push
ficoms
ja
inc
add
jecxz
pop
mov
pushf
mov
push
out
outsl
scas
xchg
add
icebp
std
xor
scas
hlt
mov
clc
mov
ss
adc
fucomip
lds
mov
aas
jae
mov
es
fcomps
insl
repnz
jnp
hlt
mov
movsb
mov
cmp
mov
inc
dec
xor
es
mov
xchg
push
and
push
push
out
push
dec
mov
mov
sub
es
dec
cs
mov
mov
sbb
xchg
cmpsl
cli
add
jb
data16
scas
or
adc
pop
dec
inc
mov
and
nop
push
iret
loopne
inc
pop
stc
push
push
pop
pusha
fsubrl
imul
test
jbe
mov
push
xchg
lcall
cmp
popf
std
jmp
xor
push
jae
jb
add
dec
jo
div
dec
clc
jne
cmp
cwtl
rcl
and
xchg
push
sahf
xchg
jns
xchg
mov
mov
aaa
addr16
fistps
por
out
repz
pop
into
xchg
xor
cmp
mov
mov
lods
jns
inc
jge
roll
cmpl
mov
stos
jae
cmp
ds
pop
and
pop
mov
mov
jl
adc
scas
pop
jl
mov
fiaddl
inc
and
pop
xor
mov
pop
adc
jnp
repnz
loopne
rolb
and
pop
nop
xor
mov
leave
dec
dec
enter
adc
scas
jmp
outsb
sbb
jle
loopne
inc
roll
push
outsb
sarl
push
cwtl
out
idivl
xor
je
dec
xor
inc
mov
rcl
rcrl
mov
sarb
ds
cmp
aas
mov
cmp
push
fwait
hlt
cmpsl
sbb
repnz
cs
inc
dec
gs
jo
jb
cmp
jb
mov
cld
out
jnp
adc
jne
jmp
dec
outsl
test
xor
xor
push
jmp
jmp
insl
add
and
adc
or
mov
mov
mov
das
sbb
lret
xor
mov
sbb
out
testb
jbe
or
add
or
xor
sbb
cld
cmp
cmpsl
enter
in
in
inc
xchg
cmp
sbb
xlat
repz
dec
sti
lcall
cmp
rorb
insl
xor
or
jno
sbb
mov
cli
cmpsl
movsb
addl
shrb
lea
fisttpll
jge
orb
mov
outsb
mov
les
cmp
sub
jne
jp
pop
and
lea
mov
enter
arpl
adc
arpl
inc
add
push
ds
pusha
fsubrs
out
cmp
and
jg
cs
jno
pop
add
dec
sub
xor
loop
mov
stc
dec
and
push
dec
push
fcmove
mov
add
lods
out
xchg
xor
ja
pop
inc
xchg
jb
sub
mov
cltd
outsb
lds
sarb
or
in
test
pop
cmp
outsl
or
repz
sub
test
hlt
mov
jae
inc
rorb
mov
jb
aad
movb
pop
mulb
addl
lods
cltd
mov
ljmp
test
cmc
adc
loop
cmc
cmp
fistpll
xor
lods
dec
push
movsl
pushf
inc
mov
ret
xchg
and
xor
arpl
mov
inc
mov
test
imul
loope
lods
push
call
adc
jns,pt
subb
data16
scas
lea
push
sbb
call
xor
xorb
sbb
je
xchg
add
adc
mov
int
mov
sub
push
nop
cs
std
rcrb
dec
jl
in
inc
jae
movsl
dec
in
pushf
xor
mov
js
aad
and
mov
nop
jne
mov
arpl
pop
mov
dec
gs
mulb
inc
inc
mov
jnp
sub
add
daa
imul
xlat
mov
lahf
scas
stc
mov
dec
xor
cmpsl
inc
dec
xchg
fs
cli
inc
push
sahf
data16
or
loope
mov
or
xor
cmpsl
test
lcall
cltd
test
hlt
shlb
lcall
jo
fdivrp
out
subb
mov
mov
out
pop
rol
imul
ljmp
cmpsl
clc
hlt
in
mov
pusha
inc
add
cld
les
jnp
pop
fld
pop
test
sub
add
add
cld
push
fnclex
cmp
pop
inc
or
adc
pop
cld
enter
aad
xchg
adc
sub
mov
movb
loope
rcrb
jmp
jb
dec
xchg
aad
xor
adc
cmp
mov
popa
jnp
inc
push
rorb
lds
or
stos
xor
dec
mov
mov
xchg
aam
bound
mov
or
adc
aad
jae
fiaddl
in
cld
mov
mov
scas
jge
adc
xchg
inc
and
jb
jbe
aas
mov
addl
xor
stos
int
in
xchg
in
pop
or
lcall
cmp
cmp
cmp
xchg
lret
subb
lods
jbe
adc
sbb
xchg
cmpsb
sub
sbb
pop
sbb
dec
hlt
loope
shl
fildl
enter
icebp
add
push
xor
sbbl
aas
js
icebp
cwtl
or
addb
out
lds
pop
insl
mov
jmp
insl
mov
enter
sbb
xchg
in
sbb
sub
push
stos
insb
sbb
ljmp
mov
outsb
inc
ja
mov
push
jmp
ss
xor
add
clc
dec
xchg
out
mov
cmp
arpl
iret
stos
iret
arpl
sbb
cmpsb
sub
es
sbb
rcr
subb
pop
xor
mov
xor
js
adc
push
add
je
arpl
jnp
int
pusha
push
scas
xor
lock
popf
cli
cmp
scas
test
push
ret
out
fdivrp
movsb
loop
lock
adc
xchg
cli
pop
fnstsw
pop
inc
ret
xor
test
cmp
fwait
std
cmp
adc
insl
jno
pop
push
sub
add
xor
or
lods
add
xor
push
mov
stos
sub
pop
sbb
lods
mov
lret
sub
test
sbb
mov
rcll
mov
add
xchg
inc
or
roll
xor
rorb
test
hlt
js
mov
add
push
movsb
movsb
or
dec
and
ja
roll
mov
mov
cmpsb
jmp
insl
lcall
loope
icebp
mov
rolb
dec
icebp
adc
ja
xchg
inc
imul
testb
stos
add
dec
outsb
sbb
dec
jl
daa
movsb
leave
insl
push
pop
inc
mov
xchg
adc
adc
sbb
fsubl
push
jb
fyl2xp1
insl
jp
pushf
shlb
in
xor
cmp
push
insl
sub
dec
ficompl
movsb
jne
or
rolb
cmp
lea
enter
xlat
sbb
sub
jp
push
push
int3
mov
mov
stos
fsubs
dec
inc
je
mov
and
mov
mov
fidivrl
dec
and
test
jg
pop
test
scas
mov
or
dec
sahf
pop
aas
sahf
cld
orl
aam
es
dec
xor
popf
jbe
aas
jns
sub
mov
push
push
test
pop
test
cmp
mov
cmpl
cmp
and
lds
pop
cmp
jns
push
mov
lcall
add
mov
xchg
inc
jp
dec
push
adcb
popa
dec
jmp
or
cpuid
mov
inc
js
mov
imul
xchg
push
mov
int3
mov
sbb
leave
inc
cmp
pop
and
jne
pop
add
inc
out
lea
incb
cmpsb
mov
imul
rorl
cmp
loope
movq
xchg
or
lret
mov
and
in
jp
insb
imul
sub
lahf
sub
cltd
test
adc
xchg
cmp
xchg
mov
xor
je
lods
xchg
pop
mov
push
call
mov
xchg
push
mov
aad
jb
lahf
js
pop
mov
daa
inc
mov
cltd
mov
stos
adc
sbb
dec
clc
movsb
fimull
inc
aas
jb
in
filds
pop
or
repnz
fcom
cmp
jecxz,pt
cltd
jb
jno
cmpsb
push
mov
jecxz
xchg
push
add
mov
ljmp
es
imul
push
jge
mov
in
jno
push
call
sar
inc
inc
push
fwait
sbb
mov
mov
adc
inc
outsl
jns
push
imul
pop
or
xchg
shlb
fldenv
cmp
add
adc
popf
cmpsl
pop
in
pusha
xor
aam
cli
sub
mov
pop
nop
enter
mulb
lret
mov
dec
pop
cli
dec
mov
sub
mov
pop
loop
push
hlt
cltd
popf
mov
mov
outsb
aad
sub
in
cmc
es
rcrl
sbbl
pop
insb
scas
in
inc
bound
fpatan
add
jge
gs
icebp
mov
mov
mov
push
mov
fbstp
xchg
xor
cmp
xlat
push
xchg
rol
fcomps
cmp
ljmp
test
adc
fimull
inc
nop
dec
mov
lock
bound
push
les
xchg
sbb
mov
les
sahf
lcall
or
ss
movsl
mov
xorl
dec
lods
dec
fcmovbe
or
scas
idivl
incb
cwtl
and
cli
int3
and
xor
push
ljmp
mov
adc
ljmp
xor
inc
sub
fsubl
jnp
in
pop
cmpsb
adc
sbb
inc
cmp
je
rclb
fs
push
adc
movsb
or
sahf
and
cmp
cmp
mov
push
cmp
cmpsb
or
popa
fstps
mov
and
adc
notl
addr16
cmpb
call
ja
and
insl
out
std
jae
adc
dec
cmp
sbb
mov
push
cmp
aad
loopne
sti
test
stos
cmp
mov
xchg
dec
jle
pop
imull
mov
xchg
sbb
f2xm1
movsb
adc
pop
in
sub
fiadds
inc
dec
mov
jb
sbb
mov
fistpll
fs
ss
leave
gs
cmp
scas
loope
push
cmpsl
in
add
fldcw
sub
inc
push
sub
rclb
and
push
cmpsl
fldl
mov
dec
xchg
lock
mov
in
adc
xor
dec
mov
ds
pop
ljmp
aad
lds
rorl
mov
enter
pop
out
mov
mov
jl
mov
dec
mov
lock
sbb
or
sbb
fadd
mov
push
outsb
in
pop
pop
jge
xor
mov
lods
fmuls
xchg
pushf
sub
xor
in
or
flds
mov
cmpsb
xchg
push
pop
xor
jp
iret
pop
xor
lea
divl
orb
aam
fwait
sti
inc
mov
enter
jge
inc
jns
mov
jge
mov
sbb
or
xlat
fidivrs
push
xor
cmpb
push
cli
xchg
adcl
mov
xchg
mov
and
in
push
push
cmp
xchg
cs
mov
cwtl
hlt
or
pop
inc
add
aam
mov
stos
int
mov
jae
shl
loopne
pushf
rcr
in
sarb
sbb
cmc
bound
push
sbb
in
sub
test
mov
jnp
rcrb
lods
icebp
pushf
cltd
js
call
inc
or
mov
inc
js
xchg
int3
and
jp
sbb
sbb
das
fisubl
daa
popa
push
push
lcall
repnz
pop
aad
iret
mov
pusha
or
mov
dec
lods
mov
popf
ficompl
iret
fwait
sbb
std
cmp
jmp
cltd
or
mov
jnp
pop
cmp
loopne
gs
xchg
out
add
adcb
lcall
inc
jecxz
lret
addr16
jbe
jb
enter
adc
dec
les
test
pop
imul
sahf
xchg
cmp
or
sbbl
mov
outsl
jl
fs
mov
and
add
outsl
fstpt
xchg
das
dec
jno
fcomps
lds
sbb
fcmovu
sti
mov
jo
iret
cmc
or
inc
push
ret
ss
add
aad
in
sub
dec
out
mov
aam
or
push
int
mov
mov
jno
xor
or
xchg
dec
xor
cmp
cltd
repz
pop
psubq
cmp
in
jge
sahf
or
and
lahf
call
int
mov
and
daa
fdivr
pop
push
loopne
push
push
fs
inc
divb
daa
jno
mov
mov
scas
push
jne
mov
pop
scas
aas
xor
lcall
mov
pop
cltd
call
adc
xor
repnz
cmp
push
loopne
cmc
scas
sbb
inc
push
cmc
pop
or
hlt
test
lcall
cmp
aas
fcmovne
adc
push
scas
pop
or
mov
int
pop
ss
cmpb
les
sti
leave
and
add
xor
divl
leave
adc
jne
aas
push
sbb
xchg
jae
sbb
ret
adc
jo
outsb
lret
roll
repz
jno
sbb
fwait
inc
loop
clc
loopne
lahf
sub
movsb
testb
shll
xchg
mulb
or
movsl
push
out
sub
xchg
sarb
insb
lret
inc
lahf
mov
lea
imul
jl
adc
adc
stc
adc
sub
jb
lods
push
out
out
mov
je
aam
inc
andl
insl
xor
shlb
jnp
das
xor
and
pop
sbb
cld
push
aad
popf
or
iret
lds
test
and
push
or
or
in
push
into
or
cmp
or
repnz
loopne
lea
mov
mov
inc
dec
xor
mov
adc
dec
and
push
cmp
adc
outsl
jmp
pop
movsl
adc
aad
pop
pop
inc
mov
insb
sarb
add
and
sbb
inc
jle
dec
adc
test
dec
mov
cmpsb
dec
inc
jle
sub
in
xchg
popa
mov
mov
pop
mov
js
sbb
les
xchg
rclb
mov
repz
xor
leave
dec
pop
cmp
nop
sub
cmp
mov
loopne
lods
enter
cmp
in
cmpb
or
jae
lock
leave
fpatan
jne
fidivl
adc
jl
xchg
add
inc
adc
dec
in
lock
fs
stos
xor
nop
mov
in
je
jno
adc
mov
movb
sahf
int3
sub
mov
cmp
and
clc
push
in
xlat
add
pop
incl
les
xchg
test
mov
adc
push
in
cltd
in
xchg
xlat
int3
dec
insl
push
lods
imul
cmp
xchg
dec
add
xchg
imul
cmp
inc
jne
cmc
cmp
xchg
mov
mov
arpl
sti
dec
adc
nop
repnz
stc
or
fistl
inc
gs
or
sbbl
sbbb
sub
adc
push
sbb
adc
sbb
mov
and
cmp
outsl
shl
enter
xchg
push
dec
jmp
or
inc
dec
fimuls
cld
jne
and
sub
cmp
movsb
add
mov
lock
stos
mov
ret
lret
jne
inc
popf
movsl
lods
xlat
and
push
add
rcrb
xchg
xchg
in
push
aam
dec
mov
mov
shlb
shlb
jle
xor
dec
loopne
dec
mov
insl
out
mov
push
stos
jge
mov
inc
mov
mov
data16
call
sarl
cli
xor
js
or
cmc
or
push
pusha
ja
loopne
cmpsb
adc
fnstsw
sbb
pop
mov
cmp
mov
mov
dec
ret
rcll
mov
sub
adc
mov
stos
xchg
add
popf
stos
loop
in
mov
out
sarl
adc
gs
and
ljmp
jo
fwait
imul
je
push
es
out
bound
add
or
jl
ret
inc
and
fimuls
sbb
das
push
lahf
push
push
push
cmp
out
xor
xlat
ds
aas
pop
xor
stos
adc
pop
shrb
mov
das
sub
loop
adc
xchg
fcoml
dec
xchg
icebp
push
repz
cmp
xchg
scas
hlt
mov
test
dec
xchg
mov
repz
cmp
push
mov
fwait
aam
and
pop
dec
xor
rcrl
aam
div
int3
jp
inc
out
jae
adc
adc
adc
fldl
or
xchg
cmpsl
lea
orps
add
clc
push
push
mov
inc
bnd
jo
cltd
ja
inc
xchg
sbb
mov
imul
lock
xchg
lds
dec
popa
and
repz
mov
das
imul
cmp
jmp
imul
rclb
in
mov
adcb
pop
hlt
gs
sti
push
or
out
cld
inc
mov
pop
sti
inc
test
adc
xchg
je
xor
stc
loopne
mov
bound
sub
mov
xor
ds
push
sub
lret
mov
imul
sub
outsb
jmp
arpl
xchg
pop
std
and
jecxz
mov
dec
jle
or
fidivrl
inc
xchg
sbb
addr16
add
lcall
ss
or
jge
jb
fs
sbb
movsl
addr16
cld
cmp
fcomps
jnp
and
xchg
sbb
aam
inc
sub
idivl
sbb
push
mov
aad
iret
outsb
xor
les
test
inc
inc
jg
notb
dec
enter
fadd
ficoms
mov
inc
cmp
loop
mov
xor
cld
test
stos
push
sbb
movsl
mov
movsb
cmp
mov
repz
pop
loopne
addr16
dec
dec
cmp
imul
push
loopne
sbb
out
add
insb
xor
add
xchg
ss
mov
cmp
jnp
inc
pop
and
jb
sbb
hlt
scas
clc
arpl
mov
mov
xor
mov
aaa
sub
mov
test
in
inc
lea
ja
pop
sub
dec
orl
call
fmuls
jns
sbb
iret
les
lahf
out
pop
dec
mov
je
pop
imul
mov
out
xor
pop
mov
and
mov
loope
sbb
loop
dec
mov
inc
pop
xchg
push
pop
cmpsl
jno
push
or
add
xlat
ljmp
lods
scas
and
std
cmp
out
inc
sbb
mov
lods
pop
fcoms
icebp
xor
cmp
mov
jecxz
clc
in
or
popa
icebp
sub
cmp
mov
cld
push
mov
inc
aam
xor
and
adc
add
lcall
pop
xchg
inc
idiv
mov
push
dec
jp
loop
adc
lret
loope
loopne
lods
adc
pop
shl
jns
dec
jae
pop
jns
lods
movsb
jge
mov
jns
fs
dec
addl
sbb
and
test
mov
push
aas
inc
nop
jns
arpl
mov
sub
inc
add
and
mov
xor
pop
stos
mov
push
in
push
push
addl
out
lcall
sarb
out
je
sbb
outsl
jno
mov
movups
sti
dec
test
pop
repz
sub
mov
popf
roll
mov
lahf
loop
stos
mov
cld
adc
and
xor
dec
push
mov
dec
sub
mov
ljmp
inc
jle
pushw
loopne
stc
mov
mov
cmp
fcmovb
mov
into
xor
ret
add
ficoml
clc
gs
aaa
loop
lock
addr16
sbb
mov
sub
xor
and
inc
jecxz
dec
jmp
add
popf
loopne
and
xchg
nop
push
je
lods
pop
js
xchg
in
adc
and
lahf
adc
int
out
xchg
add
test
sub
and
rcl
xchg
loopne
sbb
test
and
scas
and
popf
test
cmp
pop
inc
lds
sbb
add
mov
add
sbb
scas
lock
or
lea
imul
push
subb
sbb
lahf
aaa
fnstsw
gs
adc
push
xor
pop
xor
dec
xor
xor
xor
add
dec
mov
sbb
pop
jo
fdivrs
push
jae
psllw
mov
mov
mov
or
cmp
cmp
push
mov
outsl
inc
pop
test
xchg
hlt
outsl
push
fisubs
imul
sahf
xor
fadd
sub
lock
shll
lcall
mov
shrb
hlt
jbe
lret
imul
pusha
adc
lods
mov
mov
into
push
jmp
pop
int
lahf
sbb
outsl
sub
movsb
ds
cmpsb
and
lcall
cmp
inc
mov
lcall
cmpb
and
xor
test
out
push
pop
pop
iret
loope
add
or
sub
pop
sbb
inc
out
ss
in
or
mov
jl
divl
loop
cltd
push
jne
leave
add
lret
and
pop
fstpl
data16
loopne
aam
mov
push
mov
ja
pop
stos
ret
fidivrl
imul
fs
aad
scas
xor
xchg
jmp
sub
sarb
sub
adc
mov
push
xchg
out
mov
shrl
fldcw
ud2
aaa
cmp
xchg
rcll
adc
jbe
sub
lret
enter
sbb
enter
mov
test
pop
adc
mov
adc
mov
and
sbb
repz
pop
sahf
pushf
rcll
mov
stc
push
bnd
push
adc
loop
and
mov
shlb
cltd
cmp
aad
inc
xchg
movsb
test
mov
xchg
pop
and
into
loop
negb
pop
cmp
adc
sbb
mov
lcall
ss
push
loop
adc
test
cmp
jle
stos
ja
sub
jg
mov
fdiv
daa
or
hlt
call
lret
mov
pop
push
stos
pushf
cmp
repz
lcall
xchg
mov
sbb
push
sti
sub
sbb
gs
in
sub
mull
js
xchg
cmp
outsb
push
mov
or
into
cmp
pop
mov
aam
sti
push
push
sub
rcrl
sarb
push
int
or
xlat
pop
mov
jecxz
or
sarb
imulb
dec
jae
cmp
inc
mov
add
jb
sub
mov
cwtl
mov
mov
test
test
mov
jns
xor
les
or
shlb
scas
and
mov
mov
jnp
jb
sub
fldcw
cld
cmpsb
in
int3
sub
and
mov
sub
cmp
xor
xchg
dec
xchg
flds
push
and
sub
pushl
ljmp
sbb
pop
push
lcall
iret
stos
rcrb
fs
xchg
push
das
in
xor
cltd
repnz
and
in
mov
push
and
mov
xchg
jecxz
sbb
adc
stc
repnz
lahf
shl
or
pop
or
mov
imul
movsl
jmp
adc
push
dec
pop
jmp
xorb
gs
sbb
mov
jne
loopne
mov
add
test
mov
out
jg
stos
pop
adcl
cmpsl
push
leave
pop
cmp
stc
lods
push
push
xchg
rolb
icebp
xlat
ja
mov
fistpll
xchg
or
pop
mov
xchg
push
push
pushf
sbb
sub
scas
sahf
inc
xchg
or
insl
mov
sub
cmp
je
int3
sbb
adc
pop
adc
test
pop
push
in
and
into
sbb
pushf
call
push
or
outsl
inc
movsl
push
pop
arpl
lods
test
cmp
out
xchg
loopne
or
cmp
push
push
int
jbe
ja
insl
xchg
mov
repnz
add
scas
xchg
jge
gs
push
repz
insl
add
mov
lcall
stc
sbb
out
pop
je
xor
lret
dec
lods
clc
xchg
add
push
arpl
xchg
jnp
les
sbb
aam
push
ja
rol
xchg
or
orb
js
mov
lahf
fnstsw
movsb
gs
cmc
cmp
and
and
mov
aas
lock
jnp
add
jnp
test
lcall
in
mov
sbb
push
jns
cmp
ja
dec
mov
fisttpll
dec
enter
sub
mov
lock
int
adc
in
daa
icebp
inc
test
dec
das
pushf
scas
lret
xor
push
push
jmp
pushf
mov
adc
sbbl
pop
int
lahf
mov
lret
jo
out
pop
rcrl
dec
push
push
jne
addr16
jae
fcomi
mov
jne
cmp
arpl
lds
pop
rcrb
cmp
addb
or
xchg
repz
js
push
les
mov
fs
pusha
sarb
lahf
cli
adc
addr16
adc
sar
mov
mov
dec
in
ja
ficompl
mov
cmp
cmpsb
lcall
pop
sub
xchg
xor
jp
lret
xor
hlt
rolb
xchg
cwtl
popa
sub
rdpmc
lods
mov
cli
movsb
icebp
mov
dec
movsl
jno
inc
mov
mov
mov
js
sbb
inc
insl
xor
std
imul
pop
inc
pop
rclb
fisttpl
cmp
adc
std
cmpsb
mov
int3
mov
inc
push
insl
push
repnz
ja
sbb
push
or
mov
and
loope
sbb
cmp
pxor
loop
popf
and
push
call
lea
in
lods
imul
in
sub
pop
arpl
fwait
or
rol
popf
lahf
loope
adc
test
aas
ss
xchg
inc
push
data16
das
idivb
add
lcall
test
pop
repz
pusha
xchg
push
iret
jbe
xchg
mov
data16
mov
mov
push
xor
or
ss
test
loope
aas
dec
gs
sbb
sub
in
mov
scas
sbb
test
lds
sub
mov
ret
mov
inc
jne
aas
subl
sbb
aad
gs
andl
loope
repz
cld
out
js
mov
sbb
pop
xchg
cld
and
xor
into
es
out
ljmp
fwait
mov
cmp
and
call
sub
in
cs
xor
test
sahf
and
cmp
mov
movsl
inc
xchg
loopne
fs
sbb
mov
outsl
and
mov
subl
je
call
cmp
mov
insb
movsb
push
jmp
fwait
mov
movsb
sub
dec
xchg
xchg
in
ljmp
mov
and
clc
roll
cmpsl
mov
cld
fwait
sbb
inc
jb
pusha
test
push
fcoml
sub
jge
xchg
mov
mov
fldt
adc
push
fstpt
repz
add
mov
and
jb
test
dec
pop
sbb
fidivrl
mov
xchg
hlt
sbb
add
xchg
mov
aam
lret
movsb
lcall
cmovno
mov
cmp
fmull
mov
jecxz
add
add
insb
mov
fldl
cs
add
jle
out
es
stos
mov
mov
and
sub
mov
inc
incl
and
mov
mov
add
dec
xchg
ret
mov
jmp
adc
scas
push
jbe
jp
call
aam
jae
sub
fcmovne
gs
dec
popa
dec
or
add
mov
fstpt
cwtl
push
rcr
cli
scas
sti
hlt
sbb
leave
int3
sti
add
add
and
jns
mov
dec
cmpsl
ficoml
fldenv
inc
mov
hlt
andl
jo
sti
inc
xchg
fcompl
jnp
xchg
fsubp
push
sbb
shlb
clc
mov
push
xorb
push
loop
add
lahf
inc
sbb
jno
inc
into
sbb
jmp
rorl
repz
test
xchg
out
sbb
pusha
xor
push
mov
hlt
dec
movsb
data16
pushf
sbb
sub
inc
ss
inc
adc
push
rcrl
xor
and
pop
pop
test
and
in
sarb
inc
inc
pop
mov
fbstp
mov
out
mov
and
adcb
es
dec
divl
ss
cmp
in
add
mov
mov
sbb
push
jp
mov
into
sbb
ret
jmp
xor
sub
lret
jge
xchg
test
out
mov
cmp
mov
xor
loopne
scas
sarb
js
xorl
imul
xor
or
mov
xor
imul
xchg
sub
xchg
adc
or
jbe
test
mov
sbb
std
mov
adc
add
pop
outsl
imul
push
and
push
rclb
push
das
or
pop
pop
int
and
je
gs
cmpl
xchg
fisttpll
lods
lods
pop
ret
popa
mov
fisubs
add
cld
int
dec
cmp
fs
or
mov
mov
push
xorb
mov
pop
out
loope
mov
test
and
out
jne
icebp
aaa
dec
mov
jle
inc
shrl
scas
imul
mov
loope
adc
out
jge
adc
test
adc
jae
test
cmp
jo
push
cltd
jns
test
inc
test
ljmp
rorb
and
cld
push
clc
imul
mov
cmp
or
popf
push
popl
push
mov
dec
rcr
notb
mov
mov
mov
push
std
mov
stos
xlat
fisttpll
fwait
jo
loopne
movsl
cld
pop
fcomps
mov
or
inc
add
jl
leave
clc
sbb
and
sbb
inc
icebp
ret
cmp
mov
mov
arpl
push
gs
clc
or
aas
push
jp
fnstsw
push
imul
loopne
shlb
add
lret
divl
js
mov
jge
popa
pop
sub
in
icebp
add
sub
cmpsb
ds
loope
adc
js
sub
jge
lock
jl
inc
fiadds
aam
mov
xor
xchg
andb
loop
mov
dec
clc
ret
imul
or
lahf
rcll
lds
cld
add
arpl
mov
pop
outsl
in
cltd
iret
imul
out
das
cs
mov
lret
inc
cmp
out
xchg
cmp
pop
lret
push
in
imul
mov
mov
lcall
add
in
andb
lock
ljmp
in
iret
mov
add
fmull
inc
hlt
xchg
cltd
mov
ret
sbb
subb
inc
inc
es
dec
fs
jns
mov
outsb
ret
sbb
pop
xchg
jne
adc
inc
js
stc
mov
jbe
sbb
sbb
fisttps
add
cwtl
jb
xor
add
add
addr16
or
pop
add
xchg
pop
or
shlb
mov
int
shll
cltd
jg
mov
hlt
insb
inc
jo
ds
cmpsb
cmpsb
stc
jp
out
ret
add
daa
stos
mov
sbb
daa
outsb
mov
pusha
and
insb
fsubrs
jno
ljmp
pop
cmp
sti
xchg
xchg
push
icebp
out
mov
fstps
jp
test
aad
subl
into
dec
mov
push
mov
mov
out
xchg
xchg
lcall
gs
addb
cmp
test
push
push
das
repnz
jl
fs
xor
clc
jl
cmp
ror
xor
popf
fcoms
je
dec
loopne
call
and
add
mov
add
mov
xor
shlb
pop
aad
push
dec
add
inc
xchg
lahf
mov
pop
das
movsb
in
movsl
cmc
dec
jns
xor
test
clc
and
les
xor
hlt
cmp
cmp
jno
push
xchg
jmp
push
inc
add
bound
mov
mov
sub
addr16
jae
insb
push
int
sub
ljmp
mov
sahf
add
push
sbb
xchg
cmp
pop
mov
jbe
inc
adc
and
insl
cmp
in
test
insb
mov
mov
mov
out
lea
mov
pop
dec
lods
sbb
mov
sbb
fs
add
pop
sbb
mov
pop
mov
cld
adc
out
mov
xchg
sbb
xor
push
scas
or
cmc
and
test
mov
xchg
ret
jle
lods
pop
adcb
es
dec
rorl
loop
ss
ljmp
pop
aam
sahf
lods
xchg
frstor
fbstp
pop
insl
or
jo
push
jno
ljmp
fldcw
cmpsl
push
outsl
hlt
outsb
jmp
iret
xor
pop
mov
out
sahf
cmpsb
sbb
add
lahf
add
cmpsl
les
adcb
cld
pop
sbb
mov
shlb
fs
loop
mov
lret
mov
mov
rcrb
mov
mov
bound
push
out
mov
pop
jns
outsb
js
fs
lock
xchg
dec
sub
push
fdivp
cmpsb
add
aaa
fbld
xchg
dec
fisubl
mov
or
add
jnp
or
cs
stos
daa
daa
or
xchg
scas
add
jle
mov
daa
out
mov
add
sbb
xlat
pop
mov
in
and
or
enter
dec
xchg
push
xchg
jae
call
cld
mov
pusha
mov
pop
in
cs
sub
add
xchg
cwtl
xchg
add
or
sbb
cmp
lret
mov
outsl
test
std
cmp
dec
mov
fs
stc
mov
push
inc
push
bnd
adc
aas
ret
inc
dec
pmaddwd
daa
ds
sub
fwait
mov
clc
mov
xchg
hlt
adc
push
jp
mov
repnz
stos
push
mull
sarb
push
mov
mov
mov
sarl
xor
fdivrp
sti
call
insb
fstpt
ror
push
stc
adc
fcomps
inc
fsubs
fisttpl
mov
mov
dec
sub
divb
popf
in
inc
shlb
mov
or
jae
push
cld
jecxz
add
addb
daa
aas
and
push
test
dec
mov
cmp
out
xor
cmp
push
push
out
pop
pop
loopne
jne
lret
repnz
es
div
xchg
mov
dec
push
pop
cmc
inc
mov
out
addb
daa
add
mov
mov
ljmp
cmp
inc
fcompl
inc
inc
dec
andb
push
xchg
mov
out
xchg
push
repnz
repnz
dec
cld
and
gs
jmp
in
xchg
rorb
gs
mov
std
sahf
outsl
movsl
out
inc
sub
ffreep
jl
push
inc
out
stos
sub
push
xchg
xchg
test
mov
pop
or
xor
fisubrs
fldl
sub
ss
dec
dec
sbb
inc
pop
add
sti
xchg
cltd
int3
pop
shl
aam
xchg
add
adc
pop
out
mov
je
lds
xor
mov
sbb
lea
jo
cltd
mov
ret
cltd
cli
pop
call
sbb
std
add
cli
lods
cmpsb
pop
push
cmp
adcl
cltd
leave
jno
sub
insb
cmp
dec
adc
dec
das
jne
and
movsl
in
je
cmc
sub
pop
sub
inc
mov
or
dec
mov
pop
movsb
xor
jae
add
cmp
mov
inc
or
cmc
fildll
xor
xor
ret
addr16
fstl
fbstp
scas
test
hlt
shll
mov
push
ktestw
inc
das
aam
and
jno
ja
cltd
mov
test
sti
inc
mov
push
sbbb
push
xchg
sub
fabs
pop
push
out
and
call
adc
pushf
iretw
fiaddl
sbb
addr16
sub
mov
or
cmp
mov
mov
cmp
mov
ja
cli
pop
and
popa
sub
jge
aad
mov
xorps
shll
xor
mov
cwtl
mov
adc
add
mov
cmp
cltd
js
imul
push
lahf
mov
pop
pop
add
insl
jecxz
fistpl
shlb
scas
clc
cs
xchg
sub
outsl
cli
aad
shrl
mov
es
pop
fdivl
loopne
adc
out
mov
addr16
enter
dec
popf
int
jp
scas
inc
sub
mov
outsl
mov
push
inc
mov
outsl
call
dec
cmp
pop
xchg
adc
mov
testb
jle
xor
mov
push
sti
fcoms
sub
arpl
inc
decb
sub
inc
pop
push
cmp
jno
inc
xor
xor
mov
push
sub
cmc
adc
push
ret
mov
adc
adc
in
or
jo
hlt
push
jmp
fsubrs
aad
mov
lret
lcall
rcrb
inc
in
jnp
jo
mov
outsl
nop
adc
test
or
adc
mov
dec
xor
jge
mov
sub
mov
cmp
sbb
inc
in
fidivs
xchg
mov
pop
pop
lods
and
outsb
sub
sub
ss
push
xor
or
lahf
push
sub
addl
jne
stos
pop
jmp
xor
ret
jnp
leave
popf
inc
mov
popa
push
in
push
repnz
or
jl
adc
addb
dec
mov
loopne
rorl
push
sbb
mov
add
mov
test
shlb
popa
or
adc
rcl
or
in
mov
sub
movsb
decl
push
das
push
inc
mov
dec
aam
dec
lods
lret
mov
andb
inc
add
dec
pushf
pop
mov
add
adc
sti
jge
ret
scas
fbstp
jg
mov
mov
jl
mov
mov
jp
pusha
fwait
push
push
out
xchg
orl
mov
and
pop
mov
ds
lods
into
adc
push
aas
sbb
lea
ja
js
adc
mov
iret
mov
shrl
jmp
xchg
pop
movsl
loope,pn
push
adc
gs
mov
das
xchg
jae
xchg
pop
jp
out
mov
or
dec
xor
rorl
sbb
mov
inc
shrb
pop
out
cs
jecxz
mov
pop
sti
xchg
sahf
jae
mov
cmpsb
add
pop
dec
test
mov
jmp
loope
test
jno
out
or
outsb
into
adc
add
dec
sub
jo
xor
pusha
sbb
adc
dec
std
and
shlb
loopne
pop
jne
xor
test
inc
mov
in
xor
cli
test
fsub
or
dec
sbb
fadds
into
sbb
ret
in
push
scas
or
out
les
mov
loopne
cltd
mov
sub
and
movsl
cmova
mov
popf
sub
imul
xchg
pop
adc
xchg
enter
mov
dec
mov
pop
test
mov
cmpsl
mov
xchg
adc
add
pop
or
mov
add
mov
test
sahf
pop
mov
jns
xor
lds
mov
xchg
sbb
bound
sub
mov
or
add
dec
dec
lods
lcall
mov
xchg
ja
dec
sbb
in
mov
push
inc
in
fisubrl
mov
mov
es
inc
dec
lahf
int
dec
push
xchg
lock
movsb
clc
test
out
loope
ror
xchg
call
pusha
loop
pop
insl
daa
push
gs
call
cmp
shlb
mov
leave
add
ja
int
hlt
mov
insb
les
movsl
fcmovb
push
scas
jb
add
stos
mov
data16
sub
dec
mov
mov
std
fsubrl
jb
push
in
jg
pop
or
and
xor
sub
cmp
inc
xor
sti
insb
call
fs
rcrl
daa
pop
in
mov
lods
int3
and
add
cmp
cmp
add
dec
stos
or
xor
pop
ret
movsl
aaa
test
stc
dec
inc
movsl
dec
and
out
iret
ficomps
or
mov
mov
or
mov
ficomps
jnp
stos
movsl
xchg
adc
jb
xchg
shll
int
sbb
ds
push
jle
pop
repz
push
adc
insb
pushf
mov
cmp
jp
cmp
cmpsl
popa
mov
dec
adc
in
xchg
add
rcrl
sti
xor
popf
mov
sahf
hlt
fisubl
test
xchg
pusha
lea
repz
in
test
adc
and
aas
shrb
inc
dec
inc
xchg
jnp
cmp
fistpll
mov
imul
cmp
jge
sub
out
pushf
scas
mov
sub
adc
add
outsl
or
test
ljmp
js
pop
cmpsb
aad
je
dec
cmp
incl
scas
gs
xchg
lea
insb
mov
push
cs
sarb
sub
rcrl
std
add
in
sbb
enter
sbb
push
dec
testl
inc
pop
icebp
mov
call
sbb
sub
jne
insl
sti
je
pop
and
scas
xchg
cmp
push
int3
popf
and
imul
add
mov
cwtl
add
cmpsl
gs
mov
and
movsb
push
jnp
dec
push
adc
add
mov
xchg
dec
mov
ds
jb
aad
add
or
shrd
sub
sbb
jb
xor
xchg
icebp
mov
add
mov
lcall
and
leave
stos
ret
dec
or
lret
add
xchg
testb
lea
add
sbb
fcomps
pop
div
adc
jmp
pop
mov
add
out
gs
pop
or
jmp
mov
sbb
lods
jo
sub
insl
mov
add
popa
test
xor
mov
int3
mov
adc
test
into
stos
cmp
dec
faddl
loop
jno
hlt
xor
testb
pop
or
mov
mov
jb
mov
pop
sti
adc
mov
or
sbb
push
cmp
lret
dec
dec
sub
mov
xchg
push
adc
insl
dec
outsl
mov
cmp
pushf
pop
test
add
in
orl
and
add
testl
loopne
rclb
pusha
sub
out
mov
scas
jb
sub
jno
je
xchg
test
lock
pop
cmp
cwtl
aaa
repnz
in
imul
push
andl
popa
cmpsb
xor
testb
scas
fs
mov
mov
adc
dec
mov
jecxz
inc
int
push
mov
arpl
lret
lahf
aam
pushf
inc
lahf
aad
loop
sbbb
inc
and
jmp
or
pop
fs
repz
pop
in
mov
lea
enter
push
fisttps
jne
mov
scas
gs
jl
fdivrl
mov
mov
or
pusha
sub
subl
out
arpl
fcoml
add
mov
ljmp
and
stc
and
push
mov
push
das
adc
arpl
sub
int3
fisttps
and
add
jg
popa
mov
test
ss
int
pop
pop
inc
xchg
cmp
clc
add
je
mov
or
je
xchg
jno
pop
sub
sarb
and
mov
xchg
xor
mov
jnp
cmp
test
pop
dec
jle
sbb
and
addr16
and
fnstcw
rorb
negb
add
arpl
insb
xor
mov
in
push
out
push
sub
sub
pop
movsl
xor
or
adc
shr
int
dec
jns
lgdtl
rclb
adc
scas
and
push
xchg
cld
add
jp
pushl
or
dec
fidivl
pop
xchg
or
rcrl
push
push
mov
les
mov
or
shr
jbe
pop
repnz
test
jg
shr
push
outsb
shl
mov
xlat
push
je
fwait
addr16
pop
mov
imul
adc
pop
pushf
je
xor
xchg
addr16
xor
pop
xor
mov
xchg
pop
pcmpgtd
mov
pop
icebp
shrb
and
movsb
test
push
cmp
subl
daa
dec
dec
jp
inc
repnz
and
enter
xchg
mov
xor
sub
jb
sbb
std
jp
pop
lods
xorb
add
push
xor
outsb
jl
in
sbb
in
adc
loope
xor
xor
push
mov
out
mov
pusha
idiv
test
sub
xchg
lcall
fwait
es
inc
test
mov
and
push
push
dec
xor
call
outsb
pop
insl
push
jae
imull
rcrb
cmp
hlt
dec
push
pop
lret
mov
sub
rorb
sub
insb
inc
sub
repnz
arpl
out
and
lds
adc
sti
push
loop
ret
popf
cmpsb
loop
push
xlat
jo
and
je
mov
sbb
and
es
inc
mov
mov
push
fimull
sub
lea
cmpsb
mov
ret
cs
aas
loope
fwait
inc
pushf
out
dec
inc
lcall
and
push
jno
scas
jae
addr16
mov
cmp
mov
push
mov
mov
fists
jg
push
ljmp
and
sbb
sbb
scas
rorl
adc
cmp
sbb
call
dec
cmp
fbstp
addl
ljmp
inc
cld
xchg
xchg
fdivrs
inc
loopne
inc
orl
cmp
add
popa
sub
out
das
out
cmp
int3
and
jmp
mov
lea
mov
sub
mov
pop
mov
sbb
pusha
xchg
jb
lock
jns
addb
sbb
stos
mov
sarl
push
dec
inc
sbb
jg
mov
mov
fstpl
cmpsb
sub
fcompl
inc
rclb
jns
aad
mov
xchg
mov
inc
daa
push
inc
std
shrl
push
aad
loopne
push
out
mov
push
or
cmpl
cld
shrb
daa
and
sbb
xorb
pushl
dec
stos
and
and
stc
int
sub
mov
dec
ds
imul
fisttpll
push
ret
xchg
fwait
imul
pop
pop
aam
xchg
cld
jno
es
cmp
inc
sub
jbe
sbb
mov
aaa
or
push
xchg
mov
mov
and
xor
mov
clc
fdivs
mov
sti
mov
jmp
mov
stos
cmp
aas
lods
xchg
rol
cmp
inc
adc
xchg
imul
icebp
add
jg
imul
filds
xchg
push
mov
dec
dec
jmp
push
or
mov
sub
stc
jae
jmp
sbb
icebp
and
icebp
icebp
cli
fwait
inc
or
incl
inc
sahf
add
xchg
mov
inc
ss
cld
mov
cmp
gs
dec
dec
lods
pop
cmp
insl
mov
jb
jno
loop
dec
sub
mov
data16
jl
pop
es
testb
sub
insl
add
lahf
push
loopne
cmc
loope
cwtl
fs
aaa
sub
loope
clc
add
xchg
push
jne
pop
shlb
in
rcll
mov
cli
out
sub
sbb
int3
in
pop
xchg
push
xchg
cmp
imul
in
data16
faddl
jg
lcall
shl
out
js
mov
outsb
sbb
push
inc
aaa
cwtl
cmovne
jnp
test
inc
ret
mov
adc
xchg
push
and
xchg
sbb
or
adc
pop
cmpl
mov
aad
es
loopne
and
shll
sbb
adc
adc
mov
cmc
mov
ja
mov
pop
mov
loope
push
sub
ljmp
jge
sbb
cmp
aaa
and
and
jo
lret
mov
lds
lea
fdivs
cwtl
cmpsb
jo
xorl
dec
jae
daa
arpl
aad
adc
pop
dec
loope
mov
test
mov
pop
mov
xor
arpl
xor
cltd
xchg
mov
popa
jle
testb
outsb
loop
movsl
xchg
ja
pop
int3
dec
xor
sti
ds
add
xchg
ljmp
dec
sub
mov
jle
xchg
andb
inc
data16
aam
add
mov
cmp
out
inc
cli
xchg
pop
jle
jne
bound
push
lock
in
add
inc
xor
stc
pop
xchg
lea
outsb
hlt
mov
in
aas
pop
or
nop
add
cmc
aas
or
sbb
dec
xchg
out
sub
jmp
ret
push
loopne
ret
sub
push
or
lret
dec
shl
lret
cmp
pusha
pop
mov
and
mov
mov
mov
jo
xor
andl
lcall
repnz
pop
addr16
mov
test
dec
fwait
test
jg
or
rol
push
cli
stos
sahf
push
out
inc
and
ljmp
inc
sbb
inc
int
out
mov
xor
lock
aam
sub
aam
mov
cmp
ret
push
leave
mov
cmp
add
push
paddw
sbb
notb
fldl
push
xchg
mov
fcom
adc
xchg
or
mov
rcrl
push
pop
add
fiaddl
out
data16
jg
jo
out
jmp
decl
stos
sbb
cmovbe
mov
test
cmp
pop
test
jne
cmp
movsb
fidivrl
cs
in
pop
arpl
mov
scas
out
cmp
xchg
pop
pusha
pop
shrb
iret
push
aaa
cmc
inc
jno
add
imul
jnp
sbb
mov
das
ret
es
mov
lret
mov
mov
lds
mov
lea
sbb
inc
sub
cmp
addl
cmp
aas
mov
popf
daa
or
pop
outsb
data16
inc
sub
xchg
mov
pop
stos
out
movsb
ret
cmp
enter
mov
dec
data16
pop
lcall
add
loope
sbb
jne
pop
pop
sub
aaa
shrl
rolb
adcl
js
dec
or
sub
xchg
std
movb
and
stc
stos
cli
sbb
lret
insl
pop
lret
or
das
repz
sub
out
mov
sub
push
jg
dec
jnp
shlb
mov
sbb
push
ret
xchg
fldt
stos
xlat
jbe
sbb
ds
mov
jle
lds
pop
es
push
or
add
lea
sbb
xor
mov
ja
pushf
cmovbe
mov
add
cwtl
add
jle
js
lds
out
repnz
cmp
push
jl
in
clc
pop
xor
fwait
sub
lds
pop
dec
in
inc
push
add
ds
lds
sarl
sub
sbb
jecxz
out
pop
and
add
jl
jmp
int3
mov
or
add
jns
movsb
int3
nop
stc
out
ljmp
and
mov
data16
inc
jmp
lret
and
sbb
jnp
sarb
push
inc
add
daa
push
sub
mov
push
rorl
fs
sbb
inc
ret
mov
mov
int3
mov
xchg
icebp
call
add
jo
cmp
sti
mov
pop
arpl
lret
lea
adc
pop
jg
pusha
add
dec
sbb
shrb
mov
fwait
cmp
jecxz
inc
xchg
push
adc
cmp
aaa
frstor
aaa
in
daa
mov
pop
push
stos
popa
xchg
mov
add
adc
jo
sarb
imul
ficoms
aaa
jmp
inc
ficompl
mov
js
sub
hlt
lods
push
in
jb
mov
rcll
cs
cltd
adcb
xor
cmp
loop
inc
sahf
std
xor
pop
daa
ljmp
dec
pop
decb
mov
in
adc
add
mov
dec
pop
add
jle
lahf
mov
add
test
jns
loop
das
data16
popf
xchg
jl
test
cmc
loope
or
xor
fmull
ss
out
inc
loopne
aas
les
pop
sbb
pop
mov
cmp
or
mov
lahf
loopne
notl
ret
mov
mov
ret
repz
imul
push
pop
bound
jnp
test
aad
push
ret
bound
rcrl
dec
out
push
mov
sbb
jne
cmp
mov
out
int
push
loope
enter
jnp
flds
and
adc
stos
cli
pop
pop
js
lods
pushf
clc
pop
sbb
aas
jmp
push
pop
pop
out
movsl
lcall
data16
pop
loope
in
pop
int3
xlat
adc
pusha
push
xchg
imul
push
mov
fnstsw
repz
jne
sbb
fisttpl
push
in
inc
sbb
loope
imul
lretw
or
enter
test
adc
add
jns
movsl
cmp
mov
ds
mov
or
aas
popf
and
out
mov
ret
or
or
inc
and
negl
mov
loope
mov
xchg
pop
imul
xor
jb
pusha
jle
xchg
push
jg
adc
push
bound
out
mov
sub
mov
lahf
xor
sbb
jae
out
cmpsl
add
jo
in
mov
mov
sarb
dec
fmul
jecxz
mov
lods
loop
in
repz
repnz
push
push
lret
iret
or
xor
push
imul
sti
in
xchg
adc
pop
add
outsl
cmp
mov
aad
test
mov
mov
push
or
mov
lods
lock
push
mov
add
flds
push
and
xor
push
lret
jmp
dec
aas
or
cmp
test
or
sar
test
loopne
ret
mov
xchg
inc
add
sub
in
es
adc
inc
in
or
xchg
pop
out
loopne
push
adc
fstl
aaa
test
lret
repz
outsb
push
sub
mov
out
or
adc
subb
push
xchg
test
out
hlt
gs
gs
or
push
subb
adc
insb
std
mov
sbb
push
ljmp
push
jmp
or
fstps
mov
pop
iret
clc
fs
jb
mov
divb
jno
dec
pop
pop
push
xchg
dec
and
js
cmpsb
mov
aaa
xor
xchg
clc
icebp
dec
pop
inc
dec
es
pushf
addr16
shll
fdivrs
int
mov
clc
test
mov
rcll
jle
movsb
lock
add
arpl
aam
mov
rorb
and
or
dec
pushf
xor
jecxz
add
dec
fstpt
aaa
xorb
pushf
ljmp
push
in
xchg
pusha
xchg
push
pushf
sub
movsl
imul
and
je
and
sbb
or
mov
subb
sub
jp
add
sbb
cmp
push
daa
push
outsb
fisubs
adc
daa
pop
xchg
mov
inc
lds
sbbl
es
jmp
push
ja
popa
stos
pop
sbb
jo
lds
je
bound
push
fimuls
dec
sbb
mov
addl
repz
aad
lock
jno
push
mov
fmuls
add
mov
divl
xchg
arpl
cmp
inc
xor
fisttpll
imul
bnd
pop
shlb
sub
dec
add
rclb
push
in
and
adc
shll
cmc
jo
or
or
lret
cld
and
insb
push
int3
cmpsl
in
aaa
push
leave
xlat
xchg
jbe
cmp
or
push
sub
mov
cmp
mov
repnz
sarb
cmp
or
inc
xchg
jnp
inc
addr16
cltd
inc
pop
rclb
pop
push
cmp
pusha
mov
xor
inc
pop
into
out
fstpl
ljmp
jp
dec
ret
lret
call
and
adc
loopne
xchg
jge
sub
mov
xchg
dec
or
js
std
roll
inc
stos
mov
and
popa
and
add
mov
mov
lock
jp
arpl
stc
xlat
sbb
std
and
xor
pop
loope
xor
clc
out
xchg
call
mov
adc
pop
push
adc
movsl
xchg
or
push
and
push
stos
int3
push
push
add
sbb
mov
lock
and
and
cmp
push
jae
int3
loope
mov
jg
cmpsl
call
mov
pop
or
dec
sar
mov
addl
push
orb
stc
loope
out
clc
cmc
push
cmp
mov
jne
cmp
push
lahf
xchg
sti
andb
popf
inc
insl
pop
lret
jae
mov
enter
fwait
stos
dec
xchg
fcoml
insb
test
add
lock
je
roll
imul
lea
lea
fwait
xor
pushf
mov
popa
adc
std
lcall
shrl
popl
mov
xchg
add
ss
sbb
jecxz
test
jbe
aad
ja
push
out
add
xchg
lret
imul
lock
out
push
cmpsb
int
pusha
xchg
cmp
aas
pushl
dec
mov
stos
fsubr
sbb
enter
inc
jns
roll
adc
movups
adc
jmp
insb
sub
add
pop
xchg
pushf
ret
cmp
xor
shl
adc
popa
repnz
push
jne
addb
inc
lret
fldpi
popf
lods
ficompl
add
aam
in
jnp
mov
ficoms
and
mov
add
mov
std
or
loope
arpl
push
xor
or
xchg
repnz
int3
cmp
int
lds
push
or
daa
out
cltd
cs
pop
xor
and
mov
int3
xor
iret
roll
call
push
lods
scas
adc
test
in
inc
repz
gs
mulb
movsb
jp
pop
push
cwtl
inc
addr16
shl
imul
sbbb
fmulp
dec
sub
xor
push
into
pusha
dec
add
andl
ror
in
aad
stc
repnz
cmp
push
mov
dec
mov
cmp
add
das
mov
jne
sub
mov
add
sub
enter
popa
xchg
iret
push
mov
or
cmc
movd
loop
fstpt
lods
in
adc
xchg
mov
jle
inc
lock
sbb
xor
pop
frstor
inc
popf
adc
and
mov
mov
mov
pop
mov
pop
incb
rorl
in
or
mov
and
cmp
cmp
int3
stc
pop
daa
shll
ljmp
pusha
xor
push
add
push
add
adcb
arpl
ljmp
lods
mov
jb
fsubs
lcall
pop
imul
shl
movsb
push
das
cmpb
jnp
sbbl
daa
rcr
jecxz
pop
test
scas
xlat
xchg
testb
std
enter
jno
dec
or
icebp
lock
pop
sub
lods
cmp
repnz
push
and
mov
mov
std
pop
pop
out
mov
push
or
mov
mov
cmp
idivb
sbb
movsl
pop
mov
sbbl
loop
fsubs
and
add
add
push
lahf
dec
inc
addr16
xchg
or
dec
out
insl
inc
cmp
lods
or
cmp
push
mulb
jne
es
xchg
imul
pop
jmp
mov
pop
jl
aad
jp
sbb
pushf
jb
idivl
sub
lret
and
mov
pop
inc
or
cmp
push
fwait
inc
rcrb
sub
xchg
adcb
pop
fs
popa
lods
xor
pushf
pop
cmp
bswap
jg
test
lret
inc
imul
stos
stc
xor
testb
mov
gs
mov
rcrl
aad
iret
push
sbb
push
fwait
bswap
xchg
int
enter
mov
jae
and
ds
mov
ds
sahf
shrb
stos
mov
fisttpll
cmp
imul
scas
mov
mov
loope
fs
add
jp
leave
sub
int3
imul
inc
ljmp
xchg
xchg
xor
inc
scas
adc
outsl
jns
jb
loope
inc
push
pop
iret
xchg
mov
pusha
int
xor
daa
xchg
mov
mov
sbb
loopne
inc
jmp
jnp
pop
aas
mov
push
jo
lods
cmp
jge
xor
fcomps
out
add
fwait
sub
mov
jne
pop
xchg
flds
sbbb
pop
repnz
cmp
and
push
and
pop
cmc
sbbb
sub
repnz
rcll
push
fidivs
jno
sbbb
loop
jecxz
adc
mov
addr16
mov
cld
jb
or
rol
push
push
jg
icebp
mov
lods
xchg
xchg
jp
inc
mov
popa
mov
jns
leave
inc
jmp
loope
inc
inc
out
fldcw
aam
push
dec
pop
arpl
decl
xchg
push
inc
mov
icebp
xorb
std
movsl
cli
adc
divl
call
jo
dec
push
pop
test
sbb
jne
lret
hlt
jl,pt
add
lods
adc
inc
jne
test
push
pushf
and
cmp
imul
hlt
push
inc
cmp
xor
adc
dec
pop
xchg
xchg
mov
dec
jl
or
push
in
fld
bnd
push
sti
andl
lods
ficoms
leave
jge
sub
dec
xor
lcall
fstl
pop
enter
mov
sub
inc
jmp
mov
out
sbb
pop
in
repz
mov
sub
nop
pop
mov
jnp
out
xor
pop
rorl
lods
je
mov
sti
ret
fidivl
mov
mov
ja
clc
pushf
cmp
cmpsb
bnd
add
jb
and
sbb
push
enter
lea
inc
ja
movq
enter
es
sarl
js
aam
test
push
or
mov
dec
aaa
cwtl
aam
sti
xchg
cld
testb
nop
mov
pop
pop
in
js
movl
push
xchg
push
mov
rcll
ja
xchg
cmp
ret
and
or
fdivs
ja
out
mov
test
and
mov
jb
push
adc
arpl
daa
shr
mov
mov
xchg
xchg
leave
dec
shlb
lcall
imul
cmpsl
mov
mov
ret
pop
scas
mov
and
or
push
mov
lods
fistl
mov
and
imul
sbb
aad
je
cmpsb
in
push
pushf
xchg
mov
jge
cmp
notl
jno
dec
sbb
pop
sub
jp
testl
dec
push
in
mov
fnstenv
add
push
adc
aas
in
insb
jnp
xchg
mov
pop
xor
jne
adc
mov
inc
and
bound
loope
loopne
mov
loope
popa
aas
setle
mov
mov
rorl
pop
sub
es
or
xor
bound
pushl
cld
sbb
dec
scas
or
addb
lods
ret
pop
xchg
cltd
ret
lds
mov
scas
mov
aas
pop
cld
mov
arpl
mov
imul
pop
adc
sahf
flds
stc
ljmp
xor
fwait
mov
adc
mov
xchg
cmp
cs
jns
ret
push
leave
je
push
xor
xor
jg
rcrb
dec
vpslld
scas
jmp
lcall
pop
xchg
add
dec
outsl
add
pop
mov
jg
in
or
pop
adc
cltd
jle
xlat
jle
mov
mov
mov
sbb
push
in
sahf
inc
scas
xchg
dec
adc
jae
shlb
mov
sarb
out
fbstp
pop
cmpsl
imul
inc
test
push
push
divb
push
out
xchg
roll
popa
divl
mov
iret
pusha
bound
jl
fcmovnu
pop
jle
stc
cmc
add
jle
movsl
dec
mov
repz
hlt
push
nop
push
jnp
add
and
inc
mov
xchg
xchg
xchg
stos
inc
sbb
jns
mov
and
cmp
cmpl
cmp
lahf
adc
roll
add
sub
test
leave
push
push
lods
inc
out
pop
inc
mov
mov
mov
sub
jge
mov
inc
cmp
push
out
xchg
cmpsb
push
pop
xchg
and
xchg
test
push
jmp
rcll
mov
mov
mov
mov
stos
cmp
shl
jae
dec
fdivr
sbb
loop
repnz
add
jp
push
cmp
add
dec
fsubr
add
cmp
dec
mov
and
pop
xorl
xor
sub
out
pop
xor
fs
les
push
sub
dec
aad
es
cmp
cmovno
insb
push
push
add
push
dec
fs
mov
mov
ret
sbb
xchg
xlat
jb
push
aad
lcall
jno
mov
bound
cmp
fiadds
test
mov
sbb
push
fmul
xchg
adc
mov
fwait
scas
jp
mov
mov
stos
mov
jp
mov
jae
dec
dec
xchg
pop
mov
jno
mov
test
cli
sub
push
add
outsl
and
sahf
dec
and
ss
jns
pop
pop
out
clc
xorb
js
rcrl
jo
jge
xor
je
frstor
or
shll
bound
mov
loop
or
das
stc
or
cwtl
into
clc
lcall
xor
rcrb
mov
xchg
mov
pop
pop
gs
das
imul
popf
mov
pop
ret
test
jge
jge
mov
inc
lods
incb
inc
std
pop
cmp
jo
mov
add
in
test
xchg
cli
mov
cltd
sub
sbb
cmp
out
test
sub
sub
imull
in
cld
fwait
sub
add
sub
ljmp
mov
outsb
sbb
call
xchg
sub
pop
mov
xchg
push
mov
push
and
int3
bnd
mov
sub
aaa
fs
or
fiaddl
mov
das
test
jle
fstpl
call
dec
inc
adc
ss
test
in
outsb
cmp
xor
xchg
mov
cmp
sahf
xorl
adc
loope
cli
cmp
pop
inc
out
mov
out
nop
div
cld
inc
or
xchg
jp
sbb
aam
int
stos
imul
dec
loop
mov
mov
out
imul
movsb
inc
and
xchg
add
add
stc
mov
lea
into
pop
or
mov
popf
adc
loop
rcrb
cmp
pop
pushf
push
cmpsb
xchg
sbb
insb
bound
adc
call
fwait
mov
clc
out
in
xor
pop
push
pop
loopne
inc
sbbb
adc
ret
adc
push
imul
sub
xchg
aam
push
sarl
xchg
mov
push
jnp
ss
mov
fs
bound
lret
push
sbb
add
xchg
dec
adc
cmp
js
xchg
push
out
mov
repz
mov
aas
cmp
pop
pop
gs
popa
dec
pop
xlat
push
aad
fimull
xor
dec
xor
nop
out
and
loopne
movl
fsubs
nop
mov
es
mov
fnsave
dec
dec
xchg
scas
shll
inc
add
movsl
pop
and
movsb
mov
and
mov
rclb
pop
push
push
sbb
adc
mov
js
xchg
mov
xlat
imul
lods
push
icebp
aas
xchg
mov
xchg
and
cmp
mov
adc
lock
jg
jns
adc
or
in
dec
outsb
cli
push
stos
mov
dec
fsubr
mov
jbe
or
arpl
or
fimuls
outsl
hlt
push
mov
push
sti
mov
sti
push
lods
cld
and
pop
mov
jecxz
inc
sahf
insl
jle
sub
or
add
hlt
mov
shlb
and
sbb
stc
test
dec
cld
mov
mov
xor
push
shrb
jmp
mov
xor
mov
shlb
lahf
fnstsw
test
mov
jge
push
add
mov
pop
in
jns
out
xor
lcall
int3
mov
mov
jge
cmp
sub
mov
cmp
mov
ja
jl
mov
inc
cmpsb
movb
jecxz
inc
cwtl
xchg
ret
inc
sub
or
movsb
jno
frstor
icebp
adcb
aad
sub
divb
xor
jecxz
push
idivb
mov
pop
push
hlt
rorb
adcb
insb
jne
mov
jl
add
add
das
cmp
popa
sbb
dec
idivl
push
addl
mov
xchg
std
xor
add
cltd
cwtl
mov
jle
aad
xchg
in
or
jge
scas
stos
add
add
cmp
dec
or
sbb
xor
es
ss
sbb
jle
stc
push
les
mov
and
les
mov
push
mov
jmp
add
pop
mov
pop
cmpl
jo
loope
enter
rclb
pop
inc
daa
sbbl
mov
xchg
test
pop
ljmp
cmp
pop
mov
push
or
or
dec
xorb
movsb
xor
scas
rcll
xchg
cmp
push
xchg
and
sub
lods
movsl
sbbb
out
xor
ret
push
inc
pushf
xor
push
rclb
insl
jle
adc
data16
loopne
das
cmc
fwait
aad
ret
push
cltd
mov
das
movsl
ss
pop
lea
or
out
js
dec
mov
out
adc
psrlq
pop
insb
xchg
in
int3
xor
push
xor
nop
mov
movsl
leave
xchg
cmp
mov
iret
int3
dec
or
pop
push
mov
out
and
mov
les
mov
cwtl
rcrl
fdivs
test
sub
stos
fisubs
inc
xchg
dec
mov
hlt
jmp
and
xchg
xchg
ja
push
push
sub
xchg
in
icebp
sahf
inc
xor
mov
jge
aam
push
inc
aam
aam
mov
aas
mov
xor
or
ljmp
jae
out
jne
ljmp
sub
aas
pop
jae
rcl
imul
test
mov
shlb
xor
dec
arpl
jns
stos
stc
sub
sbb
fcomi
out
cmpsl
pop
fadds
cmc
jno
mov
shlw
xlat
std
mov
xchg
pop
outsb
in
mov
sbb
lods
insb
add
mov
pop
push
sbb
xchg
aaa
fwait
cmc
xchg
int
imul
fwait
call
sbb
adc
gs
pushf
gs
jmp
push
mov
fistpl
pop
mov
adc
mov
cmovge
push
or
jne
arpl
xor
int3
sub
ja
into
stc
xor
push
add
fsubr
es
xor
cmp
ss
icebp
xlat
xor
inc
movaps
in
popf
cmc
mov
pop
mov
push
mov
repz
sub
pop
adc
add
std
push
das
aad
idivl
js
push
jle
or
lock
xchg
xor
dec
daa
enter
jge
dec
mov
inc
rcll
push
inc
or
ret
jl
jmp
mov
inc
int
xchg
addl
sub
xchg
or
xchg
fimull
cmpsl
out
jo
sbb
dec
or
xor
mov
test
inc
push
sub
adc
call
push
repnz
mov
fsub
or
popf
imul
sbb
xor
add
loope
sbb
rorl
sbb
add
sti
sub
push
dec
call
pop
push
mov
iret
or
aad
dec
cmp
push
mov
and
lret
hlt
int
xor
add
out
sub
lcall
lds
dec
and
jne
rcrl
aaa
dec
les
enter
sahf
jns
jo
cmp
push
iret
push
dec
loope
xor
mov
subl
jbe
pusha
gs
push
idivb
fwait
nop
sbb
fisttps
mov
jp
mov
arpl
or
pop
repnz
or
cvtpi2ps
fsubl
jge
scas
jo
fs
or
add
subb
mov
dec
xlat
mov
jmp
push
or
inc
jecxz
sarl
push
jmp
icebp
sub
pop
jmp
loopne
stc
movb
loope
sahf
or
jne
push
add
fiadds
pusha
xor
es
clc
push
fimull
mov
ret
or
fmuls
call
lock
fildll
mov
rcrl
mov
in
jne
in
rcrb
ret
and
sbb
stos
mov
movsl
std
push
or
inc
mov
jnp
fcoms
adc
orl
addr16
sbb
daa
inc
push
loop
aas
xor
push
test
adc
mov
test
nop
daa
jg
popf
fnstsw
sahf
in
push
repnz
ror
sbb
in
mov
cmp
pop
lock
xorl
cmp
adc
stc
adc
test
and
mov
rclb
and
inc
xor
dec
pop
add
mov
sbb
jmp
sbb
dec
scas
and
pop
sar
insl
outsb
stc
inc
jns
xchg
cmpsl
mov
jne
out
push
add
scas
push
mov
inc
aaa
testb
frstor
mov
pop
push
and
xchg
cwtl
dec
scas
in
dec
out
in
xor
dec
or
jne
stc
movb
push
imul
out
ret
dec
xchg
inc
cmp
sub
xor
inc
stc
into
rcl
lret
ficompl
pop
daa
cmp
add
mov
or
testb
aas
inc
test
cld
xor
xor
test
scas
in
ljmp
fwait
mov
jge
cmp
pop
and
in
mov
popa
addr16
fldt
decl
das
in
jno
or
aas
ds
sub
lea
inc
clc
dec
jo
cmp
cmpsb
out
sbb
sarb
or
mov
in
add
push
lret
popa
dec
popf
push
enter
push
push
inc
jo
rcll
push
cmp
push
jno
push
bound
aas
fwait
shl
repz
lahf
xor
aas
mov
stos
push
xor
cmp
nop
mov
sbb
int3
push
mov
test
addr16
adc
aad
push
orl
xchg
adc
loope
dec
jnp
cmpl
pop
pop
rcrb
adc
cs
pop
int
or
lahf
push
sbb
movb
rcr
sub
outsb
jne
stos
js
lds
cmp
push
aad
andl
jecxz
test
rcrl
sub
fdivl
mov
mov
push
push
ljmp
stc
cmp
sub
lcall
mov
xor
scas
pop
push
testb
insl
sbb
dec
enter
or
adc
push
cwtl
imull
pop
or
nop
adc
or
cmp
jns
mov
sahf
cmp
cmp
push
cmp
ja
mov
lcall
mov
pop
dec
dec
into
mov
and
and
fstpl
inc
mov
pusha
mov
xor
push
ret
loope
cmp
jae
les
stos
mov
push
push
mov
aad
int3
in
push
scas
in
xor
xchg
xor
je
sub
int3
cmp
mov
push
add
mov
cmp
mov
sbb
icebp
subb
mov
pushf
fsubrp
je
test
mov
jp
fcmovb
jo
pavgb
pop
enter
mov
mov
int3
jle,pt
jl
pop
pop
sub
inc
sarl
mov
out
incl
sub
scas
repnz
stos
pusha
mov
repz
xor
out
arpl
out
jno
mov
ss
sbb
add
out
les
stos
lea
addr16
daa
in
bound
ror
pop
in
call
mov
gs
inc
popl
in
lahf
sub
mov
jp
xor
jle
sbb
jns
or
mov
iret
mov
ret
icebp
popf
call
mov
scas
js
add
jge
sbb
lods
shlb
rcrl
addr16
xor
xchg
out
int3
test
add
xor
stc
adc
arpl
push
jne
subb
aam
hlt
push
jmp
xor
cmp
fwait
mov
negl
cmp
addl
cwtl
add
cmp
jbe
mov
mov
loopne
add
test
stos
fldpi
push
popa
add
pusha
fidivs
rcll
xor
cmp
push
js
idivb
mov
dec
adc
insl
mov
pusha
out
mov
mov
sbb
lret
and
imul
mov
sub
pop
xor
jge
sub
into
pop
and
into
pop
loop
out
clc
addl
movsb
outsl
or
xchg
pop
hlt
jnp
or
out
and
cmp
into
movsl
out
sbb
enter
jnp
or
inc
aam
lods
sbb
loope
loop
inc
insb
sbb
xor
xor
xor
fimull
dec
test
mov
inc
adc
pushf
push
fnstenv
pop
xchg
mov
xor
xchg
mov
add
loop
jmp
push
and
pop
sti
das
lods
js
mov
cmpsb
fildll
inc
jae
repz
rorl
or
push
inc
cld
popf
popf
or
rorl
imul
xor
lret
jmp
fstps
and
add
repz
adc
loop
out
bound
pusha
inc
imul
push
insb
cmp
push
inc
into
mov
repnz
inc
adc
test
adc
mov
cmp
jl
cmc
mov
push
ret
lods
scas
loope
mov
movsb
cmp
fadd
mov
mov
dec
dec
xchg
mov
repnz
jb
das
xchg
test
add
in
mov
sub
cmpsl
ja
and
icebp
adc
call
pop
ret
fdivl
dec
mov
stos
movsb
int
pop
in
lods
jl
dec
xor
xlat
cmp
fistl
dec
into
repz
sti
sbbb
fists
lea
insl
push
test
sbb
dec
jge
xchg
pop
das
pop
mov
or
lea
xchg
pop
sub
shlb
push
out
incb
repnz
inc
jo
xchg
cmpsb
mov
outsb
jne
sahf
cli
mov
iret
in
in
sbb
xor
ja
inc
ret
push
and
inc
push
aas
cmp
aad
lret
pop
xor
mov
iret
xchg
mov
ds
jne
and
ljmp
das
mov
jl
and
cld
hlt
fidivl
mov
cwtl
jne
cli
test
mov
test
add
icebp
pop
repz
cmp
rclb
sub
add
les
jmp
inc
addr16
lahf
add
pop
mov
addl
scas
mov
inc
in
push
cmp
jo
in
sahf
dec
pop
in
xchg
and
pop
add
fldcw
add
shlb
sub
xchg
add
mov
lods
repz
idivl
sahf
je
push
push
cld
lret
ffreep
or
cli
faddl
or
jnp
shl
in
les
outsb
jge
sbb
push
mov
push
rcl
loopne
xchg
mov
aam
cmp
add
nop
jnp
inc
push
std
mov
lods
iret
stos
repnz
cs
stos
xlat
mov
dec
jns
or
cmc
in
adc
jns
scas
insl
aam
sbb
add
adc
pop
sub
xor
divl
inc
push
insb
dec
or
pusha
cld
nop
out
pop
cmpsl
movsl
mov
xchg
cmp
mov
dec
test
cmp
xchg
ja
add
int
and
gs
jne
stc
sub
pop
test
and
out
pop
cmpsl
loope
mov
xchg
cltd
popf
mov
add
sub
xchg
in
je
xor
sbb
cs
daa
ret
ret
cmp
and
aad
test
cmp
sub
enter
mov
cmp
and
cmpsb
sbb
push
andl
stos
ljmp
dec
mov
lock
and
and
adc
mov
or
insb
push
cltd
cltd
fld
jae
loop
fimull
pop
mov
add
clc
xor
or
dec
outsb
sbb
shrb
filds
adc
inc
clc
xchg
stos
mov
pop
outsl
mov
or
push
dec
dec
mov
dec
mov
mov
sub
sub
inc
test
mov
xchg
ret
cmp
xchg
sbb
pop
xor
int3
sub
aad
mov
cmp
inc
mov
xor
and
inc
pop
jnp
add
imul
out
or
repnz
lahf
xchg
inc
or
aad
and
push
jnp
bound
dec
js
movsl
cmp
xchg
ficoms
mov
xchg
popa
cmp
fwait
and
popf
orb
xor
mov
xor
xchg
add
jle
idiv
ja
stos
loopne
std
in
mov
jo
sub
cwtl
dec
jo
enter
cmpsb
mov
inc
loopne
xor
ja
int3
insb
lods
sub
sbb
in
pushf
enter
movsl
repnz
add
cmp
jae
mov
pop
scas
inc
xor
cmp
push
or
and
inc
adc
les
jecxz
sbb
cmp
test
ret
mov
mov
int
or
ss
incb
mov
mov
sti
in
repz
xlat
add
leave
je
push
mov
sub
cmp
es
arpl
push
dec
dec
filds
mov
add
cs
arpl
sbb
cmc
scas
jbe
hlt
push
inc
cmpsb
imul
cmp
dec
mov
jl
lcall
mov
xlat
adc
cmpsl
shr
loopne
sti
xchg
mov
jbe
sbb
inc
jle
or
test
test
je
xchg
inc
scas
sub
daa
test
fstps
mov
movsl
mov
aas
outsb
pop
dec
fisubrs
pop
aam
jns
inc
sub
repz
inc
and
jg
inc
pop
push
jl
cmc
jb
cmp
mov
add
and
mov
push
or
or
adc
or
test
cmp
arpl
pop
jnp
push
cmp
jp
mov
push
test
adc
pop
inc
jae
clc
pop
lret
pop
push
add
push
dec
ret
xor
popa
subl
aas
daa
add
aad
in
lods
movsb
adc
jle
imul
out
fisubrl
xlat
test
aad
xchg
sahf
pop
and
jmp
push
mov
push
aas
push
out
lods
adc
hlt
fwait
cmp
mov
ret
mov
sbb
jne
test
push
enter
les
cmp
mov
andl
push
push
inc
mov
xchg
data16
lock
dec
stos
fsubr
lock
movsl
jns
dec
push
fiadds
cmpb
bound
je
adc
or
push
out
push
ds
mov
cld
cmp
mov
pop
out
fwait
jp
imul
je
lret
cwtl
xor
inc
movsl
add
sbb
rorl
sub
scas
jne
cmp
rclb
push
in
dec
inc
cmp
and
inc
adc
imul
xlat
aam
mov
outsl
roll
lock
mov
lods
dec
jl
push
sub
stos
cmpb
cmp
lods
pop
add
cmp
arpl
test
sub
fs
pop
mov
mov
push
addb
mov
imul
inc
inc
subb
mov
test
imul
inc
cmp
sbb
push
lcall
mov
push
fimuls
inc
cmc
dec
xorl
mov
jb
enter
lahf
mov
cltd
jmp
xlat
shlb
scas
cltd
jbe
mov
lret
jmp
popf
sub
push
fisttpl
cs
mov
sub
add
cld
in
jg
mov
mov
adc
loopne
xor
jbe
jl
or
lods
xchg
pusha
jge
pop
cld
inc
dec
test
shlb
popa
dec
test
ja
cmp
cli
aad
xlat
pop
insb
cmc
test
push
or
adc
adc
xor
inc
cmp
lock
dec
sbb
or
jecxz
imul
loope
stos
data16
repnz
fists
icebp
loop
xchg
pop
ss
scas
ja
xchg
sbb
pop
fwait
imul
loopne
stos
mov
fucom
mov
outsl
jno
jg
cmpsl
and
cltd
push
call
shl
adc
mov
lcall
xor
mov
dec
testb
neg
xchg
xchg
mov
subb
insb
shrb
fs
mov
pop
xchg
fisttpll
fstps
xchg
scas
cmp
imul
fdivrl
xor
arpl
pusha
out
nop
popa
and
pop
xlat
jp
or
loop
lahf
rcr
cmpsl
scas
test
adc
sbb
imul
xchg
pxor
add
lock
popa
fisubl
jae
sti
orl
or
add
push
out
in
jns
fs
pop
lret
sbb
int3
jp
in
mov
xchg
int3
jbe
sbb
jge
shrl
sbb
rcrl
jge
pop
pop
rcr
into
push
xor
insl
lods
pop
mov
pop
pop
jp
lea
in
xor
sarb
mov
hlt
test
sub
mov
mov
int
or
fistps
iret
jne
mov
mov
in
hlt
scas
sub
push
push
ja
dec
push
inc
inc
in
xchg
add
xlat
addr16
pop
sbb
push
outsb
dec
sbb
dec
arpl
pop
fstpl
test
cmc
xchg
sub
into
xchg
arpl
out
jmp
inc
cmc
repnz
movsl
std
lock
pop
popf
mov
mov
mov
mov
adc
inc
xchg
mov
gs
sbb
lods
jl
or
xor
sbb
movsl
leave
xchg
cmp
in
push
sbb
jecxz
mov
dec
mov
mov
in
and
clc
xchg
inc
ror
pusha
jns
adc
loop
rcl
adc
xchg
cmp
in
and
std
dec
mov
jecxz
pop
scas
iret
sub
je
test
clc
push
xor
xchg
dec
insb
imul
hlt
add
and
out
iret
int3
mov
aad
push
js
push
xchg
icebp
xchg
int
jmp
dec
insl
push
dec
call
mov
push
sbb
inc
and
repz
js
lcall
scas
out
mov
jmp
and
xor
sub
pop
idivb
or
ds
mov
push
int
sbb
pop
mov
inc
xchg
and
insl
mov
sub
jmp
push
popf
dec
jbe
notl
fcmovb
loopne
push
insl
out
xchg
adc
insb
dec
push
pop
adc
cs
push
xchg
in
test
inc
cld
lods
or
popf
movsl
fidivs
loope
ret
or
xchg
int
dec
sbb
cmp
aaa
sbb
insb
ffree
je
cmp
inc
dec
xchg
lret
dec
mov
add
loope
xchg
movsb
rcrb
ja
jb
out
push
das
mov
js
or
jns
pushf
pop
adc
fdiv
frstor
rol
iret
daa
stos
mov
xor
or
mov
ljmp
test
stos
insl
mov
xlat
and
pop
fldl
push
cs
and
sti
pop
mov
mov
jle
ror
sub
sub
mov
xor
test
mov
jnp
push
cltd
jecxz
enter
cltd
cmp
jbe
sbb
xor
sbb
lret
int
rcrb
jne
ret
jg
jecxz
scas
enter
rclb
lds
inc
cld
cmpsl
lds
and
xchg
mov
cmp
pushf
insb
mov
cmp
les
popf
ret
mov
push
inc
movsl
dec
pushf
lret
or
adc
test
xor
adc
cld
mov
fisttpl
into
add
mov
daa
sbb
int
cmp
sbb
and
cmpsb
mov
aad
add
pop
aaa
lock
aaa
lods
clc
aas
arpl
cmpsl
mov
popf
sbb
jne
or
mov
dec
jl
outsb
xor
inc
jle
addr16
mov
add
sbb
lds
pop
jb
and
xchg
popa
nop
xor
and
jno
dec
arpl
cmp
and
test
or
andl
jge
pusha
popa
loope
pop
into
dec
mov
add
jecxz
push
outsl
cmp
push
gs
inc
push
jg
sahf
mov
pop
xchg
fisubs
push
xor
pushf
jle
xor
or
adc
push
xor
add
roll
inc
dec
inc
xor
int3
rcrl
jl
lcall
cs
mov
sub
in
inc
mov
pop
xchg
adc
iret
bound
scas
fiaddl
inc
mov
sbb
push
push
adcb
cmp
fcoms
mov
pop
lcall
shlb
cmc
std
into
cmc
jnp
stos
insb
shlb
andb
stos
mov
int3
rcr
push
pop
mov
cmp
dec
cmp
dec
or
inc
loopne
mov
insl
loope
jge
mov
test
pop
lahf
dec
gs
ficomps
out
inc
push
dec
inc
mov
dec
add
push
cmp
jp
sbb
mov
dec
inc
fwait
pop
call
sbbb
mov
int
add
nop
movsl
stc
mov
daa
js
lea
add
repnz
sahf
push
pop
imul
adc
or
mov
sub
lea
adc
xor
outsb
inc
fisubl
jl
cmp
jns
lods
push
dec
push
cmpsb
mov
mov
mov
or
fimuls
adc
cmp
outsl
ds
clc
xchg
cmp
add
mov
loope
shlb
cmp
push
sbbl
cmp
cmp
cld
xlat
push
leave
push
rolb
sbb
sbb
xchg
mov
mov
lea
sub
mov
mov
jb
fs
test
shll
mov
pusha
inc
pop
xchg
lock
icebp
imul
mov
cmp
cmp
inc
jo
mov
divl
pushf
xchg
mov
jbe
rcll
jg
aad
movsl
pop
xchg
stc
pop
scas
out
leave
aaa
jbe
xchg
mov
mov
push
adc
popa
sub
stos
adc
addr16
cld
jnp
adc
add
fmull
ret
mov
mov
inc
jno
leave
xchg
out
jb
gs
lock
incb
int
div
sahf
fwait
push
call
fmuls
jmp
add
inc
xchg
and
dec
pop
cmp
or
and
mov
sbb
insl
lcall
pusha
in
inc
aad
cwtl
ja
and
pop
test
ljmp
andb
popf
inc
adc
inc
xchg
xchg
inc
js
dec
pop
jne
fldt
iret
out
adc
andl
mov
adc
ss
or
push
testl
lock
adc
and
fldl
fnstcw
dec
lret
jge
adc
in
in
and
cmpsl
mov
fs
imul
mov
pop
loopne
xor
mull
fs
ljmp
push
jns
loope
mov
jb
and
cmp
xorb
mov
aad
jl
add
fisubrl
cmp
or
sbb
push
pushf
pop
repz
mov
lret
adc
insl
mov
xor
pop
add
cmpsb
jno
jb
add
add
mov
xchg
outsb
cli
mov
dec
mov
adc
fsubp
addr16
fs
imul
iret
xor
jbe
xchg
in
cltd
jp
popf
xchg
push
sub
pop
test
sar
add
and
stc
adc
nop
fiadds
fdivrp
mov
addr16
add
and
inc
jmp
dec
lods
fstpl
loop
scas
pop
js,pt
cwtl
xchg
lret
pop
and
popf
sbb
inc
add
xor
push
std
push
xor
sbb
xchg
push
jae
ja
inc
aas
je
jnp
aad
mov
jl
aam
call
add
sbbl
push
cs
or
lods
xor
jne
xchg
adc
sbb
pop
push
test
inc
inc
jnp
bound
xor
adc
sub
xor
mov
cmp
pop
popa
jle
xchg
sub
rcr
add
movsl
fs
inc
sbb
orb
data16
or
ret
xorb
mov
jle
dec
and
repnz
sahf
loop
outsb
aaa
js
in
sbb
jmp
mov
push
lods
sbb
or
insl
mov
shlb
addl
or
inc
xor
jbe
add
loope
ret
mov
sbb
xor
orb
dec
inc
outsb
vmovups
enter
mov
imul
xchg
mov
icebp
adc
mov
push
ds
add
pop
idiv
mov
pusha
and
inc
scas
fxam
rorb
pop
push
pop
into
shrl
mov
pop
xlat
xchg
dec
mov
mov
movsb
lret
test
dec
negb
cli
inc
mov
pop
inc
repz
sahf
ja
inc
outsb
cmc
mov
sbb
movsb
lahf
lret
ljmp
lahf
mov
fstl
imul
sub
pop
or
enter
iret
popa
lret
stc
jle
xchg
js
into
nop
mov
add
mov
jmp
arpl
lock
mov
jmp
xchg
fstps
adc
jmp
into
cmpsl
mov
fs
sbb
jmp
xlat
negb
shll
js
inc
pop
lock
out
push
xchg
xchg
shrb
cwtl
mov
cmove
mov
mov
in
cmpsl
pop
xchg
pop
out
jg
fiadds
fwait
int3
insb
in
cwtl
add
lret
lds
loop
mov
iret
lock
push
fldl
and
nop
hlt
push
cs
sub
out
jo
jbe
lods
lea
mov
icebp
icebp
cmpsb
ljmp
xchg
mov
dec
push
lods
mov
insl
pushf
lret
ja
mov
test
sbb
pop
stc
nop
dec
jb
mov
int
dec
inc
cmp
enter
loope
in
jno
js
push
cs
int3
cmpsb
sbb
loopne
das
outsb
inc
mov
inc
mov
jmp
adc
pop
aad
pop
sbb
xor
test
mov
xor
dec
inc
cltd
dec
call
idivb
aas
push
sahf
push
out
push
in
sbb
cmp
pop
mov
fcompl
xchg
sub
xchg
sbb
and
xor
adc
inc
movsl
dec
sbb
sub
fwait
std
pop
pop
pop
repnz
xchg
in
ljmp
imul
int3
icebp
mov
shll
add
cs
xor
movsl
mov
test
imul
stc
das
and
sbb
jmp
jb
stos
fs
enter
adc
rcll
jno
mov
pop
es
sbb
or
jns
out
out
in
xorb
movsl
leave
sub
cmp
fisttps
jge
std
rcrb
inc
inc
inc
add
cltd
jae
fcmovnbe
stos
push
xor
push
jns
pop
sub
int3
out
nop
push
and
imul
mov
mulb
lods
push
or
sub
pusha
aam
push
xor
cwtl
test
insl
and
mov
pop
outsb
xchg
xchg
mov
scas
push
jge
dec
xor
ret
rorl
shlb
xchg
sbb
out
xor
out
lcall
cwtl
les
sbb
sub
xchg
jbe
nop
sti
dec
jne
repnz
dec
out
sub
test
shll
daa
lods
pop
ret
add
pop
jae
cmc
shl
cmp
mov
sbb
mov
enter
dec
mov
dec
mov
cmp
popa
dec
jecxz
in
jnp
clc
mov
rclb
sub
cmp
pop
cmp
js
xor
pop
push
in
ds
push
into
aas
lahf
rorl
add
sbb
or
lret
cmp
mov
sbb
mov
sbb
cmc
xor
jp
sbb
add
inc
inc
xor
test
mov
movsl
pop
push
adc
test
push
mov
mov
clc
push
mov
and
sti
loope
jb
sub
push
popf
shrl
movsl
dec
inc
loope
inc
pushf
repz
xchg
out
mov
cld
lock
aas
int
push
testb
jp
adc
dec
bound
loope
fisttpl
pop
mov
fistl
imul
subb
cmp
sbb
push
mov
inc
xchg
test
sbb
xlat
mov
popf
lds
sbb
scas
jnp
rcl
jle
add
cmpsb
scas
mov
add
daa
mov
sub
mov
add
test
icebp
mov
jo
fldt
mov
xchg
jp
xor
jns
loopne
and
xor
mov
movsl
insl
lea
arpl
fdivrs
std
lock
outsl
rcrb
dec
jl
pusha
xor
jne
xor
jae
xor
ficomps
jl
add
stos
lock
dec
mov
jae
xor
push
or
out
push
mov
lret
mov
dec
fidivs
pop
pop
mov
mov
mov
mov
jle
test
and
push
xchg
fucomi
das
call
inc
sbb
adc
and
in
pextrw
push
push
jmp
les
mov
xchg
cmp
fninit
inc
mov
push
pusha
popf
lods
sti
addr16
mov
sub
test
jmp
xor
pop
pop
sbb
jl
pop
lods
pop
inc
jg
jnp
cmpsb
push
sti
dec
loop
sub
dec
and
mov
flds
and
ss
es
push
lcall
test
jge
stc
ret
xchg
cmp
push
outsb
out
mov
mov
add
dec
push
sub
enter
jbe
add
jle
mov
push
addl
and
mov
je
push
inc
push
fstl
cmp
inc
sar
fsubs
mov
ret
adc
mov
out
mov
imul
ja
mov
stos
pop
jp
loop
and
sub
inc
jle
or
iret
inc
xchg
pop
insl
jo
push
loopne
cmp
dec
gs
inc
fwait
jmp
aaa
sbbb
sbb
movsb
pushf
lods
pop
je
add
jg
scas
enter
sbb
bound
or
jecxz
lcall
and
fstl
push
sti
fsubrl
mov
add
xchg
dec
cmc
push
xchg
jmp
imul
inc
add
addr16
test
xor
push
mov
test
jne
lods
mov
les
out
and
inc
lcall
inc
scas
cltd
cmpl
test
es
push
aad
cltd
gs
shll
dec
std
xchg
testb
loopne
enter
aam
inc
cmp
hlt
aas
cltd
dec
lahf
fwait
mov
pop
push
sarl
repz
jle
sub
fiaddl
push
cmp
add
rcl
sub
mov
mov
pop
xchg
and
inc
cmp
sub
insl
mov
add
lea
arpl
sub
and
jns
jb
loop
or
sbb
pop
push
xchg
stos
nop
lock
fldt
into
flds
popl
les
fmuls
push
dec
inc
pop
fs
lret
sbb
pop
cld
aam
push
imul
fstpt
fwait
mov
daa
aas
stos
mov
daa
mov
test
fidivl
add
cli
loop
mov
data16
sbb
hlt
dec
data16
stos
pop
movsb
adc
pop
shrl
or
cmpsl
jnp
test
mov
sub
ds
sub
imull
mov
mov
adc
insl
aad
les
xchg
mov
sub
lods
cmpl
lcall
clc
jg
popa
and
xorl
push
push
xor
xchg
mov
xor
push
inc
xchg
in
fdivr
les
inc
cmp
hlt
repz
mov
arpl
test
scas
push
sbb
in
mov
sti
lret
out
jg
cmc
fldl
imul
add
lret
lods
imul
aaa
mov
in
fidivs
bound
mov
ret
sub
ds
testl
pop
gs
cltd
lock
insl
push
shrb
imul
faddl
adc
xchg
mov
bound
xchg
test
add
pop
gs
mov
and
xchg
xchg
pop
pop
xchg
dec
insb
das
cmp
xchg
pusha
testb
inc
mov
sarl
and
mov
int
cmpsl
test
test
sbb
jp
mov
out
jmp
daa
sbb
pop
mov
arpl
int
rclb
hlt
iret
test
lret
sub
scas
loop
adc
mov
imul
iret
cmp
lcall
cmp
mov
jl
test
in
lcall
fdivl
sbb
imul
dec
movsb
setno
rol
out
comiss
inc
mov
mov
test
jmp
sahf
adcb
mov
xor
adcb
mov
xchg
pop
jecxz
jle
js
dec
mov
insb
ljmp
push
xor
popa
loopne
std
rcll
fiadds
push
dec
rcrl
cli
mov
stos
mov
pushf
sub
add
test
fstps
dec
mov
popf
pop
push
sub
jecxz
mov
mov
pusha
xor
insb
mov
add
or
jae
jl
loope
dec
push
dec
sub
addr16
sbb
push
fdivrs
lea
adc
mov
pop
jb
cs
pushf
inc
das
loope
push
sub
sub
mov
or
jg
pop
in
cmp
lret
pcmpgtb
xchg
jne
jle
cwtl
leave
push
jle
inc
iret
inc
adc
xor
in
dec
insb
mov
push
inc
inc
sahf
adc
fists
cmp
inc
cld
xchg
outsb
fnstsw
push
into
scas
add
ja
hlt
sub
xchg
enter
xchg
fimuls
ret
push
add
cmpsb
lcall
fwait
jns
push
out
jo
jbe
testl
sarb
cmp
fst
cld
dec
push
and
dec
loop
jmp
xor
movsl
xchg
sub
lods
mov
push
xchg
push
out
push
or
fisttpl
imul
jp
or
sbb
adc
dec
sbb
jns
sbb
and
mov
int3
into
dec
inc
mov
lret
mov
jno
cltd
es
cltd
idivb
insl
adc
stos
jb
push
andb
ss
arpl
inc
shll
insb
push
lods
loope
arpl
mov
adc
mov
xor
dec
xchg
ret
inc
lret
xchg
ss
xchg
or
xchg
sbb
cmpsl
adc
cmp
adc
das
add
test
call
lods
mov
mov
jae
and
rolb
xchg
mov
push
cmp
rcrb
mov
add
sbb
shll
jne
insl
imul
lods
or
scas
push
adc
xor
stos
out
jle
mov
push
test
daa
fcomps
add
out
mov
sub
pop
adc
pop
dec
addl
push
scas
sub
cld
cltd
add
iret
dec
int3
jae
adc
and
inc
ss
loopne
jmp
cld
jo
xchg
int
fstpl
mov
add
ljmp
inc
jg
in
addr16
mov
rcrb
jno
ljmp
in
mov
iret
mov
shll
rcll
sbb
sub
sub
lcall
mov
mov
pop
inc
popf
push
movl
add
jb
adc
ss
addl
jp
insb
nop
mov
pop
fs
inc
and
orl
adc
push
jns
loop
lret
iret
xor
xchg
cs
inc
popa
popa
ret
xor
sub
sub
jge
outsb
jecxz
fnstcw
inc
fbstp
mov
jge
dec
mov
mov
pop
add
movsb
cmc
aas
pop
pop
jno
xor
fidivrs
cld
pop
xlat
fwait
and
or
or
push
add
in
movsb
xor
push
sub
lret
pop
pop
xor
push
and
ljmp
lds
sbb
cltd
popa
clc
push
ljmp
sbb
and
cs
fsubrp
mov
cwtl
pop
clc
or
adc
adc
xchg
jge
aam
mov
push
leave
nop
pop
mov
add
ljmp
loope
lods
call
fwait
push
loopne
dec
xor
sub
loopne
jo
repz
cmp
out
movsl
or
mov
add
sub
mov
sbb
and
std
jp
decb
arpl
xchg
fdivr
ds
cmp
pop
adc
mov
push
lods
aaa
cmp
call
inc
xchg
fcmovb
ficompl
pop
jge
addb
lods
push
add
sub
in
mov
mov
inc
arpl
mov
rolb
push
mov
repz
int3
mov
in
xchg
sub
out
inc
fsubs
std
lret
outsb
push
cmp
daa
out
dec
adc
jo
outsl
insl
lret
andl
fdivp
aad
xchg
aam
push
cmc
push
fstps
rcrb
iret
pop
push
leave
dec
out
lret
ljmpw
loope
xor
ret
fwait
hlt
mov
loopne
inc
jns
sbb
mov
push
jecxz
mov
mov
mov
mov
stos
jns
mov
nop
lock
in
ss
sub
mov
inc
jl
es
repnz
and
jb
cmp
stos
in
addr16
fcoml
data16
loopne
pop
jge
dec
push
test
jge
mulb
push
jno
mov
stos
aam
les
lock
sti
cli
jnp
in
shrb
mov
mov
aam
dec
pop
xchg
jp
or
pop
cmpb
push
aas
negl
pop
cmp
mov
xchg
mov
cmpsl
push
lea
mov
jp
push
out
mov
mov
mov
pop
and
insl
out
std
shlb
jg
cmp
mov
out
pop
and
flds
mov
in
jnp
mov
dec
out
push
add
dec
add
pusha
inc
inc
push
xor
pop
outsl
xor
lcall
andb
comiss
mov
je
divb
scas
mov
shll
aam
clc
int3
push
push
push
mov
pop
movsl
lods
pop
jle
movsb
in
sub
stc
jae
dec
adc
ja
cmpsl
shll
push
cmpsb
jne
test
add
pusha
aas
hlt
mov
xor
jp
sub
ja
jmp
mov
clc
push
mov
fcoml
aaa
pop
mov
mov
lods
cltd
or
mov
xor
pop
dec
in
jb
push
push
ja
loope
add
pop
xchg
into
aad
lds
inc
xor
mov
pushf
cmp
les
jne
add
or
lds
sbb
das
outsb
xchg
xor
in
popa
repnz
inc
or
push
cmp
jecxz
ljmp
jge
sahf
push
in
cld
dec
and
es
imul
jl
jle
jmp
and
push
cmp
movsl
or
mov
mov
sbb
push
and
dec
das
cltd
and
insb
and
inc
dec
sub
cmp
cltd
xor
xchg
and
xchg
out
lods
push
mov
sbbl
dec
jo
push
mov
jge
dec
add
int
adc
out
andb
stos
xor
or
and
js
xchg
bswap
jae
push
cmp
jecxz
xor
or
push
pop
add
jb
xchg
orb
mov
cmc
stos
stos
mov
adc
or
push
fs
in
out
frstor
sbb
xchg
rcrb
cltd
push
sbbb
mov
addr16
mov
imul
sub
adc
xchg
jno
cmp
clc
xlat
dec
test
pusha
sub
sub
loop
in
vxorps
inc
fs
push
in
xor
mov
in
xchg
and
dec
xchg
pop
mov
dec
sbbl
imul
dec
in
loopne
jbe
cmp
fs
mov
lcall
cld
imul
scas
lahf
sub
rclb
les
outsb
lret
pop
and
mov
movsb
mov
pop
or
aad
pop
xor
cmp
testb
ljmp
lahf
mov
pop
outsl
and
pop
cmp
dec
or
sbb
jbe
mov
test
cmpsl
inc
dec
lea
subl
xor
and
or
inc
push
imul
not
xchg
jnp
fdivrs
js
add
xrelease
dec
dec
dec
pop
idivb
xor
cltd
decl
sti
xor
incl
sbb
sbb
pop
loopne
leave
xchg
insl
decb
aaa
inc
push
xchg
cmpl
mov
ja
xor
fisttpll
pusha
scas
outsl
cwtl
das
out
aas
jg
jnp
sbb
enter
ljmp
xchg
xchg
sub
mov
rolb
dec
mov
shlb
addr16
cmp
xchg
jb
daa
les
push
add
xor
and
or
lods
xor
in
int3
sub
inc
popf
insb
mov
or
cmpsl
adc
les
pushf
inc
jl
loope
jo
fbld
xchg
xlat
sub
cmp
fistpll
inc
repnz
mov
cmc
push
sub
and
repz
mulb
daa
pop
call
rorb
pop
int
fsub
faddl
imul
pop
fst
mov
xchg
loop
cld
push
clc
adc
sbb
iret
js
adc
jecxz
pop
std
stos
dec
cli
shrl
test
in
xchg
pop
repz
insl
inc
push
hlt
lret
cmpsl
nop
add
out
or
sbb
sbb
adc
push
pop
andl
in
hlt
es
jl
xor
dec
divb
dec
sub
inc
pop
std
mov
sbb
cwtl
outsl
scas
popa
lds
mov
pop
sub
add
addr16
jecxz
pop
addr16
mov
xchg
xor
add
call
mov
test
clc
les
pushf
inc
mov
push
mov
aad
xchg
cmp
lea
inc
sbb
movsb
mov
xor
lret
call
adc
setns
ret
push
mov
push
shrl
xchg
test
addr16
dec
jae
xchg
sbb
dec
jecxz
push
xor
mov
int3
ljmp
test
pop
add
inc
jecxz
cld
aad
cld
pop
pop
js
mov
xchg
cmpl
icebp
jo
jne
push
orl
sar
int3
loop,pn
mov
xor
mov
sub
scas
jge
es
xchg
xchg
mov
orb
subb
mov
jecxz
dec
cli
lods
cmp
lea
outsb
pushf
or
xchg
dec
sub
or
ljmp
fwait
lods
mov
adc
gs
fadds
dec
sahf
cmpsl
sub
mov
sub
mov
and
je
loope
out
in
int3
aas
mov
or
fistl
pop
lock
lods
out
shlb
daa
pop
mov
push
out
xor
mov
add
sbb
xchg
mov
add
ret
out
jl
adc
or
xor
pushf
mov
pop
jecxz
xor
cmpsl
stos
xchg
xchg
out
add
test
pusha
addl
inc
or
arpl
popf
mov
andl
ja
lea
pushf
mov
xor
mov
pushf
sub
sbb
fsubr
test
xchg
lock
xor
lods
cmp
repnz
pop
adc
push
into
cmp
mov
dec
cwtl
out
add
lods
stc
ljmp
mov
mov
adc
loop
push
sahf
sbb
xchg
addl
jno
stc
xchg
fcmovne
jg
daa
arpl
mov
lock
push
lock
call
out
je
adc
aaa
xchg
xor
je
dec
xchg
stos
mov
sbb
inc
or
imul
jnp
and
mov
mov
xor
and
xchg
mov
outsb
addb
xor
cli
adcb
orb
cltd
pop
mov
jl
fsubrs
shlb
jno
insl
xor
jae
mov
cmp
mov
xchg
sarl
shlb
loopne
int
sub
mull
jae
fs
aaa
sarl
inc
mov
dec
push
push
mov
or
hlt
hlt
mov
xchg
dec
pusha
in
dec
mov
push
add
xchg
pusha
mov
mov
mov
pusha
xor
or
jne
jnp
out
call
scas
sti
adc
and
jg
pop
jns
fnstcw
sar
xchg
xor
cmpsl
jne
push
add
jne
pop
lea
lret
fiaddl
push
call
cmp
rol
mov
sub
cmp
lods
xchg
inc
pop
xor
das
push
pop
addr16
pop
loope
mov
sub
mov
les
cli
cwtl
cmp
call
arpl
imul
inc
aad
pop
mov
hlt
xorb
ljmpw
mov
xchg
icebp
lods
inc
les
and
bound
sbb
ja
rorb
mov
cltd
mov
popa
data16
mov
sarl
pop
add
lea
aas
add
pop
pop
das
test
dec
xchg
adc
cmpb
pop
mov
add
jmp
push
hlt
push
jae
gs
addr16
ss
and
aad
sub
and
dec
mov
iret
dec
jne
adc
push
jl
adc
in
sub
xchg
mov
mov
nop
ret
aad
inc
sub
and
sub
xor
mov
mov
mov
lahf
sub
stos
mov
jnp
sti
xchg
leave
xchg
xor
push
sbb
add
inc
jno
or
or
jne
rclb
data16
mov
push
xor
adc
mov
dec
int3
mov
std
ljmp
pop
sti
xchg
sbb
cmp
or
dec
sub
lret
fisubrs
jae
js
sub
and
xor
jno
pop
imul
test
push
imul
gs
lret
jo
repnz
call
or
out
inc
int3
adcb
mov
in
mov
sub
mov
pop
fdivs
cli
lret
shrl
arpl
cmpb
adc
stos
shll
xor
and
jge
jp
xchg
mov
cmp
mov
adc
mov
and
out
mov
out
xor
cmp
int
xor
clc
pop
shl
push
mov
xor
int
ds
lods
in
imul
mov
mov
sarl
into
push
xor
cld
xor
fs
inc
mov
das
adc
add
fmull
mov
jecxz
mov
xchg
mov
mov
add
cmp
push
imulb
sbbl
mov
xchg
pop
out
or
rcl
inc
adc
cmp
push
mov
pop
mov
and
popa
outsb
xor
cltd
adc
addr16
xor
inc
cmp
push
test
sti
repnz
hlt
xor
lds
mov
mov
test
xor
shl
adc
ficoml
adc
lcall
adc
pop
call
inc
mov
add
nop
add
lds
arpl
jmp
cmp
mov
sub
jno
sbbl
jge
mov
sbb
mov
imul
inc
sbbl
push
test
daa
pop
jbe
lret
les
iret
mov
subl
cwtl
pop
xcrypt-ctr
cmpsl
sbb
pop
jmp
xchg
aas
add
cmp
mov
xor
push
sti
mov
sbb
test
popf
cmp
fs
jnp
add
fsts
je
cwtl
sub
fwait
adc
dec
sbb
out
in
iret
add
out
and
xchg
imul
add
call
divb
fisubl
out
fists
dec
pop
push
sbb
icebp
enter
call
pushf
sub
inc
outsb
or
icebp
cmp
lds
shl
mov
pop
dec
mov
add
das
outsb
daa
lds
mov
xchg
cmp
test
ret
push
sub
loop
jle
es
jl
xlat
in
orb
push
jns
jnp
mov
xor
lock
inc
std
add
push
je
pushf
ja
clc
sti
mov
into
or
mov
mov
shl
in
dec
pushf
inc
in
out
sub
xor
sbb
and
mov
out
pusha
out
xor
add
add
stc
bound
hlt
pop
sarb
movsl
int
dec
sbb
jp
addr16
adc
push
pop
int3
adc
xor
sbb
data16
out
fisttps
and
sub
xchg
adc
jmp
xor
lods
xchg
or
faddl
push
cli
sub
push
push
inc
mov
in
xchg
ljmp
lods
mov
add
pop
ja
stos
sbb
jae
imul
stos
repz
sbb
inc
test
ja
fisubs
cmp
std
test
ret
push
pop
inc
movsb
popa
negl
xchg
in
mov
icebp
fucomip
adc
loopne
in
and
xor
js
lret
addr16
mov
or
pop
pop
inc
inc
cwtl
shll
cwtl
adcb
lds
cmp
jb
mov
mov
push
inc
mov
dec
ja
or
mov
sbb
out
stc
fldpi
cwtl
cmp
aam
push
insb
rol
cmp
stc
mov
and
gs
push
jnp
xchg
xchg
pop
es
xchg
out
jle
jns
push
ffree
mov
inc
filds
addl
inc
push
dec
pop
xchg
cmp
adc
mov
das
or
aas
sbb
mov
lods
movsl
repnz
int
mov
mov
dec
mov
loop
xchg
or
dec
mov
cmp
sti
xor
mov
dec
test
adc
xorb
sbb
into
aaa
ficoml
js
push
mov
pop
xchg
iret
jo
mul
sub
fwait
cmp
ror
or
mov
sbb
xchg
jne
xchg
sub
dec
or
inc
insb
mov
jl
mov
xor
sub
cmpsb
or
mov
mov
sub
js
pop
xor
mov
fwait
mov
sub
int3
mov
pop
adc
sbb
push
push
pop
xchg
fwait
into
adc
jno
jo
ficoml
daa
ljmp
loopne
addl
or
dec
mov
lret
push
cwtl
je
int
push
ds
or
or
sbb
rcrl
or
jecxz
xchg
into
push
adc
aad
test
sar
xchg
mov
fistpl
hlt
or
inc
or
mov
icebp
mov
pop
mov
clc
faddl
and
scas
jb
outsb
jbe
mov
ljmp
or
and
or
sbb
hlt
scas
stos
ficoms
add
iret
push
pusha
dec
test
add
mov
sarb
ds
dec
cltd
pop
loopne
sarl
push
lods
pop
test
cs
jecxz
sbb
inc
pop
cwtl
test
mov
cmp
fistpll
pop
cmp
push
imul
dec
sbb
dec
dec
jo
add
mov
dec
cmp
jl
je
stc
sub
imul
mov
lcall
test
movsb
loope
cmp
sub
jb
in
and
pop
mov
inc
test
dec
lods
push
and
fcoml
mov
sub
xchg
test
cli
loopne
push
jg
or
sub
dec
cmp
daa
addr16
mov
adc
mov
jp
lcall
leave
les
mov
adc
adc
dec
les
test
jge
std
mov
sbb
daa
lahf
cmp
and
inc
push
add
movsb
adc
aas
mov
sahf
addr16
ljmp
mov
cmp
div
std
mov
sbb
push
enter
data16
add
xor
ss
adc
dec
mov
enter
lret
in
fnsave
mov
pop
pop
or
sbb
and
ss
or
incb
in
mov
or
push
inc
jnp
fucom
pop
push
sbb
mov
mov
lods
lahf
lcall
fcoms
arpl
loopne
mov
sub
jmp
fidivs
fnstenv
ds
in
or
sub
pusha
push
and
cltd
mov
sbb
scas
xchg
sub
and
xchg
cmp
in
pop
inc
sub
and
imul
pop
mov
push
sub
loopne
or
in
pop
mov
roll
dec
cmpsb
pushf
lods
test
lds
push
aaa
ficompl
add
and
inc
push
cmc
pop
or
and
popa
or
ret
mov
inc
sbb
jbe
scas
mov
stos
aas
test
cmp
mov
jbe
lock
pop
andb
inc
xchg
mov
out
adc
or
jne
gs
rorl
jns
les
jg
xchg
mov
stc
jnp
inc
out
add
mov
fidivl
arpl
arpl
ja
shll
je
inc
movsl
pop
ljmp
add
test
ror
mov
scas
add
dec
movsb
push
insb
gs
stc
pusha
test
xchg
add
mov
add
xchg
mov
push
cs
or
xchg
jmp
adc
cmp
addr16
jg
cs
jg
lods
dec
idivl
xchg
ret
iret
push
call
add
inc
sbb
or
outsl
sti
rcll
in
adc
fldl
jne
and
ffree
mov
jmp
and
int
data16
mov
push
aad
clc
mov
test
out
cmpb
xlat
sbb
cmp
and
cmpsl
push
mov
aad
xchg
into
out
or
jnp
enter
mov
into
sub
addr16
cmp
add
ja
loope
adc
fwait
xor
sub
testl
xor
cmp
pop
dec
pushl
fiaddl
sub
sub
mov
mov
les
lcall
out
sbb
inc
xchg
mov
adc
sub
jge
aad
dec
mov
idivl
div
inc
sbb
push
pop
out
cmp
xor
mov
mov
push
sbb
sti
push
sbb
les
bound
scas
pop
xor
mov
mov
imul
sub
adc
adcl
mov
cmpsl
and
push
add
dec
enter
jbe
dec
pop
pusha
fsubs
repnz
mov
fnsave
ficomps
scas
xchg
jp
dec
push
je
adc
dec
push
call
pushf
sub
daa
lret
ret
push
cs
adc
mov
push
pushf
jge
sbb
lcall
cmp
add
in
mov
dec
test
call
dec
mov
mov
jo
cmp
xchg
enter
dec
psrlq
jg
mov
dec
xlat
mov
jp
jp
pop
lods
insl
push
js
popa
add
lods
pop
fs
ret
mov
aad
push
stc
lods
jae
jl
jo
out
dec
data16
and
mov
cmpsb
xor
lcall
ds
xchg
sbb
adc
pop
jb
push
jb
arpl
mov
push
inc
fwait
in
mov
sub
out
pusha
xor
jg
mov
leave
lret
hlt
mov
xchg
test
movsl
aaa
inc
scas
mov
dec
outsb
dec
push
sti
dec
div
add
xchg
jl
sbb
out
push
and
xlat
ret
jmp
sub
repz
jne
bound
inc
inc
andl
lods
or
dec
jl
ja
das
mov
mov
jns
dec
sbb
lock
lret
fucomi
pop
xchg
clc
mov
push
popa
xchg
dec
inc
mov
cmp
xor
dec
imul
sar
les
aaa
xchg
out
sbbl
cli
fdivl
sti
mov
lcall
aaa
sbb
mov
sub
push
sub
ljmp
sub
das
mov
cltd
cmp
cmc
adc
ficoml
or
pop
or
sub
imul
insl
test
jnp
mov
mov
push
and
subl
aad
lret
inc
inc
ret
shll
push
ret
mov
sub
xchg
insl
loopne
gs
shrb
jmp
xor
popa
mov
push
mov
pop
outsb
stc
push
int
gs
sarl
lret
jge
add
adc
sbb
dec
fwait
mov
dec
icebp
daa
ja
aas
push
out
jo
and
lahf
idivl
xor
pop
int3
xchg
inc
insl
sub
mov
cmp
add
jmp
mov
push
xor
add
jg
and
mov
add
mov
or
js
jl
es
pop
or
jns
sub
jl
cmp
push
jns
push
shrl
pop
inc
sub
cmc
ss
out
outsl
imul
mov
push
pop
mov
lods
dec
arpl
dec
adc
gs
arpl
adc
ficompl
xchg
add
and
jne
mov
cmp
jmp
jmp
pop
sub
sub
mov
sarl
mov
pop
cmp
lahf
dec
aas
or
insl
mov
mov
addr16
ss
and
es
dec
jl
insl
adc
test
fcomp
cmc
jle
jmp
ss
add
in
cmp
xor
xchg
rcrb
inc
loop
fisubrs
add
out
mov
lahf
sarl
inc
data16
aas
mov
vrsqrtss
das
decb
fisubrl
xchg
inc
push
or
gs
pop
adc
lock
int3
sub
insb
mov
ss
and
mov
shll
xchg
mov
rol
js
add
pop
pop
divl
in
test
xchg
ret
xor
dec
add
cmpsl
add
adc
inc
je
arpl
roll
inc
adc
push
xchg
loopne
lret
mov
dec
adc
push
into
xor
arpl
jl
ret
arpl
adc
std
add
cld
into
fisubrs
xchg
in
shl
loopne
fs
cmp
pop
add
gs
fs
sarl
adc
jnp
gs
mov
jg
int
jbe
push
pop
and
sbb
or
aad
xor
popf
xor
pushf
les
mov
bound
clc
loopne
popf
mov
jne
jl
xchg
jb
add
mov
cmp
jmp
and
fisttps
fcoms
dec
xor
xor
mov
arpl
jecxz
je
outsb
add
push
adc
shrb
cli
aaa
fnsave
std
sti
imul
sahf
out
push
jae
jb
mov
cs
lock
movsl
sub
fisttpll
push
sub
dec
negb
mov
mov
ret
mov
dec
insb
dec
push
mov
imul
into
xor
xchg
cmpsb
adc
out
mov
xor
fcompp
or
mov
mov
jnp
jge
add
push
mov
inc
mov
cwtl
enter
cmpsl
or
jbe
in
ja
or
ljmp
in
test
mov
inc
mov
jae
jmp
add
lcall
mov
cwtl
dec
popa
adc
sbbl
mov
push
lahf
sub
or
xchg
pop
push
repz
and
xlat
cs
cwtl
out
sub
je
loopne
xlat
xlat
pop
test
mov
or
add
mov
dec
hlt
int3
movsb
mov
and
movsl
dec
add
sti
add
mov
sbb
mov
xchg
jge
and
jno
xchg
enter
xor
fsubs
test
pop
add
xor
cmp
stos
pop
xor
adc
andl
mul
mov
cltd
cli
dec
int3
ja
pop
out
xor
fists
and
js
cs
jl
pop
daa
sub
inc
loop
add
sbb
xlat
lock
imul
jmp
push
xlat
in
das
inc
push
dec
dec
mov
mov
call
jns
jg
data16
add
nop
imul
test
jne
pop
jmp
int
lock
jns
popa
mov
mov
mov
mov
pop
fst
push
cli
mov
neg
cmp
mov
sbb
adc
shl
ja
dec
and
filds
pop
push
nop
shll
out
test
mov
in
lds
sbb
fisttpll
dec
push
inc
ds
rorl
inc
std
add
out
adc
lds
adc
jbe
aad
mov
js
pop
notl
fldl
jbe
cmp
mov
dec
scas
je
pop
sub
push
mov
jmp
add
es
daa
repz
pop
inc
sbb
out
nop
xorb
push
repnz
test
outsl
xor
out
popa
pop
sbb
pop
cwtl
clc
push
mov
push
rol
or
push
scas
aaa
xchg
out
mov
inc
cmove
jne
inc
dec
js
js
cmp
pop
je
and
xchg
int3
stos
sbb
pop
daa
dec
ficoml
jbe
sub
inc
mov
shrl
cs
jbe
out
mov
fbstp
iret
insl
push
add
fidivrl
jne
mov
xor
inc
mov
add
sub
cmp
dec
aas
sub
dec
mov
push
sub
xor
mov
xor
push
cli
jge
sbb
data16
int3
inc
push
lcall
cwtl
popf
xchg
repnz
xor
or
inc
popa
cld
push
and
sbb
push
roll
cmp
inc
aaa
movsb
movsl
sub
call
fwait
or
ret
ror
movsl
bound
sub
in
out
mov
dec
mov
ret
daa
xor
jo
shll
pop
fisttpl
jno
inc
pop
sub
push
mov
mov
cwtl
xor
mov
lods
xorb
jge
and
mov
test
add
dec
inc
mov
shr
int3
clc
adc
js
inc
push
leave
and
xchg
mov
sub
sbb
bound
jne
pop
add
xchg
das
jb
es
lods
pop
lds
mov
lock
enter
fisubs
push
and
lea
sub
scas
sub
mov
jp
sbb
and
dec
aaa
es
imul
mov
out
jp
leave
daa
or
pusha
push
jmp
mov
ljmp
xchg
lret
push
call
imul
ret
loope
ds
ror
pop
sbb
adc
dec
adc
hlt
mov
std
pop
mov
jno
cmp
xor
sahf
psubd
or
push
gs
mov
mov
or
jmp
dec
mov
push
popf
cmp
xor
lahf
xor
in
stos
mov
rep
out
fwait
data16
or
loope
jnp
dec
and
frstpm(287
push
in
mov
movsl
jnp
xchg
push
test
cmp
fs
mov
insl
jae
data16
fbld
fst
pop
lds
bound
mov
in
add
stos
out
pushf
adc
and
dec
data16
movsb
outsl
jns,pn
fcomip
jno
das
dec
repnz
push
les
mov
sahf
jne
je
fcoml
mov
xchg
in
iret
loop
dec
dec
mov
dec
push
dec
fstpl
hlt
pop
mov
sbb
in
enter
mov
adc
xorb
insb
mov
cwtl
fstl
cmp
lcall
dec
push
cmp
fiadds
mov
out
add
lods
xor
sti
pushf
arpl
mov
mov
jecxz
stos
bound
jae
iret
fwait
or
jne
das
stc
mov
addl
stos
mov
xchg
test
sbb
ret
imul
xchg
dec
divb
aam
pop
fwait
lods
add
rolb
test
cld
bound
push
je
test
pop
jb
mov
fcomi
push
mov
and
out
xor
inc
push
hlt
ds
sub
call
adc
loop
adc
adc
ss
jecxz
cs
mov
and
js
mov
or
rcrb
outsl
out
push
pop
or
or
sub
shrb
fcoml
push
dec
add
stc
cs
lock
jg
hlt
test
jge
loopne
ret
dec
repnz
pushl
sub
push
lcall
pop
cld
jp
clc
pop
stc
pop
jge
xor
call
fsubrl
mov
jno
aam
dec
jb
fcomip
mov
push
or
and
adc
mov
fmull
outsb
fmul
sub
cmpsb
shrl
cmpb
sbbl
push
repz
jno
xchg
push
std
testl
jno
lods
mov
lods
mov
andl
repnz
sub
pop
inc
clc
fldenv
and
inc
lahf
pop
cmp
cmp
mov
mov
movsl
jmp
xor
cs
cmpsl
dec
sbb
mov
inc
loop
jns
out
push
pop
mov
scas
cmpsl
mov
lods
outsl
sbb
imul
sbb
mov
and
les
and
adc
cmp
cmp
and
pop
adc
and
cmp
jae
fldl
push
mov
scas
sub
les
leave
and
dec
sub
decl
sbb
cmc
jns
stc
cld
incl
push
and
call
add
loopne
jo
loopne
je
sub
sbb
jl
xchg
bound
orl
fcomp
sbb
sub
push
mov
xorl
dec
cmpsb
mov
clc
pop
jae
cmp
addl
pusha
mov
xchg
xlat
and
bnd
or
xorl
mov
inc
jmp
or
push
pusha
imul
movsb
test
push
push
cmp
imul
dec
dec
sahf
mov
inc
mov
dec
aas
lock
cmp
add
jp
mov
jle
loop
xchg
arpl
lcall
cmp
cli
in
cltd
jmpw
out
pusha
xchg
sbb
cmp
mov
and
pop
jg
push
push
dec
xchg
movsl
test
stos
outsl
xor
inc
xchg
popf
push
and
xchg
je
lahf
jp
xchg
roll
adc
insl
push
fimuls
stc
add
cmpsl
stc
ret
in
push
and
stc
das
imul
scas
mov
pop
adc
jae
sbb
and
fadd
xchg
xchg
lret
or
je
mov
dec
inc
lea
sahf
jnp
xlat
int
movsb
insb
and
push
and
xor
cmp
mov
loop
mov
jae
frstor
or
mov
push
mov
faddl
jecxz
mov
lret
dec
inc
fldcw
out
mov
ror
mov
cld
pop
rorl
mov
jo
fdivrs
push
jmp
xchg
cmpsb
pop
fadds
mov
call
aad
cmp
jle
pop
add
inc
ds
in
jmp
dec
mov
xchg
cs
and
repnz
out
jae,pt
add
inc
jle
bound
sub
xchg
sbb
xchg
call
jl
lds
jb
inc
xor
pop
xor
es
sub
mov
addl
mov
aam
mov
xor
aas
dec
dec
adc
aad
jge
stos
push
imul
mov
loopne
fucom
lock
js
testb
ss
sar
loopne
cld
insl
or
push
inc
or
loope
cmp
xchg
push
dec
add
pop
push
lods
xchg
add
mov
push
addb
add
mov
push
adc
jb
push
sar
xchg
sub
cmpsb
daa
or
fldenv
subl
popf
fcomip
jmp
mov
pop
add
test
mov
or
pop
add
lea
movsb
imul
jnp
pop
fs
popf
pusha
out
insl
out
inc
mov
lea
xchg
add
or
mov
or
incl
int
sbb
mov
pop
sub
mov
xor
out
dec
fwait
leave
rcrl
jne
ds
inc
repnz
xchg
stc
xchg
push
inc
mov
pop
pusha
xor
mov
clc
ja
mov
insb
inc
lock
es
sub
out
lahf
out
jle
sub
mov
jl
and
pop
or
pop
dec
mov
mov
pop
pusha
sbb
mov
push
xchg
out
push
jae
rol
jmp
mov
enter
movsb
cmc
andb
icebp
push
js
imul
inc
cmp
inc
or
pop
mov
lret
xlat
jle
mov
add
pop
sub
into
sub
stc
das
pop
and
xor
mov
cli
outsl
mov
mov
out
ficoms
cmp
jl
movsl
adc
xchg
sbb
or
push
jle
pop
jp
in
push
out
js
outsl
mov
daa
mov
insb
jae
jno
js
fcmovnb
into
and
cmp
or
cmp
rol
cmpsb
mov
aas
ss
daa
ja
sub
mov
xor
pop
decb
push
loope
fdivrp
aad
sbb
pop
mov
xchg
adc
adc
out
push
or
jne
cmpl
xchg
sahf
add
cmp
stos
cwtl
fnstenv
cmpsb
lcall
jno
cmp
test
mov
shlb
cmpsl
imull
inc
sbb
sbb
stc
movsb
add
js
fisubl
or
clc
fistl
lret
jmp
or
xor
fcoml
xchg
jo
push
sbb
pmullw
push
sub
aam
sbb
xor
stos
lcall
jns
jno
mov
mov
sbb
test
repz
out
mov
cmc
enter
pushf
loope
push
repnz
xchg
mov
scas
popa
jle
ds
xchg
dec
mov
add
fcmovu
popf
scas
dec
sub
push
jmp
mov
jbe
dec
repnz
fisubrl
mov
and
and
daa
bound
shlb
loop
scas
xor
call
cmpsb
push
jae
mov
or
inc
mov
mov
imul
shrb
fs
stos
sub
mov
stos
sub
and
fmuls
mov
pop
divb
xchg
jae
aaa
jnp
add
mov
lds
cmp
push
inc
jo
loopne
pushf
cli
inc
ret
in
jp
fs
aas
das
and
jmp
adc
pop
filds
lock
inc
sbb
int3
mov
mov
fcmovnu
or
or
nop
loope
gs
dec
mov
andb
sti
inc
adc
mov
jno
xchg
cld
pop
std
jmp
addb
lcall
aaa
xchg
mul
and
out
xchg
mov
pop
mov
loope
push
xor
in
clc
nop
mov
sarl
jmp
pop
cmp
inc
or
imul
lret
adc
out
je
ret
pop
enter
mov
fisubrs
bound
rcrb
fnstenv
in
aaa
dec
loope
pop
in
cmp
fnstenv
and
or
mov
dec
shl
mov
pusha
cmp
std
fucomi
push
aaa
frstor
rcrb
shr
fwait
push
push
jno
pop
popf
insl
mov
lds
outsl
mov
pop
stc
loop
xchg
aad
mov
mov
xchg
mov
rol
pop
push
test
mov
sahf
xlat
fildll
fcmovnb
push
xor
nop
push
jge
mov
lea
adc
mov
sbb
mov
sub
add
fdivr
sub
dec
dec
es
inc
rcrb
jmpw
ret
cs
mov
mov
jge
or
lahf
cmp
mov
scas
pop
cmp
adc
outsl
cli
xor
mov
out
sub
mov
cmp
push
loop
push
out
aad
gs
mov
push
inc
push
movsl
xchg
std
pop
add
fcompl
jae
das
out
aad
je
xlat
sub
inc
ret
lock
and
pop
ss
add
and
aaa
xchg
jno
outsl
cmpsb
jecxz
add
sub
add
aam
jae
ret
pop
sub
out
mov
xor
nop
aas
dec
lock
hlt
dec
arpl
cli
jmp
pusha
inc
push
mov
scas
test
jl
and
mov
lods
dec
or
push
mov
stos
stc
mov
pop
mov
cmp
testl
add
enter
and
cmpsb
fdivl
int
xchg
mov
pop
pop
xchg
jno
jb
push
adc
test
ficoms
add
clc
pop
jge
shll
loope
cmp
sub
adc
sub
mov
or
fidivrl
sub
lret
repnz
xor
sub
pop
push
outsb
inc
rcrb
xorl
fcompl
test
ficomps
push
jb
inc
or
fcompl
adc
or
aad
push
adc
xor
testl
mov
mov
jmp
cs
push
and
mov
adc
or
sarb
push
fbld
mov
xchg
xor
insb
push
in
mov
dec
das
out
jb
cs
shll
pushf
mov
test
and
stos
cmpsl
test
sub
xchg
mov
arpl
hlt
out
or
adcb
mov
fisubrs
lods
mov
mov
ds
and
shr
out
cld
int
xor
mov
xchg
enter
push
dec
test
ret
xchg
jne
xlat
mov
pop
mov
aam
add
orl
or
cli
sahf
shrb
fs
lahf
xchg
or
loopne
xchg
incl
sub
cld
mov
call
into
and
sbbl
scas
dec
stos
xor
cwtl
push
jecxz
testl
xchg
xchg
fistpl
adc
xchg
push
dec
sub
and
lods
mov
mov
pop
or
fbstp
and
mov
test
push
mov
push
loope
push
jno
xchg
ficomps
fwait
in
mov
push
or
cmp
addr16
and
jbe
dec
mov
adc
xchg
int3
xchg
pop
jp
inc
sbb
out
inc
aas
xor
pop
in
aam
ficoml
push
sbb
notb
push
sarl
xor
cmc
mov
stos
add
mov
mov
jp
loopne
add
mov
jp
push
pop
int
shl
lret
dec
in
in
mov
or
mov
mov
int
mov
mov
sbb
mov
loop
mov
mov
adc
test
xor
xchg
dec
lock
insb
inc
das
lods
jnp
je
test
inc
cli
xchg
test
mov
popf
hlt
div
ss
sbb
adc
add
fadds
and
mov
jno
cmp
in
subl
imul
jmp
xor
aas
add
mov
nop
pop
fildll
into
repnz
jge
jnp
aas
or
pop
and
inc
and
rcll
dec
jnp
push
or
adc
fisubrl
add
je
push
arpl
les
xchg
or
mov
lret
call
icebp
cmpsb
sahf
pushf
divb
mov
clc
inc
popa
pop
dec
pop
mov
clc
push
cmpsb
call
jbe
fldl
mov
cli
push
pop
xchg
cmpl
mov
push
mov
and
xor
cmp
xchg
push
das
push
mov
popa
fnstcw
cld
xchg
in
fwait
lds
mov
xchg
add
leave
lods
repz
adc
mov
inc
xchg
sbb
dec
pop
push
and
add
dec
lea
popa
mov
shrl
stos
stos
cs
adc
add
clc
jecxz
add
mov
ljmp
cmpl
push
add
mov
cmp
xchg
divl
mov
lds
idivl
subl
sub
pop
sub
adc
rol
sbbb
data16
or
adc
shrl
rolb
inc
xlat
xchg
shl
dec
sbb
aas
cld
jno
xchg
add
fldl
mov
ffreep
pop
adc
mov
es
in
jae
loop
stos
sbb
cld
ss
or
xchg
push
inc
fbld
pop
cli
dec
imul
dec
test
movl
notl
xor
adc
call
mov
or
mov
pop
rclb
scas
pusha
mov
pop
movsl
xor
in
and
xchg
xor
inc
sahf
mov
pop
movsb
mov
jge
lds
scas
jnp
shrb
pop
sti
or
cmc
call
inc
jge
push
ret
lret
pushf
pop
xchg
jmp
pop
xchg
push
mov
add
cltd
dec
daa
test
sub
adc
iret
bound
cmp
pop
fstps
nop
dec
outsb
lcall
addr16
jae
insb
cwtl
mov
jbe
push
jmp
je
addr16
mov
fistps
cltd
jmp
cmpsb
and
aam
mov
ja
pop
pop
cmp
mov
xchg
repz
mov
lahf
rolb
add
mov
xchg
push
push
mov
inc
adc
sbb
fs
fwait
xchg
mov
scas
inc
mov
add
xor
scas
scas
sbb
sbb
movb
sbb
cmp
inc
movsb
push
lods
mov
lahf
sub
dec
icebp
dec
push
sbbb
jns
pop
dec
stc
je
orl
or
mov
call
sbb
loop
mov
sbb
inc
scas
push
mov
xor
int3
or
inc
out
mov
in
cmp
fstpt
scas
mov
cmp
insb
jmp
dec
xor
push
aam
lods
lods
add
imul
nop
call
rolb
gs
dec
ss
jmp
push
aam
mov
clc
dec
test
iret
data16
insl
mov
adc
pop
and
adc
ds
lods
add
lods
and
xchg
mov
pminub
jl
imul
xchg
jnp
xchg
rcrb
lods
flds
scas
addb
adc
and
leave
xor
or
pusha
mov
add
les
adc
dec
call
cld
dec
push
das
xor
sbb
mov
loope
iret
cwtl
fnstsw
push
sub
push
jo
pop
cwtl
aas
inc
test
mov
mov
loop
pop
xchg
pushl
loopne
jne
fildl
out
jae
mov
in
rcrl
cmp
in
test
aad
or
insl
pop
mov
test
pop
mov
nop
mov
inc
push
or
rorl
inc
jne
dec
xchg
fsubrl
mov
cmp
xchg
cli
pop
subl
fists
mov
xchg
xchg
pop
ja
stc
dec
or
adc
mov
sbb
das
fwait
dec
pop
mov
leave
addl
in
push
jnp
in
jno
fcoms
cmp
mov
pop
add
adc
popf
sub
inc
fbld
pop
imul
add
in
pop
pop
inc
sbb
pop
sbb
repnz
int
mov
adc
popa
pop
mov
push
pop
add
ret
xor
push
inc
and
nop
inc
popa
clc
mov
scas
ja
mov
xor
fisttpll
add
mov
das
std
or
push
mov
mov
stc
movsl
sbb
jg
sbb
or
imul
cmp
repnz
xlat
jg
cld
push
cltd
lret
push
std
jne
loope
ja
inc
stc
xor
add
push
jns
notl
add
dec
mov
cltd
jmp
xorb
cmp
dec
stos
std
and
out
xor
leave
dec
jnp
out
stos
ret
mov
lods
lock
push
mov
inc
iret
and
mov
jae
ljmp
sti
sbbl
ljmp
loope
push
mov
dec
pop
out
enter
sub
test
xorb
addr16
dec
outsl
pop
xchg
ret
imul
outsl
push
rclb
daa
inc
sbb
sub
lock
mov
cs
cmp
cmp
into
adc
mov
daa
dec
lods
int3
inc
test
adc
mov
pop
pop
lods
rclb
outsl
push
pop
add
pop
push
ds
fisttps
int
stos
test
cwtl
or
adc
les
and
mov
outsb
andl
fistpll
lret
fmull
data16
std
mov
pop
cmp
cmp
sub
lea
inc
mov
out
ja
mov
leave
mov
repnz
push
fwait
xchg
cmp
es
cmpsl
mov
test
out
pop
dec
or
fnstcw
lret
xor
cmp
jecxz
inc
insb
jne
imul
mov
pop
jbe
in
inc
sbb
lods
lods
movsl
adc
mov
dec
cmp
inc
mov
xchg
lea
mov
xchg
push
ds
ret
repz
sub
idivb
call
cmc
sbb
sahf
xchg
pop
jl
mov
notl
lock
push
sbb
iret
pushf
xchg
inc
sbb
mov
mov
jg
test
xchg
aad
push
hlt
add
rcr
xlat
inc
je
in
push
sub
xor
lock
test
into
inc
repnz
orl
mov
or
lock
aas
and
mov
mov
xchg
mov
out
pop
incb
fcmovnb
cwtl
hlt
lcall
dec
xor
aaa
in
xor
push
xor
iret
lret
mov
inc
mov
icebp
in
test
mov
mov
sub
jnp
mov
xlat
jbe
mov
fdivrs
xchg
insb
bound
aad
lods
lahf
js
push
scas
js
fsubrp
adc
cltd
mov
and
inc
cwtl
sbb
mov
outsl
sub
add
out
pop
scas
push
xor
and
or
pushf
add
stos
lods
xchg
xor
pop
xor
xor
or
scas
sbb
push
roll
xchg
xchg
jmp
sahf
gs
in
adc
test
xor
and
int3
dec
mov
add
or
add
fdivr
outsb
das
addl
sbb
sub
cwtl
mov
aaa
xchg
in
std
push
outsb
mov
clc
push
sub
mov
insb
js
push
xchg
sbb
movsb
dec
imul
in
clc
or
in
pop
push
pop
xchg
push
js
sbb
push
jno
pop
imul
xor
pop
lret
jl
mov
jb
orl
js
scas
pcmpeqb
mov
mov
sbb
mov
call
mull
xchg
aas
aad
inc
fnstcw
repnz
std
int3
cltd
or
imul
push
fs
lea
jl
bound
sub
inc
push
out
cmc
mov
add
or
sub
inc
lods
xchg
test
in
ds
dec
repz
inc
cmp
inc
cmpsb
test
stc
nopl
xor
shll
xchg
scas
push
dec
cmp
inc
xchg
es
call
nop
dec
fcmovu
repnz
mov
pop
pop
cwtl
repz
popa
jle
scas
ret
lea
mov
jle
ja
dec
shll
xchg
sub
fdivs
cwtl
dec
jg
rolb
js
cmp
insl
out
xlat
sub
sbb
icebp
test
fnstsw
jecxz
xchg
out
and
es
arpl
mov
jle
je
sbb
adc
adc
sbb
inc
jl,pn
push
pop
fiadds
popa
adc
and
add
or
mov
test
jg
aad
cs
nop
fwait
repz
jecxz
in
mov
inc
data16
out
xchg
dec
mov
jmp
outsl
fwait
aad
fidivrl
mov
sbb
jle
sub
scas
lcall
fisttpl
cli
lret
push
out
xor
incb
cld
lods
leave
pop
pushf
pushf
inc
subb
xor
push
cwtl
lods
int
mov
shll
push
jecxz
jmp
xor
mov
adc
xchg
adc
bound
pushf
arpl
inc
mov
scas
or
push
pop
xor
mov
or
add
mov
mov
les
imul
push
clc
in
mov
fsubrs
inc
es
ret
movsl
daa
std
or
fldenv
and
pop
ret
into
arpl
cmp
mov
out
mov
fcoms
mov
jo
jmp
test
jns
cmp
mov
and
cwtl
lock
push
daa
movsb
mov
jb
sbb
inc
orb
jb
pop
mov
mov
xchg
lods
scas
popa
mov
rolb
call
adc
insb
adc
add
inc
icebp
inc
imul
fldcw
jl
jg
mov
inc
jb
scas
mov
outsl
shll
jmp
xlat
push
inc
fdiv
cmc
rcll
sbb
or
mov
movsb
icebp
fs
out
pop
inc
cmp
dec
frstor
mov
shll
hlt
push
sub
popf
test
lods
nop
arpl
cmpsb
push
sbb
in
fiaddl
loop
dec
pop
xorl
in
and
test
cmp
adc
xchg
ds
jge
push
push
loopne
out
sub
adc
or
inc
stos
pop
ret
xchg
adc
out
lea
sbb
test
fdiv
insb
fisttps
popf
cmp
add
je
push
sahf
movsb
mov
repnz
jae
in
or
push
neg
repz
test
and
divl
leave
mov
je
adc
int
jnp
xor
out
ja
inc
les
push
dec
gs
cli
push
fstpl
inc
popa
stos
ret
add
mov
xchg
out
outsb
pop
or
add
jnp
jg
pop
xchg
fisubl
xor
out
mov
je
xchg
clc
sub
icebp
loope
and
aad
mov
fistps
inc
cmp
mov
pushf
inc
xor
mov
int3
inc
cmp
xchg
cmp
pusha
clc
dec
test
push
orl
push
mov
out
cli
pop
ss
ja
aaa
ljmp
mov
insb
push
iret
js
sub
jbe
cmpl
movsb
cmpsl
inc
testb
lret
inc
push
xchg
in
xchg
enter
mov
aam
inc
sbb
push
addr16
dec
unpckhps
mov
imul
adc
dec
les
xchg
insl
mov
xchg
mov
jecxz
rcrl
stc
mov
sbb
cmp
mov
lds
mov
jne
dec
add
in
fldcw
insl
mov
stos
daa
mov
test
clc
add
pop
jg
or
aaa
mov
jo
jne
popf
sbb
add
mov
fisttps
fucomp
cmc
dec
mov
cmp
icebp
pop
pop
jle
sbb
out
add
jg
in
xor
movb
sbb
jb
inc
rorl
sub
adc
push
jb
xor
pop
hlt
outsb
inc
je
daa
mov
add
adc
int3
out
sub
inc
lcall
fisubrs
rcrl
insb
arpl
xchg
mov
les
and
loopne
xchg
cmpb
rcrl
inc
inc
inc
fdivr
shll
inc
nop
jno
push
insb
mov
cmp
mov
outsl
sbb
mov
dec
xchg
mov
xchg
sbb
pop
pusha
cmp
mov
scas
jecxz
pop
mov
rolb
cmp
lea
aas
lods
sti
insl
stc
inc
mov
in
movsl
and
ret
jmp
push
cmp
xor
inc
sbb
outsb
mov
mov
jmp
outsb
jo
mov
pop
mov
mov
cmpsb
mov
sbb
loopne
jo
daa
movsl
cmp
dec
sub
sti
out
dec
mov
dec
lock
mov
xchg
out
adc
mov
jmp
jns
pushf
pop
dec
fldenv
inc
test
xor
pop
sahf
popf
fildl
pop
movsb
cmp
inc
xorl
push
cmove
adc
js
push
sbb
mov
adc
mov
repnz
jmp
arpl
scas
mov
xchg
mov
sub
int3
sbb
xchg
and
insb
xor
jbe
movsl
adc
mov
rolb
fstl
rorb
in
lea
mov
stos
scas
xor
jne
mov
popf
add
cli
pop
int3
daa
push
push
sub
out
xchg
popf
cmp
out
or
jge
mov
xor
repz
cmpxchg
pop
push
cmp
lods
in
add
or
inc
movsb
inc
cmp
mov
xlat
outsb
dec
stc
test
push
orb
mov
sbb
iret
adc
mov
notl
add
hlt
shll
rorb
cmp
xlat
mov
les
xchg
subb
and
and
xchg
xchg
push
mov
cs
ja
insb
out
movb
cli
sub
outsl
adc
mov
adc
into
cmc
stc
std
cmp
aam
or
jecxz
mov
addl
and
mov
adc
xor
sbb
div
imul
mull
mov
sbb
lcall
loop
divl
jmp
and
mov
jg,pn
cmc
or
inc
dec
sub
jmp
add
xchg
stc
insl
mov
and
jne
nop
xchg
loope
cwtl
enter
in
adc
or
pop
inc
xor
push
out
test
mov
add
mov
stos
inc
cltd
sub
xorl
sbb
pusha
and
stos
subl
and
popa
jg
sbb
push
and
add
mov
mov
aaa
ss
mov
imul
sbb
mov
mov
test
dec
icebp
push
shrb
dec
test
hlt
int3
gs
shll
cmpsb
aam
pushf
jp
call
arpl
fsubrl
rorl
pop
jnp
repnz
push
pop
das
ja
sbb
xchg
sub
xlat
test
dec
mov
mov
icebp
adcb
pop
js
sub
scas
xchg
mov
jmp
cld
jge
mov
fsubs
mov
cwtl
rcrl
aas
jb
sbb
mov
test
dec
jne
adcb
adc
test
push
sbb
pop
sub
fwait
push
sbb
ds
leave
sub
inc
push
push
iret
and
pusha
pop
fld
js
and
dec
hlt
pop
jns
xchg
push
xorl
sub
or
icebp
adc
xor
lods
pop
xorl
pop
and
clc
jnp
jecxz
mov
mov
ds
xor
push
cld
mov
xchg
iret
mov
mov
jmp
jo
fmuls
jno
mov
ret
in
xchg
sbb
outsb
stos
cmp
xlat
jb
xlat
testb
jp
push
ss
add
lods
lret
pop
inc
xchg
lea
mov
dec
adc
pop
mov
adc
out
mov
dec
clc
adcl
sub
std
nop
push
jnp
adc
lods
scas
les
adc
add
cmpsb
or
mov
ss
sub
pop
or
mov
inc
and
lret
mov
and
popa
popf
pop
aad
sub
mov
pop
mov
adc
cmp
sbb
push
xor
mov
and
hlt
sbb
ss
inc
or
pop
jns
shll
lods
das
hlt
or
add
xchg
imul
lret
rclb
add
scas
pusha
pop
and
in
aas
add
lods
jne
sbb
mov
jno
lock
add
jno
out
ror
cmpsb
pop
mov
or
xchg
and
loop
sbb
mov
cmp
repz
ljmp
dec
or
or
imul
les
nop
fstpt
adc
adc
stos
ljmp
pushf
out
test
push
cmp
bnd
test
mov
sbb
push
dec
ret
push
mov
adc
sbbb
out
cmp
adc
imul
ret
imul
gs
sub
aam
dec
inc
ret
mov
dec
popf
ror
add
shll
sub
or
mov
jecxz
shlb
mov
lcall
push
and
fs
pop
sbb
jge
mov
mov
je
sbb
jb
popf
sbb
xor
sti
loope
jmp
fisttps
jp
and
xchg
sti
popf
dec
add
popa
mov
sbb
sub
fldcw
outsl
jno
lods
call
lods
mov
add
fstpt
pandn
mov
test
bound
movsl
aad
lods
add
es
push
ret
insb
insl
jnp
sub
xchg
inc
idivb
or
call
mov
aam
or
lods
pop
xor
enter
ret
cmc
imul
in
aad
cld
lret
ds
std
insl
push
ss
sub
je
xchg
pop
popa
stos
lret
lret
xchg
xor
test
daa
add
lahf
aad
add
gs
fsts
xor
add
add
movsl
lods
jbe
div
xchg
ljmp
xor
dec
mov
add
xchg
sahf
add
push
mov
sbb
enter
fistl
sbb
scas
cltd
inc
repz
mov
mov
mov
dec
push
push
lcall
stos
and
pushf
sbb
mov
stos
pusha
and
pop
pop
and
adc
xor
sub
inc
shl
inc
add
inc
rcr
xchg
ret
xchg
adcb
mov
jmp
pop
stc
repz
stos
mov
adc
into
insw
lock
addr16
jno
popf
jl
add
std
xor
in
faddl
movsb
outsb
add
test
xchg
das
and
imul
es
pushf
cmp
arpl
adcb
dec
inc
gs
mov
mov
jmp
xor
cmc
test
lret
test
addl
leave
jae
pushf
cmp
jg
repz
xchg
jno
pop
xor
cltd
mov
push
cli
push
mov
cmpsb
or
adc
add
clc
mov
mov
cmp
loope
cli
outsb
add
mov
lret
insb
notb
and
iret
imul
popa
imul
test
lea
xor
imul
popa
push
movsb
mov
jae
mov
inc
sub
adc
and
stos
into
and
jbe
lock
fcomip
jbe
shll
mov
xorl
lcall
cmp
shll
shrb
bound
adc
sub
mov
dec
xor
xor
repnz
loope
fs
dec
add
sbb
mov
stc
jo
mov
jb
outsb
testl
add
pop
inc
add
bound
and
jae
xchg
in
cltd
dec
add
sti
test
push
xchg
or
push
call
mov
lahf
inc
pop
mov
sbbb
hlt
fidivs
shlb
in
xor
or
push
add
icebp
jg
fidivrl
mov
inc
int
push
jmp
insl
pop
push
gs
cmp
and
mov
jmp
andb
mov
xchg
xchg
and
int
push
test
and
pop
shll
mov
add
in
std
xor
push
pop
fs
mov
push
push
pop
stos
push
mov
enter
dec
enter
xchg
pop
push
enter
ja
xchg
stc
mov
pop
ds
lods
out
jns
add
aad
or
xchg
repz
pop
push
and
mov
pusha
xchg
mov
sarb
and
rclb
jns
ljmp
or
out
je
cwtl
cld
movsb
fstl
add
push
cwtl
or
mov
leave
clc
adc
sub
leave
cmp
push
inc
loop
sti
mov
adc
push
lods
movsb
sub
leave
xchg
pop
aam
sub
pop
push
push
sub
and
sub
cwtl
xchg
xor
jp
adc
mov
and
out
loopne
test
stc
stc
les
inc
in
ud0
adc
or
sti
lds
fnsave
shl
adcl
es
rol
jae
in
pop
push
addb
xor
dec
aas
adc
cli
push
imul
aas
inc
sbb
movsl
pop
or
nop
shlb
jecxz
mov
cmp
adc
pop
cmp
loopne
push
in
push
rcrl
in
sti
int
pusha
or
cmp
mov
jmp
imul
xchg
adc
clc
sbb
into
leave
sub
fisttpl
mov
mov
mov
cmp
jb
lret
dec
adc
arpl
sbb
incb
loop
lret
add
outsb
insb
pop
mov
ficoms
addb
lock
adc
bound
xchg
jecxz
jbe
int3
push
mov
repz
lret
push
arpl
sbb
pop
lods
jno
inc
out
cltd
sbb
xor
mov
mov
mov
or
roll
or
fistpll
cmp
test
push
aad
adc
mov
dec
fidivrs
mov
out
cmp
sahf
out
cmc
push
cli
mov
adc
shrb
xor
jg
imul
xor
or
mov
jle
adc
icebp
je
faddl
fwait
jmp
popa
mov
test
xor
or
or
sbb
mov
xor
jae
fdivrl
outsb
gs
add
push
in
xor
inc
adc
and
lods
ja
cmpsb
pop
push
mov
movsb
js
push
in
inc
or
inc
lret
stos
sbb
cld
mov
mov
popa
mov
sahf
mov
mov
push
jg
fs
cmp
dec
int
pop
sahf
lock
adc
add
fsubl
push
push
pop
mov
mov
adc
lock
and
mov
push
adc
mov
mov
cmc
fimull
pop
mov
inc
scas
cmp
xlat
scas
pop
loope
loop
es
xlat
adc
jle
popa
int3
xlat
xor
orb
push
add
dec
or
or
mov
adc
in
in
inc
outsl
loop
dec
pop
dec
xor
mov
je
fdivrl
mov
lret
mov
ljmp
mov
jo
push
mov
jmp
scas
mov
xchg
test
add
cmpsl
negb
dec
push
push
testb
enter
popa
or
jp
mov
call
cmp
mov
xchg
dec
hlt
clc
int
mov
jmp
sub
arpl
jle
xchg
dec
jns
mov
pop
pusha
ret
pandn
mov
ss
repz
xchg
inc
inc
pop
jge
fidivrs
popa
mov
mov
and
or
gs
add
adc
mov
xchg
fldl
loope
sub
out
insb
pop
add
sbb
ret
cld
mov
jne
test
or
jmp
push
dec
fisttpll
xchg
mov
jg
xchg
mov
cmp
jne
fwait
cmpsl
iret
mov
nop
mov
pop
adc
movsb
add
sbb
and
push
or
mov
pushf
and
lea
loop
xor
pop
fsub
dec
loop
iret
bound
rclb
adc
inc
jnp
inc
jmp
es
sub
rcrb
inc
test
aaa
xchg
adc
repnz
out
jo
cs
in
mov
mov
adc
pop
or
pop
jle
bound
pop
push
lcall
adc
in
or
mov
jl
fs
xbegin
sbb
fists
inc
in
lcall
push
mov
mov
notb
push
mov
pop
ffreep
mov
sbb
int
mov
popa
adc
dec
push
stos
push
stos
jle
or
adc
ds
push
or
mov
mov
popf
outsl
rcl
addl
mov
out
xor
sahf
mov
in
scas
inc
les
jp
mov
or
add
cs
out
dec
add
je
mov
fsts
or
mov
sub
push
jg
and
mov
cld
les
andb
inc
repz
fsubrs
adc
mov
dec
xchg
push
sub
mov
jp
cmp
mov
cmp
adc
in
mov
outsb
divb
nop
lds
inc
pop
bound
pop
testl
cmp
jb
jmp
mov
pop
test
jae
ror
dec
add
inc
gs
ret
cmp
mov
inc
addr16
ds
repnz
jne
outsl
cmp
movsl
mov
loopne
jb
lcall
shlb
ss
out
sub
das
andl
jle
rcrb
sbb
out
inc
inc
pop
out
ja
leave
mov
sbb
pop
aad
push
adc
nop
loop
cli
hlt
mov
push
out
mov
pop
iret
aas
mov
test
or
roll
mov
jns
jmp
out
push
xchg
psubw
lahf
pop
xchg
sub
adc
mov
loopne
out
jge
cltd
fisttpll
imul
mov
jnp
dec
lods
push
and
dec
jg
cmp
push
sub
std
loop
inc
lods
mov
pop
ds
add
mov
push
std
mov
int3
jae
js
mov
mov
jmp
jg
sub
repz
sub
js
je
dec
int
movsl
fdiv
enter
inc
bswap
pop
fstps
push
fs
mov
xor
scas
stos
cmp
pop
jns
jg
push
inc
les
jle
fsubs
add
xor
loop
fisttps
lea
sub
mov
es
imul
fldt
mov
pop
aam
cmp
test
xchg
mov
cmp
push
cmp
lock
sub
xchg
sarb
sub
fs
loop
stc
pop
std
mov
repnz
iret
mov
xchg
jo
dec
pop
xor
inc
ja
iret
jb
cmp
mov
jbe
outsl
loop
sarb
xchg
cmp
push
pop
sub
mov
call
loope
scas
push
ljmp
test
sub
xor
int
ja
jns
jg
outsb
mov
fadd
outsb
les
aad
mov
mov
lret
dec
das
mov
sub
push
sbb
jns
xchg
push
mov
movsb
enter
test
or
mov
cwtl
sub
popf
popf
add
inc
out
xor
cs
sbb
sbb
icebp
shr
jae
movsl
jecxz
in
push
pop
lds
lcall
inc
call
dec
stos
inc
or
cmp
in
sahf
iret
sar
pop
pop
or
lcall
sub
imul
adc
scas
xchg
aas
or
cmp
or
cwtl
loope
rolb
or
mov
sub
dec
xor
pop
push
or
cs
and
arpl
jne
dec
jne
imul
aaa
shlb
popa
jle
or
jmp
ret
mov
movl
inc
in
lds
dec
mov
js
popa
cltd
mov
mov
add
loop
ss
pop
adc
daa
jae
andl
mov
xchg
jmp
xchg
aas
mov
xchg
fs
sar
daa
ljmp
and
xchg
xchg
xchg
insl
cmpsb
sub
mov
add
cwtl
push
mov
lods
nop
in
int3
cli
fidivl
lahf
pop
xor
inc
push
lods
pop
aaa
xchg
xlat
sub
out
rclb
cmp
jg
jbe
shll
mov
sub
jns
fldt
aas
in
cmc
inc
cmp
ret
lcall
xchg
rorb
imul
lahf
nop
clc
out
rcr
sub
and
into
push
fdivrl
stos
mov
sbb
jns
out
jge
adc
push
hlt
out
pushf
xchg
add
je
push
ss
call
jnp
jbe
cmp
jle
xchg
decl
jo
jnp
or
push
jb
push
cmc
pop
push
mov
aad
add
scas
into
push
xchg
inc
fsubrl
loope
inc
sbb
add
fsubl
push
pop
sbb
adc
cs
jle
push
test
inc
mov
bound
pushf
stc
ja
sub
dec
xchg
push
mov
adc
xchg
test
adc
mov
push
pop
dec
les
mov
icebp
dec
mov
cmc
push
push
cmp
dec
lahf
inc
xchg
add
push
gs
sub
jmp
pop
test
shrb
lret
adc
cli
add
int3
push
fcmovnu
sub
inc
cli
mov
cmp
jge
dec
daa
call
adc
icebp
mov
push
pop
dec
sbb
arpl
aad
aad
or
push
sub
daa
add
cs
and
xor
push
aam
jae
stc
inc
xchg
jmp
movsb
xchg
aaa
sub
incl
dec
rcrl
dec
fdivp
cmp
jno
ror
mov
bound
insb
jo
pop
dec
ja
outsl
inc
mov
sarb
sbb
and
leave
popa
je
sti
dec
push
mov
data16
mov
sbb
ret
jle
mov
mov
sbb
je
inc
stos
out
sub
cltd
insb
pop
cltd
shl
sub
dec
aas
adc
mov
fsubr
push
pop
jnp
gs
in
jp
loopne
les
sbb
incl
pop
rorb
and
mov
ja
and
mov
daa
out
jg
prefetcht1
cmp
addr16
cmp
mov
sbb
pop
scas
lahf
mov
fisttps
fcoml
and
push
cmp
movsb
adc
cmpsb
mov
mov
pushf
dec
lods
dec
or
sbb
pop
cmpsb
imul
cltd
mov
pop
adc
jo
push
mov
jnp
xor
mov
dec
mov
cmp
testl
aaa
ret
in
data16
mov
ret
int3
imul
movsb
mov
inc
jno
sub
subb
mov
aas
mov
addr16
shll
fwait
std
jne
gs
fcomi
mov
es
pushf
xchg
pop
andl
sbb
sti
cmp
popf
popa
xlat
inc
sbb
jl
sbb
adc
and
xchg
adc
rorb
jl
fnsave
add
in
adc
mov
push
pop
push
lods
push
push
mov
mov
rorl
inc
push
cmpsb
pop
jmp
add
pop
xlat
sbb
mov
mov
sahf
sbb
adcl
cs
and
sub
jo
lea
and
mov
scas
mov
xor
push
popf
int
inc
mov
adc
add
out
xor
mov
adc
les
mov
inc
insb
bound
or
lret
lock
shll
cmp
test
stos
mov
repnz
cli
cmp
incl
xchg
sbb
test
push
in
mov
aad
adc
push
dec
sbb
xchg
push
sub
aas
xchg
dec
xchg
xor
add
dec
add
add
push
add
leave
xor
mov
and
popf
roll
ja
xchg
mov
arpl
es
ljmp
push
mov
lret
xor
jg
call
fisttpl
push
pop
sar
jge
aas
xchg
cmpl
xchg
nop
adc
das
inc
add
ret
out
push
push
and
rol
inc
je
ret
push
aam
lahf
insb
xor
or
push
int
inc
cli
inc
stos
ss
out
mov
loop
xchg
lret
nop
push
xchg
add
mov
gs
dec
out
adc
push
mov
pushf
shl
subl
jb
xchg
ljmp
mov
bound
mov
sbb
out
dec
push
lss
ss
outsl
pusha
mov
dec
and
pop
push
xchg
mov
mov
imul
pusha
fimull
lahf
shrb
lret
fdivs
pop
jno
hlt
ljmp
repnz
clc
ljmp
cmpsb
addl
rclb
ss
cmpsl
ja
cmp
mov
out
cmp
sub
adc
add
daa
lret
adc
push
fistl
cs
cmp
xor
insl
test
fmull
fwait
jno
push
mov
mov
xor
cmp
in
movsl
pop
push
and
adc
mov
xor
jne
push
pop
xchg
lods
call
jg
dec
fistpll
insl
mov
lret
or
push
ss
leave
dec
sbb
push
or
adc
sub
dec
loop
inc
jl
shrl
xor
pop
cmp
faddl
sbb
lret
addr16
adc
xor
xchg
frstor
add
push
shll
shll
out
shlb
inc
jl
pop
and
cmpsl
pop
lret
dec
imul
push
cltd
loopne
sbb
pusha
les
in
mov
out
push
push
mov
or
das
inc
jb
leave
or
testl
lods
push
push
sbbb
sub
pop
sbb
adc
daa
repnz
test
shl
xor
mov
push
lret
mov
lods
push
ljmp
in
or
or
inc
cmpsl
add
add
mov
sub
fcmovu
pop
mov
and
lret
xchg
dec
les
or
add
push
mov
mov
pop
jg
test
aas
mov
add
ret
adc
enter
pop
fstl
jl
mov
fdivl
xchg
test
mov
dec
dec
pop
cmp
loope
jnp,pt
jmp
cmpsb
incb
push
je
insl
int3
xchg
ret
cltd
fldenv
lahf
subl
jle
fwait
ret
fs
shlb
test
nop
dec
ret
xor
icebp
lret
adc
dec
and
xor
sbbl
jae
fdivrl
and
dec
cmp
mov
adc
iret
dec
cmp
pop
cwtl
adc
fs
add
je
xchg
push
aaa
lock
mov
cmp
test
push
mov
adc
jg
mov
and
xchg
out
data16
rolb
push
pop
fidivs
fsts
lcall
loop
or
popf
cmc
add
test
into
mov
in
inc
and
in
xor
lcall
dec
sbb
push
mov
lcall
lret
xorl
or
xor
jmp
ret
jp
mov
lahf
scas
cmp
addr16
scas
push
outsb
dec
test
fs
or
or
mov
cld
test
dec
fucomp
cmpsl
mov
and
inc
lcall
in
add
scas
mov
mov
sbb
repnz
adc
add
ret
mov
dec
push
mov
or
shlb
cmp
outsb
xchg
mov
fs
adc
add
pushf
nop
int3
repz
std
popf
leave
add
xor
pop
imul
lds
inc
sbb
test
mov
lret
push
add
sti
dec
xchg
fnstcw
jno
andl
or
push
and
mov
out
cmpsl
add
mov
xor
and
in
scas
mov
fidivrs
stc
frstpm(287
jle
data16
rcrb
addl
cld
movsb
enter
and
and
dec
sub
adc
sub
dec
and
out
pop
and
dec
dec
insl
filds
jmp
jne
jp
jge
inc
sarb
stc
in
clc
lods
pop
and
scas
js
nop
es
mov
push
sti
fnsave
jae
inc
or
dec
inc
rcll
loop
mov
aam
sbbl
ret
mov
push
add
data16
adcl
jecxz
push
push
adc
xor
pop
add
cli
mov
popa
movsl
sub
push
inc
mov
stos
loope
insb
or
lret
add
push
jl
mov
fwait
arpl
cmp
cmc
pop
popf
push
les
inc
add
xchg
adcb
test
cmp
inc
jo
aas
jmp
les
jae
sub
adc
push
dec
int
pop
call
xor
push
xor
cmp
adc
lret
mov
neg
aam
in
leave
aam
ficoms
loope
xor
ljmp
arpl
sub
add
ja
jg
push
adc
int
iret
jg
movsl
dec
push
js
push
outsb
mov
xor
adc
repnz
mov
push
int
push
mov
testb
jmp
push
cmp
lods
call
xchg
xchg
xor
hlt
inc
in
adc
inc
xchg
js
xchg
or
bound
out
pop
jle
pop
and
insb
adc
xor
fs
arpl
mov
stc
mov
notl
sbb
stc
es
arpl
test
fcomps
dec
ljmp
imul
test
jl
out
pop
dec
inc
mov
ljmp
sbbl
pop
lea
mov
mov
sub
rcl
sbb
fistps
pop
pop
shlb
and
jge
add
test
add
pop
adc
cmc
adc
fadds
pop
pop
pop
dec
jb
adc
dec
pmaxsw
inc
sbb
mov
les
nop
adcl
sub
push
fstps
add
sbb
jg
je
mov
sbb
pop
jle
int3
jbe
ja
dec
stc
out
and
in
js
xor
roll
imul
out
dec
push
rcll
lods
adcl
jbe
imulb
push
push
push
nop
imul
cmp
cmpsl
in
iret
mov
popf
pop
mov
je
bound
xchg
jecxz
mov
adc
lds
cmpsb
mov
push
push
jmp
add
push
cmp
push
push
inc
insb
sub
adc
test
loop
xchg
pushf
dec
push
enter
cld
sbb
int
xor
loope
pop
dec
jle
jns
and
rcrl
xlat
lret
and
or
mov
cmp
cld
jo
mov
add
loope
cmp
mov
dec
movsb
xor
mov
and
sbb
push
pusha
cwtl
xchg
cltd
clc
or
mov
movsb
dec
cltd
push
scas
loop
jns
push
xchg
pop
mov
aad
test
hlt
fidivs
dec
cmp
push
sub
fsubr
dec
xchg
lahf
mov
les
dec
or
int3
push
mulb
std
aas
lea
push
and
dec
sarl
and
and
ljmp
dec
sahf
arpl
add
insb
stos
mov
jp
mov
mov
rcll
out
gs
loopne
sbb
cmp
enter
ds
in
insl
mov
inc
inc
mov
ret
adc
mov
ljmp
subb
jmp
mov
mov
add
lahf
inc
rep
or
cs
pusha
mov
sahf
inc
addr16
jmp
mov
es
lods
das
add
xor
push
push
cmp
fisttpll
das
scas
push
cli
addr16
lods
xor
jns
stc
or
or
loope
rep
jns
je
mov
mov
dec
push
sbb
xlat
jnp
arpl
popa
out
xor
and
fisubrs
inc
repnz
or
sbb
shlb
inc
xor
into
jno
xchg
pop
mov
jge
subl
filds
cmp
pop
mov
dec
les
and
out
scas
jb
or
insl
fisttpll
sub
aas
adc
stos
test
adc
testl
in
pop
adc
gs
inc
call
jp
inc
pop
data16
popa
xor
sahf
sub
pop
xchg
push
cs
jns
enter
out
mov
pushf
jp
adc
cmpsb
ret
mov
aam
shrd
js
sbbb
mov
rclb
mov
fidivs
mov
shrb
or
cwtl
mov
loope
mov
inc
inc
loopne
out
dec
ljmp
pop
xchg
repnz
xchg
adc
add
mov
test
jl
fbstp
cmp
jecxz
dec
repnz
dec
clc
mov
jg
adc
in
imul
pop
mov
pop
mov
push
stos
dec
add
icebp
daa
cmpb
sbb
clc
xchg
rcl
mov
ljmp
jbe
dec
adc
or
mov
xchg
ljmp
sbb
sahf
mov
cmpsb
xchg
adc
insb
sub
scas
add
or
xchg
cmc
test
cld
test
pop
adc
push
test
push
or
xchg
cmp
mov
cmp
iret
scas
push
pop
loop
sahf
rorl
test
lret
call
shrb
iret
mov
movsl
jo
adc
jbe
je
add
push
push
cmp
scas
jecxz
push
fdivl
in
test
rolb
inc
pop
dec
popa
std
mov
dec
int
push
cmp
xor
call
inc
mov
rol
mov
aas
jmp
aas
outsb
out
push
dec
jns
push
xchg
mov
les
repnz
adc
xchg
dec
nop
fistps
jl
pop
xor
adcl
sub
or
sub
adc
ret
leave
sbb
das
cmc
mov
enter
add
enter
sbb
cmpsl
popa
add
and
bound
sbb
lods
and
fidivrs
call
pop
fists
sub
jge
lret
xor
call
xchg
sub
and
lahf
jno
pop
fs
pushf
mov
sub
pop
cld
pop
pop
insb
dec
mov
nop
dec
jp
insl
daa
outsb
cmp
jne
imul
insb
stos
pcmpgtw
lock
loop
test
sub
add
pop
pop
call
das
movsl
clc
inc
lahf
cli
and
ret
sbb
fnsave
shll
jecxz
pusha
aad
push
aad
mov
mul
push
insb
insb
sbb
mov
loop
dec
movsb
xchg
das
std
nop
cwtl
mov
inc
cltd
and
out
mov
enter
aas
aas
popa
cmp
mov
imul
in
jbe
adc
mov
cli
dec
repz
insl
or
lea
sar
mov
mov
js
jmp
xchg
sbb
jne
into
mov
lret
push
pop
popf
scas
sub
in
dec
and
adc
cmp
subl
or
xor
xchg
rcl
add
fldln2
les
lock
add
scas
testb
shrb
push
mov
push
stos
or
mov
cmp
xchg
inc
dec
stos
mov
rolb
jg
fildl
sub
leave
jmp
out
test
dec
mov
lods
dec
mov
mov
mov
clc
cwtl
xor
mov
xor
jl
mov
test
nop
xchg
aam
out
dec
clc
scas
push
fsubrl
int
lcall
push
bound
sub
fdivrl
dec
cld
ret
jo
mov
or
sub
subb
mov
call
xor
stos
mov
aaa
scas
decl
or
and
shrl
or
sub
xchg
push
push
lock
call
push
subb
divb
jmp
sahf
scas
jmp
jae
fldt
hlt
pusha
lea
aaa
xor
outsl
rorb
adc
in
push
das
fimull
or
popf
stos
test
mov
test
add
pusha
icebp
cmp
pop
call
xchg
subb
mov
lods
cmp
shlb
jae
sub
dec
jo
jl
pop
mov
sysexit
sub
scas
cmp
dec
sbb
dec
jns
es
jmp
or
mov
adc
jl
icebp
in
cwtl
jnp
pusha
jmp
adc
movsb
adc
push
punpckhdq
adc
pushf
mov
fisubs
sbb
sti
or
repz
sbb
into
inc
imul
xchg
mov
sar
pop
mov
testl
pop
sbb
dec
leave
push
push
enter
insb
jecxz
fiadds
out
mov
jnp
and
lea
push
in
cld
xor
pop
and
pop
or
cmp
dec
enter
jns
jp
adc
fbld
test
dec
ljmp
cld
mov
test
fcom
addb
xchg
mull
out
dec
scas
lds
sub
pop
lret
es
jg
rol
or
xor
addr16
in
inc
mov
mov
mov
into
and
sbb
push
ljmp
cld
aam
rolb
sbb
push
cltd
mov
es
test
bound
data16
stos
adc
fisubrl
lods
xor
cli
pusha
int3
movsl
xsaveopt
xlat
pop
sahf
add
arpl
dec
xchg
add
mov
repz
and
or
mov
test
out
inc
xchg
insb
mov
dec
loopne
bound
in
and
mov
pop
xchg
pop
leave
push
mov
xchg
aaa
or
mov
push
pop
scas
adc
pop
pusha
popf
in
outsl
push
xorl
sub
sbb
pop
xchg
out
inc
dec
adc
cmpsl
pop
or
add
inc
repnz
cs
push
sahf
push
mov
jge
cmp
lods
mov
xchg
nop
jno
xor
and
add
lods
imull
jl
pop
movsb
mov
enter
filds
xchg
cmp
in
les
add
fbstp
adc
dec
mov
nop
xchg
push
daa
push
pop
xchg
pop
inc
cltd
out
jnp
repnz
lcall
inc
cmp
and
repz
cs
cmp
fadds
aad
push
jle
in
jbe
sti
into
aas
jns
jp
ja
test
mov
mov
test
nop
inc
jp
pop
mov
xchg
movsb
lods
imul
adc
adc
shlb
rorl
fsubs
int
cmp
call
inc
dec
jno
add
mov
lock
push
jle
mov
outsl
mov
stc
cltd
outsb
pop
pop
xor
mov
push
in
addl
xchg
jno
ret
and
or
inc
dec
inc
fdivrs
hlt
xchg
je
xlat
cmpsl
sub
je
andl
pusha
js
xchg
icebp
addr16
push
lcall
or
xor
sub
cltd
and
jne
gs
or
jge
std
push
push
iret
cmc
adc
fidivrl
mov
xlat
std
imul
nop
into
or
push
into
xchg
push
add
inc
inc
jb
xor
or
inc
pop
inc
call
mov
int
inc
hlt
mov
repnz
stos
bound
in
dec
arpl
add
icebp
lahf
nop
iret
cmp
push
mov
cmp
aad
inc
imull
pop
rol
push
sbbb
and
pop
mov
and
movsb
jne
xor
popf
decb
inc
out
dec
addr16
mov
pop
mov
inc
mov
jmp
add
jns
xlat
aas
adc
std
test
or
or
or
dec
pop
das
in
xor
pusha
shl
xlat
push
inc
es
cwtl
and
ja
inc
pop
out
push
push
pop
jnp
xchg
mov
in
sub
js
lret
and
cmp
mov
push
adc
add
xchg
pop
jb
jecxz
pop
jo
push
xchg
inc
pop
arpl
jmp
lock
add
mov
test
leave
adc
jmp
or
adc
into
loope
fsub
add
and
add
pop
shl
iret
aam
jge
and
dec
xor
popa
addr16
jle
out
mov
rolb
mov
std
cmp
lcall
jo
jp
mov
jge
xchg
pushl
arpl
mov
lods
fidivs
mov
dec
pop
dec
mov
in
cmpsl
push
mov
cmp
mov
repnz
out
xor
out
jmp
aad
pop
pop
jae
out
pop
mov
xor
int
sbb
cmp
rcrb
nop
iret
and
lods
mov
lahf
mov
insb
repnz
clc
insl
mov
daa
popa
stc
mov
inc
push
mov
push
rolb
mov
push
mov
dec
mov
jge
sbb
mov
sbbl
sbb
dec
aam
sbb
icebp
in
enter
pop
es
mov
xchg
clc
addr16
mov
pop
pop
cmp
loopne
mov
cwtl
sub
or
adc
cwtl
adc
and
inc
pop
cmp
out
ret
mov
sahf
das
in
mov
scas
xorl
jle
add
ljmp
sub
xorb
cmp
dec
aaa
mov
or
repz
or
jge
sub
sub
sub
outsl
or
add
ja
sbb
or
sbb
pop
mov
jp
pop
or
or
xor
test
enter
lret
pop
fs
xor
andb
push
push
pop
push
sub
loope
mov
pushf
fmul
push
push
iret
mov
in
pushf
pop
xchg
leave
in
lahf
jp
jo
inc
pusha
lret
adc
and
cmpsb
and
push
iret
mov
rol
xchg
and
or
lret
nop
inc
pop
pushf
jmp
mov
jl
adc
decl
adc
xor
inc
mov
orb
xchg
pop
dec
jne
movsl
dec
in
ret
jo
jnp
or
add
xor
sub
jns
mov
imul
jae
enter
jl
js
mov
test
sub
jp
roll
ffreep
jb
movsl
pop
mov
in
lahf
sub
inc
ret
loopne
arpl
adc
xor
push
rclb
movsl
ret
into
and
cmp
xchg
xor
pop
dec
add
sahf
jmp
xor
mov
or
add
mov
dec
cwtl
test
or
shrl
xchg
or
pop
out
testl
lock
cmp
sbb
imul
sub
out
cmp
inc
rolb
cmc
mov
mov
aaa
lcall
dec
push
sbb
jbe
fldl
iret
sub
mov
aam
and
dec
fdivr
or
mov
dec
fdivs
cmpb
rcrl
rcr
mov
jge
cmp
or
dec
jno
aaa
adc
inc
mov
cmp
lods
cmc
stos
xchg
aaa
mov
push
addr16
sbb
pop
dec
pusha
movsb
aad
rcrb
jmp
jbe
and
insl
je
add
mov
outsl
jae
jne
inc
test
jmp
jge
lahf
push
lahf
movsl
jle
sbb
mov
gs
dec
das
leave
or
loopne
inc
push
xchg
dec
cmc
mov
lods
rolb
xor
ds
mov
pushf
fnstenv
mov
jmp
mov
int
jl
stc
fucomip
shrl
ljmp
and
lcall
or
sub
test
mov
cltd
cmp
std
sub
xchg
jle
push
out
gs
inc
xchg
fiaddl
pop
sub
inc
pop
sti
inc
jae
mov
imull
in
jle
ljmp
xchg
pop
xor
and
xchg
loopne
popa
gs
xor
cmc
test
insb
xchg
push
lds
test
dec
cwtl
xchg
leave
and
insb
xchg
push
push
jl
mov
fisubs
mov
cld
pop
arpl
mov
jle
lret
push
cwtl
pop
sbb
jle
cmp
and
jp
jp
or
mov
xor
das
sarb
outsb
or
add
push
or
rorb
scas
inc
cltd
sub
add
xchg
aas
dec
add
arpl
daa
ja
imul
cmp
test
dec
cltd
jmp
mov
jecxz
add
cmpl
adc
pop
add
mov
cmp
ret
ljmp
jp
inc
xor
dec
sbb
push
push
mov
adc
ret
sti
shr
xchg
xor
inc
jnp
andb
dec
xor
fs
jae
push
adcl
test
dec
inc
xlat
int
mov
pop
std
xchg
push
lret
pop
sub
fdiv
mov
repnz
pop
lock
jns
call
es
push
cmp
stc
mov
gs
ret
xor
shld
sti
pop
cmp
xor
sub
test
int
push
loope
in
mov
inc
out
push
adc
dec
fists
je
mov
int3
sbb
test
dec
scas
stos
scas
jns
inc
pop
std
dec
or
push
xor
cmp
push
xchg
jb
jg
cmpsl
inc
cmp
sbb
in
int
pop
ret
sarl
mov
add
negb
test
and
jg
sbb
and
add
push
adc
dec
sbb
mov
pop
test
push
cwtl
cmp
lret
jecxz
or
stc
aas
jno
add
imul
shrb
or
rclb
icebp
sbb
repz
sub
inc
loopne
sbb
mov
cmp
mov
movsb
push
push
movsl
mov
loop
xchg
mov
and
test
gs
pop
jp
mov
inc
and
out
jne
push
xchg
adc
mov
jae
cmp
xchg
sarb
xor
pop
xor
sub
iret
add
pop
shr
inc
sbb
dec
in
mov
lds
push
out
aas
cld
in
adc
pop
lret
pop
pop
lea
int3
sub
daa
bound
bound
popa
xchg
insb
sub
pop
insb
pop
pushf
faddl
test
ret
or
adc
out
xchg
int3
jbe
cld
roll
xchg
insl
lods
ret
cmp
loop
jmp
lret
out
add
and
jnp
adc
inc
mov
lea
imul
sbb
and
sbb
cmpsl
sahf
inc
ret
lods
loop
inc
or
in
cld
inc
push
rclb
cmpsl
jle
push
inc
jb
mov
mov
lahf
lret
das
push
mov
bound
imul
in
filds
in
inc
push
pushf
sub
cltd
rcrl
fwait
dec
xor
lods
outsl
and
je
lods
bound
mov
lds
xchg
push
xchg
mov
mov
ret
scas
push
xor
subl
xor
sbb
fldenv
xchg
jecxz
and
mov
cs
cmp
fs
enter
das
sub
or
dec
add
xchg
rcrb
fmul
arpl
lods
inc
rcrb
scas
and
mov
out
addb
sub
outsb
dec
xchg
fldt
mov
ja
sbb
pop
lret
mov
in
inc
insl
rcr
mov
je
popf
test
push
sahf
adc
pushf
inc
in
in
mov
test
cltd
adc
into
repz
and
ret
push
pusha
xchg
cli
pushf
incb
push
test
pushf
inc
jno
movsb
jnp
stc
fbstp
cs
xlat
pop
dec
xchg
das
mov
jg
insb
loopne
push
outsl
and
cli
pop
imul
xor
fisttpll
test
push
in
jns
sub
sbbl
ficoml
test
iret
mov
je
jmp
rcl
xchg
mov
lcall
mov
std
cmpsb
push
jb
xchg
inc
add
or
push
stc
aas
pop
xor
xchg
or
push
sbb
shrd
xchg
sbb
xor
or
xchg
jb
out
mov
push
pop
stc
xor
je
enter
inc
pop
jmp
cmp
mov
xor
in
int
and
push
lcall
out
cs
test
mov
leave
or
and
jae
xor
bound
cli
lods
push
cwtl
aas
xor
mov
push
es
ja
mov
adc
es
dec
in
lock
mov
dec
mov
mov
jg
mov
ror
xchg
or
loope
sbb
xchg
test
xor
fidivrs
mov
gs
adcl
repnz
loopne
orl
mov
lea
mov
ljmp
nop
inc
in
out
mov
mov
cmp
scas
in
aam
pop
cmpsl
push
filds
xchg
mov
int3
pop
mov
shl
fs
add
lods
add
fidivrl
and
xchg
inc
gs
or
ja
or
jmp
mov
cmp
push
push
jne
pop
mov
and
xor
mov
add
mov
fnstcw
cmp
jmp
add
cvtdq2ps
mov
jae
andb
add
jno
cwtl
test
push
es
or
xor
int3
xchg
inc
pop
jnp
data16
and
inc
and
xchg
add
movsb
push
inc
pop
into
inc
xor
xchg
xchg
leave
jae
add
fnsave
sbb
cmp
sub
cmp
movsl
xchg
fcmovu
popa
lods
cs
jae
das
lret
clc
scas
shrl
xchg
mov
fimull
cwtl
dec
pop
pushf
mov
pop
jnp
cmp
jg
icebp
loop
icebp
daa
into
xchg
xchg
adc
out
clc
sbb
leave
cmpl
mov
insl
mov
push
testl
lods
xor
test
repnz
push
sub
cld
mov
jle
inc
or
cmp
jo
jmp
dec
arpl
mov
push
cld
jnp
pop
mov
mov
sbb
scas
and
push
call
sbbb
mov
dec
cmp
sub
mov
and
fs
adc
pop
inc
in
ss
xchg
sbb
dec
int3
outsl
mov
push
inc
mov
sbb
xchg
out
push
mov
enter
stos
leave
xor
add
mov
add
imul
je
call
popf
inc
pop
mov
dec
lds
loope
jbe
shll
addb
xor
adc
lahf
xchg
mov
push
daa
jb
pop
inc
cmp
lcall
test
insb
filds
mov
loope
std
stos
in
add
mov
arpl
lea
or
roll
dec
dec
sarb
mov
sbb
mov
and
push
inc
mov
sub
je
jnp
bswap
inc
dec
cmp
clc
iret
xchg
mov
ljmp
dec
imul
ret
add
into
bound
adc
hlt
jo
inc
pop
mov
xor
lods
xor
mov
mov
out
mull
sub
xchg
inc
cltd
mov
xor
xor
push
adc
in
test
fnstsw
repz
mov
ficomps
roll
mov
arpl
popa
fidivrl
les
orl
lock
inc
dec
ret
aas
mov
loop
sbb
fisubrs
ret
mov
xchg
dec
aas
cli
lret
movb
sub
loope
inc
int3
and
cwtl
sbb
mov
inc
sbb
mov
pop
insl
mov
inc
es
ror
loopne
ljmp
dec
push
jbe
jnp
push
jne
mov
sti
jp
jo
push
cwtl
imul
cwtl
icebp
repnz
fwait
cmp
mov
xor
fstpl
mov
push
js
jns
out
jmp
dec
add
cmp
sub
sub
popf
mov
cmc
rol
mov
shrl
shrl
mov
push
and
xchg
jge
mov
jo
mov
in
jbe
and
cmp
ljmp
inc
sbb
adc
push
cli
aaa
iret
outsb
lret
shrl
mov
xor
mov
popa
or
in
jl
das
or
loope
or
rorl
mov
sub
scas
jae
aad
stos
fwait
out
jmp
push
add
outsl
bound
add
daa
add
mov
mov
rcrl
add
add
jl
mov
in
shll
dec
dec
shlb
lock
mov
roll
jns
pop
clc
dec
test
sbb
inc
jb
and
push
sbb
icebp
pop
mov
js
mov
in
sub
mov
jae
add
add
lret
popf
shlb
and
stc
test
mov
ret
imull
ret
push
pop
adc
rol
fidivrs
ret
xorl
and
js
and
adc
mov
test
lret
fcoms
sti
ret
js
xor
mov
jmp
rcrb
mov
pop
les
adc
jmp
push
fdivrl
cmp
iret
fyl2x
or
out
xlat
gs
xchg
cmpsb
int
insb
seto
lea
test
cli
mov
imul
jno
imul
rorb
shll
cmp
and
fcom
adc
or
in
adc
and
pop
enter
jae
movsl
test
fidivs
rorl
sbb
jmp
imul
xchg
jle
cmp
cltd
push
cmp
ljmp
bnd
inc
insb
push
stos
and
mov
mov
test
and
outsl
dec
fisubrl
and
mov
mov
fwait
ljmp
push
inc
into
adc
fsubs
xchg
fisubrl
stc
cli
pop
aaa
push
and
push
push
ds
adc
mov
outsl
jb
pop
rcl
jne
xlat
jnp
inc
add
sti
pop
mov
dec
mov
xchg
xor
mov
cwtl
ret
pause
mov
push
push
loope
and
xor
mov
jb
mov
add
popf
jo
fcmovnu
jg
jl
xchg
mov
leave
push
loop
es
enter
insl
push
push
jmp
pop
insl
ret
dec
sbb
push
popa
jp
inc
psadbw
xlat
xor
dec
mov
xchg
imul
in
leave
js
pop
xchg
and
mov
ljmp
movsb
and
pop
jecxz
sub
pushf
lea
pop
repz
ret
dec
out
aam
es
mov
fs
dec
jbe
inc
add
sub
jne
jecxz
sbb
add
ss
or
jnp
call
jmp
mov
or
enter
sbb
sahf
add
or
inc
adc
ret
popf
jp
aas
sarb
in
add
jae
pop
pop
jg
and
ret
andl
lock
sub
pop
push
and
mov
mov
pop
fstps
mov
xchg
daa
dec
pop
adc
cmp
aad
push
push
lret
dec
mov
jo
xchg
shll
cwtl
mov
mov
data16
in
jmp
push
imul
cmp
pop
test
js
dec
cmp
loopw
pop
stos
push
je
pop
outsb
mov
outsl
sub
push
jle
jmp
mov
cmc
icebp
fwait
xchg
or
mov
js
adc
sbb
jb
insl
sub
in
out
xchg
data16
add
rcl
inc
xchg
push
sub
dec
inc
out
pop
hlt
jmp
or
in
or
xor
cltd
jno
mov
cld
jae
xor
movsb
mov
roll
fimull
cmp
stos
mov
pop
call
div
or
push
xor
daa
inc
jge
jns
sub
sub
sbb
adc
or
push
cmp
add
inc
sbb
pop
jne
ret
pop
sbb
iret
add
loope
pop
xor
lods
sahf
ljmp
or
fsub
ret
inc
xor
imul
xorb
cmpsb
out
push
ja
repnz
roll
and
mov
mov
sub
inc
xorb
rolb
ret
mov
pmaxsw
cld
in
mov
lods
test
pop
shll
ror
xchg
arpl
and
jnp
fs
xor
push
shl
lahf
jno
lock
mov
pop
repz
cmpsl
jp
insb
std
call
dec
push
add
nop
dec
popf
dec
bound
adc
popf
add
je
cmp
xlat
jle
xchg
loopne
mov
mov
xchg
out
lods
clc
icebp
or
repz
ss
push
xchg
adc
outsl
push
pop
pop
xor
xor
xchg
jecxz
subl
test
pop
mov
int
je
scas
mov
fstpl
dec
clc
inc
and
pop
out
imul
and
push
arpl
dec
or
pusha
sub
scas
rsm
out
outsl
lods
cmp
jae
mov
mov
mov
lods
jg
imul
dec
jnp
mov
loop
or
dec
add
arpl
pop
les
xor
adc
insl
cmp
xchg
pop
cli
out
sub
sbb
popf
rclb
jo
popf
cmpsb
mov
pop
or
loop
mov
gs
sbb
cwtl
aaa
mov
out
das
aam
pop
cmp
mov
sub
loopne
or
popf
das
pop
push
pop
mov
push
lahf
and
push
mov
inc
out
add
mov
adc
lea
sbb
fiadds
add
push
pop
jnp
pop
rcll
std
imull
loopne
xchg
test
pop
jle
sbb
xor
lcall
fwait
pusha
jmp
ret
mov
nop
movsb
insb
or
xchg
sbb
bound
dec
jnp
pop
mov
jne
or
xor
cwtl
push
lret
daa
js
cmp
mov
mov
je
scas
push
pop
and
adc
dec
repnz
out
fwait
enter
pop
lret
insb
into
ljmp
add
add
adc
pop
and
cmc
daa
mov
sub
dec
imul
adc
pop
pushl
lock
fadds
test
inc
push
sti
sbb
fisubs
out
pop
mov
mov
mov
jno
jp
idiv
xor
stos
outsb
cmpsl
aad
popf
jb
dec
mov
sbb
dec
sbb
imul
cmc
xchg
cmp
fwait
push
mov
loopnew
cmp
movb
pusha
lea
das
aad
into
inc
jno
aaa
cmp
or
sub
popf
xor
pop
jb
pop
cli
ret
xchg
stos
nop
push
add
nop
movsl
xchg
mov
or
lock
mov
jg
out
stos
xor
push
mov
or
fcompl
mov
xchg
push
pop
xchg
lret
xor
xor
cmp
jecxz
push
mov
cltd
jl
mov
pusha
outsb
popf
mov
int
loop
enter
mov
sub
subb
xchg
or
xchg
pop
jbe
testl
fwait
pushf
cmp
mov
add
clc
add
fisubrl
dec
cmpsb
dec
cmp
stos
adc
addr16
scas
and
pop
hlt
lcall
mov
fmulp
leave
out
or
jge
and
ffreep
jmp
mov
leave
mov
in
xchg
hlt
sbb
insl
mov
add
push
cmpsl
in
icebp
mov
inc
xor
cmpb
fidivrl
mov
push
jge
gs
stos
shll
xor
test
ds
push
mov
cltd
pop
cmpsl
ss
adc
pop
or
push
mov
cmp
mov
loopne
pop
mov
test
jg
xchg
jne
xor
add
or
adcb
aaa
pop
imul
imul
andl
roll
pop
sbb
in
inc
dec
dec
xor
in
outsl
add
push
rorb
fwait
imul
and
sub
jmp
shrl
loope
lret
lock
lea
push
push
loopne
fdivs
lea
dec
add
mov
lcall
add
jns
and
int3
cmp
pop
movhps
out
outsb
xchg
loop
std
inc
out
cmc
aaa
loopne
psubsw
adcl
pop
gs
jbe
xchg
out
scas
jl
pop
ret
jbe
adc
push
loope
sbbl
cmp
adc
and
ret
inc
cmp
loop
stos
pop
aam
repnz
enter
lea
fwait
or
std
mov
jns
jae
fcoms
lods
scas
push
call
push
arpl
popa
sub
inc
push
repz
decl
pop
jbe
mov
inc
lcall
xlat
fsubrp
and
cld
xor
les
inc
jecxz
adc
aaa
push
movsl
ljmp
shll
pop
das
xlat
repz
or
loop
in
lret
icebp
aas
adcl
jmp
hlt
cs
ss
cmp
mov
mov
cli
lds
cmp
xor
cmp
cltd
das
addr16
fsubrl
jle
cld
add
int3
inc
lret
push
loopne
lcall
loope
shlb
out
push
int3
fwait
xchg
adc
xchg
cli
pop
mov
fcmovne
and
loopne
popa
and
das
aad
mov
inc
decb
inc
or
sub
out
xchg
jne
repz
add
mov
dec
imul
push
cs
adc
sbb
fistl
scas
xchg
push
jne
cmpsb
mov
mov
xchg
xchg
dec
sbb
ret
inc
lcall
xlat
leave
jne
jbe
mov
cmp
leave
mov
enter
test
cmpsb
mov
xor
mov
cli
sub
push
and
pop
mov
dec
dec
adc
mov
fiadds
mov
out
pop
into
movsb
xchg
xlat
outsl
stc
enter
pop
push
push
out
jg
xchg
call
sbb
push
pop
test
sbb
inc
add
mov
add
and
roll
and
inc
xor
add
dec
pop
movsb
stos
lods
xor
icebp
and
cwtl
sub
mov
jb
add
mov
xadd
arpl
inc
dec
fucompp
sbb
js
das
xchg
stc
jmp
rorl
push
inc
mov
xchg
ja
or
cld
shll
rorb
shll
mov
xchg
xor
popa
pop
test
inc
fs
jo
rolb
rep
loop
xchg
data16
mov
aad
test
dec
int3
arpl
mov
icebp
pop
cmp
mov
jns
fiadds
add
cmp
push
out
inc
mov
ss
push
sbb
jmp
sub
shr
mov
xor
dec
clc
lods
jg
fucomi
lahf
aas
sbb
pushf
add
popf
pop
dec
inc
cmp
lods
lds
push
jb
lds
arpl
cmp
and
fisubs
in
call
add
int
adc
adc
push
adc
push
sbb
mov
repnz
pop
fcoms
add
xchg
std
mov
je
es
xor
push
test
out
idivl
je
outsl
arpl
sbb
xchg
cmp
mov
mov
stos
xcrypt-cbc
cmpsl
adc
xchg
aas
bound
popf
pop
subb
push
cld
dec
inc
xchg
sahf
shlb
push
jg
jbe
das
jl
movsl
or
dec
push
das
jnp
xchg
fs
lret
pop
icebp
in
or
es
mov
faddl
jns
mov
push
fnsave
rorl
fs
pusha
test
or
cmp
loop
in
xlat
cli
jnp
scas
mov
fwait
ljmp
lahf
fwait
adc
xlat
popa
xor
test
xor
xor
jecxz
and
cltd
add
push
fidivl
pop
xchg
mov
pop
aam
pop
orl
loopne
fcmovnu
dec
les
mov
xlat
negb
jle
mov
sbb
mov
test
push
jle
add
inc
xchg
push
jle
push
and
bound
call
inc
push
imulb
jmp
xor
lcall
sbb
gs
add
test
daa
push
jb
in
ficompl
mov
adc
mov
fldt
inc
in
ficompl
adc
testb
pop
push
aaa
adc
cli
pushf
sbbl
jne
pop
push
push
stc
rol
inc
roll
sbb
mov
lahf
sbb
xchg
dec
popf
mov
sahf
hlt
arpl
aam
push
or
jp
cmp
sub
inc
inc
cmc
jle
or
cmp
push
aas
dec
insl
lret
sub
jmp
mov
shl
rcr
inc
mov
in
jno
inc
punpckhbw
sub
push
cli
push
leave
aam
and
xchg
jp
jne
mov
fstpl
xor
cs
pop
cmp
dec
or
bound
mov
xchg
les
sub
push
es
lahf
sahf
mov
loop
xchg
cmp
jge
sub
pop
cmp
or
movsl
xchg
push
pop
mov
out
mov
mov
jne
cmpsb
jl
push
pushf
xor
sbb
rolb
lret
mov
adc
out
sahf
scas
xlat
or
xchg
out
push
stos
or
clc
pop
dec
push
xchg
sbb
xor
stos
leave
or
pop
test
pop
rorb
push
aad
sub
add
push
lods
sahf
enter
ret
in
mov
inc
fdivrs
jbe
dec
in
pop
mov
xor
vmwrite
shlb
pop
fimull
test
mov
popf
scas
in
xchg
movsb
jo
xor
cltd
das
push
jo
test
out
fsub
sub
int3
or
pop
mov
inc
aas
mov
inc
mov
xlat
subb
and
mov
test
dec
repz
mov
jle
jl
push
jno
xchg
ljmp
or
sub
and
in
xchg
jae
jle
test
js
adc
adc
mov
pop
push
add
jns
lods
leave
sub
pop
add
outsb
pop
movsl
jnp
cmp
sub
mov
outsb
mov
negl
into
call
mov
cld
mov
cltd
dec
push
pop
hlt
flds
sbb
xor
mov
daa
pop
or
shlb
dec
and
mov
mov
mov
cmp
fsub
enter
cmp
push
push
icebp
imul
mov
loop
movl
pop
in
shl
addb
rorb
test
fcomp
repz
arpl
enter
and
jbe
imul
add
add
cmp
mov
sub
inc
pop
and
cmp
mov
filds
cmovae
pop
inc
sahf
or
add
sub
jo
xchg
jp
push
pop
leave
adc
mov
sub
push
push
add
and
xor
add
and
mov
mov
cmc
repnz
lret
xchg
pusha
mov
inc
push
mov
push
xchg
pop
jb
sub
push
mov
cmp
setns
pop
push
jns
mov
ljmp
call
cmp
pop
andl
adc
call
movsb
push
test
mov
sub
pop
mov
ss
fwait
and
xlat
and
lret
icebp
cmp
add
and
jno
leave
xchg
aam
mov
add
inc
mov
movsbl
xlat
and
lods
jg
insb
bound
sbbl
fcoms
adc
bound
test
inc
jmp
je
dec
iret
je
inc
std
cwtl
inc
sbb
adc
mov
testb
sbb
sahf
xchg
aam
mov
sub
add
cmpsb
sub
mov
adcl
scas
out
mov
jmp
hlt
ja
pop
sub
pop
adc
movsl
jle
je
push
cld
imul
dec
fistpll
ss
cld
stos
mov
gs
fnstcw
mov
data16
xor
mov
pop
ret
mov
dec
daa
into
arpl
popf
cmp
xor
inc
cld
jo
ss
fildl
and
or
in
sub
addl
jg
movsl
sub
push
pop
pop
aam
adc
mov
adc
insl
lcall
mov
pop
mov
cmpsl
outsw
sbb
shr
dec
mov
insb
scas
mov
subb
daa
dec
imul
or
xor
cmp
negl
cmpsb
add
lds
mov
in
iret
in
or
push
dec
adc
sbb
jle
jo
xchg
mov
push
jo
adc
and
in
shll
clc
mov
mov
jmp
push
jmp
and
lea
adcl
mov
cli
jno
shrl
mov
insl
shr
jp
lock
fucomip
insl
mov
dec
jnp
jno
lahf
ror
lret
mov
pusha
pop
mov
dec
mov
adc
adc
sub
fldl
cmp
leave
bound
insl
mov
or
cmovg
xor
popf
cmpxchg
xchg
je
jae
sahf
rcrl
cmc
pop
lea
pusha
mov
cmp
sbb
xor
bound
sub
sub
subb
lahf
movsl
inc
push
sub
mov
movsl
por
mov
mov
xor
adc
and
insb
imul
in
in
and
push
fstp
ror
push
mov
add
out
jmp
add
jnp
in
pop
inc
cmp
pop
xlat
imull
fdivr
push
or
adc
les
insb
sub
xchg
dec
imul
mov
shl
insl
dec
shr
mov
mov
iret
cltd
addl
sbb
mov
sub
in
dec
pop
pop
mov
add
adc
jno
sti
xchg
inc
jecxz
push
loopne
dec
inc
or
fmull
loope
rorl
loope
dec
bound
mov
fdivr
mov
mov
into
add
dec
mov
fnsave
cltd
pop
mov
sbb
cld
add
std
and
in
fldt
nop
dec
jo
shrl
div
jle
test
add
inc
mov
sbb
cmp
pop
pushf
mov
insl
out
or
pop
or
mov
jne
mov
in
and
lods
sbb
adc
call
mov
cli
jp
fsts
pop
rcll
aam
negb
aad
or
mov
in
sub
aad
adc
imul
add
fucomp
sahf
cmp
and
xchg
sti
push
mov
hlt
loop
sbb
inc
push
adc
and
sub
es
xchg
mov
addr16
shlb
push
clc
adc
jl
and
mov
hlt
mov
adc
test
push
push
jo
pusha
mov
mov
inc
inc
pop
sbb
stos
cmc
sub
dec
sub
or
xchg
ds
mov
shrb
pop
sub
addr16
out
mov
les
xchg
mov
data16
js
pop
movsb
xchg
clc
pushf
fists
sub
pop
icebp
xor
test
or
mov
push
lcall
adc
inc
shlb
popf
add
sub
jl
leave
jns
jns
imul
out
mov
xor
sub
test
lret
pop
pop
mov
mov
adcl
shrb
sbbl
stos
ljmp
xchg
rclb
out
in
add
cmp
or
std
xchg
lds
adc
push
mov
inc
and
inc
aad
sub
decl
sbb
jle
gs
pop
into
loop
xlat
pop
jae
mov
sbb
mov
dec
sbb
mov
push
jmp
pusha
sub
testl
sub
xchg
aas
adc
cwtl
add
xchg
arpl
jp
mov
adc
pop
xlat
mov
ljmp
pop
adc
fistpll
stos
outsl
push
pop
fsubp
add
popa
jnp
pop
shll
pusha
movsb
call
xchg
mov
sbb
add
dec
mov
mov
test
mov
lahf
pop
inc
emms
stc
lock
scas
xchg
xorps
in
cmp
cmp
mov
push
add
pop
adc
adc
adc
roll
dec
xchg
mov
push
jo
aad
in
sahf
lret
xlat
inc
push
push
or
lock
and
test
jns
stc
xor
fdivrp
lods
fsubrl
scas
aas
cmp
std
jbe
xchg
sub
gs
outsb
ret
lcall
cs
sbb
inc
leave
imul
stos
pusha
cmp
into
push
push
ljmp
nop
mov
adc
push
xchg
sbb
inc
aam
mov
xchg
jbe
add
mull
mov
sbb
dec
int3
fstl
into
inc
lret
in
push
dec
cwtl
insl
scas
inc
mov
mov
leave
inc
mov
test
int
adc
xlat
sub
mov
mov
jg
or
pushl
or
push
jecxz
jne,pt
mov
adc
shl
xor
adc
rcr
add
lods
cpuid
cli
mov
ret
stos
jl
cmc
mov
push
orb
xchg
pop
roll
in
mov
ja
imul
scas
mov
clc
movsb
or
xor
jno
dec
das
arpl
lcall
push
les
jp
test
lods
push
fwait
mov
jne
popf
in
sbb
shrl
mov
not
int
mov
push
fs
icebp
shr
or
mov
ret
es
and
xchg
fwait
dec
mov
mov
or
or
mov
dec
imul
out
sub
outsl
pop
test
push
test
jae
les
jle
fldenv
mov
inc
ljmp
rorl
int3
lods
in
mov
adc
fidivs
mov
and
repz
lahf
jne
or
dec
sub
rcrb
movsl
loop
sbb
das
shlb
jbe
cmp
js
pusha
fs
iret
and
cld
bound
mov
cmp
rcrl
mov
daa
pusha
and
and
out
inc
pushf
mov
mov
sbb
mov
fwait
dec
movsb
loopne
popf
xor
pop
int
orb
js
je
sub
lcall
add
xor
jns
test
aas
icebp
stos
mov
ljmp
mov
inc
test
cmp
xchg
rorl
in
and
shll
mov
repz
shll
cltd
mov
andl
adc
push
enter
imul
fidivl
mov
shrl
enter
les
std
push
cmpsb
jge
aaa
shrl
in
loopne
sti
in
inc
xlat
adcb
stc
int
sub
aam
pop
out
shl
add
sub
inc
aad
jno
in
fidivrs
xchg
mov
push
or
push
fst
pop
test
imul
mov
in
cmpl
push
lret
sub
imul
fwait
pop
out
sar
je
lcall
in
xchg
imul
ljmp
sub
popf
and
dec
in
aaa
xchg
xor
ja
jmp
push
mov
jae
add
sahf
int
imul
dec
push
mov
call
cmp
inc
inc
cmpsb
mov
scas
xor
bound
addl
in
jae
push
cmpsl
inc
cs
scas
jno
cwtl
and
xchg
adc
xor
lret
cmp
fildll
mov
in
and
dec
repz
sbb
lret
fmuls
mov
xchg
add
mov
adc
push
vpaddd
xchg
dec
mov
and
or
std
in
lcall
ds
rcll
push
sbb
dec
es
repz
push
lcall
imul
and
int3
mov
lock
sub
mov
fcomps
int
stos
out
sub
int3
or
sbb
sbb
push
das
sub
adc
cmp
sub
loopne,pt
push
clc
gs
lea
mov
subb
cmp
or
sbb
mov
xchg
or
xchg
aas
mov
dec
inc
outsb
add
out
add
inc
fstpt
mov
or
dec
jp
inc
mov
in
mov
push
cmpsb
mov
out
rolb
mov
xchg
adc
xchg
adc
mov
mov
jecxz
pop
mov
jns
out
mov
fldcw
aaa
bound
and
lds
inc
mov
inc
inc
fcoms
mov
mov
outsb
fucomip
repnz
repnz
nop
daa
cmpsb
or
sub
stos
pop
push
movsb
inc
pmaxsw
inc
imul
mov
divl
lret
pop
and
ja
mov
and
lahf
std
pop
and
adc
dec
push
mov
xchg
pop
pop
push
ret
lods
xorl
mov
rcrl
jb
sub
xor
mov
addr16
test
cmp
mov
cltd
ret
aas
push
shlb
orb
jle
imul
ljmp
ja
rcrb
jg
mov
out
pop
retw
ds
cli
insl
add
jp
adc
jp
fcoms
dec
inc
movsb
es
loopne
mov
cmpsb
jl
xchg
cmp
jmp
aad
mov
cmp
pop
jmp
or
fwait
pop
cmp
xor
je
loop
inc
movsl
xor
pusha
push
rcr
lds
pop
and
std
push
push
jle
pushf
inc
sbb
jecxz
decl
sbb
mov
fmul
lock
in
lahf
dec
loop
lret
inc
or
inc
xor
mov
mov
mov
push
xor
push
stos
add
cmp
mov
rcll
cmp
adc
cmp
mov
push
aaa
mul
sbb
gs
push
call
imul
aaa
mov
imul
jmp
lods
stos
add
repnz
inc
loop
cmp
dec
test
arpl
fwait
push
sahf
scas
push
mov
jecxz
fdivrs
mov
xchg
push
pop
dec
je
test
cld
xchg
fisubs
inc
adc
rcrb
rolb
inc
mov
out
icebp
lock
and
fs
mov
mov
incl
mov
dec
repnz
int
sbb
sarb
push
in
push
in
mov
popf
int
rcr
wrmsr
in
aad
cmp
out
or
sbb
test
pop
movsb
cmc
stos
mov
push
testl
jno
pop
mov
mov
int
test
outsb
movsl
dec
mov
fiaddl
cmp
inc
mov
adc
mov
or
and
xchg
bound
imul
dec
push
mov
pop
imul
lds
insb
leave
xlat
or
iret
repz
cmpsl
jne
into
lret
cmp
in
ljmp
mov
adc
mov
mov
andl
push
mov
stc
mov
cmpsl
js
adc
stos
je
sub
ret
hlt
call
jecxz
jmp
or
pusha
push
lcall
mov
mov
and
cmp
lods
movsb
jmp
mov
inc
xchg
nop
push
cltd
inc
and
mov
in
loop
adc
sub
mov
add
cmpsb
add
inc
pusha
insb
popf
mov
sbb
movb
and
in
push
fisubrl
push
shlb
test
mov
xor
jecxz
ljmp
mov
cs
shrb
rcrb
icebp
gs
sbb
xor
sahf
and
mov
sub
pushf
add
push
mov
lock
leave
aam
mov
and
in
sti
xor
add
adc
cmpsb
out
sbb
xchg
xor
jle
jns
adcb
mov
add
xchg
and
incl
aad
fisubrl
pop
jnp
push
aaa
hlt
sbb
push
nop
jmp
xchg
cli
mov
xchg
gs
dec
xor
sbbl
ficoms
sub
lret
test
jg
xor
mov
clc
adc
jb
xchg
xor
mov
loope
loop
push
pop
sbb
adcl
sub
insl
xchg
pop
push
jae
pop
mov
xor
call
cs
mov
xchg
jp
mov
sbb
test
xor
sub
jmp
cs
dec
pop
xchg
inc
mov
ret
jno
dec
ss
mov
cmpsb
rol
or
mov
inc
inc
inc
arpl
lret
push
jp
mov
cmp
mov
pop
insl
adc
jge
rclb
jne
mov
adc
pop
lods
cs
test
faddl
xchg
ljmp
insl
jnp
inc
and
jge
in
xor
mov
lret
lods
insl
repnz
std
push
and
jns
stos
popl
lock
and
lret
or
inc
jmp
gs
lahf
dec
sahf
or
sysenter
jmp
add
mov
xchg
ret
pop
sub
ret
iret
xor
loopne
sahf
jecxz
mov
cmp
sub
stc
dec
inc
mov
mov
test
sub
into
je
and
lock
jle
stos
pop
fisubrs
addb
push
test
stc
pop
or
cld
fsubrs
fstl
movsl
in
jle
fcomi
mov
and
jmp
lock
jg
ljmp
or
in
mov
dec
loopne
xchg
xchg
les
sub
push
mov
movsb
cs
xchg
mov
dec
pop
sub
test
add
pop
mov
mov
fidivs
mov
movsl
xchg
test
dec
push
das
cmp
inc
cmp
cmp
dec
aas
in
jb
mov
add
push
xchg
aad
in
mov
jp
xchg
pushl
data16
xor
sub
fwait
enter
xchg
aaa
popa
outsl
sbb
ret
int3
sbb
arpl
pop
stc
repnz
mov
cwtl
in
popf
lds
push
pusha
xchg
cmp
fdivrl
js
jmp
insb
sahf
inc
mov
hlt
mov
lea
mov
xor
sbb
xchg
pop
and
push
add
mov
test
test
jmp
ljmp
out
in
lahf
fldenv
cmpsl
or
jne
ja
repz
test
mov
adc
cltd
cmp
std
mov
mov
sahf
in
sahf
je
add
xchg
cld
nop
bound
test
in
xchg
aam
dec
sbb
xor
jp
mov
add
jne
shr
fsubr
fwait
push
pop
cld
cmp
in
ret
arpl
xchg
out
pop
push
push
xchg
add
mov
sbb
add
addb
xlat
jae
xlat
movsl
lock
dec
rcrb
mov
add
mov
and
shlb
fildll
and
sub
lea
into
mov
jbe
addr16
cmp
or
mov
aad
dec
or
inc
xchg
mov
fstl
rcrl
sbb
xchg
and
jge
jp
add
xor
mov
jbe
mov
add
mov
andb
outsl
jge
outsl
mov
jmp
cmp
inc
sbb
dec
adc
data16
inc
pop
add
xchg
jne
xchg
or
mov
out
inc
ja
adc
rolb
dec
push
stc
movsl
adc
add
les
out
repz
outsl
out
mov
sub
insb
xor
sbbl
and
in
into
dec
pusha
mov
fisubrs
cld
jo
mov
cmp
mov
xor
sahf
push
idivb
xchg
xchg
and
sbb
pop
cmp
jns
aas
stos
adc
je
rcrl
mov
cmp
sub
push
test
imul
mov
xor
jg
enter
cmp
repz
xor
mov
sahf
ds
lea
rolb
pop
cli
and
nop
mov
push
ret
fcompl
loopne
push
push
inc
inc
shl
insb
idivb
jns
packssdw
lcall
in
loopne
mov
sbb
out
lods
xor
mov
dec
mov
cmp
mov
xlat
pushf
mov
sahf
int3
in
cmp
int3
int3
rcll
add
fimull
xchg
stc
out
clc
das
out
faddl
inc
mov
addr16
cmpl
sub
rcr
das
mov
add
idivb
es
jge
adc
add
bound
outsl
pop
cwtl
rclb
es
fisttpll
pop
push
adc
test
mov
sahf
mov
cmpsl
jne
pop
or
enter
icebp
xchg
mov
push
popa
sbb
arpl
sub
xchg
add
cmpsb
mov
xor
enter
adc
mov
and
subb
push
adc
outsb
mov
or
cmc
push
out
mov
sub
lcall
imul
xor
push
ljmp
push
sub
daa
fmuls
dec
adc
fildl
cmp
inc
jne
insl
push
ds
and
prefetch
sbb
fs
cmp
out
into
ret
cld
xchg
xorb
lea
dec
movsl
sub
subb
in
mov
loopne
idivb
add
fmul
jecxz
push
clc
xorl
pusha
inc
out
jp
std
pop
in
dec
or
jo
leave
sub
cmpsl
dec
es
cmpsl
outsl
das
or
and
enter
inc
bound
push
das
ljmp
dec
cld
loopne
push
stos
dec
or
outsb
mov
or
gs
mov
addr16
fdivr
add
outsl
shll
adc
sbb
sbb
in
pop
rcl
inc
daa
or
bound
add
mov
ret
jmp
vmwrite
jmp
enter
jle
loopne
andl
repz
mov
xor
and
sub
mov
lods
xlat
pop
sbb
xchg
cmpsb
in
sbb
jg
xchg
mov
setbe
adc
mov
or
fistpll
adc
loope
das
push
xlat
xor
vmread
iret
pop
call
ss
add
push
popf
and
loope
ret
adc
call
popa
arpl
test
sti
loop
cmp
clc
and
sub
stc
dec
xchg
std
jo
push
add
mov
and
add
mov
test
dec
aaa
stos
cwtl
sub
cmp
imul
js
and
or
dec
shlb
mov
in
movsl
xor
movsb
cli
in
and
or
mov
xchg
jo
stos
pushf
aad
xchg
add
sub
mov
fildl
mov
dec
sub
dec
mul
movsb
out
jmp
loop
sub
push
pmuludq
adc
pop
or
and
cmp
push
inc
xchg
in
test
andl
or
fstpt
cmpsb
sbb
loop
outsl
push
lret
sbb
mov
inc
push
cmpsb
mov
add
pop
or
in
cmp
jae
cltd
dec
mov
jecxz
jl
and
fnstcw
add
or
repnz
rorl
xor
js
mov
push
jo
popa
pop
cld
mov
xor
hlt
scas
mov
and
fisubs
adc
adc
cltd
push
nop
mov
mov
jge
mov
mov
jmp
lret
mov
xor
add
add
test
in
or
pshufw
pop
data16
pop
leave
andb
icebp
push
or
test
or
jl
jl
mov
xor
xchg
push
mov
sbb
gs
inc
inc
data16
jmp
int3
xlat
or
sub
push
fcomps
xchg
inc
push
clc
pop
mov
and
and
adcl
add
and
iret
idivl
lret
cmp
fistps
test
shll
orb
cmp
enter
push
push
xor
lds
jge
push
sub
adcb
loope
xchg
rcrl
mov
push
in
pop
dec
inc
jge
daa
or
mov
mov
jmp
ret
jmp
jp
mov
in
xorl
mov
adc
outsl
adc
jnp
outsl
push
cld
nop
xchg
xchg
rolb
sub
aad
inc
xor
repz
mov
jne
cmp
lret
or
inc
in
in
popa
cmp
push
in
mov
and
mov
ja
repz
mov
xor
fucomi
lret
lock
iret
lahf
test
lcall
xchg
aam
and
sbbl
bound
or
clc
xor
roll
shr
pop
in
dec
insl
cli
insb
xor
and
add
addr16
or
insb
out
rolb
mov
inc
ret
mov
sbb
push
sbb
mov
out
xchg
sub
mov
sahf
sub
pushf
pop
fs
iret
ret
shll
outsl
fnstsw
call
xor
mov
jge
test
and
adc
sbb
pop
push
add
sbb
mov
push
mov
mov
pop
pusha
cmpsl
lret
out
sbb
mov
leave
sbb
scas
cmp
sub
aas
jp
lahf
xor
mov
shrl
cmp
sbb
add
sbb
and
push
xchg
lcall
jb
enter
insl
add
mov
jbe
leave
mov
sbb
xor
push
sbb
jecxz
dec
and
dec
mov
test
rolb
fdivr
xchg
pop
arpl
add
xchg
inc
mov
xchg
into
mov
andl
xchg
pop
loopne
add
jae
pop
and
xor
sbb
or
movsl
mov
or
out
faddp
adc
jge
in
and
ret
test
jo
jb
mov
mov
mov
cmpsb
js
push
fldl
push
sub
sbb
int3
add
adc
lds
loop
xchg
cli
cwtl
sarl
popa
sbbl
mov
stos
ss
fisubrl
lret
jb
das
mov
mov
xchg
pop
in
or
pop
out
dec
mov
movsl
push
and
push
jns
sbb
pop
or
movsl
jne
push
pop
mov
ss
frstor
mov
push
push
int
sbb
mov
mov
sbb
sbb
add
out
jecxz
xor
fs
cmpsl
dec
aam
jp
aad
in
scas
add
dec
arpl
sbb
ficompl
fidivs
nop
out
jb
lret
sarl
cld
repnz
pop
pop
ret
mov
jae
out
mov
xchg
into
scas
pop
dec
pusha
nop
jmp
dec
inc
mov
xchg
notb
mov
out
pop
pop
filds
sub
mov
pop
aaa
ret
stos
adc
lret
sbb
loope
std
loope
cmp
movsb
lahf
xchg
pop
lock
fcompl
lcall
xchg
pop
and
pop
sbb
dec
pushf
xor
sbb
cmpsl
sti
sahf
pop
jns
gs
es
push
mov
mov
xchg
bnd
mov
loopne
mov
inc
adc
fdivp
add
das
pop
xchg
jecxz
cmpsl
mov
fnstenv
xchg
out
movsb
mov
jmp
cmp
icebp
jg
jb
dec
mov
mov
lret
fisubrs
loopne
dec
adc
xlat
xchg
mov
ljmp
xor
sarb
cmc
lret
inc
jmp
aas
mov
mov
repz
data16
push
push
and
movb
popa
out
jne
pop
mul
dec
dec
and
pop
push
adc
dec
ret
fnsave
add
fsubp
cld
loope
addr16
repnz
aam
pop
ljmp
sbb
pushf
stc
inc
js
cmp
dec
jo
inc
aaa
pop
dec
jmp
loop
mov
and
insb
gs
mov
test
xchg
and
sbb
pop
std
dec
loopne
jo
pushf
xchg
pop
popa
or
and
imulb
push
ret
lret
xchg
out
clc
loop
daa
dec
pop
repnz
xor
mov
sub
mov
pop
jg
sub
and
push
jp
int3
mov
xchg
sub
push
icebp
cs
lret
push
mov
pushf
jb
ja
sub
sbb
inc
cmp
mov
testb
mov
or
ffreep
xchg
lds
jmp
fsubrp
leave
out
and
pop
xchg
in
dec
push
into
dec
adc
sti
or
sub
stos
push
cmp
daa
lods
sbb
jbe
orl
dec
mov
and
mov
stc
clc
insl
mov
inc
adc
test
nop
movsb
cmp
lret
lea
notl
test
negl
sbb
mov
test
add
stos
dec
mov
jnp
mov
cli
movsb
ss
inc
negb
cmp
and
or
data16
fldcw
sub
push
cmpb
mov
pop
popf
sub
jbe
ficomps
add
lahf
addb
adc
inc
push
in
pop
adc
and
leave
fiaddl
mov
shll
aas
sarb
sbb
or
pusha
imulb
mov
in
and
lock
xor
sarb
enter
push
repz
outsl
idivl
movsl
jecxz
sub
jmp
cltd
mov
decb
scas
cmpsb
cmp
sbb
imul
xor
xor
jno
dec
jno
out
push
push
lods
cmp
icebp
add
add
jae
mov
and
cmpsb
mov
notb
ss
or
push
and
hlt
add
dec
push
jmp
popf
inc
mov
mov
fldcw
sub
xor
fisubrs
aaa
or
xchg
push
push
mov
ret
mov
jnp
mov
ret
xor
shl
test
int
dec
sub
and
push
mov
mov
js
push
js
mov
mov
inc
jnp
push
pop
rcll
jne
xor
shlb
nop
fcmovu
and
or
xchg
in
xor
lods
add
mov
xchg
sarl
flds
sub
incb
dec
xchg
mov
ds
mov
in
shll
and
mov
jb
stc
data16
dec
adc
nop
dec
in
cmp
movsl
mov
or
lds
cli
in
outsl
adc
in
call
out
lds
xor
cmpsl
xchg
fimuls
adc
lds
jl
mov
inc
push
std
add
xchg
cwtl
push
xchg
or
in
lods
cmp
xchg
mov
mov
mov
movsl
push
rorl
movsb
adc
mov
fs
and
jns
dec
pop
dec
push
cmpsl
sbb
push
dec
out
repnz
leave
test
insl
ficomps
mov
insb
mov
ss
mov
aas
rclb
dec
mov
push
jp
cltd
xchg
inc
mov
pop
lds
fcomp
add
mov
std
scas
es
adc
xchg
lods
cmc
or
iret
icebp
inc
in
sbb
fdivrl
scas
movsb
mov
jbe
ds
dec
adc
pop
inc
adc
mov
adc
pop
sub
pop
pop
rclb
dec
push
imul
pop
pusha
outsb
jno
push
adc
in
push
js
ss
adc
ret
jb
mov
fiadds
adc
and
rorb
push
pop
jae
es
jp
movsb
cmp
and
cmp
int3
cmp
aas
mov
bound
arpl
mov
and
jo
mov
xchg
jg
mov
cmpsb
cmp
mov
dec
inc
push
lods
or
xchg
aam
cs
cmpsl
fcomip
mov
or
cmpl
ficompl
xor
and
xor
pop
sub
push
xchg
sub
outsb
jae
inc
int
jne
pop
jne
popa
in
movsl
arpl
loope
pop
popa
lods
push
xor
push
bnd
mov
xor
je
jb
mov
mov
inc
dec
cmp
push
sti
push
sub
cwtl
xor
adc
cmp
popa
repnz
js
lcall
adc
jns
sbb
mov
push
mov
mov
rcr
movsb
dec
cltd
pop
or
lahf
pop
xor
xor
call
cmpsl
inc
dec
sti
push
aad
jmp
dec
lock
pop
aaa
xor
cwtl
jmp
and
and
adc
das
jbe
mov
imul
cmp
add
push
ds
mov
arpl
jecxz
dec
cmp
sbb
push
scas
jl
mov
scas
push
mov
jb
mov
adc
jg
add
push
sub
vcomisd
sbb
jo
or
pop
das
mov
std
lahf
mov
cli
ret
sbb
dec
inc
and
les
rcrl
enter
mov
mov
jbe
icebp
inc
xchg
fsts
stos
adc
add
mov
pop
and
mov
inc
and
fldt
test
int3
lods
xor
mov
fmuls
mov
mov
mov
cmp
mov
cs
or
mov
lret
shlb
push
lret
dec
sub
imul
stos
adc
rol
icebp
cltd
mov
sti
cltd
push
or
shlb
cmc
or
sbb
stos
adc
lock
lret
mov
adc
shll
push
mov
lret
ret
sub
jno
pcmpgtd
ss
rolb
hlt
xchg
cltd
int
jecxz
and
cmp
inc
push
inc
jb
add
xchg
jns
xor
vmwrite
pop
push
push
jo
mov
in
arpl
ss
lret
cmp
cs
dec
sub
push
in
in
rclb
fs
jno
sbb
std
xchg
loop
pop
jae
and
jnp
push
xchg
sbb
test
mov
int3
jmp
mov
adc
mov
jns
xchg
pop
or
mov
lahf
jne
push
mov
lcall
xchg
xchg
scas
xor
ds
enter
das
movaps
dec
xor
outsb
in
cmp
sti
inc
fsts
and
daa
mov
xchg
and
cli
adc
or
in
push
pop
aam
jne
adc
mov
lahf
sti
mov
sub
enter
ret
sbb
jmp
idiv
shlb
lahf
cltd
jp
fidivrl
jb
push
adc
xchg
sbb
jno
sbb
lds
movl
push
sub
add
mov
aas
or
xchg
or
or
rcrb
mov
xor
mov
mov
sbb
mov
xor
adc
or
rcll
adc
enter
jne
shl
xchg
xchg
or
addr16
scas
xlat
mul
sbb
lcall
sar
les
testb
sub
cmp
fdivrl
mov
jb
mov
das
mov
in
cmp
adc
mov
ss
dec
test
sahf
sbb
fcmovb
adc
sbb
bound
pop
mov
xor
jle
inc
add
daa
mov
mov
cmp
mov
push
ret
loop
divb
jbe
jle
xor
push
adc
dec
dec
sub
outsl
cmpsb
sub
clc
xchg
cmp
xor
loope
sub
adc
jo
add
or
cmp
pop
mov
mov
fiaddl
jo
jnp
push
or
outsb
shlb
iret
inc
xor
jb
mov
mov
sub
sub
sub
mov
pop
sub
or
sub
cmpsl
jp
jl
push
imull
into
cmp
sbb
outsb
xchg
es
inc
mov
lds
mov
cld
out
push
lahf
cmp
sbb
fisttps
out
pushf
mov
jno
rsm
push
mov
xor
leave
outsb
aad
aaa
into
inc
pushf
outsb
lret
mov
xchg
and
push
and
das
sbb
popa
jns
in
inc
insb
je
jnp
or
insb
test
and
ficoml
mov
adc
push
and
or
sbb
jbe
lock
icebp
fnstenv
fmuls
in
int
push
shrl
fisttpl
jecxz
pop
ljmp
mov
jg
push
test
cld
sub
sub
movq
add
jno
or
cli
dec
pop
pop
xlat
cmp
int
dec
sti
add
inc
push
cld
xchg
fwait
pop
pop
xchg
jg
repz
mov
pop
sti
push
call
mov
call
adc
lcall
push
lods
cmc
inc
and
xor
dec
mov
pop
lahf
mov
mov
aaa
mov
adc
loopne
xor
inc
xchg
xorb
lret
scas
insl
or
dec
js,pn
and
pop
jb
fimull
inc
inc
and
xchg
aas
test
fwait
aam
pusha
xchg
rcr
dec
inc
pop
adc
or
pop
add
xor
sub
cmpsl
mov
nop
icebp
jecxz
mov
xchg
jmp
insl
and
nop
mov
fildl
dec
and
xor
imul
mov
sbb
add
cmpsl
pushl
andl
jle
pop
jns
push
pop
dec
pop
fmuls
enter
int3
test
stos
stc
clc
sahf
aas
pop
jge
and
and
xchg
nop
push
ds
dec
pop
push
sbb
jb
xor
fwait
mov
lods
pop
cwtl
mov
adc
xor
jns
repz
fwait
xchg
add
add
or
cmp
xor
or
fucomp
js
pop
add
inc
pmuludq
jne
jbe
xchg
jmp
adc
push
shlb
rolb
in
and
push
jne
loope
add
xlat
fcmovb
push
adcl
mov
or
mov
mov
mov
leave
cmp
pop
das
lds
xchg
repnz
scas
int3
push
mov
movsb
sub
aaa
lcall
das
rcrl
push
ret
mov
ud0
iret
jmp
or
mov
jp
jo
iret
imul
test
cs
lods
dec
mov
xor
jne
push
jno
sbb
jle
hlt
les
jecxz
loope
lods
outsb
sbb
cld
dec
aad
mov
in
add
fbld
loopne
stos
dec
cmc
std
dec
adc
shrl
sbb
add
pop
dec
shr
xchg
jle
insl
lods
pop
je
dec
sub
es
cmp
add
and
cltd
pushf
outsl
aaa
sbb
pop
insl
jp
cmp
es
jge
flds
xchg
xchg
scas
push
aas
cli
mov
push
fnstcw
push
sbb
xor
mov
xchg
enter
lahf
les
dec
loopne
out
jno
sbb
lcall
add
mov
sub
leave
sub
call
imul
out
in
dec
aas
cltd
fsub
pop
bound
insl
lock
inc
cmp
ficompl
shll
adc
jge
jmp
mov
and
lods
mov
sarl
jnp
mov
add
sti
jne
mov
adc
or
or
out
or
add
les
push
lgs
loopne
push
ss
inc
or
cmpb
mov
pop
pop
scas
adc
ja
arpl
mov
mov
jno
and
int
cs
add
loopne
mov
pop
or
cmp
je
cmpsl
mov
cld
divl
lds
cmp
clc
call
icebp
sub
adc
lahf
cmp
inc
add
mull
icebp
bound
mov
adc
inc
pusha
mov
or
inc
out
xor
rcr
dec
dec
pop
lods
add
push
push
sub
out
adc
cmp
adc
jecxz
sub
jno
cmp
pop
movsl
add
repnz
mov
push
mov
insl
test
adc
fnstenv
sbb
shll
inc
ret
std
sbb
pop
test
push
loopne
cmpb
cwtl
xlat
lock
inc
fcoms
mov
or
test
pop
push
xlat
insl
ficomps
xchg
pop
jg
xlat
xchg
push
popa
stc
jl
cmpsb
hlt
nop
ja
mov
jecxz
insb
shrl
clc
pop
aas
sub
cmc
loope
sbb
push
sbbl
xor
mov
shlb
int3
cmp
adc
popl
push
or
mov
and
test
mov
cmpsb
push
cmp
mov
jecxz
aam
out
jnp
inc
mov
lea
adc
das
jno
lea
ret
loope
xor
out
mov
mov
mov
xor
rcrl
push
insl
push
push
inc
pop
js
andb
aad
push
and
xchg
push
sbb
aaa
shlb
push
inc
imul
ljmp
lods
cmp
mov
inc
add
mov
push
inc
sub
cmp
push
push
dec
cld
nop
or
inc
das
in
stos
cli
popa
rcll
inc
pop
sarl
fnstsw
subl
cltd
xor
or
hlt
xchg
push
add
stos
lret
jnp
fnsave
je
mov
push
jno
test
pusha
test
pop
loop
dec
cmpsl
adc
pop
stc
js
push
push
hlt
inc
xchg
lahf
cwtl
out
popa
hlt
loope
xchg
and
adc
sbb
add
je
xor
sbb
pop
gs
lods
lods
test
js
jns
aas
xchg
shrl
loope
adc
adc
in
pop
mov
sub
mov
adc
outsb
add
imul
push
fcmovnbe
mov
mov
sti
xchg
test
int
or
mov
loopne
mov
sbb
mov
repz
jae
dec
and
adc
cmc
incb
cli
addr16
insl
sbb
in
and
jg
inc
cmpsb
mov
sub
movsb
jbe
jae
push
shlb
cmpsb
ss
mov
lds
stc
daa
icebp
outsl
push
loopne
notl
cmp
lds
mov
js
jno
mov
pop
cmp
sahf
or
fistpl
mov
push
stc
jge
cmp
sbb
repnz
dec
ret
es
cmp
lahf
dec
push
push
pop
add
les
repnz
adc
fists
mov
test
mov
jno
or
cltd
add
inc
dec
pop
jle
push
scas
adc
mov
in
sub
mov
lcall
cld
mov
sbb
xchg
pusha
lods
push
gs
inc
outsb
loope
mov
sub
pushf
jmp
filds
pop
repz
in
mov
loop
test
sbb
call
jl
gs
fiadds
cld
sub
daa
mov
out
ja
xor
mov
jmp
sar
dec
push
pop
outsb
es
cmp
pop
or
into
les
jns
jg
ljmp
aaa
adc
pop
int3
lods
clc
cmc
cld
mov
daa
push
stc
jne
push
or
sbb
out
fstl
cmp
jbe
popa
cli
mov
fisttps
mov
or
dec
out
mov
rcrl
clc
mov
bound
push
int
lcall
cltd
jnp
scas
jg
mov
xor
inc
ss
ja
scas
pop
xchg
xchg
mov
aaa
imul
or
fimull
icebp
jns
out
lcall
into
cltd
sarl
cmp
je
jne
cmp
test
jge
sti
mov
loop
and
stc
lret
test
icebp
jg
or
mov
jp
lcall
lea
cld
inc
enter
xor
cmp
cmp
cli
dec
sbb
lahf
xchg
hlt
push
adc
es
inc
sbb
into
mov
lds
xor
dec
cmp
pop
xchg
pop
push
out
sahf
lret
mov
mov
dec
dec
mov
dec
add
int
mov
subb
mov
shlb
mov
test
inc
inc
movsb
lcall
mov
add
icebp
int3
jecxz
popf
xor
jno
addb
mov
lcall
repz
loop
mov
sbb
xchg
or
mov
or
jmp
sarl
popf
outsb
iret
aam
lahf
mov
insl
mov
lods
push
or
or
sub
arpl
sbb
inc
icebp
pop
shrl
push
add
inc
bound
push
imul
loopne
or
orb
dec
ja
xor
or
dec
pop
lret
ljmp
fdivrs
cmpsb
adc
cmp
jecxz
sub
popa
mov
andl
and
cmp
leave
insb
push
sahf
and
les
jnp
nop
pop
jns
mov
jg
rorl
sub
adc
gs
pop
bound
or
aam
push
into
jns
sbb
inc
sbb
in
or
sbb
enter
mov
inc
mov
outsb
or
mov
repz
push
je
lds
or
in
cmp
loope
push
or
pop
and
repnz
movsl
jl
fimull
push
daa
out
aaa
scas
and
xor
push
mov
xchg
lds
or
das
jmp
pusha
lods
pop
das
jbe
inc
fwait
xchg
mov
in
push
adc
or
and
xchg
popa
inc
xor
or
enter
mov
cmpsb
xchg
fdiv
lock
xchg
jle
aas
cwtl
rolb
jne
sbb
stos
lods
jno
mov
mov
jnp
cwtl
push
cli
fcompl
imul
push
xchg
out
xchg
add
ljmp
hlt
mov
lea
ds
scas
ja
xor
inc
movsb
cmp
and
or
inc
loopne
mov
lds
pop
sub
shll
sub
aaa
nop
in
fadds
es
iret
or
jge
mov
and
push
add
jne
nop
cmc
imull
cmp
dec
cmpsl
sub
mov
mov
out
lods
mov
dec
outsb
inc
out
inc
bound
icebp
addr16
cmc
lret
lods
pop
jp
pop
pushf
popf
lods
inc
aad
jmp
sub
push
aaa
push
adc
and
cmpsb
push
pop
mov
push
outsb
sahf
push
sbb
int
mov
into
pop
mov
lods
push
testb
or
pop
lods
fisubs
std
mov
cmp
jbe
fs
inc
xor
pop
bound
lds
sti
cmc
lock
xchg
aam
push
andnps
mov
pop
cmp
push
pop
mov
inc
xor
sbb
ds
cmpsl
mov
lret
xchg
fwait
inc
in
adcl
or
lods
fs
mov
pop
inc
jne
jl
ljmp
out
icebp
fistpll
add
adc
mov
push
je
xchg
lcall
shlb
or
mov
sbb
mov
pusha
mov
mov
test
aam
mov
outsl
je
pop
in
mov
mov
lock
jne
lret
fmull
push
rorb
movsb
cwtl
xor
cmp
lds
inc
xchg
mov
imul
dec
inc
or
adc
mov
or
test
lods
sbb
cmp
jecxz
cmp
outsl
orl
xchg
negb
icebp
sub
data16
lret
pushf
or
data16
ds
imul
rclb
sahf
dec
test
xor
insb
jo
mov
xor
rolb
sbb
shlb
test
int3
stos
push
leave
ret
cmpsl
iret
adc
adc
lahf
or
ret
mov
ret
sbb
aas
sbb
sbb
or
xor
filds
or
adcb
pop
aad
jmp
xchg
rol
jp
sbb
mov
lock
les
and
pushf
pop
mov
call
rol
leave
mov
mull
lods
shll
es
inc
cli
dec
jmp
mov
mov
ret
imul
arpl
lods
ss
and
mov
xchg
inc
jmp
adc
dec
cltd
std
add
push
add
les
jbe
cwtl
mov
jg
jle
mov
adc
lds
lret
aam
in
cmpsb
and
cwtl
push
or
add
or
mov
js
je
sub
in
lds
popa
xchg
fisttpll
add
push
mov
jge
cld
mov
push
das
pop
sub
or
or
add
pop
stos
bound
cli
xchg
xor
jns
inc
jp
fwait
and
std
repnz
sarl
ret
push
fnstcw
pop
and
cld
xor
pop
outsl
jbe
jmp
fisubs
ret
lock
ljmp
inc
stos
and
out
sub
pop
pop
push
push
cmp
add
ret
mov
adc
push
loope
xchg
lods
mov
add
mov
pop
xchg
sub
xor
leave
pop
and
insb
arpl
cmp
dec
mov
push
int3
push
pop
lock
out
movsb
mov
jge
loopne
lock
xchg
out
xor
sbb
pushf
adc
imul
out
hlt
das
jge
xchg
std
shrb
outsb
jns
fistpl
dec
mov
push
xor
in
movl
adc
movsl
jg
push
rolb
jns
pushf
pop
mov
or
imul
popa
push
test
and
jp
dec
ja
lock
dec
push
sarl
aaa
scas
and
inc
addb
fwait
cmpsl
mov
mov
jne
aaa
sub
cmp
xchg
push
in
iret
mov
andl
shrl
lds
aaa
lcall
jge
inc
dec
dec
fsubl
push
jmp
ds
inc
dec
push
leavew
lahf
lahf
push
cwtl
xchg
hlt
outsb
pop
ss
dec
lea
pop
and
sbb
push
inc
xor
in
insb
fadds
adc
fsubs
sahf
jle
daa
mov
cmp
icebp
stos
pop
aas
inc
push
insb
rcl
movsl
lret
scas
mov
adcb
adc
add
lods
push
setl
jns
cltd
outsl
xor
xor
ss
push
mov
mov
xor
inc
jl
push
push
pushf
cs
fmuls
add
popa
fsubrl
push
mov
fs
ds
ror
or
pusha
pusha
adc
sbb
hlt
xchg
lret
xchg
xor
or
shrb
or
adc
in
or
xchg
xor
pop
mov
lcall
add
data16
sbb
movsl
push
outsl
ror
fs
lods
jbe
xor
int
xor
mov
mov
ror
leave
fcmovbe
insl
sbb
dec
jne
and
adc
inc
jg
pop
mov
mov
mov
mov
rol
cs
sub
pop
adc
das
inc
jo
mov
dec
push
dec
icebp
sbb
pop
push
jecxz
mull
ret
push
pusha
add
rclb
pmullw
jl
cli
pop
test
fbld
mov
lods
sbb
inc
dec
or
pop
ds
scas
cs
push
das
xchg
cmp
inc
sahf
test
dec
out
mov
testb
inc
enter
pop
push
push
out
scas
ret
xchg
add
sbb
pop
rcll
notl
push
scas
fildl
or
in
cs
lret
movsl
out
pushf
pop
sbb
cmp
dec
andb
notb
test
hlt
arpl
shll
add
stc
inc
test
lock
xchg
mov
or
push
lea
dec
sub
mov
push
lea
jecxz
and
jb
daa
shll
cmp
loopne
mov
jl
aad
mov
cltd
aad
push
inc
mov
in
dec
or
and
xorl
cmp
ffreep
xchg
jmp
lahf
pop
inc
adc
stc
xor
addr16
inc
sbb
lret
lret
sbb
outsl
push
jae
mov
cmpsl
sbb
adc
sbb
cmpsb
xchg
mov
popf
push
sbb
inc
xchg
mov
icebp
iret
popa
add
je
aaa
xchg
pop
movsb
in
lret
xchg
or
jns
pop
insb
ljmp
dec
adc
std
cltd
push
repnz
xor
je
cmc
xor
arpl
pop
je
push
fs
push
imul
out
sbb
xorb
or
mov
pop
xor
push
outsl
add
mov
or
or
mov
sbb
jg
cmp
negl
and
aad
xor
pop
arpl
mov
mov
aaa
leave
dec
or
cmp
test
add
cld
pop
mov
aam
push
test
xchg
pop
mov
push
std
sbb
sbb
test
ds
and
add
push
jp
cmp
cmp
mov
cmp
dec
inc
jno
inc
scas
insl
inc
mov
add
mov
pop
iret
xchg
out
jne
fmull
push
stc
mov
jno
push
jns
cli
mov
andl
xchg
jne
cmp
out
ret
sbb
push
aaa
clc
clc
mov
mov
out
mov
lahf
nop
testl
popf
insl
mov
into
add
pushf
fisubrs
aaa
xor
ljmp
cwtl
dec
sbb
xchg
add
sbb
jmp
call
inc
stos
inc
dec
idivb
arpl
fidivl
movsl
ret
orl
rolb
sbb
int3
dec
rcl
jne
sbb
xchg
pop
cmpb
push
and
dec
jecxz
push
and
aam
or
or
mov
and
sub
push
mov
andb
and
xor
adc
sub
sbb
adc
cmp
popf
mov
push
mov
pop
outsl
inc
adc
dec
xlat
xchg
mov
xor
xchg
sti
sub
and
jecxz
stos
mov
xor
fwait
adc
leave
xchg
xlat
call
xor
nop
aas
mov
insl
gs
rorl
std
pop
cmp
add
je
loop
popf
xorb
add
or
mov
aam
dec
lcall
leave
fs
test
mov
repnz
push
add
mov
les
mov
mov
bound
xchg
ficoms
pushf
push
movsl
and
xor
and
mov
add
cmp
cmpsl
jbe
dec
and
pop
ret
inc
and
inc
ja
dec
add
cs
js
jb
divl
pop
subl
jns
xor
or
addl
mov
add
iret
mov
ret
pop
in
stc
xor
sub
aam
sub
jge
adc
and
lcall
and
push
jnp
mov
nop
inc
test
push
movsl
repz
bound
xor
aas
addr16
add
clc
lods
xchg
pop
push
push
je
lds
das
mov
mov
sub
mov
fdiv
pop
jae
stos
add
outsb
push
inc
cmp
lea
aas
sbb
xchg
imul
xchg
iret
inc
mov
hlt
lcall
dec
xchg
std
pop
out
add
inc
and
test
rorb
addr16
push
cmpsl
mov
push
mov
repnz
xchg
xor
or
mov
or
push
ret
maxps
ror
dec
sub
sbb
mov
mov
push
int3
pop
in
hlt
cmpsl
xchg
loope
lret
xchg
xchg
arpl
push
cld
fstps
popf
cmc
or
out
fstp
cmp
fsubp
mov
and
mov
popa
or
int
dec
jne
sbb
loop
push
or
push
fcmovu
push
xchg
lret
imul
adc
and
daa
pop
lret
fsubl
add
mov
int
inc
xor
sbb
mov
jne
lds
daa
enter
xchg
push
cmp
cmp
push
jge
lret
pop
xor
in
inc
sub
testb
pop
push
mov
push
jbe
mov
pop
jae
scas
movsl
cmp
jg
leave
insb
ret
jmp
and
xchg
push
ret
dec
xchg
inc
pop
lret
adc
inc
fidivrs
sbb
sub
jmp
xor
popa
cmp
rclb
mov
jle
shl
and
push
mov
mov
aas
movsl
push
out
pop
js
fimull
scas
imul
cmpsl
xor
mov
sbb
pop
loop
mov
push
pop
jbe
sbb
push
outsl
sub
jmp
adc
xor
sahf
call
ret
inc
loopne
sbb
mov
cs
rcr
dec
fwait
imul
in
push
push
xor
jle
ret
xchg
or
jbe
xchg
xchg
mov
lret
or
clc
test
in
in
push
rolb
pop
dec
xchg
into
push
jecxz
nop
jge
out
inc
pop
add
jge
lock
pop
scas
add
cld
neg
sub
sti
and
dec
je
fcmovbe
dec
inc
sbb
mov
xor
std
jo,pt
jge
xchg
movntps
mov
dec
inc
pop
lods
hlt
add
jbe
call
push
je
icebp
xor
cmp
mov
ret
in
mov
fstpl
cmp
mov
lock
push
scas
or
push
fwait
rcll
movsl
cmp
aam
mov
out
mov
pop
lock
xlat
xchg
cli
sahf
jb
xor
aam
dec
xlat
clc
xlat
adc
dec
inc
cmp
out
enter
fstps
test
sahf
mov
fistpll
repz
pop
jg
sbb
push
push
stos
mov
xor
push
adc
mov
sub
push
in
xorl
mov
xor
cmpsb
cs
repz
gs
into
sbb
mov
in
popf
pop
push
jnp
gs
xor
js
dec
add
int
jle
mov
jge
inc
or
adc
outsl
sahf
mov
movsb
in
enter
mov
xchg
out
aas
xchg
test
adcb
mov
dec
mov
in
jmp
clc
mov
shrl
jae
jo,pt
outsb
push
inc
add
iret
out
insb
and
popf
pop
int3
ss
movsl
mov
xor
pop
adc
sbb
mov
sahf
cmp
cld
not
imul
mov
data16
mov
jp
jl
test
outsb
ficoml
imul
in
dec
mov
and
sti
mov
je
mov
push
jo
cltd
mov
push
cmp
push
dec
sbb
test
dec
inc
ret
inc
adc
ret
int
imul
mov
cmp
mov
mov
jg
outsl
shrb
enter
lds
js
mov
ficoml
addr16
loope
lock
repnz
lahf
adc
aam
pop
cli
fistpll
shl
imul
rolb
int3
xor
inc
fiadds
xor
mov
xchg
mov
mov
sub
mov
or
test
lahf
pop
rorb
mov
and
scas
mov
jle
xor
addr16
sub
loop
mov
xchg
push
mov
mov
adc
subb
in
mov
ljmp
push
cmc
dec
stos
sub
imul
loop
fwait
lds
inc
dec
add
pop
es
jmp
fisttps
push
inc
push
das
addb
dec
enter
xchg
jns
sbb
mov
dec
pop
sbb
repnz
and
out
stos
cmp
and
fdivl
push
or
movsb
es
leave
adc
xchg
clc
icebp
and
movsl
pop
lods
out
xor
repnz
imul
dec
stos
test
adc
out
xchg
mov
mov
xlat
mov
jo
and
dec
sbb
rcrl
pop
lahf
adc
or
in
repz
mov
push
fs
mov
rolb
jnp
push
stos
add
jp
xchg
in
sbb
js
lods
sarl
or
aas
adcl
xor
push
icebp
pop
cmp
icebp
repz
jp
fcomps
outsl
pop
into
sbb
pop
pop
or
mov
movl
dec
in
je
jae
test
ret
dec
and
rolb
pop
lock
fwait
push
sbb
ror
pop
add
inc
stos
icebp
cs
insl
mov
push
cmc
pop
fwait
xor
push
pop
xchg
pop
in
xor
insb
out
mov
leave
mov
clc
xor
aam
add
inc
inc
inc
arpl
inc
in
stos
scas
mov
ja
mov
lahf
dec
dec
mov
cmp
dec
repz
add
lods
jbe
inc
scas
outsl
mov
sub
mov
jmp
sub
or
subb
sub
pop
mov
lea
icebp
rorl
push
inc
mov
mov
jae
cli
mov
pop
fidivs
jle
add
and
and
adc
test
jmp
mov
mov
adc
mov
test
insl
test
outsb
jo
adc
je
sti
mov
push
inc
mov
mov
ja
insl
jmp
and
in
fisttpl
add
sbb
ja
pusha
mov
dec
xor
orl
lods
and
sar
push
lock
jne
adc
enter
cld
jmp
push
xchg
cli
mov
pop
mov
popa
mov
shll
jmp
jo
stos
xchg
sub
fisttpll
or
and
mov
int3
dec
bound
jne
and
mov
sub
rcl
add
fstps
mov
sub
push
pusha
test
dec
push
outsb
mov
jmp
ljmp
jnp
dec
int3
xor
rol
out
rep
daa
lcall
inc
push
arpl
lea
dec
xchg
int
loopne
and
sub
or
nop
mov
loop
loope
into
lods
sbb
fisubs
push
pop
in
xchg
shrl
pop
insl
je
insl
loopne
mov
push
xchg
cmpsb
dec
scas
xor
loope
add
fldcw
or
mov
das
adc
pop
sti
jl
into
std
je
mov
mov
pop
cmpsl
xor
sar
loopne
ljmp
add
xchg
sub
not
and
mov
adc
leave
jo
mov
pop
add
movsb
ss
repz
jnp
mov
adc
jne
out
and
or
sub
loopne
out
mov
outsb
inc
in
cmp
popa
push
inc
lods
cli
jl
jnp
roll
inc
mov
jo
xchg
cld
xchg
dec
testb
repnz
inc
jecxz
fcmovnb
fs
adc
adc
xchg
push
sub
pop
push
push
movsb
bound
mov
sarb
sbb
divb
jl
fisubrs
mov
cmp
push
lock
in
mov
push
xchg
in
enter
cs
negb
lea
pop
xchg
repnz
lds
lds
push
push
cmpsl
pop
stos
leave
adc
cmp
hlt
push
push
xchg
sub
add
shrb
rcrl
xor
sub
xchg
aad
leave
sub
sbb
cld
pop
pop
lock
aad
mov
mov
fwait
mov
int3
mov
clc
aaa
ja
sub
mov
imul
les
imul
jnp
subb
insb
cs
lret
mov
jle
or
int
mov
add
loop
ss
aaa
loope
cmp
xor
imul
call
sbb
push
scas
fwait
ljmp
outsl
add
add
sub
add
faddl
sub
jl
lret
repz
mov
bound
jae
mov
in
add
outsl
or
mov
lea
cld
arpl
inc
sbb
frstor
xchg
fidivl
fs
fcmovb
movsb
push
ds
jge
div
jecxz
and
out
icebp
imul
loop
scas
aam
and
stos
inc
incb
out
mov
sub
pop
int
and
mov
push
cmp
roll
xchg
mov
push
pop
pop
inc
mov
cmc
nop
adc
dec
mov
dec
adc
ret
mov
mov
add
shll
push
dec
jne
xchg
dec
das
outsl
sti
jle
xchg
sub
es
cld
cmp
jl
jg
out
jo
sti
std
pusha
jg
aam
sub
negl
jge
aaa
jl
mov
mov
or
mov
fwait
push
jg
loopne
mov
arpl
fiaddl
leave
adc
jle
mov
out
xchg
xor
adc
inc
jg
iret
int3
aaa
fisubrl
mov
pop
push
fdivs
imull
jl
lret
cmc
add
test
rorl
inc
dec
das
cmp
ja
imul
mov
ja
lahf
push
punpcklwd
pop
mov
scas
lahf
mov
cmpsl
jno
icebp
mov
clc
aaa
inc
icebp
bound
or
in
mov
sbb
movzwl
push
dec
ficompl
lods
cmp
out
fadds
insl
pop
fnstcw
and
cmpsb
nop
mov
js
jge
adc
mov
mov
inc
xchg
ss
push
mov
int
lods
xchg
push
jmp
js
dec
in
inc
xchg
and
gs
jns
inc
aas
xchg
test
pop
arpl
cmc
cwtl
js
cmp
mov
movsl
sub
imul
out
call
adc
sbb
les
or
iret
jle
push
or
aaa
pop
or
mov
and
pop
add
pop
bswap
sub
cltd
cmp
lahf
ss
add
push
imul
adc
sbb
add
repz
fadds
xlat
mov
mov
mov
push
scas
inc
in
xor
subb
xor
or
mov
jmp
sbb
add
movsb
mov
or
outsb
out
jne
mov
sbb
cltd
aaa
sahf
jns
cmc
push
or
mov
loopne
fs
mov
add
xchg
push
popa
clc
mov
loope
fnclex
fs
dec
jecxz
sub
mov
cli
in
arpl
jp
pop
jne
rclb
aam
pop
enter
mov
and
addr16
jb
imul
push
push
imul
jnp
and
test
ds
insb
mov
mov
sbb
mov
xor
dec
lcall
jae
push
inc
cmp
mov
and
cmpsb
xchg
lea
stos
cmp
ljmp
sarl
jne
subl
pop
or
dec
cmp
push
jmp
outsb
sub
adc
fcoml
mov
adc
cmp
int
mov
aaa
subl
push
hlt
push
or
loopne
out
sbb
sub
enter
or
hlt
cmpb
out
xor
aas
push
cmp
jno
js
adc
ja
mov
sbb
push
xchg
test
sbb
repnz
outsb
jae
popa
lea
jbe
lahf
popa
jg
arpl
inc
or
fwait
outsb
pop
into
add
outsl
adc
in
push
cltd
mov
shll
mov
shl
int3
js
and
addr16
xchg
jl
xchg
es
xchg
outsl
push
mov
je
movsb
jge
inc
fnstcw
xchg
int
gs
pop
pusha
cmc
dec
pushf
lea
and
movl
xor
jl
xor
pop
pop
aas
mov
mov
adc
xor
arpl
push
cmp
notl
fidivs
je
je
pop
sbb
stc
aaa
fmulp
dec
call
adc
jmp
iret
das
test
iret
jl
fldcw
mov
loope
xchg
lods
mov
inc
fidivrs
mov
fwait
pop
cwtl
jle
shl
push
sbb
sbb
scas
jae
out
push
jb
mov
xor
gs
in
inc
fcom
mov
jmp
sub
fs
cmpsl
mov
int3
xlat
gs
push
mov
or
or
mov
dec
inc
mov
push
fsts
jne
jnp
clc
mov
jo
insb
push
cs
mov
push
ss
pop
jmp
das
mov
fimull
addb
mov
test
jge
pop
and
mov
dec
push
das
mov
push
lea
pop
mov
outsb
cmp
popa
or
movsl
nop
ret
jb
mov
xor
or
cmp
ret
sbbl
xchg
and
push
xchg
loopne
adc
fnstenv
sbb
mov
xor
cli
scas
std
mov
or
inc
mov
stc
and
loopne
cld
dec
ja
push
pusha
cmp
cs
sub
add
inc
mov
jno
stos
lods
std
roll
add
jne
mov
push
in
jbe
scas
lock
jns
bound
cmpsl
test
pop
bswap
test
jp
adc
push
fldcw
out
or
iret
imul
sbb
repz
mov
or
cli
cmpsb
xor
enter
inc
outsl
iret
lds
lret
nop
aam
xor
pushw
arpl
push
add
arpl
push
xlat
ficoml
bound
cmpsl
dec
add
fstpt
mov
pop
pop
push
pusha
lods
sbbl
xchg
xchg
add
xor
addr16
mov
ja
ret
mov
lock
cld
inc
loope
subb
popa
inc
test
stos
shlb
rcll
daa
iret
ficoms
or
xchg
loopne
shr
scas
add
sub
movsb
jl
sti
outsl
xchg
movsl
adc
lods
lods
adc
xlat
mov
repnz
sbb
test
push
push
loopne
adc
jg
and
mov
sub
subl
cmp
out
xor
add
mov
scas
push
lock
sub
pop
dec
std
enter
cmc
pop
add
loopne
and
jno
and
mov
stc
inc
add
push
popa
int
pop
fisttps
mov
pop
push
or
jle
loop
testb
inc
daa
xor
ljmp
jo
xor
xorb
cmp
mov
loope
in
and
mov
push
inc
fisubrs
or
cmpsb
cltd
add
sub
enter
rorb
outsl
push
jg
lret
cwtl
loop
iret
pop
jge
lods
push
cmp
ljmp
mov
cmp
lds
cmp
push
dec
jp
fistpll
pop
inc
scas
ficoms
cltd
add
mov
cs
lea
or
and
and
add
shr
mov
ds
lods
cmpsb
int
adc
enter
pop
add
popa
cmp
cli
mov
dec
xlat
jns
xor
sahf
fcomi
or
lds
sbb
xor
adc
insl
leave
dec
popa
dec
dec
cmpsl
pop
mov
inc
inc
dec
pop
les
cmp
repz
jge
lret
shr
les
mov
add
repnz
mov
xchg
jl
sub
lods
xchg
pop
pop
inc
or
fidivrs
sub
sub
inc
cli
pop
aam
test
outsb
bound
sbb
dec
pop
add
sbb
or
adc
inc
push
loope
adc
adc
fnstenv
pop
in
push
xorb
xchg
jns
arpl
xorl
lds
xchg
adcb
push
adc
cmp
fdivrs
push
pop
fisubl
mov
lcall
xlat
dec
pop
movlps
push
je
mov
pop
push
mov
and
add
adc
xchg
jns
jno
push
xchg
lret
jns
jno
jb
ret
fwait
aam
rcrl
jb
insb
xlat
push
pop
mov
aam
adcl
push
or
and
jns
cltd
divl
pushf
outsl
sbb
imul
pusha
or
cmpsb
add
inc
aas
jb
or
mov
ret
cwtl
popf
ds
in
int3
dec
jge
dec
stos
shrb
fcmovbe
dec
fstpl
sub
scas
inc
stos
jns
inc
xlat
mov
sub
xor
movsb
cmpsb
mov
popf
pop
stc
sub
hlt
add
lods
adc
je
mov
push
leave
cmp
add
dec
add
cmp
cmc
sbb
sub
test
or
fs
pop
dec
mov
xchg
lea
cmp
insl
test
add
inc
dec
or
stos
adc
lea
jle
in
imul
testl
out
fld1
ret
xchg
movsb
idiv
or
inc
in
jg
jp
outsb
sbb
addl
xor
xchg
mov
inc
mov
push
push
out
or
dec
mov
popf
and
jns
mov
pop
aam
and
in
loope
in
pop
and
xor
cmp
pop
clc
dec
inc
icebp
and
aam
repnz
lods
aaa
jg
lds
ss
inc
mov
jp
mov
sbb
stos
jo
fsts
inc
int3
aam
xchg
jmp
out
test
mov
pop
pop
push
cld
xchg
mov
insb
imul
fs
lahf
push
test
bound
popl
dec
aaa
mov
lcall
jle
clc
cmp
add
fisttps
dec
lcall
fndisi(8087
ret
out
cli
cmpsl
inc
pop
dec
loop
jg
fcompl
sti
imul
push
cwtl
lret
mov
arpl
ret
add
sahf
bound
stc
sub
and
pop
pop
pusha
push
and
dec
out
int
sti
push
adc
push
lret
ret
dec
mov
stos
push
div
push
repnz
punpckhbw
xchg
sahf
adc
call
pop
leave
pop
push
imul
inc
clc
movsb
stos
pop
fwait
mov
je
mov
mov
or
xor
enter
int3
dec
sub
enter
inc
mov
cmp
rcrb
sub
mov
mov
pop
mov
pushw
jle
pop
lds
xor
lods
push
push
test
cmp
pop
xor
cmpsl
mov
ja
mov
ljmp
cs
outsl
ja
scas
mov
ljmp
pop
fisubs
int
stc
mov
cli
out
sbb
sarb
adc
mov
insl
and
ljmp
aaa
fisttpll
movsl
sub
add
lret
sarb
andb
and
jbe
fidivrs
loopne
bound
mov
int3
and
jne
aam
xorl
fistps
fcompl
testb
mov
jnp
not
jmp
or
out
ss
push
aam
cmpsb
push
sub
fcomp
cli
pop
cmp
adc
imul
inc
push
icebp
sbb
mov
ret
cs
and
movl
mov
jge
adc
ret
mov
lock
shl
mov
jmp
scas
add
or
mov
ret
orl
pushf
mov
adc
jle
div
push
clc
aaa
bound
sbb
es
fildl
xchg
mov
push
dec
and
scas
ss
pop
mulb
sub
pop
dec
pop
jg
in
daa
push
sub
adc
cmp
leave
fbld
inc
mov
lea
ss
ja
xchg
mov
aam
int
sub
mull
fisubrs
mov
xlat
xor
add
js
or
cmp
lds
popl
subl
scas
lcall
dec
cmp
sbb
pop
fiadds
push
pop
int
dec
pop
cmpsl
mov
mov
sbb
ret
ffreep
jb
out
push
pop
int
aam
fisubs
fsubrs
sub
push
loope
test
andl
pushf
fwait
inc
dec
inc
inc
and
push
dec
dec
ja
lahf
push
loope
sub
sub
lcall
shrl
movsl
sbb
in
addr16
jecxz
cwtl
xorb
add
dec
loopne
push
fcoms
and
adc
stos
dec
addr16
adc
lcall
mov
xor
ret
mov
sub
pusha
dec
sub
ds
test
mov
xor
pop
push
andb
ret
push
dec
std
xchg
sbb
mov
mul
mov
adc
or
add
outsl
jge
push
mov
sbb
mov
stc
sahf
lods
mov
xchg
movsl
fiaddl
sti
xchg
sarl
or
adc
call
into
xchg
adc
cmc
inc
cltd
stc
pop
xchg
sub
pop
push
inc
pop
mov
xor
cmp
jb
and
or
inc
cmc
in
cwtl
sbb
addr16
mov
test
mov
inc
out
testl
pop
adc
stos
sti
pusha
in
cmp
pop
mov
das
adcb
mov
or
out
push
dec
daa
push
mov
int
mov
sub
clc
adc
push
fldl
xchg
push
adc
sbb
mov
dec
rolb
out
lds
dec
cli
xchg
cs
nop
nop
sub
gs
leave
ds
push
dec
jg
add
sbb
loopne
jmp
mov
adc
shrl
or
fldcw
sub
sahf
call
in
sbb
fistps
inc
rcl
mov
inc
out
pop
arpl
nop
mov
mov
cmpsb
inc
add
inc
dec
jae
pushf
push
and
xor
xchg
cs
imull
lcall
dec
lret
subl
in
push
push
repnz
or
inc
mulb
jno
sbb
icebp
or
cmp
test
and
mov
shl
jmp
pop
cwtl
jno
rcl
gs
sbb
adc
and
icebp
popa
subb
les
lods
jno
enter
mov
fs
jns
mov
scas
and
jb
dec
cli
dec
lret
popa
and
mov
push
dec
stos
mov
and
push
push
shll
sub
dec
jp
addl
fisttps
and
ljmp
dec
aam
pop
adc
jns
dec
aam
fdivr
push
lcall
ret
std
fildll
mov
fsubs
jp
es
outsb
orl
mov
int3
loope
inc
push
mov
jno
repnz
movb
dec
aad
or
sub
jnp
xorb
and
add
sbb
push
popf
out
je
push
pop
repz
xor
inc
dec
or
lea
shr
push
out
jno
mov
mov
into
das
cmc
cmp
lcall
retw
into
test
mov
outsl
push
loope
or
sahf
sub
add
xchg
adc
mov
inc
sub
in
stos
inc
adc
mov
mov
insb
cmp
lret
loop
loope
popf
je
mov
lods
stos
fstl
fyl2x
mov
sub
mov
cwtl
ret
call
les
je
pop
ficoms
jno
call
adcl
inc
lock
pop
sbb
imul
fnstsw
aad
push
lret
ljmp
xchg
cmc
sbb
xchg
jne
mov
xchg
into
fwait
pusha
shr
pusha
movl
addr16
jecxz
stc
subl
shll
pop
push
popa
movsl
dec
jae
ja
push
cmovno
and
pop
adc
xor
xchg
add
movsl
pop
jbe
aad
pushf
xor
sbb
pop
int3
loop
stos
inc
cld
lods
popa
jns
xchg
mov
xlat
cmp
mov
call
test
mov
les
mov
push
or
sti
outsb
mul
mov
adc
jge
imul
outsl
imul
jg
test
out
xchg
hlt
mov
mov
pushf
jecxz
out
fcompl
nop
and
jmp
shll
js
or
loop
or
and
loopne
mov
mov
lret
test
sahf
lret
and
pop
leave
aam
test
mov
inc
adc
jmp
xchg
mov
aam
xchg
dec
jbe
sbb
and
mov
or
cld
enter
cmp
jnp
and
mov
adc
sbb
cmp
pop
aaa
rcrb
sbb
cmpl
and
push
repnz
and
lods
decl
aas
sub
sbb
mov
enter
movsl
jne
add
gs
js
mov
xchg
add
mov
mov
xor
mov
sub
pop
roll
push
sbb
lods
sub
lock
movb
fwait
pop
out
jge
sub
test
inc
hlt
dec
mov
xchg
nop
mov
leave
test
sbb
in
xchg
scas
cmc
pop
jle
int3
push
mov
cmp
push
arpl
mov
out
test
jns
cmp
push
sub
loopne
push
inc
shrb
add
pop
cmp
std
sbb
sub
or
testl
test
je
mov
pop
andb
sub
adc
sbb
sbb
xchg
sbb
mov
mov
fs
nop
inc
jno
push
pop
inc
in
shlb
lahf
shrl
fisubrs
ret
jno
push
jno
and
mulb
and
cld
jns
mov
adc
shll
pop
popa
sbb
or
orl
in
mov
xchg
subb
rcl
mov
sahf
cmp
int
jle
adc
inc
mov
xor
ss
loopne
sub
pop
imul
mov
je
and
dec
movsb
scas
shrb
out
pop
mov
inc
in
std
mov
sub
js
rcrb
fcomps
dec
insl
push
add
add
mov
loop
mov
push
jg
rclb
movsb
insl
pop
mov
fsubs
and
test
lock
adc
push
adc
and
repnz
repnz
jns
movsb
lods
out
stos
lret
push
adc
arpl
cmpsb
cmp
mov
pusha
stos
pushf
adc
and
jbe
mov
adc
inc
adc
iret
ficomps
roll
xchg
das
stos
rorb
sbb
jbe
jbe
mov
outsb
loope
test
cmp
adc
movsb
ficompl
sbb
icebp
jle
fbld
cmpsl
enter
sub
dec
stos
add
dec
lret
nop
sub
mov
ror
das
jo
cmpsb
mov
xorl
int3
push
mov
jl
sbb
movl
fmull
or
or
inc
cltd
push
cmc
sahf
sub
sbbb
mov
xor
dec
ljmp
xchg
mov
add
xor
or
xchg
outsl
sub
test
sbb
xor
add
in
add
mov
fstps
cmp
xchg
xchg
push
and
lods
xchg
or
mov
xchg
mov
and
add
rorb
sbb
jns
and
jle
sbb
mov
xlat
sar
mov
sahf
je
mov
or
mov
xor
jg
jg
outsl
cmp
mov
add
pop
inc
addr16
cmp
movsl
mov
jl
dec
push
add
xor
mov
in
ret
inc
aaa
ja
testl
mov
ljmp
mov
sbb
lods
mov
out
enter
imul
test
icebp
mov
cmpsl
sti
mov
mov
mov
mov
mov
cs
nop
or
mov
push
cmp
arpl
stos
jae
cld
pop
cmpsl
nop
mov
push
outsl
inc
or
ljmp
add
cmpsb
and
mov
repnz
mov
cltd
bound
xlat
cld
mov
lret
orl
and
cltd
xchg
addr16
data16
sbb
test
aaa
add
jo
lods
sbb
mov
repz
aad
in
push
testb
aaa
out
adc
and
jae
mov
mull
sub
mov
xchg
pushf
cli
pop
lods
push
inc
insb
and
pop
or
outsb
mov
jne
inc
hlt
cld
aas
pop
insb
inc
out
insl
push
mov
aaa
mov
ret
sbb
add
cmp
aaa
pop
test
cs
xor
daa
out
jo
jo
dec
or
jecxz
jo
scas
js
in
ret
or
scas
xor
icebp
mov
mov
leave
or
cmp
and
jae
xchg
jle
mov
bound
mov
push
fstpl
rcll
fldt
mov
pop
lret
dec
xor
lea
mov
out
addb
jns
je
fwait
loope
adc
mull
adc
push
mov
into
popa
mov
add
test
in
jo
xchg
cwtl
lods
or
je
jns
loope
or
outsb
xchg
and
pushf
push
dec
and
es
pop
and
add
sbb
dec
clc
fs
jae
and
mov
mov
enter
sahf
and
mov
inc
out
test
call
fstp
ja
jp
push
popf
dec
mov
aam
aaa
js
shrl
insl
and
jle
inc
sbbb
fs
mov
xor
and
mov
push
rorl
inc
cmp
pop
aas
lods
insl
adc
mov
stos
je
jo
cmc
push
outsl
fwait
lea
and
pop
pop
sub
add
push
jb
or
gs
cmpsb
sar
inc
adcl
dec
aas
dec
dec
roll
xchg
push
mov
fsubrl
adc
push
dec
addr16
add
jo
hlt
out
imul
xlat
leave
pop
jecxz
js
stc
les
enter
sbb
mov
sub
lcall
push
stos
iret
jmp
mov
or
sbb
test
bound
push
and
xor
filds
dec
cmpsb
pop
mov
pop
rcll
pop
jp
pop
cli
jbe
es
test
mov
cmpsb
push
or
cmp
inc
add
push
rcrl
inc
adc
sahf
sub
js
int3
stos
xlat
add
test
sar
fs
aas
clc
jge
pop
xchg
int3
divl
adc
das
daa
stos
sti
mov
imul
xor
inc
daa
add
sub
sub
pop
movl
loope
mov
sub
mov
inc
mov
jno
adc
cmc
add
shlb
cmpsl
mov
daa
adc
cmp
lock
mov
xor
scas
push
or
xchg
mov
lahf
cld
jmp
mov
into
cli
cmpsb
pushf
or
aam
pop
pop
or
popa
or
cmp
loope
cmp
cltd
mov
scas
lods
jnp
loop
fnstenv
xchg
inc
mov
push
mov
aad
popf
and
dec
xor
fiaddl
fiaddl
jno
out
fidivs
mov
cmpsl
js
aad
lods
sbb
pop
cli
sub
aas
repnz
sbb
adc
xchg
into
iret
xor
sub
sub
cmp
mov
repnz
das
jle
stos
les
fdivp
pusha
pop
pop
jae
imul
jle
or
rcll
push
push
jp
fmul
imul
dec
mov
xor
xchg
add
adc
lcall
xchg
xor
ret
pop
imul
test
jle
cltd
inc
push
mov
loopne
ficoml
sub
dec
mov
lods
and
or
add
xchg
out
mov
and
sbb
mov
xorl
dec
xchg
loopne
into
push
dec
cmp
hlt
iret
fwait
insl
sbb
push
out
sub
orl
iret
sub
aas
inc
xchg
jae
mov
rol
cmp
cld
lock
mov
repnz
jp
fstps
mov
xor
mov
add
xor
mov
lods
je
adc
and
scas
cmp
loop
mov
jg
ja
test
cmp
cmpsb
adc
jmp
lcall
fildl
test
mov
dec
shl
repz
loope
ret
fdiv
or
jo
popa
jne
test
pop
fs
shrl
jne
in
xor
sbb
bound
rol
in
cmp
mov
sub
cltd
jl
pop
ds
das
mov
in
cmpsb
push
repnz
xor
lds
out
lods
pop
adc
sbb
adc
jg
mov
shll
mov
mov
movsl
sbb
and
add
lret
and
mov
mov
test
mov
mov
jnp
jl
insl
in
xchg
outsb
sbb
adc
fdivl
inc
jmp
scas
jae
repz
in
insl
inc
xor
cmp
test
jns
roll
cmc
stos
or
rclb
adc
sbb
add
add
fldl
out
in
in
mov
scas
leave
test
inc
imul
mov
subl
popf
cmpl
and
int3
xchg
aaa
fidivl
fidivs
cmpsb
imul
add
addr16
cmp
shll
testb
loop
bound
divb
outsl
imul
lret
mov
sbb
xorl
cwtl
xor
jge
and
je
pop
iret
aam
push
inc
fsubrs
push
gs
adc
cwtl
push
mov
mov
jmp
les
dec
call
cmovno
rolb
or
mov
jne
es
pop
call
push
add
arpl
sbb
or
movsb
jg
aas
sbb
std
xchg
pop
push
mov
dec
and
push
outsl
popa
pop
fcompl
push
ss
mov
scas
cs
inc
ds
pop
fdivrs
push
test
nop
movsl
testl
inc
jno
sub
xchg
push
fisttps
add
xchg
pop
fistl
and
test
push
xchg
or
icebp
cmp
sub
sbb
aam
inc
mov
xchg
mov
and
mov
adc
dec
adc
inc
xchg
xchg
sbb
mov
add
shll
cltd
jle
xlat
nop
repz
jns
and
inc
shll
test
or
mov
cltd
test
shl
inc
sbb
mov
pop
fisubrs
rol
cmp
adc
into
aad
aad
or
imul
subl
test
insb
std
gs
aam
in
orb
add
adc
ficompl
mov
lods
ja
shl
out
mov
pop
jae
jle
aaa
addb
dec
mov
sub
adc
data16
pop
call
mov
push
fwait
dec
xchg
jge
insl
pop
ds
jg
insl
cld
fwait
iret
in
lret
inc
mov
shl
add
lahf
sbb
fidivrl
mov
fs
repnz
jmp
fs
inc
imul
mov
inc
mov
mov
test
cmp
sbb
sarb
add
inc
lds
sbb
sub
jmp
ret
pop
rol
jne
xchg
mov
std
gs
mov
xchg
loopne
pop
lahf
loopne
out
data16
ljmp
pop
ja
filds
xchg
cmp
test
jmp
pop
push
inc
mov
sbb
ret
mov
mov
add
fsubrs
xchg
gs
lock
jge
stos
pop
mov
es
xchg
lods
add
das
sbb
ret
mov
test
sbbl
mov
push
dec
repnz
loopne
cmp
mov
sub
add
jo
jbe
mov
call
pop
jb
and
loope
shrl
aam
push
push
mov
mov
mov
nop
push
mov
call
pusha
loope
inc
es
test
and
inc
bound
sbb
and
sti
fmuls
cmp
in
mov
leave
dec
lods
xor
and
addr16
cs
pop
jo
lea
dec
sarb
adc
fcoms
xorb
out
dec
repnz
mov
pop
mov
add
outsl
addl
mov
sub
jno
mov
out
push
jg
sbb
jmp
sub
cmpsb
std
loop
pop
out
push
jnp
sub
mov
mov
add
or
or
jo
lret
adc
aam
jle
cmp
dec
mov
xchg
mov
rol
or
in
dec
nop
lret
xlat
xor
popa
mov
add
add
or
mov
outsb
pop
iret
inc
or
frstor
jmp
mov
lock
inc
mov
data16
adc
das
push
call
stos
loopne
add
pusha
lret
nop
int3
rcrb
jno
lcall
and
pop
cmp
faddl
sub
xor
push
jb
push
ds
les
je
sub
scas
push
stos
jl
jne
or
je,pn
je
xchg
insl
pop
xchg
icebp
lahf
xor
scas
data16
and
dec
insl
sbb
dec
into
movsl
jmp
sbb
out
ss
adc
mov
sbb
ficomps
dec
icebp
fcoms
sub
int3
fimull
pop
fwait
adc
sbb
adc
push
xchg
out
je
or
sbb
rcr
dec
cmp
jbe
push
mov
sub
shlb
adcl
jp
push
aaa
and
cld
test
sbb
xchg
push
xchg
xlat
ror
dec
in
clc
mov
insl
fisubrs
push
cmpb
push
shl
test
fucom
int3
lock
loop
push
xchg
mov
jmp
ret
add
pop
fwait
in
repz
xlat
imul
cmp
les
pop
and
daa
std
bound
dec
or
mov
mov
repnz
stc
outsl
ds
mov
leavew
arpl
and
sbb
ret
push
cltd
xor
cmp
sub
mov
push
mov
xchg
mov
inc
repnz
fisubl
imul
cmp
das
push
fldl
sub
iret
lea
repz
push
ret
sbb
xor
pop
push
jo
stos
jbe
mov
je
fnsave
mov
cmp
loop
aaa
jecxz
xlat
push
test
pop
inc
inc
jl
inc
and
add
mov
cli
push
push
mov
stos
fsubs
daa
mov
mov
shrl
or
out
pop
sub
shrl
lret
mov
stos
addr16
arpl
jbe,pt
sbb
jmp
jb
ljmp
out
inc
xchg
stc
popf
rcll
aad
push
pushf
clc
mov
insb
inc
test
rclb
dec
push
cltd
mov
out
dec
mov
scas
sbb
dec
jg
jns
mov
aas
push
sub
xchg
mov
push
adc
imul
mov
scas
add
pop
int3
das
or
flds
add
jmp
jb
add
es
pop
imulb
inc
pop
fmul
sbb
xor
sti
add
cwtl
and
push
pushf
pop
cmp
add
pop
hlt
ja
icebp
sbb
push
adc
in
pusha
xlat
shr
jp
pop
scas
pop
pop
push
mov
adcl
push
sbb
xchg
add
lret
rol
sbb
mov
pusha
js
rcl
jp
test
dec
cltd
lret
imul
into
or
stos
mov
jmp
sbb
js
mov
adc
cld
lock
test
loope
push
pop
dec
stc
mov
insb
js
xor
dec
pop
test
mov
mov
insb
insl
mov
sub
cli
jae
dec
repz
outsb
push
jb
ficoms
aam
push
adc
or
sbb
mov
popf
incb
and
sub
dec
and
pop
popf
and
dec
mov
and
mov
out
fidivs
rcl
pushf
ret
gs
push
or
iret
jns
sbbl
jbe
insl
jo
icebp
xchg
lret
mov
dec
adc
xchg
pusha
mov
clc
sti
add
sub
mov
ja
ret
cmp
pop
add
jnp
and
jns
cmp
jecxz
aam
mov
sub
mov
fisttpl
sub
dec
mov
add
mov
test
cltd
ljmp
mov
loopne
lock
js
mov
cmc
xchg
push
test
mov
setns
fisttpll
mov
cmp
test
jne
lods
mov
xor
outsl
jg
cmc
outsb
mov
popf
jecxz
and
mov
xchg
mov
aam
pop
daa
loopne
ret
nop
mov
daa
call
xor
mov
imul
hlt
pusha
faddp
jecxz
pop
jb
in
ljmp
ficomps
or
jg
imul
pop
push
mov
pop
arpl
out
mov
pop
repnz
dec
dec
or
add
scas
orb
rorb
mov
pop
test
out
lcall
push
jl
arpl
push
stc
loop
jg
inc
mov
jmp
pop
push
xor
jns
jge
push
add
hlt
add
ret
sbbb
sbb
ret
in
popf
jnp
dec
sahf
push
stc
pop
xchg
ja
ret
stos
add
ret
out
add
rolb
inc
test
leave
mov
ja
adc
cmp
leave
pushf
cs
into
nop
repnz
imul
mov
sbbl
mov
xchg
shll
jb
aas
mov
or
push
insb
or
xchg
push
push
stc
sbb
dec
inc
mov
jns
das
add
add
and
mov
sbbb
ret
inc
aad
xor
xor
loope
lock
int3
jne
fiadds
fcomip
les
or
mov
icebp
fimull
out
mov
scas
sub
repnz
cmc
div
xchg
rol
xchg
fidivrs
mov
pop
or
inc
add
sub
mov
or
cs
pop
fiaddl
add
mov
dec
xchg
je
lret
shr
aad
stos
stos
push
mov
or
aas
jle
pusha
stc
imul
scas
pop
aad
test
jge
mov
push
dec
sbb
shll
je
jns
or
shlb
adc
jge
and
and
insl
xchg
enter
mov
scas
mov
jmp
push
pop
shll
mov
aad
loop
xor
sub
cli
mov
add
fisubs
popf
or
mov
lahf
test
les
pop
sbb
inc
sbb
push
and
cmp
fldenv
push
mov
xchg
add
in
ds
xor
and
in
xorb
mov
cmp
push
lds
mov
sbb
js
cmp
fcoml
stos
xchg
cmp
dec
sbb
or
std
and
fidivrs
out
xchg
sbb
jg
mov
fxch
mov
sbb
push
jp
jmp
insl
cmc
push
iret
dec
ret
int3
js
pop
push
test
pop
sub
cwtl
inc
icebp
test
cmp
sbb
sub
test
arpl
fwait
adc
jbe
inc
or
shrb
nop
iret
jge
mov
add
xchg
cmp
dec
mov
inc
mov
push
hlt
das
mov
jae
push
jae
cltd
popf
popl
or
outsb
xchg
lret
loop
mov
inc
aas
mov
rolb
mov
gs
call
sub
out
push
push
sbb
xchg
shrd
or
adc
movsl
push
popf
out
outsl
push
pop
mov
and
cmpsl
sbb
pop
xchg
fldt
ficomps
xor
in
fldcw
xchg
scas
mov
movsb
fimull
inc
lock
inc
pop
xchg
pushf
or
inc
pop
cmc
sti
sub
mov
rcll
jb
xlat
lds
sbb
mov
outsl
shlb
ds
jp
pushf
std
push
in
lea
mov
fstpt
mov
cmp
mov
sbb
mov
dec
pop
loope
fs
jg
pop
neg
movsb
and
dec
mov
leave
nop
jle
jne
or
bound
insb
sub
xchg
cmc
int3
arpl
xor
mov
and
js
cmp
jae
sarb
inc
arpl
arpl
aam
fnsave
or
fadds
loope
push
lret
or
insl
add
adc
mov
adc
or
mov
pusha
jle
mov
xor
cwtl
and
mov
push
out
out
flds
dec
sti
arpl
mov
lret
sub
and
and
aaa
jno
jecxz
in
sarl
cmp
ret
xor
xlat
outsl
lret
fistps
stos
xchg
and
lret
xor
es
sbb
mov
and
dec
xor
sub
or
adc
dec
xchg
xor
or
popf
andb
xchg
jge
xchg
fdivs
clc
or
jmp
sub
mov
cmc
mov
xlat
dec
ret
mov
andl
mov
mov
xor
sahf
cmp
sub
push
sbb
pop
lds
popa
int3
adc
mov
pop
jnp
jnp
mov
push
pop
rol
mov
enter
insl
mov
out
popa
fdivrl
push
push
shr
push
jne
lret
test
mov
and
in
popa
loope
daa
idivl
std
mov
call
mov
add
sbb
leave
jnp
xchg
addb
dec
sub
push
ds
sbb
gs
call
cli
mov
or
inc
sub
in
popa
es
jg
les
and
cmp
xlat
and
xchg
adc
jnp
cmpsl
ret
push
imul
es
mov
out
cltd
std
test
ret
push
xorb
gs
add
hlt
incl
dec
mov
popa
and
rcrb
pusha
jecxz
fistpll
jg
fwait
jne
inc
iret
xor
jbe
ficomps
test
rcr
stc
push
sbb
pop
pop
xchg
pop
jmp
movq
lret
xor
rcr
daa
mov
mov
sub
fstps
jge
jp
push
xchg
aas
xor
add
mov
popa
andb
or
push
push
lcall
lret
xor
aas
cwtl
dec
pop
jns
lahf
arpl
xor
push
shll
scas
das
pop
jecxz
jge
cmovge
and
mov
adc
pop
cmp
sbb
dec
fwait
adc
test
add
fwait
and
cltd
into
pop
mov
sbb
orb
test
mov
xor
mov
pop
cmp
insb
push
xchg
ficoml
movsl
push
js
xor
inc
lds
mov
lea
mov
lea
shrb
fwait
sub
sub
jbe
lods
lds
shrl
xchg
and
lea
out
daa
jnp
sahf
cmpl
sub
dec
rolb
arpl
fwait
pop
out
shll
dec
sub
subl
mov
xchg
inc
lcall
dec
sahf
out
and
push
in
mov
daa
xchg
stc
pop
sbb
jecxz
and
stos
lret
inc
int3
les
inc
pop
stos
pop
cmp
mov
mulb
mov
dec
cltd
in
adc
hlt
mov
jle
mov
jge
aas
pop
mov
xor
stc
fcomp
inc
faddl
cwtl
cltd
adc
xchg
and
dec
stos
arpl
into
or
sbb
mov
or
es
sbb
hlt
adc
std
sub
loopew
mov
and
icebp
add
mov
xor
push
ret
negl
fildl
fsubl
stc
mov
arpl
or
push
out
and
mov
lea
mov
imul
push
fs
or
mov
mov
mov
pop
in
inc
outsb
movsl
mov
cmc
fsubl
sbb
xorb
or
stos
xchg
mov
jmp
das
insl
addr16
inc
push
jmp
xchg
push
push
add
jge
mov
ret
cmp
repnz
mov
fcoms
cmpsl
push
loopne
and
mov
inc
loop
cmc
jge
imul
sbb
pop
arpl
in
mov
sbb
rcll
jmp
loopne
mov
mov
lods
sahf
mov
call
sti
cmp
adc
sbb
out
mov
icebp
sbb
outsl
sub
mov
scas
and
pop
pop
mov
outsb
cmc
inc
ret
sbb
popf
sub
jmp
addr16
sbb
mov
cmp
push
push
sub
cmp
gs
dec
jno
pop
jg
into
pop
scas
adc
xchg
nop
repnz
lea
add
pusha
mov
addr16
add
aad
and
fldenv
test
add
inc
inc
gs
shll
mov
xor
or
mov
and
ret
xchg
mov
pop
inc
mov
mov
mov
hlt
idiv
mov
add
xchg
mov
xchg
xchg
jb
adc
jno
jo
rcr
and
icebp
inc
dec
jae
sbb
mov
jmp
xchg
cmp
pop
jb
xor
xchg
gs
push
sub
or
inc
clc
xor
popa
sahf
daa
stos
push
std
xchg
fadds
in
or
adc
and
ss
jnp
call
adc
rclb
and
lods
adc
ljmp
and
xchg
jmp
loop
scas
pop
or
mov
pop
int
scas
fwait
push
adc
pop
fwait
add
iret
out
sbbl
in
es
scas
cwtl
cwtl
mov
movl
je
lret
xchg
fimuls
ds
ds
sbb
dec
lods
in
mov
out
fcomip
hlt
aas
adc
pop
add
or
jmp
dec
pop
call
arpl
repnz
shll
addr16
cli
sbb
in
xor
out
mov
stc
pop
loop
iret
xor
aam
sub
push
cmp
add
adc
lods
sbb
push
int3
pop
add
stc
add
inc
or
hlt
sti
in
push
lods
dec
push
imul
pop
pop
xchg
js
addr16
or
idivl
lds
add
loopne
ljmp
pop
push
push
cltd
and
sbb
sbb
mov
jne
imul
inc
aaa
xlat
imul
fisubs
sub
xchg
stos
dec
cmpsl
mov
inc
js
repz
std
out
shrb
clc
pop
mov
mov
addr16
inc
mov
xchg
and
mov
mov
idivb
xor
shl
xchg
push
sub
mov
outsl
loopne
insl
cwtl
lret
insb
sbb
pusha
mov
popf
ja
and
popa
push
and
adc
push
roll
std
test
sbb
mov
call
mov
pop
cmp
or
inc
and
movl
cld
daa
cmp
outsl
into
ljmp
dec
xchg
or
mov
enter
or
or
and
sub
mov
mov
jp
addb
out
add
add
ficoml
mov
cmp
mov
fbstp
cld
mov
pop
sub
stos
stos
pushf
popf
ficoms
adc
out
mov
mov
loopne
mov
push
imul
xlat
fstp
pop
adc
fidivl
fcmovnu
daa
std
mul
inc
cmp
mov
mov
clc
imul
mov
ljmp
dec
outsl
push
jl
jb
and
test
xchg
shrb
push
lret
fld
dec
push
inc
push
sub
bound
sahf
cmp
jecxz
mov
lock
jns
out
xor
inc
in
ficompl
fistpll
adc
sahf
movsl
mov
xlat
mov
fidivl
subb
leave
inc
mov
sub
and
inc
fistl
pop
mov
pushf
fldt
mov
xor
stc
sub
loop
je
inc
pop
jle
out
jb
fmuls
cltd
mov
cld
xchg
out
xchg
testb
fdivl
into
adcb
sbb
mov
int
add
call
jl
cmp
inc
add
xchg
popa
cmpl
mov
outsl
leave
cs
pop
cld
adc
ret
jae
mov
in
mov
adc
dec
jp
xor
popf
xlat
in
sbb
pusha
jge
mov
rcrb
movsl
loopne
jnp
lock
push
insl
sbb
pop
pusha
repz
movsw
xchg
push
lods
push
push
sub
test
jl
mov
lods
fldl2e
nop
add
jge
fnstsw
cmp
in
imul
and
mov
xor
xlat
ss
or
arpl
lret
push
jbe
xchg
sbb
dec
or
cmpsl
mov
inc
push
mov
sbb
nop
int3
mov
xor
mov
imul
or
pop
in
ret
fistpll
or
mov
fld
pop
fwait
nop
sbb
xor
repz
jnp
pop
outsl
test
popf
add
push
mov
in
lahf
nop
sub
in
adcl
imul
push
arpl
adc
loope
sub
gs
loopne
inc
pop
scas
sub
in
xchg
ret
xor
out
in
jmp
jmp
out
scas
xchg
fnop
inc
shll
dec
push
add
fmul
adc
dec
push
pop
stos
rorl
sbb
push
sub
dec
xor
adc
repz
fimuls
jle
dec
or
or
lods
jne
add
xchg
rcl
pop
and
into
dec
vmovups
pop
xchg
pop
mov
ret
mov
sub
aaa
enter
or
sahf
sub
fwait
in
es
xor
mov
scas
pushf
adc
jno
and
push
and
or
lds
push
adc
cmp
jae
cmpsb
int
xor
stos
fidivrl
push
sub
es
cmp
jmp
sbbl
jle
xchg
xchg
push
xlat
or
clc
cs
sub
inc
mov
mov
cmpsb
adc
loope
sbb
insl
mov
pop
lock
dec
in
es
fstpl
mov
ret
jecxz
cld
aas
jno
iret
flds
add
and
ljmp
jecxz
lret
roll
icebp
sarb
stos
lock
dec
rcrb
sbb
inc
das
jae
dec
je
mov
add
cli
inc
sub
imul
pop
cmpsl
push
jp
dec
push
ficomps
into
lock
mov
jns
jg
aad
shll
stos
xor
pop
or
ffree
mov
insl
dec
cmpsb
sbb
dec
lret
sbb
xor
push
dec
xor
lret
dec
lods
adc
aaa
inc
fbstp
and
lods
mov
test
loope
sbb
jo
jl
xchg
cmpsb
clc
and
and
or
addr16
mov
mov
mov
jg
int3
jp
rdpmc
cmp
xchg
ja
jl
fwait
dec
or
negl
dec
jnp
aas
adc
rep
dec
xchg
sbb
push
roll
stc
aas
mov
adc
cli
adc
loope
jle
ret
pop
sahf
inc
add
jmp
je
jb
cli
mov
in
ljmp
push
xchg
mov
outsb
imul
pop
mov
jmp
imul
dec
cltd
ss
and
test
jo
movsb
add
popf
jmp
inc
xor
push
and
aam
jae
inc
cmp
cmc
mov
lahf
xchg
ja
push
insl
pop
jecxz
aad
enter
push
fwait
mov
popf
cltd
push
lahf
out
cmp
mov
fidivl
cli
mov
lods
pop
xchg
xchg
jae
dec
jo
pop
ret
mov
lret
lahf
lock
shll
pop
adc
pushf
pop
mov
js
pop
fildl
insb
pop
lods
scas
mov
mov
xchg
mov
fiadds
jbe
roll
push
leave
dec
inc
dec
mov
loop
pusha
icebp
in
fs
stos
pop
insl
sub
test
fsubl
pop
stos
in
pop
pop
mov
mov
mov
xor
fisubrl
inc
testb
daa
rcrb
and
mov
push
mov
push
and
pop
add
inc
ficompl
and
pushf
add
add
mov
dec
jle
cmp
and
pop
xor
arpl
mov
push
lock
pop
jae
adc
test
and
gs
mov
repnz
jg
hlt
push
dec
and
dec
dec
jge
test
sarl
jns
jae
push
dec
cltd
dec
fmuls
repz
add
in
or
outsb
inc
push
ja
mov
cmp
repnz
jmp
add
stc
rcr
fnstenv
subb
push
lahf
xchg
repz
inc
mov
outsl
and
cmp
in
xor
rcl
jb
adc
sub
movnti
sahf
mov
shll
jnp
cmp
sbb
subb
outsl
test
mov
push
pop
adc
xchg
aad
or
rcl
shr
ds
lock
jp
rcrb
iret
fisubl
pop
push
jmp
aaa
add
adc
and
enter
popa
insb
add
cmpsl
sbb
stos
aad
das
int3
clc
movsb
jmp
jbe
dec
or
add
movsb
aam
dec
loop
or
incl
lds
pop
test
idiv
movsl
test
rcl
add
inc
mov
lret
dec
imul
sbb
xor
roll
pop
in
jnp
add
xchg
xchg
mov
in
add
sbb
pop
push
mov
clc
sbb
jno
mov
add
xor
push
shr
cwtl
mov
fisttpll
adc
pop
filds
push
jae
fisubrl
push
or
mov
scas
mov
cmp
push
std
jb
leave
lahf
mov
pop
nop
jp
dec
adc
adc
ss
fstpt
pop
mov
je
mov
dec
jge
shl
pop
leave
popa
pop
cmpsl
mov
in
cltd
mov
xlat
shll
sub
mov
mov
push
test
xchg
mov
jne
mov
lock
repnz
fwait
sbb
cmp
cmpsl
popa
gs
or
add
sarl
push
in
fcmovnu
ljmp
pop
jno
inc
and
out
jg
dec
xchg
cmp
mov
add
jle
addl
daa
mov
pop
inc
pushf
std
and
sbb
insl
or
andl
pop
sub
inc
ds
aaa
shrl
fs
and
fadd
cli
ficoms
jecxz
or
mov
wbinvd
scas
mov
cmp
lods
mov
and
divl
test
cwtl
xchg
xchg
and
xchg
lea
lods
push
stc
add
gs
mov
cmp
jb
inc
and
nop
sub
cmp
lea
call
aad
inc
mov
cli
lret
push
int3
cmp
mulb
inc
cmp
add
clc
lret
sahf
adc
into
jae
inc
sub
test
cwtl
lds
adc
sbb
ds
loop
imul
test
adc
jo
jno
push
pushf
xchg
xlat
sub
outsl
insl
push
inc
repnz
jge
out
mov
inc
mov
je
clc
cli
fs
cld
adc
push
mov
pop
clc
push
cmp
out
xchg
sahf
es
popf
jbe
mov
mov
add
push
mov
lahf
mov
mov
bound
push
mov
rcr
add
sub
push
lahf
fnstenv
mov
mov
pushf
push
cli
movb
xor
in
sub
sbb
idivb
cld
xor
pusha
out
xchg
stc
out
mov
lods
das
lods
lret
sti
popf
cmp
addr16
cmp
mov
adc
xor
scas
int3
cmc
insl
sahf
inc
ja
dec
cmc
loop
jmp
cwtl
aad
aaa
mov
mov
fisubs
sbb
mov
and
fwait
jo
mov
dec
dec
movsl
jno
out
cmp
dec
iret
push
add
and
add
xchg
push
pop
xor
js
les
call
test
cmc
decb
iret
pusha
fldenv
das
mov
ret
add
jo
xor
sbb
int
dec
add
pushf
js
ja
popf
mov
mov
lds
push
adc
mov
adc
mov
jne
addr16
in
xchg
xor
test
jne
outsb
pop
mov
cmc
push
fidivs
ja,pt
push
mov
pop
add
mov
pop
xchg
jle
xchg
jecxz
jecxz
xchg
cld
cwtl
frstor
shl
mov
mov
outsl
ljmp
add
repz
jg
sub
hlt
pop
dec
cmc
rorb
sbb
adc
xchg
pop
fnstcw
mov
or
mov
push
aaa
rclb
int
dec
push
adc
mov
dec
jo
movsl
and
adc
dec
popf
ror
cld
pop
inc
fstps
add
push
sbb
xchg
sub
dec
popf
xor
lahf
mov
daa
mov
and
scas
pop
cmp
test
add
sub
push
les
test
mov
rcl
dec
adc
mov
mov
aam
in
sub
jb
movsl
sub
test
outsb
mov
jecxz
cmc
ljmp
or
dec
fdivp
lret
and
lcall
xor
jnp
inc
mov
xor
xchg
sub
mov
stc
pop
inc
mov
or
push
fsubs
xchg
push
xchg
shrb
or
movsl
sahf
sbb
dec
dec
mov
jne
cmp
sub
push
lret
xchg
inc
test
xchg
inc
leave
sahf
add
outsl
cmpsl
adcb
cmp
mov
or
aam
sub
xor
fldcw
xchg
add
stos
mov
sti
and
inc
pop
sbb
inc
mov
scas
insb
and
jae
add
fcompl
ficompl
or
test
ljmp
mov
test
mov
imul
xor
mov
mov
fs
data16
mov
mov
cmp
add
pop
lods
mov
es
and
pop
in
aam
inc
mov
mov
outsb
jae
pusha
aas
insb
psrlw
pop
add
adcl
fnstenv
mov
push
mov
mov
test
inc
push
mov
mov
sub
push
xlat
jl
outsb
push
push
je
std
or
leave
lock
jecxz
ljmp
mov
add
in
clc
pop
jg
push
xchg
xor
mov
iret
xor
int
roll
pop
aas
sbb
jp
sbb
xchg
loopne
cmp
add
push
jg
push
add
out
test
mov
into
test
dec
fildl
mov
xlat
cmpb
fistl
inc
cmpsl
jg
dec
lcall
cld
sub
mov
or
or
mov
xchg
decl
inc
or
enter
test
out
mov
pusha
or
pop
sub
xor
xchg
push
xchg
fdivl
xor
inc
mov
or
call
dec
mov
cmpsl
push
int
and
popf
lret
push
xor
test
scas
sub
lret
sti
data16
inc
aam
call
jg
lds
cmc
pushl
arpl
pop
jo,pt
mov
popa
lret
mov
sti
push
jo
test
shll
xchg
mov
jge
dec
sub
jbe
ljmp
cltd
test
jmp
push
mov
mov
and
xchg
xchg
psubw
mov
push
or
lret
je
pusha
fdivp
jno
repz
add
pop
call
inc
xchg
aam
pop
and
pop
jl
push
jnp
sbb
adc
xor
and
shrl
sbb
gs
fnstcw
movsl
cmp
xor
icebp
push
jns
mov
in
out
std
ds
inc
cmpsl
dec
cld
cli
gs
cwtl
adc
push
xor
lods
test
cmc
out
pop
push
jae
ja
xlat
neg
scas
mov
aam
mov
cli
hlt
xchg
mov
orl
mov
mov
sarb
fsts
or
aam
nop
mov
mov
sbbl
push
leave
fldt
cmovbe
popl
mov
and
frstor
cmp
outsb
fucomip
movsl
nop
mov
dec
xor
addr16
inc
aas
insl
xchg
nop
in
lahf
ljmp
mov
jle
repz
ret
push
push
fcmovnb
xchg
add
fistpl
sar
aas
or
mov
pop
mov
inc
aam
push
nop
pop
ss
dec
lahf
jp
add
push
outsl
fxch
test
and
aad
test
sub
test
cltd
pop
mov
scas
arpl
xor
stc
stos
xor
mov
mov
push
mov
lock
cmp
xor
subl
das
adcl
xchg
fisubl
popf
xchg
lods
cmp
adc
xor
mov
mov
scas
or
dec
and
daa
dec
fistpll
cltd
sub
int
out
sub
imul
add
mov
in
stos
lods
mov
and
aad
mov
add
dec
adc
or
cli
pop
fldl
sbb
xor
fbstp
xchg
pop
scas
inc
dec
xchg
mov
out
inc
jno
pop
mov
mov
xchg
cmpsl
outsl
out
jmp
test
pushf
lret
scas
mov
adc
std
lahf
jmp
add
jl
dec
fistps
xchg
std
mov
pop
mov
pop
ds
push
es
push
stos
imul
add
and
sub
sub
clc
xor
and
xor
cwtl
out
mov
and
adc
shlb
jo
adc
or
sub
dec
aaa
in
out
add
addb
xor
sbb
aam
outsb
mov
popa
cmp
out
lret
cmp
shl
inc
arpl
mov
add
inc
int
add
pop
cwtl
out
jl
cmpsb
nop
mov
fwait
lods
push
cs
or
inc
jg
jecxz
outsb
gs
add
add
stc
add
pusha
pop
arpl
sbb
sarb
mov
or
jle
inc
mov
mov
xor
arpl
sarl
add
out
dec
push
sub
loopne
push
cwtl
lods
push
sahf
add
jb
fcoml
lahf
inc
mov
insb
popf
mov
mov
cwtl
iret
push
xor
adc
cmpsl
sti
inc
sbb
dec
jle
aam
movsb
adc
pop
and
inc
mov
fwait
daa
repnz
inc
mov
mov
inc
test
stc
fimuls
cmc
and
arpl
xchg
cltd
sbb
adc
shlb
mov
mov
imul
jecxz
mov
pop
dec
mov
xchg
cld
mov
les
mov
sub
lods
jo
pop
ja
jge
and
pop
cmpsb
xor
sub
jns
aad
imul
cli
int3
lret
push
enter
iret
gs
mov
pushf
adc
fwait
testb
push
test
arpl
xlat
test
loopne
mov
xchg
pop
in
or
jp
sbb
inc
inc
aad
xor
sti
movsb
add
and
je
and
les
or
sub
mov
sahf
mov
xor
push
mov
jg
pop
addr16
dec
pop
cli
ficomps
pop
mov
ds
imul
sub
iret
xor
lahf
push
xor
pop
dec
ret
cmp
dec
fdivr
push
mov
sbb
xchg
pop
adc
data16
inc
push
cmc
jl
jle
mov
arpl
push
dec
push
arpl
dec
shr
mov
or
and
dec
scas
mov
mov
jne
mov
es
push
enter
cmp
into
adc
add
adc
scas
pop
mov
lcall
push
and
pop
imul
pop
mov
mov
inc
xorl
xor
xor
lret
cmp
add
adc
adc
push
xor
loope
push
insb
push
sbb
dec
in
movsb
insl
pop
popa
outsl
std
aaa
call
xor
xchg
dec
test
fisubs
push
ds
dec
and
fdivr
cmp
xor
rolb
xor
arpl
lret
or
mov
mov
lret
xchg
dec
outsb
out
inc
mov
dec
mov
repnz
popa
shrb
cmpsl
lret
inc
or
data16
add
mov
mov
xchg
sub
push
fcmove
ud2
mov
mov
mov
lcall
gs
rorb
jo,pn
adc
push
ret
movsb
out
loope
pop
int3
outsb
inc
loop
jg
mov
add
test
push
push
loopne
out
ds
mov
mul
ret
xchg
mov
fs
insb
into
jne
mov
loopne
cmp
shl
xchg
loopne
repnz
call
jbe
push
imul
jae
popa
push
xchg
and
mov
mov
xor
push
push
pop
in
out
fucomi
imul
bound
xchg
pop
addr16
pushl
insb
mov
movsl
pop
leave
and
out
outsl
js
rorl
pop
loopne
movsl
push
sbb
hlt
data16
shrl
mov
enter
addb
sbbl
cmp
jge
cmp
xchg
mov
jo
dec
jo
push
fimull
inc
xchg
lock
das
addl
andl
mov
test
hlt
repz
pop
mov
cwtl
push
inc
leave
jb
lods
push
inc
mov
cmp
loopne
in
sbb
outsb
xchg
shlb
mov
cltd
data16
sbb
addr16
pushf
push
shl
fidivrs
lock
pusha
and
aad
jb
cmpsb
push
xchg
jg
lret
xlat
xchg
mull
pop
ret
out
sbb
test
inc
in
test
sub
xor
push
sub
icebp
mov
fs
int3
enter
pop
dec
jmp
subl
je
out
cmp
and
xor
lret
ficoml
arpl
cmp
jo
pop
repz
pop
leave
mov
scas
xchg
sbb
xor
in
pusha
mov
dec
dec
inc
xor
cmpsb
lea
loop
ds
loope
neg
inc
jg
cmp
xor
jns
scas
scas
outsb
mov
pop
js
js
scas
xor
jbe
arpl
mov
or
push
jge
jle
or
out
mov
ror
popf
pop
mov
push
rclb
add
add
inc
push
sub
jb
fcomps
outsb
mov
dec
and
andb
loope
pop
pushaw
iret
jg
push
orb
inc
jl
xor
je
outsl
lahf
aam
cs
push
push
dec
sti
sub
mov
sub
sub
shlb
pop
int3
jmp
lock
cmpsl
in
push
or
sar
push
cmp
mov
jp
add
das
xchg
push
test
lret
cmpsb
jo
pop
filds
pop
add
inc
call
cli
or
idiv
std
mov
mov
in
jl
pop
outsl
xlat
je
inc
sub
xor
mov
das
test
jnp
pop
mov
and
push
cmpsb
ds
ret
ja
cmc
xchg
add
dec
adc
popf
test
and
mov
and
or
into
cs
adc
mov
clc
inc
cmc
push
pop
adc
mov
push
sub
addr16
pusha
push
aaa
pop
in
clc
movsl
mov
cmp
cld
insb
mov
repnz
sbb
adc
mov
inc
dec
cli
les
mov
or
mov
pushf
cs
xchg
subb
mov
int3
cmp
sub
je
mov
add
sbb
mov
dec
xchg
or
outsl
jns
push
dec
lock
xchg
enter
xchg
lods
or
in
push
cli
cmp
push
outsl
pusha
and
push
cwtl
jl
mov
adc
test
outsb
incb
mov
fisttps
push
int
push
sbb
rcr
lods
pusha
push
mov
outsb
xchg
and
jns
push
popf
push
dec
xor
les
sarb
test
or
mov
sbb
sub
lds
push
pushf
mov
test
sbb
pop
mov
lcall
cmp
push
mov
jns
jmp
pusha
lock
daa
insl
sbbl
pushf
or
shll
mov
jbe
or
stos
pop
sbb
out
cmp
and
arpl
adc
cmc
int3
mov
rcrb
aas
bnd
dec
stos
inc
push
mov
xlat
jp
es
mov
js
xchg
mov
mov
rclb
cmp
jp
in
mov
sarl
bound
mov
dec
mov
adc
mov
dec
lcall
subl
test
repnz
orb
inc
push
shl
mov
jg
or
inc
pop
ds
adc
mov
leave
lret
cmp
push
leave
mov
pop
dec
sbb
xchg
adc
xchg
in
push
out
push
fld
in
fisubs
push
popa
and
insl
lock
jge
pop
dec
cwtl
dec
lret
jl
mov
lret
rol
pop
xor
cmp
sbb
out
dec
lahf
icebp
push
lock
push
jg
test
cmp
xor
js
push
pop
test
sub
xchg
sub
icebp
mov
scas
fisubrl
xchg
mov
mov
fimull
out
and
popa
cwtl
repz
cmpb
or
lret
push
enter
xor
cltd
shl
pop
xor
rcll
icebp
jg
mov
scas
mov
xor
dec
xchg
xchg
and
pop
inc
insl
test
mov
fcomps
mov
cmp
or
dec
pop
sbb
sti
je
xchg
push
std
inc
adc
mov
pop
sub
repz
push
scas
xor
or
xlat
fs
inc
mov
sbb
sbb
sbb
lret
add
sbb
adc
and
loopne
shll
adc
test
dec
jmp
mov
mov
jl
jmp
mov
nop
cmp
or
jl
popf
pop
fmull
rorb
dec
mov
push
xchg
insl
add
xlat
mov
dec
jg
insl
std
in
adc
add
and
aas
push
icebp
dec
sub
ljmp
sbb
imul
cmp
ds
sbb
add
mov
lret
sub
pop
sub
popa
mov
sahf
stc
mov
insl
cld
call
adc
jmp
add
les
fdivrs
mov
pop
mov
into
jns
dec
jnp
xchg
out
dec
orb
pop
movsl
mov
xorl
pop
les
push
dec
mov
mov
icebp
imul
in
or
or
jmp
cmc
imul
jae
std
xor
lods
xlat
adc
jg
in
lock
mov
cmpsl
and
jg
mov
pop
int3
call
out
test
lea
sbb
add
push
mov
stos
subb
inc
dec
jle
out
repnz
add
mov
imul
sub
enter
mov
sub
pop
adc
mov
mov
sub
cs
pop
inc
test
aam
out
push
dec
test
mov
bnd
pop
inc
mov
iret
pop
fsubrp
push
fbstp
fidivrs
push
js
ret
imul
insl
add
xchg
push
loop
push
js
mov
pop
insb
jne
mov
popa
adc
mov
icebp
cmc
test
xchg
sub
jae
sar
mov
jno
mov
out
movsb
jnp
pop
sti
por
insb
sub
je
es
cmpsl
pusha
fidivrs
adcl
dec
sbb
adc
or
ja
inc
jae
mov
push
int3
iret
scas
daa
or
fucom
lods
pop
xor
push
push
jecxz
pusha
add
int3
fisubl
outsl
ret
cli
popa
fstl
xor
xor
sub
fs
jg
rorb
or
pop
xchg
or
and
and
xchg
cmpsl
inc
jmp
jo
stc
and
icebp
pop
hlt
push
das
sub
lock
cmc
lahf
ret
jl
int3
ljmp
mov
inc
scas
stos
loope
inc
mov
out
cltd
lret
popf
pop
hlt
push
jecxz
gs
pop
add
mov
push
popf
rcrl
cs
push
into
out
mov
rcrb
arpl
jno
pop
or
adc
repnz
loop
pusha
jg
mov
dec
test
sub
filds
sbb
jnp
cwtl
add
jp
cmp
sbb
fldcw
push
repz
iret
mov
or
inc
shlb
jge
std
mov
lret
and
mov
loope
lgs
push
pop
int
enter
mov
mov
cmp
mov
fstpt
out
sub
mov
cmpl
mov
call
sub
fisubs
sbb
es
out
js
xchg
and
mov
jmp
xchg
mov
insb
inc
sbb
test
push
lock
add
sbb
pop
mov
pop
mov
push
lods
add
dec
jns
mov
test
out
test
push
int
mov
push
rcrb
int3
cmpsl
out
loop
jnp,pt
jo
in
das
js
imul
popf
je
ret
lcall
mov
mov
adc
pop
inc
push
hlt
cmp
aaa
sub
lods
sbb
sub
mov
lock
mov
in
in
repz
add
mov
in
es
adc
outsl
icebp
lods
xchg
sbb
in
stc
sarb
cmp
lea
out
push
pop
sub
and
and
sub
cmp
clc
scas
mov
out
jno
sti
sbb
das
and
inc
xchg
aad
pop
or
fdivrl
stos
jecxz
daa
aad
add
jl
rcrb
pop
rcrl
push
xor
xor
test
mov
jge
add
jmp
adc
xchg
or
jnp
stc
jnp
mov
lret
fdivs
lods
jmp
push
inc
add
test
adc
jg
out
cli
mov
mov
mov
pop
inc
cmp
daa
fnstsw
cmp
jo
cwtl
test
push
out
adc
out
ret
nop
ja
cltd
sahf
cmpsb
add
std
dec
popa
lods
idivl
movsb
jb
in
iret
mov
or
inc
mov
sub
movl
dec
pop
clc
outsl
leave
clc
lret
jmp
sub
mov
dec
or
test
xor
call
xchg
xchg
cli
jp
rsqrtps
faddl
cmp
cmc
ja
or
in
inc
mov
jl
add
addr16
je
loop
popa
sub
mov
dec
popa
sbb
js
inc
fnstsw
imul
nop
mov
iret
mov
inc
inc
cmp
stos
lret
insl
xchg
push
arpl
pop
sbb
mov
push
sub
cmp
mov
imul
fdivp
or
dec
test
cld
mov
pop
xor
and
sub
dec
lcall
mov
adc
mov
or
int
addr16
or
xchg
adc
dec
push
cmp
jmp
pop
add
fwait
mov
hlt
xor
push
mov
jb
dec
mov
iret
inc
movsb
enter
sbb
rcr
push
mov
dec
addr16
dec
cmpsl
dec
out
insl
scas
or
or
or
xorb
rcll
sar
sub
xchg
aad
xchg
ror
add
icebp
ret
sub
js
imul
ja
gs
or
cmpb
aad
adc
jbe
xchg
adc
sub
mov
push
icebp
jno
or
out
xchg
jle
jge
pop
add
add
cmp
jo
loopnew
and
pop
xchg
mov
mov
lods
fstpl
lds
mov
int
ret
out
in
push
sbb
pop
xchg
mov
scas
fsubs
out
fwait
cli
cmp
add
sbb
lcall
insb
leave
sub
sbb
or
adc
xor
sahf
mov
into
jnp
inc
outsb
aam
pop
inc
nop
cmc
or
jne
xchg
daa
mov
loope
ja
mov
push
aas
lds
fcomp
mov
ja
cmp
mov
out
pop
or
mov
bound
icebp
push
mov
leave
lcall
inc
es
push
xchg
cmp
loopne
lret
test
jmp
orb
pop
lods
cmpsb
ror
test
xchg
or
loope
addl
xchg
addr16
shll
int3
lods
fldcw
push
mov
or
mov
ljmp
lret
in
cmp
mov
ret
sub
out
insl
adc
cmp
filds
push
mov
jg
mov
adc
addb
xor
jns
jecxz
iret
sarb
xchg
mov
cmc
sbb
insb
xchg
cwtl
int3
cs
jmp
ficoml
out
cmp
in
push
jl
iret
sti
add
fidivrl
adcl
add
ljmp
cmp
push
sub
in
add
mov
mov
pmulhw
insb
or
xor
insl
jnp
shrl
stos
aad
rcl
xchg
cs
or
fs
stos
jmp
cmp
xor
xchg
push
test
mov
pop
adc
loopne
fcoms
adc
jl
aaa
mov
jnp
jnp
adc
xlat
rol
jge
insl
add
jp
pop
je
xlat
insb
jnp,pn
xor
jb
push
mov
inc
push
cmpsb
xlat
xor
mov
xor
xor
test
stos
das
or
inc
fimull
mov
xor
push
imul
imul
dec
mov
mov
dec
bound
sub
lret
sub
rcll
and
lret
fcoms
push
xchg
sti
fistps
xchg
stos
pop
std
jge
int3
xchg
mov
rcrb
jle
jle
loop
fstpt
bound
xchg
adc
out
insl
or
aaa
icebp
push
push
outsl
mov
in
mov
jbe
push
in
and
pop
dec
fiaddl
out
inc
shll
pop
pop
in
faddl
fsts
sub
lods
fdiv
testl
xchg
test
xchg
mov
inc
iret
popf
pop
sbb
xor
sub
sub
inc
mov
test
push
mov
cltd
xchg
popa
fwait
out
aad
std
arpl
adc
mov
jl
js
aam
push
inc
ret
js
pop
popf
mov
sbb
ja
sahf
std
jg
xor
sub
mov
adc
push
pop
and
test
out
popf
mov
in
movsb
flds
add
pop
mov
mov
sbb
mov
mov
cwtl
mov
dec
lcall
test
ds
pop
sahf
xor
sbb
int
in
insl
or
mov
subl
xchg
out
imul
out
inc
ror
xchg
sub
add
inc
orb
leave
daa
mov
inc
mov
mov
or
jns
std
ret
cmp
insl
xchg
je
and
repz
rol
push
test
filds
lret
mov
xchg
jg
sbbl
xchg
movsb
or
adc
inc
pop
push
popa
cmpsb
sub
xchg
imul
inc
mov
xorl
aaa
xlat
mov
inc
xor
mov
stos
mov
insb
sub
pop
push
sarb
fs
inc
ficomps
push
mov
iret
pop
jecxz
push
clc
pop
fucomip
ljmp
sub
push
lahf
cmp
mov
dec
cmp
push
push
cmp
sbb
fwait
sahf
push
push
stos
fldt
lcall
lods
sub
and
pop
jnp
cmp
cmp
inc
dec
wrmsr
mov
rcr
rcrl
scas
and
fnsave
mov
xchg
sbb
jmp
sub
loop
shrl
mov
loopne
inc
add
les
and
cmp
dec
pop
aad
mov
arpl
bound
lea
setnp
push
sub
inc
movsl
sbb
xor
push
adc
in
sub
stc
pop
das
push
popa
jb
fisttps
das
sahf
clc
sbb
xchg
scas
jmp
jns
loop
or
add
sbb
mov
sbb
mov
ljmp
scas
and
jno
in
sub
adc
jmp
jbe
call
push
pop
adc
in
pop
sbb
bound
inc
push
push
mov
xor
mov
jg
jno
adc
jns
xor
sub
cmp
sar
sub
in
adc
sub
inc
and
and
pop
out
ja
cwtl
push
lods
lods
add
in
inc
mov
pop
push
cmpsb
jne
insb
jae
mov
loope
out
pushf
repnz
or
jo
xor
sub
pop
icebp
pop
sub
jl
gs
jnp
xorb
sbb
sbb
xor
pop
lret
cmp
daa
lods
lock
xchg
push
sub
fisubs
scas
xchg
movsl
or
add
xor
int
mov
sti
test
pop
mov
cmp
mov
movsl
test
push
popf
push
jge
dec
mov
fists
pop
test
xor
scas
xchg
aas
nop
ss
xchg
fistpl
inc
mov
mov
sub
pop
mov
and
outsl
mov
jl
daa
lea
xor
movsl
sub
jge
int3
xchg
insl
test
pop
dec
aad
das
adc
push
mov
sub
or
jle
and
cmc
in
cli
cmp
lret
pushw
test
push
jp
push
adc
in
cmc
dec
enter
mov
xor
sbb
adc
pop
and
inc
faddl
add
and
mov
mov
pop
fdivrs
mov
xlat
mov
add
sub
stos
jp
inc
data16
test
loope
push
pop
sbb
movsb
ret
sub
bound
sbb
mov
pop
out
sub
cmp
pop
sub
jle
stos
inc
icebp
jo
add
leave
push
nop
ret
into
xor
xor
jp
ret
dec
and
and
or
and
or
xor
adc
outsb
add
sbb
out
or
pop
xchg
xor
mov
sbb
fidivrs
sub
cmp
call
and
and
enter
mov
and
fnstenv
jo
loop
push
mov
cltd
out
dec
mov
push
add
push
cmc
bnd
outsl
adc
cmpsb
push
sub
sub
iret
dec
sahf
xchg
mov
rorl
gs
outsl
fstpl
stos
mov
mov
xor
push
mov
push
clc
xor
sahf
mov
pushf
hlt
dec
movsl
push
pop
mov
add
test
outsl
dec
leave
cmp
adcl
cmp
daa
pop
pop
push
aad
jge
lcall
push
inc
fs
mov
xchg
add
jae
jae
hlt
add
popf
fsubr
or
jo
push
out
sbbl
pusha
xor
mov
jmp
and
pop
sub
pop
lock
adc
enter
jae
out
jmp
adcb
fists
inc
xorb
mov
xor
pop
or
into
rcrb
fistpll
cmp
scas
outsl
pop
dec
test
fisttpl
vandnpd
push
sub
orl
repnz
lahf
out
pop
aad
xor
mov
or
pushf
pop
pop
mov
shlb
fwait
icebp
jl
mov
add
insl
mov
push
xorb
fidivl
push
push
push
jmp
sbb
dec
push
push
mov
inc
cmpsb
and
jbe
movb
and
xor
insb
dec
mov
gs
xchg
mov
gs
out
mov
call
sarb
pusha
fldenv
mov
mov
loope
fisubrl
or
sti
cmp
les
pop
sbb
sub
insb
insb
call
repnz
mov
fisubl
and
gs
mov
adc
repz
cmpsl
outsb
lret
mov
movsb
fsts
inc
mov
xchg
clc
push
sbb
mov
adc
pop
sub
cmp
pop
shlb
cmp
add
repz
clc
jno
sbb
xor
sti
icebp
bound
fadds
cmpb
push
jge
sbb
cmc
cmpl
and
push
jecxz
fmull
mov
repz
outsb
or
pop
mov
lods
xor
fnstsw
pop
dec
sbb
pop
ret
sub
and
mov
jmp
or
xchg
shl
or
stc
leave
add
addr16
inc
add
jne
jno
pop
xchg
add
out
inc
jne
xorb
mov
cli
test
push
outsl
xor
dec
push
outsb
inc
into
xchg
fists
mov
xchg
pop
aas
mov
fldt
fdivr
fbld
decl
shl
jb
xchg
jbe
dec
loope
pop
call
cwtl
sub
ja
das
data16
out
es
fmull
push
cs
pop
mov
aas
or
test
out
aaa
push
fidivrs
cmp
loope
jae
sarl
clc
lret
add
insb
fistpll
pop
cmpsl
fmulp
jne
inc
mov
andb
outsb
dec
or
cmp
adc
adc
pop
fwait
daa
outsl
mov
decb
xchg
push
leave
aaa
pop
add
jge
jp
rcll
sub
out
xor
jnp
aas
mov
outsb
pushl
dec
push
jo
xor
scas
lret
jno
fisubl
jnp
mov
popf
cmpsl
mov
cmp
add
mov
scas
inc
pop
pop
lock
cmp
lods
arpl
lahf
pmullw
mov
and
jns
out
mov
jmp
fs
out
pop
jg
jbe
subb
jo
xchg
les
out
sarb
mov
pop
mov
xchg
push
lock
lcall
push
cmp
cs
cmp
mov
je
shr
movsb
mov
mov
push
stos
rcr
jge
les
xlat
cmp
in
fsubrs
jo,pn
inc
fbstp
and
jcxz
push
push
pop
stc
lds
test
gs
jg
inc
jns
fwait
and
push
lret
inc
les
mov
lock
sbb
test
jle
sub
dec
js
xor
dec
push
add
shlb
les
push
jp
stos
imulb
add
jo
inc
out
or
mov
cmpsl
mov
inc
add
and
mov
jp
add
rcrl
pushf
push
imul
mov
or
mulb
inc
int3
sbb
cmpsl
movsb
fwait
and
cmpsl
test
push
orl
mov
mov
push
fidivl
cmpsb
push
outsl
ljmp
cmp
mov
pop
ficompl
mov
adc
dec
stos
aad
ds
xor
inc
mov
mov
loope
jmp
sti
mov
sub
mov
xorb
ret
pop
pop
lds
fnstcw
inc
rclb
push
divb
aas
xchg
lcall
pop
test
sub
movsb
fs
ss
js
fs
sub
fisttpll
jae
jecxz
push
mov
and
ss
xor
repz
cmpsl
les
loopne
mov
sbb
push
adc
xor
dec
pop
or
mov
mov
call
jb
cltd
inc
push
mov
in
xchg
imul
sti
iret
sbb
lahf
inc
pop
push
les
jecxz
orb
inc
es
bound
xor
rcl
pusha
xchg
mov
loopne
fsubs
test
mov
fwait
lcall
mov
lods
out
jne
pop
xor
mov
popa
mov
loope
das
aam
out
xor
cmp
push
insb
mov
adc
js
dec
loop
les
adc
add
aaa
out
or
fldenv
insb
adc
pop
lock
mov
lods
sub
fbstp
repz
and
push
scas
cwtl
and
pushf
imul
cmp
test
mov
pop
stc
fldl
ljmp
cmp
pop
pop
adc
cmc
push
jg
or
ficoms
popa
and
pop
jo
mov
or
loopne
jl
ret
mov
call
fmuls
cltd
into
and
inc
mov
sbb
xor
jmp
pop
in
adc
lret
std
mov
lahf
out
movsb
pop
shlb
fs
push
ret
adc
pop
fcoml
enter
push
and
leave
xlat
fildll
jmp
and
cmp
shlb
imul
mov
and
sub
fimuls
mov
pop
add
mov
test
scas
push
xor
stc
mov
pmulhuw
shrl
mov
push
std
jbe
gs
lds
dec
sub
cmp
jb
mov
inc
int
xchg
mov
std
mov
lods
je
mov
notl
adc
imul
jo
push
adc
push
gs
mov
daa
xchg
adc
repnz
mov
cmpsl
sarb
push
outsb
popa
dec
fcmovne
dec
inc
jg
adc
adc
fsub
or
adc
les
into
xchg
push
jnp
loopne
test
jmp
pop
xchg
mov
sub
and
jbe
scas
inc
imul
sahf
outsl
sub
mov
xchg
mov
add
xor
mov
pop
pop
mov
call
nop
jmp
je
mov
adc
and
fsubr
jbe
pop
mov
jns
ret
sub
push
push
xor
hlt
outsb
push
mov
outsb
fwait
out
pop
je
inc
push
xchg
test
pop
mov
movsb
sub
jb
cltd
add
stos
sahf
lcall
sub
lods
mov
jno
jbe
mov
lods
mov
pop
jns
in
sbb
mov
pop
pop
mov
adc
xorl
add
xchg
inc
and
push
sbb
sbbl
shr
jne
mov
xor
sbb
enter
cmp
inc
xor
and
nop
popl
loopne
inc
arpl
in
fimuls
insb
add
cmc
into
inc
mov
scas
lahf
jnp
adc
scas
mov
dec
jno
cwtl
sbb
sbb
sbb
iret
sbb
lds
or
xor
mov
scas
pop
jb
cmp
mov
shrl
outsl
add
xchg
mov
mov
mov
lcall
lock
jns
js
mull
rorl
lods
mov
sbb
pop
and
sbb
push
mov
aaa
stc
pop
imul
orb
insb
sbb
mov
mov
jecxz
xor
das
ret
movsw
imul
cs
aad
or
enter
call
les
jbe
loope
push
adc
sbb
iret
imul
out
pop
ret
dec
out
insl
jo
cmp
imul
xchg
data16
rclb
mov
cmp
int
push
push
dec
aas
int3
adc
cmp
popa
mov
sub
dec
sti
ljmp
xchg
test
xor
sub
out
mov
dec
les
dec
daa
int3
je
jns
add
pop
pusha
jge
std
shrb
sub
mov
mov
call
jp
adc
mov
inc
lods
fchs
fisubs
mov
rcrb
aam
xchg
sbb
xchg
add
jg
mov
dec
mov
into
jle
out
insl
add
jp
pushf
pop
inc
aas
mov
fmull
adc
xorl
xor
movsb
in
es
push
add
loop
xor
movsl
mov
mov
mov
dec
sbb
pop
pop
pop
imul
cmp
imul
divb
stos
or
test
aam
les
jle
add
pop
adc
sbb
into
scas
or
ret
aam
rcr
pop
sbb
jecxz
daa
gs
das
pop
xor
rcll
shlb
or
pop
call
test
sbb
out
jmp
or
dec
sarb
add
push
shll
das
sub
adc
push
cld
mov
mov
nop
sub
jb
das
into
ljmp
inc
popa
jle
mov
and
jge
jae
pop
adc
stos
lcall
movsb
push
jno
ss
xchg
push
jmp
mov
movsb
or
mov
mov
add
jne
mov
in
jbe
xchg
dec
inc
movsl
in
cltd
pop
push
adc
push
xchg
out
xchg
mov
mov
icebp
ss
cmc
add
fsubrp
mov
cmp
dec
add
jp
test
test
sub
es
inc
xchg
inc
insl
dec
cmp
adc
arpl
int3
mov
loope
mov
mov
repnz
mov
add
push
addr16
sub
pushl
leave
dec
sti
sahf
jecxz
psllw
push
pushl
call
int3
jo
imul
or
pop
adc
clc
jae
sub
jno
scas
jae
aam
aas
jle
leave
scas
push
dec
inc
inc
mov
cmp
pusha
imul
adc
mov
push
push
sub
push
cmp
mov
adc
popf
add
xor
ss
pop
iret
cmpsb
ds
cmp
shl
incl
outsl
lret
mov
adc
add
jno
popl
jg
add
out
dec
stos
add
jmp
jbe
idivl
cmp
lods
cmpsl
imul
or
into
adc
xchg
les
jl
imul
pop
mov
loopne
fucomp
lret
imul
ret
inc
adc
mov
inc
or
or
add
or
loope
jp
jne
pop
dec
lods
in
frstor
add
push
mov
out
push
test
les
sbb
push
enter
bnd
cmpsb
lods
mov
xchg
sarl
lret
jmp
test
sub
lods
je
mul
jecxz
adc
mov
lret
les
mov
inc
push
leave
dec
pop
cli
dec
stos
cmp
lret
sbb
mov
dec
outsl
notl
pop
mov
lods
imul
jb
mov
setle
pop
adc
insl
mov
dec
imul
stos
aaa
add
jae
int3
sub
shll
add
add
loope
les
int3
and
inc
mov
ret
fnstsw
daa
stos
mov
out
cmp
movsb
pop
sub
out
imul
xchg
dec
dec
shr
notb
adc
jb
mov
aam
dec
das
xchg
inc
push
sti
mov
std
cmp
arpl
jb
lcall
ret
insb
popa
ffree
xlat
loop
jnp
and
or
mov
in
lea
xchg
pop
cmpsb
pop
pop
cmp
pop
jno
loope
mov
push
aad
or
jge
add
adc
mov
xor
insl
lcall
clc
sub
xchg
sbb
sbb
out
mov
push
jno
dec
fisttps
in
stos
dec
in
aam
jno
jg
pushf
push
pop
lock
decb
inc
jns
out
jnp
push
nop
stos
icebp
inc
leave
xchg
push
push
cmp
inc
xlat
cwtl
and
imul
push
xchg
movsl
pop
popw
inc
and
xchg
xor
jge
jnp
cmc
scas
mov
push
push
fbstp
ficomps
jle
ss
and
clc
push
push
cmpl
xchg
and
stos
mov
xorl
pop
clc
aaa
xchg
mov
dec
inc
push
cmpsb
push
ret
and
lret
enter
jg,pn
mov
scas
fcoms
xchg
pusha
mov
jmp
sub
add
and
lret
xorl
mov
sub
push
lret
fistl
push
ljmp
test
ret
pop
adc
ja
stos
adc
mov
sub
pop
arpl
popa
push
popa
xchg
sbb
sbb
imul
mov
xorb
out
jno
fistps
xor
cmp
cmc
fldenv
mov
sub
push
jmp
mov
xchg
xchg
out
push
push
sarl
lds
xlat
cld
shlb
fxch
xor
lods
xchg
add
sub
inc
jnp
xchg
jmp
nop
add
pop
xchg
mov
push
lret
leave
jp
test
addr16
mov
aas
mov
bound
sbb
popa
jecxz
cli
jmp
mov
insl
and
sub
mov
xchg
adc
cmc
iret
js
sub
mov
subl
cld
cli
popf
jg
push
fdivr
xchg
sbb
mov
lods
mov
repz
xchg
lahf
es
adc
lea
push
jbe
sub
inc
push
cmp
add
fwait
pusha
movsb
rcrl
sarl
sbb
mov
or
sub
shll
movhps
stc
cmp
adc
inc
es
clc
and
das
xchg
scas
or
subl
mov
lods
nop
inc
cmpsl
push
mov
sbb
repnz
jle
sub
mov
dec
push
jbe
mov
push
gs
call
movsl
ds
add
mov
repnz
aam
mov
test
and
call
sbb
arpl
int3
clc
lock
adc
sahf
and
fisubrl
adc
jno
mov
or
data16
popf
pusha
adc
jle
mov
mov
aas
leave
mov
mov
mov
inc
cmp
push
je
pop
fcomps
scas
pop
push
icebp
scas
mov
inc
push
nop
dec
jecxz
sub
adc
adc
push
lcall
pop
repnz
das
mov
xor
jne
cld
add
mov
mov
jmp
push
fisubrs
inc
ja
fisubrs
push
neg
mov
fisttps
fisubrs
adc
push
or
or
push
push
andb
pop
loope
aas
scas
es
ret
jge
add
in
xlat
xor
int3
scas
mov
pop
sub
or
push
dec
dec
shr
outsb
rolb
popf
cmpsl
sbb
mov
sahf
lahf
call
sbb
jmp
into
dec
fstl
movsl
mov
dec
in
adc
xchg
add
hlt
dec
cs
inc
imul
testl
push
or
mov
lock
jo
fnstenv
shl
mov
call
cmp
popf
pop
notl
cmc
je
jne
mov
cltd
mov
mov
sbb
or
outsl
loopne
stos
or
adc
dec
cmp
add
xor
mov
shll
loopne
outsb
pushf
shrb
insb
shll
adc
test
hlt
mov
and
or
sub
sbb
jp
por
add
jno
adc
sub
div
pop
xor
xchg
movb
mov
and
jne
lods
cmp
mov
subb
cmpsl
mov
aas
loopne
mov
popf
stos
insl
inc
bound
xor
bound
add
pop
sbb
and
push
inc
orb
adc
gs
dec
and
stc
sub
and
xchg
mov
test
adc
shr
out
sahf
cwtl
pop
jp
sub
fdiv
lret
loop
pop
cld
daa
mov
sub
pop
pop
adc
sbb
rorb
pop
or
loop
jmp
pusha
adc
pop
ret
pop
mov
pop
cmp
adc
inc
in
lcall
push
data16
mov
fisubrs
cmpsl
jmp
in
in
into
mov
mov
fucomp
or
aam
out
cmp
and
fs
shrl
mov
lahf
fildll
or
dec
mov
das
mov
dec
and
xlat
rol
add
push
or
out
mov
cmpsb
jecxz
or
inc
lock
das
jb
xor
lret
dec
or
addb
loopne
aaa
pop
int3
mulb
sub
pop
les
xchg
loopne
xor
and
add
scas
inc
cmc
push
in
mov
ret
sub
aam
icebp
xor
enter
cmp
pop
enter
js
into
inc
xchg
push
pop
jbe
cmc
loope
xor
mov
cld
negb
dec
ja,pt
lret
xor
xchg
xchg
dec
sub
outsl
xor
or
inc
add
icebp
jns
mov
fsubrs
push
loop
bnd
inc
inc
stc
add
pop
in
outsl
pop
pop
mov
js
pop
outsl
int3
cwtl
scas
xchg
data16
test
daa
sbb
loop
xchg
int
sahf
icebp
aaa
ljmp
sti
int
adc
push
fs
jb
jg
xor
insb
imul
into
mov
sbb
arpl
pop
in
push
dec
aam
ds
jl
in
rcll
nop
rorl
aad
inc
outsb
in
push
dec
sub
fisttpl
sbb
sub
mov
iret
outsl
filds
xorl
out
or
repz
cmpsb
fisttpl
xchg
andb
loop
loop
shrl
imul
cmp
ja
pop
sbb
mov
push
popf
jbe
mov
in
loopne
fadds
out
push
ss
hlt
mov
in
jl
cld
push
imul
cmp
fcmovbe
xchg
clc
jne
aam
dec
dec
in
jb
pop
jecxz
or
fisubrs
xchg
sahf
ja
add
cmp
lds
outsb
leave
test
outsb
jmp
addb
hlt
mov
rolb
aad
pop
icebp
or
mov
xor
adc
pushf
cmc
je
xchg
mov
imul
test
pop
mov
mov
cltd
and
test
movsb
inc
filds
jmp
push
cmc
imul
pusha
pop
xchg
sub
mov
enter
int3
mov
sbb
subl
jnp
pop
cmp
jecxz
dec
shlb
adc
add
jae
sbb
pop
shl
movsl
mov
rcrl
cmpsl
mov
dec
das
adcl
xchg
or
outsl
inc
mov
mov
icebp
arpl
out
sbb
jle
cmp
das
int
push
pop
adc
pop
sbb
xchg
loope
pop
addr16
jne
stos
lahf
xlat
cltd
pop
pop
or
out
out
loop
jle
sub
dec
jge
xor
movsb
fnstcw
mov
xchg
ret
pop
int3
xchg
mov
sub
sbb
imulb
adc
push
in
mov
mull
in
out
negl
cld
xlat
fwait
popa
adc
mov
lods
adc
scas
dec
fistpl
xor
test
jle
mov
inc
cmp
jg
add
sbb
cmpsb
das
xor
xor
mov
adc
in
pusha
mov
push
inc
lret
and
cld
pop
in
shlb
out
mov
lods
pop
out
xor
frstor
pop
sub
xchg
mov
incl
mov
cmc
imul
jnp
lock
sbb
and
push
into
rcrl
push
call
loope
mov
popa
adc
xchg
mov
xor
std
cmc
sbb
int
sub
xchg
lret
fdivrl
out
and
inc
adc
std
iret
pextrw
jge
cmp
sarb
outsb
shlb
mov
shl
fwait
mov
loope
push
mov
or
test
pop
sub
dec
mov
add
sarl
or
fildll
lcall
rorl
sub
jbe
divl
js
mov
fs
into
das
xchg
shlb
add
test
aad
adc
jne
lock
andl
inc
mov
push
xchg
insl
rorl
sbb
mov
pop
jnp
cmp
mov
inc
pop
outsb
and
pop
push
dec
xlat
push
sbb
das
jne
pop
ja
jno
dec
les
xor
into
inc
xchg
aaa
repnz
pop
xchg
ljmp
and
jmp
lret
xor
mov
pusha
dec
lret
dec
adc
inc
fstpt
push
pop
push
mov
xor
movsl
les
sbb
popf
sbb
mov
or
std
push
pop
push
outsb
dec
aam
push
test
enter
mov
cmc
shlb
mov
insb
test
lret
cmc
arpl
push
jecxz
push
inc
icebp
std
nop
cmp
mov
loopne,pn
add
xchg
push
adc
xor
getsec
xchg
cmp
mov
jo
ljmp
jo
paddsw
imul
cmpsl
mov
data16
xlat
and
jb
sub
ljmp
cwtl
inc
stc
icebp
mov
sbb
sub
mov
or
sub
hlt
pop
mov
data16
adc
frstor
leave
xor
push
mov
jae
and
mov
imul
fisubl
divb
jle
lahf
xor
inc
nop
mov
push
jns
shlb
pushf
lcall
outsb
nop
inc
xchg
push
push
mov
lods
fiadds
push
mov
ss
fisubrl
adc
addl
sub
negl
sub
sub
ret
fidivs
test
icebp
iret
jl
into
test
push
sahf
pushf
cmp
loop
test
add
ja
lret
pop
cmp
jnp
lods
jne
mov
adc
arpl
loop
push
adc
divb
icebp
in
lahf
pop
rcll
push
jmp
in
lea
xorb
or
dec
movsl
inc
mov
mov
inc
test
pusha
dec
cmc
mov
xchg
or
int3
mov
mov
adc
shrb
ljmp
push
js
adcb
inc
test
lea
xchg
clc
and
jl
push
mov
xor
sahf
arpl
mov
cmp
sbb
sbb
or
in
sub
testl
jp
adc
lahf
mov
jae
imul
xchg
dec
lock
xorl
or
push
call
jp
aam
rolb
jmp
pop
in
sarl
mov
fldt
idivl
xor
adc
enter
mov
inc
sbbl
add
loop
and
mov
push
push
test
in
xor
jg
jb
cmp
adc
xor
mov
dec
int
xor
adc
test
xchg
jmpw
xchg
pop
lret
xchg
pop
mov
inc
inc
enter
orl
rcll
pop
add
jb
fs
push
cmp
and
pop
stos
inc
cmp
add
aas
outsb
pop
and
test
sbb
inc
aaa
push
in
mov
lods
pushf
orl
sbb
inc
outsl
in
sti
and
sub
cs
cmc
pop
xchg
int
and
xchg
inc
mov
push
jns
add
movsb
mov
out
and
gs
cmpsl
mov
dec
pop
clc
int3
mov
outsb
inc
add
in
xorl
lret
fsub
data16
xchg
fwait
mov
ret
adc
sub
xchg
shlb
aad
xor
xorb
sub
negl
add
xchg
shlb
or
shll
push
or
movsb
fcmovne
popf
cltd
ja
dec
ljmp
movsl
sbb
jge
jge
pusha
add
imul
psubusw
sub
push
popf
push
xchg
in
aad
push
fldl
sub
add
add
pusha
rorl
imul
lods
sub
pop
sbb
ret
push
incl
mov
test
xchg
jbe
popf
lret
insl
ss
es
mov
push
dec
gs
cmpb
jo
dec
sub
jp
xor
xor
lock
sbb
push
sub
stos
cmp
mov
sarl
cmp
sahf
test
ljmp
loope
dec
add
adc
lcall
ret
sub
cmp
mov
adc
fcmovnb
jmp
ret
cmpsl
out
movsb
sub
xor
into
cmp
sahf
es
mov
daa
inc
in
sub
and
xchg
sbb
es
xor
aas
xorb
shlb
dec
and
fimuls
lods
or
or
adc
pop
sub
pop
adc
repz
insl
das
jb
mov
push
adcb
dec
mov
movsl
mov
clc
imul
xor
imul
dec
push
repz
std
sbb
repnz
sub
mov
mov
aad
call
ror
cwtl
or
out
push
sahf
call
fidivl
cltd
shll
out
clc
and
adc
stos
push
in
mov
xchg
dec
xchg
out
adc
dec
insb
mov
jmp
cmp
fs
mov
adc
mov
push
fsubl
shlb
mov
xlat
pop
shll
cmpsb
insb
lcall
add
adc
testb
out
pop
lret
popa
dec
fldenv
cmpsb
pop
push
popa
test
test
lcall
daa
sub
cwtl
hlt
aad
xchg
mov
cmc
sub
test
icebp
test
pusha
int3
adc
sbb
jnp
mov
outsb
movsl
adc
jg
jne
inc
pop
mov
mov
add
xchg
xchg
sbb
decl
inc
mov
sbb
xor
cmp
jb
sti
or
stc
push
std
push
fimuls
inc
popa
dec
pop
ror
in
xchg
roll
mov
pop
mov
movhps
dec
mov
xchg
lret
xor
push
cmpsb
cltd
js
cmp
lds
mov
pop
xchg
xchg
sub
push
outsb
xchg
adc
or
inc
mov
mov
xchg
pop
out
xor
test
mov
and
xor
push
test
jb
ja
dec
mov
fs
fimull
cmp
dec
xchg
sub
add
fadds
movsl
lods
push
mov
adc
mov
xchg
pop
push
xlat
dec
dec
cmp
cli
loopne
push
bnd
fmul
inc
mov
push
inc
cmpl
sub
imul
lock
dec
inc
add
add
popf
repnz
pushf
mov
sarb
lret
sbb
mov
in
and
inc
pop
les
scas
jp
xor
pop
pop
xchg
inc
jne
cmp
in
dec
xchg
and
imul
cmp
daa
jo
movsl
and
pop
cmp
sub
aam
jmp
les
mov
sbb
add
fdivrs
sbb
mov
ss
sub
fnstsw
lahf
rcrl
sub
test
inc
hlt
jae
mov
movsb
lock
scas
inc
dec
cmpsb
mov
lods
sqrtps
sbb
ret
dec
pop
sub
mov
push
inc
adc
outsb
jae
pop
jp
movsl
and
mov
mov
xchg
ret
push
hlt
sbb
faddl
cli
test
jp,pn
sub
out
mov
cmpl
call
mov
in
dec
jbe
nop
cltd
mov
pusha
loopne
out
lcall
pop
push
xchg
lahf
lcall
daa
mov
push
mov
popf
insb
gs
jne
mov
push
adc
ljmp
pop
add
dec
push
adc
lahf
andb
ja
xchg
int
mov
jg
in
ret
adc
imul
fdivl
std
lret
pop
into
lods
mov
js
jno
cmp
outsb
mov
sbb
dec
cmp
sahf
test
and
in
fs
dec
dec
cmp
xor
mov
jge
idivb
push
fdivl
movsl
inc
dec
fdivl
cmp
cmp
ja,pt
lcall
sbb
lret
cmc
fidivl
subl
stc
dec
xchg
aaa
cmp
xchg
loop
decl
cld
jl
lcall
push
jbe
in
cmp
pop
mov
and
push
jnp
popa
adc
std
in
or
bound
jnp
inc
push
xchg
ret
cmp
mov
in
mov
jbe
inc
jl
jnp
and
aas
rolb
nop
out
call
cmpb
cmp
xor
movsl
xor
inc
lret
cld
ret
cwtl
inc
mov
sbb
push
in
or
mov
cmpsb
mov
daa
out
xor
pop
lods
out
add
push
mov
cmp
adc
dec
push
daa
enter
add
add
outsb
xchg
cltd
adc
mov
mov
shlb
aaa
inc
in
lods
es
shll
pop
push
test
mov
pop
inc
dec
aam
fnstcw
hlt
dec
xchg
dec
pop
cmp
hlt
add
or
dec
cmc
push
mov
cmpsl
mov
in
push
adcl
fs
dec
popa
jae
mov
fcoms
or
cld
sbb
pop
cmp
pop
xchg
lret
out
dec
mov
sti
aas
sub
repnz
shll
mov
subl
mov
cmp
jecxz
shrl
test
jl
paddb
loop
mov
adc
add
popl
jge
shrb
mov
pop
aas
daa
jo
shrl
inc
push
or
push
sbb
jb
dec
dec
xchg
mov
hlt
scas
xchg
cs
xor
push
jle
sub
cld
and
es
pusha
pop
lock
cs
out
xchg
dec
and
mov
sub
int
pop
xchg
ret
adc
das
shll
sbb
jo
aas
jle
pusha
clc
push
mov
cmp
enter
movsb
and
push
sti
sahf
shlb
pop
inc
lret
ljmp
jge
sbb
jb
sti
push
fwait
insb
data16
das
sbb
sbb
cmp
or
mov
ja,pt
pop
or
in
addr16
xchg
pop
int
js
scas
and
mov
lea
fstl
enter
pop
xchg
xchg
adc
pop
in
jne
jmp
mov
loopne
test
test
sub
loope
aam
subl
sti
scas
out
push
fld1
inc
and
mov
ds
sub
xchg
mull
subl
jb
push
aam
mov
ficomps
sbb
in
adc
sub
addb
mov
cmp
cltd
shll
vaddsubpd
cli
and
leave
or
add
push
jns
jns
test
imul
cs
ljmp
push
insb
fs
test
mov
ds
and
dec
insb
in
lret
inc
aam
pop
and
test
rolb
cmp
jae
adc
jo
lcall
inc
sub
test
jbe
leave
scas
mov
sub
dec
arpl
lea
or
sub
inc
mov
clc
roll
fildl
push
pop
sub
add
sub
das
dec
mov
pop
js
pop
dec
pop
cmp
dec
movsl
mulb
mov
mov
cmc
cmp
push
imul
cmp
lcall
shlb
iret
subb
xor
mov
sbb
dec
dec
inc
test
in
inc
cltd
in
mov
add
sbbb
popf
in
cmp
pop
mov
in
sbb
inc
or
xor
ret
mov
cmpsl
iret
sbb
out
in
adc
loope
adcl
repz
xor
adc
inc
aam
lds
cmpsb
scas
xor
nop
rcll
fidivs
or
jl
insb
stos
sub
movsb
insl
push
xchg
or
jl
jb
filds
adc
sbb
dec
lcall
pop
push
js
stos
push
test
movsb
xchg
cmp
shrl
scas
neg
fidivrl
loopne
jmp
pushl
sar
shlb
scas
dec
and
jbe
aaa
cmp
insb
or
jl
mov
push
dec
jne
loop
push
into
xchg
fs
jne
inc
adc
jge
push
add
dec
mov
pop
inc
push
jl
mov
insb
les
mov
pop
leave
lods
jmp
rorb
fsubs
pop
push
test
iret
cmc
inc
orl
and
mov
dec
jg
outsl
aas
add
jp
jle
sub
and
fistpl
aam
inc
imul
mov
aam
and
push
mov
xchg
xor
rorl
roll
in
push
rol
push
insb
push
mov
dec
jbe
in
repnz
mov
in
mov
mov
adc
and
sbb
stos
pop
mov
stc
xorb
dec
xchg
xor
jnp
hlt
sbb
push
mov
xor
insl
mov
jbe
dec
daa
mov
xor
sarl
ljmp
arpl
pop
and
adc
lret
ss
test
js
add
mov
lds
pushf
ja
outsb
xor
roll
ja
nop
and
loope
popf
inc
adc
in
dec
jnp
daa
lahf
hlt
mov
repnz
test
sbb
push
xor
inc
movsb
dec
sub
jbe
or
sar
loopne
dec
pop
pop
mov
test
js
in
mov
adcl
push
jae
adc
repnz
cmp
popa
adc
imul
scas
sub
dec
xchg
cld
jb
pop
data16
add
cmpsl
add
push
jne
xor
mov
pop
cmpsl
pop
scas
in
or
testb
cmpsl
into
sub
stos
test
imul
lcall
inc
mov
out
cmpsl
sti
push
bsr
or
xlat
add
mov
mov
mov
aam
or
aas
add
mov
fwait
jo
xor
jno
xchg
fcom
mov
rep
jnp
xor
pop
lahf
cmp
rol
or
adc
push
xor
push
out
and
fcom
roll
fsubp
fdivl
ds
dec
int
lret
jl
int
xor
inc
and
insl
rcrb
dec
hlt
inc
mov
xor
repnz
cmp
lret
sbb
cmp
add
xchg
xlat
xor
jg
xlat
or
sbb
loop
dec
sub
cltd
sub
sbb
mov
mov
ret
imul
sbb
int3
sbb
lcall
jns
fnsave
add
movsb
or
iret
test
inc
inc
in
cmp
out
jmp
adc
cmp
cmpl
mov
pop
cmp
mov
push
sbb
insb
dec
pop
repz
mov
inc
inc
aas
jno
jmp
out
popf
gs
inc
mov
dec
sti
repz
push
and
insl
mov
add
aas
sbb
jbe
inc
fdecstp
dec
and
jae
push
add
fs
adc
mov
out
sub
mov
jmp
loop
mov
mov
lea
dec
xchg
jo
out
icebp
lock
jle
repnz
or
add
and
mov
repz
adc
roll
mov
jle
popf
mov
adc
jle
xor
call
jns
inc
dec
sub
addr16
add
sub
add
cld
inc
dec
xchg
dec
stos
cs
ja
les
leave
jo
mov
cwtl
loopne
pop
or
dec
sbb
daa
popf
mov
cwtl
add
jo
dec
js
lret
jmp
push
dec
jge
sbb
pop
adcl
xchg
imul
lea
pop
rcr
sub
jl
fldenv
pop
fildl
inc
pop
mov
sbb
iret
sub
push
pusha
mov
push
icebp
sbb
xor
mov
pop
dec
jg
movsl
ljmp
add
test
jl
pop
fs
jns
mov
and
dec
push
xchg
ret
push
mov
mov
in
sub
push
into
sbb
jecxz
inc
mov
jae
fldcw
or
jecxz
leave
cmpsb
jg,pt
push
add
sbb
jg
dec
leave
jns
jns
pushf
shll
mov
cmp
dec
gs
mov
add
repz
sub
addps
loopne
inc
cld
out
and
adc
push
daa
xor
nop
sti
clc
mov
xor
aas
jle
daa
sub
in
icebp
xlat
jbe
mov
jle
imul
mov
dec
or
in
xchg
push
fcoms
out
vmovlps
mov
adc
mov
popa
mov
inc
sbb
lret
aaa
mov
lcall
stc
adc
jp
jo
mov
xor
lret
mov
jbe,pt
jp
out
nop
leave
adc
jae
push
movl
out
dec
hlt
add
aaa
aaa
fisttpll
push
fimuls
sbb
xchg
shll
stos
rcrl
jne
imul
cltd
mov
pushf
aas
aam
test
addl
stos
lea
dec
xchg
leave
dec
cmp
mov
dec
or
xchg
add
sub
mov
dec
jl
hlt
loope
inc
jnp
xchg
mov
jle
enter
popf
cmp
mov
outsl
mul
inc
ss
insb
pop
add
aad
and
xor
test
insb
movsl
mov
push
jb
movups
and
adc
ror
mov
ss
in
ret
jns
push
fisttpl
call
sub
ret
xchg
rcll
sbb
pop
push
int
jb
inc
adc
jne
outsb
int
arpl
outsb
xor
mov
pop
aaa
xor
int3
dec
jl
add
push
sub
xchg
in
in
out
iret
fldenv
popf
cmc
loop
das
jmp
lock
mov
aas
lods
push
pop
xchg
jp
inc
loop
iret
aas
inc
cltd
mov
add
cmp
imul
fwait
hlt
mov
lcall
out
pop
loop
sbb
jecxz
pop
lcall
mov
ss
imul
popf
outsl
jb
cltd
jg
inc
mov
popf
jmp
dec
movsb
repz
mov
and
cmp
sub
dec
adc
cmp
pop
outsl
lahf
imul
xor
xor
mov
fcomps
div
test
aas
cmp
insb
cmp
popa
stos
movsb
or
mov
ret
pusha
cwtl
sub
adc
out
dec
test
or
dec
mov
push
push
ja
fstpl
sub
pop
inc
test
and
rcll
add
shll
or
pop
mov
xor
or
cmp
or
ret
in
fimull
sbb
dec
mov
test
cmp
cmp
ror
lret
xchg
test
repnz
icebp
pop
loop
cmpsl
cli
in
xchg
dec
dec
jns
loopne
test
xor
sub
or
outsb
icebp
lock
movl
insb
and
aas
aad
jp
inc
ljmp
push
sub
pop
out
push
lcall
cld
sti
cmp
or
ret
test
cmpsl
lods
xchg
and
xchg
test
or
lock
sub
push
test
inc
je
lock
and
stos
or
adc
mov
and
imul
add
dec
dec
sbb
shrb
enter
in
mov
ss
or
sbb
sub
shll
fisttpl
das
lret
lds
xchg
dec
jmp
sbb
push
sub
and
insb
in
test
jo
aam
add
adc
aad
std
push
mov
daa
cld
push
fildll
inc
xor
leave
out
or
push
sub
das
stos
sub
pop
xor
sub
pop
or
stos
xchg
xchg
es
or
out
js
push
push
push
mov
sub
inc
add
add
add
jo
push
in
sbb
push
cmp
sbb
cmp
std
mov
movsb
mov
and
in
push
pop
xor
xchg
adc
popf
jno
cmp
pusha
jns
test
mov
stc
mov
testl
movsl
cmp
in
jl
jmp
cmc
test
mov
das
jno
sub
daa
sbb
mov
xchg
xor
mov
loopne
cwtl
jb
xor
aad
das
into
cmpsb
mov
add
fcoml
aas
mov
or
mov
ficomps
sub
std
sahf
mov
cmp
addr16
std
push
dec
cmpsl
dec
repz
sub
push
lahf
dec
sbb
aad
cmp
shlw
adcl
pop
cmp
ss
aaa
insl
pop
pop
pushf
in
adc
push
popf
mov
inc
xchg
in
sti
arpl
xchg
sbb
je
in
cmc
in
scas
adc
sub
fdivrs
adc
lea
ret
inc
or
rolb
pop
pop
mov
fmuls
mov
jle
cmp
pop
add
aaa
loope
pusha
movb
int
sbb
xchg
xor
out
in
xor
std
xor
xor
mov
ss
insl
inc
aas
mov
pop
sub
sbb
repz
jne
xor
jnp
add
add
pop
aad
fs
sub
aad
shrl
sti
adc
push
xor
lock
and
enter
dec
add
add
fildl
sbb
push
fcmovnb
jnp
pop
push
fwait
add
mov
push
mov
mov
shrl
fldt
popf
mov
dec
pop
sbbb
adc
push
mov
fisttpl
add
mov
mov
addr16
pop
je
int3
out
aas
inc
inc
lcall
jns
push
mov
adc
xor
and
pop
lret
push
push
lea
addr16
mov
notb
shlb
mov
cmp
cmp
adcb
jno
addr16
arpl
xor
rorb
gs
cs
repz
icebp
pop
dec
cwtl
push
out
mov
aaa
adc
mov
sbb
push
rcrb
and
push
je
into
lahf
xor
icebp
jmp
neg
and
incl
sub
adc
loop
jbe
test
std
jae
hlt
int
test
xchg
or
popl
movsb
or
js
popa
std
mov
stc
mov
data16
cmpsb
xlat
mov
dec
inc
or
in
daa
fwait
popf
xchg
je
inc
in
call
mov
jns
lea
scas
add
sbb
psraw
and
sub
fcoms
jne
into
add
lgdtl
jno
jg
or
call
sbb
mov
mov
push
out
cmp
or
mov
test
and
cmp
roll
test
stos
inc
clc
shrl
jge
test
imul
jle
dec
push
out
mov
fsub
sbb
stc
sbb
bound
add
add
les
int
xchg
xorb
out
fisubrl
xor
add
and
jp
sub
lds
adc
imul
dec
negl
push
sbb
push
imul
push
mov
xchg
in
in
subl
js
int
lcall
push
testb
movsb
mov
imul
scas
movsl
pop
rclb
jo
sbb
jae
add
and
iret
out
adc
ss
pop
lret
sbb
pop
int
xchg
dec
mov
sbb
inc
loop
testb
push
adc
or
push
into
xlat
bound
or
and
add
inc
or
sarl
mov
enter
sbb
movsb
mov
xor
xchg
ss
mov
fnsave
push
xrelease
mov
dec
jg
ss
or
arpl
loope
xchg
pop
ja
fcmovb
shlb
cmpsb
jg
xor
push
pop
popa
in
mov
lahf
scas
mov
pusha
fimull
ss
icebp
aam
mov
or
scas
mov
add
pop
and
test
test
clc
sbb
stos
movsb
sub
dec
test
pop
fstps
int3
addr16
cmp
mov
and
test
jmp
inc
testl
jle
jg
cmpsb
frstor
scas
sbb
cmp
int3
dec
pop
push
xor
xor
pop
cmc
cld
int
inc
xchg
sarb
jne
adc
pop
dec
mov
pop
jb
aam
xchg
dec
push
ljmp
je
out
lret
loop
inc
daa
mov
jecxz
pop
and
in
jmp
addl
and
mov
lcall
fimull
js
pop
xor
pop
inc
ljmp
fiadds
movsb
mov
xchg
mov
imul
pop
cmpl
push
jl
fsubrl
cmpsl
lahf
cmpsl
lock
inc
sbb
rorb
addr16
fneni(8087
push
cmp
sbb
add
ss
add
repz
sbb
in
mov
lods
add
push
push
pop
ret
imul
and
pop
jnp
outsl
je
lcall
inc
outsl
xor
repnz
dec
mov
unpckhps
mov
jge
add
and
xchg
mov
sub
push
das
fidivs
dec
test
jno,pn
jbe
insb
inc
xor
stc
sub
pop
dec
loope
push
pop
push
divb
mov
sahf
decl
cli
fsubrs
cld
xchg
mov
outsl
sbb
mov
outsl
fs
mov
mov
sub
punpcklwd
and
filds
mov
lcall
jle
es
or
or
lcall
clc
inc
mov
shlb
adc
sbb
loop
adc
xor
test
add
loop
icebp
lea
inc
out
orl
inc
sub
aam
dec
push
insl
fs
xchg
mov
outsl
pop
stos
and
popa
cmc
lret
and
cs
out
hlt
pop
mov
dec
cmpsb
scas
sub
call
xchg
pop
hlt
rcrl
pop
sub
push
mov
mov
mov
ss
shl
cwtl
out
sbb
or
mov
rcrb
cmp
movsl
xor
dec
pop
dec
xor
pop
lock
repz
xlat
mov
pusha
imul
push
lods
gs
push
pop
push
xor
sub
mov
ror
inc
or
dec
and
in
ss
loope
add
cli
out
in
cmp
aad
jne
cmp
lods
sbb
xchg
fwait
call
repz
inc
jae
mov
movsl
loope
dec
lock
mov
pop
clc
fs
imul
and
push
rcl
jb
movsb
imul
dec
mov
pop
push
mov
sbb
jb
test
jns
xchg
test
mov
mov
test
loop
mov
stos
jne
add
lret
scas
inc
or
mov
out
xchg
stos
xor
sbb
pop
push
or
xchg
jbe
or
lea
sbb
ficoml
xchg
lods
pop
stos
out
cmp
imul
mov
sub
mov
sbbb
cbtw
pop
sbb
enter
lds
mov
faddl
test
bound
ss
xchg
dec
add
das
and
xorl
and
loop
fwait
arpl
es
out
pop
jecxz
fadds
dec
push
push
push
std
test
xchg
mov
clc
stos
icebp
lock
imul
sbb
sahf
aam
mov
push
adc
push
push
and
add
scas
scas
cmpb
popa
mov
inc
imul
lret
inc
jbe
mov
icebp
push
lcall
adc
out
scas
mov
and
or
or
inc
cmp
loopne
jecxz
in
pop
loope
or
loopne
adc
loopne
jl
and
popf
std
or
fidivrl
nop
lcall
test
icebp
imul
pushf
movsl
push
in
inc
icebp
dec
mov
ret
pop
scas
lds
fwait
xchg
sub
xlat
add
loopne
push
sbb
clc
out
lret
addr16
dec
dec
shr
dec
or
sub
test
out
fbstp
pushf
sbb
arpl
outsl
fwait
sub
ss
sub
ds
rcrb
popf
in
push
pushf
mov
fldl
jae
jg
mov
inc
mov
mov
add
pop
mov
adc
adc
push
xor
inc
inc
js
int
js
dec
gs
jl
imul
fisubrl
adc
mov
lahf
add
fidivs
xor
push
sbb
xchg
cld
arpl
or
loope
or
scas
scas
adc
and
cmpsl
add
lret
xchg
ja
mov
or
sub
test
repz
mov
dec
nop
inc
xor
shlb
push
dec
out
mov
iret
adc
leave
flds
iret
daa
ja
cmp
std
aam
subl
out
inc
inc
push
push
jb
out
add
push
lcall
cmp
add
or
sub
insb
js
cmpsb
ljmp
pop
pop
rcrl
mov
loopne
sbb
jl
ja
movsl
jp
mov
aad
add
cs
and
push
adc
pop
mov
mov
sti
scas
add
dec
shrb
jnp
stos
aam
test
lcallw
add
in
pushf
fildll
push
and
nop
add
jge
enter
les
lret
stos
jmp
jbe
adc
and
or
in
fs
mov
lods
xchg
or
test
mov
addb
scas
fcomip
jb
loopne
adc
subb
inc
push
xor
test
ja
push
jae
pop
loope
rcll
jae
adc
or
cmp
jb
mov
out
pop
loopne
xchg
pop
dec
xchg
fcmovu
les
fst
out
icebp
mov
dec
popf
mov
xchg
pop
pop
sub
stc
mov
repnz
test
cmp
in
xor
les
rorb
fwait
shrl
sahf
rclb
rclb
mov
mov
das
dec
xor
repz
mov
rorb
push
insb
stos
addl
add
jae
xor
in
dec
jmp
xchg
call
pop
ja
cmp
inc
pop
lcall
aam
jne
fldt
ret
xchg
mov
dec
outsb
dec
mov
rcl
sbb
ljmp
shll
dec
cmp
negl
push
jmp
insb
inc
mov
test
jnp
adc
jb
out
filds
icebp
or
mov
inc
jmp
out
fs
outsb
subb
cwtl
xor
lock
pop
daa
xchg
inc
pop
filds
addr16
shlb
cmc
ds
xor
cmp
push
jl
pop
js
pop
fildl
jne
add
xlat
iret
stos
in
push
and
mov
pop
rcr
jae
mov
cmp
xor
jl
leave
pop
das
sub
xor
push
leave
mov
shll
lcall
stc
outsb
xor
adc
inc
in
jnp
nop
xchg
xchg
lods
in
ja
xor
mov
in
cli
mov
out
xor
fwait
jo
sub
cmp
pop
aam
push
push
lahf
arpl
pop
scas
sti
dec
xchg
push
inc
andb
and
outsl
testl
stos
fdivrl
xchg
pop
loop
cli
loop
adc
lret
cmp
roll
xor
jo
mov
lret
cmp
enter
loopne
hlt
dec
add
cmp
leave
mul
and
fsubrs
jo
iret
push
mov
repz
mov
jecxz
int3
into
jl
lret
mov
insb
mov
or
lret
push
mov
inc
xor
js
negb
inc
in
nop
fcom
xchg
inc
and
mulb
jne
xor
pop
mov
lahf
in
push
shr
imul
push
loope
cmp
call
xchg
sbb
sub
jg
jp
add
mov
cmc
imul
jg
adc
ds
mov
lods
xchg
hlt
ja
pop
and
dec
ja
mov
jge
cmp
pop
jg
cmp
mov
dec
test
and
mov
cmpsb
jnp
xchg
inc
push
ss
lock
add
pop
in
mov
decb
adc
scas
test
push
add
adc
mov
push
cmp
mov
insb
push
jl
xor
mov
xchg
mov
cmp
insb
dec
xchg
inc
cmp
sti
cmp
inc
imul
jbe
ja
gs
inc
shr
jno
jg
mov
xor
aas
jle
push
push
test
dec
cmp
adc
and
aas
mov
mov
jne
jge
icebp
dec
jp
and
xchg
ss
rorb
cmpsb
bound
xchg
xchg
mov
sahf
test
adc
into
sbbl
loopne
mov
fdivs
push
stc
adc
lock
hlt
sub
and
jo
dec
sbb
fcoml
xorb
push
aaa
dec
adc
xchg
and
ja
cwtl
and
int
rcrb
push
les
enter
mov
ds
cmp
add
adc
icebp
push
test
xor
loope
insb
ret
jne
cli
jbe
stc
iret
lahf
push
rclb
lds
imul
add
mov
xor
imul
mov
hlt
adc
push
pop
mov
mov
dec
push
or
fsubs
rcl
mov
cmp
sbb
jp
push
int3
sub
sub
sub
sbbb
pop
movsb
lret
decl
int
or
jnp
push
gs
repnz
repz
or
lret
icebp
pop
jns
outsb
add
mov
pmulhw
arpl
mov
pop
pop
jg
sbb
and
bound
pop
andb
add
lods
sbb
aad
xor
test
fdivrs
inc
mov
mov
shrl
adc
jecxz
sub
mov
xchg
loopne
sub
pop
cmp
xchg
sbb
scas
int3
in
push
inc
enter
hlt
jecxz
insb
xchg
fdivs
andb
pop
outsl
lret
mov
lret
pop
jnp
aad
aam
ret
insl
adc
pop
sbb
loope
xlat
insl
mul
nop
daa
jge
adc
xchg
xchg
int
test
mov
jno
aas
jns
jb
shll
cmpsl
rol
std
jp
sub
or
in
add
xor
ljmp
sti
inc
test
fst
in
negl
stos
jb
jne
outsb
imul
mov
movsl
ja
call
mov
addr16
sbb
ja
mov
mov
dec
jle
xchg
aas
mov
mov
push
fistl
mov
jno
or
adc
pop
cltd
sub
dec
jmp
adc
shrb
or
xchg
or
mov
lods
divb
cmpsl
cmp
pop
push
test
bndldx
jp
pop
sbb
dec
sarl
mov
adc
addr16
jge
mov
test
jecxz
aas
jmp
adc
fidivs
pop
sahf
mov
in
scas
cmp
lods
mov
repz
push
dec
push
lea
repz
cmp
out
das
inc
cmpsl
sub
sbb
pop
or
cmp
and
and
lret
xor
out
sahf
fiadds
call
ret
mov
mov
push
data16
mov
cmp
rolb
fcompl
inc
repnz
ljmp
scas
pop
pop
outsl
mov
mov
cs
jae
cmp
mov
dec
scas
mov
repz
jnp
jb
inc
shll
aaa
xchg
xor
popa
xchg
mov
nop
ljmp
pop
daa
xchg
xchg
jp
stc
inc
aad
popa
cwtl
imul
rclb
xlat
stos
ljmp
movsl
sub
xchg
incb
sub
lahf
ss
push
sbb
je
and
ud2
dec
scas
inc
stos
mov
out
repz
fildl
mov
iret
hlt
pop
fadds
cs
int
clts
lret
jno
sti
inc
pusha
cmp
rorl
sub
pushf
xchg
sahf
mov
pop
loop
shlb
adc
mov
int3
iret
mov
cmp
popa
sbb
sbb
pop
dec
sub
and
push
std
in
pop
jge
sub
add
cmp
xor
dec
adc
rcr
adc
sbb
mov
fimull
xor
stos
hlt
xor
sbb
mov
ss
adc
mov
lock
mov
repz
pop
out
pop
xor
movsl
jecxz
insl
sbb
insb
sub
push
and
push
pop
std
cmc
push
repnz
dec
mov
in
add
mov
cmp
test
lds
enter
mov
sbbb
pop
mov
inc
jb
and
fdivl
fxam
lods
mov
pusha
dec
sbb
add
addl
push
and
xor
hlt
jp
bound
iret
inc
adc
push
popa
add
add
jae
jl
leave
divb
shlb
rorl
sub
xor
iret
addr16
mov
mov
xor
dec
sub
insb
mov
cmp
aaa
push
leave
leave
push
pop
out
movsb
fwait
jge
outsl
jp
mov
adcb
jle
xor
stos
rcr
push
insb
adc
hlt
adc
inc
test
mov
imul
mov
fcomip
aam
cltd
sub
jl
stc
lret
cmc
pop
inc
cmp
mov
mov
dec
int
aas
sub
sar
xor
movsb
stos
or
rcrl
sbb
nop
dec
pop
cmp
inc
dec
loopne
and
fdivs
pop
pop
js
les
push
js
push
sub
mov
hlt
cmp
add
rorb
cwtl
out
mov
inc
stc
lcall
pop
pop
inc
inc
sarb
popf
cs
stos
and
xchg
jno
mov
mov
xor
mov
ss
mov
xchg
stos
pmulhuw
in
fldcw
adc
sub
aas
jnp
ss
adc
movsl
pop
adc
imul
sarb
sbb
and
push
test
or
sub
fwait
sarl
and
cwtl
pop
int3
sahf
push
test
xchg
or
repnz
idivb
jae
mov
mov
xchg
jge
xchg
adc
mov
add
xchg
push
adc
or
xor
sub
mov
sbb
insl
or
cs
inc
pop
test
mov
repz
repz
mov
enter
cmp
xchg
int3
xchg
arpl
out
xor
mov
ds
pop
lock
xor
jns
cmp
xchg
cmp
in
or
sub
fidivrl
dec
lcall
sarb
clc
ret
add
push
pushf
mov
leave
mov
add
xor
and
push
dec
lret
dec
pop
cli
mov
stos
push
jg
xchg
pop
adc
adc
subl
mov
mov
add
or
xchg
sub
mov
pop
cmp
fnstcw
ret
je
das
loopne
push
fwait
add
out
jb
and
int
sbb
push
mov
pop
adc
rcll
fs
mov
inc
das
fwait
mov
cmp
ss
pop
ljmp
popa
mov
incl
dec
inc
fisubrl
add
pcmpeqb
divb
fwait
dec
pop
sti
cmpb
jne
ret
popa
mov
nop
xchg
add
push
xor
cwtl
mov
fdivr
jmp
cmc
and
lret
inc
outsb
popf
jno
inc
sub
sbb
mov
and
mov
jecxz
dec
les
pop
and
pop
jmp
dec
out
cmp
add
ss
mov
out
iret
fwait
mov
shrl
lret
adc
frstor
jbe
jecxz
lds
js
loope
loop
sbb
daa
out
adc
mov
filds
imul
hlt
mov
out
pop
add
lret
adc
orb
stc
aam
adc
or
std
mov
sub
jae
cmc
in
push
out
imul
ret
cmp
pop
xchg
pop
mov
mov
sti
orb
popf
jb
lret
movsb
stos
sbb
clc
sbb
inc
inc
sub
push
cmp
xorb
bound
out
jp
outsb
add
enter
fldl
ljmp
adc
xlat
gs
mov
mov
push
stos
pop
scas
in
or
lods
out
cmpsb
cmp
dec
adc
leave
mov
mov
arpl
mov
xor
fcmovbe
mov
out
mov
or
call
jae
cwtl
into
or
cltd
inc
jmp
or
mov
imulb
bound
jecxz
jne
and
lret
adc
test
adc
aad
pop
filds
fidivrl
xor
stos
and
mov
jge
test
xor
cmp
testb
icebp
icebp
inc
outsb
xor
into
inc
shll
xchg
mov
mov
int3
daa
lea
and
xor
loopne
jno
test
arpl
aas
enterw
dec
lea
and
lods
lahf
int3
mov
shrb
lds
mov
mov
mov
imul
sbb
mov
push
dec
repz
fcoml
pop
dec
das
imul
pop
repnz
adc
push
cs
lds
fists
ret
pop
insb
sub
jb
imul
je
mov
aas
in
and
add
test
xchg
cmp
stos
mov
inc
scas
sub
andl
mov
inc
pop
sbb
mulb
inc
inc
test
push
add
mov
xor
jge
ss
pop
imul
js
mov
cmp
fmulp
cmc
cltd
or
popa
adc
lret
sahf
sbb
sub
mov
push
mov
fdivp
ljmp
rcll
inc
inc
repnz
sub
clc
push
add
inc
mov
mov
xor
icebp
repnz
mov
pusha
and
test
mov
fneni(8087
mov
imul
addr16
xor
jbe
jno
jo
nop
mov
sbb
xchg
inc
dec
and
xchg
scas
les
test
add
cmpsl
push
paddusb
push
push
out
inc
jl
xor
lods
push
imul
repz
sbb
inc
ror
pop
outsl
jnp
mov
fimuls
cmc
lods
leave
subb
aad
xor
cwtl
fcomp
mov
or
lret
fldlg2
mov
movl
inc
push
mov
xchg
push
out
movsb
pop
inc
stc
sbb
mov
jo
sarl
pop
push
mov
or
loopne
sbb
mov
jns
inc
lock
jno
int
sub
inc
ss
xlat
lahf
inc
push
mov
shlb
and
call
out
sbb
and
xchg
dec
dec
les
inc
dec
cwtl
inc
adcb
cmpsl
shlb
adc
inc
sbb
jmp
fidivrs
adc
mov
xor
push
stos
fdiv
adc
popf
test
repz
arpl
imull
mov
iret
dec
scas
mov
addr16
xchg
mov
lods
mov
icebp
or
test
mov
cwtl
fs
sub
clc
enter
gs
mov
clc
outsl
hlt
frstor
rcrl
xchg
add
mov
out
in
inc
test
movsb
ds
ret
jmp
into
jnp
std
jnp
mov
mov
mov
jns
dec
stc
dec
outsb
outsl
jb
movsb
pop
aas
adc
xor
bound
outsb
scas
mov
cmp
cmc
sub
and
inc
fildl
jg
sbb
iret
rcrl
xor
pop
aaa
or
cmp
jns
outsb
inc
mov
enter
insb
testb
xlat
pushf
push
pop
dec
sbb
fldcw
dec
inc
dec
and
dec
stos
jg
insl
sub
das
pop
and
cmc
lods
ficomps
and
ret
xor
mov
cmp
pop
out
sub
lcall
add
adc
xlat
push
jg
repnz
jo
cmp
cld
test
repnz
add
ss
mov
lret
dec
int3
jl
and
ror
out
out
out
mov
push
movsl
sarb
pop
dec
inc
dec
ret
jl
sbb
test
dec
sub
flds
xchg
or
pop
mov
sbb
or
jge
aam
jge
or
push
je
fiaddl
outsl
fists
test
stos
push
cs
push
test
inc
push
xchg
out
and
adc
aam
dec
in
mov
test
stc
xchg
xchg
add
cmp
mov
mov
fwait
inc
aam
push
push
lea
xlat
mov
mov
and
pop
loopne
mov
push
and
roll
mov
and
ret
dec
pop
dec
lcall
stos
aam
loopne
xor
push
inc
sbb
hlt
scas
stos
loopne
mov
fadds
or
inc
in
ja
pop
sti
cltd
xchg
cli
mov
popf
pop
jp
sti
std
add
xor
inc
into
in
mov
jnp
fldt
ds
and
jmp
into
dec
test
or
add
add
sbb
mov
mov
sub
dec
cli
arpl
lock
sub
jo
outsl
sub
arpl
or
mov
jno
push
and
xor
mov
mov
movl
js
pop
xchg
cmpb
pop
int3
daa
mov
loope
push
push
push
push
clc
push
nop
jl
push
stc
adc
out
pop
sub
out
inc
dec
cmp
or
pop
mov
aam
dec
jnp
pop
push
xor
dec
cmp
mov
fisubl
cmpl
mov
dec
or
mov
xchg
cmp
dec
leave
imulb
fistpll
xor
or
mov
mov
mov
cmc
mov
scas
ds
int
add
pop
outsl
inc
inc
pusha
or
jae
subl
cmpsb
nop
cwtl
lcall
xchg
scas
cmp
pop
cwtl
xchg
mov
outsl
loope
repnz
push
lea
fmul
xor
xlat
ljmp
xor
xor
lods
sub
mov
xor
mov
adc
popa
test
push
cmp
add
fistpl
icebp
xchg
icebp
lcall
jns,pt
add
test
mov
jae
ret
xor
push
lahf
in
and
ficoml
ss
in
and
dec
outsb
int3
dec
movb
mov
pop
cmp
int
ja
mov
nop
inc
mov
adcb
in
int3
sub
push
les
imul
in
jbe
lcall
lds
sti
xor
imul
outsl
pop
outsl
daa
or
mov
imulb
lret
pop
in
dec
push
imull
sub
ss
adc
dec
dec
xchg
ds
outsl
rcrb
shll
xor
adc
jl
ret
repnz
mull
loop
or
loopne
mov
add
push
jmp
add
int3
lods
sar
out
adc
movsb
pxor
mov
pop
jae
dec
in
adcb
push
js
fwait
insb
enter
lds
sbb
hlt
pmaxub
mov
hlt
sub
lret
cmp
inc
dec
adc
sub
and
out
lcall
mov
mov
pusha
mov
cs
sub
sbb
xchg
outsb
cmp
rcrl
or
xchg
adc
pop
in
xchg
pop
mov
sahf
inc
pop
ds
ja
scas
dec
test
aam
or
flds
xchg
cmp
push
mov
and
inc
aas
imul
xchg
ret
test
and
lea
call
jg
pop
add
arpl
testb
out
cltd
rclb
outsl
xor
test
xchg
mov
shll
imul
lods
gs
add
cmpxchg
mov
sub
push
cmp
test
out
and
sbb
sbb
and
movsb
push
push
into
shr
xchg
ss
push
xchg
in
pop
mov
imul
gs
daa
sbb
in
mov
xchg
or
add
pop
cmp
icebp
adc
loope
cmp
call
xor
rcl
mov
add
insl
lcall
mov
pop
mov
sarb
scas
push
nop
testb
bound
add
popf
xor
dec
fdivr
std
xchg
adc
dec
sbb
xchg
sahf
mov
fldenv
sbb
jmp
lods
xchg
sub
clc
dec
test
pushf
orl
push
fdivl
insl
call
cmc
mov
add
aaa
loope
jge
inc
pop
cmp
test
xor
dec
cmp
adcl
xchg
lock
mov
andl
jbe
cmp
pop
or
in
mov
mov
je
and
in
lret
dec
jb
push
outsb
inc
ds
movsb
dec
jnp
cltd
mov
xchg
test
inc
xlat
clc
fstpl
pop
or
xchg
movsl
sub
mov
and
jp
and
loopne
mov
xchg
mov
sbb
push
and
pop
les
lock
sahf
pop
add
cwtl
cmp
mov
in
dec
int
negl
pop
adc
mov
or
jp
aas
rolb
rclb
add
addb
sbb
shll
mov
and
sbb
fsubp
mov
bound
or
rcrb
stos
in
push
push
cmp
xchg
inc
sub
mov
cltd
mov
mov
cwtl
pop
out
mov
xchg
mov
or
xor
adc
insl
xor
mov
sub
jecxz
mov
add
jecxz
adc
push
andb
sub
push
fildl
sti
push
inc
int3
cs
negl
mov
popa
add
add
jmp
lds
mov
lcall
jmp
shrl
push
in
xchg
xor
dec
aam
and
jae
stos
shrl
jge
and
lds
imul
pop
dec
jnp
inc
mov
and
sub
fwait
sbb
divl
mov
sub
jo
add
test
xlat
test
mov
cmp
xor
dec
test
dec
inc
es
push
int3
pop
mov
jg
loopne
bound
cmp
jmp
rcr
popf
xchg
movsl
test
call
call
and
jo
ret
jne
push
cmp
aam
mov
aam
lds
js
push
mov
jge
pop
aas
lds
hlt
not
jmp
jg
gs
ds
push
movsb
inc
xchg
cmc
xchg
aas
push
mov
ret
jbe
stos
mov
xor
sbb
insb
and
xchg
and
loope
pusha
jmp
andl
push
loop
je
mov
out
adc
icebp
mov
cmpsl
pop
jns
imul
inc
out
loope
mov
dec
sbb
or
stos
push
repz
mov
aad
fdiv
sub
cs
xor
push
stos
dec
loop
in
arpl
aas
in
mov
aaa
jne
inc
mov
or
push
push
movsb
jnp
out
lods
out
sub
faddl
cmp
rcll
adc
mov
xor
jae
mov
cmp
jne
push
lret
enter
sub
dec
add
pop
pop
xor
push
jg
xchg
or
and
push
add
inc
push
inc
mov
andl
push
lret
mov
or
iret
in
xchg
mov
mov
mov
std
leave
out
mov
mov
xchg
gs
xor
fmull
cmp
outsb
mov
test
cmp
jnp
scas
lods
pop
sahf
icebp
pop
dec
fwait
sarb
icebp
in
test
mov
movsb
test
adc
mov
cmp
rolb
cmovnp
fdivrl
fs
jecxz
fnstenv
es
shlb
adc
mov
mov
test
pop
and
sbb
loop
mov
lret
in
shr
out
loop
adc
sbb
sbb
mov
outsb
add
aad
filds
aad
jne
shr
cmpsb
dec
xor
cmpsb
jg
adc
xor
add
loopne
dec
push
sbb
aas
pop
test
loope
or
mov
mov
out
dec
and
aas
push
inc
shrl
sahf
or
repnz
sar
fs
fnstcw
bound
cmp
popa
pop
dec
xlat
xor
mov
dec
popf
ret
add
daa
das
pusha
rorl
pop
pop
sub
xchg
insb
movsb
dec
cmpsb
jbe
or
addr16
push
push
repnz
outsb
mov
jbe
loope
jmp
jo
push
mov
je
mov
xchg
adc
add
int3
add
daa
fbstp
sub
jmp
or
add
sub
std
stos
jnp
jae
xor
test
push
add
rcl
ret
cld
fcmovnb
inc
lods
sub
push
jne
mov
cltd
leave
push
mov
jae
or
push
pop
cwtl
ret
and
push
clc
pop
dec
fdivrs
sarl
jb
mov
sahf
pushf
insb
in
jae
andb
in
pop
cwtl
push
popf
test
xor
mov
ljmp
fwait
pop
or
and
mov
sti
loop
xchg
fcomp
jp
lret
jo
loope
cmpsb
fdivrl
inc
insb
lahf
mov
jno
mov
push
outsb
ss
sub
les
test
pop
jp
dec
and
sbb
jae
rcll
add
out
mov
sub
bswap
and
mov
mov
iret
cmp
or
push
jle
in
test
adc
loop
fucomp
or
inc
adc
adc
call
xchg
push
and
or
mov
sbb
fxam
xchg
sbbb
sti
pop
jp
fxch
pop
jo
fstp
lcall
int3
cltd
adc
mov
std
xchg
bound
or
jmp
cmp
xor
nop
jge
lret
and
push
pusha
out
pop
jae
aam
mov
push
lret
inc
ficomps
scas
inc
aas
movsl
fbstp
movsb
xchg
dec
sahf
incl
add
xchg
add
sub
shl
popa
jo
pop
lcall
lcall
mov
ds
cmp
mov
dec
adc
pop
daa
imul
je
push
in
imul
ljmp
xchg
incb
iret
enter
mov
pushf
fildll
pusha
scas
ljmp
test
mov
push
sub
xchg
inc
mov
dec
mov
jge
popa
jne
xor
les
jl,pn
sbb
jge
pop
in
dec
xchg
cwtl
cld
push
sbb
loopne
pop
cmpsb
int
imul
stc
cmp
imul
dec
ds
push
mov
lea
cltd
inc
mov
ret
aad
cmpsb
lcall
dec
and
inc
adc
xchg
negl
popf
push
mov
adc
into
xchg
sub
aam
aas
negb
out
push
push
xor
and
adc
fadd
test
cld
into
movsb
sub
out
push
jl
outsb
mov
rcrl
pop
add
in
into
mov
pop
xorl
and
pop
xor
inc
cmp
pop
add
mov
push
inc
cmpsb
and
int3
stos
stc
es
jl
add
and
inc
pop
je
rcrl
arpl
popf
push
repz
xor
add
sub
adcb
data16
imul
ret
lret
xor
movsb
adc
pop
xorb
pushf
pop
xchg
push
fs
fisttpll
enter
sti
xchg
jge
addb
mov
hlt
xchg
mov
and
cmp
outsl
fisttps
popa
lods
mov
xor
pop
push
jo
xchg
or
rolb
xor
js
dec
outsb
fbld
sbb
pop
dec
or
cmp
mov
enter
and
loop
subl
inc
lds
mov
or
aam
xchg
sbb
inc
inc
int3
adc
jns
mov
iret
aaa
repnz
repz
inc
test
into
pop
or
xchg
fimull
scas
lret
mov
xlat
xchg
andb
repnz
push
popa
dec
sti
pop
jnp
mov
jo
shrb
inc
add
mov
in
cmp
mov
or
outsl
ds
jmp
nop
sarb
mov
pop
lods
arpl
clc
and
or
cmp
adc
sbb
dec
aam
xchg
fcmovnu
cmp
loope
adc
xchg
test
inc
in
test
and
cmpsb
inc
dec
scas
mov
daa
cmc
sti
js
jg
mov
jne
sub
jne
pushf
dec
xor
test
shrl
and
cs
fs
and
lods
sub
or
mov
xchg
dec
repnz
inc
pop
aaa
cs
xor
mov
lret
or
dec
xor
xor
push
lret
call
mov
imul
dec
lock
jle
mov
push
pop
into
addr16
cmpsb
pop
ss
push
ljmp
dec
neg
ljmp
mov
das
test
sub
in
jbe
jns
sub
mov
mov
cmp
mov
pop
pop
jns
mov
dec
add
sub
sub
lahf
sti
cmc
mov
dec
jbe
mov
std
lret
icebp
aas
aad
jns
inc
arpl
stos
ficoms
xchg
add
dec
push
ret
or
imul
rcrl
pop
clc
sub
addb
lock
stos
push
pop
dec
jle
pop
cli
mov
inc
imul
cmp
insl
xchg
mov
or
jns
mov
pop
stc
xchg
jge
movb
push
sti
movsl
iret
jmp
ss
add
dec
outsl
sub
test
and
pop
cwtl
aam
popa
mov
test
or
fcmovnb
dec
iret
cmpsl
repz
imul
notb
cltd
mov
or
in
in
push
xchg
mov
add
cmp
popa
and
push
incl
sub
scas
push
add
data16
xor
mov
das
sub
and
jbe
cmp
mov
fiadds
push
xchg
insl
jle
test
xchg
clc
leave
cmpsl
jge
loopne
mov
repnz
test
pop
ds
dec
mov
imul
gs
stos
into
shll
sbb
pop
fildl
or
pop
xchg
pop
xor
pop
subl
pop
cmp
or
nop
sub
mov
inc
pop
push
ret
jne
data16
bound
xchg
mov
xchg
and
pop
shlb
sbb
icebp
mov
jbe
push
push
pop
mov
stc
test
test
lods
inc
sub
iret
sbb
data16
stc
mov
xorl
scas
js
cwtl
inc
mov
jo
cltd
bound
adc
pushf
stos
lcall
mov
lock
add
inc
mov
jns
xchg
fsubl
and
adcb
scas
sbb
out
addr16
push
repz
mov
popf
leave
out
int3
imul
jmp
inc
lock
xchg
stos
sbb
sub
fwait
pop
stos
rolb
fbstp
bound
cmpsb
cltd
fdivl
mov
lahf
scas
subl
pop
jl
dec
out
mov
adc
cmp
mov
std
jns
and
mov
xchg
arpl
insl
jnp
mov
test
cld
or
insb
add
push
add
ja
lcall
shlb
mov
icebp
adc
cmc
xor
call
mov
imul
adc
inc
adc
jp
bound
stc
pop
cs
or
mov
cmc
data16
or
adc
jmp
mov
jo
mov
dec
xchg
gs
add
rcrl
push
sahf
mov
imul
mov
cmp
loope
int3
mov
jb
xor
and
lcall
bound
out
cmpsb
add
in
dec
add
outsl
in
cmpps
inc
adc
cld
adc
cmp
mov
aad
addr16
mov
sub
imul
mov
adc
cli
and
lahf
push
adc
sarb
add
add
inc
movsb
jl
push
jge
cli
cltd
and
inc
add
cmpb
out
jo
in
shll
movl
insb
cmp
mov
ds
push
subb
das
in
mov
fs
testl
xor
and
sbb
fmuls
insl
test
adc
xchg
mov
cmpsb
mov
les
imul
enter
int3
int3
mov
rorl
mov
xchg
mov
repz
add
lahf
jo
push
dec
sub
inc
inc
ds
les
mov
or
mov
adc
adc
mov
mov
stos
xorb
lcall
push
jae
xor
ret
xchg
stc
scas
rol
lock
push
fcompl
push
add
lcall
mov
add
lock
jae
push
test
shlb
push
fwait
mov
out
cld
and
mov
sbb
repnz
push
dec
insb
mov
dec
cmp
xchg
jnp
and
sbb
pop
cltd
inc
shll
adc
mov
imul
int3
push
mov
push
dec
cwtl
enter
mov
ret
dec
xor
imull
inc
or
pusha
jge
adc
shlb
mov
xor
and
aaa
cmpb
dec
xchg
or
clc
iret
pushf
mov
lods
in
push
loopne
sbb
xor
inc
pop
cltd
adc
mov
dec
dec
int3
or
cmp
xchg
pop
jge
lea
sahf
adc
aad
pop
mov
bound
cmp
lahf
test
mov
mulb
pop
cmpsl
fidivrl
fwait
outsb
cmp
jg
js
sti
pop
jnp
loopne
lods
xchg
sub
outsl
jecxz
sysenter
add
cli
shr
aaa
push
mov
adc
bound
pop
jl
sub
push
mov
inc
or
or
inc
popa
mov
jne
popf
shlb
int
sub
cmp
mov
js
hlt
inc
in
popf
xor
hlt
outsl
daa
popa
loope
stc
pop
lods
xor
inc
dec
xchg
mov
jg
insb
jns
test
adc
mov
mov
mov
xchg
sub
dec
lds
in
or
addb
repnz
sbb
mov
pop
mov
cmp
pushf
clc
out
cmpsl
cwtl
stos
pop
insl
mov
sar
sbb
mov
mov
mov
add
ljmp
push
sbb
daa
iret
inc
ss
xchg
iret
outsb
outsl
cltd
pop
add
pop
sti
cmp
nop
or
adc
jne
movsb
cld
push
or
mov
shll
pushf
xorl
pop
push
dec
incl
rcl
ret
mov
in
arpl
lods
fdivrs
push
jbe
daa
add
je
fcoml
call
push
aad
cltd
gs
xchg
pop
negb
jb
inc
sbb
stc
or
loop
jne
mov
les
xor
dec
into
cwtl
lret
mov
les
adc
fs
clc
aas
lret
pushf
sub
fdecstp
stos
push
outsb
xlat
add
pop
and
es
push
shl
push
test
call
cmp
jge
and
lret
shll
cmp
jge
mov
fistpl
icebp
les
out
popa
pop
xchg
jmp
pop
xchg
mov
dec
sbb
push
add
ja
int3
xlat
push
add
xor
insl
or
out
rorb
scas
inc
dec
inc
bound
sahf
add
adc
test
pop
mov
idiv
inc
dec
cmp
pop
addr16
sub
jo
mov
insl
imul
and
cmp
pushl
cld
mov
lods
mov
pop
imul
jg
bound
in
xlat
sbb
jae
sahf
into
cld
fwait
ss
sbb
imul
sub
push
and
sub
scas
xor
pop
push
dec
xor
roll
or
scas
mov
mov
cld
xlat
lock
cmpsl
cltd
test
jb
push
xor
xchg
jmp
dec
data16
add
mov
mov
ret
adc
ret
sub
fists
jo
sub
sbb
add
arpl
add
and
sbb
daa
loope
cmp
popf
stc
shl
popa
pop
adc
jl
adc
sarb
sub
test
pop
pop
sbb
pop
or
arpl
in
xor
divl
pop
and
push
inc
stos
ja
daa
ja
nop
fdivrl
jbe
mov
xchg
mov
outsb
add
adc
mov
push
push
or
movl
xlat
popa
sbb
add
les
mov
test
fldl
add
int
js
add
shrb
push
jle
mov
pop
jmp
xor
popa
dec
out
mov
movsb
popf
xor
jmp
stos
add
sbb
shl
cmp
pop
cmp
sbb
jl
sar
xor
out
icebp
or
and
cmpsb
adc
fsts
orb
push
out
notl
push
ss
pop
jns
fcomps
aaa
or
mov
and
jecxz
push
rol
cmc
dec
inc
das
mov
add
sub
cmp
xchg
dec
add
xchg
or
sub
lcall
push
je
mov
ret
stos
mov
repz
pusha
mov
roll
imul
jge
jmp
loop
mov
call
push
outsl
leave
es
fsubl
push
sub
shr
aad
dec
jg
fldenv
loop
lea
pusha
fld
int
jbe
sarb
daa
inc
test
push
scas
inc
push
hlt
lds
jp
mov
test
add
xor
inc
sbb
pop
ss
lods
cmp
jle
xor
mov
mulb
pop
sbb
ss
mov
dec
out
lods
sbb
sbb
sub
push
arpl
cmp
or
out
sbbb
jge
inc
adc
in
xchg
inc
popa
sub
mov
movsb
cld
push
js
mull
insl
and
xor
mov
outsl
inc
inc
or
insl
bound
xchg
inc
lods
cmp
stos
rcrb
inc
mov
cli
jp
bound
imul
xor
scas
mov
aas
sbb
outsb
dec
je
pop
push
test
adc
mov
jecxz
inc
stc
inc
pushf
and
lret
sbb
cmpsl
jp
push
mov
push
cmp
fstpl
fwait
inc
sbb
lgs
or
pop
push
stos
cmp
mov
sub
lret
adc
fists
stos
add
sahf
sbb
fcoms
and
mov
cmc
sbb
loopne
xchg
leave
popf
push
daa
rcrl
popf
dec
int
adc
aam
inc
and
out
insl
sbb
lret
rolb
inc
ds
test
in
les
mov
pop
ja
and
inc
pop
lahf
lods
repnz
lcall
xchg
dec
add
xchg
filds
jnp
movl
hlt
rorl
aam
stc
pushf
pop
sub
push
aad
and
scas
lret
push
adc
dec
loope
sbb
cmpsb
jb
lcall
pop
xor
test
movsb
mov
sbb
mov
mov
in
and
mov
ljmp
pop
push
cmp
aas
in
aam
add
jo
xchg
sub
xlat
or
xchg
jle
rcll
cs
stos
dec
pop
xchg
jle
add
fildll
adc
movsl
jae
xor
lods
mov
cmp
jmp
or
pop
leave
in
push
dec
gs
xor
aad
cmp
lods
xchg
dec
jb
push
ficoms
rcr
rclb
sub
test
adc
aam
xchg
jmp
pushl
jo
inc
shl
insb
outsl
movsb
scas
jnp
sub
dec
push
jo
jo
push
sbbb
xor
mov
and
dec
rol
mov
mov
mov
andb
sbb
rorb
jb
pop
icebp
je
cmpsl
cwtl
je
xchg
jns
dec
xchg
mov
stc
or
out
fisubl
and
inc
or
call
push
push
jp
sarl
mov
mov
mov
in
out
mov
cli
test
ja
popf
bound
subl
mov
es
pusha
mov
dec
scas
clc
fstl
mov
hlt
les
adc
mov
pop
enter
push
xchg
inc
sub
xchg
sbb
enter
adc
xor
jmp
jecxz
stos
ret
loopne
push
out
jae
dec
pop
es
inc
add
pop
jecxz
xor
cli
pusha
xor
push
cli
sbbl
inc
fwait
adc
lret
xchg
add
mov
inc
xchg
pop
in
xchg
cwtl
incl
xor
fs
aaa
xor
mov
xchg
lea
and
call
cmp
and
xchg
ret
lret
clc
push
xchg
out
iret
js
mov
and
mov
xchg
push
lock
mov
daa
outsl
jle
mov
movsl
sbb
test
dec
cmp
mov
data16
lods
mov
lcall
cltd
push
and
fwait
or
sub
aam
pop
xchg
cwtl
rcrl
inc
adc
testb
loopne
cvtdq2ps
xchg
outsl
pop
xchg
cmc
pop
cmp
sbb
cmpsb
adc
in
cld
in
test
cmp
add
fistps
inc
arpl
mov
adc
dec
addb
lock
idiv
in
cmp
cld
mov
enter
repnz
mov
daa
push
daa
icebp
jmp
inc
fsubrs
mov
inc
test
mov
push
pop
clc
mov
in
out
call
mov
mov
sub
enter
out
or
mov
ds
dec
and
int3
aam
push
fsubr
inc
mov
add
jmp
movsb
repz
pop
jb
push
les
jmp
push
pusha
inc
and
jge
sbb
adc
cmp
mov
hlt
dec
push
popa
imul
mov
push
xlat
cmp
mov
jmp
fxch
out
mov
das
pop
lcall
enter
push
gs
aam
push
pushf
daa
push
dec
and
pop
adc
shlb
testl
push
popfw
lds
arpl
push
jno
imul
or
outsb
fs
int
gs
jbe
mov
pop
push
mov
sbb
aas
mov
or
dec
inc
into
daa
jl
pop
mov
fs
cld
rcll
xchg
pop
jmp
jb
and
divb
into
popl
sub
jnp
push
jns
out
outsb
cmc
loopne
insl
out
jns
or
push
pop
lods
mov
sbbl
sbb
pop
cltd
loope
iret
mov
aaa
fdivrl
ds
xchg
adc
or
adc
and
lret
jecxz
adcb
inc
sbb
push
and
push
cwtl
pop
lret
mov
sub
fldpi
orb
ja
sbb
daa
mov
mov
or
mov
push
ljmp
and
ret
negb
inc
in
ja
lds
movsl
aad
cmpb
mov
push
cli
inc
inc
dec
mov
aas
fstl
lea
int
imul
pop
adc
add
xor
mov
js
or
push
mov
sbb
out
or
fadds
icebp
in
dec
test
fldenv
ja
xor
push
or
sub
and
or
and
mov
repz
sbb
and
jmp
or
inc
sub
push
aaa
test
cmp
mov
inc
and
addl
cltd
lods
jg
dec
and
and
subb
mov
stc
adc
push
inc
lods
mov
popa
and
cmp
sbb
xor
out
xor
jl
cs
ljmp
cmp
jecxz
adc
popf
int
cli
mov
jne
test
mov
mov
pop
frstor
icebp
dec
loop
popf
repnz
in
out
mov
test
xor
push
scas
push
cmpsb
mov
or
repnz
add
cli
dec
ljmp
int
sarb
cltd
in
shlb
popl
pop
push
pop
jecxz
je
test
mov
popa
inc
int
pop
lret
js
xchg
mov
add
sti
xchg
push
pop
nop
dec
ret
repz
xor
and
insl
insl
lret
in
xchg
movsb
out
ljmp
pop
aas
push
push
in
enter
add
in
inc
jnp
pop
adc
lods
pop
ds
shlb
orb
cs
out
stc
and
iret
fidivrl
cmovno
dec
lock
in
sub
ret
sbb
mov
shlb
or
jmp
and
repz
pop
movsl
cmp
jae
mov
jecxz
sub
sti
or
outsb
cwtl
mov
cmp
push
xor
pop
fcomps
mov
rcll
das
ret
or
ds
cmp
add
lcall
pop
lahf
lret
mov
dec
jns
or
mov
enter
sbb
dec
xor
push
stc
mov
inc
aam
adc
shlb
push
sti
or
push
jmp
or
mov
outsb
jl
dec
sub
or
cmp
int3
popf
or
inc
out
jl
addr16
xchg
inc
gs
rcrb
aas
mov
in
shl
pop
inc
dec
lods
xchg
fsubl
or
mov
jo
ljmp
imul
push
fcoms
xlat
and
lcall
loope
rcll
cmp
or
lods
bound
cmpsb
xorl
jb
nop
xor
mov
cmp
mov
lea
push
mov
outsl
mov
data16
and
loope
inc
cltd
into
sbbb
sub
adc
fwait
repnz
popf
lret
pop
fcomi
pop
in
lret
pop
jno
and
cltd
pop
imul
mov
and
lea
cmp
xchg
aaa
in
mov
jg
jp
and
mov
mov
aas
jle
sub
sarl
adc
xor
inc
scas
repnz
add
shlb
fidivrs
cmpl
stos
jle
pop
cmp
inc
rorl
in
aas
imull
lea
out
loop
lcall
mov
loope
in
add
js
cmp
jno
ljmp
push
rolb
push
addr16
mov
xlat
cld
add
mov
div
cld
test
dec
pop
sbb
sbb
pop
sahf
out
jmp
inc
xchg
out
or
rolb
jnp
jae
adcb
incl
stos
inc
mov
aas
les
repz
repnz
mov
push
in
lods
in
in
mov
test
mov
lahf
xchg
mov
adc
push
fcmovnbe
lock
rcrl
shll
lea
mov
add
mov
add
loope
xor
push
push
repz
aas
lods
push
sarl
test
les
adc
cmp
inc
repnz
push
dec
hlt
jo
je
aas
pop
inc
leave
or
or
push
neg
mov
add
pop
jl
ret
sarl
xor
mov
xchg
push
int
push
and
lock
sti
cli
sbb
idiv
mov
in
clc
hlt
jae
cmp
mov
loopne
ret
cwtl
rclb
ja
pusha
mov
sti
aad
pop
je
xlat
push
ror
or
or
and
mov
xor
pusha
mov
aas
xchg
mov
outsb
popf
add
inc
stc
dec
fcoml
test
mov
xor
cmp
sbb
cmpsl
pop
jp
inc
jnp
lds
xchg
push
ds
mov
xor
inc
test
add
into
aad
adc
dec
inc
mov
and
iret
testl
add
out
cmp
xor
int
inc
sub
mov
sbb
mov
rol
popa
jnp
jecxz
outsl
sub
ljmp
sub
cltd
out
or
stos
add
stc
dec
ret
cmp
dec
cltd
xor
add
int3
sub
cli
pop
jae
mov
hlt
cmp
js
in
dec
pop
icebp
adc
stos
and
push
inc
pop
stos
test
aaa
xor
xlat
or
and
nop
xlat
js
int3
push
mov
fcomi
push
xchg
repz
incl
mov
adc
xor
popa
test
fsubs
dec
pop
aaa
pop
pop
gs
scas
jns
push
enter
inc
jb
pop
adc
lcall
movsb
outsb
sbb
mov
mov
dec
cltd
mov
jns
mov
lock
fnstenv
cmc
mov
ret
pop
mov
popf
es
rclb
ljmp
cmp
sarb
pop
sub
lcall
mov
pop
sbb
mov
lods
xchg
xor
sar
xor
pop
iret
pop
push
or
mov
dec
arpl
pop
std
sti
fimuls
xlat
cwtl
daa
aam
dec
pop
pop
add
insl
mov
mov
stos
sbb
mov
lea
mov
mov
mov
fmull
fildll
jb
mov
inc
aad
ds
fdivr
divb
mov
imul
jbe
adc
inc
into
or
jb
jno
lds
sub
xchg
ret
pushl
in
loope
adc
cmpsl
mov
xor
cmpps
pop
cmpsl
push
test
and
xchg
leave
sarl
jmp
out
test
adc
cmc
pop
cmp
dec
push
and
jnp
and
dec
sbb
push
rcrl
stos
int3
subl
test
pop
mov
push
sbb
push
shll
or
vpshrdw
cmp
mov
scas
aas
mov
xor
push
jbe
inc
cmp
popf
xchg
test
fistpl
xrelease
testb
sbb
push
pop
fistl
lret
cmp
or
inc
enter
sub
add
sbb
add
sbb
pop
xchg
aad
and
push
push
add
pop
imul
mov
imul
mov
aas
push
xlat
and
out
andb
pop
mov
mov
adc
push
std
hlt
ss
lea
add
loope
or
enter
mov
mov
push
lahf
dec
das
mov
mov
in
daa
ljmp
and
rcl
sub
bound
sbbl
adc
out
xchg
push
stc
mov
cmpsb
sbb
les
sub
pop
popa
mov
addl
add
mov
fdivp
out
aas
xchg
adc
inc
mov
mov
mov
fs
fwait
pop
lcall
in
or
or
dec
ja
mov
mov
pop
lods
sbb
jne
xchg
ja
xchg
xor
push
jl
mov
lods
insb
xor
rcrl
jp
rcrl
cmp
dec
push
dec
pop
bound
js
scas
adc
cmc
push
nop
xchg
jne
jbe
or
adc
psrld
clc
cmp
mov
pop
gs
pop
in
shll
fisttpll
clc
sbb
fisubs
jnp
arpl
adc
cmp
pop
ret
pop
pop
cmp
pop
push
std
jns
ficoml
add
xchg
dec
cltd
mov
sub
fistpll
xor
aad
pop
push
adc
lea
pop
jnp
mov
lds
sbb
fstps
mov
lods
inc
push
sbb
jns
add
sub
pop
insb
push
or
int
push
ljmp
sub
dec
mov
jo
clc
in
mov
push
push
xor
jg
cmc
mov
mov
push
js
test
xor
nop
dec
fbstp
iret
arpl
pop
ds
js
bound
cwtl
loope
cmc
fidivs
les
insb
call
outsl
dec
shl
inc
repnz
fidivrl
xchg
sbb
repz
pop
push
loope
xchg
xor
in
daa
sbb
mov
shl
test
sbb
sub
dec
sub
push
xchg
dec
stos
inc
mov
mov
aaa
adcb
in
fcoml
movsb
xchg
xchg
adc
cmp
sub
addr16
scas
add
in
pop
pop
out
xchg
mov
push
xchg
add
aad
jbe
ds
jbe
int3
pop
sbb
pop
pusha
int
test
sahf
icebp
sbb
test
mov
outsb
pop
cmp
push
test
rorb
scas
icebp
cmp
hlt
pop
mov
inc
mov
insl
push
xor
shll
stos
add
xchg
xchg
popf
push
jnp
dec
in
aaa
mov
inc
test
cltd
dec
loop
mov
cltd
sub
and
lock
mov
xor
cmpsb
adc
leave
lods
fcomip
xchg
xor
sub
sbb
fiaddl
test
mov
or
rol
insl
jl
lea
addr16
or
dec
aas
shlb
loopne
xor
or
and
mov
xor
push
pushf
jbe
dec
nop
hlt
mov
mov
sbb
inc
push
dec
mov
mov
mov
ja
outsb
push
rorb
scas
mov
mov
mov
ret
sub
je
sub
hlt
sub
fwait
clc
push
iret
jmp
in
and
xchg
pop
fsub
sarb
cld
xorb
aad
sti
push
enter
mov
mov
or
fisubs
or
push
adc
std
push
cltd
mov
jle
inc
pop
inc
pop
mov
orl
fnstcw
mov
fstps
loopne
sbb
dec
add
ljmp
pop
stc
cs
ja
jecxz
sahf
loopne
xor
mov
frstor
aaa
dec
jnp
fisubrs
dec
inc
inc
mov
inc
sub
in
mov
mov
mov
testl
push
sahf
divb
push
hlt
pop
fisubs
sub
push
movsl
fabs
orps
mov
xor
jnp
adcl
push
adc
mov
cmp
cltd
add
and
sub
lret
mov
jecxz
ret
inc
iret
jecxz
test
cmpb
xor
icebp
cli
fnstsw
mov
push
xor
pop
pop
scas
sub
pop
outsl
mov
and
nop
int3
mov
aaa
rcll
sti
pop
sub
sbb
int3
lock
xor
or
cmp
jae
and
lea
inc
in
and
cmpsb
sub
xchg
out
dec
out
pop
pop
shrl
out
mov
xchg
xchg
pusha
mov
sub
fnstcw
xchg
jp
loop
lcall
adc
ds
stos
sti
sbb
fildl
movsl
scas
jecxz
cli
cmpsb
cmp
or
adc
add
xor
test
cmp
stos
hlt
jae
stos
lcall
je
lock
adc
aaa
mov
sub
jle
ljmp
lahf
cmc
loop
jge
cs
jmp
movsl
test
mov
daa
pop
adc
jbe
stos
xchg
shr
pop
lds
xchg
and
sub
sbb
sbb
and
and
jp
inc
add
jne
xchg
scas
lret
pop
sub
sub
fmull
pop
cs
xchg
inc
lahf
dec
jmp
insl
std
jmp
xchg
pop
jb
cwtl
xchg
mov
sub
pusha
mov
aas
lcall
mov
cmpsb
mov
in
outsb
incl
jg
xchg
xor
add
jb
mov
mov
mov
and
sarl
or
out
xchg
add
xor
jb
mov
inc
in
into
xor
mov
rcll
xchg
mov
inc
js
jle
xchg
pushf
push
pop
add
push
aaa
stos
mov
inc
shl
ds
inc
xchg
or
mov
cmp
xchg
mov
addr16
mov
or
add
lods
mov
into
cmpsl
push
les
sarb
scas
pop
stos
dec
push
and
and
or
jge
sarb
rorb
rcrb
scas
dec
out
dec
mov
imul
in
xchg
inc
push
jmp
jp
dec
add
push
mov
outsb
mov
cwtl
push
out
push
cmp
sarb
push
icebp
bound
mov
mov
sub
mov
cli
fucomip
push
loope
or
lods
nop
rorl
mov
and
popf
mov
mov
repnz
fucomip
inc
mov
movsl
pop
dec
dec
cmpl
mov
inc
pop
sub
aam
inc
xchg
mov
mov
lea
jno
xchg
jbe
inc
movsl
sti
sub
std
cli
mov
addr16
lahf
ret
fstl
adc
inc
inc
pop
out
mov
in
mov
xor
subb
xlat
pop
pusha
sbb
and
hlt
push
ss
jo
pushf
stc
pop
add
sub
into
push
stos
loope
fmull
sub
and
push
fisttpll
and
xchg
sbb
cmpsb
mov
push
mov
push
ret
adc
in
int3
sahf
fdivrp
sar
xchg
inc
clc
lea
pop
push
outsl
int
mov
jns
ljmp
mov
add
add
lcall
jne
push
or
add
out
lods
daa
push
adc
xor
ljmp
cld
cli
daa
mov
aam
jmp
shlb
sbb
pop
adc
mov
or
mov
loopne
push
scas
fstpt
sbb
sbb
scas
out
scas
imull
sub
adc
dec
pop
xchg
lds
dec
push
jns
fs
mov
sbb
lods
test
cmp
stos
repz
sbb
lds
pop
fwait
inc
push
push
push
test
data16
gs
outsl
scas
pop
pop
loopne
push
sub
or
iret
or
adc
ja
cwtl
xchg
xchg
dec
add
bound
scas
sbb
mov
aaa
add
xor
int
mov
scas
das
pop
into
dec
pushf
jecxz
pushl
in
pusha
sub
inc
mov
push
rcll
cmp
bound
sbb
jmp
clc
cmp
mov
rcrl
pop
popf
push
test
lods
xchg
ljmp
pop
push
push
ffree
lock
loopne
dec
lods
fsubs
or
adcb
dec
or
aam
data16
arpl
loopne
or
insb
dec
divl
mov
aas
dec
push
jmp
sahf
cmc
leave
popf
add
inc
sbb
stc
adc
jmp
pop
jg
das
inc
iret
adc
pop
jno
xchg
in
scas
stc
orl
jb
mov
test
push
sbb
adc
mov
xchg
cmp
pop
pop
jmp
inc
xchg
iret
mov
sbb
jb
stos
or
mov
mov
scas
pop
jno
aad
dec
lcall
clc
pop
aas
xchg
aaa
outsb
pop
inc
aam
lret
rcll
ja
into
arpl
mov
mov
add
lds
xchg
push
or
and
adc
xchg
sbb
adc
cwtl
add
lea
pop
jmp
inc
inc
imul
xchg
and
add
incb
adc
jge
mov
leave
dec
imulb
notb
inc
mov
sub
inc
sub
stos
frstpm(287
ret
mov
mov
inc
pop
test
sub
push
sub
scas
cli
sahf
sahf
inc
addb
loope
fbstp
jmp
cmc
pop
daa
addr16
out
or
xchg
sub
hlt
dec
aaa
in
out
pushf
push
xchg
cli
sbb
inc
add
hlt
cmp
add
mov
pop
jecxz
mov
rcrl
sub
pop
movsl
scas
stos
imul
movsb
enter
shl
xchg
scas
lahf
cld
xchg
mov
jno
mov
inc
subl
scas
cmp
sbbb
mov
fcmovnu
push
mov
imul
xchg
out
outsl
sub
ds
rclb
outsl
xor
das
xchg
mov
gs
das
bound
idivb
and
mov
aam
dec
mov
pop
pop
insl
mov
in
clc
lret
mov
or
repnz
adcb
ret
filds
pop
mov
mulb
sub
inc
sbb
aad
mov
dec
iret
jle
ja
add
sti
jnp
cmpsb
mov
dec
stos
ja
js
inc
adc
xchg
jo
jg
jns
xchg
fcom
stc
sub
xchg
xor
or
clc
pop
mov
fnstenv
pop
arpl
fwait
mov
fs
es
jmp
jge
xchg
add
imul
outsb
in
adc
push
pop
test
dec
cmp
mov
add
cli
add
rorb
pop
push
xchg
push
sub
faddl
xor
or
fstps
shrb
inc
sahf
movsl
fidivrs
mov
cmp
mov
push
fs
xchg
das
jecxz
add
xor
into
out
xchg
les
jbe
inc
popa
lahf
push
dec
jnp
lods
popa
dec
rclb
mov
mov
mov
scas
inc
push
xchg
movsl
out
loopne
push
lods
fs
xor
int
cwtl
icebp
jae
xor
mov
shll
xlat
leave
test
pop
lea
outsl
xor
jge
push
inc
and
jmp
xchg
xor
dec
push
rclb
jo
mov
sub
lds
cmp
jp
fwait
pop
mov
js
test
dec
lea
sub
ret
pop
xor
inc
pop
jge
dec
dec
pushl
push
adc
leave
arpl
mov
cltd
pop
xchg
and
lods
dec
subl
in
fistl
nop
pop
test
hlt
mov
cmp
ret
mov
cmp
sub
mov
mov
adc
xchg
pushf
xor
nop
mov
dec
xor
stos
sbb
add
sbb
add
inc
aad
cmp
inc
jle
out
out
divb
rol
pushf
popf
or
bound
xlat
mov
test
clc
fmul
rclb
testb
in
and
sbb
cld
movsl
xor
pop
or
nop
jbe
aad
jae
add
arpl
pusha
repnz
repnz
aaa
fiaddl
mov
inc
lcall
in
push
dec
outsb
decl
clc
and
loopne
aaa
mov
cmc
inc
xchg
icebp
and
cmpsb
mov
lret
jp
mov
inc
jne
clc
xchg
jle
loopne
enter
xchg
popa
addb
lret
xor
xchg
out
mov
addr16
pop
sbb
pop
pushf
lcall
inc
mov
inc
lods
nop
popa
subl
pop
ret
xorl
or
aam
push
and
call
cs
sbbb
mov
es
aaa
mov
gs
in
push
jp
mov
mov
add
jg
xchg
mov
xor
xchg
adc
and
xor
imul
sub
cmp
inc
in
ret
jne
xor
in
xchg
jmp
rcrb
test
adc
cs
sub
insl
nop
cld
mov
imul
aam
mov
scas
mov
call
sti
fistpll
out
sub
xchg
xchg
clc
sarb
xor
aaa
aam
xchg
sbb
mov
sti
sbb
inc
inc
and
xchg
or
fildl
adc
imul
mov
scas
jmp
test
mov
adc
add
icebp
mov
into
mov
ss
icebp
and
xchg
push
mov
xor
fsts
ror
jge
sbb
inc
mov
push
outsl
dec
aaa
inc
popa
add
lock
cmp
add
cmp
mov
inc
jno
add
iret
cmp
cmc
mov
jae
cli
xor
scas
arpl
inc
leave
dec
lcall
sub
adc
test
dec
dec
jle
pop
xchg
adc
xchg
push
fnstsw
popa
sbb
mov
mov
scas
add
push
dec
mov
scas
mov
ljmp
mov
push
mov
xchg
xor
push
rorb
cltd
jne
jnp
cmpsb
jnp
aam
sub
mov
and
les
aas
fisubs
add
pushf
fistl
sbb
cmp
outsl
jg
aaa
test
shlb
xchg
jb
pop
in
clc
stos
mov
daa
iret
dec
pop
lods
inc
pop
sbb
inc
data16
inc
scas
mov
enter
pop
cs
cmp
fildll
aad
cmp
mov
das
xchg
cmpsb
sbb
std
mov
mov
dec
fldt
pop
shlb
cld
inc
outsl
aad
xor
shl
dec
je
and
in
add
adc
add
pop
adc
or
pop
call
dec
incl
jno
jle
push
sbb
lods
imul
adc
pop
dec
push
aad
jl
cmp
cs
int
clc
aad
cltd
test
lods
cmc
cmp
movsb
hlt
jne
jbe
mov
divb
adc
andb
add
jge
aaa
out
adc
sbb
lcall
mov
sahf
xorb
xchg
maxps
xor
je
fldcw
fnstsw
inc
test
pop
popa
push
repnz
push
sub
sub
push
inc
inc
add
add
in
std
mov
dec
out
pop
mov
mov
stos
pushf
sub
mov
nop
icebp
rcll
mov
fcmovnb
cmpsb
xor
pop
das
mov
outsb
pop
popf
jae
adc
and
xor
repz
imul
dec
subb
mov
cmpsb
and
jae
and
adc
test
add
xchg
dec
jge
sub
ja
xchg
jnp
mov
insb
push
sahf
sahf
jle
imul
lods
divl
pop
lahf
xchg
insb
mov
icebp
inc
pop
xchg
ja
add
mov
daa
mov
enter
sbb
mov
add
xchg
pop
adc
xchg
sarl
movsl
push
inc
aam
out
out
ret
ljmp
out
and
ds
dec
adc
xchg
cmp
cmc
pop
popf
sbbb
xor
dec
bnd
adc
test
inc
in
pop
push
inc
mov
outsb
xchg
iret
xchg
leave
loope
pushl
fnstsw
test
mov
mov
clc
xor
push
lret
call
push
aad
iret
inc
fildl
ror
sub
sub
cmp
jge
stos
add
mov
dec
adc
jl
or
mov
fmull
test
jns
xor
and
add
in
add
aad
push
push
push
cmp
mov
test
aaa
fwait
sbb
lds
fmul
mov
ficoms
insl
scas
adc
cwtl
add
ret
into
leave
mov
adc
dec
rorb
and
and
pop
imul
inc
push
or
cmc
inc
xor
repnz
ror
xchg
push
fldl
into
popa
mov
mov
xor
dec
je
sets
scas
aam
arpl
sub
fidivl
subl
adc
sbb
sarl
jnp
jmp
or
adc
mov
inc
fisttps
pusha
gs
adc
pop
inc
ja
cmp
sahf
pop
xchg
aaa
pop
mov
test
ficoml
cmp
xchg
aad
stos
sbb
and
andl
push
adc
insb
add
movsl
mov
or
add
ljmp
fsts
push
lods
addl
mov
insb
xchg
sbb
lods
pop
mov
rclb
mov
pop
or
jmp
dec
mov
sbb
cmp
xor
mov
fidivrs
pop
loope
mov
cmp
movsl
insl
in
rcr
push
arpl
imul
cmc
in
es
adc
adc
fmulp
lods
or
or
adc
xchg
jno
loop
push
mov
xchg
and
and
pushf
gs
out
insl
sub
or
gs
out
adc
cmpsb
mov
cmp
test
mov
jecxz
mov
mov
ss
pusha
fs
cmp
inc
inc
sub
add
and
fisubrl
imul
rorl
pop
call
and
sub
xor
jb
test
inc
std
mov
cmpsl
fs
test
lret
arpl
int
js
ljmp
jno
cmpsb
insb
jb
push
iret
loop
mov
pop
xor
adc
pop
push
sub
lods
hlt
add
minps
pop
lahf
arpl
dec
sub
sub
jecxz
push
lods
cmpsb
or
and
adc
jb
add
xchg
mov
outsl
xor
jns
adc
pop
pop
cmp
shrl
dec
in
xchg
fadds
loop
xlat
cmpsl
fwait
stos
sbb
jno
in
rolw
bound
cmp
push
adc
pop
adc
push
push
jns
pop
adc
pop
in
or
ljmp
xchg
loopne
xchg
or
sbbl
mov
xchg
xchg
shlb
xchg
mov
cmp
push
stos
xor
pop
fistpll
push
mov
push
int
loopne
and
outsb
push
inc
sub
out
cltd
or
lds
adc
mov
popa
loop
loopne
and
dec
addr16
or
jns
fs
clc
sub
gs
in
jmp
sti
inc
xchg
cld
flds
fcmovu
mov
sub
loop
icebp
sarl
inc
push
scas
jge
mov
mov
sti
adc
push
cmp
mov
sahf
jbe
mov
jecxz
js
shll
aas
add
insl
imul
es
jle
mov
and
mov
mov
lods
mov
cmp
lea
pop
pop
ret
lret
xchg
sti
xchg
and
in
ljmp
mov
outsb
loope
ret
or
outsb
xlat
ja
dec
jge
push
cmp
inc
and
sbb
das
pop
and
dec
cmc
pop
xchg
mov
jg
add
insl
movsl
aad
repnz
pusha
sbbl
xorb
pop
movsl
cld
add
aas
test
sub
sbb
test
lret
addl
jge
mov
push
fwait
pop
fisttpl
mov
sub
mov
push
lds
sub
cwtl
jecxz
xor
ds
imul
push
or
sbb
sub
inc
jl
popf
jp
orl
mov
mov
push
jle
inc
lods
les
mov
cs
xchg
inc
cmc
dec
imull
push
jg
test
fsubrs
loope
testl
xchg
repnz
xchg
imul
jge
fdivr
int
push
adc
rol
push
xchg
and
adc
xchg
push
sbb
xor
or
and
cmp
addr16
jo
mov
xor
inc
mov
or
dec
or
mov
leave
adc
mov
cmc
mov
inc
in
aas
fwait
inc
dec
add
inc
xchg
fisttpl
xor
push
rcl
sbb
vhaddpd
cmp
pop
test
and
xor
cmpsb
mov
xchg
sbb
loopne
sub
or
or
add
mov
pop
adc
mov
mov
int3
loop
add
in
in
pop
out
pop
add
ret
inc
mov
pop
pop
jnp
xlat
dec
sbb
jns
lock
mov
sub
std
mov
adc
inc
mov
push
mov
imul
es
inc
out
stos
cmp
and
in
or
sub
lret
push
mov
int3
xchg
xchg
lock
stos
pop
add
repnz
dec
sub
stos
loop
push
and
inc
arpl
pop
push
xchg
and
xor
data16
les
sbb
inc
sub
sub
xor
repz
add
clc
pop
cmp
movsb
inc
cltd
jb
dec
adc
jne
sbb
mov
loopne
or
mov
jge
mov
push
push
fstpl
cmp
adc
ror
bound
jno
gs
loope
jmp
jo
pop
repz
lds
loope
push
mov
roll
aam
popf
add
ja
sub
test
fisubs
cmc
xor
add
pop
aas
jne
in
xchg
sub
cli
and
cmpsl
mov
xchg
shr
gs
pop
xchg
shll
int3
xchg
and
and
lods
jne
cmp
pop
jo
dec
aaa
lods
pop
or
xor
pusha
cmp
std
lea
cmp
cli
push
cmp
cmp
sbb
add
lods
ret
lret
sahf
mov
push
aad
jne
dec
nop
fcompl
sub
les
jge
fldl
push
adc
popf
mov
jge
adc
mov
test
test
adc
loop
insb
loope
inc
mov
sub
in
sbb
inc
fsts
dec
add
inc
outsl
rolb
loope
inc
adc
add
xor
xchg
dec
jmp
pop
shlb
hlt
mov
pop
sbb
sub
stc
scas
in
cmp
ficoml
dec
add
add
inc
xchg
addl
jb
cmp
shl
fs
psubusw
and
mov
mov
mov
jno
aaa
aas
adc
leave
jp
fisubrl
ror
push
add
cmp
add
imul
mov
addr16
mov
xor
std
int3
mov
push
mov
js
xor
out
idivb
mov
xlat
aad
sahf
xlat
push
insl
and
imul
ds
das
insb
inc
mov
xor
std
in
mov
jg
cmpsb
fdivrs
sbb
subl
stos
subb
insb
and
popl
dec
adc
loopne
cmp
sti
fs
mov
xor
cld
out
mov
mov
mov
cmp
ljmp
push
movsl
xchg
dec
push
jle
int3
xchg
aaa
push
pop
dec
jae
push
cld
adc
add
adc
jno
and
leave
jno
fst
or
mov
jne
pop
fwait
and
dec
cltd
push
mov
xchg
or
push
push
mov
outsl
push
push
lea
bnd
jnp
mov
or
xlat
into
mov
mov
pop
sub
outsb
int
aam
insb
mov
in
std
add
pop
inc
jl
in
les
jmp
imul
pop
inc
or
data16
rolb
subb
stos
popf
leave
sub
testb
stc
test
test
xchg
fists
fldl
xchg
outsb
daa
lcall
lret
push
inc
leave
fisubl
addr16
pop
nop
mov
fwait
testl
cmp
dec
cmp
inc
cmp
inc
jo
outsl
test
sub
jbe
popf
andb
jg
or
je
jo
call
mov
or
add
xor
lds
gs
test
xor
insb
push
cmpsb
mov
push
cmp
sahf
test
adc
enter
jae
stc
jns
nop
addr16
mov
dec
inc
icebp
mov
ret
hlt
xor
mov
and
xchg
push
push
inc
fs
loopne
out
jmp
mov
lea
aam
in
inc
push
cld
xchg
repnz
push
divb
mov
sarl
jbe
out
mov
xchg
ds
nop
fldl2e
lds
inc
jne
je
add
aad
inc
sbb
or
pop
cmp
repnz
push
mov
jmp
ss
sub
cmc
cltd
lock
xchg
xor
jns
xchg
jge
push
std
sbb
jmp
fistps
xor
pop
popf
lcall
movsl
push
sub
jmp
data16
or
jns
mov
sub
repz
scas
jmp
adc
adc
test
frstor
push
outsl
cld
mov
push
stc
sub
inc
mov
jg
xchg
push
sbb
push
test
or
mov
or
test
xchg
sbb
push
pop
sub
jo
push
xchg
or
pushf
inc
cltd
bound
stos
mov
icebp
inc
icebp
es
jbe
mov
sbb
in
mov
pop
in
jecxz
mov
sub
aaa
pop
adc
outsl
pop
sti
adc
cmpb
cmp
stos
cmp
outsl
push
cmc
das
adc
leave
push
jnp
pop
sub
leave
inc
pop
cld
jo
fisubrs
cmp
pop
ja
aaa
nop
insb
xchg
cmp
jbe
adc
push
mov
xor
jns
ja
out
adc
jo
inc
push
xchg
enter
adc
test
out
mov
outsl
das
adc
je
adc
mov
cwtl
ret
inc
dec
bound
and
mov
mov
int3
lods
mov
or
push
xlat
push
lock
sti
mov
push
pusha
cwtl
cmc
push
js
test
and
mov
orb
test
push
and
int
xchg
xchg
or
in
push
inc
loop
sti
aas
aaa
jnp
imul
xchg
jecxz
xor
idivl
subb
cmp
test
mov
shrl
sbb
loopne
sub
xchg
cmp
rolb
push
andb
outsl
loop
add
cmp
pop
sbb
fsubrl
or
cmpsl
xchg
sbb
cmpsl
sub
xor
cmp
mov
outsl
int3
adcb
and
mov
adc
loopne
hlt
cmc
inc
fimuls
mov
jo
inc
fstp
addr16
test
mov
dec
push
shll
imul
add
cmc
and
pop
pop
int
cmc
sbb
mov
mov
jge
push
in
lods
sahf
sub
mov
sub
sbb
push
sub
jl
test
mov
xor
fnstsw
orl
dec
ret
push
lea
inc
cli
aaa
ret
sti
sub
mov
push
sub
std
mov
jecxz
inc
xor
rep
das
sbb
mov
sub
lret
and
cmp
insb
or
lcall
orl
shlb
xor
push
xor
jo
xchg
mov
xor
mull
pop
dec
push
mov
fucomip
stos
jg
or
mov
imul
roll
mov
sti
mov
sub
pop
cmpl
push
rclb
das
insl
lods
jno
pop
mov
jl
pop
negb
lcall
and
rcrb
vpmulld
sub
je
loopne
sub
mov
push
mov
push
mov
repnz
sub
xchg
adc
push
out
mov
fistpll
pop
xor
mov
or
mov
ret
sar
mov
in
mov
test
xor
loop
inc
mov
adc
rolb
pop
rolb
jo
rorl
push
sbb
pop
add
fdivrp
add
xor
sub
dec
and
in
and
pushl
in
inc
jns
push
movsl
nop
lret
inc
cwtl
sahf
xchg
stos
or
je
hlt
mulb
pop
push
cmpsl
ss
int3
sahf
adc
mov
pop
fnstsw
xchg
jo
mov
jp
adc
mov
push
and
sbb
adc
shrl
xor
pop
stos
jo
iret
cmpsb
stos
xchg
test
jb
push
push
arpl
sub
mov
adc
jo
les
mov
dec
in
lods
mov
das
dec
cmp
js
jle
or
sub
ret
or
push
ds
test
push
jmp
mov
jg
jecxz
aaa
std
lea
xchg
fisubl
js
std
dec
mov
scas
out
lret
out
pop
sti
hlt
jbe
in
xchg
gs
je
loop
sub
and
ret
xchg
push
pop
lods
in
orb
inc
leave
frstor
mov
sub
cs
dec
leave
jp
daa
scas
jecxz
sbb
in
imul
loopne
push
dec
lret
sub
jnp
add
outsl
popf
adcb
push
adc
sbb
imul
cwtl
add
ss
rolb
das
test
dec
insb
hlt
dec
loope
test
jecxz
mov
js
cmpsl
movsl
repnz
mov
cmpsb
xor
jae
dec
pop
movsl
mov
fwait
ss
aaa
ss
lahf
xor
leave
or
push
cmp
push
mov
insl
or
loop
jno
or
push
pop
jnp
or
jnp
fnstsw
cmpsb
mov
add
jecxz
xchg
mov
add
jnp
aam
push
nop
les
outsl
or
xor
and
in
or
movsl
push
cmpl
push
mov
xor
loop
repnz
sub
pop
jmp
and
mov
push
jae
and
in
adcb
lret
and
imul
dec
into
outsl
dec
push
leave
in
int3
xchg
cltd
xor
push
cmp
jmp
hlt
dec
xor
test
sbb
aaa
out
inc
ljmp
push
test
into
xor
mov
sbb
out
loop
pop
in
pop
sbb
sbb
jmp
dec
push
xchg
xor
lahf
clc
lret
cli
sub
aas
mov
into
pause
sbb
insb
test
movsl
push
cmp
outsb
xchg
out
jae
aad
push
jno
sub
push
aaa
push
jp
sarl
int3
stos
jl
decb
pop
aaa
fsubrs
shll
pop
fdiv
out
sub
xchg
shll
imul
out
or
inc
int
data16
sub
rol
lock
dec
jae
push
inc
int3
popa
ja
ja
repnz
inc
jae
and
adc
xchg
ljmp
arpl
mov
sarb
ds
cmp
pop
fwait
loop
sub
cmc
insl
push
enter
adc
and
adc
std
cmpl
icebp
pop
mov
hlt
ss
push
push
jp
mov
push
call
push
dec
sbb
inc
sti
jne
icebp
cmpsl
int3
cmp
out
pop
xor
sub
jnp
xchg
das
jmp
insb
cld
push
lret
inc
mov
es
subb
int
pushl
fdivrs
aad
pop
xchg
sub
dec
inc
fldl
jl
mov
and
cltd
pusha
stos
xchg
sarb
enter
clc
call
jle
dec
cli
cmp
aad
jp
jnp
int3
das
mov
sub
loop
sbb
test
repz
call
push
push
jge
enter
test
cmp
push
pop
pop
repz
push
repz
inc
sbb
cmpsb
jmp
mov
hlt
les
jns
xchg
sbb
and
int
enter
xor
je
dec
cmp
push
sub
pop
daa
inc
dec
jbe
add
rorl
mov
js
and
cltd
imulb
shlb
mov
outsb
hlt
xchg
push
mov
inc
test
in
sbb
mov
je
jmp
imul
fucomp
inc
add
bound
mov
sarb
inc
dec
cmpsl
in
pop
addr16
sub
dec
fnstsw
lds
push
scas
ljmp
stos
testb
pushf
daa
sub
mov
sbb
pop
jae
hlt
lcall
mov
mov
lods
jno
push
ss
jg
lods
add
mov
push
inc
jbe
cli
mov
cmc
mov
stc
mov
addr16
stc
ror
in
add
mov
sti
popa
out
dec
ret
push
subb
ljmp
push
mov
or
lret
jge
repnz
mov
sbb
mov
daa
and
ret
mov
lret
xchg
jl
xor
mov
std
or
fisubrs
movsb
jmp
xor
mov
test
inc
add
cmp
jne
jg
jp
inc
pushf
mov
stos
jo
mov
imul
adc
pop
mov
in
cmc
int
xor
shl
and
jbe
push
mov
outsl
xorb
or
popa
mov
xchg
push
bound
and
push
gs
pop
cmp
clc
stos
aaa
lahf
jge
push
pushf
sub
mov
jp
mov
push
icebp
in
fbstp
sub
sbbl
cmp
xchg
mov
mov
lods
add
repnz
int
sarl
add
scas
dec
lret
shlb
mov
push
cmc
pop
pusha
xchg
aam
rcrl
push
push
jo
icebp
out
addr16
or
ds
dec
adc
fs
or
pop
xchg
adc
adc
mov
inc
cld
call
inc
cld
shlb
bound
into
mov
xchg
and
stc
pop
pushf
or
in
add
fstpt
testl
push
int
mov
sub
insl
mov
sub
jmp
add
mov
pop
push
sbb
lods
cmc
out
mov
and
iret
jl
sti
push
sti
testl
movsb
clc
push
ror
push
add
xor
addl
fisubl
ret
lret
nop
inc
dec
push
mov
cmpsb
adc
jno
scas
mul
pop
pop
sbb
mov
or
or
insb
popf
imul
mov
jecxz
inc
add
loop
sub
fisttpll
ret
push
arpl
test
cmp
fcoms
scas
or
out
push
hlt
pushf
lds
xchg
int
add
hlt
mov
imul
in
xor
mov
popf
bnd
imul
mov
jo
dec
or
sub
arpl
add
inc
fisttpll
mov
es
xor
rcl
and
loopne
add
sbb
mov
sar
push
pusha
pushf
fistpll
cmp
fsubrl
fisubs
ficoms
adcl
adc
repnz
ss
dec
xor
pusha
adc
push
lcall
or
in
int
xchg
push
add
sbb
or
imul
rcrl
mov
add
xchg
push
popf
mov
hlt
push
lcall
xorl
xor
std
push
loopne
mov
mov
mov
lods
call
rcrb
push
pop
sbbl
out
jbe
adc
repz
cld
dec
bound
aas
jbe
mov
cld
xchg
push
add
int
sbb
add
pushf
fisttpl
dec
cmp
insl
das
jne
xchg
sbb
and
sbb
pop
in
hlt
lahf
and
mov
sti
xlat
fwait
mov
mov
in
lds
into
in
fld
mov
mov
jo
push
repz
sbb
adc
push
test
stos
fucom
push
aaa
jp
mov
inc
add
popl
pusha
lods
sbb
dec
sub
lock
sti
sbb
mov
ja
mov
push
popa
sbb
jb
fsubs
fidivrs
fmulp
outsb
cmp
cmp
pop
les
or
adc
popl
adc
sub
insb
pop
and
mov
jp
xor
call
lcall
scas
inc
hlt
in
shlb
hlt
xor
stos
test
xor
daa
xor
test
add
test
daa
shlb
out
sub
jg
mov
push
aas
cltd
dec
loope
dec
xor
mov
push
jns
stos
pushl
iret
add
ret
lds
push
jbe
popf
jmp
and
pop
jl
lcall
int
add
push
movsl
inc
scas
xor
test
mov
dec
sub
jecxz
add
aad
or
cmc
cli
ss
je
xchg
push
push
push
imul
and
mov
loopne
shrb
mov
loopne
aas
fnsave
cmp
inc
mov
and
jae
testl
cltd
fistpll
push
sahf
push
mov
or
out
into
add
inc
mov
mov
aaa
mov
or
pop
push
dec
xor
popf
gs
lret
dec
adc
add
jo
popa
clc
jmp
mov
inc
rol
cmp
rorb
pusha
jbe
add
adc
adc
mov
cmc
insb
cwtl
push
pop
js
sti
test
push
mov
test
add
mov
pop
lods
ficomps
insl
xor
push
ljmp
mov
ret
pop
adc
scas
insl
jne
sbb
mov
dec
jle
stos
shrl
xchg
std
mov
iret
dec
cmp
stc
and
clc
fisubs
cld
test
jle
push
in
pop
jge
mov
push
add
call
lret
sub
cmp
aas
fs
push
mov
into
dec
mov
pop
iret
jne
lret
imul
es
lret
mov
jle
mov
negb
inc
xchg
fnstenv
js
adc
loop
xchg
xor
insb
sub
dec
icebp
je
xchg
into
negl
nop
cmpl
lcall
dec
inc
mov
push
shlb
outsl
shl
decl
inc
mov
je
in
aas
ja
sbb
mov
mov
mov
testb
push
mov
mov
adc
sub
icebp
loop
inc
pop
pop
bound
mov
sbb
push
mov
mov
add
sub
inc
stc
cld
hlt
icebp
xor
push
inc
mov
add
loope
inc
push
or
push
xchg
inc
fisttps
mov
outsb
mov
out
and
sbbb
jo
push
cmp
mov
out
inc
adc
ds
cmp
mov
dec
xchg
inc
pop
ss
mov
scas
push
addl
arpl
jnp
and
movsb
mov
pop
inc
repnz
dec
orl
hlt
inc
loope
xchg
lahf
int3
xor
dec
mov
mov
inc
dec
or
mov
cmc
push
call
jb
xchg
add
fldl
sahf
xchg
dec
or
or
aas
push
outsb
jge
pop
xlat
lods
xchg
bound
adc
adc
stc
insl
jno
jp
leave
je
mov
xor
adc
jl
test
rcr
adc
test
lea
push
lods
pop
and
clc
xchg
push
xchg
rclb
in
mov
hlt
sbb
jge
add
dec
loop
mov
push
lods
mov
sub
out
fdivrl
cmp
scas
cmp
mov
or
jge
dec
mov
fisubl
fimuls
sbb
enter
into
jl
pop
or
out
mov
mov
jp
sbb
faddl
shl
cmpsl
push
enter
lock
xor
and
in
enter
loope
dec
and
jae
sti
sbb
iret
pop
mov
sub
mov
in
gs
leave
mov
xchg
loope
sbb
jmp
xchg
imul
cmp
mov
fcoms
xchg
pop
js
addl
cmpsb
pop
fs
cmp
xchg
and
sub
and
divb
mov
push
jo
jg
aas
sub
sar
mov
pop
outsb
jnp
push
xchg
popa
pop
cmp
jmp
mov
add
sarb
pushf
jmp
mov
jae
jmp
sub
mov
insb
xor
jo
mov
push
cli
dec
pop
jge
aam
mov
inc
sbb
dec
mov
dec
mov
mov
mov
mov
orb
push
fwait
inc
sahf
data16
sarl
cmp
fadds
stos
iret
mov
aad
imul
lock
xchg
xchg
ss
js
test
fs
jg
fsubl
leave
mov
ds
inc
scas
outsl
dec
jecxz
push
ja
pusha
test
inc
shrb
fisubrl
fcomps
xor
roll
pop
xor
and
or
das
sbb
in
add
or
imull
add
lret
push
les
xchg
xor
ud0
adc
and
ljmp
fisubrl
pop
pop
xor
test
ljmp
mul
fmuls
and
jne
sub
cmp
int3
push
cmp
pop
loope
add
xor
xor
cmp
cld
adc
lds
mov
call
mov
pop
icebp
test
push
stc
sbb
inc
push
mov
xchg
push
mov
fisubl
insl
push
sub
in
xlat
mov
xlat
pop
add
xor
daa
popl
xchg
sub
das
cmp
pop
lret
rorl
jmp
jns
mov
sub
mov
cwtl
sbb
shlb
xchg
mov
arpl
aam
lahf
push
lods
xor
lret
jno,pt
fcomps
cmpsb
sbb
ret
jge
jnp
out
and
ja
jl
loopne
cwtl
xor
sub
inc
sub
jb
xorb
call
pop
cmp
push
mov
lock
imul
mov
cmp
mov
movsl
out
jge
dec
jae
popf
mov
movsl
stos
sub
dec
mov
fcoml
ja
or
dec
and
cld
sbb
jge
pop
sbb
sti
ret
cmp
jo
pop
ret
mov
push
xchg
adc
popa
pop
fdivrl
in
imul
xchg
ds
pop
cmp
mov
add
jle
mov
shld
push
add
inc
dec
inc
adc
leave
xchg
mov
sbb
repz
in
mov
ret
in
test
in
cwtd
jne
cs
mov
push
mov
cmpsb
fsubrl
je
xchg
repz
gs
cwtl
jg
add
dec
xlat
js
imul
xchg
xor
jae
adc
shl
je
std
sub
icebp
mov
mov
push
cmp
add
cwtl
push
cmp
and
lret
mov
add
xchg
push
jg
mov
outsl
mov
addr16
push
inc
idiv
les
fiaddl
adc
shl
pop
cmpsb
xchg
mov
lahf
or
mov
stos
jle
adc
cwtl
jp
test
mov
aad
mov
sbb
loopne
pop
xchg
sbb
fildl
mov
jmp
mov
stos
and
cmpl
push
cs
inc
in
dec
inc
add
in
xchg
test
movsl
adc
push
enter
mov
mov
dec
repnz
xor
psubw
out
and
test
adc
daa
inc
repz
shl
das
cmpsl
js
adc
aas
loopne
pop
loop
lret
sub
cmp
nop
mov
clc
mov
scas
ror
cmp
clc
push
xor
cld
in
into
mov
test
aaa
lock
pop
outsl
ja
sahf
inc
xor
push
add
sub
rcrl
cwtl
jno
repnz
cmp
sbbl
andl
in
jl
pop
push
pop
dec
and
sti
in
sub
fcompl
fmulp
popa
daa
aas
adc
xor
mov
dec
scas
mov
mov
dec
loopne
jmp
lahf
outsb
and
cwtl
inc
lods
enter
and
addl
es
jb
rcrl
stos
dec
pop
adc
xchg
sub
push
inc
test
dec
mov
shl
adc
cmc
jmp
xchg
out
sub
push
mov
and
mov
mov
sub
lret
and
insb
dec
icebp
in
jmp
push
xchg
add
jmp
xchg
mov
adc
add
je
mov
adc
and
mov
xchg
arpl
pusha
int3
lret
fcoms
adcb
jne
idivb
out
or
in
sbb
bound
pop
cmc
push
test
pop
mov
xchg
clc
jb
lock
cld
mov
scas
sub
imul
ss
adc
or
mov
dec
and
xchg
mov
stos
xlat
mov
fadd
jno
push
rcll
and
fisubl
int3
gs
jle
fldt
xchg
xor
aaa
insl
xor
iret
cs
out
cmp
dec
cmp
lret
or
inc
fs
push
mov
fcomip
xchg
dec
enter
mov
loop
and
aas
inc
jmp
addr16
in
mov
ret
not
pushf
mov
inc
popf
scas
xor
fisttpll
pop
loopne
jmp
mov
sahf
shrl
and
push
fildll
xchg
insl
xchg
and
sub
fcompl
inc
cwtl
shll
sbb
xchg
lea
jbe
cmc
sub
int
imul
lods
test
dec
inc
xchg
lods
cmpsb
pop
xlat
adc
inc
mov
or
test
movsl
loopne
dec
lret
dec
mov
mov
xchg
lods
lods
pop
dec
mov
push
mov
fistpll
inc
xchg
addr16
das
adc
ljmp
push
adc
ret
sub
popf
pop
ror
sbb
dec
stc
sahf
and
popa
jmp
fists
push
or
jb
xchg
mov
sti
aaa
in
inc
mov
sub
push
sbb
pop
sbb
iret
sbb
adc
and
ficomps
push
cmpsl
fcoml
xchg
fistpll
dec
push
icebp
fnstenv
out
adc
xchg
jnp
sbbb
xor
xchg
xchg
inc
lods
shr
push
hlt
sahf
jg
xor
xor
push
push
dec
jg
popa
test
xor
popa
and
mov
sub
aam
cld
or
leave
or
sbb
repz
addr16
faddl
dec
ret
mov
lea
adc
loopne
lds
sub
mov
mov
pop
xor
and
cmp
outsb
jnp
ds
adc
pop
call
test
jge
xor
inc
outsl
mov
mov
sbb
data16
inc
pusha
imul
outsl
in
lds
push
pop
xchg
shlb
or
cmpsb
popf
mov
scas
mov
mov
lods
push
sbb
or
jl
fmull
adc
fadd
xchg
xor
and
fiadds
bnd
ret
or
notb
jb
icebp
stos
cli
pop
cwtl
outsl
loop
inc
lods
pop
mov
aas
std
mov
adc
cwtl
les
cmpsb
mov
addr16
mov
push
xlat
mov
icebp
cmp
xchg
sbbl
je
push
mov
out
xchg
lea
xchg
mov
sahf
pop
std
mov
cmpsl
or
popf
mov
scas
mov
inc
aad
or
inc
mov
mov
and
sbb
inc
test
dec
cld
mov
mov
cwtl
push
sbb
je
sahf
adc
sub
or
and
loope
jge
shrl
shll
add
cwtl
ss
fnstcw
dec
push
mov
stc
mov
int
icebp
cmp
popa
movsb
mov
enter
xlat
add
cmp
jmp
mov
push
adc
ja
decl
and
scas
jp
xchg
bound
mov
mov
mov
outsb
das
and
aam
sbb
fmull
test
enter
fldenv
iret
adc
lret
sub
and
call
out
ret
cmc
dec
pop
std
adc
pop
sbb
push
add
dec
daa
out
fdivp
cmpsl
jle
aas
pop
add
mov
and
sbb
jge
sub
pop
out
mov
mov
fadds
sbb
dec
xor
sti
call
mov
ret
lahf
inc
lea
jg
lret
xor
lds
sub
sbb
mov
cltd
jmp
sbb
xor
iret
cmp
xchg
and
loope
ret
sub
scas
push
xchg
inc
sub
into
test
mov
loop
or
or
gs
data16
mov
mov
xorb
xchg
pop
ret
or
jne
rorb
push
inc
and
ud2
fildl
xchg
cmc
dec
cmp
popa
cmp
iret
imul
aas
outsb
sti
call
fwait
into
xor
mov
adc
roll
gs
popa
outsl
lcall
mov
adc
stc
sti
mov
pop
and
sub
mov
adc
adcb
dec
in
sbb
mov
jno
jne
movsb
bound
in
inc
pop
pop
sahf
push
lahf
sbb
cmc
cmp
movsl
mov
jp
xchg
sub
pop
outsb
jnp
pop
lret
scas
insl
filds
nop
and
pop
leave
adc
imul
and
push
hlt
test
orb
or
jno
mov
push
loope
cmc
lea
xor
push
fs
lods
xor
cmp
dec
mov
lods
adc
sub
push
mov
sti
es
mov
push
xchg
aas
jge
dec
jecxz
xchg
loope
xor
jp
jns
negl
movsb
jmp
test
jp
pop
aas
inc
add
dec
jg
mov
inc
into
or
ss
lods
adc
enter
lods
mov
push
aad
xchg
fnstcw
sarb
jg
pop
mov
in
imulb
das
jno
push
loopne
repz
inc
xor
jl
testl
mov
jns
sbb
xor
loop
sub
pushf
push
cld
cmpl
repnz
movntq
fsubr
roll
pusha
fucom
clc
mov
cmpsl
push
and
mov
cmp
sti
inc
sahf
cmp
or
dec
pop
outsl
loop
cltd
mov
xor
icebp
inc
outsl
sub
jecxz
das
or
call
jp
ret
cmc
repnz
mov
push
push
jg
add
sbb
dec
je
mov
mov
andb
clc
mov
push
push
bound
hlt
imul
ja
arpl
in
mov
jb
dec
fcoml
sbb
pop
out
jns
mov
mov
into
dec
mov
mov
cmp
jns
outsl
pop
shrl
scas
call
movsl
enter
xchg
jns
push
subb
sti
hlt
jno
push
es
sbb
xor
mov
mov
xchg
lds
mov
mov
sub
inc
mov
push
and
std
ss
outsl
push
cmp
mov
push
stos
cmpsb
cli
pop
addr16
into
dec
xchg
arpl
dec
pop
cmpsb
and
pop
xlat
lea
aas
and
pop
ss
cmp
mov
inc
ja
mov
shll
rclb
scas
xchg
pop
mov
xor
and
dec
xchg
jns
xor
lock
mov
test
out
push
cli
inc
add
push
cmpsl
push
sbb
jmp
pop
aas
cmp
add
mov
ret
sbb
adc
add
js
mov
xchg
nop
inc
cmp
adc
sti
ja
push
shlb
xchg
and
pop
jno
mov
sbb
push
test
test
aaa
repnz
cmp
cwtl
mov
jge
addl
leave
xor
mov
out
sbb
xor
repz
call
sarb
addl
inc
sar
and
push
into
repz
push
mov
mov
in
jae
ret
mov
jne
mov
xchg
push
pop
lahf
jge
das
mov
adc
adc
pop
test
dec
adc
mov
inc
sbbb
cmp
inc
pop
fs
stos
nop
stc
gs
or
hlt
xor
sti
pop
mov
icebp
ljmp
ljmp
jp
mov
idiv
push
sbb
mov
xor
mov
dec
pop
bound
ret
arpl
cmp
pop
push
aam
addb
es
sbb
stc
mov
add
jne
fs
adc
popa
push
pop
add
xor
or
adc
or
cmp
push
adc
cmp
mov
or
cmc
xchg
movsb
bound
jmp
add
rol
repnz
push
call
jmp
loopne
cltd
std
mov
int
adc
lods
sbb
mov
data16
push
out
xchg
test
mov
pop
adc
cwtl
add
jns
ror
adc
push
dec
data16
jmp
sahf
aam
jb
movsb
jle
jecxz
cmpsb
cmp
inc
jno
sub
add
mov
adc
lock
sahf
push
cmp
pop
leave
xchg
push
mov
mov
and
dec
loopne
add
fists
mov
out
inc
sha1rnds4
add
add
mov
sub
mov
and
xor
sbb
das
push
dec
pop
push
lods
mov
jmp
call
jo
and
std
xor
inc
imul
pop
ret
mov
sbb
push
stos
aam
xor
mov
jo
xchg
add
cmpsb
xor
shlb
in
mov
xchg
or
add
outsb
pop
popf
mov
mov
push
ret
das
sbb
scas
testb
jno
in
sub
or
dec
push
decb
pop
fwait
sub
jne
sub
xchg
push
mov
mov
sbb
push
ret
mov
push
and
rcl
in
imul
jns
mov
imul
add
pop
outsb
ss
ja
mov
push
pop
mov
sbb
pop
movsb
movsl
add
add
out
xchg
pop
add
sub
outsb
decl
scas
mov
scas
jp
or
push
push
pop
or
push
mov
loopne
je
leave
dec
sbb
loopne
cmpsb
add
xchg
dec
data16
mov
and
icebp
mov
mov
pop
dec
push
pop
mov
lret
xlat
in
out
es
pop
or
push
mov
and
gs
loope
adc
jmp
sub
jge
popf
xorps
icebp
inc
or
dec
sub
mov
cwtl
out
jecxz
cwtl
decb
push
pop
js
xchg
and
or
inc
inc
call
and
push
jns
and
pop
or
mov
mov
adc
imul
cmp
jmp
mov
popa
sarl
adc
into
jl
bound
jo
and
or
js
sub
jne
ja
divb
movb
pushw
mov
sub
divb
inc
mov
xorb
std
hlt
xor
and
push
scas
or
js,pn
in
sbb
jbe
mov
mov
imul
ds
out
lahf
outsb
inc
shlb
sbb
ret
js
cld
lahf
inc
lret
call
fnsave
cwtl
cmpsb
test
xchg
pop
insb
sbb
fadd
fidivs
nop
inc
cld
push
sub
add
stos
fs
jne
inc
mov
cmp
lret
push
inc
scas
imul
scas
outsl
clc
rcrl
cmpsb
subb
lods
aaa
out
dec
xchg
popf
xor
insb
sbb
cmp
xor
dec
push
call
dec
inc
mov
aas
gs
dec
and
js
and
insl
mov
fldz
cmp
xor
ret
incb
xor
cmp
icebp
stc
jne
ret
pop
dec
inc
movsl
movsl
mov
mov
and
lds
nop
push
subb
push
and
lods
fs
fbld
stos
xchg
cmp
rcrb
sub
call
int3
xor
cmp
jl
mov
adc
adc
lcall
jb
xchg
pop
sahf
and
adc
pop
fwait
pop
mov
or
dec
call
test
les
inc
loopne
lret
fsubrl
sbb
insb
out
mov
in
pop
add
dec
pop
js
sub
lret
mov
repz
mov
inc
pop
add
pop
pop
shrb
sbb
mov
sbb
mov
fildl
pusha
fwait
cmp
inc
mov
sbb
push
push
xchg
mov
fistl
push
je
xlat
inc
xor
lds
and
push
hlt
jnp
fldlg2
lods
repz
lret
cmp
rolb
test
push
mov
sbb
sub
xor
imul
mov
scas
adc
xor
sub
mov
xchg
cwtl
sub
cmpsl
inc
sub
xchg
pop
shlb
repnz
ficoml
mov
ret
mov
pop
pop
mov
data16
jnp
adc
incb
pop
mov
in
call
sub
cmp
jmp
jnp
push
push
or
mov
add
jg
mov
push
xlat
out
and
dec
or
stos
xor
scas
add
and
mov
adc
fcomp
pop
mull
inc
xor
jae
rcrb
adc
repz
mov
in
fs
hlt
stc
lcall
xchg
lahf
pop
subl
jge
cmp
xor
dec
push
lcall
push
sub
adc
clc
xor
notb
insl
lret
xchg
popa
dec
test
movsl
xor
ljmp
sbb
mov
mov
stc
dec
or
xchg
aas
xor
enter
gs
and
xchg
adcl
mov
rolb
xchg
adc
out
xchg
lret
sahf
xor
cltd
lock
mov
stc
mov
jg
jbe
movsl
sti
pusha
loop
lds
test
cwtl
cmpsb
cmp
xor
imul
out
cmp
inc
shll
mov
mov
shrb
sub
cmp
cmp
cmp
dec
in
pop
mov
std
push
je
lds
test
or
push
mov
cli
dec
or
cmpsl
sbb
inc
call
hlt
scas
push
and
mov
pop
aad
add
outsl
xor
iret
push
dec
sbbl
add
cmpsl
test
int
movsb
fsubp
mov
xor
or
test
sbb
mov
stos
gs
lahf
push
lods
cwtl
orb
jg
and
ret
movsl
lahf
leave
xchg
ljmp
scas
ja
cltd
out
mov
mov
push
cmc
xchg
ret
xchg
mov
pop
pop
les
mov
inc
push
out
decb
xchg
subb
mov
aas
pop
test
scas
and
cmp
mov
in
fldcw
int
jno
jmp
iret
inc
aaa
je
in
lret
jo
xor
cmpsl
std
push
cwtl
or
ds
sti
shlb
jnp
mov
jl
sub
jmp
sti
push
out
out
add
ret
out
lds
int3
ja
mov
int
fimuls
mov
dec
pop
jo
loope
fs
inc
shrb
and
das
adcl
jno
fdivr
pop
faddp
mov
push
fstps
dec
or
jns
inc
add
push
mov
loop
push
mov
addr16
daa
pop
inc
xchg
sahf
adc
mov
ror
int
sarb
xor
sahf
test
mov
lret
in
push
push
test
mov
call
add
shrl
testl
or
adc
sti
xchg
jmp
insb
fst
clc
ret
fnsetpm(287
sub
loopne
xchg
enter
or
inc
mov
aam
cli
dec
cmc
popa
lcall
cltd
imul
inc
add
cmp
pop
xchg
add
dec
mov
fstps
mov
testl
mov
inc
cld
add
insl
push
push
mov
fsubp
mov
popf
mov
mov
jmp
or
mov
in
lret
push
sbb
movsb
pop
adcl
rcl
scas
sbb
cmp
push
fcomip
xchg
insb
arpl
jecxz
cs
cmp
xchg
mov
xchg
out
repz
xor
lahf
in
sti
popa
or
dec
stc
mov
dec
sbb
cltd
fstpl
or
adc
outsl
aaa
and
insl
in
icebp
mov
insb
mov
mov
dec
xor
pushf
sbb
or
mov
dec
xchg
jne
and
lahf
xor
push
out
push
dec
imul
cmpsl
dec
inc
jecxz
sbb
xchg
fs
cli
push
and
mov
push
testl
ja
sbb
jl
lret
cmp
xchg
test
out
leave
pushf
mov
push
cmp
pop
data16
jcxz
aad
mov
stos
mov
xchg
push
jne
int3
stc
sub
call
sub
rcl
in
addr16
fs
popw
bound
into
vmaxpd
das
mov
xor
cmpsl
adc
mov
fcmovne
imul
lahf
lret
mov
xchg
pop
shl
sub
aas
mull
pop
and
and
sti
add
rolb
xchg
popf
and
cwtl
jp
iret
fisttpll
dec
sbb
inc
cmpb
mov
dec
lods
daa
add
mov
inc
pusha
xor
xor
pop
mov
cmp
jl
fucomip
lock
cmpsl
cmpsb
roll
imul
mov
inc
call
xor
lods
repnz
inc
ljmp
cmp
mov
jnp
repz
sbb
subl
movsl
mov
xlat
repnz
loope
adc
ret
sub
add
jecxz
push
je
arpl
test
repz
adc
mov
xor
sbb
xor
ljmp
push
pop
pop
lcall
inc
loopne
shrb
adcb
dec
xor
shrb
xchg
in
mov
mov
cwtl
sti
sbb
jg
xchg
addb
jns
or
pushf
jnp
adc
mov
cmpsl
mov
and
sub
inc
push
jo
inc
jp
xor
aaa
sub
lahf
push
loopne
adcl
sub
pop
adc
adc
bound
cmp
inc
jb
popf
mov
inc
mov
into
adc
push
ljmp
or
rclb
sub
xor
ffree
das
mov
stos
jb
or
push
pop
loope
fldcw
and
or
push
pop
je
sub
stc
popf
leave
cmp
outsb
and
inc
jne
or
arpl
orb
insb
mov
out
dec
scas
add
cmp
outsl
jp
fadds
clc
test
aam
pop
rcrl
pop
int
in
fcomip
pushf
sub
xchg
cmc
movsl
inc
dec
xchg
outsb
sarb
hlt
movsb
mov
test
cmp
repnz
sbb
mov
aam
lds
xlat
gs
mov
call
cmp
add
inc
and
dec
aam
and
lods
jne
add
push
nop
imul
fsubrl
lds
cmp
sub
push
bound
push
mov
mov
mov
sahf
push
mov
test
push
sar
inc
add
xor
add
ret
push
cld
xor
insl
push
sub
push
mov
movsl
mov
cmc
adcl
decb
aas
adc
stos
and
lahf
and
icebp
ret
outsb
push
movsl
xlat
xor
pop
jmp
sbb
outsl
jnp
enter
and
dec
andb
test
sub
pop
cld
jbe
insl
loopne
xchg
test
cwtl
inc
mov
aad
cmpsl
bound
jmp
inc
mov
xor
pop
mov
pop
dec
sbb
mov
inc
push
lock
push
dec
lds
rcr
sti
sbb
xchg
int
pop
ljmp
mov
cmp
outsl
sbb
fdivs
dec
xlat
out
in
jge
jo
add
nop
sbb
cld
xchg
je
ss
stos
imul
jge
loope
cmpsl
sub
mov
cli
mov
nop
push
sbb
into
jb
ret
mov
leave
bound
push
xchg
cltd
xlat
xor
cmp
mov
xchg
repz
sahf
push
jmp
mov
rcrb
fdivs
add
adc
inc
dec
push
in
push
cmpsb
sbb
and
rorb
cld
sub
sbb
dec
and
into
or
rorl
sub
incl
fists
lock
fnstcw
pop
inc
mov
in
lret
outsb
xchg
das
dec
cmp
mov
dec
addr16
pop
mov
and
lods
in
shld
sub
cmpl
ret
or
xor
adc
push
mov
inc
xchg
dec
and
shlb
imul
imul
cmp
addps
push
inc
fildl
and
lods
cli
scas
incl
or
push
mov
cmp
pop
sbb
in
aam
mov
cmpsb
fidivl
pop
lret
fidivrl
push
and
jns
and
xchg
clc
jne
addr16
aas
test
cld
adc
add
mov
ljmp
ljmp
repnz
lcall
movsb
jno
js
lcall
push
test
dec
push
mov
xor
mov
and
pusha
repz
mov
xchg
sbb
or
xor
mov
stc
nop
cli
jb
xchg
adc
pusha
mov
leave
jl
jno
adc
cmp
je
in
jne
xchg
pop
cmc
mov
sub
popa
into
testb
mov
aaa
or
cmp
add
or
gs
dec
popf
xor
pop
xor
pop
pop
insl
insb
dec
filds
xchg
dec
out
add
repnz
out
jns
sti
xchg
cmp
mov
cmpsl
dec
cmpsb
dec
mov
pop
fisubs
pop
mov
call
rcrb
cmpsl
testl
add
sub
ret
mov
add
cmp
gs
cmpl
and
lret
fwait
stos
lds
daa
xor
ds
jl
lret
cwtl
mov
cltd
xchg
fnstsw
sbb
testb
and
shrb
pop
mov
xlat
xor
adc
aaa
nop
inc
xor
mov
mov
inc
jns
pop
inc
mov
inc
cmpsb
pusha
movb
add
fstl
pop
ret
mov
popa
add
aad
rcrb
imul
pop
lods
ss
inc
push
jecxz
testb
jns
test
pop
jne
xchg
push
cmpsb
les
push
inc
inc
mov
mov
push
xchg
push
push
jbe
adc
jl
rcr
js
and
int3
xchg
test
imul
cmp
jno
sbb
dec
adc
inc
pusha
cltd
idivl
out
out
lods
pop
cmc
mov
imul
inc
sbb
cmp
inc
in
jb
lahf
adc
or
sub
mov
pusha
cmp
jno
sub
push
and
loopne
mov
cmp
cltd
push
popl
jg
cltd
lds
testl
int3
jmp
lock
movsb
and
in
scas
ja
cmpsl
imul
insl
sahf
jmp
ret
mov
pop
stos
inc
or
nopl
sbb
cld
notl
cmpsb
xorl
in
push
out
test
and
pop
push
leave
jnp
lock
fsubl
mov
jmp
aam
push
into
inc
cld
mull
dec
popf
shlb
inc
mov
jb
inc
fwait
jp
sub
add
mov
mov
inc
ss
shl
jp
bound
fistpll
cmpsl
adc
dec
gs
inc
mov
or
pop
inc
mov
mov
push
dec
adc
aaa
jmp
lret
lcall
xor
cmp
lret
ja
inc
stos
dec
jae
test
and
aam
int
cmpsb
lock
add
mov
sub
loop
jb
pop
cli
outsb
xor
mov
mov
mov
das
lock
jg
sub
xchg
add
dec
pop
data16
mov
dec
mov
xchg
lea
stos
repnz
jmp
lret
sahf
lods
push
push
outsb
sbb
inc
fcmovne
pop
sub
xchg
jp
sbb
sub
incb
stos
orl
lret
pop
cmpsl
sarl
pop
push
jbe
lret
stos
push
push
mov
mov
jo
lahf
lret
incl
mov
jg
adc
cmpps
in
add
fwait
lds
fldenv
xchg
add
xchg
sbb
sbb
mov
aaa
jo
mov
ret
xchg
mov
xchg
aam
jmp
fsubrp
mov
and
or
inc
jmp
inc
pop
adc
push
loopne
shll
fucomi
cmpsl
mov
push
inc
or
pop
movsl
ret
push
adc
and
jno
xor
imul
jle
push
test
movl
fstl
lock
flds
rcrl
pop
mov
push
notl
pop
les
mov
inc
out
bound
sub
cmp
xorb
mov
mov
aas
movsl
pop
and
dec
jb
or
or
push
test
imul
mov
cmp
cmp
xchg
cmp
and
shrb
sub
hlt
dec
jbe
ja
aas
sbbb
mulb
jp
lods
inc
pop
std
popa
out
push
push
movsb
jl
adc
or
push
sti
push
mov
inc
inc
or
dec
and
cmp
es
ret
mov
push
adc
ds
jns
cwtl
add
xchg
dec
mov
sbb
rorl
cmp
ds
pop
test
add
shlb
adc
mov
adc
fmuls
mov
xor
pop
cmp
inc
mov
push
pop
pop
xor
and
rorl
xor
stos
fwait
inc
dec
insl
test
sbb
inc
pop
out
push
mov
outsl
ljmp
cmpsl
imul
mov
mov
test
push
cmp
orb
ja
repnz
inc
and
addl
insl
adc
fbstp
and
imull
adc
and
jne
mov
subb
ret
dec
and
mov
pop
push
incl
cli
stos
js
inc
adc
jp
jbe
inc
cld
ljmp
jb
jp
cmpsb
fisttps
sbb
out
movsl
rorb
pop
add
arpl
or
outsb
out
aaa
dec
inc
sbb
sbb
fmuls
mov
mov
add
sub
add
cs
jp
xchg
movsl
ds
jmp
sub
das
pop
imul
rclb
je
sub
cmp
subl
lods
adc
movsb
mov
rclb
nop
push
jno
sub
jae
shlb
fmull
jns
jbe
ds
pop
cmpsb
sub
in
xchg
fisttps
es
and
push
and
ss
loop
test
jmp
push
ss
jmp
je
push
sub
dec
pop
gs
fmull
addr16
cmp
paddd
test
lcall
ficoms
mov
cld
scas
fisttpll
jl
sbb
cmp
pop
aad
repnz
sbb
repnz
mov
xchg
push
pop
pop
in
push
test
mov
jmp
sbb
cmp
inc
lahf
gs
push
mov
xor
loope
popa
mov
push
push
pusha
fisubrl
mov
push
mov
movlps
in
jp
sub
imul
add
cs
in
and
fnstcw
push
in
insl
push
das
xchg
pop
jns
inc
sbb
int3
xor
mov
mov
sbb
sbb
push
mov
aaa
aam
xor
and
push
sar
sub
or
mov
jmp
outsl
mov
cs
adc
test
stos
dec
sbb
mov
ret
xchg
and
add
xchg
out
arpl
scas
rolb
pushf
ljmp
lods
mov
sbb
lods
xchg
addr16
xbegin
loope
pop
dec
aas
or
fsubr
repz
jb
roll
cli
lret
ret
sub
in
mov
mov
pop
and
sahf
or
fiadds
dec
xchg
pushf
pop
es
enter
xor
lret
or
sub
scas
push
ja
fisubs
or
sub
popf
jnp
sbb
testb
sbb
repnz
cmp
pop
mov
jge
pop
imul
rcrb
and
stc
fstp
loop
test
daa
and
xor
or
movsb
sub
mov
decl
movsl
push
out
mov
lods
outsb
push
idivb
mov
loopne
lret
call
repnz
not
mov
jnp
or
push
add
scas
xor
mov
insl
xor
cld
sahf
fcomip
lcall
daa
out
xor
rol
lret
test
lods
popf
hlt
add
addr16
fnstsw
pushf
inc
mov
inc
clc
xchg
cmp
xor
notl
and
repnz
pop
in
jne
lahf
push
inc
add
jp
inc
jo
rol
repnz
push
fildll
call
out
into
lods
fwait
sub
out
xchg
leave
cmp
mov
pop
mov
ret
enter
cli
cmpsl
jno
pop
push
sbb
rcrb
arpl
adc
push
in
aaa
xor
pushf
pushf
add
fisubrl
aaa
popf
jnp
sti
push
or
add
cmpl
fildl
repnz
dec
xor
test
and
test
mov
in
cwtl
or
hlt
jmp
imul
adc
lret
test
fsubrl
fdivl
and
mov
mov
ja
aad
dec
je
inc
fidivrs
xchg
add
push
test
mov
jns
adc
aas
cltd
jne
lds
stos
inc
jno
ljmp
push
loopne
fwait
cli
loop
out
mov
xchg
nop
icebp
push
in
xor
clc
xchg
push
lcall
imul
add
cmp
add
insb
pop
aaa
roll
sub
mov
inc
arpl
imul
and
fbstp
iret
push
jnp
pushf
dec
cltd
push
add
or
ljmp
test
cmp
imul
lock
dec
mov
mov
sub
sbb
jmp
ret
hlt
jae
mov
cmp
mov
pop
mov
gs
jle
jge
ja
insb
push
cltd
test
lret
shll
sarl
lahf
out
popa
dec
fdivs
dec
sbb
inc
mov
in
imul
jecxz
fldenv
stos
call
gs
pop
jecxz
inc
insl
xchg
repnz
add
lea
imulb
insb
jae
popa
adc
mov
iret
ficoml
mov
xor
xchg
xchg
loop
fcoml
mov
rol
and
addr16
gs
push
adc
xchg
adc
in
stc
inc
xor
shr
pusha
faddl
jns
pop
ljmp
push
or
mov
daa
imul
xor
out
cmp
xchg
shl
or
sbb
bound
shlb
out
cwtl
lock
pop
mov
aaa
dec
decl
inc
inc
jae
ljmp
addl
pushl
lods
xchg
push
data16
sbb
lret
icebp
push
push
adc
cs
ds
scas
cmpsl
push
xor
add
clc
iret
jp
sbb
loopne
or
add
sti
and
in
sarb
sbb
fs
iret
push
add
in
je
imul
add
stos
mov
mov
and
bnd
fiaddl
inc
adc
or
fcomip
push
push
shrb
fcmovnu
jnp
and
stos
push
or
add
xchg
lock
in
jne
fiaddl
aam
hlt
cmp
es
fs
mov
cmpsl
ss
mov
inc
pop
sbb
push
daa
cltd
aas
inc
rorl
pop
sub
xchg
xchg
inc
dec
cltd
adc
adc
dec
or
inc
sbb
arpl
bound
jl
push
pushf
jns
mov
lcall
fisttpll
jg
sbb
push
inc
xorb
repnz
call
push
push
sbb
stos
gs
add
rcll
mov
and
stc
lcall
mov
dec
sahf
mov
int
inc
and
mov
xor
jle
divl
popf
cld
mov
in
mull
into
jmp
cmp
shlb
shll
mov
das
sub
hlt
rol
xchg
pop
sub
jb
mov
push
xor
mov
sub
mov
pop
hlt
mov
adc
inc
lea
test
sub
loop
shll
daa
xor
mov
sahf
das
jae
and
repz
push
mov
mov
sub
adc
jno
hlt
mov
inc
enter
pop
sub
xchg
pusha
push
push
ljmp
ja
mov
inc
out
cli
sub
lret
js
cs
jns
mov
subb
xor
rolb
push
or
cmpsl
loop
or
popa
xchg
insl
lods
imul
mov
xor
mov
movsl
fsubs
in
and
test
inc
jno
jmp
outsb
call
adc
clc
sahf
scas
nop
cmp
add
stc
add
mov
rorl
add
push
mov
xor
cmp
jmp
out
in
je
mov
mov
mov
leave
test
dec
mov
cmp
adc
xor
aaa
ss
movb
sbb
cltd
inc
add
mov
cmp
jle
repnz
loope
into
push
push
dec
ljmp
loope
mov
les
pop
fsubs
mov
bound
push
cs
fs
pop
xchg
sub
mov
mov
cwtl
add
cmp
sub
push
std
dec
dec
cmp
adc
cmc
xchg
test
scas
mov
icebp
and
push
xchg
shl
fwait
roll
lret
ljmp
xchg
or
jmp
test
je
mov
mov
xor
mov
dec
scas
pop
push
dec
mov
add
call
ret
adc
inc
dec
pop
ljmp
jl
and
or
ret
mov
ja
add
daa
mov
into
cltd
stc
andl
add
test
pop
add
mov
aas
push
popa
or
lods
fbstp
rcrb
negb
data16
add
push
or
imul
mov
out
dec
sbb
stc
pop
iret
adc
lret
mov
and
and
out
or
lret
cmp
cmp
sub
mov
subl
cmp
mov
dec
scas
in
push
pushf
cmp
aad
mov
popa
xchg
and
sbb
stos
and
imul
bound
ret
mov
lods
outsb
mov
mov
fimuls
jecxz
scas
movsb
hlt
fcmovnu
ja
sbb
rorl
int3
xchg
add
pop
cmp
or
xchg
jb
sub
push
popf
fdivrs
dec
mov
xorb
iret
push
jp
inc
sub
js
orl
aad
into
imul
cmp
xor
pop
movsb
imul
sbb
inc
mov
dec
mov
in
shr
mov
loopne
adc
data16
arpl
cmp
loope
in
mov
sub
popa
in
out
dec
push
gs
pop
xor
movl
ficoms
sahf
sub
cltd
and
add
mov
mov
jnp
sbb
sbb
andb
ffree
dec
xlat
loopne
cmpsb
lcall
ret
sbb
jbe
rcrl
push
xlat
test
push
fildll
mov
dec
push
loop
daa
loopne
mov
and
test
jp
aad
divl
adc
mov
add
stos
sbb
jo
daa
repz
ret
mov
push
xchg
idivl
mov
lock
cs
cmp
or
shll
data16
push
hlt
or
outsl
adc
clc
cs
inc
xlat
adc
int
test
shll
push
sub
pop
push
cmp
push
or
xor
std
push
mov
lock
sbb
lock
fs
jnp
push
mov
test
xlat
arpl
sbb
testl
rcll
in
jmp
stos
inc
out
dec
mov
stos
push
popf
mov
cli
xor
test
loopne
dec
mov
mov
dec
pop
shlb
xchg
js
sbb
mov
icebp
fs
ds
sbb
pop
add
rcrl
pop
scas
cmp
adc
push
cld
add
adc
test
out
xchg
push
cmp
inc
imul
rcl
jle
jne
add
sbb
inc
scas
push
in
xor
mov
pop
xor
gs
inc
cmpsb
push
adc
and
push
hlt
dec
int3
loop
mov
xor
call
fdivl
lahf
push
push
or
aaa
dec
jns
rol
stc
ss
xchg
cwtl
subl
pop
das
push
jae
push
jg
int
mov
sar
add
add
xchg
jg
mov
cltd
fimull
cmp
jmp
mov
out
mov
pop
lods
dec
test
sahf
jp
mov
fmuls
ja
repz
imul
xchg
xor
sub
sub
scas
lds
xchg
jnp
xchg
cmc
out
pop
sub
sbb
movsl
xor
sbb
mov
or
mov
lods
repnz
or
daa
cmpsl
fdivr
sub
les
ds
roll
popa
xor
outsl
insb
jnp
stc
cld
cmpsl
js
pop
jg
mov
push
push
pop
add
in
lret
cmp
daa
and
jne
mov
xor
mov
test
jp
adc
dec
cld
lcall
test
pushf
bound
dec
jge
mov
pop
test
insb
arpl
ret
cmpsl
fstpl
movsl
mov
or
aaa
enter
cmp
xchg
cmpsb
aad
es
shrb
sub
xor
enter
dec
stos
leave
push
fldl
repz
mov
lods
adc
push
lret
sar
cmp
add
fsubrs
pop
data16
cmp
aaa
mov
sub
stc
movl
test
pop
adc
adc
sbb
xchg
dec
lahf
inc
or
or
xorl
mov
mov
sbb
fs
mov
decl
das
or
fldcw
inc
adcl
pop
mov
aas
jp
orl
mov
push
lods
push
cmp
jnp
adc
push
rorb
or
push
mov
enter
stos
das
mov
cld
cs
xchg
es
add
inc
pop
dec
fimuls
inc
xor
lods
jge
mov
pop
pop
mov
sub
out
inc
cmpsb
push
mov
inc
and
inc
pushf
outsl
test
sarl
dec
add
not
and
cmp
dec
mov
repz
sti
clc
mov
jns
sub
test
cmp
xchg
push
leave
push
push
cmp
inc
mov
dec
insb
sahf
fwait
sbb
inc
sbb
add
popa
dec
fstps
sbb
leave
clc
loopne
mov
mov
xchg
icebp
lret
and
adc
or
adc
mov
pop
mov
cmp
roll
shrl
mov
inc
cmp
adc
sbb
inc
jns
fimull
loope
mov
and
cmp
test
cld
jecxz
adc
pop
inc
lods
pop
shrb
and
add
pop
xchg
fdivrs
jmp
push
shlb
push
xchg
mov
test
pop
icebp
mov
or
sbb
shll
pop
pop
dec
std
xor
stc
push
insb
sub
bound
fst
ret
cmpsb
fstpl
les
sti
subb
jle
sub
push
jmp
int3
cmp
add
adc
sbb
cwtl
sub
xchg
jmp
xor
cmp
or
outsl
and
mov
xchg
mov
dec
cmp
push
dec
int
loope
test
je
dec
shlb
pop
divl
xor
ss
pop
dec
cmp
in
xchg
jne
int3
cmp
mov
test
push
filds
test
movsl
xchg
push
xor
pop
add
movsl
xor
loope
push
test
xchg
cmp
in
cmp
arpl
lret
nop
lret
iret
cmp
sub
lds
inc
dec
loop
push
pop
mov
fnstcw
lea
push
in
jb
xchg
jb
stos
fistl
adc
lret
jp
jns
das
lret
mov
std
adc
pop
in
jmp
test
jmp
jo
sbb
push
iret
jecxz
call
mov
cmp
push
and
mov
xchg
adc
fistps
hlt
push
ds
lods
cli
mov
pop
loopne,pt
jb
jg
or
rol
sbb
inc
out
cmpsb
or
and
js
testb
fsubp
ds
pop
fidivl
fildl
mov
jp
ljmp
and
jecxz
add
idiv
pop
xor
fwait
xchg
jb
pop
pop
jge
scas
int3
xchg
pop
imul
out
jle
out
mov
push
jns
cmp
out
enter
mov
sbb
mov
shll
adcb
pop
mov
sub
cs
push
xor
insb
mov
mov
outsb
push
fs
fs
cltd
cld
dec
fdivs
out
sarb
into
xlat
mov
inc
clc
adc
pop
mov
test
insl
inc
inc
into
bound
or
loope
in
lods
xchg
adc
mov
push
in
int
fdivl
daa
jns
popf
test
inc
leave
cmp
loop
push
fwait
jl
scas
pusha
mov
scas
in
jns
lds
sbb
xlat
dec
ret
insl
jp
pop
pop
scas
pop
mov
sbb
pop
dec
outsb
cmp
test
mov
js
imul
lcall
or
bound
pop
xor
std
daa
mov
aaa
mov
mov
mov
adc
mov
jmp
jle
mov
dec
pop
cmpsl
mov
cld
sbb
and
add
adc
or
cmc
xor
scas
std
push
ja
and
bound
cmp
add
jb
cld
scas
sbb
lea
mov
or
dec
push
dec
mov
pop
pop
jno
out
cmp
outsb
clc
clc
iret
mov
pop
push
loopne
in
out
pop
out
jbe
add
fbld
adc
stc
lds
movsb
insl
sbb
jmp
adc
adc
or
jmp
and
mov
aad
divl
adc
imul
std
jnp
mov
movsl
pop
or
and
inc
jecxz
push
push
lret
pop
bound
lea
mov
andl
pusha
ret
iret
dec
sbb
out
mov
fisttpl
adc
add
or
leave
adc
jae
cli
xor
adc
mov
fstpt
stos
test
and
mov
loope,pn
cmp
dec
std
in
cmpsl
fisttpl
loopne
je
out
xchg
sub
xchg
lock
pop
arpl
adc
inc
and
daa
jbe
in
test
shrd
test
mov
fs
call
sub
pop
add
jns
add
scas
jbe
push
inc
dec
sub
in
or
hlt
add
or
sbb
shrb
push
je
pop
inc
sbb
pushf
xor
xlat
stos
sbb
and
lods
mov
lods
sti
clc
in
sub
js
mov
iret
rcrl
aad
pop
xor
adc
mov
mov
sarb
mov
lock
cmc
inc
aad
dec
mov
add
jmp
mov
repz
add
fnsave
mov
rorb
cli
in
mov
mov
or
cwtl
ljmp
stos
jbe
imul
loope
inc
cld
cs
cmp
out
aad
fs
or
scas
dec
cmpsl
dec
or
pushl
inc
xor
test
mov
gs
fisttpll
hlt
lcall
stc
into
test
nop
pop
arpl
jnp
add
mov
jnp
ret
mov
cmp
in
jl
dec
push
pop
out
aad
mov
hlt
push
cmp
int3
pop
xchg
mov
jo
pop
mov
dec
test
adc
push
jne
xchg
iret
add
mov
insl
cmpsl
dec
jp
test
inc
mov
das
inc
rcr
sub
jecxz
outsb
sub
push
jae
mov
xorl
cmp
pop
std
pop
lods
lea
scas
cmp
sbb
mov
inc
mov
movsb
adc
mov
adc
jae
mov
cli
shrb
jb
out
push
popf
shlb
mov
sti
fidivs
jge
aas
jp
mov
ss
in
rcrb
loope
dec
and
shr
stos
movsb
cmp
push
in
adc
sbb
das
js
insb
hlt
pop
inc
sbb
sub
and
add
adc
dec
outsl
scas
xchg
pop
cmpsb
insb
jg
pop
and
outsl
jo
cmpsl
push
dec
push
loop
push
gs
les
cs
orl
mov
fbld
mov
int3
sti
stos
pop
aaa
inc
std
sub
add
inc
push
or
fs
push
or
sbb
mov
cmp
or
push
jmp
jb
sub
mov
mull
cmp
shr
xlat
sbb
rcl
mov
int3
daa
das
leave
mov
adc
and
xchg
nop
jg
int
jp
add
in
push
sub
inc
stc
mov
icebp
scas
cwtl
inc
stc
imul
inc
and
repnz
push
add
adc
hlt
fdivp
in
mov
hlt
push
aas
mov
xlat
aam
jne
les
mov
push
mov
inc
fimull
es
cmp
inc
stc
bound
or
enter
push
sub
push
dec
std
test
daa
int
jg
test
cwtl
push
pop
cwtl
mov
adc
push
ret
mov
pop
in
lods
cmpsb
cs
inc
inc
cmp
xchg
jmp
sbb
or
leave
add
adc
dec
adc
cmpsb
pop
dec
adc
gs
mov
lahf
cmp
dec
out
data16
outsl
out
and
imul
pop
cmp
xchg
movsl
data16
or
scas
mov
pop
fistpll
pop
sub
pop
pop
test
pop
pop
lock
call
popf
subb
dec
aaa
add
lahf
sarb
fldenv
lock
jge
lcall
inc
ret
pop
cmp
dec
ret
repz
es
in
push
xchg
and
jo
test
adc
cmc
and
data16
insl
imul
pop
dec
jae
cwtl
cmp
out
inc
and
sub
shll
arpl
or
add
mov
shrb
push
sub
into
pop
mov
pushf
jne
adc
imul
fs
mov
dec
das
outsb
adc
pop
xorl
dec
std
add
push
je
xorb
lock
in
adc
arpl
out
les
add
shrl
add
sbb
sarl
repnz
lds
ja
pop
adc
pop
mov
aam
push
dec
bts
inc
fwait
es
push
sahf
imull
loope
lods
jmp
mov
leave
jns
xchg
aad
mov
jae
dec
xchg
outsb
shrl
inc
jb
jg
notl
pop
hlt
pop
icebp
mov
pop
sub
enter
mov
sbb
cmpsl
lock
mov
pop
mov
ja
push
stc
test
push
dec
fwait
cs
sbb
inc
push
pop
push
jle
mov
mov
and
js
sub
mov
pusha
xchg
fisttpll
lds
add
jbe
ds
jno
scas
int
push
adc
stos
inc
pop
add
sbb
sbb
push
shlb
mov
fbstp
iret
add
in
push
test
lods
xor
pop
out
mov
add
jne
adc
scas
ljmp
in
pop
mov
xlat
fcmovne
jge
es
ljmp
mov
popa
jle
inc
jae
loopne
bound
cmpsb
sub
sub
inc
int3
pop
outsb
lea
js
xchg
inc
dec
xor
jo
stos
maxps
test
jo
sub
inc
push
mov
mov
mov
aas
mov
lret
pop
stos
sbb
repz
sbb
mov
loop
mov
scas
mov
dec
adc
cli
add
inc
push
ja
outsb
mov
nop
ret
or
sbb
leave
and
inc
cmp
sub
xchg
or
lods
fldcw
mov
pop
jg
std
push
xor
sbb
lret
cmp
test
push
cwtl
inc
mov
push
jmp
lcall
pop
mov
mov
and
js
repz
mov
mov
andl
call
test
lret
jmp
pop
xor
stos
sti
mov
push
into
outsl
clc
cmpl
sub
mov
cmp
cmp
or
cltd
aaa
sbb
sbb
dec
push
clc
pop
popl
pop
cmp
outsb
sub
ljmp
mov
out
pop
in
popa
outsl
movsl
imul
jg
push
lcall
xchg
shlb
das
xor
pop
xor
jg
sub
jecxz
test
push
daa
jno
push
adc
mov
in
inc
icebp
jecxz
scas
data16
leave
pop
jbe
mov
mov
rcrl
mov
out
or
out
int3
fadds
sbb
outsl
js
arpl
roll
jge
pop
mov
xchg
aam
add
sub
cs
and
clc
dec
ds
cwtl
stc
mov
jo
pop
in
dec
xchg
mov
jle
push
loop
mov
ljmp
jl
shll
push
pop
pop
scas
inc
mov
arpl
push
call
add
fwait
inc
subb
lcall
xchg
fxch
cmp
lds
cs
mov
mov
loope
and
xchg
adc
dec
lahf
fsubl
mov
nop
je
sti
stos
ret
faddl
xchg
cli
sub
ficoml
adc
mov
adc
cld
bound
lock
movsl
cltd
mov
adcl
jbe
xchg
mov
xor
adc
addl
xlat
fcom
push
sub
rorl
add
jle
jl
rep
ret
push
mov
fsubs
xlat
jge
mov
in
sub
dec
cmp
xor
outsb
flds
aaa
ret
outsb
enter
mov
and
ja
daa
mov
jl
fdivrl
mov
popa
mov
push
pop
xchg
mov
adc
push
gs
mov
test
jmp
mov
ss
adc
cmp
cmp
loopne
fcom
repz
ljmp
cli
inc
scas
mov
xor
mov
push
adc
rcrb
pop
jle
and
inc
mov
mov
xchg
dec
roll
cmc
or
lahf
mov
test
jmp
push
cwtl
cli
and
sbb
jns
in
jne
mov
test
mov
add
mov
test
cmp
or
add
mulb
gs
mov
pop
hlt
cmc
das
adc
jne
imul
aam
pop
fsubl
dec
jns
adc
jo
mov
jmp
orl
loopne
es
xor
pop
cmp
push
aas
int
jle
push
or
dec
sub
lods
push
push
icebp
push
mov
lret
and
mov
xlat
cmpsb
inc
ljmp
and
outsl
pop
js
adc
mov
cmp
shll
inc
push
cli
flds
push
aad
lret
jmp
push
cmpsl
dec
push
dec
adc
fadd
out
mov
cmp
jl
push
in
sarb
sub
jno
xchg
pop
rorb
int
rorb
out
call
mov
out
xor
push
xchg
gs
push
inc
scas
js
int
bnd
je
jbe
add
xchg
rolb
popf
loope
xchg
sti
mov
ficoms
shll
xchg
pop
hlt
mov
repnz
push
fwait
ret
dec
arpl
clc
mov
dec
sbb
jl
arpl
int3
mov
loopne
pop
jg
dec
inc
mov
sbbb
jnp
les
ss
int3
pop
and
and
repz
jbe
cvtdq2ps
xchg
imul
neg
push
sub
mov
lcall
mov
mov
arpl
sbb
shlb
aam
sbb
cmp
cmp
test
or
mov
in
fildl
cmovb
add
cmp
ljmp
out
cmp
adc
mov
add
xchg
aaa
pop
in
sbb
imul
jo
add
add
ss
mov
cmp
aas
jb
fbstp
pop
lods
fldt
jo
int
and
out
or
mov
xchg
jge
repz
mov
in
popa
push
stos
test
sub
out
rolb
adc
rolb
and
pop
inc
les
cwtl
adc
xchg
mov
mov
pop
sahf
dec
adc
fadd
mov
arpl
and
cmp
pop
push
out
add
lock
jo
mov
sar
xchg
sbb
xchg
xor
sub
repnz
or
jb
cltd
or
push
pop
js
mov
add
cmp
lds
mov
das
mov
ss
clc
fadds
mov
fadds
shlb
fdivrs
hlt
inc
mov
lahf
cwtl
aad
push
xchg
fildl
adc
pop
scas
dec
sbb
mov
fiadds
lcall
out
adc
mov
or
out
pop
stos
fsub
xchg
inc
pop
mov
sub
sub
or
dec
daa
ret
inc
mov
jmp
ds
dec
ret
je
mov
ds
sbb
sahf
mov
mov
push
sbb
mov
cmpsb
jg
js
cmpsb
or
jle
pop
pop
mov
sub
adc
into
fwait
jno
adc
push
or
push
ds
push
les
pop
popf
fidivs
sbb
add
into
xchg
jle
outsl
mov
nop
movsl
mov
sbb
out
push
mov
pop
adc
mov
sbb
xchg
andb
pusha
push
and
and
push
xchg
xlat
fiadds
push
sbb
push
or
jae
xchg
and
push
inc
mov
fcoms
dec
sbb
adc
mov
mov
insl
cmp
mov
test
int
arpl
xchg
cmp
mov
push
push
sub
push
inc
sbb
mov
dec
mov
mov
or
mov
dec
fiaddl
push
repz
minps
adc
ret
test
inc
aam
ds
int3
push
movsb
jb
push
xchg
daa
gs
mov
push
add
pusha
in
stos
jb
ror
shr
mov
sbb
inc
or
daa
cs
jl
inc
or
push
or
ss
mov
mov
or
push
scas
test
xor
push
bound
clc
push
adc
mov
pop
mov
rolb
lods
push
mov
dec
out
aas
in
push
mov
std
loop
ss
insb
les
pop
lock
dec
or
scas
test
push
xchg
or
sbb
mov
sub
sbb
mov
fisubs
mov
and
inc
pop
clc
test
je
adc
imul
es
into
aad
loop
ret
dec
mov
sbb
jnp
icebp
dec
rcrl
adc
imul
scas
inc
test
push
ljmp
sub
and
cmc
int3
hlt
ret
lods
and
push
sbb
jno
outsb
mov
jo
push
mov
fcompl
add
test
xchg
mov
dec
fldcw
gs
add
sbb
mov
and
into
mov
in
fisubrl
jle
adc
aad
aas
sub
inc
jmp
pop
fstpl
mov
lods
pop
add
jge
jmp
jo
lret
movsb
cmp
xor
outsb
int
adc
iret
pop
pusha
jns
add
mov
jle
es
lahf
xchg
repz
imul
and
jmp
hlt
mov
push
mov
mov
xchg
popa
pop
push
aaa
fldenv
movsl
sub
push
mov
sbb
xchg
jmp
ret
cmp
rclb
movl
and
xor
mov
test
mov
inc
cwtl
jne
mov
daa
movsl
or
lds
adc
adc
aas
test
sarb
sub
mov
sahf
cmc
ss
pop
add
adc
xor
cwtl
xor
push
test
nop
cmp
cmpsl
rorb
push
pop
mov
cmp
ficoms
push
repz
je
mov
mov
outsl
sub
jle,pn
movsl
sub
mov
push
push
inc
shl
cmpsb
js
jle
add
sti
insb
push
dec
jae
icebp
rorb
jmp
daa
jecxz
nop
push
in
pop
in
mov
es
fcmovnu
sub
inc
jmp
xchg
sbb
add
dec
sub
ja
jns
loop
pop
push
cmp
shll
pop
xchg
mov
mov
out
cmc
xor
rolb
lea
push
add
fwait
enter
mov
int3
nop
push
mov
divl
scas
ljmp
loop
fnsave
xlat
loop
cli
adcb
fwait
jb
mov
mov
dec
pushf
shlb
aas
mov
jle
dec
cmp
fwait
inc
xchg
xor
dec
cmp
pop
enter
jae
push
push
push
mov
mov
dec
cltd
ja
fisubs
shlb
adc
push
addr16
cmpsb
loop
jns
dec
xchg
sub
cmp
shl
or
das
xchg
sub
ficoml
hlt
pop
push
or
push
loope
mov
stc
xchg
mov
pushf
dec
inc
ljmp
push
mull
retw
mov
jae
icebp
jmp
repz
and
cmp
rolb
and
mov
fscale
lahf
fwait
lods
jnp
lret
movsb
xchg
mov
dec
mov
sub
punpcklwd
out
stos
popf
enter
std
stos
jle
xchg
pop
adc
imul
scas
rorl
mov
mov
push
inc
jge
ja
lret
fstl
dec
fldln2
in
pop
jg
pop
mov
mov
bound
ror
or
mov
cwtl
push
int3
sub
call
or
jle
push
cmp
jge
ljmp
mov
adc
dec
mov
mov
out
cwtl
sahf
or
xor
loop
and
clc
rolb
aam
cmp
dec
push
mov
adc
mov
mov
pop
push
mov
or
mov
adc
or
push
jl
rclb
or
mov
inc
jg
pop
pop
ljmp
add
dec
insl
es
jne
push
mov
add
push
mov
stos
adc
loope
ljmp
or
fcomps
ljmp
xor
ss
mov
pop
negb
repz
or
in
mov
xor
fs
popf
xchg
shll
pushfw
aaa
sahf
jbe
jmp
adc
push
mov
pushf
iret
mov
jbe
ja
and
fwait
sbb
hlt
xchg
in
in
and
inc
and
pop
pushw
add
or
sarb
mov
fsubrl
in
mov
enter
inc
jle
test
ror
addr16
mov
cmpsl
pop
jg
push
mov
cmp
in
insb
mov
stc
push
mov
jp
add
inc
xchg
jmp
cwtl
popa
lods
push
mov
insb
and
ljmp
outsb
js
aam
sarb
fdivrl
mov
push
sub
adc
mov
cltd
dec
adc
out
insb
test
sub
popf
repz
icebp
xor
mov
jo
mov
pop
xor
lea
sarb
out
jae
and
push
pop
imul
jge
mov
dec
imul
mov
dec
lret
and
int3
testl
cmpsb
sub
sub
stc
lar
adc
and
cmpsb
cwtl
sti
aad
add
fsub
aam
adc
call
push
pop
mov
imul
out
push
popa
insl
mov
enter
gs
dec
testl
je
push
push
outsl
fcmovnbe
aam
add
insb
mov
pop
xor
jae
roll
in
mov
pusha
rclb
pushf
pop
clc
inc
leave
xchg
jecxz
ljmp
inc
pop
push
movsb
mov
jl
pop
push
ret
jmp
test
mov
cmp
jle
cld
into
mov
dec
pop
push
icebp
cs
or
lock
lret
shrb
fwait
stos
sbb
sub
cmp
sti
xor
sar
pushl
mov
mov
adc
hlt
lds
mov
xorb
icebp
arpl
test
addl
js
cmp
xchg
ss
and
and
add
out
xchg
xchg
bnd
in
and
mov
repz
les
pusha
sub
lds
cmp
ja
inc
loope
inc
sbb
hlt
pop
sub
arpl
mov
pop
fcmovbe
sub
dec
jno
dec
and
out
jg
scas
cld
sbb
inc
fwait
pop
mov
xor
add
lahf
xor
pop
shl
sbb
jl
push
hlt
add
outsl
or
inc
popa
inc
fbld
ds
mov
push
cmp
xchg
gs
jge
mov
int
mov
cmpsb
dec
leave
lock
les
mov
sub
int3
popa
insb
imul
xor
sti
push
insb
mov
and
popa
scas
fcom
leave
stos
and
add
xchg
push
sbb
sub
xor
pop
sbb
dec
insl
xchg
cmp
pop
mov
jle
sub
push
xchg
stos
mov
xor
popf
pop
nop
lret
ljmp
adc
gs
xor
xor
std
mov
xchg
add
pop
lret
inc
pop
fs
or
ret
dec
add
inc
cs
daa
or
jle
jb
sub
push
fdivrs
xor
push
ret
mov
jge
jle
jnp
cmp
push
mov
pavgb
dec
sub
adc
in
pop
mov
sbb
jecxz
cmp
cmp
xchg
sbb
stos
and
aam
arpl
pop
inc
add
sub
cmp
je
outsl
fcomp
out
xchg
mov
adc
in
cmp
je
add
push
push
ljmp
mov
push
in
jmp
repz
push
xchg
pop
sub
loopne
jmp
push
push
jae
ljmp
push
lcall
out
pop
cwtl
cld
test
test
icebp
mov
push
daa
adc
cmpsb
adc
mov
out
jg
loop
mov
push
mov
ffreep
std
lcall
pop
shll
mov
mov
stos
loope
mov
pop
dec
inc
rcrl
xchg
mov
xor
sbb
sub
adc
enter
xor
loop
cmp
push
and
test
jecxz
subl
fst
out
inc
mov
in
dec
xchg
sbb
stos
ret
xchg
aam
pop
inc
test
pop
sbb
nop
addr16
and
popf
inc
inc
repnz
shll
pushf
mov
fidivl
cmp
mov
adc
loopne
mov
mov
add
pushf
sbb
test
mov
insb
stos
mov
out
loop
jmp
cmp
pop
mov
test
cmpsl
inc
add
decl
cmp
xor
popf
mov
outsb
adc
fnstsw
mov
or
mov
dec
pop
rcll
dec
add
xchg
inc
std
out
sub
jno
jg
or
sub
into
out
xchg
jnp
mov
std
mov
sbb
lret
in
insb
loope
mull
xchg
js
mov
pop
inc
sub
cmp
mov
mov
jae
shlb
cld
or
xor
cmpsb
adc
pop
sarb
aas
andb
out
in
hlt
jb
cmc
or
and
xor
jno
add
shl
mov
pop
pop
push
xor
call
jns
cmp
into
pop
aad
dec
nop
or
adc
pop
jg
cmp
push
in
cs
push
idivl
dec
mov
outsb
cmp
icebp
pop
fs
mov
push
push
or
mov
or
je
mov
push
mov
push
ljmp
and
push
leave
lods
xor
mov
jnp
cmp
pop
or
jns
push
xor
insl
inc
mov
jo
je
mov
xor
adc
dec
sahf
fwait
ret
lods
push
mov
insb
sbb
out
jl
leave
lea
jae
pop
inc
inc
or
xchg
push
add
test
cmp
movsb
es
mov
sbb
sub
cmp
std
push
nop
frstor
mov
out
fidivrs
jge
ljmp
jae
fbstp
push
xlat
mov
pushf
jge
mov
lds
push
test
enter
mov
and
mov
int3
sbb
ret
hlt
adcb
test
jbe
or
iret
outsb
stc
inc
inc
sbb
add
rcrl
je
cmp
filds
dec
sub
lret
pop
push
jp
ret
mov
jle
mov
fidivl
push
js
jns
mov
xchg
mov
mov
or
lods
dec
jp
mov
pop
add
ljmp
sub
filds
push
shrl
mov
mov
jbe
xchg
aas
daa
xor
mov
ljmp
out
xor
pop
ja
cmp
std
dec
icebp
inc
fnstsw
push
mov
dec
push
pop
sub
mov
jecxz
psllw
shl
sbb
out
shrl
lods
sbb
cmc
insb
in
roll
xchg
mov
clc
clc
adc
ret
js
pop
pop
inc
nop
repnz
sbb
pop
mov
test
pop
jae
ljmp
mov
call
mov
test
imul
inc
xor
inc
pushf
xor
shl
jmp
test
popa
mov
push
jle
or
lret
subb
mov
xor
xor
outsb
or
pop
sbb
dec
xor
pop
mov
pop
stos
inc
and
jl
push
pop
sahf
sti
aaa
call
mov
xorl
icebp
loopne
idivb
ret
xchg
lcall
add
aam
std
jns
or
call
fbstp
jg
dec
sbb
sub
fistps
jne
cmp
pmaxsw
mov
mov
or
push
ret
pop
dec
movsl
or
and
pop
adc
mov
clc
lret
inc
mov
cmpsl
lahf
cld
mov
inc
cld
cmpsb
mov
das
dec
insl
or
pusha
xchg
dec
sub
or
add
lock
mov
fdivp
sbb
jge
cmp
pop
jne
rcl
inc
add
fwait
ret
sub
push
data16
xor
sub
out
ret
in
mov
and
push
cmpb
dec
daa
or
push
fstps
sub
rorb
sub
mov
fisttpl
fists
dec
rorl
leave
loop
out
gs
xchg
cmpsb
and
sti
adc
in
aas
mov
shlb
add
addr16
imul
in
cmp
dec
shll
outsl
cmp
ds
test
jb
scas
dec
leave
add
sub
mov
repz
xchg
xchg
cld
mov
push
stos
jle
sub
pop
and
and
lds
and
clc
pop
jns
rclb
push
jl
in
std
mov
repz
jp
fildl
and
sbb
xor
mov
leave
jne
outsb
aad
rep
jmp
jmp
sbb
sti
jecxz
xor
adc
jb
dec
cltd
addr16
xchg
dec
push
lds
sbb
inc
inc
jmp
push
shlb
push
cld
adc
mov
mov
imul
je
cmp
lret
dec
cli
js
mov
fs
cwtl
xchg
jl
jb
add
stos
ds
mov
mov
movsl
mov
fwait
div
sub
int
adc
push
repnz
test
inc
stos
pop
bound
inc
insl
pushf
sub
or
jb
test
pop
insb
shlb
mov
dec
addr16
loopne
lcall
mov
mov
sbb
jo
sbb
icebp
pop
mov
xor
cmpl
sub
dec
inc
adc
call
dec
jle
adc
or
cld
pop
jle
jmp
out
push
test
add
mov
sbb
jl
adc
ja
out
jg
rorb
inc
pushf
cmp
push
and
xor
lret
push
inc
fistl
aas
and
outsl
add
push
mov
mov
xchg
inc
sbb
enter
jb
mov
adc
mov
push
stos
sbb
push
test
decb
ret
adc
cmp
sbb
outsb
dec
push
in
and
es
lret
ljmp
mov
into
dec
outsl
lea
inc
mov
xchg
mov
xor
je
pop
dec
inc
adc
in
jl
xorl
cltd
add
push
adc
cmpsb
icebp
outsl
dec
mov
xchg
lea
pushf
adc
popf
pop
sub
outsb
dec
imul
sbb
mov
jo
adc
movsl
aad
mov
movsb
mov
pop
lret
nop
push
lcall
daa
movsl
outsl
xor
in
xchg
and
pop
leave
add
cmpsb
jo
or
int3
pop
jmp
and
mov
ret
or
popa
outsb
pop
adc
xchg
loop
fisttpll
rcrl
es
sbb
or
adc
int3
leave
add
out
out
jle
sbb
mull
xchg
xchg
dec
dec
sahf
mov
addr16
dec
cmp
and
loopne
add
cmc
sub
pop
aas
stos
fisttpll
mov
ljmp
sbb
repz
mov
push
das
inc
lods
sar
shll
xor
aam
orl
cmp
sub
movsb
rol
rolb
xchg
and
jl
scas
clc
dec
fs
and
fldenv
cmpsb
notl
ret
pusha
adc
xchg
arpl
test
jge
arpl
mov
adc
inc
jnp
sahf
bound
aaa
jmp
pop
cmp
shlb
es
cmp
inc
stos
es
cmp
cli
jg
push
es
push
fwait
lods
rol
pop
sub
pop
fcompl
out
imul
fcoms
jae
adcl
daa
cwtl
mov
sub
inc
mov
sbb
mov
call
jns
sbb
andb
cmp
and
psubsb
xchg
xor
out
imul
adc
test
sbb
push
jnp
ds
nop
mov
arpl
jge
or
mov
js
jge
xor
movl
ds
mov
inc
rcrl
sbb
sbb
dec
rorl
xchg
push
push
test
daa
sub
roll
fdivl
les
mov
test
test
lret
std
test
loope
stos
and
data16
cwtl
and
adc
addr16
dec
add
mov
sbb
mov
jle
pushf
and
incb
pop
flds
pop
insb
pop
xorl
mov
cmpsl
shll
popf
sbb
sub
mov
sahf
aad
cmp
cmc
mov
xchg
mov
movsb
scas
mov
popa
sub
cltd
into
adc
nop
movsl
fldl
push
adc
jns
pop
push
xlat
loope
cmp
mov
cmp
sbb
push
ficompl
iret
xchg
xor
xchg
repz
outsb
jno
push
out
imul
dec
cmpsb
out
xor
mov
cwtl
jbe
inc
mov
fisttps
dec
and
mov
xor
jns
mov
mov
incb
cmp
xor
mov
and
or
adc
loopne
mov
pop
repnz
insb
addr16
mov
cmp
xchg
in
fnstcw
mov
daa
mov
push
loope
and
or
lcall
sub
sahf
or
repz
loop
repnz
int3
mov
inc
pop
sti
xchg
imul
arpl
adc
sub
test
push
dec
add
in
jge
ret
and
gs
out
scas
dec
outsl
out
pop
pop
push
push
sbb
sub
cmp
mov
cltd
mov
add
cmpb
mov
xor
jmp
sbb
mov
and
and
je
adc
and
xchg
cmp
adc
jmp
jne
fistpl
inc
outsl
dec
sbb
inc
sti
stos
jp
add
sarb
cmp
cmp
mov
dec
jle
sbb
loop
rolb
outsb
jno
push
sti
mov
sub
loope
cmp
out
repnz
jmp
xchg
and
jno
test
call
xchg
loopne
jecxz
and
movsb
out
pop
push
lock
jge
loope
ret
ljmp
push
push
clc
add
pop
hlt
mov
shl
cld
fdivl
adc
mov
push
xlat
or
in
xor
and
jg
andl
pop
mov
jo,pn
mov
push
mov
cltd
fs
daa
and
popa
icebp
mov
outsb
xor
mov
mov
fxch
push
fisubrs
adc
jmp
inc
or
xchg
in
aad
and
popf
sub
test
add
imul
lcall
cmp
sbb
pop
mov
jb
pop
bnd
movsl
cli
jle
and
jno
fistpll
fcmovb
cld
inc
jle
out
aaa
mov
add
mov
mov
or
lret
in
into
imulb
mov
je
mov
mov
jge
and
std
hlt
mov
ds
push
movsl
pop
test
sub
fistl
dec
movsb
push
cmp
leave
mov
mov
jno
mov
mov
fisubl
mov
mov
repnz
adc
mov
and
adc
inc
mov
notl
pop
or
pop
push
lea
add
sbb
push
and
pop
int3
mov
shrl
adc
inc
adc
fsubrs
mov
or
fiadds
mov
adcb
or
adc
sub
jecxz
inc
cwtl
sub
xchg
cmpsb
stc
and
scas
repz
sarl
pop
mov
fisubrs
mov
mov
cmp
push
sbb
in
cwtl
gs
mov
or
mov
fnsave
or
js
in
adc
adc
inc
mov
outsb
cmp
inc
insb
les
cmp
push
mov
rcrb
mov
push
ja
ljmp
std
addr16
out
stc
mov
jge
ficompl
stc
fwait
dec
xor
sahf
mov
pop
mov
or
pop
int3
xchg
stc
mov
jns
mov
and
arpl
lds
jno
jo
or
cmp
ret
mov
insl
test
xchg
lret
and
mov
es
adc
fisttpl
ret
jno
imul
outsb
jge
xchg
rclb
mov
in
mov
push
jp
sub
rcrl
test
cmp
ds
or
push
and
mov
inc
rcl
sub
mov
aad
dec
pop
in
jae
push
sbb
pop
lahf
jg
lcall
mov
mulb
in
sbb
mov
pop
aaa
test
lods
jge
cmp
insl
add
add
je
and
inc
or
fidivs
cld
fcmove
mov
jne
gs
jb
xchg
mov
mov
ret
xchg
shlb
stos
mov
or
and
insl
jne
push
pop
jne
testb
into
loope
inc
lock
out
test
sahf
lock
cli
mov
push
mov
fdivp
std
fs
xor
cmp
loop
lret
repnz
jle
out
push
sbb
shlb
jae
test
sbb
jle
and
mov
in
lea
neg
cmp
lret
insb
ja
xor
loope
push
push
lret
inc
adc
push
int
or
jp
sub
fistps
orb
inc
sti
pop
add
jl
repnz
cli
mov
sbb
call
sahf
add
push
xor
aam
pop
loope
gs
scas
xor
jo
out
rorl
xchg
lds
out
inc
fadds
aam
xchg
cmp
add
mov
push
fisubrs
mov
ljmp
gs
cs
scas
imul
mov
or
cmp
cld
aaa
add
fwait
nop
cmp
xchg
cwtl
add
test
test
inc
mov
mov
inc
ss
or
xchg
mov
pushf
cwtl
idivl
fists
decl
sbb
add
cmp
pop
pop
push
sbb
les
lods
aas
popa
xor
out
xchg
or
adc
mov
out
adc
jns
xchg
out
dec
sbb
or
add
and
fimuls
add
inc
adc
popf
es
pop
pushf
std
jno
data16
lods
sub
jo
jns
xor
cli
pop
dec
aas
outsl
outsb
scas
jmp
jg
enter
daa
inc
mov
andl
and
cmp
cmc
stos
shrb
loope
push
xchg
sar
push
adc
xor
adc
xor
in
ret
mov
daa
xchg
xchg
pop
aas
stos
flds
sti
pop
cmp
xchg
mov
sbbl
xor
jae
lret
jbe
aas
fucomi
loopne
lcall
push
dec
xlat
data16
push
gs
cmp
sahf
dec
or
pop
pusha
xchg
mov
int
stos
push
aaa
dec
pop
ds
js
ljmp
inc
jp
cmp
cmpsl
cwtl
das
xchg
cmpsb
cmp
and
syscall
pop
jbe
push
fsts
adc
in
dec
push
movsl
jbe
sti
add
inc
pop
repz
jmp
jp
xchg
push
fistl
xlat
es
jae
fidivrs
and
sbb
in
lahf
mov
add
repnz
push
aas
test
ret
arpl
cld
ljmp
and
popa
jl
push
fsubl
or
inc
mov
lea
je
pop
orl
jnp
push
stc
jno
das
xor
arpl
dec
lahf
ljmp
mov
out
mov
jle
std
imull
mov
adc
mov
push
andl
call
cmp
or
daa
test
ret
loopne
int3
jno
enter
jl
cmp
sbbl
mov
pop
push
sbb
jg
mov
or
xor
push
mov
xchg
push
jecxz
fld
movaps
movsl
jae
xchg
test
fnstsw
lds
insl
pop
sbb
inc
out
sahf
shll
sub
andb
inc
xchg
stc
inc
aad
jl
pushf
jno
add
mov
in
xchg
scas
mov
sbb
test
repz
pop
inc
mov
loopne
inc
mov
cmpsb
xchg
jo
mov
test
push
dec
pop
cli
arpl
ret
cwtl
push
xor
jmp
lcall
cmp
jno
aaa
xor
xor
or
pop
or
ss
mov
fisubrl
lcall
xchg
insl
arpl
sub
lock
out
insl
pop
push
mov
xchg
js
mov
jp
sbb
andb
into
dec
test
jge
dec
in
mov
mov
popa
jbe
dec
mov
jae
add
push
iret
bound
jmp
ret
sarl
push
push
sbb
sub
or
imul
lahf
data16
and
addr16
add
enter
popf
rorl
insl
imul
pop
mov
scas
scas
outsl
xor
dec
imul
hlt
ljmp
out
dec
jp
arpl
call
and
sbb
pop
push
adc
mov
or
or
nop
adc
xchg
mov
push
ss
xor
es
loope
es
push
lock
and
into
aaa
lcall
icebp
test
lea
icebp
push
ljmp
fsin
push
mov
subl
jbe
add
stc
repnz
or
sub
pop
aaa
xchg
jl
pop
jge
cmp
stos
jns
movsl
int3
data16
push
sti
into
lahf
pop
or
jecxz
mov
in
lcall
test
movsb
out
daa
mov
jne
in
ret
mov
sbb
pminsw
leave
cld
mov
jb
enter
sub
cmp
and
test
gs
add
jmp
out
push
or
and
aaa
outsl
xorl
jge
push
jns
push
xchg
aad
xor
leave
xchg
out
test
nop
in
das
xor
jle
push
cmp
cmp
je
movsb
xlat
cmpsl
cmp
mov
fnstsw
rcrl
jno
mov
imul
andl
fldt
and
jns
sahf
repz
pusha
gs
xchg
and
stos
jne
xchg
insl
pop
loop
mov
mov
and
int
sub
les
xchg
sbb
scas
rclb
js
fcompl
xchg
stos
leave
mov
std
xor
call
sbb
push
fbld
inc
jp
adc
fcoml
cmp
movsl
fwait
call
mov
mov
enter
or
and
insl
pop
adc
out
loop
mov
jle
sbb
sbb
add
pushf
outsl
jecxz
int3
gs
pop
dec
xchg
outsl
push
fadds
lcall
rclb
xchg
adc
pop
cmp
mov
or
shll
jae
addl
leave
outsl
fimuls
je
or
jge
sub
icebp
popa
push
dec
bound
aam
pop
push
repnz
xchg
aas
push
inc
sbb
push
mov
das
cmpsb
jns
jmp
mov
xchg
or
stos
xor
jmp
mov
sbb
les
adc
pushl
daa
insl
lds
sahf
fisttpll
scas
shll
or
ja
inc
sbb
sub
or
stos
xchg
insb
in
test
test
cmpsb
jl
xchg
xchg
lds
gs
js
popa
adc
cld
ja
push
cmpsb
mov
fwait
lcall
cmc
push
or
add
or
lcall
shrl
sti
dec
cmpsl
add
into
fld
cmpsb
scas
xchg
das
lret
jne
enter
adc
daa
push
les
in
xchg
xlat
lcall
xchg
sub
mov
enter
loope
mov
xor
shll
shll
cmp
in
fwait
loope
pop
sub
and
loopne
sub
lahf
cmpsb
test
jo
xor
push
iret
mov
mov
gs
mov
std
mov
adc
xor
xchg
mulb
fidivrl
cmp
sub
out
push
daa
cmp
mov
push
sbb
gs
mov
int
mov
add
jp
cltd
addr16
sti
xchg
mov
mov
mov
xchg
push
cwtl
push
xor
dec
adc
loopne
rol
pop
push
pop
in
movl
inc
push
mov
mov
inc
in
xor
xor
rclb
pop
xchg
mov
in
and
int3
fmull
ret
jp
mov
and
sub
sub
xor
das
jno
loop
adc
push
mov
fsubr
sbb
cs
or
scas
inc
inc
push
pop
pushf
and
jne
lock
add
cs
rcl
push
sahf
aad
pop
aas
sub
stc
sub
pop
add
inc
inc
jle
leave
sub
pop
inc
inc
jl
sbbb
adc
repz
stos
pop
pusha
add
adc
incb
xor
and
callw
push
call
mov
or
sahf
sub
mov
arpl
sti
xor
into
aad
jae
jp
adc
cmp
pop
cmp
mov
fdivrs
mov
jnp
cld
adc
sub
dec
xor
shll
pop
dec
inc
xor
inc
iret
shll
xor
in
je
bswap
lds
cmp
icebp
adc
jae
sti
and
and
sbb
into
cltd
repnz
mov
jg
adc
dec
xchg
mov
in
xor
nop
movsb
pop
iret
lea
loopne
cli
stos
in
clc
push
nop
pusha
out
mov
shll
push
and
adc
jbe
sbbb
mov
xor
mov
jnp
inc
imul
and
jmp
sbb
mov
and
pop
cmp
loop
sbb
aaa
adc
jle
call
jb
xchg
lret
xchg
dec
insl
add
repnz
stc
add
mov
or
xchg
cmp
mov
je
and
movsl
pushf
call
jno
cwtl
sbb
out
sar
and
push
out
xor
pusha
add
int3
sub
mov
popf
lret
push
dec
hlt
loope
sub
bnd
push
push
sbb
and
pop
add
sbb
push
xchg
cmp
sbb
push
repnz
dec
stc
push
lcall
jo
lea
mov
add
out
pop
pop
rcl
les
scas
mov
adc
shl
popf
stos
cs
or
repnz
lcall
iret
pop
jl
test
dec
test
loop
dec
movsl
jl
cmpsl
push
fsubl
test
sub
gs
pop
pop
jge
out
pop
inc
jno
jge
jae
adc
std
xchg
lret
and
ret
mov
xlat
mov
mov
adc
xchg
ja
in
mov
cmc
test
fsts
loope
xor
inc
ds
imul
jg
pop
imul
adc
xchg
repnz
push
add
inc
out
xchg
mov
mov
xchg
and
idivb
dec
xchg
inc
jae
arpl
cmp
repnz
mov
aad
sbb
lret
mov
lods
push
mov
dec
daa
xor
lahf
scas
ljmp
push
sbb
and
int3
push
aaa
jb
sahf
icebp
jo
sti
pop
dec
and
cmc
mov
lmsw
into
pop
mov
cmp
mov
adc
xlat
imul
pop
jecxz
or
cmp
rcrl
sti
push
popa
stos
mov
pop
push
lahf
aas
scas
or
mov
cltd
sbb
mull
cli
mov
xchg
jmp
sbb
pop
test
cmpsl
fmuls
jno
xlat
imul
sbb
cmpb
movsl
les
lret
ret
repz
cld
sahf
pop
hlt
inc
pop
jle
inc
jle
lidtl
push
xchg
mov
pushf
sbb
inc
mov
gs
add
mov
ja
cli
pop
imul
outsl
mov
mov
mov
push
cmpsb
test
adc
sahf
mov
jb
cltd
stc
inc
mov
xchg
sbb
and
push
mov
pop
sub
cmp
scas
mov
lods
xchg
sahf
inc
jno
add
xor
cltd
loop
cmc
fldl
gs
mov
test
ffreep
in
mov
movsb
int3
popf
add
xchg
push
insb
cmp
cmpsl
aas
adc
jb
scas
arpl
xor
fisttpl
or
aaa
int3
dec
or
arpl
sbb
mov
mov
xchg
shrl
and
nop
xor
push
and
scas
fsubl
xchg
pushl
ret
mov
and
fdivl
push
pushf
dec
int
jbe
and
clc
aam
push
cli
movsb
inc
xor
push
es
out
ljmp
jnp
outsb
sub
shll
dec
andb
shll
jge
xchg
testb
sbb
adc
xchg
pop
pop
out
sub
or
mov
lods
je
ja
jbe
mov
pop
aas
outsb
sub
inc
or
cmp
push
imul
loope
push
cmp
std
aam
and
pop
xchg
iret
sbb
jbe
pop
aaa
jecxz
fdivl
arpl
jns
pop
xchg
arpl
sbb
mov
xchg
icebp
leave
jle
outsl
sub
jl
mov
mov
fcomps
cmp
dec
sub
pop
aas
inc
push
mov
xchg
lret
mov
js
pop
xchg
cwtl
sbb
adc
sbb
cmp
add
cmp
aam
addr16
subl
push
in
inc
and
mov
sbb
mov
xchg
sbb
mov
nop
imulb
loopne
pop
xorb
pusha
mov
cmpsl
adc
into
lret
imul
test
adc
aaa
cmp
fimuls
add
sbb
xlat
sub
jae
push
hlt
out
les
xchg
clc
or
sti
loopne
stos
les
fisubl
or
call
lcall
cwtl
shll
test
sub
push
out
jle
dec
pushl
mov
mov
add
xchg
xchg
inc
add
mov
and
pop
pop
sub
add
popa
jge
jp
adc
loopne
xchg
gs
lret
sahf
imul
adc
lods
adc
push
push
icebp
pop
lock
mov
out
iret
in
fldcw
xchg
xchg
dec
adc
sub
lods
xor
add
ja
minps
sub
jle
xchg
push
mov
xchg
mov
cs
xlat
xchg
adc
es
xchg
out
xor
and
push
xor
mov
jno
mov
aam
pop
lret
das
bound
ds
and
mov
jne
sbb
or
add
adc
lret
neg
clc
and
mov
les
pop
arpl
jmp
fwait
bound
iret
pop
jg
out
out
and
loope
pinsrw
xor
mov
sti
mov
adc
ror
cmp
and
adc
cs
sbb
inc
pop
cld
out
sbb
repz
loope
or
fnstsw
imul
mov
push
out
ja
dec
sbb
pop
cltd
adc
push
ret
scas
pop
and
add
ds
cs
adc
sub
jnp
or
repnz
mov
call
pop
sbb
cmp
jl
lock
lret
mov
test
js
xor
sti
loop
jmp
movsb
jo
dec
jae
ljmp
icebp
or
sub
out
dec
or
mov
pop
js
nop
jg
mov
mov
outsl
dec
inc
xor
ja
repz
push
incb
push
imul
movsl
into
sbb
fimuls
jae
lds
and
inc
and
mov
cmp
mov
mov
les
test
shrb
test
push
aam
jl
stos
xchg
cmp
cmp
sub
sub
inc
mov
mov
and
lret
xchg
rcll
call
pop
ljmp
push
xchg
leave
and
sub
iret
aas
xor
mov
daa
jbe
xchg
or
andb
push
into
stos
movsl
jbe
push
xor
mov
out
ret
mov
dec
iret
jl
jb
jle
std
sub
fbstp
mov
push
stos
das
ljmp
mov
mov
in
imul
mov
mov
mov
iret
in
xchg
cwtl
scas
fidivl
pop
pop
push
add
ds
insl
in
bnd
bound
xchg
cli
mov
test
cwtl
push
mov
daa
adc
cmp
mov
movb
pop
mov
hlt
rol
mov
adc
mov
adc
sti
push
addr16
lds
jne,pn
jae
and
mov
sbb
or
and
pop
mov
push
repz
cltd
lcall
mov
jb
scas
pop
fcmovbe
mov
mov
push
jnp
adc
in
inc
mov
jmp
xchg
mov
ret
fbld
cld
subps
inc
scas
adc
xor
aas
xchg
dec
movsl
rorb
push
mov
add
jp
cmp
pusha
mov
inc
inc
mov
xchg
test
imul
inc
cli
shll
lcall
jnp
dec
or
inc
aad
leave
fnstcw
lock
negb
cli
daa
aam
mov
and
dec
shl
loope
jle
lods
or
das
xchg
push
add
push
imul
addb
xchg
adc
hlt
cld
ljmp
filds
dec
push
cld
dec
test
cld
add
mov
cmc
loopne
or
sbb
dec
and
jae
push
jecxz
stc
arpl
lods
and
adc
push
cwtl
aad
nop
addr16
push
flds
aas
xor
xchg
xchg
clc
mov
cmp
inc
fsubs
adc
adc
dec
sbb
mov
pop
dec
in
mov
mov
enter
dec
jl
call
fsubrs
sahf
hlt
pop
lock
stos
pop
push
cmp
dec
stos
pop
lds
out
and
ret
mov
add
pop
xor
and
cltd
xor
cmp
inc
sbb
sub
iret
stos
lods
loope
inc
xchg
mov
cmpsb
dec
cmc
mov
test
sbbb
and
addr16
fmull
test
cmp
lock
imul
mov
insb
lods
jle
xor
pushf
repnz
pop
movsb
lods
pop
enter
xor
enter
and
stos
mov
xor
loop,pn
hlt
dec
mov
scas
ret
and
std
xor
movsb
mov
push
adc
mov
lods
and
subl
mov
mov
pop
push
je
xor
loopne
adc
adc
lods
fimuls
xchg
jmp
and
sbbl
sahf
cmp
out
aaa
fisubrl
int3
in
cld
cmp
fcompl
sahf
mov
insl
lea
sbb
jns,pn
dec
pop
in
je
lahf
xor
push
xor
xor
xchg
jne
mov
jno
cmc
add
test
sbb
xor
xor
shlb
mov
cmp
pop
inc
or
mov
mul
push
dec
stos
test
sbb
and
push
subl
add
sbb
push
sub
cmp
sub
sahf
int
mov
dec
call
movb
xchg
cmp
daa
sbb
cmpsl
pop
mov
add
pop
mov
loopne
xor
insb
dec
repz
xchg
dec
and
or
push
lahf
push
cmpsb
loopne
jg
ret
mov
add
mov
testl
sti
pop
inc
jle
vunpckhps
fimuls
imulb
push
and
sbb
xchg
jnp
imul
mov
jle
xor
and
scas
xchg
lcall
dec
les
xchg
fs
mov
xorl
sbb
loope
add
pop
xchg
into
std
jo
xor
loopne
mov
loopne
xor
mov
clc
dec
sub
mov
push
adc
sbb
or
outsl
test
arpl
rorl
ss
sarb
daa
leave
jns
add
xor
push
inc
mov
mov
xchg
mov
fiadds
xlat
adc
movsb
mov
fisubl
push
insb
sub
dec
pop
sarl
lcall
repnz
shr
mov
jno
mov
fcos
out
dec
daa
push
dec
or
dec
sbb
aaa
jle
push
add
clc
dec
dec
xor
repz
sbbb
subb
cmp
add
ds
ret
mov
push
push
outsb
icebp
push
push
int3
int
loope
sbb
scas
sti
xchg
loope
xor
imul
add
ds
push
sti
and
push
je
pushf
nop
andb
mov
rcll
in
and
mov
add
push
les
leave
imul
push
and
mov
sub
ds
push
pop
or
ret
dec
fisttpll
or
add
sub
pop
mov
fnstenv
pop
mov
fcoml
rcl
push
test
leave
repnz
adc
sbb
mov
push
adc
iret
push
repnz
cmp
or
sti
lods
mov
repnz
xor
push
daa
movsb
enter
and
or
aam
int
cmpsl
test
test
loop
sub
aad
subl
ja
push
adcb
push
xor
sub
mov
push
icebp
xor
aam
divb
fwait
cmp
outsb
lds
and
dec
mov
lahf
shlb
cmp
sub
jl
popf
push
in
push
xchg
adc
mov
xor
lret
repz
fucomp
add
int3
xor
sarb
inc
inc
push
or
pop
jne
jecxz
aas
sub
notl
mov
jp
into
popf
jecxz
lds
jno
and
mov
inc
nop
sbb
push
jg
dec
decl
outsb
adc
out
clc
adc
pop
mov
add
or
inc
inc
and
inc
xchg
fcomps
out
fscale
pushf
daa
xchg
fstpl
imulb
movsb
fildll
pop
gs
inc
js
bnd
or
or
int
std
cmp
arpl
orb
jb
jns
jae
imul
pop
jo
arpl
shll
std
icebp
jno
xor
or
cwtl
cmpl
and
gs
dec
pop
xchg
and
dec
fs
mov
add
xchg
inc
movsl
xor
das
fbstp
dec
xchg
fcoml
mov
pop
sbb
imul
out
mov
push
inc
fisttps
adc
pop
dec
mov
notl
lock
jno
rcrb
inc
add
push
push
int
jo
inc
mov
je
push
outsl
iret
les
out
repnz
iret
ficomps
xchg
pop
or
sub
jb
dec
decb
shl
arpl
rcrl
lock
aaa
repnz
cmp
mov
dec
stc
loope
subb
fs
int3
cmpsl
notb
mov
mov
shrl
aaa
imul
rolb
or
cmp
ret
mov
push
push
pop
sub
gs
xchg
xor
pop
and
push
cld
inc
mov
jge
outsl
cmp
push
push
cmp
mov
fiadds
bound
pop
jmp
jno
sub
jg
les
add
sbb
loop
aam
cmp
cmp
adc
xchg
pop
lods
pop
fsubs
add
js
xchg
scas
push
add
push
mov
cmpsb
ds
roll
mov
cli
sub
test
iret
or
data16
jmp
mov
mov
or
fbstp
sarl
in
mov
pop
rorl
or
loopne
sub
mov
cld
inc
pop
test
leave
jecxz
push
xchg
mov
sbb
cmp
add
jl
mov
pop
lcall
xor
sub
sahf
or
mov
out
fdivrs
fs
lock
xor
mov
gs
lea
imul
pop
cltd
mov
imul
mov
aas
in
cmp
into
add
faddl
sarb
fld1
sahf
sub
scas
outsl
jnp
or
popf
push
mov
adcl
out
fadds
sub
pop
jge
inc
dec
mov
adc
mov
incb
lock
lea
gs
jecxz
ss
iret
mov
sbb
lcall
pop
mov
add
inc
xorl
jne
mov
orb
dec
lahf
mov
gs
lock
jns
cmpsl
rorl
push
or
jno
fcos
mov
and
mov
in
iret
xchg
xchg
sbb
insb
cmp
inc
jmp
cmpsl
xor
xchg
xchg
sbb
mov
out
pop
ljmp
into
insl
lahf
pop
xchg
inc
stos
jne
mov
mov
stc
sub
cmp
add
insb
pop
cmp
lcall
aad
stos
orl
cmpsb
fisubrl
dec
leave
mov
dec
fsubrs
and
and
aas
repz
xchg
jge
imul
sub
mov
adc
fs
jmp
pop
ss
cmc
pop
into
sahf
sbb
sub
dec
mov
jo
daa
loop
pop
lock
xor
lock
adc
xor
push
mov
sbb
arpl
xor
cld
int3
mov
aam
repnz
shl
cmp
aaa
lea
es
xor
dec
inc
push
aas
mov
cmp
mov
xchg
mov
and
pop
or
cmp
lahf
pop
sub
push
mov
sar
mov
sar
call
movsb
fcompl
push
out
inc
repnz
fistpl
inc
scas
pop
ret
push
rcrb
jmp
mov
add
stos
shl
xchg
incb
mov
mov
repnz
icebp
sarb
xor
xchg
push
sub
push
imull
or
adc
push
mov
adc
lock
neg
loopne
cld
push
ficoms
add
lods
push
idivl
data16
xor
inc
test
movsl
pop
cmp
push
jecxz
mov
aad
sar
enter
loopne
fsts
xor
sbb
jae
mov
or
shrl
orl
icebp
mov
incl
ja
jecxz
sbb
sbb
cmp
scas
push
int
mov
clc
mov
aad
test
sub
imul
stos
xor
out
imul
adc
faddl
pop
mov
in
mov
xchg
dec
leave
aam
jno
mov
es
or
cmp
sub
and
test
arpl
xchg
and
push
ja
add
push
lret
jnp
sbb
fst
das
pop
mov
decb
mov
test
add
movsl
lcall
dec
sbbl
and
jp
test
ret
rcll
adc
or
or
or
stos
sbb
fisubrl
adc
inc
pop
shl
rclb
xor
aaa
leave
shlb
test
push
sbb
mov
cmc
icebp
lret
dec
lcall
dec
in
xchg
add
push
dec
scas
xor
dec
aas
andb
sub
movsb
cmpsl
and
xchg
push
lods
movsb
pusha
xadd
mov
push
test
xchg
push
jle
repz
arpl
push
cwtl
insb
jp
cmp
fbstp
int
mov
ja
sbb
arpl
jae
or
sub
xchg
les
jne
jecxz
inc
ja
mov
decb
bnd
mov
adc
jns
xor
cmpsl
jns
dec
dec
lods
pop
popa
and
mov
test
fisttps
or
test
stos
call
jno
mov
in
cmp
mov
jno
daa
lcall
xchg
xchg
push
in
faddl
ret
pop
xchg
cwtl
bnd
xacquire
push
lret
je
dec
mov
xor
fs
outsl
outsb
stc
jo
sub
jbe
cli
les
dec
fildll
pop
lock
xchg
xchg
push
xchg
pop
repz
fcoml
or
mov
adc
stos
jg
adc
aam
shl
pop
jno
fstps
inc
add
dec
sbb
mov
cmp
jmp
push
addl
and
pop
ss
xchg
adc
push
pop
shlb
cmp
or
call
std
mov
cmp
add
lock
repnz
adc
cmp
cmp
popf
jb
lahf
mov
xchg
cmp
aaa
xchg
sbb
arpl
xchg
xchg
loopne
shll
jns
outsb
mov
fdivs
xchg
adc
les
xor
mov
sub
or
xor
fstps
xchg
jno
xchg
mov
cmp
cmp
out
leave
addb
pop
mov
and
iret
call
nop
inc
sbb
test
dec
and
or
or
xor
pmovmskb
mov
imul
orl
mov
insb
mov
add
pushf
outsb
test
shll
xchg
jmp
mov
mov
mov
xchg
pop
inc
popa
into
rcl
int3
jecxz
into
mov
call
into
lds
add
clc
mov
sar
in
push
jge
sub
or
xor
pmullw
dec
inc
push
into
pop
and
and
xor
inc
cmpl
mov
add
add
mov
pop
sub
mov
ja
xchg
fmull
or
int3
pop
mov
dec
adc
ja
scas
leave
push
inc
test
push
fwait
mov
testb
out
stos
int3
in
dec
ret
sub
push
cmp
xchg
imul
arpl
cmp
negl
lea
or
lret
inc
das
xchg
aas
cmp
inc
xchg
sub
loop
pop
pop
mov
sbbb
pop
mov
mov
lock
jo
outsb
mov
shlb
mov
cli
or
jbe
jl
adc
pop
mov
fdiv
and
or
push
loope
mov
rcll
aaa
jl
aaa
in
ljmp
fsubrl
cld
aas
test
addr16
push
ret
repz
mov
test
lcall
stos
push
repnz
xchg
int3
cmp
sub
mov
in
push
mov
cmpsb
mov
mov
push
jecxz
outsb
in
fwait
in
jo
loopne
or
jp
aad
inc
addl
out
jnp
xchg
lcall
dec
cmc
rcr
dec
inc
cmp
mov
fsts
adc
sbb
stos
cmpsl
ljmp
ja
push
sbb
aam
rcrl
stos
ret
adc
rcl
jle
dec
xchg
loope
ffree
sahf
dec
xor
sub
test
adc
jne
pop
dec
pushf
push
add
out
mov
mov
cwtl
fiadds
sub
clc
arpl
xor
paddsb
stos
add
sub
int
jle
in
decl
jo
out
adc
fldt
inc
and
outsb
mov
cld
test
int3
jmp
push
in
adc
or
mov
lahf
sbbl
xor
or
fbld
cld
subb
mov
mov
mov
sub
shr
xor
sti
or
cltd
arpl
enter
fs
mov
cmpsb
jle
daa
lock
subb
mov
rcl
sbbb
out
sub
mov
idivl
in
cmp
in
push
cmp
cmc
jle
arpl
or
xchg
push
nop
xor
sarl
pop
imul
or
or
jl
ljmp
mov
jno
inc
inc
inc
ss
sbb
inc
inc
ss
mov
sahf
sub
jmp
in
inc
outsb
xchg
and
sub
add
push
xchg
outsl
xor
jno
sbb
or
mov
aam
bound
or
lcall
and
ret
and
imul
pop
cmove
test
inc
mov
xchg
jo
jb,pn
cmp
jp
jae
mov
ror
scas
sub
cmp
inc
in
ss
loope
jbe
iret
xchg
adc
cltd
test
aaa
in
fisubrs
inc
insl
add
or
aaa
outsb
sub
loope
xor
pop
hlt
inc
loope
in
int
leave
and
and
adc
bound
pop
sbb
jns
insb
jae
sub
les
xlat
add
in
testb
leave
test
in
filds
or
std
xor
jne
cmp
cli
xchg
lret
pop
mov
jno
movsl
mov
inc
mov
xchg
pop
faddl
sub
hlt
cmp
mov
lods
dec
xor
dec
xchg
cwtl
xchg
add
pop
inc
int3
push
pop
lods
push
sarb
or
es
add
lcall
jle
or
xchg
mov
jle
ret
pusha
xor
mov
and
add
testb
icebp
xchg
push
adc
mov
mov
insb
or
hlt
and
cmp
sti
movsb
fs
lret
lcall
cmc
test
in
xor
test
jge
stc
pop
dec
ficoml
xor
int3
ret
mov
adc
mov
and
fistpl
andl
fisubrs
sbb
out
mov
cmp
xchg
arpl
push
xor
jb
add
fadds
fbstp
loope
mov
in
fcomip
sub
inc
subb
xor
xor
mov
jae
je
sbb
push
cmp
jecxz
int3
js
dec
xchg
movsb
sbb
mov
jg
out
xor
or
push
jns
stos
test
daa
fdivs
rcll
push
jae
cmp
sub
pop
or
xor
add
movsl
mov
dec
xlat
mov
cli
hlt
xchg
bound
xchg
mov
loop
mov
cli
xchg
sbb
push
push
jp
loop
ror
out
push
pop
cmp
or
add
stos
pop
and
loope
pop
or
fmul
jne
rol
cmp
sbb
std
inc
movsb
push
lahf
pop
aas
ljmp
add
jne
jmp
mov
mov
jge
mov
fidivrs
inc
popf
stos
pop
fs
pushl
cmp
xchg
popa
xor
cmp
adc
out
add
sub
jmp
popf
movsb
dec
loope
and
mov
jle
in
ret
xor
shrl
fdivs
and
ret
adc
or
in
pop
ss
adc
mov
movb
add
xor
in
dec
adc
push
xchg
mov
sub
lret
and
lods
das
mov
xor
es
shlb
adc
in
add
dec
pop
ret
inc
movaps
sbb
dec
mov
lret
xor
in
xor
cmp
or
push
imul
mov
lret
orl
pusha
push
dec
dec
or
arpl
leave
lods
fdivs
or
sub
data16
ror
mov
push
lret
and
int
inc
sbb
push
cs
aas
push
lock
call
and
cmp
mov
stc
mov
test
cltd
cmp
inc
sbb
adc
data16
pop
fwait
addr16
push
or
gs
xchg
adc
sub
mov
inc
imul
roll
hlt
imul
out
jp
xor
cmpsl
cs
jge
stc
dec
mov
lcall
dec
out
push
pop
adc
loopne
xchg
loop
aad
jbe
arpl
ja
push
pop
jmp
or
xchg
push
mov
fbstp
cmp
sub
lahf
pusha
in
push
mov
mov
xlat
sbb
xlat
jae
lret
call
mov
stos
jmp
outsl
fs
jns
leave
inc
mov
addr16
cli
mov
shl
sar
lods
cld
std
loope
mov
aad
or
sub
data16
sti
data16
popfw
push
lods
outsb
mov
xchg
jae
lahf
pop
aam
dec
imul
pushf
mov
sarb
out
jns
loop
jo
dec
jp
fwait
mov
jo
push
mov
sub
stos
and
movsb
dec
mov
pop
rcll
xchg
lahf
push
bt
lods
fcompl
ds
mov
xor
xchg
sbb
or
sbb
adc
fsubrl
inc
push
mov
inc
cmpb
idivl
push
out
popa
add
pop
mov
and
int3
cmp
mov
pushf
pop
cwtl
jl
pop
rorb
xor
fsubl
dec
int3
adc
je
jns
jne
addl
scas
jb
pushf
adc
dec
sub
mov
lcall
das
shll
push
fldl
ss
sahf
fs
or
fstpt
lcall
ja
test
imul
pop
jle
stos
jnp
cltd
or
mov
pusha
xchg
push
lock
mov
maskmovq
idivl
fbstp
adc
test
scas
shrl
mov
add
movsl
xchg
push
dec
ficoms
or
mov
xor
lret
int3
repnz
dec
add
push
mov
ljmp
push
mov
int
sub
scas
popa
add
mov
stos
ret
xlat
cltd
popf
ret
pop
sbb
shll
adc
cmc
push
cli
push
loopne
push
jb
sub
mov
daa
xchg
jnp
fldcw
and
pop
mov
cltd
xchg
filds
call
and
jmp
lods
pop
mov
jl
cs
pop
and
mov
jmp
push
iret
and
and
dec
pop
popf
sbb
sbb
xor
addb
mov
and
push
stos
outsl
call
pop
inc
out
or
push
test
sar
test
adc
iret
mov
insl
mov
mov
loop
pop
bound
test
cmp
xor
jb
test
in
test
nop
push
cld
mov
add
mov
cmp
mov
insb
scas
int3
xchg
push
stc
sbb
push
xchg
cmp
xchg
mov
inc
repz
aaa
cld
ja
mov
mov
mov
mov
es
mov
stos
inc
fbstp
jns
push
inc
pop
jnp
mov
fwait
fwait
inc
fsubr
in
jo
ss
xlat
das
in
enter
lods
push
lret
xor
mov
jbe
mov
xor
ret
imul
mov
mov
pop
test
testl
test
mov
icebp
lret
int
jns
popa
hlt
mov
add
das
lahf
mov
pop
std
add
cmp
lea
lret
std
pushf
enter
nop
mov
in
and
dec
sahf
or
xor
arpl
repnz
sahf
bound
mov
dec
loop
adc
push
push
dec
ficomps
fs
mov
push
cmp
push
and
push
push
mov
cmpsl
mov
cmp
mov
inc
push
fs
jae
lods
dec
fs
into
inc
xor
jg
lock
and
push
adc
sbb
imul
data16
sub
lret
in
lods
push
idivb
outsb
jle
and
std
in
imul
rcl
or
gs
outsl
push
mov
add
mov
xor
cmpb
vpshaw
push
jae
dec
bound
mov
rcr
add
neg
mov
cs
mov
mov
and
mov
add
pop
push
movsl
lods
lea
sub
mov
lret
and
arpl
imul
sub
out
mov
daa
int
add
iret
pop
or
cwtl
mov
jnp
sub
dec
shl
sub
popl
es
test
xlat
mov
xlat
mulb
xor
pop
stc
add
ljmp
je
lock
int3
loope
movsl
mov
es
repz
cs
xchg
ret
jp
and
outsl
es
and
int
nop
adc
cmp
xchg
add
xchg
cwtl
cmp
adc
out
cmp
sub
dec
add
mov
sarl
mov
aaa
sbb
cld
imul
sub
mov
push
pop
js
push
xchg
nop
enter
jae
adc
aam
mov
inc
test
bound
lods
jae
xor
imul
add
xor
adc
push
add
sbb
mov
jle
loop
pushf
cmp
ret
bnd
add
jg
ret
std
pop
cmp
lret
xchg
dec
push
mov
lret
sbb
cmpsl
jbe
jg
scas
dec
add
push
push
mov
ffreep
mov
jecxz
fsubr
push
lret
sahf
xchg
push
add
sub
lea
in
cmpsb
pop
xchg
xor
xchg
ret
pop
inc
pop
xchg
xor
repz
mov
pop
lds
or
xchg
shll
mov
jne
adc
sarl
pop
subl
dec
jmp
pusha
jb
cmc
cld
jo
pop
adc
iret
or
cwtl
mov
jb
xchg
test
adc
inc
xor
sub
adc
jae
xchg
sbb
and
in
fistpl
add
and
addb
sahf
mov
inc
mov
xor
mov
jo
dec
xor
pop
mov
fimull
shll
push
xchg
fisttps
mov
inc
pop
push
aas
add
rolb
fwait
push
shrl
test
ljmp
stos
test
mov
sub
add
popf
lret
call
mov
popa
ficoms
in
gs
ljmp
mov
sti
ss
push
lds
mov
push
xor
ret
pop
xor
push
xchg
inc
sbb
sbbl
mov
push
inc
sbbb
add
aam
dec
test
addl
xchg
xlat
jle
push
push
xchg
nop
dec
les
xchg
sbb
mov
push
outsb
push
push
xor
mov
pop
sub
mov
xor
push
push
popf
loope
jle
icebp
addr16
scas
xlat
mov
popf
loop
inc
xchg
add
dec
push
cmpsl
mov
lds
adc
push
and
adc
cmc
push
lods
sbb
loope
jnp
popa
gs
mov
sbb
adc
mov
add
into
dec
out
jo
jl
add
add
mov
xchg
dec
scas
cltd
mov
xchg
or
mov
sub
jnp
inc
in
xor
inc
add
dec
nop
adc
loope
je
imul
leave
cmp
jmp
stos
push
sbbl
clc
fcmovnu
aaa
repz
aaa
mov
daa
popa
shlb
sub
mov
hlt
stc
push
sti
stos
mov
dec
mov
test
dec
es
pushf
ja
pop
mov
xorb
aam
mov
add
ficompl
mov
jecxz
stos
xchg
mov
xchg
and
push
mov
lds
xchg
je
sbb
outsl
movl
dec
push
xchg
push
inc
stos
scas
lahf
adc
mov
stos
idivb
xlat
fidivl
sub
es
inc
and
xchg
cmp
insl
data16
ret
aas
enter
ljmp
insl
das
mov
ret
arpl
adc
mov
cmpsb
std
inc
or
shll
out
inc
push
adc
in
sbb
into
push
leave
rclb
jge
push
dec
in
mov
jg
xor
mov
sbb
add
mov
inc
inc
psllw
leave
add
mov
sbb
cmp
sbb
sbb
dec
dec
out
shll
push
in
pop
jp
xor
cmpsb
inc
lret
sbb
xor
inc
xchg
repnz
and
popf
aaa
stc
mov
dec
and
and
or
ret
das
and
xor
xchg
mov
jp
dec
xor
loopne
cmp
imul
out
inc
mov
mov
outsb
mov
jl
std
jle
xor
jge
hlt
pop
sbb
jg
and
and
push
pop
lret
shll
mov
mov
add
mov
sub
mov
add
lock
inc
loop
jo
dec
loopne
mov
fmull
jno
mov
mov
gs
lret
adc
popf
mov
movsl
jg
ret
mov
push
push
sbb
imul
pushf
jb
shrb
repz
aas
or
inc
into
pop
int
or
jmp
fdivrs
sbb
push
lret
jnp
lods
leave
dec
xor
pop
sub
or
daa
mov
cwtl
in
dec
ret
mov
mov
sub
ficomps
test
jl
cmp
xchg
cmp
addb
pusha
xchg
pop
insl
sub
aaa
lock
insl
pop
loopne
adc
push
cmpsb
ret
mov
test
imul
add
cmpb
xor
insb
cltd
mov
jmp
sub
int3
mov
in
sbb
in
adc
popa
mov
mov
lahf
inc
push
sbb
or
push
mov
and
ja
mov
ss
andb
adcl
inc
ja
mov
or
mov
push
jmp
dec
dec
push
xchg
daa
lds
fisttpl
pop
pushf
test
dec
cmc
or
lcall
push
and
lds
cmp
insb
out
and
test
dec
jae
push
push
mov
sub
flds
mov
fidivl
add
push
movsb
sub
jecxz
les
push
mov
pop
int
loop
dec
dec
arpl
cmp
xlat
jne
addr16
fnsave
xchg
pop
xchg
xchg
cltd
decl
jbe
dec
xchg
std
or
sub
sbb
mov
aas
push
or
jmp
loope
mov
pop
cmp
mov
stos
out
sbb
hlt
lods
js
jg
pop
cmp
test
push
dec
adc
stc
xchg
daa
or
pushf
fadds
adc
sub
fstp
std
mov
hlt
fwait
repz
push
sbb
mov
mov
and
out
or
dec
mov
sahf
data16
out
aad
test
pushf
andb
lcall
jbe
gs
jmp
cmp
daa
sbb
adc
pop
mov
arpl
sti
testb
sbb
xchg
imul
bnd
out
add
cmp
and
sub
dec
inc
or
ret
inc
mov
adc
mov
int
ret
call
inc
xchg
mov
imul
pop
insl
mov
rcrb
sbb
or
mov
scas
push
popf
imul
popf
rorl
mov
mov
sahf
orl
shrb
push
les
fsts
and
mov
shl
sti
pop
sub
pop
int
add
jno
ror
cld
stos
sarb
lods
xor
addr16
mov
xor
lcall
aam
ss
lahf
mov
lods
mov
das
mov
fs
jge
adc
add
stc
xor
mov
popa
and
cmc
push
mov
jg
int3
popf
inc
inc
iret
bound
or
mov
fwait
daa
imul
xchg
out
cmp
xor
fs
and
pop
mov
lcall
shlb
and
mov
roll
mov
out
hlt
sar
je
nop
pop
shll
mov
dec
inc
inc
pop
xlat
push
adc
jmp
ja
push
lods
out
addr16
filds
outsb
cltd
dec
gs
mov
sub
push
cwtl
dec
lcall
pop
push
cmp
in
stos
push
cmp
fsubrs
and
jnp
mov
jle
push
lea
into
or
shll
jmp
add
mov
push
inc
mov
xor
xcrypt-ecb
cmpsl
mov
dec
mov
push
cmp
mov
mov
outsb
push
loope
add
scas
mov
xchg
fsubs
xchg
dec
push
out
icebp
xchg
or
popf
into
push
dec
sbb
addr16
cwtl
es
xor
mov
arpl
cmp
shll
movsl
pop
mov
out
xchg
test
lods
test
mov
pop
loope
cmpsb
xchg
out
mov
mov
sub
sub
mov
or
and
shrb
xor
push
ss
mov
xchg
or
cld
leave
shll
insl
repnz
jmp
lea
lds
push
dec
cmpb
lock
out
icebp
imul
jmp
adc
decb
insl
jb
aad
lahf
notb
mov
out
xchg
jmp
lds
test
dec
popf
movsb
out
stos
shl
xor
into
test
ds
repz
sub
cmpsb
fsubs
mov
shlb
ljmp
xor
inc
leave
fisubs
ret
xchg
je
sbb
sub
xchg
mov
or
jge
out
sti
cmp
icebp
stc
aaa
or
xor
ss
enter
dec
and
dec
dec
jbe
jecxz
jns
pop
inc
push
xchg
pop
cmp
test
dec
xor
in
xor
rcr
jno
mov
imul
mov
movl
sub
dec
add
push
addr16
rorb
sub
rolb
fidivl
test
std
and
jb
insb
out
sbb
and
mov
jmp
std
incb
jbe
lods
adcl
jb
in
movsb
roll
icebp
adc
mov
loope
call
movsl
jo
mov
or
inc
jmp
dec
jb
inc
or
test
ljmp
daa
pop
stc
in
push
or
or
or
mov
mov
jns
test
insb
sub
dec
push
insb
cli
fdivrp
add
aas
lret
insl
imul
lcall
stos
push
adc
xor
fs
roll
mov
adc
les
and
insb
mov
xchg
push
xor
dec
jns
hlt
mov
ss
aam
std
out
mov
addb
loopne
aam
dec
rolb
lcall
aaa
pop
arpl
fs
out
inc
and
xchg
mov
dec
shrb
sbb
stos
ret
jecxz
in
sub
mov
insb
jno
inc
fucomp
cmp
mov
sbb
sub
and
or
pop
cmp
and
pop
in
in
adc
loop
or
mov
xor
push
mov
jae
mov
into
cmp
rorb
mov
sti
ljmp
adc
movsl
xchg
test
push
iret
dec
jb
pop
fcomip
into
mov
icebp
xor
fsubs
or
movsb
in
push
push
ss
mov
xor
movsl
xchg
enter
lea
adc
outsb
addr16
dec
dec
sub
or
mov
addr16
push
cmp
mov
rcrl
pop
inc
cmpsb
loopne
and
mov
negl
leave
mov
stos
decl
or
aas
and
push
dec
xchg
pop
mov
mov
rclb
jmp
int3
xchg
cmp
xor
shl
pop
xchg
mov
and
or
mov
das
jns
cmp
inc
push
test
ljmp
cmpb
mov
push
les
push
out
add
xor
push
outsb
sahf
popa
les
cmp
dec
adc
sub
lods
in
adc
pop
mov
aas
stos
sub
iret
push
and
orl
adc
imulb
int
pushf
out
or
out
xchg
cmc
push
subb
pop
add
pop
popf
outsb
movsl
adc
cltd
sub
push
adc
out
xor
jae
mov
addr16
add
xlat
and
dec
xor
bound
fadd
adc
mov
jecxz
xor
fcomip
repz
adc
jmp
fcomps
mov
fwait
lock
dec
dec
add
aas
iret
rol
es
popa
adc
jg
xchg
stos
jne
push
mov
pop
loope
pop
insl
es
pop
mov
es
fs
test
pop
jmp
rorl
or
xchg
dec
andl
cltd
xor
int3
outsb
into
leave
cltd
mov
push
jns
and
xor
xchg
in
jb
mov
inc
pop
adc
jno
or
add
xor
dec
insb
aaa
inc
int
cltd
mov
jnp
imul
adc
test
push
xor
mov
daa
ja
aad
pop
xor
add
cli
and
in
ss
cs
and
lret
gs
push
into
dec
outsb
lahf
dec
sub
std
aas
mov
push
dec
pop
xchg
adc
and
jge
sahf
loope
mov
mov
rcr
adc
inc
aam
mov
imul
enter
ljmp
xchg
hlt
mov
cmp
jnp
add
subb
cli
arpl
sub
cli
test
fsub
sbb
sti
mov
push
inc
jne
xchg
mov
je,pn
das
ss
pop
idivb
mov
cmp
pushf
orb
jne
outsb
pop
dec
jecxz
aas
dec
mov
mov
inc
jno
scas
fmull
sbb
mov
in
gs
insb
bswap
stos
lret
jp
and
and
adc
addr16
sbb
loop
mov
das
add
pop
pop
orb
popf
jecxz
and
cmp
into
mov
adc
inc
inc
js
xchg
fwait
and
inc
mov
shl
pop
imul
xor
rcll
out
xchg
jmp
inc
xchg
cmp
push
xor
movsl
mov
and
xor
adc
clc
sbb
sbb
xor
sub
shrl
ljmp
in
sahf
xor
xchg
pop
sub
arpl
jo
sahf
aas
mov
movsb
lret
out
add
jg
mov
add
push
icebp
add
adcb
mov
cmc
js
inc
push
mov
xchg
adc
and
bound
call
outsl
dec
sbbb
popf
lods
daa
imul
int
arpl
inc
loopne
leave
bound
in
rclb
dec
pop
mov
int
push
jge
into
sti
pop
dec
jno
jecxz
push
pop
aas
mov
in
mov
stos
mov
mov
ret
setbe
hlt
pop
jle
js
insb
test
pop
push
fs
pop
lock
lahf
mov
pop
mov
fldcw
iret
jnp
out
sbb
sbb
mov
js
cmpb
or
movsb
rolb
les
lahf
dec
enter
outsl
jns
lahf
push
cmp
cmp
inc
shl
rorl
xchg
pusha
mov
push
sbb
sar
les
push
adcb
test
int
movsb
aas
ds
pop
or
imul
fdivl
insb
into
cltd
sbb
insb
dec
int3
aas
stos
jge
lret
jp
mov
out
jl
das
imul
mov
int3
pop
sub
inc
subb
xor
lret
outsb
inc
fldt
es
jg
mov
gs
cmp
lods
jo
jb
and
in
mov
sahf
sbb
inc
inc
xchg
dec
xor
movsb
aad
ds
lret
cmpsl
stc
sbb
in
sub
es
dec
popa
inc
stos
and
mov
das
stos
sub
cmp
mov
imul
ret
cmp
adc
repz
cld
sub
mov
pop
adc
or
pop
pop
mov
sub
inc
add
fldcw
push
lret
mov
and
negb
dec
xor
cld
outsb
lock
xchg
inc
inc
jbe
sbb
pop
outsb
out
ss
repz
insl
pop
outsb
xchg
mov
lea
push
scas
fnsetpm(287
xor
jo
sub
jo
pop
into
jno
push
ja
mov
sub
cwtl
test
and
xor
fdivrp
push
and
mov
mov
in
outsb
out
xchg
hlt
push
loope
sbb
pop
sbb
add
add
pop
js
movsb
xor
push
nop
xorps
mov
dec
jo
xor
xchg
and
xor
addr16
inc
sbb
testl
nop
shrl
out
bound
lods
pop
cmc
lods
mov
popf
aaa
fdivrl
mov
and
mov
insb
cmp
or
mov
xchg
popa
fbld
frstor
mov
daa
add
mov
lahf
pop
mov
pusha
dec
es
mov
dec
sbb
mov
adc
push
jle
jg
push
push
jno
ss
fadd
lcall
sarb
sbb
lods
movsb
push
lds
pop
mov
xchg
add
nop
lcall
jg
insb
jo
icebp
jo
add
push
cmp
jle
lea
jg
sub
mov
lcall
xchg
es
sbb
xchg
xchg
idivl
lret
and
movzwl
mov
mov
lret
sub
xor
iret
xor
lea
jno
lock
push
sub
pusha
dec
cmp
out
stos
push
add
fs
pop
adc
rcll
shl
sub
dec
iret
test
sbb
inc
shlb
xchg
cmp
jnp
sbb
mov
pop
xchg
dec
xor
das
jb
jl
mov
in
sub
mov
hlt
loope
incb
dec
int3
in
in
inc
inc
fldl
push
leave
int3
mov
mov
jb
stos
enter
push
out
ljmp
or
mov
sti
adc
xchg
mov
xor
jns
pop
xor
inc
out
adc
pop
pop
test
inc
adcb
outsl
inc
insb
mov
pusha
xchg
pusha
out
mov
push
shlb
mov
mov
push
adc
popa
aam
hlt
add
in
fistl
mov
pop
and
adc
mov
lods
pop
in
push
lods
cmp
push
add
lret
lahf
mov
cmc
mov
mov
mov
ror
cwtl
aaa
xchg
ror
or
and
xchg
dec
push
pop
jl
xor
mov
js
testl
out
lahf
pop
cmp
sub
sub
shll
add
ror
cld
pusha
cmp
cld
std
lods
fs
pop
jmp
out
xchg
iret
mov
or
add
test
lahf
sub
add
add
sbb
and
mov
aam
orl
in
mov
int
das
or
lock
lods
cld
pop
or
push
pop
ja
mov
jecxz
sub
xchg
out
xchg
cmpb
mov
pop
movsl
and
cmpsl
jg
jle
dec
push
mov
mov
rorb
clc
data16
or
fidivrs
mov
mov
int
loope
out
aas
push
inc
sti
adc
movsb
iret
lds
pop
cmpb
mov
testl
movsb
mov
test
dec
jge
andl
inc
adc
in
sbb
sti
xor
movsb
mov
jno
or
jmp
push
test
jno
pop
test
or
push
aaa
sahf
pop
push
jmp
push
xchg
pop
stos
sbb
outsl
xor
dec
aas
mov
int3
fwait
test
scas
dec
mov
pop
or
int
add
xor
add
jno
xchg
xchg
pushf
xchg
popa
sbb
fcomi
push
ret
jbe
cmp
pop
ds
nop
out
repnz
xor
int3
push
stc
mov
outsl
jmp
dec
dec
inc
xchg
or
pop
outsl
push
pop
pop
stos
lcall
fcoms
xchg
xchg
out
ficoms
daa
sub
dec
pop
sbb
xchg
imull
sbbb
or
jecxz
sub
push
fld
cmp
arpl
pushf
fcoml
movsb
stc
repnz
out
xchg
cmpsb
pop
sbb
test
test
mov
es
lods
stc
jg
pop
ss
dec
and
mov
lock
sbb
data16
lods
xchg
loopne
jae
jne
int
les
les
dec
test
xchg
in
push
push
mov
cmp
mov
clc
xorb
mov
mov
ljmp
push
dec
sbb
lea
sarl
imul
push
das
cmp
jl
xchg
cs
fildll
mov
sbb
imul
test
inc
repnz
dec
lds
subl
cmp
cmp
pop
xchg
lret
or
testb
and
or
cs
data16
jmp
ficomps
jnp
lds
imul
xchg
enter
out
icebp
and
xlat
outsl
call
lock
xor
and
add
out
adc
xchg
lahf
popa
cld
or
gs
fwait
inc
repz
vunpckhps
add
mov
fcmovb
cld
or
or
cmp
sti
cmp
dec
add
inc
sub
outsb
mov
enter
cmp
sbb
test
inc
imull
jge
fyl2xp1
in
pop
in
mov
imul
xchg
pop
nop
xor
sub
scas
jne
pop
xor
loope
mov
daa
push
or
mov
pushf
cli
sub
ret
cmpsb
aad
popa
sarb
jno
pushf
cld
mov
mov
pusha
inc
dec
sub
stos
fmulp
mov
loopne
mov
mov
loopne
int3
jmp
in
xor
cmp
sahf
cltd
fisttpl
jmp
inc
andb
dec
fnstenv
int
popf
add
adc
adcb
push
rclb
add
mov
ja
repnz
cmp
pusha
stos
pusha
adc
and
xor
mov
popa
outsb
mov
pop
jecxz
cmpsl
cwtl
or
adc
inc
cmp
push
cmp
jo
or
cwtl
adc
pop
aas
sbb
pop
test
push
xor
push
mov
aad
aas
ret
pop
pop
es
stc
mov
dec
dec
jmp
xchg
scas
mov
inc
insl
cmp
loopne
inc
add
enter
movsl
mov
and
or
repnz
int
mov
shr
inc
nop
int3
adc
lds
dec
xchg
icebp
xchg
aaa
mov
sbb
jb
ret
clc
fsub
int3
aam
xchg
outsb
xchg
lcall
inc
into
mov
push
mov
or
js
cmp
stos
mov
lods
stc
scas
push
push
inc
push
dec
or
punpcklbw
cmp
xchg
adc
orb
addb
jmp
push
iret
pop
jge
shl
adc
push
or
cmp
mov
push
add
loop
sub
icebp
xchg
sbb
imul
cld
cmp
inc
aas
mov
add
lods
or
mov
xor
test
sbbl
cld
xor
jmp
or
sbb
ljmp
jmp
repnz
les
push
pop
mov
and
xchg
pop
aad
mov
and
mov
dec
inc
push
shll
in
divb
fs
mov
sti
popf
je
jge
aam
movsl
pop
and
push
mov
mov
and
fisubrl
or
pop
or
adc
pop
xlat
mov
and
mov
mov
daa
outsl
mov
add
scas
rorl
jb,pt
int3
inc
dec
push
mov
inc
mov
roll
inc
testb
push
mov
int
mov
jg
lods
jnp
cmp
and
pop
insl
lods
sbb
or
mov
fldt
fdivrs
sahf
loope
mov
jb
mov
push
add
mov
fstps
mov
cmp
inc
cmp
jnp
jp
dec
xchg
xchg
mov
sahf
mov
pushf
adc
lods
pop
cmp
cmp
imul
imul
add
inc
shl
rcrb
in
mov
ret
xor
mov
push
or
shll
fdivr
mov
jbe
jne
inc
jp
inc
jne
mov
dec
pop
jmp
xor
inc
sub
sub
popa
in
insl
mov
push
int
pop
jmp
cld
ret
inc
jle
xlat
mov
sub
mov
pop
ljmp
lret
gs
inc
dec
aad
idivl
dec
int
clc
insb
xor
and
xor
aas
adc
pusha
mov
incl
lret
nop
pop
mov
and
mov
mov
mov
in
testl
in
jmp
fisttpl
sub
or
mov
enter
mov
adc
and
clc
inc
push
mov
addb
mov
in
scas
xor
test
sub
cltd
popf
negl
sahf
or
ds
popf
or
xor
fsubrs
insl
pop
jo
dec
sub
jno
lods
insl
test
lahf
pop
adc
sub
data16
and
pop
bound
sbb
cmp
imull
in
and
pop
pushf
jo
in
out
pop
or
cmp
loopne
test
aas
fmull
lds
xchg
or
in
cmp
cmp
dec
mov
fldpi
rcll
dec
cmp
add
and
inc
loopne
pop
sti
stos
mov
push
jns
cmp
mov
adc
mov
add
test
jle
and
lret
imul
mov
mov
sub
pop
jo
and
sbb
cltd
arpl
and
xor
int3
inc
loopne
loop
jecxz
adc
fsubl
icebp
sarl
adc
std
repnz
and
fs
push
pop
std
sub
movsl
add
mov
pusha
je
daa
sub
fbld
pop
das
pushf
push
add
xor
ficompl
push
rorb
lahf
jnp
mov
adc
sahf
mov
inc
and
xor
movsl
mov
inc
dec
loope
mov
push
into
mov
lea
add
push
sbb
pop
imul
mov
loop
daa
cmpsb
rolb
cmp
sbb
scas
pop
fiadds
mov
cmpl
sti
push
mov
dec
xchg
das
dec
outsl
mov
and
fistps
jle
pop
push
jl
fcoml
push
xlat
sub
sub
cwtl
js
add
dec
je
cmpsb
insl
dec
inc
cld
or
inc
je
jle
pop
add
mov
test
pop
lret
sbb
pop
inc
jg
mov
add
divl
xor
mov
and
into
xor
arpl
mov
in
dec
insl
test
shll
icebp
mov
sub
sahf
pop
clc
insb
dec
mov
inc
loope
arpl
mov
cwtl
sub
nop
or
out
fwait
pop
jecxz
into
jne
cmp
pop
push
js
xchg
aad
call
aas
nop
je
mov
out
mov
jb
jae
loope
xchg
xor
mov
jne
xchg
ljmp
ja
push
dec
aad
fcmovnb
rcrl
shl
std
leave
ds
cmp
or
imul
jnp
mov
andl
je
jg
inc
xchg
aam
or
mov
mov
push
stc
inc
mov
lock
test
aas
and
stc
mov
cwtl
and
adc
das
nop
pop
cmp
cs
and
out
cs
aad
test
aas
mov
xorb
dec
loop
sbb
pop
sub
flds
xlat
fistpll
push
loopne
pushf
mov
mov
mov
das
or
andb
xchg
add
mov
gs
insb
pop
sbb
popf
xor
orl
out
pop
fimuls
push
rolb
sub
leave
cmp
leave
or
pop
mov
loop
mov
dec
jl
xchg
xchg
test
sbb
xchg
xlat
ljmp
fstpt
lods
dec
es
pop
sub
test
inc
data16
jl
pop
or
mov
es
sub
ja
jg
mov
out
les
push
dec
cmp
mov
xor
adc
push
in
push
jmp
cwtl
cltd
pop
test
mov
xor
adc
add
stc
xor
sbb
adc
shl
repnz
shl
rolb
and
std
mov
cmpsb
int
fs
mov
or
push
cmovle
jae
mov
xor
xchg
mov
lea
jae
jb
and
sub
push
and
add
test
and
adc
mov
aas
mov
rcrl
js
bound
inc
jecxz
loopne
push
cmp
fistl
aas
ljmp
sbb
lods
iret
adc
xor
aad
push
inc
xchg
mov
add
fcmovu
dec
adc
into
cmc
clc
and
pop
cmovb
mov
jp
pop
xchg
mov
push
mov
in
or
push
pop
pop
sub
jecxz
adc
sbb
outsl
add
pop
insb
test
loopne
sbb
push
mov
out
sub
mov
inc
mov
sbb
call
inc
xor
mov
cmc
and
mov
pop
inc
loop
adc
and
lock
sub
ror
imul
xor
dec
jge
popf
stos
sahf
and
test
dec
pusha
and
dec
cs
mov
divl
out
sub
lcall
je
mov
rcrl
nop
mov
js
push
jae
dec
hlt
and
cs
sbb
bound
mov
jne
pop
xor
pop
pop
mov
cmp
lcall
xor
push
and
jb
clc
test
add
xchg
arpl
or
sub
adc
cmpsl
call
push
rcl
jae
cmp
fabs
mov
test
out
inc
call
jb
lods
xchg
or
mov
sub
dec
or
stc
sub
dec
dec
pop
aad
add
xchg
fcmovne
push
int3
cwtl
add
adc
in
pop
or
iret
cmc
icebp
fsub
and
mov
ror
or
das
push
test
pop
test
stos
dec
mov
jns
or
mov
sub
mov
push
cmp
aas
inc
mov
std
clc
pushf
xchg
adc
in
and
adc
dec
sahf
loopw
fildl
pop
mov
lret
add
pop
sub
test
loope
add
sarb
inc
loope
sbb
or
adc
adc
and
push
aas
jl
int3
in
xchg
stos
mov
fmul
loopne
loop
and
and
inc
out
std
mov
lock
repnz
les
pop
add
cmp
lea
push
and
adc
test
pop
out
enter
popf
cmp
adc
add
sub
scas
and
inc
sbb
dec
xchg
sbb
xor
js
sarl
pop
or
inc
sub
add
sub
push
fsts
and
adc
lcall
lahf
cwtl
and
xchg
fcmovnb
lea
cmp
mov
jp
mov
pop
adc
scas
cmp
dec
inc
sbb
adc
movsb
add
mov
xor
shl
loop
scas
movsb
push
or
inc
fs
mov
xlat
push
pushl
ljmp
jae
outsl
push
or
jnp
cmpsl
push
imul
push
and
sub
cmpb
jle
adc
cs
sbb
and
mov
imul
ret
or
mov
je
outsl
mov
mov
mov
or
mov
jl
adc
clc
xor
add
sub
mov
inc
pop
into
dec
movl
fwait
or
sbb
pop
mov
inc
fsubrs
lcall
cs
cmp
loopne
cmc
std
add
or
in
ja
std
mov
jmp
jmp
daa
xchg
mov
sub
subb
inc
int3
ljmp
movsl
ja
mov
adc
cmpsl
dec
mov
jb
jp
adc
popf
mov
mov
icebp
jb
jmp
adcb
cmp
jae
jmp
lret
ret
cmpb
inc
popa
ja
pop
inc
sub
hlt
fstp
imul
push
in
adc
insl
jns
xchg
les
in
les
ss
or
adc
push
add
pop
fwait
stos
push
push
into
repnz
xlat
inc
bound
push
fwait
popa
ljmp
insb
mov
dec
loopne
xchg
addl
sub
sub
pop
daa
xchg
cmp
or
int3
adc
stos
test
hlt
push
fadds
jae
iret
mov
inc
nop
xchg
js
fsubrs
lahf
aaa
jbe
add
pop
jns
das
sub
arpl
sbb
xchg
fnstcw
jl
add
and
outsl
jge
popa
push
pop
xlat
adc
push
cmp
stos
mov
cmp
push
dec
jns
mov
jns
stos
xorb
cld
dec
out
sub
inc
mov
insl
bound
aas
jge
pop
sahf
movsb
mov
data16
add
inc
jnp
or
mov
inc
popf
push
push
cmp
push
aad
sbb
sti
addr16
scas
push
arpl
movsb
fimull
mov
cld
pop
arpl
pushf
xchg
cmp
clc
cmp
mov
shlb
mov
bound
cmp
shr
outsl
aad
orl
sub
jne
mov
shlb
jecxz
movsw
jnp
test
outsb
flds
int
mov
sti
dec
push
sbb
lods
int3
aas
pop
jle
es
aad
xchg
enter
jo
mov
jecxz
dec
xor
notb
xor
adc
fmull
loop
lods
push
add
mov
ljmp
jb
lock
or
sbb
fildll
or
jne
jno
pop
push
or
lea
mov
cmc
test
push
or
mov
push
seto
adc
inc
mov
ret
lea
fildll
addl
loop
dec
push
pusha
jnp
and
imulb
mov
cmp
fldenv
or
les
add
arpl
adc
sbb
shrl
cmp
nop
push
mov
cltd
std
fisubs
lcall
movsb
cmpsl
jne
cltd
je
mov
cmpsb
dec
sahf
cld
into
test
rolb
stos
add
xchg
mov
jo
fsub
fcom
pop
stos
cmpsb
add
inc
mov
sub
gs
or
pop
push
fsub
mov
rcl
addb
jmp
pop
dec
test
pushf
subl
pop
dec
xchg
in
adc
mov
jge
adc
bound
out
jl
cmp
fisubrs
data16
cmp
add
aas
push
add
pop
fsubrs
or
pop
ficoml
loope
jecxz
sbb
das
cmp
jmp
inc
push
adcl
dec
inc
sahf
jge
push
adc
out
adc
fdiv
jg
push
dec
leave
push
mov
pop
decb
ljmp
lock
lods
adc
js
pop
push
and
push
rol
mov
hlt
add
push
orb
imul
sbb
rclb
sbbb
pop
lds
mov
jne
pop
outsb
ds
out
fs
or
pushf
pop
jbe
fistpl
ja
pop
mov
or
daa
mov
and
in
sbb
ja
arpl
pop
stos
adc
jnp
jns
int3
jne
iret
dec
pop
pop
je
add
and
push
cmc
aam
movsl
aam
in
or
jo
mov
insb
aas
out
mov
aad
int3
add
stc
push
loop
pop
or
mov
fs
cld
repz
sti
shrb
out
mov
cld
jl
enter
pop
dec
mov
add
push
jbe
pop
xchg
repz
divb
mov
lret
call
dec
leave
adc
inc
xchg
or
cmpsl
test
nop
adc
lods
sub
and
dec
lcall
lock
add
pop
dec
iret
and
rcll
pop
pop
mov
cmpsl
mov
aad
cmpsl
cmp
out
sbb
fisttpl
add
aaa
fidivl
cmpsb
push
push
inc
aaa
push
sub
cmp
push
cvtpi2ps
enter
or
jne
fisubrs
adc
mov
fisubrs
lock
or
sbb
and
imul
cmp
push
aad
dec
mov
dec
push
mov
in
jge
sbb
push
push
test
or
pop
sub
rolb
pop
movsl
sbb
repz
dec
cmc
mov
imul
push
andb
dec
mov
xchg
fwait
adcb
fistpll
fsubrl
lods
mov
repnz
mov
cmp
sar
jecxz
dec
cmp
mov
out
lea
sahf
out
push
pop
repnz
int
sar
out
push
and
sbb
cmc
shll
xchg
enter
xor
in
jns
arpl
pop
cmp
dec
lods
repnz
dec
or
xor
push
push
arpl
fst
xchg
movsb
sbb
les
lcall
xchg
xchg
sbb
lods
inc
push
cmp
ror
xlat
sbb
push
notb
lods
push
pushf
outsl
je
push
xor
cmp
cmp
aaa
xor
pop
xchg
sti
nop
mov
imull
push
or
inc
mov
xor
cmp
dec
and
sbb
xor
stos
call
adc
jne
lret
jp
add
int3
negl
push
xchg
xchg
jne
xor
data16
sbb
inc
stos
jmp
push
mov
lods
pop
arpl
cli
and
icebp
fidivrl
mov
mov
xchg
push
jns
mov
sub
das
pop
xchg
leave
bound
imul
sub
cmpsl
fcoml
in
jbe
pop
pop
cltd
jg
repnz
sbb
popa
lret
lods
sar
das
mov
adc
inc
mov
cmp
or
xor
fcoml
dec
shrl
ds
add
inc
lret
imul
stc
xor
push
xor
push
out
sbb
test
xor
mov
pop
and
xchg
ss
sti
push
lods
xor
xchg
lds
adc
cmp
cmc
mov
inc
lods
mov
or
stos
lds
jne
push
dec
mov
cmp
xorl
repnz
imul
movsl
sub
or
int3
sbb
imul
cwtl
cmpsb
inc
inc
mov
cmpl
pushf
mov
mov
jno
in
dec
jle
aad
jmp
test
and
push
fxch
inc
adc
shll
ficomps
seta
das
and
jg
pusha
popa
sbb
repnz
sub
nop
mov
lahf
dec
js
and
mov
sub
cwtl
cwtl
jecxz
sti
jmp
inc
enter
or
pop
call
pop
lsl
mov
pop
mov
or
pop
push
xor
pop
cmp
std
pushf
stos
sarl
enter
int
xchg
ds
stos
scas
out
jae
jl
enter
dec
aam
add
mov
insl
adc
jmp
sti
addr16
dec
ljmp
mov
mov
and
jne
push
mov
ljmp
fsubrp
lret
sub
sub
sbb
push
mov
jae
adc
rcrl
push
adc
pop
mov
repz
mov
divb
xor
rorl
cmp
call
inc
and
into
and
push
cmp
push
sarb
xor
xchg
and
sub
push
loope
aam
test
rclb
fwait
cmp
push
arpl
aad
add
pop
sbb
cmpsl
in
sub
adc
xchg
sub
dec
sbb
into
inc
stos
mov
xchg
jle
lds
iret
mov
outsl
loope
adc
enter
jb
pop
push
fldcw
pop
mov
inc
mov
or
push
pop
mov
mov
xchg
mov
shrb
stos
in
sub
sbb
mulb
popa
xor
leave
popa
aaa
dec
sbb
mov
push
popa
inc
inc
push
mov
std
sub
cld
call
adc
inc
xor
stc
outsl
int3
repz
int
cmp
fists
mov
inc
loope
pop
repnz
dec
addr16
mov
sbb
inc
iret
dec
jb
fldcw
xor
ds
add
pushf
inc
aaa
ror
rorl
add
test
gs
sti
lea
add
or
fwait
je
mov
iret
sub
pop
in
push
sahf
mov
push
cmpsb
dec
jl
jns
pop
inc
ja
xchg
adc
add
inc
adc
sbb
pop
cld
pop
add
and
push
arpl
fbld
shl
je
in
sbb
pop
sbb
mov
push
dec
xor
push
jns
push
lock
popa
in
loop
push
xchg
cwtl
sbb
gs
adc
mov
jnp
imul
rorl
add
mov
push
add
add
push
fs
and
mov
jbe
pop
pop
push
push
fnstsw
xchg
mov
cmp
add
das
shlb
neg
dec
loope
stos
idivb
andb
jo
cmp
mov
inc
push
adc
addr16
lds
sbb
inc
jp
push
icebp
test
cltd
fwait
rclb
xor
sbb
shrl
push
icebp
arpl
jmp
gs
sub
lahf
push
pop
stc
dec
stos
inc
addr16
shlb
imul
add
pop
shrl
or
ficoml
push
outsb
add
and
stos
jmp
insl
pushf
push
push
loope
in
int
xchg
mov
iret
out
push
pop
xor
addr16
inc
jl
mov
inc
fwait
aam
push
sbb
xchg
outsb
add
xchg
dec
lea
test
stos
lods
xor
inc
bound
orl
fistl
pop
push
cmpsl
cltd
cs
jns
mov
daa
mov
test
stos
push
xchg
mov
jg
pop
sbb
loope
lock
lds
dec
leave
dec
mov
gs
mov
out
cmpsb
hlt
pop
popf
xchg
data16
call
movsl
lock
push
cmpsl
xorl
xor
test
test
jmp
lret
mov
lock
and
loop
ss
and
inc
push
fucom
xor
stos
out
loopne
loopne
lahf
or
scas
loope
les
pop
mov
jecxz
push
jno
movsl
das
pushf
and
dec
arpl
sbb
dec
lret
jbe
push
data16
rcll
cld
nop
pop
jl
aas
lahf
sbb
pop
aad
cmp
stc
inc
mov
ret
rcll
data16
insl
into
or
sti
outsl
xor
lds
imul
pop
jg
aad
test
cwtl
fidivrs
subl
mov
out
mov
or
lock
sbb
loope
jecxz
inc
scas
xor
mov
or
jne
aaa
pop
and
inc
xor
sub
push
jnp
pusha
aaa
dec
and
int3
pop
push
in
out
mull
mov
sahf
inc
cmp
dec
mov
sub
and
movsl
and
mov
cmp
ja
jbe
call
insl
inc
in
xor
ffree
mov
jle
xchg
test
push
xchg
bswap
stos
pop
add
sahf
test
daa
sbb
add
xchg
xor
movsl
jns
jge
call
xchg
test
xchg
test
enter
leave
dec
and
and
ljmp
add
gs
shr
jmp
in
roll
add
lock
xor
lahf
cmp
rolb
insb
dec
dec
adc
repnz
adc
cmp
mov
out
and
pop
xchg
icebp
loope
sub
leave
leave
or
jmp
add
jg
adc
pop
jb
stos
jle
fwait
test
adc
mov
xchg
in
mov
popa
clc
sbb
mov
in
imul
movsb
xchg
add
pop
test
jae
xor
loope
mov
fldenv
mov
shl
add
inc
add
add
sarl
popf
int
js
and
ljmp
cld
inc
push
xor
add
or
repz
in
loop
push
shll
or
dec
mov
in
mov
xor
daa
sahf
pushl
sbb
dec
mov
cmp
test
sbb
mov
push
rorl
mov
fs
cwtl
out
nop
dec
or
mov
xor
adc
mov
adc
ljmp
mov
adc
mov
aam
and
add
lods
add
push
mov
mov
inc
fdecstp
fsts
cltd
jl
sub
mov
inc
sub
xorl
ss
jl
dec
pop
cmp
pop
call
mov
nop
push
mov
sti
adc
sub
adc
cld
lock
ret
jg
orb
cmp
sbb
ja
outsl
push
cli
inc
fldl
outsl
cmp
sub
inc
sub
xchg
test
inc
lcall
repnz
or
xor
jle,pt
out
mov
and
adc
incb
pop
leave
inc
pop
cmp
and
enter
bound
je
xchg
jecxz
push
pop
dec
cmc
push
xlat
inc
add
not
addr16
test
sbb
jl
xchg
jge
cmpsb
cmpsb
imul
in
fiadds
jno
lds
jecxz
ret
in
xor
rorb
xor
push
notb
mov
addr16
imul
xor
insl
lods
push
jns
dec
faddl
sbb
test
dec
sub
imul
stos
push
jl
sarb
into
xor
enter
jmp
scas
cltd
xchg
hlt
shl
dec
test
loop
pop
scas
mov
movsl
mov
jle
push
stos
push
jmp
sbb
mov
or
sbb
repz
ds
ja
rcrb
outsb
mov
jle
shrb
mov
stos
cli
xchg
sahf
out
scas
or
push
lcall
jae
xchg
or
jp
jb
test
inc
mov
mov
mov
idivb
cmp
out
js
add
dec
xor
jno
test
cmp
xor
push
jg
sub
sbb
xlat
movsb
add
negl
add
jle
incl
test
add
fisubrs
mov
lahf
push
std
scas
ret
into
ja
leave
fucomi
lret
inc
ret
cmc
fidivs
or
data16
imul
imul
lahf
mov
call
sbb
int
shll
das
int
mov
cmp
jmp
insl
addl
jbe
sahf
dec
add
leave
add
pop
xor
stos
out
ds
cmp
stos
in
insb
insb
loope
loopne
fdivr
add
jmp
imul
fstps
adc
imul
pop
mov
lods
call
mov
push
mov
mov
into
dec
pop
or
xchg
sti
pop
shll
sub
pop
outsb
mov
jg
adc
push
mov
shl
or
pop
jbe
pusha
mov
in
cmp
cmovl
sarb
inc
push
int
sub
jae
jbe
aaa
out
xchg
orb
enter
rclb
mov
cli
out
mov
sub
pop
call
sub
sub
mov
sahf
jnp
adc
xchg
popf
ror
xor
cmp
out
loop
push
lea
in
or
out
jns
mov
sahf
cmp
and
mov
lcall
loopne,pn
pop
fwait
cmp
mov
cmpsl
sub
pop
shl
cs
pop
out
xchg
out
movl
adcl
repnz
xchg
ja
add
ds
notb
cmp
pop
cmpsl
dec
or
lcall
daa
or
sbb
inc
dec
jne
jne
bswap
dec
sub
mov
sti
push
test
cmp
out
rcl
out
imul
inc
xlat
adc
mov
sbb
sbb
out
pop
mov
loop
out
and
fisttpl
mov
mov
test
jmp
incb
mov
lret
cmpsb
or
lea
outsl
push
imul
arpl
adc
lea
and
or
in
jle
arpl
sub
or
cmp
rcrb
cmp
ret
add
push
lcall
xchg
cmc
int3
pop
mov
outsl
inc
pop
scas
pop
fstp
xchg
insl
stc
push
mov
jno
or
push
xchg
cmpsl
dec
pop
jo
dec
hlt
dec
icebp
xor
sbb
sub
int
dec
push
fsts
mov
cmp
daa
mov
dec
andb
sub
sbb
repnz
push
mov
or
divl
aam
movsb
clc
cmpsb
or
xchg
gs
es
sub
cmpsb
and
and
mov
ja
dec
stos
insb
gs
lock
loopne
mov
inc
add
rcrb
lret
out
xor
lret
jnp
and
insl
lcall
mov
xor
jl
inc
xchg
repz
in
outsl
enter
mov
mov
add
add
imul
jle
add
mov
cli
mov
popf
fistl
jp
movsb
addr16
mov
jp
sub
mov
movsl
push
pop
adc
xchg
push
cltd
popa
and
cmp
pop
loope
ja
stos
adc
sub
dec
dec
mov
xchg
mov
sub
or
cmp
cltd
dec
push
sbb
jge
adc
push
mov
push
add
cmpsb
dec
dec
xlat
call
pop
test
push
mov
and
cs
js
lahf
loope
lock
test
cmp
bound
mov
stc
loopne
mov
cmpb
dec
popf
filds
mov
in
cs
xor
mov
xor
into
push
push
mov
jnp
mov
push
xchg
pop
push
imul
fimuls
ljmp
es
push
loope
sbb
stc
inc
insb
sub
cld
dec
loop
out
push
inc
adc
hlt
lret
mov
jecxz
leave
aam
iret
out
out
ja
out
or
push
lcall
and
jne
jg
and
insb
ret
pop
repnz
mov
push
movsl
jns
and
int3
xchg
jno
popa
ficoml
mov
cmp
lods
mov
push
sbb
push
push
ficoml
push
data16
cmp
fbstp
mov
pushf
mov
enter
in
mov
sbb
jmp
mov
popf
mov
jno
fidivl
pop
stos
dec
xor
pop
xchg
aad
dec
inc
repz
hlt
fdivs
lods
out
in
add
dec
xchg
je
mov
dec
and
and
push
lret
sbb
push
push
sti
jecxz
andb
xor
cmp
and
adc
jge
std
mov
push
ja
rcrb
imul
rcrl
sub
gs
or
mov
icebp
movsb
out
out
mov
out
dec
mov
and
and
in
xorl
dec
adc
xchg
inc
jnp
outsl
test
jl
add
or
dec
sbb
stos
and
mov
cmp
lds
leave
test
add
pop
scas
sbb
sbb
mov
jb
movsl
fimuls
call
pop
subb
daa
js
adcl
dec
mov
into
or
les
hlt
mov
outsl
stos
pop
into
data16
adc
mov
das
fnstenv
outsl
es
push
jo
mov
fisttpll
aaa
leave
mov
sti
push
xor
mov
xchg
mov
lcall
push
outsb
sahf
pop
in
xchg
pop
mov
les
push
es
adc
mov
or
jbe
sbb
jp
aas
xchg
jo
call
adc
sbb
sub
leave
pop
in
aas
shrb
cmpsb
xchg
or
loop
movsb
xchg
inc
test
inc
fs
inc
dec
movsb
sub
lcall
icebp
or
add
and
movsb
xchg
xchg
addr16
or
push
xchg
pop
mov
or
xlat
push
lahf
inc
xchg
pop
cs
ss
mov
xor
icebp
clc
ds
test
mov
inc
mov
test
xor
insb
xchg
imulb
stos
icebp
or
aaa
scas
dec
xor
daa
scas
and
adc
fisubl
sub
test
stc
mov
xchg
sub
jno
mov
mov
repz
mov
das
and
addr16
in
xchg
or
fmuls
cmpsl
cmovns
xor
or
jp
lret
bnd
aad
jl
ficompl
adc
mov
push
mov
mov
outsb
rcrl
in
cmovle
jb
sbb
xchg
mov
insb
push
mov
xchg
inc
insb
xor
pop
rol
movsl
and
pop
cmpsb
dec
loopne
mov
xor
jno
movsb
or
pop
adc
lea
push
sbb
pusha
mov
aad
inc
repnz
hlt
cmp
iret
hlt
mov
xchg
sbb
pop
cmp
mov
push
int3
and
or
and
mov
out
popa
jp
je
xor
pop
sub
stc
push
mov
pop
arpl
mov
out
dec
popa
std
ss
lods
scas
adcl
dec
mov
add
jne
mov
jne
idivb
pushw
add
mov
push
mov
pop
or
inc
pop
nop
sahf
cmp
pop
adc
in
shrb
jl
or
in
pop
std
testb
jmp
in
cli
mov
loop
lods
in
add
jg
jne
xchg
leave
xchg
push
inc
cmp
movsb
dec
stos
push
out
sbb
adc
cli
aam
addr16
jmp
push
sbb
push
push
dec
int3
sbb
pop
jge
orl
filds
pop
mov
inc
repnz
fcmovu
pop
out
fisttpll
adc
in
das
jno
mov
add
sbb
xchg
and
xor
pop
out
jg
sarl
andb
call
ljmp
add
mov
mov
jmp
das
xchg
popa
add
and
ss
xor
sub
pop
popa
pop
outsb
pop
jl
loop
adc
cmp
fldenv
add
insb
aas
push
fs
mov
out
push
lods
mov
cli
mov
xchg
mov
cmp
push
repz
fadd
inc
in
subb
mov
imul
xlat
sbb
cmpsb
pop
rcrl
aas
repz
lcall
pop
or
mov
loop
rol
stos
push
mov
and
faddp
out
ss
xchg
into
mov
gs
inc
or
mov
jne
clc
mov
jge
shrb
pop
jg
arpl
adc
lcall
and
xchg
inc
pop
add
sub
add
pop
insb
mov
iret
insl
xor
and
mov
jl
jne
aaa
out
xchg
mov
cmpsw
jnp
in
outsl
movsl
int
aad
dec
mov
incb
pop
orb
subb
jo
cld
push
adc
adc
jg
dec
mov
fistpll
pop
push
adc
repnz
or
sub
mov
cs
jmp
test
jns
sbb
jle
shll
sbbl
push
or
popf
cmp
shrl
daa
push
in
cs
rolb
cmp
sbb
pusha
mov
fimull
adc
into
pop
sbb
cli
mov
add
jnp
push
lock
addr16
add
mov
sub
hlt
paddq
xchg
or
lods
mov
mov
sbb
cli
jl
mov
aas
js
data16
adc
cmp
sbb
cmp
enter
pop
cmp
xor
mov
js
enter
lret
int
mov
sbb
pop
mov
ljmp
loopne
mov
outsl
and
incb
mov
mov
cli
adc
rclb
dec
in
dec
or
repnz
out
xchg
out
std
std
pop
aam
std
sbb
movsl
out
xchg
mov
jecxz
fs
push
jo
jmp
xchg
movsb
ds
lahf
adc
mov
pop
ret
or
test
jns
cmp
mov
jnp
jb
mov
mov
push
cmp
inc
push
adc
or
mov
and
push
push
jg
enter
nop
mov
sbb
movb
xorl
mov
popf
add
cmp
add
inc
pop
repnz
loopne,pt
jb
mov
cwtl
stos
je
inc
ljmp
xchg
xchg
or
sbb
mull
mov
orb
push
addb
mov
scas
jl
inc
sbb
lea
push
jno
sbbb
ret
out
push
xchg
push
bound
cmpsb
xor
lret
or
mov
testl
daa
not
jbe
adc
dec
test
mov
and
call
pop
sub
sbb
shl
push
add
fmuls
iret
xlat
sub
cs
mov
lahf
lds
inc
mov
pop
fstp
movsb
inc
xchg
mov
push
push
cmp
iret
sbb
out
push
icebp
or
in
adc
xchg
dec
lret
movsb
mov
push
lret
mov
pop
sub
add
cmc
cmpsb
leave
jg
dec
addr16
stos
push
loope
test
add
jp
test
ljmp
shll
loop
sub
mov
cmp
fidivrl
loopne
add
std
pop
xchg
sub
push
into
mov
cs
jecxz
or
orb
mov
lds
sbb
push
jne
xchg
xchg
lods
or
mov
stos
mov
xchg
lahf
mov
aas
outsl
pop
pop
decl
popa
fcoml
imul
in
sbb
inc
and
push
add
jg
je
cmpsb
subl
lds
pop
cmp
pop
lea
or
cs
sub
notl
cltd
jbe
jl
mov
xor
xor
jb
mov
movsl
mov
mov
int3
adc
pop
imul
mov
pusha
daa
jbe
inc
dec
inc
push
mov
imul
add
xchg
or
scas
daa
jmp
std
aaa
ret
es
fldl
scas
mov
sub
movsl
data16
pusha
add
aad
dec
mov
or
sbb
cmpsb
aaa
mov
inc
mov
adc
sbb
sbb
xlat
repnz
cmp
sbb
mov
lahf
shlb
shlb
push
push
push
shll
dec
mov
ss
inc
loope
shrb
dec
out
mov
add
mov
cltd
jb
sbb
push
cmpsb
int3
in
dec
jno
std
insb
xchg
mov
movsl
ds
imul
cmp
lcall
dec
aaa
jp
sbb
and
nop
test
data16
jp
cmpsb
repz
or
jne
cmp
outsl
enter
mov
xor
cmp
jns
xor
aam
in
cmp
loope
scas
dec
mov
inc
outsb
gs
cmp
or
push
outsb
inc
loop
push
push
out
mov
and
mov
dec
mov
push
mov
hlt
mov
or
sti
popa
mov
mov
cltd
jmp
xchg
decl
das
jmp
push
insl
inc
xchg
xchg
cmp
lret
jecxz
ficompl
pop
insl
or
mov
out
shlb
inc
pushf
les
leave
add
pop
in
aas
insb
into
mov
sti
cmp
test
jnp
pop
dec
push
ja
repz
xor
fstpl
xchg
sub
daa
movsl
cmp
jns
je
cld
ds
inc
add
cmpsb
jmp
add
mov
mov
mov
mov
dec
mov
push
push
fs
xor
cld
movsb
inc
dec
stc
je
push
popf
clc
pop
pop
pop
pop
loopne
arpl
xchg
bound
push
jo
popf
sub
cmp
out
rcrb
out
cmp
mov
jno
sub
push
push
pop
jge
mov
adc
ret
mov
test
jbe
popa
lock
sbb
shl
ret
jo
jecxz
xchg
lret
in
cs
mov
repz
inc
jecxz
lret
imull
mov
imul
or
mov
push
rcrb
lea
pop
arpl
mov
ljmp
push
fisubrs
enter
push
test
pusha
imul
sub
out
sub
or
out
sbb
sarb
cwtl
push
mov
pop
pop
lret
jns
cmp
push
insl
pop
jns
imul
xor
xor
add
xchg
or
inc
insl
xchg
pop
cld
dec
xor
insb
pushf
and
mov
arpl
pop
cmp
dec
shr
lods
stos
iret
lret
xchg
lahf
push
push
and
out
leave
jo
sbb
sti
sub
pushl
fcomps
inc
cmpsl
mov
xchg
and
cld
in
movsl
insl
int
pushf
stos
fistpll
xlat
xor
out
pop
rclb
cmp
pushl
push
jnp
hlt
add
ds
aas
jle
pop
jmp
mov
lahf
mov
jp
jg
mov
clc
jae
xchg
and
addl
mov
stos
aas
adc
dec
sub
add
pop
fdivrl
aas
scas
aaa
stos
ss
aaa
push
popl
test
loope
push
ds
lahf
ret
jbe
lods
rolb
mov
lods
xor
push
xor
dec
enter
add
fwait
pop
mov
pushf
mov
fidivrs
js
jp
mov
fwait
hlt
jmp
lods
movsb
movsb
ja
cmpsl
fwait
dec
sbb
in
frstor
orl
stc
clc
cmpsl
adc
ljmp
add
xor
jns
jo
int3
daa
xor
pop
arpl
insb
test
mov
fistl
sub
enter
test
push
ss
imul
push
cmp
inc
fsubr
jns
jmp
sbb
dec
sub
je
dec
cmc
pop
ds
add
cld
adc
ret
in
add
ds
xchg
add
jne
in
loope
out
xchg
nop
les
addr16
pop
jge
scas
pop
mov
sbb
pop
mov
pusha
dec
jecxz
and
shlb
int
jmp
mov
or
test
jecxz
inc
adc
xlat
dec
dec
ss
aaa
xchg
test
add
mov
xchg
and
xchg
cli
mov
loope
cli
lods
mov
cmpsb
loop
lret
push
shll
pop
add
mov
jmp
or
dec
or
pop
out
inc
test
pop
xor
loope
vmread
push
pop
xor
cmpsb
hlt
adc
lds
int
mulb
inc
fnstcw
lea
dec
ljmp
lds
lahf
out
imul
cld
out
xchg
or
lahf
or
imul
popa
movsl
inc
sbbl
pop
mov
ror
outsb
xchg
mov
sbb
jnp
adcb
mov
sub
jge
xor
dec
aaa
and
and
js
mov
pusha
sub
ljmp
push
fwait
leave
cltd
ret
test
sbb
hlt
add
push
cmp
fstpt
loopne
sti
enter
or
and
decl
pop
aam
lret
xchg
cmc
fs
pop
test
pushf
mov
daa
push
or
decl
shlb
imul
jbe
fs
sbb
push
mov
mov
push
sbb
sub
adcb
mov
insb
stc
maxps
xrelease
cmp
jmp
ret
repnz
jp
xchg
insl
sub
addr16
pop
in
lret
sbb
mov
mov
mov
div
movl
add
jbe
je
sub
sbb
mov
lods
push
push
sub
xchg
mov
mov
dec
dec
pop
push
add
lea
fs
sbb
aas
jnp
mov
stos
jae
and
flds
cld
xor
mov
dec
test
gs
and
ficomps
pop
pop
pop
mov
nop
sub
jecxz
push
pop
push
rcr
negl
push
fsts
cmpl
cmpsb
push
push
clc
les
jg
daa
add
in
xor
lret
push
roll
jl
mov
loop
shlb
out
push
push
lret
jno
fwait
jo
js
push
pop
jb
or
lods
mov
jmp
sub
dec
pop
sahf
loope
push
jae
cmp
sbb
mov
out
ss
rcrl
dec
call
imul
out
popa
stc
aam
xorl
repz
sub
pop
addr16
xor
mov
or
push
mov
int3
insl
lds
fisubrl
dec
push
sti
mov
mov
mov
push
jmp
clc
xor
and
xlat
sub
incl
out
jo
jmp
dec
cmp
xor
stc
jmp
xor
out
cmpsb
and
xor
xorl
jge
inc
dec
dec
push
mov
arpl
mov
into
xor
lods
sub
aad
pop
dec
sub
imul
fwait
or
adc
mov
push
cmp
mov
ret
das
xchg
sbb
jg
jno
add
jge
cmp
aad
imul
mov
jnp
push
and
popf
xor
leave
mov
push
out
mov
jp
dec
mov
mov
inc
and
push
push
jno
lcall
std
jmp
push
dec
mov
pop
xchg
sbb
adc
outsb
lcall
leave
pushl
divb
popa
push
in
push
loop
add
inc
mov
jge
sub
fstpt
sbb
or
cld
int
in
iret
mov
adc
std
xchg
mov
mov
sbb
mov
and
push
fiaddl
xchg
insl
mov
in
mov
aas
jne
xor
cvtps2pi
iret
fstpt
cmp
ja
xchg
hlt
mov
sahf
in
sbb
pop
mov
popf
cvtpi2ps
add
mov
fildl
mov
es
cmp
xchg
int
xchg
or
shll
mov
mov
cld
loop
adc
inc
popa
enter
xor
out
adc
lret
mov
push
push
adc
stos
in
pushf
insl
and
outsl
or
icebp
mul
out
int
outsb
jl
inc
cmp
cmp
jno
rorl
cwtl
int3
xchg
add
lret
xlat
pop
xchg
aad
shl
jmp
jo
stos
loope
push
jg
hlt
or
jecxz
aaa
test
fs
popa
fwait
test
jl
mov
ljmp
push
cmp
xchg
add
jg
int3
ljmp
mov
fs
jb
imul
push
jns
ljmp
inc
or
test
enter
mov
fnstenv
fldenv
outsb
mov
imul
push
xchg
xor
out
clc
dec
pop
cwtl
jnp
cmp
fsubrp
mov
ss
mov
jecxz
push
mov
ret
jg
mov
outsl
outsl
cmp
lods
mov
ss
jb
rep
cmpsb
int
fbld
pop
cmc
addr16
test
lods
inc
movsb
jnp
movsl
push
xor
xor
mov
pusha
dec
xchg
adc
mov
xchg
xchg
push
jbe
mov
xlat
incb
cmpsb
push
mov
cltd
rcrl
loopne
xor
jnp
lods
test
in
mov
dec
jne
pusha
dec
imul
mov
js
dec
jno
add
sub
faddl
dec
cmc
movsl
jbe
leave
pop
aad
mov
xchg
rcrl
mov
jnp
in
pushf
adcl
pop
fbld
cmp
sbb
sti
sbb
ljmp
sbb
xchg
rcrl
sub
push
insb
out
into
les
call
push
mov
out
fdivp
fisubs
pusha
cmp
add
popf
ja
dec
sbb
pop
rcl
jmp
jge
adc
lret
pop
cwtl
sub
pop
add
xor
imul
or
fimull
mov
pop
or
mov
jp
sbb
rclb
cmc
xlat
mov
sub
pop
adc
ljmp
decl
jb
push
movsb
arpl
js
aaa
clc
mov
data16
xchg
jb
or
xchg
sub
into
sarl
jb
xchg
ret
sbb
dec
mov
and
sbb
ficoml
pop
lahf
xor
or
jg
iret
clc
adc
popa
mov
jo
pop
cmpsl
lcall
je
das
push
sub
inc
adc
jge
stos
sub
fiadds
rclb
out
add
aas
push
mov
lods
add
jmp
repnz
cmp
fdivp
cmpsb
xor
loop
and
xchg
in
out
mov
add
or
cltd
lds
xor
cwtl
dec
and
mov
pusha
xlat
loope
loope
xor
mov
xor
mov
ss
pop
and
test
sub
jb
loope
cmp
mov
or
push
pop
jg
bound
jnp
arpl
mov
add
inc
adc
arpl
sbb
mull
jmp
lds
xchg
lods
icebp
jle
mov
out
sbb
xor
dec
xlat
cld
or
sahf
lret
ljmp
mov
xchg
fwait
jnp
sub
add
or
jl
es
jns
jns
arpl
or
mov
and
add
clc
cli
jl
dec
in
adc
adc
jp
bound
pop
inc
sub
je
sub
push
jg
ds
mov
in
ss
pop
mov
and
pusha
dec
stos
mov
lret
or
sub
cmpsl
push
imul
faddp
jbe
sbb
movsb
push
push
out
ret
fsubrl
rep
imul
es
pop
or
adc
sahf
in
mov
dec
add
inc
pop
les
add
or
adc
and
les
inc
pop
jnp
test
imul
jmp
sub
imul
fstpt
mov
sti
jle
push
fmuls
adc
js
and
into
dec
mov
dec
mov
cmp
xchg
jae
pop
xchg
data16
test
cmp
sbb
les
mov
push
je
ljmp
int
xlat
mov
cld
out
sbb
test
jo
out
aas
xchg
arpl
mov
ljmp
aam
frstor
mov
and
adcl
or
jno
adc
aas
nop
repnz
in
bound
jl
or
mov
lea
lea
mov
repz
push
adc
lock
lret
add
push
and
std
jb
or
jnp
push
lret
mov
jo
sbb
arpl
into
sub
fidivrl
sub
mov
sbb
or
xor
and
xchg
adc
in
in
and
fs
adcl
xchg
cmp
mov
mov
mov
imull
int
push
add
or
imul
negl
xchg
shlb
cmpsb
into
xor
ljmp
xchg
push
loop
jns
shlb
dec
inc
bound
mulb
mov
jmp
xchg
cmp
inc
mov
inc
dec
subl
inc
jbe
aad
dec
sub
dec
mov
lcall
test
jbe
cltd
dec
sti
mov
leave
ljmp
fwait
and
jns
and
mov
mov
xor
jb
sub
adc
out
xorl
pushf
out
dec
mov
add
imul
push
aad
test
addl
sbb
lods
mov
inc
movsl
or
clc
dec
aas
aas
out
jo
clc
outsl
arpl
pop
jg
dec
add
test
or
dec
sbb
lret
cmp
mov
pusha
not
or
cmc
sqrtps
cmp
push
stos
sub
jle
sub
cwtl
pop
icebp
cwtl
and
mov
popf
subl
and
xor
jae
xchg
ljmp
jmp
fwait
inc
in
xchg
xchg
add
and
jl
test
cmovb
and
bound
sub
inc
xchg
stos
frstor
dec
sbb
push
jmp
lds
repz
movsl
nop
int
stos
and
xchg
or
fadd
js
int3
inc
push
or
cmp
mov
aas
mov
jns
rcrb
popa
pushf
outsb
movsl
xor
je
jle
push
xchg
ja
inc
mov
aas
add
mov
cmpsl
fcmovbe
push
mov
dec
pusha
add
mov
push
lret
sbb
cmp
dec
mov
fsubrs
es
xorb
cmpsl
ret
enter
xor
cmpb
roll
pop
jo
in
add
xchg
mov
dec
dec
mov
mov
add
out
rolb
out
sarb
or
iret
pop
push
aam
jns
aas
into
sbb
add
repnz
sbb
jge
sbb
and
stc
pop
dec
ret
inc
inc
and
adc
xchg
mov
push
dec
or
arpl
aaa
cmpl
outsb
cld
cmp
lret
clc
add
dec
add
in
dec
mov
addb
push
push
loope
lods
xor
aam
cmp
push
lock
adc
mov
push
push
inc
mov
out
or
and
xlat
inc
dec
idivb
je
adc
or
std
mov
inc
daa
outsl
ret
pop
dec
push
ffree
push
movsl
aas
inc
mov
roll
mov
xchg
inc
xor
and
pop
lret
cmp
cltd
int
pop
es
stos
lahf
mov
and
rcl
and
movsb
push
sbb
dec
and
scas
xor
das
testb
jne
jae
inc
xorl
ds
test
rcll
jo
pushf
xor
ucomiss
lods
mov
sub
adc
outsl
in
pop
shll
pop
mov
shrb
sahf
test
dec
xchg
push
push
sarb
sub
fwait
imul
jo
pop
cs
sbb
imul
or
inc
cmp
and
imull
stos
mov
outsl
popa
outsl
jnp
mov
ljmp
icebp
cmp
xchg
imul
pop
repnz
xchg
idivl
mov
mov
mov
dec
enter
pop
dec
sub
sub
lea
iret
in
pop
cmpsb
sub
cmpsl
insb
pop
add
jle
jnp
into
sbb
mov
repz
addr16
sub
mulb
mov
inc
sub
aad
push
loope
lret
or
adc
add
sbb
push
jmp
inc
fsts
mov
dec
mov
pop
movsl
orb
scas
call
mov
mov
mov
xor
and
or
xchg
into
scas
cs
push
mov
rcrl
adc
sub
leave
dec
sub
adcb
andb
push
pop
xor
cmp
arpl
sub
mov
inc
mov
adc
arpl
cltd
mov
in
lea
in
jecxz
jecxz
adc
in
sbb
xchg
push
loopne
cmp
int3
or
popa
in
in
push
repnz
xchg
xor
mov
adc
cmp
or
fidivrl
push
stc
mov
jmp
adc
sbb
inc
fidivs
pop
dec
cmc
lea
cmpsb
pop
int3
mov
dec
inc
ja
adcl
xor
cmp
lea
lods
push
in
pop
std
outsl
scas
jbe
arpl
enter
pushf
add
in
xchg
mov
cmp
xchg
xchg
xchg
cmp
jno
lea
fistpl
mov
adc
mov
outsb
loopne
dec
repnz
insl
mov
repnz
pop
pop
mov
repnz
add
mov
std
in
mov
push
les
lcall
bound
cmpsl
cmc
mov
inc
dec
sahf
push
pop
stc
sub
sub
mov
insb
ret
rcl
sub
into
roll
scas
inc
jns
andb
xchg
push
inc
push
ja
test
scas
adc
mov
sub
jnp,pt
sub
fiadds
xchg
lock
cli
mov
pop
pushf
out
pop
xor
sahf
adc
push
xchg
xchg
push
bound
jle
mov
mov
pop
sti
icebp
xor
movsl
mov
iret
or
fdivl
ljmp
mov
xor
int3
mov
cwtl
flds
adc
cmpsb
sub
shrl
jo
adc
mov
cmp
pop
push
mov
sti
mov
and
xor
cmc
or
out
jns
int
xor
pop
mov
enter
sub
adc
loope
xchg
cltd
dec
lcall
xchg
push
add
push
insl
pop
push
sub
int3
cmpsb
xchg
cmp
sub
fdivr
data16
xchg
dec
mov
sub
pop
xchg
pop
fldl
js
jg
and
or
ret
xchg
sbb
rcr
repz
repnz
or
xor
xchg
dec
pop
jns
add
mov
mov
mov
andl
imul
push
push
divl
inc
push
pop
fstl
xor
std
rclb
les
decl
inc
adc
call
sub
enter
sbb
cmp
fstpt
xchg
mov
pop
jecxz
icebp
and
push
dec
pop
stos
aad
hlt
fwait
lahf
mov
adc
ficoml
out
bound
adc
and
arpl
rorb
sub
xor
push
cmc
mov
aam
cmp
sub
push
cmp
mov
push
adc
lret
gs
call
pop
pushl
push
and
lods
mov
xor
dec
fstpl
adc
subl
scas
mov
adc
push
fld
stc
cmp
mov
incl
or
scas
mov
lock
arpl
mov
xlat
push
lods
shrb
in
pop
ljmp
cs
add
shll
hlt
and
cmp
sub
fildl
and
js
rclb
or
mov
sbb
iret
les
pop
mov
pop
aaa
ret
daa
push
in
stos
insl
ds
lcall
std
inc
insl
xchg
add
mov
pop
add
and
mov
fidivs
int
cmp
popa
adcb
adc
mov
sub
lcall
adc
stos
cmc
hlt
ds
frstor
add
pushf
push
bound
cmpsl
iret
hlt
add
jbe
aaa
push
fdivs
pop
jl
xchg
push
dec
pop
sub
xchg
xchg
cmc
mov
in
dec
mov
xchg
js
xor
push
sahf
mov
jg
fucom
pusha
into
enter
jp
mov
mov
mov
add
mov
sarl
mov
add
and
lods
xchg
and
pop
adc
and
pop
xchg
not
andl
test
xor
ss
insb
xor
mov
ljmp
mov
push
andb
in
push
rcrl
adc
fucom
or
shll
sti
or
cmp
push
mov
out
or
into
insl
lret
fists
aam
or
outsl
fdiv
incl
push
xchg
cli
arpl
pop
pop
add
iret
dec
data16
loop
mov
imul
ss
inc
dec
inc
adc
sbb
jae
xor
push
int3
out
movaps
xor
insl
popf
mov
icebp
scas
addl
push
inc
and
popf
sub
adcb
push
or
fcoml
mov
xchg
aad
int
loope
push
in
das
mov
jle
mov
adc
mov
mov
call
loop
and
aam
dec
xchg
push
adc
lcall
lock
mov
sbb
push
and
or
in
push
add
dec
les
test
mov
rcrb
xchg
cmp
repnz
cmpsl
orl
insl
jbe
cltd
push
jle
imul
cwtl
test
jb
push
xor
addl
mov
into
push
mov
in
xchg
int3
sbb
fstpl
sbb
repnz
mov
xor
or
xchg
and
push
loop
dec
test
mov
fnstcw
jmp
sti
jae
pop
mov
fidivrs
mov
mov
stc
popa
stc
insl
aaa
ror
cmp
mov
loope
scas
mov
lret
hlt
mov
in
mov
mov
dec
rolb
xchg
stc
xchg
pushl
mov
rclb
pushl
dec
mov
add
mov
mov
mov
testl
cmpsb
push
jmp
dec
ljmp
dec
mov
and
sub
add
and
lret
cmp
and
xor
fldt
cmp
dec
and
or
cli
cmpb
shll
shlb
sub
sub
and
mov
xchg
fisttps
negb
mov
pop
not
cs
xorl
xor
dec
scas
insl
add
popl
pandn
gs
addr16
mov
hlt
rorw
fcoml
addr16
xor
out
scas
out
push
in
test
in
int3
aaa
cmp
sub
sti
xchg
pop
add
push
dec
and
mov
int
aad
in
and
mov
pop
out
mov
cmp
repz
xchg
bound
mov
inc
dec
push
mov
loopne
fisttps
jecxz
std
out
pusha
fdivrp
mov
clc
jae
adc
in
push
in
loope
cli
or
inc
les
mov
fsts
cltd
cmpl
pop
or
inc
push
pop
rolb
jnp
mov
into
stos
sub
scas
loopne
add
push
add
imul
out
negl
or
cld
cmp
stos
xor
cmp
and
pop
xchg
mov
fldenv
cmp
pop
or
enter
pop
popa
pop
sub
cmc
add
aam
call
jmp
insb
mov
test
lret
insl
xchg
bound
mov
shrb
inc
or
out
mov
jno
pop
push
jns
adcl
ljmp
xchg
push
ja
push
pop
leave
mov
gs
sub
imul
outsb
loope
mov
pop
iret
mov
mov
push
int3
cmpsl
dec
mov
nop
sub
jle
ret
dec
jge
sahf
jns
jns
add
mov
cmp
mov
daa
es
inc
loopne
cmpsb
cltd
jnp
jmp
addb
cwtl
stos
push
stos
mov
lods
jno
jmp
fsubl
push
fsubrl
cltd
pop
icebp
call
mov
bound
popa
out
imul
sbb
lret
mov
repz
int
mov
aam
adcl
cli
sbb
mov
clc
repnz
sub
andb
repnz
dec
popa
pop
cmp
dec
xchg
inc
fwait
sub
mov
ret
mov
into
xchg
incl
xor
or
add
mov
sbb
xor
das
mov
gs
icebp
cmp
cmp
dec
mov
xchg
stos
jnp
adc
stc
push
sbb
or
xor
popf
adc
inc
pusha
xchg
inc
sub
jle
push
push
sbb
loopw
jle
push
repz
mov
loopne
insb
mov
call
cs
int
inc
lods
cmp
xor
mov
add
out
aaa
cmp
fisubl
mov
mov
pop
stos
rclb
add
data16
es
insl
dec
popf
dec
adc
lcall
pop
lret
and
mov
mov
insb
jmp
mov
out
rcrb
cmp
rcrl
bound
in
or
or
int
je
test
arpl
test
pop
mov
push
inc
movsb
clc
jnp
lcall
or
aad
mov
mov
or
repnz
cli
and
popf
xor
popa
lea
inc
js
sub
mov
stc
lods
push
call
je
ror
out
ja
rcrl
inc
adc
ficompl
popf
sbb
mov
mov
xorl
jne
mov
in
pop
into
int
imul
xorb
cmp
ja
rcr
movsl
ret
hlt
loopne
rorb
ljmp
push
out
data16
pusha
and
add
mov
enter
mov
pop
imul
jecxz
push
and
inc
cmp
inc
adc
ja
les
jmp
shll
popf
into
sub
fiaddl
push
divl
ss
jae
jg
cmpsl
outsb
imul
cs
aas
repz
popa
pop
cmp
fidivrs
into
cmp
jle
je
sbb
cs
psrlq
and
movl
dec
inc
xor
jmp
lock
add
call
push
sub
inc
xor
xlat
or
add
call
jg
ret
mov
imul
mov
in
mov
enter
jecxz
mov
mov
xor
popf
aas
pop
push
das
cmpsl
in
scas
and
decl
lret
nop
into
mov
push
pop
lret
test
and
sub
stos
mov
popf
scas
mov
jo
add
cmp
xchg
jecxz
ss
mov
mov
cmpsb
test
dec
sbb
dec
cmp
and
or
add
add
push
aad
insb
cltd
fidivrl
fisttpll
pop
adc
imul
mov
andb
loope
lcall
xor
cmpsl
in
cld
xchg
xchg
xor
xchg
movl
pop
jmp
rcll
mov
idivl
jg
out
dec
mov
scas
adc
jo
mov
add
call
rolb
jnp
or
out
pop
pop
leave
punpckhbw
leave
clc
cmp
mov
ljmp
cmp
cli
adc
sarb
fwait
jno
leave
dec
mov
jne
imul
or
imul
lods
xchg
dec
xor
inc
jp
pop
mov
push
adc
jno
incl
sbb
add
push
into
push
leave
ljmp
cmp
push
adc
sbb
clc
adc
xchg
cmc
adc
stos
lods
cltd
mov
lret
xor
pushf
mov
jno
mov
pop
mov
enter
and
jb
push
sbb
jle
xchg
jecxz
mov
dec
xchg
mov
xor
sub
nop
das
dec
repnz
sub
and
xchg
xchg
hlt
dec
aam
mov
add
xor
hlt
lods
jmp
inc
mov
inc
mov
aas
out
xor
inc
dec
outsl
sbb
dec
addl
dec
xchg
xor
gs
xor
gs
hlt
sub
xchg
fwait
add
sub
bound
xchg
cs
mov
mov
xor
xchg
repnz
cmp
cmp
jp
mov
or
arpl
mov
inc
or
es
cmp
add
add
cmp
ds
pmaxsw
push
fwait
adc
cltd
inc
dec
jmp
int3
mov
lds
pop
out
mov
dec
dec
pop
mov
jmp
inc
into
fsubrs
jle
ljmp
into
jge
les
lods
in
mov
dec
cmp
dec
les
gs
lock
enter
sahf
inc
push
dec
repz
cmp
outsl
adc
cs
mov
jne
in
sub
push
push
jb
adc
dec
js
movsl
pop
test
mov
xchg
mov
push
lods
lret
jb
and
popa
aas
sub
sahf
push
pop
jne
aam
jno
sbb
jg
and
cld
ror
jmp
push
icebp
lahf
out
aad
sub
aas
add
stos
popf
mov
call
jge
out
sub
add
aad
outsb
push
jg
push
cmp
mov
mov
in
xchg
dec
jno
outsb
sbb
sub
fidivrl
pop
orl
rcrl
xor
cmp
add
jmp
push
cmp
leave
push
ja
sub
jmp
mov
ds
push
les
sti
and
data16
stc
mov
pop
jecxz
xor
or
mov
in
lcall
sub
jmp
pop
ds
inc
decb
lods
push
inc
pop
jne
adcl
call
mov
fisubrs
xor
inc
enter
xchg
push
mov
lret
mov
loope
mov
imul
divl
jo
repnz
sbbl
clc
push
jp
ja
stc
in
orl
ds
adc
mov
pop
inc
jg
lahf
mov
mov
mov
adc
sub
std
mov
or
les
push
mov
jg
repz
call
stos
popa
or
mov
dec
mov
mov
fildll
inc
adcb
enter
mov
or
ficompl
into
add
push
nop
stos
and
call
xchg
and
popf
lock
sub
xchg
fdivl
mov
pushl
pop
xchg
dec
xor
ret
mov
sbb
fs
jns
mov
scas
pop
incb
and
pop
mov
mov
pop
lea
fistpl
lahf
sub
dec
out
addr16
or
and
cmp
sqrtps
push
sbb
and
enter
loope
cld
push
mov
stc
push
or
mov
arpl
cltd
pop
inc
mov
and
adc
es
sub
dec
mov
es
xchg
xor
cltd
xor
mov
in
pop
loop
in
or
mov
or
jno
cld
pusha
pop
fmuls
sti
ds
dec
mov
xlat
xor
mov
or
testb
idivb
cld
sbb
out
out
lcall
pop
leave
add
sbb
fisubs
sbb
pop
adcb
in
dec
mov
adc
pop
std
or
test
movsb
sahf
loop
stos
push
xchg
xchg
or
les
mov
mov
mov
jl
cs
jns
jno
mov
pop
push
cli
mov
and
loope
mov
pop
scas
sahf
xchg
mov
imul
mov
push
out
stos
arpl
cs
iret
sub
jno
dec
dec
mov
jno
mov
out
dec
imul
pusha
xabort
push
jp
push
out
xchg
sahf
adcb
pop
lret
fcom
push
int
cld
and
cmp
repz
jmp
push
fwait
mov
mov
xchg
dec
out
imulb
ds
jge
xchg
xlat
lds
rolb
cmp
sbb
stc
stos
pop
fcomp
outsl
lcall
and
fldenv
loop
jb
sti
lods
jg
mov
fbstp
scas
out
and
int3
dec
stos
lds
push
ljmp
add
pushl
inc
pop
sub
mulb
add
insb
add
lds
xchg
cmp
jecxz
sbb
xchg
sub
adc
out
or
cwtl
mov
xchg
hlt
sbb
push
pop
popa
or
lret
jecxz
xchg
xor
xor
leave
dec
addb
repnz
jb
inc
scas
xor
arpl
inc
sbbb
in
adc
daa
scas
lcall
push
rcrl
jmp
push
bound
fistpll
stc
movsb
rcll
cmp
mov
sbb
push
cmp
mov
orl
dec
mov
xor
jp
out
mov
gs
ret
dec
les
sbb
mov
out
jecxz
jae
push
push
xor
jp
mov
addl
lods
sub
xchg
mov
jmp
icebp
inc
fsts
movsl
dec
mov
xchg
mov
add
mov
stc
xchg
call
mov
sbb
sarb
sti
imul
mov
outsl
mov
lret
jecxz
push
cld
ret
test
add
shrb
inc
inc
cmp
aam
enter
jl
sbbl
out
adc
or
sub
inc
xchg
sbb
jmp
xor
repz
mov
pop
mov
mov
mov
or
dec
movsb
sub
lahf
xlat
out
pop
jl
imulb
jb
jo
aas
cmpsb
fs
gs
int3
inc
incb
mov
add
or
enter
cmp
jecxz
pop
or
imul
or
movsl
or
icebp
mov
je
lahf
push
mov
lret
pop
jb
push
inc
shll
jb
adc
mov
lds
xchg
fadds
dec
mov
loope
add
xchg
in
int3
dec
je
lcall
cmp
cmp
xchg
and
adc
shrb
cmc
or
add
jecxz
fwait
xlat
imul
aad
scas
pop
orl
add
pop
add
jb
push
push
add
push
pop
aam
push
inc
mov
and
or
sahf
or
lock
in
dec
test
dec
push
push
jno
push
cs
pop
push
lret
push
call
les
test
cmp
jecxz
jecxz
or
or
popl
push
mov
push
in
mov
test
mov
sub
mov
push
call
aas
repz
or
adc
push
mov
or
and
std
pushf
repnz
mov
ss
fists
ret
shll
xlat
jae
repz
scas
inc
xorl
std
cmpsl
clc
cmc
add
in
cmp
mov
cmp
xlat
or
incl
std
push
cli
jg
out
sarl
cltd
push
ret
outsl
sub
pop
gs
xor
cltd
cmp
mov
inc
xchg
cmp
adc
adc
int
stos
adc
mov
call
inc
enter
dec
hlt
fildl
out
addr16
outsl
popf
arpl
sti
jnp
lds
sbb
enter
sbb
sub
pop
xor
sahf
scas
sub
enter
jae
push
inc
jae
mull
in
xor
ror
push
in
gs
inc
mov
xlat
xchg
loop
and
int3
fadd
movsb
negl
sbbl
out
jp
jne
pop
jmp
inc
stos
lret
dec
sbb
jmp
das
add
xor
out
push
movsb
inc
fldt
sub
or
jp
test
sbb
jmp
mov
sbb
das
mov
into
lret
sarl
and
in
aaa
retw
mov
lret
and
outsb
jne
jge
cs
loop
or
fstpl
dec
push
sub
mov
mov
je
jg
push
lds
out
mov
or
jno
jne
adc
dec
sahf
pop
dec
xor
dec
orb
or
xchg
fiaddl
cltd
xor
jne
imul
jb
sub
mov
in
fs
fimull
mov
pop
add
cmpsb
rorl
sti
shlb
or
push
push
mov
or
mov
push
jnp
shr
xor
adc
adc
imul
fstpl
jne
das
push
pop
sbb
xchg
add
loop
cli
mov
mov
cmp
outsl
addl
rcrl
cli
xchg
adc
repnz
clc
adc
pop
mov
insb
pushf
js
les
mov
out
imull
cmpsl
in
fmuls
ret
into
dec
in
inc
or
mov
jbe,pt
or
push
cwtl
pop
sbb
sub
pop
sub
mov
repnz
dec
jge
sub
and
ds
dec
lret
mov
add
nop
cs
call
jbe
mov
aas
xor
push
js
or
mov
cltd
repz
add
ret
insb
in
and
add
inc
sbb
adc
scas
sub
jge
fdiv
adc
jg
les
pop
mov
clc
add
push
pop
mov
popa
sbb
cmp
mov
sti
aad
pop
or
js
add
jnp
mov
mov
jmp
lsl
cmp
jmp
fcompl
cltd
adc
and
cmp
and
dec
gs
out
arpl
xorl
shlb
andl
xor
inc
mov
movsb
jae
mov
or
test
and
sbb
fs
ret
lock
jb
sub
pop
pop
jecxz
arpl
lret
push
in
mov
or
and
push
fwait
les
push
aaa
jl
cmp
or
sahf
fcmovb
mov
inc
pop
dec
dec
and
mov
xchg
mov
into
aaa
dec
xor
cmpsl
mov
jmp
mov
scas
ret
xor
insl
imul
rorl
xchg
fwait
test
pop
clc
or
push
push
push
inc
repz
xor
cltd
jbe
cwtl
jns,pn
xlat
jle
mov
sbb
cwtl
xchg
outsb
daa
mov
enter
cmp
mov
add
cmp
adc
pop
in
inc
pusha
lods
mov
leave
inc
out
lods
lret
jp
push
inc
in
pop
add
or
cmc
das
shl
sbb
clc
inc
and
mov
in
fistps
sbb
push
mov
mov
and
pusha
or
stc
xchg
outsl
or
push
xchg
push
inc
lret
xchg
movsb
mov
ret
cmpsb
nop
std
fstp
fsubrs
fstl
adc
dec
dec
or
push
adc
add
push
sub
and
fs
sar
xor
imul
test
es
and
cld
lahf
insl
shlb
in
insl
test
sub
mov
scas
int3
mov
test
push
sbb
scas
sub
cmpsl
jg
andl
data16
fstps
dec
daa
test
and
sub
adc
daa
mov
mov
insl
mov
arpl
push
in
and
pusha
in
aam
push
loope
xor
xor
adcl
inc
cld
push
incl
call
jle
jg
imul
and
jnp
dec
loopne
je
push
fsub
enter
cmp
insb
and
cld
js
push
jne
xchg
jmp
mov
js
cli
testb
rol
cmpb
add
aaa
hlt
xor
pop
sarl
jecxz
stc
mov
clc
xchg
std
sarl
test
cld
xor
mov
or
pop
sbb
fnstsw
jp
addr16
push
into
das
xor
int
or
mov
jge
xchg
inc
mov
lcall
cmp
add
fadds
and
loop
test
jo
inc
in
inc
shrl
out
lock
pop
scas
push
push
xchg
mov
xchg
xchg
sub
xchg
sbb
cmp
les
es
and
dec
add
pop
jmp
push
aam
popf
nop
out
dec
sub
sbb
xor
sub
adc
in
xor
pop
test
mov
and
push
sub
clc
jae
push
das
push
les
pushf
xor
jg
adc
ret
out
pop
add
lods
sarl
jmp
adc
test
mov
sbb
out
lock
subb
lret
int3
mov
inc
cmpsl
fimull
or
out
mov
dec
idivb
cmp
into
adc
sbb
fcmovbe
xor
pop
outsl
das
out
jns
push
mov
les
pop
rclb
repnz
sbbl
sub
clc
and
js
and
lods
xchg
pop
push
jmp
movsl
fnstenv
psadbw
enter
jae
pop
sub
sub
imul
sub
adc
mov
xchg
daa
imul
or
pop
dec
out
jl
xor
lock
bound
lea
pop
adc
jbe
inc
inc
jge
int
xor
mov
mov
cmc
inc
mov
sub
movsl
insb
out
cmp
test
adc
je
ret
int3
out
scas
scas
insb
pop
mov
fsts
andl
mov
push
sub
ljmp
js
incl
inc
inc
test
shll
loopne
xor
dec
inc
rclb
dec
jne
adc
adc
jns
add
leave
mov
in
jmp
jl
call
cmpsb
shrb
popa
lret
enter
ljmp
call
lahf
mov
aam
push
sbb
inc
hlt
add
xchg
imul
mov
cmp
movsl
jp
outsl
push
out
in
icebp
mov
test
push
cld
jo
or
orl
jmp
popf
pop
pop
out
xor
out
movb
or
movsl
xchg
push
pop
mov
push
imul
int
xor
or
neg
test
in
push
push
or
aad
or
test
es
push
add
je
es
loop
jb
cmp
inc
lock
jne
or
mov
push
cmp
push
mov
or
adc
mov
pop
sub
aam
push
or
addb
pop
or
inc
mov
jb
push
call
fwait
push
lret
mov
loopne
mov
je
stos
push
out
jo
sub
mov
mov
test
add
mov
scas
int3
call
jns
sti
nop
in
mul
add
push
std
and
push
xchg
lods
push
inc
mov
bnd
jbe
rorb
sub
loopne
rcrb
lret
xlat
loopne
mov
outsb
dec
sahf
fildl
lret
hlt
in
mov
jecxz
dec
mov
scas
sbb
clc
add
or
out
int3
clc
xchg
out
movsb
lret
mov
or
dec
cmpl
adc
rcl
mov
inc
sub
pop
pushl
cmc
movsl
cmp
lods
mov
mov
cmc
jnp
sbb
xchg
mov
and
dec
imul
or
sub
repnz
loope
int
call
cmp
repnz
addr16
mov
dec
cmc
shll
adc
test
sub
imul
sti
sub
dec
add
pop
cwtl
leave
xchg
cmp
jmp
sahf
std
cmp
xor
test
lcall
push
test
jbe
sbb
jg
ret
jle
fistl
cmp
popf
mov
out
rclb
inc
xchg
and
mov
and
lcall
das
subps
in
fld
dec
xor
lods
push
sub
cmp
xchg
bound
pop
add
or
mov
rcl
rcrl
xlat
adc
cmc
mov
fmull
mov
push
add
dec
xchg
push
mov
lods
add
movsb
jmp
jno
and
xchg
leave
xchg
sahf
adcl
sub
jmp
outsl
sub
pop
pop
roll
mov
cmp
adc
pop
nop
dec
test
ds
and
adc
dec
xor
push
lret
out
xchg
mov
pushf
sar
push
xchg
pop
or
out
cmpsb
adc
lock
test
dec
push
mul
ds
xchg
lcall
dec
repz
inc
outsl
lock
jnp
pop
or
mov
xchg
movsb
roll
push
vmread
cmc
or
movsb
mov
pop
imul
add
cmp
insb
test
movsb
data16
leave
loope
or
cli
and
adc
or
pop
adc
out
mov
add
jle
jnp
rcr
stc
cmc
dec
rcrb
test
mov
mov
in
outsb
out
lret
sub
test
lods
adc
jl
xor
nop
lea
fs
nop
notb
mov
jbe
xor
jmp
cs
xchg
repz
das
cld
push
test
and
sbb
xor
mov
mov
dec
in
enter
push
jne
cld
enter
outsl
adc
subb
inc
lahf
inc
jnp
lods
loop
jmp
inc
test
das
imul
sbb
mov
mov
and
int
sti
aam
movsb
sbb
mov
aad
int
negl
and
adc
je
push
jb
add
lock
nop
push
xchg
leave
lret
dec
int3
roll
jns
je
aas
and
push
btl
push
andb
sahf
jp
mov
push
inc
into
daa
xchg
xor
iret
jo
and
stos
sub
shlb
hlt
in
add
sbb
add
loope
imul
dec
shrb
cmp
frstor
test
add
stos
pop
leave
pop
cmp
push
lods
sbb
mov
jge
jae
push
xchg
or
jl
jae
std
fcmovu
mov
mov
aad
and
cmp
jnp
incl
dec
jne
pop
or
cli
jb
jge
js
adc
in
xor
bound
cs
rorb
sub
pop
pop
sub
sub
mov
fbstp
jp
mov
sub
fmull
or
movsb
mov
les
mov
cwtl
jle
pop
aam
inc
outsl
addl
mov
lahf
fs
sbb
mov
outsl
testb
jle
lea
lock
mov
ja
cmp
mov
cmp
cmp
jbe
and
insl
outsb
aam
xor
jp
stc
adc
inc
xchg
ret
repz
fistpl
scas
cwtl
mov
xchg
testl
xchg
and
mov
enter
jl
aaa
push
inc
dec
mov
pop
into
mov
fcoml
push
int3
jne
sbb
inc
pop
xor
mov
call
jo
mov
or
faddl
pop
in
insb
lods
fs
rcrb
pop
js
pop
movsl
daa
fldl
nop/reserved
pusha
fbld
pop
aaa
ret
lock
popa
xor
xchg
jge
sahf
aaa
ret
call
cmpl
and
mov
jg
popf
xchg
cmp
sbb
fcmove
insb
ds
jb
push
outsl
fldl
or
pop
cmpsb
xchg
fimuls
xchg
iret
push
pushw
jmp
in
jno
xchg
sarl
mov
insl
orb
mov
and
and
div
xor
sbb
push
cmp
lock
push
mov
in
xor
cli
cs
xor
cld
mov
data16
adc
outsl
outsb
lret
daa
in
mov
sbb
rcrb
xchg
push
add
data16
repnz
dec
fcompl
insl
jecxz
mov
xchg
and
clc
cmc
scas
push
pop
pop
mov
jmp
fcmovu
mov
xor
iret
das
push
mov
test
sahf
mov
fcompl
mov
mov
cmpsl
cmpsl
je
loopne
aad
frstor
add
xlat
mov
int
inc
push
cmp
lock
mov
push
mov
es
xchg
sub
xchg
add
fwait
cmp
xchg
sti
dec
pop
ljmp
xchg
leave
jecxz
shll
adc
mov
add
in
and
stos
or
sbb
mov
mov
xchg
call
or
in
lods
cwtl
add
jb
popf
xlat
and
mov
jbe
stc
dec
xchg
aad
jbe
ds
cmc
pushf
out
imul
or
lods
and
sub
scas
lcall
or
lock
jae
jecxz
cltd
movsw
test
loop
inc
stc
dec
sub
jbe
out
notl
mov
add
sub
push
xchg
addr16
adc
mov
jmp
xchg
ret
jg
adc
imul
cmp
add
arpl
cwtl
cmc
insl
test
sub
stos
daa
pop
ret
mov
xchg
fs
cs
adc
mov
dec
cltd
popa
cmpsb
sahf
pop
sbb
mov
sbb
xor
cmpsl
or
mov
pop
pcmpgtd
mov
bound
stc
imul
lods
mov
mov
push
loopne
ret
or
test
adc
insl
mov
jp
push
ret
xchg
xchg
jge
les
sub
cmpsl
or
push
std
movsl
push
mov
push
or
mov
pop
sub
jmp
push
or
dec
mov
jecxz
aas
lahf
sub
sti
bound
xchg
dec
mov
dec
xchg
out
pop
sti
fdivr
jle
mov
or
or
fnstenv
sbb
adc
jge
popa
pop
into
int3
out
jmp
pop
loop
arpl
jecxz
push
addr16
mov
cmp
cwtl
adc
adc
jg
sub
mov
icebp
cmp
cli
dec
rorb
mov
ja
sbb
xor
xchg
adc
shr
mov
xlat
sbb
and
xorl
cli
xor
sbbl
inc
out
fcoms
adc
enter
cmpsb
push
sub
lahf
popf
cltd
xchg
mov
mov
add
sub
add
xor
adc
testb
jmp
sub
xor
or
or
mov
push
mov
jne
mov
mov
pop
mov
ret
std
scas
mov
shlb
mov
jnp
pop
loope
cmc
mov
mov
fcmovbe
adc
ret
clc
sbb
lock
cmpsl
mov
jo
mov
decl
cmp
push
shll
jle
sub
ret
in
stc
and
loopne
pop
mov
mov
test
mov
mov
add
cmp
inc
in
repz
popa
or
pop
sbb
or
sub
sbb
pop
scas
js
repz
ss
lret
mov
inc
pushf
lods
int3
int
fcompl
ja
rcrb
fxch
adc
cltd
cmp
scas
into
icebp
or
fisttps
inc
mov
nop
je
scas
xchg
rclb
cmp
lea
fucomi
out
pop
add
cmc
popa
imul
fldenv
mov
mov
ret
push
addb
mov
cmp
cmp
inc
and
in
lahf
mov
mov
dec
push
dec
arpl
aaa
push
orl
or
push
aad
dec
mov
inc
mov
pop
dec
les
lock
or
or
mov
popa
test
data16
call
or
cmpsb
insl
es
mov
rcrb
xor
and
loopne
jge
sub
mov
xor
inc
dec
or
in
lahf
dec
fcoml
leave
call
inc
dec
xchg
roll
sub
mov
adc
jno
sbb
pusha
stos
fwait
cmpsl
in
add
cld
andb
mov
cltd
sub
dec
fsubrs
test
cmp
lret
and
dec
sbb
fstl
inc
mov
and
cmpsb
pop
out
in
cmp
pop
adc
fnstsw
push
sarb
jge
mov
jno
add
inc
add
mov
inc
shll
lret
pop
sbb
hlt
vaddsubps
pop
test
test
fiadds
sub
sbb
push
mov
adc
dec
fists
fxch
cltd
cld
and
popa
jbe
popf
or
xchg
ds
cmp
ret
icebp
mov
mov
push
lcall
in
addr16
mov
sbb
daa
leave
lods
pop
jbe
cli
orb
lahf
aam
dec
inc
scas
insb
ret
adc
lods
adcl
mov
push
dec
fistps
test
lea
or
jl
or
adc
out
aad
movsl
dec
xchg
out
sub
ss
sub
mov
lret
cmpsb
out
mov
or
adc
arpl
test
ja
fs
xchg
dec
mov
push
dec
mov
jae
adc
pop
jp
and
sahf
push
inc
xor
mov
fcompl
push
adc
jg
or
and
push
loope
xor
mov
insl
subl
sub
cmp
push
mov
jle
fistps
popa
inc
nop
test
push
or
and
fbld
in
movsl
add
inc
xchg
push
xchg
xor
outsl
jne,pn
scas
add
hlt
mov
aad
add
ja
rorl
jmp
jo
add
add
inc
sti
cs
lret
addr16
xchg
bound
loop
push
xor
rclb
popa
inc
lret
lea
cwtl
out
mov
mov
arpl
jmp
out
sbb
call
mov
movsl
outsb
jecxz
aam
subb
push
mov
cmp
call
cmpsb
cltd
loopne
adc
jbe
xchg
jnp
js
out
pop
outsb
cli
outsl
insl
fsubl
jno
test
pop
xlat
pop
cmpsb
jecxz
lds
mov
inc
add
add
mov
push
sub
addr16
stos
pop
dec
scas
outsb
scas
push
xor
out
pop
cmc
push
lea
sbbl
push
sbb
push
clc
mov
shlb
stos
cmp
insb
jmp
mov
mov
out
jns
xchg
or
jno
dec
mov
int3
adc
xchg
sahf
or
dec
aaa
mov
jo
lahf
popf
out
mov
fwait
cmp
mov
add
inc
and
imul
xchg
imulb
sub
test
scas
xchg
icebp
cltd
es
xchg
and
xchg
out
je
sub
jle
daa
adc
sbb
cld
sbb
lahf
push
adcb
mov
in
or
jmp
sub
pop
xchg
dec
pusha
roll
pop
adc
sbb
fsubl
loop
push
scas
sub
outsb
lret
pop
add
pop
and
mov
repz
adc
push
dec
cwtl
xchg
inc
rcl
adc
cmp
inc
aad
push
or
data16
pop
push
pusha
rcrb
lret
push
cwtl
dec
scas
or
mov
pusha
mov
push
jle
int
xchg
or
xchg
ds
outsl
mov
jno
in
testb
xchg
fs
mov
and
pop
push
jmp
add
xor
jbe
dec
je
inc
xchg
cmp
and
gs
mov
add
dec
shlb
stc
mov
xor
or
js
mov
jbe
in
leave
and
jbe
dec
insl
sbb
jbe
xchg
push
hlt
mov
push
imul
nop
aam
inc
inc
ds
leave
dec
and
lock
call
pushf
mov
std
scas
xchg
and
in
stos
cmpsl
or
js
shll
insb
cmp
jo
dec
dec
in
movaps
in
das
pusha
pop
das
push
and
sbb
mov
adc
cld
xor
adc
and
xchg
mov
je
push
subl
arpl
jnp
xor
ret
add
nop
rclb
push
inc
hlt
push
sub
imul
pop
adcb
movsl
mov
mov
clc
mov
sbb
jne
pop
sbb
ds
out
ja
cmp
cmpsl
push
ljmp
jno
fistps
js
mov
bound
sub
sti
aas
cld
inc
movsb
dec
insl
pop
mov
leave
and
outsl
fcomps
cltd
icebp
add
int3
repnz
and
lret
pop
inc
dec
xlat
lods
dec
stos
inc
clc
jnp
insb
gs
sub
fistps
arpl
faddl
mov
mov
cmp
dec
add
mov
mov
mov
mov
imul
mov
repnz
rcrb
xchg
insb
jecxz
out
lahf
rorl
and
in
insb
cs
or
xchg
loop
lods
push
ret
imul
pop
out
fistpl
rolb
xchg
stos
jne
xor
aas
jae
jne
pop
mov
rcl
xor
pop
fwait
pop
adc
pusha
shll
add
mov
push
pop
sbb
mov
ret
sub
sub
sub
dec
push
cmp
scas
mov
lea
push
push
cmp
sub
push
fstpt
cmp
ret
mov
decl
or
mov
ja
push
sti
nop
mov
popa
fs
add
stos
mov
outsl
fcoml
ret
push
mov
daa
cmp
cmpsb
rorb
fnstcw
mov
dec
pushf
ss
dec
mov
push
mov
inc
push
cmp
lret
iret
adc
icebp
and
jns
mov
std
cld
shll
xchg
mov
mov
es
sub
outsl
xchg
xor
pop
mov
daa
cmp
inc
cli
js
stos
xlat
sbb
jp
mov
cmpsl
int
in
xchg
xchg
mov
shrb
push
sahf
xlat
inc
mov
sub
cli
jne
push
rcrl
fwait
stos
cli
rol
and
fidivrs
pop
jl
add
cmc
pop
jno
lods
and
adc
movb
cmp
leave
lret
stc
cmp
pop
sbb
or
or
rep
cld
repnz
inc
sbb
sbbb
mov
and
xchg
cmp
scas
xchg
aam
aam
pop
in
jle
pop
stc
insl
ja
in
mov
in
pushf
loopne
adc
add
aad
sahf
pop
imul
push
lret
imul
push
inc
push
lret
stc
xor
fcomi
ss
sbb
xor
pop
jb
js
xlat
sarl
lock
or
fsubrp
test
jecxz
jg
dec
add
add
push
mov
add
out
subl
mov
push
or
addb
cld
dec
aad
in
adc
adc
pop
or
mov
mov
mov
popf
cmp
ret
push
das
in
dec
sub
out
inc
push
sbb
dec
jns
pusha
push
dec
pop
in
push
mov
inc
push
xor
out
inc
repz
cmp
dec
mov
mov
add
adc
mov
mov
cmp
mov
jle
or
pop
mov
in
jmp
outsb
push
cmp
mov
popf
xor
cltd
ljmp
sub
mov
daa
in
pop
fcmovne
jae
fwait
hlt
or
inc
dec
sbb
cld
push
popa
jg
and
popa
inc
cmp
cmp
out
pusha
inc
jbe
mov
stos
out
sarb
push
cli
xor
and
retw
shll
addb
jbe
push
jge
ljmp
fsubrl
hlt
nop
ret
lea
mov
dec
stos
cmp
faddp
push
push
sub
das
pop
inc
call
dec
mov
daa
sahf
call
jo
addr16
int3
sbbl
mov
mov
adc
inc
orb
mov
push
push
lret
test
or
sar
cmpsb
cmp
dec
mov
das
mov
psrlq
out
push
mov
aam
pop
enter
lret
movb
mov
jo
dec
sub
inc
into
idivl
fstpt
aas
xchg
cmp
loope
xor
adc
mov
daa
push
mov
cmc
adc
sub
les
push
mov
rcll
pop
or
jge
inc
mov
or
fcoms
xchg
mov
iret
mov
push
push
xor
or
mov
scas
out
pop
or
scas
mov
inc
adc
scas
outsb
lds
jnp,pn
lds
push
hlt
in
cmp
xchg
inc
add
leave
leave
mov
pop
clc
mov
clc
popf
int
cmp
fsubrs
test
loopne
mov
aas
insl
add
xor
aam
push
pusha
test
mov
rolb
xorl
das
mov
sti
mov
je
cld
mov
imul
jp
xchg
xlat
data16
and
jb
inc
sbb
or
cwtl
sbb
in
movsb
sbb
adc
sbb
lea
in
push
push
cmpsl
aam
jmp
fwait
pop
inc
mov
fcoms
mov
fistpll
dec
cwtl
fstpl
insl
imulb
and
ja
xchg
dec
jmp
je
mov
push
sub
mov
adc
cld
push
xor
insb
cmp
outsl
mov
mov
call
xchg
ja
and
push
fmull
aam
fcmovnb
dec
lods
mov
mov
jge
roll
aad
in
insb
jge
push
add
jge
shl
int3
fsubl
or
inc
outsl
pusha
movsl
sbb
rorl
ret
je
fs
inc
sbb
iret
mov
test
and
or
push
int
rolb
add
xchg
shl
ja
lock
dec
in
xchg
jns
mov
mov
cmp
sbbb
add
mov
repnz
pop
aaa
jg
test
scas
mov
cmp
jns
jae
fsubs
adc
add
in
popa
ficomps
inc
xchg
add
inc
sub
xor
xchg
adc
push
cmpsl
int3
fidivrs
mulb
test
in
nop
xchg
or
hlt
mov
and
xchg
mov
xor
push
ret
sub
clc
adc
ret
sbb
stos
imul
loopne
jno
sbb
rcl
fdivrp
add
or
xchg
push
jg
loopne
xchg
shrl
lock
or
fcoml
dec
lcall
mov
call
es
and
sbb
and
pop
insb
cmp
inc
jge
nop
lret
inc
mov
scas
jmp
data16
fildl
imul
test
push
cmp
ret
mov
lock
daa
cmp
mov
xchg
cwtl
mull
push
ror
pop
push
fists
jp
xchg
cmp
mov
inc
mov
push
addr16
cmpsl
pop
pop
xlat
movsb
push
leave
rcll
addl
jecxz
mov
sbb
or
mov
jp
aaa
cs
fmuls
or
xchg
xor
pop
inc
cld
jb
fadds
inc
mov
sbbb
sti
addb
in
inc
imul
xor
cmp
fwait
jmp
bound
mov
shrb
inc
dec
insl
lea
andb
das
sub
sbbl
repnz
mov
sub
cwtl
mov
pop
jns
push
pop
xor
scas
dec
cmp
outsb
fsubr
mulb
test
mov
fcmovb
ror
adcl
jns
adc
aaa
sub
xchg
in
les
repz
push
add
add
inc
orl
dec
clc
cmp
aas
test
fnstcw
je
lods
push
push
sub
adc
xchg
jnp
aam
dec
mov
cmpsb
aas
fldt
cli
or
iret
push
jae
into
in
fisttpll
pop
pusha
sahf
inc
fstp
or
pop
addr16
or
lods
packssdw
xchg
negb
or
imul
sub
ret
out
ror
stos
inc
add
enter
aad
pop
jns
leave
cmpsl
pop
or
fcomi
insl
push
outsl
pop
out
or
xchg
shlb
stos
add
jo
stos
popa
mov
adc
pop
mov
push
cmpsl
fmul
movsl
or
add
std
stc
mov
test
nop
push
stc
jmp
lahf
and
inc
lods
mov
dec
cmp
es
cmp
push
cmp
inc
inc
mov
mov
add
inc
test
lds
inc
fsubr
xor
cmpsb
enter
mov
cld
std
enter
sub
cmp
adc
jle
out
jmp
adc
loope
jmp
out
fidivrs
push
pusha
pop
or
inc
sub
mov
xor
scas
cwtl
loopne
mov
orl
stc
xchg
leave
sbb
mov
xor
out
mov
movsl
out
xor
mov
into
bswap
in
mov
sbb
icebp
jmp
mov
xchg
push
outsl
and
fimull
fs
dec
fdivrl
mov
inc
adc
std
mov
jp
adc
je
clc
and
clc
pop
notl
aam
sbb
lahf
ret
jl
push
outsl
aas
mov
loop
or
sub
insl
sbb
bound
add
ret
xchg
arpl
test
inc
inc
mov
mov
lcall
ljmp
shrb
iret
jmp
push
rolb
adc
dec
inc
push
xor
sahf
cld
in
or
and
idivb
fsubrl
fnstenv
sti
push
mov
in
pusha
xor
stc
aad
outsb
scas
jl
mov
adc
jmp
pop
cltd
cli
icebp
dec
and
cltd
popf
mov
in
add
xchg
iret
sti
push
or
cltd
and
adc
ds
mov
ret
lods
mov
cmpsb
pop
je
fs
nop
xchg
stc
or
scas
mov
mov
jnp
xchg
data16
loope
xchg
mov
mov
mov
gs
inc
in
dec
or
inc
push
xchg
das
jne
add
xor
loopne
sub
xor
mov
out
xchg
jecxz
leave
sbb
lea
jle
in
in
adc
push
sub
outsl
cltd
sbb
cmpsb
loopne
sbb
and
outsl
cmp
mov
push
stos
iret
pop
ja
aas
fcoml
adc
leave
gs
nop/reserved
aam
pop
int
mov
mov
mov
adc
ret
lcall
mov
sahf
push
cld
mov
push
out
dec
push
xchg
imul
xchg
repnz
dec
gs
xlat
adc
inc
fwait
mov
in
adc
push
mov
sti
cld
mov
fnstenv
daa
dec
aas
pop
stc
stos
adc
out
add
shl
adc
jecxz
jge
inc
movsb
add
cmpsl
inc
pusha
cmpl
les
fbstp
fcmovnu
lret
fistl
mov
div
pop
mov
lcall
inc
aam
outsb
andb
mov
fxtract
dec
jae
inc
sahf
mov
push
bswap
int3
cmp
mov
push
enter
in
loope
movsl
mov
sbb
sbb
pop
sbb
add
repz
add
cs
mov
xlat
cmp
xor
sahf
mov
imul
add
xor
cmpsl
xchg
or
cmpsl
sbb
mov
cmc
ja
or
mov
cmp
imul
inc
push
or
fcmove
ja
dec
repnz
add
js
push
aad
pop
orl
push
push
das
mov
xchg
jmp
std
push
xchg
xchg
inc
ss
mov
into
out
mov
sbb
lods
xchg
cld
push
ss
test
repz
jne
cli
jno
adc
sub
cmp
pop
cmpsb
mov
call
xor
je
shll
xchg
pop
leave
add
add
outsb
ljmp
lds
into
sub
xchg
lods
in
stos
sub
mov
sbb
add
push
enter
fcmovnb
mov
loope
cmpb
or
sbb
imul
inc
mov
xlat
cmc
sar
sbb
fstps
pushf
add
cmc
sbb
lea
dec
pop
rclb
inc
inc
in
and
pop
outsb
cld
sbb
jae
xor
andb
sub
enter
mov
int3
add
inc
and
pop
inc
push
jnp
sbb
icebp
adc
mov
cmpsb
push
dec
adc
inc
mov
addr16
test
push
jle
sbb
inc
lea
mov
xor
in
cli
pop
dec
popf
in
sbb
cld
subl
xorl
or
movsl
call
pop
push
xchg
sub
repz
out
inc
dec
xchg
push
mov
in
call
adc
add
rorl
cmp
adcl
fisubrl
mov
mov
fsub
fucom
xchg
cltd
flds
mov
dec
lret
outsb
rorb
xchg
rclb
jp
mov
mov
sub
je
movl
dec
in
pop
aam
adc
mov
jmp
or
add
bound
sub
cmovs
pop
and
add
bound
mov
movsl
xchg
div
mov
aad
mov
inc
fildl
ficoms
mov
daa
xchg
dec
mov
daa
xchg
jae
std
lods
aas
pop
aam
scas
call
repz
sarl
sbb
mov
jnp
push
jl
ja
mov
xchg
lret
xor
add
pop
xor
cmp
sub
cmp
jae
adc
repnz
mov
adc
repnz
bound
hlt
ljmp
add
xor
push
adc
ljmp
repnz
jmp
les
or
mov
jecxz
mov
shl
pop
outsl
cwtl
and
popf
pushl
ds
loopne
mov
mov
outsb
fxch
jmp
ficoml
aaa
repnz
clc
decb
jmp
and
push
push
fbld
jg
leave
mov
or
pop
mov
sub
xchg
sarl
dec
or
or
mov
xchg
sub
and
push
sub
xchg
push
nop
shr
adc
pop
ja
jne
inc
lcall
stc
xchg
sbb
or
jl
sahf
add
push
movsl
int3
push
jns
cmp
mov
cmc
negb
xor
ljmp
jg
int3
scas
sbb
iret
outsl
dec
cmpb
push
in
out
imul
in
into
pop
pop
leave
adc
das
pop
mov
jae
adc
cld
jmp
mov
rclb
add
out
adc
loope
icebp
es
clc
jl
es
imull
cmp
stc
pop
fidivs
mov
js
pop
scas
mov
sub
and
outsl
mov
mov
call
les
sub
or
ds
repz
and
das
fisttps
jno
xorl
xor
mov
popf
cld
inc
je
add
popa
xchg
jl
insb
lret
test
pop
jg
leave
pushf
xor
cmp
dec
xor
test
inc
ds
and
pop
pop
out
inc
in
subl
pop
push
add
and
jmp
insl
negb
and
jns
inc
inc
xchg
push
lods
pop
adc
mov
pop
sarl
rcr
mov
fdivrp
xorb
pop
add
add
fildll
rcll
lcall
pop
push
in
imul
xchg
pop
pop
movsl
popf
sub
push
mov
fsubr
fdivrs
jae
pop
movsl
and
lea
xor
adc
jl
test
xchg
mov
sub
pushf
out
sbb
repz
mulb
inc
jne
test
sti
sub
lret
cmp
cltd
add
pop
ja
fs
jl
mov
mov
stc
outsb
stos
das
repz
mov
inc
cmp
jnp
insl
stos
pop
add
pusha
sub
xchg
in
mov
jecxz
jne
mov
in
xchg
ret
pop
out
push
push
dec
sub
xor
mov
cmpsl
pop
mov
mov
mov
jae
mulb
dec
shr
xchg
sbb
roll
mov
dec
sub
add
ficompl
add
es
out
lock
das
fdivl
scas
and
shll
test
das
out
aas
cli
pop
shlb
pop
mov
movsl
iret
data16
js
lock
jl
xchg
push
enter
cmp
xchg
mov
mov
stos
xchg
out
dec
adc
not
stc
pop
sbb
mov
and
mov
sub
insb
ret
pusha
repnz
insb
xorl
sbb
cmpl
xor
add
arpl
adc
ja
pop
frstor
sub
or
fcompl
xchg
rorb
xchg
inc
mov
xlat
jp
inc
mov
mov
ljmp
fstl
xchg
cmpsl
sub
sarb
rcll
push
gs
adc
cmp
xlat
mov
cmp
js
push
fcomp
fdiv
cmp
and
push
ret
bound
add
mov
or
inc
int3
cli
cwtl
addb
ss
ss
push
aad
pop
jle
jns
mov
imulb
xchg
ret
jmp
cmp
ret
shlb
fwait
es
shlb
cmpsl
pusha
cmp
cltd
js
and
push
sahf
and
pop
mov
sbb
dec
sahf
dec
aam
es
pop
push
jo
mov
lret
push
pop
lret
in
addb
mov
pop
xchg
sub
lret
add
fsubrl
cmp
cwtl
cld
xor
sub
insl
mov
cmpsl
inc
adc
hlt
test
sbb
cmpsb
cmp
repnz
roll
mov
push
push
or
popa
roll
mov
xchg
push
cmpsb
shrb
xlat
lret
add
gs
lock
and
jle
repz
pop
push
jnp
adc
xlat
push
nop
pop
test
jne
inc
adc
movsl
fldenv
pop
mov
hlt
sbb
push
les
sbb
push
pushf
adc
add
scas
inc
shr
getsec
fimull
addr16
dec
pop
aaa
push
idivb
shrb
pop
and
enter
push
nop
test
fwait
and
sbb
xor
mov
mov
and
jne
pop
xlat
leave
jp
adc
gs
sti
cmp
and
lahf
movsb
aas
push
popa
dec
jne
icebp
mov
mov
push
cli
stc
push
or
xchg
jo
and
and
adc
andl
sub
lea
add
movsl
cmp
xchg
xchg
jae
movsb
movsl
dec
and
imul
add
push
mov
repnz
sbbb
repz
sbb
or
push
or
cld
stos
out
mov
jp
les
lds
lods
imul
xor
jae
and
dec
add
mov
adc
or
mov
scas
xor
sbb
hlt
pop
enter
and
ret
dec
mov
inc
daa
leave
xor
pusha
in
das
sbb
enter
pop
fcmovb
add
ret
rcrl
ficompl
mov
sub
enter
sub
or
lods
test
adcb
mov
cmpsl
xchg
inc
mov
mov
push
int
int3
aaa
mov
pusha
mov
push
into
cmp
pop
jo
push
lahf
add
hlt
or
lods
inc
mov
push
loop
jge
xchg
test
dec
dec
jo
cmp
push
jo
lret
and
jmp
jns
addr16
mov
pop
push
and
jg
xchg
dec
fadds
push
or
cld
sbb
jnp
scas
push
fistpl
push
loope
popf
xchg
ljmp
rorb
and
clc
inc
cld
pop
pop
xchg
subb
jp
mov
jge
sbb
adc
pushf
cltd
cmpl
iret
pop
ja
push
lock
inc
stos
std
xchg
xorl
repz
aaa
repz
xchg
insb
testb
out
dec
push
jb
pop
test
orl
sub
movsb
fadds
call
mov
sub
pop
in
mov
enter
add
das
popf
ret
outsb
leave
ficoml
pop
mov
pop
xlat
lcall
mov
cmp
movsb
inc
ret
iret
and
xor
or
sbb
mov
mov
fs
mov
addr16
in
enter
mov
mov
movsb
stc
mov
mov
ds
adc
lcall
in
xor
jmp
and
cmp
stos
test
jmp
adc
std
pop
add
arpl
mov
jle
push
out
jbe
mov
push
sbb
test
out
adc
fistpll
sub
pop
xor
fdivr
and
popf
bnd
stos
mov
icebp
mov
ret
or
movsl
push
outsb
pop
out
popf
aam
push
in
rolb
jp
push
mov
mov
mov
adc
cwtl
mov
mov
mov
dec
sub
iret
imul
jmp
les
mov
xor
loop
iret
loopne
aaa
mov
jle
add
fiaddl
and
cmovne
sub
lea
pop
jl
clc
jmp
and
and
addb
cli
push
add
inc
aad
pop
es
das
add
adc
xor
xor
jo
aaa
pop
sar
repz
mov
xor
leave
lcall
xor
nop
adc
cmc
inc
icebp
mov
mov
ud1
cmpsl
les
aaa
or
xor
xchg
aad
insl
dec
add
loopne
push
ds
aas
jno
out
lret
or
fcmovne
push
pop
sbb
adc
xlat
clc
into
lret
sbb
clc
rorl
mov
loopne
nop
pop
add
fiadds
aam
push
mov
js,pt
cmp
subl
testl
sbb
mov
sahf
xor
and
inc
popa
sub
jmp
dec
adc
push
sbb
mov
std
outsl
push
std
sbb
and
or
cmp
jne
inc
sbb
mov
out
insb
jl
mov
sbb
mov
loop
fldenv
sub
cmp
inc
incl
push
push
sti
pop
sahf
scas
imul
mov
mov
nop
lods
mov
stos
jnp
mov
movsl
sarl
stos
xor
push
test
mov
ret
imull
jmp
pop
imul
push
xchg
jl
inc
dec
negl
xchg
sbb
hlt
lods
pusha
push
lea
xchg
aaa
test
pop
pop
outsb
mov
cmp
lahf
pop
mov
inc
insl
scas
cld
mov
ficompl
cltd
mov
sub
jl
aas
lahf
sub
xchg
movsb
leave
inc
or
and
sbb
sub
in
dec
pop
adc
int
test
imul
arpl
xchg
test
test
fnstenv
jb
dec
or
shll
mov
icebp
repnz
lcall
mov
out
mov
js
jb
mov
loopne
test
jae
dec
add
mov
dec
mov
sub
in
pop
outsw
fdivr
jp
outsl
mov
push
inc
ret
jo
jno
sbb
jb
mov
mov
push
stos
dec
mov
decl
jns
loopne
icebp
fs
shl
mov
dec
aas
into
mov
inc
shl
sti
add
out
outsl
add
inc
divl
aaa
mov
push
das
pop
lret
imul
sbb
shl
mov
aaa
imul
scas
sub
hlt
mov
jo
leave
pop
pop
pop
cmpl
cs
and
add
add
cmc
inc
stc
hlt
push
jecxz
sbb
out
push
fistpll
pusha
cmc
sub
push
lret
push
cmp
mov
fadd
sub
push
dec
inc
imul
inc
aaa
pop
lds
jg
in
dec
dec
or
cmp
jmp
loope
jo
xchg
ror
test
mov
nop
icebp
and
jnp
inc
iret
test
xchg
xchg
push
dec
lds
sbb
and
xchg
xchg
add
adc
rolb
ret
orb
subb
mov
insb
mov
and
jecxz
daa
dec
sbb
dec
sbb
cmp
sub
stos
in
ljmp
xchg
fbld
repnz
mov
test
xchg
dec
xor
aam
or
and
sti
mov
mov
test
imul
aas
rol
push
or
scas
inc
sub
xchg
mov
jbe
cs
dec
pop
fcmove
mov
rorl
xor
mov
mov
popa
mov
add
jmp
movsl
aaa
inc
scas
fcom
inc
fs
loopne
add
scas
xchg
xor
and
outsb
pop
inc
push
sbb
add
inc
jno
pop
inc
fistpll
jb
movsb
sbb
shll
adc
stos
sbb
mov
out
sbb
aam
jp
fs
xchg
cmp
dec
inc
jle
inc
or
jns
xor
out
cmpsl
arpl
push
or
test
test
popf
pop
xchg
sti
sti
mov
mov
das
adc
sbb
pop
repz
pop
dec
mov
pop
adc
mov
jg
jge
inc
mov
fs
pop
aas
and
and
inc
je
andb
in
loop
pusha
or
rcl
or
jo
sbb
push
jg
or
ret
dec
xchg
pushfw
pop
ljmp
shlb
sub
fcoms
mov
or
repnz
addr16
popa
int
mov
in
xchg
mov
pusha
jle
xchg
jmp
sub
sbb
mov
nop
dec
icebp
inc
push
aad
movsl
mov
inc
jns
pop
cmp
jp
push
mov
and
sarb
sub
mov
mov
jae
adc
inc
push
test
stos
fcmovb
jo
mov
mov
stos
sub
add
hlt
ss
dec
ljmp
repnz
mov
inc
pop
mov
fcompl
arpl
mov
fsubr
push
xor
or
inc
scas
aad
out
cmp
mov
jge
cmc
ret
cld
push
cltd
push
push
cmp
dec
ljmp
rcll
ljmp
imul
dec
or
out
pop
aad
pop
inc
adc
jno
lods
cwtl
xorl
adc
push
pop
shrb
inc
loop
dec
lahf
mov
jge
sub
and
inc
push
inc
pop
jecxz
incb
mov
jl
mov
out
enter
outsb
jl
bound
push
sbb
push
mov
or
dec
test
inc
popf
test
xor
out
lods
sbb
in
mov
int3
nop
cmpsl
push
push
std
push
stos
loope
pop
jg
pop
out
add
mov
cmp
jg
mov
pop
and
push
insl
mov
negb
cltd
fs
pop
cmp
add
daa
mov
jns
mov
movsb
xchg
lea
mov
les
aas
into
shr
test
mov
adc
add
and
mov
jae
xadd
nop
jl
and
cmc
shrl
mov
cli
fwait
repnz
std
dec
lret
test
jb
sbb
hlt
call
loopne
xchg
scas
pushf
add
lock
cld
loop
shlb
je
push
repz
jb
addr16
ret
xchg
sub
cmp
add
pop
mov
jle
scas
cmp
add
idiv
popa
shr
pop
out
pusha
fcomps
add
cwtl
sbb
out
flds
lahf
cmc
lds
punpcklwd
lea
test
jmp
and
inc
xchg
aas
xchg
in
dec
and
mov
stos
add
cmp
stos
xor
xchg
mov
pop
icebp
popf
add
cmpb
imul
cmp
loopne
sub
sbb
cmp
cs
or
xor
mov
jno
outsb
push
ret
clc
inc
add
in
mov
xchg
pusha
stos
sub
add
and
lret
rcl
orb
jnp
test
fldenv
hlt
sub
mov
dec
loopne
mov
mov
std
push
jg
push
sahf
pop
jge
lahf
dec
jo
and
in
incl
sbb
ja
xchg
pop
mov
int3
in
hlt
hlt
cmp
push
daa
clc
enter
mov
int
lock
popf
popf
jne
adc
jecxz
jns
mov
mov
cmpsb
and
dec
jecxz
mov
imul
xor
inc
mov
test
dec
fs
add
dec
lahf
mov
popf
push
push
outsl
leave
in
cmpsl
add
mull
daa
inc
xchg
sub
xor
cmp
icebp
mov
or
push
xchg
outsl
mov
sbb
insb
sbb
decl
pop
jge
pop
loop
repz
loope
rorl
mov
test
mov
push
mov
adc
or
outsb
and
push
addr16
dec
pop
push
gs
xor
adc
sub
and
mov
test
loopne
or
movsb
push
fbstp
stc
sbb
cmp
xchg
je
sarb
test
xchg
icebp
daa
ljmp
inc
mov
cmc
sbb
incl
dec
leave
jbe
loope
xchg
cld
add
lock
leave
cmp
idivl
and
push
loopne
lods
add
in
and
cmc
xchg
or
fstpt
jle
adcb
fwait
sbb
push
mov
ret
mov
jle
cwtl
mov
adc
xchg
sbb
pop
push
jl
leave
pop
lret
push
movsl
rorl
fnstsw
in
clc
jmp
push
xor
mov
and
in
xchg
xor
cs
leave
inc
enter
movsb
sarl
and
insb
pop
pop
pop
daa
stc
lock
nop
decl
rcr
sbb
adc
dec
add
adc
mov
clc
gs
sub
mov
rcll
and
and
cli
enter
imul
mov
gs
nop
out
mov
scas
push
pushw
inc
sbb
or
popa
movsl
pop
loope
arpl
pop
repz
ja
xor
xchg
clc
loopne
clc
jl
mov
inc
in
push
rcrb
push
jne
add
xor
stos
pusha
push
lcall
cmp
lahf
xor
lods
outsl
subb
popf
pop
movsb
shll
dec
inc
lods
addr16
shll
sbb
jg
sub
sbb
xchg
push
adc
repnz
rcrl
fisubrl
dec
loop
cmp
dec
outsb
mov
mov
in
ret
sbb
dec
pushf
cmpsl
popf
inc
push
mov
test
shl
pop
mov
sub
outsb
mov
dec
push
in
mov
jg
int
jns
fimull
adc
jns
fcoml
jecxz
sub
adcb
das
arpl
nop
sub
fistps
in
inc
push
rcrb
inc
push
shlb
mov
jmp
push
and
dec
lock
mov
scas
xor
ret
repz
add
push
jg
cltd
lock
aam
sbb
cmp
push
or
mov
xchg
nop
les
insb
push
push
scas
mov
jl
xor
out
mov
rcll
sub
xor
inc
mov
mov
jle
push
adcb
xchg
mov
insb
push
mov
and
and
inc
mov
int
test
lret
stc
pushf
stos
sub
imul
arpl
push
cmp
clc
in
or
shlb
mov
movsl
imul
in
movsb
mov
mov
arpl
mov
arpl
cmp
call
sub
imul
mov
xor
out
lods
mov
push
xor
and
inc
and
pop
xor
cmp
sbb
cmpsb
dec
aas
pop
leave
int3
pop
out
mov
xchg
mov
push
jg
inc
mov
push
mov
mov
popa
cmp
mov
pop
xchg
je
lock
push
inc
sub
decl
orl
in
mov
je
add
data16
dec
mov
ret
jmp
xor
xchg
daa
lahf
cmpb
das
imul
repz
push
aaa
adc
push
shlb
aam
pop
pusha
inc
cmp
addr16
mov
dec
xor
out
in
mov
les
daa
cmp
push
jnp
arpl
aad
fdivrs
mov
mov
leave
xor
and
push
add
mov
stos
fwait
lods
fiadds
adc
in
or
or
inc
pop
sub
divl
jp
lahf
push
add
xchg
or
adcb
daa
inc
cltd
daa
mov
and
xor
add
stos
aaa
stos
fsts
push
enter
and
lods
dec
jbe
xor
cs
stos
stc
cltd
bound
loope
in
adc
xchg
out
push
xor
and
lea
or
sbb
sti
or
out
sbbl
mov
xchg
inc
mov
xor
fstps
cmpsb
test
inc
repz
pop
in
mov
mov
jbe
cmp
gs
mov
inc
sbb
insb
add
mov
fsubrl
sbb
mov
loopne
sbb
xchg
push
and
lcall
mov
lret
in
lea
jnp
mov
adc
setge
imul
pop
sbb
decb
arpl
popa
jb
mov
ds
xorl
insl
fcoms
xchg
cmp
mov
mov
in
add
push
iret
ret
outsl
daa
push
incl
repnz
xor
dec
std
dec
cmpsl
cs
mov
dec
fistpll
roll
lods
idivl
inc
add
mov
test
dec
cmp
gs
arpl
lahf
hlt
jecxz
jle
xor
adc
loope
or
add
scas
outsl
sahf
pop
mov
fld1
nop
imul
shll
in
mov
adc
addr16
adc
pop
dec
push
pop
sahf
decb
mov
pop
imul
fimull
xor
aas
out
inc
enter
leave
js
pop
mov
cmp
sub
clc
orb
call
or
mov
add
sbb
jl
add
stc
xor
jnp
push
imul
xor
fimuls
sti
pop
push
adc
popf
jp
mov
xor
sbbb
mov
sub
push
mov
mov
rcll
push
rcl
pop
mov
xchg
repnz
stos
icebp
jp
cld
xor
dec
outsb
jge
cmp
pop
cmpsb
popf
sbb
stc
and
pop
js
inc
clc
fildll
les
outsb
test
jecxz
push
pop
sbb
out
jbe
int3
cmp
imul
dec
movsb
push
aas
orb
in
movsl
lcall
fiaddl
in
dec
mov
mov
daa
jle
sbb
shl
or
pop
sarb
cmc
ret
arpl
push
daa
pop
jns
cmp
popf
fldt
mov
push
push
sti
pop
xchg
cmp
fwait
mov
test
inc
xchg
push
cwtl
movsl
mov
jno
add
dec
pusha
dec
es
add
mov
push
mov
enter
aad
and
ja
cmp
sahf
cld
shl
sbbb
push
push
sahf
and
dec
outsb
cld
popa
cmpb
xor
push
jp
loop
cltd
dec
adc
mov
push
mov
xor
xchg
mov
sahf
push
and
inc
out
out
inc
test
lods
js
xor
gs
jne
lea
je
js
push
sub
mov
lods
imull
mov
push
adc
mov
or
icebp
imul
outsb
sub
cli
fisubrl
or
jl
shlb
xchg
mov
pop
push
jno
xchg
lods
inc
imul
pop
dec
sub
test
xchg
sarl
xchg
mov
arpl
push
popf
inc
lcall
test
inc
fstpt
jp
jne
shrl
rcll
scas
jl
jl
sbb
nop
iret
hlt
lods
out
call
adc
dec
inc
and
rcl
jle
xchg
loopne
stos
dec
pop
cltd
sbb
vcvtdq2ps
jno
inc
jns
dec
in
sub
push
push
popa
jle
mov
in
add
mov
sub
pop
adc
imul
mov
dec
and
shrb
nop
and
jns
icebp
sub
cmpb
outsb
arpl
pop
rcl
sub
jnp
cs
add
lea
movsl
xchg
int3
test
push
xlat
scas
pop
into
rcll
cmp
xor
jno
cmpsl
in
imul
jle
in
ret
xor
push
test
cmp
push
xchg
loope
stc
lods
inc
mov
shll
jge
js
mov
add
adc
mov
or
mov
sub
push
cmc
mov
adc
in
call
js
popa
mov
mov
cltd
adc
out
dec
addr16
lahf
inc
jl
movsl
push
insb
add
add
inc
pop
ret
xlat
frstor
dec
int
lock
dec
in
mov
loop
scas
inc
sub
or
inc
call
out
es
jl
jle
repz
loop
aad
fwait
aam
pop
ficoml
mov
daa
jg
pop
mov
les
lret
dec
fcoml
mov
in
cmpsl
jle
daa
pop
loope
xchg
inc
cmpsb
sbb
add
jo
sbb
stos
mov
pop
and
pusha
rorl
test
stos
mov
inc
mov
sbb
cmp
xorl
rorl
int3
push
xchg
xchg
xor
popf
outsb
cmp
jecxz
jecxz
popa
adc
nop
divl
movsl
mov
inc
or
mov
add
jle
aam
std
xor
pop
ret
in
jo
adc
xor
hlt
imul
push
jae
roll
jne
mov
mov
add
inc
dec
shrb
mov
lcall
bound
or
jb
inc
push
ds
sbb
add
jnp
lcall
ret
push
xor
insl
jmp
adc
shll
enter
jb
and
rcll
insl
ss
shll
pop
ds
or
xcrypt-ofb
cmpsl
outsl
and
js
enter
scas
test
xchg
and
dec
sbb
jge
lret
xchg
sbb
and
int
std
cmp
mov
pop
dec
insl
ja
mov
xor
aam
mov
sub
fcmove
mov
sub
mov
ret
mov
fstp
leave
and
shlb
clc
jne
adc
and
add
cmpsb
fwait
mov
cs
adc
pop
shrl
gs
or
sbb
ljmp
mov
push
adc
sbb
into
xchg
lock
mov
movsb
push
sbb
push
add
pop
rorb
ret
jns
leave
insl
add
mov
pop
sbb
adc
pop
cmp
and
dec
dec
fmull
aad
jns
add
jbe
dec
push
or
cmpsl
mov
xchg
jns
rcrb
jbe
mov
jmp
mov
aaa
pop
lcall
mov
push
mov
sbbl
jl
sub
inc
mov
mov
imull
lea
sti
aam
loopne
pushf
in
xor
xorl
arpl
dec
add
jns
mov
xlat
bound
xchg
or
and
inc
adc
jge
scas
sub
jle
sbb
ret
sahf
fnstcw
mov
fsts
pop
aad
mov
push
push
cld
inc
sahf
jnp
mov
pusha
leave
test
cmp
sbb
add
pop
pop
aad
inc
cmp
pop
inc
out
or
out
dec
out
fisttpl
popl
xchg
cmp
sbb
mov
aas
pop
mov
xor
fldenv
scas
loope
sbb
push
lea
dec
jmp
neg
pop
xor
loop
sbb
xchg
dec
aaa
lods
sub
int
movsb
stc
xor
inc
dec
in
lea
jg
roll
sub
das
or
jl
pop
neg
cmp
xchg
out
adc
ror
sar
lcall
ja
mov
mov
int3
mov
add
aad
nop
js
pop
in
sbb
dec
imul
dec
pop
push
mov
sarb
in
imul
xchg
ss
and
jo
insb
mov
add
mov
push
aad
into
and
jno
inc
bound
fs
or
mov
mov
and
subl
mov
clc
pop
mov
icebp
sbbb
div
sbb
and
scas
insb
adc
and
pop
out
mov
xor
sbb
mov
pop
js
add
xchg
dec
jp
or
push
add
xchg
and
dec
test
jmp
lret
leave
mov
fnstsw
inc
shl
lock
push
pushf
inc
cmp
sbb
popa
mov
stos
inc
scas
xlat
scas
jno
or
mov
jecxz
aaa
or
push
out
cltd
arpl
jbe
fidivl
xchg
movsb
test
jg
shll
ret
into
or
out
shl
adc
mov
stos
dec
loop
push
dec
lcall
dec
shl
int3
cmpl
adc
xchg
imul
or
cmp
stos
insl
pop
jge
shlb
lods
and
add
mov
xorl
add
add
dec
outsl
out
xchg
loop
or
push
movsl
aad
lock
ret
mov
push
push
shll
lret
jge
dec
cmp
mov
jge
cmc
cmp
pop
lods
jl
push
cmp
push
xchg
popf
sub
fiaddl
sub
or
rorb
jno
cmc
or
jg
loopne
inc
lahf
pop
sahf
pop
pushf
inc
push
mov
fnstcw
add
stos
mov
scas
nop
andb
icebp
jb
mov
jne
xlat
pop
insb
aad
in
test
xchg
xchg
fs
arpl
mov
cltd
mov
hlt
jg
xor
cmp
jns
mov
rclb
dec
xchg
pop
dec
sbb
fucomip
and
fcmovb
push
jno
popf
imul
mov
add
pop
sub
addl
js
rcrl
cmpb
sbb
loope
sti
inc
sub
cmp
scas
pushf
jnp
stc
fistl
jbe
jns
push
xchg
cmp
add
cs
jmp
iret
popa
sbb
shl
rol
scas
pop
jbe
sbb
ret
out
inc
mov
add
fildl
jg
in
cmp
dec
jo
mull
or
jb
in
push
mulb
jge
adc
aad
pop
mov
or
shlb
push
fildl
xchg
fnstenv
ljmp
adc
stos
sub
adc
mov
and
xchg
lret
mov
xchg
add
lret
jae
xor
movsb
sbb
mov
pop
dec
or
push
inc
into
out
shrl
jne
enter
into
and
push
test
popa
addl
sbb
ljmp
mov
xor
fbld
jle
aad
push
lret
ficoms
in
fmuls
in
idivl
js
arpl
push
dec
cmpsl
xor
sbb
mov
sbb
rcll
cmpsb
fs
rolb
push
outsb
imul
pop
pusha
call
imul
lock
adc
adc
repnz
jae
push
lcall
shrb
or
jnp
scas
xlat
je
jne
sbb
push
icebp
cmpsb
addr16
cld
scas
test
nop
in
subl
pushf
sbb
addr16
rorb
outsl
push
or
filds
cmc
mov
xor
pusha
dec
cmpsl
jge
pusha
imul
mov
pop
jbe
cltd
sbb
xchg
xchg
push
sub
xchg
dec
xor
jns
mov
adc
inc
ds
fsubrl
xlat
mov
int3
insb
cmp
xor
dec
popa
jg
cwtl
push
sub
pop
fnstenv
push
adcl
shrb
scas
dec
lds
call
sub
arpl
dec
push
dec
scas
xchg
sarb
or
pop
add
xchg
push
jge
adc
inc
xchg
jbe
movsb
cmc
lret
xchg
les
adc
adc
clc
inc
dec
add
pop
imul
and
adc
inc
rol
test
adc
nop
aam
call
push
in
pushf
and
jne
adcb
fs
mov
jnp
lods
daa
popa
stos
arpl
fiadds
xor
cs
jl,pn
push
daa
jne
push
cs
int
or
mov
pop
mulb
dec
jae
inc
sbb
xchg
add
mov
filds
sub
cmpsl
sbb
fcmovu
jp
popa
or
push
adc
icebp
mov
cmpsb
shll
shl
mov
ret
add
mov
xor
in
mov
jmp
dec
fisubrs
cltd
mov
dec
push
lret
jle
push
rclb
xchg
inc
ja
dec
aam
add
add
out
lret
sbb
sub
adc
cmp
test
lock
jl
push
das
or
cmpl
cmp
push
daa
fcoml
imul
jb
sub
mov
add
sti
sub
add
xchg
inc
add
cmpsb
lock
in
loop
nop
or
sub
out
movq
movsl
mov
sub
push
xchg
or
andl
aam
nop
sbb
insl
jae
ljmp
mov
sbb
imulb
adc
mov
xchg
out
stc
add
movsl
cmpsb
sbb
icebp
mov
xchg
cwtl
imul
sub
aad
jle
mov
repz
jmp
jecxz
aaa
outsb
add
outsl
ljmp
stc
push
mov
dec
jo
insb
pop
push
sbb
and
fisubs
outsb
shrb
pop
testb
sub
gs
mov
lds
mov
loop
testb
orl
mov
aam
rcrb
push
jno
fidivl
jmp
in
cs
js
sub
inc
push
mov
je
cmp
in
xchg
stos
jle
aas
leave
xor
or
pop
lods
xchg
outsb
ds
mov
dec
adc
sbb
out
test
lods
aaa
idivl
inc
ret
int3
subb
addr16
add
int3
add
mov
popf
and
xchg
mov
mov
repnz
add
bnd
add
add
pop
push
sbb
jl
pop
mov
fwait
mov
je
cltd
adc
loop
mov
lock
mov
jno
aam
adc
or
and
mov
push
push
cmp
sbb
iret
sub
es
stos
ret
scas
shr
add
or
cmpb
cmp
dec
or
sub
push
sbb
pop
lahf
add
sbb
push
leave
cmp
leave
ret
repnz
mov
rolb
sub
loope
push
push
insl
cltd
pop
scas
in
arpl
fisttpll
movsb
xchg
add
mov
lock
mov
addr16
jb
insl
and
fs
jno
out
mov
sub
mov
pop
cli
cmpsl
pop
dec
icebp
clc
mov
cmp
jb
rcll
xchg
or
jmp
mov
and
clc
pusha
ja
push
mov
sbb
mov
fsubr
dec
sti
mov
arpl
ret
xchg
cmp
sub
dec
out
mov
xor
insb
in
mov
sbb
dec
pop
cmpsb
jo
or
mov
clc
mov
sub
cwtl
aaa
sarl
dec
scas
xchg
xchg
inc
or
and
pop
xchg
jno
cmc
cmp
xor
mov
mov
pop
jp
and
adc
dec
cwtl
mov
mov
jmp
cmp
imul
cmpsb
cmpsb
inc
adc
daa
cmpsb
or
addr16
faddl
repnz
push
mov
insl
orb
pop
test
xchg
mov
pop
mov
das
mov
cmp
lock
xchg
repz
rcl
pop
out
inc
xchg
shlb
arpl
cmp
push
loop
cmp
out
pop
mov
je
mov
pop
inc
mov
push
test
xchg
dec
xorb
pop
mov
aas
scas
sti
sti
cmp
push
loop
shlb
sbb
jnp
or
xchg
sub
ss
jmp
mov
pop
mov
into
xor
mov
lret
mov
pop
sti
ja
lods
popa
push
int
xchg
xchg
inc
pop
call
jbe
sbb
xchg
jnp
xor
aaa
adc
andb
and
fsubrl
cwtl
stos
pop
lcall
mov
and
test
mov
xchg
or
add
push
xchg
jae
sbb
sbb
sarl
rcrb
sbb
ror
dec
ret
es
mov
push
jbe
popw
mov
enter
fstpt
mov
push
inc
add
imul
add
mov
push
aaa
or
dec
repz
jnp
dec
out
sub
mov
push
mov
ret
call
lock
xchg
mov
sbb
or
mov
inc
cmp
sti
pop
in
enter
cmp
inc
fsubrp
push
sahf
and
push
nop
pop
icebp
dec
add
sub
pop
les
outsb
ret
cmpsb
jo
mov
inc
fmull
clc
out
or
or
and
cmp
ret
testl
sbb
insb
dec
in
cmp
mov
aas
mov
call
sub
insb
push
iret
daa
in
push
push
mov
push
insb
loop
xor
cli
notl
aas
mov
sbb
icebp
lahf
je
cld
xchg
and
mov
aaa
into
adc
insl
loope
bound
push
js
or
jecxz
ja
into
lea
mov
rclb
std
jge
popa
mov
sti
xchg
das
mul
sti
or
hlt
popf
jle
inc
mov
jg
push
mov
push
in
in
mov
sti
hlt
inc
fcomps
sbb
mov
test
int3
mov
mov
mov
jbe
dec
fdivl
jmp
ds
and
and
pop
push
popa
xchg
out
psubb
mov
outsl
jecxz
lret
int3
clc
inc
and
add
lcall
stc
out
jo
mov
pusha
xor
popa
mov
xchg
std
ss
add
repnz
fldl
ds
sbb
jae
mov
or
jecxz
rclb
xor
push
xchg
es
cs
push
sarl
lcall
adcb
adc
outsl
pop
lods
scas
pop
imull
push
popf
mov
mov
xchg
subl
push
fidivrs
or
mov
andl
lahf
cmc
mov
lds
and
fbld
daa
lock
in
xor
mov
cmp
push
les
jns
fsubrp
das
jp
sub
mov
call
mov
sbb
mov
aam
cld
adc
pop
insl
int3
mov
loopne
into
add
sub
movsl
or
xlat
inc
push
and
push
jmp
mov
mull
stc
jmp
sub
jg
ret
jmp
es
pop
jg
mov
sub
dec
dec
push
mov
adc
fwait
ffree
mov
mov
cmp
test
inc
jge
mov
add
stc
inc
fcompl
les
les
dec
lds
lock
sub
mov
and
das
sbb
mov
repz
mov
adc
push
xchg
ljmp
xor
cwtl
xorl
ret
fs
ds
movsb
sub
sti
push
adc
je
jmp
dec
push
stc
std
mov
push
mov
or
fcoms
adc
dec
jp
mov
jmp
or
int
lods
xchg
filds
outsb
aas
xchg
test
imul
or
fisubs
pop
in
lods
repnz
outsb
rcrb
ffree
addw
rolb
lret
outsl
push
repnz
fcomip
js
adc
jbe
pushf
jne
test
pop
rolb
icebp
jns
test
aad
lret
repnz
call
mov
int
lods
lods
jmp
insb
aaa
enter
dec
sub
mov
stc
sub
mov
mov
mov
icebp
test
je
cmp
dec
popl
stos
loopne
in
mov
sbb
add
lock
int
xchg
mov
imul
sti
pop
mov
inc
pop
stc
scas
pop
repnz
xchg
inc
push
mov
xchg
mov
test
mov
jl
mov
scas
or
dec
imul
xchg
std
mov
ja
stos
mov
data16
ja
dec
rorl
clc
decl
mov
cmp
mov
lcall
std
fdivs
sub
jne
in
enter
pop
lea
dec
inc
rolb
sahf
sub
in
dec
jnp
fdivl
cmp
inc
jmp
mov
mov
sarb
adc
roll
mov
xchg
pop
into
adc
jmp
dec
dec
jecxz
cmp
push
pop
fs
sub
pop
xchg
mov
ffree
jmp
test
rorb
add
adcb
sbb
or
ja
inc
cmp
xor
stc
and
lea
push
mov
pop
push
aam
xor
jp
xchg
jle
jmp
jg
sahf
cmp
inc
xor
mov
xchg
adc
fmuls
mov
mov
adc
call
ret
jae
jmp
pop
dec
jo
test
aas
mov
pop
add
xchg
inc
lods
pop
bound
lcall
arpl
mov
jne
data16
icebp
xor
inc
cli
es
jo
hlt
dec
jg
dec
sub
dec
cld
sub
dec
and
dec
mov
fmuls
ret
rcr
sub
stos
jl
mov
cmp
mov
pop
mov
pop
and
clc
sub
mov
cli
addl
jecxz
pusha
movsb
shl
insl
pop
repnz
fwait
scas
and
mov
int
pop
outsl
cmpsb
sarl
add
xchg
in
push
sbb
push
mov
pop
push
pop
divb
shl
sub
push
bound
andl
lahf
jo
adcl
scas
dec
sarl
imul
push
rclb
fists
jne
aam
ret
jns
dec
cmp
jl
popa
jo
lock
addl
cmp
cmpsl
sub
mov
pop
dec
sub
pusha
adc
sar
ret
cmp
lods
icebp
adc
cmp
lock
pop
mov
sub
push
inc
push
mov
push
inc
xchg
cld
ss
cmp
ss
inc
mov
sbb
push
rorb
pop
sarl
lods
inc
lock
movsb
jns
dec
mov
add
xchg
lods
cmpsl
inc
call
lods
xchg
add
enter
or
pop
sub
xchg
daa
scas
cmp
xor
mov
or
xor
cmp
xchg
mov
arpl
xchg
imul
imul
decl
push
adc
push
cld
mov
dec
cli
jnp
daa
pop
lea
xchg
fldl
push
das
in
pushf
popa
mov
shll
insb
fdivs
pop
inc
and
sbb
ljmp
and
jo
xor
xlat
dec
imul
loopne
test
push
fsubrl
xchg
sahf
icebp
xchg
jle
fsubrl
jne
jo
data16
and
in
orl
gs
lret
dec
inc
leave
xchg
pop
xchg
inc
xor
loop
je
test
add
push
es
lcall
clc
call
and
or
sub
out
sbb
push
inc
inc
lret
pop
int
mov
out
rcrb
jnp
test
mov
cmp
loopne
inc
fisubrl
outsb
cwtl
mov
pop
pop
sub
dec
fst
jge
es
mov
lahf
movsb
jp
sub
imul
adc
mov
pop
mov
je
cltd
addr16
sbb
add
addr16
loop
mov
rorb
jnp
fucomi
xchg
arpl
ss
testl
ljmp
mov
xchg
popf
int
rcll
fsubp
ret
or
mov
inc
xchg
lahf
insb
jnp
xor
mov
test
testl
stos
in
pop
inc
dec
jmp
dec
cltd
movsb
adc
cmc
jl
add
or
mov
mov
or
bnd
aas
ss
movb
push
or
ja
out
lret
push
sbb
lahf
out
daa
repnz
cmp
or
insb
add
pop
jge
jl
sub
out
and
cld
adc
jle
mov
sahf
sti
faddl
fucomi
mov
inc
xor
mov
in
adc
pop
sarb
fiaddl
adc
pop
aad
xchg
dec
jmp
jo
pusha
xor
adc
sub
je
xor
addr16
ss
inc
mov
push
sub
add
test
aad
push
shlb
lods
xchg
sub
pop
in
push
sub
lea
test
and
divl
pop
in
lahf
popf
inc
mov
popa
int3
xchg
and
xor
out
mov
sub
mov
pusha
cld
jno
outsl
inc
test
inc
mov
jno
push
fidivl
orb
inc
cli
outsl
sbb
push
or
dec
jmp
mov
or
jmp
jge
xor
mov
in
push
jmp
repz
mov
fcomps
jecxz
push
repnz
and
push
out
cmovs
jbe
movsl
mov
fcmovne
add
and
in
jns
jmp
lods
inc
rcrb
mov
mov
fstp
imul
xchg
les
repz
xchg
int
rorb
test
lret
dec
xchg
shlb
fists
pusha
jle
stos
cltd
pop
and
mov
mov
mov
push
lods
mov
xlat
or
es
rcll
mov
imull
sbb
mov
outsl
push
mov
push
out
push
add
mov
fs
mov
dec
stos
inc
dec
dec
inc
mov
jae
mov
stos
mov
sbb
push
push
add
xor
stc
add
cmp
lea
movsb
les
ds
lret
aas
mov
or
jmp
push
inc
fucom
into
cltd
fdivrs
insl
cmp
xchg
fwait
out
adc
pop
and
jno
fisubrs
push
pushf
jo
dec
jb
jne
add
sub
sub
and
mov
mov
mov
push
rorb
or
pop
enter
je
sbb
jp
test
cmp
sahf
add
in
pop
bnd
pop
aam
jecxz
jmp
out
or
pop
or
dec
jne
test
sbb
mov
idiv
mov
mov
xchg
ret
or
or
xlat
mov
pop
cmp
insl
mov
push
aam
adc
cltd
imull
lahf
pop
dec
push
or
clc
push
jge
stos
dec
pop
mov
outsb
pop
jle
clc
out
sub
jae
adc
xor
and
icebp
adc
xor
addr16
push
sti
adc
gs
xchg
dec
or
cmp
mov
fisttpl
sbb
mov
out
enter
addr16
andb
imul
repnz
repnz
out
mov
cltd
or
sbb
inc
cmpsl
mov
enter
inc
leave
aas
mov
and
pop
fwait
push
jmp
xor
add
cmp
pop
rcrb
push
mov
inc
negb
out
clc
dec
push
dec
add
inc
xchg
pop
idivb
lods
sbb
imull
push
mov
pop
jmp
add
jcxz
dec
jb
lds
mov
enter
cmp
cmp
pop
push
lcall
dec
sbb
lods
pop
lcallw
xorb
sub
sbb
popa
in
lret
loope
repnz
fsubrl
push
ret
cmp
out
std
or
outsl
sub
sbb
adc
adc
mov
aam
iret
jbe
pop
sbb
int
add
jns
loopne
cmpsl
sbb
pop
add
js
push
enter
je
mov
in
push
repz
into
loope
int
ret
xor
cld
ret
jmp
mov
in
fcoml
fwait
pop
push
cmovs
popa
dec
sub
and
jno
loopne
add
push
loope
stos
sbb
sub
lods
insl
pop
cltd
jle
fidivrl
popf
ret
stc
add
cmp
sbb
mov
scas
gs
pop
enter
hlt
mov
lret
xor
inc
mov
or
rorl
xor
xchg
or
mov
jae
aam
out
inc
dec
push
xchg
in
psubq
andl
inc
cmp
data16
cmp
cmpsl
aaa
loope
arpl
push
push
pop
insl
xchg
imul
stos
cmp
dec
loope
stc
enter
inc
bswap
pop
cmp
pop
or
sub
bound
stos
dec
cltd
push
and
sbb
mov
jne
inc
push
jg
stos
inc
jg
cs
sub
lods
in
or
sti
jmp
xor
out
pop
xor
cltd
loop
jg
push
pop
and
icebp
mov
cmp
movsb
xchg
pop
loopne
inc
dec
jp
xchg
out
mov
icebp
lock
sub
loop
stos
sbb
scas
mov
cli
ret
arpl
mov
test
push
out
mov
mov
ljmp
push
lret
rolb
btr
mov
pop
fxch
jne
test
adc
sbb
sub
mov
jno
shlb
out
mov
dec
jecxz
inc
xchg
les
cmp
sub
fistpl
call
aad
sbb
mov
nop
cwtl
iret
inc
dec
cltd
and
test
xor
outsb
jnp
mov
xchg
and
repnz
jg
rol
mov
movsl
push
iret
jne
push
jp
xor
nop
movsb
int3
dec
lock
hlt
push
mov
mov
out
repnz
push
fiadds
xchg
push
and
push
ljmp
jae
inc
xor
push
divl
stos
pop
add
jge
push
clc
jg
jo
sbb
adc
fistpll
pop
jp
inc
dec
icebp
lahf
adc
jge
popa
rcrl
les
xchg
test
fisttpl
call
ret
xchg
hlt
adc
int3
or
sbb
adc
cmc
push
roll
pop
sbb
les
dec
mov
mov
in
adc
jecxz
adc
sbb
lcall
loop
aam
mov
aas
adc
lcall
test
mov
popa
cmpsb
jnp
adc
sbbl
int
pop
inc
cmp
inc
jmp
push
and
cmp
arpl
cmp
push
mull
ror
pushl
dec
mov
arpl
int
bound
lcall
mov
dec
lock
sub
and
xchg
test
adc
inc
inc
jmp
inc
add
jno
std
fstpt
pop
mov
inc
shrb
subb
add
lods
in
movsl
fsubp
jmp
push
fs
orb
inc
fwait
lret
push
fucom
fidivs
sahf
sub
ds
xchg
cli
mov
jnp
add
mov
push
mov
scas
adc
bsr
ficoms
jp
pop
fisubrl
sahf
movsl
out
lea
lock
mov
cmc
fcmovb
iret
mov
xchg
into
outsb
adc
fidivrl
push
jg
nop
sti
adc
imul
dec
icebp
mov
ss
mov
cltd
pop
rolb
mov
fidivrl
mov
mov
push
sub
xchg
pop
mul
or
enter
aaa
sti
xchg
inc
xlat
das
fs
push
adc
int3
shlb
mov
mov
pop
jle
xchg
adc
sbb
jnp
test
xchg
add
push
fildll
and
mov
or
sbbl
adc
cmpsl
stos
mov
mov
fdivrs
or
sahf
xchg
ja
decl
mov
mov
sub
loope
dec
test
pop
cld
xchg
jp
mov
scas
hlt
xchg
mov
out
or
xor
aam
xor
daa
jp
daa
call
fprem1
inc
mov
push
lahf
jle
in
enter
in
sahf
call
fisubs
addr16
pop
int
jge
adc
js
roll
dec
push
push
or
out
ljmp
aam
push
add
sahf
fcmovbe
or
test
nop
sbb
insl
push
loop
push
arpl
test
sub
mov
repz
mov
loopne
add
cmp
dec
xor
xor
jg
stc
cmp
push
ja
cmc
mov
and
mov
push
xchg
xor
stc
add
push
inc
aaa
inc
outsl
mov
lahf
push
scas
dec
leave
cmp
aam
jns
cltd
sbb
movsl
jae
in
add
addr16
jo
insb
xor
mov
sub
or
xor
jg
cld
repnz
fwait
aas
icebp
push
cmp
xchg
mov
push
inc
je
pop
sbbb
push
pop
mov
idivl
cmp
test
push
cltd
lahf
leave
add
xor
jns
stos
bound
int
push
xchg
and
pop
mov
imul
loopne
add
mov
fwait
jb
cld
mov
inc
js
imul
xor
pop
cmpb
push
lret
imul
fs
lods
mov
imull
rcl
shlb
ficoml
ss
xchg
push
test
test
xchg
cmovnp
lods
inc
cmp
xchg
bound
daa
sub
gs
add
rep
sbb
and
sub
jb
or
lea
dec
cmp
jne
es
pop
ss
lds
jecxz
mov
or
addr16
flds
insl
push
mov
sar
mov
push
dec
pop
inc
iret
lods
aam
out
nop
outsb
subl
out
in
andl
sbb
lahf
xlat
rclb
out
outsb
mov
pop
adc
adc
movsl
add
out
sbb
xor
stos
dec
leave
inc
aas
jae
test
popf
dec
call
push
jns
imul
mov
js
pop
mov
imul
jae
jge
cmp
cs
pop
fidivs
jle
adc
in
jno
aam
xchg
out
mov
mov
cmp
enter
mov
add
push
jo
push
pop
push
outsl
ss
mov
ljmp
jb
stos
loope
add
scas
mov
popl
lods
push
or
lods
movsl
clc
pop
xchg
in
imul
push
rcll
scas
xchg
mov
sbb
pop
ret
jmp
add
mov
cmp
xor
add
mov
xchg
not
ss
add
scas
push
cs
cmp
adc
stc
jecxz
inc
iret
test
push
or
jge
pop
sbb
sbb
adc
in
cmp
xor
test
pop
jge
jge
cmpsl
push
dec
in
jp
dec
mov
in
dec
lock
xchg
add
stc
pop
repnz
sub
sub
mov
adc
add
push
data16
fisttpl
jb
sti
and
add
arpl
mov
inc
hlt
xor
and
lock
imul
push
adc
add
cmpl
jo
xchg
sti
mov
sbb
jb
stc
xchg
mov
dec
test
insb
sbb
stos
iret
push
or
fistpll
nop
lods
push
inc
inc
fisubs
inc
test
mov
sbb
sbb
push
sbb
test
sub
hlt
mov
adc
cmp
divl
out
imul
mov
pop
aaa
sub
into
dec
mov
scas
xchg
out
mov
xor
mov
lahf
icebp
roll
sbb
add
inc
xorb
mov
mov
icebp
sbb
cmp
adc
dec
jmp
out
xchg
push
push
add
sbb
and
cmpsb
pop
add
stos
sbb
dec
loop
mov
imul
mov
scas
mov
mov
cmovl
nop
jbe
test
mov
fimull
inc
shll
inc
sahf
xchg
dec
or
sbb
mov
adcl
pop
push
pop
out
es
sub
pop
les
fmull
ja
add
aam
sub
mov
xchg
popl
and
dec
iret
xor
jae
dec
mov
sbb
pusha
add
or
dec
dec
mov
mov
out
pop
xor
in
inc
adc
int
test
rorl
lahf
scas
adc
sbb
nop
or
mov
adcl
pop
cmp
adc
aad
and
mov
mov
nop
pop
sub
in
mov
mov
mov
int
outsl
sub
fnsave
mov
xchg
and
jl
mov
daa
enter
add
push
add
je
lods
xchg
rcr
xor
call
pop
add
adc
arpl
mov
cmp
cmpsl
lods
pop
pop
testb
std
ja
push
neg
jb
push
inc
add
jecxz
push
out
mov
jnp
lods
jmp
data16
mov
and
push
inc
xor
in
push
mov
xchg
fsubr
xchg
add
pop
clc
dec
mov
mov
jecxz
dec
cmp
repz
push
and
inc
out
sbb
cwtl
ss
jp
in
in
jns
add
lods
imul
pop
mov
fidivrl
fmul
xchg
xchg
mov
outsb
fisttpl
cltd
xchg
pop
sbb
and
mov
test
mov
scas
clc
add
xchg
icebp
sub
jg
xchg
pop
push
mov
mov
in
mov
pop
popa
mov
add
inc
jne
cmp
mov
jmp
mov
sub
frstor
daa
push
xchg
daa
out
or
gs
fdivs
push
add
mov
inc
lods
mov
ret
mov
lret
inc
pop
pop
mov
fucomip
push
orb
test
mov
inc
xor
cmpsb
fisttps
jo
sbb
sub
jo
insb
test
aad
movsb
push
cmpsl
jb
out
out
dec
xlat
sbb
in
cmp
mov
add
out
ret
decl
pop
or
jp
sbb
fcomps
pop
cmp
nop
pop
les
sub
mov
add
mov
mov
pop
das
ja
push
inc
out
aas
clc
pop
fsubs
testl
mov
push
aad
cwtl
cwtl
xor
sti
std
cmpsb
aas
cld
push
pop
jbe
mov
push
mov
adc
push
iret
jno
lret
jb
pop
cmpsb
add
sub
out
pop
mov
pop
cli
repnz
jno
jmp
nop
lcall
add
pusha
push
stc
add
mov
jg
mov
lock
xor
hlt
iret
inc
or
dec
adc
cmpsb
mov
loope
jbe
frstor
mov
rcrl
movsl
dec
sbbl
add
scas
dec
push
mov
iret
adc
fs
aaa
pop
ret
andl
add
imul
pop
jl
sbb
pop
bound
rcll
int3
inc
inc
xor
mov
sbb
or
pop
test
addr16
inc
int
inc
lock
pop
cmpsl
das
fcompl
and
gs
mov
mov
aas
shrl
cmpsb
int3
jne
jmp
jge
jp
jns
or
dec
pushf
add
pop
dec
ret
outsl
ret
or
add
outsl
sub
or
cwtl
or
pushf
xchg
or
aaa
cmp
adc
push
hlt
mov
movsb
sbb
js
hlt
sbb
dec
ret
adc
fstpl
fsts
cmp
pop
sub
add
push
mov
adc
push
add
bound
jmp
fwait
sbb
mov
shll
enter
mov
in
cmp
insl
push
rcll
pop
and
mov
mov
dec
xchg
xchg
lret
js
popa
jnp
xor
call
cmp
mov
scas
inc
jp
in
ljmp
lahf
pop
mov
ss
dec
cmc
mov
jnp
iret
arpl
loope
or
lods
mov
insl
add
leave
ljmp
jmp
sbb
sbb
push
rolb
js
add
in
aad
shr
sbb
push
push
add
dec
fwait
lock
dec
push
aam
push
xchg
lret
and
sub
inc
jb
add
xchg
xchg
test
adc
in
imul
fnstcw
negl
jns
stc
lds
cmp
mov
scas
cmovp
adc
popf
mov
ds
dec
lds
std
push
mov
test
cwtl
and
popf
or
inc
xor
out
scas
cs
push
mov
xor
addb
loopne
mov
call
je
push
push
pop
mov
cmp
push
je
cli
in
sub
add
out
xchg
cwtl
ror
das
sub
xlat
xlat
sub
xchg
jne
fnstenv
push
jb
int3
pop
jl
sbbl
dec
xchg
leave
hlt
cmpsb
push
lahf
mov
imull
add
faddl
cmp
in
pop
or
adc
std
out
push
imul
xor
mov
clc
fwait
mov
ds
mov
mov
das
inc
or
ret
or
orb
jns
add
cmp
cmp
sub
out
movsb
ds
dec
xchg
aad
sub
popf
das
or
mov
leave
add
mov
and
std
sbbb
xor
movsl
lock
inc
inc
push
insb
cmp
rcll
cmpsb
repnz
jp
xchg
arpl
push
rolb
idivl
push
movsb
jmp
pop
fsubrs
or
mov
addr16
les
jmp
push
cmp
dec
mov
or
scas
jo
push
push
add
mov
pop
or
out
call
add
es
jnp
pop
imul
adcl
jo
push
cltd
enter
inc
outsl
add
mov
out
fists
scas
and
jb
jecxz
inc
adc
mov
fwait
sub
dec
inc
fimull
fwait
xchg
sbb
mov
inc
inc
sub
mov
push
dec
fstpt
cwtl
fs
lock
inc
sub
bound
mov
dec
add
inc
jle
stc
popf
adcb
xlat
sti
ljmp
or
mov
ljmp
add
mov
fwait
dec
xrelease
sub
mul
jg
xor
push
dec
pop
pop
inc
mov
inc
pusha
clc
test
leave
cmpsb
mov
sub
xor
dec
loopne
mov
idivl
or
sbb
lret
push
inc
push
shrl
mov
sub
enter
test
mov
enter
insb
push
inc
mov
sbb
mov
add
sub
leave
lock
mov
enter
jp
xlat
jo
stos
add
mov
inc
and
jmp
shlb
xor
shll
pop
inc
in
push
mov
xchg
and
jne
cli
push
mov
xor
sub
or
in
dec
mov
pop
sub
xor
subl
push
out
mov
pop
hlt
dec
jge
or
nop
sub
add
repz
and
movsb
cli
out
adc
xchg
sub
movsl
mov
mov
jl
mov
pusha
scas
sub
and
mov
and
mov
into
addb
sub
pop
push
cmp
hlt
sbb
sub
mov
xor
ja
push
jecxz
xor
aad
sub
into
or
imul
xchg
rol
nop
mov
or
mov
scas
mov
inc
int
testl
pushf
iret
or
mov
in
fcmovbe
and
xor
stos
push
dec
enter
outsl
mov
pop
add
or
gs
pusha
daa
and
xchg
inc
push
lret
ds
ret
or
mov
scas
int3
push
sbb
ljmp
xchg
js
insb
add
aas
jp
enter
int
mov
pop
int3
popf
adc
test
cwtl
fidivs
dec
pop
nop
cmpsb
scas
pop
enter
or
xchg
inc
inc
xchg
push
lea
push
push
sbb
testb
fs
aam
fxch
add
mov
dec
clc
hlt
push
add
call
rcll
ljmp
adc
push
add
aas
icebp
in
mov
xchg
pop
push
inc
mov
in
and
push
add
push
jmp
movsl
push
arpl
dec
fs
dec
and
or
mov
test
cwtl
mov
and
scas
cmp
xchg
and
in
and
xchg
insl
test
fs
push
inc
mov
loop
sub
mov
add
in
lods
jns
scas
sbb
mov
mov
mov
jmp
scas
sti
dec
lcall
int
xor
pusha
mov
cmpsb
jno
push
add
inc
mov
push
rcrl
je
add
call
fs
loope
dec
mov
inc
push
inc
es
and
mov
sub
mov
mov
insb
adcb
xchg
outsb
fldl
dec
push
mov
imul
mov
es
cld
mov
mov
sub
shrl
imul
inc
mov
rcr
and
fsubl
inc
jl
orl
in
pop
and
aam
mov
push
sarb
sbb
cmp
cmp
pushf
outsl
push
add
sbb
mov
fldenv
lods
in
adc
dec
hlt
jge
enter
mov
pushf
mov
xlat
and
mov
mov
fsubrp
inc
lods
pop
xor
test
in
nop
push
xchg
leavew
imul
mov
divl
fwait
mov
ja
add
cmc
mov
adc
subb
jb
sub
dec
sub
into
mov
loope
aaa
inc
clc
insb
mov
aas
sbb
jge
adc
and
out
data16
add
and
test
into
mov
mov
dec
mov
pop
jp
push
add
or
mov
imul
fidivrs
inc
loopne
aam
mov
cltd
cmc
out
xor
inc
mov
push
jne
ds
mov
and
test
mov
in
sub
les
inc
lods
or
andl
ret
xor
xchg
sub
add
adc
pop
mov
cmp
aaa
mov
xorl
xchg
aas
lcall
fs
pop
ljmp
push
xor
out
inc
xlat
rcrb
cwtl
cltd
popl
jo
pusha
jns
dec
cmp
ds
dec
pop
out
jecxz
jo
lds
sub
into
sub
pop
pusha
fstpl
jmp
mov
mov
push
sahf
outsb
pop
xchg
sarl
add
call
sti
sysexit
mov
cmp
or
xchg
insb
roll
push
add
add
in
shll
push
stos
lods
dec
clc
and
fisubl
sbb
movsb
lds
hlt
orl
cwtl
jle
fcoms
imul
out
testl
push
mov
pop
sbb
and
stos
adc
scas
lods
loopne
insl
out
or
pop
enter
call
incl
xlat
jbe
ficoml
iret
pop
iret
mov
ja
sahf
int3
mov
mov
mov
xchg
enter
ret
addr16
pop
mov
mov
cmc
inc
pop
ret
dec
rcl
xor
cmc
add
mov
loop
lret
clc
fsubl
pushf
add
mov
das
mov
jnp
pop
or
dec
xchg
push
add
lock
repz
test
sti
fsubs
lret
push
imul
xor
pop
outsl
icebp
adc
xor
shrb
sbb
xchg
jmp
push
ds
enter
jle
movsl
lret
mov
addb
sahf
addl
ss
rcr
xor
mov
dec
stc
adc
ja
xchg
les
in
jmp
cmpsb
sub
push
xchg
ss
push
add
popw
aaa
jae
pop
fistl
xchg
xchg
adc
shll
inc
scas
shll
lods
push
inc
dec
insb
mov
imul
popf
mov
outsl
in
out
push
inc
dec
cmpsb
repz
test
mov
test
sbbb
sub
sub
and
mov
or
shll
lods
jecxz
push
mov
std
xchg
xor
adc
ret
rorb
dec
mov
jp
pop
fiadds
insb
imull
in
mov
sbb
ret
and
mov
bound
popf
stos
adc
ret
icebp
xor
or
movsl
push
sub
loope
push
addr16
in
adc
push
cmpsb
aaa
sub
push
lahf
xchg
sub
mov
push
mov
and
fdivl
mov
das
pop
add
stos
insb
jecxz
imul
dec
add
in
lea
xchg
cltd
and
pop
fwait
mov
cli
mov
inc
cmc
fldcw
pop
jmp
outsb
cmc
jmp
es
mov
mov
sbb
sub
or
pop
ficoms
test
or
xchg
jmp
test
cwtl
mov
fnstcw
mov
xor
mov
dec
add
xchg
add
or
push
out
lods
mov
push
movsb
aad
dec
jno
adc
test
sub
adc
pop
dec
mov
sarl
and
pop
call
sub
stos
sub
jmp
mov
addl
outsl
popa
inc
mov
in
scas
insb
rclb
add
fwait
lds
mov
jp
int
enter
adc
fimuls
or
inc
xchg
movsl
mov
mov
in
imul
call
jl
rcll
repnz
das
or
mov
or
dec
lahf
or
xor
pushf
aad
push
cmp
ficoml
ss
sbb
aad
jno
fmull
ret
push
inc
enter
mov
data16
fsubl
jge
fistps
push
xchg
shrb
lret
mov
push
das
mov
rcll
mov
bnd
add
mov
mov
inc
stos
dec
outsb
loopne
clc
mov
push
pop
mov
insl
jns
jb
and
add
and
add
mov
enter
adc
insb
xchg
outsb
xchg
xor
pop
rcr
sahf
lods
int
jge
icebp
fcmovbe
sbb
pop
lret
mov
outsl
and
out
push
xchg
or
inc
pop
xor
cmpsl
lock
out
jl
jg
jbe
mov
insl
push
cwtl
int
repz
dec
std
repz
mov
nop
jnp
xchg
icebp
aas
int3
mov
cli
loopne
or
add
aaa
sub
cltd
pop
dec
cltd
xlat
dec
jg
mov
fbld
inc
dec
mov
repz
popa
or
lock
enter
sbb
mov
mov
incl
aaa
xor
mov
mov
push
ljmp
cli
test
mov
in
xor
mov
pop
bnd
push
mov
jns
xor
xor
inc
incb
cs
ret
sub
pop
mov
adcl
adc
fsub
lods
stos
ja
aas
in
dec
xchg
sbb
das
sub
mov
adc
xor
add
loope
lcall
addr16
ja
iret
mov
and
imul
mov
pop
mov
sti
shrl
rcr
mov
and
adc
and
mov
pop
mov
stos
stos
leave
xchg
add
dec
lret
xchg
inc
jb
xchg
repnz
insl
addl
pop
inc
adc
jb
cmp
xchg
out
int3
jge
or
jp
in
jbe
lds
sub
xchg
shl
or
fdivr
jnp
pop
stos
in
pop
pop
lea
cmp
addr16
sbb
test
lahf
fisubrs
outsl
add
inc
rcl
dec
jge
adcb
push
les
cmp
xchg
outsb
xchg
mov
loopne
pop
mov
mov
test
lods
pop
or
pop
sarb
les
and
rol
xchg
add
ret
xlat
in
bound
fiadds
or
add
mov
int3
jg
cld
es
ss
xchg
mov
in
out
je
pop
sub
iret
pusha
lock
hlt
mov
sub
shrb
ljmp
inc
test
lret
mov
mov
mov
or
ret
mov
popa
dec
jo
cmpsb
fisttpl
pop
pushf
adc
mov
pop
cmp
cmp
xor
imul
daa
cmc
adc
clc
mov
repnz
and
cmp
mov
iret
push
jecxz
push
jg
hlt
lret
ljmp
mov
xchg
push
in
inc
stos
cli
sbb
push
je
adc
mov
jp
adc
lods
sub
insl
mov
sti
sbb
fwait
or
inc
inc
sbb
push
and
je
sbb
in
cmp
in
or
sbb
shl
sbb
out
mov
xor
outsl
iret
pop
out
jge
xchg
pop
cmp
or
es
jecxz
cmp
jg
cwtl
inc
adc
xor
scas
addr16
push
mov
sub
mov
aam
idivb
mov
push
cld
rcrl
pusha
push
int3
cmp
std
sti
sub
or
in
lahf
mov
cmp
out
cld
cmpl
cli
inc
push
stc
leave
insl
adc
sti
mov
mov
pop
popl
lods
xchg
mov
mov
adc
jbe
sbb
mov
mov
lock
sub
jns
adc
sub
jo
xchg
das
xchg
sti
bound
mov
aad
cmp
movl
mov
outsl
in
push
and
mov
inc
int
lret
ret
mov
xor
lret
adc
cld
mov
inc
aaa
or
rolb
pop
test
cli
call
neg
fs
stos
cltd
xlat
bound
pop
sahf
insb
pop
orb
xchg
out
dec
and
test
mov
push
adc
out
mov
outsl
push
loop
test
push
mov
aad
popa
dec
lcall
popl
push
mov
pop
daa
and
mov
jnp
mov
or
call
outsb
sahf
pop
bound
popf
aad
cmp
inc
lods
andl
popf
pop
mov
inc
add
dec
pop
aas
add
into
xchg
lds
cs
jmp
fs
or
sbb
fsubs
cmp
push
cmp
rorb
fsubs
adc
xor
add
into
push
mov
jnp
insb
jge
mov
fs
pop
push
mov
push
sbb
stos
mov
insb
xchg
and
rcrb
outsb
clc
sbb
push
dec
sbb
jmp
adc
les
adc
sbb
push
dec
mov
ljmp
push
cmpsl
out
mov
adc
sbb
mov
mov
adc
mov
aaa
push
cmp
dec
mov
sbb
dec
xor
adc
pop
fists
push
icebp
jl
pop
test
mov
xor
shrl
pop
cmc
xchg
inc
inc
xchg
clc
and
mov
add
cli
jns
xor
cs
repnz
add
mov
or
cli
add
repnz
mov
mov
loopne
pop
mov
jnp
add
push
rclb
int3
inc
push
pop
stc
data16
repnz
sbb
push
gs
xchg
mov
adc
xor
stc
jne
jns
sbb
popa
fs
popa
mov
mov
and
das
aad
cltd
mov
inc
mov
gs
jb
ret
enter
and
mov
lods
xchg
mov
push
adc
add
sbb
in
xor
mov
dec
js
lods
adcl
push
lahf
ret
push
xor
hlt
add
loopne
hlt
cmp
push
add
inc
push
mov
cmpsb
lea
push
cwtl
mov
push
mov
pop
mov
sbb
xchg
stc
xor
aas
cmp
pushf
cmp
jmp
jmp
add
or
adc
pop
cmp
xchg
mov
sbb
iret
jl
xchg
sbb
fwait
loop
cmc
inc
sub
push
cs
lret
inc
mov
jp
cmp
cmc
out
mov
sub
sbb
repnz
xor
test
mov
lds
dec
add
lods
dec
add
cmpb
das
test
cwtl
jbe
out
fistps
sub
stos
scas
mov
mov
in
inc
jecxz
adc
gs
clc
data16
push
lods
insl
xchg
pop
aaa
mov
xchg
hlt
lods
outsl
cltd
xchg
jbe
pop
mov
xor
lcall
imulb
dec
jo
pop
add
pushf
into
int
js
jp
mov
lds
popw
xchg
daa
stc
inc
sub
int3
insl
aaa
icebp
push
pusha
inc
sub
add
or
and
inc
jbe
insb
sbb
dec
cltd
bnd
mov
in
js
xchg
into
sub
insl
dec
adc
pushf
insl
es
repz
fwait
push
push
lcall
sub
leave
inc
xlat
mov
adc
adc
pop
test
push
mov
aas
xchg
mov
xchg
pusha
test
xor
ret
ds
jp
int
imul
fneni(8087
fsubrs
pop
fs
les
gs
fdivl
sbb
scas
clc
xchg
je
fsubrl
stos
sbb
stos
movsl
inc
movsb
aam
or
xchg
es
mov
xchg
jmp
pop
and
divl
in
ficompl
cltd
stos
orl
daa
mov
aad
popf
xchg
ficompl
aaa
outsb
pop
mov
stos
inc
or
cmp
pop
or
mov
sarl
pop
cmp
jno
xchg
dec
mov
mov
movaps
mov
negb
cmp
outsl
mov
jbe
test
mov
or
adc
scas
push
iret
loopne
mov
mov
push
pop
add
and
xor
pushf
lea
xchg
imul
js
cmpb
test
mov
loop
sahf
das
mov
mov
jmp
sub
and
dec
mov
arpl
mov
sbb
fistpl
dec
mov
mov
jae
test
add
stc
lods
and
bound
mov
add
daa
inc
sahf
into
pushf
mov
mov
push
cmpl
pop
das
rclb
lods
ja
lret
stos
sbb
dec
push
out
mov
or
sbb
fsubs
orb
push
push
mov
loopne
ja
and
jmp
xor
cmc
push
rclb
ja
int
sbb
sub
add
fnsave
jno
out
adc
imul
jbe
pop
and
push
push
jl
loopne
lock
cmp
test
xchg
xor
xchg
push
dec
jge
cmp
add
outsb
orb
sbb
add
add
sti
in
push
adc
bound
xchg
pop
inc
mov
push
pusha
inc
outsb
adc
out
rolb
cmp
repnz
cvttps2pi
or
cmp
loope
test
sub
or
mov
notl
xchg
bound
mov
mov
test
xchg
pop
mov
das
aam
loopne
in
loop
sbb
ja
sbb
daa
cwtl
out
push
repnz
sbb
jge
pop
rcrl
jnp
jo
sub
pushf
or
icebp
mov
scas
stc
out
mov
sub
push
mov
es
aad
mov
mov
mov
jl
fs
flds
pushf
lock
pop
call
xchg
mov
test
mov
and
in
and
sarl
jo
sub
arpl
and
jae
mov
mov
les
mov
mov
mov
fdivl
mov
or
lods
insb
movsl
fcmovnu
out
mov
in
imul
or
ret
ljmp
fisubrl
cmc
mov
jp
aas
sahf
cmp
dec
xchg
sbb
xchg
adc
in
jne
mov
and
insb
dec
cmpsl
in
mov
or
jp
sahf
xchg
add
cmp
mov
and
xchg
ficoms
push
pushf
fs
stos
stos
sbb
push
ret
or
repz
dec
mov
sbb
pop
push
loop
add
jbe
mov
data16
sub
pushf
out
mov
mov
mov
jns
dec
adc
and
lret
lods
popf
dec
test
in
std
pop
add
pop
sbb
gs
sub
xlat
leave
sti
std
xchg
mov
jmp
sti
and
jmp
adc
sbb
and
xchg
pop
sti
addr16
pop
cwtl
sbb
mov
ja
mov
cld
cmp
cmp
fldenv
xchg
mov
testl
test
add
jne
mov
insb
xchg
jl
mov
adc
jb
push
fsubl
lock
sahf
mov
incl
hlt
stos
pop
mov
hlt
dec
ljmp
daa
rcl
in
sti
imul
call
fs
sarb
ja
inc
cmp
outsb
or
sub
mov
mov
popa
mov
pop
pop
xor
jnp
xchg
std
imul
jle
cltd
shrb
nop
fidivl
push
and
stos
mov
push
popa
loopne
aaa
mov
xchg
mov
adc
cs
in
inc
shrb
add
out
and
out
inc
push
clc
pop
scas
mov
pusha
or
jb
je
loop
push
add
ret
aaa
clc
sbb
mov
out
adc
xchg
push
push
xchg
cmp
mov
add
jp
mov
push
aaa
cmp
movsl
shlb
xor
sub
inc
sar
lahf
or
inc
add
xchg
sub
xchg
dec
inc
mov
jb
mov
in
inc
cli
mov
xchg
inc
cwtl
test
cmc
dec
fbstp
pop
pop
cld
jns
lods
inc
mov
lds
jne
ja
add
popa
adc
sbb
xchg
inc
push
bound
push
fdivr
push
push
into
addr16
mov
sbb
notl
aas
or
mov
and
mov
sti
sbb
mov
pop
and
mov
mov
inc
or
inc
push
outsl
pop
jo
jmp
mov
cmp
jecxz
cmp
cmpsl
imul
inc
out
fwait
push
stos
mov
xor
inc
cmpsb
sub
lds
mov
cli
push
mov
mov
movsl
dec
jmp
push
mov
movsl
xchg
enter
sub
dec
dec
mov
loop
scas
jns
cmc
mov
lahf
ss
daa
mov
pusha
or
in
lahf
repz
ja
std
push
ret
push
dec
test
cmp
dec
mov
mov
jno
loope
and
or
lock
push
pop
xchg
sarb
jle
mov
ror
std
mov
sub
adc
jge
hlt
adc
ds
pop
mov
jl
jno,pn
mov
xor
push
inc
loopne
cmp
fnstsw
xchg
sbb
xor
sti
fs
gs
jg
xchg
cmc
mov
pop
mov
push
inc
and
imul
int
int
call
ljmp
push
ret
or
add
pop
sub
xchg
sub
outsl
call
shrb
pop
ret
clc
mov
ja
cmp
in
mov
stos
fldpi
xor
or
push
ja
sub
inc
stos
ret
pop
sbb
mov
pusha
pop
fists
fucomip
dec
xchg
sub
xor
mov
in
aam
fwait
pop
rcrl
pop
je
lahf
ret
popa
outsb
dec
or
xchg
inc
fbld
fdivrs
jp
inc
pop
xchg
mov
int3
insl
mov
jge
lods
fistl
das
xor
push
lods
sub
inc
push
dec
mov
or
cli
lret
in
jp
pop
cmpsb
ja
mov
xlat
idivl
fldenv
gs
cltd
sti
hlt
sti
ljmp
pop
inc
sbb
sbb
mov
mov
add
shl
loope
sbb
mov
mov
test
inc
xchg
mov
rcll
aad
test
and
cld
pop
outsb
ljmp
fisubrs
xchg
notl
xchg
data16
pop
rorl
mov
fadd
ja
sbb
cltd
fldt
cmc
popa
jne
adc
out
jnp
shl
jecxz
das
pop
ljmp
xchg
js
add
aam
lea
popf
inc
add
jmp
es
add
pop
and
aad
adc
sar
xchg
cvtps2pd
mov
test
pop
gs
daa
pop
add
push
mov
fildll
rcrl
in
inc
scas
iret
jle
into
and
insl
jecxz
fwait
movsl
lcall
or
pop
mov
arpl
mov
inc
jecxz
ja
cmc
bound
jo
movsb
mov
push
adc
pop
jecxz
mov
insl
nop
mov
faddp
xchg
lods
outsb
out
call
popf
mov
jp
pop
jns
push
out
jae
inc
iret
lods
icebp
jecxz
xchg
cmc
mov
inc
push
je
inc
push
fildl
push
es
jne
cmp
mov
ficompl
out
add
mov
sarl
iret
push
ds
jle
insb
adc
dec
cli
mov
aad
sarl
sbb
push
xor
mov
jno
mov
lahf
sbbb
mov
sti
iret
sahf
sbb
and
and
enter
psllw
shl
frstor
jns
test
adc
ficoms
cmp
jae
pop
les
pop
shll
or
dec
call
pop
cmp
xor
inc
dec
rcrb
push
dec
xchg
cli
cwtl
ss
in
fwait
lock
pop
in
nop
cmpsb
cld
mov
xor
jl
cmp
mov
push
pop
fildll
add
sbb
add
push
or
pop
xchg
push
cmpsb
xorl
cs
stos
mov
into
es
and
adc
mov
inc
dec
pop
push
hlt
inc
test
rclb
in
dec
mov
dec
test
loope
xor
cmc
std
fsubp
and
adc
and
xor
dec
pop
iret
or
mov
fbstp
scas
mov
aas
push
shll
xor
mov
xchg
xchg
cli
movsl
out
test
xchg
mov
pushf
mov
inc
and
push
shrd
leave
movsl
push
movsl
popf
push
sbbb
movsb
jge
push
mov
addb
push
xor
mov
pop
mov
push
push
sub
inc
or
jb
push
xlat
pop
mov
or
div
inc
shrb
test
aas
inc
mov
mov
ja
icebp
jp
inc
insl
add
jns
stos
lods
stos
aam
inc
pop
mov
xor
mov
cmp
decl
lret
shr
jno
jae
xchg
mov
in
cli
sbb
jbe
lret
into
popf
mov
mov
movsb
ret
and
xchg
daa
lret
cltd
pop
gs
inc
jns
dec
xchg
fcomps
mov
jbe
sub
jecxz
cmp
jge
xchg
jo
pop
scas
add
test
mov
cmp
int
jne
ret
inc
mov
cmp
shlb
cmp
ficoms
adc
mov
fwait
psubusw
jg
pop
ja
push
mov
mov
adc
inc
cmpsl
push
out
call
mov
dec
push
mov
loop
movsb
mov
test
pushf
and
adc
jo
xor
inc
sbb
ja
enter
push
or
aas
or
mov
aam
fildl
add
cmpsb
ret
arpl
sub
je
lahf
out
pop
mov
pop
jno
ret
dec
pop
or
lret
imul
jl
insl
cltd
sub
mov
in
loope
shrl
test
mov
pop
and
sarl
stos
pop
out
fstpt
add
pop
xchg
adc
fld
jne
std
xchg
jae
jbe
pop
jg
xor
jnp
insb
scas
cmp
add
or
jmp
push
test
fnstcw
dec
imul
cmc
fbstp
mov
inc
ja
jno
cmpsl
mov
pop
repz
fsubrp
mov
adc
jo
mov
outsl
and
fldt
stos
in
inc
aas
sbb
push
add
jnp
or
xchg
mov
popa
int
lcall
cmp
cli
sub
loope
sub
out
inc
adc
xchg
les
sbb
lds
dec
push
xchg
nop
test
nop
mov
xchg
rcl
jns
je
fcoml
mov
out
mov
xlat
repz
push
sbb
arpl
jo
call
sbb
leave
inc
ss
addb
outsl
add
out
fstenv
mov
jle
xor
movsl
das
add
dec
mov
iret
jmp
push
jecxz
cmc
fst
fidivl
cltd
out
pop
gs
mov
lods
mov
or
in
andl
fwait
icebp
mov
mov
adc
ret
imul
pushf
xchg
fucom
add
xchg
sbb
add
push
push
mov
xlat
sub
jmp
adc
pusha
push
sbb
rcl
mov
mov
aad
or
inc
shrl
into
jnp
in
mov
and
std
add
dec
hlt
popf
push
icebp
mov
dec
xchg
ds
lods
loope
xor
les
pop
adc
ret
cltd
lods
or
jg
adc
adc
lods
pop
in
pop
mov
mov
xchg
nop
cli
iret
dec
movsb
std
and
popa
loopne
cmpsl
ljmp
imul
cli
mov
cli
push
adc
cli
int
add
sub
xor
dec
out
ljmp
imul
sub
or
fisttpl
add
aad
test
enter
lret
cmp
mov
das
xor
dec
in
mov
add
mov
stos
ret
pop
mov
pop
in
mov
and
jmp
mov
push
or
sbb
std
adc
pop
mov
pop
outsb
mov
out
and
fwait
mov
out
xor
cltd
pushf
hlt
movsl
inc
lea
std
daa
pop
std
xlat
jmp
mov
sub
call
adc
pop
test
imul
decl
sbb
and
in
sti
sub
clc
xchg
mov
jne
es
pop
aaa
test
sti
insb
sbb
cwtl
psrad
cld
loopne
mov
daa
pushf
mov
lds
iret
jmp
jecxz
mov
imul
sbb
mov
aad
shlb
dec
push
ss
sub
lret
push
aas
arpl
cltd
xchg
je
sub
add
lcall
lcall
sub
in
aad
out
out
or
pop
jo
cmp
add
into
push
dec
push
leave
stc
jg
inc
fsubl
out
in
cmp
fnstcw
imul
hlt
cwtl
mov
dec
sbb
pop
jne
adc
jns
shll
aas
cli
andb
ljmp
pop
xchg
leave
test
push
rorl
int3
rcl
gs
mov
testl
add
add
lds
testb
sbbb
lds
sbb
or
xchg
pop
jmp
fs
lret
popa
push
mov
call
sti
insb
push
xchg
xor
jo
dec
rclb
jl
sub
shrb
int3
inc
adc
and
inc
aam
inc
adc
stos
jmp
lock
sarb
push
push
push
dec
je
aam
aam
adc
aam
je
out
inc
jb
jmp
add
hlt
fmuls
cmp
subb
cld
fsts
or
pop
idiv
push
inc
xor
sti
bound
cli
clc
xchg
push
cmc
push
xlat
rcrb
fstp
scas
les
pop
in
mov
out
or
push
dec
loope
mov
sbb
xchg
call
cmc
push
gs
clc
add
add
in
dec
sub
sbb
xchg
enter
rolb
push
mov
bound
fisubl
mov
fwait
pop
repnz
inc
jg
jne
dec
and
scas
xchg
std
mov
daa
mov
jno
call
inc
cmpsl
sbb
loopne
add
lahf
fnstenv
fistpll
ja
jne
cmp
cmpsl
adc
inc
incl
sub
mov
roll
repnz
fs
jbe
mov
jl
addb
xlat
out
orl
inc
dec
adc
ret
and
adc
lds
xor
mov
daa
jge
adc
cli
sub
clc
inc
and
lods
push
xchg
ficomps
lahf
jae
mov
sbbb
lock
loope
ss
shrb
or
mov
fcmovu
sub
hlt
push
sbb
mov
stc
call
inc
sub
jl
test
and
mov
testb
pop
ljmp
cmp
xor
mov
testl
add
sbb
test
and
stc
fisubl
dec
mov
or
orb
or
mov
out
test
inc
dec
xchg
jnp
or
mov
dec
xor
pop
out
repz
pop
testl
dec
lds
xor
aad
dec
lret
cld
imul
sbb
shrb
bound
dec
xlat
ss
and
js
pop
and
mov
js
push
mov
enter
bound
andb
push
test
cmp
int
or
repz
into
push
out
inc
fcmovne
push
repnz
pop
es
mov
sub
fiaddl
mov
mov
add
mov
mov
add
dec
out
pop
aam
jecxz
ja
or
jecxz
mov
jmp
leave
movsl
pop
sbb
pop
lret
fiaddl
sahf
pop
dec
xchg
xchg
dec
ficompl
pop
mov
xchg
sbb
add
and
add
pop
movq
test
adc
aaa
mov
xchg
mov
lret
xor
add
sbb
add
mov
mov
cmpsb
pop
sub
mov
add
scas
sarb
xor
mov
gs
jno
mov
inc
mov
fmul
sbb
push
add
xor
pop
ja
je
and
xor
in
xchg
dec
mov
mov
movsl
adc
lock
pop
push
xor
nop
rcll
jge
gs
addl
inc
outsb
add
mov
jbe
pop
mov
call
lahf
push
fildl
in
cmpsl
imul
sbb
loop
jnp
rorb
lgs
mov
push
imul
imull
les
bound
push
adc
repnz
lea
sarb
xchg
mov
js
mov
movsb
mov
mov
clc
mov
mov
push
scas
call
add
les
cmpsb
push
xchg
insl
xlat
add
aaa
mov
adc
add
cli
fcmovbe
fstps
out
ss
cli
push
xor
cmp
lods
cmp
mul
xor
add
inc
in
imul
dec
mov
ret
scas
scas
jp
pop
rolb
push
or
xchg
push
mov
or
and
mov
inc
mov
or
dec
push
mov
mov
ja
ficoms
popa
insl
jg
cmp
dec
mov
fidivrl
add
add
sub
inc
cmpsb
xchg
and
cmpsb
cmp
int3
call
sbb
stc
andl
data16
cli
add
adc
lea
mov
mov
cltd
mov
xor
into
mov
jge
mov
add
test
outsb
test
xor
outsl
test
inc
pop
mov
jl
adc
imul
cmp
fs
inc
jns
lea
or
les
pusha
sub
outsl
sbb
and
in
mov
movsb
aas
sub
jmp
je
xchg
fwait
popf
dec
inc
cmp
mov
test
fists
lahf
sub
aaa
pop
mov
aad
jecxz
xlat
iret
dec
or
jne
or
cmp
adc
aad
cmp
inc
call
in
push
sub
jg
push
adc
push
pop
xchg
mov
sub
dec
pop
push
insl
push
inc
enter
fs
xchg
dec
ljmp
lret
pop
fs
sbb
insb
lret
jmp
int
xor
inc
xlat
data16
jmp
adc
add
ss
pushf
mov
in
mov
insl
dec
fdivs
sarl
rclb
bound
adc
or
or
pop
out
inc
push
rcrl
sbb
mov
sbb
mov
movsl
cmp
test
lret
sbb
adc
inc
repz
cmp
or
fisubrs
inc
push
insl
shlb
lds
call
sbb
sbb
jecxz
sahf
out
mov
dec
decl
or
adc
pop
xchg
mov
out
push
sbb
inc
outsb
adc
inc
mov
pop
dec
add
pushf
push
mov
cmc
sbb
inc
outsb
ret
popf
or
ss
ucomiss
push
jo
or
fcoml
aam
mov
push
or
mov
jl
and
jb
test
mov
mov
cltd
icebp
mov
mov
fmull
push
and
int3
repnz
fiadds
adc
mul
mov
pop
mov
cmpsl
mov
mov
jle
push
mov
insb
push
inc
xchg
xlat
or
test
pop
leave
into
push
xchg
add
mov
mov
xor
add
push
lock
pop
sbb
sarl
movsb
stos
out
sbb
test
pop
aas
adc
mov
mov
inc
mov
clc
scas
lock
test
pop
cmp
mov
jecxz
sarl
loop
push
push
mov
jge
xchg
cmp
enter
clc
jnp
jge
cmp
int3
fcomps
and
das
pusha
pop
lea
outsb
adc
cmp
pop
sbb
xchg
popa
push
or
call
inc
sarl
mov
pmulhw
push
or
test
xor
add
lds
inc
lahf
ja
add
lock
add
adc
mov
mov
ljmp
mov
or
adc
inc
dec
xor
cltd
push
rcr
mov
mov
arpl
mov
out
jne
lret
repnz
adc
fbld
mov
mov
add
and
inc
in
dec
fimull
sarb
js
andl
lret
sahf
push
fisttps
lret
and
iret
add
mov
jbe
jecxz
cld
loop
mov
clc
int3
loope
adc
in
icebp
push
addl
icebp
loop
inc
push
push
xor
push
push
jb
inc
rcll
mov
add
jbe
sar
cmp
mov
sbb
mov
mov
fidivrs
xchg
and
push
xor
or
xabort
fstp
xchg
ficompl
mov
daa
enter
int3
pop
or
pushf
push
mov
adc
movsl
xlat
clc
rcrb
popa
sbb
mov
addr16
xchg
aad
xor
data16
cld
insl
cld
aas
pop
cmp
inc
sbb
imul
jp
fs
dec
paddsb
add
in
push
inc
jno
test
cmpsb
sahf
stos
mov
mov
xchg
roll
rcrb
addb
int
and
cmp
lahf
xor
es
sub
enter
and
mov
rorl
scas
sbb
les
insb
dec
xchg
pop
test
sub
stos
mov
rcl
pop
sbb
sub
pusha
push
xchg
out
add
jno
add
decl
or
loop
cmc
ja
jb
iret
test
repnz
mov
in
int3
jmp
call
js
adc
movsl
fwait
arpl
test
push
push
dec
jge
jb
sub
jbe
push
fiaddl
inc
movsbl
mov
inc
popa
negl
sarl
push
fs
inc
dec
xchg
xchg
flds
shl
add
push
xchg
jg
pop
fmul
inc
adc
shld
and
insl
sbb
lea
hlt
lods
daa
rolb
xor
sub
aas
pop
mov
xchg
pop
adc
ljmp
pusha
xorl
or
adc
scas
inc
dec
dec
or
mov
neg
out
add
cmp
roll
cwtl
sbb
daa
xor
mov
stc
js
ds
arpl
inc
cmpsl
das
pop
mov
xor
cmovae
mov
cltd
sti
cmpsl
xchg
ret
xchg
cmp
mov
and
push
sub
insb
xchg
loopne
mov
push
das
xchg
invd
sub
test
push
lds
sub
cmp
mov
xlat
stc
dec
sbb
xchg
movsb
adc
insb
cltd
sbb
sub
or
jge
xchg
push
lock
into
adc
inc
jno
pop
in
mov
xchg
test
or
xchg
ficoml
addl
sbb
push
xchg
push
xor
popf
xchg
sub
add
pextrw
fdivs
push
outsl
pushf
dec
jbe
ds
rcll
sub
adc
addr16
sbb
push
add
insl
xor
dec
pop
sar
sbb
cmp
hlt
mov
rorb
inc
mov
movsl
pushf
xor
call
jb
repnz
dec
lcall
add
jb
sub
inc
cmpb
into
les
lods
into
in
loope
mov
imulb
lret
xchg
out
mov
negl
xor
pop
push
mov
ficoms
aam
test
negb
rcl
icebp
mov
or
add
outsl
orb
push
mov
mov
stc
lret
dec
jnp
mov
rcr
push
cld
movsb
mulb
jl
mov
add
inc
pop
mov
decl
mov
push
mov
stc
jnp
sti
push
fldenv
js
loopne
and
aad
dec
outsb
pop
jbe
outsl
mov
xlat
outsb
and
sub
lcall
xor
subl
jp
in
push
je
mov
cs
and
icebp
xlat
icebp
xchg
or
jae
das
dec
fsubl
or
push
and
xchg
movsl
cmp
sbb
add
add
imul
jg
pop
dec
xchg
mov
sbb
fistpll
jo
dec
test
mov
inc
std
iret
pop
add
ret
mov
sti
pusha
leave
andb
xchg
outsl
mov
icebp
stc
mov
mov
das
inc
lret
jo
add
push
popa
incl
ret
enter
jge
dec
lods
stos
lea
jne
insb
inc
pop
dec
or
je
data16
cmp
sbb
dec
gs
movsl
sti
repz
mov
push
pop
xor
add
jg
xor
adc
inc
leave
js
pop
subl
daa
insb
mov
inc
ret
int
fs
out
push
pop
push
mov
rcrl
repnz
cmp
outsl
push
into
jle
mov
push
test
sub
or
les
fsubp
cmp
jge
push
stos
mov
test
sbb
test
arpl
mov
aam
or
pop
mov
stos
lret
sub
adc
jg
ret
fistpl
xchg
lea
mov
mov
scas
orb
kortestb
idiv
rcll
mov
int3
xchg
movsl
cmp
cmc
pop
cmp
stos
sarl
add
fwait
add
nop
out
adc
aam
lret
out
not
cmp
fwait
es
dec
add
push
clc
lahf
insb
dec
insb
jmp
sbb
fisubl
in
lret
xchg
pusha
cwtl
cmp
mov
rorl
sbb
sbbl
mov
add
xor
in
cmpsl
sub
or
lock
out
lods
daa
dec
inc
repz
add
cld
add
lret
lret
push
dec
mov
ja
pop
dec
lds
mov
pushf
mov
rorb
xchg
push
mov
pusha
xor
gs
je
xor
cmp
pusha
mov
bound
sbb
mov
xchg
xchg
xchg
cmp
int
xchg
push
lea
push
mov
sub
or
sbb
xor
sbb
out
mov
mov
mov
xor
xchg
add
adc
gs
add
cmpsb
loope
and
sbb
ret
add
sub
dec
xchg
mov
int
mov
or
jge
fsubl
jle
push
test
push
sub
sti
dec
dec
cmp
dec
add
sbb
sbb
pop
repnz
add
sbb
xor
mov
cmp
enter
jl
stc
imul
xchg
inc
gs
lret
lret
xor
or
out
pop
enter
inc
xchg
or
hlt
fwait
int
es
into
dec
add
out
test
jl
callw
bound
fs
pop
arpl
xchg
sahf
push
fstl
cwtl
adc
push
xchg
and
sti
lahf
iret
add
inc
add
xorl
push
jge
jbe
or
stos
jecxz
jecxz
dec
and
hlt
pop
sbb
ret
lahf
mov
or
xor
scas
data16
dec
mov
and
or
jb
sbb
inc
icebp
xor
in
test
mov
cmpsl
jp
jbe
arpl
xor
stos
mov
insl
mov
stc
call
push
xor
cli
in
and
adc
nop
ljmp
sub
mov
jecxz
xchg
push
xchg
and
movsb
and
aaa
xchg
mov
xlat
scas
add
and
lock
inc
jns
cmp
daa
fadds
cltd
shrl
inc
and
inc
stos
cmp
clc
push
mov
subb
add
outsl
sbb
scas
sub
ds
jmp
call
adc
or
xor
dec
mov
mov
test
sbb
and
and
mov
dec
js
xor
xchg
jge
loopne
popf
test
fcoms
lods
or
test
mov
leave
sbb
pmaxub
push
cmp
out
dec
hlt
xchg
inc
push
pop
mov
push
push
fldl
pusha
or
fldcw
fisubrs
popf
sbb
jno
pop
call
add
fidivs
loope
cmp
sbb
lret
ljmp
jge
push
add
ror
sub
pop
mov
popf
daa
dec
sub
inc
xchg
lock
test
rcrb
jae
mov
jbe
or
mov
aaa
sub
cld
or
mov
cmc
mov
sbb
in
loopne
and
pop
sub
dec
arpl
pop
repnz
enter
data16
rcrb
int3
cmpsl
mov
scas
in
insl
push
rorb
in
adc
in
out
or
xchg
fbstp
loopne
imul
scas
pop
loopne
and
mov
lcall
popf
push
and
mov
lods
mov
nop
push
jno
popf
movsl
jl
adc
sbb
outsl
dec
in
shl
je
adc
and
aaa
ljmp
sahf
lds
in
int
dec
pop
xor
push
or
clc
cli
fildll
add
and
mov
jp
jecxz
inc
push
pop
jmp
ljmp
out
pushf
insl
pushf
jl
rclb
in
es
pushf
xor
stc
push
sub
adc
xchg
add
adc
fiaddl
das
divl
cmc
ljmp
and
mov
inc
cmc
mov
xor
mov
push
fstpt
inc
dec
fbstp
fdivrs
rol
scas
pop
pop
sbb
or
sub
xchg
xor
lods
insb
subb
in
pop
pusha
arpl
popf
pop
or
stc
mov
cmc
addr16
test
cmp
call
outsb
sbb
arpl
test
dec
in
dec
cmp
push
pusha
shlb
xchg
in
push
mov
mov
sub
pop
stos
sub
sti
aam
inc
dec
jle
ja
add
mov
cmp
cmpsl
adc
pop
sbb
repnz
pop
mov
arpl
jg
mov
and
jbe
add
stc
dec
aad
pusha
xor
sbb
ret
in
fs
cmpb
mov
jp
scas
or
test
aas
and
push
lret
push
cmp
out
lods
and
das
sbb
ficoms
int3
mov
test
fisttps
sahf
lret
stos
add
sti
inc
add
xor
outsl
and
jne
or
subl
shr
mov
in
mov
xor
shr
cmp
aaa
data16
sbb
outsb
cmp
lods
lcall
dec
or
jl
stos
cmpl
les
or
inc
xchg
mov
ret
pop
fsubrs
pop
imulb
fmull
imul
in
femms
int
jbe
push
fistps
int
outsb
add
mov
shl
jp
and
outsl
ficomps
adc
xor
mov
jle
cmpsb
test
and
lock
sub
and
in
iret
adc
xor
xor
lock
jae
lahf
pop
cmp
in
jmp
and
mov
setno
mov
fstps
loopne
fcomps
add
mul
sub
adc
mov
jne
sbbb
push
ret
loope
xor
lock
push
inc
inc
stos
add
cmp
testl
fdivrl
aas
iret
push
in
lret
jo
jmp
xlat
pop
mov
in
push
shll
cmp
adc
xchg
test
shr
pop
in
mov
sbb
cmpsl
xchg
scas
jge
in
add
sbb
das
lcall
jns
fldt
icebp
orb
and
ss
adc
or
mov
or
mov
adc
arpl
mov
lret
dec
test
std
movsl
jecxz
xorl
mov
dec
pop
cmp
rcrb
push
subl
fucom
sbb
mov
out
xor
sar
fnstcw
inc
push
les
add
int3
inc
push
das
and
dec
cmp
rclb
ja
sub
pop
mov
std
cltd
add
test
jg
flds
sbb
cs
mov
negb
mov
mov
push
scas
dec
flds
addr16
jge
cmp
push
int
rcrl
icebp
or
ret
roll
aad
paddb
daa
cld
mov
and
push
mov
psrlq
jnp
mov
fldenv
push
mov
and
inc
add
clc
sub
jo
and
lds
push
dec
push
rcrb
jae
adc
lcall
inc
and
mov
sub
mov
popa
pop
lret
fwait
dec
pushf
mov
sub
push
fistpl
pop
add
jl
dec
bnd
outsb
sbb
jns
fdivr
jbe
je
xchg
sahf
movsl
adc
mov
xchg
sbb
fwait
insb
xchg
or
aas
pop
call
pushf
stos
stos
cltd
xchg
cltd
pop
sub
rcrl
inc
fcompl
jg
mov
fbld
cs
rorb
popa
nop
pusha
jle
sub
divb
mov
mov
mov
mov
ja
xchg
leave
fstpt
das
jae
xchg
sbbl
mov
sub
es
das
in
sbb
mov
divb
test
inc
mov
fcoml
mov
mov
fimull
xor
sub
aad
push
inc
loop
xchg
test
jne
mov
and
jae
push
adc
or
enter
in
movsb
jle
nop
icebp
or
stc
pop
adc
imul
and
into
sub
popa
in
fistpll
ss
jle
xchg
adc
xor
sbb
out
loopne
push
pop
mov
pop
lcall
mov
mov
dec
scas
push
fcoml
in
or
push
add
xchg
pusha
out
pop
mov
jp
xor
fdiv
mov
fs
pop
fbstp
add
rorl
mov
aas
mov
mov
lods
lock
add
push
push
inc
and
xor
pop
xor
loop
jne
jg
push
adc
mov
test
push
adc
dec
pop
js
mulb
xor
mov
xchg
inc
fnstsw
mov
add
add
cli
cmp
mov
arpl
sbb
mov
push
jmp
mov
xchg
dec
xor
nop
and
test
pop
add
dec
fisubrl
enter
add
outsb
loope
inc
mov
push
ret
sbb
inc
xor
cmc
cli
and
fwait
arpl
mov
iret
int3
dec
push
xchg
cwtl
mov
aad
fbstp
adc
fnop
add
adc
mov
call
shll
aad
test
push
test
jmp
push
xchg
xchg
cmp
mov
add
pusha
cmp
mov
lret
pop
in
negl
in
push
jno
and
loop
mov
mov
jb
into
pop
loope
fidivrs
sbb
aas
repz
add
inc
push
in
das
cwtl
daa
into
push
inc
inc
push
repnz
and
sbb
xor
insl
jns
xchg
mov
les
cli
aas
fmul
insb
in
gs
icebp
mov
test
loope
pop
cmpsb
jae
or
sub
push
mov
mov
enter
stos
cs
dec
inc
mov
imul
and
add
mov
and
xchg
sbb
sbb
ja
pop
and
out
cld
cmpsb
pop
mov
aaa
push
cli
inc
and
mov
jmp
sbb
pusha
ret
icebp
aam
inc
sub
cmp
fisubrl
daa
ss
jl
sub
inc
into
push
or
out
adc
iret
movsb
xchg
imull
add
pushf
out
in
movsl
idivl
inc
inc
jne
cmp
push
add
jns
dec
int
inc
xchg
mov
rcll
push
push
aam
addl
pop
js
or
mov
push
xor
rclb
jge
push
andl
outsb
jae
xor
mov
mov
imul
lds
dec
inc
dec
fnsave
jb
cmp
clc
mov
xchg
adc
into
cmpsb
lods
mov
jecxz
mov
test
xchg
add
cmp
sbb
andl
pusha
loope
xlat
dec
movsb
out
test
movsl
adcl
jecxz
hlt
int3
in
mov
ret
filds
test
or
xor
sti
js
scas
push
push
cld
in
sub
pop
jo
fsubs
dec
loope
sahf
ds
push
xchg
or
sub
aas
sbb
rclb
jmp
dec
icebp
jno
xchg
out
dec
bound
sbbb
jle
add
mov
xlat
cmp
addr16
stc
dec
fistpll
mov
sbb
cmp
or
movsl
lods
daa
cmc
inc
stos
int
inc
jne
clc
ret
cli
loop
jmp
lcall
jp
out
dec
fistps
pop
lcall
mov
movsl
pop
fbld
stos
jmp
xchg
scas
mov
and
or
pop
lds
jl
xchg
mull
cmp
or
or
mov
add
stos
push
imul
sub
sbb
dec
ss
mov
outsb
mov
push
adc
test
shlb
stos
cmpsb
push
xchg
lret
dec
or
loopne
jns
outsb
out
mov
xchg
popa
fdivr
je
rorb
adc
ret
mov
push
xchg
sbb
in
or
sub
xchg
fucom
xor
xor
pop
push
adc
push
mov
jno
sti
push
or
and
jp
roll
add
js
lods
mov
aas
call
hlt
and
pop
pusha
mov
mov
test
fldl
mov
sub
test
cli
add
or
sbb
add
cmp
dec
hlt
lea
and
sbb
ljmp
add
pushl
shl
inc
jp
jl
mov
or
push
push
pop
test
int3
lcall
or
inc
cmp
fbstp
cmpsb
ror
fisttpll
cmpsl
pop
xchg
mov
clc
cmpsl
add
jno
and
sbb
imul
mov
fwait
push
lcall
popa
icebp
out
je
mov
cmpsl
jg
jp
pop
hlt
rclb
cld
cmpsb
push
dec
sbb
adc
loopne
outsb
or
sbb
push
imul
add
push
adc
shl
or
mov
fsubs
jg
jp
xor
ss
test
mov
pop
pop
dec
addr16
adc
fcompp
data16
addl
ret
imulb
dec
dec
mov
stc
mov
xor
pop
stc
cmpsb
testb
mov
sub
mov
pop
and
cmc
js
mov
movsb
lods
test
sub
je
push
pop
fildl
lods
add
jecxz
mov
arpl
mov
out
cmp
imul
mov
jl
decb
inc
jae
loopne
ret
pop
lcall
pop
jne
sbb
pop
push
or
popf
inc
jmp
test
cmp
ljmp
orl
sbb
out
cs
mov
movsb
push
scas
push
loope
or
mov
sti
or
ljmp
sbb
push
testl
sbb
and
test
xlat
mov
mov
stc
leave
xor
cmp
lahf
or
sub
mov
and
sub
cmpsl
xchg
add
sub
pushw
cmp
xchg
xorb
push
fldenv
add
orl
cli
pop
and
gs
sbb
movsb
push
gs
stos
sbb
arpl
or
sahf
sbb
pop
xchg
adc
adc
adc
xchg
insl
in
dec
out
lds
popa
add
mov
mulb
test
cmp
loop
fisubrs
stos
fidivs
adc
faddl
lock
push
ja
mov
inc
xchg
or
fcmovu
xor
jae
gs
dec
fsubrs
fcmove
shrb
mov
ret
ds
pop
and
in
sahf
orl
lock
shll
adc
and
push
jae
jl
fcoml
scas
jge
push
cli
cmp
or
mov
out
mov
add
fwait
dec
arpl
lahf
sarb
into
or
or
stc
lret
hlt
mov
inc
push
vaddsubpd
rolb
call
lahf
les
stc
mov
pop
dec
push
xlat
call
out
fldt
int3
repnz
sbb
cmp
sbb
jmp
cmp
mov
jmp
stc
jne
movsl
daa
inc
mov
lret
mov
jmp
mov
addl
pop
in
xor
push
or
orb
push
popl
lret
push
subb
and
fwait
cmc
xor
dec
mov
jecxz
inc
test
or
addr16
adc
shl
push
pop
iret
or
in
rol
inc
sbb
sbb
push
inc
lds
jno
inc
xchg
fwait
ret
add
scas
push
movsl
loopne
sarl
rclb
stc
mov
rcr
lcall
nop
mov
and
imul
cmp
aad
fldenv
sub
loop
adc
popa
pslld
sbb
gs
jecxz
mov
inc
aam
mov
repz
fcoml
fsts
lock
andb
stc
cli
cmp
roll
ja
push
outsl
mov
jle
mov
push
cli
imul
repnz
faddl
mov
lods
adc
or
sbb
sbb
imull
pop
sub
adc
mov
pushf
add
cmp
cli
pop
ret
rcll
mov
and
adc
or
sbb
xchg
or
loope
mov
test
clc
jns
adc
outsb
clc
mov
lds
mov
mov
inc
mov
mov
push
data16
push
stc
dec
stos
in
jmp
sub
xor
fcmovbe
popa
movsb
pop
mov
mov
out
ficoml
test
push
cmpsb
orl
cmp
outsl
push
and
jmp
add
leave
inc
test
dec
rcrb
in
clc
es
fiaddl
push
cpuid
imul
mov
or
ds
das
arpl
adc
mov
int
arpl
mov
mov
adc
fsubrl
lahf
adc
mov
cmp
or
test
xor
dec
mov
cltd
inc
cltd
stos
rcrl
test
adc
enter
mov
dec
mov
lods
or
out
mov
hlt
jnp
hlt
call
adc
cmp
lcall
xchg
nop
test
pop
repz
sub
mov
fucom
ss
fs
test
test
fisubrs
stos
jo
cmp
movl
out
int3
dec
jg
jge
sub
xlat
adc
insl
jnp
pusha
insl
and
adc
cld
push
mov
mov
adc
sub
pop
cmp
repnz
aad
sbbl
out
pusha
pop
gs
jno
xchg
cmc
out
jns
pop
or
scas
cmpsl
push
pmaddwd
dec
or
sub
sub
bnd
xor
mov
ljmp
sub
leave
loope
inc
outsl
pusha
ret
fs
dec
in
and
xchg
adc
sarl
dec
jae
outsb
add
fcoml
rclb
loopne
popf
jo
call
jecxz
lahf
sbb
cvtdq2ps
xlat
popf
pop
test
jle
xchg
push
sub
or
fs
fstl
out
arpl
lcall
sahf
mov
movsl
xor
test
inc
mov
fsubrl
pop
stc
and
je
jle
cmp
jp
or
dec
dec
insb
xchg
fsubp
mov
int3
scas
stos
and
sub
icebp
cli
push
rorb
cmp
insl
scas
ret
inc
dec
and
inc
jmp
jb
push
jmp
aas
cmp
in
inc
daa
and
add
add
jne
cmp
pop
mov
cmpsl
lock
xor
fs
mov
push
ucomiss
stos
add
ss
pop
push
mov
dec
aas
dec
mov
clc
push
mov
stos
cmp
jg
addr16
stos
jbe
mov
dec
lock
ret
sti
adc
push
mov
clc
and
fstpl
pop
push
rorb
pop
aas
push
add
aad
bound
es
shl
jne
ror
outsb
lock
sub
stc
movsb
or
aas
xor
inc
icebp
gs
je
sbb
mov
xor
shll
xor
mov
cld
xchg
dec
lret
in
or
xor
inc
jmp
ds
jl
sbb
jg
test
inc
or
fidivs
pushf
pop
sub
lret
cmc
dec
ja
sbb
bound
dec
fldcw
mov
jp
out
stc
xor
gs
cmc
fnstsw
out
jg
fwait
imul
cmp
mov
push
push
sarb
jo
int
pushf
xchg
incl
push
xchg
cld
in
and
fcmovnb
pop
pusha
call
and
mov
std
das
add
sti
pop
push
mov
cmpsl
mov
inc
lret
or
and
sahf
mov
push
test
jnp
push
das
cmp
inc
rol
je
sahf
sbb
sbb
pop
scas
push
xor
mov
sarb
pop
loopne
mov
push
je
and
or
cltd
test
add
cmpsb
dec
cltd
pop
sbb
xchg
and
sti
int3
push
xorl
push
daa
mov
cld
pop
aas
cmp
rcrl
shrl
cmp
adc
shl
inc
in
scas
data16
and
lret
stc
cmp
test
aad
mov
cmpsl
aas
daa
sahf
jnp
pop
cmpsb
sbb
cmc
ret
mov
mov
pusha
inc
xor
cli
daa
pusha
jmp
int
leave
or
add
lods
shll
add
fwait
cmp
xor
cmpsb
cli
cld
daa
rolb
sahf
push
sbb
addr16
xor
inc
pop
mov
into
scas
bound
pop
sbb
pop
bound
adc
mov
sahf
mov
xchg
add
imul
dec
lret
add
loopne
jb
clc
roll
imul
popf
inc
pop
add
test
or
call
sub
pop
dec
mov
push
mov
shlb
add
das
adc
and
stc
adcb
jl
and
jle
lock
ret
jge
mov
enter
sahf
ja
test
add
out
add
shlb
xchg
mov
push
xor
jns
iret
dec
adcl
adc
test
rorl
scas
mov
mov
xor
push
int
aam
loopne
or
push
jo
outsl
dec
popl
sub
shl
mov
xor
aad
sub
jmp
out
sub
cmp
clc
jg
movsl
repnz
les
ret
cld
rcrl
or
dec
cmpsl
fisubrs
andb
or
sbb
mov
add
jns
inc
rcrl
rcll
add
or
push
pop
jge
fs
testb
xlat
stc
or
lock
std
push
notb
imul
arpl
jecxz
ds
jmp
sbb
cmc
jmp
les
and
jns
xor
pop
ja
pop
outsl
je
aad
or
mov
or
arpl
repnz
out
addr16
lods
adc
fisubrl
mov
loopne
lods
cmp
insl
imul
in
std
inc
push
or
je
or
dec
outsl
je
fsubrs
les
imul
adc
and
xor
inc
sbb
or
adc
dec
fidivl
pusha
popf
add
icebp
mov
out
nop
gs
push
mov
xor
mov
test
enter
push
stos
pop
jo
stc
sti
cmp
leave
leave
adc
sub
sbbl
sub
dec
fstpl
jle
clc
pop
test
xor
xchg
push
sub
rcll
sbb
mov
jle
mov
mov
arpl
inc
dec
pushf
bnd
scas
andl
or
std
mov
jbe
xchg
mov
mov
mov
cld
push
popf
jns
jle
or
jge
leave
movsb
fwait
sbb
dec
into
pusha
pop
push
xchg
jns
xchg
fwait
pop
sti
cmp
and
ljmp
int
repz
jbe
cmp
dec
xor
movsl
xchg
mov
and
js
xor
test
in
sub
pop
push
xlat
jp
jb
add
mov
pop
add
rorl
xchg
fucomp
xchg
adc
ss
mov
mov
pushw
mov
in
call
out
add
mov
dec
push
fldcw
or
es
add
int
jp
sub
push
mov
fwait
in
loop
rorb
push
sbb
push
repz
push
fsub
popf
lds
or
cltd
sub
arpl
mov
arpl
pop
push
add
fmull
and
xchg
cltd
fldcw
xlat
pop
lcall
test
cmp
xchg
and
mov
cmp
andb
addb
jae
rcl
xor
bound
sarb
inc
mov
mov
mov
inc
lods
mov
mov
ljmp
arpl
adc
fs
mov
stos
add
popf
pushl
ret
add
pop
arpl
sub
mov
mov
frstor
loopne
fs
fwait
shl
orb
cltd
and
push
xorl
cli
jbe
and
loope
into
test
sbb
stc
pop
fildll
ffreep
fstl
movb
loop
dec
mul
fisubl
mov
repz
push
mov
xor
inc
adcb
inc
push
push
mov
jae
and
popa
sbbb
mov
cmc
outsl
pop
das
dec
jmp
inc
jnp
mov
sub
fsubr
in
jmp
add
arpl
or
xchg
xchg
xor
shl
enter
scas
gs
mov
sbb
pop
mov
icebp
inc
mov
mov
pushf
push
jnp
popa
mov
fmulp
jl
adcl
loope
mov
subb
cs
mov
push
inc
scas
inc
adc
add
add
sbb
mov
orb
cmpsl
data16
pop
call
insl
arpl
bound
jns
pusha
imul
outsl
sbb
xor
out
in
pop
xchg
dec
mov
jmp
sub
fiaddl
das
filds
push
mov
les
filds
ret
dec
mov
inc
jae
or
ficompl
push
out
pop
pop
lahf
call
adcl
call
fcoml
sahf
sub
sub
xchg
add
xor
mov
cli
sub
push
stc
sub
mov
sub
add
subb
lret
bound
stc
mov
sarb
popf
inc
mov
lea
imul
out
ret
add
inc
add
ds
inc
cli
mov
pop
incl
adc
or
lret
adc
gs
xchg
mov
xchg
call
adc
int
add
out
push
add
jb
add
rcrl
aad
fstl
jmp
test
rcrl
mov
mov
mov
cmc
enter
inc
incl
lds
out
mov
cmp
data16
lea
pop
lahf
mov
test
in
xchg
or
xor
mov
stos
and
int3
mov
out
xorl
cmpsl
push
cmpsb
mov
fucomi
mov
out
ficomps
bound
mov
pop
push
cmpl
push
inc
iret
rcrl
sbb
xchg
adc
orb
mov
mov
insl
push
loopne
and
stc
push
cld
push
jmp
fdivs
daa
jge
push
inc
add
xorl
and
repz
jmp
loopne
sarb
mov
mov
xchg
pushf
and
dec
movsl
in
das
cld
in
adc
daa
add
xchg
std
jae
dec
mov
sbb
ss
pop
test
pushf
stos
enter
mov
test
ss
nop
aaa
sub
insl
test
xchg
mov
scas
hlt
ljmp
push
cmp
sti
mov
push
mov
add
mov
and
lods
dec
gs
adc
rcr
rclb
xchg
dec
scas
in
ss
xor
ds
dec
mov
clc
lahf
sarb
push
aaa
dec
or
cmpsb
es
sub
subb
iret
fdivr
js
cwtl
xor
mov
cmc
shrl
outsl
fnstenv
jmp
inc
js
movl
xor
ret
fdivl
pop
pop
leave
push
subl
fcomps
frstor
dec
hlt
and
sbb
sub
call
xchg
shr
xor
call
inc
cmpsb
js
inc
and
insl
je
fldt
in
mov
adc
add
ret
jno
mov
sbb
pop
push
mov
inc
or
mov
dec
and
dec
jae
outsb
mov
push
les
xchg
push
mov
into
into
out
std
dec
sub
xchg
jl
xchg
or
lds
js
lret
arpl
les
or
repz
stc
pop
sbb
mov
lahf
push
arpl
fwait
orl
rcrl
sti
cld
mov
jl
jecxz
imul
enter
mov
jae
int
rcrl
push
pusha
and
xchg
pop
cmp
fs
jle
cmp
xor
repz
lods
je
loop
add
into
push
adc
xchg
lret
test
dec
adc
dec
jge
in
in
jmp
xchg
aaa
repz
loop
dec
rcr
leave
bound
enter
gs
dec
aam
cmpsl
xor
pop
je
and
xchg
ret
add
push
iret
hlt
ret
rclb
xchg
cmp
jle
dec
les
aaa
arpl
icebp
add
xchg
sahf
fs
pusha
lds
and
div
test
mov
loopne
pop
and
mul
jne
icebp
cmp
push
lods
mov
mov
mov
dec
push
aas
fists
sub
negb
loop
add
in
push
jmp
jl
jmp
adc
pop
repnz
sub
cmpb
adc
cmp
mov
jp
cmp
in
pop
sbb
fcomps
jns
fwait
movsl
xor
sub
xchg
jb
jno
jns
xor
xchg
mov
sub
into
cmp
cmp
mov
fcmovnbe
xchg
fidivrs
std
or
dec
push
inc
mov
dec
sbb
mov
xchg
test
test
in
mov
xchg
or
data16
adc
bound
aam
sbb
xchg
and
xor
sub
cmp
rclb
rorb
and
cld
repnz
pop
jl
mov
or
aad
mov
popa
mov
nop
xchg
xchg
test
xchg
arpl
shrb
les
lret
lahf
scas
adc
outsl
cld
movsb
stos
mov
ljmp
adc
imul
fs
add
push
cli
xchg
add
or
or
ss
fimull
pop
sahf
fdivs
and
mulb
iret
movsb
adc
loop
push
push
cmpsb
push
push
cmp
xchg
clc
cmpb
cmp
comiss
adc
sub
inc
sub
clc
xchg
sbb
jbe
or
add
xor
icebp
sahf
lahf
mov
mov
mov
sub
aas
roll
xor
xchg
fucomp
dec
daa
shl
lret
rorb
lock
sahf
iret
cmp
add
mov
push
adc
push
cmc
adc
clc
push
inc
dec
sub
mov
xchg
fdivs
cli
pop
inc
xchg
sub
xor
test
in
jecxz
hlt
cs
push
insb
add
outsl
dec
dec
stos
inc
add
sbb
and
push
adcl
loop
aam
mov
lahf
adc
sarb
das
shrb
dec
lods
jp
push
sbb
scas
ret
inc
dec
xchg
in
fsubr
rorl
repz
dec
das
pop
gs
push
call
jecxz
jg
adc
call
mov
xor
nop
xchg
or
mov
xlat
xor
call
in
sbb
mov
call
imul
dec
fcom
xor
test
mov
mov
dec
clc
jl
movsb
out
cmc
shr
inc
pop
imul
adc
sar
pop
add
arpl
loope
movsb
insb
clc
jg
dec
mov
idivl
sbb
lea
add
push
xchg
and
cltd
sub
fisttpl
jp
add
mov
xor
sub
mov
xor
sbb
int3
mov
test
xor
or
mov
test
cwtl
aad
movsl
jnp
scas
xchg
sub
in
popf
mov
xchg
mov
in
aam
jp
cmpb
add
mov
mov
fiaddl
scas
fcompl
xor
pop
push
jns
andb
pop
ret
xchg
call
push
xor
pop
sbb
sub
daa
sub
or
adc
daa
in
add
movsl
sub
push
ds
xchg
es
ret
imul
aad
fisubs
sar
fsubrs
inc
xor
xchg
popf
cmp
dec
push
cmp
xor
cld
out
test
nop
ds
fcmovnu
fld
lret
int3
ljmp
bnd
ret
cmpsb
in
sbbl
gs
std
test
popf
push
arpl
out
cmc
sbb
cmp
test
jle
mov
cmp
imul
mov
fdivrs
fcmovne
xor
push
adc
das
and
daa
sbb
lock
push
push
mov
lock
shll
push
adc
fwait
adc
inc
data16
cmp
jmp
bound
mulb
pop
icebp
or
jb
dec
fdivrl
sbb
mov
stos
push
mov
ret
cs
test
sarb
or
rorb
fdivl
dec
gs
pop
mov
jb
test
jo
mov
cli
adc
xchg
jns
jo
cli
fucomp
dec
test
cmp
and
xchg
push
sub
lock
inc
gs
jge
mov
jae
push
shll
aas
insb
loopne
push
imul
cs
loope
js
or
push
dec
into
pop
fdiv
out
xor
xor
outsl
roll
aam
xchg
aam
test
sarb
xchg
aad
fldt
dec
scas
scas
sub
fidivrl
lods
lret
jb
and
and
mov
orl
and
fcmovnu
movsl
es
xchg
mov
arpl
adc
pop
sbb
jnp
and
stos
jecxz
fnsave
push
push
cwtl
mov
cmp
inc
ljmp
pop
fcoml
arpl
out
outsl
mov
inc
and
sarb
test
jae
lds
xor
push
push
jne
cmp
sbb
push
pop
subl
mov
jmp
inc
stos
rclb
ds
aam
cs
add
push
call
shrl
pushf
jl
imul
pop
mov
fstpt
pop
push
arpl
mov
pop
std
jb
mov
bound
imulb
aaa
push
dec
int
sahf
imul
push
mov
addb
data16
pop
rorb
xchg
push
jmp
push
cmp
aad
mov
sbb
stc
or
test
cmpsl
ja
leave
pop
scas
dec
ret
shrb
and
jmp
out
xchg
fildl
outsb
cmp
xchg
cmpl
je
cmc
push
aam
mov
test
push
xchg
jmp
aaa
pop
out
das
pop
sarb
and
repnz
subb
sbb
mov
jg
cli
push
sub
xchg
sbb
out
ja
and
mov
repz
add
adc
sbb
mov
cltd
xlat
outsb
icebp
or
lods
pop
fistpl
stos
call
cmpl
xchg
enter
test
mov
mov
xchg
fstpt
lods
popf
or
adc
lods
enter
and
mov
jmp
mov
jnp
inc
outsl
cltd
rcrl
xor
dec
add
loopne
scas
xorl
jmp
fdivs
push
mov
xlat
aad
daa
mov
pushf
hlt
pop
imul
cld
mov
push
add
sub
into
and
ja
jmp
jo
les
xchg
and
cmp
or
clc
dec
mov
cltd
mov
add
lods
nop
insl
dec
and
inc
scas
nop
push
jb
insb
lods
testb
test
int3
push
imul
icebp
sub
cmc
xchg
xlat
mov
enter
cmp
mov
les
jbe
shrl
mov
inc
xor
dec
outsb
outsb
sar
daa
mov
xor
pop
add
sbb
xchg
mov
inc
pop
in
jp
push
adc
incl
inc
test
cmpsb
inc
mov
sub
mov
dec
fucomp
test
ret
cmp
push
out
fisubrs
imul
mov
push
xor
push
movsl
lret
fldenv
jecxz
outsb
pop
repnz
test
mov
mov
leave
leave
aaa
sbb
push
loopne
mov
adc
leave
push
inc
in
push
pop
movl
mov
ljmp
std
sub
jmp
stos
sbb
mov
movsb
lahf
mov
jl
testb
xor
ja
cld
xchg
cltd
jge
and
aam
or
dec
lods
mov
cli
repz
sub
adc
mov
iret
jg
xor
dec
dec
sbb
aas
aas
movsb
inc
lcall
mov
push
test
push
movsl
add
mov
rol
xchg
adc
jno
xor
adc
les
loopne
xor
pop
push
xchg
inc
jne
stos
lret
xchg
mov
mov
test
sbb
aaa
adc
cli
adc
adc
aad
inc
int3
pop
in
or
xchg
xor
scas
outsb
stos
shrl
add
cltd
sbb
xchg
pop
cwtl
aaa
cmc
test
mov
cmpsb
and
jl
pop
std
dec
fs
fists
and
xchg
imul
cmpl
aam
out
add
pop
out
clc
push
and
cli
loopne
fs
push
mov
xor
mov
pop
clc
mov
or
jno
xchg
imul
dec
notb
jp
lds
fwait
je
mov
pop
push
xchg
aaa
xlat
pop
inc
iret
lods
mov
cmp
dec
or
movsl
xor
in
cmp
pop
inc
ljmp
shll
aad
add
mov
push
push
cmp
loope
scas
or
dec
jno
cld
in
mov
adc
or
adc
xchg
jnp
int3
pop
mov
ljmp
movsl
xchg
test
xchg
and
push
fcoms
fsubrl
movsb
jo
and
xlat
daa
xchg
push
push
imul
arpl
hlt
jle
enter
cmpl
lcall
loopne
pop
mov
roll
xchg
xchg
xlat
mov
mov
stos
stc
or
inc
push
ror
repz
fst
or
in
idiv
dec
lods
repz
daa
scas
inc
cld
push
sub
push
jnp
fisubs
sub
in
mov
adc
add
cli
xchg
cmp
notl
adc
roll
cltd
divl
jmp
cwtl
sub
jo
and
sub
mov
mov
mov
sub
fcompl
cmpsl
inc
enter
aad
adc
and
fwait
test
call
shll
adc
aaa
mov
dec
mov
mov
mov
pop
push
stc
das
xchg
add
add
push
pop
subb
inc
cmp
fcmovnbe
or
mov
sbb
cli
pop
cltd
rorb
or
dec
sbb
sub
cmpsl
inc
mov
or
jnp
repnz
and
mov
aaa
fdivrl
scas
sub
adc
mov
addr16
push
mov
scas
inc
sub
imul
cmp
subl
test
sub
sub
outsb
sbb
test
xchg
or
dec
in
loopne
aas
xor
sbb
fwait
inc
in
cld
and
dec
pop
stos
rorb
nop
loope
lret
test
call
pushf
or
inc
xchg
xchg
jmp
adc
icebp
mov
or
push
lretw
mov
lahf
ficoml
add
dec
sbb
pop
negl
ljmp
cwtl
into
cwtl
flds
push
insb
xchg
mov
lcall
adc
shll
mov
rolb
xchg
xor
or
dec
mov
call
jmp
and
imul
cmp
push
out
decl
daa
adc
and
call
adc
leave
icebp
insb
or
scas
push
mov
ror
dec
or
jb
jae
rorl
nop
rcr
jg
ret
xchg
out
xchg
push
roll
cld
stos
andb
inc
mov
push
jae
xchg
fldenv
fdiv
loopne
out
xor
dec
pop
imul
xor
push
shr
mov
fldcw
fcmovnbe
and
mov
insb
call
inc
fcompl
in
inc
popf
sub
aas
out
pop
pop
push
aaa
mov
and
dec
addl
add
cmpsl
mov
xchg
push
xlat
adc
ja
shlb
out
addr16
xor
or
movsl
dec
sbb
add
or
jge
xchg
push
fiadds
push
lret
lahf
jnp
arpl
mov
movsl
mov
loop
mov
push
dec
repnz
dec
sub
loop
jne
jl
adc
inc
test
pop
mov
add
sbb
in
lahf
sbb
fadds
xchg
and
imul
out
enter
sub
ljmp
inc
loop
in
push
pop
fldt
jno
jnp
repnz
xchg
rcrb
repnz
leave
pop
int
mov
and
cltd
mov
loope
dec
jbe
out
inc
movsl
fnsave
xchg
popf
cltd
fdivr
rorb
in
mov
mov
pop
pop
dec
rcr
lcall
hlt
sub
rcll
add
mov
ds
loop
mov
dec
or
sub
or
hlt
mov
and
mov
repz
repz
jno
iret
cmp
xor
push
es
in
mov
jbe
pop
daa
lcall
inc
mov
and
jmp
test
dec
adc
inc
push
clc
arpl
ss
in
sbb
fisubrs
lret
pop
xor
mov
out
clc
jmp
xor
js
test
popl
int3
ret
pop
notb
jg
or
add
rcr
out
push
sbb
lea
mov
fldcw
frstor
ficoml
and
pusha
dec
fwait
orb
cltd
inc
iret
imul
arpl
dec
sahf
fnsave
jge
imul
dec
xchg
xor
ret
idivl
ds
shrb
inc
inc
push
fisubl
mov
mov
inc
out
cs
int3
in
imul
setg
mov
sub
sbb
cmp
fsubl
pushf
jno
shlb
das
in
out
xchg
out
daa
jmp
mov
sbb
jnp
shrl
call
lret
leave
jecxz
rcll
pushf
out
xchg
add
cwtl
mov
dec
push
out
mov
push
pop
and
out
xchg
push
test
into
pop
sub
sbb
arpl
xchg
into
outsb
ss
xchg
and
sub
inc
mov
test
jae
and
xor
push
dec
dec
add
dec
add
jmp
out
and
mov
sub
roll
leave
sub
mov
pop
ds
pop
ret
cmp
arpl
popa
push
cmp
sahf
jnp
adc
in
mov
ficomps
push
in
push
fidivs
sub
cmp
dec
dec
jnp
jge
jmp
lcall
push
movsl
inc
mov
cmpsl
push
add
mov
push
lahf
ss
cmc
inc
out
je
lret
or
xchg
mov
ficompl
mov
in
call
push
cmc
sub
or
aam
and
cmp
fdivs
cmc
lea
rorl
mov
inc
out
cmp
mov
xor
pusha
mov
mov
out
stos
or
inc
clc
mov
jecxz
fsqrt
push
lahf
xchg
push
push
sar
loop
jo
repnz
jae
jne
leave
gs
sub
arpl
jecxz
xor
jle
sbb
push
roll
add
ss
fstpt
pop
ljmp
flds
das
jmp
lods
cld
mov
lret
sbb
icebp
xor
cmpsl
adc
roll
testb
or
rcrb
fimuls
inc
push
daa
xchg
outsl
dec
xor
call
addr16
jns
cwtl
adc
mov
add
push
lea
mov
mov
int3
das
lret
cmpsb
cltd
mov
imul
sub
push
int3
add
out
call
outsl
add
push
icebp
fucom
shll
cmc
xchg
nopl
or
jbe
aam
cmp
sub
jno
jmp
hlt
xor
fwait
lods
jo
jae
pop
sbb
daa
mov
in
push
test
scas
int3
lock
sub
arpl
lea
adc
inc
or
cmp
je
repnz
mov
popa
mov
mov
add
outsb
mov
aam
xchg
sub
shr
xchg
adc
das
mov
mov
mov
les
or
fwait
mov
lahf
pop
aas
mov
mov
mov
inc
in
jge
add
mov
ja
push
dec
pop
lods
sub
lcall
pop
cmp
dec
jmp
xor
cmc
lret
cmp
or
aas
das
mov
mov
pop
cmp
popa
ds
mov
or
out
lcall
push
adc
mov
push
lods
lods
in
jb
dec
push
jb
xor
test
mov
sub
mov
dec
inc
in
jge
ss
arpl
into
out
xor
inc
push
mov
jg
sbb
notl
pop
mov
outsl
lock
inc
popf
cmpsb
int
jns
pusha
mov
or
stos
jmp
popa
jns
dec
pop
and
mov
cmp
push
pop
orl
mov
frstor
cmp
inc
mov
aad
adc
or
fistpl
imul
pop
xchg
cmc
mov
and
out
in
out
hlt
clc
daa
inc
aam
in
push
sub
adc
rolb
les
jmp
iret
push
sarb
inc
adc
sub
std
sbb
cs
mov
inc
and
dec
dec
outsb
or
enter
and
xchg
into
push
loop
mov
popa
cld
inc
jp
sbb
jp
inc
loope
fstpl
adc
mov
push
gs
cmpsb
daa
in
mov
fnstcw
jb
cld
adc
or
fdivl
call
pushf
enter
mov
test
sub
add
out
pop
cmpsl
adc
push
mov
dec
push
rcll
jp
test
mov
dec
loopne
sahf
popf
adc
xor
jmp
aaa
pop
mov
inc
pop
or
jmp
test
in
ret
push
mov
mov
dec
jb
jecxz
sbb
xor
lock
je
pop
mov
adc
comiss
pop
insl
ljmp
fsubrp
ret
popf
es
lcall
xchg
mov
jb
cltd
lret
sbb
jb
mov
lds
ja
xchg
cwtl
xor
and
stos
movsl
pop
sub
pop
scas
adc
pop
or
pop
xor
jae
xor
jae
fsubrp
mov
pop
cli
sahf
addr16
daa
fmulp
and
aaa
fprem1
in
mov
rorl
jecxz
pusha
xorb
dec
push
outsb
es
mov
popf
and
stos
sahf
leave
out
test
addr16
nop
cld
pusha
das
add
mov
leave
clc
sbb
adc
xchg
sbb
orb
cmpsl
sti
sub
inc
xlat
mov
fwait
jge
cmc
push
in
jg
mov
dec
inc
cld
cs
sti
jo
hlt
ljmp
xchg
sub
inc
mov
stos
cmpsb
call
ret
mov
test
sbb
jg
scas
lods
pop
lea
push
fcompl
nop
bound
mov
mov
fs
insl
lods
hlt
fwait
hlt
sbb
push
xor
mov
push
ret
arpl
ds
out
sarl
dec
cs
dec
push
mulb
or
add
inc
sub
test
inc
fcmovnb
movzbl
mov
push
push
sub
popa
dec
mov
popa
pop
xchg
mov
push
xlat
pop
repz
rolb
xchg
mov
out
ret
imul
jns
adc
pop
daa
les
sarb
jae
stc
pushf
loopne
pusha
lds
push
push
sub
xchg
enter
add
sub
test
mov
out
fistpll
fidivrs
cmpsb
pop
jb
lea
and
rolb
pop
insl
mov
xor
xlat
sbb
pushf
and
mov
dec
pop
pop
fcomp
xchg
mov
sbb
mov
adc
dec
stos
lahf
icebp
nop
mov
xor
jb
fsubs
rorl
out
adc
cmp
cmpsl
in
lods
pop
cmp
in
sbb
cmpl
inc
mov
mov
dec
add
shlb
inc
sub
popf
push
and
jae
aam
bound
call
mov
pop
jle
pop
mov
lods
js
and
mov
or
xchg
xchg
cmp
daa
notl
out
in
clc
call
cmpsl
jne
xchg
ret
mov
data16
mov
iret
sub
sbb
dec
mov
sbb
fxam
daa
sbb
mov
push
sbb
sahf
fsubp
xor
add
pop
dec
and
decb
ss
adc
xchg
pop
adcl
sbb
int3
mov
insl
stc
bound
cmc
les
dec
push
mov
pop
call
sbb
jo
cmpsb
or
mov
xor
sbb
dec
push
jns
incl
jmp
push
cmc
insb
push
and
mov
mov
and
cmp
ficoms
xchg
add
repnz
mov
aad
push
test
inc
cmpsl
push
cltd
push
mov
and
jbe
add
pop
cmp
outsl
out
and
or
out
enter
inc
lock
and
push
leave
mov
jns
sbb
out
sub
push
ds
test
mov
loopne
rcr
or
movsl
xchg
push
and
add
aas
jecxz
pop
pop
mov
xlat
je
pop
hlt
mov
test
mov
cwtl
sti
popf
dec
scas
or
shlb
ret
sbb
push
rolb
push
out
divb
stc
pop
popa
test
ds
repnz
sbbl
imul
and
mov
mov
arpl
jecxz
test
imul
inc
rdtsc
push
divb
enter
dec
outsl
out
je
pop
push
sub
xchg
or
mov
lahf
sub
fidivrl
push
insl
aad
arpl
pop
iret
cltd
pop
test
sub
adc
daa
cmp
stos
jno
arpl
gs
push
lret
inc
les
insl
xor
inc
repz
xor
lea
fwait
jmp
testb
inc
push
outsb
jg
ret
jnp
incb
mov
sbb
imull
cmp
jns
cmp
loop
dec
push
popa
popa
mov
pop
sub
jae
push
and
push
xor
repz
add
roll
push
push
stos
sti
cmpsb
aaa
arpl
add
scas
add
scas
inc
fwait
mov
inc
movsl
inc
jmp
push
cmpb
mov
xchg
push
adc
xchg
fldcw
sbb
sahf
push
cs
movsb
ret
out
mov
add
roll
sbb
push
mov
out
cmp
fmulp
stos
cmpl
adc
incb
inc
push
fsubl
sbb
push
test
ljmp
imul
add
add
lds
or
jle
fcompl
ficompl
call
inc
cli
or
stc
je
sub
mov
pop
dec
inc
notl
xchg
push
bound
dec
inc
jno
xchg
xor
roll
out
bound
jo
jns
je
ds
sub
call
xor
cmp
dec
push
cmovnp
test
lea
xchg
mov
je
inc
aaa
fists
jl
mov
push
ret
fldenv
cmp
adc
pop
cltd
fldl
into
mov
cmp
and
aam
jecxz
hlt
rorb
jnp
insl
add
jl
ficoml
dec
imul
mov
push
xlat
mov
or
pop
xchg
xlat
je
movsl
and
mov
lret
mov
hlt
pop
dec
btcl
aad
div
jmp
jmp
je
sahf
pop
jg
loope
sub
inc
fistl
dec
xlat
out
cli
fnsave
popa
arpl
fcoms
push
int
popf
dec
arpl
jle
bound
dec
std
or
test
mov
bound
cmp
add
cmp
lret
mov
sbb
push
mov
sbb
shr
fstpl
sub
stos
test
ss
jmp
movsl
pop
xor
xchg
push
out
div
or
ret
xor
inc
loop
aam
sbb
inc
inc
dec
inc
cmp
pusha
jg
out
cmp
loop
fdivs
retw
outsl
ret
hlt
je
dec
xchg
push
sub
rcrl
out
lret
ja
cmp
arpl
push
mov
and
ds
lret
lods
mov
mov
inc
add
popf
iret
xor
push
fnstenv
les
nop
out
ret
out
mov
cltd
inc
push
inc
arpl
es
cmp
and
mov
ljmp
loope
rcrl
pushf
add
cmp
ss
push
rclb
movsl
mov
es
xchg
sahf
jecxz
adc
ss
and
outsl
ret
adc
mov
popf
jmp
rorl
pop
push
sbb
push
icebp
and
mov
xor
pop
mov
add
test
mov
sub
dec
mov
pop
dec
ds
repnz
clc
testb
fsubrl
lds
pop
pcmpgtb
add
mov
gs
insl
call
loop
sbb
xor
mov
cwtl
dec
and
in
jns
cltd
dec
add
jecxz
jbe
divl
insl
mov
sub
mov
adcb
jg
cld
jp
movl
and
inc
mov
push
pop
rcrl
mov
std
cmp
jl
jns
xchg
arpl
mov
iret
push
mov
test
mov
popf
jge
adc
das
adc
in
repz
fwait
or
xchg
xlat
rorb
int3
and
sub
dec
popf
cld
orb
mov
in
sub
push
fwait
add
shl
dec
sub
dec
mov
xchg
mov
loopne
les
push
pop
daa
hlt
lods
jne
out
push
or
inc
sbb
leave
cmpsb
sbb
sahf
je
cs
cmp
and
dec
add
sar
dec
popa
ret
fdivrs
bound
push
test
cmp
pusha
pop
cmp
inc
popa
out
popa
jg
fildl
clc
lea
loope
aad
cmp
mov
gs
xor
repnz
xor
sub
pop
in
mov
adc
std
inc
jge
inc
movsl
mov
add
and
inc
jo
repnz
fldl
mov
iret
popa
addr16
aam
imul
xchg
gs
into
and
jne
mov
xchg
cs
mov
sti
dec
loopne
mov
andb
bound
fisttps
xchg
out
les
sub
imul
xchg
lcall
cmp
loope
enter
mov
dec
test
iret
cmp
lock
and
and
push
andb
repz
push
jg
jmp
mov
stos
mov
popf
pop
pop
sbb
dec
std
jne
push
hlt
xor
and
lret
rorl
add
sub
clc
sbb
jl
rcrl
cld
cmovnp
push
int
pop
and
jp
aam
pop
daa
mov
repnz
in
xchg
cmp
lods
mov
out
push
mov
dec
fistpl
xor
in
or
test
xchg
push
pop
icebp
or
aad
mov
dec
or
nop
fwait
xchg
jle
jge
push
or
popa
xor
repz
out
cmp
cmpsl
mov
aad
aas
xchg
push
pop
sbb
mov
mov
mov
bound
rolb
imul
or
cltd
sti
daa
das
and
andb
ds
push
pop
enter
aaa
cmpb
jp
add
adc
jmp
and
and
adc
loop
mov
addr16
pop
mov
notb
out
inc
and
lcall
subl
jp
leave
or
insb
aas
ret
adc
divl
fimull
pushf
lret
push
xchg
push
cwtl
cs
in
dec
dec
call
rclb
dec
lcall
cmpsb
movsl
ja
es
in
lret
in
je
into
mov
iret
repnz
mov
jae
iret
xchg
jae
cli
mov
mov
jp
call
and
push
stos
scas
in
aad
icebp
fsubs
inc
xchg
loop
or
lret
pop
cmpsl
lods
out
sbb
xchg
fs
rorb
shll
xchg
dec
xlat
outsl
push
sub
jb
mov
out
mov
ja
lret
ret
lds
jmp
ds
jp
mov
shll
cmpb
adc
inc
mov
sbb
test
data16
popa
cltd
int
in
ret
sub
xchg
int
or
push
rorl
xor
negl
push
cmp
mov
pop
xchg
rcrl
mov
push
dec
int3
insb
sbb
jg
cmp
scas
pop
pusha
adc
sub
les
bound
push
fwait
es
inc
mov
add
out
mov
imul
sub
sub
int
and
sbbl
dec
sti
jmp
bound
iret
dec
cmpsb
jbe
mov
mov
dec
sbb
push
test
xor
inc
mov
mov
add
sub
fistpl
or
or
or
movsb
rclb
fcmovbe
jle
ja
adc
add
lea
mov
adc
add
cltd
dec
out
inc
es
mov
dec
cmc
iret
push
movsb
jae
push
and
std
imul
test
pop
filds
push
or
xchg
inc
push
jae
fs
rorl
mov
inc
ljmp
push
shlb
pop
aad
push
dec
and
shrl
movsb
mov
mov
cld
adc
add
mov
push
and
adc
aam
scas
dec
mov
lds
cltd
xlat
stc
or
inc
or
pusha
fmul
or
jl
mov
fidivrs
lods
push
into
sti
sub
or
lea
xor
jg
ljmp
cwtl
inc
ljmp
and
test
jmp
cld
aad
or
mov
stos
pusha
push
in
jmp
test
mov
jecxz
mov
popf
lahf
push
shrb
jne
push
movsl
rorl
cmpsl
and
cmp
mov
in
aas
cmp
inc
inc
sbb
or
sbb
outsb
lock
xchg
mov
jecxz
mov
scas
pop
test
js
faddp
mov
loopne
xchg
mov
js
ficomps
mov
jnp
adc
int
jb
jle
push
or
clc
addr16
jl
pop
cld
aad
jns
xchg
fwait
aam
xchg
in
push
in
and
inc
mov
mov
dec
lret
xchg
shrl
xchg
out
int3
or
or
pop
cmp
xor
mov
xchg
jno
fnstenv
push
icebp
bound
invd
lea
imul
cmpsl
dec
pop
and
call
pop
lret
inc
sbb
mov
inc
sub
xor
mov
lret
cmpb
push
shlb
mov
cmp
jno
test
mov
or
mov
add
pop
out
into
sbb
inc
es
in
jne
dec
fidivrs
test
pusha
sti
add
or
call
ljmp
jg
xor
sub
add
inc
mov
sti
xchg
lcall
mov
mov
cwtl
jns,pn
cmp
cmp
pop
orl
cwtl
pop
jbe
adc
pop
jmp
adc
and
pop
fwait
pop
jecxz
jb
sti
nop
push
and
lahf
jb
les
fcomps
dec
xor
out
shll
je
cltd
jecxz
sbb
jb
jmp
or
lds
ficomps
xor
inc
mov
insl
fwait
xchg
fwait
mov
xchg
int
int3
add
stos
xor
jno
in
mov
out
cmpsl
xlat
jbe
sub
outsb
iret
addr16
mov
pushf
icebp
xor
lea
in
rorl
push
clc
in
mov
test
repz
stos
jle
xor
repnz
sub
dec
mov
add
and
mov
mov
sti
mov
cmp
js
push
and
cwtl
mov
cli
push
mov
pop
xor
clc
data16
push
int3
imul
jle
pop
jp
lods
inc
lcall
test
sbb
out
pop
xor
insb
add
outsb
cmpsl
pop
or
hlt
pushf
dec
scas
or
arpl
xchg
sub
sub
inc
sub
fiadds
xlat
push
pop
jae
cmp
icebp
int
xchg
add
and
xor
mulb
xlat
mov
lahf
pop
inc
mov
hlt
sub
popf
arpl
mov
cmp
test
or
xor
xorl
cmpsl
shlb
test
xorb
ja
xchg
mov
xchg
lds
cmp
or
jne
and
xchg
inc
lds
ret
std
push
ficoml
into
jl
jo
aas
popf
adc
sub
mov
xor
jne
cmp
enter
mov
stos
repnz
jnp
aam
les
aam
add
xchg
xchg
jb
sbb
sbb
adcl
addr16
dec
sub
imul
inc
or
lret
outsb
xchg
push
adc
and
or
es
test
jo
insb
jb
sbb
xor
int3
in
xor
xchg
and
xlat
adc
and
jnp
xchg
push
sub
ret
movsb
mov
xor
xor
mov
test
adc
loop
adc
sub
inc
lret
and
xchg
insl
xlat
dec
pop
or
mov
test
inc
mov
push
mov
mov
add
cwtl
icebp
cmpsl
jns
mov
sbb
add
into
lahf
xchg
insl
add
or
mov
xchg
popf
sub
cmpl
xor
arpl
cli
cmpb
pop
sbb
test
test
mov
jl
sbb
cld
lahf
or
in
inc
jl
sarb
mov
xchg
in
pop
std
mov
push
add
fisubl
jo
mov
pop
jb
lahf
xchg
xchg
fdivr
add
push
ds
jno
aam
inc
and
sbb
cmp
mov
sub
cwtl
adc
jmp
lcall
movsb
cmp
cmp
les
add
or
ss
cwtl
in
loopne
sbb
push
cmpsl
out
mov
jge
push
push
fcomps
shl
movsb
enter
jmp
adc
push
mov
sti
sbb
mov
out
pop
xchg
stos
mov
mov
mov
stos
jae
sbb
loop
cwtl
lock
sbb
push
adc
pusha
rcrl
mov
fadds
stos
ret
push
stc
jns
incb
inc
pushf
ror
incl
mov
cmp
jmp
mov
adc
aam
imul
fcmovnb
aad
push
xorl
scas
cwtl
mov
loop
lcall
pop
into
jmp
sarb
jo
push
push
adc
sti
sti
pop
mov
rolb
pop
mov
mov
cmp
or
mov
int
sub
jle
mov
or
cmp
outsl
fbld
add
mov
mov
fsts
pop
stc
gs
cmp
cmp
fisubs
lds
mov
xlat
faddl
pushf
xlat
mov
ljmp
ds
data16
int3
sub
or
out
fs
popa
std
and
xlat
iret
ljmp
loope
fbld
sub
push
lds
rorl
xchg
pop
imul
adc
dec
push
inc
imul
cs
daa
inc
shrb
out
push
xchg
out
mov
in
mov
push
pusha
cmp
repz
jle
jnp
add
adc
push
nop
inc
fnstsw
mov
ljmp
cmp
pop
add
mov
push
lcall
push
push
xchg
out
add
jno
ffree
mov
xor
add
xor
cmpsb
xchg
stc
cwtl
dec
ja
cli
sbb
inc
fnsave
xchg
mov
inc
dec
orl
scas
out
lret
fiaddl
lock
xor
out
sahf
mov
fmul
push
pop
scas
mov
ffreep
jae
fs
and
or
sbb
int
test
ja
stc
cwtd
sub
and
jno
andb
repnz
pop
push
addr16
mov
enter
xor
mov
icebp
jg
pop
push
jecxz
cmp
outsb
inc
jbe
fisubl
cmp
pop
decl
mov
mov
dec
mov
inc
testl
or
loopne
test
cmp
mov
ss
aaa
mov
clc
push
sarl
in
push
pop
lea
repnz
insb
lahf
mov
hlt
add
jg
mov
dec
push
and
and
outsb
jge
or
mov
xor
mov
fxch
mov
insb
jp
sbbl
mov
test
mov
sbb
stos
rclb
sarl
pop
popa
dec
dec
sti
sarl
in
gs
fidivrl
push
popa
call
mov
xchg
pop
arpl
and
xor
pop
sub
gs
sub
bound
sub
das
div
mov
movsb
and
arpl
outsl
test
and
mov
loope
in
arpl
cwtl
movsb
sub
xchg
pop
mov
js
and
ss
xorb
rcll
xlat
inc
xchg
cmpsb
cs
cmp
mov
push
inc
repnz
icebp
bound
loope
push
jge
shlb
xchg
pmulhw
mov
jne
pop
and
mov
and
sub
lock
movsl
lret
mov
mov
add
mov
xlat
int
test
xor
out
nop
xchg
add
pop
xchg
jae,pn
rolb
stos
dec
repz
fsubs
mov
in
aaa
pop
es
lret
lret
cmp
test
mov
leave
cmp
movsl
in
stc
bound
aam
mov
shll
in
pop
sti
or
sub
mov
sub
adc
inc
shll
movsb
jns
xor
aaa
jnp
movsl
xor
cltd
pusha
lahf
ss
sbb
push
addb
enter
and
hlt
sbb
pop
jne
in
scas
jp
pop
adc
push
mov
or
inc
jne
dec
mov
stc
movsb
sbb
lret
movsl
sbb
iret
movsl
repnz
add
ljmp
xor
push
in
les
cmp
cmp
ret
push
insb
ja
dec
sub
xchg
leave
xchg
add
nop
inc
shr
jne
pop
jle
incb
fwait
xchg
or
adc
fwait
lods
cmp
adc
les
stos
cmpsb
rclb
fwait
mov
jnp
cmp
cmp
cmp
outsb
rol
ficompl
lret
fcom
jno
inc
jb
or
mov
lods
popa
xlat
mov
mov
adc
imul
sub
int
arpl
sbb
in
mov
mov
cltd
aad
mov
outsb
imul
or
in
push
mov
stos
push
shl
mov
push
mov
subb
mov
and
mov
fbstp
ret
hlt
aaa
pusha
pop
fidivl
andl
daa
enter
pop
dec
xchg
inc
mov
adc
jge
adc
jno
pop
pop
pop
adc
cmp
dec
test
pop
enter
jb
out
fucomi
push
and
arpl
ret
cwtl
push
dec
in
add
fsubs
lcall
push
or
xlat
scas
int3
dec
jo
add
sbb
pop
fisubl
mov
push
inc
call
pop
ficoml
aad
std
into
add
mov
cmp
mov
pop
or
rorb
stos
or
inc
in
sbb
jge
and
cmpb
cmp
sbb
dec
repz
dec
stos
xorl
lds
shrb
sbbb
adcb
scas
insb
pop
add
sbb
mov
mov
xchg
movsb
imul
js
stc
jecxz
incb
ret
stos
dec
movsl
cwtl
add
insb
sbb
push
test
adc
mov
adc
dec
sbb
add
pusha
cmp
sbb
and
add
push
inc
push
iret
out
imul
clc
rclb
fcomps
stos
fsubr
mov
cmp
sbb
popa
shrb
sbb
nop
rorb
add
insb
mov
lfs
in
call
mov
add
xor
insl
sub
call
or
outsl
insl
imul
rorb
inc
ja
jge
mov
cmp
jne
and
add
cmpsb
fmull
mov
popa
cmp
and
loope
pop
push
cli
mov
out
lcall
inc
mov
repnz
in
push
test
and
sbb
loopne
adc
popa
cmp
cld
cs
cltd
fidivl
sahf
sub
cmpsl
push
or
push
add
mov
dec
push
xlat
push
pop
icebp
jbe
pop
push
cli
repnz
push
sub
popaw
jae
pop
cwtl
mov
xchg
push
xchg
js
subl
sti
js
or
mov
xchg
and
xchg
sbb
in
or
sub
in
loopne
or
jnp
je
mov
daa
imul
out
jle
or
dec
repnz
sub
jg
push
popa
and
mov
xchg
jno
mov
dec
fdivrs
int
push
leave
fisubrl
or
sub
out
icebp
mov
iret
pop
mov
gs
or
daa
rcrl
add
xor
hlt
lcall
ja
push
adc
push
sarb
mov
shll
xor
incb
out
adcb
pop
scas
push
ljmp
jecxz
sub
inc
test
jmp
pop
push
mov
mov
adc
outsb
fmulp
add
pop
inc
fwait
mov
jge
mov
add
jne
sbb
cli
xor
jne
mov
mov
and
dec
cmp
les
out
scas
and
aas
cmp
jle
aas
ret
xlat
mov
inc
cmp
xchg
leave
xchg
xchg
xor
sbb
lods
int
rcll
sbb
cmpsb
ds
jecxz
loop
jns
and
sbbb
xor
sub
bound
clc
es
xor
es
dec
and
sub
cmpsb
and
ds
jl
lahf
sub
mov
std
xor
push
mov
imul
push
addr16
scas
and
add
or
xor
sub
in
xchg
or
xchg
push
jnp
inc
adc
xchg
add
inc
adc
incl
or
stc
addr16
pop
int3
ficoml
fstl
in
shl
and
pop
cmp
sti
mov
out
inc
js
jno
adc
cmp
pop
jo
cltd
push
xlat
loopne
iret
aam
xchg
push
push
stc
inc
dec
pushf
push
orb
inc
inc
push
mov
mov
mov
adc
dec
adc
pushf
inc
test
aam
fisubl
mov
inc
js
lds
jns
or
or
rcll
mov
xlat
test
fnstsw
push
pop
xor
push
in
mov
movsb
cs
sbb
in
xor
and
sarb
adc
dec
or
enter
ret
addr16
test
cltd
sub
and
or
mov
mov
sub
push
cmpsl
jo
mov
mov
inc
inc
shlb
xchg
cmp
bound
pop
out
fadds
insb
clc
mov
leave
movsl
fistl
aad
arpl
loop
mov
enter
shrb
lds
adc
in
cmovnp
mov
fdivl
aam
push
jns
push
dec
xchg
xchg
inc
in
push
xchg
das
cmpsb
daa
imulb
inc
sbb
sbb
shl
and
push
imul
lahf
lods
adc
into
fs
fsubp
ja,pn
test
mov
mov
std
pop
xor
loopne
lds
aam
mov
sub
fcoms
lock
lods
mov
pop
nop
jne
out
xchg
paddd
pusha
inc
cmpsl
inc
sarl
cld
popf
cltd
sub
lahf
lods
fimuls
push
pop
and
in
lret
mov
fsubrp
mov
incl
bound
popf
movsb
xor
sbb
xchg
popf
and
clc
cmpxchg8b
jmp
sbb
hlt
xlat
cltd
lods
movswl
mov
loope
sub
xchg
popa
push
sbb
aaa
jbe
mov
lcall
in
mov
xor
pop
sub
jmp
insl
and
arpl
pushf
mov
jle
mov
sbb
ret
ret
pop
jl
insl
lods
repnz
jp
cmc
mov
pop
les
xchg
lret
xor
inc
jg
mov
or
mov
jge
rorb
mov
test
cwtl
jecxz
mov
in
sub
leave
loop
pushf
xor
data16
cmp
dec
and
int
push
mov
sbb
jns
mov
mov
sahf
fstenv
ja
push
push
cmpl
pop
mov
nop
sbb
push
jns
pop
out
mov
sub
lods
jg
jo
xchg
pop
xchg
xor
in
cwtl
lods
jge
mov
sub
pop
dec
je
addr16
add
cmp
cmp
and
mov
loope
test
sub
inc
adc
shlb
mov
sbb
in
das
cltd
pushf
cwtl
lods
stos
cmpl
cmpl
mov
dec
push
popa
sub
sbb
andl
jae
dec
adc
xchg
xlat
cmp
mov
ljmp
inc
cmc
xchg
faddl
xlat
jae
or
cli
push
ror
jge
aas
jo
adc
test
js
mov
out
ss
sar
imul
mov
das
rorl
cwtl
lea
jns
push
fistps
pop
xchg
in
pop
packuswb
inc
cs
mov
mov
jbe
sub
or
lods
add
or
pop
sub
ss
cmpsl
fs
lock
cwtl
repz
ret
mov
lods
outsb
or
aam
add
jle
push
outsl
dec
in
mov
xchg
sbb
mov
push
les
repz
jo
lock
mov
arpl
mov
sbb
dec
add
outsb
adc
lcall
push
andl
lret
and
mov
add
xchg
pop
rolb
ja
dec
push
outsb
sub
lahf
cltd
and
das
pop
mov
xchg
out
adc
fucomp
mov
icebp
testb
add
push
xchg
shrl
inc
pop
cwtl
test
mov
bound
or
mov
push
xchg
add
add
es
and
push
lods
jge
out
add
outsb
push
fmull
lds
add
imul
sbb
or
das
jnp
cmp
dec
cmp
sbb
sbb
ret
pop
adc
dec
insb
mov
jp
mov
mov
les
int3
or
sbbb
jbe
loop
push
in
pminub
test
jge
mov
lds
pop
je
test
cmp
dec
nop
cld
std
xlat
cmpl
cmp
inc
ljmp
mov
sbb
dec
xchg
call
loop
xor
mov
mov
sbb
inc
jl
les
pop
dec
shlb
lea
sbb
cld
arpl
cmpsl
dec
xchg
mov
sbbl
xchg
cs
and
loop
adc
fs
icebp
in
push
dec
test
shlb
cwtl
sub
fsubl
loopne
in
pop
movd
mov
mov
sub
addb
dec
insb
push
push
mov
pop
sub
xlat
mov
jmp
movsl
inc
pop
add
mov
dec
pop
xorl
out
das
lea
leave
in
stos
aad
call
pop
sahf
dec
mov
push
or
pop
mov
add
and
cmpsl
lret
or
fistpll
pop
push
pop
xchg
push
rorl
js
sbb
gs
popf
mov
lock
pop
push
hlt
ret
xchg
xchg
fisubrs
shlb
jo
push
lods
bound
adc
aaa
dec
loopne
pop
loope
push
xchg
andl
dec
ret
or
inc
in
fnstsw
mov
out
cmp
xor
cmp
bound
xchg
pop
jnp
sbb
movsb
loopne
int3
ds
sub
rcrb
imul
push
push
cmp
int3
add
jp
js
push
xor
cmpsb
popa
daa
xchg
inc
in
iret
lods
adc
stos
sbb
mov
mov
pop
jmp
adc
ja
cmpsb
sti
rolb
jmp
daa
out
scas
push
pusha
imul
lods
sub
rorl
xchg
mov
stos
adc
and
pop
enter
clc
add
or
cli
xor
es
mov
sub
xchg
adc
and
cmp
ss
mov
lahf
mov
mov
repnz
sub
inc
lods
inc
cmp
fs
jl
mov
pushf
and
sub
mov
lahf
cmp
push
popf
xor
in
jo
js
adc
test
and
out
mov
mov
fistpll
ss
mov
jns
jle
loope
jl
inc
pop
jne
scas
sub
xchg
add
jg
sarl
clc
js
cmc
sbb
inc
jae
xchg
xlat
inc
xlat
xor
bound
mov
in
movl
mov
mov
jb
shlb
ret
clc
popf
adc
pop
inc
xchg
pop
enter
fs
mov
mov
popa
cs
mov
out
lea
xchg
hlt
aas
mov
cmc
sub
cmc
ss
mov
rorb
orl
xchg
jbe
repnz
mov
int
pop
jns
mov
mov
out
mov
push
push
push
or
xchg
rolb
jmp
fsubrl
cmp
cltd
jbe
std
aaa
fwait
dec
and
fbstp
inc
addr16
mov
popf
sti
sbb
or
ljmp
flds
loope
mov
sub
adc
outsl
aaa
xchg
jp
adcb
inc
negb
or
fcom
mov
adc
xchg
in
mov
addl
sub
sti
cmp
ljmp
sarb
in
or
aaa
pushf
bound
adc
xchg
jno
jl
adc
popa
loop
dec
lahf
pop
popf
push
pop
mov
lea
in
aas
jge
or
sbb
cmpsl
jmp
insb
lods
inc
dec
test
xor
add
das
mov
leave
mov
pop
push
adc
push
sbb
xor
jg
xchg
mov
sahf
das
cwtl
pop
mov
imul
fwait
xor
daa
push
push
and
sbb
jle
mov
setg
xor
pop
cs
fwait
and
push
adc
inc
xor
sahf
ret
push
loope
mov
decl
fwait
dec
stc
mov
mov
je
in
adc
jns
pop
add
int3
fimull
es
lret
mov
push
cmp
cmc
pop
rcll
hlt
mov
pop
aad
mov
adcb
adc
mov
sahf
cmp
pushf
mov
jns
pop
xchg
xchg
int3
mov
mov
add
add
sub
stos
cmp
mov
jmp
cltd
out
adc
pop
xchg
sbb
mov
dec
inc
shll
dec
pusha
stos
lcall
jle
cmpsb
push
iret
xchg
call
jns
sbb
jae
out
xor
pop
leave
add
call
adc
loope
xchg
in
push
jns
fs
pop
loopne
int3
pushf
jb
out
push
lcall
or
sahf
clc
ret
lds
adc
xchg
je
add
fdiv
mov
out
jbe
jno
pop
pop
jge
jae
inc
add
ss
idivl
mov
in
pop
jbe
xchg
fldt
pop
adc
jecxz
es
stos
push
nop
les
data16
fwait
divl
or
xchg
je
andl
mov
loope
dec
mov
test
test
adc
inc
outsl
xor
lods
mov
stos
aam
sub
xchg
jbe
int3
jge
jmp
cwtl
sarl
js
popl
das
adc
adc
stos
sub
out
outsb
scas
das
pop
dec
aad
and
imulb
sbb
mov
push
sbb
dec
mov
add
in
mov
sub
and
jns
push
xchg
es
xlat
push
rolb
inc
mov
jp
dec
push
pop
push
cmpsb
int3
dec
stos
adc
pushf
pop
cld
mov
jge
cmp
shlb
test
xchg
push
add
outsb
inc
add
adc
es
ficoms
add
int
and
sarb
in
fst
scas
out
sbb
or
cltd
mov
shll
movsl
adc
pop
test
mov
mov
jbe
jno
adc
icebp
jg
sub
add
je
imul
sub
jmp
mov
fisubs
ret
test
xchg
outsb
push
cld
rorl
mov
or
in
adc
jne
pop
imul
jnp
pop
test
push
movsl
adc
dec
lret
jecxz
mov
orb
jecxz
xor
icebp
das
push
inc
adc
jg
jmp
inc
pop
dec
pusha
sbb
dec
cmp
dec
cmpsl
stos
popf
adc
xchg
xor
testl
or
andb
xor
xor
in
fadds
cltd
xor
xchg
add
cwtl
sbbl
mov
xchg
push
adc
mov
jmp
idivl
lret
cmpsl
jle
fcmove
or
cmp
mov
adc
and
sbb
mov
ret
fisttps
mov
xchg
fst
ror
dec
adc
movsl
jmp
dec
jmp
sbb
mov
fs
iret
sbb
cmp
mov
hlt
pop
jecxz
jp
jg
xlat
pop
loop
add
mov
jns
add
shlb
xchg
or
out
rcrl
lret
add
inc
dec
cmp
push
or
out
dec
mov
jo
mov
loop
lahf
leave
clc
bound
and
or
push
xor
ja
sbbb
fidivrs
push
stos
ret
aad
filds
ret
lcall
xchg
mov
sbb
sub
gs
jns
adc
test
outsl
scas
arpl
mov
lcall
imul
jg
ss
jo
mov
and
adc
out
test
mov
bound
mov
push
std
push
push
popa
mov
ljmp
mov
xchg
or
push
pop
rorb
lods
push
mov
aaa
out
adc
test
insl
jnp
sub
loope
shll
pop
dec
push
fisubs
xchg
lcall
or
dec
xchg
sub
pop
mov
sbbl
fsts
lods
dec
sbb
sub
push
or
shll
cld
std
push
out
subb
fisttps
or
lods
push
sbb
pop
jbe
inc
xchg
mov
pop
cmp
adc
push
dec
bound
out
or
cmc
add
cmp
cli
mov
xchg
movsl
enter
xchg
movsl
push
lahf
mov
pusha
push
adc
sar
mov
cld
inc
xchg
pop
iret
jl
arpl
jb
fstps
repnz
sub
fcmovu
xchg
fs
call
mov
add
arpl
push
add
mov
sbb
push
scas
repz
cmp
jecxz
aad
cs
lcall
or
xor
outsl
cmp
and
int
out
out
loop
push
jb
in
out
pusha
std
out
and
pop
mov
pop
sbb
fstpl
mov
enter
clc
pop
push
popf
mov
cmp
mov
mov
scas
lock
repz
dec
adc
ja
shl
pop
sub
popa
xlat
jecxz
inc
dec
push
lock
lcall
jbe
lcall
cmpsb
xlat
xchg
xor
stos
xchg
inc
movsl
xor
mov
addr16
es
dec
pusha
mov
add
stos
mov
ljmp
int3
mov
push
iret
dec
lock
mov
lds
inc
scas
stos
dec
mov
push
adc
outsb
jl
lahf
punpckldq
pop
add
mov
data16
loop
insb
sub
lea
movl
andl
adc
push
hlt
adc
dec
xor
ljmp
jmp
inc
inc
and
push
lea
test
add
mov
add
or
negb
jmp
jbe
test
cli
je
xchg
imul
cmpsb
test
in
sub
sarl
aam
mov
lcall
mov
stos
and
mov
pop
push
add
data16
and
aaa
sbb
shrl
dec
lea
bound
cmp
insl
jecxz
pop
lock
movsl
pop
aad
lcall
pop
jp
cli
lea
sub
mov
cmc
cmp
mov
cmp
jns
inc
shll
xchg
xchg
in
loope
jge
test
jo
pop
sarl
lds
pop
add
mov
dec
sub
cli
popaw
lods
xor
mov
shrl
jne
push
mov
mov
add
icebp
sbb
cs
mov
repnz
ss
int3
xor
test
push
mov
sbb
inc
dec
inc
cmpsb
loope
lea
es
cmp
in
outsl
cmp
adc
fidivrl
jbe
xor
or
xor
addr16
cltd
xor
imul
mov
out
cmpsl
sti
adc
push
cmp
fadd
popf
mov
pop
and
push
xchg
and
notb
push
jecxz
mov
mov
and
sti
pop
xor
add
or
jnp
lahf
fwait
sbb
das
cltd
rorl
insb
inc
ffree
sbb
es
aam
push
popa
xchg
out
push
jmp
mulb
jmp
andl
pop
jo
call
xchg
xchg
lods
pop
cwtl
xchg
fnstsw
mov
sbb
je
push
test
mov
inc
jmp
imulb
addl
pop
push
sub
cmp
aam
sbb
xchg
mov
mov
sub
dec
push
xchg
dec
dec
cltd
or
push
pop
inc
mov
scas
jle
jecxz
sub
jecxz
popa
pop
and
cmpsl
jecxz
xor
stos
mov
scas
out
testl
aaa
scas
xchg
aad
cmp
sbb
inc
int3
xor
push
scas
add
jbe
mov
push
pop
imul
xorl
mov
pushf
sbb
mov
pop
mov
sub
inc
mov
mov
inc
ror
sahf
pop
cltd
js
add
ljmp
repnz
cmpsb
pop
inc
cmp
cmp
cmpsl
jmp
faddl
gs
cltd
ja
andb
imul
fldl
sub
lds
add
xchg
cli
fistpll
popa
pop
in
mov
cmp
push
inc
push
fildl
mov
insl
jp
addr16
stos
popa
in
dec
cwtl
call
jne
stc
push
adc
cmp
xchg
and
out
mov
mov
mov
or
xor
sub
mov
jnp
lret
jbe
ss
roll
mov
mov
unpcklps
int3
ret
pop
lret
hlt
adc
pushf
ljmp
je
pop
xchg
insb
push
push
lret
jnp
ljmp
xchg
and
dec
jne
mov
jae
cs
pop
push
sbb
inc
inc
sarl
push
test
xchg
add
icebp
jno
or
not
mov
loop
pop
mov
push
mov
popf
orl
ljmp
mov
in
pushf
push
scas
dec
lock
dec
nop
clc
movsb
shrl
jmp
ljmp
jne
imul
shl
or
lods
mov
iret
in
mov
test
outsb
sbb
mov
js
mov
sub
mov
fldcw
mov
xchg
inc
addr16
ficoml
sub
sahf
jno
outsl
imull
pop
scas
cmp
mov
popf
pop
push
mov
incl
jmp
mov
gs
imul
mov
lcall
xor
loope
mov
mov
adc
cmpsl
jp
add
sysexit
lods
nop
cwtl
stos
pop
bound
in
jle
xchg
push
repz
jnp
js
mov
pop
jnp
bound
cmpsb
xchg
jo
inc
cltd
mov
jb
nop
adc
mov
outsb
stos
dec
push
xor
push
xchg
and
xchg
sbb
pop
mov
rolb
jbe
lock
movsb
dec
xor
das
adc
sbb
adc
in
mov
inc
enter
xchg
jmp
scas
je
pop
or
dec
mov
loopne
adc
push
xor
cmpsb
test
je
in
sub
data16
pushl
pop
sbb
mov
mov
dec
aad
int3
xor
lock
pusha
cmp
jge
pop
ds
jmp
fwait
pop
sbb
fisubl
inc
insl
dec
aam
inc
cmpsl
add
mov
test
pop
cmp
adc
cld
les
mov
or
lcall
jmp
xchg
mov
mov
sbb
inc
xor
push
add
jne
fndisi(8087
out
into
mov
repz
popa
outsb
cmp
sbb
inc
cmc
fdivp
mov
outsb
cwtl
jmp
cmpsl
mov
arpl
scas
insb
sahf
clc
cs
inc
lret
icebp
in
push
lods
cmp
leave
xlat
out
sbb
fsts
mov
xor
lcall
cmpsb
xor
cmc
mov
out
ror
stos
popf
mov
cmp
mov
mov
inc
addr16
jecxz
mov
movl
loope
fs
ljmp
mov
add
ja
incb
test
popa
and
pop
push
in
decb
addr16
sbb
add
neg
or
repz
std
sbb
push
nop
in
js
in
enter
ret
xor
add
push
and
enter
pop
mov
les
sbb
pushf
stos
push
shlb
sub
mov
adc
pop
inc
and
xchg
cld
jns
fstpl
in
pop
pop
adc
pop
in
or
jmp
mov
add
std
dec
push
cli
addr16
jb
dec
sub
mov
ret
test
adc
mov
pusha
scas
test
jne
lods
lret
xor
scas
inc
mov
xchg
add
testb
sub
adc
enter
ret
inc
lret
mov
add
fistps
jmp
mov
mov
xorb
testb
inc
pop
adc
jp
push
or
cmp
pop
jae
add
mov
das
cmp
ja
insl
add
data16
adc
sub
mov
leave
cmpsb
xchg
add
ret
jb
cs
xor
and
xor
sub
std
out
inc
scas
aaa
lods
fcmovb
addr16
xchg
pop
daa
testb
cmpsb
sbb
jae
pop
xchg
inc
dec
dec
shlb
inc
add
pop
inc
inc
enter
rorb
mov
adc
cld
jl
pop
dec
paddw
sbb
pop
mov
inc
repnz
mov
xchg
clc
jmp
stos
stos
repnz
or
lods
inc
add
or
pushf
ss
dec
rol
shll
push
push
push
cli
es
mov
ret
xchg
ret
jge
jle
iret
and
mov
dec
mov
cltd
in
imul
scas
mov
cltd
hlt
sarl
popa
xor
cs
fildll
add
cltd
push
lahf
sub
sti
sbb
test
testl
mov
cli
jle,pn
imul
ficoms
cmp
or
sbb
inc
insl
dec
jp
push
cs
mov
sub
pop
mov
inc
pusha
inc
loop
adc
jge
in
aad
xor
xor
cmp
sub
mulb
aaa
notb
pop
scas
push
inc
decl
xor
out
sub
mov
sahf
lret
out
movsb
pusha
movb
pop
mov
inc
mov
lret
shll
or
jo
out
std
xchg
in
popa
push
outsb
mov
jae
mov
ret
or
nop
mov
push
mov
das
dec
dec
jg
mov
jo
cmp
testb
xlat
fadds
fists
cmp
add
shl
add
ret
jle
cmp
out
out
mov
push
aam
inc
sub
pop
push
mov
cmp
mov
popa
in
xchg
jle
mov
adcl
ret
xor
and
sbb
or
out
pop
cs
sub
jnp
mov
xchg
shlb
jl
lahf
inc
xchg
imul
add
jno
and
inc
cmp
icebp
test
iret
mov
mov
mov
push
mov
cs
jle
mov
in
jg
std
push
xchg
insl
dec
mov
mov
pop
dec
pop
aad
xchg
call
mov
push
and
aaa
jae
dec
push
xchg
sub
xchg
cmp
adc
mov
or
jo
cmpsl
and
cmp
lret
in
int3
pop
sub
popa
jns
cmp
mov
and
push
push
mov
shrl
jbe
hlt
mov
xor
lods
sbb
daa
sub
mov
out
sbb
mov
movsl
nop
sbb
shll
movsb
lret
mov
lea
int
inc
iret
xor
loope
bound
ds
aaa
jo
fwait
arpl
pusha
daa
repnz
xor
insl
pushf
mov
jo
xchg
mov
test
inc
mov
fmull
test
adc
adc
dec
mov
sbbb
pop
mov
pop
cld
dec
mov
push
pop
mov
adc
stos
add
jg
dec
leave
mov
mov
and
hlt
pop
addr16
pop
stc
pusha
push
shr
test
jg
xor
xor
bound
inc
fidivrl
outsb
adc
loopne
push
pop
jmp
addr16
in
lea
dec
negl
mov
js
ret
imul
xor
repnz
ljmp
data16
push
in
fs
mov
enter
lds
mov
rorb
mov
mov
fucomip
mov
addr16
sbb
sbb
push
aaa
ret
pop
les
and
or
orl
xchg
and
xchg
enter
fcomi
inc
in
push
cmpsb
shrl
fwait
jmp
negl
inc
inc
jbe
fwait
loop
or
call
mov
xchg
or
inc
add
sbb
or
out
inc
push
je
xor
dec
call
inc
xchg
or
mov
dec
add
or
push
test
into
ljmp
mov
xchg
icebp
push
mov
xor
inc
cmp
pop
jge
loopne
jns
popf
repz
push
movsl
push
ret
bound
push
fdivrp
add
addr16
push
adc
lahf
lret
test
in
aad
inc
fsubrs
jae
sti
lods
and
clc
cwtl
dec
popa
outsl
loope
add
in
cmp
outsb
fsubs
adc
push
jge
sbb
push
mov
test
mov
adc
inc
adc
cmp
sti
xchg
lock
stos
and
inc
in
pop
test
sbb
cmp
sbb
cmp
mov
xchg
mov
mov
addl
xlat
mov
mov
rcll
leave
lret
add
mov
insl
andl
pop
fwait
orb
sbb
add
pop
jno
add
mov
lods
in
cmp
sbb
sahf
dec
pop
sbb
push
vmovd
dec
pop
dec
sub
pushf
jl
roll
xchg
dec
inc
pop
mov
pop
jp
das
inc
xor
and
mov
adc
rorb
cmpsl
fdiv
and
mov
lods
ja
jmp
outsl
loopne
push
in
cmp
repz
cmp
stos
or
lea
jb
mov
ficoms
jl
ss
cmp
call
popa
push
mov
int3
mov
repnz
iret
fs
jmp
inc
xor
aam
pusha
add
repz
mov
fists
fwait
xor
je
and
mov
setl
mov
jnp
xchg
push
xchg
rcl
fcomps
jo
je
jno
mov
fbld
call
push
add
das
pushf
fs
sub
adc
mov
dec
xor
bound
sub
je
daa
dec
push
cmpb
or
lahf
mov
add
aas
out
aam
mov
ret
js
adc
lds
shr
rcr
push
sarb
imul
loope
ret
xchg
mov
icebp
into
jo
hlt
mov
add
inc
mov
lret
mov
adc
mov
imul
xlat
push
xchg
push
xlat
cmp
movsl
sub
mov
cmp
in
sub
and
xlat
push
cli
mov
pusha
add
xor
divl
popa
inc
mov
mov
pop
mov
inc
shll
out
xchg
mov
or
jnp
push
xor
adc
repz
sub
xchg
test
cmp
nop
arpl
in
push
xchg
sarb
in
xor
xchg
cmp
in
addr16
fists
popl
cmp
inc
xor
dec
rolb
inc
ss
fs
adc
mov
pusha
jp
imul
add
mov
pop
push
mov
fucom
adc
inc
and
push
mov
xchg
repz
push
lods
push
push
or
bound
sub
adc
push
testl
xor
adc
jmp
sahf
adc
add
addl
arpl
cmp
pusha
clc
sbb
jmp
addl
outsb
ret
sti
jae
sbb
fucom
out
mov
mov
adc
mov
lcall
xor
or
rcrb
iret
aad
cwtl
mov
insl
dec
cld
sub
mov
push
out
cmpb
popf
xchg
dec
push
mov
nop
lds
push
cmc
jecxz
andl
and
stos
adc
js
cs
add
sbb
fwait
adc
mov
adc
stos
mov
sti
jp
mov
dec
sbb
ljmp
xchg
cli
enter
push
xor
movsb
rorb
loopne
push
add
enter
bound
pop
outsb
hlt
sbb
popf
xchg
jo
scas
jne
fdivrl
test
mov
push
lcall
xchg
cwtl
test
mov
push
fistps
push
das
dec
add
pop
pop
xor
push
and
and
sbb
hlt
adc
scas
xor
mov
push
leave
sub
adc
add
jg
arpl
sbb
pop
scas
out
jns
sub
push
pop
add
ret
or
add
fidivl
fcoml
cs
mov
sahf
pop
cmp
scas
mov
dec
dec
mov
push
cmp
les
sbbb
sbb
popa
inc
sbb
sbb
mov
rcll
xchg
in
xchg
push
sbb
inc
push
mull
dec
mov
js
movsb
outsb
stos
fldt
jmp
in
push
stos
aas
pop
push
push
bound
fadd
push
mov
push
push
lds
inc
mov
call
cmp
mov
aaa
mov
xchg
lret
adc
jmp
enter
dec
add
out
icebp
lcall
mov
xchg
orl
shl
push
fdivrl
mov
add
repnz
pushf
int3
nop
fmull
pop
fstpt
cmp
vpextrw
lds
sbb
pop
aad
nop
jb
mov
and
insb
fwait
shll
xchg
inc
and
xorb
xlat
pop
push
xor
mov
gs
mov
into
ffree
pop
ds
hlt
cmp
pop
ds
fcomps
ss
mov
sbb
pop
push
movsl
mov
sbb
push
and
adc
mov
cmp
iret
inc
cmpsl
je
pop
push
scas
mov
mov
cmc
gs
int3
add
mov
add
mov
lahf
pusha
xchg
pop
and
cmp
xchg
mov
xchg
mov
iret
add
xchg
push
pop
mov
cli
icebp
insb
adc
lds
push
xor
dec
xchg
cwtl
mov
fisubrl
bnd
fwait
out
pop
insb
mov
enter
jne
mov
punpckldq
fcomps
or
add
loop
mov
aam
cmpsl
imul
inc
pop
sub
aas
lret
mov
cld
mov
add
and
or
mov
cmc
dec
add
scas
adcl
push
mov
loopne
lock
js
or
rcrb
xchg
es
shlb
pop
pop
loopne
push
fidivrs
xlat
mov
add
shl
es
es
add
movsb
mov
xchg
xor
xchg
jmp
or
push
mov
pushf
clc
sbb
cmp
in
cmp
xchg
loop
mov
pop
insl
int
mov
addr16
push
dec
mov
movsl
and
pop
in
insl
loopne
inc
xchg
xor
sti
out
sbb
adc
jmp
xor
imul
sbb
jb
add
adc
call
push
into
test
fldl
xor
inc
dec
mov
pop
sub
mov
sbb
scas
fistpl
sbbl
dec
stos
faddl
jne
std
push
daa
pop
jbe
pop
std
cmpsb
scas
mov
in
jp
xchg
sub
or
int
sub
adc
in
jae
mov
adc
or
fisttpll
sbb
into
ds
dec
inc
mov
jae
dec
stc
mov
div
push
sbb
addl
data16
enter
dec
cmc
cmpsl
jo
iret
xlat
jb
mov
mov
cmp
jmp
push
dec
sbb
je
loope
pop
mov
jg
bound
pop
cmp
xchg
test
mov
shrl
add
push
mov
jge
sub
jno
lret
xchg
jae
mov
pop
aaa
push
and
imul
jmp
aaa
in
jno
setge
xchg
icebp
je
xor
mov
bound
jne
mov
and
icebp
push
add
cld
loop
pop
adcb
jae
xchg
sub
into
cmc
and
pop
inc
cmp
cmp
daa
and
mov
aam
mov
or
push
push
adc
push
mov
push
dec
pushf
in
pusha
fcompl
mov
jp
pop
scas
sbb
dec
cmp
insb
cmp
mov
pop
xor
cmp
or
jg
dec
clc
dec
inc
jmp
sahf
jg
cmp
mov
mov
lret
shr
fs
mov
inc
mov
fmull
mov
sbb
xchg
mov
xor
sbb
xor
repz
xchg
std
icebp
arpl
ss
push
inc
loopne
jae
ret
lret
mov
sahf
or
loop
ret
aam
mov
nop
test
jp
sbb
mov
and
cmc
and
push
and
xchg
mov
xor
fcoml
clc
sbb
je
sbb
push
and
pop
int
push
mov
inc
ja
cmp
pop
sub
flds
mov
in
stos
mov
out
fcoml
add
rcrb
dec
adc
dec
movsb
sahf
mov
movb
dec
mov
andl
pop
mov
sbb
or
pop
bound
xchg
test
push
jno
repz
cmp
fisubl
icebp
sub
xchg
hlt
shlb
add
not
mov
cli
jmp
xor
sti
mov
jae
mov
insl
addl
addl
jns
mov
push
jns
cmp
clc
insb
mov
inc
insb
in
sbb
dec
xor
popa
jecxz
dec
mov
sbb
mov
decl
lret
or
mov
mov
incl
jo
je
scas
decb
or
jmp
sub
outsl
push
into
iret
sti
fwait
mov
in
pusha
in
jg
jmp
pop
pop
dec
mov
mov
mov
jo
enter
int
test
shlb
mov
mov
and
xchg
jp
outsl
adc
push
push
cwtl
ja
xchg
inc
dec
inc
inc
pop
repnz
in
and
and
jns
sbb
rcl
scas
out
mov
lock
ljmp
rcll
in
xchg
stos
stos
daa
xchg
popf
dec
hlt
jge
idivl
push
fmulp
std
sub
jnp
mov
std
cmovb
pusha
shll
add
mov
cmp
sub
das
lods
add
out
mov
ret
out
arpl
mov
fisttpll
stos
adc
pop
in
stos
mov
push
jb,pn
fstl
adc
jg
mov
dec
add
into
mov
sbb
out
push
jno
cmp
in
and
orl
dec
lds
inc
lods
mov
jno
rcrl
sub
jnp
pop
inc
repnz
aad
sahf
dec
cmpsl
sahf
lret
int3
dec
jo
clc
pop
jp
push
loop
mov
std
punpckldq
movsb
fcompl
and
out
push
cmp
sbb
xchg
jecxz
jo
inc
pusha
push
mov
loope
inc
sarb
lcall
xchg
sti
xor
pop
cwtl
hlt
jmp
xchg
out
jmp
sub
cmp
ljmp
mov
loopne
cmp
jae
in
pop
pop
mov
cltd
inc
lock
adc
pop
pop
subl
mov
arpl
xchg
js
in
std
jbe
adc
stc
push
or
or
popw
mov
sub
inc
cmp
fwait
pop
mov
xorps
shlb
inc
sarb
test
scas
mov
push
rolb
mov
data16
lahf
icebp
sbb
enter
nop
xchg
add
dec
mov
and
push
sarb
loop
shlb
gs
fwait
mov
push
fiadds
mov
movsl
dec
mov
insb
mov
dec
nop
enter
mov
movsl
jge
xchg
loope
mov
dec
fsubrs
and
aam
movsb
add
addr16
ret
xchg
out
fistps
pop
in
push
push
add
jo
dec
jo
or
mov
mov
fcmovnb
xlat
pop
and
in
mov
inc
lahf
jecxz
xchg
std
into
sbb
add
push
maskmovq
idivl
fwait
int
sub
xor
cmpsb
ljmp
mov
aaa
cmp
mov
mov
ds
sbb
add
sbb
sub
add
sbb
fwait
inc
fisubrl
or
lods
sub
les
ror
in
std
mov
xchg
and
or
test
movsb
setl
mov
into
icebp
lahf
fcom
fstps
fimull
mov
sbb
mov
mov
mull
jle
jb
sahf
pop
push
jge
pushf
jl
ret
aad
in
dec
push
imul
inc
test
in
mov
pop
outsb
rol
dec
aas
jb
mov
sub
adc
jecxz
outsl
mov
jge
jle
lds
dec
sarl
pop
xchg
jne
insl
test
lcall
cmp
aad
movsl
pop
in
fadds
jb
test
adc
fs
jge
push
cmp
sbb
aad
jae
addl
aad
or
loop
adc
pop
int
sub
fdivr
mov
push
bound
push
pop
ds
out
mov
decb
shrl
imul
cli
imul
and
inc
push
sub
jmp
mov
mov
lea
not
testl
mov
lds
insb
push
sub
mov
lret
sbb
jle
add
push
inc
repnz
jb
cmpsb
mov
aaa
push
clc
ja
sub
repnz
dec
addb
jle
mov
enter
inc
jl
push
test
lahf
jle
insl
push
ror
outsl
sbb
cwtl
rorl
and
jno
dec
dec
pop
jnp
inc
dec
in
orb
xchg
mov
not
imul
mov
add
push
add
jmp
jbe
fcmovu
inc
testl
dec
aam
inc
enter
xchg
sbb
arpl
sbb
push
and
mov
iret
sub
popa
cmp
mov
push
jns
mov
test
jmp
loope
cmp
pop
adc
mov
cmp
mov
mov
fisttpll
daa
pop
mov
mov
xchg
or
cmp
push
sti
cmpsl
sbb
es
outsl
negl
push
mov
jecxz
pop
call
lods
sbb
pushf
ret
lahf
adc
popf
pop
rolb
sub
push
bound
lock
push
ficomps
int3
cmc
jns
decl
out
pop
lods
push
xor
xorb
insb
adc
pop
test
dec
ficoms
std
lds
lahf
adc
fstps
jae
data16
cmp
stos
imul
lods
jge
les
jne
dec
cwtl
lods
xor
scas
lock
pop
lcall
jge
fadds
xchg
adc
push
dec
lds
aam
lods
mov
and
sbb
scas
out
jo
ja
lods
push
pop
inc
out
push
rolb
pop
xor
xchg
mov
in
push
mov
mov
sti
sub
dec
sahf
push
subl
call
dec
mov
lods
sub
xor
pushf
in
inc
lds
xchg
lret
sbb
jecxz
mov
popa
push
xlat
outsb
daa
cmp
mov
jg
leave
imul
in
ja
push
enter
es
daa
sti
ss
dec
mov
js
mov
cmpsl
testb
xchg
xchg
popf
add
stos
push
jge
mov
sti
dec
stos
imul
inc
loope
test
lcall
xor
imul
cmpsb
mov
xor
mov
icebp
sbb
popf
and
outsb
jne
xor
mov
pop
jae
sbb
call
out
add
jp
sub
push
cltd
scas
jno
dec
stos
adc
adcb
loopne
jae
jmp
rcr
jp
cld
xlat
jnp
or
mov
mov
dec
int3
pop
test
jns
out
nop
pop
add
mov
int
push
push
outsb
out
adc
mov
dec
ss
or
mov
sub
xor
or
into
test
jmp
add
cmpsl
mov
ret
xor
inc
mov
adc
mov
cmc
sar
test
jno
int3
jbe
or
sbb
addr16
adcl
jae
dec
loopne
sti
pop
xor
packuswb
addb
jp
movsl
pop
repnz
mov
mov
pop
jp
bnd
aam
in
mov
ss
mov
mov
lret
je
jecxz
sub
lret
out
pop
call
adc
cld
sbb
jo
push
push
push
test
xchg
sub
lock
dec
ret
in
mov
jb
pop
xchg
test
and
pusha
pop
or
lea
movsb
or
push
or
mov
repz
dec
and
xchg
sbb
mov
mov
adc
cmc
aaa
xchg
aam
dec
popa
icebp
lods
inc
cmpsb
ljmp
add
mov
mov
mov
xor
add
push
addr16
iret
pushf
adc
inc
lret
xorb
xchg
mov
push
rolb
xchg
mov
outsb
stc
gs
mov
mov
arpl
mov
jno
jnp
test
xor
push
sub
cs
aaa
cmp
mov
aas
pop
clc
cmc
imul
add
lret
js
dec
inc
lret
inc
jne
rolb
shlb
inc
cld
call
cmp
outsl
in
inc
xchg
addr16
popa
lahf
insb
or
gs
inc
les
je
push
sar
cmp
aam
jmp
dec
jns
sbb
push
incl
mov
stos
pop
sbbb
add
pop
addr16
daa
mov
xor
push
fdivrp
xchg
push
jmp
insb
int3
adc
ja
rol
and
jmp
scas
cmp
mov
cmpsl
dec
aad
mov
scas
adc
out
add
aam
in
scas
imul
fwait
mov
iret
pushf
icebp
mov
loopne
bound
xchg
jmp
inc
add
sbb
shlb
test
adc
test
mov
xor
cvtps2pi
sub
mov
aas
dec
cld
pop
xor
mov
inc
pushf
cmp
ret
xchg
fsubrs
js
cmpsl
movl
or
pop
cmp
into
mov
mov
scas
sti
fldt
lea
pop
movsb
mov
int
int
dec
lock
movsb
pop
dec
les
outsb
cmp
inc
or
jae
sbb
subb
or
jnp
jp
fistpl
scas
test
jp
adc
dec
lods
outsl
fsubrp
std
pop
rcr
adc
out
adc
dec
adc
je
push
rcrl
and
mov
xchg
add
sti
mov
xchg
xchg
mov
pop
fxch
inc
inc
aam
in
push
or
cwtl
sahf
lods
xchg
ss
lock
add
clc
push
dec
or
adc
adc
push
sbb
fistpl
jae
mov
mov
sbb
pop
cld
test
mov
jae
popf
mov
pop
mov
pop
jb,pt
dec
push
scas
push
out
jle
sbb
mov
cmp
movsl
mov
lock
push
xor
mov
jae
dec
test
xchg
cmpsl
cli
lea
and
cmp
cli
jnp
andl
xchg
stc
xor
nop
xchg
adc
les
bound
cmp
aam
fsubrs
test
je
mov
adc
or
rcll
fstpl
aad
ss
inc
push
cmc
push
js
mov
inc
cwtl
stos
pop
jmp
cmp
cmpsl
shll
cmpsl
mov
mov
mov
mov
dec
push
imul
js
insl
arpl
mov
sahf
mov
mov
aam
pop
popf
adc
jg
or
pop
jbe
dec
jge
push
adc
xor
rcl
into
mov
dec
mov
addl
dec
push
push
sub
or
ja
add
inc
fwait
bound
mov
pusha
je
inc
std
sub
or
mov
loopne
inc
orb
jl
sub
push
loop
test
leave
and
rcr
push
dec
dec
loope
aas
jmp
xor
lret
push
or
into
test
push
daa
xor
bound
or
outsl
cld
lods
inc
dec
das
pop
lods
xchg
outsb
popa
daa
pop
jno
lahf
ds
lods
movsl
and
inc
xchg
cs
xchg
inc
stc
push
and
mov
in
pop
aaa
jp
and
jns
xor
fcmovbe
loopne
and
xlat
fdivs
cmc
pop
jne
test
jb
arpl
xor
mov
cwtl
and
std
jb
int3
or
mov
sbb
int3
pop
ret
imul
jb
cld
inc
push
jle
outsb
inc
push
push
dec
hlt
fcoms
add
xor
subl
test
rclb
jno
cli
xor
jecxz
inc
add
imul
imul
mov
xchg
add
inc
sbb
jecxz
ds
jp
cmp
dec
xchg
and
repnz
sub
cmpsl
lret
cli
ja
ljmp
fnstenv
jg
xchg
js
add
mov
jmp
pop
push
pop
hlt
mov
add
mov
pop
imul
loop
adc
clc
cmpsb
push
cli
pop
xlat
dec
push
mov
xor
in
push
movsb
push
push
aam
out
fwait
xchg
xchg
xor
in
je
js
jno
inc
lods
cmpsb
mov
jl
push
and
pop
sahf
mov
push
ljmp
sub
mov
sbb
mov
and
adc
popf
mov
inc
dec
xor
mov
add
mov
mov
leave
movsl
fidivrs
mov
mov
fwait
push
push
fidivrl
jmp
scas
repnz
xchg
sbb
inc
adc
ret
jns
push
lds
iret
sub
add
outsb
mov
cmp
rolb
cmpsl
push
mov
sub
addr16
scas
cmp
xchg
lcall
mov
imul
or
adc
fistps
call
cmpsl
in
imul
rcrl
test
cmp
add
daa
into
xchg
idivl
mov
aad
sti
and
sbbl
movsl
jb
shl
xor
and
fcomps
cmp
cld
xchg
sbb
jmp
mov
pop
stc
mov
add
cld
add
mov
das
sarl
data16
lcall
adc
push
and
movsl
test
lods
push
add
pop
cmp
shll
out
ljmpw
outsb
outsb
sti
aaa
mov
xchg
mov
fiadds
adc
push
mov
pusha
sub
ss
inc
int3
les
cli
mov
xor
mov
in
dec
sub
xchg
sahf
pusha
push
xor
add
or
fwait
xchg
orb
push
mov
xchg
push
in
int3
das
jle
pop
enter
ret
stos
mov
sub
sti
sub
sahf
and
lahf
adc
les
xor
popa
mov
xchg
cmp
lahf
outsb
mov
pop
out
jb
or
ljmp
add
xchg
xchg
das
leave
popf
push
shrl
sahf
push
fcoml
imul
cmp
in
jae
shl
fistpll
lock
loop
scas
pcmpgtd
xor
add
jnp
sub
inc
mov
pop
jle
sub
pop
sbb
or
in
lods
add
add
movsl
jne
and
add
mov
hlt
xor
mov
cmp
fstpt
push
inc
in
mov
data16
sub
jmp
add
adc
jg
and
xchg
mov
fnstsw
aad
xchg
dec
mov
xchg
cmpsl
lods
xchg
xor
out
cltd
sbb
dec
pop
mov
fildll
wrmsr
jae
inc
imull
add
jg
dec
add
cmc
fsts
mov
cltd
cmp
fnsave
test
test
cltd
imul
add
repz
out
jae
cs
sub
jns
pop
jp
ljmp
lret
js
psubb
fisubrs
push
shll
push
cli
cmp
jae
and
add
xchg
push
inc
sub
js
out
and
icebp
mov
adc
mov
flds
nop
fnstcw
cmc
jbe
cmp
sahf
lret
pop
popf
or
mov
mov
jne
xor
out
aaa
mov
sahf
shl
or
push
gs
push
inc
hlt
cwtl
lods
and
sbb
ds
andb
popf
mov
cmp
jge
xchg
test
dec
into
sbb
or
lret
lret
mov
clc
sbb
mov
jle
aas
xchg
inc
adc
clc
sbb
cs
mov
add
shr
int
orb
lcall
and
xor
xchg
bound
sti
push
mov
in
mov
cld
stc
add
xchg
dec
sub
imul
dec
repz
xor
popf
fidivs
iret
sbb
insl
into
pop
sub
sbbl
jg
sub
in
pusha
pop
int
sub
or
mov
mov
fmul
test
scas
jnp
out
mov
jb
sub
inc
sub
gs
movsb
call
cltd
push
sahf
je
ret
dec
mov
mov
push
xor
sbb
cltd
mov
xchg
sbb
sub
dec
dec
xor
push
or
jmp
push
loop
je
leave
aam
cli
mov
out
xor
shrb
fisttpl
pop
xchg
loop
shlb
add
je
scas
push
fstpt
les
mov
mov
dec
das
in
cs
mov
cmp
loopne
cmp
and
add
and
and
stos
mov
movsl
lods
fs
scas
cwtl
testl
xor
or
push
fwait
jmp
inc
mov
out
cwtl
sub
lret
sub
scas
pushf
sti
inc
stos
or
jl
and
mov
mov
mov
decl
sub
dec
out
jnp
cmp
mov
aas
lods
out
stos
and
nop
cmp
fchs
add
hlt
mov
popa
outsb
xchg
inc
ss
in
rorl
mov
adcl
xor
insb
pop
out
dec
fisubrs
push
push
sub
fs
push
sti
push
dec
sbb
and
mov
aaa
popa
mov
mov
jg
xchg
popl
scas
testb
sbb
js
xor
pop
adc
add
inc
pusha
icebp
gs
jne
push
popf
add
scas
adc
mov
rcll
jmp
cmp
pop
and
je
rcll
dec
mov
pop
xlat
cs
adc
push
cs
mov
push
inc
jge
push
inc
inc
rolb
nop
cmp
pop
sub
pop
sahf
push
popf
aad
fistps
jmp
inc
pop
leave
xchg
adc
mov
repz
dec
frndint
leave
call
mov
test
js
out
add
push
in
sahf
pushf
mov
lret
call
sbbb
inc
fucomip
mov
pop
cmpsb
dec
mov
pop
rcrl
xchg
testl
mov
xchg
aaa
les
ss
add
jle
cli
es
push
cmp
mov
arpl
lret
sub
movl
rorb
jno
outsb
dec
loop
sbb
lret
mov
push
sbb
scas
cmpsl
in
sub
sti
ret
leave
fwait
pop
jo
jg
dec
cmp
mov
jp
xchg
adc
call
fwait
sub
inc
xor
sbb
lds
cmp
mov
push
js
rcrl
inc
push
pop
pop
lcall
sbb
xor
xchg
mov
xor
mov
inc
xchg
sub
sarl
mov
clc
xor
es
push
add
movsl
js
lcall
xorl
in
xchg
rolb
xchg
mov
pop
jbe
stos
lahf
xor
gs
add
je
out
lcall
insb
pop
sarb
mov
outsb
xchg
mov
and
jne
icebp
sahf
xor
mov
call
lcall
mov
jge
pop
popa
adc
in
nop
or
push
rorb
mov
addr16
in
jle
sti
jo
inc
mov
mov
stc
gs
pop
pusha
mov
aas
divl
mov
mov
or
test
stos
xor
aam
popa
xchg
adc
in
add
in
aam
out
push
mov
pop
mov
jb
sahf
insl
andl
adc
jp
shlb
or
stc
movsb
pop
dec
sub
or
adc
les
les
cmc
sub
sub
mov
lods
push
inc
or
dec
sbb
cwtl
jmp
inc
push
je
ljmp
mov
mov
adc
lret
push
push
mov
push
jnp
pop
jb
std
mov
cld
repz
sub
arpl
xchg
imul
adc
push
repnz
sahf
sub
rol
addr16
out
sahf
fisttpl
mov
or
mov
jg
sub
mov
ljmp
test
out
push
int
into
xor
adc
xor
xchg
mov
popa
ret
sbb
xor
jbe
imul
cmp
or
sbb
xchg
push
inc
push
adc
stos
jb
mov
loope
sub
pop
inc
xor
in
dec
push
js
popf
pop
mov
cmp
lods
cmpsl
and
jl
shrl
bound
cmpsl
mov
mov
rol
cs
js
push
hlt
xabort
pop
pop
loop
jmp
mov
pop
jae
mov
fistpll
dec
mov
mov
icebp
mov
mov
pop
scas
shlb
das
adc
or
pop
xchg
mov
mov
pop
sbb
adc
and
jp
daa
pop
xchg
xor
fidivs
adc
leave
aas
mov
cmc
xchg
cs
outsl
mov
mov
or
frstor
push
movsl
scas
fld
jno
popf
mov
push
push
fmull
fwait
divl
popa
loope
sbb
add
and
fwait
jg
push
cwtl
fimull
popl
jbe
sbb
das
xchg
or
push
int
lcall
rclb
dec
fistl
jp
cmp
lcall
test
fistpl
pop
adc
ret
mov
and
jge
mov
dec
sbb
lret
push
repz
dec
push
out
mov
int3
ret
cmc
push
mov
dec
in
mov
shl
and
mov
hlt
jmp
xchg
mull
xchg
mov
and
out
push
ds
and
loope
fcom
into
pop
div
mov
divb
jns
shlb
dec
xchg
std
mov
jnp
lock
shlb
insl
aaa
cwtl
sbb
and
sub
movsl
pop
andl
clc
test
or
mov
psubb
loopne
outsb
popa
cmpb
xchg
dec
shll
and
xor
insb
clc
mov
sbb
add
push
mov
cmpsl
leave
test
mov
or
lock
ljmp
dec
fsubl
aad
enter
jnp
in
jno
push
push
scas
subb
add
in
jg
dec
rcll
scas
stc
addr16
das
or
mov
cmp
and
jl
rcrl
ds
incb
inc
dec
dec
test
test
stos
mov
inc
xchg
testl
scas
fldt
ss
mov
gs
xchg
dec
lods
fwait
jge
adc
das
scas
sbb
addl
outsb
adc
dec
scas
push
mov
xchg
cltd
or
xor
cld
lds
add
sub
jb
jbe
adc
scas
xchg
jg
daa
adc
xor
lcall
lds
mov
cmpb
sub
jne
add
cld
inc
mov
fisubl
into
pop
lea
movsl
out
bound
lods
fcomps
cmp
icebp
aaa
or
lea
or
mov
and
lahf
aam
sarb
add
pusha
cmp
adc
adc
popa
dec
mov
movsl
cmp
sti
lret
push
sbb
inc
fsub
faddl
pop
imul
cltd
sahf
mov
xchg
inc
add
or
push
sbb
or
jmp
test
lea
shlb
pop
popa
out
xor
add
lods
test
jbe
stos
ret
jnp
loope
out
inc
jns
cwtl
sbb
insl
ss
xchg
gs
cmp
shrl
aas
ret
sub
jg
dec
out
xor
aas
sub
push
out
ss
mov
test
push
call
fwait
xchg
mov
lods
mov
add
mov
push
subl
adc
push
repnz
enter
cmp
loope
sub
push
dec
xor
shrb
lds
pop
cwtl
mov
add
out
add
jl
push
lods
sub
lods
hlt
fmull
ja
cmp
lock
sbb
push
rolb
jmp
ret
adc
xor
mov
add
out
movsl
dec
pop
pop
clc
mov
mov
lahf
jge
sub
xor
shlb
mov
xlat
pop
mov
cmpsl
bound
cwtl
shlb
cltd
test
xchg
xor
mov
rclb
sbb
sbb
rorb
outsl
xlat
test
mov
dec
inc
divb
lret
lahf
in
push
xchg
lahf
mov
xorb
push
pop
inc
popf
test
push
pop
mov
xchg
inc
mov
into
sub
inc
pusha
adc
mov
cmp
mov
adc
sub
stos
stc
sbb
sub
loope
cmpsl
mov
inc
push
lea
mov
out
inc
cmp
mov
adc
lods
test
pop
std
mov
adc
icebp
enter
jns
daa
cmp
cwtl
imul
nop
sub
and
cs
outsl
mov
fs
movsb
mov
ror
out
pop
ret
das
fadd
lods
stos
push
mov
hlt
or
pop
lock
pop
in
les
ret
orl
adc
leave
mov
aad
mov
xor
jne
les
je
jg
shll
out
scas
fsubs
xlat
push
sbb
ss
int3
push
xchg
and
pop
cmp
fyl2x
push
adc
inc
je
stc
ljmp
push
mov
push
jnp
jmp
push
mov
sbb
mov
mov
mov
push
mov
movsb
cmpsl
shll
movsb
mov
cmp
stos
mov
sbb
pop
testl
jecxz
jl
inc
sub
scas
in
mov
ds
icebp
out
pusha
repnz
xor
enter
cmpsb
loop
loop
rol
mov
mov
aas
xor
pop
jle
or
add
jno
ljmp
sub
sub
cmc
loope
add
jecxz
bnd
scas
stc
imul
out
mov
shll
je
inc
mov
xor
mov
out
sub
add
call
mov
cmc
movsb
bound
int3
insb
add
stos
jecxz
and
jl
mov
adc
cmpb
mov
xchg
adc
outsb
lods
dec
lcall
in
repz
fwait
dec
fcoml
pop
mov
push
cmp
cmp
pop
pushf
mov
push
sbb
dec
sub
pop
adc
xor
adc
frstor
insl
or
inc
push
negl
adc
dec
mov
xchg
sahf
push
xchg
cmc
out
cwtl
xchg
xor
push
pop
shrb
imul
negl
std
pusha
fistl
inc
jle
mov
mov
fcmovbe
adc
mov
xor
les
daa
adc
stos
sbb
lods
orl
or
push
in
in
and
sbb
xor
sub
mov
add
pop
ret
pop
adc
aam
cmp
and
inc
in
pop
fs
mov
pop
enter
push
mov
push
adc
jg
sub
imul
cli
add
mov
inc
add
dec
popf
cli
or
call
daa
dec
adc
bound
adc
push
pop
pushf
xchg
push
jae
push
sub
adc
xor
movsb
inc
subb
adc
pop
insl
call
je
stos
ret
ljmp
xchg
mov
ja
ds
fiaddl
lret
push
ljmp
add
xchg
push
negb
leave
pop
xor
or
enter
mov
je
fcompl
mov
mov
push
fistps
cmpsb
bound
cmp
ljmp
movsl
dec
sbb
or
lods
lret
arpl
shlb
fadds
jne
and
mov
xchg
pop
xor
push
in
mov
lock
mov
daa
sbb
or
jmp
and
les
mov
roll
je
popf
jl
shrb
lods
mov
sbb
fdivr
mov
push
daa
mov
sbb
mov
mov
add
imul
sub
cwtl
jno
cmc
outsl
inc
jbe
daa
out
push
mov
lds
fdivl
cs
testb
xchg
pop
insl
stos
cmp
or
aaa
mov
arpl
mov
cmp
adc
cmp
outsb
xchg
adc
mov
dec
pushf
mov
xchg
lahf
push
sbb
inc
lds
xchg
sub
sbb
nop
call
in
mov
outsb
daa
les
js
xchg
dec
pop
xor
ja
jo
cwtl
pop
xchg
mov
adc
mov
pop
cmp
insb
sub
negb
mov
int3
gs
cmc
testb
shl
ja
push
lcall
ficoms
lods
adc
mov
jmp
js
push
push
mov
adc
insb
and
sbb
cmpsb
das
adc
dec
aad
sbb
xor
ljmp
pop
dec
popa
mov
pop
test
inc
xchg
mov
addb
cmp
js
sub
lods
in
lret
jmp
cld
into
xor
xchg
xchg
pop
scas
or
or
stos
lods
xchg
inc
cmp
push
stc
jns
ja
inc
and
imul
jle
test
or
hlt
cmp
mov
push
iret
into
cmc
dec
mov
imul
aas
sub
xchg
adcb
cld
call
adc
leave
ret
or
call
shl
adc
aaa
and
push
add
into
outsb
pop
dec
sub
pushf
loope
and
inc
mov
clc
xchg
sarl
outsl
ja
rcrb
cli
and
nop
gs
hlt
out
clc
divl
fistl
xchg
insl
movsb
xorl
xchg
push
in
xchg
aaa
and
bound
shll
cmp
hlt
xor
scas
inc
dec
pop
ret
add
pop
and
sub
loope
mulb
cmp
es
mov
add
xor
and
or
lea
cmp
lcall
addb
stos
mov
mov
std
cwtl
nop
mov
leave
push
fcompl
mov
mov
leave
shll
and
int3
in
xchg
cmc
dec
push
cmp
inc
stos
loope
divl
addb
inc
mov
add
push
lock
push
fdivrl
mov
out
aaa
rcrb
dec
mov
hlt
mov
js
leave
rcrb
inc
and
cmc
bound
and
ficomps
aad
mov
test
imul
bound
jge
jno
aad
or
mov
int3
sub
out
and
xchg
sbb
adc
push
js
pop
loopne
xchg
xlat
pop
mov
xchg
jnp
or
inc
ja
xlat
arpl
not
pop
dec
pop
mov
in
sbb
cmp
mov
lock
lahf
je
mov
cmp
dec
mov
lock
adc
sbb
into
std
test
cmp
push
mov
inc
rcrb
lea
sbb
lret
out
lea
push
xchg
cmc
adc
xchg
or
pop
pop
jbe
mov
push
lahf
dec
cmpsb
jle
push
mov
sub
fwait
push
outsl
inc
sti
dec
shlb
movsl
jns
sahf
cs
stc
mov
xlat
mov
lea
mov
inc
fwait
xor
cmp
or
call
jns
sub
add
xor
inc
and
in
ss
sbb
filds
js
roll
add
push
pushf
subl
adc
inc
daa
push
add
rorb
xor
lret
popa
cmp
cld
pop
push
pop
push
shlb
insb
adc
jns
je
and
ljmp
enter
xor
lea
dec
shr
mov
mov
addb
out
mov
lret
sbb
fucomi
jo
ret
inc
sbb
sub
push
sahf
mov
xchg
outsb
jl
cmp
es
cmp
stc
push
ljmp
or
in
push
aad
add
add
mov
scas
pop
lret
adc
cmp
decb
xchg
aaa
adc
ficoml
hlt
ficoms
cmp
sahf
jg
mov
sub
add
and
jecxz
fisubrl
and
jecxz
outsl
cmp
daa
int3
add
stos
lods
lds
dec
xchg
push
fdivr
aad
cmc
fdivrp
jmp
leave
daa
push
mov
cmc
dec
fwait
cmp
loopne
call
mov
or
sbb
mov
inc
int3
in
xchg
fs
int
out
addr16
nop
xchg
lret
inc
jae
adc
imul
adc
xchg
mov
push
push
in
jge
dec
xor
fucomp
lret
insl
inc
add
xor
cmp
dec
test
adc
addr16
push
outsl
js
lods
jl,pn
jmp
xchg
in
cmp
xchg
xchg
inc
mov
mov
clc
inc
mov
xchg
lods
jmp
push
jg
mov
adcl
lcall
sub
or
idivb
lock
fwait
xor
out
iret
adc
xor
jae
inc
scas
data16
std
and
sarb
inc
push
lods
sub
lods
xor
iret
lret
fisttps
test
xor
xchg
das
dec
ret
outsl
arpl
adc
icebp
xor
fs
lods
imul
sbb
sbbl
out
xor
sub
jl
adc
out
dec
adc
pop
pop
pop
and
insb
push
fmulp
cs
xchg
jle
jne
or
test
int3
adcb
mov
outsl
pop
sar
arpl
outsb
cmp
and
sbb
pop
pop
and
lret
jne
jecxz
mov
push
cmp
mov
dec
rclb
enter
inc
xchg
dec
cmc
mov
adc
jecxz
jns
jg
and
fs
andb
lret
mov
pusha
cwtl
push
mov
dec
xor
cld
fsubrl
sti
inc
mov
pop
lds
mov
mov
xor
xchg
sub
cmpsb
cmp
add
push
pop
inc
sbb
mov
jge
mov
shrl
dec
pop
gs
mov
xchg
or
pop
add
mov
add
data16
je
mov
fists
jle
mov
mov
enter
mov
inc
mov
jecxz
jno
pop
add
push
out
lds
repnz
scas
lods
fidivrl
clc
js
iret
ret
filds
mov
mov
mov
push
jae
push
mov
dec
fists
mov
adc
stos
fs
stos
ret
sahf
mov
repnz
mov
and
sub
mov
subb
adc
mov
js
xor
cs
push
mov
xchg
jne
das
mov
sysret
mov
rolb
xor
fidivl
jl
mull
mov
cli
and
jecxz
add
aam
ss
push
adc
jnp
add
mov
jg
cmpsb
xchg
push
shll
mov
out
sbb
scas
or
jle
pop
ret
jle
or
mov
scas
mov
dec
push
inc
cmp
jb
jge
xchg
adc
lods
mov
jle
push
pop
cltd
cmpsl
jge
icebp
pop
mov
xorb
and
lods
cltd
push
push
insb
orb
push
imul
int
mov
mov
xlat
test
loopne
pop
sbb
cltd
ds
pop
sbb
or
add
mov
push
cmp
cwtl
xchg
sub
push
lods
push
pop
jp
test
sbb
ret
jg
mov
shll
pushf
xchg
lock
int3
xchg
mov
inc
xor
mov
fs
pop
sarl
cmp
in
mov
push
lea
pop
and
cmp
mov
jp
xor
push
subb
test
lea
sbbb
pop
scas
gs
test
jno
push
insl
add
out
push
ffree
in
jl
jg
scas
add
or
mov
jge
cmc
inc
or
sub
enter
repnz
les
cmp
scas
stc
shl
enter
roll
mov
cmpb
lods
jl
addl
lret
push
pop
sub
mov
nop
shl
add
push
push
inc
fisttpll
xchg
cmp
cmpsb
lods
lock
jl
repz
sbb
in
gs
push
dec
decl
inc
roll
push
cwtl
and
sbb
jae
jmp
push
aas
stos
xor
inc
and
aad
in
sub
xor
int3
xchg
lods
or
push
dec
and
sarb
mov
inc
push
cmpsl
popf
arpl
movsb
and
xor
out
clc
or
sbb
cmp
inc
rolb
dec
or
ss
xor
data16
stos
insb
cmc
scas
jg
jecxz
sub
leave
mov
pop
adc
mov
pop
xor
psllw
add
jno
jbe
jp
sbb
filds
jb
mov
push
mov
pop
push
mov
cld
int3
out
xchg
stc
xchg
xchg
pop
xor
fcompl
aad
push
push
test
push
xchg
pop
mov
imul
sub
in
sub
or
and
rolb
push
and
stos
and
mov
dec
sbb
mov
cmp
jbe
jmp
sbb
sar
shll
cwtl
adc
je
pop
xchg
cwtl
stc
pusha
dec
icebp
fidivl
xor
loop
mov
dec
cmc
js
cmp
in
lods
mov
sbb
mov
mov
or
lock
call
shlb
jns
cmp
jecxz
in
jb
int3
out
shl
fdivr
fmuls
xchg
das
mov
mov
jl
ret
dec
mov
adc
or
mov
movsb
dec
mov
cmp
fnstcw
pop
insb
aam
aad
insb
aas
xor
insl
xchg
lods
jno
add
and
imul
fstl
dec
and
shl
or
sub
popw
mov
pushf
dec
mov
in
push
mov
bound
adc
imul
loop
movsb
lahf
rcr
xor
adc
pop
xor
push
mov
imul
sbb
cmc
lods
test
mov
test
sub
and
or
add
shr
stos
cmp
dec
nop
add
daa
mov
xchg
rolb
xor
xor
ljmp
dec
cwtl
xor
ret
jns
jb
out
stc
jge
pop
sahf
cli
lea
daa
mov
cmpsb
jno
lods
jmp
rclb
wbinvd
sti
xchg
jp
out
addr16
imulb
fcomp
stc
in
std
js
mov
push
je
pop
addr16
jl
mov
adc
dec
xor
add
cld
jge
adc
xchg
fwait
les
lahf
cmc
sub
cmc
iret
inc
mov
imul
add
push
pop
cs
in
sbb
lea
pop
into
mov
fs
test
xor
pop
test
cmc
jmp
shlb
out
pop
int
movsl
jo
pop
clc
sub
mov
loop
ja
mov
and
jo
jmp
out
xor
idiv
mov
repnz
fwait
pushf
jnp
jbe
cli
imul
out
shr
add
cmpsb
pop
pop
fldcw
inc
dec
lock
pusha
xor
insl
loope
xchg
pop
cmpl
mov
stc
in
mov
loop
icebp
lea
push
nop
imull
xlat
fistpl
xor
out
pop
imul
mov
mov
sub
scas
add
sbb
outsl
cmp
dec
icebp
xchg
test
cmc
scas
or
push
int3
inc
shrl
cli
pop
pop
outsb
add
sub
mov
xor
test
fwait
push
loopne
aaa
mov
xor
test
cs
in
daa
loop
xor
push
push
adc
aas
sub
xor
inc
mov
dec
pushf
xchg
hlt
jne
int3
add
out
jle
xchg
js
ret
jp
adc
adc
push
enter
cmpsl
adc
mov
jbe
sbb
inc
fcoml
out
cmp
jmp
xor
xchg
xlat
mov
mov
in
dec
leave
adc
enter
pop
ja
push
out
xchg
frstor
and
mov
cmpsb
adc
call
adc
jae
ja
lds
mov
jmp
fadd
sbb
jo
sahf
cmp
xor
dec
jno
or
ds
xor
outsw
pop
xchg
sahf
sub
pop
repnz
lock
xchg
out
icebp
outsb
ret
mov
cmpsb
imul
loope
pop
sahf
movsb
sahf
das
leave
mov
adc
mov
rol
push
cmp
lods
sub
mov
sbb
xchg
cwtl
hlt
mov
add
xor
xchg
icebp
pop
mov
jl
dec
xor
and
scas
jae
and
and
sbb
cmpsb
jns
pop
or
mov
insb
add
xchg
out
stos
pop
and
jae
jge
mov
incb
aas
bswap
mov
stc
addr16
add
adc
stos
add
xchg
push
mov
loopne
je
inc
rcrb
cmc
aaa
adc
jnp
adc
mov
pop
adc
push
cwtl
jp
addr16
adc
mov
das
push
adc
pop
cmp
add
test
xchg
adc
repz
sar
fldt
jmp
xchg
jl
in
dec
dec
jno
sub
mov
test
mov
jmp
or
jne
inc
in
aad
pop
lahf
movsl
dec
add
aas
dec
ljmp
cmp
popa
dec
nop
adc
lods
add
cli
repnz
mov
lcall
bound
shlb
and
pop
jno
push
andl
notl
mov
inc
lret
je
ret
and
push
xor
xchg
push
shrb
iret
xor
out
inc
mov
outsl
push
aaa
push
pop
mov
jnp
push
pop
jmp
cltd
dec
mov
mov
or
jle
lods
cmp
lods
push
outsb
dec
sub
xchg
jo
mov
cld
std
push
xor
mov
cmc
loope
mov
push
lret
repz
lea
add
sbb
fstl
or
popw
leave
icebp
mov
test
add
int3
pop
xor
pmulhuw
icebp
in
or
push
and
mov
cmp
inc
pcmpgtb
mov
popa
jne
mov
xchg
push
leave
adc
and
push
push
jmp
add
cmp
inc
add
ret
imul
jns
ret
mov
in
cvtpi2ps
or
mov
iret
or
push
adc
into
sub
repz
cmp
jo
les
adc
mov
push
add
hlt
add
out
push
loope
cli
mov
pop
out
into
gs
dec
clc
sbb
rol
js
dec
repz
out
push
inc
loop
int3
int3
std
lcall
js
neg
pop
fcmovnbe
jp
xor
cltd
inc
lahf
lods
fs
xor
stc
jp
add
out
jnp
mov
outsl
fs
js
inc
cmp
mov
mov
mov
data16
test
pop
ja
push
push
pushf
push
in
fldenv
jmp
pop
aad
inc
jne
popl
xlat
jmp
mov
mov
ljmp
pop
stos
xor
sbb
mov
in
xor
push
push
fidivrl
mov
ret
pop
add
inc
nop
cmp
and
lcall
xor
mov
fucomi
dec
push
jecxz
pushf
clc
int
nop
pop
arpl
mov
push
and
dec
push
flds
data16
lret
push
xor
xor
ss
out
mov
dec
jmp
int3
sbb
bound
xchg
outsl
idivl
or
loop
jne
adc
xchg
ds
mov
mov
adc
ljmp
add
mov
cs
mov
cwtl
ljmp
add
pusha
sbb
loope
pop
movb
jecxz
iret
dec
add
lods
mov
insl
decb
push
mov
scas
add
push
shlb
mov
adc
mov
fwait
push
pop
add
stc
cmp
loope
mov
fstps
addr16
push
sub
xor
xchg
sbbb
ror
dec
fwait
cwtl
lea
mov
jnp
fiaddl
and
nop
stos
ss
sbb
or
or
scas
adc
pop
jecxz
scas
push
and
pop
add
sub
add
inc
testl
push
cmpb
mov
xor
sbb
mov
inc
sahf
pop
mov
sub
movsl
adc
mov
pop
dec
insb
sbb
arpl
stos
les
mov
rcrb
mov
jmp
push
sbb
popf
push
sbbl
jp
xor
pop
test
orb
sarl
mov
je
fwait
or
in
clc
or
nop
mov
inc
ror
push
pop
das
xchg
add
and
mov
adc
cli
jge
icebp
sti
lods
movl
call
pop
mov
or
lods
mov
mov
lods
xchg
push
addr16
mov
xor
outsl
xchg
cmp
mov
dec
fwait
rorl
sbb
push
ret
and
pop
xor
mov
ret
cmp
aas
fwait
mov
add
xchg
lock
and
aaa
pop
out
fmull
jnp
mov
sub
jge
cmpsl
je
stos
xchg
aaa
xor
rclb
arpl
daa
pop
lods
add
xor
mov
arpl
aaa
insb
jmp
cmp
imul
loop
mov
sub
cmp
adc
sub
sbb
rcrb
push
or
in
cmp
jbe
mov
mov
push
sbb
lds
sub
mov
add
fcomp
sahf
push
dec
pusha
test
das
jne
lret
fcmovnu
inc
adc
lcall
insl
cmp
fistpl
sbb
in
and
xchg
stos
sahf
imul
dec
pushf
sar
pop
push
and
loop
sub
adc
jecxz
xor
sub
bound
rcr
push
imull
aas
clc
pop
or
lods
out
into
mov
xor
out
adc
pop
testl
push
adc
or
add
sub
sbb
xor
mov
int3
xlat
mov
cmp
inc
xor
xor
and
jnp
jno
jmp
jne
sbb
dec
in
test
sub
out
jae
outsl
hlt
push
cltd
or
rcrl
add
push
push
lret
enter
sub
push
xchg
dec
roll
addl
int3
outsb
jle
int3
repnz
lea
sub
mov
xchg
daa
inc
outsb
stos
in
test
cmpb
add
xor
mov
xchg
inc
add
mov
outsl
movl
aam
sbb
xchg
fisubrs
pop
cmp
xlat
push
fnsave
or
or
aas
push
out
and
jae
pop
adc
scas
pop
mov
push
jae
stos
in
sub
aam
scas
daa
mov
sbb
xor
test
outsb
push
out
lods
into
fstl
cmp
loopne
or
ja
push
ljmp
popf
jle
lahf
dec
xchg
pop
mov
scas
xor
adc
test
or
or
leave
jmp
divb
mov
iret
aaa
movups
negl
or
pop
push
cmc
shl
and
cwtl
lds
or
mov
out
cmpsl
xchg
fmuls
repz
push
and
inc
fcmovnb
rclb
ret
pop
pop
and
arpl
dec
test
stc
push
mov
cwtl
fwait
adc
ss
iret
jl
inc
xlat
pop
loopne
inc
in
xor
cwtl
pop
bound
push
dec
pop
cmpsb
push
hlt
decl
fstpl
lds
pusha
clc
adc
out
xchg
cmpsb
and
out
arpl
lea
adc
xlat
fildll
sub
cmp
sub
pushf
fiadds
ffree
jmp
lret
mov
xchg
insb
nop
sbb
mov
inc
xchg
sub
idivl
pop
leave
jge
xor
and
ds
jo
loopne
xlat
insl
popa
lea
or
add
mov
jmp
addr16
mov
loope
fdivs
mov
stos
sbb
cmpsw
scas
lahf
jge
shrb
mov
gs
imul
push
and
lods
dec
inc
add
cld
jg
or
pop
fbld
add
add
add
push
cs
ja
fsubrs
in
repnz
cmc
sbb
clc
imul
js
mov
outsb
inc
jns
jp
mov
add
fmulp
pop
pop
shll
mov
inc
cli
lahf
aaa
cmp
ja
inc
sbb
add
inc
sub
lret
sub
test
ret
in
pop
outsl
add
jecxz
out
xor
repnz
test
jge
gs
push
call
subb
dec
ret
lahf
js
loope
or
in
sub
add
jo
loope
sahf
repz
push
cwtl
cltd
clc
pop
push
loopne
mov
fdivrl
pop
sbb
int3
les
shrl
sbb
daa
sub
fcmovnbe
movsb
fs
mov
pushf
mov
into
xchg
cmpb
scas
repnz
xchg
xchg
push
out
in
jb
outsl
mov
dec
test
pop
test
pop
and
dec
dec
push
imul
jl
xchg
sbb
sub
mov
push
pop
xchg
shll
sbb
xchg
xor
pop
movsl
idivb
lcall
pop
int
dec
adc
push
jmp
mov
or
mov
out
and
imul
loope
pop
imul
xor
cld
adc
and
or
pop
mov
popf
inc
cmp
mov
pushf
jnp
jl
scas
loope
test
jecxz
dec
jp
sbb
cmpsl
repnz
sub
mov
fdivrs
mov
loopne
aad
or
mov
or
scas
cmpsb
test
dec
cmc
mov
lods
sti
rorl
cmp
sahf
fstpt
add
hlt
aam
pop
sbb
mov
jb
mov
test
xchg
bound
pop
jl
je
or
std
pop
inc
insl
adc
dec
not
daa
sbb
sahf
fimuls
xchg
sahf
rcrl
push
insb
push
rorl
mov
sub
push
sub
aaa
lahf
and
cmc
pop
xor
stos
addr16
ljmp
push
xchg
pusha
push
and
mov
mov
xchg
mov
cs
jle
mov
lock
xchg
addr16
cmp
das
das
movsb
dec
imul
inc
ds
xchg
xor
orb
fmull
out
push
or
dec
mov
and
push
fldt
adcl
popf
cmpsb
sub
scas
cwtl
ret
inc
movsl
shlb
out
push
std
shrb
adc
xor
sbb
pop
jae
dec
out
lret
aam
dec
mov
pop
les
jns
mov
shrl
sub
fwait
imul
sub
cmc
lock
adc
pushf
jg
xchg
subl
sub
or
pop
pop
push
lcall
adc
ljmp
shlb
iret
aas
cmp
xchg
mov
iret
dec
jae
fsubrl
scas
lds
lock
sub
js
mov
int3
lea
cmpsl
mov
xchg
mov
pop
outsl
jle
incl
loope
and
nop
fs
stos
inc
cld
mov
or
cwtl
aaa
push
fnstenv
sub
popa
mov
stos
es
call
and
icebp
sbbb
in
dec
sub
shll
cmpsl
js
fsubrp
insl
test
sbb
push
out
test
mov
pop
xor
adc
mov
dec
mov
dec
cli
and
or
stc
or
mov
scas
outsb
lods
fimull
xchg
js
xor
sub
push
cmpb
sbb
sti
dec
test
insl
pusha
inc
push
test
js
lahf
mov
cmp
int3
arpl
fsub
pop
sti
clc
pushl
adcl
pop
dec
fistpl
push
into
sub
xchg
lds
jo,pn
pop
in
jns
faddl
hlt
dec
pop
decl
hlt
inc
push
push
cmp
movb
insb
rorl
cmp
out
sub
jbe
cld
sbb
push
idivl
mov
lret
iret
in
scas
xchg
dec
push
adc
cmc
lds
js
sub
popa
xchg
sub
imul
pop
mov
lahf
cmpsb
inc
mov
imul
call
fcomps
lds
cld
sti
inc
test
out
iret
dec
cmp
jp
fbstp
jns
sbb
fs
jg
mov
jle
fstl
je
adc
lret
cmp
into
pop
mov
popa
jg
hlt
mov
cmc
movsb
mov
leave
mov
loopne
shll
es
jle
or
movsl
cwtl
pop
gs
add
push
push
xchg
inc
inc
ret
aam
cli
jmp
pop
inc
dec
pop
mov
into
fcmove
lods
adc
mov
mov
imul
lahf
dec
xor
dec
out
call
cmp
popf
lcall
or
sahf
test
aam
cmpsb
int
sahf
sarl
test
dec
dec
inc
xor
int
mov
xchg
gs
inc
sarb
mov
les
fwait
iret
dec
or
mov
add
mov
jae
push
inc
outsb
in
in
retw
mov
sbb
push
cwtl
imul
shrl
pop
or
fs
out
mov
mov
iret
int3
cli
jp
and
lret
sub
shll
inc
pop
andb
testl
out
aam
sbb
push
mov
sbb
shlb
std
mov
add
rcl
dec
les
aaa
jae
cld
xchg
ror
jns
xor
pop
inc
enter
popf
jmp
cs
mov
dec
nop
shlb
enter
add
and
sti
xor
push
sbb
pop
jns
ret
mov
scas
jecxz
movsb
movsl
sub
sbb
or
cli
cmpsb
pop
inc
mov
push
push
push
jns
jg
push
orl
sahf
mov
fistpll
cmc
add
call
mov
pop
fsubl
push
dec
data16
mov
out
mov
jo
sbb
xchg
xchg
loope
imul
jmp
sbb
add
add
sub
or
add
and
add
adc
jmp
nopl
pop
clc
push
mov
xor
roll
pop
push
ja
sub
xchg
ret
clc
or
mov
outsl
cmp
cmc
imul
std
iret
and
mov
xchg
push
mov
mov
xchg
in
and
pop
sbb
fscale
inc
mov
push
pop
sub
xor
and
dec
je
lret
push
lds
rclb
mov
gs
stos
popa
repz
mov
jbe
jle
scas
jg
daa
nop
aad
jp
lock
push
sti
aaa
add
mov
sar
jno
in
cwtl
iret
sbb
lcall
loop
inc
jae
mov
fisubs
pop
xchg
fdivrl
xchg
divl
push
jb
data16
xor
andb
pop
mov
jle
adc
or
add
xor
outsb
fisubl
aad
adc
int
movsb
adc
sub
das
hlt
push
jp
mov
jbe
popf
cmp
popf
pop
ficompl
gs
ficomps
call
ret
test
cltd
cmp
scas
loop
notl
mov
stos
cmpsb
ds
jmp
inc
inc
sub
rorb
xchg
push
mov
popa
and
fidivs
es
adc
cwtl
dec
push
jecxz
mov
out
mov
mov
pop
mov
push
out
adc
in
mov
stc
push
mov
popa
sbb
mov
and
add
jo
mov
call
sub
xchg
xchg
rorl
jle
je
mov
xlat
add
jmp
add
dec
inc
stos
orb
push
jbe
xchg
dec
mov
leave
arpl
es
test
jle
popa
mov
cwtl
into
xor
sub
mov
es
add
sub
mov
pop
adc
mov
cmc
std
cmc
inc
fsubl
cmp
es
sub
mov
sub
mov
mov
mov
adc
aam
fwait
cmp
adc
test
orb
lret
lock
sub
xchg
jmp
sbbl
lea
inc
stos
jmp
idivl
mov
movsl
and
jo
nop
adc
sub
movsl
aam
push
dec
dec
lock
das
into
ja
mov
cmpsl
lods
dec
push
jmp
jbe
scas
movsl
popa
push
cmpl
add
ret
andb
mov
outsl
ljmp
xlat
xor
sbbb
or
push
outsl
mov
cmp
push
mov
popa
add
popf
pop
mov
xorl
adcb
add
adc
cmpsb
add
pop
dec
adc
mov
fs
mov
pop
lcall
test
lock
sub
cmp
lods
push
xchg
jbe
xor
popa
cs
mov
xor
sbb
aam
cwtl
fbstp
stc
lock
or
push
loop
cs
faddp
out
int
int3
sarl
fisubl
nop
cwtl
cmc
iret
jbe
jno
rorb
out
popa
ds
imull
orb
loope
in
js
sbb
lret
lds
sahf
xchg
sbb
stc
dec
mov
sub
into
xorl
adc
lcall
pop
lret
leave
jp
lret
jg
or
adc
xchg
ljmp
sub
addr16
jbe
icebp
add
lds
clc
movsb
pop
insb
cld
jo
fwait
xlat
sub
shl
fwait
icebp
daa
idivb
movb
push
or
and
xchg
pop
outsb
add
imul
xor
push
cwtl
mov
imul
and
and
xchg
push
cli
inc
push
fs
loop
fdiv
test
mov
add
mov
jle
ss
sbb
add
xchg
dec
dec
loopne
je
lahf
xchg
jnp
or
adc
outsb
js
add
lret
push
lea
jge
pop
xor
add
add
fldl
sbb
imul
jg
push
pop
fidivs
call
jb
pusha
es
sub
sti
mov
mov
cmp
into
mov
cmp
stos
xor
pop
jmp
pop
xchg
jl
outsb
fidivrl
nop
fwait
pop
push
in
jb
outsb
or
mov
xchg
repnz
inc
push
mov
mov
dec
call
dec
sub
sub
jbe
ret
cmp
jmp
push
decb
in
test
faddp
mov
iret
fmul
icebp
dec
ljmp
test
lock
dec
or
mov
cmp
sbb
popf
inc
int3
shrb
xor
xchg
cltd
sub
xlat
subb
or
stc
xchg
sbb
out
jo
out
push
out
mov
and
jb
iret
ret
enter
mov
ret
rclb
call
and
scas
iret
push
dec
movl
dec
xchg
xchg
enter
subb
insb
scas
push
dec
js
mov
iret
pushf
es
push
xchg
mov
movsl
or
push
jns
lds
or
mov
mov
movsl
daa
or
or
sahf
ljmp
loope
dec
mov
sub
sti
push
iret
mov
jge
jbe
scas
daa
int
push
lcall
pop
adc
cmc
inc
inc
mov
mov
jo
and
push
in
andb
dec
lods
jecxz
mov
sbb
ret
orl
xor
push
and
cmc
push
lahf
sti
subl
fcoml
test
dec
test
dec
sbb
inc
cmp
outsb
pop
push
pusha
lock
cmp
or
out
jne
inc
pop
daa
xchg
xor
inc
out
int
div
insb
scas
es
mov
insl
faddl
cmp
sbb
test
or
xchg
add
jbe
pop
dec
sub
stos
mov
imul
jnp
jae
stos
lods
xor
or
iret
xlat
pusha
push
sbbl
push
test
xor
dec
xchg
fsts
and
insl
pop
fadd
cmc
xor
ss
lock
leave
push
inc
sbb
lret
cmc
outsl
clc
call
lds
pop
movb
jge
repz
mov
je
ja
mov
add
aad
mov
sbb
out
xor
mov
call
jecxz
mov
addr16
inc
loope
fnstsw
js
xchg
sub
mov
fmuls
mov
fbld
out
daa
add
in
out
dec
popf
xchg
lock
pusha
enter
mov
push
fidivrl
push
movsl
sbb
mov
push
xor
xchg
cmc
shlb
and
push
movsl
xchg
into
dec
mov
or
nop
push
daa
out
inc
test
push
test
xor
pop
xchg
ss
pushf
inc
nop
sub
rclb
jp
sub
sbb
aaa
jnp
push
aad
pop
jb
jge
outsl
sub
fidivrs
sub
cmpb
push
xchg
jmp
aaa
sbb
scas
and
fidivs
aas
jge
pusha
cwtl
icebp
xchg
cmp
cmp
jmp
push
mov
pushl
dec
fnstenv
xlat
and
xor
iret
arpl
in
dec
jecxz
es
xor
sbb
xor
loop
and
enter
mov
jbe
add
repnz
push
cli
aaa
repnz
xchg
or
loope
aad
in
jo
xor
mov
add
sbb
adc
jecxz
in
ds
dec
mov
dec
jne
add
xchg
outsl
cmp
push
mov
rclb
mov
push
in
call
movsl
fwait
mov
aaa
insl
xchg
js
adc
out
fdivrs
std
pusha
inc
cmp
sti
cmpb
mov
xchg
int3
fstps
int3
js
dec
cmpsb
and
arpl
or
or
ficompl
push
subb
inc
insl
mov
add
dec
lock
cmp
push
stc
push
leave
imul
rorb
cs
xchg
jne
pop
xor
cmc
adc
sahf
cmpsl
test
test
das
inc
mov
mov
jb
shrb
jns
jne
dec
int
inc
dec
and
sbb
sub
mov
andb
ret
jb
xchg
int3
add
inc
nop
mov
mov
dec
fcmovnu
jl
mov
inc
imul
and
aas
sub
add
mov
test
jle
cmp
dec
sbb
fcmovne
push
lret
sub
rcrb
inc
pop
xchg
cwtl
dec
pop
ljmp
nop
push
mov
push
adc
out
dec
mov
add
cltd
pop
add
dec
mov
add
pop
sub
cld
in
and
sbb
sarl
imul
out
das
mov
cmpsl
out
add
out
mov
stos
xor
ss
push
sahf
jnp
mov
cmpsl
out
cmp
es
andb
add
sbb
cmp
cmp
mov
pop
add
mov
shll
fstp
push
fimull
sbb
push
add
ffree
cmpsl
mov
xor
mov
imull
inc
xor
and
scas
inc
sub
or
aad
aas
push
pop
test
iret
pusha
in
addr16
xchg
or
inc
iret
and
stos
stos
in
shll
pushf
fnstenv
xor
mov
ss
ss
mov
arpl
add
lcall
mov
sub
inc
add
in
adc
xchg
cmp
mov
aam
dec
xor
push
lods
and
dec
jb
les
mov
sub
ret
shl
dec
sub
add
les
jp
mov
push
push
lods
outsb
inc
cmp
aas
lods
or
imul
xchg
rcll
test
lret
clc
mov
jge
mov
inc
fstl
stos
xchg
test
call
rcl
iret
or
or
adc
inc
jb
sbb
adc
xlat
mov
ret
mov
adc
ja
lcall
adc
sti
sahf
loopne
lds
out
jp
xor
cltd
shl
fwait
pop
adc
mov
or
xchg
mov
mov
mov
pop
sti
cmp
test
mov
insb
inc
rclb
cmp
leave
and
xchg
cmp
addr16
and
and
mov
push
fcmovnb
jno
ret
lods
jns
mov
mov
xchg
push
movsl
push
mov
mov
lods
cltd
cmp
push
int
push
mov
inc
push
adc
stos
xor
mov
pop
cltd
pop
add
movsb
movsb
lret
int
ljmp
in
mov
jno
inc
sbb
mov
stc
inc
jb
xchg
jl
cmp
push
test
movsl
cmp
outsl
insl
shrl
in
sbbl
jb
inc
xchg
cltd
inc
push
and
lods
xor
lahf
sti
mov
xchg
movsb
xchg
pop
addr16
xchg
in
xor
sbb
loop
fwait
inc
aam
cs
test
add
push
out
pop
ret
sbb
in
bound
pop
sub
jb
loope
xor
or
adc
fisttpl
std
je
push
xchg
jle
into
dec
or
ss
jmp
mov
mov
jae
mov
push
nop
push
fs
adc
xor
lock
ret
pop
je
xchg
lahf
cli
sbb
popa
pop
push
pop
imul
rclb
jbe
clc
neg
xchg
in
push
jns
test
pop
jmp
in
inc
pop
sbb
xchg
ja
pop
sbb
das
push
loop
das
lods
adc
xor
xor
xchg
sub
mov
lahf
sbb
pop
or
popf
movsl
icebp
mov
jmp
hlt
push
ret
rolb
mov
inc
mov
in
inc
addl
jb
scas
dec
mull
lea
inc
add
push
xchg
push
or
inc
mov
mov
rcl
addr16
outsb
test
mov
lcall
lods
clc
sub
mov
push
outsl
push
nop
sub
mov
and
pop
xchg
cmp
push
mov
mov
aam
sub
pop
outsb
sti
mov
popf
and
mov
gs
cwtl
push
shlb
outsb
sbb
das
cs
add
lods
movsb
nop
pusha
inc
into
jnp
mov
in
push
rclb
adc
inc
jae
adc
outsl
and
push
lods
push
pop
ss
inc
jno
push
jne
ja
pop
adc
xorl
pop
popa
pop
or
fnstcw
fldenv
and
mov
pop
lds
testl
imul
ljmp
sbb
dec
sub
mov
push
rclb
mov
mov
xlat
and
scas
addl
pop
jcxz
or
fisubrl
pop
xlat
sbb
out
add
sarb
lret
mov
int3
arpl
dec
test
insb
push
sarl
pop
mov
movsb
outsl
xor
or
je
ficompl
xor
imul
sbb
pmaxsw
and
sub
call
dec
mov
scas
pushf
xor
inc
mov
mov
loopne
sub
aas
imul
fadds
out
adc
mov
jge
stos
inc
fldl
fsubs
adc
mov
mov
lcall
xchg
or
pusha
lods
popa
xor
sbb
sub
xchg
sub
arpl
mov
daa
roll
push
cmp
xor
mov
outsb
pop
sar
ja
push
sbb
cld
out
outsb
ror
shlb
lcall
iret
adc
or
inc
lret
pop
xor
adc
mov
jecxz
inc
dec
or
out
je
cltd
shll
pushf
pop
fcom
push
jns
xchg
mov
push
mov
aaa
sub
stc
loopne
mov
add
xchg
imul
dec
gs
cmp
lea
mov
mov
cmc
sub
mov
pop
dec
mov
or
repz
xor
mov
dec
mov
test
add
orb
sahf
cmp
insl
or
loope
adc
inc
xchg
push
lock
jecxz
xor
cwtl
pop
cmp
les
rorl
lahf
fisubs
test
imul
lods
popa
sbb
flds
sub
mov
xorb
ss
cmc
jae
push
jg
lret
lods
or
inc
xor
std
mov
loope
fidivrs
mov
imul
cmpsl
daa
int3
adc
jno
fnsave
xlat
out
pop
mov
lea
dec
shl
js
repz
add
cs
popf
and
mov
lcall
es
out
scas
aas
arpl
mov
sbb
dec
xchg
stc
mov
mov
cs
fidivrs
dec
pop
in
push
lods
sarb
pop
fistps
jo
sub
test
mov
jg
sub
sbb
adc
cmpsl
ljmp
outsl
and
stos
movsl
pop
ficomps
mov
or
sbb
imul
and
lret
out
mov
ret
idivb
jcxz
push
nop
xchg
movsb
cs
gs
leave
loop
cmp
push
js
jns
jl
or
bswap
inc
adc
fldcw
sbb
enter
push
inc
and
xchg
pusha
ss
xor
sarl
testl
adc
jmp
inc
sbb
inc
out
scas
mov
mov
xor
lea
inc
mov
fwait
pop
xchg
pop
cmp
sub
jb
jbe
pop
sub
aad
lock
jg
mov
jmp
aaa
jmp
ret
pop
out
push
pop
sbb
jno
sbb
jo
fbstp
test
mov
in
aaa
dec
sbb
adc
mov
imul
jmp
popa
aaa
adcb
and
jle
sti
xchg
shl
sbb
lret
inc
insb
in
cmp
nop
int3
push
jp
mov
mov
inc
xchg
mov
int3
sbb
adc
cwtl
add
popf
adc
and
pushf
addr16
sbb
add
roll
add
sub
dec
sub
fsubl
aad
les
dec
mov
fldcw
jb
popa
adc
das
sbb
fs
mov
jmp
ret
jp
rcrb
pop
or
outsl
pushf
adc
subl
xor
sub
mov
aas
fcmovnb
sub
cmp
in
ret
cmp
pop
imul
jnp
test
mov
scas
mov
dec
mov
outsb
std
lds
xorb
hlt
jno
cmpsl
fadds
loop
sarl
xchg
sti
pop
adc
jg
xor
cld
lods
dec
dec
es
in
pop
imul
adc
dec
jl
shrl
aaa
sub
mov
lods
jbe
or
into
or
sarl
dec
cli
xlat
andb
imul
fstl
outsl
xlat
adc
shlb
dec
push
xchg
stos
mul
cmpsl
add
push
jp
push
in
cmp
jmp
stc
shrl
icebp
sub
push
xor
add
fwait
es
inc
daa
popf
movsb
stc
xchg
pop
mov
pushf
ljmp
cmp
nop
sub
popf
pop
add
xor
xchg
cmp
sbb
leave
lret
inc
shl
pop
mov
and
aad
mov
jno
mov
xor
outsb
jns
mov
push
xchg
cmpsb
imul
pop
mov
xchg
pop
mov
add
mov
imul
hlt
lods
xor
mov
insb
lret
and
stos
inc
out
loopne
divl
or
adc
pop
and
out
pop
add
dec
ret
sub
mov
mov
add
jl
cmp
out
mulb
push
push
rolb
test
mov
movsl
lret
lret
jmp
add
arpl
push
int
movd
xchg
push
cmpsb
mov
outsl
mov
xchg
ljmp
sbb
out
jo
imul
inc
std
xchg
cmp
not
es
adc
cs
jne
sub
add
jo
gs
xchg
jmp
mov
stos
jo
fldcw
mov
lcall
add
push
stc
adc
jbe
jl
nop
jecxz
mov
sarb
mov
mov
mov
jge
ficoms
lcall
xchg
ret
add
sahf
test
jle
mov
shlb
ss
jne
pop
sub
mov
xchg
add
cld
arpl
mov
adc
data16
lds
imul
add
jno
shlb
jle
ljmp
jge
shll
dec
push
shrb
jecxz
inc
push
jbe
mov
cmp
gs
decl
and
jne
dec
imul
cwtl
fldt
dec
loopne
in
cli
sub
sbb
adc
xchg
cli
inc
mov
ret
out
push
nop
jp
lock
cmp
adc
rorb
andl
add
lret
dec
sbb
ret
bound
adc
or
mov
and
mov
fwait
clc
push
and
outsb
mov
cmp
lcall
push
jne
pop
rcrb
jne
lret
outsb
adc
sub
mov
xchg
lods
popa
pop
negl
jle
inc
dec
push
mov
dec
adc
ljmp
iret
jecxz
add
push
mov
int
test
into
or
mov
add
ffree
cmp
push
adc
pusha
clc
jne
out
cmp
scas
movsb
mov
xorl
xor
sti
mov
int
out
test
push
dec
xor
repz
dec
test
cwtl
mov
int3
push
fsubr
fcompl
mov
pop
and
test
int3
pop
push
ljmp
lods
sbb
notb
fadds
out
cvttps2pi
push
cltd
out
dec
push
sub
xchg
hlt
inc
insl
mov
sahf
nop
add
nop
fsub
cli
dec
jns
add
sbbl
or
dec
push
add
or
shl
lret
lahf
enter
bound
mov
add
imul
mov
fs
mov
loopne
cmp
aam
test
push
pop
movb
cpuid
sahf
sbb
nop
shlb
mov
jnp
mov
leave
sbb
lea
inc
add
aas
xchg
jns
mov
mov
xorl
scas
neg
jmp
or
stos
adc
adc
test
mov
aas
mov
xor
nop
xchg
mov
dec
add
addr16
popf
push
in
dec
push
inc
mov
cmp
int3
dec
xchg
leave
sub
mov
jae
je
cmpsl
mov
les
imul
xor
test
movsl
mov
push
xchg
sbb
movsb
pop
cld
add
cmp
iret
out
out
mov
xor
dec
mov
adcl
cltd
cmpsl
mov
pushf
dec
xchg
xchg
cmp
fwait
sub
jge
shl
add
fstl
insl
mov
xchg
nop
scas
xchg
fwait
add
and
push
dec
xor
es
out
dec
xchg
mov
add
ss
mov
shll
in
xchg
and
lret
mov
movsl
lods
mov
stos
cmp
push
js
insl
mov
xchg
in
push
xchg
inc
jge
daa
sar
int
out
les
or
js
and
xchg
sub
shll
loopne
je
pop
insl
movsb
mov
mov
cmpsl
mov
ficompl
in
fstps
xchg
dec
shrb
popa
adc
out
aad
movsb
ljmp
xchg
sti
jmp
mov
dec
sbb
fs
cwtl
mov
andb
or
out
dec
sub
xchg
fs
xchg
mov
shr
in
mov
xchg
pop
push
adc
xchg
mov
call
dec
addr16
mov
bound
insl
int
sub
pop
cmp
shll
and
iret
and
push
and
jae
repnz
sbb
adc
aas
lret
and
adc
pop
mulb
sub
jl
outsb
faddl
ja
stc
imul
dec
add
mov
cltd
add
xchg
insl
shrb
push
pop
cli
pop
test
pop
dec
inc
mov
lret
and
adc
mov
add
outsb
scas
inc
and
fadds
fwait
push
sbb
xchg
push
cli
scas
inc
fcoml
fbstp
stc
fists
cmp
xchg
xchg
xchg
aas
jne
and
sub
mov
iret
inc
pop
subl
lahf
jns
pushf
imulb
cmp
imul
mov
mov
mov
xor
sbb
cmp
push
test
sbb
cmpsl
pop
dec
lcall
movsl
lds
loop
mov
into
aad
adc
les
cmc
popl
pop
jg
lods
imul
xchg
xor
repnz
pop
loop
adc
sub
iret
add
cmp
shrb
addb
enter
push
stos
xor
mov
imul
push
mov
cli
mov
add
inc
push
mov
add
inc
push
ret
xchg
sti
outsb
in
movsl
cmpsb
or
pop
xor
pop
inc
mov
pop
shll
mov
inc
mov
add
pop
outsb
inc
xor
gs
push
inc
iret
jb
cmp
roll
jg
mov
add
and
push
xchg
cmp
lret
push
xor
out
das
dec
pop
aaa
out
mov
inc
lods
mov
sbb
xchg
sbb
popa
dec
popf
and
imul
call
stc
jecxz
sub
and
mov
loope
into
mov
mov
sub
cmp
inc
cmpb
imul
loop
mov
jno
jno
dec
dec
icebp
pusha
andb
and
add
arpl
fmulp
mov
jle
enter
adc
aaa
lea
inc
in
aam
pop
or
pop
mov
push
mov
sbb
imul
je
das
mov
std
cmp
inc
je,pn
lret
in
into
and
mov
inc
jne
movsb
rol
jns
jb
xchg
and
ljmp
pop
sub
cmp
sbb
xchg
enter
outsl
jns,pn
xor
iret
pop
movsb
cmp
sub
or
jg
pop
add
clc
push
fsubrl
ret
scas
je
pop
inc
sbb
add
insl
dec
cld
jno
jle
pop
jl
fistpll
lahf
fnstcw
mov
and
aaa
lock
sub
clc
int
mov
and
mov
inc
add
sub
lret
jbe
cmc
xlat
movsl
fcoms
push
xchg
aam
movsb
or
inc
insb
js
dec
iret
daa
testb
adc
int
mov
sub
fwait
test
adcl
jae
xchg
rolb
cmp
mov
and
aad
aad
test
mov
mov
out
int
iret
push
push
or
nop
jl
cmp
fmul
dec
stc
push
nop
add
loopne
movsb
faddl
in
add
scas
clc
mov
dec
aad
gs
addb
loope
test
daa
jno
repnz
or
cmc
dec
adc
repnz
lock
scas
xchg
mov
addb
pusha
les
leave
cmp
push
xchg
imul
sub
stos
add
sub
popa
sbb
push
fimuls
mov
es
cmp
shlb
or
jns
gs
stos
ss
jge
mov
cli
jg
push
or
sub
arpl
cmp
popf
outsb
adc
movsl
fdivrl
cmp
dec
sbb
xor
mov
imul
mov
out
cs
sbb
push
int
scas
scas
jmp
sub
mov
sub
rolb
insb
xchg
arpl
jbe
or
jge
retw
fst
sub
test
stos
lea
paddsw
out
xchg
adc
shll
divl
push
inc
mov
adcl
push
fwait
aad
xor
repnz
out
rclb
sbb
xacquire
scas
cmp
xchg
push
inc
jne
sub
cmp
push
inc
adc
pop
and
hlt
hlt
mov
inc
mov
jnp
shlb
mov
loop
or
roll
pop
xchg
insb
lock
cmp
xor
sbb
aad
sub
sub
mov
xor
insl
inc
ret
pushl
loopne
mov
jmp
pop
pop
sub
repnz
sub
imul
shlb
clc
mov
rcr
test
cmp
pop
mov
inc
pop
dec
aaa
imul
ds
out
repnz
lcall
jae
stos
sbb
xor
mov
nop
rolb
rcrl
test
fnstenv
adc
mov
dec
pop
fsubrp
addb
xor
dec
shlb
pusha
push
mov
hlt
je
shlb
imul
mov
add
or
test
iret
popl
xchg
lock
cmp
mov
xchg
adc
lahf
mov
js
testl
push
pop
pushf
sub
mov
cmpsb
lcall
jg
xor
pop
testb
test
lret
cltd
imul
add
cmc
inc
mov
popa
repz
gs
cwtl
imul
idivl
sub
addr16
movsl
adc
lahf
mov
cmp
dec
add
cmpsb
std
jae
test
pop
aad
ret
push
mov
push
jbe
lret
ss
sub
mov
ret
mov
cmp
xor
xorb
adc
rcll
popf
cwtl
jbe
lods
add
fs
push
leave
sub
pop
out
mov
cltd
andb
sarb
fdivp
into
js
mov
pusha
and
mov
push
cld
jge
scas
sub
std
sbb
mov
movsl
adc
xchg
sub
jge
jbe
mov
mov
pop
movsl
cmp
jo
sbb
nop
mov
add
clc
int3
or
sbb
xchg
lcall
dec
outsl
lahf
call
pop
push
mov
xor
sbb
sub
pop
test
adc
insl
cmpsb
test
sbb
jnp
je
jp
push
dec
std
mov
cmpsb
imul
xchg
jne
ret
aas
loop
sbb
imul
lret
mov
addps
or
bound
out
insb
adc
mov
lret
dec
shrb
push
or
nop
lods
stos
sbb
push
cmp
pop
dec
mov
cmp
out
mov
pushf
sub
ror
adc
push
iret
push
xor
sbb
and
outsb
mov
fisttps
adc
pop
push
int3
pushf
jmp
ja
lret
jmp
std
out
leave
sbb
jae
repz
cmpsb
xlat
inc
loop
mov
mov
hlt
out
fsubs
dec
rclb
sub
imul
lret
iret
das
lret
or
mov
or
dec
mov
xor
lcall
lock
into
jbe
ret
dec
data16
or
lods
mov
lock
stc
sbb
std
movsb
jl
jnp
or
jge
push
mov
sub
cltd
outsb
test
insb
jne
test
fsubl
cli
out
push
pop
sub
or
out
jnp
lock
mov
dec
pop
inc
push
xlat
test
jno
dec
inc
adc
sbb
ret
push
stos
je
xor
fs
scas
sti
test
loope
jne
fmul
ja
jmp
jecxz
cwtl
add
lret
roll
xchg
movsb
notb
jle
xchg
cmp
loopne
mov
push
int3
shl
out
nop
loopne
dec
dec
cli
js
cli
push
mov
loop
in
fisubrl
scas
outsb
arpl
pop
cmp
mov
xor
iret
scas
ficoms
or
and
movsb
fidivrs
hlt
dec
or
mov
fstpl
adc
lcall
daa
icebp
push
lahf
lahf
push
dec
lods
test
sahf
dec
sbb
ja
das
aam
insl
out
negl
mov
dec
fisttpll
and
or
int
cmc
into
adc
dec
adc
fmuls
rcr
add
pop
int3
sub
call
sti
pop
divb
push
push
add
ja
ret
add
sub
popa
out
adc
mov
sar
cmp
je
sbb
sti
jmp
fdivrl
mov
cmc
fcmove
push
stos
cltd
mov
loopne,pt
les
jae
dec
insb
and
push
pop
push
cmpsl
test
test
lods
jbe
lock
test
addr16
pop
mov
cmp
repnz
add
and
mov
ss
cltd
lahf
jge
mov
mov
xchg
mov
out
jp
pop
fstl
add
mov
inc
and
jb
sub
sbb
in
popa
gs
mov
mov
jo
or
or
mov
outsl
int
jle
inc
leave
jmp
push
pop
outsl
out
mov
outsb
fdivr
xchg
shll
cmp
adc
or
mov
and
out
in
int
or
aad
xchg
sti
insb
test
jp
in
mov
andl
and
lcall
add
shrl
xlat
leave
add
and
cltd
dec
cmp
inc
cmp
push
je
cmc
xchg
das
and
arpl
add
or
xchg
aad
push
lahf
addr16
or
fucomi
cmp
mov
in
aaa
mov
rcrb
mov
frstor
rorb
ret
sarb
testb
mov
in
xor
add
mov
mov
repnz
inc
mov
adc
shll
scas
into
popf
pop
pop
or
es
mov
push
add
fnsave
aas
cmp
movsb
nop
sub
addb
out
out
cwtl
dec
mov
notb
in
inc
pop
cmpsb
in
jl
jno
dec
aad
mov
testl
cmpl
xor
ja
andb
jle
or
jb
mov
sub
out
pop
xor
insb
sbb
mov
jge
dec
mov
add
jmp
push
gs
int3
icebp
mov
or
add
add
dec
jg
jg
mov
xchg
add
leave
int
adc
daa
pushf
sub
mov
leave
push
pop
enter
jecxz
adc
sub
mov
dec
xchg
inc
and
ficoml
inc
cmp
ficomps
adc
sbb
cmp
jl
daa
jo
or
cwtl
or
xor
lock
imul
sahf
lea
test
popa
xchg
lahf
or
cmp
nop
scas
test
jg
ficomps
and
rolb
xor
rcr
dec
jge
sub
lea
add
cmp
sub
test
imul
mov
icebp
and
in
push
ficompl
jo
or
sbb
or
mov
sub
sbbl
repz
scas
adc
int
andl
inc
cli
in
stos
inc
in
jecxz
and
xchg
sub
in
dec
add
and
jbe
push
mov
adc
mov
imull
jbe
outsb
or
orl
dec
stos
mov
fidivrl
loop
daa
inc
test
pop
adc
push
aaa
pop
mov
loope
in
out
in
ror
mov
idiv
xlat
push
mov
mov
scas
inc
shlb
xacquire
push
aad
or
mov
loope
xor
cmpsb
xor
inc
dec
fsts
test
insl
cld
cs
icebp
ja
test
and
sbb
or
xor
cmp
ret
add
mov
in
inc
cwtl
ljmp
mov
adc
adc
pop
ret
pop
cs
cltd
xor
sub
out
add
sub
mov
adc
lret
in
cltd
or
out
sbb
aaa
fcmovb
cmpb
mov
lcall
cmp
leave
jmp
xlat
std
loopne
and
push
scas
mov
test
jo
enter
test
in
xchg
out
enter
lret
das
pop
out
mov
das
mov
hlt
daa
push
mov
xchg
cmp
inc
mov
popf
xchg
lcall
mov
pop
inc
adc
in
cltd
int3
jno
or
insl
push
sub
ret
mov
mov
scas
xor
data16
rorb
subl
ret
inc
lock
in
andl
arpl
jecxz
jnp
adc
mov
sbb
sub
es
add
into
out
inc
mov
adc
aam
dec
mov
dec
mov
repz
mov
pop
xor
xor
sete
lret
out
popf
jmp
add
push
in
je
sub
cmp
add
leave
jp
push
rolb
inc
dec
out
fcoms
cld
sahf
andl
sub
mov
adc
icebp
in
add
sahf
clc
and
mov
pusha
xchg
adc
sarl
mov
test
test
mov
in
mov
xor
dec
mov
push
mov
lods
pushf
int
jmp
inc
ficomps
outsl
mov
fs
or
push
outsb
sbb
jecxz
adc
dec
addr16
int
popa
daa
icebp
xchg
lock
je
and
cwtl
cmp
xchg
out
push
hlt
sarl
sub
test
mov
cmp
test
loope
insb
jle
jg
daa
xchg
rcl
mov
les
sbb
inc
test
push
adc
adc
inc
leave
dec
push
cltd
mov
mov
push
cwtl
outsb
pop
mov
push
ds
inc
bound
movsl
subb
and
jge
push
cmpb
in
sarl
aas
stos
ftst
mov
lret
bound
adc
out
dec
push
ret
or
daa
mov
repz
or
adc
pop
fisubs
lahf
cmp
pop
cmp
push
out
xchg
sbb
pop
cmp
sub
das
sbb
push
sbb
iret
mov
xchg
mov
pop
xabort
push
sbb
fstps
mov
jmp
jne
sub
out
jae
sbb
aas
inc
cltd
sub
jb
dec
ss
daa
mov
and
loop
in
sub
jne
dec
into
je
xchg
push
shll
push
and
mov
lcall
clc
and
je
mov
adc
jl
movsl
test
mov
sbb
jle
repnz
sub
aad
out
jbe
or
xor
jp
pop
inc
and
mov
in
adc
adc
sbb
cmp
loopne
and
and
in
xchg
lahf
mov
int3
mov
fcompl
div
int3
notl
mov
cmp
mov
daa
mov
xchg
movsl
das
dec
cmc
leave
dec
lea
xlat
idivb
bound
mov
test
cmc
xor
add
mov
cmpsb
pop
loop
mov
add
xchg
and
popf
lcall
sub
sahf
insl
mov
mov
data16
jne
cmp
icebp
pop
mov
stos
addr16
rclb
insl
scas
cli
cli
loop
push
mov
xchg
pop
pop
test
leave
or
adc
dec
shll
push
imul
pop
or
filds
push
mov
mov
xchg
in
inc
jg
add
roll
shlb
testl
mov
repnz
pop
out
add
frstor
jg
dec
and
ja
xor
pop
dec
repz
arpl
shrb
lcall
stos
xchg
mov
imul
add
aam
jno
seto
data16
fdivl
mov
test
jle
jg
and
push
lahf
xchg
insl
jo,pn
inc
test
jbe
mov
test
mov
ud0
cmpsb
add
mov
imul
xor
aam
xor
jo
outsb
rcrl
popf
add
inc
lret
aam
shll
loopne
mov
lret
mov
push
sub
inc
or
mov
cli
gs
lods
imul
rorl
xchg
sub
mov
popa
popf
mov
fmuls
jle
cmp
sub
stos
xchg
ret
cmp
mov
fmul
out
cltd
cmc
mov
pop
cmp
cli
outsl
dec
scas
lret
inc
add
aam
pop
mov
lea
and
and
je
aam
or
ret
daa
out
sbb
adc
sub
sbb
ret
out
mov
out
test
fisubs
neg
mov
lcall
int
fwait
movsl
pop
mov
leave
mov
mov
pop
pop
pop
pop
outsb
cmp
and
leave
xor
fnstcw
cmc
addr16
outsb
gs
push
shlb
sbb
sbb
lds
popa
outsl
push
mov
adc
xorl
cltd
add
jp
das
xor
jbe
ret
in
std
xor
jbe
mov
outsl
push
or
stos
js
mov
es
ficoml
jmp
xchg
or
ret
gs
and
or
lret
nop
rol
mov
add
int
xor
movl
push
pop
xchg
fsubp
mov
jle
movsb
scas
adcl
xchg
popl
addr16
movsb
std
adc
fdivrs
inc
and
outsb
mov
imul
and
divl
pop
cmpsb
and
stc
jnp
fadds
fdivp
in
push
xchg
jg
fldenv
mov
iret
cmp
inc
push
sbb
xor
or
pop
sub
orb
es
cmpsb
rcr
push
inc
push
add
mov
xchg
dec
jp
add
stc
rorl
stc
push
movsb
cmp
iret
fwait
inc
enter
jl
rorb
push
shl
mov
xchg
pop
mov
and
fisubrl
lea
in
adc
nop
sub
sub
iret
les
mov
push
sbb
orl
movsl
sub
inc
ja
cmp
lcall
push
cmp
cmp
lahf
add
fcompl
inc
push
jne
or
jns
pop
fxam
divb
mov
lret
cmp
shll
sub
in
mov
js
fimull
adc
dec
push
sahf
push
jge
jecxz
xor
and
mov
aas
jae
cmpsb
in
pop
out
gs
cmp
scas
gs
pushf
pop
repnz
icebp
cs
xor
ja
test
mov
ja
popf
inc
enter
idivb
in
gs
adc
pop
jb
stc
push
loope
pop
xchg
mov
lret
loop
sbb
mov
inc
faddl
pop
sub
adc
pop
fwait
clc
lcall
lret
mov
movsb
jge
mov
outsl
fdivp
add
jecxz
jle
aas
iret
fdivrl
pop
imul
mov
mov
lock
out
gs
cmp
xchg
push
dec
adc
push
sbb
dec
push
test
int
adc
mov
xchg
jns
test
adc
cmc
inc
inc
push
dec
fs
out
mov
cwtl
xor
push
lods
mov
jnp
jecxz
dec
in
pushf
iret
and
repz
mov
pop
sbb
ret
push
pushf
dec
frstor
mov
xor
testb
sbb
lea
leave
sub
shlb
cmpsl
mov
mov
lds
xchg
jecxz
es
lods
sbb
cmp
cli
ljmp
ss
sub
arpl
mov
scas
pop
pop
adc
add
inc
sub
lret
inc
xchg
pop
test
addr16
mov
mov
push
jne
ljmp
jne
cmp
xchg
xlat
pop
cmp
adc
push
in
imul
jo
xchg
cmp
jmp
inc
inc
xchg
mov
sbb
dec
mov
icebp
daa
cwtl
inc
subl
xor
rclb
xorl
mov
int
popf
jmp
imul
insl
enter
orl
add
divb
push
jns
fs
jecxz
aad
clc
xchg
sbb
jecxz
adc
sbbb
adc
mov
jmp
andb
sub
lods
push
push
jne
sbb
mov
lret
leave
pop
ljmp
lret
add
jb
inc
sbb
push
push
push
ds
push
sbb
inc
inc
sub
pop
mov
out
fisttpll
int3
outsl
mov
jno
inc
leave
pop
cmp
aam
mov
or
push
aam
mov
or
pusha
mov
arpl
int
stos
dec
outsl
jp
dec
fisttpl
mov
add
sbb
scas
ret
sub
inc
lret
push
jl
fdivrs
jbe
in
jno
mov
fdivs
push
xchg
pop
int
mov
mov
fists
fs
aaa
mov
into
push
cmc
cmp
ret
xchg
lret
pop
fwait
pop
cmpsl
and
inc
jb
add
in
dec
into
add
mov
pushf
push
push
sub
and
std
xchg
pop
arpl
mov
xor
pop
popf
test
lcall
lret
jb
add
push
loop
dec
ds
push
inc
mov
mov
push
add
stc
mov
add
jns
xchg
push
mov
mov
es
add
inc
das
test
in
ret
andl
outsb
stos
stos
lods
dec
mov
int
daa
inc
jmp
int
imul
nop
gs
push
mov
repnz
dec
shlb
repz
sub
mov
cmpsb
fwait
aas
nop
pop
mov
push
cld
add
pop
or
sbbb
sahf
dec
insl
lahf
jb
movsb
lods
mov
stos
pop
fimull
nop
sbb
stos
inc
enter
out
adc
pop
add
fwait
or
cwtl
std
xlat
int
sub
insl
sub
int3
or
jb
loope
lret
or
push
enter
xchg
ds
fnstsw
xor
push
out
xor
xlat
jo
sub
sbb
mulb
mov
dec
jne
negl
sti
xchg
mov
les
sahf
pop
dec
cmpsb
sub
nop
push
cwtl
repnz
xor
pop
andl
cmp
xchg
mov
sub
mov
sbb
cmp
mov
mov
fwait
pop
inc
scas
clc
adc
jp
pop
into
and
xchg
fildll
xor
or
inc
shl
mov
and
pushf
sub
mov
jp
cwtl
or
lods
mov
hlt
fsubrl
aas
pop
push
and
shl
test
test
insl
jl,pt
and
inc
push
dec
repnz
dec
cwtl
jge
enter
mov
inc
outsb
jae
pop
xlat
xor
xchg
cmpsl
or
shrb
pop
shl
mov
orl
inc
jmp
xor
dec
pop
ret
arpl
test
daa
inc
adc
ret
and
mov
in
out
pop
filds
cmpsb
pop
pop
stos
mov
rcr
mov
lret
or
sarl
lret
cli
inc
push
lock
push
sub
call
mov
sbb
sub
test
js
out
lods
fdivrl
cmp
xchg
push
pop
ds
xor
loopne
xor
push
flds
mov
push
in
pusha
lods
jo
adc
mov
movl
xor
cmp
dec
or
sub
int3
fstl
mov
lcall
xor
popa
pop
xor
mov
es
ds
or
incb
xlat
sti
lods
add
xchg
lea
dec
insl
outsl
in
jg
push
scas
shrl
into
jp
pop
inc
cld
cmpsl
into
out
add
mov
xchg
incl
shrb
fsubrs
or
sbb
clc
mov
pusha
sub
cmpsb
cltd
and
dec
scas
ret
sbb
dec
inc
shll
mov
enter
enter
push
nop
inc
ja
orb
out
push
movsb
add
mov
sbb
lods
hlt
mov
push
dec
in
fmul
jge
mov
adc
les
inc
jnp
int3
cltd
xchg
mov
pop
jae
loope
pop
cwtl
adc
stc
mov
pop
fidivrl
push
push
xchg
movsl
mov
push
dec
push
mov
sub
xchg
jnp
pop
in
call
das
mov
shl
dec
xchg
jne
dec
dec
andl
mov
neg
loop
xchg
jecxz
mov
pop
dec
repnz
mov
cmp
mov
mov
adc
daa
sbbl
popf
push
pop
imul
or
cltd
out
mov
adcl
xchg
cli
rorl
mov
scas
or
outsb
lods
cmp
lcall
sbb
arpl
mov
jl
or
cld
inc
fwait
xchg
rcl
daa
add
fsubl
xor
xor
outsb
mov
in
cmpsl
cmpsl
call
and
pop
hlt
lahf
popf
or
aas
in
sub
sbb
fs
lahf
adc
or
or
cmp
or
repnz
pop
xchg
test
jmp
xlat
cwtl
cld
popf
pushf
mov
lock
cmp
push
or
pop
insl
cmp
inc
jl
fiadds
test
cmp
ret
pop
xchg
and
sub
jp
jb
loop
inc
adc
ss
decl
ret
ljmp
cmp
or
adc
jb
fistl
push
cli
pop
jp
jecxz
xchg
imul
mov
dec
loop
jae
scas
jns
fisubs
hlt
insl
sub
jb
jno
insl
dec
mov
es
inc
xchg
adc
xor
xchg
add
pop
xchg
test
mov
cmpsb
pusha
inc
push
shl
pop
xor
jmp
cli
inc
or
xchg
cltd
adc
out
sbb
pop
out
imul
dec
bnd
push
out
pop
inc
xchg
add
xor
push
cmp
fwait
lret
ret
jmp
add
or
cld
cmp
and
ffreep
and
sub
out
and
shl
mov
rorl
icebp
call
test
lea
mov
out
icebp
add
ljmp
mov
mov
cmpsl
in
je
sub
in
mov
mov
movsl
pop
cld
lock
mov
gs
loopne
mov
mov
cmp
andb
fstl
adc
dec
add
sbb
mov
test
lods
and
inc
mov
imul
mov
repz
adc
dec
push
push
push
dec
ja
lock
mov
ss
rclb
shr
fnsave
movb
popf
add
adcb
sbb
lret
iret
stos
pop
jmp
rdtsc
or
add
sbb
ljmp
sub
sub
lretw
hlt
aad
popa
sbb
sti
mov
sbb
arpl
push
pop
jb
mov
ret
pop
pop
adc
dec
aam
fisubrl
pop
in
dec
in
jbe
imul
push
aad
push
add
lret
lahf
movsb
sti
movsl
ret
out
inc
imul
addr16
pop
hlt
mov
test
sahf
inc
jmp
fcmovbe
ret
in
push
pop
pop
jp
xchg
cmpb
inc
ffreep
mov
not
push
adc
pop
mov
add
loop
sahf
arpl
adc
sbb
adc
push
cs
daa
sbb
jl
cmpsl
add
or
loop
mov
cs
add
test
mov
pop
xor
outsb
loope
xlat
insl
push
jp
mov
mov
int
lret
fnsave
mov
sbb
sub
pop
into
inc
pop
and
pop
or
in
or
cmpsl
loope
jb
movb
push
shl
xchg
std
jb
enter
xor
gs
jg
cmp
lahf
xor
out
sub
cs
add
push
popf
lahf
push
mov
sub
out
sahf
test
mov
jae
jg,pn
jbe
xchg
mov
sbb
movsb
push
mov
ja
sub
cmp
xor
rcll
fdivr
sub
ds
sbb
push
inc
dec
dec
rcr
ja
push
xor
testb
mov
pop
call
push
cltd
xor
and
push
test
mov
sbb
mov
enter
xchg
in
insb
pop
sbb
dec
xor
xchg
inc
loope
les
dec
pop
mov
lods
pop
mov
inc
push
test
idivl
std
cmpsb
mov
std
jmp
or
push
add
mov
cli
or
push
fdiv
mov
rcr
js
and
and
bound
addb
fidivs
inc
mov
es
inc
inc
and
lods
daa
pusha
add
imul
ds
sbb
lock
test
jg
ss
cmp
mov
adc
cmp
lock
or
push
sbb
mov
fsub
xor
cmp
loop
sub
xchg
inc
imulb
outsb
lds
out
pop
xchg
mov
cwtl
inc
inc
das
jbe
dec
lret
sub
mov
jmp
mov
mov
pop
test
movsl
jmp
loopne
jg
inc
inc
push
dec
gs
jae
and
cmp
sahf
lds
add
push
pop
pusha
les
push
fistpl
dec
sub
roll
adc
cmpsl
jmp
cs
push
in
js
lds
out
sbb
sbbb
movsb
das
xchg
xlat
in
in
aam
jecxz
xchg
xchg
mov
adc
pop
mov
cltd
mov
ror
mov
movsl
cwtl
jle
dec
mov
into
bound
xor
or
xchg
movups
in
mov
add
stos
mov
popf
xor
pop
outsb
fwait
xchg
cmp
std
xor
mov
shlb
xchg
mov
out
dec
xchg
mov
pop
mov
decb
mov
pop
insl
xchg
rolb
xchg
dec
push
and
adc
sub
add
orl
repz
jg
cwtl
insl
sbb
xchg
popa
in
pop
pop
imul
push
mov
call
jno
mov
xchg
xchg
mov
pop
add
sub
stos
dec
jmp
mov
mov
xor
xchg
test
insl
sbb
dec
mov
mov
xchg
push
mov
pop
jg
jno
cwtl
dec
fdivs
vpsubw
das
ljmp
dec
stos
aad
inc
and
call
shlb
pushf
cmpsb
inc
inc
or
xchg
mov
testl
movsb
les
sti
lock
sub
sbbb
xchg
push
inc
aaa
ret
mov
jp
xchg
sahf
mov
lcall
fbld
outsl
jno
es
ret
pop
add
dec
xor
cmp
lds
js
test
xchg
pop
add
sub
shll
sbb
or
dec
fnsave
or
mov
loope
jne
add
cmpsl
cltd
leave
xchg
pop
lcall
mov
mov
imul
popa
xchg
jb
cmpsl
inc
clc
movsb
movsl
cmpsl
ret
mov
rcrl
shll
shll
decb
ror
outsl
or
sub
in
cmp
sahf
sbb
xchg
xor
cmp
out
scas
pop
mov
mov
sti
ljmp
mov
aaa
lret
mov
pop
sar
cmpxchg
mov
xor
test
aas
add
pop
sbb
xor
rorl
sub
fldt
adc
xchg
pop
lsl
xor
mov
pshufw
inc
das
call
repz
insb
xchg
iret
das
adc
mov
jle
pushf
sahf
fisubrl
arpl
das
fldlg2
mov
xor
lds
mov
mov
cli
inc
les
movsb
adc
pop
push
call
and
bnd
dec
loopne
push
shlb
into
xchg
inc
and
std
loope
dec
icebp
mov
cs
add
xchg
pop
repnz
jb
cmp
cmp
stc
and
call
jb
divb
cmpsl
repz
mov
sub
mov
pop
repz
aam
loope
out
inc
add
test
and
rorb
mov
mov
gs
fsubrp
sbb
fisttpl
sub
jno
inc
lock
pop
sub
sbb
cs
fsubr
cmp
enter
faddl
mov
pop
sbb
sbb
or
sbb
test
add
push
dec
or
fxch
xlat
inc
jne
adc
je
or
xor
mov
mov
add
stos
inc
mov
xchg
jg
push
or
or
leave
push
xor
clc
mov
push
ja
cs
xchg
lret
jo
mov
lock
ficoms
cmpsl
sub
cmp
lret
lods
pop
into
mov
or
mov
les
cltd
add
adc
xor
pop
and
std
mov
mov
dec
outsb
lods
fnstsw
fcoml
pop
std
fwait
push
xor
mov
push
jp
loope
mov
lahf
cmpl
add
or
shrb
mov
shrl
imul
jg
repnz
push
and
fwait
pop
xchg
or
movsb
mov
fsubrl
test
test
mov
ja
nop
pop
lods
dec
and
aam
cmp
jno
imul
out
cmc
xorb
jo
fisttpll
sbb
nop
sbb
into
lret
stos
push
xchg
das
aaa
sbb
out
data16
jg
cmc
dec
push
in
push
icebp
test
push
popf
sarl
dec
mov
cld
push
out
in
mov
cli
pop
mov
sahf
pushf
pop
movl
xchg
ret
test
adc
xor
mov
lcall
les
repnz
pop
loop
mov
loop
xor
addl
mov
fs
adc
jg
sarl
pop
inc
push
jne
mov
mov
push
rolb
mov
pop
out
xchg
push
fs
pop
xor
ljmp
dec
sahf
cli
insl
inc
loope
or
xchg
pushf
pop
and
ljmp
lea
sub
subb
iret
cwtl
faddp
fcmovnu
mov
and
jae
dec
cmp
or
push
arpl
and
add
fiaddl
inc
sub
ficompl
pop
ss
mov
mov
inc
mull
std
push
cmp
cmpsb
mov
das
adc
insb
dec
aam
rol
fisubs
push
in
je
jg
push
pop
imul
pop
stos
into
push
ret
sub
test
push
and
inc
and
push
sbb
shl
into
jnp
dec
sbb
sahf
add
lods
sub
pushf
pusha
mov
or
or
inc
lods
xchg
pop
lcall
push
mov
cmp
fwait
xor
pop
insb
pop
jecxz
jecxz
repnz
dec
imulb
incl
popa
add
pop
and
ja
test
cmp
dec
xor
inc
stc
imul
movsb
test
lret
rcrb
adc
mov
sbb
ljmp
stc
mov
cwtl
mov
cld
in
push
mov
mov
lret
lea
das
sbb
add
insl
scas
jae
xchg
jns
pop
cmp
adc
mov
hlt
out
mov
xor
push
sar
out
movsl
adc
fwait
jp
cmpsl
and
loope
jnp
cmc
xor
cmpsb
push
jge
mov
push
pop
nop
cmpsl
mov
and
enter
lahf
xor
insl
sub
dec
push
mov
sbb
adc
and
sub
cmpsl
repnz
aas
lds
cld
or
lods
inc
in
push
addr16
in
cli
mov
add
mov
in
rorb
sub
les
sub
sbb
ret
add
in
and
repnz
push
js
imul
repz
and
mov
mov
rcrl
fdivs
or
orb
hlt
push
sti
add
sub
mov
push
add
stos
fildll
adc
adc
adc
mov
in
lds
inc
cmp
bnd
popf
sub
ss
adcb
jbe
cmpsl
mov
mov
or
mov
jo
cmpsb
sub
pusha
push
inc
mov
icebp
sub
push
inc
aad
mov
dec
iret
aas
and
mov
inc
cmp
rcll
and
adc
adc
fwait
mov
subl
ljmp
sbb
sbb
lods
fcmovu
sti
xchg
mov
cmpsb
repz
aaa
std
or
mov
cmpsb
xchg
sub
and
xor
ja
jae
fildl
adc
fwait
jns
pop
or
ss
fldcw
fcoml
mov
aaa
outsl
sbb
sub
mov
jle
popf
jle
xchg
cmp
shrb
add
divl
push
inc
pop
add
push
push
mov
test
xor
push
lret
lods
sub
sti
iret
rclb
in
mov
pop
dec
ficoml
fmull
neg
fwait
imulb
ss
mov
out
in
aad
xor
pop
in
add
leave
adc
shrl
outsl
pop
js
and
lock
fstps
leave
cmp
es
mov
cmp
or
stos
or
or
fsub
cmp
fcoms
or
insl
mov
inc
or
fwait
test
push
xchg
lcall
lret
ret
sti
ds
ja
or
adc
dec
inc
orl
xchg
out
stos
mov
xchg
movsb
ret
xchg
mov
pop
sbb
pop
popf
int3
xor
outsl
je
icebp
jne
gs
pushf
jg
mov
jge
xchg
out
adc
pushl
pop
push
pop
lods
add
shlw
xchg
pop
sub
jne
xchg
xchg
movsl
aad
int3
xchg
adc
mov
iret
xchg
lahf
mov
out
loope
push
push
roll
fadds
xchg
xor
aam
cltd
cltd
repz
cltd
mov
xor
cld
sti
daa
cltd
push
shll
mov
jo
cmpb
fistps
int3
enter
sub
into
adc
jno
inc
subl
out
inc
add
inc
or
pop
test
test
adc
insl
adc
addb
lods
pop
mov
cmpsb
and
fwait
ds
xor
lahf
push
xor
stc
pop
sahf
sub
dec
jle
test
and
mov
xchg
jne
push
call
sti
mov
sahf
push
and
mov
or
test
leave
or
stos
sahf
pop
sub
dec
fistl
mov
loope
cltd
inc
arpl
ljmp
enter
or
cli
data16
add
sbb
jmp
jnp
jnp
mov
add
push
xor
lock
cli
dec
jo
fistps
xchg
sbb
insb
push
pop
je
and
fwait
jae
adc
xchg
stc
push
es
inc
cmp
shr
sub
pop
imulb
adc
subl
ds
mov
jecxz
mov
les
out
mov
mov
movsl
iret
sbb
fadd
pop
je
fwait
xchg
das
pop
cli
pop
bound
dec
xchg
cmp
jmp
xor
iret
add
xchg
dec
lret
mov
cmp
loope
add
add
loopne
sbb
xchg
cmp
xchg
mov
xchg
sub
and
mov
cmpsb
sbb
lds
add
mov
dec
xchg
arpl
lcall
sbb
cmp
inc
mov
loope
and
pop
stc
in
ja
push
sub
xor
out
mov
dec
cmpsb
or
dec
aam
sbb
xchg
pop
mov
xor
cmpsl
sbb
and
mov
out
xor
push
sub
shlb
cmp
and
sbb
jne
repz
out
adcb
std
bound
popl
movsl
mov
lods
sbb
push
mov
push
pushf
fidivs
pop
es
mov
ret
mov
aad
lret
pop
xchg
and
jb
les
hlt
je
ja
scas
into
loope
add
xor
jmp
xchg
aad
in
jmp
std
xor
loop
cmc
jmp
shlb
in
cmp
test
and
js
mov
mov
sbb
psubsw
inc
inc
fidivs
pop
jne
mov
jnp
or
sbb
inc
sub
cmp
adc
pop
jecxz
dec
and
pop
sub
jecxz
mov
aaa
lock
pushf
xchg
sbb
std
leave
cmp
xor
imul
push
sarb
ret
sub
mov
int
cmpsw
stos
ds
pop
dec
das
icebp
push
dec
stos
xor
mov
int
inc
pushf
dec
mov
xchg
out
insl
mov
add
lahf
imulb
mov
pop
fsubrp
popf
dec
stc
xchg
add
xchg
leave
aas
rorl
sti
mov
sti
sahf
or
fidivrl
dec
icebp
ret
repnz
movsb
xor
lret
bound
cmc
scas
jb
mov
pop
sub
xchg
xchg
mov
sbb
daa
icebp
lock
lret
mov
push
out
ficoms
pop
scas
je
popf
adc
xchg
cmp
mov
and
ja
cmp
icebp
or
xor
lret
ret
xchg
in
lret
into
insl
mov
jne
push
push
int3
dec
movsb
inc
mov
xor
pop
scas
or
lcall
js
mov
inc
aaa
xchg
loop
push
maskmovq
pop
dec
or
popa
ret
mov
mov
insl
mov
or
clc
rcl
mov
dec
lret
cmp
lods
and
leave
mov
aas
cmp
in
xchg
ljmp
jo
pop
je
add
mov
mov
dec
add
push
and
add
sub
dec
stos
int
mov
cmp
cmp
mov
cld
mov
sbb
push
int
fnstenv
mov
je
mov
aad
leave
pop
push
pusha
sarl
cld
sbb
ja
or
es
les
xchg
shrb
push
gs
push
mov
mov
sahf
and
ret
cmp
das
das
inc
imul
fsubs
push
repnz
mov
pop
pop
adc
adc
pop
cwtl
arpl
cld
js
inc
into
ret
filds
scas
push
and
idivl
inc
fcoml
xor
inc
sbb
cmpsb
imul
mov
cmp
outsb
jp
pop
or
shrl
aaa
nop
jecxz
dec
and
jmp
sbb
into
adc
pop
mov
dec
cld
dec
pusha
imul
ja
jmp
sti
lea
xor
jno
movsb
push
in
cmp
popa
sbb
mov
mov
xchg
inc
lods
sbb
pop
in
outsl
scas
xor
cmpsl
jge,pn
mov
loop
adcb
pop
loope
rcll
xchg
xor
jno
and
inc
nop
mov
jp
jnp
or
add
xchg
dec
mov
sub
adc
jb
xchg
roll
cmc
out
xor
mov
add
and
mov
add
jp
jg
dec
add
insb
jge
aas
mul
sbb
aam
xor
xchg
xchg
jmp
pop
fwait
lret
or
bound
popf
out
fisubrs
testl
mov
jns
stos
cld
int
ds
stos
scas
adc
dec
inc
mov
mov
jno
sbb
sbbl
dec
out
sarl
xchg
mov
jo
js
in
mov
stos
es
cmpsb
cmpsl
popf
adc
or
mov
and
inc
les
push
aam
jg
sarb
pop
xchg
or
mov
and
jle
sbb
or
jbe
fwait
cmpxchg
or
inc
in
out
xor
jle
ret
mov
data16
jge
and
jns
sbb
cmp
or
fisubs
sub
enter
cwtl
xchg
jbe
push
mov
and
inc
stos
cmpb
loopne
or
cmpsb
test
imul
out
sbb
lock
push
dec
orb
out
dec
ficoml
xchg
pop
inc
xor
mov
aam
cmp
mov
and
pop
pop
pop
cwtl
mov
mov
jg
orl
btc
push
xor
idiv
dec
dec
xor
movsl
bound
mov
test
push
aas
cmpsb
fdivrl
shll
mov
gs
hlt
ja
or
jns
ja
out
sbb
cmp
sub
fsubrs
ljmp
and
xorps
xchg
fdivl
sarl
add
dec
xor
aaa
andl
daa
mov
daa
fdiv
cmp
adc
mov
adc
mov
pop
dec
repnz
shl
cmp
lcall
pop
call
add
pop
stos
loope
xchg
ret
testb
out
std
pushf
pop
pop
hlt
jns
push
push
iret
xorb
cmpsl
js
sti
rcl
cvtps2pi
xor
cwtl
rol
repz
pusha
dec
mov
mov
mov
mov
adc
pop
stc
in
out
adc
mov
dec
clc
pop
push
lahf
dec
adc
mov
test
dec
nop
xchg
and
add
or
rolb
enter
jae
xchg
test
cmp
dec
push
push
cs
pop
lcall
and
push
dec
push
data16
cmp
xor
mov
jae
fcompl
aam
jmp
outsl
mov
pop
cmp
mov
fwait
and
aaa
mov
add
add
mov
dec
inc
jns
shr
xor
leave
sub
out
inc
test
add
popa
sarl
push
jecxz
aam
push
pusha
movsl
mov
pop
inc
cmc
test
or
decl
sub
gs
fwait
xchg
iret
cmp
lock
mov
or
insb
or
sub
scas
xor
inc
icebp
shl
jno
push
push
pop
jl
or
ret
fists
mov
test
pushf
cwtl
fiaddl
fildll
add
sbb
lcall
jle
data16
out
jmp
es
jb
jns
fs
add
mov
jne
fiaddl
sbb
pusha
imulb
xchg
mov
sbb
mov
cmp
daa
dec
dec
sti
sbb
xor
push
fidivrl
shl
inc
lcall
sahf
clc
adc
in
icebp
xor
lahf
and
pop
imul
inc
push
call
lcall
mov
pop
jnp
bound
adc
into
pop
push
push
jnp
outsl
jne
in
xchg
push
iret
pusha
popa
mov
mov
mov
adc
or
push
pop
enter
adc
mov
mov
shrb
lock
scas
adc
sub
mov
pop
mov
ja
adc
fcmovne
cli
movsl
aaa
xchg
pop
insb
icebp
jne
outsb
inc
int3
mov
lds
test
pop
dec
scas
aam
in
sti
aas
pop
loope
mov
dec
ds
lock
xchg
add
push
ss
xchg
int3
insl
lea
sub
addr16
push
in
mov
mov
push
mov
imul
and
in
lcall
add
xchg
xchg
mov
jno
mov
or
mov
pop
sbb
xor
shl
jge
pop
adc
ret
leave
add
jbe
jle
inc
ret
ret
mov
add
inc
lock
sbb
imul
pop
pop
xor
mov
repnz
xchg
loopne
sub
push
imul
and
sbb
sbb
shll
xchg
test
xorl
jmp
dec
or
pop
sub
test
mov
loop
add
xor
mov
dec
imul
push
arpl
jo
repnz
push
sbb
bound
adc
mov
jns
jnp
mov
clc
dec
orl
pop
aad
fisubs
sbb
rorl
mov
movsl
shll
imul
cmp
subb
mov
sarb
cmp
ja
out
fcoml
push
lea
pop
pop
orb
push
mov
cmp
jae
or
pop
pop
pop
adc
mov
lock
in
rcr
or
xchg
sbb
adc
and
xlat
movsl
sahf
mov
and
roll
cmpsb
das
cmpsb
mov
iret
aam
jmp
cmp
stc
pop
test
xor
mov
pop
and
add
pusha
jae
orps
cld
hlt
sub
xchg
add
testb
inc
adc
test
push
push
push
enter
cmc
pusha
ja
les
rorb
subb
jmp
mov
dec
pop
sub
cltd
pop
dec
test
sbb
jmp
lock
xchg
cld
push
ror
stc
or
sbb
sti
test
repz
iret
jno
mov
inc
pop
mov
pop
scas
idiv
mov
and
inc
or
add
in
adc
fisubs
test
inc
xlat
sub
push
in
nop
outsl
ret
popf
push
iret
jne
adc
lcall
popa
addr16
addr16
sbb
mov
gs
bound
cmpsb
jns
xchg
ret
gs
cwtl
inc
xor
xchg
lcall
mov
sti
jbe
aad
mov
subb
xor
xor
bound
inc
and
ret
stos
xor
mov
mov
imul
std
xchg
mov
fs
shl
pushf
cmp
es
ret
js
ret
pop
in
sbb
inc
add
dec
adc
jle
and
scas
mov
les
loopne
jecxz
push
enter
inc
imul
ret
jge
and
fistps
xor
or
lods
jb
add
outsb
nop
out
xlat
and
cwtl
sub
pop
sbb
add
inc
mov
jl
lcall
xrelease
pusha
push
in
aas
gs
movsl
xor
jns
shl
ja
mov
scas
daa
pop
fwait
pushf
rorl
and
add
mov
xor
icebp
and
stc
in
or
add
push
and
ret
xor
push
into
mov
jne
out
mov
sar
in
push
push
ss
jle
inc
stc
fdivl
push
sub
inc
test
xor
mov
cld
or
or
fs
xchg
push
cli
mov
pop
cmp
xor
lock
mov
ja
jb
push
sahf
lock
test
fbld
adc
mov
xchg
xchg
out
pop
mov
les
ljmp
addb
jno
mov
xor
adc
sbb
mov
sub
lea
popa
jmp
stos
imul
mov
adc
jl
movsl
cwtl
dec
int3
enter
in
repz
adc
push
lds
call
int3
push
sub
idivl
inc
xor
aam
cs
mov
cmp
aaa
cwtl
sub
shrb
cld
mov
jp
popf
jecxz
push
dec
mov
pop
dec
repnz
xchg
inc
jne
jb
aas
dec
outsb
pop
push
mov
movsl
imull
inc
fsubr
mov
add
fdivs
pop
jl
ss
insb
sub
pop
subb
mov
or
imul
in
push
and
dec
ljmp
cmp
mov
int3
sahf
jo
addb
jge
rcrb
jno
pop
adcb
les
sub
cltd
ss
xchg
pushf
fimull
mov
push
adc
jnp
dec
xchg
mov
pop
inc
sbb
push
xchg
push
outsl
push
mov
nop
faddl
mov
xchg
jmp
xchg
mov
mov
mov
pop
push
rorl
enter
lret
and
adcl
push
push
sbb
sbb
push
pop
adc
lret
xor
outsb
jbe
cwtl
and
in
fmuls
and
or
cs
stos
out
dec
out
fildll
clc
orl
mov
outsl
daa
mov
in
push
fnstsw
cltd
mov
xchg
aam
adc
rcrl
cmp
or
andl
adc
pop
das
jne
jg
cmc
daa
cld
adc
inc
std
lock
and
pop
rorb
sub
and
lock
test
test
xchg
jecxz
mov
mov
adc
movsl
pop
repnz
xor
xlat
sbb
jmp
sub
sbb
std
adc
cmp
fwait
lods
into
push
gs
push
loope
movsb
add
cld
nop
jmp
shll
mov
sbb
fldenv
jp
inc
sub
cmp
mov
pop
dec
stos
test
jnp
or
idivl
cld
leave
das
lods
mov
inc
je
sahf
or
jns
mov
or
cmpsl
inc
add
add
ret
jnp
dec
mov
cwtl
cli
xor
out
xorb
aaa
push
pop
jnp
sbb
std
rcrb
jmp
ljmp
dec
adc
repz
pop
mov
mov
mov
idivb
inc
mov
ljmp
cmp
out
in
xor
push
jg
mov
jnp
mov
push
test
jne
cmp
pop
push
loopne
jmp
xchg
aam
js
xchg
fstpt
cmp
cli
stos
loop
aad
pushf
repz
and
push
sub
testb
pop
pop
ds
daa
js
jmp
dec
pop
add
xchg
jbe
scas
cmp
jne
cltd
pop
push
ret
notl
push
pusha
pushf
mov
xor
sahf
jle
xchg
fchs
loope
or
aas
xchg
lret
dec
xorl
push
adc
jl
mov
dec
dec
or
xor
adc
pusha
popf
mov
cmp
aaa
fstl
pop
xchg
shll
data16
in
pop
nop
inc
or
shlb
cld
insb
mov
sahf
test
pop
rcrl
push
orl
mov
scas
sbb
jbe
jg
test
mov
sub
adc
out
repz
stos
push
movsl
aam
inc
push
dec
pop
lret
cmc
in
enter
xchg
cmp
xchg
aas
out
sbb
jb
add
fwait
xchg
fbld
orb
dec
loop
aam
lret
popf
sbb
or
cmpsb
mov
xor
or
mov
pop
scas
movb
mov
mov
notb
pop
inc
sbb
dec
cmc
fwait
jge
fcom
push
add
mov
in
push
mov
xchg
rcrb
call
aas
pop
cs
jp,pt
mov
les
xor
lea
aam
xchg
mov
and
sub
out
pop
mov
daa
lcall
jno
xchg
cmp
push
nop
mov
jle
sub
inc
xchg
sbb
dec
jge
btr
jp
mov
or
hlt
mov
mov
jl
jo
adc
push
push
stc
ret
fisubs
sub
rclb
sbb
fadd
test
insb
xchg
cmp
xor
xor
fwait
adc
jns
cmp
sbb
mov
testl
std
outsb
subb
fcoms
out
std
sbbl
leave
les
movsb
sub
jae
push
loope
or
push
mov
add
xchg
mov
mov
shrb
push
cs
mov
add
fidivrs
xchg
jle
into
jo
and
icebp
inc
insl
lret
mov
mov
xor
out
jbe
sbb
lods
mov
cs
inc
test
pop
add
scas
or
iret
daa
cmp
push
mov
jecxz
inc
sub
sub
nop
pop
out
pop
cwtl
xchg
fcmove
bound
ja
jecxz
rolb
push
inc
push
pop
sub
dec
inc
les
scas
inc
imul
rep
mov
and
or
and
adc
adc
test
push
je
lea
jne
push
or
fistpll
cmp
cmpb
je
pusha
movsb
idiv
test
push
and
fldl
push
es
add
ljmp
stos
sub
mov
xchg
inc
sarb
sbb
fs
xchg
aas
aas
scas
sbb
and
mov
movsl
mov
or
inc
mov
push
sbb
lea
addr16
sarl
fst
aas
aam
int3
ficoms
in
dec
insb
push
loope
out
fiaddl
test
mov
cmp
stos
pop
add
inc
sub
mov
or
and
popf
xchg
cmpb
cmp
jb
lods
stos
cwtl
xchg
test
shll
push
cmpsl
fildll
cmp
sar
mov
and
pop
test
adc
jbe
shlb
cmp
pop
call
iret
push
jae
imul
fwait
insl
ds
scas
jae
or
faddl
adc
call
stos
mov
inc
lret
in
xchg
ljmp
aam
push
or
and
cs
inc
or
bound
pop
push
push
shrl
mov
idivl
aad
sub
das
js
out
dec
sub
push
and
mov
in
jnp
std
imul
cltd
arpl
int3
sbb
mov
in
cwtl
loope
adc
jns
icebp
ret
ss
mov
mov
xorb
inc
jnp
insb
decl
es
mov
mov
mov
pop
adc
int
addl
xchg
shrl
in
or
test
fldl
mov
mov
adc
xchg
sub
cltd
add
jmp
outsl
push
push
leave
into
pop
insl
iret
mov
jecxz
cmp
adc
mov
daa
maxps
mov
insb
in
push
mov
mov
sahf
inc
mov
notb
daa
addr16
scas
testl
mov
inc
cmpsb
push
push
push
cmp
setnp
push
sub
mov
sub
hlt
mov
xchg
lret
xchg
xchg
call
fcomps
adc
jg
lcall
push
inc
std
cmp
sbb
or
mov
lahf
sarb
jne
add
jae
mov
sar
aas
out
push
popf
push
sbb
in
fnstsw
loop
jl
or
push
gs
ficoms
loope
sbb
fldcw
push
inc
cli
or
mov
pop
or
and
outsb
push
pop
int3
mov
movsb
movb
fiaddl
adc
imul
aaa
das
mov
and
stc
mov
das
pcmpgtd
sub
cld
aam
xor
jl
movzbl
and
mov
cmp
inc
notb
xor
lret
pandn
mov
sbb
xlat
xchg
dec
ja
mov
sbb
jns
push
push
add
stc
sarb
ss
shlb
sbb
sub
mov
aad
push
dec
aad
pop
xor
repnz
aas
xchg
scas
push
sbb
cmovne
mov
rcrb
or
pop
pop
jno
mov
lods
loopne
mov
outsl
or
sub
ss
cmp
sbb
mov
ljmp
pop
pop
sub
out
sbb
mul
stc
sbb
sub
nop
inc
jb
sbb
out
cmp
or
sub
int3
lock
imul
call
xchg
pusha
leave
repz
dec
pusha
les
imul
and
adc
push
movsb
xlat
paddw
push
pop
ret
ficompl
sub
rcll
pop
adc
lock
inc
mov
cmp
nop
dec
cmp
lret
pop
sub
loope
scas
xlat
xlat
mov
xchg
cmp
or
insb
fsubs
in
mov
leave
pop
and
xor
imul
test
pop
lods
fs
cli
lds
mov
adc
add
xchg
fadds
push
ror
iret
sbb
pop
jge
add
mov
loopne
aam
add
imul
das
inc
test
mov
out
sub
cmpsl
js
sti
xor
insb
sbb
or
clc
inc
stos
outsb
add
rolb
movd
test
inc
cmpsb
ja
into
fimuls
rorl
lds
jmp
das
test
rorl
xchg
jecxz
test
pop
popa
sbb
adc
repnz
mov
dec
shll
jl
sti
aad
mov
popl
and
fdivrl
inc
outsb
inc
into
push
loopne
outsb
push
jg
sub
dec
mov
adc
push
pop
ds
movsl
leave
stos
lcall
push
aam
lds
xchg
mov
jmp
aad
fdivrs
mov
inc
fstps
and
loop
adc
fstpt
cmp
xor
test
lcall
shrl
adc
mov
divb
mov
bound
mov
mov
inc
aam
int
xlat
js
es
popa
xor
addr16
or
icebp
mov
pop
push
jns
insb
push
jno
mov
sub
fsubr
jae
push
push
imul
cltd
lods
pop
xor
jo
js
in
in
sbb
repz
dec
and
xchg
jb
add
adc
daa
add
fucom
pop
mov
fdivrp
fisubrl
adc
add
cmp
mov
xchg
sbb
adc
xchg
inc
or
mov
sub
xor
jb
data16
sti
pop
aas
adc
scas
jecxz
out
lret
incl
addl
scas
fiadds
sbb
loopne
jecxz
dec
xor
mov
cmp
cwtl
xor
and
imul
and
fmull
cmp
pop
nop
popa
adc
push
aas
push
mov
inc
xchg
or
enter
out
fs
adcb
aad
bsf
lret
int
das
jne
outsl
dec
outsl
leave
ficomps
nop
leave
out
jo
mov
mov
add
inc
popa
xor
dec
sub
xchg
lea
add
mov
jge
test
sub
ds
in
lods
pop
cs
hlt
inc
mov
punpckhwd
movsl
addr16
gs
mov
push
mov
jmp
mov
repnz
and
aas
or
pop
stos
pop
jge
js
xchg
loopne
sbb
xorl
adc
push
fs
movsl
push
push
xor
addl
mov
lock
jp
xchg
lahf
pop
and
ss
and
rep
stc
dec
or
mov
test
inc
mov
add
fcmovu
in
insl
xchg
ror
mov
mov
and
push
in
test
inc
sbb
loope
xchg
add
pusha
mov
jbe
ret
in
inc
loopne
mov
jle
fcomps
cld
aad
test
xchg
das
or
inc
pop
insl
testl
mov
fldt
fucomip
push
fidivrs
outsl
jl
mov
sahf
cmp
pusha
int3
jo
or
inc
fstl
mov
pop
fbld
movsl
dec
xchg
mov
and
lods
inc
xchg
jb
and
in
mov
mov
pusha
and
dec
mov
xlat
or
jae
cmp
dec
jbe
xor
daa
sbb
bound
add
out
clc
jmp
inc
outsl
cmp
cmc
test
cli
daa
inc
mov
popf
inc
mov
mov
xlat
popf
loope
fiaddl
xchg
loop
mov
bound
call
std
outsl
int3
icebp
xchg
lahf
mov
mov
add
out
cbtw
jno
add
pop
lods
sarl
pop
rcrb
out
imul
icebp
cld
xchg
or
pop
divb
jns
mov
test
mov
mov
fs
adc
inc
popa
sbbl
aas
test
pop
push
data16
lods
jb
cmpsb
shll
adc
inc
shlb
mov
rcr
sbb
and
lcall
push
xor
cld
fidivl
jne
jl
popf
add
cmp
int3
jge
push
inc
lret
in
and
in
imul
je
or
and
pop
xchg
mov
xchg
out
cmc
sbb
les
and
rcrl
mov
sub
out
xchg
clc
cmpsb
icebp
mov
outsl
adc
adc
fs
lret
jo,pn
sub
in
add
inc
je
cld
mov
cmp
movsl
arpl
stos
xchg
inc
mov
mov
xchg
movsb
aam
jge
xchg
jns
jns
das
mov
mov
les
pop
inc
inc
mov
dec
pop
adc
dec
dec
dec
push
jae
jno
js
push
cli
xchg
inc
mov
jecxz
pop
nop
ss
test
aam
jecxz
adc
fwait
jle
pop
inc
mov
hlt
pushf
and
stos
mov
mov
xor
leave
les
cltd
cmp
lds
lock
mov
sti
pop
cmpsl
jbe
sbb
mov
fildll
xchg
add
pop
into
pop
mov
push
leave
or
push
vpand
jne
dec
jl
insl
loop
outsl
dec
aas
push
orb
aam
lret
test
jp
lahf
or
pop
xchg
mov
arpl
and
mov
adc
in
loope
xchg
lods
cli
jmp
pushf
xchg
aaa
sarb
and
cmpsl
fimull
lahf
dec
sbb
sbb
and
dec
in
cmp
inc
lock
shr
and
clc
mov
fstpl
imul
pop
mov
xlat
ret
inc
inc
nop
pop
daa
or
mov
insb
mov
mov
loop
sub
sbb
adc
lea
sub
repz
cs
pop
stc
pop
and
xchg
inc
inc
lods
xchg
iret
mov
push
push
jmp
cmpsl
xchg
mov
and
xor
dec
jge
scas
cmp
add
inc
pop
popf
cmpsb
andl
adc
and
jno
cmp
mov
loopne
out
xchg
out
jno
xchg
arpl
bound
cmp
int
jle
mov
fadds
dec
or
loope
addr16
fsubr
fsubrp
cmc
xor
jge
jmp
xor
repz
jmp
out
pop
sarb
es
test
pop
jl
aas
cmpsl
loopne
ss
pop
pop
pop
adc
or
cs
mov
adc
in
enter
imul
shll
repnz
cmp
repnz
das
pop
faddp
int
jp,pn
jl
mov
stos
xor
das
jle
inc
jnp
pop
movsb
jp
mov
push
jl
adc
outsb
pushf
ja
dec
sub
dec
or
out
sbb
mov
aad
mov
inc
nop
xlat
out
mov
cmp
push
jmp
jnp
and
and
xchg
mov
movsb
xorb
vmfunc
fisttpll
jp
adc
mov
and
das
sbb
push
loope
jne
sbb
popf
fistps
push
test
mov
jge
push
xchg
in
pop
popf
outsb
cmp
in
popf
sub
jp
repz
sbb
push
mov
test
mov
in
xlat
jle
cmp
insl
pop
stos
ret
fsubrl
ds
xchg
mov
testb
imul
inc
mov
jae
mov
xor
or
xchg
xor
data16
push
fbld
insl
jne
in
xchg
or
js
insb
push
testb
or
cmp
les
cmp
mov
flds
and
out
jmp
xlat
pop
shl
inc
fistpll
les
cmc
push
mov
call
dec
mov
addb
imul
adc
ss
mov
incb
mov
push
jecxz
mov
or
aad
xchg
mov
out
jnp
loopne
dec
nop
cmp
sbb
lcall
arpl
dec
adc
mov
in
movsb
in
fs
mov
pop
aaa
fsts
popf
pop
mov
js
lods
cli
pop
push
ja
and
or
push
popf
fadd
inc
xor
adc
add
push
rcr
dec
push
and
fiadds
pop
cs
push
lea
call
addl
test
jnp
test
jne
ss
sub
sub
vrsqrtss
pop
scas
push
pop
jle
sub
iret
outsl
jnp
cmp
jnp
lldt
ficoml
sub
add
add
aam
pop
sbb
sbb
xor
push
adc
pushf
sub
sub
aaa
inc
xor
and
and
stos
clc
ret
leave
cmp
sbbb
xor
adc
daa
ss
imul
rcrl
add
xor
xchg
jle
je
in
or
arpl
add
outsb
sub
ret
icebp
pusha
lcall
imul
popf
inc
fs
sub
pmaxub
push
xchg
cmpsl
jbe
pusha
jecxz
sbb
repnz
xor
aas
inc
inc
repnz
pop
sbb
mov
sub
pop
push
fnstenv
dec
int
xor
ja
or
cld
pop
jl
daa
mov
in
cmpsb
or
lods
jb
gs
or
dec
push
add
xor
mov
jl
jmp
icebp
shl
adc
in
popa
pop
outsb
scas
inc
cmpsl
pop
sbb
add
repz
mov
movsl
mov
sbbl
sbb
add
ss
cmc
dec
gs
push
hlt
push
pop
pop
call
out
insb
xchg
dec
adc
inc
int3
lcall
sbb
lods
inc
cmp
mov
and
mov
mov
jle
xorl
cs
ss
dec
stc
inc
xchg
add
jg
js
mov
ds
jmp
mov
jmp
inc
jg
xor
pop
xlat
movsb
xchg
inc
mov
stos
push
ficoms
ficomps
add
and
loope
jl
xchg
cmpxchg
push
pop
jl
mov
push
je
jge
cmp
push
outsb
sbb
pop
inc
aad
lods
inc
pop
pop
cwtl
mov
jb
test
leave
dec
popf
in
mov
or
mov
daa
push
loope
fmull
push
sbb
cltd
lret
in
mov
lods
clc
jmp
les
cmpsb
lds
jno
push
dec
add
mov
aam
inc
add
jb
imul
insl
pop
nopw
sbb
pop
fwait
in
jge
push
push
jge
mov
inc
xor
in
add
sub
fcoml
in
dec
mov
sub
aam
push
mov
call
int
arpl
scas
adc
loop
push
sub
bswap
lret
and
mov
sbb
addl
mov
test
mov
mov
adc
addr16
push
inc
lea
test
adc
test
int3
jecxz
fiadds
xor
inc
scas
bound
fwait
aas
int3
xchg
xlat
dec
stc
fnstenv
jle
cwtl
popa
or
ficoms
aad
clc
sbb
rcr
cmp
outsl
js
loop
lds
jne
push
int3
and
hlt
pop
out
out
add
mov
adc
movl
pop
dec
lret
and
insl
sahf
pop
mov
pop
lock
adc
mov
adcl
pop
jnp
iret
les
fnsave
and
int3
adc
sub
push
jle
fcomp
mov
popf
jl
outsl
push
pop
mov
cld
fiadds
add
shr
cmp
jle
push
lahf
mov
inc
jnp
fstpt
jns
xor
pop
out
shlb
xor
pop
adc
scas
dec
mov
mov
aad
sbb
adc
jl
and
enter
push
mov
jmp
enter
cmp
jno
shl
sarb
dec
std
std
out
add
in
or
and
mov
leave
fldcw
js
mov
ja
xor
jmp
adc
xchg
xchg
mov
popa
and
loope
mov
inc
sbb
lods
ret
push
add
sub
mov
xchg
xchg
pop
popf
sar
mov
xchg
jo
mov
movl
cmpsl
aas
lock
andl
gs
xchg
punpckldq
int
aad
ljmp
sub
mov
pop
mov
daa
mov
je
adc
sarl
sub
ss
sub
ret
jge
shl
jae
imul
adc
xor
or
pop
idiv
sti
into
and
lods
mov
cmp
jnp
cmp
dec
arpl
push
dec
addr16
std
rep
lock
mov
jbe
frstor
cmp
jb
les
cmc
cmp
iret
push
pop
pop
lret
xchg
call
jbe
and
adc
mov
les
xrelease
pop
sub
pop
pop
aad
push
push
mov
jmp
dec
sbb
dec
mov
and
adc
icebp
int
add
and
and
jecxz
dec
inc
pop
aam
cltd
mov
jbe
pop
mov
jne
notb
mov
cmp
cmpl
call
lret
lds
aad
test
xorb
call
arpl
inc
mov
enter
cmp
sub
xchg
adc
fcoms
cmc
jae
inc
jo
mov
andl
cmp
pop
xchg
jmp
mov
cmp
mov
inc
pop
cmpsl
fiaddl
sysenter
ret
sbb
mov
mov
and
cli
push
hlt
mov
cmp
pop
jle
inc
mov
fildll
lret
sbbl
cwtl
pop
cwtl
xchg
or
xor
sqrtps
stos
inc
in
inc
inc
addr16
cmpsb
sbb
push
mov
inc
mov
rep
data16
add
pop
rcl
adc
dec
lods
ret
push
jnp
divl
shlb
push
mov
das
mov
aas
icebp
push
jg
imul
xlat
xchg
sub
jns
test
adc
hlt
int
push
pop
bound
pop
mov
jg
xchg
es
pushf
stos
xorb
dec
shll
mov
sbb
lret
pop
fs
out
jecxz
mov
xlat
mov
mov
sbb
dec
jns
jl
sbb
or
cmp
dec
sar
sub
ds
loopne
inc
sbb
fcompl
ljmp
aas
jle
fcoml
jns
jecxz
dec
mov
cs
stos
or
mov
lcall
or
cmp
or
dec
mov
aad
sub
xchg
sub
rolb
lods
aas
mov
aas
ret
stc
dec
pushf
dec
imul
loopne
js
imulb
push
dec
mov
scas
int3
lcall
lds
inc
mov
inc
mov
xor
and
xor
xchg
inc
sbb
jno
loope
mov
popa
in
aad
data16
mov
ret
rorl
cmc
and
jno
ret
jnp
inc
imul
clc
nop
sub
push
mov
dec
pop
pop
mul
addr16
enter
fisubrs
inc
inc
out
lret
aad
cmp
jge
test
xor
sti
adc
push
aas
inc
inc
dec
in
lds
pop
sbb
rolb
je
rcll
cmpl
push
mov
mov
mov
loopne
lahf
sbb
int
mov
adc
mov
lret
push
push
test
mov
int
out
sbb
leave
push
xor
mov
movb
adc
pushf
inc
push
dec
lret
in
mov
xchg
scas
out
insl
sbb
cs
outsl
arpl
inc
jecxz
fisttps
pop
mov
add
fwait
or
jle
aam
mov
jns
lock
sub
dec
sbb
icebp
mov
fmull
xchg
negl
xchg
pop
sub
addr16
into
out
pop
pop
xchg
je
aaa
or
jl
sbb
loopne
repnz
lock
pop
loopne
push
mov
enter
sbbl
aam
into
decb
lcall
test
jle
into
fcmovnb
add
mov
cmp
push
or
jg
inc
out
std
cmp
imul
and
arpl
mov
fwait
push
popf
orl
stos
mov
push
into
dec
inc
popa
dec
repz
mov
mov
std
fbstp
xchg
add
mov
sbb
movsb
inc
testl
popf
dec
pop
xchg
add
lods
mov
mov
push
inc
es
popa
jecxz
pop
loop
ljmp
test
loope
mov
sub
int3
cwtl
adc
js
movsb
add
out
lret
xor
mov
push
mov
icebp
mov
in
and
add
cltd
jecxz
lret
pushf
push
jbe
xor
stos
jo
mov
in
xchg
outsb
les
dec
adc
scas
ds
fidivrl
or
pop
sbbl
mov
jno
test
mov
push
dec
dec
jnp
out
mov
gs
xor
fwait
jns
sar
push
lahf
nop
pushf
mov
push
and
sub
fadd
in
pop
jno
movsb
add
cli
loop
dec
scas
mov
popa
out
and
pop
pop
inc
inc
aaa
mov
hlt
inc
ja
xor
hlt
push
mov
mov
or
dec
imul
jmp
sbb
repz
lcall
mov
pop
push
sbbb
roll
out
daa
sbbl
sbb
jae
push
insb
add
mov
ret
mov
dec
cmp
xor
xorb
adc
shll
xor
imul
mov
xchg
sbb
inc
sbbb
sub
mov
mov
arpl
push
hlt
mov
lret
or
arpl
lea
fnstcw
fwait
xor
add
test
adc
mov
loopne
cs
xchg
mov
xchg
mov
jo
imul
jmp
xchg
jb
repz
mov
addb
xchg
xor
sti
mov
mov
inc
leave
dec
pop
lcall
jnp
cmpl
fs
pop
hlt
xchg
cmp
mov
mov
ljmp
mov
jbe
push
and
cmp
jmp
jb
dec
jnp
mov
xchg
mov
fs
inc
lock
lods
arpl
lods
cmp
mov
in
jnp
pop
adc
jle
aaa
into
sahf
pop
xor
pushf
adc
sbb
mov
fisubrl
mov
data16
fdivs
in
pop
xchg
push
add
mov
dec
push
mov
dec
movsl
std
pop
xor
push
cmpsl
xlat
add
std
or
int3
in
fs
cmp
into
add
int3
mov
mov
push
fsubr
test
aam
test
or
mov
popf
adc
leave
fnstenv
icebp
cmp
xchg
jl
ret
hlt
dec
push
inc
les
or
addr16
in
add
loope
rclb
dec
inc
dec
dec
cmp
jg
mov
out
push
mov
xor
add
inc
inc
push
inc
xchg
and
xchg
cmpl
jo
jge
jge
ja
inc
popf
daa
adc
test
cmpsl
mov
scas
mov
rcll
xchg
mov
and
sub
sub
and
insl
dec
adc
inc
xor
pushf
jnp
xor
sahf
sub
int
clc
popf
mov
out
adc
and
lcall
cmpsb
addr16
enter
shr
mov
test
push
mov
in
lds
repnz
ja
repnz
into
dec
xor
ds
inc
aad
mov
mov
lods
into
in
popf
pop
xchg
test
cmc
xchg
mov
pop
pop
mov
xchg
fidivrl
mov
xchg
std
or
cmp
mov
insl
dec
in
push
ljmp
int
inc
outsl
pop
mov
pop
cmp
push
shrb
dec
cmp
pop
mov
into
fwait
enter
push
cwtl
addr16
adc
inc
dec
bound
stc
mov
lds
rclb
inc
inc
adc
push
ss
in
push
sbb
ret
sar
xchg
insb
je
shll
out
cmc
sub
sbb
mov
imul
shll
mov
sahf
push
pop
xchg
dec
outsb
data16
sbb
dec
jo
es
stos
outsb
cli
sti
aad
fmull
lcall
and
cwtl
add
ret
dec
fsubl
jg
jbe
jmp
sbb
jbe
cmp
mov
gs
in
add
push
int
or
sbbb
mov
inc
lcall
sbb
sub
hlt
lods
jg
push
xchg
sti
and
push
imul
ja
fisubl
or
lea
icebp
leave
aaa
pop
mov
ljmp
jae
push
stos
and
mov
fstps
lds
fwait
pop
jmp
sar
or
loopne
mov
mov
icebp
and
pop
mov
push
aas
push
pop
cwtl
inc
ds
xor
lods
pop
movsb
sbb
shr
fidivs
xor
outsb
push
dec
imul
sti
adc
int
out
mov
mov
bound
call
mov
sahf
pop
mov
jecxz
jl
aam
adc
jns
loope
push
push
add
sub
sub
iret
mov
xchg
jo
ljmp
sahf
in
push
mov
mov
jecxz
xor
or
jae
aaa
dec
pop
and
mov
fwait
xchg
adc
punpcklwd
sbb
fbld
push
sbb
mov
ds
xor
cmpsl
es
mov
xchg
sbb
out
jnp
movsl
jnp
daa
fwait
ljmp
pop
rorb
lea
scas
dec
pop
dec
jno
xchg
xchg
sub
mov
fcmovnbe
popf
mov
cmp
cmp
aad
xchg
lahf
aas
idivl
mov
jnp
jae
icebp
ret
repz
sub
and
mov
insb
bound
add
mov
pop
xchg
movsl
jae
add
imul
cs
jae
hlt
cmp
stc
xor
dec
sub
call
push
pop
sahf
mov
mov
insb
push
movsl
push
jo
sub
push
pop
pop
adcl
hlt
jmp
mov
mov
sbb
push
ret
call
pop
pop
pop
mov
xor
add
mov
push
adc
mov
out
and
mov
ds
mov
loopne
or
push
fbld
popa
or
jnp
cmp
fiadds
jle
fdivr
aas
and
popa
stos
cltd
or
test
cmpsl
mov
sbb
sub
and
mov
or
imul
lahf
cmp
shlb
inc
push
pusha
fimuls
mov
add
sbb
fwait
and
test
nop
inc
or
test
xor
arpl
push
and
inc
jle
movsb
push
sub
cmp
call
cmc
adc
adc
mov
sbb
inc
out
dec
out
js
pushf
fldenv
mov
stos
icebp
cld
jae
or
inc
fimull
pop
sti
add
addr16
int
cmp
adc
mov
jp
push
ljmp
jle
aad
or
mov
xchg
jl
int3
or
mov
pop
pop
mov
pop
das
arpl
inc
cmpsb
in
sbb
mov
inc
adc
inc
jmp
mov
movsl
push
jge
xlat
and
mov
add
sub
adc
mov
daa
mov
sti
dec
mov
les
mov
lcall
scas
add
xchg
fnsave
data16
xchg
pop
push
mov
rcrb
mov
jmp
lods
mov
loop
jecxz
adc
imul
popf
cmp
movsb
int3
outsb
movsbl
cwtl
pop
mov
cmpsl
hlt
repnz
inc
pop
daa
pop
push
xor
icebp
stc
movsl
cmpb
sub
rcrl
aas
scas
shrb
shll
cmpl
sbbl
rcl
orl
xchg
dec
jmp
cs
bound
icebp
ja
fwait
push
data16
test
sti
imull
mov
mov
imul
jo
enter
enter
cltd
inc
int
adc
movsl
xchg
mov
hlt
cmpl
mov
or
les
es
push
inc
mov
push
outsb
rcrl
ds
jp
sub
cmpsl
xor
es
dec
mov
popf
sbb
lods
pop
das
enter
mov
bound
loope
jl
lock
adc
and
iret
add
push
addr16
fidivrl
into
mov
dec
inc
pusha
push
aaa
sub
popa
xlat
adc
mov
mov
jb
push
xchg
xor
movb
mov
das
insb
pop
fldenv
inc
lock
inc
leave
out
push
sub
in
sub
xchg
xchg
and
or
lock
aam
add
mov
imul
leave
xorl
fdivrl
xorl
pop
adc
xchg
outsb
in
cs
cmpsl
jae
sti
sbb
add
shrb
fcmovbe
out
jnp
xlat
or
repz
fcmovnb
hlt
sub
jle
or
jle
movb
pop
sub
cmpsb
xlat
das
xchg
fsubrl
minps
xor
repnz
fadds
fidivrl
pusha
or
je
fs
lods
insb
xchg
jmp
cwtd
xchg
pop
mov
shlb
mov
lret
xor
sbb
cmp
call
lock
subl
or
ret
mov
clc
testb
and
fsubrl
xchg
sahf
jg
in
inc
mov
outsl
mov
jno
add
inc
jg
dec
mov
ret
outsl
subb
and
mov
mov
ss
mov
rcl
inc
outsl
sahf
in
sbb
loopne
dec
rcr
movsb
xchg
mov
push
mov
ret
mov
push
mov
pushf
dec
adc
jnp
cmpl
xor
inc
and
dec
cmpsl
jne
cs
je
ret
dec
in
adc
or
push
add
insb
out
mov
test
xor
xor
popf
pop
mov
jb
or
xchg
daa
pop
sahf
jne
mov
pop
mov
mov
xor
shlb
mov
jae,pn
xor
cld
xchg
test
out
push
pop
add
xor
push
into
jle
mov
js
ret
stos
and
mov
nop
sbb
xchg
mov
push
ljmp
mov
push
adc
stos
lret
shr
aad
sti
test
lods
stos
sahf
pop
dec
push
push
shlb
jge
mov
aam
pushf
mov
test
imul
dec
fldt
or
addl
je
int
es
mov
adc
dec
and
out
add
and
xchg
in
mov
sub
lcall
jge
pushf
adc
dec
dec
clc
in
and
sarl
mov
mov
lds
insb
pop
pop
jae
and
xchg
bound
ja
arpl
aad
pop
push
ret
xchg
popl
out
std
lret
dec
aam
out
push
or
cmc
and
aad
or
xor
adcl
lock
xchg
mov
les
icebp
lods
sub
arpl
lock
es
mov
fimull
lcall
push
hlt
mov
pop
mov
icebp
jge
icebp
cmpl
mov
mov
mov
bound
popa
xchg
xor
pop
in
mov
call
jecxz
jae
dec
and
frstor
out
inc
clc
pop
xlat
add
lds
push
idivl
aaa
mul
jecxz
cmc
push
movsb
and
push
jg
mov
lods
adc
dec
aam
jecxz
addl
jp
cli
push
into
nop
sub
dec
mov
lods
xchg
mov
lea
ja
sti
out
cmp
xor
repz
jecxz
aad
test
pop
or
add
sub
add
push
inc
inc
ret
fnsave
jl
xchg
jne
xor
stc
divl
pushf
leave
cld
jb
repnz
adc
gs
mov
fnstenv
out
pop
mov
stos
jmp
movsb
xchg
repnz
incb
mov
movsb
cmp
xchg
push
pop
rcll
nop
jg
jle
out
mov
mov
mov
or
in
pop
mov
jo
push
insl
aaa
jne
mov
add
sbb
mov
test
movsl
mov
int3
inc
mov
sbb
push
daa
xor
mov
nop
ret
jae
mov
mov
mov
push
sub
flds
jbe
std
int3
lock
or
jo
lahf
adc
or
jge
leave
pop
cmp
andl
mov
xchg
jb
ret
pop
mov
scas
imulb
loopne
mov
ret
das
mov
mov
jle
jp
pop
test
cmp
popf
add
testb
stos
sub
push
push
ret
push
pop
sub
icebp
dec
adc
out
push
rorl
std
fstpl
ret
mov
xor
and
jle
jne
jne
mov
out
aad
xor
ret
pushf
cmp
mov
in
pop
jge
addr16
repz
es
dec
inc
add
decl
insl
mov
shll
mov
in
xchg
or
pop
gs
mov
jb
mov
and
jae
xor
cmp
ficoml
aad
leave
mov
sub
out
and
pop
sahf
movsb
imul
pusha
add
push
movsb
jmp
push
insb
in
shlb
mov
les
and
clc
pop
dec
cmp
in
jmp
jns
mov
cmp
mov
cli
mov
lods
mov
in
out
lret
loope
pop
lds
adc
shrb
jp
lcall
jg
add
push
push
adc
scas
call
in
sbb
mov
jns
jle
js
ficoml
lea
rorl
hlt
fs
jp
daa
jp
ss
xor
cld
mov
jnp
mov
xor
jmp
imulb
ret
and
rcrl
xlat
inc
out
repnz
int
mov
add
inc
mov
ret
cmpl
fst
inc
cmp
sarl
imul
sti
mov
push
push
sub
pop
xchg
ss
addr16
mov
mov
lds
mov
mov
clc
jecxz
or
xor
adc
testb
xchg
sub
or
rcrb
pop
rcrl
sbb
les
cwtl
jae
out
inc
in
xchg
loop
inc
fdivl
xchg
imul
mov
xchg
aam
mov
mov
andb
lea
scas
pop
push
ret
jl
jmp
imul
es
pop
nop
ljmp
fisttps
xor
movsl
outsb
push
lcall
loope
mov
mov
pop
insb
sub
jnp
fwait
shrl
stc
xlat
jp
and
out
adc
lds
gs
fmuls
out
mov
insb
maskmovq
testl
pop
sahf
mov
and
adc
es
int3
push
loope
sbb
and
hlt
cmc
je
dec
leave
addr16
push
sub
pop
or
cld
rorb
fwait
add
sub
cli
sbb
and
sbb
add
test
lcall
adc
xchg
or
jnp
pop
iret
outsl
test
xchg
fwait
sbb
insl
leave
inc
into
and
enter
mov
xor
mov
cmp
insl
xchg
jp
jp
das
xchg
ficoml
xchg
incb
mov
push
cmp
jle
jno
and
xchg
push
shrb
xchg
and
daa
outsb
lock
mov
or
ds
mov
mov
stos
pop
aas
outsl
cmp
sar
rcl
and
push
sub
mov
sub
cmc
sbb
inc
cld
jb
outsl
insl
shlb
jl
xchg
mov
ds
dec
lcall
jg
daa
loopne
fldl
outsl
mov
popa
jne
inc
add
lods
ja
jbe
mov
nop
movl
jnp
push
inc
sbbl
xchg
adc
pushl
aas
jl
cmpsb
push
pop
jge
pushf
cwtl
es
mov
insl
ds
xchg
test
outsl
cli
pusha
rcrb
in
hlt
add
xchg
push
rclb
lcall
inc
aas
std
mov
dec
and
fisubrl
push
fidivs
jl
cmpb
int
push
mov
and
in
pop
mov
test
adc
mov
add
jae
aaa
jno
cmp
mov
pop
inc
mov
jg
xor
mov
mov
stos
jb
xchg
dec
mov
js
sub
fcomi
dec
aam
sub
lahf
je
cmpl
movsb
xchg
mov
xor
loopne
pop
js
mov
jl
adc
xor
cmc
mov
loop
mov
test
jno
cs
dec
pop
jge
inc
pop
out
sbb
jmp
lea
push
enter
popf
sub
push
jecxz
in
fdivl
lock
pop
cmpl
test
mov
stos
sbb
fcmovnbe
push
mov
cmp
outsl
stc
push
rol
mov
loope
ja
movsl
mov
movsl
push
filds
dec
push
cmp
and
jb
or
mov
loopne
cmp
loopne
or
dec
jb
pushf
mov
mov
push
mov
pop
scas
inc
pusha
xchg
jbe
fs
mov
movups
sub
cli
jb
xchg
hlt
cs
inc
push
test
and
jg
insb
arpl
jl
xor
outsb
sub
pop
lahf
add
lods
cmp
lcall
insl
push
xor
pop
out
add
dec
loop
icebp
test
rcll
shlb
jmp
cwtl
mov
or
mov
xor
js
jo
cld
cmpsb
out
sbb
clc
pushf
insl
xor
push
in
test
mov
push
movsb
scas
mov
push
mov
sbb
ss
cmpsb
scas
ficoml
inc
testb
xchg
aaa
dec
int
cmp
cmpsb
leave
xchg
popa
sub
rcl
popa
rcl
jne
push
xchg
mov
scas
jg
inc
mov
in
add
cli
call
jp
sub
lock
add
lock
mov
and
test
and
ret
xchg
cli
mov
popa
push
mov
cmpsl
aas
imul
xlat
mov
roll
loope
pop
jecxz
cld
fwait
add
pop
in
mov
lods
pop
fimull
mov
stos
xchg
add
inc
adc
pop
or
push
add
xor
shrl
in
in
and
mov
aad
or
jne
mov
iret
cmc
lds
lcall
jb
loop
rep
outsl
pop
nop
and
sub
jmp
in
scas
faddl
popa
cmp
dec
dec
xchg
xorps
or
xchg
mov
lahf
sub
sbb
xchg
xor
or
pop
dec
clc
inc
idivl
push
outsl
fiaddl
jge
movsl
pushf
lret
lret
jo
xor
mov
shrb
pop
out
scas
fwait
dec
fldt
fwait
rorl
add
xchg
jnp
mov
or
pop
mov
popa
icebp
jnp
adc
int
insl
sbb
pop
inc
sub
outsb
cwtl
outsl
lea
sbb
les
lret
aam
sub
jbe
shlb
sbb
ficompl
pop
incl
hlt
sbb
mov
daa
fcomi
lret
push
or
test
mov
or
je
mov
test
scas
fpatan
cmp
pop
aad
sub
out
mov
fldt
inc
sub
iret
xlat
in
jae
aaa
xchg
mov
xchg
es
pop
dec
aam
bound
lret
lods
in
test
mov
push
lret
ss
mov
fstpl
in
fwait
mov
call
stc
enter
dec
lcall
adc
test
sub
insb
fstpl
lds
out
lock
xchg
xor
pop
adc
bound
adc
inc
xor
aaa
xor
inc
test
mov
mov
and
inc
push
insl
fsubrs
inc
dec
push
pop
aas
jo
xchg
movsl
ljmp
push
push
lcall
cmp
ljmp
and
inc
cmp
not
xor
out
ret
pop
rclb
push
sub
pop
in
insb
or
adc
jle
mov
insl
jl
xor
fs
push
inc
test
daa
les
sbb
inc
push
xor
imul
cmpsl
popa
adc
sbb
cwtl
mov
jb
jl
movb
aad
push
loopne
inc
sbb
inc
push
stos
jo
sub
inc
xchg
jo
xchg
mov
sub
test
xchg
xor
mov
ret
push
call
daa
and
lods
imul
add
xor
pop
xchg
jne
sahf
adc
and
push
adcb
addl
adc
addr16
jae
dec
in
popa
jle
stos
inc
ljmp
push
xor
movsb
pop
pop
cmpsl
mov
cmp
test
xor
shlb
je
inc
push
aaa
lahf
adcb
push
mov
adc
or
xchg
sahf
xchg
jecxz
fsubr
insb
dec
push
jno
adc
fisubrs
aam
pusha
in
push
orb
adc
push
sbb
stos
push
fwait
repz
xlat
into
xchg
dec
adc
adc
outsl
test
jo
repz
jg
dec
fwait
in
fdivrl
pop
les
shlb
roll
push
lds
add
mov
repz
and
shr
aas
or
ja
ja
add
jno
popa
sub
or
or
loopne
mov
sbb
enter
call
lret
lahf
cld
push
lds
movsb
jne
xchg
jg
or
jo,pt
bound
push
jbe
pop
stos
js
mov
xor
cmp
add
mov
pop
decl
inc
adc
loopne
in
mov
jnp
mov
mov
mov
cmc
push
std
popf
ss
test
out
sbb
mov
int
inc
mov
cmp
pop
jne
jno
sbb
xchg
into
shrb
cmp
arpl
xchg
lret
mov
or
imul
fs
jne
mov
sbb
and
in
loope
sbbl
test
lea
outsb
stos
cltd
cmp
adc
jle
daa
fldz
and
push
add
cmp
fiaddl
dec
push
cwtl
jg
and
dec
popf
orl
lock
mov
cltd
xchg
mov
pop
mov
inc
das
iret
sbb
add
lahf
or
push
outsl
mov
fists
jns
dec
aas
lret
pop
pusha
sahf
loope
dec
mov
xchg
mov
sbb
in
mov
andl
mov
popa
test
add
repz
adc
mov
aas
imul
pusha
jns
pop
mov
add
sbb
leave
in
lret
xor
je
in
out
fisttps
mov
jmp
xchg
or
aam
and
add
fists
imul
mov
push
jnp
jg
insl
test
mov
dec
out
sub
fcoml
out
fwait
xchg
inc
xlat
inc
loope
jno
fcoms
dec
jne
outsb
scas
mov
push
lds
dec
addr16
lret
inc
xchg
imul
inc
adc
shll
test
shrl
sarl
std
mov
inc
pop
hlt
and
daa
dec
cvtps2pi
scas
cltd
xor
and
fldt
lahf
nop
cmp
cmp
pop
jle
xchg
xchg
push
stos
rcrl
out
and
insb
cmp
loope
leave
out
xchg
xchg
xchg
iret
and
adc
cmp
adc
pushf
add
or
insb
pop
das
pop
jp
jmp
pop
jno
imul
insb
fidivs
pop
xor
dec
cli
cvtdq2ps
clc
cltd
movb
push
jno
mov
in
into
fld
js
int
insb
test
or
xlat
arpl
cli
aas
or
fcmovu
push
les
sbb
xchg
push
add
stc
xchg
jge
push
add
xchg
dec
dec
inc
jp
ficoml
add
and
add
rolb
push
dec
lea
aad
sbb
into
inc
bound
push
sub
popa
or
mov
ret
loopne
and
dec
jg
push
adc
pushf
dec
hlt
xchg
into
cmpsb
xchg
nop
xchg
pop
or
ss
cmp
adc
mov
xorb
lret
adc
and
sahf
sub
loop
and
mov
mov
adc
imul
dec
call
js
cwtl
dec
data16
call
push
jle
cmp
sbb
sub
mov
push
mov
aas
or
jecxz
sbb
sti
jo
addr16
imul
or
or
fcomp
mov
icebp
out
jne
cmpsl
lods
pop
in
fbld
add
xchg
mov
or
clc
jae
adc
pop
std
insl
ljmp
pop
dec
xchg
aas
stc
inc
leave
outsb
mov
mov
jnp
mov
movsl
pop
push
stos
mov
and
and
mov
cmpsb
iret
das
call
jo
xchg
les
and
mov
pop
push
push
cmp
fildll
outsb
mov
shl
stos
out
mov
pop
add
jae
test
xchg
sub
pop
movsl
xchg
cmp
fistpll
mov
in
jnp
and
sbb
and
fnstenv
push
push
mov
jp
andb
mov
xchg
ja
xchg
and
push
mov
mov
mov
adc
xchg
push
xor
adc
gs
xchg
adc
jge
cmpl
in
add
xor
repz
cmp
jbe
mov
sub
scas
lds
pop
adcl
fisubrs
mov
mov
inc
and
je
sarb
push
jnp
addb
mov
inc
inc
sub
cmp
and
add
pop
adc
pop
push
mov
dec
cmpl
int
or
repz
jno
or
adc
insl
push
test
mov
repz
cmc
and
sahf
stos
dec
xor
jge
add
jmp
test
cmp
push
imul
jbe
jp
push
push
dec
add
push
int
fcoms
cwtl
lods
popf
xor
xor
imul
inc
mov
xor
decb
test
in
dec
sub
or
pop
scas
sub
mov
push
arpl
test
mov
mov
and
cmovge
mov
lods
cmp
xor
pop
and
mov
mov
mov
cmp
sub
cmp
xor
mov
jnp
mov
cs
insl
xor
pop
mov
aam
mov
scas
or
xor
adc
outsl
pop
xor
mov
outsb
icebp
mov
sub
and
inc
fildl
jae
js
nop
cmp
push
pusha
jmp
andb
cmp
fidivrl
add
stos
out
in
lock
mov
or
addl
cs
mov
push
lcall
adc
adc
repnz
imul
stos
inc
fisttpl
loopne
int3
insb
pushw
cli
fadds
mov
outsl
lods
cld
ljmp
xlat
pop
mov
dec
jb
movsb
mov
ja
test
cmp
adc
movsl
xlat
jb
je
pop
dec
adc
mov
or
mov
or
mov
or
fimull
xchg
jmp
dec
mov
jb
out
pavgb
leave
push
lods
movsl
shl
loope
rclb
pushf
jno
sub
pop
sbb
cmp
lds
vmovhps
pop
jns
mov
xchg
cli
std
mov
sub
push
pop
pop
fs
test
mov
xchg
movsb
lock
sbb
rcll
outsl
jne
xchg
inc
xlat
push
addr16
cmpsl
lods
or
jp
xchg
xor
aaa
lods
mov
xchg
js
cmp
pop
lods
loope
movsl
out
fldl
int
add
and
cli
pop
adc
xchg
push
cmp
add
mov
imul
cmp
inc
cmp
or
or
pop
dec
inc
lahf
mov
pop
jg
sbb
cld
pop
or
jns
dec
push
jmp
adc
add
fdivp
lock
push
loope
or
lock
and
scas
fcmovnbe
mov
mov
jns
orb
sub
add
movsl
sbb
negl
push
sbb
sub
lea
xor
mov
sahf
gs
lods
jecxz
add
or
or
mov
incl
fsubp
and
mov
mov
outsb
add
jp
push
shrl
int
pop
sahf
mov
xor
pop
mov
and
in
ds
or
arpl
das
adc
scas
int3
jns
jae
inc
les
adc
icebp
xor
jmp
jns
jb
push
imul
and
test
xchg
aas
mov
rcl
mov
and
movsb
bound
add
test
mov
jle
cmp
pop
mov
or
dec
mov
inc
pop
mov
mov
dec
adc
add
loop
sub
jmp
adc
test
test
insb
inc
call
insb
int3
xor
repnz
insb
mov
dec
inc
mov
in
dec
sub
insb
mov
loopne
xor
mov
fwait
shrb
pop
imul
jle
push
hlt
sarl
inc
add
or
les
fwait
out
mov
cs
int3
mov
pop
mov
outsb
call
dec
movsb
js
repnz
stc
and
addr16
sub
in
test
mov
pop
jbe
in
push
and
xchg
push
push
arpl
adc
xchg
sbbb
negb
call
es
dec
adc
push
shll
and
sub
jbe
push
inc
cmp
dec
mov
cmpsb
sub
or
imul
fs
ds
and
mov
mov
xchg
stc
sub
push
push
jbe
cmpsl
test
sub
adc
mov
jb,pn
add
and
pop
icebp
stos
testl
pop
test
mov
sahf
jecxz
lods
ja
xor
add
pop
jmp
cmc
aam
ficoml
es
lods
mov
cmp
cmc
lret
rcl
sub
mov
dec
push
aad
xor
lcall
lds
psubusb
pop
repz
xor
mov
in
sub
dec
sub
mov
xor
lea
jecxz
jno
xchg
mov
mov
inc
stc
or
test
gs
fwait
outsb
and
repz
mov
iret
test
bound
jmp
insb
or
int3
xchg
fwait
test
fwait
aam
adcb
pop
fadds
nop
pop
xchg
std
pop
sbb
loop
cvtps2dq
test
cs
call
mov
loope
test
jbe
adc
imul
pop
fdivs
pop
and
test
inc
ror
lds
jnp
repz
xchg
add
sbb
pop
mov
pushf
jnp
cmpsl
lcall
sbb
sbbb
cli
icebp
jnp
mov
jne
mov
pop
sub
sbb
cmp
sbb
push
and
es
xchg
add
add
sahf
xlat
jmp
jle
aam
sbb
dec
pop
dec
jnp
repnz
inc
sarl
call
sub
mov
cld
cld
pop
adc
push
test
dec
push
adc
xchg
jo
ss
inc
arpl
test
jecxz
aas
outsl
push
mov
xor
hlt
fldl
cmp
fs
fdivr
jecxz
lret
fimuls
outsl
and
mov
sub
repnz
sbb
aas
out
xchg
mov
cmp
outsl
pop
mov
pushf
mov
xchg
xchg
adc
ss
dec
sahf
popa
xchg
jno
adc
int
idiv
mov
cvtps2pd
jle
or
int3
les
sahf
pop
into
cltd
idiv
push
icebp
mov
inc
inc
inc
sub
scas
cld
pop
jbe
scas
movsl
pushf
fisubl
pushf
jle
inc
ret
int3
imul
rcll
into
fiaddl
dec
sub
adc
imul
jbe
imul
mov
out
inc
sub
xor
daa
loop
adc
aad
dec
es
pop
scas
cmp
imul
xchg
inc
scas
imul
movsb
push
jecxz
fs
hlt
inc
fsubr
fwait
out
cwtl
push
mov
pop
and
sbb
xchg
daa
inc
xchg
xchg
adc
cli
int
outsb
push
jp
adc
jle
fwait
test
pop
js
scas
nop
fwait
xchg
add
movsl
mov
in
jo
orb
add
jae
mov
mov
daa
inc
mov
dec
cs
sbb
jmp
pushf
inc
sbb
pop
mov
outsb
xchg
inc
jo
aas
pop
rclb
sbb
pop
lea
cmpsb
cmc
cwtl
inc
and
cltd
cld
sbbl
ret
mov
in
lds
adc
fadds
jno
ss
or
test
imul
aaa
test
daa
enter
jo
lods
fs
filds
push
push
lea
add
fs
push
pop
roll
ja
ret
jle
sti
adc
leave
pop
xchg
lcall
aas
mov
pop
repnz
inc
push
mov
scas
push
aas
mov
add
add
jmp
cltd
or
test
insb
cmp
cld
mov
es
cmpsl
push
idivb
push
sbb
jg
push
add
dec
adc
ret
xor
gs
pop
lock
outsl
cmpsb
dec
jp
pop
das
fldenv
sub
xlat
xchg
testb
cli
jecxz
pop
and
and
push
ret
push
aas
push
divl
inc
push
cmp
cs
pop
mov
mov
sub
fstps
ror
add
cmpsb
dec
sti
ja
jno
push
and
xor
jge
out
sbb
mov
lock
mov
sub
or
jp
fsubl
adc
ds
popa
dec
lds
clc
dec
sub
jg
mov
lret
adc
sbbl
adc
divb
mov
mov
pop
lahf
push
imul
sbb
mov
sbb
mov
test
adc
jnp
inc
stc
cmp
add
sti
in
loop
mov
cli
push
jg
inc
inc
push
shlb
jnp
jmp
test
outsb
out
mov
std
sub
xor
aam
mov
rorb
arpl
sub
mov
jg
fstpl
xor
sbb
pop
rorl
loop
inc
xchg
stos
mov
jmp
loopne
aas
cmp
cmp
mov
into
mov
out
dec
sub
je
push
out
sbb
or
out
cmp
mov
shrl
pushaw
and
movsl
dec
jmp
jmp
test
cmp
mov
cmp
inc
shll
xor
mov
sub
ja
cmp
inc
mov
or
scas
leave
imul
fisubl
add
stc
test
shll
add
dec
pop
call
xchg
dec
lret
mov
das
add
xor
push
jmp
sbb
xchg
mov
cli
adc
ljmp
lods
out
mov
jg
sbb
jge
scas
push
xchg
jae
fcoms
loope
and
pop
pop
pop
sbb
lds
mov
add
pop
jle
add
fwait
rcrb
push
cmpsl
rcl
mov
and
dec
jl
shr
sbb
ffree
sbbb
inc
xor
mov
xchg
lcall
das
adcb
xchg
jne
icebp
and
jne
ds
cmc
inc
dec
call
fldt
ret
sub
data16
ljmp
jb
call
insl
enter
mov
mov
adc
adc
push
mov
add
fistps
ret
cli
rcll
jle
es
pop
pop
idivl
jno
fsubrl
jg
lea
outsb
cmp
ds
adc
sub
jae
cmpsb
push
fsubrl
pop
add
in
push
mov
push
aad
jp
mov
fxch
andps
stos
aad
pushf
jecxz
divl
mov
inc
repz
or
stos
mov
push
pop
inc
test
mov
iret
xor
cmp
ljmp
in
popa
push
fildl
xchg
adc
sbb
fadds
mov
jne
pop
push
sub
inc
ja
sub
rcll
rolb
xchg
cld
jp
xor
outsl
jmp
jge
mov
out
add
push
popa
push
dec
les
ja
dec
cmp
pop
stos
popa
push
push
sbb
sbb
pop
loopne
das
les
push
filds
jne
arpl
bound
mov
add
or
in
shrl
xor
adc
and
xchg
mov
bound
mov
mov
add
mov
iret
loope
sbb
incl
push
sbbb
fisttpl
outsl
ret
shll
out
cmp
pop
sbb
rol
mov
aaa
xchg
jmp
and
lret
cmp
jecxz
mov
jp
scas
in
cmp
dec
aaa
mov
adc
in
ficoms
int
aam
cmp
sbb
push
xor
lods
popf
xchg
leave
and
aam
int3
sub
dec
cmp
addb
jmp
test
sti
dec
cmpsb
xor
loope
outsl
shlb
fwait
inc
aad
pop
outsl
lret
dec
jns
dec
pop
pop
rclb
cmp
dec
dec
push
cmp
jp
mov
dec
stc
cs
aam
fisubs
inc
xchg
std
pop
mov
push
sub
outsb
in
and
jbe
mov
int
cmp
xchg
mov
lods
aad
xchg
jg
and
js
out
iret
das
cld
mov
xchg
mov
leavew
and
mov
out
data16
jl
jecxz
adcl
mov
or
icebp
inc
repz
sub
xor
xchg
or
movsb
dec
icebp
adc
xlat
fwait
or
pop
cmp
cmp
inc
or
xchg
mov
rcll
daa
jo
jns
dec
mov
push
cmp
cwtl
push
xchg
sub
sub
or
out
insb
mov
in
jmp
sbb
pop
mov
mov
mov
sub
test
xor
adc
mov
mov
ja
fs
fs
sbb
mov
ljmp
inc
ss
push
fs
decl
xor
adc
sub
test
int
ja
insl
and
iret
jae
mov
mov
shl
repz
cmc
xchg
aad
rcll
lret
xchg
push
shlb
inc
push
gs
push
into
sbb
push
jl
cmp
push
dec
xchg
ds
rcrb
loopne
insl
leave
ret
mov
push
nop
rorl
push
xor
or
test
pop
dec
dec
push
xchg
lock
loope
enter
je
sbb
mov
fisttpll
mov
movsb
je
lcall
sub
mov
les
sub
daa
xchg
xor
jmp
fnsave
int3
inc
notb
iret
aam
out
pop
cmp
call
xor
inc
xchg
jle
popa
loop
in
lock
test
lret
imul
cmp
xor
inc
sub
lods
xor
jmp
xor
lock
in
pop
gs
adc
inc
sub
imul
push
add
out
mov
mov
rcl
push
jno
jo
mov
push
or
out
mov
mov
lods
std
jmp
test
lods
fimull
adc
lret
push
popf
adc
push
jne
xchg
mov
mov
andl
ja,pn
andl
inc
ficoml
loop
sub
pop
mov
sub
leave
cwtl
shlb
and
stc
mov
mov
sbb
inc
fdivrs
lods
inc
pop
sub
rorb
jmp
jmp
mov
cmpsb
jno
or
add
insb
push
jmp
adc
stos
repnz
orl
jl
fwait
sbb
jno
in
mov
and
mov
ja
xor
adc
insl
ret
orb
ljmp
pop
jae
adc
mov
in
mov
mov
adc
lret
mov
iret
push
loope
rcrl
into
call
or
push
arpl
or
gs
mov
orb
xor
adc
xchg
add
cmp
mov
pop
push
cmpsb
popf
test
xchg
test
mov
push
ljmp
inc
andl
cmp
mov
sbbl
lock
lock
sbb
in
xchg
inc
pop
dec
adc
xor
xchg
into
push
mov
push
push
dec
sbb
enter
or
push
dec
cmp
test
jecxz
fisttps
aas
loopne
xlat
movsl
push
xor
sbb
fsubrs
lahf
lods
jnp
mov
inc
mov
or
xchg
push
stos
pop
pop
dec
dec
and
leave
jl
shll
insb
ds
repz
dec
repnz
dec
imul
or
push
jp
inc
cs
and
in
mov
fstl
sub
xor
aad
inc
xchg
pop
mov
loope
ss
insb
mov
imul
mov
aam
daa
fnstenv
push
push
sub
or
xor
pop
sub
scas
enter
loopne
mov
push
repnz
adc
cmp
rol
popa
sub
pop
xor
in
jne
popa
movsb
mov
push
pop
movsb
mov
add
inc
repz
xchg
dec
dec
ljmp
stos
push
mov
sbb
xlat
mov
decb
cmp
cli
lds
inc
stos
xlat
mov
es
inc
popf
mov
push
fldl
dec
jnp
leave
into
pusha
push
sahf
ljmp
aaa
sar
int3
mov
movb
imul
jbe,pn
aad
sub
and
in
test
mov
stos
dec
lcall
and
aas
lcall
xor
inc
xor
negl
punpckhdq
lock
lret
paddusb
lods
dec
dec
dec
push
je
cld
stos
outsl
enter
test
rcpps
xchg
std
mov
sti
adc
bnd
rorl
scas
and
sub
push
pop
pop
jno
aaa
pusha
xchg
cwtl
aam
popa
inc
fmuls
mov
mov
movsb
pop
push
jo
fs
push
push
aas
cltd
adc
pop
rorb
icebp
mov
xor
inc
cmpsb
add
pusha
mov
loopne
into
cmp
dec
xchg
xor
pop
fmul
xorb
std
jns
sbb
xor
dec
mov
add
cmp
jmp
push
hlt
sahf
repz
pushf
adcb
in
pushf
shl
sub
repz
cmpsl
cmpsb
ret
sbb
in
icebp
inc
iret
mov
cmpsl
cmp
lret
testl
cmpsb
lahf
inc
std
jae
scas
addr16
js
addr16
ja
call
icebp
ret
notl
jns
lea
push
test
es
clc
lea
jg
add
fistpll
je
sub
lods
jnp
enter
enter
inc
imul
pop
adc
fcmovne
es
iret
jecxz
lods
pusha
and
inc
gs
pushw
and
test
mov
fstp
stos
lods
cli
pusha
sbb
clc
mov
outsl
pop
cmpsl
push
add
push
jl
sub
mov
std
stos
dec
hlt
lock
nop
aas
shll
leave
test
test
mov
gs
pusha
add
dec
dec
in
mov
push
fnsave
jb
dec
insb
xchg
mov
mov
je
lahf
stc
jae
inc
andl
or
cwtl
adc
mov
add
outsl
mov
push
and
mov
dec
add
cmc
push
push
and
in
jns
cmp
mov
shrb
adc
cmp
mov
jge
mov
mov
push
or
cld
popf
repz
mov
push
inc
pause
stc
cmp
mov
pop
ror
dec
lea
mov
out
outsb
andb
movsb
hlt
cmp
inc
mov
aam
nop
mov
inc
sbb
pop
outsl
pushf
scas
movsb
pop
arpl
push
hlt
dec
loop
pushf
scas
or
mull
mov
push
pop
sahf
jo
test
sub
pop
sub
push
inc
and
roll
daa
jmp
jmp
jb
xchg
adc
pop
add
movsl
mov
xchg
inc
jno
xchg
das
out
mov
mov
adc
rorl
add
jns
ret
inc
fs
jo
fistps
xor
mov
mov
pop
push
adc
xchg
icebp
sub
dec
enter
std
aaa
adc
xchg
stos
ud1
jecxz
in
ficompl
test
movl
jle
pop
cmp
push
pop
inc
mov
mov
jl
pop
test
les
imul
jbe
jnp,pt
mov
adc
es
mov
aam
inc
movsb
or
out
mov
xor
faddl
jno
shl
push
test
mov
ficompl
orb
or
xor
mov
outsl
fdivrs
or
jbe
add
and
sbb
dec
inc
pop
dec
xchg
sbb
xor
cmpsb
add
movb
push
dec
cld
mov
jae
repnz
dec
cmp
mov
mov
jp
sub
xchg
push
inc
dec
push
xor
insb
daa
stc
cmp
jle
sbb
iret
cltd
mov
rcr
ret
jae
or
inc
dec
xchg
in
in
ret
xchg
cld
into
cltd
repnz
stc
int3
outsl
fildll
out
cmp
cwtl
mov
in
cs
dec
loop
pushf
in
lock
sbb
ret
mov
push
dec
idivl
cwtl
dec
xchg
imul
lahf
add
xchg
call
fildll
andb
sar
adc
scas
or
ficoms
popa
jne
xor
call
out
and
int
jmp
jae
out
cmp
arpl
adc
sub
sub
push
xor
adc
push
outsl
or
into
jmp
mov
rcr
jmp
stos
in
dec
shlb
jmp
fs
ljmp
in
xchg
sub
std
sub
mov
dec
xchg
and
mov
fwait
sbb
xor
sbb
pop
or
lahf
fucom
movsb
mov
mov
ret
ffreep
das
loopne
scas
lods
movsl
xchg
fdivrs
xor
stos
or
mov
in
insb
ret
sbb
mov
and
cmp
sbb
ror
lods
insb
xor
bound
add
inc
dec
add
cmpsl
bound
xchg
or
stos
movsl
xor
loope
fildl
dec
adcl
insb
pop
lcall
dec
add
lds
inc
mov
push
adc
or
cmp
mov
jg
lock
pop
pop
adc
jp
iret
gs
pushf
subl
fstl
mov
sub
adc
inc
jae
stc
inc
jns
mov
rolb
fwait
mov
in
xchg
data16
dec
xchg
pop
fisubl
add
mov
inc
ds
les
ret
adc
lahf
nop
xchg
pushf
icebp
cld
jnp
fcmovnu
ret
cmpsb
sbb
js
push
jp
add
icebp
fcmovb
jcxz
repz
jne
xchg
sbb
orb
sub
adc
movsb
loopne
or
mov
rcrl
popf
jbe
test
sbb
imul
mov
push
xchg
hlt
xchg
jne,pt
dec
sbb
aad
sbb
lret
dec
in
loope
mov
add
pop
xchg
sbb
mov
add
mov
test
fimull
inc
push
repnz
fisttpll
cld
mov
jo
or
pop
or
je
pop
adcb
inc
movsl
in
xlat
sbb
xchg
xchg
out
aam
jb
inc
sub
sbb
fsubp
push
adc
jbe
insb
mov
aam
lret
lds
add
or
lock
test
les
sbb
push
push
imulb
fstpl
push
push
test
push
add
stos
xchg
pop
xor
sbb
cmc
mov
xchg
mov
insl
test
nop
cmp
in
fwait
push
shrl
insb
push
popa
xor
xchg
mov
test
add
call
jle
mov
cmp
mov
xchg
nopl
sahf
aad
fs
push
jle
or
pusha
sbb
jns
mov
ficomps
movsb
pop
jecxz
stos
ja
ja
cmp
cmp
rcrb
lds
xor
and
imul
xchg
or
sub
inc
idivl
jmp
leave
inc
stos
push
stos
lea
test
xor
mov
lock
cmpsb
fimuls
ficompl
negb
mov
push
dec
dec
gs
push
stc
sti
xchg
adc
jmp
pop
jp
mov
xor
adc
imul
sub
add
mov
loope,pt
or
int3
aaa
dec
jnp
cmp
lds
ds
cmp
and
sbb
dec
xchg
lret
inc
addr16
iret
movsl
mov
mov
jbe
shll
jle
ss
add
fs
push
inc
mov
fisubs
fisubrs
loope
push
in
mov
fs
push
ja
jmp
aas
outsb
aaa
mov
imul
adc
in
lea
or
push
cld
mov
test
pushf
mov
xor
daa
push
mov
mov
mov
add
xor
pop
fnstcw
imul
dec
and
adc
out
shl
icebp
pop
dec
cmp
movsl
mov
cmp
scas
push
nop
add
jbe
adc
es
shll
add
cmp
in
sub
je
sub
push
adc
cmc
jbe
sub
pop
subps
mov
xor
xchg
out
fwait
dec
mov
mov
sbb
xor
push
sbb
xor
mov
jl
cmp
cmp
inc
sbb
ljmp
sarb
ja
repnz
xorb
inc
push
int
sbbl
mov
cltd
int3
sbb
lods
aad
repz
aad
std
and
outsb
xor
ret
or
lret
xor
inc
xchg
jle
cmp
mov
out
add
xchg
xor
addr16
inc
int
pop
imul
dec
mov
sbbl
or
jmp
mov
jo
adc
pop
sbb
dec
cmpsl
popf
xor
pop
add
inc
repz
scas
jmp
pop
xchg
add
out
inc
mov
xchg
sub
out
xor
loopne
enter
dec
xor
shl
fcomps
pop
dec
fistps
mov
push
shll
xchg
jns
ljmp
aas
adc
pop
mov
xchg
xchg
aas
sbbb
into
fdivr
lret
pop
add
xchg
mov
jg
dec
sbb
dec
insb
xor
lcall
out
shl
mov
xchg
orl
lret
ds
add
cli
mov
popf
ret
test
loope
mov
or
or
and
mov
in
adc
push
inc
add
and
lock
sti
adc
inc
pop
xlat
scas
add
jg
bound
sub
sbb
mov
add
jo
sbb
push
ret
mov
mov
xchg
mov
dec
in
cmp
jp
sub
insl
insl
cmp
hlt
in
test
insb
pop
jmp
lods
push
mov
pop
loop
imul
loopne
nop
sbb
out
inc
ljmp
xor
xor
in
call
and
pop
jmp
inc
adc
int
inc
fmuls
jge
push
cmp
dec
adc
gs
sbb
movsl
lcall
jb
push
cltd
mov
sub
jecxz
out
gs
out
sub
mov
mov
loopne
jb
stos
insb
stos
mov
wrmsr
jp
jne
cmp
arpl
and
insl
mov
ljmp
inc
xor
out
adc
ds
in
enter
and
cli
cwtl
or
fmuls
test
ret
pop
cmp
ret
aas
je
test
lock
es
xchg
xor
ret
je
sbb
sbb
orl
lods
fmuls
dec
xchg
lock
stos
pop
add
add
push
jmp
fldl
cmp
lock
lahf
jns
xchg
fs
cmpsb
inc
ret
xor
gs
hlt
clc
mov
es
push
adc
cmp
nop
cmp
mov
jb
sahf
adc
cwtl
dec
adc
add
dec
and
xor
jg
add
movsl
data16
out
repz
mov
fldcw
cmp
hlt
mov
popf
adc
dec
pop
gs
in
loop
movsb
lcall
enter
xchg
push
and
dec
push
js
xchg
andb
add
sub
idivl
fs
sub
dec
inc
fcoml
cmpsl
js
cmpsl
mov
xchg
lock
loopne
add
dec
pushf
jmp
jo
cmp
in
data16
pop
das
sahf
aam
jg
lret
dec
fs
aam
pop
xchg
out
push
xchg
mov
rcrl
outsl
xorl
xchg
jg
pop
cmp
loop
lods
mov
jg
mov
sbb
es
in
dec
pop
adc
scas
dec
cmp
xor
push
ret
cmp
shl
lret
sbb
or
ret
jb
cmp
push
mov
xchg
out
xlat
mov
inc
call
hlt
mov
out
pop
pop
cli
nop
into
lea
xchg
icebp
sub
cli
mov
lods
mov
dec
add
rol
aad
mov
stos
lods
jo
ja
mov
testb
cmc
mov
vpand
mov
xor
fmul
mov
inc
popf
in
cmpsl
sbb
inc
pusha
imul
sbb
or
outsl
xor
sarb
xchg
xchg
and
xchg
add
adc
sbb
jmp
cmc
jne
push
les
or
lods
nop
loopne
fiadds
clc
jecxz
xchg
inc
mov
mov
mov
into
jl
fs
jno
cmpsl
or
pop
leave
mov
mov
int3
leave
pusha
idivl
std
fdivl
mov
xor
lock
cmp
popa
shll
pop
mov
sbb
clc
jecxz
xchg
sub
sub
xor
xor
inc
out
pop
add
pop
lea
adc
ja
sub
mov
loop
sub
loopne
mov
and
cli
nop
jno
and
loop
jecxz
test
into
cltd
push
je
std
xchg
and
aam
fstpl
inc
dec
test
loope
dec
push
clc
pop
mov
insb
inc
mov
xchg
pop
mov
mov
daa
and
mov
outsl
outsb
les
sahf
bound
into
pop
sub
lods
jno
hlt
and
or
jmp
and
and
sub
xor
lods
movsl
outsl
jl,pn
or
mov
cmpsb
dec
add
jecxz
js
stos
jne
inc
mov
cmpsl
or
inc
pushf
ret
addl
pop
sbb
mov
ds
stos
cmp
aaa
xchg
insb
push
ja
mov
push
cmpsb
mov
das
inc
push
pop
jp
out
or
fsubs
pop
cmpsl
es
jge
pop
loop
sbb
push
jae
sbb
pop
dec
push
cmpsl
xchg
jnp
arpl
hlt
pop
pop
add
imul
pop
rcrb
xchg
lahf
add
adc
pusha
jge
xchg
movsl
clc
jae
mov
or
cmc
mov
and
add
addr16
mov
test
mov
xorl
sti
xchg
xchg
in
notb
mov
inc
adc
jno
sti
jb
adc
lock
fimuls
push
add
push
inc
ja
loopne
cwtl
les
and
push
into
leave
fldenv
push
stc
aas
cwtl
fdivl
lds
dec
idivl
data16
sbb
mov
cmp
jmp
cltd
xor
clc
xor
pop
xchg
repz
or
pop
addb
popf
xchg
imul
jb
adc
and
lds
lock
adcb
or
js
test
sbb
add
std
inc
scas
mov
mov
stos
jg
pop
add
addl
pop
mov
and
enter
ds
and
mov
lret
shlb
mov
outsl
xor
cmp
xchg
and
dec
shrb
jo
sahf
push
iret
scas
or
fildll
cmp
call
subl
popa
popa
sbb
xchg
mov
divb
fdivp
lods
mov
push
mov
aam
push
sub
lahf
popf
enter
test
adc
mov
dec
cmp
sub
pop
sbb
fcomps
pop
cld
xchg
lret
aam
outsb
xchg
rol
ret
dec
dec
pushf
rcrb
jmp
out
add
sahf
loop
test
es
mov
movsl
add
test
add
jmp
mov
mov
xchg
push
xchg
push
lcall
mov
fwait
outsb
mov
cmpsl
push
bound
xacquire
cmp
jno
jl
fcoml
cmpb
mov
testl
push
pushf
pop
mov
sti
repz
push
enter
cltd
fiadds
icebp
inc
out
xor
in
idiv
mov
inc
pop
repz
es
push
pop
in
loopne
cmc
cmp
sahf
sbb
cmpsb
fadds
jge
pop
call
mov
js
mov
aas
lret
std
test
std
lds
push
rcr
xlat
pop
stc
mov
mov
stos
adc
xchg
dec
or
cmp
pop
jge
lds
cmp
iret
mov
test
xchg
and
or
inc
sub
aaa
jmp
dec
push
pop
mov
sti
aam
sbb
sbb
lods
xchg
outsl
arpl
pop
pop
add
xor
stc
xor
out
jb
pusha
cld
or
pop
or
push
inc
pop
xor
adc
pop
or
out
add
xor
jns
frstor
or
push
mov
std
add
mov
popf
icebp
sahf
xchg
xchg
and
jo
push
mov
jge
add
push
dec
adc
xchg
fldenv
stos
push
pmaxsw
repz
out
push
or
fistps
inc
hlt
scas
or
popa
imul
ret
cmc
inc
push
nop
jle
sti
mov
jo
mov
iret
add
movsb
fildll
dec
sbb
les
xchg
jle
jecxz
add
mov
xor
lcall
inc
es
adc
loop
or
push
ret
enter
aad
aas
push
jp
jno
sbb
test
je
xchg
cli
sarb
fnstenv
mov
and
movsl
out
popa
mov
addr16
and
mov
sti
and
cmp
jge
js
inc
in
push
xor
popf
nop
sbb
shrl
pop
cmp
mov
xchg
mov
ror
push
or
pop
and
mov
mov
xlat
rol
nop
ret
orb
movsl
out
mov
xchg
or
ljmp
fnclex
xchg
mov
aad
aas
pop
and
jae
xchg
sti
push
inc
xor
fdivr
roll
getsec
or
push
jo
adc
xlat
and
icebp
imul
addr16
and
aad
fldt
cmp
lret
sub
sub
inc
push
imul
das
inc
ficoms
pop
xchg
shlb
mov
rcr
mov
pop
lahf
iret
movsl
adc
mov
test
dec
mov
rcrb
push
dec
adc
hlt
loop
cmp
push
inc
add
pop
repz
xor
mov
fldenv
add
sub
pop
pushf
sub
decl
jg
add
inc
popa
xchg
add
mov
cwtl
stos
aad
stos
outsb
shlb
sbb
lods
push
fcomps
mov
push
sahf
mov
mov
sbb
inc
cwtl
popf
xchg
xchg
movb
in
mov
adcb
adc
insl
push
test
jo
fwait
lods
push
pop
inc
inc
rcrb
imul
sbb
ret
add
lods
daa
or
daa
icebp
mov
pop
call
xchg
fldt
xor
lret
in
cmc
cmp
data16
pop
or
das
mov
test
inc
movsl
movsl
inc
js
js
pop
std
scas
in
jno
jp
jbe
mov
mov
and
aas
std
and
inc
jge
xchg
mov
fdivrl
push
push
cmp
je
jnp
fs
sub
push
jns
inc
ja
or
int3
mov
jge
inc
insl
push
xor
mov
mov
xchg
in
push
mov
notb
xchg
repz
xor
xchg
push
fwait
out
push
popf
outsb
mov
xchg
imul
insb
in
insb
loop
scas
hlt
stc
add
popl
aaa
jge
scas
movsl
push
in
dec
test
jbe
push
in
xchg
pop
sbb
movb
lcall
xlat
jno
testl
test
xor
popf
lret
mov
into
adc
sbb
sub
pushf
and
inc
cmp
jae
or
mov
das
repz
xchg
cmp
stos
int
ss
adc
cmp
push
and
dec
or
inc
lds
sub
ljmp
push
nop
cltd
jne
outsl
int
xchg
dec
in
fsubs
mov
inc
popa
lea
pushf
ret
add
cmp
cmpsb
into
sub
clc
shl
pop
andl
out
dec
xor
lods
fldenv
ja
inc
fidivrl
dec
mov
or
sbb
dec
loope
test
ret
cs
and
push
outsl
xchg
loopne
fadds
dec
and
adc
xorl
adc
xchg
popf
cwtl
ret
xchg
inc
outsb
ror
jp
jo
stos
leave
mov
pop
push
loope
loop
cmp
cltd
aas
adc
out
loopne
and
int
into
mov
inc
mov
cli
pop
jno
mov
add
scas
inc
std
in
push
dec
jmp
jns
dec
jle
adc
xlat
lods
xor
sub
in
std
mov
push
ficompl
aam
push
notb
pop
loopne
in
and
push
xlat
repnz
rcrb
test
push
imul
in
pop
mov
roll
and
inc
xor
into
bound
or
test
mov
mov
int
enter
xchg
sub
cmp
mov
and
or
pusha
xor
xor
lock
daa
and
or
dec
and
jae
lret
cltd
into
dec
lret
int3
fwait
sbb
out
jge
mov
fmuls
xchg
xchg
inc
popf
xor
hlt
mov
push
std
in
xchg
stc
mov
nop
add
rsqrtps
sti
outsl
inc
dec
push
ljmp
aas
sub
inc
pushf
fbld
add
cmovns
sub
push
mov
in
mov
std
push
cmc
jg
sub
sub
or
lahf
ja
movsb
push
xchg
cmp
add
cltd
lahf
dec
call
in
imul
addr16
cli
outsb
cmpl
mov
mov
rcr
repnz
jmp
jne
sbb
cmp
hlt
popf
push
fdivr
lcall
fs
xchg
lods
xor
loopne
jle
enter
icebp
jle
shll
fistpll
push
test
cs
loope
or
and
insl
mov
je
xlat
ja
push
fs
popf
clc
push
cld
ljmp
pop
adc
pop
loopne
idiv
sbb
movsb
mov
push
orl
shrl
lods
dec
pop
jne
gs
repz
ljmp
sahf
sar
jmp
repnz
fadds
and
pop
and
push
push
xor
dec
rcl
mov
js
lods
dec
inc
dec
sbb
rorb
push
in
aad
ds
out
pop
int
xchg
int
push
dec
push
pop
xchg
hlt
jmp
and
xor
gs
shll
dec
inc
jbe
mov
cmp
jle
adc
int3
ss
add
fs
add
fidivrs
repnz
adc
mov
loopne
cmp
ds
popf
jg
sub
repz
call
xchg
jb
cld
pop
xchg
inc
fdivs
mov
das
push
lret
xchg
mov
jne
add
aas
xchg
pop
into
mov
pop
xor
cmp
call
leave
scas
sbb
cmp
ffree
add
in
dec
jo
fwait
dec
clc
inc
xor
shll
inc
loop
add
jmp
fcmovnbe
lds
sub
mov
gs
int3
lds
mov
fldenv
lcall
mov
test
sub
aad
jnp
movsl
pop
testl
shrl
pop
fs
add
ret
movsl
mov
jmp
jmp
stos
sub
andl
cli
xchg
mov
imul
xchg
fistpl
jge
ret
pop
mov
vmsave
push
and
repz
jbe
out
pop
pop
dec
fmul
push
fldcw
jg
push
int3
mov
push
inc
and
dec
in
pop
add
cmp
jecxz
aaa
pop
pop
mov
inc
push
push
sbb
jmp
inc
mov
fidivl
mov
jae
cwtl
mov
decb
mov
bound
add
mov
outsb
bnd
push
lret
push
sub
jge
in
outsb
pop
mov
cs
push
push
pop
stos
mov
repz
cmp
mov
jbe
push
call
mov
xchg
sysenter
and
ret
insl
and
push
loop
lahf
fwait
es
pop
jmp
or
loopne
cmp
xchg
icebp
push
enter
cmp
and
aad
jns
xchg
jge
push
mov
push
sbb
mov
xchg
xchg
or
xchg
cmc
jl
mov
sub
test
leave
add
xchg
xor
xlat
daa
lahf
aas
adc
sub
ret
fimull
nop
pushf
stc
jb
xchg
pop
mov
add
inc
mov
sbbl
lods
add
pop
sti
cli
loop
popf
mov
movsb
sahf
int
or
push
sbb
repnz
sub
and
dec
mov
mov
dec
sti
dec
ljmp
stos
sbb
divb
testb
sub
mov
inc
insl
shlb
movsb
push
sub
and
scas
neg
sbb
cmp
popf
add
mov
fcoms
jb
shll
dec
cwtl
test
dec
icebp
inc
xlat
sbb
push
lcall
push
pop
das
mov
add
and
cmpb
hlt
jle
das
mov
mov
jg
sub
mov
aad
ret
inc
shlb
sub
adc
xor
adc
sbb
inc
sub
sbb
or
popa
push
movsb
outsl
xchg
fbstp
mov
pop
in
pop
rcll
xor
pop
cmp
xchg
and
addl
test
fistl
push
fwait
xchg
or
lods
test
arpl
cmpsl
sti
flds
movsb
add
hlt
push
jmp
xchg
sbb
bnd
imul
cmc
dec
loopne
xor
or
or
es
fstl
imul
inc
or
ret
mov
arpl
jbe
aad
movsl
int
mov
sbb
dec
pop
ss
enter
adc
rolb
cmp
xor
push
dec
addb
jmp
les
cmp
cli
shl
shll
mov
rcrb
ja
and
lret
out
xchg
nop
js
sbb
or
js
outsl
xchg
sbb
push
pusha
push
and
data16
mov
ret
mov
adc
inc
cmp
fwait
mov
fs
push
push
test
repz
psllw
outsb
inc
int3
sarb
int3
inc
insl
lea
sbb
imul
es
mov
jne
xchg
sahf
ja
mov
cmp
jle
xchg
iret
es
dec
in
sbb
ret
or
dec
lock
xchg
and
xchg
jns
cwtl
xor
mov
std
stos
jge
ret
daa
xor
and
jmp
js
ret
stos
imul
out
dec
cmpsl
push
pop
xor
fstl
cmpl
lds
jo
lcall
push
cmp
out
pop
in
sub
fiaddl
lea
mov
js
test
jg
sbb
mov
popf
cmp
arpl
clc
popf
je
push
mov
loopne
push
dec
xchg
arpl
cmp
pop
lea
rol
mov
dec
aaa
xchg
int3
pop
outsb
pop
icebp
in
nop
jns
inc
push
int
js
rep
fs
imul
lahf
sub
xchg
lods
sbb
cltd
mov
int
fs
push
dec
or
cmp
aad
es
or
push
nop
push
jae
test
and
dec
test
cs
sbb
stos
push
xor
jno
mov
cmp
push
testl
jns
iret
mov
adc
add
xor
pop
push
pop
dec
stos
mov
fistps
cmp
sbb
jbe
in
add
xlat
push
hlt
jmp
mov
inc
fstpl
and
jno
adc
vcvtpd2psx
xchg
dec
push
jne
outsl
jbe
adc
fwait
cmp
sbb
std
add
in
negb
mov
add
xchg
fstl
movsl
ds
sub
in
pusha
sbb
inc
pushf
push
outsl
cmp
iret
cwtl
lret
or
or
out
out
arpl
jmp
addr16
mov
xchg
or
movsl
test
aas
fiadds
sub
movsl
sub
pop
stos
adc
jo
pop
int3
push
leave
pop
xchg
sub
push
or
or
out
int
cmp
aam
test
lahf
mov
and
dec
pop
shl
jns
mov
filds
pop
int
mov
sti
sub
and
loop
sub
and
sti
push
in
test
inc
or
stos
ret
testb
je
inc
clc
imulb
fmuls
jg
notl
and
hlt
int
addr16
xchg
pop
jecxz
nop
in
or
ljmp
fidivrs
jmp
ljmp
xchg
push
or
popf
jp
mov
cmp
addr16
out
cmp
test
in
ficoms
xchg
in
out
or
testb
icebp
inc
and
dec
shlb
jo
mov
inc
out
hlt
jp
test
xchg
cmpsb
inc
sub
aam
aam
adc
and
lods
mov
jo
incl
cltd
mov
in
loope
mov
sahf
arpl
mov
ja
inc
push
sbb
push
jno
add
dec
and
and
pop
fildl
jno
xchg
push
adc
xchg
mov
movsl
je
xchg
jp
xor
push
inc
adc
outsb
inc
sub
lahf
dec
loop
lcall
enter
loope
cli
jp,pn
pop
nop
sarb
jo
lods
imul
jae
fucomip
inc
push
pop
dec
sub
mov
ljmp
rorl
mov
pop
loopne
and
sbb
aaa
lret
sub
popf
pop
sarl
mov
mov
loop
add
and
ret
ja
leave
movsl
adc
push
sbb
jo
dec
or
add
lea
or
sbb
shrd
pop
mov
hlt
add
loope
adc
and
push
loope
mov
xor
bound
push
inc
adc
jo
or
lcall
subl
out
jne
aad
xor
out
int
push
cmpb
sbbl
lods
fisubrs
jne
jle
mov
addr16
nop
cs
nop
mov
lock
adc
pop
cmp
or
cmp
lds
add
gs
or
or
xlat
nop
ljmp
fdivr
jb
mov
sti
or
push
loop
inc
mov
outsb
adc
jae
pop
mov
sub
aad
out
and
cmove
fdivrl
jbe
or
mov
jbe
adc
adc
js
addr16
shll
inc
pop
roll
sub
inc
mov
mov
xor
hlt
mov
rolb
lret
ret
mov
xchg
mov
pop
rolb
push
fistpl
dec
cmpsl
rolb
cmpsb
test
adc
outsb
int3
xchg
fisttps
insb
shr
xchg
mov
loopne
mov
pop
or
cs
pop
mov
push
test
push
sub
jno
sarb
push
ret
mov
push
in
lock
pop
jle
or
in
pop
xor
adc
mov
dec
repz
ret
ds
cmp
inc
inc
pop
repnz
pop
xchg
fcompl
jne
cld
mov
xchg
in
sub
cmp
push
int
outsb
outsl
aaa
sub
xor
aam
xchg
fsub
adc
mov
rolb
cli
xor
inc
jo
add
lods
aaa
add
loopne
adc
clc
adc
push
mov
ds
ret
push
mov
int
add
cmc
orl
fldcw
arpl
rcr
or
lock
mov
andb
pop
mov
inc
or
pushf
jmp
and
bound
add
ja
andl
or
adc
out
cmp
add
inc
scas
pop
pop
je
in
hlt
mov
stc
lret
pop
das
das
mov
rcrl
dec
xchg
cmpsl
xchg
xchg
push
mov
mov
repz
and
movsl
das
dec
addr16
aad
popa
flds
test
xor
jle
fldenv
clc
mov
gs
adc
mov
xorl
fbld
lret
outsb
bound
test
pop
js
sbb
xorb
popf
das
aaa
lea
jno
lahf
cmpsl
out
add
pop
loopne
in
cmp
sub
mov
rorb
in
cmp
mov
sti
test
add
pop
mov
inc
cwtl
push
loop
pop
jp
jnp
xchg
call
insb
or
cli
add
xor
ficoml
mov
imul
mov
adc
push
gs
cmpsb
mov
pop
or
dec
imulb
rcll
mov
ja
mov
imul
mov
xor
jle
push
dec
ljmp
bound
mov
jnp
cmp
push
jbe
shrb
in
mov
sbb
int3
xlat
add
jne
das
lret
aam
xlat
add
mov
sbb
ja
fistpl
xchg
jl
lods
pop
loopne
imul
lock
outsl
add
or
das
mov
adc
xchg
out
sub
pslld
insl
scas
inc
enter
iret
incl
lret
dec
add
inc
in
push
fnstcw
add
pop
or
negl
xchg
stos
aam
imul
cmp
repz
stos
cmp
mov
mov
scas
mov
adc
rol
cltd
jno
push
mov
ljmp
xor
rorb
es
roll
adc
mov
sbb
test
inc
mov
mov
scas
and
add
repnz
mov
push
cli
int
xchg
inc
ja
popa
fstpl
sub
das
xlat
jne
sub
jb
fsubrs
call
dec
pop
adc
int3
dec
xchg
fistpll
dec
pop
xchg
movb
sub
dec
mov
sub
fldenv
test
sbb
je
hlt
pop
cmpsb
add
or
dec
adcb
jmp
loopne
jne
push
gs
jo
into
imul
dec
idivl
sbb
sub
and
in
loopne
inc
add
mov
or
sbb
mov
jge
push
in
and
sbb
imul
mov
repz
lds
stos
xor
pop
icebp
mov
push
xchg
fmull
out
aas
test
not
cmp
ret
iret
inc
out
out
pop
pop
sub
mov
scas
outsl
mov
adc
movsb
push
mov
pop
ret
or
mov
or
insb
or
sbb
dec
cs
fisubs
cmpsl
scas
dec
dec
mov
lods
lret
and
or
mov
mov
sub
in
mov
out
push
xchg
jp
mov
fwait
hlt
fcompl
xchg
inc
dec
mov
cld
hlt
push
sub
dec
mov
clc
and
push
sbb
je
movsl
fs
jae
add
fadds
inc
bound
pop
xchg
mov
xor
shll
jl
test
lret
adc
addr16
sbb
cmpl
in
repz
dec
imul
mov
int3
fs
arpl
insb
jp
repnz
inc
fistps
shll
xlat
test
dec
add
pop
xchg
sub
cld
stos
pop
xor
push
xchg
pop
push
mov
dec
add
dec
pop
loope
xlat
inc
clc
test
xor
rcr
pusha
mov
pop
inc
xchg
sub
shl
dec
out
arpl
ret
daa
jge
jle
or
icebp
mov
mov
ja
outsl
lock
mov
push
imul
mov
inc
dec
push
adc
or
fadds
xor
and
pop
ret
cwtl
jae
out
out
xor
cmpsb
add
arpl
xchg
dec
in
xor
insl
mov
dec
outsb
ret
mov
ljmp
ja
aad
cs
add
mov
mov
cwtl
push
loop
loopne,pt
loop
out
push
iret
stos
cmp
cmp
cmp
mov
and
jp
or
pop
je
push
leave
pop
aaa
addr16
xchg
push
addl
sbb
enter
dec
aam
jl
dec
insl
sbb
or
inc
hlt
xor
fsubrl
in
jg
mov
dec
es
jae
cld
out
sbbb
fstps
cmp
dec
dec
lds
cmp
inc
mov
push
push
mov
push
adc
push
xor
in
mov
mov
cmc
sub
xor
andl
insl
js
ret
imul
addr16
xor
js
xlat
sub
popf
mov
in
pushaw
movsl
cmc
sbb
pop
aaa
mov
loopne
mov
jl
jg
mov
xchg
loope
xchg
pop
mov
dec
fcom
inc
mov
or
jnp
je
int
orl
js
mov
cmp
cmpsb
adcb
or
inc
push
xchg
dec
cmc
jp
jg
gs
pop
movl
bound
jbe
shll
inc
sarl
xor
stos
jns
xor
push
cli
cmp
adcb
subb
push
cmp
lock
jge
add
insb
pop
repnz
mov
lret
mov
test
mov
xchg
add
pop
jmp
mov
dec
movd
sbbl
and
pop
fidivs
ja
jg
out
ss
imul
xchg
test
das
push
sbb
mov
sbb
mov
add
sub
fs
aas
scas
cs
xchg
es
sbb
test
and
jle
mov
mov
push
jecxz
fs
pusha
sti
push
mov
mov
and
or
sahf
pop
mov
xchg
inc
cmp
pop
stc
mov
into
and
je
in
xchg
stos
and
fdivs
stos
test
jb
loope
fldl
ror
push
arpl
sub
pop
sbb
xchg
adc
scas
or
stc
xor
cmp
popf
cmpsb
adc
push
cmp
jmp
xchg
and
sub
mov
repz
fsts
pop
sbb
sahf
and
mov
testl
cs
jbe
dec
jo
ret
pop
mov
push
cmp
lds
ficoms
gs
dec
cmp
dec
xlat
or
sbb
and
push
rcrl
mov
mov
push
imul
fdivr
cmp
bnd
xchg
or
mov
dec
mov
pop
push
adc
dec
lret
jno
adc
jle
sub
cltd
xor
out
mov
ret
push
xchg
push
fmull
mov
push
cmp
or
lock
add
inc
clc
ret
mov
cmp
mov
pop
sub
xchg
clc
inc
dec
jo
pop
mov
adc
test
clc
jmp
adc
nop
xchg
pop
sub
jge
out
jmp
mov
stos
dec
jnp
stc
jmp
jp
in
jge
movsb
pop
xchg
inc
xor
push
popa
jmp
cltd
mov
into
adc
pop
call
sbb
or
lds
mov
mov
out
ret
pop
insl
pop
mov
cmp
andb
popf
mov
mov
cs
lret
lods
ret
lret
subl
adc
push
pop
mov
clc
setle
mov
mov
push
repnz
add
je
mov
mov
or
into
cmp
mov
cmpsl
ret
push
cmp
jp
xor
push
lock
or
dec
fldl
popa
stc
mov
ret
cmp
int
or
sub
lock
aam
and
mov
rorb
adcl
test
idiv
fistpl
js
adc
dec
add
jne
cmp
popa
jge
ret
repz
fdivrl
sbb
cltd
add
mov
sbb
enter
out
jle
test
mov
mov
js
in
pusha
pop
mov
push
sbb
add
mov
xchg
xor
and
in
cmp
cld
pop
mov
insl
out
rolb
mov
mov
mov
inc
push
push
xor
push
imul
add
fs
jp
mov
into
insl
xor
lods
shll
cmp
stos
add
call
sub
mov
fcom
mov
iret
or
out
loope
add
jl,pn
sub
pop
pop
lcall
dec
inc
jo
loope
fs
pop
in
and
cmpsl
lret
cmpsb
add
rcl
outsb
js
je
cmp
fsubr
sbb
stos
xchg
movsb
fnsave
and
mov
cmp
and
aas
sarl
pop
pop
jne
test
cmp
sub
fadd
cmp
jge
repz
pusha
mov
pop
int
es
add
xor
jb
ljmp
gs
push
call
hlt
and
js
jbe
cmpsl
add
jmp
pop
sub
imul
lods
fists
pop
cmpsb
arpl
out
lahf
push
lcall
lret
adc
add
scas
and
out
pop
in
ret
xchg
xchg
jbe
bound
cmp
pop
mov
leave
xchg
insb
mov
sbb
sbbb
mov
pop
das
hlt
adc
cmp
lods
je
mov
inc
pop
xchg
xchg
dec
popf
popf
popf
adc
ss
dec
popa
enter
out
pop
mov
xor
jne
loop
and
push
imulb
scas
and
cs
inc
outsl
push
bound
cmp
js
xchg
ljmp
or
mov
les
or
add
sbb
clc
outsb
es
jl
mov
ficompl
xchg
cmpsl
enter
sti
inc
test
fsubrs
mov
jno
insb
jbe
or
rorl
int3
cli
adc
jp
aam
sub
jle
cmp
pop
jo
sbb
js
xor
mov
mov
pop
mulb
sbb
or
test
sub
mov
and
ds
xchg
icebp
and
pop
adc
push
stos
sahf
iret
add
mov
and
jmp
lds
mov
int3
imul
imul
push
or
stos
jp
push
xor
mov
test
insl
or
jl
hlt
scas
fcomps
sub
xor
ds
mov
sbbl
addr16
repnz
cmpsb
sub
jns
mov
stos
dec
stc
cld
mov
push
data16
test
popa
push
cltd
pop
mov
add
dec
bound
jecxz
outsb
cmp
mov
ret
ja
xor
mov
xlat
mov
xchg
aam
pop
and
inc
jl
das
push
push
mov
js
xchg
js
pop
jb
add
in
std
stos
repz
push
mov
stos
mov
mov
leave
xchg
fcmovbe
mov
arpl
test
push
jge
and
xor
out
jp
mov
loope
xor
push
es
gs
outsb
cmp
shl
inc
imul
in
pop
cltd
sbb
pop
in
insb
mov
pusha
mov
repz
cmp
push
push
sbb
mov
pushf
fadd
insl
adc
pusha
dec
xor
int3
push
sbb
fld
xchg
inc
dec
loope
pushf
and
in
jmp
push
pop
int
adc
push
ds
and
in
xchg
add
mov
lcall
jge
add
dec
out
inc
lods
jmp
imul
nop
pop
cmp
repz
cmpsb
sub
cs
pushf
push
popa
mov
shlb
gs
ffreep
test
fdivrs
push
fwait
pop
cld
sub
xor
pop
or
dec
jmp
insl
jne,pn
shll
cmp
es
mov
inc
inc
sbb
push
repnz
xor
iret
push
cmpsl
addb
sub
in
mov
pop
or
je
fdivs
rcrl
es
adc
out
mov
daa
adc
in
jnp
mov
ljmp
icebp
xchg
mov
push
ret
fcomip
les
add
jg
wbinvd
test
push
ret
mov
ds
dec
enter
mov
mov
sbb
popa
xchg
dec
or
insl
add
stos
stc
cwtl
ret
lods
mov
push
mov
ja
out
sub
inc
push
hlt
cmp
test
loopne
imul
inc
xlat
insw
jg
pushf
sbb
xchg
push
sbb
jns
add
clc
pop
cli
aaa
jno
je
scas
push
pop
test
enterw
mov
dec
cli
loope
out
xchg
call
push
or
je
sub
lahf
mov
cltd
push
clc
or
xchg
push
aam
jmp
dec
dec
sub
add
test
sbb
xchg
int
imulb
stos
cli
mov
fisubl
xor
add
pop
cmp
add
repnz
andl
sub
jg
jnp
mov
in
icebp
sub
faddl
jmp
fmulp
ja
aad
incb
mov
rcrl
add
cmp
lock
or
jne
fidivl
cmp
or
cmpsl
pop
cmp
lahf
pop
rcll
inc
jne
push
ficoml
les
cs
std
adc
lahf
jmp
mov
sarl
repz
fldz
or
test
adc
mov
into
stc
test
adc
push
cltd
pushf
mov
fbld
add
dec
dec
push
jbe
xor
je
sbb
data16
push
pushf
lret
add
jae
sbb
add
jae
sub
sti
and
add
fimull
and
lret
sub
clc
and
cmp
and
ljmp
fsubs
xchg
mov
push
jo
aas
inc
mov
shr
pop
lock
in
gs
fldl
mov
jns
mov
xchg
out
es
mov
lcall
jns
mov
xchg
ror
je
adcb
mov
xor
or
call
gs
loop
push
or
mov
cmp
aas
adcb
jmp
negb
and
lea
inc
sbb
pusha
into
mov
and
adc
push
cmp
daa
push
xchg
xor
mov
scas
mov
dec
jmp
push
rcrl
pop
out
or
push
push
dec
mov
into
push
inc
cmp
and
push
mov
push
lods
movsb
test
ljmp
sub
pop
jb
mulb
jnp
out
sbb
pop
filds
mov
push
imul
xor
jne
lock
adc
cld
sub
ja
jg
add
in
mov
iret
ljmp
and
add
in
xchg
or
aad
in
test
cs
jns,pn
adc
push
lods
pop
cmc
in
pop
stos
ret
in
cltd
movsl
int
std
out
ja
sub
or
xor
cltd
adc
shl
pop
mov
and
pushf
sbb
xor
mov
dec
aam
jge
push
sbb
xchg
xchg
add
dec
xor
add
rcll
cmp
out
inc
jmp
mov
stc
orb
pop
cmp
pop
movsb
adc
push
dec
aas
and
xchg
shl
or
adc
sbb
into
insl
and
dec
or
stos
aas
leave
vhsubps
pop
push
leave
int3
ficoml
subl
jne
inc
add
lret
inc
push
ss
xchg
cmpsb
xor
inc
into
pcmpeqd
test
mov
push
jle
jno
dec
icebp
lock
stos
cmpsb
inc
stos
jle
cmp
hlt
loopne
stc
xchg
fdivp
std
cli
ljmp
sbb
repz
clc
lock
and
lock
lea
xlat
push
mov
out
lods
pop
add
inc
or
lock
pop
out
fs
adc
imul
push
mov
cmp
lds
add
out
movsl
stos
push
sahf
inc
xor
fwait
push
xor
sub
push
inc
mov
push
pop
mov
je
rcr
out
and
iret
int
stos
inc
mov
push
push
inc
mov
cmp
scas
dec
and
xchg
or
rcll
jae
punpcklwd
and
dec
into
xor
lahf
movsb
cltd
adc
iret
popf
push
int3
movsl
loopne
adc
mov
and
cmpl
add
jge
mov
pop
adc
insb
orb
push
inc
cmp
inc
arpl
sar
call
mov
shrb
cmp
push
cwtl
repnz
outsb
mov
ret
fdivl
xchg
inc
test
insb
cmp
adc
mov
cmp
ds
fstpt
int3
mov
fisttps
push
imulb
fsubs
stc
filds
sahf
aaa
jbe
outsl
enter
sti
scas
jle
xor
inc
adc
mov
movsb
cmp
pop
test
popf
int
mov
mov
add
sub
sbb
in
mov
test
enter
or
lods
iret
imul
fcomp
or
adc
enter
xchg
mov
jmp
imul
icebp
push
mov
lahf
dec
scas
jne
fcoml
negb
sbb
sti
or
jmp
test
xchg
jle
dec
lea
mulb
inc
addr16
add
enter
div
daa
pusha
cmp
sbb
lahf
rcrl
jae
xor
cmp
xchg
mov
or
loopne
ds
adc
jl
or
mov
sub
mov
cmp
cli
les
jno
cmp
sti
bound
mov
sbb
aaa
test
insb
in
ficompl
and
jl
push
movsb
lahf
pop
mov
cmp
inc
xchg
not
jp
or
scas
lock
cmp
cmp
movl
jle
xor
outsl
test
test
mov
out
int
mov
dec
mov
adc
arpl
imul
mov
cli
mov
jns
cli
arpl
aaa
xor
push
jne
std
or
cltd
ffreep
jno
or
sub
mov
in
jmp
inc
ret
xchg
cmp
mov
mov
jecxz
fwait
xor
mov
cli
push
xchg
cmp
lahf
into
xchg
into
cmp
out
shrl
loop
sbb
pop
fwait
popf
cld
xor
push
jge
push
xor
shrb
stc
in
sbb
test
dec
and
adc
dec
aaa
outsl
repz
popf
xor
sbb
roll
sub
ljmp
shll
mov
ficomps
mov
shlb
out
and
icebp
push
mov
cwtl
rclb
loope
sahf
out
pop
mov
test
jb
rcr
inc
mov
add
mov
pop
mov
pop
sub
ret
scas
xchg
cmp
adc
cmp
jb
mov
mov
lods
rcl
fcoms
sbb
sub
es
pop
mov
out
push
mov
shlb
outsb
xchg
add
mov
add
testb
jp
aad
mov
aam
and
add
lret
sbb
lds
cmpsl
fs
inc
dec
mov
lds
cmp
inc
cmp
mov
mov
push
sti
add
hlt
dec
or
jbe
dec
push
xchg
jmp
jne
xor
subb
inc
push
hlt
push
loopne
xor
xlat
imul
repnz
or
jno
insb
mov
sbb
mov
xchg
mov
je
les
movsb
stc
dec
mov
scas
pop
loop
mov
stos
rolb
inc
ss
repnz
aaa
lods
push
xor
fisubl
jmp
mov
add
adc
movsl
add
mov
div
xlat
and
adc
lds
sbb
or
ss
jno
nop
and
push
aas
mov
xorb
pop
scas
fs
xlat
popf
mov
inc
add
mov
stos
and
dec
xlat
add
mov
mov
add
aam
loope
loope
nop
sub
lods
mov
sub
fsubrp
mov
sub
xchg
jbe
or
mov
and
inc
and
mov
jne
repnz
sbb
sar
inc
jle
xchg
push
push
mov
mov
outsl
sbb
repz
popf
xchg
jle
stc
push
or
iret
lahf
rcl
inc
jl
xor
mov
sub
int
fstpt
inc
sbb
sbb
daa
mov
popf
mov
out
adc
sub
addr16
xor
aad
add
and
sub
pop
subl
xor
xor
dec
lea
int
inc
iret
adc
dec
mov
test
adc
rcrl
jge
pop
imul
push
ds
mov
mov
and
cmp
cmp
and
add
bound
scas
push
xor
test
push
xchg
cmp
ror
dec
jmp
int
inc
xorb
inc
jmp
lods
cmpsb
add
cltd
leave
mov
jmp
sub
dec
int
mov
mov
sahf
je
jle
sub
adc
xchg
xor
pop
mov
sbb
push
adc
stos
outsl
icebp
and
xor
jo,pt
fs
sbb
out
xchg
pop
or
pop
fsincos
in
mov
adc
sub
xchg
mov
cmp
js
test
jge
fst
cltd
push
mov
lcall
add
xchg
imul
mov
daa
pop
fiadds
sbb
sub
in
lcall
jo
jmp
imul
dec
test
dec
inc
stc
pop
adc
mov
loopne
mov
insl
ds
jg
pop
roll
dec
and
sub
pop
mov
push
jle
repz
dec
cli
js
sub
pop
mov
in
sub
or
add
ljmp
les
add
mov
leave
xor
jge
xor
daa
dec
push
fcmovu
sbb
jbe
neg
jb
push
je
jno
fdivs
out
jbe
insb
mov
pop
scas
adc
xor
xchg
roll
outsb
outsl
pop
sti
pop
mov
pop
lods
loopne
popa
or
jne
dec
push
scas
mov
ror
adc
pop
xchg
hlt
push
repz
mov
hlt
jne
inc
outsl
cld
add
mov
or
cmp
inc
sarl
fimull
loop
fimuls
add
and
iret
add
jo
mov
ds
ret
cmpsl
or
mov
push
gs
mov
daa
in
out
stos
xchg
xchg
cmpsb
xor
je
add
cltd
popf
cmp
cmc
xor
pop
adc
pop
adc
pop
sahf
cwtl
sbb
xchg
out
inc
sarl
push
xor
cmpsl
inc
mov
and
push
fidivl
mov
xchg
cld
out
ret
out
aad
mov
addr16
cmp
out
push
lcall
push
lods
xor
insl
push
enter
mov
and
adc
out
push
cld
test
je
fsubr
or
mov
lock
add
mov
and
cmpsb
mov
jge
lock
or
jne
insl
std
in
hlt
pushf
lods
jp
xchg
ficoms
iret
adcb
push
add
mov
jns
nop
movsb
cmp
or
mov
adc
xchg
les
ljmp
out
add
sbb
lahf
adc
insl
les
mov
insl
sub
adc
xlat
xchg
jle
clc
jl
stos
shrb
aad
jb
pop
xor
bound
popf
pop
pop
pop
cwtl
jg
mov
pop
mov
sbb
mov
cmp
cmp
shr
dec
mov
out
jp
fimuls
rcr
loope
mov
mov
sbb
fbld
xor
pop
out
roll
addr16
bts
negl
xchg
dec
and
scas
stos
inc
mov
or
test
into
mov
adc
push
lahf
int
jge
push
push
icebp
test
inc
out
push
and
add
rep
mov
and
cld
popa
test
cwtl
xchg
and
leave
add
sub
jmp
outsl
sbb
das
stos
insl
or
movsl
jne
xchg
addps
sbb
dec
outsl
xor
insl
and
mov
repnz
rcll
xchg
fcom
add
sbb
inc
adc
inc
mov
cld
mov
mov
or
pop
movsb
sbb
imul
mov
nop
xchg
in
inc
add
xor
mov
xchg
jb
gs
xor
adc
pop
aaa
je
inc
enter
adcb
clc
loop
div
test
mov
mov
mov
pop
sub
pop
xchg
cs
es
xor
sbb
stc
xor
outsb
neg
or
cmpsl
dec
mov
jge
iret
pop
push
push
jge
inc
out
nop
push
out
jnp
fs
adc
cmp
xchg
das
daa
outsl
int3
pop
push
jl
test
pusha
sbb
iret
xor
xchg
mov
jmp
jg
fsubs
sub
cmp
iret
dec
jb
pushf
repz
jl
cmp
mov
xchg
aaa
jne
subb
mov
movsb
xchg
lret
imul
sar
movsb
jae,pn
cwtl
repnz
clc
jne
xchg
sbb
push
xchg
push
sub
adc
scas
or
lret
push
loop
and
aam
nop
repnz
subl
aas
notl
push
xlat
popf
xor
dec
dec
pop
add
pop
inc
mov
addb
cli
jne
mov
push
les
mov
push
mov
sub
mov
lea
jae
icebp
sbb
cmp
push
or
sbb
test
mov
jb
aad
or
les
jmp
mov
stos
leave
js
jmp
test
in
add
inc
mov
fidivrs
insl
cmp
xchg
pop
or
es
inc
in
insb
stos
push
stos
xchg
aaa
sahf
js
jo
test
or
outsl
cwtl
sbb
pop
ds
jb
pop
xchg
inc
dec
enter
mov
pop
aaa
mov
insl
cld
jno
test
call
fimuls
mov
jns
les
jl
xchg
or
xchg
or
lret
aam
xor
adc
mov
xchg
pop
fwait
aad
xchg
push
inc
push
popa
js
dec
movsl
cmp
lcall
in
mov
sbbl
push
push
mov
insb
aaa
push
je
push
cmp
push
jmp
ret
cmp
add
jne
lea
sub
cltd
fistpll
lock
pop
xchg
xchg
or
loope
xor
loopne
adc
dec
and
xor
dec
out
aad
or
jns
sarb
xor
in
stos
xor
mov
ja
int
jne
add
ficompl
and
mov
sbb
jmp
sbb
cmp
das
fwait
adc
sahf
mov
mov
cmpsb
jge
xchg
dec
and
clc
icebp
in
iret
fwait
sbb
popf
dec
testl
outsl
cli
xchg
aas
aam
and
mov
pop
or
aaa
xor
popa
enter
xor
jae
shrb
out
call
mov
jmp
or
push
out
les
pop
add
add
cmp
xor
mov
or
cmp
das
ret
cmc
sahf
roll
xor
lcall
arpl
pop
jbe
mov
ljmp
mov
pop
sub
out
cmpsl
aad
sbb
and
mov
insl
inc
or
loope
push
mov
xchg
push
mov
lea
or
dec
mov
test
shll
jg
jne
insb
fwait
or
loopne
rorl
adc
rcll
test
sbb
xchg
sbb
inc
lods
xchg
and
cld
in
sbb
popa
push
das
and
sbb
jp
mov
push
out
fs
sbb
mov
pop
lahf
xchg
cmp
jns
mov
mov
out
adc
sub
pop
dec
dec
pop
inc
lods
or
fdivrl
popa
imul
inc
push
clc
cltd
roll
out
sbb
mov
mov
xchg
std
dec
out
adc
xchg
sahf
jns
lea
cmp
gs
jl
sarb
in
iret
push
adcb
sub
test
sbb
ffreep
jne
adc
cmp
adc
mov
mov
je
inc
lret
pop
repz
adc
aaa
jmp
dec
lcall
mov
push
sub
inc
xchg
xchg
mov
mov
pushf
cmp
jmp
push
xchg
jp
mov
jg
push
insb
imul
jg
jp
cld
add
stos
mov
lods
es
cmp
mov
lret
mov
out
loopne
adc
mov
mov
add
repz
sbb
sub
repz
sti
mov
or
cli
push
sbb
cmp
cwtl
cmp
hlt
jge
mov
sub
into
sub
mov
repnz
push
out
jl
mov
lds
mov
outsl
insb
lahf
jns
xchg
and
lahf
adcl
pop
es
jge
pop
inc
inc
mov
fldt
cwtl
call
pop
testb
cmpsl
aaa
test
ret
add
inc
mov
pop
push
dec
mov
sbbb
sub
xchg
lret
lea
out
jmp
xchg
imulb
jp
ret
aad
movsl
jb
pushf
or
cmpsl
clc
cmpsb
loopne
sbb
ret
cld
stos
xchg
jg
ret
popf
cmc
push
mov
mov
in
push
mov
jb
sub
negl
sub
push
sub
adc
int
hlt
jb
incb
test
clc
fs
xchg
jmp
mov
xor
xor
mov
adc
and
aaa
inc
frstor
in
pop
cmp
lds
adc
lds
lods
inc
mov
and
les
popa
xchg
sub
leave
jl
andl
push
les
cli
and
add
ret
scas
push
mov
jg
into
xor
mov
add
hlt
aad
xlat
xor
cmp
lods
xchg
push
subb
loopne
jge
push
mov
push
or
sbb
cli
dec
xchg
dec
lcall
in
fildl
xor
sub
mov
or
or
fidivs
jno
ljmp
adc
mov
cmpsl
repz
cmpsb
jb
ds
adc
cmpsl
enter
enter
mov
stc
or
mov
std
shl
shlb
add
xor
cmp
and
arpl
mov
pop
jb
xor
and
dec
stc
and
add
xlat
push
xchg
aas
shlb
jg
add
rep
sbb
adc
cmp
popf
daa
lret
push
or
inc
ret
gs
inc
in
das
fidivrs
outsl
mov
mov
cld
inc
and
add
jo
xor
lods
loope
jae
add
notb
ffree
dec
and
push
push
lock
cs
mov
mov
sarb
or
sbb
mov
subb
int
xlat
push
mov
imul
aaa
sbb
rcrl
ljmp
pop
push
leave
cmp
cli
fwait
mov
int3
test
pcmpeqw
sub
mov
lods
xor
mov
add
sub
inc
movb
or
cmp
mov
jle
xchg
nop
cs
mov
mov
dec
sbb
bound
xor
aas
aam
cmpsl
lds
xchg
mov
pop
arpl
inc
xorb
pushf
pop
or
pop
sti
dec
or
enter
fcompl
sub
int
mov
stos
push
cmpsl
add
mov
call
scas
mov
sbb
scas
in
fisubl
jae
sbb
mov
into
out
dec
addr16
xchg
es
xchg
cmp
leave
dec
out
repz
aam
out
pop
lods
push
sbb
andl
outsb
nop
cmp
jae
in
push
je
cs
mov
xor
jnp
mov
movsl
dec
imul
xchg
pop
lea
lea
outsl
sbbb
push
and
repnz
and
xor
pop
mov
xlat
sub
out
cmp
pop
cwtl
cltd
cmp
imul
sbb
jmp
in
decl
rolb
js
or
in
insb
ljmp
das
call
pop
lret
jnp
leave
push
sub
mov
push
dec
sub
and
in
sub
add
push
sub
cmp
les
cmpsb
lds
cmc
lods
mov
test
jne
into
das
xchg
repz
mull
aad
int
mov
hlt
stc
jmp
imul
push
pop
mov
xor
mov
jmp
std
cmp
sub
adc
test
scas
stc
mov
ret
es
mov
in
mov
sub
loopne
add
pushf
mov
lret
jle
mov
mov
std
data16
mov
dec
pushf
adc
jne
fsubrs
and
mov
jbe
shrl
sub
fisubrl
int3
jl
mov
lret
mov
test
jno
ror
cltd
nop
repz
inc
rcll
inc
add
mov
jecxz
pop
dec
inc
adc
daa
mov
mov
bndldx
adc
lods
stos
push
stos
aam
inc
mov
push
sbb
repnz
ficoml
ficomps
dec
sbb
inc
shlb
push
lret
pop
dec
dec
push
push
mov
and
insb
test
lahf
push
xorb
shll
clc
jmp
xor
das
repz
sbb
roll
popa
sub
lock
sti
sbb
addr16
stc
dec
push
aam
jno
push
loopne
and
mov
aas
std
fidivrs
push
mov
and
std
dec
scas
jmp
and
mov
cs
adc
in
mov
nop
ja
loop
jmp
int
call
dec
push
sarl
not
jb
mov
sub
adc
mov
aad
mov
mov
add
pop
cmp
leave
out
ss
dec
sub
rolb
lods
pop
xlat
push
sub
fucomp
push
or
mov
sahf
pushf
add
int3
xorl
jns
pop
fdivr
and
xchg
das
sbb
loop
add
sub
aas
add
ficompl
jge
lods
xorb
sub
or
mov
jle
enter
cmp
mov
cltd
call
aam
mov
sbb
jae
cld
js
push
push
pop
enter
xchg
push
adc
inc
sub
sarl
mov
xor
pop
mov
rolb
pop
add
movsl
popf
add
lret
or
add
mov
add
sbb
lcall
cmp
mov
mov
push
outsl
push
pop
into
std
mov
cmc
adc
xchg
inc
fs
std
roll
jl
and
sbb
adc
pusha
inc
out
in
out
mov
inc
fs
mov
lahf
imul
add
jl
stc
push
mov
gs
cmovns
push
sarb
call
fstpl
inc
push
leave
pop
divl
adc
in
shll
sub
aad
push
push
pop
mov
push
pop
fsubrs
in
or
sbbl
icebp
ret
adc
pop
mov
sar
aas
sub
mov
shrb
test
shll
mov
lret
sbb
pop
or
adc
in
les
xor
enter
jne
dec
sub
mov
dec
ss
add
pop
jmp
or
jb
or
fcom
and
or
push
jno
jmp
pop
mov
clc
pop
int
repnz
sbbl
add
push
mov
inc
mov
ret
ljmp
mov
mov
outsl
aam
add
xor
dec
leave
leave
ljmp
scas
ficoms
sub
xchg
fisttpl
push
outsl
inc
aaa
and
push
push
loopne
push
test
mov
cli
mov
ljmp
jp
cs
lock
push
pop
dec
cld
inc
xlat
push
inc
mov
jmp
movsb
cmp
cmpsb
push
arpl
xchg
repz
fwait
xchg
adc
mov
mov
outsb
daa
dec
out
jo
mov
xor
outsb
std
jns
iret
insb
out
xchg
sub
adc
cld
ds
pop
adc
mov
push
jmp
cltd
mov
movsb
call
in
mov
into
popf
adc
inc
mov
lahf
aas
push
sahf
pop
sub
cmp
test
ret
test
mov
xor
push
sub
fisttpl
cmpsl
sub
or
adc
mov
add
dec
test
ljmp
xor
add
loopne
mov
mov
xchg
fs
lods
sub
scas
pop
add
idivl
lret
mov
or
and
es
lret
sbb
adc
test
in
sti
inc
xchg
ret
and
pop
mov
ret
push
push
xchg
and
dec
cmp
into
ret
sbb
divb
dec
stos
add
aam
xchg
cmpsb
fcompl
pop
pop
call
scas
insb
stos
dec
jo
es
push
das
push
mov
test
adc
push
inc
in
out
xor
pop
jl
jge
scas
imul
fnstcw
mov
sarb
bound
out
dec
lret
mov
lods
lods
mov
and
stos
cmp
test
mov
jmp
push
idiv
xor
je
pop
dec
dec
gs
or
dec
xchg
or
pop
imul
ret
fidivrl
fs
xor
movsb
sbb
iret
mov
adc
mov
dec
pushf
lods
cltd
xor
push
pop
addr16
push
jl
jno
sub
shll
mov
insb
scas
popa
orb
mov
sub
addl
jae
ret
pusha
cs
sbb
iret
dec
and
lds
cmpl
xor
popf
int3
sbb
rcl
cmp
inc
out
push
adc
outsb
dec
sub
dec
adc
adc
cs
incb
test
adc
scas
in
rorb
add
dec
int3
jne
mov
lods
rcrb
dec
imul
fnstenv
and
loope
ja
cmpsl
inc
sub
add
enter
fldt
push
leave
push
mull
pop
mov
call
mov
pop
add
push
mov
dec
mov
inc
in
sub
xor
fists
sahf
pop
mov
mov
test
es
mov
jl
mov
cmp
fadds
cmp
mov
cld
and
sub
sbb
int
inc
int
test
jbe
daa
sbb
mov
fs
or
sub
mov
mov
adc
insb
sbbl
xchg
and
mov
or
not
pop
outsb
adc
mov
lea
or
out
sbbb
mov
mov
int3
inc
test
inc
inc
xchg
cld
faddl
shrl
add
mov
xchg
lock
jg
push
or
cmp
push
push
adc
xchg
std
aas
jae
decb
inc
mov
scas
movsl
xor
sub
pop
lock
add
rolb
xor
and
mov
push
lods
popf
punpckhwd
sbb
xchg
push
cmp
sbb
mov
ja
enter
pusha
and
xchg
xchg
fdivrl
nop
test
les
xchg
lcall
adc
loopne
call
ror
pop
aad
push
inc
push
enter
mov
jg
sbb
add
repz
push
inc
dec
cmp
xchg
imul
cmpl
add
addr16
mov
rclb
mov
pop
cmp
pop
xchg
popa
out
pop
lock
or
incl
ljmp
adc
ds
cmp
cld
mov
imul
cli
mov
push
loopnew
dec
sbb
in
loope
and
ja
jne
sub
outsb
mov
mov
push
add
dec
test
mov
adc
sub
dec
mov
jmp
ror
xchg
enter
pop
jmp
jno
lahf
push
mov
scas
or
js
mov
cmc
es
cmpsl
cmp
cmp
cmp
and
fs
sub
in
inc
jle
jb
test
inc
out
add
jnp
fimuls
cmp
call
sub
enter
push
jge
xchg
pop
add
daa
adc
xor
mov
sub
imul
inc
mov
lock
out
sub
insl
hlt
and
adc
xchg
ret
ds
imul
mov
jmp
stc
ret
out
dec
and
jns
test
call
int3
push
sbb
cmp
nop
sbbl
sti
test
push
test
ficoms
fstpt
jnp
mov
mov
mov
inc
pop
in
scas
je
daa
sub
aam
cmp
repz
or
xchg
sti
and
stos
lcall
mov
cmc
scas
stc
jle
xlat
imul
fimuls
xchg
enter
repz
dec
es
inc
adcl
xor
push
mov
bound
rcr
cltd
mov
adcb
std
cmp
negl
push
pop
gs
mov
int3
sub
nop
test
mov
dec
test
imul
repz
jle
in
fwait
lock
iret
dec
pop
mov
and
call
inc
int3
iret
mov
cwtl
mulb
adc
pop
repz
scas
aad
or
jb
xor
dec
bt
scas
fstpl
imul
add
leave
lea
js
js
jmp
repnz
lahf
adc
sub
shll
add
xchg
xchg
mov
pop
add
mov
lods
jo
mov
fbstp
mov
iret
inc
sbb
sahf
es
movsl
nop
in
mov
cmpsb
decl
cmp
testl
mov
inc
push
mov
out
rcrw
pop
pop
sti
adc
lcall
stos
adc
lcall
daa
lods
imul
cmp
and
push
bound
cmp
test
mov
sbb
sbb
push
aas
add
sbbl
cmpsb
test
xchg
loop
int
sub
ret
les
sahf
dec
notl
mov
aaa
xchg
adc
cmpsb
in
inc
dec
test
mov
and
out
pushf
sbb
mov
or
pop
sub
push
xor
loop
or
imul
je
notb
xchg
xchg
and
jae
xor
enter
ds
bound
mov
sti
and
pop
ja
jl
mov
mov
lret
pop
sub
xor
call
out
adc
mov
xlat
cli
push
rolb
ss
arpl
cmpsl
cmpsl
fdivr
push
pusha
xchg
jno,pt
sub
or
or
adc
push
aas
sub
es
mov
fidivrl
test
ljmp
pop
jecxz
add
das
cli
adc
mov
pop
pop
nop
lods
movsl
sbb
cmp
or
roll
inc
lea
push
out
ss
lds
xor
mov
sbb
in
sbb
scas
or
js
mov
or
in
movsb
xor
jp
orb
adc
adcb
add
mov
scas
jnp
pop
dec
jecxz
jbe
cmp
mov
dec
ret
scas
xchg
sbb
mov
xacquire
adc
xor
mov
xor
xor
iret
inc
enter
xchg
mov
or
and
dec
and
aas
hlt
push
mov
mov
adc
cmpsl
mov
in
push
cwtl
mov
arpl
ljmp
push
push
inc
sub
sub
adc
pop
xlat
mov
insb
loop
sbb
data16
mov
data16
push
inc
sti
popa
sti
cli
lods
and
mov
loope
call
jg
pop
mov
xor
sub
pop
sbb
xchg
hlt
jo
and
mov
mov
mov
push
imul
dec
icebp
dec
je
in
jmp
outsl
imul
sbb
mov
xchg
push
fldcw
dec
jne
mov
fwait
test
out
or
pop
mov
inc
icebp
ret
cmpsl
aaa
mov
sbb
mov
xchg
pop
mov
gs
movsl
mov
and
fs
dec
pop
es
shll
bound
sbb
mov
std
ss
stos
and
adc
test
push
mov
jg
lea
or
fidivl
cmp
mov
call
out
mov
mov
inc
push
ret
in
mov
cwtl
sbbl
cld
repz
jne
negb
cltd
push
add
cli
push
imul
xchg
cmp
pop
push
dec
pusha
sbb
jae
pop
jnp
jo
pusha
or
ds
outsb
mov
repz
cmp
dec
pop
xchg
in
decl
pop
push
xor
scas
repnz
xor
sbb
adc
das
movsl
adc
push
jb
imul
push
popf
or
pop
adc
pop
inc
es
cmpsl
dec
pushf
loop
and
and
dec
cmc
std
dec
adcl
mov
mov
pusha
lret
mov
aad
cmp
or
sub
icebp
add
es
xchg
mov
stc
in
add
jl
adcl
inc
subl
mov
movsb
fnsave
clc
add
jno
in
fcoms
jle
les
stc
dec
mov
lcall
pop
and
fbld
jns
sti
pop
lcall
mov
push
dec
cltd
push
xor
pop
sub
adc
dec
ficoml
mov
into
pop
mov
xchg
fnstsw
popa
xorl
push
movsb
mov
lods
mov
and
pushf
daa
ficomps
cmpsb
mov
pop
add
jp
pop
and
aaa
mov
jecxz
icebp
jmp
loop
pop
scas
or
sbb
mov
and
stc
out
cli
shrl
mov
mov
std
sbb
fiadds
mov
cli
pop
in
push
adc
sub
out
cmp
and
jno
jno
mov
xchg
push
push
imul
incl
aaa
jg
rorl
sbb
and
mov
jb
dec
mov
sub
push
int
sub
aad
ljmp
mov
jmp
pop
sub
stos
jns
roll
xchg
or
jbe
push
iret
lods
sub
jle
enter
or
mov
cltd
mov
enter
nop
mov
daa
sub
jmp
pushf
sbb
cmpsb
or
or
inc
js
jo
mov
adc
int
cmpb
mov
sub
lods
xlat
pop
outsb
add
push
cs
xchg
and
mov
mov
fnstcw
add
push
push
fstpt
dec
and
int3
testb
adc
loope
cmp
out
pop
inc
or
inc
adc
popa
in
push
inc
pop
das
dec
leave
das
cmpsl
hlt
jb
pop
cmp
adc
ret
jae
repz
cmp
sarl
add
cmpsb
xchg
sbb
repz
add
adc
imul
jne
jno
or
shll
adc
movsl
mov
mov
in
mov
pop
sub
ja
sbb
mov
add
add
fisubl
jle
mov
sbb
mov
jg
cmp
pop
andb
enter
cmp
cwtl
pop
sarb
lcall
shr
sub
cmc
cmpb
or
mov
adc
paddusb
sub
push
pop
cmpsb
push
cld
add
loopne
xor
pop
push
insb
ljmp
pop
imul
push
insb
daa
mov
push
xchg
jl
imul
xchg
ret
movsb
lods
or
inc
sub
cmp
cmc
test
pusha
push
fisttps
push
lods
jo
mov
sbb
into
scas
mov
dec
std
adc
cs
lret
inc
xchg
out
mov
dec
outsb
pop
pusha
push
imul
sub
test
xor
inc
orb
or
fcmovne
pop
jmp
push
lds
push
xor
adc
xor
xor
and
jge
cmc
iret
add
xor
cmp
dec
inc
dec
xchg
cmp
or
pop
out
pop
add
leave
jecxz
jae
popf
xchg
dec
das
mov
ret
mov
mov
pushf
fiadds
movsl
adc
sbb
or
mov
pop
outsl
sub
adc
xchg
and
xor
call
jecxz
push
jbe
xlat
cmpsb
push
fmull
ja
sbb
cltd
jns
or
add
push
xor
lods
push
add
out
mov
decb
mov
movsb
lock
dec
mov
ds
jg
sub
lahf
frstor
and
pop
add
inc
in
mov
cmp
sbb
jns
or
pop
std
lret
in
and
sub
aaa
add
dec
fidivs
mov
jns
mov
cltd
push
pop
sub
rcl
into
adc
xchg
jnp
and
rcl
jp
or
dec
scas
mov
mov
gs
add
push
stos
fs
push
loopne
cmp
pop
fildll
xchg
mov
shl
push
subl
or
xchg
jno
push
xorl
jns
outsl
mov
fcoml
push
and
inc
test
cmp
pop
xchg
test
int3
xor
cmpsl
cs
mov
fildl
pop
push
pop
fwait
sub
mov
dec
ret
pop
dec
movsl
and
hlt
cmc
lret
lret
cmpsb
fwait
ret
xchg
daa
imul
aam
mov
ret
call
pop
fwait
push
mov
lods
vmovdqu
sub
icebp
je
pop
pop
cmp
std
cs
adc
rep
stc
cmp
xchg
rclb
push
test
icebp
lock
and
repnz
adc
fscale
mov
aad
cmp
repnz
and
das
sub
shll
add
xchg
and
fwait
aad
idiv
push
xchg
pop
daa
jg
and
lods
add
add
xchg
jmp
in
cld
nop
adc
int3
icebp
xor
fs
jle
and
les
hlt
xor
sahf
pusha
sub
daa
xor
inc
fadd
jmp
xchg
pusha
nop
jecxz
stc
mov
aam
popf
arpl
dec
loopne
sub
ljmp
dec
pop
sub
xchg
cmp
test
insb
and
sub
jle
ret
sahf
mov
push
jle
movsb
inc
jecxz
jecxz
xchg
mov
adc
mov
andl
iret
mov
and
mov
sahf
in
or
int
mov
add
mov
sub
mov
push
cli
add
mov
push
leave
pop
ljmp
insb
cmc
lds
outsb
and
add
fidivl
pop
push
lods
movsb
push
push
in
mov
xlat
jne
aas
rcll
shrb
rolb
push
add
ss
pop
dec
and
cmpsl
repnz
roll
idivl
test
ja
cmp
push
addb
or
jo
xor
loop
movsb
jecxz
std
mov
sub
std
or
movsl
xchg
pop
push
jecxz
cs
pop
cmp
xchg
aaa
pop
add
xchg
inc
pop
mov
bound
repnz
mov
mov
or
pop
mov
fnsetpm(287
push
nop
cmp
hlt
fsub
jmp
jg
dec
popa
and
mov
ret
inc
xlat
sbbl
add
sub
daa
fbld
es
or
scas
sbb
sub
shl
jp
pop
inc
loope
push
jbe
jns
pop
in
mov
daa
lcall
arpl
push
pop
mov
sar
mov
rcl
add
jno
or
loopne
mov
and
cltd
popf
mov
xchg
adc
push
mov
mov
mov
cmp
mul
add
fldt
fs
xor
bound
add
or
stos
insl
pop
ss
je
scas
imul
xchg
test
lret
mov
pop
or
mov
stos
mov
leave
jbe
imul
dec
lods
xor
imulb
out
fs
sbb
aas
out
mov
sub
adc
lods
scas
adc
push
cmpsb
add
out
test
and
ja
loope
outsb
dec
test
xor
dec
push
adc
nop
pop
orl
pusha
in
xlat
das
xchg
xor
jne
mov
outsl
and
loope
lods
stos
or
lea
xlat
mov
add
jge
or
sub
addr16
pop
ja
out
lcall
aam
fsubrs
enter
loopne
inc
or
imul
sarl
inc
lock
int
sub
adc
mov
xlat
std
shrl
xor
pop
xor
stos
fs
mov
popf
mov
push
sbb
ljmp
sti
mov
dec
fwait
ljmp
cltd
inc
or
push
mov
fcomps
inc
repnz
mov
pop
and
loope
add
sub
std
ret
mov
or
sahf
std
arpl
ss
out
faddl
test
mov
push
ss
out
mov
sbb
test
pop
cmp
lret
mov
imul
push
xchg
mov
aas
mov
mov
adc
fcmovu
aas
sbb
out
imul
mov
ffree
cmp
pop
jbe
push
ret
int3
mov
ds
aam
out
loope
icebp
dec
ret
in
sbb
sahf
aas
xchg
stos
dec
int3
dec
repz
or
inc
jge
lods
test
xor
sbbb
xlat
push
add
pop
test
dec
xor
arpl
xor
idivb
repz
adc
insb
xchg
push
gs
push
ds
out
shrb
dec
push
sbb
aam
fsubp
shlb
cltd
pop
fwait
stos
sbb
jecxz
and
jbe
lods
scas
mov
scas
mov
sbb
je
fs
rcrb
pop
jl
popf
push
sti
push
daa
rcrl
mov
xchg
cltd
lret
and
pop
outsb
lea
test
inc
or
pop
fldenv
mov
jbe
push
int3
sahf
mov
sub
pop
mov
sub
rclb
jae
sub
cltd
lock
jecxz
mov
lods
les
out
jle
call
push
sbb
stos
data16
je
loop
jae
xor
fsubl
xchg
adc
push
dec
ror
xchg
mov
divl
lahf
movsl
cmpb
inc
inc
stos
imul
mov
loopne
mov
and
cwtl
push
inc
push
sbb
jno
cltd
fsub
cmpsb
lahf
jp
inc
out
inc
mov
movsb
adc
call
xor
stc
pop
cmpsl
mov
or
sub
repnz
stos
rorb
push
imul
test
cld
lahf
int3
cmp
dec
push
sti
xchg
sti
cmpsl
jp
add
mov
test
cltd
fwait
ss
aaa
xchg
test
in
out
inc
in
call
jne
ja
mov
insl
xorb
pop
subl
test
mov
cltd
jb
jge
push
int
pop
mov
fnstsw
adc
fildll
iret
fcoms
stc
xor
enter
rcrb
cmp
mov
xchg
imul
mov
mov
push
mov
in
push
dec
dec
or
push
jo
push
bound
sub
mov
dec
sbb
xor
inc
push
push
ret
and
std
bound
sub
nop
jmp
jns
push
mov
pop
xorb
add
into
mov
loope
addr16
scas
rcrb
iret
out
cmp
sbb
push
imul
mov
call
adc
idivl
loope
test
popf
pop
push
jg
rol
adc
mov
or
mov
icebp
popf
stos
lds
inc
inc
js
ficompl
xchg
sbb
mov
push
and
dec
call
das
dec
bts
xchg
test
daa
mov
cwtl
out
push
outsl
movsb
stos
dec
or
fsubrs
and
js
jg
lret
je
add
mulb
mov
xor
aas
test
lret
sub
jb
sbb
pop
lods
lods
add
ret
adc
rolb
inc
mov
jo
fwait
sub
or
lods
insb
pop
insb
xchg
cwtl
sub
mov
cld
in
aad
pop
cmpsl
aaa
cmp
push
add
mov
and
dec
lcall
xchg
adc
xor
inc
sbb
imul
enter
shlb
psubq
sbb
pop
xchg
subb
add
aam
sub
xchg
and
mov
add
aas
push
idivl
add
fstl
add
push
fwait
jne
popa
hlt
pop
nop
leave
mov
mov
or
mov
xor
cwtl
and
xchg
and
jmp
shl
aas
mov
dec
or
mov
dec
out
orb
cltd
repnz
pop
mov
into
xchg
mov
dec
mov
lcall
inc
in
dec
push
inc
dec
mov
loopne
pop
sub
lods
mov
insl
inc
sbb
scas
jl
mov
imul
inc
inc
inc
xorb
pop
movsb
mov
mov
or
cmc
jecxz
xchg
rcrb
mov
gs
repnz
outsb
fldl
jmp
shr
xor
push
jp
in
sbb
js
pop
cwtl
mov
pop
pop
dec
lods
xor
pop
cs
out
ret
mov
gs
scas
or
cmpsb
sub
pusha
push
adc
cltd
out
push
pop
testl
dec
xchg
pop
arpl
and
mov
mov
ret
or
repz
fistpl
shrl
inc
xchg
mov
sbb
xchg
pop
xchg
int
cmp
aad
or
enter
xor
jne
addr16
adc
push
add
or
and
in
popa
dec
or
in
js
pusha
loope
or
push
sub
fwait
std
inc
jae
pop
ds
push
jp
fisubrs
xor
loop
ret
cld
adc
push
push
ret
hlt
adc
les
xlat
push
fs
in
or
jle
lret
loop,pn
lahf
call
and
xchg
and
dec
mov
mov
xchg
icebp
cmp
adcl
jb
imul
adc
cmp
sub
jns
add
xchg
adc
pop
sarl
or
pop
adc
out
sbb
ror
iret
sub
pop
mov
xor
lcall
les
xor
aaa
clc
mov
mov
jecxz
loopne
mov
xchg
in
dec
nop
sahf
adc
data16
nop
loop
or
sbb
ja
lret
push
pop
out
out
push
std
jl
out
dec
mov
pop
mov
add
sbb
fbstp
nop
pop
arpl
cs
leave
mov
je
jb
roll
jns
xor
test
jae
add
jno
lcall
sbb
addr16
test
rcll
sbb
arpl
es
sbb
shlb
pop
dec
sub
popf
xchg
popf
or
push
mov
add
std
mov
sub
mov
lret
dec
cmp
popf
push
mov
push
jl
add
jns
cltd
xlat
mov
and
jmp
je
outsb
inc
sbb
cltd
stos
lods
negb
push
push
es
repz
xor
stos
loop
adc
outsb
pop
inc
leave
jg
xor
fmull
repz
cmpsl
xchg
mov
sub
push
mov
scas
mov
push
sti
push
inc
ja
andb
nop
inc
loopne
dec
inc
cmp
subl
jg
mov
jp
shlb
test
mov
mov
xchg
push
and
sub
idiv
scas
cs
mov
fwait
mov
pop
rorl
gs
mov
icebp
push
and
inc
xchg
push
cwtl
in
rcrb
sub
std
subl
pusha
sub
inc
lcall
cmp
sarb
inc
int3
xchg
pop
or
jo
jbe
or
mov
in
fsub
jno
or
pop
inc
inc
outsb
repnz
scas
pop
iret
xchg
scas
icebp
and
push
cwtl
ror
fldcw
pop
or
mov
dec
ret
hlt
icebp
jns
in
jb
jmp
insb
nop
adc
cmpsl
int3
aam
or
shrb
addl
xchg
add
sbb
adcb
sub
movsb
lret
mov
cmp
call
xchg
call
lds
xchg
cmp
or
jge
xor
std
popa
or
mov
adc
loopne
jb
and
inc
inc
fcoml
pushf
js
adc
scas
mov
test
mull
mov
push
imul
or
fwait
cmpsb
popa
push
xlat
inc
not
push
cltd
test
in
cltd
outsl
pop
ljmp
mov
cmpsb
dec
push
sub
adc
mov
sub
insl
inc
adc
mov
adc
sbbl
jp
nop
or
inc
call
push
xchg
in
cmc
xorl
xor
icebp
jnp
lahf
cmp
push
movsl
sahf
jecxz
mov
jb
lock
enter
roll
pop
iret
adc
out
pop
dec
aam
push
sub
inc
mov
add
insl
sub
and
popf
repnz
stc
stos
xchg
pop
dec
js
mov
rclb
push
test
cltd
and
add
dec
pop
scas
data16
subl
cltd
push
xor
aad
xchg
jnp
jno
jl
xor
add
gs
ja
insl
jg
js
pop
in
jle
popa
jmp
mov
imul
sahf
repnz
xchg
sahf
fwait
loop
lods
push
or
push
das
leave
imul
mov
jmp
addr16
xchg
mov
lret
in
xlat
ss
aad
enter
or
movsb
lcall
data16
pop
out
pop
pushf
push
shll
add
cmpsb
xchg
arpl
and
mov
test
pusha
stos
and
cmc
stos
scas
loopne
xchg
insl
mov
jg
insl
or
xchg
dec
int
mov
adc
sub
loope
mov
and
cmp
adc
lods
imul
mov
sahf
out
in
jmp
pop
jg
fnstsw
adc
fcomps
push
inc
iret
sub
out
outsl
ljmp
lahf
sti
imull
stos
shlb
jle
cltd
dec
cltd
adc
test
cld
xchg
jae
nop
test
into
shll
jo
mov
cmp
xchg
sahf
sti
mov
add
add
add
xchg
cltd
fcompl
jmp
xor
pop
sbb
sbb
pop
test
inc
sub
or
mov
push
xor
and
push
xor
pop
cmp
in
and
outsl
das
enter
sub
clc
cmp
push
add
sub
jle
add
addr16
sbb
push
test
cmc
shll
popa
and
call
repnz
lcall
add
dec
sbb
mov
push
jae
inc
lret
add
sbbb
adc
aad
std
cmp
movsb
popf
imulb
adc
mov
jnp
or
test
push
push
inc
sbbl
inc
ret
xchg
mov
insb
xor
sti
jmp
fldpi
push
mov
lock
mov
push
add
mov
mov
jnp,pn
stos
jo
or
std
es
stc
xchg
std
ret
cmp
inc
insb
in
lock
hlt
rorb
push
das
mov
mov
push
lods
jo
orb
mov
push
clc
push
notb
popa
lods
adc
outsl
dec
gs
push
inc
sbb
pop
movsb
into
inc
pop
pusha
xchg
mov
leave
mov
sub
cmp
ja
cmc
pop
repz
fisubrs
mov
insl
in
in
jle
lods
mov
mov
fwait
sbb
push
add
jno
scas
in
mov
jne
jp
cltd
in
cmp
push
jbe
cltd
rorb
lods
jmp
loop
call
push
jmp
jb
test
dec
sbb
or
shrb
in
dec
rorl
cmp
cmp
sub
ds
push
push
jns
inc
sub
ds
pop
inc
pop
dec
sarb
in
mov
stc
mov
mov
js
xchg
push
jp
lea
push
fldl
popf
and
mov
jmp
icebp
notl
call
fstpl
imul
icebp
add
mov
sarl
push
cmp
out
mov
faddp
mov
pop
cmp
jnp
inc
mov
pop
shrl
lret
jg
add
icebp
loopne
xchg
lods
cmpsl
rcrl
xchg
in
fidivs
pop
roll
add
xor
data16
cld
fsubs
jp
lock
inc
int
xor
fidivrs
mov
adc
scas
jmp
xchg
mov
xchg
jnp
loope
cmp
das
call
push
sub
mov
pop
jp
cli
or
inc
add
in
iret
cs
mov
jmp
and
or
sti
gs
dec
cmp
lods
nop
mov
data16
cli
arpl
mov
idivl
dec
pop
dec
mov
stos
mov
inc
movsl
call
lods
rcr
iret
loopne
addr16
adc
and
es
outsb
jg
scas
pop
subb
int
push
popf
and
dec
push
mov
fcompl
xchg
xchg
cmp
loop
fbld
jl
jg
sahf
icebp
xchg
mov
or
lahf
jne
xchg
fstpt
mov
popa
mov
mov
cmp
cmp
fdiv
mov
cli
out
ljmp
dec
dec
jmp
adc
pop
fisubl
add
xchg
movsb
out
mov
sbb
push
push
xor
pop
mov
sub
scas
push
out
lods
movsb
push
scas
xchg
dec
push
dec
add
dec
imull
insl
inc
jl
xchg
dec
or
mov
mov
out
fbld
sbb
gs
mov
lret
cmp
mov
pop
or
cmpsb
sbb
cmc
dec
shll
nop
stc
dec
movsl
cmp
imul
mov
xor
dec
scas
dec
mov
loop
cmpsb
dec
or
rcrb
mov
in
pop
je
jbe
leave
mov
push
jno
dec
or
xor
out
int
movsb
out
in
mov
add
lods
xchg
das
pop
push
popf
lods
mov
sbb
push
push
mov
jns
nop
dec
out
mov
xchg
pusha
stos
scas
lods
mov
loope
ret
or
scas
mov
repnz
addr16
and
push
mov
adc
test
js
mov
add
out
add
and
jbe,pn
cmp
push
add
pop
cwtl
pavgb
cmc
dec
daa
imul
roll
loopne
mov
pushf
in
lcall
aaa
pop
stos
fcomp
push
mov
sub
mov
mov
js
pop
aam
int3
push
repnz
add
ljmp
push
mov
push
repnz
pop
mov
inc
iret
roll
lds
jae
lea
into
adc
cld
testl
fidivrl
dec
call
scas
lods
dec
testl
mov
movsb
das
test
fstpl
or
xchg
cltd
hlt
cli
push
pop
jbe
push
fbstp
and
jl
xchg
popf
push
cmp
pop
xchg
mov
add
lcall
lods
imul
push
scas
je
frstor
arpl
test
js
js
dec
xor
arpl
cld
gs
ss
inc
outsb
push
mov
mov
mov
cmpb
je
test
gs
push
jl
leave
push
cmp
out
daa
push
xchg
in
adc
inc
cmpsb
pop
mov
stos
jg
or
inc
pop
roll
xor
add
pop
push
loope
dec
fdivp
xlat
add
jb
leave
xchg
int3
adc
or
xchg
cli
movsb
adc
lret
inc
jne
mov
dec
pop
out
adc
or
icebp
pushf
or
cld
mov
jle
cli
pop
mov
mov
push
sbbl
sahf
daa
mov
cmp
pop
cmc
pusha
test
mov
loop
decl
or
mov
dec
lock
out
mov
add
and
inc
jmp
jecxz
sbb
fstps
sub
leave
mov
test
add
lock
or
ja
jg
test
popf
mov
push
in
lahf
or
cmp
xor
movsl
mov
pop
lods
mov
clc
cmp
or
adc
sbb
insb
sub
subl
jle
mov
dec
outsl
arpl
mov
test
mov
subl
ljmp
adcl
dec
cwtl
push
push
inc
jmp
mov
fistpl
pop
pop
int
cmpsl
push
pop
cltd
xchg
sbb
outsl
push
sub
cli
arpl
cmp
lods
rclb
fcomi
jp
mov
xchg
imul
nop
mov
cmp
mov
push
adc
jl
push
hlt
lock
flds
cmp
dec
addl
mov
and
sub
pop
orl
aam
int3
aaa
dec
pop
cmp
in
mov
scas
fidivrl
pop
loopne
in
xor
mov
fcomps
cld
fcoms
fwait
call
aam
outsl
rcrb
push
mov
lahf
mov
ret
jbe
or
and
scas
fidivrs
cwtl
jge
and
pop
dec
sbb
rorl
loope
cmp
aaa
pusha
movsl
add
shrb
dec
cmp
jne
test
push
divl
icebp
hlt
push
mov
subl
fnsave
arpl
lods
scas
mov
pop
mov
je
rclb
sub
imul
dec
icebp
fnstenv
and
out
jp
repz
imul
mov
pop
jo
push
movb
sti
mov
lods
sub
clc
stos
loopne
pop
add
stc
mov
or
mov
frstor
or
sub
mov
mov
add
std
adcl
cmpb
pop
je
mov
or
push
pusha
fsts
cmp
pop
mov
xor
fidivrs
lods
mov
sbb
negl
arpl
xlat
cmp
push
sub
add
in
cmp
cwtl
add
mov
cmp
add
sub
in
xchg
dec
adc
xor
mov
or
jp
sbb
repz
sbb
mov
dec
mov
adc
jmp
add
bound
iret
and
jno
jnp
divl
xor
test
jno
stos
fwait
shrl
in
add
dec
into
out
ljmp
sub
inc
inc
add
mov
mov
imul
pop
inc
scas
adc
icebp
xchg
mov
mull
es
adc
mov
add
xchg
outsl
pop
in
mov
mov
inc
inc
nop
testb
mov
test
mov
or
mov
jne
adc
xchg
and
mov
shrl
or
sbb
lds
jns
shlb
adc
leave
add
sbb
mov
loop
ror
mov
and
sbb
adc
pop
dec
pop
or
out
rorl
int3
nop
addl
lods
mov
pop
out
dec
dec
and
pusha
in
jecxz
and
push
mull
dec
mov
jbe
cli
adc
push
and
xor
and
push
clc
inc
jmp
enter
fdiv
inc
test
push
lock
jp
xchg
add
jp
movsb
pop
xchg
xchg
xlat
pop
popf
lret
xchg
in
movsb
bound
fistps
mov
ficomps
jp
in
jge
cltd
in
adc
pop
inc
fimull
push
inc
push
cmp
cli
mov
loopne
push
adc
neg
push
jns
inc
jne
mov
ss
push
dec
mov
push
pop
dec
repnz
in
jge
add
or
sub
fs
mov
hlt
inc
aas
fcomip
std
adc
inc
mov
pop
scas
pop
das
notl
lock
movsl
sbb
testb
out
mov
jae
dec
cmpl
inc
orb
sbb
push
out
dec
enter
inc
or
sbb
stos
inc
mov
pop
adc
and
xchg
add
andl
mov
or
lods
push
jno
cltd
push
ret
call
scas
cmp
test
rclb
adc
clc
outsl
call
add
pop
or
call
cmp
mov
call
sbb
xor
out
bound
cmp
repz
xor
push
inc
pop
lock
scas
cmp
sbb
push
push
and
fistpl
dec
testb
out
and
ljmp
push
xchg
in
pop
rcr
hlt
ljmp
xchg
pusha
int3
cmpsb
push
add
insl
sub
pop
adc
adc
pop
mov
jl
js
inc
xchg
push
mov
rclb
inc
add
mov
cvtps2pd
lret
mov
aam
pop
daa
rcl
sahf
inc
adcl
xchg
push
pop
mov
xchg
cmp
pop
push
mov
xor
adc
cs
test
fsubrs
int
and
pop
cmp
and
pushf
outsl
enter
xchg
xor
inc
fcmove
aaa
inc
push
stos
je
outsl
or
inc
gs
or
dec
push
xchg
and
push
lea
xchg
lcall
adc
mov
xchg
dec
subl
cmpl
popf
lret
jecxz
sub
mov
xchg
dec
outsb
fstpt
outsb
test
jmp
outsb
mov
or
inc
xchg
pop
stos
loopne
inc
bound
lds
xchg
bound
adcb
cs
push
std
test
inc
mov
push
sahf
inc
xchg
out
xor
nop
ljmp
inc
inc
sti
fldenv
xchg
pop
outsb
movsb
or
xchg
into
punpcklbw
push
lods
push
cmp
addl
sub
sub
outsb
mov
out
push
fcoms
rcl
push
sub
dec
data16
mov
rorb
and
or
pusha
jns
jmp
fsubl
fldenv
sbb
or
imul
xor
mov
movb
sub
pop
jae
daa
test
test
xor
xlat
in
dec
or
adc
sub
add
xchg
pop
push
jg
cmp
sub
sbbb
ds
add
add
dec
jmp
lret
jle
inc
les
sub
outsb
and
mov
inc
sbb
cmpsb
and
and
and
imul
mov
mov
jmp
mov
inc
mov
sbb
mov
fistpll
adc
mov
inc
inc
sub
gs
push
and
sub
jnp
dec
jb
add
or
les
mov
test
dec
movsb
test
ret
jle
das
pop
sbb
aam
test
adc
xor
lods
sub
loope
int3
scas
je
cmovge
frstor
adcb
adc
add
fisttpll
mov
pop
mov
fcoms
imul
cld
adc
mov
push
fildl
dec
or
outsb
push
push
test
mov
sub
movsb
pop
sahf
gs
or
pop
inc
inc
pushf
xchg
arpl
push
push
add
out
pop
adc
mov
xor
inc
sub
fs
pop
mov
cmp
dec
pop
roll
dec
sbb
push
loopne
and
cld
push
scas
insb
or
cmp
add
popa
stos
sub
mov
repnz
lods
pop
fwait
dec
mov
enter
icebp
push
fisubrs
mov
lods
pop
in
pop
push
jl
in
loope
pushf
out
rorb
jno
faddl
sbb
xchg
mov
daa
sbb
xchg
jns
adc
imul
pop
test
into
rcrl
sub
js
and
lret
jo
je
call
hlt
xchg
pop
dec
fists
ds
shll
fimull
inc
dec
xchg
push
aad
or
push
popf
mov
and
std
jecxz
cmpsl
push
dec
pop
dec
fists
xor
push
ficoms
popa
xchg
pop
testl
mov
loop
sti
push
jge
jmp
push
jl
adc
addr16
add
xor
lods
pop
cmp
xor
fsubs
popa
pop
pop
push
decb
cmp
sub
pusha
arpl
fwait
insb
add
and
ljmp
jb
xchg
aam
cwtl
ret
or
lahf
arpl
and
outsl
mov
cmp
testl
sub
mov
jge
movsl
jbe
test
push
jbe
push
jp
push
aad
gs
cmpl
int3
loope
sub
jge
cld
les
mov
leave
imul
lcall
mov
dec
lret
mov
call
movsl
lahf
and
fidivs
mov
lods
jae
xor
jnp
out
pop
push
test
fstl
mov
or
add
rcrb
test
cmp
jecxz
cmp
cltd
aam
insb
sbb
fs
call
jns
xchg
loopne
cld
xchg
push
sub
out
mov
mov
jb
sub
push
or
fs
sbb
shlb
pop
dec
and
sub
pop
ljmp
incb
cmp
jnp
pushf
and
cli
cmpsl
out
adc
in
xchg
jnp
mov
push
test
dec
inc
pop
rclb
pop
mov
addr16
add
adc
rolb
sub
ss
in
rcrl
fsubp
ds
test
out
or
ret
jmp
adc
cmp
inc
lods
rorb
and
rclb
mov
mov
cwtl
shlb
jge
xchg
cli
xchg
clc
ret
ds
and
or
push
int3
cmp
jbe
insl
inc
push
push
jmp
push
mov
ss
mov
and
ljmp
add
jecxz
cmpl
daa
sbb
jbe
xor
sub
pop
dec
mov
divb
es
stc
pop
push
dec
and
add
xchg
cwtl
push
mov
clc
imul
pushf
outsl
pop
xchg
incl
xchg
lahf
lcall
cld
pop
das
lods
cmp
pop
pusha
or
loopne
dec
xor
in
mov
or
das
data16
add
fwait
or
adc
gs
xchg
jae
punpckhdq
ficoms
out
cmp
adc
or
push
pop
xchg
add
push
daa
mov
jae
jecxz
aam
push
push
ds
mov
pop
loope
xchg
dec
repnz
ret
pop
scas
jo
add
cltd
dec
stc
xor
cmp
in
xlat
lock
sub
ds
mov
stos
cmpsl
sub
inc
in
add
into
and
aas
sbb
xor
mov
or
inc
lret
xor
test
or
add
sbb
push
in
adc
out
or
hlt
dec
shrb
push
cmp
pushf
ret
sahf
shl
pusha
mov
xchg
dec
mov
jl
cltd
push
dec
jl
or
push
lret
mov
inc
pop
xchg
push
test
shll
pop
push
mov
sub
xchg
sbb
scas
xchg
mov
push
clc
sbb
sbb
cmp
pop
decb
lods
inc
sub
jg
mov
cmp
add
and
push
xor
jl
popa
pushf
test
mov
add
repz
inc
mov
or
inc
mov
sbb
or
xor
mov
xor
js
roll
sti
test
jb
insl
fiaddl
dec
ja
inc
push
sbbb
jns
mov
lret
mov
xlat
dec
add
fistl
pop
aaa
ljmp
mulb
push
sub
dec
hlt
lock
shrb
pop
pusha
into
cmp
loop
cmpsl
lds
sti
cltd
mov
dec
ljmp
lea
xchg
daa
xor
or
jo
icebp
lea
sahf
das
mov
xlat
out
or
into
sbb
stc
rclb
outsb
ja
out
mov
jns
lret
mov
pushf
or
rolb
xchg
cld
loopne
sub
popf
xor
xchg
mov
into
and
mov
pop
cmpsl
push
sti
mov
ds
inc
xor
shll
cld
mov
lea
jnp
lret
dec
and
cwtl
test
movups
or
out
stc
add
das
jae
dec
sbb
repz
push
jae
mov
push
js
pop
popa
lahf
fidivrs
rcll
add
fxch
xchg
or
or
mov
ss
cwtl
daa
xchg
les
jmp
out
sub
or
cmp
dec
push
push
int
xchg
popa
jne
push
dec
cmc
xor
add
fs
fdivl
lahf
stos
ds
or
jg
in
dec
jg
insb
push
add
aad
cmpsl
xchg
inc
aaa
xchg
std
test
cmp
pop
jmp
and
xor
mov
lds
push
pop
jns
add
stos
addr16
aas
addr16
xor
pop
jno
dec
std
pop
mov
gs
mov
mov
sbb
mov
icebp
push
or
addr16
aad
cmp
clc
cmp
push
xchg
pop
testb
mov
cli
adc
mov
cs
sub
popf
jmp
and
jnp
sbb
iret
cmp
into
mov
aas
cmpsl
mov
and
aam
xor
scas
mov
lret
or
fsubrs
mov
outsl
adc
dec
data16
xor
xchg
inc
mov
pushf
push
repnz
imul
fcoms
cmp
jne
into
push
rolb
dec
in
std
sbb
data16
adc
push
mov
mov
dec
mov
inc
sbb
in
inc
jb
dec
sub
fcoms
bound
xor
aaa
inc
and
sub
js
daa
push
lret
clc
divl
or
lea
push
loope
mov
xor
push
insl
jmp
roll
arpl
test
add
mov
and
pop
mov
xor
sahf
push
pop
pop
cmp
loopne
pop
addr16
inc
fwait
test
fwait
popf
pop
movsl
imul
lahf
dec
or
mov
mov
push
pop
sahf
cmp
adc
mov
adc
pop
push
cmpb
rclb
cmp
push
push
jg
insl
scas
add
mov
pop
jle
test
les
in
out
adc
fiaddl
inc
daa
add
stos
lds
loopne
jns
enter
or
add
ja
outsl
add
mov
jb
popa
add
dec
sub
cmp
insb
push
fcmovnbe
popa
das
aaa
icebp
jne
into
jge
push
pop
jle
test
mov
in
inc
mov
dec
mov
into
mov
xchg
dec
mov
mov
cs
sarl
cmpsb
mov
call
call
call
adc
mov
mov
aad
sub
arpl
xlat
popa
pop
rcrl
push
mov
arpl
lcall
rcrb
push
xor
pcmpeqb
clc
fdivrl
rcrl
cs
adc
xlat
push
pusha
stos
xchg
jmp
sbb
sahf
xchg
frndint
test
outsb
adc
outsb
cmpsb
pop
pop
pop
sahf
lea
jae,pt
push
lcall
shlb
mov
cmp
int3
lcall
or
jbe
mov
xorb
rcrl
in
or
mov
fs
idivl
pusha
jmp
inc
push
cld
les
jbe
gs
lock
mov
sub
repnz
hlt
sarb
in
jb
sbb
cmpl
sbb
repnz
subb
mov
add
and
loope
push
pop
sub
mov
pushf
lret
jl
int3
xor
mov
pushf
sub
stos
idivb
rcl
adc
and
xor
fscale
sbb
adc
mov
lahf
sub
dec
cmp
jno
dec
xor
sub
addl
adc
arpl
and
dec
in
mov
mov
cwtl
nop
aad
xchg
and
in
lcall
cld
in
adcb
sbb
out
xchg
pop
pop
or
ljmp
mov
adc
in
cmc
sarl
dec
xlat
aam
cs
mov
cmp
xor
fbld
or
stos
xchg
mov
fcompl
aaa
jno
loop
ss
xchg
fwait
cs
rcll
imul
cld
dec
sbb
stc
dec
lret
cmp
shlb
addr16
cmp
lock
test
jge
or
testl
cs
gs
fcomps
mov
pop
cmp
push
or
sbbb
mov
inc
incl
inc
add
sub
out
and
in
pop
mov
mov
sub
sti
and
and
cmpsb
xchg
shlb
xchg
jle
pop
and
rolb
mov
and
cmp
scas
aam
or
pop
loopne
in
hlt
pop
cs
in
push
movsb
dec
cltd
iret
popa
movl
dec
mov
ror
jl
sub
loopne
mov
jecxz
test
fs
test
jo
loope
leave
lds
jmp
setbe
ret
insb
xor
push
ja
sub
pop
fdivr
add
sub
ret
aaa
jb
jle
cli
pop
xchg
jno
fs
loop
xchg
ja
in
incb
mov
test
bound
sub
negb
sub
leave
outsb
icebp
ss
jbe
xchg
lcall
js
inc
adc
adc
mov
and
inc
call
dec
mov
arpl
out
cmpsb
btl
mov
jge
pusha
push
dec
js
test
fcoml
mov
push
xchg
mov
imul
push
jno
mov
mov
test
xchg
icebp
aad
scas
test
adc
or
dec
dec
data16
or
test
xchg
dec
call
out
ret
pop
mov
xor
or
xor
cltd
faddl
dec
jo
and
push
mov
sbb
sti
loope
fs
sbb
rcr
push
test
xchg
mov
lea
int
std
pop
sub
mov
push
lahf
mov
ret
stc
fsubr
push
ret
mov
inc
or
and
xchg
or
mov
adc
cmp
inc
fcomi
fldcw
inc
cmp
or
sar
pop
fidivs
fwait
aaa
adc
int
aaa
cmpsl
adc
pop
mov
inc
push
outsb
scas
iret
movsl
leave
stc
push
in
in
jg
movsl
push
jecxz
ficoms
cmpsb
mov
sub
testb
imul
add
mov
adcl
das
aad
js
sarb
rolb
lock
mov
cmp
adc
inc
push
mov
sub
mov
jmp
push
pushf
ss
mov
push
mov
cmp
dec
mov
in
mov
lods
out
in
rcrl
loopne
sbb
jbe
dec
mov
movsl
sub
in
nop
push
imull
push
adc
out
test
into
je
jae
es
sbbb
das
mov
mov
popa
ret
jnp
jecxz
fwait
mov
stos
pushf
dec
cmp
out
push
push
sub
dec
dec
fwait
or
movsb
in
aaa
cmp
mov
jmp
pop
push
loope
stos
dec
shll
jecxz
mov
rclb
mov
fildl
insb
insb
xor
xor
insb
mov
mov
adc
test
xchg
out
pop
inc
in
or
xchg
test
insb
sbb
out
and
jle
or
loop
mov
rolb
pop
xchg
mov
inc
scas
xor
cltd
sbb
inc
sub
ljmp
in
bound
mov
adc
adc
jne
scas
push
sar
pop
in
fldl
ss
jo
jbe
idivl
paddsb
and
std
push
add
daa
cltd
sbb
int
int3
jmp
xchg
inc
sahf
push
adc
sub
push
insb
cmpsb
jl
cmp
fidivl
jno
or
fdivrl
mov
xor
inc
or
aaa
sub
push
jl
mov
jb
gs
data16
add
push
jne
lret
inc
jg
shlb
imul
lcall
mov
ljmp
out
xchg
js
loopne
sbb
jp
std
loopne
jae
cld
cli
sbb
into
loopne
out
inc
loop
les
rclb
fcompl
inc
inc
shrb
mov
pop
arpl
cmpb
inc
daa
das
jb
aaa
out
iret
jae
notb
push
aas
movsb
inc
sub
or
push
inc
scas
call
push
push
wrmsr
jge
jbe
jp
ss
xchg
xchg
or
or
dec
ret
mov
push
xor
movsb
fistpll
dec
adc
fstpt
xor
mov
sbb
loopne
popf
testb
pop
jle
sti
lcall
shlb
dec
fxch
lcall
jmp
dec
test
sbb
mov
push
movsb
outsb
push
mov
ljmp
call
scas
dec
in
and
dec
ror
cmpsl
idivl
fsubr
mov
ret
test
push
xchg
ljmp
pop
mov
jb
shr
pop
add
lret
mov
sbb
ja
shrb
mov
mov
or
outsb
fidivrl
pop
cmp
sub
addl
xchg
mov
js
data16
mov
and
pop
es
adcl
call
flds
xor
sbb
sbb
fs
xor
dec
movsb
div
xchg
ljmp
cmp
cmpb
pop
inc
mov
adc
imul
push
xchg
jne
cmpsl
xlat
in
adc
scas
xor
add
scas
or
jno
sub
in
dec
fs
push
pop
ds
out
mov
push
pop
add
and
add
shll
mov
aaa
out
pop
ficompl
mov
xor
xchg
movl
and
pop
xor
shl
popf
rcrl
adc
shl
movsl
int3
pop
cmp
ljmp
mov
xor
es
jg
adc
push
pop
pop
mov
imull
cmpsb
jmp
add
dec
ja
adc
or
mov
cmp
sub
xchg
mov
pop
jns
adc
and
sbb
mov
xchg
stos
aad
fdivr
pop
inc
adc
mov
jge
fisttpl
scas
mov
pop
mov
cmp
and
and
xchg
shlb
ljmp
xchg
movsl
fisubrl
lods
push
ret
xor
sub
ret
je
xchg
je
fwait
inc
clc
aaa
cmp
or
sbb
push
aad
call
loopne
jl
in
movsb
cli
mov
ret
add
xchg
inc
aas
mov
jne
or
hlt
push
test
leave
stc
cmc
jbe
test
xlat
dec
fucomip
or
movsl
push
dec
pop
cmpsl
xchg
scas
jmp
inc
jo
sub
ret
repz
xchg
mov
dec
sahf
insl
dec
mov
jae
jecxz
jns
inc
dec
xchg
adc
mov
inc
imul
cltd
dec
call
fcompl
xchg
adc
adc
ja
pushf
fcoms
out
pop
pop
data16
xor
xchg
stc
shll
push
mov
mov
jns
cmp
jp
mov
adc
and
cmp
in
jnp
pop
movsl
inc
dec
lds
in
test
nop
push
adc
mov
out
inc
xchg
out
xor
out
ljmp
insb
dec
stos
shlb
xor
inc
mov
mov
loop
mov
jge
sub
addr16
inc
rcr
or
push
jnp,pt
addr16
popa
out
add
or
scas
notb
les
dec
push
imul
add
pusha
cmp
mov
js
cwtl
pop
adc
loope
jo
pop
test
xchg
lock
gs
fsts
or
std
inc
xorb
addl
sub
test
lods
lock
pop
fdivs
dec
pop
inc
shlb
in
sti
xor
mov
bnd
add
clc
cmp
fwait
lds
jg
lods
mov
jg
add
jle
push
push
pop
xchg
mov
sbb
jg
xchg
xchg
xor
cltd
push
or
mov
insb
mov
sub
popf
push
insb
sahf
mov
add
fidivrs
or
mov
arpl
lahf
loope
push
jp
jmp
push
lcall
addb
jle
jbe
leave
das
mov
and
pop
adc
mov
clc
or
js
dec
mov
out
imul
int
jp
cld
pop
ret
nop
dec
pop
ljmp
sub
mov
gs
xchg
or
dec
inc
aaa
ds
fidivl
rclb
daa
rcrb
inc
add
daa
mov
imulb
fldcw
iret
mov
insl
sub
add
les
dec
push
mov
loopne
inc
dec
cmp
insb
dec
inc
js
adc
movsb
nop
xor
inc
popf
movsb
jge
inc
xor
jl
mov
mov
add
mov
mov
call
pop
stos
mov
mov
decb
leave
add
lret
aaa
enter
rorl
sahf
fucom
pop
push
and
jb
sub
add
outsl
push
ret
jp
jne,pt
flds
fdivl
and
sbb
sbb
xlat
outsb
test
add
and
mov
icebp
push
inc
add
sahf
sti
push
mov
mov
xchg
xor
add
stc
add
lret
xor
nop
cwtl
shlb
int3
jecxz
jno
mul
add
sub
fisubrl
cmpsl
sbb
xor
push
push
xor
divb
push
fsubrs
jle
mov
mov
mov
push
xor
mulb
rorl
icebp
xor
mov
xchg
daa
cld
jns
stos
pop
jbe
inc
int
loop
dec
and
jge
pop
lods
add
test
jecxz
mov
jp
push
push
push
mov
test
inc
cltd
aaa
xlat
cmp
scas
push
nop
and
fbld
xchg
lahf
pop
mov
or
lock
repz
rcpps
xor
fld
jg
out
pop
inc
daa
adc
test
mov
leave
and
mov
cmpsb
mov
mov
lret
ja
push
pop
cmpsb
dec
mov
cmp
sbb
push
inc
adcb
push
cmp
cmp
xor
popf
mov
mov
mov
loope
inc
mov
push
sub
pusha
inc
or
enter
add
mov
mov
shrb
inc
adc
jo
dec
test
inc
in
inc
outsb
sub
or
mov
jmp
sbb
cs
inc
iret
xchg
mov
and
daa
addr16
mov
lret
lret
cli
sub
inc
or
dec
jo
add
loope
sub
pusha
jno
mov
mov
stos
gs
in
mov
inc
push
mov
insb
or
sub
sub
in
ss
mov
xchg
add
cli
mov
xchg
sahf
insl
push
aad
add
lahf
mov
push
adc
fs
das
inc
scas
ljmp
sub
cmp
sbb
je
jae
into
mov
bound
mov
addr16
test
jge
test
pop
cwtl
fcoms
loop
cs
shlb
mov
mov
cmp
push
jns
imulb
sti
shlb
jnp
inc
cmp
addl
or
sbb
repz
push
cmp
sarb
js
fwait
mov
scas
add
ret
cmpsb
pop
loopne
hlt
mov
inc
das
pop
out
je
cs
stos
shl
imul
sub
std
jp
dec
icebp
cwtl
mov
je
fucom
inc
xor
js
mov
fldl
hlt
dec
out
dec
xchg
dec
nop
push
push
stos
fwait
mov
lcall
cmpsb
jg
push
pop
xchg
xchg
sarl
xchg
fistps
popf
push
stos
cmpsb
cwtl
pop
das
mov
out
jmp
xor
xchg
dec
add
dec
rorb
dec
mov
inc
stos
loopne
xchg
mov
les
adc
pop
cmp
inc
ficoms
pop
in
loop
sbb
out
and
pop
in
int3
push
pop
pop
xchg
je
mov
inc
xchg
stc
cli
movsl
fcmovnu
xchg
stc
jo
pop
sub
sahf
push
or
inc
pop
inc
add
jne
mov
pop
jg
mov
pop
nop
outsl
js
sub
cwtl
add
mov
gs
xor
inc
jb
add
ficoms
dec
rcrb
lret
pushf
adc
xor
xchg
sub
int3
push
or
call
pop
cmp
adc
cmp
pop
mov
push
sti
pop
sub
dec
lods
or
aad
mov
add
push
cld
shrl
xor
mov
mov
gs
mov
in
fadd
mov
sub
cmp
clc
mov
push
and
ficoms
xchg
pop
inc
pop
pop
inc
js
and
iret
mov
xor
out
les
pusha
xor
cmp
insb
jmp
jne
in
xlat
mov
push
xchg
sbb
sub
cmp
or
ds
xor
and
xchg
clc
dec
std
dec
sti
loope
inc
mov
insb
dec
iret
ljmp
push
lods
cmpsl
mov
add
bound
push
in
jmp
movsl
xchg
jns
pop
js
and
jle,pn
insl
xchg
jecxz
and
dec
loop
arpl
and
test
pusha
lcall
or
and
out
repz
mov
mov
cmpsb
dec
pop
rorl
xchg
shlb
stc
enter
cmp
fists
aas
test
loope
jge
xor
ret
push
or
daa
pop
pop
insl
ja
pop
int3
movsbl
adc
xor
mov
xchg
adc
cwtl
push
push
push
imul
or
and
sub
pushf
add
pop
ficompl
mov
xchg
jl
jmp
mov
fcomi
movsb
test
dec
jl
inc
pop
push
dec
push
mov
fcoml
dec
movsb
and
lods
jne
push
test
loop
sub
sbb
inc
rorl
stos
in
jle
test
jne
xchg
fdivl
test
add
mov
inc
mov
adcb
popa
mov
fs
and
cmpsb
sti
cltd
xchg
push
sarl
jne
outsl
outsl
fmulp
adc
xchg
sbb
ja
pop
mov
sbb
ss
xchg
add
mov
add
fldenv
sbb
popf
dec
or
xchg
pop
mov
js
pop
mov
cltd
xchg
lcall
push
icebp
jg
jne
inc
outsl
sub
jno
cmp
mov
xlat
inc
dec
ja
out
xchg
mov
sbb
mov
mov
cmp
xchg
adc
imull
pop
fs
stos
sub
adc
enter
int3
pop
xor
ret
push
stos
dec
or
lods
js
decb
push
inc
out
sub
push
add
sbbl
test
not
sbb
xor
jae
jge
lret
sar
xchg
jno
mov
sub
mov
mov
jmp
mul
roll
dec
mov
ljmp
or
or
cmpsb
cmpsl
outsl
stos
jp
lds
inc
adc
cmp
pop
repnz
sub
jmp
enter
push
out
cmp
mov
adc
stos
into
dec
testb
mov
and
mov
cs
pop
dec
lahf
sbb
vpcmpeqb
push
clc
adc
adc
in
xchg
les
xchg
inc
fistpl
xchg
adcl
lahf
cmpsb
sbbb
les
sbb
dec
rclb
push
cmpsl
mov
imul
je
insb
gs
xchg
fidivrs
xchg
sti
inc
pushf
shll
sub
cmp
push
rcl
cwtl
pop
pop
pusha
cmp
mov
xchg
mov
or
loopne
movsl
mov
cs
aam
sbb
xchg
sbb
or
pop
ffreep
add
shr
xor
xor
nop
call
add
stos
shll
cmpsb
pop
idivb
fnsave
pop
divl
nop
pop
outsb
cmp
pushf
les
aas
mov
mov
popf
sub
sub
arpl
iret
mov
js
mov
fcmovnbe
push
lods
mov
les
add
mov
dec
push
push
add
xlat
cmpsl
inc
jl
or
sbb
add
das
adc
mov
mov
adc
push
adc
mov
jbe
push
mov
cmp
mov
sub
inc
fisubrs
call
dec
mov
sub
in
add
shll
inc
push
mov
repnz
mov
jbe
add
aam
mov
mov
xchg
xchg
sbb
push
xchg
cmpsb
roll
sub
cmp
sub
xlat
fcoms
inc
fisttps
movsl
enter
cmpsl
jbe
add
push
push
dec
xor
inc
imul
nop
push
in
inc
xchg
dec
xorl
sahf
cmp
subl
push
rcl
addr16
inc
inc
add
pop
or
cmc
jge
test
or
or
adcb
push
or
out
movsl
add
mov
addb
movsl
movsl
shll
into
xchg
sbb
mov
rclb
adc
cmc
mov
adc
clc
inc
sbb
popa
movsl
mov
js
pop
pop
test
stos
test
sahf
add
lret
aaa
stos
pop
not
fiaddl
int
push
test
inc
fmull
stc
mul
mov
out
or
repnz
pushf
in
mov
dec
push
push
or
jmp
aaa
out
insb
dec
ds
jge
leave
das
push
adc
and
or
mov
test
fadd
insl
xchg
int3
pop
fisubl
xor
mov
pushf
das
mov
stos
fdivr
mov
mov
mov
stc
pop
push
jl
pop
gs
mov
add
mov
inc
arpl
mov
xchg
mov
push
pop
sub
cwtl
sub
inc
test
lret
test
outsb
xlat
enter
cld
rcrl
pop
test
adc
push
aas
jns
aam
mov
into
or
pop
and
icebp
or
jb
mov
js
jecxz
push
adcb
pop
xor
fisubrs
je
cmp
call
adc
lods
jmp
xorb
lret
rorb
dec
test
lds
movhps
adc
fsubr
iret
push
pop
cwtl
cmc
or
adc
sub
fldl
and
pop
xor
jl
jge
cmpsl
jg
jae
aam
sub
out
mov
jle
mov
jo
jecxz
gs
add
fs
push
shl
adc
adc
out
data16
add
lahf
sbb
cltd
lods
movl
cwtl
dec
mov
ret
dec
fnstenv
cli
repnz
fisubs
xor
inc
or
cmp
sub
out
and
cltd
xchg
pop
xor
inc
ret
out
pop
inc
mov
fsubrp
cmc
xor
push
xchg
je
push
mov
shll
push
loope
inc
xchg
popf
ret
pop
and
add
mov
test
and
push
das
ljmp
cmp
mov
adcl
push
mov
or
lods
pop
popa
lds
cmp
outsb
push
xlat
push
stos
push
push
dec
dec
push
add
xor
push
mov
aas
xchg
jb
stc
adc
mov
lret
js
js
xchg
jno
xlat
pop
aam
outsb
push
inc
xchg
jne
fldt
sub
shl
push
xchg
test
je
mov
pop
pop
push
popf
imull
mov
imul
lea
mov
ds
nop
lahf
jecxz
mov
fidivl
xor
add
adc
es
pop
loopne,pt
psllw
shrl
jmp
test
xchg
adc
jge
jb
insl
cmp
mov
inc
adc
push
inc
das
fidivrl
adc
jge
test
movsl
je
out
pop
sbb
mov
dec
dec
jns
push
jg
push
jno
and
stc
lds
mov
icebp
mov
mov
lret
pop
fcompl
negl
fs
clc
ja
in
inc
lods
add
push
cli
iret
data16
inc
shl
ds
sbb
xlat
mov
pop
or
xor
shll
bswap
lahf
push
add
pop
xchg
es
mov
adc
jmp
shlb
sub
call
cmpsl
mov
cmp
sub
gs
adc
lods
pop
pop
movsb
xchg
in
in
lahf
arpl
mov
movsl
jne
mov
scas
fdivs
and
sbbb
testl
cmp
jl
out
jle
enter
out
push
in
inc
repz
ljmp
hlt
pushf
add
add
clc
rol
std
jnp
push
xchg
inc
divb
push
dec
arpl
ret
cmp
pop
xchg
je
xchg
push
push
inc
push
jo
loope
ret
jnp
repz
ja
lods
adc
clc
sub
aam
pop
or
sub
hlt
in
rorl
sub
loope
sbb
pop
xchg
outsl
pusha
int3
or
mov
sbb
sub
jno
mov
jmp
pop
lock
fists
clc
fistpll
push
inc
call
in
lcall
aas
lds
arpl
loope
mov
hlt
xchg
push
xor
icebp
and
xchg
push
jmp
insl
adc
xchg
xchg
pop
jo
cli
xchg
int
sub
inc
mov
stos
test
push
movsb
mov
roll
nop
out
loope
into
cld
adc
pop
jge
aam
cmp
mov
cltd
cmp
push
sub
das
xlat
repnz
dec
dec
xchg
popf
mov
push
repz
fwait
outsb
enter
addr16
fldl
cmp
cmpsb
daa
jns
mov
dec
int3
cwtl
dec
cmp
sbb
push
mov
adc
stos
stos
pop
sahf
push
repz
popf
pop
out
cmp
pop
jnp
xor
and
sub
shrb
bound
movsb
ljmp
add
test
pop
popa
iret
outsl
sbb
je
inc
sti
in
stc
in
pop
inc
shll
shl
pop
jbe
sub
stos
cmpsl
xchg
test
push
mov
add
aad
mov
out
call
fldenv
jmp
aas
jno
xchg
cmp
inc
push
xor
cs
out
jb
push
int
push
popf
shl
add
xor
inc
mov
ljmp
rorl
ljmp
jp
cmpsb
jle
mov
fcompl
bound
mov
icebp
popa
push
push
mov
int3
cltd
mov
loopne
fs
inc
test
pop
mov
jb
sub
js
mull
lock
test
add
jb
or
and
sub
pusha
cltd
notb
or
jmp
sub
cmp
push
cmpsb
call
adc
std
inc
pop
fwait
push
fdivl
imul
mov
out
sub
cmp
test
sub
es
cmp
inc
in
add
outsl
aad
cmp
adc
and
lock
test
adc
movb
cltd
dec
sbb
add
aam
xlat
sub
jge
cmp
cmp
jbe
pop
and
cmp
jg
mov
pushl
pop
imul
jbe
je
pop
fcompl
outsl
xchg
adc
or
std
xchg
jno
or
pop
adc
test
fistl
in
std
daa
jne
popf
lods
scas
or
leave
outsl
mov
mov
jmp
ja
fistpl
jns
xchg
mov
add
rolb
jge
pop
fidivrs
notb
pop
fstpl
dec
push
lock
sub
outsb
mov
mov
dec
ficompl
int3
xor
pushf
or
lret
sub
push
mov
pop
nop
popf
mov
sub
mov
int3
movsl
nop
test
std
dec
out
cmp
xor
clc
mulb
arpl
mov
jl
xchg
xchg
mov
mov
dec
ja
scas
pop
stc
lods
inc
add
sbb
xor
movsl
stos
out
push
les
into
imul
xlat
jae
jns
mov
add
pop
dec
out
lcall
arpl
sbb
add
pop
test
mov
adc
xor
inc
jl
mov
je
fstps
bound
dec
and
popf
mov
jno
dec
jg
pusha
scas
push
mov
fldenv
fisttps
mov
xchg
repnz
jge
call
cs
xchg
es
sub
jmp
aam
pop
mov
addr16
je
xchg
aaa
jge
es
mov
mov
mov
stos
or
add
pop
mov
cmp
ret
sub
icebp
sbb
enter
mov
mov
sub
loope
loope
mov
in
jae
dec
lret
loope
fwait
out
cltd
sub
lcall
add
jnp
cld
add
arpl
fisttpll
pushf
pop
clc
jnp
push
loopne
push
pop
jae
dec
add
mov
dec
cmpsb
call
shlb
push
cmp
xor
iret
lds
fdivl
adc
dec
aas
outsb
and
scas
push
mov
out
rcr
mov
add
shrl
push
shlb
jne
ret
lret
mov
xor
mov
jp
dec
mov
fisttps
pop
jns
ret
mov
sahf
fcmove
adc
cmp
xor
mov
adc
add
jno
jno
push
imul
cli
cli
mov
in
cmp
repz
xchg
xor
adc
jbe
iret
lret
cld
pop
and
movsl
push
pop
cmp
inc
bound
gs
mov
xor
add
pop
imul
add
mov
jbe
imul
inc
pop
pushl
imul
cmp
sub
and
xor
leave
mov
movsl
lret
mov
jp
dec
outsl
cmpb
or
cmp
ret
lahf
idiv
cmp
leave
xchg
pop
sbb
popf
jo
out
dec
or
cltd
or
adc
testl
cmp
ret
daa
daa
jb
das
rcrl
pop
loop
std
clc
ljmp
aam
cmpsb
mov
fnsave
pop
xchg
les
mov
loop
les
push
mov
or
js
xlat
xchg
lods
sbb
stos
or
mov
out
mov
xchg
xchg
cmp
fdivrl
dec
lds
mov
aaa
mov
sub
cmpl
dec
push
cmc
sub
and
test
popf
testb
xlat
mov
add
dec
insb
push
scas
push
sub
push
mov
jno
push
call
add
call
rcrb
iret
stos
adc
adc
jl
add
xchg
movsb
cmp
add
cmp
dec
repz
repz
push
mov
sbb
leave
outsb
sbb
jmp
loop
aad
jl
movsb
pop
xor
adc
jg
clc
iret
mov
xchg
ret
test
leave
pop
icebp
mov
mov
sub
popf
xor
rorb
xchg
lock
push
loope
outsl
scas
jl
push
dec
or
add
cmp
pop
sbb
gs
popa
je
dec
dec
add
stc
xlat
dec
jp
mov
add
lods
jae
fistps
in
jecxz
clc
in
out
or
les
or
movsb
pop
adc
and
inc
sbb
cmp
dec
in
aas
and
ss
lahf
in
dec
dec
xlat
sar
xbegin
pop
dec
fcoml
dec
out
aaa
pusha
mov
or
notb
shrl
hlt
cmpsb
out
out
cmp
mov
ret
leave
and
mov
int
sub
shll
aad
and
mov
inc
and
push
repnz
dec
xchg
push
in
sbb
or
cltd
les
lods
xchg
and
orb
dec
fucom
xchg
aas
mov
sahf
js
cmp
inc
xor
repnz
jns
shlb
jo
xchg
mov
int
clc
sub
lcall
scas
jle
loopne
xchg
movsb
psubsw
outsb
push
aaa
and
pop
xor
in
inc
mov
les
inc
dec
imul
jmp
or
jecxz
in
outsb
iret
ja
cmpsb
andb
stc
into
mov
rsm
mov
fnstenv
test
scas
jo
cmc
mov
cmp
mov
adc
xor
sbb
xchg
mov
cld
or
push
jmp
mov
fbstp
popf
push
add
push
push
dec
mulb
cld
dec
jo
dec
inc
jbe
pop
jge
in
adc
and
stc
and
out
xchg
es
mov
scas
loopne
add
mov
aam
xchg
add
scas
cli
rcll
js
and
repnz
sub
ret
mov
xchg
add
sub
jne
or
test
sbbl
insl
pusha
enter
sub
sti
sbb
into
lds
xchg
mov
inc
or
mov
enter
stc
pop
dec
pushf
lods
mov
xchg
mov
dec
mov
out
jne
lcall
lret
loopne
fs
js
loopne,pn
mov
rcl
xor
cs
paddusb
stc
add
loop
xchg
sub
stc
clc
push
jp
pcmpeqw
scas
cmp
pop
and
pop
jo
fistps
ds
lahf
jmp
repz
imul
sub
pusha
call
lret
cwtl
xchg
mov
gs
adc
mull
xor
adc
xchg
push
lcall
mov
sub
imul
xchg
aam
je
mov
inc
fdivp
sbb
mov
pop
mov
lret
sbb
repz
push
or
jo
mov
dec
sub
scas
pop
int
popa
dec
mov
xchg
or
cmp
cmpsb
jl
pop
push
xor
jle
rcrl
mov
sahf
adc
imul
test
cmp
dec
cmp
inc
lret
shlb
call
sbb
fcomps
cmp
ja
in
inc
insb
fcom
inc
inc
push
dec
jbe
mov
jmp
mov
adc
aam
dec
rorl
jo
xchg
negl
aam
mov
data16
xlat
pop
outsb
xchg
rclb
cwtl
rcll
push
out
enter
scas
cltd
subl
shl
pause
sbb
jb
icebp
mov
xorl
mov
aas
mov
cmpsl
pop
xor
push
cmp
aam
add
mov
fbld
sbb
lds
stos
clc
push
loop
fidivrl
std
mov
or
push
daa
pop
insb
gs
mov
mov
scas
and
push
add
sbb
pop
mov
cld
mov
fdivs
adcl
mov
je
mov
adc
aam
gs
sbb
add
xlat
fildll
add
pusha
in
add
ja
cmp
clc
fldenv
adc
fidivrl
daa
cmc
call
mov
pusha
push
jecxz
mov
inc
mov
pop
sbb
xchg
mov
aas
shlb
push
cmp
fldt
xchg
pop
xchg
lods
test
xor
and
mov
mov
push
out
loop
xchg
stos
push
imul
sti
scas
cmp
jp
xchg
xchg
je
cld
push
jp
shll
sbb
adc
xor
mov
adc
jnp
inc
or
mov
inc
xor
mov
sarl
imul
mov
and
xor
or
shrb
jo,pn
cld
addl
call
orl
jnp
pop
jo
fdivp
jae
shrl
xlat
add
sub
jno
mov
dec
mov
mov
jecxz
es
jne
popa
dec
pop
mov
jns
pusha
movsb
lea
test
mov
cmpsl
fistl
dec
mov
and
scas
into
cmpsl
pop
lods
and
aad
inc
mov
popa
sbb
cmc
stos
inc
shr
out
xchg
xchg
mov
stos
out
dec
mov
pop
xor
insl
pop
and
dec
mov
outsl
cmp
jno
dec
loop
daa
and
adc
lcall
sbb
scas
or
cli
fwait
jecxz
insb
pop
fldenv
leave
frstor
adc
sarl
mov
xor
dec
scas
imul
popa
xchg
dec
imul
and
xchg
jg
xor
mul
inc
sbb
sbb
mov
addl
or
mov
stos
pop
lahf
jl
and
jmp
faddl
push
fwait
push
mov
jnp
cmp
sti
je
push
xor
lret
sbb
outsb
mov
lods
out
or
bound
sub
stc
inc
jo
pushf
xchg
ljmp
ss
lods
fstps
push
xchg
mov
jmp
insb
or
lds
shll
ret
xor
sub
jp
jmp
in
mov
in
outsb
rcrl
mov
call
xor
in
sub
xchg
pop
pop
lret
mov
out
nop
add
sub
fdivrl
push
fsubrs
xor
xchg
stos
inc
iret
jae
lods
stc
icebp
mov
clc
jg
push
jbe
jg
loopne
or
xchg
loopne
mov
outsb
inc
jmp
pop
mov
pop
dec
push
and
mov
mov
je
std
push
addb
xor
in
shl
mov
add
cmp
inc
test
and
ret
mov
cmp
fcmovnu
insb
xchg
push
mov
repz
push
inc
or
loop
mov
aaa
jmp
lods
aam
sbb
inc
push
fcomps
out
cmc
push
daa
mov
inc
jnp
outsb
pop
push
pop
mov
and
pop
cmp
mov
push
imul
lods
aam
addr16
dec
xor
push
cli
sub
mov
adc
sbb
hlt
lahf
fildl
push
cmpsb
iret
push
pop
add
scas
imul
in
sbb
rcrl
xchg
mov
push
mov
and
hlt
jge
push
xchg
mov
popf
jnp
mov
loopne
mov
add
call
jae
into
adcb
aam
xchg
ljmp
xor
insl
out
jo
arpl
lods
push
roll
aam
pop
cli
loopne
adc
inc
outsl
adc
rcll
push
pop
lret
hlt
xor
fisubrs
sbb
int
and
xor
sahf
lcall
mov
ja
adc
int3
cmp
insb
leave
mov
and
mov
mov
pop
jl
pop
pop
inc
xchg
jbe
dec
enter
or
mov
push
sbb
sbb
pop
inc
aas
or
xchg
cmp
aad
xor
aad
inc
fstpt
ljmp
mov
shrl
sbb
das
xor
pop
enter
inc
and
sahf
push
enter
and
dec
adc
sti
inc
es
dec
cmovge
in
imul
cmp
ret
enter
add
or
inc
vmread
insb
nop
sbb
pop
fldl
pop
in
mov
add
outsl
stos
stos
outsl
xchg
pop
jmp
iret
movsl
adc
sub
mov
add
mov
jno
rclb
pop
decb
sub
or
idivl
and
xchg
es
fsubrp
pop
push
int
xchg
repz
xchg
xchg
sub
lahf
cmp
inc
cmp
test
hlt
mov
adcb
repnz
leave
das
jecxz
stc
mov
nop
add
aas
inc
insl
jbe
ret
dec
jae
xor
rclb
xchg
mov
imul
xor
xchg
test
std
cwtl
jo
or
dec
jb
aam
scas
stos
push
testl
mov
mov
xor
insb
ja
fs
paddusw
dec
dec
mov
jne
cwtl
push
lods
sbb
in
mov
xchg
xor
and
xchg
ror
ss
aas
push
jmp
inc
popa
cmpsb
scas
pop
xchg
mov
pop
mov
ljmp
mov
pop
lahf
movb
pushl
fwait
add
push
iret
insl
push
bound
aas
mov
fnsave
lcall
addr16
xlat
mov
dec
cmpsl
dec
or
in
pop
sbb
dec
sti
in
cmp
test
mull
rcll
rolb
cltd
cs
leave
mov
neg
or
js
mov
popa
das
dec
mov
adc
jbe
cltd
xchg
mov
cmp
jno
lret
cli
int
outsl
mov
mov
aam
shll
mov
cld
test
inc
mov
mov
jg
push
push
inc
out
mov
push
sbb
daa
std
rcrb
xor
add
cmpsl
aaa
pop
insl
dec
jmp
push
fildll
imulb
fstpl
lods
inc
sub
cmpl
push
push
mov
out
and
stos
dec
inc
cmp
push
xchg
pop
xor
ficompl
push
mov
jmp
mov
shll
popf
imul
mov
ret
cmp
sbb
xor
addr16
scas
je
or
fstps
xchg
pop
add
cmc
or
aaa
ds
or
fbld
das
lods
mov
in
and
cmpsl
and
loop
push
out
pop
int3
lret
sub
enter
xchg
xorl
leave
scas
pop
push
dec
popa
mov
sbb
xor
dec
jnp
mov
adc
push
ret
lock
mov
add
loope
inc
cmp
repnz
dec
add
cmc
imul
dec
mov
cli
mov
dec
mov
or
pop
xchg
cmp
sahf
shlb
in
cmpsb
lret
and
ret
imulb
into
and
mov
xchg
enter
xor
mov
shll
lea
fdivs
mov
loope
xor
xchg
cmpsl
andl
fmuls
xchg
popf
cmp
mov
or
cmpsl
cmp
sbb
rorb
mov
imul
pop
mov
ficoml
imul
cltd
push
ret
movsl
jae
push
cmp
xchg
cli
daa
aaa
or
ficompl
sub
mov
lcall
lds
pop
and
notl
flds
je
push
cmpsb
xlat
popf
pop
lret
int
pop
lret
cmp
popf
inc
push
sahf
xchg
sub
cmp
dec
inc
cltd
lahf
pop
jmp
jmp
inc
arpl
js
or
hlt
xor
sti
lret
xor
xchg
or
es
icebp
push
or
aas
push
mov
mov
mov
and
pop
cltd
adc
aam
push
imul
mov
out
add
adc
push
mov
mov
int3
outsl
fdivs
push
jns
rolb
mov
mov
mov
pop
dec
stos
push
jno
add
out
loop
lods
sarl
and
mov
es
sub
xor
lock
addr16
pop
test
mov
cld
add
call
xchg
test
xchg
mov
in
cmp
icebp
sar
mov
push
in
out
andl
inc
and
inc
lret
sti
sub
cmp
adc
pop
xchg
mov
aam
xlat
dec
cmp
push
mov
rolb
mov
add
in
or
sub
mov
pop
mov
mov
ss
icebp
cld
lods
sbb
jbe
jae
xchg
fsubl
and
repz
in
adc
andb
sbb
ljmp
je
and
sbb
sbb
cmpsb
test
mov
mov
loope
jae
jle
ret
sti
lret
pusha
mov
xlat
pop
in
out
inc
push
shl
jp
cmp
cltd
test
jg
andb
add
push
sbb
sub
dec
out
and
subb
push
fwait
mov
jns
dec
ret
jns
cltd
jmp
js
pop
ficomps
rorb
imul
lds
mov
or
scas
dec
adc
mov
loope
rorl
fwait
repnz
pop
dec
and
ja
ficomps
bound
jns
movsl
push
sub
dec
pushf
adc
cld
loope
cmp
rcrl
push
push
lcall
pop
rclb
mov
xchg
dec
inc
rorb
lods
xchg
xor
in
test
cmpsb
jmp
mov
dec
xchg
test
imul
mov
mov
jno
cli
je
leave
stos
push
nop
movnti
push
out
imul
xor
shrl
lret
out
mov
lcall
push
jle
in
sbb
cmp
sbb
dec
mov
xchg
test
sub
call
shrb
shlb
ljmp
shrl
pushf
jmp
mov
sarb
mov
int
add
push
lock
fisubrs
sub
out
mov
fsubl
sti
ljmp
pusha
fwait
hlt
ret
lret
data16
cmp
sub
or
rolb
adc
arpl
mov
inc
cli
ds
lock
xchg
dec
jmp
insb
mov
mov
mov
rclb
imul
fbld
xor
imul
dec
jp
sahf
pushf
push
add
je
cmp
mov
movsl
mov
jne
out
mov
rcl
mov
rcrl
test
std
fidivrs
inc
ret
push
mov
jg
fmul
ficoms
mov
mov
xor
je
and
sbb
test
fcomps
xor
test
or
xchg
ss
jbe
shlb
push
jg
cmp
add
sahf
scas
mov
dec
insl
decb
sbb
fisubl
inc
scas
lret
pop
fadds
inc
xor
and
insl
add
dec
xlat
pop
cli
push
sbb
loopne
jl
xor
add
imulb
cmp
add
jnp
sbb
cld
sbbb
push
ss
mov
icebp
lret
ljmp
in
pop
loop
fsubrs
xchg
iret
cwtl
jmp
cld
sub
push
fs
ss
stc
adcb
pop
add
dec
lods
xor
xlat
jecxz
mov
imul
fs
adc
ja
mov
add
into
scas
loop
mov
cs
dec
mov
cmc
mov
sahf
cmpsb
test
cmpsl
jg
repnz
ja
imul
push
rol
and
cmp
scas
insl
inc
and
pushf
in
push
adc
xor
xorl
arpl
jb
das
mov
pop
aaa
hlt
dec
jno
pop
arpl
aaa
and
or
cwtl
data16
insl
jmp
sub
xchg
fwait
je
mov
jb
mov
or
cwtl
les
addr16
dec
loop
mov
dec
mov
fwait
pushf
sub
push
mov
cmp
stos
pusha
dec
aad
add
stos
cltd
pop
ds
lods
scas
pop
add
mov
xor
aas
sub
outsl
jmp
imul
pop
outsl
mov
sbb
xor
std
enter
sarb
jnp
loop
sbb
fwait
js
or
mov
lret
dec
mov
or
test
mov
data16
mov
scas
and
ret
cs
adcb
push
repnz
lahf
xchg
cmp
movsb
js
decl
push
ss
sbb
lea
addl
jp
negb
insl
fcomps
outsb
cwtl
sbb
mov
gs
ficompl
rcrl
fisubrs
or
jecxz
aam
imul
in
orb
jne
jl
push
push
xor
mov
inc
rcrb
leave
lcall
cmp
adc
pop
insl
add
loop
pop
cld
push
int
lret
popf
mov
jle
scas
insb
insb
imul
mov
push
sbb
push
cmp
xor
dec
mov
cmp
int
push
jl
adc
arpl
xor
pop
cs
out
pop
pop
lds
xor
inc
pop
mov
jmp
mov
movsl
in
mov
out
push
and
sub
cmp
dec
cmpsl
jmp
xchg
adc
std
lcall
inc
and
fwait
cld
sbb
aam
push
dec
and
addb
push
dec
cmp
icebp
and
pop
imul
inc
dec
pop
sub
mov
mov
scas
add
xchg
sbb
loope
jecxz
xor
pusha
outsb
mov
pop
movsl
cmp
sub
mov
mov
cmp
imul
mov
mov
jb
aad
dec
jecxz
imul
inc
js
test
cmpsl
in
mov
dec
sub
dec
cmp
mov
sbb
decb
adcl
ljmp
sti
pop
ret
push
scas
loope
lret
int
aam
lds
xchg
push
bound
xchg
hlt
pop
sub
cmp
mov
dec
lock
imulb
cmp
lock
push
iret
data16
enter
cmpsb
ret
mov
mov
mov
pop
cli
mov
xchg
testb
and
bound
mov
or
rol
xchg
push
sub
lret
lods
repz
in
movsb
inc
xchg
or
repz
js
cs
mov
in
or
repnz
sbb
rsm
sbb
mov
adc
bound
xor
sub
daa
loop
cs
mov
mov
sub
or
mov
jnp
sbb
mov
xchg
inc
xchg
sub
imul
cmp
rol
xchg
sbb
popf
sbb
jno
mov
adc
mov
lds
in
or
outsb
dec
out
cmp
mov
mov
push
in
iret
scas
add
cmp
add
mov
imulb
ja
xchg
es
pop
std
mov
pop
je
sub
cli
cmpsl
fisttps
mov
xchg
call
fidivrs
inc
ss
xor
icebp
testb
dec
pop
das
mov
lock
movsl
movsb
cli
std
jo
or
fnstcw
jne
push
push
insl
sbb
cwtl
imul
push
loop
ljmp
cwtl
nop
dec
mov
push
xchg
push
fisubl
and
bound
jo
jae
push
push
dec
cld
xchg
pop
push
inc
mov
pop
out
test
jg
mov
xchg
movsl
mov
imul
arpl
daa
ret
lahf
xchg
addb
or
xchg
shlb
int
test
enter
and
push
cld
shll
out
push
mov
inc
mov
dec
notl
out
ret
jb
mov
test
das
mov
stc
dec
push
ds
mov
mov
lods
outsl
jne
sahf
lret
push
ret
int
arpl
stc
fs
sbb
push
into
pop
adc
inc
dec
or
pop
xchg
add
push
adc
pop
push
ficomps
mov
out
mov
out
out
fidivrl
mov
push
ljmp
mov
sbb
daa
or
push
xor
push
mov
faddl
mov
or
push
cmp
nop
jne
mov
pop
movsl
or
in
test
xchg
imul
sbb
adc
rclb
push
mov
xchg
lahf
jns
pusha
ljmp
add
ljmp
fdivl
push
lock
or
pop
fisttps
out
popa
stos
cli
xchg
cltd
out
push
mov
arpl
push
mov
adc
inc
jnp
jmp
mov
push
push
mov
decb
mov
shll
sub
mov
notb
js
or
mov
pop
xchg
or
xorl
cmp
iret
mov
fldenv
fdivl
mov
mov
out
test
das
inc
arpl
dec
shll
push
mov
jae
jb
leave
dec
cli
fs
cmp
leave
mov
leave
xchg
lret
sahf
dec
xor
sub
les
stos
fdivrl
lcall
mov
adc
fsubl
mov
push
sahf
iret
push
mov
jb
cmc
lds
adc
int
add
outsl
xchg
sub
bound
insl
jl
insb
add
sbb
inc
jle
popf
mov
jecxz
and
idivl
xchg
dec
iret
cmp
sti
stc
adc
mov
jns
jb
stos
mov
add
add
outsb
pop
cld
sub
imul
clc
inc
xor
sti
xor
lea
mov
inc
jle
push
adc
das
jne
stc
loopne
cmp
mov
dec
mov
les
sub
push
xchg
mov
add
dec
mov
ds
mov
inc
or
lock
dec
stos
mov
adc
loope
icebp
into
lds
cld
int
ss
in
sub
cmp
jb
push
lds
push
popf
inc
mov
cltd
jo
in
je
sahf
push
lds
dec
dec
cld
jne
fwait
adc
cmp
aaa
push
ds
xor
mov
psrlw
mov
and
insb
icebp
frstor
fbld
pop
fwait
sti
mov
inc
stos
push
mov
ljmp
les
mov
push
lea
pcmpgtb
cwtl
xor
pop
push
xchg
inc
sub
cmpsl
pusha
add
mov
int
pop
push
outsb
mov
sub
sbb
push
outsl
mov
frstor
cmpb
js
and
enter
and
cli
les
dec
xchg
lahf
adc
addb
dec
rcrb
stos
mov
sbb
dec
out
das
int3
fldenv
mov
stos
cmp
pushl
or
dec
les
inc
out
mov
aas
push
popa
outsl
dec
inc
repnz
xor
fcom
lds
adc
add
push
leave
push
dec
lods
inc
ljmp
cmp
fs
sub
xchg
inc
es
pushf
push
fldln2
push
pop
xorb
loope
std
mov
es
pop
mov
aad
pop
xchg
lret
push
loope
add
push
or
inc
dec
sub
lods
lret
in
sbb
mov
mov
in
movsl
in
push
sub
ss
lahf
push
adc
cmp
out
inc
popa
fwait
adc
jp
adc
ljmp
inc
fistpll
inc
mov
outsb
mov
pusha
lea
fsubr
adc
cmpsl
pop
stos
cmp
inc
push
test
sub
jne
adc
pop
lret
sbb
hlt
rclb
xchg
jae
out
cmp
insb
add
inc
mov
push
arpl
test
mov
xchg
arpl
sbb
xlat
insl
or
mov
push
fs
into
std
data16
pop
inc
dec
lods
jnp
push
out
iret
popa
lods
jb
and
je
icebp
dec
inc
push
mov
jo
cmp
jne
jmp
in
ret
dec
or
ret
and
sarb
pusha
inc
and
cmpsb
lcall
jle
movsb
or
fs
mov
push
xorb
jbe
pop
lds
fs
in
js
insl
lret
shl
jae
push
mov
insl
inc
inc
and
fnstenv
test
aas
ss
or
push
int
in
or
or
xor
jge
adc
aad
lods
jg
pop
movsb
push
mov
ljmp
addb
movsb
paddb
movsl
test
pop
aas
in
filds
repnz
arpl
repnz
xor
inc
jmp
cltd
mov
scas
into
sbb
mov
push
das
xor
int
mov
repz
push
push
stos
mov
fbstp
cmp
jge
js
dec
cltd
fcoms
add
punpckhwd
inc
sbb
sti
pop
mov
cmc
dec
pushf
lret
cs
das
cmp
fsubrl
mov
shrb
bound
mov
fistpll
outsb
or
push
dec
mov
flds
pop
shr
ds
stos
test
dec
dec
push
fstl
push
adc
cmp
ljmp
mov
push
push
imul
and
out
dec
jns
outsl
push
inc
mov
adc
pop
je
and
add
aas
xchg
add
jecxz
loop
push
lods
stos
cmp
adcb
fs
rcl
sub
or
and
dec
call
ret
jmp
lods
popa
xor
push
pop
push
or
dec
sarl
push
cmp
xor
cmpsb
ret
mov
std
or
xor
pop
sbb
std
mov
and
in
enter
aam
es
out
sbb
xor
fdivs
pop
dec
jno
lock
imul
cli
mov
shrl
add
es
imul
xchg
add
sbb
movsb
stc
mov
call
push
add
lock
aam
and
cmpl
and
or
pop
sbb
jae
jl
popf
jmp
mov
das
push
int
mov
push
jg
aad
push
das
inc
call
seta
mov
jmp
out
imul
dec
imul
ds
andl
fsubl
sahf
stos
adc
pop
les
data16
test
es
movsl
xchg
fistl
mov
rclb
mov
in
dec
les
inc
dec
push
pop
cmp
inc
in
dec
inc
push
mov
shll
dec
mov
in
mov
cmp
dec
call
adc
jnp
orl
adc
fisubrs
mov
jg
sbb
dec
inc
add
flds
stc
pushf
fs
out
cwtl
lea
mov
jne
lock
mov
imul
test
ss
jecxz
xor
lock
mov
add
movsb
aas
insb
adc
xchg
daa
jo
out
nop
cli
insl
mov
rcr
xlat
push
scas
mov
mov
lcall
js
clc
or
cmpsb
and
sub
push
out
lods
pop
insb
add
sbb
inc
gs
sti
in
aaa
cmp
rcrb
movsb
push
xlat
out
in
lock
imul
xchg
xor
clc
in
jle
inc
call
test
sbb
or
sbb
shl
pop
in
cld
je
inc
sahf
add
or
mov
loopne
movsb
sub
sub
addr16
testb
xchg
aad
push
negb
pop
je
add
icebp
das
cli
cmpsb
or
mov
xchg
sbb
jnp
push
aas
jbe
pushf
adc
into
call
cmpsb
jb
jg
lret
and
xchg
mov
sub
rclb
subb
test
sbb
jmp
pop
pop
sub
dec
stos
fiaddl
fstpl
insb
jne
xchg
int3
pop
sub
mov
testb
jl
out
outsb
push
mov
cmp
dec
xor
mov
cmpsl
jae
and
test
xor
leave
cmp
mov
jg
jne
mov
cld
cltd
mov
std
and
ret
sbb
or
stc
stc
lret
push
sbb
mov
lods
cli
push
fstpl
outsb
ret
pushf
inc
and
mov
pop
gs
int3
dec
fs
std
inc
adc
mov
and
mov
imul
add
xor
xor
das
aam
pop
in
lds
mov
gs
mov
movsl
js
aas
adc
repnz
test
dec
pop
inc
cltd
fsin
data16
es
out
jae
ja
mov
add
in
into
int3
xchg
subl
jne
add
ret
inc
or
lock
test
in
or
fisubl
aad
cmc
push
push
cld
inc
pop
imul
push
adc
mov
scas
icebp
fwait
pop
fiaddl
dec
pop
pop
sbb
lcall
icebp
fs
fimull
cmp
mov
push
loopne
test
lahf
js
inc
aam
jmp
mov
ror
movsb
mov
gs
adc
in
fimull
jecxz
nop
jmp
pop
es
mov
cmp
nop
inc
jo
xchg
push
adc
pop
xchg
mov
movswl
shrl
push
jge
ficoms
mov
out
sub
push
lods
pop
jmp
push
cmc
cmp
cld
or
insb
and
or
mov
xor
xchg
pushf
cwtl
enter
push
enter
orl
test
sub
lcall
stos
mov
insb
sar
aam
jns
push
and
sbb
scas
cmp
lret
clc
int
jae
nop
pushf
dec
push
adc
and
mov
mov
jecxz
shl
push
pushf
cwtl
cmp
aad
dec
or
fsubrp
mov
loopne
test
enter
mov
out
std
enter
or
mov
fwait
sub
stos
jnp
jae
mov
in
adc
push
out
pop
outsb
pop
pop
cmp
jge
jb
dec
or
int
lods
xchg
dec
adcl
rcr
mov
das
and
fdivrs
imul
leave
jmp
shll
in
xchg
adc
fisubs
xchg
jne
or
outsb
pminub
aaa
and
mov
xlat
popf
fistpl
hlt
add
jmp
push
adc
cld
notb
and
xlat
mov
out
sbb
jge
dec
pusha
mov
rcll
sub
insl
shll
out
inc
roll
inc
and
mov
out
sub
xchg
popf
pusha
sub
and
rcrb
mov
nop
or
xchg
leave
in
imul
sbb
movsb
movsb
adc
incb
push
xor
dec
xor
imul
jo
adc
lret
add
popa
pop
jbe
mov
mov
pop
test
jp
les
mov
cmp
push
sbbb
mov
negb
and
jbe
dec
pusha
and
mov
out
stos
call
scas
xchg
sub
out
mov
inc
js
sti
iret
xorb
cli
test
dec
dec
pop
outsl
test
jo
pushf
push
push
add
mov
rorb
lock
aas
mov
and
mov
mov
shl
pop
addr16
inc
dec
lds
stc
adc
dec
insl
sti
inc
in
psllq
push
or
xchg
test
xor
repnz
iret
mov
lgs
imul
adc
push
fdivp
cmp
sti
in
lahf
adc
mov
mov
mov
xlat
sbb
lret
adc
xor
add
lret
call
push
dec
mov
mov
out
and
jnp
movsb
out
cmpsl
test
insb
dec
hlt
add
mov
fists
das
cmc
cmp
jp
adc
ret
mov
mov
xchg
mov
or
daa
add
lock
jne
mov
mov
fbstp
or
scas
cld
dec
icebp
stos
in
cmp
lods
jmp
mov
leave
jg
dec
cmp
andl
ret
or
adc
jg
jns
mov
pop
shr
mov
int3
sbb
mov
mov
std
loop
mov
cmp
cmp
and
lods
sub
ljmp
pop
sbb
adc
mov
push
ljmp
push
mov
adc
leave
enter
xchg
pop
add
cltd
mov
sarl
shll
mov
hlt
xor
rorb
leave
dec
dec
cmp
jnp
mov
rolb
lea
dec
nop
pop
push
in
pop
aad
jge
test
nop
adc
sbb
or
gs
std
jnp
mov
decl
loop
xor
cmc
je
bnd
pop
movsb
adc
cmp
mov
aad
mov
out
out
out
in
lret
pop
divl
cmp
jp
and
sub
test
or
push
aaa
and
sbb
push
cmp
pop
or
jge
in
mov
es
cwtl
fnstenv
sbb
lcall
jns
adc
scas
mov
adc
sbb
xor
fisttps
and
mov
shll
addb
dec
mov
cmpsb
pop
pusha
fwait
adc
mov
and
push
pop
xchg
test
or
cld
js
and
jae
mov
int3
idivl
jae
inc
loop
rcll
push
sbb
mov
adcl
fmulp
cmpsl
push
inc
fidivrs
pop
orl
mov
push
lret
adc
cli
lea
inc
stos
mov
sub
xchg
fadds
adc
pusha
je
add
lret
mov
mov
rcr
lods
jb
lcall
inc
inc
jnp
mov
cwtl
mov
jle
jecxz
mov
lods
pop
jo
jno
in
jp
xor
or
pop
pop
imul
cmpsl
xor
cltd
in
xor
xor
jmp
adc
test
pusha
fsubrl
fildl
or
cld
shlb
push
les
pushf
mov
xchg
push
leave
jno
dec
jmp
mov
inc
sbb
add
in
mov
ficomps
sbb
sti
adc
gs
xchg
or
test
rcll
rorb
mov
push
push
adc
sarb
outsb
leave
dec
pop
xchg
pop
jg
jmp
pop
sub
into
data16
cltd
sub
mov
mov
cmpsb
sbb
mov
jmp
idivb
arpl
sbb
dec
fcomps
sbb
jmp
lahf
push
sbb
inc
enter
pop
movsl
popa
pop
rolb
ror
xor
pop
xchg
cld
dec
push
int
dec
pop
rcr
push
xchg
outsb
mov
or
mov
adc
mov
fs
cs
sbb
jmp
loop
push
clc
cmp
leave
mov
pop
mov
fwait
xlat
mov
fs
dec
adc
cmp
sbb
out
sbb
mov
scas
mov
inc
icebp
and
xor
push
mov
mov
jmp
pusha
dec
jg
push
jns
sti
stos
sbb
pop
addr16
cs
push
stos
sub
sbb
negl
add
mov
xor
xor
cmp
sub
lret
jecxz
mov
adc
test
cmp
insb
xor
out
xor
push
mov
jmp
adc
aas
add
js
fldl
repnz
sti
loop
add
xor
fstpl
stos
push
pushf
jnp
push
frstor
cwtl
jge
or
ret
mov
push
scas
or
adc
fwait
gs
xchg
inc
xchg
mov
cmp
rcrl
sub
adc
das
cli
sub
fdivr
jl
jne
cltd
add
sub
cmpsb
sub
lret
or
cwtl
sbb
test
mov
xor
out
add
mulb
inc
inc
adc
pushf
pop
lret
cmpsb
clc
es
jecxz
shr
jmp
ss
jne
mov
shrb
mov
xor
call
pop
xlat
or
or
jne
testl
xchg
aas
dec
xor
inc
mov
out
stos
ficompl
nop
repnz
or
test
xor
outsb
enter
pop
test
inc
adc
cltd
lea
je
jge
xlat
mov
mov
add
lea
push
jmp
sarl
test
sub
add
nop
gs
iret
cmp
test
or
dec
lcall
sub
pop
popa
rclb
and
mov
outsb
leave
and
js
cmc
jecxz
dec
jl
pop
jge
test
mov
int3
aas
shll
test
mov
iret
lahf
lcall
sbb
push
pop
lods
dec
sbb
push
out
push
in
les
iret
inc
mov
repnz
in
sbb
push
in
scas
push
mov
mov
sub
out
push
sub
int3
stc
daa
ret
ret
push
mov
cmpsb
pop
and
lds
arpl
loope
inc
loop
mov
jno
push
ret
sahf
pop
rolb
lret
shlb
test
rcll
and
adc
int
cmp
or
inc
fistps
sub
inc
pusha
xchg
outsl
es
dec
inc
popa
cmp
mov
mov
push
add
repz
ret
inc
add
lock
out
jle
or
and
test
in
sub
pop
push
fbstp
xchg
fmuls
and
into
inc
mov
dec
orl
adc
cmpb
pop
rcrl
clc
add
inc
dec
mov
xlat
les
std
jb
xchg
pop
sbb
lcall
jne
int3
add
inc
mov
mov
or
inc
cli
addr16
mov
repz
cmp
mov
adc
jns
inc
sbb
pop
cld
les
iret
mov
push
adc
or
popf
movsl
mov
dec
and
push
jno
push
arpl
into
fsubs
xchg
sbb
repz
insl
shrb
addr16
push
mov
mov
jb
mov
lret
lea
test
enter
lcall
lret
pop
xor
push
xchg
out
cwtl
in
push
mov
xor
pop
cmpl
sbb
dec
int
push
xchg
xchg
or
fsubl
cmpsb
xchg
insb
aad
out
cmpsl
pop
fs
mov
sub
sbb
outsl
out
adc
aam
scas
fs
lds
jl
dec
nop
repnz
mov
leave
push
sbb
loop
xlat
fcomp
stc
lods
shlb
xor
bound
shrl
testl
aam
pop
push
sub
stc
dec
jb
adc
sub
cmp
mov
add
fistl
push
jo
xchg
std
fs
popa
mov
xchg
xchg
mov
push
and
or
xchg
lret
dec
mov
push
mov
sbb
or
test
mov
jmp
cmp
test
jp
sub
aaa
addb
mov
int3
mov
mov
jecxz
fcompl
inc
cmp
xlat
pop
or
mov
lds
push
test
mov
fsubr
dec
pop
loope
sub
imul
scas
or
fcoms
adc
sbb
and
leave
cli
pop
es
xchg
lods
adc
mulb
xchg
rolb
jo
cmp
ss
nop
pop
jle
jp
add
cmp
addr16
enter
imul
dec
or
icebp
xchg
hlt
mov
mov
mov
cmp
mov
mov
outsb
stos
mov
jae
dec
jb
aaa
mov
mov
out
hlt
add
ljmp
adc
adc
push
int
imul
stos
cmpsb
xchg
cmpsb
sahf
ljmp
cmp
out
idiv
repnz
insb
ja
sbb
pusha
scas
daa
cld
xchg
stos
outsl
lock
mov
stc
dec
lds
iret
out
add
and
push
loope
and
les
lods
inc
nop
loope
ja
inc
insb
mov
repz
mov
shlb
adc
sub
aam
sub
mov
inc
insb
lret
push
subb
mov
inc
inc
xlat
jo
jmp
sub
dec
in
sub
lea
push
ficomps
push
jbe
push
sub
rol
xchg
push
push
xchg
inc
adc
push
pop
cmp
mul
mov
add
jo
shr
sub
inc
in
lret
pop
daa
inc
inc
mov
movsl
shlb
mov
hlt
xchg
andb
adc
adcl
jle
je
add
xor
int
imul
insl
enter
add
dec
add
xchg
inc
das
pop
jl
out
sbb
sar
fs
push
mov
xchg
hlt
add
inc
loop
mov
cwtl
sbb
daa
jmp
and
cs
jnp
mov
lds
hlt
jae
cltd
adc
mov
fisttpll
dec
scas
add
nop
mov
or
sti
add
xor
add
dec
mov
rcl
fdivl
dec
sub
js
iret
jb
loop
mov
and
ds
pop
xchg
dec
lods
mov
mov
loopne
inc
mov
dec
or
push
dec
jg
aas
rolb
sbb
sbb
cld
dec
push
outsl
popa
jge
das
mov
sub
in
push
loope
stc
jmp
cmp
push
pop
pusha
inc
cmpsb
pushf
ret
in
push
fs
jmp
push
push
push
fwait
popa
or
cld
psraw
xchg
inc
rcll
cld
fldenv
xchg
dec
das
inc
cmp
les
addr16
sub
sub
mov
mov
push
push
test
push
repnz
mov
pusha
mov
jle
add
test
push
pop
les
cmc
in
scas
jmp
fwait
xchg
adc
incl
xchg
push
rcr
jg
mov
jne
mov
push
xchg
and
dec
ds
sub
inc
lods
lods
and
addl
je
dec
popa
dec
lcall
cmc
lods
in
cmp
bound
adcb
mov
or
sub
out
in
gs
loope
sub
outsb
loopne
or
lock
insl
mov
jae
fwait
ljmp
mov
inc
sbb
mov
popa
gs
or
pop
mov
xchg
push
jns
xor
xlat
ljmp
or
ret
in
js
mov
jle
icebp
push
and
daa
pop
inc
mov
jmp
ret
imul
push
rcrl
inc
lahf
push
dec
add
and
lcall
popl
je
cs
inc
jnp
mov
jle
roll
repnz
push
scas
xchg
sbb
shlb
movb
int
repz
and
cmc
add
iret
aam
jg
cmp
inc
lcall
cmp
aas
and
pop
mov
in
out
lahf
mov
ljmp
dec
adc
mulb
adc
mov
stos
xor
mov
int3
popf
push
mov
inc
cmpsb
loop
pop
pop
dec
fs
in
pop
inc
aaa
js
daa
and
mov
xchg
loop
add
js
in
adc
jo
sbb
popf
cmpsl
add
pop
and
inc
push
or
pusha
popf
mov
cmovno
shl
xor
cmpsl
insb
je
adc
inc
push
add
filds
push
sbb
add
push
xor
add
hlt
and
or
pop
imul
jns
stos
shlb
push
fucom
xchg
into
dec
xchg
dec
sti
push
adc
repz
in
jmp
inc
scas
add
fcompl
xchg
push
mov
leave
dec
shll
push
push
in
push
xor
and
cmp
dec
inc
push
push
inc
enter
shl
scas
push
fdiv
cmp
xchg
jbe
jge
idivb
out
mov
sbb
pop
sbb
nop
jns
cmp
inc
lea
xchg
in
dec
pop
loope
mov
xchg
fldenv
dec
jo
sub
cmp
jmp
or
jnp
in
mov
mov
sbb
out
sbb
mov
fadds
test
or
mov
pushf
push
xchg
jnp
mov
and
pop
adc
es
mov
adc
or
cwtl
mov
lock
sbb
push
loope
sbb
adc
jecxz
xor
das
pop
iret
ret
sub
xchg
jb
andl
mov
adc
pop
fisttps
pop
add
out
mov
lock
jns
mov
dec
and
cmp
inc
mov
int3
repnz
out
insb
jmp
add
xlat
xchg
in
hlt
jae
enter
or
mov
push
jno
pop
das
bsr
movsl
lret
push
inc
adc
inc
test
outsl
pop
push
inc
push
xor
or
xchg
cmc
movl
push
lea
cwtl
sub
dec
adc
fidivs
ds
fdivr
or
jg
push
push
imul
fwait
movsl
outsl
scas
out
sub
and
sbb
ficoml
ja
sub
xor
loope
popl
pop
faddl
sbb
stos
es
push
cmp
and
add
and
popa
mov
mov
or
dec
lret
or
aam
imul
sbb
inc
adc
in
es
into
dec
dec
xchg
filds
cmp
fs
pop
jle
xchg
or
mov
movsb
rcll
mov
imul
outsl
out
and
xchg
jo
pusha
cmp
push
pop
movb
leave
dec
aas
or
pop
xchg
jne
xchg
sbb
cmp
adc
je
or
jmp
jne
fistps
xchg
aaa
stos
xchg
and
sub
mov
jo
push
mov
cltd
sub
test
fcoms
popa
xor
pop
or
cs
jge
aas
mov
push
xor
rolb
pop
mov
mov
add
jnp
sbb
sbb
lock
bound
and
adc
mov
sub
cmp
mov
add
fs
jmp
or
cmp
xorl
in
aaa
loop
popa
adc
sahf
aam
push
sahf
jle
pop
out
xchg
xchg
incl
push
pusha
stc
das
fidivs
lahf
adc
hlt
or
xchg
push
jns
adc
dec
add
pop
jae
shll
push
inc
stc
rclb
test
addr16
or
jge
cs
pop
fwait
icebp
sub
scas
lcall
les
test
push
mov
lcall
mov
lods
cmc
sub
sbb
imul
jl
add
shlb
lret
hlt
lock
lods
or
scas
scas
push
cmc
in
mov
inc
and
xor
dec
or
wrmsr
das
inc
mov
pop
push
cmp
pop
push
mov
das
loopne
mov
adcb
dec
dec
iret
xor
bound
adc
push
std
cli
mov
mov
ja
mov
out
push
mov
mov
xchg
lahf
fistps
cwtl
inc
xchg
enter
cmp
repnz
push
ret
ficomps
fiadds
stc
leave
cld
dec
pop
enter
inc
ds
push
leave
movsb
fisttps
test
repnz
insl
aas
push
enter
xchg
outsl
mov
pop
mov
add
push
clc
and
adc
mov
shrb
in
push
rorl
int3
pop
popl
mov
ds
std
inc
cmp
inc
pop
push
xchg
jns
cltd
insl
xor
add
out
ficoms
outsl
das
arpl
shll
cmp
icebp
sar
sbb
dec
pop
sub
shl
mov
jle
fmull
jl
mov
mov
cs
cmpsb
add
mov
enter
xor
hlt
jae
mov
pop
jae
xor
cmp
xchg
fdivl
pop
push
adc
loope
ss
mov
cltd
or
jo
mov
sub
inc
push
push
pop
jns
pop
repnz
aas
jecxz
xchg
xor
inc
stos
mov
mov
xor
lcall
in
ljmp
cltd
in
cmp
add
hlt
jb
pop
jmp
lods
push
and
add
les
mov
mov
in
insl
dec
in
cmp
sahf
jo
xor
push
sti
lds
popf
sahf
cmp
outsb
ja
fnstenv
cmpl
fcmovnb
xor
xorb
push
cmpsb
inc
adcl
push
jecxz
add
movb
xor
jae
test
xchg
pushf
vpshufd
inc
pop
call
pop
cli
jecxz
ss
and
push
sub
in
jne
lret
repz
lcall
enter
inc
fs
mov
sti
cmc
mov
xor
lcall
inc
mov
mov
test
mov
lock
jb
stc
and
sub
mov
clc
test
inc
stos
mov
jo
push
mov
mov
icebp
inc
inc
push
int
cmp
popa
insl
xchg
push
xlat
gs
fisubl
call
xor
lret
les
cmp
adc
mov
mov
cli
cmp
and
jbe
xchg
mov
add
pop
mov
mov
stos
jg
xor
pop
add
pop
push
cmp
pop
roll
push
in
movsl
dec
mov
or
adc
cltd
outsl
loope
add
push
xor
lock
test
mov
dec
xor
xor
dec
and
xor
pop
pop
clc
fdivl
ret
push
clc
mov
adc
pop
js
xchg
mov
push
sub
icebp
daa
enter
stc
ficomps
adc
cmp
jo,pn
and
dec
mov
push
pop
in
dec
xchg
cmc
ficomps
incl
pop
mov
xchg
loopne
pop
pop
pop
and
cmpsb
mov
push
xchg
std
out
mov
mov
fadds
les
in
xor
dec
add
push
jp
push
mov
outsb
stc
jg
cmp
xor
sbb
mov
lcall
scas
ljmp
cmp
jecxz
fstl
xchg
clc
fnstcw
jns
stos
mov
inc
fdiv
popf
mov
sub
daa
nop
and
mov
dec
adc
les
movsb
std
sub
ss
pop
pop
jle
fs
mov
test
xchg
pop
jg
ja
or
fisubrs
push
scas
dec
jp
sub
out
loop
imul
lahf
lret
dec
ss
jp
lret
jne
sub
data16
push
sub
cmp
fidivs
fistps
jns
divl
insl
add
aas
or
scas
aam
xor
ret
dec
pop
pop
rorl
sub
dec
addr16
lret
cmp
jb
lods
fldt
xor
mov
pop
mov
enter
sbb
aaa
jmp
int
dec
das
mov
ret
pushf
inc
into
jmp
enter
lea
das
insb
test
pushf
adc
sti
mov
inc
out
outsl
repnz
and
cmpsb
popf
pop
pop
sub
in
aaa
andl
sub
sub
xorb
mov
dec
mov
sbb
mov
mov
pop
fbld
dec
adc
dec
cmp
insb
rcrl
test
loop
fcomps
pop
or
outsl
out
pop
sub
fsubs
addr16
add
lcall
xchg
mov
jae
std
push
in
push
push
addr16
fs
adc
xlat
iret
push
js
shl
bswap
pop
sub
out
subb
ljmp
mov
jmp
dec
rcrl
ds
cmp
out
mov
lods
jae
bound
lcall
out
lods
dec
pop
dec
loope
xchg
sbb
and
xchg
in
jb
icebp
stos
leave
and
stos
xor
shr
out
xchg
ficomps
sbb
popa
insb
lock
cwtl
ret
and
mov
out
add
push
ficoml
dec
outsb
js
add
neg
je
add
int3
cmp
and
sub
fs
push
fsts
incb
cmc
inc
rcr
push
roll
xchg
daa
add
and
or
int
add
clc
ljmp
mov
shl
push
inc
dec
xlat
aad
push
pop
stos
cmp
aad
push
mov
xchg
jge
xchg
mov
cld
push
push
push
test
jbe
sub
adc
cmpsb
outsb
sub
leave
push
cmp
xchg
lcall
aam
adc
cmp
inc
xor
test
movsl
push
adc
sahf
repz
fadd
xor
xchg
test
xchg
std
xchg
xchg
mov
lock
cld
mull
mov
and
das
mov
cwtl
xchg
and
mov
test
shr
mov
iret
add
popf
sub
lcall
xchg
in
lcall
sbb
mov
sbb
mov
stc
sbb
mov
sub
outsl
jno
lods
add
int
push
pop
loopne
mov
fisttps
xchg
aad
popf
mov
repz
ljmp
add
add
inc
push
cmc
and
push
roll
sbb
jmp
in
insb
inc
ret
mov
fists
dec
add
int
aad
cmp
lret
andl
fs
add
push
xor
shl
and
xchg
repnz
in
es
cmp
push
les
addr16
xor
aad
or
orl
push
test
mov
add
scas
mov
inc
test
mov
jnp
mov
out
mov
loope
gs
xchg
cmp
imul
or
loope
shll
notl
out
xchg
cmp
ja
mov
lcall
push
imul
cmp
stos
jns
or
ja
xchg
pop
cmp
jecxz
fnstcw
dec
lods
mov
pop
jne
jmp
insb
pushl
mov
push
adc
imul
xor
and
push
aad
mov
mul
pop
push
les
gs
jno
jge
outsb
out
xchg
fld
loop
and
mov
sbbb
iret
jp
add
shrb
add
sub
mov
in
mov
add
test
push
dec
push
pop
mov
ja
adcb
and
mov
nop
hlt
fsubrs
ror
jne
xchg
roll
in
sbb
xchg
mov
inc
or
push
push
arpl
ja
lcall
call
call
and
adc
mov
mov
or
jge
push
jno
sbb
in
xchg
or
sub
insb
mov
adc
mov
pushf
sub
pop
clc
insl
cmc
iret
mov
sbb
jg
test
jae
arpl
mov
ss
test
dec
jl
enter
popa
mov
insb
xor
jg
and
rcr
adc
jae
les
test
or
and
adc
and
fidivl
mov
mov
outsb
push
push
fsts
and
rcrl
push
or
ja
test
pop
addl
lods
fistpl
xchg
and
enter
mov
outsl
int3
es
lock
cmp
dec
pop
sub
add
lods
cltd
jp
les
jge
sti
push
or
stos
loopne
lea
pop
bound
loope
xchg
mov
mov
pop
js
mov
inc
or
adc
test
ret
dec
pop
out
call
cmp
jo
stos
aam
xor
gs
push
repz
imul
inc
ljmp
xchg
stc
and
cld
jb
out
pop
mov
imul
in
out
xchg
xor
xchg
pop
dec
imul
data16
stc
cmp
adc
jne
mov
out
xor
fmuls
push
xchg
add
dec
xor
repz
sub
lods
pusha
mul
xor
cmp
push
cmc
inc
inc
lds
ficompl
push
in
sub
jb
out
js
adc
sbb
xchg
jmp
mov
out
ss
cmp
cmc
or
iret
xlat
xchg
mov
shlb
and
sbb
add
lahf
dec
mov
and
divb
mov
stos
into
dec
mov
jl
out
mov
call
or
pushf
mov
cmp
scas
adc
bound
mov
jnp
pop
push
ficomps
add
or
jg
cwtl
stc
arpl
je
inc
fsubrl
add
leave
adc
push
out
or
cmp
xlat
popfw
xor
dec
or
xlat
add
or
push
test
inc
inc
out
pop
mov
clc
in
mov
lcall
pop
cmpsl
adc
std
xlat
in
or
xchg
dec
inc
mov
test
insl
enter
sub
in
aas
test
xchg
lods
fwait
xchg
pop
cmp
in
shll
in
add
iret
test
dec
test
lods
into
mov
add
cmp
sbb
inc
inc
pop
lock
mov
fimull
xchg
xor
push
sub
cli
cwtl
push
loopne
mov
push
add
mov
push
adc
cmp
sarb
xorb
loop
xchg
ja
xor
mov
insb
add
test
setae
stos
lret
mov
mov
cwtl
shll
pop
mov
fwait
inc
hlt
inc
stc
test
pop
cmc
sub
fs
adc
lock
jb
loope
sahf
icebp
out
push
mov
faddl
in
cmpsl
push
into
cltd
push
out
cmpsb
adc
test
cmc
inc
inc
cmp
fmul
lods
pop
fwait
adc
sbb
inc
sti
add
fs
add
xchg
ljmpw
fistpll
cli
xchg
leave
mov
push
pmuludq
push
adc
mov
mov
bound
insb
push
jmp
mov
lods
ret
inc
sbb
sub
cmp
inc
add
dec
add
adc
xchg
arpl
mov
push
nop
int
jne
mov
iret
imul
xor
aad
push
push
ja
push
and
mov
mov
mov
shl
cltd
call
jnp
test
es
xchg
mov
xchg
out
pop
js
inc
cmpsl
dec
pop
fisubrs
xlat
push
clc
push
decb
cmc
fisttps
xlat
in
dec
mov
movsb
movsb
fildll
mov
loopne
rcll
ds
fistpl
sahf
xchg
fsubs
jno
out
or
sbb
rclb
cmp
iret
into
pop
imul
mov
call
enter
jmp
pop
adc
sbb
daa
ljmp
and
fdivr
xor
icebp
fidivs
mov
mov
cmp
sahf
xchg
in
je
shl
aad
lret
loop
mov
movl
enter
dec
arpl
dec
movsb
push
sub
sub
sub
sub
jl
mov
int3
dec
add
call
stos
push
sbb
mov
pop
cld
loop
adc
test
ds
sahf
fs
sub
popa
sub
test
cmp
test
mov
sub
pop
push
inc
out
popa
cli
and
out
pusha
push
mov
stc
jo
mov
push
sbb
test
pop
lock
push
dec
or
inc
add
bnd
push
lods
sub
dec
pusha
mov
mov
push
jmp
sbb
pushf
outsb
fdivrs
or
jle
stc
sub
pushf
ds
add
xor
test
adc
dec
mov
dec
cmpsb
sub
fmulp
incb
gs
adc
out
ret
adc
cli
add
dec
push
mov
dec
push
imul
cmp
xor
sbb
and
in
daa
inc
repz
lcall
push
xor
test
sbb
in
bound
pop
mov
popf
add
push
into
std
cmp
sbb
gs
sub
sbb
push
push
jno
dec
xchg
cmpb
inc
jp
sbb
mov
inc
sub
sub
sahf
cmp
in
mov
nop
stos
loop
repz
das
xchg
pop
stc
leave
add
data16
fnstcw
in
loop
call
or
jbe
sbb
xchg
jle
dec
dec
pop
sbb
xor
mov
jne
sti
cmp
leave
gs
in
mov
fldcw
in
imul
dec
mov
and
mov
in
pushf
xchg
push
ljmp
fs
or
sbb
outsb
adc
stc
mov
xchg
sub
inc
jnp
divl
les
mov
arpl
mov
rorl
push
icebp
xlat
ss
sbb
pop
fst
mull
and
xorl
inc
or
push
test
mov
test
ja
daa
movsb
lcall
cmp
sub
daa
dec
cmp
scas
call
scas
push
mov
inc
es
mov
mov
and
push
fstpt
add
data16
push
cmpl
mov
add
loop
jle
rol
jbe
dec
jg
es
lds
mov
mov
push
mov
pop
sub
jge
int3
test
xchg
clc
and
pop
mov
cmp
dec
data16
add
cltd
xor
icebp
lcall
sub
outsl
stos
sub
xchg
xchg
cwtl
xor
mov
adc
sub
subb
inc
mov
call
mov
push
and
les
andb
pop
jecxz
cltd
cmc
or
sbb
cli
test
sub
add
lahf
pop
rcrb
fdivrs
jp
enter
push
push
pusha
je
mov
mov
pop
dec
in
nop
xor
psubq
add
stos
inc
lods
sub
sahf
xchg
pop
lods
out
jle
arpl
jb
jecxz
and
and
jl
adc
xor
fcomps
adc
lret
lret
xchg
ja
jo
cmp
adc
and
pop
outsb
stos
and
and
andb
inc
pop
cmp
add
bound
mov
or
push
xchg
insb
adc
mov
inc
icebp
imul
sbbl
mov
das
pop
scas
cs
enter
inc
das
or
in
sahf
loopne
stos
mov
xor
in
ja
add
cmc
jae
popf
and
shll
loopne
lea
xchg
cmpsb
push
jp
sbb
mulb
cltd
inc
adc
loop
test
pop
scas
add
push
add
dec
imul
jecxz
outsb
ss
in
mov
sbb
insl
lods
sbb
and
jmp
push
leave
jno
leave
xchg
push
iret
inc
rorl
xor
les
lret
mov
out
sbb
leavew
fstl
sub
mov
ret
idivl
xor
mov
je
xor
cmp
cvtps2pd
call
sub
fisubl
mov
inc
push
roll
xchg
sub
hlt
lret
cmp
inc
shlb
subl
pushl
fbld
xchg
xchg
int3
imul
rorb
in
push
aad
mov
insl
das
add
xchg
test
xchg
lret
sbb
or
cmpsb
and
and
dec
mov
or
jbe
jl
loope
jmp
test
mov
xor
pop
outsb
pop
inc
and
sbb
sub
ret
dec
sbb
pop
mov
or
add
sub
push
sbb
test
push
gs
imul
or
ret
pop
in
xchg
mov
push
jne
xlat
sti
xchg
movsb
imul
push
jl
mov
inc
push
jb
fstps
jno
jne
cmpsl
mov
gs
loope
std
stc
enter
leave
out
sbb
jae
sbb
lock
xchg
push
repz
add
xchg
cmp
mov
sbbb
fadd
xchg
sub
mov
inc
out
mov
popa
lea
mov
mov
push
lock
fcomip
js,pn
movsb
lret
add
rorb
lods
push
cmp
decb
jg
pop
iret
pusha
pop
inc
sbb
cmp
sub
push
cmpsb
out
pop
adc
lret
push
lret
xchg
mov
cmp
pop
ja
fdivs
jo
test
push
jl
scas
gs
push
sti
aas
mov
aas
int
sbb
rcr
movups
jno
loopne
pop
jns
xchg
out
jg
and
pop
jb
pushf
lahf
call
daa
gs
data16
je
adc
fs
popa
jbe
xchg
or
lcall
sub
mov
out
mov
cmp
pop
jae
xor
fcmovnb
lcall
push
int
lahf
push
pop
cmp
test
xor
sbb
popf
jl
adc
dec
push
sti
pop
push
mov
push
stos
daa
test
movl
subb
lock
fisttpl
cmp
push
ds
push
call
mov
aaa
xor
and
bound
lods
pop
push
lods
mov
gs
scas
jg
rorl
push
xor
test
mov
mov
inc
out
add
or
and
ds
sbb
mov
pop
mov
outsl
pusha
or
mov
lret
pop
xor
mull
jnp
jo
xchg
cmpsb
into
pop
cltd
xlat
pop
push
notl
mov
into
testl
pop
xchg
cltd
add
or
sbb
in
and
add
push
xor
insl
mov
sbb
mov
push
mov
in
dec
or
inc
inc
push
sbb
int
loope
pop
push
xchg
push
shlb
jno
movsb
add
pop
push
xchg
mov
cmp
mov
fldcw
sub
in
outsb
mov
cmpsl
mov
shll
sbb
dec
sub
mov
test
icebp
shl
repz
in
ss
repnz
int
test
sub
adc
mov
sbb
push
push
inc
int3
and
cmpsb
icebp
mov
les
das
repz
dec
mov
pop
add
roll
das
push
mov
ss
pusha
cmpsl
loop
dec
mov
and
cmp
aam
inc
sub
pop
loopne
mov
xor
dec
mov
lahf
fisttpl
xchg
and
mov
popf
mov
sub
mov
inc
pop
xor
bound
mov
push
ret
adc
es
shll
jne,pt
call
int
outsl
fdivrp
test
cmpb
xchg
fmull
imull
or
sub
adc
ret
cli
jl
std
pop
movsl
clc
in
push
stos
cmp
dec
sbb
imul
sahf
scas
nop
cmpsb
fdivl
shll
scas
sbb
pop
cmp
jle
pop
cmp
lret
mov
xchg
add
movsb
xor
sub
ljmp
scas
xchg
or
clc
cmp
out
loopne
sbb
push
popa
in
sbb
gs
lret
mov
sub
add
jbe
fwait
stos
xor
mov
pop
mov
outsl
mov
jno
stos
jg
xor
pop
outsl
shll
pop
sub
add
and
insl
push
dec
adc
mov
jno
loope
pop
sub
ret
into
or
out
in
inc
sbb
xor
inc
pop
imul
add
jge
scas
rorl
sub
pop
mov
dec
fisttps
mov
cmc
mov
in
mov
popf
dec
popf
jns
push
inc
mov
cld
cmc
xchg
xor
mov
jo
outsl
xchg
pop
dec
lret
mov
stos
jle
pop
mov
mov
xorl
pop
or
add
inc
lret
cmc
lock
inc
inc
andb
push
mov
call
rcl
div
inc
cmpsl
icebp
xor
mov
inc
lret
mov
test
subl
lods
rep
push
in
dec
leave
dec
fildl
rolb
pusha
lahf
popf
pop
cmpsl
and
or
divps
pop
pop
adc
adcb
mov
movsl
scas
push
cmp
xchg
xor
out
bound
test
sub
orl
imul
xchg
cmpsb
stos
pop
xchg
or
or
mov
mov
mov
and
push
lock
mov
nop
sub
cs
rolb
xchg
aad
mov
sbb
ljmp
sub
gs
xor
pop
pop
push
sbb
test
adc
cli
push
add
popa
cltd
aaa
mov
fiadds
lret
and
xchg
test
adc
pop
out
push
pop
scas
push
scas
adc
rorb
es
pop
cmp
movsl
inc
fnstenv
and
inc
sub
jg
shrb
lahf
std
mov
mov
mov
xlat
dec
dec
sbb
push
sti
adc
xorb
mov
or
inc
lret
in
fwait
push
gs
mov
mov
out
movsl
cmp
xchg
sub
int3
xchg
je
mov
aaa
sbb
lock
fucomip
bound
fimuls
test
mov
mov
mov
sbb
scas
or
rclb
imul
and
mov
mov
pop
and
mov
into
sar
cmpsl
push
or
inc
push
push
in
dec
or
or
loope,pt
cs
test
aad
xchg
seto
testl
ss
dec
in
cmp
scas
loope
xchg
cld
and
mov
xor
lods
mov
fsubs
popf
sub
mov
ja
adc
add
ja
dec
pop
lcall
lods
inc
mov
mov
sub
mov
arpl
arpl
std
mov
rorb
lahf
pop
mov
stc
push
adc
mov
cmpsl
inc
add
sbb
xchg
fldcw
and
pushl
mov
mov
jns
inc
dec
jns
int
add
mov
les
xchg
inc
lds
jo
lds
in
popa
or
inc
fisttpll
add
test
mov
insl
fstl
test
aam
push
mov
pop
test
mov
out
push
in
les
dec
pusha
ja
popa
cbtw
clc
in
shrl
jl
xor
mov
shrb
mov
into
adc
inc
addl
sbb
adc
loope
jae,pt
repz
dec
jmp
sahf
add
test
loop
int
lret
cmpsb
inc
ret
sub
pop
xchg
enter
pop
imul
mov
jno
sub
icebp
sub
xor
jb
sbbb
mov
adc
mov
inc
and
and
adc
pop
pusha
movsl
push
pop
adc
cmpsb
mov
fisubs
jo
std
jbe
dec
jmp
push
inc
xlat
pop
pushf
lods
aam
cmp
and
testl
mov
push
fwait
adc
sub
nop
dec
mov
pusha
inc
inc
sub
in
mov
dec
pop
pop
je
sub
jno
jo
enter
mov
jnp
pop
fwait
out
push
mov
cmp
dec
add
lods
ret
fbld
aam
ret
gs
ja
inc
cli
jb
jo
pop
jb
mov
fstps
out
lret
lret
xchg
mull
xchg
notl
sbb
mov
fcomp
and
xor
adc
pop
in
shrb
add
jp
xchg
xor
add
xchg
adc
sub
ret
repnz
sub
sahf
cs
test
inc
leave
and
fsubr
and
pop
push
pop
inc
aad
add
imul
jb
add
mov
or
cmp
jmp
jae
lods
outsl
inc
cli
mov
xlat
stos
decl
mov
aam
jb
and
dec
iret
bound
xchg
movsb
cwtl
xchg
jg
mov
in
xchg
cmpsl
movsl
push
push
arpl
xor
fisubrl
bound
cld
sbb
push
fistl
ffreep
sbb
fbstp
aaa
mov
sub
mov
jo
or
inc
into
pop
and
mov
fldenv
jle
pop
out
jb
notl
outsb
and
stos
push
out
lods
test
fbld
addr16
cmpsl
jne
adcl
cmpsb
call
in
les
inc
into
cmc
and
pop
mov
xchg
push
jae
lcall
and
lret
arpl
dec
dec
subb
push
out
pop
jns
adc
out
mov
shr
fcompl
push
dec
dec
pop
cmp
mov
push
inc
push
popl
std
ret
loop,pn
pop
stc
out
repnz
dec
aam
loopne
scas
daa
inc
sbb
jnp
xor
and
subl
xor
and
lods
sub
sub
js
lds
mov
pop
fisubs
mov
xor
jp
les
sbbb
out
pop
sbb
leave
sub
enter
icebp
add
in
jne
cmp
cltd
push
out
xor
je
rcll
shlb
addr16
in
and
mov
mov
outsl
mov
jne
out
dec
repnz
testl
aas
dec
dec
arpl
xchg
lock
mov
lcall
sbb
aas
dec
cmp
lcall
jne
ficoms
push
pusha
jnp
cld
inc
add
inc
push
int3
jle
icebp
mov
sub
inc
pop
dec
add
dec
cmp
cmp
mov
dec
bound
jmp
inc
xor
push
insb
ds
adc
aam
add
mov
cmp
xchg
jno
clc
sub
pushf
dec
pop
xchg
popa
loope
cmpsl
jb
push
adc
jle
mov
out
clc
iret
stos
test
into
lods
shll
jnp
popf
inc
adc
mov
movsl
aad
es
cld
pop
pop
mov
pop
xchg
sub
adc
xchg
pop
lods
std
sub
or
lea
mov
cwtl
call
jecxz
lock
jg
mov
sti
xchg
jae
cmp
lea
jl
xor
jl
adc
insb
mov
bound
add
mov
push
cwtl
jmp
pop
repnz
lds
pusha
push
stc
jb
nop
or
or
fidivl
xchg
imul
sub
cmp
movsb
aas
xchg
in
add
out
ja
sub
in
lahf
test
mov
add
xchg
cmc
in
filds
push
add
std
push
cltd
add
jo
sub
xchg
xor
cmpsb
out
adc
cmp
pop
and
fstpt
mov
ret
mov
or
mov
xchg
test
imul
inc
pushf
imul
sbb
xchg
mov
xlat
xlat
lret
and
ljmp
shr
or
jo
inc
sbb
out
mov
cltd
jle
add
or
cli
jmp
gs
mov
ja
adc
and
mov
pushf
mov
flds
or
in
inc
xchg
inc
iret
inc
fwait
jae
mov
aas
aaa
inc
push
cmpsb
jae
das
arpl
dec
add
andb
arpl
add
mov
lds
and
mov
dec
outsl
adc
mov
mov
sub
in
inc
xchg
mov
dec
adc
dec
push
fwait
push
pop
jp
xor
mul
enter
pop
mov
sti
cwtl
mov
xchg
cmpsb
rcrl
imul
jle
lock
mov
dec
icebp
adc
mov
sub
sub
cmp
ds
sbb
add
pop
es
loopne
scas
cmp
int3
loope
mov
mov
and
push
xor
shl
ja
mov
out
cmpsb
loope
mov
stos
mov
xchg
dec
sub
fbld
sub
aam
icebp
popf
or
sbb
jge
dec
xlat
push
or
sbb
jne
in
or
adc
ja
rcrl
data16
fstl
push
jbe
pop
mov
jge
loope
mov
lret
mov
ret
fs
dec
push
sub
push
ficoml
rcll
mov
inc
xchg
testb
jmp
jae
je
mov
mov
push
adc
cmpsb
mov
andl
pushf
mov
into
imul
xor
test
push
inc
enter
xchg
sub
in
insl
adc
icebp
add
test
sbb
inc
sbb
pop
mov
les
popa
fcoms
jecxz
pusha
sbb
inc
leave
fisubrs
test
inc
push
jg
int3
fstp
push
mov
or
sub
cmp
push
adc
push
lahf
push
mov
incl
into
jl
fstl
out
push
iret
out
sbb
ja
fistpll
out
mov
daa
pop
jle
addr16
and
pop
negb
fnstcw
adc
mov
lcall
and
cmpsb
adc
mov
es
xor
adc
mov
push
pop
lds
inc
lods
dec
sub
iret
or
incb
xlat
shrb
cs
cs
cmpsl
repnz
das
rorb
adc
cmpl
adc
sbb
xlat
shlb
aam
xor
fists
jge
in
add
jno
lods
adc
movsb
push
cmp
mov
adc
xor
push
sub
fidivrs
add
push
sub
pop
mov
jmp
xchg
fbld
cmp
push
test
jle
jb
pushf
push
sbb
mov
adc
xchg
jle
sbb
inc
xor
mov
shr
and
mov
aaa
std
dec
sti
pop
arpl
movl
addr16
xor
bound
lock
mov
int3
pop
enter
fldenv
push
int
lcall
orb
scas
mov
rcll
mov
mov
pop
rorl
stc
add
imul
pushf
and
jae
cld
and
fdivr
inc
pushf
icebp
in
fisubrl
mov
pushf
sub
loope
mov
xor
sbb
rcll
push
je
sbb
adc
ss
jae
out
mov
popf
dec
rorl
das
imul
ss
fistl
sub
xchg
test
inc
xchg
lods
es
xor
icebp
call
subl
stos
mov
cwtl
arpl
out
aas
in
xchg
inc
fnstcw
mov
add
shrl
or
idiv
insb
dec
mov
adc
scas
in
cwtl
lods
out
jecxz
lret
mov
fwait
push
cs
lcall
push
xchg
mov
push
ret
test
mov
inc
jg
jne
jg
ss
jo
lahf
mov
inc
stos
push
add
cmpsb
mov
mov
mov
inc
imul
out
jo
mov
loope
gs
loope
jecxz
push
xor
pop
aad
push
rcll
insb
fnsave
adc
mov
divl
clc
pushf
mov
cmc
cmp
std
adc
dec
adc
dec
push
rcrb
xor
mov
push
jae
mov
f2xm1
into
nop
and
jbe
je
jle
cs
hlt
xchg
das
cmp
sbb
mov
lods
loopne
xchg
movsl
addr16
in
sbb
bound
les
loope
lahf
aas
mov
shl
push
pop
test
inc
or
push
inc
loopne
push
js
sahf
cwtl
neg
inc
push
shl
arpl
mov
pop
inc
jle
cmp
and
clc
aad
cmc
rorl
cmpsl
sub
xlat
test
jl
xor
stc
xchg
mov
xchg
cmpsl
sbb
pop
mov
xchg
pusha
push
dec
mov
jge
mov
pop
shr
jp
sarb
into
adc
xchg
add
sbb
sbb
add
sbb
std
add
ret
pop
ja
test
jecxz
mov
inc
adc
in
test
add
adc
stc
daa
clc
ss
arpl
inc
aaa
fcoms
mov
nop
xor
popf
cmp
loope
mov
mov
cmp
iret
mov
data16
push
test
bound
xor
xor
mov
pop
mov
push
jnp
repz
outsb
or
pop
lahf
aad
insl
clc
out
fst
lahf
shrl
pop
add
cltd
fildll
movups
sbb
int3
in
rolb
add
lcall
xor
pop
adc
repz
xor
adc
adc
hlt
fadds
jne
inc
mov
fidivrl
in
pop
lea
int3
mov
lahf
xor
scas
pop
mov
mov
pop
adc
test
sar
xchg
sub
dec
pop
mov
pop
and
imul
cmpsb
hlt
jno
daa
mov
rcrb
push
lock
cmp
pop
cmpsl
xor
or
push
lock
test
push
or
aam
cs
jb
dec
adc
iret
or
xor
les
xchg
scas
mov
push
jbe
xchg
pop
test
into
lahf
jl
add
mov
add
fsubrl
cmp
adc
dec
andb
mov
je
mov
adc
lahf
mov
fcmovnbe
pop
dec
adc
mov
adc
mov
stc
fldl
xor
push
push
subl
add
add
xor
daa
or
mov
cmp
dec
cmpsb
jne
lcall
push
cmova
jle
fnstcw
mov
jns
ss
push
aam
int
stos
jb
xor
inc
insl
ret
test
inc
in
jno
mov
mov
repz
add
sbb
aas
dec
mov
fsubrp
out
bound
xor
shl
test
test
jecxz
rcrb
fcoml
mull
int3
outsl
mov
movaps
imul
into
lret
std
xchg
jns
mov
insl
stc
jne
into
cld
icebp
aam
ss
jo
inc
cmp
jge
push
xlat
test
arpl
inc
push
jmp
jae
icebp
xchg
mov
push
sub
scas
or
lea
aam
add
in
or
push
lods
mov
adc
sbb
outsb
jmp
sbb
daa
in
push
je
jae
mov
xchg
xchg
das
lods
bound
in
cmp
imul
mov
mov
sub
push
dec
pop
and
xor
ror
jne
popa
inc
sub
add
adc
mov
mov
ret
or
push
mov
adc
movsb
sbb
and
clc
fidivs
stos
pop
mov
push
jge
jae
jns
stos
lret
or
sub
add
jg
xchg
jno
fwait
add
jae
jg
or
cmp
or
or
addr16
and
jge
mov
dec
mov
xor
nop
mov
mov
scas
push
rcll
mov
roll
push
cmc
push
mov
mov
cmpsl
and
fistpll
dec
adc
jnp
dec
pop
popa
sbbb
dec
cmp
push
or
movups
in
push
movsb
icebp
loop
or
rcll
mov
xor
imul
or
mov
jne
nop
mov
push
shrl
jg
add
lahf
cmp
push
insl
push
push
push
jo
lcall
gs
leave
cmp
push
jno
xlat
mov
addr16
add
movsl
stos
leave
push
in
insb
xor
aam
out
je
sti
sbbl
in
int3
insb
ret
push
shlb
and
aaa
les
outsl
gs
sub
sub
pop
aad
jno
gs
movsl
jo
rorb
test
stc
cmp
pop
pop
testl
cmp
cs
insb
inc
cmpsb
daa
nop
xor
out
insb
addr16
sbb
push
fcmovbe
nop
int
add
pop
add
stos
jne
xchg
inc
movsl
push
les
cmp
imul
lcall
mov
sbb
in
mov
es
jmp
xchg
xlat
mov
mov
arpl
sbb
push
mov
push
or
pop
pop
insb
or
lods
inc
dec
fcmovu
in
sub
rcrl
cmp
jg
push
mov
in
int3
cli
dec
add
jg
subl
rcl
rorl
adc
lock
push
inc
inc
clc
in
push
push
mov
sbb
outsb
ja
and
pop
jp
fiaddl
dec
sbb
xchg
push
leave
out
push
add
xor
or
jecxz
xchg
lcall
sbb
gs
test
xchg
test
adc
out
in
outsl
add
clc
dec
test
call
lcall
int3
sahf
dec
out
outsl
rcr
cmp
xor
fidivs
imul
hlt
into
mul
mov
inc
shll
mov
jbe
and
cmpsb
es
int
pop
mov
inc
push
jnp
mov
dec
xor
minps
and
add
lds
inc
test
movsb
jbe
add
cmp
ljmp
std
mov
imul
or
mov
enter
xchg
and
inc
dec
lahf
mov
jno
cld
and
jg
jp
pusha
scas
or
lahf
dec
lods
push
jne
push
mov
into
je
sahf
sbb
out
add
jecxz
push
push
out
imul
loope
out
add
ret
xor
out
in
adc
movsl
cwtd
add
int
mov
cmpsl
orb
xchg
fwait
cmpsl
mov
scas
imul
xchg
jb
push
test
xchg
xchg
inc
adc
fisubl
cmp
xor
pop
pushf
shll
push
push
jle
aaa
mov
inc
stos
dec
fdivrs
mov
inc
mov
adc
cmp
pushf
xchg
ret
mov
push
push
cltd
dec
je
aas
xlat
les
adc
dec
shlb
sub
lods
pop
jb
sub
mov
lods
lret
lahf
stos
cmp
push
es
aaa
push
jge
mov
inc
outsl
or
push
and
xchg
hlt
std
nop
mov
xchg
lock
sbbl
into
push
ret
dec
cmp
fmul
loop
and
mov
daa
inc
jecxz
cmp
dec
sub
in
imul
out
pop
inc
popa
pop
fmull
cs
and
addr16
daa
rclb
inc
mov
sbb
movsb
cmp
cmp
mov
hlt
sub
mov
nop
out
cmpsb
orl
jle
insl
clc
mov
sbb
std
pop
mov
jg
movsl
outsl
negb
pop
shl
and
pop
mov
push
sbb
add
inc
rorb
inc
mov
xor
ret
push
inc
push
loope
inc
stos
add
push
leave
mov
mov
or
xchg
mov
sbb
aad
imul
sub
mov
jp
sub
and
add
loopne
pmaxub
dec
sbb
inc
stc
enter
mov
jns
stc
mov
inc
xchg
mov
xchg
mov
push
push
stos
xor
int3
push
jp
ss
fs
out
fisttpll
push
and
cmp
into
sbb
or
in
jno
hlt
cmp
leave
mov
pop
adc
das
push
mov
jmp
push
jnp
cmpsl
scas
in
int
push
cltd
movb
jp
mov
push
push
mov
xor
fwait
and
inc
lods
sahf
mov
ja
xchg
mov
sbb
icebp
test
mov
xchg
shlb
imul
cmp
inc
aas
cmpsl
jge
and
es
inc
shll
out
pop
test
and
and
push
cmp
stc
jne
sub
push
mov
lods
outsb
jns
fimull
jmp
stos
dec
test
cmp
sub
push
jge
sub
sbb
jl
inc
mov
sahf
lock
or
out
ja
je
loope
ljmp
push
sbb
or
scas
leave
cmp
aas
movl
xchg
adc
cwtl
cli
or
cwtl
ret
iret
arpl
stc
push
stos
push
cmpsb
bound
dec
mov
xchg
mov
add
pop
dec
xchg
ss
push
je
pop
inc
push
cmp
in
aad
mov
jmp
lret
daa
mov
notb
push
fadds
mov
js
sub
jns
outsl
mov
pop
addb
cs
rcl
or
xlat
fiadds
cltd
mov
jns
sbb
add
adc
push
jns
in
dec
or
ljmp
jl
jge
sbb
jp
loope
mov
cmp
daa
ret
outsl
adc
mov
add
popa
adc
hlt
repnz
xor
xor
push
push
aaa
repz
popf
pop
sbb
ljmp
faddl
dec
loopne
sbb
mov
mov
pop
inc
mov
dec
pop
jge
into
jecxz
out
mov
orl
xorl
pop
rcrl
or
sarb
out
sub
mov
inc
stc
fidivs
loope
add
lock
in
or
jecxz
xor
sub
pop
pop
or
cmp
jns
mov
add
push
xor
pop
or
add
add
sbb
movsb
sbb
push
out
sbb
shrb
mov
push
adc
sbb
movb
out
push
jb
sbb
sub
mul
mov
popl
dec
and
pop
inc
add
mov
enter
xor
fstps
xor
in
ljmp
jno
add
add
or
jb
mov
out
and
outsl
cli
mov
inc
mov
loopne
jb
adc
sbb
scas
imul
cwtl
xchg
pop
xchg
pop
lcall
xchg
mov
xchg
or
daa
das
jp
mov
pop
cmpsb
or
packssdw
popf
lret
or
xor
mov
dec
fldcw
mov
fisttpl
fisttpl
int
push
int
fadd
inc
sbb
call
push
in
dec
scas
mov
xchg
outsl
cmpsb
adc
incl
adc
dec
fmul
mov
mov
mov
cwtl
cmp
roll
and
add
push
iret
outsb
pop
aam
xlat
sbb
jnp
nop
cwtl
mov
push
lea
dec
bound
sub
mov
inc
lea
icebp
ljmp
flds
int
sbb
mov
mov
and
out
js
mov
mov
es
test
das
sbb
xchg
mov
mov
fisttps
xchg
lods
lods
ss
mov
mov
push
call
jb
inc
loopne
fcomps
cmpsl
jle
add
cmpb
test
pop
bound
or
mov
aaa
jne
inc
psubd
mov
repz
test
xchg
mov
xchg
and
cmp
sbb
mov
push
cltd
xchg
lret
cmp
loope
add
sti
mov
lret
pop
push
fisttpl
dec
fdivrl
pusha
or
add
xor
shrb
adc
and
pop
or
idivb
cwtl
enter
jo
repnz
cmp
imul
sti
cmp
clc
lds
push
mov
sub
pop
mov
mov
fbld
push
outsl
mov
popf
mov
dec
dec
fstpt
mov
loope
movsl
sbb
jecxz
or
pop
jns
xor
adc
mov
into
and
inc
lret
lea
sub
inc
inc
ljmp
sti
bound
adc
lea
shlb
imul
ds
imul
fistpl
stc
pop
push
add
push
xchg
push
scas
stos
and
fdivl
fcomps
cmpsl
cmp
divb
int3
int
add
rolb
push
pop
insl
mov
test
cwtl
inc
sub
jns
mov
cmp
sbb
adc
xchg
fisubl
push
push
div
cli
bound
xor
pop
repz
pop
imul
outsl
xchg
popa
inc
mov
mov
fdivrs
mov
mov
movsl
sub
fisubs
std
cld
imul
mov
xchg
repnz
adc
mov
xlat
jle
aas
inc
inc
cld
or
ror
sbb
and
in
pop
orb
fistpl
jne
outsb
pushf
jge
inc
and
xchg
dec
lods
arpl
loop
loopne
fwait
jge
push
xor
ljmp
out
sarb
repz
clc
push
xchg
repnz
movsl
mov
mov
push
mov
xor
cmp
imul
push
xchg
sbb
cmp
and
aaa
fucomi
push
mov
rcl
mov
push
lods
es
xchg
jnp
test
lods
clc
pop
mov
inc
cli
sbb
ljmp
fld
femms
cld
stos
pop
mov
fisubrl
cmpsb
sub
bound
push
push
fmull
repnz
out
mov
sub
jl
pop
inc
sub
xchg
cmp
sub
sarb
add
aas
cs
jne
inc
movsb
mov
mov
mov
push
push
fnclex
adc
test
sub
sub
repnz
shl
or
pop
xlat
and
push
xchg
pop
rclb
adcl
fcom
lahf
scas
sub
jg
sbbb
dec
pusha
push
inc
flds
in
sub
sbb
mov
mov
mov
push
gs
insl
nop
cmp
and
pop
mull
push
xor
push
jo
sbb
int3
hlt
inc
cld
stc
push
pop
outsl
mov
dec
dec
roll
xchg
arpl
cmc
ja
lods
xor
ss
push
push
das
jecxz
in
iret
stc
mov
dec
ljmp
push
mov
shll
rcrl
inc
rcl
fcompl
inc
sub
xor
sub
stos
lahf
nop
enter
mov
gs
popa
into
cmp
jmp
or
and
jmp
fwait
add
subl
out
repz
mov
sub
mov
fsub
movsl
popf
sub
xchg
or
sbb
jns
and
in
pop
nop
int3
jbe
mov
sbb
xlat
pop
pop
fcmovnbe
in
outsb
fldt
inc
push
stc
sbb
push
ja
arpl
aaa
lahf
jp
gs
int3
loope
xor
bound
sbb
xchg
add
loope
outsl
mov
test
idivb
jmp
hlt
imul
popa
shlb
mov
push
pop
jbe
push
scas
jno
daa
mov
sub
xchg
sub
mov
cmpsl
ret
jmp
pop
add
xchg
xchg
scas
sub
in
mov
fnstcw
add
mov
inc
mov
cmpsb
adc
cmp
dec
push
inc
sahf
bound
jns
sbb
shll
and
stos
sbb
or
testl
cmp
incb
jns
sarb
mov
testl
roll
push
xor
inc
inc
outsl
rolb
xchg
mov
out
dec
bound
or
adc
je
aad
loopne
lds
mov
cmp
test
push
cmp
out
inc
mov
rcrb
lcall
notb
lcall
jecxz
xchg
sbbl
inc
cltd
mov
bound
jo
aas
xor
and
xchg
pop
outsl
call
loope
bnd
lret
mov
aam
in
push
pop
sub
push
inc
stos
xchg
fmuls
push
int
sub
add
sub
push
out
sub
mov
inc
popa
dec
hlt
fiadds
dec
or
xor
aam
shrb
fwait
pop
push
push
jp
sbb
out
mov
adc
push
jge
add
fisttpll
and
adc
lea
lcall
jp
icebp
push
mov
sbb
pop
movsl
ret
adc
js
out
or
jle
rep
mulb
jl
push
push
adc
imul
inc
mov
stos
mov
stos
pop
pop
or
lds
fists
mov
fwait
pop
fnstcw
cmc
jp
sarl
pop
xchg
push
stos
outsb
xor
cwtl
test
push
mov
mov
dec
mov
pop
ja
cwtl
mov
jmp
adc
push
xchg
sub
push
cmp
mov
lret
mov
fwait
jg
add
adc
adc
aaa
mov
adc
mov
xchg
iret
mov
xor
fwait
mov
adc
fistps
rcrb
adc
jnp
pop
and
fists
sti
sbb
xor
insl
jle
aad
std
mov
pop
mov
imul
vorps
mov
inc
push
outsl
sahf
and
push
je
add
and
fidivs
in
sbb
push
std
aas
cmp
add
test
dec
and
and
insb
int
stos
mov
int3
dec
dec
aaa
jmp
push
mov
sbb
jmp
inc
or
pop
mov
mov
pusha
aas
jno
pop
repnz
jbe
mov
adc
push
out
stos
inc
push
cmc
lret
das
inc
inc
add
fildl
shr
jns
sbb
adc
mov
jne
stc
aam
loope
sub
stos
fs
pop
daa
pop
pop
sub
xor
out
je
push
sub
mov
and
loopne
cltd
out
pop
aam
push
push
cmp
aad
fdivr
mov
je
push
insb
or
push
mov
loope
cmp
or
out
scas
cmc
push
push
push
cltd
sahf
hlt
cltd
shrb
rorl
fistpl
ret
and
aaa
adc
add
dec
cmpb
outsl
rcll
jns
jg
imul
nop
lea
fiadds
addr16
xor
call
nop
push
mov
lret
rorb
pop
in
ds
xchg
add
add
sarb
adcl
sub
push
loopne
lret
mov
xchg
je
sbb
test
scas
leave
pushf
add
mov
adc
fisttps
xchg
leave
shl
rcrb
adc
inc
pop
push
ret
pop
sub
jge
sbb
push
dec
jns
outsb
pop
mov
out
inc
notb
lret
data16
addl
mov
fsubrs
mov
sti
adc
fs
into
dec
bswap
lds
imul
push
sub
cmp
mov
xchg
icebp
sbb
cwtl
out
pop
ret
out
loope
pop
out
shll
xchg
inc
push
push
outsl
inc
mov
mulb
inc
inc
in
mov
test
pop
jecxz
movsb
sbb
dec
rcrl
movsl
sub
and
clc
xchg
mov
and
jmp
ret
push
cmp
add
lcall
and
ds
in
sbb
fnstsw
lock
xor
fistps
and
gs
fnstenv
adc
and
xlat
outsl
pop
cmpsb
dec
repnz
int3
pop
pop
jecxz
sar
push
fistpl
ret
mov
push
add
fsubs
sub
xchg
repz
dec
inc
clc
or
xor
mov
aaa
test
cmp
jae
xchg
out
mov
mov
jmp
ljmp
pop
pop
ret
lcall
adc
push
rorl
ss
sahf
repnz
sahf
push
js
cmp
mov
ret
fwait
push
sarl
loopne
outsl
jmp
and
rcl
lock
loope
or
sbb
mov
pop
sub
in
mov
lock
lcall
fucomi
call
sbb
cmp
and
bound
mov
popf
mov
mov
bound
and
xchg
adc
jbe
fidivs
scas
mov
pusha
mov
in
cmp
out
out
outsl
sub
adc
pop
fwait
jl
xor
sub
jl
icebp
jo
repz
cmp
mov
cmp
movsl
sti
test
mov
pop
and
loopne
inc
adc
fwait
pop
jb
xor
sbb
jecxz
movsb
andb
dec
mov
pop
mov
or
add
popf
popf
mov
pushf
xor
loopne
pop
dec
stc
jle
in
jns
dec
inc
in
mov
cmp
sub
mov
or
aam
push
push
imulb
mov
sub
scas
push
cmp
stos
scas
jecxz
mov
or
addl
movsb
add
cmp
jo
and
das
imul
fimuls
outsl
and
pop
pop
mov
push
sub
lret
pop
cmpl
xor
inc
fcmovu
dec
insl
pop
jnp
adc
loop
pushf
aas
adcb
dec
cmp
mov
pushf
and
or
and
jae
adc
lea
shll
adc
imul
ds
bsf
addr16
call
into
rolb
add
insl
outsl
jmp
movsl
jle
inc
cltd
and
sub
inc
sub
xchg
or
or
loope
push
ficomps
adc
jbe
push
sub
xor
cli
mov
call
mov
push
inc
aam
xor
jb
lret
repnz
or
jne
mov
push
stc
imul
popa
push
mov
popf
movsl
cmp
imul
add
sbb
xor
push
cwtl
imul
aam
xlat
out
sar
mov
add
xor
popf
into
lock
push
push
fisubrl
fs
sbb
fs
xlat
rcr
xadd
rorl
push
das
push
push
gs
insl
lahf
jne
inc
scas
pop
dec
lock
mov
test
cmp
mov
mov
and
mov
sbb
in
sub
adc
sbb
pop
push
out
dec
add
dec
dec
and
or
jl
es
mov
in
scas
pop
add
lods
add
xchg
cwtl
subl
jo
hlt
out
mov
cmp
bound
fldcw
add
scas
jp
hlt
mov
out
in
in
and
and
or
rol
sub
lods
pop
hlt
das
stos
jmp
adc
mov
movsb
and
shll
adc
xor
xor
xchg
std
loopne
xorl
stos
outsl
jno
cmp
bound
mov
mov
sub
lds
xor
jns
push
repz
fcomps
call
mov
sub
push
xor
push
ret
cmp
testl
sub
cmpsl
sbb
cmp
jbe
dec
jecxz
jns
jmp
stos
sub
cmp
xor
adcl
loopne
rcrb
repz
mov
sub
inc
sbb
adc
call
test
divl
cmc
out
push
scas
popa
test
sti
pop
stos
test
cmpl
add
xor
jne
scas
lret
xchg
cmp
popa
sahf
inc
push
imul
lds
or
lea
rclb
loopne
loope
and
xchg
add
adc
out
js
inc
pop
adc
call
jb
mov
mov
push
pop
push
xchg
lahf
jns
xchg
push
mov
dec
repnz
push
dec
add
movsl
andl
mov
dec
idiv
out
sbb
arpl
shrl
ja
push
negb
flds
and
cmp
jne
insb
push
imul
insb
sub
insl
shl
jnp
adc
out
inc
adc
pop
ljmp
pushf
pop
aas
in
popf
inc
clc
add
sti
lcall
sahf
sub
lahf
mov
test
ljmp
sub
scas
and
pusha
dec
sub
sbb
movsb
mov
dec
mov
or
in
push
jle
cmpl
sub
dec
xchg
dec
jge
dec
dec
add
out
add
pusha
sub
dec
movsb
mov
mov
aaa
ds
sbb
fldt
inc
test
push
pop
mov
arpl
insl
sbb
test
mov
enter
andl
jp
mov
out
mov
out
dec
mov
aaa
loope
or
pop
ds
mov
and
std
push
rorb
orb
pop
pop
ds
lock
pop
adc
xor
lcall
xlat
int3
call
sub
lods
faddl
daa
ret
iret
mov
mov
dec
scas
mov
clc
movl
or
cmp
mov
cwtl
pop
mov
jns
sbb
xor
dec
push
loopne
and
sub
jnp
pop
jb
pop
dec
fwait
and
test
sub
push
leave
shlb
xor
inc
adc
xchg
xor
cmp
add
cmc
sub
lcall
das
jl
pop
jp
loopne
iret
dec
xchg
inc
call
dec
fs
rorl
and
cltd
mov
sub
imul
packssdw
jns
dec
xchg
cmp
pop
ss
adc
ljmp
arpl
dec
jg
sbb
popf
dec
insb
lds
xor
adc
adc
jg
mov
imul
jle
test
repz
pop
leave
das
ret
loopne
daa
test
insb
pop
cli
movsl
sub
inc
in
lret
clc
add
into
jno
mov
jb
lods
mov
clc
fiadds
sbb
daa
clc
test
push
adc
mov
arpl
sbb
xorb
jne
pop
aad
in
pop
in
aaa
jmp
pop
jp
pop
sahf
sahf
int
add
and
imul
mov
imul
xchg
out
push
cmc
addl
sbb
nop
das
pushf
lcall
int3
andb
fisttpl
fsub
cmp
loop
xchg
cmp
movsb
mov
xor
lahf
jp
add
in
mov
mov
scas
fists
fmull
pop
stc
push
jae
jecxz
not
or
push
mov
sar
scas
cmp
fsubrs
jae
lods
mov
js
push
stos
sub
or
mov
pushl
jg
cmp
adc
inc
xchg
mov
xchg
push
xor
mov
inc
movsl
mov
jge
enter
inc
aas
fsubs
mov
add
jae
pop
cmp
jae,pn
repz
xor
jmp
lea
lar
ja
nop
aad
test
mov
out
lods
mov
xchg
pop
mov
clc
jns
push
sub
icebp
xchg
push
sbb
aaa
cmp
outsl
out
in
or
int
cwtl
lret
add
or
sti
jge
or
jmp
sbb
jbe
mov
jecxz
movsl
mov
inc
leave
push
sahf
aam
cmp
mov
ss
jnp
inc
dec
loopne
out
pop
lahf
jle
mov
jne
add
addr16
test
daa
fdivrl
icebp
push
ss
pop
xchg
xchg
lea
or
mov
leave
add
cmp
fsts
push
dec
inc
cmpsl
jno
push
adcl
incl
or
notb
and
push
popa
lahf
push
stos
mov
add
cmp
scas
xchg
cmp
movsb
mov
pop
insb
cmp
push
fwait
mov
repnz
dec
clc
dec
inc
pop
or
mov
dec
sbb
sbb
not
shll
mov
xchg
mov
xchg
pop
jle
adc
and
pop
push
jne
mov
push
loop
adc
sub
in
in
inc
bts
adc
or
push
mov
xor
aaa
test
cmp
scas
movsb
jae
inc
arpl
adc
movsb
setne
das
jbe
pop
mov
inc
scas
ljmp
adc
repnz
lret
jbe
sub
mov
jg
int3
shll
in
das
sti
ss
rclb
sub
in
push
mov
fcomi
mov
mov
add
outsl
xchg
add
sbb
jo
cmp
adc
dec
add
shrb
in
push
jge
iret
mov
pop
or
out
mov
inc
loopne
xchg
or
adc
push
jecxz
jge
arpl
and
ljmp
insl
xchg
push
hlt
stos
es
xor
xlat
das
into
xchg
std
bound
push
dec
push
sarl
fnstcw
fdivrl
adc
cs
jne
add
sub
stos
js
mov
call
or
sub
add
dec
xchg
fistpll
cmpsb
pop
mov
lcall
pusha
add
call
jns
arpl
aaa
push
sub
mov
mov
adc
sbb
fnsave
aaa
popa
ss
lret
inc
movsb
mov
lret
in
lret
xor
fisttpll
int
mov
shrl
adc
jle
test
sub
dec
add
pop
and
push
jp
xor
mov
push
hlt
ret
xchg
je
mov
push
popf
push
push
jae
stc
mov
push
adc
inc
mov
mov
lea
jne
xchg
push
mov
push
and
mov
jb
xchg
ficoms
rcrl
mov
pop
inc
sbb
pop
pushf
inc
add
out
cmpsl
stos
or
out
inc
mov
jge
cwtl
sub
rclb
shrb
mov
std
push
dec
int3
mov
pushf
mov
push
imul
fcomi
loop
daa
jecxz
leave
cmp
repnz
cli
push
cmpxchg
out
xor
fbld
sbb
rclb
xchg
in
mov
mov
mov
mov
push
cmp
out
mov
leave
lahf
sbb
mov
int3
insb
lahf
icebp
daa
sub
test
aam
mov
into
jns
cld
fsubs
xor
stos
inc
jge
add
in
out
ret
cmc
hlt
dec
inc
ljmp
cs
aas
cmp
pop
add
sub
pusha
pop
xchg
popaw
xchg
push
in
shrb
add
jno
cld
dec
adc
roll
mov
mov
lds
mov
lods
stos
je
add
mov
jno
shll
push
setae
fnstcw
pop
xor
insb
stc
sti
mov
fsub
ljmp
push
xor
xor
jne
out
leave
cmp
rcrb
mov
ljmp
jbe
cmpsl
sub
xchg
cmp
mov
lea
adc
push
adc
xchg
ds
ror
sbb
insb
adc
push
cwtl
insl
rol
push
and
daa
jne
jbe
fisubrs
fistpl
lret
adc
add
aad
xchg
leave
add
lods
insl
mov
dec
aas
sub
enter
mov
into
lea
testl
cmp
xchg
outsl
iret
outsb
dec
ss
ja
and
adc
sarl
lock
pop
hlt
into
lods
inc
and
xchg
push
mov
hlt
bound
jecxz
leave
fldenv
scas
fsubrs
push
hlt
push
mov
push
mov
mov
xchg
push
in
out
inc
sub
mov
and
rorb
sbb
lods
repz
push
cld
imul
pop
mov
xor
cmp
mov
and
xor
jmp
pop
pushf
jnp
jmp
decb
imul
addr16
fldenv
repz
pop
mov
jns
mov
push
scas
les
cmp
mov
mov
popa
mov
inc
mov
mov
ds
jne
sub
sub
dec
cld
shr
mov
xor
in
add
add
pop
ja
mov
push
mov
mov
clc
fcomp
cmp
mov
fstps
mov
stc
or
arpl
scas
xor
mov
and
fs
and
sti
pushf
dec
cmc
repz
cmpsl
imul
fistpll
add
dec
repnz
stc
aam
outsl
and
bound
stc
inc
adc
push
fs
je
sbb
test
in
jp
daa
decb
cmp
fs
loope
fimull
xor
divb
data16
mov
lods
pop
lock
xorl
add
inc
fcomps
rcll
stos
call
icebp
cli
aam
push
mov
dec
add
add
shrl
enter
jl
orb
xor
call
push
jge
js
cwtl
mov
sbb
or
arpl
mov
pop
jae
lea
mov
daa
in
mov
push
xorl
add
lods
loop
shrb
mov
inc
fildll
xchg
cmc
add
mov
mov
pop
add
aam
sti
lcall
pop
mov
in
xchg
jp
out
push
fstl
out
fisttpll
or
mov
mov
add
dec
pop
sub
aad
adc
xchg
test
adc
addl
int3
daa
lret
dec
lock
mov
push
dec
push
das
lds
in
xlat
and
scas
xchg
lods
and
sub
xchg
mov
js
aam
or
sbb
dec
or
xor
mov
ja
push
out
add
fisubl
sub
ficoms
sbb
add
fsubrs
xchg
outsb
mov
dec
add
sub
bound
xor
pop
and
adc
lcall
int
xchg
std
inc
data16
cmp
stc
cltd
lods
xor
orb
roll
mov
ja
xor
mov
or
sti
mov
stos
adc
xchg
jl
in
cmpsl
cmp
arpl
jb
adc
or
bound
xchg
mov
loope
inc
test
xchg
popa
repnz
sub
inc
nop
les
pop
jg
imul
cmp
outsb
dec
mov
inc
inc
mov
data16
test
cmc
das
mov
insb
notb
or
roll
outsb
xor
pop
ljmp
xchg
xchg
pop
jmp
cmp
pop
arpl
mov
das
mov
dec
bswap
or
cmp
out
add
movsl
jl
in
in
xor
jl
sub
sti
xor
rcl
iret
sub
sbb
sbb
xchg
hlt
shr
out
and
ja
xchg
push
movsb
and
or
pop
mov
mov
aam
loope
sub
cmpsl
sub
xor
dec
xchg
gs
addr16
inc
mov
mov
filds
cwtl
add
push
imul
xor
mov
mov
push
pop
sub
lock
rorb
mov
adc
mov
sbb
push
imul
xor
cld
scas
xor
inc
popf
stc
dec
xchg
js
mov
push
stos
cld
psrad
outsl
fwait
ja
dec
int3
xchg
adc
insl
ret
das
arpl
jno
mov
imul
inc
xchg
adc
sti
pushf
push
mov
jle
orl
pop
lret
hlt
mov
out
test
sarl
fnstenv
pop
ss
mov
mov
leave
push
fs
insb
jb
ljmp
push
jecxz,pn
jmp
xor
push
je
sub
mov
mov
add
movsl
adcb
or
dec
jo
addr16
in
loopne
lods
cmp
jge
inc
repz
mov
movsl
push
popf
mov
fmulp
out
outsl
push
outsl
mov
nop
imul
and
fisubs
sub
rcrb
xor
and
xor
inc
out
imul
lods
cmpsl
fimull
test
inc
in
sub
mov
loop
mov
or
pop
xchg
push
aas
cmp
mov
jecxz
cmp
or
jle
ja
and
pop
inc
out
xchg
add
aad
jb
cmp
aas
push
mov
jno
scas
sbb
mov
movd
leave
sbb
cmpsl
aam
mov
mov
ret
sbb
adc
fs
popa
mov
sub
imul
into
dec
dec
xchg
icebp
loope
notb
xor
shlb
xchg
jp
adc
inc
xchg
les
push
pop
inc
lds
xor
imul
cmpsl
or
rcl
adc
add
icebp
daa
mov
mov
inc
mov
fistpl
cmp
shl
push
es
bound
jg
mov
or
scas
pushf
jmp
push
iret
xor
add
jmp
adc
mov
xchg
iret
in
jo
sbb
cmp
enter
dec
js
outsl
add
cli
cmp
scas
xchg
and
adc
jl
mov
aas
decl
das
sbb
decl
push
js
fildll
imul
repnz
push
and
fldenv
pusha
adc
lods
aas
test
jmp
lret
inc
test
imul
ds
jl
rcrl
mov
popa
stos
aas
inc
imul
in
mov
jne
insb
xorl
clc
xchg
xchg
pop
xor
cld
repnz
xorb
push
mov
mov
out
adc
stos
pop
in
fmull
subps
loopne
cmpsl
lods
cmpsb
dec
repz
cmc
popa
shlb
outsl
adc
mov
aas
dec
stc
push
lret
sub
push
faddl
arpl
sub
and
out
lret
add
stos
fwait
setp
sar
push
aad
jbe
inc
mov
lret
pop
stos
cmp
pop
sti
sub
call
sub
cltd
notl
mov
call
and
xor
jbe
push
rcll
inc
mov
orl
pusha
xchg
ljmp
xchg
cwtl
iret
iret
bound
lds
mov
push
fwait
mov
xchg
mov
jp
cmp
push
xchg
cmpsl
lcall
dec
iret
les
lock
mov
das
out
js
lahf
sub
mov
pop
addl
jmp
loop
push
outsl
cld
loopne
ds
mov
push
mov
fistps
popf
and
gs
xor
sbb
mov
xchg
add
dec
xchg
sub
jg
dec
pop
mov
cmp
outsb
jno
mov
mov
add
mov
fbld
push
out
pop
shlb
std
scas
cmc
adc
fcoml
pusha
pop
sub
inc
mov
dec
imul
xchg
mov
or
roll
lret
push
push
ret
pop
lds
test
and
xchg
fistl
inc
mov
push
movsb
cmc
aad
sbb
pop
shlb
clc
addb
push
mull
and
push
mov
iret
mov
insb
out
push
pop
push
inc
cmp
xor
pop
adc
cli
icebp
jge
mov
in
push
mov
cld
sub
jb
sub
xor
jle
aad
fcomp
mov
mov
mov
jle
int3
aas
rcrb
scas
pushf
pop
daa
mov
push
push
xchg
stc
mov
sbb
mov
pop
xor
mov
mov
loopne
mov
test
adc
xchg
mov
sub
push
pop
sbb
push
ja
add
mov
je
bound
mov
or
lods
adc
sbb
pop
mov
mov
cmp
inc
popa
jge
insl
int
jno
and
inc
pop
lahf
jns
test
pushf
cmp
push
add
jns
push
cmp
out
xor
dec
orl
imul
pop
jecxz
sbb
nop
jbe
xor
jae
fcmove
lods
popl
xchg
jle
imul
xchg
sti
or
xorb
into
cmpsl
out
int3
or
dec
mov
dec
into
movsb
push
outsb
fisubrl
orl
adc
call
pop
adc
inc
mov
pop
das
es
and
test
sub
sahf
enter
dec
ljmp
mov
fcompl
lret
jmp
mov
pop
adc
add
dec
and
test
das
push
mov
iret
dec
in
testb
mov
cmp
xchg
aam
mov
add
or
jnp
lcall
add
jns
and
std
sub
mov
les
mov
pop
dec
adc
xchg
inc
sbb
cmp
das
sti
and
sbb
dec
pop
repnz
or
pop
xor
push
into
xor
jae
pop
push
lods
mov
test
mov
aaa
int3
dec
pop
test
std
sub
mov
je
lret
out
subl
push
shll
test
pop
jmp
jg
pop
pop
adc
sbb
das
mov
cmc
or
nop
add
adc
out
cmpsb
sub
push
jno
pop
jbe
cmpsl
mov
jnp
or
adc
jns
or
aas
cld
and
pop
xchg
das
fs
xor
out
outsb
test
lods
fwait
mov
xor
push
mov
dec
and
cmp
sub
mov
dec
pop
xchg
in
ret
lods
jg
subb
ret
mov
jge
fwait
mov
je
ljmp
jo
sbbl
mov
pop
aaa
sbb
stos
mov
lods
sti
add
push
pop
push
mov
cmp
mov
in
aaa
adc
sub
cmp
fwait
cli
mov
in
cmpsb
push
xchg
in
inc
in
iret
das
insl
iret
int
pop
lcall
loop
pop
cld
or
wrmsr
test
cmp
add
subl
mov
lods
cmpsl
mov
xlat
sbb
and
pusha
fidivl
bound
mov
or
out
dec
mov
mov
in
jp
mov
in
sub
sbb
dec
xchg
lds
lods
in
testl
imul
icebp
add
mov
sub
xor
push
adc
js
ds
xor
in
push
xchg
add
out
pop
fbld
xchg
iret
mov
push
mov
in
repnz
int
cmp
xor
jbe
lcall
mov
push
push
mov
ljmp
push
pop
dec
or
add
scas
or
je
lcall
push
mov
adcl
add
cs
mov
mov
jecxz
fists
jne
lret
xchg
mov
pop
ja
shl
mov
or
mov
dec
popa
es
jl
mov
mov
jne
idivl
stc
push
mov
and
inc
or
dec
push
cld
and
in
int
jmp
cmp
repz
mov
bound
adc
dec
lods
pusha
jmp
icebp
cli
adc
jmp
pop
subl
das
aad
arpl
jnp
adc
cmpsl
inc
out
popf
sub
pusha
mov
xchg
sbb
aas
sbb
fs
xchg
iret
sub
ljmp
xor
nopl
and
mov
push
xchg
shr
push
xor
mov
mov
add
mov
sub
lcall
mov
andl
add
insb
mov
xchg
jge
pop
push
and
mov
movlps
jne
frstor
movsl
cmp
add
clc
xchg
cmp
push
and
ja
jne
bnd
mov
pop
mov
pop
add
inc
mov
dec
pop
add
fcoms
orb
mov
xchg
testb
addr16
mov
or
jne
nop
sbb
lret
into
lret
repz
cmpb
test
jne
sbb
and
sbbb
jne
repnz
push
test
notl
pop
aam
sbb
dec
mov
mov
into
push
fcmovnbe
in
inc
stc
stc
or
pop
lahf
jp
add
jae
add
test
sub
ss
aam
fbld
push
arpl
cmp
and
cmpsb
outsl
jl
dec
fdivs
pop
push
inc
inc
push
mov
mov
stos
incb
sbb
add
and
add
bound
sub
test
dec
outsl
xor
or
ljmp
push
sub
sub
mov
outsl
pop
sbb
call
hlt
mov
cmpb
adc
fisubrs
int
jnp
push
js
fidivrl
push
ljmp
jne
test
addr16
jmp
push
cli
adc
rcll
pusha
nop
arpl
mov
popa
inc
ficoml
mov
jnp
icebp
mov
and
negb
xchg
es
hlt
push
aas
in
push
jecxz
ds
xlat
lds
pop
mov
shl
in
add
movsl
add
into
enter
mov
xchg
dec
push
rorb
push
aam
jns
jecxz
les
jns
in
jecxz
push
test
test
jg
jo
fwait
sbbb
cmp
add
jl
fstp
mov
sahf
aam
or
mov
stc
jmp
pushf
or
sub
sbb
popf
adc
into
push
dec
add
rorb
xchg
call
das
lods
jbe
movsl
mov
pop
adc
scas
bound
in
pop
test
xlat
jl
rcll
stc
sub
push
int3
inc
cld
pop
repnz
pop
push
push
cmp
imul
lods
inc
cmp
mov
jb
clc
imul
or
mov
scas
sub
scas
jge
mov
jl
mov
sbb
xor
cwtl
cmpsl
cmp
shrl
cli
push
stc
loopne
xor
mov
pop
jg
stc
push
popf
mov
mov
or
inc
mov
xchg
xchg
xchg
sbb
cmp
dec
ret
lods
cmp
adc
push
or
in
lcall
stos
or
mov
cmp
mov
adcl
roll
idivb
cwtl
push
mov
add
subl
stc
lea
aas
loop
inc
adc
lock
outsl
inc
or
cmp
mov
push
jl
pop
or
in
repz
sbb
push
movsb
xlat
inc
jecxz
push
and
push
fidivrl
add
stos
xchg
psrlq
lret
mov
xchg
push
imul
sub
shrb
cmp
mov
dec
scas
xor
sbb
xor
movsl
adc
or
stos
jo
push
adcb
lret
les
in
cmpl
jnp
sub
sub
fidivrs
out
dec
mov
lods
cmc
inc
or
add
cmp
frstor
orb
and
clc
push
outsl
call
iret
jae
lock
test
popa
and
mov
or
cmp
loop
cmc
lret
mov
loopne
and
adc
jge
outsb
insl
lcall
push
xor
aam
movsl
aad
iret
popf
pop
xor
fdivrl
jae
push
call
into
or
mov
mov
enter
dec
dec
jne
mov
mov
push
icebp
mulps
sbb
loope
jb,pt
dec
cmp
sub
pushf
rorb
stos
mov
dec
push
cmp
adc
filds
xor
jmp
mov
jbe
ds
pop
outsb
xor
cmp
cmpsb
out
leave
jns
jo
mov
shlb
or
pop
jge
rorb
data16
mov
insl
lods
lods
inc
mov
stos
inc
pop
push
inc
inc
cmc
fsubl
repnz
je
repnz
cli
mov
inc
mov
fnstcw
inc
loope
subb
fadds
xchg
mov
add
shr
pop
daa
idivb
push
and
mov
xor
outsb
into
lret
dec
call
jge
testl
icebp
pop
aad
pop
out
movsl
out
jae
imul
push
pop
dec
or
jecxz
and
dec
rorl
jnp
mov
pop
push
std
lcall
dec
out
fnstenv
subl
in
push
fcmovu
mov
call
cwtl
mov
clc
xor
mov
iret
sbbl
lock
into
out
rcrl
jge
mov
push
jno
xchg
sbb
pop
sahf
cmp
or
mov
sbb
pushf
push
cmp
ds
and
xor
ljmp
inc
dec
fisubl
das
and
dec
lret
mul
inc
push
call
or
cmpsb
push
mov
shl
popa
jp
ds
fcoms
fs
pop
mov
adc
stc
lock
sbb
push
sub
xchg
xchg
push
popa
bswap
cmpsb
rcr
icebp
and
arpl
cmp
cmp
add
xor
mov
dec
icebp
pushf
xchg
rcll
shll
jne
cmp
outsb
stc
rol
add
add
jge
popa
jno
xlat
sti
push
lcall
dec
push
xchg
xchg
jecxz
div
sub
clc
mov
cmp
aam
lret
cmp
roll
or
jb
sbb
mov
mov
js
arpl
ds
push
loope
mov
mov
sbb
movsl
fcompl
add
jo
hlt
cmp
testb
dec
pop
cmp
scas
fidivs
push
inc
dec
loope
push
xor
std
xchg
and
cmc
or
sbb
test
lods
cmp
sti
adc
andl
fadds
sbb
xor
cmp
sbb
xlat
pop
popf
call
jo
jcxz
mov
inc
lods
and
inc
push
pop
mov
cmpsl
push
xchg
sub
stos
or
outsl
sbb
cmpsb
cmp
iret
push
cmpl
loope
mov
mov
add
pushf
jg
es
scas
push
shrl
fisubrl
fcomps
loopne
cmp
shlb
xchg
xor
lret
pop
adc
addr16
ja
rclb
aas
cs
mov
leave
je
fcmovne
cmpsb
subb
mov
mov
dec
inc
sbb
imul
sub
jecxz
jecxz
inc
jg
mov
mov
stos
jecxz
mov
and
dec
pop
push
add
bound
repz
shrl
mov
and
std
stos
mov
fldcw
and
out
data16
cmp
mov
sti
pushf
imul
test
dec
in
test
int
addr16
arpl
or
adc
lret
push
mov
loop
nop
jb,pn
push
xchg
jl
sub
jecxz
mov
xchg
pop
pop
jmp
repnz
jge
cmp
pop
and
sbb
xchg
xor
pop
ucomiss
testb
imul
pop
jge
push
pop
jne
ja
mov
mov
nop
push
loop
cmp
ret
test
dec
das
cmp
adc
lock
ret
xor
jmp
push
leave
lcall
aas
les
cmp
cmp
pop
jae
nop
aas
mov
mov
addb
bnd
ljmp
in
pushf
imul
cmp
shll
xor
mov
out
test
mulb
mov
adc
nop
sub
pop
push
fdivl
push
mov
movsl
inc
cwtl
rcll
fsts
imul
ss
aam
mov
std
adc
jo
sbb
in
leave
xchg
scas
push
dec
mov
pop
mov
daa
mov
mov
subl
pop
outsl
push
cwtl
lret
pusha
das
cmp
das
fidivrs
xchg
incb
pop
iret
xchg
dec
xchg
cmp
and
pop
int3
cwtl
and
es
add
push
andps
ljmp
push
mov
adc
cs
fisubrs
xchg
xchg
mov
jo
xchg
fcmovne
jp
pop
enter
sahf
lcall
into
xchg
mov
and
inc
inc
aam
pop
add
push
cmc
jae
out
stos
ds
push
push
mov
mov
sub
cmpsb
test
push
fimuls
dec
or
fldenv
call
pop
int3
mov
orb
mov
mov
dec
sub
pop
inc
data16
mov
or
hlt
jge
imul
enter
aam
pop
das
push
xor
lcall
dec
aad
lahf
adc
xor
inc
add
sbb
fsubl
add
ss
mov
push
sbb
push
inc
adc
pop
inc
mov
mov
shr
pop
pop
mov
jl
and
xor
mov
and
int3
jno
test
rcr
push
ret
mov
jne
cltd
jno
sarl
xor
jp
insb
ret
dec
sub
testb
and
mov
mov
mov
mov
sub
dec
popf
xchg
ljmpw
adc
push
mov
arpl
mov
jo
jo
addr16
int3
sbb
cltd
outsl
dec
stos
aaa
sub
jmp
pop
add
push
cmp
dec
pop
popf
push
ja,pn
mov
cld
sub
add
lods
ds
xor
dec
jo
aaa
lods
mov
sbb
add
jle
adc
inc
pop
sbb
push
pop
pop
scas
mov
aad
push
add
cmp
inc
test
mov
in
dec
dec
out
cmp
adc
scas
fwait
pop
ds
ret
mov
call
popf
xchg
fdivs
xor
or
push
push
mov
cli
imul
cmpsl
lea
pop
pop
push
dec
sub
and
push
mov
aam
xor
outsl
dec
or
jne
and
hlt
xchg
sub
dec
into
insb
out
mov
lahf
scas
pushf
aam
nop
int3
enter
movsb
decl
sub
sub
cmp
mov
sub
inc
mov
lret
rorb
fs
cmp
inc
gs
sbb
imul
adc
sarl
inc
cli
pop
cmp
jge
int
rcr
dec
aaa
cmpsb
inc
cmpb
pop
enter
andb
sbb
outsl
jbe
add
out
and
test
dec
dec
push
xor
jns
addr16
lods
repnz
jnp
dec
lcall
jg
cwtl
cmc
jmp
mov
and
ljmp
cmp
cmpsl
jmp
cmp
inc
push
enter
xchg
or
and
testl
dec
pushw
adc
lods
sub
lahf
xchg
stos
dec
decl
jmp
in
fpatan
cmp
sub
and
dec
jae
dec
and
xchg
and
mov
add
xchg
out
lea
mov
jno
andl
in
xchg
pop
aaa
add
ss
mov
adcb
push
icebp
push
fistl
adc
sub
xchg
movsb
aam
push
jl
push
imull
sub
out
test
mov
in
xor
adc
roll
aaa
pop
mov
jl
mov
shrb
pop
pop
push
jb
add
and
jle
cmp
mov
repnz
outsb
sarb
insl
scas
aam
and
in
inc
ret
xor
inc
insl
jmp
jb
xor
mov
xchg
pop
push
xchg
sbb
cmp
cmp
mov
outsb
clc
loope
pop
jne
push
bound
clc
push
mov
fwait
mov
sahf
data16
into
std
das
in
dec
dec
and
mov
inc
mov
push
jo
mov
push
or
mov
xchg
sub
mov
loope
or
insb
stos
aas
push
test
mov
xchg
inc
test
popf
sbb
rclb
inc
sbb
push
push
incl
sbb
mov
xorps
sub
cmp
pusha
mov
frstor
movsb
test
push
lods
scas
or
test
jmp
shll
nop
jecxz
outsl
ja
bound
jae
sub
es
hlt
in
sub
popa
out
les
sahf
aam
clc
clc
jnp
stc
xor
sub
int
cld
and
xor
repnz
pushf
pop
lea
push
fs
scas
push
push
popf
jo
inc
dec
ds
cwtl
push
jl
cmp
jbe
pop
xchg
xchg
aam
dec
add
ret
inc
iret
gs
jae
fnstcw
pop
rorb
popl
lods
lcall
shll
inc
push
add
fsubrp
cli
mov
dec
es
mov
mov
xor
out
or
pop
mov
pop
shll
out
mov
xor
adc
adc
insb
in
jp
ds
nop
icebp
jb
adc
mov
sbb
sarb
sbb
and
push
movsb
pusha
cmp
or
push
cmc
popa
sub
jmp
adc
pop
mov
mov
mov
rcrb
mov
jp
sbb
lret
xlat
fwait
ljmp
ret
sbb
sbb
xchg
out
adc
jge
fbstp
outsb
cs
inc
cmpsb
scas
lock
inc
sarl
rep
divl
shll
mov
mov
icebp
mov
pop
mov
adc
jo
imul
addr16
cmp
cmp
addb
cmp
mov
mov
loop
shrl
xchg
and
inc
pop
mov
lcall
inc
and
fimull
jno
mov
sbb
xor
pop
push
mov
push
mov
les
testl
lds
shl
jb
test
cmp
sti
int3
pop
inc
jge
loop
adc
jp
jecxz
cs
shll
ja
sub
stos
inc
or
dec
add
addl
xchg
test
fistpll
inc
rcl
shl
sub
or
sahf
push
or
mov
rcl
insb
aaa
sub
add
jl
lret
push
or
xchg
aam
xorl
xchg
leave
out
cmpsb
mov
and
mov
xchg
pop
rorl
test
inc
mov
hlt
push
push
icebp
inc
in
cmp
xor
pop
mov
and
repz
pop
add
cmpb
jne
cmp
add
sbb
rcrl
push
xchg
xor
iret
orb
mov
rcl
aam
repnz
cmp
pop
inc
or
lret
insl
aad
sub
xchg
in
pop
popf
test
stc
lock
lret
mov
cmp
cmpsl
xor
push
mov
outsl
icebp
xor
fsubrs
addb
push
popa
data16
fcom
aaa
cmc
mov
shlb
aam
adc
push
jl
int3
pop
lret
xor
xchg
mov
lahf
adc
xor
push
adc
andl
dec
aas
inc
fcoml
sub
cmpsl
pop
out
push
not
mov
leave
push
popf
mov
jmp
dec
nop
repnz
sub
in
roll
mov
xchg
stc
cld
push
mov
notl
or
push
out
jae
out
cmpsl
fsub
nop
jge
jl
adc
rorb
test
lock
jb
push
je
popa
jb
push
les
je
xor
and
mov
cltd
push
or
jle
mov
inc
push
cmpsl
jae
push
add
push
pop
aam
inc
jecxz
fcomp
je
xor
aam
inc
and
test
cmp
cmp
push
or
in
jno
mov
xor
dec
fs
add
les
jp
jmp
add
adc
pop
movsb
xor
lar
pop
xchg
xchg
in
mov
outsl
add
pusha
in
dec
lahf
mov
cmp
and
adc
adc
sbb
pop
inc
pop
nop
ja
aam
jne
and
adc
xor
lea
cli
push
repz
cmp
cmc
stos
xor
int3
push
pop
sahf
add
pop
nop
cmp
mov
cmp
cmp
add
fnstcw
repnz
adc
fists
pop
test
xor
mov
push
push
and
stc
push
in
js
cmp
inc
das
arpl
xchg
mov
mov
fcmovbe
mov
and
bound
incl
dec
enter
vphadddq
xchg
mov
push
sub
add
rorl
sti
jmp
mov
sub
pop
cmpsl
out
dec
dec
mov
stc
sbb
mov
mov
enter
dec
jg
or
pop
movsl
push
imul
inc
movsb
stos
movsb
lods
popf
inc
into
js
lock
dec
mov
mov
sub
shll
jnp
adc
mov
mov
vdivsd
mov
jns
popf
insb
sbb
in
subl
hlt
xchg
outsb
rclb
popf
fwait
imul
imul
xchg
out
jmp
ret
and
mov
push
int
sbb
test
pop
es
stc
cmp
mov
mov
and
push
mov
add
mov
push
out
sti
pop
sub
test
xchg
lea
ficomps
dec
scas
push
xchg
and
movsl
sahf
cld
push
adc
and
mov
push
call
add
dec
or
addps
add
popl
jae
mov
sub
pop
dec
push
sbbb
push
pop
cmp
cwtl
mov
imul
push
dec
mov
wbinvd
out
sub
rclb
pushf
or
mov
scas
bound
xor
pushf
add
inc
and
add
adc
jns
cs
fcoml
inc
daa
fists
jbe
mov
push
push
fs
shrb
sub
ds
jg
sbb
daa
mov
hlt
bound
jecxz
jb
fiadds
mov
and
cmpsl
cld
ret
lret
sub
xor
out
shlb
add
in
orl
cli
jle
mov
fldenv
ds
pop
inc
jecxz
fucomip
ss
and
int3
shl
loop
add
push
xor
add
pop
or
xlat
pushf
mov
sti
ljmp
or
and
mov
add
test
inc
mov
fs
and
loope
xor
xchg
aaa
hlt
notl
pop
out
xchg
xchg
mov
repnz
add
jne
pop
adc
xor
lret
fidivs
mov
jb
adc
imul
push
mov
in
inc
out
xchg
cld
cmp
das
mov
jns
adc
xchg
or
jns
dec
fs
inc
or
push
sbb
outsb
pop
xor
jecxz
mov
adc
and
inc
sub
ljmp
es
adc
xchg
inc
ret
out
sub
pop
icebp
or
int3
sbb
jnp
fcmovnb
int
adc
aas
push
xchg
loopne
or
cmp
adc
xor
fbstp
jmp
push
stc
andl
cmp
jb,pn
cmp
add
out
pop
aam
out
xchg
cmovg
pop
repnz
mov
cwtl
inc
pop
ret
dec
add
pushf
pcmpgtw
es
xchg
mov
leave
pop
sbb
pavgw
mov
sub
jae
xchg
xchg
ficoms
sbb
or
leave
or
push
mov
mov
inc
insl
in
adc
sbb
cwtl
ja
imul
je
xchg
add
testl
test
pop
jmp
add
jmp
add
add
xor
dec
mov
sub
jle
inc
andl
popf
jae
jnp
push
cwtl
mov
adc
xor
jbe
mov
std
dec
mov
and
push
nop
aas
cmc
mov
adc
push
jmpw
daa
dec
ds
inc
dec
mov
movsb
mov
insb
rol
xchg
test
shrl
xchg
cmpsl
mov
xlat
iret
icebp
cmp
pop
push
clc
lea
roll
cmc
push
lahf
maskmovq
xchg
divl
test
sbb
inc
xchg
clc
inc
jns
icebp
leave
add
arpl
inc
negb
or
add
and
mov
adc
push
dec
std
cmovge
jb
nop
or
or
fsubl
cld
push
or
jp
or
repz
cmpb
jbe
stos
mov
jns
icebp
jg
stc
mov
iret
test
insb
and
add
sbb
pop
xor
mov
cmp
popa
les
clc
aaa
repnz
sbb
jo
cmp
mov
sarl
xchg
mov
pop
mov
push
rorw
push
andl
ficomps
cmc
insb
sub
daa
push
lock
pop
les
repnz
sbb
pop
inc
repnz
mov
add
mov
andl
aad
jne
add
frstor
push
scas
je
faddp
mov
push
icebp
lea
pop
std
cmpsb
ss
pop
fiadds
das
lock
cmp
sarb
fstps
pop
cmp
fcompl
or
push
incl
ss
stos
add
cmp
xchg
adc
in
mov
popa
mov
xor
dec
lcall
xchg
test
pop
call
fwait
jle
daa
arpl
xor
sahf
ss
lea
and
insb
mov
jmp
fdivrl
scas
repnz
aas
aas
mov
ret
pop
outsb
repnz
push
xor
mov
clc
mov
orl
loope
jnp
repz
jp
insb
bound
fstpt
mov
icebp
into
aam
mov
xchg
sbb
sbb
push
cmp
out
cmp
push
mov
inc
cmpsb
aad
pop
xchg
xchg
push
jns
dec
call
enter
stos
test
daa
inc
mov
jb
and
cld
push
loopne
in
mov
xchg
fadd
push
movsb
andl
out
loop
into
jg
inc
pop
neg
inc
sahf
or
movsb
mov
or
shll
cld
push
mov
cs
in
xchg
loop
adc
cmp
sahf
lods
repz
in
adc
loopne
outsb
mov
push
inc
shll
jbe
xchg
cltd
xchg
inc
adc
xchg
add
lods
imul
repz
mov
or
stc
ljmp
jl
aad
xchg
mov
sub
or
leave
nop
pusha
repnz
arpl
pop
xchg
xchg
mov
stos
jmp
outsl
add
mov
test
mov
and
sti
add
popf
and
jnp
jecxz
ror
sti
sbb
movsb
in
xor
movl
ss
sarb
jle
and
cwtl
ficoml
xchg
cld
pop
push
mov
inc
popf
pop
repnz
push
inc
fcomip
iret
pop
xchg
cltd
dec
dec
imul
outsb
mov
out
arpl
dec
ret
stos
loop
xchg
mull
fsub
aaa
dec
std
test
push
imul
cmp
mov
data16
stc
add
lock
adc
fcmove
adc
out
xor
sarl
call
cmp
data16
test
push
scas
clc
cmp
int
xor
push
jnp
inc
jl
mov
jge
xorb
inc
mov
add
mov
cld
push
mov
rorl
test
cld
in
jl
mov
mov
push
push
add
pop
mov
je
or
mov
adc
call
lea
sbb
xchg
xor
xchg
sbb
dec
mov
test
mov
push
loope
in
jns
movsb
shrl
or
sbb
jbe
incb
mov
dec
push
popf
jno
cmc
arpl
mov
in
push
jg
sbb
into
adc
cmp
cwtl
jne
adc
sbb
dec
clc
pop
test
test
jp
aaa
xor
sub
shr
mov
loopne
iret
ljmp
int3
shlb
sub
int
inc
iret
insb
mov
push
call
pop
les
lret
shll
dec
pop
lock
es
mov
gs
fs
jo
nop
xchg
sub
imulb
sbb
jg
clc
test
mov
insb
push
cmc
push
es
stos
dec
mov
adc
mov
test
cltd
in
cmc
or
dec
inc
jno
hlt
aad
xorb
and
pushf
call
and
hlt
ja
jmp
xchg
jbe
xor
xor
jp
pop
mov
movsb
mov
jo
decb
test
ds
cwtl
fcomps
cmp
pop
testl
push
sbb
dec
sbb
stc
dec
lret
cmc
sub
aad
mov
aaa
xchg
fmull
xchg
adc
and
xor
cmp
pop
jnp
and
pop
std
xchg
mov
mov
adc
pop
in
repz
jo
dec
jg
jae
loop
in
pop
xchg
mov
xchg
mov
pusha
pushf
push
shl
xor
add
jo
iret
add
sbb
roll
mov
ja
ret
cmp
insb
xchg
jp
adc
shll
mov
jmp
xchg
add
fwait
shl
ss
pop
jge
jbe
add
sbb
jo
lret
xchg
sbb
fistpl
aad
sub
stos
mov
push
mov
jl
outsb
and
jg
pop
sbb
xlat
inc
add
test
xchg
mov
aaa
cs
mov
add
add
in
xchg
or
in
loopne
test
andl
push
fisubl
pop
add
xchg
mov
testl
or
in
cmpsl
fcomip
push
int3
pop
and
mov
into
stos
or
sub
push
pusha
sub
jle
leave
push
sbb
jns
aaa
lods
out
addr16
imul
and
mov
cwtd
push
dec
insl
mov
push
sbb
pop
test
int3
mov
push
jg
inc
dec
sbb
std
dec
ss
in
mov
insl
mov
testb
lods
push
cs
push
mov
mov
stc
mov
push
cmp
enter
xor
cli
movsb
mov
lcall
cmc
add
inc
outsl
jb
and
or
jecxz
cwtl
mov
push
push
daa
mov
dec
call
cmp
sbb
push
cmp
insb
xor
lods
sbb
or
movsb
inc
pop
cmpsl
inc
fsubrs
push
stc
sbb
jae
mov
mov
push
ja
cltd
lock
xchg
xorl
pop
sti
or
pop
insb
xchg
popa
jno
lods
mov
pop
lahf
movsl
mov
mov
xchg
mov
xchg
pop
mov
psubusw
rcr
cmp
call
push
test
xor
test
repz
add
pushf
mov
mov
jl
cli
push
bound
push
mov
out
sbb
ja
mov
mov
popa
repz
sahf
inc
dec
xlat
lret
jecxz
xor
fs
stc
add
fs
mov
hlt
xchg
xor
push
sbb
frstor
testb
xor
and
sarl
cltd
jecxz
push
push
push
lret
xchg
pop
xchg
test
fildll
push
xchg
xchg
in
fs
nop
inc
adc
or
xor
movsl
loopne
incl
cmp
cmp
jne
mov
fdivs
enter
xor
mov
pop
cs
sbbl
cmpsl
inc
xchg
sahf
mov
pop
cmp
pushf
out
xor
jns
jge
ret
pop
sub
outsl
imull
or
out
leave
inc
cmc
dec
sub
jnp
fnsave
incl
sbb
push
dec
jb
add
popf
in
sub
ficoml
push
inc
add
outsl
mov
sbb
inc
nop
sbb
das
ja
mov
les
xchg
cmpsb
aaa
aam
fwait
cmpsl
xchg
cmpsl
ds
xchg
rcl
jnp
xchg
xchg
in
push
add
mov
aas
xchg
sete
sbb
sub
dec
lea
daa
in
outsl
pop
mov
sbb
movsl
icebp
mov
lea
adc
cmp
pop
popa
pop
ja
pushf
xchg
add
inc
nop
arpl
cmp
insl
lret
push
sub
pushf
data16
idivb
loop
popa
push
mov
mov
jmp
or
inc
xchg
sub
or
cltd
and
mov
bound
test
icebp
jnp
dec
fiaddl
loop
xchg
aaa
lcall
popf
sub
mov
in
daa
out
popa
push
mov
or
repz
add
push
movsl
pop
or
bound
in
cld
int3
mov
and
mov
hlt
xlat
ds
mov
mov
bound
dec
mov
aaa
rclb
call
jns
jb
push
adc
jecxz
cmp
mov
fst
cmp
fidivrs
movsl
clc
out
mov
mov
cmpsb
jae
bound
shl
andl
push
popa
cwtl
in
inc
pushf
push
fisttps
pushf
inc
and
add
or
mov
push
cmpl
jnp
lret
pop
std
or
adc
dec
inc
and
in
pop
mov
mov
ja
push
xor
mov
cmpl
dec
mov
shlb
xchg
adc
xchg
arpl
ds
pop
sbb
push
test
js
mov
jnp
rorl
add
push
mov
cli
testl
outsl
push
dec
jge
out
daa
loopne
mov
inc
lret
pop
daa
scas
pop
divb
cmp
inc
mov
in
inc
push
sbb
ds
movsb
push
push
packssdw
push
bound
push
and
push
cmpsb
dec
int
mov
adc
pop
aaa
out
cmpsb
in
orl
or
and
mov
jbe
outsl
movsl
pop
dec
xor
out
xorl
xor
out
xchg
gs
decb
dec
xchg
and
decl
or
pop
jl
jns
in
jg
pop
std
add
and
leave
ret
push
xchg
inc
add
cld
pushf
divb
or
outsb
xchg
aad
push
jg
out
fs
sub
ret
push
or
flds
pop
sbb
push
mov
mov
sahf
jge
enter
insb
xchg
imul
es
pop
dec
cmp
int
nop
out
mov
popf
scas
ss
stc
imul
pop
fcoml
lods
ss
inc
cmpsl
lods
lods
mov
sbb
cld
adc
shl
sbb
addl
xor
xchg
aas
inc
movsl
repnz
out
dec
sti
cmp
jmp
addb
aad
rep
movsl
lods
frstor
mov
aam
loop
jecxz
sarb
or
stc
and
fld
shll
roll
lret
pop
sub
mov
push
loopne
shrb
std
lods
cli
mov
push
cmc
fcmovnu
jb
push
mov
movsl
insb
pop
jne
pop
popf
fstp
test
stos
push
mov
mov
jmp
gs
sbb
mov
ja
adc
sti
loop
pop
pop
fld1
insb
or
ja
insl
movsb
sbb
cmp
popa
dec
pop
jg
jb
dec
xor
push
push
push
mov
dec
mov
ja,pn
adc
adc
push
mov
imul
icebp
push
out
sahf
fwait
out
fists
jle
insb
mov
mov
jno
fsubr
cltd
aad
xchg
ret
adc
loop
out
and
cmp
div
push
fnstenv
hlt
sbb
outsb
xor
push
add
and
prefetcht0
push
lds
pop
jmp
mov
scas
mov
mov
adc
dec
or
orb
cld
inc
sbb
repnz
je
cmpsb
lods
push
add
or
xor
ds
sbb
xchg
jg
mov
ret
enter
mov
jecxz
inc
lea
shll
out
mov
aad
xchg
pop
in
inc
mov
jnp
repz
inc
mov
mov
mov
aaa
inc
xchg
nop
fiaddl
mov
or
or
push
test
out
clc
adc
xchg
cld
jmp
jmp
push
fidivrs
pop
lds
ljmp
push
loop
push
mov
outsl
add
movsl
dec
xchg
dec
lock
add
lock
xchg
inc
xchg
sti
lods
sub
data16
add
mov
nop
mov
in
int
popa
mov
in
push
loopne
ror
push
dec
pop
pop
fistpll
mov
sbb
ljmp
das
sti
sub
movsb
ds
dec
dec
mov
pop
adc
aad
lock
fnstsw
addl
dec
lahf
sub
bound
cltd
data16
push
iret
jno
jle
subb
sarb
pop
add
lock
std
gs
cmp
jecxz
jbe
in
sbb
adc
xchg
test
pop
rorb
dec
enter
sbb
and
sbb
jne
sbb
push
xor
mov
ljmp
movsb
and
xor
mov
das
mov
sbb
sarb
int3
mov
das
jns
mov
shr
dec
mov
loope
xchg
fwait
mov
mov
adc
int
negl
insb
leave
jnp
sub
js
mov
push
cltd
mov
mov
adc
fldt
xchg
xchg
sbb
rcll
sbb
aam
xchg
cmp
xor
outsb
std
mov
mov
xor
in
ret
and
jg
lret
inc
mov
lcall
test
jno
sbb
sti
mov
cli
cltd
cld
decl
jae
fwait
push
ja
movsl
outsl
addr16
imul
inc
push
or
les
popf
lret
addb
scas
je
pop
andb
fstpt
cmc
adc
mov
call
push
jne
mov
icebp
and
push
and
adc
xlat
push
dec
test
bound
loopne
push
mov
movsl
push
pop
pop
adc
push
subl
push
push
xlat
in
add
les
call
or
ret
iret
hlt
fiaddl
xchg
arpl
dec
xor
mov
and
rorb
and
push
add
cs
jne
daa
mov
cltd
ss
mov
shlb
or
in
imul
push
movsb
xchg
lea
sahf
popa
inc
cwtl
sbb
lret
mov
inc
mov
in
or
adc
loope
mov
into
outsb
push
xchg
pop
negb
mov
imul
ljmp
xchg
jbe
dec
mov
xor
jne
mov
and
aad
mov
mov
mov
mov
subb
xchg
rclb
xchg
add
fbld
xchg
lahf
imul
mov
popf
fisttps
outsl
add
or
jno
es
invd
inc
outsb
dec
scas
xchg
rcr
test
out
push
or
test
lock
dec
dec
adcl
sbb
push
test
idivl
jne
xchg
and
pop
in
mov
negl
xchg
lret
jmp
imul
hlt
repnz
dec
push
adc
stc
aas
cmp
movsl
idiv
xor
movaps
stos
cmp
data16
sub
in
inc
icebp
ficoml
push
arpl
mov
or
push
pop
or
mov
into
out
daa
adc
mov
ss
negl
in
dec
dec
sbb
rclb
inc
std
push
cld
imul
fists
lahf
xor
jne
ret
push
sbb
popa
fstpl
fwait
test
mov
outsb
xor
mov
pop
dec
test
cmpsl
push
mov
gs
mov
or
lods
adc
jp
xchg
aaa
cli
sti
icebp
shll
es
popa
fisubrl
mov
je
push
repnz
push
mov
or
add
jne
mov
mov
xchg
outsb
xor
cmp
movsb
fcmovne
push
jns
mov
hlt
adc
mov
dec
mov
ss
out
push
or
pusha
icebp
adc
sub
cmc
xor
sti
arpl
inc
jne
jne
mov
fwait
xchg
mov
daa
test
insl
int
jns
fmuls
repnz
scas
cmpsb
stos
push
pop
daa
jo
dec
shr
xor
pushf
clc
cmp
insl
jmp
push
mov
rcrl
sar
dec
shrb
mov
and
loope
mov
movsb
call
cmp
push
ds
mov
enter
and
lock
popa
fnsave
insl
mov
lahf
push
inc
stos
pushf
out
icebp
push
aam
lcall
push
popf
mov
xchg
std
pop
mov
sub
sub
aaa
ret
movsb
cmp
es
xchg
call
popa
mov
insl
sub
push
sub
add
negl
daa
gs
inc
lock
int
push
mov
pop
xchg
and
push
sbb
xor
std
in
adc
or
sub
mov
decl
mov
lcall
loop
push
or
out
xor
xor
loop
pop
pop
loope
call
mov
inc
mov
mov
push
pop
insl
mov
cmp
insb
gs
stos
scas
aad
jg
push
add
test
test
mov
js
inc
int3
rolb
rcrb
push
mov
dec
jb
daa
adc
dec
mov
xor
shlb
test
pop
and
jo
mov
fistpll
mov
in
in
ss
inc
dec
or
jp
dec
out
mov
imul
add
lret
push
mov
arpl
xchg
insb
cmpsb
scas
ja
sar
push
inc
clc
mov
fsubp
or
stc
es
xor
dec
test
xchg
cwtl
scas
repnz
repnz
icebp
push
lods
bound
cwtl
in
mov
in
rcrb
out
inc
orb
icebp
lret
ret
cltd
xor
in
inc
pop
or
addr16
ret
inc
hlt
inc
jb
cmp
sub
xchg
xor
add
fsqrt
mov
inc
jp
push
xchg
cmc
adc
sub
in
and
dec
arpl
jp
mov
mov
push
jno
ror
xchg
leave
imul
je
pop
mov
or
inc
adcl
shll
ret
xor
pop
cmp
push
dec
push
mov
dec
xchg
outsl
aad
nop
stc
loop
stos
pop
daa
and
or
insl
jmpw
adc
sti
or
loopnew
dec
or
loop
mov
cmpsl
mov
fmull
mov
and
xchg
and
imul
repz
adc
flds
mov
push
adc
xchg
jo
roll
cmp
clc
lahf
sub
adc
pushf
sub
jns
fs
stos
pop
jnp
imul
faddl
ret
js
stos
jns
fidivrs
push
mov
cld
imul
pop
enter
std
xchg
push
push
int3
insb
mov
enter
inc
add
lea
mov
loope
lods
sti
pop
or
push
push
mov
mov
mov
imul
xchg
add
mov
popa
or
adc
mov
mov
xlat
lock
pop
add
les
inc
inc
cwtl
mov
sbb
xor
scas
push
mov
hlt
iret
fstl
inc
cmc
inc
xor
cmp
popf
sbb
loopne
mov
pop
rcrl
mov
insb
mov
cltd
mov
or
lea
loop
aas
imul
jno
adc
mov
pop
ja
sub
insl
popa
xchg
xor
insl
inc
or
enter
push
sub
jmp
out
lret
pop
rcrl
ljmp
mov
gs
push
inc
inc
mov
adc
lahf
jmp
push
daa
jle
js
push
movsb
inc
ffree
std
mov
lods
scas
outsl
cmp
es
dec
nop
loopne
mov
xchg
insb
or
jnp
xor
xor
jl
adc
insl
sbbl
scas
push
inc
dec
negb
sub
lock
cmpsb
test
xchg
movsb
push
sbb
dec
xor
lods
enter
pop
test
repnz
xchg
pop
aad
xchg
xchg
popl
mov
xor
fnsave
sub
mov
cltd
add
nop
push
popf
or
fcoms
push
sar
mov
sub
aaa
and
lcall
sbb
out
lea
enter
sbb
or
mov
enter
mov
lcall
jns
mov
xor
sbb
or
mov
out
sub
or
lcall
daa
filds
jmp
add
outsl
fimuls
scas
sbbb
jmp
jecxz
adc
push
outsl
lcall
loope
lret
mov
mov
aas
pop
sbb
sbb
roll
fistps
mov
inc
imul
mov
adc
dec
popf
mov
jmp
rcl
mul
out
push
ss
xor
jecxz
mov
jae
dec
push
xchg
mov
rolb
lret
das
pop
lods
stc
cmpb
aad
push
aas
sub
daa
cmp
xchg
mov
xor
mov
pop
das
movsb
sti
dec
and
mov
add
or
repnz
shll
iret
sbb
stos
ds
jne
mov
bnd
cmp
ljmp
aas
xor
jbe
add
sahf
int
pop
mov
jle
or
testb
call
mov
sbb
pop
sub
inc
out
xor
xor
push
jecxz
ret
mov
ret
faddl
iret
out
adcl
rorl
iret
cmp
mov
dec
mov
sub
adc
jecxz
xchg
and
inc
data16
in
fiaddl
push
mov
xchg
scas
fstpl
scas
mov
stos
adc
std
pop
fcomps
mov
out
mov
stos
and
xor
sbb
jns
cmp
out
popf
jne
popf
insb
int3
pop
fimuls
xchg
pop
mov
lock
push
or
lea
in
jg
movsb
lea
jge
push
jno
lret
repnz
xchg
pusha
mov
adc
jno
xor
jnp
adc
fdiv
in
sub
loopne
testb
dec
adc
or
xor
cs
fcomip
jmp
sbb
shlb
mov
jns
ja
andl
aad
jns
mov
movsl
in
mov
sbb
shrb
mov
and
lods
push
loope
mov
je
repz
inc
push
lods
out
mov
aad
out
mov
push
neg
and
dec
shll
fisubs
outsl
push
mov
push
push
rcll
test
pop
lea
fimull
les
jo
scas
cmp
nop
sub
dec
cmpsl
shlb
mov
call
adc
cmpsb
jae
decl
adc
push
jb
mov
das
insb
in
inc
mov
mov
add
dec
mov
filds
mov
sbb
or
dec
lods
fidivl
dec
push
push
outsl
sahf
lock
ds
fadd
xchg
aaa
insl
fisttpll
mov
xor
pop
or
pop
sbb
fdivrp
clc
addr16
push
icebp
fsubs
test
arpl
popa
jmp
mov
subl
ljmp
pusha
cmp
enter
push
dec
call
xchg
mov
fs
shrl
lahf
mov
xchg
lahf
test
and
pusha
cmp
scas
xor
rcl
mov
fisttpl
outsl
pop
xor
inc
dec
add
pop
jmp
inc
sub
mov
aam
jno
repz
ret
cmpsb
lea
ljmp
cmp
pop
push
add
cmp
sub
jg
arpl
jb
icebp
and
cmpsb
xchg
mov
lock
stc
xchg
pop
movsb
nop
je
cmp
insb
inc
mov
push
jecxz
lahf
js
cmp
pop
add
cld
idivb
mov
fsubr
xor
xchg
jbe
adc
ja
push
xchg
sarl
add
rcr
push
popf
sti
add
in
and
cmp
mov
aad
add
bound
xchg
mov
out
push
mov
fdivs
les
xor
mov
inc
push
rclb
mov
and
jne
cmp
insb
dec
pop
or
sub
lods
mov
sahf
or
lcall
ja
cmp
lret
nop
cmp
xlat
add
sbbl
ljmp
lcall
or
ljmp
das
or
lret
and
jne
ret
xlat
mov
iret
stos
dec
shll
xchg
fidivrs
add
lahf
jb
rolb
sbb
adc
sahf
lds
sub
pop
adc
int
loop
mov
sub
lret
jbe
mov
lock
mov
cmp
fidivs
add
mov
aad
out
mov
popl
jmp
insl
xor
sbb
dec
sub
mov
js
mov
pop
popa
fsubs
imul
bound
stos
cmpsb
jecxz
push
andb
xchg
pop
testb
add
leave
adc
jmp
ficompl
cmc
enter
sub
pushf
outsb
jmp
jle
sbb
stos
pop
mulb
mov
setg
push
stos
test
push
push
dec
sub
add
outsl
popa
stc
pop
out
mov
repz
cmc
stos
idivb
push
stc
mov
test
popf
and
test
xor
cmp
adc
into
ss
xor
ret
inc
dec
in
add
lret
push
imul
arpl
mov
ds
add
sub
lods
movb
dec
imul
test
cmp
pushf
push
adc
scas
xchg
xchg
in
mov
cmp
mov
adc
orb
xchg
xchg
loop
push
rorb
ljmp
cmc
fstpt
cmp
iret
push
data16
outsl
test
xor
push
lcall
les
push
mov
mov
in
cltd
cwtl
xor
xchg
psubsw
imul
xchg
ja
in
arpl
push
mov
cli
lcall
sarl
add
dec
xor
mov
and
in
loope
cmc
sbbl
test
add
cli
hlt
call
imul
jg
inc
push
iret
push
mov
or
fyl2xp1
or
push
test
xor
clc
aas
add
ret
insl
in
loop
test
xor
or
jae
jno
dec
adc
shll
popf
jb
test
pop
outsl
push
dec
es
inc
or
adc
push
jo
rorb
jmp
dec
pusha
lret
nop
arpl
mov
push
xor
pop
adc
inc
jp
mov
in
repz
mov
inc
cs
lods
and
xchg
pop
mov
dec
xchg
mov
andb
sahf
inc
cmpsb
sub
or
aam
sahf
cmpsb
into
jmp
ja
test
aam
out
sti
les
lcall
or
mov
and
inc
je
frstor
mov
push
lock
or
and
int
jp
mov
pop
dec
sti
push
push
adc
pop
add
ret
lahf
jno
rol
cs
sahf
push
std
loope
outsb
add
xchg
fnstenv
adc
hlt
rorb
mov
shl
or
rol
pop
mov
cmp
aas
sub
arpl
in
daa
hlt
adc
sub
orl
dec
movsl
and
lods
dec
dec
lea
call
inc
sub
xchg
hlt
and
pop
int
shl
in
or
fprem
sub
push
cmpsl
mov
and
sbbl
test
test
xchg
cmp
sbb
clc
xchg
js
mov
aad
sbb
jecxz
jmp
add
cmp
std
pop
dec
mov
adc
ret
add
sub
je
call
pop
add
stc
or
adc
dec
les
mov
push
fwait
mov
jmp
dec
cmp
pop
sub
dec
dec
mov
fdivs
xor
xor
pop
push
out
adc
xor
mov
sbb
shl
pop
roll
xchg
inc
enter
iret
adc
jno
push
inc
xchg
shlb
mov
ret
fstps
fistl
int
sub
mov
fstps
push
pop
xchg
jae
notl
mov
pop
in
int
inc
xchg
scas
sub
add
and
cmc
shrl
icebp
cwtl
dec
ret
pop
fsubp
addr16
push
jnp
xchg
pop
lahf
push
pop
inc
push
cmp
cwtl
ds
inc
out
out
adc
add
lcall
pusha
ss
ret
jl,pn
cmpsb
push
out
or
xchg
add
inc
and
mov
fs
add
adc
ja
xchg
pop
mov
add
testb
cltd
xchg
sub
stos
add
mov
lcall
jne
stc
push
ds
pop
dec
lods
xchg
es
adc
out
stc
push
mov
lea
sti
insb
sbb
dec
ficoml
jle
xchg
fisttpll
xchg
repz
loopne
xchg
sub
test
jle
push
pop
int
dec
xlat
dec
std
xchg
jae
loopne
lcall
in
movl
shrb
mov
out
out
and
shl
fidivrs
add
jbe
mov
push
ljmp
fmuls
cli
add
inc
cmp
popl
dec
add
adc
mov
mov
dec
int3
aas
stos
test
add
cs
cmp
cmp
push
stos
sar
jmp
stc
adc
popa
jb
jne
cmc
dec
sti
imul
lret
dec
inc
dec
mov
mov
or
xor
imulb
fildl
dec
outsl
addb
imull
pop
std
push
pop
push
mov
shlb
testb
xchg
mulps
test
fdivrs
pushf
pop
xor
psadbw
jnp
or
addr16
je
pop
adc
adc
ds
push
jecxz
mov
shll
adc
mov
jno
pushf
ss
mov
loope
jno
mov
xor
and
xchg
pop
ret
mov
aad
cli
movsb
sub
cmp
sahf
movsl
jnp
push
inc
adc
adc
push
push
xor
inc
dec
data16
dec
outsl
out
sub
lret
loop
into
cmp
orl
in
sub
mov
inc
jbe
aad
gs
mov
mov
mov
sbb
loop
lock
stos
ret
sbb
adc
pop
sbb
addr16
test
loopne
aad
cli
fldt
fwait
outsb
out
leave
in
inc
lock
outsb
dec
daa
outsb
or
dec
mov
mov
in
into
das
outsl
sbb
mulb
push
out
push
xchg
add
cmp
jp
sbbl
aam
dec
fdiv
out
push
push
pop
sbb
aad
add
mov
cmp
out
loopne
dec
dec
repnz
add
add
dec
or
lea
cwtl
add
adc
fldcw
test
sbbb
stos
add
scas
lea
cld
mov
jp
sbb
mov
adc
jae
loop
ficoms
sub
ficomps
push
leave
outsl
jge
bound
mov
mov
gs
pop
xchg
scas
jb
repz
in
xor
mov
ja
je
inc
mov
push
sbb
jne
mov
xor
outsb
testb
dec
xor
mov
outsb
xchg
sbb
enter
sbb
xor
jns
push
sbb
nop
ret
or
pop
sbb
and
inc
adc
mov
std
inc
adc
xchg
adc
sbb
rorb
mov
popf
hlt
pop
pop
pop
test
ret
fidivrl
xchg
std
inc
xchg
loopnew
imul
mul
mov
and
sub
dec
xchg
call
in
mov
mov
out
pop
pop
pop
out
sbb
ret
dec
jp
mov
mov
push
call
mov
jecxz
sbb
int3
push
sub
bound
adc
xor
not
sbb
push
jle
jg
in
test
aad
out
push
js
scas
shll
in
nop
leave
cltd
mov
je
ret
sbb
sub
imul
in
push
inc
sahf
fs
pop
bound
push
ret
dec
pop
dec
ja
or
pop
fiaddl
dec
add
inc
repz
js
mov
dec
out
push
dec
mov
push
rolb
cmp
xor
cmp
ja
rcrb
test
mov
ja
imul
outsl
mov
xchg
sub
stos
push
dec
aam
xor
iret
ja
insl
scas
sub
jae
test
pop
cmp
fistps
adc
insb
adc
or
in
popf
aaa
outsb
adc
imul
push
sub
cmp
test
loop
out
adc
add
sbb
xchg
mov
jb
hlt
jg
gs
pop
test
std
push
fildll
cmc
out
leave
sbb
sub
fistl
insl
xor
sbb
cwtl
mov
sub
xor
jne
jmp
ret
mov
std
pop
pushf
lods
mov
scas
outsb
or
pusha
fildl
js
fs
movsl
pusha
xchg
sbb
in
cmp
dec
ret
sbb
enter
xchg
call
mov
sti
mov
in
in
mov
cli
dec
inc
idivl
mov
nop
xchg
mov
dec
into
xor
jmp
test
loop
inc
imul
push
ds
add
jbe
ret
fcmovbe
jae
inc
mov
inc
ja
in
mov
outsl
clc
sahf
dec
dec
xchg
dec
push
lds
jnp
mov
mov
fwait
xor
mov
sti
ret
cld
pop
pop
cmp
pusha
push
cs
push
sub
pop
xor
mov
leave
lret
mov
push
mov
or
sbb
sub
das
and
mov
mov
hlt
xchg
add
lea
adc
pop
cmc
adc
cltd
popf
cmp
out
jo
jg
adc
cmp
in
inc
sti
ljmp
and
insl
lret
add
push
rcrl
dec
adc
insl
jb
cld
mov
push
scas
xchg
aam
fsubr
inc
sbb
adc
xor
mov
sub
sub
xchg
sbb
cmp
imul
mov
mov
stos
iret
or
popa
dec
cs
dec
cmove
mov
dec
xorl
in
ficoml
imull
adc
and
sub
ret
push
fwait
test
rcrl
inc
hlt
sarb
lods
push
pop
add
lock
adc
mov
or
push
cs
cli
jle
push
imul
xchg
aaa
cmp
lock
les
bound
aad
fimull
mov
mov
int3
jp
rol
pop
mov
les
sahf
call
ffreep
jle
aad
enter
mov
push
fldenv
aad
mov
adc
pop
jo
movsb
add
in
push
repnz
jbe
pusha
pop
sbb
outsl
lahf
mov
lret
cwtl
arpl
sahf
dec
ret
arpl
inc
arpl
fmull
fsubl
xorb
dec
pop
jne
in
negb
mov
xor
ret
xlat
lods
pop
cmp
daa
dec
icebp
addb
cs
icebp
repz
sub
andl
repz
popf
mov
cld
xchg
loope
xchg
push
or
sbb
jo
mov
inc
lds
or
test
jl
mov
xchg
xor
jbe
out
ja
or
aaa
scas
mov
add
aas
out
mov
test
flds
stc
pop
ljmp
push
scas
pop
mov
dec
dec
mov
pop
iret
sbb
sahf
push
sub
mov
and
xchg
cwtl
mov
xchg
popa
push
add
and
jecxz
dec
pop
cmp
inc
andb
jmp
xchg
xor
sti
add
jae
inc
mov
in
push
sub
sbb
push
mov
pop
mov
sahf
addl
mov
sbb
push
hlt
push
add
fcompl
dec
enter
inc
xchg
inc
adc
rcrb
mull
mov
xchg
cld
in
mov
mov
adc
mov
mov
in
push
sti
pop
add
cs
dec
test
sub
jge
icebp
push
mov
sbb
arpl
push
in
mov
jb
in
das
xor
and
jb
or
test
mov
and
adc
jmp
enter
enter
rolb
stos
push
mov
std
shrl
jg
nop
aas
mov
movsb
sub
fcmovne
xchg
call
ja
mov
pusha
inc
xchg
adc
stos
or
xchg
adc
pushf
jns
jno
jne
xor
lea
pushf
repz
out
scas
inc
repz
cmp
push
push
faddl
fdivrp
das
lcall
shrb
divl
roll
cmp
dec
repz
adc
mov
jl
aad
dec
and
pop
cmp
inc
push
jmp
and
sbb
push
xchg
imul
sub
cmpsb
sbb
dec
push
mov
mov
fidivl
jbe
adc
push
mov
inc
dec
rep
loop
ret
or
rcll
cmp
dec
lds
cmp
test
xchg
lods
pusha
xchg
lods
mov
cmp
sarb
push
and
jno
sbb
mov
jb
scas
xor
mov
mov
scas
xlat
mov
pop
xchg
push
dec
dec
popf
mov
sbb
lret
xorb
inc
cli
push
loop
pop
add
mov
sbb
pop
dec
push
or
daa
fists
lods
push
push
pop
mov
aas
sbb
fisttps
lcall
adc
mov
dec
scas
and
inc
test
add
repnz
sbb
jp
lcall
jle
add
cli
std
mov
push
cld
dec
cmp
and
aam
pop
clc
mov
popa
rolb
xor
aad
inc
pushl
imul
push
adc
mov
call
fcom
mov
mov
mov
ss
sbbl
jecxz
ficomps
cltd
sub
stos
aad
leave
aaa
adc
fsts
mov
cmpsb
xchg
or
xor
mov
or
mov
loop
cli
lods
sub
push
pop
adc
and
mov
xchg
sbbl
xor
adc
fstl
xchg
sub
outsl
out
fsubs
lahf
in
push
out
inc
pop
loope
push
repz
xor
pop
dec
xor
arpl
lret
pop
subl
fadds
sub
clc
xchg
or
and
add
int3
mov
jns
int
pop
xor
adc
test
add
notb
push
cmpsb
mov
mov
fsubrl
andl
mov
clc
xchg
out
mov
fwait
shr
in
push
lds
fmuls
xchg
mov
mov
filds
mov
lahf
int
into
bound
adc
sub
jbe
or
jns
and
mov
rolb
lret
jno
movsl
cli
loopne
cmp
xor
enter
lock
aas
ljmp
lahf
out
push
add
lds
rcrl
push
xor
shrl
dec
sbb
jle
push
and
pop
cmovs
rcrb
xlat
mov
cmp
rcrl
clc
movsb
loop
pop
push
xchg
pop
mov
out
mov
insl
in
in
adcb
repz
rcr
das
movsb
push
jecxz
and
sbb
andl
pop
inc
test
out
jp
inc
or
movl
jno
bound
dec
movsl
cltd
push
pop
pusha
and
popf
add
lods
lea
mov
ds
leave
or
outsl
pop
add
xchg
rol
ret
xchg
or
arpl
inc
xor
inc
loope
std
jbe
jb
pop
adc
jl
xor
jle
in
aam
lods
and
adc
fnstsw
cld
iret
scas
out
sbb
cltd
mov
mov
test
pop
je
cwtl
cltd
lds
leave
ds
cmp
jae
pop
std
fndisi(8087
shrb
push
lcall
xchg
iret
jnp
inc
lret
and
js
lahf
mov
push
ja
or
inc
je
leave
xor
cltd
sub
outsb
sbb
pop
adc
addr16
pop
xchg
mov
mov
mov
shl
sbb
lea
mov
inc
cmp
xor
out
inc
imul
pop
mov
mov
cmp
xchg
xor
int
inc
testb
mov
xor
sub
mov
jg
push
jae
sub
out
std
mov
pop
cmp
or
sti
and
sbb
aad
fldenv
loopne
mov
push
xor
shlb
cmp
sbb
pusha
cltd
mov
cmp
push
test
icebp
pushl
xchg
clc
hlt
cmp
add
movsl
jb
mov
out
jmp
fwait
in
push
jge
inc
stos
leave
push
andb
dec
cmc
mov
push
lss
into
cmc
mov
testl
pop
cmp
pop
mov
lods
enter
jmp
mov
rol
cmp
hlt
mov
jbe
dec
and
pusha
and
call
outsb
add
dec
jl
xor
xor
pop
pop
sti
pop
xor
lds
loopne
loopne
shll
es
test
rorb
sub
push
xchg
loopne
add
push
cmpsl
adc
dec
jle
mov
je
pop
dec
outsb
fbstp
cmp
pop
fwait
outsb
arpl
pop
mov
or
pop
cmpsb
in
out
mov
push
les
pusha
mov
cmc
push
inc
les
iret
pusha
and
int3
mov
mov
sbb
jle
fsubs
aaa
xchg
pop
js
addr16
sbb
and
push
idivl
insl
xchg
rclb
xchg
add
movsb
ss
ljmp
fimuls
mov
sarb
rcll
pushf
jbe
adc
es
dec
sbb
test
les
xor
or
frstors
jns
adc
int
lcall
aaa
mov
dec
test
int3
mov
into
jecxz
push
and
mov
add
dec
ss
mov
xchg
outsb
push
jle
sbb
addb
fcoms
fnstenv
xor
gs
cmp
xorl
add
test
add
mov
in
test
inc
sarl
mov
cwtl
dec
idiv
jp
test
pop
mov
enter
out
outsb
fistpll
mov
mov
cmpsl
and
testb
ja
int
subb
test
lds
sub
adc
sbb
and
jno
scas
sbb
ficoml
and
sbb
ret
or
pop
ds
insb
mov
bswap
mov
stc
cmc
test
in
pop
ljmp
push
mov
mov
pop
sahf
dec
addr16
iret
ficoms
cld
jae
jno
jno
xorl
dec
pop
cmp
faddl
or
sub
jne
add
scas
cmp
jg
loop
cmc
lret
adc
pop
mov
into
je
cli
lret
imul
push
test
in
cld
jg
push
jmp
push
mov
incb
in
pop
ja
push
repz
push
jb
mov
popf
cmp
xchg
adc
xor
aam
test
jl
inc
jbe
aam
out
clc
lds
add
aaa
xchg
lods
adc
sub
push
dec
fsts
dec
inc
mov
inc
test
fisttps
mov
jbe
rcrl
daa
insb
sub
ljmp
push
sarb
sbb
sarb
xor
je
incb
xor
mov
loop
push
test
jle
fiadds
lret
and
sub
das
fcmovb
movsl
jae
sub
mov
sbb
cltd
push
mov
jmp
nop
fiadds
es
pushf
inc
push
or
sbb
xor
inc
xchg
jg
or
xchg
jae
fsts
pop
xor
mov
jl
push
aaa
xchg
jg
mov
xor
xor
mov
insl
lret
sbb
pop
rclb
bound
jnp
shll
sarb
dec
clc
pop
loop
cwtl
or
loope
push
jae
dec
xchg
scas
push
sbb
repnz
push
mov
test
inc
or
add
roll
add
dec
sbbb
in
addr16
dec
and
out
adc
mov
jmp
mov
stc
inc
mov
in
add
inc
out
xor
shl
add
jns
mov
in
mov
mov
bts
ret
or
enter
daa
nop
pop
add
aad
loop
dec
xrelease
mov
mov
mov
push
or
xchg
add
ds
cwtl
hlt
mov
jb
mov
sbb
pop
hlt
lret
xlat
and
lahf
sbb
pop
mov
inc
adc
cltd
cmpsb
push
xchg
or
cmpsb
sar
jmp
inc
dec
sbb
xlat
or
add
jo
xchg
add
int
push
cmpsl
lret
leave
stc
add
fidivrl
jl
cld
sbb
mov
mov
xor
stc
jge
sbb
sub
lret
sub
cwtl
fnstenv
gs
mov
cmp
pop
xchg
fsts
addb
repz
lahf
mov
popf
or
sbb
roll
test
sbb
stos
out
mov
xchg
out
ds
ret
daa
std
mov
mov
ja
fdivs
scas
ret
dec
cmp
add
inc
fprem1
adc
inc
xor
mov
mov
cmp
into
add
jb
adc
xor
scas
push
mov
push
test
push
push
mov
mov
mov
insl
mov
cmp
icebp
xor
xor
push
pop
push
cmp
test
out
fmuls
ret
mov
dec
inc
aad
shll
pusha
mov
mov
add
cmp
sub
cmp
push
jb
inc
in
or
push
sbbl
cs
aam
sbb
pop
loopew
test
push
ljmp
shrb
push
sti
jns
int
mov
repz
pop
lahf
outsb
inc
mov
lea
mov
dec
data16
dec
cmpsl
daa
stos
add
pop
add
ret
xchg
cmp
pop
insb
adc
out
mov
pop
xchg
inc
adc
mov
mov
and
mov
fisttpll
leave
mov
mov
fisttpl
insl
pop
cmp
sub
repz
mov
dec
mov
fmuls
push
adc
sbbb
aas
sub
and
insl
sub
mov
dec
loope
push
insl
je
movsb
sub
cmp
out
adc
or
ja
scas
or
out
sbb
mov
mov
xchg
fs
outsb
sarb
jae
jno
scas
test
imul
inc
inc
shlb
jae
mov
push
xchg
xchg
push
outsb
xchg
loop
adc
cli
fidivs
xor
gs
mov
xor
jb
repz
mov
push
and
push
lds
adc
lahf
ljmp
and
mov
pop
leave
add
adc
adc
mov
in
ds
es
aaa
ljmp
iret
das
xchg
rorl
subb
xchg
test
fdivr
je
xchg
mov
dec
fnstsw
dec
ljmp
push
movsl
pop
aas
pop
pushf
ja
lods
sahf
shll
aad
and
mov
in
pop
push
sti
stos
mov
pop
loop
lret
aas
push
lods
stos
outsb
pusha
pop
and
jnp
mov
repz
mov
or
xchg
shrb
shll
xchg
insb
ficompl
dec
idivl
cmc
push
fwait
cmp
pop
or
insl
into
in
mov
pop
add
int3
sbb
push
aam
xor
jno
cmpsl
mov
and
cld
push
je
mov
or
dec
sbb
xchg
mov
mov
shll
int
ljmp
sbb
mov
pop
jno
xchg
pop
sub
sbb
movsl
subl
rol
lods
xor
out
xor
mov
inc
aas
test
adc
roll
sub
or
sar
jmp
repnz
inc
push
jne
fcoml
or
ret
ja
sub
fstpl
adc
add
mov
mov
mov
xlat
out
adc
sbb
jb
leave
sahf
xchg
scas
adc
fldt
jg
insl
mov
lret
movsb
xor
shrl
fnstcw
dec
and
or
push
cmp
ret
add
movsb
andb
negb
sub
xchg
or
clc
out
bndldx
dec
jge
clc
adc
daa
lds
loope
push
fistps
or
rcrl
push
mov
jl
insb
mov
sub
ficompl
dec
inc
popf
jmp
leave
ret
or
ja
mov
pop
imul
xlat
mov
sub
mov
gs
and
xlat
jb
aas
mov
cs
pop
add
and
sub
sbb
fistpl
fwait
inc
sbb
sbb
ljmp
inc
pop
sbb
fwait
adc
adc
lock
or
mov
mov
push
mov
int
cmpsb
fistpl
lcall
test
pop
dec
nopl
push
je
scas
pop
inc
cmc
jmp
gs
fisubl
pop
in
xlat
lods
dec
sub
mov
push
pop
shll
dec
aad
clc
sti
test
hlt
iret
mov
xchg
jle
add
clc
push
shll
das
or
loop
push
fsts
inc
jle
in
push
push
subb
lds
aad
cmpsb
fwait
mov
fistps
dec
jmp
push
nop
out
ljmp
test
loope
pushf
jne
push
cld
stos
jl
int3
push
repnz
lods
mov
ficoms
dec
imul
jle
mov
sti
dec
push
or
or
mov
add
add
inc
iret
adc
adc
adc
sub
loop
pop
hlt
cli
cmp
loop
jbe
jbe
pop
mov
data16
aam
out
popf
in
xor
movl
pop
fdivrs
mov
int3
fisubrl
push
shlb
movsl
imul
mov
subb
xor
pop
dec
add
jno
popa
mov
or
or
gs
xchg
adcb
lcall
mov
int3
sub
sbb
adc
rdmsr
cld
cmp
icebp
jg
shl
js
in
push
inc
aam
pop
mov
or
xchg
pop
mov
shrb
xchg
out
or
loope
lds
test
popf
lcall
sub
adc
jmp
hlt
jnp
and
cmp
in
cmp
jle
enter
cltd
fwait
mov
sahf
cmp
outsl
jl
out
mov
xor
mov
push
xchg
xchg
mov
ljmp
loop
jbe
and
insl
add
pop
sbb
stc
fwait
xor
rorb
push
ret
scas
call
and
mov
subl
mov
fisttps
jp
movsl
xchg
push
les
cli
or
loopne
mov
inc
fnstenv
xchg
int
sub
loope
cmp
cmp
aas
mov
setnp
hlt
bound
sbb
hlt
outsb
xor
movsl
cld
gs
jnp
fstpt
push
cmp
pop
adc
repz
aaa
mov
push
sub
stos
inc
adc
orb
out
jg
add
lret
dec
push
cmp
shll
sbb
inc
push
pop
outsb
add
lahf
imul
stos
sarb
push
cmpsl
ss
jo
mov
lock
mov
mov
sbb
pop
das
and
scas
std
inc
jmp
js
mov
orl
fstps
or
and
xor
inc
mov
mov
fs
loopne
lahf
lea
mov
int
pop
andl
lods
iret
cwtl
sub
pop
pop
int
ret
test
inc
out
jbe
loope
shrb
xchg
push
cmc
ret
pop
adcl
popf
xor
imul
mov
fildl
icebp
push
dec
imul
mov
insl
pusha
fwait
inc
cmp
push
mov
pop
jge
cmp
iret
push
xchg
loopne
popa
outsb
jns
mov
stos
jns
lock
insl
mov
or
sti
insl
insb
pop
sub
insl
fwait
jge
sbb
jae
ficoml
rcrl
mov
fisttpll
mov
es
js
movsb
in
inc
dec
popa
or
sub
test
out
dec
testb
rcl
cmp
mov
jl
cmp
and
mov
out
int
cmp
cmp
mov
rclb
mov
pop
fwait
and
popf
sbb
push
xchg
xor
popa
shrb
fists
xor
bound
inc
rol
mov
dec
push
outsb
imul
xchg
dec
stos
testl
add
outsl
shrl
mov
push
mov
mov
out
jnp
pop
cmp
add
je
in
mov
lods
xchg
movsl
xorl
js
dec
lret
jae
lret
in
nop
icebp
ret
popa
xchg
pusha
fbstp
mov
dec
lret
loope
mov
lcall
shll
inc
cmp
adc
sub
outsl
xor
pop
pop
cltd
xor
dec
repz
or
pop
mov
mov
xor
sbb
pop
cltd
xchg
pop
push
dec
lahf
xchg
sti
sbb
jno
pop
fcoml
out
adc
pop
dec
and
sbb
mov
rcl
mov
outsl
sbb
mov
dec
daa
mov
fs
test
imul
jp
cmp
cld
sub
lret
pop
cld
jae
and
mov
xor
or
push
pop
and
push
or
sbb
faddl
popa
jno
mov
rorb
stos
mov
inc
inc
call
stc
jg
movl
dec
test
xchg
jmp
das
data16
adc
xchg
addr16
sbb
mov
aas
stc
mov
aam
cmp
cmp
outsb
test
and
pop
sahf
sub
out
inc
jp
aad
aaa
js
xchg
movsl
ss
in
sbb
mov
dec
fcom
mov
int
sub
inc
iret
mov
mov
pop
fadds
sub
les
test
sub
aas
mov
pop
dec
inc
pop
stos
mov
push
mov
sub
jmp
subb
cmp
pop
mov
adc
jbe
repz
push
lock
or
adc
ficoml
and
or
rcrb
mov
nop
fmul
push
sbbb
or
xchg
push
sub
arpl
sub
sub
adc
aam
aaa
ss
arpl
in
ja
xchg
into
xor
pop
dec
je
push
xchg
daa
es
mov
push
stos
add
and
mov
data16
out
lods
ror
xlat
jne
ret
fcmovnb
inc
adc
xor
imul
into
ret
bound
push
jbe
fisubl
pop
mov
xchg
dec
xor
in
push
fisttpll
sbb
out
fnstenv
loopne
sub
loopne
xchg
cli
cld
aaa
mov
jle
xor
push
jmp
mov
pop
std
push
jecxz
lcall
or
js
repz
inc
jb
in
and
xlat
lods
mov
int
out
jge
inc
movl
stos
mov
pop
xchg
or
mov
adc
lret
pop
in
sbb
inc
push
cli
in
mov
sahf
out
push
sub
mov
iret
inc
rcr
dec
push
outsb
push
inc
push
mov
xlat
mov
xchg
setno
bound
fdivl
push
pop
mov
mov
pop
test
outsl
mov
mov
adc
xchg
loop
bound
pop
pop
pop
or
lods
movsb
push
daa
inc
push
xchg
push
xchg
xchg
imul
jl
dec
fidivl
fcompl
xor
lods
cmpsb
dec
and
sub
mov
out
dec
mov
cmp
xor
data16
or
cwtl
ja
cltd
adcb
xor
int
sti
fstp
imul
cmc
xlat
pop
shrb
cmpsb
repz
xor
nop
push
pop
rorb
or
cmc
xchg
cmp
movsl
decl
rcrl
lret
pop
es
adc
popa
outsb
aas
sarl
push
sahf
aaa
add
jle
sub
ss
mov
jmp
sbb
jnp
jnp
mov
sub
add
jmp
loope
jg
push
test
sbb
sti
jns
lods
sbb
or
xor
in
push
pushf
cltd
cwtl
xchg
push
xchg
sbb
insl
addr16
test
mov
in
push
lock
mov
iret
imul
mov
icebp
xchg
pop
dec
sub
and
mov
sub
adc
je
cmp
insl
pop
aad
test
jne
jg
pop
outsl
decl
xchg
ljmp
mov
sub
std
push
mov
shrb
fcompl
adc
and
mov
sarl
jo
add
push
gs
sbb
add
cltd
sti
imul
inc
ret
pop
inc
inc
add
call
iret
cmpsl
loope
inc
ljmp
xchg
add
lret
dec
adc
repz
pop
sahf
xchg
jle
and
fstpl
jno
ds
jnp
testb
xchg
sbb
xchg
pop
sbb
sub
enter
std
pop
sbb
vpsrlw
inc
mov
dec
sub
sub
inc
xor
mov
xchg
rcrb
fstpt
rclb
movsl
sbb
ret
dec
push
cltd
fsubs
or
push
out
xlat
iret
pusha
scas
les
xor
push
xor
push
add
nop
incb
lcall
pop
push
stos
mov
push
xor
lea
mov
fs
loopne
inc
mov
mov
dec
and
cmp
ljmp
and
xchg
add
dec
or
push
adc
mov
or
mov
push
pop
push
out
aam
sbb
cmp
out
addb
imul
out
xor
jns
sbb
cltd
fcmovu
cmp
cmp
shll
rolb
vunpckhpd
xorb
jae
mov
aam
aaa
dec
rcr
std
mov
add
sub
pop
adc
adc
add
inc
rorb
mov
cmp
aam
ljmp
insb
cmp
sub
mov
adc
out
aas
imul
aam
add
sbb
xor
add
sbb
jle
dec
aaa
pushf
push
aad
lods
sbb
ret
xlat
adc
push
shlb
lahf
dec
pmulhw
fldenv
int
jge
xchg
iret
call
xchg
cmp
cmp
mov
pop
dec
loopne
imull
mov
fnsave
loop
lret
mov
rorb
daa
mov
xchg
inc
out
inc
mov
mov
mov
rclb
jne
inc
xchg
inc
mov
lcall
add
aam
fdivrs
rcll
idivb
imull
pop
mov
mov
sub
xor
and
js
cmp
push
sub
add
jecxz
push
and
aad
sbb
insl
jp
push
insb
aas
jp
aaa
jmp
dec
mov
repnz
dec
add
add
push
add
std
mov
pop
xchg
ret
cmpxchg
mov
and
xchg
jp
pop
push
enter
pop
fsubrl
dec
addr16
cld
popa
xchg
mov
adc
lea
ds
subl
push
js
inc
sub
sarl
nop
addr16
lods
popa
and
iret
cmp
xor
inc
mov
adc
or
cs
add
lods
xchg
cmp
and
inc
inc
out
cmp
bound
cmp
mov
or
cmp
fnsave
mov
in
insb
cmp
push
pop
jg
pop
ljmp
mov
xchg
xor
bound
xor
sbb
or
push
and
jns
movsb
mov
jns
xor
mov
and
pop
cmc
pop
scas
pusha
and
aas
out
loop
jno
arpl
fdivrl
popf
push
jbe
leave
nop
rcrb
pop
xor
pop
adc
cs
test
jp
decl
mov
fstl
stos
aam
push
rcll
jne
fs
sbb
outsl
dec
ljmp
push
leave
leave
je
mov
adc
add
sbb
dec
jns
mov
jns
nop
sub
push
in
fiaddl
add
popf
jnp
xor
in
mov
into
lea
outsl
ljmp
movsl
je
scas
aad
sbb
pop
mov
adc
cmp
add
testb
jle
arpl
sub
inc
adc
test
cltd
xor
mov
cmp
dec
mov
jp
scas
test
std
leave
orb
mov
xor
rorl
cs
mov
divl
mov
add
lret
dec
popa
lahf
int
fldl
cwtl
mov
inc
sub
cmpsb
xchg
sbb
lock
js
inc
es
sbb
xchg
jae
jp
and
jmp
xor
sbb
mov
es
ficoms
lea
loop
cmp
in
add
sahf
das
aas
aad
mov
pushf
mov
int
call
xchg
push
xor
adc
xchg
lret
stc
lods
fiaddl
pushf
xchg
pusha
imul
mov
fs
cmc
clc
jnp
inc
mov
out
add
ficomps
pop
out
out
fdivrs
add
arpl
cld
nop
ds
test
rol
adc
mov
dec
out
mov
cmp
push
mov
jge
jns
mov
mov
cmp
fld
aaa
adc
xchg
xor
in
cltd
lahf
int3
sbb
xchg
lret
popa
sub
xchg
mov
enter
div
nop
xor
cmp
loope
add
fistl
jnp
xor
xlat
iret
mov
adc
aad
mov
es
rcrl
in
adc
out
xor
pop
rdpmc
jne
andl
fidivs
pop
push
in
push
mov
pop
and
out
decl
dec
enter
sahf
movsl
jle
push
lahf
xor
bound
push
pop
xchg
int3
push
stos
push
push
mov
cmp
ffreep
fnclex
push
push
add
lcall
jo
out
jns
mov
shrb
mov
push
mov
fwait
cmp
push
in
adc
cmp
call
sbb
repnz
sbb
jae
dec
cmp
scas
pop
mov
or
inc
sub
dec
neg
fbstp
popf
movl
lcall
iret
popf
test
cwtl
mov
mul
fsubrp
fcomps
clc
imul
xor
inc
sbb
lock
jl
adc
arpl
cwtl
sbb
ss
subb
inc
shlb
dec
out
lahf
popf
out
loope
push
icebp
push
sbb
icebp
test
or
arpl
jmp
or
lret
iret
addr16
mov
push
orl
fildl
std
mov
dec
jne
and
and
dec
inc
push
mov
loope
pop
enter
insl
popa
icebp
push
adc
xchg
push
test
xchg
or
cld
mov
dec
test
mov
je
cmc
dec
pop
enter
and
ljmp
dec
fistpll
cmpsl
ja
call
sahf
mov
jmp
aam
cli
mov
sbb
mov
cmpsl
mov
repz
pop
inc
negb
push
fnstcw
push
adc
push
mov
ljmp
adcl
out
mov
add
data16
nop
jg
test
ds
jge
loop
xorb
mov
hlt
movsl
adc
xchg
fwait
push
stos
xchg
in
ds
add
push
ret
popf
pop
pop
and
pop
cli
lret
mov
mov
repnz
mov
pop
mov
out
cmp
test
push
sbb
sub
popa
popf
movsl
push
cli
adc
add
push
inc
ja
sahf
lods
jne
and
repz
cmc
rorl
test
mov
pop
aaa
pop
imul
lcall
fwait
inc
adc
test
add
jb
jnp
mov
xchg
sbb
gs
mov
jle
mov
push
add
and
push
sub
lcall
pop
cmpsl
add
and
mov
and
push
cmp
xor
movb
mulb
push
sub
cmp
fisubl
mov
mov
je,pn
mov
scas
lods
mov
ficoms
mov
jp
pop
popa
repz
and
mov
iret
fnstsw
sub
or
int
sbb
andl
adc
addb
cltd
cld
xchg
outsb
mov
add
addb
and
inc
mov
inc
insb
mov
int3
or
sub
icebp
call
mov
xchg
call
pop
dec
mov
xlat
mov
das
jns
jle
sti
loopne
push
sti
xchg
fdivrs
lods
jg
jmp
add
leave
pop
jl
hlt
into
cwtl
mov
sbb
pop
sbb
lcall
xor
dec
or
mov
sub
into
ret
test
aaa
push
inc
mov
and
jo
and
xlat
or
lock
mov
push
out
xchg
mov
loope
sti
addl
ja
adc
jmp
mov
data16
cmpsb
sbb
sbb
cmp
sub
inc
jmp
add
pushw
cmpsl
mov
mov
jp
xchg
rcrl
dec
clc
xlat
ficompl
jbe
flds
mov
gs
xchg
sub
jne
add
cmc
outsb
sbb
inc
inc
xchg
lret
lcall
and
cs
inc
xor
mov
sbb
dec
loop
mov
sti
dec
ret
add
pop
dec
sahf
dec
push
push
jnp
cmp
testb
xchg
jb
loop
fstl
cs
lds
or
repnz
leave
scas
pushf
rcll
xorb
stos
icebp
add
adc
jle,pn
fiaddl
mov
xlat
add
mov
pop
fbstp
xchg
imulb
xchg
test
dec
jg
sbb
sbb
fs
vorpd
inc
adc
jl
add
scas
outsl
jb
loope
add
orl
push
mov
add
enter
data16
daa
dec
add
clc
add
pop
lcall
fldt
dec
sub
jle
add
loope
adc
lret
jne
xchg
call
jge
scas
cmp
pushf
in
xor
mov
mov
dec
push
fcmovnu
xchg
mov
repnz
mov
cmp
aaa
cmp
bound
cmp
cltd
loope
dec
jge
movsl
adc
dec
add
pop
mov
test
jbe
mov
push
lock
and
imul
xorl
pop
out
loop
and
shlb
cltd
mov
mov
ljmp
add
dec
inc
jmp
outsl
repz
add
mov
dec
xchg
mov
outsl
ret
cs
adc
lock
sub
jl
sbb
xor
aaa
mov
inc
stos
inc
add
movsb
sbb
mov
clc
push
out
push
lret
adc
enter
and
jg
dec
cltd
cmp
clc
in
jb
xchg
inc
mov
hlt
xlat
sub
fbld
je
loop
inc
xchg
nop
out
je
imulb
out
sbb
inc
jne
pop
pushf
aaa
bound
push
add
mov
nop
hlt
inc
nop
dec
cmpsl
std
xchg
iret
shrl
iret
cmpsl
testb
sbb
fs
push
jb
jb
mov
or
mov
icebp
hlt
mov
inc
cmp
fistps
pop
cmpsl
adc
mov
cli
xchg
push
fadd
cwtl
out
dec
shrl
mov
les
cli
dec
jge
imul
sbb
jge
mov
jg
jl
xchg
xor
mov
pop
clc
mov
push
mov
stos
sub
pop
test
inc
lcall
subl
shlb
sbb
idivl
shrl
rcll
ret
inc
push
fs
add
hlt
test
xchg
push
jne
push
sub
adc
mov
repz
jmp
sahf
xchg
int
in
int
sbb
and
stos
imul
pop
outsb
aas
inc
and
inc
dec
ja
pushf
out
in
xor
pushf
and
lcall
sbb
xor
cmp
inc
jnp
push
sub
cmp
push
xlat
notb
lret
xchg
test
cltd
int3
jg
add
sub
mov
add
arpl
sbb
gs
fwait
arpl
addr16
enter
and
test
in
in
int
outsl
mov
cmpsl
aas
push
pop
xor
lea
xchg
push
lods
push
xchg
popf
int
sahf
pop
xlat
insl
mov
mov
dec
sbbl
xor
inc
js
mov
cmpsl
movsl
mov
mov
pop
loopne
insb
adc
ds
add
xchg
pusha
out
cmc
lcall
test
mov
jae
loopne
pushf
ret
shrb
push
push
aam
lock
rorl
lock
mov
adc
mov
jle
dec
or
xchg
imul
sbb
insl
scas
sbb
mov
sbb
mov
adc
or
lret
fisttps
adc
or
movsl
xor
mov
inc
or
hlt
adc
push
and
bound
sub
inc
mov
xchg
lcall
call
pop
cmp
sahf
repnz
push
cmp
lods
dec
insb
mov
iret
or
mov
inc
add
sti
std
jno
sbb
idiv
pop
loop
lods
xchg
and
cmp
dec
cmp
xchg
inc
xchg
aam
sbb
ss
mov
lods
add
adc
mov
fsts
fcmovnbe
adc
aam
jmp
sub
fldenv
and
scas
lods
and
repnz
pop
add
push
enter
sub
jecxz
into
popa
fs
mov
rorl
in
fstpl
pusha
es
ret
out
mov
jecxz
push
jp
add
out
jb
inc
pop
fnstenv
aaa
jb
xor
rcrl
rolb
ds
cmp
add
repnz
mov
imul
push
dec
test
gs
fnstenv
fistl
jecxz
int
vshufps
movsb
sub
sbb
xchg
fs
jno
mov
bound
out
cmp
dec
mov
psubusw
push
ret
jmp
insb
lods
lahf
jp
mov
stc
movsl
and
outsl
repz
mull
ja
mov
and
test
cwtl
dec
xchg
mov
dec
in
mov
js
out
insl
lahf
dec
fs
or
dec
xchg
xchg
dec
arpl
mov
xchg
cmc
add
hlt
pop
xchg
jmp
test
mov
sub
dec
fs
cwtl
cmpsb
out
push
frstor
cmc
int3
xor
xchg
pop
sbb
lods
and
mov
jb
mov
psadbw
or
push
dec
data16
aam
shlb
cmp
pop
stos
cltd
pop
je
mov
sbbl
pop
pop
movsb
test
mov
lods
inc
cltd
mov
ret
rclb
jb
dec
jne
pop
push
xorb
jo
mov
into
pop
sahf
cmp
cmpsl
push
pushf
mov
fnsave
add
push
sbb
inc
push
cmpsl
in
jg
and
add
lods
mov
xor
lret
insb
ljmp
fdivrl
test
fldt
inc
arpl
mov
mov
clc
lds
mov
push
pinsrw
pushf
mov
cmp
scas
add
adc
cltd
xchg
arpl
test
test
jo
mov
pop
mov
out
pop
out
inc
scas
jle
loope
fcompl
rcll
out
andb
add
mov
cmp
xchg
add
insl
daa
mov
pop
push
pop
xchg
bnd
push
mov
adcb
shr
lahf
incb
pop
mov
pop
lcall
xchg
inc
pusha
js
jge
push
dec
loope
cmp
xchg
icebp
xchg
shll
pop
cmc
adc
xor
daa
xor
pop
push
lods
das
cmpsl
xchg
aam
mov
jle
lahf
popa
scas
cmpb
push
add
shll
ret
push
mov
jno
enter
push
roll
out
aas
pop
out
outsl
jge
insb
aad
shll
aaa
inc
dec
mov
pusha
mov
dec
cmp
fs
loope
js
lret
clc
inc
imul
les
mov
cwtl
scas
out
loop
cmp
lock
ret
cmc
out
xor
push
adc
jns
and
inc
inc
jo
cmp
cmp
push
sbb
xlat
add
push
sub
clc
jo
xor
or
jle
enter
pop
subl
push
cltd
sub
mov
mov
pop
mov
sbb
aam
iret
push
adc
mov
or
adc
andl
xlat
adc
xchg
pushl
cmp
mov
data16
add
lods
jle
addr16
jb
pop
sar
or
mov
ljmp
sbb
cmp
sahf
je
sti
jg
jbe
adc
es
testb
pushf
cmp
enter
ret
pop
div
outsl
mov
pop
push
fldt
fistl
outsl
sbb
and
mov
dec
cwtl
imul
ss
es
pop
pop
add
es
sub
ret
rep
lock
sub
xchg
scas
mov
pop
or
sarb
mov
sub
cmp
or
aad
out
fcoms
mov
adc
fdivl
pop
mov
pop
jp
enter
lret
sbb
xor
std
popa
ret
pop
push
mov
push
push
sbb
fistpl
int
pop
push
sbb
mov
arpl
popa
arpl
test
fsubr
sub
lods
mov
adc
loopne
fidivl
sub
fs
push
jle
xchg
xchg
sbb
lods
ret
pop
add
jecxz
cmp
iret
push
xorl
lds
fistpll
sahf
add
cmp
out
xor
cmpsb
xorl
stos
cmpl
out
xchg
inc
sub
imul
push
scas
in
push
cmp
lcall
sub
outsl
shll
sbb
mov
inc
adc
add
jecxz
sbb
fistl
cmp
imul
scas
dec
insb
test
cmp
notl
fbstp
out
shrb
cmpsb
mov
into
aam
lahf
iret
icebp
mov
in
ficoml
add
icebp
mov
xor
out
repnz
iret
push
add
adc
inc
not
ljmp
push
xorb
sub
fdivp
xchg
scas
repz
mov
mov
lret
pop
sub
jb
dec
jae
notl
jle
pop
leave
shlb
mov
dec
hlt
mov
sbb
testb
out
push
nop
pushf
cmp
push
pop
ds
mov
adc
mov
lret
es
add
adc
and
in
xor
mov
sub
stos
xchg
or
and
and
and
push
sbb
out
push
cwtl
inc
icebp
or
pusha
fs
mov
jg
sub
aaa
xor
sti
dec
jp
mov
add
fistl
adc
cmc
lret
stos
sbb
dec
in
or
adc
add
imul
mov
and
es
mov
hlt
mov
mov
imul
fs
mov
in
lds
mov
out
out
out
sub
xor
dec
dec
jbe
shll
dec
sbb
out
push
xor
dec
insb
testb
xlat
mov
jmp
jl
jge
and
insb
stos
jno
pop
movsb
mov
jno
in
or
mov
lahf
in
mov
ss
stc
inc
xchg
jmp
fs
add
ret
xor
loopne
jns
fcompl
xlat
fidivrl
fldl
dec
orl
xor
or
lds
cmp
mov
into
cli
pop
mov
cmp
and
push
dec
sbb
int3
out
add
push
fdiv
pop
cmc
rcll
inc
push
outsl
lds
test
jae
xchg
xchg
and
sbbl
cmc
inc
jl
dec
stos
add
and
movsb
insb
mov
js
fcoms
dec
or
cmpb
mov
jbe
in
pop
outsl
and
shr
enter
mov
into
cmpsb
shlb
xchg
shrl
cmp
shll
or
dec
jmp
dec
inc
xor
test
loopne
aad
xchg
cmc
push
lds
cmp
je
nop
cmpsb
sbb
aas
dec
mov
mov
scas
aaa
mov
iret
xchg
cmpl
test
push
fwait
add
test
pop
lret
mov
and
sbb
lods
or
cld
lods
incl
ljmp
mov
mov
jno
xor
in
pusha
or
xor
sarb
rcl
in
sti
mov
xchg
mov
rclb
or
sbb
pop
inc
int3
dec
icebp
mov
ficoml
loope
push
test
loop
add
inc
mov
bound
aam
cmp
jnp
int
cwtl
pop
ljmp
int
jne
jg
push
add
mov
adc
loopne
lahf
int
adc
cmp
xchg
ja
xchg
adc
and
stc
push
push
lea
xor
or
int
push
aas
daa
or
xor
arpl
insb
dec
cmp
xchg
test
fwait
scas
xchg
mov
add
data16
sub
std
icebp
mov
add
sti
dec
adc
into
faddl
mov
subl
jb
push
pop
and
jae
fucomp
test
or
sti
mov
or
icebp
and
ficoms
xor
dec
leave
pusha
fs
cmp
or
data16
das
sar
inc
jmp
fcomip
test
xchg
leave
roll
dec
dec
xchg
xchg
xor
mov
jns
xor
and
imul
sbb
mov
or
cmp
inc
push
or
xchg
sub
sbb
pop
jl
dec
addb
pop
mov
cmp
jbe
sub
ror
pop
or
xchg
cwtl
pop
leave
pop
int
pop
leave
cmp
rcll
fldt
mov
imul
pusha
imul
out
mov
cmp
push
xor
mov
int3
es
scas
and
mov
and
push
cmpsb
or
lods
push
sub
test
es
mov
popf
sub
pushf
xor
into
jmp
sbb
lea
imul
or
insb
and
mov
sub
fistpll
xor
out
test
shll
jno
jg
lahf
fisttps
or
pop
xor
mov
iret
dec
cmp
and
xchg
and
jae
adc
inc
es
dec
fs
xor
mov
pop
xchg
rorl
sub
sub
scas
andb
mov
jmp
xchg
insl
jg
or
scas
dec
cmp
pushf
sbb
psrlw
mov
andb
lds
scas
aaa
cmp
pop
jle
jecxz
lea
rcl
lcall
lea
mov
stos
cmp
sahf
jbe
add
inc
call
aad
ret
imul
push
mov
pop
push
fs
pusha
pop
jg
add
and
out
iret
mov
or
mov
or
stos
adc
fcomps
inc
jae
fldt
test
insl
cmc
dec
orb
stos
add
seta
dec
jb,pt
into
repz
sarb
jno
cmp
dec
or
xor
mov
leave
and
sub
pop
push
adc
lods
jl
jmp
fistps
cwtl
add
fnstenv
cmp
dec
adc
pusha
cmpb
push
mov
test
movsb
lods
rcrl
bound
flds
sahf
push
mov
lock
push
decb
push
cmp
mov
lods
popa
dec
stc
out
outsl
loop
xor
roll
hlt
fistpl
inc
popa
mov
ljmp
sbb
dec
lcall
lods
sub
mov
andb
jecxz
cmc
icebp
fwait
scas
shlb
jb
and
loop
subl
mov
test
into
icebp
pop
mov
inc
in
cmc
test
adc
dec
popa
repz
test
sub
and
cmpl
mov
inc
jle
sbb
cmc
sbb
adc
iret
fbld
adc
add
addb
pop
lods
mov
mov
pop
ljmp
push
xor
faddp
mov
sub
cld
push
sub
sub
and
enter
pop
sub
push
ja
and
in
inc
cmpsl
pusha
adc
dec
sub
mov
lds
std
loop
pop
insl
leave
loop
lcall
or
popa
xchg
aam
jp
lret
push
fs
mov
in
jb
lods
mov
cmp
addl
adc
or
out
jbe
and
push
xor
jmp
dec
popa
insb
push
jge
or
lods
and
mov
cmp
jb
leave
imull
mov
jmp
jg
mov
xchg
mov
inc
or
sbb
xchg
cli
lock
pop
ficoml
mov
pop
fs
js
pop
xor
lea
push
addb
push
ret
fs
test
inc
arpl
repnz
ljmp
orl
and
inc
test
adcl
outsb
push
mov
in
mov
aaa
in
and
push
outsb
mov
lods
jge
fisttpl
dec
and
cmp
push
sub
les
xchg
insb
mov
imul
xor
and
test
movl
adc
sub
and
imul
std
sub
das
mov
aam
cli
mov
mov
or
adc
pop
push
adc
cmp
cmp
test
mov
popa
lea
lret
mov
and
or
scas
flds
lret
in
subl
js
adc
lock
shl
dec
sti
inc
xor
jge
aad
push
adc
lock
sbb
push
fmuls
int
xor
test
jne
imul
sbb
enter
test
push
adc
adc
xchg
inc
sub
dec
xchg
xor
movsl
or
mov
add
xlat
cwtl
out
pop
scas
add
push
add
mov
outsb
pop
fisubl
push
jbe
jle
jbe
pop
fisubrl
sbb
out
jo
test
jg
adc
lods
aas
iret
pusha
xor
ljmp
mov
xchg
jae
enter
out
add
cmp
pop
ljmp
dec
sub
and
mov
dec
pop
dec
push
testl
aas
out
mov
sub
inc
outsl
jg
stos
fisttps
mov
inc
mov
fstpt
inc
mov
mov
ljmp
out
loope
push
movsl
int3
mov
mov
push
outsb
xchg
dec
out
and
mov
ljmp
scas
cs
gs
iret
loop
shl
mov
addr16
adc
rclb
push
fldcw
fldcw
andb
movsb
pusha
fwait
loop
lret
push
cli
fisubs
mov
sti
inc
sbb
mov
cli
rol
lods
jmp
pop
jb
push
popa
pop
out
inc
loope
jne
jb
stc
loop
aad
add
cli
push
pop
call
lcall
or
inc
shlb
mov
scas
cs
dec
pushf
jle
subb
or
pop
xchg
inc
test
xor
add
or
es
and
dec
jo
jb
jno
mov
pop
repz
ss
inc
mov
aas
and
xor
insb
or
hlt
pop
test
mov
or
jl
out
int3
push
sti
cli
mov
into
fldln2
stos
pop
inc
pop
inc
jmp
out
orl
ds
lods
sbb
xchg
xor
hlt
js
ja
push
jns
inc
mov
fwait
push
cli
test
fdivr
inc
add
fdiv
insb
lea
xchg
lea
mov
shlb
call
or
repz
sbb
mov
mov
pop
mulb
add
mov
mov
jl
cmp
nop
cmovb
fs
dec
or
push
xchg
arpl
xchg
pop
mov
jbe
inc
call
push
pop
leave
pop
sub
cmc
ja
ja
stos
jge
and
out
xor
daa
push
je
loope
pop
movsb
cs
sub
adc
dec
add
and
rorl
push
mov
cmp
inc
sbb
cmpsb
fidivl
pop
std
imul
mov
rcl
ret
daa
lds
arpl
int3
cmp
clc
push
push
jmp
push
sbbb
cmp
mov
lahf
les
dec
repnz
mov
sbb
add
jne
aas
mov
scas
push
push
xor
cld
fs
popf
sbb
push
dec
testb
add
push
faddl
jns
inc
push
pop
dec
test
lcall
negl
mov
pop
test
mov
sub
test
aaa
and
out
or
es
iret
pop
rcl
mov
adc
popf
dec
pusha
cmp
out
cmp
lcall
loop
xor
inc
mov
ret
mov
rcll
sub
pop
test
jge
or
dec
daa
gs
fadd
push
icebp
pushf
xor
dec
inc
scas
outsb
out
lret
cmc
xchg
xorl
adcb
inc
xor
inc
fcompl
js
call
adc
outsb
inc
add
push
jg
insb
sbb
push
mov
mov
repnz
cmpsl
mov
inc
cmc
mov
insl
add
shr
push
cld
push
imul
xchg
mov
jbe
lea
mov
notl
mov
ror
inc
lret
icebp
inc
in
add
stos
xlat
imul
pushf
inc
and
das
sbb
std
aam
add
shr
in
ror
cmp
nop
push
mov
popf
cmp
test
dec
hlt
ds
jb
stos
das
adc
out
mov
out
pop
add
sbb
aam
imul
push
jecxz
call
push
cmp
shr
and
xor
mov
es
cwtl
add
mov
jno
adc
xor
jge
sub
dec
xor
ffree
pop
in
or
add
sbb
xchg
mov
push
xor
and
pop
and
jmp
mov
test
mov
daa
xchg
lock
dec
pusha
fsts
out
call
mov
repnz
add
cmc
mov
mov
cmp
cmp
and
push
leavew
addr16
push
mov
cmp
push
sub
inc
scas
int3
xor
sarl
or
sub
xlat
rcrl
sbb
sbb
cmp
cmpl
mov
je
dec
testl
add
enter
flds
push
ss
insl
mov
lret
adc
loopne
mov
mov
inc
add
cmp
add
pop
loope
mov
bound
mov
cmc
notb
cmpl
push
add
jg
std
int
sti
mov
in
imul
lret
or
das
xchg
xchg
jp
jle
fsubrs
xchg
xor
in
add
cmp
xor
inc
movsl
push
cmp
test
mov
cmp
xchg
shlb
test
xchg
out
rorb
mov
mov
jmp
mov
movsl
movsb
mov
add
and
dec
mov
mov
and
sbb
jecxz
jmp
lcall
in
ret
fnstsw
call
sub
and
imul
nop
push
jnp
mov
mov
shll
dec
dec
or
dec
ss
and
cwtl
rol
cmp
xor
pushl
clc
sbb
dec
dec
xor
sbb
or
aad
inc
jnp
add
jl
mov
lods
pop
cmp
fdivrs
testb
loop
xchg
dec
ds
pop
jne
arpl
xchg
incl
and
push
add
jne
push
jmp
and
add
sbb
idivb
and
mov
in
sub
sub
pop
addr16
push
mov
fiadds
test
daa
add
popa
cld
push
mov
xorb
add
xor
and
push
pop
cmp
pop
dec
sub
ror
add
push
popl
xor
dec
xor
jae
xchg
mov
mov
pop
mov
sbb
lret
aaa
int
shll
movsl
jnp
bts
mov
cmc
push
enter
enter
call
sahf
or
dec
pop
xchg
repnz
dec
inc
push
mov
push
adc
dec
cld
data16
test
sub
arpl
setp
les
aas
into
jno
cmp
es
jle
jp
fcomip
cs
mov
out
xchg
inc
mov
stos
je
xchg
push
pop
or
xor
add
sbb
sti
pusha
adcb
push
cmc
cmpsb
lret
in
popa
std
xor
mov
pop
mov
orb
movsb
jg
mov
fcoml
sbb
jg
loope
out
iret
popa
stc
push
sub
push
orb
aad
xchg
cwtl
nop
test
je
xor
js
lahf
cmp
sub
sbb
cmp
jmp
ds
sub
adc
and
cmp
xchg
jnp
xchg
sub
cld
or
ret
popa
mov
dec
xchg
cmp
cmpsl
inc
leave
inc
les
sub
mov
cwtl
lahf
push
cmp
adc
push
push
ljmp
or
xor
cwtl
ljmp
hlt
add
jle
inc
xchg
out
jno
mov
testb
inc
bnd
cwtl
rolb
cld
sbb
aaa
iret
mov
xlat
pop
dec
and
clc
popf
mov
cwtl
jae
test
dec
dec
test
adc
pop
sahf
testb
fwait
adc
sub
outsb
shl
pop
cwtl
lret
cltd
popf
jg
xchg
daa
dec
test
negl
test
ja
push
loopne
sbb
dec
stc
jo
mov
inc
in
cli
nopl
insb
cmc
push
fistl
test
jns
xchg
sub
pop
movsb
push
jmp
inc
xchg
jge
pop
in
inc
or
xchg
add
jnp
pop
xchg
loop
xchg
push
xchg
ljmp
inc
loope
cmp
stos
icebp
fstpl
out
cs
xchg
fwait
in
orl
leave
add
stos
push
sahf
ret
mov
out
mov
loope
movb
jl
push
sbb
mov
fwait
cltd
std
push
or
lahf
loopne
xchg
lcall
sbb
jecxz
jl
cwtl
insl
sub
mov
pop
sti
mov
loopne
icebp
movsl
sahf
mov
mov
scas
std
push
fwait
add
repnz
xlat
push
sub
sbb
xor
test
push
inc
jns
inc
mov
or
jp
fdivr
xchg
adc
repz
nop
adc
aam
mov
inc
js
mov
push
fmul
or
inc
jmp
mov
mov
jle
xchg
mov
xor
xchg
nop
dec
stos
popf
lods
jp
cmc
repnz
mov
sub
sbb
mov
out
adc
xor
mov
leave
inc
and
inc
mov
movsb
add
cmp
sbb
mov
adc
leave
rcl
pop
shrb
inc
push
inc
outsb
or
push
jbe
mov
imul
pushf
cwtl
out
fisubrs
inc
push
mov
xor
or
inc
fisubl
cmp
outsb
sub
aam
or
jne
jo
sbbb
dec
cmp
ljmp
sbb
sub
into
or
ficomps
mov
aad
pop
test
shll
inc
jne
nop
adc
adc
mov
jno
mov
cmp
mov
push
inc
or
ljmp
mov
pop
lret
sbb
movsb
stc
jge
push
lods
shll
fdivrl
dec
lret
mov
fstps
jns
cmp
xor
pop
nop
xchg
cmpsl
dec
arpl
mov
jae
stos
push
in
xor
enter
popf
lret
arpl
call
inc
mov
idivl
push
mov
data16
sti
inc
push
mov
insb
adc
out
and
dec
mov
xlat
jae
int3
icebp
xor
hlt
jge
jb
mov
addr16
sar
std
push
ffree
inc
push
xchg
daa
push
push
push
inc
out
jl
xchg
pop
ss
push
sbb
push
push
iret
insl
adc
repnz
jecxz
sti
sbb
push
fadds
fistpll
push
sub
dec
or
cmc
and
mov
or
pop
test
popf
sti
in
mov
cmp
mov
les
cmc
mov
adc
dec
fstpt
mov
daa
and
inc
aas
fsubrs
xchg
enter
cwtl
dec
or
cmp
sarb
cs
mov
fcoms
dec
inc
filds
add
adc
jae
loop
add
cmp
sub
pop
call
js
sbb
jl
je
sbbl
fcompl
in
enter
mov
xchg
adc
addr16
sbb
dec
idivl
stc
cld
push
mov
push
push
jecxz
imul
call
mov
in
inc
cli
out
call
xchg
mov
psubb
je
repz
lods
into
inc
push
jnp
std
scas
adc
shll
mov
les
insl
mov
jmp
jno
cmpsl
jmp
lods
xchg
inc
jns
ds
push
mov
shlb
cmp
repnz
addr16
cmp
fisttpll
sbb
lret
cld
xchg
sbb
popf
dec
pop
aas
or
in
test
add
push
add
add
push
sbb
lret
cmp
mov
aad
pop
lahf
dec
rcr
jge
shrb
mov
cmp
aad
jae
enter
pop
enter
ret
xor
xor
sahf
into
inc
add
pop
mov
sahf
mov
cmp
gs
test
sbb
push
xlat
xchg
dec
mov
js
and
outsb
out
repnz
jb
sbb
mov
mov
into
dec
cmpsb
mov
ret
fbstp
adc
iret
cmp
xor
xchg
stc
push
dec
fsubrs
test
dec
daa
stos
fcompl
dec
mov
adc
cmc
sbb
cmpsb
sbb
fidivrl
jp
jb
sbb
sbb
fs
pusha
pop
pop
xchg
cld
pop
add
aam
fst
cmpsl
mov
push
mov
push
stos
stc
mov
cmpl
loope
leave
add
fscale
cmp
outsb
adc
lahf
jb
or
setnp
mov
push
mov
adc
cmp
rcrb
add
nop
push
fwait
je
out
or
push
out
adc
cmp
lahf
or
dec
ss
dec
xor
sbb
push
jnp
and
fisttpl
add
mov
pop
es
mov
xchg
ljmp
lcall
xor
dec
mov
iret
cmc
and
xor
xchg
xchg
loopne
in
cmpsl
mov
xchg
jb
dec
into
push
push
jo
call
sub
push
clc
das
roll
lahf
loop
fmull
rclb
ret
push
add
mov
enter
fwait
dec
push
lcall
frstor
decb
lods
outsl
test
mov
fdivrl
shrl
sbb
inc
in
mov
outsb
cs
in
add
icebp
fcmovb
mov
push
mov
mov
insl
out
fwait
mov
mov
mov
xchg
fs
xor
in
xchg
cmpsb
push
out
popf
mov
stos
dec
int3
lret
std
pop
cmp
das
sub
inc
mov
imul
mov
ja
mov
cmp
xor
mov
pop
adcb
pop
nop
insl
pop
xlat
mov
pop
out
or
cltd
cli
or
xchg
mov
mov
mov
stc
aad
sub
adc
outsb
jne
jne
jle
mov
sbb
xor
jbe
xor
aad
jl
and
add
xchg
addl
mov
sub
frstor
sub
stos
add
popf
inc
lret
add
int
pop
cwtl
movsb
cmpsl
mov
push
pop
jp
incl
fsts
pop
pop
pop
xor
rcrb
pop
dec
lea
call
sbb
jecxz
jnp
fdivl
pop
nop
xchg
in
popa
sbb
mov
clc
stos
inc
push
xchg
adc
sub
pushf
pop
or
repz
push
movsb
adc
push
ror
sbbl
xor
dec
jle
xchg
xlat
aas
stos
shll
and
outsb
and
arpl
mov
stos
jecxz
sbb
mov
inc
lret
mov
inc
imul
mov
xchg
xchg
filds
mov
pop
mov
pop
dec
xor
mov
shlb
lea
ljmp
cmp
sbb
mov
aad
and
cmpsb
add
mov
flds
and
xchg
mov
fadds
xchg
data16
and
and
sbb
sub
incl
loop
mov
mov
pop
jns
cmp
frstor
jae
loope
or
pop
jl
mov
cmovl
out
jne
inc
cmc
fcmovu
dec
cmc
jb
adc
dec
jns
insb
and
imul
sbbb
ret
clc
mov
repnz
sub
shrd
mov
mov
push
xchg
cld
cmp
or
xor
inc
xor
push
or
subl
dec
pop
mov
daa
xchg
push
inc
sahf
xchg
pop
rcrl
xchg
fsub
mov
ret
and
sub
pop
fildll
sbb
push
or
lret
fdivs
dec
push
cmp
or
faddl
mov
ja
rcl
mov
mov
or
fcomps
dec
push
pop
xor
aas
xor
inc
pop
mov
in
cmp
lds
pop
fisubrl
fsubs
insb
mov
ret
cmp
xor
outsl
and
pop
jg
mov
ja
xchg
ret
loop
xor
fs
push
test
in
fnstcw
out
push
loopne
sbb
cmc
mov
push
push
in
ljmp
repnz
jnp
xor
pop
loopne
and
pop
sub
sbb
mov
fstpt
mov
aaa
in
adc
pop
pop
jp
and
xor
add
mulb
movsl
pop
leave
xchg
xlat
stc
mov
lds
push
cli
inc
inc
enter
popl
insl
sub
jns
mov
adc
andb
sbb
cmp
test
sbb
aam
inc
push
fistl
xor
push
subb
pop
iret
sub
je
lret
scas
or
addb
lret
fstp
inc
cmp
jnp
inc
andl
jle
testb
out
push
push
push
and
add
jl
fsubrl
mov
or
pop
cmpsl
xor
mov
jns
push
inc
jns
adc
sbb
or
mov
add
outsb
pop
sar
sbb
xor
mov
sub
je
loopne
clc
mov
inc
push
js
call
pop
outsl
mov
cs
fnstsw
imul
pop
xchg
subl
lret
cmc
loop
in
sbb
or
and
int3
aam
sti
mov
xlat
mov
sub
icebp
shr
pop
fsts
aad
xchg
cmp
mov
and
add
ds
loope
cld
dec
mov
iret
push
sub
aas
sub
fnstsw
adc
xor
sbb
or
sub
out
popf
xlat
xchg
aam
sub
imul
mov
sbb
mov
fbld
es
icebp
xchg
movsb
insb
aad
inc
mov
int3
mov
fisubl
movsb
icebp
inc
sbb
addr16
mov
aad
or
les
scas
fistpll
in
adc
jmp
lret
dec
movsl
or
sub
icebp
out
in
inc
push
pusha
rorb
shlb
bound
xor
dec
inc
jns
xor
and
adc
roll
insb
aaa
bound
mov
mov
and
mov
xor
pusha
mov
jmp
getsec
loop
mov
sahf
jge
divl
xchg
and
mov
shrl
dec
xchg
outsb
mov
lret
leave
cmp
dec
decl
je
pop
js
orl
int3
cmpsl
enter
xor
bound
ja
imul
test
push
push
lods
xchg
cmpsb
movsb
jle
jmp
and
cmp
add
mov
mull
and
adc
test
ja
inc
add
inc
fwait
popa
cmp
gs
pusha
xor
popa
inc
push
or
push
xor
add
xor
and
cmp
mov
in
pusha
outsb
jecxz
mov
test
add
ret
xor
xor
mov
dec
mov
push
mov
xor
dec
xchg
aad
inc
inc
pusha
rolb
jp
sub
fwait
inc
jo
int3
in
xor
ds
arpl
xchg
pop
push
lret
mov
mov
aad
push
xchg
jmp
sbb
sub
int3
xchg
adc
push
scas
iret
pushf
jns
lea
fists
pop
leave
pop
pushf
mov
mov
and
and
adc
in
dec
test
aas
out
sbb
lods
movsl
std
cmpsl
xchg
mov
mov
add
mov
xor
les
addl
sti
outsb
pop
jecxz
pop
jns
lea
aaa
aas
jp
inc
scas
and
sbbl
jnp
jbe
add
inc
add
nop
imul
cmp
mov
pop
sbb
lock
orl
test
lret
xchg
loop
mov
or
jnp
stc
mov
rorl
pop
inc
outsl
sbb
fs
jg
pop
push
mov
dec
dec
shlb
lods
add
loop
imul
pop
lcall
jmp
push
cmpsl
mov
mov
and
fisttpll
xlat
mov
in
xchg
or
in
jl
sbb
out
pop
mov
ror
addr16
mov
mov
aad
icebp
rcr
outsb
add
ds
cmpb
cltd
dec
sbb
cmc
sbb
cmpsl
jno
lret
gs
push
xor
loope
sub
mov
aad
aas
loope
pusha
into
test
les
fcmovnb
fimuls
loope
repz
jo
mov
dec
nop
nop
add
sub
mov
mov
jns
mov
daa
enter
loopne
mov
adc
jl
hlt
call
jmp
xlat
pop
inc
pusha
cmpsb
adc
pushf
push
out
add
mov
xchg
pop
ja
pop
movsb
mov
cmc
call
push
arpl
xchg
and
mov
push
loope
mov
mov
mov
test
cmc
sti
ficomps
pop
xchg
cmpb
push
fsts
dec
popf
clc
subb
loope
dec
mov
pushw
push
add
int3
les
popf
lds
jne
or
dec
repz
fs
jp
jl
cmp
into
iret
js
jecxz
xchg
je
mov
repz
push
sbb
and
pop
bound
lahf
mov
insl
pop
rorl
mov
fwait
inc
adc
xchg
arpl
mov
orb
inc
cmp
mov
xchg
fisubl
lods
enter
pusha
mov
push
add
out
stos
sti
xchg
cmp
mov
bound
xchg
xorb
jl
sbb
aam
push
mov
sub
fidivrl
pop
cmp
sbb
ja
cld
xor
loopne
scas
cmp
push
hlt
xor
flds
mov
sbb
xor
or
pop
pop
mov
push
pushf
xor
inc
cmpsl
popa
pop
outsl
clc
xchg
mov
sbb
or
inc
mov
mov
sahf
cmc
inc
add
lods
mov
ljmp
push
rcrl
rorb
orb
scas
dec
aaa
adc
iret
cli
xchg
stc
push
adc
mov
lcall
xchg
pop
mov
xchg
lods
orb
test
leave
incb
subb
mov
mov
inc
add
pop
mov
rol
aas
push
in
mov
or
rcll
shlb
cmp
inc
xchg
cld
scas
subps
xlat
loope
pusha
mov
pop
cld
mov
out
rolb
push
popf
jbe
loop
stos
sbb
incb
aam
sub
adc
mov
inc
std
mov
sub
or
dec
imul
push
mov
imul
mov
data16
jnp
xchg
es
xlat
xchg
add
fidivs
movsb
or
sub
xor
cmpsl
jp
mov
jne
movsb
popa
lcall
sets
movsl
bound
das
cmp
mov
ss
bound
aas
int3
fsub
lea
jl
movsb
adc
add
and
out
or
and
pop
cld
jge
insb
in
mov
fadd
int
fmull
or
jecxz
xchg
inc
lahf
out
aas
fs
mov
outsb
lds
imul
shrb
outsb
and
cmpsl
add
test
and
andb
mov
sarl
ss
mov
push
sbb
and
jecxz
scas
pop
jne
jge
mov
jl
fldl2t
imul
pop
scas
push
push
adc
mov
add
mov
int
sub
insl
mov
adc
das
shl
aas
hlt
cmp
sti
mov
cmpsb
push
inc
push
sub
cmpsb
cli
inc
xor
in
jle
jmp
xchg
sbbl
lret
mov
or
cwtl
adc
fwait
dec
cs
aam
gs
inc
or
mov
imul
mov
vcvtsd2si
mov
cli
insb
or
testl
and
cs
jge
insl
jl
pop
cmp
add
xor
sahf
test
mov
push
lods
ret
insb
mov
and
jb
xchg
lcall
mov
imul
cltd
dec
popf
pop
leave
test
in
aam
mov
fisubs
or
inc
sub
mov
jae
mov
mov
xchg
mov
mov
jle
insl
cwtl
add
add
xchg
sub
sbb
das
je
add
pop
adc
or
mov
in
jno
pushfw
sahf
push
lods
cmp
mov
push
aam
shr
setno
hlt
orb
loope
or
ds
or
ds
sub
sub
pop
pop
mov
jns
mov
fadds
addr16
out
nop
outsb
adc
and
lods
xchg
addl
inc
jb,pt
popf
test
jecxz
das
pop
push
dec
jne
adc
xchg
stc
sub
ret
push
dec
insb
push
sar
imull
aad
pop
xchg
pop
pop
mov
into
dec
aad
jl
int3
ljmp
ficoml
xchg
add
push
and
mov
pop
pop
popa
cs
push
test
andl
or
push
or
adc
xor
xchg
testb
push
xor
dec
rcrb
in
inc
fs
pusha
mov
xchg
outsb
ficomps
outsl
mov
gs
sub
aas
shl
sbb
outsl
sub
mov
nop
loop
sbbl
add
sbb
push
test
push
fisubs
cli
sub
ret
push
xchg
push
dec
ds
lcall
and
mov
pop
mov
cmc
iret
cmp
push
jle
add
fbstp
fdivl
rcrb
ret
es
ret
lcall
ja
or
xchg
inc
addr16
sbb
inc
icebp
loope
or
jnp
mov
sbb
dec
add
pushf
sub
enter
repz
dec
xchg
jg
fucomip
cmp
pop
popf
repnz
inc
mov
fsub
or
insb
cmp
cmp
lods
lea
insl
push
rolb
aad
fistl
in
dec
mov
push
ficoml
xchg
shl
mov
fisttpll
das
cmp
mov
cmp
in
mov
enter
jl
cwtl
xchg
pop
pop
aas
push
andl
movsb
pop
pop
addl
jne
mov
je
push
xorb
pop
add
pop
pop
mov
shlb
addr16
xchg
fmull
int3
lea
int
js
dec
dec
jbe
xchg
test
mov
xchg
js
add
test
push
stos
sub
sahf
stc
mov
rcrl
cli
push
loop
xchg
mov
sub
out
dec
icebp
scas
in
pop
xor
push
or
jne
arpl
and
imul
jp
popf
rcrl
clc
sbb
es
sbb
push
pop
jae
push
hlt
dec
cs
xor
sub
stc
out
jl
add
xchg
and
pop
jp
lock
movsb
pushf
sbb
cmp
loope
lahf
imulb
add
cmp
sub
push
lahf
sahf
test
mov
xorl
dec
push
sub
aam
das
jbe
insb
ret
inc
cmpsl
jnp
add
pushf
push
call
push
xor
xchg
aaa
mov
adc
or
mov
xchg
mov
fildl
dec
xchg
out
xchg
mov
jg
sbb
js
int3
push
jecxz
subl
ljmp
insl
cmpsb
pop
mov
or
pop
fwait
jnp
ds
mov
fcmovnu
loopne
hlt
fiadds
mov
loope
scas
jo
lds
fs
and
lahf
aas
dec
movsl
fs
mov
push
xor
jbe
popf
push
mov
lock
mov
je
cmp
sahf
fstpt
adc
sub
sbb
lock
pop
mov
int
out
push
ficomps
xchg
dec
cmpsb
jg,pt
mov
inc
roll
jecxz
mov
shrb
xorb
inc
jns
addb
rolb
cmp
movsl
lret
adc
test
fsubrl
mov
fs
outsb
icebp
push
loop
fsqrt
aaa
cmc
add
cmpl
inc
xor
loop
pop
mov
ja
stos
in
dec
pop
xor
push
jle
mov
sub
add
repz
fwait
shlb
pop
push
add
jno
cmpb
pop
mov
pop
pop
mov
mov
cli
inc
sbb
push
adc
jne
pop
in
int3
mov
pop
imul
xchg
dec
ja
or
in
jle
std
sub
icebp
mov
insl
cmp
aas
cmp
stos
ja
push
imul
inc
inc
ret
mov
sahf
cmp
loope
pop
mov
cwtl
push
scas
cmpsb
lods
push
cld
mov
mov
push
cmp
inc
mov
out
clc
mov
js
jns
xor
clc
push
stos
and
lcall
mov
push
cmpsb
sahf
push
test
flds
pop
jecxz
loope
data16
dec
loope
xor
sarl
ja
addr16
cmp
or
sub
daa
fiaddl
dec
xlat
scas
int
enter
lea
arpl
mov
mov
jae
daa
inc
jnp
sbb
push
dec
in
pop
xor
mov
jbe
mov
lret
fidivrl
lret
ss
insl
ret
stc
dec
jecxz
ret
insl
or
sbb
mov
xor
arpl
cmp
daa
stos
cmc
test
inc
push
lds
inc
pop
jecxz
mov
adc
jg
adc
inc
xor
fsts
shl
and
bound
stos
sub
data16
lret
hlt
lcall
mov
sbb
int
fisubrl
xchg
insb
cmp
pop
mov
inc
pop
xor
xchg
or
cltd
sbb
sbb
clc
imul
movsb
cmp
jne
scas
bound
pop
lret
mov
imul
pop
mov
sbb
gs
je
insb
aam
xchg
addb
dec
addl
pop
mov
dec
rep
mov
push
xor
cmp
fiaddl
inc
jmp
jno
push
icebp
adcl
push
xchg
cmpsb
fadds
dec
aad
mov
faddp
cmc
mov
mov
pop
mov
fwait
sub
lods
sbb
pop
add
lcall
divb
push
adc
jmp
dec
sahf
xchg
mov
jmp
xor
push
lahf
jno
aad
lahf
cmp
dec
sub
push
jecxz
mov
fcmovnbe
movsb
mulb
sub
outsl
pop
push
push
mov
sahf
cmc
add
lahf
cmp
xor
popf
repz
or
mov
clc
mov
push
add
xchg
push
or
movsb
jmp
repz
xor
adc
fcmovb
rcr
into
xchg
js
push
push
andb
inc
fcomps
xchg
dec
cs
cmpw
and
lods
in
inc
ja
mov
pxor
xchg
sbb
sti
icebp
push
pop
aam
pushl
repz
mov
scas
push
aad
dec
cmc
jb
cmp
jge
ljmp
push
scas
and
out
fimull
lret
sub
push
xor
add
xor
add
jmp
pop
gs
jnp
sarb
jb
jge
inc
inc
mov
lea
enter
test
repz
push
test
cmp
mov
fwait
scas
dec
push
cmp
mov
mov
pop
mov
cmp
mov
gs
pusha
xchg
sahf
repz
call
daa
loopne
mov
sar
loope
in
sub
xchg
leave
stc
lods
jb
push
pop
je
pop
and
mov
push
jp
lret
inc
xchg
js
inc
cmpsl
pop
shlb
sbb
fdivl
ja
fsubl
sbb
cmp
xor
xchg
mov
jnp
sbb
inc
fbld
add
inc
xchg
shl
in
pop
addr16
sub
popf
lock
fisttpll
or
pushf
popf
xor
das
outsl
in
imul
popa
mov
jmp
or
push
xchg
mov
insl
enter
push
fistps
jge
dec
insb
jecxz
mov
xor
enter
repz
cld
add
testl
jg
gs
pop
test
mov
push
insb
pop
mov
bound
and
nop
xchg
xor
jp
call
stc
sbb
mov
mov
and
out
adcb
sbb
push
mov
rclb
scas
iret
push
or
jecxz
sbbb
push
pop
stos
sahf
dec
into
inc
out
sub
push
ja
test
test
push
rorl
mov
mov
rol
xor
sub
and
dec
mov
mov
das
decl
dec
sbb
xor
cwtl
leave
pop
xor
cmp
scas
mov
adc
xchg
lcall
out
fadd
ljmp
cs
push
jne
rcrb
mov
ret
push
fnsave
xchg
gs
insb
or
sub
dec
dec
in
jo
jb
mov
sti
push
and
adc
mov
aad
jb
mov
sbb
inc
outsl
mov
jae
repz
daa
push
outsb
mov
fiadds
cmpsb
cmp
roll
mov
adc
mov
sub
fisubl
mov
push
cmpsl
loop
jecxz
test
lock
repnz
adc
xchg
loopne
xchg
or
aas
shlb
xchg
dec
xor
cmp
add
mov
add
add
fistpll
mov
loop
mov
xor
inc
je
or
lret
sti
testl
adc
test
dec
icebp
mov
or
cmp
aam
inc
cli
test
rcrl
dec
popf
pop
xlat
inc
push
imul
mov
and
fsts
repnz
ret
add
scas
adc
fwait
push
lcall
push
es
mov
cmp
jmp
sahf
fmull
mov
mov
xor
negb
pop
xlat
sub
push
mov
xchg
nop
dec
in
fidivrs
dec
sbb
insl
roll
ds
mov
xchg
pop
sbb
into
fmull
gs
aad
sub
ja
mov
lret
mov
stc
repz
outsl
add
imul
sar
sub
jecxz
fmuls
clc
lret
insl
cwtl
inc
stc
sbb
mov
addr16
sbb
push
cmp
pop
out
insl
jae
adc
mov
rcl
jge
mov
xchg
clc
aam
and
or
arpl
jge
loop
push
xor
outsb
sbb
frstor
movb
outsb
fisubrs
inc
cmp
aaa
mov
imul
xor
das
sti
in
cmpsl
cs
aaa
cmpsb
mov
push
sbb
lds
and
shlb
jp
mov
add
test
sbb
xor
pop
andb
cmpsb
lahf
add
in
int3
shlb
ret
xchg
out
ljmp
stc
mov
pop
push
xchg
mov
dec
sbb
push
pop
add
int
fdivrs
popa
icebp
cmp
xor
icebp
fcomp
lods
shll
rorb
mov
push
and
pop
imul
bswap
cmp
dec
gs
test
mov
cmp
cltd
mov
sbb
dec
add
sbb
push
pop
repnz
mov
les
push
cwtl
outsb
sub
sub
sub
cmc
stc
scas
mov
adc
sub
mov
data16
mov
add
pop
dec
aad
test
and
jae
mov
sub
dec
adc
scas
pop
sbb
sub
test
ja
xchg
adc
cmc
pop
sub
xchg
add
push
fmul
pop
mov
rcll
dec
add
xor
sbb
fs
xchg
loop
sbb
sti
jns
pushf
ja
rclb
cmp
cmp
shl
lret
inc
hlt
sbb
add
jg
lods
add
ja
sarb
popf
add
rorb
divb
lahf
push
callw
mov
mov
sbb
mov
fisubs
mov
imul
int3
mov
dec
adc
imul
lret
push
std
cmc
pop
xor
push
xchg
mov
fwait
add
inc
sbb
and
and
dec
cli
mov
pop
push
out
mov
sub
lcall
push
add
in
cltd
lahf
mov
xor
xchg
add
ja
pop
mov
sub
loope
insl
pop
orb
xchg
mov
pop
pop
and
or
shlb
xchg
mov
push
sub
push
es
lcall
lcall
cmp
cli
cmp
pop
add
mov
loopne
mov
mov
es
jmp
shll
inc
xchg
xchg
movsl
repz
xchg
fldl
push
idivl
aad
add
mov
std
adc
push
shr
inc
cmp
xor
xchg
lea
out
xor
scas
lock
jp
sti
jnp
push
insb
das
inc
adc
cltd
je
pop
and
inc
fldcw
test
jnp
aaa
ret
push
aam
daa
push
clc
sahf
addb
lock
pop
in
or
hlt
cmp
add
jecxz
push
add
ret
ljmp
insl
mov
pop
in
aam
and
pop
mov
ljmp
inc
adc
lds
sub
outsb
call
xor
dec
mov
jl
push
xor
in
pop
xor
mov
pop
sub
cmp
stos
mov
les
xchg
cmpb
mov
test
outsb
movsb
stos
rcll
test
test
out
jbe
or
mov
add
rolb
subb
cmp
les
add
or
add
and
mov
test
sbb
iret
push
loopne
test
mov
cli
outsb
mov
loop
outsl
js
in
xchg
jmp
mov
int
test
mov
xchg
jle
testb
arpl
mov
ljmp
inc
call
lea
sub
cmp
arpl
mov
inc
es
add
out
mov
or
cmp
jmp
divl
lods
push
or
mov
and
jo
movsb
dec
jne
mov
xchg
add
dec
dec
call
out
xchg
hlt
std
pop
mov
inc
mov
cmp
jo
sub
xor
movsb
movsb
push
adcb
sbb
cld
or
xor
mov
mov
vorpd
sarl
jg
jb
mov
mov
adc
adc
lods
push
gs
stc
imul
add
mov
xor
fcmovbe
lds
clc
xchg
xchg
ja
lods
mov
jbe
cwtl
mov
and
mov
pop
cli
sbb
fwait
js
cmc
pop
push
cmp
dec
lea
lret
adc
jnp
mov
scas
roll
mov
fsubs
xorl
pop
orl
add
mov
mov
sub
mov
jbe
pop
aad
ds
shll
popf
dec
jp
sub
imul
xchg
inc
pushf
jecxz
test
int
imul
adc
rcr
mov
xchg
cmp
mov
mov
lods
fnstcw
bound
mov
cli
cwtl
dec
daa
popa
int
mov
add
push
dec
and
ja
das
jle
sbb
xchg
mov
mov
push
xor
jge
mov
add
mov
or
sahf
outsb
xchg
xlat
mov
or
cmc
push
jne
mov
dec
xor
sub
insl
shr
out
mov
pop
add
into
pop
lods
mov
push
pop
sahf
icebp
lahf
push
js
loopne
stc
pop
ret
mov
test
jae
js
push
lods
test
loopne
add
lret
dec
lret
out
lahf
pop
pop
call
add
call
xor
add
xchg
sbb
inc
addl
lret
jg
sbb
push
push
cs
test
nop
xchg
jle
hlt
xor
fdivl
mov
les
jg
sub
les
xchg
in
jl
push
ds
stos
cmp
mov
ljmp
pop
mov
idivl
fs
repz
cld
inc
cwtl
dec
add
xchg
jne
pop
sub
or
dec
mov
cwtl
dec
imul
sbbb
pop
xchg
enter
jl
push
mov
cmp
dec
cmp
pop
inc
shll
nop
movsb
add
hlt
mov
dec
add
mov
xchg
jb
push
rcrl
lea
and
xor
clc
or
jnp
dec
or
mov
sub
sub
popa
cmpl
in
out
bound
mov
test
sbb
shrb
jle
cld
gs
add
rcr
sub
fisttps
dec
flds
addr16
je
pop
and
add
dec
pop
into
leave
lds
cmp
imul
loopne
loop
push
dec
dec
in
and
adc
or
xchg
fs
add
inc
add
stos
dec
out
aaa
adc
lret
pop
push
inc
aam
sbb
dec
test
adc
cwtl
xchg
mov
addr16
jne
sbb
sti
adc
pop
imul
mov
push
lcall
mov
mov
dec
in
nopl
adc
test
insl
push
iret
fisubrl
pop
testb
and
xor
lock
mov
arpl
and
in
out
mov
push
mov
adc
push
scas
jno
movsb
into
adc
pop
jbe
mov
outsl
mov
pop
add
cld
ss
cmp
mov
and
add
into
fisubl
lret
mov
cmpsb
jg
in
cld
outsb
cmp
pop
lods
leave
add
aam
add
or
jl
sub
or
insb
xor
cmpsb
cmp
sub
push
add
xchg
mov
pushf
xchg
enter
jp
into
cmp
fidivrs
adc
jno
pop
jp
xchg
loopne
cmpsl
push
push
cltd
subl
jno
and
mov
cmpsb
mov
test
popf
xchg
fstps
gs
mov
jl
imul
mov
xor
xchg
sbb
imul
bound
loopne
xor
dec
add
ds
fbstp
jle
xchg
cmp
dec
adc
adc
jl
inc
out
stc
lret
inc
pop
cwtl
or
cli
fmuls
xchg
lds
test
mov
into
inc
mov
pop
call
mov
stos
sbb
lea
add
shll
sub
fprem1
mov
push
lcall
je
lret
push
push
xchg
or
or
mov
mov
lretw
ret
fisubs
lea
mov
fs
pop
sub
xchg
rorb
add
adc
mov
jb
jne
ds
das
mov
sbb
xor
test
inc
jl
rcl
loop
fdivp
dec
mov
lcall
jp
int3
inc
call
add
icebp
and
pop
dec
lods
jns
loop
jecxz
pop
add
mov
out
loopne
cmovno
xlat
dec
jbe
mov
adc
mov
repz
scas
lock
jne
adc
movsb
mov
out
xor
xchg
lea
ja
dec
or
and
mov
into
sbb
daa
and
adc
xor
jae
sarb
pop
repnz
call
iret
sub
popf
test
scas
shrb
test
inc
movsl
and
ljmp
sbb
scas
je
and
mov
pop
xchg
mov
pop
dec
frstor
mov
fdivrl
cli
pusha
jle
or
jmp
adc
push
inc
jmp
test
ficompl
mov
fimuls
popl
lods
divl
or
mov
lds
lcall
rsqrtps
popa
aam
scas
jle
dec
dec
fs
in
sbb
dec
lret
fldcw
push
and
inc
pop
ljmp
sub
push
adc
adc
repz
cmpsb
cld
leave
sbb
or
push
cmp
xchg
push
dec
or
int
int3
std
xchg
ljmp
xor
fistpll
push
or
dec
aad
test
push
outsl
jns
movsb
cltd
icebp
call
pop
test
js
sub
push
popf
cwtl
in
sub
fcmove
cmp
std
jecxz
in
aam
mov
or
push
adc
xlat
xor
inc
hlt
jg
push
inc
push
jbe
cmp
aad
shll
sub
mov
out
inc
jb
and
sub
push
daa
inc
push
sbb
jne
xchg
in
and
rol
sbb
jl
jnp
test
xor
dec
cltd
push
ss
mull
cwtl
and
out
filds
fists
add
orb
lret
mov
lahf
mov
into
sbb
xor
inc
jmp
mov
mov
jns
lock
jns
js
shr
leave
xchg
not
fcompp
jne
add
adc
mov
enter
xchg
dec
in
scas
aaa
inc
inc
jo
popl
sti
ret
dec
and
stos
popa
mov
inc
rorb
outsb
fsubrl
or
sbb
xchg
mov
pusha
fistpl
and
pop
out
test
dec
pop
pushf
insb
adc
pushf
ja
scas
ja
stos
pop
or
or
mov
icebp
adc
pushf
mov
jnp
jo
jecxz
xor
xchg
push
dec
xchg
jo
ret
inc
stos
xor
jnp
roll
pop
sub
aad
in
xchg
bound
xchg
add
imul
xor
arpl
inc
add
xor
xchg
sbb
mov
mov
pop
int3
mov
dec
cmpb
dec
popl
adc
pop
jno
sbb
pop
jns
stc
lock
pushf
mov
lea
xchg
fs
std
dec
repz
add
adc
aas
jbe
cmp
xor
stos
into
and
pop
and
fbstp
inc
ret
mov
xlat
int
dec
pusha
lret
outsb
stc
cld
sub
sbb
scas
lcall
sub
mov
mov
arpl
mov
adc
jge
stos
int3
push
pusha
std
sahf
dec
push
dec
jmp
test
ret
push
jb
andl
add
bound
jmp
in
sahf
jl
ja
out
and
mov
insb
add
fidivl
cmpsl
sub
sbb
inc
inc
mov
fs
xor
es
orl
shrb
or
cmp
xchg
outsb
jg
inc
push
adc
add
dec
sub
jbe
pushf
jg
out
xchg
jo
adc
nop
or
and
bound
add
push
pop
push
mov
lret
adc
stc
xor
rcrb
dec
leave
insb
std
xor
movsb
dec
clc
xorb
mov
sub
test
jbe
aam
mov
mov
fimull
gs
in
sbb
aam
jno
int
adc
test
or
pushf
pushf
stos
stos
push
add
xor
xor
ds
scas
cmpsl
cltd
into
push
xor
fs
movsl
mov
and
sti
mov
mov
pop
jle
xlat
push
pop
jg
movsl
and
inc
or
lock
sub
test
insb
pop
pop
inc
xlat
push
mov
clc
add
pop
dec
sbb
mov
xchg
push
cld
loopne
mov
xchg
sbb
dec
lret
adc
shl
add
and
sub
mov
jb
sub
xchg
lea
in
mov
inc
dec
xchg
or
insb
dec
out
xchg
fstps
call
jle
pop
and
imul
adc
sub
xor
fstpt
mov
lods
cwtl
repz
inc
test
jo
or
insl
leave
inc
xorl
pop
cmp
stc
add
xlat
leave
or
stc
fldcw
insb
inc
fwait
nop
dec
es
movsl
adc
test
inc
jl
out
jp
mov
xor
or
jl
mov
icebp
inc
adc
fiaddl
mov
inc
test
vpminub
jno
inc
out
adc
leave
jle
adc
xchg
loopne
inc
sbb
and
xchg
inc
inc
dec
idivb
lret
add
out
pop
pop
inc
enter
scas
scas
sarl
sub
and
pop
iret
xor
fnstsw
xchg
aam
xchg
fisttpll
inc
sarb
or
dec
mov
stos
jns
and
inc
jge
inc
int
jmp
cmpsl
adc
ret
repnz
dec
cmp
push
fdivrl
int3
in
mov
ds
adc
test
mov
cmc
mov
xor
mov
fs
adc
jbe
lea
dec
and
xchg
xchg
jbe
inc
cwtl
jge
sbbb
mov
xlat
outsb
sbb
enter
pop
imul
pop
sub
test
test
sarb
iret
fcmovne
test
dec
mov
jnp
ja
dec
xor
nop
push
arpl
jmp
xor
sahf
add
mov
mov
add
fcomp
lcall
jb
or
xchg
sarl
adc
adc
pop
icebp
ljmp
xchg
testb
inc
enter
pop
pop
inc
inc
dec
stos
dec
rcrb
push
cltd
push
sub
cmp
ret
repnz
push
mov
inc
push
jl
in
push
mov
adc
pop
mov
decb
popa
mov
mov
pop
mov
out
out
loop
jne
mov
jl
in
mov
js
cmp
clc
and
push
test
popf
fld
scas
lods
sbb
mov
jne
pushf
inc
sub
push
pop
xlat
mov
pop
clc
add
sti
out
out
aad
pop
loope
push
ds
lds
and
sub
mov
lea
mov
mov
adc
push
aad
fidivs
lds
or
aaa
sub
pop
jno
mov
jns
mov
pop
fstl
mov
imull
push
add
cli
jecxz
imul
xor
iret
repnz
out
iret
cmp
sub
inc
sub
or
cltd
into
jo
mov
arpl
mov
mov
jmp
sub
repz
ror
fsts
gs
in
cld
test
push
popf
push
daa
mov
negb
rorb
scas
or
dec
aaa
mov
addr16
and
loopne
ret
daa
int3
xor
push
mov
std
pop
aad
imul
mov
cmp
push
shl
xor
roll
addr16
add
or
mov
scas
hlt
sbb
in
xchg
in
mov
out
mov
mov
aam
dec
jl
mov
ljmp
insl
std
dec
cli
xchg
loopne
pop
and
sub
cmp
imul
mov
jo
icebp
fwait
cmovae
js
jo
dec
fs
gs
mov
mov
push
pop
paddq
mov
and
inc
push
inc
cmp
jmp
adc
xchg
mov
pop
mov
ljmp
mov
pop
cmpsl
insl
push
les
xchg
std
sbb
ds
adc
in
pop
xchg
jl
pop
jge
aam
aaa
pop
or
fxch
push
leave
mov
imul
test
ffreep
enter
addr16
rcll
cmp
push
jle
push
repnz
cmp
out
xor
inc
enter
mov
jmp
and
pop
filds
aaa
hlt
aam
jecxz
jg
inc
sbb
call
or
ret
aam
divl
outsl
mov
or
pusha
cld
add
cmc
or
movb
add
inc
sbb
lds
std
scas
sahf
test
fnstsw
in
jle
lods
jp
test
in
fwait
mov
mov
sti
fadd
wrmsr
pop
cmp
jbe
add
and
dec
adc
jbe
cmp
jb
out
xchg
xchg
call
and
pop
outsl
or
fs
pushl
sub
adc
and
jne
mull
push
lods
adc
jo
and
test
sub
jl
imul
and
nop
jbe
int3
movsl
ja
rcrl
pop
or
lret
hlt
push
jbe
jo
or
movsl
loopne
hlt
call
in
out
int
ljmp
add
push
sbb
and
and
pop
lahf
add
cmc
mov
mov
jo
xchg
add
add
push
and
pop
test
mov
mov
xor
xchg
cmp
xor
test
sbb
xor
ja
mov
push
test
test
pop
and
mov
bound
cltd
cwtl
sbb
pop
push
sbb
lock
lods
pusha
les
sub
mov
sub
mov
or
jle
cmp
cli
call
mov
stos
and
rcll
inc
ss
and
daa
push
lahf
push
jle
mov
push
jl
or
stos
shlb
mov
xchg
dec
lods
stc
stos
sbb
pop
pop
add
and
mov
sub
pop
mov
mov
xor
out
dec
add
inc
test
andb
adc
push
push
push
pop
popa
and
or
mov
jbe
cmp
push
roll
push
jmp
mov
or
inc
movsl
fnstsw
cmp
hlt
insb
adc
mov
add
cli
dec
mov
cmpsl
add
loopne
in
shrb
rcrl
inc
or
icebp
subb
sbb
push
daa
fadd
cli
push
cld
jl
in
pop
rdpmc
popf
jge
cs
pop
push
and
push
in
push
shl
sub
jecxz
adc
or
je
lret
jle
push
inc
stos
hlt
lods
jae
jmp
test
daa
add
and
xchg
pop
movsb
lcall
dec
das
ljmp
adc
arpl
add
or
jge
sahf
fs
mov
in
call
xor
aas
or
orl
mov
loop
pop
pushf
adc
subb
mov
testl
push
lcall
fistpl
jge
mov
mov
aad
xchg
xor
xchg
dec
add
and
pusha
clc
mul
shr
inc
sbb
shl
and
adc
arpl
out
mov
je
or
xchg
xor
leave
sbb
fwait
xchg
cmp
cmp
fidivrs
jb
add
jno
mov
lods
mov
fdivrl
sarl
mov
pop
or
test
lds
pop
cltd
imul
and
mov
adcb
cmp
pop
xorb
rorb
gs
cmp
cvtps2pi
bound
out
cltd
ljmp
push
jl
inc
mov
lods
or
andb
add
mov
ds
pushf
dec
cs
leave
lds
mov
call
out
mov
movsl
bnd
cmp
cmpsl
push
inc
jne
les
xlat
push
sub
out
adc
and
mov
dec
sahf
xchg
xor
sbb
lods
jns
into
test
jnp
scas
push
or
inc
cmp
aas
rcrb
inc
lea
adc
push
add
lock
adc
and
ret
sub
aas
push
movsl
sti
dec
movsl
into
add
or
lcall
sahf
pop
test
shrb
or
xchg
pop
pop
push
jp
int
dec
xchg
test
cli
dec
jle
les
ja
cld
incb
ret
or
lock
sbb
xchg
fadd
xor
xor
scas
or
cld
std
lea
adc
mov
cmp
sbb
xchg
dec
scas
xchg
mov
in
ret
xchg
push
insl
popf
aas
jbe
sub
pop
es
arpl
mov
fdivrl
push
repz
setb
shlb
jbe
gs
push
pop
repz
fmuls
xchg
aaa
dec
in
int
fldl
ljmp
push
dec
pop
out
pop
pop
es
faddl
and
jg
jne
ja
nop
fs
push
xchg
or
mov
pop
jbe
mov
int3
adc
enter
cs
sub
iret
imul
push
push
dec
fldt
or
push
xchg
iret
bound
loop
sub
movsb
inc
pushf
push
jl
and
add
int3
inc
subb
mov
jo
test
insl
in
pop
jecxz
mov
sub
or
push
fwait
je
adc
mov
outsb
rorl
sahf
mov
fnstenv
clc
fsubrl
imul
lahf
or
dec
test
xchg
icebp
aaa
mul
repnz
xlat
inc
shlb
icebp
fldenv
inc
sub
in
pop
sbb
or
adc
fwait
dec
shlb
pop
sbb
fstpl
imul
scas
scas
mov
jl
sahf
test
mov
stos
mov
ljmp
and
outsl
adc
insb
into
rcrl
sub
pop
stos
mov
mov
cmp
cmp
in
js
mov
lods
jnp
lock
fs
filds
dec
or
jnp
jns
sub
std
jge
xchg
cmp
inc
jb
jo
popf
xchg
mov
jbe
add
adc
cmc
shlb
call
sbb
fildl
repnz
add
push
out
adc
and
lcall
push
mov
push
scas
insl
cmp
scas
inc
addl
sub
stos
das
rcrb
dec
cmp
lods
jmp
pop
test
inc
dec
mov
add
mov
xor
aaa
in
sbb
mov
fldenv
insb
adc
in
or
shl
add
insl
mov
mov
bound
mov
dec
dec
je
push
call
sub
jl
lea
mov
xchg
push
or
add
cmp
shr
or
ret
lock
sahf
cld
popf
ss
outsl
insb
cmp
xchg
fs
and
xchg
adc
pop
xchg
push
mov
imul
inc
jbe
mov
popa
ja
testb
add
inc
sbb
ss
sarb
cmp
rcl
je
jnp
and
pop
cmp
push
or
jp
out
lcall
xor
xor
xor
fwait
cwtl
lret
stc
adc
subl
push
fildl
push
jmp
popf
sbb
pop
repnz
add
sbb
je
cmp
imull
mov
mov
imul
mov
ja
test
and
repz
dec
mov
pusha
notb
notl
cmp
fscale
sahf
imul
fwait
mov
fwait
movsl
jl
push
or
inc
test
dec
jge
pop
push
mov
mov
jbe
push
dec
adc
pusha
jmp
xchg
aam
lea
aam
ss
lret
mov
js
cmp
scas
mov
push
pop
out
xchg
dec
in
test
nop
loope
test
mov
or
fcoms
and
ret
test
lea
jmp
es
nop
ja
jno
jae
xchg
rorb
jge
loope
mov
push
loope
movsb
add
outsb
lret
cli
movsl
jl
sbb
loop
push
sub
push
inc
iret
outsb
push
mov
lods
arpl
or
jg
in
push
mov
les
jg
fcomp
arpl
lods
pushf
imul
aam
sarb
leave
in
das
mov
pop
mov
xchg
nop
pop
in
cltd
xor
inc
pop
fldenv
cmp
aas
mov
or
mov
in
inc
xchg
xchg
mov
int3
imulb
mov
arpl
shlb
xor
loopne
pusha
jno
lcall
loop
adc
rcrb
addr16
lahf
cmpsl
sarl
lods
outsb
iret
inc
inc
and
aas
or
hlt
dec
std
push
mov
xchg
jne
fs
sub
fisubs
dec
inc
sub
lock
scas
mov
imul
cltd
jle
test
add
xchg
cmp
or
pop
pop
and
push
cmp
push
movsb
aad
or
sub
sub
enter
fwait
jo
pop
dec
ret
pop
out
inc
push
repz
mov
cmc
mov
cmp
out
xchg
mov
insl
jo
push
jne
inc
dec
popa
adc
dec
sub
jecxz
les
repnz
sub
sbb
out
subb
inc
lahf
ja
out
add
lea
xchg
into
inc
imul
adc
gs
pop
sbb
jg
lods
negb
push
sbb
cs
mov
testl
aaa
mov
add
bound
inc
fcmovbe
or
push
mov
out
push
insl
mov
xchg
add
sbb
mul
and
jnp
into
inc
dec
xchg
mov
int
aas
testl
dec
xchg
jne
add
mov
out
cmp
in
dec
insl
stc
fmuls
and
sti
imul
lcall
sbb
lock
and
xor
test
aas
mov
cld
imul
add
sbb
push
mov
gs
xlat
in
or
rcr
or
jb
pushf
std
pushf
rolb
xor
icebp
pop
enter
insl
or
mov
inc
cmc
xchg
test
adc
xor
stc
daa
xchg
outsb
popa
ret
jno
mov
cwtl
imul
repnz
stos
daa
jg
repnz
jb
adc
push
int
pop
fs
xchg
pop
mov
fcomps
orl
jno
cmp
ja
pop
dec
test
xchg
jg
sbb
enter
je
scas
push
mov
add
or
jo
fnsave
or
std
xchg
clc
sbb
or
in
add
repnz
imul
push
xor
loop
sbb
cld
pop
mov
out
cmpsb
scas
xchg
insb
nop
sub
icebp
imul
std
sbb
pop
xchg
sub
jb
lds
mov
pop
das
testw
jbe
loopne
pop
or
xchg
jns
xchg
repnz
push
popf
lock
in
lods
fsubrl
dec
push
xor
sbb
push
dec
outsl
stos
push
pop
jns
xor
add
and
fnstcw
xchg
outsl
pop
jnp
pop
pop
xor
das
test
fidivs
xor
ret
push
push
aam
sub
add
lahf
push
orl
jl
xor
jge
add
pop
sbb
xor
push
pop
inc
dec
icebp
pushf
mov
push
dec
jno
shll
loop
fwait
in
jle
bound
cltd
popf
cmp
push
xchg
out
xor
fidivs
call
jp
int3
jae
pop
xor
jne
xchg
and
add
leave
adc
push
mov
inc
cld
sbb
cmp
movsb
mov
inc
ljmp
jae
or
mov
cmp
jbe
sbbl
adc
rol
adc
test
xchg
cmp
mov
hlt
aaa
mov
add
and
push
adc
negl
pushl
fsubs
add
mov
xor
jae
decl
xor
mov
pop
mov
dec
fisttpl
jo
gs
xchg
insl
add
xchg
and
push
and
inc
mov
mov
filds
iret
xor
pop
inc
lcall
xor
std
stos
xchg
test
mov
dec
jmp
push
and
push
dec
pushf
insl
iret
and
test
pop
sbbb
jb
loopne
push
push
fists
xchg
sti
rolb
insb
push
scas
movsl
xor
or
xlat
or
xor
push
cmpsb
push
subb
pop
adc
bndstx
fwait
aaa
xor
add
enter
dec
insl
sbb
xor
ja
and
xchg
mov
pusha
dec
leave
push
je
fisubs
dec
dec
fisubrs
aad
mov
xchg
out
lret
cwtl
or
mov
stos
iret
insl
ljmp
or
test
loope
ss
adc
or
inc
loope
pop
sbb
clc
pop
or
mov
mov
jle
add
arpl
in
ja
inc
mov
outsb
mov
test
into
lods
push
sbb
pop
adc
pop
mov
push
push
sub
rcrb
stc
pop
pop
adc
jbe
test
lret
sahf
cli
cld
cmp
sbb
jl
outsl
leave
mov
xor
pop
orb
test
sti
xor
aaa
je
iret
loop
cmpsl
pop
pop
loope
sub
add
arpl
add
xchg
or
jecxz
stc
sbb
jb
fildll
jo
xor
movsb
lods
cmpsl
insb
jecxz
mov
mov
aam
pop
xchg
mov
scas
mov
adc
aam
in
repz
lock
aas
das
sub
cmp
xor
xchg
inc
ds
push
inc
cmpxchg
cwtl
sar
fidivrl
ficompl
or
push
xchg
shll
mov
mov
cmpsl
out
sbb
pop
pop
test
pop
push
cmp
pop
out
cmp
into
xchg
jnp
subl
addb
and
or
loope
and
aad
inc
test
stos
add
leave
notl
imulb
lea
stos
in
mov
pop
adc
dec
jl
cmp
shll
jno
imul
test
inc
pop
pop
mov
arpl
stos
inc
inc
loopne
addr16
xchg
insb
add
mov
or
in
popa
or
jne
xlat
emms
mov
lea
leave
pushf
movsl
out
cmpsl
pushf
ds
pop
in
scas
aaa
fucom
xor
jns
cmpsb
call
hlt
fmull
lahf
xchg
clc
jb
add
loop
mov
shrl
pushf
clc
pop
xor
addl
and
cs
test
daa
das
insl
jns
mov
pusha
int3
lahf
pop
add
xchg
test
jb
xor
incb
pop
pushf
fldl
mov
pop
imull
js
mov
adc
fwait
mov
je
jg
rcrb
sub
pop
lods
popa
test
sub
cmp
xchg
imul
and
or
fwait
lcall
icebp
js
repnz
testb
popa
jb
xchg
sbb
in
and
mov
jae
sub
jne
std
pop
or
sbb
ljmp
gs
lock
dec
popa
smsw
aas
icebp
fwait
test
and
test
jg
cld
xchg
push
push
fnclex
ds
sbb
je
dec
in
pushf
xor
adc
jo
rcll
cmp
pop
daa
jmp
pop
jb
clc
je
ret
mov
gs
gs
dec
pop
push
mov
lret
mov
inc
insl
imull
push
imul
outsb
stos
sahf
fucomip
push
or
imul
mov
ret
out
push
mov
xchg
pop
sarl
test
inc
adc
cmp
mov
or
adc
sub
aaa
outsl
insb
in
sub
jbe
or
pop
fcoml
xchg
int
push
jbe
arpl
pop
test
and
push
mov
fdivrl
test
push
xor
cli
adc
stc
fistpll
in
fisttpl
in
jns
cli
sbb
push
pusha
push
negl
rorl
je
js
shl
jne
adc
sbb
push
jo
gs
xchg
pop
jp
cltd
leave
or
or
push
pop
add
pop
scas
cmp
out
inc
cmpsb
mov
popa
or
inc
pop
cs
jae
cld
mov
mov
sbb
ljmp
negl
ret
test
cltd
mov
push
dec
push
mov
aas
movsb
pop
daa
mov
repnz
lock
xor
mov
int
add
leave
push
lds
jno
nop
or
in
fsts
adc
popa
xor
jmp
out
loopne
or
mov
sub
cmc
scas
mov
and
jl
mov
jnp
daa
es
movsl
push
imul
xor
push
bound
test
cmp
and
pop
xlat
aad
sbbb
cmp
dec
fs
loop
mov
adc
mov
int3
cltd
sub
xchg
scas
ret
sub
popf
out
mov
clc
sub
or
hlt
fistl
push
in
cmp
lcall
inc
push
inc
add
push
fs
movsl
xor
cwtl
popf
sub
lcall
out
aad
sub
enter
push
popf
push
leave
cmp
fwait
mov
stos
fisttps
jns
xchg
inc
imul
std
lea
inc
dec
dec
outsb
xchg
stos
add
mov
xor
dec
cwtl
out
addr16
sub
insl
cmp
jecxz
fsubrs
jecxz
rol
add
in
jg
jle
nop
push
repz
and
jnp
sub
mov
xchg
jl
aas
xchg
sub
jno
ror
and
xor
imul
or
sti
or
lret
pop
add
scas
insl
pop
sbb
adc
inc
lea
ret
ficoms
jnp
fwait
sub
lcall
pop
imul
add
call
inc
push
or
fists
into
xchg
jmp
lahf
and
mov
clc
xchg
push
insl
data16
mov
das
jg
scas
or
sbb
sarb
mov
in
add
stc
fcoms
repnz
aaa
push
out
push
adcb
mov
sbb
ret
sbb
add
inc
or
stos
mov
mov
aaa
out
add
scas
fildl
sbb
adc
push
cmpsb
int
das
sub
nop
and
cmpl
arpl
fnsave
jp
lret
les
adc
pop
lcall
sbb
inc
test
mov
leave
cwtl
mov
xchg
aam
orb
push
std
dec
push
cmp
add
xor
mov
push
and
mov
push
or
mov
test
lahf
adc
push
inc
std
movsl
or
lds
mov
loop
insb
mov
daa
dec
sub
push
and
in
bound
test
bound
push
jle
loop
adc
cmpsb
shll
or
sbbl
cmpsl
xchg
jae
mov
adc
sbb
add
int
mov
add
push
ret
fs
dec
cmpl
push
das
aam
cltd
push
popaw
adc
jp
pop
std
mov
sbb
adc
and
and
movsb
je
rcrb
jb
stos
jl
mov
jns
and
jne
fimull
in
or
pop
into
pop
fdivrl
pop
ljmp
outsl
arpl
fdivl
adc
push
mov
out
xchg
loop
ficoml
pusha
pusha
xchg
les
or
inc
jle
push
xchg
stos
iret
xorb
fdivrs
les
sbbl
lret
mov
test
sbb
test
pop
inc
lret
orl
jp
mov
in
push
sbb
daa
xor
xchg
cmpsb
leave
and
jnp
push
cld
mov
mov
fiadds
hlt
or
stos
pop
js
out
nop
add
xchg
adc
cmpsb
push
inc
test
arpl
daa
dec
push
inc
mov
mov
jae
sbb
out
dec
repnz
ljmp
inc
dec
xlat
outsl
clc
int3
cli
gs
fcomps
in
out
inc
jo
aam
in
lds
xor
xor
arpl
cld
and
push
in
std
dec
adc
fnstenv
cli
ljmp
inc
jmp
push
out
and
cmpsl
mov
call
test
insb
fwait
repnz
sarb
pop
xor
out
dec
xchg
out
lret
cmovnp
pop
xchg
sti
ja
xlat
nop
mov
int
sarl
jae
loopne
pop
icebp
enter
jmp
js
add
pop
mov
push
pop
push
inc
dec
and
scas
add
test
cmpsl
lahf
cmp
mov
push
enter
sub
jo
mov
or
scas
sub
outsb
shr
mov
es
sarb
or
js
sub
scas
std
adc
mov
xlat
paddb
sub
xchg
push
cmp
mov
daa
stos
lods
sahf
jge
and
mov
ss
loopne
sbb
clc
test
push
sbb
icebp
cmpsb
fcmovb
sbb
pop
jae
pop
leave
inc
and
lods
ds
or
pop
bound
adc
outsb
fadds
jmp
lods
cmp
leave
ss
repnz
jecxz
loope
cmp
rcl
call
mov
jmp
je
leave
mov
movsl
cmpsb
pop
or
lods
mov
rorb
sti
push
sbb
mov
fstpt
and
cwtl
std
push
sub
repz
repnz
test
lahf
jg
loop
push
and
xor
nop
movsl
gs
dec
push
pushl
cwtl
in
repnz
loopne
jmp
pop
xchg
sbb
xchg
adc
out
adc
test
fnsave
loope
push
jae
add
lcall
adc
fmul
inc
cs
lea
je
test
pusha
fwait
jnp
dec
mov
enter
pop
cmp
adcl
dec
repz
sbb
std
xchg
mov
int3
xlat
cli
dec
jg
cwtl
mov
mov
enter
mov
shr
push
loopne
dec
rcll
outsb
test
fidivrl
add
aad
jg
mov
rcll
dec
mov
lea
pop
dec
mov
push
pop
es
xchg
outsl
sub
cltd
cltd
adc
mov
dec
mov
mov
jl
mov
xor
hlt
in
cwtl
je
add
inc
sub
xchg
ficomps
cmp
sarl
repz
pop
mov
xor
ficoms
add
in
lret
xor
cmc
adc
adcb
cmc
or
sbb
mov
mov
pop
mov
jbe
loopne
das
shl
out
sahf
in
add
push
jb
jecxz
mov
in
xor
repnz
pop
pushf
out
pop
push
jnp
lea
xchg
lcall
hlt
lods
imulb
pop
push
mov
into
mov
lcall
push
nop
in
mov
mov
mov
cmpsb
inc
loop
and
jae
mov
inc
xor
fstpl
push
cmp
or
xchg
arpl
sub
mov
cmp
mov
lahf
mov
sub
xor
pop
std
std
lods
inc
mov
dec
jns
dec
popa
lret
push
and
jno
bound
fwait
jecxz
std
jno
mov
popf
sub
mov
and
jb
loop
rcrb
outsl
clc
scas
add
call
lahf
inc
adc
xor
cmp
js
jge
xchg
ss
lahf
cmp
mov
pop
cmp
inc
push
stos
insl
push
pop
mov
dec
movsb
xchg
xchg
jb
inc
add
push
cs
jo
mov
jbe
mov
paddd
addl
pop
fsts
mov
inc
mov
leave
mov
xchg
mov
lcall
mov
into
adc
repz
es
fadds
jecxz
or
dec
fsubr
xchg
lea
mov
lcall
fisttps
xchg
mov
push
push
and
add
push
fistpll
dec
mov
ljmp
scas
mov
sbb
sub
aaa
mov
insl
jmp
inc
dec
mov
repz
daa
dec
ja
jp
push
adc
cmp
push
mov
mov
xchg
cmpsb
push
xchg
pushf
stos
xlat
daa
mov
xor
lcall
addr16
or
and
or
mov
hlt
and
add
inc
inc
je
mov
lock
lea
in
jmp
cltd
jb
jmp
clc
enter
add
aaa
mov
and
push
int
mov
adc
add
xor
sub
jp
rcrl
hlt
add
loopne
lret
pop
mov
sbb
mov
sbbl
jbe
mov
xchg
sub
in
ja
xor
mov
testb
lret
shll
mov
xor
add
fsts
or
jnp
or
jle
jae
push
inc
out
shrl
xchg
mov
or
lret
insb
repz
mov
push
sbb
mov
dec
imul
cmp
sbb
lret
jl
mov
es
insb
adc
popf
xor
and
cltd
pop
addr16
enter
sub
sub
repz
dec
jno
inc
vminsd
jecxz
div
outsl
fcmovnu
jnp
lahf
jmp
jle
shll
aam
sub
adc
les
pushf
scas
jge
cmp
stos
test
mov
fwait
xor
dec
and
pop
sub
mov
insl
mov
mov
jmp
adc
pop
movsb
xchg
jmp
jns
push
addb
push
push
enter
aas
pop
mov
loopne
lret
sbb
lret
cs
add
and
and
mov
push
mov
imul
or
sbb
decl
mov
std
add
imul
xchg
xor
inc
mov
fsubrs
jl
or
repnz
test
adc
cmp
sub
mov
inc
pop
xchg
adc
aas
xor
ljmp
mov
icebp
lea
in
sbb
jae
mov
sub
fisubrl
movsl
pop
arpl
push
cmp
push
pcmpeqw
test
inc
inc
and
dec
aaa
jbe
mov
xor
push
sahf
orl
or
inc
stc
sub
cmpsl
movsb
jl
xor
fmuls
adc
scas
stos
test
inc
dec
loope
in
jns
xchg
mov
adc
jbe
and
popa
jg
shrb
fiaddl
xchg
nop
iret
test
push
ss
dec
mov
mov
pop
mov
in
fiadds
jge
cwtl
and
mov
mov
insb
push
push
fmull
add
or
push
in
dec
or
in
jle
adc
inc
xchg
mov
negb
inc
out
and
stc
xor
insb
sub
fwait
div
pop
inc
fbld
andb
gs
or
dec
sarl
loope
std
inc
jmp
sub
out
sbb
adc
stc
jecxz
or
push
mov
je
hlt
cmp
into
insl
dec
mov
jl
jge
clc
das
xor
jo
inc
int3
pop
mov
leave
push
fcomp
push
sbb
adc
jne
in
mov
add
xor
es
insb
cmp
ds
arpl
sbb
dec
add
jne
fmul
sub
sbb
dec
mov
jne
mov
jl
inc
int
roll
and
mov
cmc
push
mov
sbb
push
jo
xchg
testb
jns
sti
cmp
pop
xchg
sub
setg
shl
shll
and
sub
add
mov
incl
or
addr16
sub
jno
jnp
xlat
out
arpl
enter
jno
inc
adc
mov
jp
adc
js
popa
mov
dec
test
jecxz
daa
push
cmp
gs
dec
dec
mov
pushf
sbb
fstl
ds
nop
mov
in
mov
sbb
pop
cmpl
cmp
loopne
sti
mov
lret
leave
repnz
gs
adc
add
cs
in
outsl
pop
sbb
add
out
insb
and
and
mov
in
add
sti
sbb
in
inc
repnz
mov
nop
and
std
cld
gs
fldl
mov
mov
enter
pop
and
mov
dec
std
incb
xor
leave
daa
push
ds
cmpsb
inc
mov
mov
sbb
xchg
call
mov
sbb
fisttps
mov
cli
mov
mov
les
adc
mov
lcall
insl
or
adc
xchg
in
cwtl
shll
pop
sbb
mov
sub
push
stos
jb
mov
aaa
add
faddp
push
fisubrl
push
inc
adc
ret
addl
and
and
inc
popa
sub
pushf
movsl
mov
mov
cmpsl
add
mov
lahf
sbb
sub
mov
arpl
fistl
sub
or
or
adc
lock
adc
add
mov
inc
sub
cmp
jmp
ljmp
xchg
sbb
sbb
xchg
test
pop
push
dec
addr16
lret
pop
cmp
cmp
add
jl
lods
or
cltd
das
lods
stos
or
push
lahf
in
hlt
testl
outsl
pop
pushf
or
hlt
xor
cmp
clc
mov
jecxz
mov
fdivl
inc
es
jmp
xor
push
into
cs
mov
rorb
mov
inc
rep
insb
add
adc
mov
int
and
test
imul
push
and
cmp
mov
ljmp
mov
lods
inc
in
dec
aaa
or
ja
lahf
sbb
daa
andb
pop
mov
les
pmulhuw
mov
add
mov
lret
ja
jnp
sti
pop
mov
mov
add
arpl
dec
outsb
mov
jg
dec
mov
mov
insb
add
or
and
mov
xor
and
adc
roll
in
mov
cltd
xor
add
je
push
add
jl
stc
xchg
in
popf
lods
mov
insl
xchg
xchg
lret
stc
sbb
mov
cmpsb
push
pop
jno
clc
add
pop
ret
cltd
jecxz
dec
call
jmp
test
xor
or
adc
jmp
or
stc
cltd
cwtl
lret
push
fsubs
pop
dec
and
adc
pop
fcompl
cmp
sub
or
push
mov
cmpsb
repz
sub
push
addr16
fidivl
test
rcll
dec
jns
add
and
mov
into
aas
mov
xchg
xchg
addb
loop
mov
nop
lds
jne
jae
ds
push
js
int3
enter
test
xchg
fucomip
mov
mov
popf
leave
cmp
data16
jg
pop
jne
push
dec
lcall
jbe
jns
and
idiv
push
push
cmp
push
nop
popf
mov
dec
fbstp
jo
loopne
daa
cld
addr16
adc
push
xor
fcmovne
cmp
xchg
pop
sbb
add
inc
fnsave
outsb
iret
pop
fs
int3
gs
and
cmpsb
mov
xchg
in
repnz
xchg
cwtl
sub
lock
mov
jae
imul
inc
mov
test
lock
xchg
or
test
call
dec
les
jne
arpl
inc
stos
stos
ret
dec
cli
pop
add
addr16
lret
pop
lock
add
mov
mov
cmovg
pusha
roll
into
push
es
loop
adc
xchg
jbe
std
leave
movsb
test
dec
and
test
sbb
js
sub
pop
and
outsb
aaa
mov
pop
and
iret
push
outsb
push
mov
into
jno
aam
icebp
or
adc
add
jmp
in
insl
add
cwtl
or
jbe
inc
lock
in
mov
pop
mov
ficomps
je
fldcw
call
fildll
pop
into
sub
lcall
sub
mov
sbb
jg
mov
in
push
sbb
sahf
and
push
add
jbe
or
mov
jne
dec
push
out
xor
inc
ret
jle
sbb
mov
lods
sbb
sbb
cmp
cmp
addl
loop
jle
inc
or
data16
cltd
out
cltd
int
loop
push
jp
sub
adc
pusha
scas
mov
test
adc
movsb
cmc
ljmp
aam
mov
imul
addb
ret
add
adc
pop
js
fnstenv
js
imul
insb
js
je
pcmpgtd
fnstsw
scas
mov
push
jmp
push
dec
cli
sbb
sarb
push
xchg
pop
outsl
xor
in
pop
mov
repz
inc
adc
xor
xchg
lcall
imul
popf
mov
push
ret
and
mov
dec
xchg
sti
push
xchg
sub
jae
push
nop
in
aam
adc
adc
pop
xchg
and
sbbl
jno
into
sbb
pusha
jns
shl
into
mov
outsb
xchg
and
mov
lods
stc
sbb
cmp
mov
adc
sbbb
orb
fstl
jmp
out
add
and
lods
mov
adc
icebp
jecxz
push
jno
bound
push
xor
jle
mov
cmp
daa
jg
sub
addl
jmp
pushf
das
jbe
xor
push
inc
pop
dec
dec
insb
ret
scas
test
cmpl
sbb
add
cmp
cmpsb
frstor
add
arpl
aam
loop
fimuls
or
mov
mov
pop
sbb
mov
xchg
rolb
push
mov
and
cld
es
xor
pusha
xor
xchg
ds
xorb
popf
divl
ja
mov
jecxz
lret
push
test
movsl
jg
mov
sahf
fdivrl
xorl
das
andb
aas
push
push
inc
ja
and
fcmovbe
mov
and
insl
lea
push
test
add
inc
or
xchg
cmp
push
bound
sbb
jecxz
adc
jle
lods
addr16
add
mov
pop
test
nop
pushl
inc
jo
dec
sbb
sbb
fbld
mov
seto
cwtl
or
and
shlb
push
add
lret
bound
cs
xor
shl
pop
fsts
sbb
jae
cmpb
push
out
or
pop
mov
fbstp
in
xor
push
into
lcall
push
push
push
push
add
pop
push
cmc
jg
or
xor
mov
mov
test
rol
mov
sbb
mov
mov
leave
xor
bound
jnp
js
and
daa
xor
popf
inc
aam
popf
sbb
sti
sub
and
cwtl
rol
sbb
test
cmp
pop
lea
xchg
and
rcrb
icebp
aas
lock
test
data16
js
mov
add
outsb
inc
push
mov
xor
in
jae
push
clc
xchg
iret
push
pushf
fsubrp
jbe
nop
add
cltd
lret
push
mov
jb
mov
ret
cmp
lret
inc
aas
scas
xchg
int
pop
cmp
roll
lret
iret
inc
or
ljmp
and
repnz
lds
push
popa
push
xchg
ret
mov
cmc
out
in
adc
andl
pop
dec
aad
incl
loop
fidivs
inc
dec
repnz
push
scas
mov
lret
push
push
or
jns
mov
mov
mov
add
fwait
xabort
push
out
fs
ficoml
cmpsb
inc
repz
ss
cmpsb
cmpsl
cmpsl
lret
inc
rcr
ljmp
pop
call
cmpsl
jle
sahf
mov
xor
sahf
addb
inc
mov
adc
push
inc
mov
xor
movsl
mov
shll
jp
dec
sarb
fnsave
mov
stc
popf
adc
sub
xlat
movsb
sub
test
adc
pushl
add
cmp
insb
jecxz
orb
and
rorl
xchg
mov
pop
sbb
pop
je
push
repz
mov
out
xchg
fistpl
hlt
push
insl
jno
shr
mov
xor
es
cmp
ljmp
lahf
arpl
jbe
mov
out
add
push
es
fimull
cwtl
inc
xchg
push
add
add
jo
jg
add
fbld
jo
sub
pop
mov
inc
add
pop
dec
or
inc
popa
xchg
adc
test
add
fists
scas
nop
cld
mov
lret
cmc
jecxz
xor
arpl
lcall
enter
out
cmp
ljmp
bound
bnd
out
sti
ficomps
imul
dec
out
xor
shrb
dec
sbb
ret
mov
mov
dec
sbb
imul
test
push
mull
push
in
add
lret
add
frstor
fsubl
xchg
dec
push
push
or
les
adc
js
jnp
lea
loopne
outsl
sub
mov
xor
outsb
lock
push
faddl
sbb
test
add
iret
in
push
bound
ss
out
push
loopne
fwait
ja
lds
int3
outsb
iret
inc
lods
lock
xchg
adc
or
fiaddl
and
clc
or
ljmp
jg
lock
dec
sbb
cli
cwtl
inc
sub
push
cmpsl
lahf
popw
je
jg
add
cmp
pop
mov
pop
loop
enter
out
popf
xorb
cmp
fs
or
jno
imul
sub
dec
mov
mov
xchg
xor
sub
movsb
mov
sub
cwtl
shr
je
lea
shr
push
scas
push
scas
adc
push
xor
dec
hlt
cltd
and
dec
dec
ss
cmp
or
int3
shrl
fnstcw
adc
test
addr16
ds
lret
je
xchg
popf
subl
mov
shll
jge
mov
fists
sbb
mov
push
or
repnz
outsb
ja
gs
cmp
insl
xchg
adc
mov
cltd
mov
add
nop
push
popl
jbe,pt
rolb
outsb
add
mov
xchg
cs
notb
imul
jg
xchg
cmc
outsb
insl
mov
ds
inc
or
leave
fnstsw
enter
aaa
icebp
jge
mov
leave
mulb
cmp
add
pop
in
rorl
and
scas
pop
popf
outsl
mov
push
mov
aas
ret
leave
xchg
sbb
scas
xchg
jbe
cmp
std
pushf
pusha
loop
pop
mov
dec
mov
mov
hlt
loope
out
aam
stos
test
in
push
push
cmc
outsl
mov
into
push
cmp
jmp
ret
loop
aas
aam
inc
xor
add
outsl
lret
sbb
aaa
leave
inc
pusha
pop
outsl
xchg
push
lock
imul
xchg
jbe
outsl
mov
fsub
test
push
push
repz
addr16
add
cmp
repz
mov
cmp
jmp
out
dec
out
test
add
push
das
daa
shl
gs
sarb
inc
lods
and
std
arpl
insb
inc
sub
loop
xor
xchg
xchg
scas
gs
and
or
test
jo
jbe
je
pusha
sbb
incb
sbb
adc
in
and
lret
popa
push
pop
pushf
add
fstl
daa
sub
aas
jge
ffree
cmp
mov
push
add
js
mov
sub
arpl
mov
sub
xor
inc
lock
pop
cmp
inc
arpl
xor
movsl
rcrb
fidivrl
push
sbb
orl
in
add
imul
iret
push
add
inc
ljmp
rclb
sub
adc
mov
rolb
cmp
adc
mov
xchg
leave
xchg
and
adc
adc
and
xor
fcmove
dec
outsb
mov
stos
or
fldcw
dec
push
into
test
out
mov
jo
repz
or
rcr
mov
inc
mov
filds
fdivr
sbb
popf
lock
mov
fidivl
push
out
jno
mov
xor
mov
setno
fistl
jmp
mov
mov
testl
sbb
mov
fcompl
iret
add
mov
jp
into
sub
out
insb
inc
sbb
rol
xchg
sbb
push
inc
mov
addr16
aaa
mov
shrb
es
adc
jge
orb
jl
mov
call
add
aaa
repnz
stc
enter
icebp
adc
ror
pusha
inc
xor
inc
cmp
sub
jge
adc
rcr
lret
cmp
add
fildl
hlt
je
sub
das
mov
sub
adc
test
mov
mov
aas
or
test
testb
inc
xchg
insl
mov
push
in
scas
jge
xor
loopne
mov
and
pop
jae
push
or
fcom
adc
scas
sti
popa
xchg
ljmp
push
pcmpeqb
xchg
sbb
pop
sub
add
dec
jne
lahf
out
fisubrs
xchg
sbb
lcall
jnp
in
sahf
mov
cld
jns
negb
insb
aad
ljmp
xor
sub
sub
jmp
push
mov
enter
cmp
cmp
cli
or
arpl
dec
mov
outsl
roll
repz
cwtl
mov
mov
pop
test
xchg
mov
cmpsw
test
pop
inc
sbb
mov
ds
mov
xor
call
jle
aaa
scas
cmp
js
dec
dec
push
push
adc
addl
test
mull
mov
push
jae
sahf
pushf
sub
outsb
sub
out
adc
xchg
sub
push
pushf
sbb
push
and
testl
rorl
push
test
cwtl
dec
mov
clc
hlt
je
pop
lods
push
add
sti
test
cli
mov
adc
mov
rorb
adcb
inc
and
imul
push
jmp
aas
ret
std
setge
enter
adc
pushf
dec
addr16
insb
loopne
jecxz
pop
adc
xchg
lods
xchg
adc
into
fbld
adc
pop
or
outsb
lahf
dec
inc
pop
jle
call
iret
insl
push
daa
xchg
pop
add
hlt
push
sbb
aad
mov
add
mov
icebp
fsubrs
add
int
insl
imul
pop
das
mov
icebp
hlt
decb
ret
call
xor
inc
push
imul
xor
inc
sbb
xchg
int3
jae
sbb
xchg
repz
sti
mov
jl
or
and
fldt
mov
orl
fcmovbe
push
push
lock
jnp
push
jbe
lahf
add
fs
inc
mov
movsl
insl
sbb
aas
sub
adc
cli
xor
repz
pop
jae
mov
movsb
and
stos
aaa
jne
or
inc
loop
jns
or
push
sbb
cs
in
popf
add
add
mov
mov
imul
imul
add
fisttpl
lea
lcall
lods
lock
or
call
enter
xlat
jo
nop
add
fisubrl
fwait
daa
lds
daa
or
popa
mov
call
xchg
dec
cmpsb
pop
setb
js
xchg
jns
js
in
sub
ja
fdiv
loope
sub
out
xor
dec
and
mov
jno
inc
adc
jge
stos
popa
inc
mov
lock
lods
mov
faddl
fdivp
cli
mov
pop
xor
ret
popa
add
lods
loopne
dec
xor
jmp
mov
mov
mov
pop
repnz
fstpl
je
lods
xorb
lret
and
and
sub
and
mov
lcall
mov
mov
mov
sahf
lea
ret
or
pop
pop
test
or
jp
ja
mov
sbb
and
fstl
push
fidivrl
or
xor
int
adc
sti
xchg
decl
call
mov
inc
ss
cmc
int
sbb
pop
movsl
shll
test
cld
loope
ret
jl
mov
and
mov
lock
gs
sub
cmpsl
es
ret
push
jb
sbb
and
jns
pop
push
std
jmp
inc
pop
mov
out
andl
adc
dec
cmpsl
lods
addr16
and
inc
sbb
data16
iret
xchg
mov
nop
add
mov
dec
orb
cmpsl
inc
test
jns
sub
pop
push
in
add
mov
pushf
fcomps
add
loopne
je
popl
add
add
int
mov
pop
inc
jg
sub
and
subl
push
jbe
sbb
xor
jae
pushf
daa
sbb
in
leave
lds
pop
call
mov
mov
or
cmpb
or
lret
or
lahf
lret
xchg
fimull
test
xor
mov
inc
mov
xchg
es
fistps
fcompp
lahf
in
mov
sbb
lret
and
stos
dec
push
mov
mov
jne
lahf
jne
orb
lret
cmp
int
cmp
jmp
inc
xor
in
and
cld
das
sarb
xchg
cmp
int3
lret
xor
hlt
clc
scas
mov
cltd
fstps
mov
mov
or
dec
in
cmp
mov
inc
adc
fstpl
cmpsb
dec
sbb
push
push
cmpsl
mov
fdivrs
cmc
mov
jge
xor
dec
pop
xor
mov
fimull
jmp
ret
jle
pop
mov
loop
add
test
incl
jns
adc
imul
ret
mov
mov
movsb
mov
mov
mov
icebp
mov
adc
inc
testl
dec
xor
jne
test
jns
cs
xchg
pop
iret
sub
test
data16
adc
movsl
and
insl
lret
mov
cmp
and
push
pop
mov
push
or
ja
push
xchg
test
jge
jne
gs
cmpsl
test
mov
dec
xor
push
sbb
cs
dec
adc
mov
int
testl
add
pop
mov
out
and
cmp
mov
in
jns
sbbb
cmp
adc
pop
hlt
clc
rcl
mov
aam
std
gs
cld
or
sub
shl
or
scas
imul
jns
sbb
fdivl
dec
cwtl
shll
insl
push
jnp
inc
stos
dec
inc
xchg
dec
loop
xchg
sub
jb
pop
xorb
in
pop
test
repz
pushf
xchg
xor
shr
negb
imul
pop
lcall
mov
scas
mov
sub
mov
sbb
add
pusha
mov
jae
out
mov
lds
imul
dec
inc
addr16
or
and
mov
scas
and
in
scas
cmpsb
sub
sbbl
or
jp
test
int3
aaa
pop
adc
inc
sub
mov
adc
outsb
iret
cmp
lcall
out
mov
out
add
imul
jg
andl
stc
fstl
adc
jae
mov
inc
mov
addl
or
xor
outsl
dec
xor
inc
and
jg
mov
inc
adc
add
cltd
add
adc
adc
sarl
daa
push
into
les
aas
in
sbb
or
xor
push
orb
xor
dec
jb
ljmp
pop
mov
test
mov
ret
movsb
push
popa
daa
mov
lret
andb
pop
scas
xchg
jp
xor
fwait
mov
sbb
fidivrs
dec
icebp
das
cmpsb
shl
sbbb
adc
xor
ret
sbb
or
push
sub
and
pop
les
xchg
aam
fcomps
pop
pop
insb
mov
lods
in
hlt
dec
sub
fidivrl
mov
cmpsb
lret
cltd
xor
movb
xor
lock
mov
mov
fists
xchg
pop
outsb
push
lods
cmpsl
mov
dec
pop
jno
jae
mov
pusha
jg
cltd
leave
jecxz
in
mov
cmp
fiaddl
sbb
and
mov
int3
add
enter
mov
or
loopne
lds
pop
imul
subb
shlb
jnp
dec
lock
iret
enter
xchg
xchg
sbb
pop
pop
mov
pop
sbb
xlat
xor
icebp
sbb
add
mov
cmp
jp
ds
aaa
mov
sub
mov
cli
es
pusha
dec
scas
out
rclb
push
out
subl
mov
mov
scas
ret
add
cmp
pop
pop
mov
or
pop
pop
push
push
sarl
pop
or
sahf
rclb
pop
loop
sbb
adc
cld
xor
xchg
sub
outsb
das
movsl
push
sub
dec
dec
pop
std
xchg
inc
fcoms
ror
mov
mov
shrb
imul
jns
mov
cmp
popa
orb
bound
jg
jae
sub
ljmp
xor
jmp
dec
ficomps
fsub
fisubrl
mov
int3
pop
loope
pop
mov
dec
mov
stos
fldenv
inc
inc
mov
enter
shrl
mov
notb
or
imul
or
sbb
adc
cmp
cmp
mov
and
xchg
mov
sbb
aas
rcrb
mov
sub
popa
jge
insl
incl
inc
push
mov
inc
jp
jo
int
xorb
movsl
mov
andl
ljmp
inc
fdiv
inc
cmp
push
cwtl
mov
rcrb
xlat
xlat
inc
sub
cmc
test
fdivs
and
insl
cmp
fbld
cmp
ficoms
pop
ja
shlb
jmp
daa
and
inc
adcl
subb
dec
adc
mov
int3
mov
push
mov
mov
sub
lock
out
add
xchg
out
filds
orl
out
out
in
sti
xchg
mov
lods
mov
fistpll
add
xor
into
and
push
test
fstpt
jne
add
jo
sub
and
testl
mov
xchg
aas
mov
mov
scas
mov
inc
xlat
add
add
mov
xchg
ds
push
fs
clc
mov
sub
out
ret
jge
shll
dec
cmp
cmp
test
mov
ja
cld
cmp
clc
sub
or
and
add
pop
xor
push
aam
ret
dec
imul
movsb
mov
mov
cmp
std
mov
lcall
aam
sarb
out
lret
inc
popa
and
mov
adc
jb
add
dec
ret
out
xlat
out
cmpl
mov
jge
mov
leave
jg
stos
mov
jg
arpl
push
cmp
int3
fs
mov
pop
adc
cmp
pop
sbb
or
mov
mov
out
mov
mov
sub
fldenv
jg
xor
movsl
xchg
fdivl
push
xchg
add
cltd
sbb
ja
scas
inc
movb
sbb
mov
stos
scas
sub
iret
or
js
jbe
stos
push
mov
sbb
std
add
xchg
movsl
js
pop
xchg
mov
cs
gs
push
rorl
stos
xor
xchg
cmp
test
mov
lahf
dec
icebp
jb
pushf
adc
inc
test
js
test
and
sub
add
cld
pop
inc
add
movsb
aam
into
lahf
call
insb
push
cmp
imul
jns
jg
das
add
mov
in
imul
call
sbb
repz
xchg
mov
rcl
xor
ficompl
lret
shlb
ss
inc
loop
inc
pusha
sbb
imul
push
inc
adc
outsl
sub
push
fisttpll
mov
pop
outsb
mov
jns
push
outsl
jnp
push
xchg
mov
jnp
cs
das
out
icebp
loope
enter
insb
ret
xor
mov
and
pop
jo
cmp
orb
aad
and
mov
lods
xchg
sbb
pop
mov
and
imul
or
cmp
xchg
fdivs
repnz
dec
popa
fldenv
cmp
jecxz
sub
sahf
outsb
arpl
xchg
push
iret
out
stos
cld
mov
stos
mov
jp
bound
push
jne
in
mov
enter
dec
pushl
cwtl
push
fwait
scas
frstor
mov
ja
add
dec
cmp
inc
adc
mov
xchg
int3
jle
jp
jno
stos
in
mov
mov
out
cwtl
sbbb
lock
inc
push
pop
int
lods
cli
int
inc
cmpsb
pop
jge
xchg
in
fldt
pop
inc
fcomp
push
fldt
pop
out
icebp
nop
shr
fneni(8087
push
xlat
addl
mov
shr
push
cmp
in
inc
insl
dec
je
pop
and
ret
push
loopne
adc
ds
sbb
push
or
fsubr
ljmp
data16
push
in
fistpl
push
call
in
enter
repz
inc
xchg
mov
jbe
xor
insb
aaa
outsl
adc
xor
mov
movsl
test
cmp
and
rolb
inc
ret
cmp
mov
sbb
dec
ret
shlb
sub
pop
sbb
fdivs
xorl
sahf
cltd
jbe
xchg
imul
call
cmp
mov
in
push
pop
insb
inc
repnz
mov
fwait
xchg
sti
cwtl
inc
enter
xor
cmp
lods
sub
or
xor
in
aas
inc
push
jne
mov
mov
inc
addb
xchg
shll
jno
dec
rclb
iret
arpl
adc
cwtl
pop
loope
and
rcrb
jne
push
das
stc
or
in
mov
cmp
lret
gs
cld
es
stc
push
and
and
or
mov
stos
cs
dec
mov
std
mov
adc
pandn
push
xor
in
outsb
sbb
ds
jo
pop
jmp
push
in
or
push
lock
or
sub
jnp
mov
les
add
test
pushf
jl
jecxz
test
sub
addr16
or
fcmovne
test
inc
cmpsb
sub
and
cmp
lods
cmp
jae
cmp
sub
push
ja
mov
jg
xor
xlat
push
mov
xchg
loop
sub
xchg
js
or
pop
ds
out
bound
imul
pop
rorb
mov
pop
dec
push
ret
sbb
mov
sahf
lcall
insb
cmpsl
addr16
sti
lds
mov
jbe
out
dec
fs
dec
cmpsb
iret
jno
jmp
jnp
xlat
test
out
in
jmp
lret
pop
push
push
imul
mov
inc
or
or
dec
xchg
out
call
int
lds
xor
repz
ss
jp
sub
ret
xchg
cmp
jmp
insb
fisubrl
mov
into
or
in
icebp
negb
xchg
jp
mov
mov
lret
pop
mov
inc
rorb
add
aas
call
xchg
call
shl
mov
mov
int3
and
clc
jmp
int3
jmp
sarb
push
and
xor
jbe
sarb
xor
jl
fs
mov
push
fwait
cwtl
fldenv
push
jp
add
mov
xor
and
sbb
fcmovnbe
testb
sbb
adc
sub
add
nop
out
xor
cmc
push
adc
mov
mov
ljmp
addb
adc
loope
sub
adc
fisubrl
sub
cmc
pop
jle
aaa
sbb
dec
sub
mov
and
int
mov
adcb
dec
insb
pop
push
shll
jmp
mov
inc
aas
pop
int3
jecxz
into
xchg
jb
repz
mov
push
jno
outsl
pop
das
xchg
adc
dec
ds
cltd
dec
jne
shl
xor
push
int
sub
dec
inc
iret
imul
mov
mov
negl
ret
xchg
pop
call
lock
mov
inc
pop
push
clc
je
dec
jmp
cmp
dec
or
adcb
lret
leave
jns
push
lock
int
jbe
push
push
push
cli
out
cmc
jmp
shll
je
add
lds
dec
setg
and
or
dec
mov
imul
inc
rorb
sarb
push
mov
adc
and
jb
jl
ret
out
jp
js
sarl
xchg
mov
lock
popa
mov
call
icebp
imul
daa
mov
mov
push
dec
les
scas
or
pop
int
stos
mov
rcll
out
cmp
and
or
add
scas
jl
dec
cmp
sbb
mov
pop
cs
xor
mov
lds
cmp
pusha
jb
into
aaa
mov
push
jecxz
inc
imul
xchg
sub
sub
aaa
cltd
lods
cmpl
aas
int
mov
stc
mov
jo
and
jmp
sub
fs
add
in
lods
lds
jne
sarb
xor
xchg
xor
push
jb
jae
push
movaps
dec
dec
pushf
mov
xchg
or
sub
ficoms
cwtl
pusha
pusha
or
xor
mov
sbb
lock
pop
cmpsl
pop
into
add
sub
fcmovbe
adc
lahf
pop
out
mov
mov
sub
xchg
add
sarl
int3
xchg
fidivrl
sbb
jle
mov
jecxz
int3
fidivrs
jne
mov
mov
mov
jl
adc
and
lds
inc
ja
add
icebp
add
faddl
push
xchg
mov
mov
enter
sahf
icebp
mov
mov
fidivs
cmpsl
test
pop
push
pop
es
hlt
add
cmp
mov
fwait
push
lods
fs
in
leave
mov
xor
jb
loope
and
scas
insb
add
mov
pop
inc
repnz
insl
sbb
pop
inc
andl
loope
jp
nop
imul
adcl
add
into
daa
adc
aaa
ja
adc
jg
std
shll
push
mov
jmp
pop
jle
add
js
mov
cwtl
inc
repz
ret
push
scas
mov
out
mov
add
je
orb
mov
shlb
push
or
stc
sahf
fmulp
jbe
inc
jmp
cwtl
das
stc
mov
xchg
xlat
pop
or
test
sahf
addr16
ret
or
hlt
hlt
sbb
lds
lds
cmp
test
jg
rolb
mov
mov
into
lods
dec
dec
xchg
bnd
adc
cmp
dec
xchg
fistpll
dec
and
jecxz
or
or
outsb
mov
fmull
jg
into
mov
dec
pusha
adc
add
frstor
movsb
ror
stos
push
test
inc
imul
fdivs
mov
dec
jne
clc
dec
ret
icebp
shll
xchg
das
push
rorl
das
loop
fs
inc
inc
rcr
lahf
lahf
dec
imul
into
jle
fsts
leave
out
inc
les
and
add
inc
test
jl
das
xorl
xor
mov
adc
outsb
adc
adc
lret
xchg
lahf
inc
sbb
scas
out
push
add
or
sub
xor
inc
cmpsl
mov
fsubrs
mov
add
fisttpl
mov
test
cld
cltd
mov
pop
xlat
pop
pop
es
ljmp
sahf
xchg
lret
fidivrl
push
sbb
or
fucomip
clc
or
push
lret
push
sbb
xor
cmp
stc
inc
fldt
repz
iret
or
push
les
push
sbb
pusha
int3
inc
mov
and
cmpsb
mov
sbb
inc
je
fucomp
push
iret
dec
xor
xor
scas
mov
sbb
or
pushf
insb
and
out
pop
lahf
fsubr
pop
push
push
ljmp
add
push
jbe
insb
adc
jmp
cli
movsb
outsl
inc
mov
sbb
xchg
add
inc
popa
inc
xlat
xchg
jbe
shll
sbb
add
clc
movsb
or
inc
repz
adc
fisttpl
mov
sub
mov
loopne
jbe
sub
inc
mov
push
roll
fdivrl
aam
sbb
dec
mov
ja
rorl
pop
addr16
jne
scas
pushw
daa
inc
lea
inc
xor
daa
mov
lret
xchg
jg
or
jb
or
in
pop
jl
fisttpl
push
loopne
xchg
xchg
mov
in
out
add
push
cmp
insl
clc
mov
jmp
xor
loop
pop
in
imul
add
dec
sub
out
inc
imul
in
mov
mov
int
push
in
mov
push
mov
mov
cs
xchg
cmp
cli
mov
xchg
mov
push
addr16
das
xor
push
add
into
imul
mov
mov
adc
adc
push
jo,pn
xchg
cmp
out
ja
push
test
mov
dec
dec
or
nop
add
rolb
ljmp
sub
fidivs
xchg
mov
mov
xchg
ljmp
fsubs
clc
adc
bnd
jae
pop
cmp
adc
loopne
dec
mov
cmp
dec
test
hlt
std
fimull
mov
cltd
fwait
ljmp
cmp
xchg
sub
cmc
ret
xchg
incb
not
add
jo
inc
lods
jge
out
inc
xchg
cmp
les
inc
hlt
test
jmp
adc
xor
jae
mov
mov
dec
xchg
out
and
and
jns
insb
add
pop
sbb
popa
dec
aas
cmp
ret
test
jecxz
in
mov
and
and
lods
sti
fldcw
adc
or
xchg
xor
sbb
xchg
mov
xchg
mov
add
adc
sub
shll
xorl
lea
rorb
cwtl
icebp
leave
hlt
xlat
add
cmc
pop
xchg
mov
push
aas
cmpsl
cmpl
and
mov
js
call
add
or
je
in
int
lret
pop
aam
push
bound
data16
xchg
pop
leave
mov
sbb
mov
stc
xchg
jge
jge
repnz
ds
sub
jne
mov
push
or
fstpt
mov
adc
xchg
out
mov
xchg
sub
icebp
and
fimull
popf
xchg
xor
inc
adc
xor
fsubs
mov
mov
stc
pop
sahf
popa
hlt
lcall
add
outsb
stos
push
cmc
sub
xchg
andl
int
mov
inc
pop
jo
pushf
cli
iret
das
scas
xor
jo
pop
in
sub
fbld
daa
mov
xacquire
xchg
insl
iret
cmp
lock
int
fcomp
push
les
xor
or
fdivp
insl
mov
aam
cld
cwtl
loop
push
dec
xchg
mov
rcl
lret
xor
cmp
stos
mov
lock
je
out
jb
fstpt
pop
sub
shl
in
push
jmp
mov
in
ret
ljmp
pop
sub
out
ds
idiv
pop
sub
mov
loop
lahf
outsl
fnsave
push
pop
in
aad
test
stos
xor
jmp
daa
cmpsb
sbb
push
fdivrs
inc
loopne
cltd
xorl
insb
jno
into
arpl
cmp
mov
iret
popl
lahf
ljmp
das
data16
dec
lret
cmp
and
mov
cmp
movsl
xchg
cmc
mov
popa
xor
ret
and
push
xchg
push
dec
push
arpl
jns
add
ljmp
jge
xor
insl
js
subl
xor
jno
sti
add
fistpl
lods
pushf
aas
jnp
push
jle
fiadds
mov
mov
and
pop
mov
addr16
cmp
in
push
aas
decl
mov
inc
nop
aad
ret
adc
mov
adc
mov
mov
push
adc
xor
fnstsw
fnstsw
cs
nop
xchg
fcmovnu
sbb
mov
cwtl
int3
outsb
adc
aaa
cmp
jo
lcall
ja
stos
add
cs
cmpsl
ds
mov
loop
imul
nop
dec
mov
and
xchg
leave
scas
hlt
movsb
inc
sbb
xchg
xor
dec
dec
stc
insb
mov
push
dec
popf
or
push
sti
loopne
mov
xchg
jl
pop
jbe
mov
cmpsb
xlat
push
xchg
jbe
jbe
adcl
sbb
lods
xchg
pop
adc
mov
xchg
sub
lret
imul
mov
cli
xchg
pop
sub
cltd
or
fs
js
fstcw
pop
mov
mov
cmp
loope
pop
push
jb
mov
addb
sub
jmp
stos
pop
pop
in
in
gs
mov
mov
xchg
into
or
cmp
cltd
xor
and
cwtl
fwait
xchg
pushf
in
add
pop
push
cmp
push
cltd
fstl
cmp
testb
add
and
push
fbld
sub
daa
pop
decl
jbe
sbb
push
mov
inc
fstpt
fs
adc
sub
sti
push
cwtl
stc
popf
movsb
lahf
mov
mov
cli
fisubrl
mov
int
jmp
or
bound
movsb
add
hlt
sbb
fxch
jmp
cmp
sub
mov
sti
pop
ja
cld
mov
call
jb
ljmp
test
rcll
jecxz
inc
or
or
mov
jb
in
sahf
iret
mov
repz
mov
adcl
sbb
std
dec
or
or
sub
fs
fldt
and
shrl
ret
mov
pop
das
scas
into
cli
mov
imul
cmp
cmp
jae
repz
fnsave
lock
pop
mov
cld
rcrb
mov
jne
mov
sub
and
cld
sub
outsl
stos
cli
and
jmp
shrb
xorl
adcl
js
sti
jb
jbe
shlb
push
xchg
out
fsubrp
inc
pop
mov
dec
test
mov
arpl
mov
aas
fiaddl
ss
dec
ret
rolb
sti
push
mov
ljmp
aad
sub
cmpsb
fwait
or
fwait
xchg
sarb
xchg
sti
dec
and
pop
fdivrs
cmp
imul
ds
in
add
ss
or
pop
fninit
sti
jle
pop
lds
inc
xor
mov
shll
out
aaa
inc
fsts
and
fidivrl
and
test
pop
push
dec
mov
test
sub
mov
jg
cmp
out
ja
add
and
ret
fisttpll
xchg
rclb
jne
add
sbb
test
push
mov
add
js
aas
jmp
movsb
sub
pop
push
das
xor
xor
cmp
jns
mov
sub
lds
mov
xchg
inc
cltd
sub
add
popa
stos
xchg
addr16
push
rorb
sub
cmpsl
sbb
and
pusha
sarb
adc
inc
test
push
out
mov
in
sub
enter
xor
sbb
movsl
inc
lds
push
sahf
add
xor
std
lcall
xchg
cmp
int
sbb
test
xor
adc
fsubrs
jle
mov
inc
rcll
lret
mov
adc
nop
cli
jo
xchg
orl
mov
push
or
mov
sarl
loop
and
dec
fisubl
sub
std
stos
lea
lods
into
xor
mov
pop
lret
sub
mov
pop
adc
push
mov
cmc
fisubs
mov
jnp
inc
xchg
shlb
adc
jmp
mov
mov
cmp
scas
pop
fs
imul
and
cmp
movsb
test
and
fwait
cltd
stc
cmpsl
stos
push
jb
andl
push
outsb
and
mov
xchg
mov
les
xlat
inc
push
fdivl
fsubs
out
jbe
sarb
imul
repnz
dec
call
mov
addl
add
or
in
mov
dec
fadd
ss
popa
pop
aas
ss
jmp
lods
loopne
xor
aad
pushf
jb
and
imulb
andl
insl
imul
je
shlb
pop
fimull
dec
cs
mov
add
inc
push
cli
test
sahf
pop
adc
pop
dec
mov
jo
push
mov
push
lahf
aad
pop
push
mov
jno
iret
mov
mov
jmp
in
or
adc
inc
xor
shrb
pop
es
test
mov
test
pop
test
das
aam
dec
adc
insb
idivb
sbb
imul
mov
push
and
sbbb
in
inc
js
jmp
scas
mov
or
jg
adc
cmp
sub
loopne
in
mov
sbb
clc
lcall
xchg
sbb
push
push
outsb
dec
aad
pop
add
push
arpl
mov
mov
sub
sub
jnp
mov
popf
stos
fistpl
je
cs
stos
push
and
mov
mov
ret
in
mov
adc
data16
or
and
gs
and
inc
dec
into
or
sbb
call
adc
jl
arpl
mov
ret
out
jge,pt
loop
jge
insl
lods
jo
mov
mov
jnp
clc
mov
out
pop
xchg
mov
dec
das
call
lock
imul
xchg
pop
pop
pop
sub
clc
xor
shl
and
scas
pop
mov
pop
mov
dec
stos
notb
cmp
dec
out
lods
fs
insl
mov
imul
rorb
xchg
jp
adc
dec
inc
and
mov
push
stos
inc
xor
stos
cs
movl
jb
sub
adc
test
in
mov
add
jne
mov
pop
sub
pop
dec
jecxz
jo
bsf
pop
bound
jecxz
or
lods
add
test
repz
or
mov
scas
mov
arpl
add
outsb
lret
sbb
add
push
insl
daa
or
sub
pop
push
shlb
mov
add
mov
jp
xchg
fldcw
aas
mov
jge
push
loope
lods
cmp
add
ret
and
mov
pop
cmp
sti
mov
mov
popa
mov
cltd
cmp
adc
call
mov
mov
inc
inc
inc
push
mov
les
dec
leave
addr16
cltd
rorb
xor
leave
pop
xor
inc
addb
sbb
xor
shrb
inc
leave
movsl
outsb
pop
je
pop
push
sbb
jne
jp
pop
jae
mov
lcall
mov
out
or
mov
adc
popf
add
xchg
es
dec
lods
xor
sub
mov
fs
rorb
add
mov
push
ljmp
jmp
sub
dec
test
mov
and
int3
inc
mov
xchg
pop
add
stc
movsb
aas
fldenv
or
jle
icebp
nop
push
stc
pop
xchg
mov
movsl
test
pop
ja
sbb
jnp
out
data16
dec
in
add
mov
hlt
xor
bound
movsb
push
xlat
cmp
shlb
insl
insb
add
outsl
push
mov
push
push
xor
push
push
cmp
fistps
mov
mov
jnp
std
adc
add
ret
ljmp
push
or
lahf
pop
mov
das
inc
je
clc
mulb
push
outsl
cmp
mov
pop
andl
dec
push
xchg
arpl
pop
lret
inc
push
ds
loope
add
cmp
jp
inc
gs
sub
lods
rcr
push
stos
dec
sbb
mov
cmc
out
enter
cmp
pop
push
mov
cmpb
jmp
fisubl
add
outsw
inc
push
lret
jo
test
or
je
mov
into
jbe
out
add
sbb
xchg
test
pusha
notb
push
jne
dec
enter
pop
and
aam
lret
xor
lea
cmp
push
pop
or
pop
insl
dec
cs
add
dec
pop
aaa
dec
shl
cmc
adc
out
ds
ss
in
xor
ret
lods
xchg
xchg
loope
xlat
jge
popa
mov
mov
sbb
push
inc
es
loope
test
mov
ret
sahf
scas
sub
or
faddl
in
dec
pop
adc
popa
push
sbb
icebp
sbb
stos
adc
mov
das
inc
std
fnstcw
popf
test
stc
jp
leave
test
add
popl
sbb
mov
jg
mov
mov
xchg
cwtl
xchg
lret
icebp
mov
inc
and
jl
sbbb
mov
rol
push
inc
dec
lret
mov
cmp
mov
sbb
add
aad
adcb
cmp
mov
test
es
sub
aas
adc
mov
sbb
sti
scas
mov
pop
pushf
push
fwait
xchg
ret
std
push
cmp
pop
push
js
je
inc
outsl
imul
lds
xor
fsubrs
cmc
movsb
ret
inc
and
sbb
jne
adc
jg
xor
mov
div
clc
fsubr
clc
dec
dec
dec
popf
in
repz
cmp
inc
inc
fistpl
xchg
fyl2x
stos
lahf
shrl
sbb
lret
inc
or
mov
xchg
out
sbb
adc
rcr
cmp
mov
sti
aaa
mov
pop
fstpl
out
fldt
ds
out
or
lods
out
je
js
mov
rcl
sub
cmp
dec
std
cmp
call
leave
pop
and
adc
adc
rorb
mov
rcrb
fsubrs
icebp
out
cmp
jne
pushf
idiv
pop
jge
std
arpl
outsl
pop
mov
and
popa
and
or
push
inc
pop
in
and
push
or
outsl
outsl
cs
leave
cmpsb
jge
mov
loopne
pop
mov
sub
decl
pop
in
in
in
popf
test
je
add
jecxz
aad
or
rclb
les
scas
mov
sub
pop
cmp
lods
rorb
pop
outsb
add
fs
out
mov
mov
or
stc
jne
mov
stos
repz
inc
pop
sub
cmp
pushf
out
mov
pop
ljmp
leave
movsb
push
cltd
es
fwait
outsb
mov
push
fbld
ss
pop
in
push
adc
xchg
into
loopne
add
inc
outsl
je
xchg
and
pop
call
mov
fnstsw
xchg
ja
add
aas
xor
mov
mov
jecxz
and
or
ljmp
xchg
jo
in
xor
xor
insb
ud2
aas
adc
sbb
pop
jecxz
bound
les
mov
mov
sarw
or
std
rcrb
mov
jp
xchg
test
jl
xor
loop
xchg
sbb
ja,pt
push
xchg
push
lcall
fs
cmp
push
lods
decb
mov
push
lods
pusha
divb
sbb
dec
int3
leave
aas
add
sub
outsl
aad
scas
mov
push
lock
notl
cmp
fnstcw
lret
sbb
xchg
add
cli
movhps
sub
sub
jmp
push
jne
sarb
jno
lods
jae
add
stos
sub
and
mov
pop
mov
repnz
and
std
and
outsb
out
pop
push
rorl
pop
in
aam
jne
sub
mov
in
xchg
icebp
in
add
sub
shl
leave
ljmp
mov
mov
stc
shlb
pop
out
aad
js
stc
movsb
dec
inc
mov
adc
xchg
fstpt
jnp
stc
dec
lret
lds
inc
mov
jl
dec
push
sub
aaa
xchg
and
mov
sahf
das
test
shlb
in
mov
add
add
outsb
scas
mov
xor
add
sub
add
in
dec
sub
out
movsb
outsb
pop
sbb
xlat
ret
fdivs
pop
hlt
dec
aam
lea
insl
push
popf
cmpsl
add
xchg
jnp
xor
icebp
pop
addr16
notb
lret
rcll
sbb
out
pusha
push
xor
je
ss
pushf
test
add
xchg
ljmp
mov
stc
and
add
lahf
push
inc
mov
in
mov
loope
pushf
mov
fmuls
icebp
fcoml
mov
cmpsb
popf
ds
dec
scas
inc
test
sbb
mov
addr16
jne
dec
cmpsb
inc
sbb
loop
xchg
call
lret
cwtl
inc
dec
imul
leave
cmpsl
lret
jns
jp
stc
sub
adc
mov
xchg
push
shll
ss
adc
add
pusha
jo
jno
adc
sub
out
stc
xchg
pop
mov
mov
int3
jle
ja
ret
or
imul
das
lods
inc
pop
inc
stos
ss
inc
insb
div
pop
unpckhps
shlb
aad
sbb
sbb
xlat
fnstenv
xchg
cld
jb
in
imul
subl
mov
adc
sarl
jnp
sahf
mov
inc
ja
and
dec
mov
xchg
or
iret
jno
aaa
and
pusha
xchg
xchg
fisttps
mov
mov
movsl
insl
cli
push
dec
loop
mov
idivb
es
sbb
rorb
sub
or
sub
iret
sti
sahf
or
xor
pop
sub
aam
cmpsb
incl
jb,pt
inc
xlat
call
loopne
jmp
mov
lret
adc
mov
fisttpl
frstor
inc
mov
push
jno
dec
mov
push
dec
mov
loop
dec
shr
add
jne
sti
sbb
es
push
pop
sub
jge
sbb
std
push
decl
add
sbb
ds
pop
arpl
mov
scas
fwait
inc
ficompl
mov
xchg
xchg
cwtl
xchg
push
cmpsl
mov
out
jle
std
push
inc
insl
mov
popa
push
adc
mov
cmp
imul
fbld
mov
adc
sahf
or
outsb
cmp
int
push
hlt
xor
or
xlat
divb
xor
out
fadds
mov
pop
cmc
mov
cmp
ja
ret
xchg
and
cmc
int
dec
adc
xchg
mov
loopne
sar
enter
repz
sti
ss
push
mov
push
jmp
push
dec
mov
mov
out
pop
cmc
test
shrl
test
mov
mov
dec
cwtl
inc
es
imul
mov
jp
push
jbe,pn
inc
inc
sub
in
sub
jne
lret
inc
dec
xlat
cltd
sti
mov
add
mov
pop
sarl
outsb
inc
fnstcw
pop
sbb
shl
sbb
aas
and
xchg
pop
sbb
jmp
add
aas
sub
xlat
inc
push
fcmovnu
mov
push
jne
mov
jne
stos
sbb
fsubs
loop
mov
loopne
cli
stc
cli
lea
ja
out
inc
mov
je
xor
cmp
daa
mov
inc
or
imul
or
je
popf
push
loop
sbb
aam
mov
or
loop
push
fnsave
cmp
inc
nop
in
xchg
sbb
mov
jecxz
mov
xchg
clc
pop
test
adcl
mov
mov
pushf
push
or
popa
jmp
ss
ds
pop
adc
es
shl
clc
sub
mov
lahf
cmp
sub
inc
and
mov
fcoms
lcall
add
cmp
out
adc
dec
fidivrl
sub
clc
std
fidivrl
insl
pop
push
scas
cs
xchg
dec
jbe
xor
push
aam
fstpl
icebp
sti
scas
neg
test
mov
stc
push
xor
out
in
push
cmp
enter
xor
jmp
xadd
add
jp
mov
push
andb
jne
push
push
pop
in
jmp
out
icebp
push
pop
lret
mov
push
js
sti
push
loopne
shrl
popl
xor
jne
mov
jbe
adc
cmp
jecxz
pushf
or
and
leave
cmp
into
fistl
push
ss
pop
xlat
xorb
ja
cmpsb
cmpb
in
and
fsubrl
stos
sub
sub
pop
adc
int
dec
sub
fucomip
nop
lahf
sbb
je
cld
jmp
inc
and
fsubr
repnz
fsubr
cmp
xlat
cmp
aad
in
rcrl
jl
loop
mov
and
push
jecxz
cmp
cmc
jne
aad
sbb
mulb
mov
arpl
sbb
insl
mov
test
arpl
mov
sarb
pop
fadd
pop
cmp
lds
mov
jge
mov
mov
andb
push
push
or
sbb
rcll
sub
movsl
lock
int
pusha
lret
aaa
scas
out
mov
inc
xchg
add
sbb
imul
stos
mov
movsl
movsb
pop
out
scas
cmp
jno
ss
lods
in
push
add
outsb
stos
test
leave
xor
cmpsl
mov
xstore-rng
cmpsl
push
mov
fwait
dec
push
ret
pop
js
fstl
mov
cmp
sbb
sbb
mov
dec
mov
gs
or
lock
and
incl
out
and
add
js
mov
out
mov
mov
inc
pop
sbb
jne
inc
push
icebp
jns
fistl
out
fidivl
cmpsl
sub
jmp
and
xor
xor
xor
fildl
cwtl
inc
push
jl
sbb
xchg
sbb
mov
lods
aam
fadd
in
ss
lods
push
adc
dec
and
cli
xchg
jmp
sbb
bound
movsl
xor
jb
cmp
pop
idivl
std
hlt
inc
pop
push
mov
bound
test
push
sahf
insb
add
mov
hlt
add
aad
rorl
clc
push
cld
xor
and
add
insb
sub
out
or
pop
pop
and
daa
add
or
xchg
push
popa
dec
loop
shl
dec
sub
sahf
in
xchg
pop
ja
mov
jno
test
imul
cltd
or
movl
hlt
and
xlat
pop
and
scas
add
frstor
jmp
movsb
adc
in
sbb
in
iret
cmp
mov
loope
push
jo
dec
fwait
xor
movsl
cwtl
stos
call
add
or
pusha
bound
inc
lcall
and
xchg
xchg
mov
enter
jbe
push
jle
insl
xchg
daa
mov
mov
dec
cli
loop
in
repnz
mov
sub
dec
aaa
push
push
mov
fs
jl
orb
or
push
outsl
cmp
push
add
int3
inc
cmpsl
adc
xchg
or
sqrtps
mov
ljmp
popf
arpl
pop
push
popf
clc
lods
fdivrp
mov
aam
push
fidivrl
test
push
sbb
add
pop
xchg
out
int
mov
mov
repnz
xchg
inc
fisubrl
aam
add
pushf
movsb
jb
cli
pop
inc
gs
push
in
jmp
aas
lds
das
add
rclb
dec
and
test
xor
mov
jge
pop
inc
test
ds
fwait
jmp
xchg
repnz
push
push
std
push
lcall
adc
jl
insb
dec
and
mov
sbb
xchg
xor
sbb
sahf
iret
sbb
or
inc
out
int
xlat
xor
rorb
iret
mov
mov
sbb
adc
iret
mov
lock
icebp
and
iret
inc
bound
jb
jmp
mov
jmp
dec
lret
fnstenv
aam
lea
jl
adc
sahf
mov
les
pop
cmc
call
lcall
bound
popf
xchg
loope
int3
movsl
stc
jge
jne
lahf
xor
loop
fildl
movsl
sbb
stos
fisubrs
jp
or
dec
mov
xchg
jl
sbb
loope
pop
insb
adc
pop
test
sub
push
imul
jbe
ja
pop
jle
lret
iret
inc
adc
arpl
mov
out
jnp
cli
mov
sbb
add
inc
push
push
lock
in
xor
jge
shl
adc
or
xchg
jmp
pop
cltd
cmp
aaa
dec
pop
popf
xchg
or
lods
cmpsl
adc
sub
xor
popa
ljmp
fsubrs
stos
mov
mov
add
pushl
shll
in
scas
push
mov
push
lcall
push
sbbb
fs
out
dec
xchg
sbb
or
data16
add
es
ss
loope
rorl
out
std
adc
and
sub
test
push
rcl
xchg
cmpsb
push
pop
je
jae
call
mov
and
aas
mov
aam
mov
pop
push
mov
pop
shlb
std
out
push
jge
dec
push
push
loope
frstor
repnz
movsl
cmc
outsb
or
push
cmc
idivb
mov
lock
inc
and
sbb
inc
push
ss
sbb
xchg
mov
inc
sbb
rcr
mul
repz
jno
lock
or
addr16
insl
dec
aaa
test
xor
pop
jb
dec
push
enter
lds
je
pop
push
dec
mov
xor
sub
or
sub
sub
adc
stc
std
test
pop
mov
or
and
cmpsl
aas
xor
pusha
cs
add
pop
loopne
lods
mov
push
push
rcll
repz
pushf
push
jne
sbb
rcrb
jmp
rorb
std
adc
pop
roll
cld
ja
mov
lcall
aas
repnz
add
dec
shr
pop
ds
outsb
scas
pushf
adc
divl
cmpl
pop
aad
and
inc
mul
jmp
scas
dec
jne,pn
xor
rorl
push
in
sbb
push
in
scas
adc
ficoms
xchg
lods
mov
int3
repnz
lock
adc
call
inc
neg
data16
fs
outsl
mov
imul
gs
call
test
mov
mov
ds
mov
mov
test
in
lock
ret
into
xchg
repz
add
add
xchg
inc
subl
pop
push
push
xor
dec
cwtl
adc
cmp
jae
sub
or
pop
sarl
jno
in
into
pop
imul
lret
adc
cli
fimuls
std
rolb
out
mov
mov
sbb
popf
or
movsb
jb
and
cmpsl
out
adc
aam
in
outsb
flds
pop
fldl
jae
lods
hlt
cld
pop
xchg
pop
in
cmp
mov
adc
lods
div
test
decl
pop
mov
pop
or
mov
mov
sahf
hlt
cmpsl
dec
into
mov
leave
push
jbe
and
stos
jns
sub
ljmp
rol
test
mov
mov
in
sub
or
aam
outsb
xor
push
push
les
xchg
cmpsl
xchg
push
loop
lret
test
sbb
daa
aas
inc
sub
ljmp
push
and
lahf
in
test
fxch
outsl
push
sbb
sbb
sub
xor
push
jecxz
xchg
fwait
in
mov
mov
dec
jne
je
mov
push
adc
mov
out
hlt
xorb
imul
mov
xlat
inc
jbe
xor
xchg
std
jnp
push
dec
push
dec
addr16
cmp
xor
sbb
addb
mov
push
add
lahf
or
rolb
lahf
mov
push
mov
and
dec
rcl
mov
cmpsb
jle
jne
in
mov
add
rolb
negb
cltd
adc
adc
nop
test
out
and
pop
xor
jmp
enter
add
mov
mov
xchg
mov
dec
sbb
in
testb
push
push
pop
xor
add
mov
les
cmpb
and
mov
nop
fsubs
mov
jnp
nop
leave
idivb
or
mov
add
push
shl
rep
fnstsw
jno
js
push
repz
shl
jae
out
ret
mov
aad
icebp
adc
and
sti
cs
imull
out
mov
fs
push
scas
in
mov
ja
and
pop
aad
mov
arpl
add
shrb
adcb
inc
adc
std
lret
cmp
dec
fnstenv
lgdtl
mov
cmp
xor
nop
cmpsl
pop
in
jns
loope
pop
sbb
mov
adc
stos
mov
xchg
in
outsl
fs
stc
pop
fs
nop
mov
push
repz
mov
lahf
fs
xor
mov
pop
mov
jp
mov
data16
ret
ret
imul
adc
divl
inc
push
frstor
add
xchg
xchg
ficoml
je
jno
imul
jns
hlt
je
push
inc
aaa
add
xor
inc
imul
ret
sub
push
lret
les
xchg
aas
je
stos
xchg
and
push
sbb
inc
adc
mov
xchg
xor
pop
pushf
push
in
jg
mov
sub
sbb
push
xor
aam
out
mov
mov
add
stos
mov
leave
mov
outsl
flds
inc
cmp
out
popf
cld
and
adc
or
ficoml
loop
mov
nop
pop
pop
or
jne
int3
xlat
xor
and
scas
test
push
push
xor
mov
aas
out
mov
sbb
js
jns
mov
enter
addb
lods
xlat
aaa
jo
std
mov
sbb
or
addr16
out
jecxz
fstps
jg
sarb
cmp
enter
mov
lock
pusha
in
xorl
cmp
jns
and
jno
pop
call
loopne,pt
and
outsb
sub
mov
jno
adc
mov
outsl
sbb
inc
lods
lcall
test
push
pop
jle
insb
pop
pop
add
jne
imul
into
sbb
mov
loope
adc
add
in
call
cmp
test
lcall
shrd
loop
loope
imul
aam
popa
add
dec
adc
xor
test
lods
les
imul
test
push
inc
jne
aad
ljmp
and
cs
lods
sbb
pushf
and
lods
nop
bound
fimuls
je
lds
cli
gs
push
dec
mov
push
push
mov
je
jle
cs
inc
xchg
mov
cmpsl
in
xchg
cmp
or
inc
add
negl
es
enter
inc
sub
cmp
aas
pop
jae
ds
and
fcmovb
xor
lea
push
iret
mov
or
inc
cmpsl
jns
movsb
fwait
jns
xor
mov
das
cmc
mov
icebp
enter
add
into
addr16
sbb
nop
xchg
ret
shll
adc
mov
lcall
in
popa
int3
mov
insl
adc
adc
xchg
lcall
insl
mov
outsb
in
int3
lods
mov
and
loope
subb
cwtl
push
push
mov
stos
dec
rcrl
adc
ret
movsl
movsl
ret
scas
pop
mov
mov
stos
sub
call
sub
lcall
add
push
insb
sub
out
pusha
sub
cs
lea
ret
push
out
jae
fcomp
jb
cli
mov
daa
sub
pop
or
and
je
out
stos
push
loopne
imul
adc
mov
cmp
lds
push
mov
lret
mov
push
sti
imul
test
lods
lret
or
add
pushf
cmpsl
dec
jno,pn
adc
into
sbb
pop
in
xchg
arpl
xor
mov
andl
and
mov
jnp
stos
jge
outsl
mov
sub
adc
mov
mov
mov
in
sbb
mov
fnstsw
sbb
mov
mov
ds
loop
cmp
mov
sbb
mov
aas
out
lock
dec
mov
call
shll
push
fadds
cmc
jnp
push
sub
push
adc
mov
lods
jge
stc
push
rol
movsb
adc
push
sub
mov
inc
pop
lahf
push
cmp
adc
dec
fsubrl
out
out
clc
outsl
inc
clc
test
and
jle
in
adc
es
and
movsl
add
lahf
jl
sub
pushf
sbb
mov
cmp
inc
inc
outsb
add
dec
or
addr16
or
mov
push
pop
popl
jb
aad
and
sub
pushl
lods
sbb
scas
clc
daa
jb
in
lcall
je
insb
std
and
mov
inc
lret
andb
push
jb
out
stos
pop
lar
mov
ja
adcl
sub
xor
jne
sub
push
imul
les
mov
mov
arpl
cmp
cli
jo
or
push
or
inc
in
dec
leave
and
xor
repz
jg
or
xchg
adc
nop
mov
mov
xor
xchg
shl
shlb
sub
xor
push
out
sbb
out
sbb
scas
lea
push
push
mov
movsb
mov
mov
sbb
xchg
fadd
rcrb
cmp
sub
jne
and
and
pop
stos
data16
and
xchg
mov
and
lret
or
jmp
adc
jge
push
bound
in
sub
insb
in
jb
xor
hlt
lahf
mov
adc
ret
dec
or
mov
clc
sarb
fcmovnb
mov
lret
cmpsb
jmp
mov
and
cmpl
fisubl
xchg
fcompl
lds
popa
cs
sbbb
inc
test
lods
int3
sbb
sbb
mov
testb
xor
mov
gs
and
mov
adc
ja
shll
test
mov
fisttpll
movsl
addl
aam
ja
inc
push
xchg
orl
movsb
sub
cmp
icebp
repz
pop
int
xchg
sub
stos
push
je
test
or
fisubs
out
insl
cs
jle
fisubrl
pop
sbb
scas
pushf
leave
lods
test
test
xchg
push
push
lock
sbb
pop
push
mov
push
inc
inc
jbe
xchg
imul
push
pop
mov
fwait
arpl
movsb
jecxz
sub
xchg
xlat
jae
orb
or
mov
sub
adc
int3
mov
rclb
scas
add
pop
jl
rclb
jb
in
or
scas
ja
mov
fistpl
stos
es
cmp
adc
mov
sbb
daa
dec
pop
xchg
fbld
mov
mov
or
xor
pop
pop
mov
repz
jge
xlat
push
aam
cmp
xchg
mov
mov
sbb
sbb
dec
clc
stos
lds
iret
xchg
dec
mov
and
test
and
mov
loop
imul
jb
ljmp
jmp
push
in
mov
xchg
lcall
insl
lret
int3
in
fisubs
arpl
inc
dec
xchg
out
add
int3
mov
hlt
fildl
scas
fnstsw
sbb
in
hlt
cld
stos
repnz
push
push
or
fwait
add
adc
clc
xlat
mov
jae
xchg
jmp
and
shrl
lock
insb
subb
rcll
mov
sub
inc
sbb
cmp
aad
sbb
lea
pop
arpl
xchg
out
sub
int3
add
lods
xchg
pop
or
mov
or
push
mov
lret
pop
repz
sbb
scas
bound
jns
fnstsw
push
aas
stos
ret
gs
dec
xchg
jae
clc
xor
imul
hlt
xor
mov
pop
pop
xchg
sub
mov
test
in
cmpsb
fs
pop
add
mov
xchg
ja
pop
push
cmp
mov
fstps
loope
int
clc
fimuls
dec
sarb
imul
dec
add
vlddqu
in
insb
add
inc
jnp
adcb
or
mov
cmpsb
mov
int3
fsubl
jl
clc
add
popf
movsl
gs
sbb
mov
xlat
int
fcomp
clc
sub
enter
mov
dec
xor
ss
add
mov
pop
sarl
test
inc
aas
int
push
call
cwtl
mov
fisttpll
xorl
cmpl
or
out
repz
out
pop
idiv
lcall
adc
les
jae
aaa
js
call
icebp
pushl
repnz
mov
pop
movsl
int3
xchg
popf
xchg
cmp
outsb
nop
xchg
mov
mov
fisubs
clc
push
stc
pop
adc
mov
or
fcmovu
or
std
jmp
dec
lcall
out
jp
jge
push
lods
add
xchg
mov
inc
lods
data16
data16
jb
add
inc
mov
stos
repz
lock
or
or
call
jecxz
xor
mov
stos
dec
sbb
mov
pop
and
jns
shrl
xor
fstl
ds
xchg
pop
mov
loopne
lcall
sbb
lock
cmp
jl
sbb
lret
imul
cwtl
nop
dec
fists
push
or
hlt
xchg
sbb
adc
pop
int
xor
add
push
mov
ss
pushf
test
add
ret
test
jl
adc
and
sub
loopne
fnstcw
push
pop
sti
mov
imull
nop
or
jno
mov
stos
ds
sub
sub
adc
subl
imul
out
and
adc
bound
sbb
lret
cmpsb
test
mov
in
and
jbe
jl
out
mov
pop
outsb
ja
popa
lods
inc
xchg
sub
push
sub
jle
adc
cli
xor
mov
xlat
js
adc
and
push
jb
bound
aam
jne
mov
js
push
jge
lcall
xchg
and
pop
stos
push
shl
test
scas
mov
mov
and
pop
test
sar
sub
xorl
out
andl
iret
sub
les
dec
mov
xchg
fnstsw
in
out
stc
mov
cld
es
push
rorb
push
xchg
jp
inc
add
dec
rol
outsl
push
sbb
or
inc
rcrl
mov
adcl
push
pusha
pusha
pop
popf
test
mov
sub
inc
and
in
or
scas
mov
aas
daa
je
cwtl
mov
ficoms
fistpll
push
mov
out
add
out
pop
push
mov
out
jnp
popa
popf
sahf
lods
or
inc
insb
stos
inc
jp
xchg
nop
jl
adc
outsb
add
inc
push
cmpsb
xchg
pop
test
xor
popa
ret
out
inc
getsec
cltd
ror
jmp
sahf
mov
imul
adc
add
xor
jp
dec
dec
jp
mov
inc
adc
push
insl
std
pop
mov
bound
and
insl
adc
imul
cmpsl
dec
les
sub
repnz
push
unpcklps
into
rorl
lods
jno
push
faddl
mov
movsl
mov
xor
stc
dec
test
negb
jmp
dec
fstpt
adc
fmuls
arpl
and
cmp
ja
das
jl
cli
inc
into
mov
cltd
aaa
movsl
jge
out
je
adc
jno
pusha
dec
inc
ficoml
cmpb
fiaddl
pop
negl
sbb
aam
sbb
mov
gs
pop
aam
stos
or
sub
cli
into
je
shr
jo
jge
aad
add
xlat
xorl
xchg
pop
inc
ficomps
mov
xchg
mov
add
jo
pop
je
cmovno
pop
in
push
pop
out
ljmp
cld
lods
jecxz
popf
push
dec
movsb
lret
or
jp
inc
rcll
dec
pop
shlb
xchg
jp
or
xchg
mov
sbb
into
pop
mov
xor
stos
loop
add
out
xchg
sbb
dec
int
rclb
out
xor
push
lock
das
fdiv
sar
shrb
nop
lcall
inc
ss
cs
loopne
xchg
inc
sbb
ret
imul
inc
cmp
imul
fsts
mov
mov
jmp
lods
aas
andl
inc
inc
push
add
inc
push
rolb
xchg
push
mov
sahf
adc
mov
pop
les
bnd
mov
xchg
ds
imul
cmpsl
xor
and
mov
imul
or
or
jl
inc
xor
add
addl
fistpl
loopne
and
imul
les
and
outsl
and
jb
stos
daa
popf
mov
mov
addb
aas
and
jmp
xor
cmp
leave
fmuls
popa
clc
mov
sub
cmpsl
adc
lcall
ljmp
aas
jne
xor
or
adc
or
int3
in
leave
adc
xor
fisubl
sahf
arpl
xchg
pop
dec
fidivrs
inc
mov
add
push
adc
int
push
mov
mov
jne
jg
and
sbb
pop
cltd
mov
mov
jecxz
gs
jle
sbb
sbb
into
out
pop
mov
mov
test
loope
ret
jnp
pop
mov
xorl
jl
mov
jge
jp
fldlg2
cmpsl
xor
cli
iret
push
cmpsb
dec
sbb
imul
xchg
mov
outsb
cmc
ljmp
push
sub
jp
xchg
or
stos
inc
idiv
mov
add
mov
ja
popf
mov
mov
pop
cmp
adc
jnp
ror
fcomi
lea
cwtl
cmc
inc
mov
dec
adc
rorl
out
jg,pt
adc
loop
add
adc
aaa
fisttpl
inc
sub
fdivr
jge
and
call
mov
adc
inc
jne
cli
call
xor
insl
call
adc
repz
jg
stos
mov
orb
cltd
daa
lret
pop
daa
xchg
dec
lods
add
pop
xor
or
sahf
mov
movsl
ss
xor
add
inc
js
clc
out
or
out
sub
push
movsl
push
stos
mov
or
data16
cmp
add
or
daa
adc
or
sub
push
xchg
sub
adc
xchg
outsb
stos
xchg
jo
jge
in
fidivs
dec
into
sbb
or
paddd
sbb
ret
cmp
push
movsb
mov
sahf
cmc
mov
cltd
mov
xlat
inc
xchg
dec
fwait
mov
fistps
jp
subl
cltd
movsb
push
xchg
jno
adc
mov
dec
push
and
push
mov
idivl
xchg
popa
or
push
jb
pop
xchg
push
mov
cmpsl
adc
sbbb
mov
ss
pusha
das
movsl
mov
cmpsl
lods
mov
inc
les
and
xchg
xchg
dec
sbb
insb
dec
jnp
sub
rorb
mov
in
sbb
ffreep
mov
cwtl
xchg
cmp
pop
pop
das
flds
popa
fisubl
mov
shlb
aaa
movmskps
mov
stos
ds
jns
mov
sbb
mov
push
cmp
lret
pop
sub
ret
movb
addr16
sahf
cmp
pushf
inc
xchg
popf
arpl
mov
push
movsl
push
aam
mov
push
ret
shlb
dec
xchg
push
in
push
scas
sbb
call
shlb
jp
cmp
ja
rclb
outsb
je
mov
out
outsb
das
mov
mov
push
arpl
adc
lods
insb
inc
lds
adc
imul
repz
dec
jmp
pop
sarl
mov
outsl
mov
cmp
adc
fisttpl
xor
mov
mov
add
mov
stos
leave
movsl
nop
pusha
sbb
mov
in
lcall
pop
imull
sbb
cmpsl
fucomp
fisttpll
data16
movl
lds
aam
xchg
mov
fs
cltd
and
cmp
lds
pushf
int
jp
hlt
sub
sub
mov
cmp
xor
fisttpll
cs
jge
aad
xor
and
sbb
sbb
push
inc
dec
int
in
jne
inc
movsl
fisubl
fs
add
outsl
and
pop
cli
xchg
in
mov
out
ret
repnz
inc
out
imul
inc
rolb
rcll
repz
mov
insl
mov
push
jo
repz
dec
fs
repnz
or
sbb
xor
sti
push
lock
ljmp
inc
iret
cmp
int
pop
mov
push
lcall
dec
jl
pop
ret
xchg
cmpsl
inc
fdivrs
xchg
mov
pop
xorl
or
jle
ljmp
or
cmp
gs
mov
jge
jmp
pop
icebp
movsl
jnp
xchg
ret
cmpsl
pop
cmp
fadds
mov
inc
mov
loop
fidivl
pop
xlat
xchg
stos
mov
inc
xchg
aaa
pop
xchg
mov
push
cmpsb
or
nop
or
cld
lea
movsb
or
push
inc
scas
in
sub
das
add
xor
pop
dec
xchg
inc
stos
sbb
repnz
xor
mov
fcoml
call
push
push
movsl
outsb
dec
jae
dec
sub
pop
fimull
cmpsl
jp
push
and
xchg
jge
daa
lcall
mov
test
inc
aaa
rclb
les
arpl
sbb
xchg
fildl
lock
mov
or
pushf
sahf
pop
fisttpll
or
pop
jg
xor
dec
jl
sub
fisubrs
sahf
lret
test
out
dec
add
pop
fnstenv
fsubl
dec
xor
mov
push
or
pop
in
mov
xor
adc
rcrb
rclb
dec
call
pop
sbb
dec
or
lods
jge
clc
pop
sahf
in
jo
test
push
scas
mov
inc
mov
push
mov
aas
jbe
pop
sub
filds
xchg
test
mov
call
sbb
arpl
jno
mov
and
sub
arpl
jns
outsb
outsl
cmpb
fwait
in
out
cmpb
divl
mov
lock
shl
call
fwait
or
adc
out
insl
fidivrl
push
jecxz
rorb
push
xor
pop
xchg
sub
cmpsb
jbe
mov
push
xchg
push
cwtl
add
mov
int
push
xchg
lock
xor
jae
sbb
enter
test
repz
popa
cs
jg
cmpsl
mov
push
sbb
pop
cmp
push
sbb
xor
push
push
mov
aas
cmp
add
inc
cs
mov
iret
xchg
xchg
xchg
jbe
iret
inc
je
into
inc
js
in
decb
or
out
out
sub
mov
flds
movsl
sti
in
dec
pusha
hlt
mov
out
cmp
mov
cmpsb
sbb
xor
lret
xchg
xor
test
push
in
push
repnz
ret
sbbb
pushf
adc
bswap
jp
mov
pop
in
aad
adc
jmp
push
jle
subb
or
mov
test
mov
sub
aaa
fsubrl
cs
cs
movsb
ljmp
add
push
cmpsb
mov
sbb
sbb
aad
rorb
fsubl
daa
mov
push
fs
xchg
arpl
insl
cmpsb
cmp
lock
and
sbb
or
dec
pop
incl
call
roll
and
inc
rcrb
por
shl
pop
sub
mov
mov
xor
sub
into
xlat
mov
sub
lods
jp
vmovaps
or
adc
fcmovnbe
mov
push
cmpsl
les
mov
sub
cmp
push
pop
mov
mov
imul
inc
jno
mov
push
dec
adc
jp
jl
jo
dec
pop
je
insl
jne
add
xchg
int3
sti
outsb
mov
out
cmpsl
loop
pop
lock
rcl
rcl
movsb
pop
or
pushf
jecxz
in
loop
in
lret
pusha
stos
cmp
mov
ja
jbe
js
imul
cmp
mov
pop
enter
arpl
stos
cmp
sahf
lahf
js
push
jne
or
push
add
stc
push
insb
popf
push
jbe
cld
and
cmp
lods
stos
outsb
je
aam
out
sub
loope
push
stos
mov
jns
pop
push
iret
ret
in
adc
ljmp
sti
lods
scas
aas
aam
ds
xchg
divb
test
inc
stos
mov
push
push
sbb
mov
jmp
push
dec
or
xchg
outsb
jae
xchg
scas
pop
fs
mov
aad
add
jb
hlt
adc
or
cmpsl
hlt
lcall
cmp
sub
adcl
dec
test
movsb
dec
cld
add
mov
rcr
fmul
dec
jp
pop
jp
dec
sbb
aas
aaa
outsb
fisubrs
addr16
sub
imul
es
mov
fldl
pop
lea
jno
cld
addb
xchg
sbb
sub
ret
jge
scas
cmp
push
jmp
int3
xchg
aas
loopne
jg
test
out
mov
pop
push
mov
sub
sbb
lret
loop
lret
cmp
and
xchg
push
imulb
sahf
clc
xchg
pop
daa
lahf
or
cwtl
xchg
push
adc
mov
dec
xor
cmp
pushl
sub
pop
sub
daa
xchg
ja
cmp
stc
nop
mov
jne
xor
push
lods
popf
test
stc
jl
inc
enter
ja
jne,pt
cmc
jae
xorl
daa
cmpsl
ds
add
mov
sti
lods
lahf
push
jnp
les
inc
pushf
mov
aaa
inc
in
divb
inc
lock
test
scas
pushl
mov
arpl
iret
testb
sub
lods
push
divl
xchg
inc
int
dec
add
push
adc
inc
shll
stos
cmpsb
xor
dec
into
cwtl
mov
cmp
sub
push
mov
adcb
jmp
stos
adcl
cld
or
scas
fstpl
sti
jbe
xor
sub
sub
mov
jmp
dec
repz
arpl
movsb
in
xchg
fsubrl
notl
jnp
cmp
insl
sar
push
std
data16
into
int
dec
and
pop
sti
shl
sbb
jns
dec
jbe
sarb
mov
sub
imul
out
mov
outsl
pop
cmp
sub
outsb
adc
cwtl
mov
ret
movsl
mov
aam
inc
and
or
inc
and
cmpsl
test
gs
aam
adc
sbb
jno
dec
sub
aas
jne
jl
lcall
xchg
sarb
jl
mov
lds
insb
mov
push
clc
jb
int
sub
aad
nop
pop
pop
outsb
enter
jnp
and
mov
mov
out
notrack
rolb
pop
push
xor
inc
dec
xchg
mov
mov
lods
and
cmp
and
push
clc
xchg
or
cmpb
push
xlat
ret
push
movsb
add
mov
out
leave
scas
aaa
cmpb
push
sub
xchg
test
insb
mov
sbb
mov
in
test
shl
idiv
xchg
inc
clc
ret
adc
lea
aas
ss
daa
inc
mov
pop
out
sub
add
out
iret
out
cli
pop
out
xchg
xchg
call
aad
pop
jno
mov
cmp
xchg
push
in
leave
nop
pop
daa
into
insb
and
iret
mov
loopne
mov
pushl
in
std
xchg
push
jo
sub
sbb
inc
sbb
jp
stos
push
mov
mov
or
loopne
insl
leave
push
mov
aas
int3
adcb
mov
mov
cld
jp
ja
add
mov
cmp
and
and
lock
out
icebp
adc
adc
addl
ss
mov
icebp
cld
push
mov
shlb
add
xchg
push
loope
fs
pushf
xor
pop
xchg
cbtw
dec
ljmp
xchg
add
pop
dec
insb
xchg
xchg
pop
aam
mov
in
sub
and
ret
cmc
hlt
insl
cmp
scas
or
cmc
mov
pop
popf
dec
push
insl
cmpsb
jge
scas
cli
mov
push
lods
adc
and
inc
fs
pop
push
jp
xchg
iret
lods
jnp
xor
xchg
jmp
lcall
rolb
mov
fbstp
cwtl
outsl
ljmp
in
mov
subl
sub
roll
cmp
cmpsl
jno
xor
fsubrs
push
push
dec
cmp
mov
push
push
adc
pop
lods
mov
subb
inc
jp
cmpsb
mov
mov
in
mov
test
adc
sahf
mov
out
mov
ret
xor
lcall
in
gs
clc
or
cmpb
out
popf
outsl
mov
or
mov
shl
incb
movsb
mov
int
ror
pop
fisttpll
jns
or
sub
insb
fstpt
movsb
push
fbstp
mov
notb
stos
push
jbe
sbb
ljmp
mov
adc
xor
rolb
pop
pop
out
shll
inc
loope
sti
or
aas
adc
dec
or
jnp
or
add
jl
test
lds
shlb
push
test
and
jbe
loopne
sub
outsb
aaa
jnp
cmp
addb
popa
ja
jl
mov
fwait
jecxz
inc
pop
jg
test
sti
jecxz
lret
cmp
jmp
ret
pop
movsb
xchg
rcl
lcall
iret
arpl
push
mov
mov
mov
sbbl
orb
push
lds
pusha
mov
add
shrb
fcoml
rorl
movsb
mov
mov
aas
add
outsb
push
sar
push
or
shrl
lock
call
shll
adc
sbb
xor
test
insb
jns
cli
cltd
xor
push
jmp
add
rcrb
adc
sahf
pop
mov
jns
cmp
add
call
bound
adc
ds
rclb
dec
inc
pop
add
imul
scas
cmp
testl
and
lret
xchg
insl
bound
ja
mov
daa
inc
and
adc
xor
aad
cli
in
inc
in
loope
cmpsb
dec
fwait
mov
iret
mov
mov
sub
bound
imulb
out
push
loopne
popf
cmp
mov
push
pop
fldcw
jmp
in
ja
or
aaa
pusha
mov
mov
mov
pop
aaa
lahf
outsl
fadds
push
push
mov
inc
inc
pop
stc
shl
es
dec
pop
lret
decb
jmp
xchg
icebp
add
lods
fsubrs
or
add
cmp
leave
mov
fldenv
push
dec
mov
xchg
subb
or
rorl
adc
push
adc
pop
lahf
and
lea
jbe
jp
test
stc
in
jno
out
out
mov
sti
jle
icebp
jbe
dec
pop
gs
aam
cmc
push
pop
sbb
jge
das
addl
int
xor
jecxz
ret
insl
dec
cmp
lret
cmc
push
hlt
into
xorb
ret
scas
jl
push
dec
dec
test
xchg
lods
ficoms
xchg
cwtl
addr16
mov
ljmp
jmp
cmp
adc
icebp
aad
shlb
insb
mov
inc
scas
pop
mov
leave
subb
dec
iret
fwait
sub
cmp
lret
inc
lcall
lahf
js
das
cmp
jbe
mov
lahf
pop
lods
mov
mov
js
pop
mov
cltd
xchg
cmp
mov
xchg
stos
test
fsubrs
dec
aaa
test
add
clc
mov
scas
xchg
add
cmpsb
mov
fstl
out
mov
in
or
pusha
mov
cltd
sbb
cmpsl
lods
out
mov
or
loopne
in
jo
dec
aam
js
jae
ss
push
mov
jb
inc
or
mov
mov
dec
mov
sbb
jg
stos
sub
jmp
xchg
push
leave
pop
push
scas
hlt
stos
repz
xchg
or
shll
dec
add
stc
and
call
lcall
scas
xchg
shrb
je
and
insb
mov
lcall
loop
inc
dec
and
pop
or
jne
cwtl
or
les
sbb
mov
pop
imull
and
mov
mov
push
repz
lock
scas
and
pop
xor
mov
sub
imul
jne
cmpsb
inc
push
test
lret
mov
cs
mov
js
add
ja
jle
xchg
adc
into
push
push
mov
xchg
jmp
and
int
icebp
inc
xor
stos
shlb
xor
in
test
stos
jl
adc
inc
xlat
ficoms
mov
mov
jecxz
rclb
mov
cmp
jne
adc
push
call
xlat
nop
enter
xchg
or
add
sub
cmpl
insl
mov
mov
sbb
cmc
or
rorl
imulb
or
lods
push
out
sub
shll
cld
aam
pusha
cmpsl
push
fs
xor
movb
mov
mov
out
jo
add
es
and
xor
inc
icebp
cmovae
imul
xchg
jae
mov
pop
insl
hlt
sbb
aas
dec
clc
push
stc
mov
dec
or
or
xor
jo
pop
sbb
sub
xchg
cmp
lret
push
popa
pushf
mov
xor
pop
adc
psrld
loopne
ret
test
mov
addr16
cmp
adc
jns
enter
fistpll
mov
nop
pusha
nop
push
ljmp
sbb
out
push
shl
gs
lods
add
addr16
push
sbbl
std
xlat
jp
arpl
mov
repnz
cmp
js
and
jne
cmpsl
sbb
cmc
popa
pop
sbb
js
inc
push
shl
aas
clc
addr16
roll
cmp
cmp
sub
inc
cmp
jns
or
xlat
call
sub
mov
fmuls
outsb
fcmovnu
icebp
pushf
push
jo
mov
mov
repz
in
adc
js
adc
cmp
pop
cmp
cli
xchg
fsubl
lods
fistpl
pusha
sahf
nop
rdmsr
xchg
and
sbb
dec
mov
decl
movsl
out
or
or
ja
push
loopne
shr
adc
fistps
cmp
scas
xchg
mov
mov
data16
ds
iret
xor
or
mov
shl
pop
or
lea
fwait
loop
cwtl
sbb
data16
mov
sub
ljmp
repz
xor
sbb
ljmp
sbb
mov
inc
mov
test
pop
mov
repz
xor
in
cs
inc
lea
cmp
test
jo
mov
push
std
jne
les
push
xor
test
mov
nop
clc
dec
push
cmpsb
test
mov
jo
or
push
cmp
push
out
xchg
popa
pop
pusha
push
cmpl
ror
rcll
mov
push
fnsave
rorb
mov
sub
mov
xchg
sub
bound
popf
add
mov
aam
adc
scas
fst
hlt
jns
imul
cli
pop
insb
test
divb
sub
mov
int3
out
or
outsl
push
mov
mov
add
or
inc
lds
cs
jmp
adc
pop
sbb
mov
test
inc
popf
repz
pusha
pop
push
push
pop
aam
les
call
sar
cmp
in
add
push
imul
sti
or
bound
pop
inc
or
sahf
sbb
mov
xchg
outsl
sarb
shl
arpl
cltd
divb
ret
mov
pop
cmp
push
out
jge
gs
arpl
cmpsl
push
int3
mov
sbb
sbbl
cmp
dec
insb
mov
jge
repz
shrl
sahf
aaa
sbb
jge
xor
cmp
jns
and
lods
mov
fidivs
stos
mov
sbb
cli
inc
ds
push
lret
mov
orl
adc
jbe
out
mov
inc
mov
mov
inc
sub
cmp
mov
aam
mov
stos
cli
mov
sbb
sbb
or
and
lock
aaa
push
xchg
mov
ss
dec
bound
ficoms
push
adc
pop
fs
mov
mov
push
test
mov
leave
out
pop
popf
xor
cs
xor
pop
orl
fmull
inc
pusha
ljmp
ss
pop
sbb
xchg
cmp
ds
lahf
subw
shrb
idiv
cltd
push
test
xchg
rcr
int
sub
push
int
jno,pn
jge
outsb
pop
fisttps
or
adc
push
jmp
and
jo
mulb
dec
add
cmp
fwait
mov
jp
xor
into
jl
mov
fimuls
in
cmp
aaa
push
adc
loopne
sub
roll
data16
cmp
push
sub
insl
arpl
stc
lods
movsl
push
push
pop
sub
aad
lds
or
pop
popa
xor
sarl
adc
xchg
shlb
pop
add
xor
sub
push
push
outsl
push
or
jnp
dec
inc
push
mov
addr16
cmc
xchg
mov
inc
mov
repz
dec
inc
xor
xor
jl
test
push
cs
mov
pop
popf
aas
add
mov
push
repnz
mov
adc
enter
rcl
sbb
test
push
in
xlat
sub
dec
xlat
xlat
sbb
enter
rol
cmp
movsb
ss
roll
jmp
pop
in
cwtl
cli
jno
sub
dec
mov
cmp
nop
xchg
cmp
andl
pop
mov
push
pop
test
xor
cmpsl
sbb
add
pop
inc
add
pop
pop
insb
cmp
fwait
add
icebp
jne
push
adc
call
inc
mov
add
movl
mov
nop
and
jp
clc
mov
dec
mov
or
adc
adc
int
mov
insl
imul
aam
daa
orl
mov
jns
movsb
inc
cmp
xlat
mov
aaa
pop
jne
mov
fadds
sub
push
sub
and
outsb
fdiv
push
scas
xor
mov
clc
movsb
sbb
lods
daa
or
clc
xchg
mov
rcr
add
call
pusha
pop
mov
fst
loopne
stos
sub
mov
xor
dec
cmc
js
add
enter
lret
sahf
mov
fidivl
lods
mov
add
and
loop
pcmpeqd
lahf
jle
xor
out
fldenv
lcall
and
jge
pop
repz
int3
lret
push
jns
sti
sbb
and
rorl
in
fdivrl
mov
imul
jp
mov
adc
leave
pop
test
movsl
mov
fldl
dec
popa
cmp
add
jp
ret
xor
adcl
cmp
js
fdiv
or
loopne
shr
sbb
jo
adc
cmp
insl
dec
ret
cmp
pop
cld
test
sbb
push
insl
jbe
pop
rcll
inc
lds
jb
jge
test
mov
push
aaa
inc
in
mov
mov
js
add
pop
fstpl
mov
test
std
sub
pop
dec
or
or
repz
popa
call
cmpsb
lret
rorl
and
aam
xchg
into
sbb
icebp
mov
in
and
imulb
push
adcb
outsb
pop
adc
cli
out
xchg
dec
push
xor
mov
adc
jle
mov
cs
loope
push
jb
xchg
mov
aaa
xchg
lods
or
addr16
sbb
into
or
jl
push
imul
xchg
jmp
and
imul
cmpsl
stos
test
fiaddl
push
imull
inc
mov
adc
scas
jne
sub
sbb
fcoms
notb
mov
mov
xchg
inc
movsb
xchg
mov
jae
mov
insb
push
in
lock
dec
pop
lods
mov
sub
pop
fldt
cmc
push
mov
jl
adc
outsb
das
mov
push
jo
fsubr
sbb
mov
pop
cmpsb
insb
mov
xchg
repnz
fwait
imul
mov
adc
insl
addr16
or
pop
shl
jl
movsb
sub
aam
pop
hlt
ljmp
inc
mov
xchg
sbb
mov
gs
push
outsl
int
jp
or
movsb
or
dec
xor
lea
test
cs
jge
sbb
lret
and
mulb
out
repz
add
push
and
mov
jns
sbb
xchg
or
or
or
pop
ret
adc
out
addr16
pop
neg
ljmp
int
pop
popa
and
xor
mov
push
ficompl
push
and
insb
popf
inc
cmc
jae
add
nop
rolb
mov
icebp
push
xlat
clc
add
cmp
pop
es
add
flds
jp
scas
out
sbb
mov
sub
aad
stos
lods
push
dec
lret
sbb
adc
or
lahf
sbb
add
cmpsl
lods
and
and
inc
sub
sarb
mov
out
jp
add
sub
pushf
std
loopne
fisttpl
cltd
sti
sbb
out
movsl
sbb
add
push
jb
rcrb
mov
add
adc
lret
test
xchg
mov
or
xor
and
pop
cmp
mov
sub
mov
test
data16
subl
addr16
xchg
mov
or
fildll
add
push
push
jl
inc
xor
jne
mov
js
pop
push
lea
and
insb
sahf
xchg
imul
or
pop
mov
lods
jmp
pop
loope
insb
subl
sbb
stos
lahf
orb
addr16
and
pop
outsb
push
adc
nop
lcall
dec
hlt
sti
test
insl
in
lea
int
dec
and
in
xor
mul
rclb
test
pop
inc
fstpl
test
fcoml
daa
insl
pop
fcoml
pop
stos
push
in
xlat
stos
cwtl
iret
movsb
jle
dec
jno
repnz
pop
cmp
imul
je
notrack
mov
fisubl
pop
jo
jmp
sbb
outsb
test
xchg
push
lcall
or
ret
mov
push
adc
ljmp
xorb
sahf
push
jo
mov
sub
mov
stos
arpl
sahf
xchg
imul
or
cmp
lea
lea
loop
pushf
jb
sbb
shl
mov
lods
fmul
cmpsl
push
adc
mov
jbe
test
pop
mov
data16
sbb
pop
shll
loop
mov
mov
inc
rcl
dec
mov
lds
cmpsl
jg
xor
ja
gs
cwtl
and
fldenv
int
pushf
js
xor
pop
daa
popa
les
fadds
ljmp
cmp
cmp
cmp
pop
mov
mulb
repz
test
mov
insb
mov
lcall
or
add
fwait
adcl
xchg
jnp
and
js
out
out
mov
popf
inc
outsb
cmp
adc
les
es
repz
adcb
push
fcoml
cmp
mulb
loop
jle
hlt
xor
clc
daa
jmp
pop
loopne
ficomps
add
fildl
cmpsl
pushf
lahf
addr16
sub
lahf
movsl
outsb
push
ror
notl
shl
adc
push
fcoms
stos
mov
mov
add
push
push
lods
les
mov
and
xchg
sub
xchg
xor
jae
or
inc
loop
and
and
test
enter
add
mov
leave
into
adc
cmpsl
mov
in
add
psubusw
sbb
repnz
lock
xor
xchg
cmp
js
imul
mov
nop
insb
mov
incb
and
adc
sbbb
push
lret
ret
idivb
inc
xor
fisubl
push
push
jnp
push
ret
jl
sbb
xchg
shlb
jecxz
ljmp
or
cmp
cmpsl
cmp
imul
sbb
sbb
xor
cmp
and
mov
dec
xchg
notl
imul
adc
minps
mov
push
das
cmpsl
or
pop
movsb
sbb
adc
pop
popa
js
xchg
inc
pop
aaa
aad
sbb
push
adc
je
int
outsl
push
jae
xchg
idivb
mov
scas
in
mov
icebp
bound
pop
push
add
ja
sbb
mov
and
cmpsl
push
out
push
or
mov
inc
or
or
mov
hlt
out
inc
pop
testb
js
jl
and
movsl
es
sar
sbb
jecxz
push
or
jecxz
cmp
idivb
jg
clc
insb
mov
push
add
and
xchg
inc
push
outsb
inc
cs
loop
pushf
or
scas
iret
es
loope
sbb
pop
fcomps
loope
ja
adc
xchg
aad
pop
das
nop
mov
adc
lahf
repz
aaa
ret
dec
pop
xchg
jle
fs
xchg
stos
xor
nop
fcomps
mov
xchg
push
xchg
stos
mov
popa
iret
mov
ja
dec
inc
add
std
shll
mov
fcompl
push
cmp
jns
dec
cmp
dec
sub
mov
ljmp
or
or
inc
pop
data16
jne
ss
cmp
sahf
outsl
add
xchg
mov
push
sbbb
sbb
jb
and
push
stc
xchg
xchg
push
pop
iret
icebp
faddl
jmp
jno
sbb
push
cmp
clc
incb
je
mov
call
mov
mov
push
or
mov
ss
loop
sbb
and
stos
pop
inc
in
dec
sub
nop
jae
xchg
insb
dec
out
jmp
xor
sub
shlb
dec
js
pop
fistpl
lock
dec
mov
cli
scas
sbb
leave
jl
ss
inc
or
jb
sub
inc
out
clc
test
and
mov
aad
mov
adc
insl
and
insl
pop
aaa
push
inc
jp
xchg
add
dec
flds
pop
sbb
aam
inc
cmp
enter
js
inc
mov
push
fldl2e
adc
mov
xor
xor
jno
sbbl
sbb
xorl
mov
ja
cs
jge
mov
popf
jmp
mov
int3
repz
jge
int
xor
pop
ret
mov
dec
mov
sbb
pop
daa
hlt
ljmp
xor
xchg
int3
aad
inc
sub
cmp
dec
mov
xor
je
ret
adc
hlt
adc
cli
jb
fidivl
dec
in
fdivrl
pop
jo
mov
mov
push
jg
push
rep
rcr
in
fdivrs
and
scas
or
ds
lds
mov
inc
fs
insb
mov
ja
xor
xchg
mov
dec
insb
stos
sub
inc
dec
dec
pusha
lea
push
movsb
movsl
std
mov
ret
out
push
pushf
movsl
mov
decl
inc
enter
mov
dec
mov
cmp
dec
dec
dec
jb
adc
add
lret
sub
test
int
sub
jae
and
mov
ret
adc
int
out
popa
repnz
in
mov
jge
xor
or
add
lret
pusha
adc
lds
pop
pop
xor
mov
dec
stos
mov
nop
imul
mov
mov
and
jle
mov
test
fsts
mov
mov
data16
js
add
sbb
inc
sti
les
insb
xor
sub
pop
and
stos
inc
inc
test
cmp
dec
dec
insb
clc
pop
mov
mov
into
inc
sti
sbb
outsl
je
sub
fcmovnb
or
ja
dec
insb
lcall
dec
popf
add
mov
mov
sub
pop
gs
test
push
xor
cmp
xor
sbb
in
scas
je
mov
xchg
nop
mov
sbb
flds
inc
and
les
jae
pop
jb
std
push
cmp
rcrl
jle
das
pusha
aam
insb
dec
jb
sub
jmp
test
ret
cmp
jp
add
lods
popa
into
cmpsb
mov
mov
jno
cs
lods
rorb
test
mov
dec
enter
fiaddl
and
int
xorl
ja
pop
lret
fs
push
popf
rorb
inc
hlt
mov
out
adc
imul
xor
cmpsl
leave
or
adc
pop
call
pop
ss
mov
xlat
fwait
xor
adc
clc
inc
mov
cmpsb
push
xchg
insl
imul
or
data16
shl
icebp
ret
data16
mov
test
pop
pusha
dec
push
push
ss
jecxz
in
test
mov
xchg
pop
mov
aas
sti
mov
xchg
aaa
push
push
imul
jecxz
nop
das
inc
test
push
push
jl
and
ja
push
or
in
pop
in
adc
dec
fdivrs
mov
subb
jmp
xor
incb
mov
gs
sub
jb
xchg
add
pause
cmp
and
std
pop
and
loopne
int3
rcl
jp
hlt
or
std
xorb
dec
push
xor
add
and
mov
xchg
xchg
mov
cltd
dec
xorb
insb
adcb
loopne
mov
daa
sub
push
js
fsts
sub
xchg
fucom
xchg
das
rclb
incb
xchg
dec
sbb
stos
sub
ljmp
mov
sub
sbb
xor
push
repz
xor
jge
popa
sbb
and
fbstp
ds
or
xchg
sbb
cmc
add
inc
arpl
mov
popa
sti
clc
dec
mov
cmp
mov
cli
sahf
mov
popa
add
fiadds
jmp
fwait
mov
adc
xchg
arpl
mov
mov
cmc
push
adc
adc
cmp
cmpsb
mov
and
xor
jp
jb
cmp
aas
ss
inc
mov
addr16
sbb
aas
push
imul
lock
or
mov
jns
pop
pop
and
mov
sbb
sbb
lcall
pop
rcr
movsl
pop
dec
xor
cwtl
and
jmp
lods
jno
jge
sarb
and
mov
aad
cmc
mov
cwtl
ds
mov
sbb
test
mov
cmp
sbb
cs
mov
push
mov
inc
mov
jle
cmp
mov
ds
rolb
adc
jecxz
fsubr
sub
lds
mov
int3
inc
fs
mov
cmp
insb
into
xor
pop
les
sbb
cmp
lret
mov
mov
mov
add
sbb
xlat
pop
push
data16
sub
cmp
mov
or
lock
or
cmp
fadds
jl
int
icebp
cmp
xchg
jg
xor
pop
push
inc
jecxz
push
fdivrs
movsl
movsl
clc
or
push
mov
fwait
mov
fs
fists
dec
scas
pop
sti
or
adc
xchg
jg
jle
insb
add
std
adc
cmpsl
xchg
aad
iret
jmp
sub
dec
movsl
fisttpll
xor
mov
data16
add
loop
cs
mov
xchg
xlat
xorb
insb
testl
push
mov
xchg
pop
push
xorl
mov
pop
xchg
xchg
lret
pop
ds
shll
sub
dec
dec
rol
in
scas
pop
pusha
rolb
xchg
mov
adc
pop
cli
or
pushf
repz
mov
sbb
xchg
enter
inc
pop
sub
mov
inc
cmpb
pop
insb
ljmp
icebp
arpl
leave
jg
popa
rorl
adc
add
xchg
pop
cmp
mov
sbb
out
jne
jmp
pop
dec
pop
cwtl
sahf
orl
jno
adc
outsl
sub
or
addb
jae
mov
adc
jge
inc
push
pop
test
jmp
sub
out
test
mov
jne
psubb
push
jmp
out
dec
xor
push
repnz
sti
cwtl
rcrb
xchg
cmpsl
pusha
sahf
mov
int
imul
inc
jmp
push
in
aas
test
mov
sub
jnp
scas
fs
fistpl
arpl
xor
mov
xor
mov
test
mov
outsl
aad
mov
jns
cmp
xchg
cmpsl
push
sub
icebp
inc
pop
sahf
lock
lret
inc
cmp
sahf
cmp
dec
rclb
ja
mov
lods
mov
in
adc
ret
loop
aaa
aad
call
jg
xchg
and
loopne
pop
sbb
jge
inc
cwtl
rorb
pop
jle
dec
adc
adc
sub
lods
adcl
inc
inc
iret
cmpsl
pushf
notb
mov
lock
dec
push
sub
sbb
mov
adc
test
mov
xor
pop
mov
add
and
test
les
jecxz
push
push
adc
push
adc
inc
jns
nop
insb
fsubrl
popf
cmp
mov
push
jno
push
mov
movsl
addr16
push
xchg
xchg
ss
fcoml
test
sub
clc
inc
dec
jecxz
lock
dec
sbb
lock
out
adc
and
sahf
outsb
mov
sub
js
enter
xor
mov
shlb
popa
in
inc
cmpsl
cmp
mov
mov
cmp
mov
push
xchg
mov
in
adc
in
inc
sbbl
xchg
push
xor
xchg
jns
in
jb
stos
adc
paddq
movsb
sbb
adc
pushaw
popa
arpl
mov
stos
std
in
mov
dec
ret
jmp
jae
sub
lahf
push
push
push
fstpt
aaa
sub
aaa
popa
xor
dec
mov
cmpsb
and
hlt
mov
mov
or
xor
mov
push
mov
sar
push
mov
push
dec
jecxz
arpl
jecxz
int
pop
mov
test
in
dec
mov
iret
lret
mov
lret
fwait
daa
outsb
in
pop
in
xor
adc
mov
and
inc
add
adc
jecxz
inc
or
inc
cmc
cmp
test
ss
test
ret
int
cld
dec
scas
mov
ds
pop
icebp
shrl
out
or
and
and
repz
cmp
pop
hlt
and
or
enter
mov
mov
mov
iret
cmpsb
cmp
inc
jecxz
ds
call
pop
dec
mov
icebp
filds
jg
lret
dec
xchg
mov
shlb
out
mov
mov
lahf
jns
sbb
mov
loope
or
hlt
lahf
push
lds
and
sarl
cmp
and
cli
scas
in
push
imul
mov
cld
push
js
sub
mov
or
push
lea
adc
or
or
push
insb
subl
cs
sub
sbb
mov
adc
adc
fwait
cmovl
adc
mov
addr16
sarl
in
fwait
loop
adc
dec
scas
inc
push
and
aas
inc
adc
cmpsl
mov
mov
mov
pop
bound
pop
mov
xchg
jae
jbe
outsb
std
mov
cmp
imul
sub
mov
or
cli
mov
mov
mov
orl
arpl
mov
pop
inc
sti
cmp
mov
fsubr
xchg
in
inc
dec
jle
cmp
cmpsl
dec
cmp
lods
xor
ret
xchg
or
sbb
lea
cmp
test
push
push
pop
loope
inc
enter
sub
out
out
cwtl
add
mov
push
xchg
push
mov
jb
mov
popa
jne
pusha
xchg
into
test
enter
adc
enter
sbb
mov
lahf
test
and
aam
cs
mov
xchg
pop
dec
lahf
icebp
push
push
and
mov
jle
push
add
jb
orl
es
cmp
mov
jne
scas
push
rorl
push
push
mov
out
shrb
test
sbb
or
add
xchg
mov
aas
mov
inc
ds
bound
test
rorb
and
mov
aad
and
xor
sbb
enter
pop
sbb
out
dec
jno
stos
arpl
dec
scas
scas
push
in
mov
pushf
movsb
pop
or
jnp
hlt
lea
fsubs
fidivl
jbe
inc
shlb
pop
dec
mov
imul
scas
mov
adc
mov
xchg
xchg
pop
push
ljmp
push
cmpsl
and
popf
inc
mov
lods
into
outsl
pop
mov
and
pop
adc
xor
aam
mov
mov
addr16
cmpb
loop
jno
sbb
ret
jae
stos
xchg
add
mov
mov
fdivs
imul
add
xor
fs
lea
lds
into
cmp
adc
loop
cmp
cmp
mov
push
push
push
scas
add
je
stc
test
pop
pop
sahf
mov
push
jne
cmpsb
test
dec
jg
cltd
and
xchg
xchg
mov
sbb
jmp
imul
divl
mov
fistps
das
icebp
nop
in
sbb
dec
add
push
lret
icebp
xorb
in
adc
andb
shll
jp
push
outsl
std
clc
cmc
repnz
aad
adc
fwait
sub
inc
push
nop
dec
in
stos
mov
shll
data16
gs
xchg
gs
aad
pop
jg
loopne
or
cmp
sub
inc
xchg
mov
mov
lods
test
push
ret
inc
xchg
int
xor
adc
mov
sti
add
inc
pop
mov
mov
xchg
lret
mov
int
iret
test
fst
xchg
add
shlb
lahf
cmc
mov
test
mov
je
mov
fisubl
dec
fsubs
ljmp
pop
mov
or
cmp
std
in
jnp
clc
and
fcoml
fisubrl
push
repz
bound
pop
aad
inc
xchg
mov
mov
cmp
mov
mov
push
and
stos
js
inc
mov
fwait
xchg
mov
shrb
aam
inc
inc
sarl
mov
out
fadd
dec
mov
jne
cltd
xor
mov
inc
lods
test
sar
and
btc
xchg
js
ja
iret
es
pusha
pop
test
sub
add
dec
cmp
pop
cmpsb
sbb
sbb
pop
dec
adc
sub
or
dec
sbb
inc
stc
in
mov
adc
ret
shlb
inc
inc
pop
or
ficoms
subl
adc
adc
mov
sbb
push
stc
aas
out
inc
sbb
and
dec
lods
decl
inc
inc
mov
test
pop
inc
jae
cmp
nop
int3
push
sbb
dec
jmp
push
and
enter
arpl
mov
or
adc
subl
icebp
leave
int3
cmc
cmc
pop
inc
aaa
pop
or
test
xchg
fstpt
xchg
cmp
ret
loop
in
out
andl
fidivl
jo
or
in
pop
lret
xor
shr
add
mov
or
addb
or
inc
lcall
cmp
in
or
jg
push
pop
mov
and
xchg
cmpsb
cmp
push
movsb
add
and
add
out
push
in
jmp
in
dec
loopne
mov
sub
push
push
jge
hlt
xor
mov
adc
jb
cmpsb
push
sub
aaa
cmpl
roll
mov
push
sub
jmp
cli
xor
pop
and
mov
popa
adc
pop
mov
jns
add
sbb
dec
fcoml
push
test
dec
push
dec
mov
sbb
shll
rep
inc
push
cmp
mov
adc
dec
popf
and
mov
arpl
pushf
outsl
xor
cld
aaa
pop
lods
aaa
mov
rcrl
stos
sahf
jle
rclb
mov
les
cmp
sbb
pusha
outsb
jno
mov
mov
pop
xchg
fwait
popf
mov
mov
mov
jb
popf
and
push
arpl
lahf
xchg
adc
jbe
add
pop
sbb
fld
pop
dec
pop
aad
push
adc
cmp
xchg
or
mov
lahf
pop
cli
adc
or
pusha
iret
je
icebp
cmp
add
loop
jecxz
cwtl
adc
test
out
movsb
shll
sbb
mov
test
je
add
out
or
clc
mov
jne
xchg
cltd
cltd
aam
cli
in
mov
push
mul
pop
pushf
xor
sub
movaps
in
jnp
dec
pop
shlb
pop
mov
cmc
mov
js
push
jle
loope
adc
dec
mov
pop
or
mov
jne
dec
movsb
mov
cltd
shl
sub
daa
or
pop
xor
out
hlt
xchg
lods
jecxz
or
enter
sub
stc
adc
adc
and
pusha
inc
cld
mov
xor
or
repz
fcomp
je
xchg
ds
nop
dec
push
lea
pop
fildll
popf
push
stos
fimull
sahf
insb
popf
in
dec
add
sub
orb
xchg
outsl
pop
push
push
mov
sbb
dec
push
pop
xchg
push
setg
fidivrs
jl
leave
cmp
cmp
jbe
add
cld
in
fnstsw
inc
push
push
fistps
out
lcall
scas
xchg
inc
jle
cmc
lahf
cmpsb
cmpsl
nop
sbb
sbb
sub
repz
sbb
pop
in
inc
and
dec
loop
adc
cmp
jnp
mov
sti
jb
adcb
test
jp
mov
mov
mov
cli
dec
mov
dec
adc
jns
cld
add
not
mov
data16
pop
jae
mov
cmp
ljmp
popf
insl
mov
outsb
pop
lea
lret
outsl
and
cmpsb
jecxz
insl
xchg
icebp
ss
mov
and
notb
repz
mov
mov
cmp
sub
roll
mov
inc
pop
xchg
mov
movsl
add
jns
push
add
jge
push
push
cmp
and
cmpsl
push
sub
jb
adc
fists
push
je
cmp
xchg
add
clc
lods
sbb
pusha
mov
scas
xor
mov
mov
inc
cmp
mov
push
push
call
insb
and
movsl
test
xchg
push
mov
out
jmp
enter
mov
dec
call
mov
sbb
loop
mov
jb
xchg
gs
shlb
arpl
std
dec
mov
mov
fdivs
fnstenv
and
sub
jg
and
into
sbb
sub
sbb
mov
inc
xchg
jle
ret
out
scas
lock
lds
cmp
adc
jecxz
ds
loope
fbld
popf
mov
test
mov
or
ss
mov
xorl
sub
jg
push
mov
mov
add
inc
push
ret
fcompl
jbe
jbe
mov
push
mov
scas
decl
out
clc
mov
adc
xlat
inc
fmuls
lcall
lods
dec
nop
and
xor
lods
mov
divb
sub
stos
push
pop
sbb
imul
in
scas
test
mov
mov
mov
cmp
sub
xchg
in
test
fildl
rcll
ja
outsb
fsub
mov
lds
mov
dec
sbbl
and
adc
pop
jmp
push
mov
mov
int
adc
dec
xlat
ret
orb
out
fcmovb
inc
scas
enter
mov
nopl
pop
es
xchg
xlat
daa
pusha
mov
cmpsb
jno
movsb
imul
cmp
jno
cmp
rclb
ficompl
enter
inc
fisttpll
sub
sub
push
xchg
fs
add
scas
xchg
int
sub
mov
jne
fnstenv
dec
jns
inc
push
xchg
pop
lahf
xchg
fucom
loopne
cmp
and
ret
xchg
test
popa
lods
movsl
jo
inc
jbe
pop
push
pop
xchg
mov
push
add
mov
test
jbe
and
lds
cmp
ror
repnz
movsb
out
stos
insl
inc
cmp
leave
bound
rcrl
arpl
outsb
cwtl
cmpsb
sbb
shrb
cmp
sti
pop
push
push
jmp
inc
mov
cmpsb
mov
sahf
push
imul
cmc
sub
into
out
pop
jae
lods
inc
and
xchg
inc
hlt
xchg
aaa
loope
sbb
andl
sbb
int
ret
repz
jmp
lods
inc
cmpsl
lods
in
xchg
xchg
scas
ds
lock
push
cmc
into
pop
push
jno
pop
push
cmp
cmp
dec
xor
lods
and
xchg
push
movsb
mov
add
dec
push
inc
inc
jb
inc
inc
xchg
xor
pop
and
out
pop
inc
out
test
imul
fcomp
adc
dec
mov
xor
push
movl
push
fs
dec
cmpl
sub
xchg
push
bound
test
sub
dec
inc
jmp
fsubr
dec
clc
lods
ss
pop
push
movsb
rclb
mov
or
popf
out
sbb
cmp
cld
cmpsl
out
arpl
jge
lahf
leavew
ret
adc
decb
int3
adc
dec
xor
mov
ja
mov
jo
lret
cmpsb
insb
sarl
xchg
add
mov
rep
loopne
cmpb
adcb
mov
cmp
and
jne
movsl
insb
jmp
rcrl
fistl
cmp
sub
dec
imul
mov
push
jp
shrb
cs
test
xor
mov
sbb
insb
ret
xchg
clc
mov
mov
scas
xchg
mov
xchg
cwtl
xchg
mov
and
mov
addr16
lock
bound
add
into
mov
dec
jg
roll
push
or
sub
jecxz
xor
lcall
adc
subb
cmovnp
mov
and
ss
repnz
jno
addb
fwait
stos
fsubl
jae
dec
inc
adc
cmp
mov
cmp
xchg
and
movsb
pop
sub
add
push
lods
outsl
cli
popa
bnd
jns
cmp
adcl
mov
mov
test
or
nop
sub
cmp
popa
clc
xor
add
mov
push
push
fimuls
mov
stc
aaa
repz
xor
adc
sub
pop
inc
push
lds
push
jp
roll
or
lock
dec
xor
cmp
xchg
rcll
inc
insb
pushf
mov
stos
outsb
mov
add
push
jmp
fldl
imul
daa
inc
push
push
inc
mov
sub
sbb
push
sbb
adc
mov
inc
inc
test
in
ljmp
das
jne
push
cmpsb
sub
add
add
mov
mov
cmpsb
sub
inc
push
add
pop
jmp
sbb
push
push
sub
or
sbb
std
jo
sti
cmp
inc
pusha
dec
insl
sti
in
mov
mov
jmp
jne
inc
pop
and
lret
loop
inc
xchg
jle
fsubs
lret
inc
push
mov
arpl
and
imul
sub
dec
xor
stos
scas
mov
lock
fistpll
ja
or
cmpsl
ds
cmc
jmp
aad
int
xor
sub
scas
xchg
repz
pop
stos
popa
cli
mov
ret
leave
mov
pop
mov
rolb
xchg
repnz
in
scas
negb
fisubrs
in
xor
sahf
movsl
cmpsl
pop
cmpsl
daa
or
sbb
dec
scas
mov
jo
jmp
mov
adc
dec
outsl
aad
adc
mov
xor
imul
pop
inc
push
push
xchg
in
outsb
insl
pop
xchg
ret
push
xchg
dec
mov
aam
daa
pop
in
jle
push
lret
out
pop
push
inc
add
sub
xchg
adc
pop
push
dec
shll
and
ds
pop
and
adc
mov
jle
push
fadd
dec
push
notb
mov
bnd
dec
adc
fistpll
mov
mov
mov
mov
dec
xchg
out
add
out
popf
pop
outsl
jle
mov
fimuls
jl
lods
jl
xor
pop
cmp
hlt
lcall
xchg
jbe
pop
cmpsb
mov
ljmp
pusha
jmp
mov
mov
mov
inc
or
push
push
mov
fbstp
and
push
ss
sub
xchg
shl
and
outsb
sbb
fists
scas
sbb
push
jle
mov
scas
gs
xchg
sub
clc
mov
hlt
or
jmp
sbb
test
xor
mov
cmp
jp
inc
jns
dec
and
push
add
mov
jmp
fidivl
aam
rclb
cmp
insl
fs
jne
inc
fcmovb
roll
adc
add
in
jge
out
mov
shrb
inc
in
add
repz
iret
lods
adc
popa
jmp
mov
mov
sub
xor
push
lock
jge
lods
shlb
push
scas
inc
mov
dec
lret
rolb
mov
test
mov
jecxz,pn
pop
push
xchg
jo
lret
lods
pusha
ss
lret
mov
cmovp
test
or
pushf
lcall
lods
cld
aam
dec
imul
pop
mov
addr16
or
adc
jmp
pop
out
test
and
jno
inc
xor
cmpb
lock
jl
jecxz
sahf
aaa
icebp
xor
sti
cmp
fdivl
inc
out
jmp
add
imull
hlt
popf
jmp
leave
dec
pushf
mov
test
sarl
jp
into
cmpl
cmp
mov
aad
test
mov
add
xor
inc
and
jne
insl
cltd
test
loope
adc
sbb
ret
mov
jp
push
flds
sbb
mov
sarb
out
sbb
xor
mov
cli
xchg
mov
shlb
mov
int3
mov
test
pop
jl
and
mov
inc
xlat
ds
mov
mov
stc
sarb
arpl
popa
in
and
add
rorl
fidivl
arpl
mov
mov
xchg
or
mov
mov
in
mov
or
xchg
mov
das
clc
jno
test
test
aad
lcall
adc
aad
ret
push
mov
clc
mov
das
xlat
hlt
clc
jo
orb
cltd
aam
push
and
push
mov
fs
je
xor
mov
loopne
cmc
push
loop
sub
dec
xor
jbe
mov
rclb
lods
add
int3
xchg
or
loopne
lds
or
fisubrs
xor
sub
or
cmp
dec
in
addb
push
fdivrp
or
adc
push
test
add
push
and
imul
mov
pop
mov
shl
or
xchg
jb
repz
cmc
adc
xchg
das
aas
cmpsb
push
jl
ss
mov
int
jno
and
mov
pop
in
dec
add
mov
add
push
and
add
cmpsl
scas
cmpsl
sub
cs
cmp
outsl
out
jbe
cmp
xchg
lahf
clc
ficoms
and
jl
mov
sub
mov
incb
mov
mov
inc
sub
cs
dec
push
into
xchg
imul
cmp
add
push
aaa
sub
mov
subl
test
movsl
out
push
repnz
push
out
pop
leave
jg
adc
sbb
mov
cs
xchg
mov
cmpsl
lahf
dec
cs
mov
inc
jae
pop
dec
js
and
mov
jle
stos
out
jle
cmp
fldenv
in
fists
out
pop
addr16
sub
shll
je
cli
add
adc
cld
push
push
loope
mov
dec
pop
push
sbb
cmc
mov
daa
inc
xor
out
dec
mov
icebp
jnp
cmp
cmpsb
jbe
and
mov
cwtl
mov
xor
leave
and
mov
clc
gs
cmpsl
cmp
xor
xchg
in
cs
push
push
iret
sub
jmp
cmpsl
movsb
es
add
test
dec
sti
add
mov
ja
fwait
pop
in
fistpll
cmpsb
pop
xchg
insb
pop
jne
push
mov
add
test
movsb
mul
jg
scas
xor
cmp
sub
xor
mov
jle
and
popf
adc
fwait
push
test
pop
inc
push
fwait
lods
movsb
push
ljmp
in
pop
enter
or
stc
cmp
stc
sbb
aam
js
jl
dec
sarl
xchg
cmpsb
dec
in
aad
adcb
push
addb
jge
insl
sub
dec
test
cmp
adc
insl
push
aam
daa
jg
mov
arpl
fildl
es
push
sub
push
dec
sbbb
lock
shlb
xor
in
ret
mov
or
mov
dec
lea
imul
jge
mov
cmp
cmpsl
sbb
xchg
stos
ret
jmp
dec
xchg
outsb
mov
cwtl
xchg
mov
in
lcall
int3
push
xchg
test
arpl
xchg
mov
add
loop
xlat
aam
or
mov
test
pop
loop
add
mov
nop
cmp
pop
adc
adc
mov
xchg
rcr
push
jae
dec
dec
mov
pop
mov
pop
scas
xchg
fs
flds
movsb
movsl
rol
or
xchg
into
inc
popf
mov
sub
mov
into
adc
pop
out
or
scas
cld
xchg
adc
jmp
in
push
pop
imulb
insb
bound
push
repnz
enter
or
or
dec
mov
xchg
push
adc
xchg
clc
sub
mov
repz
push
inc
out
push
icebp
sub
cmp
xor
pop
mov
gs
dec
push
cmc
enter
mov
test
daa
xchg
das
and
out
std
arpl
stos
xchg
dec
adc
in
incb
enter
and
aad
fcomp
mul
lock
icebp
or
in
dec
cmpsb
cltd
and
je
push
ljmp
cmp
inc
jns
pusha
mov
sub
imul
and
into
sahf
adc
xor
sahf
nop
mov
adc
stc
jmp
clc
js
dec
inc
and
je
fwait
xlat
in
add
jae
fiaddl
inc
add
lret
jg
std
rol
dec
mov
out
aas
push
xchg
push
add
cmp
adc
fdivrp
ja
in
pop
xor
cwtl
cltd
in
cwtl
add
int
jl
orb
or
test
add
je
mov
pop
sub
xor
adc
and
push
loopne
shrb
in
dec
or
lods
sahf
fucom
push
xcrypt-cbc
cmpsl
adc
push
dec
adc
sub
adc
mov
mov
fwait
fs
ja
push
ds
jbe
cmc
xchg
addr16
mov
xor
enter
ficoms
xor
sub
xlat
bound
fisttps
loopne
mov
dec
sbb
mov
dec
js
push
inc
push
aad
sbb
sub
jp
cmpsb
aas
fxam
jns
arpl
xor
push
pop
mov
jmp
daa
imul
sbb
inc
pop
in
dec
adc
push
test
and
and
test
je
stc
push
sub
mov
mov
adc
push
cmp
test
sub
adc
mov
leave
jmp
cmpsl
pop
or
cmp
scas
dec
sahf
imul
push
cmp
adcl
ja
mov
icebp
cli
add
fdiv
dec
je
xchg
or
mov
mov
xlat
adc
pushf
cmpsb
pop
pop
cmpsl
rolb
xor
or
mov
lret
push
outsb
cld
outsl
inc
or
sahf
jns
xorb
mov
jg
movsb
dec
jge
jle
enter
insl
adc
imull
mov
adc
imul
cmp
loope
aad
mov
ret
xchg
outsl
notb
gs
sub
in
add
cmpsl
xchg
movsb
xchg
xchg
insl
cli
dec
imul
jle
cmpsl
enter
cmpl
and
stos
push
sbb
adc
fbstp
minps
cli
insb
jnp
outsl
xchg
sub
aad
pusha
roll
xchg
addb
outsb
imul
pop
cld
add
pop
adc
cmc
adc
fwait
das
call
add
pop
stos
xor
and
int3
mov
mov
loopne
mov
push
into
adc
dec
sub
daa
daa
inc
fisubrl
pop
jecxz
add
mull
mov
and
cmp
fsts
out
sarl
mov
aas
repz
fwait
push
enter
sub
in
sbb
fisttpl
data16
push
jge
hlt
andl
lret
mov
dec
aas
mov
xchg
mov
dec
xor
mov
iret
mov
stos
mov
clc
lcall
jb
rcr
imul
or
and
fs
mov
cmp
mov
jmp
jae
push
mov
jns
stos
mov
push
movsb
cli
lret
insl
xchg
inc
jp
in
sbb
pop
mov
in
mov
sarl
das
jo
out
mov
dec
cmc
lret
in
and
inc
jo
cmp
jecxz
jmp
repz
leave
cmc
test
push
xorb
rorl
lds
cwtl
push
inc
xor
sub
lret
or
sbb
and
mov
push
xchg
inc
add
fistpl
xor
addb
xor
in
pushf
xlat
mov
inc
addb
aad
lret
sbb
lods
and
cmp
jmp
imul
nop
vmwrite
aas
ljmp
orb
lock
cltd
inc
stos
fldt
loop
mov
dec
mov
cmp
rclb
in
and
sbb
mov
inc
sub
jbe
mov
scas
es
pop
fs
xor
popf
je
push
jmp
xorl
movsb
jae
mov
jge
in
out
xor
add
add
js
popa
insl
shll
add
popa
sub
insl
in
testb
lods
repz
mov
cld
jae
dec
addr16
mov
cmpsb
sbb
adc
add
loopne
pop
inc
mov
adc
push
sub
testb
cmpsl
cmpb
test
xchg
in
in
subl
and
out
testl
adc
mov
js
call
daa
xchg
sbb
scas
ret
jne
inc
imul
scas
cli
jne
adc
leave
sbbl
cmpsb
inc
ss
add
fbld
scas
and
stos
push
sbb
xchg
xor
push
pop
dec
imul
push
test
jle
dec
out
sub
cmpsl
inc
push
ss
lahf
aad
and
cmp
push
dec
stos
out
sub
mov
imul
mov
daa
xchg
sub
xor
and
fs
pop
add
mov
outsl
sub
mov
mov
cmc
inc
mov
push
mov
ffree
inc
push
adc
jb
insb
and
movsb
jecxz
idivb
aas
and
adc
rorb
mov
sbb
jge
pop
lret
sbb
imull
stc
out
xchg
mov
mov
dec
or
mov
movsl
add
xchg
fdivrs
mov
or
add
int3
adc
mov
xchg
orb
or
pushf
aaa
inc
aaa
dec
pop
outsl
pop
inc
fnstcw
xchg
outsb
jp
inc
cmpsl
fstpt
out
jno
out
mov
sbb
xchg
in
xor
mov
stos
test
mov
rcrb
ss
adc
scas
mov
dec
inc
jge
adc
sahf
jb
int
adc
cli
mov
push
sub
sbb
fmull
lods
jl
shrl
int3
je
test
xchg
inc
ret
sbb
ds
cwtl
add
jne
and
and
loopne
mov
pushf
pop
inc
xchg
sar
out
xchg
pop
cmp
addr16
lahf
call
pop
xor
jle
addr16
mov
pop
inc
mov
mov
rcrl
pop
sbb
cmp
xorb
int3
and
mov
call
orb
movsl
rep
and
push
loopne
mov
mov
mov
arpl
pop
int
js
sbb
pop
loope
aam
lret
stos
inc
mov
js
mov
adc
mov
lahf
ret
add
pop
and
int
inc
dec
je
pop
sahf
subb
pop
mov
daa
jl
iret
ja
nop
dec
sbbb
in
dec
leave
ss
aad
dec
test
flds
cmp
mov
cwtl
inc
and
fstpt
sbb
mov
stos
sub
pop
fmull
imul
aaa
mov
xchg
divb
lret
inc
outsl
cmc
push
and
pusha
insl
test
pusha
xor
pop
cmp
jg
ret
iret
sub
inc
test
jecxz
aaa
push
jmp
push
lahf
dec
adc
out
add
fstps
rorb
ret
xchg
adc
adcl
add
push
shll
sbb
jo
pop
in
mov
adc
xor
leave
repz
icebp
jae
aaa
xor
orl
mov
and
loop
enter
repz
adc
int3
jecxz
mov
dec
cwtl
pop
pop
outsb
lret
dec
sbb
hlt
sub
xchg
pop
xchg
push
cmp
sub
aas
mov
addb
push
cmp
js
mov
insb
mov
mov
ret
pop
dec
into
cs
jae
sbb
into
mov
sarb
mov
daa
fistl
mov
push
sub
enter
negb
insl
int3
in
out
jne
adc
pop
xor
and
push
cmpsl
dec
xor
clc
add
leave
pop
mov
pop
inc
xchg
ja
adc
push
pusha
shrb
mov
test
jg
cmp
aam
ja
enter
out
add
mov
push
xchg
std
dec
iret
cmp
sbb
sahf
jp
fbstp
xlat
pop
jno
xchg
into
push
dec
sbb
mov
decb
push
push
push
mov
ret
mov
das
push
and
insb
push
dec
and
dec
cli
push
xchg
pcmpeqb
ja
movsb
aas
fbstp
mov
int3
jmp
xor
xchg
dec
xor
leave
inc
dec
adc
hlt
scas
leave
mov
push
divl
cmp
insl
fisttpll
es
int
nop
test
jl
leave
xchg
stos
sub
je
leave
xorl
cmc
mov
fs
xchg
lods
mov
mov
jp
mov
cmp
shl
pop
faddp
push
pop
les
xchg
sbb
test
adc
mov
orl
cltd
cmc
mov
sarb
call
sarl
orb
xchg
xor
insb
fs
inc
fbld
ret
pusha
mov
fldt
jmp
mov
mov
stc
lret
mov
jecxz
loope
pushf
mov
sete
xlat
fsubl
pop
ss
cli
fcomip
daa
mov
jbe
xchg
add
dec
xor
add
popa
ss
call
clc
inc
sub
fxam
fistpll
dec
sti
movsb
dec
lock
mov
adc
es
popf
jne,pt
xchg
movsl
scas
fnstsw
pop
popf
inc
lahf
adc
mov
int3
arpl
cmp
mov
inc
aas
jmp
mov
stos
or
mov
in
jmp
rcr
pop
or
hlt
enter
push
add
jne
or
ret
iret
fldt
xchg
xchg
je
dec
jae
mov
push
lahf
mov
aaa
pushf
inc
jg
add
out
cmp
jecxz
adc
into
cmpsb
out
shll
jg
lods
dec
cmp
mov
mov
daa
add
mov
push
add
clc
das
push
idiv
cmp
push
in
icebp
cmp
loope
or
pop
lods
ss
int
mov
or
push
lods
lret
outsb
lods
mov
sbb
mov
pop
sbb
xor
jmp
mov
mov
pushf
push
pop
rclb
xlat
jl
xchg
push
pushf
dec
sarl
pop
test
mov
jp
leave
inc
dec
xlat
out
scas
js
js
leave
pop
push
pushf
das
popa
out
and
push
mov
mov
js
add
jl
fs
lret
pop
fsubp
mov
shll
ds
xchg
fs
pop
int
adc
or
lock
bound
mov
adcb
cmc
insb
mov
xor
cs
lahf
push
fcoml
pusha
repnz
push
xchg
pushf
dec
add
les
in
push
lret
rcr
imul
pushf
push
jns
mov
nop
shrb
pop
lcall
loop
lcall
push
loop,pt
mov
mov
mov
push
xchg
pushf
adc
push
mov
jp
rol
ret
pop
pop
add
out
into
pop
addr16
insb
pop
xchg
dec
mov
lea
push
or
fwait
adc
fs
jmp
xor
xor
cmp
test
mov
aaa
mov
fadds
repnz
push
mov
call
add
lods
sahf
adcb
pop
pushf
inc
add
xor
mov
mov
dec
mov
jg
repnz
and
insb
add
popf
sub
mov
and
push
push
addr16
add
push
dec
jnp
shrb
les
adc
adc
test
jo
add
xchg
daa
loopne
popf
movsl
adcb
and
sbb
mov
xchg
dec
mov
sub
sbb
cs
fidivrl
inc
jg
shrb
or
add
dec
xor
in
test
mov
fs
test
stos
sbbb
rcrb
mov
xor
cmpsb
arpl
insl
out
sub
jo
std
xchg
out
push
lock
inc
jne
stos
test
in
xor
adc
and
and
data16
enter
mov
sbb
sbb
cmp
pop
inc
sbb
stos
lret
fisttpll
or
xchg
or
ret
scas
or
sbb
enter
jno
lret
scas
inc
test
add
sbb
sub
loop
jmp
lcall
or
push
je
ret
push
push
lea
mov
mov
add
inc
adcb
cltd
sbb
test
subb
lcall
cmp
cmp
ret
adc
mov
cmp
dec
sbb
dec
aam
pcmpeqw
dec
jo,pn
dec
jnp
mov
xor
and
inc
add
inc
mov
mov
mov
pop
rcrb
ss
mov
mov
lods
std
inc
leave
insl
inc
in
dec
xor
mov
loope
xchg
jnp
pop
xchg
pop
xor
jle
jmp
lret
data16
mov
hlt
sub
jae,pt
lahf
push
inc
sub
movsb
inc
cltd
xchg
lcall
xor
lods
jg
or
sbb
push
adc
clc
aam
jns
ret
ljmp
push
xor
inc
hlt
xor
pcmpeqw
and
and
mov
mov
dec
xchg
inc
mov
pop
inc
sbb
or
push
js
cmp
sbb
dec
cmc
mov
cltd
scas
hlt
mov
scas
cwtl
mov
push
es
stos
mov
mov
mov
push
sub
lret
inc
lock
lea
dec
aas
mov
pop
and
pop
inc
shl
movsl
xorb
xchg
dec
cld
xor
adc
or
mov
mov
or
inc
daa
mov
ljmp
jbe
lods
ret
stos
mov
shr
add
mov
push
xchg
fsubs
jmp
mov
cmp
std
push
out
xchg
sbb
mov
dec
pop
ret
xor
out
int
scas
xchg
popa
out
add
or
jnp
in
sbb
push
adc
adc
xlat
ja
aad
and
mov
jne
dec
cmp
clc
mov
js
aas
aam
jl
mov
xchg
sahf
pop
mov
pop
adc
out
fsts
sub
pop
cmp
stc
mov
filds
add
pop
cmpsb
aad
xor
mov
out
sub
popf
scas
xor
jle
jg
jmp
call
imul
lahf
aam
xchg
clc
hlt
neg
mov
xchg
mov
fwait
mov
fldcw
in
shl
sub
add
ljmp
ja
notl
mov
std
clc
icebp
and
cmc
sbb
ljmp
mov
paddq
mov
mov
mov
fs
jg
outsl
andl
add
jmp
jecxz
cmpsl
pop
gs
inc
push
xor
mov
or
mov
sahf
loop
mov
push
jo
dec
pop
jb
mov
xor
rorl
mov
jg
mov
stc
outsb
or
pop
int
testb
pop
dec
push
insl
xor
mov
lret
lcall
adc
pushf
repnz
push
and
rorl
fldl
jle
repnz
cwtl
pop
orl
js
test
inc
cld
push
adc
pop
dec
cmc
iret
xchg
imul
and
jns
add
or
xchg
add
add
adc
inc
fsubrs
ja
mov
aam
ja
scas
push
loope
jle
xchg
pop
push
cmp
pushl
cmp
fs
lock
inc
or
xor
addr16
mul
stc
mov
mov
hlt
daa
loopne
cmp
lret
mov
cmpsb
outsb
incl
jecxz
adc
mov
movsb
repz
jo
dec
mov
jnp
scas
pop
adc
lret
pop
lret
mov
sub
push
mov
in
mov
aas
jg
ds
enter
xchg
test
pop
pop
jmp
leave
xor
jnp
out
cmpsl
sbb
push
jmp
test
pop
jb
xor
adc
pop
fidivl
ja
dec
push
in
dec
xchg
add
adc
pop
lods
mov
push
insl
push
mov
jae
ds
test
xchg
jl
lds
shrl
cmp
cmc
out
xorl
cmpsl
sub
cmp
xchg
cmp
jmp
lret
cli
scas
inc
and
push
jns
test
ret
loop
frstor
pop
sbb
test
pop
mov
nop
lahf
mov
mov
jp
xchg
xorb
js
fcoms
mov
mov
loope
nop
push
pusha
add
add
xor
fistpl
mov
and
mov
add
cmp
int
test
mov
mov
out
lcall
or
jne
bound
xor
ret
enter
les
pusha
scas
push
jg
jae
mov
mov
imul
mov
adc
lods
or
out
xchg
jae
repz
repnz
and
jmp
xchg
fwait
adc
lds
stc
inc
dec
dec
int
mov
pop
jl
dec
mov
and
mov
ja
movl
push
pusha
js
les
and
clc
repnz
cmc
int
dec
cmp
addl
cld
rcrl
push
aaa
inc
int3
xor
shrl
aam
mov
or
push
popf
mov
push
jmp
imul
das
mov
or
xchg
jmp
repz
sbb
inc
and
sbb
scas
sub
cmp
jge
dec
jae
repz
jmp
jnp
lahf
rorb
addb
and
es
sub
rcl
push
aaa
test
data16
push
testl
dec
adc
lcall
xchg
icebp
dec
addr16
jae,pn
mov
jge
adcb
xor
pop
and
jb
aas
gs
push
inc
xchg
mov
add
insb
inc
mov
and
xchg
ror
and
mov
outsl
aam
rclb
fs
xor
inc
es
push
push
pop
mov
dec
jne
outsl
adc
add
test
pop
push
das
and
shld
jmp
mov
pop
dec
fisttps
xchg
icebp
and
and
test
cmp
xchg
mov
xchg
mov
mov
mov
cld
push
incl
scas
enter
mov
push
in
xchg
cmpb
roll
dec
mov
jecxz
or
pop
scas
and
outsb
mov
push
add
in
aam
mov
sbb
sbb
int
ret
dec
sub
dec
push
sub
mov
inc
punpcklwd
popf
pop
call
sbb
call
mov
data16
mov
inc
and
mov
scas
stos
aam
cmp
mov
shl
fdivrs
std
dec
out
sbb
repnz
jns
jp
shrl
rcll
xor
or
jmp
sti
xchg
movq
repz
outsb
scas
xchg
lea
adc
test
add
stos
testl
inc
stc
xchg
adc
into
adc
push
inc
push
roll
pop
sbb
jne
xchg
int
xor
push
inc
addr16
sbb
outsl
sub
adcl
into
movsl
repnz
icebp
jbe
sbb
cmp
mov
jae
push
movsl
xor
fwait
mov
cwtl
imul
cmp
cmp
loop
out
outsl
leave
movsl
mov
push
add
cld
sbb
std
mov
sub
imul
mov
gs
or
mov
lods
icebp
lret
pop
iret
sbb
lcall
mov
inc
or
sbb
mov
mov
clc
sbb
mov
or
cmp
cmpsl
test
je
and
xor
push
inc
in
adc
pop
or
pushf
push
aad
sbbl
push
leave
push
dec
inc
push
subl
popa
cli
push
or
stos
ret
int3
or
scas
pop
sbb
aad
lahf
xchg
push
pop
popa
cmp
xchg
pop
or
lock
push
mov
sub
out
push
mov
mov
arpl
sub
js
sbb
cmpsl
and
sub
cmp
pushf
outsl
outsl
ds
pop
mov
call
cmp
xor
in
sbb
push
movsl
in
mov
pop
push
dec
test
nop
repz
push
sti
jnp
add
pop
enter
insb
pop
cwtl
mov
adc
mov
stos
das
dec
cmp
mov
pop
std
xchg
ja
cs
mov
testb
cmp
xchg
or
je
stos
pop
std
cmp
sbb
inc
cmp
and
in
ds
leave
cli
roll
test
xor
cmp
mov
mov
and
add
xchg
shl
jge
xchg
adc
mov
inc
cmc
xchg
popw
leave
gs
jg
aas
stc
mov
incb
in
in
icebp
lcall
jae
insb
jl
mov
pop
movb
fs
pop
pop
jge
xor
jecxz
xor
std
lea
push
rclb
js
popa
iret
fs
leave
mov
or
dec
pop
stc
lods
adc
scas
adc
sbb
xor
dec
inc
cmp
push
inc
pop
inc
pusha
cld
mov
pop
ret
scas
push
cmp
xchg
jae
jne
cltd
and
add
push
movzbl
decb
les
cmp
push
cld
mov
cmp
pushf
pop
sub
cmp
sbb
pusha
cmp
xor
outsl
and
fdivl
cmp
mov
add
pop
jnp
js
mov
sub
call
xchg
stos
movsb
rolb
dec
cmpsb
jl
lods
lds
mov
or
or
movsl
lock
jg
sub
pop
out
cmp
pop
or
push
stos
jno
mov
jb
adc
or
cmp
nop
mov
push
imul
imul
fucomip
fsubrs
loop
ja
xchg
sub
dec
lods
jmp
mov
frstor
inc
daa
or
fsubl
aad
daa
les
je
push
cmp
xor
mov
and
pop
in
push
lret
pushf
aaa
insl
dec
out
aam
cmpsb
cmpsl
fldenv
sahf
mov
push
dec
testb
int3
int
insl
test
seto
arpl
stc
inc
jp
scas
sbb
shll
push
inc
jmp
mov
sub
inc
and
pop
jecxz
mov
sbb
add
push
jb
cs
sub
nop
xchg
add
sub
sbb
divl
or
mov
mov
fs
add
mov
cmp
fildll
mov
xchg
idivb
push
sbb
inc
outsb
ja
aad
enter
adc
or
loope
icebp
jecxz
out
mov
out
xor
jo
mov
sbb
add
fstpt
addr16
cmp
mov
data16
xchg
add
sub
sub
push
jo
mov
fdivrl
cmp
pop
push
insb
cli
dec
mov
in
repnz
push
out
cmp
fimull
mov
lret
sbb
imul
hlt
xlat
mov
mov
mov
mov
sub
cmpsb
hlt
push
push
je
scas
imull
xchg
xchg
decl
call
cmp
sub
lret
jne
adc
fwait
inc
pusha
mov
jb
adc
ret
je
adc
idiv
outsb
fcoml
push
or
and
inc
dec
mov
jecxz
inc
jp
lea
adc
pop
ret
or
stos
lock
mov
shl
dec
lods
mov
mov
cmpsl
rcrl
sarb
or
jmp
adc
lahf
or
lods
test
enter
cmpsl
sub
imul
shll
test
sbb
test
add
add
sbb
cmp
jge
jns
in
xor
mov
stc
pop
movsl
fwait
sbb
aaa
subl
je
arpl
push
xor
icebp
mov
ds
mov
sub
popa
jb
pop
mov
dec
jo
cmpsl
dec
dec
and
popl
xchg
dec
mov
push
push
into
fwait
ja
ret
push
pusha
es
or
sub
outsl
cwtl
sti
test
fwait
xorl
mov
and
sub
push
and
or
ret
mov
push
jb
xor
imul
push
mov
cmp
sbb
in
pop
test
test
bound
pop
lret
push
rorl
rcrb
ret
jno
jl
xor
jge
xor
lods
jbe
ja
xchg
test
scas
cmp
stos
inc
fiaddl
or
jecxz
xor
mov
popf
cmc
and
outsl
lret
jmp
mov
loop
add
fcomp
popa
negl
cmp
dec
push
sub
cwtl
mov
pop
pusha
lods
xchg
mov
popa
int3
std
fstps
xchg
fisttpll
loop
cmp
add
orl
andb
push
cmc
cmpsl
loope
pop
ss
in
mov
int
insl
std
mov
int3
mov
aaa
xor
sub
fsubrl
xor
mov
push
dec
aas
inc
or
shll
sub
push
aam
mov
popa
mov
mov
and
adc
js
sub
outsl
or
pop
cmpsl
add
mov
sbb
push
es
push
js
test
test
xorl
mov
clc
jo
test
jmp
popf
mov
rcrl
ret
jg
jno
aam
cmpsl
loop
sub
inc
or
xchg
shll
in
xchg
mov
inc
mov
xlat
stc
xor
pop
rclb
jo
enter
adcb
mov
jmp
jp
xchg
popa
pop
jg
jnp
sub
or
or
imul
stos
lret
mov
stos
push
andb
fdivrp
test
fcompl
add
inc
pop
test
push
aad
orb
int
dec
jne
loop
fistpl
in
and
sahf
adc
pushf
out
pop
jo
cmp
jecxz
inc
movsb
or
es
sbb
inc
mov
js
fmull
dec
dec
adc
mov
and
cli
out
out
test
xor
push
mov
dec
fsubr
xor
xor
fistpll
ja
aad
xor
cs
dec
mov
ret
fs
decb
xor
mov
mov
pop
dec
and
push
cmpsl
stc
dec
enter
cs
loop
cmpsl
xchg
lds
test
or
decb
and
sbb
lret
sub
fcomps
scas
sub
stos
inc
test
sbb
fnsave
sub
cmp
sub
lea
mov
inc
decb
mov
pop
mov
daa
xchg
jae
cltd
jb
addl
repnz
stos
jge
fwait
push
std
orl
push
jmp
and
clc
cmp
lret
pop
int
and
leave
xorl
flds
and
sti
or
dec
lds
inc
mov
frstor
rorb
jp
xor
cltd
popa
lds
pop
push
mov
aaa
mov
mov
lods
mov
lret
int
cltd
xor
or
mov
sbb
mov
dec
cli
imul
dec
cmpsl
call
insl
call
sti
adc
subb
add
jne
test
or
in
shrb
das
xchg
andb
int3
enter
fldl
mov
lods
sahf
mov
and
lret
cmpsl
mov
gs
mov
clc
daa
and
pop
mov
cwtl
cmp
ret
loope
in
out
or
adc
xor
lcall
gs
js
push
insb
std
in
dec
loop
pop
mov
jge
xor
test
pop
pop
xchg
xchg
mov
fistpl
xor
icebp
jo
fisttpll
andb
mov
aad
out
fnstsw
jno
inc
jl
je
inc
lahf
sarb
scas
xchg
les
dec
mov
inc
push
test
sub
popa
fbstp
dec
xchg
and
sbb
cs
aas
pop
pop
repnz
mov
fdivrl
test
inc
pusha
pushf
sbb
add
adc
jecxz
pop
mov
mov
inc
dec
inc
ficompl
jne
fnclex
push
pop
cs
fmull
sub
popa
or
icebp
fs
xchg
ds
push
xor
inc
add
inc
pop
imull
mov
std
adc
fsubl
ja
pop
popa
jo
rcll
jbe
es
lds
cmp
push
cld
dec
aam
push
insl
xchg
xchg
fdivr
xchg
or
out
pop
loopne
xchg
sub
out
icebp
sbb
and
jo
cmp
rcrl
imul
pop
movsl
or
cmpsl
adc
frstor
outsl
data16
sub
popa
dec
cmp
and
cltd
cs
loope
aaa
add
mov
rep
mov
out
cli
sahf
les
xchg
mov
push
repnz
enter
dec
repnz
push
incb
repnz
mov
jp
xor
popa
jb
pop
movb
lret
out
ficoms
xchg
test
addb
xorb
inc
scas
jg
sbb
loope
incb
cmp
pop
ret
ficoms
daa
fcmovnu
stos
mov
jns
inc
repnz
call
jecxz
movsl
xorl
test
inc
cmp
ds
in
push
pop
lcall
rcrl
hlt
cmp
push
fdivl
gs
ret
or
andl
xor
in
sbb
stos
in
lret
popf
sbb
notb
add
inc
insl
dec
mov
pushf
lret
pop
dec
imul
sbb
sbb
nop
shr
ret
icebp
mov
xchg
jp
hlt
and
mov
adc
push
add
je
cmc
xchg
mov
push
mov
in
clc
jecxz
cmp
rcll
sub
je
lret
mov
ljmp
std
mov
cmp
cmp
sti
lahf
lock
inc
push
add
sahf
push
lret
ret
outsb
jge
movsl
loop
jl
test
out
inc
mov
jbe
push
fmulp
adc
xor
sub
fsubs
cwtl
adc
dec
jmp
popa
inc
stc
xchg
scas
mov
rorl
jecxz
daa
pop
daa
enter
popa
jo
jmp
aas
imul
outsb
jge
int3
ljmp
adc
or
and
fwait
pop
sbb
lods
jo
in
push
jg
jg
push
mov
daa
dec
iret
mov
sarl
mov
repz
stos
push
imul
adc
mov
jle
testb
sbb
xchg
jb
inc
and
add
enter
pextrw
out
es
es
mov
mov
mov
test
es
aam
inc
mov
mov
xchg
outsb
pop
popa
test
repz
icebp
dec
jp
xchg
int3
rol
cmp
andb
test
or
inc
pop
push
mov
push
addb
inc
in
xchg
pop
sub
sbb
fdivrp
add
pop
scas
sar
xor
jl
stos
outsl
sbb
jmp
pop
inc
cltd
xor
arpl
jo
jb
and
pop
add
xchg
roll
sbb
int
insb
dec
scas
lret
sahf
mov
scas
cmp
addl
lea
jo
mov
out
dec
cmp
scas
stc
into
clc
sub
xchg
xor
sbb
or
xor
fdivl
into
xor
mov
dec
adc
mov
dec
imul
in
xorb
or
scas
jne
stos
cmpsl
inc
mov
in
cmp
inc
or
lret
loopne
cmp
es
fsubrs
pop
mov
mov
leave
sbb
lods
lret
mov
aad
inc
ja
jo
mov
sub
sub
daa
or
push
fs
fildll
aam
loope
xchg
add
je
jnp
xchg
push
and
repnz
add
sbb
mov
inc
mov
xor
test
jge
stos
mov
outsl
cmp
adc
movsl
dec
mov
and
pusha
rcrl
call
cmpsl
test
sub
in
stos
jno
mov
icebp
mov
cmpsl
fwait
mov
addr16
dec
out
mov
addb
fidivl
mov
addl
lcall
cmp
int
and
push
xor
inc
dec
xchg
fldz
ret
mov
xorb
push
dec
sub
add
push
add
insb
rcrl
and
fbstp
xchg
ret
add
aas
cltd
mov
adc
mov
adc
push
imul
push
mov
gs
xor
cwtl
and
jo
sarl
sbb
es
mov
push
rcl
lods
cmpsb
xchg
nop
pop
inc
dec
jg
fsubs
jnp
dec
inc
lahf
sub
mov
add
sub
repnz
les
push
sti
inc
mov
loop
loope
imul
push
inc
int
add
push
add
pop
dec
or
push
rcrl
enter
mov
cmpsl
or
mov
incb
dec
popa
int3
mov
sbb
xchg
mov
or
orb
pop
daa
rcrl
loopne
fcomip
push
mov
mov
inc
cmpsl
lods
fildll
arpl
push
stos
stc
fimull
add
mov
clc
testl
pop
xchg
mov
pop
fldenv
xchg
stos
or
or
cmpsb
adc
fs
xchg
pop
ljmp
pop
jp,pn
inc
pop
sub
and
mov
cmp
in
aas
adc
les
sub
add
mov
push
bound
roll
enter
cld
push
sbb
dec
mov
std
out
gs
adc
imul
xchg
push
sub
pusha
dec
arpl
dec
movsl
jg
dec
dec
sbb
mov
pop
jecxz
adc
subb
in
je
mov
icebp
lods
mov
fldenv
xor
lock
outsl
cmc
jge,pn
test
mov
xor
addr16
andb
or
mov
jmp
sarl
push
mov
addr16
roll
push
cwtl
jecxz
cltd
adcl
addr16
aad
outsb
add
fldt
nop
ret
sar
mov
or
pop
dec
or
rcll
pop
pushf
aas
push
or
aas
mov
mov
xlat
sti
jb
addl
mov
mov
push
cwtl
mov
loopne
addr16
xor
stc
xor
add
sbb
push
inc
lods
push
fwait
movsb
js
cmp
ja
addl
or
mov
pop
arpl
inc
dec
shrl
pop
scas
popa
adc
sbb
jae
mov
pushf
shrb
mov
pop
add
dec
shr
jp
out
cld
test
dec
rcl
xchg
xorb
es
xchg
cwtl
pop
jl
arpl
and
mov
out
hlt
pop
mov
cmp
pop
mov
jo
ja
xchg
insl
out
roll
mov
repnz
gs
loop
hlt
xchg
jl
push
fmuls
sub
adc
adc
ja
sub
xchg
pop
pusha
es
lcall
xor
sub
xor
add
je
xorb
pop
push
mov
nop
popa
inc
addr16
and
jns
sub
movsl
xchg
adc
push
ret
pop
inc
adc
add
push
repnz
adc
pop
outsl
aas
cmpsl
push
loopne
xor
popf
js
add
mov
cmp
sbb
inc
inc
cmp
test
cwtl
add
jb
sub
out
push
add
dec
push
gs
in
out
jns
incl
cmp
jne
decb
cmp
popa
in
mov
jnp
mov
cmp
gs
sub
mov
push
jo
sbbb
repz
ja
shll
fldenv
aas
dec
pop
arpl
daa
roll
hlt
sbb
addr16
nop
pushf
adc
jns
lahf
stos
iret
enter
or
push
sub
data16
stos
jge
imul
imul
add
xor
pop
fildll
pop
mov
mov
repnz
or
ret
add
daa
cmp
push
push
inc
push
data16
arpl
repnz
mov
mov
outsl
sbb
pop
aaa
mov
rclb
sub
shl
jo
mov
ljmp
push
test
cmp
xor
sbb
xchg
dec
push
mov
test
xor
push
fiaddl
gs
pop
and
rorb
ret
sub
xchg
mov
xor
xchg
adc
and
mov
sbb
sub
stos
aam
insb
out
pusha
mov
pop
mov
add
out
mov
sbb
jmp
sbb
cs
xchg
rcll
hlt
fdivrl
or
inc
ficoml
fcomps
dec
jl
daa
mov
xchg
call
scas
adc
addr16
mov
out
addr16
ja
add
imul
pop
mov
imul
daa
bound
test
icebp
lret
shlb
hlt
push
lods
test
jge
adc
add
jmp
ret
mov
sub
and
clc
lea
dec
xor
addr16
pop
jnp
cmp
shrl
jg
xchg
adc
xor
jl
fistpl
int3
mov
pop
leave
test
pop
mov
call
lcall
lods
adc
adc
add
mov
xor
lcall
xchg
cmp
mov
xchg
aas
or
xor
and
cmpb
push
jl
mov
aad
dec
sbb
in
out
sub
push
push
inc
rcrl
xor
mov
pop
test
repnz
aas
mov
cmp
fstp
outsb
ffreep
xchg
out
push
es
insb
push
xchg
jg
aad
stos
clc
pop
cld
jno
mov
outsl
xchg
push
fmull
xor
cmp
decb
cltd
shll
js
inc
pop
inc
rol
movsl
test
mov
add
icebp
mov
sbb
mov
int3
out
nop
cmp
loope
jne
sbbl
mov
push
sbb
jg
rol
pushf
xorl
pop
enter
sahf
stos
sarb
in
adc
imul
lret
xchg
mov
pop
js
xor
sub
mov
adc
cli
sbb
jnp
adc
adc
scas
insb
add
pusha
pop
jmp
inc
incb
jno
dec
mov
add
mov
outsb
lcall
aas
out
test
popf
jno
add
add
rolb
loop
insl
insb
push
outsb
fs
pop
int
or
jmp
and
push
jmp
lret
pop
adc
fdiv
ss
repnz
orb
sbb
dec
psubsb
jmp
xchg
sbb
mov
popl
das
out
sbb
test
pusha
enter
xor
push
fnstsw
xchg
adc
cld
pop
cltd
testb
mov
cli
aas
sahf
nop
shlb
inc
ss
pop
int3
sti
sbb
iret
dec
sub
into
icebp
jno
out
mov
pop
test
adc
and
insb
fsubl
addb
aas
mov
into
dec
test
cmp
mov
lods
cmp
roll
andb
shrb
leave
inc
loopne
mov
push
out
inc
or
imull
out
cli
xchg
mov
orl
pushf
mov
mov
mov
stos
add
inc
mov
push
fwait
cmp
dec
lret
xor
test
jns
dec
arpl
fwait
mov
movsb
out
in
nop
popf
mov
sub
sbb
mov
xor
inc
jbe
fdiv
into
sub
jbe
adc
mov
mov
sbb
fsubrp
cmp
mov
cs
addr16
push
adc
add
mov
jb
mov
repnz
cli
test
fwait
iret
xchg
lds
inc
mov
mov
lds
or
xor
lfs
mov
aaa
xor
jae
and
xchg
js
jb
jne
stos
cmp
je
xorl
xor
mov
pop
sub
jno
mov
rorl
dec
lret
std
dec
cs
in
cltd
jge
xor
std
test
pop
mov
push
jecxz
int
xchg
mov
xchg
sbb
fmuls
mov
rorl
sbb
lock
test
push
mov
dec
jle
mov
adc
push
jno
rclb
dec
sub
adc
jge
int3
sbb
or
fldenv
inc
shrb
or
insl
aas
iret
pop
push
fwait
pop
popa
jg
jae
es
fidivs
rol
insb
push
inc
fimull
add
inc
gs
cmp
cmp
mov
test
pop
jge
fcomps
push
pop
inc
cli
cmp
mov
mov
jecxz
sbb
aam
aas
jge
sahf
fstl
or
test
mov
les
xor
mov
pop
adc
xor
push
cmp
pop
push
sub
jbe
mov
and
bound
leave
cltd
popf
mov
mov
daa
sub
stos
jecxz
xor
inc
inc
test
jb
inc
dec
cmpsl
sbb
sbb
mov
outsb
outsl
inc
xchg
jecxz
movsl
mov
pop
stc
mov
push
mov
mov
push
div
mov
ficompl
repz
loop
adc
and
mov
and
in
dec
mov
cmc
loope
jnp
psrlw
dec
jg
hlt
ja
les
pop
aaa
push
jmp
mov
popa
pushf
rorl
xor
andl
sti
mov
or
xor
pop
push
jnp
scas
test
insl
fstps
lret
rcr
out
mov
das
mov
shl
and
inc
pushf
cmp
add
dec
int
stos
dec
inc
inc
mov
loope
inc
imul
mov
pop
dec
mov
rorb
jge
fisttps
cmpsl
in
cmp
es
jae
mov
sahf
inc
mov
mov
push
icebp
pushf
jae
cmp
movsl
cmp
xchg
repz
or
test
dec
aaa
pop
mov
je
jecxz
sbb
and
adc
sub
repnz
sti
test
xchg
test
mov
movsb
jne
cld
in
bound
inc
xor
push
cmp
mov
gs
adc
mov
addl
ret
xchg
jl
out
fwait
or
add
dec
sub
aas
mov
iret
das
mov
and
mov
jno
dec
jle
lahf
ret
cli
out
mov
mov
inc
nop
jmp
lds
out
addb
rclb
scas
mov
xlat
leave
lds
mov
addr16
sbb
int
out
push
shll
sub
popf
imul
mov
pop
inc
jbe
ret
sbbb
ja
sahf
mov
addl
popa
jecxz
add
and
or
pusha
add
les
or
rorl
arpl
pop
sbb
fsubl
je
cmpsl
scas
mov
mov
insb
fcomps
lcall
mov
ret
orb
adcb
cmp
jne
nop
mov
clc
ds
pop
int
inc
xchg
cmp
push
jnp
test
pusha
adc
repz
test
insb
push
nop
inc
scas
popf
adc
lods
popa
cmp
lea
pusha
add
adc
lock
ret
cmp
push
dec
jb
std
pushf
jne
ret
adcb
cmpsl
mov
adc
sub
push
int3
inc
lret
or
or
dec
out
stos
fsubrs
loope
inc
or
sti
dec
sbb
push
and
mov
adc
enter
cmpsb
push
and
pop
frstor
movsb
dec
gs
in
adc
push
and
in
cmpsl
inc
mov
les
xchg
rdtsc
js
enter
xchg
outsl
call
pop
pop
scas
out
lcall
shr
fldenv
lret
pop
push
xchg
in
fnstcw
fsubrp
popf
dec
lcall
cmp
imul
je
add
pop
xchg
lret
enter
aaa
addr16
push
mov
mov
out
aas
push
cli
adc
lahf
and
xchg
scas
rolb
or
in
jb
pop
mov
insb
inc
in
jp
cmpsb
aad
inc
xor
jecxz
pop
std
bound
cmp
xchg
mov
xchg
fiadds
scas
jl
lcall
jne
or
cmp
out
pop
jbe
mov
lcall
cmpsl
jmp
in
or
idiv
cmp
push
mov
lahf
js
xchg
mov
add
pop
add
stos
mov
jg
dec
lock
stc
dec
and
stos
xor
or
or
cld
roll
adc
pop
inc
dec
cmp
aas
lret
and
or
imul
test
xor
pop
jg
cltd
test
lods
push
std
andl
cmc
addb
jb
jb
inc
scas
mov
insb
push
hlt
pop
jo
xor
mov
jmp
mov
outsl
pop
test
imul
push
mov
pop
orb
aas
loope
iret
jl
arpl
push
cs
into
add
rcll
dec
mov
icebp
sub
pop
call
and
pop
fdivs
notb
adc
mov
sbbb
iret
mov
pop
rcr
mov
xor
fcmovne
sbb
mov
enter
xchg
or
dec
test
push
xor
daa
pop
out
data16
shl
ljmp
push
aam
add
scas
and
mov
and
and
cltd
stos
mov
mov
jmp
add
insb
pop
push
cmp
sub
out
je
clc
test
mov
xchg
xchg
into
std
shll
mov
lock
lret
ret
inc
sub
cltd
lea
pop
cmpsb
rolb
popa
loope
pop
push
xchg
ret
clc
or
push
scas
jp
dec
dec
sub
nop
push
mov
mov
cmp
mov
test
push
inc
jle
fstpl
add
sub
push
arpl
xlat
sbb
imul
push
adc
or
imul
mov
xchg
movsb
int3
ret
ljmpw
xor
mov
cmp
or
pushf
dec
jl
pop
mov
or
jmp
add
push
orb
stos
pop
cld
popa
cs
rorb
pop
rcll
fidivl
in
or
aad
je
dec
ja
or
sbbb
fisubs
orb
out
in
inc
mov
mov
mov
sahf
jge
xchg
into
imul
jns
or
dec
jle
xlat
cltd
pop
pop
inc
jno
mov
and
dec
mov
hlt
mov
test
push
cmpsl
mov
adc
shl
mov
arpl
jae
xchg
add
jo
testl
xor
sbbl
stos
cld
movsl
xor
push
and
out
movsl
ja
jno
js
out
dec
mov
popl
mov
stos
sahf
mov
xchg
lret
sub
lods
mov
lea
or
or
jp
sbb
rcrl
sbb
jecxz
enter
push
pop
dec
pop
or
out
and
sub
incb
sbb
enter
stos
sub
sbb
addr16
inc
jmp
ret
rcll
jne
stos
outsb
mov
cmp
lock
xchg
or
imul
ficomps
test
cmp
aam
mov
outsl
lahf
add
shrl
cmp
jbe
stc
lret
mov
out
dec
add
and
cmpsl
adc
mov
or
cmpsb
inc
out
mov
repnz
mov
push
shrb
xor
mov
mov
loopne
push
push
mov
pop
bound
dec
stc
cltd
cld
jp
daa
loopne
movb
pop
outsl
lods
add
push
mov
in
dec
push
mov
cmovle
mov
imul
dec
mov
das
push
testl
mov
stos
jbe
mov
jnp
movsb
or
xchg
in
mov
adc
dec
xchg
outsl
push
cli
nop
mov
push
lahf
mov
pop
add
loop
mov
out
idiv
std
xlat
aam
call
call
xor
cmp
cmp
sub
pop
insl
cmp
or
out
repz
pop
loopne
mov
scas
clc
pop
nop
stos
cmp
adc
lea
jns
hlt
add
or
js
xchg
aaa
decl
mov
cmpsb
mov
leave
rolb
pop
cmovbe
decb
lar
aad
insb
sbb
cli
inc
fstl
lret
das
aaa
mov
xchg
sbb
inc
cwtl
inc
sti
data16
pusha
xor
mov
das
add
flds
pop
xchg
shll
sub
iret
aad
ja
nop
fs
pop
pop
ljmp
lods
or
stc
dec
mov
sub
or
adc
stos
dec
ret
dec
aaa
dec
adc
adc
mov
icebp
push
mov
ljmp
mov
push
and
or
cwtl
popa
push
leave
jo
jecxz
pop
jae
popf
mov
mov
adc
inc
js
testb
add
repz
mov
cmp
loopne
mov
adc
jne
cmp
push
lret
xchg
or
adc
idiv
out
cli
mov
adc
test
in
mov
sahf
mov
xchg
aaa
callw
sub
aaa
rolb
mov
add
fldcw
inc
test
stc
or
push
in
add
pop
test
jp
pop
into
fsubrl
das
cmpb
pop
adc
jecxz
ficompl
push
pop
incb
cmp
bound
gs
xor
nop
add
mov
lea
sub
mov
into
add
mov
lahf
xchg
cmpsl
and
repz
in
aad
loopne
mov
testb
subl
xchg
sbb
dec
sub
pop
xor
ss
mov
mov
out
es
lsl
sbb
jbe
enter
scas
xchg
jle
out
dec
flds
cmp
aad
jns
mov
mov
jp
pop
push
or
daa
fs
sbb
mov
add
mov
insb
mov
cmp
mov
leave
out
pop
cmp
int
movsb
sub
xor
pop
pushf
mov
lret
testl
add
dec
mov
dec
xorl
sbb
rorl
rclb
scas
push
loope
and
jne
lods
or
and
or
lcall
pop
mov
mov
in
jo
ret
out
shl
mov
int
pop
xchg
xorl
push
je,pn
push
test
repz
mov
mov
inc
fistps
je
aaa
int
ss
sahf
idiv
and
pop
in
sbb
in
xchg
sub
pop
mov
push
test
mov
lock
fs
mov
imul
or
jp
xlat
aaa
inc
ds
or
cs
cmc
add
in
out
imull
sarb
push
dec
pop
mov
sub
pop
addb
lea
sbb
and
add
and
sti
pop
add
or
xor
dec
adc
and
daa
pop
mov
and
popa
pop
loop
adc
jno
das
sub
cmp
gs
bound
fldt
fdivr
into
push
cmp
inc
push
repnz
sub
sarb
cltd
fisubrs
mov
sbb
arpl
rorb
xchg
xor
sbb
xor
lret
out
inc
push
adc
rcrb
pop
lods
mov
addr16
data16
aad
fcomi
pop
push
in
lcall
hlt
in
in
shll
add
popa
mov
test
hlt
xchg
lea
fmuls
mov
xchg
mov
mov
pop
inc
jno
imul
out
adc
subb
cmpsb
jl
jo
mov
es
aam
sub
push
cmp
xchg
enter
push
adcl
inc
mov
pop
mov
lea
xor
aam
dec
mov
stos
into
cmpsb
mov
cmp
stos
xchg
sahf
imul
push
dec
inc
sbb
insb
add
xlat
lret
pop
out
or
inc
addl
jns
loopne
mov
mov
xchg
fmulp
scas
jne
pop
inc
xor
mov
adcl
insb
je
fsqrt
cmp
cmp
adc
cmc
stos
mov
xor
out
mov
pop
add
push
add
nop
pop
and
mov
in
mov
pop
fstl
push
mov
adc
push
or
or
and
insl
loope
pushf
fmulp
inc
lds
daa
and
bnd
jge,pt
sbb
xchg
enter
jo
outsb
cld
mov
aas
sti
repz
mov
add
insb
sti
popf
and
jle
mov
shlb
lods
and
mov
cmp
in
loope
cmp
insl
adc
push
outsl
xchg
sub
xor
ret
ret
pusha
sub
in
or
jecxz
out
mov
mov
inc
cmpsb
dec
jecxz
sub
cmp
jmp
inc
int
push
sub
ret
fucomi
cmp
mov
adc
dec
xchg
test
and
mov
sbb
cmp
push
add
lcall
dec
mov
daa
imul
mov
sub
clc
repnz
loop
dec
lcall
push
mov
movsl
je
cwtl
test
repnz
or
xor
cmpsl
mov
xchg
lock
frstor
add
int
lahf
pusha
pop
pop
shlb
out
pop
insl
add
xchg
aaa
fisubs
mov
jae
mov
addr16
dec
lods
mov
ljmp
pop
inc
ret
push
pop
dec
dec
sub
xor
xchg
pop
enter
xor
sbb
and
lods
cs
inc
add
or
cmpsb
dec
nop
and
or
nop
imul
mov
mov
fstpl
xchg
pop
movsb
mov
jae
cmp
in
movsb
mov
mov
enter
mov
dec
repz
jl
lret
jb
add
or
je
and
gs
mov
lock
mov
sbb
lock
fistps
outsl
aam
inc
loopne
pop
xor
add
arpl
xor
das
jae
dec
push
bound
cmpsl
std
xchg
xor
out
mov
sbb
push
mov
and
dec
ss
into
and
sbb
jmp
loopne
jb
jmp
jl
lcall
aad
jle
outsl
ror
test
cmp
mov
dec
nop
mov
jnp
xor
add
rorb
sbb
mov
shrb
push
pushf
and
cmove
mov
xlat
jp
xchg
pop
fstl
lock
popa
sub
stc
and
mov
inc
xor
sbb
xchg
cmpsb
pop
insl
mov
or
push
add
es
clc
ja
sbb
in
xchg
and
add
inc
dec
aam
cmp
jnp
insb
arpl
push
mov
insl
xor
mov
pop
inc
xchg
in
out
mov
jmp
xchg
push
push
or
xor
fistpl
rolb
cmovnp
enter
testb
jnp
fsubr
push
cmc
aam
shll
idiv
jecxz
ret
mov
add
pop
mov
mov
mov
ds
sbb
and
sbb
jne
adc
push
jge
decb
insb
xchg
hlt
fstp
test
scas
or
out
adc
xchg
lcall
push
stos
movsl
shll
inc
ret
clc
test
jle
repnz
loop
insl
push
dec
jmp
enter
cli
jge
mov
js
push
push
pop
push
push
cmp
popa
loopne
jmp
inc
mov
push
repnz
push
aas
xchg
xchg
aam
test
iret
adc
les
mov
cmp
sub
push
int3
sbb
dec
xchg
sub
das
fbstp
pop
sbb
sbb
add
mov
fsub
add
adc
push
xchg
out
cld
outsb
dec
out
rep
jne
test
sub
xor
dec
push
xchg
into
xchg
sub
scas
lock
cmp
mov
pop
stos
pop
mov
inc
adc
fistpll
mov
mov
sahf
jl
xlat
sub
mov
sub
aam
mov
out
sub
test
divl
add
mov
loopne
pop
xlat
add
mov
jb
jmp
pop
adc
test
ret
repz
adc
sbb
jl
lret
lea
xor
mov
inc
repz
enter
xchg
in
aad
incb
stos
jg
sbbb
rolb
arpl
pop
sbb
jp
and
and
daa
push
add
adc
scas
ljmp
in
sbb
sbbb
jl
imul
mov
jnp
adc
fdiv
cld
mov
loopne
fwait
add
adc
sub
mov
les
mov
or
sub
js
sbb
mov
mov
add
inc
movsb
ret
xor
mov
add
lea
and
fmul
sub
xchg
push
or
in
adc
cli
push
xchg
pop
cmp
mov
lock
jge
aad
inc
fwait
inc
cltd
loope
jl
or
push
pop
add
dec
cmp
sub
mov
push
loop
cld
push
iret
mov
pop
push
loop
jmp
xchg
adc
mov
sub
pop
out
mov
ljmp
pushf
sub
movl
mov
lret
lcall
inc
add
adc
out
aas
in
adc
daa
mov
pop
pop
out
adc
push
pop
mov
xor
pop
jecxz
cld
adc
test
addl
xchg
dec
jecxz
pop
or
movl
imul
shrb
pop
jge
push
add
out
in
dec
dec
dec
jbe
adc
pusha
leave
aas
stc
inc
cmp
cmp
imull
mov
out
adc
xchg
jnp
cli
repnz
push
daa
nop
sbb
dec
lcall
bound
jbe
popf
inc
push
add
fwait
scas
dec
xchg
leave
mov
or
mov
xor
jle
mov
pop
push
or
push
add
xchg
mov
in
sbb
pop
dec
dec
je
fcmovnb
or
ror
fcoms
js
lret
pusha
scas
xor
call
cltd
arpl
in
fs
xlat
lahf
pop
jl
repz
ret
cmp
jne
fwait
xchg
inc
test
lods
es
aam
int3
cld
je
leave
adc
inc
roll
push
in
faddp
out
mov
ss
clc
rcrb
xor
pop
pushf
cmp
in
lret
jp
or
loopne
mov
call
es
mov
push
sbb
push
cltd
das
test
scas
sub
and
dec
jecxz
or
dec
bound
jno
shrb
xchg
pop
int3
leave
and
jne
loop
rcrb
sbb
mov
mov
dec
mov
imul
repnz
dec
shrl
push
fisttpll
and
std
or
dec
cmp
or
fsts
add
mov
fs
outsl
xor
add
xor
mov
dec
jae
push
xor
cmc
addb
push
rcl
insb
lret
in
mov
pop
push
ss
inc
lahf
loope
les
pop
and
ss
cmc
lahf
dec
ret
push
ljmp
jge
mov
adc
lods
or
sbb
sub
push
bound
jmp
hlt
fldt
xchg
adc
jb
cwtl
jp
mov
ror
inc
dec
push
and
std
popf
xchg
pop
lds
mov
dec
xor
je
push
mov
scas
lock
jae
out
cld
pop
pusha
adc
scas
stos
add
sbb
hlt
adcb
repz
in
shrb
rcll
inc
mov
jecxz
mov
movsb
dec
fiadds
sub
cmpw
jns
daa
jmp
pushf
lahf
xchg
testl
pop
cmpsl
xchg
subb
mov
and
mov
cmp
pop
test
rolb
inc
jne
mov
leave
or
pop
sarl
sahf
mov
sti
filds
mov
cmp
adc
negb
lds
jp
dec
js
pop
or
bound
xchg
dec
xchg
push
mov
sub
int3
lea
ret
jae
test
shll
loop
repz
js
pushf
into
dec
sbb
into
ret
lods
xor
mov
sbb
dec
mov
adc
mov
lods
push
lret
or
fmull
gs
and
cltd
cltd
int
jecxz
leave
inc
jne
imul
xchg
sub
mov
jge
pop
hlt
stos
mov
jl
lahf
mov
fisubrl
fbstp
movsb
imul
mov
cmp
pop
cmp
push
xchg
movsl
xchg
mov
mov
bound
dec
xor
mov
icebp
pop
mov
xchg
mov
pop
out
and
xchg
pop
pusha
pop
imul
lcall
in
add
cmp
popa
data16
or
movsl
mov
cmp
inc
sbbb
lahf
fisttps
sbb
mov
int
leave
and
jmp
addl
bound
add
icebp
jb
rcrl
lahf
movsl
jno
testb
ja
lcall
lods
push
aad
bound
imul
bound
jmp
add
cmpb
push
sti
je
stos
call
rclb
dec
mov
test
icebp
or
sets
xor
adc
testl
pop
mov
sbb
mov
xor
leave
or
add
mov
scas
mov
loope
in
popf
cltd
testb
mov
fadd
mov
jae
xchg
enter
fs
data16
nop
ficoml
test
push
and
lock
push
inc
in
ljmp
pop
popa
mov
fmulp
outsl
loope
decl
and
pop
rorb
lahf
sbb
xchg
add
mov
subl
cmpb
cmp
fnstsw
push
cmp
inc
mov
pop
sbb
push
loope
xchg
lods
xchg
subl
fsubl
fldl
push
cmp
jo
je
int3
xchg
jecxz
sub
sti
cmp
in
dec
xor
movsl
scas
lcall
jle
add
xor
xchg
jae
hlt
add
xchg
js
xor
daa
aad
repz
int
xchg
scas
jmp
mov
add
into
mov
xchg
cld
xchg
and
mov
dec
loopne
in
roll
pop
jnp
add
mov
and
shlb
xchg
nop
repz
insb
lcall
xchg
in
mov
or
cmc
cmp
cltd
mov
pop
leave
add
cli
xor
mov
mov
add
ret
push
push
and
mov
test
dec
subb
cltd
lea
jle
data16
cmp
into
je
test
adc
pop
stc
push
mov
jl
pushf
test
mov
jmp
dec
ret
pusha
and
push
mov
nop
loope
xor
mov
ljmp
mov
icebp
repnz
xchg
inc
sub
xor
jmp
lds
pop
mov
mov
push
mov
cs
pushf
mov
ja
cmc
shlb
push
out
jbe
cld
push
sti
cmp
gs
nop
fildll
mov
xor
cs
xchg
pop
and
cmp
mov
sbb
xchg
push
mov
mov
fdivrl
pop
scas
add
push
lahf
cmp
lret
and
add
push
jge
xor
movsb
fidivrl
add
xor
mov
test
fdivrs
pop
outsb
sbb
bound
bound
mov
inc
push
add
int
pushf
push
mov
loope
mov
xchg
loope
jns
pop
ljmp
loope
jb
inc
xor
sbb
rcl
ficoms
jle
pop
xchg
inc
xchg
cli
mov
pop
sahf
fisubl
push
divb
movsl
jbe
mov
in
mov
icebp
stos
inc
push
sbb
mov
mov
movsl
decl
mov
cs
sbb
mov
mov
cli
mov
addr16
bound
ljmp
push
out
xorb
lock
and
gs
dec
pushf
jb
mov
push
fwait
js
lock
mov
lods
mov
imul
test
sbb
pushf
aad
cs
inc
cli
adc
jmp
sub
push
ljmp
out
sti
xchg
xor
dec
ss
xchg
mov
dec
push
loopne
stc
push
xchg
loope
inc
das
arpl
stos
jl
pop
pop
push
in
dec
ja
fstpt
adc
pop
push
insl
mov
ret
mov
rcrb
sub
sbb
adc
ret
fiadds
imul
aaa
es
sbb
dec
pop
sub
sbb
movb
xor
mov
ret
scas
lcall
fistl
js
mov
lcall
in
aad
push
imulb
sbb
or
cltd
mov
cmp
push
loop
adc
sarb
sbb
and
xchg
int3
or
and
sub
pop
sub
add
adc
sub
in
fisttps
jnp
push
mov
mov
mov
inc
popa
es
dec
shl
sahf
outsb
adc
out
push
mov
sbbb
arpl
and
test
sti
bound
add
mov
sub
pop
fbstp
or
mov
scas
jb
adc
pop
lea
cmp
cmpsb
pusha
fdivs
bound
aam
cmp
push
push
jmp
idiv
lret
pusha
lcall
push
push
sbbl
stos
jns
insb
sub
mov
neg
push
adcl
mov
and
imul
outsl
daa
lods
jo
mov
or
sub
and
gs
mov
dec
clc
xchg
xlat
movsl
dec
inc
lock
stos
mov
or
into
push
sti
enter
cltd
push
mov
dec
mov
jnp
in
mov
popf
add
std
mov
xchg
add
mov
add
popl
lcall
dec
pop
sbb
or
aad
adc
pop
mov
call
push
lds
jg
mov
mov
xor
mov
xlat
jg
call
mov
sub
adc
xor
pop
test
loopne
and
cmpsb
lret
cmp
mov
pushf
inc
inc
inc
sti
xchg
mov
dec
imul
mov
ds
adc
aaa
dec
cmp
mov
mov
cltd
leave
ja
or
fnop
xchg
pop
jmp
mov
lcall
adc
inc
call
xchg
loopne
xchg
push
sarb
faddp
add
mov
lods
test
xchg
stos
cmp
punpckhbw
and
inc
das
push
imul
sbb
add
sbb
adc
pop
xchg
dec
or
rorl
xchg
out
sub
out
mov
adc
repnz
mov
inc
push
jmp
popw
dec
std
lcall
movsl
fistpl
jae
popf
ret
sub
daa
lret
lods
inc
dec
lcall
lcall
insl
shrl
dec
inc
xsha256
cmpsb
push
icebp
into
clc
pop
lret
lret
fmulp
adc
ja
jb
test
movsl
movsb
add
jmp
jbe
and
jp
hlt
lret
es
add
aas
xor
arpl
and
dec
popa
cmp
shrb
cs
sub
ret
push
and
sahf
repz
mov
outsl
aaa
sti
addr16
in
sbb
xorps
cwtl
mov
cmpsl
sti
call
sub
adc
ljmp
and
cltd
jne
xchg
repnz
paddusw
les
jmp
adc
enter
stos
jg
jg
add
ljmp
int3
cmpsb
mov
mov
jle
or
repnz
mov
xor
adc
add
dec
clc
int3
imul
mov
loop
pop
cli
or
fcom
pop
ss
jmp
out
sub
rcrb
sbb
std
jb
icebp
flds
rcl
enter
js
cs
add
or
scas
sub
or
repnz
mov
mov
int3
lods
or
xchg
or
push
adc
ljmp
fdivrs
int3
push
insb
jge
scas
mov
sbb
xor
pushw
fisttpll
inc
xchg
mov
call
sub
jns
sbb
and
mov
das
inc
jg
mov
inc
js
mov
loopne
mov
add
das
mov
aad
insb
inc
std
int
mov
scas
add
insl
mov
mov
repnz
dec
cli
in
in
jg
adc
fdivrs
addr16
xchg
xlat
fstpt
test
jns
out
and
jecxz
mov
and
andl
test
pop
les
add
or
cmp
pop
lret
xor
test
pop
sub
mov
stos
push
cmc
in
out
hlt
cld
fildl
pop
addr16
cmp
adc
or
dec
aaa
std
mov
jp,pt
arpl
mov
icebp
mov
cmpsl
cld
iret
mov
mov
ret
xchg
cmp
mov
ja
xchg
xchg
sub
add
jle
je
push
outsl
mov
sbb
xor
les
scas
test
add
xchg
mov
cmp
push
inc
call
xchg
mov
jp
bound
nop
or
inc
cmp
xor
xor
sbb
in
jns
in
orl
jb
inc
loope
mov
sbb
clc
fwait
mov
ret
lret
sbb
jns
adc
and
sub
sbb
inc
ds
inc
lret
movb
push
jnp
add
mov
adc
xchg
loopne
inc
mov
test
into
sub
or
daa
out
adc
sbb
cwtl
in
jge
xchg
add
lods
arpl
iret
add
adc
inc
or
inc
mov
cmp
bound
sahf
es
and
lret
in
scas
loop
mov
rcll
xchg
test
add
xlat
iret
push
mov
adc
mov
rolb
sbb
xor
dec
cmp
mov
out
sub
insb
pop
rcrb
push
hlt
sub
out
in
mov
and
test
sub
xor
adc
jnp
push
or
sub
js
in
addr16
sarl
mov
in
sbb
jo
xchg
rolb
addl
mov
nop
xor
jmp
dec
add
dec
stos
pop
call
nop
rcll
jns
or
fwait
inc
loopne
mov
lret
fcmove
mov
xlat
cwtl
push
jle
rcrb
call
clc
and
and
dec
mov
out
lret
in
cmc
mov
mov
push
nop
or
mov
stos
mov
cmp
jle
inc
jmp
lock
pop
mov
movsb
mov
sub
pop
int
push
pusha
je
ret
push
add
cmc
insl
cmpsl
adc
push
pop
adc
inc
mov
mov
and
jp
jbe
sub
pop
jnp
pop
hlt
lret
jne
iret
xor
sahf
data16
jns
jo
mov
in
mov
inc
sbb
sub
adc
imull
cwtl
adc
les
shl
xor
movsl
jns
out
jo
mov
mov
ret
xor
xchg
jno
repz
pop
in
xchg
ljmp
xchg
mov
or
sub
jns
dec
jne
imul
inc
test
ficoml
inc
jmp
mov
lahf
sti
and
cwtl
xor
movsl
jmp
push
nop
bound
mov
or
push
cwtl
aam
lock
ret
lret
inc
movb
fimull
in
mov
je
out
out
adc
mov
out
or
mov
mov
out
loopne
ljmp
inc
aas
es
iret
xor
ds
and
xor
fistl
popa
push
in
in
data16
and
jno
sbb
xchg
adc
lods
dec
nop
les
add
mov
xlat
dec
popa
mov
xor
insl
or
fistpl
xchg
xlat
jae
push
gs
lods
dec
rorb
out
in
es
xor
data16
fimuls
inc
mov
inc
inc
cmpsb
pop
lea
pop
cwtl
in
jge
loopne
adc
xchg
cmc
mov
xchg
inc
lods
sbb
push
inc
test
dec
mov
dec
orb
popa
sub
mov
push
push
jle
or
jg
pop
add
add
dec
add
add
ja
mov
jo
mov
push
fs
push
negl
lret
les
aad
loop
dec
inc
hlt
jno
xchg
and
ss
adc
or
push
push
les
lcall
orb
je
dec
repnz
ljmp
push
xor
pop
mov
ret
or
ds
pushf
int3
nop
movsl
sub
imul
ljmp
and
sbb
xchg
adc
aas
enter
xchg
call
imul
jge
es
mov
pop
lods
push
and
je,pt
xchg
ljmp
mov
pop
and
pop
jl
daa
mov
push
lcall
or
insl
jge
cmpsl
pop
jp
xchg
xchg
ds
call
and
xor
xchg
sub
push
cmc
mov
call
ljmp
nop
addl
xchg
mov
dec
and
shl
bswap
lock
lcall
stos
shlb
in
pop
inc
inc
jnp
rorl
outsl
daa
jl
mov
sbb
dec
aad
or
pop
cltd
push
test
adc
pop
jecxz
add
sti
mov
mov
data16
andb
cs
mov
xchg
scas
inc
fcoml
cs
sub
inc
mov
pushf
xorb
in
inc
mov
outsb
mov
ds
aad
cli
mov
mov
js
mov
adc
clc
push
sub
sub
outsb
xchg
or
adc
fsub
push
outsb
cmp
jg
lret
add
mov
clc
lock
add
bound
push
push
pop
mov
test
sbb
aaa
in
mov
rorb
push
mov
jno
adc
pop
sti
scas
outsb
repz
aas
shll
icebp
filds
into
sbb
sti
xor
xchg
rclb
xchg
mov
nop
cmp
jge
das
loope
jmp
mov
incl
sbb
xchg
mov
lret
cltd
mov
call
clc
jns
js
xor
jg
push
fs
fistpl
cld
and
stc
dec
call
jecxz
mov
push
daa
add
mov
xorl
lock
outsl
popa
stc
or
push
mov
fstl
sarl
pop
mov
jecxz
cmc
popf
ja
aaa
imul
cli
jno
and
in
dec
dec
mov
inc
xchg
std
xchg
daa
jno
clc
std
jb
push
adc
sub
and
xchg
push
es
adc
mov
in
xor
pop
jecxz
cmp
cmp
add
mov
scas
xchg
sbb
xchg
test
and
loopne
xor
mov
nop
add
or
movsb
jne
inc
mov
xlat
inc
jmp
fadds
mov
scas
add
call
dec
subb
mov
push
sti
fmull
sahf
cli
xchg
push
pop
add
xchg
movsb
sub
cmp
lods
sbbl
inc
xor
mull
inc
fwait
cmpsb
repnz
fbld
lea
jmp
fdivr
add
sub
lcall
push
repz
xchg
add
movsl
xlat
ss
sub
nop
xor
out
pop
sbb
xchg
jp
add
sti
out
xchg
jmp
imul
xchg
pop
add
repnz
shr
andl
cltd
mov
and
xchg
out
and
nop
call
insb
popa
test
jl
mov
push
cli
push
or
cld
add
push
pop
or
or
psubb
dec
adc
inc
cs
loop
xchg
stos
int
jle
adc
jne
lahf
out
sbb
lret
push
notl
add
xchg
sbb
into
add
pusha
shlb
mov
loop
push
fs
testb
or
shl
test
push
jmp
xchg
jp
call
inc
rcrl
jmp
pop
out
ret
cs
add
or
sbbb
mov
cld
sub
cs
int3
pusha
popf
xchg
decb
in
ljmp
xor
loope
and
icebp
test
push
stc
cmp
lds
mov
xchg
adc
in
faddl
jae
inc
jo
jmp
xor
add
and
cmp
int
jge
ret
rorb
mov
sub
xorl
leave
cli
or
or
pop
in
add
stos
pop
test
test
movsb
lcall
xchg
inc
and
mov
subb
gs
and
inc
leave
outsl
pop
adc
sahf
in
mov
mov
mov
jmp
xchg
notw
adc
push
mov
and
mov
sub
xchg
or
mov
test
jnp
popf
xor
pop
cmp
das
fadd
js
cmpsl
xorl
push
xchg
mov
lock
out
jnp
jns
adc
pusha
push
lock
ret
mov
xor
scas
rcrb
lods
xchg
push
bound
daa
hlt
aam
ljmp
inc
xchg
xorl
test
js
int
cld
or
pop
loopne
and
mov
stos
xchg
mov
mov
mov
cmp
sub
jge
pop
mov
add
les
mov
pusha
fwait
jp
mov
ret
and
lret
lea
pusha
adc
call
out
cmp
mov
mov
and
xchg
gs
push
fsubl
nop
add
push
xor
into
sti
rolb
sbb
sbb
add
jne
fwait
sub
fs
roll
push
ljmp
mov
push
cmp
jle
loopne
lds
scas
and
mov
mov
xchg
dec
aam
mov
push
jg
loopne
fs
ja
cmpsl
push
outsb
mov
cmp
incl
push
mov
iret
cmp
jge
sahf
lock
in
inc
mov
adc
cmp
or
mov
enter
sti
addr16
cmpsb
adc
and
std
push
aas
lcall
mov
rcrl
fnstsw
ds
jmp
push
stc
popa
pop
mov
fstpl
rcrb
call
xor
repnz
inc
mov
fimuls
cmpsb
adc
sub
pusha
subb
xor
push
pop
jb
popa
sti
outsb
out
scas
sbb
mov
mov
call
sub
test
in
adc
int
and
jmp
mov
fsubrl
push
push
xchg
pop
aas
mov
aad
mov
adc
adc
loope
add
push
inc
sbb
pop
or
jmp
push
mov
jo
fwait
js
sub
dec
inc
mov
sbb
arpl
call
mov
jge
cmc
cli
inc
mov
xchg
xchg
add
add
cmp
ja
and
mov
xor
xchg
push
pop
sub
popa
leave
mov
push
pop
jnp
mov
out
add
push
out
cmp
or
nop
push
dec
dec
jnp
mov
outsb
sbb
xchg
xor
pop
sub
fsubl
add
push
sbb
dec
mov
icebp
xlat
mov
jp
dec
fldlg2
subb
jl
mov
loope
out
cltd
ficoms
fnstcw
inc
mov
jecxz
movsl
ret
xor
fistpl
outsl
sbb
xor
pusha
jo
cmpsl
adc
jge
lods
shrl
and
test
stos
out
fcoml
mov
test
and
jb
jl
pop
inc
jg
adc
xor
mov
lock
ds
out
into
mov
xchg
mov
sub
cs
add
jnp
pop
mov
leave
push
adc
mov
xchg
add
dec
and
call
xchg
adc
mov
jmp
aas
push
fldcw
push
mov
outsb
das
jecxz
adc
lods
push
xor
cmc
cwtl
nop
notb
insb
aam
add
pop
insb
sub
add
or
sub
xchg
fcoml
aam
mov
mov
adcl
fxch
pop
push
and
xchg
push
fistpll
aam
and
pop
mov
shrl
clc
pop
insl
mov
dec
sub
loop
push
aaa
adc
or
lds
jne
inc
and
jo
popf
push
and
sbb
roll
mov
arpl
adc
cwtl
jle
push
mov
mov
fs
out
jno
scas
je
popa
xchg
rclb
je
stos
jne
stos
inc
int3
jnp
arpl
add
loopne
inc
ja
jmp
mov
dec
pop
inc
sub
adc
in
cltd
pop
pop
mov
or
sysret
push
or
stc
mov
shr
sbb
mov
push
jp
mov
and
cmp
jbe
push
fwait
cs
sbb
iret
imul
in
or
add
mov
fsts
cmp
dec
adc
ja
mov
loopne
mov
lods
or
ret
pop
mov
mov
dec
out
inc
pop
inc
mov
sbb
neg
scas
cltd
xchg
and
mov
out
or
js
mov
shr
jg,pt
pushf
aas
subb
push
notl
aaa
iret
add
xchg
ljmp
mov
xchg
pop
push
mov
mov
mov
addl
int3
jo
sahf
sub
mov
pop
mov
lds
sub
daa
ror
mov
in
loopne
fnstenv
stc
lahf
rcrb
sbb
mov
sbb
dec
cs
les
addl
add
sub
insb
xchg
jmp
hlt
insb
sbb
popa
push
arpl
shll
dec
int
out
addl
jb
shll
je
aaa
sbb
sbb
jl
ljmp
cmp
pop
xor
fsubrl
aad
xchg
sub
lahf
pop
push
lods
pop
mov
pop
sbb
pop
cli
rcrb
cwtl
imul
faddp
cmpsl
int
pop
jnp
jne
jle
sbb
arpl
je
loop
add
fistpl
mov
pop
decl
or
pop
jmp
inc
fld
lea
cwtl
dec
sbb
rcll
xor
push
out
push
lcall
nop
enter
mov
pop
sarl
mov
xor
es
test
ds
pop
mov
in
je
aad
sar
pop
add
sarb
mov
mov
mov
sbb
aam
les
mov
push
cmc
adc
icebp
inc
sub
bnd
stos
sbb
not
jmp
xchg
testb
sahf
jns
sub
sbb
mov
aam
sub
in
fstl
jne
lret
and
stos
or
imul
aaa
mov
add
fsts
cmp
insb
adc
gs
or
je,pt
push
push
cld
addb
rolb
jge
outsb
adc
clc
lock
and
push
push
push
notb
mov
inc
test
ja
and
es
mov
pushf
and
cmc
add
cmp
jae
pushf
lret
fiaddl
jg
int3
mov
fnstsw
ficoms
in
pop
mov
cmpsb
add
dec
xchg
sub
sbb
ret
int
arpl
sub
xchg
push
data16
mov
adc
es
mov
jns
xchg
iret
sbb
mov
jl
aam
addb
mov
lcall
adc
xchg
ss
sub
loop
pushf
sub
lret
aad
adc
and
aad
outsb
xlat
fstl
or
inc
pop
das
lds
out
dec
xchg
test
mov
sbb
sbb
xor
sub
cld
movsl
es
jae
pop
add
scas
rolb
add
or
sahf
das
xlat
push
jb
mov
pop
stos
sbb
mov
fwait
cmp
fs
scas
and
in
loope
sbb
rorb
mov
lods
cmp
rcl
add
out
xor
scas
faddp
out
scas
add
sahf
aaa
repz
shll
popa
pop
jne
cld
cli
inc
aas
push
mov
icebp
daa
les
ds
lds
inc
pop
or
dec
lret
cltd
sub
mov
pop
xchg
xchg
aad
sub
addr16
sti
or
mov
and
lock
cli
fidivrs
dec
or
lcall
leave
out
lock
stc
jb
or
movsl
int
jp
cmpsl
iret
dec
data16
nop
popa
gs
adc
and
xchg
mov
xchg
jmp
add
shld
xchg
lock
or
jne
ret
add
cmp
aad
dec
mov
xchg
bound
inc
shl
jle
iret
or
push
sub
jge
dec
cmpl
push
movsl
mov
iret
sbb
sub
cwtl
bound
loop
mov
fcom
das
sub
xchg
push
dec
add
dec
int
sbb
jp
mov
sbb
sbb
push
sbb
pop
movsl
jmp
movsl
adc
sahf
pop
or
loop
jl
in
imul
push
jns
roll
shl
mov
sahf
sbb
stos
xchg
cmc
mov
and
rclb
sub
stos
mov
ret
or
push
jns
mov
sbb
fldt
imul
push
fidivrl
mov
test
push
xchg
jae
lock
dec
mov
cltd
xchg
insl
cmp
adc
fdivl
lret
cmp
fnstsw
out
jnp
sub
push
add
je
lret
loopne
xlat
aam
mov
test
and
andl
sub
mov
mov
das
jae
mov
out
out
cs
mov
add
mov
rcr
mov
ret
cld
fcmovb
jg
jo
dec
sbb
cmpsl
mov
and
jae
jb
outsb
incl
in
shll
pop
insb
xchg
adc
out
test
aam
inc
mov
loop
jo
shlb
sbb
in
hlt
shlb
inc
addl
aam
test
pop
inc
xchg
add
sbb
popa
aaa
dec
mov
or
or
dec
int3
and
mov
rcrl
or
and
cmp
or
jge
xchg
gs
push
push
fildl
jecxz
mov
xor
cmpl
bnd
or
aad
add
xchg
mov
clc
sub
nop
or
or
imul
stos
and
call
and
jle
mov
lcall
shll
leave
imulb
rcr
dec
and
lcall
cmp
add
int
cmp
shll
push
aas
testl
cmp
push
and
or
outsl
mov
ljmp
sahf
mov
lret
cmp
into
mov
mov
add
dec
xor
daa
dec
in
sub
aam
mov
or
push
testb
shlb
xlat
mov
lret
cmpsb
popfw
jb
insl
lods
cld
inc
mov
test
inc
out
cmp
xchg
sub
jb
mov
push
mov
push
xor
lahf
push
dec
sub
or
xor
sbb
mov
sahf
in
xor
cli
add
das
cmp
add
daa
and
rolb
push
lcall
adc
je
lret
mov
push
dec
lcall
xchg
outsl
lea
arpl
nop
jl
sbb
outsl
mov
cmp
mov
mov
mov
cmp
shl
out
cmp
lods
inc
and
fcoms
call
sbb
jnp
in
stos
clc
cmp
in
jg
test
fstps
xchg
scas
sbb
js
mov
divb
cwtl
mov
je
aam
mov
out
stc
cmp
clc
and
pop
data16
andb
xchg
test
ja
xor
je
shl
in
jmp
push
sbbb
test
and
in
scas
sub
inc
jnp
int
dec
ret
dec
lea
out
sbb
into
ret
add
and
cmp
cmpsl
and
sbb
aad
adc
sub
jo
xchg
mov
es
adc
dec
ficompl
std
jnp
loope
rorl
lds
pop
out
ret
out
mov
shrd
push
cmp
push
jmp
add
xchg
lods
push
divl
jno
jmp
scas
jbe
sbb
pop
mov
les
or
stos
pusha
stos
cwtl
mov
adc
ja
lret
mov
sbb
lods
mov
imul
in
pop
ret
mov
mov
subb
xchg
push
insl
shlb
test
insl
les
inc
jne
in
or
xchg
xchg
popf
mov
addr16
sub
inc
imul
aaa
iret
adc
loope
shll
lea
and
xchg
loope
notl
mov
lods
mov
iret
xor
mov
cltd
pop
adc
push
fldcw
jecxz
cltd
fs
mov
jne
fsts
cs
inc
fmuls
jecxz
inc
gs
dec
mov
scas
into
mov
xchg
pop
mov
mov
xor
xor
xchg
cmc
push
push
sbb
test
mov
inc
mov
into
mov
stos
repz
aad
loope
fldcw
pop
add
mov
or
pop
lock
pop
lret
addr16
ret
jl
or
bound
mov
jg
repnz
push
fimull
pop
lock
lahf
mov
in
std
nop
pushf
scas
test
sbb
cmpsl
rcr
shlb
out
shlb
sub
mov
inc
add
pop
xor
mov
cwtl
rolb
data16
cmc
cs
lods
pop
aas
add
mov
arpl
aas
adc
jne
clc
and
mov
sub
pop
mov
mov
cmp
out
ja
mov
loopne
jg
dec
arpl
push
dec
in
xchg
push
xor
insl
dec
dec
movsb
lea
jb
pushf
xorb
pop
enter
gs
lcall
out
push
test
xor
xor
es
fstp
shlb
cltd
sbb
iret
xchg
mov
cmp
mov
mov
pop
in
fcoms
dec
mov
sbb
out
pop
mov
jl
stos
or
mov
data16
dec
cmp
mov
aad
pop
xor
adc
arpl
cwtl
xchg
pushf
adc
and
dec
stos
in
pop
inc
orb
daa
push
ret
or
out
adc
shrb
jg
fs
cmp
jnp
lahf
cltd
pushf
add
iret
push
in
cmpsl
sbb
cmp
js
insl
xor
outsb
push
dec
dec
push
sar
lcall
stc
and
inc
jp
int
or
cmp
push
lret
cmp
xchg
les
add
push
lahf
xor
insb
ss
xor
mov
in
aaa
aas
xor
sub
stos
mov
inc
pop
test
fbstp
mov
dec
cmp
adc
mov
outsb
pop
bound
pop
stos
and
and
dec
mov
jnp
cmp
mov
fldt
mov
rorb
add
cmpsb
adcb
jg
push
mov
movsb
mov
mov
push
add
testl
arpl
aad
jl
add
mov
mov
arpl
loopne
and
sbb
sub
fidivs
cmp
stc
inc
add
and
repz
loope
jl
sbbl
es
pop
cmp
add
std
xchg
mov
imul
aaa
shrl
inc
dec
inc
mov
xchg
imul
loope
mov
fs
ss
add
clc
push
jo
pushf
ja
adc
add
pop
sbb
pop
arpl
pushf
adc
lock
mov
lret
out
jns
loope
bound
ficomps
cmp
cmp
je
ja
jle
and
js
pop
pop
bound
ficompl
stos
sbb
pop
imul
stos
insb
call
jp
shl
sbb
mov
and
mov
in
jb
or
call
inc
or
enter
jl
mov
hlt
inc
add
mull
xchg
ret
insb
push
sub
xor
icebp
sbb
jns
loope
xchg
push
mov
mov
fists
sbb
sbb
sbb
xor
jne
mov
mov
inc
cmp
jbe
pusha
push
mov
mov
sbb
sub
jno
ficompl
ss
push
nop
jb
push
gs
sbb
clc
sbb
mov
test
lea
cld
and
cmp
jbe
pop
fucomip
jecxz
jno
dec
gs
lds
dec
or
lea
leave
ss
aad
lods
test
stc
xchg
adc
sbb
adc
pop
lods
in
std
adc
mov
jle
mov
daa
es
sub
in
push
sbb
jge
fildl
mov
movsl
shlb
rcrb
ret
sub
sarb
inc
mov
cli
dec
sub
popf
fstps
pop
out
pop
outsl
push
idivl
jno
lahf
sbb
test
or
cltd
lahf
adc
push
pop
add
xchg
or
jo
aad
jge
outsl
ficoml
cld
outsl
sub
mov
es
fisubs
ds
mov
xchg
mov
fistps
cltd
fs
in
push
fsubrs
xorb
ficoms
or
bound
xchg
ss
pop
mov
popa
lret
cmp
lahf
scas
cmp
and
call
inc
loopne
inc
add
aad
lahf
mov
shl
sub
and
or
scas
cmpsl
fwait
aas
xor
lcall
mov
xlat
stos
cmpsb
pop
jge
ret
add
add
loopne
or
in
and
mov
dec
rorl
lahf
in
cmp
call
and
nop
rorl
xchg
mov
jle
fdivrs
lcall
inc
shrb
pop
push
or
out
sbb
subb
mov
fcoms
jb
nop
adcb
xor
insb
addr16
pusha
mov
cmp
sbb
cmp
or
daa
or
out
push
fisubrl
cmp
dec
jb
cwtl
cmpsb
push
or
testl
sub
lods
ss
adc
mov
enter
sbb
daa
into
subl
stc
fs
sbb
lret
jno
push
push
jno
dec
lock
into
xor
and
and
dec
pop
sub
jmp
dec
aaa
or
lods
or
sub
rcrl
lahf
xlat
daa
jnp
fadd
lret
imul
jno
or
loop
xor
lock
inc
inc
cwtl
jae
xor
pushl
push
or
sub
jle
ljmp
aas
pop
pop
push
push
enter
imul
cwtl
enter
push
cmp
xchg
xlat
cmp
mov
repnz
sbb
ret
sub
sbb
pop
and
daa
outsl
sbb
jge
cmpsb
mov
push
inc
mov
xor
xchg
jecxz
add
fwait
scas
inc
mov
adc
mov
in
adc
or
or
cld
imul
je
push
lds
add
pusha
cmc
xchg
sbb
sahf
jno
enterw
xor
pop
imul
fucomip
scas
xchg
jle
cli
fldenv
in
data16
shlb
xchg
pop
mov
mov
mov
imul
xor
push
mov
or
and
leave
imul
std
jb
out
mov
jp
or
inc
fwait
hlt
pop
sub
dec
data16
and
testb
mov
movsl
push
out
mov
aaa
sbb
sahf
inc
inc
fidivs
adc
jnp
xor
cld
xchg
ret
sbb
xchg
ficoms
xchg
cmp
loop
shr
jp
into
inc
dec
add
aas
ret
jp
in
mov
lcall
adc
test
sub
in
testl
xchg
out
push
cmpsb
mov
inc
jmp
rclb
daa
movl
push
popf
cwtl
xlat
jae
loop
ljmp
out
mov
pop
jge
push
cmp
sti
cmp
mov
ja
jg
mov
push
stc
jge
pop
jbe
in
in
dec
sub
jmp
repz
ret
ja
fisubs
movsl
lods
out
add
ds
inc
test
das
divb
sub
and
dec
popf
lods
sub
cld
lods
and
add
inc
pop
jle
js
inc
fwait
inc
notb
lock
sub
repz
push
xor
inc
xor
and
mov
ds
push
pop
cmpsl
mov
fs
dec
pop
push
xchg
leave
icebp
fwait
add
scas
scas
repnz
cmc
pop
movsb
dec
or
cmp
aad
add
adc
int
cmc
add
mov
arpl
or
add
lock
mov
shl
scas
sub
pop
jmp
and
test
add
adc
mov
pop
push
loope
notb
sub
mov
mov
iret
vorps
jbe
pop
sub
push
ret
cmp
arpl
push
mov
out
jo
das
add
fcoml
inc
adc
push
cld
lods
jne
test
fisubrl
xchg
popf
data16
pusha
sbb
test
mov
loopne
xor
cmp
imul
xchg
addb
jne
xchg
ja
and
outsb
or
adc
test
in
adc
pop
je
loope
jge
cs
rclb
cmpsb
push
movsb
mov
adc
sbb
arpl
mov
iret
rcrl
aaa
push
jno
adc
nop
jae
and
enter
aas
jmp
in
inc
fwait
jnp
ss
mov
inc
xchg
mov
cmp
jns
std
mov
push
enter
into
sub
sub
xchg
sbbl
int3
lea
xchg
or
and
push
ud0
jecxz
xor
pop
add
lcall
pop
jbe
mov
loope
mov
xchg
push
pop
test
lock
nop
push
inc
test
lods
mov
jb
mov
cld
push
or
dec
mov
lds
les
and
aam
sti
cmp
lret
aas
inc
mov
insb
push
out
fimuls
incb
add
jo
clc
add
inc
jle
adc
ror
mov
sub
insl
mov
cmc
movl
xchg
rcrl
sub
shrb
mov
sub
sbb
mov
mov
ret
mov
mov
mov
scas
int3
jp
adc
std
lods
jb
fisttps
jbe
jge
cmp
imul
test
push
dec
mov
mov
ja
sar
sti
js
popf
aam
jns
inc
mov
rclb
in
out
dec
call
call
mov
sub
cmpsl
pop
sbb
pop
cmp
dec
sbb
loope
dec
sub
test
pop
cmp
pusha
mov
aam
lock
mov
ss
dec
or
or
int
imul
jp
push
push
mov
jbe
lret
cld
ffree
jne
loopne
ja
sbb
call
jb
xor
xor
jl
dec
fbstp
jecxz
std
pop
out
mov
lock
inc
sbb
push
mov
add
cmc
lret
test
pop
popa
into
adc
inc
jnp
mov
xlat
jge
push
xorb
fs
shlb
test
fildl
sub
inc
xor
shlb
xchg
subb
push
pushf
inc
insb
adc
test
and
mov
dec
pop
push
mov
sbb
mov
pop
push
mov
in
jmp
leave
adc
jns
jae
es
enter
add
shrb
cld
mov
ror
into
fcoml
pop
in
mov
jo
mov
and
sub
das
dec
sub
repz
mov
andl
add
shlb
lret
pusha
and
jne
xor
faddl
sti
pop
out
rcl
xor
lods
push
lret
lcall
das
xchg
push
sub
pop
mov
sar
and
inc
addr16
pop
cmp
lock
xor
mov
out
mov
testl
fs
mov
push
and
pop
push
call
out
scas
sub
xor
or
jo
mov
push
inc
out
push
mov
int3
or
pop
dec
cmp
lret
stc
shlb
lods
cmp
out
jne
xchg
test
rcl
aam
ret
int
xchg
cmp
shlb
jmp
hlt
sbb
push
inc
iret
repnz
or
push
in
mov
loop
shlb
arpl
and
lahf
mov
cmp
testb
fistps
add
aam
xchg
xor
push
push
clc
add
mov
xor
ret
fildll
addl
fst
add
je
cli
xchg
mov
cmp
lea
movb
push
push
sbb
mov
jge
daa
movsl
cmp
lret
xor
xchg
mov
mov
jmp
cmp
shlb
mov
pop
pop
cmpsl
daa
add
ja
push
jle
into
ret
ret
pop
and
sti
or
pop
jp
add
mov
daa
jl
pop
dec
fistl
push
scas
mov
mov
imul
rcrb
in
mov
add
sbb
mov
mov
sub
outsl
adc
mov
cmp
das
xchg
cmc
mov
push
jle
add
adc
sti
sub
aad
adc
mov
jge
in
aad
je
lds
pop
and
inc
addr16
inc
cld
stos
lcall
pop
popa
sub
imul
add
stos
xchg
push
xchg
pop
sbb
adc
push
shlb
fwait
or
jns
stos
jno
jns
add
inc
out
mov
stos
jnp
es
xchg
push
push
and
negb
push
add
ss
mov
loop
sbb
cltd
cmp
sti
mov
cmpb
pusha
movsb
xor
push
cs
in
push
mov
adc
push
mov
and
nop
mov
mov
or
add
aas
xchg
mov
mov
daa
clc
hlt
rcrl
or
add
in
cmpsb
test
mov
inc
inc
cmpsb
das
out
lcall
cmp
push
iret
cmp
cmpsl
lea
cltd
and
aaa
inc
mov
add
popa
cmpsb
mov
push
jge
xor
inc
push
sub
imul
fmull
ds
loopne
scas
cmp
aaa
je
punpcklwd
addr16
and
test
lret
pushf
arpl
mov
jbe
sti
push
and
push
mov
add
xchg
das
js
lods
stc
dec
ror
std
addr16
cmp
mov
mov
push
xor
cltd
cmp
dec
and
inc
pop
test
or
lcall
out
and
call
jae
or
and
push
stc
xchg
fistl
mov
je
popf
enter
rcll
xchg
mov
mov
movsl
aam
test
leave
mov
and
in
add
mov
loopne
sub
lret
lea
shll
int3
sbb
xchg
das
xor
daa
in
fidivs
or
sub
mov
insl
push
mov
sub
mov
push
push
imul
jae
xchg
add
jge
and
push
gs
aam
cmpsl
pushf
add
fsubrp
sahf
push
mov
fsubrl
outsb
pop
cwtl
clc
push
dec
mov
and
push
gs
cli
out
nop
push
out
pop
pop
mov
das
mov
out
les
les
in
or
pushf
sbb
repnz
or
test
xor
imul
adc
sub
jbe
mov
shrl
push
cmp
setnp
push
jo
jmp
mov
push
jge
insl
imul
aam
pop
call
shlb
lret
ljmp
imul
and
cmovno
add
sarl
pop
movsl
stos
faddp
negb
dec
mov
outsb
je
sbb
out
imul
insb
loope,pt
mov
xor
lods
mov
dec
dec
lods
repz
mov
sbb
inc
fdivl
add
movsb
loope
xchg
mov
jno
mov
fsubrs
cmpsl
inc
popf
mov
movsb
push
push
pop
mov
and
iret
and
mov
rorl
sub
loop
xchg
pop
dec
push
cmpsb
pop
imul
subl
jmp
sbb
push
rcrl
xchg
push
dec
cld
iret
dec
add
add
incb
push
sbb
icebp
mov
fwait
outsl
repz
mulb
in
jne
lahf
jo
add
iret
xchg
lods
popa
hlt
adc
and
adc
iret
push
call
jge
xchg
adc
mov
mov
push
fiaddl
arpl
fs
in
xor
shr
dec
test
movsb
fildl
scas
ja
mov
push
enter
push
mov
xor
sbb
addb
push
pop
lock
push
lcall
jns
xor
imul
loopne
mov
xor
jnp
xchg
insb
cmp
ffreep
ljmp
cmp
and
or
test
lods
add
jne
or
daa
adc
xchg
cltd
cmp
push
inc
gs
nop
sbb
call
add
jb
push
adc
lret
jne
stc
jae
sbb
les
sbb
push
imul
push
fistpl
in
inc
mov
add
filds
adc
push
sub
ljmp
dec
dec
xor
jecxz
inc
mov
cld
jb
rcr
adc
fs
into
inc
jmp
dec
gs
mov
mulb
scas
xchg
testb
mov
inc
out
notb
loope
sub
push
mov
aaa
es
test
pop
ds
xchg
rcr
inc
ret
and
repnz
push
sbb
shl
lock
xchg
push
enter
jle
cld
faddl
cld
int
cmp
pushf
jns
out
mov
inc
mov
and
rcrb
lahf
mov
rol
cltd
stos
sbb
xor
adc
stc
lcall
fwait
stos
and
xor
fdivrs
mov
fldt
lcall
mov
push
idivl
or
push
stos
les
lret
dec
js
lahf
popf
clc
hlt
xchg
popa
xchg
fucom
lds
dec
repz
xor
xor
xchg
in
ds
sub
std
les
addr16
mov
push
mov
shlb
or
in
adc
leave
lret
mov
packssdw
nop
cwtl
push
mov
sub
jmp
or
and
sbb
addb
test
dec
mov
mov
ja
push
imul
ds
xchg
adc
sbb
mov
mov
nop
aas
ss
icebp
adc
push
cmp
lea
xchg
mov
mov
jnp
cwtl
pop
fdivr
inc
data16
add
pop
push
js
leave
add
inc
das
mov
adc
inc
sbb
in
clc
push
adc
push
shlb
xchg
adc
add
sysenter
jnp
push
faddp
inc
div
and
mov
shrb
pop
dec
imull
fdivs
push
or
mov
xor
dec
push
lahf
xor
cmc
sbb
testb
jno
loope
xchg
jl
cmp
jmp
shlb
fistpll
sbb
and
and
dec
mov
push
in
mov
inc
push
lock
cmpl
cmpsl
inc
mov
push
mov
add
int
mov
outsl
fbstp
sub
inc
xchg
xor
sbb
pop
sbb
int
mov
add
and
sub
scas
adc
sti
mov
lock
mov
mov
outsl
xor
mov
in
and
mov
fwait
lods
popf
jmp
aam
push
inc
and
ror
rclb
shlb
outsb
fists
mov
push
jne
loopne
cmpsl
out
lret
mov
push
push
cli
test
cmp
lds
into
dec
jno
add
std
adc
add
push
sub
nop
mov
cmp
pop
mov
pop
push
pop
mov
inc
pop
outsb
pop
pop
xorb
bound
in
xchg
and
pop
push
add
mov
hlt
pop
fisubl
xchg
cmp
ret
mov
pushf
mov
inc
outsl
push
mov
inc
fistpll
in
test
arpl
scas
add
sbb
jne
adc
loopne
sub
fwait
repz
subb
psubq
mov
xor
fdivr
int3
and
js
fwait
out
pusha
jne
ret
scas
ljmp
cmp
or
test
dec
mov
adc
fadd
mov
sub
out
xchg
loop
fldt
jle
sub
push
adc
mov
rcrb
negb
hlt
cmp
lock
xchg
lret
jo
push
sub
imul
shl
je
enter
sti
gs
xchg
sbb
cmp
inc
mov
fmul
pop
or
fsubrp
and
pop
add
sahf
lret
pop
cmc
mov
jge
jp
lods
clc
xor
ret
sub
outsl
jne
adc
add
fwait
enter
inc
ret
pop
xor
lea
les
pushf
lret
mov
icebp
aad
mov
jmp
call
xchg
outsl
mov
ja
daa
sbb
jo
aas
arpl
add
jmp
ret
js
mov
dec
pop
mov
xor
jno
and
fcoml
sbb
fbstp
dec
or
test
fsts
sub
and
xchg
mov
icebp
mov
bound
mov
add
xchg
gs
xor
cmp
sbb
jg
push
or
sbb
jecxz
and
ds
push
pop
push
pop
mov
pop
mov
loopne
test
push
inc
cmpsb
and
mov
test
out
dec
or
mov
pop
push
push
jbe
in
data16
ret
pusha
iret
sbbl
cld
inc
call
mov
add
ret
ret
pop
es
fidivl
neg
jbe
add
mov
xchg
adc
xchg
mov
xlat
inc
iret
xor
inc
fnsave
leave
or
mov
lcall
imul
mov
clc
inc
push
int
push
pop
or
push
pop
iret
mov
xlat
jg
sbb
jb
dec
pop
dec
nop
int
push
xchg
mov
jae
pop
sub
mov
cmp
rorb
pop
jl
cmp
pop
xor
xchg
inc
inc
cmp
in
test
or
cwtl
pop
or
test
shlb
xchg
mov
mov
mov
push
or
mov
cmp
leave
mov
fimull
mov
jbe
icebp
push
aam
fbstp
mov
xchg
push
pop
cmp
xchg
pop
sbb
test
pop
add
dec
push
jmp
mov
sbb
mov
hlt
mov
or
fcoml
mov
pop
jp
jo
xor
mov
xchg
jge
fstl
push
inc
lea
inc
xlat
mov
stos
negb
pop
fs
mov
loopne
test
jg
add
ljmp
push
shll
jecxz
cltd
adc
push
mov
push
cmp
dec
fdivrl
jle
clc
loope
jbe
inc
daa
je
vmwrite
and
push
xor
in
add
je
movsl
lods
scas
shr
test
insb
inc
fcmovne
popf
rolb
and
cmc
incl
add
sub
push
and
add
sub
push
dec
dec
jo
jp
adc
mov
mov
mov
mov
cmpsl
add
jmp
stos
rcll
and
jne
mov
mov
popa
loop
and
jp
mov
cld
xchg
lret
mov
adc
stc
mov
stc
cmc
xchg
data16
loopne
lods
dec
sbb
jae
adc
mov
sbb
int3
fimuls
mov
and
in
int
inc
inc
out
imul
icebp
fsts
out
jp
mov
lret
sub
mov
sub
mov
push
scas
test
int3
shl
push
inc
imul
pop
adcl
aaa
mov
pop
std
ret
mov
mov
shlb
imul
mov
outsl
daa
hlt
lods
in
or
fnsave
sarb
ljmp
ja
stc
adc
dec
pop
inc
imul
inc
aas
sbb
sbb
and
jo
push
rcrl
imul
lds
rcrb
addr16
or
in
cmc
ja
xor
jmp
ret
mov
popf
xor
mov
fnstsw
imul
inc
inc
lods
iret
lret
fbld
pushf
sbb
lds
cmpsb
dec
dec
cltd
rcl
fldl
sbb
push
orb
and
dec
stos
sbb
out
nop
or
lods
xorl
cmp
dec
cs
xchg
pop
pop
push
jg
aad
and
enter
insl
sub
sbb
lret
push
xchg
inc
add
cvtdq2ps
xchg
adc
jle
cmpsl
push
stos
mov
fcmovne
pop
test
imul
enter
lret
sub
cmpsb
pop
pop
sbb
lahf
inc
iret
les
adc
push
clc
sarl
dec
inc
xchg
cli
mov
xchg
adc
mov
loop
push
jp
jno
inc
or
movswl
cmc
sbb
aad
pusha
mov
int
push
fs
jno
mov
fwait
pop
add
enter
jmp
lds
outsb
sti
jb
or
call
and
xchg
jge
movsb
shl
jb
int3
adc
sub
cmp
hlt
test
cmpsb
popa
lcall
sbb
jmp
fildll
jge
push
lret
xor
shl
xor
test
xchg
adc
stc
jge
add
je
movsl
adc
inc
jns
jge
add
add
loope
adcl
jp
pop
pop
gs
mov
mov
jmp
ja
dec
lock
cmpsb
mov
stos
pop
jbe
or
add
lret
cmp
roll
xor
out
cld
adc
pop
sbb
hlt
pop
callw
jmp
fistpll
sub
pop
adc
call
sub
out
std
roll
mov
out
push
inc
nop
js
sti
push
imul
into
cs
adc
mov
pop
jl
cmpsb
or
aaa
das
es
cs
out
icebp
push
sbb
jmp
xor
lea
xchg
daa
xor
mov
inc
jg
mov
in
loop
mov
in
push
stos
stos
insl
lds
mov
pop
pand
popa
popa
test
pop
pop
xchg
mov
fcomps
lods
add
push
pop
cwtl
adc
or
lret
dec
popf
mov
or
lret
daa
sbb
fisubl
cmc
mov
mov
jno
cmp
jecxz
sub
dec
clc
iret
movsb
xor
mov
shll
jge
in
cmc
adc
ret
sub
adc
mov
sbb
clc
xor
and
push
dec
fidivl
mov
sub
xchg
ret
and
int
test
push
std
add
inc
mov
sbb
cli
daa
subb
push
mov
sub
pushf
call
sub
mov
pop
push
out
cmp
outsb
imul
pop
les
sti
push
mov
sbb
cmp
test
sub
xor
mov
xor
leave
xchg
jne
mov
lea
lds
inc
cmp
push
ret
popf
cwtl
mov
add
push
jmp
adc
inc
xchg
push
or
dec
cmp
mov
lahf
jecxz
or
das
sbb
xchg
popf
pop
dec
test
sub
scas
fwait
out
pushfw
adc
ss
mov
cmp
jne
dec
ljmp
das
dec
mov
push
clc
insb
inc
mull
mov
sub
pushf
pop
lock
shrl
adc
cmp
xor
hlt
test
imul
sbb
inc
mov
and
mov
lods
outsl
push
xor
dec
sbb
sub
sub
data16
pop
je
xchg
mov
popa
sub
sbb
lods
movsl
sub
rclb
pop
xchg
pop
popa
outsl
pop
daa
jle
cwtl
mov
fs
xchg
bound
orl
stos
and
outsl
jle
fs
xor
scas
dec
mov
cld
ret
mov
push
jae
xchg
repz
movl
cwtl
or
and
jnp
cmp
in
or
jno
sahf
and
add
pop
pop
idivb
pop
data16
cmp
sarl
in
mov
push
xchg
iret
dec
push
dec
push
push
push
ja
stc
outsl
inc
mov
sbb
cmp
data16
xchg
mov
jae
and
push
xlat
push
mov
ret
cmp
dec
hlt
add
inc
mov
repz
mov
fisttps
cmp
or
pop
or
mov
sub
mov
loopne
jl
add
mov
fnstsw
jne
fstpl
shlb
cmp
push
mov
not
xchg
into
imul
xchg
jl
fsubl
out
scas
jo
filds
jne
dec
insl
nop
lret
mov
icebp
pop
adc
add
cmpsb
xor
ja
sbb
adc
cmpsl
and
jno
cmc
and
inc
cli
lret
sub
and
es
push
out
mov
call
in
sti
arpl
push
add
adc
pop
or
fwait
sti
sahf
scas
pop
dec
scas
mov
nop
xor
int3
shll
mov
push
cs
adc
push
js
cwtl
mov
mov
out
outsl
lock
xchg
adc
popf
shl
jb
test
insl
fadd
movsb
xchg
pop
sub
adc
inc
and
adcl
sbb
dec
push
lds
mov
fiaddl
lods
mov
rcl
mov
sbb
lods
push
cwtl
sbb
in
test
cmp
fsts
mov
cli
jl
mov
cmpsb
adc
pop
add
or
or
dec
xor
aas
mov
dec
insl
and
lret
mov
pop
or
iret
inc
dec
add
popa
mov
insb
adc
lock
cltd
fwait
or
xchg
roll
xor
and
lret
push
cmp
cltd
sub
insb
out
movsl
mov
jp
push
or
jne
int3
inc
out
xchg
push
sbb
pop
mov
loopne
xchg
cli
xchg
stc
push
push
or
sbb
mov
dec
jae
pop
mov
pushf
pop
xchg
sub
and
sub
jnp
iret
mov
in
scas
sti
rorb
pushf
lret
jns
push
pusha
jge
or
pop
bound
adc
dec
push
movsb
pop
sti
adc
mov
pop
shll
sar
cld
cltd
mov
push
aam
mov
movsl
mov
and
pop
loopne
mov
in
mov
ds
mov
mov
lock
mov
add
lds
push
dec
leave
leave
fucom
gs
cmp
inc
bound
cmp
ret
gs
cmp
es
xor
hlt
mov
mov
popf
sub
leave
push
mov
shl
mov
roll
iret
sub
test
push
dec
push
lea
pop
nop
cli
mov
sarl
aad
sbb
mov
dec
jne
xchg
and
sub
addr16
push
sub
data16
insl
arpl
mov
mov
dec
ret
loopne
imul
lret
inc
shrb
rorl
mov
and
fiadds
bt
lea
mov
loope
and
lds
mov
movsb
das
push
notb
clc
or
pop
mov
andb
add
and
add
scas
outsb
stos
test
arpl
mov
popa
push
push
mov
es
or
movsb
lret
popl
shll
in
sbb
cmp
dec
push
jns
enter
outsb
xchg
pop
test
xchg
add
mov
rcrl
xor
xor
ret
pop
mov
test
scas
mov
dec
dec
dec
cmp
mov
cmc
dec
inc
sub
lret
jb
imul
pop
out
mov
and
add
lcall
cs
jecxz
out
enter
xor
cld
pushf
shlb
xchg
out
cwtl
lods
aam
gs
call
pop
jnp
movsb
lock
les
pop
out
in
xchg
jge
jge
das
rol
sub
popa
cmp
pop
enter
mov
xor
test
int3
inc
lea
mov
out
add
bound
adc
rcrb
in
mov
and
repz
lahf
mov
cmp
add
pop
push
movsl
jns
lods
xchg
sub
movb
add
imull
mov
in
test
int3
and
xchg
inc
insl
push
xor
jne
rol
imul
xchg
jns
xchg
jle
cmp
xor
push
pop
movsl
subl
sbb
repz
lock
ret
arpl
jae
andb
dec
in
test
push
xchg
clc
inc
ja
add
fstps
lods
ljmp
mov
pop
fdivr
cltd
lret
dec
jle
pop
cmp
xor
cmp
nop
mov
sbb
int
add
inc
cmp
xor
mov
mov
hlt
setno
dec
mov
scas
xor
mov
jbe
lds
cli
addr16
popf
iret
add
mov
and
sti
ss
insl
in
inc
insb
dec
mulb
mov
in
jbe
or
pop
lds
pop
pop
dec
mov
sarb
push
add
mov
or
inc
lret
loope
inc
pop
xor
pop
jp
sbbb
xor
out
rclb
mov
popa
jne
jo
rol
cmp
xor
addl
lret
gs
sbb
out
push
loopne
rorb
lock
mov
pop
sbb
jl
les
mov
out
or
out
cmpsl
ret
test
popl
int
lds
adc
push
fsubrl
and
cli
mov
dec
cwtl
add
mov
pop
lock
cmp
xchg
push
mov
push
xor
inc
cmpsb
call
hlt
ljmp
xor
sbb
jne
cli
inc
sbb
popf
sub
jne
outsl
nop
push
sub
cmp
cmp
mov
popa
mov
loope
popa
test
add
movsl
dec
je
push
mov
into
test
adc
mov
mov
mov
mov
push
or
ss
scas
jge
das
lret
lret
loopne
or
pop
pop
mov
cmp
sbb
and
jg
stos
jb
in
int
faddl
jp
mov
insb
adc
movsl
repz
movsl
jb
bound
test
jno
mov
repnz
push
clc
xchg
inc
ss
cwtl
pop
mov
pop
ret
sub
sbb
push
aas
or
cmp
xor
fcoml
inc
daa
push
cmc
jmp
push
xchg
adc
mov
push
icebp
cmpsl
xor
jge
out
shr
je
loop
dec
or
xchg
jbe
loopne
sub
push
out
imul
repnz
pop
jb
loop
ljmp
mov
and
nop
mov
bound
sub
test
lock
pop
insl
mov
jbe
test
jnp
push
bnd
shr
and
std
test
xchg
sub
ljmp
mov
cmpsb
dec
fisttpll
mov
lods
jge
test
loopne
mov
shll
rol
or
xlat
leave
inc
sbb
cmc
sub
lods
dec
pop
test
push
leave
out
dec
repnz
pop
sub
ret
cmpb
push
addr16
add
pop
sbb
xchg
cmp
and
divl
lret
pop
imul
roll
pop
loop
mov
xor
and
cmp
cmc
stos
adc
mov
arpl
stc
addb
js
call
mov
hlt
test
in
rorb
push
lea
sub
push
ret
dec
dec
imul
push
push
fnsave
push
shll
lds
out
dec
xlat
push
dec
dec
xor
lret
addr16
push
mov
ret
in
rorl
or
xchg
xchg
mov
sbb
lcall
dec
mov
cld
aad
xchg
jmp
mov
adc
pop
scas
or
popf
push
jg
bound
loopne
jmp
mov
decl
mov
xorb
aaa
stos
xchg
nop
cmp
rcrb
or
pop
imulb
mov
sub
loope
cmp
and
shlb
popl
cmpsb
fldcw
rcrl
cmp
subb
gs
mov
or
test
xchg
adc
je
insb
in
cmpsl
fidivrs
dec
addr16
hlt
mov
stc
dec
lods
out
lock
mov
pop
movsb
inc
mov
loope
outsl
push
adc
arpl
push
loopne
dec
dec
test
les
ds
xor
into
or
push
jno
xor
testl
in
pop
or
dec
lock
and
fcoms
ja
sub
mov
inc
mov
movsl
sarb
sub
jmp
cmpsb
xchg
loope
jo
loope
stos
mov
sbb
or
nop
or
push
nop
xchg
pop
and
xlat
inc
sub
mov
jns
dec
int3
add
mov
jo
mov
and
xor
stos
popf
or
shl
add
test
fwait
jno
sar
add
xchg
and
pop
mov
cmpsb
out
fbld
loope
or
and
lahf
data16
stos
fistps
int3
dec
cmpsb
sbb
xchg
dec
sar
mov
in
out
cltd
insb
jb
sahf
dec
mov
xchg
push
or
or
xchg
ds
sbb
shll
mov
xchg
sahf
push
jb
stos
mov
repz
inc
out
fcomi
outsb
mov
aam
iret
lret
daa
cmp
xchg
cmpsb
inc
in
xor
lock
pop
fldl
jns
daa
mov
out
and
mov
add
test
repnz
jns
adc
nop
cwtl
aaa
add
inc
inc
hlt
std
dec
dec
jg
mov
xor
push
movsb
xchg
jp
and
ja
pushl
jb
sar
xor
leave
sbb
ss
cld
adc
pop
dec
add
testb
stos
inc
push
pop
lahf
das
cmp
repnz
test
jl
inc
lods
jg
jg
mov
or
push
push
in
jmp
les
shlb
test
adc
xchg
idivb
pop
sub
jo
inc
cmp
push
sahf
mov
cmp
addr16
pop
xor
push
loop
jle
icebp
xor
fadds
xlat
icebp
repnz
lea
inc
cmp
outsb
scas
pop
lods
sbb
ret
pop
mov
lds
hlt
les
pop
ja
or
and
std
cltd
lret
popa
xorb
loopne
push
push
out
push
push
sub
jo
xor
xchg
xchg
dec
jo
push
stos
ja
add
jno
leave
imul
gs
icebp
in
pop
fnstcw
lcall
rcrb
or
jecxz
push
fmul
sbb
roll
pop
lods
add
test
xchg
ja
jg
sub
sub
fs
xor
cltd
movl
clc
mov
pusha
je
lahf
fsts
mov
lret
imul
popa
jne
imul
jmp
or
loopne
mov
std
inc
xchg
daa
lock
fistpll
test
fcmovbe
bound
mov
sbb
add
add
popf
mov
add
mov
icebp
lahf
xchg
ja
add
das
pusha
add
xchg
adc
pop
cmp
mov
rorl
call
mov
sub
insb
pop
push
inc
sub
in
repz
sub
xchg
sub
jge
mov
push
pop
fisubs
and
in
jmp
int3
sub
xor
xor
pop
mov
adc
clc
in
adc
fsts
mov
ja
icebp
arpl
jmp
bound
arpl
jge
adc
sbb
les
into
xor
mov
shrb
xchg
sbb
test
shll
pop
addl
xor
popl
sar
cld
inc
or
fcmovb
mov
icebp
inc
sti
out
xor
nop
jmp
sbb
cmc
fstps
mov
cld
xor
fdivrs
fmull
or
mov
cmp
movsl
loope
lret
outsl
cs
out
pop
stos
mov
xor
mov
adc
ljmp
pop
cmp
jnp
lods
addr16
and
jle
mov
and
stos
repnz
mov
lahf
bound
ror
cmpb
xchg
int3
rorb
mov
cmp
xor
je
cmp
clc
in
scas
jecxz
dec
imul
sbb
dec
mov
lds
faddl
push
divl
fadd
or
jbe
cs
inc
cmpsl
outsl
inc
push
inc
fildl
mov
int3
enter
cmp
test
add
xchg
jb
mov
xchg
je
arpl
or
fdivrs
add
xchg
outsl
sbb
xchg
mov
nop
aas
test
leave
fimuls
xchg
daa
dec
test
jae
in
mov
jge
stc
or
push
inc
or
inc
aaa
outsl
loopne
lods
mov
sub
repz
test
pusha
fsubrl
into
adc
loopne
out
shlb
dec
movsl
or
jl
icebp
inc
lea
cmpsl
adcl
lea
aas
jle
push
movsb
dec
mov
xchg
fildll
sbb
fstl
mov
dec
call
cltd
mov
or
lock
xchg
sbbb
push
pop
test
fstpl
xchg
imul
xor
in
mov
and
mov
mov
out
dec
cli
test
das
sub
dec
jle
add
xor
loop
call
pusha
push
jae
and
mov
rsqrtps
push
or
cmc
xor
push
stc
ficompl
or
pop
push
jns
ret
outsl
xor
inc
jl
or
int
test
popf
push
inc
cltd
stc
mov
xchg
in
sti
dec
enter
push
cs
adc
aad
jge
mov
sbbb
push
sbbl
insb
or
cmp
push
xchg
mov
adc
xchg
xchg
lahf
inc
outsl
icebp
sbb
fsubl
pop
aaa
push
mov
scas
stos
loope
dec
int
and
mov
sbb
pop
imul
mov
jno
inc
das
jecxz
xchg
in
loop
aam
adc
popa
idivb
or
mov
outsl
rolb
dec
mov
fwait
add
push
mov
sbb
xor
lds
std
ds
mov
push
add
lret
mov
sbb
xchg
mov
pop
int3
pop
pop
push
test
mov
ret
and
inc
push
sbb
lods
mov
mov
scas
in
adc
je
repz
cmc
mov
loop
add
or
mov
inc
jl
and
push
rolb
mov
mov
mov
add
jae
jecxz
sbb
sti
hlt
insb
dec
jae
out
mov
cmp
pop
jecxz
adc
fs
lods
xchg
mov
mov
pop
in
repz
scas
outsb
seta
cwtl
ss
sub
mov
iret
xchg
nop
jge
mov
xor
dec
lods
cli
add
pusha
into
ljmp
mov
outsb
lods
ret
das
dec
popa
mov
aaa
add
pop
jge
cmc
lcall
out
jno
push
mov
or
cltd
xor
mov
push
pop
sub
iret
dec
adc
dec
int3
call
pop
cltd
mov
sarb
out
push
mov
dec
loopne
push
jl
repnz
xlat
gs
sar
sub
add
sbb
mov
cmp
or
or
movsl
cmpsl
dec
mov
and
adc
in
ss
fsts
mov
mov
mov
xor
or
add
push
scas
jnp
mov
mov
aad
mov
sbb
repz
cmp
xor
lcall
ret
imul
js
stc
ror
mov
icebp
cmc
scas
pop
pop
cmp
mov
mov
movsl
pop
mov
fldt
mov
ja
cmp
push
scas
push
cmpsb
push
inc
fisubs
gs
out
ret
inc
add
outsb
jne
fimuls
lret
adc
adcb
mov
hlt
divb
outsb
into
mov
imul
insl
cmp
add
clc
fisttpl
ja
jl
ret
cmpl
inc
sti
aaa
or
push
mov
cld
mov
lock
pop
and
or
jo
popa
push
arpl
int
imul
mov
xchg
push
dec
jne
cltd
sub
push
cmp
inc
rcr
lds
imul
cmp
scas
lock
add
sub
mov
in
cmp
mov
mov
pop
push
and
inc
mov
stc
lret
xor
jnp
nop
cmpsl
sbbl
faddl
xchg
xor
inc
mov
loope
jg
mov
fidivrs
pushf
aaa
cwtl
push
cmp
out
lcall
jne
dec
cmp
arpl
enter
lock
push
nop
sbb
fadds
and
mov
dec
dec
inc
std
sbb
fisubs
nop
dec
cmp
mov
xlat
icebp
out
cwtl
mov
cwtl
ljmp
sub
push
cmc
sbb
pop
arpl
sub
xchg
mov
pop
mov
iret
rcrb
ret
popf
xor
fisubrs
ds
aas
cmp
imul
ljmp
xchg
rolb
sahf
test
inc
iret
in
movsl
jns
ret
xchg
inc
adc
mov
push
push
dec
push
test
pusha
push
adc
push
pop
jmp
jo
dec
repnz
fcomi
call
into
imul
inc
push
int
ficoms
repnz
int
pop
mov
xchg
sub
popf
out
inc
mov
and
or
inc
xor
pushf
jp
aas
ds
fldl
sub
movsl
and
adc
xchg
je
push
xor
mov
iret
pop
add
lods
call
fcmovu
frstor
call
xorl
cmc
mov
pop
sub
nop
call
dec
iret
ret
mov
mov
xchg
nop
ljmp
movsb
or
and
scas
mov
loop
fnstenv
jno
gs
bound
leave
pop
inc
xchg
jg
ret
addr16
mov
outsl
out
xlat
scas
xchg
fdiv
mov
mov
addr16
inc
jge
push
jb,pt
lea
sbb
pop
mov
and
movsl
mov
out
fsin
int3
push
sbb
jns
out
test
movsb
out
add
pop
pop
pop
adc
adc
sub
addr16
leave
insl
jnp
mov
add
push
pusha
fwait
mov
scas
mov
sub
cmp
inc
clc
pop
push
sub
test
or
ret
jo
js
cs
sub
outsb
sbb
stc
jge
sub
mov
hlt
cli
mov
inc
xlat
mov
mov
inc
pop
xor
leave
cwtl
cld
gs
xor
in
rclb
sbb
sub
mov
fs
int3
add
ret
popa
pop
iret
pop
imul
pop
inc
pop
jmp
pop
mov
daa
dec
mov
jmp
cmpb
push
add
mov
jg
jmp
int3
xchg
and
sbb
notl
fildl
rcl
or
out
fstl
roll
inc
into
jne
loope
sti
pop
mov
mov
fsubr
mov
xor
pop
js
dec
pop
or
stc
daa
les
sub
and
adc
jg
jmp
xchg
test
add
jo
mov
inc
andl
mov
jge
adc
mov
lret
xor
and
addl
mov
dec
insb
mov
fwait
jecxz
clc
jl
cwtl
aas
lods
jge
fdivrs
push
dec
fs
sbb
int
mov
ljmp
lahf
pop
cmp
push
cltd
push
inc
stos
push
jo
ja
cmp
sub
and
mov
mov
shl
push
jbe
xor
pusha
or
xor
jae
xorb
ret
shll
mov
rol
cmp
loope
loopne
mov
bound
jge
jbe
shrb
or
dec
pop
int
faddp
push
adc
and
dec
adc
inc
and
xchg
sarb
fs
push
fdivrs
ficoml
sbbl
jo
xor
and
inc
cmpsb
inc
mov
hlt
jne
pop
aaa
testb
ret
jnp
mov
pop
sub
call
mov
mov
fmull
sub
lock
bound
dec
jle
out
ja
fimull
mov
sbb
pop
adc
jns
pushf
test
lods
mov
mov
push
movsb
add
lds
push
call
dec
or
mov
fiaddl
arpl
insb
mov
cmp
dec
add
and
test
mov
sub
test
adc
pop
lahf
int3
aas
test
mov
inc
sub
scas
jae
fisttpl
iret
xchg
adc
out
je
push
bound
ret
popl
lds
push
and
xchg
add
data16
arpl
daa
jne
cwtl
xchg
mov
es
xor
add
fs
sti
xchg
mov
xor
push
jmp
mov
call
fimull
xchg
mov
out
ds
jns
int3
push
inc
and
dec
and
jmp
jb
hlt
inc
loope
lcall
clc
gs
dec
and
cmpsl
jae
pop
lret
rcll
inc
cmp
push
in
xchg
ss
int
repz
arpl
push
or
imul
adc
repz
mov
xor
aam
fsubl
imul
add
dec
cmp
mov
xchg
jecxz
test
int3
push
sarl
push
jl
and
sti
jbe
pop
daa
outsl
and
mov
push
mov
xor
mov
mov
xor
out
push
pop
inc
ror
lock
mov
notl
sahf
dec
fisubrs
sbb
mov
aaa
iret
ja
add
inc
sti
cltd
daa
mov
fisubrl
sbb
sbb
pop
adc
enter
xor
mov
test
lahf
cmp
cmpsl
jp
fcmovne
xchg
iret
aas
int
mov
mov
arpl
jp
jae
movsl
outsb
lock
inc
ror
lods
stos
mov
mov
flds
inc
movsl
lods
nop
cmp
scas
repz
test
push
stos
out
dec
pop
dec
inc
sbb
out
into
lea
sbbl
jecxz
dec
xchg
mull
inc
leave
negl
clc
scas
dec
test
add
cld
or
adc
fldt
add
push
or
repnz
jge
or
dec
js
shrb
lea
jnp
imul
jb
pushf
and
cld
pop
test
cmc
dec
mov
pop
pop
mov
xor
outsl
mov
jne
mov
jp
lea
mov
lcall
jge
xchg
dec
sbb
fstps
fcom
adc
dec
in
pop
dec
and
in
popa
lods
outsl
rcrb
scas
fnstcw
sub
ljmp
mov
jmp
adc
push
mov
in
mov
inc
add
pusha
aam
imull
addr16
out
xchg
pusha
lods
mov
pop
sbb
add
mov
sbb
jp
sbb
inc
sbb
or
test
aaa
daa
addr16
daa
fsubrs
ds
mov
js
stos
loopne
mov
jmp
testl
pop
inc
mov
shll
push
add
pop
push
ret
dec
scas
jge
ficoml
popf
xor
dec
pop
out
cmp
bt
mov
mov
push
aas
xor
jge
xorl
xchg
icebp
cld
sub
inc
mov
iret
pop
cmp
dec
js
out
cmc
mov
adc
push
inc
movsb
sahf
out
cmp
add
sbbb
jl
push
shll
jne
mov
lcall
popa
loop
xor
add
movsl
and
mov
notb
lods
movsb
mov
mov
dec
push
aam
lods
pop
aam
inc
std
sahf
sbb
outsb
jns
cs
imul
ss
nop
fsubl
popf
out
xchg
pop
divb
pop
wbinvd
adc
or
adc
int3
xchg
jbe
mov
pop
mov
sbb
inc
sub
push
dec
mov
insb
xor
nop
xor
andb
lock
sub
pop
arpl
sub
push
rcrw
bound
mov
mov
mov
aas
xchg
sbb
inc
dec
hlt
jle
adc
les
cwtl
mov
rclb
xor
mov
mov
pop
sbb
cmpl
movsw
dec
jge
dec
addb
jmp
test
inc
push
in
mov
mov
and
and
mov
rorl
imul
jp
lcall
icebp
and
mov
int
inc
test
add
in
sub
sub
sub
sbb
and
cmpsb
insb
push
add
dec
and
cltd
fdivs
mov
dec
repz
dec
sub
push
mov
xchg
jmp
leave
repz
jmp
pop
or
mov
test
loope
decl
fstps
jmp
mov
cmpb
out
xchg
andb
mov
push
in
jne
scas
and
ja
mov
xor
in
and
hlt
enter
inc
jb
aaa
pop
fiadds
xor
repnz
push
jns
sub
inc
dec
push
lret
jecxz
mov
cmp
sti
push
pushf
and
cld
movsl
xor
mov
int
inc
inc
mov
lods
xchg
rorb
or
mov
jne
adc
or
push
leave
outsb
push
repnz
mov
xchg
mov
pusha
in
xorb
mov
xchg
out
xchg
jnp
and
inc
fbstp
insl
sbb
jbe
jmp
nop
sahf
push
jp
insl
lahf
sti
xchg
fsubs
xchg
mov
iret
sbb
pop
scas
arpl
orl
sub
out
bound
repz
jl
push
mov
inc
lea
push
mov
inc
sub
dec
call
outsl
mov
mov
add
repz
das
jae
pop
daa
iret
test
dec
lea
scas
stos
subl
xlat
xor
aaa
xlat
repz
xchg
loope
lret
int3
push
pop
and
leave
add
cmc
sbb
xchg
insl
jp
daa
pop
sub
testb
mov
into
pmulhuw
nop
pushf
loope
rol
sti
mov
dec
xor
in
mov
je
and
push
and
xchg
fdiv
and
mov
pop
cmp
les
int
jmp
xchg
fwait
test
outsl
pop
int
sbbb
push
outsl
mov
push
clc
xchg
sti
sbb
pop
cld
les
shl
adc
xor
nop
cltd
test
push
inc
popa
jge
pop
fidivl
ljmp
pop
adcb
outsl
icebp
faddl
sub
and
aad
aas
loope
cmp
pop
cmp
pop
inc
adc
or
mov
imul
and
fwait
pop
jge
int3
pop
cmp
mov
jne
mov
jns
hlt
and
cmc
inc
and
or
jo
mov
hlt
repnz
stos
fcmovnbe
test
sahf
outsb
xor
hlt
inc
jmp
rolb
in
sti
in
inc
push
scas
mov
xor
xor
xchg
cmpsl
in
out
xchg
lahf
repnz
jns
shlb
cmp
push
loop
and
cmpsb
int
fs
cmp
xchg
shl
jge
push
scas
jo
pop
sbb
imul
ds
in
popa
jae
sbb
out
push
call
xchg
mov
lea
test
or
sub
fistps
pop
cmpsl
loopne
inc
ljmp
cld
mov
popf
pop
bound
cld
ficoml
add
mov
push
repnz
push
orl
scas
mov
pop
pop
sbb
pop
push
lds
xchg
in
cld
add
jmp
fiadds
mov
pop
dec
mov
hlt
in
iret
imul
xor
adc
fisttpll
ds
or
jae
xor
add
mov
xchg
movsl
inc
xor
addl
insl
push
mov
xchg
int3
add
xchg
test
mov
cmc
mov
nop
xlat
data16
insl
subl
jl
scas
push
add
adc
dec
sbb
xchg
icebp
or
lahf
gs
push
ja
adc
mov
xchg
adc
adc
mov
scas
xchg
xchg
pop
imul
into
mov
leave
test
ret
sub
div
ja
push
jg
or
or
dec
dec
inc
xor
push
nop
dec
inc
jle
xchg
cmc
mov
pushf
pop
push
pop
and
jge
xor
jne
jg
hlt
inc
pop
push
pop
add
and
negb
sar
ja
or
popa
and
dec
mov
mov
cmp
jnp
stos
xchg
push
mov
das
test
adc
cmc
add
clc
jne
fmull
outsl
lods
jmp
jnp
push
int3
aas
dec
xchg
fnstenv
cmc
test
xchg
and
sub
xor
imul
test
fidivrs
add
mov
push
adc
lods
mov
jl
sahf
dec
fldt
xchg
rcrb
push
mov
mov
sub
js
cmp
fidivrl
pop
inc
cld
stos
aam
xlat
add
sti
jg
jmp
mov
bound
mov
jb
pop
dec
push
push
cltd
shlb
popa
jns
sub
outsl
inc
jnp
xchg
int3
mov
xchg
sub
jmp
in
outsl
lahf
xor
sbb
loopne
and
test
cwtl
jl
fisubrs
in
mov
mov
popf
test
das
nop
and
jae
idivb
outsb
call
sub
mov
inc
and
cmpsb
mov
out
lods
inc
pop
dec
jnp
mov
insl
int
orb
imul
xor
mov
loop
xchg
popa
mov
dec
aas
daa
dec
or
xchg
push
jle
sub
popl
push
mov
xor
xchg
popf
jnp
push
xchg
in
sti
shl
stc
sti
je
in
sub
add
enter
imul
xchg
sbb
dec
mov
lods
xchg
add
xor
push
pop
mov
mov
mov
add
cmc
dec
popf
pop
in
mov
stc
push
repnz
out
fs
iret
ss
xor
stos
push
dec
out
clc
push
mov
sbb
cmp
fcompl
push
filds
addl
iret
scas
inc
add
mov
je
das
cmpsb
mov
xchg
sbb
xor
push
ret
sbbb
fwait
pop
clc
shlb
idivb
inc
cmp
sub
mov
int
idiv
mov
pop
cmpsb
lock
jae
push
jnp
jmp
xchg
jb
xchg
inc
repnz
arpl
jno
adc
sbb
xchg
pop
inc
mov
cmp
repnz
stc
cmp
fimull
popf
mov
icebp
or
shll
jns
insb
mov
lods
add
pop
shll
cwtl
xor
out
jg
popa
mov
or
and
jge
outsb
xchg
cli
ret
daa
sub
mov
cmp
ja
cmp
stos
mov
dec
push
add
aad
dec
insl
je
push
inc
inc
pcmpgtb
sub
sbb
mov
add
xor
and
insb
cmp
call
sbb
inc
mov
outsl
pop
adc
jb
fs
lock
aam
xor
add
mov
mov
in
jecxz
lcall
stos
dec
pop
outsl
sbb
dec
mov
xchg
and
push
mov
pop
cmpsl
faddl
mov
xor
pop
das
push
xor
mov
cmp
cmpsb
mov
mov
cmp
pop
push
test
int3
test
iret
mov
lcall
sbb
mov
inc
iret
mov
lods
or
cli
inc
loop
xlat
jb
fcomps
pusha
in
mov
pop
adc
loop
and
fsubl
add
sarb
test
daa
lcall
jae
sahf
xlat
stos
call
push
sbbl
pop
cmpsb
adc
and
loopne
pop
clc
sub
and
incl
push
std
leave
fisttps
out
iret
ljmp
sbb
jno
jae
in
inc
lret
out
push
push
cmp
int
mov
and
xchg
popa
dec
cltd
insb
adc
cmpsb
and
push
mov
xchg
mov
mov
or
xchg
push
aad
sbb
and
and
lods
dec
das
sub
dec
andb
push
cs
mov
popa
lds
cmpb
pop
xchg
dec
mov
jle
les
fidivl
aam
lods
dec
mov
test
xor
mov
xchg
sbb
mull
test
inc
jecxz
push
cmp
gs
mov
sbb
sub
pop
fstl
or
mov
loope
jbe
je
popa
mov
out
mov
in
js
cs
xor
xchg
bound
inc
jne
mov
push
cs
into
add
sub
sbb
aam
pop
cld
pushl
or
add
push
icebp
jnp
pusha
popl
mov
call
or
jecxz
mov
inc
scas
mull
testl
and
inc
int
negl
cwtl
push
in
stos
xor
in
andl
es
fsub
ja
bound
movsb
lods
test
out
adc
mov
nop
sub
aaa
out
jns
xchg
pop
rolb
inc
in
mov
sub
test
push
rcll
mov
das
sbb
mov
jge
das
test
imul
sub
sub
dec
jp
mov
pop
add
adc
icebp
push
mov
stc
mov
xchg
pop
imul
aaa
jno
xchg
jns
xchg
mov
int
pop
dec
shlb
and
xchg
mov
rcrb
xchg
movsl
push
jae
or
mov
jns
gs
mov
pop
mov
loop
adc
cmp
sbb
dec
sbb
lods
sub
mov
dec
bound
jge
jae
dec
mov
push
lahf
loopne
repz
movsl
data16
push
add
mov
sub
imul
rcl
and
or
jmp
leave
push
scas
jle
es
out
rol
inc
xchg
mov
outsb
pop
mov
stc
xor
mov
cmc
pop
repz
inc
in
pop
sub
loope
outsb
cmpsl
adc
sbb
cli
lahf
cmp
ss
pop
ret
pop
pop
mov
insb
dec
xor
xchg
sub
push
ds
jne
out
inc
jns
ljmp
or
xchg
pop
aas
addr16
pop
cmpsl
psubsw
int
aad
push
hlt
mov
mov
adc
and
mov
inc
adc
ret
repnz
mov
call
js
dec
out
fcom
negb
and
pop
pusha
sub
and
mov
sub
xchg
sbb
jp
jmp
sub
pop
lret
outsb
pop
ficomps
mov
pop
mov
jp
mov
push
xchg
xchg
loope
outsl
jle
hlt
fs
jbe
dec
es
fnstsw
xor
rcrb
xchg
push
dec
mov
sahf
lods
pop
adc
cmp
push
inc
loope
imul
sub
loope
sti
lds
cmp
lods
popf
push
xor
ffreep
sbb
inc
push
jp
xchg
and
dec
xchg
in
lods
fs
mov
aaa
cs
mov
pop
scas
shrb
jae
das
cmc
jo
js
cmp
lret
fisubrs
mov
mov
jle,pt
jecxz
int
js
inc
aam
scas
out
iret
add
add
push
roll
test
inc
jo
mov
shll
xor
mov
or
xor
loop
test
xchg
lahf
scas
sub
lret
enter
mov
push
pop
fwait
mov
mov
out
fcmovne
mov
jbe
scas
mov
xlat
xchg
popa
rep
je
js
mov
out
in
mov
out
sbb
inc
out
pop
pop
jl
pop
call
idivl
pushf
cmp
lea
callw
leave
push
mov
push
lahf
mov
sar
mov
cld
movsl
std
mov
outsb
icebp
mov
inc
mov
pop
out
mov
das
add
pop
movsl
or
jl
mov
dec
push
in
jb
or
mov
lcall
fnstenv
xor
fldl
cmpsl
inc
mov
pushf
push
outsl
lds
jl
xchg
mov
pop
adc
xchg
cs
push
pop
mov
dec
insl
xchg
cmp
fimull
out
dec
jnp
clc
inc
into
out
call
sbb
mov
add
scas
push
rcr
fadd
je
jl
add
rolb
mov
add
add
dec
imul
xchg
pop
jae
nop
inc
lea
imul
mov
sbb
and
mov
out
js
imul
jns
jo
push
inc
insl
mov
lods
ljmp
iret
mov
insb
fidivl
xchg
sbb
popa
jle
adc
lret
inc
dec
jns
rolb
lret
sub
cmp
aaa
cmpsl
push
rcr
insb
xchg
add
mov
shll
bound
iret
cmp
jge
push
lret
insl
xchg
xchg
jp
leave
jae
test
rorb
fwait
add
aas
popa
adc
pop
mov
cltd
mov
dec
imul
pusha
dec
repz
jecxz
pop
pop
fxch
adc
cld
int
aas
dec
out
xchg
lock
adc
mov
xor
cmp
adc
inc
ja
fcmovbe
rcrl
xor
mov
adc
ret
imul
pusha
cld
mov
push
jnp
mov
dec
lea
mov
dec
fidivs
bnd
fwait
test
jmp
xor
inc
adc
and
shlb
clc
inc
lahf
push
lret
push
and
icebp
roll
mov
arpl
in
insl
fcoml
arpl
inc
mov
and
xchg
and
and
lds
xor
and
cmp
faddl
adc
insl
ret
flds
popf
jne
out
add
int
lods
lods
scas
xor
loopne
mov
pop
iret
cltd
pop
js
es
sbb
ds
jecxz
and
push
hlt
cwtd
ficoml
aaa
dec
lds
push
int
cmp
xor
xor
jae
mov
arpl
das
leave
sarb
xchg
mov
aam
aam
mov
pop
dec
cmp
out
xchg
push
loope
add
mov
mov
fsubp
ss
lahf
jmp
pop
add
cli
mov
call
in
xorl
sti
cld
sub
and
mov
popa
push
cld
lock
fdivrs
mov
ss
out
push
aaa
movsl
mov
push
fwait
lds
mov
inc
data16
mov
mov
test
inc
jge
pushl
mulb
push
jb
iret
xchg
in
je
mov
cmp
cld
mov
in
jno
and
inc
cmpsl
in
ficoms
xchg
jb
icebp
aas
dec
pushf
ja
lea
mov
bound
out
add
jg
aaa
repz
xchg
pop
mov
push
ja
cmc
inc
fisubs
lcall
lret
pop
lcall
pop
nop
out
adc
aaa
mov
dec
cmp
cmpsl
adc
out
pop
movsb
sbb
xor
out
rorl
jmpw
les
out
fistpll
jbe
and
jae
ret
std
mov
in
sarb
pop
xchg
bound
gs
dec
inc
mov
sbb
pop
or
mov
inc
xlat
sti
ja
jnp
loopne
imul
nop
inc
dec
fdivr
mov
cmp
pop
push
lahf
jge
hlt
add
in
jnp
rclb
adc
aad
mov
or
in
scas
ret
imul
arpl
inc
add
cmpsb
inc
fcmovbe
scas
sbb
sti
es
aas
cli
mov
xlat
inc
popa
in
adc
mov
jg,pt
lock
sbb
jl
and
sbb
xchg
xchg
pop
adcb
mov
cmp
les
fsubrp
add
jo
call
imul
inc
jne
and
cmp
popa
fucomi
out
and
lcall
sar
fcom
loop
and
out
push
fildll
aaa
mov
mov
cmp
mov
repz
outsl
repnz
or
ror
cld
lock
dec
mov
inc
xchg
shrb
inc
pop
in
pusha
add
or
sahf
push
iret
dec
jns
je
daa
cmp
push
jno
lea
adc
fdivrs
cmp
push
and
cmp
xor
das
stos
fstl
push
inc
out
sbb
mov
out
fstpl
adc
jne
ret
dec
pop
fwait
call
xchg
xor
outsl
je
gs
clc
outsl
dec
pop
es
aam
mov
and
lcall
es
sbb
push
pop
inc
gs
xor
xor
pop
dec
push
ret
stc
push
cmp
repnz
rolb
cwtl
int3
lods
out
pop
cmp
add
out
aas
jle
pushf
jp
arpl
addr16
sbbb
pop
and
sub
addr16
pop
fcomps
idivl
add
and
lea
add
into
repz
dec
push
pop
addr16
inc
shll
dec
jecxz
push
ret
movw
xor
pop
mov
and
daa
and
xchg
out
cmp
xchg
lret
aam
mov
mov
lds
pop
mov
mov
push
adc
fisubrl
dec
sub
push
aad
push
inc
and
mov
sub
sbb
adc
sbb
pop
es
add
fstpl
mov
repnz
enter
imul
mov
inc
fistpl
insl
dec
mov
roll
test
or
or
add
mov
xlat
dec
shll
dec
ret
mov
in
sbb
and
pop
cmp
xchg
mov
lret
mov
push
sbb
cmp
cmp
lods
jae
mov
test
jmp
in
cmp
add
out
stos
lds
dec
inc
pop
mov
sub
in
dec
jle
jo
outsb
mov
aam
shll
lcall
ss
add
in
pop
ja
jmp
es
sbb
cmpsl
out
mov
repnz
pop
mov
jge
mov
int
rcll
sbb
into
mov
dec
mov
lds
jo
jnp
mov
bound
dec
icebp
jmp
shrl
loope
dec
dec
jo
xchg
fsubrs
adc
sbb
loope
xchg
iret
sahf
loopne
or
mov
mov
push
adc
adc
ljmp
xor
inc
sub
repz
sbb
add
mov
loope
jl
adc
inc
or
popf
ficoms
adc
xchg
or
sti
aas
fwait
add
jecxz
jmp
shlb
fs
shrl
popf
add
insl
or
ds
enter
stc
add
out
subb
cmp
cs
pop
mov
pop
outsl
inc
push
xchg
or
sti
mov
cs
pop
dec
xor
jae
xchg
stos
sbb
inc
fcomps
adc
and
inc
sahf
inc
out
call
cwtl
xor
in
test
nop
ret
aad
fcomps
pop
scas
jecxz,pt
push
idivl
ljmp
in
out
jmp
push
cmp
lret
je
arpl
iret
cltd
iret
mov
hlt
sub
dec
and
stc
fimull
mov
adc
fs
in
xor
dec
scas
outsb
cltd
pop
xor
int3
add
out
mov
std
icebp
add
sbb
shll
cld
mov
mov
lret
and
sarl
mov
test
push
popf
jmp
or
adc
mov
mov
cli
dec
imul
nop
lea
dec
xlat
pop
das
xor
jl
pop
inc
sahf
outsb
into
xor
jns
pop
shrb
mov
jns
dec
iret
or
std
jae
faddl
fstpl
mov
int3
xor
pushf
sub
mov
mov
pusha
cld
push
outsb
subl
inc
cmc
shll
aaa
cs
add
sub
cmp
xchg
jp
mov
pop
movsb
aam
sahf
mov
mov
adcl
popa
pusha
stc
js
call
add
add
sbb
xchg
rcrb
sub
cmp
xor
nop
inc
cs
lcall
mov
jp
inc
xor
pop
ss
popaw
pop
or
aam
addr16
adc
xchg
popf
inc
xor
or
sahf
icebp
std
popf
and
or
mov
lret
mov
jo
inc
inc
pusha
lods
mov
jae
and
push
pinsrw
outsb
imul
lret
loop
inc
jle
sbb
insb
gs
leave
cmp
mov
mov
icebp
pop
or
xchg
jb
imul
xor
sbb
loopne
cmp
and
test
repnz
bound
sbb
push
fidivl
int
mov
aas
fidivrl
mov
ds
jo
jge
cmp
inc
and
data16
fistpl
aas
fildl
adc
xchg
inc
std
push
push
icebp
mov
or
popl
enter
sbbl
in
sbb
mov
xor
inc
push
scas
cmp
test
xchg
scas
jb
andb
pop
sbb
in
aam
pop
popl
dec
xchg
das
pop
inc
hlt
aaa
sub
jge
divb
and
mov
fisttpl
shrb
add
jg
das
das
loop
enter
dec
sbb
dec
add
movsl
das
jne
fsts
sub
inc
std
sbb
fs
xor
les
add
jge
insb
test
insb
int
xchg
dec
loop
enter
lods
lcall
push
sub
jmp
xor
push
jmp
inc
add
mov
adc
out
mov
imul
lcall
faddl
repnz
je
je
add
fbld
inc
int3
stc
add
mov
mov
out
movsb
loope
dec
mov
cmpsl
in
mov
ret
or
mov
pop
into
aaa
into
mov
add
push
orl
xchg
inc
mov
xchg
mov
popa
popa
cmp
lahf
mov
jno
xchg
test
pop
add
js
or
out
out
inc
mov
pusha
pop
xor
scas
imul
push
mov
cwtl
movsl
enter
jo
sub
or
movsb
or
fstl
outsl
test
fwait
mov
cmp
fisttpll
lock
test
out
test
adc
stc
dec
xchg
icebp
inc
inc
and
push
ret
jl
fcmovu
lods
and
cmp
enter
dec
lahf
or
lret
inc
push
sub
shlb
xchg
es
jl
subl
and
and
std
test
shll
push
mov
xchg
inc
dec
xchg
jl
in
mov
push
stc
jne
xor
mov
xchg
icebp
mov
or
inc
sub
xchg
sbb
xchg
jbe
xchg
nop
sbb
pop
mov
xor
push
xorl
dec
add
mov
inc
inc
cmp
aaa
das
pop
repz
mov
mov
shll
inc
pmaxub
clc
call
rorb
leave
movsb
mov
sub
stos
xorl
xchg
ret
int
mov
sub
int
je
inc
repz
aaa
mov
add
fidivrl
xor
pop
aam
stc
and
jb
lcall
dec
pop
push
jl
pop
cwtl
dec
popf
icebp
sbb
mov
out
or
sti
dec
jg
or
push
push
int3
stos
mov
mov
adc
jnp
add
dec
fdivrl
je
push
orl
ss
imul
lock
cli
xchg
sbb
jnp
ffree
cmpsb
sub
testl
sbb
push
iret
orl
aas
mov
into
jb
push
notb
cwtl
sbb
inc
rclb
inc
push
adc
inc
js
aaa
sbb
popf
sti
xor
sbbl
call
mov
inc
repnz
ror
dec
shrl
idivb
inc
ljmp
mov
mov
xor
jp
je
or
je
sub
add
xorb
jb
aas
and
gs
pop
adc
fldcw
xchg
push
cltd
dec
jne
ror
fsubrp
cmpsb
and
cmp
pop
rol
xor
push
push
in
int3
or
enter
cmpsl
into
inc
dec
ja
fs
aam
xor
int3
cmp
mov
cmp
mov
mov
ror
pop
mov
xchg
push
cmp
adc
xor
add
push
std
xor
fbstp
jle
sub
call
mov
adc
cmp
push
movmskps
movsl
cmp
out
push
inc
add
or
mov
add
shrb
movsl
stos
mov
out
cltd
cmp
bnd
lds
push
lock
xchg
loopne
or
add
ss
out
adc
pop
or
push
lea
and
inc
pop
mov
out
out
xor
test
pop
inc
sbb
dec
stc
push
or
loopne
xchg
in
push
test
aas
and
or
enter
xor
jmp
add
dec
in
push
xchg
sub
mov
in
scas
adc
loope
stos
loope
cmpsl
rorl
mov
mov
lock
pop
or
mov
int
ret
fdivrl
cmp
stc
sub
push
lock
push
adc
jle
jo
mov
jl
fimuls
fcmovnu
fcompl
push
pop
jnp
pop
mov
jl
jo
fcompp
or
xor
sbb
sbb
mov
and
dec
push
pusha
jb
imul
pop
jns
inc
or
push
fdiv
std
cltd
dec
xchg
repz
and
lods
mov
mov
pushf
out
rol
cmc
adc
lret
inc
mull
fisttps
pop
xchg
popf
mov
sbb
icebp
rcrl
sbb
fnstenv
jne
mov
iret
inc
sbb
xchg
outsb
sarb
or
clc
cmpsl
call
inc
aas
xor
inc
push
rclb
dec
push
cmpsl
sub
popa
jmp
xor
sub
es
frstor
scas
std
repz
xchg
mov
add
pcmpeqb
faddl
mov
xor
mov
rolb
add
push
lods
adc
mov
adc
loopne
movsb
outsb
mov
pop
negl
or
popf
cli
jno
xor
pop
aaa
xor
test
cmp
pop
xchg
sub
inc
mov
bound
out
inc
lret
push
xchg
mov
loope
ljmp
repz
nop
push
dec
fwait
inc
adc
and
hlt
sub
jecxz
mov
les
inc
pop
and
into
xor
mov
cmp
test
push
imulb
lock
loopne
test
mov
popa
jno
mov
cld
push
mov
lahf
xlat
push
ficoml
in
clc
or
sahf
mov
push
daa
test
cs
xchg
mov
hlt
push
mov
out
mov
xchg
mov
xchg
push
mov
and
scas
into
into
mul
mov
rcr
pop
jno
inc
pcmpeqw
push
mov
cmpsb
add
cmp
test
xor
pop
mov
sub
scas
sub
and
cmp
dec
xchg
jns
xor
iret
mov
cmpsl
mov
sub
sub
push
and
adc
jp
inc
and
imul
push
xchg
iret
ss
insl
sub
insb
mov
dec
xchg
xorl
sbb
pop
or
push
in
sub
inc
mov
jbe
xor
in
pop
mov
mov
jo
adc
adc
lds
mov
fcomps
aad
dec
inc
jne
mov
inc
cmp
and
dec
shr
push
imul
cli
mov
imul
push
add
lret
lea
mov
add
inc
adc
pop
jae
std
xor
popa
pop
sbb
stos
fiaddl
push
insb
cmpsb
cli
mov
cmpsb
mov
mov
mov
int3
cmp
in
repnz
adc
andl
push
dec
clc
adc
popf
les
jmp
cli
popa
cltd
dec
outsb
pop
and
imul
jl
ret
stos
mov
test
imul
cwtl
mov
push
ja
out
loopne
fnstsw
fadds
fdivrs
mov
add
loop
xchg
xor
push
scas
sub
pop
shlb
xchg
scas
pop
add
push
jmp
repz
xor
loop
out
fmull
xchg
add
pop
cmpsl
movsb
imul
adc
clc
shrb
push
sub
jle
loope
movsl
dec
sbbb
or
push
fimull
cmp
mov
lret
rcr
cmp
je,pn
pop
bound
sub
cmp
pop
loopne
xchg
xchg
aaa
enter
dec
cltd
outsl
xchg
jns
pop
mov
adc
mov
ffreep
jge
sub
in
hlt
imul
in
xchg
mov
out
out
cmp
inc
adc
insl
mov
in
add
push
in
pop
mov
add
pop
in
jmp
push
subb
jno
cli
test
icebp
dec
push
lret
xor
mov
repnz
sbb
shll
sub
push
in
imull
into
mov
icebp
mov
adc
test
pop
sbb
in
xor
add
fidivrs
shlb
out
lret
call
sarl
loope
add
and
fsub
es
push
jne
dec
cmp
adc
fistpll
pop
add
mov
push
dec
xsha1
cmpsb
mov
pusha
aam
cmp
pop
adc
xchg
xchg
and
xorps
into
mov
int3
aas
inc
out
sub
imul
je
lcall
jmp
lcall
fs
dec
pop
test
adc
xchg
push
lahf
cmpsb
push
sbb
inc
or
pusha
cmp
mov
lret
mov
push
sarl
dec
add
daa
ret
lcall
and
dec
sub
cs
mov
and
inc
lock
push
mov
xchg
sbb
repnz
fisttpl
inc
call
hlt
stos
jmp
lret
scas
fimuls
in
lahf
or
xchg
dec
rcr
loop
adc
lcall
mov
imul
pusha
lret
xlat
pop
loopne
rcrb
loop
push
cmc
mov
and
adc
jecxz
dec
and
dec
mov
pop
addr16
out
mov
cmp
jge
pop
mov
sub
leave
adc
sbb
imul
sub
data16
jb
or
xchg
mov
imul
add
pushf
fwait
mov
je
inc
out
push
pop
adc
mull
sbb
test
jb
inc
jnp
fsub
mov
cld
dec
stc
ret
sbb
das
clc
movsb
xor
mov
sahf
popa
stos
addb
imul
daa
and
mov
push
push
pop
jmp
xchg
lock
sbb
pop
and
mov
loopne
stos
movsb
setbe
movsb
test
lock
inc
dec
sbb
xor
or
sahf
mov
rolb
jne
mov
jmp
jge
mov
xchg
sub
jmp
ficompl
jecxz
in
push
lret
es
adc
add
das
xlat
or
aad
push
addl
cmpsl
ss
xchg
out
aam
mov
test
jmp
std
je
ds
jnp
fwait
mov
scas
mov
not
insl
cmp
movsb
mov
std
pop
fcompl
mov
jle
xchg
fldt
sub
adc
shrl
rclb
out
push
push
subb
add
lret
jp
adc
xchg
mov
mov
pop
xor
mov
rcll
jae
push
push
test
inc
enter
shlb
ja
or
cmp
mov
sar
leave
rcl
fidivl
lods
in
xorl
jg
inc
mov
jecxz
xor
mov
push
or
adc
mov
inc
imul
xor
aad
call
sahf
pop
out
mov
sub
jae
pop
adc
scas
mov
test
stc
int
adc
hlt
pusha
mov
adcl
fsubrl
cli
jbe
inc
jo
leave
pop
push
imul
std
movsb
jle
mov
aas
in
ret
das
dec
loope
xor
mov
outsb
mov
xchg
cmp
cli
add
ss
pusha
sub
add
push
cmp
and
jmp
pop
rolb
cmp
sub
insl
inc
mov
add
mov
jno
add
loope
imul
sbb
sbb
push
lods
mov
aas
out
jo
and
test
adc
inc
cmpsb
and
pop
stos
xor
pop
cmp
xchg
mov
idivl
dec
ljmp
add
inc
jge
dec
add
sbb
fs
add
cmpsl
aaa
mov
inc
hlt
stos
mov
dec
dec
push
incl
sti
push
adc
test
or
dec
je
out
push
xorl
cld
dec
xchg
fsincos
cli
mov
jae
add
xlat
xlat
notl
jecxz
addr16
scas
xchg
out
fwait
push
jge
call
ljmp
pushf
sub
add
test
mov
jae
gs
shl
gs
jns
cwtl
mov
and
outsb
mov
dec
std
dec
mov
loope
sub
cs
cli
lea
dec
popl
out
dec
enter
xlat
inc
insl
fwait
add
or
mov
fs
dec
mov
push
pop
stos
jnp
mov
je
jle
jo
mulb
xor
xchg
lcall
or
cs
fnstsw
sub
and
mov
imul
rorb
xchg
cld
mov
cs
push
pop
repnz
push
int
dec
insl
mov
push
adc
adc
movsb
test
lods
int3
andl
xor
movsl
xor
push
cmp
mov
mov
shl
xor
dec
bnd
imul
cmpsb
add
inc
or
addr16
mov
mov
pop
and
push
xchg
and
sbb
pusha
movsl
popf
dec
lret
notl
xchg
inc
popf
fstpt
mov
rolb
mov
jne
xchg
cmpsl
scas
jns
mov
enter
insl
out
lret
or
mov
test
add
pushf
stc
or
inc
sub
and
adc
cmp
jae
std
push
cld
sbb
mov
js
xor
or
jl
xchg
pushf
push
adc
les
test
jns
cmp
stc
popf
sub
lods
push
push
loope
cmp
push
fistpll
scas
shll
xor
sub
pop
xor
repnz
test
add
call
int3
movsb
enter
xlat
pushf
lret
out
rolb
mov
jns
cwtl
sbb
arpl
fidivrs
aas
jae
insb
idivb
lock
fldl
call
dec
packssdw
ds
ljmp
dec
add
xor
orl
jmp
sbb
sub
cmp
mov
sbb
int
popf
inc
mov
lret
in
pop
cmc
mov
mov
pop
dec
aaa
and
pop
push
add
pop
aam
ljmp
rcll
mov
or
imul
int
popa
lret
jg
fmuls
inc
cs
add
adc
sub
adc
dec
shrb
pop
push
jno
iret
xor
in
cs
push
orb
dec
mov
fdivrs
jo
jnp
add
sbb
iret
js
cld
and
jmp
int
sbb
flds
sar
into
addb
cld
push
dec
int
xlat
movl
sub
or
je
out
jp
push
enter
push
sahf
insb
pop
mov
lret
std
push
out
scas
sub
or
mov
lods
dec
cmp
sub
fs
nop
pop
mov
xchg
push
pop
mov
xor
mov
imul
pop
mov
adc
sti
shll
cwtl
sbb
pop
mov
dec
sbb
clc
lret
adc
jg
scas
jecxz
clc
sub
add
dec
xchg
rorl
sub
push
insl
mov
pop
outsl
lock
push
lret
sub
xor
cltd
cmp
lds
fdivrl
inc
ret
sub
sbb
pushf
sub
sub
stc
jecxz
mov
cs
dec
pop
out
pop
mov
stos
mov
cwtl
repnz
icebp
sub
cld
std
out
out
aam
push
mov
aas
pop
mov
out
jbe
mov
cmpsl
inc
mov
lret
ret
sub
push
lcall
sbb
xchg
stos
mov
hlt
mov
cmpsb
mov
repnz
cmp
clc
pop
mov
loop
imull
cmp
mov
shrb
inc
loope
mov
mov
fidivrs
iret
mov
or
int
mov
mov
cltd
mov
pop
enter
add
lret
aam
mov
imul
inc
aad
dec
pop
ljmp
cwtd
stos
sbb
sbb
inc
aaa
cltd
xchg
nop
jae
dec
pop
mov
lret
loope
jns
inc
cmp
sbb
aam
inc
aam
inc
shlb
pop
mov
cmc
push
daa
loopne
lret
mov
mov
clc
push
insb
cmp
scas
jns
xor
cmp
ror
fistps
fldenv
inc
shll
dec
iret
jmp
xor
push
dec
sbb
testb
xchg
cmp
out
and
movsb
faddl
sbb
mov
addr16
mov
ja
lcall
lcall
pop
popa
ret
dec
insb
daa
cmp
aas
dec
xchg
mov
ret
or
add
les
mov
mov
cmp
mov
mov
ret
sbb
ret
adc
shl
rolb
les
scas
dec
mov
jne
jmp
and
jno
lea
cmp
push
add
mov
mov
sub
vmovdqa
jb
int
repz
lock
ret
add
imul
or
adc
sub
not
sti
js
inc
mov
outsl
dec
outsb
addb
jecxz
push
push
pop
ret
mov
aam
daa
xor
fadd
cmp
lods
cmc
jne
and
inc
dec
xor
out
push
mov
mov
mov
mov
idivl
mov
inc
sub
aam
or
xor
xor
sub
cmpsb
push
jns
mov
add
scas
rcrb
add
shl
jp
das
dec
in
incl
cli
arpl
sbb
je
adc
loop
push
jns
cld
mov
loope
dec
push
arpl
mov
or
push
mov
cmpsl
fisttps
and
out
or
loop
popa
fisttps
mov
push
pop
cmp
fimull
fists
test
push
lcall
inc
sbb
out
mov
daa
pop
mov
test
push
movsb
mov
shl
jecxz
jo
mov
xorb
pop
rolb
dec
xor
mov
and
outsb
sub
mov
imull
lsl
imul
xchg
into
insl
aaa
loope
into
repz
mov
adc
mov
or
add
in
in
sbb
pusha
xlat
fldcw
flds
xchg
je
popa
loop
test
loope
mov
cwtl
lcall
fdivl
gs
pop
mov
push
mov
lret
enter
adc
mov
adc
jge
lds
jle
pop
mov
mov
scas
loopne
xchg
mov
xor
fistps
or
add
insb
mov
outsb
rorl
fwait
cwtl
movsb
fisubs
cmc
jmp
mov
test
pop
jecxz
mov
mov
xchg
and
jae
pop
mov
jno
call
pop
xor
mov
aas
es
push
push
sbb
out
adc
sub
into
mov
add
cmp
lods
outsb
cld
pusha
jne
pusha
mov
ljmp
sbb
jmp
in
and
sbb
test
cmpsb
sub
pop
sbb
fcoml
mov
cmp
mov
imul
add
lock
cld
ror
jmp
or
jp
mov
dec
dec
mov
test
dec
es
mov
mov
mov
aas
lock
ss
enter
out
outsb
ss
jg
jne
movsl
cmp
ficoml
dec
inc
jnp
sbb
jno
xor
in
das
xor
xchg
andb
call
aam
iret
sub
nop
push
jg
adc
flds
test
lcall
aad
lds
inc
je
repnz
adc
shlb
repz
into
push
pop
iret
push
aaa
cli
insl
out
dec
ficoml
imul
sub
sbb
inc
clc
addr16
sbb
pop
xor
cmc
int3
cli
test
lahf
hlt
cmp
pop
nop
fldl
insl
fwait
in
mov
shrb
xchg
enter
mov
mov
or
negl
aas
mov
in
sarl
out
sti
mov
xchg
in
cmp
mov
push
loopne
bound
fcoms
add
mov
dec
pop
andb
mov
xchg
test
push
dec
ja
lods
decl
add
adc
aas
loopne
mov
les
std
imul
call
fsubrs
push
or
outsl
in
test
sbb
stos
out
insl
mov
fs
sub
inc
push
lds
popa
aas
xor
stc
add
int
out
loope
adc
sub
push
jg
enter
scas
xchg
lock
or
adc
mov
and
pop
aam
mov
jae
dec
clc
cmp
pop
xor
xchg
in
jnp
add
jbe
lahf
loop
fwait
lods
fucomip
ja
push
pop
jne
fsub
nop
jl
hlt
xorb
mov
scas
add
xchg
push
and
inc
xor
or
lahf
push
pop
out
push
jo
sbb
lock
js
pop
sbb
jbe
filds
andnps
fwait
int
outsb
adc
je
out
jno,pn
mov
ds
lahf
sbb
jns
movsb
and
popf
xchg
or
aas
inc
cmp
pop
and
in
js
and
hlt
je
or
sub
add
and
push
add
and
mov
sub
or
rcrb
lret
cmp
lahf
push
jo
xchg
addr16
movsl
andb
inc
xor
inc
lds
test
fadds
mov
sub
and
push
sub
movsl
add
mov
scas
push
pushf
stos
adc
ss
add
fistpl
add
inc
inc
shlb
pop
popa
movl
adc
pop
add
enter
testl
dec
orl
ret
rcrb
jl
loope
xchg
pop
lcall
or
daa
jl
lods
jmp
movsl
or
dec
pop
xor
mov
iret
mov
jle
scas
das
dec
pop
jecxz
jbe
cmpsl
push
gs
rorl
jns
lods
push
outsb
dec
pop
push
sub
inc
dec
daa
cmc
lret
inc
ja
fimuls
xchg
add
test
xor
pop
sbb
movsb
mov
scas
into
or
sbb
push
dec
jns
insl
dec
loopne
jle
lea
sub
int3
push
mov
mov
sbb
scas
inc
ljmp
pop
mov
lock
cmp
sbb
addr16
je
jecxz
cmpsb
stos
xchg
push
shr
out
imul
pop
or
mov
call
out
stos
xchg
je
fisubrl
aas
out
cmpsl
lods
fs
es
push
add
std
in
test
mov
push
pop
pmaxub
inc
pop
out
mov
sbb
test
xor
das
lcall
arpl
mov
xchg
cmp
ljmp
aas
sbb
icebp
jmp
push
in
sub
ja
mov
pop
push
int3
jg
dec
sub
js
cld
mov
dec
mov
mov
mov
xchg
in
negb
inc
test
bound
sbb
inc
and
addl
add
daa
sbb
cmp
sbbb
test
sub
les
and
add
cmp
dec
inc
mov
inc
mov
sbbl
add
shl
xchg
add
mov
push
mov
jb
test
cmp
fs
scas
xor
sub
cs
imul
sub
aas
or
std
ds
push
repz
aad
jno
mov
push
mov
jno
inc
mov
gs
push
adc
insb
pop
xchg
sbb
ds
mov
mov
mov
test
xor
imul
pop
pop
cmp
lcall
les
lods
scas
pusha
mov
push
popf
pop
icebp
popf
fsubs
inc
mov
inc
jmp
testb
xorb
mov
mov
cmpsb
fisubs
push
cld
add
sbb
jae
cmp
shlb
es
and
movsl
and
and
aas
add
pop
out
ror
cwtl
fistl
lea
xor
sbb
xor
pminsw
xchg
enter
jl
and
xor
aad
insb
dec
pop
mov
push
fs
movsl
dec
add
mov
xchg
jbe
pop
mov
movsb
int3
data16
rolb
mov
push
leave
aaa
outsl
aad
adc
mov
scas
jmp
sub
jp
ret
add
xchg
adcl
pop
sbb
mov
adc
push
sbb
mov
mov
xchg
cmpsw
addl
xchg
bound
js
cmp
mov
push
cmc
push
pop
pop
mov
adc
sbb
push
rclb
popa
xor
sub
sub
je
pop
or
xchg
into
test
xchg
and
jecxz
xchg
add
xlat
mov
leave
xchg
inc
xor
mov
fsts
movsb
test
sub
int
xchg
jecxz
addl
cmp
ds
and
pop
fldcw
ss
and
clc
push
add
adc
repz
out
negl
stos
lahf
lods
push
xchg
test
cmp
ror
insl
xor
xor
out
and
xchg
pop
outsl
sbb
dec
push
fimuls
insb
xchg
jmp
push
and
fwait
mov
pushf
inc
adc
pushl
inc
mov
sbb
ja
cmpsb
test
lods
pop
cmp
sub
push
test
xchg
and
fsubrl
inc
pop
mov
loope
cltd
loop
jl
icebp
xchg
sti
clc
push
add
ss
dec
push
push
xchg
adcb
or
mov
sarl
push
shlb
pop
sub
jp
aaa
mov
pop
pusha
xchg
mov
inc
cmp
addb
lcall
or
outsb
jno
gs
inc
and
mov
add
mov
adc
testl
adc
lahf
mov
pop
stos
push
sub
mov
or
rorl
iret
cmpb
or
int
cmpsl
loopne
xchg
xchg
pop
mov
push
test
bound
jno
cmp
fdivrl
enter
adc
movsb
mov
arpl
add
inc
sub
pop
mov
popf
pop
insl
rcrb
jnp
mov
sti
adc
shrl
push
add
pop
out
sbb
aaa
outsl
fdivrl
adc
arpl
sbb
test
lcall
inc
insb
lcall
jno
push
xchg
dec
pop
aad
xor
es
inc
sarb
sbb
test
mov
in
orl
mov
inc
fnstcw
dec
mov
xchg
fsubrp
or
in
jnp
int3
push
sub
sbb
cmp
out
lds
inc
adc
outsb
jle
lret
adc
xchg
jb
inc
jno
loop
add
aaa
mov
ljmp
sub
or
out
bound
test
out
push
sti
ds
adc
jmp
insl
stos
int3
mov
rorb
mov
test
out
ds
push
xor
ljmp
arpl
subb
and
push
filds
xchg
dec
adc
rcll
test
mov
xchg
ja
pop
adc
out
test
into
in
and
or
test
jp
push
clc
adc
outsl
bound
jmp
xchg
movsl
xlat
neg
fs
insl
adc
stos
gs
mov
mov
mov
psllw
mov
xorb
lea
push
data16
inc
xchg
movsl
and
push
and
xlat
call
add
sub
negb
out
leave
frstor
add
sbb
test
jge
xor
sbb
mov
daa
adc
pop
in
enter
call
cmp
push
daa
adc
mov
mov
data16
popa
sbb
outsl
cmp
xchg
push
test
jb
outsl
add
leave
roll
xchg
xorb
mov
ret
dec
xor
and
scas
lea
and
lds
sub
mov
dec
gs
and
rorb
aad
dec
pop
or
cmp
pop
orl
adc
int
stos
pop
aaa
in
jl
jne
and
cs
insb
insl
mov
pop
sub
cld
dec
mov
mov
imul
dec
bound
jecxz
aas
lods
pop
lds
or
andl
dec
xchg
imull
push
lock
ss
jo
cwtl
adc
xlat
inc
mov
in
sub
sti
int
or
xchg
gs
fsub
or
push
dec
and
roll
jle
ljmp
or
pop
sub
movsb
lds
push
rclb
jg
jmp
das
mov
adc
mov
cmp
mov
rcrl
inc
imul
mov
nop
adc
push
adcb
leave
fiadds
sbb
inc
adcb
pusha
movsb
or
loopne
out
adc
pop
pop
cmp
int
stos
pop
push
adc
xchg
xor
xlat
push
imul
sbb
rorb
jle
adc
jp,pn
icebp
test
test
loop
lret
inc
cmp
mov
pushl
arpl
jae
in
jecxz
sub
xor
cmp
pop
xchg
mov
daa
push
mov
leave
inc
lods
mov
in
int
sub
test
js
xor
cmpl
or
cld
call
rcrl
dec
in
cmpsb
std
jbe
cmpsl
lods
sbb
pop
inc
jmp
pop
inc
std
jbe
cltd
and
das
mov
adc
push
inc
lcall
popf
cmp
ds
fisubrl
inc
mov
jg
jbe
mov
jnp
sbbl
pop
lret
cli
clc
leave
scas
jne
or
mov
dec
adc
add
pop
aad
cmp
ds
and
xor
in
sub
and
xor
adc
out
push
sub
sarl
jne
daa
fimuls
jo
cmp
jg
sub
xchg
test
inc
fcoms
jg
in
mov
aaa
cmp
mov
data16
push
insb
push
sbb
mov
out
in
loope
xlat
adc
and
bound
jns
pop
fcomps
inc
mov
xor
ja
cmp
push
sub
xchg
mov
push
lods
dec
jmp
in
push
lock
xchg
xchg
dec
inc
sbb
out
sti
and
adc
cmp
add
fcoms
inc
fwait
stos
dec
or
pushf
adc
sbb
pop
pop
and
enter
fbstp
fdiv
adc
mov
jp
iret
push
mov
mov
or
ret
inc
popf
or
xlat
mov
arpl
push
fsubrl
pushf
jno
and
or
adc
gs
lret
in
sub
or
aas
imul
jo
vmovaps
je
shr
movsb
adcb
sub
test
cltd
mov
stos
mov
fs
mov
xchg
les
ret
pop
testl
add
int
andps
push
and
jo
xchg
xchg
jge,pn
std
jno
loope
inc
mov
imul
sahf
int3
ss
test
xlat
imul
jne
imul
jo
dec
mov
dec
or
xor
dec
scas
sbb
lcall
and
adc
push
xor
inc
sub
mov
fwait
lods
cmp
jl
dec
shll
loopne
and
out
dec
fldl
fcompl
mov
xchg
sbb
imul
xchg
fbld
xchg
aas
sbb
adc
xchg
inc
cli
mov
xor
adc
sbb
dec
or
mov
sbbl
pusha
mov
mov
lahf
les
aad
xchg
stos
xchg
inc
jecxz
mov
clc
aaa
mov
jmp
arpl
pushl
in
sub
xor
cmpl
inc
rcrl
dec
cmp
push
xchg
push
add
or
xchg
fistps
mov
push
das
addr16
and
mov
or
insb
add
inc
aas
sbb
push
push
xchg
xorb
aad
nop
leave
cmp
push
adc
mov
loopne
xor
dec
psllw
repnz
inc
repz
inc
insl
adc
mov
test
aas
push
popa
dec
stos
jb
fsubrp
es
iret
dec
fiadds
mov
adc
xchg
and
lock
cli
sub
sub
stc
cmc
adc
add
out
arpl
pop
stos
cmpsb
add
stos
imul
mov
cmpl
or
dec
xchg
push
andl
cmp
loopne
inc
stos
test
xchg
aad
push
push
add
mov
lds
mov
xchg
xchg
pop
cmp
sbb
and
mov
add
mov
mov
test
jg
sub
mov
jo
push
imul
mov
add
stos
cmp
cmp
bound
addr16
lret
roll
jle
pop
lds
sub
outsl
xchg
mov
jo
lret
mull
cmp
and
test
fcmovnu
int3
pop
mov
mov
pop
inc
inc
in
adc
sbb
es
imul
jns
gs
test
cmp
loope
arpl
adcl
push
push
jns
jno
cmpsl
daa
sbb
jnp
push
popa
mov
scas
and
sub
int
sub
daa
addl
sbb
subl
pop
ja
inc
mov
jg
cmc
repz
mov
not
inc
cmpl
sub
push
bswap
shll
out
dec
adc
test
or
xor
dec
push
bound
jmp
loope
dec
inc
fs
push
push
div
imul
mov
mov
rorl
scas
xlat
push
adcl
adc
adc
sbb
mov
scas
js
mov
imul
call
cmp
icebp
mov
in
loopne
push
ljmp
pop
notl
mov
cmpsl
test
hlt
sarl
pop
addl
sub
jp
sbb
shll
xchg
fcomip
sub
and
fsubs
xor
sub
mov
repz
adc
ficoms
jae
in
lcall
mov
jmp
sbbb
xor
pop
push
mov
dec
addb
sti
inc
xor
push
in
mov
xor
or
or
test
xchg
sbb
fsin
rcrb
cld
andl
add
test
adc
xor
ret
pusha
pop
scas
sub
mov
fsubs
out
cwtl
fldt
arpl
stos
add
bound
or
ja
fdivs
decl
dec
popf
rorl
clc
sub
fs
fstl
mov
xor
in
cmc
xchg
xor
push
sub
jnp
sar
cltd
or
jae
sti
cmp
mov
in
xor
aas
xchg
loopne
inc
mov
dec
add
mov
xchg
sahf
mov
or
ficoms
push
gs
dec
fld
mov
stos
lret
and
sub
adc
jno
cmpsl
xor
repz
insl
cmp
enter
dec
test
or
sahf
lahf
das
jno
dec
bound
lock
or
adc
mov
jecxz
mov
jne
jbe
dec
jnp
sub
fimull
ds
bound
ret
call
add
and
into
mov
or
lea
jbe
pop
sbb
xchg
je
rorb
les
jne
jo
fucomp
insb
imul
push
adc
filds
movsb
bound
aam
mov
jmp
dec
jne
mov
pop
jmp
jle
stos
fidivrs
add
pop
out
xchg
lods
jae
jmp
test
cltd
dec
inc
enter
call
outsl
outsb
push
cmp
jno
mov
sahf
mov
daa
mov
addr16
push
mov
pop
pop
and
adc
mov
pop
js
jae
and
sahf
pop
jb
push
inc
cmp
pop
cmpsl
mov
push
adc
adcl
sahf
sbb
sbb
xchg
jmp
or
sub
mov
or
jle
pop
jnp
mov
jns
sub
cltd
dec
mov
dec
adc
sbb
xor
adc
sbb
and
jg
shll
pop
sqrtps
inc
test
sub
mov
or
aad
movsl
ficompl
pusha
dec
push
cmp
mov
cmp
push
stos
fwait
add
aas
jge
addr16
sub
sahf
push
insb
ss
sub
dec
adc
mov
sbb
mov
scas
sahf
jge
test
ficomps
xor
insb
call
pop
pusha
jns
pop
lea
rolb
xor
cmp
pusha
pusha
imul
push
mov
ret
push
pushf
arpl
jns
dec
pop
fs
add
mov
push
add
mov
and
nop
mov
popf
lret
in
xor
sbbb
dec
cwtl
out
out
xor
jb
les
jns
xchg
xchg
add
adc
ret
int3
mov
push
lods
fs
mov
clc
insb
bound
jmp
pop
mov
jne
jne
xorb
push
pop
fst
sub
dec
rorl
adc
pop
mov
inc
mov
mov
jmp
mov
gs
lcall
xor
sub
cmp
push
sti
push
mov
mov
cmp
call
in
pop
mov
loop
test
test
push
cltd
aam
out
inc
je
mov
jle
loope
add
inc
icebp
or
ds
dec
sub
inc
je
inc
cld
pop
inc
fiaddl
jae
test
stc
jae
mov
mov
mov
inc
adc
xchg
adc
daa
pop
subl
lahf
pop
jl
ret
dec
push
pop
push
call
repnz
fdivr
and
add
add
in
cmc
jmp
sarb
out
push
push
mov
inc
and
add
cmp
aaa
mov
aad
repnz
xor
in
lcall
sub
stos
xchg
jns
mov
iret
xor
adc
push
add
cld
cmp
mov
mov
inc
push
dec
movsl
insl
in
or
mov
pop
testb
xchg
fstps
ss
mov
xor
and
pusha
push
fnsave
scas
push
sub
lea
xor
pop
inc
mov
in
es
pushf
mov
dec
call
xor
lods
lret
cmp
pop
int
test
adc
negl
pushl
pop
xlat
sub
jae
test
ljmp
outsb
daa
outsb
and
sbb
iret
sbb
mov
aas
stc
jmp
pusha
lods
test
or
add
iret
sub
into
push
push
inc
xchg
sti
mov
roll
mov
xchg
or
fbld
leave
fsts
or
cld
mov
sub
and
xor
mov
and
add
push
movsl
ds
cmp
mov
push
dec
or
int3
out
or
and
xor
aas
sub
jns
std
jl
inc
jle
xor
inc
in
mov
stc
sub
jne
jp
enter
shlw
inc
sub
movsb
mov
shl
in
shr
out
iret
or
nop
inc
scas
xchg
aad
sbb
repz
hlt
ds
lea
adc
cmp
sbb
pushf
insl
mov
add
lock
shll
imul
xlat
xchg
inc
insl
dec
jle
mov
mov
adc
stos
xchg
inc
je
add
jg
xchg
dec
jmp
sbb
cltd
pop
data16
push
vdivpd
sbb
pextrw
mov
inc
adc
inc
cmpsl
push
pop
inc
jne
push
mov
and
adc
xor
lock
jo
xor
sub
dec
pop
xor
sub
dec
mov
adc
in
sub
pop
push
lahf
addr16
add
cmpsl
add
loopne
pop
xchg
add
call
adc
mov
push
sub
push
mov
cld
daa
jo
mov
xor
js
mov
popf
pop
cmp
sbb
stc
sbb
dec
aaa
xchg
roll
shll
movsl
in
lds
adc
add
insl
pop
mov
repnz
push
fsubl
stos
mov
jns,pt
jae
add
popa
insb
mov
cmpsb
in
icebp
pop
jecxz
stos
fwait
stos
subb
lahf
gs
daa
fs
out
sub
jbe
push
loope
and
fsubl
adc
jl
sbb
push
jmp
mov
stos
jg
lret
aad
jle
ret
adc
loopne
and
sarl
decl
insb
ja
rcll
test
mov
pop
sarl
mov
in
iret
xor
jae
mov
dec
mov
xchg
and
ja
or
sbb
jl
lock
mov
test
shr
cs
emms
stos
xchg
cs
test
mov
lret
lcall
stos
push
mov
aam
mov
dec
js
mov
imul
mov
loop
jecxz
jbe
sar
pop
iret
mov
lcall
and
lret
inc
and
cld
popf
out
imul
cld
cli
popf
inc
sbb
test
sti
out
fwait
scas
adc
js
pusha
test
clc
aas
mov
mov
call
jle
pop
fiadds
sub
xor
shll
mov
loopne
rcrl
int3
jb
sbb
or
or
sub
outsb
out
ret
repnz
mov
adc
add
mov
stos
mov
shll
scas
iret
xor
sbb
sbb
rorb
mov
jge
jge
add
cmp
mov
in
adc
jl
cmp
outsb
xchg
ja
dec
add
sub
add
xchg
and
out
out
lcall
or
pop
inc
cmpsb
mov
sti
xor
jbe
fnstcw
inc
inc
loopne
sub
fwait
add
ja
xchg
push
into
dec
xchg
leave
iret
xor
sub
ss
pop
outsb
add
data16
cmc
xor
negb
mov
movb
mov
aam
sub
adc
mov
xor
sub
repnz
iret
addl
jae
or
push
flds
inc
sahf
lret
mov
xchg
mov
and
mov
inc
insl
in
loope
in
pop
inc
inc
inc
jg
test
pop
cmpsb
or
cmp
fisttps
mov
stos
add
xchg
std
jp
int3
sbb
out
pop
repnz
push
ret
jge
inc
cmp
push
stos
xchg
pop
in
cmp
or
inc
idivb
sbb
aas
mov
mov
out
dec
rcll
loopne
insb
insb
add
addl
dec
adc
inc
jae
or
sub
mov
cmpsb
loopne
rcll
mov
cmc
icebp
or
repz
in
dec
stos
mov
test
mov
sbb
dec
jmp
add
cld
sti
mov
scas
movsb
negb
xchg
gs
loopne
adc
xchg
or
push
sbb
and
jo
movsb
leave
fbstp
push
jle
fildl
add
push
xor
sub
xchg
cmp
push
sti
mov
mov
shl
xor
sbb
mov
jno
push
aas
xor
mov
mov
shrl
xlat
sbb
cli
xchg
sub
aas
xor
out
popa
push
imul
cld
bnd
push
rolb
scas
jl
or
jae
mov
test
movsb
in
dec
subl
add
data16
movsl
js
adc
jnp
wrmsr
push
cld
mov
adc
mov
push
xor
push
enter
insb
stc
loop
addr16
ljmp
dec
hlt
mov
cmp
roll
lret
addl
cltd
pop
pop
inc
imul
mov
mov
arpl
ret
stos
aaa
cmp
outsl
cmp
fldt
sti
mov
in
aad
int3
cmp
mov
or
push
sbb
inc
cmp
mov
pop
xchg
cmpsl
mov
leave
and
subl
pop
mov
add
sub
enter
push
inc
mov
jae
jae
jnp
dec
fidivl
sti
out
add
cmp
xchg
ss
test
imul
out
cmp
movd
xchg
pop
aam
add
inc
fbld
popf
in
pop
xchg
outsb
mov
inc
mov
xlat
push
or
fisubrs
xchg
lods
jp
add
mov
shr
aam
cmp
fadd
fisubs
insb
outsb
sahf
pop
sub
adc
and
pop
aam
sub
sub
das
rcrl
adc
xchg
fs
mov
loopne
cmpsl
cwtl
setb
dec
sub
mov
jge
adc
ja
mov
pop
adc
imul
xchg
test
int3
rcl
into
sub
jecxz
sbb
movaps
pop
call
jecxz
dec
xor
ss
insb
cmp
ds
in
push
outsb
sbb
in
or
pop
addr16
dec
pop
jnp
xchg
jmp
pop
xchg
pop
dec
ficomps
cltd
pop
cld
jmp
out
sub
adcl
mov
lahf
and
fldcw
dec
lahf
xlat
adc
xor
push
adc
das
jb
mov
xchg
dec
or
aas
rcrl
or
lret
mov
shrl
cmpsl
insb
inc
stos
sub
mov
or
aad
add
mov
ds
mov
sub
in
negl
dec
icebp
add
aad
mov
mov
or
push
sub
or
xchg
dec
and
ret
sub
sub
shll
out
xor
inc
fidivs
xlat
xor
dec
and
sbb
mov
push
cmp
div
lods
inc
push
nop
dec
repz
ret
popa
mov
xlat
sahf
je
jbe
addr16
mov
mov
sub
mov
bound
mov
inc
xchg
jecxz
jle
mov
es
pushf
btc
js
pop
outsb
mov
add
aaa
inc
push
sbb
call
jecxz
rcrb
out
into
adc
cmpl
test
mov
inc
lock
insl
pop
mov
dec
or
cltd
cld
shll
data16
fiaddl
mov
fbld
dec
jge
stos
es
xor
jp
jo
inc
lods
mov
adc
lods
inc
xlat
fldt
xor
mov
add
add
mov
mov
and
iret
fildll
push
jnp
out
push
lret
mov
aas
and
dec
lods
test
test
jbe
mov
xchg
sub
push
call
adc
push
push
mov
lods
xchg
mov
jmp
out
cmpsl
inc
or
lcall
mov
pop
sbb
push
mov
mov
mov
mov
ret
and
pop
pop
sub
lret
adc
xchg
or
lock
int
mov
jns
test
push
push
mov
movsb
xor
mov
pushf
int
imul
leave
enter
dec
inc
decb
mov
sub
cmpsb
push
dec
jle
xchg
fdiv
mov
inc
out
sbb
clc
outsb
imul
cmp
jecxz
cmp
sahf
cmp
jg
jbe
arpl
enter
mov
adc
pop
sub
or
and
xchg
shrb
repz
cmpsl
or
cmp
loop
mov
mov
jbe
popf
rcrl
mov
jae
rcll
adc
adc
cmp
js
aas
rorb
adc
repnz
fnstsw
xlat
add
adc
xchg
repz
pop
mov
scas
inc
inc
pop
mov
mov
test
xchg
jge
fsubp
loope
das
popa
pop
cmp
les
std
xor
lods
lcall
and
idivl
sbb
add
mov
testl
dec
cmp
lock
cli
jecxz
pop
mov
and
or
fstpt
sub
and
push
mov
pop
sbb
cmc
addr16
fdivrs
jmp
cmp
bound
xor
fidivl
mov
adc
add
in
into
xor
and
jb
dec
mov
shrb
xchg
jmp
sub
rcll
rclb
aad
xchg
xchg
mov
xor
cmc
xchg
enter
lret
pop
enter
xchg
clc
add
xchg
std
jo
pop
adc
enter
push
or
xrstor
sbb
test
xor
xor
xor
dec
pop
fcomp
out
sbb
mov
push
xchg
loopne
mov
inc
mov
push
inc
pop
cmp
push
cmovae
lods
mov
adc
mov
mov
aaa
sbb
xchg
mov
jp
adc
sbb
jg
sti
aad
stos
outsb
sub
dec
inc
je
insb
xchg
out
mov
sub
pop
popf
cmpsl
mov
repnz
inc
push
jae
xchg
jl
pop
xor
cltd
orb
fdivl
xor
xlat
mov
fcompl
inc
cmpb
push
div
xorl
mov
inc
je
out
jmp
add
dec
add
mov
int
mov
sub
movsb
inc
sbbb
test
fwait
adc
popa
xor
jae
dec
xchg
push
iret
jb
std
js
cld
lds
jecxz
test
js
lret
pusha
pop
or
inc
push
push
cmp
insb
xchg
in
fbld
xor
adc
mov
sarb
dec
fwait
lods
mov
das
sub
dec
push
lea
sub
xchg
in
add
dec
repz
daa
cs
shll
push
pop
enter
add
cmp
adc
xchg
adc
mov
cpuid
jp
outsl
push
xchg
jge
test
and
jle
out
mov
mov
iret
jo
pop
jmp
jnp
ljmp
pop
xor
rcll
pop
mov
sub
clc
mov
jb
adc
adc
dec
movsb
push
mov
cmc
adc
popf
sub
jge
mov
and
push
cltd
pop
cmc
cld
or
cmp
sbb
sbb
xchg
pop
lock
jmp
cmpsb
in
and
pop
lock
xchg
xchg
xchg
or
out
ret
lds
cmp
and
into
push
or
scas
sbb
mov
inc
or
rcrl
jp
sti
movsl
pop
adc
shr
fisttps
fs
bound
push
dec
cmp
push
fnsave
icebp
out
xchg
js
imul
loop
cld
ljmp
inc
jge
call
mov
loop
inc
insl
pop
push
or
cwtl
into
adc
pushf
push
or
sbb
ret
ds
and
je
jno
adc
jae
fldt
scas
cmp
adc
jecxz
loop
cli
fisubrl
lods
inc
mov
cld
mov
cmpsb
cmpsl
and
test
stc
faddl
dec
jle
loopne
mov
imul
add
aaa
nop
cmc
dec
jbe
sub
es
out
xchg
sbb
or
mov
popa
gs
xor
repnz
imul
pusha
adc
and
xchg
fbld
bound
xchg
mov
inc
xor
cmpsb
lods
pop
sbb
stc
cmp
call
mov
mov
pop
imul
sahf
and
pop
inc
xlat
xor
aam
cmc
pop
dec
add
add
push
hlt
sub
add
leave
jge
push
ret
pop
adc
testb
fisubrs
fisubrs
mov
xor
shll
fs
stos
pop
mov
idivl
inc
xchg
aam
imul
js
jb
pop
aaa
loop
add
pop
mov
dec
shl
inc
push
sub
mov
rcr
out
in
test
jg
andb
mov
pop
xchg
inc
jb
mov
iret
mov
sbb
sbb
inc
push
mov
subl
int
jne
sub
in
lcall
push
cmp
xchg
addl
mov
jge
popf
mov
cmc
pop
mov
pop
push
mov
xor
loop
repz
add
fbld
rcrb
or
mov
adc
and
ja
push
cwtl
cs
or
and
arpl
xchg
test
jne
push
pushf
subb
fs
loopne
mov
jle
lea
pop
mov
lds
hlt
sub
jb
pop
dec
inc
mov
clc
inc
jbe
es
mov
iret
jge
aas
and
addr16
adc
lahf
push
sti
and
jp
mov
xchg
lret
enter
pop
jle
out
ds
into
imul
inc
cmp
adc
inc
xchg
adc
mov
add
ss
fidivrs
mov
into
push
jo
scas
lcall
cmc
imul
pop
in
mov
mov
es
xchg
xchg
and
in
cmovb
out
inc
push
sub
or
js
and
repz
or
lods
sub
fcompl
and
cmpsl
aam
dec
jg
in
mov
mov
jbe
mov
xor
and
insb
in
ret
enter
call
pop
jb
test
mov
into
or
lcall
inc
sbb
fistpll
or
or
dec
xchg
mov
sbb
dec
xor
or
popa
xchg
testb
xor
outsl
cld
xorb
push
enter
rcrl
sbb
test
test
or
orl
adc
cmp
mov
icebp
mov
jbe
jae
xchg
adc
dec
pop
cld
jbe
fwait
fs
lret
je
push
cld
int
mov
push
ss
mov
pop
cmc
sbb
sahf
mov
test
mov
or
arpl
pop
call
or
imul
mov
fidivl
sbb
shl
mov
aas
push
sbb
mov
sub
push
je
gs
xor
jnp
mov
call
mov
mov
out
das
add
fcoml
fcompl
push
mov
ds
imul
inc
mov
mov
jbe
loop
push
repnz
mov
jnp
cmp
ja
mov
push
pop
in
add
sahf
daa
lret
adcl
fstpl
add
cmp
and
lret
dec
xchg
int3
outsb
sub
pop
or
xchg
sbb
xlat
popf
scas
insl
push
push
jle
xlat
xlat
out
xchg
sbb
in
insl
mov
insb
inc
popa
gs
fs
xor
fstl
or
lods
sbb
loope
inc
arpl
pushf
add
cld
inc
add
lds
pop
stc
lds
xor
xor
dec
call
inc
pusha
dec
shll
dec
pop
out
sub
les
push
pop
jmp
aaa
das
mov
out
scas
push
mov
imul
mov
lock
mov
mov
jne
outsb
jge
fdivr
pop
lea
stos
pop
or
imul
dec
lods
ljmp
lods
xor
notl
sbb
out
xchg
add
xchg
test
loop
xchg
pop
cmp
push
std
std
jns
mov
dec
rep
add
loopne
pop
jne
add
lds
inc
outsl
and
out
inc
cwtl
loopne
test
aam
fstps
cmp
pop
aaa
mov
mov
inc
xchg
cmp
xor
das
in
sbb
lock
in
fwait
push
sub
add
loop
popf
fdivrl
pop
sub
or
jg
lods
push
mul
daa
add
push
ds
incb
inc
leave
xchg
and
mov
fcmovb
mov
es
and
mov
fwait
hlt
add
movsb
enter
pop
push
xchg
jle
popf
pop
push
xchg
clc
cmpsb
sbb
movsl
or
ror
shrb
pop
xchg
sub
add
jno
xor
mov
fisubl
xchg
push
dec
sub
jecxz
cld
mov
cmpsl
sbb
pop
iret
inc
sub
dec
sahf
imul
xor
jbe
es
rolb
cmpsb
shl
cmp
cmc
mov
adc
mulb
or
and
imull
mov
movb
shlb
nopl
jo
adc
mov
test
scas
cmp
ds
jae
add
cmpsb
lea
and
insl
inc
or
popl
add
xchg
xorl
adc
in
rolb
mov
int
push
scas
pop
icebp
popa
les
jb
dec
mov
xchg
jns
push
add
xchg
pop
fistpl
insb
push
sub
inc
imul
lret
cmpsl
je
mov
out
cmp
pop
or
or
adc
mov
xor
sbbb
shrb
pop
pop
xchg
jb
and
mov
inc
lds
mov
add
daa
add
mov
dec
and
mov
jae
fiaddl
cmp
mov
dec
scas
test
cmp
dec
push
popf
mov
add
push
data16
fbstp
lds
out
push
or
in
fsubs
add
xchg
push
xchg
sub
roll
cltd
dec
mov
jbe
pop
movsl
test
out
iret
pusha
push
incb
lea
adc
ljmp
push
pop
fsubs
xchg
xor
pop
movsb
and
pop
mov
test
xor
inc
stos
inc
gs
pop
xor
loopne
xor
add
mov
add
sub
je
push
int3
sbb
sti
fneni(8087
lods
ret
movsb
jmp
movsl
clc
sub
icebp
aam
aad
pop
sbb
push
cld
leave
in
cmp
fs
out
aad
addr16
mov
int
aam
mov
xlat
and
cmpsb
add
test
das
jecxz
inc
push
add
adc
lret
mov
xchg
jae
sbb
push
test
mov
mov
test
scas
sub
add
lods
push
mov
jo
add
sbbl
xchg
sub
inc
imul
adc
bound
sub
mov
fnstenv
jne
ljmp
scas
dec
imul
pop
mov
inc
xlat
xorb
cmp
adc
push
xchg
dec
push
shll
sub
xchg
sbb
flds
fisubrl
incb
inc
or
xor
dec
stc
add
ss
mov
lahf
mov
and
inc
hlt
cmp
sub
lret
mov
dec
and
xor
jnp
jecxz
push
mov
adc
pop
test
scas
pop
aas
mov
mov
sti
sub
lahf
or
mov
pop
leave
dec
pop
enter
int3
add
push
jge
add
int3
sbb
dec
mov
inc
test
and
gs
or
repz
cmp
add
pop
or
imul
mov
cwtl
push
pop
fwait
loop
mov
inc
mov
and
pop
add
lds
test
movsl
test
das
in
sbb
cmpsb
mov
xor
ss
call
adc
fldt
mov
push
imul
in
mov
and
sbb
xchg
stc
push
sti
pop
mov
in
cmp
inc
mov
jp
push
test
jno
lods
movb
cmpsb
push
lahf
mov
mov
xchg
js
loop
adc
dec
lods
xor
testb
inc
mov
out
or
xor
xor
inc
adc
xchg
pop
enter
fsubs
push
addr16
dec
push
mov
jmp
je
into
sbb
mov
xor
call
mov
push
jnp
aad
cs
xchg
stos
mov
out
xor
lcall
mov
and
insl
aaa
xor
xlat
push
dec
push
dec
pop
jne
cmp
xor
or
xor
push
mov
pop
clc
fs
div
sti
es
inc
lods
push
add
les
call
jno
xor
pushf
xor
inc
add
xlat
xor
ljmp
movsl
sub
lea
ret
into
mov
imul
mov
movsb
add
adc
or
inc
ljmp
mov
ret
or
pushf
mov
sbb
xchg
addr16
cli
test
sbb
call
mov
aas
or
hlt
lds
adc
pop
sti
adc
sbb
mov
jne
ljmp
fisubrs
jmp
ja
mov
std
clc
mov
xchg
adc
int3
and
xchg
outsb
aas
xor
mov
repnz
jp
dec
jo
lret
les
sub
pop
js
add
aad
dec
mov
in
mov
pop
push
xchg
cmc
ffreep
scas
xchg
aad
jle
push
repz
ficoml
xor
sbb
test
mov
shll
ljmp
jecxz
push
fstl
mov
xor
aam
call
jnp
into
notl
or
mov
test
sub
push
rol
push
ja
test
lahf
imul
inc
cmp
icebp
add
pop
push
adc
fnstsw
jl
dec
clc
cmp
shll
es
scas
subps
mov
cmp
and
mov
and
xchg
dec
loopne
add
dec
pusha
rorl
xor
adc
in
cmp
shll
push
adc
pop
pop
movsb
stc
sar
aas
mov
xor
ds
xchg
movsb
jbe
mov
adc
rclb
test
inc
dec
divl
xor
pop
add
or
sub
loope
fwait
xchg
pop
arpl
cld
jbe
shrl
jl
sub
dec
inc
popf
pop
mov
mov
rolb
jecxz
xor
and
cs
cltd
lock
sub
push
int
sub
mov
push
inc
les
testb
inc
xchg
fwait
dec
mov
lret
sbb
insb
aam
cmp
cli
std
adc
mov
mov
shrl
inc
test
pushf
andb
cli
movlps
pop
mov
out
icebp
outsb
js
cmc
imul
mov
out
popa
cmp
mov
mov
sbb
fs
je
int
ret
push
xchg
push
rorl
repz
push
mov
pop
push
jns
ret
mov
fs
xchg
xor
int
or
scas
push
push
add
xor
jns
mov
push
das
push
cmpsl
lods
and
stc
lods
dec
sub
or
imulw
sub
lds
mov
or
repz
jno
test
gs
add
or
int
mov
int
add
and
or
mov
jne
push
xchg
adc
and
jp
push
out
lret
inc
push
scas
pop
xchg
lock
loopne
sub
jl
mov
rcrb
xchg
jp
push
popl
xor
les
cmpsb
adc
xor
mov
cmp
nop
aam
push
dec
sbb
xor
lret
push
add
sub
fisubs
inc
mov
push
repnz
shll
adc
idivl
leave
cs
sarl
rorl
push
jns,pt
xlat
sbb
insl
test
aam
and
fcmovne
in
fcmovnbe
jno
arpl
rclb
jp
aad
inc
inc
sub
push
bound
mov
fs
push
in
pop
nop
clc
mov
divl
adc
and
mov
pop
mov
insb
hlt
dec
fadds
or
xchg
lea
cmp
pop
pusha
jns
popa
or
lods
js
stc
test
mov
push
imul
xor
shrl
jno
xor
sub
aad
dec
aam
push
in
stos
mov
add
pop
dec
and
cmp
adc
dec
ds
sbb
cmp
inc
jns
or
aad
and
cmpsl
test
mov
fadd
jl
mov
rolb
ja
js
test
adc
loope
scas
mov
cld
push
add
imull
mov
pop
mov
sti
mov
sub
fimuls
pop
aam
fsts
dec
add
loop
sti
sarb
lds
mov
mov
out
mov
sbb
fsubp
rorb
mov
xchg
gs
adc
int3
push
push
pop
imul
jg
cmpsb
nop
cmp
xchg
call
dec
mov
jo
push
nop
xor
test
xorb
xchg
push
cmc
mov
sbb
push
push
stos
sub
pop
jns
lcall
stc
mov
xchg
insb
or
addr16
aaa
insb
and
fisttpl
lods
lcall
jmp
fidivl
loopne
popf
int
cmp
add
cld
xor
fstps
pop
mov
push
pop
cmp
stc
test
int
inc
sub
add
mov
icebp
adc
dec
in
or
bound
mov
inc
push
fsts
stos
pop
dec
mov
pop
xchg
pop
push
dec
jnp
or
sbb
popf
cmpsl
xor
popa
scas
iretw
pusha
pusha
pop
mov
loopne
scas
lahf
insb
inc
dec
dec
fucom
mov
jle
push
cmpsl
dec
jns
pop
rcl
and
fdiv
xchg
pop
xor
lahf
cmp
adc
ljmp
fisubrl
inc
loopne
out
out
adc
push
or
xor
sahf
mov
nop
out
shlb
and
mov
xor
pop
lea
lcall
repnz
cwtl
sub
arpl
push
add
pop
mov
daa
sub
shlb
jb
mov
aam
fists
pop
inc
enter
decl
sbb
and
xchg
pop
aam
dec
dec
test
push
push
jecxz
fistpll
inc
xchg
push
iret
sub
rcrl
cmpsb
adc
push
dec
test
xchg
cmc
jnp
cmp
jae
mov
push
and
out
popa
jg
fcmovne
mov
std
push
test
pop
sbb
or
fwait
ret
popa
add
fwait
icebp
cli
scas
out
push
pop
mov
adc
or
xchg
pop
out
pop
push
das
pop
add
pop
sub
xor
pop
mov
or
loope
push
mov
jb
cmpsl
and
aas
cmc
mov
bound
pop
mov
and
ret
test
andl
dec
xchg
dec
cmpsl
xor
inc
xchg
or
repz
ffree
je
xchg
and
and
mov
mov
push
pop
jae
or
jg
out
cmp
mov
pop
pop
dec
sbb
rol
cs
xchg
and
sub
mov
pop
call
stc
xchg
adc
andl
xchg
mov
and
sbb
adcl
inc
sub
inc
mov
aam
xor
mov
bound
push
mov
inc
leave
mov
pop
mov
cmpsb
and
cmp
repz
stos
insb
pop
sbb
mov
sub
add
xor
dec
xor
mov
leave
xlat
movl
shll
inc
pop
add
mov
xchg
mov
push
ret
out
mov
and
sbb
aam
mov
mov
or
and
movsb
fsub
icebp
push
push
pop
jnp
arpl
push
pop
dec
add
mov
insb
enter
sub
xchg
scas
pop
sahf
stos
mov
popa
push
push
aas
or
add
mov
add
or
fidivrl
jo
and
lods
lret
popa
dec
scas
fcoml
mov
lret
cmp
cmp
xchg
fstpt
testb
loope
add
add
jnp
andb
xchg
mov
cmp
nop
inc
idivb
repnz
insl
int
cmp
or
jg
jne
ds
std
loopne
xor
dec
insl
icebp
and
mov
sbb
testl
les
movsl
dec
cmp
dec
sbb
std
mov
pusha
adc
outsl
inc
xchg
arpl
aaa
or
jecxz
or
mov
jg
rcrl
les
roll
out
and
dec
xchg
and
test
fimuls
gs
sti
xchg
mov
imul
mov
sbb
aaa
mov
sub
pop
popf
xor
and
mov
ret
xor
je
aaa
icebp
add
pop
cmp
mov
sarl
in
aas
cmpsl
adc
fldcw
pop
push
fxch
loop
xor
rorl
es
pop
or
adc
js
call
cmp
pushf
cli
outsb
stc
inc
sub
mov
cmpb
test
mov
nop
jg
pop
insb
adc
repz
xchg
jge
pop
mov
je
outsl
fwait
stos
cwtl
in
add
out
pusha
and
cld
mov
xlat
xor
sub
fs
jb
lods
xchg
adc
jae
sbb
ret
push
aas
jecxz
mov
inc
xchg
packssdw
push
scas
sbb
sbb
rcl
and
xlat
mov
imul
or
add
mov
pop
scas
cmpb
fnstenv
shlb
dec
xchg
jg
out
push
stos
cld
or
movsb
xchg
popa
out
pop
adc
cmp
push
cld
mov
xor
stos
pushl
mov
repz
ja
mov
inc
pop
insl
test
in
jns
je
push
pop
jmp
pop
jl
fstpt
jbe
ret
pop
lods
outsb
daa
adc
stos
subb
inc
cmpsb
mov
xchg
repnz
ss
js
gs
push
imul
or
inc
aas
mov
jo
push
pop
loopne
mov
sbb
dec
or
in
cli
or
hlt
fildl
fnstcw
mov
jecxz
mov
xchg
in
in
cs
repnz
mov
in
xchg
arpl
pop
insb
dec
add
dec
lret
mov
sub
xor
or
inc
pop
sbb
lds
cmp
inc
mov
bnd
and
xchg
ret
movsb
mov
xor
mov
addl
push
test
lret
out
rclb
jecxz
repz
imul
xor
ret
jmp
sarl
jecxz
mov
push
sysret
mov
inc
mov
inc
adc
lcall
sub
pop
lds
sbb
mov
fwait
mov
enter
lahf
inc
or
mov
clc
or
mov
pop
xchg
inc
inc
and
push
push
inc
pusha
popf
imul
stc
mov
insb
mov
or
dec
jo
add
push
nop
mov
inc
xchg
testl
mov
sti
and
pop
and
xchg
sti
bound
or
xchg
xor
loop
dec
xchg
fstpt
popf
decl
jne
out
xchg
mov
movsl
xchg
sbb
repz
jl
jne
or
xchg
repz
pusha
jmp
and
cmc
outsb
add
pop
jo
jae
aas
cs
and
push
cmpsl
pop
xlat
lea
pop
xchg
fsubl
pop
jg
sub
fcoml
xchg
or
loop
ds
test
xor
mov
call
jmp
out
js
out
fdivs
xor
inc
cmp
push
sbb
jno
sub
and
subb
adc
mov
pop
dec
cmp
imul
mov
push
mov
adc
xor
xchg
sahf
call
mov
adc
lcall
cwtl
notw
mov
dec
xchg
pushf
xor
stos
mov
inc
outsb
lods
mov
jae
mov
pop
jle
int3
lea
in
dec
test
icebp
xchg
mov
out
push
pop
aaa
loope
pop
sub
push
mov
and
cmpsb
pop
sti
subb
movsb
xorb
sbb
push
in
daa
xor
jmp
outsb
xchg
inc
out
in
add
push
pop
inc
outsb
aaa
xchg
inc
loop
fwait
adc
cs
and
adc
xchg
dec
cs
fs
jnp
ret
adc
mov
mov
push
ror
out
scas
ja
scas
and
and
fadd
in
mov
push
insb
movsl
and
ds
insl
movsl
mov
or
xchg
push
dec
pusha
jns
dec
adc
inc
dec
stc
jmp
mov
dec
sbb
inc
fistl
imul
mov
je
fs
sbb
push
and
das
inc
sbb
cmc
jb,pn
jge
fwait
lds
xor
adc
pushl
mov
add
mov
push
mov
dec
pushf
mov
lods
push
or
mov
mov
repz
mov
imul
outsl
cld
outsl
cli
or
decl
pop
or
jae
adc
push
mov
pop
int
cmp
sub
out
sbb
mov
jne
andl
pop
mov
mov
push
dec
pop
push
stos
cltd
add
cmpl
mov
sub
repnz
add
pop
xchg
add
hlt
push
mov
push
hlt
leave
sbb
mov
data16
lock
clc
je
js
outsb
es
dec
daa
xchg
cmp
mov
pop
rol
jne
mov
aaa
loope
sbb
push
xlat
out
cld
shr
call
pop
lods
in
loop
add
lcall
flds
hlt
pop
xchg
pop
mov
jo
lods
leave
mov
mov
jle
cmp
call
lcall
or
lods
clc
jp
xchg
cli
cmp
pop
popa
cs
cmpsb
jmp
cmp
out
frstor
cltd
pop
push
adc
jns
jo
mov
dec
ret
push
call
sub
insl
ret
idivl
pusha
xchg
jns
orb
pop
ss
fnstsw
mov
mov
add
mov
xchg
lods
sbb
dec
add
add
adc
pusha
jae
sti
sbb
lods
push
movsl
pop
out
sbb
insb
sub
arpl
js
inc
mov
subb
insb
lds
inc
or
repnz
xchg
xor
and
dec
pop
pop
addl
add
rcl
aas
jns
jne
data16
push
idivl
icebp
xchg
test
and
in
shll
lea
pop
mov
lods
popf
mov
ljmp
sbb
ss
mov
stos
cwtl
jecxz
mov
fmuls
mov
sbb
lock
pop
pop
mov
jmp
jmp
imul
addr16
imull
dec
iret
loope
shll
iret
inc
sub
or
out
fs
fldenv
in
xchg
subl
inc
test
fwait
xchg
aad
movsl
and
xchg
jecxz
push
push
movsl
push
cmp
and
jp
in
sub
mov
dec
aaa
cmpsb
dec
or
inc
arpl
fldz
push
mov
in
push
orb
xchg
fs
mov
lret
mov
std
xor
ret
int3
mov
cmp
out
std
or
add
mov
push
ror
aas
loopne
int
xchg
fcos
lea
xchg
outsl
sbb
xor
pop
pop
push
push
test
jo
xor
dec
mov
and
cs
fs
push
mov
xchg
mov
and
out
jnp
iret
in
fsubp
fdivrs
mov
lock
fwait
pop
gs
in
xchg
in
xchg
jno
popa
out
imul
mov
push
mov
jp
cmp
iret
fwait
lcall
fadds
add
dec
insl
int3
dec
das
cmc
mov
sub
cltd
mov
lahf
lret
adc
sbb
mov
add
fdiv
daa
jg
jge
jl
dec
push
xchg
push
xor
mov
out
add
loop,pn
jb
pop
and
pop
mov
and
imul
test
fwait
mov
inc
daa
ds
ds
imul
pop
xor
sbb
cmp
dec
or
dec
in
bound
shlb
add
cmp
lods
aad
sbb
out
xchg
push
aas
lahf
rorb
loopne
mov
sti
xorl
in
cld
xor
mov
xlat
rcr
outsl
aaa
cmpsl
or
sbb
jmp
jecxz
pop
adc
inc
jns
insb
das
les
fistpll
roll
push
jb
mov
sub
sub
bound
nop
xchg
mov
or
int3
jge
sub
jge
inc
cmp
icebp
out
daa
push
push
ds
ret
dec
loopne
stos
adc
repnz
inc
mov
ficoml
fdivrs
mov
rcrb
add
out
mov
je
lods
cli
out
imul
mov
adcb
fs
repnz
xor
pmaxsw
add
das
xor
inc
stc
mov
and
movsb
xchg
out
test
cld
mov
enter
stos
xlat
movsl
pop
inc
jmp
mov
sbbl
lea
cmp
push
sbb
adc
sbb
fdivrl
scas
push
and
daa
add
pop
mov
lock
aas
xor
dec
mov
inc
and
xchg
lcall
gs
push
jg
mov
cltd
pop
pusha
push
sub
inc
scas
aad
pushl
cmpsl
push
jp
es
repnz
mov
in
jecxz
inc
sbb
sub
or
insb
xchg
jmp
in
mov
decl
pushf
push
sbbl
xor
or
stc
xor
mov
aas
jle
fsubrl
push
mov
insl
mov
sarb
ror
mov
enter
adc
sbb
adc
ja
std
roll
pop
aad
addr16
push
adc
adc
lods
jg
mov
push
lea
jmp
dec
loop
cltd
cmc
push
inc
mov
pop
inc
loop
pop
lret
adc
fwait
pop
mov
mov
lods
mov
movsb
push
mov
jle
lcall
sub
inc
inc
jecxz
scas
lret
mov
aas
sbb
es
cmp
push
push
clc
insb
pop
mov
inc
push
sbb
int3
adc
add
push
ds
les
adcl
mov
ljmp
mov
pop
jne
pop
jp
jo
pop
ss
rcll
jne
lret
dec
in
jae
xor
imul
imul
dec
aam
ror
cmp
ja,pn
inc
jmp
pop
test
sub
cmp
jae
jae
cwtl
lods
jg
ret
push
jno
call
and
cmpsb
mov
insb
js
jp
and
repz
fs
inc
mov
pop
xchg
aad
fdivrs
pusha
outsl
push
mov
and
sub
push
sti
aad
sbb
mov
dec
inc
out
pop
jl
clc
cwtl
fsubrp
loop
push
add
hlt
leave
out
into
sbb
dec
aam
test
jecxz
bound
cmp
mov
mov
mov
icebp
pushf
outsb
push
push
in
stos
inc
dec
inc
pusha
shlb
mov
add
lea
dec
sub
dec
inc
cmpsb
or
lods
cmp
test
scas
cmp
push
add
push
out
aad
inc
call
nop
scas
mov
in
push
and
shr
pop
sysenter
xchg
mov
add
mov
jp
mov
rcr
mov
icebp
push
jnp
shll
popf
into
ljmp
cwtl
jp
xchg
dec
popa
or
or
mulb
dec
jo
fcompl
pop
int
sbb
lahf
loopne
lock
sub
or
cwtl
or
ror
arpl
xchg
adc
sub
fdivl
fdivr
xchg
pop
mov
xchg
push
sbb
hlt
mov
inc
dec
pop
lods
pop
add
cmp
inc
das
es
dec
xchg
mov
inc
xchg
push
fnstenv
inc
xchg
loopne
push
pushf
aam
inc
subb
jb
jecxz
push
cltd
sbb
test
sbb
leave
rcll
repz
addb
push
jmp
jno
xor
pop
cmp
pop
shlw
jae
add
cmp
pop
scas
push
jmp
movsb
pop
scas
cmp
lods
insb
inc
js
pop
aad
daa
pushl
rolb
pop
test
push
addb
sahf
aas
and
icebp
sti
stos
jl
gs
xorb
xor
dec
adc
fidivs
or
fistl
gs
icebp
insb
mov
das
test
lret
xchg
lahf
and
std
sub
xor
enter
pusha
dec
clc
in
add
lret
ret
inc
sbb
adc
push
fidivl
pop
pop
sbb
xchg
mov
add
cwtl
xchg
cmp
rclb
fidivrs
xor
inc
jbe
movsb
int3
jecxz
cmp
lock
je
mov
push
bound
lret
xchg
sbb
lods
notb
jns
out
cmpsb
movsb
arpl
dec
sbb
push
hlt
dec
mov
and
ljmp
jle
push
sub
lret
in
shll
lahf
sub
dec
fcmovnb
pop
fildl
xchg
mov
cltd
inc
and
out
push
frstor
jge
dec
int3
xchg
shll
sqrtps
mov
dec
movsl
daa
enter
mov
cmp
aaa
cmp
mov
loopne
mov
shrb
pop
sub
add
mov
cmp
aas
or
ret
inc
mov
popf
shll
sti
enter
jnp
pop
sub
jecxz
inc
jnp
adc
push
jne
push
xchg
arpl
mov
call
dec
xchg
jne
fistpl
bound
mov
pusha
push
and
shll
sbb
pop
add
mov
pop
mov
push
test
adc
lea
sbb
icebp
outsb
push
in
sub
and
xchg
into
rorl
movsl
jp
xor
hlt
dec
sub
mov
jo
out
shr
je
push
dec
add
adc
mov
jg
fisubrs
repnz
daa
mov
ss
popa
jne
mov
mov
pop
nop
inc
das
imul
and
mov
mov
cli
in
dec
jbe
test
add
ljmp
and
in
clc
add
push
leave
lods
stos
daa
or
icebp
xchg
and
mov
jge
clc
push
lahf
rcll
add
rol
mov
in
jb
stos
in
jp
test
cmp
mov
shlb
mov
mov
sar
push
mov
ja
cld
pop
add
mov
iret
jns
lcall
pushf
fildll
ret
sbb
jecxz
arpl
incl
ja
mov
pop
ffreep
inc
mov
lret
rclb
adc
add
repz
pop
sub
xor
sbbl
fwait
or
imul
dec
loop
loop
pop
jb
sub
popa
iret
mov
xchg
xadd
arpl
mov
dec
push
popa
addr16
fldcw
inc
aas
mov
and
outsb
sbb
inc
add
sub
jbe
xor
sti
pop
out
sbb
mov
xchg
mov
test
aas
in
test
and
xor
cmpsb
xchg
sbb
pusha
in
aas
sarl
adc
in
sub
dec
jo
inc
or
js
cwtl
daa
pusha
cmc
loope
les
xchg
push
mov
sub
inc
insl
hlt
ja
push
sub
fdivrl
cltd
xchg
divl
sti
push
andb
inc
psubd
sti
sarb
pop
scas
loop
cmp
jle
or
fisttpll
push
movsl
xchg
jl
xchg
pop
cmc
push
jo
jno
imul
shr
cmc
lock
mov
adc
fisttps
lods
xor
or
je
or
add
jecxz
stos
add
xchg
mov
fsub
fwait
mov
sahf
mov
fmuls
push
push
pop
xchg
std
sbb
adc
jl
jecxz
ja
jnp
xchg
rcrb
xchg
sahf
push
add
adc
add
ret
pop
push
inc
sbb
scas
leave
ja
dec
cs
xlat
push
imul
into
jge
adc
pop
cld
sarb
cmp
ret
xor
js
add
in
and
mov
inc
daa
fldt
xchg
mov
dec
fdivrl
add
stc
mov
jle
outsb
inc
fimull
xchg
xchg
nop
adc
shr
jne
out
push
sub
pop
out
pop
push
sub
add
jno
mov
out
out
mov
popa
pop
add
mov
scas
subl
sahf
loop
jl
fiadds
adc
dec
mov
sbb
or
shlb
jne
push
or
lods
scas
mov
movsb
cmpsl
jo
mov
cmpsb
je
insb
inc
push
push
sahf
dec
daa
or
js
cmpsl
fucomi
push
xor
pop
xor
mov
ret
mov
push
ds
popa
cmp
adc
jbe
fmull
dec
mov
add
xor
mov
mov
adc
push
jbe
push
popf
jecxz
test
mov
mov
imul
scas
loope
lods
lret
ds
out
adc
sub
sub
pop
adc
sbb
not
hlt
cmpsb
mov
data16
dec
aaa
dec
or
sbbb
mov
imul
cs
and
sub
punpcklbw
std
rcr
adc
xchg
ss
mov
or
bound
xor
fadds
cmp
mov
xor
add
adc
dec
bound
movsb
jl
bound
dec
push
repnz
jle
push
idivb
mov
roll
cmp
out
xchg
loop
into
xor
push
gs
std
loop
push
add
clc
je
mov
inc
test
pop
mov
add
push
dec
movsl
fsubp
cmp
aas
cltd
repz
xchg
aaa
stc
vmread
dec
in
jbe
scas
sbbl
jmp
pop
mov
repnz
cwtl
clc
xor
dec
lods
sbb
sbb
enter
std
fnsave
loopne
or
adc
add
loop
xor
mov
pop
repz
mov
mov
and
mov
notl
out
cmp
repz
lahf
cmpsb
repnz
int
fdivr
das
mov
pusha
xchg
xlat
pop
jg
ja
push
test
jg
fldl
fidivs
mov
jl
mov
andb
mov
mov
aad
out
cmpsl
jmp
inc
mov
int3
jg
inc
adc
xchg
je
pop
cmp
mov
mov
daa
repnz
bound
inc
rorl
inc
jg
mov
inc
cwtl
mov
fdivl
lods
js
pop
cmc
xchg
add
sub
lock
inc
jmp
sub
or
nop
mov
lcall
sub
icebp
jp
loopnew
pop
loop
mov
mov
cmpsl
movl
xchg
gs
stc
lods
jp
imul
arpl
js
cmp
fisttpl
in
xor
je
ljmp
das
ds
out
lea
and
dec
adc
std
push
in
cmp
mov
cmc
jle
shrb
popf
insb
mov
push
and
icebp
add
mov
leave
into
cli
call
add
jb
test
mov
mov
xchg
fsubrl
xor
ds
mov
int
xchg
pop
int3
push
sbb
cmp
jmp
xchg
xor
sbb
add
or
addl
fldt
or
ljmp
aas
mov
mov
pop
jmp
hlt
xor
movl
and
lea
test
sarl
mov
ret
popl
sbb
test
pop
inc
adcl
test
sub
dec
arpl
cs
daa
sbb
repz
lds
rcll
imul
aas
mov
pop
test
sub
jne
imul
gs
adc
es
test
sub
sbb
adc
jae
sbb
mov
in
xlat
jl
movsb
gs
sub
lea
inc
in
lock
cs
call
outsl
pushf
roll
out
cmpsb
jb
jecxz
out
jg
mov
push
push
jb
push
scas
loop
cs
stos
adc
icebp
or
out
sarb
hlt
or
push
movsb
xchg
pop
shll
imul
dec
pop
push
aad
mov
mov
jne
scas
sti
xchg
add
lock
lds
leave
dec
addr16
adc
mov
push
inc
pop
mov
pop
dec
push
jle
fistps
jg
mov
push
jl
mov
pop
int3
add
xchg
nop
inc
xor
pop
lahf
outsl
xchg
test
dec
test
movsb
add
lret
cwtl
dec
jecxz
sti
cmp
ds
cwtl
sub
outsl
jnp
or
outsl
icebp
jo
sbb
mov
cld
test
inc
out
xchg
scas
iret
nop
cmp
pushf
ficompl
cmp
or
aad
dec
push
add
nop
movsb
jle
inc
lea
sub
cs
std
pop
mov
inc
or
xor
js
mov
xchg
mov
lea
push
and
or
in
mov
mov
pop
scas
cmp
mov
js
sub
and
add
cmpsl
outsb
dec
add
xor
cmp
jbe
adcb
or
call
or
outsb
cmp
sbb
xchg
int3
mov
fwait
or
pop
jge
xor
mov
bound
push
sub
out
mov
jbe
call
cli
mov
pop
pop
and
sub
xor
stos
xchg
add
mov
cmp
pop
mov
sub
xlat
inc
cwtl
test
xor
cmp
or
dec
aas
shr
or
das
mov
daa
out
es
fs
sbb
pop
std
adc
adc
pop
sub
shrb
ror
inc
popf
mov
cmpsl
jle
jae
or
insb
sti
es
mov
mov
in
test
cli
dec
mov
out
inc
sahf
jge
sub
jle
mov
out
or
aam
lods
mov
cmp
std
ljmp
xchg
insl
leave
stos
add
fnsave
mov
loopne
fdivl
bound
mov
adc
inc
ror
push
gs
dec
and
sahf
int3
add
aad
ja
fcomip
xor
insl
push
jle
inc
cld
xchg
fists
addb
push
out
repnz
in
cmp
cli
jl
or
neg
sbb
inc
lock
dec
or
xor
mov
inc
pusha
push
push
les
push
dec
movsl
repnz
cltd
out
test
dec
xchg
sbb
cltd
add
and
jge
pop
in
add
cld
jae
xchg
push
pop
mull
mov
fcomip
ret
jg
movsl
xor
fcomp
dec
rorl
push
outsb
aas
ljmp
cmp
out
addr16
push
adc
inc
rcll
inc
test
mov
jne
cmp
xchg
leave
fsubr
xor
pop
out
clc
mov
dec
push
push
fmulp
jo
xor
mov
popa
push
inc
dec
andl
std
mov
pushf
pop
mov
rcl
fsubrs
jbe
add
in
inc
gs
and
pusha
jp
add
and
lods
xchg
cmpsb
enter
xchg
sar
xchg
push
loop
lret
jnp
es
test
cmp
mov
arpl
pop
test
jmp
popa
mov
mov
imul
or
and
mov
pop
mov
mov
test
sub
xor
stc
cld
das
jecxz
fadds
pop
sbbb
add
mov
sub
mov
pop
xchg
mov
xchg
jle
jmp
setae
int
sti
test
out
xor
jb
cmp
dec
cld
xchg
pop
inc
dec
das
mov
adc
cmp
int
cmp
pop
push
adc
cmp
sub
push
or
in
les
add
pop
pushl
or
jp
mov
fxch
inc
cmpsl
fincstp
mov
out
nop
mov
pop
rol
inc
mov
cli
cld
mov
fstpl
push
sub
addr16
sti
insl
add
sbb
sub
enter
lret
mov
aaa
or
fistps
aam
insl
clc
xor
cwtl
ss
push
xor
and
cmpl
mov
push
fiadds
test
out
movsl
ss
push
fcmove
inc
or
sahf
jp
sbb
mov
in
xor
mov
xor
sbb
ret
into
sbb
add
adc
mov
mov
nop
and
xchg
sub
sbb
imul
pop
dec
xlat
dec
add
ret
rcll
loop
jl
jae
push
sar
and
and
mov
pop
mov
dec
and
push
das
jg
subl
ret
ret
pop
ljmp
out
or
jge
mov
jo
pop
outsl
dec
cmc
scas
jno
or
je
adc
inc
cmpsl
cmp
adc
dec
add
push
out
mov
fisttps
or
dec
push
ss
add
sub
sti
or
jns
insb
aad
lcall
insl
clc
and
ljmp
cmpsb
daa
sub
arpl
jl
je
pop
mov
inc
jp
or
roll
push
mov
bound
shrl
jmp
jbe
xchg
dec
xchg
xor
out
push
imul
les
sbb
mov
pushf
lods
inc
outsl
addr16
into
imul
and
fwait
mov
jno
xchg
inc
push
adc
shll
out
sbb
lock
fwait
cmp
inc
sti
hlt
sbb
mov
bound
ja
clc
adc
scas
mov
fs
es
lret
pop
hlt
inc
dec
in
ja
in
decb
repnz
popl
loope
xchg
div
outsl
call
cmp
push
fimuls
stos
loop
sbb
mov
mov
inc
and
mov
in
aad
cmp
push
cmpsl
leave
dec
fisttpl
ljmp
push
lds
push
and
int3
push
mov
loopne
gs
iret
sbb
or
xchg
stc
sub
loop
xchg
dec
pop
or
aaa
dec
enter
shrd
test
pushf
sub
inc
adc
sub
shrl
clc
int3
push
dec
mov
icebp
divb
fwait
pop
mov
cmpsb
daa
cmpsl
push
lods
loopne
decl
add
popa
xchg
lahf
push
fwait
ret
pop
mov
jp
je
shl
data16
out
fmuls
int3
sub
inc
inc
icebp
lods
mov
test
jg
lcall
sbb
jl
fdivrl
mov
mov
and
mov
adc
jl
cwtl
inc
fwait
sub
add
subl
clc
repz
pop
dec
movsl
sub
subl
insb
test
inc
or
or
inc
into
lahf
repnz
jo
cmpsb
nop
mov
sub
cmpsb
push
cld
or
fadd
mov
add
inc
jb
imul
cmc
pop
jle
push
inc
repnz
dec
gs
inc
cmc
rcl
xchg
sbb
adc
mov
js
cs
push
nop
clc
sbb
loop
push
movsb
pcmpeqb
outsb
add
incb
inc
vmovntpd
mov
arpl
sahf
xchg
adc
stc
repnz
je
inc
push
inc
mov
andb
sbb
adc
sub
pop
jne
cwtl
shrl
out
loopne
jns
sbb
lret
mov
inc
fisubl
sbb
shrb
xchg
and
push
aad
adc
push
faddl
sbb
shrb
sbb
jno
pushf
and
jp
ja
imul
add
dec
orb
pusha
fdivr
movsb
in
and
ss
pop
scas
jmp
xchg
rclb
cmp
push
cltd
popf
test
data16
push
popf
in
add
stos
mov
aas
popf
mov
out
popa
ret
and
movsl
insl
add
and
xchg
out
pop
aad
jg
aad
mov
inc
mov
lcall
mov
sbb
sub
nop
iret
scas
out
xchg
movsb
mov
std
xchg
popf
xchg
cmp
dec
fldt
bnd
pop
xchg
push
dec
jl
mov
adc
cwtl
pop
loopne
or
ret
andb
mov
cmpsl
add
or
clc
clc
sbb
in
movsb
fidivrl
mov
or
mov
imul
out
xchg
jg
pop
leave
popa
aad
and
movsl
out
stos
mov
lods
push
gs
or
int3
mov
es
mov
fld
sub
sub
dec
sub
rcrb
xchg
inc
outsl
pop
xchg
btc
add
mov
sti
xchg
sbb
mov
or
sbb
test
and
sub
push
ret
cmpsl
rorl
adc
jno
sub
adc
cs
cmp
cmpsl
adc
aas
pop
pop
cmpsb
repz
imul
jo
dec
pushf
add
sub
add
shll
test
sub
lds
pop
mov
adc
adc
cmp
xor
xchg
inc
and
repnz
in
cmp
inc
xchg
jb
dec
mov
ficompl
push
xchg
dec
ret
movsb
dec
fiadds
test
fstps
sub
mov
add
fnstenv
loop
push
inc
xchg
arpl
je
lock
repnz
inc
xchg
imul
in
sti
mov
lret
or
adc
xchg
xchg
out
int3
out
or
negb
call
push
lods
cmp
dec
cmpsb
mov
mov
mov
clts
adc
mov
or
pop
dec
jo
lret
mov
xor
out
sbb
dec
roll
mov
xchg
addr16
cwtl
jge
xchg
add
adc
inc
repnz
mov
dec
mov
sub
xor
mov
push
fs
mov
xchg
cmp
popf
or
enter
xchg
ficompl
loopne
stc
scas
loop
aas
cli
hlt
stc
sbb
fmul
into
les
pop
mov
pop
call
cmp
sbb
pop
sub
pushf
test
add
and
in
pop
xor
or
into
cmpsb
xchg
and
pop
mov
stc
push
mov
adc
xchg
sub
and
outsb
orl
out
sub
sbb
add
out
fpatan
ja
les
roll
loopne
test
push
sub
enter
hlt
push
push
dec
jnp
dec
andb
push
in
sbb
call
fistpll
fisubs
std
outsb
inc
dec
sub
or
cmp
in
out
das
dec
nop
imul
roll
pop
xabort
dec
decl
xor
add
add
dec
fs
enter
shr
mov
in
nop
dec
mov
repz
test
pop
mov
out
rorb
mov
add
shll
mov
stc
dec
into
ljmp
add
pop
xor
sub
pop
mov
pop
in
add
sti
aam
inc
jb
adc
sub
pop
pop
push
push
out
dec
dec
and
or
mov
or
out
xor
pusha
cmpsb
sub
pop
jnp
int
ret
out
or
sub
cmc
jmp
aas
jo
add
fimull
mov
gs
xchg
dec
fwait
leave
stos
addr16
jbe
mov
xchg
daa
mov
jecxz
mov
aas
mov
lret
adc
loopne
mov
cld
jbe
jno
or
test
jns
insl
fcmovnb
andb
jl
mov
jmp
cs
lds
into
fbld
push
outsl
and
mov
or
les
rorl
mov
in
add
push
and
or
adc
sub
push
xchg
push
cmpsl
sub
mov
cmc
imul
mov
cwtl
jb
fwait
int
pop
loopne
add
loop
aad
or
pop
xlat
adc
call
push
pop
sub
pop
lcall
ljmp
cwtl
cmpsb
scas
xchg
xor
jae
pushf
push
rcr
sub
sub
adcb
pop
push
cltd
push
insl
icebp
mov
and
pop
lods
out
sub
xor
and
mov
pop
fsubrp
scas
test
cmc
testb
jp
and
sub
stos
sbb
lods
out
call
cs
add
fdivr
pop
fstps
bound
out
fcoml
les
push
add
mov
pop
jno
jmp
scas
pop
cmp
icebp
icebp
loop
shrb
or
int3
addr16
inc
sub
stos
shl
sbb
lds
cwtl
test
jle
loopne
dec
stos
xchg
into
loop
out
pop
hlt
cmp
sahf
lock
push
bound
popa
test
or
adc
sub
shrl
xchg
ss
cmp
out
sti
or
pop
jmp
les
das
jo
xor
fimuls
lret
push
push
push
cmp
insl
test
mov
insb
and
mov
clc
inc
lret
out
sti
in
mov
xchg
push
dec
pop
movsl
ret
dec
lret
ja
add
ret
bound
sti
rcll
xchg
mov
shlb
push
cmp
nop
cmp
mov
nop
icebp
push
cli
adc
xor
sbbb
cmp
nop
and
pop
test
jnp
into
sbb
push
nop
dec
xchg
rclb
pop
and
call
insl
add
adc
sbbb
xchg
or
cmp
cmp
push
xor
mov
inc
jge
mov
pusha
sbb
hlt
xor
lret
pop
incb
movsl
and
xor
dec
notb
sbbb
jne
mov
aaa
sub
cli
add
sbb
add
lods
subl
insb
mov
sub
lods
dec
pop
rolb
call
add
jmp
inc
stc
rcrb
sub
mov
and
scas
cmp
adc
dec
mov
aam
jne
jne
sbb
jle
pusha
jae
adc
pop
or
adc
imul
lcall
jns
inc
rolb
xor
loopne
mov
bnd
jne
jmp
mov
loopne
jns
and
hlt
loope
rcl
je
cmc
adc
push
jns
nop
push
mov
movsl
movsl
in
in
jnp
fisttps
cs
add
scas
sbb
inc
inc
andb
in
mov
sbb
inc
xchg
or
test
insl
in
pop
inc
sbb
inc
jne
out
pop
aam
fimuls
xorl
push
dec
lods
pop
cmp
and
mov
fwait
out
adc
scas
add
mov
inc
xchg
ss
xor
or
xor
and
mov
cmc
inc
cs
rorb
test
xor
mov
mov
cli
std
js
mov
cltd
pop
cltd
jae
fsubrs
icebp
es
adc
mov
imul
test
cmp
mov
sub
push
movsl
push
sbb
cmc
loopne
test
add
outsl
dec
out
out
adcl
pop
bound
mov
or
movsl
sub
lock
dec
mov
jmp
outsl
xchg
fldenv
dec
sbb
clc
jno
rsqrtps
inc
mov
mov
xlat
xchg
ret
cli
mov
push
pusha
into
xchg
andb
in
pushf
xlat
jg
mov
popa
data16
inc
fstpt
pop
loop
lods
push
jmp
and
mov
jecxz
int
popf
dec
outsb
push
arpl
push
jno
cmpl
fstpt
push
xchg
pop
add
and
lods
xchg
cmp
cmp
mov
pop
insl
lods
or
xor
fwait
leave
imul
xorl
int3
and
popf
sbb
popa
pushf
ja
fsubrp
adc
std
nop
out
adc
les
or
jle
mov
inc
mov
call
mov
xchg
xchg
mov
add
sar
push
inc
inc
add
sbb
cmp
pusha
imul
pop
stos
push
xchg
jle
call
sbb
jl
loopne
adc
dec
push
and
jl
jnp
sbb
lahf
mov
mov
fs
popa
and
call
addr16
pop
in
xchg
fidivs
popf
aas
inc
mov
ljmp
push
out
cmp
lods
pushf
in
and
sub
jne
jp
enter
int3
iret
or
jmp
pusha
sub
clc
jp
rcrl
ljmp
pop
je
sbb
pop
mov
push
xchg
jmp
xchg
mov
mov
decl
push
sbb
andl
pop
add
mov
out
or
sahf
xlat
adc
leave
push
mov
push
push
movsl
and
sbb
mov
fldcw
xlat
mov
push
test
sti
pop
aad
dec
inc
push
hlt
and
sub
out
or
sahf
pop
lds
push
add
add
mov
jns
inc
xchg
es
mov
sarb
inc
adc
adc
in
into
and
xor
xchg
adc
and
mov
fsubrl
mov
cltd
mov
push
mov
mov
and
addr16
test
addr16
add
pop
dec
mov
xor
ljmp
call
cmp
push
xorb
dec
mov
inc
or
ja
pop
ret
pop
push
fnstsw
dec
out
pop
mov
push
lret
push
shll
outsl
xor
js
mov
test
mov
jmp
cltd
pop
mov
jno
lahf
imul
mov
mov
insb
or
call
call
fistl
lret
mov
jmp
push
pause
loopne
pop
mov
aaa
shlb
psrld
movsl
jbe
scas
mov
or
loopne
xchg
sub
mov
rcrb
dec
shlb
mov
or
sub
aas
into
outsb
gs
das
inc
xchg
ret
aaa
mov
out
inc
jo
imul
loop
push
flds
daa
mov
cmc
lcall
add
jecxz
cmpsl
cld
insl
jae
cmp
fs
addb
cmp
fsubrs
lcall
inc
mov
jae
mov
sbb
rcrl
jmp
loop
loop
push
adc
mov
mov
mov
pop
or
sub
cmpsb
push
ret
jno
inc
and
adc
xchg
or
fistpll
adc
hlt
sub
sahf
xor
pushf
fs
test
jp
ds
das
arpl
mov
mov
sbb
movsl
jecxz
mov
pop
lods
adc
pop
lahf
mov
pop
imul
jnp
jns
xchg
leave
stc
sub
int3
shr
mov
jl
ds
out
cwtl
imul
dec
xchg
loop
xchg
loope
insl
jbe
cmc
pop
in
jnp
xchg
cmc
jg
ret
aaa
inc
sahf
dec
inc
add
jge
fprem1
fstpl
negl
adc
test
loopne
int3
mov
push
jg
inc
das
mov
into
es
and
jb
push
add
mov
clc
fdiv
mov
mov
dec
notl
push
mov
sbb
sub
bound
sub
mov
push
mul
adc
nop
js
lret
cld
dec
lock
push
mov
mov
add
lret
inc
push
push
mov
push
mov
push
ret
sub
fwait
xor
arpl
dec
push
pop
jmp
xor
xchg
stos
out
jge
mov
jge
inc
inc
push
stos
mov
repnz
adc
enter
movsl
ret
or
pusha
add
rcr
pusha
dec
sbb
dec
xchg
fdivrp
jns
lea
rcrb
add
gs
mov
xor
cs
dec
clc
js
lods
jg
outsb
sbb
ds
adc
pop
fwait
lret
sbbl
repnz
lods
js
add
mov
jns
sti
nop
mov
es
fidivl
lds
push
fistl
std
jne
jp
mov
adcl
xchg
div
mov
js
add
movq
nop
push
mov
xorl
cmp
daa
shl
xchg
xchg
cs
neg
sub
ss
xor
push
stos
call
out
inc
out
push
or
cmp
testl
mov
fstp
test
subl
mov
and
lcall
xchg
out
xchg
mov
lods
out
jle
dec
les
ja
loop
in
xor
push
jp
movsb
enter
cmova
and
push
dec
inc
pushf
xor
add
cs
int3
aam
xor
ficompl
aas
mov
popf
int
pop
divl
cmp
adc
push
loopne
shrl
xchg
xor
push
cli
cs
cwtl
in
rcl
or
popf
jno
sarb
stc
enter
popf
add
mov
jae
call
imul
push
sbb
and
imul
sub
loopne
ficompl
jbe
add
xchg
lock
add
xchg
ret
inc
repnz
mov
enter
xchg
jo
sub
loopne
push
dec
xchg
out
popf
mov
out
mov
cmc
imul
sub
lret
jo
xchg
int3
test
mov
inc
adc
jl
or
adc
jno
icebp
push
mov
clc
sahf
mov
fimuls
mov
repz
fnstsw
insb
pop
xchg
mov
clc
insl
aaa
orb
repnz
scas
mov
mov
fildll
and
push
lret
lods
jg
pushl
push
push
xchg
xor
fmulp
mov
inc
dec
lds
jmp
dec
insl
dec
mov
cwtl
js
lcall
fiaddl
in
jecxz
in
and
dec
jle
sbb
fxch
mov
or
mov
or
or
inc
sbb
std
mov
loopne
dec
adc
mov
shlb
test
loopne
sbb
push
addr16
fcomp
aam
test
mov
jo
push
mov
cmp
add
dec
inc
in
pusha
mov
inc
in
jnp
shll
xor
lods
mov
mov
lds
ja
xchg
cltd
test
jmp
mov
fidivrl
pop
and
mov
call
out
cwtl
ror
sbb
adc
clc
mov
mov
lret
lods
popa
mov
jge
fisubs
add
cwtl
in
cmp
xlat
scas
clc
rcl
notb
push
leave
lahf
out
push
pop
fcoml
stc
shl
aam
cmc
add
mov
outsb
mov
xor
fidivrl
rcll
repnz
shr
scas
pop
shlb
mull
cli
arpl
or
rcrb
out
push
jne
push
popf
cmpl
jb
cmp
pop
ljmp
dec
xchg
inc
mov
ret
pusha
ret
jp
mov
and
lock
mov
jnp
mov
fdivrs
gs
adc
push
xchg
out
dec
lret
cmc
inc
mov
mov
cld
call
aas
not
popa
xlat
sub
adc
in
int
jecxz
pop
push
loop
adc
push
adc
sub
sbb
sbb
push
test
popf
adc
dec
and
mov
in
cmp
imul
mov
rorl
pop
and
data16
repnz
out
push
lds
add
loop
xchg
inc
mov
cmc
pxor
sub
xchg
scas
mov
addb
orb
or
mov
push
push
pusha
ret
sub
ret
add
push
inc
in
pop
jecxz
jns
movsl
cld
lcall
push
dec
inc
sub
sub
mov
inc
outsb
mov
dec
add
mov
ficoml
xchg
xchg
mov
mov
and
push
adc
mov
sub
jno
data16
dec
in
test
loop
jmp
sub
mov
test
rcll
loop
stos
mov
fnsave
mov
mov
iret
out
jb
insb
push
aam
add
scas
aas
ficomps
insb
jg
push
mov
sarl
xchg
or
fsub
out
pushf
lahf
bound
iret
adc
fldl
cmp
push
in
mov
pop
orl
test
loop
cmpsl
orb
idivb
lods
mov
icebp
stc
and
fwait
sbb
cmc
push
int3
add
pop
loope
push
cmp
cmc
push
mov
lds
adc
loop
push
hlt
xor
mov
cltd
stos
nop
aad
jge
mov
xor
orl
into
int3
pop
push
dec
jle
jg
and
dec
cld
stos
cbtw
into
mov
jns
pusha
sub
sbb
sub
lods
repz
shll
jmp
loope
push
mov
leave
out
push
mov
mov
inc
push
in
xor
paddusb
dec
je
insb
loop
push
jmp
jmp
push
push
jg
lods
cmp
imul
push
push
lahf
add
or
pop
mov
popf
sbb
gs
stos
lcall
lds
jecxz
loop
add
das
jle
popa
xchg
add
xchg
addr16
xor
push
fdivrs
ss
shlb
sbb
mov
loopne
xchg
dec
scas
gs
fiadds
out
fidivrl
mov
xchg
and
cli
sub
stos
js
and
xor
sub
inc
xor
mov
mov
fsubrl
jg
and
pop
jb
je
sub
xchg
mov
outsl
je
mov
lret
inc
dec
mov
daa
inc
cld
aaa
add
xchg
mov
push
shlb
adc
enter
cmp
and
inc
mov
imul
xchg
inc
aaa
xor
into
xchg
push
push
popl
pop
push
je
in
mov
pusha
xor
or
lcall
cs
rorl
ljmp
xchg
sbb
pop
cmp
movsl
sub
jnp
lock
inc
xor
push
push
stos
int
scas
xchg
shrb
cli
test
bound
xor
lea
dec
in
xor
js
add
mov
xor
sbbb
push
xchg
add
mov
mov
out
pop
xchg
sbb
dec
mov
jg
xchg
lret
mov
push
int3
jns
add
jl
mov
add
mov
les
out
fs
pusha
into
jp
inc
nop
jmp
shr
and
push
mov
or
stos
push
aaa
in
xchg
sbbb
push
enter
negl
mov
mov
pop
scas
pop
sub
cmp
push
mov
mov
mov
adc
movsl
sub
ja
adc
and
inc
les
loopne
and
mov
inc
loope
out
dec
decb
mov
inc
fwait
jnp
pop
mov
inc
int3
mov
cmpsl
je
ljmp
inc
fcoml
mov
jns
add
arpl
or
loope
xchg
jp
pop
push
xlat
test
xchg
sub
out
and
cmp
jbe
cs
push
pop
xchg
mov
aam
jns
add
pop
sbb
inc
jle
jae
pop
inc
sbb
cmp
add
loop
mov
mov
mov
jae
rorl
out
sbb
cld
ljmp
push
inc
inc
rcr
jbe
stc
cmpsb
imulb
push
out
scas
mov
adc
cmp
add
dec
xor
mov
test
bnd
mov
mov
push
int
sub
fcomp
mov
out
loope
sub
cwtl
push
xchg
scas
fwait
push
jmp
add
pop
inc
mov
cltd
pop
mov
sarl
mov
dec
adc
int
jbe
cltd
sbb
cmpsb
lahf
mov
ret
add
arpl
in
jg
in
mov
ret
cld
adc
mov
mov
or
inc
dec
mov
leave
das
lods
out
mov
add
pop
pop
dec
mov
dec
fs
or
enter
xchg
in
jne
inc
xchg
aas
sbb
dec
pop
pop
inc
pop
popa
out
cmp
xchg
aas
ret
sub
push
sbb
out
rclb
in
test
pop
cmp
mov
cmp
or
fcmovnb
cmp
mov
ljmp
lahf
cmc
pop
leave
adc
mov
aaa
stc
loopne
sbb
push
out
insl
xor
jge
xorl
sub
test
dec
shrb
dec
test
test
ja
decb
pusha
pushf
call
int3
inc
push
sbb
rol
dec
pop
test
jecxz
ds
jb
lock
sub
scas
sbb
sar
or
sti
jno
rclb
js
dec
in
mov
jno
sti
out
jae
add
fidivs
out
sti
xchg
or
cli
fnstsw
and
loop
out
or
pop
repnz
mov
mov
push
add
mov
ret
cwtl
pop
push
or
ficoms
push
les
fldenv
test
adc
adc
add
mull
insl
mov
and
mov
hlt
and
sub
push
inc
xchg
mov
mov
mov
adcl
lea
adc
cs
daa
insl
enter
sbb
mov
xlat
cmp
loopne
inc
fnstcw
stc
dec
xchg
mov
and
push
mov
jae
dec
fsubl
std
cmp
arpl
adc
sbb
rolb
push
add
mov
movsb
xor
mov
mov
lds
sbb
mov
push
adc
div
dec
mov
dec
xor
mov
cmpsl
in
sub
mov
cmp
inc
lea
adc
test
sub
ret
cwtl
ret
dec
daa
aad
scas
inc
xchg
mov
add
cli
dec
add
sub
dec
jne
stos
shlb
cmpsl
push
clc
jl
gs
fcomi
fdivl
inc
pop
movsb
mov
jg
lahf
loopne
pop
pop
stc
cwtl
pop
inc
xchg
mov
sub
xchg
inc
or
push
sbb
jns
adc
mov
dec
push
add
fisttpll
push
enter
add
test
insl
mov
jmp
testl
cmp
jne
add
shll
inc
mov
xor
adc
pusha
shl
xchg
inc
mov
mov
test
mov
cmp
push
inc
dec
neg
fsubp
cs
lea
cmpl
out
lock
xor
rol
in
repz
lods
ds
inc
xor
sarb
sti
xchg
sahf
jmp
jecxz
aad
mov
shll
movsb
fwait
lds
adc
lods
mov
cmp
sahf
mov
pop
inc
movsl
iret
or
mov
or
jbe
test
or
fs
jl
push
inc
aam
cmp
cli
test
pop
sbb
ja
and
or
mov
fstl
jnp
ficompl
loope
stc
mov
add
add
adc
jo
xchg
xchg
lret
fdivl
sahf
or
stos
fisttpl
mov
mov
pop
fs
fidivrl
dec
inc
jne
repz
test
add
mov
push
lret
inc
xor
cmp
fldcw
mov
push
or
add
icebp
pusha
mov
aas
lahf
mov
fidivl
pusha
pop
repz
aad
out
jnp
lea
add
add
imul
push
fstl
out
pop
mov
cld
push
aad
ljmp
cmp
lahf
pop
lock
clc
cmpsl
rcll
lcall
push
mov
js
jns
out
jb
loop
icebp
adc
jg
inc
xchg
cltd
adc
test
sub
or
and
xchg
aas
dec
outsl
mov
scas
mov
pop
popf
fwait
xor
dec
or
adc
nop
push
push
jae
popf
lahf
or
out
add
mov
mov
popf
cmp
add
cmpb
dec
jp
rolb
outsl
dec
mov
and
push
push
mov
or
test
mov
push
ja
dec
jg
movzwl
cld
jns
out
mov
inc
leave
mov
imul
andl
mov
imul
insl
push
xor
jnp
xchg
dec
pop
mov
add
pusha
adc
aad
and
sub
and
mov
inc
mov
leave
xchg
jmp
xchg
call
nop
lret
icebp
add
in
rol
stc
xor
loope
popa
and
movsb
sub
lret
lret
bound
sarl
add
pop
int
sahf
mov
cmp
movsl
xchg
cltd
fidivrs
aas
out
inc
and
cmp
push
call
fistpll
push
mov
pop
cmpsl
stos
imul
push
sti
arpl
loop
insl
add
jle
push
data16
mov
incl
in
sub
cmp
lods
stos
mov
sub
mov
lcall
outsl
rorl
andb
aas
dec
mov
lret
cli
inc
hlt
inc
push
adc
mov
inc
out
leave
and
mov
fs
pop
lods
lahf
sub
loop
stc
test
mov
or
cwtl
scas
dec
pop
mov
mov
sti
movsl
or
cmp
lods
loop
ljmp
imul
push
cld
xchg
addr16
add
mov
in
xor
jge
arpl
adc
lods
jp
jo
add
popa
imul
xor
inc
sbb
into
cs
mov
std
lcall
cwtl
xchg
fwait
sbb
in
cmc
pop
sub
or
mov
insb
jo
cmp
pop
pop
and
addr16
cmpsl
rcll
mov
setl
dec
imul
adc
frstor
jg
fstpl
inc
sahf
loopne
stos
cmp
jmp
jnp
idivl
jbe
push
stos
jge
je
fists
xor
in
lahf
push
jecxz
ljmp
rcrb
and
xchg
stc
loopne
push
ret
mov
das
sahf
push
jns
mov
xchg
inc
cmp
outsl
push
push
outsl
push
out
xchg
push
scas
movsb
cmpsb
mov
lds
add
repz
pop
xlat
inc
mov
fiaddl
sub
cmp
dec
jb
jge
ficompl
xor
and
pop
frstor
or
lret
pop
jb
inc
js
pop
dec
add
data16
lods
mov
mov
adc
into
ss
arpl
popf
out
pop
pop
rcrl
hlt
pop
pop
add
dec
outsb
xor
push
sti
fsub
sbb
nop
sbb
push
loope
xor
inc
lock
in
inc
adc
push
pushf
push
dec
sti
cmp
mov
imul
lcall
push
les
mov
lock
xor
pop
xor
push
movsl
fstps
into
push
push
sub
inc
pop
or
mov
stos
lods
ss
sub
lods
adc
aam
out
pminsw
cmp
mov
mov
je
add
push
pop
mulb
mov
dec
fidivrl
rcrb
dec
mov
mov
ds
in
xchg
cmpsl
inc
pop
inc
test
lret
movsb
inc
add
jl
lahf
cmp
cmpb
popa
inc
gs
cmp
mov
loope
mov
xchg
in
andl
popf
stos
aad
xor
and
mov
adc
int
icebp
sub
outsb
add
icebp
std
mov
add
ljmp
sbb
mov
dec
jecxz
cmp
notb
push
jmp
sbb
jae
enter
and
jno
sub
push
adc
cli
push
lock
leave
push
out
adc
inc
mov
ret
in
xchg
in
and
pop
or
stos
aam
xor
mov
sub
sub
imul
mov
ja
lret
stc
or
push
xchg
aas
dec
test
addr16
in
stos
movsl
mov
inc
fdivrl
or
sbb
js
mov
testl
push
arpl
pop
pushl
push
mov
leave
sbb
push
pusha
nop
mov
sub
push
jne
shll
test
sahf
in
repnz
in
mov
stc
xor
or
push
test
add
out
push
and
decb
loopne
ja
in
sbbl
dec
lret
mov
mov
xchg
test
cmp
aaa
or
xor
ds
inc
push
call
call
in
cs
push
clc
fwait
inc
int3
add
push
xchg
add
sarl
cmp
testb
sbb
pusha
addr16
mov
insb
jg
out
cli
sub
xchg
outsl
adc
fs
icebp
stos
fwait
xchg
push
sub
sub
out
xor
inc
test
aas
popa
xlat
out
stos
sbb
add
xchg
add
aaa
pop
leave
dec
mov
dec
mov
dec
or
pop
pop
and
mov
push
aad
push
pop
scas
lret
enter
pop
mov
cmp
fstl
xchg
fdivs
ljmp
jb
or
lods
test
lea
sub
out
mov
jecxz
and
adc
pusha
loopne
icebp
outsl
out
mov
lds
aad
jp
pop
das
sbb
sub
xor
nop
and
sbb
jnp
aaa
inc
test
or
test
mov
mov
xorb
xor
dec
movsb
push
push
mull
leave
push
movl
xchg
dec
jns
repz
fwait
clc
clc
or
daa
cmp
ret
adc
notb
rcrl
xchg
pushf
mov
mov
or
jbe
es
cmp
test
sbb
leave
leave
mov
or
adc
adc
lock
mov
cmc
test
jo
mov
lods
cmc
ja
stos
mov
adc
cmp
jne
sbb
into
and
mov
xchg
insb
mov
mov
mov
imul
jbe
dec
dec
jno
push
imul
daa
xchg
pop
fsubrs
nop
push
cmp
clc
dec
or
ret
popf
rcl
cmc
mov
rol
cs
fcmovbe
imul
lcall
mov
sbb
imul
jne
cwtl
dec
adc
jl
dec
cmpsb
and
cs
pop
push
sbb
cmpsb
stos
fistps
rcrl
dec
outsl
or
in
es
ljmp
xchg
push
rcrb
leave
hlt
addr16
je
and
jmp
in
xor
test
psrlw
stos
sbb
xor
notl
movsl
mov
mov
arpl
cmp
mov
fnstenv
jge
enter
jecxz
inc
fisttpl
push
fs
loop
andnps
ficomps
in
pushf
xchg
fcmovb
test
daa
xchg
insb
fsubr
inc
add
arpl
icebp
adc
and
ja
icebp
enter
fs
pop
loopne
fadds
outsb
rcl
mov
outsb
lds
loope
cli
push
insb
sub
or
iret
mov
pop
inc
outsl
out
pop
sub
push
scas
je
mov
inc
movsb
mov
mov
sbb
rol
push
push
loop
lcall
cmp
insb
into
cld
jne
std
lock
jle
lock
sbb
xchg
jb
push
xchg
stc
pushf
cli
repnz
dec
addr16
mov
xchg
stos
xchg
xchg
arpl
xchg
pop
iret
stc
dec
cmp
orb
js
call
xor
fcoms
fnstsw
iret
repz
enter
mov
mov
rorb
jae
hlt
adc
fwait
call
jecxz
icebp
lds
push
xor
xorb
cmp
in
jns
and
dec
repz
or
repnz
mov
addr16
int3
es
cld
xor
or
and
mov
int
xchg
fwait
int
mov
sub
out
rclb
andb
bound
push
idivl
push
sub
xor
or
ud0
push
inc
ja
mov
adc
push
fisubs
sub
idivb
cmp
jo
jno
notb
jne
out
add
jnp
andb
push
pop
fldenv
aad
mov
stos
fimull
sbb
jne
les
sub
dec
fdivs
inc
dec
add
cmpl
jno
ret
adc
aas
inc
test
push
xlat
xor
fldenv
fistl
sub
fisubl
lods
xor
add
jno
dec
sub
aad
arpl
out
jge
in
cmpsl
lcall
or
insb
sbb
cmp
jecxz
xor
in
insl
sub
xchg
pop
dec
adc
es
push
dec
jb
and
mov
data16
out
aam
int3
js
jmp
fstpt
sub
scas
test
xor
and
into
les
push
dec
lahf
mov
fs
lock
mov
jo
pop
jae
push
test
inc
cltd
outsb
in
scas
cmc
cs
push
mov
and
pop
mov
imul
sbb
rol
shll
sbb
imul
mov
mov
jbe
push
push
pop
xor
pop
and
rcrl
xchg
pop
sbb
divl
xchg
lcall
pop
hlt
adc
push
jl
test
push
and
jp
pusha
jne
add
adc
adc
icebp
mov
testb
mov
lods
fisttpll
sahf
adc
scas
cld
test
aam
outsb
or
mov
sub
pop
ds
push
jbe
aaa
ljmp
fldcw
roll
jle
jge
lea
sub
mov
pop
loop
add
incl
aam
mov
mov
dec
sar
push
mov
xchg
hlt
subl
dec
mov
int3
push
das
outsb
mov
jmp
add
add
les
popf
cmp
jl
rcl
push
lahf
int
in
xchg
add
sbb
push
aam
and
add
add
pop
dec
add
pop
sub
hlt
mov
mov
add
daa
inc
mov
add
pop
stos
addr16
mov
xor
rolb
or
test
insl
and
cmp
dec
mov
mov
loop
dec
fnstcw
pop
negl
bound
loope
stos
mov
mov
and
xchg
les
or
mov
xor
adc
call
and
ss
xor
dec
mov
push
adc
cmp
ds
sub
ds
dec
sbb
or
inc
hlt
and
pop
mov
fs
xchg
mov
jae
jge
in
ds
nop
outsl
adc
aad
cld
mov
jl
pop
movsb
iret
add
scas
mov
push
cmc
sbb
rorb
test
daa
mov
jns
cmp
daa
add
movsl
cmp
jb
mov
jmp
mov
aaa
add
adc
fnsave
sub
orb
jmp
push
inc
daa
or
in
mov
push
xchg
push
es
cltd
inc
out
dec
ss
mov
dec
cmp
push
cld
jae
fdivrl
int3
mov
mov
cmp
cmp
outsb
dec
pop
push
xchg
mov
push
jmp
cmp
mov
cmp
arpl
adc
fmuls
cmpsl
adc
pop
mov
out
shrb
ja
dec
scas
pop
xchg
add
cmpsb
jb
mov
add
push
xlat
mov
inc
mov
rorl
mov
push
js
scas
xor
cmp
in
popa
in
or
cltd
jge
mov
sub
xchg
sbb
shll
inc
idivb
fdivl
test
inc
pushf
int3
std
shr
mov
in
push
push
clc
and
xor
mov
test
xchg
cmp
in
jp
out
mov
mov
out
aaa
mov
test
fbld
outsb
aas
inc
cmp
inc
mov
pop
adc
push
inc
or
int3
lds
mov
mov
insl
stos
dec
xchg
je
pop
test
xchg
call
add
fiadds
jne
jmp
jne
dec
inc
pop
adc
aad
mov
fwait
orb
mov
jb
loope
adc
testl
sti
mov
vpcmpeqb
adc
sub
jecxz
xchg
repz
lcall
lcall
scas
cmp
push
inc
inc
dec
sub
outsb
push
sbb
mov
mov
mov
pop
lahf
sub
inc
sub
mov
adc
push
jne
fistpll
lea
sbb
xor
in
mov
lret
icebp
pop
mov
cmp
xchg
cmp
das
sub
push
cs
subl
push
movsb
jge
iret
lcall
push
adc
enter
addr16
jle
or
cmp
xchg
sti
and
lock
xor
dec
call
adc
jns
ds
push
mov
dec
stos
sbb
data16
stos
imul
mov
aas
movsl
inc
das
push
test
aas
cwtl
inc
sub
jl
rorl
repz
int3
push
inc
in
xor
push
inc
jnp
jno
pop
pop
iret
push
mov
push
cmpsl
in
inc
bound
into
ja
cmp
nop
mov
push
mov
aam
xor
movsb
or
sbb
int3
sbb
jmp
sbb
das
jg
cmp
adc
jb
and
ds
cmpsb
add
adc
add
rorl
inc
dec
lret
adc
ficoml
faddp
lods
jbe
iret
pop
js
sbb
mov
daa
mov
sarl
or
inc
dec
adc
pop
and
pop
jle
sub
mov
mov
loope
and
inc
popa
xchg
jae
jns
mov
cmp
mov
call
and
js
and
adc
mov
jae
mov
out
jno
push
es
mov
aas
jge
dec
mov
adc
xchg
xor
insl
add
rol
out
ds
adc
and
dec
repz
popa
js
aaa
mov
mov
dec
shlb
mov
mov
cwtl
inc
lods
jae
iret
vpunpcklbw
ss
and
fiadds
mov
jp
dec
test
mov
push
aad
xchg
pop
or
mov
xor
test
mov
out
mov
sub
pop
jo
or
push
push
aam
mov
jl
mov
mov
push
dec
cwtl
arpl
outsl
mov
jbe
push
jbe
lods
ja
test
cmc
test
push
or
pop
pushf
cwtl
into
mov
sbb
xor
mov
out
imul
test
mov
mov
into
int
ficomps
push
mov
add
test
mov
int
cmp
jns
inc
cld
test
jbe
sub
dec
mov
scas
and
negb
test
test
je
xchg
push
xlat
sbb
adc
int
xlat
dec
aad
jnp
mov
xor
mov
sbb
movsb
dec
push
int3
gs
push
xor
cs
or
daa
imul
jle
scas
sbb
push
aam
das
stos
loope
mov
dec
sbb
xchg
sbb
xchg
ja
scas
cmp
lahf
bound
xor
pop
cwtl
mov
adc
pop
outsl
cmp
stos
out
add
mov
xchg
mov
pop
mov
mov
jp
das
pop
jmp
mov
enter
rol
xchg
jae
cmpsb
and
sbbl
aam
cs
mov
dec
mov
jmp
dec
and
fdivp
lock
ljmp
cltd
adcb
aad
cs
pop
jmp
inc
xor
or
inc
adc
xchg
jns
sti
in
and
imull
mov
popa
rcll
mov
pop
mov
inc
arpl
int3
rorl
int3
ret
adc
test
mov
ret
xchg
mov
dec
pop
insb
or
loope
sub
repz
cmpsl
les
rorb
call
jo
sbb
movsb
mov
xchg
push
fsubp
and
pop
leave
int
mov
mov
jne
scas
xor
or
add
ds
cmp
xchg
test
jae
adc
add
dec
dec
lds
cmp
cs
int
fiadds
pushf
lret
mov
mov
in
pusha
sbb
cmp
mov
in
cmpsl
inc
mov
lcall
mov
insb
or
repnz
outsb
add
out
cmp
test
jnp
mov
ja
cmp
call
xor
mov
movsl
jge
sub
adc
mov
adc
mov
sahf
testl
repnz
adc
das
push
xchg
out
sub
pop
mov
push
outsb
xchg
iret
popa
in
cmp
insb
xor
inc
inc
stos
cltd
jecxz
jo
es
pop
inc
mov
rcll
jno
pop
dec
in
sar
dec
mov
mov
lods
movsl
push
int3
aaa
je
dec
xor
push
subl
push
call
sarb
cmp
dec
insl
sbb
repz
repnz
lods
int
xchg
jp
subl
pop
add
mov
push
iret
nop
fildl
adc
push
dec
sbb
or
pop
out
mov
es
push
add
add
fs
movsl
jl
push
fldl
mov
adc
or
fcomip
xor
notb
mov
sbb
push
and
push
fsubl
aaa
sarb
push
ret
call
pop
das
imul
cmp
jno
inc
xchg
pop
pop
fiaddl
or
jns
push
fs
out
adc
cmp
leave
loope
pop
cld
or
inc
sbb
test
hlt
mov
add
lods
icebp
push
arpl
jns
mov
mov
scas
pop
add
imul
ret
sbb
jbe
clc
fsts
test
loop
imul
jae
push
sbb
mov
sub
mov
cmpb
call
lock
xchg
xchg
ror
cmp
ja
push
or
cmp
adc
jle
mov
dec
into
push
add
mov
or
push
pop
adc
shlb
mov
adc
pop
or
rcrl
leave
cs
fbld
test
push
fdivl
pop
pop
dec
mov
adc
pop
cltd
loop
xor
mov
js
sti
in
push
xchg
cs
ds
out
mov
and
data16
sbb
push
fwait
aad
faddp
or
movsl
cld
dec
cmc
inc
pop
scas
int3
psubq
js
pop
and
pop
and
jl
in
pop
push
and
in
mov
repz
pop
cmp
xchg
and
leave
movups
or
mov
sub
or
jle
fistl
xchg
cmp
test
test
jae
xchg
mov
or
jns
repnz
es
or
stos
cmpl
jle
lods
inc
sub
test
aad
fwait
stos
xor
pop
push
in
pop
sub
addb
pop
jl
add
test
sub
jbe
dec
loopne
mov
sub
inc
push
idivl
sbb
insb
movsl
push
inc
int3
lds
mov
adc
or
call
das
sub
sub
mov
cmp
cmp
pop
and
in
xchg
jg
not
xchg
or
pop
sbb
aas
mov
xchg
insl
insl
xor
adc
daa
clc
xchg
mov
and
int
dec
inc
mov
push
hlt
addr16
test
popf
pop
xchg
fnsave
mov
and
mov
arpl
notl
push
push
mov
mov
pop
test
jae
andl
movsl
pop
inc
pop
out
pop
adc
or
xchg
mov
and
ret
pusha
repz
sub
pusha
sbb
ret
sbb
ror
loop
lret
dec
pop
xchg
cld
add
push
jno
shrl
andb
mov
push
add
cld
movsb
enter
inc
int
or
inc
insb
mov
xor
sbb
pcmpgtw
xor
dec
mov
cmp
daa
fists
sbb
sti
cmpsl
jno
jle
out
dec
cmpsb
es
enter
hlt
add
cmp
movsb
sbb
push
aad
mov
inc
sbb
sbb
loopne
mov
int
stos
jnp
iret
jb
std
cmp
and
shrl
jnp
outsb
add
inc
jp
mov
shlb
mov
fcoms
mov
bound
xchg
cltd
in
jbe
imul
pop
or
mov
icebp
add
mov
imul
ret
das
gs
mov
notl
addr16
movsb
mov
push
cwtl
jl
imul
xor
or
pop
sbb
xor
mov
popa
or
pop
cltd
fisubrl
jp
je
adc
call
fsubp
hlt
xor
pop
mov
dec
sub
jge
fldlg2
jno
pop
pop
jns
call
inc
dec
aaa
outsl
call
adc
ljmp
pop
mov
icebp
push
mov
insl
add
loop
push
adc
adc
inc
testb
je
loopne
sbb
add
mov
repnz
notl
xor
repnz
pop
leave
lcall
cltd
das
mov
dec
jno
sub
mov
adc
or
cmp
mov
push
dec
mov
sbb
jnp
xor
inc
sahf
sub
das
ret
push
mov
scas
adc
jno
xchg
ret
icebp
pop
jle
scas
dec
cmpl
mov
or
xlat
int3
inc
and
shll
loopne
or
sti
fcoms
cmp
imul
xor
pop
jle
aam
rcrl
or
lock
add
aam
in
fnstenv
push
test
mov
lods
pop
and
movsb
mov
or
dec
dec
inc
cs
fcomi
insb
in
push
gs
push
cmp
sbb
sub
mov
hlt
jne
dec
fldenv
sub
rclb
test
fadd
test
xchg
iret
fidivrs
insb
xchg
sbb
inc
add
lcall
adc
rorb
movsl
jnp
sub
or
jle
fsubrp
or
add
push
adc
sbb
xchg
push
xchg
fsqrt
or
jns
scas
cmp
push
adc
pop
adc
jle
push
aam
cs
fisubl
mov
jae
fdivp
inc
push
lahf
dec
stos
push
sub
xchg
popf
mov
xchg
ficoml
outsb
cmp
sbb
inc
or
pop
bound
shr
pop
wbinvd
add
gs
mov
stos
push
mov
out
sub
inc
adc
and
out
mov
xchg
fsubrl
push
adc
js
mov
cmpb
sub
sbb
cmc
and
out
dec
jo
mov
sub
stos
sub
sbb
iret
inc
mov
loop
shl
dec
inc
iret
movsb
sbb
pushf
mov
xor
sahf
pop
ror
andb
pop
movsl
xchg
popa
sub
add
mov
lds
mov
data16
stos
mov
jno
imul
xlat
or
cltd
ret
or
fnstcw
add
cmp
pusha
and
inc
mov
cmp
call
adc
and
mov
dec
outsl
push
fdivl
and
mov
stos
push
or
add
dec
movlps
lods
je
adc
cmp
fadd
or
pop
push
cmp
ljmp
test
xchg
lret
xchg
mov
sbb
inc
and
addr16
fstl
lcall
loop
aaa
jb
dec
push
sub
iret
cli
pop
cmp
stos
xor
jmp
fucomp
dec
pop
lret
in
es
cli
adc
icebp
pop
lret
ret
push
imul
fmuls
or
xchg
aas
lds
sbb
lea
inc
clc
mov
jmp
push
jne
or
mov
pop
stos
sub
jg
mov
push
aam
adc
lods
fdivr
pop
xchg
fsubl
lock
addr16
test
stos
mov
or
imul
push
mov
popa
jb
or
insb
push
pop
std
sbb
sub
xor
mov
add
mov
inc
les
pop
cmp
xlat
xor
ss
lods
jne,pt
lods
insl
lods
int
movb
cltd
mov
or
aad
ret
out
loop
jl
xchg
call
pop
cmpsb
cmc
mov
sbb
pop
negl
andb
xchg
orb
mov
in
jnp
testl
ror
les
shrb
jge
jbe
cmp
adc
push
fcmove
xchg
pushl
or
mov
repnz
adc
or
ljmp
push
lcall
subl
mov
and
inc
sbb
add
adc
jle
and
addr16
xchg
loopne
and
mov
pop
div
jmp
movsl
lcall
push
mov
pop
lea
or
push
test
mov
or
jp
mov
and
xchg
sub
xchg
dec
out
mov
push
das
adc
mov
into
pop
out
sbb
adc
xchg
and
sbb
outsl
gs
pop
idivl
push
into
dec
cmc
clc
add
fdivs
rcrb
addr16
ja
fsqrt
push
push
popa
and
dec
seto
in
lds
xor
rcll
aam
xchg
rorl
or
vpcmpeqw
push
push
adc
leave
adc
movsb
xchg
jge
cmp
jo
push
test
dec
mov
and
mov
incl
push
pop
cmpsl
ret
jo
push
data16
lahf
xor
cli
xchg
jno
data16
test
xor
pushf
ds
xor
aaa
mov
das
xchg
lret
mov
in
mov
sub
jb
xor
lods
stos
and
pop
push
sbb
cmp
lcall
jbe
pusha
xchg
add
aam
mov
adc
test
fnstsw
pop
loope
inc
sahf
xchg
mov
or
adc
cmpsb
bound
pop
sbb
push
xor
ja
xchg
mov
mov
mov
inc
fwait
popf
add
and
pop
bound
add
mov
or
fidivs
lock
adc
pop
xor
push
push
call
addr16
xor
cmp
fwait
cmpsl
push
cmp
mov
out
mov
imul
jno
movsl
jbe
jmp
pop
jbe
in
lret
cmp
jae
xchg
scas
adc
dec
test
lock
int3
scas
mov
mov
push
ror
fdivrs
push
sbbb
add
jl
mov
sub
sbbl
jecxz
leave
jne
dec
aaa
or
imul
lea
addr16
xor
fldcw
mov
or
cmp
mov
cmpb
loope
enter
mov
jbe
xchg
mov
nop
inc
xchg
pop
out
imul
mov
adc
lret
inc
or
fcomps
or
imul
xchg
or
scas
outsb
mov
adc
aas
adc
popa
xor
jnp
test
mov
or
add
mul
cmp
jecxz
xchg
ss
mov
lret
push
jl
dec
or
add
xchg
and
push
add
dec
int
xor
xor
fisubl
in
stos
xchg
push
fwait
pop
cmp
add
mov
jge
mov
jg
pushf
scas
sbb
add
hlt
inc
dec
test
xchg
int
mov
les
les
xchg
pop
xor
call
sbb
and
dec
inc
cmp
scas
enter
aad
das
mov
repnz
dec
lods
pop
cltd
cs
mov
xchg
jns
movsb
icebp
int3
sub
lea
cmpsb
les
add
in
rcrl
and
cmp
mov
pop
jae
pop
aam
daa
jb
imul
sbb
sbb
data16
rorb
pop
mov
hlt
aas
enter
arpl
push
adc
or
inc
pop
pop
jecxz
xchg
lds
sahf
pop
mov
pop
lods
mov
repnz
push
pop
inc
rcl
in
cmp
cmp
dec
xchg
xchg
cmp
pop
cmp
xchg
cmpsb
inc
push
mov
sete
xor
xor
sub
lahf
jg
sub
mov
shrd
shlb
fsubs
inc
mov
sub
cli
mov
lcall
push
data16
or
xchg
arpl
shl
jg
and
aas
mov
jbe
shr
xor
popa
pop
xor
cmpsb
mulb
repz
ljmp
sti
jae
loope
adc
fisubs
xor
jnp
adc
mov
inc
adc
push
lret
add
outsb
loopne
inc
mov
ficomps
notb
push
lods
mov
in
push
shr
pop
pop
fidivrs
pop
lock
ss
mov
xchg
ja
out
insl
hlt
push
push
add
sti
pop
push
xor
cmc
pusha
notb
mov
jbe
or
xchg
cltd
mov
movsl
pop
movsb
out
mov
mov
push
rol
jl
fwait
aas
pop
outsb
xor
test
int
or
gs
pop
xor
je
pop
lret
push
and
popf
mov
inc
scas
inc
sub
hlt
push
int3
cli
aad
push
ljmpw
shll
or
or
icebp
call
lretw
mov
xor
scas
mov
cmpsl
testl
inc
xchg
sub
jge
jl
inc
leave
xchg
push
inc
jg
in
fisubl
xor
mov
mov
insl
loope
mov
fcompl
pop
pusha
stc
stc
leave
add
xchg
iret
fchs
mov
jne
mov
lret
jmp
movsb
add
or
jo
lahf
mov
push
xchg
xor
int3
inc
or
xchg
mov
fcmovnu
add
lret
mov
jge
dec
mov
mov
out
int3
es
in
and
jb
cs
jno
fnstenvs
pushf
inc
inc
pop
loop
hlt
add
sahf
movsl
mov
imul
adc
scas
lahf
sbb
je
inc
jns
jmp
cmpsl
jae
sbb
push
jb
cltd
ret
push
mov
sbb
add
cmp
sbb
cmp
ret
fadds
push
negb
fsubrs
mov
das
sti
adc
les
pusha
mov
and
and
add
pop
int3
lret
aad
std
cld
lods
rcl
or
jo
sub
addr16
shl
push
jecxz
stos
push
in
mov
xchg
adc
or
or
ret
adc
scas
inc
jp
inc
iret
push
aas
jg
lock
xchg
jno
sti
jl
xchg
int3
xchg
dec
mov
xor
stos
mov
in
adc
xchg
push
or
sub
mov
lcall
pop
call
push
push
in
mov
mov
jo
mov
jmp
xchg
out
fwait
scas
fnstcw
in
in
inc
cwtl
xlat
icebp
adc
cmpsb
lds
or
cmc
adcb
xchg
xchg
and
xchg
lcall
test
pop
roll
xor
cli
shrb
lret
cmp
add
cmpsl
das
jecxz
aas
cmc
scas
scas
mov
popf
popa
push
xlat
out
sub
cmp
repz
add
out
push
aaa
sti
in
cli
dec
inc
shl
mov
push
arpl
fldenv
mov
jle
dec
nop
push
mov
adc
shrl
or
rorb
and
inc
imul
dec
dec
push
sub
cld
xor
mov
xor
shlb
fsubs
xor
nop
xor
mov
jnp
or
or
inc
push
add
pop
xchg
mov
xor
jg
scas
dec
addr16
out
or
cmp
rol
cmp
sahf
jecxz
pop
adc
xor
sbb
push
lea
fistps
clc
sti
cmpl
pop
js
out
mov
push
orl
cltd
jae
out
loopne
mov
cmpsb
jno
insl
rclb
mov
mov
ficompl
xor
test
lahf
into
jg
jmp
mov
push
fistl
stos
pop
jecxz
mov
cmp
pop
aaa
sbbl
sbb
aaa
push
or
sbb
lds
gs
pop
add
popa
xchg
ljmp
pop
or
pop
pop
fs
testl
fnstcw
cmp
push
push
lds
mov
fs
mov
adc
xor
pop
cwtl
int3
fldenv
and
enter
ror
mov
and
push
pop
jnp
xchg
mov
les
inc
imul
jns
pusha
ja
mov
mov
jecxz
inc
jae
rorb
fcompl
dec
outsl
cmp
cmp
add
jno
inc
lock
test
cmpsb
sub
test
or
mov
mov
adc
push
nop
xor
mov
push
add
jns
inc
addb
mov
call
in
dec
fcompl
push
push
in
cli
dec
mov
and
pop
ret
jg
cmc
clc
push
add
gs
mov
mov
test
loop
mov
mov
xlat
ss
add
aas
sbbl
jmp
adc
mov
cmpsb
xchg
pop
push
fcoml
frstor
jp
ja
xchg
add
iret
pop
stos
jo
aad
inc
insb
pop
iret
int
sub
jle
inc
sub
cmc
or
ss
in
sti
push
or
repnz
int
mov
sbb
loop
mov
add
cmp
hlt
or
xor
scas
imul
jmp
xchg
sub
mov
es
mov
adc
pop
fildl
and
fdivs
dec
scas
mov
out
cli
xor
in
sub
mov
inc
mov
xchg
fcomps
or
add
jmp
ljmp
sbbl
or
xor
cmpsb
lods
mov
mov
arpl
mov
shll
into
nop
xor
jns
insl
mov
mov
call
pop
sahf
add
lods
mov
jns
jg
inc
push
imul
jne
lods
pop
mov
data16
xor
movsb
lret
ret
scas
arpl
insb
out
ret
test
fsub
in
pop
mov
and
mov
and
or
push
cwtl
cwtl
andl
xchg
aad
enter
cltd
imul
or
mov
clc
inc
stos
mov
jo
mov
xchg
xchg
in
test
dec
loop
adc
dec
out
adc
sti
cmpsl
mov
out
loope
push
cmc
dec
pop
cmp
jge
mov
mov
daa
shlb
insb
fdivl
xor
lcall
test
push
addl
je
sbbb
scas
jb
in
xchg
loope
cmpsl
mov
fisubl
rolb
or
push
or
cmc
fidivl
orb
jmp
mov
xor
mov
add
sub
add
mov
popf
int
repz
adcl
mov
sbb
fisubs
jmp
xchg
cmp
cltd
sahf
pusha
mov
call
jp
inc
inc
jge
scas
cltd
mov
jle
mov
aad
mov
shlb
jbe
cmp
cld
pop
inc
dec
iret
adc
adc
push
aad
test
popa
push
mov
push
adc
loop
mov
adc
add
iret
test
xchg
push
sub
stos
mov
dec
or
push
sub
in
repnz
mov
repnz
mov
in
adc
inc
lods
clc
mov
mov
and
call
sub
add
push
or
pop
and
es
fiaddl
jmp
xlat
dec
dec
clc
xor
inc
testb
xor
jmp
sbb
mov
jb
gs
jmp
add
test
push
jne
call
jge
daa
loope
shll
stos
mov
pop
test
jno
xchg
and
push
mov
push
popa
push
dec
shrl
insb
aaa
xchg
xor
cmp
mov
aaa
add
mov
pop
fnstenv
lds
or
and
mov
mov
mov
inc
xchg
jnp
gs
push
addr16
push
out
scas
stc
inc
and
and
mov
faddl
inc
mov
cwtl
fwait
int
lahf
gs
add
popa
repz
jmp
jae
xor
push
movsl
fcoml
or
or
push
inc
fistps
sub
jg
imul
push
out
dec
push
arpl
loopne
xchg
jo
mov
lret
sbb
sub
xchg
scas
push
data16
scas
sbb
pusha
imulb
aaa
pusha
xor
scas
inc
lcall
xchg
xchg
int
add
imul
cmp
add
js
aam
add
ja
xor
pushf
and
inc
sbb
jmp
test
pop
xor
sbb
jge
dec
fnstenv
loop
pop
and
rcl
sub
insb
aad
pop
mov
cmpsb
sub
in
incb
or
inc
out
jnp
imul
std
adcb
mov
outsl
sbb
lock
movsb
inc
push
pop
les
and
lds
jg
lea
fistpl
sbb
mov
jo
cwtl
bound
mov
dec
icebp
nop
pushf
push
fisubl
sub
adc
mov
dec
xorl
mov
cmpl
mov
movsb
inc
push
loopne
mov
and
push
mov
mov
push
jg
loopne
xchg
scas
pushf
xor
adcb
loop
jno
dec
mov
jne
adc
adc
in
movsl
adc
inc
inc
mov
ja
and
into
mov
adc
imulb
adc
dec
cs
cwtl
sub
pop
test
jmp
stos
xor
push
lock
lea
or
stc
cs
fimuls
pop
push
and
stc
sbb
stos
and
shll
ljmp
xor
inc
sub
nop
in
popf
aaa
add
add
xchg
inc
xor
test
add
sbb
dec
dec
std
push
adc
push
sub
cmp
push
inc
inc
pop
aaa
outsb
mov
rclb
or
scas
in
mov
fs
lock
jp
sbb
xchg
mov
or
ficomps
fildl
dec
pop
aad
cmp
jae
mov
das
stos
repz
decb
pop
ss
pop
push
cmp
mov
sub
fs
pop
adc
aas
mov
xchg
shll
dec
cmpsb
or
mov
call
cmpsb
shll
ret
push
test
rcrb
icebp
js
or
aad
lock
aas
movsl
imul
nop
mov
roll
repnz
ret
test
mov
das
cmc
cs
cld
repz
jg
cs
insb
popf
inc
scas
push
mov
push
xchg
mov
stos
outsl
mov
and
cld
clc
daa
pop
mov
pop
jbe
add
insb
icebp
lods
jecxz
lahf
sub
push
aaa
inc
rclb
jge
loope
mov
adc
movsl
push
test
adc
in
adc
jb
and
cmp
in
aam
push
insb
cld
adc
lcall
mov
mov
iret
mov
push
jnp
scas
inc
push
inc
jo
jmp
lcall
mov
sub
test
xchg
arpl
dec
inc
cmpsb
add
xchg
pop
sti
outsb
mov
inc
in
das
adc
mov
in
xor
xchg
mov
or
fisttpl
into
mov
das
fimull
pushf
adc
jae
adc
imul
fistl
test
dec
jae
lods
pop
add
and
into
int3
push
add
and
ja
cmp
lret
sub
cmp
ds
cmp
and
cmp
repz
popa
inc
bound
xorl
ret
pop
fwait
inc
mov
out
jno
cld
xchg
scas
mov
push
rcrb
bound
mov
aad
ret
ds
add
sbbb
cmp
and
or
lahf
fisttps
mov
add
shlb
mov
sti
hlt
popa
pushf
pop
mov
mov
and
add
jae
jbe
jnp
cld
mov
mov
push
xor
jbe
movsb
jge
enter
cli
and
jno
or
out
mov
sti
sbb
aam
adcl
xchg
push
sbb
lret
cmp
and
adc
mov
sub
setp
cwtl
aas
and
cmp
mov
lcall
loopne
inc
sub
data16
insl
lahf
shrl
pop
aas
mov
ret
xor
scas
mov
sbb
out
fnstsw
xstore-rng
cmpsl
lcall
push
mov
stos
push
xor
xor
in
jns
jl
loope
loopne
loope
or
stos
xchg
nop
fisttpl
or
adcl
fwait
xchg
dec
dec
aaa
ljmp
pop
mov
sub
out
xchg
mov
fsts
inc
push
pop
mov
into
push
push
add
out
dec
std
lahf
addr16
fstpl
jl
pop
add
stos
xor
jns
neg
xlat
add
clc
jbe
fildll
cs
shll
sbb
mov
xchg
gs
gs
out
stos
cmp
rorl
ds
inc
pusha
and
in
rcrb
mulb
jbe
push
or
xor
push
in
clc
xor
lock
mov
cmp
pop
lret
sub
test
jecxz
inc
sub
loope
push
jge
fildll
daa
and
or
adc
pop
add
mov
mov
popl
imulb
sti
ret
push
mov
fcomps
aaa
push
or
mov
hlt
jge
shlb
loopne
xor
push
pop
xor
ror
mov
mov
ljmp
pushf
les
add
cmpsb
sbb
mov
lods
mov
adc
and
mov
cmp
in
sti
inc
aaa
jmp
sbbl
pop
add
pop
repnz
pop
cld
aas
push
inc
repnz
mov
int
cwtl
xchg
inc
mov
mov
push
lret
fildll
arpl
das
nop
jl
test
aaa
pusha
arpl
adc
dec
and
sbb
pop
stos
and
lods
mov
leave
jg
pop
push
sub
pushf
dec
aad
adc
inc
shr
stc
out
xchg
lods
rolb
neg
imul
sub
addr16
addr16
add
nop
add
pop
dec
mov
push
dec
popf
aam
out
pop
adc
in
mov
call
xor
or
lahf
and
and
sub
mov
dec
fiadds
cli
test
ds
mov
cmp
loopne
out
xor
fwait
mov
mov
cmp
gs
mov
adc
insl
lahf
adc
push
rcr
out
dec
fiaddl
aad
add
cwtl
xchg
bound
lahf
loopne
push
adcb
insb
cmp
loope
or
jmp
inc
popa
insl
pop
push
inc
lds
mov
adc
int
xchg
shrl
adc
repnz
mov
andl
jo
dec
loop
ret
gs
mov
and
and
jle
or
dec
ss
mov
push
mov
sarl
aam
js
leave
outsb
add
xor
bound
dec
sbb
call
push
xor
mov
adc
mov
xor
mov
xchg
loopne
popf
pusha
mov
jg
js
popf
sub
mov
lret
dec
xlat
fiaddl
pushf
add
and
loopne
jmp
mov
in
stos
dec
cmp
lods
arpl
jge
inc
cmpsl
mov
jno
xor
in
mov
mov
adc
sub
mov
xor
in
mov
icebp
ja
addl
lret
push
push
xchg
repnz
sub
fidivrl
ljmp
jecxz
mov
add
scas
push
sbb
or
dec
inc
dec
cli
addr16
dec
jl
outsl
hlt
sub
div
insb
and
sbb
lea
mov
call
lea
mov
pop
addr16
stos
fisttps
fstpt
add
rclb
jmp
cmp
fildll
mov
inc
loopne
or
aas
push
cld
repz
push
add
cltd
pop
mov
test
stos
push
jle
cmpsl
fists
insl
les
and
ficomps
push
mov
jb
jg
mov
fs
cmp
gs
mov
ss
bound
mov
je
jmp
nop
push
xchg
or
int3
pop
aaa
cltd
pop
xchg
das
hlt
dec
sbb
fnstsw
gs
dec
add
jle
xor
lahf
das
sub
xchg
inc
sub
pop
and
dec
push
cmc
mov
ret
mov
outsl
push
int3
fwait
xchg
int
icebp
sub
ss
popa
mov
das
sahf
jns
jg
sbb
inc
and
std
ss
leave
pop
or
repnz
inc
push
dec
mov
into
jne
sbb
xor
out
xchg
add
push
xor
lret
cmp
push
xor
pop
sbb
int3
cmp
mov
cmpsb
testl
cld
pop
std
notb
fwait
inc
inc
mov
mov
repz
out
xor
sbb
pusha
sbb
dec
sahf
dec
xchg
inc
inc
testl
hlt
sbb
pusha
test
cmp
add
cmp
out
xor
rcl
jne
lock
cli
and
jo
pop
pop
ret
mov
enter
lcall
sbb
xchg
and
inc
or
push
das
lods
inc
scas
mov
adc
xchg
icebp
push
sbb
ja
adc
aad
sub
imul
lods
cmpsl
xor
xchg
movsb
push
daa
mov
add
mov
dec
or
mov
dec
mov
in
fsubl
pop
aam
xor
xchg
sti
adc
cwtl
add
mov
and
fbstp
push
iret
push
jg
adc
sub
out
sarl
je
adcl
and
push
adc
loopne
ljmp
mov
xchg
mov
fs
dec
imul
inc
add
mov
push
jg
aaa
ffree
dec
push
xchg
xchg
xchg
scas
cmp
jae
mov
and
adc
fdivl
lahf
popa
or
dec
jbe
add
in
loopne
shll
pop
and
adc
or
push
stc
cltd
mov
mov
sbb
in
inc
out
sub
adc
cmp
sub
adc
inc
std
mov
sbb
int3
adc
lret
push
jg
mov
jno
sub
xchg
outsb
or
mov
sub
outsl
add
and
cwtl
int3
aaa
fwait
add
sub
fwait
clc
mov
les
mov
push
pusha
inc
aas
xor
add
inc
or
lahf
pop
shlb
mov
fadds
mov
jge
in
movups
jno
cmp
out
inc
popa
mov
andl
mov
pusha
mov
in
scas
or
xor
sti
or
sbb
adc
data16
imul
insl
loopne
jae
xchg
sub
jno
or
ja
stos
das
aaa
addb
jecxz
jb
add
scas
push
inc
add
cmc
fwait
xlat
aaa
cmp
lods
pop
jle
push
adc
add
push
pop
insb
stos
adc
negl
inc
insb
mov
out
add
push
jae
mov
mov
dec
push
pop
pop
mov
into
pop
xlat
mov
jb
in
jo
xor
inc
fcmovne
adc
and
stos
or
decb
add
cmp
popa
pop
roll
jle
xchg
popa
loopne
scas
fstpl
icebp
sub
push
cltd
stos
cmp
jl
outsl
stos
popf
push
pop
loopne
data16
mov
inc
in
mov
daa
ss
rorb
xlat
enter
or
icebp
jge
adc
fisubs
pop
fdivr
std
mov
incb
aam
aas
scas
test
pop
lret
rorl
sti
pop
outsb
fs
popf
sbb
xor
jae,pn
pop
inc
pop
mov
sbb
pop
lods
icebp
mov
or
xor
sub
fsubrp
sbb
orl
mov
sub
or
or
jl
mov
andl
loopne
mov
leave
lods
arpl
insb
jae
or
pop
imul
jmp
loope
push
shrb
test
mov
syscall
pop
inc
icebp
jmp
inc
lods
jl
or
rcrl
adc
outsl
insb
ljmp
jno
aaa
cmp
sbb
xchg
cs
sahf
xor
add
out
xchg
or
mov
stc
or
inc
pop
mov
out
enter
jg
iret
sbb
add
outsb
cmpsl
fmuls
subb
sbbb
add
hlt
stc
aad
push
mov
test
mov
inc
and
cmpl
addl
mov
mov
jle
and
hlt
mov
pop
imul
dec
shrb
test
sub
cwtl
enter
add
popa
mov
shl
fmull
mov
dec
add
fisubrs
xor
cmc
or
mov
movsl
xchg
xchg
fs
push
jbe
stos
lods
in
and
mov
sub
faddl
cmpsb
outsl
lret
jb
mov
cmpsb
push
mov
test
dec
jmp
xchg
aas
inc
dec
lock
fwait
test
repz
pop
lcall
mov
test
mov
xchg
lock
dec
in
aad
iret
mov
aam
sub
add
cwtl
pop
pop
xchg
mov
sbb
fucom
sub
out
mov
mov
shlb
jecxz
jo
ja
daa
pusha
in
push
cmp
mov
inc
sbb
int3
push
xchg
xor
xchg
sbb
sub
or
mov
out
notl
stc
dec
sti
push
call
gs
adc
pop
fsubrl
repz
add
outsl
mov
and
xchg
cwtl
pop
push
add
movsl
mov
sbb
test
sbb
rclb
adcl
lea
mov
or
insb
xor
loopne
repz
je
les
lret
cmp
push
mov
hlt
sbb
push
push
mov
outsl
xchg
dec
popa
es
ljmp
jl
movsl
sahf
subl
lahf
mov
int3
iret
xor
sahf
mov
mov
cli
icebp
add
int3
mov
ds
adcb
jge
insb
cltd
jmp
push
mov
mov
inc
es
popa
addr16
xchg
cltd
clc
sbb
cmpsl
ret
test
push
test
lahf
js
add
dec
icebp
loop
inc
scas
sub
sub
sbb
imul
imul
sarl
iret
or
enter
sbb
cmpsl
sarl
and
pop
or
repnz
cmp
dec
out
sbbb
gs
frstor
fsubr
sub
jmp
xorl
jbe
push
shl
movsb
gs
xchg
shrb
sub
popf
frstor
dec
mov
mov
ljmp
scas
mov
pop
mov
loopne
cmc
test
int3
cmpsb
out
fmull
outsb
jno
xchg
subl
add
xchg
mov
xchg
mov
dec
sbb
cs
xchg
sarl
pop
cli
iret
imul
inc
and
shll
push
jns
push
or
lea
add
es
pop
dec
stos
repz
cmpsl
push
jp
outsl
dec
push
test
xor
cld
cmp
pushf
mov
in
mov
lret
mov
fiaddl
mov
add
ja
andb
fwait
mov
push
xchg
movl
repnz
inc
sbb
xchg
and
notl
out
sbb
jo
mov
jae
jbe
jne
aad
sbb
xor
or
adc
stos
mov
push
sarl
sarl
xchg
shll
dec
cmp
andb
sbb
xchg
js
push
dec
and
or
cltd
cmp
jle
xor
sbb
popf
test
adc
test
les
aam
in
ret
cmpsb
imul
adc
std
movswl
sub
out
aas
rclb
out
push
hlt
jmp
jecxz
xor
jbe
push
mov
xor
arpl
push
mov
dec
test
mov
test
fnstcw
fmul
cs
add
dec
arpl
fdivs
enter
cld
ret
pusha
lods
xchg
in
sub
jnp
jg
push
in
int
push
out
and
sahf
es
int
mov
repz
ret
mov
and
add
fimull
add
outsb
lcall
cmc
arpl
stos
sbb
adc
lret
mov
pop
jle
in
es
out
or
scas
or
inc
insb
add
icebp
dec
and
lcall
stc
add
pop
xchg
mov
and
sbb
xchg
dec
pop
iret
fcmovbe
rclb
in
je
push
mov
jg
mov
mov
jge
sbb
outsb
jecxz
aam
jnp
mov
mov
dec
bound
mov
orl
test
add
aas
push
imul
xor
imul
ret
push
sub
fisubs
insl
lods
fsubl
sub
mov
adc
cmp
mov
popa
sbb
dec
insb
add
data16
movsb
mov
and
cmp
or
or
test
jns
mov
adc
js
inc
arpl
bound
cmp
xchg
in
pop
sar
sbb
sbb
pop
sbb
and
or
in
and
enter
add
push
adc
sub
ret
adc
mov
sub
mov
jo
call
ret
push
dec
test
adc
fwait
sub
mov
icebp
iret
insb
dec
mov
pop
inc
jg
jne
lahf
mov
xor
loop
pop
inc
dec
mov
fwait
pop
sarb
std
in
jne
dec
pop
in
enter
jmp
loope
insb
pushf
mov
adc
scas
test
dec
sub
cmpsl
nop
fdivrs
push
ss
sub
and
inc
push
decb
push
pop
sbb
outsl
aad
rcr
push
inc
xchg
mov
jns
mov
iret
xor
je
int3
mov
add
rorb
mov
sub
jb
nop
lcall
cmp
in
jne
sbb
pop
cld
jmp
xchg
mov
cmp
clc
test
dec
mov
lcall
or
cmp
xor
inc
aas
gs
lods
fisubl
mov
push
dec
aaa
lcall
pop
dec
stc
jae
je
adc
add
jg
push
jb
push
jmp
jle
xor
aas
inc
into
push
cli
jbe
and
adc
lret
dec
jp
sub
out
cs
xchg
inc
fistps
cmp
mov
xchg
lea
sub
xchg
mov
push
inc
or
sub
jbe
cmovo
fsubl
push
roll
mov
scas
push
dec
cmp
jae
or
hlt
cs
jmp
mov
cltd
jge
cs
inc
mov
call
jp
int3
dec
daa
aad
xchg
aas
in
add
mov
or
imul
xchg
in
fldenv
mov
dec
jo
add
push
in
lea
int
and
push
aas
loopne
ljmp
sbb
mov
sbb
ficoml
divb
mov
in
mov
aaa
sbb
cwtl
xchg
inc
cmpsb
add
aad
inc
mov
jge
mov
fs
mov
mov
repz
pushf
aas
xlat
lcall
add
jecxz
and
xchg
mov
repnz
std
fdivrl
jb
mov
xchg
push
fistpl
dec
imul
int
movsb
insl
dec
gs
xchg
mov
pusha
leave
sub
xor
mov
cld
mov
dec
test
and
je
jne
mov
andb
cltd
bound
fwait
push
out
dec
jle
test
rcll
ret
clc
sbb
add
pop
sub
xchg
pusha
jecxz
xor
mov
xlat
movl
and
sub
or
popa
cmp
pop
rcl
cmpsb
pusha
ljmp
in
and
xor
cmp
add
jmp
outsl
jge
add
add
int
push
insb
adc
push
sbb
and
pusha
repz
fdivrl
ret
adc
push
dec
cli
cmp
fsubs
push
push
inc
test
stos
mov
out
adc
push
aad
mov
dec
add
loopne
and
mov
push
adc
sbb
jae
mov
xchg
jo
pop
je
cmp
lea
push
repz
xor
mov
xchg
mov
imul
xor
mov
ja
or
imul
ret
add
push
js
enter
dec
pop
cmp
sbb
int
repz
dec
xchg
stos
in
mov
std
push
movsl
aam
push
add
dec
pop
pop
push
cmp
faddl
fdiv
sbb
cmpsb
mov
mov
xor
push
sub
mov
into
mov
sub
fcompl
cmp
cmp
or
mov
jb
sahf
push
je
sub
scas
gs
jb
sub
xor
mov
pop
idivb
movsb
cmp
repnz
mov
std
cmpsl
int
clc
xor
testb
fs
loope
test
push
and
out
and
pop
out
sub
add
dec
rcll
test
xchg
dec
movsl
lea
inc
int3
fmuls
mov
pop
negl
movsl
les
mov
pop
mov
sbbl
xchg
xchg
or
imul
dec
cmp
push
adc
shll
xor
xor
cvtps2pd
test
loop
outsl
lret
shll
xor
aad
test
pop
jbe
dec
int
sbb
fs
or
vpackssdw
mov
mov
sub
stos
dec
cwtl
push
mov
and
enter
stc
mov
ret
xchg
fstps
xchg
mov
adc
aaa
mov
pop
notl
lahf
jmp
dec
mov
sahf
cltd
xor
rorl
pop
les
mov
fisubrl
jp
push
sub
cmp
mov
pushf
popf
lret
dec
sbb
sub
fdiv
gs
xchg
jo
testl
or
mov
mov
arpl
loope
lods
sti
dec
aaa
adc
js
iret
cmp
sbb
inc
inc
rcrb
int
loope
xchg
lods
cmp
movsb
in
shll
add
mov
mov
sub
test
stc
orb
into
fstp
push
jp
imul
pop
pop
pop
or
outsl
add
adc
pop
movsb
mov
pop
lds
sub
mov
test
iret
push
lcall
xor
inc
mov
lods
mov
jnp
adcb
push
push
mov
cmpsb
mov
push
pop
pop
cltd
add
rorb
push
or
lahf
push
mov
sbb
fsubrs
mov
ret
pop
add
popf
jg
xor
pop
into
or
leave
jbe
xchg
push
pop
sub
jp
push
sahf
mov
inc
push
scas
add
or
cmp
dec
inc
iret
sti
mov
das
test
stc
push
mov
lret
jae
sbbb
and
push
insb
sbb
cmp
aad
je
cmpsb
hlt
pop
popf
sbb
jb,pn
sbb
and
jecxz
xchg
stos
std
cmpsl
or
inc
into
dec
and
lds
int
push
notb
lods
out
movb
mov
sahf
lods
xor
dec
cs
inc
dec
jge
imul
sub
sarl
mov
mov
mov
sbb
scas
push
nop
imul
in
adcb
push
sub
lcall
pop
hlt
or
int
cld
test
add
push
jmp
imul
add
sbb
and
ds
rsqrtps
inc
xor
jb
into
xchg
mov
pop
fstpl
xor
push
sub
mull
dec
jle
stos
dec
in
push
jp
mov
ss
movsb
and
xor
and
pop
mov
stos
xchg
adc
mov
in
inc
push
xor
add
dec
jp
imull
sbb
push
sub
xor
push
fidivl
sti
in
std
lea
lds
xor
sub
or
js
arpl
or
negb
std
in
out
jo
js
adc
mov
outsb
lahf
mov
and
push
inc
add
mov
adc
stc
in
std
int
cltd
rcrb
mov
mov
and
and
lods
add
mov
out
xchg
sbbl
xor
in
je
push
das
xchg
cli
mov
mulb
ret
js
insb
xlat
je
mov
fidivs
daa
mov
dec
lea
fsts
jge
push
mov
inc
lret
add
push
decb
outsl
mov
aas
sbb
shl
scas
sbb
add
sub
outsb
and
mov
jo
mov
xchg
sbb
movsb
push
in
fs
cmp
pop
inc
add
add
leave
cmp
loop
lret
out
hlt
hlt
xchg
pop
sub
out
test
lock
xchg
bound
fsubrs
pop
int
aad
jae
jb
mov
mov
jle
and
jns
xor
rcr
and
les
enter
xlat
inc
iret
sub
jecxz
mov
mov
in
or
mov
test
imull
push
lahf
sub
cmpl
mov
jne
cmpsl
je
or
mov
lods
imul
mov
inc
jle
xor
outsb
cmp
lahf
rol
jo
imul
ljmp
mov
scas
cmp
mov
dec
add
pop
dec
js
repz
xchg
or
push
leave
push
sub
jno
and
out
repz
loope
sbb
xlat
inc
or
or
aas
inc
fidivs
fcmovnu
adc
cmp
mov
push
xchg
xor
xor
sub
leave
into
rcr
mov
and
bnd
popf
xchg
mov
cmp
aam
fiaddl
cmp
daa
aaa
push
jae
pushf
jecxz
and
push
into
mov
lret
lds
dec
push
xchg
xchg
lea
sti
cld
xor
repz
test
inc
pusha
jge
lcall
pop
xor
cmp
cld
aaa
ret
repz
pop
mov
cmp
push
mov
push
xor
inc
inc
jecxz
out
imul
inc
in
xchg
mov
pusha
mov
add
and
sub
cltd
mov
push
cmp
inc
add
fnstenv
add
movsl
andl
lods
add
adc
sti
shl
mov
insl
leave
xchg
mov
lea
mov
data16
pop
insl
xor
stos
xchg
loopne
lret
add
pushf
mov
daa
out
or
xchg
orb
es
mov
adc
mov
sahf
jmp
xchg
and
push
inc
ss
in
and
sbb
and
mov
loope
mov
mov
xor
xor
xchg
psubw
or
dec
rclb
sub
out
inc
mov
sbb
xchg
mov
pop
cmp
out
cs
lret
push
jb
mov
and
iret
lea
ficomps
std
addr16
sub
mov
dec
jle
mov
push
jg
sarl
lcall
in
gs
jno
dec
inc
add
rorl
test
dec
out
push
mov
jp
orl
mov
mov
mov
push
rorb
movsl
push
push
jnp
or
push
push
xor
mov
adc
pusha
push
sbb
mov
and
dec
xchg
fstp
icebp
ljmp
jle
jo
or
mov
out
notb
cs
stc
sti
nop
xchg
add
jae
pop
sbb
outsl
lahf
mov
das
in
push
mov
mov
outsl
hlt
stos
rcrb
subb
mov
pusha
cmp
and
rep
lea
jg
leave
aam
add
out
mov
or
sub
shll
call
xchg
cmovbe
rcrl
filds
rol
sbb
stc
or
rol
leave
add
dec
in
ror
mov
inc
test
cmc
cli
lret
fstl
imul
and
dec
add
gs
mov
add
iret
dec
sub
sub
add
icebp
iret
push
pop
loope
or
cs
push
fimuls
xor
adc
jmp
dec
cmc
enter
dec
aas
enter
jns
sub
mov
orb
jmp
adc
jecxz
ds
add
ss
call
cmpl
jp
sar
push
ljmp
scas
mov
push
mov
jo
dec
test
movsb
add
cltd
dec
xchg
jo
std
mov
arpl
sbb
movhps
inc
cmc
cli
int
outsl
pop
and
sbb
iret
mov
out
in
orl
xorl
inc
mov
jge
sub
mov
in
and
scas
jle,pn
data16
jnp
loope
stc
pusha
jno
push
int
xlat
aad
push
mov
jg
cmp
push
pop
mov
dec
jp
pop
bound
push
mov
test
cwtl
adc
sbb
mov
out
jo
mov
fdivs
in
sbb
int
or
adc
push
mov
xor
cmc
lds
jg
test
lcall
scas
xor
xchg
pop
sbb
mov
push
adc
adc
pop
stos
adc
popf
jl
rcr
adc
sub
ja
ja
add
mov
and
aam
push
es
outsl
push
mov
inc
xchg
lret
gs
add
or
xchg
xor
mov
xchg
mov
mov
lret
push
out
dec
jmp
or
xlat
mov
or
iret
ret
rcrl
mov
fs
push
sub
jl
inc
xchg
stc
cmc
push
nop
lret
imul
jle
xor
cwtl
shlb
scas
insl
addr16
add
jae
bound
mov
sub
mov
les
push
movsb
enter
pop
jmp
push
jne
lods
test
les
add
out
mov
das
icebp
dec
dec
fnop
dec
mov
jl
stos
push
cld
jp
in
dec
outsl
ja
ret
add
dec
lods
cmp
cmc
bnd
cld
hlt
inc
loope
mov
push
dec
pop
stc
sti
rorl
lcall
fdivrl
dec
ljmp
jns
push
repnz
mov
outsl
jnp
xchg
shlb
sbb
or
leave
jp
jp
mov
pop
loope
inc
stos
and
mov
xor
insl
jl
outsb
jg
push
cltd
into
xorb
gs
lahf
xor
fs
repz
push
loopne
outsl
repz
hlt
or
inc
adc
ret
push
stc
stc
ds
in
iret
sub
and
sub
loope
imul
jno
xor
adc
dec
adc
mov
aam
or
jg
jo
scas
cmp
push
ret
call
sbb
lods
ret
jle
fsubl
inc
xor
ja
mov
test
push
repnz
fdivs
shlb
cmp
mov
mov
xchg
popl
aaa
ja
adc
push
scas
push
movb
lods
inc
or
mov
bound
roll
push
adc
nop
inc
lahf
insb
out
or
jmp
iret
jmp
inc
pop
bound
jg
sbbb
mov
pop
cld
jmp
and
jo
push
xchg
mov
aam
cmovg
mov
push
push
and
imul
mov
faddl
and
lcall
gs
loope
push
out
stos
aam
aaa
ret
mov
arpl
les
addr16
push
insb
sbb
or
cltd
dec
arpl
and
loop
cli
cmp
mov
xchg
or
sub
adc
lods
lret
jmp
jl
fs
dec
and
and
bound
or
sub
in
add
test
clc
cmp
aad
and
dec
or
mov
testl
cmp
cmp
sbb
fiadds
push
jb
aas
mov
mov
and
cmp
sbb
test
test
outsb
hlt
lahf
in
mov
mov
pop
loopnew
mov
xchg
ljmp
aas
pushf
dec
fcmovu
cld
add
and
mov
dec
add
lret
mov
ds
lahf
int
xor
sahf
xchg
sbb
or
mov
enter
iret
add
mov
dec
jae
aaa
sbb
jg
lret
xor
lret
cmovb
jl
xchg
dec
mov
xor
test
sbb
je
push
mov
push
nop
popf
pop
push
daa
repz
fwait
push
ret
dec
push
mov
xchg
sub
mov
or
mov
cmp
div
xor
dec
rcll
mov
inc
jns
jns
mov
xchg
aaa
mov
hlt
cmp
lret
out
movsb
shl
push
inc
mov
xlat
mov
sub
ret
add
mulb
aam
in
jmp
push
pop
jge
sub
lret
stc
ss
mov
jl
aad
dec
mov
xchg
stc
icebp
es
js
test
xor
scas
cmp
loopne
call
das
sub
jl
dec
mov
mov
nop
cmp
std
lret
cmp
and
inc
popf
dec
push
dec
lea
push
ss
js
rcl
sub
sub
into
outsl
testb
jne
sbb
outsb
fsubr
mov
cmp
push
out
clc
iret
ds
xchg
inc
lea
inc
es
shlb
and
push
cmpsb
inc
cli
in
mov
mov
and
aam
cmpsb
insb
sahf
sarb
inc
xor
or
ss
ret
pop
mov
inc
hlt
add
aaa
lods
mov
cmpsb
mov
mov
dec
outsl
dec
clc
out
int3
xor
aaa
sbb
push
fs
sub
sbb
or
push
sub
inc
add
lret
ret
xchg
mov
cmp
and
std
icebp
int3
in
adc
aad
incb
mov
iret
inc
xorl
dec
daa
jo
arpl
jbe
subl
add
xlat
outsl
popf
mov
in
data16
push
pop
nop
pop
incl
or
push
aam
push
sub
stos
push
je
mov
jne
mov
aad
mov
repnz
arpl
or
push
xchg
addr16
and
mov
aad
mov
repz
xchg
xorl
adc
mov
dec
cs
sti
xchg
xchg
pop
sub
jecxz
mov
mov
je
imul
fstpl
sbb
xor
cs
fistps
lret
jnp
adc
and
or
mov
aad
mov
mov
dec
addr16
cmp
mov
or
push
in
fsubl
rclb
inc
aad
cld
ljmp
inc
pop
inc
call
das
sbb
loop
inc
dec
je
mov
stos
xchg
dec
and
mov
mov
push
pop
leave
adc
stc
cmp
pop
mov
sbb
jge
and
arpl
and
cwtl
mov
jge
aad
adc
pop
in
scas
and
push
xchg
push
test
push
dec
lahf
sar
fwait
repnz
adc
push
je
inc
inc
mov
lret
sar
in
sbb
cs
jle
aad
push
loope
sbb
adc
xor
ds
cwtl
sub
enter
inc
jne
pusha
inc
mov
enter
add
sbb
fstpl
dec
push
jg
imul
mov
lods
jae
adc
push
je
or
rcrl
popa
mov
int
repnz
jno
push
adc
pushf
mov
cmp
adc
or
fdivr
push
sub
cli
adc
mov
fisubs
and
lock
inc
ljmp
adc
push
bound
lods
rcl
pop
shl
xor
out
inc
cmpsl
repnz
lds
inc
mov
cmp
cmovbe
push
mov
xchg
cltd
std
inc
arpl
lcall
lds
and
lods
data16
js
shlb
mov
stos
sbb
testl
inc
rorb
out
mov
jge
bnd
mov
test
xchg
outsl
xchg
jge
inc
sub
jae
adc
insl
iret
dec
pop
or
and
out
jmp
das
xchg
pop
dec
jnp
arpl
xchg
cmp
mov
test
stc
fisttps
mov
dec
arpl
mov
outsl
fisubl
mov
aam
dec
call
loope
pop
outsb
mov
call
pushf
xchg
dec
pop
fistl
xchg
movups
aad
dec
inc
adc
jmp
data16
lcall
nop
sub
jns
decl
add
lahf
xchg
ljmp
xchg
out
fisubrl
out
sbb
push
pop
incb
loop
adc
cltd
cmp
mov
lret
mov
scas
das
add
jl
pop
test
jmp
sub
icebp
or
pushf
add
nop
sbb
xchg
push
out
dec
jecxz
pop
popf
sub
xchg
jno
and
add
sub
xchg
insl
lock
stos
adc
mov
or
inc
mov
in
pop
mov
pop
push
inc
jae
out
mov
jge
pop
fwait
test
cmp
push
mov
ret
out
mov
lods
fidivrs
add
and
in
pop
mov
mov
adc
arpl
pushf
add
rcll
jle
out
xchg
nop
out
or
jno
ljmp
test
inc
mov
inc
arpl
inc
xor
push
hlt
push
sbb
in
bound
lods
xor
adc
rcll
sub
loope
jns
out
add
xlat
mov
mov
daa
iret
mov
push
pop
mov
pop
add
mov
add
pop
mov
jmp
out
or
xlat
sub
and
mov
test
mov
pop
cmpsl
or
cmp
cmp
mov
cmp
push
add
pushf
rolb
jl
fimull
pop
jmp
xor
add
mov
loopne
in
fmul
and
dec
add
cld
sub
or
xchg
xchg
cltd
ror
aam
sub
cmp
or
sub
dec
enter
xlat
inc
je
cmp
or
fmuls
push
nop
cmpsl
sbb
and
jp
mov
bound
inc
daa
push
jmp
in
icebp
or
adc
ja
lds
jns
inc
hlt
xchg
mov
and
pop
mov
into
movsl
lods
mov
pop
dec
dec
imul
lret
pop
fcmovnbe
leave
lock
leave
fistpll
push
clc
ljmp
ret
jo
sub
sbb
fcmovnb
mov
out
inc
repz
ds
mov
dec
inc
cmpl
inc
mov
sbb
rcr
lea
sbb
and
out
pusha
and
movsb
xor
sub
mov
push
inc
into
ds
pop
push
fisttps
xchg
xchg
and
fs
xorb
jmp
inc
loope
iret
dec
sub
in
iret
ss
mov
dec
xchg
jge
in
xchg
push
loop
mov
sbb
inc
repnz
push
testl
movsb
jp
jmp
popa
dec
popa
and
jno
lock
or
jmp
ret
add
jg
pushf
pop
mov
cmp
lods
cltd
icebp
adc
adc
and
xchg
xchg
jae
ja
mov
lret
pushf
addr16
xor
fimuls
mov
jle
or
cmp
push
sbb
lahf
arpl
dec
adcb
loopne
jg
pop
push
or
push
fmuls
mov
xchg
ss
mov
mov
in
mov
dec
sahf
jb
xchg
pop
popl
popa
push
and
inc
pop
xor
mov
cmp
mov
cld
imul
xchg
xor
jge
lret
jne
add
int3
cwtl
lock
sti
addr16
cs
jle
or
dec
adc
sub
xorl
mov
or
lds
stos
mov
fs
addl
push
fwait
mov
imul
xor
push
fdivs
push
gs
and
adc
pop
fdivs
push
sbb
nop
push
jb
jbe
cld
test
pop
shr
cmc
fwait
inc
aam
adcb
xchg
rcrb
iret
mov
dec
out
dec
inc
jp
lds
inc
incb
xor
mov
iret
cmp
imul
lods
call
shll
push
adc
mov
test
sub
cltd
pushf
stos
xorl
je
sbb
adc
stos
and
xlat
decb
mov
inc
sbb
and
or
add
dec
cmp
mov
mov
adc
push
inc
inc
xchg
jmp
mov
negl
fisubrl
ret
and
jo
dec
xchg
int
insl
sti
xor
arpl
jp
jno
loope
adc
push
aad
inc
mov
aaa
pop
std
cmp
sub
mov
xchg
test
or
mov
jb
mov
inc
cmpsl
jae
sub
sbb
jo
lods
mov
bound
xchg
dec
imul
and
das
mov
popa
std
jae
shrl
xchg
push
test
aaa
idivb
test
sbb
fwait
xorl
cmp
rcrl
addr16
not
inc
clc
sub
sbb
aas
push
cli
incb
shrl
je
and
mov
pop
dec
pusha
stos
sbb
jmp
movsb
cmc
ficompl
lcall
jle
out
mov
jns
divb
jnp
test
popf
mov
xor
jecxz
sbb
xlat
adc
flds
cmp
push
scas
pusha
and
push
add
push
add
rorl
fnstsw
push
loope
pop
xchg
push
stos
mov
outsl
cmpsb
insb
jl
dec
sar
jmp
sub
fwait
cmpsb
js
add
and
sti
push
pop
xor
dec
int
mov
rol
stos
sbb
or
iret
hlt
cwtl
jo
jp
xchg
inc
jb
push
adc
mov
repz
fsubp
imul
mov
out
fmull
and
xor
jnp
sub
mov
fimuls
lea
fnsave
inc
mov
out
jge
out
into
test
lahf
clc
cmpsb
push
ljmp
pop
pop
push
inc
jbe
insl
fmul
inc
shlb
cwtl
cmp
setnp
xchg
pop
xor
xchg
cmc
inc
mov
sub
adc
lods
fmul
mov
sub
adc
insb
xor
frndint
pop
loope
bnd
mov
enter
push
lcall
or
push
out
sub
xchg
sbb
in
shlb
std
push
xor
inc
js
xor
fs
lods
and
mov
lock
popf
mov
cmpsb
rcrl
push
mov
xchg
rcrl
cmp
push
into
xchg
mov
and
cmpsl
mov
sbb
xor
inc
and
fnstenv
add
imul
pop
lcall
dec
icebp
xchg
movsb
adc
adc
insb
dec
or
push
std
in
js
ljmp
inc
jne
gs
sub
inc
jmp
xorb
je
dec
and
mov
xor
lea
js
mov
jle
pop
or
push
inc
sti
lcall
imul
cltd
push
out
in
test
repnz
mov
bound
xchg
lret
push
adc
sub
repnz
movsb
sub
jo
fdivl
mov
and
popf
xchg
xchg
xchg
jo
pop
xor
cltd
cmpsb
push
jl,pt
add
push
iret
xlat
cli
add
mov
sub
xchg
cmp
xor
adc
and
cmc
inc
push
pop
xor
nop
jne
into
cli
cmpb
dec
xchg
xor
addb
dec
xlat
insb
xchg
push
sub
pushf
imul
push
adc
push
pop
jp
add
xchg
js
pop
mov
sbb
cmpsl
loope
sbb
scas
and
and
std
jmp
rcrl
into
mov
pop
adc
xchg
add
gs
mov
not
inc
and
adcb
mov
lahf
in
fdivr
sbb
fs
push
cmc
int3
mov
xchg
call
jmp
enter
out
sbb
sbb
push
mov
shlb
and
add
out
pop
ja
insb
fsubs
sbb
push
add
push
daa
ret
aad
jg
lret
loope
out
and
out
inc
push
fdivl
mov
mulb
pop
cltd
in
clc
js
xchg
test
add
popf
jbe
push
lahf
fsubrs
add
shll
out
shlb
outsb
cmp
mov
inc
mov
xor
mov
mov
aam
fwait
sbb
ret
mov
lods
xor
mov
faddl
push
inc
push
add
pop
aaa
loope
hlt
inc
xor
dec
mov
jnp
dec
mov
or
push
in
jbe
mov
cli
fisubrl
sub
mov
std
xor
aam
adc
jg
jbe
aad
fdivrl
pusha
sbb
mov
dec
pop
stc
stc
or
jmp
enter
fisubs
ss
aaa
js
xchg
loopne
pop
inc
jmp
test
jge
lods
xor
push
push
stos
pop
xchg
xchg
cmp
pop
fidivrs
or
push
mov
pop
or
cmp
mov
mov
mov
ret
out
push
out
aas
or
inc
sbb
rclb
shl
pop
xor
sub
fwait
xor
ret
lods
out
in
subb
cmp
xor
lods
rcr
daa
xchg
and
add
sub
std
jge
dec
jl
push
cmpsb
dec
mov
test
pop
jnp
jae
jge
leave
push
xchg
mulb
sahf
jnp
push
arpl
add
adc
btc
mov
xor
sub
mov
ja
pop
jo
pop
imul
jg
pop
mov
pop
ss
test
fdivr
mov
adc
xor
sub
sbb
jns
inc
movsl
or
mov
fcoml
lds
movsb
loope
inc
mov
push
scas
ss
push
dec
sbb
jb
sti
cmc
shr
add
mov
xchg
cmpsl
push
rcll
push
cmpsl
xor
loop
leave
rcr
jecxz
loop
sub
mov
adcb
and
lea
sub
fcomp
push
aam
mov
cltd
pop
cmp
scas
sub
and
and
inc
jbe
mov
mov
and
cmp
jnp
dec
sahf
insl
jbe
insl
outsl
in
jne
mov
sahf
cmpb
cli
ljmp
mov
ror
scas
or
cmp
sub
push
lahf
lock
ljmp
jp
fildl
test
daa
sub
pop
cli
sub
out
xchg
add
js
fsubrs
pop
fidivs
adc
mov
test
loopne
out
xchg
arpl
or
aas
jae
adc
cmp
repnz
fists
rcrb
jge
push
cmc
faddp
and
pushf
jmp
add
pop
cmp
push
pop
ljmp
les
jnp
xorb
mov
push
adc
add
sbb
adc
jo
in
daa
jmp
test
dec
jg
push
adc
fbstp
and
stos
mov
pusha
push
mov
test
mov
imul
xchg
insl
mov
imul
fsts
ficompl
out
lss
push
pop
aam
or
or
lret
imul
sbb
das
mov
dec
std
mov
pop
call
loop
mov
pusha
mov
mov
sub
hlt
lahf
mov
or
sub
rorb
fs
mov
out
lahf
int
xchg
pushf
pop
rcl
xchg
stc
test
xor
cmp
and
mov
stos
inc
sbb
sub
jg
cmp
fldenv
fisttpl
or
shlb
cmp
mov
daa
ret
adcl
das
pop
cmp
sbb
fisttpll
cmpsb
stos
je
jbe
int
pop
or
fsincos
bound
je
xor
test
inc
jnp
ds
lods
mov
in
mov
ficompl
into
mov
lods
inc
in
and
or
test
mov
insb
int3
aas
es
adc
cmc
dec
jl
lods
and
add
inc
mov
push
loope
mov
pop
xor
mov
cmp
mov
dec
icebp
lds
mov
loope
cmp
xchg
call
jnp
dec
hlt
stos
mov
ja
rcr
adc
cmpsl
inc
fldt
ds
fsts
or
pop
pop
mov
stc
xor
pop
jg
xor
cmp
adc
loope
popa
mov
adc
and
mov
fprem1
sbb
or
mov
and
mov
scas
adc
lea
mov
push
and
and
shlb
mov
scas
xchg
and
and
xor
push
sbb
nop
and
sahf
call
repz
sbb
mov
aaa
xchg
cs
addr16
fcoml
push
mov
iret
adc
mov
inc
inc
pop
shll
adc
sbb
and
sbb
sub
jle
out
sub
aas
lcall
nop
push
push
xchg
in
ljmp
lret
or
mov
rcr
dec
or
lock
inc
cmp
jne
enter
xor
mov
scas
out
rcr
sbb
hlt
dec
inc
xor
outsl
andb
scas
inc
add
in
push
jp
sub
bound
pop
cld
inc
push
sbb
call
or
into
lods
and
loopne
xchg
inc
cld
sub
fsubr
xchg
fs
or
mov
adc
outsl
pop
es
insb
adc
stos
inc
xor
scas
sbb
cmp
cs
and
or
and
jge
lcall
fucomip
stos
mov
pop
mov
xor
xchg
pushf
jl
orb
cwtl
pop
ds
imul
inc
add
and
xor
pop
addr16
lret
push
mov
xlat
addr16
lods
jge
or
jecxz
mov
ss
orb
adc
pusha
stos
test
jg
into
sbb
lcall
dec
mov
jae
and
mov
or
push
and
sahf
das
mov
push
repnz
or
adc
push
jge
out
sbb
dec
sub
cmc
out
cli
cmpsl
bound
adc
rcrb
out
addr16
xor
jle
xor
mov
icebp
lcall
mov
sbb
push
jg
loope
pop
dec
push
pop
or
mov
fcomip
sahf
sbbl
inc
dec
mov
or
lock
loope
cmpb
jbe
jl
scas
cltd
push
fnstenv
iret
fdiv
lret
xor
testl
out
inc
xchg
orl
pop
add
je
pop
mov
add
test
bound
cmc
outsb
cmpsb
xor
fdivl
bound
sbb
shlb
and
decb
adc
add
cmp
flds
push
mov
das
test
pop
pop
adc
or
pop
cmp
cmpsl
push
push
ljmp
movsl
inc
stc
fistpll
scas
test
mov
sub
cmp
popa
movsb
in
mov
xor
aam
das
xchg
es
cmpsl
cmpb
roll
push
mov
pop
inc
xchg
add
jbe
pop
ret
mov
mov
lcall
mov
pop
lea
aad
insl
jo
add
aad
cmpsl
xchg
les
xchg
and
lahf
mov
sbb
out
sti
adcb
fisubs
push
push
and
lds
inc
lcall
cmp
push
arpl
add
orl
addr16
xor
movsb
clc
lds
xor
inc
mov
iret
sbb
das
pop
fs
push
jbe
decb
xchg
dec
sbb
in
sbb
xchg
sbb
cmp
clc
xor
in
outsl
dec
add
push
xor
and
push
mov
xor
ret
test
inc
and
add
dec
or
lods
cmpsl
sbb
xchg
std
dec
mov
xchg
mov
xchg
xor
inc
gs
jne
ffreep
int3
fsts
lods
imul
pusha
mov
sarl
add
sti
outsl
lds
repnz
fcmovnu
push
insb
scas
inc
or
ret
sub
adc
and
add
add
sbb
movsl
mov
ret
add
js
mov
push
adc
shl
mov
jl
add
dec
ja
dec
fsubrs
fs
pop
sub
pop
shlb
fbld
xchg
lds
stos
test
xchg
push
aas
sub
ficoml
mov
pop
push
stos
popa
es
cs
out
es
cld
rorl
lret
popa
mov
pop
in
lea
cli
fildl
pushf
jle
xchg
xor
mov
pop
xchg
sub
test
pushf
xchg
pop
adc
or
popf
or
dec
cmp
notb
cmp
mov
lahf
aam
xor
dec
pop
cmc
mov
fwait
add
sub
loop
push
pop
push
cmp
push
outsb
divl
lret
stc
call
mov
out
cs
push
mov
cld
xchg
fimuls
aaa
jbe
lock
jae
jmp
mov
fchs
xor
add
or
mul
push
jae
dec
insl
lret
movsl
dec
imul
in
xchg
xchg
xor
bound
xchg
aad
mov
stc
shrb
or
addr16
mov
rcl
outsb
sbb
test
push
icebp
test
aam
mov
cli
gs
or
les
xabort
sahf
mov
or
push
shrb
dec
add
mov
ljmp
in
mov
sub
or
je
dec
enter
pusha
mov
push
addb
out
call
iret
imul
les
and
dec
add
pop
lds
mov
mov
xor
adc
adc
mov
hlt
lods
or
je
jg
loopne
pop
inc
xor
rcrl
fsubrs
jno
pop
notb
imul
push
mov
aas
jb
in
pop
pop
in
dec
jne
fbld
adc
call
in
cs
divb
dec
stos
cmpsb
sbb
arpl
inc
lret
pop
mov
jae
insb
add
test
dec
dec
inc
and
lock
adc
insb
stos
subb
out
fucompp
or
xchg
push
in
jae
adc
inc
sbb
mov
loop
and
pop
sub
dec
jo
popa
dec
sarb
lret
pushf
sbb
popf
push
inc
sub
xor
mov
mov
xlat
and
push
shrl
subb
xchg
addr16
jae
cmpb
fadd
ja
shrl
fmuls
sub
imul
jb
mov
scas
jecxz
stos
testl
sbb
arpl
stc
cmp
jbe
or
aad
hlt
jl
sahf
jo
mov
mov
clc
sti
inc
imul
sbb
ljmp
sub
loop
ljmp
cmp
xchg
fldenv
push
fsubl
mov
mov
adc
or
and
int
jmp
inc
jecxz
xlat
mov
gs
icebp
hlt
stc
call
sti
mov
data16
mov
insb
subb
in
fcoml
mov
pop
jnp
sbb
xchg
cmpb
in
cmp
repz
sub
xchg
mov
inc
jae
jmp
in
cmpsb
dec
adc
imul
mov
jmp
push
ja
jo
fldenv
mov
jbe
cwtl
pop
fidivrs
call
ret
das
data16
cmp
cltd
rcrl
aas
outsb
bound
jl
mov
repnz
push
aas
aam
inc
stos
lahf
iret
inc
lahf
cwtl
mov
xor
fisubrs
jnp
fcomi
lock
insl
decb
in
cmp
cmp
fucomip
sub
or
sbb
rsqrtps
imul
xor
lahf
sbb
mov
dec
lret
pushf
and
inc
jbe
icebp
sbb
cmpsb
lahf
fisubrs
push
sub
dec
mov
imul
and
setbe
fbld
insb
xchg
add
rorb
icebp
push
mov
mov
pop
outsl
fcomp
fdivp
sub
arpl
mul
hlt
scas
lds
dec
adc
mov
arpl
in
xchg
xchg
fnstsw
notb
movsb
mov
mov
mov
lcall
sub
pop
push
dec
cs
sahf
js
inc
lods
dec
add
inc
test
out
comiss
lods
or
aad
lahf
cmc
and
inc
ffree
pop
xchg
and
jge
xchg
arpl
clc
add
cs
cmp
inc
aas
insb
arpl
or
pop
push
shll
push
es
mov
hlt
jl
jmp
jp
imul
out
pop
fcoml
xchg
sub
push
push
lods
or
pop
mov
out
ror
lcall
push
or
or
testb
and
outsl
mov
pop
fs
cmp
pop
mov
mov
jno
loop
push
mov
popa
test
shr
cmp
jle
xchg
jp
and
push
inc
ficoms
sub
adc
push
pop
int3
outsl
cmpsl
xor
sub
ret
cmpsb
negb
clc
push
shrl
in
jnp
push
sub
movsb
test
push
mov
mov
pop
xor
mov
push
fistpl
and
pushf
sbb
nop
scas
leave
aaa
shrb
mov
ljmp
jmp
out
cwtl
mov
stos
inc
movsb
rcrl
inc
out
xchg
xor
out
fsubrs
hlt
mov
addl
inc
je
pusha
adc
adc
aam
add
jnp
icebp
jno
and
je
and
fs
mov
stc
mov
sti
repnz
sub
out
insl
movsl
scas
sub
mov
int
cli
inc
inc
cmc
mov
pandn
mov
push
lret
or
xor
jae
fstpt
rep
pop
dec
lahf
in
lcall
xorl
and
mov
jp
sbb
push
shll
or
add
mov
int3
addb
js
sbb
add
xor
or
roll
mov
pop
sub
aas
sahf
fldcw
cs
into
sub
fsubrs
or
je
or
jbe
cmp
push
lea
mov
cmp
mov
cmp
and
fs
push
push
pusha
push
xor
mov
cld
out
add
in
pop
sti
bound
sub
jbe
mov
xlat
addr16
xor
push
js
imul
xchg
sbb
inc
inc
arpl
mov
stos
mov
ljmp
rcrl
sub
cld
dec
popa
les
scas
test
add
es
pop
inc
xchg
push
inc
enter
enter
notl
push
inc
test
push
repz
insl
call
jmp
mov
sti
clc
mov
insl
inc
mov
add
imul
pop
push
pop
push
aas
mov
mov
fnsave
cmpsl
movsl
push
xchg
fnstenv
imul
into
fstps
jae
mov
in
fldenv
sbb
mov
mov
mov
cmp
xchg
test
scas
jp
sbb
mov
enter
sub
sub
in
add
xor
sub
adc
add
fisubrs
inc
cmp
std
xor
xchg
push
lock
xor
cmpsb
pop
es
stc
testb
mov
mov
cmp
out
imul
pop
pop
sarl
jl
std
es
mov
dec
mov
pushf
nop
jge
mov
xchg
and
ss
inc
inc
pop
movsl
pop
pop
lret
lcall
outsl
mov
test
mov
mov
shr
loopne
xchg
sbb
and
repz
sar
or
jb
dec
rcr
xor
es
subl
sbb
cmp
cmpsb
ror
cmp
mov
xchg
add
pop
stc
adc
sub
loope
and
or
ds
daa
icebp
rcrl
out
xor
enter
jns
cli
ja
sahf
pop
and
sub
jnp
rorl
leave
mov
fbstp
ret
je
sbb
test
and
mov
in
fucom
movsb
pop
xor
mov
fstpt
testb
cwtl
xchg
in
cld
push
sbb
popf
aam
jno
mov
aaa
adc
jg
fdiv
push
or
notl
gs
fwait
das
mov
fistps
je
mov
clc
adc
cli
fcmovnbe
add
add
jmp
addb
push
xchg
and
mov
in
adc
rorb
cmp
jbe
inc
inc
mov
repz
jg
loope
dec
lods
inc
sti
ror
adc
push
out
inc
add
int
xor
scas
repz
in
mov
out
jns
adc
notb
mov
ljmp
stc
outsb
jno
repnz
xchg
ror
sub
push
mov
hlt
addb
mov
push
pop
int
pusha
mov
pop
aas
out
cli
push
dec
in
lock
clc
fs
mov
lds
dec
pop
push
sbb
xchg
arpl
mov
push
or
push
ret
test
lret
add
or
and
jo
sub
cli
dec
ret
popa
mov
inc
sbb
sbb
jle
xchg
xor
add
pop
or
mov
push
and
sub
es
sbb
dec
xchg
test
mov
add
cmp
ret
jnp
ja
pop
arpl
rorb
add
push
mov
adc
call
mov
adc
jns
jnp
das
push
je
ficompl
adc
sub
and
sub
aam
in
add
and
insl
push
inc
ss
add
mov
xorb
dec
out
adc
bound
fsubp
and
pop
sbb
push
popf
loope
out
or
mov
mov
pop
jmp
lock
dec
ss
inc
cwtl
hlt
pop
push
jl
jno
cmpsl
dec
stc
jb
jmp
sahf
sbb
jp
imulb
sub
bound
push
insb
and
xchg
jae
filds
test
sbb
mov
das
sbbl
fmull
jmp
push
push
rorl
jmp
ja
int3
incl
out
xor
mov
adc
into
sbb
pushf
xchg
inc
and
fwait
aam
pushf
lcall
arpl
repnz
pop
dec
jmp
leave
jl
shlb
sub
pushf
xchg
andl
cltd
sub
fnstsw
pop
push
or
sbbl
or
mov
les
cmc
in
jg
shlb
out
stc
cli
popa
ja
mov
sahf
repnz
add
enter
inc
sub
iret
hlt
cs
jnp
xchg
jb
scas
or
lret
jmp
jg
xorb
mov
cmpsb
jmp
addl
inc
adc
inc
int3
int3
mov
cwtl
push
cmp
ljmp
mov
pop
fwait
push
adc
push
xchg
sbb
mov
adc
add
sub
stos
movsl
adc
inc
xchg
dec
shll
out
xchg
sahf
xchg
lods
daa
adc
cmp
inc
xor
or
inc
push
addr16
ret
dec
xchg
push
push
adc
aaa
pop
mov
adc
or
les
lcall
data16
mov
mov
jo
push
ret
or
mov
icebp
lret
test
push
pop
pop
push
es
cltd
ss
adc
xchg
lcall
in
sti
jl
sti
and
jbe
popa
cwtl
scas
pusha
int
adc
loopne
repz
out
data16
push
sbb
adcl
jbe
shll
xchg
dec
mov
push
and
fidivl
mov
xor
shrl
xor
sbb
es
cmp
movl
cmp
scas
lahf
popa
sub
xor
jo
mov
or
mov
or
fnsave
xor
add
push
mov
pop
std
mov
push
xorl
faddl
xchg
mov
or
sti
ret
aad
out
dec
insb
sub
dec
aaa
sbb
shl
jne
outsl
or
jg
ljmp
cmp
scas
sbb
roll
cld
mov
aaa
push
ret
xchg
dec
xchg
jg
es
mov
mov
and
mov
mov
push
subl
ljmp
je
cmp
ret
sub
das
mov
loopne
idivb
mov
out
mov
int3
cmp
shlb
test
xor
xor
or
push
adc
xor
mov
out
sbb
icebp
fcomps
or
popf
aad
pop
sbb
jbe
inc
xor
mov
or
and
sub
orl
cmpsb
jp
repnz
jno
sbb
sub
push
out
jp
mul
dec
lea
ret
mov
or
add
cmpsb
outsl
add
in
push
jno
stos
into
outsb
sti
and
and
leave
mov
insb
ds
and
in
adc
cltd
stc
andl
xlat
rcrb
jmp
ja
push
ljmp
stos
dec
lcall
jo
stc
add
xorl
dec
outsl
cltd
dec
jecxz
sbb
pop
and
mov
cltd
or
out
inc
je
inc
pusha
es
sarb
shlb
xchg
or
gs
ss
jecxz
daa
pop
jae
mov
or
idivb
pop
out
or
ds
jecxz
add
stos
sbb
movsb
cmc
nopl
sub
xor
jb
mov
xor
and
sbb
outsb
xchg
xchg
dec
insb
ss
pop
and
add
movsb
adc
sahf
mov
in
xchg
mov
add
and
pop
sub
aad
jle
and
adc
ss
and
xor
pop
inc
fcoms
arpl
lcall
rorl
je
lret
mov
std
pop
pushf
ja
mov
jg
mov
test
add
add
loop
mov
and
pop
mov
stos
test
dec
je
incl
test
push
int
pop
push
add
inc
cmp
neg
mov
xchg
dec
dec
inc
add
mov
int
push
sar
inc
adc
rorb
mov
and
ljmp
insl
push
les
add
sbb
inc
sbb
xchg
cmp
sbb
jle
mov
inc
jb
push
mov
xchg
adc
xchg
mov
cltd
ljmp
test
push
cs
ds
sub
xor
call
xchg
call
sbb
negl
in
dec
and
inc
inc
stos
mov
imul
jo
leave
dec
ljmp
mov
popa
out
lcall
sbb
cwtl
cli
fsts
jp
cltd
scas
mov
push
sahf
adc
outsb
outsb
adc
adc
sbbl
sbb
cmpsl
pop
cli
adc
popf
outsl
cwtl
sbb
inc
dec
jbe
scas
sahf
aas
addr16
and
cmp
xchg
mov
shll
push
lret
mov
xor
dec
jo,pn
mov
pusha
fdivp
pop
mov
pop
loopne
pop
jae
lock
fstps
pop
jmp
addr16
and
scas
jmp
dec
inc
cli
aaa
repnz
push
movsl
xor
add
lock
and
cmc
mov
sub
fs
or
sub
push
shlb
insl
pop
push
mov
xchg
aaa
inc
cmp
hlt
xlat
cmc
daa
adc
dec
inc
out
insl
mov
xor
inc
adc
adc
sahf
jmp
ljmp
mov
push
insl
xor
mov
mov
jae
jno
dec
mov
outsl
inc
aas
jno
roll
mov
xchg
fwait
sbb
add
ret
clc
nop
cmp
lods
leave
mov
jmp
mov
push
jae
mov
jle
pop
stc
mov
test
mov
repz
pop
mov
ret
inc
rcll
sbb
mov
mov
mov
movsb
jge
dec
push
shrl
mov
and
ficoms
lahf
loopne
push
adc
mov
inc
mov
add
xor
dec
xchg
sub
insl
insl
adc
mov
jg
pop
ficompl
out
push
mov
or
cmp
call
int
add
push
fs
fmull
fwait
cmp
rol
cld
sub
testl
and
push
rclb
adc
aam
or
scas
in
imul
cmp
jno
adc
push
dec
mov
pusha
mov
mov
inc
xchg
or
faddp
bound
movsl
xor
enter
jo
js
nop
xor
push
icebp
mov
adc
test
in
jb
adc
mov
lds
xchg
push
jl
lods
dec
fsubrs
push
pop
outsb
loop
sbbb
lahf
lods
sbb
ret
ja
lock
add
pushf
ss
out
push
jge
leave
or
mov
stos
int
sti
dec
xlat
mov
xor
or
push
inc
lret
bound
jl
mov
pop
ds
push
ljmp
xor
sti
loop
data16
pop
pop
mov
mov
cld
or
jnp
fsub
testl
xchg
pop
iret
lcall
scas
jb
out
sti
cmc
jb
add
into
mov
mov
adc
popl
js
pop
faddl
cld
cltd
jo
jge
rclb
js
sahf
mov
ror
roll
push
xchg
repnz
push
or
sub
iret
mov
sahf
push
ss
insb
insb
xchg
cmpsl
pop
and
outsb
mov
icebp
mov
int
enter
testb
mov
cmp
xor
cltd
test
ljmp
ss
cmpsl
repz
pop
xor
sub
fisubs
shll
je
jmp
or
ljmp
xchg
ja
jno
and
loopne
fstl
lcall
out
jl
les
inc
rcr
xor
or
lcall
adc
sub
sub
pop
outsb
mov
push
adc
lock
xchg
loopne
cmpsl
addr16
lcall
negb
in
adc
daa
call
push
je
mov
xchg
or
dec
and
add
add
and
out
xor
and
aam
fcompp
lret
push
mov
cmpsl
sub
jae
cmp
movb
add
test
lods
jo
pop
hlt
out
cmpsl
jge
xchg
add
inc
xchg
scas
ds
pop
mov
call
outsb
dec
dec
popa
jge
out
lcall
cmp
scas
sub
adc
ficoms
loop
movsb
push
cmp
nop
jl
jb
cmp
out
in
push
loope
int3
inc
jle
addr16
rcll
adc
mov
imulb
in
xchg
adc
jae
add
pop
rcll
mov
push
mov
dec
aam
cwtl
insl
sbb
sbb
inc
sub
cltd
test
imul
xchg
xchg
add
clc
ss
xchg
and
sbb
out
iret
faddp
mov
loope
in
aaa
dec
mov
and
inc
pop
add
fld
xchg
fcoms
out
inc
es
pushf
cltd
add
dec
mov
cmp
inc
js
inc
mov
pusha
int3
lcall
inc
inc
imul
xchg
xor
xchg
jnp
push
adc
mov
sbb
rolb
dec
in
loopne
loopne
int3
into
add
cwtl
imul
sbb
lea
out
adc
push
test
pop
jo
add
pop
sti
rcrl
cmp
mov
push
imulb
push
out
iret
std
push
daa
mov
dec
ljmp
data16
outsl
out
data16
mov
lea
fsubs
and
into
inc
adc
mov
inc
xor
mov
daa
mov
inc
lret
mov
inc
add
es
iret
adc
pop
fwait
lods
mov
lods
lret
lods
lret
hlt
inc
adc
into
out
mov
xchg
es
pop
incl
lea
jo
imul
out
jmp
dec
push
pushf
lds
subl
add
jne
rol
fstl
imull
and
jnp
mov
dec
xlat
or
bound
out
push
pushf
or
lahf
mov
in
mov
out
ret
out
jo
push
bound
aam
icebp
cwtl
das
lret
into
movsl
repnz
in
outsl
dec
subb
and
cmpsb
imul
lahf
xchg
mov
cmpsb
cld
adc
fisubrs
cmpsl
jmp
movsb
inc
jg
jbe
divb
mov
sbb
sbb
out
cltd
adc
and
mov
push
fstl
xor
sub
repz
jmp
mov
lods
aas
rcl
push
mov
rorl
lock
or
jl
sarb
jle
mov
jecxz
into
jae
sbb
jae
pop
cmpsl
push
repnz
lds
mov
adc
cltd
adc
dec
fwait
mov
aas
jno
aas
inc
fwait
jp
aaa
dec
adc
add
adc
call
adc
or
jo
testl
mov
outsb
push
pop
inc
cli
mov
mov
cmpsb
div
push
xchg
ljmp
dec
lret
subl
dec
daa
loope
dec
ss
and
mov
jge
das
scas
add
icebp
xchg
lods
push
jmp
outsl
xchg
inc
xchg
jge
aad
mov
test
ret
or
inc
idivb
mov
add
icebp
sub
adc
loopne
call
adc
mov
sar
xor
test
sti
popa
mov
pop
inc
movsb
cmpb
aad
addr16
mov
sti
mov
movsl
out
cltd
aas
dec
sub
and
stos
sub
call
cmpsb
mov
push
icebp
sbb
mov
into
jnp
push
mov
adc
xor
sbb
movsb
cmp
pusha
or
lods
notb
int3
jmp
test
mov
jns
cmp
add
insl
outsl
push
decb
imul
adc
mov
scas
lret
cmp
insl
sbb
icebp
inc
push
outsb
cli
dec
out
ret
and
sbb
shl
leave
pop
xor
push
jae
xlat
jle
sbb
movsb
je
push
push
lret
cmpsl
aad
push
xchg
dec
daa
push
push
fwait
xlat
inc
repnz
mov
push
xchg
rcrl
xchg
lds
pop
sub
jge
js
cmp
lret
cltd
lds
fidivrs
fildll
mov
fisubl
xor
mov
add
les
and
ret
dec
sahf
lcall
jl
out
adc
imul
and
mov
xlat
fistpll
jmp
pop
jle
ficoml
xchg
sar
fwait
push
hlt
mov
jecxz
mov
nop
stc
out
push
mov
je
rolb
cmp
cmp
dec
out
repnz
mov
lea
jl
test
mov
mov
rep
and
add
lea
add
leave
mov
inc
sahf
jl
jp
ljmp
stos
movsl
arpl
fnsave
ss
inc
clc
or
mov
adc
fdivr
cmp
ds
test
mov
cmp
ds
aas
pusha
mov
movsl
pop
mov
into
xor
jl
mov
add
xor
das
aad
jle
sbbb
push
fsubrs
xchg
lahf
push
shlb
cld
sbbb
insl
jp
imul
sbbb
xchg
dec
rorl
dec
test
push
fidivs
clc
push
cmp
push
negb
sub
inc
add
sarb
jle
cmp
fs
sar
inc
popf
dec
jg
xorb
xor
mov
cmp
test
popa
push
cmpl
ret
xor
outsl
cmp
imul
xor
mov
test
dec
mov
das
push
fimull
or
pop
and
movsb
mov
jge
scas
mov
sub
js
push
jg
sbb
out
icebp
sub
xchg
inc
in
push
push
fistpll
out
out
xchg
fcoms
fidivl
cmp
subl
dec
aad
rcl
cmp
dec
hlt
out
xor
adc
inc
jmp
sarl
jge
out
xor
mov
dec
in
adc
and
mov
insl
in
mov
js
movsl
dec
mov
lea
jge
mov
xor
mov
jmp
adcl
imul
or
add
xchg
pop
loop
sub
and
jmp
cmp
mov
lahf
jbe
icebp
mov
sub
pop
push
and
into
jmp
push
jns
dec
cmpsb
jp
and
push
into
fwait
mov
aam
xchg
inc
daa
jge
xchg
sarl
loope
pushf
push
cmp
lahf
sub
cld
in
sahf
push
xor
leave
arpl
mov
xchg
popf
test
jge
xor
push
int3
std
jle
std
xchg
pop
dec
loopne
das
lcall
mov
and
out
imulb
mov
add
adc
inc
jecxz
dec
mov
jae
movsl
test
push
imul
push
sbb
mov
and
jo
outsl
outsl
pop
lods
sub
aam
add
cltd
ret
or
pop
dec
xor
nop
lret
adc
jb
shr
inc
das
sbb
mov
jo
jb
push
dec
dec
xchg
jne
pusha
adc
pop
push
std
pop
push
jge
mov
jecxz
pop
fiaddl
inc
inc
xchg
gs
lret
es
sbb
shll
jmp
push
cs
push
sub
and
int3
xlat
cmpsl
dec
adc
ja
mov
mov
and
aas
push
xor
popa
jo
pop
push
adc
rolb
out
inc
mov
aam
jb
popf
imul
shrb
push
test
aaa
dec
jmp
daa
cltd
sbb
cmp
mov
repnz
xchg
int3
and
xor
rorl
mov
fucom
cmp
sbb
mov
stc
mov
ret
mov
in
xor
and
fildll
push
lock
push
sar
dec
mov
or
repnz
pop
rol
stos
jecxz
sti
mov
pop
idivb
mov
scas
push
or
ret
movsl
out
push
jbe
xor
enter
lret
sub
or
sub
nop
pop
fisubrl
xrstors
lods
ljmp
cli
and
jb
inc
jns
or
or
pop
adc
mov
sbb
out
lods
jnp
mov
std
mov
adc
cmp
sub
add
adc
xchg
shll
bound
cmp
pop
push
movsl
jp
in
and
xlat
sbb
fidivrs
imul
sbb
mov
adc
test
fidivl
push
fisubl
jo
pop
jns
out
xchg
sbb
arpl
aam
mov
fisubs
xor
xorl
jns
xor
push
push
sbb
lcall
bound
nop
or
lret
push
mov
icebp
adcl
movsl
inc
add
or
dec
nop
test
test
pop
out
mov
fcomps
mov
dec
adc
xor
sbb
xchg
out
je
dec
inc
xchg
imul
jo
sti
leave
cmp
pop
jg
xlat
addr16
mov
xor
scas
mov
ret
rol
add
std
sbb
xor
stos
cwtl
push
jne
push
or
jae
mov
pushf
in
or
cmp
jg
push
dec
cs
xchg
xchg
popf
sbb
ljmp
shll
mov
imul
lret
cmp
fiaddl
lcall
popf
lods
pop
sub
adc
imul
or
push
addr16
push
add
lret
movsl
or
test
lods
rcrl
xlat
sbb
leave
add
sub
add
lock
sbb
outsl
scas
leave
ficomps
mov
jbe
clc
xchg
das
sbb
sbb
mov
in
bound
add
decb
pop
sub
dec
icebp
outsb
add
cli
sbb
movsb
out
loope
stc
mov
rcrl
or
imul
adc
jp
sub
xor
jg
imul
faddl
test
jle
inc
lahf
lea
mov
push
hlt
aad
inc
sub
icebp
mov
mov
mov
jmp
mull
mov
dec
out
xor
add
fidivs
stos
cmp
mov
and
mov
xor
dec
cmp
stc
lods
ss
pushf
inc
movsb
fdivs
sub
mov
mov
mov
aam
push
push
inc
test
mov
ret
int3
adcl
fnstenv
testl
test
insb
adc
push
shlb
out
in
bound
imul
js
and
xlat
fidivl
push
xchg
dec
or
xchg
sbb
xchg
push
ja
shrl
jbe
test
shlb
xchg
and
xchg
shrb
add
cmp
sub
dec
mov
dec
pusha
setp
outsl
and
test
sbb
test
ja
mov
imul
jns
cmp
out
jne
in
push
test
aad
imul
repz
or
adc
push
fstp
out
push
aam
and
push
push
cmpsb
push
ja
std
or
sti
fdivr
xor
pop
push
popf
aaa
mov
xor
mov
and
rorb
cltd
lret
pop
adc
push
jo
fwait
pop
mov
out
sub
je
or
call
enter
rcrl
loopne
dec
push
fimull
fcomps
dec
ficoml
lahf
jge
xor
enter
pop
fcoms
push
leave
insb
mov
jno
or
das
or
sarl
test
push
sahf
lahf
repz
lahf
sub
inc
rcrl
mov
mov
negb
mov
sub
packssdw
jae
jb
in
imul
lcall
add
iret
pop
div
or
sbb
pop
pushf
adc
inc
jns
imul
ret
jecxz
incl
lret
dec
dec
out
int
mov
mov
test
outsb
mov
iret
push
loopne
or
jae
mov
xchg
cmpsl
imul
outsb
mov
or
push
mov
inc
xor
xchg
fs
js
push
add
xor
pop
loopne
dec
or
scas
cmp
in
jmp
adc
dec
pop
hlt
loope
mov
adc
mov
jle
or
test
add
lds
push
out
pop
mov
into
leave
jg
and
sub
xchg
xadd
mov
rclb
jns
or
pop
les
and
jae
scas
aaa
iret
call
sbb
push
out
cmp
jp
mov
xchg
or
mov
sub
fdivrs
adc
mov
pslld
push
push
clc
cmpsb
mov
push
jg
jns
fmull
js
dec
adc
sarb
mov
xchg
or
mov
insl
inc
mov
jne
lahf
and
lcall
out
xor
stos
cs
aas
movsl
and
movsb
or
fwait
outsl
in
ret
cmp
cmc
inc
js
leave
xchg
push
and
mov
xchg
pop
je
pop
push
xchg
fistps
js
xlat
icebp
mov
mov
xlat
imul
adc
push
in
ljmp
and
mov
insl
repnz
or
and
inc
add
shll
in
push
inc
mov
cmp
enter
pop
dec
pop
movsb
lods
sub
xor
adc
sub
mov
mov
xchg
add
sub
adc
dec
xchg
test
dec
incb
jns
test
and
aas
popa
jae
ja
loop
call
ret
mov
testl
pop
adc
or
jbe
jns
test
rorb
aas
xlat
push
xchg
rol
xchg
inc
cmpsb
inc
and
mov
xor
es
mov
dec
loop
nop
daa
lcall
jle
or
xchg
and
popf
or
call
aad
jae
cmp
in
fneni(8087
out
inc
mov
mov
sbb
sbb
xor
in
jl
scas
popl
mov
push
add
sub
cmpsb
das
sbb
dec
dec
mov
or
cmpsl
mov
adc
mov
push
ja
enter
add
cmovge
jge
mov
and
lock
in
ret
aad
cmp
jmp
dec
push
sti
ror
ret
mov
cmp
movsl
xor
into
inc
fimull
sub
jmp
sbb
lahf
sub
or
inc
mov
or
ljmp
lret
mov
xchg
shll
insb
stos
dec
add
pop
and
and
lods
out
cmc
dec
fnstcw
data16
sbb
xor
mov
xchg
fwait
fs
pop
test
mov
push
mov
test
enter
shlb
jle
loop
sub
enter
in
fidivrs
aas
sahf
add
cmpl
fcmovb
ret
adcb
mov
xchg
xchg
sub
imul
or
addr16
in
lock
dec
dec
cltd
out
ja
sub
dec
add
pop
jb
jae
push
mov
cmp
sbb
jl
ss
cmp
or
inc
repz
jg
inc
jae
int3
add
mov
mov
movsb
inc
mov
and
inc
mov
cmp
cmp
and
into
cli
mov
mov
scas
into
jnp
mov
inc
and
inc
jp
mov
gs
cmp
out
mov
scas
adc
push
nop
xor
sbb
mov
stos
sarl
push
loop
repnz
not
jle
int3
xchg
leave
pop
and
xchg
shrl
sbb
jae
cwtl
bound
stos
or
mov
sub
xchg
mov
and
dec
mov
daa
add
cli
push
xchg
cmp
repnz
pop
repnz
loope
mov
jne
bound
daa
xchg
push
xchg
inc
or
cli
mov
rcrb
inc
mov
push
jl
sarl
push
xchg
mov
cld
arpl
mov
mov
shrl
pop
push
sti
and
xor
addb
std
jo
hlt
aas
icebp
je
mov
mov
rcrl
adc
aam
fisubrs
sbb
cmp
js
jne
rolb
and
add
sbb
shll
mov
add
xor
sbb
dec
and
pop
sub
sub
fsubl
dec
xchg
ds
xchg
and
hlt
push
add
icebp
push
push
outsb
cmpsl
or
pop
mov
jge
ja
mov
cltd
xchg
pop
andb
xchg
daa
inc
loop
and
xchg
add
cmp
jne
es
jge
popf
stc
fistpl
jbe
addl
aad
outsb
addr16
loop
movsb
icebp
outsb
int3
push
inc
test
or
push
xor
pop
das
and
cld
mov
jle
mov
add
xor
mov
out
cmp
mov
jecxz
repnz
dec
push
lahf
lock
add
mov
les
call
mov
arpl
xchg
cmpsb
inc
add
fcmovnbe
andb
jb
fdivrp
sbb
xchg
mov
mul
mov
mov
clc
punpckhdq
xorb
scas
mov
inc
shlb
ds
adc
add
clc
dec
jnp
popf
jne
fadd
cvtpi2ps
jp
xchg
fwait
lds
cmpsl
test
push
loop
daa
inc
ljmp
adc
ret
sbb
xorl
push
ljmp
ds
pop
or
daa
dec
lds
mov
sahf
or
pop
ss
subl
dec
mov
jne
cmpb
lds
inc
call
lcall
or
movsb
or
mov
jl
or
loopne
jg
cmp
xorl
mov
xorl
loope
inc
insb
fisttps
cmpsb
push
scas
negb
xlat
loop
jne
xorl
jge
dec
insl
int3
add
ret
stc
iret
pop
lea
inc
fists
mov
roll
jbe
and
cli
fwait
cmp
aam
popa
push
sub
out
dec
cmp
xchg
rolb
insl
sti
clc
ror
jecxz
loopne
aad
adc
jle
jae
xchg
pop
mov
mov
out
push
leave
movsl
pop
adc
pop
mov
outsl
xor
xor
fstpl
mov
outsb
inc
pop
out
cwtl
js
cmp
adc
loop
cwtl
or
cmp
aad
cmpsb
mov
add
nop
sarl
inc
mov
lcall
sbb
push
sbb
add
sbb
stc
mov
aas
pushf
jnp
mov
imul
push
mov
sub
and
mov
lods
jg
jecxz
les
fucom
jns
lea
xor
or
pop
int
cmc
pop
aam
or
movsb
pop
lods
pusha
fsubrs
aas
cmc
test
gs
cmp
dec
ss
out
mov
xor
rolb
sysexit
sti
mov
fidivl
jb
push
bsr
push
jl
jl
repnz
inc
lahf
les
jns
bound
fcmovbe
cmc
cmpsb
test
aam
sub
ljmp
fiaddl
lds
push
mov
out
imul
lret
repz
inc
push
push
or
enter
add
adc
cmp
jnp
adc
pop
pop
and
out
or
cmpsl
cli
pop
outsb
ss
xor
enter
adc
rcl
mov
push
outsb
jecxz
xlat
les
xor
test
or
fisttpl
mov
shlb
outsl
push
mov
ret
lea
gs
pusha
xchg
xor
push
popa
enter
dec
jae
cmp
hlt
mov
sub
dec
stos
and
xchg
sub
ret
es
jns
mov
xor
test
loopne
aam
add
cmp
dec
mov
rorb
dec
mov
test
int
mov
sbb
cltd
in
cmp
leave
mov
mov
push
bound
sbb
adc
cmpsb
daa
fiadds
dec
int3
scas
mov
inc
out
xor
inc
call
out
outsb
sbb
mov
inc
mov
stc
mov
sbb
ja
add
in
shl
inc
mov
adc
add
pushf
pop
add
cmpsl
push
out
aaa
jmp
dec
lret
in
inc
jnp
adcb
push
sti
subl
mov
mov
mov
ret
cld
add
mov
dec
rcr
loope
xchg
sub
out
test
shrb
push
in
jb
sarl
ret
add
pop
xor
rorl
dec
inc
daa
lock
adc
mov
outsb
cli
fldl2e
inc
xchg
arpl
mov
inc
js
bound
pop
jb
popf
jg
shlb
les
dec
mov
jb
and
in
fidivs
int3
out
sub
pop
sub
daa
sub
movsb
out
adcb
cmc
xchg
sti
nop
sub
cmp
outsb
in
inc
dec
xlat
adc
insl
mov
outsl
xor
stos
inc
push
sbb
js
lret
mov
loope
scas
aam
xor
or
outsl
push
or
jmp
or
fildl
mov
dec
fimuls
outsb
shrb
aas
aam
cs
icebp
sbbb
cmp
mov
push
or
into
xchg
sbb
mov
fldcw
hlt
mov
sbb
cmc
std
xchg
int3
hlt
inc
out
ret
data16
andb
push
xlat
arpl
cld
lahf
pop
ror
mov
add
mov
lahf
fwait
cmp
lods
mov
leave
push
sbb
icebp
sub
gs
sbbb
rorl
movsb
out
lock
add
sbb
pop
pop
xor
inc
fs
jmp
pop
call
out
cmpsl
pop
popf
pop
jae
data16
je
imul
inc
xor
or
and
out
inc
jo
dec
and
mov
xor
repnz
and
out
add
cltd
add
int
fiadds
mov
or
std
subl
and
xchg
fisubs
mov
jo
insb
rolb
stos
js
fbld
pop
push
xchg
lcall
cwtl
mov
cmp
faddl
dec
jl
and
jo
add
call
fisttpll
xchg
and
shlb
pop
je
mov
shll
int3
out
mov
dec
in
or
pop
adc
xor
push
push
aas
div
fs
inc
cmp
inc
xchg
inc
gs
add
rolb
or
ret
repnz
push
enter
dec
into
xchg
cmp
push
outsb
outsb
scas
adc
sti
add
mov
push
movsb
int3
shll
mov
divl
out
sub
jnp
psrlw
mov
aam
push
and
fs
and
sub
mov
out
or
frstor
dec
cmp
add
loop
inc
cwtl
or
test
jmp
das
push
ljmp
inc
loope
cmpsl
popa
test
push
lahf
mov
leave
movsl
mov
sti
rclb
lcall
jnp
movsl
scas
and
out
out
inc
or
mov
stc
shrl
out
push
call
lahf
cltd
jmp
fstpl
loop
push
jnp
pop
xor
call
das
out
pop
xchg
sbb
sub
addr16
insl
lcall
insb
into
xor
pop
rorb
mov
in
shlb
std
pop
pop
scas
push
pusha
jg
cs
adc
cli
sbb
pop
inc
insl
mov
iret
sbb
add
cmp
daa
lret
xchg
cmp
adc
push
mov
fwait
cmp
or
imul
push
divb
pop
cwtl
movsb
jo
data16
inc
sbbl
stc
popf
jae
jnp
iret
clc
or
mov
pop
mov
xor
mov
pop
xchg
mov
lds
aas
pop
inc
arpl
push
int
cmp
mov
xchg
xor
push
repnz
hlt
mov
and
lods
jmp
lret
daa
mov
fwait
leave
adc
test
mov
cmc
stos
push
nop
add
xchg
aaa
mov
or
daa
pop
andl
arpl
cwtl
in
inc
xor
scas
mov
movsl
push
mov
mov
dec
cmc
sbb
addr16
cmp
xchg
xchg
rcrb
gs
mov
xor
subl
xchg
data16
out
xchg
je
push
in
iret
mov
or
fwait
out
mul
or
rorl
or
popa
jae
sub
scas
mov
test
pop
or
push
je
add
pusha
xchg
or
or
movsb
push
dec
push
mov
dec
add
pop
cmp
xor
aas
mov
cli
jecxz
cmc
push
shll
pop
cli
fimuls
loopne
test
push
nop
cwtl
xor
push
pmulhw
add
push
pop
jg
push
mov
pop
inc
mov
mov
adc
orl
inc
mov
or
pop
cmp
outsl
hlt
mov
outsl
test
loop
filds
lock
and
push
insl
dec
add
lods
hlt
icebp
cmp
mov
int3
ja
and
xchg
outsl
pop
sub
es
xor
dec
ret
xchg
hlt
mov
test
cmp
xchg
pushf
adc
pop
xchg
jl
je
and
fwait
movsb
adc
mov
hlt
adc
lds
mov
mov
aad
push
add
mov
adc
sbb
cs
push
xchg
and
out
jp
js
js
adc
push
xchg
adc
xchg
int
sbb
inc
jns
xchg
mov
mov
sub
mov
add
mov
aaa
push
test
mov
mov
dec
cs
mov
ret
pop
sti
outsl
sbb
lret
dec
xchg
fstpt
aam
jb
fisubs
dec
inc
out
jle
mov
cmp
inc
mov
aaa
push
sar
lds
and
sub
daa
mov
ret
push
mov
push
mov
ret
cmp
shr
and
and
cmp
push
mov
das
int3
ficompl
sbb
ljmp
or
and
and
push
shrb
mov
jge
or
sbb
subb
cmp
or
subl
mov
push
adc
push
sbb
xor
aas
notl
loopne
dec
jge
orb
or
and
inc
popa
jge
aas
mov
cltd
push
mov
scas
shrl
push
push
cmpl
inc
pop
in
les
shrl
jmp
push
dec
add
cmovns
jmp
std
movsb
or
fdivrs
xchg
cmp
aaa
sarl
jne
pop
fidivrs
shrl
cmp
push
test
mov
xor
xchg
inc
push
mov
add
in
cmp
ret
cli
or
dec
repz
jp
xor
das
mov
test
jecxz
out
inc
push
lock
mov
pop
ja
imul
mov
pop
fwait
sub
jns
xor
sahf
and
or
cmp
cmp
andb
pop
or
and
push
add
lret
test
mov
es
add
repz
lret
cmpsw
dec
or
jns
pop
enter
fsub
ds
mov
call
jge
sarb
inc
mov
test
lock
sbb
mov
xchg
cs
notb
pop
ret
lods
push
nop
dec
test
sbb
mov
aaa
sbb
arpl
in
add
dec
out
in
jecxz
addr16
jbe
mov
fnsave
inc
imul
nop
leave
pop
push
popa
lods
jecxz
xor
sbb
or
shl
or
movsl
fisttps
mov
mov
sub
data16
push
add
ja
cwtl
lods
scas
add
mov
setbe
add
bound
adc
cmc
inc
nop
lcall
fucomp
cmpb
mov
bound
dec
out
dec
mov
dec
outsl
lret
adc
xchg
xor
popf
mov
dec
pop
adc
out
movzbl
xlat
or
out
iret
inc
and
jge
sbb
jae
cmc
pop
adc
in
stos
jbe
mov
pop
popa
sub
scas
lods
mov
mov
xchg
xchg
ret
fwait
and
aad
and
adc
mov
rol
dec
xor
addr16
xor
cli
or
call
dec
inc
xor
insb
dec
outsb
dec
outsl
iret
repnz
call
scas
xlat
hlt
add
dec
inc
or
inc
xchg
or
fisubrs
shlb
mov
rcll
pusha
jo
mov
mov
cmpsl
repnz
ja
shl
insl
sarl
xor
pop
pop
cmc
cmp
in
mov
test
push
mov
push
mov
mov
jnp
arpl
dec
jbe
shll
jno
adc
and
cli
mov
or
dec
cmp
xchg
sbb
or
imul
jno
dec
sarb
mov
daa
fcomps
push
mov
in
push
fcmovu
ja
pushf
mov
and
loope
mov
aaa
addl
jns
dec
outsb
daa
adc
fwait
scas
dec
into
mov
xor
std
inc
clc
pop
xchg
pop
push
mov
div
xchg
cmp
bound
pop
push
mov
mov
sub
sub
mov
adc
push
dec
mov
jno
xchg
adc
sbb
lret
push
jmp
and
xchg
call
popa
int
aad
xchg
dec
out
mov
sti
xchg
inc
test
clc
push
pushf
call
inc
cmp
inc
jne
adc
or
div
sti
push
outsb
addr16
cwtl
das
cmp
dec
test
adc
xor
negl
lcall
les
sbb
mov
inc
cmp
push
xchg
andl
fld
pop
jg
jnp
lds
out
jo
or
movsl
pusha
in
int3
in
pop
xor
in
test
add
xchg
jnp
adc
orb
mov
daa
sarb
mov
pop
fldt
mov
out
pop
jmp
cmpsb
mov
dec
xchg
cmp
sbb
jbe
pop
push
rcll
mov
fnstenv
repnz
adc
outsl
aam
or
push
je
bound
loope
addr16
xor
pop
push
or
pop
cwtl
data16
pushf
or
xchg
pop
lock
stos
add
push
or
sbb
sub
test
xchg
mov
ja
mov
ret
popa
inc
push
adc
jle
imul
xor
sub
xchg
sbb
xor
jecxz
pop
lcall
jp
mov
ljmp
inc
adc
jmp
imul
mov
sbb
adc
jp
mov
les
sbb
inc
ret
aas
pop
inc
xor
and
or
xor
fwait
sub
adc
xor
xchg
push
das
aaa
mov
adc
imul
jmp
movsl
cli
fwait
in
adc
inc
mov
divl
movsb
cmc
sub
adc
and
push
idivl
test
mov
dec
pop
push
xchg
mov
jo
inc
jge
push
xchg
popa
popa
in
mov
das
stos
dec
imul
cmp
das
xchg
imul
lds
xchg
stos
sub
sbb
dec
lods
mov
aam
in
aaa
inc
xchg
dec
rcl
imul
adc
add
adc
mov
inc
mov
lret
test
gs
sub
xchg
jmp
jo
inc
cmp
push
jmp
add
cmp
xchg
cmp
pop
dec
sub
cmp
loop
xchg
nop
xchg
jnp
cmpb
jns
adc
loope
js
jns
stos
out
gs
test
xor
cmp
adc
xchg
lds
scas
out
es
repnz
arpl
movsb
insb
and
cmp
ds
dec
repnz
fimull
xchg
popf
adc
jno
out
add
leave
mov
xchg
add
test
rcrb
repz
push
std
rolb
mov
pop
add
adc
pop
sub
or
test
rclb
add
sub
mov
sub
xor
loop
mov
imul
xlat
jno
lods
push
fnstcw
jne
cmp
adc
xor
sub
inc
inc
std
cmp
adc
sahf
cmp
push
pop
repz
add
and
jno
mov
cmc
jp
lahf
lret
stos
pop
outsl
pop
pop
xchg
jp
popf
mov
shl
enter
aas
into
jnp
xor
out
cmp
mov
in
inc
jo
push
ss
adc
fistpll
out
sbb
mov
scas
daa
bound
xchg
lock
in
lahf
clc
and
mov
and
cwtl
popa
xchg
imul
xchg
roll
aaa
inc
xchg
mov
mov
jnp
insl
adc
push
jbe
jmp
mov
mov
pop
jnp
hlt
push
xchg
sub
into
int
lods
ret
into
or
jmp
cltd
jmp
mov
imul
roll
cmp
or
mov
shll
cs
rorl
out
arpl
sub
in
sbb
jae
adc
test
add
ljmp
pop
out
fcom
fnsave
inc
and
das
push
cs
insl
jecxz
jns
cmc
inc
arpl
adc
or
mov
pop
jge
test
cmp
fwait
leave
enter
push
xchg
and
aas
rep
orb
inc
orl
jl
insb
scas
jo
cmp
xchg
aaa
test
es
xchg
push
cmp
lcall
stc
pop
and
mov
int3
push
and
cmp
jno
sub
stc
adc
je
push
fidivrs
ds
aam
xchg
fldl
je
push
fcom
es
in
dec
std
inc
cmp
lcall
and
and
inc
sub
rcll
jns
xlat
mov
mov
xchg
insb
lock
ja
out
jae
cs
adc
jne
fs
cmp
adc
xor
inc
nop
sbb
pop
repnz
sub
xor
sbb
sar
ss
dec
in
in
mov
aad
and
aas
ror
rcl
stos
pop
adc
jns
jns
and
lret
rcl
ljmp
rcr
cltd
jne
rorb
roll
or
pop
jno
jo
sbb
jp
xor
es
into
ss
dec
jb
jl
mov
adc
cmp
pop
mov
jbe
ljmp
pop
in
popf
pop
leave
in
pop
mov
into
lds
sbb
jg
jb
lds
loope
fwait
aas
dec
and
out
xchg
out
out
stos
jmp
xchg
inc
add
insb
xor
xor
out
pop
pop
rorb
jecxz
jno
push
dec
std
pop
dec
pop
mov
inc
inc
insl
lret
mov
mov
arpl
iret
daa
in
clc
and
mov
and
in
rcrb
xchg
mov
or
xor
addr16
pop
mov
sub
pop
sub
mov
repz
push
shll
cli
push
push
inc
cld
jo
pop
andl
mov
in
popf
fcoms
mov
lahf
stc
out
mov
sarb
lret
push
imul
mov
mov
subb
xchg
sarb
scas
cmp
xchg
dec
or
mov
test
arpl
mov
mov
scas
repz
add
cmp
adc
gs
push
int
roll
test
lds
pop
push
and
pop
mov
and
outsl
add
lea
dec
int
rclb
rcl
cli
inc
mov
push
add
popa
mov
jg,pt
inc
add
das
jecxz
dec
pushf
xchg
loopne
mov
sahf
mov
mov
adc
aad
push
mov
divl
aaa
gs
fwait
jp
sub
and
or
xor
loop
sbb
andb
sub
shll
clc
mov
popa
cmp
xor
bound
sahf
orb
mov
jne
gs
out
lods
inc
ret
mov
inc
testb
dec
scas
out
das
or
and
push
stc
adc
mov
fmulp
mov
push
fmul
das
mov
repz
jp
leave
pop
hlt
out
call
pop
adc
mov
std
adc
fadds
push
sbb
loopne
incb
sar
sub
and
and
xor
mov
dec
out
mov
jp
push
cmpsb
cmp
or
push
in
rcrl
fldcw
stos
xchg
xchg
stc
mov
clc
mov
cmp
fwait
lods
push
stos
stos
das
pusha
push
rcl
imul
test
adc
cltd
fdivs
pop
jbe
add
push
std
pusha
add
dec
push
decl
insb
mulb
cmp
jmp
or
lods
repz
lods
xor
gs
adc
insb
mov
cmpsb
push
ss
sub
in
xchg
xchg
xchg
addr16
jmp
adc
mov
mov
mov
mov
jg
mov
sub
jb
ljmp
mov
es
push
stos
mov
pop
out
mov
jl
out
fs
add
subb
jmp
nop
pop
js
clc
psubq
test
js
push
dec
or
jnp
dec
rolb
xlat
jnp
cmp
es
cmp
pop
test
mov
mov
jae
or
je
shrl
jmp
add
stos
dec
add
stos
pop
xor
mov
lret
gs
pop
jmp
mov
mov
pop
bound
or
rcrl
xchg
addr16
pop
popf
jbe
icebp
pop
scas
rcl
es
mov
je
xchg
icebp
sbb
sti
push
xchg
pop
orb
cmp
ret
sub
sub
arpl
sbb
icebp
lret
int
jecxz
or
dec
xchg
inc
arpl
dec
or
int3
rcrb
insb
push
inc
xor
inc
out
insl
shrb
shlb
ss
or
jl
arpl
pop
or
notl
repnz
call
sbb
es
js
inc
fnstenv
xchg
xchg
cmp
arpl
mov
xchg
xlat
out
stos
push
add
jge
fsts
stos
imul
adc
stos
adc
ljmp
jne
mull
fisttps
inc
lds
add
in
sbb
je
mov
ss
fwait
cmpl
mov
les
lret
sub
xchg
out
aaa
jl
outsb
lods
mull
loop
inc
cltd
sub
test
cmc
xchg
pop
sub
loopew
clc
mov
inc
cmp
in
gs
addb
xchg
inc
movsb
addl
sti
sub
insl
fstp
xchg
adc
push
lret
cmp
mov
addr16
mov
push
cltd
mov
adc
cmpsb
xchg
dec
inc
pop
icebp
ja
outsl
cmp
imul
aas
add
in
scas
sbb
int3
and
out
addr16
scas
xorl
jnp
imul
aam
sbb
pop
clc
and
movsb
pusha
out
js
xlat
cwtl
cld
ss
lods
fcmovu
xorb
mov
sbb
icebp
cli
push
loope
lods
addr16
into
pop
cmpps
mov
cmp
push
and
mov
pop
jbe
les
mov
movsl
les
lahf
inc
mov
ffreep
popa
push
jg
jle
scas
dec
mov
addr16
outsb
iret
or
mov
shl
lock
mov
push
fs
or
pop
pop
inc
dec
push
ljmp
push
inc
dec
fstp
mov
xchg
into
rorl
imul
cmp
shll
inc
inc
xchg
outsb
fistl
popf
or
insb
mov
xchg
mov
push
push
xchg
sub
out
pop
je
xchg
dec
pop
fistpl
dec
add
add
jge
adc
shrl
and
cltd
jb
lret
ret
or
mov
cmp
stos
cmp
je
jg
or
pusha
dec
add
xor
mov
hlt
xchg
jecxz
adc
dec
xor
mov
adc
lea
iret
ja
and
mov
lds
repz
out
jbe
mov
cli
inc
mov
lea
mov
les
std
cmp
divl
loopne
xchg
dec
mov
jg
in
cwtl
insl
adc
jecxz
sarl
cmp
adc
mov
xor
sub
lahf
push
imul
fdivrs
adc
add
xorb
mov
push
aas
and
ljmp
jnp
lods
sti
sub
rol
add
jge
cmpsl
jmp
jp
jecxz
nop
dec
leave
jge
popf
mov
popf
pop
xchg
int
repz
or
sub
xchg
mov
xchg
xor
dec
enter
and
mov
and
fwait
inc
mov
mov
pop
je
sub
add
and
gs
sbb
js
dec
xchg
xchg
mov
mov
or
outsb
sbb
xchg
mov
in
test
insb
data16
mov
dec
test
fs
test
pop
cltd
xchg
jo
aaa
das
sbb
jno
hlt
imul
dec
mov
cmp
fcompl
adc
xchg
call
cli
les
loopne
xchg
adc
sbb
add
aaa
ror
inc
adcb
push
or
dec
mov
cltd
dec
scas
jb
cmc
and
cwtl
jb
adcl
scas
int3
pop
mov
sbbl
aam
xlat
xlat
outsb
cmpsb
pop
pop
test
and
pushf
stos
cmp
mov
cmc
xor
daa
xchg
xor
cmp
enter
addr16
push
imulb
push
mov
sbb
push
inc
incl
shll
push
ljmp
outsl
into
add
mov
xchg
push
sbb
fwait
shl
and
aam
cld
cmp
or
xchg
adc
adc
jge
and
adc
imul
pop
sub
scas
sub
fstp
xor
jmp
out
out
mov
sub
mov
lcall
pop
fisttps
je
pop
xor
sbb
dec
pop
mov
jp
fs
data16
jmp
js
js
mov
and
iret
jge
das
loop
cmpsl
dec
push
les
pop
leave
pop
std
gs
mov
or
into
xchg
cli
xchg
inc
sub
cmpsl
dec
jecxz
jp
in
inc
pop
mov
jo
sbb
sbb
scas
inc
sbb
mov
pop
in
shll
push
pop
dec
xor
loopne
cmc
out
inc
pop
fldl2t
pop
xor
icebp
dec
and
addl
mov
ficomps
jnp
mov
add
inc
lock
push
inc
pop
xchg
xchg
pop
push
xor
dec
out
cmp
cmp
inc
add
je
mov
pop
mov
push
fwait
in
pushf
arpl
ja
inc
lea
loop
mov
sbb
clc
decb
stc
mov
sbb
repnz
cmp
and
imul
sub
aaa
pop
mov
icebp
addb
xorb
fldenv
mov
jns
lock
fsubl
clc
xchg
sbb
pop
enter
lea
aaa
and
push
or
cli
add
out
es
cmp
add
das
stos
cmpl
scas
scas
inc
incl
into
loop
out
adc
sub
pop
mov
add
imul
pop
sbb
clc
adc
pushf
test
repz
mov
push
mov
outsb
bound
outsl
or
sbb
jno
and
mov
stc
xor
pushl
notb
das
inc
jl
mov
lret
push
xor
mov
cmp
or
push
mov
cmpsb
aaa
mov
orl
pop
add
leave
dec
das
ds
cld
push
repz
and
mov
push
adc
and
add
addb
lods
pop
adc
inc
in
and
pop
cmp
xor
push
es
arpl
lods
rcrl
and
sub
sti
jbe
or
out
or
shll
push
pop
push
loop
lock
pop
sbb
pop
test
aam
mov
jb
leave
jbe
sahf
cwtl
add
stos
jg
mov
cmp
adc
xor
xor
jge
dec
xchg
aam
fiadds
xchg
pop
jb,pt
adc
push
aas
shll
jb
adc
shlb
mov
xor
cli
clc
sbb
pusha
mov
jg
cmp
cwtl
adc
xor
sub
movsl
adc
adc
mov
add
inc
mov
add
push
or
sarb
jno
xor
std
jns
and
cmp
adc
sbb
pop
lea
and
xchg
or
and
test
movsl
loope
jns
fsubs
cltd
push
mov
fstpt
sub
rcll
out
mov
fldt
mov
or
sti
xchg
data16
daa
mov
je
mov
xchg
xor
mov
cmp
arpl
inc
pop
dec
or
lret
push
in
jno
add
in
cmp
movsb
out
pop
xchg
in
dec
leave
xchg
sbb
aaa
xchg
fadds
mov
mov
inc
sbb
dec
sbb
push
sbb
outsb
dec
pushf
mov
sbb
rol
lcall
jns
sti
mov
push
and
adc
cld
push
scas
or
lock
inc
pop
mov
add
jle
gs
rcll
push
push
pop
cmpb
pushf
mov
jmp
cmp
ljmp
xlat
rorb
mov
and
mov
and
push
inc
mov
aas
cmp
mov
mov
rclb
ret
stos
mov
push
sub
stos
fsubs
push
add
orl
push
imulb
xlat
mov
insl
mov
sub
je
cld
xor
push
rol
test
push
js
mov
into
mov
xlat
ret
je
or
or
xchg
enter
cltd
mov
cmpsb
push
jp
popf
idiv
xchg
cmpsb
std
and
mov
adc
jmp
nop
mov
mov
pop
in
loopne
das
aaa
dec
out
lods
out
lds
xchg
iret
mov
dec
jg
cwtl
leave
fiaddl
push
cmp
cltd
aaa
js
push
sub
or
and
push
push
pop
test
xlat
push
pop
shlb
stos
cmp
mov
mov
adc
push
insb
dec
or
je
dec
xchg
aam
jg
cs
pop
sub
adc
lret
or
and
and
cwtl
loop
pusha
cmp
out
bound
or
mov
andb
pop
push
adc
cmpsb
sbb
lret
mov
xchg
jmp
ret
add
movsl
xchg
push
mov
stos
fcmovne
sti
pushl
int3
fbstp
rorb
inc
int3
fxch
lock
pop
mov
pusha
add
sbb
xor
push
dec
or
sbbb
and
mov
sbb
xlat
adc
insl
aas
jo
jmp
inc
jecxz
pop
mov
test
push
mov
call
insl
sub
lret
xor
jle
mov
and
add
test
gs
ss
lret
mov
cmp
test
fdivr
mov
xor
sahf
das
out
call
addl
pop
test
cmp
pop
dec
add
outsb
xlat
jmp
out
daa
xlat
stc
popf
pop
int
int3
fcomip
inc
xor
out
mov
inc
dec
cmp
push
mov
pop
cmp
lea
rcrb
xchg
jecxz
sbb
pushf
in
add
sbb
pop
add
mov
and
fcmove
nop
push
ja
mov
xor
sahf
sti
mov
mov
sbb
int3
jp
fldl
cwtl
enter
call
arpl
or
test
or
xor
push
das
push
cmp
mov
popf
call
addr16
popl
aaa
mov
les
push
aad
fisttps
cmp
jp
test
jl
pop
in
mov
xor
adc
pop
out
hlt
pop
xor
mov
ds
adc
ret
mov
push
js
shrb
sub
xor
js
mov
loopne
aas
push
push
and
fs
xor
les
cmp
les
jge
sahf
xor
rorb
dec
dec
mov
cmp
outsl
mov
inc
jmp
lahf
dec
jmp
mov
push
jbe
adc
sbb
stos
xor
mov
repnz
xor
sbb
push
jp
ret
inc
add
cmp
mov
mov
jle
jge
ss
out
daa
mov
ret
out
and
cmpsl
cli
stos
cmp
cmp
dec
adc
fldl
push
xor
jae
nop
jno
fs
out
xor
xchg
add
das
jl
ret
adc
icebp
loopne
inc
xchg
add
insb
jae
test
inc
mov
scas
cmp
mov
push
cmp
xor
ljmp
pushl
lcall
cmp
popa
xchg
mov
mov
xchg
and
xor
sahf
jge,pt
dec
in
je
insb
or
push
ljmp
xor
lods
add
push
jle
pop
in
pop
cmp
mov
and
jle
rcrb
movsl
ret
js
arpl
pop
aaa
pushf
inc
and
xchg
repz
testb
insl
movsl
sarb
fidivrs
adc
mov
push
jmp
jne
insl
imul
pop
xorb
test
imul
mov
inc
jo
push
lahf
jle
cmpsb
hlt
push
cwtl
xor
arpl
adc
test
fsts
dec
fwait
mov
cwtl
scas
loop
cltd
ja
pusha
pop
into
push
pop
cmp
pushf
mov
imull
or
lods
mov
cli
jne
dec
mov
pop
inc
jmp
mov
data16
aas
jle
rol
lcall
fdivs
push
sbb
mov
xchg
enter
das
mov
int3
dec
lret
jae
adc
sub
pop
sahf
cmp
gs
mov
test
sub
in
jb
dec
cmp
mov
cmpsl
test
xor
cmp
xor
mov
imul
sbbl
movsl
xchg
mov
pushf
inc
sbb
stc
out
orb
pusha
rolb
xorl
ret
xor
mov
lahf
pop
sub
sub
fstps
xchg
push
or
cmp
jae
std
and
mov
mov
aad
sbb
pop
xor
dec
out
leave
sbb
inc
jno
enter
xor
call
cmp
pop
mov
sar
in
fwait
negb
push
clc
cwtl
xor
push
sbb
and
out
jns
xlat
sbb
pusha
sub
xor
push
in
and
xor
add
out
and
add
jle
daa
lods
add
push
repnz
std
pop
scas
adc
andb
mov
or
rclb
es
sub
test
jae
bsr
jecxz
pop
dec
test
lods
xor
pop
in
mov
je
mov
dec
sbb
aaa
or
div
mov
jecxz
stos
mov
ds
jae
ja
bound
xor
mov
imul
mov
mov
add
jp
fs
in
orb
xchg
jg,pn
pop
das
pop
xchg
mov
lea
or
mov
push
aad
fdivr
ds
jmp
mov
cmp
push
xchg
es
call
fs
dec
mov
bound
stos
stos
out
imulb
int
mov
lds
sti
add
pop
movsb
popf
sarl
fstl
les
in
lahf
dec
enter
fidivrl
std
inc
in
das
dec
cltd
push
jge
or
pmullw
lahf
and
add
push
cmp
add
push
push
cmp
mov
or
xor
sbb
pushf
and
cmp
inc
pop
std
xchg
pushf
in
lock
xlat
pop
or
cmp
cmpsb
test
adc
or
xchg
pop
scas
js
or
sbb
adc
pop
sahf
fidivrs
inc
cmpsb
out
iret
pop
cmp
test
fsubrp
out
push
mov
pop
repz
push
popf
dec
stos
ss
ror
cmpsb
or
jg
shrb
in
inc
xchg
orb
test
xchg
mov
das
xchg
xlat
push
ss
jmp
or
push
cmp
icebp
jle
inc
and
cmp
ja
cmpsb
scas
les
xor
jl
adc
inc
mov
cld
xor
pop
adc
mov
sbb
lret
lret
xchg
addr16
xor
cmpsb
or
or
mov
dec
or
inc
jl
sbb
xchg
inc
outsl
dec
push
ss
cmp
mov
jno
xchg
addr16
mov
jecxz
xchg
movsb
insb
inc
sbb
lods
add
cmp
out
xchg
loop
mov
pop
sub
imul
and
mov
stos
mov
dec
aaa
lahf
stos
sbb
outsb
rdpmc
int3
dec
bound
add
or
lods
test
clc
fwait
sahf
clc
imul
dec
pop
jmp
bnd
sbb
mov
jb
sbb
jge
and
in
fnsave
jns
add
shrb
inc
adc
incl
cwtl
xchg
mov
in
mov
into
int3
mov
add
and
xchg
and
xorb
rorl
inc
and
sti
pop
bound
cmp
pop
mov
cli
xchg
push
das
mov
lea
inc
or
shrb
addb
mov
add
push
fldenv
daa
das
or
stos
cltd
push
push
xchg
add
movsb
add
xor
nop
inc
push
xchg
cmc
int
test
sahf
cmpb
xor
and
xchg
add
mov
sub
mov
in
repz
int
leave
in
stc
imul
mov
cmpsl
xchg
stos
movsb
shrb
test
sbb
in
mov
sarb
and
jl
adc
and
sbb
cmpsb
mov
mov
ljmp
and
pop
stc
push
ljmp
pop
push
and
xchg
repnz
sti
cmpl
popf
into
sub
test
adc
jnp
or
dec
mov
jno
pop
pop
and
and
out
jbe
cld
orl
test
mov
sarb
rorb
repnz
fdivr
les
fstl
add
popf
mov
ret
test
outsl
add
cwtl
out
push
mov
pop
loope
cmpl
js
outsb
addr16
or
lcall
cltd
jmp
mov
repz
mov
push
in
push
lea
in
or
rclb
mov
inc
mov
add
sbb
pop
mov
xor
imul
dec
jecxz
xchg
and
sbb
sub
daa
std
repz
scas
add
stos
jl
and
push
sti
sbb
fdivl
mov
xor
mov
andb
pop
lods
adc
lock
lcall
push
push
js
sbb
pop
jno
adc
cwtl
cmp
xchg
aas
mov
xor
mov
adc
mov
adc
fnstcw
mov
xchg
je
icebp
push
mov
hlt
bound
cmp
push
sbb
aas
in
repz
cmc
and
pop
push
or
bound
les
cmp
scas
in
aaa
inc
iret
out
fwait
subl
sbb
shll
ds
dec
scas
xor
dec
call
aas
cmpsl
sbb
and
cmp
lods
aad
dec
inc
ds
mov
mov
stos
lods
decl
aad
and
lret
cmpsb
push
and
sbb
jl
stc
cli
jmp
push
pop
mov
xor
outsb
jecxz
cwtl
dec
aad
pop
jle
dec
scas
outsl
psubq
aam
mov
sti
xor
mov
iret
mov
xchg
pop
pmuludq
fs
jno
xor
scas
push
mov
icebp
jb
inc
xor
ficoms
sub
mov
add
jbe
dec
xchg
lea
add
in
jg
and
nop
insb
sbb
inc
mov
stc
inc
lcall
jecxz
add
imul
sub
out
test
test
push
cld
add
cmpsl
pusha
add
arpl
cmpb
lds
sti
xor
dec
int3
mov
mov
xor
push
mov
sbb
pop
push
mov
pop
aaa
push
and
sub
mov
call
sub
mov
jmp
nop
add
cmp
cmp
sub
scas
in
pop
mov
gs
scas
imul
cmpsb
cs
popf
cwtl
mov
imul
stos
in
jle
pop
mov
int
push
sub
jno
lods
loop
jbe
loope
sbb
in
pushf
and
dec
pop
jo
sar
aad
and
scas
fsubrl
arpl
insl
movsb
inc
xchg
shll
adc
mov
xchg
aaa
fwait
ljmp
into
nop
test
in
pop
jno
mov
pushf
scas
push
push
xor
jo
mov
movsl
mov
in
fimuls
push
pop
rcr
insl
xchg
lods
sbb
xchg
mov
pop
aaa
xor
sbbl
add
mov
sbbb
daa
mov
jle
jnp
inc
stc
pop
jl
pop
loope
cmp
jg
int
std
xchg
push
mov
sbb
aad
xchg
adc
mov
mov
jle
pop
in
sbb
jne
out
sub
and
clc
fcompl
ds
bound
out
ror
shlb
mov
popa
subb
bound
dec
push
ljmp
xor
or
and
lock
ljmp
mov
inc
mov
pop
add
pop
jle
mov
imull
iret
mov
sahf
lds
mov
xlat
das
dec
mov
push
jne
loopne
add
arpl
fcomps
scas
fsubl
mov
jne
out
xchg
dec
mov
jp
das
jl
lea
std
movsl
fcoml
jb
out
lret
test
leave
pushf
pusha
test
dec
xchg
cmp
arpl
daa
loope
sub
or
pop
js
push
xlat
or
sarb
jbe,pn
xor
popa
adc
fdivs
mov
push
push
cmp
sub
loopne
mov
pop
stc
add
call
push
loopne
aam
adc
daa
mov
add
lock
add
scas
jbe
aad
push
insl
inc
incb
adc
push
roll
adc
jns
sub
jle
adc
cwtl
scas
cmp
push
cld
pop
inc
aad
dec
xor
movsb
in
shlb
xor
push
cmp
jae
mov
push
inc
stos
or
aad
dec
jnp
inc
push
or
push
sub
ret
pop
push
xchg
cmp
or
or
dec
xchg
addr16
dec
test
xchg
stos
mov
add
and
xchg
outsl
test
aaa
mov
and
test
xor
and
pop
mov
xchg
dec
and
arpl
inc
addr16
push
adc
insb
or
mov
in
fbstp
cmp
mov
inc
xchg
addr16
jbe
and
xchg
push
push
jmp
xor
and
vsqrtss
outsb
aad
add
mov
icebp
jp
ret
mov
and
stos
sbb
jle
outsl
sub
ds
mov
adc
push
les
mov
jbe
test
jae
dec
pusha
bswap
iret
pop
ja
daa
movsl
js
jb
or
cmp
jmp
lret
bound
out
fisttps
xor
cmpsl
push
out
stos
jo
adc
inc
imul
mov
pop
mov
add
stos
inc
and
icebp
out
inc
cltd
andb
lea
stos
rsm
push
dec
bound
rorb
cmp
push
stc
cld
jb
mov
lods
jbe
outsl
dec
pop
push
adc
cwtl
inc
pop
mov
adc
lods
mov
shr
xchg
cltd
pop
loope
sub
mov
xor
sar
outsl
or
push
fs
push
das
push
jne
xchg
fistl
test
or
out
or
mov
testl
pop
clc
mov
pop
jbe
je
out
sbb
rcrb
stos
dec
decb
inc
sbb
fsubrl
popf
rorb
divl
xchg
mov
adc
cs
imul
andb
sbbl
add
fcmovbe
push
daa
or
out
xor
scas
out
ficoml
imul
fsubs
jno
in
mov
inc
xchg
mov
jmp
push
push
push
adc
push
push
jbe
mov
gs
daa
jns
icebp
inc
fs
rcll
push
jmp
mov
lods
cmp
iret
lret
mov
lcall
sbb
jno
mov
aad
mov
mov
lods
iret
sub
mov
fs
rcrl
loope
adc
arpl
mov
rol
sub
es
das
cld
or
jge
push
fadd
cmpsl
push
fld
andl
and
xchg
fcomps
adc
test
ja
data16
cmpsb
push
call
imull
sbb
xor
pop
iret
xor
fldenv
jnp
or
cs
arpl
mov
pop
mov
stc
scas
pop
push
xor
pop
mov
lret
sbb
lods
ja
adc
insl
mov
jg
hlt
mov
out
push
mulw
aad
aas
lret
or
inc
int
push
pop
aaa
stc
out
adc
dec
iret
or
fdivs
inc
jle
hlt
roll
push
dec
mov
ds
in
inc
inc
sarb
jg
mov
rsqrtps
push
pop
jnp
les
jo
in
popf
inc
pop
lods
pop
test
shl
push
and
sbb
xor
and
xor
test
ljmp
jge
xor
ror
mov
add
cmp
mov
and
push
outsb
pop
jne
push
cmp
aaa
shlb
sbb
mov
and
cs
mov
and
and
insb
xchg
pop
xchg
jge
pop
xor
adc
out
test
test
shl
and
jae
repz
jl
scas
andl
mov
or
repnz
call
shll
or
leave
sbb
pop
xchg
lret
sbb
xchg
dec
jp
sub
ret
push
popa
fimull
inc
sti
cwtl
out
imul
mov
cs
fsubs
and
icebp
les
ret
cmpsl
sub
popa
mov
sub
xchg
arpl
mov
hlt
stos
mov
cmpsl
call
add
or
pop
jbe
mov
mov
sbb
loopne
dec
dec
loopne
push
xchg
in
es
std
mov
stos
cmpsb
pop
sub
flds
sub
hlt
fwait
jl
add
add
stc
xor
cli
outsl
rcr
lret
movsb
mov
loopne
mov
out
fdivr
into
jne
adc
push
jle,pt
adc
mov
add
pop
ja
or
cmp
add
push
gs
lds
pop
fisubl
sti
popf
orb
add
xchg
push
xor
push
outsl
popf
scas
jae
sub
and
cmp
pushf
cli
push
push
loope
test
sarb
sbb
out
mov
push
iret
leave
and
xchg
fsubr
adcb
sarb
in
cld
xlat
inc
and
testb
dec
loope
mov
lock
test
and
das
gs
outsb
mov
adc
pop
mov
add
xchg
adc
fsts
into
bswap
sub
dec
jle
jg
mov
or
xchg
icebp
and
scas
xchg
addr16
fisubl
xchg
pop
and
jno
jle
xchg
dec
stos
dec
rolb
test
mov
jo
xor
rcll
ficomps
ret
gs
pop
and
mov
ljmp
push
rcrl
pushf
dec
out
mov
in
aad
mov
cmc
push
jecxz
cs
xchg
movsb
stos
pop
jg
sbb
jnp
push
xchg
add
mov
xchg
mov
jne
neg
cld
push
imulb
cltd
inc
sub
ret
loope
sarb
and
lds
and
outsl
xchg
fcomps
loopne
cmp
mov
ss
lcall
push
imul
pop
lods
adc
int3
jg
adc
and
add
xor
lret
jbe
cmp
adc
push
stos
scas
push
mov
xlat
mov
ljmp
aas
xchg
es
leave
xchg
outsl
xchg
push
inc
jle
outsl
test
pop
mov
enter
cmc
push
movsl
fs
mov
pop
mov
cmpsl
dec
push
mov
insb
cwtl
adc
lock
mov
dec
mov
push
or
xlat
cli
cmp
in
lods
daa
sbb
clc
cmp
and
pop
or
imul
das
mov
movsl
or
mov
mov
and
sub
fs
and
out
sbb
lret
dec
and
test
cmp
insl
jo
les
cmpsb
stos
mov
jne
cli
jns
push
mov
mov
mov
ds
cli
loopne
or
cmp
inc
rclb
and
nop
xor
scas
add
divl
shlb
push
fdivrl
sahf
add
mov
shrd
daa
stc
cmp
jmp
hlt
jo
ljmp
pop
fildll
daa
clc
mov
sbb
clc
mov
xor
inc
mov
mov
cmp
shrl
bound
mov
in
loopne
pop
and
and
pop
in
cmpsb
xor
xor
xchg
jbe
leave
nop
dec
mov
push
test
gs
jo
arpl
mov
pop
mov
outsb
adc
notb
aad
add
or
sbb
out
rclb
or
mov
fwait
repz
les
loope
inc
insl
cltd
sub
xchg
aas
mov
and
and
mov
jg
aaa
out
sbb
test
sbb
test
jo
repz
scas
adc
mov
cmp
add
test
dec
adc
sub
imul
cld
mov
xor
cwtl
daa
xor
pop
aad
je
int3
sbb
frstor
push
xchg
and
add
js
imul
mov
cmc
pusha
push
cli
pop
lods
mov
aas
je
fisttpll
out
dec
clc
fstps
adc
test
sub
and
mov
cmp
push
add
mov
out
and
cmp
jnp
push
ja
cld
add
dec
sbb
mov
repz
dec
sub
lret
test
push
jbe
push
xchg
xchg
xchg
dec
sub
int
xchg
hlt
mov
js
xor
fwait
mov
xchg
jg
adc
jmp
pop
lret
js
mov
mov
ret
push
pop
mov
loop
unpckhps
or
sbb
adc
sbb
mov
push
add
pop
mov
aaa
rcrl
test
xor
mov
add
jmp
add
sbb
andb
dec
scas
cmp
cmp
jecxz
int3
push
mov
add
adc
mov
pop
jle
rcr
xchg
cmpsl
dec
inc
xor
sahf
or
xchg
mov
xchg
mov
mov
dec
push
xchg
loop
dec
sub
add
push
or
mov
in
mov
mov
mov
xor
test
in
xchg
lahf
cmp
int
mul
mov
es
pop
mov
aam
in
xor
mov
jno
aam
adc
and
push
movsl
dec
sti
aam
movsb
mov
adc
not
dec
jb
and
mov
xor
and
add
jne
and
cld
xor
fucomip
dec
mov
pusha
es
lods
shll
cmpsb
nop
cmc
and
mov
xlat
pop
add
popl
dec
ja
jg
lods
ljmp
test
sub
add
popa
xor
lcall
pop
xchg
push
mov
bnd
mov
adc
xchg
adc
js
mov
push
lds
xor
ficoms
sahf
nop
fnstsw
xchg
movsl
xor
scas
bound
mov
das
pop
out
xchg
imul
bound
popf
mov
pop
jo
lock
outsl
lret
and
and
hlt
push
xchg
dec
mov
std
daa
mov
mov
or
ja
dec
mov
mov
sbb
loope
clc
push
movsl
inc
and
push
repnz
mov
mov
mov
ficompl
add
popl
inc
dec
stos
je
ljmp
pusha
pop
inc
mov
arpl
xchg
aam
outsb
mov
loop
rep
aaa
jbe
mov
out
push
popf
mov
outsb
stos
add
jb
cs
or
addr16
mov
fcomp
push
lahf
rolb
xchg
imul
jo
cmpsb
jb
ja
into
lcall
jecxz
xchg
jbe
test
imul
popf
loop
test
adc
mov
xchg
xchg
shlb
adc
leave
inc
dec
sub
xor
mov
insb
sub
es
mov
int
cmpsb
rolb
icebp
jno
aad
mov
dec
xor
push
mov
inc
mov
mov
ret
popf
xlat
aas
sub
std
mov
ret
arpl
fstps
pop
push
pop
push
ja
xchg
mov
data16
mov
and
test
dec
or
notl
aaa
mov
das
push
add
mov
repnz
pop
imul
xor
les
js
rcll
jne
gs
xchg
jl
mov
dec
cwtl
testb
orb
cmp
call
fldenv
jle
push
lret
imulb
stos
fisubrs
sar
or
into
or
push
cmp
cmpsb
rorl
push
or
das
movsl
stos
mov
mov
xchg
fildll
inc
xor
sub
cmp
repz
or
repnz
xchg
aas
cmc
adc
mov
pop
push
push
push
movsl
jp
fcmovnu
cmp
les
push
pop
push
sbb
cmp
jnp
or
adc
nop
adc
add
sbb
pushf
cmp
mov
cmp
rcl
xchg
cmp
les
mov
push
push
jns
jb
and
out
sub
je
mov
push
bound
stc
or
gs
cld
in
ficomps
pusha
hlt
push
cmp
xchg
xlat
fdivp
mov
inc
es
in
ss
mov
xchg
rcl
jle
fiadds
imul
add
or
lcall
aaa
dec
add
jb
int3
dec
xchg
cmp
mov
fwait
mov
shl
pop
sbb
pop
imul
jbe
sub
cmp
cmc
fdivrp
in
pop
aaa
loopne
and
inc
lcall
xor
pop
cmpsl
fimuls
ret
hlt
sub
jb
fadds
out
push
rcl
push
loope
or
xor
push
addl
adc
cli
addr16
and
mov
insb
in
rcll
aad
popa
adc
in
in
int
and
loop
cmp
aas
push
roll
repz
xor
push
gs
mov
inc
clc
pop
xor
mov
push
aas
jle
out
movsl
mov
mov
xorl
popa
or
xlat
jl
jecxz
or
data16
std
jo
jg
xchg
stos
mov
andl
adcl
mov
test
cmp
fs
xor
in
xor
aas
out
pop
fs
sbb
js
test
mov
or
leave
sarl
xor
fidivrl
movsb
push
xlat
add
jno
mov
aam
test
ljmp
push
dec
scas
sbb
popf
lds
adc
inc
in
add
lahf
lods
inc
int3
cmpsl
popf
xor
mov
mov
adc
jno
pop
gs
shll
scas
xor
mov
stos
cmpsb
int
mov
popf
idivl
fldt
lahf
jp
das
lods
test
mov
out
test
cmpb
in
frstor
mov
xchg
mov
add
loop
lods
dec
test
fcoms
push
adc
inc
and
or
pusha
sub
stos
inc
sbb
xchg
mov
pop
in
pop
sarl
adc
add
std
pop
lods
insl
inc
fs
cmp
outsl
ret
mov
push
stc
bound
jnp
mov
mov
ja
into
subb
loopne
adc
stc
addr16
arpl
jmp
cmp
or
fxch
inc
xchg
inc
pop
dec
mov
jecxz
hlt
faddl
add
cli
int3
je
xchg
jg
movsl
xchg
mull
into
movsb
mov
mov
call
push
sbb
dec
fimull
mov
ljmp
adc
in
jb
lret
lret
xor
mov
inc
xchg
jae
subl
cmp
adc
imul
xor
mov
shll
lods
lret
xchg
mull
push
jl
bswap
leave
cs
jae
cmc
jbe
pusha
lods
mov
cltd
or
gs
test
and
mov
das
aaa
out
mov
mov
mov
dec
mov
sarl
dec
inc
divl
stos
inc
lcall
jno
lods
sub
mov
inc
mov
filds
js
or
xchg
int3
dec
or
mov
cwtl
or
xor
je
cmp
int3
lock
cmpsl
jbe
mov
in
and
xchg
dec
clc
jmp
insb
cwtl
or
xor
cld
fdivrs
lret
test
inc
add
addb
outsl
cmp
and
filds
mov
aaa
pusha
xchg
cmpb
les
sub
or
xor
jp
lds
bsf
je
cs
add
clc
cltd
loope
in
scas
cltd
jns
loop
test
mov
cmp
repnz
jb
into
in
insb
and
out
enter
ljmp
mov
stos
jmp
cmpsl
add
repz
repz
leave
js
stos
lods
std
push
add
out
xchg
mov
int
cmp
in
mov
mov
cmpb
loop
test
and
pop
popa
sbb
es
mov
sub
fidivrs
push
lock
sub
scas
push
ds
es
cli
mull
mov
xchg
rcll
jl
ss
movsl
outsl
jmp
and
ds
sbb
jne
mov
das
dec
dec
cli
aad
pop
mov
mov
push
fsub
or
andl
btc
mov
cmc
scas
jnp
push
dec
push
push
rorb
test
movsb
xor
into
out
hlt
xchg
jg
pop
sbb
pop
adc
notb
cmp
jne
or
mov
inc
inc
sbb
dec
and
add
and
adc
scas
xchg
pop
inc
push
mov
sub
jl
add
and
pop
movsb
mov
mov
movsb
inc
icebp
cmp
inc
add
mov
fcoml
sub
pop
mov
xor
dec
and
das
xlat
nop
aas
das
cld
jmp
cmp
je
scas
in
je
xchg
jle
jb
mov
xchg
sti
mov
scas
xchg
inc
lock
stc
mov
jl
push
leave
andl
sub
pop
addr16
aad
push
cmpsb
xchg
mov
mov
std
jp
out
xchg
sbb
sbb
sub
and
cmp
and
mov
int
jp
testl
stos
ljmp
cwtl
jne
pop
adc
imul
addl
sub
clc
insl
mov
dec
nop
xchg
xchg
fwait
gs
xchg
push
jbe
je
jbe
in
mov
aaa
loope
adc
push
fnstenv
push
ret
cmpl
adc
andb
and
add
adc
and
cmp
cmp
xor
push
or
sub
fnsave
repnz
data16
mov
and
mov
fstpt
faddl
imul
js
pop
ljmp
aaa
pavgw
xchg
adc
inc
dec
pop
mov
push
out
orl
in
dec
test
jo
addr16
out
and
and
cli
bound
pop
mov
xorb
rcrw
push
stos
push
xor
xchg
push
cmpb
or
cwtl
fcoms
sarl
icebp
sub
push
shlb
mov
adc
mov
jecxz
hlt
pop
popa
out
push
adc
and
push
and
and
cli
ss
jne
mov
push
push
xchg
dec
dec
data16
addps
and
inc
call
in
fwait
pop
int
gs
fcom
inc
add
or
jle
and
pop
or
xor
pop
or
bound
pop
cmp
cli
int
cmp
out
dec
icebp
or
mov
xor
loopne
add
and
daa
scas
aaa
or
dec
and
push
scas
jp
mov
and
lock
add
jo
rorl
xlat
sbb
in
gs
stos
loopne
sbb
outsl
cld
jne
or
lret
incl
mov
add
lahf
pop
loopne
hlt
mov
mov
pusha
push
sub
cmp
fsubrs
push
sub
push
sbb
stc
xchg
cmpsl
add
pop
mov
push
cmc
inc
pushf
jnp
xchg
mov
lock
aad
dec
xor
pusha
scas
dec
cmp
repz
enter
or
cmpsb
mov
jge
ds
dec
push
ret
or
inc
cmp
adc
sti
dec
mov
xor
push
movsb
mov
ret
pop
push
shll
xchg
les
shrb
push
xchg
das
mov
clc
addr16
ror
xchg
jnp
outsb
call
fiadds
in
fs
les
mov
and
lods
mov
cltd
jmp
mov
xchg
lahf
push
out
xchg
pop
sbb
hlt
mov
push
cmp
and
jns
int3
js
test
push
pop
adc
addr16
test
enter
push
jmp
ret
cs
mov
push
pusha
lds
jo
pop
and
mov
outsb
clc
push
adc
lods
xchg
adc
aam
add
inc
out
add
out
std
jp
scas
test
sub
ljmp
int
or
bound
dec
sbb
out
test
xchg
movsbw
ds
cmp
pop
mov
sbb
jp
add
clc
les
fdivs
inc
es
testl
pusha
jae
adc
dec
movsb
mov
repz
je
test
shrb
icebp
jmp
repnz
adc
loopne
test
push
movsb
sub
fbld
movsl
cld
xlat
add
push
nop
into
fmuls
jl,pt
fcomps
ret
gs
xchg
dec
push
cmp
out
movsb
test
call
add
rol
xor
xchg
mov
in
stc
into
push
ljmp
fldcw
sbb
dec
pop
adc
sub
nop
mov
sub
call
xchg
popf
fwait
in
mov
or
rcr
and
mov
stos
push
push
sbb
inc
lret
lds
aam
sub
cmp
mov
jge
inc
mov
pop
jnp
test
xor
inc
add
cltd
rorb
sbb
cmpsb
adc
jge
pop
das
and
repz
add
cli
sbbb
jb
leave
repnz
xchg
inc
pop
test
shll
jp
mov
lock
adc
pop
add
xchg
mov
xor
jb
lret
fnstsw
pop
mov
and
jbe
ljmp
dec
mov
movsl
xchg
sub
movb
push
mov
inc
mov
inc
sbb
fsub
sbb
jae
push
push
adc
shlb
insl
add
popa
push
sbb
lret
daa
mov
aad
add
mov
icebp
xorb
push
insl
jns
pop
addl
lea
pop
jle
add
inc
imul
ja
mov
pop
xor
mov
stos
xchg
or
jp
mov
mov
data16
xchg
push
xchg
loop
shld
adc
out
pop
jb
push
cmp
mov
jne
sub
aaa
testb
mov
test
pop
in
fs
mov
adc
push
add
cs
aaa
mov
mov
mov
cld
mov
add
jmp
stc
xchg
or
in
loopne
jg
jle
inc
stos
pushf
and
lret
jge
cmp
xchg
jno
dec
popa
jnp
lret
imul
sarl
loopne
push
ret
fisubrl
insb
jp
insw
stc
iret
pop
pop
sarb
test
ret
and
cmp
imul
jbe,pn
lods
jb
inc
xor
sbb
xor
fimull
jp
pushf
fwait
and
cmp
in
xchg
aaa
xor
mov
data16
push
loopne
dec
mov
pop
addr16
pop
and
stos
mov
jb
out
mov
bound
ficompl
leave
fwait
cmp
jle
or
pop
xchg
mov
je
xor
in
push
sub
add
pop
lret
mov
xchg
je
mov
pop
gs
push
rcrb
and
lods
pop
call
std
test
and
lahf
aaa
sub
or
mov
inc
pusha
cltd
jno
push
cmpsl
sbb
loopne
inc
or
repnz
mov
and
enter
outsb
jns
mov
dec
mov
jae
dec
mov
repnz
mov
das
xchg
xchg
mov
jecxz
cwtl
imul
pop
lret
insl
cmpl
cld
mov
add
and
int
jbe
std
push
into
cli
loopne
in
mull
decb
mov
pop
mov
imul
cli
fldl
scas
pop
xchg
sub
scas
cs
sbb
je
cwtl
add
aaa
scas
lds
mov
inc
mov
cmp
inc
inc
xchg
aas
mov
cld
mov
dec
mov
loop
je
adc
jae
in
cmpsl
das
cmpsl
mov
hlt
fs
out
clc
xchg
xchg
cmp
fmuls
push
adc
repz
stos
xor
fld
cltd
fs
cli
cmp
dec
mov
pop
in
mov
sahf
mov
into
lds
adc
es
js
mov
mov
ljmp
or
lods
push
xor
les
hlt
xor
push
fwait
subl
mov
int3
add
mov
jl
dec
rcrl
fwait
dec
in
lods
adc
pop
inc
cmp
xchg
fwait
pop
xor
or
jnp
or
xor
sub
ja
jge
jns
out
jl
lahf
adc
pop
out
dec
sti
hlt
and
aad
xor
call
jnp
out
xchg
shlb
pop
lcall
lods
add
cmp
or
jge
testl
xor
add
pop
xor
fstpt
pop
mov
pop
adc
lret
cmp
mov
inc
and
sbb
in
shlb
add
lret
jns
sub
mov
into
popf
jb
test
inc
faddl
mov
scas
fiadds
add
lock
mov
jbe
sbb
sub
xor
sub
hlt
jge
jbe
or
cltd
aas
loope
pushf
aas
cmp
fiaddl
xchg
push
iret
inc
add
outsl
mov
and
into
test
jl
or
mov
aad
loope
sub
sub
into
int
and
mov
mov
loop
daa
cmp
mov
xchg
sbb
cmpsb
icebp
fmul
pop
sbb
jns
xchg
rcrb
mov
dec
pop
dec
jns
sub
xchg
iret
movsl
xor
adc
dec
xor
inc
loope
mov
mov
icebp
int3
sub
fldt
fwait
mov
or
ds
mov
loope
ret
in
inc
sbb
mov
push
shl
xor
fwait
jmp
testl
push
pop
call
pop
aad
jle
fisubl
stos
int3
jecxz
or
sahf
gs
push
mov
iret
movsl
mov
ret
xchg
call
xchg
sub
sbb
cmp
xchg
mov
arpl
insb
xchg
hlt
stc
add
cmp
mov
pop
and
push
decb
xorb
daa
dec
out
pop
fldl
push
call
fldenv
adc
movsl
lcall
jne
shll
jne
out
int
mov
cmpsb
jp
and
das
or
xchg
les
insb
xchg
mov
inc
aad
jne
testb
imul
call
in
or
int
xchg
cltd
notb
push
sbb
xchg
jecxz
mov
cmp
pop
das
cli
mov
push
mov
icebp
clc
pop
xchg
lods
dec
cld
movsb
cmpsb
xor
pop
outsb
mov
stos
mov
aas
int
add
and
sub
adcb
sti
movl
mov
ret
adc
aas
add
inc
faddl
scas
jne
outsl
push
lahf
jmp
mov
jl
mov
sub
jo
adcb
or
jmp
mov
icebp
dec
pushf
jle
aas
out
or
stos
int3
ss
mull
js
in
xchg
sub
sub
pop
lea
dec
dec
mov
push
push
add
in
fdivs
popa
mov
in
sub
lds
outsb
mov
int
fs
fsub
adc
aam
rcr
mov
orb
jle
cld
mov
mov
cld
adc
arpl
cld
inc
fidivrs
test
adc
add
inc
mov
or
sub
mov
push
add
add
lret
test
test
inc
insl
push
dec
sub
sti
and
mov
and
mov
or
push
dec
adc
aam
les
punpckhdq
movl
adc
mov
mov
fmuls
fmul
repnz
and
cmp
mov
jb
push
imul
or
es
lods
and
mov
push
mov
repnz
daa
mov
stc
dec
cmpsl
cmpsb
ljmp
cld
dec
jp
and
xchg
push
lock
mov
cmpsb
test
push
dec
hlt
lcall
push
mov
and
mov
loop
cltd
mov
outsb
test
inc
fsub
maxps
lds
outsb
mov
jno
xor
mov
cmpb
mov
in
adc
enter
adc
sub
dec
push
lahf
sub
pop
fisubs
mov
je
mov
mov
jle
xor
rol
lahf
jecxz
lock
mov
and
inc
cltd
pop
mov
stc
sub
mov
fwait
lods
test
mov
outsb
pop
cmp
mov
cmp
orl
into
lcall
mov
imul
and
arpl
es
sarl
xchg
testl
faddl
xchg
lock
hlt
in
repz
cmp
jno
int3
xor
fisttpll
push
jecxz
ljmp
jecxz
sub
sub
vpxor
and
sub
xchg
adc
lret
jg
fildll
or
leave
int3
jl
shr
push
out
addr16
aas
sub
pop
lcall
cmpsl
scas
jmp
clc
shl
cmp
dec
aas
gs
sub
nop
jne
lods
fstpl
mov
cmc
or
out
les
movsb
mov
or
test
jns
or
stos
clc
popf
dec
outsb
mov
in
xchg
dec
das
pusha
or
jae
jl
pushf
inc
jns
or
fcoml
lret
std
mov
xor
cs
mov
push
adc
pop
into
dec
fcoms
hlt
mov
or
shll
pop
jb
push
rcl
inc
sbbb
and
jo
xlat
sbb
filds
enter
nop
pop
aam
pop
mov
xchg
movsb
call
sbb
lea
or
and
push
xorb
idivb
insb
mov
dec
rol
jns
sahf
inc
jmp
cmp
insb
push
loopne
and
mov
sub
xchg
out
int3
mov
jbe
addr16
xor
fstpl
push
arpl
cmp
dec
stos
incl
test
inc
stos
loope
push
and
scas
mov
inc
push
sub
aaa
mov
js
rol
test
outsl
cltd
xchg
das
pop
adc
movsl
mov
leave
roll
xchg
mov
sbb
jne
fiadds
dec
jno
stos
push
mov
jb
daa
mov
in
imul
dec
add
push
xcrypt-cbc
cmpsl
adc
sub
pop
scas
iret
frstor
outsl
popa
mov
ja
loope
shll
popa
xchg
div
in
dec
inc
cmc
xchg
mov
or
cmp
and
dec
call
or
popf
fld
and
inc
sub
xchg
sbb
lea
cmp
mov
cmp
shrl
pop
jno
in
daa
adc
insb
cmp
mov
add
popf
ss
loopne
pop
ret
xor
fists
fs
idivl
xlat
cmp
int3
mov
rclb
push
cld
and
aad
out
repnz
and
push
inc
cmp
and
inc
jl
movsb
and
jo
cld
push
xor
fs
sub
jne
and
lea
sub
mov
rorb
leave
ret
aas
and
shll
jbe
movb
mov
adc
mov
mov
cli
and
add
lcall
loop
push
xor
mov
mov
and
push
clc
add
gs
cmc
jg
jle
call
loope
test
nop
in
scas
scas
jne
out
lret
mov
pop
rcl
sbb
push
lods
jo
or
mov
rorb
orl
out
push
pop
das
repz
xchg
push
jb
cmp
call
lea
repz
fwait
push
daa
frstor
hlt
movsl
xchg
shlb
pop
aas
stos
aaa
icebp
cltd
fcmovu
dec
rcr
popa
notb
or
dec
add
mov
das
lea
sub
dec
push
je
mov
mov
ja
sbb
mov
xor
lahf
decl
ss
pop
sahf
mov
mov
dec
arpl
cmpsl
jnp
enter
cmpsb
inc
jne
pop
clc
mov
sbb
lea
pop
xchg
pop
cmp
jno
rcll
cmp
out
adc
cmp
test
lock
insl
cltd
aas
mov
add
lock
pusha
pop
xchg
xchg
rclb
out
xchg
or
adc
jmp
pop
lahf
dec
and
les
mov
andb
je
rolb
dec
dec
xchg
cli
fadds
adc
ja
jno
loope
xor
adc
inc
xchg
rorl
push
into
sti
lret
lock
sbb
xchg
mov
stc
repz
pop
cld
mov
call
dec
imul
adc
iret
imul
mov
jecxz
sub
mov
fsubrp
sbb
scas
addr16
repnz
push
adc
fst
xor
shl
sub
gs
fsts
iret
mov
xor
int3
xor
sbb
stc
push
insl
sub
popa
sub
mull
sbb
cwtl
scas
mov
popa
mov
das
pusha
add
or
es
dec
aad
sbb
cmc
je
sahf
push
mov
dec
jns
xchg
nop
outsb
mov
testl
mov
and
aas
inc
adc
shrl
shll
dec
mov
jne
dec
mov
or
roll
lods
mov
add
imul
imul
pop
lret
xchg
push
adc
xchg
xchg
outsl
movsb
in
inc
or
and
and
mov
clc
int
push
push
jl
add
inc
imul
adc
aas
xchg
inc
arpl
jp
jp
mov
fdiv
int3
mov
hlt
orl
add
xor
cmp
hlt
mov
inc
bound
movq
mov
xor
lods
cs
out
or
es
out
and
lea
sub
pop
movsb
jmp
mov
inc
or
dec
je
push
xor
loopne
mov
pop
lods
xchg
andb
xchg
jo
add
mov
push
cmp
cmp
or
sbb
popa
or
sub
push
iret
and
jnp
rol
rorb
sub
inc
ss
or
mov
int3
push
lock
jnp
xchg
das
push
imull
arpl
push
xchg
and
pop
ljmp
jmp
inc
pushf
sar
and
adc
mov
inc
pop
rorb
add
sub
sahf
ds
pop
adcl
cmp
add
inc
lret
insl
aas
xchg
sub
cmpb
test
stc
cmc
jnp
in
testb
push
xchg
mov
cmc
mov
clc
jns
or
mov
inc
sbbb
lods
out
xchg
jae
push
cmp
pop
pop
call
or
loopne
cltd
rol
jno
inc
mov
lea
test
sub
into
cmpl
xchg
add
in
mov
mov
xchg
lock
out
nop
test
je
incb
lock
sub
popa
or
xchg
gs
dec
dec
push
sbb
insb
lods
je
gs
inc
mov
pop
dec
cmp
repnz
jp
and
jno
shr
dec
pusha
ljmp
pop
push
sub
mov
movsb
and
pop
jl
mov
xchg
sti
in
xchg
cltd
pop
iret
dec
and
sub
lods
jno
xchg
pop
testl
jecxz
mov
test
sbb
xchg
mov
mov
and
xor
lret
test
sbb
xchg
xchg
jnp
xchg
cs
shlb
daa
jb
out
mov
int
pcmpeqw
xchg
adc
leave
sarb
icebp
fistl
mov
mov
aaa
pop
ljmp
adc
test
cmp
sbb
andb
xchg
arpl
sarb
inc
sbb
js
xchg
rcrl
mov
push
into
lods
mov
mov
pusha
fists
test
pop
imul
dec
jle
jle
jo
mov
xchg
mov
and
insb
addr16
shlb
xchg
cmpsb
lock
aas
in
mov
push
sub
rcll
outsb
fucomi
jle
sti
arpl
shrl
or
xor
dec
fnstenv
pop
movsb
mov
xlat
pop
add
lock
dec
mov
mov
ss
cmp
lcall
mov
je
test
mov
scas
push
jl
andb
stos
adc
add
add
addr16
mov
in
mov
lea
stc
push
push
jo
lret
notl
and
push
fs
pushl
jb
dec
or
mov
xchg
mov
cld
fidivl
shrb
push
xchg
add
add
push
decl
adc
gs
repnz
dec
xchg
jne
lret
xchg
pop
push
xor
icebp
je
cmp
fcomps
lds
mov
aas
dec
repz
dec
sub
mov
dec
dec
lcall
repz
clc
sub
aad
xchg
mov
add
cwtl
pushf
out
ds
jae
push
ljmp
sbb
nop
pop
xchg
push
jbe
sti
mov
or
mov
jne
jp
sub
inc
dec
inc
mov
pop
xor
data16
lret
add
xor
or
jno
aaa
or
loopne
mov
subb
jmp
js
push
fidivs
aaa
jnp
push
into
or
ret
xor
cwtl
lret
test
insb
idivb
es
push
loope
mov
add
xor
jns
mov
in
nop
adc
xchg
sbb
cmpsb
dec
roll
dec
cmp
or
jmp
lret
loope
stos
es
sbb
push
or
subl
push
out
pop
sub
inc
lods
ret
sub
shlb
sub
rcrl
pop
add
test
outsl
push
sti
sbb
outsl
dec
dec
dec
sbb
addr16
lods
jg
mov
repz
pop
call
pop
mov
push
jl
or
aaa
sub
push
roll
push
fwait
inc
sbb
roll
pop
cmp
xor
addr16
mov
and
mov
out
sub
push
jb
mov
rdmsr
push
xchg
add
jmp
jp
addr16
inc
xorb
out
pushf
insb
pop
adc
ret
int
es
xchg
cmp
mov
mov
insl
shrb
mov
cmc
inc
mov
cli
sbb
mov
cmp
and
lret
pop
mov
in
adc
movsb
pop
cmpsl
je
inc
jmp
mov
pusha
lahf
push
aam
mov
repnz
adc
pop
xchg
push
inc
inc
and
pop
and
gs
pop
cmp
mov
enter
fwait
std
push
or
mov
jecxz
les
outsb
lcall
mov
sti
jge
les
push
lea
lret
mov
jno
fbld
inc
into
loope
jnp
push
adc
push
or
xchg
imul
lock
sbb
ss
cmc
inc
jge
lock
sbb
imul
pop
cmp
push
int3
imul
and
xor
push
or
stc
jl
imul
mov
add
dec
std
getsec
test
mov
pop
ljmp
adc
aad
icebp
aas
icebp
fcompl
pop
mov
je
add
inc
loop
insl
lret
pushf
xchg
jne
out
or
ret
orb
and
add
sub
mov
aam
cmp
or
addr16
pop
shl
daa
or
mov
mov
es
out
in
adcl
jns
jns
stc
fwait
cli
xchg
jno
xchg
push
rcr
cmp
push
nop
pop
ds
enter
cld
pop
fs
call
icebp
adc
adc
aad
pop
pop
dec
or
jne
or
cmc
and
aas
sub
lds
mov
das
sbb
lahf
add
testb
cmp
or
shl
flds
rcll
sbb
repnz
mov
push
pop
out
xchg
addl
fwait
jmp
xor
xchg
aam
push
fildl
popa
mov
push
xor
int
jge
xor
movsl
cli
in
daa
mov
and
inc
xor
inc
lods
outsb
xchg
sahf
add
mov
or
jle
sti
cmp
or
fwait
adc
test
aaa
push
pusha
dec
fcomps
mov
xor
data16
or
cmp
cli
pop
xchg
and
fdiv
pop
jne
push
push
sub
jae
adc
pop
test
in
jo
xor
jge
mov
test
in
jl
bound
in
and
ljmp
mov
jno
add
sbb
inc
pop
rcl
lods
gs
fldenv
mov
add
fs
imul
shll
jbe
or
pop
out
mov
or
mov
push
cmc
jb
add
xor
popa
xchg
or
loope
and
shrb
les
lahf
jns
data16
cli
add
lea
dec
jp
shrl
jge
mov
ret
add
cmp
test
test
ds
mov
mov
mov
sub
dec
dec
adc
pop
andl
fldenv
std
test
andl
fs
and
lret
mov
clc
fcmovnu
cmp
jmp
add
sti
std
movb
rcrl
pusha
add
aas
and
nop
jbe
pop
jae
test
pusha
xchg
inc
loope
xor
pop
cmp
ffreep
xchg
sub
pop
sbb
mov
lahf
das
mov
cmpsb
and
nop
cmp
fnsave
push
outsb
cmpsl
int3
xor
loopne
xchg
inc
mov
movsl
fwait
inc
xchg
inc
lcall
in
xchg
int
push
in
inc
or
mov
jno
sbb
sbb
stc
repz
jne
add
neg
add
dec
pop
push
fsubs
pop
dec
xchg
ljmp
aad
jne
push
shl
ds
sbb
test
cli
bnd
mov
jbe
fucomp
sub
dec
sti
inc
push
mov
shl
leave
ljmp
out
sub
sub
mov
adc
inc
jp
inc
ds
aaa
dec
addb
fcoml
mov
inc
mov
add
xorb
cmpxchg
rcll
mov
push
in
mov
xchg
inc
pop
jb
shl
sti
pop
outsb
pusha
enter
xlat
sub
dec
fnstcw
add
mov
icebp
mov
jg
loop
cmpsl
inc
add
leave
sbb
adc
cltd
jecxz
fsubrp
aaa
jb
xchg
sbb
dec
cmp
xchg
mov
push
inc
repz
add
shrl
outsl
mov
xchg
cld
xlat
test
mov
add
pmulhw
shl
fimull
data16
outsb
xor
mov
es
mov
inc
stos
inc
mov
pop
mov
jg
call
jne
and
mov
mov
xchg
sub
sarb
pop
imul
inc
ljmp
stc
sti
push
rorw
dec
and
iret
push
and
push
cmp
mov
inc
jmp
loope
fcmovbe
sbb
xchg
push
popw
sub
lret
repz
cmpsb
mov
sbb
mov
push
mov
dec
movsl
add
sub
pop
mov
push
pop
push
adc
adc
xchg
jle
xchg
arpl
and
mov
jp
stos
or
fisubrs
mov
popa
sub
and
loop
dec
jno
fisubrl
jg
mov
fucomi
jmp
ret
fs
mov
loopne
sub
cmpsl
sbb
js
inc
aas
or
inc
mov
sahf
cs
pop
sub
enter
jmp
mov
js
and
sub
outsl
push
outsb
or
clc
pop
jmp
inc
jbe
and
xor
sub
jnp
ljmp
mov
pop
xor
and
aaa
sub
add
dec
jne
ret
dec
leave
hlt
sbb
fs
dec
mov
cld
jg
mov
mov
add
xchg
adc
in
incb
push
or
cmc
into
out
mov
push
sbb
ja
xor
imul
and
inc
jns
lds
jns
cltd
sbb
dec
and
enter
or
mov
adc
jmp
sub
mov
sar
fs
add
inc
xor
pop
push
js
add
sub
pop
repz
jae
das
cli
stos
mov
inc
add
addb
fs
adc
scas
sub
or
aas
movsb
lds
dec
ret
fdivs
pop
fldz
lds
mov
test
arpl
inc
sahf
inc
jp
cmp
xchg
fwait
push
stc
aad
das
leave
dec
ds
shlb
xor
ja
mov
cmc
pop
inc
ss
fsubl
in
fcmovu
cmc
dec
inc
xchg
es
lcall
addr16
cld
test
pop
fnsave
push
sbb
rorl
cmp
jnp
mov
clc
imulb
in
xchg
insl
cmp
pusha
mov
imul
std
mov
pop
dec
or
fcomps
aaa
dec
popf
pusha
jnp
call
ret
shl
pop
and
fstl
push
pop
lcall
dec
mov
jecxz
push
in
subl
pusha
pop
and
test
sub
cmpsl
pushf
mov
cmp
or
sub
fcmovnbe
call
cmp
adc
pop
std
add
mov
faddp
xor
sahf
inc
push
aam
fs
jae
mov
shrl
in
mov
mov
cwtl
leave
jno
dec
sbb
addl
push
xchg
rcr
jl
mov
sbbb
mov
std
pusha
andl
push
sbb
je
dec
movsb
cmp
or
and
je
mov
ret
test
jmp
in
fistps
xor
jno
mov
sbb
xor
fcoml
add
sub
call
dec
sub
pop
out
jo
iret
lods
gs
mov
pushl
cltd
lcall
mov
push
xchg
cld
imul
nop
push
xor
roll
mov
fadds
addr16
mov
and
cmpsl
movsl
fcmovnb
jg
inc
inc
push
cmp
jb
xor
mov
cmp
push
sbb
clc
cmp
inc
rcr
pop
mov
popa
or
pop
xchg
inc
cwtl
cmp
mov
test
xchg
lret
jne
clc
mov
inc
test
mov
pop
rorl
xchg
stc
mov
insl
jle
scas
mov
or
in
push
cli
xchg
in
faddp
mov
mov
lds
xor
xor
aad
cmp
outsb
dec
pop
pop
push
idivl
jg
mov
shlb
push
sbb
or
or
ret
stos
mov
fwait
sbb
mov
cltd
aam
jno
pop
dec
incl
jae
iret
pop
sub
mov
daa
jl
pop
push
pushf
shll
or
ret
shl
mov
loope
xor
jb
jnp
sub
stos
int
jne
jle
enter
mov
addb
push
and
and
rorb
outsl
sbbl
loop
or
fisubl
imul
fwait
cs
pushw
inc
int
mov
stos
sti
sbb
cmp
in
dec
or
arpl
xor
sbb
fdivp
xor
fstps
xchg
mov
lahf
pop
loopne
jle
adc
icebp
pop
xchg
hlt
jecxz
jl
negl
movsl
push
lret
stos
push
inc
stos
scas
cltd
add
adc
icebp
mov
insl
fwait
add
xchg
add
imul
in
insb
push
pop
out
xor
out
fists
mov
adc
mov
add
mov
stc
adc
loopne
test
test
in
mov
fwait
cmp
enter
mov
fucomp
repz
repnz
test
xchg
fstps
out
mov
pop
sub
sti
jne
push
daa
daa
pop
jb
mov
and
movsl
jnp
inc
jo
lret
std
aam
pop
jmp
pop
clc
out
cmp
ret
xchg
xchg
cli
js
daa
mov
push
mov
das
dec
mov
mov
enter
cmp
mull
mov
shll
mov
inc
je
sahf
clc
je
adc
test
lods
add
xor
cltd
ljmp
push
pop
push
lods
mov
pop
push
mov
pop
jns
mov
jp
jecxz
js
dec
mov
outsb
cmp
adc
and
ret
push
push
mov
jae
cmp
shrl
mov
adc
and
out
test
test
loopne
call
xchg
cld
nop
in
call
jno
jne
popf
or
pop
pop
and
insl
aam
das
sbb
xchg
sbb
sbb
mov
cmp
sbb
fwait
push
out
push
sbbb
movsb
pop
fimuls
mov
loope
cmp
cwtl
in
and
xor
dec
add
lcall
inc
std
jge
pop
test
int
movb
sbb
adc
jnp
sub
insl
cltd
fsubl
orb
inc
push
and
addr16
xor
fidivrl
cltd
jl
ficompl
je
decb
dec
adc
daa
data16
inc
push
xor
cmpsb
add
pop
pop
inc
test
sbb
push
mov
jge
push
sbb
sub
and
popa
fnsave
mov
cmpsb
pop
stos
xchg
jecxz
imul
pop
pxor
push
mov
scas
stos
inc
sti
cmp
nop
ss
imul
ret
or
push
clc
aam
xchg
ret
add
mov
or
fisttpl
fdivrl
inc
xchg
loop
rorb
enter
pop
cli
out
jle
xlat
fsubrs
push
add
shrl
mov
cmp
ficompl
movsl
int
std
rcrl
dec
xorl
mov
out
outsl
arpl
xor
sbb
jbe
gs
xorl
in
sbb
mov
push
mov
xchg
adc
add
scas
add
pop
xor
push
in
mov
cltd
mov
adc
movb
ljmp
push
sbb
aam
dec
pop
push
test
sbb
mov
out
mov
fwait
add
cmp
and
push
push
lcall
jp
push
or
cmp
aad
and
je
out
lods
fstps
loopne
cmpsl
mov
inc
sub
sarb
into
daa
and
aad
jno
in
and
adc
dec
movsl
push
pushw
sub
jmp
push
mov
outsl
sub
sub
fisttps
in
add
int
mov
lds
lret
inc
pop
orb
mov
add
xchg
dec
and
sbb
imul
ja
stos
or
jo
cmpsl
jae
cltd
fnstcw
jo
pushf
jle
test
mov
xor
push
push
ja
cmp
mov
push
mov
out
insl
add
sbb
xor
jb
int3
rcrl
sub
gs
dec
push
and
mov
les
gs
or
xchg
out
ret
or
fidivs
xchg
mov
scas
lahf
inc
cmp
pop
push
jnp
dec
stos
stc
dec
imul
add
fsubp
scas
or
adc
adc
pop
xchg
pop
jg
call
mov
fsubr
sbb
lret
xchg
in
loop
das
pop
fs
ret
loop
andb
cmp
cmp
pop
or
jne
xchg
dec
std
jb
test
nop
repz
ljmp
sub
imul
movsl
fs
xor
add
jmp
jl
test
dec
xchg
push
in
dec
add
lahf
push
dec
data16
pop
push
scas
mov
shlb
testl
fs
in
sbb
xchg
sub
popa
mov
and
xchg
pop
aad
jl
mov
rcrl
pop
sahf
mov
pushl
cli
sub
sbb
adc
add
sbb
orb
or
or
mov
mov
pop
std
push
xor
xchg
jno
xchg
push
inc
inc
insb
jmp
sbb
pop
ret
inc
cwtl
rorl
xor
xchg
mov
add
add
aas
out
xchg
das
adc
dec
mov
inc
rclb
arpl
fldcw
loopne
lds
stos
jge
out
iret
call
cld
negb
inc
or
sbb
ret
xlat
cmp
stc
xchg
rcrb
icebp
shlb
jl
cmp
mov
xchg
insb
adc
sahf
insb
or
pop
dec
pop
mov
fisttps
test
aas
mov
ret
das
sbb
mov
ljmp
add
mov
rcl
out
push
add
aas
arpl
xor
lret
mov
cmp
jne
mov
inc
pop
movsb
imul
fndisi(8087
idivl
add
hlt
and
pop
fs
inc
mov
mov
outsb
aam
cmc
cmpsb
lods
rorb
jbe
data16
mov
dec
int3
shrb
xchg
pop
sahf
clc
leave
popf
push
mov
pusha
dec
neg
pop
insl
or
dec
sub
test
xor
push
shl
cli
aaa
sub
and
fidivrl
fisttpl
aam
xchg
and
and
icebp
mov
cmp
es
ret
loop
fmul
sahf
push
dec
jle
and
sbb
rol
mov
insb
enter
cli
dec
or
pop
push
dec
push
clc
jnp
xchg
xchg
popa
stc
ret
and
sub
xchg
mov
cmp
loopne
lcall
mull
mov
jge
jae
xor
fwait
pushl
jg
xchg
inc
sbb
fsubrs
out
arpl
in
jg
mov
mov
ret
or
dec
repnz
lret
je
lahf
cld
roll
test
pop
sbb
xor
dec
pop
adc
push
jns
and
dec
push
push
movsb
jns
dec
std
xchg
dec
movsb
adc
push
int3
std
inc
inc
push
add
outsl
lds
mov
sbb
sti
dec
lcall
push
and
or
push
shll
enter
fisubrs
xor
push
dec
lahf
fbstp
fisttpl
and
sbb
inc
mov
in
mov
cmpsb
sbb
dec
push
pop
add
inc
cwtl
and
gs
enter
loopne
mov
in
in
mov
xchg
cmp
aam
and
fistpll
repnz
test
lods
or
mov
inc
jl
loopne
adc
pushf
test
mov
popa
mov
pushf
inc
mov
mov
mov
mov
cmpsl
dec
adc
or
sub
sub
and
push
cs
pop
xchg
push
adc
push
or
sbb
mov
inc
pop
fsubrl
mov
xchg
popf
mov
sbb
jns
sub
sbb
push
add
mov
shlb
mov
out
mov
and
lahf
xor
out
jb
mov
jbe
adc
cmp
ds
xor
dec
in
adc
ds
test
xor
ljmp
in
jecxz
ljmp
dec
icebp
sbb
mov
jle
sub
shll
jg
push
xchg
jg
pop
push
test
iret
testb
jae
aas
enter
mov
ret
enter
out
pop
pop
and
mov
xor
jb
pop
decb
stc
daa
dec
repz
sub
or
mov
iret
mov
xlat
sti
or
and
mov
dec
in
mov
repnz
gs
mov
cltd
call
pushw
cwtl
jg
mov
inc
lock
int3
add
inc
sbb
js
sbb
int
add
xor
imul
cmp
cmpsb
stos
push
loopne
imul
pop
jb
xor
fnsave
movsl
gs
xchg
lds
incl
cmp
pop
push
and
or
fcmovbe
fnstcw
or
test
loope
lea
jnp
cmp
pushf
test
in
cmpsb
xor
inc
inc
mov
mov
push
mov
nop
mov
sti
nop
orl
mov
inc
rcr
into
pop
xchg
or
xchg
out
shlb
dec
sub
sbb
push
and
in
test
cmpsl
inc
mov
pop
daa
and
inc
notb
pop
cwtl
outsl
ss
enter
jecxz
bound
or
mov
xchg
fcmove
and
filds
sahf
mov
and
mov
fstl
rcrl
stc
sub
js
iret
loopne
jo
pop
inc
fdivp
into
sub
xor
cmp
mov
out
sub
sub
xchg
add
mov
lret
imul
add
sbb
sub
mov
mov
scas
cmp
in
movsl
pusha
es
and
inc
loope
xchg
icebp
imul
fwait
aas
jp
shl
int
xchg
gs
and
movsb
xchg
xlat
out
fwait
jg
pusha
jecxz
movsb
outsl
jne
push
out
loope
in
ret
and
mov
subb
stos
adc
int3
xchg
jo
and
fs
or
stc
fwait
sub
xor
adc
orb
push
xchg
lret
js
xchg
mov
out
dec
ja
dec
xor
jmp
clc
mov
sub
mov
test
xchg
sub
rorb
cmp
ljmp
divb
mov
jae
cli
aad
add
adc
pop
pop
add
push
mov
sahf
mov
mov
inc
rorb
addr16
jnp
and
test
push
sbb
jle
je
dec
and
inc
mov
push
popa
mov
xchg
js
push
xchg
push
cmpsb
imul
jmp
mov
inc
fldenv
fdivrl
out
jl
fstpl
cmc
repz
jmp
out
pop
fidivrs
lret
lcall
or
js
cld
add
pop
gs
repnz
mov
out
js
mov
jg
ss
inc
rcrb
into
cltd
jns
add
lds
cmp
or
add
inc
movsb
inc
xchg
aas
pop
mov
adc
lret
js
sub
push
test
and
insb
loope
test
cli
ret
into
pop
out
mov
inc
mov
cmc
push
fnsave
int3
xor
pop
dec
testb
xchg
frstor
or
jecxz
enter
pop
and
addb
cs
mov
xor
xchg
and
and
mov
stc
inc
mov
leave
loope
int3
ret
jg
cmp
fistl
inc
jg
mov
xchg
add
cli
sahf
sbbb
in
xor
sarb
inc
int3
inc
insb
scas
xchg
jno
xor
inc
cmp
lret
xlat
mov
dec
in
xor
xchg
push
push
lds
pop
dec
add
xor
cwtl
mov
push
call
xor
dec
es
jae
dec
je
repz
jecxz
enter
jae
sbb
pop
les
adcb
pop
movsl
int3
pop
cld
out
ds
xchg
jae
jp
mov
push
adc
push
imul
push
mov
pop
arpl
mov
mov
icebp
xor
in
int
loop
into
nop
push
xor
arpl
xchg
or
ss
push
pop
subl
sub
sub
ret
mov
dec
adc
addr16
ja
cmc
fs
fisttps
cwtl
jle
or
lret
lods
lret
jnp
xor
jmp
mov
cmpsl
xchg
push
cmp
sub
and
out
and
cmovb
and
imul
stc
mov
and
je
lcall
or
cmpb
inc
cmp
push
scas
in
aaa
xchg
rolb
pop
mov
sahf
xchg
iret
popa
scas
es
add
push
popf
mov
add
scas
shlb
ds
adc
inc
lods
rorb
icebp
add
stos
repnz
or
insb
sub
add
and
cmp
mov
cltd
xor
mov
ljmp
jo
inc
mull
push
pop
inc
aaa
scas
dec
push
and
nop
dec
jecxz
xchg
sbb
lahf
lea
xor
jecxz
adc
cli
adc
cli
xchg
mov
sub
fs
out
outsl
jg
pusha
mov
inc
sbb
and
cld
inc
adc
add
lret
ljmp
aam
or
lods
imul
fmull
pop
testb
call
outsb
mov
cld
pop
stos
iret
or
iret
testb
mov
gs
fdivr
shrl
sub
test
je
frstor
inc
add
xchg
sub
dec
in
xchg
ret
add
fsubl
int3
mov
daa
push
pop
cmp
sar
test
scas
rcll
jge
jb
mov
gs
dec
mov
or
loope
or
test
andl
cmpl
dec
jge
cmp
fbld
xchg
mov
in
popa
fcomp
xchg
adc
and
sub
xor
jno
nop
out
fldenv
mov
loope
mov
adc
pop
lea
cli
pop
push
sbb
lods
inc
iret
addr16
pop
mov
mov
mov
cmp
aaa
sub
push
sub
and
push
push
ljmp
lods
jl
and
mov
jbe
dec
pop
cmc
xchg
push
out
lock
jg
lods
adcb
fsubrp
sbb
jge
or
pushf
xchg
frstor
and
test
ds
imul
pop
sub
push
dec
add
add
sar
cmp
das
insb
cltd
hlt
cld
pop
mov
xor
push
imul
xor
sub
push
stos
ss
add
xlat
mov
incl
arpl
lds
push
xor
inc
push
pushf
fstps
sub
pop
pusha
iret
xor
decb
into
dec
shrl
loope
push
out
sub
scas
rolb
pop
das
insl
insb
loopne
movsl
mov
sub
mov
rcl
adc
inc
sub
pop
lret
inc
sbb
rolb
or
sarl
adc
push
arpl
pop
ja
jo
add
stc
loope
jecxz
inc
into
mov
sub
loopne
in
adc
imull
push
and
jae
lds
pop
fwait
stos
mov
jg
adc
cs
outsb
scas
imul
and
mov
xor
scas
pushf
aam
add
cs
int3
push
cs
ja
inc
sub
and
call
xor
js
pushl
clc
ljmp
inc
sub
jnp
mov
xlat
jmp
pop
pop
mov
cmp
push
mov
popf
imul
xchg
daa
fisubl
arpl
mov
mov
mul
fisubrs
stc
das
cli
xchg
jmp
lret
ret
sbb
cld
shll
imul
idivl
mov
push
adc
push
popa
xlat
jb
aam
in
out
xor
test
jmp
mov
sub
xor
das
or
cmp
adc
outsb
in
push
xor
fcmove
mov
in
scas
jbe
shl
fdivl
sbb
data16
pop
sub
cmpsl
insl
pop
and
xor
adc
fstl
cld
in
sbb
adc
call
call
sbbb
jecxz
shll
inc
sub
in
fdivs
int3
call
mov
jecxz,pn
into
in
dec
mov
lahf
dec
aas
mov
setne
add
pmaxub
cmp
sub
repnz
jne
push
xchg
push
fs
cmp
pusha
add
addb
shl
sti
xchg
lods
sub
pop
mov
adc
push
cld
scas
mov
xor
xor
mov
push
gs
js
jecxz
push
jae
aas
fiadds
out
lahf
dec
movsl
aaa
test
cmp
mov
scas
lea
pop
push
loop
pop
mov
aam
inc
dec
jg
imulb
insb
sub
xchg
add
mov
fbstp
pop
pop
pop
mov
loopne
jecxz
jae
imul
sbb
iret
jmp
int
data16
fistpl
sub
js
in
xorl
mov
mov
mov
push
test
mov
iret
mov
mov
adc
and
mov
rorl
je
notl
mov
lods
push
mov
fisubrl
movsb
lcall
adc
ljmp
fldt
das
push
lret
and
sbb
stos
pop
xor
jg
cmp
lods
pop
sub
inc
or
sub
jecxz
cmp
mov
inc
pop
imul
sub
fdivr
sbb
outsb
xchg
sbb
out
cwtl
push
sub
mov
lods
and
sbb
imul
push
jne
clc
aam
lcall
cli
pop
xchg
mov
shrb
pop
cmpsl
mov
jg
test
jg
sti
adc
lret
jno
aas
int
or
xchg
inc
cmp
adc
or
dec
cltd
ds
inc
into
jnp
fdivs
mov
outsb
insb
icebp
or
lea
pop
aam
lods
jmp
pop
mov
push
addr16
inc
stos
test
push
xor
push
je
add
push
mov
and
dec
std
adc
dec
dec
cwtl
push
mov
std
mov
ret
dec
or
orl
xchg
fwait
and
imul
je
ds
fistl
into
xchg
insl
test
outsb
call
dec
ret
dec
push
out
lret
rorl
cmp
loop
movsl
adc
outsb
popa
mov
lea
push
data16
imul
xor
lret
sub
loop
mov
faddl
arpl
cmp
rorl
mov
jo
cmp
inc
and
sahf
or
dec
and
xchg
dec
jl
pop
ret
cs
dec
neg
push
cmp
inc
roll
mov
mov
ja
push
sub
icebp
mov
fcoml
jge
sbb
adc
sti
lods
mov
dec
add
inc
aaa
notb
xchg
aas
or
int
sarb
fcomps
cs
ja
sbb
and
popf
cmc
sahf
mov
xor
ficomps
lret
mov
imul
add
outsb
fwait
sub
mov
je
cld
in
cwtl
cmp
add
aaa
pop
mull
jecxz
jnp
cwtl
jno
xor
hlt
or
mov
adc
out
jnp
dec
lods
iret
popf
cwtl
xor
dec
insl
repz
push
repnz
adc
nop
cs
inc
and
fadd
out
mov
int3
stc
mov
sbb
mov
out
adc
inc
sbb
push
mov
insl
call
jl
adc
out
ficoms
popf
add
mov
adc
cmp
push
jns
in
pop
dec
mov
pop
cwtl
test
fmuls
xchg
lret
push
jne
int3
inc
mov
mov
adc
stos
shlb
loop
nop
xor
dec
stc
mov
cmpsb
lret
loope,pn
mov
and
dec
add
push
mov
dec
call
push
iret
fldl
mov
and
insl
ret
xchg
les
pushf
mov
inc
xchg
add
cmpsl
push
rol
bound
push
jl
nop
es
fdivl
mov
and
dec
mov
fwait
pusha
call
out
repnz
pop
outsl
push
cli
lds
sbb
insb
push
pop
pop
lds
push
lods
mov
xchg
dec
mov
pop
push
sbb
dec
loope
push
mov
lahf
pop
pop
fldl2t
in
xor
or
jmp
xor
inc
lods
roll
movb
faddl
out
mov
sub
mov
jge
or
arpl
xor
xchg
mov
sbb
inc
out
sbb
xor
in
inc
inc
xlat
pusha
daa
pushf
inc
int3
shrl
notl
lock
cwtl
mov
std
push
add
lret
mov
dec
cmc
xor
aad
jge
push
sub
jns
mov
lods
mov
stos
hlt
setle
xchg
adc
lahf
ret
adc
iret
sub
in
mov
adc
loopne
das
lock
outsb
push
push
or
hlt
shl
xor
movsb
mov
push
lret
addr16
xchg
jle
jmp
scas
pop
cmp
cld
inc
roll
mov
sub
sub
mov
hlt
xlat
repz
and
in
scas
scas
cmp
leave
push
or
xchg
pop
cwtl
lds
daa
nop
imul
gs
or
xchg
cmpsb
movl
xor
dec
fiadds
pusha
xchg
iret
inc
pop
fwait
stc
pushf
mov
push
mov
jp
leave
push
dec
faddl
mov
xchg
add
push
fs
mov
stc
popf
sbb
push
sbb
jp
sti
mov
into
xchg
push
inc
add
mov
sti
pop
out
cmp
sub
cmc
jp
push
addb
push
mov
int
cmpsl
dec
sbb
shrl
test
mov
push
pop
pop
xor
data16
rep
push
pop
push
xchg
mov
jo
sub
adc
xchg
ljmp
lods
pop
test
lret
negl
fidivl
mov
xor
or
data16
xor
mov
or
sub
cmp
dec
push
xchg
mov
faddl
xchg
popl
insb
push
ret
push
js
add
jnp
sbb
out
xchg
jg
mov
jns
sub
sbb
mov
das
adc
repz
mov
out
jecxz,pn
scas
movsl
adc
lcall
lods
lock
mov
mov
add
bt
jbe
pop
sti
pop
mov
pop
fldcw
jmp
jle
sarb
push
xchg
push
inc
cmp
test
mov
loop
fdivr
cmp
stos
jbe
jp
ja
dec
jnp
mov
call
cld
sbb
xchg
enter
xor
jecxz
ret
sarb
popf
jae
outsb
add
testl
icebp
in
ja
leave
es
mov
dec
dec
pop
insb
add
or
movsb
rol
mov
in
add
push
fstps
cmp
loopne
aad
shlb
and
mov
std
arpl
idiv
arpl
sarb
stos
arpl
popf
dec
repnz
fldcw
les
ret
lcall
mov
pushl
test
loopne
lds
or
lea
dec
call
mov
sahf
mov
cmp
imul
mov
cwtl
mov
imul
shr
ja
ffreep
add
ja
mov
decb
test
data16
out
fsubrs
sub
inc
pop
or
pop
mov
jnp
pop
popf
insl
jns
push
test
out
arpl
or
ret
xchg
jb
pushf
cmpsb
or
aam
mov
adc
and
test
mov
mov
popa
pop
push
sbb
mov
pop
sbb
fprem1
movsl
lcall
stc
je
jo
les
outsl
sbb
jnp
mov
test
mov
jl
shlb
mov
push
movsb
xor
cmp
jecxz
cmp
scas
jns
cmc
jbe
iret
test
sbb
ror
adc
or
mov
push
push
call
pop
sub
iret
repz
pop
push
mov
pop
lcall
pop
or
pop
jnp
arpl
mov
js
jl
fwait
sbb
xor
inc
sub
sbb
mov
inc
mov
jecxz
aad
in
mov
push
xor
addr16
and
pop
xchg
int3
adcb
js
mov
mov
mov
xchg
aas
push
mov
daa
repnz
sbb
lret
lret
data16
mov
xchg
jg
clc
shll
scas
cli
scas
aad
or
sub
popa
push
cmp
push
add
test
mov
loop
addr16
mov
and
fldt
aam
sub
and
inc
rcll
test
fwait
lahf
jne
add
xchg
sub
push
loope
cmp
sub
loop
out
lret
hlt
mov
mov
imul
jp
lret
cli
fldt
out
cwtl
xchg
mov
sub
inc
shll
cmp
mov
xchg
inc
idivl
test
jnp
les
les
popl
cmpsb
jg
hlt
sahf
stos
push
fs
imull
pop
repnz
ficomps
jmp
push
push
cmp
xor
daa
pop
add
mov
jge
pushf
xchg
call
and
bswap
pop
arpl
jg
push
mov
cli
pop
xchg
and
sub
or
subb
jbe
adc
in
ds
mulb
clc
jno
jge
lock
xchg
push
sbb
fwait
mov
or
sti
ficoml
pop
mov
in
mov
cltd
out
xor
outsl
xor
mov
push
pop
xor
xchg
or
pop
push
xchg
jecxz
cmpsb
lcall
ja
ror
lds
dec
mov
in
adc
mov
jg
jbe
mov
shlb
fcomi
pop
mov
or
jecxz
add
lcall
jmp
fildl
xchg
adc
push
xchg
jmp
stc
imul
rcrl
aam
ss
mov
push
aaa
push
or
mov
sub
mov
sub
lcall
push
xor
mov
cs
mov
movl
xor
sbb
push
push
repz
fucomip
lret
pop
outsl
fisttps
add
pop
sbb
add
mov
push
aas
xchg
fdivl
dec
xchg
clc
dec
bnd
sarl
pop
mov
mov
test
push
bound
hlt
add
dec
adc
cmpsb
xchg
push
cwtl
lret
sbb
xchg
adc
mov
ja
pop
sti
add
xor
aas
lahf
imul
lret
cmp
pusha
and
inc
pop
mov
les
je
enter
outsb
fisttpll
insb
lds
push
mov
icebp
mov
aad
jns
clc
inc
mov
xlat
push
dec
xor
jecxz
fistl
iret
aad
mov
inc
mov
mov
rolb
and
lods
add
outsb
fidivl
or
ljmp
jns
mov
and
out
pop
adc
imul
inc
lret
outsl
test
push
dec
mov
fs
dec
clc
aad
cmc
inc
scas
inc
ljmp
aam
push
ss
leave
push
les
add
push
mov
sbb
loopne
int
mov
push
lea
push
inc
or
les
cmp
lock
ja
inc
aas
jp
addr16
or
mov
pop
adcl
lcall
cmp
cmp
xor
aam
sub
push
push
sub
adc
dec
shrl
ljmp
lcall
je
or
jge
outsl
gs
pop
cmp
inc
mov
inc
fnsave
jmp
push
icebp
in
mov
jmp
test
add
test
rep
pop
and
sbb
mov
jle
fiadds
mov
fadd
decb
pop
xchg
sbb
xlat
dec
mov
add
int
and
int
and
mov
test
cld
outsb
add
sub
je
mov
push
pop
inc
loop
sub
sub
rcll
push
mov
or
push
stc
jns
cs
movsb
cmp
das
fbstp
in
addl
xorb
movb
nop
es
dec
or
pop
jb
lahf
popa
dec
cmp
imul
loope
inc
cld
or
jbe
mov
int3
cmp
into
xor
int3
or
gs
jae
push
aas
outsl
jbe
sbb
gs
adc
dec
lahf
lea
adc
add
cmp
clc
cli
fld
test
xor
and
fisubs
push
es
hlt
push
je
sbb
pop
arpl
xor
lret
into
in
shrl
and
es
repz
add
mov
mov
clc
add
and
jge
movsb
in
stos
push
pop
out
dec
sbb
fwait
add
xchg
mov
pop
xchg
mov
daa
ja
adc
push
lret
call
cmp
or
xor
ret
repnz
out
pop
mov
adc
int
scas
push
xlat
sbb
pop
fadds
test
xchg
xchg
je
fisubs
in
outsl
pop
jmp
ret
flds
add
jmp
addr16
arpl
xchg
out
mov
subb
and
test
mov
inc
xchg
xor
jns
int
lea
mov
sbb
and
mov
call
push
shl
sub
and
adc
inc
dec
fst
repz
loopne
mov
cmp
sub
or
daa
jae
push
pop
xchg
pushl
pop
les
pop
cmp
mov
js
pop
adc
jle
pop
mov
cs
stos
cltd
adc
inc
inc
daa
mov
mov
out
aam
mov
sahf
mov
rcpps
mov
mov
iret
or
push
mov
leave
les
je
jg
pop
jae
xchg
dec
xor
mov
pop
mov
in
mov
fcoms
jne
adc
pop
fisubl
mov
shl
pusha
mov
or
sbb
cmp
or
sti
inc
leave
and
fiaddl
mov
mov
xchg
movsl
arpl
mov
das
sub
add
add
cmpsb
xor
ficoms
sbb
cwtl
adc
add
out
stos
stos
lret
ret
scas
xchg
sub
popf
push
popa
loope
xor
xchg
adc
ret
scas
addr16
les
int3
mov
add
ret
cmp
mov
dec
fistps
test
testl
sbb
gs
xchg
push
imul
cli
ljmp
xchg
lahf
mov
ss
mov
test
nop
mov
mov
push
cmp
jbe
mov
das
aaa
imul
std
mov
xchg
sbb
add
or
in
rcl
mulb
push
mov
xor
mov
jle
in
dec
bound
sbb
cltd
mov
adc
nop
jle
mov
mov
decl
pushf
fcomi
or
inc
mov
cmp
jbe
lods
pop
mov
mov
push
mov
sbb
and
and
outsb
and
dec
fdivrs
push
or
pushf
mov
in
lods
pushf
outsl
dec
or
pop
inc
mov
xor
xchg
lock
mov
jecxz
and
push
arpl
or
xchg
jg
cmp
dec
jne
jns
sub
scas
or
push
adc
data16
mov
xlat
je
push
add
jg
xchg
inc
jp
ss
sub
loope
sub
xchg
js
mov
jmp
loopne
push
add
outsb
bound
push
and
sub
push
adc
rclb
xchg
cmp
jnp
push
xchg
stos
sub
dec
iret
xchg
adcb
daa
jmp
sbb
xor
mov
mov
mov
mov
inc
add
into
gs
cs
ror
imul
shlb
imul
cmp
add
push
mov
pushf
cltd
xchg
dec
mov
or
test
mov
xchg
xchg
or
mov
in
or
add
shrl
dec
xlat
outsb
orl
hlt
dec
aam
mov
in
mov
das
cld
mov
jb
imul
sub
mov
scas
mov
inc
pop
add
xlat
cld
pop
and
pop
mov
rcr
aaa
addb
bnd
shll
fstpt
shlb
pushf
mov
mov
imul
divb
or
pop
lods
fwait
addl
inc
lret
xchg
add
push
pop
out
jne
xchg
notb
jnp
inc
shl
insb
int3
rolb
sahf
cmp
pop
adc
and
out
scas
xor
pop
loop
test
lahf
push
xchg
mov
mov
out
push
mov
int
push
mov
out
or
arpl
js
add
sub
rcll
xchg
aaa
rclb
aad
je
clc
or
sub
imul
aam
pop
sub
add
cmp
or
sub
insb
in
mov
sbb
sub
test
pop
hlt
cld
jle
push
repz
sub
add
in
pop
xchg
out
sub
mov
push
stos
push
and
dec
dec
dec
ficomps
clc
cld
push
vcvttss2si
jp
add
pop
adc
jb
mov
mov
ret
push
mov
jne
ja
xor
add
push
inc
xchg
test
sub
or
jb
popa
xor
pushf
testl
mov
lcall
clc
fldenv
pop
mov
push
insl
stc
mov
jecxz
cmc
icebp
xchg
andb
add
test
in
int
leave
dec
ljmp
rorb
imul
hlt
clc
into
inc
jns
mov
call
push
dec
sarl
xchg
fincstp
aas
push
mov
lods
int
xor
lret
shr
push
pop
int
xchg
mov
sub
test
arpl
sbb
pop
mov
xlat
inc
ficoms
in
stc
pop
adc
jg
add
popf
or
xchg
les
xchg
lods
pop
popa
jl
ficoml
xchg
sub
scas
push
sub
scas
inc
insl
sub
fbstp
test
insl
cli
shll
mov
repz
jbe
ja
jge
negb
mov
fbld
scas
xchg
dec
scas
es
jmp
push
push
ljmp
cmp
mov
cld
sub
sbb
and
push
adc
pop
xchg
loop
dec
jg
mov
and
pop
lods
je
add
sub
inc
jns
cmpsb
bound
mov
mov
fdecstp
lcall
inc
jmp
pop
data16
out
inc
adc
xchg
dec
mov
sbb
push
push
mov
repz
outsb
loope
mov
movsl
mov
in
int3
xor
cld
repnz
push
jp
test
scas
and
xor
iret
ljmp
rol
arpl
jl
lods
loope
and
mov
in
xchg
rep
sub
cmpsl
jno
add
test
lcall
or
ss
dec
mov
mov
pop
push
mov
int3
push
push
add
ss
in
outsb
mov
fwait
xchg
lock
out
jne
push
arpl
jp
lcall
mov
push
and
sub
int3
inc
cmp
pop
idivl
and
mov
out
and
lock
mov
xchg
scas
fwait
or
or
xor
push
lret
jbe
mov
mov
loope
ja
adc
icebp
and
mov
jge
push
ljmp
scas
mov
jnp
mov
aas
jl
or
cld
xor
add
js
ret
lds
inc
adc
rolb
and
movsb
insb
es
xchg
out
shrb
pop
mov
sub
int
mov
cmp
push
outsb
xor
push
inc
xchg
jmp
rcrl
xchg
xorl
cmpsl
and
aas
lcall
push
mov
insl
arpl
mov
jno
jb
ds
and
iret
mov
push
adc
test
mov
mov
jl
xchg
or
inc
inc
xchg
cmp
std
subl
out
test
inc
insb
pop
inc
fwait
test
mov
cli
in
icebp
pop
aas
adc
dec
xor
xor
push
xchg
mov
daa
inc
outsb
adc
mov
inc
add
scas
lods
cmp
add
xchg
and
in
mov
mov
cltd
ret
add
fsubrp
mov
in
in
and
jno
adc
mov
test
int
xor
ret
ret
das
push
sarb
sub
icebp
scas
nop
cmp
dec
ret
std
cmp
mov
sti
jp
add
sbbb
rolb
push
fisubrs
xor
sarl
rclb
mov
xchg
adc
bound
sub
cmp
pop
call
cli
cmc
or
es
push
test
es
sbbl
loop
ret
test
dec
sub
incb
sub
cmp
arpl
cmp
es
iret
push
cmp
jg
mov
iret
insl
and
cs
sbb
daa
adc
hlt
stos
sub
and
cmc
xchg
popa
aas
js
sbb
push
sahf
mov
in
mov
push
xor
inc
xor
cmp
push
jb
outsl
inc
pop
adc
pop
shrl
int3
mov
das
cmp
cmp
sub
sbb
popa
mov
push
add
or
push
xchg
add
sbb
in
sti
arpl
mov
dec
push
aam
rep
out
mov
push
imul
cwtl
add
insb
mov
sbb
sbb
addl
insb
xor
pusha
scas
stc
loope
and
mov
lds
mov
addl
fldz
pop
dec
pop
adc
xchg
or
jle
push
sar
xchg
adc
out
jp
shrb
pop
sub
lods
mov
pop
rorb
ret
roll
fildl
push
sbb
jb
addr16
add
into
cmpsl
lds
push
cltd
mov
stos
push
adc
repnz
cmp
repnz
mov
je
sbb
leave
add
xchg
daa
shll
jo
xor
mov
js
or
testb
xor
sub
lods
cltd
shll
adc
test
sub
sar
jae
pop
shrl
je
jg
test
jmp
mov
icebp
lret
or
scas
or
pop
push
mov
js
lds
push
jne
test
es
pop
movsb
jne
test
xchg
dec
ljmp
jns
nop
sbb
scas
repz
nop
movsb
aam
jns
jnp
les
sub
jg
ss
xchg
xchg
xor
mov
xor
shl
mov
xchg
insl
pop
and
stos
int
xlat
insb
add
inc
xor
enter
in
repz
mov
lret
jb
fistpll
outsl
test
mov
popa
pop
mov
xchg
in
adc
jge
into
jl
and
xor
inc
iret
imul
or
repnz
adc
sub
cmp
in
dec
mov
in
jl
insb
xor
cmpsl
pop
push
add
ja
dec
repnz
lret
add
sbb
in
divb
sbb
add
ss
xor
and
pop
mov
pop
sar
lods
movsl
push
lahf
in
add
jae
stc
sub
in
mov
ret
dec
pushf
cwtl
nop
inc
pushf
mov
es
roll
mov
xchg
rcrl
ds
out
sub
fistl
add
andb
mov
mov
sub
test
inc
pop
scas
mov
int3
jge
mov
push
adc
mov
inc
xchg
leave
add
nop
sbb
aaa
fs
fnstenv
data16
test
cmp
rcrb
push
pop
aaa
push
or
dec
leave
mov
hlt
pop
add
loope
shr
cmp
jmp
inc
repnz
out
or
jle
mov
out
out
cmp
and
das
test
out
xor
pop
lds
clc
stos
daa
jno
push
test
xchg
inc
pusha
adc
cld
js
dec
xor
fildll
xor
cmp
ds
insb
and
mov
cli
add
jp
rolb
mov
push
aas
inc
rorb
ret
addr16
stos
jne
pop
lret
mov
fs
and
cmp
mov
mov
aaa
sahf
int
or
hlt
sub
andl
in
sbb
incb
adc
inc
ret
xor
xchg
mov
sbb
daa
mov
psubusb
add
andl
int
pop
mov
mov
test
test
std
popf
ja
subb
jno
and
mov
cmp
mov
out
or
add
xchg
inc
dec
mov
test
jle
std
mov
cs
data16
adc
inc
test
sarl
lock
add
and
pop
push
icebp
xor
or
imul
adc
fimull
pop
xor
xor
je
inc
sub
xchg
ja
jns
cmp
inc
jbe,pt
fists
ficoms
inc
imul
dec
fcoms
hlt
dec
insb
push
cli
push
jle
clc
int3
in
sbb
adc
mov
push
mov
mov
push
roll
lret
test
adc
push
and
push
push
xor
ljmp
std
sub
ret
je
jnp
sub
call
std
test
repnz
insl
ret
fs
out
rcr
out
pop
sbb
xor
xchg
add
cld
out
jns
fsubp
cli
add
sbb
sub
dec
sub
cltd
aas
xor
xchg
cmp
lret
jp
mov
popf
cli
outsl
and
in
add
mov
je
divb
icebp
mov
popf
and
or
loope
fcmovnb
push
in
es
and
adc
xchg
mov
push
rolb
adc
mov
xchg
mov
jp
addr16
and
and
push
mov
cli
imul
outsl
lcall
cmp
jl
hlt
or
inc
mov
xchg
leave
cmc
jbe
in
cltd
stc
mov
or
ss
inc
shrl
sbb
sahf
xchg
mov
cmpsb
out
mov
es
popa
fcomip
jp
leave
jo
xchg
movaps
dec
sbb
mov
jns
pop
sbb
divb
lods
iret
xor
xchg
push
add
ljmp
imulb
fisttpl
out
mov
pop
insb
sti
inc
je
es
popa
and
fidivrl
cmp
leave
rol
and
inc
cmp
dec
xchg
sub
xlat
push
push
icebp
aas
dec
jle
test
cmpsl
imulb
push
adc
add
in
cmp
mov
pop
test
xchg
es
std
cltd
mov
jo
fistpll
cmp
idivb
push
jecxz
push
hlt
or
shrb
cmp
scas
std
xor
dec
sbb
in
outsb
push
adc
cli
jmp
push
movsb
jmp
xor
outsb
mov
stc
jb
dec
int3
nop
aam
leave
rolb
xlat
jb
xor
sbb
aad
pop
cmp
pop
mov
or
jo
xor
rclb
xorl
aad
push
jmp
icebp
ucomiss
push
pop
lods
popa
fidivs
add
add
lcall
adc
xchg
inc
addl
aaa
mov
sbb
call
inc
arpl
and
add
daa
call
xchg
ds
insl
mov
mov
pop
add
jae
push
jl
xlat
test
cltd
out
fisubs
pop
and
sbb
or
addr16
xor
outsl
or
jno
subl
jno
jne
xor
sub
enter
sub
adc
cld
jp
mov
xchg
lahf
and
aas
lea
addb
inc
js
xor
mov
rorl
fiaddl
nop
xchg
jne
test
clc
adc
mov
pop
push
inc
loop
xchg
push
and
repz
jbe
mov
subl
lcall
mov
sti
push
out
cmp
cmp
xor
xchg
push
jg
jbe
fisubrs
xor
popa
lea
push
xchg
fucomp
mov
int
xchg
mov
andl
addb
mov
andl
mov
fists
pop
mov
lahf
xor
int
jp
and
bound
jge
lock
je
and
xlat
int3
movsb
jmp
sub
xor
rcrb
inc
xorl
pmullw
dec
cmp
imul
push
mov
push
inc
cld
out
je
shrl
mov
sub
lret
leave
sbb
repz
test
incb
lret
test
cmc
push
xchg
or
dec
dec
movl
movsl
sub
sarl
cmp
cli
gs
mov
jbe
out
aas
into
int
mov
stos
repnz
gs
popa
es
lret
or
xchg
xor
dec
fs
push
out
xchg
mul
xchg
mov
pusha
sbb
dec
subb
cltd
xchg
xchg
mov
fists
ja
ja
rcr
test
in
push
loope
push
sub
and
jle,pn
push
pop
xchg
cmp
push
test
dec
loop
cmp
out
sub
adc
dec
sbb
std
mov
mov
ret
ja
sti
xchg
sub
add
dec
fbld
mov
jecxz
push
mov
mov
fsubrl
inc
outsl
or
lds
pushf
mov
pop
in
and
std
sarb
insb
jmp
into
xor
push
arpl
dec
fildl
mov
ss
pop
popf
roll
fdivrp
xchg
call
inc
jne
and
repz
je
ret
dec
mov
mov
push
sarl
sbb
loopne
fnstcw
mov
cmpsl
je
push
pop
push
enter
add
std
cmpl
push
pushf
out
add
test
bound
stos
jmp
xchg
cmp
dec
sahf
jno
aam
mov
sbb
push
mov
dec
jmp
dec
pop
negb
jecxz
lea
jo
das
and
sbb
in
add
and
xchg
or
sahf
sbb
dec
lret
ss
fcomp
and
mov
test
ffree
cs
or
sbb
mov
or
and
mov
test
xor
push
pop
jae
movsl
xchg
mov
mov
pop
or
mov
sarb
sub
mov
lods
jmp
shrl
shr
add
push
mov
icebp
xchg
add
fstp
xlat
pushf
loopne
xchg
jbe
mov
popa
jo
xchg
loope
bound
mov
test
hlt
cmp
jge
xor
and
dec
push
call
aam
dec
mov
nop
fwait
inc
push
repnz
int3
out
mov
sub
je
idivl
dec
mov
dec
xor
lock
iret
popa
call
dec
stc
ds
dec
xchg
cmp
mov
cmp
mov
jge
jbe
aas
or
jne
ljmp
dec
adc
sub
and
sub
andb
pop
add
pop
lods
mov
inc
addr16
dec
cmp
imul
push
aad
mov
dec
mov
mov
sbb
pop
das
push
shrb
gs
xchg
jg
pop
push
jl
je
add
fs
repz
insb
jno
pop
lret
mov
push
inc
adc
clc
mov
popf
or
out
test
int
mov
and
aas
loop
mov
jo
iret
mov
aaa
enter
jle
sbb
mov
adc
sub
inc
stos
loopne
mov
push
es
fwait
adcl
add
test
mov
and
push
inc
aam
jg
mov
loopne
push
stos
mov
push
jne
outsl
pop
push
push
das
stc
movsb
lock
mov
push
xchg
mov
stos
repnz
fistpl
push
stos
xor
add
aad
test
pop
ret
mov
adc
cltd
add
movsb
push
push
lock
stos
enter
add
mov
fistpll
js
addb
mov
and
xlat
loopne
loope
inc
sub
arpl
into
dec
xchg
push
mov
mul
in
inc
sub
add
jle
out
lock
mov
sub
adc
pop
mov
das
fisubl
mov
ret
lcall
sbb
outsl
mov
xor
add
inc
push
ds
stos
movsb
mov
sbb
jbe
xchg
sub
mov
jp
push
push
xlat
mov
dec
mov
popa
test
xchg
sub
je
push
aas
mov
cld
sarb
jno
out
jae
imul
lcall
ljmp
pop
mov
adc
repnz
iret
mov
call
jl
cld
dec
in
bound
std
sbb
cwtl
in
scas
mov
mov
in
outsb
push
sub
lret
xor
pop
repnz
pop
test
mov
cmp
jecxz
pop
add
stc
movsl
push
xchg
push
in
cmp
ret
iret
inc
or
rclb
adc
xor
xchg
sahf
stos
add
scas
add
in
lcall
mov
xor
xchg
dec
lea
enter
notb
cmp
mov
cmp
fcmovb
movsb
xchg
mov
push
cmc
out
sub
enter
mov
jg
and
and
je
push
movsl
ss
sbb
add
mov
jmp
fadd
inc
int
into
repz
xor
addr16
mov
shll
js
push
gs
aas
imul
pop
test
jnp
fs
or
lea
test
stos
fwait
lock
mov
xchg
adc
imul
jb
enter
fimuls
iret
lock
xchg
sub
cwtl
xchg
stc
mov
lea
cmp
shrb
cmp
or
or
mull
aaa
pop
icebp
or
sub
jne
sub
out
mov
out
rcrl
leave
and
sbb
inc
ljmp
push
add
nop
sub
lea
inc
aas
mov
mov
jl
stos
pop
cmpsl
insb
loopne
xchg
inc
pop
push
push
stc
mov
hlt
inc
cmp
push
andl
stc
in
adc
lahf
clc
push
jne
mov
push
sub
scas
insb
fstps
pop
push
mov
loop
insl
adc
ret
out
xchg
movsl
adc
loop
push
push
stos
std
dec
lods
adcl
out
dec
in
andl
pop
movsb
mov
jne
lcall
movsl
movsl
test
subl
mov
fxch
cmc
dec
fcomi
js
outsl
mov
mov
fcmovne
inc
insl
call
dec
stos
ja
push
dec
and
sbb
rorb
dec
jbe
fimuls
add
sahf
push
and
add
stc
dec
out
ds
movl
xchg
xor
int
mov
imul
fwait
dec
inc
inc
roll
stc
pop
or
scas
js
push
outsb
mov
daa
mov
xchg
push
pop
and
jne
lret
cmpsl
fsubr
jle
ret
xor
std
mov
ret
fistl
pop
arpl
lret
outsb
je
xlat
adc
jae
iret
mov
sub
pop
push
cmp
adc
test
pusha
hlt
aam
out
outsl
push
sarb
es
loope
sbb
mov
or
sub
xor
movsl
xlat
das
out
inc
sub
pushf
sar
fs
xor
add
cmp
mov
sbb
xor
pop
dec
mov
mov
fstl
mov
addb
stos
loopne
sysret
adc
in
dec
dec
mov
and
xchg
jle
mov
mov
repz
roll
mov
cmp
out
push
aad
pusha
push
fsubrl
test
adc
test
inc
cltd
mov
insl
jecxz
adc
inc
je
shrb
sbbl
cmpsb
sub
pop
test
push
push
push
cs
fsubrl
movsl
aam
adc
xchg
mov
inc
push
cmp
add
fstpl
or
sbb
std
scas
mov
mov
cmp
and
movsb
outsl
or
fisttpl
es
lahf
sbb
sub
je
xor
fdivr
inc
pop
mov
xlat
sub
ret
dec
pop
negl
mov
lods
or
xchg
cs
data16
dec
cmp
subb
mov
push
cmp
cmp
push
lahf
mov
push
pop
lods
xlat
dec
fists
add
in
clc
int3
ds
dec
pop
inc
mov
cli
fs
shlb
or
jbe
shrb
and
push
stos
cmp
repnz
orl
and
xor
mov
mov
mov
cwtl
mov
cld
mov
xchg
jnp
arpl
fbstp
clc
inc
xchg
scas
adc
inc
in
and
xchg
sbb
addr16
cmp
add
push
addr16
dec
dec
xchg
inc
out
xlat
outsl
dec
jo
adc
xchg
jmp
jno
push
cmp
sub
adc
gs
icebp
jp
jmp
js
push
sbb
and
xchg
icebp
test
mov
adc
rcl
cmpsl
loopne
sti
scas
and
xor
sbb
call
jg
ljmp
int3
sub
in
pop
sbb
leave
in
aas
and
lahf
pop
mov
aad
stos
addr16
loope
xchg
cmp
cltd
outsb
lret
jb
int3
jge
or
loop
fimull
fstp
inc
add
lods
das
outsb
fdivrl
popa
loopne
adc
add
mov
imul
push
sub
lods
xchg
sbb
fs
mov
sbb
cmpsb
outsl
jae
addr16
aas
rorb
jl
lock
sbb
adc
and
mov
mov
or
ss
jecxz
xchg
mov
rcll
pminub
sub
jo
pusha
fdivl
mov
sbb
and
aam
inc
repz
stos
std
adc
add
incb
shl
dec
ret
dec
gs
mov
je
cmc
push
fdivrl
scas
subb
popf
xor
mov
inc
addr16
push
adc
push
add
test
jg
scas
and
sti
sbb
mov
add
mov
mov
and
in
loopne
xor
test
pop
ja
decb
in
shrb
add
mov
call
ljmp
insb
push
push
sub
notb
jg
mov
pop
or
add
fbld
adcb
cmp
aaa
push
dec
icebp
es
stos
mov
xor
jnp
sub
or
xchg
jae
imul
and
or
pop
inc
sbb
ja
fidivl
mov
add
aam
push
jecxz
cmc
nop
pop
mov
mov
cmpb
lcall
enter
pop
xchg
icebp
int
push
shl
xchg
arpl
subb
push
fdivrs
xchg
roll
es
and
inc
and
inc
jg
fbstp
mov
sub
mov
lds
sub
cmc
dec
clc
imul
add
and
inc
cmpsb
xchg
sbb
pop
ret
push
and
clc
mov
or
lods
movl
pop
std
je
dec
mov
in
sbb
adc
test
mov
sbb
test
or
pop
jns
sbb
sbb
cwtl
mov
movsb
fwait
pop
or
into
dec
xchg
sub
fisttps
clc
out
mov
push
loope
in
cmp
jb
imul
jp
insl
stc
push
sub
rsqrtps
cwtl
mov
repz
sbb
mov
add
mov
cmp
setae
imul
sub
stos
xor
gs
xchg
scas
stc
pop
std
xchg
pop
fimull
or
and
test
leave
andl
sbb
mov
shlb
inc
dec
add
addr16
in
dec
sti
inc
movsl
inc
jle
outsb
popf
addr16
mov
nop
out
fs
or
or
je
xor
pop
addr16
inc
lea
in
xlat
push
sbb
test
lods
and
dec
mov
sub
push
test
fists
ss
loop
test
push
scas
pusha
divl
mov
dec
adc
out
movsb
data16
scas
rcrl
push
popa
mov
std
fwait
push
mov
cmp
insb
jle
scas
push
jae
inc
shrl
mov
scas
dec
orb
jg
mov
add
mov
dec
jmp
call
jecxz
pop
jecxz
inc
cmpsl
pop
insb
stos
icebp
ljmp
dec
pop
xchg
xor
cmp
pop
mov
pop
sub
pop
or
ss
and
cmp
pop
pop
out
cmp
jnp
xor
imull
imul
repz
cltd
mov
inc
jecxz
cmp
in
sbb
and
add
jbe
push
lea
inc
lock
in
shl
pop
ret
mov
inc
jnp
mul
in
push
push
int3
lea
push
dec
xor
pop
popf
stc
add
jl
lret
pop
or
popf
push
mov
push
and
pusha
ljmp
out
add
fisubl
mov
cmp
cli
dec
add
add
jg
and
add
hlt
xor
fs
inc
xchg
ficoml
shll
imul
aas
aas
mov
xchg
cmp
int
pop
jae
rcrb
inc
cmp
mov
testl
mov
xor
cmp
jg
insb
mov
iret
adc
push
xor
dec
inc
push
in
cmp
ret
shrl
adc
cmpsl
mov
cltd
or
shrl
adc
inc
and
mov
cmp
dec
loopne
cmp
inc
dec
jge
jge
data16
std
pop
or
add
arpl
jo
in
out
xor
cli
out
sub
inc
pop
xlat
fbstp
mov
repz
and
outsb
faddl
sbb
sarl
ja
mov
mov
or
jno
sub
repz
xchg
or
dec
test
adc
decb
pop
outsl
xchg
sub
and
cmp
dec
jle
rol
ror
mov
out
cmp
sti
je
es
add
push
movsb
fwait
jl
xor
pop
hlt
push
jno
push
scas
addr16
xchg
fdivs
pop
and
in
dec
inc
test
cmp
ret
scas
xor
dec
or
fstl
mov
push
mov
pop
and
lcall
cmpsl
insl
cltd
push
mov
nop
fucomip
ljmp
inc
jbe
shlb
call
shr
mov
test
xchg
push
and
es
adc
clc
sti
leave
faddl
pop
int
push
adc
dec
or
gs
jecxz
jns
mov
clc
loope
test
jb
push
rcr
es
outsl
lret
lea
mov
sbb
cmp
jb
sub
movsb
mov
aam
mov
adc
xchg
hlt
lret
or
subl
push
pop
shrl
and
enter
jle
repz
ficomps
xor
insb
scas
jecxz
xchg
in
mov
pop
iret
or
aas
addl
inc
into
push
mov
and
xor
jg
sub
xchg
bound
movsb
xchg
int
cmp
nop
jae
daa
and
xchg
fdivs
xor
popw
inc
fwait
mov
ljmp
jp
cmp
cltd
repnz
xchg
arpl
stc
enter
mov
push
sbb
push
cli
pop
lea
jl
sbb
fistpl
imul
adc
movsb
dec
or
aas
and
sti
mov
sub
pop
or
arpl
mov
adc
lods
jp
inc
flds
scas
lds
jno
out
push
xor
imul
divb
pop
mov
xor
bound
cmpsl
aaa
lret
mov
int3
sbb
lods
mov
cmpsl
outsl
and
cmpb
out
pop
or
inc
dec
cltd
in
mov
ss
cmp
icebp
ds
cmp
lret
call
dec
pusha
loopne
scas
ror
cs
pop
push
popa
xor
pushw
les
movb
push
jbe
mov
stos
popa
cld
lahf
mov
cli
ja
aas
out
sbb
push
xlat
jg
dec
mov
loop
ret
insl
push
xchg
test
rcr
in
add
loope
mov
mov
loop
repnz
mov
dec
repnz
push
inc
ds
mov
jne
mov
jns
stos
pop
and
jno
aas
add
call
push
cld
nop
mov
mov
and
mov
jb
lds
mov
ljmp
movsl
rorl
outsb
add
subb
imul
lcall
and
sbb
adc
loop
ljmp
or
mov
push
push
xchg
pop
hlt
cmpsl
or
inc
xlat
push
push
mov
ret
inc
push
out
cli
mov
dec
imul
push
inc
subb
and
and
push
mov
xor
and
stos
aad
ja
mov
movsl
data16
cmp
outsl
pop
pop
mov
rcl
and
pop
push
sbb
sub
ret
pusha
hlt
clc
addr16
add
and
sbb
pop
mov
rcrb
loop
jp
jne
fsubl
dec
mov
rorb
and
insb
jmp
mov
enter
or
lea
js
adc
adc
ds
mov
sbb
inc
in
sahf
push
inc
int
pop
cs
and
leave
mov
lods
mov
test
bound
lds
sbb
mov
cmp
dec
mov
xchg
cmpsb
xor
test
or
lock
std
out
leave
pop
push
into
aaa
aam
add
clc
cli
push
repnz
mov
aas
and
repz
andl
inc
cmpsl
ret
cmp
add
ret
and
push
push
dec
xchg
shl
js
mov
lret
mov
jae
and
aam
push
xchg
sahf
shrl
sbb
gs
sbb
xor
ds
or
sub
mov
jge
les
outsl
popl
cltd
cli
add
add
fldt
movsb
cld
xor
outsl
sub
adc
and
fbstp
pop
sbb
imul
lret
lods
xchg
in
adc
and
sbb
sti
xchg
andb
push
inc
or
stos
fldcw
sub
lret
jle
gs
enter
push
cmp
adc
fldl
xor
jnp
lret
rolb
add
jge
xchg
sbb
mov
cld
test
push
inc
jl
mov
dec
ja
sbb
mov
xor
push
mov
push
mov
xlat
dec
mov
ret
addr16
push
cs
repnz
movsl
mov
imul
inc
xor
mov
popa
add
sbb
xorb
aad
push
ljmp
jge
pop
mov
jmp
push
dec
lcall
imul
cmp
mov
sub
fldcw
or
push
dec
adc
add
shrb
and
scas
leave
in
inc
and
mov
xor
xchg
mov
xor
iret
jno
loope
xor
repnz
stc
js
rcrb
out
mov
or
in
data16
movsl
ds
and
test
jecxz
pop
xor
shl
pop
push
sub
out
dec
sbb
push
or
mov
clc
adc
add
jmp
xchg
mull
ss
inc
insl
adc
in
lock
sbb
xchg
pop
dec
and
mov
out
adc
jno
sbb
cs
or
push
les
int3
rcr
jnp
xor
inc
popa
fnstcw
push
pop
jl
and
xchg
and
sbbb
in
js
sbb
cli
mov
xor
inc
jmp
cwtl
call
sbb
adc
repnz
divl
and
sbb
mov
loope
push
adc
push
inc
adc
jl
aas
xchg
or
adc
push
pushf
sti
and
mov
xchg
push
mov
test
pusha
xorb
into
clc
or
lahf
frstor
test
mov
repnz
cld
cmp
jg
test
adc
jnp
loop
mov
lcall
test
cmp
push
adc
out
xchg
xchg
leave
xchg
cmp
adc
mov
cmp
incl
cmp
daa
pushf
dec
mov
movsl
cld
mov
test
andl
lea
push
out
jno
sbb
ss
add
clc
push
ljmp
insb
enter
xchg
cmpsl
ss
mov
add
cmc
popa
jns
rcrb
xchg
jle
mov
inc
xor
xchg
into
call
ljmp
mov
repz
sub
repz
mov
jp
mov
ja
enter
lods
or
push
xor
std
pusha
jle
or
xchg
jge
push
cmp
test
mov
sahf
mov
mov
inc
mov
dec
psrlw
pop
mov
enter
out
dec
cmc
inc
fisubl
sub
jb
out
cmpsb
std
sarl
fcoms
mov
in
into
adc
jge
sbb
xor
pusha
lret
shlb
mov
adc
outsl
push
fcmovbe
dec
in
ljmp
mov
cld
sub
loop
pop
loope
jne
aad
mov
jle
sahf
inc
xor
jns
out
nop
xchg
pop
lcall
pop
sub
rorl
sbb
cmc
idivb
std
inc
mov
mov
gs
inc
jp
negl
mov
jnp
cmp
push
fcoml
xchg
repnz
aaa
jno
sub
or
mov
in
int
xchg
xor
test
jae
dec
imul
jmp
in
sbb
xchg
push
lret
push
mov
int3
adc
inc
lea
rol
inc
out
adc
push
xchg
in
dec
int3
and
push
fsubrs
pop
mov
shlb
orl
imul
push
xchg
sbb
xchg
insl
sub
jo
pop
push
mov
bound
push
or
imul
cmpsl
push
mov
mov
in
insl
lods
pop
popa
jbe
gs
and
mov
push
dec
jae
loopne
push
jns
push
mov
inc
adc
ret
jmp
popf
pop
js
sub
sbb
xchg
imul
push
inc
pop
jmp
pop
xchg
add
or
xchg
mov
incb
gs
movsb
mov
sbb
out
add
and
inc
stc
or
in
pop
movsb
shl
add
and
adc
pushw
dec
lret
in
push
xchg
fists
jnp
stos
push
and
test
push
in
add
cmc
hlt
mov
pop
andl
cmpsl
lock
fdivs
xchg
imul
je
mov
xchg
outsb
pop
stos
mov
cmpsb
out
loop
mov
mov
dec
pop
xor
gs
inc
inc
mov
nop
pmuludq
mov
xchg
add
mov
xlat
or
dec
shlb
jle
shrl
sub
add
mov
cmp
jge
mov
adc
arpl
mov
jle
gs
rep
out
scas
or
pushf
mov
fsubp
xor
shrl
push
into
ret
mov
xor
ss
add
jmp
loopne
out
cltd
icebp
cmp
pop
mov
mov
fistps
sub
mov
fld
push
out
dec
in
jle
movsb
arpl
xchg
sbb
inc
mov
adc
cmp
xor
dec
dec
add
mov
or
mov
mov
sar
pop
adc
mov
sbb
adcb
mov
insb
jg
inc
push
cmpsl
mov
mov
addr16
jl
push
mov
inc
jbe
jae
scas
ja
lock
jge
xor
andb
cmp
mov
imull
into
mov
add
lret
outsl
push
xchg
lea
dec
pop
mov
mov
pusha
lcall
imul
es
cmpsl
push
jo
sti
pop
shlb
or
jmp
pop
pop
andb
loop
aaa
xor
test
outsb
adc
popf
ficoms
jb
and
mov
jnp
fsts
mov
push
lock
cld
pop
pop
int3
push
push
cli
mov
in
jge
cmc
and
push
out
dec
pop
test
add
cmpsl
cmp
sahf
xchg
xor
jno
aaa
mov
mov
loop
sbb
cmp
sbb
jno
xor
imul
cmp
cmp
test
adc
add
and
cld
and
jmp
inc
xchg
stc
cmp
int
rclb
adc
gs
repz
les
jmp
mov
js
aas
jp
adc
mov
loope
cmp
and
orb
jbe
inc
sysret
pop
sub
xchg
xchg
sbbl
push
and
lds
add
movsl
and
sbb
int
pop
xchg
mov
loopne
jmp
call
cld
inc
adc
mov
fstpl
sub
js
dec
shr
lea
repz
js
sti
jle
mulb
out
fnstsw
inc
aam
cmp
or
push
dec
cmp
xchg
stc
push
inc
pop
mov
imulb
out
mov
adc
pop
xchg
in
xchg
dec
xchg
pop
into
cmp
and
sbb
dec
inc
xchg
fld
xor
pop
movsl
aad
shrl
addr16
fdivrl
jne
lcall
testl
xor
adc
inc
or
mov
or
jmp
insb
int
jmp
mov
cmpsb
sbb
cmp
popa
adc
fs
sbb
mov
lretw
not
mov
pop
sbb
loope
xchg
aad
jae
fwait
add
dec
adc
mov
loope
leave
xorl
out
outsl
push
inc
add
and
mov
leave
mov
je
and
aam
sbb
sub
in
loope
inc
dec
in
outsb
test
cli
popa
test
ret
mov
lcall
popf
je
dec
cld
xchg
push
rclb
es
add
rorl
cmpsl
jmp
cwtl
repnz
jmp
mov
cmc
nop
dec
push
enter
jp
push
fistl
gs
ret
call
fisubrl
rorb
add
xor
popf
lret
cmpsb
sub
cmpsl
mov
rcll
dec
push
jno
push
fwait
cltd
mov
std
push
pusha
dec
or
pop
fsqrt
in
pushf
test
dec
insl
dec
push
test
dec
imul
pop
cmpsb
ss
cmp
xor
pop
inc
test
aaa
cmc
sbb
stc
js
loopne
cmp
mov
aaa
pop
mov
or
sbb
sbb
pushf
pop
jg
mov
adc
cs
jns
movsb
push
call
out
in
test
leave
xor
mov
clc
sub
in
cmp
xchg
movsb
inc
jmp
lds
mov
stos
loopne
mov
test
repz
lods
shll
mov
jl
push
jo
inc
mov
std
dec
ret
popa
dec
add
and
enter
sub
lahf
cmp
gs
push
test
repz
in
lahf
sbb
nop
sbb
insl
imul
data16
leave
jns
dec
pusha
bound
sbb
in
or
dec
sbb
dec
sbb
pusha
sub
xor
fcompl
xbegin
dec
cmpl
clc
sbb
sbb
push
imul
aam
mov
xor
iret
and
gs
xchg
ficomps
cli
jo
cli
lods
out
adc
icebp
fdivs
adc
or
pop
vmovsldup
sub
cmp
sarl
mov
fdivrl
je
add
in
mov
xchg
negb
sbb
lock
push
mov
mov
add
xchg
fsub
pop
dec
sti
and
out
mov
jg
fldl2t
cwtl
push
orb
cmp
ljmp
icebp
adc
xchg
arpl
cmp
lahf
mov
xor
jl
add
sar
cmpsl
mov
dec
push
enter
add
test
adc
movsb
mov
or
in
andb
jb
loop
inc
xchg
stos
xchg
loopne
pop
fcoml
xchg
lock
mov
test
nop
scas
cmp
pop
loope
cwtl
addr16
cmp
cmp
xchg
mov
mov
inc
xor
in
test
add
fs
cmp
inc
inc
loop
cli
sub
loope
outsb
gs
sub
mov
cld
lret
mov
test
test
decb
mov
mov
je
mov
testl
pop
fsubr
daa
dec
sub
sbb
xor
inc
ret
sub
lock
cmp
pop
or
mov
add
imul
xor
xchg
pop
mov
mov
adc
adc
and
fsubr
jo
lods
ret
jl
xor
dec
mov
push
jo
add
or
jmp
pop
iret
xchg
fdivrl
imul
dec
imul
rcrb
ret
addr16
pop
insl
sbb
icebp
iret
testl
pop
cmp
sub
filds
sbb
pop
lret
dec
add
aas
outsb
jmp
cld
dec
mov
pop
in
cltd
xchg
ret
sub
int
fadd
outsb
iret
or
fbstp
sub
push
ss
push
pop
and
xchg
pop
fsubr
adc
dec
push
je
out
das
jae
dec
dec
push
cmc
dec
lret
or
fdivrs
in
pusha
mov
or
mov
aam
lock
mov
cli
add
add
lea
xchg
add
sbb
mov
pop
jmp
or
in
mov
mov
dec
and
stos
sub
stos
or
jmp
dec
in
mov
xchg
scas
cmp
xchg
jl
or
pop
mov
jb
pop
imull
loope
je
push
or
pop
aad
or
pop
arpl
shrb
int
cs
rol
fsubs
lcall
mov
loop
mov
xchg
push
xchg
clc
mov
and
xor
cmpsb
jnp
out
cld
lret
insb
add
cmp
dec
sti
hlt
xor
icebp
pop
mov
cwtl
jae
push
mov
and
in
push
movsb
fcomps
adc
fwait
cwtl
pushf
mov
push
icebp
jg
cmp
pop
arpl
je
bound
andb
pop
stos
push
lahf
in
jnp
inc
jmp
mov
jl
or
adc
test
loopne
stc
fidivl
mov
mov
lock
cmp
add
or
cmpsl
jl
lods
mov
lds
leave
stc
mov
sbbb
inc
inc
mov
dec
dec
mov
lret
cmp
insl
jl
mov
sub
xchg
inc
push
or
orb
add
push
mov
xchg
loopne
mov
out
dec
jno
sub
pop
sbb
add
push
jecxz
inc
roll
inc
adcb
test
jns
pop
ljmp
or
xor
add
scas
into
mov
push
sub
jmp
inc
and
jno
repz
sub
xacquire
jecxz
insl
mov
jg
sti
pop
add
fidivrl
lret
enter
pop
ret
mov
dec
fcmovbe
mov
into
popf
mov
push
mov
push
pop
imul
shrl
fisttps
jno
dec
adc
mov
in
xor
adc
jle
test
jno
or
rolb
addl
cmp
add
push
jbe
out
xor
cmp
aaa
ret
js
out
test
or
shl
inc
stc
xor
lahf
inc
adc
jge
mov
cmp
lods
imul
or
xchg
xchg
pop
js
pusha
push
js
sbb
pop
out
loopne
adc
push
mov
xchg
into
stos
loope
out
jl
ror
add
dec
jne
push
mov
lahf
insb
repz
or
je
push
fldt
lock
imul
mov
aad
lock
je
pusha
or
sbb
cmc
or
cmpsl
mov
adc
aas
lret
fdiv
jno
or
popf
ror
adc
fidivs
xor
add
mov
xor
inc
shlb
mov
cmp
mov
cmovb
or
xchg
xor
sar
std
int3
cmp
pop
add
mov
dec
cltd
call
cwtl
mov
xchg
test
dec
push
mov
xor
and
lods
sub
xchg
mov
pop
xchg
push
add
sub
mov
das
fmuls
xor
or
jl
ja
jle
adc
push
je
dec
jbe
inc
sub
adc
xchg
push
and
gs
xor
push
jmp
inc
addr16
cmp
dec
xor
lods
sbb
js
pop
jg
push
repnz
adc
outsb
ja
mov
inc
enter
aaa
test
loopne
loope
push
jnp
add
cmc
int3
mov
cmp
and
sar
push
lods
sub
das
sub
cmpsb
push
xorb
mov
mov
xchg
shlb
aas
aam
pop
xchg
scas
shr
andl
inc
xor
inc
lcall
xchg
std
add
push
lock
fidivs
popf
jo
push
popf
pop
ljmp
dec
jecxz
jne
fbld
xor
ror
fwait
xor
sahf
jg
mov
in
cmp
add
jecxz
cmp
fildl
mov
pop
push
stos
fldt
aam
ds
out
adc
pusha
jecxz
xor
xor
dec
in
inc
cmpsl
or
icebp
add
push
fistps
push
out
mov
cmpl
push
fcompl
sub
mov
inc
jno
andl
call
mov
mov
xchg
mov
js
hlt
mov
aam
insb
xchg
out
mov
addr16
into
jno
movsb
repz
pop
sbb
pusha
ss
and
dec
sub
inc
es
and
pop
adc
rorl
aas
push
or
cmpl
jecxz
and
clc
add
outsl
push
repnz
dec
movsl
aam
wbinvd
sbb
or
rcll
rcrl
sub
pop
das
jle
mov
dec
ja
add
aaa
aam
popf
xor
xchg
lcall
loopne
xor
sbb
pushf
mov
int3
stos
movsb
jmp
jno
mov
repz
stos
icebp
mov
loope
scas
loop
push
inc
push
lret
mov
xchg
cltd
movsl
pop
mov
sub
push
in
push
fwait
mov
sti
lock
jns
clc
sub
and
aaa
and
adc
das
jno
fdivrl
cwtl
dec
insb
in
push
testb
adc
or
imul
inc
call
and
out
fists
outsl
push
movsl
mov
or
mov
movsl
cmp
add
pop
lds
sub
push
subb
fs
pop
jp
call
xor
out
mov
push
ja
cltd
gs
repz
enter
add
mov
and
or
cmpsl
sbb
lahf
jecxz
dec
cmp
jo
cmp
imul
out
mov
adc
daa
rcll
arpl
push
gs
fcoml
lods
lods
cmp
xchg
shl
out
sub
sbb
movsl
lods
jne
push
outsb
clc
or
xchg
mov
out
xor
mov
cmp
and
lcall
pusha
aas
or
xor
sbb
lahf
pop
cmp
in
int
or
add
addr16
iret
xchg
insb
jp
pushl
imul
cld
cwtl
inc
xchg
and
jb
int3
pop
movsb
shlb
and
push
imull
in
daa
jb
mov
cmp
mov
or
lahf
adc
insl
fs
pop
leave
lret
pop
dec
sbb
xchg
xchg
aas
inc
inc
and
sub
imul
ret
mov
sarl
mov
mov
and
int3
addr16
add
popf
and
xor
out
xor
clc
add
push
loopne
notl
mov
cmp
or
pop
mov
test
xor
lock
add
mov
sbb
dec
stc
inc
hlt
mov
and
loope
loope
sbb
out
arpl
pop
ret
mov
push
cmp
cmpsb
gs
ror
cmp
xchg
scas
es
rolb
add
xchg
jmp
fs
filds
push
fs
add
repnz
push
arpl
sub
paddsw
test
bound
mov
scas
dec
adc
test
cmpl
stos
or
movhlps
out
pmaddwd
push
push
test
filds
repnz
shll
push
mov
lea
ret
mov
push
aas
les
mov
push
dec
aas
test
jg
push
iret
in
pop
sub
mov
mov
pop
js
sbb
shl
stos
loop
adc
adc
xor
jbe
jb
mov
sbb
mov
nop
push
mov
testb
dec
icebp
test
ljmp
sahf
adc
adc
add
pushf
imul
cmpsl
xor
cld
dec
pop
adc
jp
inc
mov
jne
outsb
pushf
jp
mov
nop
and
adc
sub
mov
or
out
cld
sub
ficompl
mov
xchg
mov
rclb
cmc
loopne
push
or
and
addb
clc
dec
fwait
push
adc
inc
mov
test
aam
dec
jle
insb
xor
sbb
scas
shlb
repz
insb
stos
xor
mov
sub
stos
add
add
jg
mov
inc
jbe
mov
dec
ja
bound
imull
out
js
je
cmpl
adc
aas
xor
sbb
add
decl
jge
sbb
es
test
xchg
inc
clc
outsl
sub
cmp
in
cmp
pop
add
xchg
jle
mov
add
push
mov
jmp
faddp
jo
stos
fnstcw
mov
inc
lret
jle
bswap
and
arpl
std
cmp
fs
or
mov
inc
xchg
ret
out
dec
sub
mov
and
test
jno
or
sub
int
mov
loopne
stc
lock
xchg
sub
xor
xchg
mov
loope
push
mov
pop
mov
div
aad
insl
test
orb
add
sahf
inc
push
add
or
push
incb
movsb
jns
sarl
aas
xor
pop
aad
inc
popf
cmp
xor
test
and
add
xor
out
xlat
loop
dec
inc
lods
xchg
jmp
push
adc
flds
xchg
sahf
mov
mov
nop
ljmp
jp
cvttps2pi
fwait
outsl
xchg
cs
mov
xor
xchg
or
or
int3
mov
popa
in
lcall
adc
rorl
xor
mov
out
mov
stc
cmp
ja
jecxz
jmp
xor
ljmp
push
and
iret
lahf
ret
ljmp
mov
mov
lea
ret
sub
cld
popf
mov
jmp
test
lods
test
jne
test
ds
jl
add
lds
ret
cmpsl
add
push
imul
pusha
dec
mov
std
orl
xor
les
cld
dec
sbb
xor
cmp
shlb
push
mov
xchg
or
or
push
in
inc
shrl
add
inc
inc
out
sahf
aaa
loopne
fldt
mov
ljmp
sub
add
push
pop
inc
inc
mov
mov
dec
imul
inc
ss
daa
sbb
mov
sub
loop
mov
ss
sbb
pop
cwtl
test
fisubrs
mov
cs
mov
and
mov
mov
mov
sbb
mov
cltd
dec
push
xchg
lods
arpl
addr16
lret
and
xchg
cwtl
push
sub
mov
xchg
into
or
xor
pop
into
add
mov
test
push
dec
push
adc
popf
aaa
cmc
add
add
sti
clc
cli
and
aas
pop
jnp
push
pop
pop
cs
hlt
pop
int3
popa
sbb
mov
inc
cli
fwait
sbb
cli
and
adc
and
mov
mov
xchg
pop
je
out
repz
adc
fcmovnu
jg
test
nop
jnp
cli
cs
or
inc
mov
push
adc
mov
repz
stc
test
ret
jge
hlt
pop
mov
fiadds
mov
cmpsb
gs
popf
mov
out
out
rcr
adc
testl
aas
outsb
dec
rcll
cmp
lret
cmpb
mov
in
mov
pop
mov
adc
inc
mov
xor
cmpsb
mov
sub
dec
push
add
and
inc
sarl
jmp
cmp
sub
xlat
lret
dec
sbb
jge
xor
or
or
jle
insb
inc
shll
fmuls
pop
lock
imul
das
mov
cmpsl
inc
mov
sbb
mov
ja
leave
loop
xor
js
xor
stos
addr16
cli
sahf
repz
mov
insl
adc
insl
icebp
not
push
fwait
cmpsl
xchg
orb
out
loop
es
fildll
jp
inc
jg
jmp
jbe
gs
adc
jb
cmc
lock
je
stos
lock
jnp
push
inc
xor
icebp
sbb
and
cltd
sbb
pop
xchg
ror
sub
cltd
or
inc
inc
adc
mov
addr16
fsubrl
out
xor
je
lret
jnp
lret
movsl
repz
fstpl
or
je
mov
outsl
pop
sbb
jnp
xchg
jno
das
aad
cmpsl
cmpsb
sub
cmp
insb
repz
sbb
rorb
pop
jecxz
adc
rclb
jb
lret
xor
sbb
xchg
stos
cmp
cltd
movsb
aam
icebp
xor
adc
shl
adc
and
lcall
cmpsb
fwait
xchg
cwtl
test
cmp
inc
nop
push
mov
push
sub
mov
adc
dec
cmp
es
aas
int3
cwtl
dec
adc
lods
aad
cltd
sbb
sbb
add
fs
mov
push
in
imul
mov
lcall
mov
inc
mov
mov
int3
inc
push
inc
jl
arpl
jle
lods
mov
ss
and
cmc
or
out
sbb
push
ror
sub
dec
testl
cmp
hlt
aas
or
cmp
imul
outsl
inc
call
mov
aad
dec
jg
inc
jle
jp
xor
jae
or
loope
sbb
sarb
jae
cmp
mov
jno
dec
sahf
imul
mov
and
jmp
imul
mov
ds
pop
sbb
out
push
int3
out
mov
lods
xor
sbb
daa
xchg
mov
mov
scas
sti
and
add
dec
xlat
jns
hlt
in
mov
lock
imul
in
rcll
rolb
pop
xor
sbb
xlat
repnz
and
pop
outsl
pop
or
rcr
fwait
lods
inc
inc
shl
inc
sub
xor
in
ds
dec
inc
jae
push
dec
std
cmp
push
mov
xchg
or
clc
cmpsb
hlt
sbb
cmp
dec
adc
xchg
push
xor
push
mov
pop
loopne
data16
shll
mov
dec
xor
insl
hlt
push
aad
fabs
xor
stos
sub
movsl
shlb
into
inc
loop
jnp
cmp
and
or
gs
dec
sbb
imul
sbb
jnp
daa
out
dec
loop
sbb
jg
mov
sbb
xor
mov
fsub
sbb
insl
dec
sahf
out
or
push
shrb
in
jno
jno
inc
sbb
into
mov
pop
insb
add
fisttpll
aam
fnstcw
inc
out
mov
out
lea
cli
and
jge
inc
xchg
add
jne
ret
cmpsl
vmwrite
push
mov
out
inc
push
push
add
int3
shll
aaa
mov
cmp
jmp
inc
int3
pop
mov
cld
sbb
in
and
push
out
ffree
out
movsb
fistps
insb
jmp
lock
icebp
jmp
mov
mov
and
outsl
std
lea
jge
pop
jle
jno
call
test
in
fwait
sbb
mov
les
add
pop
les
push
fnstcw
les
lods
popa
pushf
in
sar
stos
sbb
sbb
mov
xchg
dec
xchg
xchg
inc
hlt
cmpsl
mov
pop
sbb
xor
sub
sub
enter
cmpsl
pop
dec
sub
arpl
push
sub
imul
and
add
lods
clc
xchg
std
xchg
dec
mov
sub
push
lret
fimull
repnz
mov
aas
push
lret
jae
aaa
push
nop
or
cltd
jne
xchg
lods
fidivs
xchg
push
lret
fs
ss
add
jne
daa
mov
test
mov
push
out
sub
nop
jl
repnz
mov
inc
out
pusha
sbb
lcall
mov
out
add
mov
lds
stos
popf
ror
xor
or
mov
adc
mov
pop
out
mov
xchg
dec
ss
mov
xchg
popa
dec
jmp
mov
imul
mov
cmp
add
push
test
jmp
xor
arpl
repnz
fdivs
push
insl
xchg
xchg
cmpsb
jecxz
cmp
jg
pop
xor
mov
xchg
ja
xchg
std
mov
das
int3
les
mov
and
sub
addr16
mov
dec
adc
das
divb
and
aaa
rcrl
push
sahf
mulb
pop
push
mov
sti
add
inc
or
out
mov
xchg
jge
sub
les
pop
rdmsr
jnp
add
int
loope
cmpsl
cltd
push
cmp
sbb
adc
mov
lock
jg
mov
dec
push
stos
dec
and
push
xchg
and
add
adc
lahf
adc
mov
pushf
pusha
shll
sbb
loope
imull
arpl
adc
xchg
mov
push
or
mov
je
sbb
in
dec
orb
es
pop
jle
cmpsl
faddl
stos
mov
lods
out
mov
stos
mov
xchg
xor
xchg
xchg
inc
xchg
addr16
movsb
test
test
movsb
sub
or
movsb
and
push
std
xor
or
loope
xor
cmpsb
cmp
add
invd
sbb
inc
bound
dec
int3
xor
test
dec
or
push
mov
xchg
out
lahf
jae
push
push
popa
add
mov
sub
mulb
daa
inc
stc
test
inc
xor
xchg
sub
adcl
push
sub
sub
jne
dec
stc
nop
movl
xorl
jae
adc
dec
sub
push
or
dec
sbb
cmp
in
xchg
xchg
mov
cmp
jne
std
add
xor
or
jbe
inc
lods
inc
add
mov
ds
test
std
add
movsb
jo
pop
adc
mov
push
xchg
add
mov
and
adc
sahf
xor
stos
js
das
add
pop
pusha
lret
add
adc
xchg
xor
in
jmp
or
mov
out
push
jmp
ret
movsb
xlat
testl
cwtl
dec
push
jg
adc
scas
add
clc
in
sub
mov
out
xchg
xor
cmpsb
dec
fdiv
call
loop
and
and
pop
loop
out
mov
aam
hlt
lods
into
test
out
jge
fnsave
mov
sarl
inc
nop
test
push
and
and
sbb
pop
movsl
inc
mov
push
mov
shlb
dec
or
pushf
stos
sahf
or
xchg
and
imul
pop
bound
negb
int
xor
mov
ret
aaa
jle
insb
push
notb
xchg
dec
fnstenv
jl
xorl
jl
iret
sbb
cmpsb
dec
mov
dec
lret
jmp
adc
inc
arpl
xor
scas
call
jb
pop
inc
jb
mov
loopne
lahf
nop
adc
rolb
addb
pop
in
inc
movsl
mov
out
pusha
mov
mov
cmp
and
int
loope
jmp
daa
jle
cmpsl
and
jae
mov
sbb
push
sar
mov
mov
mov
push
push
and
icebp
cmpl
test
sbb
cmp
inc
cld
addr16
repnz
push
outsb
or
leave
clc
xchg
enter
jg
push
jo
inc
aas
test
mov
xchg
and
mov
xchg
scas
lea
out
inc
fincstp
mov
addb
stc
pop
push
cmp
sub
es
push
dec
rcrb
ficompl
adc
pop
roll
in
iret
xchg
insl
fstps
sub
lret
std
or
xor
cwtl
out
test
fwait
cmp
imul
popa
leave
add
inc
cmp
fsubs
mov
sbb
aam
push
lahf
loope
sahf
xchg
shr
xchg
jns
ret
int
adc
cmpsb
lret
cmpsl
fstpt
xchg
xchg
imull
sbb
mov
test
cmp
xor
push
gs
out
push
repnz
jmp
outsl
bound
mov
cmpsb
mov
call
mov
xor
jge
cmp
inc
imul
jge
in
out
dec
lcall
cmp
sub
mov
test
and
pusha
loopne
ror
shl
cmp
jns
das
les
fidivrs
cmp
jb
mov
xchg
scas
int
cltd
lahf
push
les
inc
xor
mov
and
push
sti
std
movsl
icebp
cmp
mov
adc
cli
xchg
pusha
inc
push
hlt
add
jecxz
pusha
xchg
insl
mov
lret
xchg
aad
sbb
in
dec
push
js
jb
jnp
push
rcl
stos
dec
mov
fldcw
lret
lahf
and
test
dec
jo
dec
xor
sarb
push
test
sarb
push
sub
lds
push
push
rorl
ret
adc
jno
pop
xor
fldcw
lods
sbb
xor
xlat
or
ss
jp
xlat
xor
lock
mov
xor
test
scas
jge
int3
sub
jns
mov
cmp
cli
loopne
cmp
lahf
stos
xchg
sbb
mov
dec
mov
add
outsl
addr16
nop
rorl
pop
shr
in
cmp
push
inc
cmp
shll
mov
mov
int3
sub
mov
push
add
xor
xchg
add
loop
xchg
mov
xchg
add
or
xchg
add
push
imul
outsl
jge
xchg
filds
cmc
mov
adc
leave
lods
pop
ljmp
lea
mov
mov
int3
inc
das
mov
stos
mov
sbb
loope
inc
loop
or
push
aas
jnp
push
pop
lock
sbb
sarl
out
or
cmp
and
jbe
mov
push
sbb
mov
lods
and
stos
nop
mov
add
stos
push
mov
jnp,pn
adc
jne
mov
and
dec
add
push
cmovp
lods
mov
pop
inc
ficompl
mov
or
repnz
scas
push
mov
fcomp
pop
pushf
lds
push
outsl
hlt
arpl
bnd
push
ljmp
rorb
jo
and
andb
mov
push
call
mov
jmp
pop
mov
pop
mov
or
insl
mov
dec
leave
loopne
insb
scas
dec
xchg
sarb
pop
pop
test
push
ljmp
adc
loop
subw
fidivrl
hlt
xchg
sub
movsb
mulb
add
sub
nop
std
and
sbbl
pop
or
push
xchg
loop
mov
xadd
add
cmp
push
inc
cmpsl
sbb
and
popa
sbb
fdivr
push
mov
adc
add
inc
inc
fnstsw
pop
cmp
jle
mov
add
popf
sbb
or
sub
lret
ror
cs
sub
cmp
stos
xchg
adc
adc
add
outsl
mov
adc
or
or
fldl
xchg
sub
and
mov
insl
out
sub
fmuls
xchg
adc
sbb
mov
mov
sub
push
push
iret
jecxz
enter
mov
jns
stc
or
cmp
jns
ljmp
test
or
cmpsl
flds
cltd
and
pop
mov
mov
imul
daa
outsl
adc
pop
scas
or
mov
dec
es
push
stos
push
push
pop
add
mov
in
or
mov
mov
push
sarl
dec
cltd
les
pop
pop
sbb
inc
dec
sahf
push
stos
lods
dec
jno
sub
mov
dec
dec
stos
and
movsl
mov
test
notb
fstl
rcrb
mov
xchg
icebp
jmp
adc
lds
leave
lods
std
mov
mov
add
out
fildll
int3
push
cld
mov
sub
inc
jae
cld
shrl
mov
jp
repz
dec
push
xchg
jo
push
mov
pop
cltd
add
pusha
push
fadds
cwtl
mov
repnz
adc
mov
sti
or
pop
aad
inc
jnp
hlt
mov
xchg
adc
lods
inc
pop
push
add
imul
js
inc
dec
pop
sar
jmp
xchg
xchg
and
xchg
dec
or
inc
add
push
inc
and
repnz
cmpsb
mov
mov
out
xchg
jge
cmp
fs
loopne
xchg
fsts
jbe
mov
sub
leave
mov
daa
jg
mov
xchg
sbb
mov
push
iret
scas
adc
dec
dec
mov
shl
adc
jbe
andl
mov
lock
inc
cwtl
ficomps
div
push
gs
push
pop
sub
mov
mov
xorl
ljmp
adc
lret
rcr
dec
jae
pop
and
mov
dec
aas
jg
es
in
fstps
and
sbb
and
and
jb
in
jb
in
sbb
or
clc
sbb
imul
or
or
pop
test
ret
icebp
xor
xchg
dec
mov
jae
inc
jo
ljmp
inc
ljmp
andb
adc
psubusb
test
test
dec
aaa
mov
cmp
adc
aam
add
loopne
andl
push
fs
jg
int3
mov
aam
cltd
fsub
dec
adc
cmp
pop
pop
dec
out
clc
push
inc
aam
mov
add
test
cmp
mov
ja
rcrb
push
push
cmpsl
push
mov
mov
inc
cmpsl
push
dec
es
dec
rcrb
and
push
inc
jne
fildl
pushf
sbb
xlat
inc
pop
fldcw
lcall
scas
loopne
push
loope
pop
fs
ficompl
xchg
cmpl
sti
int3
cld
shrb
or
lret
cmpsb
cld
stos
and
pop
inc
inc
sbbl
xchg
fdivrp
push
mov
xorl
fcomip
fs
sub
pusha
cmc
lcall
ret
out
lds
push
xchg
xor
pop
adc
add
in
pop
jle
sbb
mov
sbb
sub
aad
or
add
ja
xchg
shl
and
ja
sbb
add
addb
andl
repnz
inc
push
sub
ljmp
jl
sahf
ss
lahf
fwait
mov
adc
ret
sub
cmpsl
cmpsl
xor
cs
ljmp
xchg
pop
dec
jbe
les
jbe
pop
sahf
xchg
push
repz
test
outsl
fst
mov
test
push
mov
mov
mov
int3
je
test
into
sbb
jg
add
das
xor
inc
clc
test
outsl
or
lods
repnz
stos
subl
push
push
in
cmp
push
aad
dec
sbb
inc
mov
push
sub
cmp
hlt
inc
adc
es
rorl
ret
es
stos
jmp
jbe
jge
add
dec
in
int3
or
jo
stos
mov
stos
mov
jo
jge
pop
fisttpll
fadd
pusha
movsb
stos
pop
jb
into
dec
aaa
inc
mov
or
ficoms
adc
test
mov
cmc
push
inc
and
les
mov
add
xchg
mov
dec
out
sbb
arpl
pop
dec
inc
hlt
dec
fnstcw
ss
or
lock
int
or
xor
mov
inc
mov
test
lds
shll
adc
inc
negl
aas
aad
adc
idivl
pusha
sbb
mov
xor
repnz
xchg
shlb
sbb
push
testl
mov
ja
sti
mov
add
lret
sub
stos
push
push
mov
popf
icebp
cmp
movsl
and
push
inc
lods
inc
lods
mov
push
pusha
sbb
sub
cwtl
sub
pop
cmp
sbb
ljmp
xlat
add
lea
mov
mov
inc
add
add
dec
out
das
adc
xor
inc
or
shlb
inc
xchg
pop
jae
pop
div
or
push
pop
mov
cli
rcr
imul
jg
iret
xor
push
jl
xchg
repnz
mov
aad
fisubl
orb
add
aam
int3
mov
or
insl
inc
push
mov
xchg
pop
mov
mov
dec
das
insb
xchg
icebp
scas
bound
mov
pop
cltd
sbb
rolb
or
loopne
push
mov
inc
xchg
cltd
aas
mov
or
fdivrs
or
aam
adc
pop
xor
push
das
jge
mov
add
mov
xchg
clc
mov
push
adc
mov
test
mov
xchg
out
dec
fs
nop
shll
dec
or
sub
ret
lret
adc
inc
fsubs
int3
jbe
fmull
lods
icebp
lock
pop
push
fs
lock
mov
push
jecxz
sbb
loopne
jg
aad
lcall
push
scas
cltd
iret
add
addl
hlt
es
fstpt
adc
pop
xor
inc
or
or
or
mov
push
out
add
int
out
pop
sbb
xchg
decb
aas
fcompl
adc
shr
cmc
adc
push
movsb
gs
test
dec
ljmp
andb
ret
sbb
fs
cmc
insl
cs
pop
push
stc
xlat
test
or
sbb
cmp
lahf
in
xor
cmp
mov
jb
lahf
adc
mov
jecxz
and
mov
push
jg
xchg
addl
pop
sub
repnz
add
outsl
mov
mov
or
xchg
jae
jne
push
fdivrs
add
in
add
sbb
push
ds
mov
dec
xchg
cs
cmp
inc
push
mov
add
incb
jbe
adc
into
lcall
mov
jno
jns
out
int
mov
imul
mov
pop
insl
mov
sbb
aad
jb
mov
mov
testb
jnp
ret
add
mov
aad
mov
fistl
lret
bound
je
hlt
shl
sarb
push
in
mov
adc
cmp
sbb
sbb
fwait
repnz
pop
scas
xchg
ljmp
sub
add
and
fstpl
mov
js
cld
mov
lret
adc
or
popf
mov
ljmp
xchg
mov
or
divps
mov
lods
movsl
into
add
jecxz
xchg
inc
or
mov
xchg
rorb
adc
adc
shll
cmp
pop
mov
jae
mov
mov
mov
push
or
or
popf
jns
mov
or
aam
xchg
adc
dec
xor
fsubl
jbe
mov
pop
mov
sbb
ljmp
sub
cld
mov
int3
icebp
mov
lahf
xchg
mov
jecxz
mov
xchg
les
divl
xchg
mov
mov
xor
fcmove
pop
pop
jns
jge
jne
je
lds
and
gs
lods
mov
repz
hlt
xchg
rcl
push
sti
sbb
or
imul
stos
jns
jg
cmp
adc
test
push
jnp
mov
std
push
mov
ror
lods
call
add
xor
adc
dec
adc
adc
mov
js
sub
cmpsb
gs
rol
xchg
cwtl
and
lods
add
jmp
or
push
mov
sub
xor
jo
pusha
mov
xchg
add
aad
jecxz
inc
add
mov
add
lods
cmpsw
mov
stos
add
imull
dec
or
nop
sbb
xchg
test
push
jae
and
push
jnp
mov
sub
loop
lods
js
je
lea
stc
push
sbb
not
shll
or
inc
movsl
adc
das
cli
out
stc
or
xchg
leave
xchg
sti
xchg
rcrl
cmp
fcoml
out
cmpsl
xchg
testb
and
popa
push
inc
jnp
je
add
and
pop
pop
jno
scas
out
sub
add
shrb
cmp
in
aaa
add
pusha
xor
mov
sub
rorl
shl
ds
dec
and
jecxz
shrl
pop
repnz
sub
xchg
lcall
push
inc
hlt
int3
dec
and
dec
sbb
imul
cmp
jne
shrl
inc
jbe
fcom
mov
adc
jmp
inc
inc
ficompl
pop
adc
dec
je
loopne
ret
cltd
jbe
lahf
movsl
rolb
pop
xchg
mov
repz
mov
push
out
lret
jns
xor
and
imul
lea
cmpsl
fsubrs
dec
mov
aaa
orl
push
mov
cmp
lcall
jb
sub
je
arpl
mov
sbb
mov
insb
lcall
test
add
jge
rcrl
mov
and
addr16
daa
mov
pusha
into
xchg
xchg
xorl
xchg
les
mov
jno
mov
pop
jo
cmc
test
pop
out
mov
stc
add
xor
out
sbb
test
push
je
sub
std
lds
pop
les
mov
decb
lcall
popf
ljmp
sti
push
into
or
dec
mov
xchg
cmpsl
shll
popa
jp
ret
cmp
or
ljmp
adc
div
out
mov
orb
xchg
add
sbb
sahf
cmpsb
push
and
sti
in
nop
test
inc
cvtps2pd
add
dec
movsb
call
loop
in
mov
xorl
hlt
sbb
insl
or
js
das
mov
xor
adc
mov
xor
loopne
fwait
decl
fs
iret
ret
ss
stos
mov
cmp
inc
and
imul
sub
cmp
mov
push
ror
test
fwait
jecxz
icebp
scas
incb
and
iret
adc
push
in
mov
jmp
adc
lods
sub
jno
adcl
mov
ret
push
fmull
shll
adc
jbe
lret
fs
movsb
dec
inc
shll
pop
je
pop
jnp
mov
sbb
mov
shrd
sub
xlat
ljmp
dec
into
fs
push
test
shlb
test
or
and
add
rcl
outsb
xchg
xor
xchg
jnp
bound
jb
adc
enter
mov
sarb
dec
ss
jnp
jecxz
lret
jnp
rep
in
cli
add
mov
lret
repnz
outsl
in
in
mov
mov
jb
mov
sub
mov
fadd
xor
cmpsl
mov
iret
ret
in
les
loop
inc
cmpsb
ss
xor
add
mov
mov
out
mov
cmc
rorb
adc
xor
es
rorb
push
mov
mov
or
fildl
leave
mov
sub
adc
mov
mov
test
test
push
mov
add
fwait
inc
hlt
pop
daa
dec
cmc
sbb
idivb
std
push
add
xchg
or
add
or
je
dec
xor
or
shl
add
aas
jno
mov
shlb
leave
ljmp
aam
or
sbb
lock
lock
inc
mov
pop
and
fstpt
push
xchg
jbe
and
ret
or
fcomps
fistpll
cmc
movsb
enter
push
inc
mov
call
inc
mov
mov
sti
imul
pop
addl
xor
push
jmp
xor
test
movlps
neg
push
or
mov
xlat
cmp
testb
call
pop
sub
mov
pushf
lods
pop
aam
scas
pop
stos
and
xor
je
mov
jns
cmp
pushf
cmp
xchg
icebp
sub
mov
or
jne
je
xchg
mov
hlt
mov
xchg
cmc
fldt
jge
aad
cmp
rcll
lods
rcr
mov
gs
pop
and
scas
push
add
cmp
inc
jp
lods
sub
adc
rol
add
pop
xchg
mov
pop
ja
dec
push
div
sbb
mov
mov
dec
sarl
sub
insl
cmp
ret
inc
ret
xor
mov
jae
mov
fcmovu
jecxz
mov
ja
jb
add
out
push
popf
icebp
popa
dec
les
xor
or
sub
arpl
lea
stos
push
mov
das
shll
cld
lods
test
or
aaa
rclb
jo
adc
cmpsb
dec
cmp
popf
mov
out
add
push
xchg
pop
test
packssdw
jp
push
jno
push
add
lods
addr16
cmpsl
mov
pop
cs
aaa
adc
jo
ret
shrb
push
or
call
or
xor
cmp
outsb
adc
pop
xor
mov
pop
in
sub
cmp
and
cwtl
lods
test
ret
test
mov
lds
and
outsl
sub
aam
mov
cmpsl
sbb
xchg
imul
or
pop
lock
jecxz
mov
mov
jae
add
fcomip
push
mov
jbe
add
pop
rcrb
shl
inc
xchg
mov
rorb
stos
push
and
xchg
dec
bound
add
pop
pop
es
push
push
loop
neg
mov
cmp
lods
or
sub
cmp
adc
pop
loope
pop
ficoml
out
loope
push
mov
daa
icebp
or
mov
mov
cld
sub
hlt
cmpsb
leave
cmp
jmp
jo
jp
pop
popf
icebp
cmp
cmc
xchg
test
clc
dec
test
xchg
popf
test
mov
jno
mov
sti
pushf
push
jle
scas
ret
out
lods
cmp
test
ja
mov
scas
add
cli
push
cmp
pop
inc
movsb
mov
sbbl
or
lahf
xchg
mov
dec
aam
dec
dec
adc
mov
push
fldcw
inc
ljmp
lods
push
xchg
push
not
jecxz
stc
jle
dec
mov
leave
idivb
mov
fisttpl
pop
popa
jecxz
push
movsb
sub
pop
leave
scas
stc
sbbb
jp
mov
xor
inc
adcb
mov
sarl
divl
repz
rcrb
insl
and
cltd
mov
jbe
adc
shlb
sub
scas
add
jl
or
repnz
mov
testl
pop
scas
inc
cld
jecxz
cltd
stc
dec
push
pop
in
push
inc
cmp
clc
sub
stc
sbb
adc
lcall
cmp
cmp
push
pop
repz
mov
sbb
inc
nop
shll
jnp
arpl
inc
lods
rorb
mov
dec
imul
jo
dec
das
mov
push
sti
jg
mov
arpl
imul
pop
sbb
bound
xorb
daa
push
cli
stos
jecxz
mov
movsb
jmp
sub
jno
lds
mov
cmpsl
lods
push
fdivrl
pop
sub
mov
outsl
inc
sbb
aam
ljmp
je
push
scas
shll
in
icebp
orb
and
out
mov
jmp
js
inc
mov
in
gs
inc
arpl
call
cmp
in
add
adc
ret
cwtl
pop
js
ds
or
mov
mov
add
mov
mov
mov
rcll
test
cmpb
xchg
lret
cmpsb
shrb
jmp
testl
addb
adc
arpl
xchg
and
and
cmp
pop
fs
dec
leave
jmp
out
pushl
idivl
cmp
lahf
mov
movsb
movsb
xchg
jg
aad
mov
pop
xchg
pop
out
adc
sti
push
jl
ret
push
or
cmp
xor
or
adc
lret
xchg
es
adc
jg
fadd
pop
cmp
outsl
insb
mov
aas
les
pop
push
pop
inc
rolb
jno
stos
lret
fstpt
inc
adc
iret
and
aas
out
pop
jp
lret
jle
sbbb
jnp
push
push
insl
hlt
loope
mov
jne
fiaddl
xchg
mov
js
xchg
imul
fwait
dec
out
pop
in
sahf
mov
insb
cmp
jecxz
adc
insl
xchg
test
data16
sarb
imul
add
or
jns
sbb
cmp
push
jbe
sub
mov
push
inc
movsl
ds
test
add
mov
fcmovnu
mov
push
insl
in
sbb
les
push
jns
pop
fistps
add
pushf
jbe
dec
mov
in
mov
nop
mov
orb
popf
std
dec
call
imul
movaps
clc
xor
testb
fdivrs
out
inc
sbb
repz
mov
jl
adc
add
mov
mov
xlat
sbb
fbstp
and
cmp
push
xor
pop
cmpsl
adc
dec
mov
and
adc
mov
add
pop
or
filds
mov
cwtl
sub
lods
mov
in
jp
sbb
mov
pop
jae
pop
popf
aam
mov
mov
stos
repz
into
xor
xlat
sbb
mov
lods
mov
sub
call
xchg
inc
jecxz
shlb
jbe
mov
call
call
mov
jns
mov
xor
jno
xor
mov
and
sbb
inc
out
scas
mov
cs
dec
mov
clc
pop
or
jnp
out
xor
and
iret
add
lock
enter
inc
mov
jge
test
gs
std
add
data16
leave
fwait
data16
insb
add
shlb
cli
std
les
dec
mov
imul
sbb
xor
je
adc
pop
jns
jge
jle
and
fisubs
mov
push
push
lods
sbb
out
mov
mov
push
enter
cli
ss
test
or
or
push
int3
outsl
mov
xor
and
jl
cld
pop
les
sti
clc
stos
pusha
test
push
mov
inc
dec
in
cli
xlat
jg
aad
loope
inc
shrb
rclb
pop
arpl
or
rolb
test
inc
dec
sbb
aas
mov
out
and
scas
push
mov
jecxz
xchg
jo
xor
outsl
sarb
add
aad
ficompl
leave
sti
mov
or
dec
enter
pop
cmp
pushw
jbe
push
pop
pop
sar
stc
imul
sub
pusha
dec
push
mov
dec
aaa
leave
sti
xor
jg
dec
popa
xor
cmp
jae
leave
mov
mov
cmc
dec
inc
les
dec
cltd
lods
enter
in
movsl
and
sbb
sti
pop
aas
icebp
test
pop
lcall
xchg
jl
js
nop
jb
dec
or
add
cmp
test
push
push
jns
push
jge
jne
xor
lds
enter
push
mov
cmp
dec
xchg
sbb
lret
xor
inc
inc
out
vminss
sbb
or
mov
lods
pop
cltd
adc
lret
push
or
jo
cmovb
out
xchg
cwtl
call
imul
mov
incl
jle
sub
daa
insb
sbb
sub
add
cmp
xchg
lock
js
pop
lods
jmp
or
das
call
stos
lret
pop
int3
jno
cltd
cmpsb
enter
fnstcw
push
and
jbe
ret
mov
add
stc
mov
xor
add
push
jne
mov
mov
pop
dec
insb
add
add
mov
inc
flds
jp
pushf
enter
xor
dec
data16
or
std
mov
mov
dec
jnp
adc
xchg
and
or
adc
cmpsb
in
scas
cmp
cmp
mov
pop
push
movsb
cmp
xor
and
mov
mov
inc
mul
movl
cmp
pop
cmp
rorl
inc
js
orb
mov
ss
daa
nop
je
xorl
je
inc
ja
andb
iret
dec
mov
or
adc
fnstenv
adc
sub
addb
out
ja
xchg
push
xor
cmp
movsb
dec
inc
jp
push
mov
vpunpcklqdq
cmp
mov
cmp
outsb
fistps
in
pop
push
movsl
loop
mov
inc
das
sub
das
dec
stc
out
fcoms
scas
outsb
test
repz
xchg
and
sbb
mov
add
sub
pop
test
data16
mov
push
jno
xorb
cmpsl
xlat
xchg
mov
cltd
dec
mov
imul
fsubrs
jbe
jne
push
push
and
adc
adc
or
ds
jae
js
add
enter
mov
sub
cmp
sbb
and
ss
push
and
pop
adc
xlat
stos
cmpsl
es
rcll
cmp
clc
adc
cmp
test
jp
mov
mov
sbb
leave
test
jp
rcll
pushf
mov
out
lret
fnstsw
popa
das
adc
ljmp
fcomp
addr16
dec
xchg
push
pop
mov
and
ficoml
lret
mov
cmp
add
push
aaa
push
push
mov
pop
inc
clc
ss
inc
femms
lcall
xchg
dec
xchg
pushf
popf
adcl
jmp
pop
jp
mov
jmp
push
or
cmp
mov
in
mov
sub
invd
cld
icebp
aas
insl
adc
sbb
stos
xchg
xchg
mov
clc
inc
mov
adc
mov
push
sbb
push
sub
insb
add
jo
in
imul
loop
and
ljmp
sbb
adc
and
scas
cmpsb
sub
inc
inc
out
add
lock
std
jp
xchg
and
out
jg
ja
ret
fdivrl
aad
fwait
jmp
mov
test
int
test
fmull
mov
icebp
mov
repnz
jg
mov
pop
mov
push
test
call
cmc
push
push
lret
mov
xchg
xchg
pop
sbb
sbb
stos
dec
xor
sub
je
stos
decb
dec
cwtl
es
jne
sbb
insl
test
cmp
mov
cmp
lock
lea
lret
dec
sbb
jmp
out
rdmsr
scas
lock
push
out
lcall
loopne
inc
jp
cmp
lods
call
xor
cwtl
out
dec
je
pop
adc
fwait
sub
lret
dec
in
mov
je
sub
cltd
aas
dec
sti
ds
fldenv
pop
test
gs
cmpsb
dec
cmp
adc
mov
add
bound
mov
and
sub
add
movsb
imul
outsb
dec
in
hlt
and
cmc
xor
decb
mov
push
pop
aaa
xchg
adc
mov
lret
fwait
ror
add
pop
mov
jae
adc
sub
jle
call
push
cmp
imul
xlat
sahf
add
leave
mov
data16
out
ret
test
fldenvs
mov
or
mov
fsubrl
fildl
xchg
es
mov
jmp
mov
or
out
ja
dec
femms
jbe
pusha
dec
and
les
or
and
mov
jp
leave
xor
scas
inc
jo
shlb
in
xor
test
jmp
dec
shr
das
sbb
mov
pushf
xor
shl
mov
cld
shr
int
stos
jo
jge
sahf
push
adc
cld
jb
or
mov
loop
inc
adc
js
xchg
int
js
pop
dec
dec
add
scas
xchg
sbb
jns
in
insb
sbb
mov
pop
repnz
cmp
aaa
push
ffreep
sbb
cmpsl
outsb
pop
out
int3
mov
mov
dec
dec
sub
js
stc
pop
repz
pop
jo
outsl
test
jae
or
popf
xor
aam
aam
inc
ds
es
push
jnp
sub
cs
mov
leave
inc
push
jecxz
inc
dec
outsb
push
cmp
mov
jmp
mov
push
inc
sub
xchg
call
adc
mov
add
cld
xchg
leave
clc
xchg
daa
aaa
divl
out
sub
sub
movsl
push
lock
shlb
push
xor
out
lods
xchg
jns
ljmp
cli
push
pop
lret
mov
cwtl
sub
pop
adc
and
inc
mov
inc
test
arpl
cli
inc
xor
fwait
scas
in
mov
pop
mov
daa
mov
mov
ds
xchg
test
aam
cld
adc
mov
pop
andb
loopne
sub
jbe
shll
mov
push
mov
pushf
lock
rcl
stc
mov
rorl
shlb
xor
or
fisubl
out
or
xchg
adc
inc
pusha
xlat
jge
stc
insl
call
add
out
in
mov
int3
pop
sub
cmp
pusha
shll
xor
adc
cmp
jg
out
pop
out
push
int3
fnsave
shl
in
lret
and
sbb
movsb
adc
in
sub
std
sub
loopne
jae
movswl
ret
xor
mov
ljmp
ret
call
addr16
pop
fbstp
mov
inc
mov
mov
imul
pop
int3
adc
loop
stos
or
idivl
xchg
enter
hlt
cmpsb
ja
subl
adc
ds
imul
bnd
sahf
inc
pop
ret
lock
pop
in
pop
add
outsl
sub
add
xchg
cltd
push
shll
shll
insb
or
movsl
inc
lcall
dec
insb
inc
or
lods
push
mov
sbb
outsl
add
or
movsl
jae
xlat
push
mov
les
mov
jl
jecxz
push
je
inc
daa
insb
mov
imul
push
aam
cmp
sbb
mov
ror
inc
sbb
sub
lret
push
xlat
out
cmp
rcrl
mov
loop
pop
xor
pusha
sub
push
mov
loop
cld
jmp
mov
repnz
mov
xor
sbbl
in
cli
mov
mov
ljmp
inc
cli
cmp
ret
pop
mov
jmp
jecxz
fst
arpl
out
rcll
imul
xor
outsb
xor
ds
rclb
mov
lahf
das
outsb
aad
clc
in
mov
fisttpll
je
jmp
jecxz
push
push
stos
xor
inc
lcall
mov
mov
lea
pop
and
cmpsb
mov
test
in
in
and
and
out
fdivrp
mov
push
andb
loop
mov
mov
mov
ljmp
fsubrl
sbb
lock
stos
fdivs
ret
fs
popa
arpl
in
add
dec
sbb
outsb
mov
xor
aad
pop
push
in
lea
cmp
aam
mov
lods
jno
clc
pusha
loope
popf
dec
push
fs
in
dec
pavgw
rorl
cs
pop
cmp
sub
adc
mov
leave
arpl
adc
lods
call
add
out
adc
add
add
adc
fs
lret
push
jmp
add
in
push
repz
mov
dec
add
and
movmskps
movsl
mov
jae
jo
data16
lods
mov
mov
loope
pop
sbb
mov
dec
sbb
out
fwait
push
mov
or
sbb
sbb
add
jmp
mov
iret
sarb
cmc
inc
xor
and
mov
sub
adc
push
shl
jno
idivl
lods
pop
add
cmp
sbb
pushl
and
arpl
sbb
add
add
jns
push
jle
jno
xor
cmp
ljmp
rcrb
xchg
push
aaa
mov
ficoml
fwait
add
outsl
rcll
xor
subb
push
sbb
repnz
inc
sub
xchg
insl
ret
sti
pusha
add
adc
les
inc
es
push
nop
xor
add
xchg
cltd
stos
nop
inc
pop
push
mov
sarl
pop
cmp
fs
faddl
icebp
shll
ret
test
ret
jmp
push
cmp
inc
xor
ret
jecxz
and
fxch
fmull
mov
xor
xor
pop
cld
decl
xchg
sbb
mov
inc
arpl
clc
jno
sub
mov
ret
cmpsb
add
push
cs
clc
cmp
test
stc
sbb
push
sbb
pop
pop
mov
mov
pop
mov
in
xor
loopne
js
mov
lods
sbbl
sub
cli
and
jg
mov
push
cltd
push
xchg
aaa
mov
push
adc
mov
cmp
xchg
or
orb
orb
jbe
xchg
xlat
or
push
or
push
call
sub
mov
inc
out
lahf
dec
stc
insl
inc
sbb
dec
insl
gs
hlt
iret
mov
xchg
sub
push
xor
xchg
leave
mov
dec
inc
imul
xlat
imul
adc
cmp
xchg
orb
sub
std
fmull
ficoml
mov
jmp
sar
cmp
xchg
lret
add
sbb
mov
xchg
or
mov
push
aaa
cld
dec
fwait
out
sbb
cmp
addr16
mov
out
loope
push
pop
movsl
add
mov
adc
cmp
outsl
jl
cmp
mov
xor
rorl
adc
pop
test
imul
leave
iret
push
sub
adc
pop
ljmp
mov
icebp
addr16
iret
dec
jle
out
pop
jmp
cs
push
mov
nop
test
lea
int3
mov
cltd
outsl
nop
aam
repnz
ds
stos
adc
pop
scas
sub
mov
loop
and
aam
adc
orb
rcrb
add
jns
out
lds
shll
stos
gs
sub
je
lahf
mov
outsb
jl
push
add
aas
dec
or
ljmp
xchg
pushf
mov
xor
xor
mov
mov
pop
xor
sbb
mov
mov
aas
or
mov
push
into
or
testb
xchg
clc
test
lret
jmp
fwait
ret
fidivrs
ss
mov
cmp
mov
loopne
icebp
ficomps
enter
je
clc
mov
pop
stos
or
push
sub
dec
and
mov
enter
inc
pop
xorb
jg
mov
fdivl
mov
mov
fisubl
xchg
test
cmpsl
mov
push
or
push
sub
inc
mov
lock
jnp
mov
and
cltd
cld
sub
jno
cmp
pop
lahf
cmp
adc
dec
in
pop
mov
add
out
sarl
dec
js
je
ret
jl
push
mov
sar
daa
insb
das
dec
cmp
aad
dec
xor
shlb
mov
xor
pusha
dec
add
adcb
out
pushf
jns
cmpsl
fldcw
dec
and
mov
fistpl
pop
xor
cmp
cltd
dec
mov
cmc
rolb
mov
in
dec
adc
mov
movsb
sub
cs
imul
jbe
mov
pushf
mov
inc
ret
mov
cli
mov
inc
repnz
mov
clc
mov
sub
ror
outsl
sbb
xchg
arpl
ret
cmp
add
inc
imul
xchg
dec
jmp
sub
inc
rcrl
sub
push
mov
cmp
hlt
aam
mov
add
pop
daa
mov
test
push
pop
push
dec
push
div
or
aam
popf
lret
ficomps
pop
or
and
jb
movb
aas
ljmp
sar
jge
fcom
xchg
or
xchg
dec
sbb
dec
int
push
outsl
mov
movl
xlat
lock
cmp
lcall
loopne
lahf
xchg
or
cli
xchg
out
ret
mov
and
fmull
xchg
iret
cmp
cmp
inc
dec
adc
mov
inc
inc
int
and
xor
gs
fs
sbb
negb
fbld
pop
add
adc
ret
popf
mov
repnz
push
call
push
test
add
pop
cmc
push
or
mov
mov
fs
sub
xchg
adc
jg
scas
pop
test
sub
mov
xchg
mov
pop
lea
push
lahf
mov
push
or
lret
jbe
inc
xchg
lods
hlt
add
xchg
xor
push
sbb
call
aad
ret
sbb
jg
push
nop
inc
sbb
dec
inc
pop
inc
pop
adc
push
jbe
push
in
jmp
nop
cs
inc
nop
pop
enter
pop
jmp
and
test
lahf
fsts
xchg
inc
jp
in
aad
stos
fsubrl
xor
fldt
lret
icebp
pushf
rclb
insb
adc
sub
sub
jmp
out
pop
lret
std
loop
outsl
mov
mov
sbb
call
sbbb
jnp
out
test
sarb
std
test
lahf
lods
mov
add
mov
dec
cvtpi2ps
mov
sahf
jecxz
mov
imul
in
movsl
push
pop
sahf
xchg
in
sub
dec
sub
shll
lea
stos
test
mov
decl
and
sbb
mov
xchg
sub
and
movsb
cmp
movsb
fidivl
lods
or
hlt
fprem1
add
out
push
jns
bnd
pop
idiv
adc
inc
enter
ret
mov
cmc
mov
hlt
xchg
rcl
adc
jno
mov
fcoms
dec
cltd
add
or
int3
sub
das
dec
pushf
pop
sub
out
xchg
cmp
div
mov
ss
sbb
mov
lea
ret
sahf
js
xor
mov
sbb
xchg
arpl
fcompl
lea
or
mov
xor
and
push
mov
popf
movb
or
jmp
dec
xchg
adc
fsubrs
daa
adc
adc
sbb
ror
and
xchg
scas
push
sbb
jg
and
jbe
pop
add
aaa
jl
push
cmp
clc
sbb
jb
mov
push
daa
add
or
out
addr16
inc
push
sti
jp
cmp
clc
pop
xchg
cmpsb
lds
adc
pop
sub
sahf
cmpsb
nop
cwtl
lret
pop
aaa
cmp
xor
sub
adc
inc
int
rol
je
nop
inc
push
in
nop
nop
stos
add
xchg
inc
cs
outsl
jns
push
js
push
lahf
adcl
jno
pop
pop
sti
test
lea
lret
inc
cmpsl
jl
sub
cli
je
add
scas
repnz
fidivrs
mov
sbb
es
xchg
lahf
sbbb
cmc
jbe
fiaddl
fdiv
mov
icebp
or
loope
jle
xorl
inc
pop
xor
pushf
push
out
loopne
dec
xchg
lret
and
shrb
clc
adc
aaa
and
pop
cmp
fadds
addr16
out
adc
mov
stos
mov
mov
int
inc
shr
pop
mov
ljmp
jp
in
mov
push
sub
aas
adc
inc
hlt
stos
push
imul
lcall
add
in
cld
pop
inc
pop
and
jno
pop
rorb
sub
mov
lods
push
sahf
or
addr16
aas
push
lret
add
lods
test
daa
push
fisubrl
cmp
mov
shlb
dec
cmp
inc
in
imul
and
mov
sub
jg
jg
int3
push
adc
jns
jno
inc
and
add
add
fs
mov
inc
dec
insl
xchg
sub
sbbb
call
xchg
mov
jne
out
jbe
aas
negb
dec
inc
fsubrs
jg
movsb
pop
cmp
dec
enter
jl
movsl
aad
icebp
xchg
lea
aad
bound
loope
lods
bound
clc
repz
pop
in
cmp
mov
sbb
ja
cltd
jo
sub
sahf
and
sbb
fiadds
xchg
mov
sbb
aad
xorl
and
pop
int3
sbb
mov
scas
pusha
ljmp
xchg
mov
sahf
mov
movsl
xor
sub
dec
es
push
call
xlat
mov
out
sbb
nop
fbstp
insl
les
add
stos
sahf
addb
mov
jb
mov
dec
mov
fs
jo
add
nop
push
mov
xchg
adc
xlat
adc
fiaddl
sub
mov
es
jno
mov
jp
fldt
pop
dec
mov
or
push
cwtl
lret
mov
jl
repnz
fnstcw
fimull
arpl
jp
mov
cmp
jecxz
sti
pushf
add
enter
subb
mov
jo
movsl
sbb
cli
inc
cmp
rol
dec
adc
in
xor
iret
cmc
frstor
and
adc
ret
and
test
std
jno
cmpsb
mov
adc
inc
mov
xorl
rorl
lods
int
call
cmp
jl
xor
sub
mov
xor
pusha
fsubs
push
pushf
fimull
inc
xchg
fisubl
fstps
mov
lock
loope
jnp
pushf
pusha
in
subb
outsb
cmp
dec
arpl
jecxz
jno
js
jp
hlt
mov
pop
cltd
push
pop
push
nop
loope
outsb
iret
dec
pop
out
push
outsl
mov
in
xchg
jl
add
push
mov
push
fists
sahf
insb
fldenv
jle
rcrl
test
xchg
in
es
shll
or
jmp
jge
and
daa
sbbl
adc
jb
sub
test
ljmp
jnp
xchg
and
jno
cltd
popl
es
pop
sub
xor
in
bswap
mov
je
lahf
ror
lret
inc
sbb
mov
mov
loopne
out
push
imul
sbb
inc
sbb
in
jo
mov
ds
test
insb
insb
mov
movsl
std
add
jae
push
int
jo
shrl
fcmovnbe
rcl
ret
aad
aam
add
les
notl
icebp
jp
pop
lea
jo
push
adc
jne
jmp
fbld
ja
jmp
add
mov
jle
xchg
gs
mov
lret
mov
pushf
jno
jge
dec
je
xchg
sahf
inc
iret
pop
adc
cmp
popa
mov
mov
loop
sbb
popf
push
lret
mull
jo
aaa
mov
rcll
lods
jb
mov
out
mov
pop
pop
xchg
dec
push
cmp
inc
and
mov
dec
jbe
add
push
push
imul
shll
cmp
sbb
pop
ficompl
lea
jnp
lods
xchg
ljmp
and
iret
daa
push
inc
lods
dec
loop
jns
or
ret
and
mov
xchg
sub
daa
shrl
and
pop
pushf
sbb
lods
sub
insb
push
jo
daa
lods
aam
lock
pop
push
lods
sbb
insb
sub
mov
dec
cmp
pushf
sarl
push
aad
outsb
dec
ficoms
dec
mov
arpl
add
sbb
jns
adc
fisttpll
imul
mov
mov
arpl
into
pushf
or
aad
outsb
pop
mov
addr16
or
sbb
adc
push
and
mov
jae
adc
xchg
jp
das
inc
jno
sti
rol
sbb
xchg
sub
sub
or
push
pop
sbb
les
int3
adc
dec
or
scas
xor
push
adc
mov
out
outsw
or
push
or
movsb
jge
and
mov
imul
xor
sarb
std
pop
inc
push
or
aam
lods
gs
mov
add
adc
jbe
pop
pushf
dec
mov
aaa
int3
stos
lcall
xchg
sbb
or
daa
xchg
in
xor
mov
dec
inc
ficoml
hlt
int
stos
adcl
or
ror
es
insb
inc
in
sahf
pop
popl
out
out
inc
cltd
pushf
sub
mov
in
lcall
lds
sub
inc
inc
xchg
or
test
mov
adc
hlt
pop
push
aad
addr16
imul
das
test
aas
mov
xor
clc
data16
mov
sbb
sub
icebp
jb
mov
popa
or
push
xchg
out
xlat
les
enter
pop
add
and
cld
xchg
cmpsb
shr
scas
test
add
and
subl
enter
scas
sbb
mov
insl
repz
lock
scas
sub
sbb
sbb
push
push
ficompl
sbb
shrl
dec
ret
shlb
test
add
or
stos
push
inc
push
mov
cld
ja
mov
mov
mov
rcl
hlt
adc
ja
xor
dec
inc
repnz
adcl
int
xlat
fisubs
scas
shl
pop
mov
lret
add
leave
or
addl
jle
lods
lcall
pop
sub
sub
ficoms
cmp
outsb
jg
aam
xchg
push
and
dec
or
mov
add
xor
cmp
sbb
mov
mov
mov
mov
sub
and
jecxz
aad
inc
xchg
adc
dec
adc
mov
test
inc
mov
xor
dec
add
jp
lcall
fldl
pop
sub
scas
xchg
mov
xor
sbb
int3
das
xorl
sub
and
dec
add
cltd
pop
ret
mov
xchg
xor
dec
adc
or
pusha
mov
cli
push
mov
inc
pop
rcrl
lods
out
inc
repz
and
sbb
mov
cltd
inc
sbb
push
push
or
inc
mov
push
lods
sub
jmp
add
push
test
jne
jns
insb
arpl
rclb
shlb
jecxz
int
std
mov
xchg
lea
aad
pop
pop
ret
stos
sub
test
pushf
roll
adc
pop
test
xchg
imul
and
mov
jbe
or
sub
andb
cmpsl
out
cmc
sti
mov
subb
dec
cmp
bound
cld
pop
or
jmp
xchg
aas
fwait
xchg
sub
js
pop
and
or
adc
ljmp
jl
fwait
mov
cmc
sub
in
jb
outsl
jno
pop
daa
or
mov
mov
push
dec
adc
cmp
out
rcrb
dec
mov
ss
sti
addr16
ljmp
mov
or
mov
mov
sbb
fisubrl
test
add
cwtl
ror
adc
add
repnz
push
rorb
sahf
mov
shl
hlt
xchg
cmc
mov
cmpsb
sbb
std
loopne
adc
xchg
cmc
xor
mov
out
dec
shl
insl
inc
clc
push
clc
push
jb
insb
fs
cmp
jmp
adc
adc
dec
iret
add
xorb
adc
mov
gs
cmp
cmp
mov
shlb
push
push
ret
sbb
ret
sti
mov
mov
or
inc
test
mov
lea
push
mov
jl
adc
mov
sub
sub
aad
mov
xchg
xchg
lcall
inc
sahf
mov
pop
lret
int
sahf
mov
cli
mov
scas
pop
repz
jmp
imul
jg
add
scas
push
pushf
outsl
xchg
rcr
dec
add
addb
loopne
mov
and
jle
jp
sbbl
test
fcomip
dec
lret
adc
ljmp
adc
jno
loop
push
dec
gs
mul
lret
movsb
push
ljmp
push
mov
sub
dec
add
jae
xchg
and
mov
dec
test
jb
push
adc
mov
dec
jge
cmpsl
in
adc
add
imull
insl
pop
push
jp
in
insl
orl
in
popf
int3
icebp
jns
imul
pop
add
lret
add
or
mov
push
mov
push
test
cmp
cmpb
inc
cli
and
push
or
pop
cld
inc
jbe
subb
cltd
mov
ret
jle
mov
cmpsl
dec
add
jge
jae
or
push
cwtl
xchg
inc
pop
dec
inc
dec
jl
test
add
out
daa
call
mov
xchg
xor
out
insl
push
movsl
js
mov
int
lret
xchg
sbb
pop
xlat
mov
adc
lods
or
adc
mov
mov
aaa
cmp
mov
jae
cmpsl
mov
dec
enter
out
and
lret
xor
dec
movsb
push
enter
in
lahf
rcr
mov
loopne
xchg
mov
mov
cmpsb
pop
dec
mov
lea
push
push
imul
jnp
mov
push
loop
inc
sbb
or
repnz
xor
lds
or
mov
rcrl
bound
test
or
add
fucom
push
nop
test
aad
jno,pt
pop
pop
sub
lret
and
lock
loop
pop
clc
ficoml
in
inc
mov
xor
or
dec
aaa
jbe
pop
xor
in
push
jbe
or
nop
in
in
call
icebp
jae
push
mov
sub
inc
mov
shr
idivb
pushf
pushf
iret
fcmovne
dec
aad
repnz
incl
in
add
jb
push
fsts
ficoms
inc
dec
xorb
mov
mov
fsubrp
or
in
inc
jmp
fldt
mov
adc
mov
xor
pop
push
push
and
in
or
jnp
cmp
loopne
test
das
cld
push
insl
pop
push
dec
repnz
jmp
iret
and
inc
push
jl
test
iret
sti
decl
jns
ret
imul
push
xchg
cmp
in
popf
in
imul
div
mov
xlat
lods
decl
mov
pop
cmp
mov
push
inc
clc
push
outsb
mov
push
into
adc
mov
fidivl
fcompl
sti
sarl
sub
test
subb
cmp
lea
scas
xchg
xorb
mov
fs
fsts
sti
out
dec
shl
loopne
pop
fists
pop
mov
mov
adc
rorl
lcall
flds
and
mov
cmpsb
jecxz
sbb
jle
popa
xor
hlt
cmp
pop
and
ror
bound
adc
cs
push
mov
fs
dec
mov
fcmovb
pcmpeqb
test
int
lcall
lcall
mov
xor
mov
sub
pop
push
dec
jmp
std
xorb
adcl
jp
lahf
shlb
pop
adc
scas
jae
xchg
cmp
fisttpll
imul
fldl
pop
ret
sub
ds
in
aaa
add
mov
pop
mov
in
jl
cltd
fdiv
into
pminsw
pop
jp
arpl
das
push
push
dec
ljmp
jo
jae
popf
in
jae
cmp
cmpsl
xchg
or
sti
mov
mov
rorb
cmp
push
popf
sub
pop
push
in
xchg
jmp
nop
addr16
aas
sub
jno
xlat
mov
fwait
push
into
pop
xchg
ss
mov
ljmp
cmp
jmp
push
fwait
mov
xchg
loop
push
sub
popa
dec
mov
mov
jmp
test
sub
mov
push
mov
imul
les
push
pop
add
add
add
rol
jle,pn
es
lahf
xchg
shlb
je
js
pop
in
mov
mov
sub
adc
addr16
sub
push
push
lcall
outsl
pop
xchg
sub
lret
xor
scas
mov
fadd
fldl
movsb
sub
aaa
mov
je
push
cmp
or
mov
xorl
jb
cs
adc
jmp
or
pop
and
std
ljmp
sub
jle
mov
mov
lock
cmpsl
in
jle
cs
andb
mov
xchg
dec
xchg
lods
pop
notb
out
iret
sub
int3
xor
inc
xor
adc
aad
push
out
sub
jbe
cs
adcb
mov
inc
popa
pop
sub
jg
aad
lea
clc
mov
repnz
lds
or
pop
lea
fwait
mov
scas
cmpsl
stos
js
aaa
adc
psubsb
mov
or
lahf
loop
ljmp
and
cld
ret
popf
inc
cmp
insb
gs
lcall
loope
iret
imul
dec
pop
movsl
fidivl
dec
push
je
jne
mov
je
lahf
mov
push
jbe
mov
dec
pop
xor
xchg
sbb
popa
pop
dec
add
push
xchg
out
repz
cltd
in
inc
shrb
add
push
mov
stos
and
sub
push
jecxz
cwtl
lock
push
sbb
cmp
popa
mov
lds
addr16
push
jge
mov
and
cld
in
lret
mov
or
pop
xchg
push
outsb
pop
cs
cmp
xor
mov
movsl
lcall
push
fisttpll
mov
stos
cmp
adc
inc
repz
push
xchg
push
fsubs
mov
lahf
in
movsl
fnstenv
sub
sub
dec
xor
out
arpl
jp
addr16
pop
test
dec
add
xchg
xchg
jle
push
mov
idivl
inc
jne
outsl
mov
xorb
inc
outsl
cs
lods
cltd
orb
add
repnz
sbb
and
mov
cmp
sti
mov
mov
fimuls
into
loop
jecxz
stc
or
movsl
inc
ja
lahf
sub
daa
subb
pop
mov
stc
xlat
loope
lods
ficomps
and
pop
xchg
movsb
stos
ret
cwtl
jp,pt
jo
push
test
ss
lahf
xor
ja
mov
dec
mov
push
cmpsb
xchg
pop
push
inc
pop
cmc
jo
jge
adc
lods
test
mov
jp
and
adc
mov
out
inc
mov
jae
adc
aad
pop
in
fs
mov
sub
jno
mov
mov
push
nop
dec
jecxz
xlat
cld
lods
mov
push
fxch
shlb
int3
jae
xor
iret
xchg
in
sub
clc
mov
dec
add
roll
not
push
in
test
xor
or
fisttpl
loop
sbb
ret
add
xor
sub
push
sbb
sbb
test
test
pop
sbb
clc
rclb
xor
dec
stos
pop
xchg
pushf
rcrb
xor
cmp
dec
daa
xor
test
mov
adc
imul
sahf
inc
fcoms
lods
jae
adc
sub
cs
pop
xlat
mov
dec
add
out
fwait
daa
test
les
inc
inc
rolb
push
jae
mov
dec
dec
pop
sahf
or
xor
leave
inc
lret
std
popf
ja
ds
sarb
in
imul
add
lcall
mov
or
push
sbb
and
or
push
std
nop
xchg
jo
ss
cs
lock
adc
popa
mov
imulb
dec
sarl
dec
adc
addl
shrl
je
and
sarl
inc
int
dec
sti
imul
xor
jg
ret
das
xor
andl
mull
insb
xor
or
pusha
dec
jbe
rcll
lcall
inc
sahf
adc
stc
fcompl
jge
aam
popf
je
aad
cmp
lahf
int3
mov
popa
in
aad
ret
sbb
outsb
hlt
cmp
and
addr16
ret
and
aam
mov
xchg
dec
fidivs
sub
fisttps
mov
into
in
cs
add
add
dec
sbb
xchg
cltd
pusha
jge
push
insb
loope
xor
xchg
addl
in
adc
xchg
das
sarb
rcll
cmp
lcall
leave
lea
jne
test
mov
lock
add
mov
push
push
aas
adc
xlat
sbb
inc
mov
sub
fs
pop
sub
push
xchg
in
and
push
std
mov
push
or
adc
fidivl
fsubrs
adc
mov
pop
xor
data16
cmp
push
lahf
ljmp
or
and
hlt
mov
adc
push
push
sti
adc
pop
pop
loop
sbb
cmp
pop
fsubr
push
mov
xchg
sbb
mov
lds
cmpb
mov
mov
fwait
sbbw
jmp
mov
cli
fwait
ret
cmp
and
jle
mov
jp
ret
pop
lods
add
pop
mov
lods
test
je
into
ljmp
cmp
push
in
subl
clc
insl
add
or
pxor
xor
xor
fstps
adc
mov
stc
scas
xchg
sbb
cmpsb
fildll
pop
mov
lock
sbb
jae
and
int
and
xchg
mov
pop
jge
mov
popa
inc
mov
cmp
mov
scas
sub
shr
push
lock
popf
jmp
imul
icebp
add
adc
adc
out
mov
jns
sbbl
mov
fwait
loopne
insb
pushf
pop
out
mov
add
sarb
lock
xlat
pushf
or
mov
cmp
and
pop
pop
jge
popf
cli
clc
out
in
movsl
je
dec
rorb
mov
orb
dec
mov
int
les
or
jns
aad
ror
jb
adc
pusha
mov
pop
xlat
push
aad
dec
cmp
sti
mov
jnp
rorb
cmp
icebp
sub
jmp
repnz
sbb
fldenv
push
shr
loope
xor
sarb
shrb
in
imul
xchg
jl
push
shl
gs
lcall
out
and
push
xlat
jp
repz
mov
or
jl
fisttpll
outsl
test
push
out
aad
iret
cmp
xchg
mov
pop
mov
add
les
lods
lcall
jl
jp
mov
xor
jg
sbbl
jge
add
mov
sbb
clc
and
inc
jmp
out
xchg
mov
inc
and
sarl
mov
rolb
pop
loopne
inc
jnp
shlb
pop
push
adc
shr
popf
mov
mov
mov
lret
add
incl
lcall
incl
out
inc
daa
dec
addr16
add
ljmp
mov
test
mov
push
mov
mov
mov
out
sbb
fidivrs
mov
mov
and
cmp
pushw
and
insb
insl
in
sub
mov
mov
pusha
mov
shll
pop
mov
cld
or
inc
addl
in
mov
mov
cld
clc
jg
pop
addb
jne
out
pop
push
push
mov
jl
or
in
push
rorl
sar
repnz
in
mov
mov
ds
icebp
xchg
sub
int
inc
dec
ds
adc
xlat
in
adc
rcrl
lret
mov
push
in
inc
cmpsl
dec
mov
adc
scas
pusha
jo
in
cld
out
cmp
inc
push
mov
addr16
cmpsl
mov
push
sub
scas
push
inc
or
cs
int3
lods
insl
jmp
xchg
test
into
fbld
push
xchg
test
cwtl
mov
xlat
loop
int
std
lods
or
push
in
aam
divl
dec
push
repnz
in
lods
push
movsb
xchg
fildl
push
sbb
mov
push
jae
pop
jo
pop
or
arpl
int
out
lods
cld
and
push
loope
clc
jno
ret
or
xchg
fs
pop
pop
fsubp
push
ds
mov
mov
int3
pop
add
pop
or
nop
sbb
sbb
xchg
imul
std
ja
and
ja
jecxz
cmc
mov
sub
jno
add
into
fimuls
sbb
subl
outsl
cmpsb
mov
aas
sub
dec
loop
and
mov
cmpsb
cmpsl
mov
lock
xchg
aas
xorb
sub
int
jle
mov
sub
js
cmpl
cmpsl
ja
xchg
gs
push
jp
mov
xchg
xchg
ljmp
bound
scas
push
sub
mov
mov
xchg
ficomps
call
adc
jle
sub
bound
push
mov
cmc
rorl
sbb
decl
in
add
cmp
mov
rcrb
aas
popf
pop
add
std
ret
adc
mov
lds
pop
shrl
dec
icebp
mov
lret
cs
pop
lods
lret
shr
addr16
mov
dec
pusha
loope
rcrb
dec
fwait
pop
inc
fdivs
mov
inc
jb
xchg
push
mov
adc
mov
dec
add
mov
jno
repz
sub
int3
mov
cmpb
lcall
jo
in
adc
mov
scas
stc
xchg
inc
enter
pop
jp
mov
imul
popf
sub
push
adc
jnp
add
mov
imul
ds
stos
ss
pop
mov
fdivrs
mov
mov
mov
aam
xchg
jns
iret
add
mov
jbe
cmc
pushf
sbb
loope
mov
in
fsubrl
sahf
bound
sub
cs
push
out
aaa
mov
into
jp
insb
jnp
sub
or
mov
mov
flds
adc
std
icebp
push
inc
sbb
outsl
arpl
in
enter
cmc
outsb
add
pop
jge
cmp
pop
sub
cli
xor
jo
mov
jg
jecxz
sub
inc
popf
lea
dec
mov
insb
ret
lret
jo
xor
fmull
pop
rcrb
stos
jnp
ja
sub
lods
sub
outsl
and
repz
iret
mov
scas
push
out
sub
insb
and
jg
dec
or
arpl
push
insb
into
jb
insl
dec
ss
dec
xor
xlat
sbb
inc
fwait
jae
pop
add
das
mov
push
pop
stos
cmpsl
jbe
pop
pusha
and
pop
pop
or
data16
cli
pop
and
mov
mov
sub
lcall
jmp
insl
test
push
mov
push
je
stos
jae
ljmp
lock
pushf
mov
dec
lret
jnp
popa
shrb
pop
xor
xchg
add
xorb
stos
andl
out
movsl
jne
movsb
mov
jno
sub
data16
call
jge
lret
ja
lods
and
mov
repz
mov
shrb
mov
pushf
insl
aas
call
mov
or
sbb
subb
mov
xor
leave
es
lock
cmp
jne
jnp
mov
jb
popf
jns
xor
push
iret
inc
int3
je
mov
jp
lret
fs
sub
dec
push
push
jecxz
cmp
mov
sbb
imul
adc
mov
loop
pop
int
sub
mov
out
mov
shlb
daa
jb
inc
test
pushf
pop
insl
adc
sub
into
dec
jne
jl
adc
adc
jnp
pushf
mov
call
pop
pop
mov
fucomip
xlat
into
mov
dec
int
dec
sti
jl
mov
add
stos
dec
mov
adc
roll
or
jg
loop
into
lret
test
push
rclb
cmpl
pop
fs
mov
dec
outsb
mov
rcrb
insl
out
fldcw
xor
cmp
cmp
mov
add
jmp
movsl
stos
ds
jmp
aad
push
add
xchg
test
sti
outsb
push
std
sub
push
das
dec
jp
ret
inc
xchg
movsb
rorb
push
mov
push
pop
add
dec
fmuls
testl
mov
cwtl
jl
mov
adc
adc
in
outsb
push
xor
xor
xchg
test
mov
clc
insl
sbbl
cmp
mov
mov
sbb
ljmp
notb
lock
cmp
sbb
and
aad
dec
inc
sbb
roll
frstor
sub
test
mov
mov
mov
dec
pop
fs
mov
pop
scas
insl
mov
sbb
popf
push
aad
pop
push
ss
push
pop
and
cmp
cmp
loope
aas
scas
mov
mov
cmp
dec
xchg
jmp
push
pop
ret
jns
lcall
mov
xor
ljmp
and
idivl
ss
adc
push
xor
aad
cmc
pusha
adc
fadd
xlat
movl
pop
test
xor
js
or
scas
insb
outsl
lcall
xor
cmc
mov
dec
jae
pop
stos
add
xor
out
or
scas
ljmp
fstl
dec
cltd
adc
in
and
and
mov
cmp
lds
out
pop
aas
sti
xor
cmc
jbe
push
popa
push
push
sti
xchg
lret
aad
aad
pusha
popf
fmuls
pop
popf
aad
xchg
movsb
push
ds
daa
inc
nop
xchg
push
sarl
xchg
hlt
dec
fsubs
jecxz
pop
fwait
mov
jo
dec
jecxz
pop
lods
or
cs
ds
test
cmp
int3
aas
mov
mov
xchg
jmp
orb
mov
pop
adc
or
cmp
mov
cmc
int3
or
lret
sbb
xchg
stos
mov
or
aad
push
popa
stos
or
daa
lods
xor
adc
sbb
cmpsl
pop
fidivl
shlb
jne
push
xchg
mov
or
xchg
ss
dec
lcall
faddl
mov
loope
sbb
inc
or
shl
movb
idivb
movsl
sub
or
jp
lods
cli
fdivrs
or
scas
int
loope
popf
mov
pop
push
dec
xor
jbe
pop
fistpll
lea
add
inc
bound
push
loop
or
int
enter
nop
addl
icebp
mov
ret
jle
push
cli
jbe
scas
jo
cmp
or
leave
in
loopne
add
mov
push
daa
frstor
fcmovbe
test
cld
push
jge
in
ljmp
cmpsb
or
mov
mov
mov
repnz
dec
mov
pop
xor
lds
inc
dec
mov
stos
pop
cmp
xor
jo
xor
mov
shrl
pop
cmp
sarl
push
xlat
nop
outsb
fcmovb
mov
cmp
pusha
idivb
xchg
pop
or
pop
fmull
addr16
popa
jb
rclb
add
je
pop
jp
loopne
xchg
xchg
mov
scas
stos
xor
aas
mov
sbb
mov
lock
fistpl
dec
imul
sbb
dec
dec
jbe
and
xor
mov
mov
dec
add
xchg
bound
insb
push
cmp
push
jle
jmp
imull
dec
mov
divl
stos
push
dec
fdivs
sbb
mov
xchg
aad
scas
pop
xchg
or
push
ret
lret
inc
cmc
into
fdivs
stc
adc
xlat
adc
push
push
ret
jnp
bound
sahf
call
dec
mov
fistps
mov
idivb
sub
leave
mov
pop
xor
adc
lods
mov
jmp
xchg
mov
mov
sub
icebp
fwait
movsb
out
mov
push
test
test
push
mov
mov
mov
clc
scas
sbb
xchg
cmp
sub
fcompl
jne
xchg
xchg
fdiv
inc
leave
ret
mov
fists
sub
insl
sbb
lret
pop
or
int
fcoms
push
aad
pop
lods
out
daa
adc
lock
jcxz
pushf
jmp
and
inc
cmp
rcr
scas
mov
nop
sbb
mov
xchg
xor
inc
sahf
push
negb
cmp
outsb
lods
lock
std
mov
jb
cmc
push
stos
icebp
push
imul
dec
fs
aaa
push
ss
jnp,pt
sti
pop
cmovg
incb
inc
sbb
loope
out
cwtl
hlt
je
int3
fidivrs
jne
pop
shlb
popa
mov
xor
sub
inc
mov
add
stos
cltd
sbb
mov
inc
jmp
lret
fs
jns
mov
lea
inc
pusha
sbb
add
loop
push
ds
push
rcl
jbe
sbb
and
ret
add
jno
imul
cld
xor
dec
sbb
and
movsl
mov
jl
insb
mov
test
cli
and
ljmp
dec
mov
sti
insl
and
cltd
or
push
lea
dec
stc
stc
ret
jns
xor
sbb
or
or
arpl
fwait
pushf
cmp
lock
mov
jl,pt
mov
int3
scas
clc
cltd
xchg
clc
push
clc
or
scas
neg
mov
popa
inc
cwtl
test
mov
sbb
and
lods
jo
cltd
and
xchg
and
iret
push
enter
lea
jnp
or
push
mov
xor
test
and
lds
xchg
mov
les
lock
test
pop
add
mov
dec
sub
xchg
cmpsl
jl
stos
pop
or
cmpsb
stc
imul
fwait
cmc
lret
sbb
pop
aad
xchg
cmp
in
lock
mov
pop
sub
cmp
sub
ds
adc
add
aaa
and
data16
mov
test
imul
or
lock
lds
xorl
cwtl
jae
jge
shll
mov
fsub
push
lock
and
add
inc
not
repz
aad
iret
adc
shl
lcall
mov
scas
inc
adcb
mov
mov
mov
aam
xchg
add
push
fstpl
arpl
adc
push
mov
fisubrs
xchg
fnsetpm(287
into
or
int
idivb
xor
data16
sbb
in
nop
mov
push
stos
call
bound
shrb
jl
lret
mov
les
mov
jle
rcr
lea
add
push
mov
and
nop
fwait
cld
mov
jecxz
repnz
xchg
icebp
inc
push
jb
cmp
ja
inc
sahf
fwait
mov
mov
jno
cld
add
mov
je
pop
sbbb
mov
push
dec
movsb
fstpt
inc
sub
push
inc
xchg
mov
sbb
arpl
lret
jo
inc
aad
aam
xchg
mov
movsb
mov
mov
lock
push
in
mov
in
rolb
in
or
lret
pop
fcomps
dec
and
je
jmp
adc
xchg
xor
jg
jne
sub
popa
jo
lret
mov
pop
outsl
jbe
push
or
ja
fisubrl
add
lcall
mov
inc
add
push
sbb
or
insl
xor
sbb
test
cmpsb
jecxz
push
out
js
jne
jg
and
test
mov
mov
imul
push
mov
xchg
out
nop
ds
mov
addl
insl
mov
mov
insb
mov
pop
dec
shr
pop
in
push
scas
xchg
dec
std
movsl
scas
pop
add
xchg
cmp
mov
xchg
mov
mov
fstpl
add
push
dec
cwtl
xor
lds
push
std
lock
cmp
enter
or
rolb
pop
lods
mov
fcmovb
add
imul
fimull
jno
orl
xor
jo
stos
cmp
stc
fwait
and
shrl
fsubl
test
das
mov
or
mov
jae
into
xchg
out
loope
imul
jno
cltd
bound
imul
ss
mov
adc
loop
inc
pop
push
adc
mov
push
mov
dec
lods
jnp
dec
icebp
lahf
add
jae
lock
and
cmpsb
mov
mov
adc
mov
cmp
mov
fsubs
xor
ret
xchg
insb
data16
add
sbb
mov
sub
mov
arpl
add
shll
sub
rol
xchg
or
mov
mov
and
add
xor
mov
imul
mov
sbb
cmp
inc
cltd
push
test
inc
push
cld
push
fdivl
out
jl
sbb
add
sarl
sbb
fidivrl
dec
jl
outsb
cmpl
int
lock
nop
testl
inc
popa
popa
movsb
lahf
mov
into
adc
pop
xchg
xchg
je
mov
mov
mov
insl
sarl
sbb
mov
inc
out
jno
test
jbe
dec
jle
scas
adc
shl
mov
cs
and
sarl
jbe
outsl
push
stc
inc
bnd
lock
cmpsb
enter
adc
jno
ret
adc
psraw
fstps
jno
inc
mov
addl
das
int
xlat
ds
std
notb
xor
ds
add
lahf
inc
mov
mov
sbb
lcall
lock
xor
ja
pop
push
cmp
popf
leave
xor
xor
jl
push
clc
sub
test
outsl
push
jle
sub
pop
pop
jmp
aas
inc
pop
mov
cld
adc
jae
out
int
nop
rolb
xchg
icebp
pop
enter
cmp
fdivl
daa
pop
les
fidivs
ret
pop
loopne
bound
pop
push
out
jnp
cmpsb
shlb
out
push
scas
stc
out
or
jbe
add
and
cmpsl
pop
mov
mov
or
sbb
pop
jl
mov
addr16
jb
mov
mov
jle
out
and
lods
mov
xchg
enter
jmp
das
mov
arpl
out
lret
or
mov
ja
cmp
xchg
cmp
xchg
call
add
pop
out
fbstp
repz
repz
dec
es
lods
cmp
and
or
mov
mov
jge
aam
iret
aam
cli
mov
xor
push
mov
push
fwait
mov
insl
mov
mov
je
inc
ds
sub
pop
scas
and
xchg
fwait
xor
sub
adc
test
xor
rep
jle
dec
iret
cs
and
dec
clc
in
pop
jb
test
xor
cmpsb
cmpl
out
push
mov
pop
mov
mov
test
ret
out
pop
repnz
daa
fdivrs
lods
mov
enter
sub
pusha
jl
sbb
out
cmpsl
pop
mov
xor
lret
subl
enter
scas
test
in
test
inc
fadd
pop
imul
out
cmp
sub
test
xchg
pop
fisubrs
pop
ss
and
enter
stc
dec
js
out
ljmp
mov
inc
push
sub
jp
mov
cwtl
mov
cli
mov
sbb
adc
xor
fsubrl
pushf
lock
fcos
repz
sahf
mov
pushf
inc
fcompl
insl
mov
xor
movsl
xchg
lcall
mov
outsl
mov
insl
mov
repnz
int
mov
aad
mov
cmp
ja
addb
dec
stos
or
xor
test
xor
int
push
add
ret
imul
out
int3
lods
stos
fmull
dec
ss
ficompl
ficoml
outsb
jbe
cmp
cmp
or
pop
mov
cmp
push
mov
aaa
cwtl
pop
movsl
rorl
cmp
inc
movb
and
pop
stos
cmp
inc
dec
sub
js
jne
sbb
aaa
mov
cmp
scas
add
fiaddl
sub
inc
add
jge
and
mov
aam
and
push
xor
iret
outsl
xor
mov
lret
gs
lds
dec
jp
ja
inc
push
adc
data16
mov
push
jb
adc
popf
jg
inc
les
lcall
and
mov
in
ds
sbb
cld
and
xor
push
ret
cld
mov
pusha
and
pop
aad
leave
jae
cmpsl
scas
mov
andl
adc
xchg
adc
push
jb
jne
loopne
fldenv
cmc
mov
imul
mov
fsubrl
add
scas
das
push
jae
mov
pop
stos
mov
inc
sub
mov
add
mov
iret
repz
je
insb
outsl
sub
in
pop
dec
xchg
aad
xor
aam
imul
ljmp
mov
fs
nop
adc
mov
cmp
lods
mov
das
js
stc
pusha
sbb
jno
xchg
addr16
es
mov
imul
ljmp
inc
jle
adc
das
aad
cmp
out
sbb
and
sbb
fists
dec
popa
sbb
pop
lahf
int3
pop
xor
cmp
bound
sbb
dec
icebp
js
test
mov
js,pn
push
pushf
sti
clc
jg
adc
sbb
jle
imul
cli
test
pop
lods
sarl
arpl
mov
es
add
jno
leave
push
mov
out
cli
popa
sbb
inc
or
xchg
cmc
jns
testb
add
sub
push
sub
leave
push
outsb
jo
mov
jbe
lods
fnstsw
pop
mov
aad
ficoms
sbb
sub
cmpsb
xchg
mov
adc
sbb
std
call
push
sub
inc
jp,pt
pop
out
adc
repnz
push
sub
shl
dec
ds
push
push
push
push
cmp
mov
dec
mov
sub
adc
notl
push
jg
in
cltd
notb
out
das
mov
mov
mov
repz
les
mov
push
aas
jp
mov
lcall
aas
imul
repz
test
push
lock
adc
push
adc
adc
pop
andb
ss
and
and
cmpb
and
je
ret
lahf
mov
imulb
jne
arpl
lods
sti
or
jns
sub
cld
sbb
movb
xchg
xlat
mov
jecxz
cmpsb
pop
jle
hlt
mov
cmp
in
jge
mov
mov
sub
pushf
push
cmpsl
fmull
add
jg
out
stos
incl
imulb
scas
adc
loope
add
dec
ret
xchg
icebp
enter
push
xor
jecxz
int3
add
sbbb
mov
push
sub
pop
popa
popl
pop
mov
xor
sahf
das
ds
pop
xchg
aad
xor
push
mov
or
pop
sub
out
ja
or
mov
adc
or
push
xor
mov
sbb
sbb
fldt
data16
lds
movsl
jecxz
add
inc
fsubp
gs
fdivs
sub
mov
pop
les
mov
fcmovne
out
jecxz
xor
sti
mov
push
mov
adc
mov
nop
push
push
shlb
repnz
stc
mov
cs
mov
arpl
and
pop
scas
fldl
jmp
cbtw
pop
mov
and
push
pop
xor
shl
sbb
xchg
imul
adc
inc
jp
mov
fistpll
adc
fwait
sbb
inc
xchg
movsl
bound
lcall
xchg
xchg
jb
adc
jecxz
les
jne
loopne
inc
jg
sub
add
and
lcall
or
aaa
or
adcl
clc
or
sub
pop
mov
ret
adc
in
fidivrl
xor
shrb
fimull
pop
push
push
sti
in
xor
shlb
cmc
mov
aaa
test
mov
call
ret
dec
scas
cmp
insl
lods
mov
mov
mov
inc
leave
std
sbb
dec
pop
aam
cmc
mov
mov
mov
mov
imul
aad
js
jge
cld
or
jbe
movl
adc
xchg
fs
lahf
add
orb
jbe
mov
popa
pushf
js
popf
pop
xchg
and
das
loope
test
mov
aaa
imul
dec
jo
mov
mov
imul
jae
aam
std
fsubs
jnp
outsl
jmp
mov
pop
ja
call
pop
xchg
leave
xlat
std
or
sbb
popl
push
add
sub
jecxz
mov
lret
jno
adc
sbb
xor
insl
cmp
jne
push
mov
leave
stos
push
cmp
aad
call
repz
out
sub
pusha
sub
add
adc
mov
mov
pushf
mov
mov
ret
push
imul
sahf
cli
andb
push
cmpsl
xchg
pop
les
les
and
cmc
inc
and
sub
lcall
mov
lea
int
repnz
into
pop
push
cli
hlt
jae
push
stos
jb
cld
jo
mov
xchg
leave
fistl
push
dec
aas
loop
imulb
movsl
mov
inc
sbb
mov
out
fsubl
fstpl
cmp
mov
pop
adcl
jb
add
arpl
xor
into
cmpsb
xor
loop
or
in
mov
out
iret
lret
jbe
xchg
sbb
scas
add
outsb
xchg
push
dec
stc
push
and
adc
dec
add
js
sub
movsb
or
pop
iret
call
push
daa
popf
push
mov
and
add
scas
adc
cmp
outsb
or
out
insb
push
xor
fdivr
pop
lock
rorl
js
lret
cld
dec
sub
sub
ror
lods
faddl
mov
lret
bound
xor
fidivrl
arpl
rcll
xor
cmp
outsl
pop
mov
nop
imul
mov
movsl
cmp
push
cmp
sbb
jb
insb
imul
shr
xchg
ficomps
lea
jno
push
or
push
sub
push
mov
daa
cld
inc
xchg
loopne
adc
cmp
push
insb
mov
icebp
out
cmpsl
imul
imul
jo
aaa
stos
inc
aaa
mov
out
out
lcall
inc
ljmp
jbe
jae
and
mov
lret
fisttps
bound
je
or
ss
mov
lea
sbb
in
push
pop
pop
cmpb
test
xchg
test
out
dec
xor
mov
inc
xchg
mov
and
mov
outsl
into
test
adc
leave
daa
cwtl
inc
test
push
jbe
lods
fidivrs
mov
cli
iret
lock
inc
hlt
lret
pushf
adc
out
insl
jns
pop
scas
mov
cwtl
aam
mov
inc
cltd
xor
mov
negb
mov
or
mov
pop
stos
pusha
dec
xor
cwtl
and
mov
stc
add
mov
dec
lret
les
scas
mov
mov
sub
aad
shll
loopne
addr16
cmpsb
push
jl
rcrl
in
jge
add
xchg
dec
lock
add
out
outsb
outsb
inc
xor
push
xor
mov
xchg
fsubrl
sarb
push
outsl
enter
outsb
rolb
cmp
inc
xchg
repz
xor
push
popf
adc
outsb
pushf
imul
call
dec
sbb
cmp
or
dec
leave
and
shll
sub
add
cli
dec
mov
and
adc
jge
daa
filds
aam
inc
hlt
lock
and
mov
xchg
jg
int3
imul
mov
inc
push
cmpsb
stos
mov
xchg
scas
roll
out
ljmp
mov
js
xchg
mov
aaa
xchg
xorl
outsl
aas
sahf
jl
test
inc
orl
xor
adc
cs
mov
mov
nop
addr16
push
xchg
stos
xor
mov
ja
dec
ficomps
cmc
nop
js
fadds
sbb
pop
mov
stc
fsts
add
cmp
fsts
imul
sahf
mov
inc
aaa
adc
out
test
push
stos
arpl
mov
mov
pop
jp
cld
clc
pop
pop
ret
jg
inc
mov
les
ljmp
pop
adc
cli
ds
ret
sbb
jmp
mov
xlat
inc
dec
xor
and
sub
xorb
push
add
inc
push
aas
or
xchg
mov
adc
lds
jge
dec
add
inc
out
leave
loopne
mov
mov
mov
sahf
cs
inc
daa
mov
clc
jl
js
loop
outsb
cmc
mov
push
arpl
jb
pop
loope
jb
xor
mov
in
mov
sub
and
jge
in
lds
movl
mov
shl
sti
dec
fcoml
icebp
faddl
fucomip
test
idiv
or
cmp
and
out
popa
sbb
adc
push
in
sub
jnp
mov
push
sti
ret
jo
ss
push
and
cwtl
inc
pop
adc
xchg
out
into
cmp
repz
btr
imul
jbe
push
dec
rcll
int3
out
mov
pushf
lea
arpl
dec
daa
dec
inc
mov
mov
mov
xlat
xchg
inc
fs
xor
leave
sbb
loope
push
jge
stos
fs
pop
jno
pop
and
cmp
inc
out
fisubl
sub
lret
sub
in
stc
sub
dec
sub
ds
rcl
pop
iret
sub
xchg
leave
push
lahf
test
mov
push
es
rorl
xorb
ljmp
in
mov
mov
push
mov
call
data16
notl
adc
dec
cmp
or
or
mul
in
mov
mov
xchg
int
inc
inc
int3
out
xchg
mov
mov
mov
xchg
mov
clc
dec
movsl
mov
leave
addr16
lods
out
xchg
mov
ljmp
dec
adc
js
mov
loopne
adc
aaa
cmp
popf
stos
in
setp
jo
pop
nop
scas
dec
jg
repnz
shrl
rep
popa
fwait
cmc
or
push
add
es
sbb
sub
imull
lret
inc
pop
xlat
mov
js
std
stos
push
aas
rclb
or
testb
dec
daa
test
lret
dec
adc
xor
lods
mov
call
xor
cmp
cmp
scas
push
loop
stc
add
enter
xor
push
jno
aam
dec
negb
test
sub
xchg
dec
push
js
bound
lea
inc
adc
push
jno
mov
insb
mov
nopl
lock
insl
icebp
test
lods
or
jg
mov
test
adc
jo
int
imul
or
pop
into
fdivrp
outsb
pushf
and
sub
pop
mov
dec
in
sub
add
pop
push
test
push
pusha
in
js
xlat
gs
dec
scas
out
and
xor
xchg
sbb
call
dec
popf
adc
in
jp
mov
jge
xorl
cmp
enter
ret
adcl
cmove
aam
test
fbld
mov
inc
into
movsl
pop
shr
add
outsl
mov
ret
pop
aad
outsb
and
mov
cli
mov
mov
add
jno
cmc
js
imul
sti
lahf
or
jecxz
jbe
xchg
iret
add
movsl
sbb
repnz
xlat
sti
xlat
fnstenv
lea
jne
not
push
ret
stc
jmp
in
cwtl
ds
out
in
pop
in
mov
adc
adc
loop
lea
xchg
xchg
addr16
test
xor
hlt
rol
neg
stos
inc
in
inc
jns
mov
arpl
add
jne
xor
xlat
cmp
and
jbe
fimuls
test
jmp
fstpt
ljmp
pop
dec
jnp
mov
fs
mov
cmp
push
mov
pop
insl
jbe
inc
insb
mov
jl
lret
loopne
adc
add
sbb
sub
sbb
jecxz
push
ja
and
std
lahf
push
js
cmp
mov
lahf
jg
inc
push
jbe
scas
sub
inc
sbb
adc
shrl
stos
gs
or
xor
inc
out
roll
icebp
imul
das
into
pop
les
out
dec
and
mov
adc
cmp
or
into
inc
std
push
rcll
fsubr
jp
in
adc
jns
mov
dec
cmp
sub
cmpsb
clc
rcl
mov
sahf
add
cmp
in
xor
mov
mov
sbb
movsb
call
dec
pop
mov
int3
mov
cltd
pop
jne
cmpsb
pop
cltd
inc
aam
fdivl
out
mov
pop
push
out
mov
inc
scas
sub
fs
add
jbe
fstps
push
mov
aad
imul
rclb
mov
out
sub
iret
pop
or
nop
fists
leave
loop
lea
out
scas
jb
mov
jl
and
or
xchg
xchg
hlt
push
jl
jno
das
idivb
sbb
dec
add
rol
or
adc
cld
push
sub
test
xchg
mov
or
imul
push
adc
outsl
stos
sti
jg
cwtl
push
clc
push
sub
sub
cmp
cli
mov
sbb
call
out
mov
in
imull
push
jo
ret
pop
popf
aaa
cmc
sbb
cmp
mov
iret
mov
jmp
push
ja
into
add
fwait
jae
std
pusha
push
shlb
lret
fisttps
popf
mov
mov
inc
cmp
dec
dec
jbe
cmp
inc
and
in
dec
imul
xor
jnp
push
xchg
testl
sub
sub
sub
loopne
lcall
xor
sub
pop
mov
cs
cmpsb
push
add
and
out
rol
mov
sti
aaa
inc
sbb
movsb
xchg
packssdw
cmp
sbb
in
roll
push
mov
repz
aam
pop
jae
cmp
and
mov
jge
pushl
mov
push
or
dec
fcmovnbe
cmp
ret
popa
push
jle
fbstp
lds
movsl
add
or
sub
js
push
sbb
sbb
add
pop
fldt
jae
and
testl
pop
xchg
sub
jb
test
add
dec
inc
in
lods
or
inc
inc
std
fisttpl
repnz
ret
cmp
adc
lock
lret
sbb
inc
xor
roll
xchg
mov
push
cmp
cmp
cmp
inc
inc
jmp
jl
pop
cmp
sbb
dec
in
les
imul
push
jnp
shrb
and
insl
cmp
jae
and
loopne
inc
lods
pop
jmp
xchg
shrl
mov
out
xor
les
pop
pop
ror
pop
push
std
sbb
adc
insb
das
sbb
mov
or
pop
imul
mov
movsl
cltd
xor
jae
neg
cmpsb
jb
mov
sbb
jne
and
mov
dec
nop
adc
aad
inc
aad
pop
out
sbb
dec
fcoms
mov
stos
add
lahf
shll
pop
mov
push
cmpsb
mov
dec
lock
das
repnz
out
xor
add
pusha
jb
or
and
xchg
in
stos
ss
je
inc
xchg
lds
popa
sbb
pushf
out
lcall
inc
jbe
cmp
ss
adcl
or
jecxz
test
mov
or
das
jp
and
test
cli
and
inc
mov
jne
repz
jb
push
inc
inc
jmp
arpl
pop
insl
mov
xchg
cltd
outsb
adc
sub
cmc
mov
jae
scas
push
lret
es
in
push
cmp
fmull
dec
xor
adc
das
out
test
gs
jnp
out
cmc
fcoml
fnstcw
gs
mov
loopne
push
cs
iret
cmp
sub
stc
icebp
movsl
inc
into
test
dec
mov
push
sbb
mov
sahf
push
jo
add
mov
mov
mov
jg
pop
testb
sti
xchg
xchg
add
repnz
adc
jb
push
js
bound
jmp
pusha
emms
jmp
repnz
push
lock
subl
pop
shrl
or
pop
movsb
jno
xchg
jmp
ja
imul
mov
cmp
ret
fisubrs
jne
pop
xchg
mov
dec
imul
xor
idivb
sbb
xor
popa
xchg
icebp
jle
fnsave
adc
dec
scas
cld
out
cmc
in
ftst
sbb
insb
nop
pop
add
dec
jle
inc
mov
cli
fimuls
and
add
xchg
push
pop
dec
or
sbb
mov
inc
sub
mov
call
in
pop
adc
loopne
mov
pop
int
in
sub
ljmp
addr16
pop
leave
cld
pop
dec
fisubs
pop
push
ficoml
jp
jge
or
ss
sub
out
cmp
sbb
mov
andl
add
add
inc
dec
xor
xor
and
push
repz
sub
push
sub
jo
fs
jmp
push
adc
aaa
xchg
cld
pushf
cmpsl
cs
pop
clc
cmp
insb
loope
loop
xchg
sbb
inc
push
mov
mov
adc
fdivl
pop
push
adc
xor
lahf
mov
sbb
movsl
mov
push
cmp
mov
dec
cmpsl
fisttps
sti
lock
jg
cmpsl
mov
inc
fidivs
mov
or
in
cmp
jle
stos
stos
or
xor
test
stos
lret
scas
sub
jns
xchg
gs
inc
fidivs
dec
int3
mov
imul
ja
sti
cwtl
imul
or
xchg
pop
idivb
movsl
xchg
int3
push
mov
rolb
popf
xchg
add
rcrl
out
lret
pop
fsubs
push
jge
jns
inc
inc
shr
xchg
insb
cmp
xor
mov
xor
xor
aad
test
or
mov
and
movsb
outsl
or
xor
xchg
insl
mov
mov
mov
push
mov
ss
cmc
fs
mov
or
pop
bound
pop
or
cltd
popf
mov
and
sbb
and
stos
mov
add
lock
jg
xchg
push
push
int
xor
je
mov
or
ret
rcll
xchg
iret
mov
xchg
out
sarl
test
push
inc
mov
fucomip
je
xlat
scas
jle
dec
jp
in
push
nop
fdivr
inc
ljmp
inc
push
mov
jecxz
sbb
testl
xor
aaa
fisubrl
int
popf
repnz
int3
cltd
mov
test
negl
in
sbb
out
cmpsb
movsl
xacquire
ret
push
mov
icebp
lret
adc
push
jmp
mov
loope
out
jo
idiv
sub
mov
xor
xlat
mov
xchg
pop
or
sbb
push
fcmovbe
jb
adc
add
test
mov
and
push
cld
stos
add
adc
mov
mov
add
pushf
lcall
sbb
sub
jns
addl
outsl
ret
mov
dec
loopne
out
cmp
mov
cmc
nop
mov
repnz
pop
xorl
pop
add
mov
fisubs
inc
dec
jae
scas
and
sbb
xchg
dec
cwtl
fimull
lock
outsl
sarl
dec
mov
clc
clc
mov
in
pop
dec
sbb
enter
pop
fstpl
or
addr16
out
std
cltd
filds
test
sub
sti
xor
and
or
into
jecxz
cmp
push
push
add
cmp
mov
or
into
mov
fdivrs
push
push
out
test
inc
sub
stos
adc
fstpl
lahf
in
inc
mov
lahf
fldcw
insb
cmp
push
cwtl
repz
sbb
sbb
int3
adc
gs
adc
sub
outsl
sub
mov
cltd
mov
cmpsl
fsubrl
push
popa
and
les
xor
insl
adc
cmp
sbb
mov
popa
gs
fnstenv
in
or
pop
cltd
cmp
out
xor
cmp
cmpsl
push
xchg
sti
push
movsb
dec
jmp
adc
insl
dec
cmpsl
cmp
and
cmpsl
push
enter
mov
movb
and
pop
lret
mov
inc
sub
dec
push
or
inc
jp
xor
jmp
jae
loopne
fdivs
scas
xor
pop
dec
push
push
inc
sti
or
into
pushf
push
gs
dec
jg
jns
push
dec
push
and
lods
sub
sti
mov
jecxz
or
hlt
add
add
testl
pop
div
adc
xchg
rcrb
push
push
jl
xchg
sub
pop
jno
lahf
mov
cmp
stos
push
jae
mov
xchg
notb
sub
in
fnstsw
movb
push
jne
push
sar
stc
jl
lret
jns
loop
push
add
popf
test
idivl
pop
sub
sub
leave
daa
sub
mov
inc
xor
in
inc
out
adc
mov
push
xchg
clc
into
xor
cltd
xchg
push
loop
push
xchg
mov
popa
sti
jae
xchg
js
dec
ja
and
cmp
adc
dec
adc
pop
mov
sub
xor
mov
push
jae
out
add
or
mov
lcall
cmpsb
ja
mov
lea
orl
push
or
xchg
fisubl
fcmovne
fildll
sbb
movsb
mov
cli
push
fidivrl
jecxz
lods
mov
out
scas
in
cmpsl
cltd
and
fsubrs
repz
jg
jmp
fstp
inc
jl
outsl
aam
sbb
push
shll
mov
inc
mov
xlat
out
or
dec
arpl
lcall
mov
in
std
push
cs
xchg
or
ret
out
add
fmuls
mov
dec
and
mov
fimull
mov
adc
sub
mov
out
mov
jns
pop
mov
dec
inc
pop
xchg
shrl
dec
ficoml
mov
std
inc
leave
insb
push
cmp
lahf
sub
pop
and
xchg
mov
ficoml
dec
jecxz
xorb
jp
jp
lret
mov
mov
add
aam
lods
inc
add
stos
mov
in
lea
add
sbb
popa
es
xchg
aam
mov
lahf
push
pop
add
and
ljmp
xchg
cmpsl
test
in
mov
out
push
int3
jge
dec
dec
inc
call
pop
icebp
imul
lods
aam
movsb
test
jo
outsb
ja
lret
and
sub
sbb
sbb
mov
sbb
int
mov
scas
lcall
lods
les
cwtl
idiv
xor
push
rol
inc
cmpsb
mov
xorl
icebp
inc
icebp
mov
jae
sarb
sbb
jmp
sti
and
rclb
add
add
push
fldcw
je
inc
cmp
loop
sbb
xor
xlat
shrb
mov
std
fcomp
pop
and
push
cmpb
fistps
mov
ret
cmc
or
cmp
cmpsb
daa
dec
sahf
push
in
mov
or
xor
add
stos
inc
in
mov
xchg
shl
ret
jmp
cmp
mov
dec
clc
ljmp
adc
cmpsl
or
pop
xor
aas
push
popa
test
jmp
test
mov
scas
dec
ss
or
aam
cltd
mov
insl
mov
mov
daa
jne
pop
icebp
outsb
xchg
shll
in
lock
repnz
fmul
mov
cmp
mov
out
test
jbe
pop
cmpsb
mov
loopne
cmp
pop
ret
and
mov
push
mov
stos
mov
test
jg
sbb
mov
inc
subl
pop
pusha
aam
lock
ret
pop
mov
lds
pop
les
fsubrp
mov
pop
mov
ror
dec
jo
cmpsb
or
dec
imul
pop
mov
dec
cmpsl
dec
aas
std
rol
xchg
addb
mov
cmp
inc
mov
sub
fbld
test
aaa
mov
pop
inc
or
loop
sbb
cmp
push
daa
mov
ret
nop
xorb
inc
jl
add
xchg
enter
xor
mov
sahf
jmp
daa
push
push
sbb
rcl
pop
xchg
pop
xchg
and
inc
jg
pop
dec
mov
pop
push
lds
adc
adc
idiv
jle
nop
stos
cmp
sub
mov
cli
push
jnp
adc
or
sbb
scas
xchg
xlat
pop
sbb
mov
sbb
mov
lods
add
push
cmp
push
lock
popf
jae
xchg
pop
into
leave
mov
push
int3
push
je
jmp
push
test
call
lcall
sbb
cmp
mov
dec
dec
adc
fwait
xor
mov
jl
stc
push
setne
std
or
xor
jno
lock
mov
inc
xchg
adc
jae
in
idiv
jmp
lds
cwtl
sbbl
mov
data16
mov
jecxz
xchg
inc
fdivrs
push
mov
lcall
dec
and
rcll
inc
cmpb
cmp
xor
push
fidivs
sbbl
into
xlat
mov
sbb
or
mov
push
jecxz
push
push
xchg
jp
movsl
adc
ret
test
mov
imul
in
jl
dec
mov
notb
cs
xchg
sbb
or
imul
jge
fsubl
cmp
mov
inc
fdivs
dec
shlb
dec
inc
xlat
push
jge
outsb
outsb
les
or
pusha
inc
xor
pop
je
outsl
jno
std
push
jg
outsb
jmp
jg
lods
sub
inc
push
subb
hlt
jno
imul
negl
mov
adc
lret
fldcw
inc
push
dec
divl
or
popf
dec
adc
mov
outsl
adc
cmp
out
push
jno
in
inc
loop
mov
imul
cmpsl
and
ja
movsl
aas
xor
out
jnp
pop
fcoms
pushf
xchg
jo
mov
test
jno
jno
shll
adc
cwtl
mov
cwtl
pop
add
sub
test
sub
jle
jnp
pop
ds
sub
shl
inc
pmuludq
xchg
push
cld
cs
insb
fdiv
sti
pop
shll
cmpsb
mov
mov
mov
fldt
sarb
cli
inc
jp
or
ja
sub
mov
push
jecxz
xchg
mov
mov
or
lds
mov
mov
dec
popf
pop
aas
jne
sub
sub
test
xchg
or
scas
sub
push
dec
repnz
hlt
push
repnz
pop
shlb
pop
add
inc
aas
dec
inc
add
mov
xchg
inc
leave
rcl
push
xchg
stos
pop
xchg
mov
mov
ret
mov
hlt
lock
sbbb
adc
add
sbb
stc
xor
cwtl
sbb
xorl
mov
sahf
adc
inc
adc
or
mov
mov
push
imul
inc
sub
pusha
enter
pop
test
dec
and
mov
out
ja
push
shrb
jae
cmp
orps
and
mov
enter
xlat
xor
xchg
xlat
cmp
mov
mov
jle
fstl
cli
mov
ficompl
pop
mov
push
mov
divb
rcl
sbb
test
mov
mov
sarb
mov
sti
stos
andb
js
call
mov
inc
fs
add
les
hlt
push
adc
inc
fwait
test
push
adc
jae
xlat
jo
out
in
scas
mov
xor
fdivs
enter
and
lcall
fnsave
xchg
negl
dec
fbstp
inc
push
fs
shll
pop
adc
dec
xchg
test
sbb
lods
movsl
xor
imul
mov
inc
push
sahf
mov
cmpsb
outsl
lods
jmp
imulb
in
jo
shlb
mov
cmpsb
pop
aaa
rcl
lcall
scas
lret
mov
into
fidivl
cwtl
fbld
push
les
imul
push
jmp
int3
lods
ret
and
test
pop
jmp
xor
sbb
jl
xor
pop
in
loope
iret
lods
and
jl
xchg
test
push
cmpsb
pop
and
add
mov
repz
and
fstpl
rorl
fisubs
mov
add
mov
jo
mov
andb
icebp
fiaddl
sub
lret
mov
std
or
pop
cli
dec
xchg
lds
fisubrl
cmp
push
std
hlt
negl
cmp
jmp
sbb
jl
je
push
ds
add
shll
adcl
imulb
addb
test
add
sub
xchg
mov
insl
xchg
repz
jg
fisubl
mov
push
add
or
push
push
or
dec
and
xor
scas
insb
mov
in
pop
sbb
ror
dec
cltd
and
repnz
sub
push
sub
lahf
mov
push
sbb
inc
icebp
test
jg
push
push
std
aam
mov
aas
push
enter
aas
cmp
jne
cmp
jp
rorl
lret
sbb
pusha
lods
imul
mov
xchg
adcb
stc
mov
lret
aam
xchg
inc
ja
scas
fbld
or
jae
push
sub
rcrb
xor
popf
aad
mov
fidivs
hlt
subb
push
cmpsl
or
and
scas
sbb
fucomip
fsubs
outsl
pop
push
notl
rolb
adc
imul
xor
divb
jb
adc
aaa
add
in
lahf
push
mov
inc
int3
paddsb
call
and
mov
call
sti
dec
dec
adc
fs
cmpsb
clc
mov
mov
lcall
icebp
mov
mov
sbb
fldcw
push
adc
push
xchg
andl
imul
sbb
mov
mov
icebp
jbe
out
data16
xchg
repz
mov
pushf
add
fldenv
cwtl
xor
xchg
insb
flds
xchg
sti
outsl
push
or
add
xor
test
cmp
enter
xor
aas
pop
add
mov
push
pop
iret
inc
psubusb
pop
pop
ljmp
or
imull
std
add
ror
cwtl
mov
mov
stc
push
int
inc
and
popa
adcb
jbe
fdivl
leave
xchg
adc
ds
mov
mov
dec
push
jbe
andb
int
ja
mov
push
outsb
add
jecxz
imul
sub
jae
loope
pop
adc
dec
dec
jl
xor
mov
ret
addl
jmp
lods
jnp
mov
es
mov
js
movl
call
dec
leave
data16
popf
es
out
inc
pop
out
in
pop
cmp
cmp
sub
and
sbb
into
fcoms
xor
mov
dec
xchg
incb
ljmp
jnp
daa
popf
jae
andb
pop
jmp
and
nop
stos
lret
mov
inc
jmp
push
arpl
add
fdivrl
aam
mov
incb
jmp
dec
cli
lcall
rclb
jae
dec
ja
pop
push
push
sbb
inc
mov
jns
fdivr
pop
sub
mov
iret
sub
cli
pop
into
idivl
subb
movsb
dec
pop
mov
imul
out
or
rclb
dec
and
les
push
inc
xchg
xor
mov
pop
pop
sub
popa
adc
pop
push
jp
inc
add
dec
loopne
bound
mov
xor
jmp
mov
pop
lods
pop
movsb
dec
out
fisubl
mov
xchg
lods
es
jp
mulb
ljmp
shlb
push
add
leave
js
mov
fucomip
xchg
int3
lret
and
push
std
inc
jb
and
sahf
call
jae
fs
out
shr
hlt
je
cld
ret
cmc
sub
push
icebp
jne
push
stc
lods
test
inc
repz
push
adc
loopne
push
add
flds
or
mov
lods
loopne
push
dec
mov
xchg
push
nop
imul
outsl
mov
mull
inc
mov
add
or
fisubs
aas
pusha
or
xchg
mov
pop
daa
iret
inc
sti
insb
jmp
jg
stos
gs
jl
cmp
cmp
xor
cmpsl
imul
pop
inc
ret
jle
jae
and
loope
sbbb
psubsb
push
lds
movsb
mov
orl
incl
sub
jmp
xchg
or
testl
mov
in
bound
enter
stos
add
cmp
fsubs
cmpsl
mov
pop
sbb
jp
out
sbb
mov
pop
idivb
cmpl
adc
aas
dec
mov
add
int
in
fldt
inc
pop
add
repnz
dec
in
or
push
fadd
jp
stc
in
pop
jno
arpl
icebp
shl
or
mov
jno
fidivrl
cld
in
xchg
xor
daa
cld
sbb
aas
into
and
mov
movsb
inc
fs
into
add
push
daa
add
add
sub
testl
negb
scas
leave
out
cld
divl
movhps
lret
repnz
xor
sbb
sbb
roll
outsb
pop
xchg
out
or
lock
jnp
and
sbb
cmp
and
ljmp
pop
lods
push
inc
mov
dec
cld
cmp
test
push
les
mov
lods
sahf
test
fwait
fs
mov
jge
push
rorl
cli
dec
jp
xchg
mov
int
xchg
cmpsb
lock
xchg
cltd
ret
arpl
dec
shrb
roll
lcall
or
es
ljmp
sti
sbb
jno
gs
imul
cmp
dec
push
inc
popf
xchg
jno
mov
cli
and
rorl
xchg
and
mov
in
or
push
sbb
in
leave
repnz
fidivl
inc
mov
int3
ljmp
adc
repnz
pop
adc
dec
aaa
aam
test
pop
adc
cmpl
sbb
xor
jl
push
push
int3
inc
lret
push
test
repz
push
dec
outsl
push
push
inc
pusha
push
sarb
xchg
outsb
cmpsl
push
fadd
call
jl
bound
pop
adc
mov
movsb
std
inc
notb
pushf
popf
mov
mov
or
inc
dec
or
in
jbe
jl
outsl
gs
scas
inc
jnp
inc
inc
xor
pshufw
mov
or
in
aaa
dec
sub
out
jo
jno
leave
push
sbb
popa
pop
mov
cmp
fwait
sub
mov
fnstsw
mov
decl
fcompp
rolb
jge
push
jnp
scas
adc
pushf
nop
ror
rolb
jbe
decb
sub
ss
jno
and
daa
imul
dec
or
xchg
mov
repnz
inc
xchg
mov
popf
push
cli
sub
idiv
push
jnp
xor
mov
aam
pop
mov
add
repz
or
int3
bound
mov
cmpsl
cmp
pusha
int3
jo
sbb
ds
sub
std
mov
mov
cmpsl
ss
mov
pusha
dec
out
fstpl
loopne
cmp
cltd
cmp
sahf
xor
fstpt
loop
xor
cmc
addl
dec
push
sub
mov
add
pop
dec
es
aas
xor
je
pop
lret
das
add
repnz
insl
lret
xor
mov
jnp
in
and
dec
cs
incl
scas
jnp
mov
mov
mov
sub
push
jmp
and
lahf
and
mov
xor
iret
jns
inc
loop
cld
in
sbb
inc
sub
cmp
lret
push
jo
loopne
repz
gs
dec
inc
pop
mov
cmp
mov
enter
push
idiv
jmp
shll
out
adc
xchg
dec
or
mov
mov
or
stos
jno
xor
xchg
inc
loope
fimuls
push
inc
inc
dec
cmp
shrd
daa
and
test
fwait
push
xlat
fsubp
pop
call
out
ret
and
lock
idivl
or
mov
scas
mov
cltd
sbb
jo
sbb
ds
pop
xchg
inc
and
jp
orl
daa
adc
jae
and
roll
psraw
aas
ja
and
jmp
jno
jo
loopne
adc
sub
fisttpl
jnp
dec
andb
sub
bound
adc
and
and
out
inc
lds
pop
pop
or
and
cmp
cld
leave
lods
adc
imul
mov
rcl
imul
stos
les
cmc
push
sbb
loope
mov
fiadds
push
sbb
imul
and
jbe
icebp
push
and
mov
test
in
hlt
jb
jae
jge
sbb
inc
aaa
iret
ljmp
nop
sbb
mov
cmpsl
jle
pop
push
inc
xor
pop
and
sbb
xlat
cmp
insb
pusha
iret
mov
loope
mov
add
mov
mov
addr16
stos
lahf
and
subl
fisubl
jl
inc
fidivs
inc
icebp
mov
daa
add
inc
ror
dec
cmp
in
adc
adcb
jno
fsubrs
adc
sarl
loope
mov
sub
mov
loope
xchg
push
inc
xor
jae
imul
notl
cmp
ja
repnz
mov
shufps
or
imul
jae
scas
mov
fidivrl
inc
insl
jl
hlt
mov
clc
stos
jl
je
repz
add
push
inc
lods
stc
loope
sahf
mov
fldcw
rol
ret
es
in
out
dec
enter
sahf
repnz
sbb
ljmp
lock
pushf
push
push
dec
sahf
adc
and
sarl
dec
aam
inc
xchg
faddl
cmpsl
popa
fs
mov
add
testl
jecxz
jg
dec
dec
adc
movsb
lret
adc
scas
addr16
push
or
inc
cwtl
lret
andb
repz
lret
es
movb
mov
adc
mov
push
pop
xchg
and
mov
call
cltd
pop
mov
xor
ja
js
loope
mov
cli
or
dec
mov
mov
cs
or
cs
xchg
add
dec
add
std
shlb
pop
test
call
outsb
mov
inc
jg
movsl
iret
mov
daa
pop
leave
add
sub
inc
sub
or
dec
pusha
push
lcall
mov
enter
rol
mov
xor
sub
push
paddsb
sbb
push
loope
dec
stos
mov
push
clc
push
pop
cmc
lcall
icebp
std
mov
adcl
outsb
lret
outsl
mov
mov
outsl
je
cmp
aam
mov
fsts
xor
mov
insb
aam
add
call
arpl
jne
mov
int3
sahf
scas
dec
shll
mov
push
dec
mov
ret
and
pop
cltd
jle
gs
pushf
flds
jmp
mov
out
cmp
jbe
and
sahf
adc
and
lcall
pop
repnz
cli
cmpsb
ljmp
fwait
pushf
mov
cmp
popf
arpl
lret
mov
outsb
mov
les
arpl
xchg
xchg
xor
ret
adc
adc
in
icebp
leave
dec
inc
xorb
data16
push
cmp
out
cmp
xorb
fldenv
sbb
les
or
xchg
jmp
insb
mov
push
adc
xor
jle
push
fdivrl
cmp
sub
or
andl
add
add
insl
rclb
lods
loop
push
mov
cli
dec
push
mov
sahf
ja
dec
mov
xor
out
mov
and
cmpsl
jb
leave
mov
push
fnsave
testb
out
pop
xchg
push
xor
lret
push
clc
adc
movsb
movsb
xor
stos
imul
adc
push
mov
jb
mov
sbb
mov
jmp
movsl
inc
pop
rcrl
enter
mov
mov
xorb
mov
add
fdivs
push
inc
pop
nop
mov
js
jno
sub
into
inc
cmpsb
sub
jg
rcrl
or
dec
mov
repnz
mov
mov
aam
mov
lock
daa
mov
leave
mov
int3
in
add
imul
pop
xchg
mov
mov
ficoms
push
cli
shll
aam
mov
ficoms
rcll
mov
fsubr
jno
mov
daa
sub
fbstp
dec
data16
push
jnp
je
ja
test
fidivl
push
and
js
cmp
pushf
test
int3
xchg
iret
adc
xchg
lock
mov
and
pop
or
jo
scas
cmp
and
pop
repnz
mov
inc
fmulp
insl
sub
decb
and
je
push
mov
xchg
mov
ljmp
pop
cmp
push
jmp
cmpsb
ficoms
movsb
jp
mov
jnp
cmp
xor
aam
mov
jl
int
xchg
mov
inc
mov
repz
xchg
xchg
cmp
iret
out
mov
sahf
mov
test
sbb
lahf
add
jmp
enter
mov
pop
loop
add
js
mov
stc
xchg
sbb
test
add
jmp
mov
jge
mov
in
cltd
pop
adc
dec
mov
adc
push
movsl
and
hlt
push
lock
aad
fdivl
pop
shlb
push
in
inc
or
fidivl
adc
decl
add
js
mov
scas
push
shll
sbb
jae
outsl
les
shl
cmp
jge
and
sbbb
dec
lahf
cltd
mov
mov
pop
inc
or
hlt
mov
lea
or
shll
pop
aas
and
inc
jno
les
dec
adc
in
lret
test
jbe
xchg
aas
sar
gs
scas
xchg
mov
dec
dec
out
sbb
mov
out
push
out
pushf
hlt
mov
push
jg
mov
lret
and
fstpt
mov
repz
sbb
lds
mov
add
xor
and
xchg
movsl
sbb
push
dec
pop
add
icebp
push
inc
std
pop
xor
sub
es
adc
push
jg
js
or
jbe
ret
jb,pt
fucomip
cmp
mov
ljmp
and
xchg
xchg
add
std
add
pop
sub
and
and
pop
aad
inc
popf
lock
loopne
fldlg2
jl
mov
hlt
fldt
sub
es
out
dec
repz
xchg
cmpsl
icebp
and
and
and
xor
xchg
push
cwtl
push
test
xchg
clc
ja
sub
sahf
testl
rcl
push
cmc
inc
out
mov
ss
mov
nop
loope
jo
mov
in
js
enter
js
cmpsl
xchg
jbe
or
shl
insl
cwtl
xor
mov
cmpsb
out
cmp
scas
sbb
jne
jle
adc
push
xchg
sti
mov
repz
mov
jmp
mov
and
add
mov
insb
inc
je
fstpt
sti
imul
scas
mov
std
or
clc
dec
rcrb
xchg
cli
cmpsb
and
add
adc
lret
lock
ret
fwait
pop
sbbl
push
and
adc
pop
imulb
shrl
fmuls
int3
les
push
dec
ss
test
push
cltd
cmp
loopne
es
mov
popf
iret
mov
in
or
dec
hlt
push
out
push
iret
add
lret
lock
fwait
push
and
push
push
pop
loope
or
jno
dec
das
cmpsb
addl
jnp
in
add
pusha
inc
cmp
fsubs
test
cmp
aam
insb
mov
out
mov
das
jns
xorl
push
shll
adc
fdivl
xchg
fildll
and
adc
popa
jb
aad
into
xlat
push
rcll
and
bound
mov
fcomps
push
test
jb
push
cli
dec
and
sub
dec
mov
add
sbb
enter
cmp
inc
pop
fcmove
stos
and
mov
add
rdpmc
test
das
sub
pop
cltd
jle
popa
adc
pop
icebp
loop
pop
mov
xchg
lret
jl
fs
mov
mov
adc
mov
scas
imul
or
dec
xchg
popa
fdivrp
outsb
pop
test
testl
sbb
ss
pop
cmp
inc
jmp
push
push
jo
jae
lods
scas
jmp
or
and
pop
lahf
ret
dec
sbb
xchg
stc
inc
addb
cli
cld
andb
dec
and
movsb
loopne
mov
adc
loop
enter
and
bound
icebp
or
int3
and
xor
sbb
jg
stos
mov
test
popf
loop
and
pop
in
cmp
sbb
or
nop
mov
cmc
or
add
loop
outsl
out
fs
pop
outsl
shll
inc
push
ss
xor
fsubl
in
mov
lret
addl
xor
xchg
mov
mov
xchg
jg
outsl
sub
or
int
repnz
xor
sbb
sahf
mov
cmp
and
push
mov
jno
jns
sub
movsb
pop
hlt
mull
pop
or
or
hlt
nop
adc
testl
cmp
cmp
mov
sbb
push
scas
roll
imull
ficoml
pop
jecxz
or
push
or
in
movsb
jmp
in
inc
ljmp
push
test
inc
and
clc
and
fstpl
ds
push
jno
pop
and
jg
adc
mov
ret
lcall
adc
cltd
sub
xchg
dec
mov
pop
aaa
insb
fists
add
pusha
and
loopne
test
push
daa
subl
jae
stos
les
and
jnp
xor
roll
or
pop
or
jg
test
aas
mov
push
out
iret
xchg
or
lock
ja
jmp
mov
icebp
jae
push
and
xchg
out
cmp
xor
cmp
dec
stc
scas
inc
push
mov
add
inc
xchg
or
stos
cmp
or
movsl
jno
inc
dec
movsl
mov
sahf
push
pop
andb
popf
rcl
pop
and
mov
pop
lods
jmp
sti
dec
adc
mov
fimuls
leave
mov
iret
pop
std
or
cmp
mov
xchg
incb
cmp
sub
cmp
pcmpgtw
xchg
or
mov
leave
pop
loope
mov
jle
adc
lods
sbb
repz
test
loope
inc
xchg
mov
dec
mov
or
cwtl
add
cmp
les
loope
xor
adc
in
in
sub
sbb
mov
daa
adc
repnz
cmpsb
mov
xchg
push
out
pop
xchg
cmp
ret
mov
rcrb
cltd
loopne
push
inc
push
inc
dec
jp
dec
int
sub
cmp
imul
into
addr16
rol
xchg
insl
insb
adc
or
es
es
test
pop
outsl
out
xlat
xor
stos
inc
jnp
mov
dec
shl
sbb
or
je
ficoms
ds
jecxz
or
push
xchg
push
push
lods
jb
ljmp
outsb
inc
inc
rorb
aad
add
pop
out
pushf
iret
sub
fistps
out
cwtl
push
popa
negb
xor
nop
stc
pop
cmpl
dec
mov
repnz
sbb
mov
xlat
adc
pop
test
xor
add
inc
and
data16
xor
adc
adc
mov
bound
mov
and
cmp
inc
push
in
js
ret
jmp
cld
mov
repnz
aad
dec
mov
in
adcb
xchg
sahf
call
decl
inc
mov
int
xor
fwait
out
cmp
mov
out
pusha
xchg
aaa
xor
xchg
xor
mov
movsl
or
mov
int3
push
mul
pop
out
push
cmp
cmpsl
popf
or
pop
ret
cltd
outsb
lret
sub
add
mov
out
push
inc
cld
push
push
dec
fbstp
xchg
lods
dec
jo
mov
adc
iret
pop
sbb
inc
loopne
sbb
in
jbe
and
sbb
xor
sub
cmpsb
xor
add
xchg
xchg
aaa
loop
cmp
pop
cmp
jno
sub
in
dec
or
ja
push
dec
cmp
inc
dec
stc
incl
jo
sbbb
sar
and
inc
sbb
arpl
sbb
cmp
out
lds
xor
mov
cmp
jno
jnp
pop
data16
out
outsb
iret
in
push
or
fmull
pop
lret
sbb
jl
cmpsb
sub
rorl
addr16
push
sarl
imul
adc
jl
mov
cmc
dec
js
mov
orl
adc
shlb
jns
mov
in
scas
fst
filds
data16
loope
dec
xchg
mov
out
cltd
scas
insl
push
pop
mov
jns
in
pop
push
clc
hlt
daa
sub
sbb
mov
fmuls
ss
push
xchg
js
mov
pop
xchg
jo
std
lock
rol
jb
xchg
movsb
inc
sub
fwait
mov
movsl
dec
jbe
in
mov
pop
or
sbb
cmp
sti
add
pop
lea
xchg
inc
orb
pushf
xchg
add
push
cmp
adc
ds
adc
clc
jae
ret
mov
iret
aad
lret
addl
adc
dec
pop
and
inc
pop
iret
mov
mov
mov
mov
loop
mov
daa
xchg
mov
mov
xchg
mov
xlat
int3
sub
bnd
jnp
sbb
jnp
lds
cltd
adc
dec
sbb
mov
std
and
xchg
cmp
mov
loopne
push
inc
cmpsb
ret
jmp
arpl
shrb
inc
ficomps
sub
mov
jbe
fldenv
stc
lods
outsl
cmpsl
dec
cmpsb
adc
mov
lret
imul
imul
mov
add
cmpsl
mov
scas
jb
jae
vpcmov
mov
lahf
cli
inc
xor
and
mov
cmp
addb
mov
sub
jmp
adc
mov
mov
pop
fstl
add
pusha
xchg
dec
jmp
or
movsb
jo
xchg
cmc
and
scas
insb
bnd
cmpsl
mov
outsb
dec
fwait
cmc
pop
cmp
fldenv
cmpsb
mov
fcomp
cmp
imul
loope
jp
adc
lcall
jle
jg
insl
sub
mov
call
sti
lods
test
mov
push
imul
cmp
jb
mov
push
dec
test
jl
and
ljmp
scas
push
push
jne
and
imul
jns
popw
fldt
call
dec
stc
aad
gs
inc
mov
sub
popa
jne
jg
addl
mov
dec
in
push
cmp
sbb
popa
daa
xchg
xlat
add
mov
and
mov
xchg
cmpsb
int
fadds
rol
shrl
push
cmp
sbb
ret
jns
add
sub
icebp
sub
cld
mov
sub
iret
enter
jmp
cltd
in
repnz
pop
xor
lock
lcall
and
pop
and
xchg
mov
sbb
lcall
mov
and
jno
jne
xchg
arpl
mov
sarb
enter
hlt
and
mov
mov
mov
or
add
mov
fwait
push
push
mov
loope
int3
pop
lods
test
test
inc
push
jno
pop
push
jns
sbb
xchg
fdivr
cmpsl
add
pusha
cmp
fs
sub
sbb
add
aas
dec
pop
pop
in
pop
cli
and
mov
cmpsb
mov
fisttpl
sub
add
mov
mov
fnsave
xchg
test
dec
cmc
xchg
jns
frstor
in
sbb
pop
lcall
stos
cli
fiaddl
ret
pop
mov
push
jnp
and
inc
push
lret
mov
cmp
pusha
ljmp
fs
or
stos
je
repnz
jg
jl
mov
mov
xor
pop
repz
jmp
in
sub
xchg
inc
and
sahf
push
stc
ret
dec
xor
rorl
sti
ja
cmp
pop
test
cmpsl
adc
leave
sbb
add
and
lcall
subb
out
mov
dec
pop
lret
aad
call
push
xchg
js
stos
add
aaa
mov
mov
jbe
dec
xchg
lods
movsl
nop
sahf
push
enter
mov
fs
add
jp
bound
push
psllw
nop
aad
and
mov
cwtl
sub
imul
cld
loope
mov
into
aad
pop
sbb
lret
cmp
mov
xchg
jmp
lret
rolb
xor
push
cmp
mov
je
or
insb
in
daa
test
push
aaa
pop
add
mov
jo
mov
xchg
dec
fucomp
out
aam
push
jge
add
fnstcw
jo
shl
and
jbe
clc
inc
std
and
enter
mov
and
adc
xchg
push
add
fsubrs
xchg
into
pop
bound
das
or
dec
roll
sti
dec
fcos
xchg
mov
popa
add
add
mov
ljmp
hlt
sbb
mov
adc
inc
mov
nop
fstl
push
adc
imul
push
pop
cmc
mov
jb
out
pop
jns
sub
pop
pop
fstpt
cltd
out
mov
push
jb
xor
cltd
xchg
adc
in
xchg
pop
stos
jae
adc
pop
push
clc
dec
and
or
mov
stos
sahf
jl
push
fisubl
add
js
insb
pushf
mov
inc
jnp
push
fbld
mov
xorb
fs
push
push
das
stos
sub
loop
ffreep
xlat
adc
arpl
fisubl
pop
repnz
or
loope
cmp
mov
sub
sarl
jns
pop
cmpsl
out
cltd
or
aas
jl
insb
adc
das
test
push
js
and
inc
loope
enter
lret
sahf
inc
xor
jl
adc
test
jmp
aad
cmp
add
xchg
cltd
push
pop
into
sti
push
add
rorl
push
jns
inc
fsts
movsl
and
insb
add
test
fwait
insb
xor
mov
pop
aad
fmul
shll
lods
mov
imul
je
sub
test
and
test
jo
jae
stos
mov
mov
push
pop
int3
dec
clc
add
mov
mov
jle
mov
sbb
xor
push
sbb
mov
into
mov
int3
test
in
or
jg
xor
lock
or
push
mov
mov
lret
test
outsb
pop
mov
pop
pop
testb
push
sti
sarb
outsb
jg
out
ja
iret
and
in
and
pusha
push
jne
ljmp
inc
inc
inc
movsl
mov
mov
inc
xor
loope
adcl
into
addl
mov
out
or
movsb
pushf
pop
fcoms
ret
sbb
mov
xchg
in
mov
insl
ss
les
and
push
sub
jmp
sub
es
scas
loopne
jbe
cmpsl
cli
jnp
jl
xchg
pop
loope
in
ficoml
push
sbb
jno
dec
sahf
cmp
xchg
jno
mov
ss
ret
jge
pop
fildll
xchg
push
jl
sub
test
mov
jmp
push
inc
jle
nop
in
cmpsl
xor
lret
add
or
cmp
pop
mov
aas
out
mov
cmpsb
loope
or
aaa
loope
adc
dec
out
mov
loope
jae
pushf
int
xor
cmp
repnz
xor
mov
add
xor
mov
stos
bound
add
rcrb
mov
jo
push
dec
mov
and
add
mov
jle
cmpsl
es
into
rcrl
push
push
jne
jbe
leave
cs
jp
insb
adc
pop
ret
cwtl
cltd
mov
in
mov
lock
dec
cmpsb
adc
pusha
sbb
je
add
or
adc
xor
dec
jno
lret
rorb
pusha
cmp
jo
sbb
xchg
xor
sub
lcall
mov
pop
or
cmp
inc
lahf
xchg
call
mov
mov
les
push
mov
outsl
sub
insb
mov
idivb
mov
les
jp
imul
mov
or
xchg
out
push
fisubrl
lret
xor
es
popf
mov
dec
les
add
dec
mov
cmp
clc
inc
mov
insl
push
cmpsl
fimuls
cmpsl
pop
mov
push
inc
bswap
push
stc
shlb
loopne
loop
imul
notb
fndisi(8087
adc
inc
fsts
pop
sbbl
fstl
je
mov
jecxz
push
and
repz
in
movsb
pop
dec
out
mov
pop
roll
iret
adc
push
into
jp
add
dec
test
xchg
adc
lods
loop
lea
mov
push
cmp
fwait
mov
or
sahf
adcb
ret
rcl
and
jecxz
ljmp
pushf
mov
cwtl
xorl
cmp
movsb
ud0
fistpll
mov
lea
sbb
ja
fs
mov
punpckhbw
inc
sti
bound
je
mov
ds
xchg
cmp
push
dec
arpl
cli
push
imul
cld
in
aad
aad
ljmp
xchg
test
scas
dec
or
push
xor
inc
push
mov
add
addr16
and
jbe
xchg
rcl
push
xor
mov
pop
popf
xor
pop
adc
add
sub
lahf
xor
insb
stc
stc
insb
push
push
inc
cmpsl
pop
push
arpl
add
mov
jle
jle
rcl
test
pop
rcrl
adc
adc
int
aaa
out
add
and
jg
icebp
cmp
or
dec
xchg
or
int
push
mov
ljmp
jo
jl
jnp
adc
mov
xor
xchg
jo
xor
lcall
or
in
xchg
inc
sub
insl
or
adc
mov
pop
mov
and
sub
fs
int3
cld
add
mov
dec
xor
nop
stos
mov
push
inc
mov
xchg
sbb
cld
dec
cmc
ljmp
mov
lods
lods
push
fidivl
mov
mov
std
in
rcll
in
push
aaa
adcb
xor
xchg
sbb
mov
or
roll
fdivs
jo
push
xor
cmpsb
subb
fcomip
subb
std
movsb
lret
xchg
xor
div
or
jmp
pop
xchg
mov
or
sbb
xlat
xlat
fstl
sarb
inc
pop
mov
mov
cmp
popa
adc
test
not
or
cmpsl
or
icebp
inc
xor
sbb
pop
mov
pop
adc
mov
aad
pop
scas
push
or
inc
movsb
movsb
or
cmp
xchg
sarl
mov
out
jae
jbe
dec
mov
xchg
shll
or
iret
push
inc
jle
cld
jns
jecxz
or
icebp
cmp
outsl
jmp
lcall
sub
xor
cmpb
pop
movsl
inc
call
jmp
iret
xor
ja
lods
in
fnstsw
mov
xchg
loope
mov
leave
pop
pop
mov
movsl
mov
xor
cmp
xchg
enter
ss
js
push
sahf
adc
xor
lret
sub
xchg
inc
xchg
push
lea
call
pushf
lock
or
mov
les
xchg
mov
inc
sbb
aad
fcomps
or
repnz
loop
xor
pop
pop
popl
xor
daa
adc
cmp
mov
into
popf
sub
jnp
xchg
lret
add
xlat
lods
sub
mov
add
dec
jne
mov
mov
jge
cmp
pusha
cmp
lock
xlat
cmp
push
jo
add
or
fnstcw
sbb
and
and
fistl
pop
jg
mov
fistpll
cwtl
inc
movsb
pop
xchg
insb
lret
insl
repz
or
mov
out
push
mov
xchg
jnp
imul
pop
pop
sbb
sub
movsl
aam
outsl
fdivrs
hlt
push
stc
insb
sbbl
rcr
ss
push
cmp
inc
fidivrl
xor
les
andl
mov
or
aas
int3
das
aas
xor
fsts
jmp
xorb
shll
jp
xor
adc
cmpsl
pop
cs
mov
xlat
aaa
out
bound
pushf
lds
mov
push
loope
cltd
outsb
ds
rcll
les
jge
icebp
movsb
push
pop
imul
pop
mov
test
xchg
xchg
pop
pop
loop
mov
push
and
and
cmp
test
into
xchg
inc
pop
cmpb
xchg
jecxz
fucom
and
sbb
outsl
outsl
lret
les
out
repz
inc
repnz
jle
jnp
jb
inc
add
sbb
out
punpckldq
adc
adc
cmpsl
addb
add
fstpl
in
lock
daa
out
cmp
push
jmp
nop
add
add
inc
jae
lret
add
ret
sbb
sbb
pause
cld
enter
lods
dec
xchg
add
mov
dec
loop
xchg
cmp
xlat
add
push
push
add
sbbb
icebp
jmp
fisubs
outsb
dec
inc
mov
dec
mov
push
pop
push
or
insb
xor
jbe
pushf
in
pushf
ja
data16
cli
bound
adc
mov
sahf
fdivp
fstps
mov
or
lret
in
add
inc
adcl
lret
or
les
enter
iret
sbb
ret
shlb
pop
sub
jnp
cmp
clc
sahf
movl
les
and
or
mov
xor
adc
push
js
sbb
push
lcall
shr
xchg
arpl
mov
int3
add
mov
addr16
jno
cld
push
loope
repz
ds
dec
nop
xorl
push
sbb
or
pusha
hlt
lea
mov
push
int
cmp
in
stc
fwait
pusha
lods
hlt
adc
pop
jge
pop
mov
dec
js
adc
xchg
push
out
je
and
lahf
and
cwtl
or
shl
jo
xchg
mov
sbb
mov
add
sbb
into
js
movsb
push
lds
mov
mov
mov
orl
insb
out
mov
push
push
xor
sub
in
adc
mov
pop
mov
inc
dec
stos
outsb
mov
add
call
sbb
mov
adc
insb
jecxz
imul
push
lods
pop
jae
cwtl
xchg
lahf
into
mov
dec
gs
clc
out
addr16
push
mov
filds
test
inc
adc
cmc
sub
popa
inc
lods
loope
les
pusha
mov
lea
pop
sub
pop
push
call
pop
jl
pop
int
lods
jp
dec
xor
data16
ljmp
lret
fisttps
pop
mov
adc
outsb
jp
dec
or
loop
js
stos
rolb
mov
hlt
adc
popf
iret
jge
push
lock
out
mov
mov
fld
sti
lcall
aam
test
mov
or
xlat
mov
cmpl
and
into
movsb
and
mov
inc
int3
pop
stos
mov
test
pcmpeqb
and
cld
cmp
push
test
jle
aas
push
sti
into
in
frstor
jbe
pop
cmpsl
lahf
iret
and
lahf
lret
mov
or
add
js
fwait
fcmovb
cmc
stos
jnp
negb
add
mov
mov
cs
pusha
jge
cmp
dec
adc
sbb
add
jmp
xchg
nop
jl
lods
jae
xchg
pop
out
adc
jne
test
xchg
loope
lock
and
lea
adc
add
sbb
dec
std
cld
pop
aaa
pop
imul
popa
inc
mov
dec
jp
pop
aas
sbb
push
add
pusha
and
and
das
jno
jno
lods
sub
mov
mov
mov
mov
or
add
cmp
cld
mov
sub
daa
xor
push
cltd
xor
dec
xchg
mov
sarb
in
or
add
pusha
fsubl
data16
pop
dec
mov
roll
movsb
adc
mov
lods
push
and
clc
push
out
jno
daa
mov
add
push
mov
mov
mov
fwait
push
pop
mov
into
and
xlat
push
cmpsl
js
mov
adc
mov
and
or
sti
adc
sbb
stc
loopne
or
pop
test
filds
arpl
pop
and
aad
movsb
pop
stos
rorl
arpl
leave
jmp
inc
sbb
cmpsb
mov
push
mov
adc
inc
sub
rclb
lea
jmp
xlat
jl
xor
mov
push
dec
push
pop
inc
pmaxsw
jbe
push
add
ret
lds
xchg
out
push
inc
xor
xchg
inc
push
jns
loopne
arpl
js
mov
subl
fidivrl
mov
mov
inc
adc
xchg
in
loop
sub
sbb
ret
pop
aas
push
jl
outsb
mov
lock
iret
fcmovu
jl
sahf
xchg
orl
adc
stos
loop
lock
addl
adc
sub
std
mov
popa
inc
cmpsb
cmpsl
jae
adc
xchg
shll
xchg
cmp
mov
jnp
or
add
mov
mov
and
pop
jp
stc
push
xor
fidivs
int
adc
lahf
imul
mov
jmp
sbb
xchg
inc
decb
nop
cmp
mov
cld
mov
inc
xchg
or
sti
xchg
bound
jno
div
fmull
jle
cli
leave
xchg
sahf
addr16
and
lahf
out
mov
jge
jne
sbb
rcl
mov
dec
es
cli
rcrb
xchg
dec
or
and
mov
mov
into
in
or
xchg
mov
cwtl
rcr
dec
jno
mov
imul
test
or
push
cmpsl
xorl
sbb
xchg
clts
cli
pop
scas
jl
js
out
sub
add
jb
cwtl
xchg
ret
jae
and
leave
push
jl
pop
mov
enter
popf
xlat
xchg
push
movsb
jl
xchg
xor
pop
push
ds
loope
push
push
out
lods
mov
inc
mov
cmp
stc
sti
sub
push
lret
in
fdivr
xchg
mov
jbe
pop
mov
sbb
and
rcrb
dec
pop
xchg
adc
testb
xchg
scas
jbe
arpl
ljmp
mov
cli
pop
aad
pop
sbb
and
dec
jmp
xchg
decl
mov
push
ja
fs
jecxz
imul
push
das
and
fisttpll
stc
ss
mov
clc
sub
or
xchg
inc
push
lret
lds
aad
es
mov
jl
xor
popa
aad
jmp
xchg
push
mov
in
push
movsl
mov
inc
fs
daa
std
leave
fcom
adc
das
mov
inc
jmp
push
dec
imul
es
lahf
mov
jp
push
aaa
je
jmp
nop
in
push
pop
xlat
repnz
ret
inc
mov
jne
or
jmp
pop
pop
push
jo
xchg
jle
call
pop
lods
sub
push
js
pop
push
xchg
std
mov
dec
fimuls
push
test
inc
mov
mov
shl
repnz
mov
dec
mov
cmp
and
les
gs
mov
sbb
sbbb
loope
sub
fisubrl
jb
scas
dec
xchg
jmp
aaa
mov
add
popf
enter
negl
js
and
push
push
fs
sbb
dec
xlat
addr16
lds
add
inc
xchg
sbb
pop
xchg
mov
xor
mov
enter
and
adc
sti
sub
xchg
or
bound
loope
repnz
flds
scas
jb
imulb
xchg
insl
loop
imul
ret
dec
rcl
popa
push
jbe
imulb
push
fisttpl
inc
add
lock
mov
mov
sub
lods
xor
je
out
jle
jecxz
filds
cmc
in
inc
jp
in
and
jo
js
arpl
push
pop
jbe
sub
dec
mov
ret
pop
dec
test
inc
lods
test
jns
cmpsl
push
pop
add
jmp
int3
push
dec
out
mov
lock
jmp
and
jmp
insl
mov
push
cmp
addl
adc
std
movsl
and
or
inc
sahf
jg,pn
jecxz
adc
sub
jg
xor
jle
cwtl
xchg
jne
mov
mov
insl
lahf
dec
push
cmp
enter
and
fs
ljmp
ficoml
in
adc
push
sub
xchg
mov
cli
rcll
imul
mov
in
or
in
push
sub
dec
mov
stc
jge
cmp
ljmp
dec
fsubl
dec
sub
lret
out
enter
lods
add
int3
fidivrl
mov
imul
push
sarl
rorb
test
jmp
fldenv
loopne
repnz
sub
xlat
pop
sahf
push
sub
mov
cld
inc
push
ja
jne
pushf
mov
mov
xchg
xor
scas
lahf
das
aad
and
inc
adc
cmp
lods
fnstsw
out
stos
shl
andl
sub
mov
popa
mov
loop
mov
dec
sbb
pop
aam
fistpl
add
inc
cltd
mov
rorl
add
push
jae
or
cli
inc
ds
inc
adc
das
jbe
xor
adc
fs
data16
lcall
loopne
push
jmp
jmp
sarl
cmp
pop
cmc
add
xor
repz
ja
cltd
inc
xlat
cmp
ds
ljmp
mov
movsb
and
add
sub
rcll
aaa
pop
cltd
dec
lahf
rcr
xlat
insb
movsb
xor
sub
adc
xchg
out
sbb
dec
cmp
testb
rcrb
in
adc
jae
cmp
cmc
add
cmp
outsl
adc
addr16
xchg
jp
testb
push
cli
xchg
mov
daa
and
loopne
sbb
sub
xlat
mov
xor
xor
push
pop
out
ljmp
in
push
cmp
mov
imull
cs
idivl
add
es
subb
cmp
and
in
lret
cli
mov
pop
lea
pop
mov
cld
mov
dec
pop
ja
inc
subb
out
and
jl
inc
push
mov
xchg
paddq
mov
clc
push
stos
xchg
sub
mov
cmp
divb
mov
psubb
imul
push
dec
aaa
xchg
ss
jnp
push
jbe
aam
add
call
mov
pop
mov
nop
ds
sbb
xchg
lcall
mov
xchg
lods
add
popl
rcrl
es
hlt
add
inc
out
out
xor
cltd
repnz
mov
sbb
sub
cmp
and
push
fbstp
adc
pusha
out
xchg
stos
int3
push
xchg
jmp
jae
xor
cmpsl
sbb
ds
mov
icebp
add
pop
cmp
ja
and
inc
movsl
inc
sbb
push
push
pop
imull
or
je
sub
mov
push
jle
test
mov
aam
inc
adc
dec
push
mov
xchg
mov
mov
test
daa
and
daa
mov
std
mov
xchg
adc
aam
dec
push
add
xor
push
cltd
push
or
sub
push
mov
das
lahf
push
pop
push
xor
idivl
sbb
lret
lret
leave
insl
mov
push
pusha
mov
inc
xchg
lret
add
jo
aam
in
add
ret
sbb
rorb
call
xchg
dec
mov
sbb
outsl
xlat
inc
xchg
cmpsl
ret
sub
jno
mov
fisubl
lahf
movsb
test
mov
scas
movsb
dec
mov
das
fmull
mov
mov
dec
dec
shll
push
inc
and
hlt
xchg
icebp
cmovge
in
push
ret
jnp
cld
pop
push
pop
orb
scas
xchg
ret
adc
xor
jmp
ret
dec
les
fmuls
cmpl
jecxz
dec
push
aaa
or
scas
pop
xor
repnz
dec
call
repnz
leave
mov
jecxz
mov
mov
pop
sub
inc
fs
ds
mov
mov
and
lock
lds
dec
pop
push
and
lret
lcall
cwtl
cmp
and
or
stos
pop
xchg
inc
xchg
xchg
ret
fidivrs
inc
cmp
fisttpl
ds
repz
inc
jbe
mov
movaps
in
pop
pop
xlat
mov
cmc
push
aam
mov
mov
mov
jl
je
test
bound
stos
xor
scas
xchg
cmp
lret
mov
mov
mov
push
jns
add
mov
pop
loop
jg
sbb
jecxz
data16
ja
and
push
xchg
adc
outsl
pop
into
inc
gs
add
or
cld
dec
dec
lea
cmp
xor
popa
aaa
inc
jecxz
mov
stc
adc
dec
add
jg
mov
ja
sub
and
pop
insb
or
les
inc
cmpsl
js
push
pop
mov
popl
pop
cmp
shlb
xor
clc
lret
fidivrs
xchg
std
aad
into
imul
sub
pop
push
add
sahf
in
dec
inc
out
mov
dec
ret
pop
mov
mov
mov
xchg
dec
bound
jae
cmpsb
into
ljmp
lock
jecxz
les
cmp
test
cmp
or
aam
pop
enter
repnz
ss
jnp
lret
cmp
jbe
pop
rorl
fdivs
pop
test
ret
dec
dec
sub
aaa
arpl
test
inc
lahf
mov
sbb
dec
xchg
push
sahf
sbb
inc
sub
inc
push
cmp
sbb
inc
test
mov
outsl
inc
das
dec
cltd
scas
leave
cld
out
dec
testb
jno
push
push
and
outsl
add
xchg
aad
adc
jbe
push
dec
inc
fwait
pop
std
inc
jb
fcom
pop
lcall
mov
adc
sbb
es
sub
fldl
out
gs
ret
and
stos
jbe
or
add
sti
mov
and
inc
jmp
mov
and
test
dec
xchg
movsl
adc
adc
adc
add
ret
icebp
pop
cli
lcall
or
sub
negl
jns
shlb
mov
in
test
fcoml
scas
insb
cmp
test
add
jo,pn
les
add
push
fcoms
popl
out
sbb
es
ret
add
imul
stos
mov
jecxz
mov
sub
push
and
xor
dec
in
test
pushf
xchg
dec
dec
mov
and
rorl
or
cmp
cmc
outsl
push
repnz
jmp
mov
ret
sahf
mov
xchg
outsl
dec
mov
sbb
and
gs
out
into
and
jmp
push
test
add
andl
or
shlb
push
outsl
sti
jns
lds
mov
and
pop
int
out
stc
imul
aas
mov
sbbb
and
scas
stc
xchg
movl
jne
jge
mov
or
jno
sub
push
lock
dec
jbe
lret
int3
test
out
push
pop
mov
push
ret
inc
sbb
out
aad
outsb
pop
addr16
pop
js
aam
out
sub
xorl
lock
jnp
add
push
mov
sarb
imul
xchg
mov
call
or
jbe
test
pop
pop
mov
jecxz
test
sbb
cmp
and
xorl
jae
add
out
pop
jp
mov
or
icebp
cmp
stos
test
movsl
push
mov
jne
repz
add
arpl
shll
pop
sbb
push
loopne
sbb
xchg
nop
push
in
je
in
ficompl
dec
repz
test
ss
imul
mov
iret
rcl
mov
or
sub
xchg
pusha
mov
cmp
jg
inc
mov
cmp
inc
cmp
add
mov
sti
test
mov
mov
insb
xchg
sbb
jle
add
sahf
cmc
xor
cmpsb
mov
pusha
mov
and
lds
mov
mov
xlat
insb
mov
jnp
in
inc
sub
pop
xor
push
jbe
add
add
or
push
and
adc
push
test
imul
inc
out
mov
ret
loop
jp
loop
mov
fnstsw
out
pop
sbb
fcoml
mov
add
sub
dec
lret
xchg
push
sbb
sub
rcr
adcb
mov
mov
mov
mov
jg
stos
sarb
movsb
subl
mov
orl
call
adc
pop
fisubrl
iret
mov
push
loop,pn
out
adc
pop
adc
call
xchg
imul
dec
mov
push
push
cmp
dec
inc
aas
push
cmc
rcr
pop
add
sub
sbbb
or
add
and
out
jo
jecxz
sbb
jl
fadd
es
xchg
sbbb
imul
sbb
mov
mov
cltd
xor
push
dec
in
dec
push
xchg
pop
jle
int3
std
lea
outsl
mov
shl
push
lret
test
les
pusha
xor
xchg
divb
xchg
mov
mov
mov
in
add
test
dec
lret
filds
ljmp
jl
cwtl
insl
fdivrs
js
loopne
xor
repnz
sbb
neg
pop
mov
mov
imul
std
scas
out
jb
loope
jnp
dec
add
ret
arpl
loop
lret
add
sub
aam
hlt
inc
in
sbb
and
fadd
mov
jge
xor
jge
pop
sub
cmp
xchg
addb
cltd
push
lea
push
or
jb
into
mov
scas
rclb
std
inc
shll
jmp
adc
mov
jg
jp
je
enter
xor
dec
push
jl
dec
fldenv
pushf
jnp
mov
ret
sbb
or
xchg
sub
ljmp
fstl
jp
jecxz
stos
add
cwtl
pop
lcall
pop
in
cmp
pushl
dec
negb
pop
add
mov
test
gs
cltd
test
add
or
sbb
xor
int3
mov
fwait
or
xchg
xor
stos
movd
inc
add
ss
adc
sbb
outsb
test
xor
clc
repnz
add
pop
xor
pushf
test
mov
shll
out
xchg
jp
sub
pop
out
push
mov
and
adc
or
iret
scas
sub
dec
inc
push
setnp
sub
dec
inc
loopne
insl
cmp
dec
and
sbb
xor
dec
or
aas
sub
jmp
cmp
and
shll
inc
pop
mov
pop
mov
xor
mov
hlt
dec
loope
cmpsl
pop
sti
and
aaa
mov
int3
xchg
lcall
cmp
jecxz
out
out
fldcw
push
shrb
aam
mov
stos
xchg
je
out
rclb
xor
lret
cmpb
cld
xchg
addb
jb
inc
stc
aas
lock
imul
jne
xor
lcall
je
sti
dec
rcrb
mov
jg
and
pusha
jecxz
fucomi
aas
cmp
adcl
push
in
testb
jnp
out
test
jge
push
xlat
cmp
sub
lcall
adc
stos
call
push
or
mov
les
shlb
cmp
inc
sbb
push
fisttpl
mov
jmp
movsb
pop
out
loop
mov
stc
xchg
and
int3
shl
xor
xchg
cmc
aaa
js
dec
das
pop
cmp
cmp
out
cmovl
pusha
fidivl
test
adc
stc
cmp
arpl
dec
call
scas
fsubrl
pop
fistl
fidivl
mov
iret
lods
inc
jl
cmc
cmp
aas
aam
jecxz
mov
xor
sub
js
adc
pop
jne
inc
mov
cmpsb
stc
ds
lret
icebp
cmpsl
pop
pop
or
jno
pop
shlb
xlat
or
jns
data16
aad
cmp
insl
imul
shl
cld
sub
dec
add
mov
fwait
rcr
xor
xor
pop
sub
or
sbb
ljmp
jbe
stos
test
and
sbb
mov
sbb
mov
subl
add
fsts
add
xchg
mov
stos
add
js
lahf
or
jo
dec
xor
daa
and
dec
xchg
mov
jecxz
ret
sbb
ljmp
rclb
pusha
jno
cmpsl
leave
sbb
jbe
adcl
add
jge
push
sbb
fwait
iret
cmp
xchg
mov
push
push
xchg
mov
nop
push
and
xchg
pop
or
jne
or
std
lret
insl
and
ret
jb
or
push
mov
ror
jle
loopne
fisttps
pop
inc
mov
cmpsb
in
addb
das
mov
cmp
xchg
add
stos
mov
push
or
sbb
push
dec
or
daa
jae
movsl
mov
shll
out
mov
test
aas
js
divb
xchg
pop
inc
out
call
mov
dec
xor
xchg
jecxz
out
and
pop
sub
rcll
mov
sbb
ljmp
call
or
testl
scas
mov
cld
enter
js
xchg
inc
xchg
es
sub
sub
jne
pop
in
xor
dec
jno
rorb
ss
les
shl
lcall
fiadds
outsb
in
mov
sbb
pop
push
fiadds
mov
pop
shrl
ret
jl
and
mov
and
mov
das
jo
xchg
mov
ljmp
ja
sbb
xchg
sub
mov
fbstp
sbb
cli
insb
or
sub
fcmovbe
nop
pusha
scas
inc
scas
dec
or
dec
cmp
test
int3
dec
imul
jge
push
out
cmp
cmpsb
mov
vdivsd
add
jmp
js
mov
sbb
push
inc
mov
xchg
jno
sarl
and
or
xlat
mov
rorb
mov
xchg
dec
fnstcw
inc
and
shr
jmp
adc
loop
iret
lret
stc
jecxz
pushf
aam
test
push
pop
outsb
lds
movsb
aad
das
xchg
adc
push
out
dec
cmp
and
and
fucompp
imul
in
mov
mov
mov
jmp
ja
push
xor
lods
gs
or
inc
aas
gs
adc
xchg
pop
mov
int
mov
lods
or
icebp
out
das
int3
mov
push
leave
jecxz
dec
ds
dec
in
shl
push
mov
fdivs
out
push
fbld
push
mov
js
lock
arpl
add
std
leave
int
mov
mov
or
pop
xlat
nop
push
jge
ss
sbb
pop
mov
xlat
xchg
inc
leave
lea
and
cmp
outsb
mov
iret
movsb
xchg
sub
xchg
sbbl
rolb
and
xchg
lods
leave
scas
sbb
imul
mov
int3
and
or
outsl
inc
mov
outsl
push
or
scas
mov
dec
ss
lea
lds
push
sbb
repz
int3
stos
out
adc
mov
cmc
mov
pop
and
mov
ror
xlat
in
into
and
jbe
popl
sub
push
cmp
repz
sub
jno
sub
loop
or
add
mov
ljmp
jo
add
mov
stos
adcb
push
std
sti
aad
mov
leave
inc
push
in
scas
ds
rorb
out
xor
mov
sar
movsb
mov
xchg
push
jnp
cmpsl
dec
outsb
mov
xor
rol
clc
les
sarb
pop
lock
repnz
push
inc
lds
cmp
mov
popa
test
daa
add
lods
mov
jb
xchg
and
or
cmp
inc
imul
fisubl
push
xor
int
sbb
push
shrl
pop
daa
mov
jecxz
or
rol
jbe
dec
cwtl
adc
xchg
stos
inc
cmp
xchg
sbb
sbb
inc
rcll
subl
test
flds
loope
xorl
xor
and
ret
sbb
dec
xchg
ja
jns
test
cmpl
lcall
cli
mov
and
negb
or
xchg
mov
mov
movsb
cwtl
les
enter
lds
stos
xchg
mov
push
fcoml
inc
mov
add
mov
leave
dec
leave
sarb
jb
mull
pop
lret
andl
sub
sbb
int
pop
and
mov
push
ficoml
outsb
xor
sbb
into
pop
cmp
stos
and
ret
sub
test
cmp
cmc
ja
jp
adc
lods
stos
ss
imul
sub
je
aad
or
insl
xchg
adc
jbe
or
mov
incb
clc
imul
pop
pop
loopne
mov
ret
insb
roll
ret
sub
rclb
fdivl
or
inc
dec
lea
lret
pop
repz
popa
in
fnstcw
lahf
dec
inc
rorb
data16
cmpsl
inc
imul
push
sub
jecxz
push
pop
int
push
dec
and
es
inc
js
xchg
cvttps2pi
test
out
out
loop
in
out
mov
sbb
xchg
sarl
test
cli
cs
shll
add
jmp
cld
sbb
stos
dec
jnp
xchg
xchg
cli
cmp
rol
or
shll
out
xchg
or
out
add
and
sbbb
sahf
testl
sarl
ja
test
cmp
dec
je
ljmp
cmp
sarl
jo
xchg
loop
mov
sub
mov
jnp
add
add
repnz
dec
in
js
dec
xchg
mov
in
dec
addr16
xchg
ffree
inc
push
mov
jo
dec
jp
or
mov
aad
xchg
jecxz
loopne
scas
sub
aam
pop
xor
cli
pop
pop
outsl
adc
cmpsl
loopne
pop
mov
add
xor
or
xor
push
in
jne
fadd
sbb
in
pop
pop
push
adc
xchg
jbe
add
in
clc
dec
xlat
add
mov
iret
dec
leave
inc
jmp
insl
inc
dec
in
out
aad
mov
xchg
shrl
std
iret
cld
and
pop
cs
push
jnp
jmp
xchg
addb
push
or
mov
push
das
lret
repz
lret
stos
scas
push
fstl
outsl
je
push
pop
cmp
push
sub
out
cmp
and
leave
pop
dec
pusha
shrb
stos
add
mov
enter
jecxz
pop
and
movlps
and
dec
sbb
repnz
mov
ss
into
mov
addr16
dec
out
fstpt
dec
popf
lcall
loop
dec
jbe
jle
adc
jl
test
sbb
outsl
scas
mov
sti
mov
jns
fsubrl
ljmp
punpckhdq
add
sbb
and
insl
mov
fwait
pop
inc
xchg
jge
repz
rcll
orb
enter
or
mov
mov
cmp
ret
pop
jle
fldt
lds
mov
jmp
sub
mov
lods
add
inc
clc
jne
rcrl
or
outsl
lods
pop
lret
inc
mov
and
test
or
and
mov
xchg
jecxz
jmp
xchg
push
js
inc
ja
lret
cmp
enter
cmp
cmp
xchg
les
pop
adc
push
or
add
mov
fisttpl
gs
sub
sub
sbb
ds
imul
pusha
push
stos
xchg
popa
xor
test
les
mov
mov
push
sbb
clc
add
decb
arpl
pop
outsl
lods
sub
roll
pushf
sbb
hlt
je
fdivrs
scas
test
sub
inc
mov
dec
int3
jns
lods
es
lea
pop
gs
mov
in
xchg
or
inc
out
es
xchg
cld
out
ja
repnz
jl
leave
sbb
test
repz
mov
jl
loope
js
repnz
out
notl
pop
xor
ja
jmp
and
push
cmp
int3
test
addr16
mov
mov
xchg
and
aad
shlb
loope
mov
xchg
andb
sub
test
shl
lret
mov
lcall
inc
add
mov
int3
divl
push
hlt
sarb
das
pop
fisttpl
lahf
xchg
pop
sbb
pop
and
mov
imulb
popa
out
movsl
jge
add
test
xor
mov
mov
popa
ret
pop
jne
mov
mov
jmp
loop
lcall
xchg
push
movsb
shlb
cs
adc
ficoml
xchg
mov
nop
push
jae
jp
inc
sbb
sub
pushf
gs
fmuls
fcoml
pop
pop
call
cmp
jo
aaa
adc
cmpsl
push
in
js
cs
xchg
mov
repnz
lods
sbb
add
mov
cmp
mov
into
into
and
shrl
sbb
push
lret
shlb
insb
add
xor
add
pop
nop
dec
jae
jp
add
jmp
int
pop
addr16
js
adc
clc
mov
dec
push
xor
adc
push
mov
jbe
adc
mov
jae
out
scas
lods
sarl
iret
inc
jmp
popa
scas
aas
ffreep
push
mov
mov
pop
mov
mov
stos
bound
mov
fldcw
or
cmc
or
inc
push
pop
int
aaa
outsb
pop
shll
add
or
leave
stos
pop
inc
cmp
int3
insb
sbb
in
lret
jge
jl
ss
jae
cmpl
shrl
push
add
imul
and
adc
call
jg
sbb
dec
or
lds
aad
jge
pop
push
jl
in
and
rcll
cltd
aaa
xor
shll
lds
sbb
cmp
xchg
mov
cld
and
mov
in
mov
jae
pop
sahf
test
mov
int
xor
sbb
sub
mov
lea
add
push
or
data16
or
ret
sbb
std
bound
pushf
sbb
sbb
push
push
rolb
push
xor
in
inc
scas
cmpsl
mov
fists
add
mov
jbe
jo
sbb
sub
dec
sub
xchg
into
mov
mov
sbb
push
and
inc
arpl
popa
mov
mov
mov
pusha
sub
in
mov
pop
jne
sbb
cmp
cwtl
fistl
inc
jne
inc
popa
dec
loope
sbb
jge
mov
adc
mov
adc
inc
fadds
mov
push
add
popl
repnz
lds
sbbl
add
cmp
sahf
mov
dec
or
xor
test
mov
xor
sbb
xchg
push
inc
fsts
lret
push
inc
pusha
jg
add
test
jl
sub
adcb
mov
inc
aad
bound
xchg
adc
adc
mov
cmp
mov
lock
inc
in
loop
aaa
mov
lods
popa
aas
add
mov
les
inc
jae
sub
xlat
xchg
mov
or
add
lret
dec
in
push
adc
daa
xchg
out
repnz
cmp
popa
jl
mov
jno
mov
dec
lds
push
out
mov
nop
orl
push
push
jg
or
dec
jle
data16
das
push
jmp
subb
repz
adcl
adc
mov
es
lret
negl
push
pop
daa
or
jge
iret
adc
hlt
mov
bound
xchg
fimuls
negl
xor
add
mov
mov
ljmp
sub
adc
jnp
in
mov
stos
cmp
fs
out
sti
adc
cs
dec
xor
push
dec
sbb
ss
jae
pop
icebp
ret
enter
adc
adc
lret
imul
stos
int
jo
cmp
push
cmp
adc
mov
pushf
movsb
adc
mov
ss
and
cmpb
ret
jbe
mov
fisttpll
aaa
stos
push
jbe
rcr
push
add
data16
fisubrl
clc
lcall
sbb
sbb
lcall
lock
push
shrl
mov
mov
loope
out
stos
stos
aam
shr
mov
dec
fs
jae
pop
hlt
sub
jnp,pn
out
mov
push
stos
inc
or
push
out
mov
in
inc
mov
adc
push
jge
xchg
cmp
pushf
lods
pop
jo
clc
sbb
shr
or
daa
insl
or
adc
or
icebp
pop
sbb
call
movl
xlat
xchg
popa
lret
sub
icebp
inc
mov
ss
sub
push
jbe
and
rorb
sub
sarb
mov
sub
or
adc
ds
mov
int
mov
mov
jno
mov
inc
push
scas
mov
adc
pop
mov
dec
lods
and
loope
xor
inc
outsl
pop
or
ds
mov
das
ss
cld
mov
out
icebp
push
cmc
ljmp
mov
mov
mov
push
mov
jecxz
cmp
and
lods
je
jo
add
test
or
mov
mov
push
ljmp
jnp
call
sbb
jg
sub
and
cmp
inc
aas
nop
mov
pushf
cmp
adc
push
fstl
mov
or
cmp
or
mov
add
add
dec
add
push
movsb
es
shr
xchg
add
jo
and
int
scas
insb
imul
pop
jmp
andl
and
movsl
test
cmp
fsubr
stos
cld
mov
outsl
pop
adc
mov
xchg
xor
mov
cli
jo
sub
and
std
cmp
into
mov
out
cmp
or
orl
mov
push
nop
js
push
out
cmp
pop
fnstsw
sbb
xchg
leave
add
lods
xor
sbb
mov
add
inc
leave
jle
lcall
xor
cmpsl
hlt
sbb
mov
movsb
cmp
ljmp
cld
clc
shlb
mov
adc
adcl
inc
mov
jp
sbb
mov
mov
or
sbb
cli
pop
add
ret
xor
clc
mov
mov
sbb
xchg
jge
mov
jb
mov
add
mov
sbb
cmp
jl
push
jno
aam
xlat
pop
mov
fisttpll
xor
mov
fdivrl
faddl
fldl
push
push
sub
jno
and
sbb
xlat
lret
add
sbb
nop
mov
and
leave
inc
gs
in
mov
pop
sbb
push
pop
pushf
cld
lods
movsb
es
push
in
jne
inc
inc
nop
mov
dec
mov
scas
xchg
mov
inc
or
jae
lods
pushf
imul
es
xor
adc
bswap
jecxz
or
or
out
mov
and
lret
aam
outsl
repz
adc
jnp
and
xchg
popa
fmuls
adc
fisubl
aam
mov
pop
sub
mov
mov
test
sbb
mov
in
test
lock
mov
mov
xchg
movq
mov
nop
mov
je
pop
fcmove
les
movsl
jb
sbbb
scas
dec
pop
mov
test
jnp
clc
rol
and
outsb
xchg
lds
cmp
cmp
xor
adc
or
loopne,pn
data16
jl
cmp
jp
jmp
xchg
mov
xchg
std
push
shlb
mov
pushl
sbb
ljmp
push
push
rcrb
pusha
jns
bound
inc
ds
push
insb
pop
rcrb
and
dec
notb
inc
pop
das
aas
mov
ficoms
mov
xor
xchg
push
icebp
mov
cltd
mov
mov
mov
cltd
popf
std
leave
pop
inc
xchg
shll
cwtl
ret
inc
rcrb
jp
outsb
push
push
xchg
ret
scas
and
or
mov
testb
adc
repnz
cmpsl
loop
out
fnsave
push
mov
lret
addr16
cmpsb
mov
fsubl
mov
ret
outsl
imul
mov
dec
mov
test
in
arpl
ljmp
in
add
fstpt
fidivrs
lds
fiaddl
out
jno
gs
pop
xchg
mov
dec
rolb
push
xchg
clc
out
int
cwtl
mov
dec
adc
pop
xchg
and
pushl
mov
fcmovne
add
cltd
or
jle
mov
sub
je
lods
outsl
jns
je
pop
sub
es
and
mov
popf
fs
jo
xchg
outsb
movsl
pop
adc
pop
cld
pop
mov
pop
arpl
mov
cmp
sub
arpl
mov
stos
jne
outsb
dec
popa
mov
lcall
mov
cltd
daa
incl
aas
or
mov
mov
sbb
adc
mov
sar
inc
lods
sbb
shll
sbbl
add
fisttps
push
test
std
cmp
jp
pop
push
mov
pop
pop
rorb
or
out
jno
mov
inc
shll
int
dec
and
and
sarl
dec
inc
add
push
test
jae
in
jne
sbb
lock
sub
loop
mov
push
add
push
hlt
push
out
add
jle
es
sub
xor
pop
sbb
and
sti
mov
xchg
lds
adc
fdivl
hlt
jmp
dec
in
fbld
in
enter
negl
xchg
push
push
mov
xchg
test
sbb
mov
push
sub
mov
sbb
or
sbb
sahf
cmp
fistps
out
outsl
roll
dec
das
adc
jbe
sbb
idivl
mov
movb
stos
sbb
mov
inc
jecxz
dec
leave
xor
loope
inc
popa
and
mov
sub
and
inc
in
mov
jae
mov
jecxz
jge
pop
mov
jle
sti
icebp
push
cmp
rorb
push
sub
pop
aaa
cmpsb
add
mov
data16
push
outsb
and
stos
shlb
icebp
add
jmp
movsb
data16
fmul
push
sub
xlat
push
pop
ficoms
out
pop
push
pop
dec
sbb
popa
fucom
add
mov
add
fldl
pop
shl
fnsave
adc
mov
das
test
lock
je
outsl
pop
ficoml
cs
xchg
and
push
pop
mov
jno
cmpsl
xor
mov
cmpsb
js
mov
aaa
push
cli
xchg
fwait
stc
leave
leave
mov
jecxz
mov
movsb
lds
hlt
xchg
aam
sbb
scas
fidivl
aam
inc
push
add
xor
xlat
cmp
adc
pop
xchg
addr16
mov
lock
stos
jbe
lahf
das
add
outsb
imul
jp
stos
push
xor
pop
pop
mov
jne
cmc
xor
push
aaa
les
std
hlt
lret
lods
insb
dec
fmul
popf
or
mov
push
pop
push
lds
icebp
notl
repz
dec
push
adc
add
jno
jg
xchg
loope
out
xor
inc
lret
jno
int3
jmp
dec
sub
fsubrp
lahf
lock
jo
fs
pop
imul
out
fcomps
cmpsb
ljmp
and
add
mov
mov
mov
push
cwtl
dec
fsubl
push
out
push
mov
add
xchg
inc
xor
sbb
aad
arpl
mov
cmp
xchg
stos
sti
je,pt
or
xchg
xchg
sub
add
and
sub
imul
add
cmp
ss
loopne
mov
push
iret
xchg
jnp
pop
out
sbb
fcoml
testl
adc
movsl
notl
fcoml
mov
sbb
es
ds
jns
add
jne
jb
jno
call
push
mov
inc
gs
mov
nop
repnz
js
add
leave
jge
cmp
scas
fildl
mov
loopne
mov
mov
pop
fwait
adc
lret
test
xchg
or
mov
cltd
ds
adcl
scas
jne,pt
cmpsl
cmp
shrb
out
mov
jb
lods
pop
test
xlat
cmc
shl
cs
call
cmp
push
push
xchg
filds
pop
add
lret
out
cmp
stos
jl
cmpsb
nop
loopne
pop
mov
xchg
ljmp
cld
mov
jno
sti
icebp
sbb
lea
es
std
decl
and
xor
lret
add
adc
imul
mov
sub
mov
ret
bound
addr16
mov
sub
mov
pop
imul
lds
popa
movsl
js
mov
pusha
push
pop
add
cmp
loopne
mov
jae
sub
js
or
mov
lods
mov
mov
push
fdiv
xchg
push
mov
clc
cmp
jb
pop
dec
pop
and
push
stos
out
mov
push
cmp
lds
sbb
and
pop
xchg
pop
cmp
fisubrs
adc
scas
pop
jmp
cltd
fnstenv
jnp
aad
sub
push
call
int3
std
or
ret
daa
dec
into
jecxz
pop
test
aam
or
es
and
pop
xchg
popf
push
jl
xchg
xor
in
imull
add
xorl
aas
xchg
push
cld
sub
jnp
in
cmpsb
lret
jae
sbb
mov
sub
cmp
test
dec
fnstcw
out
dec
pop
mov
stc
imul
ret
sbb
sbbl
jle
negl
fsubl
pop
xchg
mov
sbb
xchg
in
jns
add
hlt
xchg
cmp
aas
pop
adc
push
and
or
push
cmp
das
fstl
jns
mov
sub
xchg
adc
imul
mov
xchg
xorb
push
jge
inc
sbb
dec
hlt
pushf
shrb
xchg
xlat
inc
fs
fs
mov
clc
mov
jns
punpckhwd
sbb
repnz
shl
or
out
fucomi
cmp
in
addb
std
mov
inc
mov
mov
and
dec
popa
bound
xor
nop
je
sbb
mov
pop
inc
jns
xlat
int
scas
lods
add
add
jmp
outsl
and
pop
add
inc
xchg
call
sbb
add
insl
mov
jle
into
add
fmuls
mov
fbld
adc
mov
cmpl
and
call
loop
add
ret
fucomi
loop
loope
mov
int3
mov
ljmp
sarl
cmp
xor
test
insl
pop
cli
sub
jl
or
int
sub
cmp
push
les
insb
inc
inc
test
cltd
pop
mov
fiadds
push
and
negb
loopne
sub
mov
test
push
pop
outsb
cli
pop
out
gs
into
fwait
push
rcrb
adc
mov
out
cmp
sub
sbb
push
popf
push
rorl
xlat
jns,pt
pop
sti
pop
cmovns
test
inc
lock
dec
enter
mov
mov
sbb
cmp
outsl
sarb
mov
addr16
mov
push
out
xor
dec
dec
pop
cltd
mov
enter
jbe
lahf
adc
xor
in
shll
sub
cmp
xchg
xchg
loop
scas
jmp
into
insb
inc
sbb
adc
pop
mov
push
aas
lods
xchg
lods
sbb
cmp
stos
push
adc
cmp
ret
sub
inc
in
mov
sbb
sub
aam
lock
and
jp
movsl
push
in
icebp
xchg
inc
in
dec
xchg
icebp
jno
jns
dec
jb
ja
sub
jp
xor
push
sbb
xor
sub
xlat
nop
add
fiaddl
mov
or
lods
mov
jge
cmp
movsl
sbb
push
jl
loop
aas
ret
repnz
pushl
dec
inc
into
dec
pop
arpl
jne
lds
sub
fdivs
mov
dec
mov
xlat
cmp
xor
xchg
push
or
shrb
push
pop
scas
or
xchg
fwait
inc
mov
jnp
cltd
in
push
and
shrb
mov
iret
mov
outsb
test
push
out
and
pop
stos
xchg
popa
xor
fisubrs
pop
outsb
test
xor
jno
xor
pop
sbb
js
xchg
das
and
es
stos
in
pop
dec
pusha
lcall
mov
dec
cmp
ljmp
in
in
and
popa
out
xchg
cld
gs
repz
test
mov
and
out
repz
push
mov
je
int
das
scas
pop
sub
repnz
loope
cmp
xchg
add
sbb
mov
call
imul
outsb
ret
stc
pop
add
dec
cmpsb
push
ret
cwtl
adc
jbe
test
mov
pop
xchg
negl
mov
inc
mov
in
mov
dec
jno
out
out
imul
xchg
sbb
jns
xchg
fcoml
or
fisubrl
ds
xchg
and
jns
inc
push
arpl
and
enter
and
mov
addr16
jle
xor
pop
scas
pop
out
cmp
fsubl
test
xchg
xlat
jecxz
adc
in
loope
outsl
sbb
aad
out
push
popf
xchg
out
pop
call
cmp
out
in
jb
and
in
jmp
lea
bnd
jl
aas
jp
xor
data16
push
xor
sub
jns
dec
lcall
fstl
imul
dec
mov
test
adc
lea
dec
xchg
jl
mov
dec
or
loop
jp
mov
pop
xchg
das
dec
daa
mov
jg
movsl
cmp
add
out
push
or
or
jg
dec
jb
inc
adc
jns
call
xchg
repnz
lods
ret
and
add
leave
out
or
repnz
push
push
cld
pop
jno
push
mov
hlt
daa
push
cmpsl
std
fbstp
in
cmp
call
xor
call
push
clc
or
xorl
pushf
andl
jnp
and
dec
seta
xchg
mov
mov
pop
mov
in
xchg
inc
or
stos
faddp
xlat
lock
outsb
inc
sub
push
sbb
sub
test
sub
push
dec
dec
xor
or
add
in
xchg
mov
pop
pushf
cld
push
jns
sbb
movsl
enter
xchg
pop
stos
pop
aad
fdivrp
sbb
hlt
popl
jg
ret
test
and
ja
xor
fnstcw
mov
xchg
lock
cs
addr16
rcll
cmpsl
cs
aaa
jg
inc
mov
dec
pushl
adc
adc
jns
sti
outsb
sbb
sub
mov
clc
sub
push
and
inc
leave
in
ror
ret
sbb
nop
xchg
pop
daa
pop
jo
pop
sti
inc
dec
ret
inc
fwait
add
loop
inc
imull
xor
movl
jae
sub
or
loope
add
or
pushf
mov
inc
jb
add
out
jo
mov
clc
loopne
addr16
mov
mov
std
jno
mov
sbb
mov
cmp
add
mov
mov
rcrb
or
roll
mov
sahf
push
and
pop
inc
or
xchg
sub
jo
pop
mov
sub
cmp
xchg
mov
bound
arpl
jbe
and
dec
add
cwtl
cmc
adc
stos
add
in
in
pop
pop
lods
decb
rorb
gs
shr
xor
jecxz
stos
pop
mov
xchg
rorb
dec
in
pop
mov
add
pop
and
insb
mov
movsb
pop
mov
mov
push
fcmove
dec
mov
push
and
clc
push
mov
and
mov
dec
or
cmp
ret
testl
ret
adc
mulb
adc
inc
sti
test
adcb
daa
jae
sub
jns
insl
cmp
mov
shll
pop
jno
ljmp
push
sbb
outsb
cmpsb
jns
roll
push
adc
imul
inc
add
sbb
dec
inc
mov
int
push
add
mov
call
xorb
and
test
lds
lea
repz
fwait
outsl
mov
adc
mov
xchg
aas
idivb
push
mov
in
mov
xchg
in
mov
dec
in
ret
cmp
xchg
iret
jae
inc
add
in
scas
ljmp
mov
mov
lahf
adc
outsb
pop
xchg
jae
lds
or
out
stc
push
jno
sbb
movsb
inc
cmpsl
das
cli
xor
inc
and
xorl
or
les
pop
sub
fidivs
fs
gs
jbe
or
cli
xchg
mov
rolb
les
sub
push
jo
repz
hlt
sahf
ret
cmp
test
adc
repz
sahf
loope
cmp
fsubrs
andb
inc
inc
gs
aam
fmul
xor
out
std
mov
xor
push
insl
mov
ljmp
push
dec
aam
test
stos
add
mov
inc
or
out
sbb
or
in
and
mov
mov
xchg
mov
or
pop
fcmovnu
mov
fstps
es
sbb
xor
data16
mov
bound
dec
adc
out
sub
push
shlb
lret
js
outsb
lock
push
inc
mov
int3
lret
jg
gs
mov
pop
in
jnp
inc
sti
arpl
push
stos
test
repnz
push
mov
jle
push
inc
pop
inc
mov
cmpsl
sahf
lods
xchg
les
jge
pop
jge
adc
addl
jg
mov
in
add
clts
dec
icebp
xchg
push
xor
xchg
int3
pop
adc
ss
aaa
pushf
ljmp
test
std
test
jno
inc
adc
dec
or
xor
cmp
das
ds
push
xchg
and
icebp
mov
mov
cmp
add
scas
sub
xor
or
sahf
jl
daa
mov
jns
insb
popf
dec
push
xchg
div
in
dec
push
xchg
out
mov
insb
adc
ds
sub
xchg
pop
lea
cmc
mov
add
fnstcw
or
push
es
push
and
add
xor
test
push
aad
push
jbe
outsb
filds
lret
subb
scas
lea
dec
cld
test
out
add
stos
and
push
xlat
pop
and
movsl
and
mov
add
stos
xor
cmovnp
sarl
cltd
add
stos
add
push
or
jmp
subl
or
mov
mov
pusha
data16
or
mov
leave
cmpsl
dec
xor
sbb
jmp
movsl
mov
insb
inc
or
lcall
push
cmp
das
aam
pop
imul
push
shlb
insb
adc
and
loop
add
sbb
jmp
add
lock
movsl
cli
sub
clc
movsb
dec
add
jo
popf
xorl
xor
jmp
mov
outsl
adc
sub
loop
out
shrl
mov
xchg
cmpsl
push
fwait
loop
stc
mov
jge
xor
inc
dec
cmp
ljmp
movsb
jno
fimull
xchg
push
xchg
ss
jle
loop
adc
in
jle
pop
inc
bound
xor
sbb
adc
shrl
cmp
out
aad
pushf
xchg
mov
outsb
xchg
xlat
lea
mov
and
push
inc
ficomps
inc
ja
push
rorb
push
add
je
movsb
cmp
kandw
das
outsl
jle
les
daa
adc
jp
cltd
and
hlt
btc
pop
pop
pop
xor
scas
jbe
nop
jl
adc
xchg
out
mov
cltd
xlat
fidivrl
mov
into
add
pop
push
fidivs
push
jmp
xor
jne
outsl
fiadds
mov
cmp
and
mov
cltd
int
sbb
xchg
ss
cmpsb
nop
inc
stos
jp
xchg
rolb
adc
and
je
hlt
pop
or
lods
mov
pop
and
mov
or
mov
xor
jo
pop
enter
movups
or
sub
sub
lock
leave
push
iret
call
and
push
lods
push
pop
pop
imul
mov
rorb
out
sbb
lods
xchg
and
imul
les
push
cmp
xor
stos
xchg
adc
xchg
loop
cmp
pop
mov
jnp
fwait
iret
test
sub
inc
jno
shlb
scas
cmc
and
ja
out
mov
jecxz
outsb
or
rcrb
rcll
mov
gs
cmp
shlb
push
cs
out
dec
notl
xor
subb
mov
mov
fiaddl
mov
jl
out
lret
mov
mov
stos
jp
sub
sbb
xchg
and
cmp
lods
sarb
loop
xlat
aaa
push
loopne
xchg
jmp
outsl
mov
aam
popa
das
fadd
leave
stos
outsl
lods
mov
in
lods
in
addr16
sbb
adc
ja
or
mov
mov
jmp
cmpsl
mov
sbb
mull
and
sbb
pop
add
and
sahf
or
nop
mov
jno
leave
dec
lcall
add
sub
mov
into
inc
sub
xchg
imul
adc
neg
movsl
mov
movsb
fists
je
loope
mov
faddp
pop
inc
mov
repz
push
es
push
push
sti
push
mov
lods
popa
xchg
in
out
mov
mov
inc
mov
lea
add
leave
jp
cmpsl
int
dec
dec
xor
jecxz
movsl
cmp
jg
js
sahf
push
stos
pop
cltd
mov
out
pop
inc
add
push
dec
push
xor
imul
pusha
mov
scas
sub
repnz
push
pop
into
out
mov
sub
sbb
mov
inc
sbb
adc
inc
or
ja
lcall
fldl
jle
rorb
in
ja
inc
rorb
cltd
add
sub
mov
mov
mov
inc
addr16
icebp
push
jl
push
cmp
ljmp
cmp
mov
inc
xchg
lds
cmp
cmp
fwait
push
insb
sub
into
test
lea
xchg
outsb
mov
jne
js
jp
popa
and
mov
loopne
dec
mov
test
dec
rcrb
inc
lret
push
sti
xchg
adc
mov
outsb
xor
stos
les
push
leave
mov
or
mov
shrb
dec
fwait
pop
and
jle
inc
add
sub
sbb
nop
fadds
rorb
enter
xchg
sbb
xor
mov
mul
pop
rorb
mov
clc
enter
mov
sub
xlat
sbb
push
nop
in
das
fimuls
xchg
ror
xorl
cs
push
cmp
rclb
cwtl
rclb
adc
mov
sti
dec
inc
push
xchg
sub
les
bound
dec
fnstenv
int
jmp
imul
xchg
push
pop
adc
adc
jb
xchg
pop
cltd
dec
add
imul
or
pop
int3
pop
leave
mov
sar
sub
push
cmp
repz
lods
mov
push
xor
arpl
leave
pop
insb
pusha
jne
push
rcll
xchg
jae
push
les
icebp
add
sbb
adc
js
mov
jne
int
bound
push
loope
adc
icebp
pop
dec
xor
lods
mov
push
or
rolb
sbb
sub
sub
or
aam
pop
test
int
sbb
dec
jo
out
and
sub
and
test
xchg
mov
xor
aaa
roll
ret
and
scas
sti
sahf
cmp
in
push
mov
testb
pop
cwtl
imul
jp
repz
push
cs
orl
and
pop
xor
sub
aaa
dec
push
mov
popf
adcb
jbe
lret
fmul
fs
ss
push
xchg
into
add
ficoms
into
xor
in
test
lret
push
popf
lods
jge
push
mov
inc
iret
mov
add
rcrb
jae
mov
mov
or
loope
fcmovnbe
pop
sbb
xchg
testb
es
aaa
data16
and
cmpsl
mov
or
mov
jo
cwtl
popf
or
sbb
fs
jnp
or
jae
scas
lds
mov
inc
in
jae
sbb
fildl
or
cmc
xchg
inc
loopne
inc
pop
mov
fsts
inc
movsl
xor
and
movsb
int
or
ja
jbe
adc
adc
enter
jo
sub
pop
jae
and
sub
cltd
les
xor
dec
inc
pop
lret
sbb
lock
cmp
jg
mov
mov
push
mov
adc
xor
push
insl
add
lea
mov
xor
fdivrl
push
push
out
xor
adc
inc
popf
int
mov
rolb
popa
rcr
jge
and
push
xchg
jns
test
cmp
xorl
xchg
sub
ficompl
adc
js
xor
inc
icebp
mov
test
push
jp
sub
cmp
add
push
and
jecxz
lcall
mov
add
pop
fwait
mov
jbe
iret
xchg
pop
cmc
sbb
jmp
push
insl
add
ret
pop
stos
cmp
dec
in
fstp
mov
jge
push
and
pop
cli
js
in
ss
pop
mov
dec
stc
flds
xchg
sbb
ret
inc
adc
rcll
ja
pop
lcall
xchg
adc
subb
jmp
push
xchg
adc
gs
sub
mov
push
imul
imul
jle
sti
imul
les
push
cmp
rol
lock
faddl
and
stos
dec
popf
and
ficoms
jp
xchg
and
ja
or
stc
dec
sbb
cmp
jne
push
leave
mov
pop
add
loopne
cmp
pop
insl
rorb
hlt
loopew
mov
sbb
sub
sti
inc
into
insb
call
mov
and
or
push
scas
jbe
repz
in
icebp
ret
mov
insb
inc
xor
jae
or
dec
push
mov
mov
cwtl
enter
arpl
js
and
jle
cwtl
xchg
je
dec
sub
pop
int3
out
dec
push
add
inc
sbb
ret
ja
arpl
mov
mov
dec
int3
sub
jnp
lods
mov
cmp
leave
push
fsubl
mov
clc
add
xchg
flds
dec
mov
out
lods
outsl
loopne
popl
fmuls
pop
inc
fwait
mov
out
ret
icebp
jge
adcl
sub
or
push
frstor
xchg
hlt
pusha
sbb
pop
es
mov
cltd
xchg
mov
xor
jle
xor
push
pop
call
ret
packuswb
mov
mov
cmp
scas
aas
loop
mov
loop
movsb
pop
ret
lock
or
mov
mov
stos
fwait
repnz
and
cmp
hlt
aam
daa
flds
lret
sbb
sub
inc
jo
mov
adc
sbb
add
jne
jno
or
xchg
lock
push
or
xor
fs
dec
push
and
inc
lcall
ljmp
pushf
fistpl
std
jno
aad
push
sub
das
dec
je
mov
sbb
lods
sbb
adc
push
iret
xor
cltd
mov
lods
sarl
sub
mov
in
mov
mov
mov
pop
cld
repnz
mov
lods
mov
adc
in
fidivs
mov
push
ret
push
mov
xchg
ds
es
arpl
lahf
scas
jl
js
cmp
dec
mov
jge
clc
mov
mov
mov
sbb
pushf
mov
cltd
les
int
lods
cs
pusha
mov
pop
js
jge
xchg
push
add
shrl
int3
lock
xor
jge
cmp
cmp
in
sub
xchg
scas
dec
jne
add
ret
push
adc
out
sbb
xchg
fwait
mov
add
ss
push
push
adc
add
imul
lcall
inc
sub
inc
out
jo
test
ljmp
pop
jbe
mov
or
inc
fcoml
test
mov
xchg
dec
mulb
sbb
xor
arpl
add
pop
mov
cmc
ret
sbb
cmp
pop
mov
in
mov
jmp
and
daa
and
in
lock
mov
and
xchg
rorl
stos
xor
and
rorl
inc
adc
out
orb
lds
rcrl
stc
hlt
lret
xchg
syscall
lods
mov
out
mov
inc
sti
inc
mov
sub
and
jp
addr16
pop
dec
add
lds
pop
sarl
xchg
pop
outsb
ja
mov
cld
xchg
cmp
pop
mov
out
cmp
dec
test
and
dec
out
jo
lods
inc
pop
add
icebp
mov
add
or
inc
push
ret
pop
dec
sbb
in
xchg
xlat
pop
movsb
divl
jecxz
or
jae
pop
xchg
xchg
sbb
mov
adc
in
push
fistps
xor
and
aas
pushf
sbb
xchg
add
sbb
mov
shll
adc
and
mov
sti
adc
test
jae
dec
fcompl
jg
dec
mov
nop
std
lea
mov
push
cld
sbb
insb
es
addr16
xlat
xor
adc
cltd
sub
nop
jo
xorb
jecxz
das
cmpsl
and
jg
in
push
sbb
arpl
rcrl
fxch
je
pop
inc
or
dec
imul
test
jmp
or
in
pop
xchg
sbb
ret
mov
sub
hlt
pop
jne
stc
mov
jmp
mov
iret
xchg
mulb
lods
sub
in
jmp
repz
mov
jge
adc
lock
pop
adc
adc
xchg
lods
cmpsb
fmuls
iret
push
xlat
nop
in
mov
movl
jl
pop
cmp
mov
lret
dec
repz
or
sub
or
dec
or
test
mov
and
dec
arpl
imul
les
jae
dec
sub
insb
pop
add
pop
int3
xchg
aad
popf
jno
daa
ret
movsl
mov
cmpsb
inc
push
sub
insl
sub
push
and
jle
movsb
hlt
jp
fwait
inc
in
xorb
mov
and
mov
sti
insl
mov
xchg
cmpsl
ja
imul
test
pop
mov
and
dec
mov
push
fidivrs
sbb
clc
into
jle
outsb
inc
aas
sub
data16
sub
int
add
xlat
test
xor
stc
mov
push
data16
push
ds
dec
mov
cld
loopne
cmpsb
into
fcoms
cmp
adc
jo
sub
fisubrl
xor
sbb
mov
test
push
bnd
out
push
dec
pusha
pushf
mov
mov
stos
mov
clc
lret
sub
and
dec
aaa
mov
fwait
loope
cmpsl
imulb
jecxz
adc
divb
mov
or
test
sub
cli
jge
dec
xor
gs
data16
lea
add
icebp
lahf
inc
cli
inc
lcall
and
jae
xchg
sub
lret
aam
pop
push
mov
push
js
inc
pop
mov
divb
enter
or
mov
pop
cli
dec
fdivrl
dec
roll
jae
hlt
mov
dec
subl
clc
pop
fildl
jno
xor
xchg
sub
dec
mov
in
insl
call
movsl
xchg
fsubr
imul
fisttpl
and
mov
pop
inc
dec
cld
sub
fs
mov
inc
fmull
enter
neg
and
push
xchg
shrb
mov
test
pop
fidivs
and
cmc
or
stos
jmp
sub
push
cmp
scas
cltd
adc
pop
fisubrl
mov
icebp
insb
mov
bound
rcrb
push
outsl
lahf
sbb
sbb
lea
adc
test
pop
es
adc
cli
outsb
inc
cli
in
loope
mov
cld
xor
lds
jae
add
dec
cmp
es
mov
push
and
dec
lcall
orb
arpl
ss
mov
push
cmc
jb
mov
mov
adc
mov
int
sub
fwait
js
sarl
outsb
stc
pop
mov
xchg
lcall
stos
fisubrl
fcmovb
and
mov
push
repz
push
xchg
std
mov
lahf
jmp
sti
cs
pop
or
push
enter
test
adcb
push
xor
mov
push
xlat
sbbl
loope
mov
popa
fwait
mov
jbe
xchg
bound
mov
fadd
jmp
mov
adc
ret
xchg
sbb
xchg
nop
mov
shll
xchg
jno
mov
and
mov
int
cmpsl
or
fcomps
jae
ja
mov
fwait
jns
xlat
add
mov
xchg
bound
sbb
addr16
xor
pop
pop
cmp
stos
jae
sbb
cltd
rcrl
out
and
and
xchg
mov
cli
cmc
inc
ret
int3
dec
jecxz
cs
xor
adc
hlt
xchg
pop
cltd
xchg
push
mov
into
lret
xchg
sub
aas
dec
movsb
rclb
es
lods
mov
nop
mov
ret
mov
xor
das
into
jnp
mov
mov
cmp
test
sbbb
leave
add
test
into
inc
mov
adc
cmc
mov
sub
inc
cmp
jne
push
sub
pop
add
push
aad
jmp
add
mov
aam
pop
mov
lock
push
mov
out
arpl
in
or
xchg
imul
rorb
push
jbe
in
jge
fdivrs
cmp
mov
scas
fidivrs
mov
mov
or
or
aaa
and
lods
inc
pop
cltd
fildl
push
lods
jp
int3
or
ds
xlat
push
in
stc
imul
je
mov
push
push
loopne
pop
movsl
xor
imul
inc
inc
mov
repnz
sub
add
cmp
inc
out
push
pusha
mov
cwtl
popf
adc
arpl
push
lock
or
out
subb
sub
aam
sbb
shrb
mov
sarb
movsb
out
les
inc
lcall
or
xor
mov
idivw
int
pop
sbbl
fsubl
mov
cmp
mov
mov
fcoml
sbb
in
mov
adc
jno
mov
push
fsubs
cltd
andb
lods
dec
fidivrl
lret
push
cmp
data16
add
aas
hlt
pusha
jecxz
clc
sub
lods
jae
xor
jle
mov
sub
dec
dec
outsb
cmpl
jg
jp
faddp
popf
sbb
push
or
mov
adc
inc
rolb
inc
xchg
mov
mov
add
testb
or
sbb
adc
fisttpll
inc
jmp
mov
cli
loop
lahf
shlb
and
or
iret
mov
xchg
inc
stos
dec
or
sahf
nop
out
decl
mov
cmp
mov
lahf
cmp
movsl
out
daa
movsl
cltd
or
cs
adc
xchg
imul
and
idivb
out
push
cltd
push
jnp
movsl
jae
je
xor
fnstenv
pop
shlb
jbe
rorb
cmp
dec
dec
mov
lods
shlb
mul
sub
and
push
mov
mov
jns
add
mov
mov
aam
mov
out
dec
cwtl
mov
aas
cmpsl
mov
sarb
je
test
jno
sbb
pop
push
inc
aad
icebp
nop
adc
xchg
fldenv
adc
out
sbb
fisttpll
or
loopne
imul
imul
pop
lret
lods
ret
inc
push
iret
mov
testb
lea
add
jno
xchg
stos
arpl
push
outsb
decb
sarb
mov
or
sti
sbb
cmp
adc
fwait
push
mov
loope
mov
fmul
or
inc
mov
xchg
dec
xor
mov
mov
add
sbb
fildl
xchg
sbb
mov
or
mov
push
or
test
jle
decl
cmp
orb
dec
sub
ret
mov
jns
movsb
jbe
rorb
xor
arpl
imul
inc
push
gs
add
add
push
pop
cmp
inc
add
jbe
add
fwait
add
cmp
dec
add
scas
add
sub
inc
add
add
cmp
jne
repz
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
andl
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
int3
jmp
