push
mov
add
push
push
push
nop
push
nop
ret
nop
rdtsc
push
nop
pop
cmp
jb
nop
call
push
mov
mov
mov
addl
sub
ret
nop
je
nop
nop
nop
push
call
nop
nop
nop
movl
movl
nop
nop
nop
lea
push
push
pushl
pushl
call
nop
nop
nop
shrl
mov
mov
xor
push
mov
popl
add
mov
decl
jne
nop
nop
pop
pop
pop
leave
call
call
nop
call
call
mov
xchg
popf
and
xchg
popf
arpl
mov
ficompl
sahf
jp
shll
lock
in
sbb
pusha
cmpsl
fists
jecxz
cmp
xchg
arpl
push
inc
out
dec
pop
shrb
pusha
std
jp
insl
sbb
push
sbb
cld
sbb
dec
xor
push
stos
and
enter
pop
mov
jge
xchg
popf
push
jle
push
jp
out
jp
pop
mov
popf
push
cmpl
lahf
mov
sub
sbb
subb
pop
cs
mov
adc
inc
out
jmp
pop
mov
jb
dec
icebp
sbb
sub
xor
outsb
mov
mov
shlb
stos
mov
data16
sub
popf
lds
push
ss
sbb
nop
xchg
insl
bound
out
clc
popf
cmp
mov
fsubs
jge
mov
popa
addr16
nop
pop
mov
xchg
fcomps
mov
insb
sub
push
test
out
adcb
bound
stos
mov
test
xlat
xchg
dec
sub
bound
jbe
sahf
and
arpl
sub
sbb
or
mov
jmp
adc
sub
sub
popf
push
sub
xlat
gs
jne
shrl
loope
outsb
push
adc
or
test
cmp
jns
push
and
sbb
jns
popf
sub
outsl
push
adc
push
sub
into
jne
jg
scas
flds
sbb
sbb
push
outsb
sahf
rcll
sbb
int3
cmpsl
adc
ja
xchg
push
adc
in
jnp
pop
sub
popa
imul
fsubrs
bound
or
push
adc
mov
int
lret
xchg
push
bound
mov
bound
orl
inc
mov
mov
stc
inc
inc
rol
nop
out
adc
je
loope
lods
stc
test
cmp
mov
out
pop
stos
or
aaa
inc
lods
test
fidivs
lret
lret
inc
adc
jmp
inc
xor
fcmovnb
inc
pop
bound
xorl
lret
inc
pop
out
mov
in
cmp
mov
inc
add
mov
insb
pop
mov
cmp
pop
cmpsl
jb
pop
jne
jp
in
imul
hlt
xchg
cmp
int
add
jmp
inc
add
or
ja
inc
cmp
fcmovne
inc
pop
bound
leave
sub
clc
popf
xor
inc
iret
enter
fwait
test
ds
ret
xor
mov
inc
push
sahf
testb
aas
lret
or
inc
inc
xlat
and
mov
daa
mov
clc
popf
xor
andb
inc
inc
iret
adcb
and
aaa
xrelease
in
pusha
and
lret
xor
push
add
je
clc
sub
adc
repnz
sub
or
lock
hlt
jmp
mov
or
lret
push
pop
fldt
in
dec
addr16
out
push
xchg
mov
rorb
sub
mov
inc
pop
testb
lret
xor
fs
mov
inc
testl
lock
cmp
add
je
push
aad
clc
mov
and
mov
test
clc
adc
subb
imul
aaa
inc
lods
test
ret
fs
xchg
xor
popa
jecxz
or
push
enter
inc
add
mov
inc
pop
bound
and
rolb
pop
cmp
add
inc
mov
rolb
pop
jmp
mov
aaa
lret
adc
mov
test
mov
aaa
int3
mov
rolb
pop
jmp
xor
dec
adc
rcrb
lret
mov
sbb
lret
mov
pop
xor
xchg
cli
popf
xor
test
add
insl
dec
jnp
lret
mov
pop
or
ds
lds
mov
mov
lret
inc
mov
xor
sub
and
dec
subb
pop
xor
cmp
movsl
pop
inc
repnz
inc
mov
ret
lret
cltd
jge
sub
daa
mov
frstor
mov
dec
xchg
enter
lret
adc
push
popf
mov
inc
pop
mov
lret
inc
xor
jmp
inc
or
outsl
lret
enter
jl
add
xor
out
mov
lret
enter
test
and
or
cmp
and
or
lods
jmp
lret
enter
mov
hlt
xchg
pop
test
mov
call
sub
mov
andl
in
inc
fiaddl
aas
ret
lret
shlb
xor
xor
jp
mov
mov
inc
cld
pop
and
cli
popf
xor
xlat
jmp
shlb
pop
ret
inc
jp
dec
push
xlat
dec
mov
popa
mov
and
pop
jnp
and
popf
xor
lods
mov
les
loop
aaa
ret
lret
enter
cwtl
jne
xor
inc
jne
dec
cli
mov
push
hlt
lret
enter
lret
inc
mov
psubsw
nop
out
sub
daa
scas
sti
xor
pop
lret
andb
cmpsl
lret
inc
add
outsl
inc
pop
lock
test
lret
lret
inc
in
inc
repnz
lret
inc
add
ret
lret
loopne
test
mov
test
mov
push
jmp
scas
loop
lret
inc
mov
xchg
jmp
lret
inc
pop
popa
mov
dec
icebp
push
fsubrp
or
mov
and
mov
mov
arpl
sti
inc
pop
bound
or
mov
sub
lret
repnz
push
int3
lret
sbbl
inc
sbb
popa
xchg
dec
mov
xlat
enter
mov
or
or
sub
cmc
aaa
mov
push
pop
leave
es
popf
xlat
push
mov
adc
or
fcomp
inc
or
dec
lret
stc
pusha
cs
mov
xor
lods
jb
data16
mov
mov
arpl
sbb
outsl
xlat
dec
and
inc
push
add
inc
packsswb
pop
inc
dec
xchg
push
out
inc
inc
xchg
inc
push
addr16
or
rcr
add
pop
jmp
rcrb
rol
data16
fcomps
inc
push
xor
dec
outsl
jecxz
xchg
push
xchg
push
imul
popl
inc
ja
jne
stos
std
aam
inc
push
add
or
adc
add
imul
add
sub
push
xchg
xor
jnp
jg
or
or
mov
sahf
mov
add
push
cmpsl
adc
push
add
fwait
shlb
rcll
test
ret
push
pop
cmpsl
cs
jecxz
and
fcmovnb
faddl
push
lods
out
pop
cmp
dec
outsl
add
jnp
stos
pop
dec
sbb
ror
push
inc
vandps
xor
imul
arpl
or
inc
lods
je
ret
fiadds
push
push
clc
inc
popl
add
test
insl
jle
and
mov
adc
loopne
subb
ret
adc
add
in
jecxz
mov
fisttpll
repz
mov
pop
minps
in
mov
and
pop
xor
push
das
sub
repnz
ds
push
pop
inc
lahf
rclb
ja
dec
adc
iret
inc
mov
lea
cmpb
andl
leave
pop
shrl
inc
out
insl
push
push
into
dec
mov
cmp
jmp
xchg
insl
adc
mov
push
insl
jne
repnz
push
sbb
rclb
shr
fld
cmp
jnp
es
fisttps
int
scas
mov
add
push
or
pop
test
movsl
sbb
inc
inc
xchg
outsl
ret
inc
xor
inc
addl
pop
inc
mov
shll
and
sbb
mov
push
pusha
je
shrl
mov
add
xchg
loop
rclb
test
mov
or
adc
fwait
dec
in
xor
inc
or
push
mov
and
inc
mov
std
imul
ja
rclb
mov
hlt
lret
fbld
mov
sbb
pop
iret
adc
xchg
scas
xchg
into
lock
pop
ret
inc
mov
jbe
push
out
aad
clc
inc
aad
insl
push
outsb
lret
jnp
push
add
lock
pop
js
in
push
out
mov
sub
xchg
dec
dec
fisubs
or
pop
aas
xchg
leave
adc
push
lcall
sahf
pop
cmp
ja
add
test
ss
cmp
lea
dec
outsl
ret
sub
sub
js
mov
sbb
sbb
inc
add
in
std
push
loop
in
dec
xor
out
sub
pop
loopne
mov
mov
xor
pushf
pop
and
jnp
cmp
xor
xchg
jle
rorb
mov
cltd
lahf
adc
int3
incl
or
das
repz
fcmovnb
xchg
mov
or
fidivrl
cmp
add
and
sbb
jmp
subl
sub
jecxz
movb
adc
adc
inc
cwtl
and
and
and
and
sahf
adc
jecxz
adc
xchg
adc
aam
fwait
sar
xchg
ret
outsb
seta
pop
inc
add
lods
mov
cs
sbb
add
adc
test
mov
push
jg
stos
dec
xor
gs
int3
scas
jo
pop
xchg
mov
xor
mov
push
lcall
and
and
sahf
in
dec
shlb
mov
sbb
jecxz
sbb
pop
insb
repnz
lods
pop
loope
xor
testb
inc
fsubp
mov
pop
pop
and
sti
jecxz
repz
xlat
stos
and
ja
lods
mov
popa
shll
daa
adc
mov
les
dec
cs
push
pop
mov
pop
adc
cmp
addr16
pop
dec
jno
inc
pushf
fcompl
mov
out
leave
pop
jb
push
xor
or
mov
push
les
mov
outsb
pop
or
push
fdivrs
dec
movsl
loopne
cmpsl
xor
popa
icebp
call
decl
adc
inc
jns
jle
aaa
je
ja
cmp
sbb
cli
leave
dec
pushf
pavgw
add
mov
mov
popf
jge
and
jbe
movsl
xor
mov
xchg
test
and
sbb
sbb
adc
jno
xchg
and
int3
dec
mov
mov
fidivrl
add
add
in
cmc
scas
or
ret
push
sbb
add
cmpsl
jbe
jb
push
pop
or
ror
pusha
test
inc
push
pop
ds
add
pop
or
out
jecxz
scas
jne
push
pop
into
adcb
mov
rcll
dec
movsb
mov
aas
dec
shlb
mov
xor
mov
mov
or
pusha
imul
inc
fldl
or
lods
je
insl
adcb
jns
out
mov
xor
sub
xchg
jl
ljmp
jae
add
inc
dec
xchg
xor
inc
mov
loop
bound
out
push
pop
sbb
sub
xor
roll
sbb
jecxz
xchg
sub
push
lret
cli
lea
fsubl
pop
inc
dec
lcall
push
icebp
arpl
enter
in
push
mov
cmp
cmp
pop
stos
xchg
sbb
mov
inc
sbb
or
aaa
push
sub
and
and
pop
xor
pop
xchg
dec
jno
lret
lret
add
ret
add
xchg
dec
sbb
ljmp
lea
mov
out
cmp
int
sub
mov
push
add
loopne
add
pop
lret
pop
daa
stc
or
in
pop
mov
ja
inc
bound
xchg
sbb
pop
lcall
mov
fildll
pop
cmpsb
rclb
dec
test
or
pop
xchg
xorl
cwtl
popa
jbe
sub
ret
jmp
push
mov
fwait
and
push
jb
rclb
jle
xchg
popa
ret
enter
stos
adc
mov
hlt
and
faddl
rorl
mov
out
adc
test
add
adc
inc
rorb
cmp
inc
push
pop
into
leave
sbb
test
loope
dec
xor
or
jecxz
clc
stos
imul
stos
mov
test
xchg
xlat
scas
inc
mov
xchg
adcl
xchg
aas
mov
outsb
mov
test
dec
shll
sbb
dec
xchg
add
mov
jle
je
push
xchg
jp
add
cs
and
and
jle
and
jb
dec
pop
movsl
enter
inc
push
mov
out
ret
add
dec
inc
jecxz
inc
sub
mov
mov
mov
pusha
mov
push
dec
fdivrp
imull
inc
push
pop
test
push
test
mov
dec
lds
push
jmp
stc
jb
or
push
sub
imul
jae
loope
add
adc
test
push
or
mov
add
movsb
lock
cmova
inc
and
popa
adc
cwtl
fists
inc
add
pusha
imul
mov
add
mov
sbb
jecxz
pcmpeqb
ret
addb
fcmove
mov
fildll
inc
mov
je
adc
ljmp
clc
divb
shll
push
and
and
mov
stc
int
push
and
es
jecxz
push
repnz
popf
into
stos
mov
je
inc
push
sbb
jns
dec
arpl
mov
mov
test
hlt
xchg
mov
mov
xchg
dec
mov
mov
sbb
mov
xchg
and
repnz
or
jb
leave
mov
icebp
addr16
std
iret
pop
in
pop
sbb
or
ds
dec
mov
xchg
xlat
push
daa
and
adc
push
fcomps
out
sbb
stos
jbe
out
aas
mov
cli
push
inc
cmpsb
jbe
or
daa
repnz
add
inc
cli
push
sahf
lahf
incl
and
shl
sub
mov
xor
ret
add
xorl
gs
push
push
xchg
lret
inc
enter
outsl
xor
inc
jne
mov
push
test
fiaddl
and
and
std
movsb
xor
cmp
icebp
arpl
push
lea
xchg
jb
mov
inc
testb
jmp
fdivs
pusha
test
ror
mov
pop
lret
out
or
adc
jns
inc
inc
loopne
inc
push
imul
gs
adc
lock
loopne
jmp
inc
mov
and
inc
push
adc
fstpl
or
xlat
fdivr
jb
dec
xchg
iret
adcl
sbb
aas
jl
shrb
cli
pop
out
jge
sbb
aam
cli
mov
frstor
adc
clc
rcrb
xor
test
pop
popf
cmpsb
int3
inc
out
ljmp
cs
outsl
into
xor
jns
daa
xor
arpl
int3
das
mov
mov
inc
add
jmp
dec
and
xchg
jb
icebp
dec
roll
add
pop
test
mov
fwait
mov
pop
push
movsb
xchg
pop
xchg
mov
pop
or
rcrl
daa
adc
sub
mov
in
cs
push
sti
mov
adc
dec
andb
cli
jge
cmpsb
jmp
add
or
movsl
lods
and
adc
dec
sub
icebp
cmpsl
lods
xchg
out
sub
push
popl
xchg
sbb
hlt
lret
sub
sbb
or
pop
je
addl
or
or
or
pop
xchg
cltd
sub
sub
std
repnz
imul
xlat
mov
lock
mov
pop
and
inc
dec
jl
movsb
gs
pop
aam
sahf
mov
outsl
jae
ljmp
orl
adc
cmp
mov
fmull
mov
lret
arpl
mov
jg,pt
into
addb
lock
pop
push
lahf
lcall
out
add
lods
jmp
lret
mov
jno
sbb
add
ljmp
mov
out
adcb
outsl
xchg
ss
jmp
fwait
dec
test
mov
cmp
shll
subl
lock
cmp
enter
insl
psubd
fs
xor
inc
sub
xor
adc
pop
push
jle
rcr
dec
push
jns
and
mov
ficoml
out
lret
ret
push
xlat
lea
xor
dec
xor
dec
push
and
mov
shrl
cmp
fisttpll
adc
mov
out
sub
add
call
and
xor
movsl
jl
out
inc
dec
and
fnsetpm(287
adc
pop
sbb
mov
lret
jb
or
mov
out
es
mulb
add
shlb
icebp
mov
fisubl
loope
xchg
sub
sbb
and
cmp
adc
jb
ljmp
adc
push
xor
rcrb
in
ss
cld
and
scas
popa
ror
fisubl
or
fcmove
cmp
repz
jg
jg
shrb
add
sbb
add
fidivs
das
ret
fisttps
push
aad
xchg
lret
xor
andb
in
inc
or
inc
xor
fwait
push
jecxz
mov
std
or
shr
or
hlt
or
lods
xchg
add
test
loopne
test
xchg
insl
sub
in
gs
stos
lds
ljmp
in
pop
inc
jne
sbbb
cmpsb
in
xchg
imul
les
enter
push
and
dec
mov
out
fsubl
fnstenv
out
mov
data16
cs
pop
xchg
add
pop
ljmp
mov
adc
and
sbb
cs
arpl
mov
pusha
repz
and
loope
test
outsb
movsl
adc
mov
ja
out
les
daa
push
add
in
ss
cmpl
fwait
or
pop
and
das
leave
jb
dec
cmpsl
and
push
dec
inc
inc
in
popa
xlat
push
push
into
push
stc
rcrl
fwait
add
jp
cli
inc
les
and
push
stos
mov
aaa
pop
and
sub
fldt
xlat
xchg
stc
and
xlat
push
add
mov
adc
jmp
ret
adc
and
or
xor
mov
ss
mov
jge
loopew
mov
add
stos
out
dec
out
das
rorl
push
cmp
popa
and
or
mov
push
jae
inc
push
mov
sar
mov
xorb
add
push
ljmp
mov
test
fucomp
inc
push
xor
inc
push
inc
out
sbb
sbb
mov
mov
imul
xchg
jnp
cld
rol
ret
and
inc
jae
jmp
jns
sarl
sbb
pop
push
cmp
xchg
lret
inc
shr
les
hlt
and
cltd
int
xchg
mov
cmp
inc
inc
xchg
fisubs
aad
dec
data16
test
std
mov
pop
leave
mov
push
pop
xchg
inc
sbb
mov
adc
into
cmp
loope
inc
inc
dec
inc
push
cli
mov
push
push
out
movsl
sbb
push
inc
inc
movsl
push
dec
and
mov
test
movl
cmp
scas
xchg
fldcw
mov
ret
enter
es
mov
jl
sbb
outsl
xor
jbe
inc
xlat
dec
sbb
fincstp
jbe
mov
mov
cmp
cmpsb
js
pushl
mov
std
sbb
pop
clc
mov
xor
aas
xor
xor
dec
cmc
pop
pop
or
pop
imul
inc
cmpsl
fnsave
repnz
sarl
mov
pusha
sub
dec
ud1
sahf
mov
pop
cli
jae
add
or
or
mov
fadds
vpsrlvq
jo
push
pop
mov
lods
adc
push
ret
fisubs
mov
and
add
ss
loope
dec
pop
mov
xchg
jo
in
dec
fs
add
fiaddl
mov
mov
icebp
dec
cmp
sbb
lcall
lcall
imul
divb
dec
dec
test
or
mov
loope
popf
push
mov
cs
mov
mov
rcrb
out
repz
jne
xchg
enter
inc
push
outsb
sub
into
jbe
xor
mov
fiaddl
adc
xor
fs
fwait
test
jno
mov
mov
jae
xor
add
jp
mov
call
outsl
adc
sbb
pushf
loope
orl
outsb
shll
add
dec
int
cli
xor
xorb
jne
pop
pop
lods
cli
and
pop
add
cmp
dec
jp
and
rorb
inc
iret
inc
sub
test
push
cmp
or
sbb
in
loop
cmpsb
test
push
sub
vcomisd
jno
sarl
inc
or
fwait
xchg
sub
dec
pop
push
jb
adc
rorb
mov
enter
aas
add
mov
or
std
test
inc
test
imul
js
mov
inc
mov
xchg
xchg
mov
and
pop
sub
sub
inc
xlat
adc
pop
or
sub
sub
cmp
ds
sub
int3
orl
lahf
push
inc
ja
xor
call
insl
add
test
repz
push
ja
xchg
adcb
and
sar
or
and
push
leave
xchg
push
jl
mov
and
inc
gs
or
stos
push
mov
pop
out
xor
fidivl
mov
mov
imul
sub
sub
jno
xor
arpl
mov
jmp
adc
mov
push
sbb
fidivl
je
adc
cmp
test
popa
mov
popa
xorl
sbb
pop
or
insl
or
imul
mov
xor
imul
mov
mov
cli
out
inc
mov
jo
mov
push
jle
icebp
mov
cmpsb
outsl
xor
icebp
push
dec
lock
lcall
jb
inc
and
jle
jae
popf
ror
and
clc
add
pop
xchg
jae
jae
jno
cmp
fdiv
or
xchg
mov
cmp
hlt
leave
fnstenv
into
xchg
scas
push
lock
imul
pop
pop
inc
or
lret
pop
inc
loop
popa
jae
jle
lcall
mov
pusha
out
push
jg
xchg
inc
pop
cwtl
sahf
inc
aaa
pop
fcoms
das
inc
mov
adc
dec
stos
or
inc
or
pushf
aaa
jecxz
dec
jo
repnz
sub
xorl
pop
sub
dec
rcrl
lahf
stos
fcomps
mov
jg
aam
cs
mov
sub
mov
loop
daa
das
aaa
or
fcmovb
add
shl
out
inc
gs
dec
mov
sbb
push
cmp
jmp
xchg
ss
xchg
icebp
fnstcw
pop
and
addr16
leave
outsl
insb
push
cmp
or
lcall
shl
lea
push
xchg
out
sub
jecxz
fs
repnz
add
test
sub
dec
js
sbb
loop
into
xor
adc
fldenv
dec
inc
pop
cmp
fwait
xor
adc
push
sub
mov
mov
push
xor
jns
test
leave
add
clc
cmpsb
pop
pop
sti
mov
pop
imul
sbb
addl
and
je
xor
dec
xchg
add
fs
or
shrl
push
push
add
ss
adc
das
pop
xor
in
mov
mov
adc
xlat
dec
or
add
imul
add
out
jmp
mov
mov
xchg
mov
out
pop
leave
test
adc
dec
es
jo
in
xor
inc
add
add
inc
ljmp
pop
jle
mov
std
leave
mov
push
fidivs
and
sar
mov
and
dec
loope
and
mov
or
out
jo
rcll
call
sub
jle
and
jmp
or
and
inc
pop
pop
test
cmp
loop
popa
loope
out
cmpsl
data16
call
add
add
in
inc
ret
jecxz
daa
cld
mov
pop
sub
jmp
shr
push
gs
push
dec
in
sbb
pop
loop
push
mov
sbb
fbld
lret
shrl
in
shll
mov
lods
lret
lods
les
mov
add
xor
dec
mov
or
les
inc
into
int3
lods
xchg
add
insl
bnd
mov
gs
loopne
and
pusha
pushw
js
nop
mulb
add
jmp
cs
pop
aas
filds
xlat
mov
fsubrl
push
inc
mov
sbb
fcmovb
je
bnd
out
and
into
and
dec
jmp
test
adc
pop
int3
int3
lock
cmp
in
xor
push
call
outsb
fdivr
mov
aas
lods
xor
inc
push
sahf
in
xchg
mov
nop
mov
cmp
dec
jg
in
rcl
popa
in
in
aad
push
lods
lcall
std
ret
mov
mov
and
in
sub
jge
add
shlb
mov
lea
test
ret
jb
mov
or
insb
sarb
lock
shlb
adc
aas
bnd
cltd
lret
lret
xchg
out
ret
jmp
outsb
int
add
pop
jl
sbb
fwait
lret
lcall
add
pushf
cmc
jmp
add
inc
mov
and
popa
out
int
or
sbb
cmc
scas
jge
mov
jb
or
roll
mov
add
js
push
es
lods
shl
aas
dec
mov
jmp
push
repz
or
pop
push
mov
and
mov
mov
movb
xchg
jbe
xchg
pop
dec
addr16
in
fmull
pushl
dec
mov
jne
push
lcall
sub
and
popa
ret
mov
mov
jmp
in
subb
movsb
imul
push
imul
sub
lret
adc
mov
jne
stos
jge
push
add
outsb
xchg
cltd
adc
add
xchg
je
popf
loope
pop
scas
lds
mov
fdivrs
mov
out
pop
cmp
adc
jo
call
outsl
test
pusha
fadd
scas
loop
nop
pop
xor
daa
idivl
sub
pop
xlat
pop
test
push
faddl
adc
aad
dec
xlat
add
jmp
pcmpeqw
sti
mov
enter
ljmp
or
and
pop
test
dec
jae
sbb
lret
cmp
ret
xor
idivl
pop
cmp
imul
sub
inc
jl
inc
jne
in
pop
dec
pop
lock
test
cmp
adcl
jecxz
out
push
jae
adc
push
in
sar
xor
lret
jne
int3
dec
xchg
jbe
sarb
inc
out
mov
push
mov
out
test
adc
mov
mov
outsb
popa
jmp
pop
cmpsb
jno
lcall
lods
xor
xchg
roll
ret
insb
xchg
push
cli
sub
push
popa
xor
cmp
add
add
push
stos
out
data16
imul
xchg
adc
adc
imul
or
cmp
cmp
mov
push
mov
mov
sti
or
adc
sbb
inc
xor
sbb
pop
clc
jns
push
cwtl
in
jnp
or
jmp
test
out
or
xor
inc
enter
add
icebp
push
out
mov
adc
sub
dec
in
pop
lret
adc
xor
cmp
sbbb
jle
stos
xor
sarl
sub
mov
mov
pop
push
fxtract
repz
mov
icebp
cwtl
roll
pop
add
cli
je
orl
fcompl
lds
test
sub
mov
in
js
inc
stos
mov
sbb
cmp
lea
sbb
or
xchg
ja
in
mov
dec
adc
iret
adc
les
sti
xor
push
clc
lods
pop
mov
shrl
inc
push
clc
xor
and
inc
push
jecxz
xlat
mov
popa
adc
and
test
xchg
mov
arpl
faddp
mov
out
adc
pop
int
push
mov
lahf
mov
dec
mov
dec
push
push
push
ret
jp
inc
inc
cmp
inc
and
push
mov
mov
lret
sbb
and
push
jne
clc
movsl
push
in
jns
into
lret
and
jg
hlt
enter
subl
jmp
in
xchg
lcall
sub
outsb
adc
cmp
fdiv
dec
dec
xorb
pop
jecxz
lahf
inc
jmp
adcl
aaa
test
adc
and
dec
divb
cmp
cmpsb
and
adc
lcall
inc
call
mov
jecxz
push
adc
data16
popa
mov
adc
data16
lds
sti
mov
mov
out
or
lock
dec
sbb
mov
cmp
jle
ja
addl
imul
les
push
lcall
or
jns
test
in
jg
xchg
imul
ret
push
data16
mov
les
loopne
daa
stc
dec
mov
mov
inc
rcll
ret
ret
inc
push
add
inc
aas
out
shrb
jno
jge
or
sub
insl
sub
sti
adc
and
pop
mov
cltd
arpl
inc
push
cmp
jae
inc
int3
mov
mov
out
or
and
ret
xchg
in
sti
or
and
ret
ss
cmovge
out
push
pusha
or
test
dec
adc
fcoml
ljmp
add
andb
push
ja
pop
mov
test
les
out
rcrb
incl
test
dec
lds
das
mov
lock
inc
sbb
inc
push
ja
push
sub
popa
jmp
pop
addl
mov
jle
mov
xor
mov
adc
not
sub
icebp
mov
push
lea
inc
and
lahf
push
sub
fwait
jl
inc
dec
insl
mov
mov
stos
inc
pop
sbb
rcrb
js
xchg
divb
divb
xor
cmp
cwtl
cmp
lds
inc
adc
and
mov
dec
add
pop
orb
and
jbe
out
xchg
sbb
std
pusha
pop
pop
nop
scas
lock
pop
cwtl
push
andl
xor
std
mov
ss
mov
mov
or
arpl
scas
cwtl
insl
outsl
jae
dec
stc
lcall
dec
jbe
ss
mov
daa
aas
shll
or
and
outsl
dec
push
popa
cmpsb
daa
rcl
jle
or
stos
dec
test
cmp
jg
push
dec
js
pop
arpl
pop
add
mov
push
or
mov
lds
mov
imul
mov
rcll
andb
out
addr16
clc
push
fiadds
add
inc
std
sbb
cs
and
mov
sbb
pop
jno
jno
call
and
adc
movsl
jg
shlb
add
imul
xor
push
inc
in
push
jno
or
xor
cli
jmp
loop
or
test
sub
push
dec
lock
push
xchg
sti
push
cmp
into
jns
jne
and
pop
enter
inc
xor
cmp
enter
fwait
out
sarl
test
pop
pop
into
repz
das
into
enter
inc
and
jmp
and
mov
mov
push
cmpb
roll
mov
test
jecxz
sub
pop
cmpsb
data16
lretw
xchg
or
and
jl
in
aam
ret
test
icebp
in
loope
xchg
adc
cmpb
ss
jle
popa
lds
mov
out
cmp
pop
stos
js
adc
iret
icebp
dec
mov
inc
push
add
in
into
cmp
xchg
ret
jae
push
adc
stc
jne
pop
loop
pop
lcall
pop
mov
cld
mov
or
inc
outsl
push
dec
mov
dec
cmp
jb
inc
or
cmp
pop
jl
or
hlt
dec
mov
jmp
cli
rol
jl
mov
loope
imull
sarb
inc
mov
add
jmp
test
xor
dec
out
ja
cmpsb
xor
sub
psrld
inc
jno
jg
gs
sub
js
insl
or
push
pop
je
mov
push
in
push
xchg
shll
pop
enter
dec
add
and
aam
cmp
sub
pop
dec
mov
fldt
fidivs
stos
stos
cld
inc
test
shlb
lods
shrl
mov
loopne
mov
mov
insl
push
jle
adc
pop
lret
or
sub
dec
mov
and
adcb
xchg
xchg
aaa
jmp
enter
add
jae
sbb
rolb
push
inc
mov
and
or
pop
cmp
pop
pop
jp
inc
lahf
xchg
pop
xor
dec
dec
jnp
xchg
inc
inc
rcll
roll
sbb
mov
cmp
sub
pushf
mov
jecxz
sbb
popl
stos
fldl
push
sahf
mov
and
pusha
mov
mov
clc
xchg
xor
ret
sub
test
jecxz
xchg
jp
test
or
fwait
repnz
push
mov
scas
pop
dec
push
aad
mov
xor
xlat
mov
fidivs
dec
test
mov
mov
sub
add
cmp
test
cmp
xor
scas
pop
es
sti
aad
sbb
mov
fdivp
into
shl
test
sub
sbb
adc
and
ss
jno
pusha
clc
in
daa
fs
jb
cmp
mov
mov
aas
inc
xchg
push
add
push
inc
cltd
jnp
push
lret
push
enter
dec
cli
in
mov
sbb
cli
and
aaa
outsb
out
popa
pop
test
push
mov
outsl
int
xor
movsl
int
leave
inc
dec
pop
jl
adc
mov
push
decl
shl
inc
mov
pop
lret
cmp
or
and
outsb
jnp
and
and
mov
inc
outsb
enter
ja
cmp
ljmp
ds
dec
sbb
mov
out
mov
test
test
inc
mov
in
sbb
addr16
lock
cmp
cld
push
js
jge
into
out
clc
jle
pop
mov
fldt
or
mov
jne
cltd
mov
xlat
mov
fs
cwtl
mov
mov
sbb
xchg
jmp
loop
sti
or
xor
jmp
test
push
scas
dec
dec
sarb
outsb
xlat
jmp
dec
neg
mov
adc
and
or
mov
pusha
adc
ret
pop
decl
push
mov
adc
pop
mov
or
mov
pop
cld
inc
push
sub
dec
mov
jl
cltd
movsb
inc
add
and
repz
push
inc
les
pop
rcrl
dec
mov
mov
ret
out
aad
andb
inc
add
aad
or
dec
pop
mov
mov
cmpl
fstpl
aam
aam
les
push
and
ds
arpl
loop
mov
jo
insl
cs
push
daa
mov
nop
ds
jo
push
sahf
and
cmpl
inc
loopne
aas
adc
es
mov
mov
lods
pop
jmp
popf
repz
mov
pop
fwait
xchg
imul
or
call
xor
shll
dec
aaa
xor
sub
in
mov
rclb
aaa
xchg
test
arpl
jne
mov
push
dec
xchg
out
dec
xchg
movsl
xlat
cmpsb
sarl
mov
mov
in
mov
pop
dec
pop
inc
and
jmp
sbb
stos
and
mov
orl
sar
xchg
subl
mov
sbb
sti
iret
inc
pop
insb
lcall
cmp
inc
iret
dec
fimull
jge
inc
cmp
inc
insl
and
je
bound
jmp
xor
cs
or
pop
in
inc
inc
cmp
and
nop
js
loope
mov
repz
xor
out
outsl
or
out
cli
mov
out
jbe
in
dec
negb
test
inc
out
jo
fs
sti
adc
xor
imul
and
testl
sbb
inc
dec
xor
and
push
pop
jl
lods
cmpb
jle
mov
sbb
jne
lcall
push
loope
dec
xchg
adc
mov
mov
sbb
cmpl
inc
push
push
std
inc
in
xlat
push
adc
in
sbb
aam
pop
aaa
mov
popa
add
sub
pop
pushf
adc
push
adc
inc
mov
gs
cs
in
iret
dec
jo
xor
push
jae
repnz
push
add
insb
