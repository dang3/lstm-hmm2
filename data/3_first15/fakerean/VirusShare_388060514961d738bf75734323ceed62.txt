sbb
add
mov
sbb
imul
nop
fcoms
subb
xchg
clc
and
mov
dec
mov
add
mov
and
aam
sbb
jb
and
daa
jecxz
sub
lcall
das
and
sub
lcall
inc
adc
inc
mov
inc
je
xor
outsb
sahf
xor
push
dec
jmp
fisubrl
mov
adc
xor
mov
add
xorb
mov
nop
push
push
xchg
loopne
repnz
call
dec
inc
jno
ret
js
push
push
cmp
adc
or
lret
xchg
in
add
xor
jns
jecxz
je
xchg
jno
dec
adc
jae,pt
pop
sbbb
jb
or
and
dec
push
inc
or
pushf
push
add
mov
and
js
aam
ds
div
add
shlb
in
dec
mov
dec
shll
xchg
data16
icebp
and
push
vpshld
mov
lret
sti
mov
dec
push
cmp
out
push
mov
cltd
jbe
cwtl
cmp
sbb
imul
mov
cmp
adc
icebp
sub
and
cltd
inc
insl
out
dec
cltd
loope
cmp
mov
dec
gs
rcr
lcall
jle
adc
fstps
dec
pushf
outsl
cs
ss
sarl
inc
int
cmpsl
outsl
aad
cmp
push
sub
mov
sub
jl
je
add
aam
pusha
xchg
add
scas
sar
add
mov
jo
mov
and
popl
push
sahf
enter
pop
aam
inc
jbe
push
or
out
pop
js
jbe
push
mov
or
cld
xlat
inc
gs
int3
or
dec
fisubrl
loopne
xor
xor
push
mov
mov
jle
push
movsb
out
lea
ljmp
cmc
movsl
fistps
mov
aaa
pop
into
pop
sub
repnz
cmpsb
scas
notl
inc
xchg
ret
mov
xor
icebp
mov
cmovns
bound
popf
cmc
xchg
inc
hlt
lret
push
adc
bound
xor
pushw
cmp
out
pop
xor
jg
out
cmp
push
sub
push
aam
dec
jae
sub
in
dec
mov
cmp
jo
fsubl
test
dec
lea
add
mov
or
mov
jecxz
lds
xor
in
sub
movl
inc
fwait
imul
jns
add
pop
mov
cmc
popa
cwtl
dec
and
imulb
or
sysret
in
scas
mull
push
lcall
jbe
enter
hlt
daa
pop
sub
push
jb
stc
push
in
xor
dec
repnz
and
xchg
orb
inc
mov
into
xchg
sti
pusha
jl
out
das
dec
push
insb
sbb
mov
jg
mov
mov
sbb
push
xchg
cli
jecxz
mov
aas
scas
lcall
les
and
fsubrp
shlb
popf
test
cmp
mulb
js
sbb
ja
movsl
les
lods
arpl
jb
inc
daa
int3
jl
hlt
add
pushf
mov
lods
sub
daa
xor
inc
jnp
cmp
adc
mov
pop
dec
push
and
xchg
mov
jle
mov
mov
mov
sbb
aad
mov
mov
mov
je
jno
jge
jmp
imul
aam
ds
mov
sbb
xchg
xor
cmp
in
mov
push
sub
cld
push
inc
xchg
fbstp
push
xor
jnp
aam
in
ja
repnz
out
stos
das
xor
or
sub
fxch
inc
fwait
mov
out
sbb
pop
js
dec
sar
popa
ficoms
jmp
push
push
andb
dec
dec
sahf
pop
decl
push
mov
cmp
mov
add
nop
repnz
or
push
and
inc
jns
std
xlat
mov
mov
push
and
jne
movsb
push
xlat
mov
dec
pop
mov
insl
stos
push
sub
movsl
mov
push
outsl
sub
test
inc
sub
inc
mov
cmc
imul
pop
adc
mov
jns
jp
fsubl
in
push
sbb
int3
sahf
subb
adc
or
xchg
cmp
call
add
into
test
int3
mov
shlb
push
clc
cli
imul
inc
shll
mov
and
mov
add
rcll
add
mov
sti
push
push
sarb
jb
movaps
pushf
gs
push
in
or
mov
nop
jb
ljmp
lock
imul
add
fldenv
inc
ja
mov
push
inc
jb
sbb
stos
sub
inc
lcall
mov
call
or
sub
pusha
das
jl
inc
fucompp
xchg
scas
je
or
aaa
fcoms
lods
mov
idivb
in
insl
xchg
pop
and
jecxz
ret
inc
pop
sub
cmc
jae
ja
hlt
mov
call
outsb
in
inc
mov
leave
das
adc
mov
fidivl
inc
loope
pop
inc
enter
test
das
inc
cmp
clc
sub
je
push
je
pop
pop
test
mov
jecxz
stos
push
xor
xchg
xchg
cmpsl
xchg
subb
dec
mov
jl
jmp
jecxz
ret
jmp
push
loope
idivb
dec
pop
in
cmp
ret
sub
fdivrs
loop
pop
pop
pop
jecxz
sahf
xor
adc
or
iret
dec
push
mov
pushl
mov
and
mov
mov
xor
sbb
mov
sub
or
mov
dec
ljmp
inc
sbb
mov
and
popf
mov
das
lods
cli
rcrb
test
dec
fcompl
add
pusha
pop
fidivl
mov
push
inc
mov
clc
mov
or
dec
mov
and
add
push
add
aas
stos
cmp
add
mov
jo
jecxz
push
inc
lea
mov
sub
and
xchg
sub
dec
pop
jge
xor
repnz
repz
sti
sbb
enter
dec
mov
or
jno
fmuls
inc
push
jg
cmovnp
lock
inc
call
dec
mov
fs
lods
jmp
push
aaa
das
push
movsl
pop
pop
std
sub
and
js
mov
dec
sbb
aam
dec
and
pusha
fs
stos
dec
out
inc
jg
in
pusha
hlt
push
test
mov
jp
jns
dec
and
jae
dec
and
es
mov
or
push
aas
cmp
mov
sub
movsb
adc
inc
mov
outsl
pop
dec
dec
dec
in
xchg
pop
cmpsb
mov
sbb
xchg
pop
mov
dec
inc
into
push
shl
loopne
pop
in
rorl
in
jmp
leave
shl
and
imul
sub
js
or
jmp
aas
push
loope
lret
pop
mov
call
scas
adc
mov
dec
push
inc
daa
movsb
xchg
xor
pop
popf
pop
sub
xchg
or
adc
stos
jge
in
imul
movsl
adc
mov
sbb
xchg
pushf
aas
pop
fcmove
and
pusha
mov
dec
add
testl
aam
aaa
sti
sarb
jnp
test
sub
ficomps
mov
adc
icebp
pop
popf
push
sub
xchg
push
dec
lahf
and
sbb
leave
into
mov
in
cs
mov
fcmovnbe
pop
lea
adc
and
sub
pop
push
mov
or
outsb
sbb
into
lea
stc
add
or
fidivl
data16
pop
test
imul
enter
xchg
push
les
dec
or
sub
jle
cwtl
fstl
cmp
sub
push
xchg
pop
or
and
pusha
jecxz
loopne
dec
iret
pushf
push
mov
test
and
clc
mov
and
cld
pop
mov
or
decl
dec
jo
mov
mulb
pushf
and
in
out
xor
ss
gs
mov
cs
jnp
jno
and
and
cmp
adc
xor
testb
daa
sub
mov
aas
inc
sub
call
repz
push
dec
xor
orb
cmp
mov
je
sbb
movsl
pushf
xchg
push
push
repz
aam
leave
jle
mov
out
pop
outsb
push
cwtl
cmp
insb
lret
call
lahf
mov
cmpsl
mov
xchg
lods
dec
mov
cmp
out
daa
xlat
test
in
and
shrl
jnp
lret
pushf
pop
add
clc
or
stos
add
stc
shr
xchg
fcoms
inc
pop
and
scas
cmp
insl
sti
pop
xchg
test
inc
out
daa
cld
sarb
fmull
dec
in
mov
out
or
gs
in
push
and
stos
scas
lods
test
add
sbb
rcll
sub
sbb
icebp
in
inc
mov
push
xor
subb
sub
mov
dec
outsl
in
add
mov
ret
in
test
loopne
inc
les
imul
arpl
fcom
jmp
pop
push
jb
mov
pop
jnp
js
cltd
repnz
and
and
xor
adc
fsubs
push
sti
mov
or
mov
pop
notl
mov
inc
enter
cltd
sbb
iret
cltd
mov
add
cmp
xchg
jmp
test
test
notb
cmp
test
les
and
mov
mov
pop
aam
xorl
int3
lcall
into
sti
xor
pushf
jge
pop
xor
jl
cwtl
adc
nop
lds
xchg
mov
testb
ret
add
jnp
into
adc
mov
sub
cmc
shlb
hlt
stc
fldcw
push
jo
les
test
cmp
dec
dec
ret
ljmp
pop
adc
inc
in
imul
test
mov
dec
pushf
inc
hlt
fidivs
sub
xchg
xchg
jmp
shll
pop
lock
and
sbb
xchg
lock
setne
out
xor
les
in
scas
add
hlt
cmp
xchg
adc
xchg
pop
dec
aaa
int3
push
inc
mov
dec
pusha
dec
or
cmp
xchg
aad
or
sbb
inc
cmp
sbb
aad
mov
push
int
aad
ss
cs
iret
xchg
test
in
bound
add
xor
daa
dec
stc
jne
inc
mov
and
fsubrs
mov
sub
mov
stc
jbe
and
xchg
cmpsl
mov
add
adc
pusha
sub
into
sahf
imul
loope
sub
or
std
lock
pop
sub
sarl
lret
loope
andl
loope
or
in
inc
mov
push
push
sahf
popa
sub
dec
jge
fsts
mov
jns
inc
stos
mov
xor
xor
or
jg
int
cmpsb
pusha
insl
jo
xlat
xchg
or
sub
ja
and
fistl
mov
push
int3
pop
pop
xchg
sarl
in
pushf
push
pop
mov
addb
adc
aaa
sub
dec
lret
insl
sarb
repnz
cmc
adc
pop
sbb
dec
sbb
add
add
pop
mov
xchg
push
test
cli
pop
hlt
jb
cmp
les
dec
shlb
roll
aam
xor
xchg
mov
sbb
iret
fistpll
mov
lar
aad
nop
lds
cmp
sbb
jno
mov
xchg
add
xor
xor
hlt
cmp
out
lahf
or
xchg
dec
xor
or
mov
sbb
xor
xchg
cld
ret
cmpsl
dec
mov
add
jecxz
mov
add
ja
or
in
loopne
jns
bound
mov
pop
leave
jno
jno
out
jno
push
cmp
shll
sbb
jbe
ret
adc
lret
mov
pop
push
jae
push
inc
xor
mov
add
sub
pop
movsl
and
push
mov
jb
loopne
push
xchg
das
outsl
push
test
push
stos
in
cld
mov
scas
int
adc
ljmp
add
xchg
cli
mov
jns
int3
add
pop
loope
std
pusha
mov
iret
mov
push
xorb
scas
mov
in
xor
xlat
sbb
jle
mov
aad
inc
hlt
clc
inc
rclb
cli
pop
add
outsl
and
push
cs
pop
daa
int
mov
mov
mov
ds
shl
popf
pop
lcall
nop
xor
cwtl
xchg
aas
mov
out
jle
sub
adc
add
dec
mov
sbb
outsb
sbb
push
fxtract
inc
in
mov
xchg
mov
in
sbb
mov
dec
mov
dec
inc
shll
sub
mov
dec
ljmp
xchg
test
xchg
rolb
lcall
rcrl
push
out
adc
jl
or
imul
loopne
scas
inc
inc
sbb
inc
dec
mov
scas
popa
push
test
jg
cmc
insl
inc
pop
mov
jmp
xor
aas
sbbl
jecxz
xor
idivl
push
scas
mov
or
sbb
mov
add
and
pop
sarl
pop
lret
dec
and
mov
lock
and
mov
and
add
jns
test
lahf
int3
or
sub
rolb
adcl
xorb
test
jcxz
lea
jg
lods
xor
adc
mov
mov
xchg
insb
inc
das
mov
mov
in
jb
push
cltd
outsl
pop
xchg
data16
add
movsl
test
neg
cmp
sbb
push
inc
lods
pusha
jle
cs
je
addr16
jo
dec
dec
mov
mov
add
lock
imul
mov
test
rorb
push
repz
mov
shll
and
and
push
jae
jne
push
test
fcomps
lahf
fildl
fstpt
xor
push
or
fisubl
fbstp
xor
dec
adc
sbb
mov
decb
shl
popf
jne
gs
pusha
sub
xor
mov
xchg
sti
xchg
xor
add
in
mov
ljmp
outsl
test
pop
into
pop
inc
lds
mov
pop
outsb
test
loope
stos
pop
pop
sub
mov
push
jecxz
call
stos
cmp
daa
xchg
and
insb
lahf
insb
sbb
dec
lods
movsl
inc
pop
stos
or
pop
pop
cmp
pop
lcall
test
test
into
push
es
insl
jmp
cmp
add
mov
sub
leave
out
jno
in
pop
add
adc
or
shlb
inc
mov
mov
cmpsb
cltd
outsb
stos
fmull
stos
sahf
inc
mov
lahf
bswap
mov
sub
sahf
in
dec
fwait
test
das
sub
jno
cmpsb
test
add
jmp
inc
aas
in
pop
fucom
psubsb
stos
sahf
movsl
dec
dec
mov
in
arpl
add
pop
scas
pop
inc
jb
dec
cmpsl
xor
fst
dec
mov
cmpsl
sub
sub
cmp
xor
push
int3
cmpsl
lret
icebp
in
mov
test
dec
mov
mov
cmp
enter
xchg
inc
mov
cmp
cwtl
rcrb
movsl
sbb
and
xchg
and
push
sti
into
enter
in
push
out
int3
jno
jno
lock
jmp
loopne
movsb
sbb
and
xor
xchg
scas
jge
add
jnp
movsl
sbb
pop
push
and
cmp
cli
and
mov
pcmpeqb
jno
mov
mov
mov
adc
idivb
dec
scas
xchg
repnz
jp
dec
lret
jo
pusha
inc
decb
add
cs
mov
stc
fists
cmp
adc
or
inc
sub
jmp
push
and
or
pop
je
inc
ret
sbb
out
outsb
lods
mov
xor
sub
int3
loop
adc
testl
jmp
mov
xchg
dec
xchg
insb
insb
std
dec
stos
loope
or
dec
call
jnp
xchg
jne
add
cmp
sub
sub
ljmp
repnz
ja
aam
mov
stos
sub
aam
mov
inc
mov
jns
dec
je
iret
int
sarl
repz
fisttps
sti
sub
or
loop
sbb
movsb
adc
jnp
push
xchg
ds
xor
gs
test
test
subl
aaa
sub
cmpsb
push
and
adc
rolb
outsb
cmc
lahf
mov
mov
inc
cmp
jno
stos
jno
and
sub
nop
sbb
jne
cli
aam
popf
in
repnz
int3
sbb
lahf
pop
sub
mov
push
sbb
xchg
int
mov
rcrl
testb
mov
inc
jnp
out
jecxz
sub
inc
iret
std
test
inc
bt
jae
pushf
lret
repz
mov
ljmp
in
jmp
int3
push
or
lods
mov
mov
mov
out
sub
es
push
cmp
mov
fldenv
mov
pop
adc
popa
push
test
mov
imul
pop
test
insl
xchg
mov
cli
lods
pop
in
int3
push
mov
push
mov
popf
out
xchg
push
mov
mov
xor
in
adc
shrb
enter
dec
mov
mov
adc
outsl
mov
loopne
ret
pop
add
and
xchg
or
push
adc
loop
ficomps
adc
insl
adc
mov
mov
mov
sub
cmp
stos
pop
roll
sbb
xchg
sti
and
lret
subl
mov
stos
pop
add
pop
punpckhdq
mov
xchg
jmp
jp
push
filds
dec
aam
mov
lods
shlb
gs
push
xchg
dec
aas
xor
push
ja
pop
sti
jne
ss
stos
iret
mov
scas
shll
sub
sbb
xchg
test
dec
add
hlt
pop
lret
enter
pop
sub
fidivrs
data16
push
les
lods
xor
mov
lret
int
out
mov
or
dec
dec
lods
cmc
jl
xchg
inc
mov
out
sahf
imulb
xor
movsb
mov
addl
cmc
loop
mov
pop
test
xor
shr
test
and
cmp
or
sahf
jp
fadd
ret
fcmovnb
ds
cmp
xor
scas
push
push
xchg
ret
dec
dec
out
outsl
push
mov
cmp
jle
pop
adc
enter
xchg
inc
push
adc
push
mov
insb
aad
sub
iret
nop
imul
mov
repnz
adc
repnz
and
jecxz
outsl
add
lods
jae
jmp
ret
xchg
insb
fwait
iret
mov
rclb
mov
shll
pop
and
arpl
push
cld
roll
and
push
mov
jae
ret
dec
pushf
mov
out
aas
lods
sbb
lds
repz
mov
imul
movl
cld
hlt
fcomps
pop
aad
mov
xlat
aaa
push
nop
jg
fmull
lahf
in
shr
push
lahf
cmp
xor
xchg
mov
popa
or
add
or
aam
sahf
cmc
imul
mov
push
outsb
jl
sbb
xchg
sbb
push
iret
mov
popf
xchg
jmp
or
mov
test
jbe
lea
subl
bound
fwait
pusha
arpl
mov
addb
cmp
xor
or
fidivs
add
mov
ss
mov
xor
or
inc
xor
xchg
cmp
push
and
leave
mov
incb
and
call
push
idiv
sbb
xor
dec
shrb
rclb
lock
push
movsl
inc
int
xchg
outsl
scas
call
xor
mov
jbe
imul
jno
dec
ret
mov
cli
ljmp
mov
aam
lahf
icebp
add
je
popf
iret
xor
setge
sbb
or
cmp
adc
arpl
cwtl
push
roll
test
sub
ret
push
push
push
add
sub
mov
mov
xchg
jmp
outsl
cmp
xchg
stos
ds
jp
push
out
push
or
sbb
adc
in
andl
jmp
xchg
in
nop
xlat
sbb
test
mov
push
addl
inc
inc
cmp
fldz
jo
dec
xchg
lock
fcos
ja
sbbl
and
add
outsb
pusha
mov
inc
mov
dec
test
in
mov
lret
xchg
jo
mov
ss
daa
inc
cmc
mov
psubsw
jmp
cwtl
jo
loope
and
hlt
jl
daa
mov
sbb
xor
xor
outsb
xor
cmp
gs
pop
test
mov
push
jle
inc
std
lds
sbb
cmp
push
test
and
pop
inc
xchg
inc
xorb
adc
popf
xchg
xchg
fwait
sub
insb
and
aas
xchg
sbb
loopne
xchg
or
sbb
lret
jns
push
mov
lods
push
push
sub
jb
int
aaa
ret
mov
rclb
int3
into
fistps
sbb
pushf
inc
je
mov
sub
dec
divl
jle
add
push
leave
push
mov
fsubrl
and
pushf
fs
lods
int
add
lret
fs
mov
inc
in
cmove
mov
dec
lcall
test
jge
push
push
test
mov
mov
es
pextrw
jg
dec
push
cmp
push
jns
pmulhw
lea
xor
mov
sahf
mov
aam
pop
pushf
lcall
jmp
mov
lods
jg
fstps
int
or
pushl
les
jb
in
mov
cmpl
xor
mov
test
adc
and
pop
nop
lcall
loopne
ret
pop
out
fs
shlb
out
sahf
stos
lods
movsl
in
popa
pop
sbb
out
sub
push
pop
bound
cmp
jge
inc
pop
sub
push
jno
ss
push
jp
xor
mov
jle
movsl
test
aaa
mov
pop
dec
mov
test
mov
mov
mov
xor
add
les
repnz
jno
sbb
mov
sub
popa
roll
jle
dec
cmp
mov
mov
clc
lds
ret
cli
fadds
pop
ds
test
jp
sub
lds
aaa
fs
mov
xor
test
pop
pop
push
adc
or
mov
bound
sub
into
mov
aas
add
jne
cmc
iret
clc
rcr
push
test
mov
mov
scas
aas
cmp
cmpsb
push
mov
push
mov
mov
dec
enter
push
mov
jns
push
into
aas
jne
pop
xor
out
mov
cs
mov
sbb
adc
outsl
mov
push
out
in
mov
outsl
jl
scas
int
sub
xor
arpl
lds
add
mov
shll
pushf
add
xchg
loop
cmp
hlt
lret
add
movsb
int3
and
mov
pop
shl
dec
xchg
test
cmpsl
dec
aas
pop
lret
xchg
fcmovu
jle
xchg
cmp
mov
add
mov
popf
sti
aas
fwait
enter
xor
xchg
jns
in
imul
dec
dec
push
es
cmpsl
xchg
fwait
testb
mov
jmp
loopne
pop
inc
fcmovnu
or
lea
inc
sbb
stc
xor
mov
imul
addr16
pop
mov
idiv
fisubrl
mov
mov
dec
add
mov
push
push
jg
pop
ljmp
mov
cmc
jae
arpl
cwtl
xchg
pop
jbe
into
in
loopne
sbb
jmp
sub
out
mov
aad
mov
arpl
test
out
outsl
and
or
adc
add
xchg
cmp
inc
lahf
lret
push
sbb
jecxz
nop
test
or
nop
mov
pop
rorl
aaa
xor
aaa
jns
inc
jecxz
outsl
int
fldl2e
mov
push
loope
add
sub
sub
insb
aas
jno
sbbl
lods
stos
imul
lds
and
adc
lret
pop
pop
xchg
lahf
data16
testl
shrb
push
popf
or
clc
andb
sub
mov
data16
ljmp
popf
jg
pop
nop
das
stc
add
in
xchg
in
arpl
mulb
cmp
push
js
add
dec
mov
add
out
imul
stos
dec
add
jl
sub
mov
dec
test
les
xchg
in
outsl
loopne
insb
sub
xchg
jnp
ret
pop
daa
mov
mov
aaa
rorb
mov
add
stos
add
fistpl
ret
outsl
lret
sbb
sub
mov
imull
test
scas
xor
fdivrs
idivl
inc
adc
pop
fwait
sbb
xchg
mov
fistpl
js
jne
clc
and
xchg
push
mov
cmp
dec
scas
or
icebp
rcl
ja
jno
call
push
pusha
int3
stos
pop
cli
into
mov
sub
dec
sbb
mov
inc
mov
sets
imul
arpl
add
mov
pop
push
rorb
dec
out
inc
inc
lcall
dec
aaa
enter
daa
fbld
push
sti
xor
daa
cmpsb
shufps
push
or
xor
fsubl
cmp
push
jo
push
mov
cmpsb
jno
sbbb
ljmp
cld
jmp
mov
mov
data16
pop
and
sbb
adc
xor
add
sti
negl
sub
gs
cltd
subb
lahf
aaa
inc
xor
sti
xor
push
xchg
adc
adcl
aas
int
push
push
mov
and
ret
add
pop
cmpsb
mov
push
mulb
sbb
ret
popa
jo
nop
daa
or
leave
jmp
xlat
push
pop
add
lahf
pop
mov
mov
jo
adc
lret
hlt
push
movsl
outsb
aas
mov
adc
mov
hlt
repnz
adc
pop
or
call
rolb
pusha
cmpsl
pusha
lods
shll
mov
aam
mov
outsl
imul
mov
frstor
loop
pop
pushf
test
shrl
jl
sub
mov
dec
aam
flds
das
sbb
ret
sub
test
adc
push
lcall
sbb
jecxz
push
lea
ja
pop
sahf
sarb
es
aaa
sub
fcomp
mov
or
rcll
popl
mov
iret
ret
pop
sbb
mov
sub
add
repnz
and
hlt
jp
xor
xor
jb
or
cmp
mov
xor
mov
mov
imul
pushl
call
sub
mov
cwtl
pushf
ficoms
cmp
sahf
or
data16
jnp
adc
xchg
xor
push
mov
jmp
cmpl
pop
xor
je
push
dec
scas
pop
fimuls
testb
inc
in
jbe
sbb
and
dec
insl
pop
fisttps
iret
add
jae
dec
lods
mov
xlat
pop
mov
ja
out
mov
mov
rol
loopne
lret
shlb
out
in
push
adc
inc
xchg
cmpsb
test
rcrl
hlt
inc
jae
sbb
cmp
loopne
cmpsb
fcompl
adc
dec
jb
xor
shl
push
shrl
pop
cld
repnz
xor
fcoms
mov
ffreep
push
cli
ret
sub
and
dec
cli
data16
pop
fimull
scas
aam
push
in
mov
xor
int3
lods
pop
insl
movsb
movsb
out
out
es
fwait
add
jp
mov
mov
jo
mov
jne
pop
dec
outsl
movsb
push
ret
mov
and
cmp
xor
xchg
jno
and
mov
xchg
xor
mov
lods
cmpsb
clc
fucomi
xchg
test
lahf
xchg
add
loopne
iret
xor
sbb
or
xchg
mov
ret
xor
adc
and
jmp
call
mov
gs
sbb
dec
call
mov
jl
cmp
rclb
mov
inc
cmp
repnz
lret
push
shrb
mov
daa
cld
in
scas
addr16
outsb
inc
aad
mov
repnz
mov
add
pop
fs
fisubs
pop
movb
lcall
dec
pop
xor
mov
jmp
xchg
lea
insb
adc
test
mov
ds
cmovp
adc
and
idivb
cmp
inc
das
pop
mov
inc
push
cmpsl
cmpsl
xchg
or
lods
in
push
mov
leave
and
pop
jp
popl
test
xchg
dec
jle
js
sbb
dec
in
test
pusha
push
rcl
jo
xchg
arpl
lret
xchg
cmp
xor
or
lods
mov
outsb
je
pop
xchg
and
int3
in
mov
in
push
jns
cmp
xorl
in
mov
ret
push
addr16
cmp
pop
das
aad
adc
push
sub
dec
sbb
adc
ret
imul
popf
mov
aad
mov
ret
divb
mov
in
push
sub
jnp
push
and
cmc
lret
push
arpl
add
adc
dec
xchg
sub
int3
aad
jae
ret
xor
mov
mov
adc
mov
popa
rorb
pop
inc
js
mov
add
mov
push
pop
popfw
and
xor
push
lahf
jge
fwait
inc
cmc
fsubs
sub
andl
push
inc
cmc
xchg
mov
popf
mov
lods
push
out
jno
rolb
sub
and
dec
call
cmp
cmp
cltd
jl
mov
int3
mov
stos
int
xchg
dec
shrl
test
sahf
popa
and
int
movsl
dec
cs
aas
pmulhw
test
jle
into
cmpsl
push
inc
data16
lock
mov
adc
loopne
cmp
push
cmc
out
sub
jg
and
xorb
mov
xor
leave
cmp
or
push
dec
enter
sub
fidivs
subl
mov
lock
fcmovnbe
faddl
out
mov
roll
push
xchg
outsb
sub
movsl
in
mov
pop
push
cmpb
out
mov
inc
sbb
dec
mov
mov
movsb
out
addb
xchg
pop
sti
push
mov
jle
xchg
xor
aad
push
cltd
int3
mov
je
jle
ficomps
jns
or
push
sti
loop
out
adc
das
popf
sti
xor
ror
insb
jo
add
rorb
mov
mov
sbb
cmp
add
repz
mov
sub
mov
mov
mov
xchg
rcrl
test
lret
sub
pushf
jmp
adc
stc
mov
sahf
mov
aaa
xor
mov
sub
sbb
cld
test
jecxz
jle
repnz
and
stos
lods
std
jns
and
jnp
ret
dec
subb
xor
aad
inc
jmp
inc
fninit
and
adc
inc
dec
add
cmp
scas
test
pop
sbbb
and
cmpsl
sub
imul
icebp
sub
sub
imul
data16
mov
lods
xchg
pop
inc
jb
adc
sbb
lock
enter
cmp
rcl
cmp
mov
push
jnp
jns
dec
lret
push
mov
pop
xchg
xchg
push
pop
insl
xchg
out
in
push
xor
fs
clc
mov
pop
dec
ds
test
add
and
in
cmp
notb
xor
jb
mov
loopne
bound
and
cltd
add
add
pop
pusha
xchg
xlat
jmp
or
adc
xchg
mov
adc
fcmovnbe
xchg
mov
das
jecxz
add
insb
je
fadds
push
mov
negl
sbb
in
adc
mov
mov
or
dec
pop
cmp
movhps
cli
pop
sub
mov
xchg
mov
test
pusha
jne
mov
loopne
movsb
xchg
mov
icebp
cs
push
mov
gs
xor
cwtl
stos
xchg
xor
push
lahf
in
pop
xor
dec
daa
inc
lret
popa
mov
mov
cmp
test
mov
pushf
adc
xor
jecxz
inc
xchg
add
loop
in
bound
mov
je
xchg
dec
mov
arpl
ret
stos
out
pop
jb
sti
xor
jno
sbb
pop
movsl
test
imul
mov
loop
in
outsb
jno
inc
jno
sarl
mov
jg
sbb
mov
mov
ss
repnz
stos
shrl
jne
jne,pt
jne
outsl
shr
inc
sahf
aad
cmp
aaa
loop
adc
pop
ret
movsl
testb
pushf
sbb
jae
les
pop
dec
push
push
loope
jl
adc
or
mov
mov
mov
popf
nop
nop
mov
ljmp
addr16
popa
ret
mov
cli
ss
mov
pop
mov
cmp
cmp
mov
inc
jle
cwtl
std
jmp
jmp
sbbb
or
mov
fwait
movsb
pop
add
js
jmp
cmp
pop
jl
pop
fsts
mov
xchg
pop
push
push
ja
adcl
xchg
lret
cmp
hlt
ja
insl
jns
push
jl
scas
mov
data16
dec
stos
lret
test
imul
inc
daa
enter
push
repnz
popf
mov
mov
push
aas
mov
dec
lcall
add
add
inc
pop
mov
popf
jo
sbbb
push
shll
dec
push
repnz
outsw
sbb
jmp
add
mov
pmulhw
sbb
cmp
loopne
lret
mov
fsubrs
es
inc
pop
xorl
mov
repnz
inc
add
gs
inc
jne
pop
dec
ret
andb
ret
fisttpll
fisubl
not
fisubl
push
sbb
inc
push
mulb
push
pushf
sbb
fwait
scas
push
jecxz
jne
inc
enter
adc
push
movsl
mov
push
pop
pop
xchg
inc
dec
aas
pop
mov
scas
xor
mov
popf
jnp
orb
mov
dec
rorb
jp
xchg
sub
jbe
push
xchg
xchg
ret
inc
push
sbb
fldt
dec
mov
insb
jae
push
cld
stos
pop
mov
aad
and
add
mov
ret
sbb
leave
arpl
dec
xor
into
push
fiadds
inc
cmpsb
fs
int3
sub
inc
fsub
jmp
imul
jbe
sub
and
mov
and
jbe
das
cmpsl
mov
dec
mov
mov
dec
or
pop
adc
jl
add
xorb
fnstsw
cmc
push
repnz
push
rclb
push
jo
pop
adc
push
in
nop
push
in
mov
cmp
test
fmuls
repnz
mov
ret
pop
lret
mov
pop
stos
cmp
adc
cwtl
mov
dec
movsb
push
mov
sbb
inc
dec
fdivrs
xchg
shll
ret
rolb
js
sti
arpl
repnz
jo
imull
adc
bound
sbb
je
mov
xor
lret
ja
mov
mov
push
ja
or
hlt
pop
xor
mov
rcll
daa
lea
test
jae
clc
xor
dec
mov
scas
inc
stc
into
dec
dec
mov
cmp
fucomp
adc
dec
adc
add
inc
dec
shlb
sub
xchg
stc
add
repz
sub
inc
add
xor
jno
fadd
insb
movsb
pop
xor
lods
xor
scas
or
mov
sti
xchg
pop
popw
xchg
inc
xor
scas
in
aas
or
adc
and
pop
push
sarb
sahf
repz
test
push
dec
lods
or
inc
mov
adc
loopne
lcall
mov
jo
enter
xchg
mov
adc
mov
inc
or
sub
mov
push
cwtl
jge
enter
jecxz
jns
jo
mov
cs
addr16
js
das
adc
enter
stos
out
imul
jmp
cmp
pushf
push
cwtl
mov
cs
jle
int
inc
sbb
sub
push
out
lods
pop
sbb
sbbl
jl
in
inc
xor
xchg
push
into
flds
jne
sti
ret
jp
testb
arpl
jo
push
pop
cmpsb
sbb
je
cmpsl
mov
and
cwtl
fcomi
test
ret
fwait
pop
lcall
scas
xchg
rolb
leave
mov
in
lret
stos
aaa
jbe
sbb
jne
jecxz
rol
inc
dec
mov
xchg
mov
add
icebp
shrl
int3
int
lock
arpl
icebp
fstp
sarb
cltd
pop
mov
gs
mov
enter
sub
mov
imul
add
rcrl
ds
xchg
repnz
add
xor
xchg
xor
jmp
imul
mov
dec
xor
or
dec
iret
mov
or
push
stos
mov
adc
mov
pop
or
outsl
scas
dec
pop
cli
ffreep
fadds
sub
xchg
mov
fldt
push
xchg
jnp
adc
or
xchg
sbb
andb
in
sbb
cmc
lcall
inc
pop
xchg
aad
or
test
or
and
imul
lods
iret
dec
rcrb
rcll
pop
fs
mov
ljmp
and
loope
int3
add
and
dec
adc
hlt
in
push
adc
or
pushf
and
add
outsb
xchg
pop
bnd
arpl
lock
mov
repz
inc
stos
xchg
sti
or
xchg
adc
adc
adc
mov
les
sarl
out
or
dec
repnz
js
jns
pusha
ret
dec
pop
adc
jle
bound
aad
lahf
adcb
repz
mov
xor
or
pop
and
enter
mov
adc
inc
dec
scas
or
in
xchg
sti
test
insb
sbbl
xor
mov
push
jl
stc
push
xchg
inc
popl
and
jle
nop
sub
and
xchg
adc
jne
data16
xchg
push
sbb
adc
adc
mov
es
push
push
nop
movl
cmc
repnz
ss
lahf
rorl
jp
es
loope
js
mov
and
imul
sbb
mov
or
xor
scas
imul
scas
inc
aaa
shlb
popf
or
lret
in
push
lcall
in
lcall
xlat
cmp
bound
gs
stos
shl
jb
push
and
cmpsl
pop
push
pop
imul
jge
and
imul
inc
pusha
fdivl
pop
sub
mov
mov
insl
arpl
adc
add
les
mov
adc
jno
shl
mov
mov
xchg
repnz
or
imul
or
push
xchg
das
cltd
es
je
das
xlat
cmpl
stos
xlat
xor
pop
iret
adc
movsb
push
cwtl
jl
pop
mov
jne
jg
xchg
xor
pop
or
mov
jmp
rolb
sbb
mov
repnz
cli
push
jl
xchg
pop
mov
ljmp
push
gs
or
jno
jecxz
adc
dec
sbb
xlat
or
jmp
mov
or
add
pop
scas
dec
cmp
inc
and
cmp
or
sub
pop
daa
or
push
cmpsl
jo
jg
fldcw
dec
sti
in
cld
dec
or
sbb
pop
js
adcl
out
je
ja
lods
test
ljmp
cmp
or
and
das
icebp
push
cli
inc
lret
lock
movsb
inc
stos
fcom
loop
xor
cs
and
inc
jl
movsl
aam
scas
push
push
jmp
fs
pop
dec
push
sub
pop
adc
sbb
movsb
sub
and
rcr
aam
xor
mov
adc
lods
cwtl
ret
sub
out
inc
sub
and
sti
jl
loop
sub
xor
jns
fwait
ljmp
cmp
xlat
adc
dec
pusha
ret
add
push
push
orb
pop
roll
aaa
in
aaa
daa
mov
xchg
loope
mov
jecxz
adcb
cmpsb
push
pop
test
into
mov
ds
fiadds
movsl
mov
je
push
sub
pop
adc
cmc
mov
jmp
icebp
add
xchg
mov
or
and
or
push
ja
sbb
les
jns
ja
adc
testl
and
test
int
jbe
add
jno
dec
sub
jne
je
mov
sbb
js
or
inc
cli
add
and
ds
cmp
or
sub
mov
jbe
dec
xchg
pop
push
pop
mov
mov
sbb
lret
fsubr
pop
lock
pop
enter
jb
lcall
mov
mov
push
mov
enter
aam
sub
loop
lods
xor
int
push
jno
adc
daa
mov
ret
rorb
sub
enter
sub
mov
imul
rolb
pop
jl
lret
inc
clc
xor
mov
inc
cmp
test
lret
jmp
std
and
gs
daa
xor
push
test
out
mov
stc
jge
mov
js
and
dec
push
xor
insb
jle
jbe
shl
clc
lret
inc
pop
adcb
sbb
bound
xor
mov
clc
or
and
int
add
scas
cmpsl
addr16
mov
pop
fs
cmc
cmp
orb
jl
ds
negl
icebp
aad
push
ja
jp
cmpl
jae
push
cwtl
pop
mov
mov
test
dec
cli
push
lret
cmpsl
fsubrs
scas
pop
daa
cltd
mov
imul
loop
imul
filds
repnz
test
cmp
adc
sbb
xor
dec
aam
pop
icebp
jae
mov
jo
je
xlat
cmp
lea
sub
inc
aaa
sbb
stc
push
xchg
push
shrb
subb
loop
popa
pop
mov
aaa
ss
inc
xor
jns
repnz
loope
daa
les
ficoms
jns
shll
testb
add
or
clc
inc
or
lss
jae,pn
inc
fmul
inc
bound
inc
jnp
movq
jb
jge
pop
in
sbb
pop
dec
push
aas
cld
sub
repz
mov
scas
sti
pop
add
add
lods
popf
lods
fucom
cli
adc
mov
pop
negl
inc
sub
xchg
lds
lcall
scas
int
fistpl
inc
jp
mov
or
lret
mov
xlat
loop
mov
mov
in
jnp
test
sub
stc
inc
cmpb
fbld
xchg
sbb
lock
int3
outsl
or
dec
cmp
aaa
inc
mov
dec
insb
fmul
lods
dec
es
insb
js
ja
shlb
jns
add
push
sub
fldl
adc
adc
out
xor
mov
jge
popf
add
inc
jg
inc
ss
cltd
xchg
sbb
sbb
mov
pop
push
int3
movsb
push
ret
pop
xchg
dec
arpl
xchg
inc
adc
stc
repz
dec
xor
jl
jno
adc
shr
incb
pop
imul
dec
mov
sub
mov
movsl
outsb
cmp
or
xlat
cltd
inc
enter
inc
gs
xorl
jo
sbbb
inc
xor
cwtl
cwtl
cli
or
enter
jge
dec
fbld
push
mov
mov
adc
movb
mov
aas
call
add
aad
out
cmp
adc
ret
and
jae
arpl
insb
xor
movsl
gs
movsb
xor
enter
add
je
mov
jecxz
push
dec
xor
lods
shll
fidivrl
aaa
cld
test
sbbb
stc
ljmp
pusha
mov
mov
cmc
test
inc
and
adc
gs
outsb
pop
imul
pop
jg
sbb
lock
sub
or
imul
mov
pop
push
in
rcrb
fisttpl
push
mov
jnp
mov
sub
and
add
dec
adc
mov
add
adc
mov
jl
mov
mov
movsl
fmull
push
add
inc
add
xchg
cmp
sbb
sbb
out
cmp
push
mov
gs
cmc
ss
xor
adc
inc
xchg
clc
call
mov
out
xchg
pusha
das
adc
mov
or
arpl
es
pusha
andl
hlt
sub
push
mov
pop
repnz
mov
loopne
notl
pop
ficoms
sub
movsb
xorb
mov
in
xlat
push
add
scas
in
mov
lods
push
data16
xchg
popa
push
and
xchg
cmpsb
pop
cmpsb
and
rcrb
popf
xor
pop
sahf
mov
fists
push
lock
mov
pop
aad
sbbb
jns
lds
adc
jmp
negb
add
jns
dec
ds
hlt
cmp
stos
sarl
push
xor
adc
mov
or
iret
fisttpll
push
in
add
mov
cli
inc
sbb
inc
loopne
add
dec
mov
xlat
mov
aas
imul
add
mov
es
push
xchg
clc
mov
pop
cmpsl
stos
std
mov
pushf
sub
ds
pop
push
out
dec
imul
mov
and
xor
push
mov
dec
pop
insb
push
cli
push
addr16
and
push
in
lds
mov
inc
mov
or
jle
lcall
enter
inc
pushf
gs
add
pop
sbb
pop
popa
dec
mull
xor
movb
jno
xor
dec
aas
or
push
lret
dec
mov
cmp
push
lods
cmp
or
pushf
cmp
sti
nop
fidivl
dec
push
or
mov
pushl
in
adcl
sub
and
adc
aas
add
sbb
xor
and
push
cs
sub
loopne
nop
or
sub
loop
dec
and
or
dec
fs
inc
sub
pop
sarl
dec
mov
std
pop
mov
dec
xchg
int3
fstpl
add
inc
mov
or
mov
xor
inc
push
in
dec
inc
jae
cmp
pop
jno
fnsave
imul
jecxz
xorl
ljmp
call
pause
xchg
push
arpl
adc
es
xchg
enter
std
insl
pushl
out
mov
into
jbe
mov
xchg
inc
pop
sub
ds
xchg
nop
jnp
mov
mov
jl
les
fimuls
add
xor
outsb
xchg
push
mov
jmp
adc
jecxz
jne
add
sub
add
xor
xchg
sub
sbb
xchg
stc
cmc
xchg
fnsave
xchg
sbb
or
adc
or
sub
bound
shll
mov
test
bts
sbb
xor
adc
xchg
xchg
aam
insl
push
mov
dec
popa
mov
sbb
and
pop
or
mov
ja
enter
insl
subb
add
cld
and
les
ja
cmpsl
sbb
dec
xlat
push
mov
lcall
pop
add
cmp
dec
xchg
test
das
pushf
js
mov
stos
jb
fimull
and
push
cmp
outsl
lcall
addr16
mov
push
movsb
insb
ret
imul
mov
test
pop
inc
scas
sub
cmpsb
test
sub
pop
lcall
ja
dec
inc
out
pop
dec
push
sahf
jbe
ficompl
outsb
cmp
scas
adc
jg
dec
cmp
outsb
mov
int
inc
cmc
cld
popf
test
aad
jle
aam
in
inc
adc
xchg
push
gs
movsl
inc
mov
addr16
scas
and
cwtl
xchg
lret
divb
jnp
sub
lods
scas
push
shl
dec
int3
loop
xchg
in
scas
inc
push
arpl
mov
das
jo
push
fsts
mov
jno
cwtl
js
ret
int3
jecxz
mov
jo
pushf
jno
inc
jb
cwtl
jo
xchg
xchg
icebp
or
mov
stos
xchg
arpl
lods
mov
or
in
inc
in
sub
sti
lret
lods
lods
push
sbb
clc
js
and
mov
popa
fidivrs
fidivrl
imul
lcall
jge
popf
cmp
mov
xor
cld
adc
subl
iret
push
mov
mov
lock
jb
pop
cmc
lods
shl
or
sahf
cli
testb
ljmp
and
mov
mov
negb
repnz
xor
shrb
ret
mov
jno
nop
popf
mov
pop
or
repnz
mov
mov
and
jge
es
pushf
adc
cmpsb
add
test
and
lret
jecxz
jl
cmpsb
push
mov
mov
mov
into
fs
cld
push
lock
loope
pop
int3
in
jae
xchg
pop
rcr
pop
fidivs
mov
bound
aas
adc
stos
outsb
ljmp
loope
adc
or
inc
cmovge
pop
xor
inc
jns
sub
sbb
lods
out
lahf
daa
cmp
imul
cwtl
fistpl
cltd
sti
mov
test
inc
int
jae
xchg
push
sar
push
xchg
or
ret
push
rcpps
and
pop
xor
jbe
scas
rcll
pop
adc
mov
or
jge
adc
insl
repz
cmpsb
cmpsl
mov
sbbb
lea
bound
jmp
or
xchg
daa
pop
scas
push
push
repnz
jbe
dec
inc
popa
mov
fcmovnbe
xlat
es
sbb
je
hlt
cmp
and
lahf
ficompl
arpl
fdivl
mov
fs
mov
pop
inc
popa
xchg
xchg
or
cmp
aaa
addb
lods
fwait
out
inc
int3
std
mov
repnz
lods
aaa
inc
jmp
sbb
mov
push
out
aaa
icebp
neg
test
push
xchg
cld
mov
add
mov
aad
mov
cmp
push
and
jecxz
inc
inc
jne
mov
outsb
xor
and
pop
pop
cltd
or
inc
push
popa
cli
xrelease
lods
mov
fldcw
insb
adc
lods
and
adc
cmpsb
cmpsl
mov
jmp
push
loope
clc
cli
test
mov
xchg
sti
gs
lret
inc
aad
cli
aas
popa
cwtl
inc
cld
pop
popa
int
movsb
jl
jge
les
bound
int
mov
push
lcall
cmpsl
jecxz
sub
es
pushf
adc
rorb
xchg
cld
mov
or
mov
fidivrs
in
ljmp
and
xor
clc
inc
aam
mov
jmp
or
jl
jecxz
aas
push
cmp
lcall
lock
lock
fiaddl
jp
cld
loopne
dec
inc
inc
pop
sub
mov
ljmp
dec
jmp
jbe
pop
mov
cmp
mov
je
mov
sbb
cltd
adcl
mov
lock
push
mov
imull
std
mov
shl
push
subl
retw
repnz
push
lahf
pushf
and
xor
test
ss
cmpsl
pushf
loope
dec
mov
sbb
add
stos
xchg
pop
push
add
cmpsb
sub
dec
push
aam
inc
xor
jmp
stos
insl
out
popf
mov
xchg
mov
cld
and
cli
and
cmpl
addb
or
sahf
mov
or
repnz
jns
mov
and
push
popa
int3
ja
sti
xchg
and
cmp
xor
cmpsl
jne
test
sbb
sub
fwait
or
lods
rorl
push
pop
mov
inc
mov
rcll
xor
add
rol
das
movl
stos
mov
cmc
fsts
stos
daa
pop
in
ja
imul
sar
test
loopne
call
inc
and
gs
xor
and
and
mov
push
int
cltd
aas
push
xchg
xchg
mov
pop
xlat
cs
outsb
dec
movsl
js
push
mov
lahf
xchg
mov
popa
stc
ja
out
pop
mov
mov
dec
pop
sub
and
arpl
jge
pop
inc
inc
push
cmc
loop
lock
adc
push
xlat
test
mov
or
data16
lock
xor
push
mov
les
shrl
mov
lret
cmp
push
cmp
inc
rolb
and
mov
xor
mov
fsubrl
mov
adc
mov
add
add
in
push
ror
xlat
loop
xor
push
xchg
sub
aaa
movsl
inc
addr16
pop
pop
cli
push
adc
data16
jmp
ds
pop
jno
pop
lock
pushf
in
and
rcrb
cmp
adc
xchg
push
movsl
mov
and
add
fs
cmpsb
xchg
xchg
xchg
or
jne
and
or
shrl
cmc
shr
xlat
inc
stos
inc
push
fwait
into
cmp
add
aas
aaa
popf
jno
push
mov
pop
div
jecxz
sbb
sbb
xchg
xchg
dec
stos
pop
dec
sub
pop
mov
rorb
push
in
lret
mul
cmp
sbbb
push
je
popa
and
leave
pop
lea
cmp
insb
add
sti
xchg
inc
mov
inc
or
hlt
popf
cmc
rcr
out
das
mov
push
sbb
out
fisubl
into
repnz
stos
and
add
mov
in
xor
rcll
push
aaa
sbb
dec
xorl
xlat
mov
popf
or
lds
lea
out
js
push
and
negb
sub
les
add
pushf
sbb
iret
sub
mov
lods
push
mov
faddl
pusha
stc
sbb
or
mov
sbb
mov
out
xlat
dec
cmpsl
lahf
test
jg
ret
jl
ja
jae
ret
jae
ja
sbb
lahf
movsb
ss
idivl
shrb
cmp
lahf
jmp
int
jle
sbb
push
sub
imul
lret
repnz
mov
push
xor
or
push
lret
pop
and
jns
jae
daa
fadd
sahf
and
mov
mov
sarl
pop
inc
pop
add
iret
add
mov
sbb
pop
cmpsb
mov
xor
lcall
sbb
stc
xlat
jle
sub
ljmp
in
xchg
sub
jl
or
push
daa
std
std
xchg
adc
xor
xchg
or
movsb
cmp
jo
push
daa
ja
sahf
mov
mov
js
push
and
loope
fisttps
xor
int
test
cmp
and
pop
mov
fwait
mov
cs
xchg
cld
mov
movsl
mov
je
iret
adc
out
stos
das
bound
addr16
jnp
inc
add
icebp
jmp
sub
daa
sbb
ds
das
adc
sbb
pop
ljmp
js
mov
fdivr
mov
xchg
sbb
dec
inc
int3
pop
xor
cmpl
les
call
into
ja
mov
add
fsubr
push
sahf
out
xor
push
insb
pusha
sahf
mov
xor
pop
lcall
imul
mov
inc
and
push
mov
fiaddl
pusha
jge
lret
push
lret
mov
mov
adc
out
addb
jns
cwtl
inc
pop
dec
push
add
sub
insb
sub
pop
aas
movsl
fstps
cwtl
or
xor
js
xor
pop
xor
mov
inc
sbb
jp
inc
pop
enter
cli
arpl
sub
pop
sbb
inc
cmp
sub
cmp
sbb
lods
insl
mov
nop
push
fmulp
sub
pop
dec
fs
icebp
in
xor
sarb
push
xchg
xchg
testl
fistpl
sbb
data16
xorl
dec
dec
test
or
lret
jmp
xor
addr16
and
cs
or
xor
push
fisubl
xchg
adc
adc
push
pop
dec
push
pusha
out
sti
addr16
push
ret
xor
cltd
sbb
jno
frstor
mov
int3
out
mov
fmuls
xor
jecxz
xor
jb
sub
out
movsl
mov
sbb
cmp
mov
test
jo
jp
adc
inc
getsec
sbb
test
pop
cmp
pop
pop
jns
aad
lret
fldt
mov
mov
or
jne
dec
out
mov
shll
push
pop
imul
dec
in
or
lods
insl
push
flds
cs
jb
sti
sub
inc
loopne
fnstcw
xchg
cmp
jno
lods
js
cltd
fdivrs
es
rclb
cmp
dec
jnp
pop
pop
mov
mov
imul
insl
inc
enter
mov
daa
movsb
daa
fcmovnbe
ret
lret
jo
push
sbb
add
inc
stc
cli
xlat
xchg
int
cmpsl
iret
sahf
jmp
clc
jb
pop
iret
push
pop
in
push
shr
adc
add
jl
mov
dec
std
andl
xor
data16
rcll
mov
cld
dec
sub
pushl
repnz
inc
mov
dec
and
pushf
sub
pushf
inc
jmp
cwtl
sti
out
pop
xchg
push
jg
xchg
jns
icebp
dec
xchg
push
sbb
hlt
clc
jmp
inc
mov
popf
pop
in
push
mov
add
adc
jecxz
dec
test
movsl
test
push
mov
es
cmc
test
enter
push
and
fidivs
jp
leave
and
mov
lcall
xor
daa
mov
stos
loopne
or
data16
ds
stos
gs
shlb
lds
sub
lods
ficompl
jb
popa
push
dec
add
or
aaa
mov
sarl
xchg
aas
sahf
mov
loopne
mov
adc
leave
es
add
enter
sti
aam
imul
push
sub
dec
inc
les
iret
or
adcb
sub
pop
imul
jg
out
mov
adc
repnz
adc
or
dec
clc
cltd
in
lret
out
mov
mov
cmp
loop
loopne
std
sbb
jns
sub
bound
push
push
and
dec
xchg
data16
out
pop
jg
pop
mov
mov
mov
loop
mov
add
jae
les
stos
enter
das
iret
test
xchg
cmp
xor
adc
pop
pop
bound
popa
scas
outsb
cwtl
inc
cli
mov
adc
int3
imul
in
imul
add
clc
lahf
out
adc
jecxz
xor
mov
out
inc
bound
mov
mov
popa
mov
adcl
xchg
add
pushf
sub
ljmp
mov
cmp
cmc
mov
jb
or
and
ljmp
or
std
pop
sub
dec
mov
adc
daa
in
fmul
xchg
pop
rcrl
imul
push
inc
add
out
jns
mov
pop
and
sub
into
or
adc
dec
addr16
subl
imul
sub
cmpsb
jbe
daa
mov
dec
pushf
in
les
cli
jecxz
jp
enter
sbb
xor
sti
add
xchg
mov
push
inc
mov
cmp
push
out
dec
stos
sub
fs
aam
mov
sbb
push
or
cmp
mov
test
js
out
imul
mov
dec
addr16
leave
cmp
ret
mov
sti
inc
adc
xchg
xor
mov
fbstp
lock
sbb
push
pop
mov
insl
fdivl
leave
sub
stos
mov
lock
lret
lahf
popa
push
call
push
jecxz
out
pop
ret
sbb
and
mov
stos
shll
out
add
cwtl
rolw
jo
rclb
lahf
xor
pop
es
mov
pop
cli
mov
mov
pusha
in
inc
mov
and
jmp
mov
adc
es
push
rclb
loopne
mov
xchg
aam
int
mov
pop
loopne
add
push
pop
push
mov
lahf
bswap
fwait
xchg
inc
mov
aam
popf
mov
xor
push
push
pushf
jecxz
sbb
lret
jns
sub
mov
mov
imul
fistpll
push
ror
sbbl
imul
nop
mov
sub
mov
testl
cmpsb
inc
dec
adc
bound
scas
test
or
cmp
xchg
and
loop
jl
inc
arpl
mov
push
push
je
and
ds
mov
sub
ret
repnz
cltd
or
fadd
sti
leave
jge
jmp
outsb
nop
cmp
sbb
outsb
nop
pop
dec
stc
cmp
out
push
loop
test
and
mov
pop
push
int
pusha
jg
mov
inc
test
clc
fs
push
jno
xchg
in
inc
lcall
insb
inc
aaa
jg
xchg
xor
mov
push
xor
jge
pop
push
push
jae
lods
sub
cmp
lea
jecxz
andb
es
pop
clc
cmpsb
movsb
addr16
es
rclb
lods
inc
cmp
xchg
pop
jl
and
push
ja
test
cmpsl
push
push
mov
cmp
inc
push
test
js
dec
adc
test
xor
fadds
pushf
jmp
pop
cmpl
shll
mov
mov
cmp
or
mov
cmpsb
imul
add
cltd
cwtl
test
es
or
insl
ss
arpl
xor
pop
push
out
mov
xor
pop
cmpsl
hlt
add
jnp
sbb
nop
mov
jl
sub
lcall
lods
mov
and
push
std
idivl
add
sbb
clc
push
jmp
mov
movsl
xchg
dec
call
mov
dec
and
jae
dec
cmp
pop
fs
sbb
addr16
dec
fdivs
mov
fwait
cmp
mov
cld
or
pop
sub
sub
push
test
cmp
addr16
je
movl
arpl
stos
sub
push
pop
xor
scas
sahf
lods
movl
lcall
nop
ror
ds
negl
xchg
xchg
fcmovnu
lcall
xchg
mov
cmp
xchg
add
ljmp
adc
es
xor
xor
arpl
fprem1
mov
js
cmp
orb
mov
int3
sarb
and
xor
jl
push
mov
sbb
ret
inc
jl
or
stos
fwait
inc
ds
push
xor
bound
fistl
je
divb
pop
repz
push
enter
mov
mov
adc
pushl
rcrb
in
mov
sbbb
mov
fimuls
mov
adc
jmp
in
inc
aaa
repz
jns
sbbl
and
jmp
fs
jns
adc
mov
outsl
stc
inc
bound
jg
ss
incl
mov
dec
and
adc
jle
aaa
xchg
cltd
in
mov
and
ret
test
hlt
cmp
insb
in
push
mov
into
jecxz
jb
inc
pop
add
jnp
add
test
lret
pop
scas
sub
es
loopne
cmc
enter
sub
add
or
xchg
xor
hlt
xor
repnz
sahf
test
lods
mov
push
cmp
mov
faddl
filds
pop
test
lods
enter
lock
xchg
xacquire
sub
and
and
lret
int3
jmp
scas
int
lods
mov
dec
lods
push
test
jae
test
ljmp
jb
mov
out
or
nop
inc
dec
cs
imul
and
xchg
cmp
lcall
lahf
sbb
xchg
fimuls
ljmp
jmp
movsl
lds
jle
pusha
adc
mov
lea
sub
mov
inc
push
push
fsubp
sbb
jp
rcrl
push
cmp
mov
pushl
rorl
inc
cmp
dec
cli
pusha
hlt
push
inc
jb
push
in
cld
repz
neg
lds
stos
pop
fs
lock
sub
push
mov
dec
cmpsb
xchg
pop
cmpsb
aam
adc
jb
cmpb
ds
les
notl
jns
pop
movsb
xchg
inc
dec
mov
sub
and
scas
inc
dec
inc
dec
xor
fistl
sbb
lcall
data16
inc
dec
or
xchg
and
push
sbb
sub
inc
sub
shl
jmp
fstpl
hlt
stos
sub
jb
pop
and
mov
pusha
pop
mov
mov
mov
push
pop
dec
cltd
push
shll
call
pop
pop
arpl
dec
dec
add
sub
cmpsb
cmp
test
mov
sub
test
jno
out
dec
jno
inc
push
adcb
aam
mov
pop
mov
aaa
pop
sbb
inc
sub
sbb
cs
and
mov
xchg
popa
shlb
inc
sbb
mov
test
fnstsw
mov
shrl
mov
inc
ds
or
es
inc
call
xchg
sbb
mov
mov
dec
sub
gs
mov
pop
pop
and
bound
lahf
rclb
or
test
jge
mov
xchg
fs
xor
cmp
movsb
sbb
pop
mov
std
sub
fwait
js
cmpsb
test
xor
xchg
fstps
jle
jnp
adc
testl
cmpsl
icebp
lock
pop
pop
stos
inc
mov
cmc
lods
push
rorb
mov
and
mov
push
xchg
mulb
shll
lcall
cmp
push
rclb
bound
popf
jae
mov
sub
inc
stc
rolb
adc
pop
cmp
xchg
inc
cmp
sbb
dec
inc
cs
leave
inc
or
loope
sbb
dec
insb
dec
jne
push
imul
mov
and
push
cli
mov
dec
shr
fsubs
std
lahf
pop
in
aas
pop
test
and
movsl
shlb
popa
test
cmp
stos
insb
dec
pop
xchg
pusha
cmp
mov
and
jno
nop
aaa
jmp
std
jnp
fldl
test
ret
dec
cmp
int3
inc
push
cmp
xchg
cmp
xchg
mov
push
fcoml
arpl
mov
pop
push
pop
pop
jge
pop
icebp
add
dec
dec
imul
pop
stc
sbb
daa
movsl
inc
movsb
es
ja
dec
loopne
mov
mov
sbb
push
add
lret
hlt
xor
mov
mov
out
xchg
in
sbb
sti
sub
ja
fst
lahf
rorl
push
mov
adc
clc
adc
lahf
jns
jae
lods
cmp
dec
adcb
mov
cmc
hlt
and
mov
mulps
sbb
mov
sbb
fisubrs
das
out
jno
icebp
inc
dec
out
mov
imul
bound
pop
pop
inc
mov
pop
add
push
jmp
rcrb
fs
dec
and
fsubr
mov
pop
add
push
sarb
inc
jns
test
jle
int
push
push
loop
adc
push
shl
scas
inc
popf
stos
sahf
addr16
mov
hlt
sbb
xchg
subl
ljmp
pop
pop
jb
insb
pop
call
dec
inc
in
insl
pop
adc
inc
push
cmp
aam
out
push
jns
daa
push
cmc
hlt
jmp
xchg
push
andb
int3
inc
bound
xchg
add
push
cmp
mov
cmp
lock
jge
rcll
sbb
mov
xor
loope
xchg
imul
cmp
es
fidivrl
rcl
cli
mov
notl
stos
sbb
fcoml
push
gs
mov
cmc
or
cmp
stos
cmp
jle
mov
daa
fcmove
pop
mov
jp
push
cmp
cmp
inc
add
icebp
add
push
aaa
inc
xlat
mov
jno
add
out
jmp
lcall
mov
sub
push
dec
pop
adc
sub
fmuls
or
xor
or
jno
out
cld
data16
and
outsl
push
mov
xor
lods
je
into
or
mov
lahf
xor
js
xchg
loopne
and
fs
lcall
imul
out
decb
cltd
cli
in
repnz
jne
outsb
mov
lods
push
pop
inc
es
loopne
fwait
jle
mov
cmp
push
scas
mov
mov
incl
roll
jbe
pusha
jo
test
movsl
mov
pop
jbe
sar
out
push
je
idiv
mov
xor
andb
mov
jmp
mov
mov
or
push
sub
loope
xchg
cmp
mov
push
in
xor
xchg
test
push
and
leave
mov
rdpmc
sub
push
sbb
adc
add
pop
loopne
jmp
popf
loopne
movsb
mov
lcall
daa
xchg
pushf
xchg
popf
jo,pt
pop
push
mov
stos
jb
lcall
scas
push
fdivl
mov
sarl
je
add
xchg
sbb
inc
pushw
push
jo
repz
pushf
aad
sbb
push
div
xlat
addr16
push
and
cmc
xchg
pop
push
mov
bound
enter
inc
mov
enter
loopne
push
movsb
ret
stos
cltd
jp
test
mov
test
xchg
inc
in
std
je
xorl
sbb
mov
push
jns
hlt
or
outsb
in
adc
mov
jae
xchg
repnz
push
call
notl
mov
push
inc
iret
stos
repnz
test
movsb
xchg
inc
sti
shl
xchg
mov
xor
test
leave
sti
fisttpll
rcrl
js
mov
xor
ja
add
int
cmpsb
pop
imul
or
mov
jnp
icebp
imul
or
adc
stos
loopne
jo
mov
ljmp
test
in
dec
ficompl
imul
pusha
fsubrp
xor
aam
sub
xor
add
push
mov
mov
jmp
mov
push
and
push
ss
adc
mov
mov
jmp
ds
pop
xchg
fs
pushf
rcr
sbb
inc
push
mov
jmp
fbld
sbb
arpl
dec
lret
mov
mov
dec
push
cmp
icebp
or
ljmp
shr
mov
jnp
dec
lahf
xor
imul
pop
lock
xlat
pusha
clc
test
fwait
mov
cmp
cmp
inc
sar
repnz
popf
mov
arpl
jb
sub
mov
and
sub
pop
jnp
fimuls
cmp
data16
cmp
add
ds
addr16
jae
stc
loope
push
lret
test
and
add
inc
push
mov
xchg
shll
sub
ja
push
mov
popa
scas
scas
xchg
sub
mov
or
ljmp
fisttps
es
mov
mov
insl
lods
push
mov
stc
jg
and
cmp
mov
adc
ret
xlat
push
and
jo
mov
pop
cmp
aad
sbb
lret
movb
or
mov
mov
and
push
jno
cmp
sbb
call
inc
push
sahf
jmp
fistpll
int3
clc
lock
jle
lahf
push
lea
es
fdivr
popf
adc
mov
in
push
fadd
mov
jecxz
jne
mov
jmp
cmpsl
adc
in
popf
ds
sbb
mov
sbb
push
inc
movsl
sbb
or
sbb
and
std
dec
adc
sahf
loope
movsl
jl
push
repz
out
jmp
stos
push
fsubl
andb
push
lret
enter
iret
loopne
in
xchg
mov
fstl
int3
pusha
je
stos
sub
sub
aam
out
aam
jp
fadds
pop
cmp
dec
pop
scas
out
push
mov
xlat
and
jbe
dec
xchg
stc
cmp
mov
fsubl
mov
rolb
pop
fyl2x
pop
aaa
adc
pop
les
fsubr
pop
dec
add
fcomps
out
ficompl
ret
xor
lods
aam
pop
mov
and
rclb
fiaddl
loopne
idiv
push
mov
fwait
es
shll
mov
add
push
mov
mov
dec
mov
addr16
push
lret
mov
xchg
cmp
dec
dec
and
xchg
les
add
and
hlt
xchg
sbb
dec
cld
push
pop
mov
pop
lret
in
jle
lcall
mov
mov
sub
lea
push
xor
mov
and
addr16
orb
mov
ret
and
loope
pusha
ja
aam
dec
mov
loop
lcall
and
lds
lahf
movsb
xor
cmp
mov
notb
jl
mov
fwait
pop
inc
test
sarb
test
adc
dec
lret
adc
into
wrmsr
push
add
stc
cli
sbb
lea
jg
xor
divl
ds
loopne
or
pop
repz
mov
out
or
aas
push
adcb
icebp
inc
ret
outsl
loopne
sbb
test
cli
fdivrl
mov
ljmp
or
or
fimuls
xor
mov
out
push
mov
out
sub
in
mov
cmp
icebp
dec
iret
cmp
aas
xchg
mov
add
cmc
adc
inc
adc
sbb
xlat
add
jae
lods
scas
dec
jae
dec
jg
je
mov
inc
rcr
fadd
jns
pusha
das
mov
fistps
inc
jbe
pop
bound
lahf
repz
aad
pop
pushf
aaa
push
fdivr
pop
xchg
icebp
jmp
jmp
lds
adc
adc
fstpt
cmc
inc
out
sub
xorps
loopne
lret
mov
jle
mov
dec
sbbb
movsb
cld
xor
fcmovbe
inc
xchg
mov
pop
movsl
xchg
sti
imul
dec
inc
cmpsb
pop
sbb
and
int3
imul
daa
and
fs
sub
xor
push
push
xchg
rcrl
adc
mov
pop
jp
jae
aaa
pop
cwtl
adc
mov
sar
jne
add
mov
sbb
cmp
hlt
int
xor
fsubrl
inc
sbb
dec
dec
add
ss
xchg
jnp
ret
xlat
or
mov
xchg
pop
adc
push
imul
push
jge
pushf
es
ljmp
sbb
sbb
int
pop
dec
jmp
movsl
or
mov
outsb
pop
fdivp
andl
inc
and
mov
out
push
les
cmp
cmpsb
sub
js
cli
in
lret
test
cwtl
movsb
cmc
xor
pop
and
adc
outsb
out
hlt
rcr
pause
out
mov
movsl
add
shrl
or
xor
in
sbb
adc
mov
lret
and
mov
aaa
adc
mov
xor
inc
lcall
std
mov
push
mov
ret
test
adc
and
mov
mov
dec
stos
push
xor
call
mov
lcall
mov
sbb
sub
iret
shrb
mov
aad
bound
cmp
stos
dec
xchg
xchg
out
and
xchg
sarb
ds
ljmp
mov
insl
mov
ret
mul
xor
mov
subl
out
imul
lock
push
mov
hlt
outsl
inc
cmc
push
dec
cltd
out
fildl
mov
push
nop
fwait
cli
aad
inc
add
popf
sbb
lret
lock
jno
lods
mov
xchg
xchg
fiaddl
sahf
fnstcw
xorl
mov
pop
mov
into
inc
cmp
addl
mov
ret
xor
sub
fcoms
fs
sub
shr
lea
scas
subb
push
stos
sbb
cmpb
daa
mov
es
test
fidivs
add
jnp
cmp
sti
fldenv
fildl
ret
pop
jae
arpl
lods
fs
jmp
ret
cwtl
jae
fdivs
xor
cli
mov
mov
inc
sti
mov
dec
out
sbb
js
shl
add
mov
lcall
add
dec
add
testl
xlat
pop
cld
inc
mov
gs
lcall
fcoms
adc
mov
adc
mov
xor
jnp
shlb
fsubs
sbb
xchg
out
pop
cmp
in
outsb
or
dec
push
popa
enter
push
out
mov
fidivs
pop
movsb
inc
iretw
cmpsb
stc
test
subb
fidivrs
mov
add
and
adc
les
push
shl
mov
fisttps
cmc
mov
pop
dec
imul
sub
cs
aaa
xchg
fnstsw
test
pop
mov
mov
pop
imul
leave
adc
pop
inc
adc
and
cmc
in
sub
jp
mov
fs
pop
test
push
mov
jns
cmp
xor
sahf
int
sti
int
clc
aas
in
jnp
cmp
and
inc
enter
sub
aas
inc
icebp
popa
gs
push
bound
movsb
xchg
jle
outsb
lret
cmc
fistps
sarl
cmp
mov
lcall
and
inc
mov
shll
or
cld
or
cltd
aad
push
cmp
push
test
dec
xchg
and
mov
cmp
pop
lahf
pop
push
jbe
push
xchg
int3
add
push
lahf
mov
jno
js
repz
pop
push
pop
and
dec
lahf
mov
sbb
inc
adc
mov
je
test
notl
add
rcr
and
adc
xor
stos
call
lock
fimuls
leave
mov
xor
pushf
push
leave
cmp
rclb
dec
jo
xchg
mov
je
or
imul
mov
js
cmp
push
call
jns
testb
movsb
jp
in
fsubs
cmpsb
mov
sti
mov
ret
es
xchg
lahf
mov
int3
sti
and
mov
push
push
sub
fmull
jg
loop
fs
mov
cs
pusha
mov
in
lret
cmp
xchg
aas
mov
icebp
popf
daa
out
sbb
mov
and
in
xchg
movsl
in
dec
lods
mov
cmc
jnp
jmp
add
push
rolb
mov
cmpsb
sub
outsb
rcr
mov
jne
leave
lahf
dec
mov
push
jmp
sub
fs
mov
mov
sarl
enter
jnp
xor
loop
test
aas
call
dec
sub
sub
push
xchg
ja
add
jb
test
mov
jo
cmc
push
pushf
das
dec
jcxz
cltd
add
add
mov
jg
jae
test
mov
pop
jle
ljmp
pop
mov
lods
push
mov
and
fists
insl
sub
leave
ss
sbb
push
xchg
outsb
test
fbstp
inc
inc
daa
xchg
lods
and
mov
in
sbb
lahf
loopne
std
fnstsw
xchg
mov
fimull
sbb
test
clc
cmc
pop
mov
mov
es
pushf
fists
mov
lds
mov
push
imul
jmp
shlb
jg
push
or
xorb
xor
push
mov
in
inc
clc
mov
js
cmc
adc
mov
rcrb
mov
ret
int
cmp
adc
sbb
xchg
jecxz
jno
cli
jae
jnp
pop
test
mov
adc
pop
or
mov
notb
dec
out
fsubl
leave
push
je
xor
aaa
push
clc
ss
icebp
jb
push
xor
pushf
push
jo
lret
xor
fidivrl
inc
push
push
into
sahf
push
xchg
iret
fldt
xor
lock
sbb
fwait
mov
mov
cmpsb
fmuls
lea
cmp
push
sbb
push
mov
xor
push
push
and
imul
testl
sbb
lds
push
idivb
inc
test
leave
xor
cmp
push
mov
ds
pop
adc
out
adc
imul
jl
or
cmp
adc
xor
mov
cs
cwtl
cmp
sub
and
movsb
mov
mov
icebp
fimull
jns
lret
pusha
mov
and
test
fstpl
aam
in
aaa
mov
push
push
add
pop
mov
repz
cmc
xchg
pushf
testl
mov
roll
and
das
insl
xor
test
inc
jns
repz
lcall
insl
pop
gs
and
or
dec
inc
jp
jl
or
add
jb
adc
testb
in
popa
inc
loope
in
mov
js
movsl
popf
jbe
scas
das
mov
pusha
sbb
jae
aad
stos
pop
xchg
jle
cmp
dec
jo
loope
nopl
arpl
aaa
mov
mov
sub
movsl
fs
and
addw
lret
rolb
aam
fsubrl
loop
into
lea
or
pop
dec
and
pop
mov
aad
arpl
fisubrl
test
out
mov
dec
mov
jmp
push
test
insb
mov
outsl
xchg
test
jge
pop
loopne,pt
mov
incb
mov
ret
mov
jbe
int3
pop
call
fwait
sbb
lcall
fisttps
daa
jns
adc
lcall
and
jb
dec
lods
sti
dec
jnp
movb
enter
mov
lret
mov
jge
sub
jg
and
stc
adc
movsb
test
fs
cmpsb
and
adc
vmread
sbb
les
jle
test
mov
and
mov
mov
sti
or
lret
mov
inc
stos
add
mov
and
sbb
mov
aas
mov
ss
add
jle
xor
insl
pop
fdiv
push
loop
bound
dec
add
and
mov
cmpb
xor
out
stos
stos
push
lea
mov
pop
aas
aad
and
xor
testb
std
sbb
in
mov
pop
imul
pop
xor
sbb
push
popa
inc
imul
and
lahf
and
add
negl
jle
loopne
negl
xchg
test
xchg
dec
mov
out
push
popf
mov
mov
test
inc
push
sbb
scas
cmp
sbb
jne
fildll
fsts
roll
data16
sub
xchg
and
ss
scas
mov
mov
rclb
cmp
mov
adc
scas
mov
mov
adc
mov
xchg
fildl
test
jb
test
cmc
pop
aam
pop
gs
dec
out
push
jle
pushf
mov
sub
mov
mov
xor
out
xchg
inc
rol
xchg
jnp
cltd
lret
dec
rolb
int
add
push
iret
pop
popa
sub
or
rorb
mov
adc
add
xor
jl
pop
cwtl
lea
push
lret
movsb
sub
xchg
fistps
mov
sar
loope
sub
outsl
in
mov
shll
xorb
jb
adc
cmp
das
dec
push
mov
and
xchg
ret
mov
cmpsl
pop
sub
je
push
ss
jae
pop
aam
fidivrs
jp
mov
cmp
inc
add
movsb
cmpsb
adc
stc
inc
push
addr16
inc
popf
lods
jmp
pusha
std
sub
fmull
inc
cwtl
stos
outsb
stos
bound
sbb
lret
push
pusha
out
pop
mov
jmp
cs
cmpb
test
out
mov
xor
sahf
popf
inc
pop
sub
and
stos
and
mov
or
and
dec
popf
cmp
fwait
xchg
jge
leave
out
push
in
dec
fstpt
cmp
ss
call
pop
jecxz
aam
das
jne
adc
mul
and
dec
repz
push
mov
sub
loopne
jg
push
cltd
bound
stc
mov
mov
aam
in
or
ret
add
sub
sahf
dec
push
inc
xchg
fsubl
xchg
fldcw
push
sub
fisubrs
in
xchg
pushf
lret
pop
popl
loope
int3
repz
mov
dec
adcb
push
jns
cmp
call
jne
push
pop
cmp
ret
loop
add
out
into
aaa
or
sti
pop
jecxz
roll
adcb
jl
xor
test
in
jbe
out
mov
cld
xlat
xchg
popl
outsl
cmp
insb
decl
arpl
pop
jnp
out
mov
dec
iret
sub
mov
hlt
mov
lds
imul
xchg
xor
cltd
xchg
bound
addr16
pop
data16
add
je
addr16
lods
test
cmp
mov
pushf
xchg
clc
dec
fimull
sbb
push
push
inc
pop
add
ror
pop
insb
and
push
inc
add
lods
mov
pop
in
or
inc
jb
inc
loop
and
imul
pusha
fsts
and
sub
push
popa
les
int
lahf
jmp
sahf
cld
loop
adc
inc
mov
fcmovu
and
imul
loop
clc
xor
fbld
sub
xchg
mov
sub
xor
test
adc
or
pop
jns
adc
mov
enter
std
pop
xor
idiv
scas
add
fisubs
and
loopne
cmpb
cwtl
lahf
sub
frstor
stc
data16
ljmp
xchg
mov
sarl
sub
loop
cli
push
lods
dec
dec
fldenv
mov
das
pusha
add
pop
push
fdiv
add
push
fists
sti
or
aas
ret
xchg
ret
adc
enter
push
sub
test
pop
inc
outsb
or
mov
dec
arpl
int
fwait
and
pop
inc
fsubrs
andl
andl
mov
movsl
push
in
pop
push
insb
call
mov
lret
shll
and
ret
jmp
jae
push
fcmove
jge
pop
xor
fbstp
sub
xchg
xor
push
sahf
xchg
or
pop
in
mov
cmp
fisttpl
into
or
mov
outsl
testb
jns
adc
aam
test
push
je
les
sbb
sub
mov
adc
sbb
out
ja
add
leave
lret
sub
mov
push
das
mov
test
push
pop
loopne
sub
test
lret
bound
sub
xlat
leave
inc
mov
cmp
js
mov
and
stos
cmc
sub
push
mov
xor
fs
ret
fs
sub
dec
insl
sbb
popf
adc
fadds
cmpsl
add
jbe
jnp
pop
xor
sub
xor
out
data16
adc
pop
ljmp
rorl
arpl
fdivrs
addr16
in
cmp
and
ja
loope
hlt
pop
jne
cmp
test
xor
stos
pop
adc
mull
jns
call
movsb
mov
clc
cmpsb
add
popf
xor
out
pop
out
mov
and
mov
sbb
and
in
xchg
ds
dec
fmuls
jns
jns
ljmp
js
pop
ret
mov
repz
lods
es
outsb
addr16
pop
je
insl
sbb
jl
lcall
inc
sbb
rolb
scas
fstpl
inc
incl
cltd
icebp
rclb
outsb
test
and
mov
sahf
mov
push
add
movsl
push
std
mov
fs
sub
out
aad
nop
mov
imul
adc
xchg
push
xchg
and
mov
xor
mov
test
or
roll
pop
inc
sub
xchg
mov
push
mov
xor
fcomp
fwait
stos
pushf
popf
push
rcrl
call
pop
mov
mov
and
sbb
pop
sub
mov
pop
cmp
xor
adc
stc
dec
leave
sbb
arpl
jecxz
sub
outsb
push
mov
movsb
and
fsubrs
int
test
push
call
inc
scas
add
sub
shlb
stos
adc
ficoml
shr
pop
or
pusha
mov
scas
ss
and
hlt
mov
movsb
and
and
dec
xor
subl
jecxz
sbb
iret
aas
je
dec
fadds
insl
push
jl
out
sbb
push
gs
lds
sbb
push
sbb
pop
pop
mov
jo
loopne
xchg
add
jmp
mov
outsb
inc
testb
mov
rcl
rep
adc
inc
sbb
icebp
cld
jg
clc
jecxz
mov
xor
push
lret
outsl
add
shrb
in
outsl
push
inc
in
sbb
sti
jns
stc
lock
or
xor
daa
sub
aad
ja
lcall
out
push
fwait
xchg
xor
mov
adc
xorl
nop
movb
ret
sbb
push
and
rol
sub
pop
jmp
adc
push
insl
mov
mov
lods
jns
jbe
jecxz
or
fsubl
cli
push
test
ljmp
add
push
mov
scas
lds
or
ja
fidivl
mov
pop
cli
mov
scas
jmp
mull
test
loope
add
fsts
fwait
mov
dec
mov
fs
testb
clc
dec
mul
jecxz
xchg
sub
dec
or
popf
pop
pop
bound
jno
dec
repz
loope
xor
ffreep
cmp
imul
inc
mov
pop
sbb
pop
jecxz
and
add
test
je
or
aad
mov
mov
adc
inc
sub
imul
leave
cmc
test
push
mov
xor
pop
pop
shrb
dec
dec
mov
sub
add
cmp
mov
inc
adcl
mov
mov
lods
cmp
mov
jne
pop
ret
out
or
cwtl
je
or
adc
mov
scas
nop
fadd
or
mov
mov
bound
push
lret
icebp
das
popf
loop
dec
lret
cmc
mov
sarl
sub
push
xchg
mov
xchg
outsb
hlt
mov
xchg
add
mov
shl
clc
adc
sub
shll
subl
mov
push
xlat
xlat
adc
jns
hlt
arpl
scas
lret
imul
fsub
xchg
test
xor
mov
mov
aas
xchg
sbb
out
push
and
lds
xor
call
jae
jae
fcomp
test
push
sahf
push
movsb
adc
jmp
cmc
xchg
divl
push
fistpl
scas
jbe
out
xlat
in
cwtl
bound
adc
into
pop
sub
mov
jle
repnz
sub
lahf
idivb
divl
adc
cmpsb
xchg
out
adc
mov
loopne
sub
imul
xorl
test
mov
je,pt
ret
sti
adc
inc
push
add
adc
add
aad
mov
jnp
or
test
out
xchg
xor
loopne
ljmp
push
fnstsw
xor
or
xor
jno
or
cli
cmpsl
xchg
dec
mov
das
pop
jmp
sub
sub
dec
push
push
pop
push
push
adc
loopne
sub
test
add
or
mov
bound
xchg
jmp
je
or
mov
fs
ret
push
push
xchg
mov
jb
dec
jge
lock
test
call
into
xchg
cs
xlat
jp
cmp
xchg
cmp
out
xchg
ret
cmp
lods
and
or
out
xlat
test
cs
push
inc
xchg
insl
cmpsb
xor
jmp
idivl
pop
lods
lahf
mov
push
cmp
and
call
nop
dec
js
out
flds
mov
dec
orb
je
mov
ds
subb
mov
pop
dec
mov
dec
cltd
adc
cmp
inc
xor
call
xor
jno
jb
inc
push
pop
iret
pop
pop
daa
push
ds
pop
mov
jo
repz
jg
pop
rcr
hlt
jbe
pop
mov
jo
arpl
pop
jo
negb
inc
je
mov
adc
xchg
outsl
insl
jl
mov
push
ja
dec
pop
negb
mulb
mov
mov
sti
das
cmp
dec
xor
fdivrs
pop
and
fwait
lods
rcr
js
daa
test
sub
mov
ret
hlt
stos
sbb
fistpl
cmc
aas
dec
outsb
cmpsb
jmp
sahf
f2xm1
cli
mov
lret
adc
sub
dec
aad
sahf
dec
out
adc
mov
loope
add
push
push
add
arpl
clc
sub
int3
xchg
cmc
out
sub
mov
add
cmpsb
mov
mov
callw
inc
repz
push
mov
mov
hlt
fcmovu
mulb
push
lock
pop
xor
jns
mov
shr
xchg
aas
nop
adc
jne
inc
xor
imul
xor
daa
dec
inc
cmp
mov
pop
daa
out
and
pop
sar
push
sub
imul
nop
xchg
ljmp
int3
xor
lcall
mov
insl
sub
imul
or
xchg
stos
xor
pop
lds
enter
int3
mov
mov
cmpb
pop
jp
xchg
aad
inc
into
xchg
mov
inc
and
cmpsl
cltd
dec
mov
push
sti
test
xor
mov
movb
inc
icebp
add
xchg
out
and
movsb
ja
jle
push
xor
lds
lahf
adc
sub
xchg
mov
mov
dec
xchg
and
xchg
test
xor
pop
xchg
addr16
sbb
add
fcmove
scas
lods
std
dec
sub
je
jmp
mov
fs
inc
pop
aaa
pop
fistps
popa
pop
int
cmc
pop
daa
push
aaa
pop
push
xor
movsl
dec
add
bsr
inc
loop
xchg
pushl
sub
cmpb
inc
or
cmp
loop
pop
pusha
fbstp
and
ret
jecxz
pop
cmpsl
fldenv
loopne
inc
sbb
lods
rcll
aam
mov
xchg
imul
xor
gs
lcall
inc
nop
mov
jmp
xchg
pop
addr16
stos
dec
icebp
xor
test
mov
ror
add
out
push
jecxz
in
mov
pop
loopne
test
and
fldenv
lea
js
xor
and
ficompl
outsl
mov
cwtl
fneni(8087
call
push
fwait
xchg
mov
cmp
jmp
cmp
push
test
adcl
pop
sahf
adcl
fldt
ss
inc
fwait
cmp
sub
sbb
or
mov
xchg
mov
sbb
insb
pop
iret
xchg
jb
shr
lret
inc
jno
std
test
sar
pop
cmpsb
popa
jmp
or
inc
push
cmpsb
mov
dec
mov
sbb
jo
add
push
inc
popa
lods
fstl
sbb
jle
bound
outsb
jmp
das
mov
mov
push
adc
sub
fldl
xor
loope
xor
mov
adc
imul
jbe
scas
hlt
cwtl
loope
lods
push
push
stc
mov
in
xchg
add
aaa
repnz
sbb
push
mov
xchg
cmc
cmp
adc
lds
adc
pop
arpl
cmp
lds
sti
jle
and
aas
and
pop
or
adc
sbb
or
sarl
dec
or
xor
loopne
imul
cmp
mov
jns
xchg
add
sahf
imul
stos
fisubl
cmovp
sbb
iret
ret
dec
call
xor
aaa
sub
or
es
movl
jnp
mov
hlt
shlb
das
aad
in
repz
mov
std
mov
or
mov
push
cmp
mov
xchg
add
nop
cmpsl
dec
mov
std
pop
cmp
inc
sbb
repz
pop
jg
add
daa
push
push
jb
mov
or
scas
das
int
xor
ds
inc
jmp
mov
rcl
pop
push
adc
repnz
mov
out
jo
imul
adc
js
adc
push
ja
ljmp
scas
pop
scas
adc
sbb
mov
dec
call
mov
and
sub
fsts
xor
sub
insb
popa
adc
outsb
lea
jmp
test
jae
repnz
push
test
push
imul
sbb
add
inc
xchg
mov
and
lcall
inc
sub
sub
add
xor
lret
pusha
stc
popa
jle
mov
shll
xor
jp
ror
inc
fcoms
ja
outsb
and
int
clc
and
scas
inc
ljmp
dec
test
jmp
xchg
xor
or
mov
insl
lock
mov
adc
mov
popa
or
fisubrl
mov
adc
push
imul
push
cmp
add
scas
push
sbb
sub
daa
rolb
stc
daa
shll
ret
cmpsl
xor
mov
loopne
push
dec
cmp
sahf
xor
jp
call
call
sbb
leave
add
push
mul
sub
sub
shrl
sub
movsb
sbb
cmc
sar
add
push
push
mov
test
xchg
and
js
out
push
ds
ret
scas
jnp
mov
jp
pusha
cwtl
rcr
int3
sbb
cmpsb
mov
fistps
mov
mov
sbbb
add
in
inc
jge
cmp
imul
mov
mov
enter
int3
mov
mov
adc
sbb
loope
lods
dec
movsl
cmp
daa
aas
or
idivl
in
loopne
fnstcw
test
inc
cmpsl
stc
mov
ljmp
cmpsl
fisttpll
sbb
test
adc
outsb
movsb
mov
outsb
mov
pop
pop
pop
pop
xchg
push
and
sub
sbb
test
mov
jb
sub
int
inc
fldcw
dec
sbb
sub
xchg
data16
inc
cmp
neg
lea
and
dec
mov
push
xorl
aaa
aam
lods
in
out
dec
mov
shrb
scas
jp
mov
enter
fchs
sub
jle
push
pop
jnp
dec
pop
rcrl
xor
push
mov
ret
adc
jge
pop
mov
xchg
and
push
lods
cmp
test
out
loopne
cmc
cmp
push
inc
cmp
mov
ret
or
inc
lcall
cmp
add
aam
ret
mov
pop
lods
cmp
cwtl
ret
ficoml
je
mov
sub
and
xor
rclb
mov
inc
sub
jl
test
xor
push
mov
lret
jp
lahf
rep
xchg
mov
in
sahf
jge
sbb
sbb
mov
add
mov
dec
dec
xchg
addr16
dec
hlt
jge
pop
dec
cmp
imul
pop
loopne
shll
xor
jmp
inc
repnz
fcmovu
push
jb
xchg
pop
jno
push
es
pop
xchg
stos
cs
fwait
cmp
push
out
xor
xchg
insb
mov
fsubrs
roll
int
inc
dec
fisubrs
fbld
push
fwait
cltd
sub
fcoms
xchg
xor
int
inc
xchg
jmp
popf
je
jno
test
int3
mov
push
gs
in
inc
nop
mov
or
jno
jnp
cli
scas
stos
test
lock
pop
test
pop
cmp
and
adc
fldenv
or
add
sbb
mov
jp
add
mov
cltd
scas
stc
push
pop
in
xor
in
pop
mov
imul
fstp
mov
movsl
dec
in
cmpsl
lock
pop
test
cmpsb
ljmp
repnz
mov
popf
mov
inc
mov
mov
outsb
aaa
shl
js
outsb
dec
test
andl
fimull
push
movl
je
dec
incb
mov
rcll
mov
sbb
int
mov
inc
lret
inc
lret
lahf
push
loop
mov
das
jnp
xchg
inc
pop
inc
inc
sub
sub
push
dec
std
or
or
mov
dec
lcall
push
adc
scas
mov
jns
jmp
test
sub
adc
lods
clc
push
movsb
call
inc
sub
aad
cli
insl
lret
xchg
iret
xor
jge
icebp
stc
inc
lahf
bound
and
xor
sbb
jmp
or
or
ds
cmpsb
stos
daa
incb
movsl
sub
dec
cmp
dec
pop
cli
inc
out
mov
mov
xor
popf
xlat
xchg
lods
sbb
push
cli
das
xor
imul
and
shlb
in
test
sti
and
mov
mov
shll
sub
or
xchg
push
push
stos
pop
scas
and
and
inc
lods
jge
enter
adc
cmp
mov
sub
daa
dec
xchg
dec
mov
add
cli
sbb
repz
xchg
mov
sbb
filds
fisubl
sbb
popa
in
pop
push
mov
das
loop
js
sarl
sub
dec
ljmp
clc
or
aad
push
mov
ljmp
pushf
mov
ljmp
mov
cmp
pop
mov
cs
sbb
sbb
jecxz
jbe
mov
loop
push
and
lock
adc
push
xor
xor
inc
jmp
rorl
outsb
pusha
insb
cmp
push
mov
xchg
sbb
int
adc
add
popa
adc
xchg
or
add
sbb
push
inc
daa
popf
push
fs
rorl
cmp
cwtl
cs
mov
and
je
jae
sti
adc
add
sub
into
push
ret
jge
push
stos
fwait
push
imul
loopne
mov
cmpsl
push
xorl
ljmp
or
inc
int3
sbb
push
gs
sti
data16
xchg
cmp
mov
stos
sub
cmp
sbb
outsb
lock
cmpsb
movsl
fnstenv
andl
imulb
pushf
mov
in
mov
dec
lock
dec
shrl
or
test
popf
sbb
shrl
xchg
dec
neg
addr16
das
mov
out
push
imul
divb
jecxz
mov
loop
ret
test
pushf
adc
sbb
pop
push
popl
mov
adc
adc
dec
and
arpl
addr16
push
pop
les
call
cltd
sbb
out
cmp
cmp
jnp
or
aas
inc
ljmp
add
clc
pop
jno
ja
icebp
jb
pop
sbb
daa
jle
mull
pop
stos
cmp
ljmp
mov
and
test
push
xchg
dec
lcall
stos
or
mov
push
push
sub
stos
jle
jno
xchg
push
imull
push
je
ficoml
cld
shrl
in
jecxz
and
cltd
mov
mov
pushf
scas
loope
mov
xor
adc
jae
cmpl
pusha
mul
lcallw
add
sub
divb
js
inc
jno
cld
add
int3
dec
dec
cmpsl
std
pop
cmp
insb
push
dec
push
cli
aam
adc
inc
add
clc
rolb
push
add
ret
adc
loope
jmp
adc
mov
test
sub
cmpsb
cld
mov
iret
push
pop
cltd
movsl
ret
fs
cmc
push
sahf
sub
mov
lret
inc
andb
sub
aad
inc
pusha
rcrl
fnstenv
push
nop
ret
int3
xor
je
and
sbb
sti
or
in
ljmp
inc
jp
loop
in
test
jecxz
pop
nop
mov
jl
cltd
jl
mov
nop
repnz
adc
dec
cmp
push
sub
addr16
mov
out
loop
or
jp
clc
pop
lcall
add
sub
cmpsb
mov
fisubl
xchg
loop
addb
push
xchg
pop
xchg
imul
int
imul
cmc
loopne
ret
add
and
adc
mov
int
xchg
in
and
insl
iret
lea
jae
clc
loope
jae
int3
test
jg
sub
and
sarl
xor
gs
or
and
jmp
scas
lret
les
sbb
cmp
add
jbe
or
push
sbb
scas
sbb
ficompl
pop
je
pop
in
add
pop
insl
pop
dec
push
das
dec
and
out
push
mov
lret
mov
bound
mov
jnp
clc
cltd
jle
adc
jl
dec
sahf
cmp
roll
pop
jl
jp
and
mov
rorb
ss
inc
jno
orb
push
jno
in
int
sub
ljmp
cmp
hlt
pop
js
icebp
popa
mov
inc
ss
and
xor
fwait
add
out
mov
or
or
pop
push
or
mov
pop
push
xor
insb
mov
xchg
sar
scas
or
push
test
out
pop
decb
jecxz
xor
xchg
out
xor
mov
inc
inc
inc
pop
cmpsb
shlb
icebp
test
out
jnp
lret
add
pcmpgtw
sub
add
sbb
jbe
fisubs
xlat
cmc
clc
dec
add
cmpsb
xorl
xor
orl
or
cmpl
ja
adcb
add
cwtl
outsl
sub
stc
scas
cmp
pop
sbb
lcall
cld
jg
test
pop
sbb
mov
mov
inc
xor
ja
add
sub
outsb
jne
imul
xchg
xchg
inc
daa
rcrl
dec
mov
ja
aam
add
je
inc
pop
inc
mov
shl
push
jno
pop
int
push
mov
xchg
add
aaa
xor
mov
incb
jo
mov
rolb
push
pop
stos
push
jge
cmpsb
xchg
jl
pop
fadds
xchg
pop
test
shlb
movsl
xor
popf
mov
xchg
jbe
mov
popa
lock
adc
pop
es
push
iret
test
lods
xor
daa
scas
push
movsl
pusha
sarb
fs
jl
rorl
stos
mov
insl
lret
jns
pop
xchg
cld
in
fstpl
jnp
rorl
mov
fsubs
jl
mov
pop
dec
mov
imul
dec
mov
mov
adc
repz
ret
xchg
jmp
les
cltd
adc
xchg
inc
cmp
jbe
mov
repnz
mov
insl
mov
movsl
xchg
arpl
xchg
jne
sbb
or
push
jo
or
test
push
push
lods
sbb
cs
ja
das
push
addr16
rclb
fsubs
push
and
mov
inc
add
jg
add
rorl
sub
subl
insl
mov
adc
cld
movsb
imul
jns
insb
jae
push
addr16
or
pop
xchg
adc
movsb
std
mov
push
sarl
push
lcall
push
or
call
movsb
push
mov
jae
xchg
or
add
insb
xorb
jnp
cmc
pop
shll
icebp
jne
mov
out
lret
xor
push
in
cmc
outsb
out
sahf
int3
mov
push
pop
mov
jno
mov
das
xchg
jae
mov
xor
sub
icebp
outsl
xor
mov
inc
rcrl
xchg
jp
xchg
push
mov
shr
add
xchg
jno
cmp
aas
lret
push
inc
insb
es
inc
pop
or
xchg
hlt
and
xor
bound
sub
mov
and
sub
cmp
lret
xchg
in
aam
lahf
rcrb
xor
data16
into
outsl
insb
push
cmp
rorb
loope
shrb
out
shll
ds
clc
cmpsb
push
add
ret
clc
mov
adc
cltd
mov
lods
in
sti
je,pt
iret
pop
or
jg
jne
loop
fwait
fwait
cs
xchg
mov
adc
test
jp
adc
aad
add
out
and
adc
cwtl
jge
imul
sbb
lcall
sbb
arpl
shlb
mov
cli
les
std
xor
pop
xchg
das
push
fwait
and
adc
mov
iret
arpl
xchg
sbb
rcrb
lret
add
es
dec
push
out
mov
mov
cwtl
roll
outsl
and
sbb
std
jnp
jmp
push
or
adc
push
jle
in
loopne
outsl
movsl
outsl
mov
movsb
mov
loopne
sub
and
xchg
jb
xchg
hlt
mov
in
outsl
push
add
das
push
popa
jb
xchg
fimull
mov
xchg
cli
jp
pop
jg
sbb
leave
adcb
xchg
cmpsl
and
and
mov
jg
lods
push
add
fbld
test
mov
xchg
jl
outsl
mov
rol
leave
pop
dec
stos
push
shrl
push
cmp
push
add
xchg
push
imul
int3
mov
filds
mov
sti
mov
xchg
pop
mov
xchg
cmpsb
mov
movsl
jno
add
sbb
jmp
scas
in
addr16
push
xor
or
lahf
ret
in
jno
fsubs
dec
push
imul
xlat
aad
xchg
xchg
add
and
in
add
adc
cli
mov
jmp
andb
xchg
repnz
adc
xchg
mov
out
not
or
outsb
cmp
aam
adc
clc
mov
xchg
mov
mov
sub
lret
in
icebp
stc
adc
sub
daa
scas
jecxz
in
popf
dec
stos
dec
arpl
xchg
or
andl
aaa
fildl
and
pusha
pushf
push
fidivl
jo
outsb
iret
pusha
push
jp
out
mov
xor
mov
xchg
sti
shll
mov
dec
mulb
mov
sti
adcl
jle
jp
aam
dec
jnp
cmp
inc
jns
and
int
inc
adc
mov
ljmp
sarb
cmp
movd
mov
jnp
stos
adc
test
das
ret
adc
mov
sbb
and
pop
out
jae
shlb
fcmovu
aas
popf
fwait
jae
jge
mov
jle
mov
dec
loope
sbb
cmpsl
cmc
fstpl
xor
out
pop
ficoml
in
test
push
rcl
scas
pop
shrl
lret
test
add
lret
xchg
add
push
add
clc
sti
fcmovne
fcompl
pushf
pusha
lods
mov
test
inc
add
push
imul
mov
adc
xor
test
pop
mov
sub
push
pop
loope
xor
arpl
push
xor
inc
cld
push
xor
clflush
aam
mov
imul
xchg
ss
xchg
add
aas
fdiv
xchg
jnp
aad
int3
push
test
adc
sub
mov
ss
cli
mov
xchg
jo
imul
loop
or
ja
pop
out
popa
jp
nop
mov
or
inc
sbb
or
sub
jecxz
jne
dec
ret
jg
ds
sub
mov
adc
add
xchg
stos
pop
outsb
shlb
pop
pop
out
aad
lcall
imul
mov
outsl
or
cmc
sub
and
adc
pop
mov
aaa
xchg
jg
adc
les
jno
xchg
sbb
xchg
xor
xor
cmpsl
sbb
test
mov
mov
adc
psllw
into
sub
jmp
push
fcomi
xchg
inc
mov
mov
push
jne
pop
inc
mov
push
push
xchg
xlat
sub
fbstp
push
fldt
pop
out
loopne
push
insl
fildl
xchg
lret
cld
mov
int3
jnp
pusha
mov
inc
lds
jns
fiadds
mull
lods
jno
mov
movsl
std
enter
pop
cli
fdivl
mov
push
mov
clc
sti
add
rcrb
jg
fldcw
push
subb
xor
sub
mov
mov
or
aaa
pop
clc
add
dec
sub
jmp
push
jp
cmp
fistl
filds
mov
mov
loop
jp
mov
sbb
stos
and
imul
shlb
orb
gs
arpl
inc
jmp
sub
leave
pop
sub
inc
iret
stc
and
xor
mov
mov
push
and
sarb
inc
xlat
fnsave
cld
add
or
test
push
dec
repnz
mov
lods
test
and
xor
gs
push
jnp
cmp
adc
rclb
pop
push
loope
ds
ja
mov
xor
pop
loop
push
pop
lock
lea
scas
cmp
pop
pop
insb
cmp
sbbl
add
xor
es
add
mov
int3
test
int3
inc
dec
ret
xchg
sbb
lcall
dec
jno
cmp
sbb
stc
insl
enter
mov
jl
icebp
test
xchg
mov
push
lret
mov
cmp
nop
jbe
stos
int
shrb
sti
jmp
fs
testb
mov
cmpsb
subl
push
xor
jb
pushf
xlat
outsl
push
pushf
jae
xchg
ljmp
mov
cld
lcall
mov
mov
lods
add
mov
xchg
mov
data16
outsl
jnp
mov
adc
cmpsb
cmp
jp
cmp
mov
cmp
xlat
out
add
push
fbld
mov
mov
sub
dec
in
shl
jecxz
mov
xchg
add
cmp
pusha
popf
in
stos
pop
xchg
dec
pop
clc
push
cmp
xchg
jmp
stos
test
cmp
incb
or
mov
or
mov
or
cwtl
lods
movsl
clc
movsl
xor
subb
lods
outsb
mov
bound
lahf
jo
adc
mov
imul
push
ss
fwait
gs
ret
and
inc
xchg
cmp
pop
xlat
or
push
xchg
jl
push
jle
push
clc
sub
nop
lods
push
lock
xchg
roll
push
or
neg
fstpl
call
inc
mov
jb
jge
mov
dec
inc
sbb
add
clc
ficompl
mov
jg
xchg
jg
adc
pop
enter
dec
dec
mov
pop
in
cmp
inc
in
stc
loopne
and
std
call
xchg
jnp
cmc
jae
faddl
in
sub
xor
flds
mov
out
dec
cmpsb
loope
push
cmp
stc
push
lods
lret
and
mov
mov
push
pop
nop
push
loope
jmp
mov
dec
insl
cmp
pop
hlt
cmp
clc
int
cmp
pop
mov
sub
mov
mov
bound
lods
push
cmp
xor
push
addl
iret
lock
and
xchg
adc
test
adc
mov
sub
jb
in
push
insl
cmc
cmc
les
xchg
inc
sbb
adc
inc
jmp
xchg
outsb
jge
xchg
lcall
fsts
call
ja,pn
sarl
cltd
repz
and
mov
adc
sbb
sbb
call
pushf
mov
dec
or
lods
or
or
jle
pop
or
rcr
das
int
push
inc
test
or
popa
js
inc
cmpsl
std
push
mov
or
addb
pop
imul
fucomp
or
test
fadd
push
daa
sbb
test
cmp
scas
xchg
or
mov
lds
xchg
cmc
and
sub
xor
pop
jg
insb
and
loope
dec
inc
adcl
int3
lahf
repnz
pushf
dec
fisubs
jle
shrb
loop
js
fs
and
ljmp
push
out
xor
dec
pop
pop
add
mov
and
inc
nop
test
cltd
fsub
callw
or
clc
out
outsl
cmpl
xchg
test
les
jno
mov
daa
xchg
mov
addl
test
loopne
outsl
xchg
jge
sbb
ds
test
mov
cmpsb
decb
enter
mov
sahf
mov
mov
icebp
xchg
adc
inc
xlat
sbb
add
pop
sbb
sbb
xlat
je
aaa
insb
pop
push
cvtdq2ps
test
inc
ljmp
into
cmp
fsts
adc
lcall
adc
and
icebp
into
dec
ja
mov
mov
sahf
popa
loop
add
pop
outsb
xorl
ljmp
dec
and
lods
scas
out
test
push
sbb
mov
ds
inc
je
pop
lcall
mov
add
mov
dec
shlb
sti
inc
xchg
add
xchg
adcb
cmpb
into
xorl
aaa
in
addr16
icebp
std
xor
pop
pop
call
ror
mov
rorb
loope
inc
inc
mov
mov
push
xchg
jecxz
sub
aas
cmp
out
fcoml
adc
nop
arpl
pop
jnp
cld
mov
inc
cs
xor
mov
shll
pusha
xchg
jno
inc
adc
add
leave
rclb
aas
imulb
repz
imul
ficoml
push
mov
fidivs
rorb
inc
imul
scas
xorl
push
and
cmp
xchg
mov
sahf
inc
xor
mov
mov
ss
lds
rolb
outsb
aad
push
pusha
mov
add
xchg
outsb
leave
and
idivb
push
mov
aad
bound
insb
out
pop
inc
in
mov
pop
xor
scas
add
daa
cs
push
push
leave
fisubs
sub
add
leave
notl
push
mov
bound
ja
or
movsl
add
inc
adc
cmp
pop
and
adc
ficoml
out
mov
mov
repnz
out
xor
push
jnp
push
sub
push
ds
data16
scas
lcall
aad
mov
jns
dec
xor
out
inc
ds
adc
sbb
push
js
in
stos
xor
pop
out
insl
bound
mov
sahf
add
sbb
insl
ret
add
mov
mov
test
rorb
add
and
aas
imul
and
xchg
mov
cmp
mov
les
push
sub
sahf
xchg
jo
adc
addr16
stos
dec
xor
lahf
fcmove
sub
scas
mov
negb
cmp
xchg
gs
mov
pushf
adc
mov
lret
and
aas
in
addb
aaa
dec
cmp
pop
imul
out
out
jnp
xlat
and
jp
pushf
das
cwtl
es
mul
pop
fcomip
out
pop
sahf
mov
ss
mov
fisttpl
or
out
ljmp
jbe
ret
sub
sarb
adc
mov
add
and
jge
jnp
xor
or
fdivrl
dec
ror
dec
dec
ljmp
lret
push
mov
xor
jnp
lock
mov
sbb
cmp
repnz
jg
inc
xor
mov
iret
clc
std
push
insl
pop
in
hlt
ret
shrb
mov
xchg
iret
mull
adc
filds
cltd
pop
flds
mov
dec
sub
dec
mov
cmp
mov
imul
adc
repnz
sub
xchg
mov
add
add
and
sub
xchg
faddl
xor
mov
mov
push
bound
mov
es
sub
lock
xchg
push
push
pop
push
outsb
rclb
xchg
inc
lock
mov
cmc
lods
jno
mov
or
arpl
push
jle
inc
sub
sbb
lahf
push
pop
mov
xlat
mov
sub
lea
test
or
mov
pop
mov
imul
dec
push
sar
imul
out
mov
testl
fsts
rol
inc
es
js
out
mov
jp
ret
mov
lret
or
lcall
lods
push
insl
add
sbb
jno
pop
iret
shll
jno
dec
add
push
or
fs
cld
or
icebp
mov
popf
stc
imul
mov
jle
insb
jnp
inc
dec
sub
ret
std
lcall
sbb
push
add
jl
rcr
adc
loopne
cmp
xor
test
mov
push
adc
sti
and
cmp
mov
nop
cmp
lcall
andb
mov
orb
cmpsb
fstps
push
adc
mov
das
add
xor
shlb
or
dec
mov
jle
cmpsb
das
aas
and
in
cltd
inc
pop
or
add
iretw
fstl
mov
and
pop
fsubrp
pop
inc
jo
mov
pushf
push
push
fwait
xchg
dec
jno
or
cmp
pop
sbb
iret
lods
cmp
jae
lret
aas
fdivl
ficoms
insl
aas
lock
cmpsb
xlat
roll
fldln2
inc
lods
cmc
stc
or
out
in
je,pt
pop
jno
sti
xchg
dec
mov
sub
add
inc
cli
and
jp
scas
cwtl
aaa
push
sub
pop
inc
inc
fdiv
add
cs
dec
dec
xlat
or
dec
dec
arpl
lret
cltd
roll
jne
xchg
imul
or
aaa
mov
jmp
imul
subb
push
loopne
mov
popf
xor
notb
out
dec
push
ffree
sbb
push
mov
xor
fsubs
add
add
pop
pusha
test
shl
add
and
xchg
cltd
cmc
out
xchg
inc
sbb
inc
pop
clc
ret
insl
push
popa
jnp
aad
xchg
cmp
test
mov
sub
mov
mov
mov
cmpsb
dec
lds
aam
mov
lods
lret
cmp
push
xchg
mov
push
fnsave
das
mov
inc
add
rcll
dec
pusha
movsb
fidivl
mov
sub
add
fs
pop
pushf
imul
xchg
scas
sub
test
in
pop
sbb
iret
sar
movsb
ds
aad
and
dec
xchg
push
cmpb
push
xor
cltd
insl
popa
imul
imul
mov
push
jae
aaa
fucomi
push
mov
inc
dec
movsb
cmp
add
push
jmp
mov
mov
sbb
je
cltd
fwait
lret
fdivl
arpl
mov
fwait
outsb
ja
add
jbe
or
sbb
insl
jmp
push
jge
jb
or
push
push
xor
and
test
push
into
cmp
jns
rcll
fidivl
pop
icebp
sub
and
loopne
in
cld
adc
push
repz
sahf
inc
jb
mov
xor
pop
adc
sub
sbb
dec
lods
push
pop
lods
pop
fcoms
jne
and
sbbb
fwait
xchg
in
push
adc
inc
cwtl
inc
fsubr
lods
out
ret
sbb
ret
popf
cs
fnstcw
pusha
xchg
adc
cmpsb
sub
outsb
xchg
fldt
cltd
fwait
xor
inc
push
daa
popa
ljmp
mov
aas
mov
lods
inc
fstl
out
or
push
lock
cmpsb
pop
jnp
pop
add
dec
cltd
ret
imul
out
ds
mov
mov
outsb
sub
or
cmp
mov
ffree
or
mov
sub
mov
loope
push
jmp
mov
fisubrs
lahf
imul
sub
call
dec
outsl
adc
std
subl
cli
push
sub
aad
cmp
push
clc
add
rcl
aam
lods
aas
dec
xor
mov
xchg
adc
jmp
xchg
xchg
mov
push
add
loope
inc
dec
cmpb
sub
testb
pop
cmp
jp
jb
mov
pop
dec
in
imul
mov
xchg
push
arpl
sti
test
hlt
and
or
xor
push
outsl
sti
cmp
rol
pushf
shr
jnp
adc
xor
scas
cmpsb
inc
cmp
cli
push
or
jge
scas
inc
int
lcall
adc
adc
jo
inc
xor
adc
int
cmpsl
xchg
jle
dec
jne
jg
je
ds
mov
outsb
mov
pop
add
adc
in
push
leave
mov
lods
loopne
dec
jge
cli
push
enter
xlat
loope
das
pop
sub
jb
insl
fbstp
mov
fists
leave
shl
adc
orl
or
fsubrl
or
jecxz
or
shrb
dec
ds
lods
lods
xchg
stos
sub
add
xchg
lcall
mov
call
lea
lods
lods
jmp
cmp
or
lea
gs
or
xchg
outsl
sub
scas
sub
loop
xor
hlt
ljmp
sbb
cmp
mov
cli
in
inc
lock
mov
jp
pop
pop
jo
cmp
mov
or
cmp
inc
jg
ds
lods
mov
adc
pop
fcmovb
xor
mov
bnd
stc
in
movsl
subb
or
ja
mov
mov
xlat
imul
fcomp
mov
repnz
dec
mov
cmp
dec
pop
fnsave
js
nop
and
dec
xchg
stc
es
or
pop
mov
push
mov
sbbb
fstpl
mov
dec
add
inc
mov
lcall
sub
out
stos
testl
pushf
test
cmpsb
es
jecxz
pop
pushf
push
shrb
mov
outsb
pushf
aas
sub
sbb
icebp
dec
cmpsb
rcrb
and
cmp
mov
inc
jl
rcl
sub
leave
push
mov
fsubrl
aaa
repz
jp
popf
cmp
pop
lahf
enter
fdivr
push
xchg
testb
inc
mov
jae
xchg
jae
mov
or
push
sbb
insb
xlat
add
dec
ss
in
xchg
mov
push
push
mov
cmp
push
cmpsb
gs
sub
dec
push
ljmp
fcoml
stos
sub
divb
mov
into
call
popa
orb
pop
inc
in
int3
lods
adc
mov
mov
adc
shl
fucomp
fldt
jne
pop
xor
stos
mov
adc
mov
rcrb
into
rorb
lret
push
ret
jge
pop
stc
fcoml
xor
aaa
dec
xchg
jmp
out
fmuls
mov
stc
test
mov
inc
lock
aam
addr16
test
loope
mov
nop
push
inc
pop
jae
sub
and
push
xlat
cmp
sar
xor
mov
jmp
imulb
adc
cmp
lret
push
mov
mov
leave
aaa
adc
add
jnp
jecxz
mov
and
dec
sbb
jne
int3
loope
cmp
cwtl
dec
ss
or
push
aad
ficomps
dec
mov
mov
or
sbb
add
pop
xchg
ret
mov
lds
sbb
mov
cmpsl
je
call
add
mov
repnz
sub
movsb
xor
test
push
sub
dec
push
rclb
push
pop
sarl
daa
jb
das
sbb
inc
into
push
pop
adc
xchg
add
or
in
adc
xor
push
sub
mov
in
out
jns
popf
cmpsl
xchg
xor
dec
subl
mov
push
mov
int3
push
push
movsl
in
loop
or
pop
enter
sbb
pushf
cld
loopne
xchg
enter
xchg
push
pop
iret
fcoms
lret
jno
jne
ret
testl
rcrb
pop
dec
mov
push
inc
test
ret
iret
sub
arpl
push
std
pop
out
xchg
arpl
mov
push
add
sub
push
pop
sub
sbb
mov
in
pop
pop
pushl
dec
xlat
mov
sbb
cmpsl
sbb
rorb
stc
push
add
adc
and
addl
and
faddl
push
lcall
enter
fdivs
add
insl
pop
dec
lods
jbe
mov
insl
adc
repnz
sbb
addl
es
cmp
jge
lea
or
mov
mov
xor
dec
cmp
das
fwait
test
test
push
dec
jle
dec
xchg
push
jmp
addr16
aas
sahf
mov
shlb
jle
mov
test
sbb
jle
in
sahf
mov
iret
addr16
add
roll
lcall
jp
fisttps
or
xchg
jp
cmpb
add
sahf
inc
in
scas
mov
mov
fldcw
imul
push
aad
sub
icebp
push
xchg
sbb
push
sub
add
aad
mov
pusha
lcall
stos
cltd
or
je
negl
adc
xor
xchg
or
cli
and
int3
xlat
adc
add
sbb
push
popa
mov
rcr
mov
in
xor
subl
outsl
dec
sahf
inc
testb
pop
push
cmc
aad
jecxz
cmp
pop
pop
pop
sub
adc
lock
ss
mov
inc
mov
cld
adc
pop
sub
xlat
mov
in
insb
stos
mov
pop
sbb
lea
loop
lret
mov
adc
jp
dec
mov
xchg
call
and
cmp
pop
outsl
fcmovnu
push
jge
mov
fiaddl
outsb
mov
shrl
cmc
mov
fsubr
test
call
inc
lods
dec
mov
leave
xchg
cmp
aad
pop
outsb
lods
xchg
or
push
das
fs
negb
das
int3
jne
shrl
cmp
fsubrs
repz
fs
mov
cmp
xorb
pop
push
mov
mov
cmp
outsb
and
iret
mov
mov
sub
xchg
aad
into
jb
ret
pop
sub
cmp
mov
push
or
xor
mov
cmp
inc
out
pop
popf
mov
into
mov
mov
mov
push
sarl
push
xor
idivb
ljmp
push
out
lahf
out
xchg
es
dec
dec
pop
movb
out
xor
inc
fbld
shrb
jne
jae
sub
mov
and
sahf
sub
xchg
push
push
call
outsb
inc
mov
loop
mov
sbb
xor
or
nop
shrb
push
negb
add
mov
icebp
sbb
fisubrl
sbb
jne
mov
sub
daa
pusha
shll
int3
cmc
xchg
icebp
outsl
and
aad
nop
adc
js
lods
lret
cs
or
es
ds
sbb
inc
dec
rcrl
daa
repnz
popl
repnz
cs
or
push
fcoms
loope
fbstp
decb
mov
int
inc
adc
pop
addr16
movsb
sahf
or
enter
jne
bound
cmp
xor
xchg
or
bound
dec
and
xor
jno
fldenv
dec
push
mov
cmp
popa
xor
push
and
std
dec
jns
and
repz
mov
dec
xchg
sbb
shll
mov
test
ficoml
cmp
sub
arpl
push
cmp
mov
test
and
out
xchg
mov
es
adc
sub
sbb
adc
adc
inc
dec
lret
call
scas
ficoml
mov
push
or
popf
jae
in
jnp
std
mov
pop
int3
jecxz
ljmp
push
jp
cld
sbb
cwtl
clc
jne
xchg
mov
mov
push
cmpsl
ret
jo
or
push
or
int3
popa
dec
xchg
pop
sbb
pop
setnp
xchg
push
or
xchg
and
mov
mov
push
sbb
outsb
or
push
push
pusha
subl
jns
pop
or
dec
pop
call
es
flds
jb
xor
push
cmp
sub
inc
cmp
stos
jmp
testl
addr16
jns
jb
stos
int
loop
sub
sbb
xor
mov
mov
adc
add
dec
outsl
out
test
cmp
xchg
pusha
dec
jecxz
and
pop
popf
mov
add
out
jl
mov
sub
dec
iret
push
adc
int3
jg
sub
test
adcl
out
call
mov
das
loope
cmp
mov
mov
inc
repnz
iret
ja
aad
rolb
mov
add
mov
inc
inc
push
jae
stos
int
repz
mov
stos
xchg
mov
mov
orl
jnp
jg
mov
fucom
mov
outsb
insb
insl
dec
js
out
jge
mov
dec
ljmp
xchg
or
popf
pop
push
fadd
inc
push
lock
cmp
push
push
cmc
out
mov
lods
lock
push
cmpsb
mov
pop
mov
fnstcw
add
pop
mov
adc
daa
adc
in
gs
fidivrl
xor
mov
outsb
out
xor
insl
fs
adc
cmpsb
out
ds
and
sub
fs
dec
and
jl
loop
jle
out
and
fcomps
mov
dec
jnp
and
dec
leave
dec
lcall
pop
cli
in
into
clc
loope
leave
clc
add
pop
cmpsl
adc
bnd
sarl
mov
sub
jns
jmp
xchg
mov
add
jg
mov
add
xor
jne
mov
jmp
aad
xor
inc
cmp
mov
jnp
sub
dec
loop
aas
pop
jmp
mov
push
fisttps
test
push
jmp
cmp
mov
mov
mov
lret
add
and
sbbl
mov
pop
xchg
mov
dec
ds
mov
imul
dec
adc
shlb
mov
ljmp
imulb
push
cmc
sbb
loope
lahf
daa
sbbl
and
repnz
dec
mov
mov
pop
and
sub
dec
enter
aad
frstor
lcall
scas
push
pop
stos
push
push
sbb
sub
lret
push
sarb
add
sbb
inc
add
mov
aaa
out
pop
cmp
scas
jbe
jb
jnp
sahf
mulb
sub
add
cmp
scas
mov
lock
je
imul
movl
loope
data16
aad
pop
jb
mov
stos
push
inc
ror
fcoms
sti
cmc
outsl
sbb
rolb
sahf
add
mov
or
ds
inc
xorb
mov
andb
jae
dec
cwtl
loopne
hlt
pop
ljmp
cmovl
int3
in
outsb
scas
ret
in
pop
pop
jae
mov
or
or
cld
mov
lcall
fwait
inc
lds
and
sbb
cmp
negb
add
into
sub
jmp
and
clc
sub
xorb
stc
and
insb
lods
dec
adc
jns
xchg
rolb
cltd
stos
hlt
shr
sbb
add
jne
sahf
daa
lahf
push
xchg
sbb
incb
cmpsl
stc
decb
xchg
adc
test
inc
adc
pop
add
mov
mov
lahf
pop
adc
les
inc
scas
sti
jnp
push
add
inc
push
adc
dec
xor
ljmp
inc
neg
inc
sbb
cmp
mov
bound
cmp
cmp
subb
out
push
fidivrs
xlat
loop
cmc
mov
cli
add
out
xchg
push
cmp
xchg
sub
pop
and
leave
imul
pop
into
sub
jle
cltd
pop
fdivl
insl
sbb
out
in
test
bound
xorl
push
mov
sbb
and
sbb
dec
aaa
cmp
mov
scas
mov
pushf
mov
loopne
pop
stc
jecxz
inc
sbb
call
or
cmp
dec
data16
jge
lcall
in
lock
test
int
sub
adc
pop
mov
jne
cmp
push
rcl
cld
xchg
fisttpll
aas
fistps
sub
xchg
xchg
lea
sub
inc
test
push
jne
popa
int3
mov
cmp
and
cltd
jno
sub
xor
scas
mov
imul
lock
loopne
push
sti
mov
sub
lock
pop
out
or
repnz
add
test
cld
lcall
lock
subb
adc
and
lods
xchg
adc
out
loope
push
lret
lods
xchg
leave
scas
and
in
and
cmp
or
xor
mov
lcall
popa
divb
imul
nop
sbb
mov
in
push
test
cmp
divb
or
das
pop
repnz
lea
pop
sub
orl
cmp
add
int
jo
in
jl
jbe
mov
sar
inc
adc
ljmp
jo
pop
out
and
stos
pop
sub
dec
hlt
or
jp
rol
add
int3
jae
mov
push
sub
cmp
mov
in
sub
cs
out
cmp
pop
cmp
adc
adc
test
inc
or
sub
icebp
inc
sbb
imul
enter
ljmp
fisubrl
xor
dec
push
and
sub
push
xchg
adc
jae
xchg
pop
xchg
bswap
cs
mov
popa
mov
mov
decb
ds
in
out
scas
xchg
xor
ljmp
mov
cmp
and
cmpb
cmpsb
fcmovbe
jp
je
or
mov
dec
or
fdivr
cmp
xchg
fldenv
sbb
les
jo
adc
pop
dec
test
out
jge
push
cmp
xor
xchg
rclb
mov
cmpsb
mov
mov
leave
mov
test
je
mov
pop
xlat
out
int
incb
mov
fnsave
sub
cwtl
xchg
test
xlat
out
pop
add
add
pop
lock
scas
pop
repz
fistps
mov
xlat
outsb
push
data16
ret
sahf
or
es
jno
ror
repz
fnsave
out
mov
cmp
xchg
dec
sbb
xor
int
lds
add
ret
jle
iret
xchg
test
adc
inc
lret
fisttpll
xchg
je
adc
fdivrl
inc
icebp
addr16
daa
stc
in
add
jge
push
jnp
mov
pop
mov
fadds
cmp
in
jne
loope
pop
mov
mov
xchg
inc
scas
and
pop
out
ja
stos
mov
ret
test
in
sbb
jle
pop
lods
scas
xor
test
push
add
sahf
adc
test
push
sub
call
and
imul
dec
lods
mov
dec
decl
stos
bound
sbb
lods
mov
mov
and
stos
fmuls
sub
sub
or
jg
outsb
xor
test
loopne
aam
xchg
mov
lret
and
movsb
lods
mov
mov
fadd
xchg
ljmp
insb
push
jge
arpl
std
mov
xchg
rolb
shrl
sti
jns
jg
push
jg
sub
fisubrl
adc
lret
xchg
movsb
push
inc
mov
cmp
xlat
sahf
inc
std
mov
push
scas
jg
fistps
pop
and
xlat
xchg
push
dec
mov
xchg
mov
push
outsl
dec
add
addb
divl
sbb
mov
mov
test
movl
dec
sub
add
push
mov
lahf
cltd
shrb
lret
mov
stos
xorl
cmpsb
lea
jno
xor
ljmp
sbb
mov
lock
aad
dec
sarb
jb
inc
les
mov
mov
imul
cmp
daa
push
outsl
stos
cmp
pop
sub
movsl
mov
dec
add
mov
rcr
pop
cmp
cmp
pop
clc
addr16
enter
out
mov
adc
cmp
dec
out
scas
cmc
or
inc
lods
pop
inc
or
dec
sbb
inc
adc
cmp
sub
into
das
xchg
pop
add
mov
and
rcll
ljmp
xor
lret
add
outsb
call
xlat
xchg
or
mov
fs
lods
add
out
idivb
jmp
push
negb
andl
mov
jle
inc
das
dec
push
mov
rcll
ficoms
enter
sbb
mov
dec
xor
cmpsb
outsb
outsl
mov
fwait
mov
xchg
sbb
or
sub
fidivrs
arpl
ljmp
in
call
clc
aaa
stos
and
jg
push
push
xchg
push
rorl
cmc
in
push
inc
adc
sub
filds
xchg
add
dec
jb
lcall
out
inc
push
aas
cwtl
stc
stos
sub
fmul
out
les
mov
xchg
jmp
add
adc
or
xor
add
out
jge
and
enter
mov
mov
outsb
call
sub
pop
add
pop
push
out
stos
clc
stos
lea
sub
int3
je
pop
xchg
push
sti
dec
push
scas
in
sbb
push
pop
or
int
ljmp
or
or
shr
adcl
sbb
pop
mov
lods
test
pop
stc
ja
lret
xor
sub
push
fsubl
lds
insb
in
jle
and
adc
fdiv
hlt
xor
icebp
sbb
cmc
dec
sub
xor
mov
ret
xchg
aad
addr16
inc
adc
adc
jbe
ljmp
jecxz
sub
jns
jg
cmp
mov
dec
or
and
std
in
jmp
inc
push
push
push
mov
mov
les
lret
in
jle
movl
bnd
push
clc
pop
test
shrl
xchg
add
sbb
dec
pop
fdivp
inc
cmp
fs
cli
mov
in
mov
mov
cld
icebp
in
mov
xchg
jne
adc
pop
xorb
int
cmpsb
adc
out
jge
arpl
and
pop
xchg
xlat
fdivrl
or
out
lds
negl
cmp
pop
mov
add
jp
popa
repnz
push
mov
fdivrl
lcall
mov
xor
add
jbe
push
mov
mov
xchg
iret
loop
scas
decb
sub
in
xor
hlt
xchg
inc
mov
movsl
pushf
icebp
dec
or
add
out
xchg
enter
add
data16
lods
cmp
mov
and
xchg
cmp
mov
mov
or
aaa
xchg
outsl
and
nop
xchg
lock
aas
imul
pop
in
push
sub
cld
andl
cmp
negl
xor
outsl
popf
dec
test
and
sub
push
mov
jnp
fucomi
loop
ljmp
aaa
aaa
rcll
mov
mov
add
filds
mov
dec
je
cmovo
mov
cmp
lret
xor
add
inc
adc
and
mov
adc
jge
xchg
hlt
add
sub
adc
out
xchg
jg
dec
stc
push
lods
adc
jge
lahf
fxtract
jcxz
je
js
dec
jo
mov
dec
int3
mov
aas
pusha
pop
mov
pop
sub
fisubl
xchg
jmp
mov
rolb
push
lret
popf
pop
push
lret
cmp
ja
cmp
das
mov
dec
lea
and
pop
sahf
push
xor
jbe
nop
pop
jge
in
inc
xchg
sub
pop
movsb
cli
lcall
xchg
jne
cmp
adc
jg
es
jp
fiadds
or
shlb
cmovp
inc
loopne
pop
cli
jecxz
into
pushw
cmp
or
xchg
call
jns
and
pop
mov
add
mov
xor
xor
add
popf
lret
faddl
insb
int
add
pop
inc
adc
std
dec
test
dec
stc
jmp
clc
xchg
out
je
jbe
jo
cmpsb
xchg
je
mov
mov
xchg
loop
adc
popa
sub
mov
loopne
xor
out
lret
sti
jb
ficoms
lds
sti
push
xor
fs
mov
movsl
mov
and
aam
push
icebp
mov
push
test
aad
mov
imul
jns
mov
fistpl
sbb
stos
cmpsb
movsb
imulb
in
xchg
push
add
fsubl
pop
pop
inc
pop
xor
loope
movsl
xchg
pop
in
es
jmp
cmc
dec
inc
shlb
lcall
and
adc
push
and
push
jl
cmp
xor
push
push
movsb
and
movsb
mov
push
je
jle
out
add
mov
inc
stos
jl
adc
push
outsl
push
ja
mov
cmpsl
jmp
lods
xor
pop
bound
adcb
jmp
push
fs
inc
iret
ljmp
xchg
or
add
sub
outsl
dec
jns
or
outsb
jp
xor
and
int
mov
sbb
mov
outsl
add
sbb
sarb
addr16
pushf
mov
sub
mov
test
sahf
cli
sub
pusha
dec
nop
in
js
cmp
mov
or
or
lock
pushf
cmp
mov
adc
dec
jns
inc
jge
mov
seto
leave
push
out
adc
add
pop
repz
cmpl
sub
or
push
inc
sub
in
jp
mov
jnp
dec
jecxz
jge
push
jle
push
loope
adc
pop
fs
aas
jmp
shll
adc
push
scas
xor
js
push
out
xchg
xor
loope
mov
inc
test
mov
sbb
xor
push
pop
jl
pusha
and
sub
lret
sub
mov
push
inc
inc
xchg
xchg
jle
xor
jo
hlt
mov
lret
scas
push
scas
dec
inc
fistl
test
or
mov
sarb
lods
jle
aaa
cmp
fwait
xchg
lods
movsb
push
or
inc
iret
dec
mov
xor
push
mov
rcrl
roll
push
clc
fldenv
pop
xchg
and
dec
push
dec
sbbl
insb
in
xchg
jne
mov
push
or
and
aam
dec
out
hlt
push
repz
hlt
jno
adc
fwait
push
sub
xor
cmpsl
xchg
jge
adc
or
adc
pop
into
mov
and
cmpsl
je
mov
mov
test
xchg
jmp
xor
xchg
jge
adc
mov
mov
inc
adc
xor
loope
pop
mov
lods
out
mov
loope
pop
rorl
sbb
in
inc
in
lods
push
mov
xchg
stos
rolb
scas
push
sub
popf
sbb
lret
add
gs
stos
ljmp
rcr
cmc
jle
xor
bound
sahf
pop
mov
fdivl
pop
lcall
cmp
cmp
mov
mov
aaa
xlat
dec
pushf
int
cmp
pop
or
adc
popf
call
cmp
add
cmp
popf
jg
dec
jno
pop
es
and
and
sarl
cmpsb
outsb
push
cwtl
out
pop
imul
pop
cs
inc
cmp
decb
cmp
std
xorb
jge
in
and
jo,pt
stos
enter
add
inc
loop
mov
mov
shll
sub
adc
insl
dec
mov
fsts
ss
push
or
jmp
imul
xor
mov
js
mov
xchg
arpl
aas
das
iret
inc
pushf
sbb
pop
pushf
sar
mov
cmpsl
jge
xor
xor
nop
arpl
je
cmpsb
das
jae
mov
insb
mov
sahf
jmp
xor
out
or
pop
and
add
cmc
popl
dec
mull
cs
jle
dec
popf
push
dec
pop
sub
jae
dec
push
and
mov
hlt
and
ds
sub
in
pop
and
pop
pop
lret
js
lahf
mov
pop
pusha
bound
mov
repz
xor
jb
dec
inc
cli
movl
rolb
hlt
mov
in
and
inc
imul
xor
pop
repnz
xchg
outsl
mov
fdivrl
repz
mov
jmp
inc
xchg
mov
inc
sbb
sahf
dec
inc
pop
insb
aas
pop
loopne
stos
mov
pop
jmp
jp
add
sti
lcall
dec
mov
inc
pop
sbb
mov
xchg
mov
testb
push
push
and
mov
xchg
fyl2xp1
mov
sbb
jb
adc
sbb
push
adc
mov
mov
imulb
dec
add
xor
fnsave
push
adc
sbb
sahf
int3
xlat
inc
ficompl
pop
movsb
sbb
imul
and
pusha
lret
adcb
adc
outsb
test
add
mov
popf
in
fwait
repz
ffreep
jle
or
adc
repz
and
subl
push
add
and
out
mov
or
jp
ds
lea
repnz
rcll
rclb
mov
das
cltd
mov
cltd
aas
jns
xchg
cmc
cmp
outsl
mov
enter
sub
std
imul
das
and
movsl
call
fisubrs
inc
push
push
call
pop
xchg
xor
movsb
xlat
jge
data16
add
cmpsb
cmc
repz
imul
daa
out
aas
lidtl
push
into
push
xchg
mov
ds
leave
leave
jecxz
call
arpl
lods
mov
mov
and
mov
inc
xchg
sarl
cmc
popf
mov
fisubrl
cmpl
test
push
inc
jecxz
push
je
sbb
imul
inc
mov
fistpl
xchg
or
roll
inc
cmpxchg
xchg
rorb
adc
aam
push
clc
adc
sahf
fldl
cmp
and
push
rolb
aaa
cltd
mov
pop
stos
std
jne
cmp
imulb
mov
pop
fwait
and
test
cwtl
sarl
push
and
xor
lea
in
test
and
mov
mov
in
jl
cwtl
clc
out
iret
push
test
popa
imulb
jecxz
pop
and
or
ljmp
std
jmp
in
ror
or
add
push
sub
add
sub
into
imul
jecxz
inc
loop
sbb
mov
xor
xlat
in
cld
pop
mov
add
sbb
stos
and
inc
mov
gs
push
ret
outsl
adc
repz
mov
rolb
jne
xchg
jge
in
and
push
rcr
push
ror
sbb
adcb
loope
add
inc
cmp
fwait
clc
sub
ds
cmp
sti
mov
aaa
push
iret
xchg
call
scas
inc
ret
jns
mov
jle
mov
aam
icebp
jbe
pop
repnz
leave
dec
inc
jecxz
inc
adc
scas
sbb
cwtl
cmp
xchg
daa
mov
add
sub
sub
jb
clc
sub
out
nop
jle
leave
loope
or
imul
nop
add
mov
rcll
mov
bound
leave
push
xchg
dec
push
orl
mov
cld
test
mov
inc
mov
lock
adc
inc
pop
fistpl
mov
xor
nop
les
and
add
mov
scas
jo
insl
xlat
sbb
loop
adc
ljmp
jmp
or
inc
lcall
bound
add
cmpsl
cs
mov
fs
testb
sti
sbb
leave
push
cmp
out
mov
xor
aam
ss
ret
shrb
std
push
out
or
adc
je
pusha
lret
loop
lahf
push
sub
xchg
jg
pop
xchg
rorl
test
cld
out
mov
pop
mov
jns
int3
divl
fxam
cmc
xor
je
xorb
pop
pop
in
sub
fidivl
and
js
mov
add
mov
xor
int
mov
outsl
daa
cmp
int3
lea
mov
add
ds
lret
and
addr16
push
loop
cmpsb
mov
xor
sub
adc
iret
mov
ja
imul
dec
push
sub
pop
cltd
sarb
roll
je
cmp
notb
pop
push
jge
sub
lods
leave
scas
mov
xchg
dec
ja
test
in
and
movsb
pusha
mov
add
dec
adc
pop
add
pop
xor
fsub
addr16
adc
dec
pop
ja
sbb
repnz
test
push
mov
in
rclb
sbb
cwtl
adc
mov
mov
out
dec
loope
lds
cli
mov
mov
push
in
sbb
inc
int3
je
push
xchg
xor
in
in
jle
mov
in
mov
ret
pop
sbb
push
mov
pop
in
dec
sbb
neg
leave
addr16
stos
pop
scas
sub
mov
cmp
xor
mov
gs
mov
mov
repz
rcrl
push
lcall
insb
out
push
stos
mov
aaa
lcall
xchg
sbb
pushf
sarl
dec
cld
pop
outsb
rcl
xor
inc
pop
pop
in
add
and
fwait
das
es
or
cmpsb
inc
and
aam
sbb
cs
pop
popa
pop
xchg
aad
jecxz
shrl
push
cmp
inc
mov
add
xchg
mov
cmp
testl
test
dec
mov
sbb
sbb
or
mov
dec
add
aas
outsb
cs
mov
mov
cli
or
jmp
out
add
outsb
xlat
adc
sub
mov
adc
fisubrs
movsb
outsl
lea
call
inc
imul
xchg
lods
xchg
cmpsb
sub
jo
fistl
pushf
mov
pop
add
into
mov
out
int3
push
clc
jb
jnp
scas
add
fwait
and
gs
std
mov
sbb
push
stos
mov
std
icebp
mov
mov
adc
xchg
lcall
popa
into
pop
xor
arpl
xchg
pop
dec
jo
mov
jmp
pushl
sbb
lcall
jne
mov
into
cmc
mulw
inc
pop
rclb
cmpl
ret
mov
adc
addr16
dec
pushf
jae
lods
test
lcall
insl
mov
lods
sub
push
insl
push
frstor
hlt
stc
roll
add
and
mov
hlt
shrl
pop
rclb
test
outsl
test
lods
inc
lock
mov
push
and
in
mov
fistps
push
leave
push
jg
sbb
jg
mov
movsb
in
push
xchg
and
sbb
adc
repnz
ret
idivl
sbb
jae
repnz
sbb
sub
push
fistl
ret
mov
push
pop
xlat
pop
add
iret
clc
add
and
adc
es
pop
iret
mov
ret
mov
daa
jp
fsubs
cmc
fidivl
repnz
mov
stos
std
and
adc
fldcw
cmp
dec
aaa
popa
jns
ficoms
xlat
xchg
popf
aaa
add
dec
cpuid
and
and
xor
mov
loopne
mov
sbb
ss
cli
mov
lahf
sbb
xor
cmpsb
in
or
adc
fsub
cs
loope
aas
sbb
pop
lods
jecxz
fsubrl
sbb
sbb
push
mov
and
cmp
aam
sahf
inc
das
hlt
lds
enter
pop
inc
sbb
rorl
push
cmpl
pop
fcompl
push
int
shlb
test
mov
imul
out
shlb
dec
mov
scas
shl
sub
popf
sub
adc
out
pop
and
add
add
ljmp
stos
dec
xchg
mov
push
sbb
sub
rcrl
add
lods
ss
mov
repnz
xor
xor
je
popf
pop
xor
mov
orb
sub
push
imul
fstps
movsl
adc
sbb
mov
jno
bound
orl
add
out
xchg
mov
inc
shrl
cwtl
and
rcrl
into
jp
filds
jecxz
inc
push
imul
cmp
pop
shlb
xchg
in
sbb
test
mov
push
or
mov
scas
cmc
pop
inc
mov
sub
aas
je
test
out
and
mov
xor
xchg
mov
mov
clc
jns
adc
or
shlb
xchg
add
cwtl
push
inc
jmp
movsb
inc
fiadds
add
dec
xor
mov
pop
es
jmp
pop
test
push
data16
call
daa
fidivrl
adc
mov
or
jne
mov
lea
push
jo
add
dec
bound
and
daa
orb
sarb
data16
xchg
aam
out
mov
push
mov
push
enter
sub
lahf
lcall
jg
hlt
xchg
fwait
mov
in
push
add
pusha
call
dec
jmp
push
lea
lea
cli
out
xor
arpl
mov
dec
notl
mov
gs
sub
repnz
mov
sub
jp
ret
or
and
out
rclb
or
out
pop
incl
bound
fdivs
repz
stos
int3
in
sub
sbb
pusha
jno
fmull
or
cltd
inc
inc
xchg
stos
mov
mov
test
aam
icebp
jae
xor
inc
ljmp
sbb
add
mov
xchg
in
das
mov
pop
sbb
mov
mov
fildll
mull
fildl
je
mov
in
loope
and
push
das
clc
add
mov
sub
sub
push
add
js
push
shll
outsl
cmp
popf
pop
enter
mov
jg
push
sub
xchg
fbstp
imul
mov
les
inc
add
mov
mov
popf
aam
pop
int
sub
pop
inc
stos
sub
jle
mov
push
and
xchg
or
loop
ljmp
sbb
push
push
push
ret
inc
dec
cmp
push
fistpll
jb
sub
cld
xchg
cli
imul
lods
popf
jbe
pop
xor
mov
or
jae
pop
pop
cmp
subl
test
sub
xchg
out
popf
fnstenv
dec
and
add
mov
adc
pop
outsl
stc
ss
sub
add
mov
stos
pop
call
xchg
in
wbinvd
jns
imul
scas
imul
pop
nop
xor
insb
inc
lock
cmp
icebp
pushf
in
mov
data16
jmp
mov
jnp
and
push
sub
or
scas
dec
pop
inc
xchg
jecxz
es
xchg
test
daa
jp
mov
add
jmp
aam
xchg
mov
pusha
jmp
dec
fsub
mov
mov
pop
jbe
dec
pop
shl
jnp
inc
sbb
repnz
mov
inc
hlt
jb
lods
push
xchg
inc
insl
and
dec
push
subb
scas
je
cmp
leave
clc
nop/reserved
lods
popf
cmp
xor
jle
xchg
imull
pop
pop
sbb
push
fsub
das
dec
inc
insb
mov
or
testb
in
pop
inc
lret
push
daa
push
mov
sti
icebp
call
sub
je
in
outsl
xchg
and
xchg
xchg
jg
jns
add
lods
sti
loop
in
cli
jne
std
loope
movsb
pop
pop
pop
pop
loopne
gs
add
lea
js
dec
stos
mov
movsl
push
cmp
dec
pop
inc
stos
mov
iret
repnz
test
sub
cltd
xlat
leave
push
pop
add
xorb
inc
ja
mov
inc
jno
xchg
adc
fdivrl
sbb
rcll
xchg
lods
mov
sub
push
insb
mov
sub
push
mov
add
loop
test
dec
femms
pop
push
aas
enter
adc
outsb
fwait
xchg
xchg
fwait
outsl
adc
push
jo
js
dec
fistps
dec
pop
ds
mov
sahf
ds
movsl
sbb
mov
inc
ret
iret
ret
insb
or
aad
inc
je
hlt
icebp
call
jb
and
lods
dec
mov
and
inc
pop
push
lods
cli
sub
xchg
add
inc
sub
loopne
xchg
enter
xlat
pop
mov
enter
aam
into
xchg
test
stos
or
xchg
mov
adc
sbb
mov
int3
push
and
out
jp
iret
out
xchg
lahf
add
jo
mov
push
cmp
inc
mov
sbb
enter
popa
jno
sbb
rcll
push
mov
ret
rolb
adc
arpl
or
xchg
bound
and
or
mov
sti
loop
jne
insl
sti
inc
fcmovbe
cmp
adc
shl
jl
sbb
mov
cmpsl
les
ret
jmp
add
lods
dec
inc
xchg
lods
clc
push
subb
pop
mov
daa
mov
jb
jp
xchg
leave
mov
or
lret
and
pop
lock
jns
mov
pop
dec
jge
jo
ds
pushl
pop
pop
inc
cwtl
pop
mov
scas
mov
sub
mov
adc
cmp
or
mov
movsb
movsb
push
xor
clc
xor
cmpsb
popa
andb
inc
aaa
test
cmp
xchg
test
addr16
cmp
pusha
popa
or
mov
sub
arpl
sti
pusha
mov
and
js
or
xor
aad
scas
aas
mov
pop
pushf
js
cmpsb
mov
in
inc
pop
addr16
fmull
fsubrl
clc
pop
out
mov
enter
sbb
outsl
bound
adc
stos
mov
push
fildll
fwait
leave
inc
bound
push
stc
pop
xchg
mov
add
roll
leave
inc
movsl
or
arpl
mov
xor
mov
jle
pop
sbb
enter
icebp
or
jle
loopne
outsb
std
cmp
imul
test
add
jnp
inc
dec
loop
inc
adc
daa
cmp
inc
xchg
movsl
sti
loope
sarb
lret
cmpsb
mov
add
test
or
jecxz
icebp
lods
outsb
aam
cmpsb
inc
add
fsubr
xor
jno
or
jae
sub
outsb
xor
and
or
mov
sub
mov
and
or
adc
xchg
and
cmp
mov
lds
cmc
test
shlb
loop
xor
into
mov
push
cmp
add
cmpsl
inc
push
stc
xchg
pop
mov
ss
imul
cmp
loopne
jg
aas
test
jge
stos
pop
testl
mov
fwait
lret
dec
xchg
mov
in
mov
mov
pusha
dec
jb
lahf
mov
cmp
dec
sbb
mov
inc
jp
clc
jl
out
add
adc
fidivl
jl
push
or
test
out
xor
mov
fwait
pusha
mov
push
call
fcomps
pop
inc
mov
sub
rolb
cltd
cmp
aaa
pop
mov
inc
and
push
mov
shlb
out
cmpsl
cmpsb
add
add
sub
jmp
mov
and
sar
pop
mov
cmp
out
rcrb
mov
jbe
cmpsl
mov
xchg
pushf
xchg
in
push
ja
arpl
fxch
lds
addr16
inc
fistpl
sub
clc
sub
inc
ret
imul
add
mov
std
pop
sbb
mov
adc
cmpsb
cli
ljmp
ret
xor
cmp
sahf
and
inc
rolb
cs
pop
cltd
mov
out
pop
call
mov
xor
lret
or
and
rol
sub
ljmp
enter
shll
enter
xor
add
mov
fiadds
lret
dec
cmp
mov
cwtl
btr
sbb
bound
test
lcall
outsb
push
imul
inc
push
inc
scas
mov
cmpsb
cltd
jo
add
mov
mov
aaa
and
pop
push
mov
cli
mov
mul
pop
out
loopne
xchg
mov
push
movsb
scas
mov
out
outsb
push
push
rolb
push
pushf
and
push
cwtl
jge
dec
lcall
or
dec
cmp
int3
xchg
and
xchg
sahf
inc
sub
cmc
or
adc
sub
dec
fistps
test
dec
pop
inc
daa
in
repz
into
inc
loop
xor
das
xor
out
pop
jge
xor
jno
inc
bound
mov
test
xor
sbbl
lahf
adc
dec
or
fnsave
test
xchg
divb
cmpsb
lahf
cmpsb
insb
in
mov
out
fwait
lcall
sti
mov
cmpsl
or
ret
mov
test
sbb
fcoml
lds
cmp
clc
xchg
fnstcw
imulb
testl
mov
ror
push
sub
cld
rclb
out
test
pop
xor
test
sbb
jecxz
dec
add
pop
ret
jg
scas
cmp
and
xlat
add
repnz
adc
xor
jo
jae
jbe
pop
ljmp
nop
fistpll
insl
pop
cmpb
push
out
mov
push
push
sbb
inc
into
push
mov
sbb
sti
popa
gs
stc
pavgb
scas
adc
dec
sub
xor
cli
sub
adc
and
popfw
fidivs
cs
jo
sbb
or
insb
aad
mov
out
les
inc
xchg
pop
das
mov
stos
mov
int3
mov
ret
sub
fldl
add
xchg
xchg
xchg
fildl
jp
idiv
and
stos
pop
lea
or
jnp
inc
push
rcrl
sahf
test
adc
shrb
cmpsl
mov
jb
pusha
sbb
fnstcw
jns
inc
loopne
test
lds
xlat
das
jg
pop
ret
stos
jne
insl
pop
out
ja
pushf
xchg
mov
in
mov
cmpsb
and
and
cmp
inc
insl
and
xchg
cltd
add
push
mov
addb
insl
mov
and
enter
add
shl
test
or
fcoml
or
dec
loope
or
popf
int3
lds
loope
mov
add
or
lea
lret
jnp
sub
loope
cmp
test
stos
xchg
cmp
scas
cmp
mov
sub
pop
test
lock
ret
inc
xchg
in
mov
sbb
cwtl
mov
popa
je
pop
bound
je
mov
js
scas
mov
flds
es
iret
sub
jb
adc
jg
mov
mov
inc
ficoml
mov
das
or
test
and
jl
aaa
mov
push
and
pusha
or
in
outsl
cli
dec
adc
repz
mov
nop
mov
shll
cmp
lret
loop
movsb
test
and
test
xor
mov
fcmovbe
adc
inc
dec
popf
adc
push
out
inc
add
dec
not
jg
push
pusha
imul
add
jg
aad
scas
call
test
pop
icebp
add
xchg
orl
sbb
nop
mov
insb
inc
insl
cli
or
fdiv
ljmp
js
ljmp
sbb
fwait
adc
xor
mov
mov
push
ljmp
in
jbe
jg
sub
andb
jle
cmp
pop
push
sbb
mov
outsb
lret
pop
fwait
imul
jmp
mov
js
pop
outsl
fcmovu
roll
xor
add
popa
xchg
mov
pop
rcrl
test
test
add
mov
xor
adc
lcall
add
inc
inc
and
fdivs
jae
jp
mov
stos
pop
xor
xchg
addl
dec
jbe
mov
add
mov
fistps
xchg
and
js
cmp
add
imul
inc
lret
or
lds
jle
testb
ja
nop
in
push
mov
ja
jmp
xchg
outsb
add
pop
cltd
hlt
stos
mov
fimull
mov
fcoml
movsl
adc
cwtl
rolb
xor
ror
test
outsb
movsl
sub
push
mov
fnstenv
jmp
lock
inc
xor
out
inc
xlat
mov
sbb
inc
inc
mov
or
and
inc
aad
fisubs
pop
mov
cltd
popa
loope
sub
push
push
sahf
inc
push
lods
mov
imul
out
out
or
jbe
add
push
insl
jecxz
in
testl
push
inc
mov
cmp
sub
dec
sahf
cmc
xor
push
out
push
inc
cli
outsl
shll
xor
xchg
cmp
rep
dec
add
cmp
sbb
jmp
mov
bound
sub
pushf
je
xchg
or
and
and
jb
sbb
dec
cli
jmp
cvtps2pi
mov
mov
outsl
inc
mov
mov
js
xchg
loope
movsb
nop
inc
mov
mov
inc
int3
sbb
cmp
sub
ja
ss
jbe
add
fmuls
push
cmp
test
and
xchg
call
and
adc
push
xchg
xchg
icebp
cmp
lahf
and
inc
lea
jnp
aad
xchg
popf
fbld
cmp
pop
mov
shr
inc
sti
mov
mov
notb
xchg
mov
xchg
push
sub
push
loop
fsubrl
mov
sub
cwtl
mov
jle
pop
jle
pandn
sbb
xchg
sub
mov
and
lods
sub
sbb
xor
sahf
and
sbb
dec
int
fbld
nop
pop
enter
mov
pop
xchg
ljmp
pmaxsw
repz
jae
imul
push
sarl
icebp
cmc
mov
ja
cwtl
orl
fldl
mov
sub
inc
scas
or
fisubrl
and
lds
orl
adc
fwait
jns
ds
dec
outsb
movsb
jmp
scas
mov
inc
inc
dec
dec
shll
call
lea
xchg
nop
fsts
outsb
aam
push
pop
fistpll
mov
lret
lret
mov
pop
gs
adc
cli
sarb
jb
icebp
or
out
mov
outsb
icebp
and
mov
and
pop
cli
add
xchg
test
adc
sub
xchg
cltd
xor
arpl
or
jno
rclb
mov
fistps
fidivl
sub
xor
sbb
ret
fnstenv
jl
in
arpl
inc
mov
inc
lods
pop
test
gs
out
xlat
dec
repz
insb
loope
orl
push
stc
aad
bound
sarl
je
add
lret
out
ss
mov
push
test
hlt
and
dec
scas
fimuls
inc
and
adc
das
and
mov
sbb
mov
out
or
into
repz
sbb
jo
push
hlt
and
rcll
push
dec
fisttps
sbb
dec
loope
adc
movsb
fwait
test
adc
imul
bound
cmovge
mov
dec
push
data16
adc
enter
std
aas
adc
rcrl
mov
push
vpcmpeqw
xor
add
adc
ja
out
stos
or
mulb
into
cmc
fwait
ja
cli
push
stos
xchg
jnp
adc
rcrl
outsb
pusha
lods
dec
cmpsl
popa
cmp
imul
push
mov
push
popa
sbb
jnp
push
orb
cmp
sahf
push
cmp
cltd
push
ljmp
aam
or
mov
test
in
jnp
js
and
xor
inc
aam
stc
iret
fstpl
jno
sub
loopne
imul
mov
xor
push
shlb
std
jne
xor
add
mov
in
mov
cli
cli
cmp
inc
mov
in
fdiv
cmp
dec
popa
adc
xchg
xlat
repnz
jno
scas
ljmp
fadds
sub
insb
mov
loope
shlb
out
mov
sbb
lret
jns
fidivs
push
pop
ljmp
lods
data16
fstl
pop
lret
mov
sahf
sbb
adcl
outsb
dec
add
xchg
push
or
adc
inc
repnz
pop
xchg
in
mov
xchg
jns
mov
fcoml
in
popf
pop
ja
ret
pop
or
adc
pusha
and
outsb
xchg
pop
mov
push
dec
mov
mov
cmp
shll
sub
shrb
enter
sbb
fcoml
dec
mov
and
cmc
sbb
aaa
mov
cmp
sub
fdiv
test
mov
aas
mov
xchg
insb
adc
xor
mov
rolb
cltd
jl
dec
test
push
pop
scas
fdivl
lahf
sarb
push
lcall
sti
or
into
jno
ret
ret
adc
mov
in
in
inc
mov
fnstcw
fcmovbe
pop
mov
pop
mov
mov
stc
stc
mov
xchg
pop
stc
or
sbb
jb
fdivl
mov
out
jns
xor
jmp
adc
fidivrl
mov
push
out
xchg
lods
lret
push
lock
jne
ja
call
ja
pop
inc
mov
jns
xor
xchg
mov
xor
movsb
ja
je
imul
imul
mov
xchg
jmp
add
out
sub
fwait
xor
sarb
push
cli
loop
push
pop
adc
pop
test
inc
stc
mov
jge
dec
scas
xchg
add
insl
jno
jnp
xor
repnz
arpl
les
xchg
adc
sbb
out
loopne
inc
in
shll
lods
xchg
mov
fwait
xchg
lahf
jmp
cmp
popf
pusha
aad
sub
shrl
in
sub
add
fucom
or
cld
dec
int3
stc
sbb
lock
call
fs
adc
or
sub
and
aad
push
mov
aad
int3
push
or
and
lock
in
xor
mov
pop
lea
fld1
adc
adc
popf
dec
std
jno
pop
or
xchg
lock
sub
fwait
jo
lret
nop
bound
or
push
cltd
imul
adc
mov
push
pop
mov
outsl
cld
lds
cwtl
movsb
pop
pop
lcall
out
dec
cltd
hlt
jnp
pop
int
push
or
adcl
lret
fucomip
movl
jmp
test
push
cs
push
lock
mov
sub
nop
mov
pop
call
cmpsb
xlat
dec
ret
sub
sti
dec
jmp
jecxz
fidivrs
mov
int3
sub
mov
pop
cwtl
inc
in
das
ficomps
cmp
ss
nop
cwtl
inc
xor
lahf
lods
cmp
and
sbb
ja
cld
push
xchg
sub
loop
push
dec
in
push
js
rolb
test
xchg
stos
nop
dec
add
lods
addr16
sbb
ret
xor
mov
fwait
sbb
js
stos
dec
pop
dec
cmp
adc
dec
clc
addr16
outsb
xchg
iret
xchg
imul
jo
cmp
jne
sub
filds
gs
jmp
jecxz
push
ret
lret
push
pop
insb
pop
adc
rcll
cs
test
arpl
push
xor
adc
call
mov
test
xor
mov
add
lea
test
das
sti
adcl
dec
pushl
clc
xchg
or
sbb
inc
call
pop
call
cmpsb
cmp
movsl
andb
push
repz
cmc
xchg
sbbb
inc
cmpsb
mov
sti
leave
xor
pop
pop
data16
inc
add
clc
or
sbb
cmc
ljmp
inc
jge
xchg
mov
rol
mov
bound
daa
sti
arpl
hlt
arpl
sar
leave
or
sub
rcrb
mov
scas
shll
test
inc
xlat
adc
lods
push
mov
mov
fildl
mov
icebp
jle
fsubrp
addr16
aam
pop
push
loopne
pushf
stos
add
sti
es
icebp
das
test
rcrl
or
xchg
mov
adcl
stc
aad
lcall
mov
sets
push
call
push
addl
not
ljmp
loop
movsl
pop
mov
icebp
fadd
lret
in
lret
sbb
xor
fcomps
int
cmpsl
or
jbe
add
or
pop
xchg
cld
and
mov
sub
pop
pop
and
adc
inc
lret
fsubl
push
mov
mov
aas
je
pop
dec
mov
out
jge
mov
jbe
int
arpl
jno
test
inc
jo
stos
outsl
rcll
adc
pop
stc
sub
mov
mov
out
ds
out
mov
xchg
add
inc
sub
adc
or
scas
loop
pusha
add
cmp
je
cmp
je
je
test
xor
sbb
int3
mov
aas
shll
sbb
sbb
ljmp
mov
jb
loop
push
inc
or
stos
mov
into
bound
xor
scas
ljmp
in
repz
push
add
and
xchg
test
call
adc
fwait
je
push
mov
sbb
les
nop
out
dec
lea
je,pt
push
das
inc
insl
cwtl
cli
rcrb
out
push
popa
mov
adc
js
fists
jne
mov
scas
sti
clc
pop
jg
data16
mov
jmp
cmp
adc
fisttpll
clc
into
and
stos
and
xchg
aas
ss
sub
push
ret
subb
jp
fadds
dec
into
mov
ret
mov
push
xorl
mov
push
and
cmp
push
mov
iret
and
stos
mov
aas
fsubl
cld
shr
aaa
das
data16
inc
sbb
jbe
dec
xchg
subb
gs
in
insb
loopne
call
jle
fwait
ret
adc
into
mov
mov
rcrb
movl
popa
ds
pop
pusha
mov
jns
or
lock
fldlg2
adc
sub
sbb
dec
mov
imul
das
popf
stos
std
xor
add
xor
sbb
xor
fdivrp
and
jae
mov
and
int3
add
mov
enter
mov
inc
or
std
loop
pop
je
cltd
push
jae
loope
movsb
aaa
negl
jb
in
or
int3
loop
pop
int3
push
imul
sti
dec
dec
jmp
sbb
xchg
nop
cmc
pop
fstp
int
jbe
sbb
push
jae
pop
xlat
in
in
jnp
sub
mov
lcall
jb
pop
sbb
into
mov
cmpsl
cltd
cld
push
push
repnz
daa
fistpl
jns
mov
adc
adc
jecxz
add
or
sbb
xchg
mov
cs
dec
inc
ficompl
fcmovu
xor
mov
mov
lcall
leave
mov
rcrl
sbbb
sub
mov
xor
icebp
add
mov
xchg
test
mov
nop
ret
cwtl
xchg
mov
and
or
inc
inc
lods
shlb
fs
in
push
and
std
jb
push
loope
fimull
jno
test
mov
outsl
lods
inc
shll
jecxz
std
sarl
dec
cmpsl
mov
pop
push
cmpsl
int3
cwtl
lcall
or
ficoms
test
insb
pop
mov
push
das
repnz
out
cmpl
push
mov
lock
push
out
push
cld
sti
inc
insb
lret
pop
pop
push
sub
add
into
sub
popa
adc
cmpsl
dec
inc
lret
mov
adc
stc
pop
pushf
popa
jnp,pn
jle
sarb
pushf
out
data16
dec
bound
and
shr
pusha
pop
mov
in
adc
sti
sub
iret
fdivr
aas
pop
xchg
fdivrp
xchg
dec
imul
dec
sti
dec
inc
ficomps
jne
and
push
inc
iret
pop
cmpsl
stos
or
addr16
dec
paddsw
jae
in
mov
repz
movsb
pop
imul
mov
xchg
jo
daa
lock
inc
mov
addb
fldcw
push
stos
inc
repnz
stos
test
outsb
pop
xlat
shrb
xchg
ret
jge
inc
mov
xchg
mov
test
int3
cmp
int
sbb
xchg
dec
mov
jle
repz
cmp
imul
inc
dec
xchg
sub
sarb
dec
push
negl
fstl
mov
xchg
cwtl
push
dec
sub
pop
cmpb
sbb
pop
out
faddl
scas
sbb
loopne
mov
jmp
jle
inc
insb
fistps
fcmovne
xchg
outsb
rcll
in
dec
adc
les
jge
mov
sets
movsl
cmp
mov
leave
lret
out
je
and
ret
sbbb
fistpll
mov
and
nop
cvtps2pi
in
or
sbb
jmp
call
mov
roll
mov
dec
les
movsb
adc
int
lods
lret
imul
fsubs
js
scas
sti
pop
push
stos
imul
push
lea
inc
adc
test
fildll
cmp
imul
push
dec
fbld
xor
aaa
out
mov
xchg
lock
jbe
mov
mov
nop
mov
push
jecxz
pop
push
movsb
imul
or
adc
push
scas
sub
in
add
pop
sarb
or
movsl
adc
pop
stc
rcll
pop
sar
mov
pop
cmp
fisttpl
add
xchg
cmp
xchg
popf
jnp
jb
xchg
pop
stc
push
adc
out
jb
jmp
or
hlt
sub
inc
jp
xor
or
inc
fiadds
test
fucomi
mov
mov
cmpsl
and
pop
cmp
dec
imul
add
rcrb
mov
decb
sti
lods
and
aas
dec
xchg
les
jl
rorl
push
enter
cmp
popa
mov
adc
mov
stc
lds
adc
xchg
test
aad
addr16
mov
jae
push
in
les
jne
cmp
xchg
xchg
mov
cltd
cmp
inc
std
jns
mov
lds
out
pop
mov
jmp
mov
scas
jbe
fwait
add
or
cmpsl
and
xchg
fs
notl
cmp
loop
stos
jecxz
inc
sbbb
jmp
sbb
jns
fwait
add
mov
mov
cmp
mov
clc
sbb
lea
push
sbb
jge
pop
mov
dec
test
ljmp
pop
adc
dec
pop
pop
ja
xor
mov
lds
rcll
adc
test
cmp
dec
out
rcl
or
lock
cmp
pop
add
cmp
cltd
add
pop
fwait
inc
adc
mov
es
cli
lcall
pop
icebp
scas
fimuls
in
adc
dec
inc
call
mov
movsl
lcall
adc
jno
fmulp
ljmp
aad
adc
fisttpl
push
iret
aad
test
cwtl
bound
jg
stos
push
iret
test
cmp
mov
lds
pushf
adc
xor
or
es
out
shll
jg
cmp
das
inc
test
xchg
inc
popa
aas
imul
inc
dec
std
std
outsl
movsl
ja
repz
jmp
repz
push
pop
pop
rcll
pop
cmp
or
lcall
insb
loop
test
rcl
inc
add
xchg
mov
popa
adc
imul
fstp
into
push
inc
stos
mov
xor
cmc
push
or
sbb
cmp
aaa
pop
push
idivl
fidivrs
fbstp
cmpsb
mov
xchg
adc
xor
nop
negb
and
sub
adc
xchg
sbbb
mov
pop
lahf
mov
mov
jb
xor
push
outsl
pop
add
je
or
mov
repz
push
pop
in
sub
fucomp
sub
xor
xchg
push
in
test
sub
add
dec
nop
test
shl
pushf
bound
dec
aam
push
mov
dec
jl
ss
test
xchg
stos
mov
lods
push
sub
popf
into
sbb
fs
add
es
sub
lods
or
fadds
cld
cmp
cltd
loope
inc
jg
xor
lods
lea
out
inc
mov
inc
push
fcoms
xchg
mov
mov
movsb
sub
enter
xor
jmp
enter
iret
cwtl
jp
sbb
jmp
and
fldl
jmp
imul
jno
ret
nop
pop
sub
aas
mov
out
sbb
out
xchg
sbb
add
dec
xlat
je
mov
gs
and
jg
movsb
loopne
push
test
clc
sbb
sbbl
div
repnz
gs
stos
idiv
ss
or
das
mov
xlat
adc
pop
jle
in
dec
shr
and
inc
pop
add
and
sbb
rep
ss
sub
das
and
fidivl
add
ret
or
or
xor
push
test
roll
scas
adc
xchg
pop
mov
inc
insb
and
mov
mov
dec
in
cmp
imul
negb
xor
push
popf
jo
scas
xchg
pop
int
shlb
notb
test
insb
loopne
mov
gs
lods
mov
jno
and
push
lds
insb
notl
lds
mov
repnz
out
cmp
dec
arpl
je
push
pop
pop
sub
cmc
and
cli
jl
in
jns
dec
cs
je
add
inc
pushf
cmp
cmp
cmp
push
sbb
filds
sbb
and
movzwl
popa
push
leave
flds
int
sub
cwtl
stos
cmp
xor
nop
jnp
mov
scas
aaa
and
arpl
popa
mov
mov
pop
pop
shl
inc
or
add
xchg
ja,pn
xchg
pushf
xchg
or
xchg
pop
mov
adc
xlat
dec
cld
ss
adc
in
fstps
mov
push
xor
mov
iret
jns
rcrl
push
std
shr
xchg
cli
push
xchg
mov
xchg
addl
cs
dec
lods
test
mov
enter
test
pop
jecxz
xchg
xchg
imul
out
in
and
inc
inc
adc
cmp
in
das
into
push
or
cmp
pop
mov
jnp
push
push
pop
enter
add
mov
fs
xchg
dec
aad
push
lcall
adc
inc
fadds
mov
pop
and
xchg
popa
es
xchg
daa
repnz
pop
mov
mov
and
imul
mov
cmpsl
inc
jge,pn
jle
mov
loope
scas
pushf
xor
das
scas
jmp
int
stc
and
mov
ret
xor
dec
xlat
add
sub
xchg
scas
das
test
iret
shl
popa
cmp
les
les
std
scas
lret
jb
jle
scas
and
pop
push
sbb
adc
lahf
pop
jb
mov
and
mov
loop
and
xchg
push
aas
sbb
pop
ret
and
ss
xor
or
popa
mov
sub
xor
test
inc
mov
pop
rol
pop
adc
xchg
popf
cmp
je
cmp
aaa
lahf
outsl
jno
gs
cmpsb
lret
rclb
pop
xchg
repnz
fadd
and
mov
cmp
push
pushf
pop
and
andb
inc
cmpl
cmp
add
cmp
outsb
sbb
lds
aas
push
adc
pop
sbb
movsb
icebp
sub
imul
pop
bound
mov
insb
je
bswap
push
insb
loope
sub
sti
dec
lods
rcrl
cmpsl
or
xchg
sbb
jle
rorl
or
fwait
or
jo
pop
jns
rorb
add
cwtl
fimull
ss
dec
jl
push
ja
stos
sti
jno
test
in
xchg
sub
jo
inc
cmp
std
test
loope
lahf
cwtl
cmc
or
inc
repz
pop
lea
lds
add
push
test
iret
add
lds
cmp
dec
xchg
xor
xorb
pop
push
lcall
xchg
xor
mov
inc
shll
xchg
cmp
cmp
pop
sti
pop
lock
rol
iret
sbb
xchg
test
xchg
nop
hlt
into
cld
cld
mov
push
jo
add
mov
ljmp
sbb
mov
xchg
push
jecxz
xchg
out
insb
or
mov
out
add
test
pop
lcall
addr16
fildl
mov
mov
lret
outsb
idivb
mov
cmp
popf
and
dec
lock
jno
int3
cmpsb
mov
fwait
and
bound
mov
or
decl
push
lahf
cmp
jp
xor
cmpsl
xor
movsb
add
nop
jno
hlt
lods
mov
pusha
dec
das
add
push
push
into
xchg
jbe
clc
jecxz
jmp
dec
ret
cmpsb
xchg
push
int
pop
adc
mov
je
sti
cs
or
cmpsl
and
mov
stos
add
loope
dec
xchg
cmp
cmp
pushf
inc
scas
sub
dec
adc
sub
cmp
and
cltd
pushf
in
push
nop
nop
mov
mov
push
mov
sub
insl
mov
inc
imul
xchg
or
pop
and
inc
test
mov
enter
add
jns
insl
cmpsl
outsl
int3
mov
and
mov
inc
jae
outsb
sti
pop
jge
in
fwait
setb
pop
cs
add
in
jle
lahf
in
cld
mov
mov
cmpsl
push
sub
inc
dec
add
xchg
jmp
sti
inc
nop
mov
adc
mov
pop
gs
decb
push
push
pop
mov
sbb
jl
nop
pop
jmp
push
cmpsb
push
scas
jne
jmp
mov
mov
out
xchg
movsb
cmp
enter
enter
sbb
repnz
mov
das
or
add
jle
and
xchg
iret
xorl
add
aas
push
fdivs
sub
mov
stc
adc
enter
xchg
sub
push
loope
leave
adc
outsb
mov
fisubl
std
or
xchg
leave
or
xor
mov
ret
popa
inc
jmp
mov
iret
lcall
adc
jle
insl
vfmsubadd231ps
ds
inc
xlat
cs
jbe
int3
cmp
push
mov
jo
xchg
xadd
xchg
pop
sbb
dec
ret
mov
and
imul
enter
in
adc
mov
sub
jne
adcl
pop
cmpsb
loop
xorl
mov
pop
jae
jae
and
and
sarb
add
ljmp
mov
sub
dec
or
sbb
insb
mov
xchg
lods
aaa
lret
addr16
cmpsb
xchg
cltd
cli
outsb
arpl
adc
push
mov
pop
idiv
sub
imull
repnz
pop
mov
xor
push
shrl
xor
movsb
rorb
adc
push
enter
xchg
scas
sbb
jle
jo
in
je
lahf
mov
push
lret
test
stc
sub
call
adc
pop
call
shll
add
cld
rcr
mov
scas
lea
out
xlat
rolb
xor
pushf
mov
pop
and
pop
cmp
add
cwtl
jge
pop
pusha
movsl
sub
data16
popa
outsl
sti
dec
push
lods
xchg
imul
cs
sub
sub
dec
test
cmpsl
aaa
sbb
loopne
jne
mov
pop
push
xor
lods
xchg
cmp
nop
dec
inc
test
inc
add
mov
fistpl
xchg
sub
imul
mov
cmp
int
mov
jl
and
and
dec
arpl
jbe
loop
fwait
or
aas
fcmovb
pusha
daa
xor
sarb
aas
add
adc
mov
lahf
inc
dec
lret
cmpsl
sar
mov
gs
loope
or
and
mov
idivb
or
mov
cld
mov
pop
jns
push
jmp
cmp
lcall
mov
mov
xchg
mov
loope
pop
push
cmp
mov
lcall
in
jb
add
rcrl
push
mov
sarl
xchg
movsb
aam
jmp
shrl
sub
xchg
inc
jo
and
mov
fcmovnb
jns
es
mov
push
popa
inc
lret
movsb
fs
testb
ret
scas
xchg
add
incb
jmp
lret
in
addl
cmp
jo
fldpi
mov
inc
scas
std
adc
push
pop
movlps
aad
clc
mov
inc
sbb
xchg
adc
ret
sub
imul
aaa
push
int3
dec
enter
push
pushf
xchg
jae
and
cmp
fistpl
xchg
cmp
mov
adc
add
sub
add
insb
aas
out
int3
mov
negb
dec
add
mov
adc
inc
add
rcrb
fwait
aas
pusha
or
lcall
mov
roll
xor
add
push
fstl
ja
ret
jns
jecxz
push
adc
rcll
inc
mov
cs
xchg
sub
sahf
xchg
and
xchg
adc
loope
mov
dec
dec
add
add
jg
push
push
lock
xchg
ret
in
fistpll
lret
call
jle
xor
aas
aas
fwait
or
dec
shll
push
js
mov
lret
inc
ljmp
aaa
xchg
xchg
pop
div
insl
add
xchg
inc
push
pushf
test
push
arpl
push
and
inc
mov
dec
leave
jae
into
push
or
pop
sbb
push
jno
jns
sub
and
inc
or
lods
xchg
cmp
cmp
xchg
hlt
aad
dec
scas
inc
cmp
jae
movnti
dec
enter
mov
and
push
out
dec
xor
xchg
jecxz
mov
ljmp
pop
outsl
mov
pop
repz
lods
sbb
ja
decl
pop
inc
lahf
into
mov
aam
dec
imul
mov
in
mov
imul
loope
movsb
in
lock
push
or
shrb
push
bound
out
and
les
dec
test
jge
setns
pushl
push
sub
mov
dec
cmp
loope
addb
in
ljmp
and
push
adc
pop
cmpsl
mov
mov
sbb
fcoml
pop
add
jg
fcmovnu
and
in
bound
addr16
fcmovb
out
xchg
out
insb
add
das
add
mov
adc
gs
sti
cmc
in
adc
jmp
aad
cmpsb
mov
sti
fimuls
dec
or
imul
shll
ja
pop
pop
mov
gs
xlat
xchg
and
add
fisubrs
push
mov
aad
sub
das
in
cmp
xor
pop
fwait
insb
xlat
jae
gs
xchg
sub
sub
orl
jle
cli
cmp
mov
inc
out
xchg
gs
cmp
lods
cwtl
aas
push
faddp
jg
stos
clc
xor
lahf
ljmp
inc
sub
cld
push
gs
mov
outsl
nop
xchg
add
cbtw
js
or
dec
dec
iret
je
mov
inc
notl
sbb
aas
jo
jb
repnz
aad
aam
jge
popa
jecxz
and
movsb
test
mov
adc
ss
pop
sbb
xchg
mov
adc
dec
gs
jmp
enter
cmpl
lret
sbb
mov
jg
sbb
les
cmc
and
dec
sbb
loope
and
or
add
push
pop
mov
mov
jp
in
or
lret
lret
popf
cmpsb
nop
lcall
insl
push
cmp
loope
push
pop
scas
nop
and
jo
inc
mov
stos
loopne
pop
test
cmp
adc
mov
push
xchg
aaa
sahf
and
daa
xchg
jecxz
pop
in
iret
out
mov
or
inc
adc
or
push
push
cwtl
sbb
iret
dec
add
ret
push
xlat
dec
in
rol
cld
stos
inc
push
add
test
mov
rcrl
mov
pop
push
lds
jno
push
mov
stc
out
sub
cmpl
ss
or
outsb
fwait
or
mov
cmp
jb
and
fistps
lea
cmp
and
xchg
mov
jmp
pop
adc
das
jbe
mov
out
or
xor
cwtl
xor
or
jns
les
mov
test
mov
dec
cmpb
push
mov
inc
in
pop
lahf
mov
xor
in
inc
pusha
cs
inc
shlb
add
xor
xchg
popf
or
xchg
jb
into
sbb
sbb
and
sbb
and
sub
cmp
pop
enter
out
std
imul
out
xor
pop
mov
sub
int3
out
pusha
sbbl
push
test
hlt
or
adc
test
or
jle
ficomps
lcall
movsl
pop
imul
or
movsb
mov
adc
push
out
pop
add
fwait
insb
xchg
popa
push
dec
in
pop
scas
xchg
popa
mov
cmp
mov
lret
jge
cli
xchg
int
popf
xor
jne
xorl
test
dec
mov
imul
sarb
xor
out
hlt
pop
js
adc
pop
xchg
ret
pop
pop
xor
movsl
andb
add
xchg
xchg
cld
sbb
dec
mov
sub
addl
movb
inc
or
je
inc
lods
add
jmp
ffreep
scas
fnstsw
add
sub
cmp
push
addb
int3
sub
add
push
into
aas
sahf
test
clc
addl
jge
push
mov
mov
jnp
imul
adc
and
shrb
push
fisttpl
or
movsb
loope
outsb
mov
dec
gs
arpl
mov
ret
inc
and
jge
bound
sbb
jne
dec
adc
fidivrl
in
sub
mov
ja
or
loop
xchg
and
negb
adc
loop
mov
jne
adc
jp
out
push
nop
add
out
pushw
testb
scas
xor
or
enter
pop
mov
mov
push
mulb
xor
dec
insl
push
xchg
cmpsl
inc
stos
add
adc
sbb
test
insl
push
adc
das
stc
push
jo
mov
ss
mov
adc
popl
push
imul
ret
in
inc
jne
int3
rolb
lock
dec
test
insl
lcall
sbb
aas
sahf
out
fimull
or
jg
rep
sbb
mov
ljmp
mov
popf
or
stos
dec
mov
sti
pop
out
cld
ds
adc
xor
sbb
push
outsb
das
mov
in
mov
xchg
jp
adc
sti
and
cwtl
push
xor
mov
push
push
cltd
cmp
jge
or
xor
xor
imul
add
imul
icebp
mov
loope
cmp
insl
ret
ds
mov
inc
fsubl
adc
or
fcomps
and
hlt
repnz
cmp
xlat
sbb
or
or
sub
inc
xor
push
mov
and
add
jo
popf
xor
cmp
cs
gs
insl
mov
xchg
inc
int3
cwtl
jecxz
in
scas
outsl
lahf
dec
jg
xor
mov
movsl
xchg
aad
adc
inc
mov
adc
dec
std
cmpsl
aas
mov
xchg
iret
cwtl
rcr
jl
add
test
cmp
lret
jbe
mov
jne
xchg
in
push
mov
push
scas
outsl
jnp
jecxz
adc
js
inc
leave
out
sub
and
xorl
mov
jb
shl
sub
ljmp
jge
or
stos
test
mov
and
dec
mov
in
add
sub
or
shlb
addb
mov
daa
pop
cld
mov
lods
bound
cmp
or
fldt
mov
cltd
repz
test
push
lahf
xchg
xchg
or
iret
shl
or
push
mov
pop
lock
test
ret
out
push
sub
pop
mov
lds
mov
stos
mov
mov
jmp
out
pop
sub
or
fiaddl
lcall
dec
dec
scas
cli
popf
cmp
jb
jl
jp
or
inc
xchg
fists
mov
inc
cmp
mov
cmp
pop
int
inc
jb
pop
cmp
int3
or
and
add
lret
in
addps
push
xor
sub
sub
push
dec
test
mov
mov
pop
mov
cmp
sbb
stos
mov
or
jns
xor
lock
test
adc
push
push
mov
push
mov
add
dec
scas
mov
xor
call
outsb
insl
or
push
lods
leave
pop
lea
outsb
das
ret
dec
movsbl
nop
lods
inc
daa
pop
xchg
inc
shll
jecxz
inc
pop
or
cmp
icebp
mov
pop
adc
fimuls
fidivrs
fiaddl
mov
shlb
fists
pop
cmp
imul
pop
sbb
mov
xor
or
outsb
mov
mov
call
inc
fistl
fdivrs
mov
push
std
sbb
out
addr16
stc
andl
fstl
inc
jno
je
scas
outsb
push
inc
ret
push
xor
loope
stos
inc
pusha
push
cwtl
cmpsb
mov
pop
jns
test
sub
adc
push
dec
fsub
fsts
or
lods
orl
out
arpl
shll
lahf
sbb
sub
mov
pushf
push
and
cmp
push
and
loopne
jns
in
jle
lahf
inc
mov
pop
dec
lcall
sarl
fidivrs
fnsave
aaa
in
mov
call
push
fldenv
jbe
fcomp
cmc
stos
inc
jl
insl
pop
sub
shll
jecxz
lahf
cmp
dec
int
add
rcll
or
mov
ret
loop
xlat
insb
cmpb
inc
aaa
fwait
rcrb
xchg
fisubrs
adc
les
jo
jge
fcomps
mov
movsl
out
add
cmp
icebp
xchg
ja
adc
adc
pop
sahf
cmc
test
mov
lret
out
in
or
xchg
cmp
dec
jle
push
pushf
mov
pop
scas
push
aaa
pop
clc
mov
adc
ds
xchg
pop
lret
add
mov
aam
or
dec
lods
push
arpl
sbb
mov
jp
fisubrl
mov
mov
fwait
dec
and
sti
sar
setle
popa
dec
dec
cmpsl
inc
out
push
cld
mov
imul
ljmp
pop
push
inc
xrelease
int3
cs
cmp
dec
sbbl
inc
inc
out
cld
test
adc
adc
cmp
jbe
shll
ds
push
mov
push
push
xor
sbb
sub
push
xchg
insb
iret
lods
in
mov
cmp
add
rcll
les
js
sub
adc
mov
jo
leave
in
or
test
inc
in
lds
scas
in
jg
jns
ret
mov
sahf
shrl
test
insl
jne
imul
scas
idivl
inc
or
cmp
push
in
orl
jbe
mov
in
addr16
ret
or
xor
mov
ds
inc
fs
jp
mov
ret
push
andb
mov
addl
mov
push
jbe
jge
loope
xchg
jecxz
int3
outsb
pop
inc
ret
add
dec
jle
loopne
inc
cld
pushf
inc
mov
sub
mov
add
push
xchg
ja
test
or
mov
push
add
test
add
stc
push
mov
js
fld1
lret
jnp
jb
lcall
pop
or
lea
fwait
add
push
mov
in
add
inc
and
aas
inc
jbe
std
pop
stos
fildll
fs
mov
mov
aam
lret
enter
rcll
xor
js
cmp
sbb
dec
inc
lea
ds
jmp
or
and
add
pop
or
aam
push
lret
lcall
pop
pop
loop
pop
dec
adc
mov
adc
mov
rcrl
cmpsb
xchg
mov
sub
pop
movsl
mov
inc
mov
imul
lea
scas
scas
dec
and
aaa
xor
not
sbb
jns
int3
and
sbb
xor
adc
dec
xchg
and
cmp
or
out
dec
mov
sub
es
cmpsl
mov
dec
cmp
dec
inc
push
fstp
mov
std
sub
add
jns
outsb
pop
sub
mov
ret
arpl
ret
les
pop
push
mov
cwtl
sub
movsb
pushf
popf
je
cmp
repnz
add
adc
mov
mov
lea
push
in
pop
mov
dec
dec
xchg
adc
dec
shlb
jge
jb
aad
cli
enter
jecxz
dec
mov
scas
inc
out
test
mov
addl
cmp
pusha
xchg
and
adcl
sbb
mov
stos
lods
and
es
mov
sti
and
cmp
movsb
mov
add
les
rcrl
lahf
jno
sub
cs
call
movsb
cmp
fdivl
xchg
icebp
inc
mov
in
or
popa
jecxz
inc
jb
push
orl
push
call
into
xchg
in
pop
pop
je
fwait
test
add
and
loope
add
and
and
mov
mov
pusha
xchg
sbb
push
xlat
and
clc
xor
xchg
lahf
mov
mov
mov
mov
mov
or
sbb
ficompl
fimull
data16
jnp
xchg
mov
xchg
lahf
movntq
pop
bound
xor
and
xorl
mov
fwait
inc
in
push
shlb
leave
bound
pop
mov
or
insl
cli
push
fwait
ja
gs
fistpll
inc
inc
call
pop
nop
fyl2x
test
fdivr
pusha
dec
movsl
stos
add
or
dec
call
mov
lods
and
or
aas
add
shr
push
pop
pop
data16
enter
out
in
pop
mov
loopne
add
mov
imul
sub
nop
lea
jge
or
mov
mov
pop
sub
add
or
inc
sbb
xchg
jae
mov
imul
sub
test
dec
arpl
out
jl
add
mov
pushf
mov
mov
in
mov
lret
push
gs
xor
or
nop
mov
in
sbb
pop
out
inc
mov
stos
dec
imul
cwtl
pop
addl
rcr
pop
mov
jmp
jp
pop
dec
fidivrs
push
inc
mov
mov
repnz
add
jne
push
mov
cld
jp
sub
sub
inc
insb
xsaveopt
ret
adc
dec
les
cmc
sbb
push
or
mov
cmp
cwtl
sub
dec
mov
addr16
ret
in
stc
pop
dec
mov
push
jb
fmul
neg
push
adc
repz
mov
mov
cmp
lret
mov
fwait
push
shrl
ljmp
mov
xchg
aam
ljmp
outsl
lret
jle
in
mov
outsl
jb
outsb
fisubrs
lds
rcll
xor
xchg
push
mov
shl
popf
sub
mov
std
adc
rorb
stos
popa
pop
push
dec
outsl
add
cmp
and
jecxz
push
jg
stos
push
pop
sub
mov
rcr
inc
ret
xchg
xor
pop
daa
or
push
inc
jo
stos
mov
fstpl
in
dec
jb
arpl
cltd
add
jmp
jp
setne
inc
jns
mov
mov
xchg
lret
dec
mov
lcall
sbb
js
push
xchg
imul
jbe
int
ljmp
std
pusha
add
fsub
xor
sti
push
pop
sub
adc
outsl
lret
add
cmp
pushf
pop
xor
ficompl
mov
push
fistl
nop
insl
mov
insb
aam
lret
sbb
sbb
inc
out
mov
int3
aaa
test
xchg
inc
sbb
leave
cwtl
mov
movsb
shl
jo
sbb
lret
shr
add
outsb
sbb
fwait
je
divb
jnp
xor
mov
clc
or
push
mov
inc
mov
and
lret
ficoml
jnp
clc
jmp
mov
es
mov
xchg
mov
rorb
sti
dec
jbe
popa
aaa
xchg
mov
pop
ret
jg
movsl
push
sub
cli
add
enter
repnz
aad
xor
xlat
out
push
add
push
bound
xchg
push
pop
movsl
cmp
or
out
xchg
sub
and
push
mov
int3
mov
add
adc
pushf
loop
loopne
scas
rcrb
int3
hlt
js
gs
outsl
ficoml
xchg
rclb
aad
icebp
mov
xlat
inc
jmp
test
int3
loope
imul
mov
xor
inc
mov
in
and
pop
inc
scas
popf
addb
nop
repnz
fstp
mov
pop
imull
lds
ffree
stos
aaa
lds
stc
cmp
pop
lods
imul
pop
in
push
xor
adc
lods
repz
notl
xchg
jb
push
loope
aad
mov
arpl
fdivr
pushf
movsl
dec
jle
sub
into
popf
sub
push
sub
cs
mov
pop
add
xchg
jg
rorb
cmp
jp
mov
xchg
push
cmp
sub
cwtl
cmpsl
jns
adc
mov
inc
ljmp
pop
fistpll
xchg
fnstsw
jmp
and
push
push
sub
lds
sub
into
les
push
adc
cltd
push
pop
jbe
jecxz
nop
nop
jle
cmp
fdivrl
sub
mov
mov
sub
fisubl
pop
int3
mov
and
jbe
int
xor
not
sbb
jns
pop
xchg
mov
outsl
add
les
cwtl
or
cmp
add
call
push
mov
sbb
push
push
sbb
fmuls
dec
jg
aas
push
add
test
add
arpl
clc
les
lods
in
adc
sub
mov
enter
repnz
daa
sub
jl
jmp
adc
mov
jecxz
and
mov
lret
add
out
aas
sub
dec
cltd
and
shlb
sub
movsb
ljmp
dec
push
mov
push
lret
pop
imul
jbe
pop
enter
fldl
aad
pop
lea
fcoml
testl
add
repnz
insl
mov
mov
int3
adc
or
push
data16
add
sbb
loopne
inc
cmp
out
and
pusha
adc
xchg
jle
cld
imul
xchg
xor
push
xchg
xchg
cmc
adc
jnp
lret
add
mov
and
movsb
mov
lods
aaa
outsl
aam
or
mov
shr
inc
dec
repnz
mov
lds
data16
mov
dec
ficomps
or
cmp
mov
add
xor
cs
rolb
outsl
mov
lahf
sti
fs
fisttpll
jnp
sbb
imul
mov
mov
or
jo
dec
inc
push
xchg
mov
cs
pop
gs
andb
in
fwait
fwait
push
les
and
inc
sbb
pushf
ret
inc
jo
cmp
clc
fwait
test
jo
cli
int3
or
sbb
cmp
dec
mov
icebp
mov
not
jle
clc
test
xor
push
sbb
sbb
mov
cmp
aaa
pop
out
sbb
lret
xchg
scas
jge
mov
xlat
dec
lret
ljmp
cmp
push
adc
stc
jns
mov
dec
fistpl
imul
jns
daa
cltd
mov
aaa
push
and
rclb
or
call
inc
and
mov
orb
dec
sbb
sahf
mov
dec
ds
inc
push
xchg
jne
scas
fs
and
jmp
mov
stos
cs
mov
outsl
cmpsb
dec
ja
das
aam
xor
pop
cmpl
nop
es
flds
cmp
dec
xchg
invd
adc
adc
push
and
push
pop
xor
xor
pop
imulb
or
out
ljmp
stc
shll
jmp
sub
lcall
or
aas
sbbl
scas
add
loopne
int
dec
jmp
jb
mov
fadds
xorl
mov
lcall
test
int3
lds
fdiv
hlt
loop
cs
and
cli
pushf
add
xor
mul
mov
adc
jg
cwtl
fcoms
out
int
adc
lods
fs
les
sbb
xlat
incl
nop
push
add
adc
jns
xchg
fdivrp
adc
repz
xlat
cltd
push
mov
fildl
aam
sub
jp
ss
pop
pushf
add
rolb
inc
fsubs
jo
jg
enter
inc
pop
lret
sub
imul
mov
push
sbb
pop
movsl
sti
dec
sub
and
xchg
push
mov
roll
pusha
test
fstps
sub
fcoml
and
cmp
lcall
sbb
push
xchg
xchg
inc
dec
mov
shrb
xchg
jmp
dec
fmuls
xlat
jns
jmp
push
dec
lcall
jbe
pop
test
sub
pop
mov
mov
xchg
lods
xchg
cmpsb
repz
enter
jne
adc
cmp
pop
sahf
out
div
gs
loopne
es
int3
stc
cmp
aaa
add
loop
roll
insl
push
leave
or
loopne
mov
fidivrl
fists
int3
mov
shll
mov
pop
cmp
sub
aad
lcall
ret
out
xor
sarb
jecxz
arpl
mov
xchg
mov
xchg
into
clc
lret
out
mov
add
xor
rcrl
test
pushf
imul
popf
jns
and
xor
cmpsl
sti
add
fadd
arpl
sub
stos
cwtl
je
popa
ss
jb
add
mov
add
lcall
xor
adc
xor
dec
sub
pop
nop
or
mull
add
push
jo
repz
pop
cmp
dec
xchg
add
xor
into
mov
adc
pop
pop
out
cmp
fistpll
mov
je
sub
lret
cmpb
testb
adc
das
sbb
xor
mov
leave
pusha
lcall
dec
mov
hlt
sub
in
cmp
fildll
xlat
test
cmp
xchg
aaa
repz
inc
cmpsb
cmc
push
imul
jb
fisubrs
mov
push
test
imul
daa
fs
jge
and
cmp
push
fsubrl
mov
dec
mov
push
cmp
mov
sub
bound
inc
incb
sbb
and
or
sub
jns
pop
and
ja
pop
mov
stos
xor
lods
cmpsb
pop
call
test
sub
ds
lahf
fidivl
jg
popf
sahf
inc
aam
fwait
das
or
adc
outsl
adc
lahf
adc
je
dec
popl
jo
and
repz
repz
ret
mov
sbb
and
xchg
mov
adc
cwtl
sub
adc
mov
dec
ror
lret
push
addr16
loope
jo
xor
dec
mov
push
mov
sbb
sahf
sti
mov
lods
clts
mov
lcall
int3
add
sub
mov
dec
cld
pop
and
ror
sub
movsl
mov
sub
sub
test
in
lods
ficomps
adc
cld
adc
xor
or
xchg
sbb
add
push
gs
ds
xor
popf
aam
std
sbb
ja
into
rcrl
pop
cltd
loopne
test
push
mov
fcoms
imul
ds
push
imul
lcall
dec
mov
addr16
sbb
and
jmp
ljmp
stos
sbb
push
push
in
out
mov
add
dec
imul
sub
aad
test
fstpt
lret
mov
mov
push
adc
adc
adc
cli
out
sti
and
jl
pop
dec
clc
mov
gs
rclb
sbb
aam
mov
or
in
hlt
mov
test
dec
sbb
cld
loop
pop
loope
int
sbb
cs
and
pop
cmp
sti
lock
sub
mov
mov
fisubl
loope
outsb
dec
cmp
or
jbe
ret
adc
push
pop
mov
aad
andl
push
movsb
jnp
add
fimuls
and
xchg
add
test
jb
pop
std
dec
pop
in
mov
pop
push
lock
and
test
adc
push
ret
adc
push
dec
xchg
pop
push
add
add
leave
fildl
fisttpl
rcll
mov
jl
push
subb
xor
rcr
xchg
cmpsb
je
jl
xor
cmp
outsb
outsb
sub
sub
pop
or
aam
jle
jbe
adc
xchg
shlb
pop
mov
test
gs
cmp
sti
jmp
pop
es
cltd
dec
mov
icebp
cld
idivb
fwait
repnz
mov
fimuls
sar
inc
sub
gs
outsb
cmpsb
dec
lds
mov
xor
inc
popf
pop
push
push
lds
in
add
mov
rcrl
lret
pop
cli
lock
cmp
mov
nop
push
rorb
adc
xlat
add
xor
push
fwait
cmpsl
stos
shlb
das
mov
sub
ljmp
test
mov
filds
inc
sub
inc
stc
jo
ret
sbb
jge
out
adcl
fmul
loopne
push
fisttps
decb
adc
neg
dec
das
ret
mov
mov
dec
mov
xor
xchg
cs
jge
fdivrl
mov
mov
push
lcall
ret
lds
inc
mov
jmp
repz
inc
ds
push
pop
inc
add
mov
mov
and
js
loop
pop
mov
sbb
mov
and
lea
dec
insb
pop
insb
and
pop
adcb
mov
rol
mov
cmp
pop
jl
jnp
adc
enter
mov
aam
nop
test
adc
aaa
mov
jo
push
dec
and
inc
ds
mov
xchg
mov
cmp
cmpsb
xor
loop
dec
addr16
xchg
sbbb
jecxz
sahf
imulb
jno
pop
mov
fiadds
jmp
push
pop
jo
sub
loope
pop
push
and
cwtl
cmp
lods
adc
lods
push
testb
test
mov
in
sub
push
xchg
mov
dec
mov
and
shll
xchg
push
add
cmp
ds
dec
pop
into
pop
nop
fwait
mov
lds
sbb
push
adcb
push
int3
fistpll
inc
adc
fisubs
or
enter
bound
push
adc
xchg
xor
pop
or
bound
push
arpl
fwait
push
test
orl
ret
push
cmpsb
jnp
dec
clc
inc
xchg
mov
xor
lock
pop
repnz
or
push
jno
popa
lds
outsl
sub
imul
xor
jecxz
call
adc
xchg
cmp
mov
iret
xor
mov
and
jle
mov
xchg
or
dec
jecxz
test
repz
adc
fbld
insb
xor
loopne
xor
add
into
movsb
ljmp
dec
xor
adc
movsb
push
sbb
std
mov
jno
loope
mov
rol
pushf
sbb
xchg
mov
sete
mov
aas
nop
ret
cltd
aad
aaa
jae
push
xchg
popa
inc
fwait
mov
lods
add
jb
and
sub
lahf
push
add
arpl
cmp
xor
xchg
ret
push
scas
ret
jbe
jne
cmp
lds
or
hlt
shll
ret
mov
iret
dec
push
jg
test
dec
push
lcall
and
xchg
pop
sarl
fs
jl
dec
orb
cmpsb
repz
and
addr16
mov
cmp
mov
out
jle
and
pop
out
popa
cmc
push
and
shrb
sbb
mov
mov
mov
jae
rorl
iret
push
and
in
xchg
lods
enter
xchg
xchg
xor
mov
imul
xor
out
xor
sub
mov
xor
aaa
test
or
test
dec
outsb
testb
ficoml
in
rcrl
ret
sub
mov
outsl
mov
push
in
ljmp
xorb
mov
daa
pop
out
cld
adc
sbb
das
jge
test
rclb
pop
push
ljmp
jl
outsl
js
xchg
jno
ds
popf
jmp
insb
negl
push
inc
inc
mov
push
mov
and
fwait
imull
pop
pop
push
cmpsl
dec
dec
imul
mov
mov
dec
mov
mov
and
arpl
addr16
pop
jmp
cmpsb
cmpsl
jle
rcrl
jle
mov
pop
in
mov
xchg
dec
cmp
out
lret
mov
jecxz
and
lods
gs
arpl
or
cwtl
mov
notl
pop
sub
and
pop
popf
sbb
xchg
push
xchg
mov
rcrb
sub
mov
sbb
dec
mov
xor
mov
add
adc
enter
xor
lock
pop
dec
cmpsl
roll
mov
mov
push
push
lcall
or
pop
ret
mov
out
sub
add
mov
inc
stos
ss
jmp
jo
frstor
jo
sub
sbb
lcallw
add
mov
add
divb
xchg
lods
cmp
stc
mov
out
and
dec
in
push
sbb
test
add
xor
lcall
aas
xchg
in
add
lret
mov
cwtl
push
mov
inc
xor
sub
push
cmc
inc
mov
sbb
pushf
xor
jecxz
rcrb
add
sarb
push
jge
ret
xor
popf
dec
ds
jae
subb
jg
ds
outsb
add
or
leave
outsl
sbb
imul
outsb
or
jmp
sub
jbe
inc
mov
jle
ret
cs
jp
lret
pop
xor
fidivs
imulb
push
insb
movsl
xor
adc
adc
cld
lea
sbb
mov
xchg
aaa
pop
mov
fdivr
addr16
cmp
cmc
out
mov
sub
enter
mov
jl
enter
ljmp
xor
icebp
cmp
mov
mov
sbb
mov
mov
jb
flds
or
adc
sbb
cmc
roll
cmp
call
lods
adc
push
adc
movl
outsb
movsb
jp
enter
xlat
movsb
jecxz
icebp
shl
xor
mov
into
adcb
jo
jae
aad
dec
dec
fldenv
push
cmc
test
test
inc
mov
inc
rorb
aam
scas
cmp
ret
pusha
shr
scas
jae
xor
jge
xor
std
movsb
cmpb
aas
mov
fdivr
xor
shrl
push
sub
inc
jecxz
cmpsl
push
dec
pop
mov
mov
in
data16
pop
je
cmpsl
xor
cmp
and
dec
jle
xorb
or
fwait
sbb
adc
xchg
mov
loop
stc
sub
push
pop
sub
sbb
cmp
xor
add
and
inc
data16
aas
cli
inc
push
mov
sbb
xchg
bound
adc
dec
clc
cmp
xor
outsl
xchg
mov
adc
xchg
cmp
pusha
mov
cmpsl
xorl
push
ret
shl
aas
jne
mov
jno
shl
inc
add
mov
push
mov
mov
xchg
push
jns
inc
jle
jmp
push
and
inc
cmp
rorb
pop
lret
sbb
roll
add
shlb
clc
push
dec
mov
out
push
lcall
leave
jecxz
repz
or
mov
test
sub
or
lret
dec
push
cltd
mov
jmp
mov
dec
jno
xor
movsl
test
inc
clc
and
jnp
stos
cmp
insl
pushf
ret
pop
inc
call
aad
inc
dec
dec
and
mov
adc
cmp
jne
push
sbb
adc
fisttpll
xchg
mov
ret
fsubs
rorl
addr16
loopne
and
sbb
icebp
xlat
xchg
ret
decl
mov
xchg
je
ja
add
inc
jmp
sub
pop
fidivl
mov
jecxz
in
mov
jb
adc
xchg
jb
and
pop
stc
dec
pop
mov
mov
adcb
or
js
insb
inc
mov
pusha
sub
leave
push
cwtl
lea
pushf
add
pushf
fs
repnz
sub
aaa
pop
outsb
jl
mov
out
push
pushf
insb
add
cmc
in
sarl
in
sbb
cli
sub
fwait
pop
xchg
xchg
das
or
mov
inc
iret
shll
mov
popa
outsl
xor
jecxz
add
insb
push
pop
je
movsb
xchg
xor
movsl
mov
jecxz
cld
cld
inc
scas
pop
mov
es
inc
xor
vpsubusb
add
out
push
ljmp
stos
std
dec
mov
cmp
stos
shrl
xor
or
push
adc
push
sub
popf
lds
jnp
ljmp
cmp
xor
inc
sbb
and
sbb
push
test
and
xorb
enter
daa
test
das
sbb
imull
xlat
or
push
icebp
hlt
mov
mov
inc
lret
sub
ret
xlat
inc
incb
iret
pop
sti
xchg
enter
jns
jl
sub
ds
fwait
loope
negl
nop
fistps
or
cmp
or
scas
scas
add
inc
push
adc
jmp
sub
sbb
lods
notl
inc
popf
add
rcr
sub
sti
or
xor
ss
mov
push
adc
loope
push
jae
sbbb
sbbb
fistpl
xor
mov
push
ljmp
call
mov
loopne
mov
sbb
loope
xchg
mov
aad
inc
or
test
push
and
mov
jae
ds
push
popa
mov
jmp
movsb
test
pextrw
cwtl
leave
xchg
push
xchg
xor
stc
dec
outsb
ljmp
stc
xchg
jp
cmp
mov
or
or
je
addl
mov
dec
cmp
leave
in
idivl
push
int
push
mull
cltd
hlt
push
dec
repz
ret
cmpsl
iret
sub
push
lods
add
mov
mov
imul
shrl
jge
xor
cwtl
cmp
shr
fisubl
and
or
mov
mov
mov
mov
xor
test
xor
xchg
out
jae
lods
xchg
jbe
inc
jmp
pop
add
mov
dec
mov
lret
inc
lods
xchg
push
and
cmp
xchg
fisttpll
insl
mov
sub
shr
adc
jg
inc
xchg
les
and
aam
out
rcrl
cmpsb
rcrb
ret
cmpsb
clc
subb
sti
test
jecxz
lret
dec
nop
imul
fidivs
push
scas
sarb
add
mov
rcr
dec
mull
pop
jno
addr16
push
clc
insl
mov
push
fsubrp
nop
push
push
lret
or
jl
dec
push
jb
xor
adcb
mov
inc
shll
out
iret
test
das
sub
js
pop
test
jbe
cmp
push
aas
aas
mov
mov
or
lcall
xchg
jg
pop
pop
sbb
scas
mov
adc
inc
int3
push
std
dec
shlb
scas
mov
add
fisttpl
outsl
jmp
mov
cmp
pusha
imul
or
int3
cli
mov
pop
test
and
xor
addr16
cltd
and
push
fisttpl
or
sub
insb
enter
cld
xchg
add
ffree
and
sbb
add
sub
std
dec
mov
aam
cmp
pop
loopne
enter
xchg
pop
xorl
and
insb
xor
sbb
and
inc
js
cwtl
inc
add
jmp
bound
leave
mov
mov
lea
cmpsb
mov
jno
arpl
fs
jle
xchg
adc
dec
or
cmp
mov
scas
stos
aam
daa
nop
jl
fisttpll
xchg
cmpsb
xor
mov
test
cmp
dec
sub
jns
jg
ljmp
sbb
cltd
adc
in
nop
aad
mov
cmp
add
and
jg
dec
fldenv
sbb
xchg
andb
lret
or
xchg
pop
mov
xchg
repz
mov
das
ret
mov
cmp
push
sbb
das
push
andl
outsb
xchg
pop
ss
cld
mov
gs
mull
movsl
push
stos
ds
in
xchg
imull
or
adc
mov
adc
mov
test
stos
mov
mov
lods
pop
popa
out
hlt
arpl
lods
jns
mov
and
jge
cmp
ret
jecxz
cs
adc
aas
stos
fiadds
ds
sar
pop
jmp
sub
test
in
arpl
add
je
pop
fnsave
jl
adc
ret
push
pop
mov
pusha
into
ret
rorl
imul
sub
enter
pop
scas
movsb
rcll
dec
popa
cwtl
dec
mov
sub
lea
jno
pusha
push
mov
aaa
aas
mov
ss
movsb
cmc
pushf
cmc
sub
aad
or
sbb
cmp
out
popf
adc
jle
lock
mov
mov
nop
fidivl
aas
or
adcb
out
ja
jecxz
sub
repz
or
or
subb
popf
cwtl
das
xchg
adc
test
arpl
jl
idivb
stos
push
out
int3
sub
clc
sub
test
xchg
jecxz
aaa
add
xchg
out
in
adc
inc
xchg
sbb
jbe
clc
enter
jae
out
aaa
inc
mov
cld
mov
jo
ror
mov
ficoml
add
in
mov
jae
sbb
nop
or
ss
out
sbb
mov
adc
daa
and
lahf
bound
out
push
mov
gs
incl
das
in
sarl
mov
dec
add
and
ss
push
arpl
or
and
aas
popf
je
sahf
push
pushf
aam
jno
cmp
fidivs
xchg
pop
adc
and
shll
inc
push
push
dec
stos
cmp
pop
dec
clc
fistpl
jo
negl
pop
cmp
inc
mov
sbb
into
addl
movsl
or
lret
ja
push
inc
inc
in
sub
cld
incl
lret
mov
push
fisttpll
ss
pop
adc
cmp
xor
loop
or
mov
sub
hlt
mov
and
popf
nop
je
divl
mov
and
mov
cmpsb
add
or
fsub
aad
mov
vmovdqu
and
mulb
hlt
mov
arpl
pop
jg
and
jecxz
xchg
cmpsl
orb
insl
xchg
pop
adc
jge
nop
mov
jp
mov
pop
ljmp
push
adc
dec
or
lcall
in
cmp
xor
jp
dec
xchg
fwait
out
cmp
test
sub
add
xor
mov
add
clc
cmc
iret
sbb
iret
push
pushf
inc
pop
mov
stos
pop
lods
push
dec
xlat
imul
aad
inc
jle
mov
icebp
xlat
aas
mov
shll
and
add
mov
call
jo
sbb
pop
ret
shlb
daa
out
aad
xor
scas
ret
aad
out
mov
mov
jmp
push
sbb
mov
in
add
hlt
daa
jno
push
push
js
xchg
scas
test
push
jnp
mov
inc
add
pushf
xor
leave
or
cmp
stos
out
mov
pop
sbbl
mov
scas
test
push
pop
rclb
mov
sti
sub
mov
aaa
icebp
sub
pop
xor
lds
icebp
sti
jbe
ljmp
ds
and
shrl
js,pn
or
mov
loopne
jge
bound
adc
ret
pop
int3
or
xor
pop
xor
mov
xchg
ss
add
outsl
mull
xchg
rcl
add
mov
fwait
push
mov
xor
mov
ss
loop
cmp
das
int
fistpll
mov
xchg
sbb
and
or
cli
arpl
mov
push
cmp
fidivrs
and
gs
insb
sub
sbb
pop
imul
bnd
cli
sub
loope
jne
mov
out
pusha
dec
adc
test
dec
push
sarb
push
std
adc
add
mov
dec
cld
out
mov
xchg
fs
lds
shr
xchg
mov
cmp
add
push
adc
sbb
sbb
jmp
test
push
adc
mov
int
fsubrl
cmp
outsl
pop
inc
inc
insb
das
ljmp
lea
and
aaa
jg
mov
jns
repnz
pop
test
lock
jmp
xchg
mov
or
call
add
shrb
rep
setge
imul
mov
aam
fisubs
xorb
or
add
shlb
jg
push
mov
pop
xchg
fdivrl
insb
sub
xlat
out
orl
mov
je
xchg
lods
out
pop
ret
mov
jecxz
mov
jle
push
ljmp
movsl
sub
xchg
xchg
xchg
js
cltd
mov
mov
push
lcall
into
rorl
in
mov
fildl
loope
fcoml
ret
pop
cld
cwtl
lock
mov
bound
mov
or
xchg
mov
je,pn
ret
jns
mov
pop
cli
aaa
fildl
lret
out
mov
sbb
fdivrl
adc
xor
cld
mov
push
shrb
push
jle
int3
loopne
in
aaa
imul
pusha
dec
cmp
nop
and
call
into
rcrb
jo
scas
push
adcb
push
aad
and
lods
pop
pushl
mov
incb
push
push
fdivrl
mov
sbb
inc
in
mov
lret
xchg
pop
in
push
push
and
addb
mov
mov
pop
xchg
push
mov
mov
mov
popa
push
dec
adc
hlt
stos
push
mov
add
cltd
mov
push
push
jmp
mov
sub
scas
stc
cmp
in
adc
fiadds
mov
cmp
data16
ja
cmp
gs
imul
sub
cmc
movsb
add
ljmp
addr16
mov
repz
sub
sahf
push
mov
sub
mov
cmp
loope
sbb
inc
mov
jge
dec
ds
xchg
imul
movsb
loopne
xor
xchg
sub
sbb
push
push
xor
add
aas
outsb
add
and
imul
xor
xor
jle
loope
fmul
rcll
mov
lcall
adc
pop
pop
cmpl
pop
stc
add
dec
push
rcll
gs
in
push
adc
or
call
push
iret
addr16
mov
addr16
jae
push
sub
dec
popf
or
aam
pop
shll
shll
inc
pop
cmp
mov
aas
aas
popf
je
mov
lret
stos
cmp
loope
mov
roll
and
inc
lret
rorl
jnp
mov
and
repnz
cmp
adc
bound
pop
xchg
mov
add
test
loopne
roll
xchg
rcrb
sub
sbbl
mov
pop
adc
pop
jne
mov
mov
adc
fistps
xchg
loope
dec
pop
sub
and
push
push
sbb
cs
lods
mov
xchg
repnz
rclb
push
mov
adc
in
mov
dec
and
push
test
dec
or
and
test
scas
int3
imul
bound
cld
lock
repnz
sbb
push
popa
push
mov
mov
and
push
or
jnp
bnd
jb
inc
imul
jl
cmp
inc
inc
push
xchg
scas
gs
xchg
enter
cwtl
push
push
jne
adc
xor
lcall
fiaddl
dec
out
and
and
adc
mov
js
sti
sbb
sar
mov
int3
or
xchg
xchg
into
xchg
or
andb
cmp
pop
mov
push
aas
shll
mov
mov
aam
xchg
mov
stc
push
aaa
add
adc
xchg
cs
test
sbb
jmp
loope
push
add
cmp
js
adc
popf
add
or
les
jge
and
pushf
testb
ffree
mov
das
jnp
bound
cmp
subl
push
shrb
cmpsb
pop
jge
pop
shlb
ljmp
mov
and
dec
mov
mov
dec
adc
mov
cld
aaa
cmpb
cmp
mov
and
fs
mov
dec
fisttpll
push
shr
roll
das
mov
bound
nop
aam
cmp
inc
fwait
jbe
dec
shll
mov
jp
icebp
push
dec
sub
aam
test
lock
inc
ret
ret
inc
push
test
idivl
jecxz
sahf
jns
clc
andl
cli
in
cli
ljmp
sahf
xchg
jo
inc
aad
sbb
ret
or
add
adc
popl
xchg
push
mov
mov
pop
pop
movsl
cmp
xor
adc
xor
and
jns
shl
and
inc
push
sub
jbe
test
sbb
test
mov
shll
sub
adc
sbb
fidivrs
xchg
cs
test
ja
jecxz
add
inc
sub
sbb
xchg
scas
xchg
mov
lods
jne
fisttps
lret
mov
inc
test
sub
push
loop
inc
js
int3
insl
or
lahf
and
mov
movsb
mov
sbb
adc
sbb
out
mov
inc
mov
cli
fdiv
cmp
mov
je
and
or
pusha
cmc
mov
daa
inc
push
xchg
cmpsb
sub
fidivl
adc
inc
ret
push
lock
ss
imul
popa
test
cmp
and
leave
bound
ds
aaa
sbb
push
jnp
add
inc
fwait
addb
pop
or
cs
leave
cmp
inc
mov
testl
jne
sbb
sub
inc
inc
add
add
test
mov
movsb
in
rcrb
cmp
loope
xchg
dec
xchg
and
aad
mov
mov
jne
test
lahf
mov
or
icebp
pop
push
cld
sub
mov
or
xchg
inc
rorb
in
xchg
inc
mov
fidivl
scas
adc
iret
xchg
imul
loope
jns
jmp
sbb
xor
pop
jno
and
adc
ljmp
lods
test
cld
push
cld
inc
nop
inc
icebp
pop
jnp
mov
insb
pop
ljmp
mov
pop
xchg
aad
test
xor
cld
xchg
fmuls
je
jne
or
imul
mov
bound
cltd
repz
test
clc
inc
jb
add
cmp
inc
push
xor
sahf
mov
mov
ja
lahf
cltd
dec
in
cmpsl
lcall
mov
mov
ja
int3
dec
mov
jnp
lahf
jbe
into
adc
pop
mov
add
nop
inc
xchg
insb
push
pavgb
jno
xor
mov
mov
mov
shlb
lds
adc
lret
out
in
andb
decl
xsha1
mov
lret
loop
add
test
outsb
cmp
jbe
lock
pusha
adcl
nop
fmuls
scas
lret
ss
mov
sub
jecxz
sbb
outsb
test
jge
xor
or
xchg
loop
inc
xchg
fsincos
pop
lea
das
dec
sar
push
jo
repnz
add
nop
pop
xchg
sub
xor
loope
xchg
lds
and
cmp
test
adc
cwtl
in
and
mull
mov
sbb
fidivs
mov
mov
cli
dec
sti
cmc
jg
sahf
lret
adc
repnz
mov
insb
add
xlat
dec
jg
sti
mov
ds
jae
sbb
mov
mov
jecxz
and
leave
arpl
pop
inc
mov
cmpsl
fdivr
insb
xchg
cmp
sti
cmp
mov
push
mov
cwtl
xor
iret
rorb
aas
lods
adc
lock
xor
clc
adc
out
inc
inc
pop
inc
pop
inc
lods
add
sub
std
and
insb
xchg
sbb
fxch
pusha
cmp
popa
shrb
sbb
jb
jns
shl
sub
sub
cmp
jecxz
mov
jle
dec
xchg
ds
push
or
mov
js
lods
imul
mov
fwait
sub
push
fdiv
sahf
shrl
test
in
loop
jmp
pop
imul
outsb
inc
push
xor
mov
fnstsw
std
lahf
rclb
clc
add
push
sub
sub
push
mov
and
lods
xchg
mov
ret
in
cltd
icebp
pop
add
adc
repnz
ljmp
and
push
mov
decl
push
mov
add
dec
cmp
ret
pushf
in
fmuls
ror
xor
pop
dec
and
xlat
stos
lret
xchg
in
cmp
inc
sub
cmp
pop
adc
dec
or
mov
ds
inc
xchg
into
cs
push
add
push
out
imul
inc
xchg
pop
cmpsb
cs
lahf
xor
lods
jno
out
push
xor
test
inc
ja
sub
mov
fsts
rcll
mov
and
cwtl
adc
mov
mov
pusha
sbb
xchg
mov
mov
cmp
lret
scas
jbe
adc
movsb
xor
inc
sub
adc
xchg
jns
jmp
dec
xchg
mov
cmpsb
jle
mov
mov
xchg
lds
xor
sbbl
add
sub
ret
popl
fsubs
out
mov
popf
outsl
imul
adc
dec
imulb
dec
push
and
pop
jl
cmp
scas
leave
push
mov
xor
sti
mov
pop
js
insl
pop
mov
rclb
enter
clc
add
cmp
pop
sbb
stos
xchg
dec
and
leave
push
sub
push
and
daa
sbb
mov
testb
clc
shrl
rolb
pop
icebp
outsl
adc
xchg
in
mov
jo
popa
dec
xchg
lret
sub
inc
or
fs
xchg
icebp
test
mov
mov
ljmp
or
lret
lea
fwait
mov
aad
dec
orb
je
xor
cmpsb
add
add
adc
mov
bound
pusha
pushf
scas
in
sbb
test
xor
mov
and
stc
hlt
out
mov
jns
arpl
xchg
subb
or
aam
inc
inc
pusha
test
pusha
insl
test
push
jns
add
rolb
cmp
test
fadd
test
inc
movsb
iret
ljmp
sub
push
mov
in
push
iret
mov
cmc
add
jge
inc
aam
inc
jns
rcll
ja
cs
push
enter
lahf
ret
ja
mov
je
push
in
mov
lds
adc
jg
es
inc
cltd
mov
out
xchg
test
int3
add
xchg
mov
les
xor
and
out
xor
outsb
std
test
inc
sti
push
roll
and
into
jp
fcmovbe
jns
or
scas
push
addr16
or
inc
pop
jg
xchg
gs
jge
sar
movsb
rcrl
pop
mov
sub
cmpb
cmp
cmp
fstl
insl
mov
call
mov
flds
jle
mov
inc
pop
lods
lahf
cltd
notb
out
rolb
inc
xor
cmp
inc
or
mov
neg
ret
in
xlat
mov
sbb
mov
stos
lahf
movsb
or
inc
inc
test
inc
jle
cmp
aam
fimuls
gs
cmp
and
out
ret
inc
data16
fbld
adc
pop
xor
cmp
and
aaa
mov
add
lcall
adc
in
lock
fbld
pop
push
mov
or
push
in
mov
clc
and
int
js
scas
outsb
dec
mov
stos
sbb
sub
ret
lock
ljmp
mov
cmp
loop
mov
dec
pop
mov
popf
sti
mov
push
push
lods
cmp
mov
mov
inc
jmp
pushf
pusha
outsl
outsl
adc
imul
xchg
xor
mov
or
stos
add
and
or
fistpl
lcall
xchg
dec
adc
inc
scas
shrl
sbb
jmp
sub
repz
cltd
xor
in
cmp
cs
push
pop
loope
sbb
in
xchg
mov
sub
adc
stos
xorb
arpl
push
loopne
sbb
aad
jg
mov
pop
sub
stos
orl
sbb
lcall
push
jecxz
je
in
adc
mov
popf
inc
int3
pop
or
add
inc
out
and
shll
push
andl
ss
cmp
in
dec
adc
add
push
xchg
cmp
xchg
rclb
sub
dec
push
adc
loope
sub
ljmp
dec
mov
lods
xchg
roll
out
or
gs
test
dec
dec
sti
pop
test
inc
lret
pop
cmp
push
out
sbbl
mov
inc
or
movsb
ljmp
pop
sub
jbe
or
mov
jb
mov
xorb
dec
js
adc
xor
push
fnclex
xlat
pop
lock
add
loop
int
xor
cmp
bndstx
push
xlat
cwtl
test
sbb
add
add
fdivrl
pop
mov
sbb
scas
mov
mov
dec
inc
mov
fwait
cmp
mov
jmp
dec
rcrb
lret
jle
sti
out
mov
ficomps
xchg
int
lea
icebp
pusha
fdivrl
pop
in
movsl
out
inc
pusha
ret
sahf
cmpsb
cwtl
sahf
lods
cmpb
loopne
fstl
cmpsb
mov
fwait
inc
adcb
add
fldenv
mov
hlt
and
sahf
cwtl
jns
repz
jmp
and
dec
xchg
arpl
pop
mov
ret
int3
stos
shlb
shlb
adc
ss
and
lret
jmp
and
movsl
mov
js
xor
xor
pushf
pop
mov
mov
adc
mov
addl
aam
add
mov
and
mov
jne
leave
xor
shll
cli
int
arpl
icebp
lea
mov
and
and
inc
sbb
xor
mov
insb
pop
mov
pop
mov
cmpl
cmp
and
repz
sbb
mov
cltd
mov
inc
rcrb
dec
jge
aad
sbb
mov
pop
les
sub
dec
cmpsb
xchg
std
pushf
xchg
jnp
pop
add
push
fwait
add
sub
fdivrl
inc
cld
out
xchg
jle
jge
or
push
icebp
loopne
mul
rcpps
xchg
scas
sbb
push
in
push
popf
mov
lret
jl
mov
lods
inc
ljmp
xchg
insb
mov
frstor
jb
inc
lret
out
dec
outsb
jp
cli
mov
inc
and
add
stos
ret
pop
push
jo
push
test
ds
sbb
into
mov
mov
test
or
jmp
aaa
pop
xchg
add
or
out
cmp
add
jmp
push
mov
cmp
rorl
stos
stc
loope
shll
subb
cld
sub
and
aas
popf
out
mov
fidivs
mov
subl
orb
sub
lahf
fs
push
movaps
xor
aas
dec
sub
cs
or
mov
mov
cmp
aas
push
loope
sub
aas
out
aad
mov
outsb
aas
stc
cmp
js
push
push
adc
inc
mov
sbb
dec
sbb
pop
xchg
jp
inc
mov
es
and
lret
bound
inc
sbb
jne
push
in
test
sub
dec
or
fistpll
push
pop
add
ss
mov
decb
xor
cmpsl
xchg
xchg
fisubs
pop
movq
in
jge
push
pop
push
push
adc
add
pop
or
lods
mov
mov
inc
mov
mov
mov
bound
add
adc
gs
mov
cmp
sub
js
lret
adc
jns
aas
and
push
jmp
jbe
lock
push
mov
pcmpeqb
push
dec
mov
mov
imul
sbb
mov
imulb
mov
movsl
mov
in
xchg
cltd
and
inc
aad
xor
sbb
sub
out
xchg
rclb
aaa
cmpsl
in
adc
cld
lods
pop
add
xor
push
dec
cmp
push
pop
into
xor
ficompl
ror
xor
inc
sub
insb
pop
inc
xchg
sub
sbb
jge
pop
mov
adc
cltd
aam
insb
add
jne
pop
xchg
sbb
xchg
mov
pop
mov
jle
cltd
jmp
in
push
add
and
es
lds
xchg
xchg
lcall
adc
mov
das
mov
lds
sti
daa
lds
out
mov
jmp
pop
pop
test
jno
cli
stc
and
mov
inc
mov
mov
lods
insb
stc
scas
or
in
sbb
sub
xlat
dec
shl
dec
loope
mov
xor
aam
mov
mov
jg
add
loope
popf
pusha
outsb
push
in
inc
adc
and
aad
andl
lret
sahf
bound
adc
insb
data16
mov
cwtl
adc
dec
nop
pop
push
sbb
jg
lock
mov
aad
sub
cs
adc
popa
pop
inc
or
scas
push
or
sbb
push
mov
outsb
scas
pop
inc
cmp
lock
cs
jge
cmc
pop
addb
lods
cmp
andl
dec
inc
call
call
push
inc
rcrb
sub
sbb
ss
mov
cmp
xchg
xor
fimull
dec
movsb
xchg
add
push
sbb
out
nop
dec
add
icebp
xor
dec
pop
jmp
xchg
push
les
mov
ror
mov
mov
mov
insl
out
push
xor
jne
sbb
aaa
imul
push
jle
imul
dec
fisttpl
pop
stos
imulb
dec
lcall
daa
push
test
movsb
lret
push
aaa
mov
mov
js
rcrb
and
sbb
xchg
adc
stos
jmp
lahf
cmp
or
xchg
cwtl
sub
pusha
push
jmp
xchg
jns
jnp
pusha
fisttpl
test
mov
aad
test
sub
dec
dec
sub
stos
shrb
mov
int
sar
rcll
idivb
rcr
in
lods
xorb
daa
cmp
cmp
cwtl
pop
and
cmc
mov
dec
out
rcr
pop
push
cmp
fstpl
adc
mov
mov
push
and
xor
notb
add
fisubrs
adc
push
pop
pusha
inc
jb
inc
cmpb
fs
adc
cmpsl
and
xchg
xor
mov
sbb
jmp
sub
lcall
and
cltd
cmp
sbb
xchg
popf
iret
jbe
cmp
mov
jp
mov
cli
in
mov
aaa
in
sub
dec
loope
mov
jae
push
and
icebp
ljmp
adc
adc
cmpsl
jae
dec
fwait
pushf
lcall
stos
push
jge
cld
xor
add
fcoml
add
lahf
xchg
and
out
scas
shr
sub
leave
sbb
jp
aaa
in
lods
stc
push
leave
gs
sbbl
mov
push
sub
pop
sahf
cmp
aas
cmpb
dec
stc
stos
arpl
test
pop
adc
testl
cmp
js
sbb
dec
daa
das
mov
and
pop
popf
imul
and
inc
mov
jle
push
aad
fdivrs
mov
repz
notb
out
js
jno
lahf
and
dec
xor
lret
sub
lods
insb
les
sti
movsb
cmp
push
pop
jmp
popa
mov
pusha
pop
xchg
cli
or
dec
stos
xchg
jne
xlat
pushf
pushf
sti
mov
ss
jecxz
movsl
mov
cmpsb
lahf
pause
sub
aas
outsb
scas
mov
inc
fstpl
push
cmpsb
or
mov
and
push
sub
jb
pop
adc
mov
dec
sbb
aaa
add
nop
xor
dec
popa
or
sub
js
push
xlat
scas
test
fwait
mov
call
mov
rcl
sbb
pop
cli
call
adc
and
in
mov
test
movsb
xor
into
push
es
push
enter
mov
enter
push
sbb
jle
cmp
adc
add
fsubl
sbb
mov
sbb
push
mov
sti
add
push
lds
popa
inc
pop
pop
add
aaa
movsl
or
mov
hlt
sbb
inc
dec
mov
movsl
pusha
scas
pop
xchg
push
lds
inc
ficomps
cmp
repnz
dec
pop
pop
mov
lea
mov
cmp
lret
adc
das
adc
xor
dec
mov
cmc
ret
jg
notl
pop
rcrl
daa
addr16
jo
jae
lea
dec
int
in
clc
cmp
aas
mov
enter
add
xchg
out
push
mov
add
dec
pop
daa
pop
mov
imul
sti
cmp
cmc
dec
inc
lcall
scas
sbb
sbb
push
stos
push
pop
jbe
cmp
jbe
push
cmp
xchg
dec
jge
sub
loop
pop
cmpsb
jo
iret
pop
xchg
sbb
shr
dec
cwtl
xchg
mov
inc
imul
xor
push
faddl
xlat
xchg
in
bound
push
aam
inc
cmp
ljmp
inc
in
test
sub
mov
cmp
test
cmp
mov
xchg
push
dec
inc
jl
pop
pop
popa
out
and
popf
xchg
pop
in
and
lret
mov
into
mov
adc
xor
mov
test
pop
rcl
adc
pushf
jge
or
sbb
bound
jns
test
into
add
outsl
repnz
add
lahf
xor
jmp
aaa
pop
popf
sbb
inc
jno
xchg
sbb
jg
test
les
mov
fwait
adc
mov
ret
mov
and
sahf
js
sub
sbb
or
pmaxub
xor
repnz
out
push
or
jo
js
hlt
mov
dec
aaa
sub
mov
lds
sub
cmp
mov
xchg
and
es
pop
fcomip
outsb
cs
cmp
std
call
fwait
stos
lret
mov
or
cli
cmpsb
xchg
mov
mov
out
sub
lahf
pushf
fcoms
ret
icebp
mov
insl
pop
mov
stos
int
inc
push
sbb
sbb
sub
adc
in
dec
arpl
cmp
aam
mov
mov
addps
insl
push
icebp
push
aam
xor
cmpsb
sti
mov
insb
cwtl
leave
and
mov
inc
and
nop
mov
push
xchg
xchg
pushf
jg
sarb
aad
jno
add
out
les
jb
sub
and
jb
pop
xchg
sub
dec
dec
jmp
gs
es
imul
fucom
jb
xchg
adc
cmp
mov
pop
sub
or
pop
xor
pop
add
mov
lods
nop
scas
add
mov
jno
cmp
xor
repnz
aam
sbb
mov
sub
adc
xabort
xor
stos
xor
roll
adc
clc
es
in
mov
add
lret
xchg
imul
pop
cmp
adc
insb
arpl
pop
xlat
lods
xlat
movsl
cld
mov
jb
jle
lret
push
mov
les
sbb
cmpsb
icebp
lods
pop
mov
dec
pop
dec
xor
daa
in
sbb
pop
int3
arpl
inc
nop
inc
lahf
mov
push
imul
mov
and
enter
data16
mov
sbb
jle
inc
xlat
jmp
pop
push
cs
mov
imul
inc
pop
in
xchg
aaa
cmc
fwait
mov
push
movsb
jl
inc
jmp
clc
hlt
mov
in
push
inc
shrl
or
sub
je
testl
stc
mov
loope
mov
mov
xchg
es
or
and
ret
mov
fildl
shlb
inc
mov
sub
scas
pop
or
mov
xchg
and
cld
mov
xor
push
dec
in
popa
cmp
inc
xlat
inc
fdivrl
pop
xchg
dec
leave
xchg
ja
mov
xchg
repz
pop
mov
in
jb
sbb
pop
dec
cmp
ljmp
dec
aaa
sub
in
data16
lods
adc
insl
inc
rcrl
scas
cmp
das
sub
fsub
add
jbe
movsl
incb
daa
fiadds
lods
and
push
dec
dec
test
daa
cmp
lods
cmp
adc
stc
out
cmc
or
aas
xor
lahf
xor
mov
dec
and
pop
xchg
xchg
lahf
ljmp
nop
jmp
not
jbe
jge
hlt
repz
xchg
pop
add
in
test
sub
inc
adc
sbbb
mov
cmpsb
sbb
shr
cmp
or
sub
pop
and
pop
stc
ffreep
xchg
pop
or
loopne
xor
outsl
pop
push
mov
ret
dec
in
xor
xor
cmp
xchg
sub
js
mov
mov
out
xor
or
push
push
xchg
pushf
cmp
imul
mov
sub
mov
mov
cmp
cmp
mov
ret
pop
sahf
sub
movsb
mov
mov
cmp
not
es
inc
push
mull
sub
sbb
mov
movsb
inc
cmpsb
dec
aaa
std
xor
lock
and
rclb
xchg
call
cld
mov
es
test
dec
leave
pushf
jnp
mov
ficoms
icebp
adc
je
fdivrl
loope
mov
imul
ja
pop
inc
dec
ss
dec
mov
mov
cmp
sub
add
add
pop
mov
inc
mov
add
rcrb
inc
xor
out
mov
lock
stos
jg
pop
push
inc
sbb
inc
div
pusha
push
in
mov
and
xor
push
mov
sahf
pop
lret
or
xchg
fst
cli
ja
cmp
sti
pop
hlt
mov
in
fistpl
xor
fmull
push
lods
iret
hlt
cltd
pop
ds
nop
sbb
out
sub
sahf
sbb
mov
dec
mov
jg
fnsave
neg
leave
sub
or
dec
mov
test
stos
and
jge
dec
pop
jge
stos
xchg
ficoml
xor
out
fimull
iret
fisubrl
dec
inc
test
cmpsl
mov
adc
jb
jns
adc
adcl
in
xchg
sub
push
scas
fstpt
stc
les
push
stc
sbb
dec
dec
ja
das
idivb
bound
call
insl
xchg
push
mov
es
stos
lret
pop
or
adc
mov
pop
jnp
lds
xchg
cmp
arpl
outsb
sbbb
adc
mov
dec
inc
push
jno
ret
rorb
sub
mov
test
insl
xchg
mov
std
aam
xchg
or
and
bound
fsubl
lds
pop
pop
mov
clc
and
in
outsl
and
push
in
cmp
sub
ret
dec
imul
sahf
xchg
mov
xor
dec
dec
jg
ja
les
out
mov
or
xchg
dec
xchg
sahf
push
inc
mov
push
movl
dec
push
and
insb
gs
add
loopne
cmp
inc
cmp
xchg
adc
enter
ds
jnp
jp
out
pop
arpl
aam
nop
cmpsl
jo
adc
idiv
scas
dec
adc
loop
lea
dec
cmp
jns
sbb
bound
and
xchg
jmp
inc
xor
mov
push
stc
nop
in
gs
jbe
mov
inc
rclb
stc
out
jecxz
push
mov
pop
fmuls
jecxz
cld
add
repz
mov
or
sub
mov
ret
aam
xchg
or
dec
loop
int
cmp
ret
cmp
movsb
lea
mov
push
add
jmp
scas
push
dec
repnz
cmovg
rorl
xor
in
lret
fdivrl
aaa
xor
add
and
fwait
jns
ret
cwtl
sti
add
out
sbb
cmp
lahf
pop
rol
cmp
faddl
jnp
insl
sti
lss
lahf
jno
sbb
sub
push
ljmp
cmp
pop
testb
gs
inc
daa
sub
push
cld
fs
xchg
adc
pop
shl
loop
adc
pop
jmp
mov
push
fildl
jecxz
or
add
pusha
out
movsb
scas
test
ret
std
test
inc
cwtl
sub
sub
sti
sub
addr16
dec
mov
mov
xor
inc
out
pop
adc
flds
dec
xor
lock
ja
xchg
ja
pop
fildll
rcll
out
cmp
test
data16
daa
push
lods
ret
movsb
cmp
cltd
je
sbb
into
lcall
int
xchg
popa
loop
jp
rcrl
scas
cmpsl
repz
gs
pop
aad
xchg
in
repz
fnsave
fcomps
cltd
cwtl
adc
adc
cmp
cmp
inc
jge
mov
pop
and
leave
xor
push
mov
push
imul
pop
fld
insl
mov
or
lods
mov
push
inc
push
daa
arpl
gs
xchg
push
mov
in
mov
stos
cli
rcrl
insl
into
sbb
xchg
mov
leave
mov
xchg
mov
xchg
and
pop
enter
or
mov
sbbl
test
or
bound
es
push
pop
cmpsl
push
iret
mov
lret
sbb
fcomps
sbb
lcall
cltd
imul
stos
lret
les
lds
jbe
cmc
mov
jge
rcrl
daa
push
ds
fs
push
out
clc
icebp
xor
divl
lahf
pop
mov
adc
insb
sub
lods
sbb
sahf
pop
pop
and
mov
insl
adc
xchg
enter
cltd
mov
and
xchg
pop
std
pop
mov
pushf
rcrb
sub
jns
gs
xchg
fiadds
movsl
mov
cmpsl
fisubrl
outsl
lahf
ljmp
jbe
out
sub
pop
xor
test
push
decb
test
jmp
mov
arpl
mov
pop
mov
in
add
adc
scas
push
and
push
int3
test
gs
push
mov
ljmp
out
pop
pop
mov
cltd
scas
ficompl
dec
es
xchg
test
push
mov
xchg
daa
out
mov
and
cmp
push
fs
pop
bound
cltd
pop
xor
jp
xorb
pop
stc
sub
imul
mov
shlb
movb
clc
xor
add
iret
or
adc
dec
not
ljmp
roll
push
add
mov
xor
scas
lahf
sub
andl
push
cs
xchg
mov
push
outsl
mov
int3
mov
imul
inc
sbb
and
xchg
mov
xchg
fiadds
add
or
popa
shlb
add
xor
push
sbb
insl
pop
pop
jl
mov
sbb
mov
out
cmpsb
fwait
xchg
iret
orl
jl
sti
movsb
adc
pushf
mov
jle
sub
pushf
scas
sahf
pop
jbe
lods
addl
icebp
je
in
add
inc
addr16
out
fisttpll
out
pop
sub
pop
push
sub
cmc
jle
or
push
mov
jno
cwtl
jno
sub
xlat
cmpsb
sub
aam
or
sbb
sub
in
inc
bound
xor
cs
cltd
ja
or
mov
push
ret
push
mov
add
push
jg
iret
iret
dec
frstor
or
push
xor
mov
in
decb
sub
test
aas
and
loope
cwtl
ret
clc
dec
pop
mov
inc
loope
mov
add
push
jl
or
rcrl
repz
cld
out
sti
bound
std
lahf
movsl
test
xor
pop
xchg
imul
insl
enter
pop
add
icebp
and
pop
loop
fldcw
inc
shlb
xlat
shrl
in
fldcw
and
daa
jns
sbb
mov
jecxz
cmp
scas
sidtl
mov
mov
popf
mov
subb
and
adcl
out
mov
das
jecxz
jle
mov
push
rolb
adc
fimuls
cmpsl
xchg
mov
aas
adc
lods
adc
xor
xchg
sub
aas
adc
add
inc
xor
xor
push
push
roll
stos
mov
xchg
shr
cmc
pop
jg
scas
inc
or
cs
push
add
jmp
or
mov
stos
pushf
inc
add
mov
pop
lea
mov
cltd
and
xchg
mov
ret
xchg
inc
test
outsl
out
ljmp
bnd
imulb
xchg
jg
xor
stos
xorb
jne
cli
lea
xchg
in
sahf
xchg
adc
jb
ja
mov
out
int
xor
std
xchg
mov
pop
sbb
pop
ljmp
dec
subl
jp
xchg
pop
les
mov
jg
adc
mov
es
mov
int3
inc
xor
aas
sbb
andl
jg
xchg
sbb
cmpb
mov
in
push
sub
dec
adc
inc
daa
jbe
outsl
push
add
xchg
adc
pop
adc
cld
mov
rcrl
pushf
xor
xlat
ss
lahf
sub
int
pop
std
sbb
lods
cld
in
loop
jne
mov
jne
dec
fistps
jbe
jl
xor
xchg
sub
pop
shrl
sub
mov
gs
vandnps
sahf
sbb
mov
ret
hlt
loop
jg
xchg
in
cltd
int3
icebp
scas
cmp
inc
xchg
or
sbb
mov
xchg
push
lods
lret
jb
lods
cmp
add
dec
jnp
pop
popa
in
in
das
add
scas
or
pusha
jb
xor
insb
cltd
xor
or
mov
clc
pushf
xor
xchg
test
push
shrl
cs
sbb
dec
dec
adc
add
loop
pop
js
pop
in
test
cmpsb
data16
out
cli
enter
mov
ja
insl
cs
and
arpl
sub
or
addr16
jbe
lods
xor
scas
mov
mov
cmpsb
fistpl
popa
jne
xchg
test
pop
adc
lods
lods
jb
jo
sbb
jb
lcall
clc
xchg
mov
mov
cs
aas
jecxz
filds
mov
js
iret
add
adc
aaa
div
mov
cmc
enter
stos
fstps
xorb
mov
and
xchg
cmp
or
mov
pop
and
daa
push
cmp
inc
mov
mov
cmp
push
jns
negl
mov
jl
mov
mov
jno
jo
das
sbb
add
dec
mov
rcll
jmp
jno
addr16
mov
out
sbb
andl
aad
dec
outsb
xor
xchg
insb
mov
insb
ret
fwait
popf
lret
mov
andl
add
scas
or
inc
mov
cmpsl
mov
sbb
fimuls
xchg
xchg
mov
aam
fstpl
mov
dec
aad
xchg
and
repnz
lcall
inc
inc
jo
aas
cld
sub
inc
push
bound
ficoml
jge
out
push
fnstenv
jae
data16
pop
mov
imul
insb
testl
fwait
push
aas
pop
loopne
stos
arpl
testb
fstl
push
test
dec
insb
lea
loope
mov
or
mov
fstpl
dec
adc
and
inc
adc
mov
inc
jnp
pop
sbb
xchg
adc
mov
sub
mov
sbb
loop
or
icebp
add
aam
sbb
jne
lcall
cmp
adc
inc
xor
mov
sbb
push
aaa
imul
push
pop
es
outsl
cmpsl
pop
jbe
cmp
pusha
add
paddusw
rclb
cs
and
ret
ret
out
fstpt
xchg
xchg
and
shll
inc
std
dec
push
cmpsb
jo
ss
aam
cmpsl
addb
rcl
notl
cmp
dec
addl
in
jle
or
dec
fdiv
pop
cltd
test
jnp
insl
mov
push
xor
push
lahf
out
lret
push
clc
cld
pop
stos
jns
lock
and
ljmp
stos
push
notl
mov
push
and
pop
cmp
nop
ret
cmp
subb
shrl
mov
fstpl
dec
je
in
shrl
cs
dec
add
and
jp
adc
adc
push
adc
or
loopne
loope
mov
jae
push
jg
mov
std
movsl
jo
mov
xor
mov
leave
data16
sub
aaa
shrb
sbb
xor
xor
xor
sbb
mov
cmp
push
adc
and
repnz
sahf
add
push
add
or
pop
jmp
sbb
xchg
pop
cs
mov
pop
mov
dec
mov
enter
cmpsl
mov
loop
cwtl
mov
sub
outsl
mov
inc
push
pusha
mov
iret
imul
negl
push
sbb
movsl
xchg
mov
fistpll
jno
enter
xlat
or
jl
outsb
sbb
outsl
dec
into
or
push
mov
push
inc
fbld
xchg
mov
cmpsb
xor
adc
vpshad
adc
sub
adc
xor
bnd
or
or
push
push
sarb
fidivs
inc
push
mov
in
jg
icebp
cmp
inc
pusha
cmpsb
frstor
add
les
outsl
add
outsb
mov
aam
mov
jp
adc
xchg
jge
jne
mov
cmc
ljmp
loop
xchg
andb
inc
and
jno
mov
lahf
out
inc
mov
ss
push
jge
adc
loopne
pop
push
lods
mulb
pop
sub
lock
mov
lods
ljmp
rcl
mov
mov
icebp
das
fildll
fnsave
xchg
pop
fstpt
pop
jl
and
xchg
mov
jl
xchg
mov
into
inc
mov
test
jmp
lret
and
push
and
lret
jno
enter
stos
jp
fcmovbe
fs
je
jo
fucomip
cmp
mov
dec
shr
pushf
adc
movsb
pop
stc
jge
push
mov
in
jae
cmp
mov
shll
lcall
outsb
mov
test
pop
scas
ljmp
sbb
je
lea
cmp
lret
lods
popf
dec
mov
xor
test
sbb
stos
adc
and
jmp
lock
loope
rcrl
pushf
in
adc
es
data16
incb
lods
mov
ljmp
pop
popf
jo
lea
dec
lock
addb
push
xor
add
bound
int3
sub
daa
rorl
xchg
call
and
lock
push
pop
dec
push
ret
add
test
lods
sahf
xchg
mov
pop
mov
mov
xor
inc
popa
scas
jae
mov
lds
push
int3
out
xchg
pushf
inc
push
ss
mov
js
jge
int3
fs
jnp
push
cmp
rol
in
roll
imul
or
loope
jge
mov
and
rcrb
outsl
inc
cs
dec
xchg
push
adc
xor
hlt
mov
fldl
xchg
hlt
push
jle
div
add
stos
lcall
pusha
fs
dec
cmc
aam
mov
or
lea
cmp
pop
cmpsb
cwtl
ja
jne
cmp
jle
adc
inc
rcr
mov
push
ja
sbb
inc
mov
jno
and
addr16
popa
test
aad
mov
popa
adc
inc
inc
or
pop
pop
cmp
andl
sbb
jnp
mov
jo
adc
rcll
roll
jnp
cmp
pusha
adc
cmc
mov
dec
ja
jno
insb
lock
push
cli
inc
mov
cmc
sub
out
xchg
orl
testb
adc
lds
insl
repz
aad
ret
pop
leave
xchg
jg
xchg
call
mov
in
jl
push
repnz
insl
push
mov
cld
pushf
mov
mov
adc
jb
imul
and
mov
std
or
pop
es
xor
js
rorl
loope
adc
jae
xlat
mov
mov
inc
pop
dec
add
icebp
test
sub
and
cs
adc
mov
or
fs
cmp
mov
lods
push
adc
cmpsb
cmp
mov
js
lcall
mov
adc
in
jg
mov
xor
jo
and
testl
push
cwtl
sbb
gs
insb
sbb
jb
xor
mov
pop
insl
loopne
jp
iret
das
insl
or
pop
cmp
popl
pop
dec
in
icebp
scas
lahf
out
mov
mov
and
lods
sbb
es
dec
cmpsl
adc
xor
fwait
std
es
pop
shll
cmp
pop
pop
inc
cltd
mov
rclb
mov
adc
inc
add
fmulp
xlat
arpl
imul
push
and
jns
cmpsb
pop
jg
pop
je
push
pop
lea
sbb
mov
imul
loop
outsb
mov
es
xchg
and
pop
loope
int3
flds
xor
and
pavgw
jbe
ficoms
mov
dec
or
add
movsb
and
xchg
mov
jle
jno
aad
pop
cs
cmpsb
cmp
push
xor
leave
sbb
mov
mov
xor
push
sbb
jo
or
js
sbb
add
mov
cmp
popf
outsb
mov
push
lret
push
xor
sahf
leave
cli
adc
cmp
push
ss
dec
lods
and
je
sbb
inc
dec
or
push
scas
pop
mov
inc
add
jl
lods
inc
push
jge
or
nop
sahf
es
shlb
sub
leave
jmp
mov
int3
pop
push
pushf
iret
adc
push
or
mov
daa
and
or
jg
mov
loop
jns
pop
popa
sbb
pop
js
vpmaddwd
cmpsl
cmc
int3
and
add
dec
mov
popa
and
pop
mov
test
orb
mov
js
push
jnp
push
nop
lods
jne
pop
inc
jns
outsb
adc
adc
xchg
lret
dec
in
stc
sarl
adc
jl
mov
pop
jo
sub
das
pop
add
std
dec
aad
bound
mov
imul
aas
pop
or
bound
scas
xor
inc
mov
je
insb
xor
mov
lret
stos
pop
sub
mov
lret
mov
fxch
outsl
lcall
xor
les
mov
mov
lea
push
hlt
jne
arpl
rorb
cmc
in
enter
push
push
imulb
aad
imul
cwtl
cmp
rcll
adc
loope
sbb
mov
mov
cmc
xor
xchg
cltd
iret
pop
adc
sub
bswap
dec
lret
bound
xor
data16
mov
shlb
lret
les
adc
movl
les
imul
mov
dec
cli
pop
or
mov
dec
dec
mulb
xlat
dec
mov
sub
mov
out
cmp
or
ret
xlat
mov
jnp
pop
imul
inc
or
xchg
pop
addr16
incb
push
xchg
aam
adc
repnz
push
insl
lds
mov
xchg
sbb
cmpl
cmp
or
lcall
fnstcw
bound
sarb
les
ret
sbb
inc
lods
ss
ror
dec
pop
movsl
aam
and
pop
mov
sbb
mov
pop
into
sbb
dec
push
out
mov
pop
fdivrs
repnz
rorl
add
sbbb
xchg
jle
mov
mov
mov
cmpsb
fisttpl
pop
lods
pop
fidivl
xor
loope
sarb
or
mov
pop
mov
flds
dec
cmp
xchg
ljmp
mov
shll
cwtl
fst
push
pusha
add
test
int3
fwait
outsb
das
iret
rorb
movsb
xchg
or
or
js
sahf
pop
andb
cmpsb
mov
stos
push
nop
and
mov
test
fcomi
rep
shl
cli
out
dec
xor
std
sub
clc
js
sbb
bound
xor
xor
push
call
data16
addb
cmc
popf
and
dec
push
mov
iret
and
sbb
stos
imul
sbbl
cltd
pop
test
out
xor
sbb
dec
inc
es
rol
add
cmp
push
xchg
int
dec
in
enter
sbb
out
push
les
test
sbb
push
jmp
dec
lods
pop
jns
adc
dec
jnp
out
inc
fmulp
adc
iret
xchg
insb
sbb
mov
fwait
push
mull
push
aaa
orl
cmp
mov
ret
adc
movsl
push
and
hlt
pslld
cmp
scas
ja
inc
das
push
push
dec
push
jns
sarl
dec
fdivrp
scas
mov
add
sub
adc
sbb
mov
into
fisttpl
imul
pushf
jno
ret
xor
or
lods
sbb
mov
or
jns
ljmp
push
sbb
jb
push
or
and
repz
push
mov
pop
cli
out
loope
fmuls
mov
shlb
cmc
dec
xor
fisubs
addr16
je
push
or
xchg
jl
rcll
or
sbb
mov
scas
fildl
test
daa
ss
rcrl
xchg
xchg
dec
or
sub
subb
push
push
clc
jmp
incl
mov
or
sarb
mov
lds
mov
loop
dec
xchg
std
jge
jae
cmp
sub
aad
popf
mov
add
push
subps
rorb
inc
xor
dec
xor
mov
fdivrl
adc
sbb
jg
mov
dec
push
mov
fmull
push
or
rcrl
jmp
mov
adc
jno
mov
les
mov
inc
xchg
adc
aaa
sbb
dec
lods
loop
push
jae
in
cli
or
mov
inc
mov
add
popf
imul
or
xorl
push
aaa
cmpsb
out
ds
cmp
pop
jl
dec
sarb
cmpsb
fstl
popf
xchg
cmp
ljmp
mov
and
es
jg
pop
add
mov
xlat
sbb
das
sbb
lcall
mov
mov
dec
fstl
fnstcw
icebp
sub
pop
inc
test
xorb
enter
pop
pop
aas
inc
fstp
aad
or
jo
jp
ljmp
jne
clc
mov
add
mov
and
sub
mov
stc
pop
icebp
xor
dec
or
xor
mov
movsl
sub
movsl
bound
insb
incb
icebp
mov
std
pusha
fmull
std
test
fsubl
ret
lock
jge
loop
imul
or
mov
rol
xor
iret
push
aaa
fdivr
cs
pop
test
xor
shrd
cltd
shl
xor
int
orl
in
xchg
inc
testl
sbb
dec
pop
xchg
pop
xchg
mov
outsb
push
movsb
fisubrl
xor
push
add
mov
mov
sub
arpl
mov
jmp
add
dec
in
mov
pop
in
rorl
int
push
ret
aaa
xchg
jl
icebp
insl
imul
popf
popf
cmp
pushf
sub
pop
cmp
cmp
xchg
pop
push
inc
jge
loop
test
sbb
mov
scas
pushf
in
mov
mov
pop
imul
shrb
push
shll
aad
movsb
xchg
cmp
jns
push
fnclex
inc
iret
fnstenv
cmpsl
mov
icebp
mov
push
pushf
sti
cltd
mov
icebp
mov
sub
jno
sbb
xor
mov
addr16
jne
mov
mov
cwtl
or
mov
enter
fisttpl
faddl
mov
mov
ret
cmpsl
movl
xlat
or
ret
mov
fistpll
jno
jno
popa
iret
mov
imul
ds
or
fsubl
mov
sbb
call
je
xchg
filds
imul
scas
mov
cld
cmp
fsqrt
inc
xor
negl
in
call
add
dec
add
lahf
cmpsb
andl
call
xor
fidivl
mov
jo
mov
fldl
jmp
sub
ret
adc
mov
xor
mov
clc
loopne
fsubl
subl
test
shll
push
cs
call
jl
cpuid
nop
faddl
xor
xchg
dec
in
ror
idivl
xchg
mov
sarl
js
mov
add
imul
repnz
pop
addb
pusha
or
jl
or
sub
cmp
mov
jmp
movsb
arpl
loopne
insb
or
adc
cmp
add
mov
aam
xchg
jo
stos
fwait
adc
sub
je
shrl
imulb
inc
inc
push
inc
sub
xchg
data16
adc
fs
mov
cltd
cld
cmp
in
push
dec
sub
outsl
and
inc
dec
pushf
mov
in
add
xor
punpckhwd
je
cld
or
cltd
jp
lret
xor
jg
mov
lcall
jge
and
inc
mov
je
out
or
mov
push
or
int3
push
xor
and
inc
sbb
lods
jo
jnp
pop
xchg
push
inc
mov
fdivrs
sub
xor
inc
sub
ljmp
lret
stc
fistps
sub
sbb
pop
jp
jnp
and
leave
pop
cmc
imul
mov
sbb
jp
in
sbb
lret
out
xor
lods
inc
out
jno
jne
cmp
pop
jnp
add
lock
arpl
adc
sti
push
push
cs
xor
mov
cwtl
ljmp
dec
popf
in
jmp
lock
mov
daa
pop
inc
ret
push
jo
test
iret
and
pop
arpl
sub
mov
jnp
jp
cmp
int3
and
in
mov
or
idivb
cwtl
adc
mov
mov
sti
in
cli
mov
xor
or
jae
xor
nop
xorl
ja
mov
jns
mov
mov
std
stos
sbb
out
mov
nop
sbb
pop
add
xchg
push
push
fdiv
jne
fsubrl
cmp
mov
xor
inc
psubb
lret
subb
inc
mov
pop
testl
xchg
xchg
out
jne
gs
je
in
ja
std
pop
cmpsl
fsubl
jns
scas
mov
cmp
or
enter
sarb
movsb
mov
jae
testb
jp
pop
mov
fisubrs
hlt
fdiv
repz
xor
push
insb
scas
adc
loop
aad
ljmp
or
pop
nop
pop
bound
std
fisttpl
mov
in
nop
mov
mov
icebp
fdivrl
jno
lea
sbb
push
and
xchg
jecxz
insb
rcr
mov
je
popa
inc
orl
and
pop
loope
outsb
loop
inc
push
cmp
addr16
lret
jmp
jno
mov
out
mov
adc
fldenv
mov
andb
or
cmp
xchg
xor
xchg
mov
xor
mov
sbb
and
call
jge
cltd
mov
mov
xchg
stos
mov
pop
shlb
cld
adc
out
cmpsl
ret
outsb
icebp
sarl
push
mov
repnz
int3
mov
push
adc
imul
mov
jae
sub
push
bound
movsb
push
pop
pop
mov
aaa
imulb
js
cmpsb
stos
in
roll
lods
pop
jmp
lds
cs
lds
clc
icebp
mov
scas
pop
mov
mov
sbb
and
mov
mov
leave
add
xor
movsl
cmp
shr
fdiv
lods
add
lea
lods
sbb
rcl
mov
and
push
loop
xchg
aaa
lahf
adc
and
jae
bound
repz
dec
in
mov
dec
sub
imul
dec
xlat
jne
adc
scas
inc
movsl
fidivrs
lret
out
scas
out
cltd
repnz
sub
push
adc
and
or
or
lock
cmp
pushf
xacquire
xchg
push
shrb
test
push
clc
or
cmp
mov
stos
int3
pop
push
mov
daa
out
out
fst
sbb
add
xchg
push
cmp
mov
call
mov
jae
xchg
lds
out
gs
pop
mov
jno
xchg
aam
xchg
add
cmc
mov
add
les
mov
cld
shlb
or
mov
rcrb
push
test
pop
xchg
or
and
mov
xchg
lods
inc
push
clc
mov
incb
in
shll
xor
pop
ret
cmpsl
add
fcompl
lret
jmp
and
popl
out
nop
lods
dec
jb
ffreep
dec
mov
xchg
mov
xchg
in
loop
xor
ljmp
cmpsb
out
ficompl
push
or
lcall
lret
push
ds
dec
pop
inc
sahf
out
cmp
mov
in
mov
aad
iretw
test
mov
pop
jbe
inc
inc
mull
jbe
cli
pop
lds
mov
mov
jl
pop
hlt
push
js
dec
out
out
sub
inc
ljmp
repnz
fistpll
jge
lods
mov
xchg
mov
jns
dec
xor
or
dec
ds
or
xor
mov
ret
mov
mov
popf
xor
div
xor
cltd
outsb
test
and
aaa
lods
adcl
stos
fstl
sub
dec
xchg
cmp
push
pop
sbb
data16
mov
inc
xchg
xchg
pop
icebp
xchg
lock
int
push
cmc
push
test
aas
mov
or
mov
cmp
push
rcrb
dec
adc
sbb
loop
sbb
pop
mov
mov
loope
pop
scas
jne
add
shl
mov
fildll
loope
fidivrl
hlt
mov
pushf
loopne
push
and
push
fstpl
pop
je
adc
add
pushf
test
loope
imul
iret
loop
addr16
or
aad
and
adc
pop
stc
pop
mov
daa
push
inc
pop
popa
insb
lret
loop
in
daa
test
push
pop
xor
xbegin
popf
sbb
add
mov
jg
mov
in
cmp
cmp
mov
or
andb
mov
bswap
xchg
xorl
cmp
test
or
pop
adc
push
push
xlat
fildl
js
inc
fmul
jno
incb
and
jns
sbb
ja
mov
and
mov
out
dec
cs
shrl
fnstcw
test
pop
sbb
inc
inc
dec
popf
adc
outsb
jns
push
cltd
xchg
out
pop
cld
pop
addr16
fldt
movsl
les
fs
or
fld
stos
lret
movsl
cmp
pushf
sbb
pop
pop
fimuls
movsl
mov
mov
std
cmc
ficomps
push
dec
jno
sub
stos
jae
mov
dec
mov
ret
push
in
int
mov
movb
or
add
cmpsl
pushf
add
push
or
jno
mov
ficoms
push
pop
inc
in
imul
and
pop
mul
mov
sub
pushf
mov
push
aas
jmp
dec
mov
mov
or
fiaddl
xor
mov
int
in
dec
jne
xlat
xor
in
push
jp
aas
popf
cmp
inc
hlt
pop
loop
jae
bound
mov
sbb
cmpsl
in
cli
dec
ret
leave
and
pop
jns
adc
movsl
mov
adc
in
mov
sub
and
or
shlb
incb
push
sahf
psubb
dec
ficoml
lock
mov
xchg
push
cs
push
cmp
jbe
test
scas
push
xchg
xor
addr16
leave
push
cmp
jno
sbb
stos
pop
mov
lods
and
fs
enter
push
hlt
cwtl
fbstp
icebp
aaa
and
cwtl
in
ret
push
xor
in
push
icebp
test
scas
out
incb
loope
jg
sbb
add
fwait
sub
or
ljmp
cmp
in
shl
mov
cltd
adc
lcall
movsb
dec
fadds
outsl
jae
movsb
cwtl
daa
sbb
push
loop
pop
cmp
loope
mov
repz
out
mov
das
cmpsb
lret
dec
or
stc
into
rclb
jbe
scas
je
aaa
inc
push
sahf
fsts
pop
push
addr16
inc
in
out
pop
dec
fmull
jg
stos
scas
cs
data16
out
push
outsb
pop
lahf
fwait
inc
scas
addr16
adc
sbb
mov
pop
rorl
mov
movsl
loop
lods
scas
lret
shrl
shll
add
movsl
mov
lea
aad
mov
and
push
mov
cmpsl
stos
scas
push
cltd
jg
push
sub
pop
jmp
test
fnstenv
xor
xor
inc
clc
cltd
mov
mov
xlat
and
push
in
xchg
push
loope
rol
push
cli
mov
add
aaa
dec
sub
vaddsubps
leave
mov
ja
popa
iret
add
inc
adc
ljmp
movnti
and
mov
cmpl
scas
popa
icebp
sbb
push
xor
adc
cli
add
adc
push
push
outsl
and
in
data16
pop
sbb
scas
popf
mov
push
add
test
iret
inc
test
mov
inc
nop
pushl
shl
test
mov
mov
dec
dec
push
mov
or
xor
testb
adc
jmp
mov
clc
das
sub
mov
ja
aad
add
insb
sbb
push
imul
inc
xor
stc
and
inc
or
in
sbb
sub
shlb
mov
xchg
cmp
cmp
jmp
xor
push
add
jns
fs
imul
sbb
mov
out
int
or
stc
push
jo
and
aam
push
sub
call
jne
xor
test
inc
fwait
or
xchg
adc
or
cmp
add
mov
push
jg
xor
mov
xchg
add
js
gs
les
sti
mov
popf
or
push
mov
dec
dec
scas
cwtl
inc
cmp
sbb
into
nop
and
ljmp
shl
loopne
ds
int3
dec
xor
shl
repnz
cltd
inc
fsubrl
lcall
lods
cmpb
int
loope
loopne
push
jle
adc
xchg
mov
cmp
jno
dec
dec
cmp
mov
shrl
and
inc
rol
sbb
sub
jmp
sbb
sub
mov
inc
inc
dec
and
iret
dec
ds
in
pusha
cmp
pop
push
dec
pop
mov
ja
or
call
dec
test
xchg
cmc
sub
hlt
sub
mov
enter
push
or
sub
cmpsb
inc
mov
push
aad
push
inc
sbb
mov
fwait
out
and
xchg
imul
popf
add
add
rol
and
pushf
mov
sub
add
adc
pop
and
dec
jecxz
ja
inc
insl
aaa
dec
jp
cmp
fcmovnbe
xchg
scas
dec
ret
cwtl
xchg
icebp
add
sub
shrb
mov
or
sbb
or
cmpsl
orb
fs
pop
hlt
shll
roll
test
out
cld
cmp
mov
cmp
push
push
mov
repnz
call
minps
mov
mov
adc
jo
push
inc
jbe
jo
pop
push
daa
mov
mov
xchg
sbb
les
lcall
jmp
or
andb
dec
scas
mov
lods
cwtl
jns
add
and
iret
shll
pusha
fs
inc
inc
stos
sub
cmp
lcall
lds
mov
pop
outsb
cmp
cwtl
inc
sbb
lods
fwait
aad
cmp
and
mov
adc
mov
into
cmp
fadd
mov
popl
addr16
sbbl
ja
shll
add
fnsave
mov
in
or
out
adc
out
or
cmpb
xchg
hlt
xchg
sbb
push
fwait
or
mov
mov
mov
xlat
lret
scas
fld
mov
jae
and
dec
fwait
xchg
scas
adc
sbbb
scas
loope
jae
sbb
push
in
out
test
popa
lcall
jno
icebp
xor
xor
jp
lock
into
push
adc
jo
test
inc
scas
xchg
mov
push
mov
aaa
sarb
call
imul
pop
xchg
shrl
cld
into
addr16
das
cmp
inc
jp
cmpb
xchg
cmpsb
loop
jl
in
ret
jbe
mov
popaw
mov
adc
mov
movsl
sbb
adc
orl
jmp
adc
and
mov
and
mov
lods
lea
ja
mov
xchg
dec
mov
jnp
push
or
insl
sub
loop
jbe
ss
jno
inc
xchg
push
nop
mov
fisubrs
jns
clc
outsl
out
dec
lret
ficompl
mov
pop
ret
fabs
iret
inc
sbb
cli
jl
jl
fisttpl
pop
push
lods
imul
or
cltd
xorl
sub
inc
outsl
imul
dec
xchg
lret
sbb
pop
mov
dec
cli
or
test
ret
mul
repnz
int
push
and
inc
jge
and
ret
add
jp
fdivrs
lods
pop
push
popf
loop
popa
cli
mov
aam
fidivrl
lods
lret
clc
test
xchg
xchg
adc
mov
lret
stc
sahf
cmc
enter
jl
cmp
je
push
sbb
imul
jbe
lds
in
fisttpl
das
inc
sti
xchg
mov
xor
dec
lcall
bound
sbb
js
ret
in
sbb
push
aaa
pop
and
cld
sbb
test
push
insl
adc
and
call
jecxz
push
sbb
and
loopne
int
mov
fs
dec
mov
outsl
fstl
aam
shrb
jae
mov
mov
mov
roll
mov
jecxz
iret
bound
lea
mov
lods
jno
push
dec
out
in
jae
xchg
std
adc
dec
subb
push
lods
repnz
imul
fsubrl
sub
outsb
fimull
lcall
cmp
xorl
xchg
fidivs
sahf
dec
push
inc
pop
sbb
aas
xor
pop
and
add
mov
inc
frstor
ret
lods
cmp
push
cmp
jns
les
nop
test
repz
pop
insl
fcoms
mov
push
sub
aaa
push
sahf
je
cmpsl
add
add
adc
test
loopne
jecxz
shll
sti
sbb
jae
dec
cmp
xchg
mov
sub
mov
in
jbe
mov
pop
mov
xor
repnz
scas
lret
fdiv
xchg
dec
mov
cs
or
and
ja
cwtl
stos
pop
test
jmp
push
aad
cwtl
push
xlat
cmpsl
xor
sub
int3
repz
pop
scas
and
mov
or
sbb
rolb
sbb
cmp
mov
int3
nop
lret
shl
jmp
xlat
sub
pop
jmp
or
dec
jg
shrb
int
and
inc
sub
fbstp
test
or
mov
dec
mov
cmpsb
xchg
cli
mov
orl
fsubrl
dec
push
insb
jb
pop
adc
pop
adc
or
add
ljmp
push
data16
sti
or
bound
pop
sti
inc
pop
fistpll
xor
insb
push
scas
test
or
mov
sbb
scas
push
bound
xchg
je
outsl
add
jg,pn
jnp
arpl
in
into
movsb
iret
pop
pop
and
and
in
loop
push
bound
push
cli
fimuls
test
bound
xchg
push
sbb
addb
or
sub
mov
cmpsl
or
daa
sub
into
dec
imul
mov
jb
xlat
leave
jae
in
enter
aam
aas
jecxz
xchg
lahf
imul
out
pop
insb
mov
movsl
mov
jp
push
stos
movsl
stos
imul
loopne
add
jp
das
icebp
fcomps
add
sub
in
add
sahf
jmp
xchg
lods
jns
shll
pop
mov
or
jge
outsl
rcr
test
inc
je
xchg
loop
push
adc
or
enter
inc
dec
jmp
or
inc
outsb
cmp
test
sbb
dec
jmp
js
fcoms
adc
adc
das
lret
addr16
inc
xor
push
movb
sbb
arpl
and
out
mov
shll
ss
inc
cltd
or
mov
cmp
and
jb
mov
add
xor
int3
cmpsl
dec
push
or
fldl
push
fdivs
mov
ljmp
jl
dec
addr16
xlat
sbb
loope
sbb
lret
sub
pop
ss
les
mull
inc
movsb
hlt
arpl
jae
cmpsb
pop
jge
sahf
test
or
pop
iret
std
leave
stos
data16
jle
in
testb
and
push
data16
sahf
and
out
popa
je
pop
dec
xchg
add
imul
es
div
divb
fldl
push
push
rcll
sbb
je
jnp
movsl
dec
je
hlt
jbe
jne
push
sbb
cld
cmp
les
lcall
cmc
push
popf
adc
lds
cwtl
leave
add
ljmp
loope
stos
jb
lcall
and
ficoml
imul
xchg
sahf
push
mov
rolb
sbb
pop
jbe
lret
outsl
stos
loop
cmp
jg
cmc
push
sbb
loopne
mov
push
arpl
insl
sahf
pusha
xchg
push
repz
inc
dec
jecxz
mov
or
adc
sbb
sub
xchg
pxor
icebp
imul
jg
or
pusha
out
lds
mov
adc
xor
jnp
ret
jo
call
inc
mov
mov
mov
ljmp
mov
cmp
lret
or
mov
repnz
and
scas
add
mov
lahf
je
sbb
out
cmpsb
cmp
test
dec
mov
lret
lsl
jle
lock
jne
sahf
inc
xor
jge
push
mov
and
test
outsb
daa
je
sbbb
addl
les
daa
aad
outsb
pop
add
popf
inc
jmp
push
mov
movsb
enter
xchg
insb
and
test
cmp
loope
adc
subl
mov
je
push
repnz
sbb
sub
xor
mov
popa
or
adc
mov
push
xor
jae
out
push
or
adc
xchg
sarb
cmc
xchg
in
pop
repz
and
pushf
pop
xchg
aad
sub
loopne
xchg
in
mov
cmc
jl
loopne
cmc
cmp
filds
aam
jg
loopne
sbb
rcll
lcall
out
mov
fs
sub
repnz
dec
notl
xchg
xor
lahf
cli
adc
jne
shlb
arpl
xor
fs
and
and
push
fisttpll
clc
loopne
add
mov
loope
les
addr16
rolb
ds
cld
jb
test
push
sahf
mov
push
xchg
ret
mov
cmp
lret
or
add
jge
lcall
ret
scas
cmp
mov
pop
dec
jecxz
out
and
js
cmp
fdivl
xchg
lahf
enter
mov
xor
in
pop
xchg
out
or
or
ss
daa
dec
sarl
mov
aad
repz
pop
fstpl
pop
iret
jl
sbb
add
adc
sbbb
or
cs
arpl
or
add
jns
lods
inc
inc
std
and
repz
push
idiv
popa
mov
mov
repnz
sub
sbb
insb
jmp
push
mov
and
add
clc
xchg
mov
add
mov
arpl
add
in
ret
xchg
cmpsl
cmp
mov
xor
sahf
mov
xchg
push
cmpsl
popf
jne
enter
lea
xchg
mov
mov
mov
mov
cmpsl
test
mov
inc
and
dec
test
rcl
mov
push
int
mov
mov
fs
sub
into
repnz
jbe
cs
lods
lahf
jg
or
stos
xchg
inc
mov
fwait
cld
and
test
xchg
jl
out
and
and
sbb
ljmp
bound
mov
cmp
ds
sti
pop
pop
in
adc
xor
les
mov
fwait
dec
jg
jb
xor
sub
test
cmp
out
xchg
mov
pop
lock
add
lret
inc
sahf
fcomps
mov
or
cmp
ja
sub
cmp
lods
data16
sbb
mov
adc
into
testl
cwtl
dec
je
roll
les
outsl
cmp
mov
mov
sub
out
cmpl
mov
and
std
xchg
xchg
cmpsb
insb
sub
insb
push
imul
out
xlat
or
xchg
imul
sub
ja
sbb
das
out
push
push
enter
and
cld
aad
lock
repnz
fistpl
adc
call
mov
decl
in
adc
sbb
test
hlt
movb
stos
in
mov
push
jo
sarl
and
xchg
xchg
insl
sbb
mov
out
mov
arpl
sbb
cmpl
and
pop
repnz
xor
dec
aaa
dec
lcall
cmp
add
mov
fwait
push
add
push
addr16
mov
int3
aas
ret
cmp
shrb
loope
jg
lret
fwait
jmp
test
xor
ret
adc
ficoml
mov
sub
or
sbb
mov
mov
fldcw
and
or
dec
jne
imul
jno
scas
sbb
jecxz
addr16
sub
dec
flds
ss
movsb
pop
aas
shll
adc
pop
sub
push
sbb
push
jge
sbb
xor
dec
in
insl
jbe
jnp
mov
testb
dec
xchg
test
lea
push
ds
cmp
loop
ja
mov
push
or
rcrl
fstpt
cld
inc
push
pop
mov
xchg
mov
or
mov
dec
pop
test
ds
cli
xchg
xchg
lea
and
mov
flds
movsl
add
sub
mov
cmp
sarb
js
or
or
inc
aad
gs
mov
and
stc
mov
inc
ficoml
cld
or
out
clc
pop
jge
xchg
por
sub
xor
aad
cmp
pop
cmp
adc
out
repz
inc
jg
popa
int
repz
std
pop
mov
mov
lret
shlb
sbb
idivl
mov
mov
or
cltd
and
out
ret
mov
addb
jno
je
sub
dec
push
cmp
pusha
push
dec
sbb
stos
or
pop
out
xor
cltd
jnp
hlt
fbstp
int3
mov
ds
inc
xlat
mov
in
pop
cltd
pop
mov
pop
shll
push
cld
test
jg
add
es
mov
jo
in
pop
mov
sbb
xorb
in
dec
adc
fimuls
inc
pop
stos
xchg
loopne
jno
hlt
cmp
cmpsb
mov
js
push
adc
mov
cmc
call
shl
pmaddwd
mov
iret
fcmove
daa
popf
sub
fisubrs
jge
xchg
sahf
pushf
or
scas
loopne
dec
cltd
mov
xor
fstps
lahf
and
push
into
stos
popf
out
mov
xor
int3
sbbl
scas
dec
push
xchg
or
mov
lea
into
lea
adcl
ds
mov
add
sahf
das
call
jecxz
ja
xor
jle
jo
roll
xor
das
testl
fs
pop
out
in
ret
sub
push
xchg
int3
adc
mov
mov
add
mov
cltd
lret
pop
and
push
in
pusha
cli
dec
int
mov
add
mov
push
ficoml
lcall
lods
sarb
jbe
inc
cwtl
push
sub
xchg
imulb
fcmovbe
inc
or
cmp
mov
call
cmp
add
cmp
arpl
lds
push
sarl
cmp
fdivrl
cmp
pop
mov
adc
cmp
imul
push
imul
clc
xchg
into
mov
add
and
callw
jb
scas
inc
scas
test
sbb
adc
lahf
fwait
out
push
mov
aaa
jo
push
mov
imul
mov
ret
cmpsl
int
pop
dec
cmpsb
fs
fstpt
inc
push
sbb
jecxz
dec
test
test
mov
lock
stc
xor
mov
nop
pop
ljmp
inc
inc
xchg
insl
push
imul
lods
inc
mulb
mov
mov
dec
inc
jae
pop
mov
jg
shlb
and
push
jmp
bound
das
les
cmp
shl
test
arpl
out
rorb
rcl
repnz
fwait
mov
push
fwait
xor
in
dec
ds
sub
add
clc
push
xchg
mov
jle
push
xchg
ss
mov
adc
xor
mov
imul
sbb
mov
test
jns
pop
lods
addr16
pop
test
daa
stos
jmp
add
xchg
test
or
add
pusha
mov
cmpsl
xor
pop
test
mov
cmp
les
add
dec
mov
pop
jno
cltd
cvtps2pd
push
push
lock
sub
repnz
cmc
in
adc
test
push
std
pop
sub
and
cmp
mov
je
fs
addr16
mov
test
dec
loopne
sbb
inc
mov
jmp
add
fisttpl
es
je
fldcw
out
inc
nop
adc
gs
clc
call
add
scas
out
sarb
push
dec
imul
jmp
mov
test
jmp
adc
adc
push
cmc
xor
sbb
ficoms
data16
mov
cmc
int3
jbe
push
and
sub
inc
cmp
hlt
les
movsl
push
sub
pushl
pop
xor
jae
loopne
inc
dec
shl
je
nop
scas
cmpsl
pusha
ret
testb
jns
inc
xor
adc
sahf
inc
inc
add
ret
pushl
lahf
or
dec
mov
outsl
lea
pop
fnstsw
mov
js
or
dec
sbb
imul
jae
into
popf
inc
add
pop
sub
jg
ja
lods
movsb
lahf
pop
pop
lods
jg
stos
jmp
or
int3
jle
jae
sub
aas
pop
arpl
inc
dec
xchg
mov
add
test
fnstsw
fbld
sub
xor
xor
js
in
sbb
pop
outsl
cld
cmp
or
movsb
lahf
fadds
lret
cmp
roll
lods
loop
mov
cs
lock
rcll
lret
xor
sub
mov
mov
dec
push
push
inc
out
cwtl
and
inc
or
mov
xlat
mov
push
stc
cli
cmp
push
jecxz
mov
cmp
outsl
dec
add
lret
pop
mov
jo
sub
push
add
outsb
cmpsb
mov
cmpsl
push
in
inc
mov
xchg
ja
pop
neg
std
stos
adc
test
mov
out
nop
cmpsl
sti
mov
adc
and
mov
sbb
mov
xor
mov
adc
dec
adc
out
outsl
call
and
mov
clc
pushf
das
mov
xor
xchg
sbb
leave
xchg
insb
add
pop
fcomps
aas
stc
lret
imul
mov
fisubl
pop
test
jne
std
sub
xchg
mov
cmpl
pop
or
adc
sub
jne
xor
jns
punpcklwd
clc
jne
mov
sahf
cmc
cmpsl
mov
pop
cmp
stos
into
aas
jae
add
jo
fs
call
push
add
imul
scas
mov
sbb
xchg
out
dec
daa
xchg
mov
loope
daa
fld
mov
pop
bound
iret
repz
dec
jmp
xor
iret
into
imul
xor
mov
dec
xchg
pop
mov
lea
mov
scas
loope
push
mov
dec
jo
out
mov
lods
adc
pop
pop
xchg
push
push
arpl
adc
jb
aad
sbb
stc
rcrl
xor
cmc
jb
dec
idivl
in
or
mov
and
mov
jl
mov
mull
cmc
insb
pop
repnz
inc
jbe
cwtl
jg
pop
fiaddl
pop
dec
and
mov
adc
add
clc
div
pop
cmp
pop
not
fwait
jae
adc
jae
mov
push
popa
insb
imul
sub
sbbl
cmpsb
push
xor
fs
iret
push
out
mov
nop
es
movsl
in
xchg
repz
ss
jge
jmp
cmc
mov
shr
and
or
pop
popa
adc
jno
dec
inc
jp
int
ds
or
xor
and
cs
ret
adc
clc
sbb
push
pusha
dec
xor
xor
pushf
out
adc
scas
mov
xor
arpl
stc
mov
cmp
icebp
into
fmulp
push
fisttpl
inc
rorl
subl
pop
sbb
and
push
hlt
shrb
mov
dec
mov
repnz
inc
repnz
test
pop
into
mov
ja
jne
xor
jmp
test
movsb
push
push
and
dec
movsb
dec
lds
out
mov
mov
movl
insl
pop
out
cltd
xchg
mov
and
scas
test
jge
outsl
std
inc
pop
jno,pn
loop
decl
fwait
xor
mov
faddp
pop
call
das
and
pop
xchg
mov
mov
imul
mov
into
push
fiadds
ss
cmp
sub
sub
ds
push
pop
xor
movsl
call
pop
ficomps
xchg
jge
cmpsb
bnd
xchg
mov
mov
fcmovnu
fsubl
push
pop
sbb
aaa
mov
imul
inc
and
jns
adc
adc
xor
addr16
mov
push
jecxz
pop
lret
add
scas
stc
jb
in
ret
ret
or
lcall
out
out
and
adc
sbb
dec
enter
mov
out
mov
jmp
mov
into
shlb
int
and
jno
decb
jne
xchg
push
mov
loop
test
sub
jns
jb
jmp
cmc
dec
imul
stos
jmp
sbb
dec
mov
daa
push
adc
lea
mulb
jbe
mov
or
jne
fsubl
and
fwait
sbb
jb
or
push
hlt
outsb
jno
mov
pop
jle
pop
cmp
movsb
fbld
push
cmp
js
xchg
push
inc
dec
cmp
sub
loop
and
push
dec
sbb
test
xor
popf
mov
cwtl
aas
fnstenv
dec
jnp
pop
mov
ja
int
sbb
mov
adc
xchg
sub
imul
cli
push
icebp
sbb
inc
in
sub
fsubp
push
jne
sbb
pop
pop
sahf
sub
push
stc
push
or
imul
jp
clc
out
push
in
dec
lahf
sar
rorl
push
mov
add
or
lea
adc
addb
or
sbb
repnz
inc
daa
lret
cmp
inc
xor
notb
adc
and
mov
jno
pop
cld
arpl
shrl
cmp
rorb
dec
cltd
lcall
repz
xor
sbb
push
push
stc
test
sub
dec
lds
lcall
mov
add
aad
arpl
xor
repz
dec
pop
sub
mov
mov
movsl
aad
mov
in
scas
rorb
add
push
xor
xchg
insb
sbbb
movb
mov
je
int3
push
das
cmp
lret
or
pop
enter
mov
mov
pushf
shrl
mov
in
or
mov
xchg
mov
add
mov
xor
mov
shrb
cmp
mov
inc
je
dec
leave
push
pop
sub
int3
dec
lret
dec
call
sbb
mov
push
dec
test
push
aaa
cmp
mov
ljmp
int
inc
mov
inc
xchg
add
cli
pop
outsb
mov
aaa
dec
sbb
push
inc
push
lods
fidivrs
call
lds
mov
fmuls
xor
cld
mov
outsb
mov
pusha
fnstcw
dec
popl
mov
push
mov
leave
sub
test
add
addr16
cmp
repz
out
xor
sub
and
divb
cwtl
fstps
loopne
dec
int
subb
lahf
or
pushf
mov
stos
lcall
adc
or
push
xor
jle
mov
repnz
int
lds
push
cmpl
in
pop
inc
inc
jp
xchg
mov
pushw
push
orb
cmc
xor
jae
pop
push
cmp
mov
lret
lret
xchg
in
mov
mov
fwait
mov
dec
ret
xor
jno
cmp
push
mov
inc
push
jle
sbb
popf
sti
pop
nop
arpl
inc
sbb
fisttpll
loopne
xchg
or
jns
lock
lock
xlat
test
push
cltd
fcoml
ficoml
pop
sti
jne
mov
das
fisttpl
pop
mov
inc
out
rorl
in
inc
shrb
mov
fstl
fwait
and
sti
aam
mov
imul
cltd
sub
cmp
push
int
mov
insl
add
pop
and
ficomps
in
mov
sub
and
scas
cmp
adc
arpl
jg
push
dec
movsl
push
in
mov
pop
pop
popa
call
inc
std
mov
pop
adc
xchg
dec
push
cmp
fiadds
add
fdivs
fisubrl
push
data16
push
jbe
ret
add
mov
inc
out
push
xchg
pop
shr
orb
mov
xor
inc
jecxz
lds
xchg
sbbb
and
data16
inc
psraw
arpl
rol
lret
int3
mov
and
decb
out
pop
add
sub
imul
js
pusha
mov
int3
adc
dec
mov
dec
sub
xchg
sti
sarb
add
lret
dec
sub
stc
sub
push
in
inc
push
sub
repnz
data16
imul
or
mov
xchg
ror
inc
arpl
add
outsl
adc
cmp
test
es
cs
dec
adc
inc
test
xchg
pop
jae
xchg
cmpsl
stos
in
dec
insl
mov
mov
jns
call
call
xchg
lods
insb
add
sub
push
hlt
jae
sti
shll
jmp
jb
ficompl
lds
lahf
pop
daa
test
push
xchg
test
mov
xchg
mov
cmp
rep
aam
pop
adc
je
icebp
mov
mov
fmuls
add
cmp
subl
cmp
int
xlat
ljmp
movsl
push
jge
add
ss
daa
inc
jnp
jbe
cmp
out
xchg
jae
fistps
test
dec
lea
xor
inc
jge
pop
cli
cs
inc
jecxz
notl
je
out
sbb
or
std
scas
or
subb
push
das
outsl
in
sub
rcrl
sub
aaa
outsb
test
es
cmp
pop
pop
je
cmpl
jle
pop
jae
pop
add
xor
pop
leave
push
pop
sub
mov
outsb
into
cmp
sahf
hlt
xchg
add
enter
or
repz
hlt
notl
inc
pop
cli
inc
insb
mov
and
sahf
xor
stos
sbb
les
dec
gs
lea
in
fmull
dec
pushf
dec
imul
pop
sub
xchg
daa
rcl
dec
out
jnp
repnz
pop
xor
imul
stos
subl
pushf
dec
out
push
movsl
xor
jp
lods
pop
dec
in
insl
in
adc
inc
pop
das
dec
sbb
xchg
in
mov
dec
adc
xchg
and
gs
decb
jp
sub
push
or
sub
or
dec
xor
mov
dec
xchg
cmova
xor
jge
movsb
loopne
outsl
repnz
je
xchg
fidivs
inc
fbld
fidivrl
jnp
adc
push
xchg
or
mov
subb
pop
or
dec
mov
xchg
mov
cmp
pop
sahf
adc
iret
cltd
mov
sti
or
das
cmpsb
stos
adc
jp
inc
xchg
jnp
mov
daa
xor
and
in
loopne
mov
push
push
cld
cs
scas
xchg
push
mov
movsl
mov
push
inc
lods
push
scas
adc
aas
test
out
push
mov
fdivrl
and
pop
jmp
insb
fistpll
jne
xor
in
pop
fisttps
pop
or
push
or
cmp
fildll
add
nop
push
xor
and
jmp
xchg
jnp
lcall
cmp
adcb
shlb
scas
jno
or
dec
ljmp
mov
rclb
sbb
out
push
fmuls
sarb
push
or
inc
cmp
jns
inc
xchg
rcl
jne
les
xchg
test
arpl
les
mov
push
pop
dec
jo
jecxz
mov
ljmp
popf
pop
repz
adcl
inc
dec
movsl
loopne
mov
xchg
fisubrl
and
mov
fs
leave
sbb
in
mov
adc
fists
repnz
or
scas
insb
ss
lret
out
and
arpl
cwtl
rcrb
mov
cmp
scas
imul
and
pop
ret
adc
dec
jnp
in
lods
mov
inc
pop
push
mov
and
repnz
pop
das
into
negb
ja
bound
fnsave
inc
adc
jne
pop
mov
sub
adc
je
lock
sbb
outsb
stc
fs
add
repz
sahf
jmp
call
jbe
in
ja
add
cmp
pop
ret
ss
push
sbb
push
push
xchg
popa
nop
push
push
push
imul
sti
mov
xchg
jle
mov
inc
mov
adc
jbe
jae
dec
js
sbb
incl
or
aam
cmpsb
test
daa
ljmp
sti
mov
mov
or
xor
movsl
sub
iret
cmc
adc
add
lcall
mov
hlt
rol
dec
loop
dec
pop
mov
test
clc
stc
scas
das
pusha
call
fwait
ds
loopne
or
daa
lcall
mov
dec
or
cmp
xchg
dec
add
adc
mov
dec
push
aad
lods
data16
sub
int
jae
loope
and
aam
mov
cli
dec
push
pop
push
bound
js
int
ja
mov
popa
pop
addl
outsl
add
inc
sbb
xor
push
inc
mov
push
outsl
adc
mov
es
in
in
jge
mov
mov
cmpsl
xchg
mov
inc
es
incb
adc
addb
mov
testb
pop
mov
add
cmp
mov
lret
cmp
push
sub
jns
movl
xchg
dec
xchg
rorb
outsl
xor
push
int3
dec
xor
pop
test
testb
mov
subl
arpl
sub
mov
mov
sub
ret
xchg
pop
orl
fisttpll
cwtl
popa
dec
mov
xor
inc
sub
outsl
daa
xchg
xchg
std
adc
mov
jge
scas
inc
clc
ds
cmpsl
pop
inc
xchg
aas
adc
pop
stos
inc
jle
push
push
xchg
or
aas
xor
cmpsb
mov
aaa
mov
push
xor
mov
and
stc
adc
cmp
nop
ds
mov
lahf
out
mov
data16
xor
jno
cmc
dec
adc
in
popf
stos
lods
cli
cltd
mov
jnp
jle
cmp
inc
in
cmp
movsb
in
jmp
les
imul
jmp
adc
std
jmp
int
es
adc
and
xor
sarl
jmp
push
lahf
cmpsb
adc
ljmp
in
inc
test
add
lret
adc
and
push
dec
test
lods
dec
push
adc
cmpl
xchg
push
movsl
shrl
pop
lea
imul
hlt
xor
pop
sbb
dec
lcall
fidivrs
les
jmp
ss
imul
mov
je
jle
stc
testb
shrl
ja
mov
sub
lods
aam
in
fsubl
add
call
std
in
push
hlt
pop
dec
out
cmp
sub
and
dec
std
out
push
mov
sbb
popf
cs
cmpl
mov
add
pop
pusha
sbbl
ds
ja
inc
cmpsl
movsb
popf
loope
out
sbb
adc
inc
rcrb
lret
mov
jg
arpl
loopne
ja
lret
dec
scas
loope
dec
insl
pop
dec
sbb
sub
lret
rcrl
wrmsr
dec
push
jne
repz
or
jmp
jl
fnsave
mov
mov
in
mov
aas
movsl
std
xlat
mov
lods
cs
inc
sti
je
out
sbb
dec
stos
mov
jle
xchg
inc
push
mov
cmp
hlt
sbb
mov
out
jl
imul
rclb
sti
das
sub
fcmovnu
adc
sbb
xchg
cld
loope
push
shlb
sbb
test
push
in
mov
jne
and
pop
sub
and
pop
out
cli
mov
mov
xchg
cmc
jp
les
ljmp
ds
sahf
dec
movb
dec
sbb
cmp
jecxz
int
lahf
xchg
add
push
stc
inc
enter
jmpw
pusha
fbld
or
icebp
jg
hlt
xor
imul
and
test
dec
or
arpl
inc
test
pop
jae
test
or
mov
loop
movsb
fimuls
jae
inc
pusha
add
sbb
push
rcl
adc
ret
leave
cli
mov
cmpsb
lock
or
jl
jmp
mov
jae
and
inc
sbb
mov
std
std
push
jno
nop
xchg
or
imul
mov
les
out
jo
jb
mov
ret
rcl
mov
dec
dec
add
insb
mov
repnz
ret
rep
push
das
shrb
inc
sbb
dec
adc
ret
faddp
sub
imul
loope
cmpxchg
enter
dec
add
stos
div
xchg
gs
mov
adc
sub
jl
mov
jno
xchg
jmp
clc
inc
iret
push
adc
cli
mov
stos
dec
inc
scas
call
mov
xchg
fwait
stc
mov
push
add
xor
pop
das
test
xchg
movsl
notw
lahf
inc
xchg
loop
or
xchg
dec
sahf
inc
jl
roll
aam
lods
push
mov
jmp
jns
cwtl
iret
xchg
test
dec
cmpsb
les
lea
repz
ljmp
push
jge
sub
fucomi
mov
inc
lcall
bound
sti
popa
mov
inc
mov
push
shr
adc
add
pop
push
ss
inc
dec
inc
mov
add
jb
hlt
mov
dec
imul
adc
dec
or
or
sahf
mov
sbb
fs
or
xor
push
jnp
je
pop
popa
jg
testl
xchg
lahf
or
les
adcl
cmpsb
add
adc
cmp
pop
decl
mov
movsl
sub
push
and
xor
xchg
mov
js
sbb
cmp
and
out
push
mov
int3
lods
insb
cltd
pop
cli
inc
xchg
xchg
adc
ds
stc
add
arpl
clc
addr16
imulb
lock
fidivrl
data16
frstor
aam
jnp
add
repnz
add
xchg
mov
aad
xor
arpl
fsubr
mov
xor
int3
hlt
push
shlb
jmp
mov
sbb
repnz
or
cmpsb
mov
ret
sbb
sbb
pop
or
ret
adc
inc
dec
out
sti
sbb
fisubs
xor
testl
push
test
push
inc
incb
hlt
dec
into
cltd
pop
repz
shll
mov
add
mov
cmc
xchg
or
adc
pop
mov
jns
cmp
inc
and
ficomps
cmp
or
outsl
mov
insl
mov
js
clc
dec
repnz
xchg
cmp
ficoms
xchg
pushf
fxch
test
cmp
movsl
sub
adc
pop
orb
pop
mov
mov
push
aam
movsl
mov
jae
sbb
dec
cmp
in
or
push
pop
dec
ja
es
mov
lret
sarb
fists
fwait
ret
mov
mov
js
inc
out
movsb
dec
psrad
aas
xchg
adc
or
jnp
pushf
mov
repz
stc
cli
repnz
dec
sbb
push
sub
jp
pop
int
iret
push
sub
pop
icebp
cmpsl
popa
ret
dec
cmp
arpl
mov
pushf
fmuls
cmp
jne
loope
cmp
pop
jo
mov
mov
push
popf
ret
push
sub
add
or
icebp
clc
xor
sub
cmpsl
mov
popf
cmpsl
inc
pop
pop
pop
inc
push
xchg
out
push
adcb
mov
and
inc
sbb
mov
lock
mov
adc
or
xchg
fimull
mov
std
cmpsb
stc
xor
in
jbe
jns
leave
jecxz
out
jmp
scas
and
pop
or
pusha
aaa
push
jno
mov
stos
or
scas
lret
ret
sbb
xchg
int3
or
cltd
jo
ds
mov
mov
faddl
xor
jmp
sarb
test
mov
xchg
shrb
cmp
sahf
mov
in
out
or
push
xchg
arpl
inc
lods
iret
iret
or
push
pop
cli
pop
loop
lahf
mov
jge
cmpsl
adc
sbb
test
roll
sbb
cs
gs
std
mov
mov
dec
jle
popa
add
xchg
push
aam
mov
mov
jl
repz
pop
les
addb
sbb
ds
mov
fxch
popa
jbe
jae
in
sbb
adc
pop
cmp
push
ret
push
jge
cmc
push
orl
out
stos
scas
cmp
jecxz
inc
sbb
sub
mov
xor
sub
add
xor
dec
lds
adc
pop
mov
push
cmp
xchg
mov
dec
xor
movb
pop
mov
dec
cmc
dec
sbb
fadds
syscall
jg
mov
gs
or
lahf
inc
jmp
and
scas
push
clc
jnp
xchg
sbb
jo
xchg
push
fs
jae
ljmp
adc
push
mov
xchg
inc
xchg
or
dec
shl
jbe
pop
jmp
mov
ds
dec
loope
sbb
fldt
out
push
adc
lods
das
and
mov
mov
dec
pushf
stos
xchg
loop
movb
jns
mov
in
push
inc
jae
dec
dec
lds
add
lea
add
sbb
std
mov
aam
push
or
aaa
mov
jp
push
shr
jbe
jnp
lock
sahf
inc
cmpsl
or
int
adc
sbb
out
iret
sti
sahf
ss
push
sbb
mov
sbb
adc
or
outsl
mov
adc
mov
pop
pop
push
dec
data16
sbb
repnz
and
ror
shrl
mov
js
mov
dec
mov
jecxz
fisubrs
xorl
dec
int
testb
out
rcr
cmp
jne
mov
cmpsl
inc
cmpl
push
sbb
lcall
test
loope
arpl
test
out
jp
or
mov
les
int3
bsf
mov
aaa
outsl
dec
cmp
imul
dec
je
lret
push
fbld
outsb
push
or
pop
jl
in
stos
mov
xchg
xor
sub
sub
rcr
inc
imul
push
movsl
ja
int
pop
push
fildl
in
mov
xchg
dec
push
fsubrs
or
fimuls
xchg
pop
fisubrs
scas
dec
mov
es
gs
adc
sbb
lock
adc
andl
scas
in
jecxz
inc
sti
cmc
popf
es
and
mov
mov
loopne
or
sbb
ror
pop
push
xchg
es
pop
test
jle
aam
fisttpll
xor
and
lcall
sahf
int
das
fldt
and
fdivrp
fs
mov
xchg
xor
imul
push
std
lock
or
mov
lock
gs
enter
fidivs
int3
lods
dec
or
pop
test
sub
mov
xchg
mov
jne
xor
cmp
dec
pop
jl
xor
sti
loop
jp
mov
test
ljmp
out
dec
jmp
aam
lahf
js
cmpsl
cmp
push
add
shl
mov
mov
sbb
ja
stos
xorl
mov
pop
jle
std
inc
mov
test
imul
outsl
ja
orl
out
aaa
aaa
dec
sub
adc
fldln2
mov
mov
movb
cmpl
mov
int3
push
cmp
test
sbb
cvttps2pi
test
test
fcmovnb
cs
pop
inc
lcall
lock
hlt
fcmovu
jg,pt
and
push
push
cmp
sub
data16
scas
mov
dec
loopne
xor
int
pushf
mov
ljmp
ficompl
cwtl
push
xor
and
sbb
add
pop
adc
jo
or
shll
in
sub
jmp
push
pop
sub
push
nop
pop
xchg
in
inc
negb
push
cmpsl
iret
mov
daa
scas
sub
push
movsb
in
adc
movsb
addr16
add
bound
push
bound
sbb
dec
call
xlat
mov
xchg
xchg
iret
push
adc
sub
lds
das
movsl
add
jnp
dec
es
and
testl
push
or
ja
add
aad
in
test
mov
loop
pop
sub
dec
jo
push
sub
hlt
das
xchg
cld
jne
adc
gs
and
mov
push
pop
jmp
loope
pop
rolb
into
jmp
cmp
and
sub
rep
xchg
or
pop
sbb
jg
cmpl
xchg
or
sbb
repz
out
repnz
jmp
cmp
imulb
jb
sbb
push
pop
cmp
dec
dec
out
xchg
js
lds
rclb
nop
or
cwtl
test
lahf
sbb
js
or
or
outsl
cmp
push
in
fistpll
sti
or
dec
cmp
cmc
lods
hlt
add
push
out
iret
ljmp
cmp
leave
test
stc
xor
dec
test
ret
pop
fchs
cmpsl
xchg
mov
js
mov
insb
lods
dec
cmp
mov
insl
mov
addr16
push
mov
fsubs
jp
add
jge
and
pop
cmpsb
add
sub
xlat
icebp
jb
sub
insl
div
push
push
adc
fcompl
fscale
rcrl
rclb
insl
cmpsl
push
jmp
mov
mov
testl
orl
std
or
and
test
data16
cmpsb
insl
adc
loopne
out
lock
mov
subl
xchg
cli
jmp
fmull
adc
sub
jo
aas
in
addr16
dec
jo
mov
dec
and
js
nop
push
xchg
outsl
pop
ret
add
pusha
or
xlat
fs
lods
nop
cmp
mov
xchg
pop
lods
mov
stc
pop
dec
or
fists
mov
mov
sbb
aas
adc
sti
mov
sub
jg
xchg
or
push
bound
dec
in
rorb
fs
clc
push
xchg
aad
sbb
leave
pop
les
testb
in
push
xor
scas
aas
scas
das
imul
and
pop
imulb
pop
sarl
jmp
sub
nop
push
mov
fprem1
xor
mov
push
daa
push
mov
mov
mov
arpl
fs
clc
lret
jae
dec
gs
ret
rorb
jns
mov
jo
js
mov
dec
daa
add
rorl
ret
push
add
shl
lock
loope
jmp
lret
add
mov
push
mov
and
mov
test
xchg
mov
pushf
loope
mov
lret
mov
lret
out
lcall
mov
gs
pop
js
es
mov
xchg
mov
add
movsb
push
sti
bound
roll
cmp
jmp
mov
jg
inc
pop
jmp
mov
xor
or
xor
lret
jecxz
pop
sub
push
idiv
sub
ret
mov
sbb
pop
iret
in
insl
stc
jo
xor
repnz
cmp
scas
jb
inc
lea
and
jno
sbb
call
xor
outsl
enter
lods
or
xchg
popa
and
int
pop
rorl
mov
xchg
add
mov
addr16
or
push
pop
cmp
mov
cmpsb
xor
lret
xor
add
test
pop
fistps
inc
icebp
icebp
jge
ret
and
out
jecxz
mov
in
inc
mov
xor
jo
adc
xchg
inc
jbe
sarl
rorb
mov
lret
popa
xor
mov
xchg
add
sti
out
mov
xchg
add
gs
sbb
jle
sbb
xlat
int
dec
loope
rclb
jmp
sbb
push
in
dec
jp
jns
mov
int
lcall
push
stos
mov
popa
add
add
push
mov
push
cmp
lock
xor
jns
inc
sbb
fnsave
push
in
dec
mull
stc
lods
or
dec
dec
rolb
pop
jmp
adc
cltd
xor
cmovp
lcall
xchg
sub
jo
or
mov
arpl
pop
adc
mov
xor
stc
rcrl
js
sbb
and
pop
cmp
daa
gs
and
or
out
ds
and
xor
es
rclb
add
push
add
les
dec
jl
or
pushf
jno
cmc
gs
add
dec
fimuls
hlt
je
test
push
das
xchg
jecxz
fwait
sub
mov
inc
jmp
loope
lcall
mov
xor
jne
fsts
adc
cltd
add
in
insb
push
cmc
pushf
je
pop
mov
sbbb
inc
dec
cmp
mov
in
sbb
int
and
in
mov
fists
sub
jns
std
insb
and
adc
push
sahf
je
sub
outsl
jmp
fisubl
adc
insb
call
push
sbb
jae
fcoml
mov
lods
dec
cmp
xor
ret
sarl
jp
cld
sbb
out
inc
testb
adc
push
fdiv
push
dec
sub
shlb
dec
mov
lret
mov
sub
sarl
stc
insb
je
call
std
gs
or
and
mov
mov
sbb
insl
aaa
jmp
xchg
mov
ja
gs
cmp
rcrb
fidivrl
test
sbb
pop
pop
inc
adc
mov
cmp
add
pop
mov
mov
fdivp
aaa
cltd
xchg
rcll
mov
pop
sbb
hlt
push
test
jbe
dec
cs
or
or
mov
ja
push
call
and
outsl
test
movsl
lahf
sub
aas
ja
xchg
in
daa
movb
es
inc
out
cwtl
adc
sbb
cltd
clc
je
fcompl
adc
jge
jb,pt
push
addr16
jg
xchg
add
lret
add
jo
test
stos
push
cmp
mov
push
push
xchg
adc
in
lcall
les
aas
movsl
gs
sti
pop
call
lods
movsb
fisubrs
movsb
or
mov
jge
movsl
pop
in
push
cmc
add
clc
xchg
repnz
xor
jle
in
mov
xchg
movsl
add
les
orb
jmp
pop
mov
addr16
popf
adc
mov
out
dec
cmpsl
jb
push
xor
jo
xchg
aam
push
mov
cmp
inc
sub
imul
jb
push
push
jbe
adc
fsts
or
push
test
inc
in
lahf
sub
jmp
sarl
jnp
sub
xchg
push
popf
pop
push
sbb
sbb
iret
mov
mov
out
fldcw
mov
in
dec
sarl
pop
push
leave
add
sub
popf
nop
sub
pop
ficompl
cmp
imul
dec
ljmp
out
cmc
call
ja
xlat
loope
mov
lods
rcrb
add
xor
hlt
or
mov
out
popf
mov
test
or
mov
pop
into
pop
lds
sti
cmp
push
xchg
sti
leave
test
push
addr16
cmp
or
pop
mov
cld
rclb
sarl
mov
imul
loop
in
sbb
jbe
loope
jb
add
mov
xchg
aam
xchg
rolb
pop
jge
add
mov
movb
cmp
out
pop
inc
xchg
repnz
xchg
and
mov
aas
mov
and
icebp
pop
stos
xor
mov
adc
cmp
adc
add
add
sbbl
aam
fdivrs
std
xor
cmp
pop
movsl
js
adcl
cmp
mov
mov
imul
lret
adc
pop
jl
icebp
xor
mov
or
pop
mov
adc
pop
addr16
je
xchg
inc
sbb
outsl
mov
std
lods
pop
xchg
pop
lret
hlt
pop
jmp
xor
mov
test
dec
loopne
scas
pop
mov
jecxz
daa
push
stos
add
mov
mov
push
dec
and
xor
aam
insb
orb
push
int
fisubrs
outsb
sbb
dec
leavew
sbb
push
out
sub
mov
les
jo
push
ret
xlat
xchg
fsubs
adc
fdivrs
lcall
add
stc
xorl
repnz
mov
jp
cmpsl
rcll
add
pop
adc
cmpsl
stos
mov
clc
out
rcrl
in
jo
adc
jmp
jl
stos
nop
or
adc
push
push
out
jns
dec
ds
mov
cs
test
lahf
push
in
out
ja
push
and
js
push
jle
adc
out
or
cmp
add
mov
shll
js
jmp
in
xchg
stc
mov
and
xchg
lahf
mov
jecxz
add
lods
cmc
loope
jmp
and
pop
popl
jmp
pop
fsubl
mov
fistps
or
and
fidivl
cmp
mov
sbb
sub
fldt
iret
sbb
xchg
inc
and
pop
mov
xchg
mov
dec
mov
jne
in
inc
and
and
imul
and
push
push
mov
adc
jne
dec
jle
and
fst
sub
dec
xor
inc
ljmp
sub
mov
push
jecxz
add
jne
mov
mov
lods
xor
lods
call
sbb
aad
shll
mov
push
data16
adc
and
mov
cmpsl
dec
cltd
mov
js
scas
loopne
mov
mov
sbb
jne
xlat
mov
aad
xchg
jecxz
fisttpl
jecxz
shll
loopne
xor
shl
xchg
andb
lock
add
pop
aam
lds
sar
test
hlt
mov
loop
addw
sub
mov
cmp
cs
xlat
dec
sub
movsl
mov
push
hlt
jns
dec
inc
and
and
scas
mov
push
xor
push
inc
les
fisttpl
push
aad
adcb
jno
sub
icebp
stos
add
fistl
mov
mov
and
sbb
mov
decl
mov
sar
xor
push
mov
mov
dec
mov
push
rol
or
xor
pop
stos
mov
push
or
int3
addr16
stos
popa
push
mov
dec
mov
lds
movb
stos
push
addr16
lods
xchg
stos
ja
test
mov
pushf
xchg
out
xchg
fidivs
jne
cmp
xchg
cmpsb
addl
inc
inc
lea
mov
mov
mov
sub
pop
inc
mov
cld
ret
push
loope
movsl
pop
fisubrl
aaa
int
adcl
inc
sarl
cmpl
lcall
cmc
xchg
sbb
cmp
xor
pop
xchg
fisubl
xchg
mov
lods
popf
test
in
mov
aam
stc
push
and
cltd
sahf
jg
bound
dec
inc
jmp
fisubl
ficompl
cmc
fdivl
push
jno
inc
inc
fdivs
add
jno
testb
cmpsb
sahf
rcrb
sub
cli
std
loop
mov
cmp
iret
inc
sub
xchg
int
pop
or
test
imul
add
mov
jo
inc
mov
add
negl
or
pop
and
xor
adc
test
dec
jp
in
in
xchg
inc
and
xor
insl
repnz
loopne
sbb
insl
xor
xor
cs
jno,pn
addr16
inc
xor
jle
dec
add
test
adc
jns
cmp
adc
jecxz
xchg
mov
cld
and
cmc
fcmovb
mov
cltd
mov
or
add
lret
xchg
push
lret
mov
fwait
mov
das
adc
inc
adc
in
arpl
lret
call
testl
cmp
int
repz
mov
lahf
pop
push
inc
pop
push
or
sub
jle
or
adc
out
add
ss
fildll
dec
mov
inc
dec
jge
aaa
jno
test
adc
inc
repz
and
pop
roll
or
inc
jne
push
scas
lahf
or
push
mov
xor
arpl
push
sub
and
outsl
mov
push
adc
mov
cmpb
insl
adcl
stos
adc
test
push
shlb
cmpsl
inc
xchg
scas
xor
sahf
mov
lock
push
mov
cmpb
dec
popl
xor
mov
in
mov
pop
stc
stos
cld
mov
es
pop
daa
pop
aaa
inc
sub
fwait
in
inc
push
and
rcll
rcr
test
dec
cmc
stos
jne
fs
jecxz
fbstp
das
or
jecxz
ficompl
aas
into
imul
mov
cmovae
nop
das
cmpb
fildll
fdivrs
test
stc
iret
or
jle
pop
lock
or
shl
mov
xor
movsb
cwtl
or
push
out
xchg
add
nop
sub
mov
insl
fsts
mov
inc
icebp
lcall
adcl
mov
pop
xchg
sbb
inc
xor
enter
jns
mov
lods
mov
loop
add
add
cmp
insb
ss
jnp
dec
sysenter
adcb
loope
add
dec
or
nop
shrl
adc
push
popa
jo
cwtl
lret
cmpsl
popf
ss
loopne
sahf
cmpsl
mov
dec
mov
mov
mov
iret
out
scas
scas
popf
add
mov
xlat
pop
loopne
out
stos
pop
clc
scas
push
xor
nop
pop
mov
ja
data16
hlt
daa
or
sbb
test
rclb
push
and
jmp
jg
fistpl
je
test
cmp
xchg
popf
lcall
imull
inc
push
jo
movsb
or
push
add
lock
push
xor
hlt
idivl
lret
mov
sub
mov
test
adc
jb
mov
mov
test
movb
outsl
inc
or
test
mov
iret
or
rcll
push
adc
xchg
rorl
xor
add
mov
andl
cmp
mov
xchg
mov
or
int
and
xor
or
cs
mov
push
xor
cmp
dec
gs
arpl
rclb
inc
std
test
dec
sub
inc
ds
pop
sub
cmpl
inc
xlat
test
dec
push
dec
pop
je
add
cmp
ret
mov
movsl
pop
xor
leave
stos
fistpll
cmp
out
clc
add
dec
fidivrs
add
enter
repz
dec
insl
loope
daa
inc
mov
lea
hlt
adc
push
jbe
or
xchg
outsl
les
pop
cmp
cmovl
insb
pop
mov
adcb
add
imul
xorl
in
adc
xchg
mov
mov
push
mov
mov
sbb
pop
adc
out
insl
call
push
clc
or
pop
cmovns
stos
icebp
pop
scas
sbb
xor
push
pop
or
xchg
xchg
xlat
lods
cmp
lahf
push
jle
push
sub
daa
add
pop
lock
mov
mov
dec
mov
hlt
sbb
dec
pop
sarl
test
out
inc
or
inc
es
pop
and
dec
outsl
fwait
mov
mov
mov
jb
scas
mov
sbb
push
push
mov
mov
xchg
xchg
inc
push
hlt
outsb
aad
sub
in
or
push
andl
and
fs
push
xor
mov
aas
pop
sub
addr16
lods
xchg
movsb
enter
clc
cmp
mov
outsb
scas
add
lods
jno
or
fnsave
adc
aas
outsl
add
stc
sar
mov
daa
jecxz
adc
and
xchg
xchg
insl
loope
xchg
sbb
rcll
xchg
movsl
bound
add
pusha
push
int3
test
insl
xchg
mov
mov
sub
push
hlt
daa
cmp
mov
pop
cmp
inc
lds
or
arpl
push
mulb
cmp
jle
adc
in
jnp
cmp
sbb
insb
xchg
ss
insb
pop
outsl
and
iret
push
add
test
adc
jo
xor
push
data16
jae
xor
into
mov
gs
push
enter
and
push
mov
cmp
xor
jnp
pop
popa
pusha
jbe
adc
je
int3
push
mov
pop
push
lret
rclb
lcall
inc
in
je
add
ja,pt
imul
mov
sbb
repnz
cmp
xchg
mov
mov
inc
cmp
pushf
sidtl
mov
xor
push
mov
in
jmp
pop
jp
movsb
jns
jle
push
fs
add
add
jge
and
or
scas
jge,pt
push
jo
cmp
repnz
inc
stc
push
sbbl
jmp
dec
xor
push
xchg
lret
enter
mov
cmpsl
fdivs
or
fdivs
xlat
and
mov
repnz
or
inc
aad
in
or
mov
sub
cmc
mov
shll
xor
inc
fldl
push
push
popa
cld
cmpsb
lea
orb
cmp
movl
adc
mov
aas
stc
mov
out
pop
add
and
pushf
sbb
cmp
adc
imul
imul
lods
scas
mov
cld
cmp
adc
sbb
mov
js
mov
fwait
pop
pop
jne
lock
xor
movsl
cli
mov
lods
icebp
je
lret
xchg
insl
and
sub
inc
rcrl
mov
mov
outsb
sbb
adc
adc
icebp
sarb
fisttps
xchg
dec
mov
jmp
and
lret
popa
leave
and
aad
test
xchg
xchg
mov
stc
add
inc
cmpsl
xor
or
dec
jg
and
push
adc
shrb
cltd
jecxz
in
arpl
and
call
xlat
mov
fiaddl
dec
add
pop
repz
jnp
gs
jmp
les
rcrb
sbb
fisttps
sub
scas
enter
movsb
xor
call
mov
ja
mov
mov
push
xor
cld
out
inc
insl
lea
mov
xlat
dec
push
stc
adc
xchg
cmovge
adc
push
xor
xchg
dec
call
cmpsb
out
xchg
inc
mov
daa
adc
cli
add
mov
and
dec
jnp
stc
mov
pop
mov
data16
dec
adc
cltd
lcall
dec
lahf
push
cmpsb
mov
mov
sub
push
arpl
dec
pop
fnstsw
fisubrl
fisubrl
pop
xchg
jo
sub
push
bound
pop
daa
movaps
jae
ret
or
add
pop
cs
xchg
mov
xor
sub
add
or
pop
mov
mov
xor
movsb
in
cmp
mov
mov
inc
test
lahf
inc
fldt
pop
repnz
sub
lret
jns
xor
neg
dec
sbb
arpl
decb
push
out
idivl
pop
lcall
add
rcll
cld
stc
subb
or
aam
out
jp
sbb
popl
lret
repz
cmp
mov
rcrl
call
movsl
test
jb
movsb
inc
pusha
mov
mov
adc
testb
xor
xlat
mov
adc
mov
lcall
ficompl
cwtl
xor
fists
mov
mov
pop
mov
cld
loop
dec
cli
jne
xchg
pop
xor
leave
pop
addr16
lock
test
cli
mov
pop
iret
sub
faddp
xchg
sbb
mov
push
jmp
adc
lcall
fld
cmp
stc
cmp
rcl
lods
pop
jns
repnz
pop
aad
divb
push
mov
or
out
int3
loope
push
shll
mov
das
ss
repz
test
sbbl
sbb
sub
fs
scas
add
sar
mov
jns
stos
cmp
cmp
mov
push
das
adc
lock
cld
lret
xchg
lods
xor
out
cmpsb
push
xor
aam
cvtpi2ps
cmp
in
cmp
push
movsb
out
adc
and
inc
pop
jno
add
push
cmpsl
push
lds
cs
pushf
xorl
and
add
inc
pop
xchg
ss
fsub
pushf
addb
lock
jge
adc
negl
sbb
adc
popf
sahf
repz
mov
cmp
scas
adc
aas
mov
lcall
clc
sub
je
jp
shrl
dec
mov
sub
jle
sbb
negl
in
cmpsl
out
mov
add
jb
scas
stc
pop
movsl
pushf
imul
ret
in
fnstsw
icebp
xlat
cmp
xchg
lahf
out
imul
gs
andl
ret
loope
aam
cmp
inc
ficoms
xor
push
mov
test
loop
cmp
rcll
push
mov
ljmp
roll
pop
or
aas
rorb
inc
and
insb
push
sbb
xchg
adc
cmpsl
and
hlt
aad
movsl
lods
frstor
sbb
cmp
mov
push
inc
push
outsl
sbb
lahf
orb
add
mov
je
dec
rcrb
mov
les
pcmpgtd
jg
xor
mov
out
pop
test
jnp
adc
xchg
addb
mov
outsb
xchg
cmp
mov
int3
shr
js
inc
jg
adc
xor
dec
into
mov
sub
push
out
inc
out
and
fdivl
push
sub
dec
jecxz
in
aam
lcall
cmp
pusha
cmp
mov
insl
rclb
add
std
inc
xor
aam
in
mov
hlt
pop
jb
into
dec
lods
mov
adc
adc
fldenv
xor
ss
xorb
dec
and
outsl
aad
and
adc
pop
int
inc
push
xor
pop
loopne
mov
jg
outsb
inc
stos
pop
in
das
aad
mov
cli
jb
rcll
jecxz
mov
loopne
push
xchg
mov
aad
lret
mov
xor
cmpb
push
push
out
cmpsl
mov
xchg
js
mov
dec
sub
rcrl
mov
xchg
rcl
mov
push
insb
mov
mov
ja
idiv
adc
mov
pushf
sbb
xor
fidivrs
push
data16
push
jmp
in
sub
push
sub
shll
idivb
fbld
dec
cld
mov
sub
adc
hlt
std
out
mov
xchg
push
sub
lcall
call
mov
shll
fldt
jae
repnz
pop
cltd
popa
add
and
aam
aas
lcall
fidivl
movsb
adc
jno
sbb
jns
push
cmp
sub
cmpsb
pushf
pop
sahf
mov
xor
lahf
pop
pop
mov
cmp
lret
sub
and
dec
pushf
outsl
sub
rolb
jb
pop
sub
sub
rcll
and
push
adc
jb
sub
sub
in
in
loop
or
push
dec
sub
cmpsb
mov
cld
mov
push
add
push
push
in
mov
sub
movsb
in
inc
popa
xor
mov
pop
pop
add
bound
mov
xchg
jecxz
cmp
imul
xor
insl
pushf
incb
js
movsb
cltd
or
aam
add
cmpsl
decb
stc
loope
decb
outsb
test
sub
push
jge
repnz
xor
inc
push
push
dec
imull
fisttpll
sub
lods
shl
xor
out
mov
dec
std
enter
or
fidivrs
test
mov
shl
sahf
push
mov
int
gs
enter
jmp
dec
shr
inc
adc
mov
mov
sub
andb
cmp
test
mov
test
push
mov
sub
sbb
mov
test
cmp
xor
or
jle
or
jnp
into
xor
iret
lret
testb
lret
mov
mov
dec
pop
sbb
sbb
imul
cmpsb
fiaddl
lds
mov
xor
push
stos
xchg
jle
orl
pop
xor
ja
push
scas
xor
das
std
mov
add
xor
rorb
jne
pop
push
pop
pop
xchg
and
xor
lods
subl
mov
loop
cltd
nop
rclb
mov
add
in
movsb
insl
sub
inc
push
add
mov
xor
jmp
pop
decb
push
jns
push
sbb
leave
push
mov
ret
pop
cs
js
or
or
jnp
adc
pop
int3
jne
imul
adc
push
adc
cmpb
mov
aad
ret
jecxz
loop
and
out
jb
in
push
inc
and
cmp
xchg
xchg
sbb
mov
es
jmp
mov
inc
testb
jo
daa
and
mov
add
stos
push
test
gs
cmp
pusha
sbb
push
dec
and
xchg
and
jge
mov
dec
dec
and
mov
mov
andb
addr16
push
or
fcmovnu
testl
dec
and
lods
test
test
mov
outsb
gs
add
outsb
mov
push
hlt
mov
push
mov
inc
add
adc
push
dec
push
popa
insl
aas
jg
add
rcr
rcrl
bswap
jle
and
das
inc
xor
popa
push
cmpsl
xor
jbe
jnp
inc
inc
filds
insl
js
call
loope
cwtl
out
add
jmp
xchg
ds
movsb
shl
and
and
cltd
push
jecxz
lods
add
xchg
jae
fsubl
out
or
push
das
mov
dec
leave
dec
fimull
sti
scas
xchg
orl
shll
inc
cmp
xchg
dec
lods
insl
push
jp
inc
cwtl
out
pop
pushf
cli
pop
dec
mov
fldt
ret
out
cmp
pop
add
xrelease
ljmp
jmp
jnp
xchg
or
push
insl
mov
pusha
sub
nop
or
jne
inc
outsb
inc
jmp
ss
mov
das
sub
cmc
mov
or
shl
mov
xchg
cmp
lds
leave
mov
push
dec
mov
add
or
icebp
stos
push
mov
jmp
cmpsl
xchg
cmp
loope
loopne
and
xchg
lds
into
imul
fimull
push
stos
push
loopne
inc
cltd
ja
mov
lahf
lea
imul
push
xchg
sti
sub
dec
xor
js
and
into
cmpsl
fwait
or
jo
sti
cmp
fwait
jo
mov
pop
mov
xchg
sbb
inc
mov
jle
adc
imul
out
cmp
mov
cmp
stc
add
and
mov
lods
aam
data16
cwtl
and
jnp
ss
lcall
outsb
clc
pop
jae
jo
jl
inc
sahf
xadd
mov
xchg
cmc
ja
mulb
lea
cmpsb
push
js
call
in
push
repnz
mov
mov
in
in
loopne
xchg
jo
mov
mov
jmp
andl
cli
cmpsb
push
clc
lods
outsb
scas
adc
js
push
popa
inc
es
out
ficoml
xor
test
and
and
sti
test
or
dec
jge
jecxz
das
mov
test
inc
hlt
lret
or
test
cltd
jae
fildll
xlat
xchg
idivb
jo
xchg
sub
lea
push
ja
stos
pushf
jae
or
xor
comiss
sti
jg
cld
popf
out
or
adc
iret
cmp
cwtl
cli
int3
pop
mov
fsub
lea
push
rcrb
cmp
or
in
push
ja
fisttpl
mov
add
or
xchg
enter
lret
add
jp
jl
push
xor
mov
cmpb
cwtl
ficoms
add
outsl
repnz
mov
jb
daa
dec
push
call
push
lods
cltd
and
cltd
aaa
mov
daa
and
push
mov
xchg
mov
shlb
into
in
push
xor
fcmovne
mov
std
xor
call
int3
mov
rcrb
push
in
pop
rorb
out
outsl
dec
sti
jg
aad
and
xchg
xchg
mov
push
cld
xlat
or
adc
sti
lods
xchg
mov
sahf
xor
push
stos
jmp
push
movsl
sahf
or
mov
test
in
test
sub
aam
add
pop
ds
test
xor
inc
leave
clc
pop
aas
inc
mov
mov
xchg
jne
jle
add
jecxz
fdecstp
jbe
mov
lods
adc
add
aas
lods
dec
jne
sub
pushf
mov
mov
fsubrl
inc
cmp
cwtl
inc
shl
jl
test
adc
jle
and
push
sbb
loop
inc
xor
inc
mov
pop
mov
dec
add
cmp
mov
inc
adc
mov
lods
pop
call
es
pusha
cmp
jmp
lahf
stc
sbb
cmp
jmp
add
cld
inc
sahf
pop
dec
adc
gs
mov
sbb
fsts
loope
xor
jge
and
inc
arpl
push
pop
arpl
data16
mov
xchg
mov
sub
popa
inc
dec
sub
out
xor
add
pusha
xlat
call
popf
xchg
adc
mov
lahf
pop
dec
mov
stos
lea
hlt
fadds
sbb
repnz
pop
jo
push
fs
outsl
lcall
xchg
or
jns
mul
gs
adc
xchg
dec
adc
adc
mov
ljmp
jnp
and
cli
add
or
lds
into
push
pop
xor
dec
ret
add
int3
jg
pop
fisubs
movb
jecxz
outsl
setl
mov
leave
xchg
ret
push
scas
mov
lock
pop
lcall
test
xchg
scas
pop
aaa
mov
enter
pop
push
fwait
mov
cmp
shrb
xor
dec
and
stos
pusha
out
mov
jbe
sub
inc
sbb
clc
lahf
cmpb
jae
out
stc
xchg
mov
push
pop
mov
mov
repz
int3
test
loope
xor
popa
dec
pushf
xlat
or
in
or
jle
push
test
lea
orl
pop
flds
fsubp
das
in
mov
out
and
add
xor
fs
mov
fwait
push
sbb
and
cmp
cmpsb
data16
jnp
stos
rolb
xchg
aam
cmp
and
push
imul
test
cmp
aaa
sbb
dec
stos
in
xor
mov
divl
subb
lods
xor
jecxz
and
out
sub
xchg
push
pop
js
mov
jbe
movsb
mov
cmc
into
movsb
mov
pop
dec
inc
cmp
in
sub
shlb
jns
out
ss
or
lock
push
ret
adc
inc
mov
mov
dec
or
push
shr
mov
push
dec
inc
jae
and
push
call
in
int
ret
in
in
gs
out
outsl
adc
dec
in
dec
sahf
push
adc
mov
loope
je
rorl
dec
ret
ret
inc
sti
mov
repz
jns
or
out
ror
and
mov
outsl
xor
adcl
dec
jge
aaa
mov
stos
lods
lahf
xor
xchg
enter
outsb
or
adc
jmp
mov
xchg
cmc
cmp
mov
jle
push
rcl
cmc
nop
mov
xchg
flds
loope
push
sbb
fsubl
jecxz
cltd
jp
jbe
fisubrl
cltd
cwtl
ret
mov
orl
popf
stc
mov
push
pop
or
hlt
mov
lods
inc
test
dec
xchg
pop
dec
dec
xor
int
xchg
sti
fcomi
fwait
cmp
mov
lret
push
ret
cltd
imul
sbb
xchg
lcall
int3
psrlq
sbb
mov
dec
inc
pop
mov
pop
mov
sbb
jae
jp
add
cltd
push
or
cltd
int
inc
clc
xor
dec
imul
push
dec
mov
add
loop
shll
xchg
xlat
xchg
jo
test
enter
push
movsb
add
subl
pusha
adc
xor
xchg
xchg
xor
pop
mov
clc
adc
jne
xor
fisttpl
cmp
inc
add
mov
stos
inc
insl
add
mov
pop
cmc
jl
pop
add
test
aad
mov
data16
dec
adc
sti
pop
pop
in
call
add
jge
addr16
out
out
nop
ficoms
adc
gs
inc
xor
dec
cmp
cltd
pop
fsts
mov
adc
adcl
jb
mov
xchg
mov
ret
imul
cwtl
push
adc
and
movsb
and
xor
dec
sbb
inc
aas
adc
mov
sub
jmp
cmp
int3
or
lahf
aaa
adc
lods
dec
and
or
in
push
inc
mov
cmpl
insl
xor
aam
loop,pt
popf
fcoml
loopne
jp
xlat
or
pop
add
ja
mov
es
sarl
pop
xor
pop
dec
adc
mov
dec
mov
std
lods
add
add
add
in
cmp
lds
pop
jmp
dec
lcall
fstps
jmp
push
out
fiaddl
dec
imul
add
lret
mov
filds
mov
sub
test
sti
mov
push
fs
nop
mov
mov
fistl
pop
mov
mov
mov
sbb
rcl
stos
int3
loopne
dec
addr16
mov
clc
outsl
cmpsb
scas
mov
mov
cs
and
sub
jns
push
jle
ljmp
or
adc
push
cmpsl
jae
lea
sub
jbe
xlat
push
lds
mov
mov
scas
sub
icebp
push
icebp
int3
stc
scas
pop
mov
ss
jno
pushf
mov
outsb
fstpl
mov
add
hlt
loopne
aad
test
popf
test
jo
xor
cmpsl
aad
ja
aam
sub
dec
xchg
out
loopne
or
cs
stos
iret
scas
mov
repnz
insl
dec
and
rorb
pop
xchg
outsl
lahf
movsl
fcoms
push
dec
test
shrl
push
push
stos
sub
and
bound
cmp
loopne
pop
daa
stc
add
or
xor
adc
sub
jmp
and
shrl
call
je
hlt
bound
pcmpgtb
inc
adc
sbb
dec
xchg
inc
and
cs
icebp
sbb
cld
stos
cs
pop
mov
fistps
push
pop
mov
mov
stos
roll
fcoml
das
sub
mov
popa
sbb
sbb
fsubrs
call
push
sub
mov
or
add
shrb
rcll
pusha
and
mov
int
mov
test
cmp
lods
mov
jns
jmp
adc
jae
test
push
and
sysret
push
movsb
pop
pop
jmp
sub
xchg
test
or
hlt
loope
cwtl
int
ljmp
xchg
mov
test
stos
outsl
mov
mov
jb
in
leave
pop
dec
jg
dec
stos
mov
stc
mov
pusha
pushf
adc
inc
push
jmp
dec
pop
sub
mov
in
jo
cmp
rorb
mov
mov
stc
pop
mov
add
dec
je
xor
fildll
les
inc
sub
dec
pop
lock
loope
jmp
cmp
jge
lock
fidivrs
ret
jp
roll
push
push
rcrl
adc
fisubl
popf
or
adc
sbb
mov
jns
jno
xor
inc
es
jge
jecxz
xor
loope
movsl
inc
inc
cwtl
or
popa
pop
xchg
scas
sbbl
jp
es
inc
cli
mov
inc
mov
inc
into
jb
pop
add
fcomp
mov
add
jae
fisubs
or
in
mov
xchg
cmp
push
fcoms
cmp
in
jno
lret
cli
outsb
mov
nop
rcrb
sarl
arpl
inc
test
pop
fbstp
imul
push
popf
cli
call
sbb
adc
xor
iret
push
or
jb
in
and
aaa
iret
pop
or
loop
stos
popf
into
sbb
push
and
hlt
cs
lret
pop
test
cmp
inc
ds
sbb
xchg
dec
inc
cs
push
fdivrs
mov
fisttps
cmpsb
adc
ret
adc
dec
push
or
mov
daa
fwait
or
push
lcall
ljmp
shlb
dec
sbb
roll
mov
jl
orb
sbb
call
test
xor
inc
inc
cmp
jno
js
xchg
mov
pushf
mov
and
addr16
cmpsb
inc
mov
and
adc
or
inc
and
jecxz
orl
push
ret
arpl
cmp
xlat
stc
cs
ss
es
pop
add
adc
rorl
add
mov
jl
or
into
mov
mov
dec
cltd
push
iret
dec
roll
pop
lret
mov
push
push
adc
jp
mov
repnz
mov
test
mov
loope
insb
cmp
cs
lea
ret
and
fidivl
push
push
lods
lret
inc
xor
mov
cmp
ljmp
arpl
jge
jnp
mov
dec
mov
int
sub
sbb
leave
subl
and
adc
adc
sbb
cli
pop
cmp
fstl
mov
xor
loope
shlb
hlt
je
pop
xor
aaa
lock
pop
cmc
add
jb
or
and
mov
mov
or
cmp
sub
test
jnp
push
fwait
and
cmc
and
mov
mov
lods
movsb
es
xchg
jl
cs
sbb
popa
ja
cmc
push
mov
cs
jo
sub
pushw
push
ror
pop
dec
sti
and
jmp
cmp
js
sbb
clts
in
sbb
cmp
inc
test
xchg
or
adc
push
rorl
jmp
les
js
inc
dec
xor
je
pop
addb
sahf
push
and
and
push
jno
call
out
or
sub
ficoml
adc
outsb
aaa
sahf
into
sbb
lea
xor
xchg
jl
sub
add
mov
pop
sbb
sbbl
xchg
mov
std
aad
lret
inc
or
push
sbb
mov
addr16
ret
mov
das
mov
loop
cmpb
mov
xor
pop
fcmove
dec
les
mov
sbb
adc
jne
add
inc
sahf
push
jbe
out
ficoml
lahf
fs
add
and
inc
push
inc
jp
dec
push
mov
cwtl
sarl
cmpsb
lret
call
xor
loope
rorl
mov
xchg
gs
lahf
repnz
imulb
cmp
inc
sub
sbb
or
cmc
test
dec
gs
mov
test
rcrl
cld
jno
xor
dec
mov
ja
mov
jnp
loope
adc
shll
adcb
movsl
into
rorl
hlt
pop
out
adc
sub
lea
leave
push
inc
mov
popa
adc
insl
shrl
loope
icebp
push
inc
push
jl
sub
ret
mov
pop
adc
fcompl
mov
mov
jecxz
fwait
cmpsb
xchg
stc
fsubp
notl
xchg
dec
sbb
in
sarl
xchg
mov
lret
jg
push
pminsw
jl
pusha
and
xor
push
push
inc
cltd
imul
clc
aad
xor
test
mov
scas
cld
mov
sbb
adc
pop
int
push
add
fsubs
adc
jbe
jecxz
adc
and
imul
adc
push
jl
adc
sti
lods
je
pop
sbb
and
xor
maxps
pop
psrlq
mov
adc
adc
bound
mov
pop
xor
out
cmp
shll
arpl
popa
mov
and
add
inc
cld
testb
push
xlat
adc
lds
jl
addr16
out
cmp
inc
rol
pop
or
jo
clc
sbb
fistps
jle
pop
mov
push
paddb
pushf
push
jl
sahf
xchg
rol
sahf
repz
sbb
push
imul
cs
lods
mov
and
imul
outsl
cmp
xor
std
mov
or
mov
rclb
popa
ret
pop
and
cmpsb
xchg
outsb
orl
addr16
imul
cmpsb
sub
sbb
jmp
fldt
pop
or
inc
frstor
mov
jnp
pop
mov
mov
fmuls
insb
sub
push
lds
mov
xchg
pusha
adc
push
cwtl
pop
cltd
test
shl
iret
pushf
push
insl
mov
shl
push
cmpl
sbb
cmpsl
iret
cmp
mov
mov
or
out
pop
push
adc
adcl
ds
cmp
mov
dec
xchg
xlat
dec
cwtl
and
xlat
mov
mov
jae
test
cmp
test
loopne
scas
mov
pop
ror
jmp
mov
js
mov
dec
fdivs
add
mov
hlt
cwtl
dec
jecxz
mov
jge
mov
mov
xchg
aaa
fdivl
cmpsl
jmp
jno
cmp
mov
fdivrl
cltd
adc
dec
shll
sbb
sahf
jno
jnp
add
repz
repz
mov
lock
xor
mov
sarb
inc
fimuls
push
repnz
and
lahf
mov
inc
mulb
test
sub
das
sti
mov
das
dec
lahf
xor
int
cltd
push
repnz
cmp
pop
cmpsl
mov
jg
stos
lea
pop
jmp
and
addr16
inc
or
xor
lahf
out
insl
cmp
sbb
inc
pop
in
xchg
jmp
popl
cmpsb
xchg
jp
pop
call
lcall
stc
hlt
subb
rcl
inc
mov
daa
mov
into
cmpsl
sub
pop
mov
andl
fwait
repz
xchg
lret
jno
mov
aam
mov
jmp
pop
out
sahf
jnp
mov
dec
xchg
loope
les
xor
jae
xchg
adcl
add
xchg
das
dec
xchg
xchg
ret
sarb
loopne
mov
cs
jle
imul
aam
leave
xor
jae
push
mov
jbe
lock
inc
pushf
in
sbb
fisttpl
cwtl
mov
shrb
adc
flds
pop
in
jne
stos
fwait
sub
test
mov
add
sbb
mov
cwtl
stos
rcr
push
fwait
rcrl
inc
call
mov
add
shrb
jl
testl
fldl2t
movsb
incb
pushf
mov
lret
jbe
inc
jae
adc
int3
jp
and
testl
stos
mov
rol
pushf
sbb
scas
lods
jge
adc
mov
fcmovne
std
das
and
imul
les
pop
dec
sbb
jecxz
add
mov
jb
pop
pushf
scas
mov
into
addr16
fstl
inc
out
loop
cmpsl
ds
or
push
rorb
mov
iret
push
lods
std
cmp
popf
sbbl
cmp
sub
popa
std
fwait
dec
mov
dec
push
es
jmp
leave
lea
sahf
sbb
xchg
jns
sub
cmp
mov
popa
add
or
push
or
dec
xchg
cmp
add
adc
int
sbb
and
imul
sarl
sbb
inc
ret
nop
push
fisubrl
loope
loopne
lods
adc
jmp
lret
adc
xor
mov
scas
in
mov
lcall
jb
xchg
mov
cmp
xlat
and
stos
pusha
loop
pop
mov
cmp
xor
jne
pusha
add
inc
xchg
xor
mov
mov
mov
sahf
iret
jnp
cmpl
outsb
xchg
lds
and
icebp
andl
mov
or
popa
std
mov
pop
into
int
push
add
ja
lock
mov
xor
dec
xchg
jbe
iret
mov
cmc
hlt
lods
int
and
mov
or
xor
dec
addl
mov
subl
or
cli
mov
ret
push
dec
lret
testb
pop
jle
outsl
mov
pop
push
add
mov
sub
push
sbb
push
into
inc
mov
jo
incl
mov
repnz
cmp
xchg
movsl
mov
aam
pop
lds
ss
stc
ss
ljmp
dec
xor
subb
push
inc
fimull
fcmovu
mov
pop
push
mov
jb
aaa
mov
fwait
negl
mov
sub
js
dec
out
clc
int3
fxch
or
add
pusha
pushf
pushf
jge
cmpsl
aad
xlat
int
idivb
push
repnz
test
test
xor
mov
test
jecxz
fstpt
jo
pop
add
aad
push
lock
mov
sub
pop
js
aaa
add
and
or
sbb
imul
xorl
xchg
rcll
cld
mov
pop
fucomp
mov
imul
ljmp
fwait
out
cmp
insb
lret
mov
add
imul
popa
pop
imul
dec
push
jle,pn
test
mov
lods
or
movsl
scas
call
mov
mov
xchg
mov
cmp
jg
int3
scas
fsubl
rorb
and
iret
inc
dec
add
lods
push
hlt
mov
fdiv
push
sti
out
xor
inc
dec
xchg
pop
shlb
adc
jge
mov
jge
dec
fiaddl
mov
add
mov
sarl
and
cmp
fdivrp
inc
xorb
movsl
int3
test
mov
sbb
pop
lahf
push
pop
sub
movsb
idivb
jb
sub
or
leave
movsb
insl
push
clc
hlt
add
fisubrs
mov
out
sub
adc
mov
scas
or
std
or
adc
shl
lods
test
push
xchg
xor
outsb
insb
int
shrb
jbe
pop
jae
aas
jmp
xchg
test
stos
adc
daa
outsl
ljmp
das
addr16
ret
cmp
add
mov
xchg
fimuls
cwtl
loopne
adc
xchg
sub
into
mov
push
xor
aaa
fwait
push
mull
repz
jno
jle
xchg
sub
scas
mov
cmp
jg
ljmp
push
and
fwait
pop
xchg
sub
out
dec
xor
icebp
mov
add
push
push
ficoml
out
popf
pop
aam
ror
xchg
add
lcall
out
xor
mov
mov
enter
lret
ffree
icebp
les
inc
lds
ret
jp
lret
outsb
insl
testb
pushf
add
mov
cmp
fisubrs
test
fldt
or
inc
push
or
cmp
cli
ss
sub
adc
negb
fsubr
out
lcall
test
test
scas
fcmovb
jmp
pushf
ret
add
lahf
mov
lock
stos
repz
pop
push
cmpsl
test
jbe
iret
in
popa
inc
dec
out
jg
and
sub
sbb
dec
ss
loopne
std
cltd
outsb
push
movsl
lcall
cltd
shlb
xor
stc
cmp
sbb
and
shl
movsb
fisttpl
push
loopne
mov
jno
pop
cltd
cmc
xor
ret
pop
test
fsubrl
or
dec
mov
loope
test
xchg
aad
lods
or
and
ljmp
mov
xor
pop
dec
mov
lret
cmp
out
ret
ret
mov
jp
jns
es
call
mov
and
mov
mov
lea
stos
insb
outsb
fs
jg
stos
test
mov
lea
ret
fmulp
int
add
int3
lods
inc
es
es
ficoms
add
xor
adc
cmova
adc
iret
cmp
xchg
test
or
adc
filds
imul
sti
fistps
in
out
mov
rcl
sbb
fldcw
pop
xorb
fcmovne
inc
test
push
or
push
mov
cli
dec
lea
sub
arpl
mov
and
jns
pop
out
sbb
cs
out
loope
imull
int3
sbb
jnp
cmpsl
mov
push
xor
and
pop
es
push
jb
jnp
pop
xlat
xchg
xchg
outsl
fisubrl
push
in
mov
int3
add
inc
mov
sbb
lcall
sub
mov
mov
jnp
jmp
out
pop
das
stos
stc
aam
fcmovb
xlat
movsb
jns
sub
pop
add
xor
mov
dec
stos
jmp
pop
loop
movsb
mov
cmpb
rcrb
imull
lea
dec
push
jle
lret
mov
push
rorl
inc
rcr
arpl
ds
mov
cltd
xchg
test
adc
mov
and
fldl
or
jne
sub
xor
adcb
cmpsl
mov
inc
std
cltd
xor
dec
bound
inc
out
pop
or
jle
cwtl
push
mov
ret
rolb
into
mov
test
dec
xor
insb
outsb
iret
lods
inc
sbb
pop
stos
fidivrl
dec
add
mov
arpl
in
mov
add
enter
enter
cld
mov
mov
into
sbb
inc
ret
mov
xor
fmul
adc
std
stc
outsl
cmp
cli
jbe
sub
mov
and
ss
xor
mov
adc
cmp
or
loopne
inc
dec
xor
ja
add
inc
iret
push
and
mov
test
jno
fsub
loope
popf
sbb
jo
sbb
dec
mov
add
jmp
add
in
push
xor
sarb
mov
dec
into
add
lods
xchg
pop
or
xchg
mov
dec
jg
pop
pop
test
dec
in
je
test
xchg
sub
test
push
into
xbegin
xchg
inc
lahf
stc
out
es
jb
sbb
gs
repz
pop
push
incb
out
cmpsb
fs
sti
xchg
mov
aas
jns
mov
fwait
jl
cmp
lahf
or
pop
arpl
push
xchg
pop
sahf
ja
popa
xchg
xor
ja
mov
pop
mov
cs
in
repz
mov
mov
addr16
dec
cmovp
or
pop
das
adc
mov
leave
push
lea
call
sti
push
xlat
loop
push
mov
arpl
iret
jnp
push
dec
mov
lods
mov
loope
orl
ja
int3
push
mov
es
fmul
popa
mov
bound
fwait
outsl
and
xchg
cmp
loopw
dec
dec
mov
imul
orl
addb
or
dec
adc
inc
stos
stc
jmp
ss
scas
aaa
repnz
test
inc
mov
adc
push
jbe
sar
popa
sub
daa
arpl
aam
mov
clc
push
test
adc
jns
or
pop
stc
lret
dec
nop
xchg
jno
out
xchg
les
inc
out
fidivl
out
add
ss
hlt
mov
mov
mov
mov
enter
xchg
ljmp
lds
push
sbbb
fnstenv
fistps
cmp
roll
jmp
dec
inc
fnstenv
in
xor
sbb
in
cs
sub
bound
gs
iret
cltd
incl
sti
xlat
mov
push
std
and
ja
cmpsl
add
adc
and
sbb
push
scas
fcmovb
hlt
in
sub
jnp
dec
notb
fcomps
popf
or
jmp
xor
ret
push
and
ret
paddusb
jmp
imul
xor
push
rol
adc
ss
out
lret
out
xor
movsl
mov
icebp
cmpsb
loop
pop
lret
int3
jl
mov
lret
or
out
cmpsb
repz
pop
sub
xor
push
pop
stc
add
pop
cld
ret
jmp
fsubs
cmpsb
pop
int
sti
cmc
push
int
js
out
and
pop
lods
push
out
and
sub
shrb
adc
mov
cwtl
or
data16
sahf
test
cmpsl
nop
loop
dec
fistps
jg
pop
fs
jb
repnz
lea
mov
ret
pop
in
jo
push
fcmovbe
sbb
xchg
and
pushf
rcr
mov
fxch
xor
sbb
jp
movb
fmulp
mov
jns
fwait
jne
and
dec
call
push
repz
push
into
jmp
or
orb
repnz
dec
adc
sbb
mov
jle
mov
pop
std
or
ss
ds
mov
sub
mov
mov
lods
jae
rcrb
lods
or
lods
and
cwtl
add
dec
dec
mov
mov
cmp
or
xchg
es
mov
cwtl
in
and
popa
mov
lahf
jbe
addr16
clc
shrw
addr16
add
jae
testb
clc
fistpl
stos
adc
mov
repz
cmp
sub
into
out
repnz
jge
mov
dec
jge
rcrl
lret
xchg
mov
pop
cmp
mov
jno
dec
hlt
in
jg
inc
cltd
or
xchg
jns
xchg
mov
add
and
lahf
or
stc
int3
mov
iret
arpl
scas
inc
lds
movsb
xor
xor
mov
sbb
sarb
inc
shrl
cltd
inc
loop
jae
lcall
add
bound
shrb
sub
test
inc
mov
xor
inc
sub
mov
stos
add
xchg
jecxz
jae
scas
sti
orb
roll
mov
stos
push
popf
negb
jo
sub
pop
mov
lret
sbbl
cmp
outsl
mov
add
and
lods
or
imul
loope
dec
sbb
sbb
or
dec
mov
imul
inc
mov
mov
jno
arpl
sbb
mov
mov
jne
inc
sbb
scas
je
test
rclb
adc
pop
sbb
sub
mov
mov
outsb
iret
sub
push
push
rcrl
negb
pop
mov
dec
add
das
icebp
pop
dec
movsb
lret
jg
cmp
test
add
test
adc
fistl
add
ror
add
push
cmp
pop
aam
jmp
jb
or
inc
seta
adc
fidivrs
imul
ret
inc
jnp
cltd
and
test
cmp
scas
pusha
lds
mov
push
fcomi
add
aad
popl
fisubrs
mov
sbb
or
mov
push
faddp
sbb
sti
pop
or
jg
and
sti
jl
in
and
lahf
or
icebp
xchg
cmpl
and
lods
push
mov
jbe
xchg
jae
add
inc
and
fistl
outsb
pop
mov
mov
in
sarb
cmpsl
lcall
cmp
push
jecxz
jbe
or
sub
pusha
ja
inc
mov
stos
iret
xor
popa
lock
push
andb
rcrb
mov
mov
jle
fimull
inc
test
xor
cwtl
scas
add
int
adc
inc
lahf
lret
pop
or
and
test
loope
add
cmpsb
lret
or
adc
fwait
ss
repz
push
das
out
out
gs
repz
xchg
out
test
and
inc
cwtl
xor
ret
loopne
rcr
inc
jmp
loop
lds
mov
rorl
clc
xlat
decb
aas
iret
xchg
out
daa
jmp
ja
fildll
into
xchg
sub
xchg
pusha
addr16
lea
lds
push
test
inc
test
xor
insb
lahf
jle
cmpsl
cmpsl
pop
push
adc
inc
push
sub
mov
repnz
imul
sub
gs
mulb
in
popf
and
pop
mov
mov
bound
pop
or
mov
into
pusha
mov
jp
rcll
or
popw
push
sti
mov
leave
insl
xlat
or
jg
lret
leave
pop
aad
dec
push
xchg
add
mov
inc
das
shlb
xchg
lea
pop
push
rol
movsl
cltd
cmc
adc
rcrl
pop
popa
test
push
insl
xor
pusha
push
stos
pop
fbstp
stc
orb
jp
cmp
fimull
add
data16
jp
test
xor
push
fstpt
outsb
stc
in
sbb
lcall
xchg
dec
cmc
and
outsb
pusha
mov
outsl
adc
push
test
cli
shrb
or
cmp
push
hlt
mov
stos
jbe
out
outsl
adc
sti
mov
lcall
sub
jnp
stc
xor
and
xchg
js
movsb
js
stos
mov
jo
into
shlb
cmpsb
sbb
adc
add
and
test
popf
pop
cmp
push
int3
mov
jle
rcl
add
aas
out
adcb
mov
sub
orb
or
int
adc
jns
lcall
dec
dec
push
sahf
bound
xchg
mov
dec
mov
cwtl
loopne
movl
pop
and
cmpsl
cs
loopne
pop
dec
jmp
frstor
pop
pop
push
fwait
xchg
dec
lods
xchg
adc
xor
arpl
dec
mov
ret
jne
cwtl
in
je
inc
xorb
cmp
out
and
fs
cmp
push
rcrl
sub
testl
jb
lea
lcall
inc
and
fsubp
fisubs
lock
cmp
dec
inc
repz
xor
inc
inc
popf
pcmpgtd
mov
jo
sub
and
xor
dec
in
adc
mov
adc
stos
fistps
fists
xchg
loop
pop
imul
jne
rolb
dec
movsb
add
test
dec
jnp
xchg
dec
inc
ja
call
mov
dec
popf
or
mov
int3
cmpsb
es
out
pop
ljmp
dec
jbe
subb
xlat
es
cld
and
xor
hlt
xchg
cwtl
adc
in
test
cmpb
aad
mov
cs
into
jno
pop
push
inc
xor
call
out
push
xlat
inc
xchg
mov
sbb
insl
fcomps
xor
jb
ffree
push
lahf
dec
xchg
int3
cmp
add
lock
outsb
outsb
fdivr
insb
lret
js
fdivrp
into
stos
les
push
out
test
jmp
bound
mov
insl
out
jg
xor
push
icebp
sbb
aad
xor
jp
daa
out
adc
sahf
and
les
sbb
inc
icebp
out
mov
cmpsb
fcomps
stos
pop
sti
push
adc
fdivrl
enter
xchg
sub
out
sahf
xor
addr16
add
pop
movsl
subl
addr16
jbe
out
movsb
jo
out
shrb
mov
push
cli
sub
sbb
faddl
push
loop
insb
cmpsl
out
xchg
jb
stc
mov
pop
insb
adc
lcall
stos
xchg
rorl
jle
inc
hlt
adc
or
mov
rorl
cltd
in
pop
lahf
pop
pop
mov
stos
adc
pop
pop
xchg
xchg
sub
add
imul
push
leave
sahf
std
add
xor
ljmp
xor
dec
pop
mov
lcall
dec
out
repnz
mov
mov
sahf
std
lea
mov
sahf
je
andb
jmp
add
mov
in
jae
pusha
sahf
xor
xor
push
jae
movsb
push
clc
loopne
mov
mov
lahf
adc
jb
sahf
fldz
push
mov
sbb
cld
arpl
cs
mov
ficoml
inc
mov
orb
add
and
test
mov
sahf
xorps
mov
pop
xor
mov
mov
mov
jle
cwtl
gs
arpl
xor
aad
sub
xchg
jb
jno
jne
loopne
xchg
inc
pop
dec
gs
dec
repnz
sbb
xchg
inc
and
test
lahf
lret
int
xlat
pop
and
xchg
popa
in
clc
cld
jge
imul
pop
dec
dec
paddq
scas
sub
xor
out
imul
jle
sbb
test
ret
test
jecxz
mov
or
push
enter
inc
pop
push
pop
das
mov
push
jmp
or
mov
mov
rclb
and
cmp
cmp
sbb
imul
cmpsb
jbe
dec
adc
out
add
pushw
nop
push
in
dec
push
cmp
scas
rclb
das
xchg
cltd
repz
call
adc
cmp
ret
mov
pop
mov
stc
add
sub
pop
pushf
sbbb
out
dec
shll
mov
push
push
dec
pop
loop
sbb
ret
push
inc
xchg
push
into
sub
adc
inc
mov
mov
js
lcall
pop
cmp
mov
aas
or
cmp
es
dec
bound
test
jg
cs
mov
fildll
icebp
lds
pushf
sahf
test
test
mov
xchg
mov
add
push
pop
ja
xor
out
sbb
add
fstps
je
push
cld
enter
jno
ret
rcrb
xchg
pmulhw
lods
or
or
clc
sub
cs
adc
mov
ret
leave
cmc
jno
inc
ds
test
roll
jg
fucomi
xchg
pop
fstpt
mov
cmp
roll
cltd
into
ljmp
movsb
inc
add
xor
ja
bswap
iret
push
dec
and
inc
cs
stos
jno
stc
lea
push
je
sub
arpl
movsl
mov
loope
repz
jb
xchg
ret
ficomps
and
imul
xlat
inc
push
popa
adcl
sahf
xor
pop
add
jnp
jp
add
shr
nop
sub
jp
nop
fstl
ss
es
dec
pushf
addr16
dec
push
push
adc
out
adc
rcrl
jno,pt
imul
fs
adc
pusha
or
sub
das
rorl
push
scas
inc
imul
add
vmovaps
rcrb
fldt
arpl
adc
sbb
mov
js
out
cmpsl
mov
or
sbb
jnp
cmc
inc
leave
lods
xor
subl
add
jns
xchg
ret
lods
push
dec
fucom
jge
ret
jle
lret
lock
push
push
jbe
addr16
cmc
mov
ss
xchg
adc
add
jb
leave
fimull
inc
std
test
mov
pop
xchg
mov
sub
test
cmc
push
repz
stos
mov
push
and
mov
jnp
push
ret
mov
arpl
pushf
sub
mov
push
rcrl
or
xchg
mov
pop
call
sbb
outsb
sbb
sub
jo
jmp
dec
dec
push
cs
jbe
mov
das
push
sbb
outsl
and
outsl
mov
mov
mov
xorb
fldenv
jecxz
pop
les
rcr
lock
fildll
fs
mov
mov
or
dec
ds
inc
dec
push
pop
sbb
mov
scas
ds
clc
or
ljmp
cmc
arpl
or
test
ret
fimuls
push
xor
lahf
mov
lcall
addb
adc
sbb
jle
jp
cwtl
sub
cld
fiadds
push
or
push
dec
mov
pop
dec
rcrl
cmp
dec
sub
dec
inc
inc
bts
addl
lock
push
nop
xor
sbb
mov
jg
bound
pop
data16
mov
imul
enter
out
daa
aam
jle
sbb
jmp
ficoms
inc
stos
arpl
test
in
pop
imul
es
arpl
enter
xchg
fnsave
sbb
in
loop
mov
cmpsl
inc
sub
addr16
push
stos
adc
or
mov
fs
mov
sub
mov
lcall
movsl
dec
sahf
mov
mov
dec
loope
decl
std
cmp
in
pop
test
loop
pop
out
cwtl
xchg
push
jns
xchg
xor
cli
std
mov
mov
vmread
push
mov
and
add
mov
or
mov
push
sbb
push
xchg
jle
lods
pop
cmpsl
push
ja
cmp
rolb
push
jne
push
jno
in
inc
jns
mov
popa
inc
pop
clc
testb
sbb
mov
jl
jp
inc
mov
orl
pop
insb
xor
xchg
call
lahf
enter
xor
adc
mov
add
into
and
pop
ja
test
test
dec
mov
mov
outsl
je
push
pop
cmpsb
clc
lahf
mov
outsb
arpl
jmp
pushf
in
xchg
push
sub
lods
adc
add
mov
mov
mov
out
add
les
mov
cmpsl
int
inc
push
pop
or
ror
testb
jns
mov
xchg
xor
bound
call
push
xor
insl
fisttpll
mov
pop
sbb
inc
ret
push
push
jg
xor
xor
jle
xchg
xor
inc
loop
imul
fdivl
movb
dec
fstp
lea
and
inc
xchg
push
cmp
aam
mov
inc
insb
mov
dec
sahf
xchg
jne
out
adc
adc
stos
rcrl
popl
xor
fsts
pop
ss
sub
cld
notb
imul
adc
sbb
dec
mov
mov
cmc
xor
movsb
sub
xor
lahf
addr16
adc
dec
data16
test
sub
adc
pop
lods
and
bound
call
pop
in
inc
shl
add
aad
adc
jecxz
xchg
popf
pop
mov
imul
xchg
xor
test
add
mov
xor
mov
or
sub
cmp
mov
jno
mov
xchg
lods
adc
fstps
mov
xchg
push
std
pusha
lret
lret
mov
cmp
in
pop
cmpb
mov
lods
cmpb
xor
xor
mov
int3
push
xchg
dec
test
js
mov
pushf
push
rorl
aam
mov
cmp
mov
sub
int
arpl
xchg
dec
insl
dec
mov
jp
or
xchg
xlat
or
testb
sub
dec
int3
xor
imul
ss
xor
adc
ret
sbb
popa
movsb
adc
mov
aad
cmp
test
sti
in
repz
fnsave
cs
stos
jge
fdivl
inc
lods
adc
mov
das
in
or
sub
xchg
dec
inc
jno
fstpt
stos
jo
shrl
xchg
pop
fwait
dec
xor
in
imul
add
jmp
imul
mov
imul
add
daa
adc
xchg
cld
icebp
insb
cli
into
push
push
adc
flds
or
jb
cmp
jo
add
mov
mov
inc
fwait
icebp
lods
int3
cld
stos
jo
inc
lods
jl
lahf
rorb
cmp
je
xor
adc
mul
dec
mov
pop
std
jg
filds
in
popa
imull
or
iret
int
push
mov
jnp
orl
jecxz
fwait
and
out
cmovg
fsubrs
pop
sub
dec
xchg
stos
lea
ljmp
repz
fiadds
pop
push
xchg
data16
imul
ret
adc
inc
sbb
xor
add
jmp
xchg
fisubl
popa
mov
ret
sbb
frstor
test
mov
es
mov
outsb
shrb
xchg
xor
push
mov
xchg
test
push
aaa
ret
aad
xchg
pop
inc
add
ret
add
jg
dec
cmpsl
mov
inc
repz
push
push
sub
fcomps
push
add
faddp
je
pop
xchg
mull
jmp
je
dec
pop
push
sti
mov
movsl
xchg
gs
inc
leave
sahf
aaa
jg
xor
pop
std
loop
addr16
jmp
repz
dec
fwait
ds
mov
mov
lock
mov
and
xlat
sti
xor
dec
rcll
test
or
pop
pop
cmpsb
dec
iret
mov
dec
test
or
sbb
popa
add
sarl
repz
clc
fsubr
xor
ljmp
ss
jle
cs
jecxz
repz
pop
sbb
sbb
arpl
outsl
push
jns
pop
xchg
push
mov
scas
and
lea
xchg
lcall
es
xor
xor
cs
and
push
cwtl
mov
stos
adcl
ds
imul
insb
jp
adc
mov
movsl
popa
in
cli
sbb
xchg
arpl
or
xchg
add
mov
or
push
mov
insb
jo
or
add
lods
out
pushw
ja
lods
and
ffree
out
sarl
adc
andb
and
cmp
sti
mov
push
adcb
push
fistpll
cmp
jmp
shrb
subl
jmp
es
jnp
bound
into
in
or
pop
lock
mov
rcrb
movb
adc
jp
xchg
mov
imul
lods
mov
or
int3
mov
ss
mov
pop
add
push
and
imul
shlb
outsb
mov
and
sbb
add
pop
loop
dec
popf
cmp
xchg
ds
std
xor
push
ja
xchg
inc
out
lcall
mov
ljmp
adc
sti
cltd
in
mov
aad
imul
nop
cmp
cltd
ret
in
dec
xor
lea
je
les
jmp
mov
dec
ficoms
dec
movsb
mov
vaddss
adc
aad
pop
int3
xor
and
cmp
push
mov
or
xor
xchg
sbb
outsb
enterw
repnz
push
cmpsb
and
and
sub
aaa
mov
clc
decb
rcrl
inc
rclb
or
jno
dec
or
mov
in
push
movups
clc
fs
xchg
and
jg
xor
popl
xchg
adc
es
xchg
or
movsb
mov
mov
dec
cld
cmp
cmp
add
xor
mov
add
shl
outsl
pop
adc
sub
in
sub
mov
xchg
pop
iret
insb
sub
ret
ret
repz
jns
int
fdivs
sahf
sbb
mov
out
pop
shll
je
mov
mov
sub
dec
dec
mov
outsl
cli
adc
add
in
jg
mov
shr
outsb
push
cwtl
jae
mov
ss
dec
inc
sub
movsb
sbb
cli
xchg
inc
dec
call
and
out
addr16
sbb
xor
inc
inc
divl
out
in
mov
and
sahf
jbe
jns
mov
or
xor
mov
xchg
sub
popf
aas
cld
pop
ret
pop
push
pushf
cmp
pop
ret
mov
add
jnp,pt
and
std
mov
inc
pop
xchg
inc
adc
pop
pop
jns
fsubs
pop
or
sbb
mov
sbb
xor
xor
xchg
sbb
xor
fisubs
aam
adc
pop
enter
jbe
xchg
arpl
stos
mov
inc
cli
cmpsl
into
pop
or
cltd
popf
push
mov
lds
mov
bound
fisttpl
lahf
insl
xchg
clc
mov
jp
adc
adc
int3
ja
iret
pusha
imull
push
inc
xor
cmp
bound
sub
icebp
and
cs
gs
dec
mov
dec
sub
lods
mov
fcomps
mov
push
sub
out
aas
in
push
xor
jecxz
mov
xchg
pushf
cld
lods
iret
shr
cmp
sti
and
add
push
popf
nop
inc
mov
frstor
sbb
inc
adc
hlt
in
das
mov
ss
jnp
xor
jp
cmp
sbb
xchg
sbb
lahf
pop
ljmp
and
push
les
in
call
xor
in
cmp
push
aas
and
outsl
aad
lods
roll
nopl
or
movsb
add
mov
stos
jne
dec
aad
mov
sbbb
xchg
mov
jo
in
dec
pop
inc
dec
pop
or
ss
mov
xchg
xor
lcall
pop
lock
and
popl
cmova
cmpsb
repz
loop
inc
sbb
jecxz
cmp
mov
add
fildl
mov
outsl
mov
cmp
pop
push
clc
mov
repnz
jo
sub
push
jle
jbe
mov
ss
sub
pop
sub
jne
mov
aam
fmull
mov
mov
ret
push
push
sbbb
mov
outsl
jb
and
addr16
mov
in
push
jge
rorb
fwait
sub
je
enter
ja
movsb
sbb
enter
movsl
lock
inc
push
jb
roll
inc
dec
repz
xchg
lea
repz
and
ret
sub
ret
les
clc
icebp
fsubs
in
cmp
adc
dec
es
cmpsl
adc
pop
jns
js
adc
dec
hlt
test
shrb
mov
in
pop
pop
fmulp
push
repz
mov
fdivr
and
test
mov
push
mov
cmp
fsubrl
cli
lds
mov
pop
scas
lahf
push
pop
jge
clc
js
and
gs
cmp
and
mov
mov
es
stc
leave
cmpsl
mov
js
loope
sub
mov
jae
inc
cmp
mov
aas
push
jmp
xchg
dec
out
movl
push
lds
adc
push
cmpsl
mov
adc
adc
cmp
add
ret
dec
in
xchg
jle
inc
mov
stc
stc
sub
adc
jle
fcmovnu
cmp
addr16
mov
mov
lret
sbb
jge
cmp
adc
outsl
jge
arpl
mov
jmp
sbb
xor
jo
cs
lea
leave
jmp
mov
mov
push
fldt
dec
icebp
hlt
cmovb
add
pop
mov
out
mov
jne
repz
mov
dec
aad
mov
js
push
addr16
out
insb
jg
fidivs
int3
fsubl
xlat
sub
xchg
out
sbb
lahf
cmp
insb
or
scas
icebp
inc
bound
fwait
test
mov
cmc
shlb
adc
imul
inc
aam
mov
adc
dec
jle
bound
dec
repnz
aam
je
jns
xchg
movsl
sbb
arpl
fcomps
hlt
insb
addb
cmpsb
push
push
cmp
inc
inc
push
imul
jge
lcall
adc
xchg
lret
or
aaa
push
gs
scas
mov
int3
mov
orl
insl
sbb
and
adc
mov
push
ja
sub
xor
or
outsl
mov
outsl
mov
lcall
in
sbb
fsubr
loope
adc
out
repnz
fnstcw
hlt
push
push
repz
adc
int3
mov
jnp
daa
xchg
icebp
xor
sub
or
scas
lret
testl
mov
dec
js
mov
insl
inc
mov
out
jg
add
push
adc
imul
push
push
jmp
aas
jne
jmp
dec
dec
lds
or
xchg
inc
and
cli
outsl
dec
ss
push
push
or
sbb
mov
xchg
aas
adc
call
cmp
roll
and
adc
sti
loop
adc
stos
nop
dec
movsb
jbe
call
sub
and
mov
fsubrp
push
inc
push
push
cmpb
lea
frstor
mov
stos
dec
push
hlt
sub
dec
in
xchg
into
loop
adc
loopne
adc
pusha
jecxz
imul
arpl
int3
out
mov
mov
ror
ret
dec
cmp
ja
or
and
in
lods
sbb
je
xor
cmc
sub
je
in
je
je
movsb
int
mov
sub
mov
jbe
fdivr
sub
adc
cmp
sub
add
xorb
adc
rcll
lcall
rcrb
cwtl
dec
push
lods
and
cmp
scas
lds
or
stc
mov
ss
mov
mov
add
push
inc
or
and
cli
jmp
push
mov
lahf
cld
adc
pop
cmp
xor
push
in
dec
call
add
loope
movaps
out
iret
ja
sbb
aad
notb
inc
arpl
out
in
leave
je
cmpsl
imul
adc
shrb
inc
cltd
fildl
xchg
cli
insl
jno
or
mov
or
leave
cmp
addl
fcomps
and
lods
sub
stc
inc
out
in
pop
or
aam
or
and
inc
movsb
dec
rorb
adc
repz
push
mov
jo
loope
dec
ljmp
pushf
sbb
and
or
into
push
jp
faddp
mov
rcrl
pushf
dec
call
adc
test
lock
xchg
lahf
jno
push
lea
rcll
scas
mov
jno
and
sub
cmc
mov
add
and
stos
and
sub
enter
cltd
xor
in
insl
mov
mov
fistpll
ljmp
ret
sbb
stos
icebp
add
cmpsl
data16
jnp
roll
mov
call
jl
ret
out
ja
cmp
dec
dec
dec
jle
js
adc
mov
jns
mov
or
pop
scas
or
dec
pop
lods
fdivrs
imul
pusha
adc
add
dec
adc
or
jle
and
mov
test
test
sub
mov
push
jae
mov
cmp
nop
in
int
jne
daa
in
xor
mov
insb
adc
test
shr
in
fbld
stos
inc
int
add
das
fsin
stos
inc
cmpsl
cmp
mov
xchg
push
sbb
inc
addb
pop
ss
in
mov
xchg
cmp
mov
push
addr16
out
test
ret
lods
scas
push
jle
movaps
ret
jae
jb
sahf
sbb
or
and
bound
mov
xor
dec
jp
dec
out
mov
and
repz
ficompl
je
mov
xchg
cmp
xchg
xchg
sub
cmp
sti
adc
inc
sub
jge
jl
pushf
inc
mov
mov
icebp
jge
std
mov
shrb
daa
inc
stos
insl
mov
mov
cwtl
rolb
scas
and
pop
sbb
in
jae
mov
pop
movsl
sub
mov
cmp
xchg
dec
cmp
stos
mov
add
jnp
pop
lret
popf
outsl
pop
sbb
lahf
dec
push
jmp
xor
mov
out
push
arpl
mov
sbb
jmp
out
dec
push
faddl
orl
cmpsb
lods
xor
push
or
dec
pop
adc
leave
push
insb
test
test
mov
cmp
and
jb
add
cmp
js
das
mov
mov
imul
xor
ficoml
mov
test
jbe
lods
test
fstpl
mov
push
cmp
add
and
xchg
ficoml
ja
rclb
call
jmp
popf
fnstsw
es
mov
les
outsb
mov
xor
hlt
xchg
out
push
push
out
loope
add
aad
loopne
xchg
in
gs
jmp
inc
bound
js
jp
repnz
outsl
test
xchg
adc
add
or
push
fsts
cmp
jbe
mov
jge
pop
cmp
jae,pt
in
iret
gs
pusha
mov
jle
push
xchg
ret
out
jmp
outsl
xchg
shrl
arpl
in
push
sahf
nop
scas
jge
pop
push
and
add
jbe
mov
sbb
enter
shll
xor
test
lock
insl
mov
dec
jno
popa
les
adc
cmpsl
test
ret
dec
test
insl
xchg
imul
icebp
mov
sbb
push
sti
mov
add
adc
sbb
shrb
sbb
cmp
jp
xlat
adc
int3
pusha
ljmp
or
mov
jo
mov
sbb
mov
pop
fsubs
cmp
in
push
xchg
clc
cmpsl
push
xor
inc
aaa
rclb
pushf
in
xlat
dec
arpl
or
rol
cli
sbb
ljmp
sub
xor
aas
cli
mov
in
movsb
xchg
cmp
out
push
fsubrl
lds
or
or
jg
scas
xor
push
pop
or
jge
dec
mov
mov
xchg
inc
lcall
jg
sub
popf
cmp
fdivrp
xchg
stos
fldl
sub
cmp
sub
mov
loopne
push
ljmp
and
fcoms
pusha
sbb
imul
inc
mov
pop
push
aas
mov
je
insl
lea
add
sahf
push
ret
movsb
std
paddd
or
push
push
in
stc
xlat
jle
cmp
inc
cmp
cli
push
xchg
out
mov
lods
and
push
ret
adc
mov
in
sub
jnp
adc
xchg
xor
cmp
inc
dec
bound
sub
cmc
scas
inc
dec
arpl
jno
in
cmpsl
sub
jo
iret
sbb
fcomps
jb
inc
lahf
jb
sbb
daa
or
push
cmp
or
pop
fisubrl
and
inc
movsl
lods
adc
xor
js
dec
mov
push
loop
jge
and
inc
mov
lods
inc
push
cmpl
fs
fs
out
mov
movsb
lods
es
dec
inc
jbe
xor
cli
adc
mov
jae
loopne
xchg
out
jns
shrb
and
xchg
fs
pop
lock
les
push
gs
mov
push
xchg
pop
cmp
sub
mov
ret
inc
std
sub
jae
loop
ljmp
inc
aas
jae
shll
xchg
clc
sbb
jl
insl
mov
and
outsb
pop
push
dec
movsb
adc
sbb
mov
or
in
cmp
lahf
out
xchg
pop
aam
mov
xchg
lock
movsb
adc
std
pop
nop
insl
in
jno
and
dec
push
jne
fcom
adc
mov
sub
cmp
dec
ljmp
lods
jmp
jl
add
fistl
fistpl
jle
movsl
shlb
sub
lahf
bound
cmp
xor
aaa
fisubs
loop
movsb
mov
popa
pop
xor
int
cltd
aas
icebp
je
add
mov
push
pop
xor
xor
xor
cmpsl
int
icebp
mov
clc
add
mov
add
xchg
or
xchg
lret
mov
add
out
cmp
dec
stc
mov
cmp
enter
jg
bound
adc
xchg
mov
pop
pop
mov
add
push
popl
test
out
out
fnstsw
pushf
adc
test
mov
imulb
xor
inc
int
lock
lret
mov
dec
in
push
lods
pop
inc
aaa
lock
fdivp
mov
imul
loop
popa
int3
std
push
mov
inc
pop
xorl
pop
int
jmp
js
cmp
js,pn
lea
idiv
pop
sub
cli
loopne
pop
testl
sbb
aaa
jle
jne
idivb
mov
out
ud1
test
repnz
jae
mov
out
and
dec
insb
pop
push
xchg
lcall
adcl
mov
dec
loopne
jo
in
sbb
push
dec
std
inc
cwtl
mov
pop
negb
xchg
xor
inc
addb
jo
aad
loopne
pop
es
jl
aas
dec
pop
and
pop
arpl
out
dec
mov
xchg
jb
xor
js
outsb
shlb
jb
icebp
adc
pop
or
insb
rcll
test
mov
jl
inc
fsubp
std
pop
mov
hlt
mov
scas
jmp
std
lods
mov
hlt
es
stos
or
ja
adc
cmp
arpl
sarl
mov
pop
inc
mov
ss
mov
stos
mov
nop
jl
push
and
push
icebp
psubusw
mov
xchg
mov
out
add
add
pushf
mov
out
mov
and
and
cmp
repz
push
mov
popf
stos
or
and
mov
push
rcrb
je
add
int
je
shlb
xchg
es
fdivrs
and
aad
inc
js
cld
aad
test
cmpsb
push
fs
movsl
repnz
sar
mov
push
sarl
push
aam
int3
cmp
and
push
fiadds
sahf
mov
aam
add
aas
mov
inc
ret
dec
jnp
mov
cmp
sbb
mov
push
daa
out
push
sbb
pop
mov
dec
into
dec
faddl
test
pop
sub
xchg
adc
nop
loop
mov
sub
outsb
fs
pop
dec
pop
lret
rorl
int
inc
mov
jno
aas
add
or
sbb
jnp
xchg
in
inc
mov
pop
subb
cltd
popa
mov
or
ret
in
int3
mov
mov
jnp
aas
and
inc
sub
les
mov
mov
sahf
fwait
jnp
push
push
fwait
adc
dec
sbb
loop
int3
mov
dec
push
ffree
repz
mov
lea
push
int
insb
mov
mov
clc
rcrb
es
shl
xchg
out
movsb
enter
inc
push
pusha
in
inc
popa
mov
and
ds
lods
pusha
popf
gs
sub
lods
movsl
lds
out
xchg
aaa
inc
rcr
add
jmp
add
cli
adc
and
les
imul
or
push
adc
adc
in
sbb
or
mov
xor
aas
rcrl
cmpsb
mov
mov
pop
mov
push
into
inc
or
jmp
pop
scas
arpl
mov
in
jo
lret
test
pop
aam
sub
pop
mov
and
lock
adc
lahf
into
lret
cld
jo
out
lods
mov
mov
xchg
or
inc
push
add
cmp
push
stc
lea
mov
cmpl
jno
in
jl
cli
mov
jae
insl
stos
arpl
sbb
es
push
sbb
mov
fcmovu
mov
into
dec
rcrb
pop
mov
scas
dec
stos
push
in
push
cltd
pop
sti
call
fistpl
xchg
test
out
sub
pop
das
fstpt
inc
clc
xor
mov
mov
hlt
ret
outsb
xor
ret
and
cld
sbb
cltd
nop
xlat
xorps
push
divb
ds
xor
or
leave
decl
jmp
popa
pop
cmp
xchg
dec
lds
lock
push
mov
xchg
daa
push
cmp
xchg
push
xchg
mov
arpl
jns
dec
divb
movsb
sbb
out
leave
insl
fnclex
mov
xchg
adc
mov
push
xchg
adc
mov
xor
cmp
loope
bound
test
jle
sub
arpl
sub
mov
ljmp
andl
sub
cmp
outsl
fs
sbb
jg
insl
ss
or
shrl
imul
jmp
jne
pop
gs
and
inc
cmp
daa
inc
jo
jmp
pop
or
arpl
insb
std
adc
or
fisubrl
dec
dec
xor
repnz
lahf
sbb
sub
xchg
push
or
adc
or
push
push
sahf
sar
pop
shll
mov
mov
es
add
outsb
jmp
cmp
arpl
dec
andl
jmp
jbe
mov
push
pop
stos
pop
idiv
out
cmp
aam
movsl
repz
int
xor
adc
push
adc
push
sbb
lahf
in
pop
insb
and
dec
movsb
dec
jnp
dec
sbb
push
push
sub
int
adc
leave
out
mov
not
cmp
jecxz
sbb
xor
jbe
fcmovne
test
rclb
loopne
sbb
mov
repz
movsl
stc
pop
xchg
rcl
jmp
xor
sub
xchg
lods
or
pop
add
data16
lods
dec
mov
push
pop
mov
or
jmp
xor
repz
mov
push
mov
dec
mov
stc
ljmp
jae
jp
or
nopl
mov
scas
inc
sbb
jl
sbb
popa
push
adc
and
es
cld
mov
sbb
cmpsb
inc
sub
dec
inc
iret
mov
mov
cmpsl
fwait
neg
movsl
loop
mov
mov
mov
imul
sysenter
adcb
lahf
sbb
mov
and
pop
lret
push
repnz
cs
stos
in
fcmovbe
jb
and
loop
push
push
dec
push
in
push
lahf
mov
dec
nop
roll
or
jae
andb
je
in
mov
mov
push
das
mov
adc
add
pop
stos
add
mov
inc
into
ret
insb
inc
xacquire
fcomip
mov
adc
lcall
add
inc
jae
mov
inc
mov
popa
mov
jg
imull
mov
inc
imul
daa
fcompl
inc
jne
mov
out
pop
out
pop
and
cmpsb
push
xor
ja
iret
or
mov
xor
scas
mov
xchg
jecxz
cwtl
aas
cmc
mov
cmp
ficompl
mov
xor
xor
pop
push
adc
ds
rcr
xchg
or
mov
xorl
dec
ret
xor
mov
mov
testb
or
ss
adc
pop
pop
push
loopne
cmc
daa
pop
out
inc
mov
rcl
movsb
subb
popf
push
mov
cmp
dec
fbld
add
inc
mov
cmp
cmp
ja
sub
push
pushf
xchg
das
nop
jo,pn
add
in
add
push
jle
movsb
in
imul
mov
int3
into
std
je
sub
ds
xchg
data16
push
cmp
clc
mov
sbb
xchg
jmp
jae
negb
sbb
mov
push
pop
bound
and
wbinvd
mov
pop
jp
mov
aas
inc
push
dec
imul
fs
mov
lea
or
add
xlat
out
mov
insl
cwtl
mov
cmp
das
rcll
mov
cwtl
push
push
out
jp
jmp
mov
mov
inc
enter
dec
xchg
mov
adcb
ret
xor
cli
push
sub
bound
xchg
mov
dec
mov
pop
jbe
inc
call
loop
mov
pop
dec
mov
add
arpl
fimuls
pop
lods
mov
cmc
xchg
inc
ds
jg
fistpll
fildl
adc
mov
add
mov
call
pop
adc
adc
xchg
adcl
in
out
hlt
pop
cmp
push
jmp
pop
iret
or
xchg
out
mov
xchg
xor
mov
std
insl
insb
bound
nop
cld
adc
jns
inc
scas
xor
jecxz
adcb
xorl
icebp
mov
stos
jecxz
mov
loop
adc
adc
sub
insb
pop
and
popa
xor
push
sbb
scas
sarb
cmpsb
sbbb
pop
fstpl
cmc
cltd
adc
ja
push
hlt
iret
js
lcall
mov
jmp
jo
in
mov
mov
divb
xor
rcl
mov
and
hlt
mov
dec
popf
lret
mov
or
mov
or
insl
xchg
ds
inc
insb
lahf
cmpsb
jge
jo
ror
js
xor
pop
dec
sub
mov
mov
push
fstl
mov
negl
cld
jnp
push
add
xor
xor
pusha
clc
push
cmpl
push
sti
jl
sbb
sub
loop
cli
jecxz
inc
lods
daa
loop
push
stos
add
rcrl
jg
pop
mov
mov
iret
maxps
mov
stc
pusha
fisubs
sbb
cmp
in
notl
ss
cmp
inc
cwtl
mov
jmp
or
fnsave
xchg
jae
mov
fbld
mov
xchg
xchg
fiaddl
mov
arpl
ds
pop
xchg
mov
aam
mov
and
mov
lock
out
jae
pop
fwait
push
sbb
jl
jle
dec
mov
lock
mov
mov
xlat
int
cmp
push
stc
sub
test
adc
lret
mov
imul
jecxz
call
cmpps
adc
sahf
inc
add
xchg
lds
xor
jmp
fistps
sti
clc
jo
pop
dec
mov
fmull
cmp
cwtl
add
sbb
mov
test
cwtl
btr
jmp
fistps
ljmp
imul
and
lcall
lahf
jae
adc
std
push
rclb
js
aam
out
push
out
mov
mov
push
push
mov
dec
mov
pop
mov
ret
ret
fnstcw
jmp
jns
push
and
sbb
jp
inc
mov
adc
mov
pusha
sahf
push
adc
sbb
add
lcall
pop
pop
lahf
cld
fnstcw
out
test
mov
xor
mov
ljmp
rcll
popf
lret
mov
sbb
mulb
out
dec
dec
xchg
nop
sbb
cmp
xor
sbb
or
arpl
jno
fimuls
int
fnstsw
scas
jo
std
dec
inc
dec
mov
inc
mov
jnp
mov
dec
push
js
mov
imul
xorl
das
int
cmp
das
sbb
mov
cvtps2pd
loop
stos
and
mov
mov
sub
ret
rcrb
std
pop
fsts
sbb
inc
out
push
cmp
mov
bnd
push
enter
loop
stc
in
sub
jle
insb
enter
js
push
ffreep
jne
cs
pop
mov
add
mov
shrl
mul
rcll
add
sub
lret
das
add
imul
stos
lods
incb
xlat
jp
in
dec
mov
sub
div
and
dec
pop
xor
negb
lods
inc
jecxz
lods
mov
add
xchg
sti
push
sub
mov
cmpsl
xlat
sub
pop
imul
inc
stos
ret
mov
andw
adc
lret
std
loope
test
popf
add
lcall
mov
cmp
cmpsb
push
jns
sahf
int3
push
test
scas
inc
jno
shll
aam
push
jae
jno
je
pushf
inc
rcrb
adcl
pop
mov
sub
jg
subb
hlt
sub
cwtl
icebp
jo
jg
jae
fcoml
lods
jae
and
outsl
nop
es
jge
and
push
pop
insb
es
jbe
movsb
cltd
and
ss
out
mov
xor
cmp
dec
pop
add
mov
inc
jo
ficomps
fstpl
sub
mov
sub
pop
popf
fisubs
mov
mov
sub
fstp
sub
and
xchg
xchg
nop
xor
test
push
gs
push
push
pop
push
cs
imul
fiadds
cmp
jecxz
mov
out
pop
pop
dec
insb
cli
sahf
in
lds
not
insl
sub
mov
dec
popa
push
mov
cld
inc
sub
cmpsl
insl
jbe
out
pusha
or
in
jle
in
mov
cmp
push
push
xor
dec
dec
aam
shl
pop
sbb
pop
test
cmpsl
and
sbb
aam
in
mov
push
ror
mov
mov
mov
xor
xchg
lcall
jge
sub
cmpsb
fadd
and
inc
outsb
xchg
int
les
imul
lahf
test
sbb
push
fidivrs
push
inc
orb
xor
xlat
pop
lret
je
adc
push
inc
cmp
outsl
inc
mov
pop
xor
subl
imul
mov
cmp
add
xor
jecxz
sbb
xlat
mov
hlt
adc
jb
sub
aaa
jmp
pop
rcl
je
add
out
mov
xor
insl
pop
mov
out
sbb
or
call
dec
sub
cmpsl
into
mov
jmp
cwtl
js
jle
js
sbb
pushf
ret
inc
or
jbe
push
jp
sbb
push
and
push
and
mov
mov
je
test
aam
ret
nop
cld
in
ss
dec
insb
cwtl
mov
inc
cltd
fiadds
add
xor
sub
sub
inc
dec
jp
lds
daa
fistl
dec
addb
xchg
insl
and
mov
sbb
movsl
jl
cmp
push
loop
fwait
movsl
aam
in
jb
and
cmp
pushf
fsubl
fstpl
iret
addr16
mov
sbb
xor
arpl
dec
scas
ret
jae
mov
mov
out
sbb
aam
mov
ret
cltd
inc
mov
mov
faddl
fwait
test
adc
jae
inc
mov
ffreep
sub
and
xchg
mov
bsr
int
insl
test
and
mov
out
jo
mov
in
adc
pmulhuw
ljmp
and
shrl
or
into
repz
mov
popw
cmpl
add
pop
add
shll
out
and
fwait
sbb
sbb
jns
mov
or
push
mov
orb
push
mov
xchg
cli
push
xchg
call
bound
mov
cltd
in
mov
jp
out
inc
push
aas
cwtl
pop
or
fadds
stos
ja
push
mov
inc
or
push
aad
in
pushf
push
jg
add
int3
cld
jne
popa
mov
shlb
mov
sub
adc
and
add
imul
sub
jecxz
jecxz
cwtl
shr
aas
push
cmc
mov
xor
lods
cld
cmpsl
scas
fwait
outsl
in
aad
movsl
out
and
push
cs
lock
cwtl
subb
adc
push
mov
popa
inc
mov
jne
addb
leave
in
pop
in
inc
adc
mov
jb
popl
jp
mov
ds
mov
push
jne
daa
adc
call
adcl
mov
pop
test
in
cmp
jl
jl
jg
mov
ljmp
test
pop
xor
das
rclb
cld
clc
mov
cmp
roll
sbb
in
call
movsl
add
mov
and
imul
cld
mov
test
daa
pop
fdivrs
mov
mov
pop
lret
dec
cwtl
push
cmp
xor
xor
ficoml
push
xchg
lcall
pusha
pop
pop
mov
arpl
add
jno
jo
sub
xchg
fiadds
imul
sub
ret
dec
cmp
mov
fucomip
loop
mov
pop
jno
in
inc
and
push
push
fistpl
pop
fsubrs
cmp
xchg
cltd
jae
mov
cmpsl
shrb
fnclex
outsb
xor
outsl
mov
hlt
adc
xchg
dec
jno
jnp
or
sub
in
or
mov
or
fmull
adc
fcomp
add
xchg
cmp
nop
fildll
hlt
int
or
jg
cld
lcall
inc
cld
add
or
rcll
push
cltd
jb
or
mov
das
setbe
push
push
stc
dec
in
fisttpll
dec
es
add
push
add
cmp
ret
int3
mov
hlt
mov
jmp
cmpsl
test
lret
mov
push
fldcw
repz
ret
es
popa
icebp
clc
lea
xchg
adc
mov
jl
xlat
ja
negl
inc
jg
cmp
or
xor
and
add
jno
negl
mov
outsb
mov
mov
add
data16
sbb
push
dec
hlt
daa
push
in
mov
rcr
lcall
pop
imulb
fiaddl
mov
xor
out
loop
and
fmuls
xor
sbb
lock
shl
jp
mov
mov
xchg
pop
daa
test
test
and
loopne
insl
push
add
mov
jbe
push
mov
jg
inc
add
mov
adc
sahf
repnz
add
ficoms
and
push
mov
cltd
push
sub
fistps
setno
mov
mov
xchg
pusha
add
test
out
and
sub
sub
jle
es
adc
enter
jo
add
push
xchg
xchg
or
test
sti
or
cli
cld
fisttpll
jne
rclb
mov
cwtl
jl
rclb
dec
inc
inc
cmpsl
jge
xchg
jg
xor
dec
in
add
cmp
pop
xorb
push
push
or
and
sub
mov
fldl
xchg
inc
hlt
cld
or
rdpmc
outsl
out
mov
cmp
and
or
push
lds
pop
or
mov
or
adc
cltd
sbb
jle
add
mov
jmp
pop
aad
mov
and
test
add
mov
xchg
jo
dec
out
mov
xchg
je
or
testl
dec
scas
loopne
xchg
push
and
and
test
xchg
mov
ffree
lret
loopne
xchg
je
loop
in
fisubs
insb
addb
xor
loope
mov
jmp
cmpsb
lods
ret
cmc
loop
jmp
les
dec
push
adc
pop
stos
pop
leave
icebp
test
scas
and
lret
adcb
call
outsl
jmp
push
mov
jb
pop
xor
lea
in
les
sub
ficoms
lea
mov
dec
add
lock
rclb
mov
sub
adcl
or
xchg
and
call
cltd
or
pusha
mov
repnz
jns
cli
int3
mov
jmp
std
cltd
fwait
fs
push
pushf
xchg
icebp
aas
mov
fnstcw
fistpll
adc
push
insb
jbe
lahf
repz
mov
enter
cld
iret
cmp
sub
xlat
inc
inc
push
addb
dec
jge
lock
jbe
fs
lret
jl
js
pop
mov
jo
movsb
or
cwtl
cld
xchg
sub
dec
pop
adc
pop
lea
xchg
int
fisttps
rcr
cld
or
ficoms
jne
fsubrl
jns
dec
sub
xchg
icebp
mov
leave
rcrl
lods
mov
lods
cmp
push
pusha
daa
xchg
ljmp
clts
mov
mov
cmpsb
push
icebp
aad
loopne
cmpsl
test
ds
xchg
pop
mov
jecxz
mov
cwtl
shlb
mov
dec
xchg
repz
xchg
ljmp
pop
jge
lret
mov
jp
cmc
ljmp
inc
out
mov
lahf
mov
pop
add
cmp
js
roll
js
sub
adc
aaa
popf
add
cmc
add
aaa
add
push
sbb
arpl
mov
sbb
shll
enter
vphaddubd
push
inc
inc
mov
pop
iret
imul
je
cmpsb
inc
adc
adc
add
push
mov
lods
fidivs
stos
mov
pop
or
jno
popa
jg
pop
pop
adc
pop
xor
out
in
mov
stc
mov
sub
gs
pop
movsl
jge
stos
mov
data16
in
jge
lds
sti
xor
cltd
sarb
dec
push
push
push
dec
adc
insb
shll
aam
out
and
jg
repnz
mov
jnp
mov
movsl
mov
rorb
mov
outsl
test
xor
and
ds
sarl
sbb
bnd
pop
mov
movsl
fs
push
xchg
mov
cld
and
inc
cmp
or
out
inc
xchg
adc
xchg
xchg
cmp
fstps
cltd
push
cwtl
std
mov
sbb
scas
cmpsl
mov
lahf
push
xor
jne
ret
xor
xor
test
jbe
out
scas
shrb
xchg
std
pop
jns
mov
sub
xor
lcall
stos
jp,pn
pop
mov
cld
jle
mov
cmp
leave
jecxz
jae
sub
pop
jbe
push
xor
add
push
cld
aas
xor
pop
adc
paddusb
xchg
mov
cmp
repnz
mov
out
shll
in
lret
push
mov
int
cmovl
lret
jg
inc
aaa
jbe
mov
rcll
stc
test
dec
andl
push
shll
mov
mov
pusha
arpl
adc
repz
incb
dec
and
fstpt
andb
cmpsl
out
sub
cld
ffreep
dec
jecxz,pn
sahf
push
rcrl
adc
xor
in
mov
inc
xchg
xchg
stos
les
sbb
mov
fnstcw
inc
rolb
inc
testl
or
bound
out
testl
lret
frstpm(287
aad
filds
and
inc
sbb
dec
test
lea
or
js
xchg
insb
mov
in
fistps
or
shrl
jo
add
and
xor
cmpsl
and
push
fidivrs
mov
cltd
fsubrl
adc
imul
cld
test
mov
mov
xor
popa
iret
andl
mov
sbb
cmpsb
popf
es
aaa
imul
repnz
stos
cmp
jne
sarb
aam
loopne
enter
and
and
jl
mov
or
inc
cmp
jnp
and
shlb
pop
cmc
mov
jle
dec
jbe
push
pushf
or
push
cmp
scas
or
hlt
sub
outsl
arpl
cmp
test
pop
out
imul
sahf
in
lret
dec
adc
out
test
and
mov
sti
cmpsl
mov
ret
inc
jo
shrl
or
loop
jne
adc
or
inc
xchg
and
inc
sbb
add
mov
cli
push
lret
pusha
add
add
les
or
in
cwtl
lods
mov
sub
adc
daa
mov
sub
pop
mov
and
call
fs
in
cmpsb
xor
mov
jp
loop
jno
mov
xor
adc
stc
and
pop
pop
mov
add
jmp
mov
arpl
cmp
stc
lahf
in
pop
test
pop
adc
cmc
bound
mov
fldt
and
inc
cs
movsb
xor
fmull
push
roll
pushf
out
lret
jge
in
push
adc
mov
shlb
sbb
inc
or
mov
dec
les
or
push
pop
add
call
das
mov
out
call
dec
push
and
movsl
sub
push
leave
adc
sarl
cmp
mov
test
and
mov
cltd
push
sbb
sbb
mov
jae
mov
ss
add
pop
movhps
jmp
xorl
in
ret
jbe
xchg
dec
mov
mov
cs
pop
imul
lea
sbb
in
mov
sub
mov
cmc
clc
xlat
ffreep
jae
dec
inc
jg
dec
bound
add
mov
decb
cli
or
and
mov
or
addr16
popf
and
mov
js
jle
push
icebp
out
mov
cmp
dec
mov
lods
xchg
bound
lcall
xor
setne
cmp
adc
and
sub
add
stos
or
int
mov
pop
movsb
xchg
sbb
hlt
mov
repz
aam
rorl
jmp
add
fisttpl
movsl
imul
dec
mov
push
sbb
dec
and
lret
inc
jno
adc
xchg
pop
jl
push
call
jmp
lock
or
divb
mov
dec
dec
ljmp
and
dec
lods
pop
cwtl
jg
xchg
adc
and
aad
psubsb
in
adc
ja
inc
out
aam
sbb
fwait
repz
push
jo
jbe
outsl
xchg
dec
hlt
fistpll
adc
jno
jecxz
xor
cltd
add
sub
imul
mov
add
cmp
pop
push
lods
pop
sbb
leave
das
pop
aam
and
push
mov
sbbl
lret
pop
cmp
lret
sub
movsl
pop
frstpm(287
push
mov
fsubp
icebp
fldl
maskmovq
testl
mov
shll
mov
aad
leave
ret
add
jecxz
or
mov
jp
add
push
aad
xchg
shr
push
call
pop
aam
mov
fwait
or
idivb
dec
rorl
imul
lea
dec
jo
jg
in
mov
xchg
pop
gs
js
cmp
adc
outsb
loopne
xchg
test
pop
mov
divb
xchg
inc
mov
loope
out
mov
jg
pop
pop
mov
adc
mov
repz
xchg
lret
xor
in
push
mov
lods
xchg
sub
or
pop
sahf
pop
mov
cmc
push
lock
icebp
and
stos
dec
mov
add
js
xchg
adcb
fistps
cmp
fwait
out
jg
icebp
test
mov
pop
push
push
ret
sbb
lds
add
cli
jno
or
repz
mov
dec
loope
ret
dec
std
lret
arpl
in
pop
dec
xchg
and
inc
pop
clc
dec
cmpsb
fisubrs
shl
imul
jae
push
iret
vpsrld
jmp
negl
pop
add
mov
bound
mov
inc
mov
loope
cmovp
pop
push
mov
out
scas
shrl
mulb
and
rcr
or
or
mov
lea
xchg
mov
inc
hlt
and
mov
aad
or
rorb
ja
jb
xor
lods
xchg
cld
mov
jo
cli
sbb
pop
out
cld
push
cs
pop
lods
jb
mov
stc
jle
or
sbb
jnp
imull
outsl
push
filds
sub
dec
fldcw
pop
fidivrs
push
dec
push
sub
lret
sub
mov
adc
mov
cld
xor
andb
add
addr16
and
aad
pop
push
icebp
jmp
loop
sti
lret
jae
push
jo
xchg
adc
add
push
mov
or
clc
test
stc
or
fscale
mov
ja
in
jl
stos
sbb
push
divb
out
jp
xchg
sub
scas
push
imul
xor
xchg
das
sub
shlb
push
cld
aam
neg
adc
jge
dec
push
or
aam
cli
jmp
xchg
cmpsb
push
out
mov
icebp
leave
mulb
inc
push
pop
outsl
dec
call
push
jg
sub
cltd
addr16
cmp
outsb
cmp
shr
xchg
fadd
inc
dec
lock
jmpw
push
cmp
aaa
pop
hlt
in
pop
adc
adc
fwait
mov
dec
clc
stos
xor
xor
jns
vlddqu
xor
mov
pop
aam
insb
add
cmp
mov
pop
mov
inc
jp
and
ss
enter
leave
mov
mov
sti
movsb
cld
je
subl
sub
cmp
loopne
stos
cltd
ret
xor
xor
scas
mov
cmp
xor
std
std
dec
nop
imul
and
not
adcl
mov
and
or
js
scas
fdiv
add
and
add
mov
dec
rolb
dec
ret
add
jp
bnd
fidivl
sti
push
loope
insl
adc
outsl
out
aad
shll
sub
in
repnz
stos
and
or
push
adc
frstor
mov
fcompl
hlt
ss
jg
stos
jmp
inc
mov
dec
stos
repz
push
cmp
xchg
imul
sub
inc
and
xor
test
jl
add
fwait
cmpsl
push
xor
aad
xchg
cmp
repz
imul
cs
mov
aaa
sbb
lcall
fidivs
xchg
add
fwait
sub
test
enter
in
enter
or
dec
cld
insb
push
xchg
imul
fldenv
xchg
daa
fwait
cld
arpl
fwait
dec
fwait
jl
adc
cmp
dec
je
mov
mov
push
jnp
and
in
scas
adc
aaa
xchg
je
mov
sub
fstpt
inc
nop
mov
mov
and
sbb
lock
mov
shr
movsl
out
setno
int3
les
test
push
or
push
scas
sub
xor
xchg
sub
or
mov
loope
lods
jl
jecxz
xchg
ret
add
mov
sub
push
aaa
mov
sub
dec
pop
movsb
ficompl
cld
or
sbb
mov
repnz
adc
sub
add
jnp
cmpsb
addr16
aas
popa
dec
xor
adc
stc
push
xor
xchg
into
add
dec
dec
test
xchg
mov
ljmp
jb
data16
ret
mov
or
repz
nop
mov
jno
push
fs
fisubrs
mov
ljmp
js
cld
sub
or
mov
rcrl
push
mov
push
pop
ret
std
push
pop
sub
clc
add
fucomp
cmpsl
orb
push
in
stos
cmp
mov
jmp
inc
cli
sbb
rol
scas
inc
sbb
or
adc
sub
mov
pop
xor
cmp
loop
ds
jo
add
insb
rolb
and
stc
add
add
dec
xchg
sub
test
cld
test
xchg
xor
pushf
out
lcall
out
in
xor
fmuls
lahf
int
int3
divb
fildl
xchg
shll
sub
mov
jae
jae
inc
jge
xchg
mov
stos
or
mov
arpl
pop
mov
sbb
jno
and
adc
cmp
fsubrp
pop
stos
pop
aad
ret
or
xchg
les
and
loopne
movsl
rcll
pop
add
mov
xchg
cmp
inc
adc
dec
insl
xchg
pop
xor
lock
and
ss
cmp
call
dec
mov
gs
call
pop
bound
push
push
push
push
pop
mov
ret
scas
push
fmul
lcall
or
push
xor
mov
jno
sub
loope
shlb
add
cmp
test
and
lods
xor
push
jp
call
add
btr
jnp,pt
les
adc
sbb
bound
push
into
push
mov
cmc
xchg
test
in
test
sbb
mov
mov
call
and
adc
leave
addr16
daa
push
movsl
outsl
jnp
data16
mov
inc
inc
test
dec
loop
push
jb
out
and
out
push
mov
pop
scas
and
or
sub
cs
stos
fmul
pop
adc
scas
mov
fists
cwtl
lods
icebp
sub
jle
cltd
cmp
sti
jecxz
adc
sub
jbe
pusha
sub
fcmovb
fimuls
lret
icebp
mov
das
pop
stc
mov
adc
mov
xchg
fsin
adc
dec
mov
scas
and
mov
popw
cli
add
loop
cmpsb
call
inc
mov
push
or
inc
ja
mov
lds
mov
sbb
jle
jge
add
test
mov
jp
les
push
dec
inc
rcr
inc
mov
sbb
fwait
jb
shll
test
stos
xchg
sbb
js
jno
imul
leave
cmp
jns
outsb
cwtl
ret
test
inc
in
rcl
pop
inc
xchg
mov
dec
mov
xlat
testb
mov
iret
cmpsb
aaa
jns
aaa
ret
cmp
push
enter
and
cmp
fisubs
loopne
cwtl
cmp
jp
xlat
jb
xchg
lock
ljmp
dec
movb
add
adc
popf
mov
pop
or
lods
xchg
push
ja
jnp
mov
lods
jp
or
cmovne
in
in
icebp
cs
push
int
pop
hlt
pusha
loop
adc
xor
adc
add
dec
outsl
dec
adc
and
or
hlt
jbe
test
ds
jl
out
int
rcrb
ror
inc
insb
jns
das
cmpsb
outsl
inc
inc
movsb
inc
loopne
pop
push
div
adc
and
cld
sub
ljmp
mov
out
scas
or
imul
mov
inc
pusha
or
stc
mov
ret
mov
sbb
pop
jo
or
je
sahf
add
add
inc
out
xor
sbb
das
in
xchg
sbb
in
mov
mov
jmp
xchg
xor
out
pop
adc
adc
inc
add
orl
mov
sub
mov
jge
test
popa
aas
dec
mov
jecxz
sahf
andl
jmp
push
sti
gs
xchg
les
pop
lret
imul
inc
push
test
int
mov
scas
mul
adcb
lds
frstor
xlat
ds
imul
rorl
sbbl
inc
pop
xor
lods
push
cwtl
and
and
jno
inc
or
and
iret
ljmp
xchg
mov
aad
sub
lahf
mov
test
mov
outsb
sub
nop
sbb
jp
mov
jno
mov
test
mov
add
and
pop
cld
fistpll
jo
add
xchg
push
cmpsb
loopne
out
arpl
int3
lcall
inc
hlt
xchg
rclb
adc
and
mov
mov
adc
dec
cmp
negb
add
cmp
pop
outsl
incb
mov
and
jl
outsb
adc
aaa
mov
push
push
and
mov
mov
mov
inc
sarb
div
mov
pop
ljmp
dec
scas
sar
mov
cmpsl
pop
mov
pop
imul
xchg
imul
xchg
xchg
test
or
popa
les
add
pop
enter
lcall
inc
and
inc
movsb
pop
mov
xchg
aam
aam
std
dec
repz
sub
push
mov
pusha
test
es
pusha
shrb
loope
test
popa
or
adc
repnz
fmulp
es
xor
stc
pop
or
fistps
nop
sbb
lods
sarl
jb
or
jecxz
in
aas
in
xor
outsl
imull
sub
fadd
call
xchg
aaa
or
cwtl
clc
in
sub
jb
fiaddl
add
aas
out
push
rcl
lock
add
gs
sbb
mov
xchg
out
loopne
dec
xor
cmpb
sub
stos
xchg
xor
fimull
sti
mov
push
mov
or
in
push
in
fsubs
xor
fs
in
sbb
ret
pop
xchg
mov
lret
jmp
aam
push
mov
xor
mov
push
push
cmpsl
jle
xchg
sar
jl
in
mov
pop
popf
add
add
out
cwtl
push
cmp
addr16
dec
jns
ss
dec
pop
lea
call
cwtl
mov
inc
addr16
loopne
sub
pushf
push
fadds
cmp
bnd
push
imul
test
and
mov
cs
std
xchg
stc
stos
icebp
js
xor
dec
mov
mov
mov
data16
jl
insb
out
mov
xor
lret
pushf
sbb
adc
or
cmpl
and
mov
lods
mov
test
incb
pop
xchg
daa
mov
sbb
or
or
clc
ljmp
mov
xchg
sarb
mov
sbb
lret
mov
fsubrp
sarl
dec
cmp
and
rcll
or
or
xchg
mov
jae
ja
pop
in
jnp
mov
jmp
sub
rorl
push
mov
out
fsub
push
test
stos
sub
and
inc
lods
push
sahf
imul
outsl
sbb
dec
cli
sub
pop
cmp
arpl
dec
mov
sbb
mov
push
mov
mov
xor
cmp
cld
mov
and
nop
out
push
fisubrs
cmc
xor
mov
out
adc
xchg
fcomps
pop
xor
fwait
sbb
cmp
lea
mov
or
pushf
push
addl
cld
cmp
andl
shll
ds
cmp
mov
jg
dec
out
sarb
fcoms
pop
xchg
sub
mov
imull
ret
mov
mov
push
enter
inc
rcrl
sbb
cmpb
cmp
mov
cmpsb
add
cld
push
inc
lock
pop
mov
jge
mov
adc
mov
int
je
test
mov
out
jle
xor
cmc
mov
movsl
std
sbb
shlb
pushf
inc
xor
xor
aas
xchg
aam
push
les
fcomps
fisubrs
and
push
jb
ret
dec
scas
fsubl
orl
jbe
sbb
pop
pushf
lods
rcrl
sub
rcl
add
imul
mov
clc
jecxz
ror
mov
shr
dec
cli
mov
dec
mov
sbb
adc
dec
aam
les
mov
ljmp
stos
inc
fs
inc
add
lods
icebp
imul
push
cmp
test
jl
dec
dec
dec
imul
fildl
push
ret
lea
xchg
mov
mov
ljmp
or
loop
test
in
mov
test
clc
add
add
pushf
test
bound
int3
or
data16
xchg
mov
push
int3
cwtl
add
pushf
add
dec
pop
mov
ss
mov
or
push
aad
or
into
ds
cltd
movsl
pusha
mov
sbb
ja
lret
pop
stos
mov
xchg
into
loop
loopne
int3
adc
cwtl
jno
xchg
fucomp
add
aaa
subl
andb
xor
cmp
fimull
jne
xchg
pmaxub
xchg
push
adc
cmp
push
or
ljmp
into
push
inc
outsb
push
aad
cmp
addr16
leave
jg
jns
mov
movsl
fcoms
out
lahf
dec
mov
and
mov
stos
sbb
stos
ljmp
xchg
aam
adc
lods
adc
xchg
sbb
jp
or
rorl
adc
push
ljmp
push
fsubr
push
pop
pop
add
fdivs
test
mov
je
cmp
adcl
aaa
das
cmp
and
pop
mov
xorl
push
pop
ja
xchg
fimull
cmp
cld
push
pop
jmp
sub
or
aas
ja
lock
pop
dec
aas
test
jnp
cmp
pop
orb
ret
jno
lock
insl
pop
sbb
jle
pushf
fwait
xchg
jns
mov
mov
xchg
xor
adcl
mov
inc
sub
xor
dec
jb
cld
lahf
mov
sub
sbb
sub
push
dec
aas
inc
popf
incb
and
xchg
bound
roll
fnstsw
js
lods
mov
mov
fildl
aas
fcoml
pushf
xchg
mov
pop
shrl
mov
out
dec
call
mov
inc
test
mov
rcll
call
add
jo
mov
pop
sub
fcompl
push
arpl
inc
pop
es
jo
mov
cmpsl
pop
pop
lahf
aaa
fwait
dec
jl
in
add
and
imul
lcall
jb
lcall
in
add
orb
int
aas
pop
daa
subl
ds
clc
shlb
addr16
aad
xlat
gs
aaa
jmp
xchg
adc
fiaddl
popf
push
pop
out
jp
mov
insl
or
inc
pop
mov
icebp
mov
cmp
jecxz,pt
mov
fs
inc
jbe
subb
adc
jns
push
jecxz
jbe
test
gs
xchg
xchg
mov
in
fistl
jmp
push
add
cltd
push
jae
testb
pop
arpl
xchg
mov
xor
xchg
jne
xchg
sbb
cmp
xorl
push
jle
mov
in
cmp
mov
mov
out
mov
fst
add
sbb
xor
mov
mov
pop
shrb
xor
jo
push
aad
push
loop
xchg
push
ds
adc
addl
jo
cwtl
js
cmc
jge
cmpsl
sbb
data16
clc
add
xchg
xchg
inc
cmp
jmp
mov
jae
xchg
es
shrl
lret
mov
mov
addr16
stos
mov
dec
xlat
call
cmp
pop
int
sub
out
ja
mov
cmp
pop
push
std
in
jne
adc
jp
lcall
dec
sub
mov
mov
ret
jno
rcrb
xchg
mov
sbb
inc
addr16
or
out
and
stos
imulb
mov
nop
adc
jnp
sbb
push
test
mov
mov
adcb
xor
adc
in
jb
or
aaa
lods
sbb
push
mov
sub
push
pop
xor
lods
mov
aaa
mov
cli
sbb
loopne
pop
and
into
jns
sahf
addr16
in
fimuls
rcrl
and
mov
sbb
xor
xor
orb
xchg
dec
lods
aaa
adc
or
leave
ljmp
scas
xor
cmp
cmpsl
shrl
xor
mov
sub
push
fmulp
add
mov
mov
mov
sarb
push
and
decb
sahf
or
dec
xlat
mov
pop
outsb
add
out
orb
or
xchg
jns
mov
icebp
mov
dec
inc
add
movsl
push
pop
xor
jge
in
cli
push
je
or
in
divl
mov
xchg
cmp
mov
into
pop
jl
int3
xchg
and
lods
std
pop
in
pop
mov
pop
jle
dec
push
out
adc
js
pop
adc
repz
mov
divb
jbe
sti
sbb
stc
dec
push
js
jne
rcll
pusha
ret
repz
push
mov
dec
jecxz
sub
push
cmc
call
sti
xorl
ret
xchg
hlt
stos
jecxz
cld
jbe
pop
fstpt
xor
mov
aad
aas
scas
into
out
arpl
dec
loope
mov
lds
push
cmp
fistps
hlt
nop
add
xchg
push
jp
cmp
scas
out
push
das
fnstcw
mov
loopne
aas
mov
subl
push
push
jmp
cmp
pop
xchg
xchg
pushl
or
jecxz
test
dec
outsb
fidivrs
cmpsb
mov
inc
dec
jle
sarb
sub
mov
pop
sbb
repz
push
push
sarb
pop
push
push
rol
inc
in
inc
adc
mov
push
push
sub
pop
ficompl
scas
sbbb
cmc
mov
lods
mov
xchg
mov
cmp
pop
cli
test
pop
bound
push
push
sbb
xor
sbb
testb
and
pop
pop
imul
sbbb
inc
leave
inc
pop
les
fistl
xor
sbb
mull
pushf
test
in
xor
mov
mov
and
loopne
loopne
shl
out
cmp
clc
add
mov
cs
pop
cwtl
jmp
in
scas
je
outsb
push
adc
inc
sbb
pop
sarl
outsl
cmovs
imul
aas
sub
mov
dec
mov
imul
fwait
cmpsl
cltd
testl
arpl
inc
mov
ret
or
cmp
jne
cld
mull
push
dec
cmc
popf
add
mov
in
cmpsl
sahf
mov
or
in
pop
jle
jns
fs
call
mov
xor
add
cmp
mov
fistps
leave
fisttpl
xor
mov
clc
inc
push
int3
ja
lahf
xchg
push
sbb
pop
repz
shll
xchg
loope
daa
daa
inc
cmpsl
sti
hlt
cmp
sbb
mov
push
mov
out
iret
jg
daa
test
jmp
cmp
fimuls
mov
pop
pop
test
nop
cmp
sbb
insl
cmp
loope
pushf
pop
jge
add
gs
pcmpeqd
fcompl
mov
sub
imull
inc
lea
or
sbb
adc
pop
push
aaa
mov
or
mov
jno
or
enter
mov
jno
jmp
aas
jb
mov
or
adc
daa
negb
insl
inc
cmc
cmp
popf
adc
out
lret
mov
or
or
ss
pop
lret
jb
mov
loope
adcb
js
pop
insl
push
mov
add
add
xchg
mov
xchg
pop
in
jl
sbb
shll
shll
inc
push
add
outsb
loopne
andl
pop
iret
ss
rcl
push
cmp
mov
cmpsb
jnp
iret
sahf
or
add
out
out
mov
movsl
xorb
lea
inc
pop
out
pop
sahf
cmp
pop
in
mov
sub
mov
es
stos
xor
pusha
dec
mov
test
add
das
sbb
xchg
lods
sahf
xor
xchg
pop
lock
mov
pop
cs
leave
data16
cld
in
inc
loope
cs
sti
ss
cli
ss
xchg
in
sub
nop
ja
imul
movsl
or
mov
pop
and
divb
pusha
xchg
out
cmp
test
mov
test
sarb
mov
pusha
sbb
xchg
jno
xor
dec
xor
sub
jge
stos
cmpl
adcb
sar
in
imul
addb
inc
mov
push
dec
adcb
dec
rorl
aam
xor
jg
jle
clc
lea
xchg
xor
cld
cmp
pushf
mov
cmp
xchg
pop
fs
mov
mov
cmpsb
mov
push
mov
push
lds
pop
mov
scas
push
in
addr16
adc
sub
das
fistps
arpl
out
push
xchg
dec
bound
sahf
cld
and
loop
mov
mov
jle
stos
or
jae
in
mov
push
sub
popl
aam
cmp
into
fldcw
shll
and
ja
mov
add
stos
mov
addr16
outsl
loopne
sahf
inc
push
push
adc
mov
push
xor
xchg
rorb
and
aad
fwait
inc
filds
and
xchg
enter
lods
mov
adc
push
inc
imul
sub
jmp
xchg
gs
or
ret
or
sub
or
cmpsb
push
pop
hlt
shrb
mov
xchg
inc
xor
dec
cltd
movsb
or
push
dec
push
jae
imul
stos
push
cmpsl
popf
and
icebp
stos
and
sahf
jnp
jno
sahf
cmp
insl
test
inc
xor
xchg
or
int
jns
subb
les
pop
xchg
mov
xchg
data16
adc
jle
fnstenv
movsl
or
enter
inc
and
dec
pop
sahf
rorl
mov
and
sub
lds
arpl
movsl
cmp
push
mov
jmp
lcall
jb
adc
dec
fidivl
dec
leave
cld
xor
lret
inc
add
js
cli
imul
lock
push
ret
dec
outsb
xchg
jno
cs
nop
pop
rcrl
in
lds
out
push
sbb
mov
loop
dec
pop
adc
movsw
inc
bound
stos
std
ret
pop
in
bound
lock
push
push
in
cmpsb
test
dec
inc
fs
mov
pop
ficoml
cmp
sbb
xchg
pop
push
stos
aaa
je
fs
push
cmp
fwait
push
aaa
enter
and
cmpsl
sbb
test
xchg
fstp
jae
cmpsb
jle
je
xor
clc
mov
inc
js
sbb
cltd
pop
fistpl
jl
pop
jb
aas
add
and
mov
mov
and
push
sub
aam
mov
xor
adc
cmp
mov
jbe,pn
pop
nop
and
aas
int3
lods
in
dec
movsl
adc
in
dec
mov
stc
es
je
loopne
idiv
daa
pop
sub
xor
into
hlt
and
inc
mov
out
leave
aas
es
adc
xor
pop
fstpt
ret
aaa
xchg
clc
pop
hlt
int
aaa
xchg
cmpsl
or
lds
push
jecxz
xor
gs
pop
mov
shll
divb
and
leave
jmp
dec
jp
insb
std
fisubrl
mov
jecxz
pop
or
jg
fwait
aam
clc
add
xchg
pop
push
inc
mov
xorl
mov
dec
pop
inc
cmp
mov
mov
mov
sub
addl
clc
repz
pop
sbb
add
jle
mov
pop
out
push
ja
rorb
cmp
les
mov
fcoms
fs
mov
push
xchg
cmp
lea
or
cs
insl
jp
aam
mov
dec
jl
and
loope
push
addr16
mov
outsl
in
loopne
aaa
lods
imul
lods
push
push
push
idivl
xor
add
jb
mov
xchg
xchg
sbbb
imul
cmp
out
pushf
mov
rcrl
rolb
inc
ss
in
addr16
jnp
xor
icebp
das
lret
cmpsl
sub
add
movsb
pop
dec
add
cs
cltd
sub
and
sbb
popa
rcr
cmpsl
insl
loop
data16
nop
pop
fs
cltd
push
repnz
sbb
out
pop
adc
add
cmp
mov
or
xor
adc
imul
mov
jg
arpl
jns
sub
dec
or
xchg
shrb
push
add
pop
das
aaa
fs
adc
icebp
dec
lock
pop
cmp
outsl
mov
sti
xor
and
cmpsl
sub
or
adc
imul
push
dec
pusha
mov
test
movsb
cmp
shlb
sbb
xor
adc
sti
mov
mov
or
sub
mov
mov
cltd
inc
ret
mov
in
rcr
out
pop
pop
mov
js
sub
xchg
popa
movsb
dec
aad
add
mov
lods
inc
push
test
mov
dec
enter
aaa
aam
sub
popf
out
hlt
sbb
roll
pop
daa
pop
jle
mov
cwtl
pop
sub
sub
je
out
jge
pminub
cmp
mov
mov
sti
adc
scas
popf
test
or
mov
lods
inc
adc
xor
int
popa
popf
iret
mov
add
or
jne
and
xor
icebp
jmp
clc
add
dec
in
popf
mov
stos
pop
test
mov
mov
pop
ljmp
sub
leave
cmpl
call
adc
out
movsb
pop
aam
jo
fisubrl
rcrl
popf
pop
out
or
dec
sbb
mov
std
shll
out
mov
lds
cwtl
pop
add
push
add
pop
dec
dec
cmpsl
xchg
push
fst
frstor
fst
into
add
shrl
and
dec
xchg
xchg
fstpl
cmp
push
mov
dec
pop
fucomp
or
jp
pop
jecxz
pushf
hlt
xor
push
in
arpl
xchg
inc
fldt
xchg
dec
aam
push
and
ficoms
jmp
mov
popa
lret
leave
shrl
push
rcrb
and
mov
pop
mov
cmp
nop
cmp
adc
enter
imul
add
addr16
lret
imul
enter
imul
jb
xor
mov
addr16
pop
dec
cmpsl
cmpsl
movsb
jmp
mov
les
sub
xchg
and
sbb
xor
sbb
hlt
hlt
mov
jo
or
or
or
pop
jb
in
inc
stos
jg
pop
push
movsl
mov
or
loope
dec
mov
ret
shrl
push
lret
jle
inc
stc
sbb
or
pop
subb
jbe
stos
icebp
nopl
xor
and
out
shlb
addl
stos
or
xor
sbbl
mov
sti
test
sub
inc
loop
out
add
mov
lock
lea
cmpsb
aam
movsl
hlt
mov
push
pop
les
ss
ret
jnp
jae
dec
out
aad
sar
mov
jae
lret
pop
fistps
cmpsb
pusha
shrl
loopne
ror
ficoml
jg
out
sub
push
repnz
mov
ficoms
jle
cmpsl
shlb
adc
xchg
int
mov
jne
sbb
push
xor
loopne
ret
and
sbb
and
int3
ret
mov
push
adc
mov
mov
pop
fcoml
sbb
andps
ret
cltd
aas
iret
cltd
inc
xchg
mov
pusha
fmull
sbb
sarb
clc
rorl
dec
xor
push
lods
push
or
sbb
popf
mov
mov
fidivs
mov
sarb
mov
repz
jns
lcall
cmp
movsb
mov
mov
mov
leave
cmp
movsb
lret
les
push
mov
xchg
push
int
in
into
pop
mov
and
mov
or
sarb
out
cmp
test
call
xchg
push
xchg
push
arpl
inc
dec
jo
dec
movsl
shrl
jbe
cs
pop
aaa
cli
ljmp
sub
movsb
ss
xor
cmpsb
loope
xlat
push
push
mov
xor
lods
shrl
sti
sbb
push
push
dec
jmp
in
xor
cmpsb
into
repnz
mov
shlb
push
movsb
scas
in
xchg
mov
int3
imul
xchg
mov
pop
pop
xor
jl
mov
ret
into
jb
sahf
movsb
test
xor
push
mov
sbb
mov
pop
dec
outsb
int
inc
sahf
iret
or
mov
or
push
dec
in
sub
sbb
pop
mov
popl
mov
lret
std
or
sbb
ds
add
incl
stos
cmp
or
sub
rcr
sbb
andl
add
sbb
sbb
bnd
or
sbb
mov
jp
mov
sbb
scas
push
xorb
jbe
or
mov
outsb
jb
lods
das
add
pop
decl
pop
test
outsb
in
xchg
mov
iret
inc
mov
xchg
cmp
testl
imul
mov
cmc
xor
in
ljmp
xchg
pop
lret
mov
movb
sbb
mov
insl
aas
xor
push
cmpsb
xorb
stos
mov
roll
fstl
sub
mov
aad
iret
push
rcr
inc
push
xor
imul
enter
jl
dec
int
lds
in
pop
push
inc
sbb
cmp
jmp
xor
cmp
fildl
push
cwtl
add
in
sarl
pop
mov
adc
test
arpl
push
jecxz
fs
call
dec
movsl
call
mov
xchg
inc
addr16
popa
es
in
push
pop
cmp
gs
inc
inc
lea
sub
test
test
mov
sub
lret
test
stos
and
aad
push
out
lahf
scas
jae
movsb
rorl
xor
fidivl
adc
push
rorb
pop
scas
subb
add
jae
out
cmp
out
in
push
push
fwait
out
sti
es
nopl
add
mov
out
fimuls
xchg
mov
hlt
lods
jnp
lea
addl
cmp
pop
push
mov
jae
rcll
adc
push
cld
adcb
mov
mov
clc
lds
in
dec
and
jo
hlt
xchg
and
arpl
jne
cli
dec
das
cmc
sbb
add
mov
mov
decl
insl
ds
cltd
mov
mov
lcall
rcll
int3
cltd
inc
xchg
xor
in
fs
and
mov
lret
add
subb
xor
xchg
js
sub
shl
pop
fstpl
and
stos
mul
out
sub
sbb
adc
jl
cmp
fdivs
repnz
pushf
mov
movl
push
inc
std
jo
dec
cmp
ret
aam
int3
pop
clc
cmp
pop
xchg
lret
je
stc
mov
mov
ja
sub
nop
loope
mov
mov
jmp
cmpsl
mov
insl
scas
call
sub
orb
cs
clc
arpl
mov
icebp
inc
add
add
xchg
jne
dec
mov
mov
pop
in
mov
test
out
adc
mov
loopne
stos
sub
in
mov
push
mov
jp
stos
unpcklps
repz
in
in
xchg
mov
adc
pop
pop
testb
fsubrs
xchg
or
addr16
jge
and
imul
leave
cmpb
mov
fsub
pop
repz
push
mov
push
movsl
inc
dec
cld
and
sbb
pushf
daa
inc
lods
out
bound
lcall
je
cmp
sbb
pop
xlat
sarl
fwait
out
xorb
mov
cmp
pop
or
jge
fisttpl
into
pop
divps
push
mov
sub
ja
mov
dec
jp
inc
add
std
push
dec
or
sub
mov
fwait
dec
testl
adc
mov
xchg
pop
mov
mov
aaa
in
or
insl
xor
scas
imul
movsl
push
loopne
mov
aam
mov
mov
mov
xchg
out
nop
xchg
mov
jbe
aaa
testb
aas
das
out
pop
adc
mov
fimuls
add
cltd
pushf
jle
and
and
testb
sbb
pop
mov
cmp
test
dec
fdivl
cmc
fildl
aaa
fwait
mov
push
shrb
pop
and
adc
push
addl
das
xlat
cs
int
lret
sbb
vmovhpd
adc
nop
xchg
das
dec
mov
rcl
dec
xchg
scas
adc
cmpsl
in
cmp
test
test
out
popa
lods
sbb
addr16
sbb
jg
cmc
int3
xor
cmp
push
testb
aam
inc
cmp
iret
sti
ret
fsubrp
adc
xchg
add
lret
sahf
lods
xchg
popf
aad
lcall
mov
ja
push
aam
aad
dec
imul
mov
lcall
mov
push
in
cmc
std
or
js
std
mov
stos
xor
ror
cmpsl
add
cltd
movsb
lahf
ror
xor
out
enter
xor
xor
out
fistl
ss
mov
imulb
sub
mov
lcall
repz
cmpsb
hlt
call
and
pusha
pop
lret
repnz
sub
cmp
mov
rcrl
das
pop
jg
mov
sub
orb
lret
push
movsb
inc
das
dec
shll
push
into
mov
xchg
arpl
lret
adc
adc
cmp
loope
mov
movl
or
in
and
mov
mov
push
mov
inc
mov
call
call
or
push
and
repz
cli
fxch
xchg
adc
cmpsl
cli
shrb
dec
mov
and
out
sbb
scas
call
xchg
std
jno
pop
mov
add
cmp
movsb
and
jmp
and
jl
jg
add
pop
in
mov
loop
sub
mov
sbb
inc
dec
cmpsb
xchg
push
negl
push
xor
sbb
leave
push
arpl
inc
fisubrs
or
push
sub
jno
push
test
jbe
push
push
loop
mov
das
stos
stos
cmpsb
inc
or
iret
push
mov
into
jecxz
push
ljmp
mov
xor
shrl
xor
hlt
fldt
cmpsb
loopne,pn
stc
sub
fnstsw
xor
add
inc
pop
gs
lea
loopne
push
add
ds
fmul
add
pushf
add
aad
je
push
outsb
jp
jae
arpl
call
aas
inc
imul
mov
mov
adc
or
es
cld
mov
pop
inc
mov
xchg
pop
xor
or
mov
fldl
or
cmp
scas
cwtl
mov
fldl
and
push
fstps
repz
mov
fidivs
pop
or
aas
inc
jnp
xlat
push
lods
and
cmp
and
shrb
in
sub
sub
add
or
lods
bound
sub
push
push
mov
push
push
loop
sbb
shrb
sti
lahf
sti
jp
mov
fcom
mov
mov
push
ret
add
pop
sbb
cmc
mov
adc
pop
dec
test
xor
sub
push
test
std
cwtl
push
jle
mov
test
push
fwait
xchg
lds
mov
pop
cmp
push
push
sbb
dec
pop
cltd
fistpll
fcmovne
loope
pop
shlb
imulb
pop
fdivs
jae
cld
mov
cmp
adc
shl
xor
in
cli
fists
or
fsubrs
cmpsb
or
leave
cmpsb
sti
or
pop
jnp
les
leave
xor
nop
or
aas
in
mov
mov
jecxz
pop
jmp
sub
ret
loop
mov
mov
push
mov
iret
sbb
pop
mov
aam
popa
jbe
sbb
aaa
enter
out
lret
mov
push
jno
fadds
test
mov
out
pop
or
fldenv
lods
pop
loopne
adc
lock
testb
push
push
xchg
and
lock
ret
and
dec
pop
sbb
data16
ficoml
inc
out
xchg
sub
mov
mov
ljmp
mov
inc
push
xor
xchg
fwait
push
arpl
call
dec
inc
adc
ror
jl
inc
fisubs
mov
pop
les
pop
nop
mov
aas
pop
sbb
push
nop
mov
sahf
fstl
stos
cmpsb
aaa
nop
mov
push
jecxz
adc
push
and
imul
ljmp
mov
in
xor
jo
divb
jp
es
mov
mov
fxch
test
sub
data16
std
test
fcmovu
mov
mov
jnp
push
jo
push
or
dec
daa
cmpsb
push
pop
cli
pop
lret
add
in
mov
pushf
sbb
test
outsb
mov
xchg
addr16
sub
lods
add
push
xchg
or
sbb
loope
test
popf
dec
repz
push
jae
sub
push
mov
push
test
test
shl
dec
sbb
push
cmpsl
pop
push
ret
mov
add
sar
mov
jmp
jg
cmp
mov
push
movb
rcll
adcl
out
ds
add
fstps
or
shll
mov
js
sti
or
xchg
daa
loop
pop
or
mov
jo
or
xor
dec
xor
mov
lcall
out
or
cmpsb
pop
out
cltd
add
mov
test
push
jne
bnd
scas
xor
shlb
push
pop
jle
ds
jle
cmpsl
inc
xchg
cmpsl
in
cli
cmp
fmull
sub
dec
imul
pop
xor
aad
mulb
lods
popa
mov
push
inc
dec
xchg
int
cli
jmp
xchg
pop
push
inc
fwait
add
add
or
cmp
test
mov
adc
imulb
bound
mov
daa
leave
sbb
call
incl
xchg
push
dec
mov
test
mov
icebp
dec
mov
mov
jne
aas
add
mov
sbb
fnstenv
imul
jnp
sbb
call
inc
inc
insb
lods
dec
popa
push
test
add
fs
mov
jae
les
add
xchg
icebp
xor
cld
loop
mov
mov
pop
mov
sub
xor
inc
jg
mov
sub
pop
cs
imul
or
sti
test
mov
sahf
sbb
or
or
loopne
test
xchg
mov
jo
pop
mov
adc
cwtl
mov
adc
xrelease
or
jno
scas
into
mov
jmp
xchg
adc
pushf
jno
shll
mov
cli
sti
sti
aas
stos
in
pop
test
sub
pop
pop
or
lahf
pop
mov
and
in
xchg
fs
leave
in
mov
adc
mov
xchg
andl
jne
vmread
add
cmp
lock
imul
pop
enter
add
ljmp
testl
test
test
adc
mov
sub
movsb
orl
xchg
sbb
jmp
and
xchg
mov
push
cmpsb
icebp
inc
sub
cmp
lcall
fs
pop
or
xor
mov
lods
scas
mov
les
ja
cmp
mov
loop
or
mov
pop
dec
es
mov
or
xor
mov
xor
int
lea
aas
xchg
orl
mov
test
jmp
inc
push
and
sbb
dec
and
adc
out
jl
iret
int
add
scas
dec
cmpsb
lret
xor
test
mov
lock
pusha
cs
dec
lea
fwait
lds
pop
stc
repnz
lret
lcall
fldl
ljmp
xlat
cmpsb
test
fistpl
pop
dec
bound
jp
xchg
call
xor
ficompl
add
xchg
xor
and
jg
inc
pop
push
sub
add
ret
xor
or
ficoml
dec
or
sahf
mov
mov
fisttps
xchg
mov
lods
notrack
hlt
xchg
stc
lahf
xchg
lret
cmp
int
mov
repz
repnz
popf
push
repnz
loop
xchg
jmp
adc
xor
xchg
pop
dec
std
stos
xor
mov
scas
cs
addb
cmpsb
cs
aam
in
jae
fisttps
jg
orl
js
adc
out
cli
ja
sbb
movsb
clts
cmp
and
lds
adc
iret
push
fnsetpm(287
xchg
mov
push
std
cmpsb
or
and
test
testb
add
jne
iret
push
push
add
scas
sub
insl
push
cmpsl
add
sti
xor
inc
mov
sub
cmp
jmp
jb
mov
test
push
adc
adc
sub
call
dec
popa
push
push
out
pop
popf
jo
iret
in
cmpsl
push
popa
movsb
dec
fwait
shl
mov
xchg
pop
mov
mov
std
mov
inc
cwtl
cwtl
cmp
es
inc
scas
in
pushl
and
sub
imul
sbb
sub
mov
inc
dec
jmp
add
sub
adcb
and
pop
cli
add
xor
jle
sub
aas
out
lcall
dec
addr16
ljmp
imul
push
cmp
ret
jg
les
sub
mov
sub
cli
adc
js
loopne
jl
repz
mov
mov
test
shlb
mov
rcrl
cld
jbe
notb
insl
je
xchg
xor
aaa
enter
stc
push
pop
jnp
insb
pop
popf
mov
jno
fwait
mov
pop
popa
stos
xchg
sub
pop
les
lds
sarb
cli
in
add
iret
into
testl
fistpl
hlt
cmp
in
push
pop
sahf
mov
xor
ret
sbb
les
mov
cli
loope
cmc
testl
loope
lcall
out
and
shlb
sub
repz
or
mov
xchg
shrb
aam
and
xor
pop
add
addr16
cli
push
int3
mov
fistpl
addl
add
ljmp
adc
es
lahf
fucom
data16
psubw
jle
inc
mov
mov
inc
test
pop
mov
scas
mov
dec
icebp
lret
sbbl
lcall
xlat
lods
cmpsl
adc
fldt
cs
xor
push
and
lret
loope
sahf
or
adc
mov
mov
mov
ror
push
push
lret
test
inc
push
add
push
js
add
out
inc
xchg
pop
sub
mov
lcall
mov
mov
out
pop
xchg
rcll
outsl
push
stos
lds
xor
cwtl
aaa
push
xchg
mov
notl
sbb
jnp
pop
les
lret
or
insl
loop
ss
mov
enter
movsl
ficomps
ljmp
lock
and
insl
movsb
pop
mov
or
cmp
lods
lea
es
add
pandn
bound
adc
mov
scas
push
mov
xor
push
mulb
out
out
cmpsl
xlat
sbb
mov
psubsw
push
mov
test
nop
or
test
cli
das
insl
mov
loopne
jae
push
mov
mov
jmp
adc
ret
cmp
add
lahf
and
mov
mov
cmp
hlt
mov
add
movb
sub
push
fcomps
cli
cli
jne
movsl
lret
jno
int3
pop
xchg
es
loop
mov
push
ror
mov
js
xchg
lahf
ret
push
out
lock
jge
insb
dec
xor
movsb
mov
imul
xor
ds
dec
incl
or
push
enter
ror
loop
mov
jno
repz
fsubl
mov
mov
shll
dec
ret
and
mov
and
jp
icebp
add
jne
mov
cmc
adc
sbb
inc
imul
pop
add
mov
mov
ret
sub
sub
cmp
jp
xchg
sbbl
leave
and
jno
shlb
and
idivb
mov
dec
push
bnd
inc
mov
mov
push
mov
adc
enter
hlt
push
mov
jmp
lea
sarb
xor
jmp
fcoms
add
or
adc
sbb
adc
gs
pushf
jmp
pusha
push
sahf
xor
cli
xor
mov
cmpsb
daa
mov
push
out
xchg
xor
repz
test
mov
jge
lret
aad
icebp
bswap
dec
sete
cmpsb
lods
es
push
pop
dec
jp
loop
loop
xchg
xor
or
cwtl
ljmp
in
stc
lock
aaa
jmp
add
push
popf
jbe
mov
test
xchg
and
sbb
mov
add
sbb
fs
int
insl
dec
pop
call
fadd
xchg
xchg
fbld
into
or
add
fcomps
or
mov
sub
xor
test
movsb
lcall
add
push
in
dec
pushf
xchg
pusha
xchg
std
es
push
call
sub
mov
jae
dec
or
mov
jo
or
stos
inc
je
test
push
jmp
inc
mov
insb
pushf
gs
divb
clc
mov
leave
subl
sbb
into
push
mov
or
cmp
popf
roll
push
mov
hlt
push
idivl
sub
xor
cmp
ficoml
xorb
hlt
aad
imul
push
pusha
push
jne
dec
or
push
je
les
or
je
out
mov
push
or
ret
mov
data16
inc
adc
mov
and
dec
dec
inc
inc
popa
call
shll
iret
mov
lret
lods
xor
add
cmpsl
push
int
cmc
adc
jl
dec
pop
mov
sub
mov
xchg
ds
or
jb
push
xchg
repz
pusha
push
jnp
jmp
xchg
aam
fs
xor
daa
pop
dec
fldenv
mov
movl
test
out
rclb
mov
and
pop
popf
lret
in
sbb
test
ret
js
lods
fnstsw
in
dec
loop
ds
in
frstor
dec
js
inc
mov
or
inc
inc
out
pop
iret
rcrl
ficomps
icebp
out
cltd
or
or
sarb
insb
or
lea
jecxz
cmp
loope
movsl
rclb
xor
into
push
push
sub
pop
test
jg
icebp
jg
jo
or
adc
jo
mov
fldpi
adc
sbb
sub
cmp
adc
push
popa
adc
inc
sarl
sbb
out
mov
sahf
pop
or
dec
js
xor
into
popf
xor
push
inc
xchg
jp
arpl
mov
pop
cmp
sbb
inc
cli
sahf
lcall
xor
fnstcw
jl
push
jno
imul
test
test
pop
in
jb
pop
xchg
jnp
pop
push
mov
mov
movsb
cmp
mov
pop
pop
repz
popa
pushf
adc
testb
ret
dec
or
rclb
push
lret
jl
rclb
out
loopne
xor
or
dec
jp
cmp
mov
ss
cmc
call
vpmacssdqh
inc
xchg
popf
iret
dec
dec
push
dec
xchg
pusha
pop
test
jb
xchg
repz
mov
bound
sbb
divl
dec
cmpsl
push
pop
inc
dec
test
lock
mov
pop
dec
arpl
adc
icebp
ficompl
mov
push
sub
and
sub
mov
lea
dec
roll
pop
addl
fcoml
pop
int
repnz
into
jb
dec
test
daa
rorl
ret
mov
scas
push
enter
aas
popa
int3
fildl
nop
mov
sbb
cmpsl
inc
jg
rorb
int
adcl
subb
sbb
test
lea
add
test
inc
xchg
push
mov
mov
sub
pop
arpl
js
jno
jno
call
ss
cli
enter
cld
add
add
inc
pushf
xor
cmp
push
fwait
pushf
jbe
insb
testb
pop
push
jne
sarb
inc
mov
stos
inc
lods
push
lea
add
sub
xor
or
test
sbb
loope
lock
sbb
data16
stos
jb
cmp
scas
iret
push
or
pop
stos
iret
xchg
mov
out
movsl
pop
sub
fadds
ret
pop
mov
cmp
adc
xor
fdivs
insb
inc
cwtl
lea
in
call
sbb
sub
shll
out
jecxz
je
cmp
jg
lahf
push
outsb
jle
jle
adc
adc
imul
stos
pop
jno
popf
addr16
sbb
aaa
fisttpl
sti
out
popf
jmp
push
jl
fs
push
mov
xchg
test
mov
sub
rorl
dec
and
push
cmp
jo
int3
insl
mov
scas
lock
cld
mov
push
jle
popa
jmp
sbb
cmc
jecxz
rol
cmc
add
fs
insb
orl
arpl
push
arpl
or
or
inc
or
sarb
inc
in
dec
push
mov
inc
sub
pop
les
cmove
jne
sbb
push
add
mov
pop
fs
pop
enter
pusha
rcrb
dec
sub
lcall
bnd
test
fcmovnbe
shll
icebp
lods
push
jmp
dec
pop
xchg
popf
jo
inc
iret
dec
in
int
out
clc
aam
pop
and
movb
add
dec
xor
aam
mov
sub
xor
xor
jmp
cltd
aas
rol
jl
repnz
lahf
cmc
cmc
push
repz
mov
jp
dec
out
xor
outsl
jbe
cmp
jno
push
popa
lock
add
mov
cmp
inc
mov
inc
sub
ret
mov
pop
sahf
jp
add
inc
xchg
lods
mov
jno
push
jmp
sbb
mov
push
imul
call
lret
pop
mov
inc
mov
jle
cs
push
hlt
test
and
test
cmp
ficoml
movsb
movsb
adc
mov
movsb
pop
mov
jg
ds
push
test
adc
into
ret
xor
lret
pop
fs
fsubl
sbb
push
fnstenv
jmp
cmp
push
add
cmpsb
mov
xor
add
inc
popa
por
dec
lods
leave
in
jg
fisubl
enter
fdivrs
sub
and
jmp
shr
sbb
lds
lods
dec
mov
test
jp
push
and
xor
and
lock
rcr
xor
xchg
ds
xchg
lea
scas
lea
sbb
cli
les
shrl
cmp
or
sub
cmc
mov
fldenv
cmpsl
cmpsl
xchg
jnp
testl
mov
adc
cmpb
sbb
pushf
fldenv
xlat
dec
xchg
mov
dec
fisubl
int
adc
dec
popf
sub
das
loop
insl
push
nop
rorb
es
sbb
adc
fcmove
push
push
add
test
pop
imul
idivb
pop
outsl
sub
lods
lds
les
push
gs
xchg
push
jbe
push
mov
aad
idivb
aam
jb
cmp
pop
and
pop
imul
pop
sub
ja
sbb
push
xchg
xor
ljmp
jg
fmulp
xor
scas
clc
mov
push
jae
xchg
or
inc
mov
movsl
and
jmp
push
inc
mov
jecxz
lock
imul
ljmp
mov
cmp
and
into
lock
cwtl
cwtl
pop
or
fsubl
test
lods
mov
sahf
addb
fcomps
movsl
push
lock
or
and
sub
pop
mov
push
rcll
adc
adc
cltd
outsl
xor
sbb
add
fcmovnbe
xor
pop
add
insb
xor
or
jmp
mov
loope
popa
jns
bound
xchg
cwtl
fldcw
aam
inc
mov
in
jle
imul
scas
jbe
aas
add
aad
mov
cmpsb
loopne
cli
movsb
nop
mov
jns
add
lea
repnz
and
pop
dec
jp
ss
dec
dec
xchg
test
fmul
sti
mov
lahf
repnz
jbe
int3
insl
les
gs
adc
and
push
pop
in
cmp
cli
out
and
push
test
fwait
adcb
testb
lcall
sbb
ret
and
mov
and
popa
mov
sbb
jge
and
inc
xchg
icebp
shrl
enter
shll
lds
mov
out
aam
in
aaa
imul
orb
sbb
xor
cld
stos
gs
xor
mov
and
sti
fdivs
fwait
xor
xor
cltd
mov
mov
or
mov
mov
testb
xor
push
mov
insb
test
cltd
insb
js
jo
sbb
xchg
xor
xchg
stos
sub
add
fisttpl
popf
in
loop
push
push
jecxz
jns
push
push
aad
sarb
fisttps
shrb
movsl
ljmp
pusha
test
mov
xor
xor
xor
inc
leave
cmpsl
jecxz
iret
loope
or
loope
aad
hlt
push
por
cmp
dec
insb
cs
sub
mov
mov
addr16
aam
push
push
mov
jne
mov
add
pop
arpl
out
jl
dec
ljmp
mov
pop
subb
idivb
and
daa
mov
and
mov
pop
test
data16
in
aam
jns
push
lds
xor
icebp
daa
addr16
push
out
and
divb
xchg
clc
loop
loope
mov
dec
fmull
push
nop
loop
xchg
sub
mov
jecxz
bound
mov
pop
xchg
ljmp
lods
add
es
enter
xor
dec
mov
adc
ret
sahf
out
mov
sbb
add
push
loope
fnstenv
or
hlt
mov
cmp
sub
fnstsw
cwtl
mov
xor
mov
pop
roll
xor
cmpps
popa
mov
add
fisubrs
test
leave
fsts
movsb
mov
loope
jns
mov
cmp
mov
test
icebp
sbb
or
xor
popa
inc
icebp
pop
and
arpl
mov
sub
test
repz
sahf
cmp
ret
fs
addr16
call
sub
adc
sub
ret
push
sbb
fisttps
movsl
adc
stos
divb
mov
lret
push
xor
iret
iret
dec
sub
in
sbbl
fdivs
das
push
seto
outsb
fs
jg
aad
dec
and
fimull
hlt
cmp
cltd
cmp
lock
orl
inc
add
sar
push
adc
rcrb
fdivrp
sbb
movsb
mov
lahf
mov
hlt
sbb
xor
adc
lds
imul
cmpsb
xchg
lret
xor
xor
movsb
xor
mov
add
xor
mov
sbb
sarb
add
add
or
sub
xor
push
shld
lods
cmp
aas
fbstp
ret
inc
xor
push
rcrb
jb
lock
pop
add
dec
adc
lods
xor
sti
outsl
mov
inc
lods
das
jns
lcall
lods
mov
addr16
mov
ss
mov
dec
inc
inc
mov
and
xor
sbb
or
insb
fmuls
mov
sbb
lret
or
rcrb
lock
mov
add
outsb
aad
shlb
movsl
sub
xchg
call
outsl
pop
dec
sub
test
add
andl
ja
andb
ret
icebp
cmp
test
mov
rolb
push
pushf
test
mov
fdivrs
add
lock
dec
push
bound
xchg
test
xor
in
sub
xchg
lock
stos
and
es
xchg
mov
mov
sub
rcrl
sub
cmp
push
movsb
push
or
add
mov
xor
out
adc
movsl
adc
movsb
sub
stc
inc
jp
std
mov
sbb
and
outsl
es
mov
xor
andb
jge
ss
pop
jb
push
push
sub
fiadds
push
xor
daa
sbb
lcall
repz
adc
pop
mov
sub
sti
loopne
jmp
xor
mov
mov
jno
sbb
cltd
scas
xor
sub
pop
ja
push
add
inc
mov
mov
dec
mov
push
bound
repz
push
push
cld
dec
fisubl
or
js
mov
test
cmc
adc
lcall
inc
cmpsb
cmp
test
mov
stos
sub
iret
movsl
ficomps
sub
idivl
jbe
xor
cmp
mov
imul
movl
lea
dec
fwait
and
jmp
adc
dec
or
aad
cwtl
add
mov
sbb
daa
imul
out
fisttps
mov
out
notl
mov
push
shl
pop
cwtl
mov
mov
aad
sar
and
pop
imul
punpckhwd
pop
mov
pop
push
pop
jp
push
cld
sub
cmc
add
lods
mov
imul
aas
and
sub
mov
pop
in
in
in
cmp
daa
popa
fidivrs
pop
and
decb
scas
mov
jmp
cmc
out
jmp
cvtdq2ps
xor
adc
mov
repz
ss
cmpsl
scas
outsb
mov
stos
stos
gs
jae
pop
pop
adc
hlt
in
movsb
jle
push
push
pop
fdivl
cld
inc
mov
jp
cmc
jbe
xchg
test
adc
pop
dec
adc
out
cmpsb
cmc
pop
sbb
jge
pop
inc
insl
test
xchg
mov
xor
sub
jmp
sti
and
imul
int
imul
sub
test
sub
sbb
and
jmp
mov
xor
adc
inc
push
mov
shl
ss
jl
add
mov
ds
ds
xor
mov
xchg
ficoml
stos
std
mov
iret
dec
mov
repnz
mov
dec
jge
mov
aaa
pushl
cmp
mov
cs
lahf
xor
or
faddl
sub
sub
fistpl
insb
lock
mov
pop
negl
add
and
cmp
out
daa
inc
fldpi
outsb
jo
push
es
sbb
mov
rclb
mov
mov
fwait
ljmp
arpl
pushf
push
outsb
mov
jo
jmp
shlb
mov
testl
push
lods
scas
pop
mov
stos
pop
out
mov
in
pop
pop
mov
sbb
dec
pop
lods
test
adc
mov
push
fwait
aad
lcall
sbb
rclb
push
gs
xor
out
fcoml
fdivrl
scas
mov
mov
subl
stos
insl
lahf
popf
lods
jne
xor
lcall
out
push
aam
mov
das
decl
mov
pop
aaa
jp
xchg
aam
insb
pop
xchg
jo
push
sbb
arpl
addl
mov
adc
sub
and
pop
aaa
inc
pop
mov
ret
jne
jl
mov
mov
test
sbb
pop
scas
jae
mov
jnp
fninit
mulb
jge
mov
mov
fistpl
jmp
ljmp
jno
ja
or
ja
fistps
xchg
mov
in
jmp
rorl
fs
or
in
div
popa
shrl
add
xchg
arpl
lods
imull
aam
pop
xor
or
push
in
add
push
push
sahf
pop
jmp
movb
test
pop
insb
push
pop
or
jae
sahf
movsb
scas
fidivrs
repnz
lods
aas
pusha
lahf
lret
push
sub
push
shlb
scas
rolb
jmp
scas
cltd
ss
jle
mov
cmp
out
insb
rorl
mov
cmp
std
aad
jg
adc
stos
dec
rep
movb
rcrb
out
push
roll
xchg
pop
jecxz
push
mov
pop
mov
andb
lahf
hlt
add
lcall
insl
push
fmul
and
iret
cli
fnstcw
mov
jbe
sub
stos
scas
clc
out
enter
cmp
push
fiadds
fistps
jno
jl
mov
push
xor
xchg
sbb
out
fidivl
mov
mov
std
add
unpcklps
add
ret
push
inc
jbe
lahf
mov
lea
insl
adc
movsl
push
adc
pop
mov
mov
mov
pushf
and
xor
rcll
push
sahf
pop
pop
stc
mov
mov
mov
and
jg
or
inc
inc
das
dec
addr16
cmp
pop
and
dec
lahf
dec
aas
lock
scas
inc
mov
jno
sub
adc
jno
mov
add
xchg
rorl
sbb
adc
add
movsl
ds
mov
stc
in
into
es
or
or
jmp
push
das
shrl
or
dec
sti
jne
mov
lods
rcrb
testl
and
pop
push
mov
mov
xlat
aad
lret
adc
call
movsl
xchg
aam
push
jp
xchg
or
lds
pop
pop
pusha
pop
sub
inc
push
and
test
adc
push
push
imul
sarl
mov
rsm
xchg
xchg
and
fistpl
jmp
mov
movsl
pop
push
ret
sbb
push
push
addr16
lds
and
imull
frstor
imul
mov
inc
xor
add
pop
mov
movsl
lahf
ret
ljmp
push
xchg
idivl
popf
xor
fisttps
out
push
inc
xchg
xchg
test
das
aam
aas
xchg
rcrb
sub
push
aaa
jae
xchg
fistl
sarb
int
adc
sub
inc
dec
rep
adc
sarl
jae
flds
iret
sbb
cmp
xchg
mov
int3
outsl
add
movsl
sub
mov
sbb
mov
adc
mov
js
jp
inc
xor
xor
movsb
push
into
into
scas
dec
shlb
les
add
pop
cmp
shl
xor
lret
inc
movsb
xchg
mov
jl,pn
adc
jno
movl
test
out
or
cli
mov
xchg
jbe
rolb
sahf
lods
xchg
cmp
jl
add
dec
sbb
or
pusha
pop
sarb
aaa
adcb
cli
cmp
lret
inc
mov
ja,pn
iret
fistpll
mov
dec
aam
dec
sbb
jp
sbb
repnz
or
and
pop
enter
cmp
inc
shr
fwait
aaa
xchg
dec
in
push
fdivr
adc
sbb
insl
pop
cmc
mov
jle
mov
dec
push
jb
jb
mov
subb
push
or
pusha
xchg
int3
shll
mov
stos
push
stos
fwait
js
xor
dec
mov
icebp
jecxz
cld
mov
inc
push
adc
int3
push
std
ret
rcll
push
lods
mov
jo
mov
ja
sahf
or
iret
mov
sub
sub
sahf
mov
jl
cli
inc
jne
fidivl
cli
pop
dec
xchg
xor
cli
cmp
in
push
and
jne
inc
xlat
adc
orb
dec
shl
ds
lods
jns
fs
xor
mov
jae
or
sahf
jecxz
test
xor
dec
dec
pop
sbb
aaa
mov
inc
jge
jne
xlat
and
fs
and
push
inc
sbb
mov
push
and
shl
mov
cmp
mov
loop
cld
mov
dec
movsb
nop
add
sbb
cwtl
jg
call
cmp
pop
pop
fucomi
and
inc
in
enter
int3
ja
cmpsl
imul
push
test
enter
ss
dec
jmp
push
fists
rorl
out
mov
xor
push
dec
cwtl
repnz
in
hlt
addr16
int
int
mov
lods
in
mov
sbb
and
aad
pop
or
or
jecxz
nop
popf
fdiv
js
dec
or
xor
ljmp
mov
push
dec
push
in
push
into
jbe
mov
push
push
mov
xor
jnp
lret
stos
cmp
and
jb
stos
xchg
sbb
cmpsb
adc
aaa
aam
cmp
adc
xor
jle
jb,pt
test
andb
mov
test
and
dec
outsb
pop
jg
sbb
lret
sub
shll
cld
inc
lcall
jne
add
js
jb
into
jne
sub
jecxz
cmpsl
mov
mov
mov
fldt
out
add
pop
data16
push
dec
js
dec
data16
in
aad
add
bound
repz
adc
mov
mov
std
jmp
icebp
and
xor
enter
xlat
xor
sbb
in
mov
pop
pop
inc
stos
mov
loopne
inc
adc
add
xor
sbb
cmp
es
sub
test
ds
in
aad
pusha
loopne
or
pusha
loopne
cmpsl
sbb
cwtl
or
sbb
cld
andl
add
inc
pop
dec
daa
jae
cmc
shr
test
sbb
aaa
jge
lock
add
push
repnz
fdivrl
mov
lahf
mov
adc
jg
pop
adc
push
pop
pushf
pop
dec
mov
mov
push
push
or
sbb
mov
aaa
bound
jge
xor
int3
enter
jecxz
lods
mov
dec
or
jns
cmp
pop
xor
adcb
stos
jmp
pop
ljmp
push
lods
call
jns
ret
imul
cmc
orb
push
mov
insl
dec
aam
dec
push
mov
testl
int
adc
adc
stos
sub
pop
inc
repnz
sub
addl
aam
or
outsl
loope
xchg
xor
push
pop
mov
dec
dec
imul
mov
and
inc
movsb
mov
nop
cmpb
inc
pop
adc
cli
dec
test
test
scas
xchg
adc
int
and
aam
aam
filds
mov
pop
cltd
pop
jge
add
fldenv
and
xchg
sbb
mov
and
je
xchg
fwait
int
add
in
adc
and
lcall
lcall
jl
push
xchg
repnz
mov
jb
mov
pop
dec
push
imul
dec
sbb
loope
push
in
dec
mov
iret
inc
xchg
or
jns
test
inc
sbb
in
stos
les
rcll
out
out
es
cmp
jne
jns
add
cmpsb
or
push
mov
out
cmp
outsb
mov
in
sub
mov
mov
sub
or
maxps
sub
mov
mov
sbb
pop
adc
lret
or
or
mov
out
inc
out
jae
cmp
push
push
jmp
test
dec
sbb
mov
lcall
jge
dec
sub
inc
and
imul
and
or
add
push
jne
pop
mull
xchg
pop
je
xchg
xor
mov
add
lods
clc
cmp
push
ljmp
adc
in
push
scas
adc
std
repz
inc
sbb
movsl
adc
sbb
das
cwtl
mov
in
jno
cwtl
and
push
mov
sahf
jbe
test
out
mull
mov
rcl
imul
cmc
and
test
pushf
adc
in
or
xor
movsb
sti
gs
and
pop
fildll
inc
popa
lea
fisubl
mov
test
inc
fsubrp
popf
push
jnp
imul
ljmp
fwait
inc
mov
cwtl
add
xchg
fcmovnb
xchg
scas
sub
and
mov
push
dec
scas
mov
add
ror
mov
jbe
cwtl
and
pop
sbb
stos
sbb
lret
fmull
jne
repz
rcl
push
aam
lea
jmp
popf
jle
mov
pop
es
or
jmp
cmp
mov
pop
sbb
pop
andl
jnp
inc
leave
pushf
pop
lret
stc
xor
xchg
sti
icebp
push
insl
inc
or
xchg
xor
sti
jns
notl
sub
popa
or
out
fld
push
daa
xchg
mov
push
inc
loop
mul
in
jl
lahf
fcomps
adc
push
xchg
adc
adc
or
pop
jle
test
add
dec
in
ficoms
call
out
inc
in
gs
sbb
cmc
clc
shrb
ret
inc
xor
cmpsl
movsb
out
sbb
sbb
addr16
inc
inc
mov
jge
mov
into
clc
sbb
pop
enter
cmp
adc
add
jle
in
add
sar
pop
cwtl
fcmovbe
sahf
dec
les
cmpl
lret
ds
and
xlat
shl
mov
bound
inc
aas
mov
stc
insb
aaa
scas
loop
lret
or
jno
icebp
add
or
jecxz
push
jecxz
xchg
loopne
lret
cld
adc
in
cld
xchg
cld
stos
xor
cmpsl
dec
lahf
pop
jl
scas
sti
in
test
pop
ljmp
jb
ret
mov
cmpsb
sub
movb
mov
inc
or
xchg
sub
in
or
mov
enter
and
push
call
sub
pusha
outsl
mov
das
pop
rep
cs
js
mov
push
dec
xor
ljmp
test
sub
add
lds
jns
inc
cmp
push
mov
push
cld
data16
push
fadds
push
adc
std
ret
or
mov
leave
push
pop
loop
xchg
dec
or
scas
sahf
xlat
jbe
mov
mov
subb
dec
je
push
sbb
sub
mov
push
sub
sahf
pop
dec
sbb
gs
cltd
jnp
pushf
adc
clc
push
jb
sbb
dec
push
cmp
cmp
ja
mov
xorb
xchg
hlt
in
xor
popa
mov
push
aas
icebp
inc
xchg
leave
faddl
mov
fmuls
inc
lretw
mov
xchg
dec
sbbl
idivb
sub
and
push
mov
sti
repz
cmpsb
cmp
loope
jecxz
mov
movsl
mov
bound
rcll
loope
cmp
push
adc
je
cs
fistl
cmpsb
mov
cmp
pop
in
push
xacquire
sub
push
pop
dec
in
outsl
jb
lahf
faddl
int
adc
xchg
mov
xor
inc
leave
mov
and
ret
lods
aas
cltd
adc
pop
xchg
sahf
cmp
cmp
sub
test
movsb
mov
dec
mov
inc
cmp
cmpsb
fiaddl
repz
sbb
xchg
sub
and
cmpb
or
xor
repz
cmp
mov
in
dec
fwait
lcall
cltd
lcall
fmulp
mov
cmpsl
ss
lahf
jnp
leave
gs
push
addl
ret
outsb
out
or
adc
and
inc
cmpsl
add
jno
sbb
ret
pop
jmp
pop
mov
sbb
jl
and
pop
or
xchg
arpl
xlat
hlt
sub
sbb
mov
push
neg
and
xchg
fcmovnb
lret
jno
push
xchg
mov
lods
pop
clc
sbb
cs
hlt
dec
sbb
mov
xor
rcrl
xchg
in
cs
xchg
leave
push
mov
in
lods
pop
or
mov
xor
mov
and
sbb
push
adc
or
loope
add
pushf
push
je
push
jnp
sub
je
xchg
xor
xchg
sub
popa
and
inc
in
mov
aas
sahf
xchg
or
inc
adc
and
jecxz
loope
cwtl
pop
mov
pop
ss
push
dec
inc
dec
sahf
mov
xor
loop
rcr
lret
leave
das
or
jbe
xchg
outsl
cmp
adc
jmp
jbe
ljmp
mov
lds
pop
jge
je
clc
sub
sbb
lret
lock
xlat
add
adc
push
cli
aas
sarl
std
mov
pop
inc
dec
jne
mov
fcoml
pop
scas
pushf
xchg
imul
jecxz
leave
imul
insl
sbb
mov
push
fiaddl
mov
gs
stos
add
add
cmp
sbb
xor
adc
sbb
xchg
pusha
push
clc
fisubl
mov
test
push
add
lods
movsl
movsb
lcall
mov
sub
int
pop
nop
xchg
ret
outsl
push
adc
lods
xorl
xchg
dec
out
icebp
push
ret
mov
mov
in
sti
jns
addr16
xor
sub
mov
sub
fnstsw
pop
xchg
mov
mov
iret
loopne
dec
int3
mov
popf
xchg
fidivrl
dec
gs
sarb
outsb
clc
rcl
imul
dec
outsb
rcr
lret
fidivrs
fidivrl
push
ret
fcomi
mov
ds
push
ret
sbb
jl
sti
jno
xor
testl
mov
pop
icebp
jge
jmp
push
mov
push
dec
push
je
test
arpl
xor
lea
ja
push
push
es
hlt
mov
out
push
adc
scas
fldenv
add
pusha
xchg
nop
jno
test
scas
fdivs
imul
cvtps2pi
outsb
mov
mov
movsb
mov
lods
xchg
faddl
jne
pop
fucomip
sti
inc
jb
cmp
and
jmp
test
sahf
gs
jno
mov
subl
mov
jnp
ss
jg,pt
test
or
in
jns
or
fidivrs
std
ret
shrl
or
dec
xchg
push
mov
arpl
cld
out
mov
cwtl
sbb
test
leave
pop
cmpsb
hlt
test
adc
in
push
mov
and
out
filds
inc
stc
push
dec
sbb
xchg
hlt
xchg
pop
icebp
fisubl
jmp
jns
sbb
in
cmp
sbb
pop
scas
adc
add
push
out
mov
nop
xlat
int
dec
jo
push
jo
and
test
lods
jecxz
fcomps
inc
mov
test
lret
mov
je
adc
xchg
sub
insb
arpl
enter
inc
gs
add
jns
sub
ljmp
out
jns
dec
dec
pop
jno
sub
ljmp
inc
ja
inc
adc
insb
adc
dec
cli
inc
mov
dec
pop
lea
jnp
and
shr
in
pop
cli
sbb
xor
add
and
ss
shll
pop
pop
push
mov
fidivrl
jmp
mov
dec
mov
rcrl
scas
push
mov
push
ret
pop
push
xchg
xchg
sbbb
cmpsb
int
dec
testl
adc
adc
jbe
jp
or
xchg
push
cmpsb
jns
sub
push
or
loop
push
lock
mov
inc
jp
dec
out
dec
sti
and
fcoms
xchg
add
add
xor
aaa
scas
sub
sahf
js
pop
xchg
fwait
stos
adc
push
jnp
and
mov
inc
js
adc
jmp
dec
push
mov
mov
mov
or
xchg
inc
cmp
sbb
mov
dec
fbstp
in
xor
jge
fcomps
inc
les
fisttpl
repnz
fidivrl
nop
sahf
loopne
push
fwait
aad
int
movsb
mov
or
pop
cld
movsb
jmp
imul
cmp
push
popa
cmpsl
pusha
jge
outsb
sbb
test
ljmp
sbb
icebp
pushf
pop
repnz
sbb
nop
sti
insl
mov
aas
inc
sub
add
mov
sub
je
lahf
lods
addr16
mov
fldenv
and
ret
cli
dec
sub
or
push
push
dec
xor
repnz
sbb
cmp
pop
lcall
int3
stos
or
adc
or
xchg
jg
jge
or
and
bound
lea
pop
loop
imul
mov
and
cmp
push
adc
pop
and
mov
push
hlt
push
mov
in
push
inc
movsb
push
rcrb
xchg
cmp
pop
or
adc
cmpsb
arpl
xor
int
dec
push
xor
mov
and
inc
push
subl
ss
int3
call
dec
fdivrs
fisttpl
xchg
in
push
inc
cmp
pop
mov
pop
jns
mov
jle
fcompl
movsl
iret
jmp
inc
clc
xor
lock
in
ljmp
int
adc
jb
or
scas
pop
add
jb
leave
sbb
push
mov
andb
rol
cmp
arpl
clc
bnd
mov
gs
jno
adc
ljmp
out
xchg
pop
jp
repnz
addr16
outsb
push
add
mov
inc
inc
fildll
stos
inc
lods
pop
add
lods
pusha
repnz
sub
push
ret
mov
xchg
mov
bound
mov
cld
iret
sbb
pop
test
xchg
in
mov
cmpl
loop
or
adc
loopne
nop
jge
or
or
popf
jbe
cli
jb
lahf
ja
adc
sbb
lea
fcomi
jnp
negb
sub
mov
pop
or
and
pop
xchg
shl
jo
adc
inc
add
adc
jbe
scas
inc
mov
les
sbb
out
gs
push
aad
iret
cmp
enter
pop
push
push
cmp
mov
scas
pop
test
out
adc
fs
shlb
iret
sub
pop
loop
cld
sbb
push
xor
stos
negb
int3
and
mov
and
fsts
sbb
into
fmull
fiaddl
dec
inc
push
out
mov
popa
add
hlt
and
adc
xor
fsts
mov
cmpsb
pop
or
mov
add
adc
lods
dec
lea
mov
mov
jae
mov
push
pop
test
mov
pmaxsw
cmc
fidivrs
fisubrl
rcrl
andb
bound
jle
inc
cli
stos
adc
jno
push
sar
daa
mov
das
xor
in
xor
gs
loop
out
adc
outsl
jns
roll
push
sub
inc
cld
jne
jg
mov
or
bound
inc
flds
add
jl
mov
dec
push
add
xor
test
test
es
push
clc
push
loop
inc
jmp
int
adc
add
jl
xor
ds
mov
dec
pop
lea
pop
les
repz
fnsave
movsl
bound
ds
test
xchg
adc
addb
leave
and
inc
ficoms
hlt
xor
loopne
leave
sub
adc
pop
fs
ds
and
lahf
jo
mov
pop
mov
fistps
pop
imul
push
mov
cmp
out
push
and
push
and
jo
pop
repz
pop
sbb
popf
std
or
fcomps
int3
out
in
fnstenv
arpl
dec
jl
testb
addl
mov
in
in
jne
repz
cmp
sti
jmp
jl
sbb
cld
pop
xchg
hlt
push
aam
mov
cmp
dec
jge
xchg
lea
arpl
and
scas
mov
dec
and
out
xchg
pushf
lods
lds
pop
jl
insl
add
jae
in
lret
ds
stos
ror
sti
ret
mov
movl
or
jb
lcall
sub
mov
das
out
sbb
pusha
lret
cli
stos
xchg
gs
sbb
dec
inc
imul
daa
mov
fildll
aad
sub
mov
sub
iret
out
fsub
mov
hlt
xchg
sub
push
testb
sbb
test
jo
test
in
inc
fmull
inc
adc
push
aas
outsb
outsl
test
dec
mov
fninit
sahf
popa
test
mov
lret
fiaddl
addl
sarl
lahf
stos
aam
aad
lret
xchg
fs
xlat
push
call
fisubrl
lods
sbb
dec
add
inc
mov
push
mov
inc
andb
loopne
pop
test
out
out
cmpsb
xlat
and
loopne
and
sbb
int3
inc
fdivrl
jp
push
pop
jmp
cmp
mov
fs
mov
cmp
out
mov
enter
cmc
inc
pusha
sub
fmul
add
fdivrp
sbb
lcall
lret
add
xor
xchg
pop
repz
cli
mov
imul
sub
dec
sbb
xchg
push
add
xor
movsl
mov
mov
pop
push
mov
xchg
push
test
mov
je
shlb
adc
ljmp
stos
stos
pop
repz
fwait
into
adc
inc
sbb
into
fs
int3
push
rcrl
scas
pop
inc
test
int3
ljmp
mov
imul
insb
sbb
inc
jae
rorb
xchg
xchg
push
xorb
test
cmpl
in
xchg
or
leave
inc
mov
pushf
xor
push
lods
mov
nop
mov
pop
mov
rcrl
bound
cmpsl
jg
pop
cmp
fdivrl
lock
mov
pusha
push
dec
cmp
dec
lds
pop
leave
mov
lods
fdivrl
dec
sub
lret
sub
fildll
cmp
push
outsl
loopne
fwait
add
sbb
shrb
gs
int
mov
ja
leave
mov
ds
inc
loop
std
fimuls
adcl
sahf
adc
orl
mov
pop
mov
adc
xor
xchg
int3
mov
mov
cmp
cs
test
loope
andl
adc
inc
dec
fwait
adc
fdiv
xchg
mov
jae
test
arpl
xchg
jg
sub
xchg
mov
sub
popa
dec
push
xchg
imulb
mov
pop
hlt
stos
insl
pop
mov
mov
pop
sub
adc
fsubr
stc
mov
les
adc
xor
jns
rorl
or
setbe
sbbb
mov
icebp
jns
out
jmp
fildll
dec
out
fdivr
xor
xchg
xchg
ret
popa
das
inc
or
dec
push
shl
scas
fwait
dec
sub
dec
scas
jns
les
shrb
les
hlt
aaa
das
pop
sub
lods
fdivrs
pop
and
scas
push
mov
or
pop
adcb
add
outsl
aad
loop
das
mov
adc
imull
sahf
dec
xorb
enter
jnp
adc
sar
imul
test
rcll
cltd
mov
idivb
mov
mov
test
xor
jecxz
stc
cli
into
sbb
sti
xchg
test
jmp
je
out
sbb
adc
and
faddl
movsl
xchg
cwtl
mov
cmpl
shl
xchg
out
jmp
xchg
dec
pushf
jnp
ss
cmp
xchg
push
xchg
sahf
cmp
pop
dec
and
inc
adc
in
and
mov
loop
sub
aas
sub
dec
jg
mov
push
es
icebp
sbb
cs
dec
in
lods
xor
in
xor
and
loop
jl
mov
das
fstpt
mov
lock
push
mov
test
xchg
cltd
pushf
in
aad
cli
in
das
mulb
mov
jno
xchg
dec
mov
sbb
mov
push
movsl
test
mov
or
mov
adc
in
imul
jb
inc
nop
dec
fcmovne
jno
cmpsb
mov
add
call
jle
jle
xchg
jae
je
iret
mov
lods
sub
cmp
add
into
cmp
add
jnp
mov
mov
xchg
push
xchg
pop
ficomps
adc
inc
cmc
outsw
jae
xchg
aam
sbb
sti
cmpsl
cmp
xchg
mov
inc
dec
inc
xchg
mov
test
je
aas
ja
rorb
repnz
das
rclb
or
pop
mov
pop
mov
cmc
rcll
aas
sahf
subl
aad
push
imul
je
cmp
and
imul
clc
inc
jg
in
jg
push
mov
int3
lret
jl
and
cld
cmp
loop
in
inc
cld
loope
mov
rclb
inc
push
jo
in
clc
rcrl
mov
adc
jbe
outsb
xchg
dec
aam
lahf
jp
icebp
das
sarb
lods
test
adc
outsl
dec
ljmp
push
gs
ret
sub
jg
mov
roll
xchg
xor
pushf
out
nop
sbb
sbb
das
push
inc
pop
xchg
push
pop
adc
jbe
aam
mov
outsb
cmpsl
pop
mov
shll
xor
daa
lahf
sub
notl
mov
adc
les
sbb
lret
sbb
movsl
fcompl
divl
jle
cmc
mov
sbb
test
push
and
sub
enter
lret
scas
lret
xor
arpl
push
movsl
pop
negb
pop
mov
cmp
shl
jle
aam
xchg
jmp
adcl
inc
cmp
add
je
hlt
inc
les
into
mov
mov
int3
dec
test
xor
jecxz
mov
nop
pop
sbb
mov
data16
xor
out
jmp
in
mov
iret
arpl
cmp
xor
dec
mov
xchg
call
call
pop
sbb
repnz
or
push
mov
cwtl
jbe
xchg
pop
movl
daa
cltd
mov
push
mov
mov
out
stc
sbb
jp
and
push
out
xor
adc
btc
movsb
adc
dec
ss
popa
xchg
sbb
out
adc
outsl
arpl
mov
fwait
mov
mov
push
pop
adc
mov
sti
or
and
jp
fidivl
dec
adc
pop
jbe
ja
hlt
xchg
mov
push
mov
push
dec
loope
sub
mov
nop
and
dec
js
jle
ljmp
dec
mov
or
add
jo
cs
or
in
cmpsb
sarb
jo
pop
mov
mov
mov
mov
push
lret
add
adc
pop
les
lret
push
mov
and
mov
mov
adc
fwait
inc
or
add
sti
jnp
or
aaa
bound
fwait
jge
rol
mov
cld
shlb
in
mov
pop
adc
and
cmp
push
or
flds
jmp
sub
insl
jb
dec
iret
jmp
and
xchg
mov
lcall
and
adc
inc
mov
pop
dec
add
mov
push
fdivrs
mov
jns
mov
out
lds
mov
sub
imul
jmp
push
xor
int3
sbb
jl
xchg
add
aad
sbb
sub
sub
xor
loope
and
ret
rcrl
gs
and
or
outsl
bound
fmuls
int3
repz
popa
xchg
in
loope
out
mov
add
movsb
popf
lods
dec
shrl
cmpsl
or
xor
dec
inc
movsl
popa
data16
inc
xor
adc
rol
mov
mov
xor
add
jo
sub
enter
shrb
nop
sbb
ror
sbb
pop
and
sub
sub
xchg
scas
and
je
jmp
bound
or
out
and
and
and
jge
inc
pusha
push
mov
loop
ja
shr
push
jbe
int
mov
mov
cmp
push
xorb
fwait
test
mov
mov
jne
fstpt
pop
mov
add
or
lods
negb
mov
js
jl
mov
lds
pop
or
jns
cwtl
in
call
cmpsl
mov
aaa
testl
pop
adc
js
mov
cmp
cmp
mov
arpl
cmove
shlb
jae
jae
add
fdivrs
mov
sub
cmp
add
jge
ficomps
jno
jbe
lcall
aaa
out
mov
sahf
dec
out
and
cmp
scas
aaa
dec
inc
je
pop
mov
jbe
hlt
cmp
out
and
fbstp
or
push
iret
bound
int3
xchg
sub
xchg
adc
pop
imul
add
xchg
jnp
dec
jno
mov
gs
mov
insb
inc
adcb
push
jb
push
loope,pn
adc
dec
dec
mov
notl
clc
pushf
xchg
adc
cld
mov
mov
les
cmp
addr16
sar
or
jmp
cmp
and
adc
cmpsl
sub
cld
sub
jb
iret
mov
mov
fsub
push
into
jae
pop
cmpsl
lods
inc
mov
das
loope
popa
pop
or
iret
mov
cmc
lods
adc
cwtl
daa
in
js
mov
and
mov
mov
pop
sbb
mov
scas
icebp
push
aad
mov
push
dec
push
add
or
sarl
enter
push
je
lods
rcl
scas
loopne
mov
cmpsl
or
repz
in
std
in
jecxz
iret
cmpsb
sbb
mov
stos
in
jnp
ljmp
sbb
std
sahf
orl
call
std
stos
jmp
xor
ss
add
fisubl
subb
popl
sub
or
pop
idivl
lea
or
mov
out
call
imul
fidivrl
syscall
push
iret
sbbb
add
ja
fsubrl
test
bound
ja
idivb
mov
jecxz
mov
mov
dec
dec
call
jbe
mov
push
xlat
add
mov
inc
sbb
cmp
xor
bound
dec
popf
addr16
mov
jg
nop
inc
xor
add
lret
mov
sti
daa
out
scas
dec
fisubl
ljmp
bound
cmp
mov
cmc
in
push
mov
mov
sbb
jbe
dec
xchg
int
lea
movsl
pushf
jge
fsubrl
pop
xchg
inc
or
dec
adc
xchg
cs
lahf
push
xor
pop
sub
fwait
enter
fs
lock
pop
loope
lret
in
test
rcrb
cmpsb
or
fisubl
or
mov
mov
test
popf
outsl
xlat
int
or
mov
mov
or
repz
mov
inc
and
dec
stos
xor
push
or
mov
fsubrs
adc
sbb
add
mov
pop
jg
adc
pop
stos
or
pop
cmp
dec
out
pop
ficoms
push
mov
iret
ret
daa
sub
inc
testb
fdiv
xor
mov
xor
insb
cli
inc
add
jmp
push
pop
or
stos
sbb
loop
mov
ljmp
pop
jge
push
push
fmuls
jne
fidivrs
stos
jbe
loop
rorl
gs
and
inc
rcrl
mov
lds
cmpsl
into
inc
sbb
testw
mov
mov
xchg
stos
xchg
data16
pop
inc
test
inc
xchg
popf
inc
aas
pop
jne
or
jg
mov
cmp
dec
add
pop
sbb
sub
std
jb
push
mov
mov
inc
test
jnp
scas
jb
repnz
or
sbbb
jnp
test
insl
gs
in
outsl
insl
into
mov
push
in
fldt
dec
mov
sti
mov
jne
dec
lock
push
leave
stos
pop
fcoml
or
stos
stos
push
data16
jae
xor
xor
lea
rcll
test
out
sbbl
jno
aam
jb
push
mov
aaa
adc
and
and
test
push
inc
mov
or
ds
cmc
xor
inc
cwtl
sub
add
in
test
lods
adc
cmpsb
jbe
pushf
push
scas
js
clc
loope
mov
movsb
imul
ret
pop
hlt
aam
push
xchg
inc
pop
cmp
mov
xchg
loopne
mov
jnp
mov
cmc
jge
pusha
lea
std
inc
test
lods
sarl
shl
mov
popf
bound
insl
sub
sbb
iret
aaa
sub
inc
or
mov
push
or
mov
shl
jmp
popa
subl
xchg
loop
pop
mov
lret
push
mov
mov
and
fwait
xor
aam
and
div
mov
test
or
sub
lret
sub
mov
sub
sub
inc
dec
lea
loopne
dec
sbb
lods
mov
lcall
and
aas
aam
inc
call
rcrb
or
vpshuflw
mov
int3
push
leave
xor
ljmp
add
mov
data16
sbb
inc
mov
test
es
pop
mov
fstp
cld
mov
aad
loope
add
adc
xor
and
mov
adc
loopne
lods
jge
xchg
daa
adc
inc
icebp
clc
jns
js
mov
or
xchg
sbb
pusha
xchg
sbb
mov
cli
and
ss
push
add
push
push
jmp
jmp
pusha
insl
in
adc
sti
mov
xchg
fld
mov
xor
shll
sub
pop
insb
push
jnp
cmp
push
popf
test
sub
test
in
ss
add
sbbb
dec
dec
cmp
sahf
add
sbb
fstps
jb
and
inc
jge
pop
popf
jae
test
out
inc
inc
clc
pop
xchg
cmpsb
mov
xchg
mov
or
xchg
ficompl
jl
lds
cld
xlat
cmp
or
jle
pushf
hlt
dec
out
fstl
mov
and
mov
inc
sbb
jno
das
cmpl
inc
inc
dec
add
addr16
pop
pop
or
jne
jae
lahf
cltd
loop
int
insb
pop
mov
xchg
imul
pop
sbb
je
movsb
dec
push
daa
mov
adc
test
mov
imul
cmp
xlat
dec
les
fwait
outsb
fidivrl
bound
xchg
inc
fdivl
pop
push
push
movsb
push
mov
pop
add
leave
fildll
test
ss
pop
out
pushl
jge
xadd
push
xchg
mov
sbb
int
pop
rol
loop
sarl
bound
adc
cmp
lret
and
pop
mov
leave
nop
ja
pusha
int3
addr16
or
inc
jbe
xchg
insb
mov
mov
adcl
pop
imul
xor
mov
pop
aad
lods
push
mov
jo
vshufps
aaa
cmp
rorb
cmp
cs
xchg
jo
popf
push
out
xlat
mov
pop
cmp
iret
sbbl
push
xorb
pop
pop
lods
es
outsl
int3
mov
or
inc
adc
or
mov
std
out
faddl
adc
inc
mov
loope
fwait
push
push
inc
lods
fildll
mov
lcall
mov
pop
enter
les
push
loopne
loopne
rorb
mov
or
pop
mov
clc
arpl
repz
test
inc
jae
hlt
ja
lcall
jl
shl
mov
dec
mov
push
pop
xchg
pusha
sti
xchg
jae
shrb
jno
add
testl
data16
ret
inc
adc
dec
pop
notrack
jmp
mov
xchg
add
sub
outsb
or
ja
jo
mov
inc
or
xchg
cmovbe
hlt
inc
push
test
push
mov
dec
dec
dec
cs
mov
fstpt
shlb
mov
mov
lret
mov
lret
push
push
xor
or
jnp
mov
shlb
and
fists
cwtl
aaa
mov
pop
mov
mov
jnp,pn
cmpsl
cmp
push
repz
adc
mov
push
mov
jb
movsl
ret
mov
cmovne
js
fsubrs
mov
cmp
mov
push
ds
mov
imul
mov
xchg
push
scas
mov
xor
push
in
ret
out
cld
test
lcall
mov
dec
sub
fstps
mov
push
cltd
mov
sbb
pusha
clc
sbb
and
ficoms
adcb
andl
sub
mov
stos
ljmp
testl
out
add
imul
in
scas
mov
mov
std
insl
loop
dec
mov
mov
mov
nop
lahf
mov
sub
mov
dec
dec
daa
adc
in
fchs
xor
xchg
into
jecxz
cltd
xchg
xor
xor
lea
add
loop
rorl
repnz
shlb
mov
sub
leave
in
xor
lock
clc
sbb
cmc
jmp
mov
rol
jae
addr16
sti
mov
stos
mov
mov
hlt
pop
jle
xchg
xor
pop
js
jmp
cmp
dec
mov
adc
call
idivl
shlb
mov
call
and
aad
cmp
call
loop
mov
sub
mov
movsl
mov
jl
add
and
xchg
mov
and
aas
in
int
push
inc
outsb
inc
rorb
or
fdivs
mov
pop
js
jl
xlat
sbb
or
xchg
cmp
pop
xchg
sbb
mov
jl
adc
mov
iret
jae
mov
inc
xor
xor
sbb
pop
shll
xchg
cmp
out
mov
xchg
dec
dec
popa
sahf
jl
pop
adc
js
adc
pop
repz
imul
into
addb
icebp
mov
pop
insb
std
stos
xor
pop
sbb
inc
dec
shl
xor
jecxz
inc
test
mov
xchg
xchg
outsl
push
xor
xchg
lods
jmp
repz
sbbb
dec
dec
push
sub
cmpsb
sbb
lods
movsl
lods
inc
mov
out
daa
lea
mov
and
mov
cmc
xchg
cmp
inc
add
ret
jo
enter
jl
xchg
pushf
pop
loope
jbe
mov
insb
mov
mov
push
adc
jl
call
xchg
lods
or
inc
mov
gs
jns
push
inc
xor
mov
sub
sbb
clc
jg
shr
adc
cs
fwait
xor
imul
dec
inc
jne
push
movsb
cld
jl
sbb
jp
pop
xchg
push
mov
gs
cmp
mov
mov
inc
push
xor
shrb
test
repz
xchg
aas
add
push
xchg
mull
pop
lods
lds
xchg
adc
pop
and
jns
pop
jge
and
mov
or
and
mov
adc
dec
xchg
mov
inc
orl
inc
jne
int
shr
cmpsl
xchg
icebp
pop
jl
or
mov
into
mov
pop
sub
mov
das
std
sub
cmp
or
jb
pop
adc
pop
mov
sbb
mov
shll
or
imul
int
lret
add
fdivrs
xor
cltd
mov
imul
dec
out
push
mov
mov
out
push
cmpb
push
mov
hlt
mulb
mov
rcl
andw
mov
lahf
andb
mov
out
in
mov
adc
and
dec
xchg
fsubr
sbb
and
lcall
mov
fbstp
faddl
jb
sti
adc
xchg
fsubl
inc
imul
cwtl
addl
mov
inc
int3
scas
sub
fcmovu
sti
pop
mov
mov
pop
out
adc
mov
or
and
mov
fmul
mov
cmp
ja
aad
and
push
pop
pop
and
cmc
jno
add
cmc
ja
js
shll
push
or
cmpsb
mov
dec
clc
les
fwait
lretw
add
lret
pushf
sub
imul
loope
push
repnz
jecxz
inc
fwait
out
push
cmp
sbb
imul
push
mov
clc
xchg
stc
sub
mov
inc
and
cli
xor
mull
jle
xchg
xlat
icebp
xor
jg
js
or
addb
lret
mov
pushf
xchg
ljmp
icebp
out
inc
and
ss
xlat
gs
sub
cwtl
push
inc
mov
and
shrl
imul
test
or
stos
lret
or
fwait
pop
push
out
aam
add
push
adc
lods
xchg
jmp
out
mov
push
mov
fstps
jmp
insl
mov
add
fucomp
js
mov
xchg
jecxz
fisubrl
insb
push
lahf
xor
scas
add
scas
les
mov
addr16
sub
dec
nop
mov
shll
daa
setno
sbb
sahf
mov
ja
and
dec
push
and
add
test
sub
dec
add
imul
xorl
mov
test
xchg
jo
mov
roll
popf
cmp
mov
pop
mov
lahf
jl
cmp
mov
cmp
movsb
clc
pusha
or
xor
jecxz
lock
cwtl
sbb
clc
rolb
adc
jp
and
dec
mov
adc
mov
mov
mov
leave
sub
stc
or
pop
lret
mov
mov
cmpb
mov
ljmp
push
js
mov
or
lods
shll
cmp
daa
inc
or
insl
pop
lahf
xchg
inc
mov
in
inc
push
pop
ret
add
cmp
mov
dec
gs
popf
jnp
and
sub
orl
pop
pop
inc
adc
nop
fimull
lods
or
adc
xchg
mov
ds
push
cltd
insl
pop
and
cld
in
push
aaa
sti
adc
jns
sbb
xor
je
mov
loope
sarl
sbbb
pop
aam
sub
fisubrl
sub
ss
adc
push
push
jl
repnz
cmpsb
jo
cmc
adc
push
js
ret
loopne
in
adc
fisttps
jg
imul
dec
cli
and
dec
mov
addl
outsl
aad
sub
mov
pop
push
xor
pop
popf
inc
stos
xor
test
cli
aas
cmp
outsl
xchg
aas
imul
mov
mov
mov
mov
and
lret
add
cmp
inc
imul
adc
gs
hlt
int
imul
andl
or
stc
push
lea
adc
jge
iret
sub
and
jo
cmpsb
or
bound
in
sub
xor
call
and
push
xchg
aad
push
es
add
adc
insb
fbstp
sahf
gs
cld
subl
orl
testl
ja
mov
add
daa
jmp
adc
sbb
xor
adc
jb
mov
shll
mov
add
out
mov
jecxz
lds
cmp
jae
ret
and
sub
pop
adc
jecxz
add
mov
jl
fidivrs
mov
sub
fmul
push
test
mov
push
insl
inc
lds
aam
mov
pushf
xchg
add
jo
push
mov
int3
seto
inc
xchg
adc
xchg
mov
test
xchg
cltd
dec
jmp
jge
inc
ret
xchg
add
and
sub
fucomi
sti
mov
fstpl
xchg
add
bound
xlat
xchg
in
add
fwait
mov
sbb
imull
repnz
rcr
repz
stos
pop
out
loopne
push
adc
popl
inc
das
hlt
sbb
and
mov
push
sahf
stos
popf
pop
mov
mov
push
sbb
mov
out
loope
xor
imul
fisttpll
push
cld
test
mov
ljmp
or
mov
out
mov
mov
pop
mov
jge
mov
enter
lock
and
loopne
mov
lods
scas
cmp
aaa
and
fsubr
iret
ret
xchg
orb
xor
add
ret
mov
xor
mov
arpl
xchg
push
sbb
pop
aas
in
into
jmp
mov
sub
fisttpl
clc
xlat
pop
mov
test
and
pop
in
std
in
bound
cmpsl
out
je
adc
dec
iret
negl
out
out
outsl
les
out
jno
sbb
mov
outsb
into
imul
sbb
push
mov
aaa
cmpsl
je
pop
cmpsl
push
sbb
jge
shrl
negb
xchg
aad
add
pop
int3
ss
cwtl
lret
and
pop
push
mov
push
xor
loop
mov
push
xchg
push
insb
adc
into
in
cmpl
and
push
mov
fidivl
or
aas
shll
and
and
xchg
push
lea
std
pop
iret
xor
pop
fwait
aaa
fdivrp
mov
out
dec
mov
pusha
mov
or
and
add
xor
adc
hlt
adcb
lea
jl
shl
insl
bound
jecxz
fildl
daa
addl
mov
insb
or
loop
mov
lea
mov
fcompl
les
adc
xor
aad
jo
dec
jae
lods
lock
cmp
sub
in
aam
jnp
addr16
xchg
pop
daa
and
lock
or
aaa
fmuls
push
js
stos
xlat
pop
mov
std
dec
jle
icebp
push
notb
add
ret
mov
xchg
sub
cmc
jae
mov
add
aam
fadds
inc
ret
jg
lret
mov
push
bound
std
pop
mov
jnp
ss
subb
stc
dec
xchg
scas
sahf
pop
pop
das
inc
mov
movsb
add
adc
pop
xchg
fistpl
ret
sub
into
ja
pop
dec
shlb
inc
xchg
xchg
idivb
je
lahf
push
sbb
nop
push
pushf
adc
out
dec
lcall
iret
add
jb
lret
aam
xor
mov
movsb
mov
cld
cld
mov
orb
pop
mov
lret
pop
fnstcw
inc
hlt
pop
addr16
arpl
sti
fs
inc
dec
mov
jl
sahf
mov
adc
scas
daa
push
inc
leave
bnd
insb
insb
inc
dec
or
adc
insb
xchg
cmp
and
sbb
pop
outsl
add
xchg
jecxz
pop
jns
repz
or
mov
and
mov
and
rcl
ja
sti
jbe
mov
mov
xchg
mov
loop
push
push
incl
mov
rcr
test
add
outsl
icebp
sbb
xchg
lret
sbb
and
int
pop
mov
pushf
rcl
sub
jge
inc
xchg
cmpsb
push
cmp
inc
aad
mov
xchg
push
int3
xor
sti
repz
sbb
add
dec
sub
cli
push
inc
cld
adc
divb
push
pop
bound
xchg
aad
je
push
dec
jl
outsl
sub
push
xor
fidivl
push
leave
lods
xchg
fiaddl
pop
push
ja
cmp
lods
negb
adc
dec
jge
insl
ss
lahf
sub
iret
mov
cmpsb
pushf
stos
outsl
js
pop
fs
mov
and
pushf
lret
mov
jle
out
jno
jno
aas
mov
clc
inc
mov
xchg
out
pop
cmpsl
sbb
fdivrl
ficoms
inc
and
dec
ss
push
cmp
movsb
and
data16
repnz
subb
lret
js
cmp
pop
or
cmp
push
add
jbe
or
push
stos
jb
cld
adc
insl
xchg
mov
mov
push
xchg
jp
enter
lock
int3
cltd
cs
popl
pop
enter
jle
push
or
pop
es
divl
mov
cmp
popf
std
mov
out
mov
stos
fwait
pop
arpl
xor
sbb
lock
xchg
lret
fs
dec
int3
mov
int
icebp
mov
ret
shl
xor
aas
adc
and
push
sub
cltd
and
jbe
add
adc
add
cmpsb
out
sbb
rorl
cli
lods
pop
xor
cltd
in
xchg
push
sub
push
imul
aam
loopne
movsb
inc
mov
icebp
ficoms
xor
mov
stos
or
xchg
ret
lret
and
ss
dec
insl
mov
rcr
int
lock
sbb
idiv
les
data16
xor
xchg
in
xor
push
shrb
icebp
adc
fwait
inc
test
lds
aaa
add
pop
inc
aam
leave
insb
in
pop
sub
cmc
or
sub
call
rolb
and
lret
les
or
mov
out
dec
jbe
je
jb
psubw
push
lahf
or
lcall
jno
icebp
mov
mov
pop
nop
mov
lock
jnp
mov
andb
fcomp
jle
jb,pt
imul
ljmp
inc
mov
xor
repz
mov
fldl
adc
rcll
cmc
push
lret
daa
add
cmpsl
lret
popa
xchg
movsb
popf
cmpsb
call
add
rcr
mov
rorb
loop
adc
inc
lods
bound
std
jle
fabs
cld
inc
sbb
mov
test
or
js
mov
sbb
xchg
sbbb
scas
mov
cmpsb
testl
mov
mov
jge
hlt
divl
adc
cwtl
insb
push
popf
je
movsl
jg
hlt
jo
cld
pusha
sub
mov
mov
xchg
in
lods
or
imul
mov
ljmp
ret
xchg
outsb
push
adc
pop
pop
cmp
repz
insl
js
leave
lret
cmp
adc
out
out
adc
sbb
mov
jo
lret
in
cld
cmp
ja
mov
pop
lods
dec
scas
and
add
and
sbb
push
xor
bts
jo
push
cmp
cli
xchg
mov
xor
add
and
test
cmp
sub
int3
mov
enter
mov
mov
sbb
cwtl
sbb
lds
shufps
fst
lods
dec
loopw
and
ficomps
in
push
dec
adc
or
cmpsl
pusha
aaa
psadbw
lods
adc
pushf
inc
popa
or
popf
test
lret
jo
lret
dec
cld
std
gs
or
jns
ficoms
add
mov
adc
mov
pop
mov
mov
dec
mov
movsb
pop
outsl
inc
es
xor
xchg
xor
ljmp
cwtl
sub
hlt
push
pop
add
loop
int
sbb
hlt
xor
dec
or
and
ds
sub
loope
jno
xchg
clc
imul
jb
das
adc
cmpsb
sub
mov
fmuls
dec
pusha
into
outsl
mov
in
add
adc
add
int3
mov
fisttpl
rorl
cmp
movsl
jmp
inc
mov
lods
xor
inc
xchg
xorb
push
fsubl
xlat
clc
push
dec
pop
pop
ja
pslld
jmp
lret
filds
add
inc
inc
push
xchg
adc
cmp
jo
xchg
xchg
mov
faddl
test
mov
mov
fwait
lock
cmc
iret
mov
jno
fs
cs
mov
push
add
push
std
push
dec
dec
dec
outsl
outsb
rolb
dec
daa
sbb
jg
insb
mov
loop
mov
dec
cmp
sub
setbe
adc
lret
js
std
rclb
jnp
mov
mov
insb
inc
fwait
insl
push
jne
mov
jae
xchg
cmp
add
adc
scas
test
lock
pop
into
inc
rclb
sti
lret
dec
int
or
push
mov
push
and
jae
mov
imul
inc
scas
sub
insl
mov
mov
sbb
incb
in
jnp
mov
repz
cmp
xchg
inc
push
ljmp
stc
ficoml
imul
in
dec
sub
xchg
mov
pop
mov
pop
jmp
ret
jp
notb
pusha
aad
push
add
inc
push
xchg
rcrl
int
out
pop
das
add
mov
sub
pop
test
pop
aas
or
mov
ret
cwtl
fcomps
into
jns
popa
stos
lods
cmp
xchg
mov
jno
adc
cmp
lret
pop
xor
mov
and
test
mov
jne
add
add
and
inc
xchg
testl
sbb
adc
subl
pop
call
xlat
push
mov
sub
scas
dec
and
dec
call
sub
sub
das
in
sub
adcb
cli
aas
sahf
lds
adc
sub
pop
mov
fimuls
pop
pop
lods
mov
mov
sbb
int
clc
cmp
xlat
sbb
jmp
enter
jle
stos
jb
int3
mov
cmp
push
xchg
fwait
pop
mov
pop
sbb
xchg
xor
cli
data16
mov
sbb
jl
mov
and
inc
inc
mov
aas
sub
cli
mov
lahf
push
dec
shl
jno
popf
ljmp
xchg
mov
xor
jl
popa
and
gs
test
mov
jmp
test
add
sti
flds
div
pop
adc
es
xchg
and
jbe
adc
mov
cld
divl
repnz
imull
lret
aas
cs
call
xor
push
pop
cmp
loopne
push
mov
mov
adc
sbb
stc
mov
insl
sub
scas
xor
fidivs
fcompp
xchg
sbb
jo
adc
aad
push
loope
in
in
scas
xchg
leave
decl
push
arpl
xor
mov
xor
add
cs
mov
repz
lcall
mov
fisubrl
mov
fisubrs
idiv
int
cwtl
push
mov
out
mov
or
cmp
pop
out
dec
mov
pushl
lret
or
jne
cmp
dec
mov
sahf
rolb
enter
push
imul
in
aaa
sahf
xor
lea
or
addb
pop
xchg
lahf
push
xchg
scas
bound
mov
sub
push
adc
ret
imul
loopne
adc
inc
inc
mov
es
loope
mull
lahf
ret
ds
push
insl
adc
push
stos
popa
test
push
cmpsb
add
stc
cmp
and
jb
mov
ret
mov
jbe
add
fisubrs
out
sub
sbb
mov
push
into
cmp
stc
dec
int3
xlat
sub
pop
or
push
cmc
or
mov
jno
sarb
pop
aas
rcrb
cmove
add
imul
daa
and
jne
jecxz
mov
aam
xlat
repz
inc
jns
and
inc
jle
cmp
push
fcmovnu
lret
mov
jae
testb
sub
jnp
push
inc
jecxz
lods
rcl
outsb
push
mov
imul
xlat
pop
es
dec
sbb
scas
xchg
enter
mov
test
mov
push
lds
xor
fisttpll
inc
mov
pop
sbb
adc
imul
jmp
add
arpl
dec
mov
push
aaa
mov
add
cwtl
or
jb
or
add
mov
jbe
bswap
jg
test
ljmp
adc
jbe
sti
jnp
lods
popf
xchg
inc
sbb
mov
pop
popa
lret
lods
in
mov
xor
fstps
pop
inc
popl
dec
cmpsb
mov
jmp
lds
shrb
test
sub
mov
mov
mov
mov
sub
test
mov
sub
xchg
daa
dec
or
pop
idivl
jecxz
sub
movsl
cmp
test
xlat
mov
or
bound
popa
push
mov
pusha
out
les
in
xchg
pop
cltd
inc
xor
dec
jno
in
push
inc
scas
inc
dec
mov
sbb
mov
scas
xor
jle
xchg
sbb
lods
out
rorl
push
jae
mov
push
in
ja
jge
aad
or
fildll
mov
in
rcr
jno
inc
jge
loope
push
inc
jb
pop
imul
inc
add
repz
mov
jns
lods
std
push
add
xor
add
inc
aad
jbe
sbb
pop
xor
daa
sbb
xor
sub
jecxz
sbb
icebp
add
and
mov
fsts
pop
sbb
or
es
jnp
jmp
and
mov
push
mov
fldcw
jns
inc
cmp
nop
cmp
les
mov
mov
add
sbbl
cmp
pop
popf
in
pop
mov
mov
mov
add
pop
fwait
call
repz
sbb
mov
cmp
and
jl
jecxz
cli
out
push
pop
pop
addr16
add
jge
stos
cli
push
push
sub
cmpsb
mov
sub
ljmp
frstor
and
mov
pop
jns
sbb
mov
test
pop
scas
jmp
mov
pop
pop
dec
imul
loope
pop
xor
ljmp
or
xchg
shl
scas
iret
in
cmpsl
dec
adc
cmp
push
sub
mov
or
xchg
mov
pop
dec
lods
jno
in
push
pop
or
sub
scas
push
mov
js
lea
adc
inc
or
into
push
bound
adc
aas
xchg
push
fs
mov
scas
cltd
sub
fucomip
sbb
mov
das
lea
push
jg
adc
inc
aad
jle
test
or
dec
mov
mov
sbb
adc
lcall
push
repnz
jns
lea
aas
btc
jno
lcall
lock
scas
ror
mov
insb
mov
pop
jo
leave
das
int
ja
cmp
in
push
cmp
mov
mov
lret
icebp
int3
dec
cmp
ret
shl
imul
mov
arpl
or
out
test
repz
add
or
fcmove
cmp
pusha
jo
jae
or
mov
xchg
adc
xchg
dec
repnz
push
mov
popf
mov
jl
push
popa
scas
popf
idivb
cmpsl
xlat
mov
pop
cmp
inc
in
jae
jno
ljmp
push
or
pop
jmp
or
loope
out
lahf
inc
jp
in
lcall
outsb
and
or
js
pop
xchg
lods
dec
sub
sbb
dec
mov
pusha
int3
stos
mov
jg
pop
adc
mov
sarb
inc
jbe
push
push
push
pop
aas
movsl
xchg
lcall
pop
mov
daa
cmp
cmc
sti
dec
xchg
lret
mov
sbbb
lcall
daa
popa
dec
cltd
mov
jmp
data16
and
movl
jbe
cmp
and
in
in
dec
testl
jno
mov
imul
loopne
jp
add
pop
xor
imul
fisubs
mov
in
pop
pop
add
pop
add
pop
mov
inc
pushf
and
outsl
mov
xchg
cmp
rcrb
aas
jg
mov
cmp
lret
xchg
cs
mov
and
jnp
sub
ret
dec
rorl
mov
lahf
faddl
std
inc
sbbl
push
dec
mov
pop
cmp
test
iret
cld
add
sti
pop
sbb
cmpsl
std
mov
popa
hlt
xchg
push
or
or
jnp
jg
fwait
rorb
cmp
mov
jmp
test
jl
or
sbb
xor
nop
xchg
aas
push
add
or
xor
out
test
mov
add
inc
jbe
iret
sbb
notl
out
sbb
cli
push
mov
push
lret
sbb
mov
out
fst
push
pop
push
into
scas
sbb
insb
mov
repz
sbb
inc
sbb
or
aam
cmp
lods
stos
movsb
ret
clc
pop
or
stos
pop
jb
loopne
or
pop
mov
jle
stos
out
fdivp
xchg
mov
xor
pop
stc
shrb
cmc
fsubrs
ret
adc
mov
jecxz
iret
inc
push
push
pushf
mov
adc
in
sub
cmp
and
cli
out
sbb
dec
xor
sbb
pop
cmp
pusha
pop
test
jbe
xor
sbb
aas
mov
sbb
mov
mov
pop
mov
sub
add
jb
sub
xorb
inc
mov
jnp
dec
xlat
xor
popf
mov
cwtl
push
xor
nop
testl
pushf
insl
and
rorb
js
lods
mov
mov
cli
xchg
dec
insb
stc
sub
pusha
mov
aam
fisttps
negl
lods
mov
jb
mov
cli
das
jecxz
adc
bnd
out
or
jne
cld
in
addps
inc
cmp
std
fsts
mov
dec
lods
jb
lock
stc
jmp
stos
xor
jo
scas
cwtl
ror
xchg
jns
cmpsb
das
shll
xchg
int
push
dec
and
sub
inc
mov
iret
lock
xlat
and
out
repz
fcmovbe
cmpsl
mov
in
daa
movsl
mov
jge
cmc
jne
jmp
nop
or
inc
mov
sbb
inc
mov
jmp
cmpb
push
push
out
ret
dec
or
test
cmp
pop
inc
xchg
inc
sub
sti
test
mov
cmp
jge
ljmp
or
mov
dec
das
ja
lods
jae
jae
jno
outsl
fldcw
xchg
adc
mov
in
xchg
mov
leave
push
cmp
in
add
data16
push
xchg
cmp
add
pop
outsl
jg
xor
inc
mov
lret
xchg
testb
jo
scas
push
filds
push
mov
push
shll
inc
cmp
mov
jbe
push
and
arpl
xor
lcall
sub
and
jp
mov
mov
mov
notb
pop
pop
test
cld
mov
cmp
lea
sbb
mov
addl
cli
sub
stc
mov
add
dec
test
imul
fwait
aad
out
fwait
pop
xchg
inc
out
xor
jo
int3
lds
mov
xlat
xchg
mov
pop
jae
pushf
jo
mov
daa
imul
dec
mov
icebp
divb
mov
repnz
xchg
add
xchg
shll
ror
push
pop
mov
sbb
test
data16
fistps
loope
das
repz
or
pop
cmc
movsl
insl
ror
fstpl
add
or
mov
xchg
shrb
jns
inc
hlt
nop
lock
scas
and
mov
das
push
leave
xchg
insb
scas
jae
push
add
je
mov
and
xchg
andb
add
rcr
add
sti
and
mov
sbb
mov
mov
mov
or
jg
scas
in
or
lods
push
test
mov
cmp
lahf
fistps
add
mov
stos
aad
imul
pop
adcb
adc
xchg
mov
jnp
mov
shlb
jbe
subps
shll
add
jnp
adc
mov
into
xchg
mov
add
out
push
cmp
insb
cmp
dec
cmp
mov
cmpsb
into
sti
jno
jl
add
xlat
mov
aas
sub
sbb
inc
stos
cmpsl
shlb
jp
mov
sahf
les
push
xchg
sub
mov
push
testb
ja
mov
daa
call
jecxz
xlat
add
adc
mov
lret
das
es
sbb
pop
out
adc
insb
inc
dec
bound
dec
xor
mov
movsl
add
mov
out
mov
adc
lret
jp
cltd
cmp
addb
in
out
sbb
inc
cmc
lea
sbb
out
insb
inc
jle
mov
shrb
mov
mov
jb
roll
sub
mov
and
ljmp
sub
out
stos
ds
out
aas
mov
dec
dec
pop
popa
xor
ret
push
sahf
nop
insl
jp
lahf
out
rclb
fucomip
sub
sbb
shrl
or
jb
imul
push
test
scas
jne
into
xor
sub
and
fnsave
hlt
movsl
nop
xor
js
mov
pushf
test
fidivrl
pop
mov
jns
lcall
xchg
or
movsb
loope
cmp
cmp
push
in
push
pop
mov
fbstp
mov
icebp
pop
addr16
cmpsl
mov
cmp
push
mov
mov
gs
pop
push
stos
lods
dec
pop
pop
jae
jns
xchg
jmp
sbb
adc
add
in
push
test
dec
call
js
sbb
cltd
dec
in
popfw
cwtl
xchg
lahf
pop
gs
leave
dec
shll
push
loop
es
cmp
sub
out
cs
adc
popa
push
inc
les
lock
fists
xor
aad
jb
jb
outsl
inc
pop
and
dec
jmp
mov
cwtl
aad
adc
fcmovnb
or
andb
jo
cmp
mov
sarb
sqrtps
rcrb
inc
jg
cmp
push
mov
hlt
aas
leave
mov
sbb
shrl
bound
xchg
ret
jne
lret
fldl
push
ljmp
mov
cmp
jb
imul
ret
xor
inc
push
mov
xlat
push
int3
repz
adc
dec
sbbb
pop
mov
mov
dec
adc
out
into
or
adc
sbb
xchg
mov
push
xchg
cmpsb
add
into
ror
outsb
je
or
or
out
hlt
mov
insb
mov
in
sbb
je
dec
lds
dec
roll
icebp
movsb
shrb
imul
push
pop
xchg
ret
dec
stc
adc
add
inc
cmp
rcrl
xor
lock
pop
inc
aam
xchg
movsl
js
call
mov
push
xlat
int3
fwait
push
adc
test
jge
ret
adc
outsb
ljmp
aad
dec
sarb
shlb
xchg
insw
sbb
ja
lcall
imul
mov
jge
sbb
les
test
adc
std
cmp
in
mov
rcrb
or
das
rclb
mov
test
xor
adc
push
movsb
dec
and
dec
cli
ja
data16
push
jo
pushf
and
xchg
decb
lds
and
lods
test
cltd
lock
lahf
out
inc
sti
mulb
mov
cli
cld
pushl
inc
jno
cmp
cmp
cld
inc
test
in
roll
pop
adc
mov
scas
sub
push
push
push
sub
in
mov
jp
sar
pop
add
and
jnp
addl
ret
sti
fs
lea
dec
fcompl
pop
cwtl
adc
push
mov
mov
sbb
jne
clc
mov
imul
xchg
sbb
test
fimull
mov
sub
stos
jecxz
or
sbb
insl
add
mov
cld
jb
scas
idiv
bound
divb
and
or
lret
test
mov
push
inc
xchg
cmp
cmp
adc
jns
addb
push
lret
pop
sub
mov
dec
mov
shl
shll
rolb
aas
cmp
cmc
mov
mov
sbb
xor
inc
call
incl
xchg
insb
pop
cltd
jbe
mov
fcompl
push
jae
subl
jmp
data16
pop
sub
or
adc
cmpl
jle
push
sahf
pushl
cmpsb
pop
fwait
jp
addr16
inc
push
stc
imul
xorb
xchg
cmc
lds
dec
sbb
push
and
mov
scas
daa
pop
jle
dec
orb
sarl
scas
stc
push
cltd
jge
adc
mov
mov
mov
addr16
mov
sbb
stos
stos
out
hlt
dec
scas
popf
arpl
out
in
rol
mov
imul
inc
mov
gs
xor
xchg
cmp
inc
je
sub
and
mov
dec
and
lock
filds
cmp
fisubl
lods
lret
aas
jmp
push
std
mov
push
pushf
sub
fcmovnu
xor
pushf
xchg
or
rcr
bswap
mov
jb
sub
cmpsb
leave
add
mov
inc
mov
fidivrs
jge
out
in
inc
movsb
xor
pop
cmc
aas
scas
cmp
or
or
mov
mov
in
cmp
hlt
data16
cmp
in
icebp
cmpsb
out
xchg
push
lcall
mov
pop
movsb
imul
xlat
and
sbb
mov
and
cs
and
dec
fnstsw
pusha
mov
es
xor
cmp
sbb
clc
into
mov
sahf
pop
sbb
inc
shll
aad
and
sub
aas
adc
mov
push
shl
cmp
inc
lret
subl
mov
ds
push
dec
and
mov
pop
es
jg
or
pop
outsb
outsb
jne
inc
xor
call
popa
jnp
add
xor
lea
fists
jne
and
in
pushf
xor
pushf
iret
push
aam
pusha
or
lds
mov
out
lods
add
insl
icebp
dec
int3
xchg
insb
push
cltd
stos
cmp
xor
xchg
data16
and
arpl
mov
stos
loop
dec
mov
dec
aas
or
pop
fbld
jns
test
cwtl
or
or
jno
sahf
pop
fucomi
stc
testl
popa
test
mov
sub
dec
xor
lock
pop
pop
fimuls
mov
cmpsb
mov
stos
cmpsb
dec
sbb
xchg
movsb
mov
aas
stos
sbb
adc
mov
or
nop
xchg
stc
and
xor
jg
mov
insl
lock
ret
sbb
mov
in
xchg
xor
sub
out
xor
or
jp
sbb
loope
les
bound
dec
bound
call
push
jle
dec
add
int
cmp
inc
inc
cmpsl
loope
fmuls
sub
ret
cmp
rcl
adc
aas
ja
pop
pop
cmp
dec
adc
inc
shll
push
outsl
xor
scas
lock
inc
jmp
out
mov
mov
inc
rorb
pushf
daa
inc
arpl
ret
sbb
daa
shll
adc
sub
lahf
stc
xchg
ret
pop
mov
cwtl
dec
dec
fnstcw
add
iret
pop
stos
pop
sub
sub
pop
mov
test
pop
lahf
fmulp
push
or
jp
out
mov
lcall
loope
xlat
adc
movsb
rcll
mov
mov
rcrl
dec
xchg
mov
rcrb
aad
int3
mov
mov
addr16
add
jnp
and
cmpb
int
inc
dec
jb
and
inc
je
fnstenv
jne
lea
sti
mov
fnstenv
dec
mov
jmp
xor
pop
lods
add
xlat
mov
and
dec
enter
and
je
cmp
push
and
je
outsl
mov
add
data16
jmp
mov
add
jmp
loopne
pop
stos
and
sti
je
xchg
jg
pop
cmc
lahf
xchg
and
insb
push
aaa
rcrl
int3
sahf
and
add
aad
lahf
mov
sti
push
mov
dec
notb
aad
or
and
jmp
sahf
dec
jns
lcall
inc
scas
sub
idiv
test
pop
add
les
daa
mov
sbb
jb
icebp
bound
sbb
xchg
popf
out
inc
repz
cmpsb
jmp
lahf
mov
sub
lods
jl
dec
outsl
popa
int
push
push
mov
loop
jae
cmpsl
fmuls
add
add
les
int3
push
fimull
fincstp
xor
mov
rcr
stc
unpckhps
imul
lods
popl
ljmp
add
pop
aaa
cmpb
sbb
sub
test
je
mov
or
and
pop
and
mov
in
scas
sub
das
div
or
aam
xchg
mov
js
jmp
mov
and
push
loope
cmp
test
jmp
cmp
pop
xor
pop
loope
add
cmp
cs
mov
lahf
mov
cld
and
cmp
stos
pop
jnp
lret
outsb
sub
into
imul
movsl
ret
mov
popa
rcrl
xor
rcr
cmp
les
aaa
sub
adcb
repz
je
enter
pop
jno
mov
jnp
movsb
add
fists
jne
es
or
jge
jp
jae
pop
enter
ficoms
adc
sub
divl
pusha
and
insb
or
stos
call
push
sub
and
cwtl
jns
sbb
stc
les
mov
jecxz
lods
add
sub
mov
lods
lds
test
add
mov
push
xor
inc
mov
cmp
or
or
cmp
xor
out
lds
inc
push
sbb
sbb
mov
xor
rolb
icebp
cmovnp
pop
xchg
int3
jb
pop
mov
outsb
ret
jo
cmp
mov
loop
mov
mov
sub
mov
pop
in
subl
ds
or
fstpl
jle
pop
xchg
xchg
nop
or
hlt
adc
sbbb
aam
popa
fdivrl
in
jmp
in
arpl
mov
repz
jo
or
ljmp
xchg
push
jge
sti
adc
pop
and
jb
fiadds
leave
aad
loopne
stos
ficoms
inc
mov
rcll
and
push
jbe
stos
inc
clc
jns
jno
int3
bound
ja
push
push
xchg
outsl
sti
ret
imul
cli
cwtl
jmp
mov
and
push
loopne
pop
enter
lea
lock
adc
je
mov
mov
mov
iret
fdivrl
ret
outsb
sbb
pop
xchg
cmp
xchg
es
add
pop
in
push
sub
les
arpl
push
test
fcompl
sbb
cs
jo
sbb
xor
shll
fbld
shl
es
cmp
push
cs
sbb
out
mov
data16
inc
rcrb
in
mov
mov
push
stos
sbb
popf
loop
xor
out
adc
cmp
mov
imul
adc
sbb
rorb
dec
lock
jp
mov
ds
or
stos
push
in
mov
data16
adc
push
mov
cmc
sbb
imul
pusha
in
cmpsb
mov
push
lcall
mov
repnz
push
bound
cmc
out
sub
fiadds
bound
clc
js
mov
xchg
lods
adc
mov
daa
push
hlt
cmp
mov
loopne
adc
mov
cmp
mov
and
bound
dec
xchg
test
mov
jmp
icebp
xchg
into
mov
cmp
mov
test
sbb
cmp
mov
faddl
jg
and
mov
sub
sub
mov
mov
or
xor
mov
mov
out
test
in
ja
cwtl
and
cmp
popa
mov
bound
pop
ds
or
inc
adc
into
push
frstor
jnp
lcall
adcl
mov
jo
dec
jle
dec
xor
lock
cli
fistl
cmp
fistps
and
insb
decb
or
or
dec
stos
sub
mov
add
adc
mov
jge
dec
in
ljmp
pushf
adc
test
mov
or
outsb
jbe
arpl
pop
jp
push
bound
jmp
mov
push
sbb
stos
add
fsubs
mov
lcall
testl
addl
xchg
fisttpl
loope
out
leave
xchg
insl
xlat
mov
enter
out
adcl
inc
jecxz
sbb
jnp
jp
push
push
insl
in
data16
ja
adc
daa
cwtl
cmpsb
ljmp
mov
jge
and
ljmp
and
pusha
mov
or
ret
push
lea
mov
add
aad
in
pop
xchg
add
or
and
add
dec
xchg
xor
adc
out
jge
rolb
pop
adc
gs
inc
xor
test
pop
mov
cmp
ret
je
outsb
fdivs
icebp
fwait
lods
test
jb
add
adc
lock
add
jmp
mov
cmp
xchg
test
xor
mov
jg
and
add
jmp
mov
sub
mov
add
and
add
cmc
test
lock
stos
mov
aad
jae
jmp
cmp
lods
mov
xchg
adc
stc
cld
add
xchg
fnstsw
cmp
push
lret
cli
xchg
adc
pop
inc
shlb
fstp
add
in
mov
test
scas
scas
dec
cmp
cltd
iret
stc
in
roll
push
xlat
add
cmc
sti
fisubrl
lea
sbb
xchg
push
daa
popa
mov
lret
add
rclb
inc
sbb
add
jge
pop
out
inc
stos
sti
ret
call
test
dec
je
in
mov
jge
loop
fnstenv
je
and
push
in
fnstsw
adc
int
xchg
push
int
int3
mov
sub
ret
cwtl
inc
and
xchg
jp
int
aaa
in
push
in
loope
lock
lcall
xchg
push
into
mov
aad
adc
xor
mov
mov
xchg
jno
xchg
sub
shlb
mov
jl
or
nop
cwtl
sub
outsl
mov
int
das
dec
mov
ss
cltd
out
cli
inc
fdivrl
and
mov
xchg
in
lods
mov
nop
or
mov
cmp
pop
sub
cmp
and
cmp
daa
adc
fistl
mov
or
sub
or
aaa
xor
mov
dec
jle
dec
mov
sub
sub
sahf
clc
outsb
es
subl
test
push
les
adc
cmp
outsl
mov
adc
mulb
ds
dec
mov
xchg
into
fidivrs
sub
pop
test
fstpt
shl
jmp
cmp
jl
mov
and
cmp
sbbl
sub
or
mov
mov
int
sub
pop
sub
lods
hlt
jg
pushf
jg
pop
sbb
scas
sub
loop
and
mov
lods
and
jle
sahf
xchg
stos
sbb
shll
sbb
push
out
add
add
out
addr16
sbb
lahf
ret
aam
shll
cmc
adc
arpl
lock
mov
and
dec
cmp
mov
cmp
ret
xchg
cmp
adc
stc
sbb
and
sub
repz
xchg
dec
or
mov
daa
pop
clc
add
push
aas
inc
test
leave
and
pop
mov
xchg
add
inc
adc
fwait
and
lds
out
adc
dec
ds
out
clc
jecxz
push
sub
lock
int
fucomip
or
cmp
mov
lahf
rcrb
ljmp
ror
inc
jns
std
popa
add
mov
sub
ljmp
sarb
out
pop
sarb
fidivs
jae
cli
in
push
idivl
dec
xchg
mov
fidivs
xlat
shl
dec
loope
pop
pushf
stc
jb
jbe
ss
mov
mov
movl
cmpl
nop
xchg
in
jecxz
add
jns,pn
out
cmc
jno
push
mov
cmp
adc
jne
ds
sti
push
ret
sahf
aaa
inc
lds
adc
sbb
clc
or
sub
and
sbb
adc
rolb
enter
mov
cmpl
std
lods
mov
in
push
pop
sub
pop
mov
in
and
jns
add
outsl
xchg
aaa
pop
pop
mov
ss
dec
or
and
xchg
cmp
test
pop
dec
adc
aam
sbb
xchg
and
push
mov
cmp
cmpsb
lods
jno
aam
xchg
mov
cli
imul
dec
xor
pop
jmp
mov
inc
enter
lret
pop
outsb
mov
shl
scas
inc
lcall
mov
arpl
cld
xorb
mov
in
insl
sahf
push
dec
hlt
sbb
popf
dec
andl
stos
cwtl
xor
insl
outsb
dec
xchg
push
aam
stc
nop
inc
aaa
or
mov
or
in
pusha
in
stos
xor
pop
dec
inc
push
insl
add
push
data16
inc
jns
mov
push
icebp
add
adc
lock
jmp
xor
mov
dec
xchg
sbb
xchg
or
or
clc
ss
imul
hlt
mov
faddp
sbb
into
fwait
xchg
or
jne
xlat
fisttpll
mov
cmpl
into
sub
mov
push
jnp,pn
jno
repz
lret
jns
xor
jge
inc
jne
add
aas
pop
loop
adc
test
loopne
fists
fdivrp
inc
jns
add
pop
mov
daa
push
add
sbb
aad
sbb
jns
add
pop
les
sbb
lea
mov
clc
pop
sub
rclb
decl
lret
subb
sbb
and
daa
mov
shlb
sbb
push
push
push
mov
and
sub
xor
inc
lods
sub
lock
push
adc
and
aam
jnp
sub
outsb
add
divb
inc
inc
fcmovb
jg
ljmp
sahf
mov
cmp
fdivs
clc
mov
pop
jle
cmpb
andl
and
out
lods
es
push
jmp
pop
ror
test
mov
sbbl
xor
popf
push
inc
mov
lods
or
inc
fidivrs
cmc
sti
and
mov
hlt
bound
dec
pop
std
mov
or
icebp
mov
hlt
ja
outsl
mov
lret
jns
stos
and
cmpsl
add
push
mov
and
ljmp
shlb
lret
mov
sub
mov
sbb
mov
out
xchg
in
jnp
push
rcrb
aas
jno
dec
mov
out
aad
enter
es
jmp
jl
stos
fstl
lods
or
ljmp
loope
scas
into
outsb
add
pop
inc
sti
stos
push
or
and
ficoms
test
cmp
in
jno
mov
mov
cmp
xlat
rolb
ja
inc
imul
mov
out
insb
sti
dec
sub
shl
shll
sub
and
jl
xchg
jecxz
ret
xchg
and
push
fsub
mov
or
mov
push
sub
jae
std
and
in
or
push
sbb
lea
jne
jo
dec
xor
addr16
adc
out
cltd
or
test
sbb
push
in
loope
sub
push
leave
jp
das
lcall
jecxz
jg
jbe
leave
mov
jmp
mov
icebp
dec
ret
mov
popf
fisubrl
stc
das
xchg
lds
inc
cltd
adc
adc
xchg
sahf
push
xor
xlat
pop
ret
add
push
cmp
cwtl
sub
fldl
les
fst
or
fidivl
into
sub
push
mov
enter
and
lcall
out
pop
dec
adc
jb
movb
and
sbb
or
shll
mov
cmpsb
es
movsl
addl
mov
or
fidivl
push
mov
jp
jecxz
test
push
pop
es
and
adc
enter
push
icebp
pop
lock
or
pop
xchg
push
aas
clc
icebp
adc
std
mov
mov
ret
dec
mov
or
inc
xor
scas
jnp
xchg
mov
jae
inc
sbb
lcall
outsb
inc
jg
stc
cmpl
mov
pop
out
adc
xor
sbb
shl
mov
iret
add
movsl
fidivrl
test
xorb
movsl
aaa
xchg
mov
sbb
outsl
mull
mov
nop
test
jg
dec
jb
es
jecxz
xchg
xchg
mov
mov
icebp
pusha
lods
and
into
cmp
mov
or
aas
out
cmp
mov
adc
jnp
imul
mov
lahf
aaa
inc
cmpl
int3
lock
lahf
gs
insb
cltd
sub
xor
stc
sbb
push
addb
arpl
jns
enter
loop
jnp
cwtl
out
dec
lods
jle
sbb
xlat
pop
or
cwtl
adc
lea
enter
cwtl
pop
call
aam
stos
lea
pop
adc
or
les
ljmp
popl
mov
mov
xchg
js
mov
decl
and
mov
out
icebp
mov
mov
subl
cmp
dec
xor
imul
outsl
adc
and
adc
mov
add
insb
test
cmp
or
or
notl
push
mov
xchg
xor
cmpsb
outsl
push
inc
int
lret
bound
push
cmp
mov
rclb
in
adc
ficoml
out
in
push
or
mov
cmp
shrl
jp
sahf
mov
mov
jno
jecxz
imul
movsb
addb
mov
jg
fisttpl
jbe
fstpt
lcall
cs
push
lret
fstpt
in
push
out
pop
loopne
mov
std
dec
push
jp
and
sub
pop
fisubs
inc
cmp
fidivs
xor
je
cmp
push
lea
push
sbb
mov
sub
pop
pop
xor
xchg
mov
pop
or
or
imul
dec
repz
mov
and
or
mov
jae,pt
mov
fs
cltd
in
dec
adc
insl
scas
or
mulb
ret
mov
xchg
movsl
iret
jp
lds
mov
pop
mov
dec
jne
repnz
sbbl
jb
adc
in
mov
pop
cltd
js
loopne
div
mov
pop
dec
mov
jo
jle
push
push
pop
clc
add
pop
or
out
es
orb
cmp
mov
mov
pop
in
movsl
jmp
enter
jg
ljmp
jnp
mov
jae
mov
nop
xchg
mov
call
inc
and
cmpsb
dec
lods
xor
fnstenv
test
adcl
pop
push
fidivrl
adc
add
and
jge
in
mov
sub
cmp
fwait
lods
call
jecxz
fisubs
xlat
stos
mov
jle
dec
push
lret
scas
movsl
idivl
xchg
or
in
xor
out
ret
test
dec
jno
inc
std
jge
orb
cmp
enter
jge
aad
into
xchg
jmp
in
xchg
mov
addr16
pop
inc
subl
jno
pop
sub
jnp
div
jnp
ljmp
cmpsb
cmp
jmp
xor
fdiv
push
fsubs
xchg
ljmp
add
push
mov
adc
loope
nop
cmp
dec
inc
jne
or
push
cmp
repnz
pop
push
pusha
dec
out
paddb
add
repz
roll
data16
xchg
cmp
lret
aas
xlat
add
insl
inc
or
and
repnz
test
adc
repz
das
and
inc
in
cmpsb
pop
push
or
sarb
dec
divl
arpl
xchg
add
lcall
mov
mov
aam
sbb
xchg
sub
mov
adc
fldl
ss
or
jl
or
stos
test
jno
das
ljmp
push
aas
insl
decl
xchg
mov
scas
and
pop
ds
lret
dec
push
mov
cmp
add
dec
nop
push
mov
je
lahf
in
outsl
in
pop
push
test
mov
mov
and
jge
add
mov
rcl
jo
and
sarl
sub
xchg
movsl
aas
and
and
pusha
jno
cmp
inc
inc
mov
add
inc
lods
xchg
call
dec
or
mov
nop
xchg
addr16
and
pushf
subb
test
push
sub
pop
xchg
movsb
mov
bound
xor
mov
push
adc
subl
inc
adc
jne
xchg
jb
data16
add
cmpsl
adc
rorb
xor
sub
sub
xor
sbb
das
or
mov
lret
stc
mov
cmc
cmpsb
sahf
addr16
lahf
stc
ret
jg
push
mov
push
paddusb
push
jbe
inc
xor
fadds
lods
sub
in
std
cmpsl
xchg
loop
addr16
popa
out
cmp
add
lahf
and
jae
add
inc
int
lds
cltd
jmp
push
mov
jle
jnp
inc
and
out
lcall
dec
jbe
fnsave
jno
pusha
cs
repnz
jecxz
xor
xor
push
or
iret
xor
sbb
cli
mov
jl
ja
mov
jg
and
mov
pop
sbb
fs
mov
sbb
pop
xor
ficompl
dec
scas
scas
aam
jb
pusha
mov
jb
les
stos
pushf
xchg
adc
or
sub
pop
xchg
repz
clc
sub
cmpsl
push
mov
iret
push
arpl
aam
inc
repnz
neg
imul
jnp
mov
nop
sbb
push
es
cli
jecxz
cmp
loopne
jo
ljmp
dec
scas
fucomi
push
scas
mov
cli
dec
cs
lret
adc
jle
xchg
xor
notb
loope
mov
push
movsl
stos
pushf
push
dec
inc
pushf
popf
push
jns
jle
out
sti
inc
ret
push
dec
sub
or
jge
into
mov
and
fiaddl
inc
gs
mov
cmpsl
pusha
sti
push
xchg
dec
jp
and
sub
dec
or
loope
xchg
mov
bound
pushf
mov
into
stos
adc
loope
mov
lret
es
lret
out
sub
repnz
adc
test
pop
lods
dec
sarb
xchg
orl
pop
dec
loopne
test
mov
xchg
xlat
sahf
mov
mov
loop
sub
and
inc
or
lahf
cwtl
push
outsb
cmpsl
and
or
test
fmuls
or
imul
adc
ljmp
int
pop
repnz
out
push
cltd
push
mov
addr16
adc
cli
leave
test
dec
mov
jg
push
xlat
sbb
push
and
jbe
out
mov
orb
out
push
mov
xchg
pop
push
mov
xor
out
xor
out
cwtl
cmpsl
in
mov
fnstenv
imul
scas
incl
pop
sbb
in
lods
pop
fistl
pop
xchg
mov
mov
sub
cmpsb
jne
addl
jge
fisubs
adc
icebp
xlat
xor
xor
popa
mov
int
ficompl
jnp
fldt
dec
fs
sub
push
in
js
lods
lock
add
lods
dec
data16
inc
les
or
shll
push
xor
jecxz
in
in
pop
sub
jnp
sub
es
pop
mov
ss
or
addr16
fwait
in
test
mov
sub
xchg
mov
imul
shl
cmpl
mov
xor
xchg
sub
jae
loope
and
push
mov
loopne
push
adc
xchg
fwait
dec
daa
jmp
add
rcrl
and
cltd
mov
xor
addr16
jns
mov
and
bound
in
imul
arpl
repnz
sub
inc
loope
fs
add
lods
cmp
outsb
sub
pop
dec
jnp
mov
cmp
inc
lock
jno
filds
sahf
cmc
cmp
pop
pop
inc
sti
lret
jmp
fs
int
es
clc
into
lret
mov
fucomi
lds
test
and
push
sti
dec
in
mov
out
mov
adc
mul
in
dec
insl
cmp
mov
jg
in
test
negl
jo
shlb
inc
sbb
nop
ret
shlb
dec
mov
jmp
push
sbb
push
mov
out
sahf
mov
mov
arpl
jl
push
xchg
lock
mov
pop
jae
jbe
test
mov
repz
loopne
or
jae
enter
je
inc
lret
mov
loopne
in
sbb
dec
test
or
icebp
out
lds
xchg
icebp
out
cli
icebp
dec
out
mov
imul
sub
ljmp
std
and
adc
decb
inc
loop
sbb
cmpsb
in
rcl
outsb
mov
imul
lock
xchg
jnp
das
jp
enter
xor
in
jmp
mov
xchg
push
jge
movsl
xchg
inc
cmp
and
clc
addr16
cmpsb
idivb
aad
jmp
out
lret
pop
mov
inc
xorb
push
mov
mov
inc
idivl
adc
xchg
das
in
or
jp
sub
dec
out
test
or
sub
daa
push
stos
dec
ror
cmpsl
in
loop
or
xor
cmpsb
lods
push
scas
push
add
les
int
cmc
arpl
imul
xchg
pop
cmp
cld
in
rcr
stos
scas
lcall
and
sbb
mov
repz
adc
pop
sbb
inc
es
addr16
ja
mov
cltd
in
daa
out
sub
and
jno
push
rcr
inc
mov
adc
addb
cmc
jl
sbb
pop
mov
mov
push
div
cld
test
sub
and
movsb
and
xor
inc
xchg
sub
xchg
iret
aas
inc
xlat
cltd
sub
test
pop
stc
xor
push
xchg
daa
fcompl
dec
mov
xchg
test
push
and
lret
in
rcrl
push
jno
ja
inc
rorb
cmp
push
mov
sbb
cmpsb
inc
mov
add
xchg
pop
add
sub
cmpsl
inc
ret
inc
cmp
xorl
lret
ffree
subb
xchg
jg
push
test
pop
popf
push
call
test
sbb
out
xor
addr16
cltd
mov
inc
dec
xchg
jae
push
fiadds
out
loopne
es
ss
lea
bound
insl
mov
jmp
sarb
add
cli
mulb
cmp
push
add
xor
inc
pop
mov
jnp
mov
outsl
sub
fistl
adc
xchg
call
bound
movsb
sahf
or
xchg
xchg
movl
into
std
fldcw
sub
mov
inc
pop
pusha
outsl
push
in
popa
sub
shrl
shl
inc
into
xchg
in
sub
inc
mov
bound
inc
mov
xchg
fucom
ja
jp
push
fldenv
stc
sti
fcmove
sbb
xchg
test
or
push
or
leave
enter
loop
int3
test
adc
dec
roll
pushf
xlat
mov
cmp
je
mov
les
adc
andl
ss
jae
das
repz
in
sbb
mov
push
add
xchg
push
imul
mov
aad
xlat
adc
jle
cmpsb
and
movhps
lds
or
in
jp
dec
mov
add
cmp
xchg
mov
mov
mov
lret
popa
xor
test
aaa
fs
fwait
mov
pop
xor
lahf
movsb
in
stos
dec
jbe
xor
adc
mov
test
dec
cmp
mov
dec
mov
out
pop
adc
scas
and
ds
in
add
and
jo
mov
sub
mov
inc
rorb
rcrb
loopne
roll
imul
lds
xchg
push
mov
stos
rorb
cmpsb
push
mov
mov
outsb
shl
pop
nop
iret
dec
dec
xor
mov
sub
rclb
or
push
incb
mov
into
mulb
xchg
bound
pop
loop
in
and
xchg
mov
cwtl
inc
xchg
dec
pop
outsl
fldl
dec
in
sub
push
cmpb
pop
jmp
mov
lret
out
aaa
aaa
aad
lods
cmp
inc
xchg
imulb
xchg
lock
inc
out
pop
push
rolb
dec
and
mov
and
cmpsb
cmc
inc
xor
call
cli
test
xchg
or
les
inc
inc
iret
mov
mov
jne
arpl
in
popf
scas
sbb
mov
jne
icebp
cmp
mov
add
xorb
in
sbb
arpl
scas
cmc
adc
push
cmp
loope
pusha
test
mov
addb
mov
lock
lahf
inc
sub
xor
dec
aad
adc
xchg
test
je
or
push
pop
fdivr
fisttpll
jge
add
push
fxch
adc
rorb
ja
push
pop
ror
insl
mov
sbbl
cmpsb
inc
or
into
jno
loop
lock
pop
adc
jbe
cltd
popf
and
and
xor
gs
lea
lahf
push
cli
addr16
adc
outsb
mov
int3
dec
jp
push
inc
add
pop
movsl
inc
test
int
xor
imul
rolb
xor
in
sti
push
in
popl
test
dec
add
inc
push
pop
out
jbe
xchg
add
jp
adc
xchg
jb
shll
pop
dec
jno
mov
insb
pushf
ficompl
or
ret
jl
call
test
cmp
or
add
or
xchg
dec
sub
sub
adc
data16
fadd
stc
or
push
movsl
repnz
mov
lods
sub
push
in
test
inc
loope
and
iret
sbb
jnp
add
inc
test
sbb
loope
std
jb
pop
pusha
shrl
aaa
imulb
sbbl
aaa
push
push
int
sub
mov
je
out
stos
and
sbb
adc
sub
repnz
push
xor
and
outsb
adc
adc
aam
pop
add
dec
adc
fisubl
xor
and
mov
fstps
mov
jp
cmc
add
mov
adc
cmp
cmpsb
jle
mov
test
xor
fstpl
sbbl
lods
rclb
mov
sbb
mov
sbb
push
test
fs
add
popf
imul
xchg
mov
cmp
mov
repz
mov
test
ret
mov
inc
or
addb
pop
push
pop
popf
jbe
dec
jne
add
mov
sbb
lods
or
out
jecxz
or
outsl
outsl
ljmp
xor
sbb
jecxz
mov
mov
ja
sbb
xchg
test
mov
sti
aam
pop
fimull
mov
bound
nop
sbb
cmpl
cmp
cmp
inc
nop
push
xor
shl
xchg
loope
jmp
dec
pop
push
push
push
aam
push
stc
insb
push
mov
lock
fwait
stos
pop
dec
fwait
test
into
or
inc
dec
cmp
pop
cmp
out
popa
mov
push
push
xor
inc
pop
push
jnp
mov
movsl
mov
sbb
inc
inc
or
mov
lock
jbe
mov
jae
aaa
cmp
mov
int3
insl
inc
in
cmpsb
cmpsb
in
inc
dec
adc
mov
pop
outsl
loope
shll
fs
test
dec
sti
pusha
mov
test
hlt
sbbl
jo
insl
add
outsl
fld
shrl
jmp
test
iret
inc
addr16
jo
xor
sub
mov
in
mov
jmp
in
lock
scas
loope
cmp
push
mov
imul
fucomi
sahf
inc
sub
add
push
cmp
sub
test
mov
push
scas
mov
sarl
pop
add
aas
inc
push
enter
test
sub
xchg
movsl
push
mov
xchg
mov
sbb
sub
xchg
mov
mov
jl
jnp
and
or
scas
test
pop
enter
shll
cmpsb
insb
lahf
out
call
adc
mov
in
add
cmp
pop
sahf
mov
xorb
cli
mov
dec
aaa
mov
into
sbb
cltd
and
dec
push
adc
and
inc
arpl
scas
test
adc
mov
fs
lods
dec
xchg
call
fdivrl
in
mov
jne
adc
idivl
mov
jp
dec
cmp
push
lods
rcrb
pop
push
lret
cmp
lods
jl
dec
test
out
mov
mov
gs
lcall
pop
pop
inc
leave
dec
pop
sti
xchg
sahf
fimuls
clc
dec
push
and
and
pushf
lcall
in
xor
pop
subl
jecxz
sub
xchg
sub
adc
jge
das
adc
jg
add
jmp
ja
insb
push
icebp
xchg
dec
jge
mov
dec
mov
jp
push
imul
fs
mov
xor
jne
dec
addb
outsl
test
idivl
xacquire
popa
imul
or
push
and
and
jo
mov
adc
and
xchg
push
or
or
repz
popa
insl
sub
mov
fildl
jmp
jbe
loope
mov
add
push
dec
xchg
loopne
dec
loopne
loope
pop
dec
aaa
jae
mov
jbe
jns
clc
mov
and
into
sahf
sbb
mov
mov
daa
lret
or
dec
dec
dec
push
lods
mov
sub
mov
adc
lahf
mov
push
popa
adc
insb
xchg
adc
ss
xchg
shrb
mov
mov
mov
jno
or
push
jae
xchg
sbb
sti
jmp
insl
lahf
inc
adc
movb
lret
or
sbb
mov
clc
popa
repnz
dec
add
sar
xor
loope
ljmp
inc
je
push
mov
xchg
jno
lods
imul
mov
push
sahf
loope
sti
cmpsb
sub
mov
mov
jbe
out
mov
mov
sbb
icebp
mov
test
orb
adc
inc
push
add
jne
mov
test
mulb
stos
mov
xor
mov
iret
push
stc
and
out
int3
icebp
repz
mov
mov
stos
xchg
inc
jne
cmp
jno
in
pushf
xor
mov
cmpsl
xor
daa
std
dec
dec
hlt
in
jle
xchg
lret
mov
cli
sub
or
mov
bound
pop
add
jnp
shlb
sbb
push
pop
ficoml
hlt
or
movsl
aad
mov
xor
call
adc
out
in
std
clc
lods
xor
mov
jbe
sahf
adc
pusha
jae
fiaddl
mov
push
add
xorl
pop
in
aam
xchg
push
je
cwtl
repz
roll
inc
in
aam
inc
push
mov
outsb
mov
or
adc
xorl
repnz
xor
arpl
mov
in
jmp
cwtl
sbb
gs
jmp
leave
cmp
mov
fsubl
sbb
insl
mov
sbbb
jb,pt
push
popf
imulb
dec
or
add
adc
icebp
popa
jmp
mov
iret
sarb
jbe
sbb
adc
cmpl
arpl
and
mov
push
pop
cltd
or
xchg
xchg
mov
mov
int
xchg
push
mov
dec
dec
sbb
out
or
inc
shll
dec
pusha
mov
sbb
js
jmp
in
pop
pushl
jo
push
jge
fists
xor
es
in
out
rol
and
test
add
das
cli
scas
in
sbb
jb
dec
xor
xor
mov
gs
push
movsb
out
xor
jmp
aad
int3
jecxz
jae
call
pushf
arpl
data16
les
inc
adc
cmp
dec
lea
ret
jle
xor
jne
out
inc
cwtl
dec
in
lea
loopne
fimull
mov
faddl
and
push
js
mov
and
inc
testb
repz
pushf
xchg
xchg
inc
popf
dec
notl
sub
push
mov
xchg
add
xchg
mul
inc
out
movsb
ret
push
fidivrs
adc
es
sbb
push
stos
inc
xlat
sub
jo
mov
ja
push
fsubrl
xor
jp
popa
scas
cmpl
mov
jbe
mov
mov
mov
push
rorl
mov
jne
mov
mov
pushl
js
ss
mov
cmp
jge
xchg
lods
mov
shl
pop
jnp
sbb
call
shl
sbb
mov
push
inc
and
dec
inc
testl
jns
cltd
int3
je
inc
movsb
xchg
push
sub
cmp
jnp
lea
pop
or
jne
shrl
cwtl
jp
add
lea
mov
ja
xchg
cmc
loope
jmp
mov
stc
push
pusha
popa
repnz
ljmp
xchg
add
add
addr16
sub
lcall
ret
aaa
cmp
sbb
sti
stc
sbb
jg
sbb
push
mov
xchg
nop
add
decl
in
pop
data16
inc
xchg
lret
mov
mov
ljmp
sti
aam
xchg
push
pop
xchg
sbb
aad
inc
insb
and
sahf
or
ljmp
sbb
lret
fwait
jmp
mov
lods
fdivs
xchg
push
scas
pop
fisttps
in
sub
xor
icebp
lahf
test
movsb
xchg
inc
movb
lock
pop
fcmovnbe
iret
mov
xor
and
rcrb
test
aas
call
std
xchg
mov
js
jae
repz
mov
rolb
mov
sbb
xchg
lahf
movsl
roll
out
ret
mov
push
and
orb
dec
inc
iret
mov
xchg
push
adc
sahf
test
test
dec
sub
lock
pop
cmp
insb
add
jae
lds
pop
lods
das
xlat
hlt
jno
jbe
mov
xchg
je
mov
cmp
jae
mov
jle
pushf
clc
adc
call
stos
sbb
pop
jecxz
push
popf
es
dec
imul
cld
sub
movsl
imul
bnd
cmp
lods
xor
mov
dec
outsl
xchg
mov
mov
xchg
sbb
cmp
popf
test
jb
mov
es
ds
jns
xchg
inc
jb
pop
mov
and
pushf
lcall
inc
xchg
movsb
and
clc
pushf
pop
fs
imul
sub
fnsave
inc
pop
in
cs
test
xchg
in
inc
jnp
in
out
push
addb
cli
in
outsb
idiv
fisubl
xor
cmp
fildll
pusha
inc
insl
loop
mov
xor
out
mov
pop
sahf
loop
stos
add
cmp
lods
rcrl
jb
xor
adc
lea
pop
push
in
out
lods
jnp
inc
dec
adc
rcrb
add
sub
scas
dec
and
es
popf
lahf
mov
loop
adc
adc
testl
aas
ljmp
test
stos
xchg
cmpsb
jb
jne
xor
xchg
andl
pushf
dec
xor
cmp
repnz
pop
and
push
cmp
sbb
xlat
in
xchg
dec
pop
ret
or
jo
andb
and
outsl
xchg
cmc
cltd
imul
test
xlat
mov
dec
mov
adc
ret
mov
and
mov
insb
enter
pop
pop
out
pop
in
into
cwtl
data16
lret
fstpt
dec
cmp
shl
sbb
xor
xor
pop
xorb
les
pop
inc
ror
mov
jne
sbb
int3
cs
cmp
pop
iret
jae
inc
push
fdivr
jmp
adc
mov
arpl
insl
xlat
loop
inc
xor
inc
inc
imul
lods
adc
add
xor
inc
js
dec
ljmp
lret
dec
add
cmp
or
pop
daa
ret
xor
in
gs
mov
jbe
xlat
rorb
rcl
inc
rclb
pop
fs
sbb
sub
addr16
es
cli
adc
xchg
movsb
sub
sbb
push
int
js
inc
fsubs
mov
dec
inc
xchg
aad
mov
ds
mov
mov
dec
dec
sub
mov
int
fisttpll
movsb
outsl
sub
popf
push
xchg
jnp
mov
adc
jne
rolb
sub
jg
pushf
inc
add
addr16
push
fists
sub
and
mov
rorb
adcl
dec
push
mov
xor
test
pushf
mov
cmp
or
sub
cltd
mov
pop
jnp
int3
aam
push
in
icebp
jle
sbb
cwtl
in
icebp
je
out
sbb
fimuls
into
aas
adc
push
cld
or
enter
stc
or
or
dec
sbb
mov
outsl
into
jge
aaa
sbb
cli
push
adcb
inc
mov
or
out
loope
das
mov
divl
lcall
inc
aam
mov
lahf
pusha
aaa
hlt
rcl
cwtl
imul
js
add
lock
sub
ja
jb
je
jae
xor
and
popf
mov
mov
sbb
dec
jnp
sbb
loope
or
jl
add
rcrb
es
sbb
mov
add
push
xchg
imul
lret
cmp
cs
push
sti
dec
push
rorb
faddl
mov
sbb
jo
jo
xor
in
mov
push
data16
inc
not
mov
ds
arpl
mov
daa
xchg
and
sbb
dec
repz
pop
imulb
cmp
jg
xor
add
push
and
lods
and
mov
xor
lahf
cmpsb
shlb
pop
jae
outsb
dec
andb
mov
jg
dec
inc
adc
add
enter
rcll
mov
sub
dec
out
pop
ljmp
stos
repz
iret
sbb
popa
sub
add
loopne
xchg
pop
push
cltd
cmpsl
imul
out
jbe
pop
push
push
mov
lret
push
popf
mov
or
call
ds
push
out
push
js
andb
dec
repz
sarb
sbb
stos
into
and
cmp
leave
loop
push
push
or
pop
pop
add
pop
xor
mov
icebp
or
iret
xchg
icebp
inc
jge
pushf
cmp
call
push
and
outsb
ss
add
or
test
pop
fdivrs
ljmp
stos
sbb
sub
add
sub
fcoml
jle
cmpsb
stos
or
movsl
rcl
mov
mov
dec
test
sbb
mov
in
cmpsb
mov
ss
mov
incl
repnz
jne
daa
popa
in
ret
pop
movsl
test
mov
sahf
and
pop
bound
addr16
icebp
and
cmpb
in
mov
jp
sbb
nop
sub
in
or
decl
in
lea
jp
stc
xchg
orl
dec
ficompl
lret
sub
lret
push
or
fxch
imul
pop
cmpsl
into
mov
enter
xchg
jne
test
inc
fbld
aas
dec
out
pop
sbb
data16
and
pop
adc
sub
pop
pop
notb
jg
and
ds
cld
divb
mov
jo
add
xor
mov
lahf
jb
jae
sub
jns
mov
adc
mov
jle
mov
jmp
xor
xor
stos
and
rorb
jnp
sub
sub
mov
pushw
mov
sbb
sahf
cli
in
hlt
std
leave
mov
repnz
roll
enter
int3
popf
das
pusha
add
dec
ret
adc
imul
xor
pop
jl
jbe
dec
jnp
add
sub
mov
xchg
rorb
jg,pt
lcall
mov
test
loopne
mov
xchg
push
push
aaa
cli
mov
mov
add
mov
insb
mov
aam
ffreep
mov
dec
mov
push
mov
add
pop
test
ror
push
test
jp
gs
mov
int
pop
cmp
es
aaa
nop
imul
fst
sbb
xchg
hlt
aad
cmp
xchg
mov
jmp
in
dec
mov
fidivs
shlb
mov
pop
xchg
aas
xchg
inc
inc
lods
out
outsb
dec
cltd
pop
cmp
insb
test
add
inc
std
xchg
adc
test
sbb
into
add
in
xchg
dec
cmpb
or
xchg
jnp
add
add
or
xlat
in
enter
xchg
adc
and
xchg
cli
and
xchg
jnp
jmp
nop
adc
inc
repnz
jp
sbb
jne
insb
mov
sbb
jecxz
icebp
jo
and
lds
add
or
cmp
imul
mov
movb
pop
push
xchg
inc
add
and
mov
into
cmc
lds
jecxz
sbb
mov
sbb
and
cmp
js
movl
cmp
fs
push
xchg
cmp
jne
pop
cmpsl
mov
sbb
cltd
jnp
mov
cld
add
lods
ret
pop
mov
sub
insb
or
cmpsb
cmp
clc
push
or
mov
lret
jle
popa
jle
in
mov
pushf
xchg
adc
sbb
out
and
test
shlb
scas
push
jnp
nop
or
data16
cmp
shrl
adc
sbb
cmp
and
imul
ljmp
lret
mov
push
sbb
out
in
int3
je
sar
push
cmp
add
les
pushf
fadd
fwait
mov
addr16
cmp
sbb
dec
add
pop
pop
iret
cmp
hlt
add
pop
cmpl
popf
bound
rcrb
mov
cmpb
mov
lods
dec
scas
dec
es
and
mov
xchg
mov
dec
dec
cmp
iret
mov
popa
je
pop
add
dec
sub
dec
addr16
test
mov
arpl
add
les
mov
dec
mov
xchg
out
sarl
cmp
imul
xchg
or
xlat
cmpsb
jnp
dec
int
mov
mov
pop
mov
sahf
mov
add
aas
test
jecxz
das
dec
insb
jge
shlb
imul
fsubs
mov
aam
lds
je
mov
pandn
push
adc
fwait
and
mov
sub
cld
or
cmp
fidivl
fstpl
mov
push
js
inc
sbb
aam
out
or
insb
push
addr16
jmp
mov
sub
das
out
lahf
mov
bound
adc
pop
or
push
call
cmp
pushf
adc
mov
in
sbb
inc
mov
push
xchg
xor
enter
inc
lret
fiaddl
mov
jb
js
lds
add
pop
stos
add
cmpsb
out
pop
mov
push
or
and
xchg
jecxz
xchg
dec
xchg
cmpsl
sar
mov
xchg
jmp
mov
xchg
mov
lock
jmp
mov
dec
pop
inc
xchg
add
mov
mov
out
push
mov
outsb
inc
lret
das
cmp
jb
sbb
cmp
scas
sbb
insb
jne
lds
aad
sub
dec
insb
xchg
mov
xchg
or
xor
xor
and
lods
stc
les
inc
jg
jmp
pop
pop
repz
cld
push
or
xchg
xchg
iret
cmp
jne
and
xchg
fsubs
jnp
test
adcb
mov
repnz
push
in
add
jo
orb
jae
add
inc
xor
and
inc
push
int
sub
lret
insb
fsubs
leave
in
push
repz
mov
mov
xor
jge
adc
and
hlt
std
fidivrl
loop
bound
inc
mov
add
jmp
mov
mov
mov
dec
xlat
xor
scas
xchg
cli
and
add
add
fwait
pop
roll
pop
cmp
scas
mov
into
sub
push
mov
cmp
pop
jmp
add
cmpsl
inc
aad
gs
adc
je
mov
mov
xchg
mov
or
out
mov
dec
pop
mov
add
or
sub
mov
lods
push
repz
icebp
stos
mov
cmp
push
inc
into
rorl
cmp
call
inc
aad
add
mov
jno
mov
cs
inc
lock
imul
mov
xchg
sub
mov
movsl
pop
xchg
lea
adc
pop
dec
mov
andl
fistpll
add
sti
jge
fildll
pop
xchg
insb
ror
add
add
mov
inc
lret
sbb
movsb
sar
cmp
out
cli
popf
mov
out
dec
inc
xchg
je
ds
es
dec
lods
pop
pop
xchg
sarl
adc
inc
stos
pop
testl
loop
fcomp
sub
mov
out
data16
xchg
fs
in
push
push
lea
mov
push
in
bound
dec
fucomp
mov
movsl
mov
mov
jae
xor
push
xchg
or
push
mov
popl
movsb
mov
in
sbb
jl
in
fstl
call
stc
mov
jecxz
sbb
pop
rorl
mov
push
enter
imulb
out
data16
mov
pop
scas
push
sbb
push
std
xor
xor
repz
jae
lret
xchg
leave
cmp
sub
sbb
pop
push
rcrb
bound
pop
pop
mov
inc
pushf
adc
push
mov
jae
dec
fs
xchg
xor
fwait
enter
jne
xchg
je
shrb
mov
in
int3
mov
push
inc
xorl
mov
lahf
ja
jo
pop
or
hlt
popa
xchg
jbe
out
sub
mov
xchg
inc
aad
xchg
mov
mov
insl
inc
iret
pop
repnz
lods
sti
leave
loope
jnp
dec
dec
fcmovu
sbb
pop
mov
add
push
or
push
lret
lea
add
movsl
pop
inc
mov
out
add
mov
xor
dec
outsl
sbb
aas
mov
inc
mov
shrb
in
stos
push
jge
js
fstl
jg
inc
loop
sub
outsl
das
stos
sub
add
mov
cmp
js,pt
sub
pop
mov
and
ret
xor
popl
jnp
mov
es
aam
les
add
je
lods
pop
push
mov
push
pop
push
nop
inc
aas
mov
pop
pop
lcall
fnstsw
loopne
int
jmp
add
jns
xchg
push
jmp
popa
shlb
fnsave
mov
iret
xor
jo
cld
mov
pop
sub
ljmp
jns
pop
jb
enter
jmp
addr16
dec
jne
lock
push
sub
lret
cmp
jbe
scas
ret
loop
and
xchg
bound
in
aaa
aad
in
or
mov
aad
cwtl
sub
push
and
inc
sarb
lret
add
out
mov
nop
hlt
out
xchg
js
jmp
adc
and
sub
loop
in
out
in
out
pushf
ss
dec
test
sub
add
lret
cmpb
aaa
movsl
push
cmpl
push
or
mov
mov
dec
jp
xchg
clc
cli
sahf
icebp
leave
inc
add
or
test
xor
and
mov
pop
adc
xor
and
enter
inc
ds
das
sbb
xchg
test
inc
cmp
inc
jge
daa
dec
aad
pop
ret
std
sub
xchg
addr16
lds
pushf
shll
and
lds
notrack
dec
xchg
push
jle
add
outsb
mov
in
fnsave
xor
adc
adc
pop
pop
imul
xchg
xchg
mov
lahf
out
ret
jle
in
movsl
nop
push
add
xchg
cmpsb
inc
pop
nop
repz
pushf
in
xor
fnop
jbe
push
cli
popf
pop
or
mov
sub
std
test
xchg
and
and
rcll
sbb
jg
shlb
stc
scas
add
call
call
cmp
or
or
push
or
inc
sub
aas
jg
cld
scas
cmp
mov
les
add
xchg
test
jne
jmp
xchg
out
and
add
fldenv
xor
cmp
cmp
push
xchg
sub
adc
inc
cmp
in
mov
insb
popf
cmp
gs
sti
add
sahf
ret
jnp
movsb
popa
cmc
mov
in
push
and
sub
pop
mov
std
pop
popf
pop
popa
sbb
and
sahf
push
add
jno
fisubs
pop
loop
addb
inc
lods
outsl
xor
bound
cmp
hlt
adc
arpl
ljmp
test
jno
mov
mov
dec
mov
push
mov
ret
das
dec
jp
jb
stos
sub
mov
push
out
cwtl
pop
inc
addr16
pushf
sub
and
movd
in
cli
call
add
leave
int3
xor
sub
cmp
jmp
push
xor
adc
into
adc
dec
add
lret
scas
add
leave
fcmovnbe
sub
fdivl
adc
sbb
xchg
jge
pop
xlat
dec
arpl
add
and
daa
mov
inc
sub
jb
cmp
ljmp
ds
scas
mov
aaa
into
es
pop
pop
add
imul
push
mov
mov
les
jl
test
mov
ret
mov
mov
int3
stos
adc
jns
es
rcr
popf
xor
imul
scas
jb
es
push
imul
scas
pushf
out
mov
scas
xchg
sub
pop
xchg
xchg
scas
or
fidivl
scas
pop
and
or
popf
xlat
lcall
and
out
and
dec
aad
dec
push
fadd
push
or
cmp
icebp
xor
test
dec
not
mov
fnstcw
dec
les
jmp
js
push
inc
pop
outsl
enter
cmpsl
mov
dec
xchg
popf
push
add
faddp
aaa
imul
push
pop
icebp
adc
data16
adc
add
rclb
push
shll
movsb
ja
fstpt
nop
xor
das
ret
push
nop
aaa
xchg
orb
mov
push
cld
ja,pt
push
dec
outsb
xor
dec
stc
sub
cmc
fildll
and
dec
aad
xchg
xor
int3
jecxz
mov
inc
sub
and
pop
mov
and
repz
pop
frstor
sarb
pushf
cmpsl
add
ss
mov
pop
clc
ja
mov
and
push
fdivrs
push
mov
mov
dec
into
mov
inc
dec
dec
xchg
call
arpl
sbbb
jbe
rcll
stc
or
jno
cltd
ret
jmp
pop
in
mov
sub
rcrb
lods
dec
stos
mov
adc
or
bound
sub
cs
addr16
inc
inc
mov
add
imul
cli
jns
dec
pop
daa
shlb
daa
pusha
xchg
fildl
push
les
call
add
cmpl
push
pop
daa
mov
gs
lock
jmp
inc
pop
xchg
push
shll
pop
sbb
test
imul
adc
jp
stos
movsl
hlt
lret
or
insl
loop
adc
dec
mov
adc
xor
push
xchg
adcl
in
xchg
mov
sub
pop
scas
outsl
jg
jbe
pop
xchg
scas
adc
sahf
push
sarb
icebp
and
mov
dec
fwait
aas
mov
shl
repnz
inc
mov
push
out
std
push
inc
mov
inc
xchg
mov
test
outsl
int3
enter
imul
rclb
inc
dec
imul
and
jns
push
imul
dec
shrl
shll
pop
popa
jnp
mov
xor
shl
sub
xchg
cmp
enter
js
or
loope
scas
mov
jg
cmpb
push
out
sti
call
popf
cmpl
jp
es
mov
outsl
adc
insb
xor
cltd
mov
xor
pop
mov
test
ja
inc
jnp
pushf
and
sub
test
ficomps
sysenter
rolb
or
loope
cld
shrl
mov
mov
lahf
outsb
push
sarb
cmp
xlat
movsb
jle
into
mov
insb
xchg
jle
icebp
lods
inc
jno
jmp
cmp
and
in
je
cmpsl
sti
push
dec
loop
mov
push
push
mov
cmp
lds
add
jnp
enter
mov
jge
out
dec
dec
dec
aad
xor
xor
push
adc
fcomps
int
lahf
pop
enter
jo
mov
dec
enter
pop
add
and
stc
test
cmc
loope
aaa
sub
jb
adc
mov
pop
push
xor
sbb
movsl
popa
addr16
inc
mov
movsl
mov
and
fbld
fdivrs
xchg
call
xchg
addb
rcll
mov
js
inc
pop
xor
jp
sbb
push
cmp
xor
mov
out
adc
pop
xchg
xlat
lds
int3
jo
sbb
cmp
jmp
sar
inc
mov
mov
sub
mov
or
mov
jp
aaa
testl
cltd
push
enter
iret
out
mov
ja
ss
add
pop
adc
js
cmp
aam
cmp
add
sub
pop
rclb
mov
retw
mov
icebp
or
pop
or
ja
jg
call
faddl
gs
rcrb
call
add
push
mov
xor
repz
jne
or
mov
rcrl
mov
inc
cli
mov
jl
in
sbb
movsb
push
cld
push
cmp
lret
add
addr16
mov
inc
arpl
sub
or
lret
push
test
lods
push
inc
dec
pop
pop
mov
mov
mov
dec
out
xchg
movsl
xchg
dec
jp
ja
mov
popw
cmp
and
aas
or
jns
dec
dec
sub
movsl
cli
xor
sbb
insb
jae
out
js
push
jnp
xchg
xchg
sbb
jecxz
mov
mov
mov
fcompl
inc
cli
sub
push
and
push
push
imul
repnz
or
pop
pop
lret
mov
jo
cmp
inc
in
les
or
add
xchg
std
dec
add
cwtl
dec
sarl
xor
shll
aam
das
sbb
cmp
gs
aad
repnz
sub
pop
adc
adc
iret
movsl
sbb
mov
lea
es
add
or
push
xor
sbb
mov
jns
xchg
addl
lock
loop
imul
dec
test
les
fucomi
ficoms
fidivrs
adc
jne
lods
fmull
xor
mov
out
cwtl
sbb
xchg
and
push
xor
jae
leave
pop
in
xor
pop
xchg
or
mull
push
pop
fldcw
jne
scas
mov
lret
jge
arpl
adc
cmpsl
xchg
out
sbbb
mov
xorb
xchg
in
mov
aaa
add
or
sub
repz
cmc
jp
pop
jecxz
cs
cmpsl
popa
sbb
dec
and
jnp
cmpsb
lea
sti
and
arpl
test
xor
pop
ficoml
add
in
ss
scas
test
movsb
jg
push
mov
rorl
cltd
or
xor
push
xchg
das
and
xor
jge
mov
test
adc
sbb
push
push
add
add
cmp
scas
mov
mov
xor
ficomps
cmp
jne
fisubrs
push
dec
adc
jge
pop
enter
mov
rolb
std
popf
cli
adc
hlt
lret
add
push
imulb
mov
jb
dec
out
lea
inc
xchg
sub
ljmp
inc
lcall
fsubs
bound
pop
inc
push
mov
stc
ss
inc
aam
cmp
lods
sub
repz
jno
aad
aaa
test
pop
push
in
push
adcl
ja
fdivl
add
or
push
sbb
cmp
call
jg
call
push
mov
stos
adc
scas
fs
push
or
idiv
test
add
jg
popf
mov
out
cmp
mov
and
pop
pop
push
out
loope
mov
in
imul
out
fstpt
pop
movsl
jo
aad
push
or
sub
jnp
icebp
xor
lds
cld
jo
fwait
add
mov
ja
incl
mulb
dec
cwtl
xchg
xchg
test
test
pop
popa
mov
xchg
loope
popl
insb
roll
push
das
mov
test
cmpsl
cli
outsb
les
into
jg
pop
cmp
inc
jmp
mov
in
mov
mov
outsb
icebp
jmp
call
lods
int
dec
mov
es
xchg
xor
bound
or
sahf
jb
add
std
imul
jmp
divl
adc
pop
fisttps
jne
jge
mov
sti
outsb
xchg
daa
cmp
stc
loope
adc
push
fbstp
add
xor
jns
jbe
mov
mov
out
cwtl
cmp
shlb
mov
and
inc
mov
lret
sbb
in
loope
dec
xor
mov
data16
aaa
sti
sahf
decl
lea
int
in
xchg
cli
test
sub
testl
test
mov
jmp
ret
or
mov
adc
jmp
scas
in
shlb
sub
and
popf
and
mov
mov
bnd
mov
xchg
enter
jmp
pop
jb
pop
icebp
call
xchg
or
sti
nop
mov
cmp
int
mov
jo
sti
jl
aaa
out
hlt
addr16
jl
dec
cmc
push
jnp
adcb
mov
mov
push
mov
sbb
xor
xchg
imul
cmp
mov
mov
mov
inc
adc
sub
push
pop
outsb
sbbl
cmpsl
shlb
cmpsb
hlt
imul
aad
aaa
and
push
stos
mov
push
stos
mov
dec
nop
xor
lcall
jae
cmpl
add
jecxz
mov
cmp
rol
cmpsb
push
ror
or
out
cs
or
fcomps
xchg
or
inc
or
xchg
xchg
cmp
fwait
insl
shll
gs
cmp
aad
and
or
xchg
shl
int3
loope
inc
in
pop
nop
push
mov
test
leave
je
testb
xchg
dec
sbbl
repz
stos
imul
sbbl
lret
aad
xor
and
mov
subb
pop
in
adc
mov
xor
lea
jb
push
mov
lret
mov
mov
negl
cltd
xor
jmp
das
pop
mov
cmp
leave
push
shl
int3
cmp
rcll
mov
mov
sbb
mov
xlat
call
test
ja
js
push
nop
push
dec
mov
cmp
xor
pop
bound
dec
data16
pop
mov
push
jno
or
mov
repnz
jp
pop
sub
adc
rolb
push
das
movsb
and
mov
xorb
mov
push
fimull
pop
loop
cmp
test
in
sub
fsubs
in
jg
fbstp
sub
push
dec
add
int3
fdivrs
fbld
inc
jns
std
repz
iret
sub
push
mov
dec
cli
test
cld
xchg
jmp
pop
and
or
shlb
fists
out
push
xor
xor
inc
adc
das
dec
pop
fcmove
jl
loop
cmpsb
pop
lret
sub
adc
scas
daa
mov
mov
rcrl
push
xchg
fistps
jne
or
call
xor
pop
xchg
shll
mov
jne,pt
call
jecxz
sub
mov
xchg
call
mov
adc
sbb
xchg
jae
mov
or
adc
mov
sbb
cmp
jb
pop
cmp
shl
jnp
or
imul
mov
inc
xchg
or
xchg
fdivr
mov
jae
and
stos
mov
sub
jp
xor
cmp
or
notl
lods
sbb
sub
rcll
imul
inc
adc
fdivr
dec
dec
stc
mov
cli
jmp
xor
adc
hlt
lea
xchg
pop
andl
outsl
mulb
ss
data16
inc
pop
mov
push
ret
add
clc
daa
fldcw
inc
mov
or
or
in
inc
adc
repz
push
lahf
dec
xchg
into
jbe
push
cmp
stos
loop
sub
cmp
xchg
inc
sbb
mov
pop
xchg
or
push
movsb
xchg
xchg
bound
mov
dec
in
mov
and
sub
pop
jp
add
nop
fwait
mov
mov
cmp
out
in
lea
xor
insb
repz
mov
inc
jmp
std
mov
push
aas
js
push
adc
lret
jp
pop
shll
add
inc
inc
push
lret
scas
popl
xor
pop
popf
ror
mov
outsl
imul
xchg
cld
pop
movb
mov
test
sahf
mov
stos
int
aaa
lcall
pop
mov
aaa
xor
mov
dec
or
leave
daa
sub
xorl
imull
stos
add
or
xchg
xor
jne
ficomps
lods
mov
leave
arpl
adc
lea
inc
das
xchg
mov
jae
jne
inc
add
in
das
pop
pusha
inc
fcoms
dec
xchg
in
or
lods
mov
xor
add
add
aam
mov
push
jl
inc
aad
push
add
pop
ja
and
repz
lret
push
jle
ss
xchg
and
xchg
cmp
cmp
push
xchg
aas
pop
lods
aaa
gs
fidivs
fiadds
addr16
iret
xchg
cltd
mov
pop
subb
loop
sub
stos
mov
xchg
mov
cmp
sub
sub
out
jno
std
adc
jb
mov
fmulp
inc
sbb
and
and
popa
sbbb
mov
popa
lock
jo
cmp
cmp
mov
data16
ja
jae
mov
popf
test
icebp
xchg
cmp
adc
mov
inc
repz
fs
jbe
insl
cltd
popf
std
or
add
cmc
dec
sarb
sub
sbb
push
sub
pop
cmc
sbb
dec
push
inc
clc
cld
out
stos
xor
adc
cli
pop
add
pop
iret
jl
sbb
fisubs
lods
imul
push
mov
clc
in
sbb
js
cltd
cmp
inc
and
xchg
addr16
cmp
scas
call
sti
pop
jmp
hlt
enter
sbb
int3
shll
mov
sbb
xchg
sbb
divb
pop
movsb
and
and
add
mov
sbb
out
fstps
pop
and
jbe
lods
mov
aam
cmp
jecxz
jbe
int3
fwait
push
icebp
cmp
sub
mov
call
cmp
mov
push
sub
sahf
rorl
out
pop
push
sub
mov
cmp
cmp
loop
xchg
push
out
imulb
fs
dec
dec
sub
pop
xlat
inc
arpl
add
cmp
paddsb
fldt
cmp
jne
ja
test
test
xor
out
outsb
jbe
dec
sbb
data16
out
and
or
aaa
cmp
mov
and
cltd
int3
stc
xchg
mov
cmp
pop
and
fbld
mov
mov
jb
cmp
mov
xor
scas
sub
or
aad
or
dec
pop
xor
paddsb
insb
jno
mov
fnstsw
aaa
pop
dec
rcrl
adc
ja
xchg
mov
jne
sbb
out
xchg
jne
ror
cwtl
mov
aam
push
or
mov
jo
ljmp
cmc
call
in
lods
jecxz
ret
int3
push
xor
jl
test
int3
ret
in
pop
or
mov
call
hlt
sbb
dec
push
or
pushf
sub
xchg
ljmp
and
out
dec
loopne
adc
pushf
sbb
and
and
mov
lcall
scas
jle
push
ja
pop
push
mov
ret
mov
fistps
cld
subl
leave
lds
xchg
jecxz
daa
dec
je
imul
shl
pop
sbb
lds
aaa
cmpsb
nop
xchg
inc
cmp
and
cmc
mov
mov
test
xchg
out
lods
int3
sub
cmp
sbb
insb
cld
repz
aaa
inc
lret
lock
or
adc
stc
mov
xchg
mov
fs
lock
cld
and
xor
sub
sbb
hlt
mov
inc
roll
adc
mov
rcll
cltd
xor
and
mov
lret
dec
mov
test
pop
sub
jge
aam
xchg
push
cltd
sbb
add
test
mov
cmp
out
mov
je
sub
xchg
dec
test
dec
dec
decb
pop
pop
xor
xor
xchg
aam
mov
mov
inc
mov
movsb
fsubr
inc
sahf
stc
sahf
sbbl
movsb
pop
push
or
fwait
std
lret
or
inc
movsl
insb
std
shl
int
mov
shll
adc
push
nop
stc
repz
js
dec
stc
and
out
ljmp
mov
fst
lret
jae
je
fists
mov
movsb
mov
lods
dec
pushf
aaa
andb
pop
movsb
lahf
test
lret
jp
and
les
mov
push
add
lds
shll
dec
and
cmp
sti
cmp
int3
repz
push
das
adc
xchg
ret
rcl
in
and
mov
inc
cmp
div
cmc
jb
or
sub
repnz
sbb
and
push
adc
cmp
ljmp
shlb
cmp
addb
das
cltd
jns
dec
lods
sub
std
mov
cld
adc
jae
xor
data16
sbb
jb
or
or
leave
jl
stos
pop
mov
push
js
mov
mov
jbe
movb
pop
jno
aas
aad
loope
les
jmp
mov
mov
pop
mov
scas
mov
xlat
cmpsb
pusha
or
inc
in
jle
je
hlt
jg
fstps
in
fucomi
sahf
aaa
aaa
add
cmc
inc
jns
mov
cld
mov
mov
push
lods
fldl2t
dec
xchg
jp,pn
scas
pop
cmc
je
je
test
jbe
adc
push
add
push
mov
cmp
xchg
shrl
cmp
fstpt
je
and
out
inc
pop
lods
jae
ja
pop
sub
test
fistps
lods
mov
or
xchg
aam
lods
or
mov
sub
out
mov
addl
mov
jg
popf
sti
xchg
popf
rolb
pop
xor
mov
dec
test
push
in
insl
aad
lret
out
pop
fcmovnb
push
fxam
dec
push
in
adc
mov
sub
in
sarl
sbb
jp
push
popf
rorb
cmp
mov
sub
shl
xchg
xchg
addr16
jp
or
jecxz
xchg
mov
bound
add
lcall
iret
in
dec
ljmp
rdpmc
mov
mov
mov
cmp
mov
out
stc
xor
xchg
mov
mov
je
mov
mov
and
cwtl
aas
mov
push
xor
ljmp
mov
xor
test
jbe
mov
mov
cmp
and
clc
imul
aad
xchg
out
mov
fwait
add
push
mov
jnp
or
add
or
js
shrb
fstl
inc
xchg
dec
sub
pop
shll
inc
call
or
rcrb
call
cltd
adc
lods
inc
jb
xchg
ljmp
jno
adc
push
daa
xchg
inc
or
mov
and
pop
sbb
sub
jno
sbb
inc
call
sbb
out
repnz
test
cwtd
jmp
stc
mov
les
mov
fdivrp
mov
dec
sub
cmp
iret
dec
rol
imul
shlb
or
adc
and
inc
out
mov
mov
cs
sahf
dec
pop
push
pop
out
inc
aas
pop
pop
inc
sub
cmp
adcb
mov
pop
sahf
in
aad
fcoms
sub
mov
jecxz
daa
and
cmp
scas
adc
cmpsb
popf
ljmp
mov
int3
adc
cmp
cmp
jne
pop
gs
out
std
in
push
jecxz
nop
inc
dec
sub
or
cld
and
sti
fstps
fwait
lock
pop
fdivrs
push
jno
jae
fnstsw
data16
dec
cmpsl
sub
sti
push
stc
cmp
cld
in
jecxz
xor
cmp
xchg
mov
imull
mov
loop
add
test
test
sti
lea
xor
mov
mov
cmpsb
insb
mov
add
arpl
lcall
addr16
push
or
xor
mov
call
fisubs
xor
les
daa
nop
fs
shl
int
pushf
lds
inc
repnz
rclb
popf
scas
out
pop
add
xor
mov
jno
push
add
push
ds
ljmp
clc
or
es
cltd
jo
mov
imul
movsl
jo
mov
scas
inc
mov
inc
cmp
pop
jp
pop
push
jge
xchg
enter
iret
or
xlat
cmpsl
sbb
pop
es
push
cmc
push
enter
add
cmp
and
cmpsl
ljmp
inc
dec
fimuls
lret
sbb
and
ret
mov
inc
fcmovne
out
cld
push
lea
xorl
lcall
push
xchg
push
dec
ficompl
xchg
les
sub
pop
push
push
or
pop
jbe
fcomps
sbb
sbb
jle
stos
add
fisubs
test
pop
pop
popf
push
jp
sbb
sub
push
movb
xor
sub
bound
xor
fildl
sub
jp
jo
adc
push
data16
sti
lods
cli
mov
dec
popf
shll
fmull
test
push
mov
dec
imul
pop
cltd
pop
add
out
xchg
xlat
or
inc
xor
pop
bound
mov
jb
xchg
or
icebp
pop
out
scas
lret
xchg
push
rolb
fs
dec
or
sbb
cmp
dec
aaa
cmp
rorb
jbe
arpl
sub
fidivrs
shrb
jge
cmc
and
fwait
ror
sbb
cwtl
leave
xchg
pushf
push
lds
movsl
mov
addr16
in
inc
add
stc
pop
lea
jbe
mov
data16
adc
arpl
mov
stos
jno
push
inc
outsl
cmp
iret
repz
in
pop
or
or
insb
insl
cmpsb
jecxz
rcll
dec
test
dec
test
mov
sub
jl
ret
fdivr
jbe
stos
add
insl
das
pop
pop
adc
xor
inc
arpl
push
jb
push
pop
pop
xor
aas
or
lds
lfs
cmp
daa
scas
popa
mov
pop
shlb
add
push
mov
lret
push
pop
mov
enter
int
dec
mov
cmpsl
and
cmp
in
mov
adcl
out
mov
dec
cmp
and
jge
mov
not
in
mov
out
mov
pop
jnp
je
inc
push
xchg
pop
sub
push
sbb
outsl
popa
fcoms
xor
negl
dec
xchg
test
out
jecxz
lcall
pop
cmp
mov
xor
inc
mov
cmc
popf
push
jmp
or
xor
mov
pop
popf
loope
mov
rolb
or
fwait
subl
pop
aam
in
faddl
xchg
dec
inc
cmp
in
adc
push
xor
shll
into
adc
bnd
pop
adc
ss
push
int
sub
sbb
mov
cld
test
shl
jecxz
push
adc
cltd
movsb
test
mov
jl
in
cltd
clc
int
pop
mov
sub
cld
push
sbb
jge
xorl
cli
push
xchg
stos
dec
nop
aam
ret
mov
adc
bound
push
andps
sbb
stos
stos
std
mov
les
mov
mov
addr16
es
mov
or
outsl
shrd
cmp
jbe
mov
adcb
in
jmp
push
and
daa
push
mov
pop
and
pop
sub
sub
out
cld
dec
and
insb
cmp
mov
js
scas
mov
push
sahf
cmpsl
imul
jg
mov
xor
loope
push
sbb
xor
dec
nop
fstpt
push
sbb
std
loope
idiv
cmpb
dec
mov
int3
mov
ds
inc
sub
jle
lock
mov
rorl
lds
in
adc
out
inc
dec
jmp
jp
adc
inc
and
and
jne
inc
bound
pushf
inc
mov
mov
add
dec
loope
inc
int
push
jb
sub
repnz
lahf
xor
flds
std
jecxz
ret
inc
cmpsb
mov
mov
addr16
sub
hlt
push
mov
pop
fdivr
cmp
xchg
xchg
xor
pop
enter
jne
mov
loop
xchg
repnz
cli
push
pop
sbb
adc
hlt
xchg
lcall
stos
jno
sahf
xor
sbb
pusha
popa
mov
and
lret
lock
dec
cltd
daa
fadd
and
sub
popf
stc
inc
int
add
dec
push
fldl
or
ds
xchg
popa
outsb
int3
std
stos
shlb
lods
adc
mov
loopne
scas
pop
aaa
aaa
and
sbb
lock
rorb
pop
aas
paddusb
jo
inc
mov
or
and
and
jae
mov
xchg
cwtl
cld
jo
negb
cmp
cmp
cmp
dec
add
mov
dec
andb
rcl
std
mov
dec
cmp
or
sbb
inc
into
insb
lods
mov
jbe
jae
ja
and
mov
mov
add
stc
data16
xlat
jo
cmp
mov
push
xor
roll
push
jo
icebp
fwait
pusha
cmpb
push
dec
mov
jno
or
cmpsl
sar
add
pop
andl
jb
fbstp
xchg
dec
movsl
adc
leave
ja
mov
sub
rcl
push
cld
fsts
adc
cmp
cmc
into
aad
fisttpll
push
loope
push
pop
cmp
mov
sub
test
add
fldz
pusha
fwait
scas
sarb
into
aas
push
js
push
xlat
xor
sbbl
icebp
inc
add
dec
cmp
mov
aas
icebp
enter
in
jmp
cld
mov
das
les
inc
pop
test
rclb
push
sahf
fstpl
jb
pop
and
sub
sbb
cli
mov
dec
pushf
adc
mov
test
insl
lods
fistl
jp
lods
sbb
jbe
std
sar
nop
xlat
sub
push
imul
imul
jg
imul
push
sbb
pushf
pop
insl
push
mov
dec
inc
xchg
push
loopne
cmp
dec
not
sub
dec
iret
loopne
pop
mov
jns
cwtl
push
daa
lds
fwait
xchg
pop
into
jae
pop
popa
out
xchg
sbb
push
loopne
mov
inc
or
lret
mov
xor
jno
shrb
bound
pusha
int3
pop
inc
jne
mov
out
shll
ret
andb
pop
push
pop
fiaddl
or
mov
push
mov
sub
adc
sbbl
inc
inc
in
ljmp
faddp
lahf
or
inc
xorb
es
xchg
inc
rolb
add
js
clc
rclb
xor
mov
push
ja
xor
pop
adc
adc
into
pop
sub
dec
mov
or
das
or
pop
adc
out
push
ds
xor
imul
cli
inc
int
pop
test
call
jecxz
hlt
clc
rcr
push
jle
sbb
arpl
or
add
push
sub
sbb
loop
ret
sti
jne
xor
pop
mulb
fimull
cmp
or
xchg
push
and
sub
iret
push
sbb
fldenv
mov
sbb
fwait
inc
cmpsl
pushf
mov
leave
or
xor
adc
dec
outsl
stos
in
lcall
mov
repz
int
lcall
sbb
pusha
shll
xchg
pop
mov
rclb
mov
cmp
push
std
sbb
jno
xchg
lcall
add
mov
sti
sbb
add
ficomps
push
push
rol
or
ret
adc
jo
add
nop
cmp
push
pop
cmp
or
xchg
imull
adc
rorl
sub
popa
aas
cltd
cmp
mov
aaa
into
mov
cld
xor
cmpsb
jl
xchg
inc
or
sbb
mov
cmp
xor
aam
sbb
in
or
cmpsb
pop
imul
mov
shl
or
xchg
mov
dec
lods
insb
adc
push
fs
xor
test
lock
mov
and
lea
ljmp
outsl
push
not
mov
pop
mov
scas
dec
push
shlb
xor
adc
sbb
les
sub
lret
movl
shrb
push
and
outsl
mov
pshufw
mov
or
popf
mov
movsl
js
inc
or
sbb
lret
fisubs
or
pop
dec
cltd
out
mov
mov
out
sub
mov
xchg
add
stos
xlat
pushl
adc
jae
sub
cwtl
sti
dec
stos
outsl
int3
cmp
cwtl
push
jg
int3
es
repnz
test
pop
pusha
mov
adc
mov
popf
xchg
push
inc
popf
and
fildl
sbb
mov
sti
lcall
mov
in
ss
add
clc
lret
add
aas
imul
pop
mov
pop
inc
in
rcrl
adc
pop
xor
adc
sbb
sbb
lock
and
push
dec
inc
test
jns
mov
or
adc
cmp
sbb
push
lea
push
movsb
inc
ficomps
pop
or
cltd
int
ffree
xchg
loop
pop
aaa
cli
pop
stos
or
lret
in
aam
mov
das
jno
pop
fsts
xchg
push
insl
insl
sbb
mov
and
repnz
outsb
dec
push
sbb
dec
mov
fsubp
sub
xchg
push
push
and
rclb
push
jb
int
jb
in
inc
sbb
popa
xchg
stos
mov
cmp
fsubrl
cmp
scas
lock
sbb
sbb
les
add
push
pop
addr16
xchg
fadds
out
sub
cmp
push
or
insl
into
mov
rolb
dec
mov
ret
push
jne
pop
add
cmp
icebp
sub
jo
cmpsb
or
lea
mov
xor
xchg
dec
mov
dec
jo
shrd
inc
push
jle
loopne
lock
xlat
lahf
add
pop
or
mov
fdivl
sbb
mov
mov
aaa
imul
jp
mov
nop
sbb
out
fsubl
push
cld
pop
sbb
jno
mov
jecxz
inc
loope
es
rcll
adc
les
or
popf
mov
xlat
cmp
inc
pop
imul
or
lds
add
imul
in
and
loop,pn
out
imul
pop
fidivrs
fiaddl
sti
ss
mov
fisubrs
fcompl
xlat
pop
scas
stos
mov
xchg
pushf
cmp
dec
dec
dec
xchg
mov
and
jmp
stos
fs
ret
add
sbb
jae
mov
fnstsw
pop
cmp
es
adc
call
push
cmp
inc
jmp
xchg
mov
int
sahf
mov
jae
sub
mov
lret
push
push
jbe
mov
roll
movsb
dec
sub
xor
mov
mov
jmp
xchg
cmpsb
movsl
inc
inc
jp
xor
xor
mov
jge
rclb
lock
push
or
enter
and
xor
hlt
clc
shrl
ret
dec
or
pop
and
add
or
and
mov
inc
stc
neg
push
aad
cmc
mov
jmp
mov
mov
movsb
pop
lds
and
loope
shr
inc
push
mov
jns
pop
jo
add
das
push
pop
mov
jbe
mov
into
pusha
and
cmp
out
lock
fxam
push
das
xchg
inc
in
sbb
stos
mov
mov
push
fadds
pop
lods
hlt
fstpt
lahf
pop
xlat
pop
mov
jns
mov
and
xorb
inc
or
push
pop
pop
int
das
adc
cmp
and
push
fwait
jae
movsb
es
in
fcmovnb
or
mov
dec
xchg
sbb
adc
hlt
aaa
pop
dec
sarl
hlt
cltd
xchg
push
aad
sub
hlt
mov
inc
aad
incl
fdivrl
add
xchg
fdivl
test
and
xchg
rclb
pop
push
test
mov
or
jnp
push
movsl
ds
jnp
mov
or
aas
mov
mov
pusha
add
push
push
cli
inc
push
mov
aam
fdivs
jns
nop
js
imul
mov
es
push
mov
nop
fcmovu
das
popa
mov
and
int
inc
jbe
add
daa
add
test
jle
fimuls
aad
inc
jecxz
popa
mov
sbb
pop
inc
adc
mov
test
loope
adc
je
cwtl
push
push
loop
cwtl
sbb
xor
inc
jo
push
bound
add
pop
rcrl
mov
jb
pop
outsb
dec
insb
stc
add
jo
lret
mov
mov
and
cmpsb
ss
ss
xchg
cmp
ret
dec
into
cld
call
shrl
mov
insl
mov
mov
ds
sub
test
into
pop
imulb
sbb
cld
pop
arpl
in
rcll
mov
call
cwtl
stos
cmc
pop
cmp
mov
pop
mov
sub
sub
js
push
in
idivb
data16
dec
movsl
pop
mov
cld
insb
adc
push
and
andb
push
mov
cmc
rolb
and
mov
into
mov
pop
test
mov
cli
jns
int3
ss
sbb
arpl
mov
xlat
adc
jecxz
inc
xor
add
nop
inc
push
loope
je
mov
xchg
xchg
mov
fistpl
jbe
ret
xchg
jae
or
mov
jne
clc
mov
stos
xchg
adc
imul
orl
jae
add
and
imul
gs
stos
leave
or
cmp
std
cltd
push
and
roll
inc
mov
pushf
nop
sahf
clc
pop
test
jecxz
pop
ja
jo
pop
and
lock
movsb
repnz
sub
or
out
fldenv
sti
mov
ficoms
int
mov
clc
mov
add
imul
repz
jecxz
mov
leave
xor
call
insb
cmc
push
enter
imul
mov
lahf
mov
stos
mov
aaa
pop
xchg
stos
fldl
xchg
dec
stos
out
fisubrs
stc
clc
adc
fcmovne
cltd
testb
mov
aad
add
iret
testb
imul
lock
out
inc
js
adcl
jb
dec
outsb
mov
and
out
sub
test
xor
pop
cwtl
push
mov
xor
ficoml
movsl
dec
or
repnz
mov
jg
jle
jns
mov
pop
mov
push
js
jge
push
adc
mov
addr16
fwait
xor
xchg
movsl
sub
iret
inc
ret
ja
add
scas
mov
xor
mov
out
sbb
out
jns
inc
gs
jecxz
cmpb
push
loop
cmp
cmpsb
out
loop
inc
ljmp
gs
ret
jne
pop
push
movsb
lret
mov
lods
lock
sbb
and
ja
aaa
lea
mov
cmc
add
loop
xchg
lcall
rol
xor
mov
ljmp
pop
int3
out
stc
add
fcmovbe
and
fdivrs
sti
divb
push
or
and
xor
pop
push
in
push
out
loope
lock
push
out
stos
clc
scas
pushf
lods
pop
sub
cld
cmp
mov
xchg
mov
dec
dec
cmpsb
outsl
xchg
mov
adc
push
movb
insb
mov
fbld
sahf
inc
cs
add
fcoms
sbb
mull
daa
insl
adc
add
pushf
or
jns
adc
cwtl
pxor
push
in
imull
int3
push
sbb
je
mov
inc
push
sbb
or
lcall
mov
dec
mov
mov
cltd
and
mov
sti
sbb
mov
ret
mov
inc
push
dec
cmp
inc
imul
add
xor
stos
pushf
sub
pushf
push
pusha
mov
jne
sti
fwait
addb
push
push
movsl
std
fs
idivl
sti
filds
jnp
pop
add
mov
mov
ret
lods
jle
pop
dec
icebp
enter
mov
pop
stc
je
or
mov
outsb
add
and
cmp
sar
xlat
inc
mov
dec
fadds
jp
cmp
mov
xchg
mov
dec
jmp
lods
or
and
icebp
push
cwtl
movsb
sub
mov
sbb
jns
test
lds
mov
dec
fstl
inc
jne
insb
js
mov
sbb
inc
hlt
data16
xchg
pushf
pop
enter
ss
jo
and
mov
ja
pop
or
inc
sub
xchg
mov
mov
push
jmp
pop
fs
sub
sti
inc
cmp
loope
sub
mov
stc
push
fwait
sbb
mov
js
test
jmp
shlb
mov
out
inc
scas
fbld
mov
xchg
int3
sarl
dec
adc
in
sbb
loope
sbb
movsl
out
pushf
ret
movsb
movsb
and
add
out
and
fldenv
idivl
dec
mov
mov
nop
mov
addr16
aaa
cli
lods
mov
pop
out
dec
pop
js
push
and
std
sbb
mov
lods
ret
xlat
jnp
hlt
in
aam
stos
imul
leave
and
xchg
ret
ja
das
jmp
push
dec
les
or
aam
mov
sbb
inc
mov
mov
scas
fwait
jle
std
add
movb
into
mov
gs
sbb
mov
fldenv
loope
mov
mov
cmpsb
inc
mov
in
bound
cmpsl
and
popf
cmpsl
inc
sub
xor
mov
cmp
xor
jne
pop
das
push
fdivr
fistpl
test
dec
pushf
xchg
out
inc
fcmove
dec
sti
mov
fdivrs
or
loope
imul
adc
int3
int3
push
gs
loope
mov
pop
dec
mov
aas
mov
clc
jmp
push
inc
xlat
nop
fwait
adc
in
xor
stos
jb
inc
fxam
cmpsl
push
jb
xor
shlb
mov
mov
fcompl
push
mov
cld
inc
leave
ja
jp
and
push
out
lahf
pop
lods
test
std
insl
mov
in
pushf
sub
push
sbb
movsb
add
fsubrl
mov
dec
xor
add
divb
mov
stos
mov
mov
adc
or
cld
sub
push
pop
or
icebp
insl
jbe
adc
push
lods
mov
push
dec
stos
add
stos
fsubl
pop
cmp
sbb
lods
scas
inc
push
cmp
movsb
mov
add
repz
pop
add
inc
sbb
push
mov
in
jbe
fwait
jne
xor
mov
jnp
and
nop
pusha
mov
sahf
cmp
push
mov
push
imul
mov
pop
clc
mov
mov
fstps
lcall
int
add
inc
add
fidivrl
out
push
mov
popf
stos
and
mov
push
mov
movsl
mov
push
and
sub
push
psraw
push
cmp
or
mov
bnd
push
shll
fwait
test
loop
mov
sub
xchg
cli
std
shl
pushf
or
sub
int
int3
or
pop
cltd
xor
sbb
lock
mov
xchg
aam
mov
jge
lods
popa
fcomp
xchg
testl
icebp
cld
repz
es
fdivrl
pop
xchg
imul
les
xor
loop
and
int
sub
daa
or
scas
test
mov
in
add
xchg
mov
lea
xor
adc
mov
push
bound
mov
cmp
aaa
pop
xchg
inc
inc
outsl
xor
notl
cmc
icebp
call
sub
xor
scas
outsl
dec
test
orl
and
pop
xchg
xor
fdiv
push
dec
cli
mov
pop
cwtl
rcl
lcall
mov
pop
popf
fsubr
mov
adc
pop
insb
sahf
mov
fcmovnb
dec
lock
sub
out
lret
pop
dec
adcl
jp
sbb
inc
cmp
xorb
and
push
sbb
std
std
out
push
popf
inc
mov
push
dec
or
hlt
hlt
rolb
fld
ficoms
mov
mov
scas
mov
xchg
adc
sub
sbb
daa
cmp
pop
fwait
mov
out
leave
inc
push
call
adc
adcl
and
lahf
lock
lcall
pop
jne
adc
in
inc
mov
pop
sbb
fimuls
orl
jno
mov
cwtl
cld
mov
aam
mov
setl
jb
shrb
rolb
aad
imul
xchg
sub
sbb
adc
test
fwait
push
lahf
or
cwtl
push
sbb
pusha
lods
lea
jmp
jmp
insb
fcmovnb
jnp
insl
xchg
push
pop
mov
push
bnd
loopne
push
xchg
jg
xorb
sbb
sub
jp
inc
imul
jb
jle
or
sbb
add
aad
nop
mull
fsubrp
adcb
or
mov
les
or
jno
aas
lds
int3
jg
js
js
or
jo
cmpsl
mov
inc
fists
into
and
cmp
std
ret
push
enter
int3
ret
adc
fsubs
xchg
mov
jne
adc
loope
js
scas
call
sar
push
xchg
mov
push
sysret
lea
mov
push
xchg
jle
push
push
inc
fbstp
jmp
jp
mov
push
and
jbe
insb
ret
or
sub
mov
add
sbb
ja
js
incl
inc
xchg
mov
scas
pusha
fisubrl
mov
outsl
adc
pop
in
sub
adc
rcl
adcl
push
sar
dec
rcr
imul
and
push
add
stos
lret
add
es
xorl
popa
cltd
add
fisubrs
add
sub
sub
inc
popa
jne
popa
mov
and
scas
sahf
and
sub
pop
lret
out
js
roll
sbb
filds
adc
imul
xor
cltd
push
sbb
jne
push
push
jno
outsl
sbb
imul
mov
sbb
dec
fidivl
mov
mov
dec
xchg
cmp
insb
and
aam
inc
sbb
imul
jle
xorl
roll
mov
mov
xchg
jns
inc
lea
mov
dec
xchg
div
cmp
push
pushf
cmp
cmpsl
and
dec
push
add
mov
xchg
and
lods
lcall
shll
adc
mov
fisubl
mov
mov
push
or
or
addr16
cli
test
fistpll
push
dec
xor
pop
push
loope
aam
imul
or
repnz
int3
out
and
push
or
cs
iret
shl
in
mov
dec
call
sub
jo
and
fstpl
arpl
push
cld
push
popa
mov
loope
or
pop
nop
cmpsl
mov
dec
mov
pop
loop
jge
rorl
aas
pop
inc
and
xchg
ret
lods
aad
xchg
jge
ja
mov
fisubrl
mov
sbb
and
adc
push
lahf
mov
in
xchg
aad
xlat
bound
shlb
or
xchg
hlt
push
push
insl
pop
sarb
mov
mov
cld
rclb
xchg
ds
insl
inc
out
mov
sub
sbb
push
sub
call
xor
and
adc
mov
in
aas
int
cmc
mov
add
popa
rorb
sysret
fisttpll
filds
push
xor
in
push
fldt
in
xor
adc
and
std
or
push
hlt
dec
cmp
ds
in
outsl
scas
pop
mov
xor
test
xor
out
fistps
pop
xchg
sub
dec
mov
mov
out
fbstp
and
sub
movsb
js
call
outsl
addr16
lret
mov
mov
mov
xchg
dec
mov
mov
fiaddl
stos
adc
inc
lea
cmpsl
xchg
inc
pop
addr16
stos
sbb
repz
jnp
sbb
sarb
ds
pop
ret
mov
push
jns
jcxz
pop
push
sarb
outsb
inc
jns
cld
pushl
pop
lcall
lods
add
mov
lcall
jp
lods
out
stos
sub
pop
jmp
lcall
jno
in
xorb
mov
adc
jnp
jbe
test
roll
push
xchg
fldenv
mov
ffree
sub
push
pop
mov
jge
xor
in
fnsave
sbbl
dec
outsl
pop
inc
aas
pop
sub
insl
insl
addl
adc
loopne
mov
scas
jmp
and
push
jmp
pop
lock
pop
jmp
dec
inc
hlt
xor
adc
dec
int3
out
mov
sahf
or
pushl
push
push
adc
xor
sub
fdivrs
sarl
inc
mov
int
icebp
stos
mov
outsb
sub
andb
fiadds
and
mov
addb
insb
ja
sbb
loop
cmp
lds
iret
push
mov
mov
pusha
mov
out
sub
leave
push
js
jb
cs
aas
xchg
pop
xchg
cs
int3
in
repz
fldl
and
mov
imul
mov
sbb
jns
sub
jne
fstp
out
cmp
pop
jnp
mov
std
sbb
mov
mov
dec
dec
nop
aas
ret
fwait
cmp
imul
aaa
int
mov
xchg
jbe
inc
jne
mov
negb
push
sub
and
dec
xchg
cmp
adc
fs
or
mov
xor
je
mov
out
sub
out
fucomp
or
mov
fsubr
stos
addr16
lret
iret
imul
fsubrp
pop
int
fstpl
lcall
cwtl
xor
adc
mov
popf
aad
mov
insb
jb
lods
jno
aad
hlt
nop
adc
jae,pt
fs
inc
xor
mov
in
add
push
pop
in
bound
push
popa
stos
je,pn
loopne
hlt
inc
mov
pusha
dec
jg
cmp
xchg
sbb
data16
or
mov
stos
packsswb
loope
and
pop
addl
sbb
in
push
mov
adc
mov
enter
cli
sbb
daa
ljmp
aaa
sbb
add
imul
aaa
sahf
popf
mov
popf
movsl
stc
sub
mov
sbb
xor
sbb
fwait
sub
lret
movsl
jae
xor
pop
jae
clc
out
insl
and
jns
mov
push
out
les
push
or
mov
mov
xor
in
fstpl
sbb
or
adc
mov
sbb
shlb
add
enter
jb
icebp
pop
cld
insl
xchg
adc
add
hlt
andl
aam
pop
mov
insb
jns
push
roll
outsl
sub
cmc
jle
jmp
push
or
mov
xchg
lret
cmp
subb
adc
cwtl
add
out
pop
jne
sbb
inc
mov
sub
pop
out
test
divb
lods
test
iret
mov
loop
inc
test
xchg
mov
mov
xchg
push
repnz
mov
mov
lods
sbb
test
jbe
xchg
cwtl
inc
sbb
arpl
adc
and
gs
dec
inc
out
repnz
mov
lds
ja
scas
cmc
arpl
inc
jl
cltd
jo
test
pop
pop
mov
aad
dec
and
mov
bound
std
mov
push
mov
jmp
xor
ret
xlat
imul
xchg
test
scas
repnz
loope
std
stos
xor
push
fsubrs
shrl
cs
and
test
xchg
or
inc
push
scas
push
jo
mov
lret
and
xchg
leave
sub
ficompl
push
test
test
inc
sbbl
gs
notb
add
cmc
stos
mov
insb
hlt
or
or
leave
pop
clc
xchg
jle
push
repnz
sub
jl
outsl
sbb
cld
mov
pop
popf
out
push
mov
jb
and
jb
pusha
and
out
push
push
mov
xor
iret
mov
fists
imul
jne
cmc
and
mov
mov
imul
je
stos
pop
inc
sub
mov
sarb
in
inc
bound
gs
nop
mov
xchg
mov
mov
gs
jecxz
and
lds
sti
lahf
cmp
pop
cli
cld
ss
movsl
push
mov
dec
in
sub
push
mov
xadd
xlat
dec
hlt
out
int
inc
lods
sbb
mov
test
in
loopne
and
adc
adc
adc
lea
dec
loopne
cwtl
notb
dec
mulb
out
or
fs
sub
xor
jne
xlat
or
pop
imul
cmpsb
pusha
lahf
fwait
loopne
cs
add
and
cli
sahf
sbb
sub
in
xchg
sbb
cmpb
or
inc
test
out
popa
xchg
imul
outsl
xor
jl
inc
mov
pop
xchg
fidivl
sbb
pushf
mov
xchg
lcall
push
daa
in
mov
fdivr
outsl
inc
call
cmp
or
mov
jno
aaa
mov
cmp
lcall
xchg
ljmp
repnz
sub
fwait
sub
mov
sbb
sub
lcall
out
movsl
insb
lds
cmp
xchg
pop
out
push
lods
pop
dec
xor
aas
cwtl
xor
xchg
mov
out
adc
lea
jbe
push
notb
lret
cs
scas
pop
scas
push
hlt
sub
cmp
cltd
arpl
xor
or
jecxz
or
icebp
inc
outsb
xlat
frstor
or
xchg
sub
cltd
outsb
jns
int
pop
lret
xchg
inc
outsb
dec
dec
jns
or
andl
dec
ret
daa
movsl
xchg
test
div
adc
in
jns
iret
jg
jnp
add
lock
rep
fsubl
movsb
das
test
jo
repz
pop
jno
icebp
je
outsb
inc
mov
lea
ds
sahf
popa
push
xlat
add
lahf
cld
jp
cmp
dec
inc
lret
cld
add
cmpsl
cmp
mov
fldcw
sub
jb
sub
int3
adc
mov
jge
cmp
sbb
jmp
xor
scas
shrb
outsl
sub
inc
int
lods
and
cmpsl
mov
push
jle
add
std
shrl
lods
in
cmp
fs
vmulsd
inc
imul
stc
pop
iret
xchg
dec
jge
gs
xchg
cmp
add
jne
mov
loop
sub
cmpsb
adc
pop
pop
test
lcall
push
pop
mov
outsb
psubw
cmp
scas
push
xlat
lock
nop
sub
xlat
mov
into
hlt
xchg
xchg
sbb
cmp
test
pop
mov
in
inc
loop
mov
out
or
stos
mov
sbb
repz
out
push
xchg
jle
cwtl
test
push
sub
add
xor
rcrl
add
sub
les
stos
xchg
fwait
add
mov
and
cld
xchg
jp
test
das
sbb
mov
push
popf
add
pminub
pop
jge
dec
dec
enter
cmp
popf
ds
push
add
cmpsb
mov
sub
xor
subl
sub
stos
aas
push
cmp
stos
mov
stos
dec
stos
and
ss
mov
les
inc
int3
into
inc
mov
shll
inc
jae
repnz
rcr
out
dec
cld
fnstsw
fistpl
push
jns
cmc
fildl
mov
out
pop
xor
inc
les
mov
and
mov
cwtl
jge
sbbb
xchg
sarb
mov
adc
xchg
mov
notb
mov
in
xorl
or
pop
inc
jmp
adc
push
in
rcrb
movsl
fstpt
jecxz
sub
pop
mov
jns
pop
out
leave
pop
outsb
mov
lods
aaa
xchg
sbb
cli
sahf
sbb
jmp
and
mov
pop
jae
or
push
imul
lea
mov
xor
jl
out
dec
cltd
and
xchg
xchg
incb
add
in
loopne
dec
shll
icebp
shll
aaa
cmp
inc
sbb
xchg
fdivr
sahf
jge
rcrl
arpl
enter
adc
lock
inc
mov
sbb
lock
or
mov
mov
decb
ljmp
inc
fisttpll
nop
stos
mov
inc
stos
fs
dec
cmp
jg
push
sub
mov
pop
fistps
adc
icebp
cmpsl
bound
inc
adc
aam
push
or
lea
orl
lahf
iret
aaa
jg
sbb
loop
out
mov
push
push
jae
bound
inc
push
xchg
sbb
sub
mov
and
cmc
cs
mov
cmpsl
pop
mov
xor
dec
scas
ret
in
xchg
stc
mov
lea
add
and
jecxz
imul
outsl
jl
dec
test
sbb
mov
jbe
dec
imul
aad
popf
std
mov
mov
push
inc
imul
mov
cs
cmp
inc
in
outsl
mov
xor
dec
ljmp
sbb
fadd
insb
dec
add
mov
js
adc
addr16
xchg
pop
push
lods
lock
adc
mov
and
stos
mov
cmp
in
psllw
xchg
mov
xchg
push
or
fs
outsl
mov
fcomps
or
pusha
fidivl
adc
pop
xor
push
inc
es
add
cmp
xchg
fdivr
dec
int3
shll
xor
xchg
aaa
sahf
push
ret
outsb
push
adc
dec
push
xor
scas
add
sub
out
mov
mov
popa
fsubs
mov
xchg
cmpsl
inc
add
add
imul
outsl
jp
pop
xchg
out
in
das
movsl
pop
cwtl
popa
fmuls
mov
jl
out
mov
into
addr16
jne
adc
jecxz
aaa
push
pushf
repz
fcoms
popa
fdiv
dec
lock
xchg
repnz
push
sbb
add
loope
add
shl
mov
xchg
pop
sbb
cmp
into
repnz
repz
cld
stos
cmc
jp
cmp
iret
mov
lods
test
jge
xchg
idivl
insb
cltd
push
testb
pushf
push
addr16
push
das
push
ret
jns
je
ret
sub
inc
cltd
dec
sub
adc
andb
fwait
outsb
pop
cmp
jg
cmp
mov
jge
and
fnstenv
das
mov
sub
movntps
push
test
pop
pop
rcl
pop
sbb
sub
pop
xor
mov
pop
push
adc
gs
mov
xchg
nop
xchg
mov
stc
pushf
jl
fsubs
push
push
jne
mov
sub
lods
arpl
add
pop
ds
xchg
sub
sub
pop
les
mov
ret
cld
gs
sbb
add
sub
jle
pushf
enter
inc
cmp
aad
gs
clc
xorl
jae
pop
jnp
das
adc
fisttpll
xchg
cmpl
mov
xor
add
int3
aaa
fwait
mov
pop
mov
ja
or
cmpsl
push
addr16
lea
xor
lock
mov
xlat
call
aaa
jo
mov
mov
lods
stc
or
notb
add
jecxz
inc
repnz
push
scas
das
jae
scas
sarb
fsubrs
into
or
leave
clc
cld
inc
cmp
in
pushf
push
jge
and
aad
fwait
add
ret
mov
loopne
push
dec
mov
cltd
pop
cmpsl
test
pop
push
ja
je
inc
icebp
add
add
xchg
fiaddl
dec
subb
push
dec
or
adc
xchg
rcl
movsb
mov
mov
jns
mov
call
clc
push
push
cli
jp
ds
fwait
cmp
int3
push
ds
add
inc
sub
pop
adc
cs
je
sub
cld
add
rcll
sbb
cmp
mov
or
cwtl
lods
cmp
movsb
rcl
push
or
rcll
daa
mov
push
cwtl
gs
fnsave
push
clc
aam
not
shlb
iret
sbb
jge
mul
xchg
mov
fwait
and
int
mov
fnsave
rcll
push
stc
mov
pop
and
mov
sbb
call
sbb
in
out
pop
stos
std
sbb
stos
mov
or
nop
aaa
out
in
lods
sahf
sub
cmp
pop
arpl
std
je
cmp
and
out
jb
dec
cmp
lahf
js
aaa
mov
in
push
and
pop
or
ds
gs
loopne
sarb
sahf
cmp
mov
jp
cltd
mov
cli
mov
loope
iret
out
mov
popf
sbbb
daa
sub
pop
clc
pop
adc
lret
jbe
mov
xchg
push
push
mov
cmp
and
sbb
sbb
test
hlt
inc
jg
dec
pop
pop
or
ret
fiadds
inc
xchg
stc
add
pop
lock
cmp
sbb
lret
dec
repnz
jg
ljmp
js
ja
scas
shll
jg
call
cmp
sti
xchg
push
rcr
cs
fwait
jns
inc
fiaddl
xlat
enter
jmp
sbb
mov
push
push
ret
xchg
jbe
pop
cmpsb
std
loop
enter
ds
out
dec
ljmp
sub
xchg
mov
push
out
mov
xchg
movsb
pop
stos
mov
mov
outsb
mov
fidivrs
inc
iret
pop
out
mov
pop
outsl
or
sbb
xchg
xor
nop
outsl
sahf
jbe
jmp
adc
jbe
ret
fisttpll
sbb
inc
jp
push
push
ja
nop
mov
inc
xchg
sbb
mov
insl
lea
mov
xor
stc
adc
or
jle
cmp
aaa
pop
daa
enter
pop
sub
dec
push
fnop
push
xchg
inc
or
adc
and
js
lret
xor
and
adc
xor
stc
jge
shufps
mov
ficompl
jae
fistpl
xchg
pop
cld
mov
jmp
adc
dec
jns
les
pop
leave
in
pop
out
in
push
xor
scas
popl
scas
les
mov
push
ret
or
cmp
push
dec
bound
mov
xchg
shrb
movsb
pop
clc
cld
lods
rolb
das
add
dec
mov
add
ds
or
scas
dec
push
inc
test
insb
cmc
int3
imul
stos
adcb
dec
sbb
mov
jle
xor
push
sub
xor
sbb
jno
lret
scas
out
cmpsl
popf
add
sbb
dec
xlat
mov
sarb
inc
cwtl
push
sti
negb
dec
popf
les
inc
push
int3
mov
sahf
pop
cli
outsb
repnz
xor
xchg
insl
in
sbb
lcall
add
testb
scas
xchg
je
mov
adc
inc
test
loopne
pop
push
movsl
fisttpl
ret
pop
repnz
pop
push
add
sti
xchg
std
adc
mov
or
cvtps2pd
xchg
xor
dec
or
repnz
nop
pop
pop
cmp
xchg
test
sbb
xchg
std
or
lds
std
push
and
push
or
xor
rol
mov
in
lods
popl
dec
out
nop
pushf
scas
or
fcomip
sub
inc
les
sub
sarb
ljmp
movsl
or
xchg
outsl
xchg
je
jne
loopne
stos
xor
pop
mov
rcr
push
push
das
ret
inc
test
into
jne
stc
and
aaa
mov
xlat
imul
sahf
shrb
add
jae
aaa
adc
jbe
fdivrs
jo
outsb
movsl
mov
fwait
mov
adcl
jg
xchg
pop
fisubrl
lock
mov
lret
das
push
sub
xchg
mov
dec
mov
inc
loope
cmpb
ss
add
xor
sub
xchg
jno
in
pop
inc
out
mov
loopne
pop
push
nop
pop
push
push
jecxz
mov
arpl
aas
je
pusha
in
or
dec
and
pcmpeqw
pop
lret
bound
pushf
ret
stos
sahf
mov
cld
iret
sti
arpl
data16
ret
lods
andb
adc
inc
in
inc
leave
mov
sbb
lods
xor
sti
adc
xchg
push
insl
fnsave
adc
mov
ret
imul
loopne
push
fcomps
aas
cmp
aam
jp
aaa
mov
pop
mov
cmp
mov
xchg
add
jge
enter
fld
dec
bound
inc
subb
loopne
cmp
sub
movsl
and
or
imul
sub
xor
pop
adc
mov
mov
jo
fsubl
pop
add
cmpl
mov
repz
decl
lcall
ds
xchg
mov
cmpsb
mov
cmp
inc
dec
arpl
cmpsb
push
add
in
pop
jecxz
push
dec
sbb
mov
aas
adc
stos
fmull
dec
dec
cli
lcall
out
roll
pop
fcoms
comiss
xchg
cmp
sub
pop
mov
add
pop
lret
push
mov
jle
test
and
frstor
in
xchg
mov
int3
mov
jge
pop
out
out
nop
loop
push
xor
dec
repz
fiadds
fstpl
inc
push
push
cwtl
lock
cmp
scas
es
and
aad
fistpl
sti
sbb
xchg
push
rcrl
ljmp
pop
mov
je
stc
push
jmp
lcall
jbe
cmp
pop
outsb
pusha
out
jbe
adc
mov
and
mov
or
aaa
add
adc
pop
jns
mov
xchg
out
push
aam
pop
jno
sub
sbb
and
sub
cmp
sbb
cld
mov
or
pop
bound
std
push
fwait
lahf
inc
fisubl
in
shll
iret
mov
xor
rorb
fistpl
out
jge
sub
xor
and
sbb
imul
test
mov
dec
add
mov
adc
adc
add
inc
cmc
ds
inc
popa
adc
inc
xchg
pop
push
ret
pop
in
scas
mov
mov
std
mov
movsb
fcmovu
mov
inc
movsl
pop
mov
lods
push
xchg
dec
push
insl
ss
mov
mov
dec
xchg
xchg
ret
sarb
fldenv
add
and
stc
es
push
or
stc
aad
scas
cmpsl
jl
xchg
stc
out
jg
test
pop
out
fcoml
sti
adc
rcrl
rcr
adc
push
jo
cmc
notb
sbb
jl
mov
popa
inc
into
mov
shll
sahf
sbb
fnstsw
xchg
pop
xor
icebp
mov
cmp
fldenv
mov
mov
in
mov
mov
sub
popa
iret
mov
std
xchg
push
test
adc
inc
xor
das
jp
scas
fsubl
sbb
jne
mov
cmp
push
jge
jbe
mov
jle
sub
inc
lock
push
cmp
and
cmpsb
push
jmp
sub
pop
mov
pop
mov
sbbl
xchg
xchg
call
cltd
addl
sahf
xchg
clc
mov
pop
ret
sub
pop
adc
mov
xchg
ffree
xor
mov
insb
ljmp
inc
xor
imul
jp
jnp
pusha
xor
aam
sbb
ljmp
sbb
outsb
cwtl
jecxz
dec
mov
arpl
or
pop
adc
inc
push
cmpsl
fmuls
dec
fnsave
loopne
mov
insb
rcr
fs
jns
mov
and
cmpsb
lahf
fs
cli
data16
mov
mov
mov
push
stc
lcall
andl
fidivs
mov
mov
frstor
jge
scas
stc
mov
inc
mov
xor
les
mov
jmp
cmp
xchg
cmpsb
jmp
in
pop
xchg
push
push
cmpb
inc
mov
dec
mov
cli
jge
punpcklwd
aam
xchg
jno
divb
xchg
aam
ljmp
sbb
stc
rolb
or
andb
adc
xor
icebp
int3
iret
scas
loope
es
fidivs
add
cmp
mov
lock
das
xchg
jno
add
cli
add
jbe
fisttps
in
loopne
leave
test
push
cmp
jne
cmp
gs
in
jne
scas
cld
mov
mov
aaa
mov
outsb
push
or
sbb
jg
cmp
addr16
clc
fisubrs
mov
cs
xor
popa
mov
push
jb
cli
arpl
lret
pusha
add
lret
cli
mov
xchg
jbe
or
mov
fidivs
inc
or
pop
movl
jno
test
leave
xchg
jmp
xchg
add
push
cltd
cs
cmp
push
mov
xchg
cs
xor
adc
push
cmovbe
cwtl
arpl
and
adc
addr16
test
add
outsb
jge
push
jg
fs
lret
pop
mov
jne
or
lods
jae
repz
cmpsb
sub
popa
mov
cmp
mov
dec
es
pushl
nop
inc
std
adc
and
mov
stc
pusha
cmpl
mov
sbb
fs
push
aam
sbb
dec
mov
rcll
sub
adc
cmp
das
inc
and
jge
push
inc
or
add
push
ss
lcall
dec
fiaddl
stc
outsl
out
push
mov
out
jp
jge
and
mov
ret
xor
adc
lods
or
xor
out
xchg
pop
add
adc
dec
aas
mov
pushf
dec
lock
testl
inc
jg
mov
pusha
dec
push
inc
mov
frstor
es
jns
das
outsb
test
cmpsb
bound
pop
arpl
xor
jne
sub
aas
fistps
imul
adc
pop
jne
rcrl
pusha
push
sarl
iret
movlps
aam
negl
pop
jnp
mov
lods
lret
int
call
outsb
fwait
es
fs
adc
or
mov
mov
mov
aam
and
les
fbstp
dec
cmpsl
sub
push
and
aad
sbb
push
jmp
negb
out
pop
mov
scas
fistl
mov
ja
imul
std
mov
mov
outsl
adc
cmp
fcoml
iret
xchg
mov
data16
push
mov
fs
pop
nop
adc
lahf
inc
sub
imul
mov
pop
push
xlat
dec
insb
jo
xchg
jle
dec
pop
cmp
mov
mov
es
push
cwtl
or
mov
jbe
sbb
mov
add
mov
xor
dec
mov
or
jne
mov
nop
add
dec
aam
test
dec
loope
xchg
or
stos
and
cwtl
dec
mov
ljmp
loope
mull
mov
mov
jo
in
sub
outsl
mov
movsl
jae
xor
push
mov
fimuls
mov
in
sbb
movsb
mov
push
repnz
fnstenv
int3
loop
out
sbb
and
cmc
dec
mov
or
es
or
jno
arpl
stos
jno
ret
xchg
cmpsl
push
inc
aam
push
jge
and
js
inc
cmc
out
jbe
and
mov
xor
sub
cmp
push
inc
cmp
out
ret
movsl
push
fs
es
mov
push
sbb
arpl
mov
sub
add
jnp
ret
sub
scas
sbb
fs
das
cld
mov
ja
in
js
nop
push
or
cltd
mov
testl
pushf
lcall
inc
mov
adc
cmp
cs
lods
xchg
das
fucomi
add
xorl
or
popf
push
push
repnz
fiaddl
shrb
flds
popf
and
xorl
jno
or
dec
xor
rclb
pop
sbb
sbb
mull
push
insb
gs
sbb
mov
lahf
imul
mov
std
mov
push
lahf
shlb
pop
jno
xchg
ljmp
pop
dec
cltd
cmp
jg
push
mov
inc
insl
fisubs
sub
pop
loopne
cmpsl
test
mov
stos
arpl
into
sti
push
aaa
les
cmp
cli
push
fs
xor
addb
cs
and
add
cmpsl
lret
ds
dec
or
pop
ss
or
mov
add
lods
popf
dec
mov
scas
add
stos
sub
es
iret
cmp
mov
mov
insb
ja
cli
sub
push
inc
popf
movsl
push
incl
adc
sahf
inc
inc
and
and
jg
pop
sbb
test
sbb
stc
mov
lds
lods
adc
or
orb
push
das
add
adc
ds
enter
in
mov
and
sti
stos
or
mov
push
std
shlb
jno
cmpsb
sub
push
pop
xchg
push
xchg
and
sub
xor
clc
push
ret
adc
insl
negb
hlt
push
stos
je
pop
loope
and
pop
push
sarb
imul
cmpb
inc
inc
xchg
stos
imul
jno
push
fimull
insl
ret
cmp
scas
hlt
add
fists
test
imul
icebp
sahf
xor
mov
cmp
jno
jb
inc
test
dec
xchg
or
and
jnp
xor
inc
mov
pop
xchg
mov
cmp
aam
jns
sbb
sbb
cmp
or
adc
pop
cs
sub
mov
fidivrs
clc
imul
sbb
shlb
pop
jae
sub
mov
or
in
daa
int3
testb
jae
and
and
ret
les
pop
xchg
sub
cli
insb
xchg
xor
dec
pushf
mov
aas
dec
sbb
shll
jp
and
pop
sub
inc
adc
test
icebp
sub
leave
stos
scas
ret
pop
cmp
adc
adc
xor
ss
mov
fwait
jne
movsl
lds
jle
dec
popf
jmp
sahf
pop
inc
stos
pop
cmc
mov
sub
fldlg2
bound
jmp
mov
xchg
sub
movsl
nop
int
ljmp
je
cmp
fwait
and
mov
adc
inc
leave
loop
sbb
jns
outsl
xor
sub
xor
mov
cmp
inc
xchg
ljmp
bound
inc
rorb
cmp
and
mov
and
movsl
aaa
loope
fidivrs
movsb
xchg
neg
test
xchg
sub
inc
loope
mov
add
jmp
icebp
js
add
popf
add
adc
or
into
iret
or
push
jp
adc
add
xchg
or
outsb
push
jne
inc
add
push
add
jl
mov
mov
enter
movsl
aas
subl
out
in
cmp
outsb
shl
fists
xchg
or
pop
idivb
push
push
inc
stos
fs
loop
sbb
sarl
inc
daa
sub
cld
jg
and
rcrl
lds
mov
push
sbbl
aas
add
out
jmp
lcall
and
pop
cld
aad
cmp
insl
decb
loopne
sub
dec
inc
loop
bound
mov
jg
mov
out
pushf
xor
nop
dec
sbb
inc
sbb
jae
ret
daa
dec
or
mov
fisttpl
push
mov
sbb
aad
adc
inc
mov
adc
xlat
jg
ja
push
lock
push
js
xchg
fisubrs
sub
pushf
scas
push
sub
jmp
icebp
mov
adc
test
addb
jl
lock
inc
adc
pop
adc
mov
repnz
jmp
imul
leave
mov
loope
cmp
sbb
cmp
xor
mov
jl
sbb
jge
pushf
add
jno
test
add
pop
jnp
jnp
push
jg
xlat
sub
and
nop
add
ds
sahf
sub
pop
out
push
test
outsl
sahf
je
or
add
cmp
test
dec
pop
scas
lods
or
adc
push
scas
neg
cmpsl
and
mov
xor
jmp
stos
movsl
inc
push
out
xor
and
lods
pop
pushf
out
sub
repz
add
out
fstpt
imul
icebp
mov
xor
aam
pop
mov
pop
rorl
mov
xchg
shl
aam
rcrb
mov
paddsw
mov
out
xchg
xor
std
xchg
pop
in
movsl
xor
sbb
push
cmp
sub
add
cmp
mov
mov
jecxz
out
sub
addr16
or
mov
push
push
push
inc
sbb
fidivs
push
lret
fisttpll
icebp
push
pop
ret
sub
jnp
loop
jne
or
imul
aad
mov
js
aaa
loop
cltd
mov
jns
pop
sbb
fldt
pop
out
pop
mov
pop
inc
fbld
outsl
es
push
jp
cmpsl
imul
jmp
sub
imul
lcall
lods
push
or
mov
daa
in
ja
shll
lea
and
data16
in
dec
jp
add
lds
roll
fnsave
jmp
aam
and
push
cmpsl
pop
jmp
mov
lock
or
hlt
sbb
dec
adc
cmp
mov
loopne
jmp
pop
sub
cmp
fstpt
sbb
arpl
adc
xorl
int3
lea
fs
push
loopne
xorb
orl
push
faddl
stos
hlt
xchg
inc
jmp
call
xlat
xor
sub
pop
push
add
lods
cli
iret
ret
xor
lret
outsb
xor
ret
lret
les
dec
aad
js
pop
xor
ret
mov
sub
cmp
pop
cs
xchg
aad
outsl
cmp
sbb
push
stos
scas
lahf
xchg
clc
enter
insb
pop
jb
outsb
dec
jmp
push
add
aad
popf
jnp
scas
scas
js
icebp
inc
fcoms
mov
mov
adc
inc
mov
sbb
fstpl
ljmp
aam
mulb
sub
lcall
iret
pop
flds
ret
fidivs
hlt
sti
push
mov
popf
mov
push
arpl
loop
push
push
test
dec
stos
icebp
jbe
mov
jl
sti
dec
xchg
inc
push
stos
jb
sub
fnsave
push
fidivrl
ljmp
call
scas
test
fs
rcll
test
mov
pop
xchg
outsb
push
jmp
jb
loop
lods
or
mov
stos
xchg
mov
sbb
xchg
add
mov
ds
sub
lods
pop
sbb
dec
loope
or
sub
mov
fmull
hlt
inc
pop
add
pop
xor
in
loop
lock
inc
jne
aas
fsubs
adc
in
addr16
mov
mov
in
mov
lds
aad
fidivrl
xchg
ss
sbb
rol
push
inc
stos
adc
mov
aaa
ds
xor
push
rcr
popa
orb
mov
inc
inc
js
inc
sbb
out
andl
and
mov
adc
in
jg
leave
clc
sbb
and
aam
loopne
push
pop
or
pushf
add
push
out
jg
inc
popa
sbb
cwtl
fdivr
insl
jno
xor
into
push
fidivrs
jge
ja
sub
movsl
mov
mov
adc
adc
push
ljmp
xchg
sti
popa
sbb
xor
je
sarb
add
scas
jg
mov
ss
pop
repnz
inc
mov
and
jnp
lds
push
movl
iret
add
ret
xor
jg
pop
std
push
les
sub
cmp
lcall
sub
outsl
dec
add
xchg
inc
lock
cltd
fimuls
cltd
push
loope
mov
jae
daa
mov
faddp
fidivl
in
repnz
push
cmp
jge
int3
inc
bound
nop
push
dec
mov
inc
insl
fsubrl
mov
and
fwait
std
aam
cmp
cmp
mov
fbld
out
or
dec
pop
out
into
pusha
mov
sub
or
jle
mov
inc
push
fdivl
push
lahf
cmpsl
inc
enter
dec
xor
sub
jo
aad
sub
cld
neg
mov
dec
dec
xlat
mov
fsts
and
mov
pop
xchg
inc
or
xor
push
sbb
into
lea
cmpsl
mov
xor
shlb
daa
mov
pop
insb
mov
fiadds
sbb
inc
jle
into
jbe
push
or
push
test
hlt
xchg
lds
fisttpll
sar
add
xor
scas
clc
inc
and
cli
push
inc
dec
xchg
inc
hlt
fcomp
mov
adc
pop
repnz
sbb
add
mov
lods
repz
imul
rcrl
popf
and
xchg
mov
jb
xchg
test
mov
xor
xor
add
add
pop
cwtl
inc
daa
cmp
sub
mov
pusha
xor
mov
popa
aas
cbtw
push
outsb
jmp
popf
imul
cmp
popa
jmp
rorb
mov
mov
add
and
in
testl
pop
shlb
xor
push
sub
ja
out
pop
add
ficoml
push
out
mov
leave
push
fistpl
and
dec
outsb
xor
add
lock
inc
and
divb
fbld
xor
sbb
add
sbb
fstpl
ret
idivb
repnz
jmp
mov
mov
bound
lcall
insl
sub
lcall
mov
jns
jb
sbb
hlt
push
mov
pop
mov
jns
int3
movsl
out
mov
push
cs
xchg
pop
xor
ss
ficomps
mov
pop
mov
nop
pop
adc
test
fs
mov
jnp
lock
xchg
sbb
or
pusha
call
mov
mov
fistpll
sbb
prefetch
int
inc
cmp
aas
mov
jp
ja
xor
or
add
andl
and
push
cmpl
cmp
inc
out
test
xor
and
scas
dec
imul
and
out
or
js
loopne
sub
cmp
fs
sbb
ds
dec
out
outsl
lcall
and
xor
imul
ret
imul
adc
sarl
rclb
out
cmc
inc
test
mov
xlat
adc
pop
push
mov
addl
mov
and
lods
or
popa
popa
mov
lods
mov
loope
or
sbb
xlat
jg
jle
dec
mov
out
and
mov
and
xchg
pusha
pop
addr16
repnz
mov
and
push
stc
lds
sub
bound
hlt
push
cmp
or
shl
ret
test
jg
outsb
mov
test
adc
in
sub
sti
jecxz
stos
cmp
xchg
jnp
push
dec
jp
addl
jb
xchg
popf
out
movsl
mov
cmp
out
adc
loope
test
sub
xchg
cwtl
out
inc
fmuls
pop
in
jnp
add
inc
inc
lods
push
mov
dec
fwait
in
scas
jno
gs
imul
xchg
adc
jp
popa
mov
in
cmc
lds
mov
ja
and
dec
push
dec
add
jl
loop
icebp
sbb
adc
addps
in
xchg
pop
xor
fst
sbb
movsb
xchg
pusha
sbb
sbb
add
add
test
popf
lret
repz
push
or
push
inc
imul
popf
add
scas
leave
aam
and
mov
push
inc
fildl
aaa
insl
inc
jae
sub
test
mov
repz
add
in
les
testb
pop
xor
mov
out
aaa
push
repnz
add
addr16
testb
mov
or
add
cld
mov
das
das
repnz
daa
xchg
inc
or
cmpsl
adc
sbb
rclb
and
ss
lea
fwait
xchg
les
jl
mov
jno
dec
add
add
sub
jle
subb
outsl
test
mov
xor
add
imull
roll
stos
add
dec
or
mov
test
jmp
xor
out
sub
jbe
mov
fiadds
pop
sbb
nop
lods
push
dec
scas
or
push
dec
adc
testl
xor
adc
push
mov
xchg
repz
adc
div
adc
dec
mov
pop
dec
out
mov
lahf
or
sbb
dec
mov
inc
test
out
inc
loop
pop
jno
cmp
fnstcw
int
push
mov
sar
xchg
jns
mov
addr16
mov
iret
dec
loopne
push
fnstsw
xor
adc
stos
loop
jecxz
jecxz
mov
cmp
xor
ret
mov
icebp
mov
int
and
insb
cmp
xor
fdivr
mov
dec
sbb
pop
mov
mov
jge
aaa
movsl
xchg
jb
and
push
in
cmp
out
jg
cmpl
mov
in
jmp
fcomp
push
cmp
pop
xchg
cli
lock
xchg
push
ja
cmp
mov
insb
lea
xor
push
xorl
negl
addr16
into
jmp
int
adc
imul
shrl
and
test
jecxz
mov
xor
jb
xor
cwtl
aas
inc
push
jg
cli
jo
fnstsw
test
les
shrl
loop
push
sub
enter
fists
in
jae
leave
add
inc
cmp
cmp
fstpl
lret
jno
inc
jno
mov
jns
xchg
sahf
movsb
push
inc
sbb
lock
adc
push
jecxz
js
mov
roll
lea
adc
icebp
dec
hlt
jo
ret
mov
scas
das
fsts
lcall
xor
test
add
pop
insl
pop
aaa
outsb
imul
xor
adc
inc
mov
stc
stc
loop
push
sbb
es
cmp
cmpl
mov
ret
in
cmc
lahf
jne
fstl
and
dec
bound
xchg
std
loopne
pop
test
cmp
lea
push
jo
ret
insl
imul
rclb
clc
mov
into
cld
cli
sub
and
jo
das
mov
sub
insl
and
cmp
das
push
add
xchg
and
ret
jmp
insb
sbb
cltd
cmc
ficomps
maskmovq
negl
les
pushf
and
dec
add
rorb
lds
mov
fiadds
in
rorb
pop
lret
sbb
pop
cmp
fldenv
movsl
in
mov
inc
and
int3
movsb
mov
fdivrs
rclb
inc
jecxz
jl
adc
cmc
mov
insl
sbb
push
mov
out
movsl
lods
mov
in
ror
mov
movsb
in
divl
inc
inc
dec
mov
ss
pop
dec
or
aas
jae
adc
xchg
inc
test
lods
lret
add
push
xchg
shrb
mov
les
test
loop
pop
call
loope
fchs
andl
imul
and
push
xchg
movsb
jo
fisttpl
jmp
dec
fidivl
pop
mov
lds
fldenv
inc
adc
xchg
jecxz
dec
rcrl
outsb
mov
cmp
mov
cwtl
lret
lcall
addr16
mov
shll
cmp
aas
cltd
cli
pop
dec
dec
jl
cmp
jp
mov
mov
daa
sbb
mov
sbb
ds
cmp
mov
cmp
or
xchg
std
xchg
insb
dec
mov
and
jb
fldl
adc
ret
push
int
jg
test
bound
mov
jnp
js,pt
mov
jnp
in
test
cmp
mov
mov
cmp
xchg
loop
in
cli
dec
and
push
push
mov
in
js
add
lods
hlt
into
cmpsl
and
add
data16
imul
test
pop
dec
dec
push
pop
bound
cmp
lret
cmc
jae,pn
shrb
aaa
notl
fsubl
daa
dec
xchg
xor
subb
sub
fucomi
mov
push
aam
pusha
pop
pop
insb
idiv
jns
js
pop
rorl
mov
mov
out
sbb
xchg
pop
xchg
sbb
or
push
jecxz
sbb
push
jge
dec
enter
push
cli
filds
imul
xor
in
inc
pusha
in
cmp
dec
popa
cmpb
dec
dec
popf
sarb
xor
pop
mov
push
adc
sahf
xchg
pop
xlat
sub
sub
fimull
push
in
outsl
mov
adc
mov
out
pop
push
and
fiadds
and
bound
in
mov
sbbl
out
rcr
pop
mov
int
push
test
sbb
cmpsl
pop
jle
xchg
sub
sbb
adc
ljmp
test
cmpsb
fstp
dec
scas
sub
enter
cwtl
sbb
insb
rcr
xchg
mov
pop
xchg
lock
stc
call
or
lret
imul
dec
in
movsb
mov
iret
xchg
scas
je
test
sti
lock
cltd
pusha
in
cld
addb
mov
cltd
test
cmp
mov
adcb
pop
lea
inc
lahf
adc
popf
inc
jle
scas
push
xchg
inc
pop
push
cmpsl
jle
jmp
dec
fwait
mov
xor
lods
stos
icebp
je
or
scas
push
jno
arpl
dec
inc
inc
lods
leave
push
loopne
mov
mov
xchg
cmpsl
idivb
xor
addb
inc
std
cmpsb
cmp
neg
sub
mov
out
aad
xor
pop
pop
jno
pop
mov
in
pop
jecxz
xlat
xchg
fdivrs
pop
pusha
arpl
mov
es
je
xor
mov
fwait
aaa
push
push
mov
lock
jmp
and
pop
cmp
inc
sbb
ds
jo
xchg
ja
cmpsb
xchg
adc
jmp
int
cmp
sbb
push
pop
stos
loopne
jbe
ljmp
cltd
push
mov
in
sub
movl
sub
movsb
mov
cmpsb
mov
not
mov
int3
mov
push
jg
inc
js
repnz
push
mov
add
and
push
xor
pop
loop
mov
add
test
rcrl
adc
mov
out
pop
cmpb
shl
xchg
insb
push
loopne
call
scas
xor
ds
sbb
sbb
jl
mov
aaa
out
inc
push
arpl
pop
inc
sub
pushl
test
pop
cld
in
std
add
or
dec
fdivrl
pop
mov
daa
gs
cmp
stos
ret
sub
mov
loope
test
jmp
inc
or
stos
sub
mov
mov
xchg
lret
pop
sahf
out
jp
ljmp
scas
xor
fs
or
fidivrs
rcrl
test
pop
cmp
and
push
inc
sbbl
dec
call
pop
adcb
cld
inc
loope
aam
cmp
mov
cwtl
mov
cmp
ljmp
jo
cli
sti
bnd
push
je,pt
pop
lcall
mov
lds
xchg
insb
pop
adc
xchg
lret
shrl
xor
mulb
pop
jmp
cli
call
jns
inc
je
hlt
inc
mov
es
pop
or
test
xchg
lods
add
loope
popa
jmp
cwtl
insl
mulb
mov
xchg
xchg
or
outsb
inc
jle
push
adc
sub
pusha
sub
adc
xor
fldcw
and
xchg
add
jp
or
mov
test
sbb
push
mov
mov
fisttpll
xchg
call
int
push
add
and
xchg
xchg
sub
outsb
jecxz
or
data16
subl
cmp
adc
pop
dec
dec
rcll
xlat
xor
inc
mov
xchg
cwtl
or
arpl
lret
add
push
mov
or
imul
outsl
fiaddl
inc
idivb
cmpl
jg
es
adc
cmp
jl
mov
xchg
add
popa
idivb
aam
push
xchg
lock
aas
xor
notb
pop
sub
dec
sahf
add
movsl
call
cld
ds
pop
pop
or
push
xor
jnp
mov
rcrb
pop
insl
cmp
pop
jbe
sub
mov
jmp
ljmp
popf
pop
leave
sahf
dec
xor
fwait
push
insl
imul
push
sahf
jecxz
xchg
popa
jecxz
insl
sub
cmp
mov
test
stos
dec
cmp
or
orl
pop
pop
arpl
jecxz
add
fwait
outsb
cmp
pop
add
inc
sbb
mov
ret
mov
fidivrs
mov
in
xor
add
cmc
jns
dec
jbe
adc
jnp
push
jns
adc
cmp
clc
subl
gs
xchg
std
insl
lcall
clc
pop
mov
jbe
mov
push
and
das
pop
test
addl
inc
pushl
xor
and
mov
push
pusha
repz
xor
loop
into
xlat
fcompl
mov
ljmp
repnz
stos
mov
iret
ds
jl
push
stc
ljmp
out
mov
jne
repz
test
psllq
test
mov
mov
in
call
sarb
add
xchg
cli
jbe
push
fs
ret
inc
or
mov
dec
pop
addr16
inc
sti
insl
and
push
jae
cld
ficoml
mov
movsb
xor
imul
mov
clc
dec
sub
std
sub
sub
in
cmpsb
pop
enter
sub
mov
xor
mov
lods
push
lock
cmpsl
mov
add
inc
out
movsb
test
bound
push
pusha
pop
jge
jmp
in
sub
ret
std
xlat
push
das
bound
mov
adc
ret
sub
cld
scas
lret
mov
scas
mov
stos
dec
fdivrs
inc
ret
jmp
sub
sub
in
je
hlt
lahf
push
fs
test
jno
mov
dec
stc
mov
mov
movsl
lahf
mov
push
rol
mov
test
xor
mov
lcall
jg
mov
sahf
or
mov
lock
and
or
inc
aam
xorl
jnp
es
icebp
pop
and
test
dec
cmc
add
adc
test
aas
dec
mov
loope
lds
push
sub
and
inc
cwtl
xor
jg
icebp
scas
pop
loopne
outsl
xchg
push
fs
jnp
scas
xchg
mov
push
cmp
or
dec
adc
inc
adc
and
gs
mov
mov
das
cmp
cmp
push
push
mov
aas
cmp
in
jbe
mov
mov
shl
dec
mov
mov
jle
adcl
mov
sub
fimuls
push
aam
lret
add
std
mov
jno
push
lods
pop
pushf
mov
adc
xchg
enter
push
mov
inc
or
and
out
in
jl
sbb
pop
lods
imul
aas
orb
out
push
cmp
lea
rol
mov
sub
pop
inc
fnstcw
add
repz
rcrb
ljmp
ret
popa
mov
fisubl
push
sub
nop
pop
jp
sub
xchg
jg
jg
aas
pop
push
or
mov
popa
push
xchg
jmp
xchg
cmp
sub
pop
arpl
call
fadd
roll
in
sti
pop
pop
aad
mov
mov
jno
int
dec
adc
push
fmuls
push
dec
add
es
aam
insb
or
and
shlb
popf
dec
bnd
js
sarb
sbb
and
popa
lahf
xor
repz
sbb
xchg
mov
scas
xchg
std
inc
rolb
sub
or
dec
push
pop
inc
ficoml
in
testb
sub
pop
mov
dec
push
int
xchg
int3
jp
cmp
mov
xchg
pop
insl
push
shlb
mov
daa
daa
xor
add
mov
rorb
int
mov
pusha
decl
and
out
aaa
nop
cld
aas
loopne
jnp
cmpsl
inc
or
ret
pop
mov
xchg
xchg
sahf
adc
dec
les
and
fnsave
out
jp
add
popf
xor
icebp
addr16
push
dec
fst
sub
aam
lretw
mov
icebp
sub
sub
daa
dec
sbb
in
shlb
cmp
inc
sbb
inc
stc
cmpsb
enter
ja
pop
sbb
sub
lahf
pop
into
in
dec
out
test
mov
insb
int3
jnp
push
fs
test
cld
in
xchg
lock
jbe
dec
pop
xchg
insl
dec
dec
sbb
lcall
pop
hlt
mov
add
add
fstl
push
mov
or
cmp
mov
xchg
inc
incl
xchg
mov
push
cwtl
repz
mov
cmpsl
cld
icebp
add
cltd
add
cs
out
inc
bound
popa
cmp
in
movsl
and
sub
test
jno
lds
aaa
dec
inc
lcall
pop
nop
int
mov
push
inc
lods
mov
pushf
daa
out
mov
into
or
mov
rorb
sbb
sbb
mov
movl
bound
lock
cld
addr16
cmpsb
and
inc
push
rcrb
popf
jle
dec
xchg
loope
repnz
cmpsb
dec
cltd
add
mov
cmpsl
add
cmp
lds
mov
sbb
mov
adcb
pop
mov
out
pop
mov
xor
mov
add
adc
mov
pop
pop
sti
insl
xchg
xchg
lcall
movsb
jb
clc
gs
jp
fwait
xchg
jle
cmc
int
imul
mov
out
jge
inc
and
xor
loop
xchg
sar
jbe
mov
cld
cld
xchg
fsts
out
in
xchg
outsl
push
push
adc
scas
cmp
cmp
ljmp
and
ds
adc
sub
mov
mov
enter
std
and
mov
adc
inc
pop
adc
in
jge
gs
push
xchg
stc
std
push
add
insb
imul
dec
or
mov
into
sbb
mov
jae
ja
ds
fnsave
in
jno
sti
hlt
sbb
and
cmp
adc
jl
xchg
popf
inc
cld
push
push
stc
fcom
mov
adc
cmp
mov
shlb
xchg
daa
das
aas
rcll
lods
adc
repnz
xchg
add
pop
scas
repnz
add
dec
pop
stos
rcll
xchg
adc
cwtl
push
pop
mov
add
sub
mov
mov
pop
push
inc
mov
mov
lcall
lret
repz
jnp
push
mov
push
xchg
in
and
outsb
jmp
push
push
aas
ss
add
sbb
lods
and
hlt
xor
test
fsts
scas
adc
xor
add
jae
add
and
pop
mov
cmc
mov
pop
dec
pop
mov
in
les
or
icebp
add
sub
cs
mov
outsl
and
orb
mov
int
xchg
clc
or
sub
pusha
or
fisubl
movl
sarb
sti
xor
sub
add
adc
pop
outsl
dec
lea
mov
or
adc
add
hlt
lds
std
cmpsl
adc
inc
or
popa
into
jbe
mov
sti
jne
or
adc
or
mov
loopne
jbe
cmp
pop
dec
inc
jecxz
fdivl
pop
lds
repz
xlat
imul
xlat
enter
daa
shl
inc
out
imul
mov
xchg
or
pop
insl
push
adc
mov
les
add
adc
push
pop
inc
push
pushf
cld
sbb
lds
fstl
aad
add
adc
loope
mov
push
aas
jecxz
jecxz
xor
and
sub
daa
xchg
mov
shr
cld
clc
ja
inc
scas
jae
mov
adc
lods
in
lds
dec
pop
pop
inc
push
mov
push
or
mov
mov
jecxz
lahf
dec
inc
mov
scas
push
inc
mull
rolb
jl
mov
xor
repnz
xor
xor
inc
icebp
movl
mov
fldt
orb
mov
push
xchg
jbe
inc
es
and
sbb
pop
push
jns
test
mov
inc
imul
shll
pop
movsb
cmc
test
lret
mov
sahf
fwait
lcall
shl
inc
cmp
popf
ror
sub
fwait
dec
cmp
rol
xchg
in
testl
enter
pop
dec
lea
mov
movsb
xor
rcrb
jo
lret
sbb
mov
jge,pt
ror
mov
push
andl
sub
adc
mov
xchg
popa
mov
sub
add
add
das
dec
mov
xor
or
mov
inc
sahf
add
and
xor
mov
and
imul
xchg
pop
test
test
into
sbb
outsl
mov
rolb
and
adc
pop
or
aaa
insb
stos
xor
in
and
in
scas
cmpl
outsl
dec
and
inc
mov
mov
xor
sar
sbb
add
push
fcompl
lea
lret
out
imul
out
jp
mov
or
scas
mov
pusha
ljmp
mov
rclb
das
sbb
add
cmpsb
jle
dec
jge
test
into
lret
xchg
mov
lea
mov
jno
jle
insl
loopne
dec
add
mov
jne
mov
or
int3
ret
inc
add
leave
sbb
jle
mull
lea
cmp
gs
add
xchg
xchg
sbb
inc
cld
shrl
mov
cmc
pop
lret
aad
push
cld
push
mov
int3
push
rcll
xchg
sbb
imul
repz
mov
movl
loopne
pop
shl
repz
or
or
pop
inc
mov
add
idivb
dec
xor
xor
jg
add
cmpsb
out
sub
pop
inc
or
mov
ljmp
in
mov
sbb
push
sbb
adc
mov
jno
sub
mov
lods
in
xor
jbe
addr16
subl
addr16
addb
mov
push
inc
or
shll
jge
mov
ljmp
xchg
insb
aas
in
fwait
xchg
jle
sub
pop
mov
aad
in
roll
mov
or
outsb
sbb
dec
jnp
mov
shl
push
mov
xchg
mov
xchg
cltd
pop
mov
mov
or
out
shll
jmp
mov
sub
mov
fistpll
or
repnz
aam
mov
xchg
sbb
into
mov
mov
data16
aaa
sbb
in
mov
push
ds
pop
xor
sbb
dec
jne
fistpll
mov
pop
cld
adc
mov
fucomip
pop
dec
cmp
mov
fcomp
out
rorl
xchg
mov
fucomi
adc
imul
sbbl
inc
dec
addl
sbb
loope
sbb
rcl
nop
lret
popa
lods
cmp
iret
inc
cli
pop
sub
sbb
shrl
andb
inc
add
add
xchg
jo
inc
sub
mov
cmpsl
jne
icebp
mov
cmp
aam
xorl
in
xchg
fsubrl
loopne
imulb
xor
mov
mov
test
lret
popa
out
jmp
mov
xchg
xorl
shlb
cmpsb
sbb
icebp
mov
cmpsb
test
adc
mov
pop
arpl
sub
mov
inc
xchg
mov
add
idivb
push
inc
pusha
dec
fisttpl
aas
add
lock
inc
call
out
push
or
stc
mov
std
xor
aam
ja
and
ds
hlt
int
lar
fwait
rorl
cmp
dec
ja
push
push
mov
loopne
mov
enter
sbb
inc
loopne
push
ret
inc
push
xor
nop
push
rol
ret
sub
mov
mov
mov
jmp
inc
dec
mov
push
hlt
das
test
in
pushf
movb
cwtl
in
cmovns
mov
xor
adc
pop
sub
mov
mov
or
out
dec
insl
repz
pop
cmp
addl
xchg
dec
imul
mov
in
rorl
fdivrs
mov
pcmpeqb
scas
outsb
test
test
das
sub
lcall
xor
xlat
sub
lds
loope
imul
in
xchg
int3
scas
int
divb
xor
call
lods
mov
jo
inc
cmp
xor
jne
or
rorl
aas
adc
add
xchg
mov
and
js
aas
pusha
dec
movsb
mov
xchg
sbb
dec
insb
push
add
sub
popf
aas
mov
or
outsb
dec
jl
push
xchg
call
jne
cmp
push
sbb
mov
jnp
jo
add
rolb
mov
aaa
and
inc
or
shrl
xchg
cmp
push
xor
sbb
dec
mov
ds
pop
inc
int3
addl
push
xchg
jmp
jb
or
lods
outsb
jns
movsb
testl
adc
filds
jmp
mov
out
outsb
ficompl
lods
mov
fcmovnb
mov
cld
lret
sub
xchg
cmp
in
stc
jae
lcall
add
pop
adc
pop
mov
mov
mov
fdiv
jl
cmp
pop
push
mov
sbb
popf
sbb
int3
lcall
push
inc
rclb
jb
push
test
clc
lret
pushf
cmp
movsb
or
mov
cmpsb
xor
dec
addb
cmc
testb
pusha
lahf
sbb
cli
nop
cltd
mov
dec
pop
test
sbb
mov
inc
es
adc
push
add
ja
int3
lcall
pop
and
xor
lcall
in
jno
out
icebp
in
int
out
jno
les
cld
mov
mov
popa
lret
mov
mov
dec
stc
sub
repnz
jbe
push
add
push
fwait
ljmp
push
and
mov
xchg
xchg
xchg
aaa
loope
or
xchg
inc
dec
cmp
movsl
sti
pop
sti
sub
loop
mov
dec
fwait
xchg
das
rol
pop
push
mov
je
fbld
mov
out
lock
sarl
xchg
mov
not
add
xchg
bound
insb
dec
sbb
mov
mov
add
mov
cwtl
pop
shlb
mov
dec
push
cwtl
fisttpl
outsl
or
imul
xor
cmp
mov
push
outsl
repz
jno
daa
je
andb
dec
aas
sub
sub
sub
xchg
test
clc
push
les
and
cmp
jae
add
mov
inc
push
push
test
mov
fldl
jnp
mulb
aam
or
in
loope
shll
fistps
jb
mov
or
pop
mov
loope
add
movsl
dec
jnp
cwtl
xchg
lret
arpl
dec
pop
push
mull
scas
test
add
lret
sub
in
mov
repz
lock
stos
push
xor
pop
push
cltd
push
imulb
mov
stc
and
add
jb
int3
out
and
cmp
aaa
les
call
fldcw
mov
bnd
pop
xchg
or
fdivrp
std
imul
ss
movb
loop
xchg
pop
xor
sti
jne
add
ret
sub
mov
add
shr
dec
add
repnz
andb
jb
cmp
scas
in
daa
xchg
fcomip
inc
adc
cwtl
cmp
xchg
out
sbbl
addl
cli
cmp
add
mov
js
in
nop
repz
sahf
arpl
cmp
jmp
out
adc
or
iret
pop
mov
lods
add
xchg
aam
push
repz
or
xor
and
iret
icebp
jo
xor
adc
idivb
jecxz
pop
lock
pop
cmp
sbb
test
out
arpl
adc
jae
jmp
inc
movsl
sbb
adc
sbb
jno
in
das
xchg
cmpsl
push
movsl
mov
divl
inc
or
mov
mov
out
fldl
out
jmp
das
mov
or
xor
mov
jg
xchg
iret
pop
mov
cli
hlt
ret
xchg
mov
cmc
std
leave
popa
pop
inc
cs
sti
mov
stos
out
mov
sbb
mov
mov
scas
imul
fisubrs
inc
repnz
lcall
jo
jne
fdivrs
sarb
aam
fbld
xchg
pop
add
push
sub
jne
imul
int
data16
or
clc
das
insb
cltd
mov
cmp
adc
mov
or
adc
mov
clc
cld
imull
popa
std
ja
call
pop
out
mov
data16
mov
mov
pop
mov
jmp
pop
pop
dec
daa
sbb
mov
outsb
ss
inc
mov
pushf
xchg
push
xchg
or
aaa
jo
cmpsl
inc
jbe
mov
out
pop
push
dec
add
and
jb
setbe
fwait
lea
cli
fstpl
inc
xchg
add
pop
and
aam
aas
fisttps
pushf
mov
push
jecxz
negl
mov
cmp
sbb
mov
icebp
and
dec
dec
sbb
pop
jbe
not
xchg
push
mov
sub
jb
mov
fstp
push
xor
iret
mov
enter
add
imul
pop
inc
add
inc
jo
mov
fidivrl
pop
mov
lcall
repz
mov
xor
sub
sub
in
outsl
sub
icebp
arpl
and
xorl
ret
push
icebp
or
fnsave
shrl
mov
imulb
sub
mov
cmc
dec
dec
gs
cmc
jmp
jp
mov
push
fstpl
cmp
fbstp
je
xor
adc
sbb
inc
adc
loope
push
sub
lea
sbb
test
sbb
les
dec
aas
dec
mov
fiaddl
inc
subl
sub
adc
sub
mov
imul
stc
int3
mov
ds
popa
xchg
or
loopne
pop
inc
dec
test
ja
jl
cld
cmp
add
hlt
mov
out
int3
xor
imul
int3
xchg
mov
jp
pop
jecxz
jge
push
mov
adc
es
dec
imul
call
insl
fstpl
inc
add
xor
mov
cli
jle
mov
cmp
stc
dec
or
fists
ss
in
cltd
fistl
mov
outsb
sti
mov
flds
imul
jns
pop
pop
mov
jno
and
pop
ret
ss
mov
sbb
pmaxub
divb
push
mov
mov
mov
push
mov
aad
mov
mov
out
xor
out
ja
cmp
sbb
pop
jae
xchg
cmp
loopne
pop
mov
cmp
push
repnz
lret
test
lock
mov
mov
call
push
arpl
mov
loopne
cli
push
mov
mov
dec
fbld
subl
inc
sahf
js
xchg
cli
gs
lcall
and
nop
ret
sub
mov
xchg
out
add
call
insb
repz
addl
stos
ficomps
enter
stc
xor
aaa
dec
daa
sub
sub
fwait
pop
inc
out
and
or
jl
sbb
pusha
xor
push
lock
scas
dec
dec
into
stos
loopne
add
sub
jecxz
clc
out
xchg
stc
insl
repnz
push
push
nop
into
jmp
xor
xlat
adc
xor
mov
mov
mov
cs
ja
cmpsb
test
cmp
sub
cli
andl
int3
mov
bound
cmpsb
inc
roll
test
cmpsb
cmp
dec
fsubs
jo
mov
sub
pop
fsts
and
xor
sbbl
sarb
lret
mov
cmp
inc
notl
fstpl
or
sbb
es
sub
mov
clc
adc
xchg
stos
imul
mov
fistpl
stos
cmpsl
sbb
and
ss
fwait
out
mov
shl
rcrl
xchg
fildl
add
sbb
arpl
or
mov
push
mov
pop
mov
mov
mov
sub
push
je
add
push
ret
pop
push
shll
or
repnz
push
adc
pop
ja
xor
xor
incb
pop
sbb
enter
xchg
imul
mov
mov
add
lcall
stos
mov
mov
rolw
jae
outsl
fldt
pusha
rorl
ret
adcb
add
incb
sub
repz
test
xchg
aad
dec
daa
sbb
popf
out
roll
jbe
adc
jle
mov
xchg
mov
jle
adc
loop
add
ret
int
aad
or
pop
pushf
lcall
cltd
inc
xor
and
test
mov
mov
js
ret
sbb
xor
jo
sbb
mov
push
xor
adc
data16
adc
sub
mov
fsubl
sar
dec
mov
or
sub
add
stc
ljmp
into
les
cwtl
and
or
cmp
sti
mov
mov
add
cltd
repnz
insl
mov
repnz
shrl
shll
fnstenv
std
inc
mov
pop
cmp
jo
das
test
movsl
xor
testl
scas
dec
pusha
in
pop
add
js
ds
jge
stos
leave
inc
loope,pt
inc
mov
mov
xor
rcl
xchg
sahf
mov
xor
inc
sbb
mov
leave
sub
cmp
cmp
outsb
pop
or
test
xor
jns
aas
mov
dec
lea
push
jmp
pop
insl
repz
outsl
inc
sarb
or
fldenv
fldenv
add
jne
and
dec
xor
mov
neg
inc
cli
out
fcmovbe
mov
mov
shrb
mov
xor
xchg
aas
es
mov
inc
pushf
out
and
pop
popf
mov
mov
out
call
or
mov
pop
sub
mov
pop
in
inc
mov
cmpsl
test
repnz
mov
cmp
sub
xchg
xchg
xchg
cmpsb
xor
or
out
push
xlat
or
enter
and
femms
or
add
add
ret
movups
daa
dec
pusha
sub
or
adc
fldt
and
in
sbb
mov
or
add
icebp
cltd
fmul
cmc
int3
xchg
jns
add
rorb
loopne
dec
imulb
iret
push
jo
out
daa
push
lds
mov
mov
pop
lret
and
hlt
out
fidivrs
movsb
mov
mov
add
cwtl
insl
xor
sub
outsl
out
fbstp
outsl
mov
inc
call
xor
test
lea
pop
imul
clc
out
dec
outsl
je
insb
fs
pop
clc
xorl
sub
push
jmp
sbb
int
movb
je
adc
add
movsl
mov
mov
adc
icebp
test
ret
test
andl
adc
fisubrl
sbb
daa
mov
push
dec
leave
mov
mov
sub
nop
dec
lret
dec
or
jecxz
les
cmp
push
pop
out
inc
fnstsw
lea
insb
pop
insl
hlt
les
jecxz
fstpt
mov
cltd
enter
jnp
pop
jno
nop
push
inc
mov
lea
add
fistpl
fimull
xor
add
pusha
push
scas
stos
jo
jb
push
fwait
pop
dec
adc
or
mov
lock
loope
rorb
dec
inc
dec
cmc
repnz
or
rolb
jne
push
adc
pop
pop
mov
pop
or
insb
ret
ds
lahf
adc
repz
arpl
jecxz
leave
arpl
xchg
push
inc
jo
lcall
or
ret
ss
pop
sbb
dec
ljmp
or
sti
and
testb
jnp
mov
repz
out
mov
aad
in
fs
aaa
jle
cmpsb
push
sub
popf
mov
pop
cwtl
cli
inc
jo
lahf
and
mov
sbb
xchg
scas
cli
push
xchg
jecxz
xchg
es
jecxz
imul
mov
icebp
inc
mov
jmp
repnz
imul
dec
out
ja
fidivrs
daa
pop
xchg
jbe
jns
rcr
hlt
sub
ret
out
scas
arpl
mov
push
in
jne
xchg
cltd
lahf
xchg
out
out
daa
cwtl
inc
outsl
fwait
repnz
or
pushf
vfnmadd213ps
mov
repz
inc
scas
sysret
out
mov
xor
ja
sbb
divb
sub
cmp
mov
repz
push
and
je
mov
sub
push
stos
jg
xchg
add
sbb
imul
stc
clc
xchg
into
int3
inc
sub
xor
pop
mov
xchg
out
arpl
xor
iret
icebp
dec
icebp
int3
cmp
mov
push
lds
mov
jns
test
fildl
inc
shlb
inc
jbe
hlt
cltd
mov
push
and
ret
and
xor
inc
pop
mov
fiaddl
sbb
push
cmp
jns
adc
ds
leave
pushw
cmp
mov
fs
sar
push
daa
pop
pop
sbb
fldenv
mov
fnsave
and
add
pop
jbe
jo
test
cmp
push
push
mov
popf
mov
push
jmp
mov
popa
ret
and
mov
les
dec
mov
push
jmp
imul
xor
cmpsl
push
adc
dec
adc
clc
sub
popf
mov
jmp
lahf
je
dec
xor
and
addl
lds
push
jo
repz
mov
push
fisubrl
mov
mov
add
pop
inc
sbb
cmpb
std
xchg
out
fs
jae
movsb
in
mov
pop
and
adc
add
xor
repz
push
cmpsb
jge
loop
mov
jb
insl
or
cmp
pop
jno
adc
cmc
stc
cmc
jbe
xor
xor
faddl
pop
mov
or
mov
mov
mov
fildl
inc
shr
sub
jne
cmp
ret
pop
gs
stc
jne
or
and
stos
outsl
fwait
push
out
jns
or
sub
and
mov
pop
pusha
and
pop
out
inc
add
std
pop
addr16
pop
clc
jbe
mov
cwtl
pop
scas
ds
or
inc
in
or
aas
cmc
jns
mov
inc
and
shrl
mov
popa
je
pop
stos
mov
rorl
pop
decb
inc
xlat
fstl
pusha
bound
mov
pop
pop
sbb
cmp
xor
pop
push
dec
inc
pop
dec
push
call
call
icebp
out
outsb
test
popa
jb
cltd
aaa
stc
ja
shll
xchg
das
xor
loop
or
push
xor
daa
sarl
pop
cwtl
fs
andl
pop
fnsave
and
mov
cmc
push
cmp
stos
repnz
ret
sub
cmc
psubsw
dec
aam
pop
dec
mov
outsb
sbb
lods
sbb
add
jns
xchg
lock
pop
jle
sar
mov
pop
inc
cmp
bound
xchg
sbb
inc
mov
push
adc
xabort
in
fs
les
adc
adc
mov
push
cltd
xor
cmp
pop
adc
xlat
cmp
or
stos
loope
sub
imul
mov
sub
adc
sahf
jl
aam
dec
mov
jmp
shrl
pop
cmp
test
sub
ret
fwait
pop
andb
and
rolb
subl
xor
inc
jae
leave
mov
cmp
mov
jmp
in
push
adc
adc
push
mov
dec
mov
or
or
inc
jns
push
clc
xlat
xchg
sub
cld
lret
ss
add
pop
lock
sahf
rorl
push
or
fsubrl
das
cld
punpckhdq
adc
ret
mov
in
cmp
mov
xchg
push
arpl
adc
pop
xor
int3
mov
jmp
push
pop
lea
test
cmp
mov
xor
aaa
in
rclb
cmc
mov
mov
ret
xchg
dec
pop
push
and
cmp
pop
push
jae
push
jl
les
or
faddl
addl
incb
call
mov
xlat
lods
push
outsl
pop
pop
dec
jbe
mov
sti
testl
je
or
jnp
popf
mov
shrb
iret
push
les
xor
into
fnstcw
xlat
add
inc
sbb
push
mov
jg
loop
mov
jbe
lds
js
cmp
das
mov
jae
lret
mov
mov
aam
aas
cmc
popf
xlat
nop
ret
movsl
sub
repnz
int
rcrl
xor
inc
cmp
shlb
or
add
stos
ret
lock
andl
cmpsl
cmp
gs
xchg
shrl
in
cmpsb
mov
jae
or
dec
lret
in
sub
popa
and
stc
mov
mov
xchg
cmp
pop
jmp
imul
outsb
sub
les
pop
lcall
mov
das
jno
add
sahf
dec
sub
leave
out
mov
cmp
sub
cmp
out
pop
mov
scas
xor
scas
xchg
xor
and
inc
xor
andl
clc
pop
push
enter
int
adc
pop
xchg
inc
iret
or
jp
sbb
adcb
xchg
aas
sti
stos
lret
jo
outsb
cmp
and
ljmp
jecxz
rep
lock
xchg
lret
int
daa
movsl
push
lret
inc
test
stc
xchg
or
adc
sub
or
nop
push
ret
or
jmp
push
jns
add
daa
jbe
push
add
shlb
insb
dec
fcmove
mov
addr16
and
mov
movb
add
mov
xchg
or
mov
mov
jne
jbe
jp,pt
int3
mov
xor
into
test
push
stos
cltd
loopne
pop
mov
jo
mov
std
push
test
shrb
dec
out
cwtl
push
pop
add
sub
inc
mov
sub
inc
mov
in
loope
test
imul
sub
inc
in
dec
jns
push
in
mov
inc
stc
out
cltd
and
fsubs
rclb
and
xchg
xlat
dec
cltd
add
pop
push
push
jp
in
mov
pop
push
insl
loop
pop
scas
and
aad
fwait
push
pop
aas
mov
loope
add
sub
movsb
shll
stos
loope
cmp
xchg
bound
iret
adc
push
xchg
pop
and
lret
fnstcw
mov
push
inc
xor
cwtl
add
data16
insl
sbb
mov
call
shrb
mov
adc
mov
sub
dec
pop
hlt
pushf
inc
jl
sbb
bnd
mov
dec
in
mov
inc
icebp
jne
push
fdivrs
pop
loopne
cltd
mov
cli
cli
and
lock
enter
add
out
push
enter
cltd
out
shll
je
test
sub
adc
pusha
daa
nop
adc
xchg
push
push
xor
rcrb
mov
ret
jmp
mov
mov
leave
mov
ret
mov
sub
mov
mov
std
lcall
shrb
and
push
out
jne
add
aam
ja
push
cmc
or
popa
lahf
dec
rclb
data16
and
adc
imul
adc
xor
mov
mov
pop
gs
clc
fwait
inc
les
lods
inc
dec
movb
mov
call
push
es
js
sbb
loope
ret
addr16
gs
enter
bound
jmp
add
lret
mov
cli
ljmp
mov
cmp
mov
cmp
push
or
lcall
out
pop
mov
test
cwtl
lock
jle
and
mov
popa
mov
cmp
lret
push
inc
mov
lret
out
jbe
aas
sahf
cmp
lods
add
pusha
out
inc
loope
push
outsl
int
dec
mov
push
clc
aaa
ret
dec
les
add
adc
sub
sub
mov
mov
shlb
sbb
shrb
pop
xchg
jmp
stos
dec
stos
ficoml
pop
test
int3
arpl
add
cmpsb
int3
dec
imul
xchg
in
test
push
out
push
movsb
mov
sub
popa
and
lods
in
jnp
mov
jmp
or
ss
mov
mov
das
dec
mov
xorb
sub
or
inc
das
bound
fmuls
scas
xchg
mov
inc
lea
xchg
leave
pushf
movsb
pop
cmp
pushf
jne
xchg
fcoms
ror
lcall
lock
jle
cmp
lahf
clc
fisttpll
add
mov
dec
or
mov
adc
scas
call
in
aaa
movsb
pop
xor
mov
daa
mov
sub
out
pop
psllw
push
stos
rep
nop
arpl
roll
push
bound
mov
pop
aam
test
test
call
hlt
dec
fistpll
sub
shlb
mov
push
xor
xlat
mov
mov
inc
adcl
cli
js
inc
out
pop
rclb
xor
pop
fbld
fadd
fildll
lahf
shl
sbb
outsl
repnz
inc
test
hlt
sarb
jae
pusha
jb
cmp
adc
mov
jae
in
fsubr
ret
cmp
ret
pop
xor
lea
inc
sbb
xor
mov
sbb
cmp
push
mov
sub
sbb
or
add
inc
or
dec
push
das
lods
sti
inc
lods
icebp
lahf
test
popl
loope
pop
fisubrl
mov
or
ljmp
int3
repz
clc
insb
push
cmpl
in
pop
cmpsl
sbbb
mov
dec
cli
fsubl
pop
scas
adc
add
push
jmp
sbb
mov
mull
inc
fs
jbe
scas
test
out
or
mov
adc
xor
fstl
adc
sub
rcll
sbb
mov
shlb
fdivrs
out
push
add
mov
shlb
fcoml
sbb
test
bt
xchg
add
mov
pop
cmp
out
xor
fldt
push
jno
pop
fcmovnb
pop
adc
mov
popf
notl
or
testl
or
mov
push
adc
insl
mov
mov
and
pop
dec
dec
icebp
add
jns
fwait
stos
mov
lcall
mov
inc
mov
in
cmp
push
syscall
pop
fidivrs
pop
and
imul
push
stos
shr
mov
mov
fcmovnu
mov
xchg
ja
mov
jp
or
xor
adc
and
data16
adc
push
sbb
sahf
push
mov
adc
fs
cmc
nop
dec
push
lock
mov
xchg
lods
and
mov
enter
add
dec
loop
es
add
adc
adc
test
repz
cltd
cmp
out
sub
sbb
test
mov
adc
fsubl
push
outsl
mov
xor
out
and
int
sbb
lods
fistl
jns
cld
dec
pop
push
cmp
test
pushf
pusha
imul
xor
stos
cwtl
sbb
jb
adc
mov
pop
fwait
dec
enter
mov
leave
lret
xchg
mov
or
dec
and
arpl
inc
test
xor
add
out
mov
bound
fcmovu
cs
add
push
jnp
dec
rcll
das
mov
xor
or
das
sub
cmp
inc
xchg
xchg
fucomp
cmpl
mov
pusha
jne
imulb
jae
jo
mov
rcll
or
scas
mov
mov
push
jns
jb
in
in
or
pusha
pop
ret
mull
pop
pop
jl
push
sub
insl
cltd
xchg
xchg
pusha
orb
sub
std
sbb
test
pop
mov
mov
adc
inc
mov
jb
aas
nop
cmpsl
cmp
mov
sbb
test
cmp
pop
lds
xor
aam
imul
jnp
xchg
push
cmp
out
cmp
xor
outsl
insl
sbb
ljmp
jae
cmc
ljmp
sbb
dec
dec
add
xor
adc
jecxz
loope
aas
stos
lcall
xor
push
in
jae
lret
xlat
jae
popa
push
mov
xchg
lds
ret
or
loopne
inc
inc
and
out
js
cmp
mulb
and
repnz
out
or
jns
dec
push
ss
dec
push
push
mov
loopne
pop
aam
movsb
mov
pop
dec
outsb
data16
out
sbb
inc
sub
fs
mov
into
dec
out
sbb
rclb
pop
mov
mov
stos
das
cmp
sarb
lock
popf
xlat
xor
cmpsb
push
sub
push
pop
mov
imul
decl
xchg
insb
insl
sub
cmp
in
in
jnp
pusha
test
int
ret
xchg
repz
push
or
xchg
xchg
popf
outsl
aaa
shll
arpl
or
gs
rcll
adc
xor
push
pop
sub
add
pop
push
push
sti
adc
sbb
xchg
mov
sbb
adc
andl
test
sysenter
xor
loope
jmp
push
stos
jb
adc
aam
popa
xchg
rcrl
xchg
push
cmp
js
pop
dec
icebp
add
cs
mov
or
pop
and
xlat
inc
and
sub
sbb
inc
fstps
or
test
cli
pushf
mov
loopne
inc
decl
filds
test
dec
mov
ret
jge
mov
dec
enter
mov
xchg
mov
outsb
mov
inc
in
jnp
ja
jecxz
pop
aas
adc
fmul
ret
sbb
fs
lret
shll
shlb
cmp
push
pop
add
dec
push
push
arpl
lods
or
push
fidivrl
flds
cld
dec
into
repnz
pop
icebp
test
out
rcl
pop
push
ret
iret
mov
fimuls
jge
mov
fsubr
mov
decb
mov
push
pop
cmp
pop
pop
or
mov
push
lods
jbe
daa
mov
dec
xchg
fsubrl
orl
rcrb
insl
js
dec
jecxz
dec
fwait
mov
test
cmp
testl
les
xor
cmp
xor
ret
xor
xor
lods
jge
popa
mov
jo
test
mov
mov
cli
lea
pop
xchg
jo
aam
jb
fisubrs
div
lds
push
mov
xor
mov
jecxz
cmp
movsb
lahf
lock
pop
test
rcrl
stos
xchg
inc
filds
and
test
push
adc
mov
cld
xchg
stc
push
push
data16
fcompl
mov
in
mov
lods
cltd
stos
loope
adc
into
les
ret
loopne
cmp
or
cmp
lea
jp
sub
jmp
loop
ret
test
cmp
arpl
adc
int
fsubs
inc
test
add
pop
repz
add
stc
lods
data16
and
ja
xorl
xchg
jns
test
sti
mov
and
test
pop
mov
stc
insl
sahf
mov
jmp
or
ficoml
push
xor
loopne
jno
fcomps
rcrl
cmp
mov
icebp
dec
push
or
lahf
add
xchg
jge
clc
cmpsl
mov
fsubrp
sbb
jge
mov
push
fistpll
and
inc
mov
push
mov
loopne
pop
cmp
jb
cwtl
and
shll
imul
int3
sti
push
movsl
lods
mov
iret
cmpsl
in
ja
pop
insb
or
das
leave
jb
push
dec
mov
loop
jnp
out
push
jae
push
dec
push
xchg
clc
xchg
mov
cmpsb
frstor
dec
sub
fisttpl
mov
decb
or
push
mov
cmc
iret
addr16
mov
jp
loope
psubw
insl
ljmp
mov
mull
mov
pop
inc
dec
adc
xchg
cmpsl
sbb
jmp
enter
stc
cwtl
mov
ljmp
mov
xor
popa
adc
aad
lahf
shrd
jecxz
pop
mov
roll
xlat
inc
shrl
cmp
xchg
push
or
in
pop
or
sbb
cs
ss
leave
and
sbb
das
lds
and
lret
rcrl
cltd
stc
sub
mov
ljmp
out
das
loope
out
std
xor
pushf
inc
inc
pop
xor
jl
xchg
mov
mov
loope
fildl
cltd
imul
xchg
mov
sbb
inc
inc
pop
scas
adc
in
stos
sarl
sbb
mov
push
int3
mov
jb
js
jge
cmpsl
cmp
xor
and
and
mov
xor
cs
or
sub
ljmp
cmc
pop
add
sahf
std
inc
mov
pop
dec
inc
cwtl
out
jge
arpl
or
or
outsb
sbb
dec
cmp
jg
jne
into
push
movsl
jl
in
dec
mov
sbb
dec
and
mov
pop
dec
xchg
sbb
inc
mov
cmpsb
enter
movsl
out
repnz
mov
test
pop
xchg
jb
adc
adc
inc
je
add
ljmp
lahf
cmp
mov
loopne
mov
inc
xchg
mov
inc
divb
lea
xchg
jns
jle
mov
cmp
out
nop
test
adc
fdivr
addb
outsl
int
les
ljmp
ja
lret
or
mov
lea
and
xorl
cli
cwtl
add
sbb
stc
add
or
xchg
pop
out
lds
mov
outsb
add
mov
ret
jns
adc
stos
xor
dec
fidivrs
pop
jae
bound
in
lret
arpl
negb
mov
push
fwait
movl
mov
xorl
cmp
mov
adc
ftst
push
jmp
mov
push
jns
imul
lods
test
adc
push
mov
xor
ja
jae
cwtl
cmpsl
mov
idiv
iret
mov
push
ds
cmpsl
pop
popf
pusha
push
cmc
or
dec
repz
mov
repz
cwtl
vmovhps
and
xorb
mov
mov
mov
xchg
sti
cmc
mov
pop
jnp
mov
jo
sbb
pop
sbb
jns
dec
cmp
dec
and
xchg
or
test
mov
inc
xchg
mov
xchg
std
adc
lahf
fcoms
push
jp
insb
mov
adc
iret
add
outsl
or
xor
jl
pop
call
movsl
je
pop
lods
mov
adc
and
stc
dec
xchg
dec
mov
cmpsl
hlt
sbb
and
adc
push
dec
or
in
jae
xlat
mov
inc
add
out
cwtl
mov
mov
ja
xchg
xchg
or
adc
scas
push
loop
sar
jae,pt
lcall
ja
ss
add
pop
push
mov
add
in
adc
xchg
test
xor
mov
in
in
mov
mov
mov
je
fwait
push
or
jo
jae
das
pop
push
enter
inc
dec
aas
mov
mov
ljmp
rorb
out
std
add
sbb
dec
jge
loop
shl
push
fidivl
mov
mov
mov
jae
fsubrs
orl
ss
push
je
mov
test
xchg
lea
lock
adc
xchg
jnp
pop
fists
add
in
jno
jbe
jbe
mov
add
js
mov
jle
sbb
mov
repnz
lret
stos
cli
aam
dec
sarl
mov
iret
je
push
cmc
pop
stos
loopne
mov
daa
jmp
mov
cmpl
fdivs
or
stc
insl
imul
repnz
sahf
jmp
cmpsb
cmp
and
jg
jmp
jp
ret
rorb
lea
insb
lock
mov
pop
push
dec
xchg
mov
hlt
xchg
popa
sub
inc
lret
fwait
sbb
aam
mov
fistps
dec
mov
add
or
test
mov
dec
lahf
or
xchg
fidivl
in
jae
mov
outsb
sub
dec
andb
es
movsb
cmc
pop
in
or
idivl
mov
int3
xchg
cs
mov
lods
adc
mov
lcall
adc
fxch
cli
sahf
push
bswap
push
xchg
pop
lock
jno
and
inc
jg
jns
cmpsb
pop
outsb
sub
cwtl
shr
imul
pop
mov
sbb
shr
mov
aam
xchg
cltd
cmp
pop
and
xor
mov
lret
jbe
mov
fiadds
mov
push
dec
push
add
dec
mov
pushf
repnz
push
pop
jle
in
std
sarb
jge
inc
int3
out
fists
stc
notb
fsubl
mov
loop
mov
jl
clc
inc
aas
sub
xchg
xor
in
xchg
adc
add
pushf
mov
sub
std
not
push
pop
jge
sub
adc
jecxz
pop
add
push
jbe
rcrl
xor
push
mov
nop
add
mov
mov
sbb
adc
sub
xchg
jb
jno
aam
mov
repz
es
outsl
sub
loopne
mov
jnp
lahf
cmpsb
mov
add
sbb
in
push
mov
dec
mov
xchg
mov
jl
and
ds
stos
jge
dec
imulb
sbb
pusha
cli
sbb
pop
mov
xor
add
fbstp
jecxz
push
jb
rcr
adc
mov
lret
inc
iret
pop
das
jbe
mov
mov
stos
cmp
mov
pop
xchg
sbb
fs
call
insb
push
inc
call
mov
mov
xor
shlb
mov
icebp
mov
sbb
addr16
xchg
loopne
pop
xchg
fnstsw
xchg
imul
neg
add
js
in
sbb
mov
cmp
les
je
int
and
push
jmp
sbb
xchg
or
dec
xor
add
push
outsl
push
in
adc
daa
mov
sub
outsl
fisttps
sahf
and
in
outsb
sbb
mov
push
stos
popa
mov
movsb
pop
pop
les
sub
ja
daa
mov
lds
outsb
pop
add
mov
inc
hlt
imul
es
dec
mov
rcrl
mov
dec
subl
js
mov
jns
daa
jns
xor
mov
shlb
xchg
mov
pop
clc
mov
in
shl
cmpl
std
rorl
xor
xor
gs
sbb
sub
hlt
in
rclb
push
and
fistl
scas
cwtl
push
iret
pop
push
mov
addr16
cltd
fnsave
add
fxch
imul
test
or
pop
cltd
and
pop
sub
ja
push
out
adc
add
addl
stc
mov
xchg
mov
out
sub
push
adc
movsb
adc
mov
out
insl
sbb
mov
adc
pop
dec
fisubs
adc
cmpsl
lcall
sahf
std
icebp
xor
aam
in
stc
clc
jp
clc
pop
arpl
mov
into
xchg
jecxz
adcl
nop
push
inc
ds
push
outsb
js
mov
mov
xchg
cmpsb
or
scas
and
push
imul
pop
stc
arpl
push
jbe
xchg
rorl
lods
test
xor
push
enter
scas
add
xor
in
or
cmp
ss
sub
mov
mov
adc
add
in
mov
out
jns
in
in
stos
cld
setl
enter
dec
pop
pop
xor
sbb
jmp
outsb
lss
js
setle
add
cmp
mov
dec
repz
adc
pop
in
ret
cmp
mov
mov
push
mov
or
jae
xchg
add
test
mov
stos
cld
hlt
rcrb
or
push
lds
xor
xor
in
jl
dec
mov
iret
adc
pop
in
mov
inc
cmpsl
jg
mov
push
sahf
dec
pop
and
xlat
movsl
cmp
ds
outsl
adc
sub
loopne
insb
sub
scas
inc
aad
or
test
pop
js
mov
xchg
fadds
pop
add
inc
mov
mov
ss
leave
lahf
ss
in
ficompl
je
imul
fisttps
cmp
xlat
xor
sbb
lret
data16
cmp
jl
mov
popf
mov
jp
fisubl
jge
insl
pop
stos
neg
sti
mov
cmp
lds
aam
inc
icebp
test
lret
and
fsubr
aaa
jg
mov
pop
mov
xchg
enter
lea
arpl
int
mov
inc
push
popf
cli
test
mov
inc
cmp
cmc
cmp
mov
test
clc
adc
pop
mov
bound
fs
aaa
and
mov
dec
add
mov
jne
imul
adc
or
shrl
daa
mov
mov
clc
mov
xor
jb
lcall
test
das
fidivrl
push
or
sti
jmp
jno
loopne
xchg
out
inc
mov
pushf
dec
ret
dec
jmp
pop
cld
lea
xor
lret
mov
xlat
cltd
or
cmp
mov
mov
or
loopne
cmp
test
daa
sub
dec
cmp
in
shrb
stc
xchg
mov
ret
mov
loop
pop
popa
jbe
add
pop
jg
adc
sbb
imul
icebp
scas
pop
in
cmp
xchg
xchg
dec
fists
adc
aad
aaa
daa
into
cmc
ret
out
sub
and
pop
cmp
stos
test
mov
sbb
lods
cmp
inc
dec
mov
push
test
jle
dec
dec
xor
popf
data16
sbb
jo
and
rcrb
xchg
xlat
sub
test
cmp
and
sbb
lcall
mov
mov
xchg
push
jbe
inc
mov
pop
es
lds
test
and
cmc
mov
dec
movsb
aaa
or
bndstx
add
sub
xor
jecxz
out
mov
and
lret
cmc
push
add
mov
shl
mov
add
movsl
push
inc
aam
out
add
lock
imul
adc
pop
insl
xor
pop
arpl
push
jo
sbb
aaa
mov
bound
adc
xlat
lock
mov
jbe
lcall
xabort
cmp
test
xchg
jns
bound
dec
pop
pop
mov
scas
inc
mov
cltd
mov
cld
les
jl
jbe
shlb
cmpl
mov
and
or
jae
scas
mov
fdivp
mov
jo
cmp
and
test
cld
push
mov
xchg
mov
mov
nop
fdivrl
push
or
flds
sub
sbb
imul
inc
in
lcall
mov
lahf
add
fnsave
insb
mov
das
mov
lods
mov
pop
jp
fst
push
cmp
imul
rorb
call
jmp
lods
push
out
pop
fimull
ss
lcall
dec
or
adc
push
fidivs
sub
and
cmpsb
adc
repz
rol
aam
lcall
dec
iret
les
jae
dec
xchg
mov
mov
aas
xchg
lods
jecxz
mov
push
ds
cmp
fsts
xlat
xor
leave
clc
gs
dec
je
sub
mov
or
push
jbe
jle
cmp
lock
sub
outsl
or
rol
insl
mov
fnsave
mov
mov
sub
adc
mov
jae
mov
cmpsb
lcall
js
lea
mov
xchg
ss
or
inc
sbb
dec
scas
call
pop
mov
mov
xchg
and
dec
cmc
ja
repnz
pop
jmp
pop
in
in
sub
inc
push
xchg
xor
mov
xor
xchg
sub
dec
xor
sbbb
adc
mov
popl
cld
add
adc
insl
pop
seta
add
in
pusha
je
mov
cltd
push
pop
cmp
loop
sbbb
mov
ds
inc
jae
test
mov
dec
aaa
and
pop
xchg
lods
lcall
rdtsc
sub
xchg
cmp
test
mov
inc
js
test
jb
divl
ljmp
cmp
ljmp
std
std
fdivrp
lock
rolb
rcrb
mov
or
mov
push
imul
add
pop
inc
call
xor
push
lea
pop
cmp
dec
push
fnsave
push
fcoml
push
jmp
addr16
loop
mov
arpl
push
mov
mov
sub
mov
out
xchg
cmp
repz
icebp
pop
adcl
push
jle
push
add
icebp
sub
cld
lret
and
testl
cmp
pop
dec
out
jle
ror
int3
sub
jnp
inc
xchg
add
sbb
adc
subb
inc
lcall
push
pusha
repnz
flds
or
ljmp
inc
mov
and
sahf
mov
adc
push
clc
fisubl
dec
mov
pop
fwait
dec
mov
push
push
into
sub
icebp
ss
mov
test
test
and
out
inc
mov
repz
out
push
aas
lock
or
enter
stos
jp
lret
out
hlt
mull
adcl
sti
in
ret
xchg
dec
cmp
loopne
out
inc
adc
out
ret
sub
mov
in
push
add
mov
in
mov
ja
daa
xor
push
out
jnp
sti
and
fcoms
push
jecxz
push
xor
mov
imul
fiaddl
loope
shll
and
jmp
inc
call
and
jge
fnstenv
mov
fwait
adc
imul
xchg
pop
hlt
sti
lea
aam
lcall
or
jl
fcmovne
pmulhw
xchg
sahf
pop
int
add
or
lods
add
nop
inc
les
cmp
sti
mov
loopnew
xchg
test
jne
jecxz
and
cmp
ja
in
cmp
mov
flds
lds
inc
jecxz
adc
aas
xchg
mov
std
mov
ss
cmp
mov
sbb
jp
hlt
mov
sub
aaa
mov
std
jp
clc
dec
xchg
ror
lock
repz
jge
dec
icebp
cmp
mov
lret
aad
inc
out
cwtl
jle
test
sbb
xchg
jb
aam
push
mov
push
cltd
cmp
or
jecxz
xchg
push
sub
jecxz
mov
and
mov
lock
push
stc
fcoml
sti
jl
xchg
push
popf
aas
dec
test
xor
pop
sbb
imul
push
pop
inc
scas
test
mov
scas
add
push
hlt
sub
jmp
shlb
jle
and
cwtl
fidivrl
mov
pop
inc
stc
mov
outsl
xlat
cmp
int
pop
jnp
jbe
pop
clc
pop
xchg
pop
sub
decl
movsl
insb
lea
push
and
and
int3
inc
cmp
pop
inc
testl
in
ret
jp
dec
stos
loope
push
jg
imul
ret
jl
cmp
xchg
adc
pop
loopne
push
cmp
jmp
sub
sbb
pop
stc
mov
xchg
xlat
mov
mov
xchg
sbb
cmp
or
xor
pusha
mov
cmc
xchg
dec
pushf
cld
sbb
mov
ds
or
jbe
les
lock
cmp
xlat
push
pop
imul
test
or
mov
ljmp
aam
inc
mov
add
stos
aad
push
int3
out
cli
clc
xchg
xor
mov
into
mov
mov
xchg
adc
dec
jae
js
sub
jmp
push
nop
into
pop
ja
push
jp
repz
xor
call
sub
pop
movsl
pop
xor
mov
pop
dec
sub
jmp
outsl
add
mov
sbb
jle
and
and
mov
mov
sbb
or
out
cltd
and
sbb
enter
xor
mov
lret
dec
adc
sub
mov
mov
popa
jmp
mov
push
xchg
pop
das
inc
add
je
stos
fdivr
outsl
out
push
xor
cmc
dec
cmpl
dec
mov
push
adc
scas
test
scas
loope
fidivrs
dec
dec
mov
cli
push
xchg
inc
dec
or
lcall
fldcw
xchg
pusha
rcll
mov
mov
push
push
inc
inc
push
filds
lcall
loop
mov
jae
shll
jmp
and
and
mov
ss
insl
add
and
jbe
pop
xchg
jge
lods
mov
mov
outsl
lods
stos
ud2
adc
jbe
mov
out
sbb
outsl
pushf
sbb
pop
add
mov
cs
fstpl
mov
jmp
xor
imulb
out
push
mov
and
sbb
mov
adc
mov
add
xor
movsl
push
pop
xor
fisttpl
inc
dec
lahf
shll
xchg
mov
outsb
mov
xchg
adc
cmp
xor
sub
out
adc
xor
mov
test
into
and
jns
xor
lcall
in
and
mov
cld
sahf
dec
push
test
data16
ljmp
jle
ljmp
ljmp
cmp
sbb
adc
stos
in
xor
gs
rcrl
stc
aas
push
add
fwait
pusha
dec
addr16
push
jle
mov
std
mov
in
cmc
roll
daa
jb
dec
pop
mov
pop
scas
loopne
ret
loop
mov
fnstcw
cwtl
dec
mov
aad
sarb
mov
loopne
cltd
int
ret
out
mov
movsl
jns
decb
leave
lods
dec
fstpl
popf
add
test
cli
jne
sub
xchg
add
inc
sbb
lods
sbb
adc
das
jns
maxps
add
jecxz
rcrl
mov
push
lea
clc
call
sbb
movsl
inc
mov
dec
int3
cwtl
cwtl
daa
xchg
outsl
insl
pop
fs
in
std
inc
dec
sahf
ret
mov
jle
or
or
cs
mov
daa
sub
mov
fdivl
adc
xor
test
arpl
jl
pop
fstps
stos
lcall
push
xchg
push
add
dec
aam
jp
jg
inc
dec
sub
sub
xchg
notb
push
pop
or
or
or
adc
adc
outsb
and
fs
mov
push
cmp
clc
stc
loopne
jp
jge
mov
push
stc
mov
lods
int
loop
ds
in
push
loope
sbb
jmp
jge
cli
push
shll
insb
loope
xchg
jae
jns
push
mov
pusha
mov
lcall
push
enter
arpl
mov
add
xchg
mov
xlat
jg
in
jge
repz
push
xchg
jno
mov
int3
and
jbe
add
adc
xorb
push
fwait
call
sub
cmpsl
aaa
mov
out
lods
lds
jp
lcall
ljmp
bnd
fwait
cmp
rol
lea
ret
xchg
aaa
dec
aam
cmc
mov
mov
ret
push
scas
cmpsb
lret
fmuls
iret
mov
sbb
lret
and
ret
jb
xor
add
pushf
into
push
adc
test
sarb
xchg
fisttpll
mov
pop
clc
adc
mov
imul
pop
arpl
dec
lcall
test
pop
gs
sbb
sub
adc
sarb
dec
jae
sub
add
int3
fdivs
xchg
jle
ret
xor
sub
in
insb
andb
or
and
cmpsl
jl
stos
sub
xchg
scas
or
outsb
jle
or
out
pop
jne
daa
and
arpl
pop
xchg
mov
dec
mov
lcall
call
cli
clc
ds
sbb
push
jecxz
test
pop
outsl
xor
js
sbb
bound
dec
pop
xor
cmp
aas
imul
and
dec
add
adc
and
lea
bnd
dec
push
push
repz
ja
fcompl
sbb
test
outsl
pop
iret
mov
pop
add
add
or
sahf
push
xchg
inc
xchg
adc
push
dec
lahf
dec
cmp
mov
xchg
sub
mov
adc
xlat
xor
jp
or
ret
sahf
jbe
xchg
mov
stos
pushf
ret
xchg
or
and
stc
jnp
test
push
lds
jg
bound
lods
repnz
sub
xchg
fdivl
or
fucomip
mov
and
sahf
mov
add
dec
test
int
dec
mov
push
lock
das
les
pop
push
gs
pop
jge
cmp
or
aam
add
inc
movsb
fs
into
movsb
loopne
lea
add
int
cld
daa
test
clc
sub
adc
lods
in
or
dec
lret
mov
dec
lcall
fdiv
pop
add
test
add
filds
stc
mov
and
loopne
cmp
in
xchg
xchg
mov
adcb
pop
inc
jns
adc
popa
sub
test
lret
and
in
in
gs
push
jnp
inc
int3
testl
dec
xchg
cmpsl
jns
sub
outsl
test
dec
rolb
xorb
mov
ds
jae
xchg
ss
mov
pop
stc
sahf
test
dec
in
pop
enter
inc
sub
adc
or
jle
out
dec
outsb
fs
push
push
cmp
mov
imul
repnz
push
xor
cmp
out
sbb
lods
loop
xchg
mov
je
dec
in
mov
mov
sub
imul
xchg
mov
or
jne
fistpl
cmp
rolb
push
fisubrl
cmp
rcrb
imul
xchg
cmc
and
dec
ret
push
and
jb
pop
out
sbb
pop
ja
sub
dec
sub
dec
enter
mov
xor
mov
mov
aam
lahf
fimuls
mov
cli
jl
and
fcompl
cmp
pop
cmp
add
inc
in
neg
mov
outsb
cmp
adc
movsb
push
pop
adcb
mov
sub
dec
outsb
and
adc
jle
aam
call
jge
out
les
test
out
add
mov
ds
pop
mov
cmp
lods
lods
push
andl
cmpsl
jge
jne
xor
push
pusha
or
or
cmp
add
mov
mov
xor
stos
mov
mov
sti
js
ret
into
movsb
pop
lret
lock
and
std
cltd
mov
hlt
xchg
fwait
pop
xchg
ret
mov
jmp
mov
decl
inc
xchg
ljmp
xchg
ds
xlat
xlat
mov
cmc
popf
jp
orl
dec
loop
mov
xor
das
add
test
out
mov
xchg
mov
jg
call
pop
icebp
lahf
inc
shlb
insb
outsb
in
imul
in
adc
adc
xor
loope
pop
scas
enter
xchg
mov
jae
fsubl
pop
cmc
clc
cmpsl
xor
push
add
cmp
jl
push
or
cmp
add
cs
xor
dec
ljmp
jmp
mov
bound
cmp
add
andl
jge
decl
sub
pop
in
test
pop
xchg
pop
fldcw
jno
clc
ja
adc
mov
push
mov
aam
mov
pop
aas
ja
and
jecxz
std
icebp
arpl
pop
mov
out
mov
ret
xlat
push
sub
loop
jo
test
xchg
sub
outsl
mov
es
mov
xchg
scas
mov
cmp
pop
fdivrp
add
int
or
ljmp
fcomi
sub
ss
lret
repz
inc
cli
jb
data16
pop
mov
out
ljmp
stos
cwtl
mov
cmc
ljmp
shll
ja
inc
dec
inc
into
dec
inc
mov
pop
hlt
pop
into
jo
das
or
mov
es
and
leave
or
adc
or
mov
movsl
ss
hlt
je
mov
rcll
or
push
xor
je
out
dec
mov
ss
xchg
sub
sub
sub
inc
lds
adc
jne
out
jl
popa
push
out
incb
movb
or
mov
jle
ljmp
cmp
add
adc
out
jl
mov
inc
hlt
and
jge
push
imulb
into
xor
xchg
lea
stos
cmp
cmp
pop
lahf
nop
cmc
sub
cmp
aam
scas
mov
cli
inc
pushl
dec
mov
cwtl
lods
lods
aad
ficoml
scas
sub
adc
mov
inc
adc
sub
mov
dec
divb
clc
movsl
je
in
aam
pop
push
fidivrl
ds
mov
sub
shll
pop
pusha
sub
fildl
cmpsl
mov
decb
or
inc
fildll
add
adc
adc
jle
or
pop
jecxz
dec
int3
clc
out
sub
xchg
sarb
loopne
stos
sub
pop
pop
js
subl
mov
incb
fcompl
sbb
sbb
push
out
sbb
dec
cli
fisubs
sbb
fisttpll
int
push
in
repz
mov
repz
jo
mov
xor
sub
cmp
cmp
mov
repz
or
and
push
imul
push
cmc
fsubr
xor
pop
push
mov
jb
ffree
and
insl
jle
rcrl
dec
sbb
and
xor
add
sbb
sbb
ficoms
orb
mov
xorps
mov
in
or
jge
mov
push
outsl
stos
xor
dec
jmp
lret
jmp
add
xor
clc
mov
xchg
sti
adc
pop
mov
aas
lds
ljmp
popa
cmpsb
lcall
dec
jl
mov
sbb
shrl
mov
jecxz
jae
mov
jp
fnstenv
sti
daa
jo
and
dec
xchg
imul
mov
sbb
jecxz
push
mov
cld
add
cwtl
sub
sar
xor
nop
cld
adc
in
sbb
addl
xor
popl
in
add
xchg
sbb
cmp
sti
and
mov
iret
mov
sub
lahf
cmp
aas
pop
cmp
or
rorb
inc
dec
ljmp
jp
dec
inc
dec
pop
mov
nop
stos
adc
ficompl
nop
lds
cwtl
mov
mov
lcall
sti
in
fisubrs
rorb
cmpsl
push
dec
cmp
xchg
mov
mov
pop
ja
jns
mov
sub
push
icebp
mov
mov
sbb
inc
mov
xchg
repz
scas
mov
icebp
sbb
and
sub
push
sbb
notl
xorb
ds
add
mov
aad
mov
push
cmp
xor
push
cmp
movsb
jnp
pop
clc
andl
xchg
and
mov
fcomp
sub
cmp
inc
enter
cmp
or
xchg
fwait
jge
sahf
loopne
idiv
xor
xor
roll
icebp
xchg
pop
or
sbb
cmp
sbb
inc
inc
or
aas
pop
test
outsb
xlat
stos
mov
adc
out
test
pop
pop
mov
mov
lret
imul
test
pushf
sarb
cmp
jg
movsb
mov
inc
popf
jmp
pop
push
sub
push
jge
sbb
rclb
add
mov
xchg
fcomi
gs
or
mov
jge
bound
bnd
repz
shrb
addr16
cmc
jp
rcrl
push
testb
imul
jle
jns
daa
add
mov
scas
subl
xchg
stos
fisttpl
pop
sti
and
icebp
cs
fiadds
pusha
fbld
or
test
or
insb
pop
mov
jg
arpl
lahf
push
jmp
sti
fdivrs
jns
sub
test
sub
lret
inc
cmpsb
ret
das
push
jno
shll
or
push
sbb
jmp
jg
je
push
test
aad
fsub
test
dec
inc
fsts
or
scas
and
cmp
aaa
and
in
stc
mov
or
or
sbbl
push
in
add
xor
pop
arpl
fbld
xchg
insb
xchg
scas
ficompl
roll
icebp
repnz
mov
jle
mov
test
pop
into
jne
adcl
adc
dec
fmuls
and
hlt
pop
dec
xchg
mov
cltd
addr16
pop
adc
lods
sub
sbb
lods
push
adc
lds
cmp
popa
js
fsin
aad
mov
int3
mov
mov
or
and
les
inc
and
cli
jnp
xchg
jge
nop
xor
push
repnz
stos
inc
jl
fcoml
int3
push
or
push
xlat
push
jg
stos
and
mov
aam
jle
gs
jo
ret
push
add
pop
ret
fwait
xchg
and
push
mov
sti
in
dec
in
js
xchg
stc
mull
pop
sub
cwtl
je
dec
jle
pop
and
sar
in
les
stos
test
loope
pusha
push
sub
out
mov
mov
xchg
sbb
and
sbb
jae
das
lahf
mov
sub
mov
shrb
xchg
push
daa
jo
mov
xchg
fisubrl
sbb
ja
cli
push
or
pop
push
jp
pop
int3
xchg
or
add
lahf
or
les
mov
aaa
sbb
addr16
outsl
and
xchg
lret
ret
pop
mov
pop
add
insb
sbb
inc
xchg
push
repnz
and
iret
cmp
popf
int
add
xor
rclb
mull
int3
cmp
sub
in
inc
cltd
dec
lea
jl
add
ret
xor
add
call
pop
xlat
lret
mov
inc
sbb
dec
pop
aaa
jnp
xchg
dec
jbe
xchg
out
jbe
sub
gs
fnstcw
jmp
loopne
xchg
cmp
stos
lcall
lods
push
push
hlt
push
pop
dec
dec
insb
test
popl
xchg
push
scas
out
push
lret
xchg
sub
xchg
into
push
scas
add
fldenv
mov
outsl
lods
dec
out
cmp
clc
sub
jl
fcomps
ljmp
xchg
adc
mov
popa
pop
scas
xchg
jg
and
mov
pop
add
bound
and
push
les
cmp
and
fnstcw
push
cmpsb
or
push
inc
pop
mov
mov
js
lret
mov
dec
pop
lret
out
mov
jl
pop
mov
mov
jbe
xchg
or
mov
mov
push
push
mov
ljmp
or
dec
xor
jmp
lock
mov
jno
js
cmpxchg
les
jns
idivl
scas
push
pop
jo
jp
jmp
ret
fnstcw
mov
cmp
adc
int
mov
push
iret
outsb
inc
and
int3
in
lods
cmpb
lods
andb
xor
add
je
movsb
mov
mov
jmp
xchg
xchg
pop
mov
les
adc
pop
dec
xor
ret
jl
jge
ret
fidivrl
adc
loope
mov
js
cmpsb
lret
aam
popf
jl
cltd
pop
jecxz,pt
movsl
sub
movsl
jns
stc
push
cmp
pop
fs
mov
faddl
test
sti
subps
pop
mov
mov
push
ror
orl
insl
pop
pop
ljmp
dec
push
inc
xor
std
mov
xchg
lods
jnp
stos
dec
ret
adc
int
or
lahf
aas
lods
mov
insl
mov
rcrb
adc
test
pusha
xor
mov
or
sub
ljmp
pushf
dec
cmp
in
or
int
rol
loope
je
or
mov
jno
adc
push
orb
test
xor
je
dec
pushf
jmp
add
lds
inc
in
adc
je
sbb
sbb
fildl
pusha
sub
pop
sub
in
mov
mov
push
push
inc
lods
dec
mov
sti
bound
out
sub
and
mov
xor
das
cltd
test
insl
pop
inc
bound
mov
aad
repnz
jecxz
xchg
fucomp
dec
sti
arpl
push
mov
orl
push
test
lretw
ja
ret
roll
dec
shrb
jge
test
js
sbb
push
lods
mov
fucomi
lods
cld
pop
in
les
push
test
sbb
pop
xor
push
ss
jno
pop
jnp
mov
notl
push
lret
push
and
insb
repz
add
fsubs
shrl
js
mov
jbe
comiss
repz
les
dec
aad
sbb
subl
pushf
sbb
ficomps
pop
aam
cmp
imul
mov
push
loope
je
sbb
in
inc
mov
jae
faddl
xchg
loope
mov
mov
divb
jbe
dec
ljmp
ffreep
fcos
sti
push
scas
fdecstp
push
jmp
jle
mov
jo
add
int
sub
mov
or
xor
js
insb
mov
mov
adc
inc
lahf
sub
cli
std
scas
add
add
mov
mov
mov
scas
pop
cwtl
push
rol
xchg
xchg
mov
dec
adc
xor
clc
push
bound
sub
sbb
data16
xor
hlt
inc
push
cmp
sbb
sbbl
jmp
xor
andl
sbb
push
push
in
imul
inc
mov
stc
jecxz
imul
jmp
sbb
shrb
pop
out
mov
fstps
inc
out
add
out
out
fisttpll
mov
icebp
adc
jl
fistpl
xchg
fs
outsb
mov
mov
das
faddl
ds
xor
arpl
jnp
lret
sbb
outsl
mov
or
cli
or
push
pop
cmpsb
sub
pusha
xchg
lods
sbb
out
out
cmp
xchg
push
loop
inc
movsb
jle
mov
scas
xor
add
pusha
lods
push
fistl
mov
xor
jp
out
push
fwait
push
out
adc
cmpsl
shll
mov
or
fistl
les
into
mov
mov
std
andb
xchg
ds
lods
adc
cmpsb
or
hlt
cmpsb
ss
out
jmp
mov
mov
rorl
cli
dec
and
fwait
pop
xchg
ret
xor
int3
xchg
lock
mov
repz
sbb
dec
and
mov
pop
and
scas
sbb
pop
aaa
and
dec
add
fwait
stos
cmp
or
inc
aaa
test
mov
repnz
fcompl
pop
icebp
pop
stos
lea
test
stos
rcrl
jmp
add
push
pop
call
aam
movsl
lret
push
leave
jle
ret
clc
lahf
pop
lret
rep
and
addr16
jecxz
xor
popl
xchg
fldt
in
in
inc
mov
adc
sbb
mov
cltd
pop
jb
femms
sbb
adc
inc
pop
lods
jb
loopne
stos
jns
push
mov
cmp
xor
pop
xchg
fsubr
push
push
test
stc
stos
rclb
sbb
inc
clc
fisubs
sahf
adc
add
stos
mov
arpl
push
jo
jo
ret
mov
jb
imul
les
dec
loopne
xlat
mov
sub
ja
push
dec
jno
out
testb
mov
aam
sub
imul
add
mov
fistl
je
ret
sub
movsl
cltd
imul
mov
shll
std
fldt
mov
push
fdiv
loop
mov
test
jbe
cmp
mov
mov
lahf
pop
fists
leave
cli
and
mov
test
or
inc
xor
addb
inc
fidivrs
adc
xor
mov
outsl
in
stc
scas
and
mov
mov
aad
test
mov
sbb
pop
sub
repnz
rclb
inc
and
aaa
ds
outsl
sahf
add
or
test
pop
mov
lods
imul
pop
pop
pop
sahf
leave
xor
cmp
adc
mov
es
jmp
lods
int
test
and
dec
in
stos
push
push
mov
jno
es
push
dec
inc
push
loope
fisubrs
popa
ljmp
xor
push
in
pop
or
dec
lret
inc
jge
xor
inc
pop
and
fst
andl
or
xchg
call
adc
out
sbb
pop
cmp
pop
call
or
mov
incl
int3
xlat
mov
xor
jge
daa
sub
sub
dec
daa
test
mov
push
scas
into
adc
inc
jg
sti
js
test
stc
xorl
push
xchg
ret
xor
je
inc
je
aam
cld
daa
pop
jne
cmpl
std
ficoms
adc
pushf
xchg
or
cmp
dec
jb
lret
sbb
hlt
imul
cwtl
in
push
adc
dec
dec
push
test
sbb
xchg
cld
dec
pop
mov
jp
mov
shll
dec
subl
movsl
add
mov
mov
or
test
sub
aaa
dec
repz
icebp
cmp
add
scas
mov
add
cwtl
movsb
xchg
inc
or
xor
pop
pop
push
xchg
cwtl
ds
or
aad
fidivrl
and
add
adcb
xchg
xchg
or
jb
imul
enter
jb
sti
out
mov
push
ss
jb
mov
jg
iret
stos
lds
aas
incl
sbb
jb
sbb
nop
inc
sahf
data16
xchg
push
cmp
sbb
push
cs
in
xor
popa
rorb
out
adc
jne
lock
shll
mov
mov
or
push
es
jp
push
mov
xor
dec
fnstcw
or
push
popa
enter
push
hlt
sahf
cmpsl
or
inc
in
jle
cmpsl
dec
mov
jae
arpl
add
dec
aam
into
lahf
pop
cwtl
inc
imul
adc
pop
mov
xor
inc
cli
lret
pop
rcrl
lcall
stos
pop
mov
and
mov
fldenv
divb
imul
shll
jb
adc
insl
loop
leave
lods
inc
mov
shlb
loopne
mov
xchg
adc
push
cmp
int
xchg
lahf
push
lret
imul
in
mov
mov
jnp
test
icebp
inc
test
sbb
jg
inc
daa
pop
nop
pop
xor
stos
push
cwtl
int3
scas
outsb
in
negb
pop
xchg
dec
cmpsl
int
add
and
shrb
loop
adc
adc
dec
jno
cld
ja
nop
mov
mov
ficompl
lods
pop
add
into
movsl
push
mov
cmc
fildl
rolb
je
pop
pushf
cmp
inc
sub
add
push
xor
xchg
ret
dec
fstpl
cmp
and
and
and
push
scas
outsl
mov
adc
mov
nop
mov
cmp
jne
sub
and
sbb
sub
sub
test
pusha
cmpsl
lock
xchg
into
stos
scas
push
push
sbb
outsb
pop
jp
lods
jle
xor
dec
mulb
es
daa
rolb
push
int
or
cmp
std
and
or
add
jbe
pusha
loopne
arpl
and
push
loope
cld
scas
dec
rcll
cmpsb
jb
push
ja
mov
iret
sbb
je
pop
rcrl
stc
loop
xchg
push
std
pop
jp
jle
stc
dec
cmp
mov
sbb
add
decb
fcomp
pop
pop
jmp
xchg
sub
adcb
lds
sbb
push
mov
shl
jnp
les
mov
ds
movl
ret
pop
fcmovb
jae
aas
movsl
xor
push
inc
lret
icebp
stc
jp
ficoms
test
clc
adc
repnz
dec
xor
int
and
pop
xlat
cmp
test
sbb
cmc
mov
icebp
popf
adc
dec
mov
mov
xor
xor
xor
mov
pop
sub
add
stos
push
adc
dec
ds
pop
sub
mov
rcl
imul
fsubrs
aas
lock
arpl
inc
xor
push
adc
mov
pusha
mov
push
dec
xchg
test
adc
andb
shrb
loopne
xor
cmp
aas
xchg
out
mov
push
xchg
xor
mov
jno
pushf
cwtl
aad
and
dec
jns
mov
dec
popf
sub
aam
lret
fiadds
shll
mov
mov
pusha
fsubr
ss
mov
inc
cmp
clc
jbe
mov
test
mov
cmp
add
fstl
mov
movsb
gs
andl
mov
movsb
ja
inc
out
lret
lock
loopne
das
mov
scas
movsb
ja
mov
xchg
outsb
imul
pop
or
jl
inc
add
sbb
sbb
test
pop
fnstenv
icebp
jp
inc
stos
push
xorl
jp
mov
clc
cltd
and
xor
popa
insl
pop
subb
and
sbbb
cmc
iret
out
std
jae
fistps
fwait
pop
test
pop
mov
ljmp
xor
inc
retw
add
repnz
mov
jmp
fbstp
mov
sbb
pop
into
xchg
enter
in
or
imul
outsl
mov
push
rorl
cmp
mov
fdivrl
sub
inc
or
mov
push
xchg
inc
dec
cmp
pop
mov
loopne
lds
leave
sbb
aaa
dec
les
sub
push
push
ljmp
imul
sbb
push
dec
test
cmp
nop
movsb
in
inc
movsl
jg
loop
fs
arpl
mov
aas
mov
or
shl
pop
and
mov
or
clc
arpl
add
enter
je
ja
inc
or
test
push
sub
xchg
ss
icebp
xor
sti
adc
jne
jo
loope
and
or
inc
ret
dec
inc
sub
je
jle
mov
sti
aaa
data16
adc
inc
dec
adc
xchg
pusha
jle
fs
arpl
xor
adc
xchg
mov
sub
movsl
sub
push
xor
or
je
rorl
mov
lcall
insb
jl
lds
or
lcall
cmp
sti
xorb
mov
rolb
and
insb
adc
addr16
int
adc
stos
mov
xor
adc
jmp
outsb
mov
sbb
lock
inc
jg
int3
jmp
in
rorb
jecxz
int
xchg
jno
cmp
xor
and
shlb
mov
das
fsubr
mov
pop
cmp
add
fdivrs
inc
mov
pop
jns
xor
push
lea
and
add
mov
insb
pop
cmp
sti
jg
out
mov
pop
mov
xor
fucom
mov
loop
scas
mov
notb
sbb
jle
inc
js
mov
and
ret
push
shll
xor
or
addr16
cli
lock
aad
sti
insb
insl
repnz
mov
imul
mov
lret
ljmp
rorb
mov
ret
push
imul
xor
lcall
leave
movsb
movsb
xor
rolb
lds
push
push
jg
and
mov
arpl
shrb
int
jae
sub
ret
xchg
mov
push
push
scas
dec
icebp
movsb
pop
pop
cli
test
inc
leave
stc
call
loop
pusha
inc
mov
shrb
sbb
xor
push
stos
add
mov
andl
jnp
adc
int
cwtl
imul
sbb
pushf
mov
popf
pop
and
ret
cs
or
and
outsl
sub
int3
jecxz
and
add
jno
in
xor
jecxz
pop
mov
mov
test
outsb
push
mov
xchg
push
aaa
ret
jp
ss
mov
add
sub
jnp
push
jp
aad
dec
jbe
stos
jle
in
mov
ret
mov
int3
nop
or
int3
in
push
dec
push
dec
js
mov
lret
xor
xor
jbe
outsl
ss
pop
inc
rolb
imul
fcomi
pop
icebp
cmpsb
jmp
mov
xor
push
bnd
adc
insb
ret
dec
xlat
adc
cli
add
cltd
hlt
imul
mov
sbb
dec
dec
push
fsubrp
loop
jg
lods
je
and
xchg
jne
fisttpl
mov
dec
and
fldt
mov
scas
dec
add
cmp
scas
cltd
xchg
stc
pop
test
mov
dec
aam
pop
movl
insb
jge
xor
mov
mov
pop
popa
xor
in
xchg
shrb
add
test
dec
outsb
dec
and
inc
movsb
out
cwtl
jo
call
daa
imul
xchg
pop
adc
aaa
dec
mov
mov
test
ljmp
push
lahf
or
mov
mov
jge
sbb
orl
xchg
fs
lods
lds
sbb
fcoml
inc
jmp
and
cmp
pop
mov
repz
or
or
mov
rolb
inc
movsb
add
test
adc
xchg
inc
xor
lea
mov
cmp
xor
sbbb
or
xor
mov
scas
mov
fcmove
adc
pop
cmp
push
aam
dec
mov
mov
fadds
iret
mov
jp
add
scas
repz
cmp
rcrb
mov
xor
mov
addr16
mov
aaa
push
mov
lcall
sbb
movsl
ds
and
jmp
mov
push
sbb
pop
pushf
loope
mov
jo
xchg
mov
pop
mov
sub
lods
lcall
mov
push
xor
hlt
pop
pop
mov
add
adc
jp
mov
insb
out
pop
inc
lahf
adc
inc
daa
mov
dec
lret
notb
cmp
sub
xchg
daa
or
sub
mov
lcall
insl
pop
daa
cmpsl
sub
imul
inc
fwait
test
push
insb
enter
xchg
das
mov
xor
repnz
stc
subb
jo
aad
xlat
jne
cltd
aas
fstps
add
repnz
xchg
out
push
lea
addb
icebp
xlat
sub
imul
inc
scas
in
xchg
or
int3
movsl
adc
sarb
outsl
and
pop
adc
mov
xchg
xor
aas
or
push
mov
adc
xor
shll
in
rorl
lods
mov
rcrl
adc
mov
xchg
addr16
fs
pop
mov
pusha
dec
mov
sbb
movsl
inc
xchg
sbb
popf
jmp
jle
or
imul
leave
mov
scas
lret
jbe
aas
clc
ds
leave
mov
cmp
in
mov
cld
mov
xchg
cmp
fsubrl
outsb
jnp
shll
pusha
inc
outsb
scas
xchg
cmp
and
dec
mov
out
mov
jmp
sbb
aas
cwtl
cmp
scas
lods
maxps
jl
imul
jnp
aad
pop
dec
mov
jne
xchg
cmp
pop
imul
pop
fsubrs
sub
dec
fists
mov
and
push
push
jge
sbb
mov
or
mov
div
sub
inc
fsubrs
push
jecxz
fcom
test
push
mov
mov
mov
and
cwtl
fmull
nop
mov
or
mov
and
ret
loop
adc
gs
sbb
and
inc
clc
rolb
jmp
mov
fs
push
in
lahf
arpl
inc
pop
inc
out
lds
adc
or
popa
fisubrs
inc
cltd
add
cli
lret
mov
cld
push
push
xor
jno
push
xchg
adc
jno
inc
cmp
loope
inc
mov
stos
mov
cmp
inc
push
ljmp
cltd
and
adc
xchg
xchg
jp
push
mov
aaa
hlt
add
aas
lcall
xchg
or
jg
add
or
xor
das
mov
sub
es
lahf
adc
sbb
jb
movsb
fdivs
cmp
cli
push
xor
call
ss
sub
or
ret
add
aas
test
xchg
out
test
dec
mov
mov
or
cmp
hlt
movsb
add
add
jne
jg
cltd
push
bound
cli
xchg
xchg
push
ror
imul
fnstcw
fucomip
popf
je
imul
int
push
dec
and
sub
fldl
xor
push
inc
fisubrl
push
bound
cmp
xchg
cmpsl
sbb
push
mov
lcall
add
xlat
aas
adc
shlb
ret
arpl
outsl
adc
pop
jp
pusha
mov
and
fistpll
dec
push
sahf
push
jns
mov
hlt
fisubl
in
outsl
sti
fistps
inc
inc
sarb
loop
negl
and
sarb
imul
out
int
in
outsb
scas
js
mov
add
mov
ss
and
aaa
lea
sub
adc
pop
hlt
loop
enter
xchg
add
adc
cmp
out
fs
sti
lock
lret
mov
and
add
sahf
push
cmpsl
dec
sti
arpl
adc
lahf
pop
jge
mov
cmp
orb
push
cmp
stc
mov
repz
and
sbb
scas
xor
adc
adc
xchg
addr16
jb
mov
or
std
stc
ss
mov
and
jne
loope
lods
sub
nop
and
stos
mov
ja
mov
mov
addl
mov
push
sbb
pop
push
pop
mov
dec
xchg
movsb
aam
mov
pop
int
in
popf
lret
or
and
out
mov
ss
stos
sbb
mov
call
or
mov
add
push
movaps
outsl
jno
stos
es
pop
xor
mov
add
hlt
ds
js
jbe
add
cld
add
out
sbb
jne
pusha
xchg
test
sub
sub
scas
loopne
xor
mov
or
test
inc
jg
sub
sub
mov
xchg
mov
jecxz
cmp
rorb
adc
xor
fsubrl
sbbb
mov
mov
ficoml
repz
jle
jle
loopne
xchg
and
je
jp
cmp
sbb
dec
pop
dec
dec
jp
inc
mov
roll
cmpsb
dec
cli
push
daa
sbb
pop
push
sub
pop
repz
test
outsl
push
enter
push
fisubs
add
add
pop
sbb
push
adc
aaa
or
iret
pushf
imul
jg
andl
addb
out
andb
pop
sub
ss
lret
jns
pop
cwtl
push
xchg
jbe
mov
loopne
loopne
inc
pcmpgtw
mov
repnz
cmp
cmpsl
pop
rcrl
imul
jge
xor
or
xchg
into
popa
or
test
popa
sub
jle
add
cld
ljmp
xchg
inc
out
adc
popa
int3
sahf
adc
dec
jmp
add
in
inc
jne
xor
sbb
test
cltd
xor
cmpb
add
inc
xor
xor
movsb
insb
fwait
vpcmov
test
loop
gs
xchg
scas
idivl
imull
fisttpl
icebp
int3
sbb
sbb
imul
fdivrs
sbb
pop
inc
dec
xor
adc
xor
or
lds
or
mov
push
lods
icebp
jl
mov
mov
cld
push
pop
mov
xor
test
xor
or
pop
loope
push
mov
jl
fwait
ja
add
and
lds
mov
les
int3
jo
idivl
push
jmp
nop
mov
pop
cmpsl
xor
daa
push
cmp
int
pushf
sub
repz
mov
sbb
test
inc
dec
sub
and
pop
fs
inc
mov
cmp
js
fstpt
fbstp
cmp
sar
in
jl
sbb
jecxz
insb
sbb
fbld
ret
xor
cmp
sub
xchg
sahf
sub
dec
rorb
in
mov
mov
jne
jb
or
mov
aas
adc
cmpsb
das
out
aam
sub
movsb
push
daa
lods
add
push
mov
push
xchg
addr16
movl
filds
mov
leave
ds
jnp
loop
push
inc
subl
lods
xchg
add
inc
or
pop
in
and
arpl
ljmp
mov
out
cltd
vmovupd
lret
mov
push
jbe
push
xchg
arpl
rorb
inc
pop
push
adcl
mov
push
push
leave
shl
xlat
stos
mov
hlt
cmpsb
sub
inc
arpl
shll
rorl
add
fcompl
jns
xchg
int
out
stos
inc
iret
orl
sub
imul
xchg
xchg
sbb
out
xchg
ss
push
loop
ret
and
mov
mov
data16
mov
aaa
shrb
call
xor
gs
or
pop
sub
sbb
add
shll
mov
leave
aas
mov
inc
scas
stos
and
pop
in
inc
mov
push
xchg
or
and
sub
sub
sub
outsb
or
scas
adc
test
push
call
ficoms
sbb
dec
xchg
mov
or
mov
dec
pusha
cmc
scas
dec
mov
xor
iret
mov
push
test
xlat
dec
sub
stos
in
fidivrs
mulb
fld
or
aad
adc
pop
lcall
lods
imul
loope
mov
bound
xorb
bound
cmp
mov
sub
push
cmp
and
pusha
inc
dec
push
fs
nop
fldt
inc
cmp
jmp
notb
jo
sub
jnp
mov
inc
xor
aaa
xchg
scas
pop
mov
loop
lret
aas
scas
insl
mov
dec
xchg
or
xchg
mov
lods
pop
cmc
ljmp
cld
lcall
and
decl
mov
sbb
dec
and
fwait
mov
mov
inc
inc
scas
inc
int
jecxz
xchg
pop
sbb
mov
or
and
test
push
pop
stos
add
adc
dec
cli
pop
adc
push
dec
xchg
xchg
jecxz
rorl
dec
push
ljmp
inc
pop
inc
push
or
in
xchg
xor
negl
in
jp
aad
mov
iret
xlat
push
inc
sbb
fimuls
xor
mov
gs
fs
fwait
movsl
mov
adc
outsl
mov
pop
jb
sub
push
repnz
gs
push
mov
cmpsl
push
inc
int
push
daa
xchg
xchg
gs
scas
movsb
mov
ret
push
adc
out
mov
and
ret
arpl
sahf
sub
fwait
inc
ss
and
lret
ret
sub
loopne
adc
aad
dec
jne
cld
inc
jno
lret
pop
ja
loope
push
insl
lcall
outsb
daa
lret
mov
adc
mov
cli
xor
out
cmpsl
inc
arpl
leave
sahf
inc
in
cmp
popa
daa
xchg
popl
rolb
mov
and
sub
cmp
popa
fcomps
shlb
and
dec
mov
fwait
je
cmpsb
mov
mov
add
pop
pcmpeqd
ret
mov
ljmp
cmpsb
sbb
nop
and
mov
divb
jmp
outsb
shlb
sahf
push
idivl
dec
testb
xor
iret
rorl
push
shll
ror
ret
mov
into
bound
xor
cltd
pop
inc
icebp
mov
mov
or
lds
pop
jge
ljmp
xor
dec
adc
mov
outsl
sub
sahf
lods
xchg
jle
xchg
shll
push
movhps
lret
mov
ds
repnz
push
dec
aad
ret
push
insl
add
outsl
pop
lock
mov
pop
ds
push
inc
sub
call
rcll
inc
mov
jl
movsl
lret
pusha
andb
rcrb
pusha
mov
insb
das
pop
cmpsl
das
cmpsb
ljmp
pop
sub
cs
jg
cmp
enter
adc
gs
mov
and
frstor
jbe
xor
mov
pop
mov
mov
mov
imul
stos
add
enter
fs
cmp
mov
in
mov
call
and
push
cmpsl
cmp
lods
sti
xor
stc
out
sub
lcall
pop
push
xor
jae
inc
xor
inc
movsl
cmp
mov
and
bound
imul
addl
or
push
lret
sub
mov
inc
pop
repnz
pop
jecxz
or
jl
add
inc
xchg
push
add
jnp
xchg
sub
xchg
out
mov
cmp
pop
jp
and
cmc
cli
sub
aam
inc
shrb
xchg
dec
in
sub
ss
mov
sub
inc
shlb
jp
pop
mov
pop
mov
xor
std
jae
test
push
xchg
aad
addr16
cwtl
adc
jg
xor
pop
cld
leave
movsb
xor
cli
sub
les
hlt
loopne
jno
faddl
loop
pop
ret
or
xchg
xchg
dec
mov
xor
insl
or
xchg
pop
popa
insb
mov
push
fsubl
inc
cmp
jns
xchg
stos
push
dec
lret
clc
pushl
mov
xchg
pop
jle
cmpsb
mov
out
and
and
sbb
insb
ret
or
jge
test
push
daa
and
fs
xor
mov
xchg
adc
xor
in
or
out
jl
pop
lods
jnp
pop
mov
jmp
mov
nop
mov
fcmovnb
test
push
sbb
in
ret
sahf
pop
lahf
hlt
daa
repz
popa
sub
fsubrs
mov
mov
ftst
test
sbb
aam
arpl
jecxz
cmc
xchg
cwtl
cmp
std
mov
pop
out
in
int
mov
jg
inc
std
lret
imulb
push
daa
mov
nop
cmp
test
aad
add
xor
popa
sbb
mov
or
pusha
mov
hlt
aad
cbtw
outsl
daa
in
push
cmpsb
repz
dec
imul
sbb
and
mov
rorl
pop
and
popl
sub
cmp
push
stos
pop
lahf
mov
shll
shll
xor
aam
mov
cmpsb
out
roll
loop
decl
sti
ljmp
enter
and
jb
loop
push
add
jmp
out
ds
dec
icebp
shl
in
jne
and
adc
and
out
inc
loopne
popf
mov
pop
sbb
sahf
ljmp
push
insl
out
dec
mov
sti
aad
sbb
pop
call
out
movsb
lret
stos
pop
sbb
sbb
mov
movsb
xor
clc
inc
stc
pop
int
and
nop
cltd
dec
stc
notb
xlat
xor
jle
lock
gs
lret
ljmp
dec
rcll
xchg
dec
ror
daa
dec
mov
mov
mov
and
xor
cmp
addl
jg
dec
jle
jmp
orl
and
sub
pop
xor
int3
sbb
test
mov
xor
sbb
aad
sahf
jo
mov
test
adc
sahf
es
inc
pop
mov
out
and
int3
aaa
sub
adc
mov
loopne
bound
or
sahf
inc
or
or
jns
in
adc
or
cmpsl
pop
fidivs
sbbl
arpl
xchg
scas
das
shlb
cmpsl
stos
jmp
out
inc
jmp
dec
pop
pop
dec
mov
insl
cmp
iretw
adcb
test
ret
mov
lret
dec
ss
push
leave
scas
into
scas
jl
dec
push
dec
pushl
popf
fsub
repz
ss
addr16
dec
ljmp
inc
shl
mov
or
dec
ljmp
sbb
int
add
dec
jo
cmpsb
shlb
lret
jnp
push
test
mov
xchg
sbbb
mov
and
pop
imul
rcrl
push
dec
nop
inc
lahf
f2xm1
outsb
cltd
xor
push
cmp
add
mov
pop
fimull
inc
lcall
cld
lret
imul
mov
push
nop
fcompl
jo
loopne
fsubrs
lock
stos
sub
push
add
jnp
xchg
rcr
orl
sbb
and
or
pop
cmpsl
fidivrs
and
mov
adc
xchg
inc
addr16
lcall
ret
push
in
sbb
lret
push
sub
inc
or
inc
xchg
outsl
cltd
adc
xchg
inc
cs
inc
mov
sbb
das
shll
movsl
lds
test
cmp
xchg
cmpsl
cmp
cli
test
sbb
inc
lcall
int3
lcall
insl
scas
xor
xchg
aaa
push
pop
add
ljmp
fistps
incb
divb
push
in
lods
add
orb
mov
fwait
cmp
lahf
push
mov
mov
push
bound
sub
push
icebp
sbb
cli
mov
adc
pop
cmp
jnp
addr16
rol
cs
fdivrl
nop
pop
dec
loope
mov
push
add
in
add
lock
dec
negb
cmc
xchg
mov
sub
frndint
cmpsl
cmp
inc
fs
dec
push
test
jmp
outsb
pop
mov
dec
xor
cmpsb
data16
dec
and
sub
outsb
pop
movsl
push
aas
adc
fsubrl
push
icebp
repnz
sti
fwait
add
pop
pop
ja
push
scas
fldcw
out
fidivrs
loope
mov
xchg
rorl
and
or
daa
rolb
push
in
iret
jne
sti
pop
jb
insb
je
outsl
push
dec
push
cwtl
popa
push
mov
adc
xchg
sub
mov
mov
push
cwtl
inc
hlt
sarb
xor
or
addb
orl
addr16
rcr
lods
arpl
mov
out
sti
mov
andl
and
dec
add
pop
int3
rorl
adc
test
imull
xchg
dec
adc
lret
and
xchg
stos
cmp
mov
clc
cwtl
sub
mov
loop
xorb
das
and
jae
dec
out
cmc
adc
dec
popf
push
push
mov
inc
xor
sbb
cmp
mov
cmp
subl
push
mov
hlt
push
fwait
dec
addr16
jne
mov
testl
repz
movsl
call
mov
test
clc
lret
adc
adc
dec
pop
xor
and
out
cmp
and
daa
insb
cmc
cmp
test
in
xchg
dec
cmp
jae
mov
jecxz
aad
mov
xor
out
pushf
pop
jae
mov
xchg
mov
data16
imul
insb
mov
dec
inc
push
scas
enter
out
scas
fsqrt
push
cmpsb
or
pop
xchg
or
insl
in
add
mov
fwait
std
cld
mov
rorl
movsl
out
xor
inc
mov
mov
mov
lret
arpl
or
xor
pusha
lds
jbe
mov
adc
sbb
or
mov
ret
xchg
push
imul
sti
insb
ret
pop
xchg
frstor
push
pop
add
movsb
adc
bound
or
push
mov
pop
jbe
mov
test
xchg
mov
ds
jge
push
rcrb
jnp
xchg
xchg
lock
ss
stos
ret
add
cld
clc
push
subb
stc
xor
or
mov
imul
cli
xor
dec
icebp
sbb
shl
xchg
inc
into
test
cmc
mov
ficoml
mov
mov
sub
lcall
add
pop
in
es
out
inc
add
or
xchg
mov
aam
fwait
out
ret
mov
lcall
in
inc
or
add
and
std
sbb
popf
cmpsb
sbb
cmp
mov
ds
fistps
and
in
mov
test
sub
xor
ret
push
jl
je
mov
clc
jbe
xor
cmp
push
out
es
cmp
fwait
leave
xchg
mov
in
imul
inc
sub
ss
imulb
adc
lock
jp
pop
out
inc
push
xchg
shll
mov
dec
push
iret
cli
lods
mov
mov
xchg
popl
movsb
mov
push
out
pop
aas
dec
adcb
xchg
cmpsl
int
je
je
dec
mov
cmp
pmullw
mov
and
mov
sbb
sbb
stos
jge
fbld
add
mov
jb
sti
je
sahf
aad
pop
ret
push
sar
xor
stc
xor
in
jo
cmp
bound
jecxz
mov
in
bnd
rorl
push
dec
sub
mov
sahf
mov
mov
les
jecxz
imulb
sbb
lret
xchg
jb
xor
test
fs
ds
ja
in
pushf
xchg
js
add
insl
cli
orb
cmpsl
jecxz
in
or
xchg
cltd
pop
lock
sbb
cld
lret
sbb
sub
out
sub
sub
pushf
pusha
push
dec
sbb
in
jmp
and
jne
and
testl
xchg
shl
call
fcoml
inc
mov
xchg
pop
mov
xchg
shll
or
shl
dec
in
aad
mov
mov
repz
push
insl
push
xchg
xor
cmp
fistps
pop
leave
or
mov
jmp
sub
jmp
mov
pusha
dec
in
loop
mov
cmp
and
ss
lods
mov
stos
pop
add
test
push
adc
out
jle
sarl
add
imul
cmp
in
insl
aaa
push
into
std
jbe
inc
pop
repz
jb
mov
pop
cwtl
enterw
fstpt
nop
xorb
inc
sub
mov
stos
enter
xlat
sahf
mov
sub
cli
imul
jnp
pop
rcl
mov
mov
js
mov
xchg
movsl
sbb
andl
idivl
xor
pop
push
push
insb
mov
mov
fsubs
icebp
jb
cmpb
add
enter
dec
ret
mov
xchg
xchg
xchg
cmp
mov
cli
insl
lds
stc
popf
sbb
nop
roll
inc
test
mov
jnp
lret
mov
cwtl
cmpl
xor
stos
mov
dec
arpl
jae
adc
test
lds
xchg
fwait
stos
ret
movsl
cmovo
dec
in
rcrl
lea
adc
cmp
scas
mov
mov
sbb
sbb
jmp
dec
sbb
mov
jg
jmp
sbb
cmp
rol
sarb
xchg
sbb
sbb
sub
test
pop
repz
in
loopne
mov
fmuls
hlt
jmp
xchg
cltd
movsl
sbb
cmc
or
fdivrs
loopne
or
les
push
cmp
and
sbbl
dec
inc
mov
arpl
cld
xchg
push
mov
pop
outsb
mov
fs
shlb
pop
enter
aaa
mov
stc
std
mov
push
add
xlat
icebp
sbb
add
iret
test
jecxz
repnz
ja
xchg
xlat
cmp
sub
jmp
inc
in
mov
subb
sti
aam
push
jbe
mov
xchg
test
scas
sti
into
mov
mov
mov
shr
out
scas
lods
mov
ja
xchg
aas
out
push
jmp
insl
fldl2t
push
cmp
mov
std
dec
adc
adc
fmull
jmp
fucomp
xchg
lret
in
pop
ljmp
push
not
sbb
cmp
xor
cli
rep
or
cmp
je
ficomps
out
scas
mov
outsb
orl
ret
verw
mov
out
or
adc
lds
in
push
and
sbb
out
pop
and
popa
repz
mov
sub
outsl
push
loopne
push
out
xchg
jb
call
push
cmpsl
lock
or
pushf
ljmp
test
push
shl
jl
push
dec
lret
mov
jne
cmp
inc
pop
arpl
adc
aas
in
lcall
rcrb
test
mov
push
ret
push
out
mov
jecxz
ficoms
and
cs
shll
fdivrl
fdiv
xlat
bnd
pop
fcmovnbe
add
push
xor
adc
sbb
sub
or
insb
push
jb
xor
dec
push
test
sub
dec
int
jno
adc
mov
ss
cmp
jl
int
sbb
je
adc
mov
and
dec
stos
xor
shll
push
shl
popf
mov
rcll
add
loope
stc
sbb
sub
push
ret
andb
ds
jle
dec
pop
lods
subl
mov
jg
cmp
inc
and
test
popa
sbb
add
mov
cmp
sub
in
sbb
fsubp
cs
dec
incl
dec
ret
mov
cmp
shll
xor
fwait
leave
add
in
xor
dec
data16
js
dec
adc
xor
iret
and
cli
xor
fadds
movzwl
adc
jb
add
inc
inc
in
pusha
out
outsb
mov
mov
aad
cmpsb
int3
or
mov
mov
fcoms
inc
sbb
fists
nop
test
pop
push
push
test
sub
mov
sub
mov
xchg
test
cmp
push
and
cmp
mov
pop
jg
imul
mov
ret
aam
cmp
mulb
rorb
xor
adc
add
shr
fwait
push
push
fisttpl
jns
sbb
int
aam
les
push
gs
inc
repnz
jmp
dec
jg
daa
bnd
sahf
scas
ss
xchg
fsts
scas
arpl
push
jns
lea
dec
push
out
push
xorl
popa
pop
dec
insl
shll
jl
dec
xlat
xchg
mov
inc
push
push
lahf
sbb
dec
adc
push
ret
push
fimull
roll
test
cltd
inc
xchg
push
add
mov
jmp
or
scas
pop
push
cmc
stos
int3
cli
push
out
fs
stos
js
sub
ffreep
jb
or
and
dec
adc
mov
pop
push
gs
sub
sub
adc
push
ja
dec
loopne
and
sbb
jb
cmpsb
inc
sbb
sub
fwait
fs
outsb
int
ja
iret
jae
lds
mov
ret
test
js
xchg
mov
xchg
cs
sub
sbb
inc
add
xchg
mov
add
pop
cmpsl
frstor
mov
xor
movsb
jle
loope
js
mov
pop
fistpl
imul
jle
hlt
dec
mov
dec
imul
int
imul
std
in
and
test
movsl
cmp
je
flds
dec
mov
xchg
nop
lret
mov
and
int3
nop
jl
xchg
sbb
and
inc
je
pop
push
or
push
lea
lock
neg
inc
into
int
shrl
and
mov
mov
fnstsw
push
push
jle
add
rcrb
daa
call
fdivr
out
cmp
in
js
or
rcrb
xlat
and
repz
dec
es
bound
loop
xor
mov
dec
xchg
in
fsubrl
shl
fistpl
sbb
adcb
xchg
outsl
lea
cltd
lods
aam
cmp
outsl
mov
sub
inc
jge
sbb
fldl
sti
jl
in
dec
loopne
jno
push
or
int3
mov
sbb
lods
inc
aaa
neg
scas
jno
push
xchg
cmp
mov
jge
xchg
imul
mov
sub
pop
cli
adc
lock
xchg
sbb
stc
pop
leave
inc
pop
push
faddl
popa
cmpsb
int
ja
addl
inc
pop
jne
inc
imul
cltd
bound
imul
lods
xor
andb
imul
xchg
cs
push
mov
sbb
push
pop
out
fstpl
pusha
rorb
mov
repnz
shll
add
xchg
add
jge
inc
subb
pop
loopne
jl
add
mov
lock
pop
xchg
scas
insb
and
and
or
loope
push
cld
cwtl
daa
sbb
jge
int
loope
test
and
out
mov
std
xchg
outsb
in
bound
sbb
das
popa
mov
rclb
lret
fwait
mov
push
jbe
add
adc
jle
mov
enter
imul
mov
sub
jecxz
and
sub
in
jb
xor
cmc
dec
adc
cltd
dec
inc
adc
shlb
adc
pop
je
cmp
sti
lcall
dec
es
cmp
das
mov
sarl
idiv
mov
cli
pop
mov
cmp
sbb
lret
sbb
out
mov
scas
mov
push
int3
lods
outsb
out
mov
fidivl
pusha
mov
adc
aaa
push
xchg
nop
pop
xlat
jp
repz
dec
adc
test
mov
shl
xlat
movsl
add
mov
xchg
sbb
sbb
or
dec
push
mov
jp
xchg
fucomi
or
lods
shll
sbb
insl
pop
stos
mov
fcmovnbe
pop
mov
movsb
pushf
in
sbb
lar
push
pushl
shrb
rol
push
aaa
push
inc
xor
fistl
pop
test
cld
adcl
dec
and
int
sbb
out
add
mov
push
movsl
sub
mov
mov
test
sbb
sbbl
stc
add
js
jno
mov
mov
repz
pop
enter
lods
cmpsb
mov
xchg
push
in
adc
das
xor
sub
sbb
jns
inc
movsb
xchg
mov
test
fldcw
leave
in
ljmp
sub
shl
pop
dec
sub
cmpsl
mov
gs
test
mov
lret
cmp
std
push
mov
push
iret
es
in
dec
rcrb
inc
insb
push
sbb
xor
sbb
sbb
xor
push
xchg
xchg
inc
out
dec
sbb
outsl
lods
scas
inc
inc
bound
aad
xor
in
adc
gs
stc
lock
mov
mov
in
mov
nop
mov
fistl
pop
xor
shlb
mov
adc
mov
stc
pop
and
in
xchg
cld
sbb
test
iret
jns
into
inc
pusha
sahf
adc
push
mov
sub
fs
inc
xorl
dec
xlat
sahf
clc
and
fnsave
stos
push
int
out
ret
sbb
adc
fwait
int3
scas
sti
ja
sbb
dec
sbb
sub
inc
sbb
out
or
flds
jge
ljmp
mov
fnstcw
test
out
mov
inc
aam
dec
sbb
bound
or
jns
leave
ja
sub
xor
mov
and
mov
test
bound
mov
mov
orb
xor
pop
dec
js
aaa
sub
dec
and
sbb
sarb
repnz
out
aas
push
testb
mov
push
mov
mov
push
push
jmp
arpl
outsb
mov
test
push
mov
jle
fidivl
test
mov
mov
jl
push
pop
pop
and
out
fimull
ror
test
enter
jl
xchg
sbbl
jb
xor
enter
mov
loop
pop
aas
adc
ss
push
jbe
mov
je
or
or
aas
xlat
std
dec
inc
sub
icebp
outsb
or
adc
insb
stos
xor
xchg
adcl
cmp
mov
ss
lret
das
lods
inc
adc
mov
pop
repz
pop
cmp
decb
inc
push
enter
fnstcw
addr16
jbe
dec
dec
dec
mov
jp
mov
sti
cmp
add
xchg
add
ja
xor
push
movb
imul
jns
cmpsl
stc
jbe
sahf
mov
imul
jbe
mov
pop
es
ss
mov
xlat
fnstenv
inc
out
xor
jg
pop
add
or
bound
mov
fwait
icebp
jmp
repz
loope
lea
stos
out
xchg
jns
jle
push
push
lds
lock
adc
addr16
add
shrl
cmp
xchg
xchg
mov
sub
gs
ret
stos
mov
test
sub
mov
add
adc
int
sub
xor
add
hlt
mov
ja
inc
das
mov
cld
int3
add
fnsave
fmuls
mov
rolb
adc
jo
add
dec
neg
push
cmp
or
cmpsb
clc
dec
mov
xchg
js
ljmp
iret
movsl
sub
mov
ss
divl
or
xor
ret
adc
sahf
cs
xor
inc
lret
adc
scas
mov
std
pop
jmp
cmp
in
jbe
jecxz
or
in
cmp
xorl
in
mov
mov
or
sub
es
sbb
lock
push
into
pusha
add
rcrb
sub
fimull
dec
add
into
push
mov
ja
cmp
push
xor
in
idivb
push
jne
in
add
popa
xchg
cmp
xor
adcl
data16
jg
xor
xchg
push
arpl
adc
lret
sub
pop
je
jns
sbb
ret
sbb
jecxz
outsl
lea
ja
sbb
and
jg
fcmovnu
cmpsb
xchg
push
mov
in
push
into
pushf
xchg
fiadds
fisubrl
fld
dec
or
cmc
push
sbb
dec
adc
test
jnp
xchg
mov
js
adc
xchg
sbb
mov
push
out
frstor
fsts
lea
jmp
fiaddl
mov
xchg
pop
push
test
jae
pop
or
insb
adc
fucomip
mov
test
daa
scas
xor
or
test
sbb
insb
xor
dec
pop
mov
mov
fdivrl
dec
std
dec
pop
fmull
adc
fldl
sbb
jns
mov
jbe
pop
adc
jae
inc
notb
aas
cmp
push
pop
scas
insl
xlat
addr16
pop
jns
mov
ret
xchg
es
cmc
xchg
adc
ret
pop
xchg
xor
and
add
arpl
fnstsw
sbb
js
push
sbb
inc
mov
jnp
cmpb
pop
mov
mov
fcmovnbe
xor
jbe
mov
pop
rcrb
xorl
dec
jo
sbb
mov
inc
lret
cltd
daa
push
jno
mov
cmp
dec
aaa
sub
mov
insl
dec
push
adc
leave
les
roll
aas
cmp
cmc
pop
leave
add
in
xchg
push
rorb
and
cmc
call
mov
jb
stc
mov
sub
dec
fbstp
pop
fsubp
clc
mov
and
pop
mov
mov
lahf
in
ret
ret
outsl
cwtl
movsb
sbb
add
imul
xor
xor
push
call
adc
stc
das
inc
pusha
fbld
adc
aad
inc
cwtl
sbb
xchg
mov
lods
notl
jne
ljmp
mov
and
stc
es
and
into
add
xor
fnstsw
test
sbb
jecxz
test
jae
cmp
into
scas
push
xlat
mov
push
lods
inc
jl
or
pushf
lret
outsb
inc
int
jbe
out
outsb
or
cmp
les
or
push
mov
sbb
shr
jge
and
jg
mov
pusha
mov
data16
xchg
push
jne
lcall
mov
or
xchg
shrb
dec
cmp
pop
sub
sbb
mov
and
jb
pop
lahf
aad
arpl
push
push
enter
xor
pop
fcom
fwait
xchg
cmp
enter
out
inc
inc
and
sbb
scas
inc
fcoml
add
cmpsb
aam
fildll
jmp
lea
out
or
inc
mov
jnp
das
sub
mov
xor
xchg
sub
outsl
and
into
dec
xor
mov
or
pusha
cwtl
push
push
decl
fbld
sub
and
shr
jb
mov
push
cmpl
inc
pop
mov
enter
sub
push
inc
cmp
push
cmc
ret
sbb
movsb
data16
inc
adc
leave
in
sub
pop
pusha
mov
pusha
sub
xchg
out
es
hlt
out
cltd
hlt
bound
fimuls
popf
fsubrl
in
dec
dec
pop
scas
gs
adc
xchg
push
shlb
or
int
mov
pop
shrl
lds
pop
jae
mov
sub
je
pop
cmpsl
outsb
scas
xor
int3
test
xchg
inc
pop
movsb
ret
sbb
idivl
mov
push
in
or
insb
add
lahf
jmp
sub
add
dec
xchg
push
aam
movsl
pop
loop
inc
shrb
sub
mov
mov
ds
mov
or
nop
add
mov
lret
or
and
pop
es
jno
enter
mov
mov
int
sbb
pop
lock
ss
stos
popf
xor
adc
repz
jae
out
repz
xchg
pusha
add
rorl
in
jns
test
add
push
jge
pop
rorl
lret
inc
add
inc
rorb
or
inc
jo
pusha
sbb
loop
add
push
cmpsl
test
repnz
lods
sbb
cmp
fldl
mov
outsl
lcall
std
cld
ret
das
jns
lcall
cmp
xlat
sbb
adc
mov
xchg
repz
out
insb
sub
mov
sub
sarl
imul
and
scas
xor
lods
adc
push
movsb
push
inc
shlb
mov
insl
repnz
fildl
pop
repnz
cmp
in
xchg
mov
loopne
pop
movsb
in
jg
adc
shlb
fisubrl
in
fsubs
jb,pn
mov
pusha
fisttpl
push
or
scas
sarb
cli
pop
add
aas
fs
jo
in
data16
and
hlt
mov
add
dec
pusha
jge
jle
sbb
cmp
loop
les
inc
test
fwait
gs
push
xchg
mov
mov
dec
aas
cmp
inc
arpl
xlat
inc
addr16
out
loopne
cmpsb
pop
xor
sbb
in
fwait
jne
jno
aaa
popf
scas
in
in
mov
inc
add
pop
push
movsl
in
outsb
inc
aas
dec
mov
jge
nop
fst
lods
mov
jmp
insb
rorb
pop
cmp
cmpsb
cmpsl
cmp
test
pop
jb
adc
shlb
dec
jg
je
mov
into
iret
scas
or
sub
mov
rcrl
decl
sbb
pop
and
faddl
adc
stos
fcompl
cs
cs
dec
lea
mov
out
add
test
jne
inc
lds
pop
xchg
or
xor
mov
clc
lods
xor
cwtl
fadds
mov
dec
out
dec
and
into
push
cmp
xor
and
mov
sub
scas
cmp
stos
sbb
shll
dec
inc
addr16
jo
or
push
cmp
sub
repz
push
dec
lret
in
push
out
roll
scas
lret
mov
shl
fildl
xor
mov
mov
pop
pushf
orl
mov
xchg
sub
cmc
loope
out
mov
pusha
inc
inc
loopne
push
jle
andb
ds
sbb
into
mov
int3
cli
scas
add
out
mov
call
pop
push
mov
mov
pop
xchg
cmpsl
cmpsb
test
sub
mov
jl
cmpl
pop
mov
adcb
inc
loopne
enter
inc
pusha
lcall
sbb
inc
mov
rorl
add
shrb
pop
gs
aad
cmc
adc
sahf
jl
xchg
adc
mov
and
push
xlat
aaa
push
in
loopne
mov
pusha
mov
mov
mov
push
nop
scas
mov
aaa
popf
jge
insl
mov
cli
int
dec
pop
mov
in
popf
mov
mov
gs
cli
addr16
jmp
les
add
cli
insl
arpl
jmp
mov
hlt
aam
adc
cmc
je
les
push
out
rol
nop
xchg
or
shlb
sar
pop
cli
and
insl
jmp
push
or
jl
ljmp
sbb
je
sahf
imul
dec
inc
and
pop
pop
rorl
out
cld
inc
add
outsl
pushf
mov
lods
jge
mov
sub
push
cmpsb
cmp
frstor
mov
rcrb
xor
es
ljmp
xchg
mov
mov
and
aam
mov
cmpsl
jo
sbb
sub
stc
sarl
test
test
sbb
outsb
dec
mov
pushf
dec
push
stos
inc
inc
fsubr
out
out
es
das
lods
cltd
fdiv
fidivl
enter
adc
addr16
push
dec
sbb
js
cmpsl
sbb
xor
cmpsl
jg
fsubs
popf
stos
adc
mov
mov
inc
aaa
lahf
cs
les
test
fldpi
and
imul
dec
jl
pop
and
popf
push
es
ja,pn
and
cmp
bound
cmp
adc
pop
jmp
jno
leave
adc
mov
call
mov
rclb
clc
mov
shlb
xchg
clc
jne
scas
dec
out
adc
cmp
xchg
test
mov
mov
cld
dec
mov
fisttpll
insl
mov
adc
or
data16
ret
push
test
and
mov
div
shll
aas
icebp
fiadds
imul
xor
pop
lcall
push
int
cs
cmpb
jge
aaa
adc
pop
addr16
mov
shl
sub
lods
pop
jo
mov
jmp
movsl
sub
dec
outsb
add
ret
mov
stos
fsubrs
cmpsl
popl
or
imul
jmp
aas
inc
pop
sub
xchg
inc
inc
out
sti
out
hlt
cld
xchg
pop
and
pop
lahf
fisttpl
ss
mov
pop
add
add
fcom
push
pop
or
mov
aad
out
shrb
pop
fidivrl
cmpsb
sub
xlat
jle
push
add
push
dec
jmp
movsl
not
pop
sub
sub
mov
addr16
cmp
xorb
xchg
aas
cmp
sbb
shlb
pop
add
or
int3
inc
sbb
int3
push
inc
mov
ret
jnp
and
jp
and
repnz
lcall
fcmovnu
dec
pop
xchg
jg
mov
scas
mov
test
lds
scas
xor
rclb
fcmovne
or
pop
inc
mov
pop
aas
fcomps
sete
dec
adc
les
jecxz
imul
push
push
out
repnz
adc
jl
and
mov
f2xm1
xor
orb
inc
addb
xchg
and
sbb
push
cmp
push
ffreep
es
das
and
push
insl
mov
fists
dec
mov
loop
adc
in
pop
push
icebp
ja
cmpsb
sbb
xchg
fmulp
cli
lret
and
add
std
stos
cwtl
xor
push
js
mov
int3
jns
outsl
pop
or
imul
shlb
push
orl
add
inc
and
xchg
adc
xchg
push
repnz
mov
mov
arpl
enter
and
jg
push
mov
or
jnp
pop
aaa
cwtl
andb
jnp
loopne
jmp
dec
inc
jle
js
sub
add
jne
lret
ds
sub
inc
movsl
jle
es
sbb
add
imul
dec
test
das
in
and
call
xchg
aam
add
pop
inc
sub
subl
into
sbb
out
xchg
arpl
pop
lds
push
mov
js
stos
jns
and
int3
gs
push
lods
aaa
adc
xchg
jbe
loopne
repz
decl
pop
and
mov
stos
sbb
lds
mov
andb
ret
in
stos
pop
adc
mov
es
mov
stc
daa
mov
pop
das
xchg
cmp
cmp
cmp
test
jnp
lods
aam
mov
xchg
stos
cltd
mov
inc
adc
inc
push
pop
ljmp
icebp
push
std
icebp
jo
jecxz
xchg
xchg
push
inc
pusha
jecxz
and
jle
icebp
leave
lock
jbe
addr16
movsl
inc
cmp
in
adc
popa
aaa
int3
push
fbstp
adc
out
pop
js
sbb
pop
jge
ljmp
fidivrs
mov
subb
nop
cmp
pop
lods
in
jno
andl
cmp
mov
jmp
jp
or
adc
jb
pop
dec
into
pop
push
adc
sbb
inc
das
xor
int
test
or
movsb
rcr
jb
cmp
dec
in
pop
push
dec
in
mov
call
lahf
pop
xchg
lock
cmp
mov
in
mov
dec
aad
add
adc
inc
mov
xor
icebp
lcall
loopne
inc
push
sarl
xchg
pop
jle
sti
xor
js
inc
jmp
popf
sti
xchg
iret
into
pop
addb
jecxz
dec
jl
fucomip
xchg
ds
jmp
mov
mov
fs
mov
jmp
stc
adc
int
add
cmp
cmp
dec
out
inc
ja
mov
inc
lret
and
sahf
mov
pop
fcomps
push
sbb
dec
enter
jns
mov
jns
sub
outsb
dec
in
and
or
push
pop
push
insl
fwait
xchg
pop
sbb
cmp
cltd
inc
jno
ja
fcompl
fcoml
ret
movsb
ds
imul
push
movsb
xor
mov
pusha
test
inc
bound
mov
xchg
sub
and
xchg
cmp
sbb
sbb
dec
dec
fidivl
fidivrs
mov
sub
int3
sbb
inc
inc
mov
fadds
cli
lock
iret
adc
add
mov
cmp
ret
mov
sbb
add
scas
mov
add
bnd
loop
sub
adc
cmp
jae
jb
xor
lret
push
fisttpll
test
jnp
push
inc
push
xchg
sub
add
shrl
sub
cmp
adc
sbb
icebp
sbb
pop
dec
mov
mov
lret
pop
and
loope
cmpsl
jb
pushf
sbb
xor
rcll
out
push
xor
inc
jle
out
mov
sub
int
mov
pop
sbb
push
or
push
xchg
outsl
jecxz
xchg
and
lods
mov
adc
sub
sub
popa
push
jge
mov
test
sub
mov
cmp
sub
popa
and
imul
mov
pushf
push
inc
es
pushf
add
jo
mov
pop
out
mov
into
pop
mov
dec
hlt
divb
mov
ret
xor
mov
hlt
adc
icebp
pop
fimull
add
xor
ret
xchg
and
mov
jne
cmpsb
sbb
stc
pop
xchg
rcrl
mov
inc
and
dec
imull
dec
gs
push
jo
je
arpl
sbb
xor
cmpsb
rorb
in
in
adc
add
jb
sub
jbe
sti
xchg
stc
jns
push
pop
mov
dec
aad
ja
jecxz
out
push
les
shrl
in
shll
inc
sbb
sub
js
inc
mov
adc
in
fucomip
in
xor
rorl
in
inc
aas
loopne
inc
jbe
leave
cmpsb
cmp
lods
pop
xchg
faddl
cmp
lock
dec
in
xor
and
mov
in
les
je
aad
or
sahf
ljmp
int
jle
mov
sub
adc
ret
sahf
fiaddl
push
lret
test
test
mov
mov
mov
mov
push
mov
jmp
add
lock
ds
cld
mov
mov
rclb
les
push
ret
leave
test
repnz
mov
adc
jno
pusha
mov
cmp
call
scas
ja
dec
rcr
push
out
or
jge
jo
in
mov
cwtl
outsl
push
inc
xchg
push
mov
lret
daa
xchg
sub
xor
lahf
cmp
not
sub
pop
pop
lock
cmpb
cs
loope
rolb
sarb
into
sbb
cltd
inc
arpl
sub
push
aaa
inc
jecxz
sbb
rolb
ja
rorb
push
fadds
or
sub
or
ret
mov
bound
inc
lcall
and
mov
arpl
cmpsl
cmpsb
mov
mov
lea
loope
jno
lods
jns
std
out
stos
inc
stos
adc
stos
out
xchg
and
inc
add
ljmp
ja
push
inc
add
add
or
push
add
pop
divl
sbb
jle
push
pop
fadd
cmp
push
pushf
xor
mov
cmp
jo
or
int
cmp
mulb
adc
orb
cli
and
int
aad
jno
add
pop
xlat
stos
leave
push
adc
int
scas
pop
xchg
inc
cld
fsts
in
testb
cmp
push
xlat
mov
arpl
stos
jbe
inc
mov
sahf
call
fsubl
movsl
pusha
insl
mov
in
and
mov
jbe
lds
mov
cmp
arpl
inc
fucomp
popa
inc
and
adc
cmp
cmpsl
cld
mov
mov
dec
cmc
cltd
mov
in
cli
pop
fmuls
add
push
out
fwait
ljmp
pushf
fsubl
stos
sti
sbb
xchg
testl
xchg
aas
sbb
adc
mov
cmp
out
and
scas
lcall
and
test
mov
popf
fldcw
push
fsub
xchg
shl
xchg
adc
hlt
xor
push
sbb
push
shld
or
outsb
xor
fildll
int3
push
nop
jo
lret
jae
arpl
and
xchg
dec
dec
and
jmp
push
ret
enter
mov
ret
push
in
scas
adc
out
cmpsl
lea
jnp
sub
je
pop
mov
xor
fs
in
into
push
int3
int
das
sbbb
and
test
dec
int3
xchg
mov
push
shrl
fdivr
xchg
lea
aas
loope
xchg
scas
xchg
dec
pop
jne
push
ret
mov
fisubrs
outsl
inc
jle
mov
lods
or
mov
and
pop
cmp
xchg
add
dec
stos
aam
lock
pop
jecxz
mov
mov
sub
inc
xor
add
add
imul
test
mov
fsubrl
cld
or
cs
aam
jge
pop
push
xchg
cmpsl
dec
sbb
cmp
into
pop
push
pop
sub
test
leave
sbb
outsb
xorl
cld
mov
sti
jl
mov
js
xchg
and
jb
ror
ljmp
jae
sub
shlb
push
data16
or
mov
cmpsl
leave
jg
mov
lret
mov
xchg
jb
jnp
xchg
sub
ret
pop
pop
push
inc
scas
push
fildll
pop
fisubs
decl
test
lret
fwait
and
into
aam
inc
stos
stc
test
mov
es
pushl
lds
data16
loop
mov
arpl
jge
dec
cmpsl
fnstcw
pop
jno
clc
aad
mov
movsl
or
xchg
movsl
push
jbe
jmp
fs
lock
ds
outsb
mov
cltd
addb
adc
mov
sub
mov
mov
jmp
popa
in
jno
mov
shlb
mov
lods
jno
insb
ss
push
xor
lods
fs
jle
xchg
mov
pop
mov
mov
adc
ljmp
gs
mov
pop
cmpsl
enter
inc
rorl
lds
mov
mov
sub
ja
scas
fwait
xor
fs
fisubl
arpl
psadbw
jb
nop
mov
das
pushf
stos
lret
lods
dec
jg
push
enter
jbe
nop
pop
inc
or
stos
jno
lcall
outsl
iret
xchg
cmpsb
lcall
cs
push
out
out
pop
lea
jbe
jecxz
cli
dec
xor
xchg
fiadds
iret
icebp
xor
cmpsl
mov
repnz
fimull
mov
xchg
stos
xchg
ja
enter
mov
jbe
or
movsl
pop
movsl
inc
xor
sbb
jns
mov
adc
hlt
mov
sbbb
mov
roll
les
mov
shrb
sub
nop
das
ds
shll
dec
xchg
test
inc
xchg
sbbb
repz
jb
es
jae
fs
dec
fiaddl
add
lea
push
rorb
hlt
lds
clc
jo
pop
ffreep
aas
pop
or
test
mov
loop
dec
outsb
xor
fs
mov
mov
fwait
cmc
mov
jl
jns
outsb
insb
mov
pop
and
mov
int
std
sbb
icebp
les
cwtl
shll
adc
call
test
pop
enter
mov
xor
scas
jp
les
fldpi
andl
test
sbb
ret
sbb
dec
movsb
xchg
push
dec
xchg
in
inc
and
sub
outsb
jb
ljmp
insl
loop
sub
subl
mov
dec
mov
in
pop
adc
sub
loop
fisubrs
mov
sub
push
pop
movsb
cs
xchg
cmp
out
dec
mov
mov
iret
mov
outsb
add
push
int3
aam
mov
movsb
pop
pop
aad
je
sbb
ss
call
icebp
pop
and
adc
push
mov
mov
les
pop
mov
pop
sub
mov
into
pop
pop
jae
fildll
adcb
lock
std
jae
loope
pop
imul
sbb
ds
aad
in
push
push
push
jecxz
mov
repnz
insl
out
dec
inc
dec
scas
cltd
popa
sbb
jne
lret
int
mov
pop
sti
cld
rorb
mov
enter
mov
pushf
lahf
addr16
ljmp
bound
out
inc
and
push
ret
cmpsl
fisubrs
adc
and
insb
mov
ds
insl
xor
std
jb
fsubrs
mov
mov
inc
pop
cmp
scas
add
or
sarl
insb
insl
xorl
and
shl
mov
and
pop
mov
mov
movsb
jns
repz
dec
dec
lret
leave
adc
stc
cld
add
mov
fidivs
ja
add
mov
mov
inc
popf
dec
iret
adc
std
and
das
xchg
dec
pusha
in
cmp
pop
js
out
cltd
push
mov
lods
aas
jne
xor
jle
jbe
fildl
adc
loop
push
mov
mov
pusha
mov
cld
or
push
or
sub
sarl
ljmp
cld
or
sub
cmp
test
movsl
fbstp
in
test
dec
inc
nop
xchg
lods
xchg
sub
push
nop
inc
test
adc
xchg
cmp
pop
rclb
jg
int
sub
add
mov
sbb
imulb
out
and
mov
sub
mov
cld
in
rcll
filds
ljmp
cmpsl
xchg
test
test
cmp
and
jae
dec
inc
dec
jae
stc
fisubs
outsl
clc
sub
out
cmp
mov
xchg
add
adc
and
cmp
or
mov
jb
jnp
iret
std
push
insl
mov
adc
stos
test
inc
jo
imul
dec
int
push
les
repnz
repz
hlt
jg
push
xor
repz
icebp
pop
add
inc
rolb
out
adc
jno
adc
xor
or
and
mov
jl
push
outsb
fisttps
out
mov
lds
sbb
push
inc
cltd
inc
push
adc
shll
rclb
sbb
addr16
cmc
data16
or
jl
cmp
enter
sub
mov
nop
inc
mov
subl
arpl
lods
mov
add
xor
icebp
cmp
sbb
or
sbb
adc
in
nop
lea
mov
pop
sbb
pop
fmulp
roll
pop
mov
mov
inc
aad
add
movsl
mov
aaa
sub
xchg
stc
nop
test
push
dec
stos
ficompl
dec
jmp
sub
mov
lds
or
adc
pop
ja
inc
in
xchg
lcall
into
jne
xlat
test
outsb
push
cmp
jae
out
test
lahf
add
jno
jnp
stos
add
mov
xchg
dec
or
or
ja
xor
lcall
jo
jecxz
nop
cmpsl
and
fs
add
or
jmpw
and
sbb
pop
mov
pop
jmp
lods
cmp
aam
mov
adc
lret
and
push
lahf
addr16
outsb
sbb
adc
or
ret
inc
repz
mov
cs
xchg
cmp
rcll
outsb
mov
out
jl
mov
pop
and
aaa
cmp
dec
jmp
jbe
dec
mov
mov
xchg
ret
mov
test
mov
rorl
cmp
rol
pop
mov
sti
cld
out
fisubs
fisttpll
out
inc
in
cmp
dec
es
adc
shll
xor
test
test
push
test
push
jge
adc
adc
and
and
sub
in
test
dec
shrl
repnz
add
adc
mov
pop
repnz
repz
xchg
stos
or
and
scas
jl
add
cltd
fmul
ret
and
xchg
repnz
mov
cs
mov
pop
mov
ljmp
sub
adc
shll
fisttpl
jb
fldcw
mov
iret
and
add
xchg
insb
jo
sbb
add
shr
jbe
les
add
loop
sbb
xor
adc
rcl
xlat
sub
pop
cmp
mov
movb
adc
das
jge
push
mov
int
insb
sub
lds
cld
scas
cmp
insl
jbe
test
lods
loop
dec
xchg
aad
push
jmp
pop
dec
lock
mov
and
sarl
lretw
test
sub
popa
lahf
adc
jbe
mov
pop
mov
mov
cmp
xor
push
jp
xchg
mov
mov
into
fisubs
pop
cli
pop
push
shll
xor
rcll
jmp
xchg
cmp
fmuls
xchg
sub
xor
fidivrs
pop
push
test
mov
xor
jb
mov
les
aaa
iret
cmpl
pushf
in
push
inc
in
push
xorl
mulb
push
pop
add
jmp
xlat
add
repnz
lahf
fstpt
mov
add
pop
push
mov
pop
loopne
stc
jle
lods
or
pusha
popl
mov
aaa
mov
lock
sub
and
mov
xor
loope
movsb
movsl
js
repnz
in
lods
add
rcl
mov
xor
je
sbb
or
fstps
or
mov
xchg
out
jecxz
lock
push
mov
push
jno
push
in
adc
xchg
xor
push
lahf
adc
rcr
repz
add
pop
ja
mov
and
mov
aam
push
leave
mov
cmp
subb
dec
gs
adc
xchg
inc
pop
jle
int3
add
data16
xor
negl
pushf
cmp
ud1
sub
xor
notb
stos
push
lds
repnz
xchg
jl
pop
mov
push
aaa
push
mov
mov
arpl
lcall
inc
mov
movsb
adc
aaa
idiv
and
or
insb
cs
shll
and
idivb
inc
in
adc
gs
mov
or
fdivr
or
sub
mov
push
cmp
add
xor
xor
sbb
mov
sub
mov
test
sub
pop
mov
cmp
mov
js
dec
adc
push
arpl
xor
push
sub
push
push
pop
loope
adc
xchg
in
pop
sahf
jmp
fcmovne
mov
out
jae
into
loope
adc
pop
pop
push
ss
std
cmp
adc
mov
lods
jno
pop
mov
daa
aam
and
jo
sub
lret
pop
inc
mov
jae
cmp
xchg
push
mov
cmc
xor
mov
jl
jge
jno
icebp
movq
out
imul
push
call
call
negb
out
xor
add
xchg
inc
cs
mov
lret
push
out
mov
popf
jecxz
test
dec
mov
mov
or
dec
xchg
sub
or
cs
xor
lcall
jb
imul
jb
xor
jno
push
push
notb
enter
iret
sub
fucomi
cmp
addr16
mov
scas
pusha
in
jmp
in
or
xor
pop
mov
dec
xor
inc
je
fmul
jb
xchg
cmpsb
jnp
jle
ljmp
jo
aaa
stc
pop
cltd
push
sub
mov
repz
pop
pop
jbe
inc
and
sbbb
into
daa
popf
cmp
add
fs
jmp
test
jne
and
inc
jg
push
pop
and
sbb
sbb
mov
stc
lahf
movsb
sahf
aam
fldl
int
testb
and
loop
es
mov
pushf
cmp
jns
repz
inc
out
es
dec
push
movsl
or
pop
jne
inc
mov
shl
into
xor
or
js
push
pop
pop
lods
inc
jbe
xchg
sub
mov
in
mov
sbb
lret
adc
push
pop
xor
stos
fdivs
jmp
repnz
xor
or
les
test
lret
into
pusha
movsb
addr16
bound
mov
dec
adc
and
xchg
stos
enter
mov
and
out
push
into
sub
and
aam
adc
push
mov
rclb
jg
in
pop
jge
mov
adc
andb
mov
mov
mov
push
xlat
cld
push
ret
mov
inc
jecxz
mov
out
jnp
cmp
push
outsb
insl
nop
imul
sbbl
bound
lcall
pop
out
and
inc
mov
mov
or
jg
dec
cmp
adc
lock
insl
fldlg2
int
jl
vcvtps2dq
iret
mov
inc
out
xchg
loope
push
sub
push
mov
dec
jmp
jb
fwait
inc
fmul
mov
xchg
out
pusha
mov
xchg
aaa
mov
inc
into
xchg
xorb
jp
jmp
in
out
lods
and
ss
movsb
mov
stos
lcall
jmp
or
mov
add
data16
mov
cltd
or
add
ja
cld
out
xchg
cli
or
jecxz
jg
mov
push
inc
inc
clc
push
pop
loope
cwtl
rcrb
mov
divb
pushf
nop
or
sbb
das
mov
data16
xchg
mov
jle
lret
push
cwtl
mov
idivb
sub
pop
mov
and
rolb
xchg
mov
hlt
jmp
dec
gs
fidivl
jae
sub
push
std
es
push
pop
int
or
ljmp
dec
dec
std
cmp
jno
sahf
inc
int
cmp
adc
jl
inc
loopne
pop
loopne
adcb
sbb
cmpps
cmp
in
icebp
and
mov
cmp
lock
pop
pop
adc
mov
mov
jmp
rorl
adc
enter
jecxz
aas
enter
fidivl
xchg
gs
cli
outsl
xchg
and
mov
test
scas
and
cmp
rcr
and
mov
std
jmp
xlat
test
and
orl
xor
inc
fidivrs
add
sub
inc
push
cs
int
sbb
aam
sarb
mov
data16
call
ja
mov
repz
repnz
dec
or
adcb
mov
mov
sbbl
jmp
dec
hlt
mulb
loopne
push
mov
push
sbb
cli
sub
ror
or
jae
pushf
lahf
dec
mov
push
lods
mov
loop
jl
sub
cld
sbb
xor
ss
jo
pop
pop
es
adcl
cmp
sti
ss
ja
mov
movb
sub
in
mov
pop
jns
negl
insb
pop
mov
pop
cmp
mov
push
inc
fdivr
out
jge
lret
sbb
push
jno
push
loope
push
push
dec
stos
test
push
adc
inc
push
push
adc
cmc
dec
mov
adc
int
mov
orl
lcall
popf
data16
and
cmp
out
int3
aam
mov
xor
ret
movsb
pop
jle
lock
fstpt
mov
movsb
negb
or
hlt
dec
jge
and
out
pop
mov
int
fsub
cmp
cmp
mov
cmc
jmp
int
cmp
fadds
notl
aad
jmp
mov
dec
xchg
lahf
sub
inc
les
xlat
das
cmpsb
les
mov
sarb
pop
gs
xor
push
mov
mov
out
sti
pop
in
idiv
dec
in
add
cli
out
pop
xor
mov
fbld
push
inc
mov
dec
sti
shl
dec
test
sub
idivl
adc
mov
loope
ja
jne,pt
out
ret
in
test
jle
scas
pop
sbb
iret
arpl
mov
ja
or
xchg
ss
addr16
mov
dec
mov
lret
mov
loopne
xchg
xchg
sarb
pop
stc
sub
je
ja
sbb
or
test
mov
and
mov
cmpsb
mov
pushf
adc
inc
dec
sub
mov
jo
fildl
int3
cmp
dec
pop
mov
sbb
out
in
lock
and
xor
jmp
push
in
aaa
bound
in
std
por
data16
sbb
int3
mov
mov
xchg
cli
xchg
or
test
sub
push
push
out
scas
insb
mov
in
loope
push
add
push
mov
jnp
ss
xchg
ss
arpl
cmp
inc
leave
shl
daa
inc
stos
ret
pop
jo
jle
xchg
jp
leave
pushf
push
mov
cmp
in
mov
out
sub
mov
pop
rcll
push
pop
cmp
pop
adc
xchg
aam
aaa
xor
adc
flds
jg
adc
icebp
jno
dec
pushf
add
cli
je
adc
or
or
add
pop
or
inc
ja
mov
pop
jo
enter
add
imul
pusha
imul
jns
loope
hlt
add
pop
pop
cmp
push
loopne
imul
and
cmpb
pop
arpl
cmp
and
xchg
ret
icebp
ret
pop
loopne
out
mov
inc
sbb
loope
fwait
mov
movsl
pop
mov
dec
ret
inc
mov
mov
add
push
insb
mov
xchg
cmpb
sub
xlat
fwait
jp
push
sbb
xchg
dec
mov
loope
xchg
aam
adc
jmp
jl
fs
cmp
nop
add
inc
adc
jmp
lea
iret
mov
mov
and
test
out
or
dec
mov
pop
mov
mov
hlt
xchg
test
xchg
js
xor
push
out
into
inc
and
inc
in
pop
jmp
pop
sbb
mov
adcl
xchg
rcl
jno
icebp
adc
mov
xor
inc
es
jge
adc
lahf
adc
and
sub
popl
sti
movsb
xchg
stos
mov
gs
jns
movsl
mov
ja
and
push
xor
mov
es
push
adc
pop
add
xor
mov
jns
loope
jmp
ja
mov
lods
inc
into
mov
hlt
enter
lods
fisttps
lods
add
add
mov
int3
cltd
push
imul
adc
jo
repz
xor
add
mov
ss
or
les
das
add
sub
out
push
sub
sub
push
sbbb
mov
scas
mov
mov
mov
das
movsb
add
mov
push
sbb
cld
inc
popa
jno
or
ret
repnz
push
popa
scas
pop
adc
xchg
out
add
dec
pusha
hlt
adc
fnsave
mov
and
lahf
cmpsl
shl
stos
aam
cs
push
sub
hlt
mov
jne
in
popa
loope
out
mov
lods
movsb
rol
rolb
jg
xlat
js
fdivrl
pop
in
dec
sbb
lods
pusha
les
fcmovb
cmp
ss
mov
leave
xchg
movsb
lods
dec
push
mov
cltd
jge
fisubrs
lahf
cmpsl
bound
into
pop
negl
jnp
mov
cld
push
or
outsb
rcll
imul
mov
fldl
push
fsubrs
data16
rorb
lahf
or
xchg
pop
bound
push
out
sub
push
mov
cli
xchg
test
stos
or
loope
loop
gs
imul
decl
jmp
fucomip
jo
pushf
add
push
frstor
pop
add
adc
cmc
adc
mov
mov
outsl
xor
repz
icebp
sti
or
les
and
insb
mov
sbb
scas
mov
jg
out
xchg
dec
jmp
jae
notb
sbb
shlb
iret
cmp
or
sub
xchg
in
sbb
cmp
adc
push
adc
and
xorb
in
aaa
add
jo
data16
hlt
xchg
fisttpl
shll
and
mov
sbb
jb
mov
iret
push
cmp
test
or
add
mov
sub
xchg
mov
xchg
sbb
inc
js
insl
cmp
insb
cld
subl
and
mov
enter
push
or
or
lods
sbb
pop
jle
insl
in
bound
jge
cmp
cmp
push
cmp
xchg
mov
lods
and
icebp
mov
pop
sbb
sti
cmc
push
or
sub
movb
cmp
aas
sub
rol
adc
pop
xor
lods
dec
mov
mov
inc
lds
mov
or
push
and
mov
mov
push
in
cltd
inc
xchg
clc
adc
xor
xor
outsl
loop
in
dec
in
ss
xchg
mov
idiv
xchg
xchg
repz
add
jg
cli
in
lods
es
ds
call
out
sbb
pop
roll
mov
cmpsb
fsubs
pop
out
ret
leave
pop
pushf
cmp
cmpsl
fistl
or
into
into
push
mov
mov
imul
pusha
rorb
mov
outsl
jne
fisubrl
add
daa
cmp
clc
and
pop
xchg
xchg
pop
notl
inc
mov
jb
adc
ret
sbb
inc
vandnps
adc
js
push
ret
test
sbbl
popa
sbb
xchg
mov
outsb
mov
jnp
test
popf
mov
pop
sahf
push
sub
mov
daa
clc
sub
arpl
orb
test
cmp
push
mov
fdivr
sbb
scas
mov
movsb
fsubr
das
call
jo
xorb
push
jno
jb
dec
rcr
rol
mov
or
movsb
sarl
dec
mov
loop
mov
jecxz
test
outsl
xchg
fistpl
mov
adc
or
aam
adc
mov
sub
dec
jbe
or
js
dec
jmp
cmpsl
sbb
jg
cmp
sub
dec
and
popf
fsubrp
popa
pop
pop
iret
inc
jle
jo
out
shl
xor
xchg
mov
inc
stos
mov
test
jg
jge
jns
inc
or
cli
push
imul
enter
cmp
xchg
xor
not
jno
lea
hlt
pop
idivl
jnp
or
mov
pop
mov
mov
loop
aam
cli
mov
shr
mov
mov
jmp
jmp
sbb
loopne
fwait
mov
cmpl
and
jecxz
push
sub
inc
clc
in
mov
mov
out
in
aas
sub
cmp
repnz
jp
mov
mov
mov
mov
and
bound
imul
test
aam
jne
pusha
dec
in
mov
xchg
xchg
jle
cmp
mov
hlt
cmc
adc
cmc
std
push
ret
inc
mov
imul
xchg
xchg
push
fadd
lret
add
adc
cmc
movsb
lods
repz
and
js
jae
dec
nop
push
stos
jb
xor
jne
adc
repnz
sub
push
or
adc
into
and
inc
sub
rcrl
push
into
jmp
stc
jge
repnz
mov
sub
je
mov
loopne
inc
or
jmp
mov
jne
fwait
nop
mov
ficoms
sub
mov
dec
cmp
or
xchg
ja
dec
cmp
push
inc
jbe
dec
add
negl
out
ret
cmp
dec
in
andb
pusha
sbb
js
and
movsl
rolb
inc
or
movsb
mov
push
sbb
dec
jo
test
pop
cmp
iret
mov
test
cmp
mov
lahf
xor
inc
lcall
jo
rorl
mov
xchg
push
in
cmp
test
sahf
popf
test
pop
or
or
push
jl
push
test
or
lds
xor
xor
mov
sbb
pop
and
add
pop
pop
shl
cmp
mov
sub
lahf
push
mov
push
movsw
inc
out
xchg
adc
sbb
xlat
lds
add
sahf
int
sub
dec
xor
call
inc
loop
aas
repz
mov
ss
and
loop
andb
pop
push
dec
dec
cmp
pop
hlt
in
add
jo
in
scas
xchg
cld
jns
iret
sbb
std
sbb
cs
jge
enter
mov
jmp
aad
data16
insl
sbb
fstpt
jae
mov
pop
jge
mov
iret
dec
test
fcoms
push
lods
cmp
cltd
xor
scas
add
test
mov
daa
ds
andb
and
and
xchg
icebp
addps
mov
into
testl
rcll
or
jge
out
add
push
push
addr16
mov
les
xor
rcll
xchg
daa
lock
mov
ss
out
jmp
xor
and
jecxz
aam
repz
jge
sub
mov
mov
pop
sub
xorb
inc
push
lds
pop
mov
xchg
insl
rorl
sub
daa
and
repz
leave
ljmp
loopne
nop
add
cmp
or
xor
sbb
clc
sub
idivb
sarl
data16
xchg
inc
and
jo
inc
fwait
ret
ds
sub
gs
enter
xchg
inc
xor
push
iret
lret
lock
xchg
mov
popl
pop
or
fsubr
pop
idivl
hlt
arpl
jle
rcl
mulb
jnp
cmp
lret
mov
jne
bound
mov
lods
int
push
enter
int3
pop
fidivrs
fstpt
jbe
inc
js
sbb
pop
rcl
add
imul
fdivs
sbb
ja
ljmpw
jo
jmp
nop
getsec
clc
into
pop
pop
add
sbb
xor
out
dec
lods
sub
pop
mov
mov
xor
pop
sbb
add
mov
in
scas
or
cmp
testb
mov
shll
dec
sbb
lods
xchg
loop
xlat
out
xor
fists
jle
aad
xchg
pop
pop
frstor
pop
sar
push
sbb
cwtl
xchg
add
jmp
out
mov
jecxz
xchg
cwtl
xchg
inc
xchg
add
add
int
cmp
addl
add
push
sbb
adc
pop
jne
push
clc
jmp
push
fstps
paddw
pop
xor
bndldx
data16
xor
movsb
popa
inc
subb
fcoml
and
xchg
jnp
dec
ja
in
loope
mov
scas
aaa
lcall
inc
jecxz
sub
mov
ljmp
insl
sbb
push
jae
adc
dec
inc
cmp
push
mov
lret
cs
insb
sub
push
std
jmp
fwait
shrl
mov
sbb
lcall
xchg
xor
imul
sbb
xor
push
and
sbb
inc
call
fucomp
addb
inc
test
aam
je
addr16
outsb
mov
leave
pusha
push
movsb
add
dec
dec
fists
adc
scas
dec
cmp
sub
fldt
pusha
ja
movsl
adc
ljmp
stc
lret
sub
jns
inc
std
enter
fucom
sub
popa
adc
mov
popa
sub
outsl
xchg
bt
in
adc
popl
xchg
or
jmp
pop
ljmp
inc
cmp
mov
cmp
jge
adc
inc
fmuls
xchg
sub
xchg
inc
xor
jns
call
jg
iret
pop
insl
mov
sub
sub
mov
cmp
leave
addr16
js
fptan
lahf
aaa
mov
bnd
jns
sete
rcll
js
pop
and
and
aaa
fists
push
shrb
jl
mov
dec
iret
lods
sarb
ret
jne
movsl
lahf
inc
testb
pop
lret
xchg
cmpsl
cli
cmp
jnp
mov
sahf
shl
nop
add
ljmp
daa
jo
test
mov
test
fidivl
and
or
mov
movsl
push
push
push
pop
sub
cs
add
xchg
sbbl
mov
addl
mov
outsb
jmp
sbb
pop
xor
cmp
pushl
xor
lahf
mov
roll
stc
roll
cmp
call
pop
add
mov
std
xchg
push
inc
push
mov
test
push
imul
cli
push
cmp
pushf
fimull
stos
inc
adcb
jb
movsb
popf
dec
ret
mov
jbe
notl
cmpsl
dec
cltd
aas
mov
into
lcall
mov
push
sub
lea
lcall
mov
pop
fsub
fists
mov
js
bound
std
cmp
shl
and
lcall
adc
lock
mov
mov
xchg
pop
ds
fildl
loopne
push
adcb
push
cmp
mov
std
xchg
dec
pop
movsl
sub
push
into
outsl
pop
inc
adc
cmp
sbb
repnz
mov
mov
cmpsl
mov
mov
pop
lods
divl
loopne
gs
sub
jg
cmp
popf
adc
jmp
xchg
in
lcall
adc
mov
sarl
and
lahf
mov
push
cmpsw
sub
push
push
ja
push
das
shll
cmp
xor
mov
cwtl
popf
imul
xchg
jb
pop
sbb
negl
push
dec
mov
pushf
ret
cmp
sub
mov
sbb
popf
jecxz
movsl
test
push
les
inc
stc
fwait
adc
xchg
cmpsl
mov
mov
sub
and
add
imul
and
or
fdivrp
cld
xchg
lea
loope
jbe
inc
adc
add
popa
pop
test
xchg
aad
call
fnstcw
and
lea
inc
sahf
imul
roll
repz
pop
push
sub
jnp
push
mov
rcll
jne
insl
clc
popf
popf
and
mov
sti
and
xor
sbb
pop
cltd
mov
sbb
ret
fidivl
fnstenv
xchg
add
popa
and
out
fdivrl
push
adc
test
sbb
popf
or
arpl
out
and
jge
push
jg
cwtl
inc
sbb
lret
in
mov
and
fistpll
cmc
rolb
ret
lret
scas
jp
pop
add
xlat
stos
cmpsl
addr16
xor
add
xor
push
scas
cmp
sbb
int
pop
xchg
jnp
ret
and
sbb
in
xchg
push
push
daa
pop
enter
stc
or
pop
cltd
sbb
push
shrl
or
mov
into
cmp
inc
mov
xor
pop
mov
repz
mov
xchg
add
cmc
pop
into
imul
out
inc
inc
or
mov
aas
mov
adc
adc
shll
sub
cli
fidivrl
mov
aas
imul
stos
or
inc
icebp
mov
and
push
inc
add
clc
mov
pop
clc
pop
and
scas
mov
mov
dec
test
inc
inc
mov
loope
and
outsl
loopne
movsb
mov
jae
mov
adc
inc
jle
gs
stos
add
and
insb
fildl
int3
mov
dec
arpl
and
cld
stc
in
and
pop
repnz
push
pushl
dec
mov
mov
repz
and
xchg
fwait
inc
jge
rcrl
into
shrl
xchg
jnp
pop
daa
clc
sbb
mov
orb
mov
jns
out
xchg
in
fmuls
sub
fxch
cmpsl
mov
aam
xchg
sahf
sbb
push
pusha
cmpsb
dec
outsl
sub
dec
aam
out
scas
flds
xor
orb
or
dec
in
jp
std
lret
and
sti
xchg
mov
shll
outsl
stos
pusha
cmpsb
jle
sbb
sahf
insl
mov
cmp
cmpsb
lret
repz
icebp
mov
dec
jo
cmc
xchg
stos
pop
mov
push
test
hlt
stos
dec
and
dec
or
cmp
and
xor
sub
pop
jge
inc
data16
push
out
scas
jecxz
inc
and
jp
or
sbb
mov
xlat
sub
fldenv
insl
sub
fisubs
lock
adc
or
testb
mov
mov
rcrl
and
out
ret
dec
mov
mov
shlb
imul
and
pushf
movb
fisttpl
dec
sbb
push
bound
insb
shlb
add
jnp
xlat
push
or
jg
cmp
mov
pop
cmp
sbb
inc
sbb
xchg
mov
jmp
call
mov
pop
out
jl
scas
xor
and
ja
xor
jp
sarb
mov
repz
mov
ror
jmp
mov
outsl
sub
add
xchg
sub
movsl
insb
xchg
push
add
adc
lret
into
repz
mov
inc
ss
ret
int
loopne
out
sar
movsl
ret
mov
jbe
sti
dec
pusha
and
or
lahf
inc
lahf
inc
mov
sub
mov
and
cs
inc
shrb
mov
mov
xchg
and
test
and
and
rdpmc
out
inc
imul
xchg
popa
push
pop
xor
out
and
leave
cmp
call
leave
xchg
add
inc
rcrb
cltd
ss
adc
insb
sarb
aaa
shl
movsb
repnz
mov
mov
int
xchg
xchg
imul
mov
icebp
pop
loop
push
and
mov
dec
mov
xor
inc
or
push
imul
aad
pop
mov
adc
and
mov
dec
fwait
xor
out
pop
mov
lahf
fldl
ficomps
addr16
inc
xorb
sbb
adc
mov
hlt
cmp
sbb
movsl
mov
push
rolb
mov
test
adc
fdivs
ss
adc
cmp
int
test
jns
ret
mov
mov
mov
loop
std
inc
lret
leave
test
in
and
clc
mov
aas
insl
adc
lahf
or
push
mov
and
nop
jbe
jmp
push
sbb
into
mov
inc
cs
sti
mov
dec
inc
pusha
mov
xor
inc
push
mov
xchg
pop
or
xlat
and
xlat
test
in
mov
test
in
cmpb
jae
xchg
pop
push
pop
dec
push
cli
out
sarl
add
inc
aad
xchg
inc
jns
cmpb
je
mov
lret
push
call
push
aas
mulb
sbb
rorb
mov
aad
push
and
mov
das
test
fcmovne
shlb
lock
xlat
and
notl
arpl
sarl
push
push
rclb
sbb
mov
ds
call
mov
and
mov
jp
cmc
gs
daa
push
push
scas
cmp
xor
xchg
ljmp
fldl
dec
mov
cmp
ss
jge
jnp
push
jge
cmp
cmp
pop
in
xchg
insl
jae
mov
idivb
pop
mov
jecxz
dec
adcl
popf
push
dec
and
ret
xor
ret
fs
pop
push
out
andl
ret
ljmp
adc
clc
add
xchg
sub
lret
mov
ss
xor
xchg
mov
std
aad
pushf
fwait
dec
cmp
mov
repz
test
shlb
xchg
sbb
dec
popf
xchg
jge
xchg
lods
pop
add
dec
ficoml
push
mov
xchg
push
lea
addr16
jae
xchg
ds
fnsave
xchg
sarl
sbb
insb
jb
fimuls
lret
stc
xor
rep
or
dec
mov
xchg
push
pop
das
sub
cmp
rorl
shll
mov
push
popa
add
pop
push
addl
and
xor
rolb
push
bound
xchg
mov
push
stos
test
push
add
repz
sbb
jae
cmp
aas
pop
fidivrl
jle
inc
sub
cmc
fisubl
inc
sahf
out
out
cmp
and
cli
lret
pop
popf
pop
call
inc
cmp
je
int3
cmp
imul
je
xchg
sbb
mov
insl
fs
xor
aas
lock
test
xchg
loope
dec
insl
ficoml
pop
lea
and
and
cmpsb
leave
add
cltd
jnp
mov
dec
add
mov
iret
sub
dec
push
mov
imul
and
and
pushf
ljmp
add
or
cltd
fstl
add
xchg
xchg
rcrb
rol
adc
das
adc
jno
push
sub
push
rorb
inc
lock
pop
jmp
test
sti
fwait
jns
xchg
cmp
add
sbb
sub
nop
xor
mov
xchg
sti
lock
test
out
sbb
jnp
jge
fmull
je
leave
outsl
cmc
xchg
add
jmp
das
dec
incl
stc
push
in
sbb
scas
stos
movl
les
mov
pushf
testb
pop
dec
lods
mov
out
push
lock
add
xor
lcall
popf
add
loop
ljmp
mov
xchg
mov
mov
enter
fidivl
out
or
repz
inc
lds
loopne
fbstp
push
and
je
in
pop
mov
jb
sbb
xlat
inc
imul
imul
push
xorb
das
sub
add
inc
xchg
lods
pop
pop
pop
xchg
gs
mov
inc
or
and
jb
outsl
pop
stc
movsl
push
popf
cmpsb
push
call
nop
adcl
addr16
clc
stc
loop
test
inc
xor
inc
jg
js,pn
mull
xchg
cs
mov
ret
sbb
sbb
mov
mov
inc
repnz
mov
repnz
cmpsl
jb
dec
mov
push
mov
icebp
adc
pushf
fs
and
iret
ljmp
fisttps
mov
nop
mov
cmp
and
mov
xchg
adc
out
sub
cmp
lds
sbb
fs
sbb
fsubp
out
push
stos
cmc
sub
jne
stos
jmp
push
xchg
fisubs
pushf
mov
sub
out
or
mov
add
jne
inc
dec
stos
lods
push
lret
movb
or
mov
add
and
push
lahf
cs
dec
fistps
add
sub
fldcw
and
call
pop
inc
icebp
int
into
sbb
and
pop
subl
mov
and
lea
cld
jecxz
rolb
imulb
dec
cmpsb
in
ss
push
idivb
push
jmp
jecxz
aas
push
sti
aam
repz
cmp
xor
and
add
pcmpgtw
pop
fsts
xor
adc
dec
sahf
pop
push
sti
cwtl
xor
sub
cmpsl
push
dec
cwtl
mov
cmp
mov
add
rcll
imul
pop
incb
outsb
ljmp
imul
scas
pop
test
pop
fcmovb
mov
dec
fnop
popa
sub
xchg
mull
leave
xor
inc
bswap
pushf
xchg
cmp
inc
lds
ds
inc
jle
xchg
cmp
cs
out
sub
daa
cmp
ljmp
mov
repz
push
sbb
outsb
stos
xorb
xchg
or
jmp
aaa
push
mov
pop
push
dec
inc
loop
in
js
dec
imul
sbb
fs
mov
xor
shr
push
or
xchg
lea
push
xchg
add
cmp
addb
sub
fdivr
and
lea
es
xor
jmp
into
pop
add
fbstp
adc
mov
mov
fstps
lret
aam
add
je
int3
insb
push
lret
and
pop
push
xchg
xor
std
dec
add
stc
cs
ds
add
cmp
xor
mov
fnstsw
das
mov
jae
push
lahf
test
popa
lods
pop
orl
lahf
pop
inc
mov
addr16
lret
aaa
nop
cmp
mov
pop
mov
mov
cli
loop
jle
mov
mov
inc
or
push
lds
lods
stc
jne
movsb
xor
push
xchg
movsb
std
cmp
push
aas
je
scas
inc
push
dec
cli
loopne
or
bound
mov
or
sbb
add
shl
popa
gs
sbb
xchg
mov
fdivrs
mov
mov
push
cmpsl
notb
xor
inc
sbb
inc
xchg
icebp
cmp
mov
stc
fildll
movsb
cmp
cmpsb
mov
push
imull
inc
fs
or
pop
or
out
aaa
adc
ret
or
leave
or
orl
adc
arpl
loop
xlat
xchg
jo
aas
in
fidivrs
out
pop
lock
pop
ret
cmpl
leave
and
and
sahf
jbe
ds
add
cwtl
xchg
out
mov
inc
sahf
xchg
in
cwtl
call
das
loope
test
fwait
pop
inc
popf
sbb
push
cs
das
or
push
xorl
and
mov
dec
outsl
xchg
mov
lea
je
adcl
pushf
dec
test
shll
sbb
neg
inc
cmc
jb
pop
mov
insb
cmpsb
push
mov
sub
cmpsl
or
jmp
cmp
addl
mov
mov
jmp
pop
sbb
jg
pusha
push
aaa
cmpsl
into
mov
push
fistl
push
in
ja
xor
add
adc
das
sbb
cmp
ds
push
je
push
lods
adc
add
mov
dec
scas
jl
mov
lret
jae
adc
jb
sbb
pop
out
enter
stos
mov
mov
stos
and
add
push
xchg
cmp
sub
loope
lods
mov
sahf
mov
shlb
add
sub
push
loope
aad
pusha
rcll
jl
rorl
sub
pop
subl
mov
scas
mov
push
or
pop
xchg
mov
lret
xchg
int3
insl
mov
popa
jg
sbb
int
jg
xchg
mov
aas
xchg
sahf
adc
sub
cmp
cltd
cmp
cltd
jle
and
stos
std
mov
inc
add
jg
clc
sbb
jmp
push
mov
lret
xchg
mov
add
add
dec
leave
bound
add
enter
int3
ja
add
pop
pop
movsl
push
jmp
in
cwtl
das
push
mov
inc
sar
or
dec
jmp
fistps
sub
xlat
mov
pop
jb
push
inc
ret
adcb
lea
dec
jbe
leave
inc
mov
ror
out
jle
mov
push
push
inc
add
pop
fsub
mov
jne
jb
cmp
int
jl
hlt
mov
lods
cwtl
sub
daa
adc
sbb
les
sbb
push
les
adc
sbb
cmp
in
dec
xchg
test
jnp
adc
repz
aam
adc
pop
dec
dec
mov
inc
rcr
sub
mov
iret
xchg
mov
scas
mov
out
push
pop
lret
or
jge
movsb
repnz
jo
test
enter
fdivrs
lea
clc
arpl
inc
enter
jns
stc
rorb
test
add
subl
pop
sub
jbe
dec
test
mov
pop
loopne
call
mov
dec
stc
xor
test
adc
cmpsl
jne
adc
xchg
push
sbb
jns
and
test
test
aaa
cs
adc
lret
scas
popaw
jnp
pop
cmp
jecxz
negl
testl
stos
mov
cmp
test
cld
xor
mov
push
push
cs
aaa
push
cmc
sbb
cmpsb
movsb
arpl
fildll
imul
jns
lahf
push
es
mov
pop
int
pop
add
es
insb
rcrl
repnz
jmp
shl
in
das
into
out
lcall
repnz
fbstp
add
filds
mov
xchg
outsl
cmp
clc
sub
jge
std
loop
lock
test
es
push
mov
pop
pop
inc
jbe
dec
push
stos
pop
scas
ljmp
and
clc
stos
call
fstp
les
enter
jbe
and
add
ja
mov
fwait
addl
xor
sub
enter
gs
pop
lea
cltd
les
nop
mov
call
inc
cmpl
pushf
xor
jns
mov
mov
jge
sub
mov
mov
mov
xor
adc
scas
stc
adc
xor
popf
ss
cmp
sbb
jne
add
das
pop
fbstp
sub
andl
xor
aad
cmp
pop
outsl
xchg
vaddsubps
ja
xchg
jae
pop
and
aaa
jae
roll
inc
test
out
cmp
cmpsb
adc
jg
iretw
mov
adcl
jnp
in
fidivl
ret
movsb
fdivs
jle
inc
fisubl
jmp
sbb
test
mov
mov
stos
push
ja
jecxz
test
stc
arpl
mov
and
mov
jno
dec
mov
or
dec
cmp
add
aas
out
js
loop
out
sub
pop
popa
add
bndldx
daa
xchg
hlt
mov
cmp
inc
mov
sbb
xor
sbb
cmc
and
aam
pusha
sbb
sub
adc
cmp
inc
cltd
pop
movsb
shll
testb
sub
cld
mov
jne
push
stos
aam
inc
xchg
mov
loope
ficoms
cmpsl
and
inc
movsb
sbb
loopne
fbld
mov
leave
jg
sarb
sbb
cwtl
addl
push
pusha
sbb
mov
jae
fdivs
arpl
sub
inc
sarl
inc
test
xor
bound
rcr
mov
push
movsl
sbb
jnp
fistpl
cmc
popa
add
repnz
xor
movsb
ret
inc
out
xor
sbb
jecxz
shr
mov
sbb
daa
loope
xor
movsb
mov
outsl
cwtl
in
or
iret
mov
std
mov
leave
pushf
mov
lcall
jmp
push
fwait
push
shll
cmp
bound
pop
sti
repz
push
in
in
mov
inc
cs
inc
xchg
ss
std
pop
push
jmp
jmp
pop
repz
dec
fisubrs
rcrb
mov
les
scas
adc
fs
js
subb
outsb
jmp
mov
pusha
adcl
int
pop
mov
and
inc
xchg
call
ss
arpl
or
aad
lret
test
add
sbb
repz
enter
lock
scas
int3
faddp
push
cli
jp
insb
xchg
xchg
mov
test
leave
gs
dec
jne
test
jg
push
sahf
fcomip
inc
frstor
loopne
sbb
fnsave
cmpb
fs
or
mov
arpl
sti
cmpsl
jno
addb
pop
xlat
insb
mov
mov
sub
stc
inc
and
or
xor
vpsubb
pop
arpl
xor
cmp
cwtl
jl
shll
negl
xor
mov
cmp
loope
mov
into
repz
leave
mov
inc
nop
jae
movsl
xor
stc
mov
push
lods
push
add
js
cmp
adc
adc
push
add
mov
sbb
sub
pushf
aad
aaa
jae
pop
testl
and
push
sti
cmc
xor
mov
scas
pusha
inc
push
jmp
jge
push
repnz
in
adc
lahf
rcrl
mov
or
clc
ret
or
adc
popa
arpl
mov
cld
xor
in
pop
sbb
cmpsb
inc
mov
ss
cmp
cmc
or
xchg
push
sbb
testb
or
shrl
mov
lods
push
pop
mov
daa
sbb
mov
loopne
inc
inc
mov
jnp
out
in
mov
pop
sarl
sbb
lahf
xchg
lea
inc
cmp
push
lds
mov
push
out
mov
outsl
xchg
mov
pop
in
lods
pop
jne
fisttpl
pop
int3
mov
dec
cmp
bound
xchg
sti
jo
dec
mov
or
rcl
adcb
add
pop
or
in
scas
sbb
shrb
fildl
pop
outsl
imul
in
inc
and
xchg
repnz
bound
sahf
mov
test
xor
dec
shrb
scas
mov
fwait
mov
int3
jp
push
in
fsubrl
inc
out
aaa
sti
inc
subb
es
jae
pop
loope
aaa
rclb
mov
inc
mov
hlt
mov
pop
xchg
or
out
cmp
pop
jno
cmp
dec
xchg
and
sbb
add
sbb
pusha
jns
pushf
dec
testb
xchg
jnp
daa
stos
dec
inc
push
aad
and
aas
out
pop
loope
mov
ret
xlat
gs
push
push
dec
mov
inc
adc
cmpsb
and
das
es
push
add
xchg
add
mull
mov
cmp
mov
pop
dec
cltd
dec
jp
daa
fisubrl
inc
mov
jae
pop
mov
popf
sahf
call
ret
mov
pop
adc
push
dec
push
or
push
add
cmp
enter
das
sahf
fmuls
jns
nop
leave
adc
stos
out
fucom
inc
jns
loop
in
mov
or
or
jnp
jno
cmp
into
sar
test
add
loope
mov
mov
cli
mov
cmp
outsl
or
inc
add
outsb
adc
xlat
test
cmp
push
sti
in
push
cmpsl
mov
jb
mov
inc
dec
fcmovne
repnz
push
pop
ljmp
mov
mov
lods
xchg
cltd
jl
mov
inc
pop
jb
push
lretw
stos
repz
mov
cmc
xchg
mov
mov
cmp
test
loopne
dec
inc
mov
leave
add
fstpt
mov
adc
pop
cmp
pause
xchg
arpl
ljmp
sbb
fstpt
pop
xchg
fsubrp
inc
stos
stc
jo
cmp
add
les
dec
pop
scas
cmp
xor
dec
xchg
imulb
pushf
jecxz
xchg
stos
loop
pop
shlb
mov
adc
scas
lods
or
leave
filds
fs
outsl
lahf
aas
std
imul
adc
mov
fdivrs
adc
lods
cwtl
adc
adc
add
jnp
jno
test
pop
mov
fisubrs
loop
pop
in
into
ss
icebp
movsb
xor
sub
addb
adc
lret
xor
in
lods
out
sub
daa
addr16
je
clc
sub
push
fistl
nop
cmp
pop
mov
pop
push
xlat
inc
movsb
mov
call
repz
out
jae
xor
ret
push
loopne
dec
sbb
mov
cwtl
and
mov
xor
sbb
cmpsl
mov
xchg
mov
mov
cmp
arpl
es
push
adc
dec
inc
and
sahf
cld
sub
jae
cs
add
xor
push
mov
in
mov
fimuls
mov
or
jge
or
adc
aas
lods
push
jmp
xor
je
pusha
pop
sub
sub
adc
data16
xor
andl
cmp
pushf
pushf
cmp
into
xor
mov
add
push
mov
dec
cmp
add
push
ja
xchg
jbe
out
fs
sti
xor
mov
push
outsb
mov
and
jae
in
imul
pop
nop
ret
ss
ffree
or
insl
into
test
pushf
xor
dec
into
and
lcall
pop
sub
sub
test
pop
sbb
es
dec
xchg
xorl
je
movsl
push
jne
xchg
js
jp
cmp
inc
popa
pusha
jecxz
icebp
mov
cmp
adc
mov
inc
notb
iret
sub
xor
jl
insb
cmp
push
pop
movsb
xorb
xchg
xchg
stos
dec
push
sbb
push
clc
in
stos
lock
jne
in
mov
adc
mov
mov
or
ret
or
ljmp
mov
fildl
dec
in
adc
pop
arpl
push
xchg
negl
push
mov
lods
dec
bnd
xor
lahf
or
clc
es
xor
int
push
in
push
pinsrw
add
sub
jns
rcrb
adc
dec
addl
mov
test
push
jge
lock
cwtl
push
loope
xor
out
mov
mov
stos
pmaxub
aaa
popf
imul
mov
push
jo
cld
dec
clc
sub
mov
das
cmp
pop
adc
and
subl
aaa
lods
push
sbb
hlt
in
repz
decb
out
imul
inc
leave
stos
out
cmp
cwtl
xchg
cli
daa
sub
pop
pop
loop
pushf
mov
dec
cltd
gs
cli
pushf
daa
mov
arpl
push
sbb
fwait
inc
or
out
add
and
xor
xor
imul
fstpl
jp
pop
subb
scas
ljmp
mov
mov
xchg
lock
pop
cmp
pop
movsl
lods
push
imul
jle
stc
test
std
stc
cmc
jecxz
pop
shrb
dec
mov
in
es
or
and
clc
cmp
lret
popa
outsl
adc
and
push
sbb
and
adcb
push
scas
cli
ds
mov
sbb
xlat
or
in
arpl
ds
inc
add
inc
or
imul
jl
in
xchg
cmp
xchg
pop
cmp
jmp
cmp
push
pop
mov
pop
add
jmp
or
pop
push
out
mov
jns
xchg
jo
out
js
inc
dec
cmp
das
popa
bound
pop
jo
or
and
adc
jno
xchg
sbb
dec
movsl
out
dec
into
rcr
cli
xorb
add
les
lret
mov
mov
or
popl
lahf
mov
push
pop
mov
and
lea
mov
mov
mov
jle
cmpsl
aas
inc
jb
push
int
inc
add
xchg
cmpsl
es
scas
pop
imul
mov
aad
xchg
adcb
mov
jp
push
and
nop
outsb
and
cld
xchg
pop
push
xchg
or
mov
cmp
dec
lcall
hlt
push
cltd
int
mov
inc
sbbl
jmp
gs
add
inc
inc
xchg
call
leave
dec
in
pop
cmpsl
pop
ljmp
aad
xor
movsb
jae
pop
jbe,pt
ret
and
sbb
xor
push
mov
pushf
or
pop
movsl
cli
pop
mov
pop
jo
test
ss
stos
cmp
arpl
loope
imul
push
subb
cmpsl
fdivrs
sbb
lods
lock
sbb
cmp
mov
outsl
or
lea
cli
fadds
push
mov
ljmp
incb
stc
int3
sbb
inc
jge
jge
jno
push
jmp
lahf
pop
and
imul
out
decl
es
fmuls
or
cmc
push
pop
push
jecxz
mov
out
and
ds
or
xchg
ds
push
fldl
add
ret
mov
jno
xchg
lcall
lock
incb
cmpsl
mov
les
xchg
ss
pop
ret
adc
jmp
mov
fwait
hlt
pusha
rcrl
mov
mov
sbb
pushf
cli
lds
subb
js
jno
cli
insl
xchg
xchg
push
sbbb
mov
lods
loope
shrb
imul
sub
pusha
push
hlt
jns
fdivp
cli
js
lock
cmp
lret
xchg
mov
xlat
sbb
pop
pushf
xchg
outsl
inc
xor
mov
inc
int3
fistpl
movsl
repz
aam
neg
movsb
dec
dec
dec
gs
adc
dec
fwait
les
inc
movntps
or
pop
and
popf
cmp
mov
sub
out
pop
inc
cltd
fs
imul
sub
xor
push
sub
pop
pop
push
hlt
insb
xor
and
jnp
add
subb
jae
cmc
sahf
outsl
in
push
aas
into
out
insb
into
lea
xchg
mov
add
mov
int3
mov
pop
dec
cmpsb
pop
jmp
pop
pop
aaa
fidivs
mov
repnz
lock
mov
xor
push
and
adc
iret
je
adc
lret
repz
jns
fiaddl
imul
es
add
in
cmp
ret
outsb
add
sbb
or
and
and
bound
adc
xchg
add
jmp
out
jle
mov
and
mov
push
mov
adc
ss
cmpsb
popf
add
fdiv
pop
sahf
adc
cmp
ljmp
mov
jle
lcall
insl
aad
sbbb
and
mov
adc
lret
pusha
repz
filds
and
and
dec
divl
rcl
sub
cmp
cltd
lds
sbb
mov
push
sub
add
insl
mov
scas
aad
mov
je
loop
mov
daa
adc
add
test
int
jo
loope
sub
push
sbb
lret
out
insb
sbb
aam
and
leave
ficoms
jmp
sub
pop
test
adc
das
push
cmp
push
sbb
dec
push
inc
sbb
cmp
sub
ret
sbb
sbb
test
into
lret
imul
jg
pop
mov
addr16
orb
sub
inc
jne
cwtl
cmc
test
mov
popa
test
sub
scas
mov
mov
jecxz
pop
lds
repz
faddl
add
sbb
repnz
dec
fisubrs
push
or
mov
sbb
clc
imulb
aad
dec
push
ret
xchg
jle
push
mov
out
jo
imul
mov
pop
mov
dec
outsb
fs
lahf
mov
aam
pop
test
mov
sub
enter
lock
ss
or
icebp
jbe
adc
push
push
adc
mov
mov
fucom
pushf
inc
push
lods
aas
and
inc
test
cmp
pop
inc
push
dec
push
lods
push
jecxz
adc
fs
jp
bound
movsl
es
lods
jle
lds
jno
aam
xor
hlt
pop
push
xchg
sub
clc
fwait
mov
cmpb
mov
add
jl
aad
dec
add
clc
inc
add
repnz
scas
jle
fiadds
inc
cmpsb
cli
pop
fldl
push
lods
mov
jl,pt
mov
rcll
std
aam
mov
sub
cmp
inc
das
and
imul
addr16
mov
mov
jnp
fwait
mov
dec
cmp
mov
mov
and
push
jmp
loopne
push
hlt
mov
std
adc
test
lods
and
mov
mov
pop
roll
push
mov
mov
out
sbb
lea
stc
xor
mov
mov
jge
movsb
pop
icebp
jge
sarl
mov
mov
cmp
ss
push
aam
xchg
lods
imull
scas
pop
mov
sbbl
ret
in
xchg
xor
jg
mov
adc
mov
rcrb
fcmovnbe
sub
or
int3
add
sub
scas
div
xchg
dec
dec
sbb
iret
int3
je
dec
stc
pop
fmull
push
pop
dec
mov
mov
jp
insl
inc
insb
jecxz
ficoml
cmp
or
fisttpl
sbb
loopne
mov
or
fistps
cli
loope
mov
xchg
faddl
das
and
shrl
imul
or
adc
mov
out
lret
mov
cmpsb
mov
insl
pop
add
shlb
je
in
and
xchg
xor
mov
add
and
mov
fcoms
pop
stos
mov
popf
adc
mov
daa
das
and
xchg
out
or
jmp
xlat
sub
aaa
jbe
push
mov
sbb
pop
add
push
xchg
mov
adc
cmp
add
cmp
movsb
jno
xchg
pop
mov
cmp
movsl
daa
popf
jbe
test
mov
sbb
xchg
xor
call
mov
sub
and
and
iret
scas
mov
ret
jne
adc
and
and
fnstsw
add
jo
dec
and
fadd
subl
fcmovnu
mov
outsl
stos
push
sub
sbb
gs
popa
ret
sbb
push
icebp
dec
test
mov
cmp
stos
std
icebp
sbb
and
sub
sbb
cs
cmp
cli
loopne
popf
sbb
ja
add
lea
mov
jge
imul
xor
lds
add
push
mov
mov
mov
push
dec
xchg
cltd
call
mov
int3
scas
orl
dec
or
outsl
mov
jb
cmp
sub
or
adc
les
stos
out
mov
out
cmp
or
mov
pop
rclb
or
add
pop
xchg
das
dec
adc
aam
cmp
mov
sahf
in
clc
inc
xchg
ret
loopne
out
stos
jg
mov
subb
int
popa
jno
xchg
sub
or
clc
xor
cs
jge
mov
daa
mov
and
leave
pushf
and
in
sub
icebp
cmc
inc
arpl
cmp
fistps
jle
fdivr
sbb
mov
gs
movsb
xor
mov
lock
daa
mov
adc
dec
xchg
sti
mov
xchg
push
mov
add
sub
mov
push
adc
scas
fistl
push
fildll
cmpsb
push
add
or
push
mov
and
mov
push
push
imul
and
fisttpl
adcb
int
cmp
cli
test
pcmpgtd
enter
out
push
mov
mov
mov
xor
notl
shrl
stos
stos
mov
repz
adc
dec
fisttps
ret
add
fs
orl
out
clc
jmp
push
ret
loopne
push
cmp
mov
lcall
mov
xorl
add
shlb
pop
and
mov
sub
scas
popa
or
loop
ret
add
data16
addb
adc
mov
repz
inc
pop
xor
je
push
leave
daa
pushf
mov
pop
mov
fistpl
sbb
cmp
cwtl
leave
sub
mov
idivb
dec
add
and
mov
addb
jmp
and
jge
jle
jg
sar
xchg
pop
mov
jecxz
lahf
sub
adc
cmpsl
movb
mov
stos
inc
loop
push
sub
ret
pop
insl
xor
push
cli
pop
fstl
js
ret
mov
jae
cmp
scas
out
iret
ds
dec
popa
imul
add
or
jl
adc
std
call
lock
and
add
aad
shl
pop
push
clc
in
test
jmp
jecxz
jg
jb
popa
mov
dec
sub
or
decl
sub
mov
mov
add
ljmp
pusha
scas
and
mov
and
pop
inc
sbb
data16
cwtl
sub
dec
mov
cli
ret
lods
movsb
movsl
fisubrl
imul
push
pop
pop
pop
lea
mov
pop
xchg
std
dec
jmp
jnp
lret
fisttps
repz
jns
es
xchg
push
dec
idivl
fidivrl
out
imul
test
mov
mov
cmp
dec
mov
jl
fistpll
jecxz
nop
xchg
lock
out
subb
ret
ficoml
adcb
scas
popa
xchg
cmpsb
adc
xor
fisubrl
lcall
aad
dec
cmc
std
leave
adc
xchg
or
xchg
dec
loop
mov
imul
enter
xor
lcall
jno
imul
rorl
mov
imul
sub
dec
popa
cmp
dec
loopne
and
andb
mov
pop
mov
outsl
and
pop
neg
pushf
cmp
int3
mov
sbb
add
pop
jp
das
lret
sahf
push
lods
das
popfw
push
out
loopne
stos
movsl
pop
dec
std
jle
jge
fisttps
xor
lods
add
or
pop
sahf
and
clc
fisubs
cli
in
fidivs
imul
out
addr16
imul
imul
mov
or
adc
pop
mov
lods
add
fnstcw
cmpsb
aaa
movsl
pushf
adc
or
test
dec
sbb
dec
pop
push
mov
jo
addl
push
or
inc
loop
or
cmp
mov
pop
dec
sub
cmp
inc
and
ljmp
or
xor
pop
xchg
fldcw
movsb
and
pushf
scas
psraw
and
lds
sbb
mov
sahf
or
mov
ret
pop
sbb
mov
bound
jmp
mov
push
nop
push
push
sub
push
mov
sub
sub
mov
repz
clc
push
and
jbe
js
add
sub
inc
mov
mov
mov
das
ret
and
movd
pop
fisubs
std
xchg
jl
and
mov
or
cmp
xchg
mov
ss
inc
notb
in
icebp
inc
pop
inc
pop
sub
or
xor
pusha
fadds
scas
cmp
les
jp
jae
data16
daa
jbe
mov
xchg
leave
loop
or
aas
lods
lret
in
xor
cld
sub
xor
push
in
iret
popf
sub
jp
mov
pop
movsl
push
sbb
aas
rcll
xchg
call
cltd
lcall
sahf
movl
enter
je
and
add
and
cmp
jmp
and
mov
leave
adc
int3
lahf
rcl
mov
push
pop
aam
int3
sub
fwait
jecxz
into
or
cmp
neg
sub
or
popf
jge
mov
outsb
lods
cmp
cmp
dec
and
xor
pop
mov
in
dec
push
mov
adc
cltd
mov
subb
cmp
test
add
or
in
cmpsb
mov
push
xor
sbb
xchg
lret
jbe
imul
shl
push
mov
into
mov
jns
xchg
dec
push
lds
mov
sete
ret
stos
gs
std
loope
pop
or
pop
ja
push
jle
pop
lods
jns
sbb
fadd
nop
or
cld
sub
es
movsl
loop
dec
popa
cs
dec
mov
out
cs
fstpt
jnp
pop
mov
outsl
mov
aas
ja
xchg
fdivs
sti
lcall
fbstp
shlb
pop
lods
mov
xor
cmpsb
test
aad
cmp
jno
mov
adc
js
pop
jecxz
and
sbb
lcallw
nop
pop
or
fnsave
sahf
out
and
leave
push
jb
fstl
out
sub
xor
insb
dec
nop
fwait
push
push
adc
fidivrs
cmp
or
sarl
into
lret
xor
dec
repz
fsts
inc
mov
pushf
xchg
enter
sbb
dec
je
mov
loope
inc
sbb
or
enter
jnp
gs
xchg
loop
jno
pop
add
stc
out
and
jb
ljmp
gs
mov
push
lods
dec
mov
cld
in
dec
cs
lret
lret
fsubrl
push
cli
and
out
mov
mov
inc
movsl
xchg
pop
cmp
push
data16
jmp
std
xor
cld
movsb
jle
leave
mov
hlt
xlat
or
dec
adc
popa
rcl
or
adc
add
dec
cmc
ljmp
out
aam
mov
push
jns
push
das
insb
mov
cmp
jbe
es
xlat
imul
bswap
mov
pop
mov
or
mov
inc
or
leave
je
xchg
xorl
rolb
pop
out
sub
lea
in
jecxz
pop
xchg
lret
imul
cmp
adc
test
push
push
fwait
rep
dec
movsb
mov
pop
scas
and
pop
int
ds
add
or
adc
enter
mov
fnstcw
mov
lds
imul
mov
cmpsl
int
scas
sbb
mov
sub
out
mov
mov
rcrl
mov
gs
sbb
xchg
push
jno
push
push
stos
jno
loopne
loopne
imulb
loope
inc
sbb
pop
pop
cmp
jge
shrb
bound
fisttpll
mov
test
pop
pop
mov
or
sbb
and
js
mov
inc
sub
mov
aas
dec
sub
pop
in
pusha
mov
inc
add
add
in
loopne
mov
mov
aaa
push
mov
add
insl
xor
mov
xchg
xchg
and
aad
inc
shl
push
test
inc
sbb
mov
mov
jmp
ficompl
aad
lods
lret
and
movsb
les
mov
outsb
movsb
or
sbb
cmc
dec
lret
or
cmp
cmp
ret
sub
and
mov
and
inc
mov
sub
dec
xchg
adc
in
pop
mov
rolb
ljmp
js
pushf
or
mov
push
popa
cmp
jae
or
pop
mov
sub
dec
std
lcall
cli
xchg
mov
jo
mov
sub
push
push
xor
xchg
pop
loopne
pop
jnp
lods
or
xor
xlat
nop
into
mov
jno
sub
xor
xchg
pop
push
xor
mov
push
ja
xchg
mov
mov
jle
and
mov
fistl
adc
call
dec
pop
jnp
cltd
push
cmp
xor
inc
out
adc
cltd
aas
fs
iret
jnp
imul
or
xor
xchg
inc
adc
and
adc
mov
inc
test
pushf
push
call
aas
popa
and
std
test
icebp
inc
jb
adc
addr16
test
and
push
mov
out
fwait
pop
dec
sub
jp
in
push
push
sbb
test
xor
mov
enter
cmc
or
ror
shrb
sbb
sub
mov
or
sti
fisubrs
mov
jmp
cmp
xor
cmp
dec
pop
pop
mov
mov
test
xor
loope
inc
mov
xchg
jl
outsl
mov
sub
mov
jp
inc
mov
sub
into
pushf
cwtl
fisttps
jnp
fsubr
aaa
and
sub
sub
mov
int
dec
loop
insl
fnstsw
push
sbb
jb
xchg
mov
mov
mov
getsec
jp
stos
aas
popa
and
loopne
subb
or
sti
popa
lods
mov
jns
outsb
jbe
xchg
lcall
test
dec
xchg
int
pop
sarl
sbb
mov
or
adc
adc
fisttps
adc
push
sub
or
cmpsl
test
pop
ret
nop
fistps
push
mov
dec
sbb
adc
jl
ljmp
fldt
mov
xorb
lret
cmp
dec
dec
ja
pop
je
sub
loope
gs
adc
dec
xor
aad
cmp
add
mov
fscale
push
add
call
sbb
cmp
sub
adc
cmp
cmpb
ficompl
iret
mov
dec
jmp
test
daa
lahf
dec
push
mov
xchg
int
aas
push
cmpsl
frstor
jmp
xor
mov
xchg
les
and
daa
decl
mov
sbbb
into
xor
adc
jb
xor
or
jb
and
jecxz
xor
testb
xchg
in
lea
setge
insl
mov
ret
orb
or
in
xchg
ret
jo
lcall
aam
pop
and
notl
inc
dec
stc
sti
test
and
mov
cmp
bound
adc
mov
mov
and
in
out
push
imul
mulb
inc
nop
adc
inc
adc
icebp
mov
ss
cmp
popa
mov
outsl
mov
mov
dec
dec
lea
fcoml
out
stos
sbb
mov
cltd
adc
adc
out
je
sti
repnz
cmp
mov
adc
push
cmp
popf
cmp
mov
daa
test
dec
push
fs
faddl
push
and
lea
mov
xchg
shlb
aad
pop
and
ret
inc
sbb
mov
and
xchg
adc
pop
punpcklwd
dec
xchg
jb
inc
mov
std
scas
xor
aam
sbb
lds
or
les
outsl
jbe
loopne
pop
or
cmpsb
ret
or
jns
add
call
push
cmp
aas
std
or
insb
fsub
std
and
sbb
cmp
mov
cld
sarb
aad
push
popl
dec
iret
xor
fisttps
movsb
push
icebp
sub
mov
mov
or
outsl
sub
enter
idiv
and
out
loop
pusha
and
dec
jg
pop
or
movsb
fidivrl
sub
cld
xor
pop
jo
sub
sti
sub
out
mov
testl
pop
jecxz
int3
repz
movsl
push
sbb
add
js
mov
jae
xchg
loop
push
lea
ljmp
jbe
stos
cld
stc
add
fcomp
xor
inc
xchg
xor
dec
jp
lods
into
xchg
dec
outsl
push
into
pushl
jne
repz
imul
popf
or
aas
sub
and
sub
cli
sar
xchg
es
or
sahf
sbb
iret
push
inc
out
sub
mov
mov
cmp
loope
and
and
aad
sbb
movsb
addr16
mov
js
xchg
jne
hlt
or
test
cmpb
pop
or
dec
add
and
add
idiv
movsl
es
mov
add
add
mov
jl
lret
xchg
daa
jg
pop
in
outsl
sub
sbb
loopne
mov
sbb
xor
jb
clc
cmp
add
xchg
cmp
mov
cmpsb
mov
sarl
cmpsl
fadd
jmp
sbb
sbb
xchg
jp
add
jb
das
jecxz
js
das
sbb
push
cmp
fidivrs
mov
hlt
push
add
mov
fwait
sub
loope
rcl
hlt
jle
cmp
and
xlat
adc
xor
std
hlt
and
sbb
outsb
cmp
sarb
stc
pop
mov
mov
aas
jmp
and
fnstcw
add
ds
lods
int
jmp
jl
notl
jle
jmp
lret
jecxz
cmp
pop
inc
cmp
jno
insl
mov
mov
mov
and
push
and
mov
mov
dec
shl
add
sbb
loop
mov
mov
mov
cltd
arpl
js
jecxz
fs
mov
mov
stos
fdivrl
inc
push
lcall
test
int3
loope
pop
xchg
sahf
cmpsb
cli
not
xor
repz
popf
pop
nop
fistpl
cmp
push
stos
outsl
jge
lcall
in
icebp
and
sub
lods
pop
dec
fisttps
rcl
sahf
jne
xchg
out
push
jg
xchg
and
insb
subl
shrb
negl
add
pop
push
popa
inc
jg
fdivrs
mov
leave
fnstenv
add
std
lcall
xlat
lahf
test
sbb
ds
xor
shrl
imul
xor
dec
pop
test
pop
testb
fs
movsl
mov
iretw
mov
mov
lods
stos
mov
adc
xchg
pop
lods
inc
lods
push
fcompl
cmp
and
fsubs
add
xchg
fisubs
inc
xchg
add
mov
jmp
add
adc
xchg
insb
inc
or
push
lret
and
dec
sbb
mov
pop
inc
inc
jg
mov
stos
mov
shl
ja
fsin
sub
mov
out
xor
mov
add
push
mov
jb
xchg
push
adc
sbb
out
cmpl
lret
dec
movsb
mov
sub
adc
push
popa
repz
push
and
sbb
sahf
push
fisttpl
xor
mov
shrl
adc
or
jne
push
push
mov
cli
shll
aad
mov
jns
xchg
push
add
jae
pop
lea
xchg
das
fistpl
ja
js
loopne
ffreep
mov
sub
push
dec
push
cli
rcll
aad
cwtl
outsl
int
cmp
ret
cwtl
addr16
pushf
or
out
mov
in
pop
or
repz
sahf
jecxz
lret
mov
lods
adc
lcall
or
arpl
push
push
psraw
loopne
xchg
hlt
push
jmp
pop
addb
aad
push
adc
cld
push
push
jb
movsl
imul
cmp
mov
inc
std
cltd
xchg
lahf
jns
sti
repz
fistpl
sbb
repz
ljmp
jae
sbb
aad
and
xor
xchg
iret
pop
push
dec
in
std
loopne
pop
insb
call
jl
fcoms
pusha
ja
in
nop
loope,pt
stos
lods
mov
push
add
rclb
lahf
pop
aad
sbb
cmp
add
pop
push
test
addl
shll
shlb
lcall
std
adc
inc
lret
adc
cmp
or
adc
int
lahf
jmp
negb
lock
pop
hlt
pop
dec
aaa
and
test
ret
les
jmp
mov
push
pop
in
jae
push
rcll
xor
jbe
or
insb
aaa
popa
jmp
xlat
push
dec
inc
add
mov
pop
xchg
pushf
fisubrl
add
xor
push
or
inc
cmpsl
test
mov
ljmp
push
cs
ljmp
and
sbbl
scas
push
loope
add
subl
imul
lret
push
sbb
shl
xchg
jecxz
lahf
test
scas
fstl
jbe
push
call
jl
push
inc
xchg
repz
push
das
es
mov
dec
pop
sub
adc
sbb
pop
fistl
xor
subb
inc
sub
das
aaa
or
fmull
pushf
pop
or
jne
jle
orb
sbbb
call
jl
mov
insl
inc
or
sub
xchg
cltd
cld
pop
je
bound
pop
je
dec
iret
cmp
bound
stc
push
cmp
sbb
repnz
les
sti
lcall
xor
ja
imul
shrl
repnz
lds
lock
jns
mov
or
inc
pop
aad
lsl
sub
or
pop
mov
push
repnz
stc
dec
mov
xchg
sbb
mov
pop
and
sub
arpl
ret
pop
je
or
icebp
fists
ljmp
movsb
bound
push
lock
hlt
mov
and
enter
add
lahf
hlt
rolb
hlt
pop
sbb
mov
jp
scas
ret
and
mov
xor
push
mov
xchg
add
push
cwtl
sahf
push
enter
cmp
fucomip
dec
pop
aas
mov
mov
je
pop
shl
cs
xchg
mov
mov
lds
cld
xchg
shll
add
mov
cltd
ljmp
pop
lods
mov
mov
sbb
gs
pushf
inc
fst
ror
add
loope
adc
add
scas
inc
pop
and
xchg
int3
pop
mov
jecxz
dec
dec
ret
cmc
pop
and
dec
stos
adcl
pop
or
mov
lret
pop
mov
jns
mov
xchg
notl
dec
mov
stc
add
ljmp
ror
add
xor
mov
jnp
sbb
push
call
and
in
movsl
xchg
scas
xchg
fbstp
xor
xchg
andl
cld
ret
push
mov
jp
outsl
lea
sbb
add
mov
insl
add
addr16
xchg
cmp
mov
aaa
scas
pop
nop
loope
push
in
movl
inc
hlt
pop
mov
adc
arpl
movsb
xchg
aam
or
mov
cltd
lret
subl
xchg
rcll
mov
test
mov
shll
push
out
xchg
xor
ds
jle
mov
subb
mov
mov
lock
pop
scas
jmp
arpl
mov
sahf
dec
push
and
xchg
dec
orb
rcll
adc
or
mov
mov
cmpsl
jnp
jle
outsb
cmc
adcl
fwait
cmp
cs
pop
push
shlb
dec
mov
adc
movsl
sub
jbe
jg
mov
and
mov
ljmp
adc
and
sbb
inc
pop
cmp
aam
push
mov
sbb
add
mov
arpl
xchg
and
lods
jae
mov
pop
push
fisubrl
fstps
das
sub
push
scas
mov
insb
jno
lods
mov
nop
dec
sbb
mov
stos
jl
imul
insl
mov
dec
jb
jns
mov
outsb
jp
iret
negl
aaa
out
mov
xchg
add
xor
sbb
cmc
fcmovu
push
mov
int3
adc
pusha
inc
jbe
mov
and
ret
mov
pop
lds
insl
mov
inc
jle
rorl
fnsave
int
mov
mov
push
adc
dec
icebp
inc
aas
dec
xor
repz
std
fldl
and
jne
and
mov
inc
outsb
stos
mov
inc
sbb
fdivrl
divb
clc
sti
andb
mov
jmp
adcl
push
jmp
movsb
sbb
cmc
cmp
ss
pop
push
pop
decl
cmpsl
fstl
test
mov
sbb
or
xchg
mov
int3
imul
push
aad
dec
lea
dec
xlat
mov
out
push
fistpl
imul
cmovne
sbb
in
dec
repz
scas
and
sub
push
add
jno
sub
cmpsb
and
mov
cmp
sbb
cmp
repnz
mov
in
enter
xlat
add
icebp
or
mov
stos
pop
and
mov
jns
xor
inc
sbb
dec
clc
sbb
mov
mov
ljmp
stos
aas
aaa
test
popa
xor
gs
ljmp
lret
arpl
mov
cmc
push
sub
push
xchg
sbb
outsl
add
and
leave
mov
jae
lock
xchg
pop
jg
test
mov
int3
or
shll
inc
xchg
js
outsb
nop
dec
xchg
daa
ret
test
xor
fisttpll
pop
cld
fwait
cmpsl
fisubl
pop
aad
pop
cmp
push
mov
jae
xchg
insb
mov
aas
dec
sbb
mov
adc
mov
les
test
mov
cmpsb
jecxz
outsb
add
xchg
popf
xor
pop
add
or
sub
cs
add
mov
into
jge
mov
jl
jno
insl
rcl
inc
and
fstpt
xchg
jns
aas
mov
aam
jp
or
aas
push
adc
das
in
cmp
lahf
fwait
xchg
adc
jle
addl
sub
popa
push
repnz
andb
jb,pt
jle
lods
shrb
sbb
imul
push
and
add
in
pop
inc
mov
add
cmp
daa
pop
mov
mov
mov
aam
mov
decb
in
cmp
shll
scas
jge
dec
les
cmp
xor
ret
mov
mov
popf
and
xchg
fidivrs
cli
inc
pop
dec
adc
repnz
into
dec
lret
push
cmpsl
lcall
pusha
lods
sbb
pop
mov
jae
out
cs
movsl
xchg
cmpsl
sbb
jnp
rcr
and
movsb
jmp
or
add
int
mov
ds
shl
fstpl
push
push
rorb
cld
bound
movzbl
scas
es
mov
mov
mov
adc
fwait
rolb
sub
and
cmc
fmull
mov
inc
rclb
lds
fs
jo
std
jl
jae
out
mov
push
daa
enter
loope
outsl
dec
popf
movsb
adc
adc
in
sub
inc
lods
scas
mov
jb
and
xchg
push
out
pusha
cld
cmp
scas
stc
cwtl
inc
out
repz
push
and
cmc
std
lcall
pop
xor
cwtl
jns
lea
or
and
adc
int3
repnz
adcl
lock
adcb
fwait
in
jnp
in
xor
jne
push
pop
aam
push
aad
rcl
fnstsw
lcall
into
inc
ret
orl
or
fimuls
aaa
and
dec
xchg
loope
cmp
bound
inc
and
or
sbb
dec
jmp
clc
mov
mov
adc
lret
in
js
js
xlat
hlt
and
lods
aaa
ret
inc
shrl
xchg
jmp
movsl
mov
jo
xchg
add
or
mov
mov
outsb
cmp
push
pop
pop
xor
cmp
push
or
fadds
scas
leave
inc
add
test
cltd
adc
add
jmp
inc
jmp
cmpsb
stos
das
jno
imul
aaa
stos
push
adc
jno
int3
int3
cmp
jns
iret
mov
push
inc
jae
push
lds
jno
movsb
cmpsl
mov
lea
push
xlat
shll
xchg
jno
adc
mov
sbb
sar
ror
dec
testl
push
ret
xorb
xchg
and
pop
mov
in
leave
and
adc
cmc
push
xchg
jge
imul
in
stos
sub
fs
sub
icebp
es
xor
mov
je
sbb
mov
pusha
xor
je
outsl
cmp
pop
adc
xor
cli
lea
cs
sbb
mov
xor
jle
lea
fstpl
mov
fiadds
fbstp
xchg
mov
jns
mov
inc
clc
inc
cwtl
pop
sbb
scas
ljmp
push
push
movsb
ss
scas
stc
adc
xchg
cld
and
rcll
pop
cld
jge
ret
mov
mov
sub
jmp
lock
xor
sbb
fsqrt
xchg
push
xorb
call
xlat
jg
sbb
outsl
dec
sub
lea
mov
ja
popa
pop
mov
fld
fwait
sub
rorb
jb
jle
sahf
xor
xchg
xchg
pop
or
xlat
outsb
sahf
pop
pushf
icebp
dec
in
scas
add
inc
pop
cmpsl
xchg
inc
dec
and
in
repz
testl
sti
aas
mov
enter
add
ret
fwait
mov
es
cltd
dec
add
or
sub
push
add
subl
jno
sbb
popa
test
imul
sbb
cmp
push
inc
repz
inc
xchg
clc
inc
ja
xchg
push
push
fsubl
mov
bound
mov
mov
mov
mov
xor
es
ja
inc
or
and
imul
inc
adc
repz
rolb
cs
aad
pushf
lret
adc
je
mov
stc
push
aas
xchg
cmp
cmp
test
pop
adc
imul
stos
addr16
cmpsl
mov
inc
sbb
andl
xor
and
sahf
ret
adc
adc
punpcklbw
clc
ja
roll
lods
push
pop
pushf
sub
inc
dec
xchg
fistl
mov
jle
mov
rcrl
push
bnd
aaa
pop
nop
aaa
mov
jmp
adc
push
adc
psrlq
ja
ljmp
xchg
push
dec
loop
mov
lea
popa
mov
or
std
leave
aaa
fisttpl
pusha
adc
cmp
int
repz
sbb
sbb
dec
scas
cmp
cli
sub
or
xchg
popa
pop
ja
ficompl
cmp
sub
mov
add
repnz
push
int3
inc
not
xchg
or
repnz
popf
inc
cmpsb
xor
sub
sub
sahf
mov
mov
imul
mov
push
pop
daa
stc
jne
dec
inc
js
push
sub
mov
sarl
das
rcrl
pop
push
ljmp
aaa
xorl
dec
cmp
test
mov
fisubrs
mov
adc
push
jne
pop
das
xor
mov
in
popf
inc
loop
cltd
in
cs
pop
inc
imul
insb
add
xor
sti
mov
pop
mov
popf
setnp
mov
inc
cmp
popa
add
jge
or
hlt
fmul
fcompl
mov
fistpll
fs
and
das
and
mov
add
lahf
fsts
lea
jle
insb
mov
mov
cmc
xchg
ficoms
sbb
mov
test
test
lea
cmp
repnz
jmp
fsubrl
mov
mov
das
stos
jo
mov
mov
xor
in
lods
xchg
outsb
out
or
push
push
out
or
imul
kmovw
inc
in
and
xchg
hlt
lcall
insb
test
jl
xchg
stos
insl
mov
js
fsts
and
jb
icebp
xor
cmp
aad
shrl
adcl
bound
stc
sub
push
pop
bound
ret
outsl
cmpsb
mov
cltd
test
and
jg
dec
and
inc
aas
sarb
daa
dec
sub
iret
add
roll
scas
aas
mov
shll
mov
push
dec
in
dec
sbb
icebp
push
sbb
inc
nop
cwtl
stos
insl
cwtl
xchg
and
ret
mov
dec
ja,pt
xor
push
nop
xchg
je
test
jle
adc
jbe
pop
mov
ds
aam
and
lds
mov
or
aas
mov
mov
mov
push
pop
int
inc
xchg
add
scas
push
mov
and
jnp
add
sbb
divb
adc
test
xchg
mov
iret
jns
shrl
fildl
xor
movsb
aam
jnp
mov
outsl
ds
mov
jle
lods
iret
in
mov
sub
jnp
push
sbb
dec
add
je
insb
inc
push
adc
notb
sub
jp
adc
icebp
push
push
mov
mov
pop
in
xchg
push
mov
fimull
pop
pop
jb
jne
or
outsl
pop
add
push
lds
mov
jg
lds
scas
jl
ja
ret
sbb
mov
into
test
mov
mov
adc
sub
mov
inc
and
es
enter
jg
adc
leave
cmpsb
outsl
lcall
xlat
loopne
dec
push
call
cmp
ja
lods
inc
fs
jg
repz
mov
arpl
mov
adc
mov
adc
js
js
xchg
xchg
nop
loope
iret
nop
lods
push
enter
mov
aaa
mov
sub
imul
mov
out
aad
or
push
mov
lcall
xorb
jecxz
add
lock
push
lcall
insb
jb
loope
ds
pop
inc
std
mov
scas
shll
mov
lret
jecxz
inc
cmp
int3
enter
rorl
in
jp
mov
jecxz
sbb
scas
insb
stc
sbb
mov
and
cmp
jge
cmp
jae
hlt
jb
cmp
and
cltd
shlb
mov
add
pushf
jno
jl
sub
andb
cwtl
icebp
sub
or
add
dec
ret
outsb
fcoms
mov
data16
and
pop
decl
aad
ss
aam
inc
mov
mov
shl
out
push
cmpsb
mov
sti
sub
repz
dec
scas
push
out
rcrl
mov
xor
jnp
outsb
push
inc
movsb
inc
cld
mov
cmp
lret
pop
and
ret
repnz
lock
inc
dec
insb
add
inc
sub
test
enter
dec
lret
inc
loope
loopne
cld
cld
js
adcl
ja
sub
mov
mov
mov
lret
fildll
aam
jae
mov
aas
ret
lock
inc
ja
es
pop
dec
push
les
adc
lea
jmp
ss
mov
dec
js
movsl
shl
xchg
adc
insl
test
inc
repz
push
jl
push
mov
in
pop
leave
add
pop
in
daa
aas
push
dec
loop
jecxz
and
imul
jne
sbb
xor
push
mov
mov
js
xchg
push
pop
add
das
into
push
mov
jns
dec
or
ja
scas
jle
sub
inc
inc
iret
mov
sahf
fwait
fwait
daa
push
imul
mov
push
mov
stc
enter
in
cmp
test
dec
aas
pop
push
dec
clc
adc
mov
imul
lea
sbb
enter
add
ficompl
sbb
and
push
mov
aam
dec
adc
cld
sub
xchg
xor
roll
bswap
enter
out
in
cmp
nop
or
cmp
lahf
lahf
cmp
in
fbld
cs
jne
cmpsl
into
popa
repz
pop
xorl
das
fisttps
xchg
out
adc
hlt
pusha
outsb
mov
hlt
aas
or
jae
sbb
enter
cld
bnd
int3
lcall
push
popa
pop
fsubr
lret
mov
icebp
nop
icebp
je
aas
cmp
xchg
or
cmpsl
pop
cmp
aad
faddp
sbbl
mov
fiaddl
add
test
fisttpl
je
push
movsb
jnp
pusha
mov
popa
push
negl
nop
xchg
xor
xor
call
ret
jmp
outsl
or
sub
clc
imul
or
push
lods
lods
lret
fldt
sbb
xchg
pushf
mov
bound
jle
mov
jp
hlt
movsl
data16
lcall
fiaddl
inc
adc
pop
nop
lock
cli
cs
xor
sbb
push
ret
jle
cld
iret
insl
jne
xchg
out
jge
or
push
push
xchg
fsts
dec
xor
outsb
dec
mov
stc
dec
test
sbb
movsl
hlt
xor
lcall
cmp
jb
adc
mov
dec
mov
add
xchg
dec
das
sarl
inc
push
pop
pushf
push
mov
adc
out
sub
jge
jb
push
shrl
jbe
test
fbld
mov
add
ret
mov
push
cmp
clc
int3
ljmp
sbb
mov
sub
enter
mov
imull
and
inc
and
ss
mov
adc
xchg
push
insb
xchg
ret
popw
lods
test
call
mov
and
sbb
mov
call
xchg
or
mov
rcl
clc
mov
mov
inc
das
stc
int3
jmp
les
or
pushf
test
repnz
out
mov
mov
mov
adc
sbb
lahf
dec
ret
or
arpl
jnp
dec
out
and
js
dec
in
cli
fwait
jo
mov
add
inc
adc
nop
adc
or
add
nop
mov
out
mov
xchg
loop
mov
es
xchg
scas
in
xchg
push
sahf
stos
imul
dec
mov
and
cmpl
ret
cmp
sub
out
imul
into
xchg
or
out
dec
in
sti
mov
inc
test
push
xchg
movsb
push
inc
xchg
insl
out
or
cmp
pop
mov
sub
and
lret
sub
jbe
int
cmp
mov
sub
sbbb
sub
sbb
iret
fst
dec
lea
sbb
add
fstp
addr16
push
adc
dec
pushf
sbb
hlt
jl
cmp
loop
pop
enter
xchg
push
or
jp
shrb
push
movsl
push
and
ljmp
or
push
ffree
cli
xchg
mov
lock
insb
les
push
mov
aas
loopne
flds
cmp
sbb
daa
negb
test
pop
icebp
call
sbb
ljmp
pop
cmp
sub
in
sahf
jo
adc
mov
aad
pop
movsb
int
out
rol
loopne
adc
loopne
jp
adc
mov
scas
cwtl
mov
iret
nop
lahf
pop
jnp
sbb
or
shll
mov
fwait
mov
mov
cld
cltd
rcrb
mov
test
mov
push
clc
repnz
or
mov
cld
pushf
cmpb
scas
scas
inc
dec
jno
adc
scas
jle
cmc
mov
fcomi
call
mov
fwait
inc
adc
jle
fisttps
es
push
nop
orl
mov
cli
mov
xchg
cmp
inc
mov
mov
mov
sbb
jmp
cwtl
into
cs
push
inc
addr16
ja
pop
outsl
jbe
dec
aaa
jo
xchg
cli
sbb
andb
into
leave
icebp
xor
in
inc
mov
nop
add
mov
mov
stos
and
cmpsl
bound
dec
rcrl
cmp
add
mov
pop
loopne
out
xor
std
xchg
cmp
push
ret
test
fwait
in
jbe
test
push
je
adc
jb
stos
je
sbb
imul
inc
xor
adc
jbe
fdivrl
ljmp
jnp
pop
stc
adc
sbb
jle
jle
aas
in
popf
aas
and
cmp
push
fbstp
inc
lock
mov
sarb
xchg
ret
fldl
test
push
jne
mov
daa
aam
push
in
js
into
pop
lret
lret
insl
gs
cmp
pop
inc
xlat
cmp
xlat
loope
out
pop
aaa
mov
pop
outsl
jns
xchg
sbb
cmc
les
sub
cmpsl
stos
stc
dec
insl
add
test
sub
mov
repz
mov
jle
or
inc
xchg
pop
cwtl
mov
jge
push
sbb
out
xchg
adc
rclb
jno
xlat
mov
stos
bswap
out
xor
push
sub
movsb
subl
iret
in
loop
sub
addr16
cwtl
mov
dec
mov
dec
std
sub
inc
and
cli
aam
lahf
xlat
shlb
int3
cmp
out
mov
and
jnp
adc
clc
mov
push
cmpsl
ror
ljmp
daa
pop
jge
cltd
xchg
jp
sub
or
pop
icebp
loop
std
mov
lods
jnp
je
repz
pop
jp
push
out
clc
and
sbb
dec
push
mov
mov
or
adc
pop
dec
dec
popl
or
ficomps
hlt
xor
popa
les
mov
xchg
cmp
or
jne
sub
cmc
movzwl
sbb
pop
mov
dec
loop
divb
stos
dec
pop
rolb
cmp
filds
add
daa
mov
mov
mov
dec
inc
jl
enter
dec
push
popa
inc
aam
inc
push
pop
xor
jbe
mov
sahf
pop
mov
pop
push
inc
fwait
adc
leave
dec
inc
sub
adc
ljmp
test
lret
mov
ret
cmpsl
xor
ret
js
sub
int
scas
sahf
inc
stc
jne
cmp
nop
popa
aas
dec
mov
fistpll
mov
push
push
aas
sub
pop
into
movsb
adc
aad
rcr
push
in
insl
int
fcomp
mov
pop
xchg
add
lds
add
xchg
fdivrp
or
mov
xor
mov
fs
jecxz
out
jmp
adc
adc
dec
mov
scas
ror
xchg
cmpsl
xchg
jge
mov
out
shl
mov
popf
mov
repz
testl
iret
pop
mov
sub
xor
cmp
xor
adc
mov
cs
push
pop
fcomps
pop
mov
loopne
mov
les
pop
sbb
pop
push
les
adc
fldl
or
mov
jo
je
in
pop
data16
jb
mov
sti
mov
push
js
mov
mov
jb
xchg
in
pop
fildl
mov
mov
sub
test
fists
js
or
sub
push
xchg
scas
mov
mov
cs
das
sbb
ljmp
mov
loope
jp
test
inc
fcoml
insl
repz
mov
jne
arpl
sar
jle
addr16
xorb
cli
rcrl
push
and
movsb
sbb
aaa
lea
inc
imul
xlat
sub
loop
ljmp
lcall
jb
data16
jg
add
adc
mov
cmp
or
rcll
mov
mov
pop
dec
fs
jae
dec
sti
inc
cwtl
cmpsb
bound
gs
and
adc
rcl
sti
cmp
pop
sub
test
adc
or
imul
mov
mulb
fidivrs
mov
cmp
push
repnz
test
repz
pop
je
mov
xchg
dec
mov
jecxz
repz
cld
xchg
fs
push
jns
fimull
out
dec
js
ss
xchg
out
jnp
inc
lret
cmc
ljmp
cmp
ja
mov
xor
xchg
jbe
push
mov
aaa
mov
rcr
push
fs
cld
inc
call
sbb
hlt
das
rorb
in
cld
repnz
or
test
push
pop
jle
mov
andb
out
ja
pushl
ljmp
pushf
or
rcr
xchg
fldl
xchg
or
mov
scas
pop
loop
add
lahf
pop
movsb
addr16
out
sbb
enter
fucomip
mov
jg
sub
fwait
rolb
pop
dec
jge
pop
xor
push
mov
imul
or
xor
sbb
lods
xchg
icebp
cltd
mov
and
mov
sbb
dec
or
aad
aas
scas
cmp
pop
mov
xlat
adc
or
add
jp
push
sub
xchg
pop
sbb
and
adc
xlat
inc
shr
sbb
xor
scas
stos
and
test
cltd
fisubrs
push
inc
jmp
mov
incb
fidivl
mov
sbb
in
test
pop
stos
jecxz
or
or
std
mov
divb
aaa
orl
ds
adc
in
inc
jns
clc
les
cmpsl
cmp
push
adc
sub
std
mov
cmp
sub
mov
jb
fcmovnb
ja
adc
mov
std
push
popa
pop
rorl
or
xchg
out
push
stos
pop
pop
pop
sub
stc
fcom
imull
cmp
insl
mov
jbe
dec
in
or
and
repnz
movsl
ror
outsl
ficoml
dec
pop
mov
fnstenv
push
fisubl
fldcw
mov
pop
mov
and
insl
insl
ljmp
xor
sahf
jnp
sbb
data16
add
xor
outsl
mov
out
fsubp
xor
fsub
notb
sbb
cmpsb
mov
mov
daa
pop
iret
lock
sarb
filds
sbb
sub
and
fisubs
aam
pop
dec
mov
pop
and
sub
adc
dec
das
hlt
stos
mov
or
mov
ljmp
xor
mov
repz
test
test
xchg
xor
iret
lret
mov
and
dec
pop
ret
sub
outsl
lods
pushf
jp
imul
adc
popf
mov
add
inc
or
sbb
lcall
ret
repnz
sub
inc
or
gs
dec
ret
das
pop
xor
xchg
xchg
stos
jmp
rcrb
or
mov
mov
or
insl
push
mov
jmp
das
jecxz
sti
cmpl
mov
add
and
push
lea
xchg
lock
pop
or
and
push
imul
arpl
nop
and
ret
cmp
adc
or
adc
jge
push
cltd
int
mov
mov
jnp
pop
stos
in
ds
mov
mov
in
leave
in
and
sbb
jecxz
xchg
mull
xlat
fnstcw
jge
aad
dec
lods
sahf
adc
and
nop
or
loopne
das
lret
sahf
xor
cmp
jp
rep
cltd
jb
ja
jle
ss
test
popa
cmp
push
call
adc
lcall
xchg
jb
jecxz
clc
xchg
jno
pop
or
scas
sub
cmp
pop
scas
jne
add
pushf
sub
mov
pop
int
mov
mov
mov
push
ds
push
mov
lcall
mull
mov
mov
inc
inc
push
fidivl
insl
vaddsubpd
ret
int3
lea
and
mov
cmp
shl
cltd
xchg
or
sub
xchg
push
jno
lods
adc
sbb
sub
cmp
orb
or
icebp
cmp
cmc
sub
fimull
push
jl
cmc
aam
hlt
mov
xchg
mov
mov
or
push
mov
rcrb
mov
pop
ret
lcall
cmc
cmp
jb
test
xor
js
hlt
outsb
sbb
pop
add
stos
stos
pop
stc
mov
xchg
xor
mov
je
call
clc
sub
xchg
mov
pop
and
das
add
inc
jge
push
movaps
adc
mov
jb
test
and
dec
test
sbb
adc
xchg
insl
pop
ds
stos
jmp
fimull
das
lret
mov
dec
sbb
add
bound
mov
mov
mov
push
jo
push
add
mov
mov
sub
mov
mov
jo
xchg
xchg
jmp
cltd
adc
xor
nop
xchg
jnp
cmp
or
call
dec
inc
xor
int3
jl
inc
aad
mov
fdivrl
data16
push
aam
jge
int3
push
mul
ret
sarl
or
jne
or
lcall
add
adc
mov
jo
adc
jbe
sbb
sub
repz
jns
dec
xlat
insl
in
clc
sub
mov
xor
fdivp
or
jmp
push
adc
add
xor
mov
sub
lret
xchg
sbb
xchg
mov
neg
rcrl
call
dec
in
inc
xchg
int3
cwtl
mov
sbb
mov
ja
or
jb
or
inc
pop
rol
mov
push
pusha
push
sub
insb
jns
notl
popf
out
repnz
leave
inc
xchg
or
sarb
mov
ret
xchg
lret
jle
and
loop
mov
out
popf
adc
or
jmp
sahf
mov
fdivrs
test
sub
and
cltd
cmp
call
bswap
imul
scas
or
ret
mov
jl
push
pop
cmp
cli
addl
add
andb
xchg
lods
cmp
push
push
loop
imul
fcoms
cs
sbb
ffree
inc
cmpsb
lcall
insb
stos
sub
sub
mov
jbe
dec
rorl
push
mov
data16
add
addb
out
pop
cmp
cld
sub
shlb
testb
insl
inc
lods
or
into
ljmp
aam
fdivl
jno
lahf
and
cltd
mov
mov
pop
out
fisubrs
push
push
pop
rclb
insl
into
jae
add
dec
sub
sahf
sub
lret
lds
sti
lcall
stc
fsubs
loopne
xor
xchg
enter
arpl
loope
cmp
rorb
push
mov
lock
fadds
shld
mov
icebp
pop
fstp
test
cmpsl
push
stos
ret
gs
xchg
xchg
and
fbstp
mov
pusha
adc
mov
mov
adcb
inc
jmp
xor
arpl
shlb
leave
test
add
push
and
mov
sub
imul
ja
mov
pushf
adc
pop
push
mov
and
push
mov
mov
cs
inc
rcl
jp
push
cmp
ficompl
dec
loopne
xor
jl
mov
jg
sub
and
pop
aas
cmp
mov
popf
xchg
and
pop
xor
sub
cmp
movsb
in
test
sahf
jg
lock
fsubrp
out
add
ja
mov
mov
and
lods
pop
lods
inc
pop
adc
adc
push
add
int
ljmp
mov
mov
and
sahf
movsl
fstpl
jne
mov
xchg
mov
inc
cld
and
xor
ficoms
lcall
pop
out
pusha
add
pop
xor
icebp
popf
sbb
pop
ret
push
jb
clc
cmpsl
xchg
stos
and
rcrb
das
and
and
movsl
in
mov
mov
adc
push
ja
into
adcb
in
xchg
lahf
push
dec
mov
inc
mov
sbb
dec
xchg
pop
or
std
or
sarl
lret
leave
aas
lods
push
loop
pop
mov
pop
lock
sub
mulb
cmp
into
sarb
out
dec
repnz
or
xchg
xchg
js
cmpsl
mov
dec
cmp
clc
les
dec
cli
mov
dec
pop
in
or
mov
xchg
mov
ljmp
push
testl
jno
xor
ja
daa
es
inc
add
in
cld
push
mov
push
icebp
inc
fmuls
mov
xor
out
mov
sarl
jno,pt
sub
inc
pop
pop
loop
jbe
sub
or
es
lods
jp
sub
addr16
hlt
pop
fs
shll
and
dec
pushf
inc
hlt
pop
mov
xor
cmp
cltd
clc
sub
xlat
repnz
shlb
popf
cmpsl
clc
int
xchg
rorb
stc
sbb
imul
bound
cld
jo
jl
and
lcall
insl
outsl
repnz
xchg
icebp
mov
push
rol
push
inc
mov
negl
mov
sub
icebp
add
inc
jle
loopne
aas
ds
mov
fdivr
stc
jge
sahf
jbe
pop
jge
lret
inc
xchg
in
push
and
cmp
imul
sbb
fwait
mov
or
out
fnstsw
sub
stos
cmp
sub
dec
inc
adc
movsl
inc
mov
test
stos
add
inc
adc
arpl
js
test
push
xor
xchg
xchg
push
mov
push
xchg
dec
inc
ret
dec
int3
mov
jge
xchg
rcl
sbb
lret
repz
mov
sarl
sub
rcrb
jl
mov
pop
daa
dec
xlat
dec
clc
add
aas
xor
popf
dec
push
insl
dec
inc
out
adc
popf
fs
aaa
cmp
mov
mov
adc
mov
outsl
jno
in
inc
into
andb
adc
out
bound
jg
popa
or
adc
imul
cmp
add
imul
mov
out
xchg
xchg
cltd
jb
daa
add
lods
das
sub
pop
adc
adc
arpl
xchg
mov
jle
lret
mov
movsl
imul
scas
insb
cvttps2pi
repnz
adc
jmp
repnz
addb
add
cmp
xchg
mov
call
out
mov
subps
test
dec
inc
mov
jbe
mov
add
test
mov
popf
sub
call
lods
dec
xchg
push
je
or
lahf
cmpsb
sbb
jg
leave
add
add
cmpl
repz
push
int
out
xchg
je
sahf
add
aaa
dec
stos
push
sbb
out
mov
push
orl
add
popa
loope
shll
cwtl
mov
and
mov
adc
es
movsl
cld
push
xchg
andl
mov
cs
jns
and
lret
cmpsl
es
fwait
mov
clc
jle
ja
out
sub
or
sbb
sahf
out
pop
ja
imul
push
sbb
mov
fbstp
and
push
pop
or
outsb
and
in
movsb
addr16
testb
cmpsb
dec
push
fldcw
push
or
das
jbe
jo
mov
push
daa
pusha
mov
ror
sbbb
jmp
jnp
inc
lods
mov
mov
add
dec
iret
aad
push
cmp
adc
repnz
test
pop
popf
popa
add
mov
dec
mov
jbe
test
cmp
dec
push
and
je
aas
adc
pop
rclb
or
mov
int
pop
leave
and
xchg
inc
ficomps
jmp
jno
add
mov
rolb
test
sbb
popf
test
add
jecxz
mov
lds
pusha
mov
pushf
cmpb
popa
das
mov
movsl
lret
inc
lret
and
mov
xchg
test
aas
inc
testb
test
enter
inc
and
das
dec
ret
repz
out
jb
rcll
aas
adc
iret
out
daa
imul
dec
mov
imul
xchg
les
pop
hlt
adc
dec
cmp
push
ds
sbb
daa
shrb
pop
imul
and
push
gs
popf
cmc
mov
imul
shll
clc
aad
jmp
xor
js
or
dec
gs
mov
into
sbb
pop
ret
pop
icebp
push
cmp
cld
jb
icebp
jg
cmp
gs
pop
pop
dec
cs
push
fstpl
push
xchg
call
js
adc
std
cmp
sbb
jns
fs
dec
inc
loope
sti
mov
addl
dec
ficoml
jg
icebp
or
int3
test
inc
xchg
mov
inc
inc
fcoml
adc
fisttpl
jg
sbb
xchg
dec
and
inc
pop
test
xor
or
adc
sub
adc
sbb
pop
xchg
jmp
in
addr16
loop
adc
fadds
imul
sbb
iret
dec
fnsetpm(287
adc
ss
sub
jns
or
movb
mov
jmp
test
fldcw
lods
imul
mov
scas
cmc
pop
push
js
cmp
insb
jle
inc
enter
mov
lahf
cmpsl
out
sub
sbb
push
stc
mov
add
lahf
mov
pop
push
fnsave
lods
stos
push
stc
pop
dec
push
jae
sahf
test
sti
js
imul
frstor
shlb
not
sbb
test
sahf
lea
mov
cmp
mov
pop
cmpsb
xchg
andl
jg
cmp
dec
and
dec
push
dec
add
outsl
add
into
xor
jle
cmpl
lods
lea
push
insb
imulb
addl
bound
je
jle
push
faddl
nop
push
aad
mov
testl
cmp
jmp
xchg
pop
ljmp
and
jge
movsb
adc
jb
dec
fcomps
push
mov
pusha
call
ja
dec
cmp
inc
in
fsubrs
and
mov
push
imul
xchg
cmpsl
xchg
mov
xchg
jns
and
mov
mov
xor
sub
aad
dec
sub
fcoml
repnz
inc
xor
or
insl
jne
iret
push
jmp
pop
mov
fwait
push
pop
test
dec
out
mov
loop
jge
mov
ds
xlat
pop
lods
fsubp
int3
push
sbbb
ss
jne
int
and
dec
pop
ret
out
cld
dec
or
sbb
pop
or
jg
jbe
testb
xchg
dec
add
arpl
dec
clc
xchg
and
push
test
cmp
xor
popf
jle
jns
fists
mulb
cmp
xchg
loope
jge
out
js
push
push
fidivl
clc
or
xchg
fidivl
sub
out
loopne
ret
in
and
cld
mov
cwtl
rcrb
lds
rorb
push
loop
lahf
rclb
xor
or
fsubrs
out
sub
pop
cmp
xchg
stos
lock
cmp
sbb
loopne
jp
jne
cli
das
movsb
push
xchg
fisubl
cmp
jl
adc
and
inc
test
and
test
and
das
push
sbb
outsl
mov
mov
mov
test
mov
mov
insl
dec
and
inc
repz
and
cld
in
dec
cli
popf
adc
test
dec
jp
fisttpl
or
movsb
rol
inc
pop
dec
inc
out
push
xchg
jg
mov
movsl
nop
add
stos
scas
dec
sarl
lods
mull
push
mov
sub
adc
lea
test
lahf
mov
pop
ret
dec
mov
into
push
and
or
fdivrs
cltd
push
or
or
lret
pop
pop
push
fbld
inc
dec
mov
fstps
lods
and
jns
sbb
add
xchg
mov
jl
stc
or
add
testb
push
roll
lahf
clc
pop
sbb
xlat
movsl
out
inc
cli
mov
cltd
dec
repz
mov
adc
jg
sub
sub
xchg
lret
xchg
jecxz
mov
icebp
test
push
mov
scas
lret
lcall
push
and
inc
lods
xchg
inc
sbb
jmp
or
mov
or
jno
pop
movsl
mov
andl
mov
cli
loop
mov
rclb
lcall
push
repz
lcall
push
mov
mov
in
adc
aaa
xlat
xor
jo
xchg
popf
cmp
cltd
push
lods
int3
aas
mov
xchg
lret
shrb
mov
or
and
cwtl
sti
push
lock
push
ja
sbb
dec
je
cmpsb
cwtl
incb
mov
aaa
sbb
xchg
jmp
push
popf
mov
out
xchg
push
gs
in
test
shl
push
dec
xchg
iret
movsl
add
sbbl
shll
negl
pop
dec
adc
jne
je
jae
imul
cli
xor
das
ljmp
add
fst
add
inc
frstor
cmp
inc
lahf
repnz
mov
sbb
fsin
inc
lds
jmp
das
pop
stos
xchg
and
out
sti
outsb
xchg
xor
xchg
cmc
mov
mov
push
outsb
sahf
cld
dec
add
dec
sub
jne
scas
test
outsl
mov
hlt
rorb
mov
pop
jne
dec
mov
lret
inc
xchg
in
push
pop
add
xlat
jo
ret
mov
lods
pop
mov
cmp
jbe
jbe
aaa
jnp
mov
icebp
fcompl
pop
cltd
ret
xor
xchg
sahf
mov
jge
cli
ljmp
int
xchg
loop
mov
test
dec
popa
mov
mov
pop
add
lcall
add
jmp
add
imulb
mov
je
shr
or
add
sub
adc
pop
jns
mov
mov
cmp
les
sbb
lret
repz
mov
ret
je
pop
ret
stc
cs
repnz
sub
jmp
pop
add
jle
jp,pn
mov
jmp
mov
mov
bound
mov
sub
call
cmpsb
mov
dec
sbbl
jmp
push
lods
mov
jmp
push
cmp
leave
xchg
xchg
out
mov
xor
lret
int3
push
lds
or
pop
js
cmpsl
dec
jnp
in
jno
aad
push
fnstsw
in
cs
lret
dec
inc
cld
out
shlb
sti
inc
mov
loope
shrl
adc
sti
cmp
lea
lcall
jp
rolb
and
pop
adc
into
sub
or
data16
sub
out
xchg
fwait
mov
mov
pop
sti
out
shl
sti
pusha
cmpsl
jne
dec
pusha
mov
scas
ds
fistpll
push
stos
xchg
imul
push
lret
and
imulb
dec
loope
add
lret
push
add
push
enter
jb
or
das
dec
ret
ret
or
sahf
jg
js
in
cs
into
add
sbb
push
pop
fistpll
push
popa
data16
cltd
inc
jg
fstpl
cmp
inc
jb
add
sbb
pop
lcall
ss
arpl
mov
int
mov
cwtl
mov
cltd
xor
dec
mov
dec
adc
les
xchg
cmp
repnz
dec
ret
out
jae
push
mov
jo
add
stos
jns
pop
rcrb
je
push
xor
sub
xlat
jo
mov
xchg
adc
orb
rcl
adc
flds
adc
inc
pop
xchg
push
imul
xor
imul
xchg
sbb
fsubr
ds
test
cmp
fwait
cmp
mov
loope
add
and
rcr
in
add
arpl
and
fstpl
jg
inc
push
inc
test
xor
stos
fistpll
fildl
int3
mov
pop
insl
das
ret
std
cmpsl
daa
cmp
out
push
test
pop
das
pop
dec
cmp
fsubrl
sub
popf
and
inc
cwtl
popl
std
xchg
pop
mov
lods
daa
rcrl
mov
pop
mov
loope
fcompl
and
mov
pushf
mov
movsl
int3
shlb
pusha
icebp
sub
pop
jge
into
lahf
rcr
jmp
cmc
enter
repnz
and
dec
add
pop
fcomps
or
fdivrs
rcrb
pop
or
xchg
sub
scas
aaa
xlat
outsb
mov
sbb
xchg
and
mov
and
scas
dec
mov
push
and
push
jmp
lea
movsl
out
mov
and
testb
lods
inc
adc
insb
clc
fisttpl
inc
dec
pop
push
fs
sub
cmp
xor
mov
ja
subb
or
mov
aas
ret
inc
int
icebp
jb
add
int
movsb
js
mov
dec
jns
les
in
nop
push
pusha
mov
es
cmp
adc
adc
push
lcall
sub
sub
lock
jno
xorb
cs
aas
repnz
jge
push
pushf
push
in
lret
mov
dec
and
push
jnp
cmpsl
sti
xor
push
lea
sbb
popa
xor
xor
mov
jg
sbb
lahf
flds
mov
jae
fstpt
outsb
out
dec
pop
gs
jecxz
lret
push
add
or
jns
xchg
inc
daa
int
lcall
sarb
lock
pop
dec
adc
lcall
mov
xchg
in
xchg
inc
dec
inc
jl
mov
add
aad
mov
jae
jo
inc
mov
iret
mov
in
rolb
call
out
mov
dec
sub
sarl
je
pop
es
mov
cli
scas
pop
and
rclb
daa
sub
and
scas
or
frstor
or
xchg
cmp
jmp
lods
xorb
jno
clc
outsl
iret
fisubs
mov
insl
jg
pop
mov
je
movsl
cmp
dec
leave
push
push
xor
mov
xchg
xor
das
sub
iret
leave
cmc
incb
popa
xor
std
filds
loopne
dec
out
mov
mov
cwtl
adc
adc
mov
sub
push
sbb
and
lcall
mov
mov
xchg
cltd
fs
stos
ds
mov
imul
mov
jg
inc
mov
daa
jp
lahf
jno
int3
arpl
setae
out
mov
test
scas
sarl
jecxz
mov
cmpsb
xor
in
add
rolb
xchg
ss
add
imul
lods
lahf
push
inc
ss
rolb
incl
mov
stc
and
cmp
cltd
adc
ja
jge
lcall
pop
mov
outsb
or
loope
and
sub
pop
int3
or
test
decb
push
popa
inc
ret
orb
push
cmp
ret
clc
loopne
loope
jnp
in
mov
xchg
adc
icebp
test
dec
outsl
or
or
cmp
add
in
mov
jp
cmc
mov
int3
push
push
dec
pop
xor
orb
decl
sbb
adc
imulb
ss
fs
add
andb
sahf
ret
lret
jge
sarl
add
lods
mov
outsb
pop
xchg
es
sub
and
mov
imul
mov
fdiv
stc
cmpsb
pop
mov
mov
xor
out
cmpsb
repnz
bound
pop
insl
mov
mov
in
mov
ja
outsl
sbbb
xchg
jne
stc
dec
mov
pop
mov
subb
cmp
xchg
jb
mov
cmp
cmpsb
cmp
je
adcb
sbb
xor
into
sti
cmpl
pop
test
fcomps
mov
sar
and
cmc
pusha
fsubr
mov
out
adc
mov
pop
cmp
jmp
mov
add
cltd
std
jp
int3
mov
sbb
addr16
jns
scas
mov
add
movsl
xor
inc
push
xchg
and
mov
mov
mov
jecxz
pop
lcall
repz
loop
push
ss
aaa
mull
push
mov
pop
jg
xlat
lret
cmp
dec
pop
clc
pop
aam
sbb
popf
sub
popf
sahf
rol
outsl
outsl
data16
sbb
imulb
lods
lcall
push
out
adc
fidivs
jne
hlt
pop
sti
xlat
add
mov
outsb
movsl
pop
mov
loope
aam
rorl
arpl
jno
rcr
lea
sahf
sbb
push
jb
cmp
stos
jg
xor
dec
inc
sbb
push
adc
jae
sbb
cmc
sub
and
cmp
add
jmp
std
lret
inc
fldl
pop
mov
pop
or
inc
fbld
insb
sub
imul
pop
out
leave
loopne
xor
jno
inc
notl
mov
cs
outsl
adcb
shlb
out
mov
pop
mov
imul
push
in
cmpsl
mov
adc
lock
dec
movsl
xlat
push
fsub
mov
sbb
pop
adc
add
fists
lret
scas
jmp
pop
lea
pop
stos
push
or
pop
push
mov
insl
andl
out
xor
iret
rcll
inc
inc
scas
mov
mov
push
scas
lea
fdivs
cmc
fdivr
add
adc
push
testl
call
lock
pop
jae
jl
xchg
add
aaa
hlt
jnp
gs
fldl
mov
and
shl
movsb
fimull
mov
jg
pop
pop
fs
daa
jne
stc
mov
xor
in
lcall
or
cmp
adc
in
push
inc
shlb
es
xlat
inc
pop
cmp
imul
xchg
cmpsl
stos
movsb
inc
cmp
pop
mov
xchg
push
gs
pop
inc
sub
xchg
pop
push
dec
pop
pop
ss
fsubrl
mov
test
sub
out
mov
inc
add
inc
inc
jne
stos
cmp
mov
dec
lret
dec
lret
fnstsw
mov
xor
das
sbb
dec
pop
in
int3
pusha
shrb
inc
xor
cld
inc
push
out
adc
mov
mov
mov
not
push
cld
mov
jae
out
push
jbe
jge
adc
mov
and
ret
arpl
addr16
mov
lcall
push
xchg
xchg
mov
sahf
xor
mov
cmp
shlb
ja
sahf
xchg
xlat
mov
mov
mov
sbbb
sub
ror
adc
mov
add
sarl
stc
fdivr
cs
js
pop
xor
test
fmuls
cs
movsl
cmp
sbb
or
fsubrs
imul
xchg
cmp
mov
cmp
inc
lret
or
cmc
pop
icebp
lds
loope
out
ds
fsubs
lods
ljmp
in
mov
push
notl
jg
push
sti
inc
or
roll
inc
nop
push
addr16
adc
and
movsl
sub
fsts
sbb
ja
lds
out
test
xor
cltd
xchg
push
xor
mov
lock
pop
int
mov
push
gs
mov
mov
in
add
jae
add
pop
in
jns
pop
ljmp
mov
dec
jno
push
leave
lea
jmp
mov
out
pop
mov
jg
xchg
mov
pop
mov
pop
aas
xor
jb
sbb
push
mov
loopne
mov
pusha
sub
xor
adc
sub
into
clc
push
negb
xchg
and
ret
clc
dec
rcl
sub
push
push
pop
arpl
pop
adc
cmp
xchg
in
mov
dec
cmpsb
scas
add
mov
xchg
out
gs
call
repnz
pop
subb
xchg
scas
call
jo
mov
mov
loop
add
test
ljmp
outsl
add
adc
outsl
mov
arpl
and
jecxz
mov
jp
adc
mov
sbb
mov
pop
popa
test
out
inc
mov
and
xor
mov
pop
dec
cmp
mov
and
push
adc
lcall
int
mov
jmp
mov
scas
xchg
mov
pop
xchg
and
je
js
and
cmpsl
outsb
movsb
sbb
cmp
fwait
pop
lret
push
or
jnp
push
mov
ror
loope
push
or
lcall
jg
inc
mov
mov
insl
je
sbb
mov
daa
in
cmp
mov
movsl
data16
inc
mov
mov
testl
xchg
xchg
sub
ja
or
popl
ss
mov
je
fcmovnu
out
mov
push
leave
xor
shll
or
addb
lahf
adc
rol
add
or
mov
add
inc
daa
xchg
into
or
dec
rcl
call
jns
in
in
rorb
insb
pop
pop
pop
xchg
fdivl
push
jne
lods
sub
pop
mov
cmp
dec
add
xchg
jbe
mov
aas
mov
aaa
repz
mov
sbb
xor
mov
das
test
mov
push
mov
imul
xorb
lock
mov
jl
pop
push
dec
jbe
mov
push
push
add
mov
adc
ja
jns
ljmp
xchg
pop
push
test
out
push
push
test
mov
xchg
cmp
push
lret
iret
gs
push
inc
inc
mov
jmp
lods
hlt
cmpsl
loopne
mov
popa
popa
aam
push
jp
dec
mov
jp
xorb
mov
sub
aaa
shlb
xorb
xchg
les
pushf
jne
mov
pop
mov
adc
call
dec
inc
mov
cmp
gs
xchg
mov
mov
vmovss
adc
mov
add
push
les
add
mov
lds
clc
dec
xlat
movsb
dec
lea
and
or
bswap
mov
push
outsl
push
stos
mov
test
or
rcl
mov
test
add
sbb
or
loope
mov
and
cmc
pop
sahf
mov
lret
loopne
jne
lret
test
add
cmpl
iret
stc
bound
mov
lods
js
std
fistpll
loope
mov
mov
mov
js
jnp
fnstsw
jbe
imul
jle
roll
out
jle
pop
das
dec
pop
push
mov
or
out
mov
jnp
xchg
fnstenv
aam
sub
aad
test
std
inc
cmp
xchg
jmp
xor
cmp
sbb
cmpl
xor
cmp
popf
or
fnstsw
jnp
mov
pop
mov
int3
and
cmp
push
pop
adc
in
and
pop
add
inc
dec
loopne
imul
lock
xchg
lods
out
out
dec
or
add
cmp
es
lret
adc
mov
sbb
push
int3
xchg
mov
repz
outsl
adc
dec
adc
inc
fs
jne
push
xchg
daa
imull
or
mov
jmp
add
movsb
and
and
push
test
sbb
lods
outsb
sbb
jge
repnz
call
cli
pusha
fstl
push
or
mov
cmp
ficoms
adc
lds
ret
mov
out
xor
mov
xchg
push
or
inc
push
dec
fmull
lods
lds
enter
xor
jmp
xchg
hlt
jle
out
jae
addl
adc
fldcw
lds
sub
jl
xchg
int
movsl
inc
pop
ss
jge
push
add
repnz
pop
sti
mov
aad
stos
loope
jg
cmc
mov
shl
xor
sub
dec
mov
pushf
adc
aaa
mov
mov
dec
mov
pop
pop
aas
out
inc
dec
mov
adc
pop
pop
and
addr16
mov
jmp
cmpsl
add
dec
add
cmp
sti
stos
mov
mov
rorl
xchg
hlt
jo
pusha
add
iret
cwtl
xchg
push
add
test
dec
xlat
std
inc
sahf
inc
popa
cmc
fxch
pusha
xor
adc
cmp
sti
mov
or
je
push
pop
stos
mov
xor
inc
sbb
push
nop
jne
mov
jnp
ljmp
filds
shr
aam
ret
data16
xor
jbe
int3
repnz
inc
pop
sub
in
sub
dec
cmpsb
or
scas
push
sbb
sub
cmpl
into
and
mov
daa
repz
cwtl
push
decb
mov
and
fwait
add
xchg
pop
and
jb
mov
xor
leave
test
stc
pop
xor
or
push
ficompl
nop
data16
rclb
inc
or
and
icebp
dec
sarb
cmp
not
sbb
fs
push
ficoms
hlt
sbb
inc
sub
in
pop
in
inc
femms
ljmp
fiaddl
inc
movsb
insb
pop
aad
mov
jecxz
popf
lahf
gs
jle
lahf
push
sub
ds
es
es
add
aad
or
scas
imul
inc
xchg
sbb
orl
push
pop
or
push
pop
dec
and
insl
and
cmc
fcoms
xor
lret
mov
lcall
cmp
dec
jmp
mov
fmuls
jmp
mov
sbb
xchg
gs
sub
out
test
aam
xchg
test
cwtl
iret
loope
popa
adc
pop
mov
in
inc
mov
pop
xchg
jo
repz
cmpsb
pop
xor
inc
mov
push
and
xchg
pusha
les
push
pop
push
dec
sbb
loop
and
mov
lods
sub
push
dec
mov
xchg
xchg
dec
divb
adc
iret
xchg
insl
repnz
sub
dec
sbb
popa
inc
inc
sbb
xor
lock
in
insb
call
mov
cld
xchg
lock
shlb
movsl
shrb
lods
in
mov
cmp
fisttps
cmp
dec
sub
out
in
out
cmpsl
leave
push
mov
pop
mov
jmp
stos
sbb
inc
and
rcrb
cmp
inc
adc
mov
xchg
es
rorb
outsb
fistps
push
loop
mov
neg
shlb
shll
in
jl
xchg
es
dec
movsb
push
test
xchg
mov
cmpsb
lcall
sahf
div
mov
mov
pop
lds
insb
pop
sar
lods
sbb
repnz
jae
add
mov
into
call
frstor
sub
shrb
xor
mov
push
push
data16
int
cwtl
ret
xlat
jnp
jne
sub
sbb
adc
mov
add
jb
aas
test
inc
lds
adc
jl
pop
ss
mov
ss
in
imul
inc
mov
pusha
inc
jg
mov
mov
insl
fadds
push
dec
adc
jle
mov
pop
popa
ljmp
cmp
inc
cmc
or
jns
rcll
imul
jecxz
mov
pop
mov
hlt
insl
sub
mov
pop
jnp
aas
pop
std
cld
inc
inc
and
in
ret
lds
aaa
int3
es
inc
push
mov
cmp
lods
sbbb
fcoms
or
fwait
xchg
pop
enter
sbbb
jg
js
xor
or
sbbl
iret
xor
mov
mov
xchg
sbb
pop
mov
insb
add
inc
push
fdivr
iret
aad
lret
jmp
mov
mov
mov
add
imul
and
es
outsb
mov
push
je
inc
xchg
xor
leave
dec
sbb
add
movsb
pop
mov
scas
adc
cmp
cwtl
dec
mov
ja
pop
arpl
xlat
jno
xlat
outsb
test
dec
je
pop
mov
push
sub
xchg
les
popa
fdivs
test
fisttps
add
jecxz
icebp
pop
mov
std
les
mov
lret
pop
test
clc
jno
out
and
stos
mov
dec
lds
out
lahf
les
cmp
jno
aas
dec
pshufw
dec
mov
cmpl
pop
adc
xchg
jbe
cmp
and
inc
lds
cld
xlat
ljmp
rcrl
push
cli
daa
or
xor
sub
inc
cmpsb
pushf
cwtl
in
cli
add
or
stos
std
orl
jl
xchg
jae
mov
test
out
inc
mov
nop
inc
pop
fisubs
dec
out
insb
test
rorb
or
sub
or
das
xor
or
adc
filds
pop
push
or
pushf
add
adc
jge
add
push
out
arpl
xchg
push
cmpsb
call
mov
cwtl
adc
mulb
jns
lahf
add
jnp
orl
jns
js
pop
fdivrs
xchg
mov
or
xor
lods
stos
cmp
mov
jmp
mov
push
adc
cmc
imul
pop
ljmp
cwtl
lcall
dec
or
or
lcall
imul
cmp
push
push
cmp
inc
addl
das
stc
jb
imul
pop
pop
adc
pushf
fdivrl
hlt
xor
and
jne
outsl
hlt
jle
mov
lods
shr
push
jnp
cld
adc
jmp
cmpsl
xor
sub
loop
mov
aas
cmp
addr16
mov
xor
or
lahf
adcl
in
xor
ficomps
stos
push
mov
mov
pop
sbb
popa
push
mov
or
xor
outsb
nop
leave
fcoml
sbbl
add
xor
addl
jg
lea
cmp
imul
dec
testb
jp
ss
test
mov
popl
sub
in
inc
insl
push
mov
mov
add
sub
stos
out
ja
inc
xchg
sbb
iret
add
inc
subl
push
push
or
cmpsb
mov
xor
mov
fdivs
push
xor
xlat
lret
out
repz
out
jmp
pop
out
gs
add
call
fnstcw
inc
mov
pushf
ret
mov
fs
and
stos
outsl
loopne
call
sbb
xchg
jns
mov
jge
ds
cli
pop
vpslld
fisubs
mov
mov
and
and
push
ret
add
push
jne
ret
je
lods
ljmp
fs
jo
repnz
mov
bound
dec
pop
pop
sti
or
leave
add
aam
aad
es
pop
jne
dec
lods
int3
arpl
sub
ss
jbe
mov
negl
push
adc
mov
clc
mov
fstpl
inc
bound
or
stos
outsb
push
or
fwait
shll
cmc
iret
dec
unpckhps
pop
xor
add
mov
dec
xchg
dec
loop
ss
fcoml
hlt
inc
imul
push
pop
into
filds
mov
int3
and
xlat
repz
dec
aam
or
dec
and
dec
test
jmp
pop
add
dec
push
pop
loop
jp
push
mov
adc
ds
in
jge
mov
xor
ja
mov
in
xchg
push
jnp
adc
pop
pop
bound
adc
dec
mov
sub
pop
int3
cmp
sbb
icebp
gs
xchg
xor
push
pop
rolb
fs
aas
ja
shrl
mov
xor
shl
push
cmp
or
js
pusha
pop
nop
aad
repz
xchg
shl
repz
sub
and
mov
cmpsb
push
insl
clc
mov
dec
mov
pusha
js
icebp
lds
pop
inc
cmp
push
pop
shl
xor
cld
bound
pop
pop
adc
mov
mov
stos
mov
mov
sti
pushf
mov
lret
test
mov
pop
sub
ja
lods
lods
arpl
sbb
push
testl
add
sarl
push
ror
mov
fsubrl
xchg
xchg
dec
sub
orl
fwait
mov
mov
mov
lahf
dec
sub
xchg
mov
inc
pop
in
lret
xchg
outsb
popf
mov
shl
xchg
je
in
push
mov
and
dec
test
sbb
adc
andl
in
inc
xor
pop
imul
sub
pop
mov
push
inc
or
fs
ljmp
sub
stos
rorb
mov
addr16
add
lcall
push
mov
insl
and
jg
and
and
jle
cwtl
jo
pop
xchg
idiv
adc
rep
aaa
dec
add
aaa
clc
sbbl
and
mov
and
or
push
add
push
ja
repz
or
cmp
mov
xchg
scas
aad
cld
adc
fcompl
mov
sbb
cld
xchg
ds
fs
cmp
nop
dec
sahf
ret
and
jp
rcrl
adc
cmpsl
hlt
inc
adc
lea
enter
outsb
stc
mov
sub
mov
insl
mov
xchg
jb
jb
add
jge
lds
adc
stos
int3
shrb
int3
add
cmpsb
jne
mov
dec
mov
lods
loope
lcall
mov
mov
ret
cmp
imul
stos
cmp
sub
ljmp
jle
test
dec
stos
aad
cmp
sti
inc
rcll
sbb
mov
dec
jge
sarl
sbb
mov
int3
and
fisubrs
arpl
scas
mov
sub
mov
adc
xchg
mov
sub
cld
push
movaps
cmpl
inc
cmpb
test
xor
insb
cwtl
dec
sbb
push
ss
into
adc
mulb
push
inc
sti
sbb
adc
cs
rorl
inc
jne
mov
lods
test
iret
hlt
stos
movsb
mov
xchg
or
mov
sub
inc
xchg
mov
and
ret
sub
pop
cmp
xchg
fcmovnb
pop
imul
and
jp
out
or
daa
notb
enter
sbb
fdivs
pusha
test
push
pusha
dec
inc
sti
aad
gs
cmpb
int
ss
or
sbb
inc
negl
mov
pop
fmuls
iret
cmp
xchg
ljmp
lcall
in
shll
and
mov
lods
mov
test
push
push
mov
rcrl
fsubp
jb
jo
sar
push
mov
test
faddp
movb
push
cmpsl
adc
mov
out
nop
in
jmp
pop
cmp
sub
clc
pop
in
pop
sbb
xchg
push
dec
mov
pop
ret
xor
dec
inc
push
and
pop
dec
imul
sarl
mov
in
jns
lods
lret
stos
in
test
adc
icebp
stc
iret
push
jno
adc
cmp
sbb
sub
mov
data16
leave
lahf
sbb
mov
push
jb
mov
loopne
xchg
mov
push
cld
dec
and
jmp
xchg
popf
cltd
mov
fdivl
repnz
and
xchg
lock
sbb
pop
or
sub
cltd
out
insb
out
les
mov
jne
dec
orl
cmp
jae
and
insb
xchg
notb
ja
outsl
enter
pop
cmpsl
xor
je
cld
shrl
mov
cmpsb
iret
bound
cmp
outsl
fstps
mov
sbbl
call
lock
orb
repnz
jno
cmpb
xor
enter
mov
and
bound
jbe
cs
xchg
ret
mov
je
add
jl
mov
and
mov
xor
sbb
inc
std
les
push
xchg
les
lahf
out
lea
mov
adc
push
lret
lds
adc
enter
jae
jnp
jg
xor
lahf
cmp
insb
xchg
xchg
xchg
cmpsb
dec
push
adc
bound
jnp
fisttpll
xchg
arpl
sub
cmp
sbb
cmp
pop
out
loope
int
stos
fsubs
jmp
das
inc
aaa
jns
outsb
sbbb
push
mov
xchg
inc
mov
jl
pop
push
dec
enter
call
sub
shlb
add
iret
dec
add
add
subb
jmp
sarl
daa
pop
cmpsl
fisubrl
sahf
sbb
jns
push
enter
inc
gs
cmp
mov
push
xchg
pop
mov
jp
repz
sbb
dec
aam
jecxz
mov
lock
jns
jo
xor
mov
fildl
daa
mov
or
fs
xor
mov
sub
inc
add
ret
sub
ror
shlb
pop
repnz
sarb
sub
inc
int
sub
sbb
fdiv
test
mov
dec
cltd
mov
cmp
mov
add
mov
test
popf
pop
mov
mov
push
sbb
imul
in
mov
lcall
push
das
cmc
sahf
in
in
add
add
leave
mov
cmp
dec
inc
adc
int
xlat
dec
push
jp
mov
inc
mov
addb
cmp
scas
mov
scas
loope
sbb
subb
push
into
ljmp
mov
inc
mov
xlat
jle
xor
icebp
cmp
or
rorb
mov
arpl
fisubl
pop
xlat
pushf
pop
bound
jo
ss
dec
test
cmp
jp
add
sbb
push
xor
mov
andl
outsb
mov
pop
pop
orl
sti
inc
and
fucomi
dec
pop
xchg
dec
rcr
in
pop
and
insl
iret
pushf
pop
std
imul
scas
mov
pop
cmp
in
std
push
sub
orb
add
mov
cmp
cld
lods
sub
push
dec
xchg
mov
in
leave
fstpt
mov
xchg
mov
out
add
repz
movb
pop
inc
in
or
aad
cmc
mov
xchg
cmp
ret
fsubl
xor
in
jecxz
fldcw
add
ss
out
icebp
clc
fnstcw
fnstcw
cltd
test
js
mov
xor
into
push
insb
sar
mov
cld
fistpll
adc
inc
xchg
mov
mov
mov
lods
mov
insl
daa
popa
jmp
add
popa
test
sub
or
je
lea
insb
pop
xor
mov
cs
cmp
inc
iret
pop
mov
xor
jg
rclb
sbb
cmp
scas
in
dec
adc
ficoms
add
movlps
lea
sbb
mov
adc
shll
mov
xor
adc
dec
sbb
xlat
push
pop
sub
orb
ja
cmp
mov
int
daa
les
cwtl
xchg
les
xchg
mov
or
int
std
ret
pop
mov
inc
push
push
xchg
lock
nop
dec
into
popa
shll
popf
pop
lods
fcoml
cmpsl
sbb
inc
mov
mov
push
jecxz
xchg
xlat
les
xor
mov
xchg
add
sub
icebp
mov
dec
or
pop
roll
pop
mov
and
imul
mov
fstpl
dec
xor
push
movsb
and
fisubl
fneni(8087
jl
mov
int3
or
pop
into
add
lret
imul
xor
or
push
dec
loop
data16
pop
fcoml
leave
cmpb
fst
dec
movsl
add
loopne
dec
or
jae
adc
sbb
hlt
lahf
das
movsb
cld
imul
sti
test
int3
dec
and
inc
mov
mov
sahf
jp
fcmovnb
ds
jmp
or
movsl
push
icebp
clc
jge
arpl
loop
scas
pop
adc
pop
rcrl
mov
push
repnz
adc
fsubs
iret
sbb
into
pop
xor
dec
jecxz
push
and
mov
outsb
or
ljmp
dec
and
xor
mov
lock
add
mov
cld
in
mov
movl
pcmpgtb
testl
ja
xorb
jno
mov
shrl
add
cs
and
repz
adc
dec
clc
push
clc
push
and
mov
pop
push
adc
cmp
pop
fcoms
inc
out
or
fldt
popf
ret
jae
xchg
push
adc
nop
inc
inc
rcr
mov
inc
dec
mov
push
sahf
or
pop
hlt
or
pop
aaa
and
and
aas
out
sahf
push
inc
lds
mov
loop
imul
sbb
cmp
add
ljmp
sub
xor
mov
or
and
inc
mov
mov
aas
inc
ds
mov
lods
fcomi
fnstenv
cmp
gs
addl
jl
scas
mov
adc
pop
pop
inc
jmp
arpl
lods
pop
or
mov
popa
pop
cmp
add
pop
adc
push
insb
push
sub
and
cltd
mov
and
push
jle
or
daa
pop
or
push
pop
pop
pusha
jp
push
push
jmp
es
popf
shrl
hlt
sbb
call
or
shrb
and
popa
testl
bound
sti
gs
imul
test
cwtl
mov
push
push
adc
dec
out
ret
or
scas
jmp
movsb
test
fwait
cmp
mov
test
adc
iret
mov
jle
cmc
dec
rolb
shl
lret
lahf
pop
and
sbb
jp
mov
pop
sbb
cmp
adc
pushf
mov
jnp
add
aad
popf
push
xor
ljmp
mov
adc
sahf
orb
sti
fldl
outsb
add
notl
clc
lds
out
or
lret
insb
stos
lds
inc
into
das
jge
enter
out
lods
repnz
jne
push
test
push
subb
or
out
add
jle
out
lret
jns
aam
repnz
data16
jo
popf
or
pop
mov
pop
mov
jge
addr16
jp
hlt
clc
popf
jb
inc
aas
aas
test
push
push
mov
cli
dec
mov
int3
repnz
andb
xchg
jne
adc
mov
xor
and
mov
movsb
pop
mov
jb
sysenter
adc
mov
in
push
mov
jo
add
mov
loope
sahf
pop
xor
out
adc
inc
out
test
lea
inc
mov
push
mov
divb
shlb
lahf
call
faddp
insb
das
lds
aaa
inc
pop
js
iret
in
or
cmp
add
add
cmc
incl
jle
lea
clc
xor
cmp
cmpl
mov
cltd
adc
pop
test
xchg
imull
test
and
repz
lods
push
test
and
gs
cmc
rcrb
xchg
jns
dec
push
gs
xor
sub
fs
js
sub
pop
and
pop
shl
push
testl
negb
iret
mov
outsb
and
mov
subl
dec
xor
mov
cwtl
sbb
cmp
push
filds
pop
push
and
inc
mov
or
leave
stos
stc
add
ret
scas
mov
ror
imul
sbb
sbb
xor
fsubrs
add
pop
daa
aad
or
add
inc
div
ljmp
out
jle
push
mov
add
out
fstpt
out
outsl
xor
fcmovb
mov
sbb
and
jns
ss
iret
cmp
mov
lahf
sti
dec
clc
xchg
sbb
and
jg
call
jmp
sub
inc
in
scas
jbe
or
xor
xor
xchg
dec
push
pop
sbb
sbb
mov
repnz
cmp
xchg
aam
decl
in
fdivl
dec
inc
fists
ret
add
popf
push
dec
rol
iret
inc
icebp
pop
mov
aas
cwtl
mov
mov
lods
cmpsl
xchg
xchg
push
sbb
mov
pop
mov
mov
dec
lods
divl
cltd
aam
fxtract
or
mov
movsb
mov
adc
adc
pop
mov
inc
pusha
push
mov
daa
dec
popa
ss
test
je
and
mov
int
sbb
xchg
xchg
push
push
sub
xchg
push
cli
shr
rorb
xor
jnp
add
adc
pop
mov
nop
and
leave
jne
sub
pop
pusha
add
out
mov
xlat
jb
bnd
out
out
xchg
or
iret
mov
outsl
jp
rcl
ljmp
or
stos
or
adc
adc
call
adc
inc
pop
adc
outsl
punpcklwd
mov
cmp
xchg
jmp
pop
mov
mov
xor
shlb
mov
push
call
inc
pop
jnp
std
fstl
cli
mov
push
aam
xchg
sub
push
arpl
adc
mov
inc
inc
aam
aaa
adcl
ja
dec
mov
xchg
push
pop
mov
sbb
xchg
inc
lds
fists
stos
loopne
dec
mov
popf
scas
sub
das
inc
into
adc
cmp
test
stos
arpl
scas
into
aas
je
cld
xor
call
sti
push
inc
push
mov
mov
xor
mov
dec
sbb
mov
scas
sar
lcall
mov
adc
xor
in
and
call
push
cmp
cwtl
call
fbstp
lods
rcrl
xchg
loop
dec
subl
xchg
and
sub
leave
sub
add
mov
fcoms
mov
movsb
leave
jp
insb
mov
pop
cmp
cld
es
push
dec
and
adc
push
bound
mov
loope
or
aaa
add
shll
mov
ss
outsl
sbb
add
push
and
das
bound
addr16
jge
loopne
test
daa
cwtl
fs
push
push
or
cld
into
jmp
test
mov
push
popf
inc
add
out
notb
or
insl
xchg
sub
sti
lods
sub
adc
js
into
stc
push
mov
add
mov
cmc
sahf
jo
jns
pop
jne
pop
hlt
pop
or
shlb
sub
sub
decl
rcl
pop
sub
popf
mov
push
jae
mov
stos
and
mov
mov
inc
rcll
dec
dec
jae
jmp
aam
pop
jae
mov
jne
or
insb
or
fidivrl
aad
mov
pushf
xor
and
adc
xor
dec
xchg
pop
addr16
push
ret
enter
add
sub
jmp
mov
push
sub
push
sar
xchg
jbe
xchg
arpl
jb
jle
daa
fs
mov
icebp
call
push
xchg
out
pop
adc
cmpsl
mov
adc
daa
fsubp
fimull
mov
fnstenv
fwait
rcll
cwtl
lea
jl,pn
sub
aas
sbb
fbstp
or
shll
push
data16
into
arpl
push
je
aas
inc
sbb
jp
testb
pop
pop
adc
push
dec
or
dec
lds
jg
xchg
rcrb
in
dec
xchg
xor
push
xchg
scas
in
js
mov
pop
mov
fidivrs
mov
and
adc
lods
and
jecxz
mov
jo
imul
cli
add
filds
mov
rorl
push
sub
or
imul
mov
jl
jp
fcompl
into
dec
das
jecxz
or
cs
jne
call
and
add
inc
int3
mov
test
lret
jbe
push
mov
inc
arpl
mov
inc
xchg
cmpsl
outsb
enter
mov
loop
xor
push
push
jnp
loop
leave
push
jns
pop
pop
mov
mov
push
addr16
pop
xchg
pop
imul
dec
cli
jne
sub
push
inc
sbb
popl
lcall
jg
inc
imul
xor
dec
cmp
dec
or
mov
mov
add
cmpb
dec
fildl
jge
lods
and
outsb
lcall
daa
lds
push
dec
and
cwtl
clc
popa
push
lock
call
mov
gs
sub
test
adc
adc
sub
push
shr
xor
jecxz
repz
aas
test
rcrl
add
add
les
pop
in
jecxz
jge
push
roll
xor
inc
or
rclb
loop
add
jl
js
cltd
adcl
xor
pop
cli
push
push
mov
pop
xor
test
mov
cltd
push
push
rcll
vunpcklpd
xor
call
mov
jae
mov
shll
mov
sub
lret
out
out
xor
aad
cwtl
mov
pop
sbb
insl
jle
icebp
scas
push
push
aad
mov
das
inc
into
or
lret
xor
jne
cmpsb
sbb
add
imul
sub
xor
pop
daa
mov
mov
sub
scas
mov
jae
sbb
fstl
out
iret
xchg
lcall
cld
dec
xor
dec
sbb
jmp
lods
cmpsl
adc
stos
sbb
dec
orb
inc
cli
jecxz
pop
push
mov
inc
les
sub
sub
aaa
pop
inc
rorb
add
in
enter
cmp
imul
push
ficoml
xchg
rcrb
adc
jnp
dec
pop
cmp
outsl
cmp
push
inc
fisubrl
pop
hlt
out
sub
lods
dec
xchg
movsl
pop
loope
pop
lock
jge
inc
aad
sti
push
push
cltd
in
cmpsb
xor
es
shll
push
push
cmpsl
mov
inc
clc
inc
inc
push
cmc
repnz
insl
divl
mov
cld
cmpsb
outsl
xchg
iret
mov
inc
push
loop
mov
je
inc
roll
push
sbb
enter
ret
clc
stc
clc
cmp
xor
in
jo
pop
mov
mov
jno
xor
cltd
mov
es
adc
mov
cwtl
mov
fs
add
xor
stos
popa
push
cmp
jle
sub
mov
push
int
dec
ucomiss
and
movsl
aas
adc
aaa
cmpsb
jecxz
mov
pusha
mov
dec
push
fidivl
inc
jae
or
out
pop
repz
negl
lods
cltd
xchg
lea
xchg
pop
jmp
ds
call
frstor
mov
push
cmp
testb
or
pop
repz
cs
dec
sub
xchg
rcl
ret
jns
dec
jmp
jle
pop
jns
inc
aas
stos
mull
mov
in
mov
and
or
mov
jmp
daa
ljmp
push
pop
jno
pop
clc
lret
sbb
lea
cmp
mov
xlat
push
call
cmp
loop
outsb
mov
dec
in
das
sub
cmp
push
add
sbb
sub
stc
movsb
andb
leave
xchg
fsts
xor
dec
mov
fucomp
cltd
xor
aas
dec
cmp
lcall
pop
out
loope
add
jp
ficoml
add
stc
adc
mov
loopne
mov
push
mov
add
lcall
adc
mov
mov
sti
fisubs
inc
leave
je
mov
pcmpgtd
cmp
pop
in
out
jmp
dec
pop
xchg
jge
jecxz
mov
sub
mov
xor
cmc
mov
pop
mov
fsts
pop
pop
push
outsl
cli
test
insb
mov
mov
pop
insl
sbb
cltd
int
test
push
push
es
scas
shlb
repnz
xchg
and
inc
cltd
xchg
iret
leave
and
jmp
mov
jp
jecxz
push
int
in
imul
or
fsubs
sti
jge
xor
sbb
mov
imulb
adc
fistl
sbb
lahf
and
xor
adc
pop
sub
ja
insb
sbb
outsb
jns
and
js
leave
sbb
xchg
or
cmpsb
pop
stc
ret
or
sbb
xchg
das
jo
arpl
pushf
jl
sbb
mov
test
leave
arpl
aam
pop
daa
repz
testb
aaa
jns
pop
mov
push
stc
push
xchg
push
jle
aam
xor
scas
and
cmp
inc
sbb
sbb
mov
ret
mov
or
or
mov
sub
cmp
cmp
mov
fiaddl
fldl
mov
and
into
mov
jns
xor
addr16
rcll
sub
jo
xchg
ja
and
pop
add
cmp
iret
nop
shl
std
mov
xor
fcmovnbe
dec
xlat
cmp
dec
sti
sub
je
call
fildll
loope
hlt
xchg
jns
jns
dec
lods
jns
and
movsb
mov
push
int3
ljmp
imul
dec
inc
pop
lret
nop
adc
icebp
flds
xor
sub
bound
cltd
bnd
xor
push
std
xchg
add
sub
inc
pop
xchg
xor
xchg
dec
fs
mov
and
push
cmc
lret
adc
icebp
mov
sbb
stos
jne,pn
fld
rcl
lcall
movsl
dec
cmp
push
std
sub
insb
sub
bound
jecxz
xor
pusha
daa
pusha
int
ret
out
ficomps
jl
push
in
adc
jae
in
rolb
test
pop
cs
mov
jno
pop
cmp
pop
stc
imul
mov
fildll
icebp
cmp
scas
outsl
pop
xchg
int3
cld
xchg
ret
out
stos
mov
ret
push
mov
cmc
xchg
jecxz
adc
dec
int3
inc
mov
cmpl
adc
call
movsl
jb
sbb
leave
js
and
mov
inc
mov
aaa
dec
push
mov
inc
test
fstps
mov
aas
or
fimull
cmpsl
xor
out
imul
shrl
hlt
int3
mov
push
sbb
mov
jb
cli
negb
jmp
testl
pop
pop
les
mov
ljmp
out
idivb
rcrb
data16
cmp
pop
dec
cld
into
out
shl
stos
add
fcom
jle
dec
cmp
stos
or
jl
pop
dec
push
push
incl
ret
jmp
test
mov
lret
movsl
jp
xor
loope
mov
enter
push
cmpb
jne
std
pop
add
or
out
or
lcall
lock
sbb
nop
cmp
rorb
add
pop
aaa
mull
mov
adc
cs
outsl
jno
jo
hlt
pop
lahf
jne
mov
push
push
sbb
inc
jnp
sub
push
sbb
ljmp
je
lret
icebp
ret
sahf
and
xor
in
and
lds
mov
rcrl
das
mov
loope
xlat
data16
idivl
repnz
add
fildl
push
push
or
outsl
es
pop
mov
mov
sub
jge
dec
lcall
push
push
adc
nop
add
cmp
scas
or
mov
and
inc
sbbl
or
in
cld
mov
push
dec
test
pop
ljmp
jle
jmp
stos
mov
sti
and
mov
getsec
pop
shrl
fsubl
jb
test
mov
lds
xor
icebp
pushf
dec
ret
mov
pop
or
pop
mov
das
adc
test
loope
xor
jb
mov
jne
xor
pusha
popf
xor
sti
jnp
push
leave
push
loop
add
addb
cwtl
ret
mov
fsubs
mov
inc
mov
stc
cmp
add
pop
loopne
lods
xor
das
jb
add
adc
outsl
push
stos
es
shll
inc
fbstp
test
jno
data16
fstps
push
sbb
in
adc
fcomps
or
push
mov
mov
loopne
and
stos
test
fcmovnu
sti
stc
ret
imul
or
pop
mov
outsb
and
cld
out
popf
int3
add
lods
xor
sub
std
pop
out
ret
lods
loope
and
push
sahf
push
int3
or
out
cs
inc
xor
cmpsb
es
add
sarb
mov
mov
pop
mov
inc
add
pop
and
jns
int3
test
inc
lret
aaa
daa
pop
mov
movl
sbb
out
sub
mov
jnp
pop
test
and
mov
enter
mov
sbb
test
xlat
mov
push
aam
cwtl
addl
xchg
or
jmp
mov
mov
adcl
insb
out
je
sbb
int3
jg
stc
mov
scas
mov
test
loope
or
enter
jp
outsl
mov
jp
adc
stos
mov
push
xchg
xor
hlt
fisubl
mov
sub
lret
sub
pop
push
fnsetpm(287
push
push
dec
xchg
mov
xorb
outsl
jo
jb
int
xor
xchg
std
add
outsb
sbb
mov
out
cmp
out
adc
mov
nop
fisubrs
adc
cld
push
ds
inc
push
enter
popf
call
or
inc
out
inc
ret
outsb
mov
xor
out
rcll
int
sbb
xor
das
or
inc
icebp
mov
mov
mov
es
mov
push
lds
int3
sarl
pop
pop
jecxz
mov
xchg
adc
out
jae
call
sarb
sti
mov
inc
out
mov
add
adc
test
and
fistl
push
jbe
pop
jbe
sub
dec
ret
arpl
mov
push
rcll
adc
mov
jecxz
pop
imul
and
fiaddl
jnp
mov
shufps
cli
shlb
mov
and
or
push
jmp
dec
je
and
dec
or
push
into
lret
popf
out
pop
inc
clc
cli
jbe
pop
loope
mov
mov
mov
and
lret
or
das
jge
insb
js
and
movsl
std
xor
or
adc
sub
test
mov
xor
cli
lret
dec
ljmp
pusha
pusha
xchg
out
pop
cmp
mov
mov
mov
orl
jns
std
push
dec
lods
stc
or
mov
scas
dec
mov
or
cmp
and
mov
shlb
pusha
inc
or
push
in
dec
loope
dec
popf
pop
mov
icebp
insl
hlt
and
pushf
mov
pop
jo
sub
mov
divb
xchg
sti
xlat
test
imul
mov
std
and
cmp
adc
out
jl
mov
lret
leave
dec
insl
mov
std
xor
fdivrl
paddsw
pop
fisttps
lret
xchg
inc
sub
mov
insb
jmp
dec
les
fdivl
mov
fistpl
es
xchg
xor
pop
jmp
sbb
test
and
cld
pusha
add
jg
xor
dec
arpl
push
into
add
cmpsl
mov
mov
jno
mov
pop
push
bswap
repz
jae
mov
cwtl
inc
adc
daa
xor
mov
and
add
and
sbb
dec
aad
sub
jnp
fxam
xchg
addb
jle
movsb
push
lahf
jb
stos
xchg
mov
dec
cli
mov
leave
sarl
xor
mov
test
incb
mov
sbb
push
addl
popf
adcl
int
adc
les
icebp
adc
dec
scas
dec
and
mov
psrlw
xor
xchg
xor
scas
icebp
fcom
rol
outsl
pop
into
pop
add
pop
cwtl
adc
int3
jb
mov
push
jnp
shr
daa
or
fcom
push
fidivrs
or
test
push
aaa
push
add
mov
popf
js
add
jno
cs
shlb
xchg
mov
push
sarl
dec
push
mov
dec
clc
jnp
mov
pop
dec
xor
sbb
pop
xchg
inc
sub
sbb
ljmpw
inc
cmp
cmp
dec
pop
loopne
cmpsl
cmpl
add
pushf
pop
sbb
or
lea
outsb
sbb
out
push
xor
and
aad
xchg
xchg
jbe
dec
jecxz
jne
push
jecxz
aas
mov
mov
mov
mov
xor
leave
jne
jp
sbb
jno
or
add
addl
push
add
fdecstp
sub
dec
cmpsl
loope
pop
jno
xor
mov
sbb
and
xlat
leave
fidivl
std
aad
mov
jb
mov
pop
cmp
mov
sbb
cmc
push
rol
popa
enter
daa
mov
xor
stc
aaa
loop
daa
xor
mov
add
dec
test
mov
jg
hlt
cmp
xchg
ja
out
imul
xchg
jne
xchg
pop
hlt
or
notb
movsb
in
inc
shll
out
cmp
scas
mov
jnp
jecxz
fistps
out
fisubl
sbb
jbe
aad
jb
stos
dec
mov
outsl
sub
mov
cld
imulb
xchg
lock
out
sbb
push
fiadds
adc
inc
inc
in
xor
aad
cmc
cwtl
add
pop
outsb
add
jno
mov
cwtl
out
insb
jbe
jb
xor
aad
push
icebp
push
testb
or
pop
push
dec
aad
push
repz
dec
adc
jb
inc
cmpl
stc
stc
out
cmovnp
ror
inc
pop
and
add
pop
cmp
sub
into
jnp
adc
aas
xchg
mov
sbb
shlb
fsubp
pop
outsl
xchg
pop
dec
mov
loopne
cmc
cmp
and
cmpsb
sub
jl
push
mov
mov
dec
xor
sbb
mov
in
stc
das
inc
or
sub
mov
push
add
imul
jb
add
add
repz
in
out
sahf
adc
ds
mov
fists
scas
xor
mov
cmp
lods
cli
push
sahf
test
cltd
in
jecxz
mov
mov
mov
iret
push
in
addr16
add
sti
data16
movsl
xor
das
adc
dec
xlat
push
fcom
adcl
sqrtps
decb
fdivl
jmp
scas
jbe
push
and
pop
push
dec
ret
mov
push
inc
and
inc
incl
jle
pop
cmp
lahf
sahf
mov
hlt
lods
cld
out
cmp
fs
push
ret
les
push
popf
adc
outsl
fistl
shll
mov
subps
mov
xchg
leave
mulb
mov
jp
dec
jnp
fadd
inc
cmc
mov
mov
cmc
mov
adc
insb
sbb
test
loop
mov
pop
out
jbe
fisubrl
mov
mov
test
movsl
add
dec
adc
mov
add
mov
nop
mov
jg
sub
pop
es
jmp
push
shr
test
adc
sub
xchg
pusha
popa
pop
pop
xor
repnz
push
and
out
xchg
int3
jge
rolb
icebp
fwait
add
test
and
mov
dec
decb
out
push
packsswb
pmuludq
lret
stc
pop
mov
jns
inc
ror
lret
mov
out
or
xor
pushf
cltd
push
les
pop
mov
shlb
dec
fdivl
mov
jecxz
lret
leave
mov
dec
xchg
xor
push
pushf
jp
sub
xor
and
mov
sbb
push
push
add
test
and
push
idivl
fwait
mov
lods
cwtl
in
in
inc
scas
repnz
xchg
xor
push
pop
cmp
dec
je
pop
ljmp
call
jmp
push
outsb
mov
push
and
pusha
fldl
cmp
jnp
mov
setge
cli
pushl
std
xor
stc
flds
btr
inc
xchg
add
insb
dec
daa
fcom
sbb
aad
jmp
mov
and
je
mov
insl
rcl
stos
sub
jbe
jnp
xor
mov
lret
push
popa
popf
dec
int
mov
add
repz
or
sbb
and
ds
jl
inc
stos
lret
push
mov
lock
rcll
xchg
adc
jl
lahf
mov
int
adcl
jmp
cmp
xor
iret
push
push
cmp
movsb
mov
add
pop
sbb
popl
sti
pop
sbb
sub
mov
cltd
mov
outsl
hlt
mov
lret
dec
repz
jecxz
hlt
pop
mov
lea
xlat
std
sbb
mov
xchg
mov
lcall
mov
mov
sbb
pop
pop
cmp
pop
les
jle
xor
jb
push
jb
sbb
xchg
and
in
ljmp
in
sub
mov
rorl
adc
stc
pop
rcll
or
mulb
inc
xchg
sub
test
ret
lods
xchg
sbb
jbe
mov
ret
pop
mov
into
inc
push
lods
dec
popa
push
repz
lea
jns
pushf
into
jae
dec
mov
add
movsb
cs
daa
stc
cmp
push
mov
ss
push
xchg
adc
enter
arpl
xor
cmp
sti
dec
daa
fcompl
add
dec
mov
scas
mov
repz
sti
in
cmc
aas
jl
call
fwait
fwait
aaa
scas
les
add
in
inc
mov
rorl
mov
stos
mov
sbb
push
xchg
add
xor
mov
and
sub
in
inc
repz
aaa
lahf
fimuls
out
mov
lock
cmp
and
xchg
jle
cmc
lods
aam
icebp
mov
dec
jmp
jecxz
dec
ds
mov
std
sbb
push
dec
inc
decl
sub
repnz
cltd
fistl
push
fistps
cmpsl
mov
or
bound
mov
and
jg
xchg
mov
inc
lahf
mov
or
daa
sahf
push
filds
enter
add
mov
cwtl
inc
mov
dec
frstor
inc
mov
dec
mov
cmp
sub
fiaddl
push
test
jp
or
sarl
ljmp
push
test
int
push
or
mov
dec
js
mov
xor
jle
ja
xchg
mov
mov
inc
mov
bound
repz
pop
aaa
mov
mov
sub
inc
cmc
cmp
sbb
sub
jns
jnp
mov
pop
out
jns
test
adc
xor
mov
sub
addl
dec
adc
mov
adc
pop
sub
iret
dec
fs
jmp
cli
es
fistpl
lods
idivb
shlb
jmp
add
pusha
out
xor
int
mov
mov
jnp
in
or
lahf
push
aas
mov
add
mov
pop
mov
cwtl
jb
push
or
cwtl
hlt
ss
jl
clc
ds
pop
fs
xchg
jmp
ja
cmpsb
in
das
ds
and
or
test
inc
je
dec
adc
sti
sahf
adc
cs
jp
out
dec
imul
aas
jne
push
jp
adc
pop
aam
and
dec
ja
scas
icebp
dec
adc
inc
adc
xchg
inc
fwait
call
das
xor
pop
leave
iret
pusha
inc
out
dec
movsl
cmp
out
loope
loopne
orb
jnp
ror
ljmp
ljmp
or
push
neg
inc
sbb
test
xchg
and
nop
fcomps
aad
jne
sbb
rorl
sub
pop
daa
xchg
shll
scas
jae
mov
mov
std
cld
int
int3
test
and
dec
cmpsl
lret
mov
and
xor
push
les
or
and
test
stos
movsb
mov
aaa
cmp
sbb
inc
sbb
fs
outsb
adcb
jae
bound
dec
movsl
push
aas
test
fcompl
cmc
in
ja
xlat
push
jp
xchg
aad
xchg
mov
addr16
daa
mov
int
mov
cmc
mov
nop
adc
bound
jp
sub
sub
sub
xchg
stos
mov
sub
faddl
test
pop
nop
test
push
or
jp
test
ficomps
jae
shlb
xchg
sub
mov
cwtl
cli
adc
test
hlt
ret
jecxz
movsb
mov
outsb
mov
mov
or
add
push
mov
sbb
movsl
test
aad
cli
mov
pop
adcl
fiadds
loopne
push
es
and
mov
js
ljmp
es
fwait
cmp
stos
push
stos
mov
fldcw
cmpsl
in
mov
and
sbb
stos
jns
int
jecxz
or
adc
scas
lcall
or
sub
dec
dec
inc
jp
int
test
int3
enter
lds
and
mov
dec
les
out
mov
push
cmc
add
pop
out
jge
xchg
jne
pop
aas
pop
pop
scas
xchg
aas
mov
out
mov
jge
lret
shlb
int3
xchg
sbb
and
push
adc
cld
or
movsb
lret
popf
cli
rolb
hlt
pop
iret
xor
adc
pop
or
xor
nop
call
sbb
out
sub
mov
add
xlat
xchg
mov
cmp
xchg
clc
sti
lock
adc
jecxz
ja
push
nop
sub
pop
mov
xor
jne
and
jne
xchg
push
mov
ret
sar
ja
mov
add
sub
mov
data16
mov
cmc
lret
or
mov
imul
scas
adc
das
notl
pop
ss
and
or
lcall
mov
push
mov
mov
cwtl
mov
iret
ja
mov
pop
mov
sbb
nop
je
bound
imul
popf
sbb
jmp
fistl
cmp
sbb
sti
adc
out
mov
imul
int3
inc
inc
add
std
jb
xchg
les
add
push
sbb
xor
xor
loope
push
add
ljmp
test
pushl
sbb
loop
mov
movsl
push
ret
add
sarl
dec
sbb
in
jbe
dec
loopne
xor
mov
addr16
int
jmp
mov
xor
test
sar
mov
andl
mov
mov
jp
out
fstpt
push
add
mov
fdivp
inc
nop
lock
outsb
cmpsb
outsl
clc
xchg
iret
sbb
pop
sbb
inc
popf
movsb
jno
push
sub
jmp
and
or
mov
inc
sbb
fcompl
add
sub
and
pop
test
mov
mov
mov
leave
fisttpl
mov
jo
aam
out
dec
mov
push
pop
repz
enter
or
scas
stos
cmp
xchg
ret
bnd
cmp
jp
hlt
pop
das
jae
xchg
add
stos
pushf
inc
cmpsb
loope
shll
insb
mov
inc
fstpl
ret
iret
daa
aad
jge
rcrl
mov
xlat
sub
ljmp
arpl
bound
stos
dec
imul
dec
rclb
add
mov
leave
and
mov
mov
push
mov
dec
das
sub
loop
and
adc
jbe
mov
sub
es
pop
test
hlt
movsb
outsb
sbb
aas
imul
std
sahf
aas
aas
cld
sub
aaa
and
jp
fwait
xchg
jge
addb
hlt
cmp
imul
ficoml
andb
mov
or
push
push
cmp
mov
fmulp
or
or
mov
pushf
adcb
sub
fildl
mov
fcomi
push
dec
adc
jb
movsl
pop
jb
rcrl
push
xchg
sub
mov
cld
mov
mov
or
pop
pop
cmc
icebp
inc
movsb
out
cli
lret
add
cwtl
idivb
pop
aad
sbb
pop
scas
or
mov
push
push
ss
out
pop
push
test
stos
fmull
out
lahf
and
sub
jno
in
push
inc
mov
mov
std
sbb
ret
enter
jl
push
frstor
dec
jecxz
push
mov
loope
dec
mov
clc
sbbl
scas
inc
adc
fldenv
std
pop
mov
stc
aad
lcall
divb
jnp
mov
in
dec
jl
mov
add
jns
lea
shll
push
sbb
out
mov
icebp
push
xchg
pop
mov
rorl
inc
push
push
add
fistps
test
data16
stos
into
imul
mov
jge
sbb
inc
dec
xor
jns
push
xlat
inc
pop
dec
addr16
icebp
enter
mov
xorb
jne
cwtl
scas
jge
jg
cmp
or
jl
mov
xlat
das
mov
cmovg
outsl
int
jl
out
add
inc
aad
pop
mov
xchg
pop
stos
push
mov
mov
xor
fisubrl
push
psubsw
xchg
les
andl
repnz
mov
push
or
in
out
mov
cmp
add
repnz
jne
mov
popa
lea
adc
jae
add
out
js
sbb
sahf
aad
lahf
sub
sbb
aad
sbb
test
mov
adc
push
mov
jp
aam
orl
inc
into
push
cmp
movl
dec
ljmp
sub
aaa
aam
dec
lock
data16
dec
add
inc
out
inc
push
mov
mov
addb
call
xchg
xlat
push
push
xchg
cmp
popf
sbb
cwtl
xchg
mov
shll
je
add
call
lcall
mov
and
notl
jle
cmp
fnsave
dec
mov
mov
mov
aam
mov
mov
lods
sarl
xorl
lods
into
mov
and
add
movsb
cmp
les
mov
in
xchg
xor
sub
popf
mov
add
xor
push
push
stc
out
inc
cmp
xchg
enterw
out
mov
movsl
cmc
filds
call
xchg
mov
in
mov
push
cmp
movsl
out
mov
pop
enter
push
shll
in
add
mov
imul
jecxz
arpl
sti
ficomps
dec
sub
dec
mov
mov
mov
fcomip
aaa
dec
dec
or
cld
es
mov
pop
push
negb
and
and
adc
insb
inc
push
mov
jbe
xor
out
iret
sub
push
and
add
sub
ja
cli
add
pushf
sti
aas
roll
mov
xchg
xchg
xchg
jle
add
cmc
sub
push
mov
cltd
cli
push
sbb
pusha
out
jecxz
push
lret
pop
push
sbb
aad
add
mov
cmpsb
cmc
shrb
jbe
aad
fisttps
daa
sbb
pop
xor
inc
or
dec
push
pop
sub
fs
aaa
fs
sar
or
adc
dec
test
push
shrb
mov
cmp
mov
js
sub
loopne
setg
xor
fwait
outsb
or
sbb
jmp
nop
adc
mov
cmp
imul
daa
out
mov
in
add
mov
jg
and
pop
or
cmp
cmc
mov
sti
add
adc
xor
lods
sti
fimuls
jecxz
mov
incb
lret
cmp
stos
movsl
ds
pop
gs
fisubrl
insb
and
dec
and
inc
daa
xor
loope,pn
std
xchg
arpl
xchg
icebp
mov
out
mov
rcll
cmp
sub
sbb
jecxz
stos
ret
sbb
repz
stos
adc
incb
add
ret
lea
daa
jae
aam
clc
pop
out
jg
ret
mov
mov
inc
cmpsb
loope
mov
and
fimuls
das
xor
ret
nop
dec
pop
shlb
pop
mov
jmp
loop
shl
mov
cltd
loope
cltd
addr16
push
jmp
fcmovb
cmp
pushf
into
scas
cwtl
mov
ret
mov
loopne
and
adc
xor
or
hlt
or
mov
or
je
xchg
sub
mov
cmovbe
lret
dec
lcall
fbld
movsl
mov
and
adc
jae
pop
push
push
pop
push
cmp
nop
fcmovbe
and
and
mov
fimuls
push
or
fadd
pop
push
int
movl
xchg
push
sub
sarl
inc
std
bswap
ss
cmp
sti
test
fcomps
adc
lret
shlb
push
cmpl
divb
xorl
add
shrl
add
js
cltd
in
dec
sti
in
das
cmpsb
cmp
fdivrs
push
cmp
mov
fwait
cmp
leave
sbb
xor
pop
mov
pop
mov
mov
loope
sbb
int
dec
dec
xor
popf
pop
dec
fisubrs
xchg
outsb
add
mov
hlt
pop
mov
inc
sub
or
fdivl
jp
cmp
mov
push
xor
jne
mov
push
push
xchg
loop
loopne
xor
scas
pushf
push
xor
sub
mov
cwtl
cmp
jae
cwtl
aaa
mov
jp
and
mov
lods
cmp
and
mov
in
cmp
sub
jmp
popf
sbb
ss
ja
jnp
pop
xor
sarb
call
sub
lock
cmp
aaa
mov
adc
mov
cmp
ljmp
call
out
push
xor
mov
or
es
inc
scas
mov
xchg
xchg
xchg
std
lods
jns
jbe
sbb
cwtl
pop
mov
pop
inc
dec
or
pop
hlt
pop
rol
aam
jae
jmp
js
ret
je
jle
cld
lds
ret
dec
push
mov
jns
or
push
imul
mov
sub
xchg
sti
into
mov
add
orb
insl
xor
cmp
pushl
hlt
loop
aas
or
dec
sbb
push
ss
jmp
or
iret
aad
das
outsl
or
ds
int
hlt
cmp
push
inc
mov
dec
pop
or
pop
or
xchg
xor
xchg
push
xchg
dec
sub
jle
or
pop
push
sbb
inc
mov
xchg
xchg
lock
sahf
mov
cld
fwait
and
push
subb
pop
pusha
push
jge
xor
adc
jmp
xchg
xor
repnz
sub
sbb
dec
mov
adc
test
lahf
xchg
movsb
push
add
cwtl
leave
push
lods
pusha
hlt
mov
in
mov
in
ja,pt
ds
js
lods
mov
and
ror
fmul
bound
std
inc
nop
sbb
lret
sbb
push
ljmp
loopne
push
dec
sbb
mov
push
push
addr16
cmp
ds
repnz
cmpsb
xchg
bound
and
xchg
push
push
adc
cmc
jbe
jae
cmp
dec
cmp
ljmp
stc
sbb
fisttps
enter
xor
orl
loop
iret
dec
inc
iret
dec
adc
cld
sub
xchg
stos
sahf
cmp
and
ljmp
lods
xor
or
and
sub
add
aaa
mov
out
mov
pusha
cltd
dec
pop
mov
outsl
scas
or
jp
cmp
mov
mov
insb
mov
into
or
or
and
sub
jae
push
in
lds
and
in
and
xchg
ss
in
inc
test
adc
andb
leave
and
inc
xor
fldt
movsb
sbb
test
dec
lds
ljmp
mov
mov
add
xor
ret
push
jmp
and
stc
daa
lods
js
in
in
jns
and
sbb
sarl
std
pop
mov
lret
in
das
xchg
xchg
dec
sbb
push
mov
sub
xor
into
lock
cmpsb
ljmp
pop
pop
and
loopne
add
mov
lcall
mov
or
xchg
pushf
adc
out
push
fcompl
sbb
or
mov
test
out
sti
mov
dec
push
xor
mov
mov
daa
push
mov
jl
movb
data16
imul
sub
loop
nop
xchg
xlat
es
push
mov
or
test
cmpsl
xchg
sbb
rorl
pop
sub
cmpsl
cmp
mov
mov
fidivrl
mov
negb
or
mov
iret
cmp
movl
ret
iret
xchg
loope
inc
int3
cmp
mov
aam
adc
jb
mov
repz
mov
dec
jno
jl
psllw
lock
push
pop
gs
add
repnz
dec
shrb
sbb
pop
sub
in
mov
mov
xor
mov
cmp
gs
dec
pop
mulb
lret
shrl
fsubs
movb
in
rorb
out
xor
outsb
xchg
sub
je
adc
sub
jge
jnp
xchg
int
add
lahf
aaa
add
test
cmc
xor
pop
sub
xor
pop
pop
fcompl
mov
out
in
xchg
push
jae
mov
lods
ja
out
es
sbb
negl
xor
pop
vaddsubpd
js
daa
mov
sbb
mov
push
test
mov
xchg
sub
orl
inc
inc
movsl
aad
lss
lock
sbb
lods
imul
mov
js
sbbb
mov
mov
out
jno
icebp
dec
cld
lock
pop
imul
mov
mov
je
push
push
test
repnz
mov
sbb
cmpsb
sbb
add
sbb
xchg
mov
sti
cmp
mov
ficoml
xchg
mov
lret
xchg
fdivrs
xchg
lahf
sarl
test
out
adc
cwtl
mov
mov
or
into
sub
mov
nop
xor
popa
cmp
xchg
sbb
xor
lret
mov
dec
ja
cmpsb
jb
mov
insl
es
stos
xchg
and
adc
mov
mov
jp
movsl
pop
dec
movl
jmp
mov
sub
jns
push
and
bnd
xchg
test
pop
cmp
ret
test
mov
cmp
bnd
clc
std
sbbb
jnp
mov
sub
and
or
in
sahf
int
stc
mov
dec
sub
xchg
popa
jp
stos
out
inc
call
enter
sbbl
adc
jg
push
and
sbbl
and
push
jb
fiaddl
push
hlt
mov
or
loop
int
lods
imul
xchg
lcall
jo
sbb
fidivs
push
xchg
scas
test
pop
mov
push
popa
jmp
push
gs
sahf
hlt
or
xor
fisubrl
cmc
das
pop
xchg
fs
scas
add
mov
arpl
leave
pop
mov
rorb
cmpsl
lods
cwtl
imul
add
mov
into
sbb
leave
xchg
adc
sahf
aaa
pop
inc
mov
cmpl
adc
pop
push
xor
cmp
jmp
test
lds
aad
sbb
sbb
inc
iret
orb
in
adc
adc
lock
mov
data16
or
popf
jl
loopne
aaa
inc
out
fnstenv
mov
and
fisttpll
gs
add
mov
or
hlt
daa
pand
pop
jne
sub
add
sbb
sub
hlt
fucomi
lret
pop
mov
cmpsl
inc
pop
add
pop
rcrl
xor
jne
aaa
shlb
mov
add
mov
pop
gs
xor
sub
test
mov
aam
sub
xchg
push
int3
sbb
jno
jo
mov
les
mov
inc
lret
jle
arpl
je
inc
cli
hlt
mov
xchg
sub
repz
js
xor
sub
sbb
sti
push
daa
pop
ret
aam
fcmovb
repz
push
mov
daa
cmp
sub
push
mov
hlt
dec
mov
mov
cltd
sub
aad
rclb
jo
inc
mov
lret
mov
loopne
rcl
aad
or
aad
bound
repz
push
in
sbb
imul
or
pop
fistpll
dec
mov
in
mov
rcl
insb
hlt
or
aam
jp
repnz
pop
stos
pop
es
xchg
jne
mov
test
add
mov
jne
mov
lock
roll
test
jb
adc
jb
rolb
dec
filds
cmpsb
fisttpll
pushf
jns
sbb
mov
mov
pop
data16
mov
fildll
addl
sar
cli
push
mov
fildll
gs
add
imul
sub
cwtl
push
inc
notb
pop
sub
sar
cmpl
sarb
mov
mov
pop
pop
mov
mov
loopnew
adc
mov
pushf
cmp
add
adc
pusha
into
in
adc
jne
adc
cmc
push
push
dec
push
imul
add
mov
std
and
jb
pop
lcall
xchg
fsubrs
jge
or
lret
mov
xchg
mov
ds
fidivs
imulb
jns
dec
pop
push
js
nop
sbb
mov
fwait
xchg
inc
jns
decb
jmp
sbb
das
hlt
jae
les
mov
outsb
and
dec
enter
subb
xchg
adcl
mov
jo
iret
pop
mov
sar
es
ficoms
shlb
mov
push
inc
add
sbb
jno
lret
mov
pop
sub
jp
out
loope
sub
pushf
movsb
mov
lcall
adc
jo
mov
pop
xchg
inc
xrelease
repz
mov
jmp
adc
call
stos
mov
mov
in
aaa
dec
stos
and
dec
loopne
shrb
outsl
add
jg
leave
adc
cltd
scas
xor
addb
cmpsl
jg
mov
add
xchg
in
cmp
mov
loope
adcb
imul
cmp
jecxz
test
mov
jae
fnsave
mov
sbb
mov
mov
fistpll
pushf
jae
xchg
sub
inc
arpl
cmc
scas
int3
jb
xchg
popa
in
cmp
in
mov
pop
xor
xor
mov
mov
jo
ret
outsl
and
aaa
leave
outsl
push
xchg
arpl
xor
enter
dec
sbb
cmp
pushf
add
xchg
mov
outsb
mov
or
sub
xchg
adc
cmc
sub
ret
or
adc
cs
push
in
push
jne
clc
xchg
push
test
adc
cmp
insl
sahf
ret
pushl
scas
xchg
mov
pushf
lds
mov
and
xchg
ja
sbb
jg
sahf
fprem1
jp
push
jbe
outsb
inc
pop
popf
repz
aaa
jle
stos
popf
cmpsb
mov
pop
daa
xchg
loope
int
fs
push
rcrb
xor
rcr
xchg
lcall
loopne
pop
test
clc
mov
dec
xlat
xor
xchg
stos
jns
cltd
mov
and
adc
iret
push
inc
mov
shrb
inc
or
ret
lret
add
xchg
into
scas
imul
test
rol
rclb
pop
mov
nop
mov
xor
rclb
adc
cmpps
insb
pop
outsl
bound
test
movsb
mov
push
out
sub
add
jae
xor
test
add
pop
mov
in
xchg
fidivrs
ds
pop
sahf
add
xchg
mov
and
dec
mov
pop
mov
fwait
sahf
pusha
ds
mov
adc
xchg
and
xchg
inc
ficompl
mov
inc
fcmovnu
mov
or
push
into
mov
xor
fsubrl
fimuls
lods
sub
lret
mov
lock
inc
fadds
push
mov
mov
adc
inc
ds
xchg
addr16
xchg
imul
adc
popl
in
jp
add
inc
js
inc
sub
int3
xchg
fs
std
sbb
sub
xor
push
hlt
scas
or
mov
fidivrl
pop
aaa
xorl
lret
add
loope
jmp
cmp
mov
mov
pop
scas
adc
xchg
shl
inc
sahf
push
pop
pop
jns
loope
fcomi
stos
pop
dec
jle
pushf
lods
out
insl
dec
mov
inc
jg
mulb
clc
fwait
adc
cmp
int3
cmpsb
test
leave
cmp
je
pop
sub
ljmp
push
push
daa
xor
jb
faddp
repz
clc
mov
push
jmp
mov
pop
aad
mov
xor
repnz
call
pop
aam
and
or
and
ret
fcompl
repnz
xor
aas
xor
sub
aas
movsb
or
inc
enter
pushf
sbb
pop
xchg
idiv
push
test
fwait
in
pcmpeqd
xchg
aas
repz
and
add
stos
add
inc
push
mov
clc
std
dec
lods
aaa
pushl
cmp
lods
loop
push
xor
cld
mov
repnz
mov
mov
xchg
js
outsb
js
ror
out
aad
nop
jge
scas
pop
ja
jecxz
add
int
or
mov
mov
outsb
cltd
sti
lds
ret
and
outsl
arpl
fwait
movsl
fisubrl
and
push
nop
sarl
rclb
daa
mov
fs
push
mov
dec
mov
ss
cmc
lahf
xchg
add
fwait
push
in
int3
cmpsl
insb
in
mov
mov
mov
insl
mov
sub
int3
jle
jnp,pn
mov
ss
mov
cmova
into
add
mov
arpl
loop
subl
sbb
frstor
cmpsl
jno
jno
push
nop
mov
in
in
adc
pop
sbb
test
ret
xchg
outsl
mov
push
stc
xchg
adcl
cs
pop
scas
cltd
xchg
je
jcxz
inc
insb
sbb
lret
mov
push
dec
pop
cmp
mov
and
cmc
cmc
sbb
sub
sub
lock
xchg
mov
lock
lret
int3
push
or
insb
fwait
xlat
ret
xchg
and
rcrb
cmp
repz
sbb
xchg
adc
xchg
jle
jl
push
mull
iret
mov
lods
xor
dec
fadds
cmp
inc
gs
fisubrs
mov
lret
lods
pop
fstp
out
jge
clc
xchg
and
inc
bound
mov
addb
movsl
inc
adc
test
scas
ja
xchg
fsubrs
pop
push
outsb
imul
sub
sbb
cld
testl
add
xchg
out
mov
adc
dec
push
and
push
sbb
lock
hlt
popa
mov
inc
cld
fnstcw
dec
add
jnp
fstpl
mov
pop
loope
mov
testb
dec
xlat
ja
mov
fcoml
das
adc
mov
or
lds
mov
repnz
and
and
push
jno
sahf
outsl
add
pop
int
add
jb
cmp
jp
rol
jl
inc
sub
xchg
insb
xor
icebp
pusha
inc
sbb
cs
repnz
mov
push
rcll
cmp
sub
mov
cmpb
mov
add
in
lcall
cmp
jmp
out
mov
mov
mov
shll
notb
aas
xchg
and
push
les
out
call
mov
sub
sbb
hlt
andb
stos
mov
jb
mov
mov
into
loope
aaa
mov
aaa
lret
gs
int3
push
dec
mov
repz
and
mov
je
jns
shll
cmpsb
push
icebp
pop
and
xor
pop
xchg
fildll
sub
mov
jmp
xchg
jb
jne
andl
arpl
fdivr
jae
cltd
int3
mov
adc
je
mov
add
insb
jbe
xchg
fninit
jae
mov
mov
inc
icebp
adc
in
jmp
lock
lods
adc
decb
jle
int
jae
jg
and
out
fisttps
aad
ljmp
or
icebp
or
jbe
pop
in
lret
ds
xor
out
cli
mov
xor
je
inc
xor
sub
sbb
lea
mov
cmp
cmpsl
icebp
pop
popf
sbb
pop
shlb
cli
and
lea
xchg
xchg
shrb
jno
lahf
das
aaa
je
add
stc
repnz
mov
xchg
decb
sti
test
adc
sahf
or
outsb
in
lock
cmp
push
sbb
mov
loopne
repnz
mov
mov
xor
andb
sbbb
sti
je
lret
xchg
sbb
sub
stc
cltd
in
sbb
gs
dec
aaa
fimuls
jae
push
push
push
mov
rcr
ret
jo
sahf
push
mov
xchg
xchg
jbe
cmc
clc
push
jns
jecxz
les
in
mov
test
mov
shll
pop
sub
sarl
enter
test
gs
push
ret
sbb
fsubrl
mov
adc
loopne
les
inc
call
int
cmpsl
or
xor
sub
or
pusha
divb
or
outsl
xor
pop
xor
lret
push
insl
outsb
into
and
rolb
subl
xchg
push
adc
pop
xchg
push
mov
mov
scas
dec
out
mov
out
js
bound
call
mov
inc
shll
and
adc
lock
pop
push
cld
push
jp
fnstcw
leave
sbb
dec
dec
jge
shrb
pop
mov
cmp
std
and
and
cltd
xor
aas
lods
adc
cmpsb
call
js
jl
daa
cli
rclb
movb
mov
or
bound
ja
adcl
sti
fists
mov
ret
rol
insb
std
mov
out
fwait
outsl
xchg
popa
cmpsb
subb
lds
les
mov
das
jg
sbb
add
fiadds
xchg
jle
dec
and
push
inc
mov
das
fisttpll
mov
jg
mov
in
xlat
and
pop
roll
in
cmp
dec
es
ss
fmul
js
and
push
in
pop
sub
in
ret
mov
xor
rcrl
push
xchg
out
inc
inc
in
into
sbb
outsl
xor
xlat
call
jle
sbb
test
dec
inc
dec
cmpsl
or
jns
mov
and
lcall
sbb
mov
adc
or
and
mov
pop
lock
pusha
lahf
add
jnp
test
jno
mov
and
test
add
ja
in
test
jl
or
aaa
imul
jmp
jae
unpcklps
imul
cli
imul
jnp
pop
sub
inc
push
and
sub
mov
push
dec
fsts
roll
or
call
sahf
in
das
inc
pushf
mov
mov
fcmovbe
push
ret
lret
inc
out
sahf
sbb
push
xchg
or
in
fildl
and
inc
gs
jo
lcall
sbb
mov
mov
lock
mov
and
jp
jb
jbe
pop
jmp
scas
testl
push
mov
xor
test
insb
insl
test
adc
xchg
imulb
rorl
lcall
imul
inc
mov
add
les
adc
pusha
jo
inc
or
bound
add
inc
mov
out
xor
fnstcw
sub
aaa
inc
test
and
jnp
sub
in
mov
mov
scas
jmp
xchg
push
ds
lods
fiaddl
stos
loope
int3
and
mov
mov
rclb
test
insl
and
pop
cmp
fmul
dec
pop
adc
arpl
pop
mov
dec
xchg
inc
sub
jmp
loopne
scas
push
jg
jmp
cmp
sbb
xor
movsl
popf
jl
xchg
sub
stc
add
inc
int3
pop
outsb
dec
sub
jmp
adc
fucom
std
ss
mov
hlt
mov
mov
sub
or
nop
xor
hlt
arpl
or
mov
call
mov
mov
push
daa
dec
fsubrs
inc
inc
decb
mov
inc
sbb
ljmp
add
testb
add
push
and
lea
out
aaa
adc
in
mov
bound
pop
xchg
sbb
jo
pop
mov
das
hlt
lods
push
mov
xchg
inc
and
inc
scas
push
pop
sub
adc
enter
lret
jo
jg
imul
adc
jmp
xchg
out
fwait
daa
test
cmp
fistps
leave
push
cli
stos
popf
fisttpll
out
sub
mov
xor
push
cli
out
stc
adc
sub
pop
cmc
fistl
xor
mov
lret
sub
scas
cmp
stos
data16
lret
sbb
jo
and
int
xor
push
nop
fs
out
push
loopne
and
mov
cwtl
cmp
jg
xchg
loop
jecxz
sbb
subl
jmp
xor
iret
pushf
or
stc
jle
jp
mov
sub
jge
popa
mov
mov
jg
mov
jns
mov
das
mov
aaa
nop
out
dec
push
mov
mov
stc
jmp
xchg
dec
add
stos
fs
movsb
or
je
xchg
rorb
pop
es
lock
fcoms
jmp
and
adc
ljmp
pushf
fidivl
aad
or
in
add
hlt
push
lahf
push
insb
out
adc
mov
push
scas
inc
cmp
push
or
cltd
rcrl
out
mull
sub
push
ss
add
inc
aad
pusha
xor
mov
mov
inc
pop
stos
out
es
or
gs
cmp
adcl
mov
dec
or
cltd
dec
xor
test
xor
jno
or
sbb
adc
test
loope
lea
idivb
adc
mov
mov
or
aam
loopne
test
icebp
pop
out
cmp
sahf
and
test
stos
cld
jge
lret
sub
jns
dec
stos
popf
push
mov
scas
sub
pushl
bound
sbb
mov
push
pushf
jge
gs
jle
popa
in
repz
sub
pop
cmpsl
es
dec
or
mov
shlb
push
or
cmp
mov
mov
push
cld
sbb
fcoms
push
or
rorb
das
push
icebp
sbb
lahf
mov
lret
sub
push
cmp
into
mov
push
mov
test
or
addr16
insb
je
add
jecxz
adc
dec
cmp
pop
inc
sarb
adc
das
gs
stc
push
fists
pop
fistpl
jle
mov
in
jo
out
jg
add
ds
inc
int3
scas
inc
inc
mov
outsl
pop
sub
jg
mov
pop
jecxz
sub
jo
dec
mov
mov
mov
cmpsl
aam
inc
pop
adc
mov
jb
adc
cs
aam
mov
jns
mov
xor
mov
add
call
sub
push
flds
cld
adc
loopne
repz
iret
daa
fstps
mov
mov
sub
fists
loopne
mov
inc
loop
and
fsubrl
popl
fsub
lret
xchg
out
outsb
ret
cmp
movsb
loopne
mov
jmp
cli
and
inc
sbb
mov
test
cmpsl
ret
sti
repnz
test
adc
cmc
jge
add
stos
add
fimull
and
mov
into
pop
gs
mov
aas
int3
std
jp
jmp
mov
das
mov
testb
mov
jne
xchg
push
hlt
pop
jae
lea
decb
and
mov
movsb
inc
test
sahf
repnz
add
nop
dec
test
jb
lea
mov
gs
insl
xor
add
pop
dec
pop
sub
leave
mov
push
pop
mov
push
lods
loopne
es
ljmp
push
int3
pop
xchg
addl
sahf
mov
fucom
push
jnp
addr16
shrl
pop
cmp
xchg
shlb
cmc
daa
imul
push
mov
jecxz
scas
lods
dec
xchg
adc
int
les
dec
inc
sub
arpl
add
mov
xchg
xor
stos
outsb
out
xchg
lahf
daa
cli
scas
js
repnz
xor
pop
scas
mov
imul
pop
aam
sbb
clc
mov
daa
shrl
movsl
into
data16
xor
mov
mov
int3
int3
mov
xchg
js
pop
aam
scas
dec
push
iret
leave
outsb
gs
ret
dec
movb
mov
sub
stc
and
out
adc
fwait
clc
popf
jnp
ss
and
xchg
fsubrs
and
jns
iret
test
mov
cld
outsl
add
repz
xchg
outsb
mov
popa
inc
idivb
aas
dec
xor
jae
jecxz
sbb
xlat
jg
ja
inc
ja
and
mov
push
shl
add
pop
jl
out
repnz
mov
stos
imul
and
fsubr
das
jae
jg
inc
push
js
mov
clc
push
scas
lahf
mov
add
ljmp
pop
out
lods
mov
jbe
hlt
jno
inc
add
mov
popa
cmpl
insl
lds
fwait
add
into
test
js
add
adc
mov
loopne
push
jmp
cmp
sbb
out
adc
and
xchg
cmp
add
adc
sub
fwait
std
sbb
xlat
std
inc
or
nop
mov
push
cmp
lahf
shl
pop
rorl
stos
pop
test
mov
into
or
adc
mov
stos
jl
jbe
push
shrb
iret
loopne
ficomps
insl
dec
repz
icebp
mov
dec
data16
xor
mov
loope
loop
xchg
ljmp
jb
cmp
test
sti
add
add
rcrl
push
push
cwtl
sub
pop
push
dec
inc
mov
aaa
imul
adc
add
ja
pop
icebp
outsl
mov
xchg
cmpsb
sub
lds
jecxz
repz
sti
es
cs
sub
imul
sbb
jmp
call
pop
js
sbb
adc
push
lret
in
add
cld
xor
mov
mov
aaa
jp
lea
int
mov
dec
mov
sbb
dec
bound
mov
mov
ds
popa
insb
sarl
mov
mov
inc
pop
nop
push
and
leave
sub
xchg
inc
lret
icebp
adc
cmpsb
mov
mov
sbb
outsb
test
mov
sub
xchg
inc
xor
adc
push
mov
outsb
in
cmc
fs
out
insl
xchg
inc
jg
fwait
push
stc
push
mov
pusha
mov
dec
arpl
xor
js
cwtl
outsl
and
loope
sub
int3
mov
je
inc
add
mov
aad
pop
push
jmp
lret
push
adc
in
loope
movsb
cmp
jnp
fistpll
push
test
cmc
stc
out
outsl
in
add
xchg
jl
ror
push
adc
aad
jae
jmp
push
ljmp
pop
ret
inc
and
pusha
pop
cmp
lret
in
icebp
mov
push
jno
arpl
cmpsb
mov
inc
in
shrl
inc
sti
ljmp
cmp
pushf
push
push
loopne
cli
test
xlat
inc
aad
clc
inc
xchg
jnp
leave
lds
jmp
mov
movsb
cld
rcll
mov
imul
testb
push
aam
stos
das
data16
pop
and
neg
or
sti
pop
xor
inc
ss
inc
add
mov
aas
dec
push
push
cmpsb
push
jae
inc
orl
popf
jae
stos
bound
mov
push
imul
push
xchg
xor
cli
push
mov
fdivs
or
enter
arpl
dec
cmp
adc
dec
hlt
cld
aaa
mov
cmp
cmpsb
lods
test
mov
mov
jb
jo
je
pusha
sub
das
outsl
inc
outsb
sub
add
iret
das
push
in
pop
mov
std
mov
pop
mov
mov
adc
jl
xchg
sbbl
sub
stos
lods
gs
icebp
jecxz
gs
xchg
mov
bound
loop
fmuls
mov
xor
daa
shll
jl
mov
inc
cs
je
add
pushf
push
pop
mov
test
mov
jnp
push
lds
out
mov
mov
add
repz
mov
fimull
imul
bound
xor
ljmp
xchg
push
imul
jb
hlt
repz
mov
das
or
rcll
nop
rorb
or
dec
mov
mov
push
pop
aad
fists
cmp
inc
int
or
mov
push
xor
dec
adc
push
jb
xchg
sarl
add
in
adc
std
cmpl
scas
adc
cltd
push
inc
push
or
mov
adcl
push
mov
adc
mov
inc
jle
jmp
pop
decb
gs
int3
popa
addr16
test
xchg
or
ds
rcrb
xlat
pushf
jnp
cmc
sar
and
sarb
sub
aas
mov
mov
mov
repz
dec
push
out
mov
lret
xor
xor
jae
or
loopne
daa
xchg
lds
xor
lret
pop
xchg
sbb
stos
fsubrs
nop
push
insb
pop
push
add
sbb
hlt
xor
orl
into
in
std
cmp
fsubl
dec
andb
mov
jge
popf
push
jle
add
add
adcl
in
leave
push
int3
jle
inc
pop
mov
scas
cmpsl
insb
mov
jmp
fdivrs
sahf
js
push
mov
adc
js
adc
lahf
aad
and
jle
sbb
cmp
cltd
rolb
inc
jo
stos
lcall
lods
push
adc
sbb
call
jg
popf
mov
sbb
repnz
xor
aad
iret
imul
pushf
cmpsl
xor
push
sub
push
das
testl
jno
jl
mov
ja
and
scas
filds
cltd
das
sub
aad
jnp
out
mov
xchg
inc
mov
cltd
test
xchg
shrl
lods
repnz
push
push
rclb
mov
mov
lcall
pop
push
adc
adc
fldl
mov
stos
and
stc
sub
std
imul
lcall
push
leave
bound
imull
push
hlt
ljmp
mov
xchg
mov
dec
mov
or
outsb
sbb
lea
cs
pop
sub
jbe
mov
pop
cltd
test
std
and
xlat
inc
shll
int3
subb
aam
loope
xor
sbbl
or
jg
mov
iret
xor
mov
fnstsw
xchg
in
mov
dec
aaa
pop
ret
clc
xchg
aas
insb
pop
adc
inc
out
mov
sbb
cwtl
jae
add
sub
cmc
lods
lods
dec
jecxz
ficoms
mov
jae
rorb
out
bound
insb
clc
jmp
xchg
sub
test
mov
xchg
test
jo
mov
imul
mov
mulb
lcall
sbb
cmc
jmp
fs
push
test
and
sti
add
add
add
push
xor
cld
inc
pop
jmp
mov
mov
loopne
or
popf
int3
pop
fcompl
cmp
or
pop
js
loopne
lcall
mov
add
out
sbb
mov
gs
cmp
cs
daa
mov
xor
nop
ja
sbb
sarb
push
das
das
push
divb
inc
adc
sub
and
frstor
fwait
adc
xchg
rcl
dec
or
dec
cmp
lahf
repnz
xchg
or
fsubs
pop
adc
cmpb
movsl
add
push
call
sarl
and
and
ja
data16
xchg
notl
jne
add
mov
add
js
scas
fwait
shll
enter
sbb
ror
shll
sti
imul
sub
adc
fs
xchg
mov
dec
push
pop
loope
cltd
sbb
fsubrs
lret
lret
clc
fnsave
inc
mov
loope
cld
pushf
and
cwtl
cmpl
andnps
in
lahf
mov
std
xchg
enter
inc
xorb
sbb
or
movsb
orb
mov
fs
dec
andb
push
mov
inc
mov
pop
push
cmp
cltd
cmpsl
or
std
in
repz
repnz
hlt
cs
xchg
sbb
push
cmpsb
mov
pop
mov
sbb
addl
sbb
notl
out
roll
cmp
mov
pop
mov
xchg
pop
inc
in
ljmp
ja
cli
and
push
fstps
cld
pusha
mov
jb
cs
cli
push
sbb
pop
mov
xchg
jne
pop
jmp
in
imul
push
mov
xchg
pop
cmpsl
fmul
add
xchg
shll
fnstcw
sarl
xor
test
pop
imul
jecxz
xchg
movsb
divb
scas
std
add
sbb
sub
in
cmpsl
push
add
jb
pushf
or
in
pop
cmp
or
sahf
into
das
push
outsb
or
cmp
jecxz
pop
pop
mov
shrb
insb
xchg
ss
icebp
mov
repnz
push
pop
pop
dec
mov
lea
pop
xchg
mov
loopne
notb
aad
xor
lret
imul
sbb
dec
and
rcll
jb
imul
lods
mov
mov
and
inc
inc
sbb
push
lret
lds
sub
pop
test
in
rcl
lds
cmp
xchg
pop
fisubrl
lods
push
push
mov
mul
in
xorb
mov
cwtl
push
inc
stos
adc
jns
lret
xor
lret
test
lahf
bound
movsl
mov
push
lock
mov
push
jl
or
jge
aas
test
mov
sub
inc
mov
test
in
and
lea
mov
fwait
lock
scas
and
dec
jo
int
pusha
sahf
in
sbb
or
or
ret
add
mov
jge
xor
hlt
imul
mov
movsl
repnz
xchg
ret
jne
pop
ret
dec
pop
repz
dec
scas
repz
lods
in
cmpsb
insl
jge
cmpsl
adc
loopne
popf
mov
inc
push
push
rclb
aad
add
jo
mov
adc
pop
shrb
cmp
sbb
sbb
insl
das
xchg
hlt
lret
xor
shll
adc
aas
push
int3
push
mov
jmp
and
insb
sti
lcall
jg
pop
jns
dec
dec
loopne
pop
jge
or
xor
dec
scas
cltd
in
dec
stc
cmp
popf
stos
clc
xchg
add
sub
shlb
hlt
and
cmp
mov
xchg
daa
adc
lods
lahf
mov
les
adc
out
je
push
xchg
and
rorl
pop
dec
pushf
hlt
adc
sub
test
xor
enter
inc
into
test
inc
mov
lahf
push
xor
ljmp
xlat
add
lods
lret
adc
pop
jnp
inc
std
push
cmc
fs
pop
pop
sub
popa
sbb
dec
icebp
add
dec
icebp
test
xor
js
mov
cmpl
add
pushf
lcall
mov
ja
jae
mov
fistl
nop
xlat
mulb
or
movsb
push
mov
shll
out
popf
pop
out
aas
xchg
ss
xchg
in
pusha
pop
lret
repnz
xchg
jno
call
rolb
in
sahf
pop
out
push
and
sti
push
dec
loope
pop
xor
jmp
mov
stc
cmp
dec
outsl
sbb
daa
lds
popa
mov
inc
enter
fcmovu
pop
jne
push
or
jb
popf
mov
jo
ds
js,pn
add
push
gs
jg
fisttpl
cmpsl
pop
rcrl
sbb
xchg
dec
or
loope
mov
mov
test
fdivrl
pop
and
cmpsl
inc
inc
mov
xchg
xchg
xor
mov
pop
dec
push
in
adc
lea
or
cs
sub
jno
mul
adc
ret
into
pop
sbb
push
inc
popa
xor
add
sbb
std
out
das
pop
push
movsb
xchg
push
int3
adc
ret
and
test
push
inc
lea
jp
es
in
add
jge
std
and
jge
lock
loopne
mov
mov
mov
cwtl
xor
aam
mov
push
dec
das
fwait
hlt
bound
mov
ja
push
pop
sub
push
outsb
sub
fwait
inc
fistl
lret
jle
push
scas
aas
and
repnz
mov
sbb
cli
stos
shll
ja
xchg
imul
mov
push
les
mov
sbb
fs
sub
sbb
mov
and
fisttpl
pop
lcall
gs
pop
out
lahf
sbb
out
or
imul
xor
xchg
jo
fcomps
outsl
dec
push
shr
sbb
subb
push
adc
out
sub
xchg
cmpsl
test
mul
lcall
fcoml
in
cwtl
pop
clc
loope
pop
aad
sbb
cmp
cli
mov
cli
out
adc
push
mov
clc
mov
std
add
mov
push
mov
sarl
addr16
fidivrs
sub
das
dec
test
nop
pop
pop
mov
add
pop
cmp
cmp
dec
icebp
shrl
leave
cmp
push
int
lahf
xchg
adc
loope
pop
mov
jns
outsl
pop
andl
aaa
in
and
inc
push
dec
push
in
dec
jbe
mov
mov
ds
fsubs
rorb
adc
cld
popa
xchg
aas
outsb
shrl
stos
pop
mov
xchg
jmp
push
mov
xor
dec
pop
jae
mov
in
mov
inc
and
popf
out
out
dec
je
jp
mov
xchg
out
add
mov
jl
fildll
or
loopne
inc
dec
push
pop
lds
shl
je
xor
xchg
out
sub
clc
pop
repnz
fcomip
cmp
push
loop
stos
mov
notb
or
push
add
mov
mov
cmpsb
sbb
test
or
cmp
pop
and
daa
push
lock
pop
ret
ficoml
mov
inc
push
sbb
cmpsl
mov
loope
dec
mov
out
cmpl
lock
add
dec
sbb
mov
pop
incl
xchg
fdivl
pop
or
or
pop
out
test
mov
std
std
repz
pop
sbb
inc
stos
nop
lea
out
jns,pn
pop
divl
cmpsl
inc
lret
in
pusha
popf
fidivrs
cmp
popf
loopne
test
imul
push
setnp
and
std
inc
adc
cs
imul
mov
pop
cmp
xchg
inc
xchg
mov
mov
xchg
fwait
xor
mulb
test
mov
bound
xchg
repz
inc
sti
xor
sti
jno
cmpsl
jb
xor
mov
ja
xchg
add
in
mul
inc
rol
jae
sti
inc
lods
push
sub
mov
xor
mov
push
scas
mov
pop
adc
arpl
data16
mov
adc
in
add
and
sbb
and
lret
push
imull
fnsave
pop
cmpsb
mov
popa
stos
dec
jo
mov
dec
mov
mov
jbe
cmpsb
xlat
loope
jle
addl
xor
pop
xor
repz
push
sub
mov
mov
addr16
ljmp
enter
enter
or
pop
pusha
and
out
and
out
cmp
divl
adc
loope
jg
inc
and
or
mov
ljmp
pop
jecxz
cmpb
cmp
adc
fs
sbb
and
jecxz
pop
mov
lods
pop
xchg
push
iret
icebp
je
stos
push
add
imulb
mov
outsb
cmpsl
out
orl
xchg
lds
ja
fisubrs
icebp
icebp
xchg
mov
push
scas
dec
push
add
sahf
pop
stc
inc
pop
cmp
xor
imul
hlt
sub
mov
xlat
movsl
adc
inc
dec
jnp
popa
ss
sub
add
nop
in
cli
lahf
repz
jae
dec
punpckhwd
xchg
cld
in
in
ljmp
push
or
das
jb
adc
pop
andb
xlat
lds
les
mov
fistps
ja
add
outsl
or
pushf
fcomip
enter
rcrb
jns
cmp
or
dec
pop
inc
lcall
repz
adc
repnz
scas
sarb
int
jl
imul
sahf
xchg
cltd
out
mov
mov
in
jns
les
lds
cmc
fadds
jne
sbb
mov
inc
insb
bound
rorb
outsl
lods
daa
dec
mov
mov
pop
ja
aaa
jnp
cmp
pop
enter
iret
stos
xor
outsl
cmp
adc
jl
cmp
mov
aas
rorb
rorb
mov
mov
pop
es
fiaddl
push
popf
inc
lret
cmc
jmp
or
pop
jnp
gs
scas
pop
xlat
pop
ficoml
jns
fldt
jp
push
aas
mov
adc
sbb
shrb
mov
mov
jne
std
scas
mov
and
fldcw
and
inc
iret
insb
iret
cmp
dec
pop
xchg
aas
jnp
jge
push
aam
iret
insl
out
inc
inc
add
push
inc
jecxz
dec
push
pusha
je
in
movsl
sbb
jmp
mov
inc
or
outsb
sub
jle
mov
xchg
mov
mov
aad
add
xchg
mov
fists
movsb
xchg
sbb
xor
test
inc
pop
add
mov
out
jg
xlat
fildl
stos
push
jecxz
jmp
or
or
lcall
sub
ss
fcoml
pop
mov
inc
pop
outsl
pop
shl
sarb
push
arpl
leave
jmp
pop
inc
push
add
fisubs
push
lea
dec
sub
pop
cmpsb
xchg
ds
mov
adc
inc
or
xlat
loopne
jecxz
push
sti
cmp
push
movsl
cmpsb
cmpsl
dec
sub
adc
xchg
fdivl
xor
mov
sti
leave
mov
das
push
lret
stc
dec
cmpsl
test
cld
movsl
sbb
inc
pop
les
xchg
xor
aad
fisttps
lds
inc
sar
mov
pop
ljmp
sahf
mov
mov
sub
cli
nop
push
and
xchg
inc
push
xchg
icebp
push
jecxz
and
xchg
aaa
aad
loop
mov
cs
mov
das
fnstcw
dec
push
insl
jecxz
in
adc
cmp
add
adc
pop
push
enter
call
mov
push
mov
aad
jl
inc
fs
inc
cmpsb
push
inc
dec
or
sub
faddl
ret
scas
xor
sbb
test
inc
pop
mov
jne
jae
int3
fisttps
ds
push
or
pop
sbb
sahf
js
mov
test
jmp
imull
dec
js
loopne
xor
lahf
mov
mov
inc
roll
cmp
jl
aaa
inc
das
fcmovnu
push
in
push
push
shll
mov
add
cmp
and
insl
mov
stos
shlb
scas
pop
cmpsb
les
adc
xchg
fwait
imul
sub
or
lahf
xchg
ds
dec
scas
or
cmpsb
cmp
loope
push
xchg
ds
adc
fwait
outsl
mov
inc
pop
clc
rorl
or
scas
cltd
push
scas
sub
out
sahf
xor
mov
daa
loop
mov
test
in
and
loope
xchg
push
fwait
jnp
mov
mov
jb
sbb
out
dec
add
push
fdivs
dec
test
scas
xlat
sbb
bound
lcall
ret
jns
aad
flds
test
mov
rorb
scas
rcrb
enter
sub
adc
adc
mov
and
clc
cmp
aaa
push
sbb
ds
or
out
icebp
popf
cmp
daa
cli
add
aad
lods
call
adc
cmpsl
xchg
inc
push
push
lret
xchg
cmp
adc
scas
gs
push
push
adc
dec
mov
xchg
xchg
inc
push
sahf
lock
adc
and
jb
mov
xor
insb
xor
sub
pop
xchg
or
inc
daa
sub
mov
aas
aam
popa
lea
adc
dec
stos
sub
gs
sahf
or
jmp
add
das
lahf
test
xor
mov
mov
cmpsl
mov
adc
dec
in
inc
jecxz
mov
push
sbb
fldln2
ds
xchg
in
push
mov
pop
ljmp
repnz
jmp
mov
ljmp
cmc
xchg
mov
scas
sub
dec
call
into
hlt
pop
dec
push
imul
jp
jae
incl
shrb
mov
or
int3
cltd
cmovle
notl
or
dec
inc
dec
dec
or
cmp
sub
and
mov
popf
pop
mov
dec
fwait
inc
imul
scas
in
mov
popa
cmp
out
jp
xlat
notl
stos
loopne
xlat
call
jl
mov
xchg
xchg
jne
in
xor
adc
sbb
jae
in
pop
je
mov
cmp
cld
pcmpgtb
sar
mov
inc
pop
inc
dec
push
pop
loop
outsb
jb
aad
popa
pop
hlt
push
jnp
xchg
pop
pop
sub
dec
aam
push
pop
aam
push
fdivrs
dec
test
adc
shll
or
rcr
mov
leave
xchg
pop
decl
lock
xor
enter
cltd
pop
jl
outsl
jmp
dec
aad
std
out
xor
aaa
push
jg
jns
push
ret
push
jns
add
or
jo
in
inc
mulb
aad
cmc
jbe
push
clc
adc
add
mov
jle
jge
lcall
or
iret
sub
movsb
xchg
xor
addb
xor
mov
mov
in
sahf
jb
mov
je
xchg
inc
lcall
add
mov
or
out
add
xor
movsl
and
pop
mov
jmp
jl
insl
daa
iret
xor
mov
pop
fwait
js
xchg
pusha
out
fldenv
sbb
repz
pop
mov
dec
pop
ss
pop
cli
mov
sbb
inc
dec
fisttpll
cmp
dec
push
and
adc
xchg
jmp
scas
andl
xchg
sub
ss
dec
shrb
ljmp
jle
add
and
mov
je
fistpl
outsl
mov
and
movsb
repnz
subb
cld
mov
out
loope
pop
xchg
stos
add
jb
mov
imul
lea
dec
or
lcall
pop
inc
push
dec
or
shrl
loope
adc
mov
mov
pop
addb
outsb
out
or
rcll
pop
ss
negb
insl
mov
sub
mov
cwtl
pop
push
push
add
add
cltd
bound
iret
mov
inc
aas
out
movsl
push
jne
out
ret
imul
cwtl
cmpb
imul
pop
push
inc
mov
andb
sub
fdivrl
sti
cwtl
mov
or
rorw
pop
push
mov
mov
pop
outsl
mov
loope
or
rcrb
pop
push
data16
adc
or
adc
pushf
test
mov
lahf
lods
mulb
std
add
sbb
fwait
jmp
popa
pushl
mov
iret
loop
aaa
xchg
mov
in
lods
push
enter
mov
xchg
jp
and
lods
es
shlb
mov
xor
fistl
lods
push
lret
rolb
jp
mov
fs
pushf
andl
push
sub
movsb
lods
pop
adc
mov
loope
pop
sbb
lods
push
loope
cmp
icebp
xor
or
ds
sbb
in
and
sbb
mov
dec
test
int3
dec
iret
add
aam
cmp
out
mov
popf
pushf
sbb
fcoml
adc
les
ljmp
fisttpl
pop
push
and
add
rcrl
ja
or
hlt
ret
adc
mov
mul
push
xchg
loop
or
orb
movsb
push
cmp
scas
dec
xchg
jbe
add
lret
lea
neg
mov
or
push
aas
xor
pop
xor
je
subb
cli
dec
into
movsl
jp
push
mov
js
sbb
aam
lahf
lahf
and
lcall
int3
mov
fwait
add
fnstcw
inc
cmp
mov
lods
xchg
sub
lds
push
in
lods
sub
push
hlt
mov
repz
jo
fldenv
xchg
idivb
pop
mov
add
add
push
mov
out
stos
lret
mov
add
mov
fmuls
int
js
mov
dec
pop
mov
jmp
dec
push
fimuls
dec
xchg
xchg
sbb
and
loop
dec
lea
nop
lret
adc
push
and
jae
or
int
cltd
inc
arpl
out
aam
xlat
jecxz
es
mov
dec
xor
fadds
sbb
push
cmpb
aad
or
or
mov
je
cmp
scas
aas
mov
ds
insl
call
jge
xlat
sub
insl
data16
inc
and
push
xchg
cmp
push
imul
push
pusha
jle
push
pusha
xor
cmc
sbb
outsl
imul
outsb
mov
or
jl
adc
push
stc
lock
push
mov
and
nop
int3
aam
inc
lahf
xchg
pop
test
dec
ljmp
adc
jb
out
loopne
dec
aaa
movsb
out
subb
mov
dec
stos
out
fwait
std
jno
and
pop
outsb
scas
fmulp
lds
xchg
mov
loop
sub
das
out
inc
mov
aam
pop
inc
mov
movsb
lea
sbb
clc
inc
mov
lret
xor
loopne
pop
mov
inc
aaa
pop
xor
or
xor
inc
addr16
pop
in
sbb
cs
jne
aam
cmp
cwtl
xorb
aaa
popa
mov
inc
imul
aas
pop
loopne
dec
ss
aam
stos
out
outsl
repnz
inc
push
xor
mov
movsl
call
jnp
or
push
adc
ds
shl
jl
mov
out
pop
jb
gs
pop
fdivp
lahf
testb
xor
data16
dec
push
mov
cmp
scas
jae
mov
mov
sar
test
sbb
sbb
clc
mov
dec
aad
fnstenv
loope
fisttpll
das
xchg
mov
cmp
mov
imul
dec
adc
push
rcrb
add
sub
imul
pop
in
dec
fisttpl
lods
popf
sub
ss
inc
inc
xchg
add
add
xor
sbb
add
mov
fistps
shll
push
cli
stos
adc
or
js
push
mov
stc
sbb
pusha
dec
and
je
lock
mov
xchg
or
rorl
sbb
inc
dec
xchg
cmpsl
divb
lret
into
stc
aas
sub
cmpsb
mov
push
jno
jnp
adcl
pop
lea
out
popf
sub
mulb
in
test
sbb
jo
call
inc
pop
flds
stos
in
or
push
sbb
idiv
mov
loopne
push
xchg
dec
jp
jl
hlt
jg
cmp
aas
mov
repnz
inc
lcall
inc
or
in
mov
or
jl
inc
cmp
movsb
inc
xor
jmp
sbb
mov
stc
xor
out
mov
or
cmc
ds
out
int3
mov
mov
adc
jl
aam
in
dec
lret
dec
into
dec
dec
into
dec
push
mov
jmp
lcall
call
cmp
pop
pop
push
sub
rclb
cmp
pop
mov
lret
mov
hlt
xor
inc
daa
cmpsl
insb
and
cmp
jno
xchg
leave
cli
dec
mov
mov
test
mov
out
lahf
mov
dec
bound
outsl
into
xor
fldt
adc
ret
adc
mov
xlat
negl
imul
jle
fcomps
xchg
dec
sub
inc
cli
add
add
xlat
fbld
sbbb
cs
pop
nop
js
mov
jnp
iret
insb
and
rcrl
mov
mov
sbb
fidivl
mov
mov
xchg
dec
mov
pop
mov
popf
fistpll
mov
out
xor
lcall
cmp
inc
fistpll
lahf
int3
jg
jb
adc
enter
cs
and
ja
gs
jl
imul
out
repnz
mov
pop
popf
sbbl
adc
mov
sbb
xchg
and
add
add
or
jle
lret
aas
test
in
push
cmp
jecxz
scas
dec
jmp
mov
fsub
dec
inc
or
pop
mov
and
dec
lret
add
mov
lahf
inc
dec
add
pop
xchg
cwtl
hlt
stc
cmp
daa
decb
pushf
aas
cs
xchg
lods
sbb
fnsave
loop
into
rol
or
jns
inc
mov
or
mov
jl
jmp
inc
fsts
loop
pop
out
or
sbb
mov
nop
test
out
sub
imul
fwait
scas
sub
and
xchg
in
int3
outsl
push
int
adc
imul
loop
or
stos
sub
adc
add
fwait
xchg
pop
fmull
test
lods
fildl
test
in
sbb
xorl
cmc
loop
or
push
les
cs
out
dec
add
push
aam
push
pop
call
popf
dec
adc
fs
sbb
dec
push
mov
jmp
jne
ljmp
pop
ss
xor
int3
jno
movsl
mov
clc
mov
arpl
insb
test
push
adc
mov
mov
and
xor
das
jbe
mov
mov
les
mov
ljmp
push
jns
push
pushf
xor
lea
sub
mov
rorb
xor
lods
dec
nop
jg
fildll
sar
mov
adc
pop
fbstp
xorl
aas
cmp
fisubs
mov
movsb
adc
cmp
pop
outsb
jo
imulb
push
fwait
ja
push
or
sar
stos
or
xor
pop
test
imul
cld
fldl
cmovp
lcall
mov
sub
sti
lret
test
sbb
mov
inc
xchg
out
add
aam
sbbb
aas
loopne
fs
leave
add
xor
fisubs
inc
fsts
xchg
mov
dec
inc
cld
in
repnz
cmc
loop
mov
dec
ret
xchg
and
xor
cmpb
and
push
cwtl
lock
pop
sbb
loop
jnp
in
sub
cli
int
lahf
sub
xchg
cmpsl
cmp
push
lahf
mov
xchg
fs
lock
and
arpl
inc
ret
ret
xchg
addr16
daa
jecxz
ficompl
mov
test
ficoml
pop
and
call
shrl
sub
enter
fucomip
loop
loope
shl
push
insl
std
andb
ret
hlt
pop
mov
repz
lcall
jge
sbb
sub
negb
or
cmp
pop
mov
sbb
pop
xchg
ss
pop
xlat
into
jno
cmp
jb
lds
movsl
xchg
fildl
ds
aas
sub
inc
rorl
xchg
pop
cmp
fcompl
mov
cmpsb
pusha
clc
shrb
sub
cwtl
hlt
add
hlt
or
shrb
adc
or
cs
xor
imul
dec
mov
mov
mov
xchg
test
cmpsl
xor
insb
xchg
pop
mov
ret
shlb
xor
cmp
sub
movl
mov
jb
lds
lret
cmpsl
xor
mov
push
mov
dec
push
lods
sti
dec
les
lcall
dec
xor
or
test
and
xchg
jp
or
int3
cmovg
sub
mov
push
fbstp
scas
mov
push
das
push
add
or
stos
jp
test
pop
pop
jecxz
int3
push
xor
movsb
cmpb
js
jbe
cmp
push
or
sbb
cmc
push
mov
xchg
scas
mov
jle
in
icebp
out
sbb
pop
cmpsl
mov
es
jecxz
ja
xchg
or
es
xchg
insb
mov
aam
sub
dec
ret
fnstsw
inc
and
and
or
mov
jne
or
imul
fists
cmpsb
push
push
test
sahf
adc
cmpsb
test
and
insl
sub
fcoml
loop
inc
push
and
leave
call
sub
mov
mov
xlat
out
cwtl
insl
add
iret
mov
xchg
dec
stc
dec
adc
rcrl
and
or
jp
adc
outsb
in
cmpsl
in
test
imul
gs
fucomip
popa
xchg
cld
lea
aad
mov
das
jne
cli
cli
mov
pop
addr16
mov
mov
dec
sbb
jne
cmp
dec
mov
jmp
lock
jno
jl
div
popf
outsl
sbb
mov
lret
dec
jns
out
clc
lock
push
push
jl
fs
jb
movsl
imul
sub
mull
fistpl
into
sub
rolb
add
std
inc
mov
shrb
test
sti
push
movsl
ret
bound
xor
inc
push
mov
jmp
pop
out
jne
addb
sub
push
test
dec
orl
mov
mov
xchg
xchg
sbb
cmp
xor
and
fbstp
les
insl
lock
xchg
aas
call
rorl
sbb
stc
xor
mov
mov
std
dec
cmc
jmp
push
push
adc
sub
mov
iret
xchg
mov
rcll
mov
pop
das
push
push
aad
lret
mov
push
rcll
ss
push
mov
lods
sub
lcall
fwait
shlb
adc
mov
icebp
pop
out
negl
fs
add
sahf
loope
pop
xor
or
mov
shr
xor
outsl
jns
xor
nop
into
push
adc
mov
rolb
cmp
scas
pop
cmp
lock
inc
ret
insl
lods
xchg
outsl
rclb
xchg
sbb
sbb
jle
add
cmp
stc
sbb
xchg
mov
or
pop
int3
test
cmp
mov
jle
jge
dec
into
out
syscall
push
jo
xchg
or
insb
adc
sbb
pop
xor
mov
cmp
push
insl
cmp
aad
push
add
pop
out
push
or
js
js
inc
cmc
adc
sbb
es
sbb
mov
lods
push
lds
ret
mov
push
lcall
dec
mov
xor
pop
outsl
lea
ja
mov
cmp
iret
daa
out
in
pushf
lock
jmp
pushf
insb
inc
fcompl
js
jg
mov
js
aas
movsb
cli
push
mov
and
mov
sti
or
and
inc
push
mov
xor
out
xlat
scas
fsubrs
idivl
mov
pop
jb
cltd
aaa
sbb
cmp
inc
lock
mov
adc
add
fdivs
insb
movsl
cmpsl
rcll
sub
dec
test
fidivrl
ds
lds
mov
pop
mov
mov
push
jnp
cmc
mov
mov
repnz
mov
mov
mov
push
popf
nop
inc
dec
mov
rcr
shrl
insb
mov
ljmp
cmp
and
roll
sahf
fbld
cld
inc
inc
test
add
jb
mov
pop
mov
push
scas
mov
mov
inc
into
inc
cli
sbb
or
mov
cltd
imul
cmpsl
push
loopne
outsl
adc
repz
cmpsb
je
popf
adc
shll
test
xor
fcoml
lods
xlat
and
ljmp
or
mov
jb
add
das
xchg
pop
and
aam
xor
inc
fistps
cmpsb
addr16
mov
xchg
jmp
lcall
pushf
test
sahf
ljmp
in
sarb
cmpsb
lods
sub
xor
shlb
cmpsl
jl
sub
push
xchg
mov
cmp
xchg
and
jb
mov
or
cmp
mov
inc
sub
loop
jnp
inc
arpl
adc
testb
xor
push
jo
xchg
push
mov
jbe
xor
pop
das
jnp
inc
std
jno
sbb
sbb
and
scas
push
int3
arpl
inc
into
ja
inc
jne
bound
sub
cmp
cmp
ret
xchg
pop
push
or
inc
push
pop
sti
popf
fists
sbb
add
mov
or
xchg
mov
arpl
fwait
repz
pushf
es
lock
jnp
push
out
xchg
faddl
lock
ror
fisubs
addr16
mov
inc
repnz
test
adc
sbb
xchg
in
push
test
pop
mov
adc
ja
xor
push
es
lods
inc
add
out
jmp
test
daa
adc
js
cmp
out
stos
inc
lods
xchg
ljmp
inc
ret
jb
shrl
aaa
mov
cwtl
iret
pop
mov
scas
in
rcll
mov
dec
xor
inc
and
insb
loope
pushf
mov
dec
or
jp
ljmp
popa
stos
std
mov
and
ret
dec
dec
shrb
loopne
or
imul
mov
es
xchg
push
sahf
mov
jmp
or
and
xchg
adc
push
jle
sub
cmp
popf
repz
dec
sub
xor
into
mov
xchg
adc
jb
ljmp
sbb
aas
jmp
adc
pop
in
mov
repz
int
xchg
adc
mov
cmp
pop
sub
stos
fmul
ja
adcb
jb
stos
mov
mov
add
ds
gs
or
movsb
das
ljmp
dec
jecxz
lods
mov
push
ljmp
sub
lds
stc
filds
xchg
in
xlat
loope
sbb
repz
in
test
into
pop
repnz
xchg
out
and
dec
mov
movsb
filds
aad
xor
mov
cmp
jae
ds
mov
int
mov
sub
fs
sbb
cli
test
inc
xchg
sar
add
int3
fadds
add
cmpsl
out
pop
test
adc
jno
sbb
rolb
lock
loopne
flds
sub
mov
adc
pop
mov
ljmp
fimuls
pop
ret
and
loopne
or
cltd
pop
cmpl
cmp
loope
shlb
aam
push
sahf
mov
shl
ds
std
lods
and
test
adc
jl
out
cwtl
test
jecxz
cmp
aas
into
add
and
fmull
xor
test
unpckhps
aam
fwait
inc
loope
dec
test
xlat
xor
stos
sbb
xchg
mov
mov
bound
sub
loop
mov
fimull
pop
sbb
sub
xor
jnp
xlat
push
jg
sbb
dec
push
sarl
xchg
mov
and
fcomps
inc
fs
movl
add
movsl
xchg
sbb
cwtl
pop
data16
adc
cmp
test
inc
xlat
mov
ficompl
inc
pop
ret
push
and
cmp
push
adc
das
dec
fs
or
sub
cmp
rclb
bound
cmp
cmp
jo
rol
mov
mov
mov
mov
enter
mov
push
dec
lock
xor
adc
inc
inc
mov
test
out
jecxz
popa
push
mov
addr16
jb
push
leave
nop
mov
das
pop
pop
fdivrl
dec
xor
or
pop
dec
sub
es
push
sbb
imul
mov
sbb
inc
aad
movsb
rcr
rclb
lock
insb
pushf
sub
popf
movb
mov
or
xchg
inc
pop
test
pop
lock
xor
mov
xor
test
mov
pop
fadds
mov
ds
adc
sub
in
loop
add
jno
adc
ss
out
pop
push
and
negb
add
inc
mov
xor
in
mulb
leave
pop
push
mov
popf
mov
in
fcmovnbe
imul
in
scas
jne
xchg
movsb
ficoml
repnz
sub
std
xchg
sub
movsl
insb
adcb
nop
xor
or
mov
cmp
or
mov
ds
or
je
mov
xchg
stos
aas
dec
xor
pop
hlt
mov
mov
fisttpl
add
popa
fnstenv
cltd
sarl
xchg
stos
in
stc
pop
nop
cmp
xchg
leave
adc
lea
xchg
and
imul
js
mov
jmp
pushf
dec
cmp
mov
jbe
cltd
xchg
loop
add
adc
inc
in
dec
pop
fisubrs
jle
inc
and
and
jns
outsl
jmp
in
sub
inc
aaa
sub
sub
xchg
ret
popa
mov
pop
pop
pushf
sub
jg
pop
add
mov
sahf
loopne
in
rorl
adc
push
and
in
push
data16
add
cwtl
jo
aam
sarl
jg
mov
pop
mov
sahf
or
adc
pop
scas
cmpsb
sbb
test
sub
cmp
dec
jns
ja
inc
or
fsubs
adc
mov
mov
sbb
mov
jp
stc
pop
push
loope
lock
ud0
out
pop
xlat
imul
adc
aas
xor
pop
dec
test
push
jl
in
inc
push
push
jns
ror
xchg
out
xchg
mov
add
icebp
loope
jo
jp
rcrb
flds
pop
inc
aaa
sub
add
cli
and
mulb
inc
pop
enter
testl
and
decl
sub
xchg
fwait
les
pop
dec
adc
cwtl
mov
or
stos
inc
push
xchg
nop
jns
xor
mov
arpl
js
push
push
ja
test
adc
mov
adc
out
mov
mov
mov
sub
outsl
les
sbb
call
enter
fisubs
inc
fsubs
dec
in
xchg
sbb
insb
cmpl
fs
xchg
cmp
movsb
dec
and
out
dec
xchg
fldenv
cmp
daa
pop
jmp
loop
xchg
jmp
test
outsl
push
mov
cs
xchg
xchg
push
call
push
inc
push
iret
and
test
gs
mov
mov
fsubrl
sbb
push
adc
loopne
lret
dec
in
fidivl
dec
repnz
enter
test
scas
fiadds
testl
cli
test
ljmp
or
or
jo
push
sub
xlat
fiadds
scas
movsl
pop
fcmovnb
out
aad
hlt
stc
scas
nop
push
mov
mov
xor
aas
shll
fistpll
push
scas
iret
xor
mov
mov
cmp
jge
popa
int
dec
xor
xor
outsl
dec
xchg
popf
mov
ljmp
loop
call
and
popa
or
push
out
mov
xor
adc
lea
fnstsw
or
mov
mov
jecxz
fcoms
aad
push
pop
aam
mov
popa
mov
push
ror
nop
mov
arpl
shr
ret
lods
andl
pop
aam
jge
add
sti
outsl
enter
jle
pop
cmpsl
je
xchg
cltd
jne
jl
ja
push
insb
inc
xchg
mov
shlb
div
push
and
bnd
cmpsb
push
mov
pop
and
ja
dec
loopne
and
test
testb
ljmp
xlat
adc
fs
xchg
aas
lahf
cmp
mov
shll
dec
outsb
pop
cmp
shll
in
scas
rorl
call
test
mov
fs
push
cmp
xchg
mov
xchg
fimull
dec
xor
das
xor
jnp
lock
sub
in
xchg
cld
or
fstpt
dec
movsb
mov
xchg
mov
aam
les
cwtl
ret
out
inc
add
dec
lods
mov
jbe
pop
jae
loopne
in
xchg
adc
movb
or
xchg
mov
aam
aad
pop
cmp
fstpl
and
fdivrs
stos
and
dec
push
in
das
adc
incl
mov
xor
data16
aam
mov
stos
mov
xlat
ret
jne
out
fisubl
dec
sbb
jecxz
inc
int3
out
les
sub
daa
fmuls
fs
test
sbb
adc
lds
mov
lcall
aas
pop
dec
pop
jle
int
les
mov
mov
cli
cltd
out
pop
mov
dec
dec
imul
ret
xchg
push
std
sub
cmp
dec
lahf
ljmp
dec
lahf
mov
popa
xchg
in
sbb
sbb
mov
ss
xchg
aad
add
es
out
out
or
sbb
dec
movsb
xlat
dec
inc
xor
push
add
popa
ds
inc
lea
push
inc
pushf
cmp
shlb
cli
arpl
mov
inc
mov
xor
fldenv
and
add
adc
idivl
adc
std
shlb
push
fxch
xlat
pop
sbbl
enter
dec
loopne
cmp
out
mov
sub
fldcw
jle
lret
int
cmp
mov
jecxz
jb
sub
jecxz
shlb
hlt
mov
fdivr
stc
sbb
out
xor
cmp
in
mov
cmovb
and
out
inc
loopne
shll
in
adc
js
cmpl
and
mov
mov
negl
cwtl
inc
addl
push
or
push
sti
push
mov
and
int
fwait
sbb
call
pop
cli
and
cmp
hlt
xor
in
mov
and
es
sbb
add
out
scas
outsb
inc
pop
jbe
cmp
sbb
icebp
test
mov
lds
and
out
out
sub
daa
mov
fisttps
push
xor
pop
aam
sahf
js
repnz
mov
sbb
add
lahf
iret
icebp
push
fs
jge
dec
iret
pop
shll
or
stos
pusha
test
mov
adc
sub
and
repz
mov
or
jns
cmp
les
inc
xchg
fldl
sbb
mov
in
ljmp
mov
cmc
cmp
testl
aam
nop
rcrl
jl
testb
push
fcmovu
lret
ret
jp
rclb
lods
inc
xchg
arpl
fcoms
pop
movsb
gs
outsl
jbe
pop
sub
aad
lret
repnz
inc
add
repz
xchg
xor
and
pop
inc
sbb
das
test
sbb
lret
das
fcoml
xor
cli
dec
incl
fstpl
fiaddl
daa
xchg
and
xchg
mov
sub
insb
inc
test
insl
aad
bound
fdivrs
sarb
xchg
dec
jmp
sub
loope
jle
cld
add
ret
mov
imul
add
sbb
sub
pusha
idivb
pop
mov
jb
xor
dec
int3
lret
fisttps
insl
fsubr
jecxz
in
push
leave
sbb
push
sbb
fisttpll
ja
jmp
lretw
or
or
inc
xor
pop
pop
sbb
push
or
jmp
adc
pop
or
je
std
lret
or
pop
repz
ret
jne,pn
lods
jl
jno
mov
pop
mov
adc
push
icebp
rorl
shrb
loope
ss
adc
and
xchg
shrl
cmp
popf
cltd
cmp
and
stos
mov
and
add
cmp
das
sbb
rcr
mov
add
addr16
sbb
imul
inc
in
fdivrs
and
pmulhw
mov
sbb
pusha
sbb
ret
and
pushf
inc
ja
xorl
mov
pop
popf
xor
ja
in
pop
popa
xchg
xor
pop
gs
push
lea
and
sbb
jecxz
into
or
dec
jl
xchg
jae
shrb
mov
shlb
or
test
xchg
mov
sbb
ss
sbb
mov
xchg
xor
fdivl
push
mov
push
xor
sub
inc
jle
cmpsb
jns
mov
lcall
push
aaa
movsb
stc
pop
shll
mov
decl
fcoms
mov
mov
sbb
fnstenv
jo
mov
mov
sub
xor
je
cli
clc
xchg
enter
jae
fldl2e
addr16
insb
dec
cli
push
lcall
std
cltd
orl
or
add
ret
and
inc
enter
bound
mov
or
sbb
sbbb
xchg
mov
bswap
leave
adc
add
cmpsl
adc
mov
lods
fbld
jmp
pop
test
sub
inc
sbb
nop
icebp
int3
movsl
enter
pop
test
sub
daa
add
scas
cli
sub
xchg
cld
dec
pop
lock
incl
or
pop
jecxz
in
jns
and
mov
sub
lahf
xor
inc
and
add
or
fistl
add
sti
movntq
loop
xchg
popf
icebp
sarl
fdivrs
popf
dec
lcall
and
xor
push
dec
dec
std
pop
and
xchg
pop
xor
js
adc
mov
pop
fwait
je
mov
movb
call
xchg
jno
repnz
test
mov
adc
sbb
xchg
or
or
jg
mov
pop
dec
inc
stc
cltd
sahf
sbb
xchg
pop
xchg
outsb
fisubs
mov
int3
cmp
lahf
sbb
inc
xor
cmc
iret
push
inc
jecxz
sbb
daa
loop
out
push
fsubr
mov
movsb
cmpsl
aas
push
cmpsb
test
xor
les
lods
pusha
sahf
ljmp
shlb
popa
mov
repz
out
or
pop
mov
fildll
cmpl
pop
xlat
insb
fldcw
mov
je
inc
mov
jns
not
cld
jl
mov
jp
and
pop
sbb
mov
push
cs
dec
mov
or
data16
jns
bound
sub
mov
adc
fiadds
and
js
cltd
fcmovnbe
pusha
inc
in
xchg
lcall
or
pop
aas
andl
sbb
xchg
add
gs
jns
xor
data16
pushf
je
xlat
sub
jecxz
xorb
cld
movsl
rclb
sahf
lock
or
xchg
mov
fs
jo
cmpsb
mov
adc
out
stos
jl
std
cli
xor
xchg
ja
jle
sub
xor
xchg
addr16
std
xor
stos
mov
nop
add
dec
jb
cli
inc
outsb
cmc
dec
nop
mov
mov
cmp
stos
mov
jbe
les
pop
test
loope
fwait
stc
mov
mov
and
cli
push
and
pop
lods
push
sub
cmp
inc
lret
leave
loopne
test
roll
testb
push
push
pop
and
pop
aas
test
xor
test
and
test
in
pop
data16
mov
loop
ss
cmpsb
mov
loope
pusha
adc
pop
stc
jmp
adc
loopne
dec
dec
scas
xchg
push
loopne
pop
cmp
xor
and
mov
cmp
pop
and
cli
fwait
cli
cmp
lret
inc
scas
pop
sbb
inc
mov
les
cmp
in
into
mov
icebp
test
xchg
into
xor
adc
adc
mov
sub
mov
cwtl
mov
mov
ljmp
loopne,pt
out
dec
cmp
sub
subb
aad
out
imul
push
jmp
fstps
ljmp
push
jmp
stos
cmpsb
popa
jb
daa
test
sarl
shl
pusha
inc
or
mov
jmp
mov
xor
xchg
dec
pop
mov
je
imul
inc
xor
test
dec
push
cmp
or
mov
fdivs
jae
push
sbb
jno
aas
popa
dec
imul
jg
inc
sub
daa
in
incb
add
sub
test
pop
inc
push
mov
in
push
mov
fisubrl
testl
mov
call
mov
push
xchg
xchg
inc
divb
mov
push
add
in
xchg
popa
and
jl
mov
stc
xor
stos
fwait
add
aaa
sarb
mov
lods
mov
scas
fistpl
mov
pop
and
pop
xor
xchg
imul
cwtl
mov
daa
aad
xchg
fscale
mov
loop
lcall
icebp
imul
inc
adc
loop
cmpb
pop
test
pop
lret
test
imull
out
pusha
aad
add
and
fbld
mov
mov
fwait
arpl
pop
sub
dec
mov
fs
adc
adc
scas
jne
je
inc
cmp
scas
or
jg
sbb
pop
ss
in
push
mov
test
or
or
enter
cli
mov
test
mov
add
lahf
xchg
add
addr16
popa
es
jne
adc
adc
fsubl
mov
inc
and
loopne
sbb
pop
cmp
sbb
into
loope
jp
cltd
and
jp
mov
mov
adc
xor
in
jb
or
mov
ljmp
add
in
mov
bound
sub
add
into
cld
xchg
sarb
stos
fisubrl
jo
and
cs
dec
jecxz
mov
scas
jl
adc
xchg
lock
or
sub
dec
fidivrl
mov
sub
mov
cmp
dec
call
mov
sub
pop
sbb
adc
repnz
fwait
dec
test
lea
pop
push
mov
xchg
cltd
int3
addl
xor
inc
popa
add
jl
jb
bound
jl
adc
dec
lcall
cmp
and
add
lret
cwtl
test
sbb
jmp
scas
popf
inc
call
aad
jp
add
sbb
push
subl
fs
je
ds
mov
in
ljmp
pushf
sahf
int3
outsl
mov
cmp
in
aas
pop
cmp
push
and
mov
xor
xchg
pop
push
loope
sbb
shrl
fadds
je
jge
shr
mov
addr16
and
int3
stc
stc
adc
dec
fmuls
jge
jb
or
pop
idivl
xchg
pop
mov
insl
mov
out
cld
add
sahf
sahf
jle
inc
sub
clc
pop
pop
imul
jg
adc
dec
inc
push
xchg
adc
loopne
out
sahf
int3
xor
cmp
mov
js
inc
mov
mov
mov
sahf
inc
mov
jno
cmp
adc
bts
ss
insb
pop
sbb
xor
in
cmp
add
test
sti
jp
loope
psadbw
notb
movsb
sub
cltd
ljmp
pop
cmp
lcall
pop
mov
adc
and
mov
pop
cmc
cmp
mov
jp
inc
cmp
stc
pusha
and
ret
dec
jns
imul
shl
mov
xor
sub
inc
into
jb
xor
enter
loopne
repnz
add
xchg
pusha
pop
jno
sub
adc
repz
gs
xor
xor
jg
inc
pop
and
push
ljmp
cmp
sub
cmp
inc
test
sti
lock
andl
cmp
in
movsl
ss
dec
xchg
or
je
add
dec
nop
sub
into
mov
dec
lods
xor
mov
leave
outsb
mov
call
jae
out
dec
movsl
push
mov
cmpsl
in
hlt
dec
add
mov
jno
mov
xor
pop
sbb
pusha
adc
sbb
divl
pop
push
hlt
subl
adc
or
clc
mov
stos
mov
cli
mov
nop
pop
xchg
fs
xchg
scas
cmpsb
loopne
cs
mov
add
popa
into
insb
mov
pop
faddp
push
push
fcmovnbe
jmp
mov
outsb
mov
fdivp
fld
loopne
dec
mov
sbb
dec
rorl
iret
lds
lds
dec
push
aad
mov
sbb
push
xchg
add
fiadds
xor
out
add
dec
jg
push
out
ja
sahf
outsb
les
sbb
arpl
cmp
mov
hlt
dec
movsl
and
aas
push
jecxz
push
imul
nop
push
xchg
std
test
and
cmp
shlb
push
or
adc
cmp
maxps
imul
jo
popf
imul
dec
push
add
push
test
jge
lods
jne
sub
test
dec
or
cld
lcall
repz
mov
inc
push
testl
jl
cltd
ret
repnz
push
stc
sbb
scas
push
xchg
dec
fimull
dec
repnz
ds
xor
sahf
outsb
les
sarl
pop
les
inc
jnp
mov
push
repnz
mov
and
pop
sbb
jl
bnd
mov
push
rcrl
ficompl
xor
mov
cli
mov
ficomps
and
or
xlat
aaa
adc
inc
lret
sahf
adc
cmpsb
jbe
pop
cld
fcmovbe
pop
jge
pop
gs
push
clc
jp
gs
shl
mov
icebp
inc
sbb
repz
xor
and
je
sahf
xor
mov
sbb
fldcw
lret
out
xlat
into
and
repz
arpl
clc
mov
iret
push
push
xchg
dec
add
xchg
lea
jne
cmc
inc
sahf
insl
mov
adc
out
add
nop
stos
sbb
mov
pushf
mov
fs
call
inc
mov
fiaddl
mov
mov
fmul
aas
loopne
xchg
jb,pn
es
dec
add
cld
mov
mov
cli
or
test
jl
fbld
xorl
and
mov
popf
testl
or
movsl
stc
in
xor
ret
xchg
push
fsubrs
fldt
pop
cltd
jmp
lods
aas
and
inc
mov
cmp
sub
aas
add
add
sti
mov
push
lods
pusha
ljmp
pop
xchg
mov
and
mov
and
lods
or
lret
hlt
dec
jecxz
cmp
inc
jne
out
xchg
dec
fisttps
push
test
ds
jl
inc
mov
jo
xlat
mov
mov
es
hlt
adc
cltd
js
xor
cmp
nop
jge
fsubrs
cld
sub
sahf
xor
das
xor
pusha
inc
mov
dec
out
cwtl
or
mov
repnz
inc
outsb
and
push
into
popa
mov
in
push
clc
jb
fdiv
jle
pop
xorb
mov
out
sub
pop
insl
addr16
movsl
xchg
add
mov
jno
sbb
in
idivb
mov
xchg
adc
lret
cmc
je
out
xchg
xlat
sub
lods
mov
cmp
pop
adc
mov
push
and
lods
push
dec
sbb
pushf
faddp
push
jg
call
mov
or
jnp
adc
inc
mov
and
jae
cmpsl
movl
in
jge
cmp
dec
ret
sbb
mov
mov
push
adc
in
mov
test
mov
int3
imul
cmc
lret
jb
mov
les
scas
jb
in
jno
inc
sahf
pushf
cmp
xchg
add
dec
addb
xor
mov
xchg
xchg
outsb
adc
mov
inc
mov
xchg
add
inc
stos
mov
pop
mov
cmp
cmp
xchg
lahf
sbb
jb
mov
stc
std
mov
nop
xor
jp
xor
out
cmp
pop
jmp
inc
cwtl
sbb
push
sbb
adc
es
sbb
mov
mov
mov
push
push
dec
repz
imul
or
mov
or
sub
sbb
ja
pop
adc
or
shll
add
mov
jns
cltd
lret
inc
jb
cmpsl
mov
clc
loopne
jno
addr16
jmp
fmull
mov
push
mov
cwtl
add
rorl
mov
jmp
test
inc
inc
push
push
fwait
push
xchg
aam
lock
dec
add
adc
orl
xor
adc
add
push
adc
add
sbb
fs
arpl
iret
ror
ljmp
into
adc
mov
repnz
data16
pop
aas
dec
mov
mov
insb
out
mov
and
cmp
dec
cli
add
mov
pusha
hlt
aaa
xchg
fnop
adc
adc
dec
cmp
jmp
clc
pop
fnstsw
sub
mov
push
add
sbb
pop
jne
adc
cld
dec
cmc
inc
or
mulb
int3
aam
inc
imul
mov
movsb
jmp
add
push
xchg
in
fcomps
mov
jg
lcall
in
nop
je
adc
clc
cmp
enter
jo
pop
xor
xlat
sti
add
imul
cmp
pop
stc
mov
aam
push
leave
shl
lret
pop
into
stos
xor
cmp
mov
xor
clc
popa
xor
lret
and
lds
dec
mov
mov
cmp
out
or
jl
and
cwtl
and
jg
and
cmc
or
sbb
and
cltd
test
xchg
mov
outsb
mov
jnp
pusha
push
jae
inc
fisttpll
mov
or
xchg
mov
loope
arpl
test
inc
insb
push
push
lods
iret
mov
cmpsb
xchg
shr
lret
sets
ret
and
sub
pop
cli
mov
repz
mov
xchg
lret
mov
xorl
jmp
inc
pop
xchg
scas
mov
in
pop
lock
pop
push
adc
fimull
adc
xchg
add
mov
xchg
cmp
xchg
int3
pop
xchg
je
push
aaa
int3
and
push
cmpsl
fidivrs
cltd
jbe
insb
jno
dec
lahf
lock
mull
dec
cmpsb
ret
and
ja
jbe
xchg
inc
mov
leave
push
mov
adc
enter
inc
pop
mov
jg
sbb
jge
pusha
dec
xchg
and
outsb
iret
movsb
repz
mov
jb
mov
or
adc
aam
das
push
pop
push
inc
adc
inc
fisttps
or
sbbb
out
xchg
shr
cs
push
mov
pop
xchg
cltd
jge
cmp
call
shld
test
mov
aas
xchg
inc
xchg
mov
lret
jb
sub
imul
mov
inc
cmpsl
or
icebp
push
in
jno
cltd
cli
sbb
mov
test
sahf
pop
sub
add
and
cltd
int3
movb
cmp
or
jb
div
ss
or
test
dec
repz
mov
pop
lods
sub
mov
out
fidivrs
xchg
xor
sbb
cli
xchg
loop
push
aas
xor
lcall
push
mov
xchg
pop
add
xor
mov
fnstcw
adc
jp
push
out
mov
add
enter
loopne
push
stos
out
and
lcall
mov
mov
outsl
lret
lcall
push
sub
xor
xor
lret
jp
xor
inc
lock
fldenv
test
repnz
arpl
mov
cmpsl
mov
fmul
cmpsl
rcrb
mov
imul
leave
insl
test
adc
push
movsb
or
fdivs
jae
repnz
sbb
dec
leave
les
in
mov
cli
data16
adc
cmpsl
push
fsubr
ja
inc
jns
je
or
movd
pop
cmp
adc
rol
dec
xor
jmp
adcb
stc
sub
xchg
push
jg
dec
insb
mov
mov
lds
add
repz
cmp
cltd
scas
jo
mov
mov
add
hlt
push
test
fcomip
mov
add
hlt
sub
movsb
xor
jno
jge
scas
jo
fcmovnu
fistpl
dec
lds
aam
add
aas
inc
aas
ljmp
and
xchg
pusha
aad
out
mov
inc
out
data16
jbe
test
icebp
xor
mov
adc
mulb
sub
es
sar
daa
jg
xchg
mov
jae
aaa
adc
add
shlb
out
stc
mov
aam
rorl
iret
and
fsubs
shlb
push
insb
bound
mov
lret
subl
dec
cmc
or
adc
add
lea
add
data16
in
xor
push
mov
inc
shll
or
pusha
and
jae
dec
jle
mov
pop
outsl
push
ljmp
sbb
add
mov
out
or
xor
jb
bnd
cwtl
sahf
jne
lock
mov
fs
mulb
icebp
xchg
shl
or
popf
cwtl
aad
or
push
call
pop
and
movsb
aas
sbb
outsl
mov
aaa
mov
mov
in
mov
sub
cmpsl
call
rorb
mov
xchg
lock
or
mov
push
xchg
out
cmp
xor
inc
loop
jbe
cli
mov
mov
into
iret
lods
fcoml
jbe
nop
pop
stc
inc
leave
cmp
das
aad
inc
xchg
jecxz
int
add
adc
and
int3
adc
inc
mov
dec
xchg
aas
mov
mov
xchg
clc
xchg
mov
cmpl
negb
bound
lcall
push
adc
outsb
add
outsl
repnz
jb
ljmp
clc
rolb
imul
test
out
jg
cmp
stc
pushw
jg
and
lods
ja
fldenv
sub
pop
xor
das
adcl
je
fwait
lahf
sub
fs
movsl
pop
or
push
lahf
add
nop
ljmp
sbb
repz
push
jo
lea
shrb
mov
sbb
dec
int
pop
pop
pop
xorl
lea
jbe
inc
sub
lock
mov
mull
ljmp
lahf
adc
add
dec
out
mov
dec
pusha
ss
movsl
bound
xchg
aam
mov
movsl
outsl
cmpsb
into
xchg
sub
sahf
pop
mov
lds
arpl
in
xor
add
cld
sbb
jnp
in
mov
int3
add
cmp
gs
sub
les
stc
mov
leave
sub
popf
and
sti
lret
pop
mov
sub
xor
jne
incb
std
mov
into
cs
imul
iret
roll
lods
cmpsl
dec
mov
loopne
scas
rcll
addb
mov
sbb
out
adc
aad
and
push
inc
add
int3
push
into
xchg
rorb
out
dec
jnp
aas
fadd
stos
addb
stos
les
je
sub
mov
push
inc
shlb
enter
pop
xchg
mov
ret
in
mov
stos
and
repnz
sub
mov
aaa
int
mov
loopne
loopne
rorb
cmp
mov
repnz
outsb
je
fbstp
xor
and
fimuls
inc
cmc
pop
shlb
cs
out
pop
push
sti
inc
js
mov
xor
js
xlat
mov
pop
cmp
adc
lds
dec
or
mov
or
pop
sub
insl
loop
in
dec
int3
or
scas
nop
add
sti
out
pushf
mov
scas
mov
insl
out
sub
dec
sbb
fwait
add
push
push
les
aas
scas
push
xchg
jl
movsb
sbb
mov
mov
dec
iret
or
sub
xchg
leave
fs
mov
mov
inc
xchg
xchg
enter
or
int3
mov
movsl
imull
sub
xchg
cs
js
sbb
int
sub
dec
push
loope
mov
mov
cmp
cltd
test
inc
fdivrl
sub
sub
sbb
out
sahf
cmpsb
inc
xchg
jns
inc
sbbb
flds
sti
lcall
divb
and
lcall
jecxz
jb
jne
pop
push
scas
sub
xor
insl
adc
dec
adc
shll
or
mov
mov
xchg
xor
mov
or
imulb
movsb
cltd
push
into
aad
cld
mov
mov
jmp
movsb
inc
jns
sub
rcll
inc
xor
mov
lods
leave
inc
lea
pop
jmp
stos
sub
and
push
aam
or
out
ficomps
dec
jb
cmp
dec
adc
mov
xor
xchg
insl
std
cli
adc
adc
hlt
xchg
cltd
enter
ds
mov
das
push
pop
pop
divb
mov
jb
adc
sahf
and
xlat
sbb
jno
mov
sub
add
pop
test
mov
sti
push
jecxz
push
sub
mov
and
mov
addl
lods
popa
pop
push
and
nop
sub
add
or
add
sub
fwait
sbbb
mov
cwtl
ljmp
movsl
fsts
mov
insb
mov
mov
push
mov
in
jns
mov
lahf
xor
xor
pop
xor
inc
pusha
arpl
cmp
aaa
rolb
jmp
push
add
push
and
mov
out
std
popa
and
mov
sbb
fidivrs
xchg
fcoms
push
adc
and
lods
ret
xchg
lret
paddw
sub
add
jnp
adc
xchg
out
out
ret
xchg
das
gs
arpl
inc
dec
jns
mov
add
mov
add
addb
das
mov
jno
jno
push
pusha
and
mov
or
inc
out
out
pushf
push
and
dec
inc
jp
add
fists
inc
pop
fwait
mov
adc
jb
pusha
push
imul
fbld
les
call
push
insl
shrl
sbb
dec
add
inc
and
in
push
test
mov
mov
lds
out
popa
or
add
gs
mov
cmp
inc
std
int3
jne
mov
jb
cmp
adc
mov
and
fs
pop
dec
lds
or
pusha
and
sbb
fcmovnu
jg
mov
push
fisubrl
sub
shll
or
xchg
call
xchg
mov
mov
mov
sub
bound
stos
or
xor
cs
nop
test
loope
shlb
mov
stos
leave
pop
pushf
vmread
jmp
mov
jecxz
sbb
fidivrl
rcrb
pop
movsl
inc
stc
add
push
mov
dec
insb
mov
xor
jmp
xchg
into
jmp
adc
dec
mov
cmp
xchg
fildl
jp
push
add
pop
dec
adc
xchg
idivb
dec
lods
repz
cmpb
in
sarl
mov
hlt
add
push
inc
jae
sbb
xchg
sub
cld
sbb
fnsave
adc
cmp
movsl
insl
pop
aas
lock
loope
or
rolb
sti
jecxz
add
aas
loop
lret
mov
xor
cmp
push
daa
stos
rcll
xchg
into
pop
ljmp
das
loopne
cmp
xchg
fsts
stos
mov
in
dec
dec
add
dec
cmc
jb
sub
sbb
mov
sbb
inc
je
hlt
mov
lea
popa
push
int3
sub
rorb
push
sarl
cmpsl
inc
sbb
lret
mov
mov
and
scas
repz
lods
and
es
imul
xchg
cld
imul
mov
test
sub
xchg
outsb
filds
fs
mov
dec
jno
or
sbb
mov
push
enter
pop
pop
cs
lcall
icebp
test
imul
sub
repnz
out
in
fimuls
std
jne
ja
xchg
add
addr16
xlat
xor
jne
mov
je
insl
pop
shlb
mul
lret
xchg
cmc
popa
loop
or
xor
rorl
ret
fstps
testl
mov
push
movsb
sbb
cltd
pop
fadd
pop
add
jnp
add
and
add
pop
lret
inc
fisttps
xchg
stos
lock
and
add
xor
and
ja
cld
mov
lock
mov
inc
mov
ret
hlt
jnp
xchg
mov
and
cmp
mov
inc
mov
jae
test
test
movsl
jo
mov
xchg
sbb
loopne
fdivr
sub
stos
enter
mov
into
xor
sub
mov
jb
scas
lahf
scas
mov
daa
jecxz
lahf
and
mov
add
mov
sbb
push
xor
test
cmp
pop
push
xchg
fildl
popf
jge
pop
xchg
stos
test
mov
pop
mov
cmp
in
stc
and
push
or
movsb
pop
and
sbb
mov
lods
rcrb
in
insb
repnz
xchg
neg
push
push
outsl
out
cli
outsb
aam
cmp
sub
push
push
ss
xchg
out
inc
jle
sub
push
test
cmp
add
mov
and
outsl
int3
lock
push
test
xchg
inc
add
outsl
xor
push
and
insl
mov
add
inc
inc
inc
mov
out
sub
iret
nop
cmp
gs
sti
clc
mov
cld
mov
jg
repnz
xchg
cmp
jl
rol
jmp
sbb
and
push
insl
inc
cmp
jae
aaa
outsl
mov
mov
jl
sub
and
sub
aam
in
loope
xchg
mov
ret
push
mov
sub
dec
je
or
pop
xchg
dec
stos
xor
data16
call
inc
pop
add
mov
movsb
enter
sub
pop
scas
lahf
ds
loop
and
sbb
frstor
pusha
int
lcall
mov
push
cmpsl
xor
dec
jecxz
or
bsf
daa
and
std
arpl
push
lds
imul
mov
mov
in
or
dec
cmp
adc
outsl
sub
inc
mov
mov
jp
adc
fcomp
lcall
sub
sti
ja
xchg
gs
fnsave
mov
adc
aam
test
sub
ds
inc
lret
fcmovb
bound
aaa
xor
daa
or
aas
cmp
adc
inc
xor
test
jae
addb
xor
adc
or
adc
in
lock
int3
add
popf
dec
bound
mov
test
inc
dec
or
adc
popf
and
sahf
movsb
sti
or
dec
loope
mov
cmp
push
mov
xchg
psrld
mov
arpl
outsb
in
jmp
addr16
adc
lahf
sbb
xor
or
add
sub
daa
loope
out
das
jnp
or
mov
out
jb
stos
insl
push
cmp
sbb
jb
test
decl
and
nopl
repz
mov
fbstp
je
xchg
fidivrs
popf
sub
filds
mov
lret
and
pop
stos
sub
inc
scas
xchg
jne
pushf
movl
inc
xor
jmp
pop
into
jecxz
hlt
les
inc
into
xor
decb
repnz
dec
jae
xorl
loop
adc
pop
xor
xchg
mov
in
ja
lcall
int
psubb
push
clc
sub
and
pushf
movsb
cmp
es
mov
ret
insb
or
push
mov
mov
xchg
in
or
pop
inc
push
jnp
mull
push
ja
inc
pop
in
out
stos
xchg
and
jle
cltd
test
push
sub
add
rclb
divb
mov
inc
mov
fsubs
dec
mov
mov
push
cmp
test
sub
mov
mov
dec
addr16
adc
ds
sti
fstpt
push
cmp
loop
fs
cmp
shrl
jle
mov
push
inc
cltd
test
stos
mov
iret
stos
pop
mov
cwtl
lea
roll
adc
mov
sub
sub
xlat
xchg
xor
mov
jecxz
add
fst
pop
or
and
or
pusha
mov
subb
sub
and
sub
hlt
sub
popf
aam
cmp
jb
popf
xchg
fdivs
and
insl
inc
loopne
adc
jmp
pop
dec
into
xchg
add
nop
mov
mov
jne
cmp
andl
and
mov
pop
ds
and
fbstp
data16
imul
xchg
ljmp
jbe
sbb
mov
lahf
les
jg
iret
addl
and
mov
cmp
fcmovb
xor
add
loopne
push
pop
inc
sbb
xor
fmull
push
mov
push
sbb
mov
xor
clc
lahf
xchg
in
leave
loopne
and
add
cmp
out
sahf
xlat
pop
fs
pop
xchg
in
pop
faddp
jns
outsb
add
invd
sub
addr16
xchg
test
inc
mov
pop
scas
cmc
xchg
xor
mov
mov
dec
dec
mov
pop
aaa
pusha
mov
into
fsub
push
cmc
cmc
cld
sbb
test
in
mov
pop
in
dec
inc
cwtl
sbb
insl
nop
xor
stos
lahf
add
scas
pop
fs
into
fisubl
gs
mov
jb
jne
jae
cmpsl
jae
mov
daa
push
sub
andb
testl
xor
push
lods
sbb
jg
sub
push
xor
cmp
les
psubsb
dec
cmp
mov
sub
sbb
data16
jb
lock
xor
faddl
mov
es
bound
and
pop
js
push
or
sbb
lret
add
mov
sbb
popf
mov
cld
inc
adc
xchg
insl
mov
in
iret
jge
dec
imul
in
loopne
push
push
sti
lock
mov
out
movsl
stos
push
pop
mov
ja
mov
testl
das
sub
jne
leave
daa
int
imul
and
aam
test
xor
cmp
lret
adc
hlt
add
stos
pop
stos
adc
dec
dec
ret
sbb
lret
cmc
mov
inc
inc
push
popf
out
mov
insb
inc
dec
cmp
enter
inc
mov
dec
in
inc
lahf
in
xchg
push
sbb
sbb
je
jbe
cmpsl
in
cmp
inc
enter
aad
ja
inc
outsl
xchg
hlt
cmp
fisubrs
sbb
sahf
jno
fldenv
ja
or
fwait
in
pop
das
push
lds
mov
or
cli
lock
rol
and
push
xor
dec
push
pop
loopne
xchg
mov
sbb
adc
xchg
add
cmpsb
mov
sarl
adc
cmp
aas
mov
xchg
mov
test
sub
int
ss
loopne
xchg
or
ret
rcll
xchg
xchg
test
adc
xchg
cltd
adc
sub
xor
or
les
sub
movsl
cld
out
out
sahf
adc
ret
xchg
pop
std
jo
mov
jne
pop
adc
inc
fcomps
fldl
or
outsl
cmp
mov
aam
sbb
mov
iret
aam
scas
cmp
in
mov
jle
aad
adc
push
jl
repnz
pop
inc
iret
jnp
pop
and
int3
jb
or
sub
mov
xchg
adc
inc
mov
jg
out
jae
inc
popf
sbb
adc
ss
and
ret
in
fwait
or
mov
jae
aad
shrl
sbb
jl
jecxz
imull
add
cli
in
in
xchg
xor
inc
inc
add
sbb
test
cmp
lsl
adc
or
inc
in
out
out
inc
xchg
movsb
mov
mov
pop
pop
cmp
setnp
lods
mov
jp
out
mov
jecxz
sub
inc
sub
aaa
es
test
repnz
stc
imul
iret
sbb
jge
mov
push
cli
push
sahf
std
xchg
cmp
add
sbb
or
sub
fdivr
adc
add
mov
insl
and
sbb
dec
dec
adc
dec
fldcw
clc
aam
ljmp
pop
sub
lds
mov
add
cmp
adc
mov
cmp
sbbb
aaa
ficoms
loop
cmp
rcrl
add
jg
cmp
inc
arpl
mov
ja
les
dec
and
and
jns
jno
call
jbe
add
popf
dec
cli
sbb
dec
movb
insb
xor
pop
stos
adc
insl
mov
movsb
loope
shll
pop
fidivrl
jecxz
shl
and
imul
pop
pop
inc
xchg
dec
xchg
sti
repz
jo
stos
dec
inc
push
mov
push
pop
scas
mov
xor
je
arpl
insl
mov
mov
in
arpl
gs
lret
and
fstps
push
stc
stos
daa
inc
aas
dec
xchg
push
pop
mov
push
pop
ja
addr16
adc
lock
push
in
call
movsb
add
jo
insb
and
cmpsl
aad
xchg
lret
push
imul
inc
fistl
lea
xor
jecxz
movsb
rclb
adc
fnsave
movsb
cld
movsl
outsb
hlt
sbb
out
rcr
es
mov
ss
mov
mov
wbinvd
jle
outsl
dec
mov
mov
mov
sbb
dec
dec
rcll
mov
rcrl
or
cld
xchg
sarl
int3
fstl
adc
test
dec
clc
cs
call
call
ficomps
jge
mov
sbb
movsl
ss
mov
lea
ljmp
out
adc
ss
cmc
or
xchg
fmuls
pusha
hlt
mov
imul
sbb
jmp
scas
popf
cmc
fwait
jo
outsl
test
outsl
xchg
repnz
fcmovbe
push
arpl
push
mov
mov
add
mov
subb
mov
xor
add
outsl
pop
js
pushf
mov
test
dec
repz
aas
push
mov
jmp
pop
sub
xchg
pushf
push
push
pop
mov
xor
andl
ret
jge
es
rcr
ja
int3
enter
cmpsb
loop
popfw
jle
mov
mov
loop
imul
push
int
cli
add
jmp
mov
mov
jecxz
jb
mov
aaa
daa
js
stos
pop
jb
push
pushw
sbb
pop
daa
or
and
xchg
movsl
outsb
pop
loopne
in
test
dec
jmp
xor
cmp
sbb
hlt
pop
mov
pop
imul
jbe
push
xchg
je
dec
test
sub
ret
enter
mov
cwtl
fistl
fldl
sbb
pop
mov
pop
movsl
xchg
push
and
sbb
jbe
out
ds
stos
rorb
xor
push
aaa
loopne
lahf
imul
add
out
dec
and
or
xchg
xor
stos
jae
out
push
mov
pop
add
jb
push
cmp
sbb
inc
sub
jo
pop
cmp
add
inc
aaa
je
pop
std
adcl
pusha
inc
repnz
push
inc
lcall
jbe
jl
push
outsb
sub
adc
xchg
push
add
push
mov
cmc
scas
xlat
push
or
cmp
sbb
in
cmp
sub
adc
jnp
xor
xchg
fcomi
outsb
insb
ret
jbe
loopne
mov
test
xchg
mov
pop
mov
ja
mov
inc
lret
iret
xor
int
xor
mov
push
in
mov
pop
push
pop
dec
adc
repnz
adc
ret
nop
mov
insl
insb
out
mov
shlb
aas
dec
push
cld
add
xsaves
adcl
dec
not
test
xor
cltd
cwtl
or
and
add
clc
lods
jno
and
xchg
adc
cwtl
mov
xor
sub
imul
inc
add
jb
push
fdivs
cmpsl
sub
pop
mov
test
fcmovbe
xchg
arpl
pop
lea
pop
and
mov
shrb
mov
or
xor
mov
dec
sub
or
mov
loope
mov
lret
mov
jg
or
push
lds
shrl
cmp
sahf
xor
mov
mov
jg
push
push
add
inc
push
lret
cmp
inc
mov
test
push
mov
add
movsl
mov
inc
cmp
imul
mov
hlt
xchg
clc
js
mov
add
jmp
cmp
loopne
int3
xchg
loopne
ja
int
and
cli
xor
mov
mov
call
iret
les
mov
cmp
movsl
sub
mov
jge
subb
xchg
mov
push
sub
cmp
stc
sbbl
ret
int3
lahf
cld
mov
lods
shl
xchg
sub
xchg
nop
or
cmpb
adc
push
imul
sbb
mov
jl
bnd
out
ljmp
idivl
pop
test
inc
xchg
movsb
in
imul
jle
idivl
xor
sub
insb
jnp
inc
inc
enter
push
je
ret
push
arpl
xlat
loopne
jle
xor
xchg
mov
xchg
lock
dec
mov
aaa
and
sahf
inc
sti
adc
dec
bound
jl
cmc
dec
jmp
cs
jno
cltd
sbb
add
and
ret
mov
lret
or
xlat
xor
sti
loopne
vmovd
data16
jno
rol
rolb
cmpsb
push
pop
pop
addb
les
mov
cwtl
lcall
jae
and
pop
cwtl
sub
ss
lcall
fstl
mov
mov
or
loop
fistpll
xchg
jmp
decb
or
mov
push
xlat
add
test
cmpsl
lds
adc
or
jns
xor
dec
icebp
enter
mov
test
and
mov
add
hlt
test
inc
cmc
data16
mov
jnp
jmp
aam
jecxz
cmovns
aam
lcall
stos
mov
inc
add
cmp
ficompl
xor
repnz
or
push
shll
adc
in
adc
sub
inc
test
adc
lcall
xorl
pop
add
xor
jbe
movsb
cmpsb
out
add
and
or
mov
mov
cmp
imul
adc
jb
stos
vmovntpd
daa
dec
xor
mov
bound
negl
add
pop
sub
add
pop
popa
dec
adc
dec
adc
push
cmp
push
test
mov
dec
aaa
mov
std
in
repnz
fcoms
mov
fs
inc
adc
push
jecxz
clc
nop
in
mov
ret
push
sarl
clc
fdivrl
cmp
lods
cwtl
mov
lret
outsl
jnp
and
pop
dec
js
rorl
cwtl
and
dec
xchg
dec
add
jge
jo
push
jge
sbb
cmc
negb
inc
cmpsl
bound
mov
subl
test
xchg
lret
lods
pop
inc
rcrb
imul
adc
aaa
sbb
jp
scas
mov
mov
lds
orb
mov
mov
ja
cmp
loop
inc
add
adc
or
test
stos
dec
inc
leave
and
xchg
dec
adc
divl
shr
xor
inc
icebp
loope
cmpsb
mov
push
pop
in
mov
aas
mov
mov
jns
insb
int3
xor
cmpsb
mov
mov
popa
mov
jle
daa
or
fdivrs
sub
xor
xor
fidivs
test
cli
push
fsubs
repz
cmpsl
dec
cmovbe
pop
leave
sub
mov
jmp
mov
xchg
jns
cs
sbb
jns
cmp
add
xlat
push
repnz
fsub
fstpl
or
shrl
jmp
leave
mov
jg
pusha
xchg
push
mov
and
std
xor
and
pop
push
aaa
pop
in
pop
jne
pop
int3
jo
push
jg
sti
mov
pop
in
fidivrs
cltd
in
cmp
and
or
lret
aad
cs
int3
mov
jns
cltd
insl
jp
sub
les
out
enter
int
neg
test
loopne
and
testl
notl
int
insb
xchg
or
imul
mov
inc
jecxz
mov
sub
or
inc
fcoms
push
test
les
sub
mov
adc
jns
je
pop
add
dec
sub
cmpsb
adc
out
test
decb
mov
outsb
mov
fnstenv
cmp
push
outsl
frstor
repz
mov
je,pt
dec
sub
aas
or
xchg
or
daa
fidivrl
lahf
push
sub
jne
mov
int
cmpsb
femms
cs
rcll
cld
out
shrl
imul
pop
dec
data16
adc
ror
push
fisttps
nop
xchg
in
jae
mov
mov
mov
popa
orb
mov
jge
dec
and
mov
dec
xor
sbb
push
pop
mov
sub
cltd
mov
imul
sarb
iret
xlat
adc
mov
out
inc
pushf
les
mov
xor
pop
bound
xorb
and
xorl
sub
mov
mov
imul
dec
cld
jnp
dec
push
fwait
jp
jl
jo
pushf
mov
outsl
mov
in
inc
mov
addb
dec
fsub
inc
mov
jle
fldt
repnz
jae
das
add
inc
xor
repnz
jb
imul
adc
iret
pop
sub
jae
sbb
mov
daa
add
push
cs
jmp
call
mov
hlt
pusha
sbb
mov
lock
sbb
movsl
pop
add
pop
sub
daa
dec
in
mov
cs
push
push
and
rorb
arpl
mov
call
xchg
aaa
jnp
add
lock
jg
sbb
push
in
add
ss
mov
adc
pusha
or
xor
pushf
add
lcall
aam
pusha
push
adc
dec
into
lret
loop
dec
push
lcall
les
or
cmpsl
jno
stos
subb
push
add
lock
and
insl
add
mov
add
out
lds
daa
dec
or
in
inc
inc
mov
orl
mov
sbb
xchg
divb
cmpsb
push
call
xchg
add
pop
ret
iret
xchg
imul
jae
in
nop
and
movsb
xor
jb
jl
sub
jno
push
push
push
xor
imul
sbb
push
inc
push
pop
mov
or
or
push
add
fisubrl
and
xor
cmp
iret
out
fdivrs
arpl
fidivl
push
stos
inc
addl
imul
push
jmp
cmp
cmpsl
sbb
push
add
jle,pn
aad
pusha
lods
aam
std
xchg
loope
xchg
jae
xchg
repnz
xor
arpl
dec
mov
cwtl
sahf
into
in
push
sbb
mov
outsl
xchg
insl
cwtl
or
sbb
mov
jno
out
sbb
pop
jb
jae
jb
xchg
xchg
stos
iret
dec
cwtl
push
adcl
push
dec
fwait
test
dec
lods
or
lcall
fdivs
sbb
mov
lret
pop
mov
xor
mov
add
and
mov
xchg
loopne
mov
adc
xor
cmp
push
scas
cmp
xchg
decb
mov
pushf
pop
pop
dec
in
pop
pop
cld
mov
mov
ljmp
xchg
push
add
testl
testb
cmpsl
mov
push
imul
scas
jecxz
push
scas
pop
stos
dec
mov
dec
mov
test
int3
and
pushf
lods
cwtl
cmp
mov
fs
outsb
mov
xor
negb
ss
push
push
loopne
fmuls
insl
sbb
scas
rcr
sub
push
mov
outsb
ja
jns
sub
dec
xchg
addr16
les
pop
rdtsc
sub
xchg
fs
gs
push
jmp
in
stc
or
push
jb
test
insl
stos
jbe
mov
or
sbb
imul
inc
fsts
and
sbb
pop
js
andb
in
mov
ss
das
mov
pop
sti
pushf
bound
xchg
mov
push
aad
scas
add
pop
push
into
adc
push
ja
and
pop
pop
or
cmp
aad
and
and
adc
mov
xorb
lret
insb
mov
lods
pop
jge
sbb
push
lret
fnstsw
icebp
and
test
aas
push
jnp
mov
fsubr
mov
jae
jne
xor
mov
cmp
mov
lods
inc
icebp
aaa
fsubp
or
inc
sarb
jo
cmp
test
popf
aaa
xor
andb
jmp
mov
fstpt
mov
sub
lods
xchg
rcrb
aaa
mov
adc
inc
lret
movl
clc
cmp
movsb
lahf
push
mov
insl
and
add
scas
push
dec
xchg
mov
cmp
std
jb
pusha
cmp
insb
arpl
inc
in
xchg
mov
frstor
xor
stc
out
movb
pop
add
dec
inc
dec
ret
test
ljmp
lret
notl
test
inc
and
insl
xchg
imul
inc
rclb
push
repnz
sbb
ss
lcall
xor
lods
fdiv
dec
testl
frstor
sub
pop
lds
adc
hlt
movsb
out
shll
stos
iret
mov
xor
data16
xor
cmp
add
jp
and
shl
xchg
push
mov
pushf
cmp
cltd
pop
lea
and
pop
je
loop
fists
pop
push
push
jnp
shll
inc
rcr
or
xchg
adc
cltd
push
push
adc
mov
xchg
mov
insl
popa
mov
inc
std
ss
pop
mov
xor
mov
adc
test
scas
push
sbb
data16
mov
push
arpl
mov
addr16
sub
pop
inc
popf
pop
outsl
xor
xchg
icebp
lods
adc
jle
call
aas
sub
push
test
dec
cld
adc
sarl
push
arpl
subb
sbbl
xchg
sahf
and
mov
pop
inc
cwtl
and
dec
dec
imul
test
xor
pop
sahf
xorl
stos
fwait
cmp
femms
mov
jg
nop
mov
cltd
inc
adcb
cwtl
xchg
aam
dec
push
scas
xorb
jecxz
xor
movsl
jae
int3
jmp
lods
xchg
and
push
movsb
push
movsb
adc
inc
xor
inc
out
jg
jp
add
push
and
cmp
mov
xchg
mov
ret
dec
cli
lret
push
out
or
mov
mov
jle
fcmovb
pop
dec
mov
sbb
flds
fucomi
call
mov
icebp
jae
aaa
sub
jmp
push
jl
jb
add
push
xlat
shl
int3
mov
ret
imul
push
imul
pop
daa
jb
jge
js
add
in
mov
bound
sbb
pushf
inc
jp
lcall
xchg
cmp
fcmovu
ds
sub
push
bound
dec
push
jae
aam
insb
jno
add
sbb
push
xchg
addr16
rorb
aad
xchg
imul
and
cmp
pop
icebp
mov
scas
pop
add
stc
lcall
test
jb
xchg
decb
add
loopne
sbb
sub
mov
xchg
jns
arpl
xchg
push
xlat
rorl
add
scas
inc
inc
stc
pop
es
pop
jmp
mov
lret
inc
pop
mov
push
call
adc
sub
cli
hlt
bound
push
leave
in
les
push
test
movsb
scas
sbb
popf
mov
mov
outsl
jmp
lcall
repz
sub
jl
jmp
stc
jl
out
dec
cltd
data16
das
fs
imul
fneni(8087
mov
icebp
push
orl
in
and
out
jmp
inc
push
insb
testl
ficomps
repz
xor
jl
std
add
fsqrt
sbb
addr16
inc
outsb
and
pop
mov
mov
jl
stc
push
sub
push
movnti
pop
popa
test
cltd
push
mov
mov
jge
pop
ds
jl
int
sub
aam
sti
or
inc
cmpsb
xchg
mov
repnz
repz
in
cmpsl
lcall
lock
sub
jne
es
aad
pop
sub
adc
sub
pop
dec
cs
out
arpl
mov
pop
int
mov
add
loopne
inc
mov
pop
xchg
sbb
cwtl
lretw
js
test
int
mov
inc
pop
nop
push
mov
pop
movsb
mov
and
add
jno
jle
cmp
ja
cld
aam
pop
pop
cmp
test
adc
out
dec
jmp
jae
data16
out
push
mov
mov
test
and
mov
mov
gs
inc
pusha
adc
arpl
mov
add
fldenv
mov
jecxz
sub
outsb
in
xchg
popa
sub
jl
stos
daa
jae
lret
hlt
push
adc
repnz
repz
add
movl
mov
or
bound
and
adc
adc
pop
bound
push
dec
mov
sbb
mov
jno
je
sti
pop
stos
cmp
or
aam
dec
and
leave
outsb
xchg
clc
and
mov
xchg
dec
and
lahf
shl
psubw
pop
test
int
mov
shll
xor
in
test
dec
ja
inc
movsl
jle
lods
roll
out
inc
ret
pop
lret
repnz
call
xchg
cmp
sub
push
sbb
xor
loop
xchg
into
pop
xchg
enter
inc
cltd
sbb
fldenv
mov
lods
inc
sub
xchg
ss
push
in
pop
mov
into
push
mov
data16
loopne
into
sbb
sbb
adc
sbb
repz
inc
xorb
lahf
add
sub
push
mov
rcll
cld
jbe
sub
add
lods
jae
std
add
cmpsl
ret
dec
lret
shrl
push
imul
mov
aaa
into
mov
repnz
scas
jo
pop
daa
pop
daa
or
das
mov
xor
mov
xchg
push
sub
push
pop
mov
int
rol
rcll
jne
ja
in
xchg
sti
stos
test
leave
adc
aam
push
push
pushf
mov
fnsave
fnstsw
test
orb
xchg
mov
out
xchg
les
lcall
sub
in
sub
in
popf
mov
xchg
dec
inc
imul
sbb
mov
ja
sti
push
jne
sbb
mov
mov
into
rclb
fidivs
jb
xchg
and
mov
bound
cmp
or
fisttpl
mov
loopne
xor
add
or
test
aas
into
inc
enter
std
push
pop
cli
scas
pop
or
pop
pcmpeqb
or
adc
in
add
pop
jbe
jmp
adc
outsl
add
mov
dec
xchg
xor
jno
in
jp
cs
daa
ds
xor
cmp
jne
cli
push
les
int
xor
cmp
iret
sarb
xor
mov
xchg
repnz
scas
mov
cltd
mov
push
fs
dec
clc
push
jno
popa
bound
sub
inc
in
daa
sub
inc
xchg
mov
xchg
or
pop
and
sub
movsb
les
imul
sub
xchg
push
test
xor
cmpsb
jge
cmp
cmp
ret
adc
in
xchg
ljmp
inc
jle
and
orb
mov
daa
outsb
mov
mov
cmp
std
xchg
sub
dec
lret
lea
in
aam
ret
or
jge
fildll
lret
jns
fstps
adc
popf
divb
or
sbb
dec
lds
inc
adc
xchg
shlb
addl
mov
divl
je
push
and
ljmp
inc
or
sub
stos
mov
imulb
ds
addb
data16
add
push
cmpsb
sbb
repnz
push
push
mulb
mov
roll
dec
sub
pop
xchg
mov
aam
lret
jns
fldt
cs
or
or
pop
pop
mov
andb
movsb
or
into
pop
ficoms
adc
outsb
out
push
sub
mov
dec
in
xchg
dec
pop
imul
fistl
in
add
mov
mov
adc
mov
xchg
addr16
lret
adc
mov
pop
sti
subb
push
mov
insl
sbb
xchg
ja
lret
fstps
inc
xor
jbe
jg
lret
add
enter
lahf
int3
ret
stos
je
movsb
test
mov
mov
or
dec
xchg
add
xor
enter
outsb
jns
out
popf
pop
js
inc
fucomi
dec
jecxz
inc
xor
jnp
inc
jae
js
leave
pop
mov
xchg
xchg
filds
popf
out
adc
loopne
in
pop
mov
mov
mov
sub
insb
popa
mov
jg
sbb
cmpsl
ret
or
bound
xchg
push
sbb
jnp
jl
pop
push
sub
push
sbb
repnz
xchg
inc
shll
sub
push
dec
dec
out
imul
jne
xchg
xchg
mov
ja
fwait
cmp
addl
adc
pushf
ds
clc
dec
mov
gs
dec
jecxz
repz
ret
lahf
mov
add
stos
cmp
mov
fildl
ljmp
sub
lahf
call
divb
icebp
mov
dec
leave
mov
xchg
dec
sbb
jg,pn
mov
frstor
stc
je
xor
cmpsb
out
push
mov
into
jge
popf
jo
iret
mov
push
bnd
ret
imul
inc
popf
es
add
leave
dec
mov
mov
orb
pop
fwait
incb
rcl
xchg
subb
mov
call
add
jl
sub
mov
sub
insb
mov
jns
or
mov
adc
dec
jne
or
aas
ret
rolb
mov
test
rorl
aam
ja
mov
mov
adc
mov
stc
push
push
jmp
sbb
iret
outsb
pushf
inc
lret
sub
inc
cmp
daa
mov
stos
and
bound
pop
mov
mov
je
adc
pusha
ficoms
out
enter
pop
test
lods
jecxz
dec
sbb
jl
xor
test
dec
xchg
aam
jbe
or
mov
repnz
or
rorl
sbb
add
clc
ret
jg
xor
ljmp
test
call
lds
fs
mov
or
mov
fmuls
xchg
cli
xlat
data16
aam
rcll
jge
adc
jns
es
mov
mov
adc
jle
movl
mov
int3
les
mov
call
jne
pmaxub
int3
xor
sbb
sbb
adc
mov
jle
out
int
lds
pop
jmp
sbb
imul
adc
rclb
into
push
flds
and
outsl
mov
or
mov
mov
push
push
add
je
pushf
adc
aas
adc
lods
sbb
sti
mov
xchg
enter
mov
mov
push
mov
xor
mov
jo
adc
aas
mov
push
insb
xor
fcompl
xchg
mov
addr16
fstpl
mov
sub
mov
jle
leave
ljmp
fildll
mov
sbb
int
lock
pop
fistl
push
pop
sbb
xlat
daa
pop
imul
dec
lods
aam
mov
inc
jne
dec
cmp
shll
icebp
iret
stos
sbb
test
push
push
stos
or
decb
dec
sub
inc
adc
imul
pop
jbe
adc
outsb
dec
pop
cwtl
push
bound
cmp
stos
shl
int
push
pushf
gs
loope
adc
xchg
jo
add
and
sahf
mov
xchg
mov
dec
mov
adc
in
shlb
inc
ret
adc
dec
sub
mov
jge
sub
lods
daa
mov
daa
xchg
jmp
cld
cmp
or
push
jo
mov
cmp
orb
push
mov
and
les
fldt
daa
and
cltd
mov
mov
dec
imul
pop
adc
mov
cs
sub
pop
shll
aas
mov
pushf
repnz
icebp
cmc
gs
pop
negb
fsubrl
push
add
cmpsb
daa
xchg
hlt
push
push
inc
out
xlat
adc
aad
movnti
push
mov
shrb
out
xchg
lea
xchg
pop
push
fcom
mov
and
sbb
scas
xor
adc
cmpsb
add
int
cld
ljmp
mov
xchg
dec
lret
inc
ljmp
stc
mov
push
xlat
or
repz
loope
iret
sub
mov
add
jmp
mov
bound
mov
pop
andl
mov
xorb
sbb
pop
sub
nop
cmp
hlt
pop
inc
shrb
mov
dec
jp
xchg
jmp
fcmovnb
test
stos
xchg
in
fdivs
lahf
lds
scas
insb
bound
xor
cli
mov
clc
loope
aam
push
sti
icebp
sbb
cmp
xchg
mulb
xchg
adc
dec
shll
sahf
cmp
pop
xor
insl
cmp
mov
pop
testb
rcl
popa
mov
push
adc
lahf
lock
pop
jo
push
mov
mov
lret
mov
fistpll
mov
push
cs
iret
mov
ret
inc
aad
mov
push
pop
cmp
mov
jp
lcall
aaa
iret
test
adc
or
je
inc
iret
lea
and
mov
repz
mov
xor
push
lret
pop
enter
mov
cmpsl
xchg
scas
mov
mov
xchg
popa
xor
cltd
ja
test
sub
outsl
movsl
popf
imul
nop
rcrb
inc
iret
stos
movsl
addr16
cmp
ret
imul
aaa
add
sub
pusha
jle
ficoms
adc
push
cmc
jne
int
jo
xor
sub
call
arpl
popf
mov
icebp
lods
iret
pop
scas
mov
push
xor
adc
ret
cmpl
push
add
subb
dec
outsl
fisubs
ficompl
aaa
xor
test
fcmovu
out
xchg
dec
arpl
xlat
mov
ret
in
cmp
js
lea
lcall
jns
cmp
cmp
mov
daa
cmc
jmp
push
mov
jmp
std
sarb
sbb
cltd
bound
push
xor
test
scas
hlt
mov
fs
fsin
les
cmpsb
inc
into
inc
fimuls
cmpsl
xlat
js
jg
ret
lock
push
test
clc
fimuls
ds
pop
or
push
push
xor
notl
out
jmp
setbe
pop
movsb
in
das
push
jnp
sbb
jne
jnp
and
xchg
enter
cwtl
jne
sahf
sbb
cwtl
test
fst
mov
stc
xlat
test
mov
stos
adc
test
push
and
mov
cltd
xchg
dec
je
and
cmp
aam
mov
leave
push
or
add
cwtl
ss
add
adc
add
cltd
jo
xchg
pushf
sub
push
inc
jg
fdivrs
in
cs
inc
pusha
mov
imul
in
mov
dec
xchg
jae
arpl
dec
xchg
mov
cmp
xor
mov
movsb
dec
sub
xchg
adc
enter
add
jns
pop
mov
mov
inc
mov
divl
mov
mov
test
xor
adcl
jns
leave
in
insl
mov
icebp
mov
clc
push
fiadds
mov
pop
mov
jae
fisubrs
cmp
xor
mov
cwtl
stc
xor
xchg
fsubs
push
mov
mov
cwtl
fldcw
jp
jle
and
mov
stos
insl
es
mov
nop
cltd
jo
or
xchg
das
aas
inc
mov
push
cmp
fs
icebp
inc
xchg
je
ja
repz
xlat
mov
cmp
pop
rcll
sub
jno
xchg
sbbb
fcoml
pop
rol
pop
rcll
jle
rclb
add
insb
add
pop
mov
mov
add
vpcmpeqd
sbb
test
xor
push
mov
mov
cwtl
mov
cmp
or
push
int
test
imull
dec
jns
cmp
mov
cmc
pop
insl
dec
pop
pop
push
mov
mov
adc
and
pop
cs
add
cmp
mov
cmp
and
shrb
jg
frstor
sbb
ret
sbb
js
jmp
mov
inc
lahf
xor
add
cltd
fneni(8087
int
sub
or
mov
dec
out
sbbl
add
dec
dec
xchg
test
and
xor
jbe
out
nop
fildl
rcr
pop
mov
mov
hlt
mov
and
jo
inc
ljmp
inc
add
lret
pop
jnp
dec
cmp
lcall
jae
ljmp
ret
in
fstpt
aas
cmp
and
mov
pusha
pusha
adc
sahf
shll
sbb
sub
es
mov
jno
mov
push
mov
cld
add
mov
mov
xchg
jecxz
cwtl
cmp
imul
xor
je
jmp
and
testl
mov
movsb
daa
out
aad
mov
and
push
lods
mov
movsb
xchg
aas
jne
jmp
sub
cmc
mov
nop
loop
jmp
in
pop
lcall
je
andl
adc
jge
or
ljmp
push
out
sahf
push
dec
push
sbb
sub
imul
mov
jbe
fidivrs
ja
xchg
xchg
and
js
cmpb
pop
lret
push
and
mov
pop
xlat
mov
jne
lret
pop
sbb
xchg
mov
addb
adc
mov
adc
cld
stc
xacquire
fs
xor
pop
aad
int3
sub
ds
push
push
inc
hlt
sbb
inc
mov
add
std
inc
dec
cltd
testb
rcll
sti
jno
subl
dec
mov
imul
arpl
adc
iret
mov
add
enter
cmp
aas
mov
mov
mov
fnclex
scas
mov
xorb
inc
dec
outsl
dec
cmp
push
jl
xchg
jae
ljmp
repnz
repnz
int
neg
jmp
xor
movsb
mov
jp
dec
mov
fcompl
outsl
jo
pop
jbe
adc
daa
cmp
jg
mov
adc
aaa
aaa
jo
lods
sub
cmp
dec
scas
xchg
add
mov
jno
push
pushf
xor
jnp
stos
inc
push
push
std
push
inc
adc
xor
add
fsts
rolb
mov
sbbl
imul
mov
cmp
mov
dec
das
dec
outsl
xor
fisubrl
jbe
and
push
sub
insb
sbb
xor
stc
adc
shr
test
ret
flds
mov
data16
adc
loopne
ficoms
fnsave
into
mov
insl
adc
ret
xchg
push
pop
push
or
sbb
out
xor
out
xchg
int3
inc
enter
mov
stos
mov
add
xor
outsb
dec
sub
and
mov
push
sbb
sahf
mov
cmp
aas
push
lods
lds
xor
adc
sti
adc
mov
stos
mov
rcrb
dec
or
pop
and
loop
mov
movsb
xchg
cmp
inc
enter
pop
out
xchg
imull
inc
imul
push
jecxz
mov
jle
and
jle
xor
bsf
mov
pushf
scas
push
fldenv
cmp
ret
xor
sub
sub
orl
int
ss
shrl
sarl
hlt
mov
frstor
fbstp
cmp
inc
clc
inc
and
test
xor
add
cmp
jmp
xchg
mov
sbb
icebp
xchg
jle
ret
ja
or
test
push
mov
or
sbb
jmp
out
ret
add
aad
push
mov
pop
xor
out
jp
adc
in
bswap
push
jle
xor
pop
andb
mov
cmp
fsubrl
lea
xor
jns
addl
cltd
iret
mov
jp
popf
xor
les
gs
pop
in
jb
popa
cltd
dec
pop
scas
shll
mov
nop
mov
cld
xchg
outsb
cmp
popa
loop
mov
mov
jno
enter
or
push
pop
cmc
stos
movsb
and
fadd
cltd
xor
sub
add
jmp
sub
pop
add
sbbl
mov
adc
adc
jb
mov
xchg
xchg
inc
adc
inc
sbb
popa
mov
inc
scas
bound
loop
fs
rclb
or
sbb
cmp
imul
int3
pop
mov
pop
test
inc
xor
mov
ss
jne
inc
icebp
in
dec
or
pop
sbb
cmp
sub
bound
not
std
xchg
movsb
xor
pop
mov
jp
xchg
fucomip
sbb
fistl
cmpsl
xchg
sbb
xorl
std
ljmp
add
pop
call
cmp
mov
dec
dec
outsl
lea
into
les
jno
and
popf
mov
xchg
sub
xchg
mov
ret
mov
jnp
and
ret
fmull
xor
cltd
bound
ljmp
xor
fldl
mul
pushl
les
adc
mov
mov
mov
xchg
and
add
push
add
inc
inc
pop
daa
push
insb
lcall
pop
fsubrl
adc
push
dec
pop
and
jne
mov
out
ljmp
dec
pop
mov
mov
xor
jae
or
cmp
outsb
sub
xchg
xchg
jo
scas
icebp
lcall
adc
add
cmc
xchg
ss
dec
mov
sub
sub
imul
and
push
cld
int3
ss
mov
es
loope
xor
cmp
rcr
rcl
mov
mov
push
mov
shr
arpl
adc
divl
stc
mov
loop
jge
jg
jg
adc
inc
clc
cltd
hlt
das
fucomp
sub
mov
adc
cmp
out
add
lahf
push
inc
sbb
pop
pop
inc
mov
xor
sub
cmp
jns,pn
scas
xchg
mov
push
cmp
nop
pop
push
lds
xor
pop
or
mov
test
ficomps
and
dec
lea
jl
fwait
and
mov
mov
mov
out
xchg
xor
add
jmp
sub
xchg
fldenv
jno
in
push
int3
cwtl
aaa
xchg
push
sub
push
into
push
popl
push
dec
mov
idivb
mov
xchg
mov
in
xlat
pop
adc
ret
test
sbb
add
pop
js
sarl
jg
in
fsubr
sbb
je
aam
negb
and
xor
in
hlt
xchg
mov
adc
iret
dec
add
call
hlt
call
sbb
dec
add
jo
divl
mov
jno
mov
mov
test
mov
jo
adc
cld
xchg
adc
stc
and
in
negb
add
inc
stc
loope
mov
test
fsub
sbb
cwtl
insl
in
pop
lds
push
dec
push
mov
and
imull
in
inc
test
and
icebp
pop
int3
dec
loop
inc
jns
inc
es
or
jb
out
mov
inc
push
push
hlt
movsl
andl
add
hlt
fsubrl
dec
mov
leave
icebp
xor
xchg
inc
loope
cmpsl
dec
pop
sahf
pop
inc
or
xchg
cwtl
xor
mov
push
jo
sti
sub
leave
push
shrl
call
rcrl
jbe
or
jg
mov
in
test
push
addr16
sub
pop
aam
sbb
mov
adc
or
jae
cs
mov
ljmp
push
mov
cmp
aas
pop
fsubrs
in
jmp
push
insb
cmp
pop
push
fsub
cs
les
scas
fs
dec
add
and
icebp
or
fimull
dec
icebp
adc
mov
add
adc
and
daa
push
xor
movl
inc
push
or
sets
cltd
push
jecxz
pop
push
mov
mov
push
test
mov
es
and
push
mov
inc
jge
fs
imul
lods
lret
dec
and
sub
jnp
dec
js
and
loop
jl
sbb
stos
mov
lods
sbb
push
dec
out
int3
pop
or
cld
pop
add
int
cmpsl
outsb
hlt
adc
and
mov
cltd
xor
das
cwtl
push
xor
cwtl
clc
sarl
cld
xchg
xchg
pop
data16
xor
or
mov
add
fcompl
iret
or
sub
cs
cmp
push
mov
pop
push
pop
ds
sbb
adc
lds
insl
xchg
add
mov
jecxz
dec
pop
repz
sub
sub
jmp
lcall
imull
pop
mov
imulb
gs
push
xchg
dec
sub
and
sahf
sbb
dec
xchg
xchg
or
pusha
jae
dec
lcall
inc
jge
test
stc
add
sbb
addr16
in
in
inc
int
scas
and
dec
ss
or
mov
subl
inc
popa
movsb
dec
int
rolb
ja
shlb
xchg
jge
inc
orb
jbe
les
movsl
push
fsubrs
rcrl
inc
mov
loope
rorl
mov
ret
dec
mov
mov
lret
sub
push
jecxz
ja
mov
insb
pop
push
xor
pop
mov
mov
push
mov
or
call
inc
or
adc
xor
cmp
icebp
xor
cmp
hlt
loop
fdivrs
jns
and
pop
scas
shrb
sub
int3
aas
push
in
stc
rclb
lret
arpl
pop
and
push
mov
pop
cmp
push
jmp
mov
bound
sbb
imul
mov
rclb
lea
gs
sbb
pop
cli
mov
mov
pop
das
add
pop
sbb
inc
cli
or
mov
push
jg
flds
and
pop
fsubs
push
daa
test
dec
dec
lds
dec
cmp
mov
adc
mov
pop
outsl
nop
or
mov
jg
or
jle
aas
cmp
dec
lret
bndstx
pop
scas
mov
movsl
std
int
inc
sahf
jle
pop
cmp
mov
loope
dec
ds
sub
and
popf
fidivs
mov
push
mov
lods
std
push
pushf
jnp
pop
mov
inc
jns
mov
loope
mov
fldl2e
mov
sbb
hlt
pop
pushf
mov
xchg
repz
in
push
mov
daa
jo
daa
stos
sub
ljmp
out
jae
stc
cmpsb
sahf
ror
sbb
fisttpll
cwtl
jne
test
add
xchg
test
push
ja
inc
fldl
or
idivl
mov
xor
inc
xchg
mov
sbb
es
roll
lods
sub
adcb
or
pop
pop
shl
xchg
add
repz
outsb
mov
pop
in
cmp
add
cmp
sub
lcall
sbb
scas
mov
push
sub
shlb
fsubr
or
xchg
test
pop
mov
push
jmp
xchg
cmc
mov
imul
nop
pop
ret
jge
jecxz
cmp
mov
loopne
ja
lahf
jge
cmpsb
jg
mov
inc
xchg
pop
jno
test
sbb
sbb
add
jo
sti
cwtl
lds
and
cld
inc
hlt
lods
and
cltd
orb
dec
push
dec
pop
movsl
sahf
mov
and
or
std
jmp
dec
cltd
dec
nop
add
and
jbe
lea
cltd
push
xchg
insl
mov
add
mov
push
xor
fs
mov
loope
push
adc
daa
inc
inc
push
add
sbb
aad
pop
push
jnp
sahf
in
and
lods
outsl
out
and
popa
aad
adc
or
sub
push
mov
out
jae
shll
cli
mov
pop
inc
cmp
and
cmc
inc
sbb
or
pushf
movsl
add
test
sbb
in
mov
dec
pop
pop
es
mov
lods
jmp
inc
in
push
stc
add
xor
push
in
iret
testb
add
mov
dec
dec
xchg
mov
clc
arpl
inc
mov
inc
imul
out
int
xor
lret
ffree
mov
fisubs
cli
jmp
jbe
sti
pop
scas
addr16
add
mov
jns
pop
pop
sti
pusha
cmp
dec
div
ja
mov
clc
sbb
jge
cld
mov
sub
loop
pop
jno
push
xchg
das
push
popa
test
icebp
aas
xchg
mov
ljmp
pop
aas
sbb
pusha
imul
inc
pop
pop
test
fstpl
jg
std
sub
pop
mov
and
sbb
xchg
bound
fs
push
rorb
and
mov
arpl
pop
nop
dec
insl
jecxz
daa
cmp
mov
sbb
aam
cmp
xorb
add
xchg
sbb
sub
test
pop
lret
mov
jmp
inc
push
cmpsl
out
mov
ret
shlb
data16
adcb
gs
lret
ffreep
xor
dec
push
push
mov
dec
mov
cli
jnp
adc
cmpsb
xchg
pop
fisubrs
inc
push
inc
or
sub
lahf
pusha
in
outsl
adc
xlat
imul
mov
push
jle
push
sbb
sub
dec
pop
push
ss
ja
mov
dec
pop
stos
test
mov
pusha
xorb
mov
mov
mov
ss
sub
add
xchg
or
out
das
int3
xchg
inc
popf
mov
sub
fcompl
dec
or
jl
xor
adc
data16
adc
mov
lock
xchg
and
ret
jbe
xchg
lods
int
cmpsb
lret
push
add
inc
daa
hlt
dec
insb
push
adc
sbb
fwait
mov
cmp
call
mov
pop
cmp
imulb
cmp
cmp
adcl
aas
mov
int3
pop
mov
pop
xchg
cmp
movsb
mov
adc
mov
xorl
fmul
out
movb
lds
pop
call
mov
push
sbb
imul
sbb
sub
and
rcrb
fst
insb
fisubrs
mov
cmp
or
or
sub
jmp
jl
rcll
xor
and
scas
jle
mov
pusha
sub
lret
and
lret
sahf
xor
and
arpl
mov
sar
shrb
or
jnp
jecxz
jns
bound
or
sti
jnp
inc
mov
outsl
cld
jne
inc
js
mov
push
dec
shll
cmpb
jns
mov
in
inc
arpl
jo
ds
les
pop
mov
mov
sbb
les
data16
adcb
xchg
mov
pop
adcb
push
aaa
add
add
add
dec
add
dec
sbb
loop
mov
cli
xchg
sub
xor
jo
adc
push
adc
iret
fcmovnbe
mov
rolb
sbb
or
outsb
push
adc
sub
push
sub
mov
sbb
push
pop
ss
adc
lret
mov
fsubrl
mov
xchg
fbstp
mov
mov
repz
mov
ss
cmp
jb
fmul
inc
cld
cmp
pop
inc
xchg
add
test
out
inc
test
cmp
sti
add
pop
ret
sub
js
dec
pop
push
or
cmc
ret
add
jecxz
inc
mul
or
mov
rolb
dec
xchg
mov
lock
mov
andb
stos
or
adc
lock
sub
cli
mov
aas
loopne
sbb
pop
pop
cmp
cmp
cmpsb
or
cltd
or
es
or
jne
aas
jecxz
nop
jbe
mov
fildl
nop
iret
je
and
inc
jmp
cld
mov
mov
aad
lock
test
dec
mov
lret
mov
rcrl
push
lea
cmc
inc
sub
hlt
inc
mov
pushf
lret
sti
jecxz
push
lock
insl
and
mov
mov
call
je
jno
or
cltd
frstor
mov
dec
lret
aam
js
mov
fnclex
in
inc
xor
lock
inc
push
sub
sti
ljmp
stos
flds
cmp
insl
insl
cmp
add
cmpsl
insb
push
shlb
jge
lret
xorb
jmp
adc
sbb
clc
iret
insb
dec
sbb
out
cmp
mov
arpl
ss
xor
es
inc
push
mov
repnz
dec
mov
mov
or
or
inc
cli
mov
fwait
jbe
jp
ljmp
xor
notl
out
inc
andb
cmp
jno
test
add
jae
push
cmpsb
fwait
add
inc
in
and
xor
daa
push
test
cmp
pop
ss
add
andb
dec
out
aad
sub
insl
push
pop
sbb
jno
std
mov
mov
test
inc
stos
adc
jne
icebp
mov
fnstenv
cmpsl
out
dec
rcr
gs
mov
es
adc
insl
shrb
nop
inc
fcmovnb
clc
mov
cmp
gs
adc
imul
call
lea
push
xchg
bnd
mov
jge
or
js
mov
inc
hlt
sbb
xchg
mov
inc
loopne
adcb
jg
jg
ficompl
lret
sbb
push
pop
jl
mov
dec
jns
xor
cli
popf
sub
aad
mov
xor
jo
inc
outsb
out
push
xlat
inc
cwtl
cmp
out
sar
mov
test
scas
scas
je
xor
adc
dec
xor
pop
popa
je
out
sbb
and
adc
mov
inc
mov
pushl
or
ljmp
mov
cmpsb
pop
sbb
out
mov
pusha
dec
loope
pop
shrl
pop
and
negl
cmpsb
repnz
mov
insl
jecxz
push
jle
bound
leave
add
sbb
push
adc
aaa
shlb
jg
inc
int3
and
mov
mov
sub
lahf
popa
push
cs
ss
icebp
gs
stos
adc
out
mov
pusha
add
imul
add
sub
mov
lcall
dec
sub
cs
jmp
add
xchg
sbb
das
cmpsl
sbb
or
or
addb
repnz
pop
loopne
and
xchg
lcall
xchg
push
daa
das
cmp
push
imul
lock
sub
mov
sbb
outsb
cmp
adc
enter
andl
repz
mov
xor
mov
loopne
vlddqu
cmp
jmp
dec
lods
enter
push
xor
lea
out
mov
hlt
pop
xor
sahf
cmc
loopne
cltd
scas
test
ds
sbb
repz
push
repnz
adc
int3
mov
jbe
xchg
lock
jecxz
notb
cmp
jge
mov
jne
pop
loope
push
daa
adc
and
inc
adc
ror
jmp
inc
add
push
jae
ret
push
es
shr
ret
ljmp
cmp
mov
mov
xor
xor
cmpsl
scas
cld
sarl
xchg
mov
enter
imul
inc
push
sbb
or
fcompl
mov
cltd
inc
movsb
push
xlat
aam
pop
mov
pop
fidivrs
pcmpeqd
sahf
sbb
fstpt
dec
sub
icebp
ljmp
popa
adc
xchg
mov
pop
dec
xchg
add
pop
fdiv
inc
lahf
push
int
or
fnsave
out
outsb
stc
add
fdivl
sbb
pop
sub
jmp
cmp
sbb
add
mov
lods
movsb
or
cmp
in
imul
or
ss
in
mov
or
push
fimuls
ss
jp
cld
aaa
lret
les
in
sbb
push
hlt
xor
ja
mov
imul
jl
dec
in
call
std
push
sbb
mov
jge
rorb
imul
push
xchg
jnp
lret
pop
dec
adc
dec
or
gs
popf
fsubs
adc
iret
call
sti
outsb
hlt
fs
sbb
push
jmp
mov
loopne
xchg
ret
inc
adc
push
jge
pop
inc
dec
xor
insb
test
mov
jge
out
aas
and
fisubrs
adc
rcl
repnz
movsl
jo
xor
push
mov
cli
lock
stc
stos
push
aas
int
pusha
mov
icebp
mov
cltd
or
jl
lods
dec
push
ds
ja
lahf
add
dec
cld
clc
mov
pusha
lock
mov
push
mov
cmp
popf
xchg
fst
or
xor
pop
pop
push
out
arpl
pop
and
test
setae
cmp
mov
mov
adcl
cmp
push
test
and
mov
add
and
ds
cmp
fbld
xor
aaa
mov
mov
in
pushf
inc
outsl
ret
and
adc
mov
test
lods
rcrb
dec
mov
dec
inc
xor
pop
fsubrl
int
pop
aad
ret
loope
sahf
dec
inc
sti
aad
mov
aas
scas
inc
call
dec
mov
jbe
add
stos
mov
clc
loopne
push
mov
cwtl
repz
jge
stc
lds
rcr
inc
mov
fld1
fcmovb
inc
rcrb
pop
push
mov
popa
cmp
insl
insl
std
add
sub
pop
jp
sbb
iret
adc
cmpl
xchg
notb
mov
sub
cmp
pop
cmp
lahf
imul
shr
in
xchg
cld
add
dec
mov
and
ud0
shl
pop
push
hlt
pop
or
insl
mov
fsts
mov
push
in
stos
iret
enter
sbb
mov
mov
fmull
test
je
out
dec
mov
in
pusha
push
mov
dec
leave
loopne
or
jle
fistpll
dec
out
dec
jecxz
das
mov
dec
stos
inc
pop
or
icebp
pop
mov
imul
inc
cmp
xor
sub
dec
stc
mov
or
pop
mov
dec
inc
mov
or
out
rol
xor
sub
pushl
mov
orl
mov
das
lahf
inc
xchg
jno
icebp
cltd
inc
loopne
inc
pop
xchg
int
adc
jno
ds
add
or
ja
ret
cmp
add
shrl
mov
sub
mov
push
cmpsb
ljmp
inc
bound
inc
pop
xchg
fistl
push
shll
lds
insb
xor
sbb
sbb
test
jge
shl
std
in
ficompl
mov
js
jo
mov
cmp
cwtl
out
jl
lock
pop
jbe
push
mov
sub
fnsave
xchg
and
xchg
mov
mov
xchg
fdiv
xlat
movsl
pop
pushf
rcrb
sub
int3
sbb
cmp
xchg
fucomip
fmulp
lcall
jb
mov
inc
out
ljmp
gs
add
sbb
popf
mov
xchg
in
repnz
lds
add
int
fmuls
mov
xchg
js
xchg
cwtl
rolb
push
imul
mov
add
adc
jo
ljmp
add
loopne
fwait
pop
push
mov
lret
movsb
test
fisttps
mov
adc
rolb
loope
adc
inc
inc
xlat
je
jns
inc
repz
sbbl
sti
out
sub
and
jp
out
ljmp
sub
pop
lret
repz
and
dec
shll
inc
jns
push
mov
repnz
test
push
das
push
test
stc
push
mov
and
mov
lods
jb
cmpl
adc
rorl
add
and
daa
mov
loopne
aad
shll
sub
mov
addr16
mov
imul
mov
in
jmp
mov
arpl
inc
imul
and
and
repz
in
clc
xor
int3
enter
negl
stos
out
dec
push
and
mov
cs
jne
xchg
mov
and
in
inc
inc
sti
push
pop
jg
mov
insl
addr16
testb
call
stos
mov
ret
cmpsb
mov
andl
jecxz
sbb
push
roll
int
push
aaa
je
sub
fnstenv
hlt
sbb
push
jl
dec
mov
push
rcl
jg
inc
stc
nopl
fmull
ja
pop
cmp
mov
add
pop
cld
or
mov
mov
jl
pop
lock
jmp
xor
dec
test
ljmp
fsqrt
pop
adc
pop
lock
js
fisubl
fisubrl
xchg
out
mov
add
xchg
or
orb
out
inc
push
jne
lds
xor
stc
cwtl
ss
cmp
data16
jnp
movsl
adc
jns
sub
test
dec
aam
mov
scas
mov
mov
push
jle
into
stos
frstor
xchg
sub
cmc
ss
and
or
and
mov
in
fimuls
pop
mov
cmp
and
out
cmp
mov
lret
mov
xor
ret
das
cli
arpl
loopw
lds
out
xor
stos
rcrb
inc
xor
sarl
jne
pop
stc
mov
fwait
into
dec
insl
jne
lahf
sub
int
mov
sub
ljmp
or
loop
loopne
jge
pop
or
fisubrl
mov
stos
les
scas
adc
or
jp
cmp
rol
push
ret
jmp
movaps
fidivrl
shlb
and
jnp
and
cld
les
dec
and
loopne
cmovne
out
or
addr16
lcall
mov
stc
jmp
out
les
fwait
in
ja
faddl
or
daa
arpl
jge
mov
in
out
or
aaa
pusha
clc
out
popa
dec
xor
xchg
xor
je
lods
cwtl
lods
mov
jae
ret
cmovl
dec
or
loope
xchg
jne
inc
xchg
test
or
icebp
loopne
push
pop
stos
mov
pop
imul
sbb
int3
cmc
mov
out
int3
push
clc
aad
cmp
incb
movsb
jne
push
adc
and
mov
pop
inc
leave
in
adc
sub
leave
mov
inc
cmp
jnp
data16
imul
push
imul
xor
cmc
or
test
add
and
fucomip
lods
inc
or
lahf
clc
shlb
dec
xor
mov
push
in
pop
addl
pop
and
mov
rsm
dec
pop
in
pop
insl
jg
addr16
and
pop
mov
jmp
cmp
mov
pop
or
mov
pop
xlat
packsswb
sbb
loopne
int3
add
ljmp
sahf
and
and
ds
pop
pop
push
scas
jecxz
loopne
dec
loop
sub
dec
gs
mov
or
idivb
pop
mov
ds
adc
fildll
and
mov
pop
xor
cmp
jo
adc
cmp
dec
imul
cltd
xchg
inc
fstl
xor
sar
ficompl
inc
lahf
or
loop
mov
ds
shrb
cli
test
stos
mov
mov
and
lock
icebp
popf
push
mov
pop
cltd
cmp
out
jb
imul
lcall
cld
xchg
fisubs
out
xchg
adc
cli
jno
pop
andl
subl
xchg
push
adc
gs
sub
dec
cmp
jp
lods
out
out
pop
leave
je
cmpsl
push
lahf
out
clc
mov
ret
mov
push
mov
add
inc
lods
push
cmp
adcb
xor
aaa
arpl
les
pop
daa
mov
push
enter
and
and
cld
sbb
xchg
fsubrl
cmpsl
jmp
mov
xor
flds
je
scas
or
aad
stc
cwtl
fnsave
sti
shlb
movsl
mov
jae
push
or
pop
subl
cwtl
mov
sahf
adc
sub
aam
out
add
add
xchg
inc
aaa
sub
repnz
mov
aam
loop
add
mov
inc
setne
adc
dec
mov
add
mov
adc
imul
pop
or
stos
out
cmp
test
fs
mov
xchg
push
and
std
test
xchg
mov
cmp
sahf
cmp
data16
int3
add
imul
jne
xor
insl
mov
pop
add
xchg
jl
and
data16
push
mov
push
sbb
rorl
call
imulb
pop
test
jl
mov
leave
add
mov
aam
fidivrs
dec
fwait
push
es
xlat
ffree
jns
cmp
pop
xor
mov
sub
push
jmp
cmpsl
jb
scas
xchg
fsubl
mov
sub
push
push
xlat
sahf
lock
mov
push
fdiv
movsl
insl
arpl
fimuls
adc
aam
add
js
cmpsb
scas
mov
iret
adc
in
es
jmp
and
xorb
inc
cmc
inc
cmpsl
lret
fs
sub
cli
int
mov
shlb
shr
roll
addr16
call
cwtl
insl
test
fisttps
std
shrl
inc
fisttps
pop
jb
push
out
leave
mov
rorb
xor
repnz
jle
sub
ret
and
es
imull
iret
xor
mov
and
pop
in
mov
inc
xor
stc
inc
sub
or
add
scas
jbe
in
inc
int3
mov
cs
out
xor
mov
dec
lods
and
ret
cmc
gs
mov
shl
rcll
sbb
std
loopne
or
cmp
daa
leave
sub
clc
xor
out
sarb
lcall
insl
lret
int3
addr16
pop
repnz
adc
sbb
xchg
outsb
adc
push
jmp
jmp
adc
xlat
arpl
sub
std
pop
push
mov
movsl
loope
scas
ret
test
daa
sahf
lods
mov
call
pop
cmpsb
pop
inc
adc
xor
loop
out
repz
xor
out
mov
cmp
pop
lret
xor
cmpb
adc
dec
add
icebp
cmc
adc
jecxz
mov
lea
mov
ds
jnp
cmpb
inc
push
scas
mov
mov
bound
mov
sbb
cmp
ljmp
cmp
les
xor
dec
outsb
addb
int3
adc
sbb
cmp
add
scas
xor
mov
or
mov
mov
hlt
enter
shrl
daa
push
pop
xchg
inc
aas
into
inc
cltd
andl
mov
imul
faddl
out
jmp
scas
inc
push
xor
mov
jecxz
stc
sub
mov
cli
pop
xchg
imul
adc
rcrb
ss
mov
ss
push
cld
pop
pusha
add
push
in
stos
jp
sbb
inc
mov
pop
iret
xlat
arpl
in
mov
pop
adc
and
cmp
cmpsl
shrb
ror
adc
adcl
inc
cmp
mull
dec
add
inc
xchg
xchg
mov
jmp
fucomp
rcll
js
and
arpl
fildl
or
jne
dec
imul
shl
fistpl
xchg
sub
stc
addr16
aas
mov
fildll
test
jno
ret
push
scas
push
ret
aam
xchg
jb
lock
cmp
push
pop
repz
mov
jge
cs
cwtl
add
sbb
insb
mov
or
push
movsb
mov
je
mov
cltd
aas
pop
test
mov
sbb
adc
mov
sub
adc
jle
jle
mov
stc
add
mov
and
lahf
push
mov
data16
leave
mov
js
add
mov
lret
nop
push
pop
inc
cmp
leave
insl
shll
dec
sub
mov
or
stc
pop
addr16
mov
lock
hlt
int3
cmp
add
mov
inc
clc
jb
jbe
imul
callw
imul
inc
nop
mov
cmp
pop
loope
mov
test
xor
fprem1
inc
in
stos
jae
or
in
inc
push
jl
hlt
mov
rcrb
js
movb
adc
test
aas
aaa
sti
xchg
jno
sbb
mov
lahf
ret
or
push
outsb
fbld
pop
jle
mov
sub
es
pop
js
lahf
push
sub
imul
xchg
loopne
push
mov
test
pop
inc
sarb
sti
iret
mov
sub
xchg
dec
popf
adc
xor
or
out
jb
subb
mov
sahf
adc
jmp
out
sbbl
jle
lahf
lret
sbb
sbb
mov
adc
test
or
fistl
daa
out
adc
test
push
insb
inc
xchg
sarl
pop
cs
call
int
sbb
movsl
xor
subb
mov
ret
rorb
xchg
push
std
push
adc
jmp
push
jecxz
mov
adc
lods
xchg
push
mov
xchg
xchg
scas
sbb
call
push
or
push
fdivl
adc
jecxz
fsubrl
ss
or
in
jns
fstpt
mov
cmp
movb
push
mov
cmp
mov
daa
popa
push
mov
mov
and
fnstsw
mov
pop
mov
dec
push
and
fidivrs
and
js
pop
mov
jl
xor
out
hlt
daa
pop
sahf
loopne
cmp
sub
fwait
and
scas
cmc
idivb
je
loop
aaa
push
and
mov
jns
and
js
inc
fbld
mov
pusha
xchg
and
and
sub
cmp
je
insl
jnp
inc
fs
daa
add
mov
dec
js
lret
adc
movsb
xchg
mov
pushf
pop
pop
roll
xor
cmp
adc
jb
dec
xchg
fwait
inc
outsl
cmp
jmp
mov
mov
repnz
outsb
hlt
rol
imul
lea
mov
out
and
push
test
xlat
fstps
int3
gs
dec
xchg
xorb
jle
and
push
adc
push
test
push
rcll
in
inc
push
aam
xorl
nop
xchg
adc
decl
push
push
std
or
imul
arpl
jp
mov
shll
mov
mov
fcoms
insb
adc
xchg
adc
fwait
pushf
mov
shrb
pop
and
fiaddl
or
out
sbb
int3
hlt
fcompl
testb
aad
cli
xchg
aam
pop
add
ljmp
lret
out
jnp
inc
push
dec
sub
insb
and
mov
sub
or
fisubrl
jmp
add
test
lods
mov
test
xchg
add
mov
data16
mov
and
ror
adc
dec
loop
mov
push
jmp
jmp
repz
mov
mov
cmpsl
pop
mov
loopne
enter
add
test
mov
cmc
insl
sbb
ds
pop
inc
sub
enter
cmp
dec
out
inc
jae
lahf
cmpsb
adc
jnp
popf
or
in
idiv
outsl
add
leave
jp
cmp
popa
test
mov
add
push
in
and
pop
push
jb
or
add
into
aam
and
inc
jg
cmpb
ret
and
cmp
jb
stc
xor
adc
pusha
or
inc
and
jae
aad
or
rcrl
es
dec
jns
mov
cmp
sbb
pusha
dec
sti
fldenv
mov
das
inc
pop
data16
bound
loop
mov
dec
xchg
rorl
cmp
nop
push
lods
popa
lods
and
and
into
push
aam
fidivrl
sbb
adc
inc
cmp
call
adc
xlat
shll
lds
jmp
rorl
ds
shlb
pop
dec
ret
xlat
pop
sub
cmp
push
adc
push
xor
pop
fs
std
or
jae
mov
and
ret
ljmp
pop
jmp
loopne
cmc
cltd
mov
lock
pop
sub
mov
push
or
push
sub
pop
mov
or
mov
or
mov
push
xchg
es
cmp
fs
ss
mov
aas
xor
mov
dec
out
andl
push
test
test
and
mov
adc
popa
jle
pop
xor
push
inc
mov
mov
lahf
adc
test
add
es
jl
ja
scas
dec
mov
lods
pusha
or
flds
lret
cmpsl
push
popf
test
mov
xchg
adc
jp
iret
cwtl
hlt
push
dec
cmpsl
shrb
out
push
idiv
lahf
dec
add
jg
lcall
movsb
cltd
mov
or
jb
pop
sbb
fsts
inc
sub
sub
sbb
les
push
xchg
inc
addb
iret
punpcklwd
jns
add
loope
cwtl
jl
and
or
xchg
fidivs
mov
aas
pop
in
dec
leave
and
push
xchg
sub
popa
ss
bound
std
je
mov
xor
pop
xlat
adc
fdivrl
push
add
mov
rcrl
cmpsb
notl
add
xor
pop
lcall
cwtl
shll
test
repnz
cmp
mov
das
std
sarb
mov
or
mov
mov
fisubl
fidivs
repnz
push
push
adc
mov
rclb
add
cltd
dec
popf
shll
and
sbb
addr16
jg
cmp
cmp
cltd
push
repnz
hlt
hlt
std
les
dec
imul
cwtl
fstpl
das
mov
adc
insl
test
jmp
insb
jae
loope
fdivrs
ret
loope
and
std
pusha
cmpsl
jns
push
popa
lahf
inc
push
cmp
arpl
test
mov
push
out
scas
mov
lock
test
sub
pop
xor
lea
cmp
addr16
mov
pop
ds
dec
jns
outsb
in
jp
xlat
repz
xchg
mov
adc
xor
xchg
jno
mov
push
mov
scas
or
lds
push
push
roll
mov
pop
cmp
js
sbb
lock
xor
sbb
repnz
ret
jo
and
rclb
je
fs
xchg
scas
ljmp
lods
lahf
subl
stc
scas
pushf
xorb
outsb
mov
pop
mov
imul
stos
iret
and
scas
mov
test
sbbb
push
add
into
inc
inc
fcomi
shl
jge
js
lods
jg
or
adc
sahf
pop
push
call
in
inc
dec
ss
dec
js
movsb
daa
mov
mov
fwait
sub
or
cmp
mov
xor
call
sahf
and
sub
jne
mov
dec
popf
push
lret
jl
enter
xchg
pop
inc
xchg
daa
pop
cmp
stos
push
mov
out
out
adc
ja
dec
mov
imul
adc
mov
cmp
mov
cmp
xor
add
sbb
adc
xchg
or
enter
mov
call
lret
jecxz
loope
add
and
dec
idivb
or
xorl
xor
pop
xor
pop
add
bound
pop
xor
test
pop
mov
dec
mov
sahf
adc
cmp
popa
push
fstl
std
outsl
dec
into
and
das
lret
cwtl
arpl
outsb
jg
mov
scas
shr
popa
repnz
sbb
lahf
les
mov
notl
outsl
mov
and
xchg
sarb
divl
and
xchg
push
xor
test
mov
fidivrl
push
cmp
mov
sub
push
pusha
add
out
jno
add
mov
cmp
jp
cmpsb
lock
ss
lret
and
xchg
arpl
sub
dec
add
pop
adc
cmp
xchg
out
stos
jbe
xor
cmpsb
fcmovnb
jle
push
je
ss
fadds
xor
test
mov
jbe
cli
aaa
dec
stc
mov
lea
int3
in
sti
mov
in
cmp
mov
pop
js
xchg
imul
cli
ljmp
repnz
mov
mov
scas
xchg
shrl
xchg
dec
rclb
dec
xor
dec
pop
and
adc
movsb
xchg
out
movsb
pop
lods
mov
pop
or
mov
jno
push
or
rcll
jmp
jmp
mov
scas
inc
mov
add
mov
jg
subb
sar
icebp
sahf
rolb
adc
subl
lods
push
shl
pop
sbbl
pusha
or
lahf
xchg
jmp
push
pop
stc
sti
cmc
int
fs
xor
enter
stos
xchg
dec
pop
mov
fadds
pop
push
push
cmp
push
ret
jg
clc
xchg
and
fmull
dec
inc
test
rclb
mov
xor
lods
or
addr16
insb
and
mov
ds
arpl
pushf
rcrl
popf
mov
dec
inc
loop
or
push
shrb
mov
jae
in
cwtl
mov
ljmp
and
fwait
or
jl
pushf
inc
sbbl
mov
add
push
ja
mov
stos
inc
dec
sbb
lret
ret
mov
shrb
mov
imul
push
push
in
sti
adc
push
pop
repnz
pop
cli
xchg
jne
jmp
std
mov
div
outsl
int3
insl
sub
mov
test
mov
lea
mov
push
ret
inc
stos
and
mov
pusha
or
pushf
fwait
cmp
mov
mov
popf
icebp
lock
jnp
sbb
jecxz
push
lock
jg
test
pusha
xor
dec
mov
jecxz
lahf
dec
mov
stc
lret
sbb
xor
lcall
fdivl
and
inc
add
pop
adc
sbb
mov
and
or
mov
movsw
fstl
inc
or
cmp
jo
iret
std
jb
push
xchg
xor
mov
aam
outsl
shll
pusha
inc
xchg
lock
mov
mov
fdivs
loopne
mov
jb
aam
adc
push
xchg
jns
lods
popa
je
xchg
sahf
nop
ret
into
add
mov
or
sub
mov
push
pop
fucomp
push
cmp
mov
lahf
jmp
scas
pop
mov
lods
insl
adc
xchg
push
adc
aad
popa
lods
adc
jo
pop
in
leave
pcmpgtb
jg
sbb
xor
test
mov
aaa
inc
dec
sbb
mov
jns
iret
sub
dec
mov
cmp
subl
mov
leave
out
fs
sbb
dec
orl
testl
adc
sti
mov
sub
adc
movsb
in
test
and
adc
aas
inc
into
push
negb
add
ret
lcall
clc
mov
mov
in
push
repz
jle
fdivl
jne
pop
or
inc
test
dec
mov
xlat
jmp
sub
push
jbe
insl
fstpl
add
ljmp
dec
dec
sti
mov
adc
in
lods
and
jl
mov
pushf
jb
enter
xor
cmp
fldt
cwtl
andl
ror
scas
arpl
stos
test
pop
adc
adc
xlat
aas
jecxz
jo
adc
ret
sbb
xchg
or
call
popa
push
into
nop
mov
xchg
cli
pop
jle
pop
jnp
daa
pop
out
pop
mov
cld
rcl
push
orl
leave
cmp
xorl
stc
xchg
and
lcall
cmp
popf
pop
sub
stos
inc
cmc
rcl
adc
mov
or
and
ret
mov
addl
sbb
xchg
bswap
int3
cmp
into
xchg
popa
xor
jecxz
xchg
nop
push
das
lds
or
lcall
rdmsr
sbb
sbbb
cmp
test
js
jno
aaa
pushf
mov
mov
pop
jno
fmul
inc
xchg
sbb
sub
pop
pop
out
push
jns,pt
fisubs
push
xor
int
push
in
jle
insl
sbb
add
sub
push
xchg
loopne
add
inc
jle
stos
xchg
pop
xchg
pop
insl
mov
insl
mov
sbb
repnz
negb
jne
mov
ljmp
into
push
sti
lods
adc
cmpsb
stc
mov
int
push
test
int3
cli
cmp
inc
add
test
adc
fcoms
stc
rcrb
fldl
sub
js
adcl
mov
jno
lock
ret
mov
mov
adc
mov
xchg
fildll
mov
out
cli
mov
rep
sar
stos
shlb
add
mov
mov
lret
fdivr
or
je
push
cld
or
movsl
fs
cs
push
jbe
cmc
mov
sbb
lret
pop
mov
adc
stc
std
and
popf
inc
cmpsl
aam
cmp
pusha
mov
adc
iret
in
inc
dec
lret
sbb
cld
mov
ds
decl
nop
incb
test
or
ljmp
mov
push
push
out
sub
idivb
shlb
lcall
sub
jns
push
outsb
pop
movsl
inc
sbb
jno
mov
mov
mov
xchg
mov
lret
mov
push
jo
and
sbb
dec
addl
imul
mov
mov
loopne
xchg
ja
and
inc
xchg
xor
and
mov
rcr
jmp
psubusb
sbbb
lret
adc
xchg
inc
rcll
sub
dec
and
addr16
lcall
shrb
mov
or
popa
cli
push
popa
movsb
cld
jmp
lock
fistpl
mov
clc
pop
pusha
call
hlt
inc
cmpsl
xchg
js
cmp
popa
and
jge
in
nop
pop
mov
lock
xchg
scas
ljmp
mov
sbb
dec
cmp
stos
dec
insb
dec
mov
jmp
inc
cmp
and
xor
xlat
mov
shlb
mov
ficomps
shll
cwtl
cltd
and
xlat
test
pop
and
xor
jle
cs
cmp
or
ficompl
fiadds
pusha
sub
shlb
not
pop
lods
xor
pop
pop
cmpsl
pop
stos
outsb
inc
xchg
mov
nop
mov
pop
imul
jo
xor
xchg
leave
mov
stos
loope
lret
xchg
lods
js
xlat
cmc
inc
push
and
jb
jo
into
in
adc
fstps
mov
hlt
and
dec
in
stos
imul
xlat
xlat
cmp
mov
dec
popf
imul
insb
cmp
ss
mov
sbb
movsl
movsb
or
popf
xor
sar
shll
std
daa
pop
aaa
and
scas
add
adc
adc
mov
mov
jle
outsb
sbb
lcall
mov
mov
xchg
or
sub
arpl
lahf
or
rorl
inc
adc
pop
cltd
imul
jecxz
aaa
bnd
adc
lds
adc
mov
cli
out
int3
lds
shr
out
pop
or
sbb
or
sbb
mov
je
or
fadds
pop
ja
push
gs
pusha
pop
fstps
jb
jo
mov
xchg
jno
repz
loopne
fsubs
add
addr16
pop
or
dec
dec
aas
ds
pop
jae
jne
dec
sbb
cmpsl
mov
inc
add
xchg
cmp
cmpsb
cmp
cmc
adc
xchg
shrd
jle
sbb
jp
arpl
fmul
push
dec
lcall
aaa
cmc
jecxz
shll
mov
enter
loopne
jne
outsl
cmpsl
mov
jo
push
repnz
cmpsb
popa
movups
xchg
hlt
lods
push
or
sbb
sub
sub
clc
daa
xorb
or
outsl
test
mov
sub
popf
movsl
xchg
cmc
mov
std
add
arpl
mov
mov
fs
pop
lods
rcrb
fs
cmp
fwait
inc
pop
cmc
call
cmpsl
mov
dec
pop
jns
leave
test
pop
movb
loope
xchg
add
adc
test
sbb
shll
aaa
jb
mov
cmpsl
addr16
xchg
ss
pop
out
push
push
pusha
je
inc
scas
add
push
flds
out
cli
xchg
cmp
xchg
xor
pop
imul
jge
inc
outsl
mov
out
adc
lcall
imul
je
pop
or
ror
inc
pop
hlt
aaa
call
jbe
and
outsb
popf
jmp
cmpsb
ret
out
int3
xchg
popf
push
scas
rep
test
fidivs
or
sub
and
insb
iret
mov
mov
mov
inc
pop
push
xchg
pop
add
or
sbb
jle
sbb
in
jae
sub
cmp
xor
jecxz
pop
inc
in
inc
push
bound
sti
xor
int3
fwait
jno
add
mov
inc
jp
dec
lcall
mov
pop
cmp
pop
or
outsl
cmp
xchg
sbb
mov
push
pusha
stc
test
aas
rclb
xor
lret
gs
cltd
mov
lret
xchg
fnstsw
sarb
mov
outsb
dec
in
cmp
int3
sub
into
cs
stos
addl
scas
pop
cmc
shrl
xor
daa
sar
mov
das
cmc
inc
inc
mov
mov
dec
mov
cmpsl
mov
push
inc
xchg
adc
xchg
jbe
mov
jbe
repz
leave
jb
sbb
imull
xor
mov
jnp
insl
ret
shlb
movsl
out
orl
in
ds
mov
clc
das
out
call
iret
inc
inc
inc
or
mov
fdivrl
pushf
in
loopne
imul
aas
or
and
call
dec
cmp
bound
inc
cmp
cmp
aad
std
add
int
ljmp
xchg
cltd
mov
lret
push
xchg
sbb
inc
mov
fnstcw
in
ljmp
aaa
jmp
flds
push
mov
lcall
jns
jge
orl
cmpsl
pop
mov
scas
pop
sbb
daa
inc
and
mov
rcrb
cmpsb
jle
xchg
mov
rcrb
repz
imul
lock
testb
sub
mov
subb
jno
in
sub
xchg
rclb
cmp
mov
stos
roll
jmp
mov
in
xchg
jge
shll
pop
shl
xchg
lock
inc
push
add
xchg
adc
test
jne
xorb
ficoml
mov
into
mov
mov
enter
adc
adc
inc
aad
lret
cmp
mov
mov
cmp
imul
and
loope
jne
xchg
loopne
cmpsb
call
add
and
mov
in
fdivl
loope
mov
mov
xchg
lock
jns
inc
mov
push
push
and
ret
je
enter
int
scas
test
lock
jl
xchg
jg
fcompl
pop
daa
outsl
mov
iret
lahf
rcrl
call
addb
rorb
push
outsl
aad
xchg
jge
mov
in
repz
shrl
insb
jle
xchg
lds
xchg
stos
mov
sub
mov
mov
and
into
jg
xchg
addl
aad
xlat
daa
inc
mov
inc
xorb
xor
xor
xor
idivl
or
inc
aad
loopne
dec
cmp
insb
add
mov
jno
iret
and
xor
mov
addr16
inc
int3
and
jge
lock
sub
lods
cli
jo
out
rorb
fidivrl
push
xchg
pop
adc
and
mov
insl
mov
scas
add
insl
enter
xor
mov
add
cmp
or
stos
pop
popf
into
mov
test
in
loopne
dec
mov
xchg
xchg
addr16
mov
pop
cmp
aam
ja
mov
fimull
push
push
iret
lea
in
cmp
xchg
mov
fiaddl
dec
jnp
sahf
pop
and
jno
sti
fs
cmp
jg
ret
ret
mov
ja
sub
lret
push
push
inc
mov
call
sub
mov
pop
mov
adc
xor
cli
popa
sbb
std
std
sub
mov
mov
xor
xor
jecxz
push
lcall
pop
lcall
pop
pop
sbb
iret
out
ljmp
mul
addb
ficoml
mov
cli
cmpsl
mov
and
stc
mov
sti
jae
adc
xor
and
xchg
pop
lcall
or
repz
daa
ljmp
fdivrp
xchg
rclb
stos
pop
lcall
cli
and
sub
cmpsl
push
pop
sub
pop
mov
test
shufps
std
cli
cmp
ret
sub
test
xchg
adc
loopne
fwait
aaa
hlt
enter
mulb
out
incl
sbb
jge
sbb
push
mov
shrb
xorl
in
lret
decb
ss
dec
pop
pop
test
int3
or
jmp
cli
xor
inc
hlt
cmp
test
decl
sbb
into
jae
scas
addr16
xchg
insl
icebp
rdmsr
iret
add
cmpb
adc
icebp
and
xchg
jp
ss
rcll
mov
mov
cmpsb
ret
pop
out
xor
pop
cmpl
mov
mov
mov
mov
xchg
cmp
popa
pop
pusha
shlb
jae
movsl
push
sbb
xchg
lock
jg
gs
test
xor
imul
cmpsb
mov
pusha
std
and
orb
lahf
clc
push
mov
subl
mov
and
daa
mov
dec
in
xor
add
data16
and
dec
icebp
out
push
xchg
mov
sahf
fsts
cmc
fimull
scas
stc
loopne
pushf
xchg
sbb
sarb
js
add
sub
jne
imul
xchg
rcrb
loope
sbb
push
fwait
and
repz
and
pusha
gs
out
leave
jne
mov
and
stos
jge
pop
ss
movsb
int
sbb
and
cmp
repnz
pop
sar
hlt
call
test
into
sub
pop
fadds
xor
sub
hlt
xor
clc
ret
xor
dec
cltd
add
mov
push
push
jb
stos
enter
xchg
cmp
pop
xor
mov
sti
lods
pusha
push
xor
jno
xchg
icebp
rorl
into
movsl
add
mov
cmp
push
fistl
pop
or
daa
xchg
dec
fucomip
cld
mov
andb
movsl
subb
mov
in
test
mov
stos
add
scas
or
std
jae
adc
mov
jmp
add
pop
insb
test
xchg
mov
daa
movq
dec
insb
loopne
enter
ds
xchg
cmp
push
subb
jmp
inc
adc
sarb
in
scas
xchg
pop
xor
in
push
or
xchg
push
imul
add
cld
cmp
popf
outsb
jnp
mov
fdivrl
lods
jne
sbb
stc
lods
and
nop
test
sub
dec
jbe
cmc
cmp
in
xchg
ror
faddl
push
fxsave
jb
xor
jle
imul
pop
sarb
ljmp
sub
jl
cwtl
int3
es
or
mov
out
mov
dec
ljmp
sbb
dec
mov
cmc
pop
mov
fs
mov
bound
sarb
fiaddl
jbe
in
sbb
add
stc
or
xchg
cs
popl
pop
inc
push
ret
and
jne
incl
lods
es
rol
movsb
movsl
add
jl
adc
nop
aas
lds
fadd
lea
ret
push
leave
jmp
adc
push
pop
jecxz
jge
jmp
or
out
out
dec
inc
inc
jb
mov
leave
movsb
mov
shll
mov
repnz
push
push
inc
dec
jl
xchg
mov
test
pop
arpl
sti
insb
loope
ja
shll
nop
adc
mov
pop
stos
je
inc
jp
push
nop
test
xor
shl
daa
int
jg
out
and
add
adc
test
arpl
xchg
jg
jo
popa
mov
repnz
out
add
rolb
inc
add
repnz
orb
or
js
mov
sbb
and
mov
xor
movsl
leave
pop
sti
daa
and
cmp
aaa
outsb
xchg
daa
lret
and
cmp
lcall
jns
inc
mov
mov
lods
pop
lea
imul
je
stos
pop
enter
adc
ja
jp
scas
push
jae
xor
lcall
push
fcom
lcall
arpl
popa
test
fsubs
and
inc
scas
fisubs
inc
mov
pop
aaa
aas
fimuls
mov
inc
dec
jmp
push
xchg
js
push
cmp
clc
fcoml
dec
jae
xor
popa
pusha
xchg
inc
inc
test
aaa
jle
sub
pop
jecxz
cmp
cmpsb
pop
mov
into
mov
dec
inc
cwtl
pop
push
pop
dec
inc
stos
sbb
mov
xchg
push
mov
inc
cld
push
leave
mov
iret
ljmp
and
inc
jmp
inc
jo
fildll
aaa
jbe
scas
sti
int3
adc
or
fiadds
fisttpl
mov
cmp
sarb
mov
add
test
es
and
mov
mov
pop
cmp
ret
stc
and
xchg
fadd
pop
lea
and
or
cmpsl
add
dec
inc
out
fs
mov
out
push
leave
and
mov
dec
addr16
repz
mov
fldenv
mov
xchg
xor
sub
test
mov
xor
or
das
mov
cmpsl
dec
mov
xchg
ret
sbb
sub
jb
push
mov
int3
lret
xor
cmpsb
jns
dec
push
movsb
in
mov
sub
adc
pushf
lret
and
jg
inc
pop
lock
out
or
or
popa
mov
shrl
sbb
neg
sub
jo
jp
call
ret
in
movsb
add
lret
adc
jecxz
jbe
fldt
mov
jo
xchg
out
sbb
out
es
xchg
or
lods
fs
clc
mov
out
outsb
or
mov
push
leave
jle
movsb
test
cmpsb
dec
or
mov
jl
aas
insb
inc
test
adc
push
das
pop
jns
fiaddl
cli
or
int
fs
dec
inc
dec
inc
mov
sub
jnp
mov
sub
lock
jmp
mov
xor
cltd
fisubrs
ffree
mov
sub
inc
dec
jnp
pop
jne
mov
jns
push
push
bound
pop
cmp
xor
cwtl
movsb
test
inc
cmpsl
add
inc
test
cwtl
mov
pop
or
mov
lcall
lret
xchg
push
les
xchg
inc
jne
mov
push
insl
stos
sbb
sbb
or
mov
dec
and
add
ja
push
jae
xor
dec
aas
pop
sub
rcrb
ret
sub
jmp
jl
mov
sub
or
pop
sbb
mov
pop
add
add
es
aad
sbb
cld
jg
aaa
push
cld
fisttpll
push
or
adc
repnz
mov
jp
xor
mov
xchg
cmpsl
sahf
jge
sub
adc
movsl
loope
aad
fsubrl
pop
sbb
mov
dec
subb
pushf
shll
inc
xor
popf
mov
out
jecxz
movsb
lcall
in
adc
mov
sbbl
jae
sub
mov
insl
es
fidivrs
inc
fidivl
je
outsb
xchg
lods
xor
cs
shll
icebp
mov
idivl
pop
mov
cmp
jecxz,pn
repnz
xor
in
pop
les
inc
fadd
pop
lret
sti
lods
adc
fwait
sbb
int
ja
mov
pusha
push
and
inc
adc
pop
cmpsl
in
pop
pop
jmp
xchg
mov
hlt
dec
out
dec
mov
pop
call
cmpsl
pop
lret
jno
push
aaa
sbbb
mov
xor
int3
sbb
inc
hlt
fisubl
jns
sub
loopne
repz
ljmp
mov
and
sbb
mov
sahf
hlt
xchg
sub
push
sbb
lcall
js
fisttpll
lock
lds
and
cmc
insl
mov
push
iret
in
mov
jge
mov
inc
lcall
mov
add
cmpsl
shl
jno
push
in
cwtl
and
and
stos
fisubrl
xchg
out
and
ret
push
xchg
data16
scas
jmp
mov
imul
movsl
cmp
jae
fsubs
xor
and
push
and
out
cwtl
arpl
jb
inc
insl
xor
adc
leave
xchg
ljmp
jbe
test
mov
mov
cmp
jnp
cwtl
push
aaa
int
sti
out
ffree
and
hlt
orb
rcrl
xchg
jae
xchg
pop
mov
inc
pop
mov
arpl
pop
repnz
jmp
sarl
sbbl
loopne
nop
cmpsb
pop
fldl
rorl
mov
movsl
cmc
mov
in
test
outsl
or
dec
repnz
and
ret
gs
sbb
ficompl
sbb
push
push
dec
pop
or
pop
add
cld
inc
add
ja
xlat
jle
cmp
ja
pop
mov
adc
jnp
lret
pusha
cmp
mov
add
mov
pop
inc
cwtl
mov
ja
cmpsb
sbb
mov
std
or
push
int3
ss
xchg
adc
mov
rcrl
ror
push
add
mov
outsl
mov
xchg
mov
sbb
mov
adc
and
hlt
subb
add
inc
xor
iret
cmc
push
shll
lock
jl
shlb
aaa
scas
sbb
aas
movb
fnstenv
icebp
nop
xchg
jle
lods
insb
aam
pop
inc
mov
scas
or
lods
and
adc
xchg
hlt
push
aaa
jl
add
dec
jno
mov
xchg
and
mov
and
jmp
icebp
in
xchg
pop
mov
inc
int3
jl
push
fldenv
popf
sarl
out
mov
mov
or
insl
push
fistps
enter
shlb
outsl
gs
mov
push
cmpb
sub
rcll
xor
fs
xor
mov
cmp
in
out
lea
in
adcb
stos
in
jge
mov
inc
cmp
ltr
adc
pop
jb
sub
xchg
mov
xor
add
inc
test
pop
xchg
sub
setge
stos
mov
mov
inc
mov
aaa
sub
mov
popa
rorl
icebp
push
inc
in
ja
jmp
jmp
push
test
mov
lret
popl
pop
cmp
jecxz
lret
or
ret
clc
hlt
jge
rcll
into
jmp
shrb
mov
add
negb
inc
lods
mov
inc
into
in
adc
cmpb
push
dec
xchg
iret
sbb
daa
daa
sbbb
dec
and
ds
popa
push
add
enter
jge
mov
adc
xchg
fiadds
dec
jmp
out
jbe
scas
ljmp
dec
add
js
push
push
pushf
xor
cmp
mov
pop
popa
sbb
pop
stos
sub
stos
popf
inc
xchg
stc
mov
insl
xchg
cmp
pop
and
gs
inc
push
cli
jp
xlat
fisubrl
mov
clc
dec
stos
mov
pop
mov
paddsb
stos
int
loop
ss
adc
xchg
lock
in
mov
add
in
and
jle
mov
lcall
inc
fwait
sbb
leave
xor
mov
push
inc
and
insl
negl
push
outsb
xor
mov
lahf
fcomi
sbb
jle
mov
daa
dec
cwtl
lahf
and
pop
jb
adc
mov
fistps
and
jne
add
xchg
out
loopne
es
pop
jl
out
fmuls
xchg
adc
stc
icebp
scas
sbb
inc
outsb
xchg
iret
das
mov
lahf
pop
bound
sahf
mov
shl
test
pop
xchg
or
hlt
add
fsts
mov
lods
rorb
mov
cmpsl
xchg
test
sub
add
dec
arpl
pop
cmp
push
inc
rcr
repz
cmp
inc
loop
cli
les
cmp
cli
addl
mov
dec
test
div
imul
cwtl
xlat
enter
arpl
pop
leave
enter
nop
pop
or
pop
daa
adc
es
xchg
inc
outsl
mov
icebp
and
mov
mov
dec
xchg
sub
push
mov
add
dec
pushf
test
xchg
in
and
xchg
iret
pop
pusha
xchg
dec
cli
lret
xchg
call
or
sbb
adc
xchg
and
std
pop
mov
dec
or
mov
sbb
inc
jg
movsb
enter
and
in
ds
pop
mov
cli
icebp
aad
int
lahf
shl
dec
bswap
push
push
icebp
imul
out
xchg
and
fisttpl
push
mov
xchg
idivl
arpl
in
cmpsb
sbb
mov
ds
sar
lea
imul
cwtl
pop
or
insl
add
mov
bound
sbb
mov
loope
cltd
push
mov
dec
or
adcb
mov
test
sub
imul
sti
int
pop
cmp
mulb
pop
mov
divl
cmpsl
out
fcmovnu
stos
dec
ds
cld
push
lds
aad
fmuls
loope
cmp
push
and
int3
inc
push
cmp
cltd
shl
push
jo
jg
lds
fcoml
or
xchg
xchg
cltd
mov
je
jae
jns
push
ss
loope
stc
repnz
jmp
or
ror
fidivrs
adc
and
je
inc
loope
mov
adc
leave
rcll
scas
adc
sbb
repnz
movsl
enter
add
jmp
inc
push
int3
and
test
sub
inc
mov
arpl
std
arpl
xchg
xchg
push
jbe
cmp
les
icebp
test
xchg
jae
sbb
mov
shll
and
hlt
adc
inc
dec
mov
or
inc
add
mov
sar
jp
into
sub
push
push
jno
mov
sub
pushf
or
xchg
sbb
aaa
mov
pop
cmp
stos
or
mov
inc
pushf
enter
popf
incb
xchg
mov
or
pop
mov
pop
jo
mov
dec
mov
push
insb
jp
in
cmp
mov
mov
and
pushf
je
inc
inc
push
add
mov
mov
inc
push
pop
sbb
clc
xor
mov
mov
mov
add
cmpsl
jno
xor
pop
mov
cld
ljmp
sti
lret
stos
mov
mov
xchg
pop
jle
rcr
repnz
sbb
adc
loope
and
addr16
daa
xchg
fldl
xchg
cltd
adc
in
inc
data16
add
inc
ds
cmpsb
adc
js
sti
dec
les
mov
jno
sahf
movsw
clc
notl
filds
or
outsb
inc
add
mov
rolb
jge
sbb
aaa
clc
pop
daa
xlat
aad
mov
add
popf
mov
cli
into
mov
jne
add
mov
sbb
loope
loope
jp
addr16
dec
das
and
mov
or
jge
jecxz
cli
lods
sub
repnz
adc
cmpsb
jnp
in
in
jmp
mov
icebp
jmp
inc
test
in
dec
push
nop
jnp
lods
loop
pop
jb
outsl
lds
xchg
dec
adc
or
jge
xor
inc
sbb
repnz
and
cmc
add
dec
mov
or
aam
jne
stos
repz
lea
sahf
movb
adc
notl
faddl
inc
dec
and
inc
pop
clc
sbb
xor
cld
popf
push
push
imul
cmc
into
popf
call
pop
sub
movsb
mov
enter
std
mov
repz
xchg
sub
lret
dec
or
dec
adc
lods
adc
stc
fdivl
jp
ret
pushf
lret
and
xor
cli
sbb
das
inc
mov
out
aas
mov
test
ljmp
sbb
iretw
adc
or
fidivs
dec
jns
push
push
add
sbb
test
andl
mov
pop
int
adc
mov
cmp
pop
in
cmp
adc
xchg
out
cwtl
mov
shlb
xchg
dec
scas
out
daa
add
aad
adc
and
es
lahf
mov
push
popa
psubusw
mov
cwtl
push
sub
cmp
mov
outsb
pop
jo
add
fmuls
in
cmp
xlat
sahf
pop
out
mov
xor
cmp
mov
push
pop
mov
inc
loope
xchg
sbb
mov
in
fisubrs
aad
dec
sub
or
pushf
jl
jecxz
dec
hlt
and
or
stc
cmp
aaa
fldcw
pop
dec
lahf
test
push
adc
mov
pop
insl
pop
in
dec
leave
jbe
jl
sbb
dec
push
in
fs
test
cmp
fiadds
push
cmp
or
inc
aad
inc
sbb
nop
fbstp
dec
repnz
sbb
jb
jo
rcr
pop
shll
inc
push
clc
pop
addr16
dec
push
and
scas
repz
in
jecxz
ret
push
fdivr
out
lea
enter
test
sbb
or
sahf
jecxz
sub
rcl
aam
scas
xchg
arpl
arpl
clc
xor
cld
mov
fists
pushf
test
jle
pop
pop
out
push
sub
pop
xor
mov
ljmp
out
hlt
sbb
in
or
aas
push
test
dec
pop
aas
rcll
inc
or
mov
js
xchg
pop
pop
and
scas
jle
ljmp
lcall
gs
push
sub
daa
scas
adc
xchg
setno
fs
pop
stos
mov
movsl
or
pop
add
loopne
xlat
pop
and
jnp
aad
sahf
mov
not
popf
push
pop
sbb
ret
mov
mov
scas
int
popf
pop
lahf
fsts
scas
xchg
test
or
div
sti
aad
adc
subl
shlb
ret
sub
xchg
jecxz,pn
sub
xor
lahf
push
loop
popf
jp
push
pop
nop
xchg
mov
xchg
cld
js
fcompl
cmp
out
cmpl
mov
test
xchg
xor
adc
adc
mov
cmc
pop
leave
sub
inc
movsl
ret
fnstcw
les
shrb
jmp
mov
pop
lods
loopne
dec
test
flds
push
rcrl
xor
adc
jne
or
xchg
jecxz
xchg
add
ja
repz
or
jg
sbb
sbbl
imul
out
pop
cmp
pop
mov
and
push
sbb
dec
mov
ds
out
shrb
lahf
sbb
xor
dec
dec
ja
repz
adc
lock
fisttps
mov
push
dec
or
fcompl
inc
je
xor
bound
rcrl
aaa
leave
push
adc
xor
jnp
addl
pop
jno
xchg
clc
fimuls
push
repnz
cmpsl
test
test
imul
inc
int
fwait
test
lock
mov
or
jns
test
mov
sub
or
and
loope
stc
inc
scas
mov
out
mov
push
leave
and
push
mov
mul
popa
mov
scas
stos
lcall
xchg
xor
cwtl
jo
inc
push
or
inc
int
pop
repz
rcr
dec
int3
cmc
cli
ja
dec
push
jmp
xor
nop
adcb
pop
mov
ja
lds
sbb
or
pop
stos
clc
test
stc
mov
inc
sub
jne
sarb
push
xchg
outsb
inc
pushf
adc
adc
pop
iret
pop
loopne
xor
pop
clc
iret
pop
adc
lods
loope,pt
mov
jp
and
sub
hlt
into
push
dec
andb
lret
dec
jg
js
mov
mov
repnz
cmpsl
arpl
and
es
stc
inc
icebp
lcall
inc
leave
push
dec
and
loopne
adc
imul
jno
imul
leave
outsl
jmp
mov
inc
xor
or
mov
call
lea
pop
ss
clc
insb
fdivs
dec
test
mov
xchg
mov
mov
add
nop
lret
pop
mov
scas
into
and
sub
push
jnp
push
or
lcall
loopne
hlt
inc
mov
dec
sbb
xchg
test
jmp
shll
fbstp
sub
scas
shlb
push
addr16
or
in
ret
inc
outsb
jb
sbbb
or
inc
ret
dec
inc
sbb
daa
into
mov
aam
add
mov
ljmp
jb
mov
icebp
sbb
xchg
je
imul
adcb
xchg
aam
jecxz
cld
clc
sti
pop
pop
sub
and
add
xchg
cmc
addr16
jb
xor
sbb
mov
or
cmpsl
xor
lret
decl
out
pushf
xchg
in
push
cmc
jmp
lcall
add
insb
enter
out
shlb
jne
mov
lea
sub
mov
mov
aam
xor
lret
xchg
push
in
sub
pop
pop
mov
fcom
or
sub
lods
pop
mov
sbb
xor
sbbl
gs
push
enter
and
jg
cmp
pusha
sub
fs
adc
stc
popa
adcb
push
mov
sub
insb
pop
cmpsb
mov
inc
das
mov
test
push
daa
pop
xchg
rorb
adc
and
pop
fs
nop
fists
cmpl
mov
fs
dec
scas
jo
push
stc
pop
jle
cmp
sbb
dec
pop
repnz
mov
lahf
pop
lods
jbe
std
mov
mov
mov
in
and
mov
xor
mov
sahf
cs
xor
push
push
xchg
shlb
pop
or
je
addr16
test
pop
jnp
div
and
or
les
add
mov
ret
cmpsl
push
stc
xor
mov
rolb
fs
jne
cli
push
jle
lea
add
jb
sub
or
pop
rol
loope
addr16
sbb
mov
dec
fldcw
and
jns
cltd
xor
outsb
ds
xlat
adc
jne
push
insb
mov
jl
outsb
sbb
mov
xchg
xchg
pop
fwait
cmp
sbb
cmc
mov
inc
inc
xchg
pushf
sub
jnp
adc
mov
cmp
hlt
adc
out
sub
jecxz
clc
adc
fwait
inc
push
data16
arpl
enter
xchg
pop
push
nop
ret
das
jl
push
jne
test
aas
xchg
push
fistps
cmp
mov
into
incl
out
xlat
aas
add
js
iret
push
cmpsb
es
jnp
rorl
pop
adcb
adc
mov
mov
pop
xchg
mov
sub
in
sahf
jnp
je
das
in
stc
lahf
std
push
testb
int
in
mov
pop
in
dec
testb
test
rclb
clc
xchg
mov
out
sbb
into
and
lods
lods
xor
lds
in
loop
lock
or
mov
sub
pusha
xlat
inc
xchg
add
mov
sub
cmp
cmp
js
movsb
mov
mov
pop
mov
mov
aas
sarb
and
push
mov
frstpm(287
dec
decl
cmp
bound
lea
mov
sub
dec
mov
pusha
lahf
cmp
push
cmpsb
add
mov
pop
test
mov
es
xchg
aas
or
jne
fldenv
in
or
pop
fstps
lods
pop
fbld
push
pop
and
adc
pop
mov
cli
sbb
jmp
mov
out
xchg
dec
imul
aas
fisubs
lret
test
xor
and
ret
loopne
cmc
repnz
mov
icebp
inc
and
mov
mov
repz
cmp
je
out
lret
mov
adc
and
outsb
lret
xchg
push
arpl
xchg
inc
adc
outsb
push
fildl
shl
cmp
insl
push
ja
push
data16
add
ljmp
jmp
iret
push
and
mov
mov
jb
mov
and
mov
lcall
cs
mov
scas
je
ret
mov
jg
cmpsl
xchg
test
or
popf
pop
inc
mov
fs
sbb
dec
mov
rorb
es
adc
push
or
mov
jne
mov
and
dec
adc
cmc
push
lcall
sbb
xor
sahf
jecxz
inc
xchg
popa
inc
jns
push
shrl
aaa
arpl
and
divb
dec
fwait
jle
imul
out
xchg
cmp
lock
adc
fbstp
mov
js
or
frstor
mov
pop
test
xchg
fwait
pop
mov
loop
ret
or
cmp
mov
xor
outsl
push
ds
int
repnz
cltd
ljmp
fs
sbbl
mov
aad
mov
dec
mov
xchg
or
xchg
mov
mov
popf
push
fsts
dec
xor
test
test
mov
xchg
and
jb
leave
pop
add
jmp
push
lea
mov
jae
jmp
pusha
mov
sahf
movsb
push
jb
xchg
jnp
gs
incl
dec
mov
out
sbb
push
stos
lret
xor
popf
or
mov
push
ror
fs
outsb
sbbb
int3
aad
xchg
add
push
mov
bound
jns
push
cmpsl
jns
fwait
out
fs
push
jmp
movsb
js
shrl
mov
jno
mov
dec
into
dec
in
push
hlt
leave
jnp
jecxz
cli
dec
jle
notb
inc
call
mov
push
adc
enter
xchg
xchg
cmp
loopne
cmp
sbbl
decb
das
cwtl
into
xor
daa
jno
cmp
mov
xor
sbb
jecxz
cmp
clc
insl
cmp
add
xlat
subb
inc
pop
pop
gs
lea
or
or
jne
nop
add
sub
dec
scas
fimuls
nop
leave
cs
inc
sub
inc
insl
dec
sub
pusha
cmpsl
mov
mov
mov
fs
aas
jge
lods
mov
dec
mov
lret
lret
cmp
jp
push
cld
add
push
mov
ja
dec
inc
icebp
and
lods
out
in
lods
mov
out
and
iret
cmp
sahf
xchg
shll
jb
in
es
pusha
cli
jg
addb
ljmp
pop
mov
orb
mov
sahf
aad
mov
hlt
arpl
xchg
mov
ret
dec
pop
jo
and
adc
mov
dec
mov
mov
imul
inc
xchg
xlat
inc
sub
call
in
mov
ret
clc
mov
clc
cmp
xchg
out
mov
push
xor
cwtl
fnstsw
mov
daa
jo
fwait
sbb
fsubl
jns
xchg
bound
repz
out
adc
cmp
je
mov
xor
adc
xor
imul
shr
sti
push
out
sbb
in
jl
out
cs
push
int
mov
das
insl
push
dec
mov
mov
cmp
push
add
out
xlat
and
or
sub
and
pushf
fists
xchg
lock
inc
ret
test
mov
mov
pop
jae
stos
mov
cmp
cs
fsubr
mov
stos
pop
xor
or
insl
add
push
xchg
out
inc
push
jl
ja
insb
cmp
sti
popf
sub
mov
addr16
jbe
pop
icebp
pop
push
cmpsb
pop
loope
mov
add
push
mov
lock
or
icebp
xchg
mov
sub
jae
mov
gs
jo
repz
jg
xrelease
das
sub
jecxz
aad
push
inc
push
sahf
adc
shlb
jne
pop
and
mov
jbe
cmp
roll
jns
notl
mov
andl
add
sar
cwtl
stos
adc
ror
dec
ficoml
push
cmp
dec
push
cltd
in
bound
pop
dec
mov
cltd
ds
ja
sbb
insb
aaa
dec
pop
or
cmp
adcl
jns
jg
loopne
pop
cmp
cmpsl
movsw
ljmp
xor
sub
jnp
andl
dec
mov
fimull
outsb
cmp
push
cmpsb
sar
mov
add
test
sbb
inc
adc
pop
adc
inc
pushl
inc
repz
iret
push
pop
pop
sub
inc
cmp
cwtl
loop
xchg
fsts
ret
mov
jmp
outsl
testl
cmp
movsl
cmp
or
sti
add
mov
lcall
cli
outsb
xor
xchg
mov
scas
in
jl
clc
sub
adc
stos
xlat
add
push
pushf
mov
sub
leave
add
enter
add
jne
out
lea
cmc
push
xchg
loope
pop
loop
mov
inc
mov
pusha
movsb
inc
rcl
pushf
insb
test
push
mov
fidivs
outsl
pusha
push
or
mov
gs
nop
or
test
cltd
xchg
hlt
jno
mov
and
cmp
pop
push
pop
push
aaa
cmp
movsl
lods
cmp
scas
or
sbb
mov
push
push
pusha
int3
aam
mov
scas
sbb
adc
repz
or
std
sub
adc
mov
notl
push
sbb
add
jbe
pop
lock
icebp
std
movsl
iret
imul
sbb
jge
js
lods
inc
in
cmp
dec
gs
add
scas
mov
test
leave
xlat
sub
stos
push
jo
xchg
jmp
fwait
imul
call
push
mov
int
or
adc
ss
adc
pop
das
or
jg
and
call
sub
push
dec
mov
lcall
sub
outsb
in
xchg
pop
and
mov
pop
into
fcomp
ja
outsb
aam
sub
dec
data16
sahf
dec
fldenv
rcll
xchg
cmp
dec
in
mov
push
lock
sub
jns
in
inc
jecxz
mov
fcmovnb
push
push
jnp
stos
mov
mov
fdivl
jg
adc
mov
pop
sub
es
lret
call
sbb
out
xchg
pusha
cld
sbb
shlb
jb
data16
or
fsubrp
and
jae
test
mov
xor
daa
mov
pop
jmp
icebp
cmp
nop
mov
push
repnz
add
loop
jno
cmpb
fsub
in
shll
cmpl
ljmp
frstor
jp
gs
dec
fsubrl
pop
pusha
mov
jge
mov
or
adc
loopne
movsl
pop
fldl
in
hlt
xchg
loopne
stos
mov
sub
mov
xlat
arpl
cmp
jle
xchg
out
adc
cmpsl
xlat
mov
stc
outsl
sbb
xor
mov
in
cmpsb
push
lcall
cmp
gs
sub
js
jmp
loope
imul
xor
jns
in
push
xchg
pop
aas
push
orl
es
push
add
sbb
or
mov
fs
jmp
and
adc
mov
mov
add
imulb
fistps
shlb
pop
icebp
out
push
mov
jnp
subl
pushf
loopne
lods
mov
sbb
jmp
jge
cltd
fidivrs
out
hlt
fldl
dec
int
orb
repz
fidivrl
clc
cs
hlt
xchg
lret
popa
inc
push
cmp
outsl
aad
sbb
pop
lods
xchg
lahf
inc
push
and
push
lret
dec
jl
iret
mov
xor
rol
mov
aam
adc
sub
addb
in
mov
lock
cs
repnz
sub
insb
mov
pop
lcall
adc
xchg
aaa
sbb
nop
or
mov
out
repnz
jle
outsb
mov
insb
in
clc
shl
int3
iret
je
jle
mov
jg
inc
loope
scas
in
mov
pop
jne
add
movb
dec
aaa
sbb
outsl
or
movsl
scas
test
or
pop
dec
lods
mov
cmp
scas
inc
icebp
jnp
cmp
cmp
nop
sub
test
test
fdivrl
rcl
cltd
rcl
push
sub
adc
mov
xchg
mov
cmp
setne
or
cmp
dec
ds
addl
push
mov
and
add
andb
dec
jbe
cpuid
stos
pop
add
jmp
insb
int3
pop
xor
into
cs
stos
sbb
shl
insb
repnz
mov
mov
fisttps
fldl
insl
pop
pop
push
pop
lcall
xchg
or
sub
sub
xor
jns
jle
movsl
mov
dec
in
das
add
out
mov
adc
inc
out
mov
mov
fnsetpm(287
mov
hlt
std
testb
stos
add
push
rolb
leave
and
les
iret
lods
push
daa
ficomps
xor
pop
repz
leave
and
testl
dec
pop
pop
or
testb
mov
in
ret
sub
xor
pop
pushf
out
cld
lods
pop
insb
fcompl
repz
mov
fmull
xchg
sub
andl
xchg
cmp
fnstcw
jle
add
mov
movsb
cltd
or
push
sub
xor
icebp
ja
push
pop
roll
mov
dec
sbb
cmp
adc
cld
mov
mov
mov
and
nop
rcrb
add
negl
movsl
adc
adcb
jmp
mov
sub
in
push
fisubs
xor
addb
iret
stos
enter
fcompl
ss
std
pushf
in
sar
sbb
xor
add
mov
das
and
mov
sahf
mov
in
jl
popf
xor
hlt
ss
fimull
add
test
lods
ja
repz
jp
mov
adc
sbb
arpl
fists
test
pusha
or
or
int
sahf
fmull
mov
mov
cmp
mov
out
inc
outsl
lods
pop
pusha
inc
aam
scas
and
popa
pop
andb
lea
xlat
mov
add
push
mov
dec
xchg
sbb
dec
xor
mov
ljmp
popf
subb
add
scas
mov
loopne
lods
movsl
push
nop
loop
dec
pop
shrl
mov
fldenv
jbe
enter
ja
mov
sub
shl
daa
icebp
stos
mov
sub
push
mov
jbe
cwtl
pop
popa
inc
mov
mov
pop
repz
aaa
aas
popf
iret
pop
in
jb
into
mov
jl
lea
fistl
mov
mov
sbb
inc
sub
jae
aam
stc
or
pop
xlat
dec
lock
ret
or
add
mov
jae
je
lcall
in
push
jle
std
and
pop
sahf
mov
pop
ret
cs
pushf
jb
or
movsl
pop
imul
dec
insb
xor
mov
mov
mov
mov
sahf
into
inc
cmp
jbe
outsb
pop
jbe
mov
int
mov
ret
scas
cmpsb
outsl
fdiv
xor
mov
or
aam
test
out
scas
bound
jno
aad
repz
add
cld
mov
inc
pop
out
pop
sbb
idivl
jmp
in
dec
cld
push
inc
xor
test
mov
mov
dec
aaa
adc
mov
sahf
sbbb
cltd
and
iret
cmp
pushf
movsl
stc
mov
loop
push
in
cmp
inc
in
stc
pop
lcall
arpl
std
mov
roll
inc
out
jge
mov
call
cmpsl
fsubrs
or
mov
mov
adc
inc
ljmp
sbb
cmpsb
push
push
fs
mov
cmp
add
xor
mov
and
push
cmp
add
dec
aaa
cmpb
sarb
adc
mov
sbb
fsts
xchg
jle
sub
jnp
imul
aam
mov
dec
lds
orl
mov
push
lahf
pop
xor
jo
sahf
dec
iret
cs
inc
daa
bound
pop
lret
test
pop
ja
arpl
jecxz
daa
cmpsl
es
mov
pushf
mov
int3
stc
pusha
repz
inc
inc
xchg
mov
lock
push
jne
pop
pop
fsubrs
nopl
pop
sub
adc
adcl
ljmp
rcll
sbb
push
add
adc
icebp
int
cld
jle
cld
mov
sahf
push
jne
test
andb
jne
cs
pop
cmpsb
mov
out
xor
fadd
push
adcl
add
movsb
sbb
je
call
xor
insb
xor
jle
push
xor
and
add
outsb
shlb
rcll
std
sahf
mov
loopne
incb
sti
mov
cld
xchg
inc
out
ret
rolb
push
and
lock
adc
imul
mov
adc
lret
jl
cmp
pop
jmp
mov
xlat
xchg
das
jge
inc
mov
sub
test
push
pop
mov
dec
mov
jne
lds
cmp
xchg
shll
lods
sarb
cmp
shrb
popa
insb
mov
movsl
into
jecxz
test
popa
pop
outsl
es
leave
ss
lcall
outsl
andl
in
call
mov
push
mov
shlb
iret
shll
pop
jo
imul
xor
adc
mov
cmc
aaa
mov
popf
insl
pusha
adc
fldt
outsl
xor
or
or
xor
mov
sub
lcall
mov
ret
out
mov
mov
push
lods
dec
sbb
arpl
cli
dec
add
outsl
leave
leave
insb
adc
xchg
sub
aas
mov
adc
xorl
cmc
pop
lds
xor
jl
mov
jae
pusha
xchg
sqrtps
pop
inc
mov
outsb
rol
std
and
sub
pop
nop
pop
push
push
jmp
testl
test
lods
cld
or
sarl
mov
push
mov
in
dec
fldl
lea
adc
les
jle
sub
je
inc
lret
xchg
xchg
mov
mov
push
add
punpcklbw
xchg
mov
dec
pop
push
pusha
bound
jo
inc
pusha
mov
add
jbe
and
or
loop
sub
xchg
sub
inc
or
xchg
dec
gs
adc
mov
test
ljmp
das
test
loop
mov
or
ds
loop
xor
xchg
lock
out
lods
dec
data16
ss
mov
scas
daa
rcrb
jne
mulb
je
test
pop
ss
xchg
pushf
push
mov
cmpsl
cld
cmp
inc
outsl
push
pop
test
js
push
xor
popfw
lods
mov
adc
push
dec
push
lret
popf
xchg
jo
cmp
lods
std
pop
outsb
or
out
arpl
lea
int
sbb
int
inc
dec
insb
or
or
pop
jae
mov
jmp
jae
xchg
adc
jns
sbbb
mov
outsb
dec
out
in
dec
es
cmp
rcl
sub
bnd
cmp
popw
mov
divb
adc
add
and
ljmp
lds
xor
orl
sub
arpl
aas
push
stc
adc
rcrl
add
jbe
sub
inc
movsb
js
xor
push
out
pop
add
jmp
mov
je
sti
fwait
popa
add
adc
cmp
xchg
ds
fucomp
cmp
test
xchg
and
vmaxss
mov
ja
xchg
imul
icebp
movsb
out
adc
mov
scas
inc
cmpsl
fs
add
cmp
bound
fwait
cmp
decl
add
adc
ret
stos
jbe
add
test
cli
push
int
pusha
pop
in
mov
inc
loopne
and
sbb
mulb
push
xor
sbb
arpl
fst
adc
testb
push
out
das
loop
mov
sbb
jb
in
jae
idivl
aad
cmp
push
test
jne
xor
push
fs
push
jmp
push
jl
add
pop
add
xlat
outsb
pop
std
lcall
push
push
mov
or
nop
ret
loope
repnz
gs
cltd
adc
cmpsl
push
xor
addr16
add
xchg
imul
mov
mov
jno
cmc
pop
sbb
and
das
add
mul
inc
sti
add
add
daa
add
cmp
xor
pop
mov
jno
aas
bound
dec
outsb
and
dec
loopne
inc
mov
mov
push
inc
jmp
or
xor
lcall
pushf
les
mov
mov
sarl
and
lahf
sti
lds
adc
mov
in
std
xchg
leave
mov
loop
sbb
cwtd
ret
inc
mov
mov
pop
cli
mov
push
push
ljmp
pop
mov
idivl
adc
mov
div
dec
mov
mov
sbb
xor
inc
sbb
and
lods
mov
mov
scas
leave
les
mov
pop
arpl
mov
js
out
mov
pusha
mov
mov
in
adc
loope
leave
and
aad
data16
fildll
in
push
xlat
negb
int
ja
cmovle
mov
in
sub
fucom
aas
push
push
shlb
inc
jne
int
repnz
pop
sbb
aad
cmp
mov
inc
out
lock
mov
jae
mov
mov
nop
or
pop
movsb
pop
mov
into
mov
adc
call
mov
xchg
cwtl
sbb
cmp
jge
filds
adc
call
out
loopne
cli
adc
xchg
mov
xor
cs
in
xchg
out
int3
xchg
xchg
enter
bound
imul
out
mov
mov
xchg
ds
aad
cmp
test
les
jae
mov
jl
jnp
add
stc
test
and
push
out
inc
sub
sbb
arpl
arpl
adc
jg
adc
pop
pusha
jmp
adc
dec
inc
mov
add
lock
pop
lea
and
out
in
out
lock
mov
lods
das
sub
lock
je
xchg
je
notb
pushf
adc
sar
popa
adcb
adc
test
inc
inc
mov
jbe
aad
mov
xlat
enterw
call
fwait
stos
cltd
mov
lods
lret
ja
adc
inc
cmc
xor
inc
mov
sub
js
add
add
pop
sbb
jbe
xchg
lret
ljmp
pop
jnp
push
cmp
sbb
test
xchg
pop
imul
xlat
and
icebp
iret
xchg
mov
in
clc
mov
and
dec
pop
cltd
pushf
xor
adcl
test
loop
or
loopne
xchg
ds
sti
push
xchg
pop
mov
je
jb
outsb
mov
cmpb
sbb
sub
add
dec
mov
mov
mulb
add
sbb
mov
int3
dec
pop
mov
in
mov
lds
ret
out
test
lods
call
ret
jae
push
xchg
or
in
and
pop
popf
clc
movsl
mov
cmpsb
hlt
into
push
fstps
jmp
adc
jo
lds
xchg
mov
pop
lods
mov
push
repz
add
jmp
push
mov
push
pop
or
sub
add
or
aas
in
aaa
dec
xor
iret
aas
and
pop
jl
fimull
test
mov
and
cmp
frstor
jg
mov
fnstcw
mov
dec
in
jo
popf
stc
scas
push
jl
mov
imul
fmuls
lret
int
dec
cmpb
pop
xchg
orb
sbb
iret
not
mov
aas
mov
cmp
dec
inc
in
loope
out
cs
gs
jg,pn
out
in
lock
lea
incl
push
push
insl
dec
dec
and
sti
mov
adc
call
adc
cmp
cli
mov
sbb
push
cwtl
sbbl
std
scas
jg
jmp
push
leave
pop
add
xchg
sub
sub
test
cmp
aam
xor
lea
jg
sub
xchg
and
mov
addr16
mov
xor
nop
fistpl
sub
test
enter
pop
xor
xchg
add
incb
popa
movsb
out
ljmp
adc
mov
cmpsl
lods
leave
inc
mov
sub
je
sub
cmp
call
jmp
sbb
jmp
sbb
sbb
cmpl
insl
or
insb
push
rorb
in
sbb
scas
add
imul
add
les
mov
out
pop
test
sbb
and
adc
cli
or
xor
mov
sbb
fisubl
mov
jns
sub
fcomps
add
fwait
out
jnp
mov
or
add
cmpsb
mov
mov
xor
shll
sti
jmp
cld
lock
push
cmp
xlat
movsl
outsl
js
jmp
sub
and
cmp
icebp
movsl
mov
rorl
loopne
and
mov
stos
and
in
inc
mov
cmpsl
push
inc
xor
imul
push
xchg
xadd
inc
sbb
fldcw
mov
mov
out
push
jb
mov
or
adc
stc
ss
icebp
scas
aam
cmp
aad
in
sub
imul
xchg
test
movsb
repz
mov
jle
sti
dec
repz
in
subb
es
cmp
lds
test
xchg
mov
pushf
lcall
std
sub
xchg
lret
das
popf
push
jo
sub
sub
pop
adc
mov
cmpsl
xchg
xor
dec
push
stos
ja
test
xchg
push
cmp
pop
or
xchg
scas
jecxz
shl
fdivl
xchg
ret
cmc
loop
gs
divw
sarl
lds
push
in
hlt
mov
aaa
icebp
xor
ret
std
xor
les
mov
lock
sbb
dec
ret
stos
xchg
or
xchg
sbb
mov
mov
lods
sbb
mov
mov
mov
push
dec
stc
jp
xchg
insl
popf
inc
sbb
jns
cmc
dec
ds
push
mov
mov
sbb
add
xlat
scas
or
mov
push
dec
xor
jmp
xor
jo
pop
repz
dec
stos
sbb
xchg
repnz
int
divb
dec
adc
mov
mov
stc
into
adc
adc
inc
mov
dec
int
repnz
xor
inc
sub
outsb
push
data16
sbb
add
dec
inc
pop
sub
fidivrl
pop
cs
add
inc
pop
push
push
sbb
adc
cmc
scas
jg
xor
push
adc
scas
push
cwtl
cmpl
push
or
mov
movsb
cmp
mov
mov
ds
add
mov
add
sbb
lock
in
and
lret
push
js
dec
add
sbb
fwait
cli
mov
or
xchg
inc
repnz
cwtl
ljmp
mov
mov
cmp
sbb
filds
and
fdivr
mov
mov
dec
stos
sub
jne
dec
jbe
mov
mov
out
cmp
push
and
cmc
jcxz
stos
fs
test
xor
ds
adc
pop
inc
ljmp
adc
lds
jmp
sub
xchg
xor
adc
stos
icebp
push
sbb
inc
xchg
xchg
jno
and
mov
jg
sbb
pop
mov
sbb
inc
outsl
pop
je
and
mov
fs
ds
andb
xchg
fidivs
fldln2
and
dec
push
shlb
adcl
or
lcall
scas
cmp
jae
jb
jmp
pop
adc
mov
les
insl
fnstsw
add
sub
dec
fdivrl
mov
jmp
std
popf
repnz
pushf
add
mov
mov
or
jmp
and
int3
es
add
repnz
popf
je
dec
dec
inc
cmp
mov
cld
insb
mov
inc
repz
lcall
pop
notl
push
stos
loop
stos
outsl
js
push
jnp
jg
jno
adcb
ficomps
jo
daa
testb
movsb
mov
aam
push
sti
xchg
lock
inc
sub
cld
xchg
or
xchg
mov
test
fwait
ret
adc
sbb
pop
pop
test
push
mov
fdivp
pop
sub
inc
push
loope
add
in
outsl
mov
pushf
mov
dec
jno
lahf
jne
gs
jne
movsl
sub
outsb
mov
lods
xor
mov
out
push
or
pop
adc
cli
and
lods
and
sbb
push
pop
push
jns
inc
addr16
loope
daa
adc
mov
and
repz
in
xchg
outsb
scas
mov
push
mov
cmpsb
dec
aam
nop
xorl
cmp
jp
clc
mov
stc
repz
mov
fsubl
stc
or
jg
movsb
jne
xchg
cltd
pop
or
xchg
test
insb
mov
dec
dec
fidivrl
jb
pop
xchg
mov
imul
loop
int3
jns
cmc
loope
sahf
jg
mov
outsl
fnstsw
enter
push
rclb
shll
push
ret
mov
lock
adc
std
bound
xor
sbb
inc
cli
cwtl
sub
pop
and
mov
in
or
sub
jge
pusha
out
push
outsb
orb
movsl
cmp
lahf
push
pop
pop
dec
mov
sbb
rorl
dec
sbb
test
mov
jge
jle
inc
inc
cli
int
add
sub
xorb
in
xchg
and
fldl
cmp
inc
add
add
int3
addr16
and
nop
lret
jbe
cmp
stos
xlat
out
in
loopne
xchg
call
daa
xchg
ja
mov
sbb
sbb
dec
mov
loope
out
jg,pn
js
or
xor
test
lret
scas
adc
popa
dec
popf
repnz
sub
cmp
in
lds
and
stc
js,pt
andb
adc
fisttpl
out
insb
and
xlat
inc
js
stos
out
adc
push
inc
test
cmp
loopne
jne
adc
nop
popa
xchg
test
cmp
pop
mov
or
mov
dec
loope
int
nop
in
lret
inc
mov
cmp
pushf
ret
mov
js
mov
cli
repz
or
sarb
inc
add
xchg
xchg
sub
mov
enter
mov
fdivl
pop
inc
sub
inc
dec
insl
sbb
mov
push
inc
lret
push
into
lods
popf
insl
out
pushf
lods
cltd
fwait
in
jne
outsl
imul
nop
cmp
sbb
lea
pop
mov
movsb
mov
xchg
mov
xor
sbb
lods
mov
cmpsb
mov
push
int3
pushf
outsb
pop
mov
add
jle
dec
fistpl
test
lret
jbe
addr16
mov
xor
jmp
sub
cmp
lret
sub
push
mov
sbbl
mov
xchg
mov
repnz
js
daa
push
dec
lahf
mov
out
das
pop
pop
mov
adc
add
add
aaa
jl
xor
in
xor
imul
mov
push
loope
rcll
dec
mov
cmp
les
push
and
scas
ljmp
xchg
mov
sub
clc
adc
jno
adc
repnz
call
jg
adc
in
add
fs
pop
mov
cmp
inc
ljmp
call
cs
jns
scas
mull
leave
popa
or
lds
inc
and
pop
enter
adc
mov
and
inc
xchg
loope
out
dec
xchg
rcll
inc
aam
push
cmp
ds
jns
daa
mov
inc
notl
enter
sbb
cmp
dec
jge
inc
cmp
enter
ds
pop
sub
add
cmc
int3
jecxz
std
jecxz
push
cld
sub
adc
mov
xchg
dec
call
fldcw
cltd
ret
and
adc
and
pop
mov
or
repz
in
outsb
inc
fdivl
rcrb
push
test
fld
movb
dec
test
repz
scas
cwtl
jecxz
pop
hlt
test
inc
cmp
out
add
ds
lock
popf
adc
mov
xlat
aaa
pop
in
in
fisttps
mov
inc
dec
insl
cltd
or
add
dec
lret
ja
mov
xchg
inc
fnstenv
sbb
xor
in
cltd
adc
in
lcall
add
xchg
je
in
std
pop
xor
cmpsl
bound
pop
dec
nop
out
insb
sub
test
arpl
jmp
das
pop
push
shr
lock
fcmovnb
xchg
cmp
fs
or
xor
push
mov
pop
mov
xchg
repnz
pop
popa
adc
rol
fwait
imul
lds
idivb
sub
mov
insl
jns
cli
xor
nop
fiadds
aas
add
xchg
js
clc
pop
lcall
ds
std
mov
shll
jno
mov
jg
mov
mov
loopne
cltd
cwtl
sbb
jne
lret
mov
inc
mov
xchg
pop
cli
cwtl
mov
sbb
jp
sub
das
and
dec
cli
sbb
xor
clc
xchg
cmp
inc
push
inc
jle
aas
insl
add
cmp
je
pop
loop
cmp
sbb
xchg
cltd
in
sbb
cmp
mov
icebp
sbb
ja
and
sub
int3
or
test
shll
sub
imull
bound
fwait
ret
mov
mov
cmpsl
data16
insl
in
out
mov
mov
jle
mov
cmc
orb
aas
test
mov
or
fidivrl
or
cli
decl
js
lds
in
cltd
push
lds
push
xchg
stos
xchg
in
sub
add
jle
dec
shll
ret
sub
aaa
sar
lods
push
inc
mov
scas
sbb
nop
xor
jae
loop
nop
lods
in
jns
ret
mov
cmp
loop
xchg
outsl
inc
sub
movsl
and
aam
or
push
loop
jns
addr16
das
dec
push
jb
dec
popa
dec
and
mov
add
loope
inc
xchg
iret
ljmp
mov
movsl
mov
mov
imul
mov
out
nop
sbb
adc
cmp
and
mov
mov
mov
cmp
mov
outsb
sbb
adc
add
mov
jno
out
pop
mov
cmp
imul
jle
jnp
pxor
leave
scas
cmp
add
pop
add
pop
sbbb
int
add
test
pop
mov
sbb
or
mov
ret
popf
nop
xchg
gs
jg
loopne
int
jno
ja
scas
icebp
int
push
xchg
sbb
cmp
xor
out
outsb
pmaxub
sahf
inc
sbb
mov
sub
popa
xor
xor
repnz
jo
cld
add
ret
push
push
and
inc
in
sub
es
and
loopne
jle
dec
arpl
cmp
and
or
imul
push
xchg
mov
movsl
jnp
cmp
stos
ret
pop
xor
call
fldt
xchg
adc
aaa
dec
inc
in
fisubs
fimull
loopne
push
cwtl
in
sbbl
imulb
sbb
cmpsb
inc
ret
xchg
cmp
sbb
pop
lds
clc
sahf
xchg
cwtl
out
cwtl
or
jne
data16
popf
outsl
loopne
dec
xor
jo
xor
xchg
xor
ds
add
inc
or
or
xchg
pop
ja
cmp
xchg
lret
inc
mov
xor
mov
sub
xchg
lods
dec
in
mov
out
sub
scas
mov
xchg
in
xor
lahf
cld
dec
enter
sub
push
add
jmp
sub
adc
add
lds
mov
dec
mov
cmpl
push
pop
pushf
mov
test
or
adc
cld
sahf
pop
cmp
fbld
mov
shlb
mov
cmc
mov
mov
shlb
outsb
mov
jne
icebp
call
mov
dec
ror
cmp
pop
adc
and
negb
add
in
repz
sti
out
jnp
jp
xchg
mov
int
es
mov
ds
rorb
sbbl
xor
out
sbb
pop
jbe
dec
lods
push
push
and
xor
xor
sbb
mov
fisttps
mov
pop
outsb
jns
jbe
pop
ss
out
add
int
sub
mov
test
divb
adcb
pop
movl
addr16
push
dec
test
pop
test
decb
adcb
mov
ds
popa
addb
lock
mov
xchg
push
or
mov
inc
pop
xor
mov
rol
or
daa
iret
xchg
push
xchg
mov
mov
fucom
stos
xchg
mov
push
add
loopne
lahf
pop
cmp
jae
sbb
and
call
pop
jl
push
xchg
add
jle
orb
sbb
jne
imul
push
stos
cmp
mov
mov
shll
clc
movsb
mov
mov
fisttps
fsubrl
incl
test
gs
into
dec
pop
mov
xor
bound
int3
xchg
add
and
vandpd
ja
insl
adcl
imul
stos
roll
jnp
xchg
mov
jae
clc
jo
push
mov
push
mov
cmc
fidivl
stos
repz
mov
leave
clc
cld
pushf
lods
lea
inc
imul
loope
sbb
mov
pop
inc
or
scas
movsl
xor
push
ja
dec
push
fwait
sbb
mov
or
mov
test
mov
loopne
adc
cli
pop
and
mov
push
adc
punpckhbw
daa
notl
and
out
mov
dec
jle
push
push
popa
stos
xor
std
mov
lret
lret
out
ljmp
jg
test
sti
dec
push
stos
add
pop
and
and
ja
jecxz
inc
pop
xchg
jle
mov
mov
or
ja
pop
loop
inc
push
out
dec
dec
adc
xor
mov
or
bound
sbb
ss
test
movsb
push
sub
mov
pop
xor
xor
pop
das
pop
into
jle
mov
popa
sahf
test
and
andb
shl
add
sub
push
or
scas
in
sub
es
ss
cltd
fcmovbe
fnstcw
testb
mov
in
dec
push
loop
sbb
in
rorl
and
sbb
mov
inc
jp
jg
addl
or
adc
ljmp
jecxz
imul
xor
mov
xlat
fsub
nop
mov
xor
add
jmp
loop
push
arpl
cmp
jno
and
subb
std
mov
filds
mov
xchg
jb
cmp
hlt
dec
mov
push
stos
fstpl
fstps
jns
and
movsl
inc
inc
mov
xor
pop
and
pushf
dec
cmp
es
call
daa
xchg
std
sti
sarb
mov
insl
int
adc
xchg
mov
mov
jne
adc
iret
out
inc
pop
adc
lods
clc
std
insb
stos
js
sub
inc
xchg
addr16
add
mov
jb
scas
push
xchg
hlt
lahf
flds
inc
xchg
jbe
into
cmp
pop
pop
push
push
jecxz
cmp
pushf
mov
pop
mov
cmc
add
xchg
cmc
out
ja
cmpsl
add
inc
mov
stos
xchg
push
loop
mov
sub
sub
jno
ja
cwtl
out
push
or
cmp
inc
js
mov
roll
ja
stc
add
mov
sti
lret
test
and
inc
mov
cmpsl
cmp
adc
lods
in
iret
push
test
mov
sub
dec
cmpsl
adcl
repz
call
or
movsb
cmp
push
jecxz
lods
into
mov
sbb
andl
pop
jl
add
cmpsb
fdivrs
add
das
pop
daa
aaa
push
sbb
in
stc
jl
subl
sbb
add
mov
xchg
dec
int3
addr16
adc
insb
jmp
cmp
fs
xor
cmp
jl
xor
jbe
sbb
shl
repz
sub
jns
in
sub
loope
loop
mov
adc
mov
and
mov
add
lods
xor
jecxz
lret
movsb
fwait
mov
sub
je
lret
mov
inc
push
and
adc
dec
test
xorl
out
shl
movsl
das
or
xchg
fisttps
jl
adc
dec
outsb
push
xchg
jg
cmpb
loop
jb
and
jge
xchg
xchg
out
jns
adc
sub
lahf
sbb
ljmp
cmp
sbb
in
in
daa
jge
daa
daa
ds
and
dec
dec
scas
or
mov
insb
adc
add
xor
sub
fcompl
aas
pop
dec
mov
jge
and
pushf
cli
enter
das
xlat
xor
andl
sbb
int3
loopne
dec
push
out
mov
mov
rclb
pop
mov
pop
jnp
cmc
out
mov
and
add
int
popf
add
pop
cmp
div
mov
xchg
sub
cmp
je
inc
clc
stos
mov
push
adc
mov
add
mov
unpckhps
loopne
repnz
jge
in
pop
inc
mov
ljmp
and
in
leave
pushf
mov
inc
test
xor
jg
enter
mov
xor
aam
mov
add
push
dec
notl
ret
movsl
into
fisubs
ret
pushf
shll
jbe
les
test
mov
lret
jnp
rep
into
pop
dec
xchg
lahf
jno
xchg
mov
roll
and
dec
pop
out
pop
cmpsl
imul
rcrb
jg
mov
test
push
and
fdiv
call
imul
repnz
mov
xchg
negb
push
andl
push
adc
jg
push
jbe
xor
cld
rcrb
and
fcomi
popf
xor
jmp
hlt
inc
mov
sbb
jo
push
sub
lret
mov
sub
fmul
arpl
adc
mov
cmpsb
adc
jae
jl
push
rolb
adc
int3
rclb
mov
test
loope
jb
mov
mov
outsb
ss
cmp
je
jbe
pop
loop
xchg
xchg
leave
mov
or
jle
ja
shll
inc
cmpsl
cmc
jne
lds
mov
testb
scas
xchg
data16
repnz
and
push
jecxz
inc
das
addb
je
je
imul
sub
dec
jae
sub
mov
stos
and
into
daa
inc
mov
inc
repnz
nop
sbb
leave
push
imul
pop
out
jl
repnz
dec
call
loope
stos
mov
ja
inc
test
icebp
andl
lcall
rcr
adc
gs
fwait
scas
xchg
test
repz
incl
sbb
pop
mov
push
cmp
cmpsl
repz
movsb
cmp
sub
push
cmpsl
add
adcl
pop
push
cltd
cmp
iret
dec
jl
adc
or
jecxz
addr16
addr16
popl
mov
lods
push
pushf
jae
add
sub
sbb
je
cmpb
mov
inc
mov
mov
dec
scas
arpl
in
jno
lea
adc
push
dec
out
inc
fstps
and
std
mov
add
and
push
add
sub
cmp
or
jne
mov
dec
sbb
cmp
in
loop
add
lods
cmp
jns
sbb
pop
pop
sbb
cmp
gs
xchg
mov
stos
cli
or
jno
dec
jnp
stos
call
sbb
xor
inc
adc
adc
xchg
dec
push
adc
jno
enter
cld
insb
bound
xchg
pushf
stos
mov
int3
cmpsb
jne
dec
or
mov
jmp
jg
or
in
mov
pushf
push
and
push
shlb
or
aaa
inc
pop
adc
cmc
movsl
enter
shl
sub
push
xchg
jmp
push
add
pop
add
rorb
add
xor
aaa
add
fisubs
or
out
jl
or
and
push
sbb
mov
mov
push
lock
int3
rcll
push
sbb
outsb
sbb
insb
incl
mov
hlt
push
add
out
push
ret
sbb
push
rolb
and
int
aad
sub
dec
stos
cmp
xlat
popa
aaa
movsl
ja
clc
mov
push
loopne
nop
jge
in
jae
aaa
fld
inc
adc
test
inc
and
out
lods
cmp
push
pop
aam
cmp
ret
push
lcall
mov
cmp
push
add
or
cmpsl
mov
andl
sbb
or
or
shl
adc
in
dec
mov
dec
jge
mov
ret
sbb
ficomps
rolb
cmp
sbb
xor
xor
add
gs
mov
jmp
push
imul
imull
and
les
jb
cmp
xchg
aas
repnz
cwtl
shlb
xchg
sub
mov
or
and
mov
dec
inc
fistpll
jb
ret
mov
out
pop
jge
adc
cmp
out
pop
test
xchg
xchg
sub
push
movl
xor
mov
insb
mov
hlt
inc
or
es
lret
dec
adc
mov
jns
test
pop
xchg
mov
push
sbb
subl
hlt
adc
aam
pop
inc
cmp
fsubrp
sbb
sub
stc
cwtl
and
mov
lea
dec
mov
fimuls
inc
sbb
stos
add
lcall
and
stos
or
in
addl
lret
xor
pop
mov
mov
mov
out
push
ds
test
xorl
insb
movsb
and
mov
call
add
jmp
sub
dec
pop
push
hlt
cmp
add
push
dec
or
add
sahf
or
fmuls
pop
mov
jno
and
jno
out
adc
dec
sbb
ljmp
mov
cmp
or
hlt
inc
pusha
sbb
adc
add
je
out
sub
mov
out
push
cmpsl
dec
xor
lock
dec
or
lahf
ds
rorl
andb
push
push
pushf
mov
or
jmp
rcrb
pop
mov
push
lret
cmp
cmpb
pop
push
push
jns
cmp
or
xchg
mov
loope
inc
and
pop
jl
and
dec
pop
cmc
pusha
in
pop
shr
mov
xor
dec
ljmp
add
push
xchg
pop
sbb
js
cli
mov
fwait
imul
xchg
ret
cltd
push
fstpt
mov
shlb
and
lock
mov
mov
js
cmp
mov
cmp
shl
outsb
div
xchg
jp
std
pop
imul
test
test
pop
incb
mov
xchg
aas
and
imul
mov
cmp
pop
fdivs
pusha
ljmp
out
es
jno
mov
mov
leave
ret
lods
pusha
rep
js
jle
jnp
andb
jns
sbb
shl
fbstp
push
jbe
mov
je
sub
mov
out
repnz
lds
mov
test
cmp
popf
adc
and
std
dec
mov
fldcw
orl
fnstenv
push
stos
dec
sbb
and
mov
jno
out
out
lods
and
mov
jbe
pop
and
movsl
push
cwtl
or
jl
sub
xor
sbbl
push
ss
mov
push
sub
ss
sbb
lretw
cli
xor
jne
insb
mov
loope
sbb
mov
push
cli
popa
jns
movb
sahf
xchg
mov
xchg
scas
repnz
in
ds
repnz
mov
dec
out
xchg
shll
cmpsl
out
mov
jns
cmp
and
mov
mov
mov
mov
dec
lds
jae
inc
insl
fldz
mov
or
out
sbb
int3
int3
cmp
dec
pop
jmp
xchg
jle
fimull
aad
mov
xchg
pop
xchg
stos
lahf
scas
and
ss
mov
lcall
add
ret
sbb
pop
aaa
sti
inc
xor
insb
pop
jb
fcompl
out
scas
iret
mov
mov
adc
fwait
adc
inc
movsb
adc
dec
inc
ror
call
pop
jo
inc
loop
cli
fcmovnbe
rclb
pop
loop
stc
jne
cmp
xor
jb
sbb
sub
push
cmp
cmp
ret
or
dec
push
cmp
arpl
ret
outsl
inc
popf
test
push
push
repnz
or
enter
shr
test
or
push
or
jmp
fidivrs
push
int3
xor
cmp
push
jae
test
fwait
push
cmp
xor
mov
xchg
out
mov
inc
or
sarb
or
je
pop
sbb
push
mov
daa
jnp
xor
push
pop
fldenv
mov
mov
das
add
cltd
testb
jbe
fwait
mov
mov
sahf
sbb
mov
jg
lds
popa
or
bound
jbe
cmp
jg
add
sbb
add
dec
or
jecxz
lds
or
xchg
in
popl
rolb
xor
lods
fdivr
push
je
xchg
leave
mov
ss
dec
insb
imul
pop
dec
xchg
adc
js
push
ret
js
jb
imulb
aaa
xor
int
xchg
xchg
ret
lret
pop
sub
pop
mov
lods
ffreep
or
sub
bound
push
sub
pop
mov
mov
push
xor
hlt
dec
cwtl
jae
shrl
fs
popa
pusha
pop
inc
mov
pop
imul
mov
cld
xor
mov
and
cmpb
in
cwtl
xchg
sti
shr
sbb
sub
mov
and
es
test
xchg
sub
mov
rcr
adc
inc
jo
mov
test
bound
lcall
xor
jb
push
jmp
rcrb
mov
or
xor
xchg
std
into
fwait
popa
out
adc
dec
js
cmc
hlt
push
inc
push
and
push
mull
push
mov
or
mov
sub
popf
imul
adc
jns
mov
shrl
hlt
fcompl
ret
push
fstl
push
push
ljmp
push
sbb
loopne
or
cmpsb
ficompl
inc
arpl
movsl
repnz
ljmp
pop
mov
xor
repz
jg
mov
dec
loopne
loop
pop
aam
cmpl
ja
dec
pop
aas
xchg
loop
stc
fstl
mov
mov
sahf
repnz
lock
push
adc
jne
xor
lret
inc
icebp
inc
movsl
shll
dec
subb
mov
adc
mov
enter
xor
jnp
push
cwtl
mov
cmp
stos
mov
iret
add
lcall
and
aam
xor
lock
sbb
mov
insl
inc
and
mov
cmp
and
sahf
xor
inc
scas
out
jae
mov
nop
xchg
dec
dec
ljmp
lret
jmp
pop
out
dec
outsl
lcall
sbb
je
into
mov
mov
push
lahf
mov
in
lock
jne
popa
popa
je
pop
xorb
and
xor
xor
sub
stos
mov
test
inc
sub
mov
inc
lret
jmp
pop
add
pop
adc
daa
push
shll
xor
dec
pusha
stc
and
sbb
jns
pop
gs
sbb
jp
jle
repz
and
add
inc
sub
fninit
cmp
add
pop
xor
mov
cmpsl
xor
dec
sbb
mov
sbb
ret
imul
outsl
dec
stos
dec
mov
cwtl
sbb
xchg
xor
sub
in
jle
jg
ret
es
les
movsb
rcl
gs
arpl
add
lahf
or
pop
pop
mov
inc
and
add
fcmove
or
rcll
push
jmp
push
xchg
xchg
imul
push
and
dec
call
or
outsl
ljmp
add
mov
jns
bound
xor
push
movl
cmp
pop
and
int
mov
and
outsb
aad
and
aam
lret
or
loop
call
shll
and
insb
lcall
fimuls
cwtl
js
mov
mov
push
and
mov
and
mov
std
push
mov
je
sub
sbb
out
push
in
hlt
addr16
xor
out
cmp
mov
pop
sbb
jae
jae
into
push
jmp
mov
mov
lea
pop
aad
push
loope
push
sbbl
jns
or
inc
xchg
mov
into
xchg
mov
hlt
bound
jns
shlb
xor
cmpsl
insl
pop
jmp
insl
add
clc
pop
insl
gs
in
dec
mov
sbb
mov
dec
jle
cmpsb
push
xchg
inc
dec
sub
or
and
pushf
or
xchg
lods
xchg
dec
idivl
push
gs
insl
xchg
cmp
mov
lock
mov
je
cmp
jae
test
sbb
ret
subb
adc
std
pop
xor
push
sbb
add
xor
call
push
sub
fdivrl
and
jge
dec
pop
push
loop
or
nop
outsl
push
push
cltd
sub
fidivs
pop
ljmp
xchg
es
fistpll
xor
sub
ds
adc
ror
mov
lret
pop
fs
loopne
bound
subb
xchg
inc
push
mov
and
add
mov
andb
insb
ret
mov
loope
je
jb
fsubrs
rorb
pop
cmp
xorl
inc
xor
lds
lds
jecxz
add
cmpsb
pcmpgtw
aam
aaa
sbb
jecxz
inc
cmc
fs
repz
add
jno
mov
mov
repnz
rclb
dec
sahf
mov
xchg
ret
pop
int3
scas
in
roll
pushf
repz
pop
pop
cmp
add
jge
mov
inc
mov
sbb
das
xor
movsl
push
xchg
cmp
fnstenv
lret
popa
faddp
adc
inc
jae
pop
and
sbb
int3
sahf
mov
xchg
bound
pop
or
push
inc
mov
stc
lahf
test
mov
imul
mov
call
mov
in
and
ficompl
std
in
xchg
in
and
cltd
push
inc
sahf
mov
nop
test
cmpsl
cmp
call
loope
push
adc
push
xchg
xchg
jg
mov
adc
pop
sub
mov
push
mov
ja
add
sbb
push
push
sbb
xor
es
outsb
sub
push
lock
fisttpl
jbe
cs
sub
out
jnp
lahf
pop
repnz
and
add
repnz
pop
cmpsl
ja
xchg
inc
pop
or
xchg
scas
add
mov
movlps
stc
cs
jb
fidivl
dec
stos
fs
mov
xor
inc
cld
and
movsl
cs
lcall
dec
pusha
lods
inc
mov
sbb
stos
daa
andb
test
das
adc
decl
pop
movsl
lret
lret
jno
leave
jb
jnp
mov
adc
ljmp
jge
mov
mov
adc
pop
sbb
jl
aas
jnp
decb
std
shl
loop
xchg
dec
sarl
popf
fnstsw
push
cli
shll
sub
cmp
mov
push
or
test
jl
cli
cmp
sbb
iret
cwtl
pusha
fcoml
inc
cwtl
rclb
ret
insb
test
jae
push
cmp
and
pop
push
ret
int
aas
lock
int
ret
add
sbb
cmpsb
filds
dec
insb
addr16
jecxz
sub
inc
xchg
xor
xor
sbb
cs
outsb
push
cmpsb
mov
dec
push
cmp
mov
push
scas
push
fldt
pop
and
push
loop
and
shlb
sbb
lds
adc
shl
xchg
lcall
clc
leave
outsb
fldenv
aaa
imul
push
xchg
ljmp
shlb
bound
inc
dec
push
push
and
enter
pop
pusha
mov
nop
aas
pop
jle
add
inc
insb
js
dec
in
jp
cwtl
faddl
arpl
in
pop
sti
jae
xchg
dec
test
sub
push
lcall
fdivs
or
push
out
dec
lcall
leave
and
call
adcl
fldcw
scas
dec
mov
out
xchg
mov
cmpsb
mov
into
ret
lock
lock
sub
rcrb
fists
fwait
pop
insb
out
lcall
ss
pop
loopne
mov
mov
cmp
rcr
addr16
fsubs
adc
jg
xor
aad
and
xor
push
mov
scas
inc
cld
add
xchg
jge
push
enter
add
mov
sub
or
mov
enter
xor
add
xor
push
ret
fcomps
jne
jp
jecxz
sbb
imull
bound
push
mov
xchg
push
arpl
aas
clc
jg
push
xchg
mov
sub
test
jb
or
xchg
iret
jnp
fxch
cmpsb
fcmovb
fadds
mov
inc
jae
repz
inc
mov
hlt
push
push
aas
mov
jmp
pusha
and
inc
xchg
dec
jns
pop
mov
shlb
adc
out
dec
das
or
scas
lret
xor
outsb
sub
push
cmp
dec
sbb
inc
in
inc
movsb
shrl
push
mov
sub
lret
lods
fwait
jge
fs
das
mov
aad
xchg
fisubrs
mov
inc
adc
push
movsb
add
inc
cli
aas
repz
adc
inc
mov
into
fsubs
push
lret
mov
int
std
sti
fs
sbb
test
ds
jb
test
sti
push
pop
dec
jge
fs
les
inc
mov
jb
out
adc
jns
movsl
mov
sbb
add
dec
mov
pop
xchg
add
xchg
and
inc
push
cwtl
cmp
pop
mov
mov
aam
repnz
lahf
xor
inc
test
adcl
cmpsb
test
or
push
or
mov
jns
push
mov
xchg
imul
xchg
sbb
push
call
mov
mov
lahf
xchg
push
xor
push
outsl
mov
pop
and
sub
stc
pop
push
loop
sub
int3
jmp
sub
jae
adc
movsb
push
or
cmp
rol
xchg
pop
cltd
sahf
cld
mov
aas
and
subb
outsb
dec
in
xchg
pop
nop
push
out
sbb
push
shrb
dec
cmc
mov
outsl
mov
or
shl
sbb
push
stos
push
and
outsl
mov
push
pushf
inc
pushf
inc
ds
mov
addr16
imul
lcall
test
inc
shlb
imul
sub
out
in
cmp
les
xchg
je
in
lock
mov
int3
xchg
ljmp
mov
xor
je
mov
push
fs
mov
and
sahf
mov
or
cli
es
and
xor
xchg
xchg
sub
fisttps
lret
pop
sbb
cwtl
pop
arpl
and
jge
popl
mov
mov
int3
leave
push
test
inc
sbb
cmp
pusha
cmp
cmp
adc
in
jno
or
je
add
int
xor
inc
or
rol
or
push
adcl
test
mov
aad
jno
rcr
outsb
push
xor
fwait
jg
cmp
xor
aaa
mov
adcb
loop
cmp
inc
push
ds
cmp
sbb
mov
mov
dec
and
sbb
push
mov
inc
sbb
add
sbb
popaw
xor
in
push
mov
xor
mov
pop
rclb
pop
xor
jg
imul
insb
ljmp
imul
rol
addr16
cli
shll
jb
xor
test
adc
mov
fwait
mov
cmpsb
inc
pop
sub
imul
push
in
cmp
das
ss
or
cmpsl
mov
cmpsl
or
rorb
inc
and
fldenv
enter
mov
lea
jno
outsl
xor
add
inc
jno
xchg
cmpsl
aaa
xchg
andb
cwtl
jno
sub
mov
pop
pop
sbb
jo
shll
pop
stc
mov
dec
mov
das
xchg
mov
aad
mov
pop
call
pop
int3
xchg
ret
jg
cli
das
mov
jnp
xchg
shlb
pop
inc
std
or
sbb
push
dec
inc
mov
xor
in
sub
xchg
xacquire
and
aam
or
xor
pop
fistpl
mov
fcompl
popf
out
mov
bound
cmp
mov
hlt
jnp
outsb
xchg
dec
push
adc
or
jnp
out
fnstcw
sbb
mov
call
xor
stc
sbb
jecxz
inc
sub
in
aaa
push
enter
push
ret
dec
lret
rolb
movl
inc
add
addr16
sbb
in
stos
not
aas
cmpsl
repnz
xlat
push
xchg
sti
stos
rcrl
fcomps
xchg
add
adcl
xorl
repnz
outsb
nop
ror
call
push
mov
push
adc
add
adc
push
dec
jmp
mov
mov
movsl
lock
icebp
mov
xor
inc
xor
popf
fbstp
adc
mov
pop
js
jge
lcall
vmwrite
mov
sub
xchg
and
retw
rclb
pushf
fistpll
testl
dec
mov
bound
int
cltd
and
in
mov
inc
test
jecxz
aas
dec
adc
lret
clc
sbb
loope
mov
fdivs
popf
mov
mov
sbbl
dec
add
mov
clc
pushf
ds
sbb
mov
mov
dec
movsb
into
cmp
jns
xor
cli
pop
pop
jb
jp
insb
jge
fld
jbe
xchg
lret
out
cld
xor
mov
mov
xchg
inc
xor
sti
or
mov
sahf
push
push
sub
mov
test
cmc
mov
aam
xchg
insb
and
addr16
inc
in
sbb
lock
mov
jecxz
ds
and
jle
lods
pinsrw
adc
ss
cltd
cmpsl
std
cmp
add
bound
scas
pop
ja
push
sub
lods
cmpsb
push
cmpsb
bt
ret
xor
jnp
popa
out
cmp
adc
cmpsl
imul
ror
sarb
mov
push
dec
cs
negl
xchg
data16
mov
pusha
es
push
jecxz
push
mov
addr16
dec
adc
push
mov
pop
push
adcl
ljmp
xor
mov
add
stc
xchg
andl
shr
mov
xchg
xchg
cmp
or
fisttpll
xchg
sbb
push
and
or
andl
cmpsl
ds
cmp
sbb
mov
jle
xchg
xchg
dec
inc
mov
fistps
fwait
push
jl
mov
shr
jecxz
adc
xchg
ret
fistps
mov
cmp
sbb
incl
or
movsl
rcrb
in
mov
adc
mov
pop
ss
loop
fcoms
xchg
scas
and
jnp
je
fs
lcall
add
scas
push
pop
popf
push
aas
lretw
cs
icebp
movsl
out
repz
mov
mov
fisubrs
int
xor
ljmp
add
fs
jne
mov
xor
mov
rol
sbb
push
xor
test
gs
sbb
iret
hlt
ja
jp
and
cmp
push
mov
pop
stos
pop
inc
and
rorb
push
movsb
dec
cltd
mov
outsl
mov
fwait
cld
inc
jnp
pop
or
add
xchg
push
incw
xchg
add
rorl
push
test
insb
test
cmpsl
xor
push
movsl
pop
ljmp
or
shrl
adc
sub
pop
or
cmp
pop
mov
jnp
jae
in
sub
push
inc
subb
imul
or
test
pop
jo
xor
pop
jo
or
add
mov
mov
fwait
inc
adc
cmpsb
adc
outsl
or
js
pop
inc
sbb
xchg
mov
and
jnp
push
data16
cltd
push
shlb
lcall
pop
dec
xchg
test
sbb
or
push
inc
mov
sub
or
cli
push
scas
mov
sarb
jns
out
mov
ror
lods
add
mov
jmp
jae
negb
test
lret
dec
mov
js
mov
fcoml
pop
cmpsb
add
aas
push
pop
daa
add
sbb
xchg
add
fisubs
into
xchg
dec
es
mov
dec
mov
adc
adcb
subb
mov
movsb
in
mov
mov
push
xchg
jmp
stos
into
js
negl
xchg
test
jnp
jae
clc
xchg
sbb
cs
mov
xchg
shrl
rol
inc
jge
add
aad
pop
test
mov
subl
call
add
lahf
int3
push
push
mov
pop
xchg
shrl
xor
scas
xor
xchg
sbb
scas
sub
cmc
nop
mov
lahf
popa
or
mov
mov
jnp
mov
sar
cmp
out
into
and
mov
mov
mov
add
dec
xchg
movsb
fwait
insb
in
and
jmp
in
gs
and
adc
dec
out
pop
cwtl
js
in
xchg
sbb
sbb
push
adc
pop
lret
movsl
xchg
push
lock
es
out
aad
sbb
aaa
scas
fcmovu
js
mov
push
test
push
xchg
push
stc
inc
dec
push
fnstenv
mov
movsl
ds
push
aad
cmc
cmpsl
daa
xchg
mov
push
addb
dec
jne
pop
nop
enter
inc
sub
inc
arpl
movsb
sbb
mov
test
ficoms
xchg
test
xchg
adc
test
sbb
push
jne
fmuls
inc
mov
ret
sbb
add
cmpsl
xor
pop
sub
in
push
dec
scas
sbb
pop
add
inc
dec
mov
cmp
mov
call
in
mov
mov
pop
stos
pop
xchg
popf
clc
ss
mov
ret
int
sub
lock
mov
std
scas
add
mov
pop
idivb
std
mov
aad
clc
dec
and
pop
cwtl
add
popf
xchg
gs
xchg
dec
cmpsb
clc
pop
les
repz
add
xchg
mov
pop
xchg
cmp
ret
lcall
testb
sub
stos
fwait
call
and
or
push
jmp
push
pop
or
out
mov
mov
test
xchg
movlps
adc
ss
or
lret
cwtl
rol
cmp
xorl
daa
imul
adc
dec
jle
loope
mov
ret
jp
imul
lods
mov
mov
cmp
fs
gs
inc
mov
fisubs
push
xlat
cmp
lods
push
mov
inc
pop
mov
xchg
cmp
addl
insb
push
stc
cmp
loopne
popf
imul
fcomps
imul
push
stos
lods
cli
mov
imul
mov
imul
dec
shll
or
outsb
cmp
inc
lret
or
imul
push
test
data16
sarb
clc
sub
pop
mov
and
add
mov
mov
ror
lds
xchg
push
push
nop
test
hlt
inc
and
adc
inc
sub
sbb
clc
adc
cmp
popf
popa
sbb
xor
pusha
lock
mov
inc
icebp
shl
fcomi
pop
fsubrl
xor
mov
or
leave
rorb
dec
movsb
js
sub
cmc
pop
lret
ds
cli
adcl
inc
repnz
in
push
or
sub
dec
mov
ficoml
jne
lea
adc
inc
call
sbb
loope
fmuls
loopne
mov
jp
sti
pop
mov
mov
and
mov
loop
or
loopne
or
in
out
mov
push
push
push
movsl
sbb
jno
inc
call
add
enter
imul
nop
jae
add
xchg
loop
ret
aam
sub
loop
lret
xchg
je
inc
sub
out
jp
push
out
stos
cmpsl
sub
mov
xchg
or
cmp
loop
lret
dec
inc
fistps
push
pop
cmp
out
mov
in
mov
loope
push
repz
lods
push
sub
scas
fsub
fstpt
gs
push
pop
xor
add
sbb
fiaddl
xchg
adc
mov
xchg
mov
lods
into
push
dec
testl
mov
iret
arpl
int3
dec
stos
jae
aaa
scas
mov
pop
jge
bound
je
aad
push
fldenv
mov
subl
jo
jae
sarb
nop
xchg
mov
gs
inc
ds
mov
xor
and
sub
xchg
mov
adc
or
rorb
xchg
cmpsb
dec
lcall
jle
out
mov
out
arpl
lods
in
push
popf
enter
adc
test
pop
stos
cli
outsl
nop
roll
das
cltd
rcrl
xor
dec
cmp
lods
ret
xchg
out
repz
jecxz
add
mov
mov
out
andb
inc
outsb
and
xlat
cltd
cmp
movsb
lods
in
ret
adc
jp
xor
cmpsl
sbb
pop
sti
iret
and
jecxz
cmpsl
jmp
sub
lea
les
cmp
movsb
push
hlt
out
or
and
loopne
pushf
jecxz
lahf
inc
adc
popl
mov
sti
sub
imul
mov
test
fdiv
and
insl
fsubr
or
insl
mov
push
pop
mov
hlt
ljmp
and
cs
sub
mov
setno
loop
iret
fucomip
mov
test
mov
mov
lock
out
sbb
cltd
rorl
ret
xchg
lcall
out
inc
mov
inc
fsubr
ja
in
hlt
icebp
stc
pop
jae
jno
loop
pop
mov
stc
pop
sub
or
sub
pop
sti
repnz
stc
pop
popa
add
sti
cmp
dec
pop
xchg
int
cld
adc
mov
pop
mov
mov
hlt
leave
addps
pop
cs
mov
nop
jge
mov
xor
or
add
sub
shll
push
mov
fdivrs
popf
pop
push
shll
jnp
pushaw
mov
arpl
jle
sbb
insb
sub
sbb
cmpsl
mov
int
mov
dec
shll
inc
push
or
sub
push
add
fdivrl
test
sbb
repnz
ret
xchg
pop
xchg
jne
or
stc
mov
xchg
inc
or
sub
icebp
hlt
push
stos
add
mov
stos
popf
xchg
push
inc
push
jg
mov
pop
xchg
divl
in
inc
call
dec
ret
jno
cmp
dec
dec
popf
adc
adc
jb
cmc
mov
aaa
scas
daa
inc
mov
xchg
sahf
das
pop
inc
mov
xchg
sbb
mov
xchg
xchg
and
mov
inc
push
inc
jbe
jl
adc
ret
jl
xchg
addl
iret
repz
and
inc
stc
or
fwait
xor
sbb
rol
int3
fisubs
lfs
mov
cmp
test
and
pop
sub
sub
fisubrs
fisttpll
out
scas
jns
faddl
popa
out
rcll
push
fcoml
jmp
loopne
pop
add
cld
addr16
push
pusha
fsubs
inc
bound
bound
and
cwtl
popa
inc
dec
pop
xchg
fs
push
stos
ret
lods
in
mov
push
inc
mov
out
loopne
shl
lock
jg
cmc
testb
fadds
xor
test
xchg
jl
ss
mov
mov
or
jbe
push
rol
and
add
push
xor
ss
mov
or
mov
fildll
rolb
icebp
enter
fdivrp
mov
fisubl
cmp
push
xor
ror
pop
cmc
daa
dec
out
mov
jg
scas
pop
filds
xchg
xchg
add
and
aam
dec
lea
nop
mov
jo
test
loop
cmpb
int3
decl
cwtl
subb
pop
mov
ljmp
pop
stos
cmp
fisttpll
push
jno
popa
cmp
outsl
sbb
stc
test
lcall
xor
rcrb
out
fcomip
repnz
xchg
push
sbb
fsubr
lock
jmp
test
inc
sbb
jmp
sbb
jmp
insl
shlb
and
addl
iret
leave
fimull
cs
inc
dec
mov
mov
test
jg
pop
cli
jns
imul
inc
mov
scas
mov
aam
pop
aad
mov
xchg
pop
out
cmp
cmc
pop
out
std
push
fimuls
pop
insb
pusha
mov
inc
frstor
and
jne
imul
lods
sbb
stos
mov
mov
clc
mov
pop
cltd
dec
or
and
dec
or
rolb
sti
call
mov
inc
sub
test
mov
into
sbb
imul
fsub
pop
scas
sbb
mov
mov
xchg
cld
insb
pop
jl
add
ss
addb
cli
fs
jl
leave
imul
push
pop
enter
inc
push
test
mov
sub
sbb
jne
dec
or
addl
int
out
xchg
pushf
rcrl
sub
mov
shr
test
incl
jne
cwtl
jae
xlat
pop
repz
sub
xor
std
lret
push
addb
pop
ror
outsl
in
dec
dec
jbe
and
mov
xor
insl
and
outsb
sbb
xchg
sub
ds
mov
in
jne
jle
scas
push
push
jo
adc
ret
int3
cwtl
rorl
adc
sahf
lret
cmp
xchg
mov
in
mov
xchg
lods
mov
add
sbb
push
jbe
mov
add
pop
cmp
les
cmp
fstpl
sub
cmpsb
push
push
push
xchg
dec
sbb
add
xor
mov
inc
jmp
inc
cli
repnz
aam
cli
mov
cld
das
mov
add
lods
int3
mov
movsb
pop
popa
cs
pusha
jmp
repnz
pushf
popa
movsb
jo
dec
or
inc
sbb
lret
xchg
ja
xorb
pop
sub
in
call
shl
jnp
aaa
scas
icebp
movsl
aaa
jns
jge
xchg
xchg
test
inc
je
xchg
negb
add
sbbb
sbb
dec
cmp
ljmp
int3
cltd
jmp
and
std
pop
cmp
mov
push
aas
fwait
test
sbb
or
fdivrs
push
or
pop
in
daa
dec
pop
shll
mov
dec
adc
mov
lods
aas
cld
pop
mov
pop
rcrl
iret
clc
push
adc
aaa
dec
pop
mov
repnz
pop
popf
std
cmpsb
int3
pop
cmp
in
pop
in
lcall
fisttps
push
add
lahf
outsb
pop
test
mov
stos
js
jl
daa
rcrl
scas
inc
mov
jnp
push
inc
or
mov
lock
lcall
ret
addr16
xchg
cwtl
sub
repz
inc
push
sbb
lcall
cwtl
jo
add
addr16
dec
rcll
cmpsb
sub
xlat
in
ret
inc
stos
mov
in
jge
add
inc
mov
mov
jb
inc
arpl
mov
xor
xor
xchg
sbb
xor
scas
ret
mov
jns
lods
push
cmp
aaa
lods
jg
or
or
jne
stc
pushf
xchg
dec
mov
inc
push
lods
fidivs
iret
mov
movsl
cmp
inc
xlat
jae
add
outsb
movsb
and
rcl
mov
pop
repnz
add
loopne
mov
push
push
add
or
lea
outsb
add
aad
cmp
testb
fsubrl
or
insl
daa
xor
xlat
and
mov
and
insb
and
dec
negb
add
repz
or
push
adc
sub
cvtdq2ps
test
add
cwtl
and
adc
and
and
aad
sti
xor
cli
loope
xlat
nop
lret
mov
or
cmp
cmp
push
adc
repnz
xor
lret
dec
test
pop
testl
test
push
jbe
sti
movsl
ja
sbb
pop
shlb
cmp
imul
pop
sbb
movsb
insl
push
cmc
nop
ret
les
push
push
push
mov
ja
mov
dec
dec
xlat
sub
jg
out
adc
test
sarb
xchg
cs
rcr
cmp
or
lods
cltd
cltd
js
jno
pop
cli
xor
loopne
sbb
inc
loop
outsb
mov
xor
jecxz
lahf
sbb
lret
adc
dec
cmc
mov
ret
lret
sti
rcrb
testb
jbe
push
fcoml
cli
push
into
daa
mov
xor
mov
fistps
mov
sbb
mov
aas
adc
js
cli
dec
push
cs
shr
mov
ret
out
imulb
jle
jae
adc
mov
push
unpckhps
cli
cmp
xchg
cmp
pop
int3
mov
pop
pop
xor
jg
xor
xchg
cmp
out
adc
and
addb
mov
sbb
xchg
xchg
lock
cwtl
jno
into
hlt
out
and
push
or
pop
mov
xchg
pop
fucomip
repnz
test
cmp
test
push
push
lods
aaa
fists
je
gs
addr16
hlt
int3
lea
fdivp
inc
push
les
and
xor
push
ss
fucomp
push
mov
rep
es
jo
adc
adcl
imulb
in
pop
or
and
cmp
nop
pop
lret
push
int3
cs
adc
clc
pop
sbb
dec
repz
mov
ficompl
lahf
ja
xchg
out
dec
in
shlb
addr16
sub
outsb
ja
xor
repz
loope
xor
mov
sbb
in
xor
jge
jno
pop
js
les
mov
mov
lods
push
jmp
cmp
mov
stc
iret
cmp
jne
xor
jno
clc
xchg
mov
shlb
pop
and
ret
jmp
jne
dec
push
mov
addl
insl
jno
sbb
lret
mov
mov
push
inc
in
add
push
dec
mov
repnz
and
aaa
inc
mov
inc
cld
int3
pushf
cld
mov
dec
push
lret
add
push
sbb
sarb
sub
pushl
popa
push
nop
pop
mov
pushf
sub
dec
pop
clc
clc
fildll
shlb
mov
add
lds
lret
clc
mov
and
dec
mov
cmp
xor
jo
imul
lret
bound
inc
mov
fwait
xchg
pushf
repnz
mov
and
mov
adc
fists
jo
dec
inc
push
xor
jb
jmp
aad
rorl
pop
ljmp
movsb
sti
add
add
mov
stc
pop
shl
sti
add
push
popf
cmp
aas
int
js
push
xchg
inc
add
mov
mov
jno
hlt
pushf
push
push
jp
cmp
sahf
dec
or
lock
xor
inc
dec
mov
dec
mov
andb
adc
sbb
mov
push
rcl
mov
lret
loopne,pt
push
cmp
dec
insl
push
sbb
insl
cmpsb
aaa
cltd
test
push
andl
insl
inc
push
loop
addr16
scas
lahf
push
loopne
cmpsl
push
fwait
movsb
cmpsl
pop
out
jp
adc
or
or
enter
push
jne
inc
jecxz
fs
inc
jge
mov
push
outsl
sbb
addr16
jb
inc
inc
pop
mov
jo
es
cltd
dec
pusha
jg
cld
imul
pop
mov
pop
mov
std
fdivr
mov
xchg
push
or
cwtl
xchg
and
subb
cwtl
out
dec
scas
sbb
popf
sti
fldenv
enter
mov
sub
mov
inc
sbb
xchg
cld
rcrl
inc
fisubrl
lods
cwtl
cli
les
aam
arpl
adc
cmp
repnz
adc
push
pop
adc
adc
lock
jnp
ds
mov
adc
xchg
shlb
cmp
pop
popf
mov
pushf
cli
das
aad
cs
icebp
test
sbb
ss
ja
outsl
cmp
push
mov
jg
inc
leave
jl
dec
or
mov
in
sbb
cld
and
aaa
cmp
and
push
repnz
lret
ds
stos
inc
jae
pop
lcall
sub
mov
cwtl
outsb
mov
clc
inc
lock
enter
xchg
mov
add
aas
mov
push
repz
pop
bound
jb
ss
push
adcb
js
jmp
and
push
lock
sbb
pop
lahf
sub
xor
add
popf
jmp
push
lods
xor
mov
xlat
jl
pop
xor
test
pop
popf
adc
insb
push
add
mov
or
and
dec
dec
cli
cmp
add
jbe
cmpsb
mov
inc
push
test
xchg
test
lods
shlb
xor
add
out
push
pop
icebp
mov
cli
pop
dec
mov
jns
in
cmp
pop
js
shl
mov
aas
add
mov
mov
xlat
popa
pop
std
ss
ret
loope
clc
punpcklbw
mov
pop
or
scas
lock
popa
and
pop
rcr
out
stc
push
dec
nop
out
roll
sbb
ret
std
cmp
add
mov
sahf
loopne
js
jbe
add
ds
jnp
adc
push
add
sub
inc
sti
or
loopne
test
adc
js
mov
xchg
in
popa
out
or
icebp
test
int3
icebp
cmpl
or
cmp
push
in
and
scas
xor
test
and
scas
xchg
mov
dec
in
and
mov
add
xchg
lahf
mov
cmpsb
popa
loope
and
loope
fldcw
inc
dec
fistl
jge
bound
or
or
or
pushf
fstp
int
cmp
jnp
call
push
mov
ret
and
pop
sbb
mov
adc
mov
das
adc
fwait
lahf
mov
and
sbb
mov
push
mov
test
stc
inc
sbb
insl
out
insl
movsb
lock
outsb
mov
pop
rclb
arpl
aas
loopne
das
sbb
and
dec
jp
jns
mov
mov
daa
sub
inc
jmp
shll
scas
pop
lcall
fs
or
jecxz
pop
fistps
push
lahf
jl
mov
out
cmpsb
xlat
mov
jle
pop
js
out
lcall
cld
pop
repnz
mov
push
out
sub
xchg
out
add
or
pop
loopne
fistpl
imul
mov
sub
adcl
push
int3
fs
test
mov
xor
xor
push
enter
addb
fisttpll
add
les
addr16
icebp
push
push
call
adc
les
pop
lret
sbb
addl
jae
mov
insb
pop
lods
sarl
pop
ljmp
xor
pusha
mov
push
push
ret
and
xchg
fwait
js
pop
push
pop
mov
fnstenv
out
adc
in
cmp
inc
push
mov
cmp
adc
pop
mov
jne
sub
jbe
mov
iret
jns
scas
mov
push
jae
jle
out
cld
lods
sbb
add
lahf
jno
add
push
imul
add
outsb
insl
lret
out
mov
jae
inc
lock
mov
mov
xchg
jl
movsl
add
inc
xchg
jns
jns
mov
gs
ss
xor
js
pop
jnp
ficoms
nop
push
clc
lret
and
mov
hlt
cmp
xchg
out
pop
adc
and
pop
popa
cmp
add
ja
cs
mov
jns
xchg
lods
push
sub
mov
mov
add
mov
int
jge
dec
lret
ja
inc
inc
mov
daa
or
das
add
test
je
pop
adc
mov
mov
pop
sub
cmpsl
fdivr
dec
add
push
pop
adc
outsl
push
sbb
sbb
and
sub
out
dec
or
enter
xchg
syscall
lock
outsb
test
lds
fisubrs
ret
ret
fiaddl
jae
faddl
lods
insb
xchg
inc
loope
loopne
and
stc
or
adc
add
lods
ret
fcomps
mov
xchg
and
std
mov
adc
shl
pop
scas
cli
push
in
xlat
imul
push
shlb
cwtl
sub
mov
int3
fdivl
or
mov
enter
and
scas
jb
xor
lret
mov
fs
add
add
or
inc
push
sets
mov
push
mov
test
add
pop
std
pusha
xchg
rol
and
lret
mov
orl
sub
iret
push
inc
cld
xchg
pop
jge
pop
fldenv
jmp
jb
pop
mov
cltd
sub
xor
and
lock
mov
mov
xlat
or
enter
repnz
xchg
bound
vshufps
insb
xchg
daa
lret
inc
clc
scas
pushf
xchg
jns
scas
sysexit
inc
sbb
ja
popa
push
outsl
sub
jge
lret
cmpsl
jmp
pop
rcrl
cmp
das
cs
jl
mov
leave
jge
addr16
dec
mov
add
push
adc
popa
aad
adc
mov
fcomps
mov
mov
pop
mov
cmp
fcmovu
sbb
cmp
and
xlat
xor
push
sbb
outsb
pop
mov
mov
mov
lahf
shlb
jmp
inc
in
cs
cmp
fs
jbe
and
pop
test
or
scas
mov
jb
clc
push
inc
fisttps
mov
mov
imul
movsb
test
fsubs
dec
inc
jecxz
inc
fcomi
lods
sbb
add
subl
lahf
pop
mov
jno
push
and
cmp
add
dec
inc
inc
mov
gs
fwait
push
cld
shlb
xchg
ret
add
sub
ss
xor
std
and
stc
sub
sub
incb
ffreep
imul
pop
mov
out
fistl
jae
mov
dec
je
push
mov
push
push
in
cwtl
push
mov
pop
enter
cs
mov
mov
mov
adc
xchg
sbb
mov
sahf
pop
pusha
imul
call
shrb
call
dec
inc
iret
nop
mov
mov
mov
push
test
out
pop
daa
int
push
mov
push
adc
lret
jecxz
mov
inc
rcr
mov
jno
add
movb
push
jne
xchg
loop
loopne
ret
fnstenv
cmp
push
xchg
add
mov
or
mov
dec
stc
jmp
xchg
stc
ficoms
int
dec
jle
push
stos
testb
push
inc
adc
xchg
push
dec
cmpsl
dec
dec
clc
jo
pop
dec
mov
push
mov
cmpl
iret
add
xchg
xor
adc
push
jg
adc
push
push
es
mov
jmp
or
inc
push
bound
cs
sbb
loop
xchg
push
jo
xor
lahf
push
cmp
stc
sbbl
push
mov
mull
pop
subb
and
inc
std
dec
hlt
mov
aad
xor
push
loopne
push
jno
es
and
out
mov
adc
sub
out
xor
ret
jb
es
cmp
pop
gs
mov
into
inc
or
dec
push
shlb
xchg
dec
lds
lcall
mov
xor
xchg
fs
jle
enter
lahf
and
lahf
or
int
or
xor
jmp
test
lahf
repz
cmp
cld
pusha
mov
out
pop
mov
std
cmp
fisttps
cltd
or
jns
inc
pop
hlt
into
dec
mov
cmp
fwait
cli
idivb
dec
and
mov
pop
mov
repnz
mov
fldl
adc
idivl
mov
icebp
cs
repnz
inc
call
pop
fists
inc
xor
int3
out
outsl
aam
jle
cmpsb
jb
mov
fwait
mov
push
pop
jns
insb
adc
mov
dec
xchg
lods
add
jno
imul
shll
dec
pop
jbe
les
push
inc
in
push
ret
sbb
mov
out
hlt
js
sbb
add
dec
add
jne
cmpsb
movsl
dec
jecxz
push
sbb
xor
lcall
stos
or
push
xlat
adc
nop
and
cmp
fidivl
push
dec
xor
out
out
push
jg
sbb
rcl
sub
jl,pn
dec
movb
add
in
or
call
push
arpl
jbe
jb
cmpsl
movsb
jnp
in
push
mov
cmp
popa
pop
clc
sub
fldt
out
adc
pop
scas
or
xor
test
xchg
adc
hlt
dec
idivb
inc
push
jl
sub
mov
lret
cmp
cmpsl
iret
outsl
dec
cmp
jecxz
mov
test
out
addb
jne
sarb
xlat
xchg
cmp
add
notl
xchg
sub
sti
ja
or
sbb
xchg
mov
mov
push
out
or
xchg
push
jno
sub
mov
nop
pop
or
push
adc
aas
test
dec
xchg
inc
cwtl
out
daa
test
sub
loopne
fiadds
fisttps
push
les
daa
add
adc
xor
mov
movsb
push
js
jmp
jo
fcmovnbe
jle
in
cmp
ds
and
push
test
scas
imul
outsl
pop
mov
push
mov
pop
loopne
adc
adc
cmpl
cmp
lds
inc
cwtl
mov
adcl
in
mov
jp,pt
pop
dec
aam
xchg
xchg
icebp
clc
jge
add
adc
xchg
adc
add
out
int3
push
lret
movsl
inc
inc
push
test
incl
push
pop
stos
leave
dec
fdivrs
dec
sub
sub
xchg
lcall
jne
add
mov
push
mov
rcrb
mov
js
jno
fwait
xchg
aaa
fiaddl
jne
popa
push
add
subl
pop
and
outsl
nop
leave
nop
push
pop
pop
dec
adc
xchg
mov
sub
mov
and
adc
push
cwtl
mov
and
insb
sub
sarb
pop
jmp
test
andb
mov
out
arpl
or
ret
pusha
icebp
dec
xor
aad
in
xor
cmp
stos
fucom
xchg
jl
and
bound
cli
cmp
xchg
mov
jns
stc
call
xchg
mov
mov
shr
pusha
lcall
out
sbb
cmp
fldenv
stc
mov
sub
jmp
add
aad
inc
scas
lods
fdivs
mov
mov
shrb
sub
sbb
mov
push
inc
push
movsb
push
fcmovu
add
xchg
inc
addr16
push
and
movsb
mov
js
push
adc
sub
lcall
or
cltd
push
je
arpl
xor
test
xchg
dec
arpl
dec
cmp
std
mov
cmp
push
add
adc
icebp
fwait
imul
adc
mov
fld
push
and
lds
or
push
sub
bound
stc
rorl
push
mov
cmp
add
pop
sub
adc
out
mov
stos
mov
cld
call
test
xor
sbb
and
or
lret
pop
testb
or
leave
lods
lds
xchg
aad
les
sarl
push
push
into
inc
xchg
ficompl
inc
push
push
xchg
out
jns
mov
mov
aaa
stos
stc
js
cltd
pop
jo
out
sbb
cmp
pop
sti
fisubrl
inc
mov
ret
pop
mov
xor
int3
scas
pop
loop
movaps
adc
int
dec
mov
xchg
dec
sub
mov
ja
jl
cmp
and
sub
dec
adc
and
fwait
pop
movl
jb
aaa
mov
xchg
dec
es
xlat
gs
mov
add
cmpl
out
hlt
psrlq
add
lock
xlat
pop
in
sbb
xchg
xchg
movsb
inc
ret
xchg
rcrl
pop
out
mov
jnp
das
xchg
mov
imul
cs
xchg
mov
mov
cmpsb
mov
cwtl
lods
push
add
mov
mov
in
subl
adc
mov
fisubl
bound
rcl
cmpsl
cmp
dec
in
sti
jl
ss
int3
icebp
test
jmp
lods
daa
int
pop
scas
push
insb
lds
mov
lcall
int
mov
xchg
fstp
std
jbe
icebp
dec
pop
sub
mov
jne
dec
fistl
add
inc
pop
sbb
call
xchg
call
test
mov
fs
xlat
mov
pusha
daa
test
add
or
cli
and
aam
mov
mov
hlt
ret
into
movsb
push
mov
pop
out
lret
jmp
jmp
and
cwtl
enter
into
pop
inc
out
mov
outsb
inc
pushf
sub
jmp
add
aas
cs
sbb
cmp
int
dec
mov
dec
stos
inc
lcall
stc
adc
in
repz
scas
cmp
adc
inc
andl
push
stos
fs
inc
mov
cmp
psrlq
bound
paddb
lods
out
and
lcall
push
cmp
repz
aad
int3
sbb
dec
ret
inc
call
mov
lock
cmp
insb
movsl
and
inc
sub
or
dec
cwtl
mov
and
push
addr16
call
add
jo
and
fwait
xchg
adc
mov
pop
fadds
lods
fisttpll
pop
leave
mov
jmp
push
lds
jb
xor
mov
xor
sub
lret
cmpsb
vpminsw
out
inc
inc
outsl
and
int
out
insl
push
push
dec
inc
mov
les
js
and
scas
stos
in
jmp
ds
mov
repnz
iret
dec
dec
jb
xchg
add
outsl
xchg
std
arpl
push
das
lcall
pop
aas
out
cld
das
out
xchg
iret
popa
aas
rcrl
inc
inc
add
dec
mov
mov
mov
nop
mov
lret
mov
mov
sti
stos
mov
jge
sub
inc
data16
dec
fldl
push
leave
loopne
sbb
lcall
push
mov
push
test
push
dec
cltd
mov
or
add
sub
add
mov
pop
jge
orb
sub
dec
mov
enter
loop
adc
shlb
shlb
sbb
fdivl
and
out
add
enter
xor
pop
pop
addl
dec
mov
lret
pop
popa
mov
pusha
push
mov
push
dec
inc
and
and
subb
loopne
mov
sub
push
mov
jge
out
add
mov
arpl
sbb
sub
ja
pushf
int3
imul
fbstp
push
mov
lahf
fstpl
gs
jae
arpl
mov
es
call
xchg
and
cmp
push
js
cmpsl
mov
or
pop
jne
fisttpll
mov
std
or
sub
scas
popf
inc
lret
add
adc
roll
jo
and
icebp
and
dec
repnz
fcoms
push
push
or
shlb
cwtl
jl
adc
xor
jnp
mov
xchg
inc
pop
neg
xor
scas
push
pop
iret
loopne
lock
stos
movsb
pop
outsb
lahf
mov
xor
je
test
dec
cli
cwtl
insb
dec
add
lcall
sbb
add
jg
jecxz
push
adc
push
jns
dec
push
js
mov
orl
mov
test
xor
mov
shll
jl
mov
sbb
fdiv
fs
push
jns
out
jb
shll
in
jno
mov
mov
popa
add
movsb
or
fnstenv
sti
xor
aas
lods
sarb
sbbb
lods
push
and
pushw
dec
fidivl
push
adcl
pop
icebp
mov
push
push
pop
shll
and
movsl
jg
icebp
bound
mov
sbb
xchg
nop
pushf
mov
adc
or
jp
cld
and
pop
inc
inc
in
mov
aas
jmp
or
addr16
lods
int
stos
sub
fmuls
imul
adc
mov
jmp
dec
dec
test
fistps
pop
pop
mov
shl
das
xchg
fildl
scas
pop
xor
pop
je
mov
sbb
jle
push
xchg
das
ret
imul
lock
mov
stc
xlat
insl
imul
pop
and
sub
aam
stc
mov
push
push
fcmovne
imul
inc
sti
ds
enter
cmp
je
je
fcmovne
adc
or
adcb
or
mov
and
sbb
add
dec
inc
and
xchg
mov
es
push
xor
lahf
xor
out
fidivs
sbb
orb
sbb
pop
xorl
idivb
mov
jl
cmp
aam
or
test
arpl
das
repz
dec
or
adc
push
or
inc
addr16
arpl
movsl
dec
leave
scas
fstl
jg
dec
inc
icebp
mov
xchg
push
and
hlt
repnz
mov
ret
icebp
adc
das
mov
xchg
das
mov
mov
jp
fildll
mov
jo
sbb
xchg
enter
mov
mov
je
mov
mov
cmpsb
push
lcall
mov
jg
mov
mov
cmp
ffree
shll
jns
mov
sti
mov
lock
jne
xchg
add
cli
es
push
xchg
stc
ret
std
add
cmp
out
mov
jae
fcompl
mov
aas
bound
sub
ret
ss
cwtl
jae
rsm
pop
xor
and
das
xor
cwtl
setae
xor
das
dec
imul
jbe
in
jnp
pop
adc
loope
lock
arpl
mull
or
daa
dec
dec
dec
mov
out
sub
fwait
pop
jns
fildl
ror
or
mov
sbb
xchg
lock
fidivrs
adc
hlt
jns
cwtl
jns
push
pop
lcall
adc
inc
pop
mov
fidivrl
test
outsl
popa
add
aad
outsl
iret
push
mov
aad
lret
xchg
add
jae
dec
lahf
dec
insl
mov
aam
mov
fcoml
cmp
add
adc
fnstenv
test
push
loop
js
cmpsb
cld
mov
xchg
repnz
and
hlt
mov
ljmp
mov
pushf
mov
or
js
push
data16
jl
mov
pop
sub
jmp
cmp
sub
fldl
lret
or
fstpl
lds
popa
in
push
pop
dec
dec
mov
adc
test
cmc
mov
pop
xchg
pop
mov
stos
dec
sbbl
lods
test
insl
jg
xor
or
out
push
popa
jle
xchg
xor
or
or
xchg
inc
jae
xlat
jl
sti
sbb
jnp
out
lret
add
jle
dec
sbb
mov
sub
ret
push
mov
gs
inc
mov
clc
fwait
push
inc
jecxz
movsb
push
je
repz
cwtl
icebp
not
or
lret
in
push
adc
or
push
fst
negb
hlt
sub
push
sbb
sbb
je
or
cmp
out
outsl
outsb
jge
push
int
shrb
sub
in
dec
or
hlt
out
mov
addr16
mov
jns
xor
jno
mov
dec
subb
dec
fsubp
hlt
loop
movsl
mov
es
gs
xorl
aas
pop
outsl
adc
dec
hlt
xor
jecxz
mov
push
pusha
inc
insb
daa
loopne
sub
rcrb
and
clc
cmp
les
shrl
sbb
pop
mov
adc
xchg
jl
mov
push
daa
cmp
xor
cmc
aas
scas
stc
add
mov
loop
fcomi
test
inc
cs
mov
inc
addr16
jecxz
and
mov
lcall
inc
fisttpl
faddl
stos
cmp
xorl
or
aaa
sub
mov
or
dec
daa
cmc
mov
repz
cvtpi2ps
or
testl
testb
stc
or
popf
and
enter
pop
dec
test
pushf
inc
outsl
add
pusha
stc
sub
jae
fbstp
insl
sbb
or
sbb
jae
shll
cmp
into
iret
loop
pop
adc
mov
scas
mov
icebp
pop
mov
pop
pushf
mov
mov
mov
push
sub
jbe
xor
in
les
cli
or
push
cmp
and
adc
push
add
nop
nop
jp
sub
je
jl
fs
repz
mov
lret
cmpsb
jle
out
push
ds
push
sarl
cmp
xchg
leave
xor
test
in
popf
in
aaa
mull
xchg
inc
sbb
notb
dec
ret
aaa
pusha
xchg
push
loope
lret
add
mov
jmp
jne
and
inc
iret
adcb
mov
gs
fstps
lock
jmp
inc
cmp
pushf
sbb
mov
xor
sbb
das
dec
dec
fstpt
inc
sub
or
mov
enter
lea
stc
inc
in
add
scas
mov
pusha
pop
sbb
cmpsb
jmp
aad
push
fisubl
mov
mov
dec
int
mov
xchg
cmp
in
cmp
jae
outsb
sbb
mov
hlt
stos
and
testl
sub
hlt
insb
bt
or
sub
xchg
scas
sbb
inc
gs
ss
xchg
cmp
mov
lods
pop
add
loope
aam
mov
outsl
iret
lahf
mov
fldenv
stc
nop
fcoml
out
pop
lret
ljmp
fnstcw
outsl
push
out
pusha
push
jo
add
pusha
lret
push
pop
pop
mov
pushf
shlb
sub
imul
popf
sbb
mov
lahf
pop
iret
ljmp
dec
call
and
imul
lods
inc
pop
dec
push
retw
xor
cld
outsb
push
pop
mov
inc
test
cmpsb
add
es
mov
fucomip
fcmove
lea
add
mov
jns
andl
popl
jg
repnz
out
mov
mov
roll
pop
cld
mov
loope
xor
std
adc
mov
push
push
pop
imul
lahf
ss
mov
inc
push
sarb
dec
sbb
mov
sti
xchg
and
mov
cwtl
adc
test
fwait
xor
out
jno
push
jmp
in
cmp
pop
in
or
and
loop
xlat
cmp
push
sub
dec
enter
add
enter
push
adc
repz
mov
iret
sbb
hlt
sahf
in
sbb
mov
rcrb
test
in
add
lods
push
rorb
and
int3
adc
iret
sub
push
cmpsl
nop
pop
add
push
xchg
push
adc
subl
clc
movsl
mov
add
nop
orb
adc
sub
mov
inc
jecxz
or
mov
mov
and
jae
repz
movsb
cmpsl
lcall
frstpm(287
push
dec
daa
cmpsl
mov
xchg
mov
xor
push
or
movsl
in
ficoms
pop
jno
in
sub
xor
insl
pop
push
jo
xor
rclb
and
push
push
or
adc
add
std
fsubrl
rorl
lcall
and
jns
out
pop
aam
xchg
nop
xor
scas
imul
jp
mov
push
mov
in
and
xor
das
xchg
jb
mov
inc
test
adc
repz
push
pop
add
inc
mov
out
dec
mov
test
sbb
dec
jne
rclb
sub
daa
cld
lcallw
cmpsb
lret
aas
int3
adc
test
aaa
or
or
outsb
popa
jbe
push
mov
dec
ficoms
and
push
cli
movsl
push
in
data16
dec
les
test
scas
int3
out
mov
sub
mov
or
loopne
and
add
in
pop
inc
dec
ljmp
lcall
mov
mov
repz
addb
lahf
dec
mov
jo
push
xor
xor
scas
ja
mov
jnp
lea
and
lds
pusha
and
pop
mov
cmovns
aad
shr
sbb
into
mov
imull
pop
adc
ja
mov
xor
dec
or
push
or
gs
outsb
jl
leave
cmp
shrb
cmc
hlt
fs
lds
lea
cmp
insb
pop
cmp
in
mov
mov
dec
dec
push
inc
popa
dec
in
add
sbb
jmp
cmpsl
cltd
cmp
ljmp
cmp
test
daa
and
iret
cli
movsl
push
xchg
inc
xor
stos
add
cs
scas
push
mov
ljmp
and
dec
bound
lock
xor
aam
pushf
aam
aas
mov
fwait
sahf
lods
hlt
loope
or
movsb
out
push
push
mov
and
push
dec
lret
repz
addr16
push
fsubs
mov
test
mov
adc
mov
or
or
push
clc
cmp
cmp
sbb
pop
xor
insb
mov
jb
xchg
xchg
lods
adc
ljmp
or
out
lret
enter
stos
push
imul
adc
aad
adc
pushf
inc
pusha
test
add
fsts
inc
jl
cmp
push
fadd
scas
dec
cmc
sahf
sub
xor
cli
lcall
lret
xor
aas
pusha
push
pop
out
in
in
push
stc
test
ds
fs
mov
mov
les
mov
in
xor
mov
in
inc
mov
ret
xchg
push
out
pop
stos
add
jae
dec
stc
fwait
dec
push
in
jns
or
sbb
xchg
popa
in
push
aam
cli
loope
push
mov
mov
sub
push
pop
xchg
ljmp
ljmp
cld
ret
dec
in
pop
jmp
stos
push
add
add
dec
mov
imul
push
adc
sbb
mov
repz
loop
sar
dec
mov
jmp
push
out
jns
inc
xor
sub
mov
pop
add
push
mov
pop
scas
leave
cli
movsl
push
jae
jns
scas
outsb
xchg
inc
fstpl
adc
cmpsl
test
cld
pushf
pop
inc
inc
into
ja
gs
lea
fimuls
pop
lcall
xchg
fisttpl
adcl
or
fbstp
jge
out
jnp
mov
das
inc
out
scas
mov
and
push
popa
mov
adc
lahf
xchg
sbb
icebp
cli
jmp
push
push
das
std
dec
jmp
push
dec
inc
scas
add
jge
insl
push
dec
in
sbb
lret
mov
and
inc
mov
cltd
cltd
mov
popf
mov
dec
mov
sub
inc
cmp
stc
sub
xor
jnp
rorb
cmp
pop
out
add
cs
or
mov
in
xlat
mov
bnd
imulb
orb
cwtl
mov
pop
push
mov
jp
xchg
aaa
pushf
daa
mov
xor
dec
sarb
fwait
das
mov
stos
or
dec
fsubl
add
sbb
lea
in
rol
jae
cltd
mov
cmp
mov
test
arpl
dec
das
repnz
cmpsb
sbb
or
hlt
dec
adc
pushf
insb
dec
nop
dec
or
lds
mov
and
cld
shlb
aam
push
xchg
pop
push
lods
movsl
mov
fidivrs
lods
cmp
sbb
pop
outsb
mov
mov
adc
gs
add
and
leave
fstps
orb
and
mov
inc
xchg
pushf
outsb
popa
mov
lods
mov
inc
test
outsb
inc
es
pop
ffreep
ljmp
or
mov
dec
rorb
mov
push
push
jle
ljmp
xor
jle
lea
sbb
or
xor
sbb
sarl
outsb
dec
inc
jb
int3
jns
sub
outsb
rcll
pop
mov
mov
xchg
scas
int3
inc
sub
ja
ja
xor
sub
xchg
mov
cmp
mov
into
sub
stos
shll
stos
dec
push
pusha
mov
lahf
mov
xchg
cmp
dec
repz
sub
xor
cld
int3
icebp
fstpl
cwtl
in
imul
pop
hlt
xchg
xchg
outsb
ficoms
fs
add
jl
and
pop
dec
ss
lock
inc
fisttpll
sar
test
test
sub
cmp
lock
cmp
sahf
in
sub
push
ja
insl
test
shll
popf
jg
fnsave
jns
dec
mov
sarl
cld
shll
repz
or
pop
xchg
cmp
jo
cltd
aad
mulb
mov
add
std
mov
jge
sahf
cld
mov
inc
cmp
orb
popa
xchg
daa
pop
sbb
mov
test
sarl
xor
push
pop
fcomps
lock
inc
bound
loopne
cmpsl
xchg
sbb
add
sbb
or
pusha
or
dec
mov
push
test
and
mov
shll
dec
cmp
std
outsl
xor
in
mov
shrb
in
xchg
add
out
jns
mov
pop
cmp
mov
scas
outsl
jne
scas
push
mov
xchg
sbb
and
es
jne
xchg
xor
sub
sti
ret
cmovs
clc
adc
int
jb
cmp
adc
les
jecxz
mov
mov
push
ss
and
imul
mov
test
xor
xchg
hlt
fstl
lock
inc
jle
dec
in
out
jmp
fiaddl
inc
rol
shlb
test
inc
lcall
dec
add
or
fnstcw
inc
or
pop
dec
iret
subb
rolb
mov
fimull
dec
lods
test
insl
mov
in
adc
cli
aam
xchg
movsb
cmpsb
lahf
pop
add
fs
mov
clc
cmp
faddl
into
test
ficompl
es
loope
pop
pop
repz
imul
sbb
pop
and
clc
or
cs
test
movsb
test
cs
pushf
mov
mov
lods
pop
jo
cmpl
push
dec
inc
mov
cmp
into
fidivrl
jg
lods
push
lds
pop
mov
jb
hlt
pusha
test
pop
xor
xchg
or
inc
pop
fsubl
lcall
inc
adc
hlt
push
int3
mov
push
jbe
adc
inc
push
inc
sbb
adc
clc
fmuls
dec
sub
popa
jg
gs
mov
jecxz
cwtl
push
mov
aad
addr16
cmpxchg
mov
jns
je
fmull
push
into
sbb
xchg
rcr
inc
sti
addr16
jecxz
loope
flds
sub
mov
add
xchg
adc
pop
jl
or
mov
popa
xor
mov
outsl
mov
push
into
xor
push
adcl
add
lahf
jp
xchg
aad
add
dec
pop
mov
mov
mov
imul
iret
clc
jae
mov
push
pop
scas
push
xor
adc
jp
xor
add
por
mov
adc
dec
gs
mov
pop
insl
cs
call
shrl
negb
and
pop
push
or
xchg
addb
sub
xlat
gs
cwtl
mov
sbb
dec
mov
sub
jg
push
pop
sbb
lahf
int
dec
cltd
stos
ret
adc
or
cltd
stos
sub
adc
cmp
aad
in
pop
test
adc
pop
jecxz
add
mov
xchg
addr16
gs
arpl
test
jp
ss
mov
outsl
fwait
subl
mov
std
sbb
jg
and
lfs
mov
add
ret
xchg
pop
cmp
jmp
call
repz
add
sub
aas
push
fs
push
bound
pop
aaa
data16
outsb
add
and
sbb
cmp
lret
mov
outsl
jecxz
cmc
add
pop
pop
lret
insb
out
mov
sti
clc
cmp
jne
mov
cmp
mov
mov
or
into
shlb
into
mov
hlt
arpl
xchg
mov
ja
sbb
rolb
lock
out
dec
je
out
dec
cwtl
pop
arpl
jecxz
push
mov
popf
lods
add
sbbb
dec
int3
or
mov
pop
push
cltd
repnz
or
push
push
sbb
push
mov
mov
aam
and
sub
and
sub
jo
sahf
jecxz
pop
stos
cmp
mov
push
into
push
adc
jp
sub
testb
data16
jbe
dec
leave
mov
cmp
jo
movsb
mov
ljmp
pop
rclb
add
inc
data16
insb
movq
ret
outsb
sub
rolb
add
ss
shrl
ja
fstl
faddl
movsl
testl
cmpb
out
jmp
into
inc
lret
add
push
xchg
test
popf
add
sub
aad
popf
fistpll
sbb
mov
inc
mov
in
mov
test
test
insb
ss
cmc
mov
shlb
push
addl
adc
leave
pusha
mov
inc
add
xor
inc
jo
pop
xorb
int
andb
mov
lret
xbegin
repnz
sub
data16
jo
repnz
and
andb
ret
pop
jge
pop
insl
lret
mov
ja
fwait
andl
into
jno
nop
xor
pop
xlat
sbb
bound
xchg
rcrb
sub
les
inc
repz
loopne
sub
fcmovu
cli
pop
adc
dec
orl
adc
xchg
in
xor
or
or
movsl
sub
ja
inc
lgs
add
stos
sub
into
aad
mov
mov
push
addr16
in
andb
jg
repnz
nop
movsl
in
pop
das
cmp
xor
adc
and
jp
out
popf
mov
cld
jb
ret
pop
and
pusha
pop
movsl
call
xchg
int3
bound
xor
cmp
pop
sub
test
and
rcrl
fwait
cmp
jecxz
xorb
mov
dec
imul
je
mov
mov
mov
cmp
xchg
sbb
imul
dec
xor
icebp
inc
pop
inc
dec
movsb
mov
inc
sbb
jmp
lcall
nop
mov
mov
filds
repz
sar
add
popa
mov
add
test
push
xor
cmp
push
fsub
into
movsl
add
lret
out
lcall
jge
out
cmpsl
int3
out
ficoms
dec
mov
test
cmp
adc
lock
dec
out
pop
mov
xor
cli
sbb
xorl
xor
and
dec
jne
decl
xchg
sbb
mov
lods
inc
dec
mov
out
aaa
adc
fsubl
sti
adc
push
push
sar
cld
pop
jo
pop
pop
jle
mov
ja
dec
aam
test
lods
dec
fsubl
push
mov
mov
xor
and
lock
out
js
std
mov
and
js
xchg
mov
shlb
fucomi
push
jmp
nop
lods
inc
adc
test
icebp
arpl
lock
mov
cwtl
faddl
xchg
xor
xchg
cmp
inc
enter
mov
xor
and
ret
and
in
push
insl
iret
imul
mov
mov
mov
adc
int
sbb
sbb
imul
cmpsl
push
cmp
jg
std
movsl
ret
jecxz
sub
jae
addr16
js
mov
push
sti
push
xorb
mov
xorb
and
lcall
sahf
fsubrl
pop
jmp
pop
shrb
int
and
sub
mov
push
out
bnd
xchg
adc
xchg
aaa
jg
repz
push
mov
dec
in
push
ja
xchg
add
sar
imul
popf
or
jnp
cmp
adcb
xor
add
bound
movsl
fwait
add
push
xchg
pop
fisttpl
mov
ss
xchg
lcall
dec
call
xchg
mov
stos
test
sub
or
cmp
pop
imul
icebp
leave
std
outsb
jno
or
push
mov
adc
or
cmp
gs
mov
cmpsl
enter
es
adc
pop
add
sti
lea
push
js
adc
xor
mov
xchg
dec
int
push
int3
loopne
jbe
or
stc
clc
mov
dec
dec
jge
inc
adc
cld
movsl
loop
ja
outsb
push
fsubrs
leave
mul
sub
jl
jle
dec
iret
xchg
xchg
pop
shr
jns
jo
decb
push
jg
jp
sub
into
ror
sub
push
jle
into
sbb
pusha
out
imul
jmp
xchg
sbb
adc
pop
out
cmpsl
and
ret
and
mov
xchg
pop
jmp
addl
mov
xorl
cmp
jp
jnp
inc
in
in
mov
xchg
ret
rclb
mov
pusha
insl
outsl
negb
scas
iret
mov
hlt
inc
std
sub
inc
mov
es
jge
dec
push
and
popa
rolb
pusha
cmp
mov
imul
inc
mov
mov
mov
mov
xor
jp
ja
or
adc
cmp
xchg
push
cmp
stc
mov
jmp
popl
out
push
aam
lods
imul
sub
push
aaa
aam
push
or
out
jecxz
test
mov
aad
xor
sub
stc
sti
dec
daa
aas
adc
cmp
sub
cwtl
ljmp
popa
imul
iret
fwait
jnp
or
dec
mov
lds
pushf
mov
jle
mov
and
andb
ljmp
and
inc
cmp
lds
and
sub
push
out
in
sub
insb
stos
add
leave
add
out
clc
mov
mov
stos
lds
inc
mov
xchg
jl
test
addr16
sbb
into
xor
enter
outsl
xor
mov
lock
dec
pop
icebp
aaa
push
add
fdivs
lea
mov
addr16
jge
dec
pop
mov
es
bound
fcmovnbe
lcall
jb
mov
gs
cmc
mov
test
mov
and
pop
lock
or
push
test
and
push
scas
pop
aaa
mov
aas
xchg
or
dec
insb
and
repnz
mov
cmpsb
fs
inc
add
jmp
mov
xor
nop
mov
xchg
mov
add
lret
pushf
lcall
add
jge
popf
lods
or
adc
rcrb
lcall
cmp
push
arpl
ret
cmp
jmp
int3
pop
aam
test
mov
leave
jae
xchg
mov
test
adc
cmp
xchg
cmp
lods
icebp
and
xchg
setnp
push
pop
repz
mov
inc
mov
jo
imul
movsb
and
es
jl
inc
xchg
push
jns
je
push
pop
repnz
ds
int
int3
mov
or
xor
mov
dec
push
movsb
into
insb
js
leave
es
sti
cltd
adc
test
jno
cmpl
mov
shll
les
es
mov
xchg
int3
and
jmp
adc
fs
or
mov
in
das
test
out
lea
ds
stos
imul
xchg
and
sahf
xchg
or
push
shrl
cmpsl
fs
fildll
adc
fs
call
pusha
mov
pop
xor
shlb
fucom
mov
or
mov
std
outsb
fistpll
xchg
xor
les
and
test
das
rcll
sub
pop
dec
sarl
sbb
add
cwtl
movsl
jae
mov
ret
mov
mov
and
dec
mov
bound
mov
inc
xchg
xor
mov
enter
and
hlt
fs
lods
sbb
addl
jl
or
add
inc
cmpsl
ret
sbb
cmc
pop
inc
jg
pop
push
sbb
mov
mov
jbe
jmp
in
je
lea
neg
jae
dec
shll
cltd
enter
cs
insl
xor
rorb
sarb
pop
imul
add
ja
movsb
mov
xor
inc
adc
mov
push
or
cltd
subb
loope
leave
ja
sbb
imul
push
cmp
lret
push
push
movl
pop
js
add
in
es
imul
jo
jo
fiaddl
add
inc
jbe
aad
and
push
cmp
scas
jne
pop
xchg
fs
fwait
insl
repz
pop
or
sbb
adc
and
xor
ljmp
call
xlat
dec
test
popf
or
push
push
jmp
mov
dec
or
stc
push
xchg
aad
je
xchg
jns
push
pop
out
push
fidivl
mov
or
xchg
xchg
dec
sbb
std
xor
addl
sub
xchg
std
jb
out
mov
shrb
stc
pusha
mov
clc
mov
leave
cmp
fistl
cs
mov
lahf
es
imul
int3
std
inc
xor
xchg
jl
jb
addb
cmp
out
hlt
inc
mov
push
loope
jb
imul
outsl
sbb
cmp
mov
loope
cmp
ficompl
inc
lret
adc
jle
loope
lret
pop
sub
adcl
shrl
out
xchg
sbb
xchg
pop
sbb
jne
pushl
jmp
pop
xor
lock
lret
mov
mov
test
mov
sahf
test
divb
hlt
inc
filds
insb
cmp
pop
cmp
jo
dec
pop
jne
sub
xor
or
stc
ds
xor
fnstcw
loopne
mov
test
fwait
mov
aam
and
mov
negb
icebp
push
or
cmp
xlat
push
mov
push
mov
add
sub
iret
xchg
sub
jmp
cmp
sub
popa
repnz
mov
sbb
and
stos
icebp
into
xchg
out
sub
mov
xchg
pop
shll
jo
gs
lcall
lret
pusha
mov
xor
xchg
mov
in
xchg
rorl
repnz
fchs
testl
std
inc
add
pop
inc
cmp
xchg
inc
andb
inc
fsts
mov
fsub
xchg
mov
sub
bound
imul
jae
gs
cs
or
test
jno
leave
imul
xchg
cltd
adc
bound
lret
lcall
ljmp
cld
dec
mov
or
icebp
and
fistpll
aaa
push
fst
fildll
dec
dec
sub
jnp
jecxz
out
and
aam
add
mov
jg
mov
jle
pop
sub
fildll
inc
js
xchg
sub
push
ja
popf
push
mov
xlat
cmp
mov
xor
das
into
pushf
es
int3
jg
mov
lea
insb
lret
mov
add
add
test
push
outsl
push
rcll
out
enter
outsb
je
sbb
jno
xor
and
notl
add
adc
arpl
rcl
fwait
push
cmp
xchg
lods
jne
push
cmpsl
push
push
or
ss
mov
sbb
cmp
out
idivl
in
popf
test
mov
jg
push
into
push
mov
or
push
int3
or
cltd
adc
sbb
xchg
in
out
xor
push
stc
das
push
push
insb
ds
cltd
jle
push
popa
inc
popf
inc
lahf
xchg
inc
cmp
data16
arpl
jo
inc
in
push
in
ja
test
adc
xchg
ljmp
call
cmpsb
xor
imul
jne
mov
jecxz
dec
addb
in
out
xchg
adc
rcrb
push
loope
mov
popf
jl
inc
pushf
push
xchg
sub
fsubs
mov
cmpsl
mov
push
xchg
push
and
xchg
cmc
cli
int3
add
pushf
jle
jmp
add
adc
rol
push
stos
add
dec
push
xor
xchg
sbb
lret
mov
fstl
pop
mov
and
mov
ss
mov
dec
dec
out
jg
out
jbe
lds
add
cwtl
in
shlb
outsl
pushf
push
xchg
sbb
test
lret
inc
push
ljmp
xor
jle
pop
fisubrs
in
shll
lock
es
rorb
leave
push
cmp
int3
and
pusha
mov
test
sub
jmp
sub
xor
outsb
addr16
aam
sub
pop
loop
inc
cltd
xchg
fidivs
xchg
dec
sbb
sahf
pushf
jl
xchg
dec
fstps
and
pop
aad
mov
out
fiaddl
cmp
sbb
mov
and
xchg
test
mov
and
or
dec
aas
ja
ja
ret
icebp
int3
and
xor
into
or
repz
mov
mov
aas
xchg
mov
popa
pop
lds
jecxz
xchg
xchg
mov
xchg
int3
inc
insl
mov
in
fisubs
dec
lods
loop
mov
xchg
repz
push
fwait
pop
xchg
dec
es
pop
or
out
sbb
mov
popf
cmp
jne
cmp
fstl
sarb
cs
xchg
xor
sub
int
add
rcrl
mov
iret
inc
jae
nop
sub
xchg
insl
fcom
clc
add
aad
push
jo
test
push
inc
ss
scas
xor
fwait
inc
sti
arpl
popf
daa
xchg
xchg
sbb
fisubs
arpl
add
adc
jno
ds
movsl
sbb
add
pop
mov
pop
cwtl
inc
xchg
push
pop
inc
pop
xchg
pop
lods
xchg
test
jp
cmc
decb
or
gs
mov
push
jns
adcl
loope
fdivrs
add
scas
cli
cmp
and
pop
push
sub
movsb
pop
mov
inc
jbe
sti
mov
iret
mov
in
mov
mov
jb
cld
sbb
cmp
adc
loopne
popa
in
xorb
into
outsl
sbb
mov
jge
in
sub
mov
jp
cmc
xlat
xor
daa
cmp
aam
mov
jb
dec
jbe
call
or
and
xor
adc
lret
gs
ret
xor
dec
mov
stos
jecxz
push
pop
shlb
lret
enter
jo
inc
mov
adc
pop
imul
insl
mov
mov
xchg
push
enter
jb
mov
push
add
bnd
adc
popa
lea
jno
leave
cmp
aaa
inc
subl
inc
xchg
cmp
xchg
dec
sbb
out
xchg
push
inc
cmpsl
push
idivb
pop
add
jl
cld
lods
scas
adc
ss
sbbb
xchg
punpckhbw
rorl
jo
pushl
shl
arpl
sarl
fdivs
or
dec
fsubp
mov
add
gs
ss
jle
ret
cmp
lret
mov
mov
pop
cmp
jl
dec
cmp
xchg
mov
mov
inc
sti
lret
cli
std
ret
clc
cltd
adc
sub
xchg
pcmpgtb
sub
clc
push
dec
cmp
fisttps
jo
ds
hlt
or
push
mov
fistpl
imul
mull
out
nop
rolb
jge
cltd
movsb
cmp
mov
in
push
mov
fdivrp
cmpb
push
mov
aad
fildl
dec
pop
jecxz
mov
dec
pop
xchg
dec
and
ljmp
adc
aaa
dec
mul
jae
fists
in
dec
lock
roll
or
push
in
lret
dec
int3
outsb
orb
cmp
mov
mov
sbb
mov
jg
ret
mov
dec
inc
iret
add
cli
dec
cmp
ret
adc
mov
add
pop
mov
stos
lods
loope
sbb
sbb
dec
mov
pop
xchg
sbb
fwait
mov
bound
je
jne
pop
test
mov
lods
push
roll
or
xor
add
or
test
lret
mov
lahf
ret
add
mov
xchg
std
addl
add
jns,pt
int3
mov
sti
in
incb
xchg
or
cmpsl
mov
pop
outsb
or
movsl
rclb
pop
inc
fwait
mov
mov
loope
adc
leave
mov
orb
test
icebp
shll
test
cmp
mov
popa
fstps
nop
iret
mov
imul
sbb
es
push
repz
push
mov
addr16
cmp
sub
cmp
fs
fldcw
xchg
mov
test
aam
sti
testl
jno
repnz
xchg
aad
jp
sub
cmp
jne
adc
pop
lds
push
dec
sahf
mulps
jbe
xchg
stos
push
lret
int
repz
scas
push
fcompl
imulb
or
inc
sub
cli
in
mov
pop
icebp
int3
test
sub
loope
cmp
inc
fidivl
jl
or
push
dec
sub
ja
incl
and
test
mov
pushf
sbb
mov
pusha
pop
sub
or
pop
stc
cmpsb
lea
pop
in
add
xchg
aad
mov
cmp
ja
push
or
xchg
sub
fbld
xchg
pop
push
stos
stc
push
addr16
nop
arpl
jb
mov
aas
push
jne
mov
sarb
ljmp
scas
push
add
fs
aaa
daa
movsl
stos
pop
hlt
jle
subl
pop
xchg
sbb
xchg
rclb
popf
aad
push
roll
mov
mov
mov
nop
je
cltd
pop
xchg
add
pop
and
aam
jmp
pop
sbb
add
and
outsl
shlb
adc
enter
lock
inc
imul
jae
xchg
sbb
jmp
mov
cmpsb
dec
imul
cmp
xor
inc
movsl
aad
cmpsb
push
add
inc
imul
xor
call
push
lcall
and
aad
xchg
out
mov
cmpb
shr
or
insl
sub
dec
jo
push
mov
cmpsl
pushf
and
jmp
dec
int3
dec
js
movsl
shrb
in
and
les
cwtl
mov
sbb
jge
into
insl
adc
mov
ljmp
cs
ss
or
int
aas
cltd
lcall
enter
pop
add
imul
fdivl
hlt
cs
fcmovnu
jbe
andb
push
pop
mov
cmpl
clc
mov
idivl
inc
test
hlt
inc
sbb
ret
jp
into
lods
push
inc
imul
inc
lods
adc
mov
arpl
jp
push
or
lret
mov
dec
movsl
jbe
out
ja
inc
dec
in
add
cmp
loopne
test
and
mov
test
into
xchg
pushf
mov
adc
scas
xor
cmp
in
or
pushf
push
test
sbb
ror
imul
mov
fdivs
xor
dec
mov
out
add
jb
pop
adc
dec
icebp
sub
stos
cs
hlt
jbe
fwait
mov
dec
jne
xchg
rcll
inc
js
mov
mov
adc
iret
jno
test
lods
cs
test
lock
and
dec
mov
and
xchg
scas
pop
mov
or
popf
movsb
add
cmp
stos
movaps
sub
lods
inc
mov
jmp
add
pop
fistps
xchg
push
mov
in
rcrl
jge,pt
sar
loop
xchg
sub
xchg
mov
xor
cmp
repz
popa
repnz
out
std
aas
in
nop
cld
data16
push
inc
fsubr
sub
sbb
dec
cld
lret
rcl
cmp
sub
mov
or
jnp
or
inc
inc
adc
jp
push
je
push
lock
mov
add
in
inc
xchg
jge
mov
sbbb
or
iret
pop
sbb
xor
pop
mov
mov
mov
mov
xor
push
mov
insl
je
push
push
push
stc
push
xor
lods
sub
push
push
pop
dec
fiaddl
mov
lea
inc
add
aam
lret
das
movsb
dec
mov
lock
mov
test
mov
sbb
scas
mov
insb
xchg
adc
sahf
sbb
or
addr16
cmp
push
xorl
cs
inc
jnp
aas
sarb
fidivl
mov
out
dec
addr16
add
in
sub
mov
clc
dec
adc
or
push
repnz
mov
lock
push
sub
inc
xor
cmp
lahf
mov
inc
clc
push
lds
or
jb
cld
push
dec
pop
jecxz
mov
hlt
mov
mov
out
shll
in
out
xor
mov
fs
std
mov
aam
xchg
pop
fstl
enter
push
das
cld
lret
cmpsb
mov
frstor
mov
insb
jg
cmp
fcoms
mov
mov
jae
lret
sar
test
pop
int3
push
mov
cmp
das
gs
adc
mov
pop
ljmp
inc
cli
int3
push
sahf
enter
in
enter
testl
cmp
gs
jno
push
sbb
sub
mov
mov
mov
repnz
popa
aam
adc
es
push
arpl
dec
bound
sbb
and
xor
ret
and
aaa
add
inc
std
push
sbb
lahf
add
jbe
shll
push
repz
cmpsl
sub
mov
xor
out
mov
cmp
ss
mov
cmp
mov
ret
xor
ror
mov
int3
arpl
sarl
inc
and
adc
jo
inc
imul
inc
cli
inc
data16
sbb
pop
jbe
clc
test
mov
clc
movsl
je
jmp
std
ret
sbb
rorl
ds
fbld
test
lock
mov
repz
inc
or
bound
divl
lahf
out
sub
lcall
mov
mov
sahf
pop
fidivs
ficoms
and
enter
xor
daa
int
cmp
jmp
lds
fcomps
inc
fwait
into
aaa
jmp
jnp
jns
js
dec
ret
mov
jae
and
aas
add
adc
mov
sahf
pusha
dec
jmp
mov
adc
push
pop
movsb
or
nop
push
dec
jecxz
pop
pusha
out
pop
das
stc
fucomp
adc
add
fisubl
adc
repnz
jae
sarb
les
mov
sub
out
mov
inc
push
mov
icebp
arpl
in
nop
icebp
add
xor
mov
in
dec
and
bound
je
std
es
es
in
test
adc
pop
push
sbb
mov
scas
out
jbe
or
sets
and
ljmp
and
cltd
lock
cmp
imulb
jno
sahf
add
mov
sub
arpl
mov
or
inc
cld
shlb
data16
jp
shll
insb
add
dec
or
fstpt
xor
sbb
fildll
xor
roll
cmp
out
jg
stos
cmpsl
in
sub
jno
addr16
jp
sbb
repz
add
fmuls
dec
mov
je
push
inc
fnstenv
mov
jne
insl
dec
jno
movsb
divl
mov
rcrl
and
push
daa
outsl
mov
dec
adc
sbb
fstpl
dec
andb
xchg
dec
inc
cmpsb
push
ds
push
cmp
cmp
les
mov
ss
lahf
in
adc
xor
push
mov
stc
sbb
sbb
adc
push
xor
cwtl
mov
mov
hlt
mov
or
pop
mov
lock
sahf
lock
push
pop
mov
inc
sub
popf
mov
fistpl
or
jmp
sbb
adc
es
les
mov
sub
jno
andl
dec
jge
pusha
out
mov
push
test
das
insl
mov
dec
jne
fisubrs
mov
ljmp
cmp
in
divl
xor
ss
in
xchg
adc
fs
cmove
mov
mov
push
xchg
cmp
add
fs
out
xchg
adc
xchg
fwait
inc
stc
mov
lret
in
imul
and
call
fidivs
jo
xor
imul
cmp
mov
inc
pop
mov
lret
xorl
enter
xchg
lret
inc
mov
mov
jmp
mov
or
push
mov
and
stos
sbb
or
push
pop
leave
cmp
cli
jge
jecxz
push
mov
fcoms
aad
lret
mov
dec
jmp
enter
cmp
xchg
pop
dec
or
mov
cs
cmpsb
sbb
aaa
adc
pop
mov
mov
sub
dec
push
lods
testb
mov
mov
jbe
or
incb
pop
adc
inc
int
xchg
cmpsb
jmp
stc
add
es
mov
adc
jmp
imul
in
gs
ss
das
mov
lock
pop
jmp
addr16
imul
inc
xor
xchg
xor
add
dec
ret
scas
lahf
push
and
adc
adc
cld
sub
mov
out
in
push
test
dec
ja,pn
out
aam
movsb
popf
or
push
and
mov
mov
mov
lahf
enter
jp
fisubl
dec
addr16
inc
dec
je,pt
pop
insl
jne
repz
pushf
sbb
add
mov
clc
dec
adc
bound
test
aam
sub
add
jge
or
fs
bound
out
dec
sub
cmpsl
sbb
cmpsb
cmp
pusha
cmp
orl
push
lahf
insb
ja
xchg
sqrtps
sahf
xor
sbb
out
iret
mov
or
xor
loope
and
js
loope
sub
fdivr
add
fiaddl
decb
pop
jp
jno
data16
sbb
fldcw
inc
mov
pop
pop
sub
or
je
ret
in
clc
xor
andl
into
cwtl
jmp
sti
out
jb
ja
sbb
or
or
mov
inc
sub
sarb
cltd
mov
ret
imulb
loop
mov
or
jmp
movsb
pusha
icebp
mov
in
fidivs
jo
into
and
ja
push
lds
jo
inc
jae
push
stc
mov
mov
mull
xor
add
je
push
cmp
loope
jecxz
je
inc
in
xchg
xchg
xorl
das
jae
das
test
in
ljmp
add
mov
xor
cmp
cld
push
cmp
mov
in
test
or
or
dec
lret
shlb
shr
inc
dec
sahf
scas
cltd
data16
outsl
xchg
dec
cmovb
sahf
mov
dec
insb
fcoms
sbb
in
mov
xor
xchg
dec
xchg
adc
mov
mov
mov
push
cmp
shlb
das
mov
push
xchg
push
lahf
aaa
cld
test
add
xor
pop
adc
aas
popf
jno
loopne
push
mov
xchg
cld
dec
xchg
je
andb
sbb
orb
in
inc
xchg
push
fs
into
int3
pusha
add
ljmp
outsb
pop
jecxz
mov
fnstsw
sbb
sub
pop
int3
loopne
jle
sub
ljmp
mov
sbb
int3
mov
adc
cmp
add
lds
bound
lock
fildll
lods
and
inc
xlat
push
cmp
inc
or
pop
mov
inc
neg
incl
je
cltd
fistl
push
sbb
adcl
aad
leave
cmc
inc
in
insb
icebp
frstor
lret
lods
nop
xor
push
jb
fiaddl
pop
sbb
sbb
push
dec
std
xchg
orl
adc
addr16
add
and
xchg
out
push
cli
cmp
cmp
in
jbe
into
adc
mov
mov
push
push
cli
mov
sub
test
and
jb
lret
cmpsl
ja
dec
incl
add
ljmp
rcll
mov
jp
mov
pop
psrad
fbld
push
nop
loopne
ret
hlt
cmp
hlt
dec
sbb
shll
xlat
lahf
push
daa
adc
cmp
mov
in
jne
sub
mov
out
push
cwtl
mov
stos
out
lret
inc
pop
mov
sbb
decl
in
cmp
lods
into
xchg
xchg
pusha
push
test
frstor
sub
int3
iret
sti
lods
mov
aas
inc
lret
insb
push
add
ljmp
jmp
and
push
stc
and
sub
add
xchg
mov
jae
lods
xlat
pop
xor
fistps
out
cmpsl
cmp
out
movsb
ss
adc
das
sbb
es
pop
icebp
mov
iret
jae
jo
addr16
jl
jp
cmpsb
scas
mov
push
add
pop
mov
es
mov
lcall
and
iret
push
adc
push
push
xchg
out
pshufw
cs
dec
dec
aam
rorb
in
lds
test
jl
jae
rdpmc
int
cmp
xor
xchg
aaa
iret
mov
push
aaa
xor
jge
pop
push
add
iret
dec
xchg
iret
popa
xchg
xor
mov
add
dec
mov
cmpsb
jae
jmp
and
mov
mov
mov
inc
test
push
mov
sti
xchg
mov
ret
xor
mov
and
cli
in
jnp
test
fadds
jns
xor
push
test
xchg
cmpsb
lods
lods
inc
sub
ja
mov
ret
mov
mov
in
jnp
mov
aas
mov
divl
pop
mov
mov
gs
mov
xor
mov
fs
xchg
inc
jl
scas
push
inc
xchg
sbbb
or
popa
ret
mov
enter
movsb
cli
xlat
cmpsl
loopne
shrb
sbb
lret
aas
sbb
mov
filds
insb
mov
test
lahf
pop
leave
dec
test
les
aad
mov
rcrb
dec
push
xchg
aam
cmpsl
ds
insb
daa
or
loopne
jns
cvtps2pi
pop
mov
jne
ljmp
in
into
mov
xchg
cmp
push
jo
out
sbbb
jle
push
push
orb
adc
nop
not
sbb
push
stc
and
dec
aas
jge
mov
jo
xchg
sarb
cmp
daa
mov
std
push
lea
push
jg
sti
test
push
or
mov
aam
ficompl
inc
in
ret
xor
sbb
fistps
aam
jne
mov
inc
es
push
mov
mov
cli
push
or
inc
mov
in
jp
xchg
pop
adc
inc
daa
push
sbb
es
cwtl
addl
iret
sbb
xor
in
sub
mov
mov
dec
mov
mov
fimuls
cmp
inc
fmull
xor
repz
out
shll
mov
adc
rcl
popl
lods
int
nop
loopne
stc
shrl
pop
subb
pop
aad
mov
xorb
add
int
add
jne
es
insl
sbb
vpsubsw
dec
jne
push
mov
pop
mov
xchg
lods
xor
xor
sbb
xchg
fsubrs
or
imul
imul
mov
movl
mov
pop
or
je
xor
out
and
sub
mov
push
xor
add
gs
or
nop
out
mov
movsl
cmp
xchg
fdivp
dec
sub
sbb
mov
or
in
rcll
add
add
xchg
sahf
cmp
mov
dec
adc
test
aam
or
ds
pop
cmp
mov
lods
mov
xchg
aam
shll
mov
ror
not
jnp
inc
xchg
outsb
sbb
fisubrs
xchg
inc
add
jp
arpl
cltd
outsb
push
loop
mov
add
and
stc
pusha
sbb
sub
imul
or
sub
push
addl
cmp
mov
test
xlat
lahf
lahf
mov
jle
sbb
popa
imul
push
add
lock
push
rcrl
notb
outsl
lods
fadd
pop
pusha
push
xchg
push
and
push
clc
inc
cmp
aaa
lods
inc
adc
out
dec
push
dec
sub
push
pop
sub
push
test
jbe
pop
fs
mov
outsl
imul
mov
or
movsl
dec
mov
test
mov
xchg
mov
adcl
add
add
sti
int3
adc
sub
inc
dec
dec
ljmp
aaa
and
les
fcompl
jns
insl
or
xor
icebp
cmp
push
popf
or
cs
test
dec
lods
jbe
loop
push
xchg
xor
sub
cli
mov
aad
lret
out
dec
inc
jle
outsb
jnp
dec
xlat
lds
in
aas
mov
idivb
test
outsl
push
add
cmp
mov
inc
push
test
dec
out
xor
gs
div
sbb
mov
out
fcmove
push
cmp
push
sub
nop
sbb
push
je
lea
jp
dec
pop
or
jbe
loop
sub
push
or
mov
push
sbb
imul
pop
sub
daa
push
insl
adc
rcrb
sbb
clc
addr16
arpl
ljmp
and
stc
sahf
cmp
sbb
loopne
repz
mov
inc
sarl
addr16
and
movsb
sub
jmp
icebp
fimull
pop
pusha
cld
and
sub
sub
and
loopne
imul
cmpsl
adc
lcall
xchg
ret
stos
pop
iret
add
xchg
push
fimuls
inc
orl
or
dec
test
aad
mov
popa
or
bound
les
dec
mov
sub
xor
movsb
loop
or
les
ljmp
sub
int
negl
test
leave
push
jecxz
mov
push
pop
leave
pusha
incl
lods
jle
enter
lods
cmp
mov
sahf
or
repz
shll
mov
sub
test
mov
aam
cwtl
jne
test
jbe
sbb
pop
xor
jno
jne
out
xchg
clc
xor
pop
push
shll
mov
pop
out
inc
cmp
stc
mov
adc
ljmp
loopne
lcall
xchg
mov
ds
sub
clc
cld
sbb
xor
xchg
push
push
mov
dec
jno
movb
pusha
roll
xchg
jbe
sahf
aas
arpl
push
test
rorl
movsb
mov
add
mov
repz
mov
dec
add
ror
mull
pop
enter
lcall
mov
fyl2x
out
dec
int3
movsl
cmp
add
adc
jno,pt
lock
push
jne
popf
outsl
add
mov
lcall
adc
mov
pop
xor
sub
push
fsubrl
roll
xchg
mov
cmp
push
test
into
addl
iret
sbb
pop
adc
push
mov
mov
pop
dec
pusha
xchg
jb
dec
roll
shll
mov
mov
add
fisubl
mov
dec
add
sub
aaa
or
xchg
mov
fnstenv
push
outsl
movsl
mov
pop
mov
lea
dec
ss
rcrb
leave
jae
inc
push
scas
dec
icebp
rcrl
test
jne
push
fcmovnu
lea
mov
adc
inc
mov
pop
ja
leave
sbb
shl
xorb
xchg
push
sahf
push
and
jb
mov
pop
call
mov
cmc
rol
cs
sub
test
movsb
imul
jne
repz
mov
jmp
pop
pop
sbb
push
push
test
sbb
push
xchg
jecxz
add
jns
pop
test
adc
xchg
sub
fisubrs
dec
fisttpl
rol
sub
sbb
or
js
dec
lds
add
les
test
xchg
or
add
dec
dec
sbb
add
or
in
adc
fbstp
sbb
ret
xchg
xor
std
xchg
sub
hlt
scas
jb
sub
push
sbb
hlt
sbb
pop
stc
nop
sbb
push
mov
inc
jle
xchg
dec
adc
pop
push
pusha
xchg
or
dec
movsb
push
icebp
gs
fwait
push
jns
dec
dec
pusha
xchg
cmp
and
pushf
jmp
movsl
inc
iret
jge
dec
push
lret
push
movsb
mov
ret
outsl
insb
repz
mov
les
jns
es
or
mov
lods
in
and
scas
outsl
lahf
imul
hlt
push
push
jbe
sbb
imul
push
sahf
out
cmpsb
dec
das
inc
add
xchg
mov
fldl
pop
inc
dec
das
pusha
int
pop
and
cld
pop
in
pop
mov
popa
xchg
jbe
mov
int
cmpsb
mov
filds
repz
outsl
jno
pusha
adc
or
fwait
mov
mov
cmpl
loop
cmp
ja
mov
jae
cmpsl
cmp
test
jne
in
jno
cwtl
aaa
xchg
out
lock
jo
pop
sub
nop
xor
cmpsl
jl
icebp
stos
sbb
cmp
pusha
in
lahf
lods
jb
cmpsl
dec
divb
dec
or
js
jge
mov
into
je
jnp
xor
and
mov
jne
jl
iret
add
cmp
sbb
xor
xor
jmp
adc
xor
shl
cltd
mov
and
mov
mov
sub
jno
aas
fidivrs
out
aaa
lret
jg
ss
into
movsl
cmp
test
push
push
add
mov
ret
mov
sbb
xchg
add
dec
mov
adc
lret
pusha
cmp
clc
repz
cmp
push
xor
jno
mov
dec
hlt
push
mov
mov
cli
shlb
inc
adc
xchg
sub
test
shlb
outsb
or
aam
ret
adc
dec
mov
test
stos
mov
mov
xorl
ret
cmp
mov
push
into
jecxz
jmp
jno
pop
popf
clc
cld
cs
cld
stc
cmp
je
cs
push
outsl
mov
adc
test
ja
mov
ret
jb
jecxz
js
lcall
call
notl
cmc
and
dec
cmp
pop
jge
pop
hlt
insl
dec
adc
aam
jle
int3
and
adc
pop
adc
xchg
addr16
in
xchg
mov
cmp
inc
ja
popf
repz
push
inc
dec
aaa
jge
push
into
das
or
popf
xlat
lods
mov
fs
test
add
aad
fistl
sti
mov
or
xchg
xchg
add
mov
test
dec
xchg
add
xchg
xor
fcom
mov
mov
pop
jl
cmp
and
aas
xor
adc
mov
jle
out
stos
cmp
in
pop
lret
ds
lss
jno
mov
insb
push
pop
das
test
mov
push
mov
pusha
jge
lods
or
jbe
scas
in
pop
je
adc
and
mov
aad
adc
sbb
push
pushf
test
sahf
mov
xlat
popa
cmp
insb
ja
mov
jmp
loop
shll
dec
mov
jmp
int
arpl
or
test
sahf
xchg
std
mov
divb
ds
inc
mov
mov
jg
clc
in
aaa
xchg
push
mov
cmp
fwait
stos
xchg
mov
les
add
add
dec
mov
adc
add
jle
lods
sbb
lds
fucomip
cli
imul
inc
enter
dec
cmp
stos
pop
mov
pop
mov
mov
cmp
insl
lcall
in
ss
mov
addr16
jnp
popl
sub
mov
dec
movsl
inc
sbb
and
out
scas
lret
lahf
xchg
dec
shrd
sbb
sbb
mov
or
jne
mov
xor
ret
in
aas
adc
nop
js
sbb
adc
movsl
adc
notb
imul
pop
mov
dec
sub
sbb
sbb
inc
fnsave
rclb
jo
movsb
jg
loope
in
mov
aam
int3
push
mov
or
lcall
push
ret
adc
or
xchg
jl
jp
outsl
xchg
mov
fstpt
jo
push
ja
into
mul
in
out
sbb
scas
ja
test
lods
clc
divb
into
call
les
sbb
dec
add
adc
dec
or
add
cmpl
je
and
movsl
adc
loope
fisubs
dec
mov
sbb
imul
in
adc
pop
push
cmpsl
add
int
push
scas
leave
popf
stc
stos
mov
xchg
pop
mov
repz
out
gs
ljmp
scas
cltd
push
scas
mov
addb
dec
negb
daa
outsb
xchg
adc
outsb
pop
orl
mov
inc
jl
nop
ss
icebp
in
mov
cwtl
mov
leave
fdecstp
hlt
xchg
or
push
dec
out
js
mov
sub
inc
sub
adc
leave
push
cmp
pushf
in
add
jbe
daa
insb
lret
inc
loope
ss
call
pop
xchg
icebp
mov
xchg
in
shrl
push
fsubs
add
push
les
addr16
insb
das
iret
int
mov
icebp
pop
lds
pop
xlat
sbb
cmp
cmp
inc
jge
push
lods
inc
int3
sbb
cld
xor
dec
xchg
fwait
pop
clc
push
js
movb
pop
xchg
mov
sbb
push
shl
fmull
or
clc
sub
aas
sbb
dec
ficomps
stos
xlat
adc
lahf
dec
scas
push
mov
insb
push
push
stos
add
frstor
ja
clc
sahf
gs
pop
sub
pop
aaa
lahf
or
sub
xor
mov
lcall
xor
xchg
sub
lret
cmp
cmpb
aas
ja
xchg
leave
cmc
faddl
push
xor
xchg
es
jnp
sub
inc
dec
sbb
in
in
dec
cmc
dec
xor
jl
jae
push
dec
jp
xchg
cwtl
xor
inc
dec
call
insl
test
xor
inc
pop
repz
push
mov
add
in
push
and
jae
inc
idivb
lock
xchg
or
pop
cmp
ds
fstpl
mov
lret
pop
and
add
xchg
out
add
test
imul
mov
xor
dec
in
dec
aas
sarb
xor
mov
aaa
or
imul
xlat
xor
sub
shll
gs
inc
ss
mov
ret
iret
sbb
lea
repnz
or
dec
inc
fcmovnu
dec
adc
fnstsw
out
inc
ss
jp
incl
xor
and
mov
cmp
mov
cmp
bound
movsb
or
iret
lret
cmp
lods
jge
jp
jmp
scas
ret
mov
aaa
mov
xchg
lret
jmp
in
int3
xchg
scas
je
push
sbb
adc
push
clc
js
lods
sub
icebp
pop
or
or
jg
out
jb
lea
mov
insb
iret
mov
cmp
mov
dec
xor
cmp
and
mov
add
gs
xchg
sub
addb
push
push
mov
adc
rcrl
cmpb
ss
jg
push
lret
or
in
cli
outsl
mov
mov
sbb
sbb
inc
cmpsl
pop
lea
lcall
and
fldl
push
shlb
pop
adc
xor
sbbl
cld
jg
xor
adc
insb
lods
cmp
mov
lret
dec
sub
sbb
enter
jl
rcll
in
mov
inc
andb
xchg
fisttpll
sbb
or
loope
cli
add
xchg
imul
inc
frstor
pusha
insl
fdivrp
mov
xlat
pushl
addb
in
sbb
mov
push
xchg
push
in
nop
jl
in
stos
cld
jnp
lock
fsubrl
addr16
mov
rcrb
sbbb
bnd
adc
sarl
cmpsl
and
mov
fs
test
push
daa
push
push
sbb
and
icebp
shrl
sbb
pop
aas
push
mov
push
mov
mov
xlat
xchg
jmp
jecxz
scas
push
std
scas
mov
xor
adc
mov
add
idivb
jnp
xor
jle
jp
in
arpl
adc
lahf
mov
and
dec
or
or
sti
fcmovne
int
lahf
dec
je
cmpsl
pop
arpl
movsl
pop
jg
push
pop
cld
lock
push
mov
test
xor
pop
cmp
mov
ss
inc
roll
or
xlat
cmp
sub
inc
pop
xchg
lcall
jbe
cwtl
pop
ret
sbb
jecxz
cmp
mov
outsb
pusha
mov
into
lea
divl
repz
sub
jle
adc
cmp
mov
push
ret
jg
popf
jne
mov
pushf
jg
dec
mov
inc
test
fsubs
arpl
mov
fwait
sub
lcall
cmc
and
dec
shll
leave
das
clc
inc
xor
mov
mov
and
push
xchg
test
lods
xchg
mov
pop
bound
mov
sbb
in
movsb
sub
loop
lahf
and
mov
mov
or
xchg
cmp
jnp
daa
loopne
jmp
mov
cmp
mov
lock
push
cli
sbb
clc
test
mov
pop
cmp
mov
pop
xchg
scas
dec
mov
out
add
cmp
xor
mov
sub
push
aaa
push
in
out
xchg
iret
in
sub
xor
push
mov
das
outsb
pop
and
lahf
inc
xchg
ficomps
mov
pop
ss
fdivrs
fucomi
mov
and
test
test
jae
and
mov
dec
and
mov
arpl
xlat
cmp
das
gs
cmp
pushl
mov
or
nop
ja
test
pop
pushf
and
stos
lahf
mov
xchg
push
call
and
mov
dec
out
popf
push
jmp
lahf
xchg
ljmp
nop
mov
bnd
mov
es
mov
out
shr
pop
dec
push
and
cmp
pop
outsb
popf
push
jl
divb
lea
xor
repz
jae
cmove
dec
sub
ret
jg
neg
loopne
pop
push
ja
xor
or
lahf
pop
inc
mov
xchg
add
push
js
imul
mov
int3
out
inc
loope
inc
addr16
lret
push
dec
and
jnp
mov
xor
jmp
xor
shrl
es
andl
xor
hlt
ljmp
mov
cltd
js
adc
mov
ss
les
into
ljmp
jge
xchg
and
mov
sbb
jmp
test
adc
idiv
shrl
xor
hlt
fistl
sahf
jp
inc
pop
mov
sub
sub
adc
dec
loope
out
popf
cmpsl
pop
movsb
jnp
sbb
jns
sub
mov
enter
sbb
cmp
lret
cmpsl
dec
inc
lods
aas
fidivl
push
enter
pushf
pop
or
jge
sbb
cmp
mov
pusha
push
pop
pop
xor
clc
pusha
push
inc
pushf
daa
sarb
add
mov
mov
mov
cmpsb
adc
pop
and
mov
mov
jbe
xor
fsubrs
or
test
repz
data16
daa
adc
into
enter
pop
xor
imul
andl
orl
add
push
jecxz
and
mov
fbstp
lahf
cs
loopne
lahf
fisubs
in
push
push
mov
push
ja
iret
fadds
inc
sub
loopne
push
inc
pop
test
lret
xlat
outsb
jb
push
adc
jbe
pop
sbb
push
movsb
std
add
ret
sbb
jge
stc
inc
cld
jle
or
push
insb
in
pop
dec
mov
sti
ds
scas
aam
sub
pop
mov
dec
aas
jge
test
xor
or
jge
dec
fwait
cli
dec
mov
pop
inc
and
xor
rorb
pop
ficoms
push
insb
and
fs
inc
jge
jp
and
enter
lahf
jp
push
cli
in
xor
mov
sub
rorb
dec
mov
fldl
sbb
sub
insl
xchg
cli
dec
lret
in
ss
xchg
push
ret
pop
xor
inc
stc
loopne
jnp
jo
inc
or
mov
mov
lcall
loopne
movsl
inc
cmp
sub
movsb
fdivl
lret
out
aad
movsl
push
out
adc
pusha
jne
sahf
fwait
jg
out
jmp
aam
repz
out
mov
mov
in
mov
cmp
dec
daa
sub
mov
or
mov
aam
lods
inc
cltd
movsb
xchg
or
insl
ret
outsl
jnp
insb
adc
cs
repz
mov
daa
sbb
xchg
leave
cltd
cmp
pop
add
jmp
loope
mov
bound
inc
mov
into
jp
push
or
cmpsl
and
add
pop
stos
mov
adc
mov
in
xor
dec
dec
cli
mov
clc
aam
fists
rorb
inc
mov
in
les
xchg
repnz
pop
cmp
xlat
in
cmp
dec
add
mulb
aas
add
jg
dec
in
mov
outsl
stc
mov
nop
xchg
cltd
xchg
push
sbb
addl
and
and
mov
mov
or
mov
push
pushl
adc
movsb
lods
and
insb
adc
cmpsw
jmp
and
cmovle
or
push
std
mov
nop
dec
scas
int3
add
lret
inc
addl
adc
push
mov
mov
push
testl
jp
pop
addl
ret
mov
loopne
xlat
loop
fistps
repz
add
adc
je
cltd
pop
movsl
adc
sub
fmulp
das
popf
loope
mov
push
jecxz
xor
in
and
xor
inc
mov
cmp
enter
iret
xchg
ffreep
das
mov
addb
or
mov
stc
xchg
push
pop
movsl
jmp
xchg
push
fisubrs
fs
pop
pop
or
mov
icebp
xchg
iret
xchg
jg
int3
sub
push
xor
push
lret
dec
jge
idivl
mov
stos
or
mov
dec
push
jo
cmp
sahf
les
cs
aam
xor
dec
test
and
dec
xchg
add
jno
ja
int
iret
and
ds
mov
dec
mov
movsb
mov
sti
mov
mov
sub
in
cmove
in
mov
push
adc
and
out
icebp
call
sbb
inc
xchg
movsl
das
dec
inc
aaa
dec
mov
jno
test
addr16
pcmpeqb
xlat
add
push
lods
clc
pushl
jg
fs
jb
aad
xor
lock
push
mov
cmp
popf
or
fdivl
rep
mov
pop
cmc
inc
jns
inc
ds
add
push
sahf
fmul
mull
test
jns
xchg
aam
cmp
test
mov
mov
mov
lods
inc
mov
add
dec
xor
vcvttsd2si
shll
inc
push
leave
and
fistpll
pop
add
dec
or
push
scas
sbb
inc
and
fisubl
lcall
repz
and
js
cwtl
cltd
test
push
mov
pop
mov
and
ror
loopne
xchg
adc
mov
andb
aas
inc
add
pop
dec
outsb
popf
dec
mov
mov
cmpsb
int
daa
int
fidivl
pop
pop
sarb
push
fs
adc
lock
jbe
cld
inc
cmp
xchg
int3
fisttpll
mov
lea
xchg
repz
out
or
and
daa
inc
cmp
repnz
lods
inc
jbe
scas
js
hlt
or
adc
mov
xchg
and
sti
out
xchg
cli
xor
out
out
mov
push
std
outsl
pop
das
mov
cmp
dec
cmpsl
inc
lds
sub
and
hlt
mov
sub
jmp
pop
sti
pop
mov
xor
nop
cli
push
push
popf
ds
int3
notb
inc
push
inc
ljmp
mov
mov
sub
into
pop
mov
repz
scas
push
movsl
test
sub
or
mov
push
in
incb
cmp
xor
insb
das
out
jnp
mov
out
jo
or
pusha
xchg
repz
leave
lret
rorb
cwtl
or
cmpsl
mov
or
pop
les
es
pop
dec
scas
or
add
dec
cmpsb
ret
mov
fmuls
cmpsb
xchg
lcall
out
into
fucomi
jne
xor
test
lock
mov
testl
pop
cli
shlb
xchg
test
cltd
lcall
sbb
mov
inc
lahf
jmp
push
inc
pop
sarl
xchg
push
sbb
xchg
mov
dec
push
sub
shrb
dec
sahf
pop
mov
imul
popf
shrl
push
push
jmp
xor
mov
mov
and
jo
gs
iret
xchg
mov
ljmp
push
cmp
inc
data16
loopne
jmp
ficoml
and
jg
sub
pusha
pop
ss
out
cli
inc
loope
je
ficomps
dec
cmp
les
push
aaa
xor
and
mov
movsb
rorl
mov
mov
xor
gs
sub
ja
push
pusha
jg
cmp
sbb
cmp
btr
fs
adc
jmp
pop
insb
dec
cli
push
xchg
out
inc
add
add
mov
out
xor
in
push
sbb
cmc
mov
mov
shl
xor
cmp
fstpt
cmp
ss
add
mov
int3
lock
notb
dec
fsubrp
mov
dec
xor
rclb
lea
cmpsl
cmp
or
hlt
xlat
mov
pop
enter
push
mov
push
mov
fadds
shrl
adc
jg
stos
sub
sub
fldt
push
inc
data16
lahf
outsl
inc
stc
enter
insb
repnz
and
out
push
pop
sbb
adc
lcall
gs
adc
cmpsb
jbe
xchg
jne
in
mov
aad
arpl
cmp
call
sahf
outsl
lods
fisubrl
into
sbb
hlt
pop
xor
ja
sbb
pop
jecxz
add
in
sbb
imul
cmp
xor
in
ret
mov
dec
adc
inc
movsb
inc
roll
sub
inc
add
fldenv
or
cmp
mov
xor
aaa
sarb
outsl
ficoml
fldt
add
jle
pusha
mov
add
stc
jae
dec
pop
jo
into
addr16
insl
or
add
fcoml
pop
insl
daa
loopne
lea
mov
out
sub
push
push
les
insl
loopne
movsl
leave
and
inc
jg
xchg
xor
cmpsl
dec
inc
xor
int3
out
outsb
xchg
mov
push
xlat
push
out
push
dec
jecxz
shlb
push
jmp
xchg
sti
test
ret
and
fildll
and
pop
or
adc
mov
sti
push
or
std
fcomi
push
iret
mov
mov
and
pop
dec
jp
or
and
imul
out
sbb
pminub
push
repnz
push
fsts
adc
push
fcmovbe
iret
mov
jmp
fwait
inc
jmp
push
in
test
pushf
int3
jo
std
sbb
sub
imul
and
dec
push
jecxz
nop
aas
in
nop
scas
int3
and
insl
cmp
mov
inc
cld
aam
movsb
test
xbegin
jmp
push
fimuls
cwtl
ljmp
daa
cmp
mov
mov
imul
sbb
push
nop
mov
add
add
mov
pop
out
sbb
xchg
lret
sub
repz
adc
or
pop
int
out
jle
lds
jle
ret
fucomi
dec
dec
jp
mov
mov
data16
je
pop
xor
or
jbe
rclb
call
repz
sti
or
push
fdivrl
add
rol
fnstcw
push
or
in
enter
stc
and
jae
xchg
mov
add
sbb
arpl
xor
gs
test
outsl
orl
lock
pop
dec
xchg
rcrl
push
xchg
ror
hlt
les
sarl
sub
inc
adc
int
ds
scas
leave
test
jmp
in
mov
mov
ffree
xor
sub
cmp
enter
repz
sub
push
insb
cwtl
sub
xor
push
pop
ss
ds
pushl
add
lods
enter
test
cmp
cli
and
cmp
mov
in
pop
xchg
cwtl
aas
inc
mov
xchg
xor
packuswb
add
sub
or
mov
fisttpl
loope
lret
mov
addr16
jnp
sti
dec
sbb
xor
mov
adc
push
movsl
fidivrs
push
test
fimull
lahf
push
jb
js
hlt
push
and
add
in
cmpsl
push
jge
pop
inc
fnsave
cld
call
out
xlat
add
xor
jmp
mov
pop
lock
addr16
mov
cmp
lret
dec
or
cmp
dec
cmc
in
lcall
adc
sub
test
popa
hlt
mov
enter
in
xlat
cmp
je
dec
fildll
sbb
repnz
xchg
adc
mov
push
repz
lds
outsb
test
fsubrs
xor
daa
inc
pop
mov
mov
jge
dec
test
imul
scas
and
jnp
dec
mov
nop
sub
mov
cmp
daa
or
clc
aaa
push
mov
pop
sti
sub
ljmp
loopne
test
jg
fidivrs
xor
sahf
cld
in
add
out
mov
adc
jae
nop
push
pop
push
mov
sub
fsubl
bound
cmpb
rolb
dec
aam
mov
xor
ret
rclb
std
xchg
or
mov
fldcw
mov
pop
mov
sti
push
add
sub
rorl
pop
inc
andl
stos
mov
dec
xchg
insb
outsl
push
cmp
test
xchg
mov
jg
fnstenv
subb
and
rcrb
aas
shr
push
mov
pop
int3
inc
and
js
pop
mov
icebp
xlat
xchg
lea
mov
imul
subl
mov
push
clc
arpl
and
add
mov
fcoml
sub
mov
in
cmpsb
cltd
mov
in
pop
or
mov
xor
pop
xlat
push
roll
imul
cs
pop
orb
sub
dec
daa
adc
int
push
sbb
xchg
push
pop
sbb
int3
lret
scas
xchg
pop
rcrb
mov
pop
pop
jmp
jnp
mov
sti
fnsave
jno
aaa
enter
out
frstor
mov
mov
je
js
stos
dec
inc
xor
xor
jbe
cli
stos
ds
in
sub
mov
aas
or
aaa
mov
sbb
nop
mov
push
fwait
dec
cmp
mov
dec
lret
negl
jns
jno
cli
lds
lods
lcall
subb
or
cmc
dec
push
outsl
jo
or
push
sub
xchg
mov
sub
push
push
xchg
scas
jb
inc
xchg
cld
mov
mov
jge
or
popa
jbe
lock
movsl
daa
bound
push
mov
mov
add
mov
fsubrs
test
fnstcw
pop
dec
mov
inc
lds
ss
hlt
adcl
test
fildl
pop
mov
xchg
fcoml
leave
ret
aas
mov
inc
xchg
inc
insl
loope
in
fidivrl
lods
mov
xchg
xor
mov
jne
pop
cmp
sbb
ret
fisttpl
dec
xor
fwait
xor
cli
jb
aaa
or
inc
adc
push
and
shll
loop
enter
jae
or
test
mov
mov
rcrb
sahf
adc
jge
cmp
in
or
int3
loop
fmull
lea
pushf
pop
gs
mov
cmp
out
cmp
out
loop
pop
dec
push
sub
pop
outsb
popf
inc
rcrb
clc
sub
or
je
call
out
xor
test
mov
mov
in
xor
mov
inc
pop
movsl
or
mov
js
push
pop
mov
call
fwait
mov
adc
in
cmpsl
push
mov
mov
sbb
dec
jb
pop
or
dec
mov
and
inc
movsb
mov
sti
popf
push
fstps
mov
sub
xchg
aas
xchg
shlb
xor
jp
mov
loopne
jbe
pop
test
das
inc
dec
int
xor
xchg
rol
inc
aad
jp
fsubrl
rorl
sub
and
sbb
xor
mov
pop
push
sub
xor
fmull
push
lahf
cmp
push
and
gs
pop
sbb
add
dec
xchg
dec
in
lcall
mov
rcr
and
mov
dec
lcall
pop
popf
movsl
xchg
or
push
int3
test
mov
mov
aad
into
test
mov
jmp
jbe
jp
roll
lods
and
ja
cs
sub
notl
inc
pop
popf
xor
loope
pop
jmp
sub
and
ljmp
orb
stos
shrl
test
fucom
mov
inc
sub
pop
mov
xchg
mul
aam
adc
push
dec
mov
andb
mov
sbb
xor
es
dec
mov
jne
lods
outsb
xchg
add
xchg
and
add
xchg
in
shlb
divl
int3
outsb
mov
inc
addr16
js
mov
mov
jle
aas
ret
ja
stc
mov
ljmp
pop
mov
xchg
rcll
int3
rcll
inc
les
int
inc
mov
push
adc
jno
or
and
loop
pop
xchg
mul
dec
fs
hlt
sub
adc
outsl
stc
loopne
adc
leave
scas
cmp
xor
cltd
mov
jl
loop
aam
push
cmp
sti
xchg
xchg
cmp
pop
aad
ss
cmp
in
adc
pop
mov
or
les
jle
cmp
fcoms
sub
adc
insl
push
jge
js
lock
out
sbb
dec
pop
push
push
fistpl
mov
xchg
mov
out
sub
imul
ret
div
scas
fldl2t
cltd
hlt
pop
and
cli
aaa
rcrl
mov
daa
dec
pusha
push
pop
push
push
pushf
jae
bound
movsl
dec
push
in
push
in
push
mov
fldcw
xlat
cmc
jp
ret
mov
add
imul
ljmp
pop
dec
in
sub
push
jle
or
outsl
pop
jns
ja
xchg
pop
jno
pop
push
push
lds
lods
xorl
sub
out
subb
pop
jmp
jns
lahf
or
imul
pop
xlat
push
aaa
call
sbb
testb
mov
cltd
mov
push
adc
or
or
push
jecxz
fistpll
cmpsb
lds
repnz
stos
sbb
dec
rcr
inc
lahf
loopne
ss
and
dec
add
xor
shlb
das
cltd
sbb
dec
pop
ret
cmp
and
stos
mov
scas
mov
xor
ret
jb
cltd
or
in
xchg
pop
arpl
iret
orps
jecxz
xor
push
adc
jp
inc
inc
adc
cmp
jae
rorb
jb
leave
js
int
and
xor
jl
xchg
jno
insl
add
sub
out
test
sub
push
mull
sub
jbe
or
aaa
cld
test
xor
jmp
add
mov
push
or
jmp
mov
pop
adc
outsb
imul
and
jp
jge
mov
scas
sub
dec
inc
les
loope
jmp
mov
push
or
or
lods
cmpsb
cltd
dec
lret
and
mov
mov
xchg
enter
int3
jnp
pop
adc
push
mov
and
xor
add
jp
nop
mov
iret
out
lret
sub
inc
stos
int
mov
fsubl
rorb
push
stos
or
testb
or
mov
jbe
lods
imul
xor
ss
add
sbb
insb
scas
insb
std
sti
sub
out
add
push
incl
xor
mov
arpl
loopne
and
jbe
sbbb
popa
rcll
stc
loope
sub
mov
xor
jle
repnz
mov
out
xchg
cmp
jge
adc
mov
dec
xchg
and
xchg
orl
jl
push
jge
rcr
fs
sbb
push
fldenv
insb
cmp
dec
mov
jmp
movsb
daa
movsl
and
mov
gs
imul
pushf
divb
nop
pop
push
pop
pusha
sbb
aas
sbb
lcall
add
arpl
inc
push
into
sub
ret
mov
iret
push
call
aam
sbb
lods
int3
adc
dec
mov
dec
inc
popf
mov
mov
insb
cld
xchg
movsl
inc
pop
sbb
xchg
jmp
adc
mov
and
out
lret
dec
pop
orl
mov
shlb
mov
jl
imul
fbstp
mov
fs
lret
lret
int3
adc
inc
hlt
sub
stos
inc
sub
sti
cwtl
xchg
dec
fisttpl
jecxz
add
sbbb
pop
mov
mov
lea
idivl
lods
pop
into
gs
inc
mov
outsl
and
fimuls
inc
cmc
test
cld
es
inc
jb
out
js
leave
push
stos
or
sti
sbb
popa
jg
cmpsb
std
lods
test
insb
gs
pushl
mov
add
jmp
addl
add
mov
sti
aas
adc
sub
out
fstpl
xchg
xlat
adcb
jmp
lds
push
adc
sbb
je
cltd
mov
cli
data16
mov
sti
shll
pop
and
adc
dec
test
add
notl
or
sbb
pop
push
popf
xorb
gs
xor
add
nop
add
mov
xchg
mov
xchg
dec
and
sub
xor
iret
jecxz
pop
adc
mov
sti
add
scas
enter
int3
push
test
rorl
movq
clflush
push
cld
mov
loopne
cmpsl
add
in
call
sub
xorl
cmc
int3
add
ret
int3
cmp
inc
add
cmpsl
ljmp
and
xchg
mov
incb
fs
cmp
lret
xchg
sahf
add
repnz
pop
sbbb
aam
cmpl
add
in
movsb
into
and
or
xor
mov
xchg
call
icebp
sub
out
mov
pop
inc
or
sub
xor
decl
fwait
fs
das
sbb
push
cmp
lret
jle
and
sub
ljmp
xlat
dec
loopne
sahf
push
xor
xor
icebp
loop
loope
cmp
dec
lea
int
mov
outsl
jle
xchg
pop
popf
outsb
and
mov
push
mov
sbb
dec
repnz
cmp
xchg
mov
inc
sbb
in
xor
insl
cli
es
frstpm(287
rorb
shl
lahf
fwait
sti
push
shr
popf
push
inc
outsl
adc
push
xchg
pop
xchg
pushl
testb
pop
das
mov
test
xchg
dec
mov
push
pop
pop
ja
aam
iret
and
negl
inc
sbb
test
dec
pop
xor
fimuls
mov
xlat
cwtl
psrlq
dec
or
adc
mov
inc
ds
nop
aaa
mov
fsubrl
cltd
sarl
in
mov
xor
fwait
lds
sarb
and
sbb
das
lods
int3
lea
mov
or
lea
xlat
sub
bound
mov
push
jae
sarl
inc
inc
xchg
mov
pop
inc
add
inc
and
xor
sub
cli
popf
mov
ljmp
xlat
insb
cli
jp
call
movsl
in
adc
jbe
mov
mov
add
jo
sahf
lods
popf
sbb
add
sbb
and
adc
out
pop
jle
pushf
rcrl
add
test
add
rsqrtps
sbb
sub
jo
cmp
pop
mov
push
mov
pushf
andl
sbb
jp
and
mov
add
xchg
and
sahf
fs
pop
or
fwait
lret
jecxz
pop
jge
pop
out
dec
pop
sbb
js
cs
stos
dec
test
jg
dec
adc
rol
rcll
ja
sub
cltd
xor
aaa
xor
jl
jmp
popa
dec
mov
inc
in
dec
and
addr16
and
rcrb
inc
into
repz
sbb
xor
jno
cmp
pop
dec
cmp
out
xor
xchg
cmpsl
xchg
pop
mov
es
jle
stc
and
arpl
sub
test
shrb
rcrb
sbb
xchg
jecxz
add
lods
cmpsl
shrb
mov
test
cmpsl
sbb
sbb
dec
movsl
cltd
out
pop
mov
sub
fnstsw
fidivs
xor
sub
xchg
xor
mov
ja
jb
inc
leave
push
xchg
fsub
mov
pop
adc
mov
test
gs
ret
divl
loopne
xlat
jl
cmp
subl
xchg
mov
or
ds
mov
rorl
call
cmpl
int3
push
jns,pt
fwait
mov
jns
lret
clc
jno
adc
sbb
test
xor
loop
inc
mov
cmp
and
or
xor
mov
xor
jg
inc
cmpsb
sbbb
push
dec
sti
test
ss
lods
movsl
test
adc
in
out
mov
push
sub
mov
pop
aad
jne
mov
sub
adc
fabs
jmp
mov
or
lcall
jnp
xor
pop
xor
cmp
or
mov
xor
popa
mov
into
lahf
or
in
sbb
add
add
cmpsb
mov
je
sti
into
cld
sbb
and
mov
bound
scas
cmp
sbb
pop
fs
cmc
test
iret
xor
jb
adc
stos
jg
mov
icebp
scas
lret
repnz
jne
fwait
xchg
fld
mov
jp
push
add
mov
add
adc
add
sbb
mov
iret
fstps
sub
sbb
imull
xorl
rol
shrl
jnp
mov
sbb
mov
lahf
lcall
lock
aam
add
sbb
xor
dec
fwait
lcall
imul
cmp
xlat
lock
mov
sbb
outsl
repz
mov
xchg
cmp
add
imul
dec
cmc
jae
mov
loopne
movl
mov
shll
xchg
xchg
outsb
add
fidivrl
test
imul
inc
inc
cmc
push
in
push
fisttps
inc
addl
lods
scas
lea
mov
pop
mov
mov
les
rol
dec
insl
inc
fwait
lret
add
ss
fxam
or
jp
and
push
adc
icebp
xchg
filds
ret
scas
scas
cmpsb
sub
test
fildl
xchg
loopne
xchg
mov
std
inc
and
sub
push
mov
loope
xor
push
ds
jg
das
test
fs
fisubrs
popfw
jno
fiaddl
leave
test
xchg
sub
xchg
fs
scas
cmp
repz
imulb
cltd
leave
lahf
je
and
xchg
pop
sahf
int
insl
aaa
mov
movsl
push
les
hlt
jecxz
cmc
or
mov
push
mov
test
or
jae
in
sub
cmp
cwtl
pop
push
ja
cwtl
or
or
add
lret
test
jnp
xchg
xchg
xchg
cmp
add
punpckhbw
test
push
jecxz
stc
or
lock
out
lahf
pop
jmp
dec
imul
sbb
inc
ss
sbb
and
jmp
ljmp
enter
aaa
hlt
mov
std
push
xchg
xchg
adc
mov
mov
clc
es
cmpsb
sbb
sbbb
cmpsl
push
pop
add
fsubrs
nop
jbe
xchg
pop
jle
subb
pop
jb
mov
jno
xor
adc
cmp
out
mov
sbb
inc
and
nop
push
jnp
lret
sub
hlt
dec
outsb
push
xchg
pop
push
mov
outsb
jb
push
adc
jb
adc
leave
adc
repz
xor
stos
mov
lods
lods
xchg
jo
mov
shl
push
or
out
inc
hlt
ja
adc
jmp
cld
jge
sbb
inc
push
lock
dec
fs
imul
enter
ret
push
int3
icebp
test
hlt
inc
cmpsl
push
outsl
mov
and
arpl
xlat
jl
mov
fisubs
pushf
aaa
mov
hlt
adc
enter
or
test
mov
push
popf
mov
xchg
dec
test
aas
imul
fists
mov
mov
test
cli
pop
sbb
add
and
jbe
jno
aad
lods
jbe
pusha
push
or
insb
or
cld
push
jns
dec
rorl
dec
and
push
paddq
push
add
sub
or
push
inc
adc
shlb
rcll
aam
pop
jbe
ror
xchg
lret
shlb
aas
sbb
shrl
out
or
add
out
lcall
adc
jecxz
push
ret
xchg
xchg
sbb
cwtl
push
stos
jge
imul
mov
out
cmovno
mov
addr16
add
dec
shll
je
mov
and
test
and
inc
mov
or
fdivl
add
pop
hlt
lods
cmp
lods
cmp
mov
push
inc
inc
dec
test
aas
or
xor
mov
dec
jo
fs
testl
sti
pop
mov
cli
xor
mov
dec
sti
mov
outsl
lock
adc
add
or
sbb
pop
cmp
jmp
push
or
pop
adc
jle
aad
popf
aam
es
fimuls
jg
mov
mov
sub
pop
shrd
aad
xchg
nop
add
and
mov
mov
jecxz
sub
dec
movsb
push
sbb
push
add
int3
push
stos
mov
shll
sub
adcl
out
pop
cmp
call
divb
popa
lods
pushl
adc
mov
adc
mov
adc
stos
into
adc
mov
adc
mov
popa
pop
mov
mov
xchg
cmpsb
lods
or
mov
pop
lds
mov
std
inc
sbbb
shl
imul
mov
sbb
in
push
dec
jb
test
pop
jp
push
mov
cmp
nop
mov
dec
adc
mov
movsb
sti
cmpsb
jmp
ja
cmp
aam
dec
sub
push
inc
in
popa
fwait
xchg
cwtl
stos
cli
cmp
out
pop
ljmp
sbb
pop
test
pop
sbb
jg
test
rclb
ss
and
mov
mov
loope
mov
or
and
test
adc
fldcw
nop
nop
sahf
mov
jbe
imul
out
ja
xor
push
sbbl
ds
sahf
xchg
sbb
sbb
jecxz
pop
jb
xchg
daa
leave
lea
cmp
mov
in
xchg
xchg
or
sbb
loope
mov
cmpb
popa
subb
in
pop
pushf
xlat
sub
jle
push
lret
je
push
aam
cmpsl
cli
mov
jg
test
shrl
or
imul
data16
das
cmp
mov
int
xchg
pop
inc
cmp
pop
je
lods
pop
cmc
sti
das
push
push
push
push
mov
mov
daa
adc
ret
xchg
cmp
dec
jle
add
sidtl
scas
out
inc
jecxz
mov
iret
mov
cmp
sbb
inc
sub
xchg
pop
mov
cli
fdivs
les
test
lock
or
incb
xor
mov
dec
pop
xor
add
adc
in
pop
ds
aas
mov
jp
adc
mov
in
pop
or
out
orb
les
nop
fldlg2
sub
imul
flds
cmp
xchg
out
hlt
push
icebp
in
negl
and
lahf
clc
mov
adc
mov
arpl
inc
lcall
cmpsb
xchg
sti
gs
outsl
ss
jne
mov
sub
push
sub
push
adc
sbb
and
dec
jns
loopne
add
sbb
dec
cmp
dec
aas
rclb
inc
dec
lret
jp
inc
aad
inc
sub
sub
sbb
add
divb
jmp
arpl
mov
mov
inc
jp
pop
or
dec
lret
sbb
sbb
ret
jnp
sti
jns
outsl
push
jno
icebp
mov
outsl
jp
pop
pushf
mov
push
push
adc
lret
sub
loopne
sub
xchg
repnz
lods
sbb
dec
adcb
fsts
movsl
js
imul
daa
shl
clc
cmc
vpavgw
outsl
testl
push
in
or
cwtl
rorb
sbbb
cltd
or
aas
jbe
push
loope
std
cmp
sub
sahf
aam
ja
pop
pop
xor
mov
adc
cmpsl
push
xchg
ds
pop
fnstcw
sbb
imul
mov
test
push
sub
sbb
mov
dec
inc
xor
mov
fsubr
scas
shll
push
pushf
mov
mov
xchg
hlt
imul
xchg
add
dec
xchg
jecxz
out
loope
das
push
jmp
xchg
clc
push
cmp
inc
je
les
test
aaa
sahf
rcrb
idiv
sub
inc
sbb
out
rcrb
out
test
inc
mov
scas
inc
addr16
lret
mov
xchg
adc
fwait
cmp
cwtl
dec
inc
push
es
xchg
pop
mov
lret
mov
push
add
imul
or
xchg
sbb
incl
mov
adc
jno
lret
ja
lea
jbe
inc
ja
insb
sbb
shl
and
pushf
outsb
fcompl
or
ror
dec
aad
pop
or
aas
xchg
adc
repz
push
jb
add
aad
dec
push
pop
imul
call
lea
pop
jbe
fmull
into
pop
fwait
mov
test
lcall
adc
lds
and
fadds
lea
cld
or
hlt
sbb
push
mov
jno
mov
bound
test
arpl
std
sarb
aas
dec
fsubs
imul
insl
fcmovne
and
je
xchg
sarb
je
in
push
or
lcall
jl
fsts
fcmovne
das
push
jns
das
addr16
mov
and
test
sbb
sub
mov
das
pop
std
add
dec
and
lea
push
pop
es
sbb
sub
pop
flds
xchg
jbe
or
mov
int
ja
enter
and
adc
outsb
fldt
shlb
dec
cli
jp
cld
push
ret
test
pusha
mov
out
pop
xorl
inc
cmp
mov
test
loop
mov
pop
and
mov
inc
inc
sub
test
or
or
or
in
jo
es
sahf
mov
jge
mov
mov
jne
sbb
xor
mov
jl
add
add
flds
or
fnclex
rcrb
mov
push
push
sub
add
push
jge
mov
mov
cwtl
sbb
minps
push
and
nop
cs
and
iret
mov
fsubs
adc
mov
sti
setbe
imul
push
lfs
lods
sbb
inc
jecxz
stc
aaa
rcr
ja
sbb
jbe
das
jo
daa
mov
outsb
sub
push
sbb
jb
jns
push
push
pop
adc
ud2
pop
cli
sub
xor
add
hlt
jo
jne
push
nop
jge
in
and
inc
sbb
fisttps
adc
test
out
ror
mov
add
rclb
fiaddl
add
fwait
pop
scas
xorl
dec
cltd
int3
mov
rorb
cwtl
cmp
sbb
xchg
mov
inc
lods
dec
lds
sahf
aas
shrb
adc
add
pop
jle
out
push
dec
jle
insb
push
dec
cli
cmpsb
add
iret
faddl
imulb
adc
add
xor
xchg
lds
adc
addr16
inc
js,pt
insl
push
and
clc
fdivs
pop
mov
lcall
or
cli
fdivl
lods
fdivrs
xor
mov
inc
push
repnz
data16
mov
ret
sbb
sub
push
imul
scas
mov
aam
fwait
xchg
jmp
or
int3
sub
xor
and
or
jge
dec
inc
mov
loope
loop,pt
mov
mov
jle
insb
xor
jno
fimuls
stc
mov
adc
sbb
lods
sbb
popf
fldpi
in
cmpsl
xor
mov
outsb
rcrl
cmp
inc
test
fidivrs
adc
mov
add
aaa
lahf
scas
leave
add
popf
pushf
adc
mov
in
jl
shrl
aaa
dec
sub
add
rclb
sbb
add
sbb
data16
aad
std
sub
cmp
cmp
add
add
inc
shl
pop
dec
mov
adc
xchg
and
and
ficomps
dec
mov
leave
idivb
arpl
jae
and
aam
stc
fisttpl
and
lds
mov
push
cwtl
int
mov
jne
bound
out
push
je
mov
or
aaa
cwtl
mov
in
or
push
iret
sar
mov
test
mov
adcl
out
push
insb
scas
ret
lret
leave
cmc
cmpsl
pop
adc
mov
push
add
mov
pushf
movsb
pop
mov
lahf
clc
cmp
fwait
pop
sub
jbe
int
jb
outsl
adc
data16
aam
fistps
loop
lock
xor
xor
add
leave
mov
repnz
mov
shrb
pop
mov
cmp
shlb
js
out
add
jecxz
in
mov
jmp
ja
inc
sti
sti
in
mov
insb
test
nop
call
sbb
cmp
icebp
sbb
xor
add
icebp
jmp
pop
sub
enter
and
mov
sbb
frstor
std
or
pop
dec
and
shrw
and
imul
sbb
mov
dec
loop
xor
sub
mov
in
sub
sti
enter
dec
push
arpl
xchg
push
scas
mov
mov
idivb
dec
jbe
les
push
cmpb
mov
pop
fmul
push
cwtl
sub
mov
mov
test
out
je
mov
outsl
sub
add
in
mov
xchg
fldenv
cs
mov
cmp
adc
mov
mov
dec
aaa
pop
sub
push
or
and
orb
clc
fildl
or
mov
je
adc
mov
int3
sbb
lahf
mov
mov
cmp
sahf
leave
pop
and
push
out
mov
jp
arpl
jne
jg
shlb
mov
xchg
cmpsl
push
mov
out
popf
loopne
mov
lods
sub
cmp
mov
push
sbb
push
mov
int
cmp
add
nop
test
sbb
clc
clc
in
pusha
lock
mov
inc
lahf
fs
out
sbb
fs
sbb
mov
push
cli
lea
lods
xor
loopne
je
daa
mov
rcrb
add
aas
repnz
and
xchg
je
daa
push
push
push
int
inc
loopne
sbb
pop
ffreep
jle
mov
enter
jmp
pop
mov
mov
ret
xor
pop
out
sarb
and
or
rol
jge
dec
test
mov
test
adc
enter
iret
mov
shlb
out
xor
loope
mov
adcb
insl
rorl
mov
scas
leave
clc
mov
mov
cmp
pop
out
pop
rorb
out
add
aam
cmp
inc
add
lds
sub
out
xor
and
shll
dec
and
cmc
loop
fcomps
rclb
sub
lcall
sti
incb
movb
adc
cmp
aam
push
add
loopne
movsb
mov
mov
outsb
addb
int
xor
fnstcw
out
cmc
cmc
ret
clc
sub
ljmp
lret
aaa
int3
jne
pop
aaa
aas
sbb
call
add
cmp
cltd
dec
mov
das
xchg
jb
test
jmp
add
and
stc
pop
sub
inc
shll
cmp
std
sbb
jl
jmp
cmp
xchg
sub
cmp
cmp
andl
lcall
add
push
push
inc
inc
cld
inc
std
cmpsb
or
push
xor
mov
mov
out
jne
rorl
scas
lret
stos
cmc
out
repz
add
scas
add
stc
cmp
or
stos
mov
repnz
and
and
test
jo
adc
mov
gs
xchg
mov
lds
pop
test
jg
adc
mov
movsb
shrl
mov
push
push
fisttps
shrb
dec
imul
aas
pop
inc
insb
cmp
xor
add
pop
lahf
lcall
out
ja
int
sub
add
lret
sbb
xor
cwtl
loop
or
push
adc
popf
sbb
sub
lcall
out
cmp
fstl
bound
jns
imul
nop
rclb
mov
scas
dec
in
mov
inc
adc
ficoml
es
popa
decb
mov
cmp
jecxz
lods
jae
mov
push
loop
nop
mov
test
aaa
cli
adc
sbb
fcoml
or
dec
adc
push
in
mov
filds
xor
out
pop
mov
mov
inc
dec
mov
cmp
lcall
or
add
out
lock
cmp
cmpb
mov
cmpsl
mov
xor
add
inc
bound
daa
icebp
test
nopl
xor
out
jno
pusha
pop
or
mov
and
test
cmp
add
push
in
clc
lock
arpl
or
jnp
lock
sbb
aad
push
flds
xchg
in
dec
cmp
jbe
or
sahf
cmp
das
addr16
test
movsl
pop
lds
xor
mov
int3
dec
xor
jmp
cwtl
je
lret
jae
aas
mov
and
xor
rcr
push
nop
push
cmpsl
lods
sbb
and
adc
mov
and
cli
sbb
add
mov
fmull
inc
fnsave
mov
and
cltd
adc
xchg
lret
popa
stc
stos
mov
push
adc
xchg
sbb
sub
cmp
sbb
ljmp
out
cmp
test
aaa
xchg
and
adc
loope
sbb
aam
pop
outsb
sbb
jns
and
mov
xlat
stc
wbinvd
out
mov
xchg
pop
add
cmc
xorl
mov
ds
insl
add
mov
mov
cli
dec
aas
movsl
sub
mov
xchg
fwait
push
lahf
inc
adc
cmp
stc
std
out
pop
out
mov
push
loop
lcall
in
loopne
xchg
inc
hlt
cld
push
fucomp
push
lods
or
aam
test
pop
push
jg
into
fs
mov
dec
js
xor
cs
or
xlat
inc
cmpsb
push
mov
ffreep
les
out
scas
xchg
test
xor
gs
es
and
sbb
mov
outsb
sarb
pop
dec
add
loope
pop
dec
jo
pusha
mov
daa
addr16
cmp
popf
mov
negl
dec
push
xchg
mov
sbb
into
roll
cmc
lods
fldt
sub
ja
push
sarl
add
dec
cmc
jle,pt
xchg
mov
out
ret
mov
pop
popa
pushf
adc
mov
mov
push
lahf
and
loop
jmp
xor
mov
psubq
lds
dec
out
xchg
in
addr16
lret
in
loopne
imul
or
dec
scas
add
or
or
nop
and
dec
stc
mov
mov
cld
rcrl
daa
cmp
loop
dec
mov
and
cmc
sbb
out
cmp
adc
pusha
int3
adc
stos
sbbl
add
and
adc
mov
in
sub
cmpsb
aad
ja
shrb
xchg
and
or
and
stc
or
stos
jo
pop
rcrb
cmp
push
and
scas
pop
adc
push
cmpsl
ds
push
inc
lods
sarb
inc
cltd
aam
iret
in
pop
sbbl
bnd
bound
into
fstpt
out
lcall
push
xchg
xchg
inc
and
inc
mov
in
jmp
iret
xchg
fcomp
roll
pusha
jle
and
and
pop
aaa
inc
mov
sbb
mov
fstps
mov
es
mov
jbe
repz
sub
imul
daa
mov
mov
call
mov
iret
dec
sahf
cmpsl
daa
inc
xor
inc
je
fstpt
mov
and
test
jp
jmp
cmp
clc
decl
jle
ror
xchg
mov
xchg
xchg
inc
or
outsl
mov
stc
or
or
mov
std
test
add
aaa
lods
cmc
call
lods
loope
pusha
and
test
dec
mov
mov
aaa
roll
inc
out
mov
lods
cs
mov
mov
rolb
mov
jmp
xchg
or
xchg
mov
ja
lods
inc
inc
rorl
ss
push
mov
ret
adcb
ret
ss
mov
fs
and
rolb
dec
push
jno
adc
jp,pt
adc
xor
popa
ss
push
pop
xchg
jns
adcb
decl
adc
mov
adc
xchg
inc
push
pop
dec
sbb
paddd
xchg
sbb
inc
jno
lods
jp
loop
dec
test
shr
rorb
outsl
adc
fdivrl
hlt
jno
adc
lret
popf
int
mov
popl
popa
sub
xchg
dec
sub
cmpsl
stos
xor
cmc
mov
fldcw
jae
loop
inc
js
inc
in
adc
insb
arpl
lahf
jl
cmovl
and
cmp
mov
aaa
pop
jae
mov
int
ret
cmp
insb
pop
sub
sbb
or
enter
and
nop
push
ret
in
or
gs
or
fwait
outsl
push
repz
in
sahf
jo
shll
ljmp
add
sub
cli
in
pop
add
outsl
loopne
sub
xchg
pop
xor
add
call
cmp
pop
sub
es
sub
xchg
aas
mov
sub
or
xchg
mov
push
scas
jg
add
or
les
inc
in
scas
and
cmp
xor
fcoms
addr16
in
jns
shlb
les
fidivs
jo
sbb
mov
negl
pop
jle
aam
cmp
fwait
adc
jbe
stos
add
sbb
add
inc
stos
mov
add
testl
xorb
lcall
cmp
mov
inc
out
add
xchg
lds
pushf
ss
sub
or
gs
xlat
aaa
cmp
cs
cmp
in
jp
cmpsl
cmp
add
pushf
out
je
aaa
dec
pop
or
mov
bound
lret
xchg
ficompl
jns
cmp
stc
inc
jnp
int3
mov
xchg
push
fdivl
xchg
mov
pop
dec
in
mov
sbb
xor
jae
out
pop
sbb
aam
cmp
adc
and
jno
mov
lcall
out
clc
fdivs
mov
lods
orl
ret
jl
xor
jae
inc
pop
dec
mov
mov
adc
fisttpll
jo
xchg
movsb
xor
inc
cmc
jbe
icebp
addb
push
imul
int3
mov
cmpsl
xor
pop
mov
sbb
xchg
int
dec
mov
jne
popf
popa
outsb
or
jno
push
mov
jp
xchg
fistps
incb
xchg
div
testl
fildl
ds
imul
pusha
sbb
mov
js
nop
xchg
mov
gs
jne
mov
xor
lock
xchg
dec
inc
in
adc
jbe
scas
jle
fwait
dec
nop
adc
repz
loopne
testl
scas
and
enter
mov
out
jno
dec
nop
in
jne
add
xor
jp
enter
push
aas
jno
xchg
fldenv
inc
repnz
inc
ds
jecxz
xor
dec
repz
fnstsw
add
push
xor
inc
jno
mov
adc
call
jp
dec
adc
mov
push
and
pop
xlat
xchg
and
xchg
nop
aad
push
das
daa
add
inc
add
fistpl
enter
jae
pop
es
subb
daa
push
and
push
mov
adc
push
mov
mov
jb
stc
aam
popf
add
jle
adc
jbe
pandn
sub
lcall
jecxz
xorps
mov
fcmove
sub
mov
mov
jle
into
test
in
lods
out
mov
xchg
neg
cmp
in
test
pop
popa
test
insl
add
dec
jno
pop
mov
xlat
sub
fnstsw
enter
and
sub
mov
dec
sbb
int
push
fldt
xchg
pushf
and
fidivl
lock
sbb
iret
dec
out
xor
mov
leave
popa
enter
popf
pop
movsb
stos
jno
clc
or
mov
je
jae
out
inc
testb
xorb
test
lock
mov
cmp
inc
inc
incl
push
push
mov
inc
in
cwtl
jae
xchg
xchg
xor
dec
xchg
pusha
ds
or
movsl
inc
insl
add
mov
dec
sub
xchg
call
add
out
mull
pop
jno
and
fnstenv
inc
adcl
mov
sbb
es
or
jge
rorb
fs
cmp
cs
loope
fdivrl
lock
outsb
or
repz
push
mov
in
sub
test
lret
inc
das
and
xchg
push
jecxz
stc
mov
add
pop
daa
dec
inc
bound
jg
adc
add
cs
sbb
aam
push
inc
mov
subb
fsubl
inc
lret
rcrb
and
xor
adc
mov
sub
addr16
cltd
mov
xchg
jl
imul
loop
call
mov
pop
and
icebp
xchg
mov
mov
or
sub
pop
fs
add
aas
dec
inc
mov
sub
jnp
sbb
mov
push
aam
mov
inc
mov
adc
add
mov
jg
add
xor
enter
sub
mov
in
negl
fstps
lods
push
sbb
pushf
mov
add
arpl
imul
sbbb
mov
mov
mov
or
push
aas
enter
orb
mov
sub
push
fstl
xlat
mov
stc
hlt
cmpsl
add
ss
cwtl
jmp
jge
xor
ret
pop
sub
mov
inc
mov
sbb
xchg
shrl
dec
scas
repz
orl
push
loope
adc
cmp
mov
repnz
icebp
xor
fistl
out
aad
jbe
xchg
pop
dec
pop
test
cmp
pusha
in
ficoml
mov
rcrl
divl
fcomip
ljmp
pop
ds
stos
sub
shl
imul
ret
mov
mov
scas
add
sbb
xchg
xrelease
and
or
rcrl
sbb
clc
cltd
shr
std
imul
or
shlb
psrad
into
xorps
push
gs
mov
inc
int3
jmp
lods
inc
dec
sub
inc
adc
rcrl
dec
lahf
in
movsb
xchg
pushf
decb
aad
mov
data16
jmp
pop
push
push
cld
in
pop
ret
xchg
lcall
fidivl
push
into
mov
outsl
test
scas
sbb
mov
mov
mov
adc
shlb
adc
daa
and
xor
xlat
mov
dec
leave
fnstcw
xlat
push
rcrb
and
test
std
dec
fcoml
dec
inc
aas
sub
push
jg
or
xor
dec
push
or
iret
enter
jno
xor
xlat
lods
xchg
std
and
loop
jno
iret
fsubp
repnz
test
ret
sub
loop
jbe
addr16
ret
testb
cmpsb
imul
mov
add
cmc
mov
lea
cmc
add
pop
mov
mov
lcall
push
add
cmp
jp
je
xchg
ss
mov
lcall
daa
push
jmp
and
push
dec
cmc
or
mov
shlb
lods
pop
xor
nop
fldt
mov
popa
push
cmpsb
pop
mov
pop
xor
std
pop
push
mov
imul
mov
or
xchg
and
pop
inc
mov
imul
hlt
rcr
mov
jge
in
cmp
sarb
lret
dec
outsl
push
enter
fldt
data16
movsl
cwtl
pushf
adc
push
sub
js
rcrl
enter
out
pop
stos
pushf
sub
push
fwait
push
sub
enter
fstpl
add
scas
sbb
daa
mov
out
push
popa
outsb
adc
mov
rolb
mov
into
dec
ret
inc
xor
or
push
dec
mov
inc
push
mov
add
lods
clc
aas
das
adc
push
movsl
or
mov
sbb
or
test
xor
ljmp
xlat
cmp
inc
jg
mov
mov
pop
and
jecxz
rolb
cmpsb
scas
aam
xchg
divl
jecxz
mov
xchg
cli
pop
cld
fdiv
sbb
insl
jno
mov
inc
mov
orl
lea
in
cmp
aad
ljmp
fidivrs
jae
mov
or
and
pop
and
pop
mov
xor
gs
repnz
adc
sbb
mov
dec
and
push
aam
cmp
imul
cmp
mov
movsb
imul
jmp
inc
mov
fidivrl
add
pop
popa
jne
mov
mov
xchg
and
sub
pop
xor
into
sub
or
repnz
in
jo
loope
dec
test
pushf
jns
imul
xchg
in
int
push
dec
cmpsb
addl
scas
shlb
ret
xor
test
outsl
sti
js
and
adc
aaa
mov
xor
in
mov
add
adc
cwtl
movsb
sub
ror
mov
mulb
mov
test
movsb
xor
xchg
gs
imul
arpl
mov
es
int
inc
lock
pop
jmp
cmc
sbb
pusha
mov
cli
push
int3
movsl
dec
pop
xor
pop
fidivrs
push
cli
pusha
add
dec
jecxz
xor
mov
sbb
pop
cmpsl
data16
xlat
sbb
iret
je
imul
and
pop
fadds
fdivrl
pushf
imul
mov
or
lods
fsubrs
fidivrs
pop
dec
mov
dec
out
outsb
push
mov
or
and
sub
mov
dec
lds
out
mov
rcll
dec
les
clc
mov
ficoml
stos
repz
pop
adc
call
xchg
imul
xchg
cmpsb
gs
stc
xchg
mov
push
mov
push
pop
es
and
sub
adc
xlat
xor
fs
adc
adc
push
loop
rcr
push
shrb
je
lret
jne
pop
iret
ret
push
jbe
mov
aaa
fisubrs
jae
push
cmp
xchg
push
outsl
movsb
xor
push
fisubrs
pushf
fldt
out
and
mov
xchg
movsb
mov
cmp
mov
mov
sbb
gs
ficomps
dec
idivb
pop
xchg
repnz
push
dec
push
popf
sbb
dec
xor
xchg
fwait
mov
xchg
or
cmp
mov
sub
sbb
mov
lock
cwtl
cmpsl
dec
cmp
inc
scas
loope
xchg
stos
push
jbe
cmp
mov
jmp
out
dec
xchg
ret
les
pop
fldt
scas
loope
cmp
outsl
ret
push
inc
and
pop
xchg
hlt
inc
out
xor
stos
cmpsl
or
out
out
loop
imul
xchg
cmp
lea
pop
sbb
jl
ret
cmp
pop
je
pusha
or
into
jp
pop
in
sbb
aaa
pop
push
pop
into
out
mov
dec
stos
and
cmp
nop
and
push
iret
add
idivl
notl
repz
cmc
das
or
nop
in
mov
mov
pop
push
add
add
imulb
push
mov
out
inc
cmp
sbb
cmp
fs
pop
imul
inc
repnz
mov
adc
add
leave
xorb
mov
mov
leave
fwait
mov
pop
xlat
xor
jecxz
les
jno
out
sub
xor
cmpsl
push
popf
in
aas
clc
pop
out
pop
ja
stc
or
sbb
rcr
sub
imull
push
cli
aas
cmpsl
sub
jae
lret
add
fists
clc
fistpl
push
add
es
out
js
jmp
pop
inc
sub
mov
inc
push
mov
pop
cltd
or
mov
pop
sub
iret
cmp
sub
xlat
push
push
sub
fldenv
jo
in
jg
sub
addr16
loopne
sahf
fucomp
pop
imul
jmp
mov
add
mov
pop
fdivs
test
and
pusha
cmp
mov
push
cltd
faddl
lock
push
fs
jae
push
inc
adc
jp
lods
popf
xchg
jl
pop
call
loopne
mov
mov
or
push
lahf
insb
dec
decl
hlt
repnz
mov
cmpsb
sub
lods
das
xor
cmp
push
lds
or
xchg
loope
addb
inc
das
push
out
cs
orl
pop
ljmp
inc
mov
leave
mov
gs
aam
mov
add
adcb
xor
or
push
mov
lret
lock
mov
mov
cltd
push
lahf
test
movsb
popa
mov
enter
out
xor
movsl
inc
add
pop
push
mov
std
xor
mov
gs
outsb
xlat
repnz
mov
sub
mov
orb
daa
repnz
je
out
add
mov
push
sub
aam
fldl
and
das
jb
cwtl
arpl
loope
dec
pop
std
ret
ret
or
repz
jp
stos
ret
rclb
jecxz
rcrl
xor
icebp
xor
mov
fucomp
jne
cmp
lds
popa
call
int
xchg
movsl
cwtl
lahf
sbb
jp
add
xor
rclb
push
movl
into
inc
inc
mov
scas
adc
sbb
jae
dec
pushf
lea
dec
sbb
nop
fwait
cmp
orb
push
push
jg
push
stos
or
mov
sti
insl
mov
jbe
xor
dec
orl
sbb
hlt
inc
xchg
int
dec
movd
scas
jmp
xchg
jmp
or
mov
add
mov
imul
inc
sub
push
push
sub
mov
test
movsl
cmc
xchg
jecxz
xlat
mov
xchg
sbb
test
sbb
cli
fdivr
jnp
push
lds
call
js
stos
inc
push
cwtl
loop
sahf
scas
and
xchg
mov
test
jp
test
pop
aam
pop
pop
nop
js
mov
in
cmpl
fs
enter
test
loop
jne
pop
cwtl
mov
xor
add
push
nop
in
fists
push
aam
sahf
cli
push
ja
pop
jno
data16
or
les
xor
data16
lahf
jns
fwait
push
push
dec
loop
scas
fcoml
jns
rolb
mov
push
push
dec
fbstp
xchg
lds
cld
adc
in
or
mull
test
stos
pop
jmp
loopne
lods
pop
pop
xor
pop
xchg
pop
push
loop
mov
in
jp
rcrb
adc
mov
mov
pop
mov
rcll
int
mov
mov
aad
or
stc
or
sub
and
xor
jnp
adc
hlt
ficoml
push
xor
mov
js
dec
inc
mov
pop
mov
adc
add
jb
test
cmp
les
imul
inc
ds
iret
mov
je
jle
sbb
push
subb
outsl
push
mov
ss
out
jns
aam
mov
xchg
cmp
mov
push
pop
add
cltd
cli
jno
not
sbb
xor
test
lcall
iret
ss
jle
je
insb
adc
cmpsb
mov
jge
loope
adc
xchg
xchg
and
hlt
cltd
fsubs
or
xchg
and
stos
mov
pop
jge
lahf
loopne
mov
push
cld
sbb
je
sub
jno,pn
lea
add
dec
jns
loopne
mov
xchg
mov
je
push
fwait
popf
shl
jno
dec
push
in
mov
test
pop
faddl
lds
sbb
mov
mov
push
dec
scas
xchg
arpl
cwtl
or
leave
sub
or
cli
mov
pop
inc
addr16
hlt
or
imul
mov
add
jecxz
xor
aad
lods
out
das
movsl
movsb
popf
cld
mov
out
out
add
adc
jl
xlat
fwait
int
push
ljmp
xor
mull
repz
das
cmp
jge
mov
out
and
stos
fwait
aas
stc
mov
add
lss
addl
fimuls
lret
cld
jl
popf
push
scas
lcall
push
pop
push
ret
push
insl
fwait
outsb
popa
imul
cmp
inc
push
cmp
jb
out
xchg
add
lret
loop
fidivrs
aam
push
outsb
sbb
inc
divb
push
rcrb
push
sub
das
cmp
and
mov
or
ret
push
call
and
or
fistps
pop
in
and
xchg
cwtl
dec
stc
mov
imulb
data16
adc
ret
loopne
push
adc
push
fdivrl
sbb
jbe
xchg
pop
sbb
mov
pop
pop
movsl
into
sahf
mov
and
and
bound
loopne
out
pop
testl
popa
rorl
ljmp
add
jo
lock
mov
lret
bnd
js
push
mov
jl
dec
fimuls
scas
pop
push
xchg
stos
aas
dec
dec
out
sbb
mov
sbb
repz
add
hlt
add
adc
push
cmp
jae
rcrl
jge
mov
and
jb
in
mov
cmp
std
jae
mov
push
popa
jecxz
mov
daa
hlt
and
lea
mov
inc
clc
mov
rorl
mov
test
shll
jnp
xchg
xor
push
sub
sti
or
aad
sbb
add
or
cs
and
xchg
pushf
jmp
movsl
cld
cmp
movsb
xorl
daa
fstl
mov
jnp
iret
cld
ds
xor
cmpsb
movsb
xchg
je
xchg
shll
scas
dec
daa
out
mov
outsb
icebp
fwait
scas
test
je
loop
adc
jbe
push
loop
gs
mov
test
sbb
lret
fstpt
stos
mov
and
rcrl
jnp
xchg
dec
jae
xor
jl
montmul
cmpsb
sbb
das
in
cmp
lods
jge
lods
xchg
cmpsl
out
cli
jo
scas
and
sub
or
mov
cltd
scas
or
and
pop
push
mov
cld
stos
ja
lret
ja
sbb
dec
adc
dec
pop
xchg
fstenv
inc
jg
and
hlt
or
dec
daa
outsb
int3
pushf
push
dec
test
jnp
adc
mov
ss
in
add
mov
jp
jae
mov
mov
sub
cmp
in
or
out
xor
lcall
bound
and
inc
push
pop
jo
dec
adc
movsb
daa
int3
pop
lock
mov
stc
mov
jl
es
xlat
sarb
dec
dec
dec
jmp
fisubrl
jg
cwtl
add
nop
add
imul
jno
push
imul
xor
or
rorl
jge
cmpsl
pop
pop
xlat
je
mov
imul
inc
push
sub
pop
lret
add
outsb
mov
std
dec
out
inc
repz
fwait
mov
cmc
popf
das
out
aas
outsb
lret
stos
add
xchg
cmp
fisttpl
sti
out
mov
or
imul
dec
sub
or
fwait
or
lock
and
insl
pop
add
add
and
mov
jo
pop
push
cwtl
rolb
outsb
out
adc
adc
inc
ffree
dec
aas
adc
in
mov
pop
sbb
iret
fs
mov
add
pushf
popa
xchg
pop
xor
fidivl
nop
sub
cmc
sbb
push
shll
ljmp
inc
and
sbb
imul
cmc
enter
or
lods
inc
push
xchg
stos
shll
or
pop
testb
orb
test
sbb
jns
pop
std
call
pop
into
xor
sahf
jae
imul
mov
sbb
movsb
adc
ret
or
imul
mov
dec
xchg
stos
hlt
mov
inc
pop
outsb
inc
pop
sbb
adc
xor
rcr
push
xchg
mov
and
xchg
repz
pop
scas
pop
mul
pop
pop
addr16
add
mov
add
mov
loope
jmp
mov
gs
dec
push
adc
sub
sti
xor
in
fistpl
pop
and
lods
push
adc
add
aaa
mov
and
or
push
xchg
inc
xchg
test
sub
pop
adc
sarb
pushf
daa
cmp
or
mov
xchg
mov
or
scas
mov
stc
das
aam
rcll
or
pop
ret
aad
in
pop
dec
scas
push
inc
cmovnp
push
enter
inc
mov
xor
dec
lock
mov
aas
mov
xchg
adc
adc
dec
xchg
mov
pop
sbb
dec
jbe
mov
sbb
cmc
pop
pop
push
mov
fnstenv
mov
and
loopne
jle
add
cmp
pop
or
cmpsb
sbb
hlt
xchg
hlt
hlt
cld
mov
pop
or
jecxz
repz
stos
mov
and
addr16
sbb
pop
fsubs
cmp
pop
fisubl
adc
pop
mov
fimull
aaa
inc
adc
push
jb
push
pop
push
push
sub
cmpl
fwait
cmc
stc
pusha
add
add
jp
cmp
js
scas
enter
bound
fildll
push
scas
xor
adc
lret
sub
insl
jo
ja
and
mov
movsl
fwait
jbe
xlat
imul
lret
pop
and
mov
or
jp
sub
xlat
mov
jnp
jns
test
cmp
iret
adc
sub
mov
sahf
mov
out
movsb
in
pop
mov
frstor
decl
jne
push
add
cmpsb
or
or
jne
data16
sub
stos
or
data16
push
pop
jae
jb
inc
popf
testb
pop
jns
mov
push
mov
xchg
in
fldl
jge
push
js
out
in
hlt
jecxz
lcall
dec
lret
jp
lods
bound
out
imul
addr16
in
imul
pushf
mov
fs
mulb
inc
sbb
repz
shlb
pop
pop
movsl
push
push
aas
pop
xor
fisubrs
scas
dec
pop
cmc
pop
sarl
sti
rcrb
adc
stos
and
or
pop
mov
jmp
enter
aas
stos
cmp
xlat
nop
mov
pop
roll
or
cmp
dec
int3
push
push
out
fdivrs
fbld
arpl
add
push
js
stos
xor
jl
or
ds
and
into
test
addb
mov
or
icebp
lods
je
xchg
sub
mov
mull
hlt
mov
jno
lock
mov
mov
add
decb
pop
mov
add
xchg
lea
dec
subb
mov
and
add
in
sbb
xchg
rorb
adc
verr
adc
leave
jecxz
lods
jle
push
mov
nop
inc
cwtl
cmp
int3
cs
dec
sahf
xor
xor
jbe
xchg
notl
in
notl
mov
mov
daa
sbb
push
decb
unpcklps
xor
push
mov
dec
push
dec
loopne
and
or
test
sbb
push
mov
sbb
pushf
sub
mov
mov
mov
push
xchg
popf
mulb
dec
stos
xor
sub
fsubs
in
pop
ror
test
addr16
nop
mov
add
push
xchg
sub
or
mov
mov
ss
and
scas
or
adc
dec
subl
movsb
out
adc
xchg
mov
mov
scas
clc
insl
sub
cmc
add
adc
dec
mov
pop
or
xchg
jo
xor
pop
lods
inc
adc
or
mov
pop
rclb
inc
pop
js
ja
and
push
fidivrl
push
pop
lcall
outsb
mov
lret
pop
test
lods
inc
call
cmp
jecxz
in
adc
insl
pop
call
test
cmp
sub
inc
sub
outsl
xchg
dec
lds
das
xor
cwtl
mov
pop
pop
push
popf
call
push
test
arpl
mov
inc
mov
pop
add
adcl
cmp
and
les
dec
out
xchg
popf
movsl
es
mov
jl
adc
add
mov
or
hlt
jg
ljmp
mov
jp
xlat
adc
inc
push
enter
pop
cmp
ret
lahf
cmp
test
sub
mov
sahf
xrelease
add
or
dec
sbb
test
outsl
in
pop
out
call
sbbb
stos
jle
add
or
jo
gs
pop
cld
lods
call
lcall
sub
aad
subl
sub
cmc
push
test
cld
std
mov
sahf
cmpsl
dec
lret
or
into
das
sbb
xor
jecxz
push
and
mov
add
mov
sub
lock
xor
and
and
push
js
push
or
xchg
pop
mov
mov
lret
fs
adc
cmc
hlt
mov
jle
gs
enter
mov
fcoms
mov
or
inc
ret
cld
push
sahf
outsb
push
icebp
call
daa
shlb
sbb
dec
add
xchg
sub
int
push
cmpsl
and
pop
loopne
dec
popf
mov
fsubl
jnp
shll
lret
aad
lahf
test
cmp
popa
cs
lods
push
stos
sbb
stos
fimull
push
jle
cmp
in
fildll
lods
lret
ret
jge
xlat
aaa
frstor
insl
decb
mov
adc
ret
rclb
popf
jge
mov
jmp
cmp
fwait
das
mov
fldl
dec
pop
stc
incl
xchg
mov
subb
adc
mov
dec
out
lds
out
push
xorb
lcall
cltd
arpl
inc
movsb
sub
cmp
mov
je
in
push
mov
arpl
or
jne
aas
mov
dec
int
inc
fsubrs
sbb
or
cmp
out
jb
push
popa
cmp
mov
aam
sub
fsubr
dec
out
inc
cmp
mov
inc
mov
sub
or
add
loop
addr16
imul
xchg
xchg
adc
xchg
adc
mov
cld
xchg
les
or
xchg
adcb
or
push
mov
out
lret
lods
xchg
mov
xor
ret
push
cmp
rol
pop
sbbl
pop
sub
push
aam
int3
add
jmp
push
lret
les
xchg
js
adc
fucom
lahf
and
mov
xor
pop
insl
int3
arpl
sbb
adc
iret
ret
mov
outsl
xchg
inc
test
into
dec
fisttpll
mov
hlt
in
push
jg
dec
aaa
and
sbb
scas
or
popf
or
popa
fisubrs
push
imul
sbb
rcll
addb
mov
std
fstl
jae
adc
xorb
xchg
in
adc
push
jnp
leave
mov
xor
push
mov
and
mov
push
add
or
sarb
push
adcl
scas
movsl
es
adc
push
ljmp
mov
mov
adc
stos
out
push
lods
mov
push
pop
pop
mov
stos
hlt
in
movsb
inc
or
repz
add
ss
adc
mov
inc
sub
sti
adc
mov
cli
repnz
add
fdivrl
push
dec
sbb
mov
mov
sbb
stos
inc
into
shlb
ja
push
add
cmp
fwait
test
repz
cmpsb
mov
int
test
fistps
xor
dec
imul
test
cmpsl
fimuls
lea
std
mov
adc
mov
inc
je
jo
jne
pop
jno
lcall
sbb
pop
fcoml
mov
inc
xchg
loop
push
movl
jnp
mov
mov
int
subb
or
jne
stos
inc
sarl
mov
mov
icebp
jb
or
test
jnp
push
xchg
sbb
bound
pop
pop
or
xor
scas
int3
adc
push
xchg
and
fwait
push
or
imul
imul
pop
imul
jle
push
imul
pop
lods
cli
mov
aad
aam
hlt
aaa
in
test
lods
pushf
pop
ret
push
mov
push
add
fcompl
mov
subb
inc
xchg
cmp
call
fsubrp
jo
jmp
mov
mov
push
loope
fstl
push
leave
xor
sahf
shlb
mov
rcrl
retw
mov
mov
xor
mov
roll
push
inc
jp
aad
or
ret
iret
je
scas
fsubr
sahf
cmp
fmull
addr16
cmp
adc
ret
xor
test
dec
fucomip
cmpsl
pop
jg
out
scas
jge
out
fildll
sub
cltd
xchg
icebp
jb
fwait
jecxz
adc
sbb
add
push
mov
sub
das
lea
or
shlb
fsubl
lret
add
dec
movb
pop
inc
cmp
and
xor
nop
fstpl
arpl
jmp
push
cld
push
cmp
mov
inc
pushf
mov
jp
lds
movsb
dec
test
fs
sbb
or
aam
xchg
in
mov
lock
imul
repz
adc
adc
mov
push
std
xor
loopne
xchg
sbb
xchg
aaa
fmuls
add
jmp
in
cmp
fcompl
cltd
sbb
jae
sbb
xchg
or
out
push
inc
push
std
jp
mov
jb
sub
sarl
das
sbb
mov
leave
push
sub
add
cltd
add
aad
or
cmp
pop
cwtl
sub
pop
dec
adcb
xor
and
rcll
push
cltd
loopne
mov
dec
jle
shrb
mov
cmpb
cltd
dec
mov
mov
pop
ja
lds
push
push
pop
roll
cltd
pop
lcall
push
jge
rcrb
aam
loopne
jg
cmp
sbbb
push
or
ja
fidivs
dec
inc
pop
jae
pusha
jle
jae
sbb
jbe
int3
sbb
mov
jge
sarl
mov
les
sub
jge
gs
incb
clc
xchg
or
push
shl
lds
sbb
dec
mov
cmp
jmp
push
addl
push
cmpsl
xchg
cmp
inc
cmp
aaa
ja
push
dec
xor
jbe
imul
lret
in
xor
jo
addb
inc
js
sub
xor
outsb
dec
ror
les
adc
push
xor
jo
and
pusha
mov
pop
xchg
movsl
repz
push
int
cli
or
push
cmpsl
and
push
and
in
xor
cmp
xor
mov
das
stc
mov
mov
dec
inc
xor
mov
mov
sbb
dec
pop
mov
adcb
negb
sahf
push
sbb
in
call
push
inc
imul
or
jle
fldl
pop
ret
add
rcrb
stc
int
mov
xor
stos
pop
jl
rorb
jmp
ja
xlat
ret
push
lock
push
test
sub
sub
sahf
rorb
dec
outsb
adc
or
sub
mov
bound
rcrl
add
pop
lret
mov
movsb
jne
cli
stos
mov
adc
imul
ret
ret
dec
ret
int3
push
jmp
dec
cmp
or
outsb
and
popf
mov
push
les
cs
push
repz
scas
or
pop
hlt
pop
sbb
shll
lock
mov
fwait
jge
pop
jmp
xchg
dec
adc
loop
or
out
mov
mov
rcrb
pusha
cmp
push
dec
orb
repnz
jns
mov
cmp
es
sub
fdivrp
cld
jb
aad
ljmp
jbe
mov
pop
cmp
out
rcrl
clc
mov
mov
lret
mov
loopne
arpl
push
data16
jne
push
pop
mov
or
fidivrl
pushf
rep
dec
push
inc
es
adc
or
cmpsb
fcomps
popa
pop
in
into
push
lock
or
cmc
cwtl
cltd
cmp
pop
pop
fcmovu
psadbw
imul
jle
inc
jmp
mov
in
add
pushf
or
add
cli
test
dec
sub
sub
call
test
mov
sbb
aas
cltd
mov
js
mov
cmp
mov
lret
xchg
cmp
or
aam
or
push
inc
xor
mov
adc
sbb
outsb
cmp
sub
loop
pop
pushf
fbld
es
mov
inc
inc
cmp
xchg
pusha
adc
je
inc
sub
cmp
bound
cltd
mov
sti
int3
jno
jnp
push
shrb
pop
addr16
inc
fldcw
cltd
out
int3
mov
bound
into
push
pop
pop
pop
push
pop
add
aas
mov
jecxz
dec
or
cmc
out
pop
out
dec
dec
jbe
mov
inc
loopne
jp
aas
cmp
inc
imul
test
ds
jl
dec
push
dec
lea
and
iret
cli
daa
pop
or
jno
add
cli
inc
cmc
jmp
mov
inc
icebp
rclb
rolb
insl
xor
sub
xchg
movsl
lods
pop
inc
sbb
xchg
mov
cmp
mov
cmp
test
add
out
cmp
sub
popa
jo
sbb
in
inc
adc
fnstenv
mov
xor
iret
outsb
adc
pop
mov
outsb
and
out
push
dec
mov
pushf
mov
in
nop
cmp
lods
loop
xlat
sti
fwait
xor
xchg
enter
sbbl
out
and
sbbb
lea
mov
jmp
adc
and
push
repnz
xlat
sbb
jno
dec
push
pop
mov
xchg
mov
loope
mov
cmp
mov
sbb
dec
inc
cmc
push
push
inc
aas
mov
cld
mov
cmp
push
clc
cmp
lahf
xchg
dec
aas
inc
scas
adc
sbb
xchg
cltd
or
dec
xchg
out
jg
adc
push
mov
subb
or
lods
push
jno
movsl
add
dec
or
les
mov
loop
mov
mov
jmp
adc
push
data16
rclb
pop
ja
imul
addr16
lods
ret
add
rorb
adc
push
dec
lock
push
cmp
pop
jb
jo
repz
stos
xchg
or
imull
mov
xor
lret
xchg
sbb
fucomi
mov
call
mov
mov
shll
sti
lock
inc
or
inc
nop
arpl
ljmp
jno
pop
sbb
int
lods
push
loope,pn
push
pop
std
leave
cld
mov
mov
repz
and
arpl
jns
out
adc
sbb
pop
xor
fstpl
pushf
cld
cmp
fisttpll
push
out
into
andl
or
ret
fiadds
adc
push
push
stos
addr16
inc
notb
xor
inc
xor
call
dec
ss
pop
flds
inc
lret
sbb
mov
cwtl
sbb
xor
arpl
lret
and
mov
aaa
mov
push
mov
ds
bound
mov
fsts
fs
clc
std
and
dec
inc
fisubl
in
lcall
adc
aad
push
leave
lods
iret
ficomps
jge
dec
mov
mov
aad
dec
addr16
movsb
xchg
sub
pop
jo
jae
xorb
and
dec
dec
cmpsl
pop
sub
inc
cli
dec
addr16
hlt
mov
ret
jl
in
pusha
repz
adcl
sbb
ret
daa
and
jge
cmc
push
out
mov
mov
adc
mov
aam
and
addr16
imul
or
inc
insb
popf
xor
xchg
xor
dec
out
mov
rclb
pop
xchg
sbb
push
ja
sti
mov
cmp
aad
sti
and
loopne
jle
adc
dec
nop
and
cmpsl
xchg
xor
nop
call
mov
lock
mov
ljmp
repz
into
mov
xchg
mov
arpl
and
jns
mov
lret
or
imul
xchg
sbb
cmpsb
test
stos
adc
iret
mov
sub
movb
xor
sbb
repz
mov
inc
jp
jmp
je
push
shll
inc
dec
ljmp
stos
movsb
sahf
mov
into
dec
jns
test
or
push
inc
and
jnp
mov
sub
xchg
sbb
outsl
and
ret
loop
clc
pop
icebp
mov
or
sbb
test
adc
add
pop
cmp
fcompl
pop
ja
fdivrs
mov
push
mov
insl
iret
ficoms
hlt
push
mov
lods
fimull
jg
pop
push
hlt
xor
mov
js
lods
aad
xchg
cmp
test
mov
iret
mov
jns
cld
aam
pop
pop
push
fdivs
or
pop
and
push
or
xor
ljmp
mull
mov
iret
mov
xor
pop
mov
lret
dec
dec
iret
stc
and
mov
lahf
mov
and
sub
sub
test
clc
cmpsb
jno
cmpsb
negb
mov
xor
xchg
pop
mov
test
out
sahf
data16
loopne
sbb
push
xor
pop
add
push
add
lods
dec
iret
sub
ds
jnp
mov
add
or
scas
insl
shl
in
sarb
movsb
hlt
sbb
push
dec
repnz
sbb
mov
inc
cmpb
repz
fsubs
add
enter
leave
int3
mov
sbb
jle
jp
imul
xor
cltd
icebp
lret
and
dec
movsl
xor
jg
arpl
std
push
loop
std
jbe
icebp
mov
cmpsb
xor
gs
jae
incb
sbb
out
mov
mov
push
shl
popa
mov
ja
clc
outsl
pop
xor
xor
cmp
roll
or
scas
sbb
jo
push
stos
insb
push
adc
mov
nop
aaa
andl
aam
mov
or
push
mov
imul
mov
jb
push
push
mov
sarb
sbb
aas
std
andb
cli
or
mov
adc
cmp
lcall
fwait
mov
cmovs
push
rorb
pop
imul
jle
jp
sbb
and
jp
push
lcall
sti
cwtl
jnp
scas
pop
inc
or
shll
xchg
dec
repz
stos
ret
ds
outsl
cld
insb
fistpl
cwtl
pop
push
aas
jp
call
and
push
jl
jns,pn
repnz
movsb
loop
loope
stos
xor
push
jle
sbb
push
scas
lock
xchg
add
cltd
adc
xchg
cmpsb
jp
mov
sti
scas
pusha
mov
das
pop
lods
aam
lds
fisttpl
mov
shll
imul
test
mov
jge
xor
fstpt
lds
xchg
adc
jns
xchg
sbb
iret
and
jne
dec
pop
pop
ljmp
xor
xchg
add
arpl
inc
mov
icebp
and
mov
lahf
sahf
mov
es
imul
aam
ss
xchg
pop
mov
test
push
or
fld
sahf
cmp
int
push
adc
shlb
repz
pop
xchg
aad
and
test
add
pop
imul
bound
nop
pop
into
jae
inc
jl
xor
mov
fcmove
add
imul
cmp
push
sahf
aam
in
ret
cld
dec
andl
fcomps
scas
dec
add
push
lock
das
testb
mull
cmp
repz
in
inc
lcall
mov
push
adc
aam
adc
cmp
push
xor
rolb
imul
jecxz
aad
and
scas
ljmp
stc
test
lahf
inc
pop
mov
lods
popf
push
cmpsb
lcall
inc
andb
or
ret
lret
and
js
pop
pop
out
add
lds
shr
in
jp,pt
int
mov
add
aad
sti
inc
nop
inc
xchg
pusha
mov
cs
push
and
pop
jecxz
lret
data16
jl
out
sbb
pop
data16
adc
sub
mov
inc
fsubl
mov
movsb
scas
push
shr
mov
xor
pusha
in
fisubrl
cmpsl
mov
pop
imul
arpl
test
insb
sbb
pop
cmp
sbb
lock
data16
cmpsl
cli
icebp
inc
fwait
push
daa
xor
out
rol
add
or
sub
pusha
sbb
std
jo
inc
or
pop
xchg
out
sub
xchg
ja
cld
add
loop
cmp
push
cltd
push
lods
jo
cmp
xabort
mov
test
mov
lret
jbe
sbb
mov
xchg
test
inc
fcmovb
lods
shll
xor
jle
mov
hlt
addr16
push
dec
sub
xchg
popf
or
clc
push
fistps
inc
arpl
cmp
mov
inc
adc
fldcw
sub
jbe
jae
popa
push
lea
fstpt
cmpsl
add
das
add
bound
test
xchg
jmp
or
push
and
shl
or
xchg
mov
lahf
mov
leave
ret
sbb
jle
xchg
sahf
scas
insl
mov
fs
xchg
sub
and
mov
or
je
jnp
std
sub
inc
rcrl
rcl
cli
or
fmuls
mov
ljmp
rcrl
lcall
outsb
push
push
and
mov
lcall
scas
mov
sbb
jecxz
ljmp
pop
push
dec
cmp
std
jmp
sub
mov
insb
int
pop
sbbb
popf
lret
lret
mov
dec
cmc
test
or
xchg
xor
xor
mov
in
js
inc
je
xlat
mov
inc
xchg
lret
mov
and
add
jno
jnp
daa
loope
jo
push
dec
lods
loop
call
xchg
adc
xor
jo
fstps
mov
mov
jmp
xchg
repnz
xor
mov
pop
jne
mov
cmp
lcall
inc
aaa
adc
pop
int
add
mov
in
push
cmp
adc
push
cli
out
xchg
jge
fcompl
mov
daa
std
dec
push
mov
cmpsl
mov
lahf
sbbl
push
das
mov
out
lea
mov
cld
loop
xchg
mov
mov
cs
xchg
jo
pop
mov
test
jo
add
push
push
pop
lods
mov
rol
xchg
jmp
fidivrs
std
xchg
cmp
mov
add
je
mov
pop
sbb
ret
mov
push
adc
aaa
jecxz
adc
mov
cltd
dec
arpl
and
sub
cld
push
pop
inc
loope
negb
add
ret
nop
scas
sbbb
call
pop
shrb
dec
pop
sbb
in
sbb
lret
rorl
pop
gs
pop
pusha
lret
das
sbb
ret
aaa
or
inc
negl
outsl
cmp
into
jns
ljmp
push
jp
xadd
das
inc
push
out
jno
out
iret
push
outsl
xor
bound
add
addr16
fsub
daa
xchg
repnz
es
pusha
insb
cmpb
xchg
out
pop
rcr
jnp
sti
pop
cmp
ja
fdivl
outsb
mov
add
test
rep
xlat
inc
scas
nop
test
in
rcr
out
add
sub
mov
rclb
aas
and
jns
mov
stc
inc
push
scas
xor
mov
xchg
cltd
jnp
ret
cmp
sbb
dec
ret
movsl
in
jbe
roll
push
imul
shlb
scas
sub
sti
jp
xor
jno
call
adc
pop
pop
adc
push
push
pop
roll
or
pop
jae
loope
mov
sti
idiv
jnp
mov
lods
add
loopne
xor
fwait
jno
mov
mov
aad
mov
mov
jmp
jecxz
jle
dec
loop
das
lcall
mov
mov
add
icebp
push
and
sti
dec
daa
cmp
inc
fsubrl
rolb
mov
ret
jne
lock
test
insb
mov
daa
lock
and
xor
insl
ljmp
cmpsl
pop
inc
adc
and
rcrb
movsb
lcall
shrd
jno
adc
and
dec
add
pop
adc
mov
add
cmp
jb
insb
psadbw
dec
mov
test
mov
mov
pop
insl
inc
sbb
cli
popf
sbb
jno
add
js
data16
fisubs
pop
jl
adcl
mov
stos
andb
imul
in
insb
movsl
jge
and
insl
push
addps
inc
aaa
pop
or
inc
jne
cmp
pop
dec
jmp
pusha
sub
out
sbb
mov
ret
stc
stos
push
lods
icebp
xor
jg
pusha
inc
sub
add
subb
cmp
dec
push
mov
addb
pop
mov
ret
sbb
inc
jl
sti
out
in
sub
mov
and
into
nop
jmp
jbe
mov
out
lret
mov
lret
add
cld
sbb
lds
js
cmp
inc
neg
into
fsubr
leave
aaa
add
test
cltd
rcrb
dec
mov
sahf
sbb
test
inc
dec
add
fistps
sub
js
scas
pop
cmp
dec
push
inc
icebp
loopne
mov
add
shr
sbb
loop
inc
xor
imul
sbb
cmc
jle
out
mulb
mov
jne
movsb
addb
mov
push
adc
insb
test
inc
lret
rorb
xor
pop
aaa
or
gs
sub
sbb
sub
jo
add
mov
push
imul
pop
push
pop
sub
dec
rol
inc
adc
sbbl
pop
and
jo
add
lcall
scas
adc
push
andl
test
test
int
xchg
imul
push
syscall
cmpb
dec
jle
or
mov
mov
mov
out
jnp
adc
and
pusha
mov
cld
xchg
mov
jge
cmp
jo
inc
push
or
adc
inc
sub
sbb
int
les
or
xor
imul
sbb
roll
popf
or
or
mov
mov
mov
pop
push
inc
pusha
js
sti
jle
mov
xor
setge
lods
cmp
dec
pop
xor
in
pop
fcomps
adc
insl
mov
lea
imul
xchg
dec
xor
push
je
lret
cmp
pop
sub
cld
fcmovu
fldcw
add
fisttpl
negl
shll
sbb
shlb
dec
pop
lret
sbb
mov
fs
loope
cli
inc
lahf
ds
pop
mov
add
lods
and
fwait
xchg
dec
or
adc
aad
sahf
mov
mov
shlb
and
mov
test
aam
loopne
fcmovu
xor
xor
mov
cmp
jle
aad
jmp
cli
adc
mov
and
int
mov
aas
sti
lahf
add
std
pop
sbb
push
clc
cmp
sbb
bound
sub
lret
mov
loop
mov
mov
ds
pop
sbb
int3
hlt
cmp
mov
mov
rcr
mov
push
pop
in
out
xchg
ret
add
jbe
jmp
cmp
test
push
cmpsl
fldcw
xchg
pop
pop
pop
in
or
sub
inc
shll
cmpl
stos
cmp
or
clc
int3
popf
cmp
lret
insb
cmp
and
outsb
push
sub
jne
and
fs
cmpsl
mov
lret
or
in
clc
shrl
bound
flds
jns
loop
jp
aam
orl
push
pop
cmpsb
jnp
int3
das
ficoml
cwtl
je
fldenv
pop
das
loop
inc
out
addl
push
xor
mov
mov
sbb
mov
push
jno
push
cwtl
add
push
fwait
pop
shlb
cltd
mov
mov
mov
popa
stos
adc
cmpsl
add
inc
xchg
cmp
xchg
out
mov
jg
stos
ja
fwait
add
push
or
mov
insb
dec
fucom
cmp
pop
xor
sub
mov
pop
lods
lret
movsl
lret
adc
mov
and
popa
xlat
ss
sbb
test
fdivp
push
xchg
notb
shrb
mov
adc
xorl
add
ficompl
pop
out
incb
sbb
sub
cltd
mov
pop
or
or
pop
loope
clc
jae
popf
lods
pop
cld
and
mov
mov
pop
outsb
shlb
in
sub
rclb
sub
inc
jne
dec
daa
stos
mov
sbb
sub
sbb
daa
jmp
adc
hlt
jecxz
fwait
xor
cmp
insb
pop
iret
xchg
xlat
out
dec
in
aad
in
push
jnp
call
mov
idivb
mov
xor
mov
xor
pop
xlat
cmp
add
sti
in
lret
jno
loopne
sub
adc
and
mov
ret
mov
add
hlt
xlat
bound
mov
push
adc
mov
push
fldl
pop
jae
pop
outsb
jnp
sub
mov
es
jecxz
movsb
mov
lret
inc
cmpsb
inc
cs
push
xor
scas
mov
xor
pop
dec
mov
mov
mov
jb
xor
sbb
fildll
leave
xor
mov
push
jecxz
jge
cmp
test
jecxz
outsb
push
ss
xchg
jp
jns
push
testl
xor
push
mov
icebp
dec
sbb
push
test
fwait
xchg
jle
jno
insb
es
push
jns
negl
ljmp
sub
and
adc
cld
fists
mov
and
pop
pushf
fnstenv
jle
dec
cmp
int3
maxps
sbb
lret
push
fisttpl
sub
repnz
cmp
idivl
sub
push
xorb
mov
outsb
cltd
in
pushf
jns
idiv
push
stos
lods
in
pushf
jl
cmp
jo
std
in
enter
adc
decb
dec
add
std
inc
pop
lret
lahf
push
adc
mov
inc
jge
inc
scas
mov
lret
and
pop
xchg
jecxz
adc
xor
aad
xchg
push
ja
scas
gs
xchg
icebp
cmp
fldenv
pop
das
divl
mov
mov
int3
ret
add
or
ds
and
sub
and
adc
cmovbe
cli
in
jnp
push
mov
test
stos
jb
push
fwait
cmpsl
sub
cmp
out
fwait
orb
jns
xor
je
cmpsl
pop
pop
mov
sbb
rol
fs
shrl
add
or
xor
jmp
push
xlat
and
pop
outsl
ret
dec
mov
inc
sub
xchg
pop
adc
movsl
fdivrp
jb
mov
xor
aaa
jae
push
dec
std
and
mov
jae
loopne
jle
inc
or
std
add
stos
shr
insb
cmp
dec
into
test
adc
xchg
aad
aam
fldt
sub
stos
notb
loopne
push
mov
subb
shll
inc
or
xchg
add
fwait
cmp
inc
push
xor
popf
je
xchg
loop
or
addb
xchg
jg
cld
icebp
push
scas
mov
pop
in
sub
mov
rol
iret
movsl
add
test
pop
inc
xor
dec
xchg
xor
inc
testl
xor
jo
lea
sbb
xor
xchg
fdivrs
js
mov
sub
push
xchg
shl
jo
mov
mov
lcall
test
sbb
bound
dec
test
outsl
adc
inc
push
xor
inc
js
inc
aas
jl
notb
lahf
lahf
fstps
movsb
lcall
hlt
pminsw
scas
leave
les
outsl
shlb
insb
dec
movb
add
pop
repz
lahf
pushl
jmp
jb
push
mov
sbb
mov
call
sub
jmp
add
arpl
jno
ljmp
shll
cmp
mull
mov
bound
mov
push
cltd
cmp
sub
xor
xchg
sub
lret
ret
jp
insb
pop
cmp
int
lahf
outsb
ja
inc
icebp
add
mov
nop
sub
mov
ret
pusha
icebp
les
inc
xlat
insb
mov
fisubs
sbb
or
jae
inc
cmp
mov
ss
shr
lahf
fld
xchg
xor
imul
orl
negb
fbld
stos
mov
addb
mov
push
mov
cwtl
mov
xchg
out
inc
sub
sbbl
call
jb
ret
jmp
in
xchg
sbb
popf
adc
or
dec
cmp
mov
test
loope
mov
sub
dec
jle
pushf
pop
sysenter
adc
dec
lds
popf
adc
insl
push
mov
and
sub
les
dec
inc
pop
mov
mov
in
icebp
ss
es
in
insb
aaa
mov
fdivs
sbb
xchg
mov
pop
dec
sub
jg
and
adc
push
mov
int
push
out
sub
and
mov
mov
and
cs
ror
pop
push
cmp
and
lahf
cmp
enter
jne
mov
inc
push
pop
xor
xor
sbb
pop
sub
sub
push
aas
lea
push
inc
cltd
fsts
outsl
ret
stc
jmp
adc
ds
sahf
and
sub
daa
andl
xchg
cmp
in
mov
ja
mov
das
sub
push
rcrb
cli
into
rcrl
cmp
sti
and
mov
mov
rcrl
jo
adc
icebp
jmp
pop
inc
add
movl
add
loope
gs
or
mov
cwtl
stc
jnp
movsb
pop
loopne
sbb
cltd
mov
mov
push
mov
sub
pop
xor
adc
imul
out
pop
xchg
ret
push
dec
dec
sub
xor
fst
sbb
idiv
lock
mov
xor
add
cmp
imul
add
and
test
or
cmc
xchg
and
je
mov
pop
aas
mov
gs
xchg
and
pop
adc
xchg
fwait
jns
xchg
rolb
leave
or
dec
js
std
sahf
mov
xor
cs
jle
in
jl
sbb
popf
cs
mov
adc
das
sahf
add
stc
je
cwtl
mov
xor
lahf
xchg
lret
movsb
jne
inc
imul
cmpsb
test
pop
frstor
lea
out
mov
fldenv
cltd
adc
fisubs
push
or
add
das
cltd
pop
jg
jmp
int3
mov
dec
push
xchg
jb
mov
cmc
je
gs
outsb
int3
jle
test
shll
adc
jae
nop
mov
mov
inc
xchg
mov
mov
insl
ret
xchg
out
ljmp
adc
sub
cmpsl
mov
stos
inc
inc
dec
mov
mov
or
or
pop
mov
mov
lcall
mov
pop
out
mov
in
pusha
lods
add
lret
shrl
adc
shll
data16
repz
mov
stos
insb
mov
sbb
jg
mov
inc
repz
pop
add
je
xor
insb
loope
sub
je
scas
call
sbb
roll
jecxz
pop
movsb
inc
sbb
sbb
test
push
fsubs
xor
lea
pop
pushf
xor
xor
rolb
mov
mov
aas
xor
cli
mov
xchg
arpl
orl
sub
mov
pop
loopne
push
in
jg
sbb
stos
repnz
dec
push
adc
iret
xchg
shlb
push
sbb
movsb
insl
pusha
inc
clc
outsb
inc
out
repz
jmp
in
movsl
std
mov
inc
mov
push
lods
push
int
cmp
ret
pop
xchg
test
pop
minps
int
popf
repz
fdivs
lahf
sub
das
jbe
frstor
jae
jmp
inc
cwtl
push
lahf
dec
dec
cltd
lods
add
es
ss
outsb
add
sbb
pushf
aad
int
jg
int
in
push
fmulp
sbb
cmp
repz
push
pop
sar
inc
int3
mov
imul
shr
inc
xchg
sbb
dec
or
fdivr
lods
ret
or
fwait
cmpsl
bound
jae
out
cltd
mov
push
ret
add
jo
mov
lods
cmpsl
jecxz
hlt
stc
dec
jb
jp
jecxz
lods
sub
fs
mov
rol
mov
adc
into
add
adc
mov
data16
xor
push
out
mov
xor
mov
xchg
sti
cmpsb
fwait
cmp
loope
movsl
in
mov
jge
imul
cmp
push
das
mov
mov
xchg
out
xor
cld
movsl
dec
jle
lea
mov
jl
pop
mov
jbe
xchg
sub
pop
jp
lahf
nop
test
outsb
xlat
out
lock
cmp
xchg
test
lcall
jmp
insb
add
sub
or
movsl
call
in
mov
jae
pop
inc
jns
in
adc
jae
test
and
std
in
adc
xor
push
xor
pop
jne
mov
inc
lea
out
jns
into
mov
mov
test
lock
dec
sbb
int
mov
sub
insb
stos
loope
lret
adc
sub
adc
xlat
push
inc
mov
xor
pushf
push
scas
lret
xor
mov
ljmp
pop
fldl
comiss
push
cld
leave
push
pop
addr16
jbe
insl
mov
mov
sbb
cld
mov
inc
cmpsb
test
sub
lret
cmpl
mov
mov
ds
test
ret
xor
scas
std
push
inc
jg
hlt
dec
mov
cmp
es
mov
cwtl
dec
sbb
bound
mov
cmp
cmp
add
fldt
lcall
or
cmp
mov
es
jne
notl
xor
call
sbb
stos
cmp
sub
popf
test
xor
jmp
loope
cmpsl
std
es
pop
push
ds
icebp
iret
inc
mov
jp
sub
xchg
sub
ja
mov
outsl
mov
and
mov
mov
sub
cmp
and
rolb
sbb
repz
adc
push
cmp
adc
add
jg
fs
xchg
fstl
sarl
jno
stos
ljmp
scas
mov
add
dec
es
std
fidivrs
adc
inc
sbb
dec
out
xchg
mov
dec
pop
out
call
idiv
adc
je
popa
ret
sbb
fisubs
call
pop
sbb
or
jo
mov
inc
hlt
lcall
inc
mov
push
gs
int
or
lods
mov
std
lcall
ficoml
adc
lret
or
mov
mov
mov
mov
inc
adc
movsb
push
fs
push
movsl
inc
out
loop
sub
pop
fwait
add
movsl
sti
pop
mov
dec
ficomps
mov
stos
jae
pop
add
dec
gs
pop
std
fiadds
mov
jns
test
cmp
lea
jecxz
data16
mov
in
mov
jp
ds
cmpsb
mov
cmp
mov
aas
mov
fmull
mov
jmp
rcr
test
shrb
lea
aam
scas
xchg
pop
xor
xor
fwait
sbb
jecxz
lahf
xlat
fidivrl
ljmp
fbstp
add
out
jo
nop
and
mov
stos
cmc
pop
rolb
jb
add
dec
movsl
daa
push
out
jle
inc
sahf
leave
lea
adc
cmp
movl
add
leave
jne
dec
pop
popf
push
jbe
lods
xor
stos
and
repnz
pop
fs
push
shl
sbb
inc
shrl
imul
jmp
cmpsl
sbb
loope
repnz
cld
cwtl
push
lret
cmp
lahf
repz
mov
push
and
addr16
push
add
insb
shlb
cmp
imul
into
int3
rcl
xor
ret
pushf
jbe
mov
aaa
adc
in
addr16
xor
pop
mov
je
dec
sub
andb
add
mov
lcall
pop
and
loope
add
jae
mov
je
sub
push
push
jno
or
push
pop
fnstenv
xchg
ss
pop
xchg
loope
test
loopne
idivb
mov
sub
fists
enter
mov
and
inc
call
xchg
pop
add
rcll
notb
cmpsb
lcall
addl
iret
jg
mov
xlat
lods
xlat
sub
pop
or
mov
jo
aaa
cmp
movsb
adc
add
sbb
sbb
mov
lock
pop
push
out
test
cltd
pop
push
mov
je
mov
add
or
adc
shll
in
or
sbb
xchg
xor
xchg
and
daa
in
je
and
outsl
mov
ficoms
rcrl
push
mov
dec
leave
shrl
jl
in
and
xchg
cltd
jb
scas
add
addr16
add
mov
inc
rcrb
pop
mov
fwait
pushf
shrb
sub
push
scas
ja
pop
popa
je
ret
mov
cmp
cmp
xchg
sbbl
inc
xor
shr
xor
push
frstor
xor
jb
enter
inc
sub
and
xor
js
push
jbe
pop
aas
test
sbb
and
dec
cmp
out
jl
hlt
mov
aas
fdivl
and
dec
mov
dec
lcall
xchg
cmp
aam
lods
fildll
in
fsts
or
hlt
dec
or
shr
dec
jbe
inc
js
or
popa
rcrl
testb
inc
xor
pop
loop
dec
push
pop
in
jbe
jmp
push
int
cltd
xor
loopne
mov
xor
icebp
sub
clc
mov
adc
movsb
or
mov
cmp
and
aam
addr16
arpl
mov
arpl
negb
cs
inc
ffreep
pusha
in
gs
pop
les
int3
test
int
sub
add
jmp
jle
mov
or
jmp
cmp
jmp
icebp
das
insl
xchg
jnp
sbbb
jns
aam
je
sbb
daa
sti
sub
mov
mov
sbb
xor
mov
push
fwait
dec
add
and
sub
or
lods
dec
aaa
cmp
cmp
stos
in
inc
ficomps
or
mov
loopne
or
mov
jb
xchg
dec
aad
bound
or
jo
shrb
pop
add
inc
sahf
rcll
sbb
inc
je
xchg
dec
xchg
push
or
and
fisubl
jns
mov
adc
outsl
cld
imul
push
dec
cltd
outsl
xchg
cmpsl
cwtl
push
cmp
pop
and
sub
xor
mov
xchg
mov
adc
jg
mov
test
mov
jo
jge
jb
xchg
je
push
xchg
mov
ds
lock
add
cs
pop
dec
add
lahf
rolb
enter
repz
insl
cmp
add
push
scas
jo
or
lods
push
in
pusha
sub
iret
jo
test
xor
mov
jecxz
or
mov
jg
jae
pusha
xchg
lods
testb
cmp
or
std
aad
push
add
je
add
or
imul
adc
cmc
mov
xchg
mov
pop
jno
pushf
fildll
lock
ss
and
das
jae
sbb
data16
aas
lds
adc
fadds
pop
stc
popfw
and
jns
scas
mov
mov
mov
mov
stos
inc
divb
and
push
xchg
and
jno
adc
icebp
sbb
or
imul
fwait
inc
pop
out
jecxz
jb
jecxz
or
repz
test
mul
ljmp
xlat
rolb
movsl
icebp
iret
mov
pop
mov
add
movsl
mov
clc
add
pop
push
test
inc
and
pop
inc
mov
sahf
push
cmp
ljmp
sub
repnz
arpl
jbe
adc
pop
xchg
int3
lods
sbb
xor
in
sub
ret
ficomps
test
inc
pop
daa
mov
icebp
xchg
cld
mov
jbe
sub
stc
insb
clc
xorb
test
inc
inc
jae
mov
sub
mov
orb
inc
mov
and
je
and
mov
fnstsw
pop
sarb
gs
cmp
mov
pusha
addl
cwtl
sub
dec
les
jno
mov
jae
ss
pusha
mov
add
andl
lahf
dec
pop
pop
inc
scas
lods
mov
rorb
cmpsl
or
movsb
imul
mov
dec
mov
mov
jne
push
hlt
lods
out
adc
into
in
data16
pop
sub
jns
push
dec
mov
cmp
jno
jae
das
or
push
adc
fldl2t
ja
cli
das
rolb
jge
sub
je
dec
repnz
pop
loopne
mov
xor
jge
out
scas
push
das
arpl
dec
mov
lcall
or
lcall
push
das
imul
xor
outsl
stc
cmp
clc
mov
add
movsb
loope
mov
movsl
push
jl
cmp
out
sub
push
cmp
cmp
cmp
lea
add
data16
aad
stos
jp
mov
dec
mov
leave
cmc
jmp
subb
test
rolb
push
jmp
sbb
call
dec
repz
fs
mov
or
mov
mov
and
cmp
dec
inc
loope
ret
test
xchg
and
xor
xor
sbb
dec
sub
lods
lods
les
jge
xor
pop
clc
add
and
out
add
shlb
adc
neg
xor
out
jne
fstps
ss
dec
mov
and
cmp
lods
mov
add
cld
jb
xchg
jno
das
std
mov
inc
cmp
jae
idivl
push
inc
fcmovne
xchg
sbb
imul
mov
in
xor
push
cmp
shr
int
cwtl
in
cmc
scas
jp
into
cs
lret
pop
cld
rorb
sahf
sub
adc
mov
or
ja
adc
mov
sbb
add
cwtl
add
pop
push
loopne
outsb
xor
aas
xchg
xchg
shll
push
pop
es
mov
aaa
sbb
xor
mull
and
inc
push
aad
aaa
ficompl
xor
jno
cmpb
lahf
cmp
cltd
aas
subl
xor
xchg
jae
cmp
pop
ret
cmpsb
xor
loopne
jg
push
sbb
xor
movsb
fisubrl
xor
fsubrp
outsl
dec
dec
mov
dec
jp
mov
in
or
fimull
mov
jmp
mov
pushf
sti
mov
int
rolb
dec
push
out
jecxz
jp
pop
fcmovnb
or
mov
shrb
outsb
jo
enter
dec
fcoml
cmc
cltd
push
filds
cmp
jns
shll
add
mov
sbb
icebp
mov
and
jecxz
or
mov
shr
sub
arpl
fsts
add
mov
xchg
jae
mov
and
jge
and
pop
pop
inc
mov
stos
shl
adc
sarl
xor
push
add
shll
pop
fstl
femms
push
enter
test
add
adc
mov
jne
pop
jmp
push
mov
or
loop
iret
add
dec
push
push
idivl
outsl
mov
or
push
jb
sti
loope
sahf
add
sub
sti
dec
test
int
outsl
lahf
sbb
repnz
cmp
xor
mov
sbbl
sahf
mov
int3
and
insb
cmp
divb
rcl
sti
jns
bound
popa
push
mov
pop
fstpl
jle
sub
clc
daa
fst
cmp
rcr
mov
xchg
dec
dec
mov
clc
sub
mov
mov
mov
cmpsl
xor
inc
shl
mov
pop
rclb
mov
mov
push
sbb
cmp
int
add
es
cmpsl
mov
loopne
js
les
jg
loop
outsl
mov
mov
notb
cmp
pop
dec
adc
mov
cmp
repz
sub
mov
rorl
mov
xchg
mov
out
pop
insl
sahf
pop
clc
cmp
lret
negl
add
push
stos
cmpsb
mov
sub
test
in
dec
outsl
out
dec
mov
fists
sbb
xchg
mov
clc
cmp
mov
repz
mov
xor
lods
ljmp
cmp
rcr
fists
js
repnz
mov
leave
orb
js
clc
pop
or
add
mov
and
xor
dec
stos
js
shll
mov
call
movsb
dec
fs
sbb
into
roll
pushf
ss
mov
shll
shrl
arpl
push
arpl
loop
pop
or
and
pop
jmp
push
pop
shlb
dec
aas
xchg
aam
test
mov
lods
scas
push
push
push
cmp
cmp
push
jnp
dec
mov
push
cld
aas
lods
bound
fs
fnstsw
jecxz
idivl
mov
into
jmp
jb
shrl
gs
loopne
movb
mov
jnp
and
pusha
in
push
loop
int
in
gs
roll
lcall
out
and
adc
add
idiv
cli
test
fcoml
and
sarl
push
ret
fwait
mov
push
jge
movsl
addr16
sub
xchg
inc
lds
ret
dec
adcl
jp
pusha
xchg
mov
dec
test
adc
sbb
push
es
mov
mov
test
sbbb
sbb
mov
sahf
fwait
lret
mov
out
adc
cmp
inc
popa
test
dec
mov
cwtl
mov
fistpll
mov
jg
ds
push
cmp
mov
jnp
bswap
jge
cmp
mov
js
daa
mov
or
adc
and
mov
test
sbb
cli
imul
mov
out
or
push
and
ret
sbb
mov
repnz
movsl
aaa
lds
jmp
fs
imul
rcrb
mov
mov
sbb
xor
rol
xchg
test
mov
into
sarl
pop
add
pop
loopne
insl
mov
bound
push
or
pop
sahf
and
sub
jb
add
repz
adc
shl
loop
or
leave
and
pop
arpl
les
test
pusha
push
and
add
dec
sbb
jle
pop
mov
sbb
loope
inc
cmpsb
dec
insl
mov
or
jmp
xchg
aam
lods
nop
push
push
cwtl
sbb
sbb
dec
xchg
xor
idiv
loope
into
sarb
fnstsw
cs
and
fxch
cltd
cmp
imul
xor
and
pop
std
dec
call
jle
or
dec
sub
mov
popa
lods
fstps
jmp
push
das
dec
testl
add
cmp
pushf
repnz
stos
mov
dec
inc
sbb
cmp
adc
roll
cmp
loope
push
xor
mov
push
hlt
pop
xor
pop
clc
jnp
inc
and
sahf
aam
sbb
data16
addr16
xor
sbb
and
fs
lcall
jmp
mov
out
and
lea
iret
push
sar
in
jne
es
push
cmc
outsl
mov
or
adc
push
gs
les
jae
out
cmp
and
sub
rcrl
pop
dec
mov
jmp
lcall
popf
sbb
test
ror
lahf
jg
push
dec
out
icebp
push
in
mov
les
repnz
ja
add
mov
inc
stos
xor
jnp
or
subl
mov
add
push
es
sbb
mov
cmpsl
push
sbb
pop
cmp
fst
addr16
ljmp
jns
cmp
mov
outsb
push
fidivs
mov
adc
in
mov
sahf
pop
push
js
in
lret
add
fdivr
loop
insb
stos
inc
pop
adc
sbb
inc
xor
insl
fstpt
sub
pop
gs
mov
rcrl
sbbl
dec
mov
adc
sbb
push
sub
andl
les
popf
and
imul
push
push
mov
sbb
xchg
or
cmpsb
lods
mov
fmulp
aas
dec
adc
pop
add
sbb
iret
sti
movsb
enter
or
repz
les
add
jo
add
or
xor
out
rorb
pop
inc
or
jl
and
cltd
je
arpl
fiadds
jg
inc
cmp
sub
and
and
and
data16
xor
cld
dec
fcmovnu
mov
adcb
fsubrl
das
dec
aas
mov
lods
pusha
mov
mov
mov
cmp
fcompl
ds
xchg
aas
dec
add
ret
dec
adc
ret
xchg
sub
add
dec
dec
ficoml
sub
inc
mov
icebp
adc
fs
addr16
roll
lret
js
mov
mov
lret
je
push
leave
bnd
and
xchg
movsl
mov
and
leave
dec
or
fisubs
aaa
xor
mov
aas
int
jle
add
popl
cwtl
or
jge
call
push
xor
jle
or
leave
push
or
cmc
les
xor
mov
cld
shrl
adc
and
std
pop
and
out
or
sbb
dec
jne
nopl
pusha
mov
pop
push
nop
imul
dec
iret
jnp
inc
out
not
pushf
popa
jb
cs
inc
mov
lea
aad
mov
out
and
shll
sub
loop
cli
dec
sahf
sbb
in
mov
gs
mov
out
inc
and
xchg
xor
pop
push
or
dec
jl
and
imul
or
ljmp
out
inc
repnz
outsl
mov
mov
test
sti
imul
mov
jne
nop
cld
add
inc
mov
test
or
jle
and
cld
mov
repnz
repz
sbb
dec
repz
mov
negb
mov
jg
mov
sbb
xor
ss
mov
scas
loope
cmpsl
adcl
in
mov
mov
or
cmp
push
lcall
cld
frstpm(287
lods
enter
daa
and
cltd
mov
dec
mov
test
push
jb
sbb
popf
add
dec
add
add
cmp
mov
int
dec
std
pop
mov
scas
movq
rcl
sbbl
dec
stos
shlb
fildll
mov
xchg
xor
leave
test
adc
sub
jnp
add
inc
lret
js
fs
lret
pop
cmpsb
sub
dec
add
mov
xor
or
jno
or
icebp
or
call
cli
pusha
ds
xchg
mov
in
push
jae
into
std
mov
sbb
pop
out
xor
adcl
fdivl
iretw
mov
test
test
lar
jp
aad
and
pop
lods
jnp
jno
pop
push
adc
mov
arpl
rclb
rcrb
mov
les
in
cli
or
lcall
dec
pushf
cs
fistps
xchg
sbb
rorl
mov
cmp
pmaxsw
nop
sbb
dec
or
test
xor
lock
pop
loope
sti
cmpsl
daa
pop
dec
aaa
dec
add
shll
mov
pop
outsb
add
call
sub
jno
cmpsb
test
jb
fstl
stos
pop
jno
outsb
and
movsl
lret
cmc
bound
addr16
outsl
adc
enter
iret
subl
push
push
std
add
pushf
sarl
adc
dec
in
insb
psrlw
push
lret
mov
ja
pushf
cmp
js
insb
push
fldenv
imul
outsl
pop
cmpsl
fisttps
fs
shlb
jne
push
pusha
mov
daa
mov
mov
popf
or
sbb
in
mov
xor
in
mov
pop
push
or
cmp
adc
popf
outsl
rorb
subl
les
cli
into
into
xchg
pushf
repz
jae
mov
ret
sbb
scas
jns
std
pop
inc
cmp
fucomp
pop
pop
sbb
mov
int3
and
fbstp
jge
arpl
and
add
jo
xor
stos
jnp
rol
ds
mov
lret
dec
and
out
cmp
jl
pop
pushl
scas
loopne
bound
je
aam
mov
js
shl
mov
shlb
lods
nop
fsubl
out
jge
adc
cmp
push
cli
and
bound
mov
xchg
add
cmpsl
sub
mov
lds
cs
adc
ljmp
pop
inc
arpl
or
leave
es
mov
push
xchg
lock
cli
inc
xchg
or
jecxz
dec
outsb
cwtl
pop
lods
inc
test
ds
cli
test
jmp
loopne
and
xchg
cmp
loop
call
pop
aam
stos
adcb
insl
xor
fisttps
test
add
jnp
sub
xchg
xor
inc
loop
jp
nop
movl
push
sub
xchg
loope
mov
adc
pop
sbb
imul
cwtl
add
lret
fcoms
xchg
fimuls
pop
int
mov
sub
ss
repnz
or
push
repz
add
jg
insb
xor
testl
jno
ja
lret
insb
cwtl
jbe
mov
mov
mov
push
into
jg
iret
jb
cwtl
out
sbb
lret
xchg
and
fwait
or
mov
into
mov
test
movsb
cs
add
mov
xlat
fsave
cli
mov
sbb
dec
iret
jno
fwait
and
mov
mov
sahf
out
sbb
pushf
imul
int3
inc
mov
push
cmp
add
out
ret
xchg
aad
shrl
out
push
cmp
pop
xchg
push
int
jno
and
frstor
inc
out
push
fmull
add
inc
inc
fdivl
push
lock
fwait
testb
fwait
fwait
pop
push
sti
xlat
sbb
push
cmp
mov
pop
insb
rorb
mov
add
push
xchg
mov
fcomps
ljmp
mov
mov
icebp
ret
test
jle
fs
mov
aam
iret
jg
es
jbe
mov
movsl
add
cmpb
cmc
daa
pop
xchg
gs
and
push
jge
pop
out
xchg
pop
movsb
sub
ficoml
cmp
cmp
cld
cmp
sbb
movsb
imul
sbb
dec
into
mov
nop
and
sbb
or
mov
fwait
jb
cltd
out
pop
gs
out
stos
push
cmpsb
mov
stos
jle
std
xor
sub
call
inc
popa
lods
or
or
and
jp
push
sub
aaa
test
lcall
mov
lds
outsl
jo
mov
loope
loop
jecxz
imul
imul
sbb
shlb
iret
stc
dec
fstps
adc
cwtl
ljmp
jno
mov
sbb
movsl
xchg
addr16
xlat
cmc
adc
ret
lcall
or
mov
pop
push
enter
add
loop
push
testb
loop
jno
in
jge
pop
cmp
and
inc
clc
adc
jb
sbb
aam
int
stc
vpsllq
pop
dec
xchg
sub
xchg
call
jnp
mov
loope
gs
aaa
or
push
out
inc
sarb
sbb
xchg
or
mov
cli
xor
cmp
mov
xlat
call
jmp
outsb
mov
cmpsb
mov
shll
stc
sbb
clc
cmc
or
lds
add
adc
hlt
xchg
xor
mov
jmp
out
dec
or
pop
sti
cmp
js
les
adc
iret
mov
enter
add
lret
pushf
lock
jo
and
cmp
cli
push
sub
sub
repz
xchg
mov
mov
sbb
aaa
clc
pop
inc
cmpsb
repnz
negl
mov
shll
lea
sub
shlb
js
es
push
iret
mov
adc
inc
fsub
mov
popf
sahf
push
mov
lods
sahf
cmp
adc
psrlq
hlt
lods
out
dec
mov
push
test
or
test
mov
dec
and
adc
stos
gs
xchg
sbb
dec
outsl
mov
icebp
push
mov
fcmovnu
pop
add
pop
ret
inc
or
imulb
add
jecxz
jge
xorl
pop
add
or
ja
pop
push
jb
jb
outsb
cmc
dec
sbb
adc
or
pop
xchg
scas
xor
mov
cs
cmp
cs
out
pop
mov
jmp
pop
pusha
jp
pop
rol
mov
out
adc
push
loop
outsl
cmp
dec
scas
fucomi
mov
cmp
aad
mov
sbb
movsb
inc
adc
test
test
pop
cmp
push
fldt
xchg
test
pop
inc
sub
mov
xchg
fstl
iret
cmp
loop
ret
dec
cwtl
shlb
push
pushf
sub
lock
jle
mov
cs
sbb
les
adc
aam
shll
push
mov
mov
jmp
sub
es
stos
jle
fmul
mov
xlat
xchg
sbb
les
ds
ret
shl
leave
pop
and
jecxz
or
inc
test
or
adc
std
lret
dec
xchg
pop
adc
stc
data16
mov
mov
add
arpl
jmp
enter
xlat
int
hlt
pop
ja
icebp
fists
sbb
imul
xlat
or
fsubrs
outsb
inc
hlt
and
mov
mov
aas
push
repz
and
mov
dec
or
inc
cwtl
scas
sbb
mov
add
aad
out
or
mov
movsl
xor
insb
add
and
ret
daa
into
enter
rcl
push
mov
fdivrs
out
push
cmp
mov
xor
fcompl
fs
outsb
jno
iret
divb
fcoml
loopne
cmpsb
pop
sti
shrb
imul
adc
fists
xor
pop
jae
cmpsl
inc
push
xlat
inc
xchg
cmp
adc
or
lods
ljmp
shll
lods
out
andl
jnp
stc
in
push
or
inc
or
push
sahf
pop
xchg
push
popa
fnstcw
pop
cmpb
mov
add
mov
sbb
inc
mov
mov
adc
inc
xchg
in
popf
cmp
fidivrs
notl
pop
pop
inc
and
hlt
arpl
pop
fwait
std
js
mov
jnp
xchg
push
gs
imul
xchg
movl
imul
jmp
mov
mov
cmpsl
sbbl
cltd
dec
stos
sub
cli
inc
and
xor
or
stos
sub
mov
adc
jo
sbb
fdivs
arpl
push
push
push
sub
add
or
xor
add
pop
or
push
fbstp
push
inc
mul
shll
jmp
mov
movsl
fsub
loopne
sbb
outsb
movsb
xor
sub
leave
push
add
inc
hlt
add
fs
ret
jbe
xchg
dec
ljmp
xlat
jbe
push
ret
arpl
adcl
jae
addr16
std
es
mov
repz
cltd
sbb
jl
push
in
test
inc
mov
jae
or
fiadds
and
jb
call
mov
jb
xor
add
lea
out
jmp
lret
stc
adc
inc
sbb
pop
ret
adc
mov
mov
test
cltd
sbb
mov
push
dec
insb
xor
jmp
adc
sub
dec
inc
idiv
mov
das
fs
pop
pop
popa
adc
adc
imul
sub
mov
dec
lret
mov
jge
subb
cmp
ret
lea
lea
dec
push
xchg
jns
cld
mov
jg
repnz
xchg
mov
shrl
or
cmpsb
and
or
dec
cmc
into
xchg
loopne,pn
popf
call
pop
dec
movsb
aas
lods
in
mov
mov
int3
add
cmp
dec
add
sar
popw
ret
das
out
dec
add
mov
xchg
ja
or
push
in
add
mov
or
rorl
shlb
sahf
and
mov
call
fmuls
mov
sbb
inc
cltd
lahf
stos
xchg
sti
test
cmp
inc
test
mov
pop
call
scas
cld
adc
stos
xchg
and
and
ds
repnz
mov
jmp
ret
notl
testl
add
push
cld
movb
call
mov
fwait
or
mov
push
xchg
movsb
add
jl
xlat
push
fstl
mov
sbb
scas
inc
out
stos
roll
or
adc
or
xchg
adc
icebp
mov
pop
xor
arpl
sbb
pushf
xchg
push
outsl
mov
and
push
sub
cmp
cmp
mov
insb
jge
push
and
movsl
cli
daa
dec
fists
psllw
mov
adc
outsb
xchg
push
lahf
jecxz
sub
add
sub
subb
imul
cmc
xchg
cmpb
std
xlat
xchg
cmp
pop
adc
decl
js
jne
repz
pop
aas
loopne
sub
pop
mov
fwait
add
mov
fimuls
push
nop
jmp
or
and
fldl
push
stos
ret
orb
daa
mov
aam
mov
xor
inc
adc
iret
sbb
loopne
scas
xor
cltd
ljmp
jg
jmp
jmp
dec
jo
mov
pop
jno
push
mov
pop
dec
pushf
aam
add
in
xchg
dec
subl
aam
pop
fwait
cmp
xorb
sub
fcmovnbe
xor
stos
into
push
sahf
adc
jno
lods
loope
pop
mov
or
pop
dec
insl
iret
leave
fwait
enter
jmp
das
ja
out
lahf
or
xor
sbb
mov
xor
jl
push
mov
cmp
add
dec
pop
mov
scas
mov
xor
jns
sub
xchg
sub
sbb
and
in
lahf
mov
mov
fs
or
cwtl
mov
pusha
push
addb
rorl
dec
jl
jge
orb
push
aam
mov
push
inc
stos
mov
jg
sbb
ret
sbb
adc
jne
sub
inc
cmp
xor
add
mov
xchg
test
mov
dec
scas
xor
dec
xor
outsb
push
dec
lret
inc
jnp
xlat
movsl
or
or
mov
sbb
fcompp
testb
push
jb
xchg
ljmp
mov
mov
add
repnz
lahf
mov
xor
sahf
xor
jp
mov
cmp
data16
std
add
enter
inc
cmpsl
outsl
pop
sub
ds
cwtl
or
pop
lret
xchg
stos
fs
test
cli
int3
pop
fisubrs
xor
loopne
mov
int
jmp
repz
mov
jo
add
dec
pop
lock
repz
shll
lahf
aad
in
sbb
lea
jg
dec
push
mov
jmp
icebp
xchg
out
js
mov
mov
les
rcrb
mov
aas
nop
sub
push
push
mul
pushf
fiaddl
movsl
out
or
popf
stc
jo
sbb
es
pop
fsubrl
ficomps
mov
pop
insl
psrad
xchg
xchg
xor
outsb
les
mov
and
ss
inc
pop
cwtl
push
mov
pop
mov
jecxz
gs
mov
in
and
lock
push
aas
arpl
sbb
xor
push
icebp
movsl
push
push
fldt
lahf
jb
pop
xchg
aam
scas
cmpsb
xor
into
pop
sbb
mull
out
flds
mulb
sbb
ret
cmp
mov
repnz
jl
xchg
mov
fistl
test
movsb
sbb
shrb
sbb
enter
popf
aad
ja
mov
xor
sbb
int3
xor
lock
aaa
jp
jnp
cmpl
in
repnz
sbb
test
xchg
dec
pop
divb
pop
scas
movl
lds
xchg
jmp
or
je
jecxz
mov
clc
loope
fidivrl
push
sbb
cmpsl
test
stos
rcll
mov
jne
xchg
pop
sub
fdivs
rcrb
shrl
int3
push
inc
loope
scas
fsts
inc
shll
mov
cmpsl
in
out
rcrb
dec
lret
test
push
stc
inc
sub
ret
mov
les
fdivl
add
xchg
dec
in
daa
rclb
mov
adc
xor
es
lcall
pop
dec
cli
shrb
mov
ret
pusha
fists
stc
mov
add
imul
dec
subl
je
cli
or
das
add
mov
aas
adc
jbe
call
cs
je
arpl
inc
jecxz
xchg
pop
push
int
jmp
fdivr
inc
sbbb
mov
out
and
push
or
fldenv
sbb
enter
push
mov
adc
lahf
ss
test
or
push
js
ret
jl
mov
lds
sbb
jmp
and
mov
jo
js
sti
stos
addr16
and
outsb
sti
xchg
pop
fstps
imul
adc
call
cmp
push
call
dec
add
inc
push
mov
push
cltd
mov
mov
sbb
adc
movsl
cmp
mull
popf
push
pusha
and
pop
cld
loopne
push
nop
test
movsb
ret
js
call
lds
imul
test
enter
seta
repz
jecxz
test
das
iret
or
int3
pop
or
in
arpl
xchg
cld
ss
sub
rcl
jnp
ds
fwait
cmc
inc
pushf
ljmp
sub
or
loopne
dec
inc
inc
sub
and
pushf
js
mov
icebp
mov
pop
jnp
push
jg
clc
mov
jnp
in
das
idivb
sub
popf
inc
in
cmp
mov
pop
aaa
adc
push
jo
jns
sbb
jnp
inc
shr
outsb
xor
sbb
add
pushf
or
outsb
adc
push
jge
push
jg
mov
adc
xchg
mov
push
cmpsb
dec
lock
cmp
fmull
xor
in
popl
call
pop
pop
aaa
jnp
jp
add
lea
sub
dec
iret
push
fdivrs
scas
sbb
inc
clc
sarl
inc
lds
cs
enter
and
adc
fs
dec
add
hlt
call
lds
cmp
lods
mov
pop
push
in
sub
adc
stc
ret
sub
xor
aas
je
aas
adc
xchg
push
inc
shll
clc
je
shlb
repnz
or
call
repnz
mov
cwtl
push
rorb
xor
lcall
xchg
icebp
shrb
mov
cmp
add
popa
lcall
ljmp
sbb
mov
andb
and
loopne
out
repz
xor
or
imul
xchg
xchg
cmpsl
in
int
sbb
das
xchg
popa
ret
dec
lahf
push
jp
sbb
jl
mov
jns
fiadds
cmc
loopne
jmp
popf
std
test
dec
sub
add
pushf
push
repz
sahf
add
sbb
push
xchg
div
dec
jo
dec
int
push
push
and
in
aad
adc
hlt
push
inc
cli
fimuls
dec
mov
rclb
lret
pop
scas
jne
loopne
add
lret
cmc
jg
rolb
cld
mov
jo
rol
and
cwtl
cmpsl
jne
cs
jge
cmp
into
push
sub
jge
sbb
fs
insb
push
pop
pushf
pop
shl
aas
icebp
push
push
push
push
fs
pushf
mov
inc
movsl
jmp
stos
lods
test
addr16
icebp
or
inc
xchg
add
ret
and
xchg
icebp
fsubr
add
mov
mov
mov
add
js
loopne
jp
scas
inc
pop
sahf
std
in
pop
in
ret
push
and
les
aad
test
mov
testb
jne
rol
mov
cltd
sti
movntq
out
jns
or
repnz
repz
mov
leave
iret
shl
cli
ror
dec
out
xchg
bound
xchg
jo
faddp
bound
imul
mov
insb
out
adc
arpl
or
jmp
cmp
push
leave
pcmpeqw
ds
test
and
sub
xchg
pop
cmpsl
shll
jo
lret
pop
cli
lods
cld
pop
clc
cmpsb
js
out
sbb
pop
dec
pushf
mov
decb
inc
loop
xchg
sbb
out
pop
and
inc
imul
mov
push
adcl
outsl
sbb
jge
push
xlat
cmp
es
aaa
add
cmp
mov
clc
pop
xor
sub
xor
mov
movsb
push
adc
jno
ret
pop
loopne
repz
or
xor
hlt
fldenv
test
dec
lock
mov
add
jmp
bound
xor
add
out
dec
div
sbb
aad
adc
jmp
lds
sub
lock
jmp
ds
mov
mov
lods
mov
cmp
pop
bound
inc
add
pop
xor
loope
sub
push
out
inc
cmp
pop
mov
faddl
push
jb
out
cmp
dec
sbb
pop
loopne
pop
xlat
jp
test
cld
dec
cwtl
std
sub
data16
sub
xchg
test
pop
mov
pop
je
inc
or
into
subl
xchg
inc
dec
jmp
pop
sbb
xchg
and
mov
ljmp
iret
xor
dec
adc
mov
pop
mov
inc
fdivrl
lock
push
mov
mov
xchg
pushf
cmp
lods
push
xchg
xor
int
stc
inc
push
jmp
push
mov
xchg
fs
push
ja
mov
pop
sbb
movsb
or
cmpsb
daa
scas
dec
add
hlt
ss
mov
inc
xor
jnp
cmpsb
popa
add
sbb
loope
jno
notl
mov
pop
call
sbb
mov
push
jae
loope
jno
in
ljmp
and
in
inc
add
rclb
sub
xor
pop
pop
mov
sarb
les
push
xchg
scas
addl
out
inc
inc
aad
fcoml
pop
into
sub
or
xlat
sub
and
icebp
and
jae
sbb
aam
movsb
push
in
mov
inc
pushf
xor
movsl
cmp
clc
inc
add
repnz
pop
mov
pop
pop
mov
push
decb
add
mov
or
pusha
in
movsl
cmp
movsl
mov
js
mov
lret
loope
push
pushl
repz
repz
cmp
in
push
sar
lahf
cmp
jmp
sti
outsl
jno
cmc
or
fadd
jmp
push
and
mov
dec
sarl
pushf
leave
inc
sub
xor
cli
hlt
repnz
sub
lock
mov
mov
add
mov
mov
loope
fdivrs
dec
xchg
and
sbb
repnz
outsb
jle
lcall
sbb
aas
mov
in
nop
subb
test
pop
adc
jne
pop
ds
push
addl
cmp
dec
dec
hlt
jbe
daa
and
mov
push
inc
xchg
int
add
or
jae
or
idivb
xchg
jmp
xor
sbb
aaa
adc
insl
mov
stc
ret
aam
daa
pop
jns
xchg
subl
fnstsw
into
and
fsubrs
mov
es
jle
sub
inc
and
int3
shlb
adcl
and
decl
mov
pushf
hlt
sbb
push
testb
push
cld
and
cmpsl
sub
dec
and
inc
aad
mov
mov
push
repz
addb
mov
lods
dec
bound
clc
mov
mov
xchg
sbb
iret
bound
adc
adc
leave
icebp
addr16
pushl
aad
stc
xor
sub
mov
lea
xchg
out
bound
cmc
dec
addb
test
pushf
fldl
sbb
pusha
outsb
xchg
fs
cs
sbb
aam
stos
mov
jmp
in
push
cmpsl
clc
scas
std
xor
andb
adc
jecxz
sub
lock
cmp
out
pop
pop
pop
inc
pop
ss
xchg
sahf
and
scas
sub
jl
inc
mov
loopne
inc
int3
lods
cmp
sbb
lea
xor
arpl
mov
lahf
es
push
inc
pop
out
sar
shlb
mov
mov
and
and
fwait
mov
mov
leave
popa
mov
sbb
jno
mov
int3
inc
xor
pop
mov
jne
dec
xor
repnz
fcmovbe
lret
repnz
dec
cli
cld
popf
lahf
ret
pop
push
push
or
xchg
jo
adc
add
mov
cmp
cmpsb
lcall
sahf
push
or
mov
or
add
jno
push
add
cli
fwait
jno
pop
mov
add
xor
mov
sahf
or
ds
les
mov
adc
or
mov
push
pop
scas
mov
aas
and
jb
xchg
cmp
xchg
das
cmp
jb
iret
les
fwait
push
shr
push
xor
stos
lds
lock
pusha
cmc
mov
ss
push
xor
mov
loopne
sbb
shll
push
dec
push
dec
or
pop
adc
mov
jno
xchg
stc
call
xor
icebp
test
clc
pop
das
scas
or
cmp
adc
add
test
inc
mov
lahf
pop
test
xchg
add
pop
aaa
add
test
push
mov
nop
mov
mov
test
or
jns
daa
rclb
lock
bound
iret
mov
sarb
mov
cli
jbe
ret
mov
hlt
fisubs
dec
dec
pop
idivb
outsl
cmc
dec
fidivrs
inc
push
cltd
xchg
add
adc
xor
pop
cmpsl
in
cs
hlt
ss
mov
mov
cmp
and
js
cmpsl
ror
push
addr16
jns
sbb
in
movsb
and
out
mov
lcall
push
lret
mov
ds
sbb
andb
sarl
sbb
add
dec
movsl
aaa
movsb
adc
jg
adc
or
in
nop
mov
insb
push
cwtl
xor
pop
dec
or
pushf
add
fnstcw
mov
lea
ret
and
adc
mov
jne
stos
out
std
js
cwtl
std
lret
xchg
pop
nop
and
fstl
iret
jae
lock
lcall
rorb
dec
or
aad
aad
stc
sub
into
mov
mov
mov
daa
fildl
movsl
mov
mov
popf
aad
mov
fistpll
or
dec
xchg
setne
push
insl
sub
push
shll
gs
testl
lret
bnd
push
mov
xor
mov
addr16
xchg
mov
cmp
int
mov
cmp
or
fwait
mov
data16
inc
mov
mov
in
push
adc
push
add
sti
xchg
repz
sub
or
xchg
mov
lds
test
lahf
jp
push
mov
cmc
push
or
pop
test
loop
sbbb
sbb
jmp
sbb
adc
call
sbb
sub
cmpsl
iret
nop
xchg
dec
adc
cmpsb
ljmp
xchg
cs
xor
or
mov
pslld
mov
push
pop
add
movsl
xchg
pop
add
adc
in
sub
cmp
jae
hlt
pusha
or
jp
data16
xchg
out
jg
into
in
jp
dec
flds
push
mov
dec
sti
xchg
xchg
roll
sbb
dec
xchg
or
jmp
les
push
adc
cmp
jg
push
stc
out
leave
push
xor
add
sbb
sti
xchg
pop
bound
rcr
aas
divps
adc
mov
add
lret
loope
jle
movsb
pop
xor
fisubrs
push
mov
add
pop
loope
adc
or
mov
dec
and
inc
sbb
dec
push
leave
add
pop
sub
shl
fwait
add
mov
cs
test
mov
pop
dec
inc
xor
ss
gs
mov
pop
lods
mov
jl
outsl
pop
in
cmp
jo
sub
sub
repnz
outsb
add
xchg
fnstcw
pop
rolb
jno
loopne
cmp
imul
push
lods
or
fadds
orb
cmpsl
or
pop
adc
push
xor
push
das
dec
jle
in
push
cmp
leave
pop
in
sahf
pushf
in
test
sahf
adc
fwait
lret
pop
rcr
enter
push
lock
sahf
in
adc
imul
jle
fdiv
or
adc
scas
cmp
sub
movsb
hlt
sbb
adc
ja
out
ljmp
sbb
mov
je
mov
adcl
xlat
out
scas
out
mov
loopne
popf
mov
subb
test
lock
push
icebp
xor
pop
stc
rolb
movsl
call
pop
out
aas
mov
jl
push
jbe
push
adc
jp
call
mov
mov
xor
dec
mov
mov
push
mov
lcall
inc
and
and
je
test
js
iret
dec
imul
addr16
nop
mov
aam
aam
cltd
mov
jl
xchg
xchg
repz
mov
cmpsb
mov
lea
clc
jmp
jb
mov
loopne
shl
or
jns
sbb
icebp
xchg
dec
add
sub
pop
loopne
push
push
adc
movl
mov
jmp
mov
rol
xchg
out
aad
js
push
inc
push
xchg
out
in
dec
pop
iret
jnp
mov
movsb
out
push
pop
in
cmpsl
mov
imul
ret
shr
rcrb
push
test
add
je
mov
cltd
js
shl
push
in
call
mov
leave
loop
cmp
add
int
insl
sbb
pop
xchg
addr16
ret
out
mov
and
or
ror
pop
adc
lods
jae
fsts
ja
sub
shr
lret
sbb
xorb
or
xor
cld
popf
push
cld
das
mov
cmp
scas
out
in
lods
aaa
inc
imul
iret
mov
fdivs
mov
push
cmpsl
mov
mov
xchg
sbb
bound
pop
mov
popa
push
jno
shrl
hlt
stc
mov
sub
imul
sbb
icebp
enter
pusha
cwtl
rcrl
les
pop
mov
lahf
rorl
mov
les
outsl
mov
ret
loop
push
add
mov
jecxz
adc
push
fisubs
leave
rcr
push
les
nop
mov
jg
imul
das
or
and
or
mov
movsl
js
test
pop
movsl
in
pop
and
sbb
imul
push
push
cmp
xchg
out
arpl
fst
inc
jg
or
mov
xor
mov
mov
out
cmpsb
in
mov
cwtl
jns
mov
lds
les
nop
lods
push
cmp
add
mov
ret
xchg
in
inc
mov
repz
jl
out
push
addb
push
sub
pop
fists
rclb
pop
jns
xor
ret
mov
xchg
mov
ss
cltd
pop
push
lods
cmpsb
mov
sbb
xchg
les
mov
sub
insb
sbb
aam
loopne
or
out
xchg
aad
add
pop
loope
xchg
xchg
and
sub
jns
arpl
sub
pop
xor
sbb
xor
cmp
inc
inc
test
pushf
aas
int
js
cmp
or
call
jne
inc
dec
xchg
lret
mov
add
mov
movd
fidivrs
xchg
ss
movsb
fistpll
push
add
lcall
mov
idiv
adc
notb
pop
pop
push
xchg
mov
aaa
adc
in
xchg
mov
jmp
lods
sub
in
icebp
mov
lcall
cmp
imul
mov
xchg
fsubp
rcrl
lods
test
add
add
xchg
jne
mov
rorb
mov
lea
mov
gs
fmuls
add
sbb
push
dec
addl
pushl
iret
loopne
mov
aas
cmc
stos
lret
mov
pop
repz
fldenv
jge
mov
lcall
xor
sarb
mov
jp
xor
in
in
push
mov
lds
aas
adc
lods
pop
cltd
pop
int3
daa
pop
or
pop
xchg
push
std
pop
stc
mov
mov
xchg
fdivrl
out
cltd
in
xor
sub
inc
sarb
sbbl
dec
hlt
xchg
ss
pop
inc
call
push
outsl
in
movsb
push
pop
icebp
loope
jo
fcmovb
sub
repz
pop
add
dec
cmp
cli
mov
sbb
sbb
xor
push
adc
inc
jmp
mov
jl
lods
call
push
xchg
imul
outsl
mov
ss
inc
test
cmp
cmp
adc
push
popf
jne
lahf
aas
jg
push
pop
xor
add
mov
iret
mov
repz
pop
adc
movsb
sub
sbb
mov
push
test
mov
inc
dec
jmp
pop
lods
dec
sub
sub
or
pop
scas
loop
mov
and
ja
push
jle
cmp
jl
pop
pop
or
sub
mov
cltd
stc
pop
xchg
jg
xor
bound
jno
jp
les
inc
rorl
lods
and
mov
add
les
mov
sbb
inc
push
mov
inc
cli
arpl
cmpb
cwtl
icebp
xor
pop
xchg
sbbb
xchg
stos
popf
rcrb
mov
les
ljmp
rolb
mov
movsl
sbb
mov
dec
std
xor
fcos
jno
imul
mov
mov
lock
call
call
aam
clc
sbb
jne
pop
mov
mov
icebp
mov
push
lahf
insl
cmp
scas
sbb
xchg
jp
xchg
popa
xor
stc
les
or
push
and
add
jmp
ja
jns
push
push
push
mov
adc
rorb
fidivl
jbe
gs
fisttps
jne
mov
aam
mov
mov
push
loope
jg
loopne
std
add
xchg
and
xchg
jo
dec
fdivs
cmp
rcrl
lock
jmp
or
sti
popa
mov
pop
push
add
pop
push
xchg
cmc
cmp
xor
gs
scas
stos
cmp
inc
mov
add
test
sbb
lret
sub
sbb
cmpb
mov
jns
push
fs
idivl
inc
and
imul
cmp
fwait
and
ljmp
movsb
inc
lock
popf
push
mov
mov
sub
repz
loope
adc
popl
mov
aad
pop
mov
in
push
orb
rorl
test
outsl
mov
or
in
xchg
mov
mov
mov
in
pop
jb
sbb
xor
lret
loop
cmp
int
testb
sub
repnz
or
call
pop
fbld
add
sub
pop
pop
jecxz
je
loopne
inc
imul
lods
inc
js
lret
push
ja
cs
mov
lods
js
lds
fldl
pop
fbld
nop
inc
lcall
fmull
jae
mov
pop
adc
fs
fwait
sbb
shl
inc
jge
cwtl
push
cmc
lret
add
and
aam
mov
jmp
mov
mov
jnp
movl
jb
sbbl
sbb
mov
mov
cmp
xchg
fcoms
push
imul
out
add
sahf
xchg
inc
popf
mov
js
dec
inc
hlt
cmp
jne
inc
and
cld
push
cli
fstpl
mov
pop
mov
mov
add
cmp
add
icebp
out
daa
push
imul
mov
mov
sbb
inc
rep
sbb
int3
lods
lret
jae
insb
iret
inc
int3
decl
cmp
popa
jnp
mov
loope
call
ja
aas
mov
int
orb
lret
mov
dec
pop
es
jo
popa
push
mov
shrb
sbb
cmp
lahf
xor
sbb
mov
pushf
cli
mov
add
test
pop
mov
add
shl
cltd
dec
mov
xchg
lahf
shll
shl
and
hlt
ret
shll
cmpsb
mov
jge
or
jmp
mov
int
add
jmp
in
lcall
inc
inc
inc
pop
xor
jns
popa
cmp
sbb
add
shrl
daa
sub
popa
inc
mov
mov
cli
test
mov
inc
or
mov
cld
imul
xchg
and
dec
sub
imulb
cli
adc
pop
ja
mov
sbb
je
mov
std
pop
in
push
shl
push
add
ror
push
mov
push
sarb
in
adcl
xchg
and
ret
pop
std
push
cmp
shlb
cmp
cs
mov
mov
fwait
mov
inc
in
sbb
inc
or
mov
aaa
and
test
mov
in
add
rclb
mov
lret
or
imulb
cmp
mov
inc
xor
mov
push
push
sub
loope
and
cmp
mov
dec
ret
sti
hlt
or
testl
dec
or
mov
and
cmpsl
push
sub
int
ds
jae
enter
add
loopne
in
sub
xchg
stos
xchg
in
and
pop
xor
inc
fidivs
inc
pop
ret
fistpl
add
dec
clc
lods
or
shl
cld
inc
out
and
fsts
add
sub
inc
mov
xor
cmp
ja
std
call
popa
mov
xor
xchg
sarl
je
sub
mov
pop
sbb
sbb
sti
test
xlat
xchg
daa
pop
repnz
call
add
sub
daa
in
out
pop
dec
push
fsubl
jl
jecxz
push
rclb
ret
push
cmp
int3
pop
sub
lret
inc
adc
or
sbbl
ret
mov
pop
nop
dec
mov
pop
je
imul
cmp
pop
xchg
xchg
jmp
xchg
pop
mov
int
pop
add
push
movsb
inc
test
ret
and
les
pusha
adc
nop
mov
loopne
int
xor
and
mov
scas
out
mov
mov
lahf
mov
aas
cltd
dec
dec
popa
sbb
xchg
or
push
dec
add
pop
lahf
dec
jecxz
fldenv
test
hlt
xor
shrb
je
int3
rclb
or
add
sub
jae
loope
sarb
mov
int
push
xlat
jb
push
xlat
xor
in
or
int
imul
scas
das
aaa
push
cmp
push
push
jp
xor
aas
xchg
daa
pop
mov
and
xor
inc
cmp
negl
dec
add
and
mov
xor
scas
lret
push
adc
movsl
xchg
mov
or
mov
fdivrl
inc
cmp
mov
jmp
inc
into
fisttpll
and
lea
xor
push
shrl
pop
mov
daa
int
std
xchg
sbb
add
call
xorb
push
add
xchg
cmp
ffreep
imul
cld
in
inc
fists
xlat
insl
xchg
push
stc
jge
lods
push
adc
aas
dec
xor
mov
push
aad
xchg
xchg
mov
daa
and
ds
mov
leave
sbb
int3
orl
mov
lret
mov
popa
je
outsl
jl
in
inc
xor
movb
jge
lret
aas
xchg
into
xchg
fwait
dec
ficompl
data16
adc
lea
and
in
adc
jne
scas
jecxz
mov
jnp
xor
fsts
popf
mov
fs
out
push
sbb
add
inc
imul
mov
loopne
mov
es
dec
clc
fdivs
mov
addr16
in
outsb
fisubrl
pop
sbb
push
cld
adc
fstps
push
jne
inc
js
xchg
hlt
cs
fisttpll
mov
nop
and
mov
xchg
loope
mov
insl
inc
dec
adc
int3
cmp
in
in
cmp
rorb
mov
xchg
xchg
cmpsb
mov
push
in
push
mov
mov
stc
push
adc
adc
and
inc
test
push
ss
cmp
rcr
dec
loope
ficompl
lahf
int
paddusb
xor
push
push
not
fsubs
xchg
out
mov
mov
push
sub
ss
sbb
sub
fstpl
inc
je
bound
mov
movsb
loop
ja
or
insb
es
gs
sub
push
mov
push
test
add
mov
js
addr16
xchg
adc
sub
jno
cmc
inc
push
xchg
cmp
mov
cmp
cs
aas
daa
inc
cmp
mov
add
cmp
adc
notb
mov
push
and
ljmp
pop
es
push
add
out
mov
push
bound
scas
loope
test
aad
clc
fnstcw
mov
push
loop
lock
cmp
cld
push
adc
rcr
dec
add
sbb
jbe
mov
cltd
adc
push
add
adc
push
repz
mov
push
lret
sub
insl
icebp
dec
or
jbe
arpl
sbb
mov
icebp
test
pop
outsl
push
idiv
inc
loopne
lods
mov
fsubrs
cmp
or
and
aas
sbb
or
mov
int
out
push
adc
pop
mov
dec
xor
aam
out
pop
sbbl
or
mov
push
sub
out
jge
cmp
xor
pop
mov
dec
dec
push
xchg
bound
jb
push
xor
push
cmpsb
jg
addr16
fiaddl
and
out
call
mov
repz
mov
inc
add
xchg
xchg
mov
sahf
movsb
sub
dec
repz
inc
out
ss
js
adc
lahf
push
or
ficoml
insb
jg
sbb
dec
scas
popf
stos
cmpb
inc
and
ret
mov
jmp
call
xor
das
pop
in
insl
aam
push
cmp
in
jnp
sbb
loopne
lret
cwtl
and
jns
je
int3
push
mov
fs
flds
std
sarb
xor
sub
loop
sarb
scas
adc
and
rclb
aam
xor
leave
push
test
fsubrl
ja
es
mov
enter
mov
mov
push
pop
dec
hlt
lds
dec
shlb
xor
xor
sbb
pop
cmp
mov
pop
ss
jbe
and
pop
mov
cmc
cli
adc
ja
jae
cmc
jne
ss
ret
jns
orl
push
cli
popf
mov
sbbl
cwtl
test
inc
idiv
repz
xor
jb
lcall
sbb
push
or
xchg
pop
inc
aam
shlb
aas
dec
sbb
fcoml
adc
repnz
adc
xchg
mov
xchg
test
push
push
sbb
mov
and
jmp
mov
js
out
stos
sbb
cld
or
lock
jl
sti
aaa
scas
sub
out
xor
push
loopne
pop
in
int3
test
xor
iret
ss
out
xchg
das
jbe
pop
push
repnz
es
mov
cmpsb
call
inc
cmp
bnd
or
lret
push
mov
std
push
incb
cmp
or
mov
out
push
or
shrb
in
test
loopne
push
sub
adc
inc
xchg
ret
jno
jp
cmp
movsl
mov
dec
sbb
add
mov
inc
push
leave
add
ds
and
fdivl
sub
lcall
arpl
push
add
mov
mov
test
jnp
aas
lahf
jb
add
jb
cmp
mov
lds
movsl
hlt
cmp
xchg
stc
and
xlat
loopne
mov
out
inc
rcrl
xchg
and
push
push
cmp
sub
rorb
ljmp
test
mov
and
test
icebp
mov
sub
mov
aaa
ljmp
and
cmp
cwtl
sbb
js
ss
in
in
sub
movl
sbb
sti
push
adc
mov
cmpsb
jbe
fistl
out
push
loop
loopne
or
faddl
or
mov
scas
ljmp
call
push
out
cmpsb
mov
lret
dec
orl
xchg
mov
push
leave
mov
je
dec
and
es
mov
add
mov
movsl
mov
push
xor
sub
out
lret
sahf
mov
test
add
subl
pusha
push
mov
fsubp
mov
jbe
hlt
clc
rorl
je
cmc
jge
test
fstl
in
es
cwtl
rolb
mov
icebp
jne
push
inc
jg
pop
push
pop
pop
pop
mov
mov
shll
pop
ret
sbb
shrl
push
leave
fisubl
or
jb
jle
jecxz
cmpsl
mov
push
call
mov
push
ror
jle
mov
sub
dec
pushl
pop
pushf
sub
out
mov
roll
sbbb
sbb
imul
sub
subl
movsb
in
add
pop
push
jl
shll
add
inc
mov
jmp
pushf
jp
int
mov
popf
into
add
jne
add
cld
xlat
loopne
cmp
loopne
clc
imul
fistl
insb
dec
or
test
jns
and
and
test
add
add
xor
mov
dec
xchg
dec
daa
or
arpl
addl
cmp
push
jg
cmp
lods
xor
push
sub
mov
mov
orb
cmp
or
jns
push
xchg
stos
out
adc
sbb
ja
dec
mov
stos
inc
lret
and
in
or
inc
scas
je
jns
add
loope
fsubrs
sbb
push
jo
xchg
cmc
adc
rorb
dec
andb
pop
mov
dec
insl
pop
push
out
fcmovbe
cmpsl
cltd
pop
sbb
mov
inc
fmuls
inc
pop
pop
jns
jmp
scas
sbb
push
lock
mov
mov
cmpsb
jb
or
inc
jg
push
outsl
dec
mov
sahf
and
lods
cmp
loopne
das
adc
rcr
outsb
addb
jg
or
lds
xor
shlb
dec
inc
out
cmp
push
mov
mov
xor
enter
arpl
push
hlt
fnstsw
and
xchg
stc
ss
xchg
xchg
jbe
mov
pop
push
pop
push
or
xor
pushf
inc
pop
cmp
inc
mov
adc
add
xor
adc
cltd
aaa
ljmp
push
mov
ficoms
mov
inc
jle
test
iret
mov
ds
mov
insl
in
push
arpl
outsb
pop
inc
fs
cmpsl
inc
inc
aaa
or
enter
ret
or
popf
cld
dec
mov
push
mov
pop
jne
idivb
popa
ret
addb
push
xchg
mov
mov
lcall
dec
add
xorps
or
lods
inc
or
cmpsl
cwtl
popa
gs
mov
or
pop
or
mov
mov
jne
mov
ljmp
sub
shl
ret
fwait
pop
cli
lds
xchg
xchg
shll
ret
push
adc
sahf
addr16
cld
lock
push
lods
push
bswap
in
inc
cmp
insl
dec
std
out
lds
push
icebp
add
dec
fiadds
leave
roll
cmpsl
xchg
jge
outsl
pop
sub
loope
and
adc
sbb
push
xlat
push
sub
cli
or
pop
test
insl
rorl
mov
popf
lcall
cmpsb
sti
pop
mov
pop
lcall
fwait
jmp
add
insb
push
pop
push
icebp
sti
popf
movsl
fwait
sbb
rcll
scas
and
inc
orb
fstps
insl
pop
cmp
stc
push
cwtl
lea
test
dec
neg
call
adc
mov
jge
and
jns
test
jb
test
push
and
lds
cmpsl
pushf
mov
cs
es
or
mov
cmpsl
dec
push
mov
cs
push
sbb
cmc
xchg
jbe
push
jmp
jne
fldenv
repnz
pop
arpl
xor
push
sub
scas
push
cmc
jnp
stos
outsb
xchg
cmp
sarb
rclb
dec
out
je
add
pushf
mov
mov
insl
push
push
lcall
xchg
lods
and
rcll
popa
dec
pop
leave
sbb
sub
sbb
fs
enter
and
jle
das
add
ja
outsb
push
fnstsw
nop
rcrb
jmp
fildl
mov
jno
sahf
shl
inc
push
push
sbb
nop
out
or
fs
out
ficomps
mov
js
mov
push
cwtl
push
movsl
xchg
mov
pop
jo
fdivl
pop
pop
jae
cmpsl
sbb
mov
nop
adc
push
daa
dec
cmc
mov
fsubl
loope
xchg
and
fstps
mov
cwtl
or
push
mov
in
xor
lret
sbb
fs
movsb
ljmp
aam
sub
push
lds
insb
pushf
or
pop
mov
cmc
cli
pop
push
ret
cmp
movsl
adc
xor
xorl
pushf
xchg
dec
repnz
push
add
adc
pop
push
or
fcmovb
and
mov
outsb
jno
dec
outsl
testl
int
jno
xchg
movl
lea
add
gs
fidivrl
mov
or
dec
cmp
mov
lds
pop
add
imul
pusha
rcll
movsl
and
sub
xorb
xchg
aad
arpl
pop
in
ljmp
notb
clc
bound
mov
and
mov
scas
cmpsb
xchg
cmp
lcall
enter
cmp
out
lret
sarb
cmp
cmp
pop
push
in
cs
mov
add
sub
add
xchg
mov
xor
or
in
lods
sbb
out
shl
sbbl
mov
mov
jmp
je
cld
xor
lds
and
dec
out
jo
push
pop
mov
cmp
pop
and
cmp
das
nop
arpl
push
xor
jg
mov
cmp
mov
fsub
sub
sub
inc
shll
lds
sub
popa
xor
clc
fdivs
repnz
dec
sub
lret
fstpt
add
and
fdivrp
test
subb
xor
xchg
cmc
fildll
test
fwait
adc
jnp
lahf
ror
sbb
loop
sub
xor
sub
inc
jae
je
xchg
push
push
adc
and
adc
maskmovq
imull
push
xchg
cld
pop
das
pop
push
xchg
dec
mov
xlat
cld
test
scas
jl
std
sbb
pop
sub
mov
mov
and
pop
xlat
jecxz
push
sbb
in
xor
rcrl
xor
jno
into
pop
lcall
mov
lcall
stc
movsb
push
nop
repz
xchg
mov
je
dec
pop
xor
enter
and
dec
xor
int3
addl
mov
mov
dec
insl
and
mov
popf
bound
mov
mov
sub
xchg
arpl
fistpll
mov
loopne
iret
cmp
pop
or
test
jecxz
mov
dec
cmp
inc
sbb
dec
imul
std
js
jo
gs
lret
test
aad
jl
enter
and
gs
ljmp
mov
test
movsb
loope
adc
cltd
mov
add
addr16
push
lock
nop
sub
xchg
sbb
pop
lcall
fisubs
jo
loopne
mov
clc
mov
jbe
fwait
xlat
pop
dec
lret
in
sub
sbb
cmp
out
adc
scas
cltd
cmova
movsb
aad
or
test
sub
aas
aad
pop
or
jge
push
mov
pop
xchg
std
cwtl
mov
xchg
cmc
xchg
jns
pop
imul
xchg
loope
jae
push
dec
leave
cmp
add
add
pop
pop
lcallw
pop
cmpsb
out
push
mov
jbe
xchg
pusha
ds
sbb
push
enter
inc
and
iret
aad
fwait
add
or
xor
arpl
notb
jne
ret
loope
mov
and
dec
and
movsl
lahf
int
dec
aaa
sbb
jge
and
fsub
je
lods
adc
mov
add
bound
pushf
xor
pop
in
jmp
or
add
inc
js
in
pushw
jmp
cmp
push
mov
or
mov
and
adc
sbb
cmp
lcall
loop
lahf
mov
dec
inc
cmp
in
fcoml
mov
xchg
sbb
adc
push
dec
or
add
push
inc
pop
jae
scas
inc
movsl
adc
push
push
std
data16
xchg
lods
adc
ret
jge
inc
sub
add
hlt
pop
movsl
or
sbb
jne
mov
xchg
cmp
push
das
aas
xchg
inc
push
jl
dec
bnd
jp
cmp
jne
add
push
xorl
adc
imul
jno
push
pop
rcr
hlt
jg
out
lds
mov
or
out
sub
arpl
incl
inc
xor
jo
repz
cmp
leave
add
lcall
fstl
mov
cmp
out
cmp
push
repz
pop
xchg
lret
mov
jb
into
hlt
push
enter
jp
pushf
mulb
mov
mov
in
movsb
jo
hlt
mov
mov
insb
cmc
xor
les
shll
inc
stc
or
inc
cmp
xchg
pop
push
xchg
mov
add
jb
adc
cmpsl
popf
jb
mov
and
out
out
rolb
test
es
mov
pop
cli
inc
jecxz
mov
scas
jle
jne
sub
push
daa
cltd
xchg
clc
sbb
sahf
mov
adc
jecxz
jg
ljmp
out
push
mov
xchg
adc
popa
mov
bnd
mov
push
mov
pop
jmp
pop
xchg
iret
pop
sub
test
inc
push
mov
je
pop
ja
adc
adc
sub
xor
shlb
dec
insb
push
xchg
jne
insl
inc
sarb
jb
push
out
inc
jl
pop
jp
test
jl
test
jo
adc
in
or
jl
mov
or
mov
out
stos
rorl
mov
add
jp
inc
inc
and
mov
adc
cmp
lret
dec
scas
enter
add
push
mov
inc
xchg
pop
pop
and
sub
cmp
jns
lcall
dec
lods
loopne
xchg
cmpsl
sti
fcoml
mov
sub
inc
in
mov
cli
fistpll
add
call
cmp
mov
mov
sub
dec
neg
jbe
inc
jno
xchg
add
int3
or
js
fs
dec
push
aam
bound
dec
rorb
adc
sarl
int3
inc
push
or
int
shlb
cmp
xor
lea
and
xor
inc
xor
loope
mov
scas
lea
ret
pop
pop
and
xor
mov
add
adc
sbbl
jp
lods
xor
js
lock
jbe
dec
mov
popa
sub
xchg
in
das
sub
mov
xchg
ffreep
aaa
and
push
out
pop
movsl
insb
stos
out
cmp
js
push
xor
mov
mov
stos
xchg
xchg
daa
test
jp
adc
pop
in
push
dec
adcb
push
adc
mov
mov
pop
mov
jge
dec
inc
scas
push
mov
mov
mov
push
add
mov
repz
mov
push
push
pop
das
andb
mov
stos
mov
cmpsl
jg
xchg
adc
and
sbb
test
test
push
pop
add
jp
xchg
sub
cmpsb
sbb
sbb
mov
cs
daa
in
pop
bound
es
in
lock
int3
jge
sbb
sbb
mov
lods
xchg
xor
gs
xchg
lea
cmp
sbb
out
clc
ja
push
int
dec
repnz
mov
lods
in
fcoml
add
lret
daa
add
mov
rcll
ja
mov
mov
sbb
popa
adc
aas
addr16
mov
cmp
adc
cmp
lods
push
jge
jbe
movsb
jl
push
xchg
shrb
lcall
fidivl
sbb
fidivrs
out
into
clc
insb
imul
sub
jb
psubsb
dec
jl
and
cmp
xchg
push
cmpsb
push
popa
jb
out
mov
aas
fs
stc
fwait
mov
cmp
mov
in
adc
add
push
cmp
mov
jne
sub
stc
jmp
sti
negl
daa
jae
and
cmc
xchg
xchg
movb
sbb
loopne
test
pop
push
icebp
data16
mov
xor
icebp
outsb
les
push
lock
push
and
into
jecxz
mov
pushf
push
cmp
jmp
pop
repnz
imul
fnsave
cmp
fwait
test
push
add
cltd
mov
andl
cmp
cmpsb
push
or
mov
clc
es
adc
xchg
jg
rorl
pop
sbb
xchg
xor
and
std
mov
and
dec
scas
pop
hlt
rolb
stc
mov
idiv
sbb
add
bnd
push
or
jae
int3
jo
dec
mov
mov
cmpsl
shrl
adc
push
add
push
push
mov
xchg
inc
and
xchg
and
add
inc
cmp
jg
push
cmp
cmpl
arpl
rorl
outsb
xchg
jb
clc
movsl
pop
mov
pop
shr
inc
xchg
shr
loopne
add
fsubrl
repz
push
fsub
pop
mov
cs
imull
lret
ja
mov
push
ret
or
imul
fsubs
xchg
fcompl
mov
xor
imul
mov
in
add
test
and
repnz
push
fnstenv
mulb
adc
sbb
push
inc
push
mov
dec
cmpsb
ljmp
es
pop
leave
rcll
pop
xor
popf
insl
dec
dec
and
cli
shrd
cli
pop
test
cmp
sbb
out
mov
cli
lret
pushf
fadds
cmpsl
in
and
loope
stc
pushf
inc
mov
jbe
sarb
push
push
in
xchg
rcr
xor
sub
adc
jbe
mov
jecxz
push
push
into
pop
aaa
cmpsl
pop
inc
sub
adc
mov
dec
jae
dec
xchg
out
call
rep
adc
push
and
mov
movb
out
stos
mov
jns
scas
push
outsl
xor
push
jnp
aas
or
xchg
sti
scas
push
xchg
sub
sti
xchg
iret
xor
fwait
pop
sbb
inc
int
dec
fisubrs
add
cwtl
jbe
sub
imul
nop
sbb
jmp
ret
mov
mov
scas
int
fisttpl
push
mov
out
enter
and
lods
into
jge
mull
movsl
faddl
inc
jg
icebp
aaa
lret
or
ffree
cmpsl
sub
dec
cmp
add
mov
pop
mov
ljmp
idivl
leave
sub
sti
and
sub
outsb
movsb
sti
sbb
mov
adc
inc
push
decb
xor
mov
mov
test
rcrl
or
ljmp
sub
dec
dec
sub
out
mov
loopne
sbb
xchg
or
test
xchg
rcrb
adc
sahf
enter
sahf
jg
dec
movsl
and
push
mov
dec
aam
or
aam
mov
lods
testb
push
ds
insl
and
rcll
xchg
out
shll
adc
mov
fidivl
fldcw
mov
and
jecxz
mov
bound
daa
stos
orb
iret
mov
mov
add
mov
pop
xchg
inc
xchg
xchg
stc
mov
int3
sub
mov
fcmove
pop
and
cmpsb
push
add
inc
add
add
repz
or
out
lea
bswap
lea
cs
gs
loope
dec
dec
rorl
in
pop
xchg
jl
scas
sbb
loopne
sbb
sbb
jle
mov
sub
push
mov
push
scas
pushf
adc
jne
sti
out
xchg
dec
lods
mov
imul
in
or
sbb
sbb
stos
clc
ds
test
dec
or
jns
movsb
test
arpl
inc
xchg
cmpb
mov
repz
adc
in
pop
outsb
test
pop
dec
xchg
int
or
in
arpl
loope
sub
insb
fsub
push
mov
cmp
pop
jns
jp
lds
push
and
sbb
in
in
jl
sub
call
add
mov
inc
dec
es
adc
mov
dec
mov
sti
pop
test
sub
enter
stos
add
sti
xchg
jge
cld
call
and
push
jge
ftst
es
adc
sbbb
add
jg
jns
pop
ljmp
fldt
je
repnz
dec
leave
inc
add
dec
add
inc
das
dec
test
push
in
pop
mov
shlb
stos
mov
stos
cmpsl
and
hlt
js
xchg
xchg
rcll
mov
mov
add
or
inc
and
pop
xor
insl
sbb
pop
pop
ss
andl
lahf
lret
jns
mov
fstl
mov
in
leave
xchg
cmp
clc
lds
adc
test
or
sub
out
or
dec
test
mull
mov
daa
lahf
pop
xchg
push
fwait
push
pop
mov
pop
fdivrp
bsf
mov
repz
mov
and
and
lret
mov
sti
pop
jnp
cmpsb
add
hlt
add
aas
sub
faddp
cmc
mov
stc
outsl
push
dec
inc
mov
xchg
filds
insl
repz
int
ret
divl
and
pop
xor
lods
jo
jecxz
dec
or
ss
jmp
mov
lret
sbb
mov
or
les
into
add
std
mov
rep
dec
mov
inc
dec
mov
sbb
lods
jge
mov
mov
out
loopne
icebp
out
adc
lock
inc
add
insb
nop
xor
ljmp
inc
aam
sub
orb
cli
sbb
inc
adc
popa
xor
clc
and
loop
insl
or
out
in
das
push
mov
arpl
ret
add
scas
aas
mov
mov
ficoms
mov
push
icebp
or
or
ds
inc
cld
jne
loope
test
stos
cmp
push
and
loop
mov
sbb
cmp
mov
out
clc
in
test
xchg
stc
lods
dec
out
push
and
fimull
cmp
fldenv
sti
push
adc
je
lahf
mov
push
adc
std
xchg
cld
add
jo
and
and
fbstp
jecxz
jo
mov
mov
mov
movsb
cwtl
xchg
xchg
pop
sti
dec
and
inc
les
outsl
stc
mov
or
fstp
lods
mov
push
out
and
add
dec
jne
adc
inc
jg
rorl
fldenv
xor
mov
cmp
cmpsb
dec
jecxz
mov
xor
mov
mov
je
lret
sub
jb
cs
dec
adc
pop
jbe
push
ds
xlat
fwait
adc
out
aaa
xchg
jno
scas
pop
out
pop
inc
dec
out
pop
cmp
xor
xor
mov
stos
sbb
mov
mov
pop
lea
pop
lcall
pop
mov
sbb
add
push
add
imul
pusha
fs
sub
lds
popf
mov
sub
mov
ret
insb
jle
call
fsqrt
pop
shlb
ds
sbb
sbb
mov
lea
mov
adc
cmp
lret
cli
fsubrl
sti
xchg
and
inc
cmp
jbe
ds
orb
sahf
cmp
push
decb
inc
loop
or
lahf
jb
and
rorb
test
scas
mov
in
aas
jecxz
sbb
out
daa
test
shl
jae
push
push
enter
xor
outsb
int
push
adc
into
pop
ror
div
push
repnz
dec
repz
push
and
mov
hlt
js
xor
pop
push
lret
mov
addr16
sbb
sahf
xchg
je
inc
push
sarl
mov
sub
pop
lock
adc
stos
xchg
pop
jnp
jno
fimull
imul
mov
outsl
push
or
dec
sub
adc
push
push
int
sub
in
test
imul
dec
lds
and
and
lock
cli
xchg
adc
rolb
lret
xor
arpl
fmull
add
js
insl
push
push
ds
adc
jno
jl
cli
inc
or
jo
andl
push
sbb
or
fs
pop
jnp
add
push
mov
inc
daa
clc
leave
addr16
mov
mov
lret
scas
or
loopne
ja
ja
xchg
push
cmp
push
arpl
pop
xchg
mov
mov
fs
dec
sub
adc
andl
dec
scas
sbb
jle
ret
sbb
xchg
pop
jb
test
push
aas
shl
mov
lahf
enter
lea
xlat
int
jge
jmp
cmpsl
push
mov
jne
pop
insl
xor
xchg
adc
add
nop
call
or
shrl
jle
mov
and
xor
cmp
in
adcb
adc
daa
mov
adc
aas
pop
popa
loop
cmp
andb
mov
dec
sbbb
pop
insb
nop
pusha
xchg
test
outsb
add
cmp
mov
repz
pop
stc
out
loopne
inc
dec
and
andb
cmp
dec
fistpll
shlb
and
loopne
xorb
cmc
sahf
mov
gs
push
daa
outsb
dec
insl
cld
jp
pop
enter
repnz
loopnew
push
push
scas
jecxz
fs
sbb
sub
push
inc
stos
pop
stos
pop
cltd
rcrl
sar
add
pop
je
sarb
imul
dec
iret
les
hlt
test
cmp
jne
das
mov
repz
xchg
sbb
das
aad
mov
jmp
stc
sahf
or
xchg
enter
sbb
dec
fbld
or
xor
mov
stos
sti
mov
outsl
je
into
sahf
push
clc
dec
adc
test
imul
stos
mov
test
outsb
sub
fstl
stos
out
ret
mov
pop
cmp
or
repnz
in
rorl
fstp
jg
adc
fcomp
inc
jo
mov
aas
mov
cmc
ds
push
mov
pop
xchg
outsb
push
adc
mov
icebp
mov
adcb
inc
sub
in
add
mov
push
in
jo
cmp
sbb
pop
cmp
jmp
cmp
insl
sbb
push
ds
addr16
cmp
fcomi
ljmp
mov
dec
or
sub
test
imul
ret
fidivs
mov
out
mov
mov
shll
out
xchg
jle
sahf
outsb
test
push
push
sub
cmp
lret
repz
or
mov
ds
mov
xchg
add
adc
xchg
adc
xorb
dec
cmp
cvtpi2ps
test
jge
in
lcall
andb
mov
xchg
dec
xlat
mov
lods
mov
xor
lahf
mov
add
pop
add
fsubs
add
movsl
mov
sub
fdivrl
test
sbb
add
mov
lret
daa
mov
add
cwtl
cltd
mov
mov
push
and
sbb
inc
nop
add
mov
or
cld
ret
rolb
or
xor
mov
int3
insl
pop
scas
sub
nop
out
aas
mov
daa
mov
adc
mov
lahf
sbb
cmpsl
push
or
cmp
aam
orb
out
bound
repz
sbb
ja
stos
pop
call
push
arpl
mov
dec
mov
lods
pop
outsb
mov
or
lahf
icebp
filds
push
mov
cmpsb
out
repz
add
aad
repnz
sti
in
cmpsl
std
scas
or
mov
adc
dec
jae
loop
add
mov
mov
cmpsl
push
dec
stc
sti
ret
mov
insl
mov
mov
in
aam
das
xor
xchg
xor
push
lds
sub
cmc
int3
scas
outsl
adc
jge
jo
sahf
nop
sbb
ds
or
fdivrp
add
in
sbb
and
pop
cmpsb
or
in
cmpsl
push
sbb
repz
fistpl
idivl
lods
inc
lret
mov
cmp
out
pop
mov
aaa
les
fs
int3
ss
mov
inc
xchg
out
mov
fcompl
imul
in
imul
or
or
rolb
cmpb
cld
mov
loope
cltd
cmc
popf
popa
jnp
loope
push
aaa
lea
sbb
aas
mov
out
jl
dec
fwait
mov
pushf
mov
insl
jecxz
sub
cli
pop
fistps
cmovae
mov
inc
xor
jno
cpuid
pop
testw
incb
test
push
hlt
clc
in
adc
mov
test
negb
mov
js
cmp
push
cld
push
jb
push
sbb
sub
and
adc
adc
popa
stc
pushf
aam
insb
lods
js
leave
aam
ret
push
and
xor
pusha
frstor
loop
adc
cs
dec
sbb
xor
sub
mov
repnz
push
add
rcll
stos
sbb
sub
or
and
dec
push
imul
lods
in
mov
xor
ds
sub
fwait
shlb
popa
add
push
jb
xchg
mov
dec
mov
stos
sbb
add
or
out
pop
push
addb
mov
or
add
mov
leave
jmp
loop
mov
sbb
fcomps
addr16
add
push
sbb
icebp
push
adc
pop
int
insl
in
cmp
mov
nop
xchg
ds
adc
xchg
mov
inc
fidivrl
add
pop
mov
adc
jo
xorl
adc
int
sub
test
jp
jb
dec
ds
xchg
filds
dec
mov
lods
fnsave
cmp
mov
lret
pop
adc
pop
xor
arpl
xchg
in
push
sarb
add
loop
sbb
cmpsl
cwtl
xor
or
and
stc
cwtl
push
xor
fiadds
enter
mov
insb
fwait
ret
pusha
push
repnz
pop
inc
pusha
sahf
sub
sub
lret
ja
cmpsl
aad
or
insb
add
ljmp
mov
cli
gs
inc
arpl
jp
dec
dec
cmp
test
xor
cmp
dec
cltd
jmp
cmp
xor
iret
cmpsl
test
jne
hlt
ficomps
rcrl
or
push
sub
sub
sub
push
or
cmp
sbb
test
push
rorb
roll
popa
incl
test
sub
imul
jg
xchg
in
jnp
mov
leave
xor
inc
add
push
jl
loopne
mov
imul
xchg
decb
push
pop
lods
mov
lahf
inc
adc
pop
gs
imul
push
jle
cmp
repnz
enter
add
call
scas
inc
xchg
mov
or
shll
xchg
lods
movsb
jbe
xor
negl
dec
inc
push
jle
xor
dec
stos
lahf
insb
or
rcrb
lea
inc
pusha
jl
mov
xchg
nop
pop
sbb
loopne,pn
mov
pushw
or
cmp
js
adc
dec
jo
arpl
add
mov
mov
fsubrs
pusha
jno
in
nop
xorl
lret
adc
andl
jno
ds
bound
lds
test
mov
js
mov
jo
movsl
jne
push
ficompl
fisttps
movl
adc
push
mov
in
pop
popf
adc
add
movl
jno
or
xsaveopt
enter
pop
mov
cltd
mov
pop
xor
pop
out
add
test
gs
xor
push
test
shrl
dec
cmp
jge
sub
mov
scas
test
xchg
mov
mov
dec
and
sub
jmp
xor
xor
js
adc
inc
movsb
js
xor
jne
subl
cld
lds
sbb
push
xchg
or
cmc
outsl
fnstenv
sqrtps
push
adc
sti
xchg
jne
add
popa
rclb
add
xchg
ds
lods
mov
in
dec
iret
push
and
sub
ret
in
dec
inc
and
test
hlt
daa
ret
ja
aaa
stos
inc
jno
aam
pop
fwait
jp
cmp
outsb
mov
mov
test
pop
or
push
pop
lcall
insl
mov
into
popa
fidivl
adc
pop
lcall
add
lcall
sub
jno
xor
xchg
scas
sbb
jne
dec
mov
adc
movups
or
je
repz
imul
or
cmpb
fsubrp
shlb
test
push
and
push
pop
shll
stos
cld
adc
lcall
or
jg
and
jnp
or
mov
add
mov
shl
out
cmc
ret
pop
imul
cmp
les
push
xchg
pop
push
imul
cli
ljmp
test
mov
cmp
pushf
nop
sub
and
mov
enter
cmp
mov
push
ret
repz
out
add
cmp
lock
cmp
sub
test
daa
mov
xchg
fildll
mov
or
xchg
xchg
sti
adc
xchg
fwait
pop
call
pop
lahf
add
testl
in
cmp
sbb
inc
loop
cmp
std
or
je
xchg
aad
mov
jno
inc
or
inc
frstor
push
push
cmpsl
fstp
pop
and
aas
loop
cwtl
fidivl
push
jne
mov
stc
and
cmc
test
ret
mov
iret
sub
adc
test
inc
mov
shlb
out
mov
lahf
movsb
gs
dec
fucomi
insl
int
addb
cmpb
pop
lcall
scas
jns
cmp
mov
mov
mov
aam
bound
sbb
aam
adc
out
and
mov
sub
in
int
mov
inc
jae
inc
out
subl
xor
fs
cmp
jp
lret
data16
pusha
sbb
mov
lret
push
addb
mov
mov
out
in
xor
fwait
add
js
out
add
mov
call
sbb
sub
popa
lods
mov
les
push
repz
pop
adc
jnp
push
jo
icebp
sub
cli
mov
arpl
jne
std
pop
dec
jg
stc
push
repnz
jp
fwait
dec
or
push
or
add
out
out
cmc
in
pop
push
sti
pop
out
jecxz
push
sbb
rcrb
loopne
ret
lahf
and
adc
dec
lcall
ljmp
fcmovnb
push
adc
fmuls
ret
mov
subb
dec
dec
xor
mov
int3
jge
mov
xchg
daa
jnp
xorl
test
sbb
jne
inc
cmc
pop
ret
mov
mov
les
sbb
dec
into
mov
cmp
mov
dec
popf
scas
fnstcw
cld
inc
xor
das
nop
adcb
or
sbbl
sub
lock
pop
mov
sarl
adc
inc
ljmp
roll
scas
mov
xchg
jp
es
scas
pop
sub
adc
je
sub
push
andl
push
sub
mov
insb
sbb
jmp
icebp
mov
xor
cmp
push
movsb
out
clc
test
pop
dec
aas
sar
push
add
mov
lret
ret
lods
or
jbe
loope
jl
or
inc
or
test
gs
jo
cli
adc
jae
inc
clc
mov
adc
xchg
std
xor
das
inc
ret
loop
fldl
or
add
stos
shl
loop
push
jo
pop
mov
mov
xor
inc
lahf
icebp
sub
push
mov
xchg
push
shrl
hlt
bound
and
ja
mov
add
and
dec
push
gs
inc
addb
rcl
out
ret
leave
cs
and
or
sub
lret
cmp
add
mov
ficoml
lret
sub
xlat
fdivs
aad
rcl
mov
out
sbbb
out
mov
jmp
xchg
lock
outsb
mov
or
mov
orl
xorb
mov
loope
xor
ja
or
outsb
sub
cmp
mov
imul
adc
xor
ds
sub
test
xor
inc
jge
mov
add
push
fisubrs
xchg
inc
jecxz
xor
or
xchg
mov
scas
push
jns
add
mov
das
sub
cmp
fnstenv
push
jns
repz
mov
pop
fs
xchg
test
in
adc
xor
add
and
mov
xor
cmp
test
test
es
inc
jns
inc
clc
sub
lds
mov
mov
push
push
mov
enter
or
int
sti
lods
pusha
icebp
push
out
es
jle
fmuls
rorb
jge
cmp
inc
imul
into
negl
dec
ret
in
pop
push
push
lock
ljmp
sub
jmp
mov
ret
in
movsb
movsl
lcall
sahf
xor
test
adc
inc
sbb
jecxz
leave
mov
enter
sub
divb
enter
cwtl
adc
aam
pusha
pop
in
addl
mov
lods
gs
mov
repnz
push
loop
push
pop
fiaddl
inc
notb
push
faddl
fildl
push
mov
insb
dec
push
dec
ja
sub
aad
bound
hlt
out
push
sahf
fwait
out
outsb
xchg
dec
sarb
int
sbbb
lods
xchg
testl
nop
bound
clc
jecxz
and
dec
shlb
xchg
mov
out
cmp
mov
pop
cmp
sbb
movsb
ds
cmpsl
mov
outsb
mov
push
sbb
dec
push
jp
sahf
pushf
pop
mov
inc
or
gs
sahf
cltd
outsb
je
and
mov
dec
enter
mov
cltd
xlat
addr16
lods
lret
jno
jle
cmp
mov
popa
out
mov
into
mov
shr
mov
jb
data16
or
xor
sub
mov
push
rolb
or
sub
or
jg
xor
pushf
push
inc
mov
es
jnp
ret
jecxz
imul
xchg
das
sbb
add
nop
add
stc
sbb
rcrl
std
addr16
and
adc
mov
push
sbb
jae
sub
in
push
mov
dec
cmp
add
add
orl
js
mov
testl
gs
xchg
call
call
es
xor
pop
cmpsl
outsl
dec
jl
stos
push
imul
test
cmpsl
aaa
pop
int3
mov
push
sti
mov
sahf
push
jg
sbb
sbb
mov
cmp
cwtl
mov
mov
push
mov
iret
int3
adc
sub
pop
neg
stc
andl
add
test
ljmp
jge
inc
lcall
push
mov
inc
lret
test
enter
jns
xor
jge
arpl
mov
add
mov
cmp
inc
pushf
pusha
cmc
into
mov
test
std
cmp
or
jp
cmpsb
aam
cmpsl
push
add
dec
imul
xchg
es
popf
fiaddl
std
dec
rorb
sbb
pop
pop
cltd
mov
js
adc
daa
aaa
inc
push
xchg
and
jmp
or
xchg
pop
aas
xchg
adc
xor
addl
cmp
test
stos
mov
push
jb
insb
mov
jl
pop
sbb
scas
mov
lock
mov
and
int3
rolb
pop
outsl
jge
mov
inc
mov
filds
outsl
cmc
aam
cli
push
mov
mov
icebp
inc
add
jne
xor
push
push
rcrl
pop
pop
mov
mov
pop
mov
hlt
sbb
lret
jge
enter
lret
add
out
push
mov
sub
stc
jg
aam
add
pcmpeqb
xchg
cld
add
and
shrb
lar
cmpsl
fildll
jbe
mov
movsb
test
pop
andl
xor
std
sbb
ss
pop
mov
and
mov
mov
rclb
mov
popa
jg
lock
cwtl
std
and
or
inc
add
mov
adc
popf
aam
mov
ret
ljmp
sarb
mov
xor
sbb
call
das
mov
adc
fidivs
dec
leave
jmp
xlat
xor
mov
cli
xor
adc
mov
xor
dec
mov
mov
jge
xchg
mov
or
push
fisubrl
xor
sbb
jbe
movsb
push
cmc
pop
xchg
cmp
sub
cmp
push
imulb
cmp
or
adc
insb
out
jne
mov
es
jbe
mov
inc
lret
insl
push
adc
or
in
mov
or
fcmovnb
jo
lock
rcrl
in
and
or
inc
add
int3
stos
xchg
mov
mov
es
and
nop
xor
inc
pop
pop
into
pop
pop
repnz
add
int
xor
xchg
mov
sub
dec
push
pop
xorl
cmp
call
scas
xor
pop
aaa
out
and
adc
xor
adc
fidivrs
and
push
dec
jmp
xchg
cmp
mov
aas
cmp
lods
lret
sbb
pop
xchg
flds
and
popf
rcrl
lcall
addr16
sub
scas
jnp
cltd
cmp
jnp
mov
movsb
aad
inc
cwtl
or
mov
cmp
jge
mov
jns
add
or
jle
cld
inc
mov
mov
mov
popf
mov
mov
sub
mov
leave
nop
xor
xor
adc
cmp
xchg
popf
pop
push
fucompp
mov
push
fcmovnu
mov
pop
jnp
pop
cld
in
loopne
cs
adc
icebp
inc
cmpsl
subl
aad
cmp
jecxz
add
jb
mov
fs
lds
inc
cli
mov
and
mov
push
aam
pop
cmp
cmp
mov
test
rorl
sub
dec
mov
fidivl
outsb
movsl
bound
cmp
testb
mov
sub
sbb
setb
movsl
repz
mov
xor
test
push
je
sbb
cli
lds
mov
popa
movsl
xorl
scas
inc
mov
push
jbe
push
xchg
mov
and
sub
rolb
xor
into
mov
movsl
xor
lea
mov
dec
mov
out
lods
bound
or
push
test
fucomp
negl
int3
mov
aad
pop
add
dec
shl
cmpsb
dec
push
push
cli
sbb
mov
les
xchg
bound
test
addr16
mov
cmpsl
sbb
les
mov
lods
add
and
xor
ljmp
lds
push
dec
arpl
iret
loopne
sbb
les
lcall
fisttps
jmp
dec
in
rorl
inc
dec
pushf
test
insb
addl
lcall
ja
push
daa
in
or
ficomps
inc
sbb
data16
pop
mov
fcoml
fstpt
add
mov
in
or
cmpsb
adc
push
add
notb
js
pusha
lods
inc
pusha
les
outsl
sbb
mov
sbb
inc
sub
push
pop
inc
mov
cld
std
jns
jg
sub
rcrb
jecxz
sahf
sahf
je
push
lods
push
or
sub
jno
sbb
dec
out
adc
and
mov
jo
pop
insb
jb
xchg
pop
in
scas
add
or
test
cmc
cmpsb
mov
ds
sbb
stc
fsubrs
mov
mov
mov
pop
fwait
pop
push
add
adc
aaa
jg
jmp
push
inc
or
jno
imul
fcom
push
ret
push
push
test
dec
xchg
mov
movsb
xchg
mov
mov
dec
fidivrs
jge
cmpsl
xlat
jl
mov
cmp
mov
sbb
mov
xor
fists
pop
rcrb
fwait
add
ret
divb
lock
lcall
mov
mov
daa
sbb
add
cmp
test
pop
push
jecxz
out
push
outsb
nop
pushf
pop
into
or
cmp
xchg
and
dec
push
cmpsl
out
scas
ds
push
loope
sbb
mov
sub
dec
rcrl
inc
cmp
pop
ret
out
dec
out
movsl
sub
sbbl
lret
inc
out
or
loope
out
xchg
mov
pop
dec
push
dec
push
adc
aam
dec
add
jl
call
mov
xor
or
and
out
mov
push
imul
rcll
das
ds
mov
jb
orb
pop
lahf
and
rcrb
hlt
and
mov
repnz
mov
les
cmp
ret
mov
push
jl
push
adc
mov
jmp
adc
into
rcrb
mov
fldt
jns
and
push
adc
fadds
stos
popa
add
adc
loopne
adcl
int3
sub
mov
ja
int3
mov
xchg
fildl
vfmadd213pd
out
into
fldcw
insb
ret
sti
je
mov
or
cmpsl
dec
lds
lahf
ss
lods
scas
push
mov
mov
lods
cmc
and
mov
repnz
xchg
push
jno
xchg
sub
stos
in
cltd
cmp
xchg
ss
lcall
add
test
scas
cmp
add
or
xchg
or
push
aam
out
sub
xchg
int
fimull
lock
sbb
lret
cmpsb
sbb
mov
dec
mov
add
jecxz
inc
and
push
mov
pop
sbb
adc
jb
int
aaa
mov
mov
mov
addr16
aam
sub
pushf
xchg
mov
fwait
lock
cmp
mov
inc
lods
loopne
movb
mov
inc
enter
xchg
pusha
push
lea
mov
arpl
shrl
or
mov
into
mov
xchg
sub
dec
sti
in
sbbl
mov
nop
bound
mov
popa
pop
shlb
jle
ja
addl
movsb
negb
cmp
mov
and
mov
fwait
pop
cmp
pop
mov
pop
pop
push
cmp
pop
xor
psrad
cmpsl
mov
xor
or
movsl
xchg
xchg
hlt
nop
rol
and
jecxz
pop
je
sarb
lahf
sahf
push
mov
inc
and
bound
adc
aam
push
adc
push
mov
sbb
xchg
loopne
dec
decl
or
sarl
mov
pop
add
pop
leave
sub
pusha
test
sbb
ds
int3
scas
pop
push
sbb
sub
shlb
lcall
movsl
stc
dec
xor
sbb
mov
lret
arpl
pop
jae
dec
fimull
out
aam
mov
cwtl
and
mov
lahf
sub
lea
mov
les
sub
add
lods
xchg
lods
test
fldt
push
push
gs
ss
dec
rol
jns
adc
mov
cs
loopne
fldenv
ss
add
jae
mov
sub
pop
sbb
xor
lea
cmp
mov
inc
arpl
lods
or
icebp
sub
mov
divb
or
jbe
xchg
js
inc
call
in
adcl
test
hlt
dec
lret
pop
sbb
xorl
sub
and
ficoms
push
inc
pop
dec
lods
das
dec
pop
dec
das
adc
lret
push
testl
inc
nop
sbb
pop
test
enter
fnstenv
cmp
and
jnp
sbb
adc
repz
or
out
je
jg
lds
inc
iret
xchg
test
sub
xchg
lcall
cmc
fsts
jbe
cmpsl
dec
cwtl
popa
scas
daa
mov
stos
rorb
jg
jg
lcall
out
xchg
pusha
outsb
xchg
pop
ret
xchg
nop
add
sbb
mov
sbb
icebp
sti
mov
xchg
mov
insb
inc
std
in
dec
mov
adc
mov
loope
mov
jnp
jo
imul
test
and
lock
addr16
ja
pop
sar
jmp
das
dec
pop
xor
xchg
lret
cmp
or
inc
sub
ret
mov
sub
mov
fidivs
inc
popa
pop
sti
cmp
cld
or
sub
dec
out
cmpsb
add
insl
jle
xchg
sahf
xchg
cwtl
sub
mov
xor
repnz
scas
mov
lret
pop
std
shll
or
dec
mov
push
rclb
sub
mov
add
iret
ror
xor
pusha
push
cmpsl
pop
or
pop
push
aad
sti
rorb
addr16
scas
mov
mov
add
scas
cmp
dec
xchg
mov
or
std
icebp
mov
or
sub
push
lock
and
mov
dec
mov
inc
and
rcr
jp
divb
lods
pop
sti
aam
cwtl
out
out
dec
cmc
jg
lds
ror
mov
aad
jbe
hlt
mov
fstpt
lods
out
and
mov
arpl
adc
into
push
cmp
sub
ror
fadds
mov
fistpll
push
adc
xchg
cltd
jge
shlb
mov
scas
adc
or
add
aas
jnp
sbb
dec
sbb
aad
jo
das
xchg
jo
xor
add
xor
sub
mov
push
xchg
xchg
flds
sub
je
mov
mov
push
fdivr
xor
mov
sub
movsb
cltd
sbb
fbstp
or
outsl
movsb
mov
add
into
sub
mov
insl
push
pop
mov
sbb
or
lret
rorb
xchg
ja
mov
pop
add
sub
ljmp
int
leave
in
test
sub
inc
cs
adc
cmc
sbb
insb
in
cmp
outsb
test
pop
or
dec
out
xchg
jecxz
adc
jno
sub
rolb
aad
mov
jae
sub
cmp
sbb
imul
inc
jg
bound
add
mov
lret
mov
int3
adcb
insl
sbb
jne
xor
lahf
and
xor
in
aad
jno
xchg
push
xchg
scas
xchg
insb
cmp
cmpsb
mov
jecxz
sbb
mov
jo
icebp
cltd
aaa
fisubrs
rcrl
xchg
jb
jg
cmp
test
push
insl
pop
sti
push
sub
gs
mov
jle
jl
add
pop
ja
add
psrld
scas
mov
add
sub
jnp
sub
cmp
adc
pusha
lcall
xor
rolb
sub
jbe,pt
cli
test
inc
sbb
inc
or
testl
push
xorb
imul
push
int
ds
xchg
outsl
ficompl
mov
mov
rclb
mov
lods
cmpsb
jne
lret
negb
jge
add
cmp
mov
movsb
mov
scas
adc
sti
repnz
xlat
pop
into
mov
mov
into
xor
and
push
push
loope
leave
into
fucomip
push
sbb
inc
dec
jbe
xchg
pusha
out
aam
insb
dec
add
mov
sub
or
hlt
mov
into
pop
and
into
add
mov
int3
jno
mov
sub
lcall
lcall
lods
les
jbe
aaa
movsb
dec
mov
roll
std
sub
add
push
or
ja
sub
insb
out
sahf
subl
mov
sbb
mov
sbb
mov
repnz
int3
aam
gs
cmc
out
sbb
pop
shrl
ret
mov
mov
mov
ret
lcall
lahf
fs
xor
inc
xor
sub
xlat
subl
cmp
shll
cmpsl
add
sbb
pop
aam
jmp
cmc
enter
dec
inc
pop
aaa
pop
lods
arpl
mov
mov
adc
arpl
iret
xlat
mov
insl
xor
gs
fisttps
nop
push
cld
das
fwait
shrl
lods
or
mov
sub
mov
popf
xor
adc
pusha
xor
jno
lock
imul
jl
sbb
aas
daa
lahf
xor
push
dec
jo
scas
push
enter
jne
lods
mov
push
inc
or
and
ds
movsl
mov
gs
xchg
xlat
lret
clc
inc
fidivs
inc
xchg
mov
fiaddl
inc
and
mov
and
jge
out
sbb
push
stc
push
sbb
nop
shlb
test
mov
add
push
in
shrl
dec
jb
xor
fwait
stos
outsb
pushl
outsl
daa
subl
mov
cld
xchg
xchg
cmp
movsl
cs
test
xchg
fsin
sbb
int
int
cmp
scas
jne
adc
jle
push
xor
jg
rcrb
pushf
push
mov
mov
enter
lock
adc
push
xor
fisubl
mov
int3
idivb
pop
pushf
into
jno
jnp
xchg
outsb
fwait
mov
loop
dec
mov
in
pop
xchg
into
outsl
fcoml
popf
push
inc
movsl
ss
cmp
lods
add
pop
loop
cltd
mov
lods
andb
gs
push
inc
or
shl
xchg
movsb
mov
xchg
pop
jne
xchg
out
sbb
pop
mov
into
pop
add
xchg
mov
jmp
and
pushf
movb
sub
sub
in
rol
out
push
scas
clc
je
push
jp
xor
jge
call
xchg
sbb
mov
fldl
int
ljmp
cmp
inc
cmp
jge
out
inc
sbb
push
stos
je
das
push
add
pop
clc
pop
and
sahf
fwait
xlat
mov
arpl
sbb
jne
in
call
dec
add
mov
xchg
in
lret
mov
lods
sbb
fdivrl
cmpb
or
lahf
test
jmp
jge
cmp
cmc
flds
dec
push
mov
rorl
sub
lea
sub
jns
adc
in
add
push
test
mov
repz
pop
lods
mov
dec
pop
dec
stos
xor
and
es
imul
sub
dec
add
clc
push
outsl
jns
loopne
mov
or
adc
push
pop
push
jmp
ljmp
fbstp
iret
ret
pop
mov
mov
cld
leave
jnp
movsl
lock
nopl
leave
mov
fcomi
out
jb
jmp
imul
mov
lcall
out
or
test
dec
xchg
xor
cwtl
insl
or
arpl
inc
inc
mov
xor
jge
les
jge
jle
xor
sti
jbe
mov
rorl
pusha
add
cmp
lahf
push
mov
pop
xchg
cmp
adc
add
mov
aad
in
jle
js
push
shl
push
sub
fistpl
jmp
bound
dec
pop
mov
push
cld
stos
fbld
pop
jb
mov
mull
inc
insb
adc
xchg
in
push
mov
repz
sub
into
insb
cld
cmpb
pusha
cltd
das
fists
xchg
scas
fxch
cli
lea
cmp
int3
xor
lret
mov
fs
xchg
shrb
andl
fucomi
adc
inc
ds
ffreep
mov
ja
xchg
push
jle
mov
cmp
scas
jbe
lret
mov
nop
aas
xchg
pop
ds
lods
cmp
cmp
jp
mov
push
lret
call
gs
dec
cmpsb
push
or
jb
push
mov
cmp
dec
in
adcl
imul
fists
fsubs
cmp
call
mov
and
loope
push
fcmovu
mov
push
push
and
mov
push
mov
loop
fwait
push
xor
aad
mov
pop
notb
addl
push
add
cli
and
mov
inc
or
arpl
insb
dec
dec
lock
xchg
lret
out
lret
mov
xchg
sub
test
push
sbb
cmc
cltd
jnp
dec
pop
dec
cmp
inc
pusha
cmp
mov
push
test
cmpsl
adc
cltd
ss
inc
push
mov
mov
popa
mov
mov
push
mov
xchg
inc
arpl
pusha
cmp
in
dec
dec
movsl
rol
je
out
adc
shll
test
imul
in
adc
outsl
cwtl
clc
ja
aaa
sbb
popf
popa
pop
nop
jle
sbb
sub
xchg
add
subl
lret
xchg
addr16
loope
sub
mov
testl
push
xchg
stos
xor
hlt
stc
mov
scas
sbbb
mov
push
ret
movsb
mov
lods
cltd
sbbl
cmp
mov
dec
mov
or
mov
arpl
sbb
fnstcw
mov
dec
out
xchg
das
and
pop
mov
mov
mov
push
rcrb
mov
imulb
mov
adc
mov
xorl
or
jle
xor
push
cmp
cmp
jecxz
sub
xor
out
in
popf
out
in
loope
jecxz
fildll
cmpsb
mov
sub
loope
orb
jecxz
jmp
add
add
sarb
mov
adc
enter
icebp
jmp
adc
mov
test
add
lahf
jmp
lahf
jo
aas
mov
jg
imul
jl
pop
test
xchg
add
call
xchg
js
pusha
pop
sahf
test
xchg
sub
sub
gs
mov
inc
ljmp
sbbl
adc
outsb
cltd
add
lods
sub
jns
hlt
shlb
arpl
scas
jle
lods
sti
in
push
cmp
push
pusha
fcoms
push
sbb
popf
dec
adc
push
mov
fisubs
ss
fwait
shll
inc
out
cmp
cwtl
jp
mov
xor
inc
dec
cmp
pop
mov
lcall
or
mov
fstl
loop
mov
icebp
or
sarl
cmc
inc
imul
pop
lds
std
subb
inc
sbb
push
lods
mov
jne
jmp
mov
call
jb
aam
int
lods
or
mov
cmc
rcll
ss
mov
shrb
je
jge
sbb
icebp
xor
aad
inc
and
xchg
pop
mov
out
adc
sahf
mov
fdivrs
xchg
hlt
xor
xchg
mov
int3
test
cmp
in
xor
cmpsb
mov
push
sti
mov
xchg
lock
mov
jae
and
xor
xlat
inc
mov
scas
xor
into
pop
cmp
fistps
je
xchg
sub
pop
mov
adc
xchg
addr16
mov
xchg
add
push
xor
les
cld
mov
jge
enter
xor
or
adc
and
out
mov
mov
loopne
lods
sbb
fnstenv
aaa
pusha
xor
lds
in
xchg
jg
loope
movsb
testl
push
and
sbb
push
xor
sub
negb
lret
push
inc
mov
movsl
cli
pop
jnp
mov
daa
push
mov
fbstp
shl
and
imul
rcrb
dec
mov
jecxz
adc
sbb
test
stos
sub
sbb
cld
mov
adc
sbb
mov
ljmp
shll
int
in
psubw
pop
xor
adc
mov
sbb
jbe
fcmovbe
lods
dec
adc
sbb
out
sub
xlat
les
aam
jbe
mov
sub
popf
mov
inc
mov
xchg
in
push
jg
repz
push
sti
cld
mov
mov
cmp
pop
pop
mov
ss
sub
push
aam
fisubrl
hlt
xchg
movsl
adc
ficomps
adc
test
mov
aad
xchg
sbb
cs
test
jno
addr16
pop
lods
or
in
sbb
or
pop
sahf
notl
aam
gs
pop
js
les
pushf
aaa
in
inc
ds
add
test
loop
mov
push
stos
mov
mov
inc
or
cmp
out
in
out
jnp
xor
add
xchg
add
data16
fs
movsl
mov
and
adc
xchg
xchg
cmp
roll
sub
and
sub
mov
xor
aaa
cld
shrb
shrl
arpl
stc
roll
in
dec
hlt
push
shlb
aas
loopne
push
cmpsl
or
pop
cmpsb
cld
movsl
sub
dec
cmpb
or
mov
mov
fidivrs
test
lea
repz
or
inc
test
and
dec
pop
add
popl
cli
fidivl
mov
insl
jnp
adc
dec
pop
push
push
mov
repnz
and
add
jb
sub
and
std
push
sbb
mov
inc
lock
adc
pop
fimull
ja
sub
push
cld
xchg
outsl
mov
fwait
add
jg
push
dec
in
xchg
stc
cmpsb
mov
cmp
add
leave
push
aaa
xchg
adc
adc
jmp
xor
or
push
jo
or
jmp
fdivrs
xor
xchg
icebp
pop
mov
test
insl
push
lds
movsl
push
rep
mulb
jno
xchg
add
pop
mov
mov
mov
xor
fs
jp
shr
add
ja
xchg
mov
fnstenv
ret
neg
sub
xor
gs
mov
xor
push
inc
out
imul
add
sbb
xor
xor
lds
sbb
pop
int3
xor
gs
cmp
pushf
scas
mov
out
cmp
lret
mov
add
loopne
jg
adc
cmp
cld
sub
pop
popa
mov
cmpsb
fisubrs
or
mov
subl
int3
std
jg
outsb
test
jns
in
lods
sub
cmp
jl
mov
dec
pop
adc
xchg
mov
in
and
jp
popf
pop
movsb
dec
fimull
loop
sbb
into
stc
insl
lcall
fisubrl
bound
add
lret
dec
call
addb
sbb
fcmove
add
xchg
sbb
loop
inc
into
mov
std
mov
dec
push
loop
aas
in
ja
cmc
fiadds
sti
jle
jge
scas
aaa
movsb
jno
insl
call
push
sbb
add
adc
aam
clc
imul
dec
lds
push
lods
sbb
insl
int
mov
xchg
cmp
faddl
xchg
fsubl
pop
daa
clc
popa
cwtl
fmul
cli
jge
adc
rolb
loope
arpl
or
fwait
sub
pop
ljmp
pop
and
aaa
jecxz
sbb
xchg
dec
inc
cltd
mov
cmp
jno
insl
dec
pop
sbb
push
jo
mov
adc
push
mov
or
push
sub
aaa
mov
cwtl
mov
movsb
data16
idivl
mov
lahf
pop
or
movl
jl
jo
test
ja
mov
xor
inc
jmp
fmuls
pop
push
mov
jge
mov
mov
stos
cmc
jo
dec
jl
lock
in
adc
mov
inc
mov
movsl
addl
mov
mov
push
mov
dec
incl
add
ret
mov
xchg
out
pusha
call
cmpsb
into
mov
adc
imul
fstl
mov
jp
sub
stc
mov
popa
mov
cmp
adc
les
loop
cmp
aam
leave
gs
mov
js
push
add
in
sbb
daa
xchg
xchg
aam
sub
xlat
arpl
sub
shlb
lret
pop
jecxz
into
es
leave
pushf
dec
int
icebp
int
or
pop
cmp
sub
sub
xor
xchg
cmp
rol
pop
in
imul
out
cli
mov
pushf
jmp
gs
ss
movsb
or
lret
mov
jp
mov
lods
test
dec
and
out
scas
iret
std
xchg
mov
jnp
xorl
sbb
rorl
jae
and
je
jmp
cwtl
imul
ret
outsl
nop
loop
mov
sbb
pop
or
dec
dec
dec
cmpsl
fdivrs
shll
xor
cmp
push
cmp
lock
fcmovbe
xchg
gs
in
negb
xchg
jmp
adc
mov
mov
mov
and
ret
xchg
sbb
lcall
data16
test
ret
add
arpl
mov
es
ljmp
lret
fs
and
lods
in
sub
imul
test
cld
ret
push
cld
fcoms
dec
mov
nop
inc
hlt
es
lods
dec
pop
mov
push
in
pop
sub
shrb
jecxz
adc
imul
mov
test
addb
inc
cmp
inc
and
jns
add
das
out
xlat
and
dec
mov
test
popa
xchg
jnp
xor
jl
cmp
xchg
mov
inc
cmp
into
push
and
and
push
sub
stc
punpcklbw
cmp
lock
sti
jge
jmp
inc
xchg
xchg
and
xlat
mov
loopne
jbe
insl
sahf
in
xchg
push
aas
add
js
fmull
jg
out
adc
pop
push
cmpsb
or
jge
pop
sbb
and
lcall
loopne
mov
xchg
out
add
lods
loopne
insb
insl
ficompl
lret
sbb
adc
push
xchg
jnp
andl
fcoms
test
mov
movsb
xchg
fidivrs
adcb
fwait
hlt
mov
shrb
or
jmp
call
fistpl
int3
rorl
xchg
imul
xor
ret
fwait
and
imul
jg
xor
push
outsl
sub
in
mov
int
in
cmpsl
pop
mov
dec
mov
je
lret
jg
xor
cmp
jp
mov
dec
push
mov
pop
xchg
pop
or
xor
sub
and
fwait
dec
cmp
mov
ljmp
cmpsb
add
sbb
add
push
fnstcw
dec
movsl
shll
mov
and
outsl
ret
ds
sub
xor
popf
fs
scas
lods
sbb
fisubrs
push
cmp
pop
mov
push
rcrb
rclb
adc
int
lock
push
test
cmpsb
scas
push
cld
and
xchg
jae
pop
aam
cmp
xchg
jns
inc
outsb
movl
call
dec
xor
push
fcomps
mov
xchg
test
fcoml
sub
dec
push
add
and
lods
cmpsl
loope
pop
mov
in
cmp
ret
mov
inc
cmp
int3
add
gs
test
and
test
addr16
cmp
xlat
xchg
rcrb
dec
pusha
ret
push
leave
or
mov
pop
call
pop
cs
adc
jmp
je
sbb
xchg
enter
ret
fisttps
nop
sub
ljmp
adc
ret
adc
sub
mov
push
xorl
xchg
jbe
jne
ret
or
xchg
jae
test
neg
fwait
cmpsl
cli
lds
add
addr16
test
add
push
xchg
scas
xlat
mov
je
shrl
jb
lcall
rclb
lods
fstpl
push
hlt
cwtl
mov
loope
and
jg
imul
xchg
mov
rcll
or
mov
sbb
mov
xchg
mov
xchg
pop
rep
imul
or
insb
les
int3
sub
dec
fdivrl
dec
mov
outsb
jo
push
dec
jg
data16
pop
loop
mov
mov
dec
cmp
rcrb
mov
push
imul
into
aad
or
loopne
test
fisubs
push
jo
mov
call
mov
aam
aam
aam
icebp
arpl
lods
imul
cmp
adc
push
xchg
or
xacquire
pop
shr
aam
push
push
dec
addr16
xor
jmp
aad
adc
notl
push
push
popa
cmp
mov
fisttps
mov
mov
push
pop
hlt
outsl
push
test
repnz
sbb
pop
out
inc
outsb
stc
and
jnp
sbb
pusha
test
aad
pop
add
mov
int
cld
aaa
enter
fucom
fcomps
cmp
inc
stos
fwait
xor
jp
fdivrl
and
mov
inc
and
adc
adc
repnz
out
in
sbb
leave
pop
data16
in
jmp
movsb
lret
outsl
lea
test
pusha
mov
lock
repnz
dec
pop
mov
shl
aad
cld
or
jb
es
pop
xor
mov
sub
fcomip
cmp
xchg
mov
into
js
sub
xchg
or
cmp
inc
inc
sub
popf
movsl
sub
aas
scas
pop
jp
push
adc
push
imul
dec
push
inc
pop
mov
xchg
fstpt
ljmp
lods
pop
rcl
pop
fwait
mov
sbb
out
fdiv
pop
push
mov
and
sbb
push
sbb
clc
sbb
cmp
aaa
mov
sbb
dec
sub
jae
dec
testl
jb
jne
cmp
adc
mulb
lods
out
xchg
stc
mov
dec
xchg
jbe
or
pop
in
mov
add
jne
loope
in
dec
add
call
sbb
sbb
rorb
scas
dec
xchg
add
xchg
sbb
pop
cmp
inc
lock
lcall
jg
inc
or
jmp
loope
in
xchg
xor
pop
jle
xchg
dec
or
and
mov
mov
mov
ret
xor
test
arpl
ret
push
inc
xor
jmp
js
xchg
popa
jl
cld
popa
pop
jl
mov
pushf
xchg
clc
and
pop
inc
addr16
push
shlb
adc
pop
mov
or
mov
sub
lods
pop
and
divb
out
lahf
repnz
les
jg
inc
push
or
sub
mov
or
aaa
jge,pn
shll
in
pop
jge
loope
mov
xchg
outsb
lock
jg
and
stos
cmp
cld
and
mov
lock
int
mov
add
loop
outsb
push
loopne
mov
jnp
jno
imul
cmp
cmc
out
dec
mov
mov
dec
lahf
adc
sub
pop
push
test
bound
inc
adc
sub
das
rcll
or
fidivrs
jl
pop
test
ljmp
dec
div
insl
in
movsl
nop
mov
mov
cmp
adc
lods
icebp
out
mov
pop
xlat
sub
insl
lds
test
push
jmp
imul
cs
in
sbb
int3
mov
cmp
dec
dec
out
setl
scas
loope
cmc
mov
dec
pop
fwait
adc
or
sub
mov
push
in
es
incl
daa
sahf
jp
ds
cmp
push
aad
dec
stos
jmp
cmpsl
loopne
push
inc
push
inc
cmp
xchg
dec
in
jb
repnz
sbb
dec
test
mov
sub
scas
xchg
mov
sbb
push
das
in
hlt
arpl
mov
inc
jg
pop
js
stos
popa
jne
push
test
pusha
mov
clc
loopne
fstpl
cmp
cmp
imul
push
jb
lods
push
stc
xchg
xor
inc
cmpsl
xchg
mov
inc
inc
jmp
mov
sbb
xchg
cmp
and
pop
push
icebp
jl
mov
stos
std
ret
cmc
push
ss
mov
insl
je
xor
jnp
stos
outsl
aas
push
mov
jl,pn
div
xchg
xor
xor
test
popa
mov
inc
xbegin
mov
mov
xchg
xchg
loop
xchg
fs
sub
test
mov
fidivs
add
mov
fcompl
fs
lods
and
daa
ss
in
icebp
jns
sbb
outsl
and
cltd
jo
idivl
shlb
clc
sbb
mov
in
mov
adc
fistps
cmp
or
cmc
push
push
fsubr
pushf
dec
or
imul
mov
and
aaa
lcall
fs
pop
cmp
lock
mov
cmpsb
in
or
xchg
mov
mov
xlat
jbe
xchg
movb
aas
popa
enter
adc
add
std
jecxz
lods
pop
mov
and
in
mov
in
jno
gs
cmp
pop
cmp
jecxz
pusha
sub
in
cmpsl
int
and
mov
push
repnz
imul
mov
int3
lods
adc
outsb
loop
nop
cld
fsts
movsb
ret
lds
adc
or
mov
sbb
mov
test
add
inc
jmp
ljmp
cli
loop
out
cli
fnstsw
xor
jmp
sbb
inc
arpl
cmp
sahf
mov
imul
jae
xor
into
repz
lahf
aam
daa
roll
cmpsb
sbb
andl
out
push
lds
or
add
scas
call
mov
mov
mov
cli
xor
pop
mov
mov
das
std
fisttps
and
cld
aam
js
rcrb
je
faddl
cmp
out
lahf
lock
sub
aas
rol
mov
mov
jae
stos
push
push
in
je
jle
push
sub
jge
xchg
out
mov
dec
stc
je
adc
sub
bound
xchg
in
out
cmc
cmp
dec
push
mov
jnp
outsb
mov
mov
jb
push
xchg
fcomp
pop
push
das
mov
orl
aaa
sbb
mov
mov
pop
pop
dec
sti
test
xor
icebp
jle
mov
xchg
push
cltd
fadds
cld
jns
icebp
pushf
out
push
roll
pop
mov
sub
lcall
dec
out
in
ret
ds
addr16
sbb
pushf
mov
les
dec
mov
sbb
popa
sbb
xchg
push
add
and
adc
push
ljmp
outsb
mov
icebp
movl
adc
fwait
hlt
test
xor
lock
jnp
cmp
pop
mov
lds
mov
pushf
ret
out
jmp
dec
sbb
arpl
arpl
imul
mov
test
std
cmc
mov
movsb
testb
add
xor
jmp
mov
jge
cwtl
and
aas
push
scas
mov
sbb
push
and
push
call
or
ds
jo
xchg
adc
ret
cmp
ja
cmp
sbb
cltd
rorl
arpl
cmp
es
and
adc
add
pusha
sbb
add
in
add
mov
or
fsubrl
xchg
test
push
jno
dec
std
add
cltd
in
mov
or
dec
sbb
or
pop
push
sub
xchg
pcmpeqd
cmp
xor
lds
enter
jne
outsb
mov
adc
jmp
push
xchg
in
push
add
fsubl
sahf
pop
movsb
subb
pop
mov
mov
cmp
out
jns
dec
sbb
dec
lods
jnp
mov
xchg
mov
rep
dec
pushf
push
jnp
push
mov
inc
rorl
shufps
dec
mov
and
cli
out
jmp
mov
loopne
jmp
insl
push
das
popf
mov
adc
es
pop
pop
or
sahf
push
pop
outsb
jbe
sbb
adc
pop
in
mov
pop
mov
int
push
xor
lods
iret
and
push
cmp
shrl
mov
xchg
xor
aas
cmp
das
ds
enter
ret
clc
add
dec
xchg
test
inc
stos
lret
sbb
xchg
mov
arpl
pop
lahf
and
dec
adc
sub
inc
adc
cmp
das
movsl
les
mov
add
fisubrl
repnz
movsl
push
outsb
sbb
pop
mov
push
pop
nop
scas
fadds
hlt
pop
xchg
jne
cmpl
or
add
xchg
or
adc
xchg
xchg
adc
push
cmp
sbb
data16
lea
mov
jae
ja
jbe
xor
sbb
xchg
inc
icebp
in
jmp
rcrl
xor
in
xlat
ds
lret
and
out
fimull
ja
jns
dec
mov
lret
sub
or
in
jmp
ja
inc
popa
xor
sbb
sbb
add
lcall
xor
fildll
mov
jb
add
pop
stos
and
adc
mov
aad
scas
movsb
jge
or
sub
xor
xlat
scas
jnp
mov
fidivl
adc
sbb
bound
mov
hlt
daa
inc
sub
push
cmp
xchg
movsl
enter
pop
push
loop
scas
repz
push
adc
sbb
and
mov
pusha
and
stc
mov
mov
inc
sbb
bound
filds
insl
iret
fdivrl
jo
xlat
stos
imul
call
mov
enter
jbe
sti
aad
inc
insl
icebp
aas
sub
dec
push
fnstsw
jg
lds
int
test
rcr
outsl
nop
mov
in
push
inc
cmc
call
mul
push
xor
fldl
cwtl
jo
addr16
sub
sub
xchg
inc
ljmp
mov
fistpll
out
cmpsl
dec
xor
and
mov
mov
cld
lret
scas
cmpsl
subb
adc
or
inc
fs
test
icebp
in
push
push
push
and
jp
fists
orl
jo
mov
sbbb
scas
cmc
push
sti
loope
out
in
lcall
fadds
jno
lahf
in
and
aad
out
and
xor
lret
push
enter
push
mov
ds
mov
cld
in
pusha
mov
mov
int3
mov
repz
lds
inc
jmp
ds
jns
jecxz
sbb
lock
mov
mov
inc
jne
xchg
and
dec
sub
subl
in
jae,pn
call
movsl
xchg
out
mov
test
nop
inc
jae
jns
jg
enter
push
pop
repz
pop
and
fcomip
or
imul
pop
push
icebp
cmp
ret
and
or
rdmsr
xor
jecxz
cmp
fdivs
rclb
and
loopne
out
lock
jle
ja
xchg
xchg
pop
dec
cmpsl
lea
lds
enter
sub
mov
les
mov
sbb
xlat
nop
subl
adc
das
bound
mov
cmc
xchg
aas
and
add
pop
push
fs
dec
dec
lds
mov
fisubrs
mov
mov
mov
jno
adc
imull
push
sbb
fimuls
stos
and
cmp
rorb
ja
mov
movsl
xchg
mov
lock
loopne
and
cmp
sbb
xor
mov
mov
jns
inc
scas
push
in
pop
rcl
shrb
ret
ljmp
lds
pop
dec
fldt
mov
ret
mov
cmp
xchg
stc
jae
cmpsb
popl
jnp
sub
dec
add
cmp
punpckldq
add
aam
mov
adc
adc
mov
bound
pop
mov
popf
dec
fcmovnb
sbb
pop
hlt
cmp
jae
push
test
ret
rolb
lret
sbb
in
sub
scas
pop
outsl
xchg
push
jnp
cld
testl
scas
mov
arpl
inc
pop
mov
pop
shl
sti
scas
mov
addr16
pop
fsts
call
ja
or
iret
dec
mov
push
lock
fnstcw
scas
repnz
pop
xchg
out
or
fdivr
ret
push
jge
push
xchg
sub
and
fistps
test
nop
cmp
jge
fiadds
sbb
mov
inc
or
imul
jmp
les
pusha
fdivp
mov
pop
sahf
sub
inc
dec
mov
adc
lods
inc
mov
cs
pop
shrl
lods
add
lock
mov
hlt
jle
loopne
subb
bound
pop
dec
push
movsl
nop
leave
mov
in
icebp
sbb
decl
int3
and
scas
inc
scas
pop
jmp
sub
dec
into
dec
inc
test
test
or
test
arpl
cmp
loop
mov
fiaddl
push
sbb
inc
jle
fnstenv
and
adc
jecxz
xchg
sbb
pop
fisubl
cmp
and
gs
cmp
shlb
inc
sub
mov
sbbl
push
sbb
repnz
jne
leave
cmp
and
arpl
or
cmp
pop
mov
scas
inc
shrl
xor
xor
sbb
pusha
mov
data16
pusha
fld
xchg
adc
inc
mov
out
sbb
mov
mov
mov
xor
andl
sbb
es
inc
rcrl
xor
mov
jp
mov
icebp
mov
and
lcall
shrb
sub
iret
ret
mov
scas
aas
pop
ffree
fsubr
aam
sti
insb
mov
jb
out
iret
arpl
stc
mov
push
dec
and
sahf
cmpsb
andl
test
sbb
xchg
js
shlb
sbb
push
mov
sub
pop
rol
jg
loope
xchg
fwait
jnp
out
out
out
ret
and
xchg
and
add
and
sub
add
push
add
repz
icebp
fisttps
out
or
jb
sub
sub
leave
stos
sbb
ja
pusha
daa
jae
outsb
mov
mov
mov
fiaddl
mov
nop
sbb
cmpsb
dec
xor
test
rorb
mov
xchg
dec
cmp
adc
sbb
sbb
mov
into
sbb
mov
xor
add
mov
sub
and
pusha
cmpb
mov
stc
jle
pop
insl
subb
fnstcw
xor
loop
mov
and
xchg
out
xchg
and
mov
lahf
add
xchg
push
pop
cmp
xchg
cld
es
xchg
call
fsubrs
cmp
cmp
popf
cmp
test
pop
sub
ret
les
add
inc
jge
sbb
mov
fwait
mov
jae
testb
movsl
lret
movsb
push
add
sub
add
jne
lods
addr16
mov
fnstcw
sti
ret
orl
jno
pop
jmp
dec
ret
ds
mov
rcrl
add
fnsave
xor
fstpt
dec
adcl
add
add
mov
ret
fisubs
add
loop
cmp
test
pop
xchg
mov
inc
cmpsl
mov
cmp
cmpsb
aaa
daa
xor
jge
imul
pop
dec
outsb
out
dec
jmp
mov
dec
adc
insb
into
cs
test
pushf
or
fildll
out
dec
sahf
dec
cmpb
push
sub
sti
pop
push
push
mov
jge
pusha
mov
fwait
aam
movsl
cmpsl
sbb
shrl
iret
sbb
nop
aas
inc
aad
jbe
hlt
out
data16
repz
push
or
mov
or
insl
iret
or
adc
xchg
push
cmp
cmpsl
shl
popf
repnz
rcr
adcb
fstpl
jne
sub
and
jl
push
xor
mov
xor
dec
push
sahf
ss
cli
sub
es
push
cltd
push
adc
xchg
aaa
notl
cmp
loope
out
loop
test
inc
shrb
in
iret
jecxz
push
aad
xor
mov
jns
or
pop
or
ficoml
jno
int3
jne
ja
ret
jle
notb
pop
push
dec
xor
push
mov
pop
mov
movsl
fisubs
mov
xchg
sbb
add
push
cwtl
repz
rorb
cmp
and
add
pop
mov
test
add
xlat
lods
sub
xorb
pop
and
pop
jnp
enter
xchg
es
notb
mov
mov
jnp
push
nop
orl
mov
or
push
cli
adcl
decb
xchg
cmpsb
icebp
ljmp
mov
sub
mov
or
hlt
test
xchg
cmpsb
and
xchg
out
xor
pop
jl
cli
jmp
sub
in
push
and
mov
imul
sbb
xor
push
jae
sbb
jo
mov
dec
adc
pusha
jl
stos
roll
sub
arpl
stos
daa
outsl
push
add
and
nop
cmp
mov
incl
xchg
xchg
adc
int3
xchg
orb
arpl
cmp
out
mov
push
sbb
pop
arpl
add
dec
cwtl
daa
adc
aaa
sub
add
lea
loopne
jg
xor
addr16
jl
popf
pop
aam
pop
sub
adc
sbb
inc
lahf
mov
push
sub
jns
fstpt
push
sub
test
pop
leave
fdivrl
pop
sub
ss
daa
xchg
fdivl
arpl
faddl
pop
ret
fstps
jp
lods
lds
fwait
fwait
sub
adc
lahf
pop
xor
push
int3
push
pop
daa
nop
fcmovnu
dec
dec
push
sarb
xchg
pop
ffreep
push
dec
cmp
lahf
ficomps
inc
mov
push
push
loopne
rcrb
sbb
cmp
sahf
pop
xchg
xor
popa
int3
sub
dec
push
sub
lret
add
and
cwtl
addr16
bound
mov
mov
seto
add
adc
mov
sarl
inc
leave
lcall
inc
sub
lcall
adc
das
inc
pushf
jne
gs
inc
mov
test
mov
and
adc
lods
imul
mov
push
repz
mov
pushf
ret
int
mov
lea
and
mov
ds
xchg
sti
sbb
ja
or
cmp
pop
xor
mov
loope
leave
test
push
pop
push
icebp
pop
mov
inc
xor
and
addb
rcr
mov
cmp
mov
ss
inc
and
cltd
push
sub
inc
pop
hlt
cmp
xchg
repz
mov
inc
cmp
cwtl
into
and
and
insl
ss
call
inc
dec
loope
dec
test
bound
push
jecxz
in
dec
dec
rorl
clc
insb
stos
inc
shrb
aas
ljmp
dec
push
xor
out
jmp
cmp
pusha
push
sar
into
stos
cmp
fcompl
mov
ss
adc
scas
and
mov
adc
jp
push
push
jns
inc
lcall
push
popa
mov
sarl
test
sbb
addb
mov
mov
adc
data16
iret
daa
add
cmp
test
push
les
sub
push
sbb
jnp
int
popf
cmp
lods
add
es
in
and
repnz
xor
push
sbb
dec
mov
scas
cmp
fs
xchg
pop
push
int
stc
or
stc
fdivrl
cmp
pop
stos
inc
dec
gs
pop
sbb
and
lds
mov
xchg
push
out
inc
fsts
inc
and
sbb
and
or
lods
adc
inc
jnp
addr16
xchg
rcr
lret
pop
push
jp
jmp
mov
arpl
out
mov
lret
test
adc
sbb
sbb
sar
lret
or
cli
gs
loop
mov
outsb
jl
insb
or
mov
repz
and
lock
mov
outsl
sbb
cli
rcrl
xchg
lock
or
mov
das
jns
dec
sbb
sub
jbe
dec
loopne
imul
push
pop
dec
push
shll
lea
insb
and
outsl
nop
shrl
pop
popa
sbb
stc
adc
decb
jbe
jae
xchg
and
mov
jl
stc
lods
std
in
repz
repz
and
push
shl
push
pop
sbb
push
lret
stos
call
mov
jl
sub
or
push
imul
jnp
in
push
push
rcr
add
out
data16
aaa
add
adcb
cs
xchg
dec
scas
jo
push
inc
pop
jo
inc
mov
cmc
and
aas
mov
xchg
stos
sti
sbb
cmpsb
scas
xor
gs
sbb
cmpsl
add
mov
testb
add
push
movsb
clc
lds
jne
fs
xchg
fsincos
rorb
xor
jmp
fistpll
pop
sub
out
cltd
push
dec
xchg
jns
mov
mulb
stos
scas
push
push
xchg
repz
outsl
mov
sti
cld
ret
cmp
sahf
ljmp
cld
inc
fdiv
pop
inc
cmp
imul
xchg
dec
add
sub
jmp
mov
sbb
mov
pop
stos
inc
cwtl
into
or
push
repz
pop
outsb
inc
fidivl
sbb
jl
or
dec
lock
lock
adc
imul
cmp
and
hlt
sub
scas
out
xor
loopne
pushf
jle
sub
popa
pop
movb
ja
call
insb
xchg
add
cmp
pop
and
push
cmp
test
cmp
jl
xchg
aam
imul
in
icebp
inc
jne
mov
xchg
sub
jno
jbe
fstpt
jb
jae
mov
ret
and
dec
lcall
rcl
xor
lock
mov
pusha
sub
int3
adc
int3
or
rorb
push
xchg
cmp
ja,pt
mov
mov
cmc
mov
out
pop
inc
or
xor
data16
mov
push
js
stos
push
imul
test
movsb
lock
test
xor
aad
lcall
out
cmp
and
ljmp
push
repz
pop
jne
sub
aam
pushf
cmpsl
add
insl
cmp
mulb
inc
cmpsl
xchg
xor
in
xchg
ds
pushf
out
sub
pushl
stos
and
lods
js
decb
test
out
jbe
push
mov
sbb
cmp
push
push
popf
mov
enter
add
and
and
or
loope
dec
mov
add
fs
pop
add
stos
mulb
or
hlt
cmp
fsubrl
mov
in
jge
test
pop
push
or
mov
popf
inc
bound
sub
test
stos
test
fdivrl
cmp
add
inc
inc
popf
dec
add
lock
or
push
leave
xor
and
xchg
sti
jns
lds
iret
adc
or
inc
faddl
leave
fwait
cs
xchg
out
lods
fs
or
sbb
ror
addl
push
ret
loop
sar
fcoml
lret
test
and
ficoml
mov
xorl
ds
sub
das
xlat
mov
mov
lcall
lods
pop
stos
fwait
xchg
cmp
xchg
and
mov
in
popa
outsb
fidivrl
mov
inc
xchg
shl
inc
mov
or
xchg
movsb
inc
lods
sbb
lahf
inc
call
cmp
mov
add
sub
leave
int
enter
push
dec
call
push
fwait
call
jno
into
mov
stos
jecxz
adc
dec
sar
ljmp
cltd
cli
mov
pop
push
pop
pop
shlb
adc
out
repnz
cmp
sbb
out
imul
sub
enter
aas
out
mov
xor
pushf
jecxz
inc
dec
inc
lods
mov
pop
mov
aas
xchg
inc
push
cli
xor
cmc
or
dec
xor
das
pop
sbb
fcomps
in
data16
or
outsb
les
in
jge
lahf
arpl
mov
jg
stos
add
jo
sbb
loope
les
imul
xor
pop
fistpll
dec
imul
ficoms
or
inc
fidivrs
adcb
inc
cmpsl
jge
adc
sti
dec
mov
out
lret
mov
fs
xor
add
in
test
dec
repz
xor
adc
jb
sub
cwtl
hlt
xchg
cli
es
cmp
inc
mov
jp
xchg
and
lahf
lahf
pushf
outsb
fiadds
out
bound
push
sub
in
or
xchg
dec
movsl
xchg
mov
pushl
mov
arpl
xor
hlt
aaa
js
dec
xor
jle
xchg
ds
fwait
addl
jp
movsb
test
push
dec
xchg
mov
cmp
jp
jmp
bndstx
cmpsl
insb
fdivrl
inc
push
ss
leave
clc
aaa
out
jmp
arpl
insl
shrb
lret
popa
add
rclb
pop
jae
out
clc
push
jmp
mov
popl
in
ret
dec
cmp
jb
push
lds
jns
pop
inc
loop
test
cmp
popa
jno
test
fbstp
pushf
sub
push
rep
or
xlat
jg
push
sbb
jmp
sti
add
pop
mov
clc
adc
xchg
pop
incl
and
imul
xchg
push
and
repnz
mov
push
andb
out
inc
push
mov
mov
mov
pop
aas
cmpsb
int3
testl
stos
test
call
jo
mov
mov
or
mov
xchg
adc
xchg
je
into
mulb
out
leave
mov
adc
aaa
arpl
data16
adc
in
xor
xchg
push
inc
dec
jns
ss
loop
mov
loop
push
mov
outsb
xor
sbb
fcoml
mov
or
add
sbb
fsub
std
and
test
aam
pop
pop
mov
cmpsb
jne
fldcw
sub
jno
xchg
sub
dec
jg
mov
rorb
data16
sbb
in
sbb
mov
dec
adc
jp
mov
out
push
mov
add
pushf
adcb
roll
mov
dec
es
inc
loopne
negl
sarb
addr16
rorb
add
inc
cmpl
sbb
imul
mov
mov
sub
xor
mov
pushf
fldt
pop
imul
dec
cmp
test
test
mov
mov
outsl
mov
and
mov
data16
sub
inc
inc
fwait
push
push
dec
xchg
xchg
mov
cmp
aad
loopne
cli
sub
je
insl
loopne
adc
xor
clc
adc
push
and
shl
test
sarb
dec
sub
adc
into
xchg
outsb
shlb
in
push
movsl
mov
ss
and
jmp
sbb
mov
sahf
push
mov
mov
jp
dec
lea
mov
icebp
or
das
lock
ret
cmp
test
and
out
push
mov
js
xchg
ss
fwait
cmp
adc
repz
in
adc
jle
in
sbbl
push
xchg
jns
push
popa
shrl
stos
das
lea
shll
fsubrs
lock
scas
std
jb
aaa
and
adc
jne
rolb
jmp
xor
xchg
test
mov
iret
adc
mov
into
inc
pop
lcall
jb
hlt
je
push
int
push
pop
or
xchg
in
cmpl
or
pop
pop
pop
daa
pop
pop
mov
repnz
xchg
in
cs
out
mov
aas
dec
pop
mov
pop
clc
rcr
inc
sbb
testb
std
test
loope
adcb
xchg
sbb
addl
repz
repz
dec
ret
mov
xor
repz
fcompl
cs
or
jmp
cmpsl
fdivr
frstor
loopne
xor
and
dec
test
push
inc
mov
imul
mov
pop
sub
arpl
into
jo
mov
jp
jl
sbbb
mov
test
pop
stos
dec
mov
pop
test
inc
out
stc
inc
inc
das
cmc
sbb
nop
rcr
push
lds
rol
dec
lock
xor
mov
mov
dec
aad
pop
push
inc
fisttpl
aam
adc
int3
cmp
or
loope
pop
sub
sbb
jb
dec
stc
stos
pusha
std
rorb
int
dec
insb
pop
mov
mulb
shlb
jecxz,pn
nop
jg
dec
out
iret
and
loop
mov
fwait
hlt
push
imul
fstpl
jmp
adc
cmc
push
shl
cmp
xchg
xchg
mov
stos
aaa
mov
push
jo
popa
lret
ficoml
jbe
jp
pop
movsl
stos
in
adc
out
adc
pop
mov
outsb
out
jle
mov
mov
sub
imulb
scas
dec
int3
xchg
jecxz
sub
dec
mov
rorb
dec
mov
cmp
repnz
mov
ficoms
jecxz
aam
test
mulw
shlb
outsb
comiss
sbb
mov
or
inc
dec
pop
and
stos
mov
mov
jl
out
out
mov
xchg
mov
cmp
in
mov
out
jo
loopne
jge
lahf
dec
dec
ds
out
fldl
in
mov
fs
jns
repz
mov
ret
jbe
pop
lret
fisttpl
or
jne
stos
jo
lock
out
call
mov
movsb
sbb
and
xchg
cwtl
push
push
push
cmp
dec
inc
mov
fisubrl
hlt
insb
push
incl
outsb
mov
xor
adc
cmpsl
fcoml
insb
dec
pop
mov
xchg
xor
sub
mov
cltd
add
mov
imul
sbb
add
push
xchg
ret
lods
push
jge
push
leave
xor
out
dec
sbb
jnp
or
inc
push
mov
add
shl
push
or
dec
js
and
xchg
loop
cli
push
jno
jo
aad
push
inc
ja
sub
loope
inc
lods
and
jb
push
loopne
paddd
mov
pop
mov
mov
pop
outsb
mov
scas
fisubrs
out
test
mov
rorl
out
sub
movl
fwait
loope
add
sti
push
push
out
testl
sbb
mov
cmp
imul
push
pushf
mov
shl
pop
pop
sub
push
cmp
aaa
push
sub
inc
cli
mov
pop
adc
pop
push
add
inc
lcall
dec
pop
inc
xchg
jmp
xchg
push
fsubl
push
mov
mov
jl
cmovne
xlat
pushf
inc
and
dec
mov
jl
std
adc
push
call
dec
mov
and
sbb
xchg
iret
mov
test
dec
sub
add
mov
ret
outsb
fiaddl
bound
out
test
cltd
or
adcl
push
rcrb
fmul
cmp
mov
call
mov
movsl
dec
das
cmp
mov
mov
test
daa
insl
sbb
out
adc
clc
xlat
out
adc
mov
shrl
cmpsb
scas
and
arpl
push
shlb
mov
iret
jle
push
sbb
jle
sbb
imul
inc
cmp
cwtl
jl
mov
cmpsb
and
jb
xor
orb
sub
fnsave
rorb
push
faddl
push
scas
xchg
mov
or
pusha
cltd
xchg
scas
mov
sub
out
data16
jp
mov
imul
xor
loope
fnstenv
aad
cwtl
shl
popf
jecxz
mov
fwait
and
stc
mov
or
faddl
mov
sbb
cwtl
add
hlt
push
inc
mov
ja
cltd
popa
stc
jp
cmp
lret
stc
dec
and
xchg
iret
mov
test
dec
scas
orps
sub
jb
sahf
sbb
adc
sbb
fiaddl
add
ret
cmp
fimuls
fwait
jecxz
mov
pop
push
in
lods
outsb
xor
mov
mov
ret
push
and
jo
lret
ret
adc
xor
jecxz
cwtl
pusha
xor
dec
cmp
outsl
cmp
loope
pushw
inc
cwtl
sub
xchg
jnp
mov
into
enter
and
std
lret
mov
sbb
adc
iret
arpl
sarl
mov
jl
sti
cmpb
cmp
sub
push
push
loopne
fadds
fldt
lods
loope
cmp
mov
das
xchg
aas
or
inc
or
jne
ss
sbb
add
mov
pop
inc
sbb
push
push
stos
ja
jl
sub
ds
add
xor
and
adc
mov
push
mov
sbb
ja
mov
in
mov
push
sahf
into
lock
cs
pop
lods
insl
scas
test
sbb
and
add
out
cli
add
mov
in
imul
cmpsb
jl
pusha
jg
subl
outsb
jo
ss
cltd
xchg
xchg
aas
inc
stos
xor
or
inc
movsb
int3
lods
or
cmp
ljmp
leave
push
out
pop
out
test
mov
cli
or
arpl
add
push
call
add
adc
cltd
lods
adc
arpl
stos
sub
scas
fistpll
sahf
add
mov
adc
insb
dec
leave
push
clc
inc
and
daa
jle
insl
loopne
dec
pop
nop
xor
pop
or
cmp
jmp
jmp
insl
cld
push
push
nop
mov
jb
pushf
jo
push
fcomip
pop
orl
and
cmp
test
repnz
aaa
ret
ja
ficoml
adc
imul
pop
sub
das
push
sub
shl
pusha
mov
shl
aas
add
add
sbb
or
faddl
fidivrs
aas
js
sti
inc
push
and
adc
js
into
fsts
pop
sub
clc
jo
sub
push
outsl
push
dec
sub
pop
das
sub
cmp
add
or
dec
or
loope
inc
incl
lods
pop
inc
cmp
dec
mov
incl
add
add
push
jnp
pop
lods
ss
dec
leave
scas
notb
and
out
sbb
mov
mov
xchg
sti
ss
or
cmp
pop
and
insl
aam
mov
notb
scas
or
dec
xchg
mov
pop
mov
fisubl
xchg
mov
mov
dec
call
lock
and
lods
push
sub
mov
sbb
pop
cltd
fs
cmp
xor
bound
dec
sub
sbb
fnsave
js
rcll
mov
cmp
lds
push
inc
and
xor
mov
lret
adc
sbb
push
adc
pop
xor
fiadds
add
lcall
cmc
int
adc
faddl
mov
xchg
lods
lock
mov
int3
ja
jns
push
sub
enter
sbb
je
in
push
movsl
dec
sub
mov
mov
insb
xor
add
xchg
andl
cmpsl
mov
add
pop
adc
mov
cmp
dec
mov
outsl
pusha
out
adc
cwtl
inc
mov
sub
push
adc
andb
incb
stc
scas
adc
cmpsb
push
push
call
test
lahf
pushl
dec
dec
dec
pop
imul
lret
sbb
test
dec
xchg
and
aam
loope
sar
dec
push
pop
jge
js
shll
xor
dec
mov
fstpl
mov
mov
imulb
ljmp
loope
inc
or
lds
lea
mov
sbb
xor
pop
lods
xchg
lods
cmp
rclb
fldt
clc
mov
or
daa
cmp
daa
cli
xchg
dec
xor
adc
pop
jl
aam
movsl
mov
cs
mov
mov
cmp
test
jae
dec
lret
mov
popf
mov
jge
fs
aas
xor
movsb
sub
pop
pop
cs
xor
push
out
lcall
inc
mov
call
inc
adc
add
mov
movsb
dec
aaa
mov
push
jle
jae
and
lock
in
inc
mov
lcall
jge
cwtl
scas
jmp
adc
adc
and
imul
scas
enter
call
shll
mov
xchg
or
clc
jmp
je
jecxz
jl
popa
fwait
pop
mov
jmp
mov
sarb
lea
movsl
lods
inc
or
ret
rcrl
sbb
cwtl
fldenv
mov
jae
dec
or
frstor
sub
mov
ss
dec
mov
mov
fs
arpl
pop
roll
movsl
ds
inc
vpshaq
cwtl
push
adcb
outsl
in
cmpsl
cmp
mov
in
icebp
jb
outsl
inc
lods
add
adc
xchg
rorb
int3
xor
push
ret
jge
mov
mov
sub
mov
shll
into
jne
std
rcrl
mov
test
lcall
cld
jno
lods
mov
pop
pop
shlb
cmp
scas
mov
js
nop
add
or
push
xor
in
pusha
in
jle
loopne
pop
push
pop
scas
insl
lcall
and
notl
sbb
inc
stos
mov
xchg
ret
cmp
orl
icebp
stos
mov
icebp
mov
mov
add
fisubl
int
jae
xor
inc
ljmp
fsubp
adc
pop
andl
test
and
jmp
xchg
mov
stos
loopne
lods
stos
adc
push
inc
dec
mov
xorl
sbb
lea
sti
ss
mov
cld
cltd
sub
jmp
ret
adc
in
mov
adc
jmp
dec
push
stos
sub
pop
cmp
cmp
mov
mov
in
xor
inc
and
and
mov
adc
adc
ds
stos
das
std
mov
jp
lods
push
cwtl
add
jp
scas
xchg
cmp
push
adc
test
ds
repz
xlat
scas
in
mov
jae
mov
outsb
jge
sbb
ljmp
leave
jb
fidivrl
and
mov
dec
mov
into
and
adc
cmp
out
push
push
dec
int3
aam
lods
pop
fldenv
call
jp
pop
mov
mov
mov
mov
xor
xor
jbe
cli
std
lret
daa
xor
stos
call
lret
cmp
punpckldq
jnp
arpl
pop
mov
outsb
cwtl
sbb
icebp
out
sub
jl
std
add
cmp
iret
and
cmp
mov
arpl
scas
push
rcll
push
sbb
rcll
pop
sub
aad
addr16
xchg
pop
pop
and
and
sbb
repz
pop
jmp
ffreep
jae
mov
mov
fidivrs
adc
sbb
cwtl
xchg
mov
loop
in
pop
inc
jns
andb
test
in
scas
divw
in
lods
test
int
test
mov
fldt
push
add
pop
xor
call
ja
or
jmp
mov
cltd
aas
and
xchg
popf
lcall
sbb
mov
jb
aam
data16
pop
cmc
mov
push
cmp
mov
ljmp
les
sbb
sbb
in
dec
call
xor
addb
aaa
pop
pop
in
fists
daa
adc
mov
push
mov
lods
in
sbb
imul
inc
mov
dec
mov
push
fsts
hlt
sbb
inc
mov
or
dec
enter
pop
xor
aaa
jle
dec
jo
add
and
popa
iret
pusha
dec
ror
mov
inc
arpl
xchg
out
sbb
sub
lock
fmul
fs
xor
icebp
ja
add
cwtl
push
insb
mov
lods
outsl
cmp
push
inc
inc
mov
dec
popa
testb
lods
aas
shlb
dec
pop
int
lret
out
test
dec
mov
push
xchg
jo
cmp
or
push
lea
popa
in
sahf
lahf
lods
pop
mov
mov
sub
fbstp
jbe
inc
repnz
add
cmpsl
lret
stc
or
mov
dec
inc
and
or
pop
mov
js
sbb
test
sub
push
std
aam
imul
fs
call
icebp
ret
and
rorl
clc
test
out
loop
pop
in
out
lahf
xchg
push
gs
sti
jecxz
addl
or
push
arpl
xor
fwait
mov
xor
adc
sbb
aad
adc
push
out
icebp
outsl
xchg
out
jmp
inc
mov
xchg
cs
pop
adc
and
xchg
sbb
or
or
ffreep
mov
sbb
rclb
dec
ja
aaa
cmp
mov
push
stc
pop
movsl
xchg
icebp
int
daa
insb
mov
mulb
sbb
stc
push
and
mov
test
decl
push
imul
enter
popa
mov
pushf
mov
in
ja
inc
cwtl
cmp
hlt
sahf
subl
mov
popf
sub
jge
lahf
rcrl
push
sbb
adc
mov
leave
stos
test
jb
rcrb
popa
pop
xchg
pop
dec
jle
push
adc
pop
das
push
xchg
push
stc
mov
data16
xchg
sub
and
mov
mov
pop
xchg
clc
and
lods
idivb
and
push
lods
xchg
pop
notb
xchg
ffreep
fcmovu
push
lock
xchg
pop
stos
pusha
aam
jnp
popf
push
lret
or
sbb
fwait
sbb
imul
push
xlat
out
mov
add
jbe
call
or
or
push
pop
daa
pop
or
jns
pop
mov
dec
out
pop
and
sbb
jle
fnsave
rorb
popf
fstpl
add
mov
out
sbb
ret
sub
or
movd
leave
adc
and
push
pushf
inc
mov
fbstp
cmp
repnz
dec
mov
repnz
push
add
jle
in
cmpsb
push
push
int3
jno
sub
or
mov
mov
jle
xchg
pop
outsb
das
outsl
sub
subb
fs
push
inc
mov
mov
mov
adc
or
outsl
adc
mov
fsubrs
push
xor
cltd
cs
pop
inc
mov
ret
jp
testb
xor
push
iret
in
pop
add
lcall
dec
or
es
loop
dec
test
fstpl
xor
ljmp
ret
inc
jbe
daa
push
stos
mov
addb
orb
movsl
test
pop
call
je
cmpsl
test
cwtl
rolb
xchg
scas
lret
jmp
sbb
push
inc
adc
es
call
jb
lret
cld
or
xchg
mov
mov
mov
pusha
jo
push
es
adc
jnp
ljmp
fdivl
daa
js
test
and
movsb
bnd
add
mov
leave
addr16
fdivrs
jbe
fmull
jg
inc
jg
jp
push
arpl
cmp
jl
mov
sub
aaa
ret
mov
outsb
cmp
push
cmpsl
mov
addb
jne
aam
or
mulb
push
je
fcomi
pop
inc
or
cli
xor
sbb
xlat
nop
xchg
mov
pop
jo
aam
or
jnp
cs
sahf
push
enter
lods
pop
sbb
pop
jne
call
adc
jnp
icebp
dec
and
or
cli
push
or
sbb
pushf
aad
mov
ljmp
xchg
ds
ds
sbb
mov
aaa
pop
adc
or
popa
adcb
and
movsb
int
aam
leave
mov
add
div
stos
rol
in
repz
pop
jge
sub
push
pusha
aam
inc
dec
test
push
sbb
xor
mov
jbe
push
imulb
cwtl
jne
loopne
xchg
jne
xor
jl
and
add
pop
mov
jl
cld
push
in
jae
lcall
sbb
or
dec
sahf
loopne
dec
xchg
bound
push
lods
add
lds
fs
or
sar
enter
in
jne
sahf
addr16
inc
bound
ja
xchg
cmpb
push
or
dec
cmp
sub
call
xor
stos
iret
pop
das
push
lock
xchg
icebp
inc
inc
mov
insb
loop
ljmp
push
and
pop
adc
mov
lods
push
jecxz
fcmovnu
cmp
pop
icebp
int
jle
dec
xchg
mov
inc
jbe
mov
stc
add
outsl
sbb
mov
jmp
or
popf
aam
movsb
push
push
cmc
daa
loopne
aaa
jge
iret
dec
adc
outsb
dec
lcall
cltd
adc
lds
push
les
mov
inc
test
mov
pushf
mov
daa
shrl
sahf
idivl
mov
scas
cmp
mov
or
mov
mov
test
jbe
mov
js
push
rcll
stc
lds
jle
pop
jnp
pop
in
mov
fisttpl
push
js
gs
push
jmp
sbb
cmpsl
inc
mov
jmp
sub
fwait
dec
arpl
add
cmp
dec
inc
mov
push
dec
fdivl
mov
push
insl
jg
and
xchg
pop
ss
testl
xorb
ja
cmpsb
jecxz
xchg
rcrl
in
je
movb
negl
mov
fisttpl
jo
cmpsl
adc
jnp
cltd
sub
sub
mov
cmpsb
push
dec
jb
push
cli
inc
pop
inc
or
mov
xorl
jns
add
arpl
jle
push
push
add
mov
fmull
scas
sbb
xchg
dec
pop
in
sarb
jne
adc
sarl
movsb
lods
lds
adc
enter
xor
dec
push
hlt
in
jmp
ficoms
sbb
adc
push
sbb
pop
mov
mov
inc
cmp
pop
das
push
loopne
aam
stos
notb
adc
inc
xorb
or
inc
mov
lret
stos
cmp
jge
call
shl
xchg
insb
xchg
insb
mov
dec
loop
xchg
cmp
jmp
cmpsb
push
in
mov
inc
push
and
lcall
mov
mov
popa
mov
inc
push
sbbl
jle
pop
add
cmp
js
push
call
jecxz
cltd
test
mov
mov
or
lret
jp
repnz
jns
or
cmc
add
or
sub
lret
sbb
adc
mov
dec
mov
mov
xchg
lahf
jns
mov
popa
mov
mov
adc
push
cli
jecxz
ljmp
idivb
push
clc
ljmp
scas
clc
sub
stc
jge
call
pop
cmp
push
adc
adc
mov
pop
addl
cmp
mov
int
jg
repnz
dec
or
mov
fistps
fs
or
and
ret
gs
ret
mov
pop
pop
sbb
and
push
adc
cld
push
pop
xor
cmp
pop
push
mov
bound
aas
pop
or
fnsave
js
inc
loopne
repnz
cmpsb
push
push
xor
fldt
push
loopne
mov
mov
push
mov
mov
jo
negb
jg
dec
into
stos
insb
rcrl
cmp
xchg
sti
je
pop
sbb
jbe
dec
xchg
pop
repnz
cmp
cmp
test
cmpl
jno
cmpsb
push
sahf
mull
mov
dec
clc
xchg
pop
xor
imul
pushl
mov
nop
xchg
xor
rcrl
and
push
xlat
es
sub
cmp
adc
pop
push
int
mov
shrb
ret
add
xchg
out
mov
mov
mov
fisubs
in
sbb
push
imul
fstl
mov
adc
cli
stc
inc
mov
sub
shll
addr16
xchg
cmpsb
or
pop
inc
dec
shll
pop
lods
sti
fldt
and
or
dec
xor
int3
and
xchg
jnp
dec
ret
shll
inc
scas
lea
xlat
fincstp
mov
loope
dec
jne
or
rol
or
jg
gs
jbe
rcrl
and
insb
jle
in
xchg
nop
inc
jae
jl
xchg
sub
sub
mov
rep
mov
pop
xor
xor
cmp
sbb
and
fsubl
adc
lods
outsl
gs
outsb
adc
insl
adc
xchg
arpl
xchg
shll
enter
pushl
jb
aam
inc
add
mov
in
push
call
bound
xor
jge
mov
nop
stos
add
sbb
sbb
inc
sbb
mov
mov
push
bound
mov
mov
icebp
dec
or
pop
mov
ret
add
xlat
xor
inc
xchg
movsl
jl
mov
pop
sbb
out
add
mov
cmp
lahf
cmp
mov
mov
mov
fstl
jmp
jbe
xchg
addr16
inc
jne
mov
loopne
les
imul
insb
or
jbe
push
xor
int
fs
dec
insb
add
sub
xor
addr16
cwtl
pop
mov
inc
imul
or
push
dec
jp
and
mov
push
dec
lea
js
mov
push
push
iret
and
pop
mov
fwait
lock
out
jb
adc
pop
gs
or
pop
insl
jo
or
jbe
fmul
xor
mov
push
sar
out
in
xchg
inc
push
pop
push
inc
repnz
push
sub
jmp
dec
sbb
cli
pop
jne
lods
imul
arpl
mov
dec
jge
dec
mov
jns
dec
xor
stc
lret
pop
rorl
sbb
push
sub
inc
xchg
add
push
imul
les
xchg
mov
in
js
pop
inc
and
inc
mov
jno
cmp
pushf
jecxz
mov
out
setnp
pushf
out
call
and
std
jge
ret
ret
ss
arpl
out
push
das
fstp
mov
int
sahf
cmpsb
hlt
movl
int3
in
xchg
mov
mov
fidivs
insb
mov
sub
xchg
outsl
jmp
dec
pop
arpl
or
std
mov
add
mov
mov
es
adc
cmpl
or
dec
popf
xchg
push
jecxz
add
inc
mov
jo
mov
leave
lcall
popa
inc
jbe
adc
sub
adc
adc
fcomp
roll
jge
jmp
loopne
fdivrs
push
mov
arpl
xor
mov
dec
sti
shlb
dec
pop
pop
mov
dec
out
sbb
arpl
jge
and
scas
mov
clc
mov
mov
cmp
js
mov
add
jae
inc
jb
xchg
lea
sbb
lret
inc
dec
aas
and
xor
aad
jb
icebp
es
adc
in
daa
andl
inc
add
imul
inc
xchg
or
adc
ljmp
push
daa
mov
adc
lcall
or
dec
jg
inc
adc
adc
adc
nop
gs
cmpsb
fs
scas
dec
sbb
cli
gs
sub
xor
adc
add
mov
and
sbb
int
idivl
or
xchg
cmp
inc
clc
push
cmp
dec
jns
xor
clc
jb
dec
adc
pop
nop
imul
xor
mov
push
jmp
adc
sarb
stos
das
push
and
aam
mov
addr16
out
cmp
arpl
cmp
mov
adc
loopne
loop
out
inc
fstpt
adc
sbb
iret
xlat
flds
out
leave
cli
sub
inc
adc
inc
mov
pop
or
mov
testl
ficompl
shlb
daa
movsb
xor
sub
mov
sar
pop
push
add
in
insl
cs
mov
or
pop
cmp
adc
pop
arpl
ds
cltd
xchg
add
cltd
mov
out
push
cmpsl
mov
lds
pusha
or
sahf
loopne
dec
jns
add
das
test
mov
cwtl
lret
push
add
loop
leave
jecxz
rolb
sub
addr16
arpl
mov
loope
daa
cli
js
dec
mov
push
sbb
je
mov
sbb
push
jno
aad
mov
mov
jmp
je
lds
rcll
jns
popa
fsubr
sub
pop
mov
imul
or
pop
je
push
lret
aam
loop
push
push
cmp
dec
scas
mov
mov
xor
maskmovq
notl
sbb
cmp
jmp
imul
jle
jns
inc
call
dec
orb
ja
push
adc
ret
les
and
bound
and
and
sbb
shll
cmp
rcll
fstl
adcl
ja
test
xchg
js
adcl
pushf
cmp
jns
loop
ja
repz
insl
push
jle
sub
xlat
jnp
inc
insb
add
mov
jnp
lds
fstl
and
add
lahf
inc
es
andb
loop
xchg
call
or
sub
ret
fnsave
inc
or
fs
xchg
rorl
jnp
sar
xlat
notb
es
inc
and
adcb
pop
repnz
in
mov
aas
das
xchg
lods
pop
stos
sbb
mov
dec
int3
jne
push
fildl
xchg
divb
sub
add
mov
jg
xlat
jg
jo
and
add
mov
xchg
arpl
adc
scas
lcall
cmpsl
mov
mov
push
sbb
loop
jo
aad
push
inc
fidivrs
jns
push
les
insb
xchg
pop
fldt
rorb
and
and
jae
xor
stos
inc
outsb
pop
lock
mov
jecxz
lods
repz
add
jmp
mov
movl
sti
push
filds
orb
mov
or
xchg
out
xchg
shl
push
aaa
fstpl
mov
in
in
cmp
ljmp
push
sbb
decb
mov
aas
xor
mov
clc
loopne
popf
xchg
repz
mov
jb
cmp
mov
cmp
pop
push
repnz
xlat
or
xchg
sub
mov
fdivl
fcoms
jno
cs
jb
sub
mov
hlt
out
mov
fcmovne
rolb
push
and
scas
push
cmpl
loopne
add
xchg
or
dec
add
inc
imul
aas
mov
jecxz
fdivl
xchg
test
push
pop
scas
jg
mov
cwtl
dec
adc
dec
mov
aad
lret
popa
inc
cmp
sbb
ja
ja
xchg
cltd
mov
shl
pusha
push
mov
or
cmp
orl
lock
push
jo
sub
hlt
xor
jle
mov
cmc
push
mov
pop
mov
mov
fwait
pushf
shrl
cmc
inc
lea
xor
pop
cmpsl
adc
int3
jmp
dec
xor
cmpl
mulb
add
xchg
pop
jp
out
lea
psadbw
popf
jns
xchg
xor
ret
adc
insl
das
dec
jno
call
cmp
jmp
push
aam
xchg
in
and
repz
ds
lret
push
pop
mov
inc
fsubp
stc
jo
or
push
cltd
popf
subps
cmc
mov
scas
or
movaps
arpl
shll
push
dec
jns
fs
mov
loop
sbb
jnp
imul
cwtl
or
lahf
cmpsb
xor
jl
xchg
testl
cltd
jnp
iret
sbb
push
stos
in
dec
cmp
mov
mov
add
nop
scas
jno
stc
jns
leave
add
test
lret
xchg
cmpl
push
or
push
cld
pop
xor
imul
sub
mov
xor
test
daa
scas
lcall
xor
ret
and
add
sarb
fistl
lea
fiadds
nop
add
inc
push
fildl
xor
test
mov
jb
cmp
jp
pop
dec
shll
shll
shl
and
sub
in
jo
cwtl
pop
out
shl
xchg
push
cmpsl
xchg
mov
or
fs
dec
je
sbb
dec
test
xchg
imul
push
cmc
xchg
and
mov
or
shrb
aad
repz
repz
in
mov
jns
loope
pop
xor
adcl
outsb
shl
inc
lds
sub
dec
mov
mov
dec
pop
inc
pushf
sbb
sarb
or
sub
dec
mov
push
mov
jbe
movsl
scas
mov
inc
add
enter
xor
cli
cmp
push
idivb
add
lods
xor
in
inc
aad
in
mov
add
sbb
mov
ja
or
cs
mov
mov
mov
popf
mov
xchg
and
push
cli
or
pop
out
sub
mov
xor
pop
pop
mov
jp
pop
rcrb
aam
test
mov
adc
jecxz
ja
leave
ljmp
shrl
sti
sub
bound
jns
or
mov
lret
jg
ror
adc
std
push
es
pop
inc
and
rcll
mov
add
xor
xor
je
xchg
push
int3
sti
fsubrs
adc
test
lret
xor
cmp
ss
adc
test
stos
xchg
lret
cs
int3
jns
mov
sbbl
add
or
dec
push
icebp
add
jnp
adc
shl
pusha
or
and
and
xor
inc
in
daa
dec
lods
sbb
and
mov
cmp
cmp
popf
addr16
sbb
movsb
adc
int3
push
cmpsl
sbbl
xchg
and
imul
out
mov
lret
in
jbe
fsts
test
lret
jmp
mov
pop
popa
mov
punpckhbw
lcall
pop
popa
cmc
jecxz
adc
mov
pusha
push
mov
loope
cmp
es
shl
pop
into
aad
shlb
sub
out
ds
or
es
jb
fdivrp
lea
pushf
addr16
inc
sbb
scas
sbb
jge
scas
divb
lods
adc
sbb
lods
sub
notb
lock
les
out
adc
cmp
xchg
push
dec
stc
or
lds
pushf
out
mov
inc
push
cs
dec
fisubrs
mov
sub
adc
insl
add
in
push
mov
pop
cmpsb
inc
je
jnp
and
mov
cmpl
jmp
pop
jg
fistl
lods
jl
and
pop
lret
sbb
pop
stos
es
jecxz
bound
cmp
sbb
add
inc
addr16
clc
movsb
das
pop
divb
or
mov
out
scas
out
fwait
mov
mov
adc
sbb
idivb
jbe
xchg
mov
subl
and
mov
fwait
in
aad
into
lock
xchg
js
call
sbb
popf
negl
inc
push
xor
into
pop
xchg
in
mov
cs
shr
inc
scas
xchg
sbb
mov
xchg
pop
scas
test
push
movsl
insl
xchg
stos
popa
xchg
adc
sbb
push
lcall
mov
stc
ss
out
mov
rorl
movsl
cmpl
mov
xor
mov
adc
daa
add
mov
cmp
push
xor
jg
jb
js
and
xchg
loopne
sbb
xchg
push
xor
add
mov
jp
sub
fbstp
outsl
xor
daa
in
call
testb
dec
inc
cmp
jns
ja
js
xlat
dec
int
stos
pop
shlb
call
stos
sahf
aam
stos
dec
dec
push
sbb
call
ss
stos
test
scas
xlat
push
cmp
xchg
std
sbb
dec
mov
or
test
push
arpl
cmp
mov
ljmp
cmpsb
cmp
aas
and
popf
adc
test
xchg
sbb
mov
pop
mov
shrb
outsb
xor
mov
push
or
sahf
cmp
insl
jae
idivl
je
cltd
sub
enter
lcall
repz
mov
push
xlat
cmp
fisubrl
pop
cmp
out
fdivrs
adc
mov
push
dec
dec
cs
and
pushw
push
popa
test
ret
lods
icebp
in
jg
stc
mov
outsb
js
dec
cmp
fiaddl
lea
clc
les
cmp
lock
rcrb
or
fwait
data16
shlb
jp
or
add
pushf
sbb
pop
add
mov
dec
rcll
jbe
pop
sub
jmp
dec
testl
popa
sbb
cmpsl
out
cmp
jmp
iret
repnz
xchg
jl
mov
and
inc
movsb
mov
pushf
repz
mov
das
roll
mov
pop
inc
popf
orl
das
ds
arpl
loop
xor
ds
sub
push
hlt
mov
std
push
or
xor
test
cmc
mov
jne
outsl
mov
bound
call
and
das
lock
cmpsb
fsubr
and
jge
pop
xchg
shll
lods
and
xor
cld
decb
xchg
adc
xor
and
xor
neg
dec
jo
cmp
xor
aad
sbb
in
mov
cld
or
sub
xchg
je
flds
cmp
jne
cmp
dec
hlt
cmp
push
and
jle
outsl
out
dec
popa
test
pop
sti
inc
hlt
jo
adc
and
scas
lahf
setnp
adc
xchg
mov
daa
mov
les
jecxz
ss
jg
ds
inc
inc
pop
add
dec
sarb
mov
sbb
ret
xor
sub
bound
mov
mov
roll
inc
or
mov
repz
pop
sbb
mov
leave
dec
and
lret
test
das
xchg
test
sub
and
lds
inc
aaa
mov
in
and
push
pusha
dec
or
ja
xchg
jns
ljmp
xor
shll
outsl
mov
mov
into
outsl
jb
xor
cmp
divl
jmp
add
mov
ss
fld
mov
mov
adc
inc
test
ja
ret
or
sbb
divps
and
cwtl
or
add
push
dec
flds
dec
cmpl
loope
pop
int
dec
je
mov
or
and
test
out
mov
jmp
cmp
dec
mov
dec
roll
movsl
lods
xchg
aas
je
inc
add
dec
mov
outsb
icebp
imul
sub
xchg
or
jmp
xor
gs
aaa
mov
mov
cld
pusha
in
sub
cmp
jno
fadds
fcomps
cmpsb
dec
divb
imulb
andb
inc
lds
ds
popf
loope
fs
addr16
xchg
sbb
ficoms
fdivl
negl
lcall
jmp
xor
sahf
scas
add
nop
push
aam
mov
adc
repnz
xchg
popf
fnsave
fistl
push
xchg
mov
jns
sbb
inc
sbb
xchg
pushf
in
adc
aad
divb
rdmsr
jns
into
rorb
mov
xchg
fistps
ljmp
sbb
insl
push
jge
mov
dec
xchg
cmp
jl
cmp
loope
add
clc
mov
jae
shl
shlb
mov
adc
das
lahf
pop
xchg
xor
xchg
fisubl
dec
inc
fs
insb
loop
lods
dec
gs
insb
push
xchg
fldl
cmp
cmp
jne
test
mov
adc
movsb
sub
ret
roll
push
movsl
pop
sub
jle
sbb
aam
mov
not
enter
std
pop
cmp
fwait
pushf
mov
insl
xchg
mov
mov
xorl
lret
pop
out
xlat
and
jmp
mov
roll
je
das
lret
call
or
rep
ds
and
jge
fidivl
cs
add
aaa
mov
xchg
xchg
stc
les
fs
mov
test
ja
hlt
xchg
pop
sbb
je
add
push
xlat
jbe
aas
xorb
movsb
push
test
add
int3
sbbb
mov
push
mov
jae
sbb
sub
aaa
sbb
shrb
sbb
add
sbb
out
arpl
test
mov
inc
mov
jnp
jecxz
mov
adc
xor
fsub
test
mov
vmwrite
addr16
push
pop
jae
jb
ret
stc
ror
fisubs
jmp
jl
in
mov
shrb
call
mov
loopne
lds
je
and
imul
adc
and
xor
repnz
into
fisttpl
dec
and
mov
in
in
xlat
mov
lock
lret
sub
pushw
adc
addl
fistpl
mov
sub
ret
sub
js
jl
movsb
jae
pop
xchg
cs
cwtl
jae
add
mov
xor
cs
dec
jmp
cmp
mov
mov
inc
popa
movsl
fs
pusha
xchg
nop
and
push
sbb
mov
aaa
jbe
push
sub
in
clc
jg
andl
into
or
scas
movsl
dec
movsl
jmp
scas
inc
inc
or
aas
xor
test
cmp
test
jae
pop
mov
inc
push
jns
into
jns
sub
xor
stos
movsb
outsb
scas
inc
scas
scas
bound
lods
pop
xchg
and
sub
push
add
outsl
sahf
test
in
inc
pop
adc
mov
stos
jo
jmp
arpl
add
or
adc
roll
hlt
cmpsb
mov
pop
add
jno
cmpsl
mov
jbe
std
xor
lahf
xchg
jae
adc
jecxz
into
xor
aaa
imul
out
call
inc
leave
icebp
mov
xchg
bound
lock
pop
cmp
cmp
lds
and
outsl
push
test
ja
js
jp
loope
movl
xchg
rcrb
ret
and
rorb
cli
inc
test
and
lods
cmp
jecxz
cmp
and
jmp
xlat
shrb
mov
or
test
xor
test
clc
ds
jne
dec
rcrb
lods
cmc
je
addr16
mov
sbb
lret
sbb
in
jl
mov
fs
sub
cli
sbb
cmp
jecxz
shlb
out
je
ja
dec
mov
sub
cltd
aas
xlat
mov
scas
xchg
cli
fdivs
xchg
popf
jne
aas
adc
pop
andl
push
or
or
push
stos
idivl
mov
fmuls
sub
jmp
jle
mov
lcall
or
or
testl
mov
arpl
in
clc
push
dec
pushf
in
push
ret
jne
mov
rcl
cmp
sbbl
push
sbbl
push
cmpsb
test
int3
inc
mov
xor
xchg
adc
stos
lcall
pop
pop
inc
cmpsl
sbb
sbb
jg
xor
aad
jns
mov
in
and
cmc
popf
popf
inc
cmpsl
sti
adcl
mov
daa
jae
sbb
cmc
dec
push
dec
jg
jne
mov
lds
cmp
lret
daa
lock
outsb
mov
cli
unpckhps
enter
push
inc
sbb
mov
lds
adc
sbb
pop
loop
bound
add
push
cmc
push
xor
outsl
jmp
mov
cmp
cmc
rcl
fcmovu
cwtl
jnp
inc
pushf
sbb
call
pop
push
dec
mov
imul
scas
test
loope,pt
out
push
cmp
dec
ljmp
lea
lret
sahf
jg
cmp
sub
out
shll
jbe
js
jne
add
enter
push
test
fs
out
shl
dec
lahf
addl
sbb
and
addr16
cmpsb
fwait
xor
test
or
add
js
or
stos
je
jle
mov
in
jo
mov
jp
inc
cs
stc
in
jo
imul
xlat
dec
stc
push
lods
cli
and
js
mov
xor
mov
xchg
jmp
adc
mov
cmc
mov
repz
addr16
lods
ds
push
adc
xor
add
or
xor
outsb
xchg
shl
xor
mov
outsb
in
lods
sti
pusha
pop
outsl
movsb
test
mov
test
insl
cmpsb
stos
cmp
pushf
pop
mov
push
pushf
out
inc
sub
gs
fdivp
inc
push
or
sbbb
aad
mov
int3
int
fwait
mov
add
mov
lcall
jno,pn
dec
sbb
in
xor
push
lahf
subb
mov
in
loope
jmp
test
push
inc
mov
pop
pop
mov
ljmp
test
push
sbb
rcll
stos
sbb
ljmp
pusha
shll
push
add
frstor
push
sbb
shll
cmp
int
and
xchg
fidivs
fdivs
fnstsw
pop
dec
cmpsl
fsubs
or
arpl
inc
loopne
inc
test
xchg
jne
in
arpl
cmp
add
jp
cmp
sub
dec
loopne
testl
mov
adc
cmp
mov
cmpsl
rcrl
aaa
call
jge
mov
ret
mov
cmp
fs
push
fmull
cli
push
test
xchg
ja
or
cmp
scas
pusha
xor
sbb
xor
into
test
pop
shl
pop
ja
and
loop
arpl
roll
ret
pop
test
mov
test
scas
inc
pop
xlat
dec
xor
mov
jl
and
mov
lods
in
idivl
aam
outsb
es
cmp
adc
cmpsb
repz
mov
mov
clc
cmp
aad
mov
lds
aas
int
xor
or
je
or
int3
or
inc
xchg
cmp
adc
insb
xor
out
addr16
in
std
mov
pop
imul
movsl
jbe
sbb
rcrb
scas
fisubrl
cmc
rorl
sbb
pop
and
lret
cmpsb
sbb
int3
dec
aas
and
xorl
enter
fiadds
dec
push
mov
fcoms
incl
adc
sbb
mov
cmp
xchg
std
cwtl
cmp
cmp
enter
stos
pop
arpl
sub
add
fs
xchg
aam
cld
std
cmc
mov
jge
xlat
cs
sbb
clc
andb
fcompl
rcl
add
addr16
and
jg
scas
loop
push
push
outsb
sub
sbb
ljmp
mov
and
loope
psllq
out
decl
leave
mov
nop
call
int3
add
add
sbb
jae
or
inc
or
test
xor
or
gs
add
xchg
filds
imul
sbb
mov
jle
xor
leave
adc
js
fisttps
pop
inc
push
add
in
int3
adc
cmp
add
sbb
xchg
scas
rcll
cmp
push
add
xchg
rolb
jecxz
pop
push
push
mov
scas
pushf
fildll
xor
mov
es
or
nop
push
pop
ljmp
add
push
sti
stos
cs
dec
ljmp
sub
clc
in
mov
mov
dec
mov
fstps
xchg
aaa
mov
xlat
addps
subl
test
andps
push
fisubrl
mov
fisttpll
testl
in
dec
xorb
xor
pop
mov
push
leave
out
push
push
jmp
inc
jg
loop
jae
sub
cmpsb
inc
pop
xor
stc
jp
nop
xchg
mov
rcrb
rcrl
cmp
repz
xor
cmpb
mov
outsb
enter
mov
inc
mov
cmp
pop
push
xchg
andl
icebp
aas
sbb
roll
dec
mov
ljmp
inc
jmp
mov
call
ret
in
pop
pop
insl
pop
or
outsb
add
dec
jo
call
xchg
xchg
push
mov
and
daa
sub
lods
rorl
xor
outsl
mov
sub
cld
and
jl
mov
adc
data16
mov
ret
mov
adc
aas
test
hlt
aas
jno
inc
adc
sbb
data16
repz
cmp
ljmp
xchg
mov
or
jle
lods
scas
push
mov
js
cltd
testb
fs
jo
pop
loopne
xor
mov
add
jmp
int3
jae
xor
mov
ret
out
leave
xchg
stc
sti
pop
mov
mov
ret
pop
sbb
inc
push
popf
and
sbb
adc
push
out
jp
sub
jnp
neg
cli
rorb
loope
outsb
sub
or
add
or
mov
push
cmc
add
adc
nop
mov
lods
jb
pop
cld
je
inc
pop
mov
jge
xchg
int
aas
pushf
pop
addr16
push
mov
ds
lret
sbb
jmp
lea
pop
shrl
mov
das
cmc
mov
mov
pop
pop
in
out
mov
dec
jmp
and
inc
leave
inc
js
dec
push
pop
scas
inc
dec
push
dec
outsb
movsb
out
adc
scas
outsb
xchg
and
leave
mov
fldt
cmp
xor
xor
pop
jae
xlat
ret
frstor
shll
js
cli
or
cmp
xchg
inc
pop
stos
dec
dec
inc
mov
cmp
jae
inc
xchg
push
cs
addl
xor
sbb
int3
jne
loope
jns
out
mov
xchg
push
subb
das
dec
xor
insb
and
pop
fdivrl
gs
xchg
aaa
fbld
xchg
xchg
pop
xchg
adc
hlt
lahf
cld
test
fildll
sub
rolb
aam
push
mov
fdivrs
xor
fs
and
push
add
mov
jae
scas
inc
adc
stc
shlb
xor
mov
jp
push
sbbb
aad
or
cmpsl
je
cmp
jge
xor
push
dec
repz
sbb
jnp
xchg
sub
icebp
test
setle
mov
push
and
mov
popf
sub
pop
out
jbe
mov
inc
mov
adc
mov
jmp
lcall
inc
std
or
cltd
inc
out
pop
out
sbbb
mov
shll
xorl
mov
jecxz
sbb
fisubl
xchg
cmp
lods
and
stc
cwtl
sahf
cwtl
insl
jg
icebp
ljmp
and
sbb
adc
xchg
cld
sbb
jle
movsb
mov
ss
fiadds
pop
dec
nop
lock
loop
mov
andb
hlt
mov
cmc
aam
lods
data16
fcoml
jo
imul
dec
mov
das
mov
movsb
adc
mov
ret
add
adc
cmpb
in
ud2
repz
adc
in
adc
or
icebp
std
add
add
jne
sub
pop
insb
xchg
int
ss
fstpl
movsb
cmp
dec
jno
push
mov
xchg
pop
or
sub
jecxz
mov
and
adc
out
aam
in
movsl
stos
lock
mov
jno
mov
mov
mov
in
sahf
dec
sahf
imul
dec
sbb
cmp
lds
push
ror
push
leave
adc
rorl
and
mov
mov
xor
sbb
test
loope
ret
xchg
jae
fcoml
aas
xchg
gs
mov
xchg
shll
xchg
ret
orl
adc
xlat
aam
fucomp
jae
call
jle
mov
call
scas
sub
dec
and
xchg
cs
adc
stos
jne
aas
sbbb
and
movsl
dec
fisttpl
pop
push
mov
insb
sarb
sarb
cld
lcall
push
add
loopne
sub
mov
add
jb
add
push
mov
push
repnz
xchg
pop
push
mov
sub
mov
les
je
adc
ja
sarb
jbe
lret
out
inc
lahf
mov
xor
jge
adc
roll
adc
lock
loope
scas
mov
mov
cmp
inc
test
sub
add
mov
mov
jmp
mov
pusha
xchg
sub
mov
jne
stos
and
jae
jmp
inc
pop
icebp
jmp
stos
or
out
and
sub
mov
pushf
rorb
cmp
shlb
ret
adc
stc
cmp
dec
pop
divb
jo
in
enter
pop
jecxz
xchg
icebp
xor
fs
icebp
mov
sub
pop
daa
mov
int
in
cmpsl
fildl
and
inc
cmpsl
lea
loop
fsubs
je
fimull
mov
ds
lock
lea
jge
dec
cmp
mov
insb
je
jnp
mov
cmp
cmp
test
cmpsl
insl
xor
inc
les
jmp
mov
adc
in
test
fcmovnu
es
push
sbb
and
xchg
cmp
or
ds
xchg
cmpsl
das
test
dec
call
or
inc
sub
inc
xlat
adc
dec
nop
or
mov
push
or
or
dec
push
pop
sbb
jl
push
push
push
or
sahf
mov
mov
out
addr16
mov
jae
fisttps
cmp
cmpsl
sub
dec
sbb
jbe
aad
mov
pminub
sbb
xchg
mov
mov
loopne
pop
movsl
xor
add
dec
imul
dec
sub
ret
inc
data16
jle
ljmp
xchg
shrb
xchg
jae
inc
dec
aam
into
std
in
mov
or
pusha
xlat
or
push
fisttps
in
out
xchg
out
pop
pop
inc
aad
xor
and
lcall
mov
pop
cmp
adc
aaa
pop
test
dec
mov
mov
add
and
mov
inc
cld
jnp
lods
loop
into
and
jnp
push
jb
and
dec
loopne
loope
hlt
or
pushf
stc
push
lahf
push
fistpll
lcall
mov
sub
lcall
in
addb
pop
ret
cli
jb
inc
setae
pusha
cwtl
push
daa
fstpl
out
mov
pop
mov
mov
aam
cmp
shl
enter
sahf
jae
and
pop
pop
xchg
fcoms
fwait
xchg
push
fucomp
mov
ffree
mov
or
adc
bound
in
sbb
dec
mov
xchg
rorl
lods
fwait
dec
mov
mov
mov
in
lret
ret
imul
inc
sar
addb
cltd
cld
jno
xor
add
mov
bound
cmp
push
mov
push
or
js
iret
rcll
adc
mov
inc
xchg
movsl
jae
unpcklps
ret
les
outsl
adc
in
pushf
sub
iret
adc
xchg
push
xor
mov
xor
in
arpl
in
push
cmp
add
cli
pop
mov
xor
mov
rcll
sub
cld
repnz
out
imul
movsb
pop
std
jbe
sbb
xor
aaa
jg
or
jecxz
insb
dec
bound
popa
test
adc
lret
ds
xchg
pop
fimuls
imul
outsb
mov
sbb
jnp
idivl
pusha
dec
xor
adc
lock
inc
cmpb
jae
jae
jge
fcomps
lods
mov
daa
sub
fsubp
add
sub
frstor
add
in
inc
fnsave
and
jo
in
push
cmp
cmp
mov
out
ja
mov
adc
insl
mov
pop
xchg
pop
popf
inc
push
xlat
cmp
inc
fldenv
push
add
js
fsubr
lea
xchg
sbb
hlt
pop
xchg
sahf
sub
jo
lret
hlt
adc
mov
or
inc
and
jae
cld
jbe
lret
iret
xor
cmp
fisttpl
cmp
push
xchg
bound
dec
cli
hlt
in
mov
in
cmp
insb
outsl
push
les
or
dec
add
lcall
sub
repz
cmpsb
dec
inc
dec
lods
jmp
sub
xor
psllw
adc
sbb
aas
ljmp
xchg
out
sbb
std
dec
imulb
mov
push
mov
sub
daa
das
paddb
addr16
fwait
and
dec
test
loopne
jne
or
into
mov
dec
xchg
pop
loopne
or
xor
mov
pop
fistpl
jle
mov
frstor
ret
mov
imul
inc
inc
inc
xor
jno
leave
mov
or
out
fwait
inc
rcll
in
sub
shll
aam
orb
jnp
cmpsb
stos
jmp
psubw
icebp
gs
js
sub
das
dec
and
xorl
insl
inc
or
mov
inc
test
dec
rcl
sub
call
sub
fcompl
fyl2x
dec
insb
call
out
jbe
mov
hlt
in
mov
xor
mov
pushf
adc
fnstcw
push
rol
adc
sub
sub
movsl
jbe
mov
sub
or
test
xor
call
ds
push
and
cmp
dec
fimull
fucomp
xor
shll
push
push
adc
int
testl
cs
leave
or
xorb
xlat
jge
sub
mov
and
and
push
lds
sar
sbb
inc
jle
and
push
sbb
lret
push
xchg
std
cmp
dec
jl
and
int3
fdivrs
mov
jb
pop
outsl
ds
mov
out
and
test
mov
sbb
call
adc
push
pop
sbb
scas
push
mov
mov
stos
hlt
cmp
xor
dec
mov
orl
popa
movsl
sbb
stos
push
mov
and
mov
mov
and
mov
lea
call
cmp
xchg
mov
hlt
sbb
xorl
fstpt
lock
and
add
ret
movsb
xchg
cmp
popf
xor
xchg
orb
xchg
popa
cmp
xchg
mov
ret
movsl
cli
lret
imul
loope
loopne
cmpsb
adc
dec
imul
push
lahf
sub
mov
insl
cli
add
roll
mov
dec
mov
push
mov
leave
dec
xchg
enter
sbb
lret
cld
cmp
add
or
mov
mov
lret
push
and
aas
es
xchg
mov
ret
outsl
test
sub
pop
adc
pop
mov
pop
sbb
cmp
pop
arpl
repz
cmc
sbb
cmc
daa
pushf
ss
mov
fidivs
cld
adc
mov
lcall
mov
ljmp
cmpsl
sub
dec
add
pop
cli
out
movsl
mov
sbb
arpl
push
xchg
or
cmp
adc
lcall
clc
pop
or
std
cmpsl
jmp
pusha
mov
ds
les
pop
negb
cmp
xchg
sti
push
je
sbb
call
inc
in
mov
loopne
in
sbb
xchg
loope
shrl
push
aas
lods
pop
imul
dec
cltd
ss
fs
pop
mov
scas
and
sarl
sub
sub
jecxz
lcall
sub
in
cmpl
scas
movsl
subl
mov
je
inc
fisttpl
mov
sub
aaa
bound
mov
push
mov
sub
mov
loope
push
cmpsl
jmp
test
push
test
pusha
iret
cli
fildl
xchg
adcl
cmp
adc
mov
fldl
cwtl
xlat
movsl
jae
sbb
lcall
shr
jecxz
mov
dec
arpl
and
fdivrp
push
or
sub
into
fidivl
push
gs
in
sub
lret
inc
mov
jle
dec
aas
mov
imul
int3
jmp
mov
popa
add
cmpsl
cmp
bound
pop
push
bound
jecxz
nop
pop
out
push
scas
pop
shlb
jp
push
jl
sti
aas
inc
and
imul
subl
and
xor
in
adc
jno
sbb
outsl
cltd
insl
lea
sub
adc
xor
in
dec
stos
mov
push
xor
cmp
setb
rorl
dec
fists
int3
ret
adc
pop
std
in
inc
ret
out
sti
pop
xchg
cmpl
jns
lods
sarl
cltd
stos
jmp
inc
dec
or
pushf
pop
sub
cwtl
mov
test
add
nop
xchg
ret
sbb
popa
mov
ret
clc
shll
fstpl
pusha
enter
rolb
push
add
dec
pop
cs
or
filds
shrb
mov
rcrb
inc
fldz
add
mov
jbe
push
mov
cmpsl
dec
loope
pop
ja
add
and
imul
sbb
and
mov
push
cwtl
mov
fadds
dec
xlat
mov
aam
jmp
fnstcw
sub
out
jle
sbb
jb
cmpsb
fsubs
js
sub
popf
xlat
lret
shrl
push
fs
movb
and
or
aas
scas
adc
cltd
hlt
or
pinsrw
pop
mov
incb
addr16
dec
inc
mov
or
mov
adc
mul
dec
enter
lock
out
rolb
fwait
test
arpl
jo
dec
ds
push
orl
or
test
xchg
hlt
xchg
xchg
lds
nop
in
dec
adc
fucomi
lcall
or
mov
and
mov
sbb
push
sbb
push
xchg
add
in
mov
jecxz
scas
mov
dec
cs
lods
insl
arpl
cli
jo
xor
es
xor
mov
pop
aam
inc
cmp
int
pop
mov
cwtl
ds
jge
and
push
add
and
cltd
ret
outsb
mov
sbb
mov
or
adc
jp
pushf
adc
sub
rclb
enter
cld
push
insl
xchg
inc
fwait
pop
push
xor
mov
cmp
adcl
je
iret
and
add
or
sub
movsb
insb
aam
or
jecxz
cmp
aaa
lods
cmp
ss
jae
or
lea
xchg
icebp
xor
xchg
push
or
js
mov
push
add
mov
inc
dec
or
fistpl
imul
push
dec
mov
imul
ret
inc
test
mov
mov
lods
out
test
dec
loopne
gs
pop
lcall
xchg
aaa
cmp
hlt
sbb
adc
test
inc
stc
xor
inc
hlt
xor
test
cmp
mov
daa
rcll
shl
fdivrs
jecxz
inc
stc
xchg
xor
fadds
push
push
insl
push
ss
sbb
test
inc
sub
or
daa
or
iret
jp
cmp
iret
mov
scas
xor
push
andb
mov
movsl
jmp
inc
cld
or
pushf
ss
lcall
mov
inc
ss
sub
cmp
mov
aad
or
adc
push
xor
add
push
push
sub
mov
loop
cltd
add
push
lds
add
subl
out
rclb
lock
call
sub
adc
fidivrl
dec
cmpsl
daa
adc
repnz
test
dec
push
js
inc
push
loope
inc
xchg
loope
adc
stos
cli
mov
repz
mov
aad
pushf
mov
outsb
mov
sbb
jp
inc
push
xor
inc
in
inc
push
jmp
add
jbe
fdivp
inc
or
inc
lea
mov
out
testl
push
sub
aam
mov
sub
jb
fcoml
ret
jle
cld
adc
cmp
into
mov
and
cmp
ss
push
push
outsb
cmpsl
pop
jno
stc
arpl
xor
jno
xchg
ljmp
xchg
and
movsl
pusha
cld
mov
pushf
inc
mov
mov
popf
data16
insl
cmp
inc
inc
cmc
cwtl
pop
sti
pop
cmp
pop
lds
push
mov
cltd
push
or
jecxz
cmp
lret
in
test
jle
push
mov
into
insb
xchg
fidivl
call
push
ja
lock
inc
pop
mov
sbb
inc
lods
insl
xor
mov
cld
or
cld
push
mov
dec
push
push
pop
hlt
jae
lods
push
imul
shll
hlt
sbb
fstl
jmp
jg
jae
adcb
insb
dec
imul
std
inc
fcomps
imul
mov
sbb
push
inc
fiaddl
fwait
mov
sbb
jnp
neg
test
fstl
push
vmread
popa
sub
clc
pop
bound
int
sbb
stc
jl
pop
pop
lahf
jns
imul
fwait
lahf
fstl
lods
in
arpl
pusha
in
jmp
xor
push
cmp
mov
cmpb
pop
icebp
flds
push
outsl
and
out
jge
jl
dec
push
inc
inc
xor
ss
gs
xchg
les
rcr
aad
sbb
sub
mov
adc
movsb
in
hlt
adc
cwtl
mov
fistps
insl
les
cli
xchg
cmp
mov
pop
pop
push
rcrb
xor
gs
ds
rorb
and
dec
scas
or
sbb
add
xchg
aad
inc
sub
sub
mov
dec
ror
andnps
push
hlt
repz
lfs
into
imul
loope
xor
pusha
push
mov
stc
inc
sti
dec
sbb
pop
jp
mov
adc
clc
jg
dec
mov
and
js
cltd
repz
inc
dec
pop
xlat
pop
cmp
push
adc
enter
cmc
shl
mov
fiaddl
imul
inc
insb
sbbl
adc
out
sub
adcl
mov
movsb
jle
mov
jle
pop
in
pop
cmp
ds
xchg
cmpsb
push
orl
test
repz
or
arpl
in
repz
mov
inc
inc
loopne
inc
jbe
repz
jne
insb
sub
mov
xor
jae
clc
stc
pop
mov
lret
sbb
in
pop
pop
cmp
aaa
js
das
sub
inc
pop
dec
jo
in
leave
push
jbe
cmc
cmp
sarb
adc
mov
addr16
xorl
hlt
pop
cmp
mov
fwait
inc
push
or
or
out
shlb
stc
pop
sbb
jp
xor
and
fiaddl
xor
sub
add
cmpl
shr
mov
loope
andl
and
ja
cli
adcb
fdivl
mov
fistpll
fucomi
adc
loopne
mov
pusha
mov
cmp
and
imull
lds
pop
imul
push
and
cmp
pop
add
enter
cwtl
cmp
je
movsl
movl
fwait
push
xor
mov
imul
lret
aam
dec
stos
shr
bound
js
fs
outsl
fs
dec
enter
cmp
lahf
and
cli
xchg
dec
dec
sbb
gs
add
or
nop
loop
mov
inc
into
ds
enter
mov
filds
dec
xor
push
fadd
js
mov
cmp
in
xchg
sbbb
test
scas
jl
lods
mov
xchg
imul
scas
sub
pop
jge
and
sub
adc
dec
scas
or
movsb
and
scas
xchg
add
imul
jmp
sti
call
cmp
out
mov
push
pushf
movsl
xor
jae
aas
int
adc
out
les
ljmp
stos
movsb
insb
out
arpl
ret
test
pop
daa
mov
push
stc
sub
into
in
mov
push
dec
popa
xchg
push
jns
cmpsb
lods
lock
fcompl
pop
outsl
cmp
inc
rol
test
es
leave
aam
aam
ss
adc
add
movsb
dec
insb
pusha
xchg
and
movsl
andl
addr16
pop
mov
std
mov
or
push
icebp
jecxz
es
push
jecxz
pop
andb
idiv
pop
or
aaa
popa
inc
ja
sbb
fwait
js
mov
fisttps
call
push
sbb
enter
jo
stc
pop
cmp
pop
mov
and
push
fnstcw
jne
push
inc
shlb
cmp
add
dec
add
out
iret
repz
dec
or
das
sbb
sbb
mov
sub
data16
add
sub
mov
mov
loopne
leave
lea
mov
andb
dec
hlt
mov
pop
inc
push
imul
xor
add
les
cmp
jne
lahf
mov
pop
stos
ja
push
ja
push
mov
pusha
rcrb
sbb
mov
scas
aas
sti
inc
pop
ror
and
add
or
fildl
lock
and
loop
xor
jo
enter
jnp
or
fiaddl
rcrl
cmp
and
scas
pop
fnstsw
xchg
add
add
fcoml
mov
mov
pop
mov
adc
popa
clc
sub
jg
jbe
lods
pop
xrelease
lret
daa
test
push
inc
xchg
ds
repz
mov
cmpsl
into
dec
add
cmpsl
mov
nop
arpl
shlb
adc
inc
jb
mov
sbbl
sub
fstpt
orb
xchg
insb
scas
jge
out
cmpl
pop
divl
push
repz
jmp
fdivrl
cmpl
jno
jg
fildll
or
mov
movsb
jmp
mov
and
sti
lret
xchg
jae
sbb
mov
push
lock
sbb
push
mov
pushf
mov
movb
cmc
cmp
pushf
sub
stos
pop
rclb
inc
inc
cli
pop
add
cmpsl
pop
push
jge
mov
xor
pop
or
add
adc
xchg
lcall
jnp
xchg
and
xchg
sub
mov
icebp
mov
lret
or
mov
cmpsl
loope
mov
or
jle
out
gs
das
dec
dec
repnz
shll
cmp
aaa
add
loopne
iret
dec
outsb
xchg
sbb
push
popf
movsl
lods
sub
mov
repz
loopne
fisubrs
test
adc
dec
aad
xchg
fldcw
inc
fs
shlb
rorw
into
add
insb
or
in
rorl
pop
movsl
nop
mov
and
inc
sbb
adc
dec
mov
retw
loopne
ja
repnz
dec
pop
mov
dec
loop
loopne
pop
push
push
movsb
scas
ljmp
clc
outsb
dec
sbb
sub
adc
jmp
mov
sub
enter
jl
fcompl
icebp
leave
inc
mulb
pop
jae
rorb
pop
iret
xchg
fs
or
leave
test
mov
push
jmp
cld
mov
cmp
and
cld
cmc
test
push
pop
arpl
jno
inc
stos
mov
push
sbb
nop
mov
into
push
daa
repz
pop
ss
fildll
mov
push
cmp
fadd
inc
or
mov
inc
xchg
sbb
int3
fildl
sub
inc
jbe
xchg
pop
aam
test
repz
pop
fadds
test
inc
dec
rcll
mov
es
stos
jge
movl
iret
pop
mov
das
lahf
mov
iret
pushf
push
insl
push
fbstp
jmp
add
mov
push
lahf
aaa
pop
jns
dec
mov
jl
lock
outsb
and
or
mov
leave
push
add
xchg
cmp
out
lahf
inc
xor
xchg
shrb
popa
das
sub
mov
mov
xlat
adc
push
mov
aad
sub
xor
loope
lcall
mov
mov
xor
mov
sbb
sub
jmp
xchg
xchg
xchg
mov
stos
mov
push
stc
movsb
pop
xchg
push
cli
test
add
fildl
cmc
fadds
xorb
push
adc
ljmp
pop
pushf
inc
and
pusha
or
mov
sbb
sbb
mov
int
fdivl
jg
test
or
inc
lods
adc
insb
or
addr16
cmp
jno
and
loopne
sbb
inc
or
sub
hlt
jl
outsb
and
inc
bound
ret
mov
aad
nop
pop
push
xchg
push
jns
andl
roll
adc
iret
mov
fs
or
jl
orb
cli
ljmp
jle
int
fcmovnu
leave
inc
pop
jg
cmpsb
and
imul
lods
stos
notl
adc
mov
arpl
push
cmp
je
stos
fs
inc
cs
mov
ja
xlat
clc
sub
mov
sbb
jo
sbb
sbb
pop
inc
stos
adc
mov
lret
jl
imul
push
out
jno
and
xchg
and
mov
mov
cmp
pushf
stos
imul
dec
add
adc
es
fs
loopne
lea
movsl
cld
and
mov
lret
mov
outsb
shr
testl
add
add
lds
into
lahf
mov
sub
xorl
cmp
shlb
jmp
outsl
pusha
inc
fdivl
out
dec
xor
jmp
fwait
out
adc
xor
cmovnp
scas
loopne
push
sbb
popa
xchg
xchg
into
pop
xchg
cli
lods
insb
mov
jle
cmpb
or
mov
or
imul
inc
clc
pusha
loop
aas
mov
popa
popa
sub
fisttpll
jae
inc
hlt
jp
leave
adc
hlt
mov
xor
mov
and
sub
cmpsl
xor
fisubrs
fmul
in
pop
gs
and
or
pop
rcl
data16
stc
and
inc
test
insb
int3
rcrb
jp
mov
in
and
popf
fcompl
ss
inc
inc
cmpsl
addb
xor
xchg
mov
xchg
bound
xchg
cld
xchg
jmp
push
sarl
mov
pop
sbb
dec
movsb
jl
jge
xchg
cli
cmp
mov
xor
lcall
push
xchg
xor
lcall
xchg
scas
ja
sbb
ljmp
and
dec
mov
das
frstor
jb
add
mov
fs
hlt
or
icebp
nop
sti
dec
fndisi(8087
xchg
incb
fwait
loope
je
jb
in
lret
push
jg
jp
shrb
inc
int
outsl
inc
addr16
fiadds
jg
inc
scas
subl
push
int
mov
in
out
hlt
add
push
lret
xchg
pop
fs
in
xchg
arpl
scas
fdivl
xchg
aam
popl
jg
add
rcrl
sar
insl
inc
fstl
ds
nop
pop
call
or
fsubrl
dec
dec
pop
es
cld
lret
cmp
inc
mov
leave
mov
xlat
ret
mov
add
dec
ja
and
sub
mov
pop
pop
nop
cltd
mov
pause
adc
fsubr
push
out
jns
loope
in
decb
loope
or
jbe
mov
outsl
sbb
test
push
jg
aad
imul
sub
push
push
sub
sarb
sub
inc
push
sub
sub
hlt
idivb
xchg
lods
cmp
push
xchg
stc
aas
adc
or
negl
and
inc
clc
jp
xchg
std
fdivr
add
inc
adc
xor
test
add
pop
jne
xor
repnz
xor
dec
cwtl
pxor
push
xor
insb
mov
popf
push
leave
jge
xor
cmp
xchg
sub
dec
add
mov
fldcw
push
mov
out
mov
xchg
push
sbb
mov
pop
mov
cld
mov
imul
aad
hlt
sti
ret
mov
testl
and
and
dec
in
das
mov
pop
imul
daa
sub
ljmp
test
je
pop
js
mov
push
mov
addr16
repz
sub
test
jns
rcrb
mov
or
fld
add
xor
aaa
mov
stos
inc
sbb
cld
mov
xor
and
jle
dec
jl
xchg
dec
jmp
lret
fistps
ror
pop
fs
roll
push
test
filds
out
into
xor
xor
push
inc
es
pusha
mov
je
into
adc
shll
test
adc
push
dec
inc
cmp
push
mov
xrelease
rolb
rorl
xchg
xchg
fistpl
popa
gs
sbb
cs
mov
jne
in
cmp
mov
mov
jle
jp
lock
cs
mov
sub
ds
xchg
dec
push
xchg
and
iret
scas
push
inc
or
xchg
mov
imul
push
loopne
and
loope
hlt
dec
aaa
add
jle
insl
jae
mov
mov
mov
fldcw
adcb
jnp
decb
pop
cmpsb
jb
pop
add
popa
mov
sahf
or
push
test
addr16
cmp
jne
pushf
mov
js
popa
dec
dec
cltd
sar
popf
mov
arpl
bound
fs
fs
xchg
push
movsl
pop
xchg
push
imul
lea
and
stos
pushf
and
lcall
xchg
pop
cmp
mov
and
jmp
jmp
and
int
div
mov
das
jne
xlat
adc
pop
mov
loope
jmp
cmpsl
cltd
int3
test
fidivrl
jne
xor
movsb
jb
stos
jg
shll
pop
cmp
aas
data16
sub
rcrl
xchg
mov
out
out
shlb
out
cmp
cmp
push
xor
fldt
inc
cmp
pushf
inc
mov
leave
int
adc
imul
in
insl
push
adc
jo
stos
fadd
pavgw
jl
dec
mov
cmp
jae
jge
insb
or
loope
divl
mov
cmp
decl
sbb
mov
xor
ret
inc
mov
loopne
into
xor
ljmp
notb
stos
enter
mov
sbb
xchg
cltd
xor
jb
fiadds
test
xacquire
cmpsb
hlt
std
mov
jae
mov
addb
sahf
pop
lret
lahf
mov
dec
jbe
stos
push
lods
or
ret
jae
sub
lock
jnp
scas
cli
cmpsl
inc
jmp
ss
xchg
jp
arpl
adc
dec
inc
mov
xchg
mov
xor
iret
fldenv
lcall
es
cmp
mov
push
mov
push
ljmp
pop
mov
imul
fyl2x
shrb
jmp
mov
cwtl
push
xor
inc
popf
std
jg
xchg
mov
inc
xor
and
add
push
jnp
push
xor
sti
ret
les
or
jno
sbb
mov
cltd
mov
test
fldt
xchg
aas
push
mov
lea
fldcw
pop
rcrb
cmpsl
sub
ret
gs
xchg
mov
push
sahf
lcall
adc
dec
in
sbb
fadds
outsb
mov
jns
movsl
dec
mov
push
test
mov
imul
movsl
clc
pop
push
hlt
jecxz
pushf
enter
dec
outsb
cs
mov
in
fsubl
jle
mov
and
cmp
in
aam
dec
iret
test
sub
int3
push
sub
cmp
int3
subl
pushf
mov
stos
xchg
aas
lds
nop
adcl
xlat
jbe,pt
push
or
rclb
dec
das
pushf
outsl
mov
inc
fistps
jnp
pushf
call
idivl
sub
sahf
popf
loope
jl
adc
pop
cmpsl
pop
das
xor
sbb
enter
cmp
sbbb
xchg
cmp
fidivrs
sarl
aas
scas
jge
mov
pop
jns
xor
addr16
je
out
mov
pusha
cmp
into
popf
or
push
in
ficomps
cmp
push
ror
add
mov
push
xchg
imul
push
or
and
or
xlat
js
add
cmp
aaa
cli
xor
cli
das
pushf
jb
jecxz
int
jge
neg
dec
add
pop
fs
mov
add
int
cmpsb
jbe
cltd
cmp
push
nop
mov
arpl
push
mov
outsl
int3
mov
aad
std
repnz
andb
mov
mov
or
push
test
lahf
xchg
les
out
loope
xchg
aad
loope
sub
mov
adc
dec
pop
sbb
jmp
cld
push
je
pop
aam
mov
mov
int
push
add
cmp
lahf
and
test
push
cmp
stos
dec
mov
or
cli
icebp
test
and
mov
shll
pop
lret
cmp
push
adc
fnsave
dec
imull
jp
pop
adc
rclb
adc
std
es
mov
xor
mov
out
mov
dec
mov
outsb
cmpsb
or
fs
icebp
mov
jbe
sbb
ret
add
pop
cmp
or
fimull
xlat
cwtl
lret
repnz
push
push
xchg
xor
in
test
loop
add
rcrb
mov
jg
mov
sub
xchg
in
loop
ret
jecxz
mov
mov
xchg
sahf
mov
mov
and
shlb
sbb
je
jbe
pushf
add
fimull
loopne
enter
mov
cli
sti
addb
or
loopne
call
pop
dec
mov
idivb
xor
lods
addr16
pop
idivl
push
std
imul
mov
lret
inc
inc
mov
pop
cmp
mov
jecxz
jbe
das
and
fimuls
pop
jle
sbb
xor
stos
insl
mov
out
mov
jo
lea
cmp
push
or
lods
cmp
lret
bound
sarb
inc
push
add
and
dec
bound
loope
ficoms
sbb
inc
jne
sub
xchg
rorl
sbb
mov
cld
gs
sbb
mov
scas
test
addb
xchg
cli
decl
sbb
in
add
loopne
push
and
xor
lods
pop
mov
ss
xor
out
mov
xor
jns
popf
leave
adc
push
aaa
jns
dec
je
mov
mov
push
sti
adc
mov
xchg
pop
cli
xchg
pop
int3
ja
mov
lds
mov
push
add
pop
das
xor
rcrb
sub
dec
adc
mov
outsl
push
int
jcxz
shll
ja
sbb
sbb
mov
jge
nop
insl
int
daa
arpl
dec
and
mov
xchg
mov
bound
lea
or
and
sub
cs
push
add
cmp
subl
std
testb
jno
mov
sahf
std
or
inc
test
add
pop
testb
pop
mov
pop
xor
xor
mov
into
repz
jae
dec
dec
pop
inc
lods
fs
test
jne
push
mov
faddp
pushf
inc
in
fucomp
sub
pop
mov
dec
aas
mov
pop
sub
xchg
push
mov
cs
fcmovu
ljmp
jle
xchg
dec
or
or
cmpsb
repnz
mov
sbb
xchg
mov
andl
or
ds
mov
mov
adc
adc
mull
and
pop
mov
adc
adc
imul
adc
loopne
pop
test
pusha
sbb
xchg
jmp
jp
mov
out
mov
pop
lock
or
into
cmp
pop
or
or
add
cmp
cs
bound
arpl
mov
out
mov
mov
std
popf
jecxz
fs
prefetch
cmpsb
lea
mov
std
movsb
repz
loopne
push
ss
and
rclb
aas
lods
add
mov
adc
dec
nop
mov
outsl
mov
or
and
scas
les
dec
out
cmpsl
xchg
sub
scas
inc
pusha
divb
pop
test
mov
lahf
cmpl
jns
inc
xchg
inc
push
and
xchg
and
js
push
dec
jae
ds
stos
adc
jae
sub
and
decl
dec
in
sbbb
mov
jae
fs
push
mov
mov
ret
nop
cmp
dec
mov
jl
cmpsb
in
cmpsb
pop
add
repz
sub
jg
push
rorl
dec
dec
pop
cmp
xor
cmp
js
cmp
pop
xchg
inc
mov
pop
je
xchg
adc
mov
cltd
sub
xor
jne
jg
outsl
jle
nop
pop
sbb
sahf
inc
aam
das
pop
push
add
xchg
loopne
pop
scas
out
stc
push
xchg
int
xor
leave
mov
outsl
leave
xor
push
ret
mov
mov
xor
and
push
aas
jecxz
jg
jmp
and
jge
js
aad
push
pop
mov
out
pop
xchg
pushf
int
rclb
sbb
jp
iret
and
jno
jae
push
mov
jnp
or
mov
outsb
adc
jge
mov
popa
das
push
in
out
hlt
jne
outsb
inc
and
lds
lods
mov
loope
ss
add
mov
out
sub
stos
in
es
inc
insl
xchg
mov
xchg
jo
pushf
test
mov
out
sbb
lods
xchg
dec
das
xchg
lahf
cmpsl
sub
aam
adc
cld
cmp
cmp
jmp
dec
add
cwtl
out
fisttpl
push
nop
sbb
dec
xchg
lock
lahf
cltd
stos
icebp
xchg
std
push
mov
jo
daa
daa
pop
lret
pop
sub
popa
mov
add
mov
out
sbb
addr16
jmp
jns
dec
adc
inc
inc
data16
or
pop
cmc
xor
dec
lods
dec
pop
lret
rcll
mov
pusha
sbb
sbb
inc
js
cmp
loope
xchg
jle
xchg
fdivs
shrl
imul
stc
jmp
dec
xor
hlt
jmp
cmp
int3
sub
push
cmpsl
lods
mov
cmp
cs
out
lldt
jne
fucomp
mov
fidivrl
cli
push
inc
shlb
andb
bound
cli
mov
sbb
test
pop
sahf
push
ss
add
xor
imul
cmp
loope
pusha
mov
cmp
jmp
clc
lea
ljmp
es
lret
cmpb
and
cvtps2pi
xor
push
mov
into
lods
aaa
aad
or
and
mov
ffree
add
or
sbb
sbb
testl
cmp
repnz
ret
adc
mov
stos
ja
cmp
iret
adc
mov
pop
fwait
pop
outsl
daa
xlat
bswap
pop
movsl
fistl
fisttps
test
xor
int
aam
cmpsb
or
int3
ficoms
push
dec
sbb
mov
hlt
mov
cli
fcmove
mov
jbe
jo
std
in
fdivl
popa
jno
cmp
negb
push
ret
mov
mov
loopne
inc
cmpsb
sub
or
insb
xor
inc
popa
pop
ljmp
scas
push
stos
rcrl
cmp
mov
inc
mov
lods
xor
mov
sub
jae
mov
lea
mov
push
imul
or
test
lcall
add
lret
rolb
add
pop
mov
sub
xor
sahf
sbb
mov
lahf
fimull
dec
xchg
pop
sahf
popa
xchg
xor
mov
out
or
mov
sti
lea
sub
cmp
aaa
subl
or
outsb
add
mov
and
mov
iret
fsubl
inc
not
lds
iret
mov
inc
adc
sbb
cld
mov
sbb
addl
or
push
in
idivl
push
imul
das
xchg
adc
repnz
add
push
dec
dec
jg
test
add
aaa
ret
push
jmp
pusha
pusha
or
aas
mov
xchg
mov
das
push
and
mov
mov
sub
pop
pop
mov
sbb
mov
ret
mov
ljmp
sub
jg
push
pminub
cltd
pusha
hlt
in
mov
pop
pop
cmpsl
push
mov
pop
sbbl
xor
push
sub
sahf
jg
xorl
shlb
sbb
and
icebp
and
not
push
jg
jg
dec
mov
or
push
pop
bound
sub
rclb
push
pop
rcll
test
push
out
xchg
mov
pop
pop
sub
dec
arpl
ja
jb
cmp
dec
jg
dec
xor
js
pushw
sub
push
fldcw
jle
sub
int
stos
xor
cs
inc
push
jmp
lret
into
test
mov
clc
push
pop
jg
sti
push
or
sub
mov
push
adc
and
sub
loopne
xchg
cmp
pop
xor
mov
mov
ror
imul
or
repz
or
pop
jno
nop
ret
fucomp
or
jno
pop
xchg
subl
je
outsl
lret
ss
repz
std
test
xchg
test
push
jg
leave
pop
lcall
mov
jns
cmp
pop
fsubr
or
jp
inc
cmpsb
pushf
xor
enter
mov
pusha
ds
mov
mov
xlat
push
sbb
lahf
sarl
xor
fmul
xor
lret
out
popf
sbb
cltd
cmp
lods
xchg
cwtl
push
xabort
sub
mov
cli
out
xchg
push
adc
mov
icebp
call
mov
dec
fisubrs
mov
and
popl
out
popw
cmp
adc
inc
xor
lea
cmp
or
mov
mov
hlt
sbb
fists
mov
scas
ljmp
jge
lock
inc
xchg
loop
mov
push
push
repz
sub
iret
imul
pminsw
les
mov
jno
cwtl
js
mov
sbb
push
insb
jge
mov
test
xor
xor
pop
dec
cmp
pop
jne
xchg
lods
js
mov
mov
sub
dec
or
popa
dec
adc
push
mov
ja
push
xchg
mov
push
lock
insb
or
aam
dec
bswap
mov
jg
sub
or
fnstsw
mov
sahf
adc
cltd
loop
xchg
jo
xor
add
push
and
int3
or
movsl
inc
movsl
sub
mov
lods
dec
mov
or
jns
call
xchg
lahf
pop
inc
frstor
stos
cld
mov
pop
xor
push
lret
lock
jo
inc
test
push
adc
dec
imul
bound
ficoml
jbe
stos
clc
clc
aaa
push
dec
jb
fcomi
adc
lock
cmp
mov
sub
xor
jge
in
fwait
addr16
xchg
test
lds
pop
and
iret
les
inc
or
mov
xchg
mov
insb
in
pop
sahf
lods
push
add
fwait
pop
mov
test
imul
andl
add
cltd
fs
out
bound
sub
inc
push
jp
push
mov
sub
mov
repnz
dec
ret
ficoms
repnz
dec
mov
sbb
aaa
loop
into
je
jns
fisubrs
lret
add
jecxz
jae
dec
inc
divps
push
mov
mov
enter
cmpsb
mov
dec
adc
dec
lret
es
mov
fisttpll
testb
dec
dec
mov
unpckhps
adc
inc
lock
jp
repnz
lahf
sarl
mov
loope
push
divb
jne
scas
push
push
loopne
dec
sarb
cmc
cmp
inc
loope
mov
pop
in
push
or
xor
jbe
test
cmp
push
cltd
inc
ds
fildl
movsb
cli
hlt
fs
and
inc
imul
lods
std
aam
orb
mov
sahf
out
les
xor
cmp
in
test
ja
scas
daa
sbb
sti
cmc
xchg
and
push
loopne
add
dec
fsubrs
iret
or
outsl
je
sub
xor
insb
pop
pmuludq
sbb
jb
jo
pop
mov
stos
jmp
jbe
cmpsb
daa
push
in
adc
mov
rorl
ds
mulb
into
imul
cwtl
or
iret
pop
mull
outsl
jecxz
adc
dec
xor
sub
jg
mov
push
mov
out
cmp
xor
sub
push
arpl
cmp
fidivrl
mov
xchg
add
push
xchg
xchg
movsb
or
pop
je
fidivrs
sub
add
mov
gs
or
rcrb
jmp
mov
mov
push
imul
jbe
lods
popf
add
call
into
jno
add
mov
mov
fnstenv
sarb
mov
cmpb
mov
lock
xchg
mov
sar
pop
icebp
negb
std
fidivs
pop
inc
ret
stc
mov
jno
cmpb
fstps
and
outsl
add
or
add
les
test
jmp
adc
insb
cmp
cmp
mov
mov
lcall
inc
pop
mov
pop
push
add
mov
sub
repnz
in
shrl
mov
xor
add
ror
fsubs
lods
rolb
adc
lcall
mov
or
leave
pop
mov
dec
inc
ljmp
punpckhdq
aam
nop
sub
and
xchg
or
data16
inc
inc
movsb
popa
jl
loopne
and
xchg
repz
rolb
fwait
loopne
fimuls
pop
int3
add
jle
nop
pop
jle
imul
lret
xor
cmp
fldt
jo
inc
dec
std
fisubl
mov
das
jmp
outsb
rolb
stos
out
loop
adc
or
cmp
mov
xor
sub
pop
push
out
cmp
jne
xchg
and
fstp
ret
lret
out
push
xor
dec
in
popa
sbb
sub
add
inc
fwait
pop
call
xchg
cli
into
xorb
or
mov
jbe
repz
bound
rcrl
jns
mov
inc
ficompl
out
push
pop
cld
sub
rol
dec
test
jp
rclb
mov
jb
cmp
sub
mov
ljmp
lcall
je
icebp
lcall
jno
dec
andl
ret
xor
cld
outsb
push
enter
adc
adc
push
inc
fistl
mov
fbstp
call
cld
mov
sbb
xor
fiadds
jge
out
xchg
insb
subb
mov
call
jle
jae
cld
lcall
cli
fimull
cmp
xchg
inc
int3
sub
dec
jno
pop
lea
xchg
jmp
sub
notb
push
cmpsl
mov
xchg
pop
push
push
std
jne
pop
mov
cmp
adc
loopne
dec
outsl
pop
push
lahf
mull
test
shlb
pop
rcll
and
pusha
int
pop
dec
add
fstl
rcrl
or
xchg
sbb
dec
cmpsb
sub
pusha
popf
add
xor
pop
jle
sysenter
aam
inc
mov
and
jbe
xor
inc
dec
aam
sub
aas
repnz
popf
repnz
adc
bound
pusha
push
push
imul
pop
fucomi
pop
out
loop
lret
push
les
jnp
mov
xchg
sti
sbb
xor
repz
out
insl
jbe
lret
aaa
js
pushf
ficompl
sbb
sbb
pop
xchg
jecxz
sbb
test
scas
sarl
loop
inc
pop
fcompl
xchg
lock
test
push
dec
cld
inc
stc
inc
inc
push
lock
cld
out
adc
jo
cmp
mov
push
mov
int3
ret
jne
push
inc
nop
ljmp
lods
arpl
into
and
inc
scas
aam
push
jb
dec
daa
das
sbb
adc
mov
jb,pt
addb
inc
test
add
push
inc
das
in
pop
ret
repz
xchg
push
fisttpl
cmp
sbb
in
int3
rolb
adc
std
fbstp
fmuls
add
pop
repnz
ret
cs
into
movsl
push
and
push
cs
mov
pusha
push
flds
es
pop
mov
xor
push
daa
add
in
and
js
mov
fidivrl
sub
lods
outsb
adc
je
call
fsubrs
mov
movsb
ss
incl
jp
cltd
iret
ret
loope
iret
pop
push
shll
xchg
dec
xchg
mov
push
jp
pop
test
pop
mov
rolb
mov
in
or
jmp
popf
jmp
mov
stos
add
fstpl
pushf
or
les
cs
aaa
add
mov
stc
test
or
xor
push
hlt
mov
add
cmp
loopne
out
insl
bound
jne
pop
adc
mov
pushf
or
xchg
movsb
cmp
call
dec
sbb
xchg
divb
mov
pop
loop
add
ljmp
cmp
aam
loopne
sbb
cwtl
out
fiadds
icebp
fistpll
or
pop
cld
cmpsl
jmp
out
inc
cmpsb
dec
jl
push
cmp
push
out
bound
cmpsl
call
dec
call
mov
mov
mov
outsb
cmpl
push
data16
or
mov
cli
adc
xor
mov
mov
xchg
add
sbb
add
inc
sbb
xchg
ljmp
cmp
jecxz
lods
push
jl
repnz
add
cmp
in
rolb
jne
push
mov
cmpsb
pop
leave
fists
icebp
addl
adc
xchg
add
add
mov
mov
arpl
je
int3
cmp
or
cmc
pop
test
mov
pop
rolb
adc
cmp
loopne
pop
dec
sbb
insl
mov
mov
pop
mov
inc
pop
mov
push
dec
mov
outsl
xchg
popw
fs
ljmp
cld
shrl
lret
stos
xor
jnp
loope
jl
arpl
daa
mov
mov
roll
out
mov
lahf
std
ja
fdivs
scas
test
daa
dec
push
gs
ljmp
aam
out
lea
aad
mov
sahf
add
adc
dec
pop
mov
xor
mov
stos
mov
xchg
add
add
loopne
ret
lcall
push
pop
repnz
add
mov
jns
push
mov
jmp
cmp
aad
xchg
push
in
adc
jmp
inc
sbb
ret
aad
push
loope
cmp
shrl
cvtpi2ps
scas
sbb
jg
pop
and
jno
js
sbbb
dec
out
pop
push
pushf
sbb
cmp
dec
hlt
jge
out
hlt
les
xor
xchg
mov
pop
adc
pop
rcll
add
icebp
test
cmp
repz
ja
lods
and
pop
dec
das
aaa
imul
std
outsb
cmp
lahf
scas
mov
jge
sub
imul
sahf
loopne
hlt
lods
or
cmp
test
adc
call
cmp
push
les
out
inc
dec
test
fxch
fdivrs
push
mov
xchg
mov
insb
add
loop
outsl
jg
test
inc
loope
xchg
cs
scas
adc
adc
dec
mov
adc
loope
dec
adc
cwtl
es
outsl
jecxz
cmpb
push
add
loope
sahf
xchg
int
mov
xchg
sub
pop
cmpsl
sarb
jmp
dec
test
mov
dec
pop
stos
gs
adc
sbb
inc
popa
jl
popa
mov
rcl
inc
in
jne
jbe
sti
push
leave
mov
xchg
jnp
sub
jns
dec
in
cld
sbb
daa
adc
push
sarb
inc
xorb
push
sbb
mov
and
daa
das
jle
cld
xchg
adc
fimuls
fcoms
shr
or
push
or
lock
mov
imul
xchg
in
movsl
dec
ffreep
int
dec
mov
mov
mov
mov
push
test
inc
and
dec
push
aaa
mov
jne
sub
out
add
cltd
imul
dec
dec
adc
out
movsl
pop
aam
cmpsb
pushf
sbb
roll
les
je
adc
jns
popf
jmp
inc
sbb
push
fxch
cmp
xlat
xchg
jns
mov
and
xlat
nop
jmp
add
and
out
js,pt
mov
jnp
mov
fiadds
andb
roll
call
sbb
jp
fs
scas
cmp
xchg
and
sub
xchg
adc
push
and
mov
insl
push
mov
imul
fnstsw
mov
lock
mov
ja
outsb
mov
testb
jno
out
les
outsl
push
mov
std
dec
push
push
or
mov
mov
daa
std
jmp
popf
test
out
mov
imul
cmp
and
pop
xor
loop
pop
pop
pop
test
ficomps
jp
jge
push
lea
add
jb
or
cli
mov
lret
mov
repz
popa
rclb
mov
pop
cmp
out
add
push
js
and
jo
jp
adc
and
xor
stos
notb
xor
into
mov
mov
dec
incl
push
sub
lcall
test
dec
xchg
cmp
xchg
or
mov
loop
inc
mov
sub
adcb
adc
jbe
sub
or
sbb
ja
es
jb
and
xor
jp
fxch
push
pusha
mov
out
mov
insl
les
mov
mov
push
sbb
and
mov
cld
fmuls
mov
jle
mov
mov
dec
aaa
out
or
and
jbe
imul
jnp
out
cmp
push
mov
inc
mov
iret
dec
scas
shll
push
xor
lods
pop
insb
inc
out
and
arpl
fnstsw
xchg
jno
xchg
xchg
fidivrs
popf
pop
inc
repz
popa
cli
aaa
adc
inc
inc
subb
js
or
fldl
imul
or
call
and
hlt
sbb
mov
lcall
inc
subb
push
outsb
mov
adc
mov
push
pop
cmpsl
scas
mov
jmp
loopne
lods
or
loope
call
pusha
call
testb
icebp
filds
xchg
testb
sbb
repnz
xchg
notl
jns
dec
xchg
sub
psubd
jp
pop
push
mov
dec
pop
addr16
sub
sbb
mov
jb
push
dec
scas
addb
cli
dec
lret
imul
pushf
fldl
pop
jge
jmp
dec
addl
jg
sbb
xor
cmp
lea
adc
hlt
das
xchg
iret
xor
iret
sub
repnz
inc
jle
jnp
cmpsb
dec
lock
push
pop
jp
cwtl
insb
dec
add
push
push
mov
adc
xor
sti
push
call
jecxz
scas
jnp
imul
jbe
or
pusha
flds
mov
mov
setle
sub
cltd
sbbl
xor
jno
imul
ret
adc
cmp
adc
imul
and
sbb
stos
sbb
out
push
pushf
jo
loopne
jae
add
jl
cltd
dec
sub
jecxz
jae
push
pop
lret
pop
in
sbb
cli
scas
loopne
sahf
and
hlt
add
fimuls
fstp
lock
icebp
or
mov
jns
rcll
cli
sbb
daa
rep
mov
push
mov
gs
pop
adc
int
gs
xor
add
add
push
mov
ret
and
xchg
imul
stc
cmp
dec
nop
cmp
popa
stos
and
adc
insl
xor
xacquire
sbb
jbe
sub
pop
jns
hlt
add
pop
jns
add
mov
jmp
xchg
mov
push
mov
cmpsl
push
add
adc
xor
jno
sbb
push
xor
sub
fsubrs
sbb
shrb
or
das
and
pushf
pop
and
aas
fdivs
push
jp
xor
jo
nop
fists
adc
xchg
ljmp
arpl
dec
ljmp
rorl
ds
cmp
sub
dec
cmp
cwtl
popl
inc
lods
aad
jg
ss
jae
push
jbe
xchg
xor
dec
sar
outsl
mov
jbe
and
or
lret
pop
xchg
jecxz
shl
mull
stc
les
xchg
ret
pusha
mov
mov
enter
data16
xchg
jne
sbb
xor
pop
add
mov
ds
test
clc
pop
mov
stos
ds
inc
xor
int
sub
jo
int
pop
ret
mov
pop
ja
fsts
jle
cmp
adc
xor
xor
push
xor
mov
mov
xor
rcl
mov
sahf
sbb
shrb
push
and
jp
mov
mov
sbb
aas
mov
xor
dec
insl
cmpsb
lea
mov
sub
ret
jo
push
cs
sub
pop
dec
sub
addr16
dec
xchg
push
lret
pusha
xchg
adc
outsb
inc
js
push
jmp
ds
es
and
add
in
and
and
jg
mov
xchg
mov
and
or
pop
or
or
cli
movsb
or
lahf
xchg
mov
xchg
lea
and
cmp
sbb
andb
test
cmp
lods
movsl
icebp
mov
or
pop
out
inc
fisubl
into
xchg
xlat
test
ljmp
dec
rorl
je
dec
cmp
popf
sub
incb
dec
mov
sub
loopne
cmp
pushw
or
insl
cld
outsb
mov
notl
pop
dec
aad
fildl
mov
repnz
push
xchg
pop
xchg
dec
jno
add
fcmovb
sub
cs
xor
pop
mov
push
aaa
and
jp
pop
addr16
fidivrl
xchg
ja
jne
fnsave
negl
cmp
xor
sbb
xlat
insb
shrb
adc
xchg
dec
pop
or
pop
adc
and
jg
xchg
stos
mov
ds
and
push
mov
data16
into
adc
lds
mov
rep
hlt
adc
or
cmp
js
dec
and
push
loope
xchg
push
dec
in
jno
rcrl
call
lock
sahf
js
hlt
leave
inc
ret
xchg
movsb
lds
sti
clc
mov
sub
test
ljmp
and
push
shr
xor
mov
dec
addb
adc
popa
inc
test
fldt
ja
lret
cmpl
int3
outsb
testb
xchg
popa
test
fcomp
loop
pop
xchg
jnp
mov
dec
scas
bound
pop
add
or
mov
sub
jo
cmc
popf
sub
stos
dec
insl
scas
shlb
daa
or
test
add
testb
stc
stos
pop
iret
hlt
pusha
repz
adc
rcrb
inc
dec
inc
lea
jnp
push
in
mov
int
xor
out
ffree
mov
jns
xchg
sahf
aad
xchg
mov
test
mov
jno
xor
or
sbb
add
inc
lock
mov
test
lds
out
sub
sub
lcall
inc
or
cwtl
sub
adc
arpl
outsb
xchg
sub
mov
setb
xchg
das
or
inc
dec
push
inc
add
sbb
sbb
cmp
cmpb
push
ret
or
sbb
lods
lahf
lds
or
clc
cmp
add
das
push
nop
out
xchg
out
ds
inc
sbb
popa
xchg
mov
fs
pop
pslld
testb
aad
ret
imul
pusha
adc
inc
inc
sbb
mov
lahf
dec
mov
fstpl
xchg
lcall
push
push
xor
push
jo
mov
jbe
mov
add
decb
and
sbb
or
push
mov
int3
xorw
sub
jnp
xchg
out
xor
into
jmp
test
add
jo
sbb
and
cmp
out
ret
pop
pop
movsl
arpl
in
call
outsl
adc
lods
cmp
add
mov
popf
fwait
rcrl
jbe
imul
cltd
inc
fistl
and
mov
pop
push
imul
and
sub
stc
push
out
imul
in
xchg
lods
jae
push
push
or
mov
push
dec
and
mov
cwtl
pop
add
mov
test
sub
dec
popa
dec
sbb
xor
lret
xor
mov
mov
sahf
out
out
or
add
xchg
push
shlb
pop
fimull
cmp
and
jnp
pop
and
sub
test
xor
insl
test
cmp
out
int3
push
adc
adc
adc
inc
mov
pop
mov
stos
xchg
jbe
into
cmp
and
sub
aaa
inc
mov
pop
jmp
jo
adc
aaa
xchg
add
cmpsl
sub
rcrl
lahf
andb
pop
pusha
cmp
out
adcl
stos
into
inc
scas
out
push
out
addr16
push
jle
fstpl
inc
pushf
mov
push
jae
out
cmp
sub
xor
cli
mov
arpl
int
pop
cmp
or
mov
mov
popw
mov
add
add
aam
adc
or
cmpsl
or
add
andl
jle
aas
in
jbe
dec
inc
fnstcw
xchg
ja
and
pop
pop
pop
faddl
and
jo
es
lock
lock
adc
paddq
pop
jbe
sbb
fnstcw
stos
in
jp
adc
mov
testb
xor
mov
inc
cltd
sbb
mov
out
cmp
mov
cmp
dec
mov
dec
clc
push
pop
mov
mov
push
stos
cmp
sbb
sbb
dec
push
inc
arpl
adc
mov
sub
jg
cmp
push
xchg
stc
loop,pn
xor
dec
mov
mov
pop
jge
xchg
lock
jne
enter
dec
loope
cmp
jmp
jbe
xchg
aad
jmp
mov
aam
mov
mov
ficompl
pop
mov
in
jp
pop
paddd
mov
pop
lock
cmp
inc
jns
jnp
sbb
jp
aad
fldlg2
fbstp
out
or
cmpl
mov
cwtl
add
test
push
loopne
jno
mov
repz
icebp
call
ret
cwtl
ljmp
push
jo
enter
cmp
add
mov
push
mov
test
fdivr
xchg
cs
ja
enter
fidivrl
and
push
or
xor
cmp
scas
fdivr
push
dec
cmp
mov
data16
cli
xchg
inc
lahf
and
mov
mov
dec
movsl
push
xchg
and
adc
ror
add
mov
shl
lcall
pop
cmpb
pop
dec
test
negl
or
cmp
push
pop
lahf
mov
daa
pop
and
out
rcll
mov
adc
addr16
scas
lret
test
add
push
inc
xor
jmp
adc
push
clc
roll
lock
in
inc
fldenv
inc
dec
stos
rcll
lods
jge
sahf
iret
imul
rolb
inc
mov
mov
sub
mov
and
dec
add
mov
mov
mov
push
adc
xor
mov
jg
clc
sbb
test
sub
repz
adc
mov
es
push
dec
push
pop
bound
push
call
pop
mov
inc
test
rcrl
imulb
test
clc
inc
mov
xchg
lret
out
inc
dec
dec
jne
incl
ret
lea
jp
in
hlt
xor
repz
xor
cwtl
mov
sbb
out
movsb
mov
mov
xchg
sub
push
xchg
sub
xchg
movsb
iret
xorl
and
push
jp
test
push
sub
jge
pop
stos
mov
repnz
aas
jmp
pop
mov
loopne
and
sbb
pop
fsin
lcall
std
dec
push
mov
sub
lock
jne
mov
enter
xor
inc
mov
scas
dec
ja
out
mov
mov
jle
jns
sub
push
dec
mov
xchg
dec
cmp
fsts
mov
sub
xchg
or
push
lds
pop
lahf
jp
mov
das
xchg
push
inc
and
pusha
popf
pusha
imul
int
fdivrs
aad
shll
in
dec
add
pop
hlt
xlat
xlat
repz
cmc
gs
jo
adc
imul
cmp
ret
aad
outsl
mov
xchg
jo
xor
jb
cwtl
adc
fdivl
jb
push
jp
std
mov
push
sti
or
push
mov
stos
mov
int3
leave
fisubl
lock
mov
mov
mov
not
cltd
mov
or
add
nop
imulb
or
mov
jge
xor
add
pop
pop
iret
inc
and
in
arpl
dec
popf
cmc
fmuls
shrl
stc
das
push
mov
outsl
rcr
jbe
and
pushf
pop
ds
imul
jmp
cwtl
lods
loope
ret
and
fcmovbe
enter
mull
test
and
movsl
testb
mov
add
xlat
pop
sbb
int3
outsb
inc
inc
cmp
out
adc
and
bound
jmp
jl
int3
sti
rcr
insb
rorl
andl
mov
or
inc
push
xchg
movsb
shlb
or
jge
popa
bound
xchg
aas
je
xchg
sti
and
mov
jo
mov
cltd
push
mov
jp
cmpsb
cld
fstpl
jbe
cld
insl
xlat
sahf
cmp
mov
xor
dec
push
sti
adc
inc
loope
call
pop
popa
fcompl
in
mov
imul
pop
lahf
push
dec
and
sahf
fcompl
js
int
sub
lea
mov
mov
jecxz
mov
adc
aam
dec
dec
mov
push
dec
scas
xchg
xor
fnsave
in
pop
orl
jle
xchg
mov
testb
in
fisubs
xor
sbb
decl
iret
mov
push
jnp
sbb
fisttps
std
pop
lahf
pop
insb
pop
adc
sbb
sti
inc
or
ljmp
sub
loop
cli
test
lods
insl
in
sbb
gs
dec
hlt
rcrb
cli
mov
push
inc
lcall
cmp
addb
test
iret
popf
fs
aad
sahf
cmc
mov
add
rolb
aad
data16
sbb
mov
lcall
outsb
dec
cmp
jl
xlat
lahf
pop
or
cltd
adc
push
enter
push
cs
pop
mov
push
ds
les
mov
lea
int
cwtl
popf
int
push
into
testb
cmpsb
in
pop
es
cwtl
dec
or
pop
mov
aaa
call
icebp
in
push
cmp
adc
mov
sub
sbbl
popf
imul
lret
daa
jae
mov
xchg
scas
sarb
inc
mov
and
cmp
aaa
jo
mov
cmp
clc
push
adc
jo
push
push
add
lea
iret
loopne
or
popf
pusha
leave
jmpw
sub
inc
out
adc
lds
pop
dec
movb
and
popf
add
jns
jbe
xor
mov
dec
cmp
jge
mov
inc
mov
iret
out
mov
stc
mov
or
ret
xchg
iret
std
xchg
cltd
xor
jge
aaa
jns
scas
fdivs
jecxz
pushf
push
fs
jge
sbb
sti
cld
scas
pop
add
iret
es
fidivrl
fcom
mov
scas
sbbb
lea
mov
adc
shl
jae
adc
lea
inc
xor
jne
in
inc
and
sarb
mov
jbe
cltd
rorl
popf
ret
pop
push
xchg
cwtl
pop
mov
nop
push
in
or
divb
xchg
lahf
mov
mov
outsl
inc
filds
jecxz
mov
lcall
std
mov
mov
or
enter
push
jle
mov
xorb
jo
mov
sub
adc
testl
adc
iret
xchg
adc
call
leave
jle
pop
sbb
jbe
dec
add
mov
dec
and
add
pusha
inc
sbb
adc
add
jmp
dec
imul
push
cmp
fdivrl
in
clc
push
dec
inc
mov
xchg
testb
cltd
add
sub
sub
fisttps
pop
mov
test
mov
outsb
push
push
data16
aaa
shrb
repnz
mov
lods
and
inc
daa
jbe
or
pushw
stc
mov
in
or
xor
scas
pop
inc
inc
push
and
ficoml
mov
jns
test
pop
and
outsb
sarb
dec
mov
aaa
out
dec
lret
pop
les
dec
das
dec
aaa
aas
shlb
imul
jne
xor
pusha
pop
cs
lods
jmp
lea
pop
xchg
inc
jecxz
fdivrl
cld
cltd
mov
pop
lahf
mov
sub
in
movsl
sti
clc
flds
jo
xchg
les
sub
sub
adc
pop
sub
cwtl
dec
fisubs
data16
pop
mov
push
xchg
aad
pop
jae
cli
mov
mov
or
sti
repz
pusha
pop
inc
jg
jp
dec
dec
jmp
dec
mov
lods
fldenv
mov
mov
mov
stos
mov
ficoms
pop
mov
sbb
lret
mov
sub
push
jg
mov
scas
out
cmc
xchg
jmp
in
std
inc
pop
dec
xor
cmpsb
and
pop
push
mov
xor
adc
add
aas
mov
inc
addr16
mov
fisttpl
int3
movsl
mov
jp
sbb
js
sbb
dec
subl
jb
inc
inc
aad
cmp
xchg
xchg
movsl
mov
xor
aaa
lods
jno
jae
repz
mov
or
cmp
bound
mov
and
jno
insb
or
insl
lods
out
aad
sub
repz
mov
adc
cltd
pushf
mov
lods
fldenv
test
mov
jmp
lods
int3
in
fsubrl
mov
stc
jne
adc
mov
dec
mov
mov
arpl
dec
mov
rorb
push
out
hlt
scas
insl
pop
sub
add
jg
cld
repnz
jbe
push
fsubl
pop
mov
inc
sub
lret
sbb
lahf
incl
iret
adc
push
cwtl
sti
xchg
std
pop
xchg
xchg
scas
cli
rorl
imul
fbld
icebp
ljmp
in
lret
test
cmp
dec
sbb
into
rorb
push
ja
pop
cltd
aam
jnp
pop
lret
inc
scas
fldl
jge
adc
outsl
out
jp
sbb
mov
pop
pop
dec
mov
mov
es
mov
pop
add
scas
insl
movsb
xchg
push
or
or
and
push
ds
sbb
insb
or
addr16
mov
mov
pop
cmpsb
sti
je
jnp
xchg
mov
loop
or
adcl
in
sub
cs
jnp
incl
xor
dec
xchg
popf
ret
dec
xlat
jno
and
pop
mov
pop
push
mov
xor
jmp
mov
jmp
adc
std
fcmovu
mov
pop
and
test
insl
push
or
inc
cli
aaa
mov
push
icebp
mov
repnz
mov
sub
orl
mov
into
movb
pop
andl
fwait
out
jbe
out
aas
in
fnstcw
mov
mov
mov
inc
sbb
lea
and
js
mov
lcall
std
dec
cmpb
test
jne
jmp
out
js
insl
push
mov
xlat
repnz
xlat
pop
hlt
inc
dec
ret
fwait
jmp
popf
nop
cmp
loopne
out
outsb
cld
andb
mov
push
xor
test
mull
xor
jo
jmp
shl
xchg
mov
or
xor
push
add
stos
xor
scas
push
cmc
xorl
daa
lds
pop
push
mov
adc
or
mov
ss
pop
jae
imul
or
cmp
fdivp
gs
imul
add
and
xor
daa
push
xchg
add
icebp
popa
movsb
xor
lea
aaa
or
xchg
jno
fadds
cmp
pop
mov
mov
xor
mull
or
cmp
xchg
pop
push
andl
add
push
sbb
addb
inc
adc
or
sarb
push
sub
jnp
stos
andl
in
adcl
xchg
mov
test
out
mov
mov
xchg
cmpsl
sbb
sbb
push
out
push
shll
lcall
jae
pop
sub
mov
fisttpll
or
imul
jle
nop
jo
dec
cmpsl
mov
mov
xor
pop
cmc
lea
and
aam
leave
loope
jl
push
jmp
pusha
imull
jbe
pop
enter
stc
inc
cmc
shl
jle
xchg
push
mov
shl
nop
jecxz
jge
push
cli
test
inc
inc
push
push
sbb
jne
sub
inc
and
aad
cld
pushf
mov
rcrl
insl
lods
fsubrp
aas
imul
loop
ja
andl
aaa
xchg
xlat
mov
sub
jecxz
aad
xor
ret
push
mov
pop
sti
add
adc
xchg
push
mov
shrl
xchg
rcrb
out
push
pop
mov
mov
pop
aaa
mov
out
adc
dec
fwait
out
adc
insb
stc
mov
addr16
aad
imul
dec
icebp
in
scas
and
or
scas
push
jne
sbb
es
pusha
dec
and
enter
push
mov
fidivs
dec
xor
scas
mov
dec
icebp
jl
sahf
xchg
mov
jno
jb
imul
popa
adc
scas
jae
jb
outsb
pop
test
dec
cli
sub
jp
cwtl
pop
cld
lods
fwait
dec
es
cmp
pop
test
inc
sub
adc
outsb
add
int3
lahf
sub
je
aas
ja
mov
add
insl
and
andb
sbb
cmp
mov
pop
push
ljmp
in
data16
mov
mov
repz
mov
push
xor
jns
popf
sbb
aad
xchg
adc
es
lock
jo
popa
cmovns
cmp
fcmovne
aam
lds
shll
and
push
push
scas
mov
xor
aam
push
mov
stc
dec
and
sub
push
subb
pop
cmp
pop
imul
xchg
test
add
adc
dec
mov
dec
int
ret
leave
decl
push
mov
fdivrs
jmp
xchg
mov
test
lods
sahf
jne
mov
sub
les
mov
dec
loope
add
lret
mov
testl
dec
shrb
inc
mov
pop
dec
mov
loope
mov
pop
pusha
jne
out
pop
stc
cltd
cmp
fwait
xorb
mov
xchg
fists
xlat
loope
xor
leave
loopne
hlt
lds
ret
mov
sahf
push
in
sbb
adc
pushf
sbb
push
nop
fs
jne
or
out
sbb
iret
fldcw
int
mov
mov
sub
roll
cld
movsl
or
add
inc
lock
shrl
mov
into
fdivrl
test
bound
dec
decl
push
orb
cwtl
and
fsubr
mov
mov
sbb
sbb
les
dec
push
inc
dec
shrb
movsb
int
add
cmp
cmp
push
ja
popw
xchg
or
mov
in
cmp
sub
fnstenvs
outsl
mov
test
int
test
arpl
adcb
int
cmpl
pop
dec
int3
movsb
pushf
ja
imul
sub
push
in
fs
and
in
out
mov
cmp
add
packsswb
xchg
hlt
sub
xchg
adc
or
push
xchg
jo
in
push
insb
cld
mov
test
pusha
adc
jmp
arpl
bnd
mov
xor
aad
insl
xor
jl
or
jb
jp
push
and
hlt
push
aas
push
fcompl
pop
cmpl
cld
adc
nop
movsl
xchg
lahf
mov
dec
stos
push
mov
pop
xor
in
outsb
imul
pop
add
sbb
inc
mov
cmpsl
add
mov
jmp
inc
es
inc
pop
push
aaa
sub
dec
mov
ds
pop
aam
dec
dec
cmp
add
jle
jp
cmp
pop
sub
xor
int
mov
sub
addr16
mov
arpl
sub
pop
ja
xchg
fsub
mov
or
xor
or
fstps
push
xchg
shlb
sti
pop
repz
les
fucomi
rcrl
in
movsl
scas
adc
loopne
shlb
sub
add
mov
push
and
shl
mov
insl
mov
push
push
dec
test
out
iret
xchg
int3
sahf
dec
cmp
cld
into
dec
add
shr
pop
add
imul
int3
fs
imul
leave
mov
sbb
inc
lahf
inc
aad
mov
cmp
jle
jo
jg
lods
movsb
push
and
rcll
xchg
icebp
dec
subl
jbe
jge
lods
xchg
ljmp
add
inc
dec
pop
mov
cmp
lea
jle
push
js
jecxz
insb
out
jg
mov
lcall
bound
insb
pop
outsb
repnz
inc
mov
push
xchg
sbb
push
aas
and
adc
jg
mov
add
je
scas
daa
fsubrl
lcall
mov
cli
mov
cltd
dec
jmp
out
aam
dec
fcoms
pop
inc
out
add
into
sbb
mov
cmp
dec
sbb
dec
in
mov
cmp
inc
add
mov
add
pop
adc
clc
sbb
cmc
out
mov
fmuls
xor
ret
lods
movsl
js
pop
nop
ficoml
and
push
cmp
xchg
cmpsl
push
mov
lods
ss
pop
add
push
and
jns
andl
out
jo
sbbb
lock
mov
inc
cmp
out
jno
and
fisubrs
mov
dec
mov
addl
out
aam
mov
jbe
fmuls
js
dec
cmp
sub
dec
and
in
xor
jno
sub
pop
lods
sbb
shl
out
adc
push
test
jb
mov
xor
ja
or
or
xchg
cmpsl
shrb
dec
push
push
mov
jmp
in
adc
or
sbb
or
sti
pop
sbb
dec
cmp
repz
add
popf
arpl
lahf
scas
mov
js
xor
std
lds
imul
mov
sbb
fisubl
outsl
or
fisubrs
das
bound
cli
in
repnz
jns
test
sub
lret
inc
jmp
sub
sub
popa
cmp
jmp
jmp
imulb
xchg
cld
out
cmp
push
leave
xorl
xchg
cmp
and
lret
jns
aas
adc
and
in
fidivrs
push
add
mov
es
fst
sarb
mov
pushf
inc
outsl
pushf
xchg
sbb
push
rcrl
cld
in
mov
dec
mov
arpl
idivb
ja
int
mov
lds
pop
imul
imul
not
pop
xchg
mov
xor
pop
fcompl
rcll
in
inc
adc
rolb
add
cli
cli
add
mov
cwtl
push
mov
outsb
dec
les
stos
sub
lock
sti
push
hlt
lds
push
sbb
das
mov
pop
popf
mov
sub
mov
adc
cmp
add
fidivl
andb
mov
sub
xor
outsb
xor
stos
mov
add
dec
adc
xchg
pop
xor
lods
movsl
dec
rolb
rcrl
jecxz
cs
inc
into
mov
out
sbb
cmp
add
sbb
xchg
outsl
jns
imul
pop
mov
jns
add
jmp
and
decl
xlat
push
cmp
adc
fnop
mov
lods
mov
pusha
nop
cmp
sahf
test
scas
cwtl
push
out
add
insl
or
jno
xchg
mov
stc
pop
insl
les
inc
mov
mov
inc
xchg
test
stos
fldcw
movsl
subl
jg
arpl
and
jle
adc
push
pop
inc
mov
push
adc
jge
mov
mov
sub
rcll
jmp
das
xchg
mov
aas
hlt
lods
adc
cmc
mov
popa
aaa
jge
scas
dec
inc
adc
or
inc
lods
push
repz
mov
je
lret
lods
add
sahf
imul
xor
mov
fcomip
in
aam
shrb
mov
fimuls
push
and
adcb
pop
std
hlt
lods
ffree
inc
dec
jne
lods
cmp
mov
ds
scas
mov
mov
sbbl
sub
cwtl
cmc
jo
and
xor
dec
repz
cltd
jne
mov
cmp
hlt
xchg
subb
aas
pop
fidivs
jnp
sub
mov
test
mov
pop
loope
jno
dec
iret
cmc
xchg
push
ja
jecxz
clc
cmp
add
sti
mov
mov
jb
add
push
popa
repz
mov
dec
daa
sub
clc
push
adc
mov
push
mov
lods
scas
mov
ficoml
mov
cs
inc
mov
or
cmc
leave
adc
mov
fists
sub
cmp
inc
in
push
fbstp
add
add
stos
shrb
jo
mov
and
enter
repnz
add
scas
insl
inc
scas
outsl
or
les
sub
clc
popf
jbe
sbb
das
inc
lods
enter
and
outsl
jae
dec
adc
mov
pop
pop
lcall
cmp
out
mov
pop
sub
push
test
mov
and
jns
cmpsb
mov
stos
or
lret
in
pop
addr16
outsb
les
sub
dec
lahf
mov
adc
or
mov
mov
or
cmpsl
mov
jge
mov
dec
mov
mov
and
std
fdivr
sub
insl
and
test
push
lret
pop
loope
mov
push
mov
repz
out
imul
inc
negl
cli
fcmovnb
mov
xor
mov
mov
cld
mov
lods
cmp
in
sbb
std
dec
imul
add
push
cmc
mov
push
sbb
jno
sbb
cmpsl
cmpsb
xchg
les
xchg
mov
dec
sahf
dec
insb
fldl
push
fcmovnb
out
add
loope
test
inc
dec
xchg
idivb
cmp
and
xchg
inc
mov
pusha
inc
sbb
and
xchg
sbb
mov
sbb
addr16
leave
mov
pop
rcrb
xlat
stos
xchg
push
lods
les
cmp
push
popa
test
push
mov
mov
adc
jbe
and
xchg
test
jl
xor
lock
idivl
jns
out
pop
lock
loope
out
mov
sub
mov
mov
adc
loop
jne
fiadds
out
mov
mov
xchg
xchg
hlt
cmpsl
pop
sbb
push
cmpsl
test
cmp
stos
out
std
movsb
aas
ds
pop
add
push
dec
call
mull
imul
push
repnz
pop
jne
inc
or
and
jns
popa
push
inc
enter
pop
dec
cmp
stos
test
sbb
and
inc
mov
add
inc
enter
and
loope
and
fisubrl
push
mov
subl
pop
fidivs
jge
cmp
into
push
mov
repz
jae
push
lea
fcmovbe
out
and
out
mov
jle
rorb
cwtl
or
lock
clc
or
push
in
sar
pop
and
adc
pushl
lods
mov
lods
xor
mov
mov
pop
dec
jnp
loopne
movsl
stos
jno
lea
jecxz
cmovle
cld
ficompl
dec
inc
add
or
sub
clc
add
push
fcmovne
push
imul
inc
xlat
mov
xchg
cmc
jg
fs
sub
jle
test
test
notl
mov
lea
daa
inc
shr
dec
xchg
mov
mov
jecxz
mov
push
push
xchg
dec
out
xor
xor
les
add
movups
ljmp
mov
popf
ds
dec
fnsave
iret
mov
push
or
xor
fiaddl
std
lret
loope
pop
cltd
push
mov
lea
cmpsb
inc
xor
cmp
xchg
push
add
shl
xor
insl
dec
and
push
xchg
incl
int3
mov
pop
dec
das
pop
jmp
jecxz
jno
int
mov
mov
in
add
push
xchg
pushf
pop
loopne
sub
out
std
cmp
lods
movsb
or
mov
fstpt
and
sbb
cmp
stc
popf
or
mov
fstpl
inc
jl
in
lret
cmp
clc
lret
dec
mov
icebp
xor
xor
add
adcl
and
xlat
aam
pushf
icebp
sbb
andb
mov
sub
lcall
mov
mov
xor
pop
jno
subb
aad
cmp
adc
daa
mov
mov
push
daa
andl
push
es
dec
aam
or
lods
mov
popa
pushf
popa
and
add
ret
sbb
dec
movsl
lods
outsb
insl
scas
push
mov
mov
and
loope
icebp
repnz
jg
mov
fisubrs
xchg
insl
mov
jnp
fisubrl
inc
test
imul
es
inc
xchg
jg
jecxz
rcrl
and
inc
dec
daa
jge
mull
jg
mov
dec
outsl
stc
sub
fxch
ror
xchg
int3
dec
in
cld
adc
jns
sub
mov
dec
xor
add
mov
aas
mov
insb
add
inc
roll
cs
mov
rcrl
xorb
in
pop
adc
mov
in
mov
into
out
xor
test
ljmp
push
aas
inc
mov
imul
jmp
inc
adc
aaa
adc
and
pop
shll
out
mov
cmp
imul
push
cli
mov
and
pop
xchg
push
adc
dec
xor
cmc
int
sahf
or
adc
loopne
ja
mov
push
stos
sub
dec
jecxz
leave
xchg
push
mov
jb
loop
pop
mov
adc
dec
popf
notl
insb
lds
int
in
fnstcw
adc
mov
mov
jg
stc
mov
push
clc
loop
lcall
call
push
cs
dec
jg
icebp
fprem1
and
add
in
inc
sub
call
or
loopne
ljmp
or
fdivp
dec
mov
iret
imulb
mov
sbb
test
out
cli
repnz
insl
ss
rcrl
jae
jns
pop
jmp
jns
and
mov
je
cltd
inc
push
sub
fs
inc
jne
jecxz
inc
sbb
sbb
lret
fdiv
mov
cmpsl
or
mov
insb
add
imul
xlat
outsb
repz
jge
ror
mov
imul
mov
mov
jp
jns
je
sbb
repz
cmpsb
scas
xlat
jbe
pop
pop
outsl
data16
xor
nop
xchg
int
jne
aaa
movb
cmpsb
adc
mov
stos
nop
rcrb
fcom
xor
dec
fs
xchg
xlat
push
mov
inc
add
xchg
call
inc
movsb
inc
and
inc
adc
sbb
fwait
and
rolb
mov
mov
test
push
fidivl
jg
out
or
add
pop
xchg
sub
das
and
leave
xor
addr16
mov
mov
xchg
jbe
sbb
adc
outsl
cltd
and
sbb
mov
and
add
ljmp
stc
test
mov
test
mov
popa
lods
fwait
jnp
orb
sbb
mov
aas
loopne
clc
jne
les
aad
jp
push
xchg
out
fdivs
or
js
mov
cmp
dec
jp
das
shl
xor
xor
cmp
or
push
xor
jp
adc
outsb
mov
mov
xlat
int
xchg
stos
push
mov
ds
and
out
mov
popa
push
jo
and
mov
inc
fwait
lds
sub
push
jmp
fimuls
pop
cltd
sub
sub
cld
fnsave
mov
adc
mov
mov
data16
xchg
test
add
mov
adc
jecxz
ret
outsb
fstpt
or
int3
pop
cmp
push
and
jg
xchg
mov
int
sub
cli
jne
mov
into
imul
in
orb
mov
insb
xor
inc
and
daa
ret
movsb
dec
pop
cmp
jno
push
lock
dec
sbb
adc
mov
out
push
out
sahf
in
cli
inc
fistl
ret
aam
lret
inc
sbb
test
or
gs
std
mov
aam
add
cltd
inc
mov
mov
test
add
xor
lods
or
sbb
mov
icebp
mov
lahf
in
mov
push
adc
xchg
ret
mov
lahf
adc
jne
mov
int
stc
out
inc
mov
inc
enter
rolb
xchg
sbbb
jle
insl
popa
rorb
dec
in
push
out
icebp
sbb
lcall
sbb
push
jg
sub
xchg
outsb
test
ljmp
cmp
mov
ja
dec
in
movsl
inc
mov
aaa
xor
fistpll
int
jo
roll
jmp
aaa
negb
push
jmp
push
push
cmpsl
adc
frstpm(287
cmpsb
xchg
inc
adc
mov
int3
mov
leave
xchg
xchg
mov
and
sub
dec
fisttpl
xchg
je
data16
cmpsl
insl
daa
lcall
mov
data16
xchg
mov
repz
and
stc
test
push
and
popf
mov
enter
jle
mov
xor
in
mov
lods
movsb
movsl
stos
lret
cmp
mov
insl
aad
sub
dec
and
into
pop
mov
lret
or
rcrl
cmp
rolb
dec
add
sbb
dec
push
sub
cmpsb
jle
jnp
xor
push
pop
sub
dec
nop
sbb
scas
or
mov
mov
pop
lods
adc
movl
pushf
push
imull
pop
ljmp
stos
ljmp
mov
xor
and
rcl
rolb
div
inc
push
fisttpl
sub
dec
mov
jo
in
xchg
fsubrl
testw
loop
pop
adc
cli
and
testb
js
add
fmull
fstp
aaa
mov
out
xchg
mov
xor
inc
lcall
mov
jle
xor
lret
in
cmpsb
and
addl
mov
pushf
mov
mov
add
rcrl
call
add
xor
test
mov
aam
movsl
stc
jb
repz
adcb
mov
push
add
int3
push
cwtl
out
push
sbb
push
popa
xchg
ret
add
mov
cs
jecxz
lods
ret
mov
mov
adc
std
mov
shlb
ficompl
push
or
fs
push
xchg
pop
test
cli
outsb
dec
xchg
mov
lcall
lcall
or
mov
scas
ja
popf
testl
jo
std
pusha
mov
ljmp
sub
dec
jnp
cmpsl
bnd
ret
xchg
not
mov
insb
cwtl
pop
mov
stos
mov
test
push
divl
imul
imul
lds
adc
test
sbb
lods
in
xlat
or
sub
pusha
loop
xchg
add
js
jns
std
or
pop
aam
cli
fnsave
xchg
insb
xchg
lods
mov
dec
sub
mov
sub
call
aas
mov
or
pop
clc
repnz
jae
push
scas
mov
movsb
push
sti
cltd
js
xchg
adc
loope
xor
pop
rcrb
popf
push
add
mov
add
jne
aas
mov
cmp
push
sbb
cmpsb
adc
int
or
xchg
mov
subb
mov
add
or
xchg
xor
mov
pusha
lea
bound
inc
js
xlat
jg
cmpsl
ret
jb
clc
pop
fwait
arpl
stc
icebp
sbb
xchg
unpcklps
xor
in
cmp
test
add
mov
rcl
push
rclb
xchg
pop
cltd
shll
int
jge
add
shrb
dec
jge
jae
mov
aaa
fdivs
mov
lods
push
mov
pop
cli
lret
and
cmp
inc
jle
imul
inc
cltd
ret
sbb
push
ror
sub
cmp
outsb
mov
icebp
pop
dec
mov
xchg
and
cmp
xor
cli
aas
int
lret
dec
xrelease
pushf
scas
sbb
testb
cmp
add
cmp
add
mov
push
fucomip
mov
adc
gs
int
cmpsl
cltd
ja
sbbl
dec
rcl
ret
test
sub
push
mov
mov
addb
scas
out
sub
sahf
dec
dec
mov
data16
outsl
jne
jno
lcall
pushf
mov
add
scas
or
in
sub
push
call
out
fwait
mov
test
inc
mov
fidivs
fisubrs
inc
jne
shll
cmpsb
inc
xchg
ret
or
std
cmp
jle
fwait
cwtl
push
mov
lods
and
test
mov
mov
add
mov
daa
fists
ret
mov
add
add
sbb
ja
addb
test
std
push
inc
mov
push
adc
sti
in
and
or
ffreep
imull
mov
dec
dec
jl
pop
enter
insl
mov
daa
imul
pop
pop
sub
nop
add
dec
cmpsb
mov
movsl
clc
or
xchg
dec
adc
mov
adc
imul
rol
dec
mov
insb
adc
movsb
xchg
roll
sub
push
and
mov
mov
xchg
lods
or
cmp
sbb
cmp
shll
loopne
xlat
das
xor
arpl
notb
cld
and
mov
rcll
jg
jno
popa
mov
and
lods
addr16
mov
xchg
xlat
push
pop
dec
repz
mov
mov
fmulp
sbb
lods
and
sbb
movsl
dec
xor
dec
addr16
cmpsl
mov
add
push
lods
xchg
dec
repz
ja
rcll
sbb
mov
pop
out
pop
pop
bound
inc
push
pop
mov
xchg
ret
fmulp
push
arpl
and
xlat
jp
test
mov
or
pusha
movsl
aam
sbb
push
jo
pop
mov
loopne
outsl
lcall
mov
into
std
dec
cs
mov
in
cmc
xchg
push
outsb
xorb
rcrl
and
and
pop
mov
in
cs
sub
jmp
and
fnstcw
lods
xchg
cwtl
mulb
rolb
adc
rcr
or
cmpb
mov
lret
pushf
rcrl
pop
or
jbe
inc
jb
xchg
push
test
inc
rclb
je
insb
cld
dec
push
test
sbb
je
jmp
cmpb
sbb
aas
insl
sbb
out
scas
lahf
addb
push
js
jge
decb
xchg
stc
je
mov
rcll
or
sbbb
insb
test
mov
push
adc
mov
jns
dec
pop
xchg
sbb
inc
hlt
popa
bound
jne
repz
fsubl
int3
pop
sbb
cwtl
test
out
push
sbb
outsb
mov
push
call
pop
leave
aad
sub
cmpsb
sahf
mov
sti
arpl
cmp
notl
push
cs
je
add
cmp
xor
xchg
mov
fisttps
inc
lahf
arpl
nop
lds
adc
fisubrl
pop
mov
cmc
cwtl
dec
lea
iret
addl
jbe
test
fwait
pop
dec
add
stc
pop
inc
iret
stos
xor
je
lcall
push
ret
and
sub
add
mov
test
outsb
shll
and
stos
push
push
xor
nop
out
cmp
je
inc
xor
pop
movsb
clc
lcall
mov
in
hlt
dec
aaa
jp
test
repz
pushf
jl
faddl
and
adc
mov
pop
ss
inc
lea
xchg
filds
rcll
adc
in
hlt
sbb
xlat
sub
aad
cmp
into
pushf
xchg
ljmp
mov
inc
push
scas
pop
mov
push
xchg
xor
pop
subl
in
push
fistpl
mov
jecxz
sub
ljmp
loopne
cs
mov
xchg
lods
push
add
outsl
xor
jnp
das
jp
pop
add
mov
mov
push
std
leave
out
cld
and
xchg
loope
test
popl
inc
fwait
mov
sbb
cli
std
inc
cmp
gs
add
xchg
out
popa
cmp
enter
jle
xorb
jb
scas
cli
hlt
pop
imul
cmp
sub
mov
je
stc
mov
into
adc
lcall
inc
sub
add
imul
aam
stos
insl
or
cmp
and
rcll
lret
cmpsl
inc
dec
les
mov
jns
shrl
pop
out
mov
in
insb
push
mov
lcall
xchg
jbe
adc
mov
clc
inc
add
sub
push
jns
imul
mulb
inc
inc
push
push
and
fsubrs
shrl
enter
mov
dec
jmp
dec
add
fidivrs
out
fildl
adc
jb
dec
jae
inc
roll
sub
sub
addr16
cwtl
xchg
dec
cmp
xchg
aam
inc
unpcklps
xchg
jb
lds
jmp
and
scas
cs
jne
imul
cli
pop
sbb
outsl
loope
or
insb
sbb
in
jl
stos
jae
add
add
mov
xchg
jmp
lock
lods
imul
adc
scas
pop
dec
mov
subb
inc
xchg
mov
out
dec
add
add
xchg
popa
addr16
push
inc
mov
outsb
pop
jo
mov
jae
mov
dec
xor
out
push
out
pushf
lea
out
orb
adc
xchg
hlt
dec
fwait
push
ret
xchg
lods
jg
mov
sub
je
test
cmp
repz
loopne
adc
sub
div
cmp
xor
or
push
out
in
xchg
lock
enter
rclb
push
orb
cmp
jb
clc
xchg
inc
bound
dec
in
imul
mov
push
and
adc
imul
stos
pop
das
push
cmpsb
ljmp
mov
test
sub
es
repz
movsb
cld
or
dec
xorl
scas
inc
sub
push
bound
clc
xchg
addr16
movsl
jl
add
test
jnp
inc
popa
jo
mov
pop
mov
mov
or
dec
push
imul
nop
sti
ret
icebp
icebp
icebp
jnp
xor
sti
out
push
cmpsl
ret
call
pop
rorl
xor
adc
cmpsb
adc
and
xchg
sbb
push
leave
xchg
and
push
mov
dec
pop
cmp
fdivs
adc
mov
sbb
mov
call
dec
gs
mov
mov
jae
data16
fldl2t
dec
adc
jne
decl
xor
mov
lahf
mov
cmp
loopne
ret
mov
pop
dec
xor
inc
mov
inc
fiadds
dec
inc
mov
mov
push
outsb
and
add
xchg
or
shrl
push
lods
adc
lds
inc
popa
jb
hlt
xchg
dec
xchg
sub
cmp
inc
incl
cmc
mov
pop
sarl
xchg
xchg
aas
or
cmp
xor
fidivs
push
cmp
jbe
imul
jbe
jg
fstpl
test
ret
mov
pushf
mov
mov
pop
and
or
pop
loop
decb
call
jb
jecxz
test
scas
scas
lahf
mov
ss
into
je
cltd
mov
sbb
or
aad
pop
out
aam
pushf
popa
push
cmpsl
nop
jb
mov
mov
push
xor
ret
aam
je
jo
lcall
xchg
mov
mov
shlb
aad
pop
lods
and
cmpsl
dec
mov
push
shll
pop
adc
outsb
inc
icebp
or
out
shl
je
pushf
dec
sbb
mov
fwait
lgs
stc
in
mov
sarb
mov
pusha
cmc
enter
enter
fcompl
adc
jg
js
dec
cld
in
repz
out
or
in
inc
dec
fisubs
pop
push
jnp
rclb
mov
jo
add
dec
imul
popf
imul
xchg
rcrb
gs
jmp
xor
xchg
sbb
stos
hlt
adc
repnz
out
ss
mov
mov
test
xor
cmp
push
pusha
and
pop
push
push
xchg
xchg
aaa
ja
sarl
mov
xor
pop
xlat
adc
fidivs
pop
sahf
jge
xchg
push
je
add
mov
leave
repz
lea
lds
out
mov
fbld
sbb
xchg
jns
cmp
cmp
add
fnsave
out
imul
pop
or
or
add
fdivrs
inc
cs
inc
repnz
push
xchg
shll
cmp
sbb
les
sub
cmc
fsubr
aaa
inc
cmp
lock
cmp
pushf
add
movsl
mov
xchg
sbb
mov
jecxz
out
aad
pushf
std
loop
inc
sbb
icebp
scas
sub
or
inc
ret
bound
stos
sbb
fisubs
orb
jbe
push
movsl
and
orl
or
je
mov
ds
pop
popa
jno
repz
aaa
push
nop
icebp
xchg
popf
dec
movsl
add
repnz
lods
cmp
jl
popa
lods
push
or
xor
les
pusha
push
lods
xor
cmpsb
jne
or
das
dec
shll
shrb
aaa
push
sbb
mov
mov
ds
adc
sbb
nop
outsl
push
mov
pop
mov
jmp
jg
push
adc
dec
adc
divl
in
repnz
pop
in
and
push
ds
addb
add
mov
xchg
push
or
sbb
ss
cmpsb
mov
popa
je
jg
stc
insl
and
or
pusha
mov
sahf
push
popa
into
mov
scas
sbb
push
insl
sbb
inc
lcall
out
mov
loope
xor
outsb
loop
hlt
lods
jecxz
icebp
jecxz
movsb
mov
sbb
sub
andb
mov
subl
pushf
and
repnz
jae
testb
fbld
stc
out
or
shl
dec
arpl
ds
insl
out
ficoms
int
cmp
pusha
sbb
push
ss
stc
push
ds
int
sarb
cmp
jne
ljmp
xor
cltd
pushf
pop
or
mov
adc
enter
in
aas
fidivs
pop
ret
xlat
xor
fldenv
mov
push
or
mov
sub
fisttps
mov
ja
add
xor
cmp
jecxz
mov
push
cmp
dec
xchg
sar
add
js
xor
jb
movsb
dec
xor
adc
xlat
repz
mov
hlt
test
std
in
push
sti
cli
or
out
popa
cld
adc
cmp
out
inc
mov
leave
xor
adc
sub
into
push
xor
jbe
jnp
add
call
dec
fsubrl
fsubs
cs
cld
mov
lds
arpl
loope,pn
sub
inc
ret
mov
xchg
jne
repz
inc
pop
sahf
daa
add
aas
cmp
cwtl
or
push
or
mov
ret
sbb
stos
aam
jns
xor
jns
jb
leave
jbe
fisubrs
popf
jmp
scas
les
push
xchg
adc
in
in
mov
and
inc
fucomip
mov
daa
or
aad
data16
jb
xor
in
dec
icebp
cmp
push
fadds
mov
jecxz
gs
test
add
test
in
in
jne
mov
add
repnz
cmp
mov
out
rcll
push
outsb
pop
xor
imulb
sarl
pop
push
shlb
push
in
xchg
mov
xchg
testl
aas
jne
fstps
fadds
adc
mov
cmp
popf
sub
mov
cli
push
int3
lret
dec
out
add
aas
push
adc
mov
imul
mov
pop
add
mov
add
sbb
pop
xor
pop
int3
mov
mov
cmp
cs
mov
xor
adc
xor
lock
pushf
in
or
jne
xchg
push
xor
add
std
lds
outsb
pop
clc
fs
xchg
call
inc
and
xor
sub
lahf
in
popf
je
lea
cmc
xchg
cmpsl
mov
and
in
or
rcrb
xlat
adc
cltd
aam
pop
loopne
sub
mov
push
xlat
loope
sqrtps
imul
idivb
sub
xlat
and
xorl
insl
lock
fdivp
mov
andl
test
mov
xchg
sub
arpl
sbb
jae
and
ret
cmp
add
push
fbld
xor
outsl
std
mov
adc
pop
rcrl
push
xchg
push
mov
pop
jmp
shr
sahf
int
sti
rorl
leave
pop
push
imul
fcoms
negb
or
dec
xor
inc
xor
out
cmc
stos
and
std
sbb
adc
jge
xor
aaa
pop
ret
ret
dec
addr16
ret
das
cltd
insb
in
jno
inc
pop
loope
movsb
xorl
pop
fucom
jb
xchg
stos
data16
adc
pop
loope
or
mov
data16
add
and
call
in
or
aas
push
aam
sarb
sti
push
fimuls
or
in
mov
icebp
push
fs
sub
pushf
push
lea
cmpsl
and
and
pop
in
pop
mov
fidivs
sti
push
stos
nop
in
cmp
xchg
addr16
dec
imulb
cmpsb
mov
imul
and
push
gs
in
das
rorb
xchg
je
data16
add
push
cmp
enter
dec
mov
popf
les
inc
pushf
and
push
fmuls
jne
dec
test
push
adc
pop
cmpl
xchg
sub
in
mov
in
mov
mov
adc
js
hlt
push
mov
cmp
js
pop
push
inc
sti
push
jb
lahf
sbb
cltd
dec
pop
test
stos
aam
popa
gs
sub
mov
loopne
int
daa
adc
inc
or
test
pop
xor
sbb
outsb
push
ret
push
inc
out
gs
scas
jns
mov
mov
jbe
fisttpl
repz
or
push
mov
ja
into
data16
and
pushf
shr
mov
mulb
sub
std
mov
ss
bound
xchg
mov
lds
cmp
sbb
iret
push
int3
sub
rcrb
jns
push
or
je
push
in
pop
mov
or
ds
in
pushf
inc
mov
data16
mov
inc
cmp
into
out
cmc
insb
sahf
test
lret
fidivl
iret
pop
sbb
popf
adc
cwtl
in
xor
ja
dec
out
lea
cs
iret
pusha
mov
repz
aad
test
cmp
out
xchg
or
xchg
out
mov
mov
into
and
adc
sbb
mov
dec
hlt
test
pop
dec
xor
nop
sti
add
test
fnop
cmp
clc
xor
dec
notb
mov
into
ret
xchg
adc
sub
rclb
jno
or
push
scas
mov
insb
xchg
imul
push
and
and
sbb
push
std
jcxz
lea
push
shlb
data16
pusha
nop
dec
fstps
push
push
sub
sbb
jl
adc
clc
loopne
push
mov
add
inc
adc
nop
lcall
inc
lret
loop
lods
popf
andb
sub
out
or
cmp
push
and
movsb
sub
push
iret
fistpll
sbb
push
fmuls
loopne
push
in
scas
out
ficompl
mov
idiv
pop
add
insl
lods
mov
mov
and
fwait
lds
jne
xor
cmp
ja
loop
jl
xlat
and
mov
test
push
out
fwait
xchg
xchg
call
jo
in
jns
addr16
lea
mov
jnp
xor
dec
sarb
nop
push
fwait
jo
cmpsb
mov
cmp
mov
dec
or
fildll
jp
cs
incb
or
mov
jecxz
push
jle
ljmp
jb
pop
stos
inc
push
add
and
push
pop
pop
mov
pop
pop
popf
xchg
push
add
je
adcb
je
scas
cs
inc
outsl
or
xchg
stc
in
xchg
or
add
jmp
xchg
xchg
popf
dec
mov
cmp
out
js
insb
pop
dec
inc
test
dec
xlat
sbb
mov
stos
rcll
in
shrl
stos
sub
aaa
xchg
jp
jbe
movsl
fs
imul
and
out
push
rolb
cwtl
daa
sbb
sbb
xlat
ja
mov
xor
adc
and
xchg
sbb
add
xor
in
cli
cmp
stos
repnz
xchg
orl
jl
daa
jg
adc
xchg
psubw
push
dec
sti
out
sbbl
roll
and
xor
mov
add
pop
lret
mov
xor
ds
xchg
lret
sti
adc
and
adc
mov
sbb
or
dec
movsl
mov
mov
adc
shlb
xor
shll
aad
mov
je
mov
push
sub
fs
inc
xchg
jecxz
lcall
push
or
ja
shrb
clc
mov
mov
stos
sbb
or
mov
xchg
lret
cs
push
pop
add
mov
push
push
and
wrmsr
push
xchg
inc
mov
les
ret
sbb
leave
mov
pop
sbb
fstps
xor
xchg
aad
loop
nop
xchg
dec
inc
xchg
aad
ret
mov
xor
mov
xchg
ja
jb
outsb
inc
push
fcomps
mov
call
dec
pop
sbb
fistpll
into
xor
iret
mov
or
in
push
lock
lret
mov
out
or
jb
icebp
and
in
out
loop
add
adc
fwait
push
nop
or
inc
cmp
sar
addr16
sarl
test
pop
cmpsl
jbe
loop
lahf
cs
lcall
fisubrs
imul
es
in
dec
lock
cmp
mov
testb
mov
adc
xor
fidivrl
andb
and
sti
fwait
daa
xor
sub
and
inc
and
js
mov
mov
jl
pop
pop
pop
or
adc
lds
outsb
adc
jmp
ss
or
mov
jns
xchg
stos
mov
adc
cmp
movsl
into
cmp
cld
or
in
push
insl
add
clc
xchg
cwtl
and
out
cld
bound
mov
leave
popf
fstps
loope
mov
das
dec
shlb
je
dec
jne
mov
mov
stos
pop
inc
jns
lods
pop
ret
lock
out
into
outsl
mov
inc
rcrb
sbb
xchg
lods
test
popf
in
pop
leave
insl
pop
in
inc
jp
xor
xchg
shlb
or
pop
fs
cld
dec
jge
push
adc
push
mov
clc
lods
bound
faddl
stos
rolb
add
cmpl
and
jo
pop
mov
xchg
sub
test
mov
clc
mov
and
daa
sub
xchg
pop
xchg
in
stos
cmp
sub
cmp
and
push
and
jle
push
add
add
lds
mov
push
fyl2xp1
jg
or
mov
call
aaa
xor
mov
lock
repnz
nop
icebp
adc
insl
inc
xorb
pop
jnp
inc
xchg
outsl
add
ja
xor
out
mov
mov
sbb
popa
outsb
std
insb
xchg
ljmpw
jp
xchg
in
mov
sahf
or
cwtl
pop
pusha
mov
sbb
fistpll
shl
sub
adc
mov
lret
insl
push
jbe
dec
cmpsb
sub
fs
adc
xor
movsb
ss
repz
movsb
addr16
imul
in
gs
in
mov
out
push
fisubrs
ret
outsl
pushf
outsb
xor
bound
shlb
imul
cmp
and
pop
sub
lcall
fldl
jbe
pop
xchg
dec
call
pop
out
pop
bnd
dec
or
aad
jae
cmp
fisubrs
push
jo
jp
jle
inc
push
int
jge
daa
pusha
minps
sub
stos
jae
xor
dec
jns
out
arpl
add
jp
jmp
mov
pop
outsb
faddl
int
add
add
or
adc
add
mov
cltd
add
push
cmp
cmp
xor
mov
push
add
enter
and
lret
bnd
add
push
pop
dec
pop
mov
imul
loopne
xor
xchg
mov
fs
scas
adc
xor
inc
push
std
enter
xchg
mov
test
je
pop
leave
fsub
mov
js
pop
sub
sbb
jne
pusha
fsubs
das
movsl
xor
dec
mov
into
xor
sub
xor
in
aaa
pop
mov
hlt
pop
rclb
mov
adc
fisttps
mov
push
mov
push
pop
shrb
in
adc
jns
xchg
xchg
lds
push
dec
jl
imul
adc
out
pop
cmpl
pop
cli
mov
pop
mov
xchg
fisubs
mov
pop
fs
test
push
push
mov
shl
xor
mov
sub
cmp
lock
inc
adc
lcall
adc
cli
cmp
out
mov
fsubs
mov
int3
fidivrl
pop
pop
decl
outsb
jecxz
inc
repz
fistpll
mov
in
add
sbb
fisubs
sbb
daa
jo
add
push
and
xorl
cs
sub
clc
inc
sbb
cmpsl
insl
imul
int
dec
cld
push
add
mov
push
jle
test
daa
sub
or
call
push
std
jecxz
mov
mov
push
rcrl
int3
or
dec
sub
pop
insb
icebp
xlat
cmp
adcl
imul
push
push
movsb
jnp
sub
dec
fiaddl
mov
scas
mov
cwtl
mov
lods
pop
mov
outsb
mov
mov
cmpsl
mov
sbb
sbb
cmpsl
stos
jb
fiaddl
ljmp
shll
mov
push
inc
xlat
addr16
cmc
mov
push
outsb
xor
jb
daa
or
xor
into
jbe
sub
mov
js
je
repz
insb
xor
xor
jge
ds
aam
xchg
and
outsb
das
add
pop
adc
pop
sbb
xor
mov
orb
mov
push
pop
pop
jno
das
sub
stos
dec
mov
jp
mov
cmpsl
popf
pop
fsts
test
adc
out
dec
mov
mov
sub
test
add
arpl
mov
ljmp
push
xchg
add
sub
mov
scas
inc
sbb
add
add
xchg
movsb
adc
xchg
push
or
dec
popf
mov
mov
mov
std
xor
and
dec
gs
outsl
push
cs
in
mov
repnz
nop
sub
aaa
aaa
out
cld
push
pop
pop
mov
lea
lods
mov
mov
pop
mov
xchg
xchg
dec
cmpsb
enter
nop
movsb
pusha
out
stos
xchg
out
mov
fcmovne
movsl
insl
lds
inc
sub
cmp
and
addr16
les
cld
mov
and
popf
pop
pop
or
push
and
cs
dec
and
insl
sub
outsl
out
ja
xor
cpuid
inc
outsb
mov
imul
int
jmp
ljmp
int3
jns
mull
dec
mov
daa
mov
cmc
add
dec
mov
inc
fistpll
mov
jmp
insl
cli
mov
dec
mov
data16
inc
and
mov
lret
stos
dec
ret
xor
dec
outsb
scas
adc
cmpb
xchg
push
mov
xchg
es
pop
incl
push
movsb
iret
mov
jbe
sti
inc
jb
cmc
pop
jg
inc
jb
xor
xlat
mov
mov
xchg
mov
icebp
cltd
sbb
mov
imul
cmp
mov
inc
xchg
mov
cmp
inc
shl
jp
popa
les
cli
sub
sub
fadd
movsl
loop
out
pop
push
mov
mov
sbb
in
xchg
aad
jp
mov
test
inc
lret
or
mov
mov
mov
outsb
adc
nop
push
rcrb
push
ljmp
loope
jg
fisubrl
lret
push
push
xor
add
clc
mov
jb
mov
loopne
adc
cmp
int
lret
mov
pop
or
fstpt
jmp
fadds
push
adc
rolb
in
enter
int3
mov
cmp
ja
xor
pop
out
dec
ret
pushl
pop
ret
pop
repz
jbe
dec
add
dec
sbb
test
or
xchg
insl
mov
adc
inc
xlat
and
fdivrl
ss
xchg
aas
jo
dec
jg
pop
mov
push
and
jne
leave
dec
scas
dec
out
mov
stos
cs
and
sarl
or
mov
sbb
call
int
mov
rcrb
cmc
or
sub
cmp
repnz
rcr
push
xchg
xchg
dec
mov
dec
stos
outsl
pop
add
test
test
pusha
add
or
jbe
stc
mov
mov
cmp
call
cmp
lock
jnp
adc
adc
shlb
loop
jmp
loop
imul
std
stc
pop
xchg
mov
jge
lods
mov
adc
xchg
pop
insl
xchg
push
shll
mov
int3
inc
mov
cs
mov
adc
jno
sbb
je
pop
adc
cld
je
dec
sbb
push
and
push
out
jns
pusha
add
imul
stc
push
out
sub
mov
sarb
call
xchg
out
sub
and
shrl
aam
aas
movsb
loop
fidivs
data16
aam
push
fisubl
mov
jp
jo
popf
nop
jb
jmp
test
push
adc
mov
xchg
jmp
out
jno
ret
into
adc
push
pop
xlat
xor
mov
sbb
test
jb
imul
mov
iret
pushf
fldenv
leave
sub
ret
jmp
scas
lds
cmp
nop
and
adc
or
add
bound
or
je
icebp
iret
jno
xor
add
and
jg
adc
add
mov
outsl
cmp
nop
pop
lods
test
sti
sbb
push
fimull
pop
sub
daa
add
pop
mov
sbb
jae
cmp
cmp
xchg
mov
lcall
jno
loop
imull
mov
pop
add
add
lret
xor
aaa
xchg
cmp
or
xchg
jae
scas
push
or
in
fbld
and
jg
mov
or
je
mov
ljmp
outsb
out
inc
pop
movsb
jbe
inc
repnz
and
jo
push
sub
dec
add
pop
sub
pop
in
or
in
bound
iret
dec
xor
data16
add
rorl
push
bound
push
lods
cmc
or
push
mov
in
gs
aam
jg
and
mov
arpl
test
ret
add
mov
insb
ss
sahf
out
mov
jo
or
add
mov
insb
mov
icebp
inc
cmpsl
push
mov
cs
hlt
or
xchg
push
fnstenv
and
sub
push
or
pop
xchg
stc
jns
subl
ljmp
daa
out
rorb
cmp
ja
mov
js
cli
repz
dec
in
insl
test
or
add
push
push
int
xchg
jae
sti
stos
sub
cmp
ss
lcall
enter
pop
sti
out
int
adc
mov
clc
pop
das
push
xchg
cmp
ror
and
sar
cmp
jo
cwtl
adc
inc
jmp
add
es
rcrb
lea
cmp
xor
fwait
rolb
ucomiss
jecxz
pop
int
push
jo
popf
mov
add
loop
jns
insb
push
ljmp
sbb
sub
pop
xchg
sarb
add
rolb
fucomi
fistps
roll
inc
pop
out
in
repnz
jg
jb
mov
ss
adc
mov
popf
adc
or
mov
imul
test
popa
vphsubwd
ds
sti
call
mov
jae
xor
adc
xchg
xchg
jo
mov
mov
inc
lds
jg
cmpsl
btc
rclb
rorb
jns
inc
dec
jge
hlt
imul
cltd
sti
and
data16
fidivl
leave
sbb
adc
sub
mov
fsubrl
test
pop
mov
cmpsl
clc
ret
int
pop
outsb
inc
pop
mov
mov
inc
aam
inc
inc
je
adc
push
das
nop
push
jge
push
mov
push
aaa
push
fisttpll
xor
out
js
ss
xchg
dec
out
mov
std
dec
lock
dec
test
jmp
in
outsl
enter
mov
xor
cmpsb
repnz
lock
dec
xchg
and
subl
inc
xchg
push
sub
addr16
js
mov
mov
cs
xor
sarl
mov
xchg
outsl
cli
mov
add
shll
stc
das
lods
push
out
xchg
push
dec
mov
fldenv
data16
jb
push
sbb
fs
sahf
mov
bound
pop
out
push
int3
insl
packsswb
add
cmp
jns
cmp
fwait
pop
mov
sbb
cmpsl
cmpsl
cmpsb
pop
inc
ror
mov
fcomps
pop
popf
data16
cwtl
mov
hlt
movsl
mov
dec
inc
lods
cld
int3
inc
cmp
mov
xor
sbb
mov
iret
pop
ljmp
sub
dec
or
xor
mov
fistpll
jge
test
cmpsl
jecxz
test
fsubr
inc
in
icebp
clc
sbb
arpl
pop
leave
jp
scas
dec
out
in
xchg
sub
or
push
movsl
test
sbb
out
push
or
cmp
cld
xor
mov
push
xchg
dec
pop
inc
mov
icebp
add
jbe
cmp
scas
push
aad
inc
pop
loopne
adc
cmc
outsb
sub
insl
sbb
fisttps
cmp
lret
adc
xor
sub
or
scas
inc
or
pop
loope
rclb
das
fldl
pop
leave
test
push
pop
ret
movsb
mov
movb
adc
dec
pop
cmp
sarl
jecxz
clc
roll
in
leave
cmp
add
push
jns
fidivl
roll
fwait
inc
push
mov
rcll
cs
mov
pop
shlb
idivl
loop
and
in
pop
jno
mov
xor
push
ljmp
mov
bswap
and
and
inc
dec
outsl
imulb
dec
imul
out
xchg
cs
sti
mov
insb
adc
xchg
mov
push
xchg
jo
cmpsl
pop
movsl
add
dec
testb
andl
lret
clc
call
cmp
push
fs
xchg
pop
xlat
adc
sub
mov
xchg
xorl
aad
ds
inc
bound
fdiv
lods
test
pop
out
repz
scas
js
and
jmp
jmp
sub
scas
insb
push
lret
inc
rcrb
in
pushf
add
in
cld
push
in
sub
lret
pop
inc
pushf
sti
jecxz
mov
icebp
jmp
in
leave
mov
lock
je
sub
or
and
cmp
and
scas
insb
lock
sub
dec
push
and
insb
movsb
loope
inc
bt
and
adc
inc
sub
test
fmulp
jae
movsl
dec
push
pop
adc
out
stc
lcall
mov
push
testb
in
roll
xor
sbb
dec
out
mov
adc
inc
cmc
aad
pushw
cmpsb
or
mov
roll
adc
sub
sub
cltd
xchg
or
fs
adc
pop
xor
adc
popa
xchg
pop
add
cli
add
fs
mov
jle
scas
jecxz
fdivp
xchg
mov
or
rorl
mov
inc
cmp
fmull
add
mov
lret
insb
mov
shlb
and
add
push
sbb
adc
enter
test
jbe
sub
jmp
or
pop
push
outsb
dec
jl
stos
mov
rolb
adc
rcr
fnstcw
jecxz
les
outsb
mov
mov
fsubl
sbb
ret
fistps
lret
test
inc
mov
shrl
xchg
pop
shlb
xor
jbe
hlt
cmp
test
jo
push
push
fimull
mov
test
sub
cmp
cltd
stc
mov
xor
ret
mov
mov
cmp
test
pop
push
mov
pop
or
stc
bound
dec
testl
fisubs
lret
test
pop
jno
mov
out
xorb
jge
enter
cmc
test
adc
lahf
int
movsl
and
jns
inc
push
icebp
sbb
scas
pop
push
pop
lahf
dec
in
pop
mov
popf
mov
mov
xor
fldenv
fdivs
mov
fisubrl
stc
pop
pop
inc
out
xchg
leave
push
mov
das
mov
iret
add
xchg
or
mov
cmp
push
fisubs
xor
cmp
test
mov
into
cli
cmpsb
div
push
dec
push
xchg
repnz
jge
pushw
cmpsb
mov
jo
add
push
push
xchg
add
pop
repz
push
jecxz
fcompl
jne
fcoms
mov
fsubrp
cmp
cwtl
jb
jmp
cs
cmp
negl
mov
and
fisttpll
or
icebp
mov
jnp
pop
pop
sbb
cltd
icebp
push
dec
cs
aaa
push
jnp
and
or
lock
push
fisubrl
fnstenv
push
mov
pop
in
stos
fstpl
add
and
push
cmp
xchg
push
mov
cmp
repz
out
mov
cmp
popf
ds
pop
sub
jb
fmuls
adc
add
add
jne
cmp
insb
fs
pop
fdiv
push
lea
test
loop
fcmovu
inc
outsb
dec
and
sub
pop
dec
sbbl
in
ret
imul
sub
leave
jne
mov
addl
cmp
mov
ret
loop
pusha
jo
xchg
sbb
add
push
shl
jecxz
jecxz
mov
cs
cmp
aaa
sub
or
cmp
xor
iret
mov
jl
push
lods
in
dec
mov
lret
xor
or
and
dec
test
mov
push
push
lock
pop
sahf
mov
sub
cmp
clc
push
ds
outsl
ljmp
fadd
pop
sub
mov
mov
lea
rcrl
adc
sub
fdiv
lret
lcall
add
pop
popa
add
xor
test
and
shl
test
aam
adc
or
enter
push
dec
insl
add
inc
aam
jmp
orl
mov
roll
add
cli
dec
xchg
xchg
sbb
std
jae
mov
outsb
add
ret
js
xor
rorb
les
jmp
test
sbb
push
mov
das
fs
dec
repnz
xchg
in
movsl
es
leave
inc
leave
sarl
mov
cmp
cmpsb
sbb
jns
or
and
mov
pop
fsubrl
insb
push
loope
push
popf
adc
xchg
cvtdq2ps
fildll
cmpsb
adc
cmp
shl
out
sbb
repz
push
add
cmp
scas
sbb
dec
push
xorb
loope
jbe
ret
adc
sarl
test
scas
jp
scas
mov
xchg
mov
es
icebp
and
sbb
lahf
ret
xor
and
fcmovne
pop
insb
aas
jns
jo
mov
and
cwtl
or
jo
push
vpsllw
cwtl
push
xchg
imul
push
repnz
xlat
daa
je
mov
fiadds
or
sub
das
mov
sbb
gs
jg
cwtl
lods
lock
aaa
mov
imul
in
mov
add
pop
out
push
dec
hlt
inc
inc
xor
pop
mov
in
stc
push
stos
cmp
mov
mov
pop
shr
test
stos
xor
enter
das
roll
ror
xchg
xor
sub
inc
xlat
mov
fisubl
mov
ss
push
daa
mov
int3
and
push
inc
ja
jno
std
cmc
cmp
pusha
fs
add
cwtl
ficoml
cmp
jmp
icebp
fisubs
dec
sbb
test
ret
fcom
xor
xchg
in
add
and
enter
mov
ret
pop
push
aad
jp
sbb
cltd
push
stos
lods
mov
xlat
mov
negl
sahf
pushl
nop
scas
and
lret
sbb
push
mov
insl
xor
movsb
xchg
cld
push
arpl
out
iret
xchg
or
ficomps
in
test
xchg
movb
lods
ret
jns
ret
adc
inc
inc
pusha
mov
mov
sub
test
fmuls
dec
out
sbb
pop
sahf
xor
jmp
std
loopne
out
adc
xchg
and
and
jg
bound
cmc
les
and
ljmp
lret
shrl
dec
and
test
stos
push
call
pop
int
pop
lods
ss
sarb
or
stos
clc
cmp
pop
cmp
pop
lcall
fidivl
mov
sub
fildl
lahf
or
lea
cmpsb
scas
daa
sub
push
clc
sub
shll
jp
dec
xchg
pushf
idiv
mov
xor
leave
or
mov
or
mov
es
pop
out
cmp
jbe
test
jge
adc
dec
and
jge
ret
mov
mov
sbb
jo
mov
xchg
scas
in
insl
xchg
shll
fidivl
ficomps
sbbb
insb
pop
mov
jle
mov
enter
push
bound
or
mov
and
xor
mov
pop
cmp
iret
pop
xchg
jge
aaa
jbe
push
aas
xor
test
push
mov
movsb
aas
cmp
pop
mov
cli
lods
nop
sbb
mov
das
xchg
es
push
mov
rol
or
lret
lods
loop
fstpt
js
sti
loopne
stc
jne
or
dec
out
test
test
add
pusha
mov
shll
loope
stos
loopne
jg
clc
ds
cmp
icebp
or
xchg
out
sti
jns
cmp
pop
fsts
sub
out
cwtl
inc
push
or
cmp
mov
pcmpeqw
xor
js
mov
aad
xchg
fcoms
cld
inc
sbb
clc
lahf
jo
push
mov
int
daa
cmp
mov
hlt
push
dec
call
in
es
lds
sub
lret
call
pop
pop
idivl
add
aad
notl
xchg
sarl
sti
imul
in
mov
sti
shlb
sti
jbe
loope
push
and
bound
mov
into
mov
mov
repnz
loopne
out
pop
lahf
sub
or
sbb
scas
leave
mov
ljmp
and
mov
xchg
outsb
cmp
out
rolb
push
push
jl
fldt
lods
xlat
dec
into
fwait
adc
in
test
jo
jns
xchg
sbb
xchg
pop
xor
jae
into
lret
or
dec
aas
push
stc
outsb
mov
idivl
pusha
adc
add
dec
pop
mov
stos
mov
ljmp
pop
mov
js
loop
arpl
fidivs
push
add
loope
xor
lods
js
shl
cmp
daa
insl
add
dec
out
xor
in
cltd
xor
in
pop
lret
adc
fisubrl
add
pop
in
shr
xchg
clc
ja
and
out
negb
lret
mov
push
xchg
cwtl
add
sahf
rorb
sub
jl
fs
outsb
shlb
ret
sub
jo
enter
fcoml
xchg
in
pop
popf
inc
xchg
ds
mov
xor
inc
push
pop
in
es
sti
mov
aam
in
adc
sarl
dec
pop
movsb
cmp
sbb
pop
divl
jle
dec
in
xchg
lcall
pop
adc
push
popf
das
or
out
ds
pop
idivb
rclb
lret
lcall
or
stos
add
ss
mov
loopne
cli
cmp
fstpl
xchg
out
in
dec
jae
pop
pushf
pop
sbb
xor
lahf
loop
dec
pop
xchg
jne
and
daa
inc
pop
cmpsl
imul
stos
mov
ret
jg
out
mov
cmp
cmpsl
outsl
jl
push
pop
sti
fucomi
xchg
add
and
ja
add
push
int
pushf
mov
jg
in
sarb
mov
ret
rcrl
scas
aad
adc
outsl
dec
push
add
insb
jmp
xor
lock
outsl
pop
dec
imul
xor
cli
mov
push
lds
inc
mov
mov
rolb
js
sbb
xor
ret
leave
daa
mov
pop
cwtl
loope
outsb
insl
jns
cmc
hlt
mov
sti
dec
lea
mov
dec
std
into
repz
clc
iret
mov
dec
push
or
jecxz
cmpsb
xor
ret
test
sbb
addr16
mov
inc
or
mov
push
sbb
lods
and
ss
sbb
cs
jecxz
jb
cmp
in
rcl
sub
fcomps
sub
adc
jge
push
push
cmp
test
xor
popa
insb
in
loopne
aas
pop
xchg
jl
pop
dec
jno
outsb
pop
mov
mov
pushl
dec
inc
jle
pop
iret
sbb
scas
adc
sbb
roll
mov
add
fs
dec
punpcklbw
dec
mov
cltd
int
adc
fcmovne
xor
inc
pusha
inc
jbe
mov
xlat
mov
pop
xor
pusha
rcr
push
jnp
sub
jp
inc
mov
lds
mov
mov
jmp
xchg
or
adc
pop
adc
lea
mov
out
icebp
scas
fwait
mov
add
idivb
ja
mov
inc
mov
mov
xor
dec
or
cmp
std
je
mov
subb
fdivs
mov
in
fbstp
aas
out
ss
sub
stc
sub
push
fadds
jns
ljmp
lahf
pop
cmp
mov
mov
xchg
fldl
scas
movsb
xor
jmp
outsl
pop
imul
lock
jecxz
push
xor
pusha
out
scas
push
sbb
push
xor
adc
jge
push
and
std
cmp
call
int
and
cwtl
add
pop
cltd
mov
jae
and
in
repnz
dec
jnp
scas
in
dec
inc
test
jno
mov
outsl
xchg
stos
add
test
mov
push
fcompl
lock
xchg
sub
pop
fisubs
nop
je
cli
test
int3
pop
jecxz
mov
mov
xor
addr16
ljmp
xchg
test
dec
jp
ja
pop
adc
icebp
mov
jl
jae
out
adc
mov
cmp
bound
aaa
daa
add
fisttpl
add
fwait
or
test
dec
arpl
push
hlt
aam
ja
push
cli
pop
imul
ficoml
dec
xchg
lret
pop
mov
outsb
enter
pusha
jno
cmp
mov
dec
inc
dec
cmpsl
fldt
xor
test
sbb
or
inc
rdpmc
mov
pop
cmp
fucomi
test
xor
pop
cs
bound
out
cmp
inc
nop
int3
xor
cltd
dec
ret
push
pushf
jmp
gs
daa
shr
cmc
dec
push
icebp
xor
daa
push
fwait
or
and
xor
rorb
sti
sub
sarb
add
inc
or
fistl
pusha
aad
sub
and
add
clc
mov
std
ja
mov
mov
push
loopne
xor
mov
mov
fldl
mov
pop
mov
insl
roll
mov
sbb
pushf
mov
xor
mov
fstps
jle
cli
pop
popf
push
add
out
cmp
dec
ret
ljmp
mov
out
mov
jb
mov
pop
or
lock
aam
push
stos
lret
out
push
inc
mov
lahf
cmc
into
out
jp
daa
lods
dec
or
cmpsb
sbb
mov
jo
mov
xchg
mov
mov
shlb
int
jae
jnp
ja
jnp
or
mov
das
dec
cltd
sbb
movsb
inc
sbb
xchg
adcb
outsb
jae
lret
inc
and
int
outsb
dec
jge
xor
fwait
sub
movsb
ret
sub
jg
jns
mov
cmpsl
inc
ret
test
jmp
je
sbb
sbb
sysexit
addb
in
jo
ja
mov
xlat
pop
jno
mov
enter
mov
jno
dec
jbe
test
dec
add
aas
sbb
ficomps
sbb
stos
insb
imulb
mov
mov
adc
inc
popf
inc
ds
mov
adc
pop
int
cmp
sbb
xor
dec
inc
cmp
outsl
push
mov
push
cmp
enter
out
pop
pop
test
gs
imul
xor
repnz
pop
mov
add
push
outsb
or
mov
pop
rcrl
pop
dec
dec
xor
in
outsb
mov
dec
outsl
add
lcall
ljmp
ds
cmp
inc
in
ficoml
jmp
jg
xchg
gs
ret
fwait
mov
aad
xor
mov
fcomi
fisubl
jmp
pop
je
and
push
loopne
xor
outsb
cmpsl
fadds
incb
jbe
in
out
ret
jmp
sti
push
xchg
sbb
subl
in
push
imul
mov
jmp
mov
cmpsb
lea
sahf
sbb
sub
dec
mov
sbb
mov
aad
loop
mov
inc
call
sub
or
rcl
repz
push
push
cmpsl
push
inc
sub
shl
mov
lahf
add
inc
push
cmp
out
or
jnp
dec
neg
pop
jns
rclb
lea
ds
sub
into
cmpsl
leave
xchg
push
mov
mov
mov
aas
ss
mov
pop
outsl
ljmp
mov
or
or
push
roll
xor
inc
and
inc
ror
insl
popf
jmp
jge
xlat
leave
jb
dec
add
imul
sahf
add
or
lcall
lods
push
xor
xor
outsb
les
mov
mov
push
mov
loope
enter
or
in
xchg
negb
mov
jns
inc
lret
ret
stos
gs
hlt
pop
fcomps
mov
mov
mov
mov
inc
movsl
inc
mov
xchg
test
cmpsl
mov
daa
int3
add
idivb
xchg
movsb
xor
and
adcb
cmpsb
sub
mull
andl
inc
ss
icebp
mov
sbb
cld
ret
and
negl
gs
rcrb
add
jo
jnp
fisubrl
xchg
push
aaa
in
js
mov
fmuls
or
in
xlat
ds
mov
sbb
ljmp
xor
jl
repnz
sbb
bound
inc
imul
sbb
stc
bnd
cmc
adc
sbb
or
call
jle
outsb
or
push
int3
iret
add
mov
push
push
cltd
mov
lret
loope
in
fcoml
xor
jo
popa
xchg
ss
cld
and
call
test
inc
push
xlat
popf
test
xchg
sbb
rclb
pushf
ja
jg
xchg
push
and
add
mov
jl
jb
daa
aad
xlat
and
dec
cli
xor
out
or
enter
dec
fldenv
jp
mov
incb
xchg
mov
jge
sahf
adc
rcll
pusha
lds
mov
or
mov
mov
inc
adc
mov
mov
pop
jle
sti
push
jb
repz
inc
mov
xor
lods
pop
pop
pop
inc
cmp
mov
sub
sub
dec
rcll
mov
ficompl
outsl
popa
cltd
ss
ss
mov
pop
cld
ss
subl
adc
jecxz
stos
cwtl
jmp
add
dec
clc
adc
lea
popa
inc
cmc
fs
bound
inc
inc
insb
enter
loope
jbe
arpl
fnstcw
sbbl
ret
std
push
xor
xchg
add
or
jb
mov
sbb
std
rcrl
or
mull
cld
stc
popf
mov
mov
and
lods
or
loopne
in
jns
enter
inc
mov
rorl
icebp
enter
add
adc
mov
test
pop
out
iret
mov
push
daa
or
lods
push
fwait
popa
jmp
repz
or
js
test
mov
out
ret
and
mov
mov
mov
in
aas
jnp
je
lock
aad
push
jecxz
and
imul
les
xor
movsb
aad
sub
push
je
int
dec
ja
mov
pop
push
mov
stos
sbb
adc
lret
cli
sbb
or
xchg
ret
fs
push
cli
lcall
sub
add
std
ret
inc
cwtl
es
in
mov
sub
inc
int
test
imul
andl
pushf
inc
cmp
push
insl
cmpsl
or
and
stos
test
fnstcw
push
adc
lcall
lahf
das
into
mov
cmp
mov
sbb
addr16
jnp
inc
xchg
sub
jle
scas
xchg
inc
aam
cmp
orb
insl
add
fildll
shrb
dec
leave
notb
insl
roll
push
dec
add
insb
lret
iret
mov
shll
or
cmpsl
sub
sbb
pop
aad
clc
ljmp
in
mov
fs
mov
mov
std
pop
sahf
mov
sub
into
push
mov
or
inc
xor
or
imul
jmp
or
or
inc
std
jecxz
ror
inc
in
cmp
jecxz
js
lds
addr16
cs
test
inc
in
rolb
or
iret
mov
stos
add
xchg
test
divb
les
jg
shlb
dec
clc
xchg
cmp
mov
hlt
test
daa
jno
pop
adc
divl
xchg
mov
pop
clc
je
sub
mov
in
sbb
cltd
aad
sub
fstl
loopne
insb
js
xor
aas
ss
lret
add
iret
dec
insl
add
pushf
clc
in
lcall
enter
clc
xor
out
filds
adc
cltd
lock
xchg
mov
and
mov
lahf
pusha
xchg
les
dec
ficoms
inc
pop
popf
out
add
jl
jecxz
add
mov
or
jnp
jecxz
leave
in
orl
pop
test
pop
sahf
pushf
ss
mov
outsb
dec
push
in
ljmp
inc
adc
xchg
pop
push
xchg
cmpsb
sub
ret
inc
pop
adc
sarb
adc
mov
int3
stc
and
push
or
roll
adc
dec
cmc
adc
dec
dec
add
xchg
mov
pop
xchg
roll
lret
in
call
lds
jbe
mov
push
sbb
jo
sbb
mov
push
cmp
sub
movsl
fst
xchg
mov
add
mov
aad
movsb
dec
push
ljmp
imul
add
out
pusha
test
mov
mov
ret
call
sbb
fisubrs
enter
jnp
sbb
xor
dec
jmp
je
movsl
adc
xchg
xchg
jo
push
lods
out
push
ljmp
lahf
bound
jp
sahf
xchg
dec
mov
popa
sbb
inc
cltd
xor
lret
xorl
fs
pop
adc
inc
sahf
xchg
cli
call
lret
sub
mov
fbstp
aam
into
negb
shlb
fs
mov
xchg
xchg
xchg
sub
adc
fistpll
adc
subw
sub
iret
mov
fmuls
sbbb
add
xchg
sub
sbb
sbbb
ret
mov
popf
cmp
cmpsl
cld
loope
jge
xchg
xchg
sub
dec
insl
pextrw
cs
mov
lret
out
inc
js
push
je
lea
cltd
sbb
out
int3
je
repz
fs
mov
inc
cs
gs
out
ss
add
cmpsb
stos
movsb
ficompl
fiadds
sub
adc
or
xchg
addr16
jge
aaa
pop
cmc
fs
xor
int
sub
pop
mov
jecxz
inc
pusha
jnp
sbb
dec
add
fsubs
dec
xchg
repnz
pop
mov
inc
jae
xchg
sahf
xchg
add
jno
and
rcll
lds
das
ror
sub
movsb
imul
out
cmp
jmp
sbb
jl
xchg
dec
sarl
push
push
xchg
xor
bound
addr16
push
cmc
mov
jecxz
mov
stc
insl
and
cmpl
jmp
outsl
xchg
in
adc
or
roll
push
pop
xchg
push
xor
adcb
jb
scas
xchg
dec
cli
fnstenv
mov
or
mov
icebp
dec
mov
out
movsb
xlat
xchg
xchg
out
or
sti
push
movsl
and
or
js
data16
in
sub
adc
pop
int3
pushf
mov
cmp
push
fs
cmp
ds
insb
mov
pushl
pop
or
inc
push
js
dec
popf
mov
adc
call
insl
pop
dec
cmp
fdivrp
or
push
into
and
js
mov
pusha
pop
movsl
mov
cld
ret
rcr
and
inc
inc
mov
cwtl
sarl
ds
pop
cmp
repz
mov
add
mov
inc
lods
leave
cmp
rcl
or
xchg
xchg
dec
pmulhuw
mov
push
iret
cmp
test
push
inc
int
push
insb
movsb
xchg
jg
or
std
push
inc
jecxz
popf
int
mov
or
stos
outsb
jl
inc
nop
das
mov
rcrl
cmp
aaa
aas
je
loope
jge
push
js
add
xor
pop
out
adc
xor
xor
sub
lahf
mov
inc
in
xor
rorl
jo
int
lods
hlt
aam
aam
and
iret
stc
push
mov
rorl
mov
subb
shld
mov
dec
psrlq
std
cmc
lock
pop
aam
int3
shlb
mov
icebp
pop
loopne
push
jno
pop
imul
in
jnp
nop
popa
je
xor
repnz
push
jmp
add
jmp
cmp
dec
ds
mov
jae
sarb
sub
cli
xor
xchg
jl
inc
out
addr16
dec
movsl
loop
andl
das
adc
push
loop
sbbl
testb
cmc
pop
ljmp
mov
inc
jg
xchg
mov
mov
stos
outsb
and
cltd
jl
or
les
lret
mov
cmc
jns
mov
sbb
pushf
inc
pushf
and
xchg
push
fistpl
cmp
inc
movsb
sbb
sbb
or
inc
or
loope
inc
jo
icebp
xchg
pop
clc
lods
mov
inc
inc
ds
add
mov
and
popl
out
pop
push
dec
pop
cmp
cmp
xchg
cwtl
insl
xor
adc
shrl
pusha
sub
aaa
jo
imull
aaa
add
sub
mov
jp
mov
inc
outsl
stos
push
sub
les
movsl
sub
mov
push
fsubrl
mov
push
add
jnp
lea
cmc
jnp
lcall
int3
sahf
ret
lods
sahf
scas
jbe
sub
loop
sub
jb
fs
jp
out
add
cltd
cld
and
daa
gs
push
mov
push
xchg
dec
cmp
ja
dec
sbbl
pop
add
ficoms
nop
sbb
sbb
stos
jnp
fistps
mov
push
xchg
ljmp
nop
xor
inc
sub
sti
fldln2
jp
xor
pop
and
inc
popf
lret
movsl
xchg
daa
pop
gs
movsb
xchg
jp
lfs
ds
packssdw
in
aas
pop
jl
sbb
jnp
sahf
loope
insb
jp
jne
ds
fcomps
sbb
pop
shrl
jbe
mov
loop
dec
std
mov
loop
jl
nop
das
dec
nop
add
lods
cmp
mov
or
dec
inc
dec
mov
xchg
sti
adc
cmpsb
xchg
push
leave
pop
cmp
mov
addb
and
xchg
jmp
shlb
aas
mov
xchg
addr16
push
outsb
mov
stc
fnstenv
lret
je
xchg
adc
scas
adc
fcomps
or
imul
aaa
mov
xchg
lret
and
and
in
mov
sti
mov
ljmp
cmp
das
push
scas
rol
mov
scas
xchg
and
add
insl
stos
adc
out
xchg
xchg
jg
pop
mov
movsb
out
push
cmp
and
mov
sbb
mov
dec
repz
xorl
test
jle
mov
lods
sahf
outsl
mov
sbb
mov
cmp
cmp
lods
push
jmp
ja
and
in
mov
divb
jmp
mov
pop
push
pop
xchg
xchg
outsb
lcall
movsl
jne
cmp
cmpsb
pop
xor
jo
fdivrs
push
das
push
push
sahf
fs
jo
in
mov
add
lfs
lcall
lods
mov
das
inc
and
and
mov
imul
inc
fcoml
int3
jge
pop
xchg
in
add
pushf
mov
and
out
push
daa
add
ljmp
xchg
xchg
pop
lods
sub
shrb
into
test
out
jge
xchg
add
dec
jbe
negb
daa
fistpl
daa
push
aam
xor
lods
hlt
push
daa
psrad
xchg
insb
push
clc
xor
sub
xchg
sub
jge
sub
xchg
fcoml
sti
lcall
xchg
adc
pop
repz
jns
jns
xor
xchg
loop
call
pop
iret
jb
repz
mov
adc
sarb
lea
fldt
orl
mov
fwait
pop
dec
inc
roll
cmp
cmp
jg
pusha
test
movsl
call
push
ds
movsl
loope
cs
sub
add
loopne
lods
mov
add
lahf
jmp
data16
fs
xor
pop
aaa
sub
popf
jb
lods
ret
fidivl
and
test
into
imul
xor
test
dec
sbb
fdiv
insb
sbb
or
mov
xlat
rolb
popf
xlat
test
cli
std
xor
mov
mov
xor
sub
lret
clc
sub
sub
cmc
push
mov
loopne
cli
xchg
push
add
cwtl
loopne
js
or
jecxz
add
sub
mov
std
mov
sbbl
lods
adc
xchg
test
mov
sbb
or
sub
rcr
xchg
sbb
bound
xor
loopne
and
iret
test
fwait
movsb
movsb
mov
clc
lret
xchg
jns
shl
loop
and
xor
fmuls
sahf
sbb
cmp
cli
xchg
mov
adc
hlt
fsubrl
push
lods
inc
mov
movsl
and
adc
mov
mov
push
xchg
cli
mov
sub
aas
cltd
dec
mov
xchg
daa
cs
or
bound
and
jmp
mov
xchg
test
out
rcrb
sub
sub
pop
jp
jmp
pop
nop
mov
push
jle
mov
fcmovbe
inc
sub
sub
dec
stos
mov
adc
push
or
outsb
cmp
mov
cmp
rcr
jg
insb
inc
or
bound
mov
mov
add
inc
into
ja
jns
fwait
test
bound
mov
cwtl
lea
ljmp
arpl
ja
mov
push
mov
out
xchg
jge
mov
fimuls
shll
push
and
xchg
hlt
push
xor
sub
xchg
inc
inc
pop
push
inc
mov
sbb
lret
xchg
adc
and
jecxz
sub
outsl
les
fstps
dec
test
mov
loop
leave
mov
cmp
mov
pop
std
mov
pop
cs
sub
and
in
or
scas
mov
aam
test
mov
lret
mov
enter
pusha
mov
idivb
movswl
lock
adc
leave
jg
mov
loop
aaa
or
out
sub
push
pop
iret
out
lds
lock
popf
jno
iret
inc
pop
sarl
lret
xor
iret
lcall
cmp
pop
rorl
push
and
packuswb
std
lods
ffree
ret
sub
xchg
xor
mov
hlt
sbb
sbb
aaa
mov
and
daa
mov
pushf
imul
dec
fldt
flds
aaa
fs
mov
or
cmp
aad
sti
mov
loopne
aam
mov
pusha
push
outsl
or
mov
repnz
mov
rorb
mov
cwtl
fcoml
cwtl
dec
xor
fnsave
enter
idivl
cmp
lds
inc
mov
pop
notb
adc
add
pop
into
cltd
cld
push
mov
fpatan
movsb
nop
jle
in
data16
jl
pop
movsl
xchg
sub
mov
faddl
int3
xlat
and
fstp
clc
repz
pop
call
mov
ret
ret
repz
xor
clc
jnp
lock
lock
sub
ret
mov
popf
ljmp
movsl
mov
xor
pop
jns
and
sub
leave
das
mov
xor
adc
add
cmp
jbe
mov
and
test
fcmovnbe
add
mov
adc
lcall
popl
mov
shlb
xchg
pop
pushfw
lods
xor
push
and
lahf
push
mov
xor
dec
jecxz
mov
mov
int
leave
aas
pop
xchg
in
and
or
mov
fdivrl
fwait
int
popf
sbb
dec
xchg
test
pushf
sbb
mov
aaa
sbb
das
inc
mov
sub
aad
add
mov
aas
mov
jo
sbb
adc
mov
stos
jbe
std
shr
jp
push
rcll
fimull
int3
or
cmp
mov
std
test
fcmovbe
mov
pop
into
inc
jle
fwait
enter
outsl
scas
icebp
jge
jle
mov
add
call
pop
add
xchg
cli
pop
adc
scas
push
fistpl
add
sti
inc
mov
sahf
mov
mov
cmpsl
push
daa
pop
lret
out
mov
or
jp
sub
cmp
stos
fdiv
clc
inc
sub
out
sub
mov
insl
push
out
xor
jbe
push
dec
xchg
xchg
xchg
pop
jl
xchg
jae
mov
fistps
mov
lock
cmp
sub
popf
icebp
outsb
arpl
gs
shll
jae
daa
test
out
jp
ffreep
scas
out
add
add
hlt
pop
lahf
or
mov
pop
in
fisttps
shrl
mov
adc
popf
and
or
or
inc
mov
ss
push
xchg
mov
mov
jne
push
pop
dec
inc
cmp
int
sbb
dec
xor
call
stc
mov
dec
xor
ret
daa
inc
lods
addb
mov
out
enter
mov
imull
bound
jmp
lds
fiadds
sbb
jle
inc
pop
sub
roll
test
pop
push
jmp
pop
cmp
pop
xchg
pop
inc
cltd
ljmp
mov
mov
ljmp
push
popa
mov
pop
inc
pop
add
test
or
or
mov
mov
test
push
dec
ljmp
cmp
testb
adc
inc
xor
enter
cmp
lock
lods
negl
sub
test
mov
loopne
xor
icebp
pop
cs
repnz
bound
push
popf
jp
insb
repz
mov
mov
xchg
scas
js
mov
add
push
das
dec
sti
adc
int
sbb
mov
notl
pusha
sbb
sbbb
mov
jecxz
jp
ret
faddl
pop
inc
fcompl
lock
jbe
add
dec
in
out
out
xor
gs
nop
stos
xor
dec
and
mov
insl
adc
lcall
daa
fnsave
ljmp
movsb
aam
adcb
enter
mov
ret
aad
sub
mov
fmull
or
mov
inc
sub
xor
or
mov
fstpl
inc
lock
pop
cwtl
sti
push
push
add
or
leave
lret
ss
xor
xor
xchg
inc
insl
and
cmpsl
cmpsl
sub
fs
ljmp
xchg
xor
mov
mov
imul
into
mov
mov
pop
add
xchg
out
mov
test
adc
xchg
mov
lret
pop
dec
pop
lds
fs
jbe
push
sub
and
mov
shlb
jb
cmp
popa
imul
xchg
pop
fildl
pop
psubsb
pop
cli
daa
jge
pushf
fildll
out
fistpll
sbb
xchg
mov
xchg
in
pop
jnp
dec
clc
and
in
out
ds
push
pop
outsl
xchg
pushl
mov
and
loop
or
and
movsb
cli
enter
aam
sahf
cli
imul
ret
inc
cmp
push
test
cmp
imul
pop
lret
test
jae
pop
sbb
pop
and
jns
out
insb
sub
xchg
int3
add
pop
out
or
xor
mov
jno
mov
ret
fucomi
mov
cwtl
push
aam
into
js
test
pushf
xchg
cld
aas
jl
adc
ds
lret
dec
out
faddl
adc
popf
cmpsb
xlat
pop
jmp
bound
out
fadd
adc
mov
and
fldt
mov
jecxz
push
mov
dec
sub
sbb
add
leave
faddp
inc
push
mov
cmpsl
inc
lret
inc
outsl
mov
cld
out
mov
cmp
js
rorl
das
xchg
xchg
repnz
pop
pop
jo
je
ja
int3
pop
lods
xor
in
push
add
jno
addr16
push
cwtl
mov
push
and
ds
and
push
mov
or
sbb
push
nop
inc
mov
pop
mov
xchg
adc
sub
mov
pop
roll
jns
xor
jo
pop
push
push
add
and
inc
std
outsl
push
cmp
mov
xchg
mov
cs
sbb
pop
lds
shr
push
adc
lods
addb
in
xor
in
mov
jge
add
xchg
data16
xlat
xor
lret
jmp
jo
xor
mov
push
pop
mov
mov
add
lods
and
jo
stos
call
es
outsl
mov
xor
add
bound
ret
sbb
sbb
cld
mov
mov
shll
repz
jns
xchg
pop
popa
add
and
in
adcl
insb
cmp
add
fs
xor
into
mov
dec
testl
and
xor
xchg
jns
mov
dec
add
sub
or
stos
out
mov
mov
dec
cltd
sub
pop
fnstsw
js
push
data16
mov
insb
lcall
jae
imull
fisttpl
pop
nop
jl
addb
std
mov
lods
push
in
out
out
imul
fsub
push
test
jmp
dec
scas
push
loopne
inc
loopne
jge
add
call
loopne
and
mov
int3
push
xor
scas
cli
imul
cmp
pop
push
pop
inc
push
add
shrb
imul
rolb
hlt
mov
or
push
push
imull
push
push
out
out
mov
movsb
push
pop
fisubs
dec
ds
cmpsb
je
adc
ja
les
adc
mov
mov
rcll
sub
pop
or
call
addr16
popa
ror
popf
in
gs
mov
mov
pop
cs
push
test
int
addr16
jle
call
or
inc
popa
inc
add
fwait
jp
test
outsb
lahf
jmp
mov
sub
aam
cwtl
into
push
xor
mov
push
push
xchg
adc
insl
jns
mov
shrl
inc
pop
lds
sbb
sar
jp
push
adc
pop
dec
insb
shl
jne
dec
das
sub
or
out
or
adc
sub
test
movsb
ss
and
and
xchg
push
fimull
xchg
or
frstor
ljmp
dec
fldenv
dec
rorl
sti
addr16
das
stos
sti
pop
dec
inc
orl
and
movsb
imul
sub
jmp
mov
out
daa
pusha
cmc
movl
mov
js
fildll
push
push
push
jle
and
jne
and
out
lods
rclb
ljmp
incl
jo
add
and
lock
stc
mov
sub
adc
push
lds
js
sub
sbb
shrb
addl
fists
jbe
sub
push
cli
cmp
test
mov
aad
fadd
jl
iret
inc
pushf
rcll
cmp
pop
jl
mov
push
je
fnstsw
or
mov
xor
jnp
add
jp
sbb
fcomip
and
mov
mov
les
mov
gs
adcb
push
fistl
fdivrl
inc
push
jge
stc
xchg
loop
jno
add
mov
jmp
cmpsl
sbb
dec
or
sbb
aad
mov
rcr
test
cmpsb
out
push
ret
mov
mov
xchg
mov
dec
push
shll
push
mov
and
in
inc
and
mov
mov
icebp
jg
cmp
es
outsb
or
in
jmp
mov
jne
sbb
jb
mov
push
cmc
sbb
jecxz
push
js
jg
or
xor
xor
int
enter
mov
mov
jns
rdmsr
popf
aad
and
push
xchg
cmc
stos
dec
cmp
xor
push
addb
cwtl
and
pushf
and
pop
mov
mov
or
xchg
ret
add
aam
iret
ja
push
je
dec
sub
in
popf
lods
mov
jle
popf
dec
loopne
xchg
pop
fnstenv
push
fstpt
dec
xorb
nop
sub
and
mov
mov
out
xor
jecxz
in
xchg
cmpl
or
cmp
pop
mov
jne
aam
xor
xor
jbe
je
sbb
fwait
enter
lods
sub
in
loop
xchg
imul
cwtl
inc
inc
xor
pushf
dec
xchg
xor
mov
ja
sbb
aas
pusha
testb
jg
fnsave
pusha
or
aas
mov
mov
jo
aaa
aaa
fbstp
inc
cmp
loope
ja
shr
dec
mov
les
out
adc
sbb
xchg
filds
fdiv
leave
les
data16
inc
test
scas
jmp
dec
mov
icebp
push
mov
repz
test
outsl
dec
or
push
lret
shrl
ljmp
hlt
enter
jae
sbb
xchg
outsl
mov
call
sti
xchg
pop
ja
je
mov
out
push
inc
lods
or
mov
dec
jae
push
lods
loope
xchg
cmpsl
pop
or
xchg
inc
lods
jbe
xor
jns
mov
inc
rcrb
mov
sbb
imul
ja
ljmp
adc
xchg
mov
cli
pop
cmp
cmc
int
mov
or
rorb
add
inc
shr
pop
push
cmp
inc
leave
sbb
es
cwtl
and
add
cld
cmp
push
movsl
pop
inc
xchg
test
es
or
cmp
cs
or
ret
mov
stos
sub
fucomip
inc
mov
das
xor
push
xor
out
xchg
inc
shll
sub
sti
xchg
or
aad
ffreep
pop
jbe
outsb
mov
fsub
sbb
into
movhps
repz
inc
xlat
adc
dec
dec
int
dec
shr
icebp
leave
jnp
sti
fmuls
push
ret
int
dec
cmp
or
mov
adc
cld
xchg
inc
mov
rcrl
in
lea
cmc
jno
inc
roll
loop
imul
es
jl
imul
jnp
adc
lahf
lock
pushf
xor
data16
iret
and
ret
nop
fld
cmpsl
sti
loop
rcr
inc
sub
shlb
aaa
das
jne
pop
inc
fldl
adc
adc
jle
mov
lahf
xlat
mov
xor
movsb
dec
and
dec
idivl
or
jbe
popa
cld
sbb
push
pop
mov
or
pop
sub
jge
push
fimull
loop
data16
test
cmpb
icebp
dec
inc
mov
aas
ret
pop
clc
fwait
rcll
test
loope
add
fs
sub
fldenv
add
into
xor
lea
add
add
fldenv
jecxz
mov
ret
dec
lods
and
xor
out
or
or
loop
mov
cs
xor
pushf
aad
jmp
sbb
xor
add
imul
inc
shlb
mov
cmpsb
mov
mov
add
xchg
push
mov
pop
pushf
gs
dec
sbb
es
mov
sbb
dec
stos
dec
jg
sbb
mov
dec
in
push
cmp
icebp
push
test
lods
inc
jmp
and
cmp
mov
dec
adc
lcall
cmp
mov
cltd
dec
jp
data16
mov
push
xor
pop
jnp
add
or
pop
cmp
scas
pop
out
int
arpl
jno
cli
outsb
mov
jl
out
das
push
mov
repz
cltd
mov
aam
std
or
in
and
add
xchg
ret
xchg
repz
loopne
jecxz
decb
sahf
mov
xchg
xchg
cmp
insb
pop
mov
sbb
ror
inc
cmp
pop
cwtl
test
fisubs
das
push
pop
int
pop
ret
pop
fwait
cmp
dec
jo
fmull
imul
push
or
ljmp
pop
jg,pn
xor
xchg
mov
push
es
jp
lods
or
add
cs
cmp
jae
insl
lds
cmp
adc
mov
out
icebp
push
stc
cli
enter
cmp
push
mov
sbb
pop
mov
in
andb
std
xchg
push
inc
daa
pusha
xor
mov
test
jecxz
addr16
inc
cmp
cwtl
jp
sbb
sti
adc
jnp
jg
or
ud0
ror
aaa
pop
inc
jmp
stos
test
leave
in
jno
in
out
call
cli
clc
aaa
mov
push
aaa
push
push
ds
push
lcall
stc
fmull
xor
mov
mov
inc
enter
inc
push
jge
std
push
inc
pop
notl
pop
dec
jno
dec
insl
mov
mov
jae
test
imul
loopne
add
ss
mov
lahf
pop
and
cmp
in
cmp
cmp
fistps
fnsave
lock
mov
sbbl
cmp
sar
add
jg
lods
adc
mov
or
fnstsw
rcrb
xchg
das
mov
daa
adc
and
push
lock
and
jp
fwait
jmp
outsl
push
enter
fstps
loope
jmp
jmp
xchg
inc
mov
push
fisubrl
rcll
js
in
inc
std
test
popa
mov
inc
jb
mov
xchg
mov
test
dec
sub
fldcw
push
dec
mov
adc
mov
ljmp
mov
xchg
dec
mov
sbb
push
or
cwtl
lods
in
mov
stos
stc
divb
cmp
and
mov
sub
mov
test
jbe
imul
xor
jle
or
cmc
out
mov
lds
cld
lahf
dec
jp
push
in
iret
mov
fs
xlat
pop
xchg
or
aam
jnp
jecxz
loop
iret
insb
mov
dec
rorb
sarl
cli
stc
mov
push
sub
mov
jl
mov
into
mov
shr
out
sbb
aas
adc
xor
cli
out
popa
jl
mov
lds
dec
pop
and
sub
or
or
adcl
cmp
lods
xchg
xchg
add
or
inc
jnp
outsl
and
fsub
repz
xchg
lods
mov
jne
or
sub
push
push
xor
or
add
orl
mov
dec
jbe
xor
movsl
or
dec
pop
roll
shll
pop
test
inc
pop
pop
inc
in
inc
jbe
fcoml
cmp
pop
fldenv
repz
xchg
stc
inc
sbb
ljmp
adc
mov
gs
dec
fcom
and
mov
comiss
jno
addr16
pop
mov
in
xor
push
sub
dec
nop
jge
lret
in
aas
je
inc
mov
xchg
add
cmp
aam
cmc
iret
jno
jo
ljmp
mov
mov
shrb
inc
mov
stos
mov
mov
leave
daa
add
mov
mov
outsl
js
hlt
push
pushf
into
sub
push
stos
pop
leave
dec
js
or
cmc
lret
daa
dec
cld
ljmp
xchg
ss
inc
cwtl
mov
xchg
cmp
sub
lock
and
cltd
xchg
fs
mov
push
push
jb
and
push
aam
mov
ds
push
push
iret
loope
popf
test
inc
add
in
jmp
nop
ljmp
and
int
mov
ljmp
inc
inc
xchg
cmpsl
lcall
js
mov
cmp
int
push
sub
orl
aam
popf
mov
and
decb
mov
adc
fidivrs
inc
fisubrs
pop
repz
cmp
xlat
ljmp
add
ret
cwtl
repz
enter
mov
std
mov
popf
fadd
cli
dec
cmpb
mov
aas
jp
ficoml
inc
maxps
jecxz
mov
push
pop
and
cmp
les
sbb
and
or
cmp
daa
sahf
hlt
fiadds
ficoms
cli
aaa
sbb
iret
adc
or
jbe
sub
mov
aaa
sub
scas
dec
aam
pop
mov
scas
nop
pop
les
jo
xor
sbb
pop
add
fisttpll
jge
and
orl
test
loope
inc
mov
mov
pop
xor
mov
sub
dec
inc
xlat
mov
cmp
in
lock
adc
hlt
jo
shlb
jo
push
cli
xchg
jmp
push
add
adc
mov
pop
cmpb
and
xor
pop
clc
in
pop
mov
pop
bound
adc
in
sbb
in
test
pop
xchg
shrb
shl
adc
ret
in
pop
ret
cmp
inc
cmp
push
cmpsl
les
pop
mov
cs
fs
out
mov
fs
lahf
loop
in
dec
jl
inc
inc
mov
sub
jns
es
mov
add
dec
out
in
insb
jp
or
ret
pushf
cld
data16
hlt
pop
and
test
adc
pop
mov
dec
cmpsl
pop
jge
jecxz
fisubl
shrl
fstpt
dec
cmp
lcall
shl
std
outsl
pop
sub
and
cmpsb
xor
pop
xor
jno
cmp
in
push
cmpsl
hlt
and
leave
sbb
or
scas
jg
es
xor
adc
popf
add
popa
xor
jae
jnp
fs
rcll
cmpsb
test
or
mov
outsl
out
jge
lret
and
jb
not
and
roll
hlt
jecxz
mov
es
mov
lret
add
mov
inc
sub
fisubl
pop
xorb
mov
or
xor
add
imul
mov
xchg
sub
push
aas
data16
pusha
fdivrs
dec
add
sub
call
cltd
dec
cmpsl
test
mov
sbb
mov
scas
fistps
lds
cmp
xchg
xor
jge
hlt
nop
pushf
inc
inc
xor
cmp
pop
mov
or
test
loopne
cs
fnstenv
leave
inc
arpl
loop
mov
adc
test
aaa
test
dec
pop
add
mov
push
dec
pop
test
xchg
sub
test
xchg
imul
popa
sbb
push
ret
sarb
sub
sahf
and
mov
and
pop
and
loop
or
lret
push
lods
and
arpl
inc
push
in
hlt
movsb
add
repz
test
cmpl
mov
insb
fsubl
pop
pop
sub
pop
movb
test
ds
stos
mov
imul
mov
sbb
jbe
xlat
sub
movsb
cwtl
or
mov
fisttpl
mov
add
and
sbb
lret
add
and
pop
testl
out
es
mov
cmp
fldcw
gs
insl
mov
push
mov
shrl
lods
cmpsb
das
mov
dec
ret
dec
cmp
adc
roll
dec
fistpll
xchg
mov
jmp
xor
adc
pushf
mov
or
cmpl
mov
or
sbbb
pop
dec
stos
hlt
xor
nop
inc
sub
int
out
mov
sti
mov
lcall
loope
ljmp
fcomps
fdivs
popa
push
mov
sub
add
sarb
imul
mov
pop
fs
jnp
iret
ds
cmc
or
xor
sub
xchg
out
cmp
dec
adc
rcpps
xchg
stos
xchg
xchg
rcl
or
aad
inc
push
mov
add
jecxz
adc
and
sbb
jle
je
lods
clc
mov
arpl
aas
push
popa
mov
cld
shll
mov
mov
divl
xchg
jae
out
ss
sahf
jne
add
cmc
adcl
jl
mov
push
sbb
outsl
cs
mov
repz
mov
imul
dec
inc
xor
nop
inc
dec
mov
mov
sbb
pop
popa
xor
aaa
ds
mov
aam
sbb
xchg
push
inc
jo
or
jge
cmpsb
dec
ret
adc
sub
inc
jns
and
out
mov
insb
or
xchg
ds
mov
xchg
inc
mov
hlt
mov
push
push
or
pop
inc
xchg
gs
cmp
push
js
icebp
mov
mov
mov
jne
sti
cmp
jns
mov
scas
or
mov
add
orl
mov
cmpsb
jp
jmp
test
jl
mov
mov
fimull
lahf
cmp
lret
mov
out
cwtl
inc
sub
and
adc
lcall
lahf
popa
addr16
mov
mov
arpl
mov
movsb
mov
dec
cmpsb
push
je
int
inc
pop
jb
es
inc
cmpsb
inc
mov
aas
sbb
movsb
sbb
std
or
inc
cli
lcall
jge
in
mov
sti
add
adc
imul
cmp
in
lock
push
push
mov
fwait
sti
inc
add
mov
test
lods
imul
sub
jb
test
push
inc
mov
andb
pop
xchg
movsbl
pop
mov
or
clc
mov
jp
adc
loopne
pushf
insb
insl
adc
insl
cltd
pop
xchg
cmp
mov
pop
stos
jo
sti
cmp
jbe
push
rcr
pop
jmp
jno
out
inc
repnz
int3
dec
cltd
aad
or
rorb
dec
mov
data16
mov
cs
cld
xchg
test
push
loopne
pop
pop
aad
xorb
pop
lods
adc
aaa
popf
enter
bound
in
mov
xchg
rcr
jno
sub
xchg
mov
and
and
call
mov
mov
mov
pop
shll
xchg
or
cmpsl
ret
mov
aad
js
xor
popf
adc
aad
fmull
es
scas
popl
scas
cmpsl
mov
out
imul
lret
sti
jb
sbb
shll
mov
jl
out
dec
jne
dec
in
stos
adc
cmp
mov
push
xor
sbb
scas
dec
mov
ljmp
das
out
inc
dec
lahf
mov
xchg
adc
ja
call
je
in
mov
rcrl
icebp
sub
sub
jg
lods
lods
jns
sbb
ret
repz
xchg
lret
sub
jns
sti
movsb
mov
pop
adc
nop
mull
xor
les
inc
jae
mov
push
ret
add
push
push
fxtract
xchg
sub
xor
cltd
mov
cmp
lods
xchg
fcomip
add
mov
sub
sbb
lock
or
lahf
aaa
xchg
adc
ja
call
fucom
mov
jne
pushf
mov
cld
push
sbb
fildll
ljmp
cmp
cmp
or
mov
shl
call
dec
js
lcall
mov
fwait
cli
add
fimuls
mov
push
insb
mov
mov
popa
stos
pusha
push
clc
arpl
insl
shlb
jnp
negl
jae
int3
mov
push
xchg
ja
test
jle
ljmp
and
orl
in
fimuls
outsb
pop
jo
pop
mov
in
mov
inc
shlb
fincstp
testb
out
scas
rcl
jae
jg
jns,pt
xchg
out
xor
jmp
adc
into
pop
mov
pop
mov
push
shr
sbbb
pop
insb
int
xchg
cmpsb
cli
pop
stc
lret
repnz
xor
out
jnp
cmpsl
cmp
and
dec
fdivl
lods
cs
or
jne
jne
mov
adc
test
loop
mov
or
mov
mov
in
ja
popa
test
push
pop
xor
mov
cmpsb
sti
lods
imul
xor
xchg
mov
les
jne
push
cli
sbb
cltd
data16
scas
mov
sbbl
mov
test
sbb
xlat
lret
lock
mov
mov
popf
xor
mov
imul
inc
call
mov
mov
enter
mov
rclb
into
pushf
inc
mov
jns
lret
fists
dec
enter
lcall
dec
aam
sub
mov
sti
shrb
inc
pop
mov
stc
in
push
cwtl
xchg
jl
sahf
cmpxchg
call
sub
cli
push
pop
push
mov
jae
xlat
adc
sub
and
xchg
movb
xchg
push
jecxz
or
push
push
xor
xchg
pop
test
out
in
lods
xchg
and
jnp
mov
mov
pop
in
daa
iret
data16
lds
jl
or
jl
or
push
jb
adc
pop
cmp
je
popf
sub
mov
stos
push
out
jmp
lea
lret
call
inc
push
push
mov
and
xor
mov
aam
fisttps
rcrl
scas
shll
and
pop
imul
xchg
mov
addb
xor
or
xchg
dec
nop
add
ret
inc
or
fstl
xchg
sub
lods
lods
sub
and
lock
imul
push
sbb
in
out
les
mov
adc
push
mov
mov
jge
insb
lea
lock
sti
xlat
adc
fs
mov
je
push
cmp
ljmp
xorb
push
gs
in
xchg
loopne
or
aad
inc
xchg
dec
imul
scas
inc
sahf
aam
mov
lahf
inc
inc
xor
loopne
pop
movsb
in
int3
fmul
arpl
fstps
aas
mov
add
xlat
mov
in
loope
xchg
mov
adc
inc
subl
mov
inc
ja
xchg
jbe
inc
xorb
adc
lret
cmpsb
push
jno
daa
in
scas
iret
mov
fldenv
andl
jne
or
lea
out
xchg
pop
sbb
shll
fbld
dec
jle
lods
adc
and
fistps
out
inc
into
addr16
xchg
inc
stos
aas
mov
mov
sub
std
push
andl
sbb
add
fcomps
sbb
in
and
dec
pop
fdivrl
add
loope
xchg
mov
insb
xlat
mov
fsubrp
dec
adc
fstpl
push
fistl
and
fdiv
mov
sub
arpl
inc
mov
push
push
nop
jno
mov
popf
fisubs
dec
add
lret
mov
xor
push
jno
xorb
scas
pop
pushf
gs
repz
adc
testl
fildll
dec
adc
jae
adc
mov
bound
cmp
xor
adc
in
xchg
xchg
mov
adc
sbb
fcompl
xchg
push
adc
pop
into
push
xchg
xchg
cmp
jbe
test
fdivl
loope
jnp
filds
mov
stos
xor
pop
movsl
mov
pop
and
inc
mov
push
into
dec
xchg
jmp
pop
jne
pop
popf
std
or
xor
push
std
mov
divps
push
roll
jb
mov
das
popa
rorl
andb
jae
int3
call
and
lcall
in
lea
fiadds
jnp
and
shll
fisttpll
fisttpl
js
push
sbb
adc
rcr
adc
jae
mov
jg
stc
cmp
stc
ucomiss
fcompl
fnstcw
fldz
in
xor
xor
dec
xor
add
shll
js
mov
loopne
sub
aaa
and
out
pop
stos
icebp
enter
mov
xorb
dec
lods
sub
push
outsb
stos
in
push
pop
aaa
push
mov
int
pop
pop
mov
test
or
mov
adc
push
jp
rcll
adc
add
adc
bound
push
xchg
repz
inc
je
adc
andl
clc
lea
and
stos
sub
adc
popf
in
mov
mov
repnz
ffreep
cli
test
js
dec
push
jge
mov
je
jne
fidivrs
jne
test
mov
adc
jo
mov
mov
lcall
loopne
jl
es
push
or
xchg
in
or
xchg
xor
insb
ljmp
test
rcll
jae
inc
sbb
stos
inc
adc
in
or
mov
nop
cltd
jmp
ljmp
sub
sub
adc
cld
sbb
aad
mov
cltd
fists
push
adc
dec
rcr
shll
into
sahf
imul
test
std
inc
add
xchg
enter
aad
jne
jae
fs
int3
stos
mov
mov
orl
jnp
fistl
jg
sub
ficoml
inc
fidivrs
popa
adc
push
dec
movsl
cltd
cmpsl
or
lret
cmp
mov
or
jg
movups
pop
lods
test
sub
cmpsl
adc
sahf
ret
pop
fwait
rolb
jmp
fwait
gs
fwait
addr16
pusha
pop
fs
test
jne
xchg
push
jmp
mov
stos
andb
push
mov
dec
push
push
push
xchg
xor
minps
imul
lods
pop
scas
test
pop
rcr
outsl
cld
leave
adc
or
mov
enter
sub
in
aas
push
push
cmp
lret
push
pop
xchg
push
in
xor
out
loope
dec
push
pop
lea
js
cwtl
aam
int
xchg
addr16
jb
or
inc
sbb
out
add
loope
mov
inc
lock
ficompl
aad
pushf
mov
orl
and
jne
pop
loope
test
or
add
inc
ret
add
cmpsb
xchg
push
ficompl
popf
scas
mov
ljmp
adc
sarl
xchg
es
es
stos
adc
mov
jl
add
add
cmpsl
dec
and
inc
frstor
and
dec
or
mov
inc
jg
inc
xor
xor
repz
out
pop
lods
fs
popl
jle
fstpl
mov
sbbb
xor
or
and
jb
lret
aaa
addr16
lea
imul
dec
push
dec
jg
or
movsb
scas
addr16
test
dec
add
cmp
arpl
hlt
shll
int
imul
jl
pusha
jo
push
dec
cmp
pop
fs
mov
jns
push
mov
testb
cmpxchg
in
mov
mov
xor
xor
das
mov
insb
or
cs
shlb
cmpsb
dec
test
sahf
pop
cmpsb
jp
pop
lods
loop
data16
push
and
sub
or
and
aam
jae
mov
add
je
test
lret
lret
mov
daa
imul
pop
js
repnz
cmp
jg
int3
add
hlt
push
lahf
xchg
movsl
push
cmp
movl
push
mov
scas
stos
mov
dec
aas
popf
push
in
repz
mov
dec
lods
adc
fisttpll
nop
dec
or
jnp
scas
repz
dec
ljmp
aas
insl
add
adc
push
imull
jl
mov
push
or
jo
testl
ret
sbb
int3
gs
jno
pop
sbb
fsubs
jo
mov
js
mov
fisubl
lret
cmp
jae
loop
inc
rcr
xor
inc
sub
jecxz
add
les
aaa
std
add
incb
pop
js
lret
scas
loop
push
lock
push
ja
jl
loopne
popf
rorl
imul
and
add
test
fsubl
push
es
jbe
or
dec
sub
push
pop
aaa
bound
test
test
sbb
addb
rclb
sub
mov
addl
out
xchg
cmpsl
and
dec
xchg
aam
or
xor
lret
arpl
out
mov
sub
mov
mov
icebp
push
shr
pop
leave
lret
dec
pusha
loopne
das
divb
pop
test
arpl
xor
addr16
mov
xchg
jl
ja
pop
insb
out
insl
stos
cmp
xchg
cs
aad
sbb
repz
mov
in
and
dec
cmp
xor
jnp
into
sti
cld
push
pushl
dec
out
rcrb
push
fwait
jb
loop
push
repz
xor
xlat
or
add
jae
mov
or
add
and
jmp
into
repz
or
out
push
push
push
push
xchg
es
mov
and
ds
imul
icebp
mov
stc
xlat
push
dec
and
enter
pop
mov
rcrl
aas
js
fidivs
jne
and
xchg
imul
rorl
ret
outsb
sub
test
icebp
mov
xchg
je
lahf
icebp
dec
xor
add
pop
push
push
sbb
cmp
xchg
outsb
lock
stos
jnp
cmp
mov
leave
xchg
or
xchg
xor
or
and
imul
stos
or
push
or
jecxz
jae
icebp
enter
neg
push
aam
xchg
fs
add
mov
push
stc
mulb
jmp
lret
rorb
xor
dec
cli
ucomiss
push
loopne
fnstcw
lods
add
sbb
test
lods
jno
out
nop
pop
xchg
jb
das
push
and
rolb
lea
mov
iret
xchg
out
movsl
nop
shrl
push
xor
jecxz
xchg
push
mov
fisttpll
aaa
dec
inc
lret
stos
jg
and
xchg
jecxz
cltd
xchg
pop
push
rcll
orb
jo
adc
xor
ljmp
jb
out
ret
jp
stc
in
mov
outsl
dec
gs
out
xor
aaa
xlat
imul
mov
sub
fisubrs
pop
add
movsb
jl
jecxz
jne
sar
dec
cmp
mov
push
dec
imul
inc
add
dec
sbb
loopne
adc
mov
call
sub
cmp
sbb
cltd
mov
pop
xorl
pop
cli
pop
cwtl
int3
ja
cli
shll
cmp
mov
mov
into
loop
lods
test
or
es
mov
test
lock
xor
cmp
cmp
out
or
in
cmpsb
enter
imul
aad
into
arpl
mov
inc
push
ds
loope
dec
xor
mov
mov
fisubrs
or
adc
adc
lods
ljmp
or
mov
xor
fiaddl
lret
xchg
push
mov
and
setne
sti
test
lods
pop
mov
sbb
cld
xchg
sbb
insb
shrl
loopne
dec
repz
jne
jl
fstpl
adc
addr16
mov
stc
push
mov
outsl
cmc
inc
dec
mov
xchg
popa
push
inc
int3
lret
in
xor
jb
fsubrl
sbb
xor
outsl
cli
pushf
sbb
inc
sub
repnz
jnp
push
push
and
sahf
scas
xchg
imul
je
imul
xchg
shll
xchg
ret
sbb
push
scas
push
aad
mov
xchg
sbb
pushf
popa
mov
lock
aaa
cmp
mov
inc
repnz
lods
insl
cld
into
out
or
mov
lods
push
push
in
cmp
push
enter
push
push
fs
xor
cli
fcoml
xor
or
push
mov
aaa
jmp
daa
scas
xchg
xchg
addl
divb
mov
js
and
imul
jmp
sbb
dec
test
out
jle
jmp
and
xor
and
into
mov
dec
lods
mov
xchg
mov
pop
xor
cli
mov
dec
aam
cs
fnstsw
push
jecxz
or
push
cld
popf
test
adc
mov
push
xchg
out
cli
cmpsl
and
sub
in
loopne
cmp
xchg
ffree
add
shrb
into
mov
aas
xchg
xchg
push
lock
add
rorl
xchg
out
out
rcrb
xor
scas
hlt
adc
mov
daa
cmpb
in
fidivrl
fmulp
xchg
xchg
xchg
lock
js
lea
add
fidivrs
mov
push
fsubs
mov
out
call
inc
dec
sub
cmp
dec
fsts
cmp
lcall
xor
mov
pop
cmp
xchg
or
and
pushf
dec
jo
jnp
and
adc
in
pop
add
dec
ds
add
xchg
out
clc
sbb
sbb
jb
ja
xor
push
test
add
repnz
xchg
loope
sub
lds
mov
out
lea
adc
sarl
int3
lods
loop
fwait
and
test
inc
lods
loop
rcr
push
hlt
jl
push
outsl
movsl
cmpsb
subl
cmp
cwtl
std
mov
and
adc
fcmovnbe
xor
xchg
ja
sbb
and
add
inc
mov
loopne
dec
mov
or
xor
push
xlat
add
mov
xchg
js
bound
repz
hlt
mov
xor
sbb
test
xchg
jne
iret
cmp
pop
fisubs
pop
lahf
push
cld
pop
xchg
and
mov
aaa
sbb
cmpsb
xchg
push
jge
push
mov
aas
inc
pushf
insl
dec
cmpl
mov
sub
dec
pop
mov
push
mov
mov
cmp
repz
lods
pop
js
dec
add
jmp
inc
in
aaa
and
mov
add
and
pop
and
xor
mov
jno
iret
sub
mov
repz
shrl
outsb
sub
sub
push
ljmp
and
in
lds
std
bound
jnp
push
jb
dec
adc
mov
lods
jbe
inc
xchg
jge
dec
sub
jle
sbb
push
std
inc
and
mov
mov
or
icebp
repz
add
std
ret
clc
ret
fbld
cmpsb
lods
leave
sbb
flds
sub
pop
imul
test
jnp
test
leave
ret
lea
les
xlat
mov
leave
cmp
stos
out
mov
dec
mov
cmpsb
leave
add
out
jmp
out
enter
shrl
push
or
movsl
xchg
cmp
daa
fisubs
xchg
xor
pusha
mov
pop
ljmp
das
jbe
pop
push
lock
pop
cs
push
jge
scas
out
icebp
pop
push
into
inc
cltd
push
testb
stos
aad
in
mov
flds
jae
mov
cmpsb
ss
cmp
dec
lret
nop
xor
mov
mov
and
mov
es
adc
rcll
mov
inc
stos
ja
mov
mov
ds
cmc
dec
pop
xrelease
xor
fdivl
inc
ljmp
push
xchg
sbb
inc
rcrl
outsl
lods
mov
inc
xor
cli
repnz
or
push
icebp
cmp
nop
cmp
mov
sub
mov
jns
xchg
adc
inc
mov
sub
pop
add
and
clc
lret
and
int
pushf
into
rcrl
xor
xchg
xchg
iret
xor
test
add
xchg
add
jg
inc
popa
jo
sarb
repnz
in
inc
cmp
icebp
test
int
ljmp
out
mov
mov
cmc
insl
cmpl
jno
mov
repnz
cmp
mov
ljmp
mov
in
clc
pop
mov
subb
int3
loopne
or
jno
cmp
pop
or
fcoms
mov
std
dec
lock
call
or
and
daa
ret
and
jno
call
and
cmp
cmp
xor
jb
ss
sbb
pop
add
test
cmp
jo
jle
xchg
mov
je
push
xchg
aam
lods
and
cmpsb
outsl
or
push
call
popa
lret
mov
es
in
es
in
inc
fnstsw
push
out
mov
and
dec
mov
jo
jge
adc
stos
or
adc
call
fiadds
sub
in
lods
adc
push
xchg
pop
hlt
jmp
and
or
fsubrs
and
repnz
and
inc
push
and
test
jg
jp
mov
ret
add
sub
dec
add
cmp
sub
ljmp
ljmp
pop
jl
mov
mov
or
jbe
mov
mov
mov
or
mov
cs
and
sahf
cmp
push
push
sahf
cwtl
mov
cmp
mov
pop
adc
mov
jp
push
js
jmp
jnp
add
and
cmp
addr16
cmpsl
ljmp
pusha
in
gs
cwtl
push
pop
sub
pop
sbb
pop
loopne
pop
push
bound
pop
lret
dec
push
test
inc
or
stos
sub
imul
sub
addr16
pop
orl
out
movsl
dec
push
mov
push
adc
icebp
lea
lcall
cli
sub
add
xchg
pop
popf
cmpsb
cmpsl
mov
adc
repnz
and
hlt
mov
mov
mov
pop
cmp
or
loope
insl
cltd
cmp
jns
scas
mov
add
addb
mov
lret
pop
sub
or
data16
mov
jl
fisttpll
sbb
subb
jmp
xor
int3
scas
add
test
pop
lea
xchg
jb
addr16
fcoml
or
add
movsb
pop
add
xor
mov
movsb
xchg
enter
cli
cmc
adc
js
fistps
xchg
arpl
dec
mov
mov
mov
in
inc
ret
cmpsb
jo
pop
shr
dec
mov
adc
notb
or
mov
shlb
fisubrs
aam
fsubr
test
lret
adc
and
fcmovb
loope
lret
mov
inc
xlat
mov
rclb
and
imul
call
aas
arpl
rcrl
dec
into
lods
mov
je
or
testb
les
sub
xor
fldl
repnz
fwait
mov
dec
int3
mov
xchg
dec
gs
mov
std
xor
mov
cmp
cmp
dec
bound
cmc
and
flds
ret
iret
cmpsb
xchg
fldcw
aam
insb
scas
jno
ss
es
push
int3
lret
rolb
daa
loop
cld
xchg
or
cs
xor
hlt
inc
std
mov
shlb
out
mov
pop
mov
adc
sub
getsec
in
push
xor
cli
and
mov
cld
int3
sbbb
mov
arpl
sub
inc
jns
dec
ficoms
arpl
dec
mov
in
rorb
inc
cmp
fistl
loop
out
mov
pop
push
add
sub
xchg
orb
jp
pop
stc
and
test
sub
add
adc
inc
mov
sti
sbb
xor
andb
je
pop
inc
cmpsl
scas
jp
pop
cli
test
mov
fiadds
push
or
popf
mov
addb
ljmp
push
jg
jg
push
push
test
mov
out
fdivrs
lods
imul
cs
fisubrl
pop
stc
mov
cmp
ret
mov
test
sbb
fdiv
sbb
cmp
cmp
add
fadd
int3
cld
test
loopne
lret
int3
mov
and
push
sub
lahf
mov
dec
in
or
leave
rolb
adc
pop
in
notb
cmp
sbb
ja
dec
clc
fwait
or
pop
adc
js
outsl
shll
pop
ss
adc
sahf
in
mov
ret
leave
aad
xchg
push
test
notl
push
xor
imul
scas
push
mov
pop
cs
and
xchg
inc
stos
fnsave
cmpsb
mov
or
sub
loop
shrl
xchg
push
xlat
dec
push
jbe
jae
scas
cs
sbb
test
xchg
rcrl
popf
test
lods
or
sub
push
or
cmp
lock
pop
roll
out
sbb
jno
dec
adc
lea
xor
jae
xorl
lea
xor
mov
lahf
inc
push
sub
pop
scas
loop
inc
gs
inc
lret
cmc
fsubl
lahf
out
stc
cmpsl
rorl
test
cmp
push
push
outsl
sub
icebp
jl
dec
cmp
imul
push
movl
sbb
out
mov
mov
pop
cmp
mov
sbb
cltd
mov
push
insl
and
pop
lea
out
pop
xchg
dec
setl
mov
jne
stos
mov
fldcw
push
andl
or
pushf
dec
pop
aad
idivb
mov
daa
fists
cmp
sub
jne
aad
mov
repnz
mov
jbe
xchg
fbld
sarl
jmp
out
es
aam
pop
xor
test
xchg
imul
mov
dec
mov
lret
les
xchg
pop
movsl
xlat
mov
subl
adc
mov
movsl
jae
call
in
test
mov
push
fistpll
aad
xor
inc
push
enter
cmpsl
sbb
and
js
pop
test
data16
jno
bnd
and
lock
cmp
dec
cmp
je
js
adc
pop
mov
dec
arpl
jge
loopne
sbb
sahf
sbb
mov
add
loopne
jo
xchg
cmp
jb
adc
fwait
lret
aas
xor
xchg
and
jg
xchg
inc
sub
stos
pop
xchg
lock
ret
xor
xlat
stos
sub
push
fsubrl
icebp
mov
mov
fdiv
xor
lock
dec
inc
and
cmp
push
mov
adc
mov
negb
fwait
jns
mov
inc
pop
test
imul
push
inc
or
je
test
stc
cli
or
mov
pusha
sub
test
or
xchg
hlt
mov
leave
add
rolb
lds
popa
sbb
inc
and
ljmp
je
repnz
data16
push
pop
andl
test
and
mov
adc
loope
fsubl
sahf
sub
mov
xchg
outsl
mov
cmp
js
pusha
int3
mov
push
clc
shlb
xchg
and
aas
mov
cltd
sub
dec
jns
or
insl
sub
idivl
pop
lret
push
and
adc
gs
mov
sarb
ret
shlb
add
mov
and
push
dec
or
mov
hlt
les
ljmp
xchg
sahf
imul
inc
fs
push
mov
clc
gs
pusha
ss
stc
inc
pop
pop
push
sbbl
xor
movsl
fidivl
dec
in
xchg
or
cmc
push
and
jne
xor
dec
mov
fwait
adc
mov
mov
test
into
sub
out
enter
bound
lretw
test
push
into
xor
rcll
push
mov
pop
in
jle
out
or
outsb
push
aaa
cs
fisttpll
inc
dec
das
ss
prefetchnta
ss
add
push
push
pusha
sarl
decb
inc
rclb
mov
xor
push
iret
dec
push
js
and
scas
and
sub
jecxz
or
bnd
test
mov
push
pop
cmp
cmpsl
ljmp
es
inc
ss
adc
push
push
inc
dec
mov
mov
jno
cmc
mov
stc
or
out
cmpsb
jb
adc
pushf
dec
mov
pop
cmpsb
lock
fidivrs
rcrb
cmp
push
sub
das
sub
int3
mov
pushf
sub
mov
fistl
ljmp
inc
and
shl
addr16
div
inc
and
dec
loop
ret
xchg
cwtl
sub
ljmp
int3
add
pop
call
push
push
jmp
push
or
adc
pop
lcall
stos
sub
arpl
mov
jno
pusha
pushl
mov
dec
adc
pop
movsb
pop
imul
js
sub
cli
push
jbe
ret
pop
jbe
inc
mov
fldenv
xor
and
pop
pop
cmc
sub
imul
xlat
les
into
inc
mov
ss
insl
scas
sub
loope
fs
jle
adc
pushl
psubsb
cmp
pop
and
sbbb
pop
out
iret
outsb
testb
and
push
xchg
clc
out
sub
fistps
push
mov
pop
or
mov
lods
jge
nop
ljmp
repz
pop
test
gs
movsb
lret
jae
ret
cmp
lods
xor
popf
inc
cmp
fadd
call
arpl
mov
pop
push
pop
shl
cmpb
inc
rcll
add
mov
pop
hlt
pop
mov
lcall
icebp
ret
loope
test
pop
andb
jmp
xchg
stos
movsl
out
xchg
mov
jle
jp
and
xor
xor
loope
mov
inc
jmp
xchg
mov
sub
push
leave
fs
pop
insb
and
or
aam
cmc
rclb
imul
cmpsl
lods
fimull
push
xchg
xchg
in
faddl
and
sub
cmp
out
push
push
sub
pop
cmp
pop
mov
inc
or
subb
dec
mov
xlat
test
dec
mov
enter
sub
cld
pop
inc
sbb
and
mov
aas
inc
jmp
jae
outsl
mov
or
iret
push
push
and
xchg
rorl
daa
push
mov
sarb
divb
sub
add
or
push
aas
in
jecxz
adc
sbb
fwait
jecxz
cmp
fwait
lcall
sti
pop
dec
or
pop
mov
dec
adc
add
inc
cmp
hlt
aaa
push
mov
or
push
add
outsl
xor
add
mov
sahf
stos
sbb
and
ficoml
adc
mov
jge
add
pop
dec
sub
enter
addl
jg
xchg
jmp
xor
mov
fs
cld
mov
push
add
sbb
push
mov
jmp
mov
cmpsl
es
movsl
outsb
add
sbb
jle
push
les
push
les
cmc
test
inc
stos
mov
pop
loopne
in
adc
mov
mov
jp
pop
iret
push
das
pop
mov
jle
in
push
and
inc
push
dec
rol
cmpsl
repnz
dec
popa
inc
shr
mov
popa
sahf
ss
js
push
jns
leave
test
out
mov
push
sahf
xor
jb
push
fcmovnu
daa
add
in
xlat
cmpsb
leave
or
sbb
adc
xor
stos
and
mov
sbb
dec
sbb
jnp
cmpsl
push
ja
mov
pop
insb
stc
push
fisubrl
incl
and
or
icebp
outsl
pop
cmpxchg
out
aad
fisubl
pop
adc
ljmp
xchg
mov
cmpsl
subb
or
mov
inc
cltd
jb
les
adc
mov
hlt
push
bound
pop
xlat
push
out
fmuls
jo
pop
repnz
xor
cmc
lea
push
orl
pop
lcall
cmpb
mov
dec
lret
push
insb
inc
pop
pop
sbbl
push
push
mov
mov
jl
xor
gs
shr
push
mov
popl
pop
jno
sbb
adc
std
fldcw
or
push
and
pusha
jg
scas
cmp
add
int3
pop
fldcw
and
int3
inc
pushf
out
sbb
std
xor
loopne
pop
lret
repnz
into
rcrl
bound
cmpsl
stos
cmp
xchg
push
push
or
scas
icebp
xchg
js
repz
sub
andl
xor
adc
push
xchg
scas
and
pop
mov
cmc
xchg
stos
shlb
ret
pop
fistl
fstpt
ss
std
sub
sbb
cld
repz
mov
clc
push
cwtl
imul
aam
loope
ds
arpl
dec
mov
xor
xor
mov
mov
aam
xor
fidivrs
xchg
and
inc
and
push
ret
cmp
xchg
mov
cmpsl
cwtl
xorl
mov
lds
mov
push
pop
test
mov
out
jb
jae
pop
mov
add
lods
lret
arpl
mov
sub
shll
repnz
pop
pop
pop
xchg
neg
and
add
dec
dec
mov
lret
adc
dec
inc
push
cmp
ret
rcrb
jo
or
push
scas
sbb
fidivl
lahf
sbb
popa
add
jmp
push
cmp
lea
movsl
sub
shll
stc
ret
pusha
iret
imul
add
addr16
jg
mov
mov
lds
or
add
push
jge
jno
ljmp
jp
push
xor
lahf
adc
int
inc
xor
imul
sbb
mov
iret
cmpb
push
imul
mov
mov
sub
or
sahf
shrl
push
xchg
push
dec
nop
fwait
push
jnp
insb
sub
dec
jp
shrl
mov
dec
dec
in
out
lock
jecxz
jge
rorl
int3
test
pop
xlat
jno
and
fcomi
add
and
ss
mov
inc
xchg
sar
popf
cmp
add
sbb
sbb
imul
andb
test
and
xchg
mov
fs
add
ret
inc
cmc
dec
jno
mov
cs
xchg
outsl
xor
dec
nop
test
pushf
test
push
dec
mov
xchg
inc
jno
mov
jg
cmp
aad
jmp
loopne
cmpsb
inc
cmpb
arpl
mov
mov
ja
fiadds
dec
xchg
mov
adc
cmp
jnp
xchg
push
stos
push
inc
xor
mov
sub
aad
push
or
sahf
lret
shr
cmp
adc
or
loope
cmp
inc
rorl
dec
ficomps
repz
lods
inc
pop
xchg
sahf
add
inc
mov
cmc
or
cmp
shll
jle
jb
push
cmpsb
fadds
mov
lods
dec
and
jecxz
push
sbb
push
test
mov
mov
scas
or
sbb
or
jo
iret
ret
xchg
cmpsb
sbb
pusha
add
popa
jo
fiaddl
popf
out
icebp
sub
clc
mov
push
pusha
imul
stc
insb
ds
push
lock
lret
imul
inc
in
mov
insl
out
push
mov
cmp
jl
sbb
cs
int3
or
mov
cs
scas
hlt
notb
out
les
dec
scas
xor
adc
mov
mov
sub
icebp
adc
jle
aas
or
cmp
nop
dec
push
rcrb
or
iret
jbe
rolb
inc
sub
adc
jp
cwtl
push
subl
dec
sahf
rorl
mov
dec
ss
cmc
jl
sub
das
mov
movsb
add
or
addr16
enter
and
push
add
sti
mov
mov
mov
cmpsl
and
xchg
loopne
hlt
mov
lahf
mov
push
jge
mov
mov
push
addr16
fdivp
push
cmpsl
movsl
jns
adc
mov
imul
mov
xor
loop
pop
mov
pop
leavew
sbb
dec
nop
mov
cs
mov
mov
sub
lcall
push
sub
sub
rcrb
jb
sub
jno
jmp
sub
adc
adc
xor
lahf
lock
adc
sbb
mov
or
js
adc
mov
fwait
xor
adc
roll
push
popf
or
push
add
hlt
jle
and
jmp
add
xchg
cmp
add
mov
lods
sub
inc
dec
jl
mov
lock
jmp
push
cmpsb
sub
sub
sbb
jns
sub
ljmp
mov
mov
and
jp
bound
dec
pushf
lds
adc
es
adc
adc
mov
lea
mov
xlat
add
xchg
and
test
popa
lods
insb
add
xor
lcall
sub
bound
adc
dec
les
push
out
rcll
sbb
jo
mov
subl
test
sbb
fistpll
xchg
test
test
mov
xchg
pusha
dec
add
inc
xor
and
add
pusha
sub
into
cmp
xchg
sbb
sbb
mov
jne
shl
out
xchg
test
xor
mov
fcmove
and
mov
data16
sub
imul
inc
cmpsb
inc
cld
arpl
aad
test
fmul
lds
or
lcall
cmpsl
xchg
mov
sub
mov
scas
sarb
das
negl
jns
popf
mov
xorb
jno
xchg
jge
divl
int
and
jne
xchg
push
pop
dec
xchg
sarl
rcr
shlb
xchg
xchg
push
inc
cmp
fdiv
scas
cli
movl
mov
pushf
mov
push
mov
int3
mov
or
adc
stos
mov
inc
fisubrl
lcall
and
idivl
in
and
shlb
fdivl
mov
in
je
or
test
shlb
adc
sub
cmp
jb
repz
mov
cwtl
int3
jmp
push
xor
xlat
jnp
push
int3
imul
aas
cmp
in
shll
mov
es
xor
fidivrs
mov
xor
jmp
in
dec
push
lods
xor
vmread
fsubs
cmp
in
add
mov
test
test
or
imul
hlt
das
adc
mov
dec
clc
es
dec
mov
add
mov
loopne
sahf
push
into
loopne
mov
pusha
sub
loopne
cmp
inc
xor
and
jae
pop
sbb
adc
xlat
dec
fdivr
mov
inc
or
adc
stc
inc
mov
mov
out
mov
dec
inc
lods
lods
movsb
or
and
xchg
and
sti
aas
jp
and
inc
fisttpl
or
inc
adc
popf
jbe
enter
or
sub
mov
fdivl
mov
decb
shll
push
sbb
out
adc
sbb
lea
mov
es
pop
mov
test
jnp
lea
repnz
cmpb
cltd
push
out
mov
add
dec
xorl
fdivrl
push
add
push
lods
outsb
sub
mov
adc
aad
and
jbe
test
dec
mov
cwtl
outsl
jecxz
outsl
add
imul
sub
fistpl
test
pop
or
jae
add
xchg
cltd
scas
into
xchg
cmp
cmp
jp
jb
xor
mov
stc
ficompl
out
es
call
adc
adc
scas
sub
push
aam
rcrl
add
sbb
push
cmpl
sbb
sub
jle
clc
push
mov
andl
pushf
inc
push
rcrl
dec
repz
push
inc
shlb
dec
or
xor
cmp
orl
inc
jb
sub
fdivrl
shlb
test
cmpsb
mov
sub
mov
mov
jle,pn
or
jns
cmp
add
hlt
inc
adcl
mov
jl
xor
push
push
push
mov
addr16
repz
dec
shlb
roll
scas
add
mov
sub
mov
or
dec
movsb
xchg
pop
dec
jecxz
rcll
add
xor
hlt
popl
dec
ret
push
lea
es
aaa
sub
hlt
fldcw
add
pop
outsb
aaa
aas
add
cmc
ljmp
mov
push
stos
in
lret
add
hlt
dec
mov
jge
popl
push
ret
push
xchg
dec
jmp
mov
mov
pop
inc
test
add
jge
repz
mov
fistpll
cmpsb
sub
test
mov
out
or
testb
ficoms
push
dec
sbb
xor
scas
into
mov
addr16
jmp
mov
cmp
lods
out
pop
push
jbe
ficompl
rcr
lods
hlt
sub
adc
xor
icebp
pop
sbb
cmp
adc
xchg
inc
fildl
xorl
cmpsb
inc
push
jne
in
push
ret
sub
jnp
imul
push
arpl
inc
arpl
sbb
dec
test
out
loope
sub
or
lea
sti
int3
mov
xor
mov
mov
jns
jnp
or
nop
push
xchg
mov
orl
std
mov
pop
pushf
hlt
sbb
pushl
push
das
mov
dec
pop
or
test
sahf
mov
mov
jno
cmp
inc
fwait
or
clc
mov
sub
and
push
into
inc
dec
int
out
xchg
pminsw
cmp
cmp
mov
pop
movsl
call
mov
cmp
dec
sbb
shll
adc
cmpsb
sbb
std
mov
pop
iret
sti
cld
fiaddl
sub
jp
adc
mov
int3
nop
cmp
imul
mov
imul
scas
andl
mov
add
inc
fisttps
push
rolb
sti
pusha
dec
lahf
and
xchg
mov
mov
mov
mov
push
xchg
lret
out
icebp
add
cli
mov
int3
das
jmp
mov
out
mov
je
enter
aad
sarb
mov
dec
or
mov
fwait
mov
add
gs
xor
sbb
nop
ljmp
xchg
test
mov
and
pop
icebp
sbb
xor
adcl
hlt
je
gs
push
push
xchg
popa
fcompl
lea
outsl
outsb
jl
lock
mov
pop
and
jl
out
add
cld
cmp
xchg
jg
mov
enter
ja
pushf
sbb
shrb
inc
enter
mov
ja
daa
push
xor
mov
push
xchg
push
push
sbb
add
cmpsb
int
and
sub
arpl
jp
je
mov
add
repnz
mov
sbb
push
arpl
mov
xchg
xchg
iret
mov
mov
pop
mov
sbb
test
pop
jnp
dec
xor
xchg
cmp
sahf
loopne
or
in
mov
cmp
in
mov
out
lods
mov
inc
das
dec
inc
xchg
dec
xlat
cmp
pushl
push
enter
dec
dec
push
sub
call
mov
cmp
push
int
inc
inc
repnz
add
push
inc
fildll
pop
fdivp
insb
xchg
enter
jmp
out
loope
jmp
jl
vunpckhps
jl
dec
add
xchg
leave
dec
movsl
call
int
adc
scas
addb
mov
lds
filds
and
ret
int3
test
mov
loope
test
mov
stos
test
mov
sbb
push
cmc
xor
xchg
pop
adc
dec
fs
add
imul
lahf
mov
adc
ljmp
mulb
rcrl
call
sub
push
test
mov
mov
fiaddl
aam
mov
clc
inc
inc
and
insb
cmp
sti
add
jae
push
sub
gs
xchg
push
lcall
repnz
pop
xchg
je
jp
dec
aad
xor
add
xchg
adc
in
lahf
pop
add
rclb
add
in
mov
mov
add
and
pushl
scas
pop
sarl
loop
and
in
lods
les
mov
sbb
rorb
mov
es
or
js
out
shl
and
xor
mov
mov
xchg
mov
or
ss
aaa
add
xchg
sub
push
sub
jno
inc
sti
xchg
dec
mov
imul
ja
shufps
mov
and
adc
imul
mov
std
jecxz
xor
xchg
xchg
out
iret
pop
push
les
xchg
std
mov
loop
mov
int
enter
cwtl
and
std
das
jne
push
dec
stos
adc
stc
pop
ja
jp
jecxz
call
inc
out
ja
xor
icebp
mov
cmpsl
scas
sahf
jmp
mov
cmpsb
adcb
jecxz
ja
xchg
jl
dec
and
cmp
jns
rorl
lea
hlt
es
lods
mov
cmp
lds
xchg
pop
fcomp
mov
lret
xchg
jp
or
out
imul
or
adc
in
sub
mov
and
mov
push
sti
xor
add
dec
cmc
dec
jle
mov
dec
mov
xor
mov
insl
ds
push
sarl
pop
mov
sbb
andl
cmpsb
outsl
cmpsb
sahf
push
or
adc
in
cmp
dec
pop
push
cwtl
cwtl
xlat
jne
mov
inc
sub
repnz
aas
jo
nop
adc
es
imull
adc
in
mov
jmp
push
xchg
xchg
mov
jge
sbb
jmp
pushf
fistl
loopne
cmc
push
fbstp
dec
pop
loope
dec
cmp
xchg
xlat
xchg
inc
dec
lods
enter
stos
inc
ljmp
lret
aas
test
jne
ffreep
lcall
sbb
ljmp
dec
mov
insl
adcl
mov
add
test
iret
jecxz
lret
stos
scas
daa
cmc
int3
mov
dec
or
es
jne
loop
inc
pop
test
das
xchg
insb
jp
nop
into
sarb
adc
jae
icebp
mov
test
adcl
mov
adc
or
in
push
cmp
das
movsb
and
inc
lret
xor
jl
lds
pop
xor
push
pop
test
sbb
arpl
lods
test
jo
sarb
shrl
daa
xchg
js
dec
jg
mov
pop
enter
in
jb
dec
std
std
cmp
testb
imul
dec
dec
ds
xor
dec
inc
fidivl
lea
pusha
mov
pop
mov
inc
xchg
imul
sub
out
jae
push
push
cltd
lods
aam
sbb
popa
sub
push
andl
inc
xor
push
fdivrs
mov
sbb
popa
jns
icebp
ss
aad
je
or
add
data16
dec
loope
push
mov
mov
mov
addr16
icebp
jne
js
inc
and
hlt
js
adc
inc
shr
leave
cmp
outsl
shlb
jae
jae
mov
jb
hlt
push
push
jp
and
es
out
ss
into
sti
movsb
enter
adc
jmp
out
test
div
and
cli
cwtl
dec
add
outsl
xchg
adc
sbb
scas
mov
or
leave
popf
ret
xchg
aas
fsts
jl
and
pop
pop
out
mov
lock
sub
and
cmp
sub
jb
jp
sbbb
xchg
stos
stc
jnp
data16
cmpsb
add
in
mov
mov
fs
outsb
pop
jecxz
lds
inc
xchg
mov
mov
or
dec
and
adc
ret
les
arpl
outsb
ljmp
icebp
js
cmp
xchg
pop
pop
nop
ret
sbb
lcall
nop
push
into
leave
repnz
stos
es
std
inc
dec
mov
movsl
cmp
jb
test
xor
inc
cli
ret
movsl
push
lret
mov
fdivrs
out
mov
pop
add
es
test
jl
lea
xchg
xor
pop
insb
inc
jp
stos
adc
dec
clc
pop
jecxz
iret
and
pusha
inc
les
push
sarl
sbb
loope
in
push
sub
xor
ds
mov
test
stos
mov
pop
out
outsb
mov
aas
sbb
jae
sti
out
jecxz
movsb
pop
push
inc
ss
pop
gs
xor
push
pop
and
mov
cmp
xchg
sbb
popf
hlt
pushl
or
push
js
int3
pop
pop
push
lahf
in
jecxz
and
xchg
dec
sub
in
and
push
stc
in
nop
pop
sbb
notb
jecxz
int3
jno
or
les
jecxz
xor
lods
dec
adc
loopne
mov
jl,pn
enter
mov
xchg
fwait
mov
and
mov
cmpsl
inc
sbb
ds
dec
dec
xchg
dec
mov
cmpsb
inc
orb
xlat
push
xchg
stos
or
loop
fs
shlb
push
mov
xchg
push
pop
inc
es
push
sub
xchg
adc
push
mov
int
punpckhdq
push
jl
add
js
jmp
bound
xchg
cltd
add
push
mov
enter
ret
add
push
mov
pop
aam
outsb
xchg
dec
and
adc
pop
sub
ljmp
aaa
xor
fdivrs
jge
jo
jo
push
cmp
push
std
sahf
dec
mov
jne
xchg
push
or
cmp
and
add
push
inc
fildll
paddsb
adc
ficoml
mov
xor
jb
jle
mov
add
aad
movsb
push
rorl
fdivs
scas
ja
mov
repnz
push
fisttpll
fsubl
movsb
sbb
lea
adc
fcom
add
out
jg
adc
jae
enter
sub
push
addb
fimuls
imul
push
sbb
stos
inc
and
in
ja
pop
pop
out
pop
test
sbb
push
add
push
aam
push
cld
sbb
dec
jmp
jae
mov
mov
fwait
aaa
sbb
mov
cmp
ss
xor
scas
jne
push
lcall
lods
fistpl
fildll
cmc
mov
dec
bound
xchg
xor
cmp
movsb
clc
mov
clc
loope
dec
fwait
jb
iret
adc
push
in
das
fmuls
bound
adc
je
incb
inc
shrb
aam
enter
outsl
or
or
insl
add
sbb
mul
cmpsb
pushf
inc
and
jnp
outsb
imul
pop
mov
push
in
or
mov
fbld
mov
test
pop
mov
loop
in
in
push
dec
pop
cmpsb
fstl
stc
jo
bound
push
cmp
push
and
aaa
std
mov
cli
bound
mov
pop
push
aas
nop
into
mov
xor
jg
mov
jae
jle
insl
cmp
push
lea
icebp
dec
jecxz
jae
pop
add
call
add
jnp
flds
fcoml
std
xor
data16
inc
into
les
mov
xchg
movsl
mov
and
sbb
in
cs
in
sub
ficomps
sti
pop
lock
test
decb
and
gs
fbld
test
dec
sbb
mov
xchg
mov
push
rorb
aad
adc
stc
sub
mov
popa
push
adc
dec
xor
inc
pop
xchg
fsts
mov
sub
sbb
inc
push
add
icebp
mov
pop
pop
push
xor
ret
push
imul
adc
inc
mov
dec
dec
nop
inc
cwtl
and
pop
and
xchg
xor
mov
jl
iret
add
popa
out
adc
lea
push
xor
das
push
push
lock
cltd
and
emms
inc
dec
push
pop
dec
jp
stc
jl
neg
add
popa
inc
inc
int3
pushf
jns
test
push
mov
arpl
mov
jbe
outsl
pop
adc
mov
jne
add
lock
and
mov
sub
out
add
ret
les
adc
into
jg
cmovne
les
xchg
mull
fisubs
outsb
nop
or
mov
push
aas
mov
stos
pushf
sbb
cmp
push
sub
mov
cmp
inc
xchg
jecxz
loopne
ss
rol
fists
sbb
scas
jmp
mov
mov
add
jno
es
or
lret
jp
xchg
dec
mov
mov
xorl
add
cmp
inc
outsb
mov
stos
and
pop
push
mov
outsb
jnp
rolb
mov
jmp
negb
insl
pop
adc
xchg
add
cmpb
push
xor
sub
pop
mov
aas
lods
mov
sub
lods
fistpl
adc
jb
lods
sti
testl
cltd
call
lock
xchg
sub
dec
repnz
ret
sub
mov
repz
lods
pop
xor
and
rcrl
orb
push
cltd
and
in
sti
stos
and
mov
daa
xchg
cmpsl
fsubp
add
cmpsb
notl
pusha
icebp
push
pusha
adc
fsubs
pop
mov
inc
pop
pop
insl
int3
jbe
jmpw
mov
mov
push
jno
jle
pop
mov
sti
mov
add
and
loope
in
inc
mov
jnp
pop
cmp
pop
push
add
fmull
dec
cmp
mov
fldl
sbb
xorb
pop
cmp
jb
subl
push
jo
loope
jecxz
pop
dec
sbb
mov
scas
notl
mov
sbb
sbb
rcrb
mov
xchg
and
and
dec
and
push
cwtl
notb
xchg
ja
push
or
outsl
stos
aad
xchg
movsl
ss
or
daa
arpl
dec
inc
les
pop
xor
fistps
mov
dec
push
xor
int
cld
add
xor
inc
inc
inc
aas
mov
push
jb
inc
xchg
mov
into
xchg
xchg
nop
repnz
xor
arpl
pop
mov
pop
pop
pop
add
das
aaa
add
jne
sbb
testl
and
enter
in
lahf
and
jo
pop
cli
mov
aam
fisttpll
adc
mov
enter
test
ret
fldl
mov
sub
push
test
inc
mov
addr16
lcall
std
ficompl
out
or
mov
inc
pusha
jne
adc
sbb
lahf
mov
sbb
pushf
and
imul
pop
packuswb
into
adc
shll
addr16
sub
inc
dec
mov
sbb
shrl
pushf
test
cmc
popa
stos
dec
push
adc
lret
popf
daa
mov
test
or
stos
add
mov
sub
xor
xchg
fdivrs
nop
pop
icebp
test
push
scas
mov
and
mov
std
mov
in
push
stos
test
jno
cwtl
in
cmpsl
cmp
mov
jle
sbb
pop
addr16
les
adc
mov
xor
aam
gs
push
push
cmpsl
lock
pop
in
sarl
push
dec
enter
rolb
popf
sbbl
les
mov
jns
xchg
or
shlb
jne
ficoms
xor
dec
scas
fstpt
das
scas
ljmp
jno
stc
push
xchg
mov
in
aaa
dec
pushl
inc
mov
test
loope
push
std
shr
mov
ss
and
xor
es
lret
mov
add
xor
lods
pop
add
icebp
ficomps
mov
cmpsl
stc
jno
popa
int
jb
xor
mov
mov
inc
std
cmp
lods
cs
jns
es
pop
je
or
inc
js
into
out
mov
insl
cmp
aas
out
test
lods
and
cmp
mov
test
addr16
jle
add
push
loop
lock
inc
jp
sub
sahf
sub
sbb
out
das
fisubs
pop
push
sbb
lock
push
push
mov
mov
das
cli
aad
dec
es
xchg
loop
addr16
in
test
andl
inc
cld
sbb
push
xor
nop
jg
repnz
cmp
iret
sub
mov
addr16
sbbl
lods
jle
push
into
or
xchg
or
call
in
enter
jae
pop
imul
xchg
sbb
mov
gs
lds
sub
mov
mov
xchg
mov
loop
lret
bound
jle
stc
mov
jmp
jnp
in
cmp
lods
xchg
cmp
xor
test
or
cli
shlb
add
mov
mov
push
movsb
cmp
jbe
movsl
xchg
je
mov
cltd
xor
push
push
mov
push
fwait
jmp
push
in
popa
mov
out
shrl
lods
shl
js
mov
arpl
lcall
jecxz
in
mov
into
lret
push
fidivl
cmp
stc
inc
inc
xor
push
mov
mov
adc
add
mov
xor
ljmp
fnstenv
jmp
je
pop
in
cli
mov
push
xchg
popl
and
dec
imul
shl
mov
fcmove
sub
in
mov
roll
das
dec
xor
xlat
fcmovnbe
xor
jnp
inc
add
scas
mov
mov
cmp
jnp
cmp
xchg
pop
xchg
mov
popa
and
das
fistps
add
andl
add
mov
mov
fucomp
jne
ret
fwait
in
push
or
push
test
pop
nop
mov
adc
mov
fistpl
imul
sahf
push
push
mov
xor
orl
test
iret
or
hlt
repz
xorl
std
cmpsl
adc
pushf
shlb
or
repnz
idivb
mov
int3
push
bound
jo
sbb
lahf
lds
pop
loopne
sub
cmp
mov
movsb
mov
cmp
mov
nop
arpl
fisttpl
inc
or
testl
lock
pop
lods
rcrb
js
cltd
daa
cmp
push
sarb
insl
jno
dec
mov
add
mov
pop
std
cltd
pop
das
out
hlt
loop
es
mov
out
pop
sahf
test
push
fistl
outsb
std
mov
cmp
sub
xor
in
pop
sub
sub
jb
sahf
jle
fisttpll
aad
mov
cmpsb
lret
mov
iret
cmp
sbb
aas
or
scas
dec
arpl
sub
shlb
loop
lds
test
aam
fwait
fs
sbb
inc
add
xor
or
dec
jg
pop
xor
mov
mov
and
dec
cmp
sub
int3
sbb
xchg
lahf
push
insl
test
cltd
add
lods
add
clc
movsl
add
pop
imul
push
lock
cmp
movb
jmp
cmpsl
scas
iret
jo
xor
jg
fidivs
movsl
and
rcl
mov
pop
lcall
int
sub
or
and
je
mov
mov
mov
cld
lea
rcrl
mov
mov
mov
fcomip
xchg
mov
pop
jno
and
jecxz
push
test
clc
les
cli
sbb
cmp
rcrb
pop
sarl
ret
dec
dec
repz
orb
addr16
rclb
xchg
and
xor
or
push
pop
xlat
mov
mov
or
in
push
pop
push
adc
adc
pop
dec
call
das
jmp
shl
push
out
test
les
daa
out
ljmp
into
ds
mov
pop
stos
push
jg
in
push
sbb
dec
test
mov
jg
dec
jnp
mov
sbb
push
xchg
gs
in
adc
ss
sub
hlt
pop
sub
push
jno
push
imul
mov
mov
dec
dec
pop
into
mov
mov
das
add
xor
dec
mov
lods
out
push
scas
mov
jp
out
test
dec
sti
shrl
test
push
fstl
pop
mov
dec
call
inc
dec
stc
dec
cmp
loopne
lods
movsl
xchg
jmp
lret
mov
mov
bound
add
sti
lods
leave
cmp
dec
xor
xchg
rorl
imul
jne
mov
pop
leave
lock
movsb
xor
cmp
scas
cmc
jae
add
xchg
gs
jns
cmpsl
mov
jecxz
test
mov
aad
nop
in
fcmovnu
or
cmc
sti
pop
std
aaa
clc
sbb
ss
mov
pop
enter
fisubrl
push
movsl
pop
outsb
lea
cmp
mov
in
and
fldt
push
xor
mov
mov
inc
mov
mov
inc
mov
arpl
and
incl
xor
rclb
fwait
xchg
or
pop
adc
pop
cli
rcrb
or
add
aam
in
lock
ss
add
mov
jne
xchg
popf
mov
dec
adc
push
dec
adc
adc
shrb
ljmp
lea
iret
jp
mov
sub
test
push
pop
push
jp
stc
cli
mov
daa
mov
shlb
push
pop
ret
xchg
pop
fldenv
inc
sarb
scas
push
sbb
testl
aaa
in
mov
addr16
gs
ds
loop
or
enter
sbb
sti
mov
xlat
clc
xlat
mov
aad
loope
loopne
jmp
fiaddl
adc
rol
arpl
sub
xchg
inc
dec
pushw
mov
adc
es
jg
repz
sub
ljmp
aam
or
mov
xchg
xor
mov
into
and
pop
fildl
jnp
pusha
fucomp
cmp
sbb
or
ret
mov
stos
mov
push
pop
xchg
pushw
jg
sbb
fwait
int3
rolb
mov
jb
and
dec
scas
jl
and
pop
mov
pop
das
insb
xor
mov
jmp
icebp
shlb
sbb
pusha
lock
ds
mov
sbb
adc
addl
sub
push
push
mov
and
call
bound
mov
inc
test
in
fs
add
sub
pop
adc
out
ret
iret
mov
aad
cmpsb
int3
lea
jmp
lods
pop
adc
jge
mov
ffreep
dec
cs
lret
out
loop
ret
cmp
xchg
dec
dec
std
test
scas
int
sbb
jmp
xor
insb
mov
dec
push
jbe
mov
loope
cld
fucom
mov
mov
jbe
mov
out
lcall
adc
adc
repnz
jo
push
mov
mov
and
sub
mov
xor
stc
pop
arpl
jmp
ficoml
push
add
inc
fdivrl
mov
cmp
pop
sbbl
mov
aas
cs
loopne
mov
cmp
cmp
cs
inc
push
inc
addl
jns
in
or
pop
loopne
mov
stc
ljmp
gs
add
cwtl
pusha
mov
mov
insb
push
call
add
ret
out
fs
sbb
xchg
icebp
loopne
or
xchg
pop
xor
fdivrl
in
lcall
imul
notl
movsl
repz
xchg
mov
fs
sahf
mov
stos
push
dec
pop
xchg
test
xor
cmp
mov
out
sbb
enter
insl
idivb
out
mov
out
mov
test
push
push
adc
jl
sub
fnsave
aam
les
xchg
fisubs
fadds
xchg
outsl
scas
push
mov
add
adc
xor
xor
in
xchg
sarb
loopne
dec
add
or
push
mov
pop
aad
sub
push
inc
pop
addr16
push
dec
sbb
test
scas
mov
jne
and
pop
jmp
mov
rcrl
add
and
enter
adc
inc
mov
rorl
in
call
lret
mov
adc
mov
mov
dec
cmp
jp
mov
xchg
mov
dec
or
mov
jbe
and
cmpsl
aas
pop
mov
insb
inc
push
ds
fidivs
call
xchg
push
shlb
inc
add
mov
mov
js
aaa
dec
sti
jge
loope
je
ss
out
mov
pop
int3
stc
nop
mov
out
mov
jne
mov
pop
add
scas
aas
pop
xchg
testl
push
push
lret
and
cld
pop
jp
dec
xlat
mov
lahf
mov
jle
mov
in
add
lcall
inc
out
mov
xchg
es
lcall
clc
jp
aad
sub
outsl
sahf
inc
jle
or
mov
aaa
jmp
mov
and
fcomp
dec
loop
aaa
cmp
push
and
outsl
stos
scas
adc
das
xor
xchg
or
jne
adc
push
enter
fdivl
jmp
jno
shl
push
idivb
les
add
push
enter
cltd
xor
fiadds
ret
and
negb
xor
cs
test
scas
push
aaa
mov
cwtl
out
lret
mov
sbb
sbb
and
sbb
aaa
jne
punpckhdq
mov
inc
ljmp
add
test
jmp
popa
sub
jge
xchg
outsl
fsubrs
arpl
push
es
and
popf
dec
or
push
scas
cmp
scas
cld
sub
in
fiadds
or
sub
jge
gs
or
sub
pop
rorb
mov
push
cli
divl
enter
adc
pop
mov
adc
jg
jg
and
cmp
ret
inc
lds
out
not
scas
sub
inc
divb
hlt
sub
cmp
fdivrs
push
jno
mov
mov
js
pop
or
gs
fs
sbb
incb
xchg
mov
pusha
adc
inc
dec
push
adc
pop
test
dec
movsb
xor
sti
sbb
and
sbb
repnz
add
out
rcll
sub
mov
roll
mov
jne
jp
shl
xchg
or
fs
jg
jne
divl
mov
into
push
or
test
repnz
loope
mov
movsl
xor
jae
icebp
fidivrs
jecxz
push
mov
je
out
roll
insl
out
pusha
mov
push
mov
sub
mov
lret
add
sahf
xor
cmp
pop
imul
insb
and
out
rol
lcall
fistl
or
xchg
mov
aad
xchg
cmp
mov
add
xor
movsb
mull
xlat
lods
cmp
out
daa
inc
rolb
jae
push
mov
inc
inc
lock
imul
pop
mov
sarb
jg
sbb
data16
insl
sub
or
aas
mov
mov
in
adc
inc
enter
inc
sbb
jmp
lods
stos
jb
mov
adc
pushl
push
outsb
mov
pop
add
je
pop
lahf
or
sub
sbb
push
jmp
mov
repnz
jbe
cmp
aad
fnsave
mov
push
pop
stos
enter
call
aam
outsl
test
roll
sbb
and
mov
ds
push
or
jl
out
sbb
push
gs
sbb
ja
mov
and
adc
push
sub
cwtl
dec
negb
mov
cmc
incl
add
sti
cmc
and
dec
jbe
add
jnp
loopw
popf
lahf
fldenv
jmp
mov
ret
es
cwtl
arpl
jne
adc
jg
test
insb
mov
cmp
cmpsl
test
dec
dec
lods
push
cmp
mov
out
sbb
flds
adc
mov
cmc
je
je
inc
cmp
in
mov
outsb
cmp
xchg
out
push
inc
lea
aam
or
xlat
mov
out
mov
mov
mov
fsubs
mov
mov
or
popa
aad
insl
pop
push
sti
fildll
addb
xchg
jg
xor
sub
push
mov
pop
dec
test
inc
cld
mov
xor
mov
addr16
pop
mov
cmp
lcall
gs
push
pop
arpl
xchg
inc
sbb
out
add
xorb
sub
in
stos
xchg
inc
sub
cmp
popa
ja
and
inc
mov
rorl
sub
add
inc
call
pop
jecxz
int3
out
mov
fstp
add
sbb
ret
in
int
test
arpl
mov
fdivl
add
aad
add
lret
test
inc
lds
sahf
xor
push
sahf
or
jnp
fcoms
pop
push
repz
ds
in
sbb
out
bound
bound
out
in
test
test
mov
pop
cwtl
push
cwtl
mov
cmp
mov
pop
clc
mov
insl
shlb
mov
ja
pop
push
and
push
add
cltd
mov
imul
js
cmc
mov
test
xchg
test
mov
test
shrb
loope
mov
idivb
or
je
pop
icebp
cmpsb
adc
pop
sbb
gs
movsb
les
adc
aas
pop
loop
dec
xchg
call
xchg
adc
or
jp
loopne
mov
adc
mov
andb
inc
fsubr
ret
loope
add
repnz
lock
les
or
out
inc
mov
and
les
in
lea
jae
lcall
mov
movsl
adc
mov
pop
add
add
ljmp
and
jle
lds
adc
sub
das
and
gs
mov
cli
les
dec
imul
jnp
mov
out
fists
iret
into
inc
lods
jns
int3
lods
mov
adc
shlb
lods
lret
sbb
add
pushf
mov
and
pop
mov
push
sahf
push
mov
lahf
push
jnp
inc
push
mov
dec
js
mov
push
insl
les
test
adc
lods
cmp
sub
aam
pushf
lds
cmc
inc
mov
aad
xor
movsb
xchg
shll
push
inc
or
stos
lods
icebp
adc
lea
add
sbb
sbb
jl
sbb
push
mov
sub
clc
or
xchg
aad
movsl
sub
data16
mov
push
mov
cli
cld
lahf
out
les
add
xchg
jns
notb
xchg
xor
inc
scas
inc
xorb
and
repz
aam
mov
sbb
dec
push
call
sbb
mov
bound
rcll
pop
or
mov
or
outsb
lret
cmp
lds
cmpsl
adc
and
cmp
mov
cmp
dec
fs
add
je
jbe
lods
adc
pop
enter
jne
push
sbb
mov
icebp
popa
push
scas
rolb
cltd
and
fisubrs
movsb
or
jmp
or
push
jp
pop
cmp
xchg
cld
jns
ret
mov
cmp
push
xor
jns
cld
icebp
and
sbb
lods
jle
inc
jnp
mov
xor
stos
jnp
imul
mov
bound
fcmove
or
jnp
pop
test
insl
jecxz
xchg
imul
adc
sbb
out
lea
subl
mov
decb
daa
xor
inc
nop
add
nop
add
clc
pop
inc
xchg
inc
fwait
push
push
mov
es
dec
bnd
pop
movsb
lea
aas
jae
mov
lds
jmp
aad
imulb
push
mov
scas
mov
xor
leave
outsl
lds
and
cmpl
and
pop
push
jnp
fimuls
es
push
sub
popf
sahf
sarl
pusha
cltd
and
in
int3
inc
imulb
add
les
or
mov
sar
aas
push
das
jmp
xor
inc
es
cmp
inc
das
mov
xor
mov
jnp
xor
rcr
adc
bound
or
in
or
cwtl
sbb
push
dec
push
or
pop
cld
sti
adc
pusha
testb
ret
pusha
mov
cli
aad
and
insb
xor
mov
sbb
movsb
lock
push
sbb
cmp
bound
imul
jg
inc
stos
or
fildl
and
dec
jbe
leave
dec
jmp
mov
repnz
arpl
push
dec
mov
ret
xor
push
push
jno
dec
sub
cwtl
mov
dec
pop
adc
push
sbb
ret
test
pop
cmp
xchg
push
js
in
jno
xchg
sub
hlt
or
sub
jno
jno
fcom
in
daa
jo
inc
in
mov
sbb
gs
shrb
int
ss
xor
dec
scas
mov
lods
std
add
jle
adc
shrb
rclb
test
xor
mov
mov
xor
repnz
mov
nop
pushf
or
jns
in
loope
fmull
jmp
cwtl
fwait
aam
pop
xchg
popa
push
mov
adc
stos
hlt
aad
mov
mov
inc
mov
pextrw
add
fs
pop
sub
pusha
adc
xchg
in
addr16
jp
lret
lret
push
jb
inc
bound
xor
jne
roll
outsl
lahf
adc
icebp
cmpsl
cmp
sub
cmpsl
cmpsl
adc
iret
pop
xlat
dec
sub
cmpsl
ljmp
push
mov
jno
push
mov
daa
pop
addl
pop
inc
lcall
out
xchg
xchg
stos
out
mov
icebp
inc
cmp
stc
out
sbb
cmpsb
dec
dec
push
lds
pop
xchg
loope
adc
loope
push
sti
push
ja
sbb
loope
ret
pop
lahf
fs
mov
outsl
jmp
add
fbld
xor
inc
das
sbb
xor
sbb
ljmp
js
cmp
aad
enter
adc
and
mov
lea
xchg
insb
push
ret
arpl
sbb
jmp
dec
mov
mov
sbbb
sub
xchg
lret
xchg
jecxz
fidivl
fildl
mov
in
push
xchg
ret
push
popf
jecxz
lcall
insb
imul
and
rorb
shll
iret
lds
mov
mov
movsl
adc
dec
arpl
sti
mov
movsl
cmp
sbb
cmp
inc
fldl
xchg
pop
lahf
jbe
push
cmpb
sub
lea
mov
mov
inc
lea
stos
insb
xchg
or
dec
sub
jl
or
pop
hlt
and
repnz
add
divl
popf
cmpl
aad
int
insb
jecxz
cmp
xor
imul
fistps
movsb
inc
insl
xchg
fstl
cmp
add
icebp
add
fs
insb
push
cltd
stc
jp
pop
add
push
ja
lods
in
xor
pop
inc
mov
mov
jnp
pop
push
daa
aad
out
xchg
in
js
mov
push
data16
and
jp
push
outsb
mov
sub
adc
adc
cmpsl
rol
dec
stos
add
sub
fsubrs
inc
cmp
lret
push
pusha
lahf
int3
inc
gs
cmp
xchg
adc
add
mov
push
mov
fs
inc
cmpsb
xor
data16
jbe
push
sub
add
adc
jl
jmp
cmc
fsubs
cwtl
inc
push
and
int
push
mov
mov
es
fildl
iret
lods
sbb
fwait
or
push
outsl
incl
sti
dec
xor
add
mov
push
mov
jbe
sti
mov
lret
ljmp
loopne
xrelease
pop
mov
lods
pop
jb
mov
in
in
adc
fwait
mov
or
push
mov
lock
mov
jns
add
push
pop
ret
pop
mov
pop
fists
jecxz
ds
sbb
into
out
push
enter
cmp
pop
xor
bound
inc
cmp
dec
pop
and
pop
sbb
pop
jno
xchg
fs
cwtl
add
mov
test
dec
test
addr16
jbe
out
imulb
pop
movsb
lret
mov
xchg
sahf
dec
push
xchg
pop
loopne
inc
ja
inc
push
mov
outsb
shll
sub
clc
push
test
lods
jp
shlb
outsl
ds
mov
in
andl
push
xchg
xor
cmp
roll
icebp
cmp
jp
nop
mov
clc
mov
cwtl
mov
dec
scas
jecxz
ret
lock
ret
and
stos
arpl
leave
pop
xor
pop
xor
nop
lods
ja
cmpsb
xlat
mov
test
addr16
sbb
push
fwait
push
mov
xor
adc
sub
ljmp
js
loopne
xlat
inc
jno
popw
aam
std
sti
add
dec
mov
jnp
es
shll
clc
stos
jnp
aas
sub
mov
fs
repz
aas
jge
jae
add
in
dec
add
and
cld
push
into
inc
ds
inc
imul
ret
or
out
jmp
jnp
pop
or
test
and
dec
xchg
sbb
in
out
pushf
pop
adc
mov
xlat
das
jge
mov
sbb
pushf
inc
jp
xchg
bnd
into
add
push
mov
loopne
dec
jbe
fistpll
out
jmp
gs
mov
mov
scas
ds
shr
mov
mov
dec
test
mov
mov
pcmpgtb
xchg
lahf
in
jae
ja
adc
repz
lea
wbinvd
jne
orl
movsb
jns
or
pop
call
test
fstl
and
je
in
push
xchg
mov
das
jmp
sbb
pop
aam
es
jecxz
outsl
mov
gs
test
clc
xor
cs
mov
rcl
and
jmp
push
mov
stos
call
or
cwtl
mov
jl
sbb
in
test
push
clc
call
loop
adc
fwait
sub
das
imul
into
jnp
rorb
adc
add
inc
sub
into
mov
push
sahf
sub
iret
test
xchg
int3
pop
pop
call
jne
insb
shr
cmpsl
mov
outsb
and
mov
daa
adc
test
and
and
jns
je,pn
mov
sti
jmp
out
dec
les
xchg
xor
into
cmpsl
inc
nop
mov
arpl
xchg
push
adc
idiv
hlt
into
in
push
sbb
into
mov
dec
imul
adc
clc
xor
in
xchg
rdtsc
js
mov
pop
icebp
insb
pusha
and
mov
movsl
call
mov
mov
fidivs
pop
test
jmp
and
push
fs
ret
dec
pop
inc
imul
jle
shlb
dec
pop
imul
pop
lods
pop
loopne
jle
les
insb
mov
jge
pop
imul
or
add
lods
adc
pop
stos
mov
sbb
mov
sbb
fdivl
lea
dec
mov
push
push
ss
das
nop
addb
push
adc
daa
sbb
lret
or
fwait
lds
cmpsl
dec
mov
mov
push
sub
dec
fiadds
cli
jno
fsts
outsb
jmp
push
jne
fstps
xor
jg
lea
movsb
inc
aam
xor
outsb
pop
icebp
adc
add
aad
push
jp
mov
arpl
pop
je
mov
scas
ret
add
xchg
inc
loop
add
subl
jno
fucom
ja
xor
jmp
push
mov
test
movsb
push
out
movsl
push
aas
and
sti
pop
lahf
add
xlat
cltd
add
lret
mov
push
subps
das
mov
les
adc
xchg
sahf
int
adc
int
and
subl
sbb
sub
mov
leave
rcr
es
bound
test
inc
add
add
pop
outsl
add
loopne
cmp
add
push
cmp
lea
mov
or
pushf
shl
lods
cs
clc
ljmp
gs
insl
push
jnp
mov
pop
fistpl
push
pop
cmpsb
in
loope
jb
fidivrl
fisttpll
cmp
enter
aad
dec
sti
leave
test
arpl
jg
arpl
and
shl
iret
mov
push
inc
lahf
pop
inc
add
xorl
adc
xchg
iret
sub
ss
mov
xlat
jbe
push
mov
int
or
hlt
or
les
inc
jns
bound
or
dec
das
jo
sub
mov
jo
or
insb
push
mov
andl
lcall
inc
cmc
add
sarl
inc
push
popa
push
sub
rcrl
jbe
jecxz
add
ja
lods
stc
dec
sbb
pop
mov
imul
jg
adc
inc
add
mov
xchg
enter
hlt
loopne
inc
addb
fbstp
cwtl
les
xor
dec
inc
adc
dec
test
mov
mov
mov
popf
clc
mov
pop
clc
data16
mov
adc
xchg
mov
mov
jmp
mov
test
or
into
les
adc
movl
outsl
outsb
mov
xor
inc
pop
xchg
and
xchg
jae
mov
or
inc
fbstp
mov
and
push
jnp
addr16
pop
ds
cmpsb
popa
sbb
xorl
daa
leave
fidivrs
pusha
jbe
xor
loopne
sub
mov
loop
lret
sub
pop
adc
nop
mov
jae
cs
mov
popa
stos
xchg
push
jae
idiv
jmp
adc
lds
sub
jle
daa
test
aam
jl
push
mov
fnstsw
and
add
add
lods
inc
jecxz
add
add
aas
les
push
lea
mov
add
fnstcw
lds
mov
or
xlat
xchg
loope
fidivrl
shrb
sahf
out
pop
push
lods
es
pusha
sub
dec
icebp
pop
mov
sarb
lea
cmp
sbb
cmp
sbb
mov
push
push
xor
iret
jno
adcl
dec
movsl
test
stos
paddusb
rcr
int3
jg
lods
jnp
ret
jle
stos
jno
addr16
mov
sarl
inc
sbb
cmpsb
adc
sub
loope
pop
fistps
and
jge
fisubrs
inc
ja
xor
push
xchg
and
cli
add
dec
dec
and
aas
inc
icebp
push
outsl
pop
mov
aaa
out
push
ret
sub
fiadds
push
outsl
push
sahf
orb
pop
shrl
ret
sahf
inc
mov
pop
adc
xchg
push
or
out
pop
add
rclb
adc
push
mov
cwtl
stos
sub
in
mov
movsb
fisttpl
sub
cli
push
lret
mov
pop
jae
mov
pusha
repz
mov
push
mov
sbb
and
lahf
cmp
ret
insl
xor
test
inc
xchg
jmp
clc
adc
and
pop
or
add
pop
xor
imul
popfw
sbb
xchg
ja
cmp
mov
js
dec
repz
in
sarb
ljmp
or
lret
cli
aaa
in
jbe
aam
stos
pop
imul
jle
mov
push
add
int
push
pop
cmp
xchg
jmp
subb
cmp
and
enter
push
push
mov
fsubr
stc
xor
push
movsb
in
dec
push
enter
mov
pop
inc
jae
cmp
test
push
addl
int3
shl
cmp
subl
stos
sbb
push
xor
xchg
outsb
inc
stos
adc
adc
cmp
jno
jo
out
das
sbb
mov
popl
test
cmp
jl
jle
stos
xlat
lods
setns
or
test
xchg
or
mov
into
lods
mov
inc
xchg
out
xor
mov
push
xchg
or
adc
movsl
ljmp
cs
sbb
daa
push
imul
fs
push
cmpsl
add
cmp
bound
and
cmp
xor
adc
divb
pop
in
mov
dec
add
cmp
popa
push
or
mov
or
test
add
mov
xchg
jae
stc
jp
jmp
sub
jl
jmp
test
cltd
pusha
test
mov
jo
aas
sbb
outsl
out
xchg
and
testl
jle
inc
cmp
imul
push
jle
push
and
add
imul
repnz
ror
fcoms
xchg
call
lcall
add
mov
mov
mov
dec
and
xchg
jbe
xchg
clc
xchg
or
and
pushf
fsubs
cmc
fsubs
es
mov
mov
test
push
mov
pop
dec
pop
imul
decl
mov
outsb
xchg
mov
push
js
sbb
inc
push
test
push
mov
cli
pusha
sub
aam
pop
cltd
sbb
xchg
sub
dec
add
movsb
jp
fistps
inc
lock
mov
out
sti
cmpsl
jp
addr16
adc
sub
out
rolb
movsl
mov
in
mov
cwtl
insb
lahf
cmpsb
sub
int3
dec
dec
push
mov
sbbb
les
cmpb
scas
sbb
mov
aaa
stos
or
call
cmpsb
shl
hlt
in
push
fistpl
cmp
xchg
popa
or
repz
popa
mov
jp
lds
sub
or
xor
cmp
or
and
in
xchg
lret
scas
cmp
and
cmp
push
sub
into
sahf
mov
add
lea
and
insl
sub
dec
sarb
jecxz
test
and
xor
inc
xor
xor
sub
dec
js
cli
sbb
and
sub
and
sbb
xchg
dec
add
and
ss
sub
mov
cld
leave
mov
add
imul
ss
sub
or
and
xchg
enter
pop
lods
in
mov
das
jmp
sbb
sbb
cmpsl
lar
mov
and
xchg
xchg
ja
cld
pop
test
dec
shll
pop
fld
mov
mov
add
shll
sbb
jne
sbb
add
call
fisttps
push
jecxz
add
int
clc
aam
fcomps
fsubrp
fiadds
test
ja
mov
out
mov
clc
addl
clc
xchg
inc
and
and
lds
cmp
clc
popl
int
dec
shl
stos
mov
add
mov
sbb
je
fists
jg
jl
or
aam
and
repz
jno
jne
push
push
or
clc
cmp
mov
jno
push
das
xchg
fcomip
sub
pop
fistl
push
inc
hlt
adc
pop
adc
jae
cmp
out
add
aaa
hlt
cmpsl
stos
jp
add
repnz
jne
cmc
dec
mov
mov
inc
lods
fmull
aad
xchg
movsb
fadd
stc
mov
scas
xchg
mov
pop
sbb
jl
and
xor
jne
cmp
test
mov
js
mov
mov
fnsave
dec
sbb
cli
pop
dec
dec
xchg
aam
stos
push
mov
jns
mov
cmpsl
insl
inc
mov
fldt
sbb
jecxz
cmp
inc
arpl
call
xadd
or
scas
stos
pop
les
leave
shll
xchg
je
mov
sub
mov
imul
pop
movsb
lret
nop
outsl
or
shrl
mov
fs
shll
jno
mov
shrb
movhps
mov
or
push
jmp
into
push
xchg
rcll
pushf
add
sbb
cmpsl
into
pop
aas
adc
xchg
push
mov
clc
push
jl
pop
mov
scas
xor
or
and
repnz
dec
pop
js
pop
insl
pop
arpl
fnsave
insb
iret
jp
sti
dec
xor
adc
push
cs
leave
inc
aam
xchg
mov
jle
or
mov
ljmp
test
dec
out
dec
repnz
add
int
lret
outsb
sub
pop
mov
and
dec
pop
in
mov
loop
pop
enter
lahf
push
xchg
mov
ficoml
sub
xor
dec
fs
std
pop
push
repz
popa
push
mov
les
mov
lret
loope
pop
or
jae
lcall
nop
jp
aam
push
inc
mov
les
loop
div
aad
and
jmp
sub
jb
movsl
cmp
lock
jmp
call
outsl
mov
xorb
xor
in
pop
push
push
lods
cs
clc
inc
pop
mov
fists
movsb
aas
sbb
sub
mov
test
jno
repnz
scas
pop
xchg
shlb
jne
push
inc
dec
add
in
jl
mov
sub
gs
mov
cmpsb
jb
gs
inc
and
filds
bound
mul
push
cmp
call
jp
in
jecxz
movb
xor
scas
out
in
dec
mov
test
pop
add
sbb
jo
enter
loopne
xchg
jbe
add
mov
adc
push
shrb
jne
inc
mov
repz
cmpl
or
data16
imul
aad
or
xor
mov
or
fcoms
scas
push
popa
aas
add
add
jmp
cld
lods
xor
clc
das
xchg
adcb
ficompl
pop
scas
jns
adc
loope
xor
jecxz
in
sti
in
int
es
or
or
pop
mov
cwtl
pop
sarw
repnz
sub
hlt
jg
dec
ret
sbb
jne
inc
dec
adc
aaa
adcl
xlat
jmp
out
push
push
aaa
inc
in
xor
stos
inc
aam
mov
cs
cli
cmp
loopne
fbld
stos
popf
jmp
inc
add
mov
movsl
push
push
stos
dec
xor
pop
lahf
in
in
int
aaa
into
pusha
adc
pop
or
iret
and
mov
and
inc
aad
mov
imul
clc
mov
in
push
sbb
sahf
mov
push
and
repnz
enter
mov
out
int
jae
push
mov
shlb
and
or
dec
aaa
popa
dec
test
jle
or
xchg
roll
sbb
imul
ss
adc
pushf
dec
fisubs
xchg
push
inc
in
xor
test
sbb
mov
iret
cmpsl
jnp
dec
add
mov
xchg
dec
push
cmp
mov
les
lret
aam
mov
insb
std
cmpsb
or
add
into
std
lock
outsl
in
push
pop
les
xchg
in
shrl
mov
mov
dec
sbb
pop
dec
pop
outsl
xor
xor
shlb
icebp
xchg
sbb
push
in
push
cmp
jb
movsl
dec
stos
mov
rorb
insb
jno
xor
data16
filds
inc
mov
mov
fidivl
adcl
in
ss
lods
pop
in
inc
and
shll
leave
mov
push
loope
sbb
iret
jne
icebp
and
outsb
jo
xchg
clc
xor
mov
mov
jo
lret
scas
shlb
ss
mov
das
sub
scas
scas
inc
pop
mov
popf
or
int3
cmp
sbb
aam
leave
cmp
adc
dec
or
sub
sub
add
dec
pop
fstps
leave
push
mov
movsl
mov
shrb
lock
mov
sub
outsl
push
mov
dec
mov
ret
sbbb
push
subl
cmp
movsl
test
shr
mov
mov
lret
cmc
inc
jmp
cli
jl
stc
and
das
adc
lds
mov
xchg
mov
xchg
pop
inc
stos
jmp
mov
in
sbb
lods
xchg
fstl
enter
sub
xchg
mov
adc
mov
insl
pusha
jecxz
xchg
pop
sub
fldcw
out
imul
add
fists
pusha
jno
mov
mov
jg
cmp
mov
movsl
cmp
call
sub
sbb
and
adc
ja
arpl
pop
and
mov
sti
aad
shlb
clc
fucomip
outsb
sbb
jl
push
imul
xchg
fistpl
xor
jp
in
rol
or
mov
into
xor
pop
scas
enter
imul
outsb
mov
cmpsl
mov
sbb
cwtl
mov
insb
in
add
sbb
mov
xor
sub
adc
fwait
push
inc
inc
push
decl
mov
ret
outsb
pmaxub
xor
andl
loopne
into
addb
pusha
pop
mov
xchg
shrl
hlt
hlt
pop
stc
mov
mov
addb
jnp
hlt
dec
adc
mov
push
stos
addr16
les
inc
and
fs
push
dec
lret
into
repnz
fadds
stos
pusha
cld
push
fwait
adc
test
bound
xchg
pop
hlt
repz
test
mov
sbb
enter
and
sbb
mov
das
mov
and
pop
mov
mov
inc
add
or
repz
mov
incl
adc
push
rol
sub
cmp
or
daa
outsb
out
and
jns
jge
mov
ss
mov
adc
fimull
add
dec
shlb
repz
pop
je
dec
ds
cli
cmp
shlb
fwait
loop
scas
scas
mov
adc
test
inc
aas
std
mov
movsb
sbb
adc
push
int3
sbb
fldenv
xchg
mov
popf
jo
dec
fcoms
loopne
mov
mov
pushf
dec
push
jnp
std
movsl
cs
dec
dec
dec
xchg
sbb
sbb
jle
bound
sbb
pop
dec
hlt
rcr
outsb
arpl
and
ljmp
lods
xor
xchg
mov
xorl
pop
fmuls
das
xor
in
mov
inc
rolb
xchg
cli
adc
in
sti
cmpsl
pop
negl
sub
jne
pop
dec
hlt
xchg
xor
adc
popf
mov
lcall
ljmp
out
push
dec
inc
into
jg
lds
push
jl
daa
mov
ja
sub
sub
adc
xchg
aas
clc
xor
arpl
insb
dec
pushf
xchg
aaa
jae
cli
mov
adc
add
add
push
mov
stos
lahf
lea
or
adc
data16
xchg
cmp
mov
add
cmp
xchg
jmp
fwait
mov
faddl
ja
rorb
bound
xorl
mov
je
mov
xlat
test
xchg
inc
in
sub
xchg
and
iret
mov
push
sbb
shll
or
andb
jo
push
enter
push
jmp
leave
push
cmp
je
mov
andl
je
movsbl
popa
xor
pop
pop
fisubs
les
clc
leave
pop
mov
ss
mov
mov
iret
pop
xchg
pusha
push
int
or
dec
ds
out
loopne
sub
rol
cltd
sub
sbb
adc
fdivrs
bnd
sarl
dec
mov
sub
pop
pop
and
aad
jne
and
or
push
shll
xchg
in
xchg
and
repz
test
jo,pn
data16
sbb
fnstsw
push
jl
lcall
ljmp
mov
jmp
outsb
insb
inc
dec
push
xor
mov
int3
mov
xchg
pop
mov
jno
clc
mov
mov
cmpsb
xchg
mov
xor
aad
stc
sub
je
xor
mov
cmpsb
adc
or
and
scas
push
loope
sub
jae
mov
push
js
cmp
sbb
filds
sbb
dec
jns
jp
mov
arpl
lea
xor
imul
test
push
cmp
ficoms
xlat
adc
push
xchg
jecxz
xchg
in
xchg
fisttpl
imul
push
mov
jg,pt
jb
es
xlat
movsb
push
int3
push
filds
adc
xor
jno
stos
insl
pop
pop
ss
push
in
leave
rcr
jg
nop
jl
pop
imul
iret
jae
sub
mov
js
cmc
cli
addb
arpl
cli
dec
std
xchg
test
push
and
jns
push
and
cld
mov
or
dec
inc
and
fidivl
jge
loop
mov
int3
in
xor
push
aad
pusha
adc
add
iret
add
or
mov
cmp
mov
imul
pusha
jnp
mov
jge
movsb
pop
test
pop
sub
in
mov
stos
adc
and
xor
out
pop
or
cmp
enter
sub
mov
push
dec
out
xor
and
adc
pop
movsl
push
mov
hlt
es
pop
sbb
das
nop
rorl
fs
fcmovnu
addl
mov
dec
inc
subl
orb
ja
aad
in
push
les
cmc
lods
adcb
ja
in
cmp
das
inc
xor
sbb
les
mov
cmc
push
inc
hlt
lcall
lret
dec
cs
ja
lock
bound
inc
pop
fsubrs
sub
and
xorb
xchg
pushl
lea
mov
shl
mov
fs
mov
mov
enter
push
xlat
out
push
and
dec
jno
rcrl
add
add
jae
mov
dec
and
mov
ds
pop
int
gs
jge
mov
bound
sub
inc
mov
pop
aam
add
nop
test
dec
dec
adc
sbb
aaa
lret
sbb
dec
inc
test
pop
pop
fs
imul
fsubl
pop
sbb
xchg
cs
lahf
sbbl
xchg
fs
sbb
inc
sahf
push
dec
mov
fwait
mov
add
mov
popa
movsl
push
sub
out
arpl
xor
bound
xchg
aam
jmp
lods
inc
das
cmp
xor
repz
push
sub
orb
push
rclb
in
call
int
pop
out
rclb
push
fucom
lds
ret
adc
test
add
jnp
push
add
jo
lods
push
inc
push
jns
icebp
jp
sub
negl
mov
das
es
bound
and
xor
pop
push
dec
std
jno
fnstsw
cmp
add
nop
sahf
fidivl
in
cmp
or
mov
jnp
sub
and
adc
fiadds
in
or
push
jl
mov
lahf
mov
arpl
lahf
dec
push
or
sub
sti
repnz
iret
mov
mov
shlb
iret
in
mov
pop
jae
insl
sub
push
pushf
add
push
mov
mov
jecxz
mov
dec
inc
mov
icebp
and
out
int
sub
mov
inc
adc
lret
lahf
xchg
pop
sbb
jmp
addr16
xchg
mov
pop
cli
shrb
mov
add
loop
ficomps
cmp
xor
stos
das
xor
push
push
inc
and
jns
ljmp
push
or
mov
jg
in
vcvtsd2ss
mov
cmc
pop
and
rcrl
data16
insl
jmp
pushf
negb
scas
fwait
out
fbld
cltd
mov
imul
add
inc
testl
mov
fst
xor
push
add
or
xor
popa
dec
jle
or
xor
jno
xor
cmpsb
test
fsubs
pop
ja
mov
sbb
jno
or
pop
mov
or
repnz
xchg
cmp
dec
cmpsb
in
nop
adc
addr16
jp
adc
mov
push
cli
xchg
jl
xrelease
adc
cmp
sub
pop
ret
loope
clc
jb
xchg
mov
jo
jecxz
lds
mov
jnp
push
inc
das
xchg
cmp
out
pop
cld
popf
lods
inc
mov
push
out
lret
sub
enter
les
popf
or
lret
mov
or
in
je
pushf
shlb
movsl
xchg
inc
jo
inc
mov
flds
mov
push
rolb
loopne
cmpsl
fadds
cmpsb
adc
sbb
sbb
push
imul
enter
jb
je
subb
cwtl
jno
inc
mov
pop
imul
arpl
or
loope
lcall
fstpt
mov
mov
scas
negl
and
in
mov
and
push
cmp
xchg
gs
pop
scas
mov
icebp
testb
mov
test
sub
rcrl
fwait
pop
jb
inc
addl
fists
xchg
int
daa
mov
cltd
sbb
out
jmp
adc
xchg
cmpl
out
xchg
cltd
outsb
jnp
jl
or
test
dec
add
cmpsb
xchg
int
xlat
test
jmp
fldlg2
incl
cmp
hlt
sarb
rcl
loop
mov
cmpsl
icebp
add
popf
fwait
or
fdivs
xorb
adc
out
sti
xchg
push
out
or
add
mov
push
into
mov
lcall
bound
sbb
inc
fldenv
cld
and
push
inc
fiadds
and
imulb
inc
pop
mov
mov
ret
push
push
int3
leave
in
int
ss
lcall
in
cs
movsb
add
movsl
rolb
mov
sbb
mov
add
or
mov
mov
mov
jbe
pop
fistpl
jp
push
sbb
ss
mov
xlat
and
jnp
test
adc
jbe
and
sbb
imul
dec
dec
repnz
cwtl
add
repnz
mov
xorb
xchg
sbb
das
lds
addr16
xchg
in
dec
sub
mov
sub
out
out
shl
push
aam
aad
mov
int3
fmul
push
mov
sbb
testl
rcll
lods
push
sub
test
ret
aaa
xchg
fld
call
call
mov
loop
ret
inc
cmp
fimull
out
sbb
in
pop
xorl
mov
pop
loope
fnstsw
mov
xor
lret
ja
daa
lods
loopne
in
popl
pusha
shrl
cwtl
lret
pop
loop
lahf
push
mov
je
jg
je
or
jb
scas
cmpsl
dec
andb
out
test
mov
lahf
call
jbe
adc
aaa
mov
aad
loope
pop
les
or
sub
dec
aaa
cmpl
lods
in
lods
lcall
sub
loope
mov
or
push
daa
mov
mov
sbb
xchg
fwait
pop
xchg
cmpsl
cmp
push
mov
std
outsb
lret
je
or
jo
add
cmp
mov
stc
lods
lock
push
fcom
test
and
cmp
out
fwait
insl
aas
mov
adc
add
add
inc
int
pop
ss
add
push
jnp
add
int
add
xchg
push
and
les
pop
in
xor
xchg
mov
outsl
or
fwait
and
das
fidivrs
sbb
and
mov
pop
rcrl
in
in
cli
movl
xchg
mov
push
adc
dec
test
das
mov
cmp
sahf
nop
mov
loop
mov
das
flds
inc
mov
add
les
xor
adc
sub
dec
mov
lahf
pop
jb
mov
or
out
adc
push
mull
cmp
xchg
cld
push
in
sar
push
xor
push
ljmp
decb
jmp
mov
icebp
xchg
mov
loopew
inc
push
add
lcall
mov
cmpsl
inc
popf
jecxz
or
mov
xchg
mov
les
icebp
sbb
in
lret
push
je
xchg
test
jle
leave
xlat
icebp
lret
pop
xchg
pop
add
lods
ficomps
xchg
xchg
jns
push
loopne
cmp
lret
fwait
sub
jns
rorl
push
mov
or
imul
ljmp
data16
adc
clc
sub
cmc
mov
out
std
movsb
xor
and
test
ljmp
pop
dec
mov
cmpsb
enter
imul
insb
mov
and
ror
addl
std
dec
push
cmp
stos
inc
add
xor
ss
data16
pusha
movb
adc
mov
sbb
cld
hlt
leave
jmp
lret
sbb
inc
pop
xor
pop
pop
arpl
js
push
dec
push
repz
lods
mov
lret
jecxz
ds
fiaddl
loop
mov
aas
insb
das
pop
aam
pop
add
add
sub
daa
pop
and
xor
test
jae
mov
orl
nop
and
adc
inc
push
inc
es
push
mov
mov
rolb
jnp
xor
lock
gs
fwait
push
mov
shrb
xor
mov
es
fsubl
pop
leave
ret
dec
fadds
push
cmpsl
mov
mov
js
out
iret
jb
mov
and
scas
push
lret
and
fdivrs
sbb
add
pop
push
jle
push
sarb
imul
addr16
test
fidivs
push
imul
and
faddl
shll
leave
test
ss
fbstp
mov
mov
jmp
nop
sub
push
hlt
test
pop
adc
ret
mov
cmp
icebp
pop
test
fadds
fcomps
push
mov
out
pushf
nop
cmp
mov
mov
jl
jge
and
and
push
add
xchg
mov
mov
mov
test
iret
int3
push
fwait
jp
inc
sub
addl
xor
sbb
cmp
div
dec
xor
or
out
add
clc
pop
sub
cmpsb
je
out
cmpsb
jne
adc
pop
std
in
jbe
test
xchg
gs
adc
pop
dec
cmp
inc
dec
mov
icebp
xor
cwtl
jmp
adc
push
lods
mov
movsl
test
inc
add
xchg
insb
jno
int3
sbb
mov
pop
jbe
inc
popf
int3
dec
mov
jno
mov
ret
mov
jg
out
fsubl
mov
add
adc
mov
or
aad
ss
dec
jbe
aam
mov
sbbl
jns
lret
addl
or
in
add
std
inc
dec
repz
and
xchg
gs
xchg
repnz
xchg
xchg
push
push
mov
lret
xor
adc
call
inc
dec
inc
lahf
aas
mov
aas
cmc
lock
xor
sub
push
mov
fs
sub
movsl
mov
popa
jno,pn
test
mov
aam
repnz
into
adc
imul
and
gs
js
inc
loopne
sahf
ljmp
jp
mov
scas
adc
xor
or
loope
jecxz
fwait
and
pushf
or
aas
dec
adc
cld
daa
mov
cli
cli
push
and
stos
mov
sbb
stos
cltd
cmp
int3
pop
sahf
jnp
dec
jnp
push
xchg
mov
into
aad
cmp
push
nop
jle
mov
rcrb
int3
jns
dec
insl
jno
int3
mov
f2xm1
cmp
ret
push
fistl
sti
insl
lods
xorl
aas
mov
xchg
dec
arpl
movsl
cs
and
arpl
pop
test
sub
adc
mov
arpl
cltd
dec
xor
sbb
jne
fucomi
enter
shrb
movsl
mov
lcall
mov
jno
add
std
push
xchg
pop
cld
out
je
jle
test
xchg
xchg
adc
push
lds
adc
or
int
lcall
aaa
gs
es
cmp
pusha
negl
int
mov
jmp
xchg
cmp
aad
sahf
pop
push
or
push
lods
aas
xor
jle
shll
push
mov
mov
arpl
pop
sbb
pop
pop
pop
mov
xchg
dec
cld
lret
dec
subl
aaa
push
adc
int3
push
in
cmc
aam
repnz
es
sahf
ljmp
mov
cmpsl
mov
mov
cmp
push
scas
adc
cmp
loope
dec
push
cmp
dec
nop
mov
rcrl
push
cmc
dec
inc
xor
mov
stc
mov
xchg
cmp
jle
fistps
ss
sbb
sbb
test
inc
out
cld
add
outsl
fcoml
fwait
out
repz
xchg
dec
mov
cmp
push
scas
outsl
mov
mov
cmp
frstor
sahf
idivl
adc
leave
mov
push
and
cwtl
mov
gs
arpl
inc
add
cmp
loope
jnp
jmp
or
xor
popf
jp
out
xchg
dec
xor
push
leave
jne
leave
adc
shrb
lock
mov
test
daa
scas
jp
leave
cmp
ss
xchg
jge
enter
push
sub
std
aam
out
shlb
push
jecxz
push
sub
sub
sbb
jg
inc
bnd
rclb
jb
icebp
lea
into
xor
cmp
xor
sub
aas
dec
out
or
sbb
xchg
jns
repnz
das
out
add
lahf
or
cs
hlt
fstpt
cmp
push
in
sub
pusha
aas
sbb
xlat
imul
shlb
inc
push
out
les
sub
mov
xor
in
inc
mov
push
xor
sub
xchg
xchg
test
sub
in
xor
lods
ljmp
scas
pop
data16
in
fildl
and
out
movsb
inc
fistpl
pop
push
insb
inc
jg
xchg
sarb
fs
mov
xor
push
dec
and
adc
popa
iret
pop
in
test
sub
stc
adc
imul
mov
sub
xchg
ss
popf
aam
movsl
aas
xlat
xchg
push
stos
orb
or
sub
incl
stos
dec
lahf
icebp
sub
pop
pop
ret
scas
or
pop
mov
add
out
addl
pop
jnp
cmc
xchg
sbb
mov
jbe
mov
aaa
push
sbb
call
insl
adc
sbbl
and
adc
aam
pop
ret
sbb
pop
lock
lcall
test
andb
inc
aad
popf
sahf
push
add
je
mov
inc
jmp
and
sub
xor
movsl
push
mov
lea
sub
and
push
jge
addr16
icebp
inc
in
loope
sbb
stos
mov
out
lock
mov
sbb
fcoml
ret
xor
fs
rclb
or
push
test
add
xor
ret
inc
dec
jb
ds
jae
popf
xchg
dec
pushf
roll
hlt
adcl
or
mov
dec
inc
pop
push
sub
mov
lret
dec
inc
bound
or
movl
jp
pop
mov
mov
inc
xor
inc
ljmp
xor
mov
fstps
mov
mov
pop
cltd
jle
xchg
jle
and
jae
pop
add
push
cli
dec
jle
mov
out
push
inc
add
int3
cmp
sbb
rorb
ss
sbb
iret
or
push
dec
cs
jnp
jge,pn
addl
insl
pop
hlt
xchg
cmp
ja
add
jmp
pop
pop
mov
mov
stc
cmp
xchg
mov
test
js
mov
rorl
jnp
stos
and
push
push
push
cmp
lahf
inc
inc
add
icebp
cmp
cmp
bound
std
sbbb
stos
insb
in
mov
ror
cltd
sub
sahf
loopnew
test
mov
pushf
push
or
pop
testl
sub
mov
out
add
cmp
mov
mov
dec
stos
add
xorl
loopne
movsb
cmp
int
xchg
cmc
into
add
mov
dec
jg
icebp
out
mov
shrl
adc
jae
add
call
lahf
loop
jno
shrl
push
xor
lea
mov
push
lcall
shrb
repnz
pop
pop
lea
cld
add
pop
dec
sub
iret
ja
orb
subb
test
bound
repnz
leave
xchg
jmp
mov
adc
fdivs
or
xchg
jmp
sub
mov
mov
push
fs
mov
jns
add
nop
test
xor
push
std
mov
jge
sti
mov
shll
xor
xor
es
les
mov
jne
and
outsl
mov
adc
push
movsb
scas
repz
cmp
rclb
lods
std
pop
pop
pop
dec
lock
mov
and
fsincos
and
imul
dec
subl
call
add
sbb
addr16
das
sbb
sub
push
in
cmp
pop
inc
shlb
rcrb
popa
cld
out
mov
pushw
jg
cmp
jp
or
adc
fbstp
push
push
cmc
cmp
test
xor
movsb
mov
mov
and
push
push
arpl
mov
jae
jne
and
mov
add
or
adc
cmc
lds
dec
out
jle
jle
sub
inc
outsb
out
mov
adc
pop
inc
insb
ja
cmpxchg
js
xchg
jno
ss
inc
cs
jg
and
inc
push
sbb
stos
push
notl
js
into
mov
cmp
test
mov
outsl
pop
sub
cmp
add
sub
in
sub
pop
adc
sub
jecxz
sub
imul
push
lret
ljmp
andb
out
clc
xchg
movsl
movsl
or
dec
jns
out
popf
dec
xor
jbe
gs
sub
or
mov
movsb
cmp
in
xchg
xchg
mov
stc
out
movsl
test
sub
fst
std
and
mov
mov
and
popf
lahf
sbb
dec
fwait
push
pushf
cmp
jns
fldl2e
aas
flds
add
cmp
sbb
adc
xor
daa
cmp
pop
jle
dec
cmp
dec
mov
mov
stos
mov
or
ficomps
sbb
sbb
rcrb
ljmp
or
add
mov
inc
and
lcall
jbe
les
jle
sahf
fnstenv
call
mov
push
push
jmp
xchg
adc
scas
lock
xchg
std
pop
outsb
sbb
leave
aam
aaa
dec
mov
out
add
sub
sbb
and
xchg
inc
xor
xchg
das
dec
dec
jae
mov
lret
stos
int
loop
pop
fnstenv
push
sub
pop
hlt
loop
cli
and
cli
pushf
mov
and
scas
popf
inc
lcall
in
loope
dec
inc
xor
mov
call
stc
mov
mov
push
lods
jl
push
jo
pop
xchg
in
add
nop
mov
mov
movsb
movsl
pop
mov
sti
or
push
cwtl
in
or
cmp
call
or
fcoms
inc
sub
xchg
setle
lea
repz
pushl
sub
dec
cli
push
cli
xor
fsubrl
in
add
cmpsl
int
loopne
filds
leave
lahf
dec
and
je
inc
dec
out
in
sbb
stc
dec
cmpsl
popf
mov
pop
add
aas
fdivl
ss
dec
lcall
sbb
xchg
push
xchg
popa
movsb
mov
mov
push
or
xchg
repnz
lret
cmp
xor
xor
jbe
cmp
es
sbb
cmp
jp
ret
enter
sahf
daa
cmc
lock
mov
ret
or
cmp
lret
stc
adc
push
filds
mov
icebp
push
out
pop
outsb
insb
int3
mov
dec
mov
stc
hlt
jecxz
dec
iret
inc
push
outsb
add
push
pop
aaa
cmp
arpl
xchg
mov
add
dec
and
das
jnp
ljmp
inc
cmp
pushf
mov
xor
xchg
xorl
mov
sahf
xchg
lds
iret
pop
test
stc
add
ljmp
outsb
sbb
cmp
pop
jecxz
stc
sbb
dec
xchg
inc
nop
test
adc
fwait
adc
jo
insl
cmp
out
cmp
dec
xlat
cmp
loope
cs
roll
stc
inc
xchg
dec
mov
push
loop
cmp
jae
pop
mov
push
fs
jmp
das
pop
and
sbb
ret
cld
out
push
lea
dec
sbb
fs
pop
pop
loope
mov
into
mov
mov
jno
call
js
xor
lock
push
inc
sbb
fld
mov
loope
pop
lcall
cmp
xchg
jno
shll
fwait
xchg
inc
into
lea
fs
push
jnp
leave
cld
mov
jbe
enter
pop
mov
cli
xor
xchg
outsl
xor
sub
mov
test
fcmovne
push
andl
inc
test
std
push
sub
dec
xchg
pop
xor
xchg
ljmp
inc
das
adc
rcr
push
mov
es
mov
dec
dec
daa
cmp
xor
inc
imul
ret
xchg
and
icebp
push
aam
punpckhbw
and
shll
mov
leave
push
or
cmp
mov
push
in
jmp
dec
das
mov
mov
add
fwait
data16
es
inc
add
dec
popa
push
fsubl
push
aad
add
sbb
and
fs
pop
rclb
jne
call
cmpsl
jae
push
fcoml
imul
movsl
xchg
xchg
xor
stc
push
scas
mov
inc
fildl
adc
mov
aam
dec
cwtl
aaa
aaa
mov
pop
into
sahf
ret
bound
adc
in
jno
xor
pop
cs
cmp
push
stos
sbb
inc
or
mov
xor
loopne
jae
out
mov
insb
mov
jge
and
subl
and
and
xchg
add
cmp
es
jns
dec
mov
mov
xchg
cmpsb
xor
sub
imul
cmp
enter
sbb
rep
or
dec
push
lret
add
pop
loopne
push
stos
mov
and
fwait
jecxz
cmpsb
popl
xlat
xchg
rcrl
jp
adc
xor
cld
add
mov
dec
sbb
or
not
fstps
inc
mov
sub
dec
rolb
push
imul
mov
sub
and
movsb
inc
call
xor
rclb
inc
xlat
lea
and
sbb
test
out
jns
mov
push
mov
jmp
sbb
sbb
mov
mov
jne
xchg
popf
aas
out
scas
je
push
add
repnz
stc
xchg
nop
gs
idivl
sti
fisttps
add
dec
xor
inc
sbb
sub
inc
mov
aaa
fmuls
pop
cwtl
pop
hlt
sbb
jg
fwait
lea
test
movl
xor
movsl
stos
xchg
sbb
ds
ret
inc
fwait
popa
mov
mov
sahf
add
jecxz
pop
rol
outsl
adc
jnp
cmpsb
mov
dec
fidivs
mov
andps
cmpsb
push
cmp
jns
jae
push
imul
shlb
rclb
int3
push
pop
inc
repnz
gs
mov
mov
dec
loopne
and
dec
push
insl
push
aas
adc
mov
cmc
and
sbb
pop
mov
cmp
decb
and
or
or
adc
sub
adc
add
sub
push
push
push
and
icebp
dec
jno
fbld
pop
xor
and
mov
adc
jmp
lcall
mov
inc
leave
loopne
loopne
push
jle
inc
push
mov
imul
out
rcr
ret
sbb
cmp
loope
pop
push
pop
pop
out
fisttpll
jbe
call
test
sbb
mov
daa
scas
mov
and
popf
sahf
adcl
cs
movsb
mov
outsb
arpl
lret
pushf
mov
mov
fisubl
push
add
ds
ljmp
fsubs
mov
testl
fisttps
cmp
inc
mov
int3
mov
dec
mov
dec
mov
or
add
inc
xorl
movsl
imul
gs
pop
rcr
mov
jb
mov
scas
xlat
in
int
fadd
adc
repnz
sub
std
sarb
sbb
movsl
pop
scas
or
cld
jbe
mov
push
dec
aad
push
inc
xor
filds
jmp
pop
mov
sub
cmp
inc
int
ret
xor
daa
push
stc
out
popa
in
cmp
mov
imulb
xchg
cmc
pop
xchg
push
loopne
push
xor
cmp
inc
sub
mov
aam
les
stc
rorl
out
and
ja
xorl
mov
xchg
scas
scas
scas
xor
or
or
jp
or
fs
ja
mov
adc
rorb
arpl
adc
mov
in
sar
fcomps
loopne
loope
popa
xor
jno
add
shll
shll
and
dec
imul
dec
outsb
add
lds
jg
sub
dec
leave
jp
sti
in
ficoms
xchg
and
inc
leave
push
icebp
jmp
xchg
adc
ss
ss
push
test
hlt
xor
ljmp
mov
cmp
lock
ret
dec
or
mov
xchg
shr
mov
adc
scas
pop
cmp
mov
pop
movsl
dec
adc
fnstenv
push
push
cmp
xor
cmp
mov
and
sbbb
xchg
aaa
and
xor
and
icebp
scas
jle
ss
mov
test
add
out
leave
lcall
xor
push
mov
jae
sub
insl
stos
xchg
gs
stos
sbb
in
and
imul
inc
cli
lds
xchg
cli
sbb
out
push
push
addr16
pop
adc
mov
cmpsb
enter
mov
and
xchg
adc
aad
adc
jge
sbb
enter
add
mov
ja
dec
ret
nop
mov
inc
out
das
mov
adc
fistpl
imul
jecxz
sbb
and
mov
sub
fcomi
in
gs
xlat
xchg
xor
add
test
inc
pop
xchg
js
or
lcall
cmp
lret
addb
popf
mov
cld
mov
or
adc
xchg
mov
arpl
insl
sub
xchg
cmp
shrl
sahf
pop
and
jle
xchg
xor
rolb
andb
mov
test
ret
mov
jno
xchg
pop
sbb
pop
aad
movsl
arpl
dec
jno
dec
bound
mov
shlb
push
shlb
cmpsb
xchg
fsubl
ds
adc
and
test
lret
loope
pop
cli
inc
icebp
and
shll
xor
add
push
pop
cmp
scas
fistpl
jl
cwtl
out
or
sahf
lea
or
ds
addr16
imul
sbbb
in
mov
addb
mov
push
push
xlat
cli
inc
std
xchg
inc
inc
negl
mov
inc
pop
cltd
mov
mov
mov
imul
scas
das
inc
add
out
stos
je
and
adcl
inc
xchg
dec
xchg
lret
jb
dec
aam
sbb
add
enter
daa
or
jbe
dec
and
sbb
xchg
int
clc
out
fisttpl
inc
jle
cli
fisubrs
jnp
pusha
inc
scas
arpl
and
hlt
sub
fdivl
dec
aad
sbb
rolb
xchg
xchg
inc
jmp
shrb
je
jne
daa
enter
jmp
mov
cmp
mul
in
and
adc
movl
xchg
xchg
daa
sbb
stos
insl
sub
mov
or
sbb
xchg
xchg
and
sub
jb
mov
dec
jge
pop
push
xchg
ret
mov
iret
cmpsb
lods
mov
cmp
lods
stos
xor
scas
icebp
mov
fwait
and
int
pop
out
xchg
bnd
lret
mov
iret
lea
xchg
pop
lret
pushf
rcl
dec
jae
push
cwtl
cltd
out
mov
jmp
loop
inc
mov
popf
sbb
inc
and
cmp
clc
call
cmpsb
iret
popa
inc
xchg
stc
mov
scas
cmp
loop
inc
mov
enter
pop
movsb
pop
shlb
adc
loop
cli
cld
out
xchg
mov
xchg
loop
sub
dec
cmpsb
or
shll
aam
in
call
push
add
sub
aas
sub
popf
mov
jp
stos
xchg
rolb
lcall
mov
push
cmp
stc
fs
ljmp
sbb
cmp
inc
vmovlpd
mov
push
lret
dec
leave
scas
cmp
adc
xor
lods
push
xor
and
arpl
mov
fs
cmpsb
mov
aad
mov
shll
mov
mov
loope
outsl
fimuls
push
dec
or
pushf
es
xchg
mov
mov
les
or
cs
dec
fs
enter
mov
mov
push
sbb
push
shl
mov
sbb
inc
push
fisubl
cmc
and
out
sub
test
or
cmc
or
sbb
push
fdivrs
dec
fwait
pushf
imul
and
out
enter
scas
jl
out
cmpsl
pop
mov
jnp
dec
mov
push
popf
inc
xor
out
xchg
cld
and
bound
push
loopne
lods
insl
scas
jae
pop
add
imul
mov
dec
mov
loopne
imul
mov
test
xor
out
pop
div
xor
inc
mov
jp
shr
popf
and
fs
sbb
or
push
xor
mov
adc
mov
or
xor
les
push
mov
cmp
push
fwait
and
ljmp
pop
lcall
cld
in
mov
xor
fnstsw
arpl
adc
inc
lds
and
or
addb
lret
xchg
in
jmp
dec
pop
jb
imul
es
push
adc
lock
mov
loop
sub
cmp
jge
or
idivl
dec
mov
ja
jmp
or
addr16
loop
stc
or
stos
mov
push
jl
scas
and
ss
aas
and
add
fistpl
fadds
adc
xchg
mov
mov
dec
xchg
fstpt
mov
cmp
repnz
ja
push
add
xor
xchg
adc
in
fidivs
std
pop
sbb
cmp
dec
jne
fistpll
sub
test
in
outsb
jns
enter
add
dec
in
rorb
ds
cmp
aaa
jb
xor
clc
lods
pop
jle
mov
stos
dec
sbb
jno
insb
xchg
lds
lcall
mov
lcall
out
jmp
push
dec
nop
jmp
cmp
stos
xchg
sbbl
outsl
std
cmp
cld
in
and
inc
in
subb
dec
jecxz
adc
outsb
pop
hlt
xchg
push
cmp
fcmovnb
fs
daa
inc
iret
mov
dec
js
ret
iret
cmp
sub
xchg
jmp
jg
cmp
sub
mov
fiadds
adc
dec
mov
xchg
add
dec
aaa
pop
orl
ds
in
and
test
push
aam
sti
lods
or
inc
pop
add
jl
sub
jle
cmc
pop
jg
mov
xchg
bnd
and
test
xor
fmuls
pop
aas
sub
jmp
decb
pop
push
out
lods
cmpsb
xor
jno
loope
ja
sub
inc
push
ljmp
and
addb
ret
je
bound
push
out
dec
sub
push
inc
gs
pop
enter
inc
mov
jecxz
xchg
sub
mov
inc
inc
addr16
mov
mov
push
add
bound
pop
jge
sbb
les
mov
jle
bnd
mov
testb
mov
inc
lret
ss
push
pop
je
xchg
cltd
jecxz
xor
fsubrs
js
sub
imul
mov
sub
push
sub
ljmp
clc
adc
fildl
inc
stos
inc
mov
inc
jno
push
notb
sub
pop
nop
stos
ret
sbb
sub
inc
dec
dec
pmulhuw
or
fadds
mov
lods
inc
out
mul
mov
adc
mov
pop
shrl
add
rol
scas
push
imul
mov
lahf
pop
icebp
and
das
xor
cmp
subb
mov
pop
adc
adc
mov
pop
frstor
push
push
incl
addr16
test
or
das
mov
fimull
cmp
fistpl
sub
or
imul
cli
xor
mov
das
xchg
aas
jb
or
test
in
ss
add
jge
mov
fbld
repz
pop
xchg
dec
xchg
jnp
aad
mov
dec
mov
mov
outsb
cmpsl
enter
movsb
and
xchg
cltd
xor
sbb
and
ret
jmp
nop
xor
inc
bound
push
add
imul
negb
daa
repz
mov
insl
jmp
cmp
rclb
iret
in
dec
sub
add
mov
push
pop
pop
loope
je
int
aaa
xchg
dec
adc
data16
arpl
movb
std
orb
pop
pushf
movl
jae
repnz
xchg
mov
mov
pop
push
push
into
jbe
adc
jecxz
sbb
xor
fldt
mov
aaa
xchg
jle
cs
cmp
and
inc
xor
int3
add
aaa
lret
push
mov
aaa
in
push
push
dec
xchg
jp
pop
out
xchg
or
mov
cmp
sti
mov
or
cmpsb
xchg
jmp
scas
cli
push
imull
std
xor
stos
shlb
xchg
jns
mov
lock
fdivl
and
enter
cli
repnz
mov
sub
pmovmskb
cwtl
push
mov
test
inc
daa
stos
aam
push
cmp
mov
aad
idivb
xor
arpl
or
data16
push
dec
pop
push
add
add
push
and
jmp
aas
cmpsb
sub
addb
cmp
lods
fdivrl
dec
les
pop
inc
push
sbb
adc
jbe
mov
je
dec
repz
imul
sbb
icebp
shr
xor
sahf
leave
inc
xor
stos
mov
stc
mov
insb
pop
insl
orl
leave
cmpsl
adc
add
lods
cmp
xchg
sub
xchg
inc
cmc
out
adc
test
inc
icebp
dec
cmp
nop
test
leave
xchg
idivb
push
subl
lahf
mov
cmp
insl
mov
negl
dec
cmp
enter
mov
sbb
loop
adc
lods
pop
inc
xor
sub
cmp
jno
sbb
test
push
jno
pop
in
nop
jbe
dec
mov
mov
imul
imul
es
sub
sub
sar
repnz
roll
dec
cs
mov
imul
or
fidivrl
or
ds
jge
jle
js
fdivs
pop
gs
lret
loopne
sbb
aam
jne
in
or
in
cld
xor
fwait
js
js
in
lahf
mov
aam
fidivrs
stos
in
fsubrp
std
outsl
cmp
mov
adc
inc
xor
push
addr16
jbe
test
sbb
inc
jo
fbstp
ret
and
out
cmc
push
sub
dec
mov
jle
mov
pop
out
inc
or
and
lods
cmpsb
add
movsb
pop
add
scas
adc
lahf
lcall
jno
dec
mov
xor
pmaddwd
cli
dec
pushf
push
dec
loope
xlat
push
xor
sbb
or
pop
mov
subl
scas
imul
enter
xchg
jns
or
andl
icebp
fwait
pop
adc
imul
outsl
inc
lcall
and
xchg
mov
les
repnz
pop
leave
pusha
push
adc
daa
bound
push
lods
icebp
or
out
add
dec
jl
xlat
pop
xor
push
cld
or
scas
shlb
bound
add
es
or
push
inc
cmpsl
and
xchg
mov
push
sarl
lea
sbb
and
clc
dec
sub
test
mov
xor
xchg
or
shrl
sub
or
lret
and
iret
cltd
mov
arpl
lret
lds
jo
out
mov
cmp
fmull
cmp
inc
jg
leave
push
jno
mov
dec
jne
push
dec
cmp
repz
rorl
stc
bound
sub
inc
cmovg
jmp
xchg
ret
push
mov
adc
aaa
pop
add
sbb
jge
dec
ds
cmc
loop
push
and
js
sbb
enter
adc
sbb
mov
clc
jne
cmp
xor
out
push
pop
cli
lea
jl
pop
mov
and
jbe
imul
and
mov
adc
and
jb
int
stos
cmpl
ds
pop
pop
pop
or
cmpsl
inc
inc
push
fs
inc
daa
inc
aam
push
movsb
mov
jnp
cmpsl
cmpsl
lret
mov
cld
adc
push
and
lret
fnsave
addr16
adc
add
mov
gs
dec
mov
jnp
dec
shl
cld
out
pop
test
sbb
and
cmc
testl
inc
xor
push
xchg
or
dec
xchg
test
xchg
jge
mov
and
rclb
pop
inc
cld
jns
int3
daa
push
leave
rorb
andl
add
mov
ja
push
hlt
jecxz
imul
cld
and
pop
mov
xor
sbb
push
add
lea
loopne
insl
test
mov
ret
sub
add
jmp
icebp
lcall
ret
lods
xor
inc
stc
mov
imul
sub
rorb
add
mov
test
xchg
xorl
shll
lods
adc
xchg
jo
or
call
lds
leave
sub
aas
scas
lods
repz
je
mov
fs
mov
xchg
xchg
push
ds
adc
xor
daa
cld
xchg
mov
cli
push
enter
adc
in
jb
pushf
or
and
daa
push
int3
fisttpll
gs
push
cwtl
mov
xor
jp
sub
push
adc
aas
mov
ret
outsb
jmp
mov
cs
inc
push
xchg
inc
adc
test
popf
test
mov
jne
pop
into
dec
fadds
dec
loopne
or
mov
mov
dec
clc
mov
lcall
sti
movswl
fstpt
addr16
setne
rclb
cmp
lret
bnd
in
inc
popl
dec
popf
mov
push
loop
pop
cmp
sub
inc
test
aam
pop
pop
popf
mov
mov
shl
insl
dec
mov
fsubrl
pop
or
mov
mov
and
inc
lods
test
pop
cmpsl
loop,pt
adc
mov
adc
xchg
push
sbb
mov
cwtl
fsubrl
gs
out
push
pop
inc
iret
dec
fstp
cs
in
imul
ja
stos
rcl
xor
cmpsb
push
and
out
stc
jmp
aam
out
cmp
dec
imul
fimuls
mov
xchg
sbb
inc
sbb
and
repz
cmp
mov
popf
outsb
jle
mov
fistpl
xchg
leave
movsl
fsubrs
fwait
adc
push
lods
ret
mov
pop
mov
add
aaa
repz
fwait
icebp
in
sub
xchg
mov
adc
xchg
mov
aas
mov
insl
fnstcw
rol
push
lods
ret
jg
popf
adc
loope
ss
adc
mov
cli
jl
xor
sbb
das
lods
inc
repnz
pushf
xlat
jl
test
int
in
xor
scas
js
jnp
pushf
les
pushf
out
out
out
call
imul
cli
imul
mov
jecxz
adc
popa
call
jno
test
sub
jbe
mov
addr16
stos
test
cmpb
int
pop
xchg
jmp
mov
sub
mov
xchg
xchg
push
inc
addr16
xor
mov
test
push
pop
xchg
out
gs
aas
sbb
sub
mov
fsubrl
aam
pop
pop
dec
jle
sbb
cmc
adc
int3
fcomps
jbe
out
cwtl
inc
enter
push
xchg
jno
dec
xchg
mov
add
dec
xor
lods
jge
sahf
pop
pusha
xchg
push
in
cmc
jne
or
add
stc
jns
ss
xorl
xor
jnp
inc
andl
sbb
mov
and
mov
call
inc
leave
lcall
jo
jbe
hlt
ds
push
fidivrs
cmp
lcall
cwtl
xchg
mov
lret
mov
ja
popa
or
adc
pop
adc
gs
mov
clc
mov
dec
es
movsb
insb
icebp
jbe
pop
divb
mov
test
sti
ret
notl
pause
mull
adc
xchg
push
inc
ret
cli
xchg
pop
test
loop
dec
and
jle
aad
repnz
jmp
lret
sub
inc
setnp
addr16
fs
ret
dec
out
fistpl
lock
scas
arpl
xlat
pop
repnz
lcall
int3
adc
stos
clc
xchg
in
or
push
rcl
sahf
and
and
cmc
out
cli
push
push
in
xchg
dec
loope
repnz
lea
faddl
sub
xor
or
fsubrl
dec
mov
mov
rcll
lahf
lds
sbb
pop
ja
push
xchg
shlb
into
sbb
arpl
lods
sbbb
insl
xchg
popf
iret
ss
push
mov
ljmp
or
and
xlat
insb
inc
mov
pop
inc
and
xlat
les
in
adc
mov
pusha
push
sbb
les
rorl
sbb
push
ljmp
inc
ja
pop
push
sbb
or
and
test
ds
mov
int3
xchg
gs
out
sub
mov
sbb
insb
imul
push
mov
sbb
repnz
push
test
js
div
xchg
mov
cmp
daa
inc
js
movsl
les
xchg
fld
cmpsl
dec
ja
mov
stos
das
mov
pop
out
xchg
push
loop
ret
mov
enter
push
cmp
adc
or
mov
cmp
popa
sbb
das
xor
push
jge
mov
in
mov
loope
sub
pop
test
and
imul
mov
pop
call
add
jg
fimuls
lret
cmpsb
adc
add
mov
mov
mov
push
pop
adc
push
xchg
imull
xchg
push
sbb
scas
in
pop
arpl
insl
mov
and
xor
adc
xchg
jbe
rorb
aam
fsubl
into
outsb
jg
scas
div
jno
cmp
test
xor
mov
popa
cmp
sub
jg
cmp
test
jmp
addr16
inc
lret
jno
mov
or
rolb
addb
xchg
jns
pusha
test
cmpsl
xor
adc
mov
cwtl
ds
xchg
dec
ficoms
fistpl
stos
push
pop
in
rcr
fs
add
in
mov
mov
aam
sbb
out
adc
pop
fistpl
xor
and
test
mov
mov
xchg
pop
cmp
inc
test
push
imul
xchg
fistpl
test
sbb
adc
mov
jl
jg
or
ficoml
xor
int
out
xor
xor
push
push
inc
inc
and
mov
idiv
mov
add
mov
jecxz
mov
and
inc
pop
dec
xrelease
rorl
ret
sbb
push
flds
xlat
push
and
fsubrp
aas
cmp
dec
jno
xchg
push
fwait
test
insb
int
inc
shrb
cmp
mov
mov
or
xor
aam
sbb
add
dec
int3
lahf
push
popf
out
jbe
movsl
insb
xchg
ljmp
rcr
addr16
mov
test
js
daa
or
cmc
daa
or
pop
sbb
daa
xor
pop
fsubrs
mov
loop
fsubrs
jno
adcl
sti
mov
cmp
fwait
lods
cmp
add
test
bound
test
adc
ss
add
in
outsb
pop
mov
dec
gs
cwtl
scas
sub
xor
xchg
orb
iret
mov
je
xor
dec
rorl
stc
jae
or
dec
rcrl
dec
repnz
cld
dec
fcmove
mov
cmp
xlat
dec
xor
cmp
imul
push
or
into
pop
jp
push
pop
push
js
or
pushf
sahf
ljmp
inc
pushf
jecxz
sbb
cmp
sahf
bound
out
pop
loop
mov
sub
jb
jb
testb
or
decl
jmp
imul
and
test
sub
mov
ret
adc
or
mov
xor
mov
sbb
cmp
cltd
daa
test
ret
sub
jg
add
movsl
mov
or
into
xchg
cld
iret
xor
ret
call
es
and
aas
dec
ss
mov
sbb
lret
das
cmp
lret
add
push
inc
lahf
dec
clc
aaa
xchg
pop
popf
mov
hlt
pusha
and
mov
dec
ficoms
fcompl
mov
lret
loope
mov
popf
jl
rclb
xchg
dec
inc
js
mov
je
in
mov
imul
insl
jp
movsb
lods
subb
mov
push
out
push
and
out
cwtl
shr
add
mov
or
jge
repz
cmc
dec
pop
fdivrp
sub
sahf
xor
mov
hlt
test
sbb
sub
jg
aam
stc
dec
pop
test
icebp
inc
fmuls
xchg
add
fdivrl
mov
inc
push
add
mov
and
dec
mov
xor
mull
cld
fcoml
outsb
sti
sbb
jge
dec
fnstenv
push
push
cli
xchg
out
leave
mov
in
test
xchg
sbb
xchg
cwtl
std
sub
rcrb
in
cmpsl
mov
mov
test
lock
xchg
mov
scas
dec
jns
jle
fs
jns
ja
pop
push
movsl
push
inc
mov
dec
outsl
xchg
pop
incl
push
test
add
pusha
inc
xchg
scas
cmp
jle
in
lret
mov
gs
mov
jl
popaw
or
inc
mov
mov
pop
fmuls
sti
xchg
xlat
jmp
jmp
jl
mov
out
or
sub
or
mov
adc
out
mov
addl
fstps
xor
pushf
in
test
xchg
in
mov
out
push
sub
in
enter
stos
push
xchg
mov
scas
sub
mov
jg
insb
and
iret
xchg
ret
jge
adc
and
mov
and
rclb
loop
sub
cmpsl
inc
adc
in
mov
and
sub
je
push
iret
add
inc
aas
mov
out
vmovupd
cmpl
out
movsb
repnz
cltd
scas
or
pop
push
hlt
dec
imul
and
imul
sub
sub
cmp
xchg
scas
pop
cmc
xchg
repnz
or
pop
mov
loop
mov
out
popf
ss
sbb
pop
dec
bound
sbb
sub
cmpsb
repz
mov
pusha
movsl
xchg
mov
fstpt
lea
add
sub
jmp
xor
fists
adc
scas
out
sub
and
leave
mov
dec
cmp
pop
jae
sub
das
popf
mov
insl
iret
int
and
push
mov
sub
mov
sbb
dec
mov
div
sbb
aad
roll
inc
mov
mov
hlt
fwait
ret
cmp
aaa
fimull
pop
sahf
out
cltd
fdivr
sbb
mov
mov
loop
int
and
xchg
cltd
mov
push
sbb
idivl
mov
sar
jns
inc
inc
in
loop
cmp
pushf
lret
cli
mov
fs
pusha
xor
push
cli
lret
shll
mov
lret
mov
fmul
sbb
mov
push
inc
jmp
idiv
addr16
push
cwtl
push
sub
icebp
mov
inc
std
shl
and
xchg
aaa
push
ret
sbb
shll
push
and
aaa
mov
test
bound
dec
cmp
outsl
mov
lods
xchg
push
mov
outsl
cltd
inc
dec
divl
lret
xchg
bound
mov
psubd
stos
mov
out
mov
dec
jge
andl
insl
or
and
in
jmp
insb
imul
addr16
fisttpll
inc
push
push
mov
mov
sub
notl
add
ret
sarl
push
jb
mov
mov
call
insb
sbb
dec
mov
or
leave
cmp
int3
and
cs
add
cli
inc
push
outsb
mov
jp
movsl
jae
incb
push
pusha
pop
lcall
push
cmpl
sub
shll
inc
pop
inc
cmp
fildll
and
mov
push
fwait
daa
lcall
adc
pop
movsl
sub
mov
aad
std
aaa
pop
iret
xchg
sub
cli
into
dec
jb
int3
out
mov
movsl
inc
rolb
fcomps
mov
pop
dec
adc
pushl
push
call
dec
or
fdivs
pop
sub
or
ret
je
xchg
and
fbld
mov
cmp
sub
mov
mov
pop
jb
lods
pusha
mov
data16
xchg
or
xor
mov
push
push
xchg
mov
xchg
in
push
mov
sbb
jp
sti
cmp
outsl
pushf
jbe
mov
loopne
in
jl
pop
nop
xor
pop
imul
push
dec
or
lahf
popf
lahf
out
scas
fstl
dec
inc
push
jo
xchg
movsl
dec
ret
jge
xchg
es
out
inc
pusha
subl
inc
or
mov
mov
xchg
outsb
in
cmp
enter
xchg
jne
xchg
in
push
test
imul
das
mov
aaa
xchg
cwtl
and
andb
xorl
mov
mov
clc
dec
mov
movsb
lret
mov
adc
sub
cwtl
xor
sub
adcl
mov
push
int
stos
ficompl
cmp
mov
push
es
dec
mov
das
arpl
loopne
aaa
imul
jb,pn
fildl
inc
mov
and
inc
out
push
push
into
shlb
adcb
orb
push
or
clc
test
xor
xchg
cmpsb
xchg
cmp
das
lds
and
cmp
add
push
cmp
daa
xchg
dec
mov
cmpsb
lret
std
push
xchg
loope
mov
mov
pop
dec
pop
inc
jo
push
mov
xor
jno
mov
dec
rorl
cmp
movl
aad
push
addr16
mov
sub
push
sbb
iret
and
frstor
jnp
mov
and
dec
pop
loop
add
cmp
ret
mov
lods
mov
out
int
popf
sbb
adc
sahf
pop
data16
xchg
jno
jge
loopne
mov
xlat
xchg
xor
out
loope
add
fucomp
int
sub
xchg
jge
inc
fs
out
pushf
inc
or
popf
loopne
subb
mov
icebp
aas
mov
movsb
push
sub
jae
in
loop
leavew
push
test
sbb
test
stc
negl
lret
push
mov
adc
mov
jmp
repnz
cltd
dec
in
mov
or
push
fnstcw
cmc
in
inc
sub
jmp
mov
xor
push
cs
leave
cmpsb
mov
xor
into
lock
ret
inc
inc
xchg
sbb
fucomp
sarb
push
push
in
aaa
jnp
popf
or
jp
aaa
add
fwait
shll
mov
jecxz
pushf
or
stos
xchg
inc
dec
push
enter
test
hlt
inc
adc
mov
dec
das
jb
cmp
in
jo
mov
cmp
pop
add
cltd
jo
dec
push
or
lods
sub
and
dec
outsl
clc
enter
add
lock
fwait
jbe
lock
dec
mov
cmp
or
mov
les
ds
insb
pop
rol
je
orl
jmp
daa
sbb
push
xchg
mov
lcall
adc
fsubl
popf
in
xor
aas
imulb
sbb
mov
sub
jp
out
cli
dec
sarl
dec
hlt
rcrl
int3
loopne
sub
and
cmp
adc
xchg
ss
out
jg
cmp
aas
enter
jne
xor
pusha
adc
popa
adc
cs
jmp
mov
add
jns
jecxz
adc
cmc
test
jmp
shrb
and
popf
stos
fcomip
lds
mov
mov
loope
div
xor
loope
cltd
pop
movl
lock
pusha
arpl
jbe
movsl
sub
or
sbb
mov
popf
subl
hlt
aad
cmpsl
jecxz
dec
jmp
setns
stos
out
into
mov
inc
daa
inc
cmp
cli
mov
cmpsl
pop
jnp
test
fimuls
das
cmp
ss
jp
fsubrs
cmp
and
scas
fwait
and
mov
xor
in
lcall
dec
mov
fisubl
outsl
inc
mov
cmp
sub
jp
xchg
rorl
cmp
sti
mov
cmp
add
cmp
in
mov
mov
cmp
mov
adc
dec
call
mov
pop
sahf
stos
xor
push
and
mov
xchg
cltd
inc
mov
adc
xchg
or
addl
sahf
adcl
ret
sub
dec
sbb
scas
into
or
add
das
and
sbb
into
mov
test
mov
mov
mov
or
movsl
dec
dec
ss
fmuls
xor
faddp
dec
xchg
and
xchg
sub
scas
add
xor
mov
adcb
pop
pop
xor
movsb
adc
mov
mov
xlat
lret
imul
push
adc
adc
loope
cmpsb
in
ss
add
out
dec
jns
movsb
cwtl
jge
ja
mov
jmp
cltd
lods
neg
or
dec
adc
xchg
jmp
je
call
push
inc
lock
add
mov
cltd
xchg
sbb
cmp
in
sahf
cli
xor
xchg
xor
sti
push
sub
pop
stos
data16
lret
arpl
or
fstp
rcrl
test
lcall
pop
cmc
mov
inc
cmp
pmaxsw
adcl
and
sub
imul
push
push
test
bound
std
xor
js
ret
add
jbe
sti
outsb
cmp
xor
dec
push
cmpsl
pop
scas
mov
aam
push
shrb
pushf
mov
sub
cmp
push
fnsave
xchg
mov
xchg
xor
mov
repz
scas
sbb
sbb
add
daa
or
or
jns
int
sbb
jnp
shlb
in
dec
pop
loope
dec
imul
push
push
iret
jmp
jae
mov
jb
sarb
and
cmp
popa
iret
push
dec
dec
test
loop
pop
or
xor
call
lock
jmp
cmpsl
mov
add
test
push
fsts
stc
test
std
jecxz
or
push
adc
out
subb
mov
loope
cmc
dec
inc
sub
gs
rcl
mov
cmc
jecxz
adc
or
pushf
xor
inc
gs
adc
test
xchg
jmp
xor
icebp
inc
mov
pop
repz
xchg
push
pushl
sub
into
xchg
cmpsb
cmp
pop
in
stos
push
xchg
xor
mov
pop
lret
movsl
scas
sbb
push
dec
sbb
cmp
in
cmp
sar
cmp
dec
xchg
cmp
iret
push
mov
xor
dec
adc
jle
jg
das
jl
lahf
lret
pop
dec
jmp
das
fbstp
int3
jbe
subl
cli
or
pop
mov
dec
test
hlt
jnp
adc
or
das
xchg
add
insl
sbb
lds
mov
push
sahf
subl
add
pushf
cmp
jmp
dec
or
mov
fisttpl
push
fs
mov
in
in
cld
xchg
sbb
xchg
test
xor
inc
cmp
icebp
jge
mov
xor
push
push
jmp
inc
xor
inc
jne
insb
insb
shlb
jp
mov
sbb
cltd
pmaxub
xor
bound
pop
test
cmp
mov
sub
push
mov
jle
xor
dec
cld
adc
jecxz
mov
xor
push
add
jge
cmp
ja
mov
decb
std
push
divb
xchg
adc
int3
pop
icebp
jl
fcoml
cltd
mov
mov
pop
xchg
adc
mov
sbb
jbe
mov
andb
mov
les
adc
dec
cmp
fimuls
int3
pop
push
dec
and
sub
push
jg
add
jnp
xchg
mov
mov
jnp
bound
out
jl
je
outsl
mov
cmp
in
mov
sub
fdiv
jb
imul
mov
push
sub
fmul
sbb
mov
subl
ds
push
lret
add
bound
test
lcall
xor
int3
jmp
xlat
sbb
out
xor
push
femms
push
mov
dec
jno
in
inc
push
js
xchg
mov
outsb
in
pop
in
out
imull
roll
adc
sbb
sbb
mov
imul
daa
xchg
sarl
pop
stos
loope
fnstsw
adc
cmp
jbe
xor
shl
dec
in
xchg
mov
icebp
cmpsb
add
addr16
xor
sahf
lock
lcall
sbb
cwtl
pop
cmpsl
ds
fisttps
inc
ja
inc
or
shlb
jae
je
pusha
xchg
icebp
cmp
xor
pop
sahf
pop
fdivs
ss
call
xchg
mov
sti
mov
sbb
jbe
jmp
mov
add
lret
and
icebp
hlt
adc
out
sub
pushf
xchg
mov
addr16
adc
mov
aas
pop
aad
jp
bound
std
sbb
test
pushf
cmpsl
hlt
xchg
cmp
int
mov
inc
std
or
or
insb
call
bound
sbb
and
das
pop
stc
pop
lcall
sbb
ret
fmull
or
inc
movsl
push
sbb
jne
jo
test
scas
loop
inc
cmp
jecxz
fld
sbbb
jp
das
int3
stos
inc
pop
bound
hlt
pop
mov
xchg
in
push
sub
cmp
xlat
push
xor
in
cltd
mov
in
shlb
jle
xor
in
mov
clc
inc
out
in
mov
cli
movsl
push
cmc
xchg
sbb
push
adc
in
daa
add
mov
or
mov
cli
pusha
adc
jns
mov
jmp
jb
sub
orl
fsubs
push
fwait
or
adc
loop
dec
in
xchg
and
and
lret
adc
mov
mov
adcl
sbb
add
cmp
xorb
ret
mov
sbb
mov
sub
jns
cmpsl
mov
mov
lret
mov
cs
add
mov
aaa
mul
out
xchg
aaa
lret
gs
fdiv
mov
fists
add
and
rcrb
je
push
jo
xor
inc
test
xor
lahf
nop
sub
adc
or
cmpsb
scas
dec
inc
inc
jne
imul
xchg
adc
sbb
or
jecxz
add
leave
sbb
sbb
pop
pop
fs
stc
lahf
sbb
mov
adc
inc
mov
lods
pop
cltd
or
dec
pop
cmp
mov
je
cmp
jns
repnz
fbstp
push
jnp
or
push
inc
fcom
mov
inc
pop
dec
lcall
xorb
flds
sub
ljmp
xor
rcll
scas
adc
subl
dec
and
cmp
and
jno
xchg
inc
sub
loop
jl
add
lret
jae
das
mov
xlat
ja
lods
push
dec
xchg
testl
int3
enter
flds
cmc
std
xchg
test
dec
dec
sub
jbe,pn
gs
imul
xchg
jmp
out
pop
add
std
popf
pop
add
sbb
push
mov
mov
jmp
adc
cmp
adc
fst
sbbl
in
pop
bound
add
fildll
loop
sbb
xor
add
xor
mov
push
bnd
aam
and
xor
cmp
xor
mov
lock
into
sub
xchg
xchg
movsl
icebp
jl
xor
sti
dec
addr16
fidivs
push
pop
and
pusha
call
in
pop
pop
push
pop
cmp
inc
cmp
mov
cli
jmp
push
xchg
lds
mov
jle
cmp
push
push
js
ficoml
pop
fidivl
je
mov
or
iret
mul
xchg
andl
add
cmp
pop
jnp
rorb
push
fisubrs
sub
repnz
and
scas
in
xchg
xor
pop
imul
mov
popf
insl
sbb
std
ss
imul
jmp
xlat
pop
fnsave
adc
pop
cmpsl
mov
sbb
mov
fadds
inc
jmp
jnp
push
loope
ja
fs
cmp
outsl
scas
cmp
xchg
mov
push
xor
stos
ds
adc
pop
mov
out
jecxz
add
mov
xor
sub
push
inc
sbb
addr16
sbb
dec
or
mov
xchg
or
fidivs
pop
mov
add
add
mov
insl
lahf
sbbb
push
mov
pop
cmpl
or
pop
xchg
clc
ficoms
pop
cli
xchg
mov
add
cmp
xchg
movsl
mov
pop
ret
or
xor
sbb
push
xor
and
push
aad
push
add
pop
xchg
jb
xor
int3
mov
out
xor
push
sbb
cs
adc
popf
lret
repnz
xchg
mov
adc
leave
sti
daa
sbbl
movl
lods
push
jmp
xchg
out
mov
jns
jb
popf
testb
in
sbb
xchg
js
push
sbb
push
mov
mov
mulb
pop
cmp
dec
jb
xchg
mov
and
mov
sub
repnz
jl
or
mov
xor
mov
cmc
xor
or
push
cmc
or
adc
sbb
mov
lahf
or
aam
das
mov
cmp
pusha
push
clc
lods
pop
int3
scas
scas
cmp
daa
dec
xor
arpl
paddusw
add
cmp
sbbb
daa
stos
cwtl
mov
les
mov
pop
sbb
pop
xor
notb
fistpll
out
mov
lret
mov
xchg
cwtl
xor
add
jp
jp
xor
stos
push
out
add
mov
dec
add
ret
adc
lods
adc
ror
sbb
iret
shl
mov
imul
loopne
in
inc
int
jmp
out
jnp
sbbl
fdivs
pop
imul
or
xchg
mov
and
fucomp
lcall
ret
frstor
pushf
xor
sbb
fdivl
sti
add
or
jmp
leave
repnz
aas
jecxz
mov
pop
dec
xchg
sub
push
clc
push
outsb
pop
sub
sbb
or
minps
adc
frstor
in
outsl
mov
xor
and
push
jns
xor
xchg
xor
push
lret
je
inc
xchg
adcb
push
loopne
jmp
xchg
out
mov
and
sbb
cwtl
mov
push
mov
pop
mov
sbb
dec
aam
mov
cmp
in
xor
adcl
push
xor
pop
and
xor
push
cli
mov
and
leave
lahf
repnz
sub
stc
popf
push
cmp
scas
push
jb
cli
cmc
lahf
and
sti
sub
or
xchg
test
rorl
push
icebp
adc
fstps
aad
or
imul
jns
icebp
ja
repnz
cmp
inc
mov
inc
mov
inc
jmp
pop
mov
mov
mov
add
inc
sbb
push
pop
push
lcall
cmp
mov
pop
fsubs
test
fildll
shl
xchg
mov
adc
inc
repnz
cmpl
mov
dec
fisttps
or
lret
fnop
stos
adcb
std
cld
mov
push
sbb
andb
xchg
add
inc
xchg
jb
fidivl
pushw
js
mov
jns
rorl
ds
inc
lock
ja
xchg
out
jbe
push
int
scas
jo
jg
ljmp
ficoml
and
call
sbb
jg
out
sub
stos
cmp
dec
loop
xor
imul
out
push
stc
mov
adc
sbb
push
sbb
cs
xchg
inc
cli
popa
aam
push
ficoms
xor
iret
mov
lods
mov
xchg
andl
ja
out
xor
es
sbb
xchg
mov
push
test
scas
pop
rcr
dec
ss
lock
pop
outsl
add
sbb
arpl
adc
mov
inc
cltd
lcall
add
mov
jmp
jns
ret
push
ja
outsb
gs
adc
mov
xchg
xchg
into
sub
aam
mov
or
enter
mov
jno
shl
cltd
cmp
mov
out
in
gs
add
ret
pop
pop
add
dec
jne
xor
inc
mov
test
mov
mov
cmpsb
lret
push
pusha
jmp
inc
scas
in
fs
jb
jne
lock
sbb
mov
inc
fidivrl
stc
andb
xor
xlat
lds
inc
call
rorb
sbb
out
lret
mov
fisttpll
push
adc
aad
cmp
or
cmp
mov
pushf
cltd
fdivrl
jle
lods
mov
out
stos
sub
std
sub
mov
addr16
cmp
push
mov
jno
pushf
cmp
sbb
rcll
int3
pop
push
mov
cmpsb
mov
sub
pop
push
adc
adc
cmp
dec
int
movsl
and
mov
xchg
into
nop
movsl
mov
and
mov
cmp
xchg
loop
push
ljmp
loopne
outsb
xor
les
jmp
jb
mov
xor
lods
jns
pop
pop
pop
loope
jmp
push
sub
cmp
lahf
shr
push
into
loope
ret
aas
lahf
mov
sub
out
push
repz
insb
cmpsl
push
xchg
inc
add
xchg
sbb
adcl
cmp
and
or
add
adc
push
fs
mov
inc
pop
test
sahf
sub
fistl
jle
dec
fcoml
insl
out
cmp
movsl
xchg
xchg
cmp
pop
sbb
add
pop
push
mov
cmc
add
or
xor
jmp
scas
icebp
add
mov
jge
and
mov
insl
icebp
jge
lret
scas
mov
insl
out
inc
dec
les
sub
into
out
imul
loopw
push
xor
cmpsl
lret
aam
xor
lods
stc
insb
aad
mov
jl
lods
mov
mov
add
jge
idivl
jae
std
mov
or
jno
sub
scas
pop
cltd
or
scas
std
push
mov
shlb
or
pop
mov
pop
add
and
out
mov
sub
lahf
fisttpl
xchg
test
push
inc
cmp
mov
cld
push
mov
inc
dec
pop
sub
enter
sub
jns
jo
jmp
xor
outsb
imul
rorb
mov
repz
aaa
dec
les
push
mov
and
push
lds
leave
fcomps
cmp
jecxz
mov
push
cmp
cld
cmp
sahf
and
sbb
dec
es
inc
addr16
pop
or
xchg
mov
ss
sub
ja
inc
lods
cmp
and
jge
mov
mov
mov
sar
xchg
sub
xchg
cmp
cmp
ficompl
xchg
int3
lret
movsb
push
pop
out
mov
cmc
hlt
lods
push
int
divl
lret
mov
dec
push
shll
cld
mov
dec
push
or
rclb
jo
push
daa
jb
cltd
loop
adc
loopew
fstpt
cmc
sbb
jl
icebp
shlb
insl
dec
cli
jmp
push
insl
or
jnp
test
leave
push
rcrl
fwait
xor
push
mov
jbe
sbb
dec
sti
dec
and
push
mov
test
cwtl
das
jge,pn
mov
fcomip
sub
sub
sbb
or
mov
inc
mov
push
dec
dec
xchg
sub
ja
ja
mov
jle
popa
pop
fcompl
stc
or
fldl
data16
repnz
mov
gs
xchg
movsl
mov
xor
sbbb
hlt
das
pop
or
dec
add
pop
sbb
loopne
sbb
pop
inc
mov
push
loopne
jmp
pop
nop
pop
fcmovnbe
nop
mov
or
or
movsl
popa
addr16
notl
mov
dec
andb
dec
roll
or
lods
xchg
jbe
inc
out
push
stos
jge
mov
push
std
cld
lcall
ljmp
roll
xchg
xlat
stos
cmpsb
lret
jmp
adcb
sti
loopne
dec
in
sub
div
jg
repz
mov
pop
cmpsl
mov
jo
rclb
pop
and
mov
imul
mov
adc
mov
xchg
into
sti
aaa
je
cmp
leave
outsl
out
je
fcomps
fmul
add
mov
and
jnp
stos
scas
and
jnp
ljmp
xor
jb
std
xchg
xor
push
or
mov
inc
push
shrb
mov
xor
mov
outsb
pop
jmp
sub
sub
testl
inc
jecxz
xchg
rcrl
cmpsl
pop
fidivrl
out
mov
cmpsl
dec
push
pop
fwait
mov
pushf
jle
jmp
mov
ljmp
call
test
aaa
int
xor
jb
lret
pop
jnp
call
cld
shll
enter
xchg
and
mov
xor
push
enter
shr
in
lods
jno
and
subl
xchg
sub
loope
pop
add
mov
mov
stos
fnstsw
pusha
aas
mov
lret
stos
adc
cmp
cmpsl
sbb
in
lcall
leave
call
adc
sub
nop
lock
test
jl
or
inc
out
or
ret
scas
fisubs
test
fs
leave
cmp
ss
push
lds
loope
outsl
out
xchg
lds
data16
cld
xchg
insl
push
or
shll
inc
mov
fisubrs
sub
jbe
mov
sti
mov
mov
dec
fisubs
sbb
movsl
hlt
jae
nop
sub
or
dec
ret
leave
cmp
mov
stos
je
sub
push
mov
jp
mov
sbb
xchg
jg
mov
test
push
lods
xchg
mov
push
cmpsl
xchg
adc
iret
or
mov
mov
mov
pop
or
add
jb
iret
pop
out
imul
add
cli
ret
dec
lods
sbb
push
iret
out
stc
and
mov
add
add
sub
scas
xlat
adc
repz
mov
adc
xor
bound
mov
jge
cmp
loop
xor
sbb
adc
add
jne
jb
iret
add
inc
ds
push
adc
mov
lahf
mov
movsb
outsl
rcl
sbb
mull
sbb
xchg
push
into
scas
mov
js
and
jge
inc
movsl
cmp
je,pt
in
mov
ficomps
movsb
repz
push
pop
inc
out
xorb
and
add
xor
xchg
les
imul
mov
in
insb
repz
mov
mov
mov
mov
jns
jmp
jp
sahf
mov
and
cmp
dec
push
sahf
enter
fbld
lods
mov
pop
mov
das
mov
jle
mov
sbb
fidivl
ds
test
sti
jb
dec
and
or
rcrl
ss
push
jmp
push
pop
hlt
test
cltd
out
out
jns
pop
inc
inc
rcr
mov
fnstsw
bsf
sbbb
pop
push
push
sub
dec
jne
lods
cmp
cmpsb
mov
adc
sub
push
icebp
push
or
add
mov
es
notb
xchg
jp
xchg
ja
jecxz
adc
pop
bound
aas
imul
jns
out
lret
add
je
jge
shll
loopne
bound
fsts
int3
pushf
jno
ds
loope
arpl
mov
cmpsb
in
addb
test
loopne
and
ljmp
lea
inc
lods
lods
fisubrs
call
cld
push
and
mov
jns
xchg
or
xchg
filds
xchg
nop
xchg
sbbl
and
and
inc
push
sub
cmp
out
or
xor
inc
or
and
shll
sbb
icebp
ret
fdivs
das
scas
rclb
cmpsb
lret
mov
sbb
movb
les
addr16
fnstenv
cmpsl
ja
divb
pop
ss
sbb
pop
in
adc
out
addb
cmpsb
inc
out
das
pushf
adc
dec
add
fnstsw
gs
arpl
and
xlat
std
mov
hlt
outsb
sbb
and
in
pop
fxch
push
jmp
scas
pusha
mov
stos
pop
test
dec
lods
dec
and
sub
into
int3
fcmovb
mov
movsl
arpl
notb
and
sbb
das
dec
mov
jno
mov
mov
sub
je
sahf
icebp
bound
iret
jle
push
sub
aad
dec
insl
inc
mov
dec
mov
nop
dec
pop
iret
out
sbb
data16
jbe
mov
sub
fistpl
and
cmpb
push
std
jb
add
push
push
lcall
sahf
leave
test
add
jmp
xchg
ljmp
and
pusha
or
xor
fs
sub
aas
stos
sbb
jge
push
mov
test
and
ret
inc
cwtl
jb
sub
inc
rcrb
adc
lock
adc
cmp
xor
xchg
test
mov
jg
cmp
cs
xor
cmpsb
ss
dec
jmp
push
mov
dec
pop
inc
test
imul
cmp
mov
aas
jl
jne
xchg
rcl
mov
add
xor
clc
imul
xor
push
test
mov
adc
cmp
jg
repz
adc
in
push
adc
fisttpll
rorb
mov
sub
loop
jl
jle
addr16
and
xchg
pushf
mov
fists
push
jnp
adc
sbb
xor
dec
cwtl
adc
in
mov
fidivrs
fs
push
jl
add
enter
xor
or
xor
and
int3
out
xor
mov
sahf
ret
add
insl
adc
xchg
jae
xchg
mov
mov
lahf
xor
pusha
aas
test
scas
sbb
add
in
jle
or
scas
xchg
hlt
jle
loope
fs
mov
push
add
add
sbb
push
xlat
xchg
jmp
sbb
xchg
hlt
xchg
in
jo
jne
fadds
and
in
jnp
jge
jno
insb
bound
sbb
and
sti
nop
and
addr16
test
or
inc
xchg
push
and
imul
shrl
clc
mov
add
lret
clc
test
js
in
dec
fbstp
pop
mov
cwtl
cmp
jecxz
dec
jno
mov
cmp
jnp
add
pop
test
mov
or
shrl
pop
or
dec
add
pop
pop
jnp
test
add
push
sarb
dec
test
es
pop
enter
sti
lahf
repnz
movsb
pop
dec
cwtl
std
in
insl
aam
outsl
lea
pop
pushw
enter
je
ljmp
enter
sbb
dec
les
cmp
push
sbb
inc
shrb
into
mov
int3
cwtl
push
repnz
in
mov
pushl
lea
fistl
xchg
push
jl
or
pop
hlt
xchg
mov
push
xor
mov
xor
ja
dec
sbb
push
mov
sbb
ret
faddl
aaa
pop
lret
movups
jecxz
inc
cmp
and
xchg
adc
lcall
dec
and
push
fnstenv
dec
xlat
lret
aam
sub
pop
adc
xor
pop
outsl
lcall
test
dec
cmp
or
fistpl
mov
cli
add
push
std
dec
adc
movsb
fisubl
cs
inc
jns
xor
iret
pusha
scas
aas
push
aaa
aaa
mov
push
xor
cli
pop
mov
push
fdivrs
xchg
pushf
movsb
movsb
xchg
ficoms
mov
add
insb
shrb
add
xchg
pop
sub
inc
mov
xchg
mov
test
jecxz
xchg
xor
movsb
sub
mov
lcall
out
ja
outsl
cli
scas
mov
das
pop
iret
imul
idivb
lret
dec
ret
scas
or
sbb
in
push
add
test
xchg
jl
stos
mov
mov
push
jge
xchg
out
push
cmp
push
inc
pop
lahf
pop
sub
mov
pop
or
jp
int
loopne
shrl
or
xadd
add
push
inc
sub
push
cmpl
push
test
iret
bound
das
xlat
in
inc
faddl
or
push
movsl
pop
inc
adcl
dec
pop
jnp
push
mov
and
fsub
lods
popl
mov
mov
cmc
xchg
in
into
add
les
and
mov
xchg
enter
cli
sub
mov
xor
rcrb
dec
into
pop
jb
pop
add
lcall
jmp
or
mov
imul
sub
mov
pusha
pop
push
dec
stos
out
test
add
in
lret
mov
mov
sub
and
push
pop
out
das
mov
push
pushf
outsl
sbb
fcmovnb
sbb
mov
add
into
movsl
cmp
dec
push
loop
cmpsb
mov
dec
mov
movsl
and
sub
cmp
xor
dec
fcomps
out
or
inc
lods
mov
scas
add
movsl
add
lret
out
outsb
outsl
dec
push
fsts
mov
pop
jne
jp
jnp
cmp
fsub
or
add
xchg
xlat
add
cmp
xchg
cmp
cmpsl
or
xchg
pushf
pop
adc
cmp
rorb
data16
jge
xlat
or
xchg
mov
fildll
push
sbb
mov
mov
lcall
scas
movsb
lret
mov
mov
fcompl
andnps
xchg
cmp
jo
ljmp
pop
notl
pop
pop
cmp
popa
test
rorb
stos
cli
and
add
dec
xlat
jecxz
and
cmp
les
ds
gs
cld
mov
data16
fidivrl
sahf
int3
and
shlb
push
mov
adc
movhps
ret
xchg
insl
lock
or
and
xchg
mov
leave
data16
xchg
aam
jo
dec
push
lea
outsl
out
adcl
inc
inc
test
push
loop
loop
adc
notb
pop
aam
mov
pop
movsb
in
scas
add
call
shrl
sbb
bound
sub
and
xchg
xor
sbb
imul
out
mov
xchg
insb
mov
and
outsl
jne
mov
sbb
pop
and
xchg
jns
mov
mov
jns
add
mov
outsl
xchg
inc
jl
jbe
cmp
push
xor
dec
das
aam
mov
test
xor
negl
push
insb
dec
popa
mov
jl
insl
lcall
nop
mov
test
lds
ret
js
pushf
pop
outsl
lret
push
pop
sbb
mov
sti
les
or
jns
xchg
jl
iret
sti
jg
add
adc
test
pushl
add
or
loopne
lret
or
mov
mov
mov
mov
push
mov
xor
cmc
lods
adc
iret
pushf
or
loop
inc
inc
sub
subl
xchg
mov
mov
pop
or
dec
out
adc
dec
lahf
test
add
scas
out
lret
pop
scas
sub
pop
jmp
cltd
push
adcl
inc
cmp
pushf
inc
cmp
push
fdivp
sub
jno
push
inc
xchg
in
push
shrl
shrl
imul
cmp
push
cmc
pop
lcall
repnz
jne
in
inc
adc
dec
add
loop
mov
mov
inc
add
clc
fwait
ret
pop
jle
cltd
and
aaa
sub
stos
mov
clc
or
xchg
mov
inc
mov
mov
scas
fcoms
inc
mov
test
leave
sub
xor
inc
ds
aam
iret
lea
js
into
std
or
js
js
cmp
jg
hlt
int
and
fdivs
ljmp
add
sub
mov
pushf
adc
and
push
sbb
arpl
inc
call
stc
test
and
push
add
out
imul
test
mov
push
mov
lods
sbb
dec
adc
adc
dec
mov
outsb
xchg
sbb
mov
jb
xchg
scas
push
loop
jge
push
jno
mov
fadds
jae
mov
sbb
daa
gs
mov
inc
cmp
movl
hlt
jle
inc
arpl
repnz
shr
imul
in
fnstcw
mov
mov
mov
sub
ret
jmp
loop
or
xor
mov
xchg
push
pop
popl
mov
dec
sub
mov
pusha
mov
incb
adc
in
push
or
sbb
mov
add
mov
pop
ss
fbstp
jmp
cs
stos
ds
mov
xor
je
fldl
or
std
and
jecxz
adc
mov
int3
ret
int3
adc
scas
lret
lock
add
idiv
fisubrl
pop
test
gs
inc
pop
shll
dec
inc
sub
icebp
les
aam
aaa
xchg
and
adc
mov
addr16
pop
es
test
jne
out
insl
jle
addr16
jo
dec
and
fs
mull
sub
adc
ret
jne
adc
int3
std
fsubrp
cltd
sbb
pop
inc
mov
cld
dec
int3
mov
pop
sbb
jmp
pusha
adcb
xchg
mov
mov
mov
popf
enter
hlt
shrl
xchg
loopne
dec
mov
adc
les
xchg
dec
adc
jmp
out
xor
sub
push
mov
cmc
or
xor
daa
xchg
jae
xchg
push
mov
xchg
push
fstps
xor
loope
sbb
cmpb
fs
sbb
mov
push
sub
nop
xlat
add
sbb
cmp
insl
mov
sub
xchg
jnp
adc
js
add
test
lret
push
add
push
les
in
push
jmp
mov
movsl
clc
scas
lret
push
adc
dec
xor
aam
push
fcomps
adc
xor
mov
movsl
cs
add
rcrl
cmp
pushf
addr16
push
out
dec
outsl
push
in
mov
ret
mov
pusha
inc
scas
sar
cmp
scas
ja
dec
icebp
sub
int3
jecxz
ja
cwtl
enter
sbb
in
and
ss
xlat
or
movups
ss
dec
into
loope
xor
adc
cmp
repnz
push
xor
daa
cli
mov
mov
sarb
lahf
push
sbb
clc
lock
fsubrl
popf
fistps
xor
pop
test
mov
inc
push
sub
dec
mov
and
inc
vmptrst
cmpb
inc
adc
mov
popf
gs
sahf
fwait
mov
pop
sbb
push
lret
lods
test
push
add
jb
rolb
xor
or
clc
mov
shlb
cld
mov
adcb
std
jecxz
xor
dec
sub
fwait
lret
sbbb
pushf
sti
sbb
popa
daa
iret
cmp
lock
pop
cli
inc
cli
adc
idiv
mov
and
inc
fidivrl
pop
pop
lea
or
int
mov
aam
ljmp
movsb
test
data16
add
stos
dec
mov
insl
mov
adc
mov
clc
outsl
push
test
js
push
lods
arpl
sarl
push
sub
pop
sub
mov
jo
jo
test
pop
push
mov
sub
ret
jo
mov
adc
imul
mov
aaa
lahf
bound
cmp
call
push
int
mov
jecxz
into
ja
bound
mov
call
sub
clc
add
and
push
into
ja
lret
test
dec
inc
push
mov
push
lahf
mov
leave
enter
jp
sbb
out
repz
shl
pop
mov
jmp
lds
dec
test
sub
pop
and
pop
mov
or
xchg
pop
popf
push
mov
outsl
fldl
mov
jl
lods
test
mov
outsl
pop
fstpl
pop
add
jle
cmp
add
xlat
cmpsl
inc
sti
aad
push
pop
ss
fnstenv
sbb
fdivrp
cmp
and
push
aad
scas
lods
dec
divb
dec
jle
add
orl
iret
ret
jb
adc
or
aaa
mov
push
cmp
call
in
ret
mov
xchg
sbb
jo
jmp
fidivrl
pop
jmp
fwait
lods
movsb
jmp
loopne
cmp
xchg
cmp
adc
jno
jno
ss
mov
pop
xchg
push
das
fnstcw
cmp
sbb
sarl
push
cwtl
fwait
addl
ja
ja
cmp
pop
int
mov
push
adc
in
in
js
mov
lahf
lret
enter
movsl
push
mov
xchg
sahf
sbb
push
int3
sahf
pushf
add
dec
jmp
inc
pop
stc
push
stos
jp
les
enter
mov
push
pop
push
mov
repnz
or
stos
imull
cli
xor
lcall
and
sbb
mov
popf
cmc
lcall
lret
sbb
inc
ss
lcall
ljmp
push
cmpsb
xor
mov
and
test
xchg
jbe
aas
sbb
mov
cmp
and
jg
pop
inc
mov
or
pop
xor
dec
iret
sahf
sub
lock
repnz
mov
in
dec
inc
test
cltd
pop
mov
sbb
ss
pop
imul
jns
inc
dec
fdivs
jbe
leave
jmp
repz
adc
aam
rorb
push
iret
shll
cmpsl
pop
inc
fsts
test
outsb
fcompl
in
mov
aaa
fcomps
shl
dec
add
mov
adc
movsl
sbb
xor
cld
notb
test
jg
sbb
lcall
add
icebp
pop
enter
adc
pop
xor
sub
xchg
adc
les
daa
push
pusha
rcll
mov
push
rcrb
jnp
lods
jle
xchg
in
aas
scas
jge
push
rclb
fsubl
fldl
jg
xchg
divb
mov
arpl
sbb
dec
clc
cmc
cltd
xchg
xor
into
sti
mov
dec
ret
fistl
pushl
jmp
rclb
jae
sarl
lea
xchg
and
xchg
xor
gs
add
mov
xorl
mov
add
out
loope
add
lret
mov
std
rclb
push
popf
cmp
insl
sub
jp
cmpsl
lock
fcmove
scas
mov
dec
jecxz
xor
mov
mov
stos
pop
xchg
or
loop
std
sbb
test
sbb
cmp
rorl
add
aas
aam
imul
xchg
jecxz
getsec
push
test
jl
test
in
pop
push
jmp
jecxz
xlat
inc
or
or
pop
add
push
out
mov
mov
in
daa
rcrb
mov
xor
mov
sub
lods
movzbl
and
xchg
imul
cltd
cmp
fwait
sbb
loopne
pop
xlat
ret
xchg
and
sub
ja
jae
addr16
mov
xor
int
sub
sbb
mov
jle
jge
gs
jge
xor
in
incb
addr16
pop
mov
sbb
imul
cmpsb
out
sub
clc
inc
test
stos
and
fwait
xchg
pop
pop
insl
mov
inc
popa
jp
adc
push
call
outsb
cmpsl
mov
in
ret
xchg
mov
jns
push
inc
and
cs
addb
repnz
xchg
out
shr
adc
mov
sbb
jle
mov
pop
add
mov
mov
lahf
pop
mov
pop
push
notb
and
test
dec
faddp
or
sub
test
xlat
pop
lds
dec
mov
arpl
dec
pop
lock
push
outsl
xchg
inc
lret
or
push
loop
xchg
jle
imul
and
sti
pop
add
pop
cmp
int
inc
and
das
aaa
sbb
gs
mov
ljmp
xchg
inc
cmp
aas
add
push
fwait
push
cmp
mov
cmp
jmp
cli
pop
jbe
jmp
and
lret
jg
and
or
xor
call
ret
jl
adc
jl
loope
xor
mov
pop
pop
dec
xchg
cmpsb
push
inc
pop
ja
inc
mov
mov
jb
ret
mov
ljmp
and
adc
loopne
cltd
incb
push
fists
fwait
sbb
inc
dec
jnp
fs
sub
push
xchg
mov
push
and
loop
xchg
jno
pop
cld
sub
or
xlat
lret
enter
lods
jne
setp
adc
addr16
cs
xor
sub
sbb
or
mov
xor
sub
sti
hlt
test
js
mov
xchg
aad
pop
popa
iret
das
mov
lret
sti
jb
xor
idivb
loop
push
push
into
pop
movl
shl
xchg
sti
into
mov
mov
or
pusha
icebp
mov
ss
shrb
repz
inc
loopne
enter
dec
lock
sarl
add
movsl
loop
pop
adc
push
das
mov
loope
loop
ret
das
ficompl
inc
xor
ss
mov
in
mov
dec
andb
jl
pop
or
mov
call
sbb
es
sub
dec
stos
xchg
jnp
les
adc
or
js
cs
gs
mov
xor
xchg
leave
xlat
andl
and
ret
lret
jp
pop
push
sbb
idivl
xor
data16
lret
out
cmpsb
in
pop
push
iret
inc
lahf
rclb
hlt
sti
ja
xor
shlb
inc
mov
cmp
lcall
std
jg
test
test
and
cwtl
lea
negb
cmpb
data16
fcoms
mov
test
ret
pop
push
ss
mov
mov
nop
loop
movsl
in
inc
out
sub
sbb
jns
adc
pusha
xchg
stos
xchg
out
into
pop
or
repnz
ss
es
jecxz
icebp
fisttpl
pop
and
cmp
roll
cmp
or
mov
bound
stos
sub
rcrb
stos
jne
mov
sub
dec
cmp
es
cmc
lock
ja
repz
mov
mov
push
clc
stc
nop
outsl
js
xorl
pop
sub
lahf
sbb
out
std
xorb
lea
dec
lahf
sbb
jge
add
xchg
jae
outsb
xor
dec
aas
inc
lock
scas
push
out
xor
ret
jno
sbb
xchg
les
cmc
std
pop
pop
aam
fisttpll
xchg
nop
jg
test
mov
xlat
inc
inc
jmp
and
jecxz
mov
sbb
adc
push
cmp
enter
notl
add
movsb
mov
stos
dec
dec
hlt
inc
popa
addr16
rcll
jno
cmp
ljmp
loop
loope
sar
loopne
inc
pop
aam
iret
pop
shrl
in
cmpsb
push
xchg
xchg
cmp
mov
jg
aas
rcrl
mov
cs
in
xchg
pop
aad
mov
mov
jae
fstps
imulb
insb
cmc
scas
inc
xor
sub
mov
jg
dec
int3
jno
lock
mov
mov
insl
pop
jae
add
mov
mov
push
nop
jbe
adc
jmp
jno
push
popa
fisubs
ret
sub
push
sbb
enter
imul
add
jnp
and
sub
jns
lock
notl
ds
mov
dec
jno
lods
lahf
ret
subb
fidivrs
fcmovu
lds
repz
pusha
cmp
or
fisttpl
pushl
mov
adc
jne
and
and
outsl
inc
xchg
mov
push
mov
push
repnz
cmpsl
call
sbb
jg
jge
es
adc
rorl
jns
loopne
jo
adc
cltd
repnz
int3
jne
les
into
fcomps
hlt
mov
pop
pop
fwait
lods
cmp
cmp
jae
pushf
sar
mov
hlt
and
xchg
in
popl
xor
adc
xchg
mov
xor
and
xchg
fisubrs
xchg
or
pop
inc
lea
sub
repz
jg
mov
mov
or
das
aaa
adc
jmp
adc
jp
sub
push
mov
jbe
cmc
iret
aad
stos
cmpsl
leave
adc
in
ret
into
call
test
pop
mov
pextrw
inc
sti
push
and
sti
leave
inc
cmpsl
sarl
jmp
out
jge
fldcw
add
insb
movsl
jnp
xchg
in
mov
fcmovbe
loope
inc
clc
add
mov
fcmovb
cwtl
lods
mov
inc
insb
adc
pop
or
je
mov
bound
xchg
jecxz
jbe
fwait
cwtl
jp
push
push
mov
out
gs
inc
ret
frstor
xor
push
out
push
outsb
push
loop
sbb
xchg
arpl
sahf
jnp,pt
iret
ljmp
adc
pop
inc
inc
popf
or
xlat
adc
sbb
and
or
imul
adc
sbb
jbe
fisubs
cwtl
push
xchg
mov
and
enter
sub
or
mov
mov
loop
out
outsl
sub
lret
adc
lea
mov
jle
out
adc
stos
outsl
or
rcr
push
xlat
xor
pop
in
push
adc
mov
mov
leave
push
or
pop
test
in
scas
sbb
out
jbe
adcb
int3
or
mov
into
add
mov
hlt
mov
cmp
push
stc
mov
loop
jp
push
es
addb
loopne
loop
pop
inc
or
xor
in
loop
xchg
mov
in
lea
or
leave
lods
add
lret
outsb
fsubs
fldenv
jno
int
dec
and
les
cmp
push
gs
aaa
test
mov
push
lds
push
in
mov
mov
shr
scas
inc
mov
sbbb
insl
jbe
xchg
add
mov
mov
push
lea
mov
pop
arpl
jns
call
cmp
add
cmp
scas
adc
jge
jl
gs
xchg
sub
push
xchg
cwtl
in
clc
je
xchg
fildll
sbb
jns
adcl
xchg
popa
mov
pop
cmc
test
inc
mov
imul
in
add
out
inc
shlb
mov
pushf
cmpsb
repz
clc
ret
jb
mov
aam
mov
repz
cmpl
das
and
scas
psrlw
mov
inc
int3
iret
fidivs
mov
inc
jp
add
xor
adc
cmp
lods
imul
and
lds
jmp
idivb
cmc
mov
fwait
mov
or
sbb
and
jbe
inc
leave
inc
adcl
roll
roll
data16
out
dec
adc
aad
add
inc
jle
test
arpl
xlat
push
push
call
dec
stos
movntq
js
andb
imul
push
xchg
pop
mov
in
movsb
xchg
and
mov
js
jmp
ja
movsb
xchg
cmp
pushf
adc
je
fisubl
pop
inc
xchg
adc
sbb
rcr
in
dec
fs
xchg
push
fildll
pusha
and
lds
sbb
ret
lahf
lds
enter
daa
push
jne
rcl
adc
nop
xchg
imul
sahf
jle
or
fsubl
outsb
std
cmp
inc
js
push
jo
or
xor
jne
shl
sbb
fdivrl
jno
mov
fdivrp
push
cmpl
inc
pusha
sti
mov
stc
out
cld
ror
sbb
fistpl
mov
testb
loopne
push
lods
and
out
sahf
stos
dec
push
mov
sbb
ja
imul
push
sub
jns
sbb
js
jl
push
loop
push
ret
lret
jg
loop
mov
pop
int
sbb
insb
jmp
int3
mov
sbb
je
shr
scas
jecxz
loopne
aam
pop
in
push
repz
mov
adc
sub
adc
push
jle
xor
or
lret
sbb
cmp
addl
pusha
jp
shrb
cmp
mov
aaa
test
scas
pop
jge
in
movsl
ficompl
xchg
mov
int3
into
cs
push
or
loope
sahf
inc
push
adc
mov
fisttps
cmp
cmp
mov
xor
aad
and
lcall
jnp
fsub
pop
mov
push
mov
leave
rorl
ljmp
mov
inc
or
dec
subl
sbb
clc
mov
insl
xchg
sarb
and
shl
idivl
push
xchg
mov
int3
fcom
cmp
lock
dec
dec
mov
and
aaa
icebp
test
sbb
imul
xchg
insb
mov
rcr
sbb
sub
movsl
push
xor
xor
add
aas
adcb
lcall
out
xor
and
insb
pop
ret
out
movsl
cmpsl
xchg
out
pop
iret
push
xor
jb
outsb
fcmovbe
std
and
andb
xor
mov
aas
mov
aas
in
mov
push
popf
pusha
shlb
cmp
push
add
push
je
loope
push
pop
test
adc
mov
xchg
aad
leave
jecxz
mov
mov
and
add
or
loop
xchg
push
ja
ss
addr16
lds
shll
das
cmp
shll
cmp
arpl
addr16
pop
jno
jno
inc
cld
sub
repz
and
fnstsw
push
in
mov
push
and
out
aaa
push
fcomps
outsl
cltd
xor
adc
xchg
es
and
jp
imul
fcomps
scas
xchg
mov
sahf
paddsw
dec
xor
inc
mov
clc
aaa
mov
or
xchg
movsb
cmp
push
incl
lods
and
mov
adcb
jmp
in
jb
fstps
lods
aad
jnp
aad
adc
ja
sarb
sub
sub
jge
add
lahf
adc
inc
rorb
scas
inc
cmp
mov
test
sahf
lock
cmc
inc
gs
movsb
je
push
sbb
inc
bound
out
aam
jg
xchg
and
inc
inc
insb
sub
mov
pop
mov
aaa
adc
jo
cmp
and
cmp
aaa
ja
nop
call
jnp
cmova
push
pop
dec
loop
fists
mov
mov
out
jns
and
mov
mov
or
ficoml
mov
sbb
loop
mov
subl
and
ljmp
mov
gs
cwtl
xchg
enter
mov
xor
aam
xchg
or
movsl
sub
shl
xor
fdivp
sti
jns
or
dec
sub
xchg
xor
add
pop
mov
movsl
pop
lds
jno
mov
pop
sub
xchg
mov
adc
push
addr16
aaa
cmp
sbb
dec
call
lea
and
and
mov
out
push
mov
sub
mov
and
in
cmp
fldt
scas
insl
pop
mov
cmp
push
dec
mov
outsl
jns
jmp
push
in
and
adc
dec
sahf
stos
jnp
in
pushf
inc
mov
lods
or
sbb
int
cltd
jnp
lret
or
movsb
jecxz
es
shll
inc
pop
sub
mov
cmp
ljmp
pop
jge
push
stos
cmpsb
inc
pop
ds
add
jo
scas
lret
lea
cmp
push
hlt
push
ds
lcall
lahf
lods
ret
mov
iret
push
sahf
lds
into
sub
cmp
or
sub
mov
insl
dec
xchg
aam
mov
sub
rcrb
ja
cmp
ja
orb
into
bound
test
outsb
and
test
outsl
sub
xor
lock
faddl
sub
stc
xchg
or
shrl
jmp
dec
lds
sub
pusha
mov
aad
cmp
fs
push
loop
mov
xchg
out
aaa
mov
xor
cmpsb
mov
repz
pop
cs
push
addr16
scas
push
dec
jmp
lds
loope
xchg
jg
out
outsl
xchg
aaa
mov
fwait
sbb
jmp
inc
jp
pop
xor
sub
cmp
dec
xchg
pop
inc
lahf
rcrl
jecxz
sub
mov
cmp
jbe
sbb
xchg
test
mov
das
imul
adc
inc
mov
mov
pop
add
and
shl
and
lds
loope
push
sbb
cmp
scas
daa
mov
mov
in
outsb
dec
mov
xor
pop
mov
les
xchg
mov
sahf
adc
and
xchg
fisttpll
jns
scas
out
xor
pop
add
ret
mov
inc
or
or
mov
shrb
sub
cmc
movsb
cltd
insb
mov
insb
lock
xor
push
lock
dec
inc
mov
aaa
mov
pop
mov
pusha
into
cltd
inc
leave
fwait
aam
scas
mov
jne
add
add
dec
add
std
jge
mov
mov
outsb
xchg
push
clc
jg
sub
js
out
and
mov
xchg
mov
lahf
xchg
dec
mov
xchg
out
nop
jne
je
adc
mov
cltd
pop
imul
sub
mov
sbb
and
test
pushf
aaa
inc
out
divl
jb
inc
insl
push
and
xchg
outsl
or
in
cli
movsb
push
push
sbb
je
adc
test
cmp
iret
jno
inc
push
sarl
push
testb
out
ja
mov
aad
sub
push
ret
mov
test
popa
jne
xor
loop
mov
movzbl
movsb
pshufw
add
cwtl
inc
js
dec
dec
jl
adc
repz
ficoms
xchg
adc
and
je
adc
in
scas
push
adc
popf
ret
push
outsb
enter
dec
aaa
loop
int3
sbb
xchg
inc
mov
push
arpl
ds
sti
xor
dec
jl
adc
xor
mov
inc
imul
cld
repnz
scas
ja
inc
mov
fwait
lret
cmp
sarl
insb
aas
xchg
loopne
and
inc
mov
je
jle
xor
or
mov
mov
mov
outsb
cmp
outsl
lds
ja
and
clc
lods
xor
out
stc
push
aad
sub
sub
inc
ljmp
adc
enter
pop
xchg
ror
mov
jo
sub
mov
inc
xchg
jns
scas
sub
jb
dec
push
test
ljmp
out
imul
xchg
pop
lods
es
fwait
cmp
adc
jno
mov
jne
insl
dec
sbb
push
push
and
ljmp
ja
jnp
push
jnp
pop
dec
mov
jno
add
out
das
outsl
xchg
into
jg
nop
std
enter
cmpsl
and
scas
outsl
push
pop
pop
push
sub
addr16
push
movsl
popa
push
je
push
std
dec
xor
and
aam
push
adc
shlb
cld
or
aaa
lock
xchg
inc
clc
stos
pop
dec
iret
insb
cli
movsl
icebp
mov
mov
pop
in
xchg
jno
ja
sub
jae
ds
cli
cmp
lock
dec
mov
mov
sbb
xchg
pop
je
imul
inc
jae
pop
test
fwait
gs
mov
test
out
setne
das
sub
jae
les
cmpsb
sub
jmp
jmp
pop
aas
sar
push
inc
push
addl
gs
out
push
mov
out
ds
popf
mov
xchg
sbb
imul
xchg
aad
fisttpll
push
cmpsb
xor
test
sti
xchg
jp
jp
mov
cmp
lea
xchg
aas
in
mov
pop
and
cmpsb
sub
push
or
push
pop
icebp
add
loop
mov
adc
sbb
push
mov
jg
stos
xlat
push
jecxz
and
fs
and
jl
sub
cmp
dec
frstor
int3
andl
leave
lods
inc
fldenv
movsb
sub
shr
shl
inc
fs
jmp
addr16
outsl
daa
sub
xchg
cmp
mov
lahf
dec
or
jbe
in
mov
call
fisubrs
xor
mov
mov
adc
test
leave
sbb
mov
push
rcrb
cs
into
xor
mov
insb
test
les
ss
xor
push
int3
push
scas
mov
dec
and
dec
sub
push
mov
js
push
cwtl
cmp
out
fisttpl
daa
out
ljmp
les
gs
lds
push
aad
call
cmp
lcall
mov
or
mov
lcall
je
inc
inc
cmp
int
cmp
push
push
or
dec
test
imul
cs
in
sub
lcall
and
scas
loop
nop
imul
fidivl
es
xchg
mov
loopne
js
or
dec
mov
fmul
pop
stc
cmp
push
roll
cltd
sbb
hlt
cli
clc
pushf
inc
sahf
adc
push
xorl
push
inc
orl
pop
cmp
fcmovu
sbbl
shl
je
or
scas
scas
into
or
clc
xor
jmp
int
cs
movsb
dec
nop
loopew
aam
cmp
mov
aaa
xchg
scas
lret
mov
pop
push
addl
xchg
mov
gs
fnsave
jnp
dec
dec
fwait
xor
add
sub
and
call
loopne
sbb
cltd
inc
lcall
inc
dec
popa
inc
pop
call
test
xchg
cmp
push
out
pop
add
jne
xor
pushf
daa
bound
and
push
jmp
xchg
and
and
adc
mov
ss
mov
sbbl
jle
jae
pop
sub
test
adc
or
jae
xor
test
mov
or
and
or
pop
pop
scas
lods
ret
cli
daa
inc
nop
cs
adc
add
add
fidivrl
loop
or
shlb
push
mov
xchg
jge
dec
adc
lea
push
fidivrs
jne
adc
mov
xor
dec
xchg
dec
js
xchg
movsl
or
cltd
or
fstl
push
adc
xor
fbld
test
jmp
jbe
std
daa
inc
push
cmpsl
jmp
sti
andl
pop
outsl
mov
fsub
jmp
mov
sbb
pop
int
xor
push
test
mov
mov
sbb
lds
cmp
vmulsd
aas
ret
jle
xor
ljmp
loopne
test
pop
inc
push
and
dec
xor
add
rcrb
lds
sbb
mov
aad
cwtl
lds
lock
push
bound
in
dec
jns
imul
mov
add
mov
sub
mov
jne
shlb
mov
dec
mov
fcoml
imul
stos
xor
rorl
icebp
or
and
paddq
aas
scas
cmp
mov
sub
call
mov
mov
adc
addr16
push
lret
arpl
sbbl
mov
mov
add
mov
lea
pop
cmp
enter
inc
jne
push
mov
gs
mov
cmp
loope
or
iret
and
pop
cmpsb
pop
add
stc
add
push
pop
andl
aad
inc
nop
add
stos
ret
inc
mov
icebp
test
inc
clc
int
mov
pop
imul
sahf
out
sub
mov
clts
testl
rol
add
push
pop
and
mov
stos
add
push
sub
jae
aas
sub
loopne
ds
into
movsb
sbb
jo
mov
ret
and
cmp
adc
sub
rol
add
and
loope
mov
cmc
xchg
and
xor
frstor
call
sbb
mov
inc
jns
mov
enter
add
adc
aas
mov
mov
mov
add
cli
adc
je
pop
xchg
fwait
in
into
repnz
aas
mov
mov
in
or
adc
jge
les
add
mov
pop
in
shrl
sub
stos
xchg
cmp
lea
test
sub
and
int3
cli
jl
in
mov
jge
pop
not
jg
in
cmp
bound
pusha
iret
and
mov
adcl
inc
loopne
xchg
or
nop
out
mov
push
adc
jle
ret
dec
mov
dec
or
push
int3
imul
shlb
mov
enter
dec
stc
test
cmp
jp
enter
outsl
or
add
roll
and
pop
inc
sahf
xchg
lods
mov
addl
inc
inc
pushf
inc
repz
bound
xor
repnz
jmp
jp
sub
or
pushf
sarl
add
jno
ja
jp
add
jnp
out
mov
pop
mov
push
lods
insl
stc
cmpb
ret
sbb
lahf
mov
jb
mov
in
nop
sub
pop
in
fldt
inc
xchg
adc
pop
icebp
shlb
daa
adc
shr
jle
in
cmp
shrl
ss
lods
jle
aas
movsb
sub
pusha
jno,pt
fs
insb
ljmp
push
push
addr16
pusha
mov
mov
ret
shll
or
jge
and
test
add
negl
mov
stos
and
insb
sbb
and
jns
xchg
clc
lahf
test
and
outsl
and
add
test
add
jne
int
or
pop
inc
cmp
sub
lock
and
test
pop
rcr
cmp
jb
and
push
and
cwtl
cmp
xchg
pop
subb
mov
filds
bound
jle
adc
sbb
pop
call
sti
lret
xor
pop
jbe
fwait
in
js
es
movsl
mov
call
arpl
or
adc
in
sti
sarb
add
inc
repnz
add
or
stos
out
lds
lea
mov
movsb
sub
pop
dec
outsb
ja
je
cmpsb
dec
sbb
insl
test
out
xchg
lock
jle
dec
icebp
mov
pop
aaa
mov
mov
cs
scas
leave
push
rcrl
int
pop
mov
lret
daa
in
push
adc
add
out
dec
popa
icebp
lahf
addr16
mov
adc
stos
mov
in
mov
rorl
ret
xchg
ljmp
push
pop
xor
sub
fs
les
mov
cld
cmp
lds
jecxz
and
xchg
inc
cmp
inc
sub
pop
push
mov
je
ret
inc
sbb
outsb
mov
sub
mov
jne
dec
shlb
pusha
loope
inc
outsl
dec
mov
add
jl
xchg
rol
in
mov
pop
sbb
aam
push
mov
mov
loopne
xchg
inc
xchg
pop
sbb
inc
adc
ret
dec
add
inc
shl
push
dec
xorb
jl
mov
in
and
lcall
push
push
fwait
pop
enter
rclb
fwait
or
mov
fs
or
jle
mov
cmp
into
mov
je
adc
pushf
xlat
add
pop
jne
inc
nop
ds
sub
xor
jne
mov
jmp
mov
or
mov
stc
mov
pop
mov
es
sub
lahf
xor
js
shlb
pop
mov
sbb
push
test
or
leave
cmp
mov
sti
pusha
arpl
into
subl
xor
add
outsb
xchg
cli
sbb
mov
mov
imull
pushf
lret
push
sub
add
push
test
aam
mov
fidivrl
adc
pushf
inc
xor
lods
and
xchg
data16
das
rcrl
push
inc
mov
xor
cmpsl
in
test
push
jns
mov
xor
cli
adc
push
imulb
mov
sub
dec
nop
mov
or
mov
cmp
sbb
sub
out
out
adc
iret
rclb
cmpb
cmpsl
xor
pop
test
shrb
dec
test
and
out
nop
cmp
sbb
sbb
lret
xchg
pusha
repz
mov
adc
add
stos
push
out
mov
jbe
hlt
mov
call
fcmovne
in
mov
push
cmp
imul
stos
ds
sub
je
loop
jbe
mov
fs
mov
mov
push
hlt
sub
xor
int
pushf
data16
inc
scas
enter
mov
pop
outsl
lcall
inc
xlat
mov
stc
jecxz
xor
bnd
cmp
pop
xchg
repnz
repz
jmp
mov
test
jg
mov
xchg
in
pop
push
cmc
pop
sahf
sbb
jbe
inc
cs
rorb
sub
aam
rorb
and
scas
fsubs
xor
push
add
pushf
mov
in
push
mov
jge
hlt
and
adc
adc
pop
jne
mov
int3
ds
xor
xchg
clc
dec
mov
nop
cmp
std
add
lahf
dec
arpl
jle
jns
jo
inc
les
pop
jo
les
enter
and
popa
fistl
sarl
bound
inc
cli
fiaddl
call
jl
test
mov
fs
jge
jg
sbb
aam
sub
pushl
push
and
mov
jns
pop
dec
xchg
repnz
into
out
mov
push
loop
cmp
cmpsb
out
push
mov
test
mov
movsb
pop
lret
fwait
subb
pop
mov
jle
je
add
xor
inc
dec
ret
outsb
loopne
dec
lret
sbb
int3
movsb
and
mov
fcom
sti
cmp
lds
mov
or
clc
sbb
and
mov
sbb
sti
lock
sub
pop
mov
push
jecxz
lret
add
cmp
push
shll
fstps
sbb
sub
jp
repz
cmpsl
inc
mov
insl
jns
inc
sahf
mov
xor
mov
fwait
sbb
push
mov
ds
imul
xchg
push
stos
int3
stc
test
mov
aad
test
aas
pop
call
les
pop
aad
jmp
jne
pop
ret
jnp
and
mov
cmpsb
adc
movsl
sub
jg
out
shlb
inc
sub
mov
cmp
cmp
pop
orl
cld
aad
lret
xchg
out
repz
icebp
int3
cltd
xlat
out
xor
test
mov
iret
push
xor
loop
js
sti
scas
leave
mov
lcall
mov
cmc
ret
scas
adc
in
mov
lcall
cmp
dec
mov
aas
insl
shr
cmp
into
xor
dec
mov
mov
sarb
add
aad
mov
push
in
mov
sbb
adc
nop
arpl
add
aas
or
icebp
sbbb
lea
xor
stc
push
lahf
xchg
jmp
es
out
lcall
or
dec
mov
push
imul
adc
addr16
push
xchg
das
cmpsb
jb
cs
mov
test
cmpl
mov
jno
scas
sbb
dec
mov
sbb
test
in
and
sub
fwait
loope
jne
mov
cs
xchg
mov
push
pop
cmp
gs
sbb
cli
or
or
pop
push
sub
mov
jb
inc
or
dec
fdivrs
pop
fidivs
hlt
cmc
sbb
add
outsl
sbb
xchg
jge
sbb
xor
xchg
stos
mov
inc
xchg
adc
push
mov
int3
push
xchg
sub
mov
dec
xchg
cltd
jecxz
mov
movsb
add
sbb
cmp
xor
or
lret
test
ds
mov
lahf
hlt
xchg
jl
imul
jnp
inc
loope
rcrl
outsl
mov
daa
fs
cwtl
xchg
dec
cmp
xor
call
cmp
push
stos
sbb
outsb
fidivrl
idivl
dec
push
fcmove
cmp
test
mov
stc
or
sub
jp
push
push
pop
jl
mov
pop
stos
cmpsb
pop
xor
mov
cmpsb
gs
pop
bound
pop
aam
sub
arpl
xchg
rol
mull
cmp
sti
repnz
arpl
loopne
push
cmp
jmp
das
adc
jnp
mov
and
fisttpll
jge
dec
jge
adc
pop
dec
mov
push
js
cmp
je
lcall
inc
mov
xchg
gs
push
push
cmc
idivb
xor
or
adc
call
in
xchg
pop
dec
insl
dec
arpl
cmpsl
dec
pop
mov
rcll
in
sti
in
mov
ffreep
or
shr
and
addl
fwait
mov
daa
mov
push
sbb
or
ja
xor
or
in
call
clc
lock
dec
adc
sarb
repz
jno
mov
and
sbb
sbb
ljmp
dec
aaa
xchg
cmp
or
ss
mov
jp
cltd
mov
leave
hlt
cld
cmp
add
mov
nop
stc
stc
pop
and
pop
jae
lods
mov
lahf
push
sub
flds
jg
divb
xlat
jl
xor
aaa
mov
jcxz
cmp
lahf
in
dec
fidivrs
add
cs
pop
mov
mov
mov
dec
loope
shlb
mov
and
orb
adc
pop
mov
cmp
imull
popa
jb
aas
xchg
fmull
in
push
mov
movsb
popf
nop
idivb
or
fisubs
dec
xchg
dec
inc
data16
js
cmc
push
adc
add
fcoms
out
push
mov
or
xchg
sbb
inc
lods
lret
pop
inc
jne
repz
mov
int3
jnp
or
adc
push
rep
jecxz
aas
movsb
outsl
pop
cmp
adc
lock
orl
ficoml
imul
and
sub
jle
call
and
cmpsb
mov
mov
pop
pop
jge
xchg
cmp
out
hlt
scas
int
inc
add
or
jg
stos
jns
in
push
add
adc
rclb
bound
sbb
inc
das
je
mov
mov
xchg
xchg
mov
dec
loop
sub
xor
jmp
cmpb
mov
cli
push
scas
mov
stos
dec
pop
mov
and
xchg
xor
clc
mov
push
cld
aam
vmread
enter
mov
push
mov
lahf
pop
in
loop
in
mov
movsl
fidivs
repz
lret
pop
and
orl
test
shll
outsl
hlt
jge
cmpsl
stos
jae
sub
jne
arpl
shrb
popa
loop
and
jne
test
sbb
push
divb
mov
aaa
addr16
cmp
or
hlt
ror
adc
rcll
dec
imul
lods
xchg
sbb
lahf
movsl
shll
int
sahf
mov
fstpt
jl
mov
bound
adc
negb
call
stc
jl
mov
adc
add
pop
jo
adc
add
fists
stc
cmp
and
fwait
mov
popf
testb
in
mov
mov
xor
and
and
sti
into
mov
je
rclb
sar
xchg
rcll
pop
xor
sbb
test
mov
xchg
and
mov
cmp
imul
sub
mov
mov
cmp
cs
adc
mov
sbb
push
cli
lods
out
rcl
mov
pop
cli
mov
sub
push
cmpsl
push
jo
ljmp
hlt
ret
cmp
stos
mov
pop
add
push
or
sub
stc
mov
ret
fwait
inc
loopne
cmp
mov
push
aad
hlt
cmp
xchg
es
lock
dec
std
insb
sbb
fs
gs
pop
ss
bound
loopne
or
int
add
in
cs
fsubs
sbb
cmp
xchg
sti
shlb
outsl
std
ret
push
push
jl
and
popa
or
je
out
push
std
aaa
leave
mov
mov
repnz
pop
repnz
add
mov
jp
lock
stc
jns
pop
sub
iret
ret
mov
imul
outsl
push
jecxz
aaa
lea
mov
jl
stos
ja
cmp
dec
sbb
mov
je
xchg
loopne
push
out
lahf
hlt
lret
sbb
into
aas
call
lea
adc
pop
mov
cwtl
xchg
negb
and
dec
mov
lret
mov
fstpl
lods
mov
stc
push
and
in
and
and
fcoml
js
in
pop
leave
xchg
out
bswap
fsubs
outsb
stc
or
jp
daa
mov
icebp
rcr
sti
mov
pushf
xchg
mov
jg
lahf
ror
sub
stos
pop
jne
incb
cli
pop
je
pop
sahf
inc
ficoms
popf
imul
into
push
lret
mov
std
bound
rol
je
in
adc
jmp
fsubrl
dec
das
dec
xchg
mov
pusha
mov
das
fcoms
les
sub
shll
sub
fmuls
pusha
test
adc
mov
inc
push
lret
mov
jbe
jbe
push
mov
shlb
outsb
mov
jg
notb
add
test
push
in
into
fstp
sbb
xchg
enter
shrb
dec
lea
cmp
mov
mov
insl
sbb
jmp
jo
mov
xchg
dec
loop
cmp
lock
cmp
incb
push
enter
dec
jg
imul
fsubs
sub
inc
push
insb
int
nop
inc
sub
cwtl
std
push
sahf
adc
jne
pop
or
je
sub
shll
add
pop
jmp
sbb
jmp
aaa
mov
repz
cmp
sti
lcall
mov
fbld
scas
sbb
in
cmpl
pop
enter
or
fsubl
leave
xchg
dec
jno
mov
aaa
xor
mov
pop
sahf
push
add
sub
adc
repnz
lods
mov
rcrl
daa
sub
stos
roll
into
pop
hlt
repnz
enter
sahf
outsl
mov
int3
test
xchg
push
add
inc
and
subl
add
mov
fidivs
adc
sbb
and
call
scas
sbb
and
sbb
sbb
mov
xchg
jg
xchg
sub
aad
fiaddl
xor
add
ret
dec
xchg
hlt
outsl
mov
mov
dec
test
add
cmpsb
fldcw
mov
xor
repz
fistpll
rcll
push
lret
cmp
cmp
dec
push
mov
popa
cmpsl
push
jp
sbb
xchg
cltd
int
in
sub
ss
adcb
test
inc
gs
ret
nop
pop
cmpsb
and
inc
mov
or
push
cmp
repz
or
popf
push
mov
mov
aam
call
xlat
nop
push
and
loope
pusha
mov
and
xor
aaa
pushf
cmpsb
test
in
int
movsl
int
xchg
lds
jns
sbb
dec
das
jne
call
jns
outsb
ljmp
test
pop
imull
mov
lret
inc
mov
dec
dec
mov
testl
inc
xchg
and
cmp
dec
fucom
mov
cmp
stos
inc
hlt
sub
adc
adc
stos
dec
inc
pop
pop
test
test
outsb
push
aas
push
fsubrl
sbb
lock
xchg
ret
pushaw
fs
int
pop
dec
iret
outsb
test
call
dec
inc
aaa
lret
dec
dec
aas
into
cs
les
stos
or
imul
cmpsl
repnz
test
stos
ja
or
xor
lods
daa
ror
loopne
lods
in
jge
dec
inc
push
test
movsb
iret
cmp
popf
or
into
adc
dec
dec
inc
hlt
icebp
addr16
jmp
cmp
mov
sbb
fcompl
mov
or
lds
movsl
add
popa
mov
inc
mov
nop
icebp
inc
dec
sar
stos
int
adc
imul
mov
lods
dec
movsl
add
fwait
xlat
shlb
jecxz
inc
mov
inc
loop
je
imull
and
arpl
dec
sti
cmp
filds
adcb
insl
sub
loopne
mov
sbb
in
outsb
mov
sarb
mov
inc
insb
cmp
lock
rcr
lret
pop
out
or
sbb
inc
pushf
jecxz
push
dec
test
aam
mov
cmp
fistpll
fbstp
inc
jle
or
std
ljmp
scas
insb
add
repnz
mov
rcl
jmp
call
or
hlt
test
add
aam
test
mov
push
cli
bound
icebp
xchg
sarb
jbe
leave
cmp
inc
cmp
and
push
in
dec
jne
adcl
mov
mov
mov
xor
pop
fwait
sbbb
add
rcll
sub
fisttpll
fimull
repnz
shrb
push
ljmp
nop
imul
jmp
add
adc
lods
repz
cmp
xor
mov
xchg
or
cmp
pop
in
jle
lcall
add
mov
out
notb
pushf
cmpsl
and
inc
dec
jecxz
fwait
cs
jns
fs
enter
inc
push
xchg
mov
lds
addl
inc
push
and
xchg
adc
cwtl
add
nop
add
adc
jecxz
adc
xlat
dec
movsl
mov
stc
xor
ds
dec
aad
push
cmp
fs
push
rclb
sub
cmp
jmp
xchg
adc
pushf
and
sub
mov
lea
clc
sub
pop
rcl
and
xchg
mov
or
or
popa
jmp
inc
sti
cmp
mov
dec
sub
or
dec
test
push
and
sti
sahf
push
xchg
mov
cmpsb
cld
xchg
sahf
outsb
fwait
or
pop
insb
cmpsb
xchg
dec
mov
ret
ja
mov
xchg
cmp
mov
paddb
ret
rcr
roll
sub
inc
push
std
xchg
jbe
fcmovnb
adc
xchg
fdivs
inc
xor
add
into
xor
push
add
sub
dec
lcall
mov
ret
mov
jnp
cld
outsb
insl
sub
aaa
ljmp
pop
jns
ret
sbb
insl
jns
ja
rorb
adc
je
pop
push
mov
adc
addr16
mov
and
push
pop
jbe
inc
xor
inc
jbe
repz
mov
lods
or
jo
in
pop
testl
flds
push
aas
inc
and
jl
test
sub
bound
pop
mov
mov
add
pop
xor
arpl
lahf
icebp
cli
inc
push
in
pop
xchg
inc
xchg
inc
insb
add
sarb
loop
sub
loope
pop
jmp
shl
rcll
daa
xchg
rcrl
les
test
testb
push
mov
cld
fimull
mov
and
pusha
popf
loope
dec
sbb
mov
dec
in
loopne
sbb
fs
mov
lret
sbb
mov
lahf
mov
cwtl
jmp
ds
inc
sub
push
pop
sub
mov
and
dec
adc
int3
mov
nop
loope
push
pop
lods
pop
push
cwtl
cmpsl
imul
filds
add
sbb
das
test
cmpsb
pop
dec
lods
pop
push
inc
mov
cmp
jb
testb
pop
repz
lea
imul
pop
out
in
aad
aam
lret
sbb
push
stos
adc
mov
outsl
mov
dec
movsb
out
divb
push
pop
ds
mov
mov
jle
add
popa
ljmp
repz
xlat
or
fldl
xor
and
ss
push
fstl
fidivs
out
lcall
pop
cmp
std
pusha
dec
add
cmp
inc
and
dec
pop
sub
pop
or
std
mov
icebp
ret
es
push
rclb
xchg
xor
movsb
fcoml
push
addr16
nop
or
scas
push
enter
cmp
pop
pop
lea
mov
jg
repz
les
aam
xor
add
addr16
cmp
push
and
mov
mov
mov
mov
stos
aas
inc
dec
jp
mov
dec
xchg
dec
iret
imul
or
xchg
sub
push
dec
pop
lea
jmp
clc
lds
out
iret
std
mulb
jp
mov
and
adc
xchg
jno
fisubs
imul
sub
movsl
fstpt
repz
adc
or
and
ret
loopne
jle
fcmovnu
cmp
cmp
in
jo
data16
call
push
push
inc
sub
jle
daa
lea
and
aaa
pop
fcompl
jmp
outsl
and
xlat
push
cmp
test
mov
add
call
push
sub
cwtl
in
dec
xchg
mov
pop
mov
loopne
push
sarb
daa
loope
popf
mov
je
arpl
cvtps2pd
xchg
mov
mov
scas
xchg
cli
sarl
rcr
insb
sbb
xchg
sub
iret
or
adc
push
test
sbb
pop
orl
jl,pt
pop
fidivl
lret
or
mov
out
cmpsl
dec
fdivrp
lock
xchg
ja
loop
and
or
nop
jnp
movsb
add
mov
xchg
je
adcl
pop
ret
xchg
pusha
pop
lds
cltd
mov
or
xlat
jp
add
popf
gs
and
into
xchg
iret
jo
mov
sbb
es
xchg
test
ljmp
mov
sub
xchg
shl
or
insl
xchg
xchg
ds
lds
or
lret
jnp
pop
dec
lret
mov
jno
push
iret
jp
test
ds
jb
push
jle
test
imul
addl
cltd
mov
push
push
sbb
dec
pop
hlt
ljmp
pop
and
add
stos
pop
aad
xchg
or
pop
das
inc
fs
lret
ljmp
popa
bound
jge
movsb
sahf
loop
sti
push
popf
in
ret
jo
les
pop
pop
or
xor
addr16
add
push
or
ret
imul
outsl
aam
in
dec
es
push
nop
lcall
in
or
mov
imul
mov
xor
add
sbb
aas
mov
cmp
outsb
jae
mov
rcll
filds
pop
sbb
and
mov
inc
push
push
fidivs
insb
pop
sbb
sbb
jecxz
fcomps
cmpsl
and
inc
mov
aaa
leave
cmc
jno
mov
inc
pusha
dec
repnz
and
repnz
cmp
sbb
pop
ret
cs
mov
into
repnz
pop
mov
or
pushf
push
int3
or
leave
sub
mov
aaa
or
andl
push
cli
and
pop
push
arpl
lea
add
push
inc
mov
jbe
push
mov
sahf
push
cmp
gs
jl
adc
and
cmp
enter
jp
fists
jne
xchg
dec
std
inc
mov
xchg
mov
arpl
dec
fcmovnu
leave
insl
mov
test
dec
mov
pop
adc
stc
mov
push
adc
or
cmp
cmp
call
repz
sbb
add
sbb
sbbl
daa
aad
cld
mov
or
cs
arpl
rcr
xor
cmp
test
outsl
notl
repz
xor
idiv
sub
fnstsw
repnz
cwtl
dec
or
scas
imul
inc
subl
sub
popf
inc
push
push
mov
out
sarb
inc
pop
xor
xorl
push
in
xor
out
and
xor
cmp
dec
leave
in
das
inc
xchg
stc
stos
add
xchg
sarb
stos
inc
in
cmp
subb
cmp
in
scas
cmp
mov
test
dec
mov
and
add
jne
lret
lds
push
mov
jno
cmpl
test
jnp,pn
aaa
add
add
mov
loopne
jbe
orl
cmp
adc
imul
cmp
andl
inc
pop
movsl
pop
pop
inc
inc
repz
test
int
lock
xchg
ss
mov
mov
add
loopne,pt
jl
sub
and
icebp
pushf
push
cmp
hlt
call
mov
sub
xlat
sub
imul
sbb
enter
push
pop
out
movsb
cli
pop
dec
js
out
pushf
xor
fildl
sub
aad
sbb
add
push
xchg
dec
and
movsl
ljmp
mov
jge
lret
fisttpll
mov
xor
mov
dec
adc
jecxz
or
push
stc
cmpsl
cld
pop
push
jne
xchg
and
lahf
jnp
xlat
lret
lds
jge
pop
push
arpl
insb
imul
dec
cltd
pop
dec
dec
sbb
xor
ret
inc
adc
jmp
cmpsl
add
loope
imul
cmpsl
push
inc
push
rcrl
push
push
popf
xor
xchg
mov
pop
xchg
sub
out
push
cmpsb
push
or
fsin
adc
nop
cmp
xor
jnp
nop
mov
jno
mov
dec
in
out
mov
mov
jno
fcompl
pop
jo
xor
mov
pushf
ljmp
jle
and
stos
sti
in
loop
mov
dec
test
mov
adc
push
lahf
stos
outsb
push
xor
xchg
sahf
cmp
cmpsl
xchg
xor
and
add
dec
mov
inc
scas
sbb
jb
mov
jp
lds
cmp
push
jbe
push
add
sub
data16
cmp
lret
pop
je
out
stc
jns
imul
sbb
lret
pop
faddl
lret
sahf
sbb
rclb
std
aad
mov
mov
push
dec
ret
ret
out
mov
and
mov
fsubrs
inc
int3
pop
outsl
inc
call
and
pushf
lcall
mov
xlat
xor
lret
movsl
icebp
mov
addr16
loop
ret
mov
test
adc
popa
popa
mov
mov
sbb
jl
outsl
lahf
into
movsb
xor
into
jne
sbb
fstps
jo
sub
pop
add
ret
lds
fimull
test
mov
mov
pop
sbb
push
testb
scas
mov
mov
mov
and
rol
lret
daa
sbb
test
and
cmp
push
mov
jg
stos
push
add
mov
sbb
cwtl
jb
dec
or
adc
pop
jmp
push
mov
cmp
nop
iret
mov
inc
dec
out
ret
mov
push
pushf
sbb
cmpsb
push
adc
outsl
jmp
std
xor
cltd
mov
negl
push
es
repz
or
mov
mov
adc
repz
fisubrs
mov
mov
in
fcompl
jnp
jb
fnstcw
cmp
ss
pop
aad
jge
int
popf
sub
xchg
jae
mov
jmp
dec
pop
xor
nop
jnp
jl
dec
out
mov
nop
shr
dec
fld
popa
scas
popf
loopne
sub
int
movsl
cmp
xchg
inc
sub
push
rorb
push
in
frstor
out
mov
mov
and
cmp
inc
arpl
test
dec
dec
and
pushf
lcall
xchg
adc
jge
adc
xlat
stos
sub
inc
and
sbb
ror
push
and
push
jns
mov
fidivrs
cmp
mov
fdivrp
jmp
jmp
bound
shll
or
dec
mov
mov
addr16
mov
mov
aam
incb
in
adc
dec
and
mulb
xchg
insl
adc
cmpsl
sbb
repz
in
mov
xchg
cli
sub
mov
pminub
test
test
sub
inc
movsb
bound
cmpsb
clc
mov
mov
jl
lds
mov
push
xor
jne
lret
mov
add
pop
out
leave
int
and
push
push
pop
push
lcall
sub
push
push
mov
lock
jno
mov
imul
in
fs
dec
loope
inc
jecxz
lahf
sub
test
xor
push
dec
iret
outsb
pusha
add
adc
lods
daa
inc
push
dec
sub
inc
mov
inc
scas
push
loopne
sahf
stc
mov
in
int
mov
add
inc
add
std
stc
add
pop
arpl
dec
adc
lret
mov
cmpsb
aad
mov
adc
xchg
shrl
cwtl
mov
push
push
aas
cmp
sbb
lcall
popl
lea
clc
int
mov
xchg
sbb
dec
pushf
mov
xchg
pop
sbb
pop
sbb
call
mov
frstor
sbb
cmp
xchg
int3
in
adc
lock
push
lods
pop
pop
mov
xchg
cmp
in
enter
mov
adc
dec
lock
mov
js
notb
fisttps
dec
fdivs
push
jg
pop
scas
out
push
or
aaa
pop
jne
xchg
adc
add
xor
add
daa
lea
add
fsubrl
idivl
inc
aad
pop
pop
or
xor
bound
push
adc
sub
dec
or
in
sbb
enter
push
push
mov
cld
mov
mov
adc
stc
test
ret
mov
xor
loop
into
push
fsubr
pop
cli
notb
loope
in
popa
xor
inc
adc
stos
jmp
push
mov
imul
adc
jmp
adc
mov
outsb
lret
sub
jmp
inc
icebp
aaa
xor
pop
ja
int3
js
jns
arpl
inc
int
xchg
test
addl
jnp
call
mov
sbb
out
mov
in
mov
pop
lds
jns
imul
sub
mov
xor
jmp
xor
ret
xchg
stos
xchg
lods
mov
fwait
shlb
sub
inc
jle
ret
sbb
out
or
lds
and
sarb
push
jne
sahf
xchg
xor
xor
mov
adc
sub
out
mov
adc
ljmp
hlt
movsb
jmp
xchg
mov
fisttpll
push
pop
inc
int3
add
jp
loop
mov
mov
aas
lret
imul
out
jg
cmp
adc
cld
int3
xor
repnz
adc
cmp
scas
insl
sti
pop
mov
sub
cli
jne
shll
imul
inc
xor
lret
das
negb
xor
lock
add
imul
mov
inc
mov
inc
pop
mov
push
jns
test
pop
mov
rcrl
mov
mov
inc
mov
shll
cmpsb
enter
or
idiv
jle
add
cli
sub
mov
fimull
pop
add
add
pop
dec
negb
hlt
in
inc
cmp
cmp
sub
or
js
mov
sub
add
pushf
movsl
push
and
in
push
popf
and
add
sbb
cmp
das
cltd
jmp
iret
add
jmp
jmp
addr16
or
jg
xchg
jle
adc
fst
pop
or
shl
mov
jecxz
xor
inc
shrl
pop
fldt
pop
cmp
pop
push
out
enter
xor
sub
ss
pop
pushf
push
push
lds
or
sbb
cmp
mov
das
cmp
dec
popa
into
push
das
push
test
inc
lock
dec
mov
lea
mov
fwait
ljmp
jg
push
cmp
add
sti
ljmp
sub
adc
mov
mov
orb
les
pop
fs
xor
add
cmpsl
bound
pop
sbb
sub
sbb
sar
pop
insl
cmc
pop
ret
lret
push
inc
cmp
scas
fdivr
jp
jg
or
add
sub
xor
ficoms
push
xchg
aas
pop
adc
fiadds
mov
jns
pop
dec
out
push
lret
out
pop
dec
push
adc
vmovaps
inc
lcall
or
jge
sub
movsb
adc
push
fistpll
pop
loopne
mov
sahf
sbb
mov
and
stc
add
xchg
cmp
cld
or
sahf
icebp
or
push
mov
dec
lods
adc
dec
lds
popaw
xchg
mov
jge
jnp
hlt
repz
dec
mov
xchg
add
into
int3
adc
inc
adcb
add
and
stos
mov
and
cmpb
dec
push
imul
sti
sbb
lock
pusha
xor
mov
inc
sbbl
jnp
jl
and
xchg
xchg
clc
inc
cmpsl
cmp
stc
jp
mov
push
test
shll
rorb
xchg
idiv
push
xor
jmp
loop
movsl
cli
aas
inc
push
adc
in
dec
es
dec
dec
lahf
icebp
dec
jns
sbb
xlat
jbe
idivb
cmpb
xchg
aam
mov
push
enter
jnp
or
dec
push
add
mov
imul
enter
push
mov
mov
add
mov
insb
ret
fcoml
pop
jl
jl
or
sbb
sarb
sub
pop
or
push
or
inc
test
pop
test
cltd
dec
data16
jne
shlb
adc
test
in
outsl
inc
pop
push
cmpsl
out
cmpsl
mov
fs
push
ds
push
add
imul
popa
lds
cmpsl
xchg
xor
jns
and
cmpsb
adc
cld
jmp
ret
insb
inc
mov
jge
or
jb
icebp
mov
pop
iret
clc
aam
mov
adc
nop
sahf
enter
inc
adc
repnz
mov
sub
or
orb
inc
jecxz
inc
shll
jmp
pop
cwtl
stos
lock
sub
repnz
mov
dec
loope
loopne
cwtl
aaa
xchg
jmp
fdivs
sbb
outsb
xchg
repz
mov
and
cmpsb
mov
shl
add
xor
movsb
sahf
mov
mov
mov
aam
adc
push
push
add
ja
jp
push
sbb
cmp
jp
cmp
out
stc
bound
test
pop
xchg
and
ficomps
pop
adc
scas
xchg
xchg
cmp
xor
mov
adc
out
xor
jle
mov
mov
and
lahf
imul
push
ret
cmove
pop
mov
dec
jecxz
mov
push
dec
stc
insl
push
push
call
int3
push
mov
ret
in
repz
xchg
sub
sbb
pop
xor
mov
cli
jecxz
cmpsb
inc
inc
out
stos
cmp
test
push
xchg
shrl
ljmp
mov
jge
mov
xchg
clc
xchg
outsl
adc
dec
and
xchg
sbb
outsl
adc
push
dec
jle
imul
scas
and
xor
loope
xor
jne
and
push
push
add
jno
in
mov
mov
inc
add
je
addr16
data16
das
dec
inc
lcall
in
icebp
adc
imul
or
jae
shrl
dec
xor
out
imul
cld
jnp
fdivrl
xchg
mov
cmpsl
mov
sahf
xchg
jnp
jbe
push
sub
mov
fcomps
pop
xor
mov
cmp
mov
dec
fmull
jae
insl
xor
jg
decb
ret
outsl
test
icebp
lea
call
sbb
jle
jmp
icebp
lods
jp
leave
aam
out
and
test
mov
and
stos
sub
ja
add
sub
loope
inc
ja
or
repnz
jmp
mov
xor
inc
dec
adc
mov
mov
mov
sub
lret
nop
loop
dec
add
test
add
xchg
cmc
imul
mov
push
mov
mov
movsl
in
in
frstor
imull
sub
mov
sbb
xor
and
out
icebp
xchg
outsl
dec
adc
movsl
or
mov
mov
out
in
cmpsl
mov
jo
add
inc
mov
mov
andb
or
inc
mov
andb
and
jb
outsl
sahf
and
or
aam
stc
sbb
push
stc
xor
sub
mov
dec
lods
insb
je
cli
out
inc
jae
aaa
inc
mov
or
jle
xchg
rcrb
mov
fstpt
jbe
add
daa
add
push
and
gs
fildll
scas
mov
cmp
in
jmp
testb
pop
int3
pusha
sarl
fsubs
out
test
shr
call
xor
push
lods
push
adc
push
inc
das
cwtl
cmc
sti
pop
pop
int3
rcrb
xor
fnsave
jg
sbb
iret
mov
repnz
gs
cli
jg
ljmp
frstor
add
in
mov
popa
ficoms
push
cmp
adc
cmp
dec
mov
inc
xor
add
sbb
repz
jno
add
int3
data16
mov
rcll
int3
inc
cmp
push
gs
xor
add
jnp
sarl
les
xchg
pop
addr16
or
mov
xchg
or
aad
addr16
mov
negl
hlt
cmp
lock
and
cmc
fstps
inc
push
sbb
leave
loopne
jnp
adcl
jnp
pop
xor
imul
clc
fisubl
jno
or
push
mov
loopne
mov
shl
adc
pop
je
sbb
and
xchg
mov
and
sbb
sbbb
xor
pop
scas
push
jmp
inc
mov
inc
sti
cwtl
lds
enter
inc
add
out
pop
sbb
xchg
jecxz
push
pop
add
jg
mov
fcomp
and
ret
orl
daa
xchg
sub
ljmp
add
in
sbb
mov
call
pop
sbbb
shll
push
fucom
push
scas
jg
stc
mov
imul
fdivs
sar
dec
mov
es
adc
dec
or
mov
notb
dec
xchg
adc
xor
or
mov
das
es
jmp
cmp
inc
cmp
push
rcrb
mov
jnp
cmp
inc
push
or
arpl
pusha
cmp
push
loop
fcmovnb
and
ljmp
fs
in
xchg
outsb
pushf
pop
pop
dec
push
loope
sbb
pusha
test
push
jl
cmp
and
cmp
mov
mov
xor
adc
lcall
stos
pushf
clc
push
out
insb
mov
dec
jo
xchg
xor
xor
subb
movsb
in
push
dec
ja
insl
pop
sub
or
and
sbb
lods
jecxz
mov
jno
mov
add
adc
xchg
jp
and
gs
movsb
shlb
arpl
pop
out
push
dec
mov
lret
push
js
data16
loop
mov
mov
data16
pop
negb
or
pop
imul
xchg
mov
inc
mov
pop
mov
push
addr16
lcall
xchg
jae
out
negl
mov
dec
test
pop
xor
pop
aas
out
sbb
push
xor
mov
mov
inc
xlat
xchg
aad
pop
mov
xchg
or
out
int
aas
sub
jne
std
movsb
pop
or
in
mov
notb
mov
outsl
sub
sbbb
push
shrl
ror
add
inc
ds
cmp
addr16
xchg
jmp
and
mov
fistps
cmpsl
dec
in
mov
and
aam
ret
pusha
nop
add
push
adc
cmp
repnz
je
sub
jo
inc
inc
bound
jno
popf
and
lahf
dec
jmp
jbe
shrb
and
dec
dec
rorb
test
fwait
xor
fs
sub
aad
push
dec
dec
sbb
inc
mov
inc
mov
arpl
sbb
lahf
loop
paddusb
gs
aas
mov
cmp
fimuls
in
mov
jmp
into
popf
jmp
or
xchg
or
cli
aam
inc
sbb
pop
pop
mov
fwait
ret
lea
jns
test
lret
cmp
dec
dec
std
mov
stc
scas
fimuls
sbb
add
add
test
testb
cmp
out
dec
xlat
jns
sub
out
xchg
dec
fisubs
ss
inc
push
add
lock
pop
pop
lret
xor
lcall
push
inc
jp
cmpsb
xor
int3
loop
iret
in
push
xlat
pop
sti
fstl
fisubrl
orb
dec
gs
iret
pop
cmpsb
int3
push
loop
mov
and
sub
arpl
sti
sbb
bound
pushf
sub
aas
sub
subl
push
pusha
xor
aaa
in
jbe
and
outsb
fistl
xor
bound
ret
aam
add
rcll
fsubr
andb
jne
xchg
loopne
or
daa
cmp
mov
xchg
adc
pop
pop
dec
xor
lds
xor
mov
fldt
lahf
sbb
push
ret
xchg
out
lds
xchg
jmp
mov
fld
dec
pop
pop
imul
xor
insl
lahf
mov
pushf
lds
ja
sub
xchg
pop
dec
dec
adc
imul
pop
push
stc
push
inc
push
das
rcrl
sbb
cmp
push
cwtl
je
into
xchg
imul
popa
sti
jle,pt
fidivrl
mov
imul
adc
push
data16
stos
lods
loop
pop
lock
inc
jae
cmp
mov
ret
lret
fisttps
mov
addr16
cmpsb
and
jle
shlb
sbb
cs
pop
mov
sbb
aam
mov
adc
movsl
jo
inc
xor
jle
ret
divb
dec
sub
lds
cli
and
arpl
adc
clc
clc
ficompl
out
cmp
movsb
test
mov
or
js
nop
out
xor
movsl
lret
sub
xor
test
in
not
push
daa
mov
std
cmp
add
enter
jecxz
add
ret
push
data16
sbb
and
arpl
shrl
jns
loopne
stc
jns
and
cmc
loopne
jo
jp
shll
ror
push
sbb
icebp
mov
dec
xchg
ds
cmc
sti
and
jns
aaa
test
mov
jae
ljmp
icebp
sub
cmp
icebp
sbb
cmp
enter
mov
fs
mov
and
jbe
push
sahf
jg
mov
xor
push
movsl
dec
aad
dec
jmp
gs
bound
aad
nop
pop
or
sbb
lahf
mov
shrl
aad
mov
roll
fstpl
mov
inc
push
out
imul
jae
push
sub
push
fidivrl
mov
adcb
mov
mov
lea
sbbb
mov
pop
aad
dec
clc
mov
or
in
pop
adc
xchg
mov
shr
in
lcall
adc
outsb
inc
nop
jae
push
pushf
ss
lret
pop
ljmp
inc
lock
jo
xchg
insb
stos
pusha
icebp
add
outsb
insb
pusha
imul
mov
adc
push
lea
insb
and
and
call
dec
mov
and
fs
mov
pop
fbstp
xchg
movsb
gs
ficompl
inc
or
aad
aam
cli
mov
dec
popa
and
hlt
adc
cli
ja
pop
mov
add
mov
addr16
pop
push
sub
arpl
fstpt
push
mov
into
or
jmp
movl
add
inc
mov
je
lret
out
sub
xor
iret
mov
mov
and
push
xchg
sub
cmp
lds
addr16
dec
jns
hlt
adc
nop
jmp
mov
push
sbb
jb
push
push
ss
scas
rolb
xchg
and
fnclex
pop
lods
mov
mov
test
jl
pop
icebp
sub
cs
cmp
add
cs
mov
xorl
icebp
in
cltd
mov
adc
push
mov
dec
mov
sbb
mov
sbb
fidivl
dec
stos
mov
mov
aaa
mov
cwtl
cld
mov
jmp
pop
adc
adcl
pop
fstp
js
adc
mov
mov
sbb
or
add
jno
and
int
push
mov
sub
sbb
mov
and
sbb
ret
mov
dec
les
cmpb
sub
xchg
jae
dec
stos
out
lock
lds
push
mov
pop
lret
mov
lret
xchg
push
mov
fists
lods
ja
xchg
cmp
lcall
jbe
pop
mov
pop
sbb
test
sbb
inc
aam
js
insb
xlat
dec
add
push
push
push
cli
cs
inc
test
mov
in
out
pop
or
push
addr16
dec
inc
fs
adc
test
sub
stos
cmp
das
pop
dec
aas
mov
rolb
push
in
add
mov
outsl
push
shlb
out
andb
xchg
jmp
fldl
loopne
lahf
adc
stc
jecxz
xchg
cld
jne
stc
mov
jb
orb
add
push
test
xor
call
xchg
mov
aaa
push
sti
shlb
pop
outsb
xchg
cmp
imul
mov
call
push
insb
cmp
or
fwait
xchg
jge
jge
xorl
jmp
mov
push
jp
aad
jge
sub
mov
cmpsl
and
shl
pop
push
cmpsb
mov
jmp
es
add
imul
add
popa
push
jne
stos
mov
mov
pop
xorb
out
sbb
xlat
pusha
insb
xchg
ja
xchg
adc
loopne
adc
mov
or
xchg
insb
jbe
push
and
jp
and
and
lock
adc
out
jecxz
lock
test
lods
data16
cltd
xchg
inc
daa
inc
dec
jbe
insl
mov
insl
iret
xchg
pusha
stc
and
mov
aam
or
jl
sbb
inc
cmpsb
adc
pop
jb
addr16
inc
sahf
lcall
mov
and
gs
in
stc
ja
mov
test
jno
or
dec
mov
cmp
test
xor
push
mov
mov
dec
cltd
jl
dec
sti
push
mov
aas
cmp
out
movsl
dec
jge
imul
leave
imul
push
icebp
sub
pop
loope
aas
cmc
in
enter
cmp
imul
sti
jae
ljmp
dec
or
lods
pop
imul
cltd
subl
int
fwait
push
xor
add
int3
mov
jmp
ret
in
jl
shr
xchg
mov
push
idivl
outsb
lret
lods
xor
imul
adc
xchg
fimuls
outsl
movsb
les
aad
xchg
cmpl
mov
loope
lds
jmp
popf
jbe
in
mov
dec
sub
sbb
aam
jno
stos
sub
add
mov
jecxz
xchg
enter
inc
xor
in
jbe
in
scas
les
xchg
mov
insl
mov
loopne
repz
mov
stc
mov
sbb
cwtl
add
xchg
scas
fsubrl
mov
adc
aad
jecxz
mov
inc
lret
adc
stos
std
mov
stc
jns
test
mov
or
sbb
and
push
cmpsl
xchg
leave
stos
and
outsl
std
cmpsl
mov
pop
mov
out
push
lea
add
or
mov
sbb
movsb
lret
ds
sub
int3
push
iret
sbbb
push
enter
inc
cmp
lods
cmc
push
add
or
fndisi(8087
push
dec
or
cltd
sbb
std
jge
mov
sti
sbbb
movsb
popa
rcrb
xchg
scas
into
add
iret
mov
ret
xor
div
sarl
mov
mov
push
jae
push
cmpsl
and
sub
fildl
jl
jg
and
out
xchg
sbb
mov
push
sub
cmpsb
adc
fcoms
dec
ss
cmp
aam
adc
inc
and
cs
icebp
push
mov
subl
sti
mov
inc
push
cld
push
in
arpl
jno
fisttpll
xor
sbb
fdivs
xor
repnz
xor
push
ret
mov
out
jo
pop
movsl
cmp
xchg
or
aaa
cmp
jnp
cmp
push
sub
lds
outsb
adc
add
inc
bound
cwtl
scas
clc
pop
mov
les
int3
adc
shl
push
adc
out
cs
rcr
lea
adc
ds
es
sti
leave
popa
xlat
outsl
add
and
jb
mov
jmp
shl
iret
mov
mulb
and
aaa
xchg
jnp
test
adc
inc
xchg
add
in
jecxz
popf
fistpl
in
cmpsl
or
mov
xchg
cli
or
lea
mov
shrl
dec
lahf
cli
mov
jne
sahf
mov
mov
xor
stc
fs
cs
nop
sub
adc
adc
mov
xchg
test
xlat
lcall
pop
cld
mov
pop
insl
mov
lret
jmp
daa
xchg
mov
cmp
out
popf
dec
test
sbb
inc
fimull
dec
jg
int
outsb
or
insb
mov
add
sbb
xchg
add
fisttpl
mov
dec
xchg
mov
add
xlat
xor
icebp
push
dec
mov
aas
pop
adc
push
in
mov
repz
std
lock
xor
leave
add
ret
loop
mov
imul
jle
inc
xor
cmp
fidivrl
xor
sbb
pusha
imul
out
pop
adc
jbe
int3
xchg
fwait
lods
add
loop
cli
jnp
pop
fdivr
sbbl
clc
xor
iret
jle
aam
test
stos
aaa
sub
insl
nop
mov
adc
pusha
int
jmp
daa
icebp
outsl
jbe
mov
mov
adc
pop
mov
mov
sbbb
dec
or
sub
rorl
pop
leave
ret
aad
lcall
xchg
cltd
in
inc
mov
sub
or
iret
push
inc
jo
mov
jbe
push
into
bound
jl
cmpsl
lcall
cmpsl
mov
mul
add
out
push
pop
fildll
inc
dec
outsl
pop
je
cmp
ficompl
pusha
pushf
and
xchg
mov
sbb
pop
sbb
clc
inc
add
dec
movsb
jmp
jbe
adc
mov
dec
loope
adc
flds
or
shll
icebp
neg
jp
je
mov
out
add
pop
adc
cld
out
add
mov
movsl
xchg
pop
adc
test
mov
jmp
mov
shrl
xor
lret
dec
push
sti
jo
xor
cs
out
sbb
cmpsb
mov
adc
fnstsw
push
push
testl
and
arpl
dec
arpl
mov
je
mov
mov
nop
pop
pop
inc
loope
out
ret
insb
add
or
push
xchg
cs
int
sub
stc
pushf
adc
mov
lods
sti
sti
mov
pop
mov
xor
cltd
mov
lds
jno
scas
inc
popa
test
stos
mov
imul
out
adc
jge
inc
out
mov
and
pop
adc
pop
mov
xor
sub
test
sub
outsb
and
rclb
push
sub
adc
sub
imul
dec
pushf
and
ret
lds
cmpsb
inc
aaa
out
xchg
incb
loope
test
dec
push
orb
cmpsl
fmuls
js
pushf
dec
inc
hlt
fimuls
add
dec
mov
jbe
mov
idivl
iret
insl
jnp
repnz
test
add
adc
scas
inc
insb
pop
cmpl
or
jle
fdivrs
jo
mov
aad
sbb
jmp
pop
loopne
inc
pop
test
bound
cs
cmc
cwtl
pop
adc
cmpsb
lcall
cmp
push
fisubs
fistpl
mov
in
mov
fstl
arpl
cmp
inc
std
movsb
test
pop
shll
push
jo
movsl
cltd
movsl
stc
cmp
es
dec
lret
add
ret
hlt
inc
sbb
and
lods
das
cmpsl
mov
cmp
adc
fnstenv
test
push
or
test
jl
fmull
pop
mov
mov
add
adc
xchg
or
pop
leave
and
mov
mov
mov
sub
dec
popf
nop
jl
rclb
push
fsubs
out
fwait
jne
cs
sbbb
jl
addr16
jo
mov
jp
rcrb
mov
scas
lcall
mov
fsubl
int3
out
xor
test
jecxz
ficoml
and
movsl
push
jno
jg
or
dec
inc
mov
mov
loope
sub
popf
or
or
outsb
xor
jne
loop
in
std
mov
loopne
loope
fyl2x
mov
mov
dec
jp
add
pop
jle
cli
lds
test
int
cmpsl
inc
gs
push
imulb
movsb
pop
add
dec
stc
jl
mov
xchg
cli
sti
call
push
ret
setnp
pushf
or
push
or
test
cli
out
sub
rolb
xor
jecxz
mov
jns
push
jns
inc
cmp
mov
int
mov
jmp
mov
pop
jle
sbb
mov
sub
jnp
cmp
adc
cmpsl
xor
add
inc
lods
cmp
jge
out
lret
push
ss
inc
and
jne
push
ss
int
and
ret
insb
pusha
jno
data16
adc
mov
arpl
aad
fldl
subl
test
daa
jmp
shrb
lea
repz
pop
and
loope
jp
orb
mov
xchg
xchg
mov
push
arpl
cmp
and
mov
sub
dec
stos
aam
mov
sub
xchg
jo
pop
or
push
pushf
test
inc
les
sub
js
ret
push
rorl
xor
fsubrl
clc
sbbb
repz
push
sub
ss
or
push
sbb
int3
divl
or
fbld
mov
lods
imul
shll
sbb
push
es
sbb
int
dec
dec
xchg
shll
mov
xchg
jnp
in
lods
loop
sbb
lods
fwait
insl
jge
dec
imul
and
sub
pushf
add
stos
or
xchg
out
fwait
sbbl
pop
inc
pop
sub
jp
cmp
pop
jecxz
inc
cwtl
or
mov
add
add
adc
ja
mov
sbb
mov
sbb
std
je
sbb
mov
lcall
pop
xor
call
in
push
sahf
sbb
mov
mov
sbb
mov
jecxz
cmp
dec
lods
sbb
add
in
leave
pop
in
push
sahf
aam
sub
sub
sbb
stos
inc
cs
push
dec
imul
add
mov
lods
mov
nop
loop
xor
jmp
outsb
int3
xchg
and
inc
ja
jg
pop
fs
lods
pop
rcll
into
nop
mov
jbe
sbb
pop
ret
aas
es
pop
rolb
and
cltd
push
rorl
movsl
idivb
push
xchg
push
insl
inc
in
clc
or
or
bound
or
stc
addr16
dec
mov
aad
fisttpll
adc
pop
xchg
xor
xchg
andl
dec
bound
mov
mov
not
pop
divb
mov
fistl
sbb
popa
in
mov
or
leave
push
ss
lahf
testl
push
ret
xor
mov
je
lea
push
stos
aam
and
ljmp
fisttpll
push
inc
xchg
enter
mov
sarb
sbb
or
aas
push
cltd
aam
pop
ss
int3
and
pushf
or
pop
js
push
loopne
pop
or
cltd
mov
ja
jmp
into
cmp
xor
scas
movsb
push
js
jo
xchg
sub
inc
faddl
decb
fsubrs
dec
adc
xlat
cmp
fcomip
jp
cmpsl
push
push
inc
aaa
cmp
hlt
popl
xchg
cmp
mov
mov
test
cwtl
cmp
add
leave
mov
out
xor
cmp
inc
lods
xchg
xor
loope
xor
cld
jne
jle
mov
scas
dec
and
repz
mov
mov
aaa
jnp
daa
xor
repz
fucomi
aas
cmpsl
mov
gs
pop
ret
loop
mov
daa
insb
xor
sti
and
sub
mov
insb
sub
sub
fsub
outsl
add
cmp
bound
test
leave
iret
rcl
loop
dec
pop
pop
outsb
push
adc
mov
test
nop
xchg
andb
ret
add
enter
pop
cli
decl
xchg
push
rorb
pusha
out
and
daa
fcomps
jp
aas
lods
cmp
aas
mov
stos
aam
xchg
es
pop
notb
mov
mov
out
lret
dec
sbb
push
mov
lods
jae
jmp
jge
int
js
jbe
test
loope
sarl
jbe
cmc
mov
jo
sbb
add
sub
mov
in
mov
jge
add
dec
arpl
push
ret
or
mov
popa
ljmp
adc
mov
push
leave
popf
jmp
repnz
mov
dec
cld
vpshufd
jp
jecxz
push
pop
add
or
mov
pushf
mov
pusha
add
xor
iret
dec
adc
push
mov
mov
fs
int3
outsl
pop
sarb
fs
sbb
imul
idiv
bound
adc
and
movsb
test
pop
cmp
mov
pop
cmp
cli
add
movl
xor
std
push
jmp
and
clc
pop
xor
aad
adc
cmpsl
fstps
into
push
mov
mov
gs
rolb
mov
popa
or
aas
mov
fs
iret
cmp
loopne
mov
sub
cmp
jne
mulb
ret
leave
add
push
out
pop
or
mov
cmp
xlat
sub
orb
mov
dec
cld
adc
mov
adcl
push
dec
mov
and
nop
jecxz
push
add
cltd
pop
inc
sbb
jo
sbb
adc
pusha
xchg
jnp
push
icebp
les
pop
jne
xchg
mov
cltd
and
or
jo
loope
andb
dec
jl
pop
mov
shl
andl
clc
sti
lds
popf
sbb
pop
je
jno
repnz
xchg
ja
inc
push
adc
fadds
cmp
jno
rclb
dec
pop
adc
in
insb
push
fisubs
jno
popf
mov
dec
mov
and
pop
sub
xchg
dec
sub
orl
xchg
sbb
out
jmp
pop
cmpsb
fisubl
in
hlt
xchg
outsl
sub
mov
or
mov
fimuls
mov
sbb
add
jmp
hlt
push
sbb
mov
mov
out
jmp
and
xor
lahf
mov
sbbb
mov
es
mov
ret
iret
mov
dec
inc
sub
in
push
lds
shrb
insl
push
test
lahf
ss
xor
or
hlt
mov
pop
cmp
or
mov
sub
sahf
sbb
mov
sbb
sti
movsl
inc
pop
push
out
popa
add
xor
fdivr
out
test
ja
js
hlt
pop
daa
mov
es
repz
loopne
popf
or
push
lock
addr16
adc
xor
daa
test
ds
fmuls
sub
adc
rorb
dec
sbb
inc
clc
pop
jmp
inc
js
jecxz
push
mov
cltd
jecxz
pop
mov
dec
sub
sbb
or
ds
xchg
fwait
rorl
call
push
cmp
inc
clc
cs
mov
inc
inc
cmc
dec
jecxz
repz
repz
inc
fisubl
jnp
mov
mov
sub
push
adc
cmp
jg
add
jecxz
pop
sbb
and
push
lea
mov
dec
stos
sbb
mov
cmp
sbb
and
push
popf
loopne
fnsave
adc
imul
fcmovnu
cmp
inc
mov
push
sahf
push
xor
sarb
pavgb
ret
and
movsb
enter
int3
nop
lds
mov
out
fistl
add
push
add
mov
mov
pop
or
sbb
mov
mov
aaa
ret
mov
jno
ficoms
bound
inc
mov
or
aaa
fdivl
pop
adc
nopl
in
into
mov
cmp
mov
ja
inc
mov
cwtl
lods
loop
rcr
loopne
push
jbe
push
sub
dec
cli
mulb
jne
push
jne
aas
xchg
xchg
and
jne
cwtl
cmp
add
xchg
les
aam
xchg
mov
pop
dec
xchg
mov
movsb
mov
shrb
popf
adc
mov
xor
and
or
popa
lret
adc
leave
pushf
cli
test
lcall
mov
xchg
fistps
addb
popf
int
xchg
jle
mov
das
inc
or
mov
jg
cmp
aad
rcll
inc
lahf
scas
xchg
sbb
in
repz
lods
cmp
cmpsb
xchg
push
aam
rcrb
js
push
xchg
adc
inc
imul
sarb
shrl
push
stos
dec
cmp
or
repz
cmp
dec
lahf
fstps
stos
pop
sahf
fwait
pop
cmpsl
mov
adc
inc
je
repnz
lret
xchg
xchg
fisttpll
dec
xchg
fdivl
aam
pop
scas
icebp
and
out
push
std
mov
pop
push
sbb
addr16
cmp
pop
in
mov
ret
les
aad
fsts
and
pop
test
daa
lahf
movsb
add
ja
add
mov
insl
loope
and
iret
pushf
xchg
inc
loope
ljmp
mov
mulb
or
push
mov
push
filds
in
add
aaa
mov
pop
jmp
push
daa
movsb
add
mov
sbbl
or
sbbl
xchg
ja
cld
mov
mov
mov
scas
stos
mov
lahf
addb
mov
into
cwtl
pop
dec
mov
pop
sbb
in
jns
scas
frstor
adc
xor
jnp
xchg
fs
pusha
sahf
loopne
setns
cmpsl
outsl
jnp
aad
shl
repz
in
push
dec
fs
into
fisttps
scas
call
fwait
test
push
adc
shrb
movsl
cmp
xchg
ret
ja
inc
ds
fwait
cmc
and
inc
shrl
mov
out
in
dec
fiaddl
dec
icebp
ss
fcmovbe
pop
mov
mov
adc
sbb
inc
js
int3
push
push
shlb
pop
fbld
mov
js
dec
cltd
add
mov
call
sbb
adc
jecxz
mov
stc
jae
pop
dec
es
and
inc
dec
repnz
loop
js
test
jne
cli
mov
dec
pop
cmp
push
je
inc
sbb
repnz
pop
mov
mov
enter
stc
mov
dec
pop
sarb
ljmp
in
ficompl
push
fidivs
inc
mov
mull
int3
test
jge
decl
jmp
sti
stc
lret
cmpsb
xchg
lret
rcrl
roll
jmp
cmp
sub
pop
jle
jecxz
in
sub
push
test
je
insl
mov
nop
pop
iret
mov
cmp
cmpb
xchg
add
into
or
xchg
jmp
and
xor
xchg
out
push
pop
insl
into
cmpsb
or
ficompl
push
mov
push
adc
ret
add
arpl
dec
into
dec
shll
push
sub
lcall
add
xchg
add
test
das
hlt
fistps
xchg
leave
mov
es
xchg
lcall
cmp
sub
lods
loopne
jl
lea
xor
jb
ljmp
pushf
or
movsb
jbe
in
mov
push
xchg
loop
scas
sti
in
add
jl
jg
cli
test
in
cmp
dec
mov
js
pop
lea
mov
fimull
cmp
push
inc
decl
sbb
dec
fs
dec
mov
stos
or
inc
fcoms
and
fisttpll
outsl
mov
mov
push
aam
pop
mov
jl
and
mov
in
data16
adc
stos
adc
pusha
xchg
adc
mov
jecxz
mov
std
push
mov
test
mov
int
adc
jge
xchg
lods
nop
fs
xchg
jecxz
mov
fst
mov
jns
push
jp
push
add
in
aam
cwtl
aad
inc
ss
stos
cmpsb
es
mov
lock
add
sbb
mov
mov
jp
mov
cmp
test
sbb
push
shll
sub
mov
adc
fwait
mov
lahf
sub
fsubs
mov
xchg
or
push
bound
fisttps
cmp
popa
xchg
inc
pop
or
cmpsl
popa
fcmovne
jnp
pop
insb
or
cwtl
fstenv
daa
or
imul
xchg
pandn
inc
shld
loope
or
push
test
mov
or
stos
jle
mov
pushf
lret
in
mov
sub
int3
js
lods
xor
adc
or
sbb
mov
rcrl
std
stc
or
mov
out
inc
jecxz
out
jae
pop
fistpll
aas
mov
jb
xor
add
sub
push
outsb
cmp
test
pusha
adc
rcrl
lods
fistl
push
sub
xor
pop
xor
pop
mov
push
push
sub
dec
push
sbb
popa
dec
dec
shll
inc
sbb
add
in
mov
push
mov
jb
mov
out
fidivrs
or
push
mov
push
pop
pushw
push
cmp
inc
bound
add
int3
testb
daa
or
mov
add
mov
mov
mov
and
lods
outsb
pop
lret
mov
xlat
add
cwtl
mov
scas
aas
add
jp
gs
or
dec
inc
pop
into
push
test
cmc
mov
and
xor
jge
xor
clc
pop
pop
push
pop
push
pop
stc
mov
jns
xor
cmp
mov
pop
enter
inc
jae
pop
and
cmc
js
dec
test
add
push
pop
movsb
adc
sahf
hlt
insb
popa
pop
adc
and
add
sub
mov
iret
cwtl
dec
lods
frstor
push
jecxz
xor
sub
push
hlt
gs
pop
imull
popf
lock
sbb
orl
in
leave
xchg
xor
mov
sahf
pop
insb
xchg
ret
dec
lods
xchg
jg
mov
xchg
jae
xchg
sbb
or
cwtl
mov
cmpsl
mov
dec
jl
or
push
sub
dec
pop
pop
push
jae
adc
pop
pop
sub
pop
fwait
dec
loope
cmp
add
iret
mov
mov
rcll
ljmp
mov
pop
dec
int3
lods
fisubl
xchg
rorl
cmp
mov
fiadds
jb
pop
mov
mov
in
mov
dec
xor
push
int
lods
fld
lcall
lcall
mov
ja
or
sbb
aam
add
sti
xchg
movsb
or
lods
or
sbb
outsl
fwait
dec
or
lret
push
cwtl
rcl
cld
add
cmc
adc
mov
sbb
xchg
mov
cmpsb
push
push
add
outsb
adc
and
cmp
push
loop
dec
cmpl
add
daa
jp
int3
pop
and
fnclex
jecxz
jne
mov
jae
push
adc
pop
pop
cmpb
pop
faddl
test
das
sub
lods
xor
pushf
inc
push
rorl
fucomp
in
movsb
lods
stos
repnz
pop
adc
dec
pushw
call
fiaddl
sahf
fstl
add
sub
loop
xlat
adc
sub
pop
mov
stc
cmpsb
inc
stos
and
inc
jmp
lea
clc
adc
pop
push
push
fistpl
arpl
mov
dec
xor
pusha
mov
out
xor
push
shll
dec
iret
mov
cmc
inc
orb
imul
ds
push
dec
push
or
pop
adc
or
imul
cmc
or
sub
aaa
jl
nop
xchg
stos
xchg
sub
push
test
inc
scas
mov
cli
add
imul
subl
int
mov
jle
rcl
adc
insb
stos
pushf
or
xchg
scas
mov
in
xorb
jns
adc
mov
sahf
mov
fistpl
hlt
test
mov
push
sub
mov
enter
sub
mov
aas
ja
es
stos
push
lcall
ret
and
pop
sbb
test
roll
xchg
pop
lods
push
mov
call
and
jae
adc
hlt
adc
pop
mov
in
pop
mov
jnp
jle
scas
mov
push
and
imul
push
push
adc
pop
xchg
xchg
sub
lea
push
dec
lcall
add
jb
fmuls
pop
jle
iret
mulb
jmp
imul
bound
je
out
outsl
out
mov
push
dec
or
mov
mov
lods
ret
mov
ss
dec
jae
xor
mov
dec
mov
mov
in
test
js
pop
push
cld
cmpsl
test
pop
call
in
sub
xchg
aam
andl
mov
sbb
mov
mov
testl
xor
or
sub
adc
arpl
push
lds
xor
mov
jbe
out
cmp
and
adc
mov
sub
jle
jg
dec
in
inc
adc
stc
es
or
shl
cli
mov
fsubl
adc
lahf
xchg
ret
mov
js
mov
notb
cmp
jle,pn
mov
repz
int
xlat
xor
add
mov
cmpsl
push
outsl
gs
xor
cmp
imul
mov
loop
aas
aam
jne
rclb
lcall
ret
mov
lret
push
dec
imul
xor
sbbl
push
push
lahf
outsl
pushl
out
fstpt
popa
lock
mov
gs
jno
fwait
rcll
and
mov
mov
and
adc
mov
cmpsb
test
filds
imul
xchg
xchg
pop
jl
test
iret
popf
xor
out
pop
mov
std
pop
rclb
cmp
inc
out
cmpsb
mov
rorl
dec
dec
test
or
push
gs
sub
inc
mov
ljmp
mov
fistps
add
ss
dec
rolb
mov
push
adcb
pop
dec
xor
adc
xor
cmc
cmovns
push
dec
inc
push
fcoml
inc
stos
aad
shlb
lcall
lret
pop
mov
pop
jge
sbb
adc
in
aad
in
into
push
lretw
pop
or
and
shlb
popa
popf
inc
xor
jg
mov
dec
push
pop
pop
xchg
xor
popf
mov
jg
inc
mov
mov
or
dec
lret
jne
xchg
dec
and
cmpsb
cmp
adc
lock
cmp
mov
jge
add
push
fisttpl
movl
push
pop
push
inc
mov
jne
notb
dec
enter
loopne
int3
push
jmp
int
mov
ja
jno
sbb
loope
push
pop
stos
sub
test
aaa
data16
in
mov
cmp
imul
or
pop
test
loopne
pop
arpl
and
imul
jne
mov
cmpsb
push
fsubrp
out
mov
nop
icebp
sub
out
mov
jb
fidivrs
push
sahf
mov
pop
sbb
push
mov
loope
mov
test
inc
jbe
addr16
mov
dec
or
stc
nop
sub
pop
sbb
pop
inc
mov
xor
sub
xor
or
scas
scas
fxam
add
les
mov
cmpsl
add
jno
test
hlt
std
sahf
pop
inc
xor
mov
stos
cli
icebp
stos
fiaddl
mov
lea
test
in
repnz
push
leave
leave
cwtl
jae
adc
gs
jp
mov
inc
fsubl
test
xchg
fldt
fstpt
sub
xlat
aaa
sahf
ret
fdivl
jno
scas
mov
sahf
or
pop
stc
ret
cld
pop
push
testl
or
jno
pop
das
lods
inc
or
sbb
nop
cld
push
and
and
dec
pop
pop
xlat
cmp
push
jno
push
pop
sti
mov
popa
dec
xor
stos
mov
outsl
pop
outsl
std
daa
gs
pop
arpl
rcll
aaa
shll
lock
loopne
xorl
sub
xor
jae
pop
add
pop
mov
inc
cwtl
aad
cltd
sub
fstps
jl
mov
jge
incb
add
fs
lds
imull
mov
insl
push
dec
rcrb
mov
adc
jmp
jecxz
repz
shll
ss
mov
sbb
data16
hlt
jb
add
test
push
dec
lds
pop
sub
les
push
les
sbb
test
test
ror
dec
mov
fldl
sub
xchg
dec
clc
fmull
cmc
aaa
sbb
mov
testl
lcall
scas
and
into
ficomps
addb
jmp
sub
addb
dec
js
jmp
mov
mov
or
jl
repnz
cs
ss
mov
cmp
test
test
repnz
mov
addl
sbb
in
out
je
push
addl
adc
xchg
aaa
cmp
outsb
dec
imul
out
les
push
int
jnp
in
mov
lods
cmp
lds
loopne
xor
xor
loope
sbb
lea
js
aad
pop
push
mov
and
cmp
jp
lahf
mov
fstpt
pop
loope
push
leave
in
gs
lods
adc
pop
lods
or
inc
xchg
ss
sub
mov
push
add
xchg
or
out
out
xchg
in
int3
stc
imul
lock
in
int
inc
in
iret
cmpsl
popf
mov
cmp
add
and
or
lret
sub
mov
fistpll
aam
shr
push
in
pop
dec
mov
testl
rcr
aas
hlt
dec
dec
cmc
adc
inc
out
fucomi
jecxz
lret
pop
jmp
addr16
movsl
jmp
fstpt
mov
lds
and
bound
out
mov
mov
pop
inc
sbb
adc
arpl
cmp
rclb
ss
inc
pop
out
adc
mov
mov
pop
outsl
cmp
push
pusha
jmp
mov
sbb
data16
xchg
test
ret
test
or
xchg
pop
push
sub
pop
and
adc
test
push
pop
jnp
dec
addb
stos
and
ljmp
mov
pop
mov
add
add
push
cli
sbb
je
test
test
lret
in
lds
filds
fs
bound
es
fidivs
pusha
out
outsl
or
addr16
mov
addl
mov
movl
mov
jne
outsl
es
sarb
fldl
imul
add
pop
mov
test
jno
test
push
iret
xor
movsb
xor
bound
jne
add
idiv
call
shrl
push
lcall
pop
gs
xchg
mov
cmc
or
loope
mov
mov
mov
adc
repz
adc
daa
and
jp
mov
jle
lret
shrl
scas
lods
ffreep
imul
adcl
ret
inc
test
fstl
les
movsb
iret
jmp
in
jnp
imul
mov
movsb
bound
rcrb
movsl
std
jl
mov
pop
mov
test
cmp
pop
add
rorb
sbb
pop
pop
adc
xchg
push
mov
xchg
cmp
push
and
int
pop
out
subb
mov
fildll
int
cmp
lea
jne
inc
dec
ljmp
push
mov
mov
inc
icebp
cmp
add
dec
mov
dec
loopne
cltd
or
mov
add
push
mov
cltd
push
mov
hlt
push
xchg
jbe
dec
movsb
pop
sarb
dec
rcll
cmpsb
addr16
pop
inc
inc
sbb
push
je
mov
mov
cs
cmpsb
aam
movsb
mov
xchg
sub
dec
xchg
decl
dec
ret
popf
lods
xchg
clc
rorb
push
lcall
push
xor
pop
adc
inc
mov
nop
pop
adc
push
xor
fsubs
and
dec
sbb
loop
xchg
sub
jl
xchg
cwtl
fldlg2
and
inc
jb
in
imul
out
adc
or
hlt
and
xchg
data16
iret
mov
mov
scas
clc
xor
pop
cmp
xor
sbb
pusha
pushf
pop
out
sahf
adc
dec
rcrl
jo
push
stc
aam
lods
mov
bound
push
jp
std
lock
mov
jmp
test
xchg
decl
bound
mov
inc
cmp
mov
lods
jnp
scas
push
icebp
pop
jmp
dec
loop
je
jecxz
jp
or
stc
inc
adc
mov
fldl
lods
cmpsb
mov
out
pop
sub
fisttpll
dec
pushf
out
js
ret
jge
scas
dec
pop
xor
iret
and
jle
push
dec
mov
fiaddl
mov
aam
pop
push
fnsave
bound
pop
lret
mov
mov
dec
fadds
iret
out
pop
out
mov
xchg
sbb
rcll
sbb
aam
into
sbb
dec
add
xchg
fadds
pop
mov
add
mov
add
jo
cmp
mov
inc
fbld
incb
mov
push
cli
mov
mov
or
rolb
je
loope
inc
ljmp
clc
jnp
sub
pop
stos
subb
imul
out
and
xor
sbb
in
scas
iret
jg
push
das
loope
test
jl
add
cld
jno
mov
xor
pop
sbb
insl
lahf
rcl
ljmp
clc
je
out
mov
cmp
loope
add
test
ret
nop
xor
fwait
mov
call
sarb
mov
inc
or
push
cltd
into
inc
mov
adc
inc
mov
mov
xchg
pop
sub
inc
stos
mov
dec
icebp
scas
fwait
mov
jecxz
xchg
mov
ds
insb
fwait
jg
enter
in
loope
inc
rcr
jae
dec
insb
fimuls
in
idivb
inc
sub
movsb
dec
xor
push
mov
out
pop
lret
decb
push
shll
ffree
into
pop
bound
lahf
add
adc
rorl
or
mov
mov
aam
fnsave
xchg
lods
es
mov
insl
sbb
adc
mov
jns
cmp
push
decb
sahf
fiadds
popf
push
inc
loope
sbbl
pop
adc
push
scas
push
pop
lods
adc
movsl
in
pusha
push
rclb
std
shll
les
aad
insb
push
dec
ret
std
mov
iret
rolb
test
sahf
jb
outsb
jle
xor
dec
int
in
cmp
xchg
cmpsb
scas
inc
int3
aad
add
jmp
pop
jp
xchg
in
fprem
adc
pop
test
xor
pop
pusha
pop
sbb
push
sub
dec
or
xchg
cmp
ds
push
repnz
sbb
jns
pop
adc
add
adc
pop
in
fs
push
mov
jbe
xchg
xor
shrb
lea
mov
pop
pop
pusha
or
outsl
popa
int3
inc
or
imul
into
int3
adc
add
mov
push
xchg
out
out
scas
jp
cmp
pushf
jo
jne
addb
pop
mov
cmp
testl
idiv
les
in
and
mov
inc
xor
xchg
xor
lods
push
movsl
cmp
or
adc
xchg
insl
ja
pop
mov
jle
addr16
sbb
mov
xchg
pop
fsub
fwait
pop
xchg
cli
push
arpl
repz
push
cmp
mov
mov
cmpsl
mov
fcomi
lea
push
cmpsb
inc
scas
push
pop
in
jmp
push
push
aad
add
inc
std
xchg
mov
add
pop
sarb
mov
mov
lcall
je
je
arpl
bound
ds
insb
lahf
fwait
cmp
flds
cmp
and
add
jge
sbb
mov
jle
call
out
lret
inc
jno
mov
dec
push
js
aaa
xor
xchg
cmp
pop
pop
inc
adc
fadd
scas
shrb
cmp
fldcw
out
pop
pop
fbld
clc
xchg
sub
aad
push
in
adc
inc
pop
mov
add
mov
xchg
ret
js
mov
in
xchg
pop
out
sub
loopne
lea
repnz
adc
push
dec
aas
cmpsl
xchg
lahf
push
xchg
mov
jns
adc
test
imul
mov
pop
push
in
inc
clc
inc
sbb
dec
xchg
mov
sub
ror
and
jno
inc
fcomp
jne
sub
cmc
sub
out
fsts
call
ret
xor
clc
add
xchg
es
pop
mov
push
ja
add
jl
movsb
adc
je
dec
pushf
fwait
mov
xor
iret
lret
sub
rclb
cmpsl
pusha
mov
test
or
xchg
dec
je
dec
and
add
mov
bound
pop
or
orb
mov
and
loop
jns
cmp
push
out
dec
pop
or
fldenv
inc
negb
jne
mov
lcall
scas
shll
leave
insl
cli
and
or
cmp
push
stos
push
fcmovb
xchg
xchg
adc
aam
jl
mov
push
jnp
insb
loope
out
pmaddwd
ficompl
jp
or
popf
inc
adc
adc
ficoml
fnstsw
xchg
xchg
ds
or
mov
mov
ret
jp
xchg
fsubrs
cmp
out
mov
xchg
cmp
mov
adc
or
and
addl
or
subl
add
lea
into
data16
stos
mov
cli
pop
add
loope
nop
push
stos
cvtps2pd
jnp
jecxz
leave
adc
int
daa
mov
lret
fnsave
mov
imul
leave
xor
addl
js
call
ret
data16
xchg
repnz
sub
scas
adc
mov
icebp
cmp
mov
stc
jmp
stos
data16
mov
adc
xor
outsl
movsb
rcll
xchg
mov
test
add
and
out
stos
pop
jns
dec
sub
subb
cmp
test
popf
pop
adc
shrb
xchg
das
push
mov
jg
pop
and
movsb
aam
xor
adc
std
adc
cmp
mov
mull
test
rcrb
fmuls
int
mov
mov
dec
jmp
fs
adc
or
inc
fwait
mov
loop
iret
sub
jo,pt
ret
mov
xchg
adc
stos
pushf
lahf
cld
push
or
sub
out
popa
cmpsl
aad
mov
push
jo
addr16
pop
cmc
dec
jnp
fst
daa
mov
inc
jmp
push
push
or
xchg
sub
mov
fistpll
loop
cmp
push
std
rcr
js
out
xchg
add
jmp
in
sub
sub
in
aas
ds
sahf
jns
dec
bound
inc
ret
sbb
roll
ret
mov
mov
cmpb
cmp
add
aas
adc
cmp
sti
dec
sarb
fwait
icebp
bound
je
loope
fmuls
iret
mov
add
es
xchg
popa
les
das
push
adc
mov
hlt
jne
and
xor
fldt
out
int3
ret
inc
cmp
and
dec
mov
daa
and
inc
in
mov
inc
xor
jb
ja
lcall
es
and
fdivrs
inc
nop
inc
xchg
pusha
push
sub
loopne
stos
inc
or
mov
lret
dec
test
or
or
in
pop
sub
pop
clc
xchg
fdiv
jge
dec
cmp
pop
es
lahf
and
pop
inc
lcall
mov
xchg
bound
repnz
insl
push
mov
mov
push
jecxz
icebp
add
cwtl
in
shlb
stos
push
mov
ja
dec
addb
dec
jecxz
sub
xchg
adc
cmp
jg
mov
lahf
mov
mov
fisubrl
cmpsb
xchg
daa
xor
xchg
arpl
push
int
repz
cwtl
adc
arpl
test
mov
or
cmp
push
push
popf
sbb
push
pop
icebp
adc
add
add
rcll
adc
and
cli
dec
pushf
dec
cmp
fdiv
xchg
mov
les
xchg
adc
insl
sarb
stos
or
xor
mov
lds
sahf
in
mov
xor
push
ds
ficoml
jge
mov
ffree
test
adc
lock
iret
cld
nop
insb
lea
scas
jne
dec
mov
aad
mov
fldcw
pop
and
subb
push
pop
out
cmc
rcrb
int3
outsl
out
mov
mov
mov
push
and
les
pop
mov
shlb
fiaddl
jle
jmp
mov
or
iret
fwait
xchg
sub
adc
rol
xor
scas
add
nop
mov
jg
lcall
add
rcrb
fsubrl
xchg
push
inc
lret
dec
pushf
mov
int
aam
pop
or
adc
mov
inc
lds
das
testl
fidivs
sub
jns
mov
shll
or
cmp
and
push
dec
shl
cltd
fwait
cmp
add
mov
jbe
cmp
pop
mov
mov
xor
pusha
icebp
dec
cmp
lcall
mov
test
nop
out
ljmp
cltd
mov
insl
mov
pop
sub
and
imull
push
int3
add
test
push
pushl
shl
or
inc
xchg
cli
pop
cld
imul
and
sub
pop
lods
sbb
cld
xor
mov
aaa
xchg
mov
adc
xor
inc
pusha
jl
repz
mov
test
cmp
cld
inc
test
inc
int3
fdivs
scas
sub
inc
xchg
xchg
fbstp
aas
xor
cld
pushf
push
out
sub
cmp
jo
rcrb
jbe
pop
xor
and
repnz
mov
pop
enter
les
mov
movsl
xchg
imul
cwtl
lods
enter
jno
orb
in
sarb
and
jo
les
cltd
mov
cs
cwtl
xchg
fnstenv
or
inc
shll
icebp
xchg
daa
sub
popf
notl
movsl
adc
fmull
and
mov
pop
ss
ret
mov
sahf
xorl
push
jmp
fstpt
lea
jns
xor
pop
int3
rcl
sub
add
pop
mov
jle
mov
or
jmp
das
jle
add
inc
sub
jecxz
sub
jecxz
pop
mov
popf
aad
insl
ljmp
rcll
adcl
xlat
sbb
mov
gs
call
pop
xorb
fidivrs
lds
rcrl
and
mov
mov
cmp
mov
fs
jbe
fs
cmpsl
pop
mov
xchg
arpl
call
mov
stos
or
dec
dec
xchg
mov
pop
lret
aad
push
and
dec
imul
lret
data16
seto
ret
sbb
sub
jne
push
test
stos
push
dec
cltd
push
push
cmp
stos
xchg
je
and
mov
rorb
lret
ljmp
jle
loopne
or
loop
xchg
xor
loope
lds
mov
sub
mov
sti
or
cmp
outsl
cwtl
mov
rcrb
cmp
cmpb
xchg
cs
fimuls
test
sbb
shll
arpl
jl
xor
push
aad
rcrb
mov
xchg
aas
inc
mov
cwtl
daa
push
jns
xor
adc
jl
into
cmpsb
loopne
sbb
dec
pop
jl
ficoml
push
out
cwtl
xor
lea
outsl
testb
cmp
cld
sbb
test
fisubl
jl
or
mov
push
push
cld
mov
lods
mov
mov
mov
mov
pop
pushl
inc
fildl
mov
sub
or
xor
mov
in
sub
pop
push
cltd
xchg
ud0
fst
lcallw
cmp
jmp
mov
or
mov
mov
sub
push
mov
in
mov
ss
test
add
aaa
lods
scas
xchg
jg
scas
cbtw
adc
xchg
aaa
jge
jb
jl
xchg
pop
adc
xor
ljmp
mov
mov
inc
cltd
inc
jo
repnz
jmp
sete
push
pop
and
je
cmp
sahf
fwait
stc
cmp
jne
mov
xor
shlb
cld
mov
out
test
xchg
in
dec
and
fstpt
cs
not
lcall
mov
jne
jae
ret
mov
pop
jb
or
pop
divb
lahf
mov
add
add
das
mov
into
push
cmp
hlt
xchg
dec
sbb
out
add
add
jmp
jge
dec
nop
in
sbb
fbld
pop
sub
cmp
xchg
leave
in
lret
faddl
adc
mov
mov
xchg
mov
sahf
dec
in
jb
clc
inc
mov
mov
adc
pop
push
mov
and
fs
cltd
negb
in
iret
hlt
sbb
jae
mov
sti
ret
cmpsl
mov
and
orb
stos
fadd
shlb
loop
and
inc
outsb
addr16
jl
xchg
xlat
jnp
ja
or
out
aad
cmp
dec
rcll
cmp
cmpsb
or
call
out
mov
adc
enter
xchg
sub
add
xchg
pop
pop
jno
jbe
mov
test
dec
xchg
pop
test
adc
pusha
mov
enter
mov
fs
mov
jecxz
mov
scas
out
ret
pop
cmp
data16
insl
pushf
fdivs
shlb
push
out
or
mov
lods
xchg
paddb
aaa
push
jp
cmpsb
xchg
adcl
cli
iret
fisubrs
enter
mov
std
cmp
ds
push
ds
jge
cmp
push
clc
sbb
jo
sbb
jnp
in
pusha
xor
cmc
push
add
iret
ret
fnstcw
cs
push
fsubrs
lds
je
repz
lret
push
jle
stos
add
adc
cmc
xchg
daa
mov
js
lock
and
ds
repnz
xchg
dec
jbe
cmp
rcl
aas
popf
enter
jne
xor
icebp
lods
mov
push
xchg
std
call
movsl
lahf
jno
jmp
fisttpll
jne
pop
sub
adc
sub
cwtl
subb
insl
lock
jge
nop
repnz
loope
dec
and
fdivrs
imul
cld
popa
dec
jmp
lods
jmp
cmpsl
mov
out
insl
ja
xor
jle
into
mov
and
mov
clc
aaa
sbb
test
in
add
movhps
inc
inc
dec
je
flds
fstpt
testb
jae
mov
mov
repz
in
ret
shlb
cmpsb
fnstenv
repnz
aad
pop
shlb
daa
add
insl
mov
lds
mov
cmp
mov
scas
dec
loopne
pushf
xchg
js
push
popf
test
idivb
and
xor
in
fisubrl
jne
add
mov
lds
imul
aad
jmp
xchg
jmp
es
xchg
rorb
jecxz
lods
or
mov
push
xchg
arpl
cmp
push
mov
loop
loope
insl
iret
jae
xor
mov
out
add
sbb
pop
cmc
clc
in
lods
pop
imul
nop
mov
lret
sbb
jg
loopne
sti
sub
fistl
jns
lods
in
lods
add
dec
addr16
movsb
test
cwtl
push
sub
lret
popf
lret
repnz
xchg
insb
test
sar
out
lahf
jae
and
mov
popf
jbe
addb
out
cltd
mov
or
dec
stos
cli
outsb
call
sub
mov
int3
test
add
test
dec
in
in
addr16
sub
loope
mov
xor
adc
xchg
push
mov
lcall
ljmp
test
je
mov
dec
jno
sub
or
mov
mov
or
repnz
push
inc
and
xlat
das
pop
adc
pop
pop
testl
sub
xchg
pop
jnp
jnp,pn
inc
xor
lret
outsb
test
lods
repz
lretw
mov
jp
sbb
push
popf
mov
mov
out
pop
int
and
lods
loopne
mov
cli
dec
int
add
dec
dec
dec
cmp
shlb
sahf
xchg
mov
pop
push
and
je
pop
or
ret
xchg
dec
imul
xchg
or
jl
adc
shl
fldt
xchg
into
push
stos
pop
stc
mov
mov
cmp
insl
rcrl
cmpsl
rclb
mov
in
push
ficoms
sbb
jge
cltd
cmp
dec
cmp
push
xchg
inc
fwait
xorl
lret
lods
repz
or
imul
cwtl
push
xchg
adc
mov
inc
mov
loop
sub
sub
adc
shll
cli
ficoms
or
adcb
shrl
js
push
mov
mov
scas
dec
cmpsb
inc
jns
je
std
inc
ret
addr16
lock
mov
shll
cmpsl
xchg
imul
pop
pusha
sahf
stc
shrl
ss
sbbl
jne
cmpsl
dec
rol
or
inc
mov
xchg
sbb
lahf
shrl
xchg
mov
sub
fdivrs
int3
pop
mov
pop
jbe
push
xchg
or
divb
cmp
cmpsb
jp
mov
inc
arpl
cmp
mov
inc
add
sub
sti
or
sti
insl
inc
mov
cltd
imul
dec
es
mov
mov
lds
push
cmc
jne
jge
jle
add
std
and
pop
stos
mov
iret
lods
cmpsl
jl
test
mov
or
out
movsl
add
test
pop
mov
mov
inc
and
sbb
outsl
jg
mov
add
lock
stos
ljmp
ljmp
mov
fstpt
jg,pn
sti
test
lret
xor
cmp
rolb
jmp
mov
cmpsb
pop
dec
mov
jecxz
inc
dec
mov
arpl
mov
jo
inc
xor
pop
jnp
add
insl
aad
loopne
loop
push
xorb
sbb
out
mov
in
jp
push
cmpsl
pop
mov
jno
fisttps
scas
outsl
push
jbe
mov
ret
aam
sub
fldenv
mov
les
outsb
sbb
jb
lahf
jno
ret
lds
stos
popf
fcomp
push
cmp
push
es
xchg
stos
add
jmp
in
cld
pop
mov
jle
mov
dec
stos
jge
test
scas
pop
inc
or
dec
pcmpeqd
adcl
or
mov
push
pushf
xorb
xor
push
cmp
jge
adc
pop
fadds
imulb
jno
fwait
scas
pop
jbe
mov
ret
shlb
and
popa
fstps
dec
sbb
sarb
stos
outsl
mov
mov
inc
hlt
cmc
arpl
das
xlat
mov
push
fidivrs
pop
xchg
repnz
xchg
add
lret
adcl
sarb
lret
rcll
jbe
data16
dec
pushl
sub
cltd
cmp
in
addr16
mov
sbb
fmul
pop
or
push
jno
cmp
fdivl
mov
hlt
loopne
imul
mov
js
mov
rclb
test
jno
inc
xchg
ss
pop
bound
pop
popa
jg
mov
nopl
inc
pop
xlat
mov
adc
enter
xor
loop
in
repnz
out
and
and
sub
dec
out
fxch
pop
lods
dec
push
xchg
mov
dec
rcrb
adc
in
sub
sub
jae
and
and
pop
xchg
mov
cmc
lea
adc
aaa
jbe
mov
inc
or
sbb
jnp
dec
jecxz
es
mov
scas
outsl
mov
cs
fisubs
test
mov
icebp
aas
push
jbe
dec
cmp
stos
out
fstp
jne
mov
insl
jge
and
adc
push
push
mov
or
pop
sti
fadds
cmp
scas
pop
inc
mov
int
cmpsb
cmp
loop
cld
push
stc
fwait
std
and
mov
ror
pop
in
loope
add
mov
sub
add
int
in
mov
clc
dec
insb
test
push
add
sub
inc
mov
mov
push
push
popf
pop
or
mov
pop
out
add
fstpt
cmpsl
xchg
or
test
outsl
sbb
nop
mov
test
test
sub
es
cmp
test
sarb
xor
les
inc
cmp
mov
cmpsl
xor
in
mov
insl
push
jmp
mov
cs
jp
mov
push
rolb
jns
pop
mov
test
add
cld
mov
xchg
sbb
push
mov
add
imulb
outsb
pop
inc
sbb
loopne
test
pop
sbb
ss
xchg
fldt
jno
push
lret
test
jl
and
sahf
repz
dec
cmpb
add
jns
incl
mov
mov
jo
jecxz
out
popf
xor
cli
push
mov
inc
es
test
adc
add
dec
push
leave
aam
in
mov
mov
mov
movsb
leave
xchg
mov
cmc
xor
xor
xchg
adc
xchg
cmc
sub
inc
pop
inc
subl
fistpl
fwait
and
popa
sbb
inc
fsubrs
or
cltd
adc
cld
or
mov
dec
insl
sub
add
popa
mov
xlat
xchg
insb
xor
mov
jae
fs
xchg
cmp
gs
push
icebp
inc
push
lahf
pop
stc
mov
testl
jb
lea
mov
mov
cmp
aaa
in
jo
adc
sub
adc
shlb
mov
mov
fisttpll
outsl
inc
inc
xchg
dec
outsb
aad
and
pop
pop
jae
add
inc
popf
shl
rclb
lds
mov
orb
sahf
shll
cmpsb
dec
inc
dec
cmp
inc
add
out
mov
mov
push
or
out
rorb
test
and
sbb
mov
lods
aam
mov
jg
lret
dec
test
sub
mov
xor
and
xor
stos
xor
pusha
mov
xor
mov
cmp
test
push
aaa
movsl
rorb
lds
xchg
outsl
popf
dec
sbb
test
iret
icebp
fidivrs
out
insl
add
sub
pop
adc
jno
sub
push
jge
stc
adc
ret
add
fwait
jp
mov
aaa
mov
mov
lds
inc
mov
mov
xor
cltd
mov
cmpsb
xor
adc
mov
sub
xchg
repz
lret
jbe
mov
and
out
jecxz
test
ret
and
orb
push
es
and
mov
imul
sub
sub
push
mov
adc
xchg
inc
ret
aas
fcoml
jl
mov
xchg
dec
lods
mov
sarl
pushf
repz
jne
pop
dec
shr
fisttpll
insb
mov
push
test
dec
push
mov
fwait
hlt
xchg
mov
mov
out
clc
aad
rcl
movsb
insb
into
mov
sub
ds
in
sti
jg
popa
out
push
pop
jnp
outsl
addb
les
std
fbstp
add
cmp
add
xchg
test
arpl
jge
pop
cli
cltd
or
push
ss
jo
add
add
test
jecxz
aad
lods
test
mov
mov
js
shll
jecxz
inc
outsl
add
pop
enter
jle
and
or
mov
int
call
imul
arpl
test
sarl
aad
jb
out
mov
add
xchg
and
clc
adc
adcl
fwait
outsb
add
flds
and
cs
addr16
rol
loop
xchg
nop
popa
std
and
cvtps2pd
lahf
into
aas
and
popa
ficompl
in
jp
clc
sbb
scas
enter
in
jmp
jbe
enter
out
dec
xchg
lods
insb
mov
es
or
repnz
mov
jb
mov
iret
es
add
cmpsb
sbb
loop
repz
xor
sub
pop
ficoms
push
daa
roll
daa
or
sub
dec
sub
rorl
xchg
xor
cmc
xor
sbb
rcrl
cwtl
mov
das
sahf
lods
xchg
pop
pusha
addr16
or
cmp
cmp
add
inc
sub
fwait
xchg
jae
loope
push
shrb
xor
fistl
mov
rcll
fdivs
jg
or
aaa
stos
adc
out
in
aas
out
jbe
popf
ljmp
out
mov
inc
lret
or
dec
cmp
jle
cld
fistpl
rclb
fiadds
shrb
push
xor
and
cmpsb
xor
fildll
xchg
shll
cltd
stc
ljmp
mov
test
lods
or
ds
xor
repz
dec
sti
in
xor
mov
or
push
pusha
imul
outsb
push
mov
xor
inc
pop
pop
inc
inc
repz
lds
push
in
jle
lret
aam
mov
push
dec
sub
cld
cmpb
aaa
orl
xlat
ret
pop
inc
iret
pop
bound
imul
je
andl
pusha
fdivrs
icebp
mov
pop
xor
jne
or
xor
mov
push
inc
in
jnp
lret
jne
shl
popf
mov
xchg
insl
cmpsb
mov
fsts
cwtl
sub
adc
inc
push
xor
call
jmp
pop
dec
rol
jmp
sub
jecxz
out
rcll
out
test
cwtl
sti
jle
cmp
pop
xlat
xlat
push
int
out
cli
push
mull
sub
sahf
xchg
xor
sbb
test
sbbb
xor
mov
cltd
addl
mov
adc
lods
filds
sub
in
std
add
sub
dec
lock
sub
int3
and
and
adc
xor
mov
xchg
mov
cmp
or
pop
mov
lds
xchg
xorb
insl
roll
aas
mov
mov
xchg
sbb
mov
sbb
hlt
shll
sbb
pusha
lret
rolb
push
or
fdivrs
mov
cld
aas
sub
ss
andb
pop
sarl
pop
cmpsl
push
hlt
fs
push
mov
dec
jecxz
and
push
xchg
hlt
lods
or
sbb
int3
inc
stos
lea
pop
clc
or
rcrb
sbb
movsl
fstpt
mov
lods
cmp
rcrl
push
push
loopne
xchg
addr16
outsb
push
inc
dec
sbb
out
mov
inc
inc
inc
lea
lock
ljmp
popl
xchg
lock
mov
popa
fstps
cmpsl
or
xchg
cmpsl
aad
dec
add
mov
pop
call
inc
lahf
in
xor
sbb
mov
jo
pop
jno
cmp
and
pop
inc
inc
jle
stc
pop
loopne
mov
add
roll
or
aas
xchg
or
dec
ja
jnp
daa
and
adc
mov
pop
and
je
out
loope
inc
mov
xor
ret
pop
cli
mov
lods
xchg
out
xchg
sbb
xchg
push
add
sub
and
inc
mov
xchg
lea
mov
out
rorb
leave
mov
push
xor
shl
mov
enter
aam
imul
jmp
or
cmp
sbb
add
lods
or
and
mov
sarl
subl
mov
or
lea
jmp
jl
faddl
test
js,pt
fcoml
sahf
jae
inc
push
mov
movsb
je
mov
and
push
or
ret
in
inc
cmp
adc
outsb
xchg
mov
pop
sbb
stos
lds
dec
cltd
mov
fdivrl
jge
out
dec
std
rorb
mov
dec
out
push
lret
adc
sub
mov
and
inc
mov
sti
sub
xlat
sub
negb
jns
and
les
jno
sub
add
stos
add
add
subb
fisubs
jecxz
pop
ljmp
out
sub
push
or
and
adc
jne
inc
lds
stos
sbb
cmp
push
adc
lods
add
in
inc
inc
jp
push
jg
fistps
loope
fsubs
cmpl
push
out
inc
mov
or
xor
lret
insl
push
mov
aad
lahf
bound
ja
mov
xchg
xchg
inc
iret
sub
lods
lret
loop
mov
mov
in
iret
daa
lea
sbb
dec
leave
enter
dec
and
adc
je
fists
mov
mov
pop
xor
jmp
loope
ds
pushw
push
int
nop
loopne
fisubrs
repnz
sbb
push
sbb
sbb
lcall
pop
fcomp
mov
lods
add
jns
cmpsb
fwait
out
pop
gs
jl
inc
lret
aas
nop
sub
dec
pop
push
jle
rolb
lds
sbb
fists
sbb
nop
jnp
ja
pop
mov
lcall
add
arpl
stos
aas
sahf
sahf
adc
sub
jnp
mov
dec
xor
push
movsl
lods
mov
in
out
pop
or
scas
xor
cmp
pop
test
jne
cmp
das
mov
xor
mov
mov
imul
imul
or
pushf
pop
ja
push
imul
cmpsl
inc
jle
adc
jo
repz
jg
xchg
lock
lahf
lods
cli
push
push
cmp
cs
push
dec
add
jns,pt
dec
xchg
xor
sub
xchg
mov
into
mov
xor
and
cltd
pop
push
insb
inc
mov
std
arpl
sar
mov
jno
sti
adc
lcall
popf
or
les
loope
dec
movb
jbe
insb
ret
jb
iret
orb
jge
pushf
je
push
xor
jnp
jns
push
jno
lcall
xchg
mov
mov
push
loop
hlt
xchg
and
push
je
mov
in
sti
cmpsl
pop
pop
cwtl
dec
and
push
inc
pop
iret
mov
and
aas
in
cs
mov
shrl
jno
ja
iret
push
lods
sti
lret
mov
mov
mov
mov
sbb
shlb
pushf
in
and
jmp
mov
jecxz
mov
icebp
fsubrl
je
daa
xchg
out
and
and
cmpsb
push
ljmp
inc
lods
cmpb
mov
sub
test
jb
jmp
push
inc
pop
mov
inc
lea
sbb
add
add
rcll
lsl
push
push
dec
pand
lret
mov
lret
imul
insb
lret
popf
arpl
divl
xchg
stos
pushf
shrl
sub
or
dec
sti
and
outsb
dec
sarl
aaa
pop
dec
cmc
cmp
fsub
in
insb
xor
sub
scas
mov
test
outsl
xchg
roll
imul
dec
fwait
inc
mov
add
bound
cmp
insl
ja
push
push
test
mov
jecxz
incb
cmpsb
mov
loope
in
int3
xor
push
xor
aaa
pop
shl
mov
push
mov
inc
or
je
cmpb
mov
xor
mov
leave
xchg
pop
xor
pop
lods
stc
or
int
mov
jg
mov
xchg
xchg
dec
imul
cmpsl
rcrb
xchg
cmp
js
rol
push
push
xor
mov
xchg
push
ficompl
push
fs
or
dec
inc
mov
push
out
jb
data16
js
mov
dec
adcb
mov
insb
and
xor
xchg
sbb
push
pop
leave
imul
loop
xchg
in
push
xorl
or
stos
push
leave
ret
dec
rdmsr
xchg
adcb
adc
xor
addb
hlt
cs
int
mov
cmp
addr16
mov
neg
push
stc
leave
or
cmpsb
enter
cmp
sub
das
shlb
sub
jmp
cmp
iret
push
mov
cmp
mov
adc
imul
gs
dec
sub
int3
lahf
dec
cmp
xor
aad
sub
xchg
jns
cmpsl
cmp
jne
stos
and
ss
adc
or
or
sahf
xchg
int
fistl
mov
mov
pop
cld
ds
mov
add
cld
mov
push
rorb
xchg
das
hlt
jl
add
or
or
jle
or
in
rolb
sahf
pop
test
cmp
mov
lods
jecxz
js
pop
rcrb
aad
int
or
or
icebp
inc
cmp
or
int3
stos
test
addr16
inc
xor
sub
stos
mov
adc
mov
clc
adc
push
mov
and
inc
je
dec
push
aad
sub
push
ljmp
aas
cltd
stc
mov
pop
pop
xor
push
popa
loopne
adc
aad
aam
fwait
js
push
sub
clc
dec
jbe
mov
jle
mov
jecxz
test
ljmp
rcrl
sbb
jbe
out
push
pushf
setp
or
pop
dec
dec
jmp
fcomi
and
fists
test
sub
ljmp
adc
nop
sub
jmp
push
inc
add
and
dec
mov
aaa
cltd
out
cmpsl
out
mov
cli
cmpsb
enter
jo
sub
sbb
in
xor
mov
mov
sar
add
jae
imul
mov
inc
imul
lods
and
lods
insb
cmpsl
jmp
mov
enter
push
orb
sub
loop
ret
push
repnz
popa
and
push
xlat
sbb
add
cmp
adc
js
mov
adc
jne
mov
or
movb
or
push
movsl
mov
cli
lahf
push
test
mov
enter
xor
fidivrl
xor
mov
leave
add
not
cmc
adc
addl
sbb
aam
jecxz
jecxz
inc
mov
repnz
adcb
mov
js
imul
xchg
cltd
mov
test
into
cmpsl
icebp
and
adc
sub
pop
in
sub
push
ss
call
or
ror
pop
or
outsl
sahf
adc
mov
xor
scas
cmp
arpl
lock
push
cmp
sbb
ja
clc
adc
outsl
dec
xchg
shr
pop
aad
mov
pop
fldenv
mov
gs
dec
mov
movsl
out
movsb
into
or
das
outsb
dec
mov
jae
xchg
sbb
mov
test
or
testl
xchg
pop
xchg
outsl
ret
jle
into
cltd
into
jne
lret
jmp
cmp
mov
sbb
cmp
clc
or
scas
aam
popf
scas
aas
sbb
or
lock
mov
jmp
mov
fisubrl
testb
cli
test
push
xchg
pushf
push
xchg
js
jecxz
jo
jmp
sub
and
push
test
cmp
mov
inc
jmp
push
xlat
in
inc
or
daa
cli
lock
mov
dec
lods
inc
mov
adc
dec
lahf
les
inc
pop
cli
mov
adc
lds
aas
mov
add
lods
cmp
and
stos
xchg
in
in
sub
fsts
aad
mul
jb
push
mov
add
push
shrl
xor
jge
mov
push
mov
cmp
mov
pop
test
add
lock
in
loop
xchg
test
xchg
das
stc
sub
cmpsl
push
sub
mov
inc
popf
adc
ret
jg
mov
add
xchg
mov
add
popa
dec
inc
lahf
loopne
insl
test
and
lock
add
adc
ret
xchg
or
rolb
in
out
fildll
loop
fstps
cmpb
mull
ficoms
lfs
jb
loope
lea
aad
rcr
mov
cmp
lcall
xchg
mov
jne
adc
mov
sbb
jmp
xchg
insb
in
push
push
dec
jg
and
nop
not
clc
push
jle
pop
pop
pusha
mov
mov
das
scas
push
int3
insl
adc
mov
sti
pop
cli
xor
mov
scas
push
repz
nop
mov
aam
and
fwait
xor
fsubrs
inc
clc
cmp
pop
scas
iret
faddp
cmp
insb
rcr
stos
movsb
inc
adc
jle
jge
sub
out
sub
outsl
imul
es
sbb
or
jmp
out
aam
hlt
push
out
shl
mov
mov
into
and
cmp
stos
jb
loope
pushf
and
dec
rcrl
leave
enter
mov
insb
cmp
scas
dec
popa
jno
loop
into
push
xchg
sub
fldl2t
xchg
jge
push
pusha
sub
add
inc
cmp
push
out
inc
les
mov
scas
out
pop
outsb
arpl
aam
jb
out
xchg
nop
add
add
bnd
xor
jb
mov
xor
adc
mov
or
mov
sarl
pop
dec
mov
test
xchg
push
push
dec
adc
cli
scas
pop
mov
dec
xor
dec
lea
pusha
pop
cmp
dec
xchg
rol
sbb
loopne
xchg
sub
loop
popa
repz
and
mov
leave
arpl
add
in
push
pushf
cld
sub
inc
cmc
out
out
dec
clc
int3
xchg
out
cltd
inc
mov
es
xor
mov
lock
cwtl
and
jmp
outsl
xchg
cld
shll
test
sub
inc
call
rcrb
push
daa
sub
shrl
lods
lcall
pusha
das
add
pop
int
mov
jbe
loop
popl
mov
mul
xchg
aas
mov
test
jmp
mov
test
xchg
jmp
insb
push
push
mov
movsb
int3
mov
xlat
sub
adc
sbb
dec
dec
in
pop
call
sahf
loopne
push
push
xchg
or
xchg
aaa
imul
add
sbb
in
cmc
aad
push
cmp
jp
icebp
pop
stos
ret
sbb
les
and
loop
cmp
in
notl
es
pushf
sbb
cmp
int
dec
jp
sub
inc
js
insb
and
repz
cmp
add
ret
jo
test
stos
push
xor
movsl
ret
mov
inc
outsb
lock
cmp
cmpsb
sub
jle
mov
push
dec
addr16
cmpsb
or
lds
dec
imul
mov
insl
cmpsl
xchg
xor
cmp
cwtl
jl
mov
inc
addr16
mov
jnp
in
inc
cmc
push
sbb
inc
sub
sub
mov
mov
jl
imul
cmp
pop
rol
adc
jb
mov
pop
outsl
inc
into
ds
iret
ret
inc
ja
out
call
sbb
push
outsb
push
inc
xor
test
mov
mov
or
insl
pop
es
lret
aaa
out
add
lods
xor
or
xor
scas
fcomp
jb
xchg
into
cmp
jecxz
mov
orb
out
or
jnp
inc
outsb
pop
in
shll
pop
mov
clc
sbb
pop
js
adc
rcrl
das
and
push
scas
xchg
sbb
xor
lcall
sub
call
push
cmpl
mov
gs
add
insl
popf
or
je
dec
xor
cwtl
or
stos
mov
test
dec
bound
fmull
dec
fdivs
mov
mov
xchg
or
jecxz
mov
pushf
mov
xchg
inc
or
lock
dec
popf
call
gs
jl
insl
fnstenv
imull
fmull
std
aam
sbb
movsb
outsl
daa
dec
aad
mov
into
out
icebp
inc
cmp
sbb
outsl
dec
or
lret
push
push
mov
or
and
loopne
xor
rcrb
adc
lret
je
or
imul
sub
ss
push
pop
or
filds
pop
mov
out
ja
lahf
insb
pop
fdivl
xchg
enter
test
and
sahf
daa
pushl
pop
stos
xchg
sbb
popf
pop
mov
aam
sub
test
pop
dec
lods
movsl
test
das
cld
testb
test
jmp
pop
jb
mov
shlb
or
aaa
adcb
jg
roll
shl
faddl
mov
push
fnstenv
cmp
stos
dec
into
lret
popl
fisubrs
sub
jns
dec
jmp
mov
pop
push
push
jl
sub
mov
sahf
adc
mov
lods
sahf
leave
clc
imul
xchg
sbb
shl
jg
insb
dec
stos
xor
addl
or
mov
fisttps
push
jg
mov
gs
push
scas
fcomps
mov
xchg
push
out
adc
adc
sahf
mov
lahf
push
rcl
iret
xor
ds
test
lret
dec
mov
xchg
fcmovnu
in
push
adcb
outsb
sahf
jbe
outsb
js
int3
out
dec
sub
imul
xchg
mov
pop
mov
enter
mov
inc
or
add
clc
or
negl
out
js
rcll
adc
cmp
lock
leave
les
ret
xchg
sub
in
adc
aaa
mov
rcrl
and
xchg
data16
mov
stc
xlat
inc
inc
cmpsl
mov
adc
fisubrl
fs
mov
push
in
sub
adc
and
mov
lods
sub
js
in
or
rcll
ret
jg
sub
sbb
mov
cs
andl
push
jl
jb
inc
cld
pop
jb
mov
xor
mov
inc
jns
add
cmp
jns
dec
inc
ds
mov
jmp
pop
fs
fcoml
xchg
out
ljmp
xor
add
loop
jnp
or
test
adc
lcall
lea
push
leave
pop
dec
jbe
or
ja
push
lret
xchg
xor
mov
subl
loopne
insb
push
int
and
popf
lahf
xchg
sbb
scas
mov
jbe
xor
int3
outsl
mov
and
bound
les
or
jae
sub
sbb
xlat
jne
notb
movsl
out
aam
xchg
sarb
inc
lret
orb
jl
mov
fldenv
loop
push
xchg
sti
int
mov
lcall
and
test
jae
pop
data16
cmpsl
cmp
mulb
xor
test
pop
in
dec
mov
jns
ret
stos
lods
imul
adc
fistpll
jecxz
test
jge
pop
or
push
movsl
aam
sbb
mov
or
addr16
notb
fsts
jne
mov
pop
fimuls
cmpsb
jge
push
push
jl
mov
sbb
adc
or
dec
xor
mov
sub
je
push
lods
mov
lods
sub
in
dec
adc
push
jnp
std
mov
int3
push
fmul
xchg
mov
ret
inc
add
loopne
aas
or
xchg
jl
test
add
cmpsl
sub
push
mov
cmpsl
out
loopne
sub
mov
test
sub
mov
jmp
lcall
out
aam
xchg
and
xor
dec
inc
sbb
shr
es
orb
cmpsb
outsb
jle
or
push
repnz
jge
sbb
xor
ficomps
jecxz
xchg
jmp
ljmp
outsl
adc
pop
xchg
icebp
mov
or
mov
pop
lret
inc
push
sbbb
pop
xlat
sbb
aas
pop
push
mov
movsb
mov
imul
aad
sar
sahf
rcrb
jnp
ret
pop
sbb
into
cmp
cmp
hlt
testb
push
xchg
push
push
or
and
in
inc
call
cmpl
mov
jecxz
sahf
dec
fidivrs
or
test
and
je
lods
pop
add
mov
sbb
clc
mov
xchg
popf
in
pop
iretw
sahf
lahf
in
xor
out
jecxz
std
xchg
adc
lds
test
push
push
enter
push
add
test
xchg
mov
arpl
adc
gs
movsb
or
xorl
jp
icebp
jle
mov
sti
dec
pop
shl
mov
leave
and
and
int
mov
imul
xor
or
test
outsb
gs
movsb
sbb
addr16
push
les
repz
mov
mov
leave
push
loop
mov
push
test
inc
leave
ds
mov
jecxz
xchg
imul
adc
mov
stos
pushl
add
pop
cmpsb
mov
add
sahf
adc
jo
test
loopne
test
xchg
mov
lret
adc
lock
scas
mov
lods
mov
negb
es
mov
popa
mov
std
idivl
stos
int
push
je
cltd
cwtl
notl
jle
mov
jnp
xor
mov
sub
sahf
icebp
push
lret
lea
in
and
pop
dec
add
lcall
mov
inc
shlb
sti
xchg
mov
rcrb
pop
ds
shll
adc
jno
cmp
out
fwait
scas
jne
jp
jb
inc
fs
sbb
jle
mov
mov
add
bound
test
call
jbe
pop
pop
add
mov
adc
repz
push
mov
xor
test
clc
mov
in
jns
arpl
push
int
and
mov
adc
aad
push
xor
mov
mov
push
adc
neg
test
push
mov
cli
mov
cmpb
mov
mov
cltd
loope
xor
stos
pop
sub
enter
scas
or
sub
cmpsb
jno
xchg
jne
movsb
iret
aas
jg
pop
outsl
fisubrl
cmp
xchg
push
mov
orb
add
push
fildl
aas
cmp
pusha
test
and
lret
add
ljmp
sub
or
insl
xor
out
int3
dec
jmp
in
ret
lock
push
and
xchg
into
pop
dec
lods
ja
out
in
mov
jecxz
imul
mov
lret
sub
cmp
sbb
scas
ret
mov
leave
xor
fwait
arpl
xor
jne
mov
and
push
xor
rolb
mov
inc
shlb
add
jge
popa
test
outsb
ficompl
jno
or
roll
daa
jne
adc
outsl
jg
ret
or
movsb
cmp
sub
push
lret
daa
jb
pop
lret
xor
pop
mov
dec
xor
cmp
leave
xchg
cltd
test
sbb
xor
jmp
xor
xor
pop
sub
jp
rcrb
scas
pop
mov
or
xchg
iret
std
mov
cltd
shll
cmc
cli
adc
adc
rorl
mov
push
mov
xor
into
dec
lea
or
pop
in
dec
stos
or
pop
or
xor
push
xchg
mov
inc
dec
and
or
stos
dec
add
cmc
test
and
cli
jbe
sub
push
or
mov
lods
or
mov
ret
lds
jno
push
push
mov
call
loopne
into
cmp
sub
dec
andb
into
scas
xor
and
cwtl
mov
call
iret
pop
mov
daa
imul
es
int3
sub
in
ljmp
lahf
jecxz
ljmp
xor
xor
fsubrs
aas
mov
scas
mov
fsubrs
xchg
mov
insl
inc
push
subb
fsubrp
cmp
jmp
outsl
xor
push
icebp
lret
pop
cli
arpl
arpl
xchg
cmp
dec
mov
dec
icebp
inc
out
push
sahf
stos
sub
scas
mov
mov
dec
pop
mov
mov
mov
and
movsb
lods
shrb
dec
pop
cmp
mov
cltd
pop
not
or
psubq
cmpb
sahf
pop
jmp
pusha
and
cld
insl
cmpsb
mov
stc
scas
insb
movsl
out
ret
pop
loope
cltd
aam
je
sbb
mov
hlt
xor
cmpb
xchg
jecxz
cmc
loop
jmp
pop
inc
jecxz
test
addr16
in
xchg
pop
pop
mov
xchg
mov
add
btc
push
shl
mov
push
xchg
adc
scas
mov
xchg
push
aam
pop
ljmp
dec
jecxz
fstpt
arpl
xor
subl
aad
nop
dec
sub
sti
inc
mov
daa
fwait
cmp
pushf
sub
xchg
dec
cmp
inc
lahf
loope
das
jg
jae
js
pop
decb
jmp
fstpl
stos
dec
pop
and
mov
xlat
or
loopne
repz
stc
cmpsl
out
xchg
loop
test
imul
sbb
mov
jo
fmuls
gs
dec
and
inc
in
imul
in
std
lods
xchg
jmp
lahf
nop
repz
gs
sti
ret
incl
pop
les
pop
in
insb
clc
add
in
add
jb
insl
push
mov
int
xchg
jl
inc
mov
cmc
add
and
xchg
lcall
jnp
mov
sub
jns
mov
mov
or
push
mov
dec
cs
push
mov
aaa
scas
bound
xor
mov
cmc
pop
push
xchg
xchg
imul
sbb
ljmp
fsubs
lahf
daa
fisubs
repnz
sub
insl
repz
pop
aam
xor
repz
arpl
cmc
in
cmp
cmc
sub
leave
bound
mov
pop
out
mov
aad
cs
lods
rcrl
mov
mov
inc
mov
leave
aas
xor
outsl
inc
clc
js
cmpsl
repz
out
bsr
add
dec
cmpl
idivb
sub
jno
jb
push
push
xchg
push
mov
xchg
mov
dec
or
xor
xchg
out
out
sbb
adc
sub
mov
lcall
cltd
dec
scas
lret
jbe
lea
mov
mov
jmp
into
lock
into
adc
or
pop
cmp
ret
and
sbb
inc
xchg
loopne
cwtl
mov
lods
movsb
dec
add
aaa
inc
mov
add
icebp
jl
sti
pop
movsl
push
cmp
or
mov
enter
adc
aas
das
sbb
ret
sbb
or
das
loopne
jns
mov
xchg
jp
sub
test
pop
and
scas
sbb
xchg
push
push
lret
mov
imul
jne
push
dec
mov
pop
andb
sub
insb
gs
es
test
jg
jo
add
add
ljmp
or
fisubl
push
inc
mov
fadd
push
dec
aas
pop
lods
test
ret
sbb
mov
mov
mov
bound
adc
jae
or
jmp
dec
outsb
in
push
pop
gs
sahf
in
repz
out
inc
outsl
out
lret
lret
out
out
push
ljmp
push
jp
inc
push
out
inc
dec
dec
sbb
dec
imul
scas
jmp
pop
push
inc
flds
test
mov
dec
das
cltd
and
xchg
out
scas
test
repnz
mov
xor
popa
cmp
adc
mov
adc
mov
jne
jno
jbe
jns
negl
ret
pop
out
stos
stos
lods
ljmp
sub
in
adc
inc
cmp
inc
add
repz
add
push
es
call
cmp
sbb
xor
scas
cmc
test
mov
rorl
push
push
mov
xchg
pop
xor
push
sbb
fidivrs
push
cld
hlt
lods
iret
mov
and
sti
xchg
pop
rcrb
js
mov
adc
test
test
int
loope
cmp
iret
mov
pop
insb
jo
loop
addr16
iret
push
out
mov
sbb
or
aad
out
push
and
ret
jmp
sahf
mov
lret
in
lds
scas
mov
or
xchg
stos
lods
jmp
sub
adc
inc
cmp
scas
or
scas
or
inc
push
je
mov
xchg
pop
fstl
inc
sub
cltd
xorb
mov
or
pushf
fimuls
jle
add
jge
vmovhpd
aam
jmp
xchg
jb
pop
xchg
xchg
insb
mov
and
stc
clc
cwtl
mov
add
rorb
dec
int3
push
xchg
shll
cmpsb
jns
or
fdiv
shlb
sbb
mov
pop
sbb
mov
test
lret
pop
outsl
pcmpeqw
std
adc
jo
push
jb
aam
cmp
xchg
add
pop
pop
fisubl
fchs
mov
mov
stos
subb
jp
cmp
jns
orb
sbb
shl
lea
test
aad
mov
in
in
push
and
push
insl
mov
fidivrl
test
inc
iret
cld
pusha
imul
das
push
and
lcall
inc
lds
out
icebp
mov
ljmp
dec
push
jecxz
push
in
adc
roll
dec
inc
inc
outsl
iret
outsl
and
leave
in
jae
cltd
mov
fbld
adc
mov
jns
mov
jge
pop
xor
int
cmc
jg
rcrb
faddl
jl
inc
adc
add
inc
sbb
aaa
pushf
iret
add
mov
stos
aaa
sub
mov
setle
add
dec
add
test
jb
xlat
fnstsw
fistpll
pop
mov
fwait
push
fstp
out
mov
sbb
inc
add
push
test
or
mov
shl
mov
lea
dec
sbb
dec
subb
gs
pop
jl
sub
mov
pop
lods
mov
push
ljmp
xchg
pop
sbb
mov
fistps
jmp
pop
cld
dec
jl
test
sbb
cmp
jbe
jmp
mov
lds
sub
xor
in
adc
outsb
mov
xlat
movl
outsb
mov
sarl
enter
jmp
scas
adc
insl
out
int3
mov
or
mov
or
ljmp
daa
aaa
popa
push
cltd
mov
mov
sub
decl
test
jns
mov
fisttps
mov
mov
iret
and
and
testb
dec
mov
add
enter
inc
aam
stos
lods
in
inc
adc
scas
adc
int
das
cltd
mov
push
subb
aaa
adc
jno
xor
ja
xchg
movsl
test
xor
jae
cmp
mov
or
in
pop
setnp
xchg
xor
sub
mov
scas
mov
jmp
mul
pushf
insl
in
push
les
nop
jge
push
into
bound
cltd
pop
jecxz
stos
lods
and
lcall
push
fwait
inc
inc
push
mov
pop
movsl
mov
lcall
push
mov
jnp
add
in
and
fsubr
pop
jns
and
jb
inc
shrb
jnp
das
inc
mov
dec
in
mov
push
sti
xor
popf
das
or
outsl
add
or
jmp
xor
ret
test
addr16
inc
outsl
test
ss
xor
stos
ret
test
lods
sub
xchg
dec
mov
jae
jnp
test
inc
fldlg2
cmpsb
sub
lret
dec
sbb
sub
mov
pusha
loopne
sub
or
enter
fistl
and
popf
arpl
scas
in
sub
movsl
inc
pop
xchg
aam
in
out
test
in
mov
push
push
repnz
jbe
lret
sbb
and
fdivrp
fcomp
xor
int
mov
mov
sub
pop
shll
pop
jmp
mov
add
jae
inc
inc
or
lods
out
cmp
jl
sub
out
movhps
faddl
lock
xchg
sub
out
xor
jno
adc
cmp
mov
jg
mov
fwait
dec
xchg
jbe
outsl
add
mov
or
addr16
xor
scas
fsubp
dec
sbb
dec
into
adc
mov
test
stos
lret
add
out
cwtl
mov
sbb
push
push
test
inc
cmp
sahf
movsl
mov
pop
fprem1
jne
std
ret
insb
lods
sbb
and
inc
jge
push
fiaddl
fwait
es
repz
cmpsb
enter
push
sbb
adc
loopne
jae
aad
push
push
fsubl
fdiv
sbb
mov
fwait
loope
pop
daa
pusha
subb
bound
dec
add
mov
mov
mov
add
pop
icebp
lahf
arpl
xor
jne
aad
sub
push
xor
add
jo
fdivrs
loop
aas
jle
sti
jge
sbb
cmpb
jnp
push
sub
mov
mov
push
ljmp
cmc
mov
mov
int
in
cmp
iret
push
sbb
repnz
cltd
pop
cmpsl
sbb
ret
rolb
pop
and
sbb
daa
shll
imul
or
addr16
data16
loop
lock
shll
sub
cmp
scas
lods
mov
pop
loopne
xchg
fsub
push
cmpsb
adc
mov
cmpsb
add
repz
inc
in
pushf
jo
cmc
cwtl
in
and
pop
xlat
addb
leave
mov
dec
mov
pusha
add
aaa
mov
fdiv
sbb
cld
aas
fsubrs
jecxz
or
dec
inc
lods
mov
mov
sbb
popa
ret
jno
movsb
jle
aaa
push
jae
push
mov
xchg
test
cmp
mov
test
jae
andb
les
jne
lods
jo
ja
bound
mov
push
loop
imul
jnp
dec
jmp
rcll
dec
sub
cmc
test
cmp
ret
xchg
dec
xchg
out
pop
or
rorl
aaa
pusha
outsl
pop
jmp
ss
adc
add
enter
jns
or
mov
xchg
inc
push
jb
clc
mov
pop
rsqrtps
jl
ss
lods
inc
mull
push
mov
cmp
push
dec
push
mov
mov
or
bnd
inc
loopne
add
push
mov
lcall
subl
and
nop
mov
lret
dec
push
sbb
push
add
push
add
jno
pop
xor
andb
and
xchg
hlt
sbb
xor
sbb
mov
jno
lods
lret
mov
ss
rcll
push
imul
cmpsl
rcrb
outsb
push
jmp
inc
jno
cltd
jl
cmp
mov
mov
dec
les
das
leave
cmp
popa
pop
cmp
fs
js
gs
int3
aad
aas
inc
stos
ret
ja
insb
cmp
jnp
fisubs
cwtl
pop
sub
or
add
into
dec
test
jmp
scas
cmp
pop
in
jbe
mov
out
clc
imul
sub
push
xchg
movl
add
sbbl
cmp
jecxz
pushf
xor
mov
movd
nop
xchg
mov
insb
outsb
mov
popa
decb
xchg
fstpl
sahf
mov
cs
stc
imul
jmp
adc
movsl
popa
mov
ds
repz
repnz
orl
int3
jnp
popf
jo
ret
mov
mov
push
jmp
cmpsl
mov
xor
xor
cmp
add
jge
xchg
idivb
insb
in
data16
push
incl
ja
mov
stos
mov
jne
xor
adc
pop
mov
xor
add
cmpsb
mov
rol
and
mov
fstl
sbb
and
in
cwtl
sbbl
or
inc
les
pop
push
mov
mov
andl
rcrl
add
xorb
mov
mov
mov
and
fld
stc
sbb
mov
testb
test
out
popa
lock
lock
rclb
loope
sub
shrl
shrl
sub
les
push
dec
iret
push
dec
and
clc
pop
jp
rclb
imul
ja
add
add
movsb
or
lahf
dec
outsb
data16
sub
icebp
test
xor
sbb
in
xchg
leave
adc
iret
xchg
xor
repnz
and
cmp
adc
rolw
xor
or
repz
and
mov
xor
cmp
shr
adc
sbb
clc
and
mov
sub
das
outsl
push
in
mov
or
push
pop
sar
out
xchg
in
stos
mov
in
cmp
lea
daa
sub
sbb
dec
cmc
xor
push
in
sbb
pop
sbb
dec
in
push
shll
leave
xor
rorb
mov
lea
stos
mov
adc
sub
xchg
mov
mov
mov
insb
pop
pop
dec
mov
pop
dec
mov
jne
jb
imul
xlat
xchg
xchg
lret
mov
and
xor
test
fbld
test
xor
xor
stc
jmp
stos
mov
mov
cmpb
int
push
mov
and
pop
loope
sbb
add
or
add
pop
std
and
cmp
xchg
pushl
and
and
cmpsl
xor
pop
fsubrl
adc
fsubrp
xor
sbb
xlat
adc
mov
cmp
int3
inc
push
dec
icebp
imul
inc
jecxz
iret
mov
stc
xlat
sbb
cld
sarw
mov
push
pop
sahf
pop
jle
or
pop
sahf
and
ss
mov
out
out
or
mov
iret
int3
pop
inc
xchg
cmp
test
jmp
xchg
loopne
inc
into
je
pop
cmp
cmp
insb
je
xchg
xor
dec
and
push
sti
int3
pop
shlb
std
pop
leave
data16
clc
pop
inc
sahf
xor
xor
mov
jg
iret
sbb
xchg
inc
jns
lahf
repnz
dec
and
jl
inc
mov
std
push
lods
mov
lea
or
lods
or
cmp
or
sbb
adcb
xchg
jo
stc
push
xlat
in
adc
mov
sbb
repnz
mov
add
pop
insb
pop
cmp
imul
mov
adc
ret
xor
mov
jae
inc
inc
dec
mov
jle
stos
push
inc
add
addl
out
or
mov
pop
dec
ss
mov
fs
in
jns
ffreep
cmp
inc
aam
es
test
addr16
aad
aad
in
int
lret
in
ds
js
xchg
out
bound
xor
hlt
in
pop
dec
jbe
or
repz
cmpb
je
cmpsl
xor
jne
add
cmpsb
divb
or
mov
cmp
test
mov
enter
xchg
mov
movsl
les
xlat
rcll
xchg
dec
sub
xor
push
repz
push
jg
jno
and
xchg
in
imul
or
cwtl
sub
pusha
lds
lret
aad
xchg
lcall
mov
push
insl
xchg
xor
add
inc
xchg
sub
repz
pop
int3
rolb
xor
stos
adc
inc
xchg
cli
test
add
std
fcmovb
xchg
jle
in
or
filds
fdivrs
lea
adc
pop
jmp
ljmp
leave
cmp
pop
and
mov
adc
xchg
inc
add
ljmp
scas
js
sahf
dec
sbb
sbb
bound
shlb
addr16
pop
jge
test
sub
cltd
jb
pushf
mov
lret
and
movsb
rcrl
shl
aad
xchg
stc
es
in
cmpsb
mov
sub
inc
jbe
jecxz
iret
cmc
bound
orl
and
xor
mov
cmp
and
xorb
int3
xchg
adc
pop
mov
repnz
std
test
add
jl
std
int3
stos
jb
add
and
movsb
pop
test
out
jne
jp
popa
sub
cmp
push
jmp
jle
lods
xor
push
nop
jae
gs
rcl
enter
das
stos
or
inc
mov
sbb
dec
dec
lcall
push
cmc
cmp
xor
cmpsb
dec
outsl
push
in
out
enter
push
adc
sbb
divb
dec
int3
jp
cmp
fwait
jge
mov
adc
and
aaa
fs
xor
adc
xor
add
stos
sbb
jp
add
sbb
jo
in
rorb
adc
pushf
mov
cmpb
pop
popa
arpl
dec
das
jae
dec
pop
cmc
push
mov
xchg
push
data16
enter
enter
mov
cmp
dec
mov
pop
fldl
lds
in
ss
adc
lods
xor
adc
jecxz
pusha
xchg
rorb
add
adc
or
popl
mov
jo
mov
mov
enter
sbb
and
or
jne
push
mov
xor
mov
imul
scas
add
push
pop
push
iret
cld
dec
push
fsub
lods
js
mov
sarb
or
adc
sahf
sub
adc
movsl
out
hlt
mov
inc
inc
inc
mov
sub
shll
addr16
fmull
inc
cmc
xchg
sti
cld
mov
push
shrb
in
aas
add
nop
add
push
jecxz
cld
fcoms
or
or
call
push
and
and
mov
fwait
sub
xchg
pop
dec
cmpsl
in
xchg
dec
ja
mov
ret
sti
xchg
jecxz
mov
mov
and
outsb
cmp
pop
sti
mov
scas
mov
out
mov
jb
mov
addr16
mov
cli
not
jns
mov
add
push
mov
mov
push
loop
cwtl
int3
cmp
mov
es
cli
push
sbb
xlat
push
mov
xchg
test
mov
fs
push
cmp
mov
int
pushf
adc
mov
inc
cmp
stc
insl
jle
int3
out
sub
xor
cmp
sbb
sub
je
cmc
ret
add
fwait
pcmpgtb
enter
adc
scas
sbb
pop
clc
cmp
cmp
cmp
cmp
jns
mov
movsb
insl
inc
cmp
out
nop
call
mov
sbb
pop
jp
mov
aas
pop
sub
popa
daa
mov
add
lret
push
sbb
sub
jge
mov
je
push
mov
sbb
xchg
sbb
adc
fs
leave
adc
dec
rdmsr
jno
test
inc
scas
aam
ret
repz
mov
push
icebp
cmp
push
xchg
dec
testl
scas
daa
pop
loop
mov
in
sarb
addr16
jg
cld
jg
fldt
or
mov
jnp
repz
insb
jno
xor
lds
lahf
fmul
lcall
sarb
xor
in
or
jns
cltd
lret
jmp
mov
movsl
xor
pop
xchg
or
lds
mov
jb
jo
xchg
sbb
push
das
sub
xchg
adc
loopne
std
inc
and
roll
push
jne
push
or
mov
adc
out
jae
and
fadds
pop
sbb
rcl
fwait
pop
bound
loope
cmpsl
jno
dec
xlat
in
popf
jg
into
and
jp
jb
mov
jecxz
push
data16
inc
pop
push
push
mov
repnz
xor
inc
lods
imul
pop
sar
dec
fwait
add
insb
adc
ss
sbbb
and
test
mov
decl
lds
pop
lahf
mov
add
push
mov
out
hlt
shlb
dec
int3
cmp
fidivrs
pop
aad
ljmp
popf
in
mov
fldcw
add
je
sub
add
ss
inc
jae
cld
stos
aas
xor
sbb
mov
xor
fcoms
dec
xor
ljmp
xor
dec
mov
mov
mov
cs
dec
data16
inc
jmp
sbb
loope
or
loop
dec
or
sub
fwait
repnz
adcb
dec
sbb
andb
or
clc
xchg
test
cmc
js
bts
mov
int3
cmp
lods
inc
mov
test
push
sbb
adc
fnstcw
cwtl
das
mov
outsl
popf
xchg
mov
pop
lock
push
cmc
lea
jnp
out
ds
cs
stc
fists
xchg
inc
je
jne
sbb
in
les
jl
pop
mov
and
mov
outsb
jno
lods
cmp
sbb
outsl
lods
aas
adc
std
xchg
dec
fiaddl
mov
imulb
ret
push
loope
divps
sti
cmp
pop
or
outsb
repnz
xor
lret
insb
lahf
sbb
sub
jnp
std
and
sbb
xor
xchg
shr
jns
jecxz
mov
push
gs
or
mov
sub
xchg
or
pop
cmc
sbb
or
mov
scas
mov
mull
pop
add
push
sbb
push
mov
lea
jne
movsb
movsl
mov
sti
sbb
push
sahf
xor
dec
and
xchg
imul
ja
jbe
mov
mov
adc
and
adc
inc
mulps
fsubl
in
mov
xchg
aam
pop
mov
pop
adc
sbbl
cmc
lock
lret
adc
ja
sbb
fbstp
pop
pop
jl
jnp
mov
stos
push
cmp
mov
mov
dec
jmp
add
cmpsb
lods
cmc
push
mov
sbb
outsl
add
jb
mov
add
push
mov
cmpl
jns
pushf
fxch
outsb
push
sbb
cmp
mov
xchg
pusha
scas
mov
xor
dec
sub
repnz
cltd
xchg
adc
or
jmp
mov
into
repnz
add
lock
pop
jne
xchg
cs
sub
repz
outsl
cli
push
clc
mov
pop
push
ljmp
fildl
and
pop
cmp
cmpsl
jb
out
fwait
xrelease
lods
jle
inc
aad
lret
mov
popa
clc
mov
das
enter
lea
sti
pop
cmp
lea
shrl
test
cmp
push
imul
js
pop
xchg
fs
dec
cmpsl
pop
cmp
dec
testl
sbb
mov
std
cmp
and
arpl
xchg
iret
mov
pop
xor
inc
fcmovnb
xor
dec
mov
inc
stos
pop
lret
test
or
repz
cmpsb
lods
jno
dec
dec
gs
rcll
out
imul
or
push
push
dec
pusha
cwtl
sbb
push
into
movb
bound
mov
fsubrl
mov
add
xchg
subb
loope
sti
int
out
jmp
mov
mov
xchg
add
test
xor
mov
and
fcoml
addr16
outsl
jp
decb
mov
mov
inc
jbe
mov
in
out
mov
pop
into
ljmp
inc
xchg
push
xchg
bound
movsb
mov
sbb
jle
add
cmp
daa
xchg
inc
pop
sub
xchg
andl
aas
test
push
jbe
rclb
pop
dec
jecxz
ljmp
cltd
mov
popf
in
lret
fcomp
out
aas
add
shll
xchg
push
lret
out
pop
leave
loopne
sbb
lahf
mov
dec
cwtl
hlt
scas
lahf
mov
dec
jo
pop
cwtl
cs
mov
inc
cmpl
push
sub
outsl
in
jmp
cmp
test
pushf
xor
push
popl
das
jecxz
lea
scas
xchg
sub
xchg
mov
mov
add
jle
sarl
fwait
les
stos
xlat
leave
jb
rcrb
pop
not
sbb
in
cmpb
jbe
xchg
push
pop
cmp
inc
ds
adc
sbb
scas
out
ja
popa
sub
inc
push
ret
inc
jbe
pop
cmp
cli
ss
out
lea
pop
fdivr
inc
outsl
dec
cltd
data16
clc
pop
rcrl
xor
dec
and
add
les
clc
push
adc
repz
shrl
cwtl
leave
scas
mov
loope
and
mov
cmp
push
cwtl
pop
push
das
sbb
mov
push
lret
or
xchg
sbb
add
imull
jae
sbb
xchg
jmp
leave
std
mov
lcall
dec
daa
sbb
decl
ficomps
nop
sahf
mov
ds
push
lock
mov
gs
mov
mov
sbb
inc
mov
fucom
jecxz
sbb
ss
lock
stc
sti
cmp
inc
jle
xlat
mov
dec
mull
mov
sbb
lretw
in
test
adc
mov
inc
dec
in
or
iret
push
outsb
add
push
in
scas
mov
in
test
icebp
pop
pop
rclb
sbb
jecxz
add
pop
cmp
addr16
imul
lret
int3
rorb
mov
cli
jle
nop
enter
inc
aam
jnp
adc
data16
mov
or
add
mov
sub
pusha
cwtl
jecxz
push
adc
push
sbb
inc
out
mov
fmul
inc
insl
add
inc
fldenv
out
mov
xchg
sub
lret
into
enter
mov
mov
bound
rclb
mov
inc
and
mov
lock
js
fwait
jns
cld
dec
pop
add
outsl
shlb
sarl
lods
sbb
inc
loopne
mov
mov
pop
aaa
lods
outsb
ficoml
xlat
dec
sbb
jmp
int3
je
stos
in
inc
push
fdivl
jae
imul
cmp
adc
xchg
incl
dec
xor
idivl
stos
mov
cmp
sbb
cmp
std
or
jmp
push
lcall
or
test
psrlq
addr16
push
inc
jb
push
mov
sub
cs
mov
adc
in
or
xor
dec
pop
aad
js
mov
cmp
cltd
sub
mov
mov
mov
jbe
and
xor
rcrb
sbb
jl
std
xor
mov
xlat
adc
movsb
xchg
shll
int
and
je
fsubr
cmpsb
rcrl
mov
dec
cwtl
stos
cmp
sub
jo
cld
das
sbb
jno
in
sbb
xlat
movsl
mov
repz
mov
cmp
test
ret
and
adc
or
fistps
or
adc
fiadds
rorl
call
repz
dec
ficoml
push
orl
push
aad
mov
fidivs
push
int
add
xorb
shrl
pop
fmuls
in
or
jne
subl
fsub
mov
fwait
lcall
mov
aas
push
enter
fsubrs
lea
push
mov
mov
enter
rol
pop
jp
fisubrs
out
push
xor
divb
jge
add
jo
shll
xlat
mov
xchg
or
mov
cwtl
fcoms
mov
xchg
hlt
loop,pt
leave
push
cmp
and
sar
pop
repnz
fbld
in
shlb
mov
andb
adc
es
in
push
and
dec
inc
andl
es
test
add
jns
pop
push
std
pop
xor
mov
ret
sbb
mov
xchg
mov
lods
repz
mov
xor
call
mov
pop
pop
xor
xchg
in
and
jno
lcall
push
aaa
shll
add
and
imul
adcl
orl
mov
or
daa
inc
dec
dec
xchg
popa
cmp
xor
fcoml
xor
in
jbe
stos
mov
xor
ljmp
dec
movl
test
jo
push
add
in
inc
mov
cmpsb
ljmp
mov
in
mov
lcall
xor
jb
pop
or
ret
ret
shrb
je
pop
nop
jmp
outsb
xchg
fldl
in
cmc
dec
outsl
sbb
sti
pop
mov
or
or
mov
enter
mov
add
sti
lahf
jecxz
lods
aad
pop
jle
push
stos
arpl
rcrb
ds
inc
pop
or
in
inc
xor
mov
push
inc
adc
pushf
or
xchg
cmp
jo
mov
sbb
lcall
pop
out
shrl
ljmp
cmp
test
jecxz
and
loopne
add
lds
jle
scas
stos
stos
or
dec
ss
push
pop
outsl
test
adc
clc
cmpsl
sahf
loopne
add
jne
adc
repz
xchg
mov
xchg
loope
addl
push
mov
add
adc
mov
push
enter
add
lret
mov
xchg
lods
mov
add
imul
hlt
xchg
mov
out
sbb
jp
into
xchg
icebp
push
addr16
call
dec
sub
lret
sub
arpl
jns
in
test
cwtl
xor
loope
or
iret
mov
xor
xchg
xor
fwait
out
jmp
cld
sbb
pop
and
ret
sbb
test
jp
add
aaa
adc
pop
mov
repnz
xchg
enter
jo
or
and
loop
out
adc
pop
mov
fs
scas
lock
push
movsl
pop
aas
out
out
out
sti
into
or
push
cmc
mov
cmp
repz
sahf
mov
mov
sub
roll
inc
fwait
ja
push
cs
push
mov
inc
and
aad
xor
ljmp
out
inc
add
in
aaa
pop
test
mov
cmpsb
sub
mov
bnd
and
fcmovu
out
sub
loope
mov
enter
push
xchg
mov
in
adc
or
orl
int
lcall
xor
aam
adc
xor
loop
call
scas
dec
popf
ret
cmp
ljmp
sub
inc
and
add
and
lea
fwait
adc
dec
xor
push
xor
shrl
int
dec
xchg
cs
aaa
jle
inc
cmpsb
mov
aad
pop
icebp
rclb
jne
lret
jae
sahf
xchg
into
adc
loop
sti
mov
xchg
andb
shll
fdivp
or
aad
xchg
push
orl
loopne
ret
dec
test
scas
jno
pushf
movsb
ja
inc
cmpl
add
adc
cs
jle
mov
loope
addr16
out
scas
clc
inc
xchg
xchg
sub
jno
jp
jo
cmpsb
jle
cmp
aas
xor
cmp
dec
mov
lods
cmp
jno
imul
leave
call
mov
aaa
movsb
shrb
sub
outsl
push
stc
arpl
add
pusha
push
cmpl
sbb
cmp
mov
inc
hlt
xor
mov
ret
es
add
cli
xchg
int
loop
mov
mov
or
mov
inc
pop
data16
ljmp
jecxz
add
cmp
stos
jp
into
cmp
xchg
aam
cmp
bound
pop
pop
jno
orl
push
notl
insl
mov
jbe
pop
add
std
xchg
push
jo
xchg
mov
aas
iret
xor
mov
or
lds
pop
or
jbe
dec
mov
fdivrs
xchg
sbb
insl
dec
xchg
sbb
cmpsb
sbb
outsb
call
jecxz
mov
pop
outsl
add
lods
jle
lret
cli
arpl
out
inc
lods
mov
imul
fistps
pop
mov
dec
rol
bnd
jns
enter
fisttpl
hlt
sbb
es
add
jmp
add
xchg
pop
mov
push
add
lods
movsb
fmull
pop
cltd
lock
test
lret
insb
inc
loop
dec
clc
mov
js
arpl
clc
mov
cmp
std
mov
scas
nop
and
add
nop
pop
mov
iret
push
cmc
sahf
adc
add
iret
data16
ficomps
mov
push
hlt
mov
xor
aam
outsl
and
or
js
mov
or
add
lret
sub
arpl
fwait
and
mov
and
mov
out
inc
push
sbb
push
mov
cltd
jmp
rcll
jmp
sahf
nop
or
mov
aaa
jg
ss
lods
cli
jg
push
enter
add
in
push
dec
lods
stos
rclb
ljmp
pop
mov
mov
lret
loope
icebp
adc
pop
xor
sbb
adc
add
mov
cmp
pop
fisttpll
test
pop
xchg
and
mov
xchg
test
inc
lret
icebp
cmpsl
or
add
add
fsts
dec
inc
mov
stos
mov
xchg
test
movsb
jp
out
pop
jae
dec
ret
cmp
js
icebp
mov
fldenv
pop
out
jge
push
rclb
call
inc
ds
mov
push
addr16
adc
in
jnp
dec
xor
fadd
inc
cld
push
mov
pop
inc
dec
scas
push
jg
imul
shrl
sub
in
pop
ljmp
mov
sti
fldl
jb
mov
repz
subb
movsb
push
mov
push
ret
mov
je
jl
mov
and
inc
mov
mov
mov
bound
dec
mov
test
scas
xor
loopne
xor
mov
mov
leave
xor
in
mov
mov
xchg
std
lret
bnd
and
aaa
outsb
xor
mov
divb
jae
xchg
xor
int
pop
lods
add
mov
rclb
fs
popf
idivb
dec
shrb
push
push
xchg
mov
and
pop
nop
mov
insl
shlb
jae
out
cmp
stc
jae
inc
loop
test
fwait
iret
add
inc
addr16
lcall
mov
or
adc
push
adc
sti
cmp
or
mov
rcll
pop
loopne
stc
popf
aas
and
pop
aas
cmp
add
test
mov
pop
inc
sub
stos
ja
cmp
add
filds
ss
push
push
push
mov
repnz
movsl
jns
fisubrl
out
push
mov
cmp
test
std
std
lds
movsl
sub
pop
lret
scas
flds
jb
outsb
adc
cs
outsl
pop
sub
adc
sbb
test
js
add
in
enter
adc
or
jp
fadd
lar
icebp
sbb
mov
lods
mov
jecxz
js
outsb
and
pop
cmp
sbb
into
insl
cmp
xor
lock
adc
pop
cmp
add
jp
dec
dec
cmp
inc
popw
sahf
mov
lds
cmpsb
mov
push
push
cmp
das
xor
xchg
and
stc
jnp
sbb
sub
jmp
popa
jne,pn
jbe
xor
stc
fisubrs
add
imul
es
in
outsl
and
cwtl
and
inc
adc
sbb
lret
out
inc
out
aaa
in
mov
mov
pop
stc
jle
xchg
stc
addb
stc
loope
jmp
inc
mov
loopne
xchg
ljmp
sbb
jecxz
and
jmp
inc
cmc
sub
pop
dec
mov
das
jmp
decb
xchg
mov
jns
out
dec
outsl
inc
jg
je
fistpl
mov
jp
imul
imul
xchg
mov
jns
xchg
pusha
inc
jge
inc
in
xorl
popa
jecxz
scas
inc
lods
fcomp
dec
adc
aaa
cmpsl
adc
inc
in
pop
je
outsl
addr16
sub
jmp
dec
add
dec
or
sarl
and
xchg
icebp
es
clc
dec
cmc
pop
adc
in
sbb
icebp
gs
ss
pop
out
jmp
in
hlt
push
mov
test
cmp
sub
iret
cwtl
jae
lods
mov
xchg
insl
nop
jg
lods
add
xchg
inc
xchg
sub
cmp
mov
aad
test
je
cltd
xor
icebp
mov
push
mov
sub
jl
mov
movsb
sbb
adc
data16
jns
jbe
mov
adc
jo
cmpsl
shr
ja
mov
pop
and
and
pop
xor
call
mov
jmp
push
push
repnz
mov
out
in
jo
mov
sahf
mov
mov
sarb
test
adc
jl
arpl
sbb
dec
xchg
sbb
outsb
mov
inc
nop
aam
hlt
out
xchg
mov
pop
sbb
leave
jmp
cmp
das
add
mov
roll
imul
stos
inc
repz
inc
out
cmp
inc
push
loop
xlat
xchg
repnz
mov
add
push
mov
icebp
int
pop
jns
movsl
clc
mov
mov
adc
pushf
inc
sub
push
jp
or
or
mov
mov
in
loopne
cs
inc
sbb
into
sub
push
ds
xor
mov
outsl
cmpsl
sbb
ja
xchg
pushf
jmp
dec
pop
sub
sub
addr16
test
cmpsb
jmp
sbbb
jo
sbb
stc
fdivl
sbb
pop
inc
mov
addl
fnsave
lret
scas
shrl
call
dec
rclb
inc
cmpsl
movsl
lods
loopne
mov
mov
orl
cmp
stos
push
xchg
outsb
neg
pop
xor
loopne
ja
mov
repnz
or
mov
inc
lea
clc
lcall
mov
and
call
jmp
inc
inc
lahf
notb
push
stos
mov
cwtl
mov
mov
fistps
cli
xor
mov
fldt
mov
push
ja
insb
les
xlat
les
xor
dec
sub
sub
aam
jo
into
rcll
dec
xrelease
fimuls
out
in
mov
add
and
and
mov
add
add
or
icebp
xchg
out
sub
je
addr16
jno
jp
xchg
js
pop
sahf
jo
call
and
pop
and
pop
mov
push
inc
orb
mov
flds
loope
sbb
int
adc
fsub
xchg
bound
stos
ficoml
out
lock
shlb
or
pop
bound
icebp
das
jp
repz
cmp
pop
call
add
or
xor
insl
pop
fs
jnp
sub
adc
pop
push
ja
fidivl
shrb
jns
sub
push
outsl
mov
std
push
jno
mov
mov
pop
mov
imul
sahf
ds
inc
sub
jge
iret
sub
adc
dec
add
mov
xchg
pop
jnp
movb
xchg
repnz
xchg
push
xor
mov
dec
loope
es
loop
hlt
pop
xchg
insl
add
test
cli
dec
rorb
mov
test
cld
pop
mov
add
das
test
out
pop
loope
mov
sbb
shll
pop
inc
das
jb,pn
lret
imul
mov
fwait
lea
jb
popf
in
aam
lock
mov
cltd
ja
cmp
and
or
daa
push
sub
insl
pop
sbb
mov
sbb
iret
add
decl
mov
repnz
push
add
dec
leave
stos
add
outsl
mov
pop
jle
adc
ffree
cs
xchg
lea
divb
leave
pop
arpl
insl
or
pop
or
or
loopne
add
sbb
int3
popa
xor
test
mov
out
push
push
imul
sub
and
gs
insb
inc
fwait
cmp
adc
call
jmp
int
shl
push
or
les
jo
fsubr
hlt
icebp
aam
inc
cmc
sub
test
pop
jnp
inc
iret
jne
pop
enter
sbb
pop
push
add
mul
stos
iret
mov
adc
clc
lods
push
pcmpeqd
aas
jnp
mov
mov
loope
sbb
fs
add
and
ret
leave
lds
dec
sub
ret
call
leave
inc
fwait
adc
or
xor
sub
fisubrl
mov
test
outsl
loopne
repnz
xorb
in
adc
mov
lcall
dec
mov
mov
push
sti
testb
mov
push
mov
pop
mov
hlt
push
lret
xchg
pusha
jns
imul
mov
test
imul
xchg
std
aaa
xchg
adc
ret
iret
pop
cld
cmp
ret
lods
test
fistl
mov
lock
leave
fwait
sahf
and
movsb
cli
in
sub
pop
les
cld
mov
jb
bound
jecxz
lea
cmp
xchg
pop
scas
je
int3
cmp
xor
cs
sbb
xor
jle
rcrl
inc
js
pop
ret
add
fildl
test
xor
sbb
cwtl
cmp
mov
add
scas
lods
addl
adc
push
lcall
outsl
js
jb
cpuid
pop
int3
fistps
push
sbb
lods
cld
jmp
lret
insb
fcompp
dec
or
aas
fists
mov
fs
test
out
inc
repnz
call
lods
add
test
jg
mov
adc
lcall
clc
xlat
add
outsb
cmp
ss
inc
adcl
pop
jge
pop
add
mov
jo
ds
leave
iret
loop
out
and
in
xor
insl
je
loope
adc
cmp
lcall
dec
rclb
xor
or
or
jge
rclb
icebp
int3
xchg
dec
pop
and
lret
add
sub
lea
sbb
sbb
dec
adc
sub
push
scas
adc
pop
push
push
filds
inc
sbb
subb
jge
mov
scas
addr16
xlat
jb
sub
fs
pusha
xor
ss
fcmovb
insl
inc
sbb
cli
ja
dec
and
pusha
mov
sbb
xor
inc
andb
iret
push
add
lret
mov
jae
xchg
and
stos
xor
cltd
push
test
inc
jmp
dec
imul
clc
cmp
push
sahf
mov
or
out
mov
adc
adc
cmp
xchg
push
aam
data16
lods
cltd
or
sahf
sub
or
dec
sahf
jnp
hlt
fdivs
inc
adc
cmp
scas
out
or
fwait
out
movsb
xor
popa
mov
add
pop
rorb
jnp
inc
inc
repnz
xlat
mov
push
out
adc
shlb
mov
add
ja
fsub
dec
inc
xor
pop
mov
jge
xor
xor
push
cmp
cmpl
inc
pop
push
dec
xchg
push
mov
lret
popa
xor
int3
xor
push
add
lods
pop
pop
pop
scas
push
lods
push
jns
mov
cmp
call
outsb
jmp
fisubrs
out
dec
pop
inc
jge
fwait
xchg
ss
mov
mov
cmp
pop
dec
out
popf
inc
adc
jl
aad
movsl
and
mov
inc
mov
push
mov
xchg
mov
in
inc
xor
add
lahf
xchg
out
sub
push
arpl
call
in
cltd
aam
add
mov
pop
pop
cmpsl
dec
das
loop
jecxz
inc
into
aam
pop
dec
mov
mov
jl
cmpsl
mov
add
sbb
pop
push
push
mov
push
stc
bound
mov
popf
sub
lcall
cwtl
cltd
in
iret
fisttps
rol
inc
in
dec
popa
mov
jecxz
and
mov
dec
frstor
fistps
in
xorb
out
insl
mov
add
pop
aad
pop
sti
ds
lods
or
roll
jg
or
mov
jnp
jns
xchg
mov
inc
jl
sti
lahf
pushl
pop
popf
mov
data16
decb
imul
mov
push
sbb
push
mov
and
jg
mov
movsb
bnd
mov
sub
inc
in
fwait
lock
xchg
outsl
fs
addr16
lea
rep
repz
aam
mov
in
rclb
mov
adc
sbb
or
sbb
imul
outsb
lret
fcompl
xchg
mov
out
sbb
inc
sub
jnp
xchg
mov
in
jle
sbb
jb
mov
push
sbb
mov
frstor
pop
in
sub
dec
inc
inc
iret
aad
call
mov
xchg
leave
jbe
fneni(8087
stos
cmp
push
pop
addr16
call
filds
jae
popa
gs
test
cmpsb
pop
lret
or
xor
cs
dec
cmpsb
lock
cld
xchg
sbb
arpl
fiaddl
pushf
testl
adcl
icebp
aad
inc
add
fisttpll
inc
popf
xchg
push
fidivs
lret
lock
push
xor
sub
mov
loop
sub
cmc
je
dec
add
jne
mov
mov
pop
int3
je
mov
ljmp
jl
pop
outsb
mov
mov
mov
lods
mov
inc
xor
cmp
and
jno
inc
insb
mov
cld
aad
sbb
xchg
push
int
push
jo
cld
bound
xchg
ljmp
call
dec
xor
mov
add
pop
cmp
adc
sahf
dec
add
mov
fs
xor
es
sub
ret
iret
daa
icebp
dec
add
out
push
mov
inc
or
mov
jmp
fcomip
mov
xlat
adc
adcb
pop
pushf
fistl
cmp
leave
mov
sub
mov
mov
popf
inc
pusha
popa
add
sti
adc
push
cltd
adcb
pop
fsubs
ret
call
aam
ss
jno
push
inc
lods
and
lds
cmp
push
or
xor
xchg
gs
sbb
xlat
sub
add
lea
jno
rcll
mov
fwait
push
in
inc
jmp
add
cmp
cmp
mov
xchg
push
mov
jle
out
xchg
push
mov
cmpsb
mov
adc
mov
xor
nop
xor
mov
mov
or
mov
push
cld
andb
xchg
lea
push
or
data16
lods
pop
mov
adc
sub
jae
stc
jne
xor
test
mov
xlat
mov
xor
push
xor
sbb
leave
sbb
pop
iret
sbb
sub
jge
xchg
fs
fucomi
inc
add
inc
icebp
cmp
shlb
inc
out
mov
cmp
mov
out
decl
loope
out
push
fildl
add
fwait
adc
and
sbb
outsl
ret
imul
sub
sub
pminsw
push
jae
imul
nop
cmp
inc
and
mov
test
xor
mov
inc
int3
push
dec
cld
int3
push
sbb
hlt
movsb
and
mov
das
add
adc
shlb
out
xor
jp
icebp
sub
dec
adc
jp
jns
jns
jbe
cmpsl
push
in
push
jns
aam
cltd
out
pop
les
lea
xchg
into
enter
test
ss
jbe
cwtl
mov
dec
add
popf
setae
or
mov
xchg
vunpckhps
push
mov
shrb
sbb
out
fdivr
adc
jmp
fs
cltd
xor
insl
dec
adc
jecxz
or
sahf
sahf
push
rol
fs
cmp
xchg
adc
jecxz
or
mov
cwtl
jg
into
pop
and
adc
mov
lret
hlt
lret
fyl2xp1
cltd
ljmp
aaa
xor
or
and
or
or
icebp
enter
jae
xchg
bound
jo
cmp
iret
shrl
jmp
sub
sub
jo
mov
jge
in
fs
nop
inc
push
jecxz
stos
pop
scas
outsb
xor
jmp
jg
imul
fsubrl
aaa
and
out
pop
sub
out
jo
mov
mov
iret
mov
test
add
cld
repz
rorl
inc
or
mov
adc
test
cmpsb
dec
xchg
leave
loopne
add
sub
jb
repz
loop
xorb
jmp
les
ds
sub
lret
stos
neg
or
shrl
mov
outsb
mov
add
cwtl
dec
mov
adc
mov
pop
inc
add
xchg
mov
pop
push
fistpl
xchg
call
push
fdivs
xchg
or
xor
cmp
push
xchg
sbbb
jo
loopne
ret
and
ret
sbb
popa
adc
jmp
pop
cli
jp
cwtl
sbb
fmul
jo
je
out
std
loop
pop
jmp
lahf
popf
test
lods
mov
popa
xchg
enter
inc
into
je
push
pop
movsl
ss
lahf
mov
xchg
or
cmpsl
fnsave
sub
aad
xor
mov
in
pop
jge
ljmp
xchg
repnz
jo
pop
mov
int
popl
and
jle
push
in
ds
adc
or
sub
mov
fistps
add
into
and
call
xchg
xchg
sbbl
das
push
xor
imul
imul
or
data16
testl
push
mov
mov
mov
addr16
fs
enter
aas
and
cmpsb
scas
and
cmp
cli
xor
outsb
or
cmp
xor
sub
and
je
icebp
cwtl
and
int
in
std
sti
punpcklwd
sti
out
daa
inc
and
mov
adc
dec
mov
fildl
or
popf
flds
insl
and
mov
cmp
cli
xchg
addr16
pminsw
and
adc
stos
dec
and
adc
sti
clc
enter
pushf
hlt
pop
in
jmp
xor
scas
fisttpll
mov
data16
sahf
dec
jo
xor
cmc
mov
out
loopne
fmull
dec
add
out
dec
mov
mov
push
dec
pusha
and
fcmovnb
adc
jnp
pop
push
dec
xor
pop
jmp
mov
sbb
rcrl
xchg
testb
mov
fcmovb
dec
loopne
js
movsb
adc
iret
dec
xor
out
pop
xor
je
addb
xor
sbb
or
sub
mov
lods
les
std
call
ljmp
or
mov
sbb
add
test
pop
adc
cwtl
xchg
ret
jge
mov
dec
xchg
adc
cmp
lret
mov
aas
xor
jecxz
sbb
add
mov
pusha
addr16
bound
popf
clc
mov
and
mov
andl
cmp
shr
call
xchg
mov
add
sbbb
push
sub
jb
stc
out
or
inc
scas
add
cltd
mov
lods
xor
inc
rorl
xor
cwtl
popa
das
div
push
stos
xchg
mov
xor
fisttps
inc
outsb
les
jle
test
xor
pop
rorb
or
adc
sbb
push
push
jg
push
lds
fs
das
push
mov
cld
inc
outsb
lods
andb
and
stc
xor
ret
icebp
mov
xor
pusha
mov
mov
and
mov
adc
cmp
sub
fisttpl
es
ss
repnz
or
in
loop
mov
jne
jbe
out
repz
repnz
sbb
dec
and
cld
inc
in
and
shrl
push
popf
mov
into
pop
cmp
mov
pavgb
adc
test
lea
push
addl
push
adc
dec
dec
push
nop
add
mov
lds
xchg
std
jo
or
test
xchg
les
and
jb
ret
push
xlat
mov
ja
mov
add
and
mov
fxam
dec
aaa
aaa
inc
mov
mov
and
push
mov
loop
loopne
mov
xchg
and
mov
adc
sub
ss
bound
in
adc
pop
inc
add
std
inc
ljmp
popa
inc
hlt
cmp
add
clc
sub
sub
das
push
nop
adc
popa
push
sbb
sti
subl
sub
and
jne,pn
mov
clc
dec
add
dec
jne
out
sbb
movsb
xor
jle
test
std
push
test
clc
add
insb
lahf
ret
adc
aas
push
or
add
es
pop
pop
pop
in
xchg
loopne
mull
push
xor
fiadds
in
sar
mov
lret
lahf
or
dec
xor
dec
outsb
out
xor
mov
movsl
scas
push
push
pop
sub
cmp
mov
inc
dec
mov
rcrb
mov
js
jno
bound
mov
sahf
fistl
scas
rcrl
jbe
call
dec
not
mov
arpl
out
add
pop
pminub
sbb
ret
stc
inc
aaa
cmp
outsl
mov
ret
into
mov
mov
cmp
or
inc
icebp
inc
push
inc
sbb
lods
test
push
dec
int3
mov
shlb
ljmp
stos
and
xchg
jl
filds
sub
loop
popf
stos
sub
add
insb
pop
push
jae
mov
addr16
xor
lret
test
inc
scas
rcll
jno
mov
mov
xchg
cli
xlat
ror
mov
pushf
mov
or
pushf
out
sbbl
or
cld
out
leave
xchg
aad
xchg
into
mov
dec
ljmp
into
dec
imul
xlat
adc
push
pop
arpl
insb
xor
mov
push
icebp
lret
push
je
out
adc
aas
icebp
scas
out
sbb
dec
cmp
add
adc
imul
gs
or
mov
sbb
inc
loopne
jo
in
loope
lock
push
sub
jle
in
test
fwait
mov
int3
mov
jb
xchg
dec
sahf
push
das
pop
gs
xchg
push
lret
sahf
popa
mov
in
std
and
int
push
jnp
cli
in
cli
iret
ds
pop
movsb
cmp
pop
jmp
jne
jae
xchg
pop
inc
cmp
dec
adc
mov
loopne
bound
gs
fwait
inc
std
push
push
xchg
ss
adc
fbstp
cwtl
fcompl
and
inc
push
or
pop
stc
outsl
loop
pusha
mov
or
lods
xchg
push
leave
inc
aaa
nop
lods
and
js
and
loop
or
fwait
imul
jno
jnp
jns
mov
jns
jb
popa
mov
xlat
add
and
pop
imul
jo
mov
mov
inc
sbb
lock
pop
shlb
push
and
popa
mov
cmp
sahf
data16
mov
jnp
sahf
shr
lock
pop
pop
dec
add
xchg
mov
lock
push
mov
and
out
ds
jp
jg
lret
pop
nop
fcoms
and
addr16
and
aaa
mov
daa
lods
daa
fdiv
imul
pop
or
add
inc
shll
mov
adc
int
daa
pop
and
inc
push
ss
pop
adc
mov
push
sub
sbb
lods
adc
add
mov
daa
dec
repz
sbb
xor
and
orl
push
sub
mov
out
cmpsb
rolb
mov
push
push
mov
mov
sahf
imul
push
repz
scas
negl
cmp
movb
jne
outsl
fistl
sbb
icebp
mov
fsub
out
orl
lret
mov
push
dec
lahf
dec
mov
push
lahf
sbb
sbb
and
movsl
sub
leave
jp
xor
inc
jecxz
jne
repnz
loopne
add
push
adc
xor
scas
aad
mov
push
and
dec
je
inc
mull
jne
pop
test
jmp
lret
es
lret
dec
mov
out
lds
jo
jge
push
repz
cmp
test
pushl
mov
mov
or
mov
cmpsb
insb
mov
or
fisttps
popf
das
test
jg
clc
inc
mov
les
cmp
cmpsl
in
add
xchg
mov
add
fistpll
addr16
popa
push
cmp
jo
data16
adc
call
enter
imul
js
add
mov
cmpsl
cmp
lret
inc
dec
popf
jnp
dec
add
and
aas
sbb
sub
dec
mov
lcall
mov
pop
aad
test
fcmovnb
icebp
out
adcb
repz
pop
inc
jb
jns
pop
jle
in
adc
scas
daa
faddp
leave
dec
add
xor
mov
stc
push
aam
mov
inc
insl
clc
jle
pusha
inc
repnz
int3
add
aaa
jp
in
stc
movsbl
repnz
dec
or
fs
ror
xchg
pusha
mov
fs
adc
mov
or
in
dec
movsb
pusha
pushf
pushf
cli
es
rcrb
xor
add
pop
push
das
daa
mov
mov
mov
mov
and
hlt
iret
xchg
cli
push
sarb
push
movsb
cli
inc
aad
lcall
and
cmp
imul
mov
inc
sbb
jle
loop
mov
arpl
rcr
xor
jno
sub
fdivl
sub
test
fnstsw
sti
pop
mov
repz
fmuls
dec
sbb
adc
int
outsb
jo
pop
ret
xor
xlat
outsl
dec
jbe
add
and
xor
pop
cs
cmpl
mov
jns
call
mov
ror
popa
dec
pop
dec
pop
lds
mov
xor
push
cmp
frstor
jmp
or
cmp
dec
mov
mov
cmp
jno
idivb
inc
out
push
pop
fwait
or
lret
ljmp
mov
mov
dec
sub
cli
gs
stos
aaa
movsb
subl
dec
aaa
xlat
cmp
sbb
mov
es
mov
dec
cltd
cmp
sbb
xor
stos
sub
pop
adc
fsubs
rcl
push
xlat
mov
outsb
inc
sbb
inc
cmpsb
lahf
imul
aad
cmp
add
adc
in
movsl
xchg
mov
xchg
jbe
jbe
neg
ja
and
iret
xchg
push
out
shlb
stos
xchg
cmc
xor
cwtl
xchg
lret
mov
test
dec
mov
mov
hlt
test
int
mov
xor
xchg
pop
leave
push
pop
push
nop
mov
xchg
adc
ret
das
mov
dec
shl
pop
cltd
movsb
sub
and
push
push
pop
xchg
push
push
fcompl
cwtl
shl
push
push
jo
and
push
adc
repz
movsl
lock
lahf
dec
loopne
call
out
aas
lret
in
ss
mov
pop
aad
mov
mov
sarb
pop
outsl
leave
sub
inc
aaa
outsb
cmp
mov
je
iret
inc
lahf
faddp
mov
icebp
add
or
mov
mov
jle
jle
cltd
mov
hlt
xchg
lcall
mov
mov
mov
out
push
jbe
add
lahf
or
inc
insb
mov
push
adc
enter
in
mov
xchg
mov
insl
pop
and
lahf
cmp
sub
shrl
cs
movsb
dec
out
rcrb
jle
je
mov
repz
cmpb
cmp
inc
imul
orl
pushf
into
inc
or
xchg
cmp
add
dec
xlat
subb
scas
rcr
push
cmp
in
fnstsw
data16
ficoms
xchg
sub
adc
scas
out
fcomps
test
push
mov
adc
loope
push
std
inc
jno
inc
lahf
mulb
scas
es
arpl
inc
jne
xor
movsb
add
std
xchg
loopne
pop
inc
test
in
fiaddl
mov
test
mov
push
inc
cmp
call
xchg
insb
xor
outsl
inc
aaa
push
insb
movsb
enter
jl
cmp
test
mov
enter
dec
inc
stos
push
xchg
adc
int3
pop
mov
popf
add
cmp
pop
mov
mov
nop
sub
or
repnz
mov
sbb
adc
inc
scas
push
sahf
or
cmp
jnp
pop
xlat
mov
andl
pop
test
inc
pop
jmp
out
sti
lds
addr16
dec
popf
add
mov
out
cwtl
or
sub
and
test
repz
adc
pushf
or
scas
dec
push
inc
lahf
push
inc
xchg
and
negb
xchg
push
xchg
bound
cmp
cld
xlat
popf
push
leave
mov
rolb
dec
jmp
mov
ss
je
loop
ss
ret
cwtl
cmp
mov
sub
or
or
add
adcl
sub
sbb
stos
repz
inc
xchg
adc
and
cmp
sub
xchg
pop
jno
ja
sti
pop
sub
jg
inc
xchg
mov
or
pcmpeqw
mov
pop
xor
xorb
push
dec
stos
repnz
insl
leave
lahf
mov
fcmovbe
lock
std
push
faddp
push
or
dec
sbb
test
add
lock
push
fs
dec
jg
fadd
outsb
mov
nop
fstp
mov
jmp
sahf
jns
adcb
adc
repz
adc
sbb
fsubl
cltd
mov
rcl
insb
iret
into
cmp
stos
pop
icebp
cmp
xchg
std
cmp
aas
pop
sbb
imul
push
xor
mov
jmp
rclb
sub
and
cld
repz
cmp
dec
mov
test
cmp
or
scas
push
ret
aad
std
mov
andb
push
push
shll
mov
jno
mov
scas
shll
mov
frstor
and
cltd
mov
add
push
jge
xchg
lods
jb
int
xor
xor
daa
sub
jecxz
dec
mov
enter
hlt
mov
les
mov
in
xchg
aaa
or
les
jb
cmp
or
loope
mov
mov
test
xchg
or
and
push
rorl
ret
mov
jae
xlat
mov
inc
cmp
addr16
xorl
orl
mov
sub
mov
xor
gs
dec
pop
xchg
inc
mov
sbb
mov
test
push
and
mov
push
idivl
pop
xchg
cmpb
dec
cli
add
sub
cmp
and
in
dec
xchg
sbb
into
push
pop
movl
rcrb
jae
pop
fdivrl
inc
insl
dec
outsb
mov
outsb
jge
push
enter
or
add
out
mov
mov
inc
out
or
push
and
stos
push
xlat
xor
cmp
cmp
inc
jmp
orl
aas
js
xchg
dec
sub
stos
je
roll
pusha
push
into
pop
mov
ret
inc
mov
mov
sbbl
pop
xor
sbbl
mov
sbb
test
addr16
icebp
mov
mov
jmp
pushf
jecxz
insb
pop
movsb
push
sahf
mov
data16
rclb
cmpsl
pop
out
push
push
sub
sahf
pop
incb
rcl
pop
loopne
int
movsl
fstps
test
jmp
mov
mov
xor
and
inc
dec
mov
ljmp
mov
aaa
hlt
cmp
lret
push
lods
ljmp
ss
or
cmp
mov
out
les
sti
sbb
aad
jns
cmp
push
sub
mov
mov
jb
es
jecxz
icebp
xchg
loope
or
pop
mov
or
jmp
mov
mov
push
mov
unpcklps
jmp
test
cld
sarl
ret
xchg
jmp
xor
jno
lock
push
ret
pop
jns
sbb
stos
xor
xor
clc
xchg
pushf
add
mov
inc
adc
cmc
dec
push
mov
enter
cmpsl
pop
sahf
psrlw
mov
mov
cld
aad
movl
lret
test
pop
mov
out
out
dec
std
clc
xor
ja
mov
add
pop
jp
call
stos
sbb
pusha
xlat
push
sub
sahf
fldt
inc
cmpsb
out
in
and
jo
dec
jg
mov
or
cld
inc
sub
nop
mov
inc
push
pop
test
inc
dec
mov
cmp
jb
sub
ja
in
mov
in
or
das
sbbl
sbb
push
cld
mov
mov
mov
xorb
pusha
pop
and
insl
je
lcall
ret
pushl
test
dec
sti
jl
fcmovbe
out
out
mov
adc
pop
ja
add
dec
cmp
xor
mov
push
push
mov
mov
add
outsb
cmp
adc
in
sarb
mov
ret
jg
cwtl
loop
aad
push
push
xchg
cmp
push
scas
out
mov
xchg
inc
sub
test
mov
ds
mov
xchg
cmp
cmp
adc
xorb
jl,pt
fwait
jle
fadds
cmp
mov
mov
mov
shlb
mov
pop
lahf
push
mov
das
xchg
imul
pop
loope
push
sahf
leave
xchg
iret
aad
test
dec
mov
sbb
ss
jle
int3
jo
inc
ds
add
idivl
lret
dec
mov
int
pop
mov
iret
loop
jmp
mov
push
rcr
push
ror
mov
jle
shl
adc
push
jbe
rorl
popa
push
ret
and
sub
jge
cmp
dec
loope
push
cmpb
jle
mov
fnstsw
ss
daa
int3
pop
cwtl
xchg
in
aam
stos
push
pop
adc
mov
mov
cmp
mov
sahf
aas
test
out
roll
xor
cltd
rorl
pusha
stos
pop
push
adcl
or
mov
pop
in
not
adc
mov
push
inc
cmpsb
jg
setg
add
aaa
pop
or
xchg
adc
and
jmp
out
loop
popf
xchg
imul
aaa
jbe
js
pop
adc
mov
pop
push
or
outsl
inc
mov
pop
cli
cmp
jae
daa
pop
push
cld
and
add
out
sbb
pop
scas
nop
lret
adc
inc
dec
scas
das
mov
push
add
dec
xchg
fsub
in
les
mov
pop
je
jp
sub
mov
jbe
pushf
arpl
add
push
lret
jmp
and
fistps
fnsave
out
and
mov
ss
push
ja
jmp
aad
adc
enter
mov
mov
imul
dec
inc
arpl
gs
rcll
daa
iret
mov
test
jo
jmp
sti
out
add
outsb
into
xor
iret
call
test
fistl
jbe
out
hlt
decb
mov
mov
jnp
addr16
jb
add
add
dec
es
clc
push
xor
or
shrb
cltd
loop
dec
test
inc
mov
mov
lds
cld
adc
lret
push
mov
sub
cli
je
xor
fnstsw
cmpl
xchg
cmp
xchg
pop
out
push
and
push
mov
and
xor
xor
stos
outsl
cmp
call
ret
fninit
mov
arpl
sahf
ret
cmp
shrb
push
mov
and
daa
loop
adc
and
push
mov
in
and
cmp
mov
scas
test
and
add
mov
dec
mov
cwtl
mov
cs
pop
push
push
dec
mov
pop
xchg
mov
mov
or
jns
loope
lods
xlat
adcl
popa
or
dec
stc
sar
pop
pop
into
mov
mov
jne
sbb
or
xchg
pop
fs
xchg
aas
ss
jl
cmpsl
fs
in
cs
push
icebp
sbb
cwtl
cli
adc
imul
jno
mov
push
push
lret
add
out
leave
popa
mov
dec
gs
ficoml
push
adc
adc
pop
daa
fs
and
xchg
mov
mov
cmp
jl
and
cli
and
jecxz
push
int3
push
pop
dec
ret
fwait
movsl
nopl
sbb
mov
push
mov
das
cmp
lcall
push
mov
cmp
jge
insb
test
dec
imul
aad
ret
cmp
in
popa
adc
aaa
cmp
cmpl
or
inc
pop
cmpsl
gs
pop
fwait
mov
cli
addr16
and
dec
and
mov
xchg
aaa
fwait
add
aam
and
pop
ror
cmp
xor
pusha
jmp
ljmp
adc
test
push
mov
cmpl
cmp
dec
popa
sbb
jl
movsb
ljmp
out
sahf
cld
mov
mov
insb
pop
dec
mov
push
pop
pop
and
lcall
sahf
dec
fwait
cmc
pushf
sub
ljmp
cmp
inc
sub
xchg
jbe
dec
xor
or
xchg
mov
or
mov
setne
sbb
popf
nop
cmp
lock
into
mov
out
fsubrl
leave
sbb
jp
cld
test
aaa
icebp
loop
mov
out
mov
sbb
push
or
jns
inc
stos
outsl
rolb
inc
sbb
inc
jno
jmp
negl
dec
cmp
pop
ret
pop
stos
xor
cmp
mov
rclb
mov
in
add
imul
pop
push
inc
push
xor
adc
insl
jle
push
fidivl
mov
add
scas
aam
loop,pt
scas
push
push
mov
in
dec
out
sub
test
js
xor
cmpsl
mov
mov
push
stos
adc
insb
xchg
and
and
int3
push
lret
leave
movsl
mov
xorl
add
sub
insb
das
sub
in
jns
std
ficomps
neg
les
jne
dec
mov
fdivrl
pop
clc
test
int3
idivl
xor
push
inc
test
out
xor
pop
xchg
mov
dec
test
loopne
lods
jle
negb
testb
movl
push
mov
in
cld
int3
sbb
cli
jl
cld
out
arpl
adc
lahf
push
mov
inc
insl
pop
sub
hlt
outsl
out
cs
xchg
fsubs
or
mov
add
mov
adc
mov
mov
fdivl
pop
sub
mov
cltd
mov
stos
repz
mov
dec
inc
or
in
mov
mov
movsb
cmpsl
jbe
aad
sti
sub
outsl
adc
cltd
in
rorb
pop
xor
pop
dec
hlt
add
xor
lds
iret
mov
ret
into
hlt
adc
imulb
pushf
mov
mov
lods
mov
jb
and
cmp
pop
paddb
and
mov
scas
std
cld
sbb
aam
push
jp
insl
es
movsb
rolb
mov
sbb
scas
jae
inc
int
inc
pusha
adc
test
orb
sub
pop
inc
cmp
shlb
leave
sbb
or
push
aad
sub
pusha
sbb
add
dec
les
xor
lret
add
and
dec
adc
ret
mov
outsl
ret
inc
cs
ret
xor
pop
dec
mov
aam
leave
or
push
lcall
xor
xlat
mov
mov
jne
jl
mov
dec
aam
adc
insb
and
rclb
jo
xchg
pop
loopne
add
cltd
add
scas
into
xchg
push
dec
jle
ret
and
push
addr16
in
shrb
addr16
dec
jns
in
mov
push
ficomps
mov
ljmp
fistl
dec
shlb
imul
dec
pop
out
xor
jbe
outsb
mov
xor
int3
add
aam
decb
sbb
sub
mov
loopne
mov
ljmp
jbe
movsl
or
push
in
or
in
dec
mov
imul
lea
xor
aaa
jae
sub
adc
outsl
cmpl
pop
dec
xor
imul
mov
js
adc
les
xor
mov
adc
sahf
add
xor
leave
sub
jb
or
lds
mov
dec
sbb
jb
into
or
mov
mov
pop
jl
lea
inc
push
push
icebp
mov
push
negl
shlb
mov
pop
mov
push
icebp
mov
aas
icebp
les
dec
test
movsb
jne,pn
lcall
mov
and
mov
cmpb
mov
lds
push
adc
inc
insl
and
push
ret
les
sbb
daa
fcompl
roll
test
and
mov
sub
xor
or
pmaddwd
inc
cmpsb
fistps
stos
lods
push
xchg
arpl
xchg
bound
lret
addl
loop
inc
inc
adc
loopne
sub
dec
xlat
enter
xor
faddl
or
cmp
mov
pop
imul
roll
xchg
add
mov
inc
jmp
adc
adc
ss
scas
loop
jbe
mov
mov
xchg
adc
imul
mov
lret
test
pop
gs
insb
sbb
fcmovnu
sbb
add
push
jbe
inc
push
faddl
fcompl
add
inc
cmp
adc
inc
sub
jmp
sti
dec
popa
inc
incl
outsl
pop
adc
lret
je
push
insl
push
mov
sub
mov
daa
push
lcall
push
sbb
enter
movsb
xor
jge
or
fildll
or
ja
jnp
jg
aas
push
mov
cmc
lods
mov
add
lcall
cmpsl
outsl
aaa
cmc
cld
push
adc
jo,pt
jecxz
sbb
ficompl
xor
add
pop
imul
repz
stc
xor
roll
inc
arpl
mov
lods
loope
ret
scas
hlt
xor
nop
sti
xchg
mov
sbbl
xor
xchg
jge
and
add
cli
outsl
insb
jnp
add
jecxz
testb
xor
jae
mov
loopne
or
inc
fcompl
jmp
jmp
insl
fs
and
sub
adc
js
sbb
lret
stc
mov
test
outsl
cmpsb
dec
dec
aad
xor
sub
out
test
cmp
into
pop
cmp
out
fisubl
orb
or
inc
and
sub
xor
stc
mov
jge
adcb
jge
pop
jbe
in
push
icebp
je
movb
repz
int
addr16
inc
dec
xchg
add
push
inc
and
hlt
push
js
ret
lret
aam
fs
into
sub
jecxz
imull
in
cwtl
lcall
fmuls
push
jno
mov
mov
lds
and
nop
push
and
aaa
jbe
and
jmp
inc
test
xchg
loop
or
xor
mov
into
je
in
adc
sub
push
or
aaa
sbb
cmp
dec
pop
ljmp
or
fistps
push
shl
cmp
cld
xchg
push
popl
xlat
pop
pop
fstpt
sub
fmuls
into
mov
into
dec
mov
ret
ds
and
mov
movsl
int3
inc
fisubs
lahf
popf
clc
sbb
lret
xchg
jnp
hlt
sub
and
aam
int3
push
addr16
psllq
cmovp
cmpsb
int
jno
mov
repz
repnz
jge
test
addr16
je
xor
sub
pop
mov
sub
adc
sub
out
jmp
in
loope
pop
idivl
lcall
outsl
lods
clc
iret
push
push
inc
add
push
push
pop
or
push
jo
scas
dec
loop
cmpsb
cld
adc
loope
lcall
adc
cli
adc
insb
sub
cmc
xchg
add
leave
jmp
inc
inc
mov
xor
cld
inc
mov
loop
insl
mov
dec
int
test
shlb
lahf
sub
cltd
jge
data16
aaa
push
in
cwtl
add
fsts
ja
pop
xchg
and
repz
test
pop
sti
mov
xchg
cmp
mov
and
dec
lds
imul
inc
pop
pop
outsb
jecxz
push
inc
adc
xchg
or
adc
jb
cli
mov
lock
sub
je
aaa
mov
add
leave
mov
add
rolb
push
adc
jecxz
dec
cmpb
or
jns
pop
add
mov
andb
adc
sbb
lcall
dec
adc
jb
pop
ja
inc
pop
lret
mov
add
divl
insb
shl
imul
out
jp
in
push
movsb
fistl
dec
push
clc
adc
xorb
push
aas
pop
enter
out
adc
xchg
fpatan
cmp
mov
fistps
jle
cltd
fsubl
aas
out
loopne
and
icebp
int3
rcrl
fcomp
rorb
aam
push
dec
insl
and
mov
push
fsts
pusha
cmp
dec
push
divb
fs
ss
cltd
push
mov
and
nop
adc
mov
xchg
jo
and
stos
addl
int
test
jge
lock
adc
push
sti
mov
cmp
stc
jp
and
hlt
pop
scas
ret
test
and
andb
popa
insl
push
jp
inc
sub
pushf
jo
dec
and
test
jae
add
outsb
mov
or
in
dec
lock
cld
int
mov
andb
loope
test
mov
push
mov
cmp
sti
les
pop
scas
pop
aad
sub
shll
mov
pop
mov
pop
fs
and
pop
cmp
jb
sub
lods
sbb
andb
xlat
xor
pop
leave
scas
dec
jb
pop
sbb
icebp
add
fwait
mov
int
and
pop
fisttpl
sub
add
xchg
int
add
mov
sbb
add
xchg
into
into
mov
push
test
fldenv
dec
xchg
sub
cmp
cmp
std
jb
cmp
scas
fnsave
incb
fisubrs
cltd
xchg
pop
mov
les
and
data16
pushf
popa
sbb
xchg
inc
sti
jno
sbb
push
incl
mov
rep
stc
cs
jno
adc
test
rcl
or
mov
ljmp
shll
inc
inc
adc
mov
repnz
push
jecxz
sbb
adc
filds
jle
mov
pop
inc
sbb
out
mov
sbb
out
mov
in
dec
hlt
in
popa
lods
fcompl
sbb
dec
sbb
subb
xchg
fsubp
dec
xchg
ljmp
jbe
mov
sub
test
lock
xchg
fwait
out
sub
xlat
push
push
mov
pop
repnz
nop
je
or
das
inc
jae
dec
pop
aam
xor
aam
lcall
or
arpl
jne
sti
xchg
jecxz
aas
data16
pushf
jne
inc
xor
inc
mov
mov
leave
xchg
mov
cld
jle
and
or
test
mov
insb
jp
push
cmp
pop
sub
mov
mov
shl
adc
aad
mov
adc
jnp
push
and
lods
adc
fwait
xchg
aad
mov
test
inc
xor
pop
das
inc
negl
jbe
mov
sub
leave
mov
adc
fstps
mov
lahf
stc
or
out
push
insl
stos
jp
add
clc
pushf
lods
ficompl
into
loope
push
shl
out
mov
xchg
ljmp
adc
ret
daa
xchg
stos
mov
je
adc
ss
addb
pop
fdiv
mov
inc
pop
inc
cltd
lahf
push
sub
and
js
test
mov
xchg
js
int
pusha
mov
jae
jne
mov
fsubs
stc
or
fistl
rcrb
shrl
jle
inc
sub
aaa
repnz
xchg
aas
lahf
mov
gs
leave
sbb
scas
addl
aas
shrl
test
lret
adcb
sbb
dec
mov
mov
jnp
test
mov
or
inc
aas
xchg
adc
clc
pop
sub
mov
aas
aam
inc
and
in
add
into
imul
xchg
outsb
jmp
pop
iret
mov
out
insb
out
aam
iret
insl
adc
jl
div
sbb
inc
scas
xor
ret
pop
loopne
cwtl
mov
mov
in
bound
lret
mov
stos
outsl
jne
cli
pushf
sub
ret
movsl
fs
and
rolb
nop
mov
add
sub
mov
pop
push
mov
inc
inc
pusha
mov
mov
xchg
testl
fwait
test
sbb
dec
push
push
jle
dec
mov
and
aam
out
shlb
in
add
lret
xorl
cltd
adc
jge
xor
imul
jle
cmp
mov
push
jbe
dec
mov
inc
pop
sbb
or
loopne
inc
stc
scas
jmp
xor
aas
cmp
out
scas
pop
dec
in
or
jnp
pop
jmp
mov
mov
add
popf
test
outsl
mov
and
sbb
shrl
add
sub
and
stc
dec
jg
out
sbb
test
cld
stos
pop
xorl
cmp
lcall
into
adc
adc
adc
fisubl
adc
mov
shlb
mov
add
mov
xchg
dec
adc
lret
cmp
ss
test
lcall
cwtl
sbb
jo
sbb
jnp
das
adc
decb
cmpsl
inc
push
imul
sti
sub
in
jge
pop
dec
inc
push
jno
pop
mov
jne
adc
sbb
mov
sarl
and
rcrl
xchg
add
bound
ljmp
adc
sbb
and
clc
cwtl
imull
filds
cwtl
pusha
xlat
loopne
pop
gs
mov
test
sbb
out
add
jg
or
xor
outsb
or
push
fidivrl
hlt
push
fstl
jns
jbe
push
or
adc
cwtl
inc
push
lock
adc
xchg
dec
lods
insl
fs
pop
stos
jmp
in
cld
sub
dec
repz
push
nop
jg
push
push
test
incl
lret
pop
xor
or
clc
xlat
subl
mov
push
adc
mov
push
xchg
cmp
and
push
decb
add
icebp
call
int
inc
push
das
repz
ds
jle
pop
sub
testb
dec
out
enter
and
cwtl
fwait
in
scas
std
and
lret
push
inc
cld
aad
daa
fsts
cmp
pusha
shrl
adc
dec
dec
mov
pop
lcall
insl
push
rclb
lods
jns
xor
or
cmp
lcall
fdivl
mov
mov
jmp
xor
adc
fcomp
mov
pop
jp
int3
stos
jbe
and
and
out
cmp
push
cmc
icebp
inc
mov
mov
push
fwait
imul
insl
jecxz
hlt
js
fimull
xchg
js
xor
orb
popf
xor
dec
xchg
das
inc
and
fsts
jo
imul
inc
jo
push
jae
push
jne
mov
adc
sbb
and
lret
int
orl
test
movsb
adc
je
mov
fwait
xchg
clc
and
mov
mov
idivb
test
pop
dec
fildll
out
enter
stos
call
pop
cmp
push
mov
aad
fstpl
mov
jae
repnz
sub
jbe
clc
ja
lea
bound
bound
mov
shl
xchg
sbb
mov
movl
xchg
pop
xchg
ljmp
jne
fwait
push
inc
cmc
test
push
inc
push
inc
or
cmp
mov
int
xor
in
jmp
or
push
movsl
mov
scas
inc
inc
or
or
xchg
add
aas
xor
pop
jno
push
lret
mov
fnsave
xor
cmp
add
jp
adc
test
cld
ficomps
xor
jo
push
push
jecxz
rol
pop
pushl
push
xchg
cld
mov
aam
int3
ret
xor
mov
rorl
mov
bound
sbb
mov
jl
pop
sub
mov
jb
xor
dec
rolb
icebp
mov
xchg
stos
lret
jg
aas
cmpl
in
cli
adc
ds
mov
mov
les
aam
jge
push
pop
inc
sti
in
fstps
mov
mov
adc
lods
sbb
dec
int3
subb
pop
rcrl
mov
jno
mov
js
xor
inc
fsubr
roll
xchg
inc
xchg
dec
jp
pop
cltd
pop
xchg
jns
fcoml
fs
xor
xlat
fldenv
inc
stos
mov
push
out
arpl
fdivrs
lds
pop
lret
add
inc
mov
mov
xchg
cmp
daa
jmp
testb
out
in
xor
xor
fcmovnbe
loope
and
psrld
inc
jmp
out
mov
xor
adc
movsb
arpl
repz
mov
mov
ja
call
dec
nop
cmpsb
mov
pop
inc
xor
fcom
push
xchg
imul
lcall
cmp
bound
jge
mov
pop
decb
pop
jnp
test
mov
test
mov
clc
bnd
and
dec
add
mov
mov
pop
loopne
sahf
sub
jo
jne
sbb
les
ficoml
xchg
nop
cmp
and
cmc
mov
jge
and
pop
loop
xor
lock
cmp
jo
cmp
mov
lret
repz
or
mov
sub
or
fidivrs
sub
cmpsb
imul
mov
mov
mov
push
stc
or
mov
jnp
add
ds
insl
dec
sbb
and
stos
ret
sbb
pusha
mov
push
jno
faddp
mov
sti
cmp
and
rcrb
fwait
int3
jbe
aas
xchg
jp
inc
and
sub
das
popf
iret
dec
pop
mov
push
sbb
andb
xor
std
fstpt
dec
jbe
int
and
lds
xchg
movb
inc
ret
test
sbb
scas
hlt
cwtl
push
adc
shll
out
lock
shlb
nop
divb
ret
js
or
adc
mov
cli
std
and
xchg
mov
cmp
dec
push
loope
sub
ret
cmp
lret
call
aad
pop
or
cwtl
shlb
mov
ret
loopne
sbb
daa
mov
add
movsb
iret
sbb
sbb
push
add
xchg
xlat
xchg
pop
inc
cmp
shrb
xchg
add
mov
lds
lods
call
push
subl
push
sar
bound
call
add
fmuls
rclb
data16
js
out
mov
cmp
xor
push
and
mov
outsl
inc
sbb
stos
push
call
das
loop
jle
push
arpl
js
fwait
sub
rcrb
jbe
fs
pop
clc
pop
mov
stc
popa
movsb
in
inc
scas
push
pop
adc
xor
pop
aad
test
pop
pop
outsl
scas
in
inc
sahf
clc
lret
xor
imul
fcompl
lret
hlt
pop
popa
loope
sub
incl
aam
test
xchg
lahf
mov
jne
ss
xor
pop
mov
cmpb
les
dec
js
jmp
loope
test
test
push
jbe
adc
adc
loope
test
xor
and
fsubl
xor
outsb
pop
stc
pop
sbb
fildll
idivl
rcrb
mov
lcall
ss
mov
mov
xor
in
out
mov
je
and
push
hlt
popf
movsl
lods
bound
out
movsb
sbb
sbb
sbb
sbb
xchg
test
mov
adc
cmpsl
mov
add
jno
sbbb
dec
lcall
and
leave
dec
sub
in
fcmove
es
out
call
outsl
cmp
mov
dec
movsl
jmp
test
loop
add
mov
ret
xchg
subb
sub
in
and
inc
mov
outsl
jno
sub
dec
idivl
ds
lahf
fs
gs
aad
fs
inc
scas
inc
lret
pop
stc
pop
inc
dec
mov
aad
fwait
cmp
loopne
push
je
add
scas
jmp
sti
pop
or
add
push
pop
jl
mov
ret
popf
enter
pop
adc
mov
repz
sub
mov
and
jne
inc
scas
out
cmc
push
loopne
xchg
outsl
lods
rcll
cmp
adcb
ljmp
movsl
es
xchg
jg
aad
int3
or
mov
xlat
cmpsb
ljmp
movsl
mov
mov
push
or
fcom
cmp
int3
movsl
lods
inc
in
pop
cs
lods
loopne
fstl
div
arpl
js
ret
shrb
jne
xor
sub
das
sbb
cmc
notb
or
mov
hlt
jp
in
cmp
adc
lahf
dec
icebp
push
mov
sbb
and
jge
cs
push
xchg
xor
lods
mov
clc
mov
call
inc
gs
cmp
dec
xlat
xlat
push
add
repz
mov
aas
jns
inc
es
test
lods
clc
or
aaa
into
enter
popa
outsb
mov
push
xchg
pusha
call
pop
icebp
or
mov
adc
cmc
inc
outsl
aad
xor
out
xor
and
movb
mov
or
and
or
test
or
jo
dec
push
jbe
sbb
jns
shrl
inc
or
cmp
xor
mov
jbe
pop
mov
adc
aam
mov
in
sbb
movq
push
dec
jmp
in
pop
lcall
jmp
je
add
nop
sub
aad
cmp
cli
in
lea
mov
adc
adc
outsl
fcomip
int
cmpsb
clc
or
daa
mov
in
cmp
dec
sub
cmp
sbbb
popf
mov
es
ljmp
popa
jb
mov
sub
repnz
rorb
inc
lods
cli
inc
fisubrs
sbb
sbb
insb
jns
in
xor
cmp
jge
out
cmp
adc
gs
inc
out
aas
pop
mov
mov
pop
lcall
jbe
adc
popf
in
sbb
jg
or
out
mov
lock
jb
mov
clc
pop
inc
cmp
out
adc
lret
leave
test
push
xor
shll
lock
sbb
stc
sbb
sub
mov
jmp
dec
and
je
sahf
cld
cmp
lea
out
test
stos
mov
add
pop
jmp
push
loope
test
aas
negb
and
mov
sbb
dec
jno
fcmovu
jmp
movsl
roll
xor
mov
push
xchg
pop
add
out
and
lods
addr16
mov
sub
cmp
pop
jmp
scas
or
mov
jns
xchg
sbb
sbb
inc
repnz
iret
loop
cmc
neg
xchg
xchg
push
pop
aam
cmp
mov
lret
sub
clc
cmp
mov
je
sbb
call
ljmp
int3
xchg
fs
je
clc
push
cltd
adc
push
pushl
sub
cmp
pushf
das
push
pop
mov
loope
dec
test
push
or
sbb
dec
pusha
jb
cmpsl
das
popa
sahf
push
adc
adc
push
or
and
inc
or
ja
add
fwait
scas
jnp
shlb
jnp
scas
jmp
push
into
in
lods
fistpl
and
and
repnz
push
pop
xchg
in
pop
jmp
je
mov
sti
dec
push
mov
adc
aad
mov
lods
fnsave
inc
adc
daa
lret
mov
scas
cltd
clc
push
cmp
add
push
ja
stos
inc
cmp
int
and
call
jb
mov
out
lea
jno
enter
adc
mulb
jge
dec
mov
cmp
je
mov
out
mov
movsl
push
add
out
repnz
popa
sbb
fwait
mov
adc
lds
aam
sbb
insb
into
xchg
cmc
mov
push
sbb
scas
dec
inc
xor
out
pop
mov
shlb
out
ja
mov
nop
int
repz
jecxz
mov
mov
inc
out
in
mov
sub
test
sub
push
xchg
xorb
mov
or
dec
jnp
lock
sarb
sahf
lret
scas
xorl
lahf
push
mov
insl
jne
fwait
arpl
lcall
aad
mov
mov
add
aam
mov
nop
mov
outsb
rcll
pop
fnstcw
outsb
js
js
push
mov
add
test
pop
sub
and
ja
dec
push
negb
and
in
dec
pop
cmpsb
jae
fstps
fdivr
cli
nop
movsl
dec
cmpsl
cmc
lea
jnp
jmp
push
dec
pop
pusha
xor
cmp
add
movsb
insb
jg
push
pop
jno
pusha
rol
pushf
xchg
cmp
push
mov
mov
mov
movsb
and
mov
shlb
rclb
jecxz
jae
or
cltd
or
adc
jnp
insb
xor
outsb
jbe
sahf
es
in
cltd
call
rorb
push
add
test
shll
loop
xor
adc
sar
loope
fwait
cmpsb
shrb
fxch
jge
lcall
or
push
movsb
ss
dec
ja
in
aaa
mov
test
pop
or
push
int
movsl
cmpb
inc
lcall
cs
mov
out
push
cmc
fistpl
call
pop
aam
iret
or
cli
push
icebp
cli
rcl
rcrb
mov
push
pop
testl
dec
ss
mov
test
mov
push
mov
add
lea
jmp
shlb
pop
sub
aam
dec
inc
stos
sahf
outsl
push
push
xchg
xor
mov
mov
outsb
jp
mov
and
or
mov
mov
out
cs
jge
idiv
xchg
lods
inc
sbb
and
inc
enter
test
dec
shll
lock
mov
mov
cmp
xchg
mov
or
xor
sub
ffree
cmp
add
cmpsl
inc
add
stc
xor
adc
in
mov
lahf
xor
lds
jl
rcrb
xor
add
add
mov
fadds
cltd
insl
push
pop
cmp
shlb
xchg
or
addr16
arpl
mov
imul
mov
cmp
push
ds
push
andb
adc
lea
jmp
push
mov
faddl
mov
icebp
jnp
push
popf
mov
mov
or
inc
cli
iret
or
cwtl
pop
push
pop
nop
stos
mov
pause
dec
std
pop
imul
lret
xor
sbbb
js
xorb
in
cmp
cwtl
arpl
int
fs
xchg
jl
pusha
dec
mov
pop
fildl
out
add
bound
and
pop
sbb
mov
movsl
int3
sbb
loopne
fdivrl
sub
dec
aaa
adc
pop
jo
loop
and
dec
fidivrl
sbb
lahf
rcll
stc
inc
xor
push
push
outsb
int3
leave
enter
mov
xchg
xchg
push
jbe
int3
cmp
mov
xor
or
jle
jns
sub
outsb
aas
inc
xchg
sbb
and
xchg
fisttpl
inc
imull
inc
es
call
and
lahf
jns
adc
pushf
cli
xchg
xor
imul
and
stc
jb
or
enter
jmp
or
mov
int3
add
mov
jl
or
lret
ds
inc
shrl
mov
insl
rorl
jae
mov
mov
xchg
stc
and
jecxz
insl
data16
mov
mov
xchg
xor
push
push
lret
mov
call
mov
decl
int
sarl
cmp
mov
std
stos
inc
jno
push
sub
ja
mov
inc
hlt
add
test
loop
mov
sub
push
cwtl
sub
xor
adc
repz
cmp
sub
cmp
push
aas
push
sub
rorb
scas
mov
pop
adc
inc
mov
ret
out
lods
push
fxch
or
dec
pop
test
and
pop
push
xchg
inc
sub
arpl
add
xor
test
cmp
lods
pop
mov
in
pop
mov
dec
push
jns
out
mov
jne
sbb
jnp
cld
xchg
in
mov
push
jecxz
leave
inc
or
push
cmp
roll
xchg
push
xchg
movsl
xor
cmp
add
aad
dec
dec
fcompl
es
xor
fldl
lds
mov
jns
jno
orl
xorb
cmp
xor
adc
stc
lret
mov
int
stos
ljmp
push
notb
jecxz
inc
js
pop
andl
das
test
jecxz
test
call
pop
mov
lods
fwait
pop
sub
cmpsl
pop
fsubrp
incl
call
inc
jbe
xchg
xor
add
xchg
lods
shll
imul
cmp
hlt
xor
adc
pop
fldl
push
mov
xchg
pop
jno
xchg
pop
imul
mov
mov
jle
sbb
clc
sbb
sbb
fcomps
xchg
mov
and
pop
jmp
dec
or
test
test
aad
or
test
fnstenv
bound
push
les
cwtl
fcoms
lcall
out
inc
out
jbe
sti
add
ficoml
jo
lcallw
add
imul
fwait
xor
ss
sbb
in
dec
cmp
int3
shll
xchg
int3
cmp
aad
cmp
cmp
int
loope
iret
lret
mov
into
loope
cmp
inc
pop
rorb
or
js
mov
cmp
test
incb
into
sbb
and
imul
mov
repz
push
in
fisttpll
fldcw
in
ret
or
jle
jl
jg
jnp
rolb
movsb
pop
call
sbb
rorb
xchg
xor
into
inc
inc
mov
loop
nop
imul
push
in
xor
jno
jl
inc
add
push
lahf
test
iret
or
lock
out
pop
cld
loop
ja
stos
dec
pop
testb
pop
xor
pop
aam
mov
cmc
push
es
and
test
jbe
insb
inc
inc
addr16
sbb
cli
das
imul
mov
mov
add
push
sbb
mov
jnp
pop
test
lahf
mov
jne
dec
xchg
sbb
xchg
add
mov
cmc
jl
fists
std
fldl
dec
pushf
or
in
mov
stc
ljmp
fldenv
mov
movsl
jge
leave
aas
mov
stos
push
ret
lds
fdivl
adc
aas
adc
mov
lods
xchg
notb
cmp
ljmp
movsl
sbb
cmc
into
rclb
pop
jne
popf
mov
cli
insl
aaa
bound
xchg
adc
gs
xlat
push
in
mov
xchg
sbb
sbb
inc
call
and
cmp
and
or
in
ss
ss
inc
cmovns
cmp
mov
je
pop
xor
cmp
mov
cwtl
add
fsubrs
pop
out
push
cmp
hlt
cs
lret
aaa
test
jmp
nop
fwait
cmp
lcall
dec
mov
rorl
xchg
cli
sahf
filds
mov
mov
push
push
mov
fiadds
xor
fstps
inc
mov
test
xorb
xchg
push
dec
adc
test
pop
xor
sbb
sahf
push
repnz
loope
call
lods
push
shll
or
inc
lahf
ret
les
fdivrl
mov
push
mov
fdivs
hlt
mov
hlt
js
test
dec
cmp
pop
fstpl
stos
mov
mov
pop
xchg
ds
pop
in
or
sahf
mov
call
or
add
pop
inc
xchg
mov
imul
and
incl
mov
add
cltd
scas
pop
mov
adc
push
cmp
adc
test
ret
jle
rcr
lds
out
int
xor
sbb
mov
mov
jg
push
std
sbb
addl
inc
mov
and
xor
jg
xchg
inc
inc
cmpsl
cmpb
jne
sub
lret
xor
add
adc
push
cmpsl
mov
jo
xor
adc
dec
lea
decl
movsl
rcl
jg
mov
mov
in
sbb
int3
mov
icebp
popa
add
ficoml
mov
std
inc
outsl
dec
jns
or
mov
push
aam
lret
outsl
push
pop
mov
xchg
mov
dec
lods
mov
adc
jg
inc
hlt
sar
jnp
xor
loop
js
pusha
les
mov
enter
adc
dec
jecxz
push
das
inc
adc
jecxz
aas
out
sbb
add
outsl
jns
jg
inc
pushf
inc
ret
jp
sbb
shl
pminsw
mov
in
stos
repz
mov
lahf
xor
mov
pop
sbb
and
cmpsl
mov
xor
insb
sbb
out
pop
push
mov
mov
pop
inc
or
inc
mov
ja
outsl
sub
and
jle
jl
push
mov
inc
mov
popf
pop
pop
cmp
fisubrs
jp
push
test
xchg
sub
xchg
fdiv
out
adc
mov
fdiv
rolb
fsubrl
pushl
xlat
add
xlat
pop
inc
jge
lcall
data16
lret
sub
add
shlb
ret
mov
cs
or
and
push
call
sbb
pop
sti
lret
mov
aaa
cmpsl
sbb
mov
inc
ja
mov
inc
testb
add
stc
out
sub
out
das
xchg
sbb
imul
and
ljmp
xchg
and
loope
out
sub
mov
inc
mov
dec
mov
adc
adc
jbe
test
cmp
jmp
popa
push
mov
sahf
dec
cmp
rcr
test
addr16
idivb
cli
and
add
mov
jae
pusha
xchg
jnp
push
and
fs
and
xor
mov
je
adc
mov
xor
ja
shrb
pop
dec
jp
jnp
test
iret
push
jl
mov
call
push
ds
call
pop
lahf
add
adc
xor
xchg
sbb
pop
sbbb
adc
xchg
jecxz
fdivr
mov
push
lret
call
xor
sbb
in
leave
daa
cmp
push
sub
fbstp
lcall
subl
je
leave
adc
loopne
fists
cmp
xlat
mov
in
xchg
cli
outsb
mov
add
lret
imul
push
rcl
cli
inc
decb
les
imulb
sub
mov
ja
push
roll
out
jmp
jno
mov
leave
mov
es
sbb
sub
idivb
pusha
ja
int
hlt
mov
push
dec
push
ss
mov
js
sti
pushl
mov
andb
pop
jo
fisttpll
lock
shrb
jle
stc
ljmp
jmp
sub
push
push
or
sub
inc
and
cmp
mov
cmpsl
lods
push
iret
in
or
fidivs
out
jg
mov
or
popf
cmp
fwait
inc
insl
inc
push
pop
or
bound
sbb
sbbl
int
loope
pop
push
mov
sahf
push
repz
cmpsl
stos
mov
outsb
sbb
sub
call
jb
cmpsl
addb
and
mov
std
xor
imul
add
mov
push
or
and
adc
push
mov
cli
loopne
dec
lcall
lock
xchg
xchg
stos
xor
mov
sbb
mov
pop
pop
adc
ret
adc
arpl
pop
sbb
xchg
das
cwtl
dec
mov
outsl
les
mov
pop
or
sbb
push
es
xchg
add
mov
jmp
rol
xchg
jno
iret
mov
popa
push
dec
fwait
dec
js
fisttpll
shrb
scas
pop
lret
pop
popf
mov
dec
stc
filds
jge
lods
jmp
loopne
jns
mov
adc
test
mov
out
ja
popf
sub
sbb
popa
inc
xor
lds
sub
xchg
loope
sub
push
xor
mov
adc
fcoms
mov
xchg
cmp
pop
or
mov
dec
sub
mov
xchg
out
push
inc
fidivrs
sbb
fimull
popf
mov
pop
or
call
aam
mov
dec
mov
les
or
outsb
stos
mov
ja
adc
aas
xchg
and
or
fisubs
js
adc
inc
jno
sbb
imul
sti
fmul
and
int3
sub
sbb
sbb
nop
pop
adc
in
movsb
aaa
push
mov
lret
sub
nop
arpl
aam
stos
xchg
adcl
xchg
sub
int
sti
fs
cmpsl
mov
pop
adc
and
fiadds
cmp
aad
inc
dec
ds
xchg
pop
dec
inc
fisubrl
jmp
scas
pop
icebp
fwait
std
inc
repnz
es
push
mov
cmpb
dec
lcall
jae
fstps
nop
lods
scas
or
lea
sahf
inc
sub
mov
sarb
lods
inc
cs
dec
mov
xchg
scas
xor
sub
sbb
push
jae
inc
loop
das
ljmp
add
mov
xchg
fbstp
pusha
sbb
repnz
jge
ret
add
sbb
add
mov
mov
sahf
cmp
stc
imul
mov
mov
aad
sbb
fisubrl
xchg
addr16
mov
fcom
out
add
cmp
pop
js
dec
cmpsl
loope
jmp
inc
scas
stos
xchg
cmpsb
inc
inc
or
clc
xor
test
sub
jg
add
ds
cwtl
xchg
or
add
mov
imulb
insb
out
leave
loop
or
add
add
mov
movsl
xor
or
add
out
lret
cld
maskmovq
testl
adc
mov
sub
sub
cmp
cmp
inc
xchg
sub
jae
mov
xchg
push
pushf
sub
mov
insb
jae
aam
idiv
inc
xor
or
jecxz
je
jp
cmp
cwtl
push
add
pop
dec
add
inc
and
lret
ja
enter
mov
sbb
pop
mov
outsb
cmpsl
shll
sbb
stos
add
sub
xchg
add
aas
or
arpl
mov
sub
ds
sahf
pop
insl
mov
pop
mov
in
mov
cld
imul
and
js
pop
aas
sbbl
mov
insl
fsubrp
icebp
sbb
inc
lret
mov
out
popa
jno
jo
xchg
sub
push
cmc
scas
adc
push
mov
mull
sub
pop
dec
mov
and
pop
pop
lods
sbb
cltd
pop
mov
add
cmpsb
dec
mov
int3
jg
popf
push
xchg
jb
add
or
jmp
cwtl
adc
mov
cs
rorl
es
pop
jle
and
adc
xchg
stos
mov
or
aam
inc
inc
insb
out
push
aaa
xor
fldcw
out
ret
sub
test
pusha
mov
sub
gs
cmp
std
xor
sahf
cmp
adc
pop
lds
add
mov
test
aad
adc
imul
pusha
mov
cmp
in
inc
ljmp
lds
sub
sub
push
inc
popf
jnp
adcb
sti
movsl
pushf
fcmovnb
lods
mov
test
sti
xchg
repnz
adc
repnz
icebp
loop
xchg
cmp
pop
xchg
stos
stos
mov
mov
lea
inc
scas
jno
cmp
dec
test
or
das
xchg
pop
xorb
dec
mov
sbb
cmp
dec
sbb
pop
and
jnp
dec
aad
sbb
stos
inc
and
imul
or
test
pushf
adc
jg
jns
push
lds
pop
mov
cmp
in
daa
sbb
push
push
jge
sub
adc
sub
jne
rcl
lea
cltd
or
mulb
fwait
mov
mov
xchg
je
mov
sub
mov
pop
lret
or
or
cmp
cwtl
imul
pop
fdivrp
mov
mov
dec
adc
les
inc
jge
cmpsl
inc
pushf
sti
fisttpl
mov
cltd
cmpsb
iret
pop
add
or
xor
test
inc
movsl
out
cmpsb
sar
pop
or
je
insb
icebp
scas
jmp
sub
jge
xlat
push
mov
xchg
adc
mov
in
aam
outsb
adc
cs
mov
push
pop
inc
add
xchg
sahf
xor
out
dec
sbb
and
out
jecxz
add
pop
cltd
into
jb
inc
jne
loopne
jo
sbb
sub
dec
lds
mov
out
inc
sar
arpl
sub
enter
ss
mov
aas
in
mov
js
shr
inc
sub
sahf
sbb
jg
and
orl
ljmp
sbb
jg
sub
and
cmp
fbstp
outsl
xchg
ds
mov
fsubrl
xchg
or
lret
dec
stc
mov
aas
cmp
jbe
fcmove
mov
js
jno
ret
sub
cmp
add
push
and
loopne
push
inc
xchg
inc
bound
subl
cmp
xor
pop
mov
in
pop
int3
mov
notl
push
mov
les
hlt
fldl
push
cld
sub
xor
inc
fidivrs
nop
dec
sub
jns
xor
orl
mov
xorl
mov
sarl
mov
fs
fidivl
jge
outsl
push
inc
adc
mov
push
out
xchg
jae
lret
pop
ret
test
daa
ss
mov
cmc
addr16
push
icebp
xor
mov
shl
mov
sahf
xlat
sub
xorb
push
add
daa
pop
mov
idivl
xchg
lret
add
pushf
enter
lret
in
lock
jle
popa
pop
enter
sub
inc
pop
std
sbb
push
lret
std
aas
push
inc
xchg
pushf
negl
xchg
mov
aam
cmp
push
js
int
repnz
mov
sti
sub
push
cs
jnp
out
ret
repnz
scas
cmp
jno
adc
xchg
loope
testb
xor
andb
pop
cmpsb
inc
insl
lods
sbb
das
adc
mov
ret
fistps
fsts
mov
out
pushf
jle
adc
or
sbb
jecxz
inc
mov
hlt
fstpt
add
mov
xor
xor
in
js
or
dec
jge
pop
mov
stos
loope
cwtl
xchg
or
dec
aad
xchg
sbb
cmp
mov
cs
out
pop
fcmovne
insb
inc
inc
push
lahf
fistps
pop
and
aam
in
push
mov
rclb
sub
push
mov
inc
in
int
daa
scas
jbe
cmc
movl
lods
cltd
xchg
add
fstpt
or
and
cmpsl
gs
jmp
push
test
in
arpl
sub
repz
dec
negb
movsb
fcmovnbe
xchg
xchg
xor
ljmp
and
sub
rcrl
loope
popf
jb
repz
push
das
cmp
andb
ljmp
xor
scas
daa
jl
inc
scas
lahf
inc
sbbl
add
fstp
lcall
push
test
es
and
repnz
add
xchg
in
ret
les
out
sbb
pop
pop
rcr
mov
rcrb
cltd
xor
lret
add
xchg
aas
inc
xor
popl
shrb
add
divb
insb
ret
lods
jne
shll
jmp
lcall
aad
pushf
and
jno
insb
cmp
into
dec
adc
adc
sbb
add
roll
xchg
and
mov
xchg
xor
cli
xor
jnp
jns
mov
cmp
cmp
ror
add
jns
imul
or
xchg
jg
lods
jbe
and
lahf
mov
mov
stos
nop
sub
rcrl
mov
daa
roll
or
insl
jbe
cltd
push
mov
pusha
sbb
xor
push
nop
jg
lret
sbb
rcr
xchg
int3
cmpsl
jp
mov
inc
jnp
jbe
fxch
fbld
or
shlb
icebp
xor
movsb
mov
sti
push
cmpsb
enter
ja
js
sbb
outsb
dec
add
cmp
add
xor
or
inc
mov
hlt
leave
aam
call
out
inc
int3
push
jmp
dec
lret
pop
mov
jmp
gs
arpl
insl
sub
adc
push
push
inc
jbe
stos
inc
stc
test
insl
xor
lods
popa
das
xor
xlat
inc
imul
cmp
call
cmc
mov
adc
dec
xchg
xchg
jp
mov
testb
pop
sarl
or
out
sbb
les
sbb
cmp
mov
lret
dec
int3
movsb
sbb
pop
mov
leave
out
sbb
cltd
movsb
fs
cwtl
mov
insl
dec
jns
ljmp
pop
rcll
test
adc
fildl
adcb
test
popf
shll
leave
insl
fs
xor
enter
add
pusha
fs
in
outsb
add
std
shr
jmp
iret
ret
les
push
jbe
fstl
xchg
sbb
imul
rcl
insl
push
popf
fldl
add
sub
in
xchg
ss
add
and
fldt
xchg
xchg
xchg
sbb
out
cmp
fisubl
sti
add
or
or
cltd
mov
rorl
fildl
xor
mov
gs
mov
push
xchg
aaa
xchg
outsl
sub
mov
int
fstl
inc
push
mov
imul
dec
into
add
cmc
pop
aas
mov
ret
jl
pop
add
dec
dec
mov
std
or
mov
xlat
mov
xchg
xlat
xchg
aas
xchg
inc
jo
mov
adc
je
sarl
mov
fucomp
xor
push
jmp
fmul
test
repnz
xchg
pusha
dec
dec
ror
ljmp
add
divb
cs
mov
mov
shll
cmp
int
jae
or
or
je
cmpsl
mov
lcall
xchg
inc
inc
cmpsb
pop
dec
in
cmpsl
stos
aaa
dec
xchg
push
and
fs
adc
rol
and
cmpsb
xlat
push
lods
dec
lahf
dec
xor
sahf
andb
scas
dec
mov
jae
dec
in
push
arpl
nop
mov
xchg
loope
jns
pop
or
adc
inc
add
xchg
lea
pop
sub
jmp
inc
inc
push
rclb
xchg
in
and
mov
aam
xor
cmp
lock
push
push
movsl
add
inc
aam
daa
adc
dec
mov
and
push
and
aam
sahf
stc
xchg
dec
test
imul
pop
pushf
aaa
adc
xchg
pop
imul
add
mov
sbb
dec
jle
das
out
fcomps
dec
add
or
jo
adc
call
addr16
jbe
dec
gs
jb
bound
and
outsb
pcmpgtw
inc
packsswb
nop
jmp
ljmp
adc
clc
imulb
xchg
popf
push
mov
mov
push
icebp
cmp
mov
sti
push
mov
sbb
xchg
shrb
lods
pop
inc
mov
add
cs
inc
imul
inc
push
subl
jae
pop
mov
incl
mov
fsubs
cmp
inc
mov
inc
dec
push
int
sub
xchg
call
mov
fucompp
pop
cmp
cwtl
sub
xchg
daa
jbe
test
pop
cs
push
and
inc
mov
pop
xor
lcall
jle
imul
ficoms
int3
popf
sbb
mov
pop
int
imul
mov
jbe
mov
shrl
fwait
push
mov
jne
je
std
mov
push
notb
int3
mov
push
rol
in
cmp
iret
div
inc
xchg
adc
add
dec
sub
jo
mov
lock
ljmp
cmp
scas
cmp
cmp
cmpsl
cmp
cs
cmp
pop
mov
ret
pusha
and
lods
lcall
out
mov
pusha
sub
mov
sbb
push
push
jge
je
dec
mov
outsl
add
inc
ficoms
xchg
loop
cmp
add
and
inc
ss
sbb
add
xor
sbb
ss
aaa
sahf
int3
sub
adcb
enter
cmp
inc
in
adc
cmp
pop
sbb
fdivrl
leave
mov
cwtl
fcmovbe
push
cmp
cs
out
imul
out
inc
sbb
dec
mov
leave
sub
sub
lods
ret
push
test
in
imul
inc
jecxz
sahf
or
push
je
mov
aam
pop
mov
lea
test
push
add
sub
fldenv
enter
repz
jmp
lret
xor
ret
std
out
mov
sti
jnp
aad
push
fwait
mov
dec
push
nop
cmc
cmpsl
adc
aad
mov
lcall
test
add
mov
push
outsl
test
pushl
in
mov
add
jno
aas
inc
xchg
or
in
adc
or
int3
hlt
ret
mov
fildll
cs
pushf
jmp
mov
add
in
lock
scas
mov
inc
fdivrl
fmuls
mov
pop
sbb
push
es
and
scas
popf
adc
not
rcr
mov
pop
adc
into
stc
fimull
incl
scas
and
psubd
add
jne
fwait
add
loopne
mov
add
jbe
adc
push
pop
xchg
scas
xor
filds
in
pop
jle
xor
nop
cmp
mov
add
dec
pop
or
movsl
shrl
je
cmp
clc
fidivrl
sahf
xchg
sahf
inc
pop
dec
jp
enter
mov
lret
push
mov
jb
mov
test
xchg
sub
imul
pop
inc
js
int
jo
jp
and
add
cld
xor
add
push
les
ret
sub
push
stc
sahf
fxch
lds
ret
cs
lcall
pop
lods
pop
adc
jno
or
add
stc
imul
lahf
aas
xchg
js
adc
aad
push
lret
cmp
pop
out
inc
cmp
adc
out
jl
push
jp
sbb
lds
dec
mov
shrl
fisubrl
sub
int3
mov
inc
es
leave
jae
movsl
jmp
mov
cmp
test
arpl
test
js
scas
jge
pop
test
inc
xchg
popa
mov
mov
mov
xor
pop
cltd
mov
lds
cmp
test
sub
test
xor
adc
les
loope
test
jno
sub
fs
cwtl
dec
mov
mov
aad
adc
popa
xor
std
neg
shll
je
inc
push
jg
in
jmp
lea
push
mov
jecxz
je
int3
mul
das
repz
push
push
mull
sbb
mov
pushf
pop
jecxz
sahf
out
jecxz
sarl
mov
and
and
dec
subb
jne
and
pop
cmp
fistpl
mov
scas
xchg
mov
sub
mov
xchg
rcrb
movsb
or
popa
cmp
mov
jns
repnz
or
insl
sub
aad
in
mov
jae
inc
dec
stc
outsl
shll
sbb
push
mov
cmp
loope
xchg
js
jbe
in
add
xor
popf
es
das
mov
mov
shl
loopne
and
mov
sub
shlb
adc
mov
lock
cmc
xchg
daa
inc
cwtl
mov
dec
cltd
inc
int
adc
in
lahf
or
push
daa
pop
cmp
dec
icebp
mov
enter
movsl
sub
in
inc
out
jb
and
mov
adc
sbb
mov
idivb
dec
loop
jnp
inc
pop
imul
jns
pop
cltd
jbe
jns
jae
stos
into
mov
aad
lret
or
cmp
and
popf
jmp
hlt
jne
ljmp
scas
ja
cmp
test
mov
inc
push
rorb
and
popf
xor
lret
mov
mov
jne
jo
out
ja
jnp
xor
movsb
ja
sub
adc
cmp
push
fwait
inc
cmpsb
mov
shlb
mov
and
xchg
filds
xchg
ljmp
movsb
or
xchg
loope
mov
dec
push
mov
int
xchg
jnp
fidivrl
inc
stos
cmp
jmp
iretw
inc
mov
insl
addr16
adc
mov
mov
inc
mov
shlb
and
mov
insb
mov
push
cmc
mov
sbb
out
int
pop
loopne
mov
enter
mov
push
cmp
mov
jbe
iret
jbe
stos
fwait
and
addr16
int3
nop
call
cmp
add
adc
jl
aaa
sub
cmpsb
sub
fcom
dec
jp
dec
ljmp
in
fistl
and
pusha
outsl
xchg
mov
popa
or
in
sbb
dec
sbb
lods
shr
inc
adc
dec
jl
sbb
pop
hlt
out
jge
and
mov
data16
insb
ficomps
shlb
cltd
sti
std
test
mov
adc
mov
or
stos
ficompl
or
mov
lock
rcl
adc
sub
sarl
mov
mov
xchg
repz
call
xchg
sub
mov
dec
shl
or
testb
jmp
push
push
sub
stos
sbbl
ja
mov
xchg
sar
popa
mov
mov
insb
xlat
push
push
bnd
push
orl
jns
inc
jmp
pop
fnstcw
add
or
pushf
insb
mov
pop
loop
push
stos
mov
fidivs
mov
jae
jmp
push
mov
sbb
out
sub
push
scas
push
push
mov
inc
mov
shlb
ds
and
and
jno
stos
adc
enter
jno
movsb
xchg
dec
inc
les
ljmp
out
mov
lds
add
lea
out
push
sub
sti
cmp
popa
add
nop
rcrl
mov
sub
mov
gs
mov
lock
in
jnp
test
push
in
les
mov
jo
cmp
mov
push
and
push
dec
shr
loopne
lea
lret
fdivl
out
lret
mov
inc
mov
cmp
cs
sub
sub
imul
xlat
rclb
in
lcall
mov
cmp
ror
mov
xchg
fdivs
inc
fsts
cld
js
sahf
cltd
rorl
fdivs
pop
mov
push
enter
jns
or
mul
jnp
fsts
and
lds
inc
loope
xor
movsl
dec
ret
fwait
stc
push
add
je
inc
leave
fimuls
xor
push
int
mov
inc
xchg
cmp
dec
movsl
xchg
scas
xchg
daa
dec
jnp
jge
push
adc
sti
gs
fstpt
mov
or
mov
sub
jb
mov
mov
shl
das
ja
sbb
leave
inc
inc
sarb
sub
push
insb
cmpsb
pop
repz
pop
mov
mov
adc
insl
test
js
addr16
sbb
adc
sbb
movsb
xchg
mov
mov
pushf
cli
sbb
movsb
outsb
cmp
inc
add
orb
mov
pop
fldt
xchg
shl
jbe
scas
lock
mov
leave
xchg
rcrb
ficoml
push
mov
out
notb
mov
loop
push
aaa
dec
ja
sub
pop
push
push
movsl
mov
movb
and
fucomi
jp
cmp
mov
and
sub
flds
mov
dec
pop
mov
mov
fwait
outsl
stos
pop
nop
je
sbb
xor
add
ret
popa
sarb
dec
call
idivb
outsl
inc
test
popl
outsb
popf
es
lea
adc
incl
xchg
rcrl
adc
xor
call
aad
jae
and
sub
sbb
das
sub
and
aaa
sbb
addr16
jbe
les
mov
sbbb
lret
repz
and
testl
sbb
add
dec
mov
lahf
pop
data16
dec
sarb
xor
ficomps
cmp
xchg
jp
aam
sarl
pop
inc
ret
inc
push
mov
cmpsb
out
jae
ret
push
nop
in
push
xchg
xor
imul
xchg
in
inc
mov
and
cli
outsl
or
arpl
stos
mov
ds
pop
movsl
push
sahf
push
enter
adc
sahf
and
jmp
jae
add
test
inc
and
pop
fldl
mov
inc
and
into
lds
xchg
mov
rcll
jge
movsl
imul
cmpsl
add
imul
sub
mov
sbb
jge
out
add
mov
cmc
iret
leave
cli
ficompl
mov
lahf
repz
adc
cmp
stc
lock
fcmove
ljmp
psraw
daa
aad
jg
lods
out
rolb
ret
mov
cmp
adc
stc
leave
insb
jnp
lock
inc
jo
dec
jo
add
test
cmp
movsb
adc
int
pop
lods
orl
leave
out
fmulp
mov
test
mov
rcl
movsl
pop
cmp
push
in
lret
and
sub
hlt
iret
xchg
std
insl
and
mov
insl
dec
lcall
xchg
fwait
pop
stos
orl
dec
xchg
aas
mov
dec
dec
in
fidivrl
cmp
stos
mov
mov
adc
jns
popa
loop
pop
dec
es
mov
and
inc
roll
and
push
push
adc
cld
movsl
in
add
ljmp
mov
in
cmp
idivb
fdiv
mov
mov
mov
sub
cmc
cmp
mov
jmp
ljmp
sub
negl
xor
xlat
jns
pop
add
sti
pop
movsb
jnp
outsl
cmp
add
incb
lods
sub
and
shlb
mov
adc
push
test
dec
gs
arpl
fsts
lods
std
imulb
sub
push
nop
jge
insb
out
adc
mov
lret
int
sbb
mov
fiadds
fisubs
cmp
loop
aaa
std
js
sti
xorl
cmp
dec
sbb
sbb
aaa
sub
cltd
fdiv
aam
ss
cltd
xorb
cmp
out
mov
rcl
mov
movsb
sbb
dec
cmc
xor
xchg
xor
inc
jae
sub
stc
mov
mov
rorl
inc
adc
jo
outsb
test
into
mov
mov
xchg
dec
rcl
jmp
mov
push
push
fs
mov
repnz
test
mov
popf
dec
dec
adc
adc
jne
pop
call
test
cmp
outsb
sahf
sbb
and
cmpsb
and
mov
dec
out
jo
pop
adc
les
and
jne
fisttpll
out
scas
pop
push
and
pushf
cmc
out
scas
dec
mov
inc
sbb
push
fisubl
cwtl
push
cmp
outsb
loopne
mov
and
xor
stos
out
push
mov
loopne
insl
and
pop
and
cltd
pop
sahf
cmc
add
cmp
add
xor
not
stos
adc
dec
insl
lea
inc
fildll
add
daa
fimull
in
or
push
popf
mov
push
sub
xchg
or
jecxz
lea
mov
jnp
push
adc
dec
mov
add
jg
iret
mov
jo
scas
addl
popa
insb
leave
cmp
subb
push
add
inc
lret
xor
lahf
mov
imul
adc
fldt
hlt
mov
sbb
je
jne
inc
pop
mov
mov
and
dec
push
push
popf
jo,pt
stos
xchg
rcrb
push
mov
xor
jl
mov
or
pop
xor
cmp
aam
shrb
dec
sar
mov
mov
jnp
enter
fwait
loop
add
mov
cltd
and
cli
and
push
leave
pop
fdivrp
xchg
cltd
mov
adc
ds
mov
rol
sti
or
xor
add
jecxz
movsl
sub
sbb
pop
sbb
ds
shr
sbb
lcall
sub
push
push
clc
xor
cs
mov
sub
test
ljmp
jle
lret
inc
cmp
xchg
out
repnz
jbe
mov
aam
sahf
jg
add
pop
sub
pop
leave
xor
lds
jp
xchg
xchg
sarl
rclb
add
pusha
out
fimuls
and
xchg
mov
lods
cmp
cwtl
xor
push
scas
je
cmpb
leave
xchg
rcrl
or
movsb
mov
cmpsl
aaa
mov
adc
xchg
out
nop
pop
mov
jl
popf
ja
js
xor
inc
ss
int
sub
aam
sub
push
aaa
jo
xor
adc
movsl
rcr
pop
jp
mov
dec
cwtl
sbb
repz
insl
or
movsb
push
sti
lahf
mov
insl
into
dec
mov
xor
loope
leave
aam
mov
fisubrl
fsts
adcb
vpsllw
subb
dec
icebp
popf
test
daa
jnp
adc
or
mov
outsl
sahf
fdivr
cs
repz
xchg
test
testl
jmp
dec
mov
inc
sbb
cmpsl
jp
xor
mov
mov
sub
push
mov
test
cmpsb
inc
out
jae
int
push
mov
enter
aam
adc
adc
push
jbe
cmp
cmpsb
iret
fdivs
cmpsb
inc
shrb
stos
repz
call
mov
pop
insb
adc
cmp
lods
test
jns
pcmpeqw
push
mov
repnz
and
pop
mov
fmul
ja
out
iret
jns
xor
stos
shrb
jnp
dec
rorb
xchg
clc
jle
data16
dec
test
sbb
push
sbb
lahf
add
pop
xchg
jno
cli
shlb
jns
mov
scas
sub
cmp
mov
clc
mov
or
cs
mov
movsb
cmpsb
sti
test
lods
lret
xor
and
scas
pcmpeqb
movsl
sbb
xchg
jp
into
pop
mov
jmp
mov
add
and
xchg
sti
mov
inc
sub
or
xchg
fidivl
in
and
movsl
lods
or
push
pop
adc
sbbb
or
rcr
jns
jmp
inc
and
and
insb
mov
and
push
ljmp
xor
pop
ja
dec
jns
xchg
data16
push
lea
push
jno
nopl
aaa
lret
fildl
pop
cmp
hlt
push
or
pop
jbe
cmp
xor
fdivs
cmpsl
iret
fdivp
dec
sbb
cmpsb
lds
cld
add
xor
cmp
insb
mov
pop
fdivrs
mov
roll
pushf
mov
add
add
add
aaa
sbb
cmp
cwtl
jmp
pop
mov
pop
mov
icebp
sub
inc
pop
cwtl
xchg
pop
mov
sub
add
mov
negb
inc
pusha
inc
jp
inc
mov
mov
mov
sbb
xchg
jo
xchg
mov
cmc
lret
fbld
pop
adc
sbb
imul
inc
fst
inc
xchg
inc
shr
jmp
dec
out
leave
dec
sbb
dec
aas
ljmp
notb
and
ret
sub
movsl
js
push
push
jg
iret
dec
xor
hlt
es
test
xchg
mov
lods
mov
or
mov
mov
sub
mov
stc
xlat
daa
jae
adc
xchg
or
insb
rorl
sbb
aam
or
rcl
xor
fs
jae
push
and
insl
pop
lods
fidivs
in
sub
xchg
ret
sti
in
adc
jle
jo
rorl
push
jp
xchg
out
jge
cmpb
inc
add
les
add
pop
mov
push
and
pop
rcrb
jg
pop
lret
xchg
sub
and
mov
inc
adc
ret
icebp
mov
les
iret
mov
aad
lret
mov
inc
or
push
mov
clc
push
mov
jle
adc
add
pop
cmp
pop
mov
inc
xchg
stos
sub
or
ja
push
adc
leave
xor
lcall
mov
lock
mov
lahf
leave
mov
push
loop
or
pop
mov
loope
jae
xor
jp
mov
hlt
sbb
hlt
mov
fcomps
adc
push
fbld
enter
out
pop
imul
or
adc
inc
ss
lods
subl
xchg
fsubrp
cwtl
mov
fmul
scas
cmp
ret
cmp
imul
movsb
lds
dec
dec
sbb
adc
dec
or
pop
in
stos
shlb
frstor
mov
movsl
loopne
fnsave
test
div
and
pop
stc
popf
popf
out
cmp
inc
or
or
aas
xor
leave
jge
daa
imul
pop
mov
add
mov
faddp
xchg
sbb
ds
cmp
pop
pusha
and
pop
sahf
push
mov
and
les
cltd
xchg
sbb
test
test
jne
arpl
dec
push
xchg
pop
and
mov
push
jl
xchg
sbb
ds
icebp
adc
out
cmp
scas
dec
pop
mov
jo
mov
test
fwait
and
js
jbe
jle
inc
jle
add
mov
enter
test
pop
mov
hlt
mov
mov
fdivrl
mov
jne
addr16
iret
in
stc
outsl
sbb
adc
push
sbb
stos
adc
push
add
mov
dec
or
repz
fwait
imul
popa
cmp
xor
push
jbe
pop
mov
xchg
les
sbbb
clc
data16
fwait
cs
mov
shll
dec
pop
dec
data16
lea
cmp
mov
mov
into
daa
ds
or
in
add
pop
mov
or
dec
mov
aad
imul
mov
push
adc
data16
andl
xor
xor
popf
pop
gs
inc
or
cwtl
adc
pop
in
and
pop
xchg
fnsave
push
scas
cmp
add
out
movsl
mov
jle
cmc
sub
push
cltd
hlt
in
dec
ss
cli
pop
sarl
inc
aad
ret
fs
stc
mov
in
mov
in
ret
test
mov
xchg
pop
and
mov
ss
jmp
sar
xchg
jl
in
stc
into
jno
cmp
data16
daa
mov
in
int3
inc
dec
xchg
stc
xchg
jg
and
mov
sbb
cmp
add
sub
mov
insb
inc
repnz
cmp
sti
mov
out
iret
and
je
mov
fs
sbb
add
js
mov
icebp
mov
xor
icebp
in
addl
fsubs
jne
xor
cmp
jle
aad
mov
xchg
dec
lcall
sub
mov
jle
mov
sub
rorb
das
push
sbb
xchg
add
cmpsb
cmpsb
pop
add
xor
insl
and
mov
inc
push
adc
mov
sbb
test
jno
ja
pop
loop
or
call
mov
xor
pop
sti
loopne
incl
mov
or
adc
enter
lods
add
outsb
pop
popf
cmp
jne
sub
adc
cmc
loopne
jno
push
adc
movsb
andb
movsb
xchg
inc
dec
std
sahf
ja
sub
clc
fdivrs
lds
rol
sub
cs
cmc
inc
cmp
daa
pop
jae
insb
push
xor
fcomps
mov
jbe
inc
stc
cwtl
inc
out
ja
sarl
addr16
sub
imul
adc
out
imul
mov
int3
push
mov
outsl
cwtl
push
and
rol
arpl
pop
mov
sbb
xchg
cli
pop
xor
ret
enter
insl
enter
mov
mov
mov
movsb
loop
je
push
pop
jnp
fs
xor
idivl
sub
insl
xor
adc
xlat
xchg
dec
enter
sub
stos
adc
mov
jb
popf
arpl
adc
es
pop
jb
loopne
inc
cmc
inc
arpl
push
mov
mov
xchg
cli
pushf
mov
xchg
sub
insb
jns
mov
mov
push
shrl
adc
jo
inc
ljmp
add
add
cmp
dec
xchg
inc
lods
loop
fdivrl
or
inc
inc
insl
cmpsl
sarb
push
aas
xor
jge
repnz
jle
sbb
add
cmpsl
push
jge
mov
jp
into
mov
cli
xorl
pop
add
cld
aas
fwait
xchg
nop
or
ja
push
das
push
mov
sbb
shlb
fsubl
insl
pop
nop
stos
sub
xor
add
add
adc
lret
fwait
inc
icebp
dec
sub
mov
fcompl
insb
pushf
xchg
mov
mov
mov
push
dec
mov
sets
loop
ljmp
adc
jbe
mov
and
movsl
aas
jns
xor
loop
scas
insb
add
inc
xchg
ror
jno
push
rcrl
pusha
dec
lea
lock
nop
and
push
movsl
rdtsc
es
mov
imul
push
popa
test
lock
pop
pop
mov
mov
insl
jmp
fnstcw
jl
jno
pop
mov
jbe
ljmp
fisttpl
daa
mov
sbb
aad
jmp
iret
mov
sbb
leave
repz
mov
sub
mov
fnstsw
cld
out
xor
mov
movsl
pop
ret
mov
test
adc
or
xchg
add
xor
shrb
dec
cwtl
dec
mov
loope
mov
inc
jae
sbb
mov
add
cld
into
pop
dec
jecxz
aaa
pop
push
outsb
dec
add
nop
loop
lcall
pop
mov
lods
or
out
or
in
gs
xchg
insb
mov
or
or
ljmp
push
pop
pop
and
fldcw
cs
lods
cmp
push
mov
jmp
xchg
dec
ja
jmp
lea
movsb
xchg
add
shrb
xchg
push
ficoms
jmp
or
dec
pop
je
mov
lock
call
das
adc
cltd
out
test
pop
xchg
push
push
test
pusha
mov
jmp
int
lock
dec
pop
or
mov
idiv
push
fiadds
in
cmpsl
nop
push
and
jae,pn
inc
cld
push
dec
mov
mov
data16
add
inc
notb
daa
mov
xlat
xor
sbb
test
insb
out
es
popf
xor
mov
shlb
and
jne
es
and
insb
shr
dec
faddl
out
and
pop
lcall
stos
push
fcmovbe
bound
and
stc
ret
pop
ljmp
bound
inc
add
dec
xchg
inc
incl
divl
cmp
jae
sub
cwtl
ja
push
jge
push
arpl
das
lcall
out
cmpsb
cmc
in
shrl
inc
xchg
push
jge
sbbb
out
ds
in
adc
xchg
cmp
xor
mov
lret
push
outsl
mov
add
mov
pop
add
and
mov
rcll
sub
or
cwtl
gs
shl
dec
js
mov
sub
in
insl
cmc
jecxz
push
movsl
add
ds
and
iret
push
fdivl
or
and
loopne
jns
subb
jmp
adc
sbb
aaa
fcomps
add
loope
cltd
lock
or
jne
push
mov
fdivrs
mov
dec
adc
lret
stc
cltd
jl
out
mov
das
je
sti
movswl
and
jae
cmc
test
mov
aam
sbb
sbb
mov
sub
and
cli
mov
ss
add
clc
pop
adc
and
clc
call
push
mov
mov
add
inc
jae
sub
cmpsl
std
stos
pop
lahf
iret
repnz
pop
shl
adc
or
mov
or
ffree
pushf
das
mov
sub
pop
mov
and
mov
in
add
add
push
mov
xchg
call
imul
out
sahf
arpl
or
in
or
pop
push
ficomps
sarb
mov
push
jae
pop
sarl
xor
imul
jnp
adc
xchg
addl
inc
and
rcrl
in
out
mov
push
cli
mov
push
dec
push
mov
repz
or
repz
rcr
or
data16
jo
out
sarl
ds
pop
ljmp
inc
popa
imul
outsl
lds
loopw
adc
sahf
xchg
out
imul
push
out
data16
jbe
push
cli
lcall
and
cmp
lcallw
inc
and
dec
fs
jne
sub
push
mov
sbb
xor
les
pop
aas
inc
xchg
imul
cld
push
lods
jmp
shrl
lds
inc
xor
add
jae
mov
dec
in
push
or
cwtl
sbb
nop
lcall
adc
sbb
pushf
add
int
xor
sbb
inc
jnp
sti
repz
mov
std
neg
add
popa
lods
sbb
icebp
test
mov
std
pop
xchg
lret
adcl
jp
out
add
ss
fcoms
fsubrp
cmp
push
lret
ss
pushw
cmp
push
sub
pop
xchg
int3
cmc
ds
insl
jnp
jb
push
adc
dec
testb
mov
jmp
jl
and
aaa
inc
mov
sahf
sbb
mov
jp
mov
outsl
mov
mov
outsb
mov
cmp
sub
lahf
std
aam
nop
das
xorb
push
rolb
mov
repz
sahf
daa
mov
cmp
pushf
cmp
mov
ljmp
mov
into
mov
add
rorb
and
rolb
lret
lods
inc
pop
aas
out
addb
enter
adc
mov
fstl
insb
adc
mov
cmp
in
push
or
lods
orl
out
sti
jge
dec
jl
insl
aaa
sub
out
stos
aad
movsl
xchg
push
jle
mov
sbb
orb
dec
mov
jo
outsb
mov
mov
or
dec
xchg
adc
mov
cwtl
sbb
or
mov
call
leave
adc
cli
dec
mov
cmpsb
divl
sbb
push
popf
xchg
and
pop
repz
add
lods
push
mov
mov
movsb
scas
dec
ja
push
dec
sbb
mov
cmp
sub
lahf
inc
insb
mov
jge
dec
popf
imul
push
add
or
lea
cmp
rol
jle
adc
out
sbb
insl
insb
push
pop
scas
mov
xchg
es
add
inc
inc
cld
imul
sti
xchg
in
adc
int3
js
dec
add
pushf
or
mov
xchg
shlb
imul
scas
lods
outsl
jg
dec
loop
jb
lods
jbe
aas
jg
cld
pminub
jno
fcmovu
mov
adc
ds
orl
neg
bound
xlat
test
cmp
jg
data16
bound
sarb
imul
loop
jo
push
push
mov
aad
sub
shlb
pop
cld
mov
or
and
lock
ss
or
xchg
lock
fildl
xor
sbb
dec
dec
mov
xchg
cmpsb
call
pop
es
jns
jns
daa
xchg
sbb
data16
mov
lock
int3
push
aad
sbb
mov
jbe
and
cld
jno
cwtd
cmp
repz
call
mov
mov
ja
pop
arpl
sbb
add
or
sbb
outsb
mov
addl
or
and
cmp
stc
mov
fcmovu
pop
and
inc
dec
push
push
fucomip
xchg
mov
sbb
and
mov
mov
or
mov
sbb
push
imul
daa
sbb
test
stos
push
mov
xlat
mov
in
mov
cmpsl
and
cli
sbb
aad
and
je
or
outsl
mov
cli
movsb
and
cmpsl
and
xchg
mov
inc
jge
cltd
pop
clc
and
add
hlt
push
subb
mov
mov
xlat
ret
ret
out
xchg
cmp
sub
xchg
stos
sarl
rolb
out
icebp
sub
test
mov
push
fisubl
pop
jmp
dec
jg
icebp
add
rorb
leave
xchg
pop
icebp
arpl
stos
mov
add
sbb
xchg
cs
movsl
add
hlt
repnz
xor
pushf
es
xchg
ret
pop
inc
test
lods
add
call
arpl
lods
mov
and
xchg
jno
xor
pusha
mul
mov
sbb
inc
xchg
push
cmpsl
test
jo
in
into
sub
jne
xchg
xchg
lea
sub
fdiv
lods
mov
cltd
jge
add
jge
lret
jg
insb
cmc
enter
cld
xchg
mov
add
cmp
xor
and
jae
add
cmp
pop
mov
es
jns
bound
inc
dec
aam
aam
lock
cmp
fwait
fwait
test
or
mov
cmp
das
xchg
hlt
arpl
bound
mov
stc
add
shl
sbb
pop
push
jg
push
lahf
pop
push
vorps
mov
jae
call
add
cmp
inc
mov
leave
outsb
adc
jg
je
cwtl
adc
out
or
fsubrs
xchg
lock
add
and
or
pop
jno
or
nop
add
ret
loop
pop
mov
inc
sub
ret
mov
stos
outsl
loopne
inc
xor
inc
mov
fs
jnp
inc
ds
pusha
loopne
cmp
dec
inc
lock
aaa
cmp
aas
dec
jb
and
stc
inc
sub
pushf
bts
les
dec
pop
jne
pusha
rclb
cmpsl
leave
repnz
mov
decl
out
xor
mov
into
loopne
push
decl
jecxz
pop
xlat
jl
fcoms
or
jo
das
lods
push
lret
sbb
ja
push
pusha
divl
push
pop
insb
inc
loope
insb
mov
mov
cmp
and
or
push
push
jne
popa
sub
in
jne
jp
sub
sub
imul
mov
loopne
outsl
pushf
stos
test
scas
xchg
ret
push
imul
mov
mov
push
std
es
or
sbb
jg
mov
out
int
mov
in
mov
jo
rorb
mov
loope
jnp
xchg
sbb
ja
and
je
mov
nop
jo
fwait
mov
inc
xchg
xorb
or
xor
mov
out
xlat
adc
leave
mov
jecxz
test
mov
pusha
das
repz
icebp
stos
pop
push
arpl
loop
pop
mov
mov
cli
data16
int
xchg
push
stos
dec
jmp
xchg
or
jl
pop
or
gs
xor
mov
pop
lods
xor
mov
mov
fadd
movsb
enter
xor
pushf
pop
out
cmp
cmp
insl
mov
aaa
jl
mov
jbe
pop
sbb
clc
pop
xchg
outsl
divb
sub
idivl
push
or
xchg
push
dec
scas
inc
pushl
adc
or
push
inc
sbb
inc
add
stc
xchg
sub
xor
sbb
xchg
sbb
mov
outsl
stos
test
and
sbb
cmp
xchg
clc
push
mov
mov
cmp
xchg
adc
sub
dec
ret
or
sub
mov
pop
pop
push
out
xor
int3
stos
fxch
outsb
adcl
sarb
cltd
or
mov
sub
add
mov
jno
out
js
subl
push
aaa
pop
sbb
push
sub
outsl
mov
pop
and
cltd
imul
mov
out
orb
imul
cli
push
andb
ja
mov
in
aam
xchg
xor
cmp
fdivs
in
fnstsw
lret
movsl
movsb
xorl
sub
jg
rcrb
push
iret
sbb
or
sub
fs
icebp
pushf
and
pop
sub
sbb
scas
repz
repnz
in
mov
cmp
mov
cld
cmp
xchg
dec
pusha
cli
cltd
mov
mov
jp
and
out
outsb
xor
adc
mov
sbb
sub
inc
scas
jb
inc
ds
sbb
or
cmc
fmul
xor
pop
sbb
movsb
aaa
cltd
push
sub
dec
ds
xchg
imul
sti
cmp
jb
fisubl
imul
push
imull
cmp
add
popa
sub
scas
dec
frstor
mov
push
lea
push
std
mov
lret
xchg
mov
mov
dec
insb
jl
pushf
xchg
mov
sub
mov
enter
sahf
jmp
std
mov
stc
fnstsw
sahf
roll
add
jecxz
das
lock
mov
test
stc
inc
mov
iret
out
int3
cld
mov
cmp
mov
inc
mov
loope
test
loop
test
and
je
adc
xchg
ljmp
out
dec
scas
fwait
xchg
xchg
jno
mov
imul
sub
and
pop
mov
insb
sti
jecxz
fucom
cld
sub
stos
pusha
fwait
push
scas
icebp
cs
aaa
push
sbb
scas
and
mov
stos
jnp
icebp
call
xchg
int3
jg
lret
adc
in
fs
jmp
xor
inc
mov
cmp
xlat
lret
mov
lods
add
add
daa
mov
bswap
outsl
out
push
sub
inc
add
jae
pop
les
jno
jp
or
movsl
xchg
jle
fsubrs
sub
inc
mov
inc
inc
sbb
ficoml
movl
imul
arpl
inc
dec
lahf
pop
xchg
pop
lods
js
sub
ja
mov
mov
in
dec
or
lret
push
xor
fwait
sbb
in
push
arpl
loop
movsb
aad
dec
enter
pop
cmp
adc
dec
dec
out
mov
andl
aas
enter
pop
sahf
add
sub
cmp
aas
push
jnp
loope
xor
call
out
sub
jl
jge
nop
and
mov
rcr
jge
jmp
jp
push
lods
inc
imul
add
sbb
stc
add
mov
and
xor
mov
decb
sub
cmp
addr16
pop
imul
cs
clc
jmp
rcl
xor
jb
std
xchg
loopne
movsl
or
mov
jo
sub
mov
jb
sbb
sbb
out
mov
adc
xor
jge
rclb
push
add
mov
and
push
fucomp
mov
adc
add
iret
hlt
jbe
pop
mov
ja
and
in
fadd
sahf
inc
dec
pop
mov
bound
xchg
mov
aad
mulb
mov
or
cltd
outsb
or
lods
leave
test
mov
sahf
leave
xchg
scas
mov
outsb
dec
pusha
dec
xchg
subb
scas
cmp
xchg
movsb
pop
nop
push
mov
push
inc
xchg
fdivrl
outsl
sbb
jmp
and
push
push
lock
ljmp
rcrl
or
fs
inc
pop
dec
push
cmp
dec
ret
fwait
mul
cmc
mov
mov
sub
lds
popa
scas
fdivl
scas
mov
inc
xor
or
lock
jno
sbbl
jnp
mov
dec
mov
pop
sbb
int3
mov
icebp
into
sti
cmp
lods
es
jb
dec
mov
pusha
pop
cmp
clc
mov
in
inc
xor
shrb
push
add
jg
pop
and
imull
inc
sub
ret
jno
std
mov
push
cmc
insb
pusha
aaa
in
jg
lds
pop
clc
test
dec
sub
or
cli
outsl
iret
xor
insl
pop
test
mov
mov
cwtl
and
call
dec
xcrypt-ecb
cmpsl
int
jge
lds
inc
push
icebp
iret
shl
xchg
or
cmpsb
push
push
ret
js
aam
xchg
insl
push
es
sbbb
pop
pop
jb
cmc
xchg
xchg
sti
sub
fs
mov
inc
xchg
inc
xor
dec
lret
adc
in
jge
dec
int3
pushf
adc
dec
cmc
adc
fsubs
add
in
add
les
xor
or
dec
lcall
pop
mov
jl
mov
scas
xor
xchg
mov
xlat
lret
dec
sbb
or
bound
dec
mov
sbb
sub
xchg
mov
rorb
xor
mov
sub
icebp
dec
xchg
push
xchg
jb
adc
adc
sbb
icebp
mov
jno
add
rcr
fisubrl
ss
dec
imul
pop
flds
pop
insb
sahf
pop
outsl
test
jle
or
xor
dec
pop
cltd
enter
js
cmc
call
rcll
pushf
xor
jle
lcall
lret
pushf
fsubrs
rclb
jns
sbb
xchg
sub
int
inc
cmp
cld
and
mov
and
fdivr
cmpsl
lret
add
call
loopne
inc
pop
or
cmp
push
out
movsl
cs
mov
and
das
adc
xchg
push
pop
xor
les
int3
adc
jle
push
out
push
sub
lds
int
lods
and
xchg
lock
inc
mov
enter
mov
xor
mov
leave
movsb
xor
icebp
movsl
cmc
jbe
faddp
mov
lcall
lock
sarl
bound
sbb
sub
add
cs
sbb
pop
fdiv
popa
incl
insl
push
jae
pushf
in
inc
cmp
insl
leave
dec
push
push
mov
jbe
inc
in
push
or
mov
lret
out
mov
xor
ss
xor
pop
dec
jno
cmpsb
test
aam
and
jns
lret
xlat
push
jbe
add
cltd
sub
mov
nop
femms
out
xchg
leave
cmp
mov
jne
jp
jmp
mov
sub
cli
push
lock
cs
pop
xchg
mov
movsl
dec
ficoml
mov
cs
je
xor
push
sarb
loope
inc
repnz
pop
notl
and
sub
inc
or
sarb
push
mov
jo
add
clc
sbb
aas
int
popa
add
mov
cmp
fiadds
dec
mov
out
les
push
clc
aaa
call
and
push
inc
testb
cmc
push
outsb
je
pop
mov
subl
sarb
shlb
xor
sarl
dec
mov
mov
sahf
sbb
daa
mov
pop
jge
dec
sub
dec
cli
dec
pushf
decl
fstp
xchg
sbb
pop
out
mov
cmpsb
adc
jae
push
icebp
adc
inc
int
ret
or
aas
in
jp
mov
mov
ja
jns
add
mov
rorb
and
xchg
add
xchg
and
and
test
mov
out
imul
jnp
popf
das
in
mov
sub
ret
mov
sahf
xlat
and
push
out
jmp
and
pop
nop
mov
cmp
xchg
aas
lret
js
xchg
movsl
push
lcall
clc
enter
inc
idivb
fiaddl
outsb
and
cmp
std
test
cmp
test
lret
subl
nop
call
adc
and
inc
fcom
jno
inc
mov
loopw
push
in
call
cmp
xor
mov
mov
push
xor
sbb
jmp
sub
cmpsb
fs
sub
fsubs
nop
cmp
repnz
in
add
insb
add
mov
mov
or
or
or
sahf
ja
je
mov
int
addr16
aad
mov
lods
repz
popa
test
es
pop
mov
hlt
add
ret
xor
push
inc
loop
jb
repnz
into
pop
dec
sbb
mov
push
imul
jne
jg
xchg
insl
cmp
or
mov
jmp
inc
pop
pop
lahf
dec
lods
and
sbb
div
int3
nop
outsb
shl
rcrl
aad
lret
out
cltd
mov
inc
call
aaa
and
lock
xchg
sub
xlat
dec
shl
int
pop
add
pop
sub
or
nop
adc
dec
cmpb
xlat
push
outsb
fadds
in
cltd
rcll
sti
mov
in
mov
dec
ret
testl
inc
jp
dec
loopne
gs
call
hlt
cmp
cmp
out
cmp
push
addr16
outsl
dec
inc
insl
hlt
je
and
sub
test
aaa
imul
ss
push
test
adc
or
fimuls
rcr
push
cmp
push
mov
and
push
sub
jecxz,pn
pop
jns
adc
cli
sbb
xor
push
out
xor
and
clc
iret
mov
or
sbb
jmp
fildll
pop
adc
pop
xchg
movsb
insl
insb
outsl
mov
cmp
mov
mov
dec
sbb
sbb
jecxz
lds
je
xlat
xchg
mov
je
cmp
lods
icebp
pop
fcomps
and
dec
jle
lret
adc
pop
ja
fidivl
sub
mov
pop
mov
sub
jb
das
imul
in
pop
cmp
xor
jbe
pop
jnp
mov
int3
mov
jmp
rcr
push
or
arpl
cli
mov
mov
jle
lea
flds
and
cmp
cmp
in
add
jb
fwait
sbb
mov
cmpsl
mov
adc
adc
fists
mov
int
clc
cmp
out
mov
mov
fwait
mov
lcall
xor
testl
xor
repz
hlt
notl
in
aas
xchg
fiadds
addr16
adc
icebp
out
xchg
cld
inc
aaa
xchg
inc
fdivl
and
dec
lods
lahf
test
sub
aad
insl
out
xchg
lea
sub
adc
subb
fwait
xchg
sub
jno
push
bound
inc
cmp
push
cltd
lods
fcompl
test
faddp
and
jns
pop
xor
mov
std
stc
cmp
sahf
cmp
fsts
bound
push
repnz
ror
xchg
cmpsl
jae
mov
lret
pop
cmpsl
pop
cwtl
mov
sbb
ljmp
mov
mov
dec
push
xchg
mov
sub
jle
scas
addr16
in
cwtl
sahf
inc
cmpsb
ljmp
lret
cmc
ret
orb
push
cs
lret
push
mov
loopne
fst
xor
push
xchg
repnz
lahf
and
dec
pop
inc
sbb
and
cmp
mov
jle
push
pop
push
add
test
mull
pushf
dec
enter
push
mov
and
mov
les
mov
jae
ja
loopne
repz
pop
pushfw
inc
sbb
out
scas
movsb
jmp
sbb
cmp
sub
add
dec
sahf
loope
cmpsb
scas
popa
es
mov
out
mov
mov
adc
cmp
cli
filds
lock
mov
pop
fildll
clc
push
xor
xor
bound
cld
mov
ficoms
mov
jmp
jns
aas
idiv
xchg
out
in
out
sub
xlat
test
cltd
pop
mov
bound
adcb
fsubl
aam
jnp
cmp
add
in
je
jbe
mov
xchg
mov
add
rcrl
cmp
icebp
fs
mov
test
sbb
jb
addr16
clc
shl
cmpsl
adc
or
xorb
lock
movsl
or
pop
lods
cs
adc
andl
sub
jno
popa
pop
pop
pushf
push
cmp
push
mov
sbb
jmp
out
mov
mov
and
inc
and
das
out
fcomip
pushf
jae
adc
ret
cmc
inc
pop
fcompl
out
mov
dec
mov
mov
jbe
fsubrs
ljmp
adc
pop
xchg
fnstsw
mov
xchg
ror
mov
and
pushf
test
outsl
ljmp
int3
cs
or
out
dec
pop
iret
and
xchg
and
into
pop
cmp
sub
or
stc
in
mov
scas
push
push
mov
cltd
in
pop
les
vphaddbw
xor
lret
or
mov
test
mov
cmp
dec
stos
ljmp
inc
in
ljmp
call
and
push
lret
daa
push
adc
sahf
in
push
ja
mov
insl
fs
hlt
adc
mov
and
cmp
incb
sti
xor
push
fiaddl
inc
mov
gs
dec
subb
cmpsb
pushf
mov
outsb
fisubl
movsb
or
out
sbb
push
adc
and
sbb
std
lock
call
sub
mov
jecxz
lcall
mov
xchg
mov
je
mov
inc
fsubr
test
add
dec
loop
mov
jae
push
or
mov
pop
lods
ret
outsl
cmp
js
fisttps
fmul
pop
and
dec
xor
ja
scas
testb
js
dec
or
jae
cmp
jns
and
fwait
mov
mov
decl
push
fisttpll
les
jnp
pop
cli
ds
mov
push
dec
jl
jge
scas
sbbl
out
push
fdivrp
or
push
loop
dec
mov
push
xor
adc
xchg
dec
into
and
xor
sub
outsb
adc
loope
in
gs
inc
cmp
sbb
push
inc
sub
pop
shlb
inc
out
imul
mov
add
stc
cmp
lahf
mov
add
mov
and
inc
lods
and
dec
dec
out
jecxz
js
fldcw
lock
scas
mov
faddl
js
shl
jmp
jge
into
mov
push
xor
lret
aaa
cwtl
std
call
adc
and
test
fwait
jmp
iret
movsb
movsb
mov
sbb
inc
mov
pushf
xchg
out
das
testb
mov
sbbb
sti
pop
mov
rol
nop
and
push
xchg
jae
insb
sbb
push
push
add
int
mov
pop
insl
add
fsubrl
in
rorl
std
in
xor
pushl
mov
loopne
or
inc
popf
ja
cmpsl
or
inc
xor
mov
leave
mov
repnz
clc
bound
cltd
iret
mov
dec
or
daa
xchg
imul
cmp
adcl
cmp
mov
adc
pop
adc
cltd
daa
decl
sahf
repz
pushf
pop
push
xchg
mov
adc
inc
sub
mov
mov
outsb
push
imul
out
sub
roll
pushf
mov
mov
mov
sbb
ret
aaa
andb
mov
inc
in
pop
or
sahf
lahf
icebp
sub
xchg
push
and
mov
adc
pop
xchg
xchg
sub
and
jle
or
add
pop
sub
adc
movl
xchg
std
and
push
insb
dec
movsl
pop
mov
and
push
mov
add
mov
repz
xlat
fidivl
dec
xor
mov
jecxz
outsl
test
in
dec
test
and
pop
adcb
push
imul
mov
sti
cmp
and
icebp
xchg
pop
pushf
mov
mov
or
in
orb
daa
in
xchg
fbld
into
cltd
popf
sub
sahf
icebp
mov
xchg
xchg
jno
add
mov
stos
sbbl
lahf
jns
adc
inc
adc
mov
scas
pop
cs
fsubrl
and
sub
in
gs
inc
and
gs
inc
inc
pop
stos
pop
add
pop
jo
enter
jno
scas
pop
in
into
lret
push
jno
push
or
mov
xchg
sub
mov
and
mov
push
lahf
inc
dec
cmpsb
mov
in
cmc
adc
adc
and
adc
jnp
out
xchg
xlat
iret
sub
fneni(8087
aad
cli
dec
dec
int
pop
xor
inc
rcll
jnp
mov
insb
adc
das
inc
inc
ror
push
or
dec
in
clc
mov
pop
xor
aas
xchg
push
ficoml
or
xchg
dec
sub
jle
jb
and
inc
lret
adc
add
inc
push
adc
and
push
data16
outsb
push
lock
push
iret
dec
push
inc
cltd
clc
push
dec
fdivl
jmp
pusha
cld
pop
outsl
sub
lods
jmp
mov
subl
pop
ja
fdivs
sub
cwtl
mov
push
push
push
es
push
les
dec
mov
pop
pop
fnstsw
sbb
sbb
jmp
jmp
sbb
mov
cwtl
es
mov
pop
xor
mov
dec
test
pop
xchg
xchg
cli
in
or
les
mov
iret
push
lcall
inc
shrl
stos
jbe
or
into
inc
repnz
push
inc
bound
bound
in
stos
jno
add
stos
test
out
sub
sahf
es
adc
mov
xor
rcr
lret
enter
push
cmp
mov
mov
movsb
call
pushf
add
adc
or
mov
pop
mov
or
dec
jae
sbb
mov
mov
sbb
fdivs
imul
pop
aas
popa
pop
jo
push
jno
sub
mov
jns
dec
es
and
mov
lahf
test
jl
push
cmc
pop
jl
movsl
dec
movsb
out
lea
icebp
dec
pop
adc
call
dec
sbb
aam
push
add
pop
cmp
fstl
daa
and
sub
xchg
icebp
test
mov
mov
cmp
aaa
dec
pop
mov
scas
test
fwait
pop
add
pop
out
sbb
cmp
adc
mov
xchg
dec
mov
xchg
jge
inc
adc
inc
addr16
loop
repz
test
test
xor
jnp
cmp
out
outsl
inc
xor
inc
movsb
es
fildl
push
les
adc
adc
in
sti
mov
in
pop
clc
cmpsl
cltd
fs
push
aam
out
and
xor
popa
mov
mov
add
jl
stos
gs
jl
dec
xchg
aad
loop
lcall
movsl
sub
mov
mov
push
mov
fimuls
dec
es
push
add
mov
das
ret
xor
repz
iret
mov
xchg
loope
mov
sbb
das
xchg
in
xchg
repz
xorb
ror
call
hlt
push
dec
out
add
sub
fsub
stos
sub
adc
pop
jl
call
ds
dec
scas
and
xchg
inc
adc
cmp
cld
cmp
sub
xor
lds
pop
mov
movsl
cmpsb
sub
sbb
in
push
and
pushf
out
outsb
imul
iret
jnp
popa
push
stc
mov
push
jg
push
shrl
ret
dec
nop
in
lds
pop
jno
dec
scas
insl
pop
pop
jmp
lea
jno
sbb
stos
add
jns
fdivs
adcb
cmp
push
daa
sub
mov
aas
in
stos
cli
arpl
stc
mov
divb
sbb
jae
into
sbb
loop
or
test
push
mov
cltd
push
push
push
pushf
jmp
shrl
loopne
dec
dec
xlat
icebp
jbe
aas
cld
popa
rcrl
mov
pusha
cltd
mov
mov
push
xor
cmp
add
inc
push
sub
pop
xchg
adc
fimuls
lock
fucom
add
lahf
adc
out
insb
add
mov
push
lahf
xor
scas
rcrb
cs
rcll
xchg
int
jg
adc
jns
imul
or
mov
repnz
or
mov
adcb
int
mov
mov
adc
leave
out
ljmp
movl
repz
adc
xchg
push
mov
out
out
lea
mov
push
ds
arpl
pop
decb
jge
psubusw
imul
in
cmpsl
mov
xchg
mov
pop
push
sub
test
ret
inc
loop
adc
mov
sub
jmp
push
andl
pop
insb
cs
idivl
cmp
cmp
mov
jle
jb
aad
jbe
pop
mov
icebp
jg
shl
mull
mov
sub
in
lret
pop
sahf
movsl
xchg
fmul
xchg
data16
fdivr
or
fcoms
shl
pop
mov
add
dec
cli
mov
je
pop
and
fucom
xchg
inc
add
mov
add
xor
xor
mov
dec
fsubl
scas
lds
out
jp
sub
arpl
mov
rcll
inc
push
shrb
mov
cltd
aad
aas
push
pop
or
cmp
cmp
lahf
sbb
out
xor
add
dec
outsb
xor
pop
test
xchg
movsl
xor
pusha
cmp
jmp
or
insl
mov
and
aas
scas
ds
fmuls
xor
insb
push
scas
call
xlat
pop
pop
and
fildll
dec
gs
lock
push
xchg
je
inc
push
jmp
sub
data16
and
jge
sbb
pop
sub
fldenv
push
loope
add
cli
inc
fcoml
and
push
or
pop
jne
jae
push
xchg
ja
mov
test
lea
inc
jp
sub
jo
loope
jo
dec
addr16
dec
push
push
popa
fistpll
mov
or
dec
adc
arpl
sbb
pop
shll
xchg
aad
dec
ljmp
ds
mov
mov
dec
and
jp
jo
cmp
sahf
add
ret
xor
in
imull
lcall
xorl
dec
add
inc
je
pop
add
inc
notb
arpl
test
or
mov
out
dec
pop
dec
add
notb
repz
jmp
dec
mov
add
push
mov
xor
xchg
push
adc
xor
and
or
cmp
inc
jl
mov
adc
lods
scas
jle
test
imul
and
int
cwtl
push
in
leave
cmpsb
jle
add
push
data16
ret
fs
pushf
fdivrp
dec
gs
les
testb
stos
xor
xor
pop
movnti
mov
xor
cli
sbb
test
cmc
or
jne
mov
push
jbe
ljmp
insb
incb
cmp
scas
pushf
insb
call
cmp
loopne
inc
xor
sbb
scas
call
ds
dec
add
mov
imul
test
sub
ds
aam
lods
test
rclb
jp
inc
push
test
jl
bound
sahf
xchg
fsubrl
lods
cmp
push
lods
mov
or
orb
add
clc
mov
cmp
outsl
std
mov
mov
and
daa
mov
nop
in
xchg
mov
push
popa
aaa
aas
out
and
ret
add
sbb
add
adc
scas
xorb
xchg
test
outsl
lret
orl
mov
inc
jne
loope
mov
out
sbb
push
sbb
adc
int3
pop
adc
adc
adc
jo
stos
mov
in
scas
call
jbe
adc
lcall
push
and
or
incl
imul
out
sbb
jae
scas
xchg
jnp
xor
dec
pushf
mov
cltd
push
mov
imul
jb
rclb
mov
icebp
sub
daa
push
mov
jnp
add
enter
shll
loopnew
xor
adcl
data16
push
dec
sbb
push
notb
mov
mov
lea
jo
jne
adc
push
push
xlat
ret
sbb
ljmp
inc
les
pop
or
xor
dec
add
mov
mov
xor
cwtl
cmp
mov
fiadds
pushf
sbb
pop
ficomps
lret
jne
jnp
imul
sub
jecxz
and
inc
faddl
fisubrl
or
icebp
push
sub
sbb
mov
sub
xchg
xchg
in
clc
cmp
rcll
pop
iret
scas
out
int
bound
aad
mov
cmpsl
adc
xor
stos
aaa
stos
sbb
mov
inc
daa
addb
ficoml
cmpsl
inc
pop
xchg
fisubrs
mov
jae
int
push
cmp
dec
movsl
hlt
pushf
jnp
sahf
push
test
pop
xlat
loop
mov
aad
fwait
test
mov
lock
mov
nop
imul
aad
pop
sbb
jbe
adc
mov
popa
cltd
cmpsl
ret
fistl
jmp
adc
test
cmp
sub
jl
scas
add
push
scas
inc
xor
jo
int
push
in
daa
mov
inc
and
dec
rcl
pop
popa
mov
jbe
stos
push
repnz
jle
pop
out
xor
inc
sub
das
xor
xor
sbb
xor
adc
je
cli
jnp
mov
push
sub
sbb
cmc
in
pop
xor
mov
jmp
push
jge
mov
scas
sub
push
aad
ret
xor
in
sub
ljmp
xchg
lock
push
call
mov
xor
fdivs
dec
dec
pop
imul
xor
mov
add
mov
xchg
add
es
rcr
pop
inc
inc
mov
mov
fiadds
lds
mov
xchg
jns
mov
popf
popa
je
sub
cmp
sbb
popa
or
mov
popf
jae
fs
sti
add
mov
rcl
pop
jno
pop
xchg
lds
and
mov
iret
js
in
and
mov
sti
rep
and
mov
int
or
mov
pcmpgtd
xchg
int
js
lods
add
xchg
mov
and
push
adc
aas
je
sbb
xchg
pop
xor
xor
nop
sbb
xchg
test
cltd
pop
stc
push
jne
mov
add
repz
pushf
push
push
sbb
lock
sbb
xor
cld
sbb
dec
jmp
cs
aas
xchg
or
fwait
xchg
int3
cmpsb
xchg
inc
mov
out
fcompl
cmp
orb
lods
inc
lret
sti
test
add
pop
cs
popa
add
outsl
out
movsl
gs
or
jnp
or
sbb
and
and
icebp
push
imul
mov
sbb
push
mov
cltd
adc
dec
lock
lea
inc
aaa
cmp
push
xchg
dec
aaa
adc
jo
adc
inc
adc
repz
xchg
pop
aaa
adc
movsb
inc
mov
or
fadds
ss
lret
pop
cli
pop
lcall
lret
push
mov
or
fldenv
or
clc
loop
push
or
jno,pn
ret
cmp
add
add
xor
fadd
and
jb
arpl
outsb
popa
adc
sub
ret
pop
and
dec
add
addr16
cli
in
xchg
adc
add
or
cmc
mov
ss
cmpsl
xor
test
or
adcb
stos
cwtl
lahf
shr
mov
shl
and
mov
mov
adc
inc
lret
retw
mov
leave
add
and
aad
movsl
adc
popf
inc
xchg
into
push
fimuls
jg
xor
sti
lcall
sarl
daa
clc
mov
outsb
xchg
mov
jne
xlat
xor
cli
iret
mull
and
movsl
jge
js
add
jnp
addr16
addl
xor
aam
andb
sbb
fidivrs
rcl
adc
repnz
subb
jp
jle
mov
push
mov
sti
push
fisttpll
fcomip
add
mov
test
jmp
sbb
mov
stc
cli
jle
das
inc
ss
xchg
sub
test
cmovle
sub
dec
loopne
popf
dec
sub
dec
in
es
pop
movsb
test
xlat
jecxz
mov
mov
testb
ret
jl
sbb
cld
cmp
fdivl
jno
ja
imul
xchg
ret
data16
push
sbb
mov
jnp
pop
pusha
mov
pop
lds
clc
jge
or
lcall
fisubl
test
jns
outsb
shl
push
jb
aaa
repz
mov
mov
fidivs
push
enter
mov
nop
sbb
mov
les
les
push
das
pop
mov
rol
mov
sbb
test
adc
inc
and
jg
popf
ret
data16
sbb
sub
mov
dec
xlat
dec
jns
pop
cmp
call
cmp
aam
in
xchg
lods
add
mov
pop
outsl
or
push
mov
rolb
fsubr
std
mov
pusha
sub
lods
inc
mul
int3
rclb
inc
stos
fildl
push
es
jle
arpl
mov
push
sub
pusha
out
xchg
or
sub
mov
jb
jne
jg
lret
rcll
popa
jl
in
mov
push
dec
test
lods
pusha
imul
repnz
push
ret
outsl
add
into
xchg
aaa
push
cmp
push
pop
ds
push
iret
jle
adc
icebp
pop
pop
dec
ret
loopne
inc
lods
or
fidivrl
and
sub
pop
scas
xlat
mov
pop
lods
scas
sbb
shl
aam
fwait
aad
push
insb
adc
and
mov
ds
ret
jmp
inc
arpl
xorb
sbb
xchg
jp
fsub
lock
pop
stos
out
stos
pop
inc
scas
lea
rolb
mov
jae
mov
out
add
ljmp
xchg
jo
test
int3
mov
mov
js
pop
xchg
aad
mov
cmp
jo
push
andb
push
sbb
mov
and
shlb
fildll
out
push
cltd
add
sbbl
retw
movsl
or
xchg
cmpl
ror
negb
nop
cmp
cltd
orl
mov
lret
jg
pop
icebp
push
mov
out
mov
into
ja
adc
clc
fwait
outsl
push
and
aad
or
lcall
pop
call
sub
xor
and
fidivrl
dec
lods
fxch
push
and
in
outsl
adc
out
ja
shll
mov
cmc
push
xor
xor
mov
adc
sbb
pop
xor
add
into
lds
adc
fildl
adcl
daa
loopne
mov
xor
sahf
push
jmp
pop
push
mov
jns
push
stos
mov
out
lock
mov
push
je
inc
jb
add
enter
fs
jp
fnstenv
out
int
dec
ds
dec
rcl
outsl
mov
mov
xchg
mov
lret
pop
jp
bound
pop
xor
jl
testb
sbb
jmp
gs
jns
cld
fwait
ds
or
mov
iret
or
mov
cwtl
mov
iret
rorb
test
fsubrl
arpl
pop
fcompl
jl
mov
out
pop
lea
aaa
cmpsl
test
mov
in
aas
out
mov
popa
inc
stc
push
lea
imul
jle
pop
push
jno
lds
outsl
mov
mov
aam
ret
imul
dec
sbb
sub
int3
xchg
rorl
je
pushl
lods
aam
je
js
pushf
in
cmp
sti
sbb
enter
mov
lret
data16
adc
int
sub
jle
push
sbb
push
push
and
sub
jmp
lahf
sar
stos
jb
adc
dec
mov
xor
sub
mov
jne
popa
imull
cmpsb
in
push
out
xchg
lods
xchg
mov
out
and
lods
pop
mov
mov
mov
lret
out
adc
dec
pop
inc
adc
mov
les
and
pop
jge
scas
test
cmp
aaa
cmp
popf
mov
sbb
pmaddwd
sub
push
jmp
mov
aad
fs
out
shlb
lods
shrb
jle
jae
jo
cmp
mov
push
dec
js
pop
mov
sbb
add
pop
sub
mov
pop
das
dec
mov
cmpl
pop
movsb
sub
jb
add
push
jnp
pop
mov
or
jbe
repnz
movd
xor
adc
std
or
inc
jae
notl
js
and
hlt
xor
aad
pushf
fsts
adc
add
inc
sbb
xchg
fnclex
outsl
cmc
leave
push
adc
stos
das
lds
jecxz
push
pop
rcrb
mov
cmpsb
pop
out
and
and
push
push
adc
push
adc
adc
insl
loopne
into
iret
repz
invd
pop
sub
inc
jl
scas
movsl
sub
xor
das
pop
mov
push
jno
xor
cld
lods
aas
fnstsw
cmpl
jnp
xchg
pop
xchg
lret
adc
mov
push
lds
outsb
loop
fbstp
loopne
ret
mov
loopne
bound
pop
ret
sysexit
mov
jg
in
and
out
cmp
and
std
xchg
in
daa
cmp
test
xchg
sti
and
and
pop
in
test
int
imul
xchg
vcvtpd2ps
pop
sub
sahf
inc
cmp
mov
add
inc
imul
mov
lods
ret
mov
incl
jecxz
out
cs
shrb
out
push
cmp
jne
lcall
xor
jb
idivl
sub
mov
inc
xchg
gs
es
adc
jbe
sbb
mov
out
pop
cmp
adc
scas
and
loop
and
push
mov
jo
push
jp
gs
roll
sub
jb
push
jnp
dec
adc
fwait
sub
xor
push
mov
push
jle
mov
pop
lret
mov
pop
sbb
mov
dec
dec
xor
push
scas
mov
ret
mov
sub
std
call
in
or
sbb
in
ds
andb
lcall
mov
sarl
or
fmuls
test
and
push
cltd
inc
pop
rorb
fldl
jle
or
dec
subb
stc
ret
inc
cli
clc
popf
push
mov
fbstp
movsl
out
mov
subl
les
push
jb
cmp
lret
enter
out
out
stc
pop
mov
shrb
movsb
dec
shll
int3
fs
stos
ret
imul
movsb
xchg
inc
dec
xchg
aad
dec
ss
xchg
fldenv
or
dec
add
in
adc
cli
sbb
cmc
shl
and
out
add
loope
add
mov
and
pop
xchg
mov
mov
jno
rcrb
ds
fldt
dec
popf
cmpsb
addb
ja
xchg
in
enter
stc
mov
add
pop
inc
pop
push
xchg
pop
add
aad
das
cmp
shll
outsb
and
mov
mov
into
daa
dec
scas
cmp
jmp
cmp
imul
adc
aaa
int
data16
push
jmp
ljmp
aaa
addr16
add
adc
push
inc
cli
in
mov
mov
pop
ss
mov
fsts
int3
rcrb
pop
inc
push
test
mov
xchg
mov
addr16
cmovg
lea
lock
das
cli
pop
adc
dec
push
inc
sub
push
cmp
inc
xor
xor
push
outsl
lahf
ret
and
mov
mov
fldenv
pop
fmuls
add
mov
dec
sbb
sub
movsl
fucomip
movsb
loopne
cld
std
jmp
int
mov
cmc
push
test
xlat
adc
lock
pop
mov
mov
sahf
add
dec
clc
push
or
mov
add
nop
je
bound
sub
and
mov
je
popa
mov
enter
mov
push
ss
bound
cmp
xchg
mov
jmp
in
cmp
mov
bound
clc
pusha
fld
jne
call
mov
and
jbe
movsl
inc
test
cld
mov
mov
mov
pop
inc
inc
sbb
mov
or
cmpsb
mov
mov
repz
test
ret
lahf
pop
mov
lret
xor
cmp
dec
cmp
or
in
sub
lret
sub
jo
xor
xchg
xor
out
and
dec
nop
mov
adc
aaa
cmpsl
add
popf
sti
xor
jle
xor
call
mov
inc
pop
xchg
add
xor
inc
dec
dec
aam
mov
cmc
mov
aas
inc
push
mov
int3
fidivrs
out
sbb
daa
inc
and
outsb
fsubl
or
sub
lods
cmp
ljmp
sub
and
jg
and
aad
mov
and
or
jecxz
faddp
jecxz
mov
repz
stos
ja
out
into
sub
fnsave
shrb
add
xor
test
rcl
xchg
or
mov
mov
movsl
xor
adc
xchg
sbb
jno
mov
stos
stos
or
fcomp
xchg
movsb
sbb
sub
jg
cmp
loopne
leave
mov
stc
push
cli
adc
inc
pop
ficoml
gs
or
push
mov
scas
xchg
popf
gs
push
faddl
dec
lahf
mov
mov
cmp
jno
sbb
lods
push
xor
add
push
aam
xor
xchg
lahf
fstl
push
jns
rorb
pop
fmull
xor
fsubs
fstl
xor
iret
movsl
test
mov
push
loope
ss
pop
push
push
cltd
inc
dec
das
pusha
mov
imul
push
pop
sbb
sub
push
inc
int
cmpsl
and
push
cmp
arpl
inc
jbe
xorb
stos
mov
or
or
daa
mov
mov
gs
xchg
flds
and
xor
jae
les
cmp
out
sub
dec
cmp
add
loope
icebp
shl
sbbb
jae
push
in
or
andl
int3
fs
test
dec
and
movsl
jecxz
jb
mov
nop
cmpsl
xchg
lock
fsts
add
das
hlt
xor
sub
or
sbb
or
inc
xor
xchg
xchg
cwtl
or
pop
subb
repz
mov
clc
pop
pop
sub
adc
fwait
popf
xor
scas
xor
push
aas
or
cmpl
pushf
into
fisubs
lods
mov
ljmp
or
xor
arpl
cli
inc
std
push
cmp
and
mov
dec
out
cmpsb
mov
and
out
pop
mov
add
dec
or
std
lea
xor
xor
push
sub
hlt
push
test
arpl
or
stos
pusha
lds
mov
nop
cmp
jle
fbld
test
into
cld
pop
pop
rcr
dec
call
int
mov
dec
fwait
jno
mov
sahf
inc
dec
or
inc
fidivrl
sub
pop
pop
xor
outsl
pop
adc
dec
or
data16
dec
xlat
bound
xor
mov
dec
jb
popf
imul
sbb
add
adc
stc
leave
sub
scas
fistpll
and
int
inc
fnstsw
cs
mov
push
jmp
adc
ja
fdivrl
test
jg
test
push
test
adc
inc
lods
xor
loopne
dec
mov
sbb
jmp
lock
xchg
les
jge
add
in
cltd
pop
jae
sbb
push
pop
pop
bound
cld
and
push
push
rorb
mov
jb
dec
pop
orb
int3
dec
add
add
jle
je
mov
stos
or
push
or
jno
in
aas
xchg
push
in
nop
or
js
dec
add
test
sbb
sbbl
std
clc
lcall
mov
sbb
sub
shrl
fcoms
sbb
cs
and
lcall
sub
in
sbbb
sub
movsl
dec
orb
dec
push
dec
mov
adc
sbb
aas
fcmovu
push
mov
pop
cmp
mov
cmp
xadd
mov
add
idivb
scas
pop
je
xor
mov
jno
loop
incb
adc
sub
into
xchg
out
mov
sbb
ffree
mov
pop
scas
xchg
aad
gs
and
testl
mov
ret
xchg
jle
lods
sti
sub
pop
dec
mov
sub
in
inc
divb
mov
fs
cmpsl
jmp
clc
lahf
cld
fs
sbb
jae
cmpsl
dec
mov
fdivrl
data16
pop
jg
stc
cmp
pop
pop
test
mov
cwtl
mov
scas
fs
repz
mov
pop
jle
mov
ljmp
rorb
xchg
les
ficoms
out
rep
mov
sbb
dec
mov
cmpsl
pop
adc
lods
ret
dec
cli
dec
iret
push
aad
adc
mov
sub
testl
mov
loop
lahf
dec
adc
inc
cmp
xlat
fsts
movsb
imul
test
aam
dec
movb
jge
lret
into
sbb
scas
push
xchg
adc
imul
dec
mov
adc
push
pop
add
enter
ret
jl
xchg
lds
js
loope
sbb
or
scas
dec
ret
sub
add
jg
cli
xchg
arpl
loopne
jl
push
adc
adc
idiv
mul
aam
mul
add
or
adc
pop
je,pn
aas
jle
jmp
xor
frstor
or
sbb
outsb
sbb
jnp
out
pop
rcrb
aas
push
test
jb
hlt
testb
pop
nop
roll
lock
pop
fwait
rorl
mov
aam
jae
mov
mov
fs
imul
adc
add
adc
adc
mov
push
pop
and
dec
movsb
int3
hlt
sbb
xchg
or
adc
pop
and
arpl
shl
or
sar
and
leave
adc
cmp
pop
xor
test
aam
mov
fistl
cwtl
fsubrl
mov
push
or
sti
ret
jl
movl
test
xor
loop
push
dec
mov
in
and
push
add
pop
jp
adc
mov
shrb
imul
test
push
in
in
fsubs
scas
pop
lret
mov
or
mov
dec
jae
xchg
or
pop
movsb
into
in
imul
xor
ljmp
add
in
nop
aad
cwtl
test
inc
xor
add
fdivl
aam
out
arpl
dec
xchg
jecxz
stos
mov
mov
addr16
jb
push
dec
xchg
push
add
sub
sbbl
push
das
mov
outsl
xor
enter
jae
sub
pusha
daa
inc
pop
jbe,pn
push
add
push
dec
out
in
out
jo
sbb
adc
mov
cli
cmp
xor
ja
adc
dec
dec
sbb
lods
fnstcw
add
decb
cltd
pushf
adc
in
inc
and
ljmp
mov
shr
push
sub
inc
add
addr16
mov
sub
repnz
cmovbe
lock
iret
sbb
sahf
dec
push
aas
in
cmp
test
shll
xor
and
je
lds
xchg
mov
or
push
xchg
cmp
sub
inc
cld
jecxz
fdivrp
jne
jae
add
inc
cwtl
or
push
adc
cmpsb
out
pop
mov
xchg
and
and
dec
cmpsl
pop
sarl
jecxz
push
sbb
mov
out
lret
fsubl
movsb
out
push
adc
das
popf
xlat
add
lods
repnz
pop
pop
mov
les
aas
stos
cmp
add
or
mov
or
dec
popa
daa
in
adc
xor
sahf
fdivrs
cmpl
outsl
mov
nop
call
sbb
fstp
cltd
and
lcall
outsl
push
inc
into
pop
jmp
mov
push
es
repz
in
and
es
fcomps
in
jle
fcoms
cwtl
movsb
ljmp
and
bound
cmp
clc
xchg
hlt
sbb
jb
icebp
jmp
shll
inc
fiaddl
aam
std
pop
scas
out
imul
fsubrs
jbe
add
lods
out
mov
loope
pop
test
in
adc
and
jno
in
dec
pop
jp
xchg
into
data16
inc
xchg
outsb
inc
inc
add
xchg
pop
jnp
rorb
adc
ret
loope
daa
and
cmc
push
or
sbb
inc
xchg
je
and
mov
sar
xor
jecxz
jmp
xchg
jl
mov
inc
clc
sub
xlat
sub
pop
pop
xchg
test
pop
test
scas
pop
and
dec
js
in
or
inc
or
jbe
faddl
jl
push
mov
sbb
jle
push
xchg
icebp
pop
xor
rclb
sub
ds
out
mov
pop
daa
push
cmp
rol
pop
lods
add
addb
leave
fwait
jmp
add
jmp
decb
test
je
sub
inc
mov
mov
and
out
rclb
sete
xlat
mov
lods
jge
lret
sbb
xchg
sahf
cmp
cmp
add
jecxz
dec
lret
je
dec
data16
pusha
ret
lcall
xor
dec
jg
inc
repnz
lret
pop
std
dec
int3
jl
mov
mov
xor
add
roll
cltd
jae
xor
lds
fistps
pop
jge
mov
in
scas
je
sub
sbb
add
and
dec
pop
xor
in
mov
inc
stos
adc
ret
mov
add
shlb
adc
int3
imul
sub
imul
std
cmp
inc
cmp
fidivs
sub
cmpsb
push
sbb
jbe
sub
mov
mov
enter
xor
fimull
sub
sahf
sub
mov
and
inc
and
jecxz
or
divl
mov
mov
pushf
xor
cli
add
lahf
inc
adc
loopne
mov
loop
cmp
cmp
push
add
adc
mov
mov
loop
cs
popa
jo
out
push
xorl
aas
push
mov
int
mov
sbb
add
pop
lds
sti
loope
adc
jbe
pop
lods
pop
jno
cmp
lock
and
pop
sub
adc
int3
imul
fdivrl
cli
jl
pusha
sbb
cmc
sbb
aaa
sbb
lock
push
cmp
pop
cltd
pop
push
andl
lret
mov
movsb
dec
sub
subl
stos
pop
test
sub
mov
int
sti
mov
ret
push
data16
pop
xchg
stc
mov
in
push
cmp
lret
std
adc
mov
push
add
sbb
and
sub
pop
stos
push
fidivl
inc
fldl
js
std
jle
ret
pop
xorb
cmp
add
inc
sub
xchg
add
mov
inc
in
out
cmp
lahf
adc
mov
jecxz
dec
orb
ret
sub
mov
inc
jp
shrb
scas
popf
cmp
xor
jmp
or
xor
rcrl
mov
jo
push
add
loopne
out
pop
xor
cli
and
sidtl
push
fisubrs
sbb
inc
std
out
das
mov
aam
sti
lods
mov
pusha
xchg
and
icebp
xchg
dec
push
and
movsb
inc
cli
xor
and
call
scas
test
call
xchg
jno
sub
mov
pop
and
cmp
mov
hlt
sub
xor
push
mov
mov
mov
movsl
pop
mov
adc
repnz
xchg
shll
fsub
pusha
dec
test
lods
adc
mov
mov
stc
rcl
cmp
std
arpl
xor
lock
sbb
push
mov
test
mov
notl
push
out
jle
leave
imul
dec
mov
cmpsb
pop
lds
adc
clc
inc
mov
es
add
scas
fnstcw
sbb
out
or
fs
add
jecxz
aas
in
sbb
in
push
lock
test
int
xor
adc
ja
add
aaa
nop
lds
push
jbe
iret
outsb
cmpsl
jle
mov
mov
jno
scas
xchg
pop
lock
fldenv
pop
jle
or
repz
jl
cmp
jmp
fidivs
xchg
outsl
mov
fs
or
lea
inc
std
popa
int3
pusha
ret
mov
cmp
popa
pop
roll
loopne
xchg
inc
add
push
lea
out
add
xchg
mov
or
push
lods
jnp
jecxz
mov
int3
mov
or
sub
inc
fisubl
dec
xlat
pop
pop
imul
inc
jnp
jns
movsl
dec
scas
or
in
pop
push
cwtl
mov
add
xchg
aas
adc
jo
int
add
mov
xor
push
arpl
ljmp
sub
xchg
jle
test
rcrl
xor
jge
xchg
dec
jo
jg
or
push
jmp
das
pop
out
pop
movsl
dec
pop
sti
in
pop
sbb
inc
sbb
xchg
test
leave
cmp
imul
inc
or
aas
adc
mov
fistl
jge
cmpsl
sar
js
movsl
add
xchg
ret
iret
rcl
adc
jle
inc
ljmp
cmc
mov
cmpsl
mov
test
xor
out
pop
lods
fmull
xor
mov
sbb
dec
into
call
xor
adc
cmpsl
mov
mov
clc
pop
arpl
and
or
mov
mov
out
jp
or
ret
mov
std
stos
fwait
mov
ror
cld
ss
pop
jl
mov
and
and
or
mov
sbbb
cmp
xor
ret
clc
sbb
dec
fstps
into
shll
pop
xchg
stos
mov
insl
inc
inc
js
lret
xchg
insb
or
inc
xchg
mov
fisubl
fs
pop
mov
sarb
sbb
and
insl
lods
add
aas
insl
aas
ds
jecxz
mov
xchg
imul
movsb
push
enter
faddl
mov
insb
inc
rorl
loopne
mov
push
lods
jb
mov
xor
sarb
in
fcomip
ljmp
gs
cld
adc
lds
cmc
jecxz
and
or
push
add
add
pop
mov
mov
pop
sub
jl
adc
cli
aaa
or
xor
hlt
popf
popa
dec
push
or
loope
mov
cmp
rorb
push
inc
mul
xor
in
jbe
pop
cld
sbb
sti
mov
sub
repz
or
scas
stos
mov
sub
out
push
es
aam
sub
ret
cmc
loope
xlat
mov
and
dec
fcomp
cld
mov
cwtl
ret
mov
sbb
cltd
das
aaa
push
repnz
adc
and
lea
mov
adc
js
fs
clc
adc
mov
mov
in
xlat
sub
sbbl
push
test
filds
add
outsl
pop
dec
inc
or
fwait
xlat
out
push
test
stos
cli
pop
dec
and
or
jb
mov
sarl
and
sub
jb
jge
push
movsb
popf
cmpsl
cmc
push
push
sbb
ficompl
xor
lret
mov
leave
lcall
lret
sahf
inc
and
mov
mov
ret
ret
nop
cmp
and
cmp
outsl
push
xchg
scas
mov
pop
shlb
xchg
cwtl
test
push
or
pop
mov
mov
mov
inc
test
xchg
addr16
iret
and
cmp
in
or
lret
in
inc
push
xlat
fxch
jle
int3
xchg
adc
pop
ljmp
ljmp
cmp
lcall
in
push
js
sbb
or
push
mov
fwait
fwait
sub
cmpsl
clc
adc
cmpsl
adc
popf
shlb
pusha
imul
ss
imul
hlt
test
dec
clc
mov
cmp
push
mov
push
call
xor
in
cmp
dec
pop
mov
add
cmc
fistpl
jnp
sahf
cmp
aaa
cli
mov
xchg
mov
movsb
xor
xor
in
in
inc
inc
pop
mov
dec
inc
je
pop
movsb
mov
xchg
fdivr
movsb
add
push
repnz
jg
or
out
and
clc
outsl
das
pop
scas
icebp
subb
adc
cs
fs
push
xor
jnp
jg
fs
out
adcl
scas
push
push
popf
outsb
push
push
mov
jp
lods
sub
jle
pop
push
sbb
mov
cmp
mov
rcr
inc
mov
cmc
pop
adc
insb
insb
mov
pusha
sti
pushf
xor
in
xor
push
dec
sahf
call
repz
out
jle
cmc
sbb
pusha
cmp
cmp
outsl
cmp
pop
mov
mov
in
and
or
mov
aad
inc
ret
sbb
movsl
jl
lret
pop
push
jl
sub
lret
dec
dec
ret
test
popf
push
mov
in
add
pushf
jp
adc
jle
dec
mov
cmpsb
lret
jnp
cmc
stos
mov
imul
imul
fnstsw
jnp
xchg
mov
and
js
hlt
cmc
andl
push
imul
or
mov
bound
sahf
xchg
and
fsubrl
mov
mov
mov
lret
in
xor
pop
rolb
into
test
push
in
js
je
ret
dec
leave
pop
sub
dec
adc
loopne
std
pop
in
xchg
cs
js
dec
fsts
imul
ss
mov
and
adc
shr
std
daa
pop
pop
inc
sub
ja
cmp
or
mov
repz
inc
je
jecxz
mov
mov
imul
les
sub
add
dec
or
cmpsb
jle
and
dec
mov
xor
mov
int
xorl
jns
sbb
repnz
gs
inc
in
repnz
dec
lods
dec
push
push
push
push
inc
aaa
les
repnz
xor
loop
mov
dec
push
cmp
sub
mov
jb
movsl
add
sbb
sbb
mov
stos
mov
insl
adcb
aas
dec
push
xchg
adc
mov
xor
in
sbbb
push
mov
fstpl
lcall
jmp
nop
loopne
pop
pop
cmpsb
cmp
aas
dec
jo
pop
xchg
pop
xchg
pop
fcompl
dec
sti
ffree
pop
pop
inc
dec
xchg
lock
mov
hlt
je
rcrl
arpl
in
ffree
in
sbb
lods
js
imul
cmpb
push
pop
xchg
xchg
ss
aas
add
cmp
jno
scas
mov
icebp
push
sbb
push
pop
cmp
notl
pop
mov
pop
push
incb
inc
aam
mov
xchg
push
mov
and
cwtl
xorl
inc
scas
xor
sahf
scas
mov
rol
arpl
dec
outsl
stos
xor
inc
imul
pop
jb
xor
inc
xchg
insb
mov
shlb
std
outsb
xor
push
jne
jp
pmulhuw
arpl
int3
int3
daa
mov
xor
inc
in
clc
mov
mov
in
rclb
sbb
insl
sti
shrl
or
mov
pop
jae
adc
lret
mov
imul
pop
mov
js
xchg
punpcklbw
push
cli
in
scas
stc
add
in
int3
subl
outsl
inc
mov
xchg
out
iret
pop
repz
push
dec
inc
sub
pop
in
jp
add
scas
or
out
arpl
push
jg
mov
lock
popf
sti
dec
testb
mov
mov
das
or
movsb
rcll
add
stc
cmp
jb
aam
cmp
xchg
repnz
js
xchg
lods
mov
ss
dec
int
sbb
test
daa
inc
out
call
inc
xor
pop
push
lcall
jecxz
clc
pop
dec
lcall
imul
pop
add
insl
stc
leave
scas
push
push
pop
push
add
imulb
mov
cltd
sbb
repz
push
fs
ja
jmp
inc
iret
dec
lds
xchg
adc
shl
add
int
imul
inc
cld
inc
xor
dec
orl
lcall
sbb
ja
xchg
inc
les
flds
popf
ror
cmp
js
jbe
pop
aas
xchg
out
push
sti
mov
fdivl
mov
jl
popa
mov
in
mov
mov
fwait
jle
mov
sbb
gs
pushf
sarl
popf
adc
mov
jno
lock
sub
lahf
popa
mov
mov
pop
cmp
aas
je
jmp
mov
bound
jno
xchg
and
ret
ljmp
testb
cmc
pop
mov
ljmp
addr16
cltd
in
scas
xor
xor
push
adc
stc
sub
ja
cltd
mov
inc
sbb
xchg
js
lock
pop
cmp
or
aad
inc
cmp
mov
adc
adc
dec
lds
sbb
add
lret
out
insl
ss
pop
mov
popf
fsubs
and
add
jle
mov
lcall
sbb
std
push
inc
add
fmull
cwtl
cltd
mov
mov
push
xchg
call
out
cltd
scas
push
fidivrs
push
cmp
inc
xchg
or
jbe
push
or
repz
jns
lret
cltd
xchg
adcl
dec
push
cmc
sbb
std
addr16
scas
fistpl
xor
jg
sub
std
arpl
gs
jmp
js
mov
push
int
movsb
adcb
cmp
je
cmp
scas
loopne
repnz
dec
imul
data16
idivb
data16
adc
clc
and
dec
movsb
xchg
popa
popf
loope
and
mov
ss
jg
movsl
test
loope
pop
int
adc
adc
iret
and
lahf
leave
leave
fcmove
test
mov
pusha
mov
roll
xor
xchg
movsb
pmullw
pusha
dec
mov
dec
test
push
inc
and
mov
je
fcoms
xor
xchg
jmp
mov
cmp
jne
mov
into
xchg
stos
das
scas
mov
push
fists
clc
mov
dec
pop
sbb
cmp
cmc
dec
rclb
in
lds
ret
jle
pop
adcb
stos
mov
xor
mov
lret
adc
sbb
daa
pop
jp
xchg
ret
nop
jecxz
push
mov
outsl
cwtl
gs
repz
push
or
push
push
mulb
sbb
jp
mov
sarl
enter
das
popa
jecxz
rcll
hlt
out
xchg
mov
pop
mov
ja
mov
fcoms
jp
leave
inc
dec
popf
ret
das
inc
push
xor
cwtl
scas
fisubrs
push
movsl
xlat
xchg
push
in
xchg
popf
mov
lock
mov
repnz
leave
sbb
cmpsl
mov
sub
and
iret
js
mov
dec
sbb
inc
mov
adc
mov
push
push
test
out
fmuls
jne
add
std
ret
hlt
or
push
adc
cs
fucomi
dec
add
ret
adc
lods
push
gs
cmc
jp
pop
call
pop
lcall
dec
jecxz
mov
pop
mov
xor
lea
insb
leave
push
mov
test
xor
data16
inc
dec
or
pop
add
rcr
add
or
jno
mov
xor
adc
and
mov
loop
jno
mov
addr16
cmp
jle
or
or
pop
mov
imul
xchg
push
repz
mov
mov
push
outsl
mov
pop
sub
adc
mov
in
nop
mov
mov
jmp
lea
add
jno
add
into
jbe
jb
mov
mov
xchg
pushl
push
jecxz
inc
add
xchg
les
pusha
mov
leave
repnz
fidivl
aad
jae
rorl
icebp
sti
dec
and
fisubl
push
icebp
adc
dec
ret
std
or
and
iret
rorb
sbb
jns
jle
outsl
stos
xchg
sub
jg
push
and
dec
pop
fadds
mov
push
mov
pop
pop
ss
sti
push
pop
jnp
jbe
xor
std
hlt
jmp
rclb
xor
in
ds
push
push
data16
pop
dec
es
in
inc
dec
pop
pop
aaa
add
arpl
xchg
es
push
push
jne
jno
sahf
jo
out
stos
gs
insb
jns
inc
dec
push
pop
hlt
or
in
adc
bound
stos
int3
orl
into
fldcw
adc
imul
xlat
pop
jecxz
repz
pop
sbb
dec
add
loop
mov
pushf
lods
dec
les
inc
add
xor
icebp
ljmp
inc
inc
pop
dec
cwtl
mov
sub
jmp
add
repz
cmp
int
mov
sti
js
test
mov
lcall
sti
out
jg
jmp
iret
inc
push
mov
inc
add
mov
dec
shll
addb
jo
scas
cltd
fdiv
xorl
ret
mov
cmc
mov
xchg
inc
je
lods
scas
pop
je
dec
fs
ja
cld
xchg
sub
sbb
lret
aas
lds
inc
in
idivb
repz
push
push
jns
or
mov
cmp
jb
mov
adc
sar
popa
dec
push
add
je
ds
push
loope
push
or
or
dec
aam
add
add
fidivs
fldenv
xchg
mov
lods
setge
pop
lods
test
mov
popa
pop
inc
neg
add
ja
daa
outsb
nop
xchg
mov
jb
stc
in
ret
icebp
cmpb
or
loopne
test
lea
pop
call
jmp
or
add
pop
cld
movl
les
pshufw
mov
dec
sub
push
jns
xor
jns
ss
or
rcrb
das
pop
push
mov
xor
divb
mov
push
hlt
xchg
dec
or
ja
and
jnp
repz
call
imul
pop
popa
adc
cmp
clc
inc
out
sub
mov
insl
push
push
mov
jecxz
imul
jno
ret
shlb
movsb
sbb
js
adc
das
and
psraw
test
fwait
push
call
sarb
fidivrs
cmp
rcr
xchg
and
mov
sub
fiaddl
xor
in
mov
jae
inc
test
rol
jb
pop
and
insb
fimuls
pusha
push
int3
seta
jno
jb
add
xor
out
and
mov
add
push
push
test
or
cmp
mov
cmp
roll
xor
xor
lret
cmpsb
je
add
or
rcl
cli
repnz
add
and
inc
lret
pop
lahf
lock
inc
in
fwait
ja
repnz
push
mov
or
js
in
enter
cs
pop
out
stos
mov
iret
dec
add
lods
jae
pop
jo
out
xor
push
sahf
sbb
pop
pushf
sbbl
and
jl
inc
testw
mov
sub
xlat
mov
mov
test
fs
sbb
pop
and
jle
xchg
loopne
sbb
scas
ret
add
fsubrl
arpl
cmp
nop
xchg
lods
icebp
lcall
or
adc
dec
inc
push
insl
lret
jns
jmp
and
dec
fldz
jl
jecxz
inc
lods
enter
in
jmp
icebp
sarw
hlt
out
pusha
inc
mov
shlb
xorb
in
cmpl
and
or
mov
add
xor
outsb
lock
or
push
lock
xor
pop
push
cmp
stos
pop
fstps
test
jle
cwtl
sub
jbe
dec
fcmovb
inc
ret
and
out
xchg
push
xlat
rolb
mov
jo
sbb
mov
or
subb
mov
sahf
jg
add
ror
fistpl
or
lea
pushf
jb
inc
arpl
inc
mov
scas
lods
leave
mov
outsb
cmp
pop
jno
or
xchg
sarb
jno
fists
jno
out
scas
xchg
clc
mov
std
and
stos
xchg
js
xchg
lret
les
mov
ss
movsb
mov
or
iret
popa
inc
andb
mov
popf
and
cmp
inc
into
push
rorb
popf
fbld
xor
inc
scas
push
xor
push
or
dec
cmp
loop
lcall
jle
adc
lea
mov
xchg
mov
daa
cmpsb
daa
push
sarb
fadds
ret
addl
push
test
inc
cs
lret
dec
test
jo
imul
xchg
scas
xor
mov
lcall
repz
dec
idivl
sub
xor
jl
cmp
sbb
ss
push
stos
and
ret
mov
push
mov
out
mov
orl
out
add
lret
jne
call
pop
repz
xor
mov
call
sbb
les
xchg
shrb
jne
xchg
jae
sub
xor
outsb
repz
out
pop
mov
insb
xchg
jg
mov
and
hlt
int
xor
jmp
cwtl
jno
and
inc
pop
in
je
imul
arpl
or
ret
mov
imul
outsl
cmp
cmp
push
add
jae
test
sbb
jecxz
pop
test
mov
cwtl
jl
or
jno
enter
inc
das
lea
out
in
ds
aam
scas
sahf
xchg
sub
nop
iret
dec
ja
aaa
int
ficomps
imul
mov
jl
xchg
outsl
stos
lcall
jae
mov
bound
subb
lret
out
es
mov
xchg
add
mov
jecxz
xchg
pop
and
jnp
incl
and
xlat
and
mov
mov
add
loope
pop
fdiv
jnp
lods
jg
imul
add
bound
pop
push
fldenv
cmp
xchg
clc
cltd
xor
sti
xchg
mov
xchg
dec
imul
lcall
lcall
jb
sti
int3
in
mov
into
mov
xor
dec
jge
push
xor
push
in
dec
shld
xor
cltd
xchg
lret
pop
imul
and
inc
jne
jbe
mov
pop
sbb
inc
cltd
jp
pusha
push
aas
add
push
sub
push
fs
sbb
sbb
pushf
xor
cli
lcall
popa
inc
inc
sbb
xchg
mov
mov
fildll
or
scas
adc
inc
cltd
sarl
and
dec
push
jns
adc
cmp
ret
pop
testl
jno
stc
leave
loop
mov
fldcw
ljmp
int
sub
orb
fildll
pop
jae
jmp
dec
stc
fwait
mov
pop
lea
decb
test
ret
xlat
dec
fisttpll
mov
sub
data16
mov
push
xor
cmp
mov
aad
push
cmpsl
dec
incl
sti
adc
sbb
lret
jge
lock
pop
sahf
xor
cltd
lcall
mov
outsl
je
sbb
loop
adc
sub
push
testb
xchg
mov
nop
mov
add
sbb
inc
gs
adc
add
push
popf
stos
int3
xor
fldl
scas
inc
xchg
adc
mov
mov
out
or
daa
in
lods
loop
sti
cli
in
mov
inc
sub
jmp
mov
pop
sbb
or
adc
add
lret
sub
dec
pop
inc
cmc
outsl
sub
sbb
pushf
add
and
jbe
std
xchg
or
xor
jo
pop
adc
ds
mov
adc
xor
dec
filds
jle
test
imul
nop
rclb
fcmovnb
loopne
flds
jle
scas
or
cmpsb
jne
jp
test
ds
into
xchg
icebp
dec
les
and
jo
sbb
inc
and
jl
ret
pop
mov
lret
pop
push
push
jae
dec
les
xchg
daa
repnz
enter
jns
xchg
mov
dec
cltd
imul
outsl
mov
xchg
lods
stos
jp
daa
pop
pop
out
and
outsl
mov
dec
jbe
js
cmp
cmp
mov
sbb
jne
mov
add
fld
mov
xchg
xor
ret
into
lahf
cmp
mov
lret
fcmovbe
jne
arpl
out
inc
ds
mov
jg
loopne
jl
xor
dec
pop
sbb
mov
in
lcall
test
pop
and
hlt
aaa
mov
cmp
imul
inc
dec
dec
cltd
inc
cltd
pusha
test
jle
mov
ss
mov
mov
lret
jbe
inc
pushf
mov
jmp
cmp
int3
jg
lea
cmc
in
cli
clc
lock
lea
aad
and
xlat
mov
test
aas
push
pop
lds
add
inc
sti
arpl
test
sub
loop,pt
in
jmp
inc
jl,pt
lods
lds
and
add
mov
hlt
orl
jecxz
int
cmp
es
xchg
push
inc
cmp
sub
or
dec
or
mov
fidivrl
sbb
and
aaa
pop
lods
adcb
pusha
push
push
out
push
push
je
jbe
mov
ret
rcr
scas
and
and
pop
lret
add
popa
stos
dec
jo
xlat
pop
pop
cmp
push
pop
add
cmpsl
dec
adc
jae
push
push
in
push
inc
std
outsl
and
cmp
pop
das
call
rcll
scas
push
loop
xor
pushf
mov
mov
cmc
xchg
mov
jne
adc
push
adc
les
pop
push
push
in
cltd
test
jo
mov
mov
and
xchg
int
jno
or
fs
stos
scas
mov
stc
out
cmpsb
cs
add
in
mov
ljmp
and
mov
xchg
lods
lret
inc
clc
test
dec
inc
shrb
mov
lods
dec
loop
lds
push
fcompl
leave
jl
mov
fs
jg
cmpsb
leave
xor
movsb
xor
push
call
adc
sub
push
aas
cmp
call
jp
loopne
lods
mov
lods
je
aad
out
mov
lea
mov
fnstsw
daa
xor
pop
aas
int3
mov
push
popa
das
mov
imul
mov
cmp
pop
out
idiv
adc
fidivl
pushf
and
mov
int3
rorb
jg
add
xchg
adc
and
orl
shll
pop
mov
lods
in
mov
pop
std
jp
push
sub
insl
hlt
xlat
in
dec
arpl
hlt
sub
push
test
xor
mov
inc
jmp
mov
sbb
pushl
push
lock
xchg
rcll
negl
loope
sub
push
leave
mov
sti
in
cs
cmp
mul
xorl
push
push
fdiv
in
add
jl
push
mov
sbb
mov
or
push
stos
jb
mov
ljmp
pusha
outsl
aaa
addb
clc
js
lods
mov
loopne
sub
xor
sub
mov
dec
dec
or
xchg
mov
or
repz
sub
mov
ss
mov
push
mov
aam
adc
aad
sahf
and
in
sbb
aam
xor
shl
dec
pop
xchg
jg
jg
fwait
mov
out
imul
or
or
repz
insb
out
dec
push
xor
out
mov
in
mov
xcrypt-ofb
cmpsl
sub
fisttpll
xor
or
jne
popf
cli
in
loopne
jmp
jg
mov
cmp
pop
jp
sbb
insb
mov
sarb
mov
and
cmp
cli
mov
je
in
shrb
fisubs
xorl
xchg
call
push
mov
push
mov
mov
pushf
gs
mov
fldcw
inc
sbb
ret
mov
sbb
mov
xlat
push
mov
lret
int3
cld
lret
cmp
out
stc
icebp
xchg
aad
mov
fisubrs
lret
cmpsl
mov
and
jmp
test
popa
insb
jb
test
push
fstl
adc
and
mov
cld
outsb
test
cwtl
jbe
shrl
daa
cmp
sbb
push
add
inc
or
cmp
pushl
lods
inc
cmp
lock
xchg
pushw
or
nop
pop
or
dec
daa
cmpsb
jnp
sbb
jae
aam
lods
inc
adc
adc
pop
fdivr
paddd
mov
cmp
xor
imul
mov
data16
outsb
in
outsl
jl
push
scas
inc
pop
inc
push
xlat
pop
jns
stc
lret
mov
notb
scas
cmp
leave
iret
xchg
mov
xchg
add
add
mov
xor
rol
mov
out
inc
or
inc
sbb
inc
mov
adc
iret
nop
aam
jmp
inc
jns
jecxz
addr16
xchg
in
or
leave
jne
iret
adc
add
in
leave
iret
sub
dec
fnstsw
cmp
xchg
insb
cmp
dec
mov
repnz
int
ja
cld
xchg
fiaddl
int
pop
pop
into
fisubrs
dec
jb
mov
and
int3
cmp
mov
cmp
pshufw
add
nop
insl
cmp
adc
inc
adc
out
xchg
lret
jns
jg
add
push
imul
pushl
test
jl
mov
sbb
ffreep
movsl
popa
jmp
test
lea
mov
xor
in
push
bswap
sbb
push
mov
push
cmp
and
sbb
mov
insl
mov
cmp
or
xchg
xor
cmpsl
and
push
xchg
scas
rol
xchg
outsl
xor
fs
cwtl
mov
mov
shl
or
push
mov
mov
mov
ljmp
xor
jnp
in
lock
jns
jg
or
push
pop
stos
mov
xor
sbb
add
fisubrs
inc
sub
aaa
repnz
xor
dec
popf
loop
sbb
pop
fs
mov
or
xchg
and
and
mov
repz
outsl
sarb
jnp
push
pop
adc
mov
mov
cmp
jbe
inc
xchg
inc
leave
gs
lods
daa
mov
cwtl
sarl
add
and
or
cmp
sub
adc
aaa
aas
pushf
fsubs
and
mulb
ja
out
out
sub
push
gs
popa
cmp
push
jne
clc
jle
mov
pop
push
sub
lock
imul
adc
add
jns
inc
fucomip
mov
push
mov
cltd
mulb
inc
lea
int
inc
fadds
mov
inc
push
xchg
pop
mov
xor
lods
js
out
or
push
repz
fnstcw
sarb
mov
cmpsb
jbe
cmp
shll
arpl
movsl
cmp
jecxz
scas
andb
mov
pop
outsb
lds
inc
jmp
dec
jle
sarl
xor
std
mov
pop
cmp
pop
daa
negb
pop
mov
push
mulb
ja
inc
mov
push
test
insl
sbb
mov
mov
or
add
pop
mov
mov
cmp
inc
mov
not
scas
leave
mov
adc
lods
jmp
and
pop
xchg
sub
popf
sbb
in
in
xchg
and
cmpsl
add
jl
js
xor
pop
outsb
test
fnstenv
daa
mov
pop
and
das
call
lret
imul
orb
xorl
jmp
stc
rcll
sub
pop
in
dec
mov
lcall
and
add
pop
adc
inc
mov
cmc
pop
cmp
std
push
add
imul
or
xchg
les
mov
ss
int
rcrb
cmp
pop
cmp
loopne
push
pop
mov
filds
mov
stc
cmpsb
mov
push
ss
jb
loope
pop
inc
sub
out
fisttps
fistps
fimuls
aaa
cmc
jmp
adc
or
notb
lods
popf
jo
fsubr
aad
cmc
push
popf
dec
outsb
xchg
mov
fwait
data16
and
adc
jo
fadd
sub
lds
push
iret
scas
xlat
ljmp
hlt
in
cs
xchg
lcall
xorb
xor
jo
jg
jl
push
add
xor
cmp
test
push
sub
mov
lahf
in
mov
lahf
pop
out
mov
hlt
sub
pushf
cld
in
nop
push
dec
xor
pop
stos
mov
jo
dec
and
pop
xchg
mov
cmc
test
int
mov
add
sbb
sub
inc
stos
pusha
test
lahf
dec
pop
pop
int3
pop
push
add
xchg
shlb
bound
lock
mov
cmc
xchg
cmp
arpl
sub
outsl
mov
in
jle
hlt
push
iret
pusha
cmpsb
outsb
mov
outsb
xor
repnz
pop
loope
cli
pop
mov
scas
iret
and
push
mov
ds
int
mov
rolb
lret
int
repz
add
loope
fcmovnu
hlt
mov
add
add
shrb
and
bound
mov
outsb
inc
mov
adc
xchg
adc
and
push
gs
xor
aam
push
test
lea
xchg
pop
cwtl
jo
dec
push
cmp
cwtl
mov
or
sbb
shr
jl
in
push
add
out
push
rorb
popa
les
mov
lcall
sti
adcl
ja
jnp
in
add
ds
pop
sub
ficoms
ret
sbb
in
mov
hlt
fsubl
jge
pop
addr16
pop
xor
aam
sub
dec
lcall
dec
cmp
inc
test
jae
pop
jp
push
pop
mov
outsb
pop
adc
jmp
inc
jle
sub
inc
divl
jmp
adc
outsb
cmpsl
shlb
fisttpll
sbbb
fisubrl
jno,pn
mov
popa
je
dec
pushf
or
data16
pop
push
pop
dec
call
xchg
pop
cmp
mov
mov
lods
cld
fidivl
outsl
adc
add
push
and
jae
lds
test
das
nop
or
mov
fdivr
es
rclb
mov
sbb
and
xchg
add
jmp
xchg
jbe
mov
daa
cld
mov
mov
mov
sub
aas
data16
mov
fwait
mov
call
ret
fiadds
adc
mov
scas
jecxz
xlat
xchg
push
pop
pop
fwait
sub
repz
mov
jnp
int3
stc
roll
inc
dec
push
in
pop
inc
add
into
test
sar
push
xor
loopne
jle
add
lret
pop
fdivrp
sub
jecxz
jmp
or
int
sub
add
jmp
inc
bound
cs
dec
arpl
dec
loopne
iret
mov
jbe
add
popa
sub
pushf
rorb
inc
lock
jne
mov
js
fistl
push
das
jp
or
lds
cmp
cmc
pop
xor
push
orb
mov
jae
jae
push
sub
icebp
aam
sbb
xchg
inc
push
aaa
fildl
inc
or
test
jbe
out
and
loopne
jge
mov
add
mov
push
or
dec
loopne
mov
call
nop
add
scas
insb
jp
xchg
dec
or
jmp
stos
jle
sti
es
std
int3
add
bound
out
inc
pop
cmpsb
dec
mov
aas
cmp
or
sub
orl
jo
lock
and
push
jmp
cmp
pop
ret
adcl
in
cmp
push
mov
stos
fldcw
push
jp
lds
insb
call
cmp
js
sbb
out
js
aaa
jp
mov
xchg
adc
cs
or
and
push
mov
hlt
clc
xchg
sbb
repnz
lcall
push
xchg
mov
jge
stc
add
mov
nop
mov
mov
sbb
loope
in
pop
push
pop
fisubs
mov
inc
inc
cmc
mov
cmpsb
out
mov
and
nop
sub
or
cld
add
into
sbb
aaa
mov
lds
aas
stos
shrb
js
mov
aad
dec
mov
push
lea
push
leave
sti
add
and
mov
in
sub
inc
dec
sarl
push
fmulp
adc
and
movsl
lods
sbb
pop
push
bound
cs
outsb
aad
outsl
mov
shrb
cltd
inc
push
call
sbb
mov
push
mov
repz
sub
jb
repz
add
add
jo
sbb
and
mov
gs
mov
xor
inc
jo
cmovle
int
lret
inc
adc
jbe
stos
push
fwait
lds
pop
pop
data16
cwtl
xchg
inc
je
and
mov
lds
cmovp
jmp
adc
add
stc
push
pop
or
movq
inc
iret
adc
dec
jl
dec
mov
sti
sti
sbb
lods
mov
loopne
sar
hlt
mov
adc
sub
jg
fs
dec
js
cmp
jmp
repz
out
popa
and
repnz
aas
jl
adc
mov
sahf
js
and
lcall
sarb
sub
cmp
mov
test
arpl
mov
mov
lret
xor
lea
test
dec
jns
xchg
stc
js
adc
sub
cmpsl
xchg
add
or
xor
test
out
imul
mov
das
xor
sub
pusha
jns
ss
xor
or
lret
pop
sbb
adc
adc
and
or
jl
aad
dec
pop
loope
data16
cmp
sub
inc
lcall
mov
or
outsb
pop
lahf
stc
jb
lock
inc
cmp
push
movsl
mov
cs
or
mov
cmpl
shll
test
mov
inc
mov
add
repz
adc
popf
adc
mov
out
jne
ror
pop
mov
in
fsts
pop
pop
das
push
or
decl
sbb
xchg
mov
test
pop
mov
push
std
adc
pop
movsb
cltd
xchg
mov
add
loope
dec
out
out
adc
lea
jnp
mov
stos
ret
dec
inc
popf
pop
jns
or
xor
aad
fucomp
enter
test
dec
xchg
or
out
test
inc
lock
fnstenv
adcb
dec
dec
call
lret
mov
sbb
hlt
lcall
push
xor
mov
jbe
mov
and
mov
sbb
adc
not
mov
xchg
inc
fs
mov
or
test
mov
stos
dec
fisttpl
into
shlb
add
outsb
lock
loope
pop
xchg
cmp
pop
push
sbb
and
sub
xor
jno
and
jle
andb
sub
iret
roll
and
mov
cld
mov
jb
xor
push
mov
ret
sub
push
cld
push
lock
imul
mulb
rorl
nop
cmpsl
sub
jp
sub
add
cmp
add
mov
add
scas
repnz
dec
sahf
fcmovnb
call
mov
hlt
xchg
adc
add
sbb
push
jnp
in
fcom
clc
sub
mov
idivb
shll
jb
lock
or
pop
xor
cmp
cmp
sub
mov
lret
sub
or
gs
lahf
sbbl
das
cmpsb
pop
mov
xor
mov
xor
push
mov
xor
int3
repz
sbb
jo
dec
enter
push
and
sub
jne
jne
mov
xor
and
cld
or
sub
das
and
loopne
jle
addl
mov
jo
add
and
pop
xchg
pop
loopne
mov
std
mov
cmp
aad
jae
dec
push
jb
push
lret
cs
xchg
jb
adc
flds
cmpsl
push
clc
popa
push
dec
jbe
xchg
icebp
enter
test
ret
lock
movsl
rclb
js
nop
js
jecxz
mov
dec
int
out
and
outsl
incl
adc
jmp
mov
sbb
jbe
scas
out
xchg
mov
adc
mov
loopne
cmpsl
jns
or
je
push
and
adc
nop
andb
test
dec
push
mov
adc
inc
adc
jnp
ret
insb
add
sahf
mov
mov
fistpl
daa
adc
xchg
arpl
iret
jecxz
xor
or
inc
les
push
cmp
je
sbb
mov
adc
pop
loop
les
ss
push
fidivs
dec
or
adc
xor
int3
stc
testl
dec
jb
cltd
subl
sub
mov
loop
sbb
lcall
cli
xor
call
sub
out
or
mov
call
aad
mov
andl
pop
mov
jbe
xchg
movsb
xchg
dec
divb
and
faddl
test
leave
cmpsb
shrl
popa
in
imul
xchg
out
popa
aas
idivb
pinsrw
cltd
scas
pop
sub
lahf
adc
ljmp
inc
sub
push
test
xchg
pusha
data16
inc
sub
mov
mov
sub
nop
pop
sbb
fmuls
dec
xor
cmc
jbe
push
aas
or
cmpsl
inc
add
pushf
adc
idivl
imul
mov
pushl
cmp
push
cmpsb
mov
pop
cmp
loope
dec
loope
push
gs
mov
cld
inc
enter
jg
ret
aam
xchg
and
mov
and
push
dec
xchg
xchg
cmp
xor
adc
outsl
adc
call
mov
test
cld
or
mov
fstl
adc
push
jg
mov
nop
rorb
lea
push
push
jmp
jbe
fwait
cmp
hlt
fistpll
cltd
cmp
bound
pusha
bound
or
mov
add
fs
gs
push
fs
or
in
dec
daa
and
ja
cmpb
movsb
adc
pop
stos
xchg
dec
sbb
subl
decl
push
xchg
xchg
and
shrl
and
cmp
sti
pop
mov
mov
movsl
inc
sub
out
les
jno
in
popf
fldcw
pop
cmp
xor
jmp
push
rcr
push
fnsave
popf
dec
sbb
add
aad
xchg
push
cmp
xchg
pop
adc
out
hlt
lret
jns
popf
push
aad
sub
xchg
mov
andb
test
fisubrl
sbb
outsl
mov
push
dec
xor
out
mov
movsb
cs
pop
daa
ss
js
enter
repnz
cs
jmp
adc
test
jo
mov
mov
xchg
add
add
je
test
jl
in
out
into
mov
popf
xlat
in
popa
fidivrs
sbb
cmpsl
rolb
add
xchg
mov
add
in
movsb
sub
jnp
outsl
test
and
xlat
inc
or
fstps
popa
lahf
dec
addb
movsb
xchg
inc
jge
and
nop
rorb
push
or
jo
sbb
jg
scas
pop
cmp
xchg
sti
add
adc
ljmp
add
pop
add
mov
and
lcall
add
ret
xchg
sbb
roll
movsb
imul
leave
jg
mov
add
sti
addr16
cmpsb
lret
pop
test
adc
mov
fdivs
int
mov
xchg
dec
lds
mov
xor
xor
push
add
cld
jo
mov
or
and
out
loopne
adc
andb
xchg
and
lea
das
inc
pop
stc
push
cmp
pop
inc
jp
dec
test
test
or
jecxz
push
subl
insl
sti
dec
xchg
inc
push
rcrb
cmp
mov
sahf
jne
or
xchg
or
add
adc
test
cltd
add
shlb
fistpl
push
sbb
jmp
aad
push
xchg
pop
rorl
sbb
mov
and
icebp
sub
popa
pop
xchg
inc
xor
sub
mov
fs
push
cmpsb
inc
adc
push
and
repz
int
inc
xor
rcr
xor
lds
jmp
rcrb
sahf
aad
or
cmp
and
push
mov
mov
cmp
int3
daa
or
nop
jo
jmp
lods
push
aad
sbb
jg
in
xchg
xor
xor
mov
xchg
outsl
icebp
mov
mov
dec
in
divb
call
nop
outsb
dec
shlb
jecxz
jecxz
jae
notb
xor
sti
stc
out
cmc
gs
xor
scas
lods
adc
outsb
adc
out
xor
jecxz
daa
add
xchg
lea
mov
hlt
cmpsl
stc
xor
in
dec
push
add
sub
mov
imul
cmp
inc
mov
ds
mov
sti
and
movl
push
push
lds
push
xchg
cld
add
dec
fidivrl
jae
popa
pop
ss
orb
inc
pop
or
pop
jbe
jnp
dec
addr16
cmp
mov
sti
adc
pop
shll
in
fiadds
jle
pop
jb
movsb
sbb
add
inc
call
gs
xchg
jnp
push
pop
popa
dec
xchg
aaa
mov
push
push
stc
mov
js
lods
mov
adc
adc
sbb
fwait
jbe
pop
add
outsb
roll
and
jmp
push
push
dec
mov
xor
mov
cmp
lods
pop
and
sbb
inc
lcall
movsb
adc
testb
mov
cld
ret
out
pusha
or
pop
xor
jp
ds
incl
jbe
jmp
mov
test
out
and
jg
mov
dec
in
arpl
inc
xor
and
cmp
cmp
mov
test
push
or
inc
push
je
icebp
cli
rcr
xor
xor
roll
shrw
jae
inc
repnz
aam
adc
movsb
push
fists
push
fwait
jmp
or
add
push
push
jb
jecxz
inc
mov
adc
ds
cmp
jmp
xor
xchg
and
lock
and
xchg
lea
aad
int3
out
fldl
dec
push
lret
imul
fmuls
incb
repnz
add
dec
imul
cwtl
xchg
lds
mov
mov
lretw
popa
inc
shr
sbb
mov
jecxz
jno
sbb
pop
loop
into
xor
mov
or
arpl
aad
dec
loop
add
xlat
or
je
mov
cwtl
mov
or
ljmp
mov
mov
push
xor
addl
push
popf
andb
imul
pop
cwtl
rclb
pop
lahf
aad
cmpsl
mov
aam
dec
add
andl
aaa
jns
loope
cld
sbb
inc
iret
jecxz
mov
pop
sbb
ret
mov
icebp
lret
xchg
pushf
cmpsb
jg
sub
and
sahf
sub
sbb
clc
das
pop
stc
sarb
andb
addl
inc
loope
mov
je
and
or
add
idivl
push
les
lahf
push
cld
mov
stc
mov
cli
xor
dec
mov
popa
ja
movsl
lret
fildl
or
cmc
out
add
fidivs
les
mov
jg
push
dec
sbb
imul
or
mov
xor
loop
push
xchg
mov
insb
insb
dec
or
nop
jmp
in
fnstenv
lcall
inc
sbb
mov
loopne
mov
cmpsl
mov
dec
xchg
rclb
cli
mov
dec
xor
xchg
loopne
jecxz
xlat
adc
js
push
sbb
test
imul
mov
shll
sbb
out
pop
sbb
fsubl
fwait
ss
in
cmp
xlat
pop
push
cs
mov
scas
rorb
or
mov
mov
pop
push
xchg
std
aam
enter
or
adc
xor
hlt
stos
in
sub
enter
sub
cmc
cmp
mov
sahf
lds
dec
cmpsl
lods
js
adc
scas
sub
popa
rolb
cmpsb
inc
jmp
and
jns
jne
lea
push
dec
xchg
dec
inc
pop
outsb
sub
jp
sbb
out
xor
jp
dec
shlb
scas
outsl
fmull
imul
enter
fldenv
mov
enter
bound
mov
and
aad
sahf
mov
repnz
sub
outsl
sbb
scas
fstl
lcall
cmpsb
adc
ja
adc
and
xor
in
xacquire
jbe
std
push
data16
ljmp
je
pop
push
movsl
mov
cmp
inc
pop
testl
dec
pop
out
negb
ljmp
cmp
sub
out
sbb
cmp
in
push
inc
fistpl
cmp
hlt
inc
mov
sub
mov
adc
imul
dec
faddp
dec
in
xlat
cmpsl
scas
fists
or
inc
xchg
loopne
xchg
cmp
or
sbb
jge
loopne
pop
adc
xlat
adcl
shrl
jp
pop
xchg
inc
cmp
rolb
scas
cmpsb
or
adc
adcb
xchg
rorl
int3
imul
xchg
xchg
imul
out
xchg
popa
sub
call
int
sbb
js
sbb
cld
inc
mov
decb
inc
enter
and
rorl
aam
fs
in
mov
jmp
cmp
xorl
jnp
push
call
call
mov
and
adc
rorl
gs
jns
lahf
push
ret
xor
mov
test
dec
lea
cmp
ret
repz
lock
icebp
notb
jge
jecxz
fsubrs
dec
xor
xor
scas
pop
into
dec
repnz
fbld
push
sarl
sub
add
adc
adc
lret
lret
lahf
cmpsl
ficompl
xchg
add
mov
jmp
sub
sub
xor
fisubl
jae
shrb
mov
inc
cs
call
cmpsl
push
lcall
xlat
repnz
cmc
dec
xor
shll
ret
pop
push
xchg
cmpsl
adc
and
xor
test
xorl
popa
and
lret
jb
jnp
and
jnp
lods
call
cmpsb
std
mov
test
inc
pushf
mov
std
mov
mov
sub
or
fwait
push
test
cmp
stos
cmpsb
dec
jmp
mov
cmp
dec
and
xor
inc
jns
mov
dec
mov
mov
push
sub
cmp
inc
xchg
pop
dec
and
aas
inc
dec
jg
daa
xchg
mov
int
jl
xor
sbb
daa
js
imul
mov
add
movsb
lock
push
mov
sbb
test
loope
mov
cmpsb
jecxz
sub
rol
push
repz
or
or
rcrl
lahf
sub
mov
int
lods
add
mov
cs
adc
mov
sbb
loope
inc
cmpsl
jnp
push
lods
xor
lret
divl
fldt
sub
lahf
add
push
fbstp
jg
stos
addr16
mov
and
and
out
mov
addr16
cltd
lods
mov
jnp
out
mov
sub
cmpsb
fnstsw
jg,pt
cmp
mov
out
xor
sub
and
mov
cmpsb
lods
jns
sbb
movsb
jp
xor
aad
leave
sub
ja
xchg
push
or
loope
ljmp
push
mov
adc
fiadds
stc
sbb
sub
mov
test
jb
psubd
outsl
test
adc
jne
stos
fdivrl
jl
mov
das
pop
test
clc
inc
add
mov
sbb
incl
jmp
mov
jmp
mov
xchg
aad
or
nop
inc
mov
gs
loop
pop
adc
mov
and
push
push
cmp
sub
jno
cld
inc
dec
lods
adc
rcll
cmpl
adc
mov
ss
jns
push
or
adcb
into
popf
cmpsb
loop
sub
lea
popa
dec
pop
mov
stc
sbb
mov
push
jg
jns
sub
push
add
push
iret
push
scas
jb
cmp
rorl
xchg
inc
lea
mov
loop
cli
aaa
mov
jp
js
pusha
or
add
imul
mulps
hlt
xor
and
sub
jl
cmpsl
into
int3
and
push
pop
lcall
or
imul
pusha
jmp
jb
xor
xor
imulb
mov
ret
xchg
and
mov
orl
mov
pop
outsb
mov
outsb
clc
js
aam
sub
xchg
negb
insl
mov
insl
push
les
mov
xor
lea
test
xchg
mov
mov
xchg
daa
je
pop
push
fimull
sti
add
test
pop
xorb
mov
lds
rcrl
push
add
pop
pop
scas
dec
mov
shrb
jmp
ret
and
aas
mov
ret
std
and
rcll
inc
or
add
in
mov
sarl
cmp
pop
sbb
xor
iret
mov
stc
sbb
or
sbb
mov
sarl
cmp
xchg
dec
xchg
sub
sti
push
mov
mov
mov
cld
mov
mov
lret
push
js
mov
leave
sti
mov
outsb
add
ljmp
test
jge
pop
lcall
sub
lock
inc
sub
push
cmp
pop
xorb
and
jns
mov
sahf
adc
roll
mov
test
cmpsl
mov
imul
movsb
mov
out
xchg
inc
incb
add
sbb
mov
outsl
stc
cltd
bound
movsb
stc
ds
pop
pop
sub
jmp
and
stc
insb
dec
pop
push
push
cwtl
out
pop
sbb
test
arpl
int
mov
insb
sahf
aas
inc
loopne
fdiv
push
add
push
mov
mov
lods
pusha
push
push
repnz
sti
mov
xchg
sub
fwait
adc
push
add
pslld
push
cmp
roll
or
insb
lahf
inc
dec
les
mov
inc
add
fstpt
test
aam
repz
into
popa
leave
pop
and
mov
adc
out
int
imul
or
insb
pop
imul
add
fistpll
lea
add
cmp
push
leave
mov
ffree
xor
xor
in
jl
jmp
or
pop
mov
aam
lahf
pushf
mov
mov
mov
pushf
out
jl
jecxz
int
jg
jp
mov
add
xchg
repnz
mulb
gs
mov
dec
lcall
jl,pt
data16
add
shlb
insb
mov
push
mov
test
and
addr16
ret
adcl
add
jmp
jl
jecxz
jle
lock
xchg
ret
movsb
rclb
das
xchg
shll
dec
lret
imul
ret
stos
inc
shll
adc
xor
cmpsb
dec
sub
mov
imul
xor
push
xchg
sar
int
loope
sub
hlt
lods
test
push
js
mov
mov
dec
arpl
movsl
cwtl
push
out
jecxz
clc
jecxz
addr16
push
gs
adc
fstl
pop
dec
aam
or
int3
cmc
jmp
pop
pop
out
stc
fldcw
fwait
ljmp
sub
push
cmpsb
stos
test
jecxz
jge
int
imul
push
out
cmp
inc
xor
push
pop
or
cmp
xor
cwtl
out
ret
cmp
xor
push
out
mov
sub
popa
push
aas
dec
adc
jnp
pop
mov
fs
ljmp
cmpsl
xor
jecxz
hlt
push
ss
jne
jo
fldl
xchg
sub
cltd
xchg
push
mov
pop
ud0
fs
push
pop
aaa
xchg
lea
clc
sub
pop
jle
scas
and
idiv
xor
mov
sbb
mov
push
push
gs
add
arpl
fisubrl
sub
out
movsl
aam
nop
mov
movb
int
adc
aad
mov
mov
add
stos
out
loop
and
push
int
pop
adcb
jne
dec
fsubrs
test
mov
mov
jne
push
gs
mov
adc
or
cmp
mov
add
fisubrs
insl
cmpsl
xor
jl
bound
fdivrl
pusha
sub
mov
mov
int3
cmp
mov
push
and
aad
jecxz
push
jmp
jmp
push
test
jnp
add
jb
or
push
cmp
aas
popa
and
push
pop
es
sbb
lds
leave
lods
pop
out
ret
insl
pop
inc
xor
jb
inc
push
pop
xchg
jmp
xchg
jmp
fwait
cmc
stos
add
popf
push
imul
push
cltd
mov
ror
sbb
push
cmp
xchg
call
jo
push
daa
lret
mov
dec
addr16
int
mov
xchg
push
push
add
or
jo
sub
dec
fldenv
mov
push
loope
sub
stos
bound
mov
sbb
mov
lcall
jl
or
xor
xor
jmp
add
mov
adc
sbb
and
xor
test
inc
js
mov
movsb
icebp
out
mov
int
mov
lock
or
mov
je
cmpl
sub
xchg
xlat
lock
cmpl
sbb
sbbl
adcl
out
enter
js
fidivrs
sub
dec
bound
pop
sbb
int3
mov
in
lock
fs
jno
lods
stos
add
lret
out
inc
stc
adc
sub
push
push
lcall
jmp
inc
jo
sub
ret
insl
inc
fsub
mov
arpl
dec
mov
insb
loop
dec
pusha
jg
das
int3
or
stos
loope
push
pop
notl
mov
mov
jae
mov
test
adc
cmpb
fwait
add
xor
mov
stos
cwtl
cmp
in
or
xchg
jmp
lcall
add
outsl
popf
repnz
dec
or
mov
fidivl
jb
jmp
mov
cmp
mov
mulb
ret
cs
pushf
jp
sub
std
dec
sahf
std
outsb
test
inc
js
xchg
sbb
in
call
aaa
outsl
mov
and
insb
xor
jge
and
push
add
dec
add
andb
jno
mov
xchg
leave
xchg
scas
fdivs
sub
xchg
in
cmp
xor
pop
je
push
lcall
pusha
imul
lret
test
jle
xor
cli
dec
out
push
add
lds
add
cmp
arpl
je
test
cmp
cmpsb
or
mov
in
decl
in
push
adc
iret
push
cmc
cs
push
jo
clc
fcoms
dec
adc
fxch
test
cmp
push
jo
xchg
pop
jl
leave
loop
ds
cmp
mov
stos
pop
cmp
mov
fsubs
sbb
inc
mov
add
xchg
lahf
in
fwait
mov
imul
mov
add
and
sub
cmpsb
xchg
into
jmp
int3
lods
daa
mov
mov
fcomps
daa
xchg
outsb
jle
jo
out
test
xor
aam
lret
imul
fs
lahf
jae
dec
subl
fildll
lret
mov
ret
inc
sahf
pop
in
dec
out
sub
add
pop
in
push
jbe
mov
jmp
repz
push
jnp
shlb
ljmp
mov
xchg
jnp
test
in
mov
fcomp
xlat
fisubrs
add
pushf
or
dec
lcall
mov
fs
push
cmp
lods
jb
stos
lock
xor
sbb
iret
push
pop
push
sub
int3
dec
andb
hlt
push
stos
xchg
andl
and
sbb
popf
jmp
lods
out
idivl
push
hlt
sub
aas
xchg
dec
popa
js
loop
push
jb
mov
insl
pop
jl
fisttpll
jmp
and
outsb
ret
repz
adcl
sbb
lods
mov
pop
enter
jge
mov
in
xchg
or
jb
push
movsb
cmp
mov
movsb
xchg
or
out
movsb
mov
pop
jmp
push
lret
sub
inc
inc
fldenv
mov
fwait
push
and
bound
mov
loopne
int3
mov
movsb
dec
fsts
mov
xchg
addb
ret
ja
dec
jmp
insb
js
sbb
cmp
xor
fisttpll
ret
pextrw
aas
stos
add
push
jecxz
and
ret
stos
xor
or
repz
mov
xchg
jmp
xchg
inc
scas
fsubr
push
clc
and
sub
jno
adc
call
jl
mov
push
sub
das
jno
cmp
lods
lock
shll
or
cmp
xor
jmp
orl
aam
cld
adc
add
push
stc
pop
test
dec
cltd
inc
in
cld
push
and
sbbb
dec
pop
test
cld
mov
mov
stos
in
adc
xorb
add
jnp
sbb
enter
inc
sub
adc
mov
mov
cmp
frstor
cwtl
daa
dec
mov
mov
iret
adc
mov
cmp
dec
and
add
in
cli
sbb
dec
call
xchg
dec
pop
faddl
dec
enter
mov
aam
sub
aas
mov
xor
out
mov
subb
fcompl
pop
loop
or
mov
aaa
cmp
push
xchg
jle
fucomip
sarl
lods
inc
cmp
cmp
mov
and
or
and
jl
sbb
dec
sub
push
mov
lgs
ljmp
dec
stos
jmp
and
mov
xchg
mov
cld
nop
lods
add
mov
xor
int3
sub
mov
and
fidivrs
xchg
mov
push
addl
mov
test
jle
adc
push
and
std
test
stc
mov
aam
pop
or
pop
mov
sub
pop
movsl
mov
fsubrp
xor
rolb
ss
xchg
sub
cwtd
cli
jnp
sbb
ret
int
jmp
scas
fists
lds
xlat
add
shrb
adc
nop
dec
rolb
xchg
lock
call
iret
push
and
jbe
jae
stos
adc
jo
mov
sahf
or
mov
and
mov
pop
sub
mov
pushf
inc
loop
mov
push
jae
in
fcmovb
test
mov
dec
std
sahf
sub
lcall
inc
add
jge
inc
aam
push
jmp
pop
push
adc
imul
add
mov
lds
sub
push
adc
jne
roll
xor
mov
pop
pop
dec
scas
fsub
mov
adc
xchg
cmp
or
frstpm(287
call
mull
dec
jno
mov
mov
sbb
inc
test
adc
cmc
push
int3
ret
gs
sub
xchg
sarb
add
popa
movsl
inc
ja
push
pop
cmp
push
ret
js
xor
sub
mov
fdivrl
aas
mov
movsl
add
add
xchg
lds
scas
pop
sbbl
or
pop
jle
or
mov
push
jne
jecxz
lcall
pop
loopne
xor
jmp
xchg
arpl
mov
adc
fdivs
xor
out
push
fsub
das
pop
dec
filds
es
sub
cmpsb
les
dec
push
mov
es
mov
js
mov
xchg
add
ret
jl
pushf
mov
jl
mov
scas
mov
clc
push
pop
or
scas
jl
sbb
hlt
int3
push
sbb
mov
lods
or
inc
adc
fwait
add
shll
jno
jge
out
imul
adc
jecxz
xor
push
mov
imul
sub
xchg
addr16
pop
nop
cmp
cs
call
mov
out
fldcw
orb
inc
gs
mov
adc
mov
xor
jge
push
call
adc
pop
sbb
movsb
pusha
repnz
stc
out
mov
sbb
push
outsb
push
std
dec
jl
mov
cmpsb
xor
pop
xchg
xchg
sub
jge
int3
jecxz
mov
pop
adc
mov
inc
sbb
pop
cld
dec
and
adc
shlb
stc
adc
jecxz
mov
dec
xchg
mov
inc
push
jge
repz
ficompl
cmp
mov
daa
lods
add
sbb
jnp
mov
mov
repnz
or
cmp
bound
jbe
or
mov
std
bswap
mov
or
push
negl
addr16
pop
pop
or
lods
sub
and
sti
repnz
or
ds
xchg
xor
pop
sbb
inc
mov
lods
mov
push
cmp
cs
mov
jecxz
jmp
sub
adc
dec
sbb
in
pusha
or
std
adc
test
fwait
or
add
lret
jae
mov
dec
dec
and
xchg
inc
pop
in
inc
jno
loopne
das
mov
das
pop
loopne
sar
loopne
jb
inc
mov
pop
cld
mov
pop
xchg
rcr
mov
mov
mov
imul
push
and
repnz
jb
imul
hlt
lods
cmp
sub
jno
enter
andl
add
nop
jge
sub
cmc
aas
mov
test
xchg
int3
adc
testb
nop
aaa
je,pn
push
inc
insl
icebp
ss
je
popf
fisttpl
push
sub
pop
fcomps
clc
lret
scas
mov
mov
inc
repnz
mov
sub
mov
cmp
ds
adc
push
daa
xor
jo
jo
scas
rcrl
or
scas
xor
cltd
popa
jg
pop
testb
sub
push
inc
call
lcall
enter
and
mov
inc
push
pop
or
xor
je
ficoms
or
movsl
dec
mov
std
lret
xor
loope
ret
ret
mov
daa
stc
mov
idivb
mov
mov
filds
sub
cltd
push
inc
stc
cltd
dec
movsl
cmp
pop
push
mov
fwait
mov
out
push
or
test
mov
daa
decb
popa
repnz
aam
arpl
cs
or
inc
clc
call
push
pop
cmp
cltd
leave
stos
push
push
mov
cmp
add
mov
inc
xchg
cmpsb
sub
mov
mov
pop
jl
mov
xchg
gs
mov
aam
mov
push
rorb
cmp
pop
cwtl
or
cltd
test
das
or
mov
fdivrl
hlt
xchg
in
lret
pop
orb
negl
mov
imul
enter
lock
mov
cs
insl
sbb
mov
adc
test
imul
mov
mov
dec
mov
aaa
lea
jb
arpl
das
sarb
adc
jno
inc
and
mov
cmpb
insb
cbtw
xor
dec
test
and
ret
repnz
hlt
mov
stos
jne
cmp
cli
push
scas
adc
sub
add
cmpl
inc
pop
jl
dec
jl
out
add
mov
pushf
mov
gs
jp
out
mov
mov
mov
push
into
push
pop
sbb
shl
dec
cmc
loopne
xchg
pop
sub
sbb
roll
jl
mov
mov
xchg
inc
ret
cmpsb
imul
gs
jge
push
ljmp
inc
push
aad
add
cmpl
or
pop
cmp
lea
nop
add
pop
lods
and
add
pushf
mov
mov
pop
or
mov
inc
test
sarl
jne
sub
notl
mov
mov
push
outsl
loope,pt
int3
jp
neg
mov
jle
jne
xchg
xchg
fldt
out
mov
fcom
jl
inc
cmp
in
pop
pop
adc
push
out
pop
stos
xor
mov
movsl
aaa
mov
pop
popa
lcall
roll
xchg
push
aad
dec
fstl
out
ret
xchg
and
lock
adc
jne
and
sub
jnp
xchg
mov
pop
jns
sub
sahf
outsl
hlt
in
outsb
in
lods
ss
sbb
or
in
lock
insb
es
pop
insb
aam
mov
pop
pop
mov
adc
pop
lock
adc
orl
mov
pop
pop
push
mov
jmp
push
mov
xor
cli
xlat
jns
cmp
insb
and
gs
xchg
pusha
sbb
es
shll
int
xchg
lock
push
subb
mov
xor
or
cmp
inc
xor
int
lea
jl
adc
sbb
cmp
lods
sbb
mov
shl
adc
and
dec
mov
lock
add
xchg
sub
xchg
imul
push
ja
cwtl
inc
jl
jno
mov
or
pop
adc
dec
jmp
lcall
inc
sbb
ror
xor
mov
stc
push
cmp
data16
push
push
sbb
push
pop
add
cmc
adc
xor
and
dec
inc
or
dec
ljmp
fmuls
ret
mov
xor
adc
dec
es
ja
imul
push
lods
add
rcrl
mov
pop
mov
aas
sub
xor
jl
nop
sbb
sbb
adc
xchg
pop
xlat
mov
hlt
mov
adc
fmuls
dec
mov
adc
adc
aam
mov
mov
icebp
mov
mov
cmp
cmpsb
dec
and
jbe
fdivl
xor
add
pop
enter
pop
push
loope
sbb
imul
leave
add
sub
cmovb
mov
xor
das
sarb
enter
mov
mov
mov
sub
rcll
push
or
mov
rcrl
andl
mov
imul
sti
sub
pop
lret
push
adc
fcmovbe
rorb
pop
popf
mov
jne
mov
fbld
sti
lahf
jae
pop
test
je
xchg
inc
enter
xchg
loop
jo
imul
push
sbbl
and
jle
push
test
xlat
and
mov
shll
lcall
inc
test
mov
jl
jns
stc
iret
sbb
dec
outsb
add
test
push
push
jmp
sti
aam
stc
sarl
cs
data16
mov
xor
lds
imul
mov
mov
xchg
ljmp
es
addr16
je
addr16
dec
and
hlt
push
and
xor
les
xor
shrb
sub
scas
xchg
popa
mov
mov
pop
mov
mov
xlat
cli
ret
dec
cmp
sti
mov
gs
int3
mov
lahf
imul
cmpsl
xor
enter
adc
mov
jge
cmpsl
ficompl
xchg
mov
mov
inc
orb
mov
pop
sbb
lcall
pop
fdivrl
jmp
pop
jp
mov
mov
pop
push
add
pop
and
shrb
adc
or
imul
lea
xchg
pop
in
loopne
negb
and
push
scas
iret
mov
arpl
test
loop
nop
add
xchg
leave
adc
jns
lcall
scas
jge
cmc
lea
jno
dec
cmp
sti
push
pop
movsb
pushf
popa
pop
hlt
stos
inc
mov
shrl
stos
enter
aam
ret
lods
push
dec
mov
dec
sarl
and
push
jmpw
mov
les
dec
aaa
mov
mov
add
mov
in
lods
and
repnz
xor
lock
sti
test
sbb
sub
ret
xchg
or
ljmp
adc
jne
adc
cmpsb
dec
mov
xchg
mov
je
popa
cltd
sbb
out
std
push
ret
aam
cmpb
sahf
mov
jo
xchg
jne
mov
pop
sar
inc
ds
mov
repz
dec
xchg
dec
jo
and
add
sub
jg
mov
and
arpl
mov
push
test
ljmp
pop
rcll
out
xchg
insl
jmp
sbb
push
inc
and
pushf
xor
cmp
pop
mov
xchg
sub
xor
out
ret
mov
push
jae
mov
or
repz
or
sub
add
pop
mov
adcb
mov
test
and
sbb
mov
int3
das
sub
lcall
or
ret
mov
xor
inc
mov
adc
aad
scas
aaa
stos
jp
out
pusha
inc
pusha
in
mov
insb
mov
inc
inc
fwait
int3
dec
je
mov
sub
jmp
stc
xchg
sub
insb
pop
jg
xor
adc
ja
arpl
stc
out
push
or
sub
adcb
sbbb
sahf
loope
cmp
enter
jp
and
shlb
sbb
jmp
and
jp
mov
addr16
ret
stos
cmp
inc
dec
lret
xor
pop
push
pop
adc
mov
mov
push
test
mov
dec
les
fldt
fsubr
loope
loopne
fildl
enter
addr16
mov
cmc
shlb
cmp
enter
icebp
ffreep
aaa
push
sub
lock
cmp
setns
outsl
adc
xchg
fs
push
xchg
stos
dec
outsb
out
hlt
popa
jae
popf
mov
testl
mulb
mov
movsl
out
sbb
jecxz
pop
enter
inc
jno
sub
out
scas
mov
out
outsb
mov
pop
xor
scas
cmp
push
out
push
pop
js
ja
mov
xchg
fiaddl
loop
sub
cs
arpl
adc
xor
sbb
jle
js
dec
jb
add
andl
test
test
lcall
xorb
xorl
fs
nop
pop
cs
mov
ljmp
inc
mov
sbb
gs
ret
pop
jae
cmc
pop
push
stos
mov
daa
mov
imul
cmp
pop
add
and
out
mov
add
pop
decl
pop
gs
add
adc
dec
jnp
fwait
sahf
roll
cmp
pop
int3
lret
xor
xchg
push
push
add
jl
pop
cwtl
insb
lret
mov
sbb
mov
shr
in
std
int
ljmp
fsubrl
outsb
or
aaa
add
sbb
popf
add
cmpsl
outsl
lret
aas
push
ss
mov
push
xchg
mov
cs
pusha
sub
lret
in
adc
sahf
lret
in
dec
adc
nop
jns
ljmp
pop
or
data16
lods
or
adc
jnp
or
cwtl
cmpsl
lret
roll
mov
inc
loopne
fimull
push
loop
push
xchg
mov
js
sti
lret
jg
sahf
mov
mov
leave
in
fsubrl
nop
sahf
xor
and
int
fisubs
fisttps
ljmp
rorl
sbbl
push
in
fsts
stc
data16
inc
mov
fcompl
pop
jge
inc
sbb
nop
cli
dec
cmp
popa
inc
insb
sub
aaa
inc
test
lock
or
push
stos
cli
jbe
xchg
adc
inc
jg
outsl
xchg
andb
shll
jle
pop
popf
push
add
sub
out
cmpsl
sub
push
xchg
or
adc
or
insl
and
ficoml
shrb
xorl
orl
sub
xor
mov
test
fwait
addb
cmp
cmp
adc
in
out
roll
sub
fisttps
sahf
jnp
enter
into
or
fsts
int
push
inc
sbb
push
repz
je
mov
pop
xchg
mov
add
xlat
push
pop
push
dec
mov
pop
adc
js
pusha
mov
cmpsl
sbb
les
nop
jge
icebp
aaa
setp
lods
mov
aam
imul
mov
filds
pop
lods
aas
popa
test
push
add
mov
shr
mov
mov
push
jmp
call
mov
cltd
add
cmp
mov
add
jge
sbb
cltd
rcrl
sahf
xchg
adc
sub
mov
lea
or
imul
mov
shrl
add
sbb
js
add
push
in
scas
cmp
inc
inc
cmc
fnstenv
hlt
mov
sub
movsl
dec
dec
jge
adc
into
cmp
test
mov
daa
mov
sahf
jmp
xor
xor
aas
mov
mov
inc
mov
inc
mov
adc
ret
out
aas
sub
sub
cmp
outsl
fimuls
jl
aam
cli
adc
mov
jo
adc
cltd
or
mov
or
mov
and
jno
xchg
adc
stc
jl
idiv
mov
xor
or
and
lcall
lea
mov
adc
leave
push
stos
fcoml
dec
cld
push
jge
jp
fstpt
daa
cmpsb
aas
add
rol
add
xor
ret
mov
xchg
aas
jle
imul
rclb
jmp
rorl
or
in
mov
or
xchg
pop
mov
fistl
sub
jmp
push
cmp
xchg
pop
sbb
in
jp
push
scas
push
cmc
inc
fsubrp
rolb
sbb
jo
push
dec
push
jg
pop
cmpsb
inc
sbbl
sub
cmp
and
aam
fs
and
jbe
mov
dec
daa
or
dec
flds
mov
in
mov
into
xchg
out
xor
xchg
fsincos
jns
mov
pop
sub
jecxz
inc
push
in
int3
inc
dec
lret
insl
stos
jle
loopne
jnp
out
xchg
mulb
das
shl
fisubrl
popf
mov
lahf
adc
fisubs
test
imul
in
shrb
push
aad
sti
es
push
cwtl
xor
in
push
enter
insb
scas
test
loope
or
cwtl
cmc
addr16
adcl
outsl
xor
dec
sub
psubw
hlt
mov
in
cmp
adc
pop
loope
jne
inc
stos
sub
push
movsl
pop
sbb
fmull
std
pop
push
mov
adc
sti
or
sbb
cli
sbb
jb
or
or
sbbb
and
lar
fxch
jo
sub
xchg
mov
jo
imulb
mov
dec
adc
or
mov
xor
and
stos
add
xchg
pop
ficompl
push
jae
mov
daa
cld
cmpsl
lahf
mov
mov
dec
shlb
mov
jle
maxps
mov
call
jns
inc
dec
xchg
insb
lcall
push
repz
mov
mov
loop
in
js
push
das
or
in
pop
lcall
pop
pop
dec
add
es
push
rolb
mov
jl
cld
loopne
rcll
into
push
movsb
xchg
lock
or
test
dec
lods
mov
jbe
loop
negl
lea
mov
add
rcll
movsl
hlt
jg
lds
aam
das
mov
int3
and
out
xor
or
or
xchg
pop
adc
aad
push
adc
hlt
xchg
mov
inc
test
mov
or
mov
orl
push
fidivs
loope
shll
pop
imul
cs
fildll
push
shll
int3
test
roll
jno
and
jns
cwtl
add
mov
out
jne
add
aad
or
int
inc
popf
arpl
in
imul
adc
sub
push
pushf
xchg
dec
lret
dec
jl
mov
sbb
mov
daa
dec
xor
ljmp
xchg
fisttps
enter
dec
xlat
cmc
xor
push
pop
jmp
cmp
fcoml
les
xorl
jmp
pop
push
adc
test
dec
add
fcmovbe
cli
lds
mov
scas
fs
push
inc
outsl
popa
fincstp
lcall
repnz
lock
mov
mov
sbb
loope
out
fnstcw
xchg
sbb
dec
jne
inc
das
stc
push
repz
pop
mov
lret
idivl
scas
add
test
call
sub
pop
adc
outsl
push
lds
popa
sbb
das
or
fdivp
add
mull
jb
pop
jmp
add
push
xlat
pop
jnp
repz
arpl
jle
jmp
inc
jns
mov
pop
repnz
imul
mov
or
orb
and
mov
incb
jnp
clc
fidivl
int
ja
and
pop
das
loope
sub
mov
push
pop
adc
lret
jecxz
ds
push
jns
mov
outsb
mov
sbb
xchg
pop
movsl
popa
mov
jnp
test
dec
cmp
adc
loop
ret
ja
inc
pop
add
cmp
inc
sbb
int
sbb
cwtl
dec
and
out
push
pop
pop
jge
mov
sub
sbb
or
or
ja
out
rol
outsb
popa
aaa
bound
loopne
movsl
stos
or
mov
fldl
pop
movsl
mov
in
or
jle
aas
call
sub
sub
xchg
lods
xor
les
adc
cmp
push
ss
push
in
jg
cld
pop
mov
pop
into
cld
jmp
inc
aas
inc
mov
xchg
cmpsb
xor
dec
push
ret
mov
jmp
and
lcall
add
add
pop
jno
popf
lahf
mov
in
sbb
or
pop
sub
sbb
push
std
jmp
mov
xchg
xchg
popa
ret
fwait
or
andl
mov
out
cld
add
int
mov
ret
cwtl
mov
sub
les
add
outsb
fisubrl
xchg
add
daa
fisubrl
fstp
sarl
ret
mov
aas
push
sub
inc
or
loope
mov
lcall
xor
call
imul
add
jle
outsl
jl
fdivrp
test
add
dec
push
pop
pop
not
adc
mov
mov
push
mov
mov
lock
ds
add
aad
fcompl
pop
stc
inc
lods
ljmp
add
test
inc
cmc
xor
jle
popa
mov
add
cld
jns
jae
rcrl
jl
arpl
mov
push
dec
fsts
mov
les
lods
push
lret
cmp
cmp
in
leavew
pushf
push
stc
es
sub
test
lea
movb
test
loopne
jle
push
lret
sbb
push
sub
xor
in
jmp
inc
sbb
pop
adc
pushf
mov
or
nop
cmpsl
stos
mov
movsb
rcl
sub
jg
test
and
aaa
xor
pop
push
xor
pusha
inc
jecxz
int3
cmp
xchg
or
xchg
push
inc
popf
dec
xchg
push
push
imul
das
inc
xor
adc
call
jmp
fstpl
nop
sub
movb
jge
mov
les
pop
push
aad
xchg
xchg
pop
and
leave
push
ret
jnp
test
sub
test
test
pop
psubb
inc
sbb
int3
movsb
insb
lret
idivl
xor
in
testl
insl
fwait
inc
test
je
imull
dec
sbb
shll
dec
cmpsb
notb
push
jg
popf
pop
ljmp
adc
jle
mov
mov
ja
iret
or
pop
lret
xchg
push
mov
sub
inc
mov
sub
jb
adc
inc
add
pop
pop
ljmp
jecxz
mov
mov
lret
adc
mov
ljmp
mov
cli
jae
fldenv
jl
and
dec
pop
out
shrl
and
rep
das
push
ret
cmp
push
add
fisubrl
cmp
addr16
insl
or
andl
cmp
dec
jne
pop
sbb
xchg
hlt
inc
insl
imul
lahf
bound
mov
repnz
jnp
mov
pop
mov
jl
rclb
lock
aas
in
scas
add
push
sbb
div
jo
pop
ljmp
push
pop
mov
stos
jne
inc
fildll
and
fcomps
lds
iret
push
movsb
data16
sbb
jae
pop
ret
shrb
imul
add
xlat
aad
add
out
aas
xor
jbe
pop
mov
mov
jg
mov
pop
or
popf
mov
dec
mov
ud2
dec
lods
outsb
jne
xchg
or
out
fnsave
sbb
cwtl
add
pusha
imul
out
inc
out
add
adc
insb
int3
or
jp
scas
fisttps
outsl
mov
movsl
xlat
or
dec
and
push
scas
mov
mov
pop
xchg
mov
mov
dec
xor
mov
inc
jg
es
xor
sbb
test
adc
sbb
inc
fcomps
fists
mov
decb
daa
dec
js
sahf
loopne
rclb
jbe
xchg
in
divb
ja
cmpsb
inc
stos
pop
in
sub
lea
imul
push
lds
out
add
int
outsb
inc
pusha
mov
addr16
mov
and
or
sti
ret
mov
jmp
push
adcb
inc
jmp
in
aas
popf
cwtl
div
dec
popf
pop
push
dec
push
cltd
jge
sbb
mov
pushl
mov
es
in
mov
ret
rolb
jne,pn
mov
inc
insl
ret
cmp
outsb
ficomps
push
xor
push
out
divl
mov
push
popf
jge
dec
sub
sub
adcw
sbb
push
push
and
mov
mov
movsb
pop
push
je
lcall
cmp
adc
repz
sub
fnsave
aad
aaa
inc
outsl
fimuls
xchg
ja
push
in
ljmp
in
adc
mov
jae
push
push
mov
cmp
js
movsb
adc
jo
fwait
cmp
xchg
mov
nop
mov
inc
ja
push
mov
cmc
divb
movsl
ret
adc
pop
daa
in
mov
popa
ja
and
in
lds
popl
idivb
sub
popa
cmpsl
xor
loopne
cmp
mulb
je
test
popa
jb
sub
icebp
dec
cmp
sbb
add
lret
pop
push
push
cmc
cmp
out
push
test
cmp
popa
and
mov
sub
push
xlat
rclb
call
mulb
mov
push
dec
out
rolb
cmp
xchg
and
scas
cwtl
or
mov
mov
push
cmp
sbb
into
sbb
sub
mov
sbb
jns
int3
rorb
shrb
and
cmp
out
sti
pushf
mov
insl
loopne
push
in
imulb
add
dec
mov
push
call
jge
subps
or
inc
dec
jg
or
out
mov
stc
lea
pop
insb
jae
dec
or
inc
cs
xchg
lea
xor
out
mov
aam
rcll
jb
xor
mov
xor
mov
out
sbb
push
sub
ljmp
mov
rclb
add
pop
jne
clc
xorb
or
icebp
gs
push
mov
sbb
mov
jbe
mov
out
mov
xchg
sbb
inc
mov
insb
movsl
cmp
mov
jl,pn
mov
lret
jno
lock
repz
inc
mov
or
adc
inc
mov
or
mov
push
inc
mov
push
iret
jns
sbbl
xchg
jp
jae
mov
pop
out
push
sub
or
and
out
jle
es
ss
xchg
push
testb
jns
arpl
and
dec
mov
jg
call
sahf
aad
mov
push
xor
mov
pop
xlat
fcoms
lds
aas
push
mov
mov
jmp
hlt
cmp
es
js
jl
mov
ds
imul
sub
lods
mov
mov
ret
fs
cld
adc
push
arpl
mov
notl
or
xchg
mov
pushf
jecxz
loop
push
xchg
lahf
cmc
cmpsl
or
pop
comiss
xorl
lock
sub
or
daa
das
push
int
adc
mov
inc
sbb
xchg
pop
or
sahf
fcomi
das
dec
mov
or
add
adc
inc
mov
aad
inc
int
stc
cmp
inc
pop
negl
stos
aad
mov
std
jg
adc
jle
jb
test
jbe
subb
pop
test
mov
add
fldcw
cmpsb
or
mov
fs
add
push
je
lods
dec
clc
inc
mov
outsb
dec
jae
sahf
jp
iret
push
stos
and
jns
xlat
out
lcall
cwtl
and
cmpsb
insb
xchg
adc
push
outsl
mov
jge
or
shrl
mov
pop
or
fsubs
add
insl
xchg
loop
or
mov
push
jmp
std
jg
aad
push
out
push
imul
sbb
and
xchg
xchg
aas
xchg
movb
dec
inc
insl
pop
or
daa
aam
mov
jno
mov
inc
and
int
mov
and
add
movsb
lock
sub
xlat
mov
jae
cmpl
and
stc
insb
stos
jl
decb
add
cli
mov
test
leave
stos
xor
xor
sbb
xor
in
aam
outsl
scas
mov
jo
mov
mov
mov
shlb
and
movsl
hlt
push
jecxz
rcl
scas
fsubrs
cltd
mov
mov
pop
enter
int
mov
in
ljmp
inc
push
push
int
xchg
adc
lods
hlt
or
mov
js
lds
sub
mull
outsl
les
bound
mov
fiaddl
and
into
mov
mov
inc
mov
push
nop
xor
mov
dec
inc
int3
lcall
arpl
fwait
xor
mov
mov
enter
jle
mov
ss
and
mov
stc
test
cmp
jle
lcall
dec
test
lahf
push
adcb
jo
fnsave
or
and
xor
ret
std
inc
mov
mov
stos
push
inc
mov
das
in
loop
pop
sbb
jle
mov
sahf
lret
hlt
ss
andb
je
sti
push
ss
pop
shll
icebp
dec
in
push
adc
aad
mov
mov
in
mov
mov
xchg
push
stos
sub
xorl
push
repnz
popa
jno
cltd
xchg
adc
jp
or
or
jne
xor
push
pop
sub
loopne
ja
and
push
decl
jge
inc
xchg
js
in
fbstp
in
and
inc
in
pop
inc
scas
adc
jnp,pt
lods
or
addr16
mov
jmp
lds
xor
pop
int
arpl
dec
jge
mov
pop
test
icebp
les
push
subb
xchg
cmpsl
adc
mov
sbb
into
aas
scas
xchg
push
inc
add
sarl
mov
sub
ret
out
rcrb
pushf
repz
loopne
sarb
inc
jge
push
mov
inc
mov
iret
sarl
imul
xor
test
imul
notb
imul
push
or
mov
inc
aaa
jp
iret
mov
add
xor
cli
jno
or
cmc
scas
add
rol
inc
xor
clc
or
inc
cs
or
in
cmp
add
cld
notb
fadds
pusha
jecxz
pop
fcomps
fstl
sbb
pop
imul
in
ds
pop
idivb
jno
cltd
fwait
pop
imul
mov
mov
dec
cld
cmp
gs
hlt
inc
dec
mov
repnz
rcrb
call
push
mov
cmp
loop
adc
dec
dec
jbe
cmp
into
add
jno
cmp
add
addps
stos
test
fs
ds
out
xchg
in
xchg
or
push
sbb
mov
sub
imul
jnp
cmc
stc
pop
faddl
divl
into
dec
repnz
cltd
and
push
outsb
ss
push
inc
shr
xor
lds
mov
or
pop
xchg
xchg
mov
cmp
stos
dec
notb
clc
jae
adc
sbbl
add
mov
mov
sahf
loopne
xchg
outsl
or
cld
in
lods
jmp
fs
push
lret
jp
add
xchg
in
sbb
jg
sbb
fsubs
push
lret
push
lea
jp
loop
fildl
pop
imul
cld
fwait
sbb
sub
roll
ftst
jne
inc
mov
sbb
popa
or
push
test
rcrb
sbb
mov
and
xor
cli
sbb
cwtl
adc
cmp
pop
andb
add
es
ror
cmp
leave
mov
inc
adc
sbb
xor
imul
jb
nop
into
out
jmp
cmpsl
cmc
ficoml
and
adc
jns
and
jp
clc
or
or
push
inc
mov
push
mov
cld
stc
aas
sbb
mov
call
xchg
jbe
sar
fbld
js
pop
sbb
ljmp
fnsave
enter
cmp
fbstp
mov
pop
xor
pop
xchg
jp
add
jo
pop
js
scas
pop
icebp
dec
outsb
pop
fldcw
mov
rcll
ss
jle
jno
fcoms
cltd
test
sbb
lods
clc
jns
push
jbe
call
ret
and
push
call
mov
flds
cmp
in
jge
mov
insl
call
jmp
or
mov
jne
xchg
push
dec
jl
xor
adc
int3
cld
adc
data16
scas
sbb
xchg
ds
sub
jl
leave
daa
inc
sbb
int
mov
xchg
add
andl
push
ds
jge
xchg
mov
cmp
lds
cmpsl
push
lcall
cmp
xor
mov
popf
rol
push
cld
fcoms
arpl
stc
leave
jne
hlt
push
mov
je
mov
sub
jae
ss
xor
loope
fwait
lret
out
inc
mov
xorb
mov
push
pcmpeqd
stc
sub
jmp
iret
jmp
test
mov
inc
aam
data16
mov
nop
push
mov
test
loop
js
pop
lret
mov
fcoms
and
cmp
pop
popa
push
mov
int3
adc
adc
xchg
fistpll
icebp
cld
pop
xchg
mul
fbld
xchg
push
int
dec
int
xor
icebp
data16
pop
repz
outsl
mov
dec
popf
add
push
inc
hlt
sub
xchg
cmp
outsl
outsb
sahf
inc
mov
mov
push
cmp
imul
or
orl
hlt
iret
pop
inc
dec
pinsrw
xchg
xor
push
cwtl
or
adc
xchg
jb
mov
lods
mov
aas
mov
push
repnz
mov
ss
dec
cmp
mov
dec
enter
dec
jb
call
cmpsb
xchg
mov
mov
sub
inc
loope
sub
push
sbb
push
stos
gs
push
repz
push
cli
xchg
popf
stos
aaa
fsubrs
icebp
mov
out
fcmovu
lcall
push
ljmp
movsb
ret
decb
inc
jg
inc
pop
in
hlt
fmuls
out
add
mov
xor
movsl
add
test
push
xor
leave
xchg
sbb
sub
xchg
mov
push
adc
or
pandn
sub
cmpsl
pop
rcrb
loope
jmp
sub
fistpll
call
xor
or
jb
pop
aas
movsb
es
stos
icebp
outsl
out
hlt
fdivs
in
arpl
jle
daa
mov
leave
popa
idivb
mov
das
lods
fiaddl
jnp
dec
movsl
sbb
insl
and
mov
nop
jecxz
int3
lds
push
mov
scas
out
sti
pop
dec
inc
mov
inc
dec
jnp
cld
pop
add
add
lret
ffreep
rorl
xchg
pop
and
pop
sub
xchg
les
std
adc
dec
inc
cmp
cmp
sbb
push
inc
jl
jg
add
aas
jge
push
loop
repnz
stos
cwtl
lock
js
rorb
xchg
push
xchg
outsl
scas
adc
mov
jge
ret
pusha
es
mov
cmpsb
das
push
jno
inc
xchg
movsb
cltd
xor
rolb
inc
sbb
aaa
js
out
sbb
lret
insl
lods
nop
cld
call
push
push
mov
stc
rep
les
jl
sahf
and
pusha
lahf
scas
xchg
mov
mov
lods
jo
dec
dec
jp
sbb
mov
dec
sar
fwait
stc
xchg
or
sub
pop
xor
xchg
mov
pushf
fs
and
rclb
and
rorb
sbb
scas
cmp
cwtl
insb
and
add
jb
push
daa
jae
sbb
cld
pop
pop
mov
or
addr16
jo
add
rolb
cmp
scas
mov
aaa
pop
push
inc
jecxz
jo
fs
lret
and
outsl
adc
stos
loop
push
in
imul
sti
pop
into
push
push
sub
push
ss
mov
mov
test
movswl
lcall
stos
push
cs
pop
add
insl
popf
lock
mov
xor
scas
jns
push
xor
int3
sub
sub
lret
test
popf
jl
and
or
movsb
pop
out
int
mov
stc
testb
imul
fstpl
mov
stos
stc
mov
cmpsb
aad
mov
psubsb
adc
jl
sbb
xorl
mov
fsubp
stos
lods
and
mov
and
sub
aaa
xor
jbe
jo
cwtl
arpl
inc
popf
lret
scas
mov
cltd
enter
mov
push
lea
pop
xor
aas
push
xor
sahf
cmp
adc
inc
int3
jnp
fdivrl
or
dec
sbb
pop
push
xor
or
and
mov
mov
inc
xchg
leave
xchg
call
popa
adc
dec
hlt
movsb
pop
jnp
mov
xchg
sbb
xor
gs
dec
out
mov
sbb
fcoms
push
or
dec
repz
pop
and
dec
test
xchg
sbb
scas
add
pushf
add
stos
pop
and
jmp
sbb
dec
lods
lock
lahf
push
sub
push
and
cmp
int
in
loop
shlb
jle
rorb
mov
ret
pop
fs
lret
test
sbb
sub
fwait
or
daa
mov
je
lea
and
jnp
popa
int
in
sub
jo
clc
push
cmp
arpl
clc
pop
and
or
in
lret
lock
scas
pop
jne
mov
pop
jnp
inc
nop
daa
pushf
aad
sbb
xlat
out
in
mov
in
or
jb
pop
iret
ret
and
aas
push
lods
and
push
cmpl
add
inc
inc
sbb
sbb
adc
sahf
push
scas
push
cmp
icebp
leave
jecxz
lret
ret
sub
push
jbe
dec
cmp
and
cld
pop
adc
adc
xchg
sbb
das
ja
sub
adcb
jge
or
in
lret
push
ret
and
cmpsb
call
js
in
cmpsb
cmp
and
movsl
loope
lret
lahf
push
sbb
and
sub
mov
out
cmp
mov
mov
ficoml
jae
adc
test
mov
js
push
sub
jno
call
cmpsb
push
cli
and
xchg
sbb
outsl
popl
fcmovu
sub
loope
and
insl
out
xchg
sarb
push
add
nop
and
xchg
pop
add
std
mov
xor
add
pop
imul
mov
lds
mov
and
out
enter
faddp
jo
adc
add
pop
add
scas
ret
pop
or
int
test
jg
test
rcrl
and
popaw
xchg
xor
sti
xchg
push
sbb
cli
js
lods
in
jbe
or
popf
pop
jns
cmp
aad
add
adc
ficompl
jbe
rcrl
pop
pop
jl
stos
into
pop
in
imul
mov
sbb
jnp
pop
dec
cmp
mov
stos
jle
push
pop
sub
and
push
xchg
test
and
mov
stos
iret
and
and
adc
cmpsw
dec
pop
cltd
outsb
jp
shl
fimull
test
push
mov
xor
iret
xlat
daa
addr16
mov
xor
jns
idivb
mov
xchg
xchg
clc
into
mov
dec
cmp
lock
ror
cltd
int3
bt
pop
int
sub
aas
push
stc
mov
ljmp
push
lock
insl
xorb
sbb
mov
inc
mov
dec
aas
insl
xchg
enter
or
or
mov
dec
daa
shl
jno
sub
inc
mov
daa
dec
jg
inc
shll
pop
lret
mov
ljmp
cmp
test
inc
insl
fsubrs
add
pop
cmp
or
inc
push
mov
inc
push
call
dec
jae
es
inc
fsubr
subb
cltd
leave
loopne
mov
sti
hlt
cwtl
ficoms
push
ficomps
jl
mov
insl
iret
mov
jns
dec
push
jbe
std
aas
or
orb
jns
push
cli
mov
lret
jo
ds
movb
jno
or
push
jnp
cmpsl
push
pop
xor
imul
cmp
sub
pop
xor
int3
in
mov
add
stos
ja
inc
dec
pop
mov
jne
les
sub
icebp
inc
sbbl
pop
cld
and
loop
sub
add
or
aad
repz
dec
pop
bound
adc
je
arpl
cmp
push
sub
cmp
mov
fisubl
test
jno
mov
icebp
jno
pusha
mov
cmp
imul
mov
ret
ret
fstpl
lcall
or
push
inc
insb
in
pop
cli
leave
mov
pop
negb
inc
add
insb
xor
mov
mov
push
popa
jl
sarl
sub
scas
jle
outsl
es
push
out
sub
incb
add
mov
rcrb
inc
cmp
loope
xchg
jg
sbbl
mov
imul
dec
or
sub
xchg
xor
lods
scas
pop
adc
and
cld
adc
xlat
xchg
insl
add
jmp
jp
add
imul
xor
test
or
test
dec
push
xchg
push
sbb
cmpsl
dec
lock
mov
fildl
test
sbb
push
fidivrs
out
sub
pop
je
adc
das
pop
sbb
adc
add
jb
fidivrs
jbe
push
sub
adc
fcmovnu
pop
scas
adc
in
scas
xchg
fs
shll
push
jnp
mov
push
imul
and
mov
jp
enter
ds
jbe
int3
lcall
enter
mov
test
push
mov
and
test
cmp
jle
push
ja
lea
sbb
das
xchg
popa
lahf
cwtl
mov
int
sub
sub
sarl
xlat
sahf
push
push
jp
cltd
or
pop
cmp
or
xor
shlb
or
movsl
enter
cmpb
mov
or
add
adc
popf
adc
int
jp
sbb
sti
mov
xor
icebp
pop
adc
jmp
lods
xchg
pop
loop
xchg
xorl
jge
lods
mov
jge
ss
movsl
push
loope
fxch
sub
sub
push
pop
xchg
data16
adc
sbb
subl
ja
or
xor
fnsave
add
cmp
mov
out
fsubr
arpl
add
jne
or
lock
push
mov
cltd
lahf
cmp
jno
push
out
and
push
sbb
xchg
ret
scas
fldcw
pop
dec
lahf
mov
lds
loop
push
in
fstl
cmc
test
mov
cmc
fbstp
jo
push
jns
dec
mov
mov
jmp
fdivs
lea
xor
cltd
sbb
sub
test
bound
in
stos
sbb
xor
js
bound
aas
enter
sbb
dec
stos
jmp
out
xchg
mov
sbb
push
sub
push
rorb
gs
adc
sub
jmp
mov
arpl
xlat
pop
les
into
xor
mov
xchg
mov
or
stos
incl
push
fistpll
jno
cmp
sahf
sub
cmpb
push
pop
and
stos
popa
inc
daa
ss
lock
dec
mov
lret
push
into
add
shrb
cmpsb
jle
mov
sbb
xor
in
sbb
adc
adc
mov
pop
add
fnsave
into
in
mov
into
scas
daa
pushf
out
stc
dec
sub
mov
inc
or
jecxz
lds
mov
lea
mov
ds
repnz
mov
jmp
arpl
pop
incl
pop
or
push
sahf
loop
paddw
loopne
leave
aaa
adcb
in
fcmove
push
clc
and
into
fbld
aaa
addl
hlt
adc
and
imul
arpl
pop
pop
les
popa
jl
in
inc
leave
arpl
and
jecxz
out
cmp
xchg
lcall
sbb
cmp
sbb
loope
cmp
test
fisttps
sahf
xor
lret
pmullw
arpl
jne,pt
dec
movsb
push
repnz
xchg
shrl
cmc
loope
xchg
jne
cwtl
dec
cmp
xor
fiaddl
jbe
jmp
lods
add
add
ljmp
jno
cli
add
leave
insb
fisubs
into
sbb
ds
outsb
in
mov
mov
and
xchg
mov
out
scas
jp
sub
mov
es
sub
imul
jmp
push
jb
push
mov
or
pop
sysret
out
add
add
jae
adc
or
addb
dec
imul
push
out
dec
and
scas
pop
inc
and
jp
adc
test
popa
jo
or
cmp
test
lcall
push
sbbb
fbld
push
bound
mov
outsb
imul
divl
inc
or
popf
cmc
push
enter
mov
hlt
add
push
mov
sbbl
inc
lods
cmp
mov
and
hlt
push
inc
add
mov
cmp
adc
sbb
cmp
mov
scas
xchg
inc
rorb
stc
fstl
jne
aad
jne
pushf
jo
xlat
dec
cwtl
lock
mov
mov
lods
aad
cmp
sbb
dec
mov
push
add
js
pop
cmpsb
lea
and
or
inc
mov
imul
insl
pusha
sbb
add
mov
cmc
push
or
or
push
cmp
sub
iret
pop
jns
adcb
enter
subl
or
adc
mov
aaa
sub
and
cwtl
mov
pop
in
xchg
adc
pmuludq
xor
push
dec
loop
xchg
xchg
test
arpl
call
dec
mov
pop
out
stos
andl
or
sbb
pop
stos
out
repz
fadds
xor
aam
sbb
adc
jno
fsts
cmp
int
popf
dec
scas
cwtl
or
inc
push
or
fs
cld
cmc
and
pop
and
push
cmp
jmp
lret
in
lcall
inc
mov
mov
movsb
add
pop
cs
js
iret
xor
sbb
pop
xor
sub
sbbb
push
push
in
add
mov
cwtl
fmuls
adc
mov
xchg
add
push
pop
enter
sub
out
jle
inc
jns
es
mov
in
mov
sub
add
bound
fisubrl
cmp
push
js
lods
dec
popf
fnstsw
popf
dec
dec
clc
cmp
mov
fldcw
icebp
lock
enter
sbb
repz
incb
sub
in
lret
lret
addb
add
push
xchg
or
mov
dec
shr
push
sbb
push
add
and
movsl
movsb
popf
sbb
outsl
and
push
and
lods
mov
sbb
aad
call
fcoml
sbb
cmp
xlat
iret
icebp
fwait
int
or
addr16
fcmovb
dec
mov
sbb
xchg
outsl
xchg
rorb
mov
data16
cli
ret
aaa
sti
sbb
or
push
or
and
adc
pop
mov
jno
jae
cmp
dec
lock
add
testl
gs
jae
sbb
cmpsb
xor
xor
inc
or
xchg
int3
jp,pn
xchg
test
xor
idivl
mov
sub
cli
dec
pop
ljmp
xor
lods
frstor
int3
xlat
push
fidivs
icebp
sarb
jecxz
nop
fucomp
inc
loopne
je
pop
pop
mov
pop
adc
sti
sbb
jg
push
and
push
gs
and
adc
mov
sub
xor
push
and
neg
daa
insb
cli
cld
mov
xchg
inc
inc
out
add
xchg
jae
dec
stc
popa
add
cmpsl
rorl
jp
or
xorl
mov
or
ja
movsl
and
into
add
adc
aam
jecxz
out
push
adc
out
outsb
push
adc
je
faddl
sbb
dec
ret
stos
pushf
in
fsubrs
add
add
mov
pop
mov
in
and
jbe
mov
push
inc
inc
jl
aas
lds
icebp
stos
sub
cmpsb
adc
scas
pop
es
lea
sbb
or
test
in
and
jo
stos
xchg
sbb
jne
fmulp
loopne
cmp
sub
pusha
out
loopne
dec
fs
cmpsl
dec
movsb
mov
push
movsb
dec
loopne
jecxz
stos
js
xlat
adc
pop
xor
mov
ja
pop
pop
cmc
add
or
pop
xchg
pop
jnp
xor
into
mov
mov
addb
mov
hlt
gs
cmp
outsl
push
xchg
in
in
mov
bound
shll
add
cwtl
mov
das
xor
pop
adc
cmp
mov
cld
push
fistps
cmp
or
js
or
icebp
pop
sarb
cmp
das
dec
jnp
sbb
ja
std
adc
or
adc
int3
std
push
mov
adc
jae
pop
mov
fiaddl
cld
ror
sub
testb
xor
sbb
iret
arpl
pop
sti
lock
mov
dec
loope
inc
jmp
dec
sbb
dec
shll
push
sub
dec
and
cmp
ret
int
push
mov
sbb
cld
andb
adc
arpl
in
xor
int
pop
jle
jecxz
jl
add
sub
dec
loop
mov
scas
arpl
adc
cmc
jb
ret
mov
int3
push
xchg
mov
leave
inc
loopne
inc
int
pop
dec
add
inc
xlat
cmc
scas
mov
inc
push
ret
sti
pop
scas
punpcklwd
sbb
sub
sub
xlat
std
jns
push
xchg
arpl
sbb
push
int
insb
cmp
dec
jae
filds
test
imul
scas
push
clc
mov
andl
lahf
cmc
pushw
sbb
adc
es
sub
out
inc
bnd
pop
xorb
jae
pop
fistps
push
cli
pop
xor
aad
mov
cmp
shrl
pop
ret
pop
out
adc
cmp
xchg
ficoms
mov
jecxz
dec
cli
mov
rcrl
mov
adc
mov
pushf
sbb
mov
or
mov
popa
mulb
add
addr16
mov
sbb
stc
jnp
out
sub
mov
out
pop
push
shlb
and
cmp
cmpsb
jecxz
ds
sbb
dec
cmova
les
out
pusha
fisttpll
mov
pop
sbb
movsl
dec
pop
or
jle
sub
sahf
aam
rcrl
cmpsl
dec
cmp
insb
cltd
push
aaa
pop
mov
mov
inc
mov
adc
ss
iret
jp
sbb
jge
or
inc
dec
pusha
fadds
cmc
inc
push
mov
pop
lret
pop
imul
scas
adcb
incb
jge
es
fsts
gs
xor
pop
push
mov
xor
dec
icebp
cld
fdiv
repz
sub
pop
mov
cmp
add
push
int3
in
dec
scas
aas
jne
fwait
mov
daa
aam
pop
or
sti
std
fisttpll
add
adc
mov
rorb
shrb
inc
dec
dec
lods
xchg
pop
sub
pop
insl
or
ja
ficomps
insb
popa
pop
repnz
stos
cwtl
jns
mov
mov
pop
sbb
lea
inc
add
gs
stos
stos
jns
icebp
pop
test
je
int3
mov
push
mov
xchg
xchg
bnd
fnstenv
lock
cmp
mov
jmp
fsubs
push
bound
fstl
push
cli
xor
js
in
mov
mov
cli
jno
ss
lods
les
mov
cmp
aam
or
mov
mov
cmpsb
in
mov
xlat
ljmp
dec
push
pop
imul
shrb
mov
adc
test
divb
mov
xor
or
int
pushf
mov
les
inc
stos
test
pop
into
cmpsl
lret
dec
stos
lcall
movsb
ljmp
jnp
add
inc
push
mov
nop
jecxz
mov
xlat
sub
incb
stc
nop
push
xor
je
push
mov
mov
aam
mov
jp
lcall
bound
jnp
jmp
and
fistpll
mov
rol
fisttps
ds
cltd
jmp
xchg
lods
or
fstpt
lea
outsb
insl
inc
pop
cwtl
pxor
lods
lret
and
sub
pop
adc
scas
in
test
adc
and
jge
jbe
fstps
push
lahf
daa
fstps
incb
jb
stos
pop
push
shll
gs
cmp
js
jo
jnp
sub
lcall
or
cld
cmp
fdivrl
mov
cli
sbbl
dec
rcll
or
jle
mov
and
aas
popa
fbld
fsubrs
jnp
dec
push
fwait
push
pop
stos
xchg
or
pop
push
mov
mov
lcall
mov
sahf
cwtl
xchg
out
xchg
jo
pusha
push
dec
loopne
lods
pop
cmp
pusha
repnz
pop
mov
push
sub
cmpsl
inc
movsl
ja
sub
xchg
sub
out
cli
movsl
popa
fs
cwtl
leave
push
xor
inc
add
and
ret
dec
lahf
pop
xchg
leave
jne
or
mov
and
mov
mov
or
pop
sysexit
jb
sbb
or
xchg
andl
pop
or
xor
and
das
cmc
clc
push
sub
push
mov
fbstp
push
push
aad
nop
fst
nop
fs
cmp
add
mov
adc
les
lret
fwait
addr16
cmp
sbb
or
int
aad
jb
mov
shl
ret
mov
mov
push
add
push
mov
daa
sbb
mov
xor
cmpsb
sub
mov
cld
adcb
test
aas
adc
and
add
rclb
popf
mov
in
out
or
ljmp
js
shll
sub
mov
fst
inc
sub
lock
and
clc
outsb
xchg
adc
add
pop
aas
int
adc
fwait
cli
adc
in
mov
data16
rcll
xor
shrb
pop
arpl
int3
add
jne
inc
jb
mov
sub
pop
ljmp
jmp
bound
cmpsl
adc
jmp
mov
mov
jle
mov
or
daa
aam
jl
xchg
inc
iret
cmp
or
push
push
insl
or
xchg
fstps
pop
popa
loope
or
xor
dec
aas
lcall
xchg
or
xchg
inc
and
mov
jo
outsl
mov
iret
lods
mov
dec
lcall
sub
in
arpl
and
cmp
ror
mov
aas
lcall
rcrb
xchg
std
inc
dec
in
lahf
and
and
mov
push
cmp
loopne
and
dec
mov
rcl
gs
push
jb
div
adc
gs
sbb
mov
mov
fistps
data16
sbb
orb
mov
push
adc
sti
repnz
add
sub
enter
add
test
sub
lret
movntq
out
jne
sbb
dec
push
popa
mov
outsl
iret
adc
inc
cmpsl
popa
sbb
jmp
pop
jge
cmova
scas
push
das
inc
lods
push
sub
movsb
scas
lcall
stc
mov
scas
jmp
in
push
stos
loopne
or
gs
add
jns
popf
shrl
push
or
repnz
ljmp
pop
jmp
jns
ret
cld
xor
add
pop
repnz
fnstsw
fldcw
and
xchg
inc
gs
mov
jne
fsubrs
dec
mov
dec
and
sbb
or
xor
adc
mov
and
mov
and
adc
leave
sbb
imul
inc
add
jae
inc
adc
sbb
das
xor
push
add
mov
shr
push
or
cmp
nop
cmp
test
cmp
push
cmp
mov
jle
xchg
jne
or
inc
and
inc
dec
and
mov
out
test
movsb
pop
xchg
cli
shrl
mov
push
push
sbbl
pop
sbb
lret
xchg
jle
in
push
test
fisttps
jmp
dec
sub
jl
mov
into
mov
inc
mov
aam
notb
aad
and
les
out
jmp
xchg
jne
aas
pop
ja
pop
mov
mov
mov
inc
fdiv
das
cld
pop
jmpw
xorb
je
mov
test
rclb
aaa
sbb
pop
sbb
gs
gs
sbb
pop
loope
in
sub
in
xor
mov
out
jp
xor
pushf
fmull
jp
push
xchg
xchg
lods
sub
scas
mov
jle
jno
pop
jae
jmp
mov
sbb
dec
dec
aas
ljmp
test
inc
out
loope
push
mov
or
xchg
icebp
fwait
mov
repz
and
sbb
enter
repz
bswap
sbb
aaa
mov
movsl
loop
ret
xor
insl
insl
cmp
clc
mov
xchg
stos
mov
or
inc
mov
test
mov
push
bound
es
adc
adc
out
aad
adcl
mov
arpl
cmp
inc
push
sub
or
scas
dec
test
je
or
outsb
sbb
cwtd
push
mov
out
fwait
mov
popl
mov
inc
pop
lods
xor
xor
fs
mov
and
popa
xchg
icebp
cmp
and
dec
lds
mov
into
sarl
jmp
add
test
outsb
inc
pop
insb
cmc
ljmp
sub
mov
adc
scas
and
out
fwait
test
or
test
sub
ret
mov
ret
jmp
jg
hlt
mov
es
mov
leave
xor
sub
dec
les
or
leave
adc
scas
cmp
call
aas
clc
repnz
test
outsl
les
xchg
rclb
cmc
push
mov
dec
cmpsb
movl
imul
lret
sbb
mov
movsb
loop
jecxz
rolb
jns
shl
in
mov
sbb
mov
push
call
cmp
pusha
int3
xor
jmp
gs
in
jns
mov
out
or
imul
cs
dec
sub
stos
sbb
pop
ret
xchg
push
pop
pop
jns
dec
movsb
sbb
rsm
cs
aaa
xchg
in
push
add
xchg
xchg
inc
shl
mov
repz
xchg
xchg
push
inc
jne
cmp
ret
stos
ret
and
int
repz
std
pop
in
clc
les
pop
push
aad
sub
inc
xorl
stos
call
cmp
out
mov
and
and
stc
mov
loopne
pop
subb
std
scas
rcll
sbb
jb
pop
inc
mov
jge
stc
mov
dec
lods
add
out
imul
inc
int3
popf
mov
ja
cwtl
dec
or
pop
dec
xchg
xchg
mov
pop
jp
cmpsb
in
mov
ljmp
pop
jp
aas
sbb
mov
xchg
cmp
xor
or
in
jne
popf
enter
fwait
enter
adc
ja
pop
cmp
push
test
lock
jno
push
mov
mov
adc
dec
filds
test
lret
sub
cmpsl
or
fcmovne
mov
subb
mov
mov
ror
lret
inc
call
sbb
les
int3
xchg
push
insl
cmpsb
adc
push
mov
add
or
cmpsl
pop
loopne
dec
and
xchg
sbb
mov
insl
imul
pop
std
iret
pop
sub
clc
rcrb
fisubrs
jl
cltd
pusha
xor
push
mov
shlb
cmpsl
cmp
ret
in
negl
pop
jl
push
aam
mov
xchg
dec
in
pusha
jmp
lret
daa
xor
jle
add
lcall
sarb
adc
push
or
pop
and
fwait
lahf
dec
imul
bound
test
pop
adc
adc
decl
ret
push
mov
out
inc
push
inc
in
push
aad
jecxz
cwtl
movhps
mov
into
adc
mov
or
mov
push
adc
push
out
mov
loope
sbb
cmpl
cs
lret
pop
fcom
sbb
mov
js
gs
fiaddl
ja
sub
out
sbb
jno
fidivs
mov
rclb
or
pop
andl
movsb
cmp
sbb
lret
imul
xor
dec
test
out
push
cmp
sbb
je
pop
mov
mov
inc
leave
xchg
xchg
test
icebp
lret
sbb
daa
enter
jb
repz
imulb
adc
and
addl
out
mull
and
in
pop
sbb
cmpsb
flds
repnz
pushf
cmp
or
mov
adc
stc
mov
mov
xor
iret
adc
jp
inc
or
movsl
xchg
and
dec
pop
pop
in
and
jo
cmpsl
dec
adc
loop
in
and
movsl
jp
push
push
cmp
and
insb
push
call
addr16
xchg
lret
inc
pop
ret
sub
mov
sbb
lret
push
les
sub
inc
xor
cmp
sbbl
mov
les
pushf
adc
xlat
es
xlat
and
std
loop
cmp
xchg
push
lock
test
mov
scas
or
add
sbb
push
aaa
ret
subl
add
inc
cmp
pusha
jg
sub
cmovs
sbb
sbb
out
fwait
rolb
jge
into
add
andl
adc
fstps
popa
push
enter
mov
fs
dec
sbb
push
out
and
test
lret
add
dec
cmp
inc
lds
test
jnp
rorb
xor
loop
jno
sub
push
cs
push
ficomps
xchg
mov
sbb
sbbl
cmp
lret
mov
push
lret
movl
divb
inc
push
xchg
clc
fs
push
xchg
xchg
sub
imul
movsl
pop
mov
out
lahf
les
and
fs
sbb
mov
stc
sub
xor
push
ja
lods
lods
mov
pop
pop
xchg
push
stc
mov
into
scas
xchg
mov
lcall
push
or
sarl
cltd
push
push
mov
cld
cli
cwtl
push
pop
adc
or
jecxz
loopne
mov
lret
js
cwtl
mov
andl
mov
je
pop
inc
add
out
jne
mov
xchg
neg
sbb
mov
movb
ja
iret
mov
xchg
cmpsl
or
cmpsl
test
xchg
test
xor
and
movsl
pop
repnz
xor
sub
icebp
in
mov
push
ret
jecxz
dec
sbb
mov
mov
jo
mov
xor
cmp
outsb
inc
pop
mov
sti
push
ss
jns
jnp
dec
push
bound
sub
lods
mov
sarb
dec
sub
adc
mov
jecxz
jb
lea
inc
xchg
scas
jmp
les
pop
xchg
cld
stos
je
int
ja
cmpsl
push
cli
mov
lods
loop
rcrb
push
pop
jecxz
mov
jne
xor
sbb
pop
out
test
pop
into
xchg
mov
out
repz
rclb
sti
xchg
inc
lea
xor
jg
or
xor
aad
lods
inc
inc
lret
in
mov
rolb
out
mov
pop
inc
sub
js
mov
cmp
popa
in
jl
sub
test
sbb
pop
andb
outsl
fwait
js
and
sub
addl
mov
pushf
ss
nop
sbb
xchg
mov
in
lret
out
pop
insl
pop
xchg
mov
and
call
nop
int
shrl
mov
pop
mov
cmp
stc
ja
add
lock
sub
adc
out
cmpsl
jne
inc
xor
lods
cli
stos
aam
pop
and
pop
mov
mov
mov
jb
imul
dec
stc
out
and
push
push
push
lods
sbbl
push
inc
int3
or
mov
add
in
jl
jb
inc
dec
aaa
push
jmp
mov
cmp
mov
dec
jo
add
icebp
mov
add
cmp
jecxz
pop
push
insl
test
jl
mov
cmpl
fwait
jns
stc
mov
mov
loope
jmp
test
lret
mov
adc
mov
popl
insb
hlt
or
mov
sti
sar
not
mov
add
hlt
sub
std
int3
or
push
mov
mov
stc
sti
adc
push
sti
lahf
int
jle
out
loop
je
pop
lods
loope
lret
outsb
adc
sar
sti
cmp
enter
fistps
mov
pop
popa
add
mov
nop
bnd
lods
push
fcoms
loop
in
fiaddl
sbb
mov
mov
mov
sub
push
push
hlt
pop
shl
out
iret
fisubl
cmp
int
adc
imul
fisubrs
xor
pop
arpl
in
stos
mov
int
cwtl
shll
int
imul
movsb
or
mov
jecxz
pop
inc
cld
jno
or
fmull
jl
pop
inc
xor
xchg
sbb
mov
les
pop
sbb
lds
or
sbb
aam
inc
jle
mov
inc
mov
mov
sahf
sub
cmp
or
xchg
pop
lock
imulb
shrb
dec
sbb
and
test
cmp
jl
xchg
rcrb
xlat
imul
xor
push
inc
lea
or
push
fists
out
fadd
mov
pop
fdivp
cmpsb
sahf
pop
add
dec
popf
orb
enter
mov
imul
scas
mov
test
cmp
fidivrl
dec
xchg
test
mov
cmp
push
push
or
or
cltd
pop
mov
jmp
enter
push
and
lock
cld
mov
imul
in
test
inc
jle
aad
inc
jae
add
scas
ja
and
mov
sub
pop
mov
ds
xor
mov
push
cmpl
xor
add
or
push
push
or
mov
and
push
lods
pand
lahf
push
dec
std
mov
inc
mov
sub
or
mov
inc
xchg
subb
das
test
adc
and
fs
sub
ret
aad
mov
icebp
loope
adcl
in
mov
arpl
outsl
adc
sub
dec
shrl
lret
insb
adc
rcl
es
stc
jg
cmp
push
fmuls
dec
loope
mov
cmc
rcl
fstpl
movsb
repz
loop
ret
xorb
aaa
xlat
roll
adc
mull
int3
mov
gs
and
mov
cmp
mov
test
ljmp
nop
cld
lods
sti
xlat
rclb
fadds
push
adcb
popf
cltd
and
lock
xor
push
cmp
push
divb
push
mov
jmp
leave
xchg
xchg
rorl
xor
cmp
dec
into
outsb
out
xorl
imul
mov
clc
push
cmpsb
add
stc
sub
inc
rcr
push
addr16
add
sub
jg
std
mov
jnp
mov
pop
adc
xor
stc
sbb
mov
push
lahf
int3
mov
mov
or
mov
jmp
shlb
push
xchg
cmc
scas
cmc
cmpsl
fstpt
xor
mov
je
mov
stc
sub
test
repnz
out
push
mov
push
into
and
aaa
push
call
fwait
int
in
jp
shlb
shlb
jl
mov
loop
mov
adc
clc
icebp
mov
mov
xchg
mov
js
in
jns
add
data16
sub
clc
stos
and
and
enter
jl
jp
xchg
out
push
jo
jb
insb
stos
imul
stos
add
nop
jns
testl
jle
in
pop
lea
inc
and
shrb
push
or
dec
dec
rorl
cmp
inc
jae
mov
bnd
in
int
std
dec
lock
lods
in
jmp
test
sub
push
or
mov
shl
fldl2t
mov
push
fcomip
insb
mov
fistps
mov
mov
lret
rcr
dec
mov
ljmp
clc
jmp
push
adc
push
fs
pop
scas
les
shlb
or
jmp
xor
push
mov
stos
ljmp
pop
lret
fisubrl
cmp
sti
movsb
or
sbb
gs
cmp
dec
and
add
jae
shrb
fstps
stos
out
lods
pmaxub
mov
cwtl
insb
mov
mov
test
push
roll
enter
xor
decb
mov
sbb
inc
pop
sti
mov
xor
sub
into
out
repnz
add
rep
outsb
test
xchg
mov
inc
mov
negl
scas
neg
lds
bound
or
and
add
inc
arpl
mov
repz
mov
leave
fildl
fcompl
mov
mov
gs
shl
inc
mov
fildl
enter
mov
lcall
mov
inc
sbb
fstpt
lret
mov
daa
jecxz
adc
call
imul
inc
fldl
in
pop
fiaddl
mov
in
aad
push
push
add
hlt
andb
dec
cmpsb
lods
test
sub
xlat
mov
in
jmp
mov
aad
rcr
mov
adc
push
addl
push
xor
jl
mov
mov
roll
pushf
sbb
adc
jl
sub
das
mov
test
mov
pop
mov
mov
test
xchg
test
pusha
clc
scas
jo
testb
cmc
mov
shlb
out
lds
dec
repz
daa
rcl
add
repnz
ss
adc
push
aas
cmpsl
push
xor
dec
dec
fldl2t
js
ret
sbb
mov
xchg
dec
dec
enter
mov
fidivrl
mov
mov
lcall
int
out
lds
and
sbb
psraw
aam
mov
test
subb
jecxz
adc
std
dec
shlb
sahf
rclb
jae
dec
fdivrp
cld
xchg
mov
cli
and
dec
dec
aas
jge
sub
cld
test
dec
push
cmpsl
loop
je
lret
cwtl
xor
daa
les
xlat
aas
mov
mov
push
lret
mov
mov
ret
out
mov
jne
adc
dec
pop
sti
mov
loop
ss
sub
gs
mov
dec
bound
pop
and
adc
int
loop
in
out
jns
shlb
loopne
sub
inc
sub
sbb
mov
loop
inc
idivl
cmp
and
inc
pop
cmpsl
jle
xorb
hlt
or
mov
jnp
movsb
xchg
mov
dec
imul
mov
lock
fbld
enter
mov
pusha
cwtl
push
fildl
aaa
xor
lret
js
xor
ds
xchg
xor
and
add
lea
pop
call
push
cmp
add
icebp
xchg
insb
cs
xorl
dec
cmpsb
add
xchg
test
es
mov
dec
test
mov
push
data16
inc
in
movsl
jg
icebp
mov
insl
stc
mov
jp
push
cmp
adc
jb
in
pop
mov
inc
jb
loopne
dec
cmpsb
push
outsl
or
xchg
icebp
mov
and
sbb
inc
pop
mov
sub
mov
lds
in
out
dec
jg
hlt
fldln2
repnz
loop
imul
fnstsw
pusha
pop
jmp
add
in
mov
enter
jecxz
outsb
lcall
mov
enter
shrl
mov
std
leave
in
mov
ljmp
jns
mov
dec
cld
in
pushf
push
test
in
ficoml
inc
and
sbb
mov
cs
sub
mov
cmc
std
insl
scas
add
lahf
insl
addr16
pop
test
pushf
movsl
sbb
dec
pop
je
insl
xchg
adc
mov
movsb
mov
push
lea
jns
pop
add
pop
inc
lds
push
orl
aaa
jg
add
arpl
test
mov
mov
outsb
lods
popf
loop
notb
inc
xchg
cmpsl
lret
mov
add
cmp
add
sub
jo
in
clc
xor
arpl
mov
hlt
pusha
scas
js
mov
xchg
dec
jl
imul
add
jle
bound
push
movsl
stc
mov
repnz
jge
mov
dec
loop
sub
test
scas
aam
bound
mov
cmpsb
cmp
push
pop
movsl
leave
addr16
stos
sbb
inc
int
and
mov
pusha
xchg
push
rcrl
add
inc
or
sbb
out
pop
scas
sub
fimuls
inc
mov
test
lcall
std
inc
jp
jg
adc
sbb
push
fwait
pop
sti
setne
xor
out
sbb
insb
mov
call
loope
das
or
decl
test
jmp
adcb
adc
xchg
adc
cmp
pushf
jbe
jo
push
iret
inc
ret
pop
mov
push
mov
insb
sub
int3
add
cmp
xor
pop
into
call
imull
mov
cmpsb
or
mov
movsb
mov
mov
push
or
jge
stos
stos
jnp
ret
adc
or
dec
xlat
es
pop
or
add
adc
lea
imul
pop
in
call
je
sbb
movsb
push
mov
xor
pop
imul
lock
test
dec
pop
test
scas
pop
call
nop
into
mov
fbld
aad
push
or
orb
lret
sbb
ds
add
incb
xchg
arpl
test
add
sbb
add
or
les
xor
inc
nop
mov
push
inc
xor
arpl
jb
and
leave
mov
pop
inc
pushf
mov
sbb
imul
dec
aad
leave
xchg
add
mov
sarb
neg
add
mov
and
sub
repz
imul
clc
sub
testl
xchg
jae
mov
shr
or
xor
lods
stos
pop
xor
cmp
xchg
dec
lret
js
repz
xchg
push
sbb
jl
jg
mov
mov
lcall
xchg
push
fdivrs
test
sbbl
test
push
dec
mov
imul
jbe
or
insl
inc
xorl
sbb
out
sub
int3
push
jnp
jbe
loope
jle
mov
fs
cmp
inc
lods
lods
ds
inc
cmp
push
rorl
mov
cld
popa
out
jns
ljmp
or
jo
mov
cmc
cmp
testl
shrb
xchg
cld
cmp
mov
mov
sbb
in
imul
mov
push
std
xchg
lea
fs
pop
inc
pop
ret
mov
ja
mov
jl
ret
in
ljmp
mov
shrl
dec
int3
fs
jns
xchg
push
and
mov
jbe
popf
mov
cld
mov
popf
hlt
sub
jb
fwait
stos
sub
lahf
dec
imul
call
sub
scas
add
xor
dec
shll
lods
mov
pushf
cmpsl
in
pop
cmp
sbb
cwtl
lret
aas
xchg
cli
bound
lods
cwtl
out
loop
push
jg
xchg
test
fcmovbe
jecxz
adc
xchg
shll
js
push
sbb
movsl
fdivr
rcll
jno
std
cmp
popf
push
xchg
cmp
push
inc
mov
push
add
shll
add
adc
js
mov
jle
cli
cmp
cmp
mov
shll
xor
not
in
shrl
jb
mov
or
or
xchg
xor
test
imul
mov
dec
loope
cmp
loop
pop
mov
fs
aam
cs
xor
cli
xchg
add
roll
sbb
push
cmp
and
stos
pop
pushf
sahf
and
xchg
pop
test
js
jns
out
adc
arpl
push
cmp
loop
in
cmp
cmp
adc
je
pop
cli
imul
mov
xlat
pop
fndisi(8087
in
sti
je
cld
nop
ficomps
jmp
mov
out
insl
add
jge
xor
outsb
xor
xchg
insb
dec
lods
mov
movsb
pop
push
inc
dec
xor
add
xorl
lock
lcall
js
mov
jmp
inc
dec
inc
mov
addl
mov
mov
lret
lcall
lcall
in
icebp
sub
movb
arpl
adc
and
aad
pop
dec
sbb
lock
and
push
cmp
pop
jnp
add
in
insl
mov
xor
int
add
out
stos
repnz
sub
faddp
cmp
inc
push
cld
mov
and
mov
aad
aas
sahf
aas
std
in
scas
pop
arpl
aad
pop
mov
mov
cmpsl
scas
xor
mov
addl
xchg
and
pop
fsubrs
test
in
out
imul
test
movsb
clc
iret
add
adc
jge
push
cmp
scas
xlat
jecxz
or
inc
fucomip
xlat
inc
xchg
dec
fs
or
sti
es
dec
push
jl
mov
inc
mov
js
bound
push
xchg
push
add
xchg
xor
cmc
sbb
out
out
pop
push
jmp
in
adc
insb
mov
sub
repz
sub
add
pop
xchg
arpl
out
scas
movsb
lods
push
adc
testl
push
aam
rolb
sub
or
pusha
add
sbb
orb
in
push
xchg
fwait
rcl
daa
dec
sub
push
mov
mov
stos
loope
arpl
pop
loop
ljmp
xchg
gs
push
fisttpll
call
cwtl
dec
sbb
stos
leave
stos
sbb
das
xchg
cmp
adc
test
xchg
and
inc
ret
popa
adc
addr16
frstor
push
rclb
dec
xchg
in
mov
aad
mov
stos
shlb
pop
and
shrb
xchg
stc
scas
lods
cmp
adc
inc
out
jns
push
fs
popl
stos
and
jmp
test
jp
adc
xlat
cmp
sbb
fsubrl
popa
add
xchg
xor
mov
and
xchg
add
addr16
cltd
test
xorb
pop
pop
divl
ficomps
cmp
mov
and
insl
jnp
cmp
in
inc
xchg
pop
cmp
imul
xor
in
xchg
xor
pop
inc
xor
and
test
sbb
fisttps
pop
and
sahf
into
xor
xchg
mov
mov
xchg
sbb
cld
or
lea
fcomps
pop
dec
movsb
lds
lcall
cmp
not
jae
lock
stos
fdivs
andl
stc
fs
movsl
jb
test
sbb
cmp
jbe
add
lods
aaa
cmp
pop
rclb
and
sahf
ret
in
sbb
sbbb
pop
int3
xor
or
cmpsl
adc
loope
jne
out
out
out
xchg
and
movsw
lret
mov
pusha
pop
data16
ja
cmovge
movsb
jg
push
out
mul
cmc
dec
sbb
cmpb
std
sbb
lods
fwait
in
mulb
clc
stos
adc
test
and
adc
loope
push
fisttps
daa
aam
and
cmp
jge
pop
pop
and
push
bound
pop
ss
js
sub
imul
lock
pop
ljmp
mov
out
cmpb
pusha
dec
jmp
jle
pop
mov
and
lcall
push
mov
fcom
jecxz
push
rcrb
call
push
push
xchg
jbe
pushf
cmp
out
fisubrs
movsb
add
add
cmp
push
mov
sbb
loopne,pn
sbbb
dec
cmpb
fcoml
daa
adc
arpl
aad
inc
dec
jb
xchg
sbb
inc
rolb
sbb
lret
xchg
icebp
dec
pop
xor
jbe
cmp
lods
inc
lods
jo
mov
imul
cmpsb
subb
cmp
insl
in
sbb
add
test
mov
sub
dec
mov
sbb
lock
jmp
int
push
dec
dec
js
aam
sub
mov
sar
insb
shll
ror
xchg
sbb
ret
dec
jns
pop
pop
test
js
jmp
jo
loope
dec
mov
movsl
mov
ret
insl
addl
jg
pusha
jge
push
test
push
add
inc
jg
ljmp
dec
scas
andb
mov
aam
lock
mov
xor
mov
push
dec
loope
xchg
rolb
mov
push
or
sbb
xor
pop
pop
pop
test
cmp
sbb
test
jbe
fs
imul
xor
div
mov
push
lea
mov
mov
xor
mov
push
xor
xchg
mov
sub
stos
xor
mov
shrl
mov
adc
push
jne
inc
xchg
lock
shrb
mov
pop
hlt
outsb
push
in
in
dec
rcrl
int3
inc
mov
aaa
sahf
xor
ljmp
jp
shrb
mov
mov
mov
lods
stc
add
jbe
mov
cmp
leave
imul
pop
icebp
test
pop
cs
dec
sub
aad
pop
xchg
pop
stos
push
ja
call
neg
call
mov
push
push
and
subb
les
out
test
jnp
mov
pop
xor
inc
pushf
nop
sub
add
cmpsb
ss
xchg
ds
mov
pop
scas
pop
push
imul
mov
stc
shl
pop
or
xor
stos
mov
das
xchg
dec
sub
xchg
lret
hlt
cld
xchg
es
or
popf
ficompl
xchg
sbbb
mov
mov
and
iret
jmp
stos
mov
inc
lret
loope
data16
cmp
xchg
xchg
mov
rorl
lret
add
xor
inc
cld
lret
sbb
shlb
mov
cmpsl
pushl
repnz
iret
testb
cmp
xor
dec
stos
push
adc
mov
sbb
js
lds
aaa
out
jns
ret
dec
cmp
jae
xor
iret
in
push
arpl
or
and
mov
mov
sbb
or
popa
or
mov
sub
dec
pop
dec
fisubrs
mov
test
scas
jecxz
fwait
in
loope
adc
mov
mov
outsb
xchg
repz
dec
mov
mov
inc
movsb
adc
mov
lock
iret
and
sub
jno
cmp
fsubr
ret
repz
pusha
cmp
stc
add
ja
sub
xor
ss
int
mov
bnd
in
adc
inc
mov
movsb
add
sahf
xchg
fadd
jl
sbb
mov
test
les
addr16
stc
jmp
fcmovne
iret
xchg
xlat
mov
pop
ss
outsl
push
pusha
call
push
aaa
aam
call
mov
cmpsb
push
pop
mov
lods
aam
repz
shlb
cmpsl
push
or
mov
das
shr
in
subl
ds
lret
scas
in
jnp
pusha
movsl
jnp
mov
pop
mov
pop
test
outsb
pop
jecxz
push
pop
jl
sbbl
imul
jp
inc
mov
lods
or
inc
cmpl
pop
repnz
test
add
adc
pop
stc
push
mov
push
sub
mov
push
cmp
sbb
repz
fs
jb
cld
cltd
in
add
cmpps
mov
sarb
pop
lahf
clc
inc
sub
dec
mov
pop
dec
daa
add
js
sub
xor
or
cmp
sti
bound
pusha
lret
add
not
xor
out
enter
cwtl
sub
roll
cltd
inc
popa
popf
in
les
es
jg
jnp
pop
sti
mov
clc
mov
sbb
inc
mov
jl
cltd
xor
add
add
in
pop
add
daa
int3
repz
add
add
jmp
fwait
dec
imul
push
mov
cmp
cli
add
int
lret
push
adc
mov
inc
sarl
out
ficomps
mov
adc
jno
mov
in
inc
pop
add
sub
inc
lret
jg
inc
out
repnz
nop
mov
gs
mov
imul
push
push
fnstsw
test
test
sub
test
xor
je
aaa
jg
mov
sbb
adc
cltd
or
add
fsubs
jnp
mov
mov
cmp
dec
and
mov
add
mov
inc
xor
sbb
shr
icebp
movsb
enter
out
adc
and
push
and
mov
mov
cmp
lcall
add
dec
mov
frstor
repnz
dec
out
addr16
fnstsw
in
mov
xchg
xchg
fadd
inc
mov
aad
imul
mov
das
push
addl
loop
scas
loope
icebp
push
mull
dec
sbb
or
push
leave
das
sbb
push
aam
stos
andl
lock
xchg
cmp
mov
shll
cmp
sub
jl
mov
push
into
flds
push
inc
mov
addb
add
mov
jmp
adc
cmpl
sbbb
xchg
sti
dec
ret
mov
add
jg
inc
mov
inc
mov
cltd
repz
dec
test
mov
dec
pop
mov
inc
into
rorb
adc
mov
hlt
test
int3
jle
and
cld
xchg
add
pop
shrb
arpl
testb
inc
xor
lcall
scas
cmp
or
mov
or
repnz
pop
mov
mov
mov
hlt
ja
out
pop
mov
ljmp
mov
int3
or
push
movsb
jge
pushf
inc
mov
ljmp
imul
ret
subb
mov
mov
lods
and
lods
ret
out
scas
pop
je
push
push
dec
addl
loope
add
pop
inc
repz
mov
dec
jge
repz
pop
pop
mov
push
mov
orb
mov
outsb
enter
mov
fmuls
mov
mov
jnp
cmpsl
adc
stc
dec
repz
iret
pushf
dec
pushf
bound
or
xorl
inc
mov
sarb
mov
fsts
jmp
mov
clc
repz
fucomi
ret
cwtd
iret
stos
ja
lret
mov
xchg
pop
inc
sbb
sub
cmpsb
cmp
pop
mov
push
lods
xchg
inc
movsl
imul
jo
push
sarb
out
jnp
pop
ret
or
add
push
jmp
insl
outsl
xchg
jl
add
pop
mov
pop
mov
sarb
int
xor
pop
xchg
sbb
js
rorl
and
mov
pop
and
sub
sahf
jg
push
xchg
imul
js
fimuls
loope
adc
dec
adc
or
mov
cli
mov
xchg
xor
insl
mov
push
int3
lsl
repnz
fucom
test
test
mov
std
xchg
add
push
aad
cmc
jnp
or
scas
xchg
mov
xor
mov
mov
xchg
or
xchg
push
insl
adc
hlt
popf
push
in
insb
divl
push
subl
and
decb
fbstp
int3
shrl
test
xor
dec
push
pop
jno
xchg
jp
test
mov
mov
nop
pop
adc
ja
or
fidivrl
data16
push
xor
sahf
adc
jge
call
xor
loope
or
out
fsubs
pusha
movsb
sbb
lock
pop
adc
and
imul
sbb
add
fs
nop
xchg
sahf
repz
fdivp
sbb
sbb
icebp
ret
xor
or
xchg
mov
adc
push
andl
fsubp
les
sbb
mov
mov
int3
and
sbb
lds
inc
inc
push
loopne
pop
fs
pop
push
clc
adc
pop
push
mov
gs
xchg
lret
outsb
mov
mov
stc
clc
xor
imul
lods
mov
std
mov
icebp
into
jp
sub
sub
inc
test
clc
std
out
lret
jecxz
adc
inc
push
icebp
ljmp
jae
fdivrs
aad
insl
roll
mov
mov
faddp
add
mov
adc
jo
cwtl
push
testl
test
aam
bound
add
rcr
jl
jne
adc
pop
xchg
shrb
pop
dec
into
loop
sahf
cltd
xchg
idiv
fbld
mov
rep
jmp
lea
insl
stc
sub
lea
pop
fwait
push
gs
repnz
mov
mov
push
xchg
lock
jmp
stos
frstor
mov
mov
sub
pop
loopne
mov
outsb
push
movsb
shrl
sbb
call
iret
test
insl
fisubrl
jnp
sub
mov
mov
jp
xor
jl
int3
das
sbb
cld
pop
test
cmpl
xor
sub
pop
les
jo
jl
out
cmp
dec
jle
and
mov
inc
insb
jecxz
adc
adc
int
and
xor
out
jp
fisubrl
and
push
push
jge
add
adc
push
lea
subb
pushf
lahf
gs
sarb
loope
pop
test
pop
cmp
ret
cmp
dec
jl
push
lret
mov
adc
scas
shrl
test
jno
test
mov
xor
push
aas
cs
pop
inc
push
adc
out
inc
fldt
pop
cld
xchg
dec
sbb
mov
cmp
adc
mov
out
mov
gs
arpl
and
dec
push
or
mov
mov
lret
imul
jge
xchg
and
pop
lods
push
into
movsb
ret
je
iret
push
xchg
insb
out
adc
insb
and
arpl
in
sub
insl
repnz
push
adc
sub
cmpsb
rolb
add
dec
add
sbb
fsts
cltd
test
or
pop
fsubs
mov
jmp
mov
orl
std
mov
jns
iret
pop
mov
test
pop
jecxz
es
les
cwtl
mov
adc
or
add
jg
or
push
mov
dec
push
push
push
arpl
jl
or
adc
push
push
pop
xor
movsl
repnz
int3
mov
mov
sbb
xlat
fwait
sub
add
mov
je
lret
aas
in
sti
mov
pushf
push
insl
push
pop
and
pop
fmuls
mov
xchg
mov
das
jae
addr16
int
enter
xor
inc
popf
add
xchg
hlt
jecxz
mov
add
adc
mov
subb
jge
fsubrs
mov
xchg
mov
movsb
pop
fs
jge
out
in
fwait
dec
mov
mov
mov
sbb
add
rorl
adc
mov
loope
movsb
int
mulb
sub
cmp
lahf
jnp
adc
into
or
inc
pop
sub
rorl
ss
sub
jo
adc
mov
mov
cmpb
fidivl
lret
insb
shl
sbb
ret
xor
and
push
lret
arpl
cmpsl
cwtl
mov
lret
nop
mov
or
xchg
and
or
jge
aaa
lcall
and
sub
add
jmp
xchg
insb
std
aad
ss
cs
test
out
cmpsb
sbb
adc
push
int
mov
test
sub
add
pop
jg
repnz
or
and
icebp
and
pushf
gs
and
cmp
cmpl
jno
push
movsb
xor
cs
aas
cld
ss
pop
mov
cmp
icebp
fidivrl
sarl
jmp
mov
outsl
mov
pop
adc
fldl
movsb
add
addr16
lock
sti
imulb
mov
data16
jecxz
xchg
inc
rcrl
divl
push
fdivrl
xchg
pop
das
out
push
pop
jmp
subb
cmc
sbb
movlhps
dec
pop
adc
inc
jb
dec
bound
cwtl
cmpsb
popa
jnp
rol
sbb
or
rcrb
and
nop
adc
inc
push
pop
loope
xchg
sbb
out
test
stc
adc
jg
inc
jl
push
in
sub
gs
popf
adc
push
add
dec
mov
fadd
lods
jge
xchg
inc
ficompl
xor
xchg
add
cmp
pop
sbb
out
rep
ja
repz
lods
ret
fldt
test
mov
sti
andl
movnti
mov
pop
in
push
dec
call
push
adc
enter
aas
and
push
push
push
mov
sub
dec
mov
xlat
rolb
push
test
mov
scas
movsl
push
fs
or
xor
lods
test
add
push
cmp
sar
mov
cmp
sbb
lret
shrl
inc
rcl
out
call
lods
mov
ja
mov
movsl
pop
cmp
mov
mov
add
mov
aas
sbb
jne
push
adc
mov
js
sahf
sbb
dec
pop
loopne
add
loop
mov
ss
inc
imul
push
xchg
add
stos
sbb
aad
mov
repz
mov
push
pop
push
loopne
dec
fisubl
inc
loopnew
mov
es
pop
xor
sub
in
mov
or
dec
dec
or
push
mov
idivl
lock
mov
inc
dec
pop
rolb
jmp
inc
imul
mov
or
and
je
inc
in
pop
les
inc
adc
xor
inc
fadd
mov
sbb
xchg
jmp
insl
pop
pop
mov
cmp
sbb
rep
jg
nop
sti
rolb
addl
jae
mov
mov
shlb
lret
iret
pop
xchg
fdiv
add
cltd
hlt
xor
imul
jbe
pop
cwtl
test
pop
outsb
fcoms
test
xchg
dec
cmpsl
jecxz
sahf
repnz
cmpb
or
ret
xor
aad
std
rorb
inc
dec
mov
clc
repz
lods
dec
jns
xchg
mov
hlt
iret
or
inc
outsb
orb
push
add
bound
test
movsl
inc
lods
mov
inc
mov
xor
sbb
add
sti
xchg
jb
cmp
sarb
scas
mov
dec
mov
fstps
add
mov
sbb
lods
sbb
int3
out
mov
add
push
sahf
nop
push
mov
sub
addr16
dec
in
sub
jle
addb
fucomip
lret
mov
loop
mov
jo
aad
pushf
sti
push
jbe
roll
inc
xor
sbb
push
imul
mov
mov
pop
leave
adcb
sub
mov
push
jecxz
mov
lcall
fsubrs
mov
mov
scas
es
cli
icebp
das
decb
mov
mov
arpl
dec
push
fidivl
cltd
dec
push
add
pop
push
lahf
jnp
mov
leave
sub
mov
testl
scas
inc
jg
sbbl
mov
sub
fs
cmp
popa
in
jae
or
sub
inc
xchg
movsl
add
fucomi
out
push
adc
sarb
sbb
loop
enter
xchg
outsb
pusha
xor
lret
sbb
jno
dec
loope
adc
inc
xchg
dec
mov
jle
mov
orl
adc
add
pop
inc
fstps
mov
add
dec
push
lret
xchg
clc
loopne
dec
dec
test
jecxz
out
cs
jo
icebp
mov
and
xor
pop
je
aam
adc
push
xchg
push
push
push
cmp
in
jo
rclb
push
lock
xor
mov
int3
push
lock
rclb
jnp
mov
cmp
pop
shr
loopne
cltd
mov
push
aas
xlat
test
pop
fbld
imul
out
sbb
mov
in
inc
add
imul
add
jge
cmp
sub
or
push
sbb
sub
scas
pop
adc
popf
xor
pop
ret
xor
sbb
popa
sbb
push
sub
subl
fwait
jnp
rcrl
imul
push
dec
and
mov
gs
mov
fwait
cld
shlb
fmull
cmc
xchg
pop
sbb
ds
mov
adc
call
repz
xchg
sbb
idivl
jns
subl
adc
hlt
jbe
cmp
or
fcoml
data16
stc
sbb
mov
mov
xor
mov
loope
out
push
inc
popa
mov
faddl
sub
sbb
stos
cmp
fdivp
clc
mov
dec
fisubrs
mov
push
fcompl
arpl
sub
xchg
arpl
pop
xchg
clc
push
sbb
lea
loopne
jnp
lea
pop
inc
sbb
loope
and
sarl
imul
pop
fistpll
fwait
push
sbbb
pop
jle
push
mov
pop
or
sub
ret
test
inc
or
movsb
insb
cmpb
sub
cmpb
cmp
sahf
mov
out
cmpsl
outsb
hlt
scas
sub
and
ja
sbb
hlt
push
fs
and
out
xchg
insl
xchg
ds
scas
ror
fildl
mov
mov
xor
cmpl
xchg
out
and
pop
or
and
es
gs
fcmovb
in
xor
js
pop
sahf
lcall
es
mov
cmpsb
je
aaa
xchg
push
dec
decb
jl
je
pop
fcomps
xor
pop
mov
decl
xor
inc
mov
out
int
outsl
stos
push
push
pop
addr16
movsb
outsb
pop
sub
nop
roll
or
pop
mov
int
lcall
jne
mov
daa
pushf
mov
cli
inc
push
shll
mov
sbb
or
mov
das
shl
cmpsl
out
out
test
pop
or
xchg
pcmpgtb
mov
adc
mov
ret
xchg
push
hlt
add
xchg
dec
ret
fistpll
lea
ss
int3
in
into
dec
hlt
cmp
add
xchg
aas
imul
sbb
mov
sbb
dec
xchg
sbb
mov
out
stc
stos
fucom
sti
fs
pop
inc
movsl
push
pop
call
cmc
sbb
out
fmul
jg,pn
js
mov
in
push
adc
aas
scas
xlat
xor
sarl
cmpsl
fld1
lock
xlat
dec
das
jle
add
iret
or
pop
ds
stos
sbb
push
roll
adc
ret
sbb
pusha
inc
inc
data16
scas
pop
loop
sbb
mov
cmp
stos
pop
dec
sti
stos
and
xlat
push
xor
lock
out
hlt
and
mov
shl
fildll
mov
xor
jo
mov
mov
pop
out
cmp
lret
inc
movsl
in
stos
push
inc
mov
les
loope
loope,pt
or
pop
and
mov
leave
loope
or
sbb
push
sub
mov
ret
imulb
mov
sub
outsl
rorb
xchg
adc
pop
mov
call
xchg
xchg
push
pop
repz
jmp
movsl
cli
outsl
push
cli
in
shrl
jbe
out
pop
mov
nop
dec
push
lods
outsb
adc
pop
xchg
xchg
das
inc
push
mov
mov
sti
cmp
mov
movb
ja
xchg
jo
or
lret
xor
clc
push
pop
loop
mov
daa
bound
or
xchg
test
mov
mov
scas
arpl
lods
inc
in
or
xor
inc
xor
mov
or
jbe
and
testl
mov
mov
mov
ljmp
out
push
mov
inc
push
inc
cwtl
inc
hlt
outsl
data16
dec
lds
rorl
mov
andl
cmpsl
dec
rcrb
fwait
sbb
lock
stos
aad
mov
mov
or
loop
test
notb
mov
jnp
xor
mov
fistps
mov
mov
push
xchg
sbb
cmp
lcall
fistpll
enter
jg
int3
lret
cwtl
insb
dec
iret
cmp
test
sahf
xlat
mov
push
repnz
fnstcw
dec
and
pop
mov
adc
fstps
push
outsl
in
jo
sahf
xchg
inc
js
and
cmp
mov
lock
test
in
es
jmp
and
mov
sbb
pop
in
mov
and
cmp
movsl
xor
test
mov
iret
daa
pop
test
mov
xchg
test
sbb
out
jns
imul
pop
jle
mov
rcrl
mov
ja
stos
mov
neg
adc
adcl
dec
aas
mov
mov
test
mov
out
das
cmc
and
push
adc
ret
in
sbb
xor
jne
mov
arpl
pop
int3
ljmp
inc
or
cmp
cmpsb
pop
inc
push
xchg
imul
popa
lcall
xor
outsb
pusha
jb
les
add
stos
fsubrl
xor
mov
add
mov
daa
xlat
dec
aas
jg
cmp
jecxz
add
xchg
call
mov
aam
pop
lock
or
das
ret
div
jl
jnp
inc
pusha
cmp
hlt
push
sbb
es
push
sahf
lock
add
adc
mov
call
shl
gs
scas
or
sbb
out
into
test
mov
dec
mov
mov
add
hlt
shr
cmc
xchg
cmc
js
dec
movsb
xor
dec
mov
gs
out
push
aad
aaa
jae
pop
nop
mov
sub
jns
mov
lret
sub
cmc
gs
mov
inc
mov
mov
adc
xorl
xchg
adc
test
xchg
in
jae
outsb
imul
jae
adc
lcall
pop
jmp
mov
scas
fnstenv
sarb
add
fldt
or
mov
aam
or
mov
fists
add
mov
xchg
cmpsl
mov
jae
push
fdivrl
ds
sub
sub
dec
cmpsl
push
fmull
mov
shr
ret
cmp
mov
das
nop
mov
jp
ret
leave
xchg
dec
inc
sub
xchg
xor
xchg
inc
clc
lret
imul
test
sub
pop
addr16
push
xchg
mov
push
cmc
jge
mov
dec
or
out
dec
mov
or
xor
das
fwait
sub
ja
add
push
les
imul
mov
rorl
jp
addr16
push
jbe
push
lea
mov
mov
sbb
pop
stos
scas
push
rol
xor
test
popf
sbbb
xchg
xchg
fdivl
mov
push
inc
gs
jbe
fistpll
into
outsb
fcomps
orl
jecxz
aaa
stos
mov
fsubl
mov
repnz
and
fwait
lret
test
add
cmp
xchg
movsl
jge
xchg
mov
jmp
cmc
xchg
mov
adc
dec
lcall
dec
divl
movsl
jno
movsl
gs
mov
add
out
jg
xor
bnd
orl
popf
popf
dec
in
jo
fbstp
xchg
dec
sbb
stos
cwtl
loope
rolb
hlt
inc
push
hlt
cmpsb
into
fs
jnp
or
or
or
cld
movsb
push
mov
int
ror
insb
and
xchg
jo
popa
xchg
fsts
xchg
or
test
test
pop
pop
add
orl
push
ret
adc
and
daa
xchg
pop
xchg
mov
je
inc
mov
and
dec
jne
add
popa
jae
rorb
pop
xchg
scas
sbb
push
xlat
inc
add
dec
pusha
xor
fs
addr16
xor
fcomps
xchg
jo
enter
add
xchg
movsb
and
mov
das
mov
and
mov
or
push
push
adc
lahf
jae
cs
pop
dec
inc
pop
inc
stc
lret
loopne
int
imul
sbb
sub
jp
ficoml
and
and
jae,pt
nop
imul
mov
jle
scas
push
outsb
jno
or
xchg
pop
or
cs
mov
pushf
fidivl
imul
xor
jge
sub
int3
test
jmp
into
cmp
iret
pop
mov
loopne
sub
and
movsl
add
push
jge
test
pushf
pop
out
out
dec
insl
mov
inc
xchg
mov
push
addb
xchg
aaa
push
pop
insl
cmp
rcr
adc
shlb
dec
pop
pop
pop
scas
pop
shrb
loop
jae
int
push
or
and
sti
xor
sti
addr16
bound
fdivl
push
lret
jbe
nop
mov
leave
hlt
rorb
lret
loop
lea
ret
push
jmp
xchg
rcll
lock
jl
dec
jns
lahf
dec
mov
aaa
jecxz
xchg
push
in
sbb
outsl
xor
or
mov
imul
enter
loop
jl
sti
bound
add
and
jb
jbe
sti
cs
cld
scas
or
or
adc
mov
inc
aam
mov
jle
pop
in
xchg
xchg
dec
fwait
mov
shrl
add
xor
or
adc
inc
ret
popf
ret
adc
sub
cltd
mov
dec
or
mov
dec
lock
les
cmp
and
mov
mov
ficompl
jmp
insb
movsb
jne
inc
inc
mov
mov
xchg
cmp
xorl
pop
into
add
xchg
rcll
ret
aaa
inc
lcall
sti
xlat
test
add
mov
out
cli
xchg
pop
sbb
push
dec
mov
leave
and
mov
stos
iret
push
pop
or
mov
das
cld
inc
out
xor
inc
dec
icebp
cld
add
fisubrl
in
stc
push
push
decl
dec
jb
ljmp
fcomps
sub
adc
pop
mov
add
adc
mov
inc
pusha
ss
divb
shrb
loopne
or
sub
rol
ror
data16
popa
inc
or
adc
cmp
lock
arpl
test
mov
jbe
push
dec
cmp
adc
xchg
pop
pop
or
stc
in
aas
jne
inc
inc
test
lods
imul
ret
call
dec
push
mov
pop
rorb
push
test
fldenv
pop
mov
xor
shlb
das
xchg
fbstp
insb
or
pusha
mov
pop
xchg
jmp
lret
in
cmp
mov
sbb
pop
mov
sub
cld
push
dec
sbb
mov
mov
rolb
inc
mov
adc
je
xor
lock
add
jae
push
fwait
nop
and
cld
aam
and
stc
xchg
xchg
push
sub
repz
xlat
sub
or
push
dec
inc
mov
mov
mov
xor
xor
sub
adc
dec
adc
lods
adc
and
lods
sub
andb
and
jecxz
or
xlat
rcrl
jmp
push
pusha
test
mov
and
ficompl
mov
jns
shr
xor
sbb
lods
inc
mov
mov
xchg
xchg
cmpsb
xchg
lret
mov
fwait
mov
inc
inc
or
iret
mov
arpl
xor
test
ds
mov
inc
dec
sbb
dec
jg
push
icebp
push
in
fsubs
push
and
dec
cld
mov
in
or
cmpsb
test
stos
cmpsl
hlt
pop
lods
arpl
pop
fmuls
xlat
in
or
popf
sub
and
cmpsl
inc
adc
sbb
repz
push
sbb
sbb
js
hlt
icebp
and
push
mov
fiadds
fstpl
and
mov
lea
dec
out
popf
loopne
xor
inc
xor
lods
pop
xor
mov
push
jne
fnstcw
mov
and
xlat
push
insl
cli
xor
int3
jmp
jge
jb
pop
je
sbb
or
data16
add
sub
cmp
adc
clc
lods
or
cwtl
inc
fldl
mov
in
arpl
mov
loopne
out
inc
sbb
fdivs
xor
fs
mov
aad
push
nop
mov
add
inc
jnp
sbb
arpl
lods
ret
add
mov
add
add
xlat
cmp
insb
inc
les
rcll
test
lds
jo
mov
fwait
lods
shrb
xor
js
enter
ret
jp
cli
test
insb
outsb
testb
loopne
cmp
xlat
inc
or
popf
leave
add
pop
fistpll
lds
push
popf
xor
out
js
mov
fstpl
jp
aaa
daa
mov
pop
jg
sub
cmp
adc
sti
scas
pusha
mov
dec
repz
popf
shl
add
xor
adc
jl
push
packsswb
mov
bound
push
int3
aad
cmp
loop
shrl
pusha
out
in
mov
stos
sbb
cmp
push
jns
pop
icebp
leave
pop
repnz
mov
push
addr16
sub
sbb
fwait
xchg
mov
dec
rorl
cmc
mov
out
out
stc
addb
mov
lds
shrl
leave
mov
mov
mov
mov
push
ja
sar
lret
std
and
repz
movsb
or
testl
ret
sbb
ja
scas
ss
sub
or
orb
sub
sbb
ret
and
adc
and
or
leave
jnp
xchg
pop
and
popf
jmp
jns
ficoml
pop
or
lods
js
cmp
or
mov
ret
xor
add
adc
out
pop
dec
loop
outsl
rclb
sbb
in
dec
outsl
dec
mov
sarb
pop
xor
das
jmp
cmp
push
mov
mov
xchg
xor
sbb
cmpxchg
mov
repz
ds
xor
outsb
cmp
and
ss
mov
sbbl
fwait
dec
arpl
adc
add
scas
jl
dec
pop
in
test
je
mov
push
jmp
lret
leave
cmp
insb
dec
and
fldenv
lcall
gs
sub
sti
mov
stos
mov
xor
in
sbb
jnp
popf
ljmp
cmp
and
push
xor
addr16
dec
mov
rorb
mov
xor
in
repz
or
lahf
sbb
in
fs
or
cltd
add
add
mov
push
push
adc
sti
cmp
xchg
in
mov
push
cmc
addr16
xor
shlb
loop
stc
sub
fwait
aas
out
and
enter
cmp
push
stos
into
xor
add
mov
xor
dec
aam
or
arpl
orl
adc
imul
push
mov
mov
mov
pop
pop
mov
ja
sub
out
mov
ret
pop
mov
rolb
add
or
jno
jbe
adc
std
lret
cmpsb
aam
jmp
mov
or
jecxz
jno
es
fisubrs
iret
loopne
in
push
xor
pop
mov
rorl
std
xor
or
pushf
pop
stos
aad
and
inc
cmpsl
sarb
mov
adc
push
mov
ffree
orb
lea
push
imul
hlt
ds
gs
pop
push
lods
inc
inc
cmp
into
sbb
cmpsl
mov
jg
mov
xor
jne
adc
movsb
xlat
add
mov
jle
loopne
aas
and
addr16
jmp
cmpsb
and
mov
cmp
fimull
mov
inc
insl
test
xor
inc
mov
fdivs
mov
fs
lahf
and
jp
push
pop
xor
clc
adc
xorb
dec
subb
jo
scas
dec
ret
js
sbb
pop
mov
adc
dec
inc
inc
fwait
sbbb
test
loopne
movsl
movsl
lcall
xchg
adc
aaa
mov
dec
jmp
sub
cmpb
sbbb
aad
test
lds
xor
aad
ja
js
jns
cmp
movsl
cli
mov
add
dec
jnp
std
cmp
call
ljmp
fwait
aam
rcll
jmp
lods
sti
xchg
mov
insl
sbb
push
or
adcb
stc
popa
fs
add
jg
inc
and
push
xlat
fbstp
xchg
mov
fisubl
fcomps
jne
mov
add
or
sti
mov
sbb
adc
add
xor
jnp
out
cmp
xor
das
out
insb
xlat
cld
stc
subb
mov
sbbb
aaa
cmp
lcall
es
jle
pop
gs
lds
mov
mov
pop
in
mov
push
jno
adc
mull
push
rcr
jmp
adc
out
std
sbb
addr16
fdivs
addr16
jle
subb
xchg
les
push
outsl
xchg
ret
int
push
lret
insb
jb
mov
enter
mov
arpl
sbb
es
repnz
pop
insl
inc
bound
dec
das
enter
mov
rorb
out
dec
int
and
fsubrs
mov
and
lret
orb
or
sar
or
xor
jae
sbb
xchg
or
adc
inc
jmp
lock
sti
cmp
gs
ds
lcall
adc
mov
pop
dec
sbb
inc
dec
push
dec
and
lock
testl
and
in
xor
mov
aaa
frstor
addr16
push
and
xor
xchg
cli
add
jecxz
testl
inc
xchg
adc
movsl
sbb
movsb
imul
scas
rcr
jnp
test
bound
adcl
cmc
shlb
xchg
outsb
mov
pop
sti
sti
mov
sbb
test
jl
mov
adc
xchg
loopne
test
lods
lcall
mov
push
cltd
mov
mov
inc
loop
mov
or
lcall
es
and
pop
cmpb
cltd
test
mov
dec
mov
scas
mov
movsb
and
mov
setge
lock
cmp
cmp
mov
sbb
inc
xor
or
shll
cmpsb
lods
pop
push
and
les
das
mov
int
cli
addr16
dec
mov
cmp
mov
dec
cmpb
outsl
idiv
ucomiss
xchg
clc
lock
sahf
std
cmp
ret
and
rcrb
cmpsb
mov
rcrb
stos
scas
adc
add
aaa
fldcw
ret
sub
jno
push
pop
dec
mov
outsb
fs
and
adc
sbb
aad
cmp
faddl
cli
dec
mov
or
sub
cltd
loop
cmpsl
cmp
xchg
xchg
fsubrp
add
mov
mov
add
mov
mov
jle
insl
mov
repnz
loope
xor
jo
inc
cmp
mov
push
sbb
daa
test
push
scas
dec
mov
mov
add
dec
fistpl
jp
or
pop
or
push
popl
xchg
adc
pop
push
adc
or
xchg
lods
xor
xchg
ret
out
not
outsb
fsubr
push
idivb
testb
mov
adc
out
bnd
cs
mov
and
fcmovb
nop
shrl
pop
sbb
icebp
sub
ss
lock
out
sub
xchg
sbb
mov
mov
test
jb
arpl
lods
rcrb
or
stos
pop
sub
and
mov
lods
xchg
inc
xor
pop
das
lock
mov
je
andl
dec
sub
push
pop
add
pop
jge
stc
lea
test
or
mov
push
adc
adc
pop
jbe
jno
in
scas
and
loope
or
push
insb
cmpsl
rorl
jmp
daa
fwait
xchg
inc
repz
jge
ret
jns
inc
lods
and
into
pop
ficoml
nop
dec
ja
cmp
test
out
xchg
jp
icebp
mov
push
jae
mov
fwait
ljmp
loop
in
sbb
aam
xor
cmp
bound
push
cmp
push
rolb
cmp
add
loopne
leave
fadds
mov
jno
dec
aaa
das
imul
mov
sti
int
cld
in
packuswb
mov
mov
sahf
int3
ja
pop
sahf
adc
and
test
cltd
sbb
mov
sub
push
sbb
or
out
sub
add
jae
mov
mov
ret
cmpsb
xchg
mov
sbb
push
cwtl
adc
push
insl
mov
jg
mov
sar
mov
xor
shlb
pop
pop
out
mov
in
inc
int3
mov
das
xchg
aaa
lret
pusha
mov
adc
sbb
gs
pusha
mov
enter
xchg
add
mov
lods
out
andl
jp
xor
push
stos
cs
cmpb
add
pop
das
hlt
std
push
sti
lods
pop
les
mov
mov
dec
dec
repz
cmpsl
sbb
int3
int
cmpsb
leave
div
or
or
outsb
jl
xchg
ret
inc
popf
push
mov
ds
ds
push
flds
adc
dec
jb
icebp
stos
sub
or
cmc
js
cmp
push
rcrl
cmp
or
lret
pop
inc
mov
xchg
push
mov
dec
xor
into
in
dec
iret
loopne
push
pusha
clc
lret
mov
jb
lcall
and
dec
lock
inc
lcall
fwait
sub
je
test
xchg
pop
inc
and
stos
pop
jb
loope
push
sahf
fisubrl
fisubs
adc
dec
xchg
imul
dec
pop
xchg
mov
fucomip
ret
inc
mov
inc
jbe
push
stos
enter
mov
enter
in
sahf
xor
mov
xchg
popa
push
hlt
pop
leave
jnp
mov
jno
mov
jle
mov
out
adc
lods
shrb
test
pop
or
test
push
push
cmp
out
and
lcall
and
xchg
push
sahf
jg
daa
sub
pop
shll
jecxz
in
les
jmp
push
les
jb
xor
push
xchg
dec
xchg
fwait
gs
jo
iret
jmp
or
add
inc
add
inc
jb
pushf
mov
js
andl
jl
call
adc
sbb
rclb
dec
mov
jp
dec
movsl
pop
xor
push
push
dec
cmp
mov
xlat
jmp
mov
mov
jb
and
or
lret
leave
dec
xor
mov
inc
mov
sub
popf
pop
ret
xchg
fstl
mov
rcll
push
jmp
mov
and
enter
lret
inc
xchg
xchg
or
popf
popa
sbb
repz
stos
inc
imul
popa
movsb
adc
pop
jge
aad
jp
fildll
outsb
xchg
inc
jl
mov
adc
push
inc
data16
testb
push
mov
ret
das
add
inc
cmp
lock
lods
lcall
or
mov
jmp
lahf
stc
jecxz
sahf
adc
imul
lret
and
or
test
add
xchg
mov
outsb
inc
test
push
cltd
lret
push
sub
cmc
pop
sbb
inc
pushf
lods
daa
roll
mov
mov
loopne
arpl
daa
add
xchg
add
aas
in
fs
in
jecxz
inc
test
jg
imul
clc
sahf
leave
jbe
pop
out
pop
cmp
es
push
call
scas
dec
mov
shrb
fucomip
mov
orb
mov
xchg
shlw
add
rcrl
insb
push
cmp
mov
mov
lret
dec
and
fiadds
mov
ror
in
aaa
mov
sbb
clc
push
mov
popa
push
in
outsb
lahf
fiadds
outsl
rclb
js
pusha
movsl
xor
imul
aad
mov
lcall
aas
xor
add
pop
jge
cmp
xchg
and
mov
scas
cmp
jge
int3
mov
f2xm1
rcrb
lcall
fildll
dec
pop
mov
or
dec
dec
mov
push
ja
sub
std
outsl
mov
jo
repz
xchg
jmp
pop
mov
arpl
lods
in
rcrl
adcb
clc
mov
imul
xor
sahf
pop
sub
lods
push
scas
jmp
dec
in
jo
cltd
mov
xlat
push
lock
rcrl
adc
bound
test
cmp
in
in
push
jne
pop
and
repz
cmpsl
jb
mov
mov
pop
popa
lret
idivl
lods
pop
xchg
jecxz
push
sub
fsubrs
add
mov
inc
dec
push
jge
int3
shrl
mov
stc
dec
sbb
popf
dec
dec
dec
mov
scas
call
hlt
divl
xor
stos
hlt
rdpmc
jl
add
in
jl
xchg
addr16
mov
xor
cmp
loopne
add
xchg
xchg
out
dec
stos
movsl
aad
sub
sbb
mov
ss
sbb
dec
push
add
jg
push
sbb
push
pop
stos
and
int3
mov
and
add
mov
inc
lods
dec
jne
sub
xchg
aam
lds
cmp
sbbb
adc
jg
repnz
scas
mov
ds
adc
and
push
add
sub
add
icebp
add
or
ret
sbb
xchg
and
mov
sub
mov
sbbl
xchg
jns
cmpl
std
jns
inc
jmp
or
inc
cmpsb
mov
out
popf
mov
fiadds
fwait
shr
int3
rcrl
dec
fs
cmp
sbb
cs
or
das
sub
aas
and
dec
clc
iret
pop
sub
add
movb
xor
adc
cld
sbb
add
out
call
and
jnp
sbb
xchg
andl
gs
jg
test
out
mov
push
xor
cmpsb
ret
jle
lret
xchg
sub
out
push
dec
repz
jle
dec
lea
loopne
dec
mov
insl
cmp
mov
sub
add
pop
xor
cmpsl
push
pop
xchg
mov
ret
scas
or
push
xchg
arpl
inc
jp
arpl
mov
mov
test
incb
jl
mov
sbb
in
imul
or
outsb
mov
cmp
divl
into
pop
sub
cmp
sbb
or
shrb
sub
sub
xor
rcrl
incb
mov
xor
dec
xchg
and
mov
lds
ja
push
sub
fadds
stos
imul
lahf
jns
jns
xchg
push
loope
clc
pushf
mov
sub
push
xchg
das
inc
outsb
inc
rcrl
aad
scas
int3
dec
data16
cmp
pop
faddp
mov
mov
mov
scas
andb
dec
dec
adc
imul
sbb
push
and
ljmp
mov
jno
jbe
xor
pop
push
mov
xchg
lahf
jge
add
mov
mov
push
loop
jl
fidivrl
add
enter
dec
mov
imul
or
imul
or
outsb
pop
and
jns
fsub
in
and
jp
fiadds
cltd
jnp
nop
add
sbb
mov
pop
jne
mov
and
sbb
aas
lret
mov
jmp
sbb
and
popa
mov
mov
inc
push
iret
add
jge
inc
rol
sti
xchg
mov
inc
out
dec
std
pop
jnp
rorb
fidivrl
fisubs
mov
lret
rcr
fwait
mov
jno
mov
sahf
sahf
data16
pop
xchg
cmpsl
daa
fildll
jns
jmp
outsl
lods
out
fldpi
jle
jbe
lcall
pop
mov
test
xchg
mov
shrb
or
test
xor
add
sarl
sbb
or
jle
xor
mov
test
mov
js
xchg
sub
add
sub
cmp
sbb
addl
lea
xchg
imul
jo
aam
mov
pop
dec
pop
xor
stc
and
mov
cmc
sti
sbb
xor
pop
inc
sub
cmpsb
mov
sbb
rol
stos
daa
add
xchg
fdivrs
les
cmp
adc
cwtl
or
test
hlt
clc
fldt
mov
sub
arpl
test
jmp
mov
add
pop
jecxz
loopne
push
and
sahf
bnd
mov
stos
sub
pop
stos
fisttpll
jno
lods
std
int3
or
js
pop
sbb
xor
inc
adc
test
or
in
push
xchg
and
adcb
jae
loope
ret
fistpll
aas
mov
jae
jne
pop
or
pshufw
sbbb
mov
out
pop
or
addb
xchg
push
rolb
mov
adcb
fidivrs
icebp
cmp
lcall
or
mov
sarb
mov
sub
pop
xor
push
outsl
xlat
scas
cli
dec
fdivr
inc
pop
xchg
idiv
dec
cmp
jb
and
bound
or
cmp
inc
cmp
jnp
jge
add
cmp
pusha
mov
dec
jnp
lods
lock
arpl
dec
push
pop
pushf
dec
ret
and
push
push
lcall
fldcw
ss
push
xchg
add
jle
jecxz
dec
into
loop
pop
mov
jp
mov
push
mov
hlt
dec
ds
lock
sbb
adc
mov
cmp
xchg
adc
dec
push
lahf
nop
mov
and
mov
cmp
jae
pop
imul
push
les
mov
out
out
repz
pop
aas
jp
insl
in
inc
dec
mov
pop
push
add
jno
mov
pop
scas
xchg
jmp
inc
and
push
and
dec
cltd
push
xchg
add
mov
mov
popf
push
lret
inc
ja
ret
mov
or
pusha
lds
icebp
sbb
push
and
adc
push
push
or
sub
lods
pusha
mov
mov
and
cmp
jp
mov
out
call
adc
sbb
cli
or
mov
mov
mov
pop
push
sbb
push
adc
xchg
xchg
sbbl
cmp
fnstcw
xor
adc
push
pop
inc
dec
enter
pop
mov
xchg
subb
cmp
push
lds
out
add
mov
push
leave
loopne
aam
dec
fildl
cmp
enter
jno
stc
rcrb
jbe
mov
std
or
mov
repnz
jecxz
push
test
jmp
int
dec
jne
cmp
jo
adc
pop
pop
pop
lock
mov
pop
pop
mov
dec
dec
fcoml
mov
jle
pop
es
das
stos
sbb
lea
mov
icebp
es
clc
mov
daa
in
mov
bound
xor
xor
adc
pop
loopne
or
mov
pusha
lahf
fmull
pop
fidivs
mov
mov
or
add
subb
or
push
shll
js
mov
mov
rolb
cmp
nop
push
xor
test
xor
jo
jmp
lret
jmp
sahf
dec
addl
adc
insl
iret
sub
scas
push
cltd
push
jae
push
jnp
cmp
fdivrl
test
aam
jg
outsb
out
inc
jp
or
inc
daa
pop
push
rorl
repnz
insb
int
sub
mov
cmpsb
xchg
inc
int3
int
inc
pop
outsb
push
jne
xorb
test
test
adc
xchg
lods
in
adc
adcb
and
lret
repz
loope
mov
jnp
mov
mov
sbb
movsl
cltd
lret
pop
sahf
push
lcall
test
fs
pop
repz
nop/reserved
shll
cld
pushf
mov
sbbl
outsb
mov
mov
pop
ds
outsl
mov
pop
push
sub
mov
inc
dec
xchg
jo
push
insl
mov
hlt
sbb
std
sub
int3
enter
mov
int3
call
mov
adc
xchg
jp
das
mov
outsl
cmp
jae
ljmp
ss
aam
loop
popa
ret
subb
mov
sub
nop
lods
lret
xchg
jge
pop
shll
xchg
insb
dec
mov
int
popf
mov
jmp
stos
pop
xor
fisubrs
fldl
mov
int
aam
fisubrs
in
scas
lock
mov
ret
jns
sbb
push
cmp
push
mov
mov
lock
sbb
hlt
mov
mov
add
popa
lea
ret
call
adc
xor
mov
mov
or
lret
xchg
scas
test
pop
divb
das
call
aas
daa
sbbl
hlt
or
jb
and
dec
test
mulb
fdiv
xor
xor
cmovne
int
lods
adc
cld
and
sub
fmuls
pop
shrb
ja
add
adc
adc
add
insl
js
pop
imul
cmp
jnp
std
bound
pop
xorb
cmp
dec
sub
popf
divps
rcll
je
call
sbb
inc
pop
mov
jp
sti
fadd
mov
pop
mov
sti
mov
cs
jg
andl
mov
or
pop
xchg
mov
cltd
dec
popa
ret
pop
xor
xchg
fsubrl
cltd
add
jb
lret
add
add
ret
xorl
lock
mov
aad
neg
push
js
and
dec
jp
leave
jp
aaa
mov
add
and
push
sub
dec
and
psubw
cwtl
jecxz
out
fwait
sbb
mov
push
dec
loope
test
negl
xchg
push
int
sub
or
jns
jl
fsubrl
xor
sbb
dec
push
pop
insb
je
push
fimuls
in
shll
pop
loope
jae
lahf
rcrb
cli
adc
test
insl
lods
addr16
mov
pop
sub
cmp
cli
pop
scas
in
clc
push
pusha
xchg
xchg
adc
mov
aam
sub
mov
dec
push
jmp
pop
dec
das
aas
mov
pop
arpl
mov
cmp
outsb
fdivrl
cmpsb
push
push
cs
rorb
pop
ret
mov
mov
addb
push
stos
lock
sub
call
lret
mov
out
jmp
or
movsb
das
daa
sahf
cli
pop
lahf
test
das
dec
push
jge
leave
add
adc
xchg
test
sbb
xchg
or
xor
iret
dec
cmc
push
orl
ret
jmp
adc
xchg
pop
inc
data16
sbb
xchg
jmp
push
cs
cmpsl
sbbl
cmpb
pusha
pusha
inc
mov
adc
cmp
sub
pop
inc
hlt
dec
call
jbe
ficompl
sub
imul
fdecstp
mov
lcall
andl
mov
in
cmp
fcom
inc
xchg
aaa
sbb
je
mov
outsl
insl
inc
adc
jb
or
out
scas
add
stc
mov
mov
stos
xor
fcoms
adc
jle
in
push
cmp
push
pop
adc
push
je
sbb
pop
push
inc
stc
jno
adc
loop
xchg
and
dec
mov
push
lcall
enter
imul
mov
xchg
sub
cmp
pop
lock
sbb
mov
adc
outsb
lods
stos
lds
or
sub
mov
xor
scas
pop
mov
and
or
and
sub
add
pop
mov
mov
fcomps
sub
and
pop
ja
xlat
rolb
mov
jl
js
loopne
cmp
bound
test
inc
push
fstpl
cld
stc
sbb
mov
jbe
daa
xlat
rcrl
fstl
lahf
jg
stc
ret
push
xchg
pop
xor
xchg
jb
arpl
je
ja
adc
in
fwait
ret
mov
arpl
pop
xlat
mov
add
repnz
icebp
dec
roll
pop
pop
ret
and
fwait
std
xor
jbe
mov
out
in
aaa
jecxz
add
and
shrb
lods
lret
jnp
mov
out
loope
fbld
arpl
outsl
decl
mov
stos
push
inc
sub
out
sub
js
inc
mov
pop
and
daa
xchg
inc
lret
cmpb
mov
jns
test
fidivl
jmp
sbb
loope
hlt
dec
shrb
push
mov
das
movsb
and
xor
sbb
mov
jmp
push
dec
jl
and
push
xor
lock
inc
xlat
jnp
xchg
mov
shlb
push
sub
in
mov
shll
xchg
dec
push
lahf
jp
xchg
clc
mov
cs
test
ds
xor
sarl
jp
adc
pop
nop
pop
lcall
popf
aam
add
mov
sub
xchg
or
add
aad
cmp
insb
mov
push
jmp
add
add
stc
jbe
dec
leave
jb
idivl
jl
test
out
sbb
popl
inc
add
ret
aas
jo
pop
jnp
orl
cmp
jecxz
gs
add
cmp
ret
or
aad
mov
dec
sub
stc
sub
pop
fwait
mov
sbb
add
cwtl
inc
sub
mov
test
insl
shll
ret
js
fdivp
stos
pop
mov
inc
sbb
mov
xchg
in
xchg
lods
push
dec
stos
lds
in
pushl
aaa
mov
pop
mov
mov
stos
or
daa
fisubl
shlb
xor
sbbl
sbb
lahf
fcmove
mov
notl
sub
adc
das
divl
lods
ret
in
and
cmp
test
jb
lea
leave
mov
sub
inc
push
test
inc
push
stos
out
push
clc
aam
push
jge
sti
xchg
mov
sub
and
cmpsl
mov
lods
mov
inc
aas
ud2
int
aad
cmc
pop
dec
imul
and
inc
mov
out
xchg
add
adc
add
outsb
repnz
data16
cmpsb
pop
sbb
and
in
mov
mov
cld
mov
in
pop
lret
pushf
push
daa
nop
jo
xorl
fldenv
pop
mov
or
or
mov
retw
pusha
mov
into
and
fcmovnb
xchg
mov
gs
pop
cmp
sbb
cmp
mov
cs
stc
jl
cld
jo
adc
jnp
inc
je
jae
pop
adc
dec
mov
scas
addr16
out
ljmp
and
add
xchg
imul
imul
and
xchg
dec
and
xor
in
inc
pop
testl
into
inc
bound
in
imul
or
sbb
push
adc
adc
jno
imul
lea
out
mov
cltd
test
loop
inc
xor
or
xor
jb
fimull
fidivl
aad
and
xor
out
jecxz
repnz
inc
fwait
cltd
outsb
aaa
or
xor
bound
test
sbb
cld
ret
test
add
out
in
addr16
push
and
add
imul
mov
sbb
rcr
adcb
jo
or
mov
mov
mov
lods
idivb
push
jno
int3
jl
jp
mov
push
pop
fsubs
pop
or
inc
or
int3
pushf
lea
mov
add
xchg
inc
sbb
sub
inc
sahf
test
hlt
lock
les
mov
xor
mull
push
mov
nop
dec
fistpl
dec
cmc
xorl
cmp
pop
mov
xor
pusha
cmp
dec
leave
popa
xor
adc
ds
imul
jg
mov
ja
dec
jbe
jle
or
push
and
mov
xor
dec
fcoml
emms
dec
xlat
mov
xchg
test
fildll
fiaddl
jle
int
aas
aad
call
pop
push
cmp
push
in
lea
push
sub
add
push
icebp
cld
out
pop
in
dec
xchg
xor
and
repz
pop
mov
aaa
sbb
mov
scas
pop
stos
mov
jno
lea
repnz
mov
loope
les
fldcw
adc
lcall
fs
cmp
and
rorl
dec
add
cmp
imul
rolb
cwtl
jl
scas
pop
lods
cmp
mov
jne
xlat
stc
xchg
mov
add
incb
ret
mov
inc
sbb
add
push
jnp
bound
rcrb
dec
add
xor
jne
add
add
sbb
xor
inc
sub
push
lcall
out
dec
push
shrb
pop
mov
sub
pop
xchg
int3
fiadds
mulb
in
mov
inc
adc
cmp
pop
pop
call
fimull
inc
sub
gs
pop
or
cs
daa
adc
cli
mov
push
enter
mov
iret
iret
cmc
pop
repz
ljmp
add
pop
push
dec
int
sbb
ret
pusha
xchg
mov
and
rol
sbb
adcb
push
mov
scas
xchg
popa
fldcw
xor
scas
pop
dec
push
sub
ss
xchg
sbb
std
mov
push
xor
jmp
sub
fwait
add
and
push
add
imul
inc
rolb
push
rclb
es
mov
mov
mov
test
je
dec
inc
fwait
into
xor
jne
cmpsb
ret
loop
in
je
faddl
mov
push
aas
imul
stos
fisubrs
daa
gs
sahf
pop
arpl
sub
pop
dec
adc
icebp
mov
push
jmp
popf
push
and
lods
mov
aas
les
cmp
xchg
fst
ss
shrl
jnp
pop
cmpsl
jne
and
jecxz
dec
iret
in
cmpsb
lahf
ret
mov
ja
sahf
add
cmp
int3
sub
out
call
icebp
xchg
pop
sub
sbb
add
jno
add
int3
les
stos
pop
sbb
sbb
and
loopne
jnp
fistpl
inc
sti
sub
shlb
xlat
lea
fiaddl
je
js
xchg
xlat
cmp
pop
sbb
jmp
rol
fs
add
iret
test
cmc
ret
add
cmp
idivl
mov
add
call
dec
and
daa
cltd
es
movsb
sti
or
add
mov
in
loopne
andb
xor
test
lods
testb
inc
jge
push
push
in
or
sbb
cwtl
jle
outsb
insl
popf
dec
push
loope
and
nop
pop
inc
xchg
xlat
fidivs
clc
xchg
lods
pop
lds
sub
clc
jg
cmp
mov
cmp
xor
mov
jmp
cmpsl
pop
out
bswap
mov
mulb
mov
repz
and
inc
xchg
out
sbb
push
mov
sbb
mov
sub
fs
or
xchg
jge
lret
dec
pop
pusha
xchg
test
jne
xor
cwtl
out
xchg
fwait
jle
dec
pop
nop
hlt
dec
and
xlat
lcall
cld
and
loop
and
jmp
push
rcr
adc
adc
mov
test
xchg
ss
stos
fsubp
cld
popa
test
push
xor
adc
adc
push
dec
in
jb
xor
cs
xchg
push
addr16
mov
lods
icebp
loopne
pop
insb
clc
rol
push
enter
inc
pusha
in
mov
in
xchg
sysret
adc
das
pslld
fdivl
mull
add
cmp
sbbl
inc
add
je
mov
cmp
cmp
dec
push
add
fdivs
xchg
mov
jns
fisttpl
and
arpl
jp
test
movsb
testl
shr
in
int3
inc
mov
jno
adc
daa
out
std
jl
es
inc
mov
jno
mov
inc
adc
test
mov
sub
cmp
test
sbb
test
dec
inc
adc
cmp
xlat
roll
dec
lods
mov
jb
mov
lea
std
test
cli
ds
setbe
jge
adc
add
pop
ljmp
test
sub
loopne
jne
adcl
lods
push
mov
xor
xchg
aas
or
scas
imul
fcmovnb
push
sbb
mov
in
jge
push
dec
out
es
addb
in
fadds
sbb
inc
jb
shlb
mov
stos
jbe
push
imul
add
pop
inc
cmp
push
jl
xchg
inc
mov
stos
inc
cmpsl
outsl
mov
fstpl
sbb
dec
hlt
movl
and
and
or
insb
push
push
and
out
inc
xchg
cmp
or
or
mov
out
aad
cs
pop
movsb
lcall
jmp
sub
enter
mov
cld
fstpl
lret
scas
arpl
js
fisubs
int3
outsb
jno
cmp
adc
outsl
out
movsb
mov
mov
insb
shll
sahf
int3
insb
stos
pop
rcrb
stos
xchg
loop
mov
xor
fmulp
lds
push
popa
lcall
cmp
das
jns
fcompl
inc
and
mov
jp
xchg
pop
cmp
das
dec
xchg
jp
data16
loopne
mov
repz
outsb
lods
das
lret
fdivrl
les
inc
mov
push
mov
mov
mov
jp
lret
dec
icebp
xchg
xchg
dec
push
sbb
sub
cmp
cmc
es
cmp
xor
mov
lahf
ds
addr16
popa
or
mov
rol
out
out
repnz
push
stc
fstps
or
pusha
mov
mov
roll
outsl
mov
mov
xchg
xchg
adcb
add
cmpsb
and
fsubr
mov
sar
arpl
insl
inc
pop
jns
repz
fmuls
xor
addl
and
jbe
test
shrl
cmpsb
sub
push
repz
cld
ljmp
scas
jle
loopne
cli
push
or
in
xchg
push
jp
xor
xchg
dec
aas
das
movsl
push
adc
cmp
ret
push
popf
mov
or
fs
adc
mov
jmp
xchg
shl
out
xor
and
sbb
pop
test
add
lcall
stc
jbe
cmp
enter
lea
je
lret
inc
inc
imul
outsl
inc
sub
jmp
push
mov
out
mov
lods
repz
call
lret
dec
push
xor
jne
xorb
add
sbb
jmp
cmp
cs
mov
int
mov
out
and
jle
inc
xchg
aaa
xchg
add
inc
pop
push
cmp
nop
xchg
pop
jb
ss
rcll
popf
jno
loopew
xor
push
imul
int3
lret
movsl
int3
adc
lcall
add
sbb
jmp
pop
call
mov
fs
aam
movb
push
dec
inc
pop
add
inc
in
dec
dec
jo
mov
cmpsb
cmp
test
mov
sbb
rol
xchg
or
mov
xlat
mov
mov
dec
push
stos
aaa
loope
add
ljmp
testl
pop
cs
rcl
and
push
jnp
sub
jne
fadd
scas
xchg
sti
hlt
xor
in
rolb
lret
rcrb
sysret
or
addl
sahf
or
cli
fs
xor
mov
loop
mov
add
push
cs
mov
in
jmp
mov
imul
fdivrs
inc
sbb
jno
mov
lock
std
sahf
xchg
aam
cwtl
ljmp
mov
rcrl
dec
dec
cld
inc
cld
sbb
ljmp
fimull
popa
js
adc
or
pop
and
fnstsw
divl
lea
fs
xchg
xor
pop
dec
jbe
pop
fdivrl
cs
aas
pop
add
cmpsl
sbb
add
mov
rorl
cmp
cli
ror
fcomps
mov
lahf
ljmp
cmpsb
fwait
xchg
sahf
push
mov
xlat
ffreep
push
mov
ja
popa
imul
dec
push
clc
imul
adc
movsb
test
daa
mov
mov
shlb
repz
cmpb
mov
popa
leave
push
mov
and
mov
cmpb
fldl
jns
pushl
or
pushf
lock
cmp
mov
out
xor
push
repz
xchg
in
enter
mov
dec
xchg
push
push
gs
arpl
dec
sbb
int3
cmpb
popf
js
mov
lret
mov
mov
cs
push
inc
mov
xor
notb
insb
cld
decb
mov
mov
add
sub
roll
ja
xlat
jnp
pop
push
push
jb
mov
mov
mov
loope
xchg
pushf
ja
mov
dec
sbb
xor
sbb
xchg
pop
aad
in
mov
mov
mov
testl
inc
rcrl
mov
mov
fistps
add
mov
nop
mov
sbb
dec
xchg
insl
xor
ja
aad
fldt
dec
sub
push
push
jmp
ss
sub
rcr
sub
fisubl
in
add
arpl
inc
movsl
xchg
pop
lds
push
mov
iret
push
lea
jmp
or
mov
inc
fs
xchg
dec
mov
loope
mov
sbb
insb
negl
sub
shrb
insb
cs
xor
incl
add
xor
jmp
clc
mov
in
pop
pop
and
jle
dec
mov
outsl
sahf
mov
fbld
mov
cltd
bound
and
imulb
aas
sbb
test
xchg
push
mov
mov
xchg
in
add
inc
movsl
ret
popa
mov
xor
pop
inc
push
test
mov
test
cwtl
push
sbb
xor
mov
aam
js
mov
lahf
sbb
clc
mov
inc
lea
jge
inc
pop
sub
test
nop
mov
push
in
jle
fwait
pop
adc
std
lods
mov
repz
test
xchg
xchg
cwtl
insb
sbb
and
imul
add
addl
xlat
cmc
outsb
shl
inc
inc
pushw
mov
jge
mov
enter
test
and
sub
push
add
cltd
mov
inc
xchg
mov
mov
movsb
out
mov
pop
loop
mov
inc
iret
mov
lret
dec
inc
pusha
inc
pop
push
inc
and
adc
data16
add
imul
roll
inc
sub
push
in
pop
inc
pop
mov
add
sarb
cmp
ss
or
sahf
dec
lcall
rcr
aas
and
bnd
sbb
sub
pop
inc
test
rcl
xchg
mov
push
push
pop
jbe
push
sbb
dec
lods
sbb
pop
in
loope
sbb
and
enter
or
imul
push
pop
cmpsb
notb
sbb
dec
sbb
sbb
orb
iret
fs
mov
cwtl
test
push
in
sub
lea
and
inc
dec
mov
xchg
out
xchg
mov
aaa
adc
push
lahf
movl
in
call
notb
jnp
les
sbb
mov
and
jmp
xchg
xchg
ret
sub
and
sbb
jo
xor
dec
cmp
pop
push
cmp
dec
fistps
or
rcll
pop
lret
pop
icebp
jg
mov
mov
jae
mov
sub
mov
jg
mov
insl
xchg
outsb
js
cmp
mov
add
outsb
push
pop
inc
push
push
ja
int3
mov
pop
xchg
push
push
adc
adc
repnz
pushf
shll
dec
push
mov
into
shrl
push
fldl2e
cs
es
pushf
aam
sub
xlat
jp
cwtl
sti
xor
stos
lock
hlt
sub
mov
cmc
fwait
ror
sub
dec
pusha
adc
mov
lahf
lock
cs
dec
call
nop
xchg
and
pop
scas
loop
jne
dec
dec
arpl
rcll
iret
mov
loop
ds
push
test
in
in
lods
pop
lods
pushf
cmpb
push
adc
push
jne
pop
js
jbe
in
lret
fcomps
and
jb
xchg
xchg
mov
clc
cmc
mov
xchg
je
add
or
and
or
and
je
pop
rorb
xchg
mov
es
xchg
or
dec
in
shll
adcl
inc
fs
popa
imul
inc
pop
adc
mov
inc
mov
mov
mov
mov
add
enter
xchg
inc
aad
stos
sbb
cmp
push
dec
lock
mov
dec
jmp
dec
mov
inc
lods
mov
loopne
out
ss
mov
xor
push
add
in
stos
jnp
jns
mov
or
cs
jg
pop
push
dec
fadds
jmp
shrd
cmp
aaa
xor
inc
mov
nop
hlt
addr16
dec
xor
and
inc
enter
cli
xchg
or
pop
jns
test
pop
push
outsl
add
cmp
arpl
pop
add
inc
mov
mull
mov
mov
movsb
xor
fldt
call
mov
cwtl
dec
mov
pop
jmp
loop
push
inc
inc
frstor
xchg
pop
mov
push
inc
fisubl
call
pop
nop
sub
mov
cmp
negl
sbb
scas
mov
dec
inc
xor
pop
insb
sub
jge
inc
or
cmc
mov
sbb
xchg
sahf
and
inc
jb
jg
fisubs
sub
xchg
pop
packuswb
dec
pop
cli
cmp
fiadds
sub
negl
mov
jae
addr16
pop
inc
add
sbb
or
sbb
mov
in
not
repz
adc
mov
mov
inc
xor
int
adc
orb
shlb
push
add
mov
sub
scas
rol
mov
add
pop
xchg
or
mov
sti
cwtl
xlat
in
test
push
mov
jecxz
xlat
push
popf
iret
xchg
cmp
pop
mov
mov
movsb
fcmovu
testl
pop
es
cwtl
push
das
andl
std
cltd
pop
pop
aas
cmpsb
in
push
in
xor
mov
int3
push
xor
shl
xchg
adc
cli
cmc
ffreep
pop
fdivrl
dec
aaa
jno
out
mov
ja
fcmovnbe
cmp
jae
pop
andb
xchg
xchg
mulb
and
in
sbb
movsb
stos
fbld
xchg
ror
dec
arpl
pop
shlb
jecxz
and
push
mov
adc
xchg
push
xchg
and
ds
dec
mov
mov
fucomi
xor
and
mov
push
jecxz
adc
inc
cld
lods
mov
cmp
cmp
jbe
rclb
loop
insl
es
icebp
or
mov
mov
data16
jp
out
roll
mov
mov
fsubrl
les
daa
or
cltd
xchg
mov
add
insb
push
jl
cmpsl
mov
mov
inc
jo
mov
dec
rol
push
push
push
fsubrl
sbb
push
jl
outsb
fidivrl
mov
imul
lock
repnz
sbb
mov
popa
pusha
mov
add
in
addl
push
xchg
mov
ffreep
dec
mov
jns
shrl
or
sub
std
subl
inc
das
leave
dec
jnp
hlt
loopne
add
mov
ljmp
aas
mov
sbb
stos
lcall
pop
stos
xchg
arpl
dec
aaa
push
es
adc
sub
pop
pop
inc
cld
xchg
int
push
xor
ja
cwtl
bound
jb
and
sti
add
imul
pop
push
xor
rclb
and
cmpsl
adc
lret
out
mov
jae
insl
fdivs
sbbl
stc
mov
inc
fadds
cs
mov
test
std
out
cs
imul
daa
dec
xorl
add
fstpl
out
imul
popf
push
insl
jl
sub
fstpt
nop
aad
mov
iret
aad
jnp
xchg
scas
cmp
add
push
lret
inc
push
pop
mov
xor
and
cmp
cmpl
daa
jo
pushf
sub
shll
mov
push
lcall
rclb
xchg
jmp
scas
xchg
dec
mov
nop
cmp
test
ja
lahf
ja
add
jge
inc
jo
scas
push
or
les
ret
sahf
stos
mov
cmp
dec
loop
clc
add
popa
and
push
and
sbb
scas
mov
and
pop
pop
int3
mov
daa
pop
lret
cmp
mov
xor
enter
mov
lret
movsl
repz
fnsave
add
sbb
clc
inc
lret
sub
lcall
sub
mov
call
fbld
ds
xor
dec
push
insb
das
push
cwtl
or
add
ds
xchg
fistpll
mov
inc
leave
loop
mov
xlat
mov
push
xchg
test
sbb
push
in
jns
dec
addr16
call
push
stos
adc
inc
ja
fidivl
aad
in
push
or
sbb
int3
jnp
jbe
sbb
add
popa
xchg
std
jnp
aad
fimuls
push
dec
cmpsl
faddp
push
and
cmc
mov
or
clc
sbb
mov
or
repz
loope
fwait
add
cmp
push
sub
pop
xchg
push
std
or
mov
adc
dec
mov
out
in
clc
add
or
pop
sti
fstps
sbb
lock
add
jno
les
cld
daa
fdivs
dec
xorb
jbe
dec
xchg
xor
mov
adcl
cs
xchg
mov
mov
add
jns
mov
inc
aad
jbe
ja
cwtl
ret
scas
int
fcmovbe
mov
pop
mov
xchg
cmc
pop
mov
push
inc
sub
adc
icebp
in
pop
scas
je
cltd
andb
dec
mov
outsb
jbe
sub
mov
push
sti
push
push
ret
mov
aas
sbb
adc
and
mov
add
lods
cmp
insl
cld
pushf
out
ja
sbb
jns
dec
ljmp
jge
scas
mov
pop
hlt
lds
cli
loopne
sbb
sbb
das
adc
cmpsl
lahf
mov
test
jle
in
sbb
cmp
mov
xchg
cmp
xchg
adcb
cltd
call
sahf
dec
mov
ror
les
mov
das
dec
push
cltd
mov
mov
cmpsl
arpl
clc
lcall
dec
icebp
or
pop
repz
rol
movsl
add
out
mov
adc
and
lds
rcrb
mov
mov
push
pop
adc
ja
cmp
push
int3
mov
and
jle
push
ror
sub
push
scas
pop
loop
sbb
mov
dec
std
push
xchg
add
scas
inc
adc
and
int3
lods
inc
xchg
test
ret
adc
dec
mov
and
jo
cltd
bswap
pop
testl
movd
movsb
frstor
add
cwtl
mov
xchg
lods
xchg
es
cmp
adc
pop
add
mov
add
sbb
mov
iret
fsubr
push
orb
rorl
push
or
push
xchg
push
sbb
aam
jp
adc
pop
push
xchg
int
test
iret
mov
adc
push
jo
lahf
mov
sbb
cs
imul
sti
pusha
pusha
notl
popf
sbb
and
les
sbb
cmp
das
jmp
cmp
rcrb
fwait
in
ja
pop
shl
inc
jl
addl
aaa
mov
mov
in
addr16
mov
mov
jecxz
add
movl
pop
xchg
sub
push
pusha
pop
pop
mov
ret
fldt
test
xor
lods
cmp
mov
fwait
mov
sahf
pusha
sahf
addl
dec
dec
inc
testb
lds
clc
cmpsl
add
or
in
lods
inc
cltd
xchg
xchg
xlat
or
lret
mov
lock
pusha
pop
sub
mov
call
and
int
cmp
lcall
inc
mov
rep
mov
mov
mov
scas
push
inc
jae
out
ret
add
adc
lds
in
cwtl
ljmp
adc
mov
xchg
jmp
mov
fcmovnbe
lret
ja
sub
js
push
cwtl
sbb
dec
adc
inc
lahf
lret
js
adc
push
cs
push
lcall
imul
mov
xchg
sub
lock
lock
xor
outsl
popf
bound
dec
pop
rclb
popf
pushf
cmp
mov
ret
data16
pop
iret
bound
cli
mov
sub
out
and
or
jg
mov
fistl
mov
and
jge
mov
jno
adc
mov
fadds
mov
push
ret
xchg
mov
mov
jle
jmp
add
add
loop
sbb
jp
mov
mov
iret
insl
jne
mov
add
mov
lret
xlat
mov
or
push
push
and
push
adc
xor
inc
inc
pop
inc
sbb
cmp
cli
call
adc
inc
pop
lds
gs
outsb
pop
cmpsb
push
jno
adc
jmp
jecxz
xchg
je
mov
rcl
ficoml
cltd
pop
mov
rcrb
stos
cmp
clc
inc
outsb
xchg
sbb
iret
add
sarl
mov
lds
sub
in
cmpsl
lret
jbe
cmpsb
rcll
push
loope
xor
or
xor
push
mov
popa
es
push
mov
jo
aam
imul
inc
inc
outsl
je
push
scas
enter
pop
in
insb
inc
add
jmp
data16
movsb
loope
xchg
xchg
sbb
xchg
dec
push
mov
pop
js
ret
in
call
cltd
inc
cltd
leave
repnz
xor
mov
dec
lods
mov
aaa
test
and
cmp
popl
stos
sub
adc
fists
and
stos
shl
dec
pop
sub
push
mov
shrl
hlt
sub
dec
scas
mov
mov
stos
loopne
jno
dec
fs
add
mov
loopne
fsubrl
sbb
cmp
inc
mov
lods
or
subb
add
cmp
arpl
ret
call
fisttpll
in
aas
and
mov
aaa
pop
aad
pop
ficomps
je
sbbb
negl
cltd
sbb
das
lea
mov
es
icebp
ds
ret
adcl
mov
in
ret
inc
je
cmp
sub
aaa
lods
mov
jg
loop
out
inc
addr16
mov
cmp
mov
fmulp
aam
test
sbb
imul
das
dec
add
xchg
push
cmpsl
mov
cld
sahf
dec
xchg
loopne
pop
and
repz
cmp
or
lahf
dec
insb
pop
push
popl
ljmp
rcll
xlat
xchg
pusha
mov
loop
dec
ret
lds
inc
in
ret
xor
and
jae
jg
cmpsl
cmp
dec
jecxz
pop
sub
mov
aam
add
and
fisttps
add
jo
clc
test
movsb
push
mov
cmc
mov
adcb
loope
aas
mov
mov
in
sti
dec
ljmp
pop
outsb
inc
lods
mov
and
sbb
loop
cmc
push
loop
sbb
pushl
lds
xor
xchg
cli
cmpsb
test
fwait
cltd
jno
mov
mov
iret
adc
stos
mov
and
push
mull
sbb
and
inc
movsb
in
add
xchg
dec
cmpsb
movsb
sbb
and
xchg
sbb
subb
push
ds
repz
inc
enter
dec
push
mov
outsb
or
or
out
imul
cmpsl
aaa
inc
xchg
dec
cmpb
inc
fnstcw
test
mov
and
bound
cmp
push
fcom
ret
add
xor
and
pop
adc
jle
in
cmpb
bound
pop
xchg
rorl
mov
xchg
lods
sub
scas
jbe
jl
aas
mov
call
or
test
push
fwait
insl
xchg
push
mov
sub
jmp
push
imul
je
adc
leave
aaa
pop
mov
aas
aam
jg
and
cmp
or
sti
or
popa
mov
icebp
dec
fstl
inc
icebp
pop
mov
imul
push
push
mov
mov
cmc
and
movl
cld
lods
xchg
xor
mov
shll
aaa
jae
outsl
sbb
cmpsb
test
loop
loop
or
push
in
dec
cmp
push
inc
daa
jb
inc
add
xor
insb
push
sub
enter
jne
hlt
push
sub
testb
mov
cmc
or
cmpsb
out
mov
ljmp
sub
push
test
lods
mov
pop
and
jle
xchg
movsb
xor
int3
dec
aad
pop
xchg
icebp
icebp
in
xchg
mov
lods
pop
sti
xor
cmpsb
rorb
stos
outsb
adc
sub
dec
cmc
xor
pop
sbbb
and
cmp
bound
fcmove
std
sahf
fsts
cs
loopne
mov
mov
inc
out
ficomps
push
pop
outsb
adc
jg
push
xchg
mov
fwait
syscall
je
out
ljmp
cmp
adc
ret
push
dec
mov
int
sbb
out
rcr
mov
mov
das
je
cmp
ljmp
cmp
push
jmp
push
lret
cltd
rolb
fwait
sub
xor
xchg
loope
iret
adc
pmulhuw
repz
xchg
lods
xor
sbb
cmp
inc
push
sahf
shl
or
cmpsl
adc
pop
sbb
pop
adc
sbb
aas
xchg
aaa
and
aam
sti
xchg
in
sbb
inc
movsb
jne
inc
movsl
jb
push
xlat
push
std
in
stos
loope
add
sub
rorl
ss
mov
mov
jmp
imul
loopne
push
push
pop
inc
cmpl
les
push
cmp
jl
gs
daa
iret
push
sti
xchg
mov
fs
dec
pushf
sbb
jge
das
cmp
mov
jne
cltd
push
movsb
xchg
mov
loope
mov
notl
cmp
inc
adc
xor
sbb
sarb
adc
out
inc
pop
movzwl
dec
test
ret
and
scas
cmp
push
shll
pop
jb
test
cmp
and
mov
cmpsl
cmp
pop
shrl
and
add
scas
aaa
mov
fistps
xchg
xor
dec
pop
pop
and
mov
push
adc
jo
mov
fucom
in
test
imul
mov
jo
push
loop
mov
shrb
sbb
shlb
mov
sub
xchg
pop
cwtl
dec
popf
pusha
cltd
and
test
push
mov
repnz
test
cmpsb
insl
sbb
flds
je
les
inc
lret
in
xchg
pop
in
adcb
push
mov
lock
stos
mov
mull
out
and
jns
cmp
pop
dec
dec
dec
popf
jp
pop
mov
push
and
lock
or
dec
addr16
lcall
push
jbe
xchg
pusha
pop
and
xchg
es
xor
pop
lods
push
jle
jp
mov
mov
fsubl
imul
jl
imul
push
test
call
int
imul
cmp
xchg
dec
int
movsl
push
iret
pop
addr16
jne
sub
popa
shll
jb
daa
adc
hlt
push
jg
loop
subb
insl
mov
loope
insb
mov
lds
addb
sahf
push
push
xor
insb
fdivrs
cli
cmpsl
cmpsb
push
mov
cltd
out
cmp
loop
mov
or
pop
pop
mov
mov
and
push
lea
sub
jle
add
mov
cld
rclb
leave
sbb
mov
fidivs
repz
push
lcall
pusha
xchg
loopne
sub
push
sahf
dec
pop
outsb
mov
insb
nop
std
dec
and
mov
insl
cwtl
push
fyl2x
push
insb
jge
adc
and
xor
dec
jecxz
push
ds
push
push
pop
mov
cmpsl
jo
int3
adc
loope
fistpll
adc
mov
sbb
stos
jae
dec
adc
adc
adc
sub
inc
or
push
aam
nop
test
inc
fstpt
arpl
or
mov
daa
sub
push
push
fldl
aad
xchg
out
cld
push
cli
int3
and
in
stos
push
add
pop
xchg
jns
popl
jns
or
add
pop
mov
dec
jnp
cwtl
shlb
jle
xchg
clc
pop
sub
jne
ds
pop
mov
mov
mov
xchg
insl
rcr
lea
xchg
push
pop
rcrb
test
enter
das
mov
insb
ficomps
xor
cli
push
sbb
sub
jmp
out
mov
mov
push
jmp
xchg
or
pop
ja
loope
cmp
xchg
jmp
scas
cltd
pushf
xchg
push
adcl
mov
sub
fstpl
cmc
cli
icebp
xchg
aam
faddl
xor
sbb
test
fucomip
push
out
pop
pushf
arpl
and
pop
jne
sbb
cmpsl
scas
inc
outsl
dec
int
adc
adcb
xor
push
test
and
in
mov
test
cmp
dec
lcall
mov
dec
add
jae
ucomiss
mov
stc
and
jae
test
outsb
incb
adc
push
cli
and
xchg
and
dec
dec
ds
mov
add
pop
xchg
fwait
mov
lahf
sub
fisubrs
fisubrs
jb
mov
jne
ds
addr16
or
jge
push
adc
push
lea
lea
cwtl
jmp
dec
add
jns
out
outsb
imul
dec
cltd
mov
sub
mov
push
sbb
jo
inc
je,pt
mov
aaa
jae
in
mov
mov
imul
jns
aam
sbb
ljmp
in
cmpsb
dec
stc
and
sti
lods
mov
es
cs
push
jge
jb
mov
inc
and
xchg
inc
sub
xor
mov
in
repnz
fs
das
inc
add
or
and
hlt
or
ja
in
xorb
outsb
shlb
fcoml
movsl
jnp
sbb
or
pusha
in
dec
imul
inc
xlat
je
mov
clc
sub
mov
inc
and
xor
sbb
mov
mov
mov
push
mov
es
or
lods
push
cmpsl
je
loop
pop
inc
repz
inc
xlat
shrb
add
inc
arpl
mov
nop
data16
rcrb
loope
daa
jecxz
pop
push
lret
hlt
clc
xchg
pop
fstpl
fisubl
aad
pop
fwait
xor
add
icebp
pop
adc
jne
aaa
imul
or
lods
aas
xor
enter
imul
sbbl
jecxz
push
repz
add
jg
xor
push
xchg
lret
outsl
inc
push
enter
xchg
into
xchg
or
imul
cld
imul
movsl
xorb
jp
sbb
xchg
push
pcmpeqb
sub
or
mov
mov
jmp
lods
xor
clc
out
dec
lods
ret
das
push
scas
mov
test
add
into
mov
in
js
aam
cmp
orl
push
mov
xchg
jg
mov
pop
push
xor
and
cli
push
lea
jle
sbb
pop
pop
sbb
into
push
or
jnp
mov
jno
out
ret
fwait
pop
push
or
jb
cmp
pop
les
sti
xorb
xor
fisttpl
mov
sbb
or
test
loop
stos
pop
mov
push
shlb
xor
iret
outsb
jnp
pop
aaa
pop
jge
sbb
lods
push
out
test
dec
imull
lret
in
push
pop
cmp
cmp
xchg
inc
or
add
iret
movsl
outsl
mov
add
lahf
mov
push
test
dec
mov
mov
jmp
and
adc
add
jno
enter
and
inc
stc
fisubrs
pop
pop
out
cwtl
in
cmp
es
mov
jle
test
out
mov
mov
mov
adcl
cli
in
sub
fs
js
push
sbb
add
or
cs
jae
pop
lea
iret
add
sbb
dec
arpl
and
scas
outsb
mov
dec
adc
outsb
shll
cmpsl
arpl
mov
or
aam
xchg
push
int
sub
lahf
xchg
push
xor
xchg
push
jnp
rorb
xchg
inc
scas
jae
dec
popf
enter
clc
sub
adc
pushf
aam
cmp
add
leave
sbb
and
lret
fistps
jl
insb
mov
stc
and
mov
mov
enter
sub
outsl
lahf
sarb
aas
xlat
mov
daa
jmp
sbb
in
rorb
or
fdivrl
push
mov
lret
pop
in
mov
adcb
test
xor
movsb
addr16
mov
lcall
and
loop
push
jae
test
mov
mov
adc
push
sub
add
imul
xchg
clc
pop
ds
pop
andnps
adc
xchg
xor
dec
add
fsubrp
xchg
popf
xchg
xchg
in
mov
fwait
sahf
push
fnsave
je
jb
je
adc
pop
jb
into
push
or
mov
jns
outsb
jns
push
xchg
sbbb
mov
xchg
iret
sbb
cmc
test
inc
or
sbb
push
or
xchg
adcl
sub
mov
cmpsb
pop
sbb
jnp
add
orb
sub
leave
dec
clc
test
pop
xchg
or
insl
test
mov
bound
add
aaa
mov
stos
fwait
aas
or
push
test
jecxz
mov
jns
push
pop
insb
fstl
sub
cmp
pop
aas
mov
repz
add
mov
add
sub
and
pop
outsl
pop
mov
xchg
add
pusha
cmp
xchg
call
push
mov
add
adc
popa
ss
aas
xor
cmp
aad
rorb
or
mov
ljmp
or
or
xor
push
jecxz
push
cmp
xchg
lods
mov
dec
ret
jb
mov
test
mov
rolb
jae
pop
and
mov
xor
sub
cmp
mov
shl
arpl
jae
addr16
mov
xchg
jb
daa
int
in
cltd
fmull
sub
cs
leave
xor
jmp
jo
sbb
clc
mov
xchg
cmpsb
jp
lret
aad
ds
fdivl
sbb
int
iret
in
xlat
mov
in
lods
sahf
xor
stos
gs
test
sti
mov
sub
daa
xor
xchg
outsb
push
int3
ja
sti
jb
scas
or
ror
and
sahf
std
idivb
xchg
mov
popf
dec
cmc
or
mov
jns
sarl
xor
addr16
mov
and
or
pop
push
mov
pop
sub
mov
pop
jae
xlat
add
mov
lahf
pop
fwait
les
shrb
add
shl
daa
sahf
hlt
jno
popf
pushf
rcr
push
iret
mov
sbb
sbb
inc
cmpsl
push
test
loope
jmp
cmpl
xorb
xor
sub
sub
daa
sbb
int3
xor
ljmp
fisubl
push
in
out
das
or
iret
xlat
std
jns
sbb
movsb
push
dec
inc
std
push
sti
mov
test
loope
cmc
clc
flds
sub
bound
mov
mov
cwtl
xchg
mov
das
pop
pop
add
xor
xchg
push
mov
stos
mov
or
jg
sahf
aaa
cmp
and
sbb
sbb
cmp
daa
adc
adc
mov
jnp
ds
ss
leave
sahf
pop
lods
sti
in
push
and
lahf
dec
xor
mov
lods
push
mov
jge
jmp
lock
xchg
out
repz
fwait
test
sbb
inc
adc
out
dec
cmc
jp
fst
lret
pop
mov
adc
sarb
dec
imul
push
in
std
in
mov
push
or
mov
xor
inc
repnz
cld
lahf
and
mov
mov
sahf
mov
mov
shlb
int3
insb
xor
scas
jae
aam
dec
les
pop
cmc
jecxz
mov
mov
imul
cmp
rcr
cmc
pop
and
js
lcall
hlt
lret
or
enter
aam
pop
jns
les
cmp
mov
or
cltd
xor
lret
jp
movl
loop
out
adc
jae
pop
mov
jae
lcall
and
xchg
aas
inc
dec
mov
icebp
sub
cmpl
mov
insl
jnp
mov
adc
lret
and
cmp
dec
jge
cld
enter
stc
xchg
shll
insl
lock
movd
scas
push
jg
jge
mulps
repnz
push
dec
daa
lock
stc
pop
and
inc
pop
fcoms
pop
stc
out
cwtl
addr16
sti
xchg
cwtl
test
out
inc
dec
jmp
rcrb
push
push
nop
nop
jo
dec
enter
push
or
lret
mov
lcall
add
out
shl
fistpl
xlat
lock
adc
inc
xchg
loope
mov
jl
mov
popf
jno
sbb
dec
mov
movsl
arpl
push
jmp
or
adc
mov
subb
movsl
xor
das
xor
dec
add
inc
adc
jnp
add
mov
popf
aaa
aas
xchg
sbb
in
mov
daa
sahf
movsb
adc
mov
dec
mov
insb
jne
lret
pop
rorb
shl
mov
mov
aas
push
jb
flds
jne
imul
lret
xor
fistl
incl
lds
nop
inc
es
jmp
xlat
or
lret
dec
cmp
test
pop
pop
xor
xchg
jmp
aam
mov
push
or
fstps
jp
xor
xchg
jns
das
cmp
fnstenv
mov
sbb
add
mov
mov
jno
pushf
mov
dec
test
test
lods
cmp
inc
mov
or
jnp
sub
test
jge
push
push
je
data16
xchg
std
inc
push
pop
stc
cwtl
fdivs
aaa
out
xchg
or
and
shlb
data16
enter
jae
rclb
fimuls
dec
add
dec
out
push
mul
call
jecxz
push
cs
mov
mov
mov
fdivl
call
lods
push
add
mov
inc
test
mov
int
popf
jo
outsb
cwtl
and
push
or
jl
cld
mov
leave
adc
pop
fnsave
sarl
ret
andl
cli
pushf
into
lret
lret
imul
or
xchg
pushf
adc
jl
xchg
icebp
adc
cwtl
lahf
pop
sbb
or
fsubrl
movl
or
es
in
inc
rorl
sub
loopne
cmpsb
fcoml
orb
into
sub
outsb
xor
enter
add
icebp
lock
and
mov
mov
or
insb
fxch
int3
fistpl
push
push
decl
pop
call
sbb
in
jae
aam
cmpsl
mov
sub
cmp
mov
mov
in
mov
pop
cltd
mov
add
rclb
xorl
ds
cmpsb
lcall
mov
inc
sub
pop
cmpsb
in
shl
dec
push
and
adc
mov
sbb
out
jns
jle
inc
test
jmp
fs
pop
push
and
sarb
cli
popf
jl
pushf
jmp
bound
jp
insl
mov
jmp
pushf
subb
fstpt
mov
mov
imul
push
cmp
aas
add
and
xor
jno
add
fst
sbb
jmp
adc
add
enter
fidivl
gs
lds
jl
dec
jae
imul
cmp
push
or
sub
out
fcompl
sub
sub
pop
jae
sbb
inc
imul
xor
lods
xor
pop
adc
sbb
call
cs
add
mov
pusha
and
pusha
sub
jge
out
es
lcall
adc
ja
insl
lock
inc
adc
mov
popa
lcall
xchg
loop
test
xlat
out
adc
sbb
into
aam
inc
fdivp
loope
adc
repz
sub
xchg
mov
push
inc
jo
call
xchg
jl
push
cmc
inc
and
cmp
inc
pop
loop
mov
inc
lea
loop
mov
or
xchg
mov
std
insb
fdivrp
iret
das
lret
or
or
lret
xor
rclb
test
pop
pop
inc
imul
ret
pop
mov
pop
pop
mov
or
hlt
xor
sti
icebp
add
xor
out
jno
mov
in
pop
inc
int
mov
cmpsb
and
dec
stos
pop
lock
dec
nop
or
or
inc
bound
dec
loopne
inc
xor
in
adc
and
cmpsb
dec
xchg
insl
scas
mov
xor
aas
push
sub
mov
mov
pop
and
pop
pop
pop
and
jae
cmpb
xor
clc
fs
mov
movsl
mov
dec
adcb
clc
addr16
adc
hlt
lret
pop
jo
and
divl
xor
insb
sub
fs
push
rolb
jp
jno
lock
mov
jno
decl
aad
stc
sub
xchg
insb
cmpsl
loopne
fdivrs
loopne
xchg
mov
lds
xchg
fs
xchg
cld
popa
je
lahf
arpl
je
xor
jno
dec
xchg
adc
mov
cltd
push
mov
sbb
jle
mov
xor
sti
push
xchg
add
mov
and
in
iret
arpl
clc
mov
insl
jl
sbb
adc
hlt
jl
jbe
or
sbb
mov
jne
mov
les
adc
ljmp
pusha
popf
scas
mov
mov
or
inc
pop
xlat
push
mov
mov
cmp
inc
rcl
scas
dec
fstpt
push
push
call
dec
adc
mov
mov
jl
mov
xchg
fs
dec
add
mov
movsl
fldl2e
imul
stc
lods
sahf
in
rol
je
or
xor
ljmp
jmp
lock
imul
push
movsl
sbb
cmp
test
test
mov
je
in
add
sbb
mov
leave
sbb
push
lahf
xchg
dec
cmc
cmp
shll
pop
mov
aad
add
jo
lahf
xchg
push
arpl
mov
outsb
fsubrs
mov
inc
inc
outsb
mov
popa
xchg
fdivrs
das
stos
or
xchg
sbb
or
xor
lds
repz
xchg
add
and
jl
mov
cwtl
int
les
test
lret
xchg
dec
xchg
leave
mov
push
ficoms
int3
xchg
inc
sub
xchg
xchg
xchg
or
addr16
xchg
test
enter
rcrb
jmp
daa
mov
mov
cmp
clc
dec
and
jp
in
iret
lea
outsl
aad
mov
pop
stc
outsl
loope
inc
sbb
leave
sbb
mov
dec
dec
movsb
and
or
xchg
rcrb
ljmp
popf
addr16
shrb
mov
push
dec
add
in
hlt
sub
and
rorl
leave
mov
push
leave
xchg
test
dec
jmp
lods
push
cmp
imul
sbb
cmp
jl
stos
jnp
mov
gs
or
aad
and
pop
fldl
mov
ja
or
stos
loope
insb
in
jle
or
adc
ret
jg
or
jmp
ss
jecxz
xchg
cmp
jg
jo
mov
xor
cmp
mov
cmp
stos
call
icebp
mov
mul
stc
mov
test
popf
addr16
mov
sbb
sub
jb
hlt
adcb
scas
outsl
jmp
int3
andb
xor
xchg
into
or
push
mov
jne
pop
mov
or
pop
sub
lahf
adc
sub
test
push
sub
lret
push
shll
mov
fstl
jne
dec
shrl
ljmp
pushf
mov
adc
rol
ror
pop
in
lods
mov
rol
cltd
push
inc
out
pop
outsl
cmpsb
arpl
add
xchg
fistl
sub
push
aad
pop
test
jp
pop
shlb
test
aam
push
lock
mov
aam
xor
pop
inc
stos
dec
sub
pop
mov
rorb
shll
pusha
push
popf
xlat
in
jg
xor
add
xchg
mov
popa
imul
clc
inc
adc
inc
mov
pop
out
mov
mov
mov
add
leave
test
insb
popa
rorb
push
adc
scas
jae
dec
xchg
pop
push
sbb
es
sbb
xor
and
dec
sahf
fstps
imul
lret
mov
in
sbb
subps
stos
and
fstpl
cmp
and
jmp
or
and
jg
pop
push
xor
in
dec
mov
sub
pop
out
inc
ficompl
lcall
push
fs
cmp
aas
pxor
mov
loope
shrb
or
movb
out
lods
push
push
enter
xchg
rorb
pusha
lahf
or
jecxz
mov
inc
sbb
ja
dec
sarb
cmpsb
jbe
test
cwtl
xchg
mov
push
jle
jno
jg
mov
add
cmp
xor
fistpll
add
test
out
ret
jo
stc
or
xchg
stos
cmc
push
lahf
sbb
pop
fsub
test
and
repnz
jb
test
lahf
adc
xor
enter
xorl
mov
rol
movsl
dec
adc
lock
mov
stos
push
push
dec
scas
lea
mov
js
xchg
push
add
inc
or
andb
mov
push
daa
sbb
sub
mov
xchg
jle
out
jg
sti
inc
mov
scas
loop
ret
sbb
js
or
cli
jmp
or
das
mov
cld
xchg
notl
shl
stc
jmp
data16
std
popl
mov
ss
data16
stc
mov
call
fisttpl
call
sub
push
cmpsl
xchg
jl
jnp
cmpsl
ljmp
and
adc
cld
add
fisttpl
in
cmp
push
mov
adcb
push
mov
pusha
aad
push
jp
in
mov
cmp
inc
cmpsb
add
or
jne
sbb
daa
cmp
dec
mov
mov
jne
pop
sub
lret
mov
jmp
mov
dec
jb
mov
push
ss
inc
mov
lret
addr16
pop
cmpsl
cs
or
mov
jnp
lock
mov
addr16
out
rol
mov
push
push
cmpsb
xor
jbe
sub
fdivrl
xchg
mov
adc
cwtl
push
ret
into
cwtl
pop
push
xor
out
and
jnp
test
sbb
dec
inc
push
xchg
outsb
pop
adc
adc
aam
add
inc
in
loop
inc
les
adc
arpl
outsl
push
mov
sbb
mov
xchg
outsl
xchg
push
in
xchg
ret
sti
outsb
mov
xchg
jo
mov
push
aas
mov
xor
push
in
ret
stos
lahf
mov
xchg
shll
lea
scas
inc
cld
adc
and
cld
insl
imul
or
sti
std
insl
mov
arpl
in
gs
inc
enter
adc
in
push
inc
cltd
adc
iret
out
aad
jge
into
ss
movsl
test
gs
mov
adc
push
scas
mov
lret
fisubrs
mov
sbb
inc
mov
pop
sub
sub
test
inc
mov
popaw
je
push
adc
xchg
mov
add
repnz
out
lods
adc
add
inc
xor
and
mov
xlat
mov
ja
aad
shr
movsl
push
jle
fimull
icebp
mov
outsb
pusha
pop
push
movsl
loopne
cli
ror
cmp
sub
push
cs
out
mov
jg
rorl
cmpsb
enter
add
aad
icebp
inc
bound
xor
aad
mov
add
negb
cmpsb
scas
mov
sar
or
repz
sahf
mov
jne
dec
xchg
sub
fwait
sub
daa
xchg
out
imul
add
sub
push
push
stos
sti
mov
test
movsb
lock
pop
sahf
add
mov
add
pop
test
out
inc
stos
aam
lods
or
insb
ret
js
rorb
rcrl
push
add
in
mov
and
out
loop
hlt
and
ret
or
push
xor
test
fadds
insb
ret
call
imul
shrb
jecxz
sarl
adc
outsb
pop
ret
out
xchg
mov
arpl
test
daa
popf
mov
fwait
in
jae
popf
cwtl
lea
push
stos
and
mov
cmpsl
mov
sbb
add
lahf
icebp
aas
inc
imul
scas
and
ja
stos
outsb
jl
movsl
pop
sub
jmp
push
dec
fwait
inc
cmp
inc
ljmp
into
sbb
mov
lahf
pop
jbe
lahf
scas
add
dec
cmpsl
cmpsl
or
sahf
fadds
insl
scas
mov
std
fwait
andl
in
pop
mov
add
dec
dec
mov
out
iret
imul
adc
jl
sahf
dec
push
dec
sub
fidivl
outsb
jnp
dec
pop
incl
cwtl
or
mov
aaa
pop
les
test
shr
jge
outsl
fldl
mov
pop
adc
mov
loope
and
inc
sahf
dec
cmp
sub
stos
into
js
push
push
xor
jmp
mov
pop
mov
mov
lahf
sahf
inc
adc
add
cs
pushf
push
arpl
leave
mov
and
into
roll
into
mov
or
orl
or
std
sbb
adc
clc
jno
mov
loop
pop
xor
cmp
lea
mov
sahf
fimull
xor
pusha
xchg
out
rcrl
sub
sbb
ret
shlb
inc
sub
fistps
mov
popf
ficoml
mov
ret
popa
lret
cmpsl
sarl
scas
cmp
aam
test
pop
cmp
inc
nop
add
in
xor
and
xor
and
adc
sub
aaa
push
cmp
aam
cmp
push
aam
jo
inc
inc
orl
inc
mov
js
xchg
inc
mov
cli
push
movsb
lea
xchg
leave
cltd
test
jbe
sub
aad
or
enter
and
adc
xor
addr16
push
jb
push
fldt
sub
xchg
xlat
ffree
jno
fidivrs
lea
out
cmp
leave
push
jbe
mov
jnp
sub
and
xor
ror
inc
enter
imul
xchg
cmp
fsubrp
sbb
gs
xor
cwtl
mov
cmp
and
lahf
xchg
stos
stos
cmp
addr16
and
stc
in
jge
mov
push
lahf
fiadds
push
mov
pop
pop
call
pop
add
xor
or
ja
ss
mov
or
lea
inc
add
cld
in
and
inc
cltd
dec
clc
and
jmp
xchg
xchg
mov
mov
subb
jge
out
cmp
ds
punpckhwd
in
and
mov
sub
jns
mov
fwait
arpl
mov
xchg
inc
push
jp
jbe
outsl
and
lcall
pop
dec
shlb
in
ror
adc
dec
mov
xor
es
cmp
in
dec
loopne
fcmovbe
loop
mov
ss
test
push
stos
insl
hlt
push
push
fisubl
bound
push
inc
fistpll
add
jg
test
jmp
dec
ja
fildll
dec
stos
pop
adc
push
jg
and
cmp
pop
sub
ficoms
add
movsl
stos
mov
add
cmp
loopne
fdivrs
sbb
out
leave
mov
fstps
mov
sbb
push
inc
mov
cmp
aas
sbb
imul
inc
sar
imull
call
idiv
xchg
out
mov
repnz
mov
mov
mov
cltd
cmp
fwait
cmpsb
js
scas
mov
jge
test
xchg
loop
test
ret
cli
aaa
or
loopne
mov
popf
test
notb
andl
test
adc
push
incb
repnz
inc
ds
loopne
xor
daa
push
pop
lods
cltd
mov
adc
call
and
inc
cwtl
mov
mov
add
mov
shrb
sub
addb
pop
pop
aas
int
push
stos
aad
xchg
add
aad
clc
mov
divb
dec
adc
mov
pop
jl
dec
dec
je
ret
push
fists
rcll
jmp
add
stos
or
into
popa
inc
xchg
iret
movaps
inc
sbb
sti
xchg
pop
or
pop
or
lods
and
mov
and
movsl
jmp
pop
aad
rolb
or
sub
jmp
lods
addr16
insb
movsl
mov
hlt
mov
inc
aaa
arpl
xlat
push
scas
mov
add
push
andb
pop
push
sub
cmp
imul
test
cmp
je
cmp
and
lds
andb
add
pop
subl
out
push
push
and
int3
push
mov
cld
enter
inc
in
xchg
inc
sbb
dec
pop
pop
push
pop
aam
pop
cli
pop
out
iret
sti
or
dec
push
mov
in
in
add
jns
jo
sbb
xchg
push
pop
fldenv
adc
jmp
sub
pop
sbb
xchg
sub
cs
outsl
shll
aam
mov
push
adc
dec
jmp
sub
mov
pop
fidivrl
nop
sub
adc
cmp
xchg
jg
sbb
cmp
imul
adc
sbb
xor
sti
cmp
push
ret
ds
imul
push
mov
scas
dec
and
into
dec
or
jmp
pop
push
jne
faddl
les
movsl
pop
inc
bound
mov
int
or
mov
adc
mov
push
in
ljmp
push
pushf
xchg
loope
dec
cmp
sbb
mov
sbb
jns
inc
push
or
mov
lds
ret
and
cltd
mov
or
or
lods
movsl
loopne
fwait
lods
or
or
mov
addr16
in
imul
mov
ss
popf
ja
jecxz
mov
inc
mov
add
mov
mov
orb
fnstsw
scas
xchg
xor
cli
xchg
imul
sub
popa
int3
or
pop
mov
sarb
lcall
es
mov
mov
mov
daa
pop
out
imul
movnti
adc
lods
cmpsl
repz
rorl
mov
dec
xor
sub
jns
icebp
mov
bound
rol
lds
out
cs
les
call
in
xchg
mov
cmp
mov
xchg
push
aas
pop
cmp
enter
jo
fisubs
out
mov
jmp
pop
push
jnp
into
lods
test
jmp
sub
jo
cmp
jo
fidivrl
bnd
rcrb
in
or
mov
in
add
xor
aas
sbb
push
dec
addr16
jg
repz
xchg
cmc
sub
rcl
hlt
cmp
push
pop
jae
sub
into
out
aam
data16
and
xchg
add
inc
push
adc
inc
cmp
sbb
push
cmp
add
push
inc
xchg
cmp
cmp
lret
mov
xor
mov
std
inc
inc
add
ljmp
pop
xlat
sub
jmp
mov
test
jecxz
daa
mov
mov
dec
xor
push
xchg
in
sub
negl
pusha
jbe
sub
mov
icebp
aaa
xor
push
add
imul
decb
filds
sbb
fcoms
mov
xor
out
jae
sub
loop
aaa
orb
dec
pop
add
cmp
cmp
jo
push
xchg
dec
out
ss
and
in
cli
mov
je
adc
aam
jmp
sahf
decb
push
cmp
orl
sbb
in
inc
sub
scas
jbe
popa
dec
mov
lcall
mov
inc
sbb
ljmp
mov
push
cmp
loop
sub
inc
jle
fdivl
add
int
inc
ret
repnz
push
jne
call
test
movsb
or
xor
jno
popa
and
out
fmull
jo
xor
and
push
sahf
je
fnsave
insl
cmc
sbb
mov
cmc
lcall
aam
das
call
cmp
in
int
test
int
cmp
cmc
and
iret
add
les
ret
sahf
push
testl
sub
xor
je
lods
inc
add
je
jne,pn
inc
jmp
push
lahf
outsb
lods
xchg
xlat
aas
mov
pop
lds
insl
xor
push
movsl
xchg
and
jnp
xlat
mov
pop
add
cmpsl
jnp
lea
cs
mov
loopne
addr16
call
xor
test
pop
push
inc
mov
dec
mov
sub
add
test
insb
jae
data16
jp
xchg
adc
fnstenv
ficomps
push
and
shl
mov
lahf
dec
cli
xchg
fildll
inc
lcall
push
sub
lock
cwtl
int
scas
pop
dec
hlt
loop
cmpsl
cmp
mov
cmp
jnp
jmp
push
loopne
testl
add
psrlw
call
inc
xchg
adc
daa
cmpsb
push
pop
add
sarl
subl
pop
lods
fsubs
and
sub
aas
mov
cld
ret
push
sti
mov
es
mov
mov
xrelease
cmp
inc
mov
daa
pop
sbbl
enterw
icebp
pushl
test
add
adc
xchg
xor
roll
adc
aam
mov
mov
iret
and
popl
cmpsb
fidivrs
cli
jmp
int
addr16
rol
push
scas
call
fldenv
sbb
adc
jle
shll
or
repnz
daa
pop
jne
mov
sbb
aam
stos
imul
mov
cwtl
lahf
scas
imul
jbe
stos
in
hlt
enter
ss
nop
or
sub
orb
xchg
in
mov
mov
xor
adc
push
pop
push
jmp
mov
loopne
adc
add
in
insb
push
test
dec
push
enter
xchg
cltd
jmp
mov
push
adc
cmpsb
lahf
cs
pushf
jp
iret
inc
fdivs
jne
js
cmpsl
jle
mov
adc
mov
sahf
push
xchg
mov
test
mov
std
add
push
jl
sub
jns
push
in
inc
inc
xor
pusha
hlt
outsl
sbb
inc
mov
mov
add
or
xorl
pushf
in
sub
jmp
ljmp
mov
aam
std
and
xchg
push
push
std
sub
jp
inc
add
fmuls
adc
mov
mov
iret
dec
push
mov
push
sbb
call
mov
cmp
stc
insl
lds
dec
test
xor
dec
jno
dec
leave
cmp
or
pop
cmc
pop
imul
push
std
aaa
sub
outsb
ret
mov
adc
xchg
mov
adc
js
push
and
in
lcall
insl
cmpsl
mov
xchg
add
sahf
rcrb
fdivs
mov
sti
popf
pop
out
sub
cmp
adc
and
xlat
into
lea
dec
pop
mov
mov
and
cmpsb
sbb
int3
shll
rorb
cmpsl
stos
ljmp
int
cs
ss
icebp
out
cmc
cmc
fidivs
ret
push
cld
js
jp
adc
xor
jecxz
mov
stc
jmp
mov
sub
adc
loopne
mov
mov
lcall
cmpb
xchg
sbb
mov
icebp
adc
cmp
jno
and
inc
push
fwait
dec
int
sbb
mov
add
inc
arpl
add
dec
decb
aam
add
ret
dec
fidivrs
and
cmpsb
mov
lahf
shl
lods
and
push
jo
jg
jne
push
sub
mov
adc
rorb
push
jg
out
adc
in
sbb
clc
dec
dec
xor
push
cld
addr16
mov
repz
xor
or
pop
insl
xor
or
xchg
jecxz
stos
mov
test
xchg
fucomi
ljmp
enter
jge
loop
ret
gs
out
push
popf
pop
ret
pop
push
fisttpl
jg
adcl
xchg
dec
pop
push
mov
cmp
stos
scas
out
test
xchg
xor
into
mov
cmp
or
or
sbb
add
mov
push
inc
pop
pop
ljmp
mov
rorb
mov
lcall
pop
popf
adc
xchg
shrb
cmp
xlat
adc
shlb
push
adc
push
mov
dec
dec
and
sti
jp
repnz
xor
popf
in
lds
test
xchg
out
lea
int
adc
sbb
sub
mov
gs
mov
nop
push
pushl
test
pop
push
vpsraw
std
rclb
inc
data16
lret
dec
mulb
dec
dec
jne
lods
xor
scas
push
nop
mov
dec
ret
adc
iret
in
cs
mov
stos
dec
sbb
cwtl
std
mov
into
mov
push
cltd
and
in
mov
mov
cmp
jecxz
fcoms
mov
rcr
or
daa
sub
xchg
int3
loope
jb
inc
xchg
fcmovu
mov
sub
dec
and
popa
xchg
dec
inc
aas
adcb
aas
out
adc
and
mov
xchg
cmp
lds
adc
enter
iret
xor
adc
mov
orb
shrb
or
jl
lret
fwait
inc
in
add
sub
xor
fdivrs
ret
add
fists
fidivrs
fistpl
adcl
and
cmp
xchg
mov
int
pop
xor
inc
not
xlat
int3
addl
xchg
sub
ljmp
add
cmp
pop
out
mov
out
sahf
adc
jl
inc
leave
xor
cld
xchg
fiaddl
and
stos
in
push
flds
clc
movsb
push
jge
ja
push
cld
push
outsl
movl
pop
cmp
sub
movsb
jbe
mov
lea
arpl
mov
xchg
cs
les
jmp
jbe
popa
sbb
int
cli
test
std
or
frstor
adc
pop
jb
fiaddl
ljmp
cli
jbe
cwtl
nop
idivb
xchg
aaa
push
pop
imul
xchg
cltd
mov
xchg
ficoml
les
adcb
sti
dec
pop
push
std
mov
inc
xchg
enter
push
mov
stc
cmpsb
dec
stos
das
inc
xchg
push
out
and
addb
icebp
pop
add
dec
push
sbb
loopne
xchg
push
arpl
test
push
mov
std
and
sub
cmp
and
in
lea
mov
adc
lods
aad
mov
cmp
mov
addl
testl
adc
or
cld
xchg
dec
jo
dec
lods
lds
das
jno
je
dec
jno
dec
inc
push
mov
or
add
pop
and
mov
mov
or
sahf
fcoms
mov
xchg
mov
add
xchg
jecxz
sahf
pop
mov
push
stos
cmpsb
mov
xor
insl
inc
daa
cmp
je
xlat
jnp
pusha
jmp
divb
in
mov
cs
lods
xchg
mov
bound
and
stc
inc
adc
aaa
push
push
and
fildl
xchg
adc
cmp
sub
xor
inc
outsl
xchg
lret
add
int
mov
push
es
ret
stc
loopne
sarb
das
xlat
cltd
mov
push
loope
pcmpeqd
mov
subb
loope
scas
int
mov
pop
lret
mov
mov
mov
rcrl
and
test
mov
jno
std
mov
js
ds
inc
popf
jnp
jl
xchg
dec
or
push
push
pop
imul
xchg
adc
push
add
movsb
mov
xchg
loope
stos
ds
mov
push
pop
loope
call
inc
pop
mov
int3
pop
fidivl
ret
je
or
xor
add
inc
out
cltd
daa
pushl
fsubrs
mov
insb
int
xor
ss
cltd
sbb
shlb
adc
lahf
or
jmp
xor
inc
test
push
jle
xchg
mov
pop
cmp
sti
inc
das
push
stc
das
mov
orl
push
pop
xor
ss
in
cmpsl
cmpsl
xor
xor
std
xchg
testb
into
andl
inc
test
imul
les
clc
xchg
jp
mov
mov
jns
stc
test
js
and
sub
jge
mov
adc
pop
fnsave
sti
std
scas
inc
popl
jno
getsec
enter
sbb
cs
cmpsl
jmp
jae
push
scas
push
and
je
jo
shlb
or
cli
bound
repnz
xchg
xchg
add
in
adc
sti
push
jecxz
loopne
out
scas
bound
lock
and
mov
insl
xchg
les
imul
outsb
dec
ja
stos
cmp
xchg
mov
xor
push
mov
repnz
mov
fcomp
cmpb
lret
daa
aad
push
scas
mov
jge
mov
add
popa
dec
repnz
addr16
aad
lahf
xchg
out
pop
xor
cmpsb
push
jl
xchg
je
lcall
and
pop
sub
lock
or
sub
xchg
sbb
cmp
movb
xor
lret
leave
insb
das
in
imul
inc
clc
movsb
dec
xchg
mov
sub
sbb
adc
pusha
leave
rclb
aas
mov
cmp
data16
xor
jb
cli
movsb
mov
lock
out
jb
sbbb
add
and
fsubrs
xchg
cmpl
lret
stos
jl
pop
mov
pop
in
in
mov
mov
pop
in
mov
xchg
lret
iret
add
ficompl
add
push
fmuls
repz
dec
and
dec
mov
push
sub
cli
mulb
mov
addr16
stc
mov
lods
sbb
adc
enter
sahf
push
jae
sub
xchg
pop
push
aas
arpl
aas
gs
cmpsl
pop
or
lret
sub
sbb
cmp
fdivrl
xchg
test
mov
into
push
ljmp
out
mov
xor
xor
mov
jl
cs
sbb
cmp
ret
je
addl
mov
inc
enter
cmp
outsb
sub
sbb
pop
sbb
and
dec
jp
test
gs
xor
xchg
daa
add
lock
pop
push
and
fimuls
cs
sub
xchg
mov
ret
xchg
add
leave
movsl
sub
clc
cmp
cmp
clc
sbb
nop
aad
pop
sbb
or
iret
test
cli
mov
add
dec
lods
arpl
loopne
lock
or
push
mov
pop
test
test
call
inc
sub
rolb
sub
dec
cld
dec
push
fists
adc
mov
xchg
xor
mov
enter
add
in
jne
jecxz
xor
loopne
cmpsl
fcoml
push
or
aaa
or
in
fnstenv
je
iret
lods
lahf
add
add
jnp
pop
mov
sub
sbb
sub
shl
mov
dec
mov
sbbl
adc
push
popa
xor
and
mov
stc
xor
test
in
push
push
incl
punpckldq
mov
fs
mov
mov
push
out
fdivs
in
inc
clc
test
inc
push
jb
test
fldt
push
adc
addr16
cwtl
push
or
add
inc
imul
xchg
in
pop
and
aas
jns
xchg
movl
outsb
mov
ret
xor
loope
loopne,pn
push
lods
cmp
jne
stos
dec
ret
push
fidivs
push
ret
mov
push
sbb
andb
popa
jmp
adc
cmp
notl
xchg
and
inc
cmp
sub
aas
hlt
jbe
dec
out
adc
xchg
lock
or
jae
popf
bound
dec
loope
shr
jno
imul
insb
cmpsb
adc
mov
testb
mov
stc
shlb
inc
cmp
fmull
loopne
popa
add
pop
lret
cli
inc
sbb
popa
pop
shlb
pop
pop
fnstenv
cmpsl
frstor
fadd
jno
pop
fstpl
or
sbb
mov
iret
jmp
shl
mov
jne
jl
imul
fyl2x
fs
into
pusha
or
arpl
inc
dec
xor
adc
jb
in
jg
sbb
cltd
les
cmp
cmpsb
test
inc
insb
xor
inc
lret
popa
mov
nop
mov
sub
lock
sub
push
push
mov
insb
cmpsl
out
fstpt
mov
dec
pop
pushf
mov
aaa
push
rorb
stos
addl
repnz
test
add
ljmp
mov
sub
ljmp
xchg
mov
pop
xlat
stos
xchg
xor
aas
mov
or
es
or
stc
mov
sbb
sar
cmpsl
rcll
lret
sbb
not
add
dec
dec
frstor
scas
xor
push
xchg
dec
add
mov
rorb
cld
insl
push
sbb
in
jae
and
cmp
pusha
ds
cmp
imul
subl
fmulp
add
iret
cmpsb
adc
dec
lahf
stos
sbb
xchg
cmpsb
hlt
pop
imul
loopne
js
jecxz
or
je
mov
sahf
mov
xor
test
cmp
scas
bound
enter
push
xchg
pop
ret
jb
sbb
cld
xchg
mov
mov
je
cmp
lods
inc
xlat
mov
sbb
int3
lahf
dec
adc
jle
ret
xor
or
push
mov
xchg
cli
mov
in
sbb
and
adc
das
je
mov
adc
cwtl
das
adc
lret
jge
loope
mov
ret
add
mov
js
stos
out
mov
pop
xor
xchg
out
adc
jnp
clc
jo
sub
push
push
lock
jg
decb
fdivrl
scas
lock
mov
jg
mov
or
enter
jb
ret
xchg
push
aaa
shl
mov
mov
sti
dec
add
xchg
aaa
and
sbb
sarb
xor
jl
pop
push
mov
imul
ret
lahf
pop
adc
movsl
mov
lods
sbb
test
pop
scas
leave
push
bound
psraw
cmpsb
clc
mov
push
test
adc
cwtl
jne
xchg
fmulp
mov
ret
jmp
pop
jns
xchg
xchg
sub
pop
xor
dec
loop
test
sbb
fdivp
adc
xchg
adc
shll
cmp
sub
int
stc
adc
into
xor
or
or
outsb
inc
sub
icebp
int
lea
pop
mov
fbld
jmp
pop
pusha
movsb
stos
mov
and
jmp
cmp
sub
mov
add
fmul
ds
enter
js
push
xchg
shrb
iret
jecxz
nop
aad
ss
xor
shll
xor
out
pop
or
rolb
into
mov
sbb
loop
xchg
arpl
icebp
push
scas
lret
ror
icebp
mov
andb
insl
sbb
divb
aam
dec
cmp
or
enter
insb
in
cmp
dec
popf
fcmove
loop
cmp
pop
or
ljmp
jne
insl
addr16
insb
and
leave
xchg
cmp
pop
test
pop
rclb
lcall
fstpl
mov
add
imul
lahf
jno
sub
lods
xor
gs
pop
dec
pushf
add
addb
xchg
cmp
icebp
insl
add
in
imul
push
sub
push
push
ret
add
sbb
outsb
push
lahf
test
inc
dec
addr16
stos
pop
out
mov
cmp
mov
fisubrs
mov
pop
inc
ljmp
in
insb
push
rolb
xor
sub
js
das
sbb
popf
ror
aam
add
push
sbb
inc
mov
mov
sbb
ja
test
push
pop
aad
in
cld
mov
jl,pn
out
addr16
leave
xchg
ja
mov
mov
or
ret
fs
cmp
idivb
in
xchg
cld
adc
dec
sbb
lret
cmpsb
dec
ljmp
hlt
int3
mov
jnp
push
rol
aas
std
push
push
adc
loopne
or
mov
adc
jmp
clc
js
fwait
nop
adc
ret
mov
mov
in
fimuls
xor
lods
fistpl
iret
dec
jecxz
jle
inc
sbb
mov
and
in
test
mov
add
sbb
sarl
std
out
jl
arpl
mov
repnz
pusha
sbb
dec
and
push
pop
shrl
call
cld
sar
hlt
xor
es
aad
cmpsl
pop
sahf
aad
add
push
adc
subb
out
faddp
out
addr16
inc
push
mov
sbb
stos
pop
leave
cmp
add
xlat
incb
mov
mov
mov
aad
jb
es
sbb
jecxz
inc
sbbl
jp
fdivs
fcoml
sbb
adc
cmp
pusha
fstpt
jecxz
fcomip
out
insb
ret
icebp
push
xchg
cmp
xchg
push
js
pop
sub
insb
mov
mov
in
sub
xchg
mov
lret
imul
imul
jno
pop
pop
or
loop
movsl
push
dec
andl
or
jb
mov
orl
jbe
out
dec
jno
dec
iret
jns
or
push
dec
adc
scas
cmp
faddl
xor
ret
jns
rol
pop
out
jmp
pop
sbb
enter
cmp
enter
push
xchg
or
adc
pushf
or
cmp
jb
inc
and
in
in
pop
mov
mov
int
out
mov
adc
pushf
adc
and
call
fisttps
jle
push
mov
pop
and
push
xlat
add
xchg
sub
push
pop
add
jae
sub
hlt
imul
ja
out
add
ss
or
fisttps
and
inc
mov
int3
or
lods
mov
jecxz
cmc
cmpsl
popa
sbb
mov
stos
shrl
int
mov
out
sub
shlb
inc
lods
sbb
inc
mov
xchg
mov
mov
jbe
mov
lea
or
mov
xchg
mov
push
xlat
fbstp
int
aas
cwtl
ss
xorb
mov
mov
sbb
cmp
aaa
cmp
rcll
loopne
xor
ret
test
scas
scas
push
imul
or
outsb
sbb
cmp
mov
lea
fsubr
in
std
movsl
repnz
insb
int
xchg
inc
mov
enter
mov
test
faddl
insl
js
cmc
cmp
mov
add
adc
cwtl
orl
push
shlb
lret
and
mov
mov
scas
faddl
cld
bound
mov
lock
mov
push
inc
sub
psubd
adc
mov
inc
jns
jne
inc
sub
cmpsb
inc
adc
mov
loopne
jp
adc
pop
or
movsb
add
jno
pop
mov
inc
pusha
shrl
pop
gs
adc
in
inc
pop
ja
and
mov
adc
lods
inc
inc
push
mov
xchg
pop
mov
stc
idivb
mov
xorb
push
jo
inc
dec
dec
jge
push
insb
sub
sbb
out
insb
jb
sbb
jmp
lcall
out
outsl
adc
std
inc
in
insb
push
test
cmp
inc
std
mov
dec
std
sbb
and
fwait
pop
outsb
adc
dec
push
sarl
scas
popa
jo
xchg
xchg
es
aas
dec
push
enter
push
jb
mov
mov
inc
dec
ret
mov
in
pop
adc
mov
and
push
sbb
sti
insb
imul
pushf
mov
icebp
push
ds
xor
xor
sbb
mov
push
aas
outsb
pusha
js
pop
ss
add
cmpsl
jmp
inc
test
mov
push
repnz
mov
mov
push
pop
ss
xor
cmc
dec
cmc
or
testb
mov
pushf
or
mov
cld
loopne
insb
fidivrs
adc
xorl
fldl
arpl
xchg
jl
nop
dec
xchg
adc
mov
inc
jne
jbe
mov
int3
inc
sbb
or
nop
or
pop
mov
rcll
std
ss
in
pop
mov
inc
gs
jmp
jp
adc
dec
pop
scas
cmp
aaa
orl
dec
push
pop
mov
ret
movd
nop
mov
in
jne
xor
mov
jne
and
add
fistps
jno
gs
mov
push
lods
fnstsw
stc
mov
add
cli
mov
hlt
xor
push
test
out
mov
jns
dec
pop
xor
cmp
int
sbb
gs
sbb
rcrl
cltd
iret
insb
sbb
cmp
mov
adc
pop
aam
dec
sti
movsl
lcall
push
xchg
sbb
out
cmpsb
push
out
lock
push
scas
add
pushf
movsb
jb
or
loopne
mov
test
inc
imulb
pop
scas
mov
xlat
inc
stos
call
ficoml
cmc
sbb
push
enter
xorb
mov
shl
test
test
repnz
jnp
out
arpl
push
lds
add
or
ret
mov
ja
es
dec
enter
mov
rcl
arpl
pop
pop
loop
mov
mov
jl
pop
adc
lds
ja
mov
or
adc
pop
jmp
jb
push
mov
mov
sbbl
or
mov
or
loop
pop
pop
ljmp
movsb
sbb
xor
jne
outsb
js
repnz
cli
out
mov
push
dec
xor
dec
sahf
out
push
repnz
xchg
sub
dec
cwtl
mov
fs
shll
shrl
in
mov
fwait
out
inc
xchg
or
push
movsb
dec
mov
adc
mov
jo
lret
dec
in
es
scas
adc
push
in
rclb
mov
lret
pop
gs
mov
cmp
out
sub
adc
movsl
shlb
pop
mov
push
xchg
lds
int3
je
dec
loope
in
mov
inc
adc
or
dec
xor
shlb
cmp
push
ja
lret
sub
cmp
nop
jmp
into
jnp
and
cmp
jmp
stos
loop
pop
int
cmpsb
xor
xor
mov
pop
adc
ret
jo
mov
push
add
roll
xchg
mov
fwait
xor
cmp
push
fistpl
mov
mov
jg
ds
cmp
pushf
arpl
dec
sbb
arpl
add
mov
dec
aas
pop
xchg
mov
nopl
cwtl
cmp
scas
leave
arpl
xor
scas
jl
fsubrl
xchg
adc
pushf
idivl
fldcw
and
daa
repnz
lea
insl
rcrl
fsin
ss
jbe
push
jp
out
pop
mov
fistpll
pop
or
ja
insb
cli
xor
push
pop
dec
shlb
test
orb
mov
in
push
pop
and
pushf
adc
out
ljmp
loopne
dec
stos
stc
sub
xchg
xor
into
sbb
shrl
sarb
in
sti
or
mov
xor
xchg
jo
sub
jl
hlt
and
fwait
xlat
fs
cs
xor
movsl
mov
pop
jl
cmpsb
test
jl
xor
mov
mov
cmp
nop
jecxz
mov
out
sub
in
adc
std
jbe
and
xchg
fldl
test
mov
loope
loopne
int
xchg
xchg
jmp
aas
dec
pop
lds
es
stc
fwait
pop
lret
pop
xor
sbb
fcomi
jo
jle
xor
rorb
push
sub
std
push
push
shrb
add
mov
aam
push
push
int3
fdivl
xor
pushf
mov
ret
subl
in
cwtl
inc
aam
out
ja
jl
lret
mov
inc
ja
stc
in
push
adc
mov
shrb
xor
lahf
imul
aam
cltd
push
xchg
add
pop
jno
mov
pop
jmp
sbb
mul
sub
rol
stos
in
inc
les
jle
mov
shrb
dec
mov
aaa
sbb
icebp
or
iret
mov
jae
aad
cwtl
xor
bound
mov
and
mov
dec
adc
xchg
ret
ja
lods
popl
xor
clc
rolb
ret
shll
mov
cmp
jbe
lret
stos
mov
subb
adc
mov
insb
imul
xchg
adcl
xchg
lds
mov
mov
ret
rcrl
adc
and
push
adc
repz
adc
lahf
mov
das
jmp
mov
daa
pushl
fimuls
xlat
push
out
jmp
sbb
leave
mov
ret
mov
arpl
push
or
int3
push
outsb
fstps
or
and
clc
in
test
sub
jnp
arpl
pop
test
mov
popf
loopne
add
add
mov
inc
adc
insl
jmp
cli
push
pop
mov
mov
dec
mov
xor
incl
mov
in
jbe
daa
loope
ds
xor
adc
dec
outsb
dec
add
mov
jmp
rcrb
sub
pop
orl
clc
cs
in
jnp
push
into
jbe
or
fcoms
push
shll
push
mov
mov
sti
lahf
sub
dec
std
jecxz
mov
lods
fidivrl
std
lds
push
mov
mov
mov
fimuls
xor
lcall
adc
jg
call
gs
cs
in
sbb
mov
xchg
mov
add
push
sub
cmp
roll
sahf
adcb
push
mov
jp
and
xor
cmp
add
jno
xlat
js
fcomp
fstl
rorb
testl
test
sahf
das
add
lahf
xchg
imul
add
mov
cmp
out
mov
xor
cmp
in
inc
push
iret
or
iret
cmc
cmp
xor
cs
mov
jg
sbb
jg
out
je
jae
repnz
jle
pop
sbb
jmp
add
popa
mov
cld
jo
xorb
mov
lock
imul
mov
pop
cli
test
loopne
outsl
lcall
and
pop
ja
test
mov
fcomps
cs
int
pop
sahf
mov
or
xlat
repz
add
ret
fcmovnu
popa
dec
stos
sub
fcmove
stos
bound
sub
xchg
mov
mov
mov
rcrb
add
push
cmp
notb
push
cmc
push
xchg
jl
push
jbe
jg
xor
and
mov
lcall
push
in
dec
dec
idivb
mov
ss
imul
fs
imul
push
in
jecxz
lcall
daa
mov
int3
jecxz
dec
push
jnp
test
push
fstl
js
sti
inc
lret
mov
or
fbstp
cmp
xchg
ljmp
and
gs
jl
pop
inc
cwtl
int3
scas
fsqrt
mov
cltd
lods
cmp
aas
pop
aam
inc
cmp
cmpsl
pop
mov
sub
ss
push
add
or
adc
ret
pusha
cmp
mov
add
aam
adc
push
das
dec
mov
lcall
lcall
addr16
leave
xchg
mul
cmc
push
pop
enter
pop
incb
hlt
lret
enter
push
fstps
mov
or
in
lock
cld
jecxz
imul
xor
cmp
ljmp
xlat
test
adc
dec
lock
pushf
jge
and
jne
cltd
pop
cld
fsubr
test
or
enter
add
aaa
inc
popa
out
subb
mov
rcr
ficoms
xchg
adc
jnp
jmp
pop
movsl
mov
gs
sbb
aam
shlb
sbb
outsb
fnstsw
sub
lret
sbb
call
sarb
xor
push
in
dec
sub
xchg
leave
fistpl
xchg
loop
ja
cmp
mov
das
mov
decb
pop
call
cs
mov
sbb
mov
in
sub
fadds
cld
xlat
inc
mov
arpl
jno
cmp
popf
pop
mov
wrmsr
xchg
jns
jmp
cltd
cwtl
pusha
arpl
push
addr16
imul
ror
adc
adcl
push
and
pop
mov
sbb
lret
iret
dec
pop
cld
xchg
ljmp
loop
aam
add
call
addr16
movsl
call
inc
adc
or
mov
in
fdivrl
mov
clc
outsl
pop
dec
ficomps
test
fwait
adc
cmp
loop
fsubrl
mov
mov
shl
popa
or
push
out
lcall
test
adc
insb
sbb
and
test
int
lods
lcall
mov
movsb
fisttpl
mov
daa
jo
scas
or
ljmp
sub
sbb
neg
popf
xlat
call
rorb
jl
mov
fcmove
jbe
pop
pop
sub
lds
and
cmp
dec
subl
sub
sub
jno
or
loope
je
shl
xchg
xlat
out
push
int3
push
mull
adc
add
fsts
or
add
mov
hlt
aaa
pop
inc
add
cmp
mov
in
xor
arpl
rclb
mov
pushf
cmc
in
test
jae
insb
jnp
add
push
push
icebp
jg
xor
fistpl
imul
cmp
pop
ja
mul
mov
lcall
add
dec
and
adc
adc
jge
xor
dec
cmp
xor
clc
or
test
and
loop
adc
lcall
or
dec
or
inc
cltd
mov
mov
ret
pop
lock
sbb
inc
xchg
cmpsb
jno
mov
xor
push
mov
or
cmp
in
push
mov
arpl
ret
pop
cmc
mov
pop
in
jnp
cmpsl
sahf
gs
sbb
pop
mov
mov
mov
mov
sub
inc
lahf
enter
shlb
sub
mov
repz
mov
daa
hlt
les
mov
arpl
rcr
stc
sub
and
jno
fsts
dec
xor
push
xchg
push
into
and
pop
jmp
ljmp
sub
pop
fldl
clc
gs
push
fnstcw
push
adc
and
into
and
jp
and
test
or
mov
icebp
rorb
sbb
xor
loope
shl
xor
add
aaa
imul
pushf
mov
mov
inc
push
pop
fstps
adc
ficoml
adc
pop
clc
xchg
movb
mov
xchg
iret
push
movsb
inc
xor
int
cmc
jne
mov
mov
sub
push
fstps
xchg
xchg
pop
aaa
in
pop
xchg
scas
leave
out
pop
mov
mov
imul
adc
lea
cli
sarl
push
mov
loope
cltd
ja
cld
icebp
mov
xor
or
imul
or
pop
clc
sub
out
stos
xor
push
in
sbb
mov
jae
fisubs
in
cwtl
xor
xchg
and
nop
outsb
push
or
add
adc
arpl
sub
icebp
ret
and
add
scas
movsb
rcl
lcall
stos
push
inc
mov
xor
xor
jmp
inc
adc
mov
popa
ret
xor
test
sub
movsl
jl
dec
inc
mov
iret
mov
mov
mov
dec
daa
push
xchg
add
iret
jns
push
pop
icebp
lcall
scas
sbb
loop
int3
ret
mov
push
or
loopne
dec
add
push
xchg
cmpsb
jle
insl
or
add
ljmp
faddl
adc
sbb
add
xor
iret
les
lret
rorl
mov
icebp
push
push
or
popa
add
sahf
cltd
in
rolb
iret
pop
nop
pop
mov
fstps
jecxz
xchg
xchg
popa
xor
aam
icebp
pop
stc
fists
adc
into
jecxz
stos
sub
orl
cli
es
push
or
mov
icebp
sbb
push
sbb
sbb
sbb
inc
mov
adc
mov
fiaddl
pop
cmp
add
pop
mov
lods
bnd
les
adc
ficoml
fwait
inc
dec
gs
mov
dec
mov
cmp
ret
sub
xchg
std
xchg
adc
idivl
dec
push
xchg
imul
in
mov
aad
xchg
sarb
mov
mov
int3
scas
test
push
sbb
imul
inc
and
arpl
cmp
cmpsb
adc
cltd
jno
lret
jmp
arpl
sahf
leave
arpl
mov
sbb
adc
lcall
ss
lds
in
dec
out
test
adc
aaa
jmp
push
xor
mov
es
xorl
in
cwtl
add
and
arpl
jge
dec
ss
jno
inc
fcoml
push
call
inc
push
cmp
mov
sbb
bound
fwait
cmovg
cvttps2pi
add
push
or
mov
rcrb
je
cli
and
arpl
das
mov
mov
sub
or
mov
pop
jbe
xor
outsb
xor
jne
rcr
pop
dec
in
aam
movsl
jecxz
mov
out
jb
inc
mov
xchg
push
sbb
test
mov
loopne
add
into
adc
xlat
sbb
idivb
xchg
sub
cmpb
in
ds
fildl
mov
xor
push
mov
loopne
arpl
xchg
lahf
pop
push
mov
lret
in
push
sbb
lock
xor
add
xor
dec
xchg
ds
pop
sub
push
rol
add
inc
pop
pop
rcl
cmp
loopne
aaa
pop
push
outsb
inc
lret
popl
dec
popf
out
imul
cs
nop
test
stc
sbb
adc
clc
mov
cmp
loop
lcall
clc
lahf
mov
push
push
arpl
mov
cmpsl
push
cwtl
xor
push
xorl
dec
inc
cli
mov
xchg
push
aad
pop
enter
stc
sub
jo
sbb
jae
sbb
sbb
pop
cmp
nop
xor
faddl
out
outsl
add
iret
daa
inc
mov
js
aas
sbb
movsl
out
dec
sub
lcall
xchg
test
sbb
test
sbb
hlt
icebp
sti
push
aad
sbbb
daa
and
pop
aas
cmp
jne
or
cmc
popf
sub
sbb
jg
sub
add
add
sbb
js
iret
add
dec
addr16
imull
test
dec
jbe
out
movnti
lret
cs
mov
pusha
repz
and
dec
xchg
outsl
aaa
clc
into
dec
stos
mov
mov
xor
or
or
inc
cmp
andb
fadd
jle
mov
sub
add
and
and
mov
or
jl
sahf
xchg
popa
es
nop
jmp
adc
imul
fisttps
rolb
lret
inc
das
stos
popf
xchg
dec
lods
mov
scas
push
rorb
aam
jne
in
xchg
ja
and
xlat
in
ret
fcomps
cmc
test
mov
test
or
js
in
aaa
cmp
lret
dec
or
dec
into
cmp
inc
jg
xor
cld
lds
stc
mov
divl
push
test
adc
xor
aam
subl
fists
jae
call
push
mov
sti
xor
or
cltd
add
sub
adc
nop
and
cmpsl
mov
jns
ss
sub
std
repz
sbb
pop
push
jb
roll
dec
xchg
sub
mov
aad
aaa
dec
mov
daa
mov
dec
mov
pop
lea
pop
dec
in
mov
push
aas
sarb
mov
or
lds
xorb
cltd
into
out
adc
leave
js
add
insb
adc
xor
mov
cmp
cmc
mov
mov
js
mov
shrl
clc
das
pop
push
xchg
pop
cmp
test
addr16
cmp
mov
nop
movsb
jl
sbb
dec
push
pusha
inc
xchg
and
mov
sub
ret
mov
jne
xor
jecxz
mov
mov
daa
push
pop
push
jae
mov
les
aam
cmpsl
repnz
sub
mov
movsb
push
fsts
pusha
cmp
sub
add
push
push
repz
pop
imul
or
push
xlat
enter
inc
mov
adc
inc
movsl
inc
sbb
es
and
and
ret
mov
sbbl
test
pop
loop
inc
mov
adc
fbstp
in
mov
dec
subb
mov
sti
lret
mov
sbb
cmp
popa
flds
test
out
enter
or
cld
and
scas
xchg
inc
dec
pop
aad
pop
xor
in
pop
adc
cmp
dec
push
negb
cld
inc
jnp
lahf
or
mov
xchg
iret
or
jb
sti
orl
ds
pop
and
pop
aam
inc
sahf
mov
testl
add
dec
pusha
inc
aaa
sbb
in
inc
lret
or
push
lods
in
out
push
insb
div
add
lods
je
pop
in
mov
mov
cmp
mov
jno
lret
cmp
add
pop
jecxz
or
pop
xor
dec
repz
cmpsl
dec
jge
add
mov
ljmp
push
mov
in
mov
stos
dec
ljmp
cmpsl
dec
jb
and
jno
cs
mov
ss
mov
stos
lods
stos
add
repz
pop
add
aam
push
inc
sub
mov
xchg
add
lods
sbb
les
sbb
and
add
mov
mov
add
jbe
out
int
roll
sbb
cli
movsb
ret
ljmpw
mov
jg
arpl
inc
inc
xor
add
push
fwait
shl
push
cli
sahf
in
dec
dec
movsb
daa
push
adc
fmull
xor
mov
mov
bound
mov
insb
push
xor
xchg
cmp
lret
push
jbe
push
mov
data16
test
sub
adc
and
cmp
repz
sbb
xor
sub
xor
cld
shl
stc
cmc
cmp
pushf
movsb
mov
fstl
inc
es
popa
icebp
jecxz
lahf
dec
dec
cs
stos
mov
sub
sub
inc
js
jp
xchg
dec
rolb
andl
sub
cld
inc
or
or
loopne
xlat
insb
mov
mov
cmp
jl
push
dec
ja
inc
cmp
lea
out
push
jns
and
cmpsw
je
and
mov
push
int3
sbb
sbb
jbe
sahf
dec
sbb
dec
mov
dec
ss
push
or
stos
outsb
loope
repnz
jnp
lcall
cmp
jne
cwtl
cli
cmpl
dec
insb
bound
inc
pusha
and
jbe
popa
mov
rolb
xchg
testl
lds
std
aas
into
jb
cwtl
test
add
inc
inc
jbe
inc
aaa
jmp
nop
and
repz
or
cmp
in
cmp
sbb
in
sub
push
mov
lahf
lds
cmpsl
mov
loop
adc
out
cli
dec
sub
jo
cmpsl
fiadds
push
gs
pop
pop
mov
scas
dec
add
mov
inc
jl
lcall
dec
scas
xchg
shll
xchg
mov
xorl
ja
ror
lea
pusha
inc
cmp
pop
add
jae
arpl
sub
fisttpl
sbbl
xor
adc
mov
pop
sbbl
imul
mov
and
scas
pushf
sub
or
ja
or
xor
mov
sub
add
sbb
lea
in
bswap
push
xchg
addr16
pop
xor
and
or
mov
dec
mov
cld
call
lret
push
xor
xchg
mov
xchg
ja
adc
inc
adc
repz
xchg
sbb
pop
push
mov
sub
push
cmp
aam
xor
loopne
dec
fadd
into
push
inc
aas
out
inc
xor
or
icebp
add
arpl
dec
add
cmpsb
pop
cmp
jge
adc
bound
stos
push
ret
jle
sub
ss
sub
jno
icebp
dec
adc
mov
shl
jne
addr16
adc
inc
stos
adc
jne
jp
pusha
add
inc
adc
rclb
cld
add
gs
push
mov
add
insb
or
sbb
mov
outsb
fcoms
jo
adc
xor
or
iret
imul
rcrb
sub
sbb
mov
jne
scas
sbb
lock
pop
mov
cs
sahf
das
sbb
push
scas
sbb
into
adc
pop
mov
pop
call
dec
lea
xchg
xchg
add
push
sub
mov
jnp
mov
js
ror
pop
sub
dec
push
cmp
sub
test
xor
dec
clc
sub
inc
mov
xor
mov
ljmp
or
mov
jne
shrl
xor
xchg
push
fdivrs
pop
out
add
stc
xor
xor
test
push
jp
enter
push
int3
inc
jae
pop
jmp
test
add
test
leave
fstpl
clc
dec
inc
imul
ljmp
xchg
shrb
xchg
jnp
out
mov
subl
in
pop
add
add
cwtl
aas
iret
repz
inc
add
fidivs
int
or
or
or
jno
add
movsb
xchg
outsb
testb
out
mov
stos
insl
sbb
inc
popf
xor
jmp
sbb
pop
std
and
xchg
mov
inc
or
adc
and
addr16
insl
and
adc
cld
lods
icebp
jge
into
mov
aad
aaa
lret
inc
jmp
lods
lds
call
outsb
mov
cmp
into
xchg
mov
dec
mov
cltd
out
mov
shl
sbb
cwtl
ret
inc
imul
xor
dec
lds
or
sti
adc
jge
cs
push
lret
mov
out
sub
ss
test
jle
jmp
push
movsb
test
aam
inc
xchg
fdivrs
cmp
lds
cmp
pop
sbb
lods
xchg
test
out
inc
jmp
mov
adc
add
cmp
lds
outsb
dec
xor
ljmp
in
movsl
in
and
xchg
mov
sbb
or
inc
mov
fwait
and
pop
bound
jp
loop
push
push
add
fwait
xchg
mov
jae
xor
arpl
mov
xor
ret
fwait
jge
mov
inc
jmp
sbb
cltd
or
dec
jmp
xor
pusha
fildl
push
mov
dec
icebp
sbb
add
movsb
shrl
loope
sbb
pop
js
mov
inc
push
push
fwait
popa
push
lret
cli
aam
xchg
repnz
dec
mov
pushf
pop
mov
jecxz
rcrb
xor
ret
xchg
mov
out
adc
or
and
inc
fidivrl
fwait
xor
add
ljmp
mov
ss
mov
ret
dec
inc
mov
fists
cmp
sbb
lahf
cmp
into
ret
shll
sti
mov
pop
push
inc
les
mov
pop
add
pop
xchg
lret
cmp
pop
dec
push
bound
std
pop
jp
xlat
jns
add
xor
stc
fdivl
xchg
fcomps
dec
mov
xlat
in
sbb
mov
negb
jne
add
rclb
xchg
mov
fidivs
lret
mov
rol
out
xor
iret
mov
cltd
pop
dec
int3
fmuls
not
cltd
repz
cli
movsl
push
adcl
sub
adc
cmp
mov
mov
popa
jge
out
sbbl
sub
xchg
leave
jb
sbb
rorl
xlat
pop
cltd
dec
fistpl
popa
rcrl
inc
mov
push
mov
mov
fdivrp
dec
cmc
scas
xorl
lods
fmull
int3
push
mov
push
push
and
cmp
out
dec
jne
shl
push
sbbl
scas
mov
movsl
jp
int3
flds
mov
lock
bound
loope
cmp
outsl
loope
in
addps
lods
add
insl
cltd
or
mov
add
and
inc
and
mov
xchg
inc
hlt
push
jne
int3
outsb
shrl
and
cmp
inc
xchg
push
rolb
insl
pop
xchg
aaa
dec
cmc
fcomip
adc
test
mov
xorb
fcomps
add
xor
jo
ja
call
xchg
call
jnp
add
mov
cmpb
lods
pop
enter
cmp
mov
adc
and
test
scas
adc
inc
push
movl
stos
adc
inc
mov
mov
mov
aas
push
cmp
mov
fcmovne
fstl
xchg
and
pop
mov
outsb
dec
cltd
push
xchg
cmp
iret
fisttpl
cld
hlt
mov
add
addr16
es
stos
pop
out
in
sub
mov
insl
ficomps
lea
add
iret
roll
andl
sbb
ret
mov
dec
sub
int
push
iret
push
in
in
fucomip
popf
lret
fs
and
jle
call
outsb
mov
lock
sub
and
dec
mov
ljmp
mov
not
push
push
lods
sbb
notb
out
mov
push
adc
cs
mov
mov
sub
daa
pop
in
xlat
push
mov
gs
icebp
lahf
sbb
fldcw
fildll
ret
jmp
jge
stos
and
test
or
and
dec
mov
push
addr16
inc
mov
xor
lods
add
pop
jns
out
out
dec
test
aad
enter
sub
sub
jmp
dec
stos
sti
in
cmc
fnsave
jns
fmuls
mov
ret
adc
ljmp
or
imul
pop
rcrb
addr16
adc
fisubrs
lcall
outsl
xchg
lret
cld
mov
cmp
inc
out
cmp
or
adc
stos
and
xor
xlat
jnp
stos
ljmp
shrb
jb
jge
mov
pop
cmpb
cmpsl
fsub
lods
jl
mov
pusha
add
shll
cmp
mov
stos
data16
pop
push
adc
mov
push
pop
mov
dec
mov
inc
mov
addr16
lock
popf
dec
mov
jmp
pop
push
out
cmp
out
sub
cld
or
lret
mov
mov
jns
rolb
fs
jecxz
loope
pop
test
lret
sub
pop
cmp
mov
pop
addr16
loop
sub
lcall
push
adc
mov
or
sub
adc
lds
jbe
or
adc
sbb
mov
push
jmp
out
popf
add
cmp
out
data16
ret
sbb
pusha
pop
jecxz
dec
inc
scas
nop
mov
lcall
jp
in
push
xchg
lret
not
dec
adc
stos
dec
sbb
inc
dec
mov
push
sbb
inc
pop
cmc
loope
sub
mov
inc
test
das
rorl
and
mov
in
dec
or
ja
sbb
sub
sbb
or
pop
or
and
bound
jg
lea
out
outsb
inc
outsl
sti
scas
loop
lcall
mov
into
stc
cmpsl
xor
add
bound
repnz
mov
push
test
xchg
call
xor
shlb
popf
pcmpeqd
ljmp
lods
pushf
movsl
lock
outsb
je
cmpsb
sbb
jo
cmova
and
cmp
cmp
or
jno
cli
mov
sbb
push
push
jmp
es
mov
dec
mov
rcr
jmp
mov
inc
dec
jo
mov
notl
and
jnp
imul
in
pop
jecxz
adc
iret
notb
in
mov
push
sarl
movsb
adc
sar
sbb
push
sub
inc
test
test
mov
mov
ud0
leave
mov
imul
sub
sbb
cs
dec
sbb
or
insl
and
or
inc
icebp
out
pop
test
and
xchg
jg
loope
stc
bswap
stc
xchg
je
push
or
dec
cld
push
mov
aas
mov
out
rolb
adc
mov
adc
nop
or
icebp
push
dec
or
pop
test
jecxz
xchg
push
test
inc
loop
rolb
movsl
js
xchg
arpl
mov
dec
push
add
mov
int
sub
andb
xor
test
xlat
xchg
cmpsb
mov
mov
sbb
inc
or
cmp
aam
xchg
pop
jns
cmp
stos
bound
lahf
and
mov
fisubrs
pop
popf
aaa
sbb
loope
xorl
fisubl
ret
add
lahf
jecxz
imul
push
mov
int
clc
jge
jns
jp
mov
lahf
dec
xchg
sbb
mov
add
dec
sbb
adc
pavgw
outsl
inc
stc
cwtl
shlb
jbe
dec
popa
mov
ljmp
inc
pop
sub
filds
sbb
test
add
sbb
in
mov
inc
xchg
add
ljmp
inc
jno
fwait
xor
je
xor
lret
clc
daa
test
outsb
and
dec
adc
sarb
push
aas
in
push
sub
fwait
mov
repnz
add
scas
sahf
and
ror
out
mov
inc
push
imul
das
addr16
inc
jle
cld
into
lods
and
adc
dec
ficomps
mov
sbb
fcoms
pusha
pusha
push
sbb
gs
pop
cld
xor
xchg
lret
pop
popf
xor
cmp
mov
arpl
xor
xor
mov
pop
cmp
push
lea
cmp
push
notl
xchg
mov
sahf
push
jmp
clc
or
test
fcomp
adc
jl
fstl
dec
es
dec
clc
hlt
mov
mov
push
mov
jmp
int
mov
ror
and
add
inc
pop
addr16
push
leave
mov
iret
pop
mov
push
sub
sahf
aas
cmp
cmpsl
mov
fs
icebp
sub
push
adc
mov
push
outsl
adc
test
std
int
bound
in
fistpl
icebp
popa
mov
dec
addl
cmp
adc
loopne
sti
les
push
xor
lds
mov
imul
sub
sub
lret
xchg
and
mov
mov
rorl
cmp
mov
add
cmp
ret
push
mov
arpl
icebp
mov
js
sbb
or
cld
subl
sbb
lret
mov
mov
inc
rcl
fadds
sbbb
scas
sub
sub
adc
sbb
jno
stos
pop
jae
adc
mov
shr
aaa
mov
addr16
cli
fistps
mov
insb
mov
outsl
fistpll
popf
xor
push
inc
mov
sub
rcrb
mov
js
sbb
push
addb
fucom
mov
xchg
adc
les
cli
inc
mov
icebp
clc
xor
cwtl
or
js
jle
push
adc
pop
adc
out
ljmp
flds
popa
inc
fsubs
shll
push
add
lods
in
sbb
mov
inc
sti
es
jl
loope
iret
and
aas
aas
mov
repz
push
xchg
pop
jns
or
jl
xchg
into
and
jnp
scas
push
imul
fs
mov
iret
push
lds
dec
mov
aaa
sahf
pop
adc
dec
popf
and
cmpsb
jle
adc
sahf
out
pop
cli
aad
imul
push
jnp
das
and
ret
xchg
sub
mov
scas
stos
jnp
lret
mov
sbbl
sub
or
cmp
call
pusha
inc
lahf
in
into
pushf
xchg
and
loopne
sbb
push
test
daa
scas
mov
loope
dec
xchg
sbb
adc
fnstenv
inc
xchg
mov
jmp
div
hlt
movsl
push
cmp
out
jge
jg
lret
sti
mov
pop
xchg
lea
cmp
sbbl
fwait
sub
mov
cmp
out
push
js
sub
adc
aaa
int
mov
js
mov
sub
pop
insb
pop
sarb
or
pop
rcr
mov
ljmp
and
flds
push
xor
lock
mov
insl
sbb
ficoms
lahf
adc
jle
es
adc
sbb
ret
cmp
jl
insl
int3
xchg
movsl
xchg
lock
movsb
push
aas
mov
pop
push
or
int3
pop
pop
ljmp
aaa
dec
sahf
push
icebp
or
int3
jne
xor
adc
inc
add
or
shrl
sbb
adc
inc
mov
lods
cmc
ficompl
int3
jmp
cmp
in
shll
rcrb
pop
adc
scas
sbb
mov
pop
push
and
push
mov
outsl
dec
or
push
and
shrl
vzeroall
out
add
sbb
loopne
aam
cwtl
inc
add
lahf
mov
test
test
sbb
mov
jno
mov
mov
mov
aam
mov
sti
mov
lret
sarb
xor
insb
push
shl
xor
stc
aam
rclb
lret
xor
scas
hlt
das
testl
in
mov
stos
ret
push
xor
jl
sbb
insb
xchg
jne
mov
addl
jnp
mov
je,pn
push
movsb
jo
fwait
adc
leave
sti
dec
xlat
cmp
scas
push
std
outsl
xor
scas
mov
out
add
mull
push
out
cs
mov
mov
rcrl
pop
je
xor
lret
mov
sub
out
fimuls
movsl
mov
stos
outsl
xor
push
cmp
inc
rep
xor
sti
sub
pop
out
mov
pop
sub
mov
jle
rolb
add
cmp
xor
push
sub
mov
fwait
movsl
jns
fwait
and
test
add
mov
subl
arpl
sbb
cmp
out
fisttps
mov
mov
inc
stos
adc
lahf
divb
or
cmp
inc
push
mov
inc
dec
std
jg
inc
push
ja,pn
adc
inc
out
fnstenv
and
push
inc
sbb
fmull
adc
push
testl
inc
roll
aas
xchg
idiv
shlb
jg
mov
or
pop
xlat
arpl
lds
sbb
stos
dec
orb
mov
xchg
rclb
jle
mov
xchg
icebp
aad
cmpsb
cmpsb
mov
icebp
jmp
mov
or
jbe
repnz
out
shrl
add
imul
rcrl
mov
fildl
ficoml
movsl
jno
lods
pop
repz
and
in
push
mov
fs
mov
pop
pop
lret
out
xchg
test
xchg
dec
test
push
mov
repnz
imul
push
roll
mov
data16
je
pop
mov
mov
fwait
inc
movsb
cwtl
dec
stos
jmp
ljmp
out
ss
fstpt
insb
pop
repnz
out
scas
movsl
int3
add
testl
addr16
mov
mov
ret
xlat
xlat
or
loopne
fldl
lret
mov
xchg
pop
imull
pop
jb
push
push
xchg
sbb
push
push
in
pop
mov
and
imul
clc
rclb
dec
dec
inc
ret
mov
cmp
mov
dec
sub
ret
insb
jns
fcmovu
xor
out
lock
and
sbb
mov
call
sbb
insl
xchg
dec
imul
cli
int3
lcall
jge
lret
loop
popf
adc
std
in
xchg
pop
rolb
scas
out
fwait
lcall
sbb
jnp
cmp
adc
xor
hlt
jb
into
pop
xor
cmp
repnz
jecxz
and
dec
sub
stos
incb
adc
push
dec
icebp
mov
jb
sbb
sbb
popa
addl
lods
stc
inc
push
notrack
xor
xor
xor
int3
ret
or
outsl
lock
addr16
std
aad
mov
pop
xchg
push
add
aam
bound
lahf
push
popa
mov
dec
inc
ret
add
add
cmpsl
jae
incl
cli
mov
aam
and
add
dec
pop
mov
insb
cmp
xor
std
mov
adc
cmc
nop
xchg
dec
test
lods
loopne
add
andl
pop
jl
mov
or
outsb
add
imul
lods
dec
push
fldcw
mov
sar
jp
pop
xchg
ret
mov
insb
and
ss
cmp
mov
cmpsb
mov
cld
shrl
sub
pop
icebp
mov
or
and
xor
inc
sub
push
sub
xchg
hlt
xlat
lock
push
xchg
and
xchg
add
aad
dec
inc
mov
repnz
cmp
jb
ds
ret
repnz
or
mov
int
and
mulb
pop
clc
out
hlt
sbb
xchg
cmp
dec
lods
adc
int
push
std
xchg
push
cmpsb
pop
imul
out
inc
lcall
push
fidivrl
inc
adc
xchg
adc
pop
inc
inc
push
sbb
stos
xlat
sub
sub
adc
xor
cmpsl
icebp
push
in
mov
mov
andl
pop
aam
pop
stos
gs
cmp
test
adc
jb
lods
cltd
sub
imul
adc
aam
les
add
decl
push
cmp
adc
jb
pop
in
cld
test
fistps
lods
loopne
mov
rcrb
pop
cld
inc
sbb
shll
mov
sub
sbb
inc
xor
dec
push
jns
cld
sar
addr16
mov
mov
push
test
mov
push
sub
movsb
in
sahf
sub
rcrb
cltd
xchg
dec
fwait
inc
divb
gs
jmp
nop
ljmp
mov
loopne
add
mov
pop
into
push
xchg
dec
add
lods
adc
sub
hlt
sub
xchg
cmp
xchg
das
in
arpl
lods
enter
daa
out
outsb
shrl
out
xchg
pop
sbb
xchg
cld
xchg
push
clc
mov
and
repnz
lds
push
or
lret
cmpsl
jmp
test
mov
mov
ja
cmovl
xchg
aad
mov
mov
shlb
scas
test
ja
xchg
stos
clc
mov
ja
or
imul
sti
mov
add
and
inc
lahf
hlt
rclb
lods
clc
cmp
mov
pop
jb
das
inc
lret
loope
xchg
mov
mov
jg
xor
xor
out
push
mov
xchg
lock
or
or
loop
in
sbb
iret
nop
inc
inc
mov
mov
scas
aam
not
std
jne
in
sbb
and
mov
fmuls
cmp
xchg
outsl
test
sarb
fucomip
cwtl
cmpb
add
push
cmpsl
mov
popf
test
pop
push
pop
incb
dec
pop
dec
icebp
dec
push
mov
cwtl
adc
lds
xchg
jmp
mov
imul
adc
lods
imul
push
into
test
stc
sub
lds
out
arpl
sbb
icebp
loopne
mov
arpl
fistpll
out
jno
mov
mov
pushf
mov
clc
cld
sub
mov
adc
mov
xchg
jge
fcoms
xchg
xchg
sahf
aaa
and
push
xor
push
lea
cmp
mov
xor
push
pop
and
shlb
ret
aam
pusha
xchg
aas
jnp
movsb
xchg
mov
jp
mov
adc
call
xchg
hlt
inc
lods
aaa
insb
cmp
enter
fstpl
js
pop
inc
imul
xchg
scas
ficompl
aam
js
ffreep
xor
clc
sbb
add
push
inc
out
cmp
jge
lea
push
sub
rorb
mov
jbe
addr16
orb
enter
cmp
insb
jge
stos
addr16
stos
hlt
pop
mov
pop
and
stos
imul
and
sbb
mov
mov
hlt
addb
pop
lea
jb
push
imul
loop
popa
dec
aad
fldt
mov
and
xchg
xor
int3
mov
fwait
dec
push
ret
movsl
std
into
inc
pop
push
nop
jecxz
cld
enter
mov
or
push
fisttpll
lods
or
jae
mov
mov
pop
push
push
and
sbbb
cli
stos
add
sub
ret
bound
jne
mov
jne
jae
and
adc
into
js
addr16
out
mov
xchg
inc
mov
mov
ret
jb
dec
and
xchg
push
push
inc
xchg
aad
scas
sub
pop
sbb
xchg
ja
inc
lahf
stc
ret
push
jae
leave
lods
es
add
xor
cld
sbb
push
mov
cwtl
cmpsl
lea
cmp
jno
sub
cmp
pop
repz
repnz
jns
jb
mov
and
fs
xchg
mov
mov
jge
push
mov
test
enter
icebp
or
fcoms
add
fisubrl
xor
cmp
jo
aad
mov
and
cmp
rcrb
outsl
hlt
cli
into
arpl
arpl
mov
sub
in
sub
push
xor
adc
divw
lods
push
das
sub
call
sub
std
ss
loop
stos
and
sahf
fnstsw
inc
inc
xor
addr16
dec
adc
sarl
popf
push
bound
enter
imulb
loope
mov
push
popf
aaa
test
adc
in
in
out
or
and
pop
xchg
mov
mov
out
mov
cs
jns
or
jnp
outsl
ja
cmpsl
or
mov
mov
jp
leave
iret
sub
mov
les
out
add
bound
inc
dec
cmp
adc
and
decl
nop
or
ficomps
jmp
fidivl
idiv
fimuls
mov
cmp
sahf
or
add
insl
repz
sub
push
out
dec
fsubp
ja
or
sar
push
pop
mov
sbb
mov
das
sbb
jge
jle
cmc
fstpt
imul
lahf
mov
mov
mov
mov
mov
cld
ficomps
stos
rcrb
push
or
in
in
je
pop
sub
in
or
data16
sub
push
filds
test
fcoml
mov
fistl
jl
enter
pop
sti
cs
cli
jnp
fldenv
insl
notb
notb
les
push
add
daa
ljmp
mov
pop
and
sub
push
divb
sti
loop
pusha
daa
push
push
sbb
dec
add
inc
jae
mov
aaa
lds
repnz
pop
sub
leave
adc
or
pand
loope
sti
out
or
mov
push
mov
inc
inc
push
dec
adc
pushf
mov
dec
jg
jl
jns
mov
xor
outsb
cwtl
divb
and
add
jle
pop
jb
decb
in
fdivs
dec
push
cmp
je
cmpsb
dec
jns
movsl
pop
inc
sbb
inc
dec
std
stc
enter
outsb
mov
xchg
imul
cmpsl
out
sbb
ds
incb
into
ljmp
leave
jmp
sarl
out
stos
jg
imul
fistpl
out
scas
mov
out
sbb
leave
in
mov
jo
call
mov
out
mov
jne
adc
sub
test
sbb
andb
or
out
or
lea
push
stos
out
loop
pop
nop
pop
arpl
clc
ds
jg
jns
xor
mov
test
dec
mov
cmp
popf
test
arpl
mov
jne
sbb
scas
push
inc
in
mov
idivb
cmp
in
subl
or
sub
mov
push
mov
and
ja
cmpsl
xor
loop
imul
mov
xchg
dec
add
xchg
pop
pop
mov
test
cli
push
inc
ja
adc
mov
and
clc
and
and
aas
cmc
cmp
sbb
xlat
ljmp
jno
xchg
jmp
mov
xor
sbb
push
mov
xor
xchg
adcb
cwtl
rclb
sub
mov
jmp
dec
sti
arpl
hlt
adc
jns
xchg
push
jecxz
sbb
nop
inc
subl
movsl
add
stc
into
or
cltd
sahf
inc
pop
int
mov
mov
dec
xlat
jg
in
shll
inc
ljmp
jbe
pop
mov
dec
popf
cmpsl
jecxz
call
cltd
xchg
or
mov
push
das
std
sub
sbb
inc
lretw
cmp
xchg
rorb
andl
pop
test
das
bound
mov
adc
cmpsl
mov
mov
sbb
stos
and
mov
out
cltd
mov
insl
test
test
sbb
lods
pop
inc
lret
inc
cmpsl
loop
sub
lret
dec
in
cld
mov
or
es
xchg
and
enter
fsubrs
test
mov
lock
test
jmp
pop
fwait
mov
jb
jo
sbb
cwtl
call
fadds
inc
mov
out
add
hlt
adcb
sub
movsb
pusha
mov
lods
cmp
lea
sbb
les
adc
xlat
xor
mov
xchg
hlt
lahf
insb
lcall
shll
fsubp
cmpsb
inc
es
dec
out
and
xor
hlt
or
sbb
push
mov
in
test
lret
orb
jno
in
insb
or
mov
fs
mov
cmovne
inc
pushf
push
jno
clc
xchg
popa
dec
jle
movsb
nop
adc
out
imul
mov
adc
pop
xchg
scas
push
outsl
add
or
xchg
in
or
mov
xor
cmp
daa
jmp
mov
sbb
or
popf
std
fsubl
dec
pop
cltd
or
jg
mov
push
push
dec
sub
push
cmp
sbb
clc
fisubl
jle
push
dec
xlat
mov
adc
mov
rclb
cmp
pop
push
mov
sar
aad
aaa
cmp
shrb
aam
sbb
lahf
sbb
cmc
xchg
jmp
notb
gs
dec
mov
divl
add
imul
rcrl
xorb
js
hlt
push
push
xor
addl
mov
aaa
jne
arpl
cmp
push
inc
xor
aam
and
inc
add
xor
or
push
icebp
cmp
out
ds
mull
xchg
into
out
mov
add
jle
frstor
movsb
stos
std
ffree
jge
adc
mov
adc
mov
cmp
jg
xchg
test
cmpsb
cmp
iret
insb
cmovge
fidivrl
adc
insb
add
rcr
loopne
shrl
xor
mov
lea
hlt
int3
repz
xor
outsl
stc
sbb
push
repz
movsb
sbb
mov
fs
xchg
int
in
sbb
aaa
pop
aas
push
test
cmpsb
lods
cltd
dec
addr16
insb
pop
pop
and
sbb
dec
jle
xor
je
daa
push
lods
pusha
cs
popa
push
sbb
daa
idivl
adc
popf
jae
mov
fwait
xlat
mov
int
mov
cmpsl
ss
mov
and
jge
pop
xchg
push
cld
add
mov
xchg
or
mov
cs
aas
pop
subl
cmpsb
jge
imul
mov
sarl
mov
addr16
lods
mov
pop
fisubl
dec
mov
or
xchg
and
adc
mov
fs
jnp
inc
out
xchg
inc
in
mov
lahf
add
ds
inc
aaa
lret
adc
mov
addr16
cld
jmp
lcall
imul
push
jns
xor
les
mull
shrb
jle
sbbl
push
lret
mov
adc
push
imul
pop
ret
mov
sahf
mov
inc
cmpsl
jae
fidivl
push
sahf
test
aaa
ss
addr16
pop
adc
leave
sti
inc
jle
cmp
pop
cs
push
gs
mov
jbe
pop
or
out
rorb
mov
mov
addr16
dec
stos
or
enter
mov
xchg
xchg
sub
inc
lods
fsts
insb
fs
mov
popa
xchg
pop
push
adc
ds
cmpsb
movq
sbb
ficoml
dec
mov
jmp
repz
lds
push
or
mov
stc
sub
mov
mov
xchg
fstpt
mov
mov
stos
pop
mov
mov
mov
cmp
das
xorb
cmp
push
testl
insl
mov
cmp
scas
push
lods
dec
xchg
xor
push
xlat
lods
out
stos
jo
jl
in
ror
lcall
xchg
or
flds
mov
sti
lods
adc
int
dec
out
mov
or
pusha
je
jb,pn
xchg
mov
push
cmc
fbld
inc
outsb
mov
xor
xchg
andb
jnp
cmp
lahf
mov
push
imul
mov
xchg
lock
cmp
loopne
jmp
or
pop
xor
inc
mov
push
ds
scas
or
fwait
insb
mov
aad
out
adc
jae
jge
or
ljmp
daa
inc
shl
xchg
mov
insb
mov
notl
in
clc
mov
call
pop
mov
fisubrs
mov
andl
cmp
je
mov
sub
mov
and
inc
ss
push
inc
jmp
dec
or
fnstcw
pop
sub
inc
sbb
mull
push
jecxz
and
ret
mov
popa
nop
std
push
push
push
sbb
jae
sbb
and
js
xchg
ja
adc
shll
aas
adc
in
pop
mov
stc
jo
mov
jne
cmp
push
xchg
push
add
push
mov
rcrb
in
push
xor
dec
sti
hlt
dec
pop
jecxz
xor
enter
orl
add
nop
das
adc
add
cmpsl
in
ret
test
mov
testb
mov
les
lds
in
xchg
push
es
icebp
enter
inc
dec
mov
out
test
mov
loope,pn
inc
test
add
cmp
push
loop,pn
test
out
push
rcrl
mov
cwtl
inc
lret
imul
add
sub
dec
jnp
es
sbb
shrb
outsb
int3
std
adc
mov
loopne
sub
call
pop
jns
and
ds
addr16
push
xchg
mov
aam
fsub
push
add
mov
inc
and
or
jge
xor
push
stc
cli
dec
xor
and
inc
mov
inc
dec
into
insb
lret
ret
and
loopne
je
xor
cmpsl
jnp
idivl
mov
xor
adc
add
fcmovu
ljmp
lret
inc
xor
sub
sub
pop
xor
test
mov
enter
push
mov
fdivrl
sti
outsl
call
jecxz
popl
mov
xor
add
insl
ss
push
push
mov
xor
cmp
push
inc
or
add
mov
sbb
pushf
scas
jbe
pushf
pop
cli
or
push
push
cmp
pushf
or
clc
stos
mov
pusha
sub
rcrl
ds
pop
leave
insb
pop
jae
bound
lds
pusha
pop
fldl
cmpsb
push
fdivr
and
orb
dec
push
repnz
push
lds
enter
push
frstor
mov
mov
mov
mov
rcll
jg
divl
mov
lret
inc
cmp
jb
xchg
dec
in
fildl
fdivrl
in
pop
cmc
cltd
cmp
mov
out
lret
add
xchg
lds
xor
fildll
adc
imul
mov
dec
jmp
inc
ljmp
std
mov
sarb
call
adc
xor
gs
scas
inc
test
sbb
repz
dec
sbb
mov
xlat
mov
ficoms
mov
and
sahf
xchg
pop
fadd
jle
mov
ret
mov
lahf
mov
test
jecxz
inc
imul
loope
push
test
inc
dec
mov
cmp
hlt
cmpsb
inc
xor
and
out
mov
sbb
idiv
jae
push
add
jle
repnz
inc
sub
cmp
test
cmpsb
repnz
dec
ds
cmpsb
jmp
loop
clc
cltd
mov
pop
lret
mov
inc
inc
pop
pop
int
iret
sub
add
inc
cmp
jnp
loop
mov
daa
arpl
cwtl
jbe
push
mov
nop
cmp
and
lods
mov
push
mov
pop
add
fcoms
add
push
or
mov
push
jno
pop
inc
pop
xchg
pop
push
mov
scas
jecxz
or
dec
sbb
pop
int
xor
test
stos
sub
insl
iret
push
mov
push
mov
ja
call
ret
movsb
push
scas
das
pop
sub
pushf
lock
push
shr
or
adc
cmp
jae
inc
jp
cwtl
icebp
push
cmc
xchg
daa
pop
ss
pop
leave
ja
inc
dec
cmp
test
mov
jae
sbb
fsubrs
out
leave
pop
je
nop
out
jb
mov
ljmp
inc
pop
stc
lret
jge
imul
lods
sub
cwtl
xchg
shll
adc
int3
push
leave
pusha
repnz
fwait
sub
imul
mov
pop
pop
dec
mov
jle
and
mov
addr16
pop
cmpsl
out
aad
ljmp
lcall
push
dec
loope
cmp
jb
lahf
aas
stos
repnz
jbe
jbe
inc
nop
aas
rorl
cmp
push
leave
lods
add
fdiv
flds
jge
gs
mov
out
cmp
sbb
cmp
or
leave
xorl
rcrl
clc
nop
jp,pt
sub
or
add
or
out
icebp
xchg
andb
fstpl
and
lock
sar
std
sbb
lcall
push
out
les
sub
lods
mov
imul
popf
fcmove
decb
mov
mov
xchg
push
into
sti
shll
pop
pop
cmp
mov
dec
mov
cmp
stos
mov
jecxz
xchg
test
pop
pop
mov
sub
sub
sarb
dec
and
mov
shlb
jmp
cmp
stos
adc
cmp
push
push
inc
or
orl
inc
repz
pop
ret
add
pop
pop
xchg
js
lea
stos
jb
mov
cmp
imul
shlb
inc
pop
repz
inc
inc
sub
fsubrs
leave
cmp
clc
pop
cmp
adc
and
loopne
cmp
les
popl
ljmp
xchg
in
inc
xchg
xlat
fstpt
out
push
cmp
xor
adcb
das
jg
push
mov
sbb
mov
test
iret
sub
enter
xchg
mov
jae
mov
out
jo
pop
loopne
pop
ss
mov
push
cmpsb
addl
sbb
fwait
gs
xlat
or
lods
cmpsl
stos
push
cmpsl
push
xlat
cld
fadds
pop
mov
lods
add
cs
cmp
xchg
push
mov
in
outsb
adcb
pop
push
orl
xchg
inc
pop
xor
test
cmp
mov
cmc
push
lahf
scas
leave
push
mov
cltd
push
outsb
jge
xor
xor
in
repnz
pop
jns
jne
pop
adc
adc
and
add
inc
in
lock
push
mov
or
and
cmp
cli
xor
ror
or
shl
call
cmp
pop
mov
mov
pop
cmp
out
dec
cmc
imul
jb
and
sahf
xchg
jo
pop
lahf
pop
mov
push
gs
xchg
mov
mov
cmpsb
in
popf
xor
inc
imul
cwtl
mov
cmp
in
and
mov
in
mov
bound
sbb
aad
std
sub
imull
std
jbe
pop
cmp
dec
hlt
stos
cmpsl
or
jmp
sbb
imul
mov
push
test
fisubrl
sahf
mov
sub
adc
mov
mov
icebp
loopne
cmp
xlat
loopne
fcom
push
pushf
push
or
jb
sarb
rep
or
xor
icebp
das
adc
roll
test
xchg
fadds
and
out
sahf
bound
xlat
test
inc
mov
out
movsb
mov
daa
mov
test
rorl
jmp
enter
cmp
dec
xor
into
mov
xor
cs
sub
leave
mov
jo
push
jbe
decb
in
jne
ljmp
adc
pop
cltd
enter
fcmovnu
add
aad
test
inc
adc
and
xchg
lods
lock
aam
mov
jp
and
cmp
fstps
xchg
inc
jecxz
aaa
bound
cmpsl
test
lret
and
ret
aaa
dec
aam
lea
daa
inc
jb
pop
in
fwait
mov
push
xor
in
int3
mov
and
jnp
aas
inc
mov
imulb
pop
and
punpcklwd
daa
dec
loop
pop
push
das
repz
mov
aam
es
ss
nop
arpl
push
jo
xchg
xor
ret
push
sbb
or
int
iret
dec
or
and
ficomps
mov
movsl
mov
or
and
mov
lret
lds
sbb
cli
add
stos
add
inc
dec
xchg
mov
movsb
mov
mov
cmp
xchg
and
xor
add
loop
sti
loop
push
aas
inc
add
cmp
aad
xchg
mov
mov
and
fdivrs
scas
enter
mov
or
cmp
enter
mov
out
xlat
cmp
add
adc
sub
loopne
adc
daa
lret
lret
inc
andb
int3
adc
add
xlat
mov
and
aam
mov
xor
in
pop
and
sbb
shll
mov
addr16
mov
movsb
mov
mov
mov
lea
test
lea
shlb
leave
or
dec
push
or
nop
push
aaa
mov
mov
daa
or
ret
lods
dec
aaa
and
dec
lea
cmpsb
or
and
es
jo
mov
or
clc
es
xchg
popf
pcmpeqb
xchg
pop
test
add
mov
orb
and
push
cmp
fimull
mov
pop
or
inc
cmc
and
mov
lcall
inc
and
mov
jo
sbb
or
or
lods
or
sbb
fnstcw
dec
push
out
xor
shll
movsl
xchg
push
lock
inc
repnz
jl
insb
push
testb
push
insb
icebp
mov
sti
push
push
jo
jb
popa
jbe
jp
es
jno
in
cmc
pop
add
xchg
mov
leave
push
dec
out
mov
loop
push
cmc
arpl
repz
aam
sbb
mov
cmc
push
mov
adc
nop
sbb
xchg
mov
fadds
jb
xor
cmpsl
scas
mov
pop
xchg
mov
shlb
push
sbb
push
sbb
add
cli
les
cwtl
push
sbb
xchg
jns
clc
adc
int3
rol
arpl
xchg
fdivrs
js
scas
dec
xorb
cmp
inc
orb
push
xor
xor
or
inc
sub
jge
stc
sbb
sarl
jp
and
xorb
sbb
sti
adc
add
call
pop
pop
nop
inc
xchg
adc
rorb
ds
xchg
loope
mov
cs
mov
cmp
dec
push
dec
dec
mov
loop
scas
sbb
jg
aaa
rolb
push
aaa
adc
and
jne
test
xlat
push
adcb
mov
sub
inc
pop
pop
mov
jmp
out
stc
outsl
xchg
mov
in
iret
dec
out
mov
push
sub
jmp
mov
mov
mov
mov
lret
cmpsl
daa
aad
mov
push
xchg
aas
lcall
mov
adc
xchg
testb
out
xchg
pop
jmp
dec
jno
pop
add
out
mov
scas
or
sbb
test
xorb
shrl
das
inc
xchg
xlat
dec
loopne
xchg
add
cmp
loope
fidivl
in
scas
stc
jnp
mov
lret
inc
das
push
add
ror
and
pop
arpl
inc
iret
xor
mov
jle
lcall
sbb
movsb
mov
pop
push
leave
test
das
insl
sub
leave
add
xchg
push
sbb
lret
mov
jbe
imul
and
out
dec
mov
scas
je
add
stos
push
out
inc
dec
mov
andl
mov
fwait
fwait
loopne
gs
cmp
js
neg
mov
leave
fwait
lret
push
in
adc
jne
loopne
and
fwait
mov
je
in
jle
inc
xchg
orl
popa
in
dec
jae
dec
pop
cmpsb
mov
jne
sbb
sbb
dec
aam
inc
repz
ljmp
cmp
mov
add
scas
movsb
imull
sahf
jbe
xchg
rcrb
add
and
scas
lods
pushf
mov
push
cmpsl
popa
adc
out
adc
lcall
sbbb
adc
imul
aaa
jbe
jo
push
mov
pop
add
cli
cmp
add
pusha
jb
adc
inc
hlt
add
cmp
jle
jg
hlt
jl
imul
dec
jae
push
jp
mov
sbb
loope
jb
sahf
int
stos
lret
test
jge
mov
int3
and
rclb
mov
push
add
jl
pop
aas
int3
cmp
aaa
nop
out
jns
or
jb
xchg
mov
mov
lcall
dec
pop
mov
aaa
mov
lods
js
cmp
icebp
ljmp
mov
in
jg
jae
hlt
mov
subb
sub
rclb
movsb
stos
ljmp
pop
ret
sub
shl
xor
add
shlb
sub
mov
mov
mov
sbb
push
mov
and
out
mov
or
mov
mov
clc
sbb
and
jecxz
ret
mov
mov
sti
sub
jl
cld
lea
rdmsr
xchg
aad
mov
outsl
pushf
mov
dec
mov
daa
test
pushf
push
in
push
imulb
lods
popf
cmp
daa
cmp
add
imul
xrstor
ja
add
movsb
daa
cmp
dec
shll
outsl
loopne
xchg
and
cmpb
xor
lret
push
repz
pushf
mov
add
lods
dec
out
mov
insl
in
repnz
cmp
inc
iret
test
sub
xor
sub
popa
push
xor
mov
push
aad
pop
clc
std
stos
lret
xorb
cs
add
xor
lea
xchg
add
cmp
ja
pushf
sti
jmp
mov
pop
jp
jg
fst
and
and
dec
pop
mov
jmp
inc
sbb
inc
andb
and
leave
test
jge
imul
test
or
mov
sbb
mov
test
lcall
fistpl
adc
cmp
fstps
out
insb
lods
xor
push
mov
cwtl
insl
or
cmp
jmp
mov
push
notb
push
sub
js
test
cmpsb
mov
and
xchg
inc
pop
mov
xchg
sbbl
mov
push
sarl
sub
and
fsubp
in
sub
mov
in
rcr
pop
lods
lock
lods
mov
cmp
pop
mov
xchg
and
add
adc
cmp
test
lcall
popf
push
push
inc
aas
ret
andb
adc
cmpsb
ret
data16
xor
fdivl
dec
jmp
ja
xor
rorb
lods
mov
pop
mov
fwait
leave
cltd
std
pop
dec
inc
jne
aam
cmp
addb
push
movsl
stos
std
and
icebp
cmpsl
in
sarl
adc
sahf
cmp
int3
lret
mov
and
sub
push
mov
push
lret
sahf
aaa
dec
sti
pushf
mov
out
xchg
mov
lret
mov
shll
icebp
data16
es
and
xchg
sub
sub
jl
out
jns
divb
push
ficompl
jb
mov
xchg
ja
lret
or
call
into
shl
and
adc
xchg
loop
in
dec
jg
xchg
pop
xchg
dec
and
xor
adc
xor
testl
pop
lock
dec
xor
dec
rcl
or
or
mov
mov
mov
adc
ja
or
jo
shll
sbbb
xor
and
dec
pusha
dec
out
xor
dec
xor
test
dec
mov
adc
dec
sbb
inc
pop
jp
mov
sub
mov
lods
cmp
jne
push
mov
rcl
mov
sub
loopne
dec
nop
jmp
mov
outsl
clc
mov
jae
insb
dec
inc
xor
shl
pop
shrb
cmp
and
xchg
jno
cltd
cld
push
adc
stc
add
mov
pop
aad
je
movsl
lods
outsb
mov
mov
outsb
subl
mov
mov
fsts
int
fistpl
or
ds
xchg
fnstenv
aas
jg
jmp
fdivp
xor
inc
mov
push
js
add
pop
je
or
cltd
lock
inc
xchg
pusha
aas
and
repz
add
push
and
test
mov
loopne
lea
mov
xchg
aaa
dec
cmp
inc
dec
adc
popa
aam
xchg
mov
lcall
cmp
shlb
adc
pushf
mov
pop
push
jl
cwtl
xchg
cs
xlat
fsubl
and
mov
sub
psrlq
loope
in
pop
aad
test
dec
xor
test
push
xlat
xor
les
test
jmp
loopne
adc
xchg
adc
inc
ss
xchg
addr16
ljmp
sub
scas
xchg
jno
xor
sbb
lea
push
lds
loope
mov
mov
mov
adc
cmpsl
sbb
jnp
leave
add
push
leave
push
popa
and
loope
push
mov
xor
mov
fdivs
sbb
jge
lahf
mov
push
out
sbb
dec
xlat
adc
mov
inc
movsl
outsl
inc
in
cmp
pop
or
push
sti
imul
call
xchg
mov
fsubrs
fistps
and
jb
int3
out
xchg
popf
cmp
inc
dec
dec
ja
sbb
mov
lds
dec
imul
cmp
xchg
es
fst
pop
mov
add
outsl
subb
mov
mov
imul
and
push
popa
dec
ss
jp
adc
mov
clc
outsl
mov
sub
stos
lret
sub
mov
cmc
or
push
fstpl
sub
in
jp
or
mov
mov
test
mov
xor
sub
push
mov
xchg
shr
adc
push
jecxz
jle
test
cmc
pusha
aad
adc
sbb
std
sbb
lcall
fcoms
data16
push
xchg
jg
mov
pop
adc
inc
cmp
mov
inc
jbe
pop
mov
lcall
call
xchg
mov
mov
fldcw
sbb
fildll
push
test
ret
and
fwait
test
out
add
mov
es
dec
dec
inc
adc
popa
icebp
push
pusha
shlb
cs
sub
ret
add
sbb
aam
add
mov
in
inc
stos
imul
jecxz
mov
rclb
adc
sbbl
jl
jle
pop
pop
lret
lahf
stos
loope
sbb
and
fisttpll
gs
fdivr
mov
mov
sti
mov
mov
mov
sbb
cmp
lods
scas
mov
mov
jnp
lcall
dec
mov
xchg
ja
lahf
add
int
ficoml
or
xchg
push
pop
lahf
cmpl
jo
push
sbb
dec
mov
lcall
addr16
fadd
sub
fs
xlat
mov
pop
pop
outsb
sbb
jae
int
mov
aam
sbb
ror
xor
mov
nop
scas
mov
sti
imul
jl
jl
jns
popf
les
mov
lret
stos
xor
push
dec
cbtw
push
push
and
mov
mov
dec
popa
jne
or
aam
add
out
push
pop
mulb
mov
sub
mov
sbb
mov
cmp
cmp
mov
dec
mov
repz
pusha
xchg
adc
pushf
add
jb
cmp
mov
pop
fcmove
and
leave
int3
push
sbb
sahf
mov
mov
repz
fdivl
xchg
jo
lcall
or
xchg
out
movsl
lret
push
jae
aad
addb
dec
adc
aam
xchg
xchg
inc
mul
sbb
shll
inc
lods
sahf
lcall
mov
ljmp
sbb
inc
incb
lds
push
int
or
orl
jle
xchg
dec
dec
xor
jmp
jae
lods
or
pop
ds
out
mov
std
mov
xor
repnz
addr16
push
repz
jne
incb
scas
ret
mov
outsl
jecxz
adc
imul
cld
mov
mov
adc
xchg
lcall
mov
and
imul
sarl
push
cmp
inc
pop
enter
mov
dec
dec
mov
in
ss
data16
xchg
arpl
aam
frstor
dec
mov
pop
in
or
pop
jl
xor
fsubrl
push
sbb
lcall
jl
shll
repnz
jmp
xchg
xor
fadd
cmp
lods
dec
or
nop
add
hlt
adc
mov
daa
lds
loopne
mov
aaa
push
cltd
mov
lea
std
sti
jecxz
lcall
and
xchg
add
cwtl
push
add
jg
xchg
into
outsb
imul
sbb
pop
out
inc
test
in
inc
lahf
jbe
pop
adc
push
push
lock
mov
xor
sub
mov
mov
or
xor
fwait
pop
pushf
inc
cmp
andl
das
xchg
popa
pushf
loop
in
in
mov
inc
decl
xor
xchg
mov
test
mov
lret
test
and
outsb
sub
gs
mov
icebp
stos
ret
push
mov
pusha
int3
aad
mov
push
push
aam
out
push
sub
rolb
mov
sahf
js
sub
pop
cmp
lds
setnp
mov
jmp
cld
pop
mov
mov
cmp
cld
mov
aad
enter
jle
mov
test
mov
ret
int
sub
mov
outsb
jb
sub
adc
arpl
jbe
xor
cmp
and
lahf
inc
lds
inc
std
adc
incb
xor
mov
rolb
jecxz
dec
push
rorl
iret
and
mov
jmp
fcomps
lcall
sarl
xor
sub
int3
xchg
arpl
ret
test
test
imul
add
data16
out
cmp
add
mov
in
fs
inc
add
and
mov
inc
and
dec
lods
call
ret
cmp
jbe
int
adc
push
push
clc
movsl
in
lods
mov
sbb
loop
std
inc
lahf
sub
je
out
rcr
out
mov
mov
stos
and
mov
pop
lret
test
movsl
cmp
adc
outsl
insl
inc
fmul
push
pusha
xlat
fisttps
jb
adc
js
or
mov
cmp
sub
sahf
xchg
inc
pop
aam
dec
push
outsb
test
jne
shl
dec
dec
mull
cltd
dec
outsb
mov
xchg
movsl
jne
mov
inc
sub
mov
jae
xor
push
in
pusha
aaa
sub
cmc
push
adc
outsb
push
mov
mov
scas
int
jnp
outsb
sub
lret
sbb
es
jp
in
sarl
inc
lock
cmpsl
and
popf
repnz
push
add
js
scas
mov
push
xor
shl
popa
orb
or
scas
inc
jo
aad
mov
sti
mov
mov
add
outsb
jnp
fwait
jns
out
and
das
daa
sub
xorb
popf
xchg
aad
scas
inc
clc
idiv
insl
mov
arpl
movsl
cmp
fimuls
hlt
in
fistps
jne
xor
rcrl
out
loop
xchg
shlb
mov
dec
inc
and
sbb
addl
jmp
add
add
xor
sub
xchg
mov
sbb
mov
insl
and
lods
and
and
filds
stos
or
dec
loopne
xchg
insb
push
hlt
jp
outsb
sbb
mov
fwait
or
daa
pushf
fwait
jmp
jbe
xor
mov
mov
mov
fcmovnb
in
pop
sub
stc
scas
xor
cmp
dec
pop
or
add
mov
ljmp
pop
sbb
pop
dec
les
xlat
mov
aad
dec
imul
sub
pop
sub
mov
sub
adc
std
pushf
ja
ret
mov
adc
pop
sub
mov
lret
push
popa
push
jp
daa
mov
lret
mov
adc
fcompl
and
jne
jecxz
or
inc
insb
iret
pop
cmp
jbe
lea
ret
lock
mov
ljmp
jmp
in
inc
hlt
mov
or
xor
fidivrs
repz
sahf
sbb
enter
in
sub
jae
popa
mov
rcll
ljmp
sbb
jecxz
dec
stos
cmp
mov
mov
out
mov
repnz
std
and
pusha
push
shrl
ja
jbe
xchg
push
cmc
scas
repnz
pop
movsl
inc
std
out
xchg
imul
jno
flds
adc
xchg
xlat
sbb
jmp
daa
inc
fucomp
movb
jl
addb
pushf
push
xchg
inc
add
jne
inc
fwait
mov
shlb
add
jl
fnstsw
cmp
pop
fdivrp
and
and
jl
loope
adc
addr16
cmpsl
nop
movsl
jae
mov
fstp
dec
jbe
imul
ja
clc
jecxz
in
push
xchg
pop
iret
mov
dec
popa
and
ret
inc
les
sub
adc
cmp
fs
imul
repz
xchg
xchg
or
xor
fldcw
dec
rcll
mov
addr16
cltd
jae
and
in
fidivrl
fmull
sbb
iret
inc
add
fistps
dec
lock
int
enter
insl
push
adc
and
dec
hlt
pop
in
adc
mov
mov
pop
test
pop
add
dec
dec
repz
sbb
dec
mov
sub
adcb
cmp
cmp
push
stos
fldlg2
push
xchg
or
cmp
and
or
xor
stos
fadds
add
mov
cmp
sub
into
inc
sbb
xor
jno
pop
sbb
jl
jbe
lret
pop
sbb
es
lods
mov
pop
cmp
cmp
jle
ja
jl
or
and
sub
dec
loope
cli
or
cmp
cmp
test
inc
mov
mov
jbe
fildl
rcl
push
jecxz
jne
je
dec
scas
pop
jge
mov
cmp
shl
jbe
jno
stos
mov
repz
pop
dec
adc
fldl
mov
xchg
ror
or
into
and
mov
mov
add
xchg
push
popa
cmp
test
lock
mov
pop
mov
push
adc
mov
jmp
mov
or
enter
loop
cwtl
popf
jo
mov
xchg
push
test
iret
pop
or
movsb
push
adc
jg
test
sbb
fs
jmp
jle
rcll
inc
imull
dec
push
inc
sub
inc
sbb
cmp
scas
cld
lds
mov
cwtl
adc
cwtl
cmpsb
or
repz
adc
jp
jno
cmp
mov
in
xor
xchg
pop
push
and
fldcw
imul
test
dec
dec
ja
ds
and
xor
imul
mov
push
push
sbb
sar
pop
cmp
xchg
or
popa
repnz
dec
scas
push
lods
mov
pop
and
xlat
stos
lret
jno
push
lcall
mov
mov
cld
cmp
popf
out
int
adc
movl
inc
inc
jns
popa
add
stos
je
add
in
adc
cli
mov
jecxz
pop
push
arpl
add
mov
mov
sbb
sar
lret
or
movsl
xorb
stc
out
cmovg
jnp
mov
popa
iret
xchg
xchg
test
movsl
ffree
and
aad
jae
lahf
xchg
mov
movsb
pop
addr16
and
mov
add
or
cld
int3
push
xchg
andl
out
dec
fdivs
cmpsb
jne
ret
scas
flds
add
int3
mov
call
mov
jb
jne
mov
jbe
mov
sahf
loop
into
lds
jmp
rcrl
repnz
sbb
stos
mov
mov
test
shl
loope
fwait
xor
cmp
sbb
jo
sbb
jb
imul
push
jge
test
imul
or
cltd
push
popf
pop
movsl
ret
nop
xor
lretw
sbb
testb
mov
test
xchg
loop
mov
push
inc
andl
mov
inc
cmc
sbb
jg
sahf
repnz
push
cs
mov
rorl
jg
iret
cmc
mov
inc
call
data16
jae
out
es
jg
rcrb
mov
int
cmpsl
repz
cmc
fimuls
adcb
loope
ljmp
mov
aas
cli
mov
inc
test
adc
gs
pop
mov
sbb
pop
fisubl
xlat
sub
jae
mov
jecxz
mov
les
ficompl
dec
adc
es
scas
sub
pop
mov
pop
aas
stos
adc
daa
mov
addl
add
inc
push
lock
loop
pop
mov
jecxz
out
or
mov
out
js
xchg
jmp
push
pop
pop
jnp
mov
mov
ret
mov
cmp
ret
addr16
push
jb
sti
lock
je
xor
push
cli
sarl
hlt
adc
jmp
jae
mov
jae
xlat
pusha
icebp
cltd
aas
addb
push
fstp
insl
dec
inc
xchg
movsb
xchg
sub
mov
mov
dec
movsb
stc
cmp
gs
sti
mov
scas
ljmp
jo
popa
adc
in
cmp
cmp
rol
ret
jns
roll
add
add
fcomps
or
push
adc
mov
adc
les
negb
mov
xor
mov
ficompl
pusha
cmp
loopne
sbb
ret
mov
jno
push
iret
insb
dec
or
out
mov
lret
cld
je
inc
arpl
dec
mov
add
lahf
xchg
bound
xor
jge
jl
cmc
in
imul
jge
or
insb
dec
jge,pn
fnstcw
xchg
and
jge
fchs
cmp
mov
push
jnp
mov
ret
cmp
stc
ret
imul
jo
jno
add
mov
and
lods
mov
aaa
mov
or
icebp
inc
bound
mov
push
inc
sub
ja
adc
loop
pop
popa
xor
aad
xor
or
call
mov
pop
mov
lahf
hlt
cwtl
mov
aam
rcl
outsb
test
push
and
xor
stc
add
scas
xlat
xchg
pop
scas
push
sbb
cmc
mov
popa
mov
dec
aas
std
decb
and
loopne
stos
push
dec
decb
dec
clc
mov
cltd
add
xor
mov
aam
aam
cmp
lret
or
push
jecxz
movsl
pop
sti
xorb
push
adc
lea
and
xor
cltd
fsubp
gs
scas
out
enter
pop
cs
dec
mov
stos
inc
stc
hlt
xor
out
push
sbb
mov
lds
adc
and
sbb
push
mov
cmp
xlat
aam
daa
xchg
decl
mov
xchg
jge
fucomp
or
cmp
lods
cmpsb
dec
push
fildl
fisubs
cmc
push
es
xchg
out
inc
ret
fiadds
push
pop
inc
jle
sub
inc
enter
ret
icebp
cmp
cmp
mov
adc
dec
pop
adcl
inc
cmp
inc
pop
push
push
gs
in
mov
scas
ficomps
mov
xchg
jg
xchg
mov
andl
insb
inc
jmp
xor
js
movl
inc
mov
dec
in
out
jl,pn
or
mov
push
hlt
insb
cmp
adc
and
dec
fadd
mov
adc
inc
push
icebp
add
and
sbb
iret
arpl
mov
push
out
nop
test
xor
xchg
in
inc
xlat
scas
pushf
cmp
test
and
xor
or
push
repz
adc
push
rorb
std
sbb
pop
dec
shrb
add
sub
stc
sub
clc
inc
pop
push
int
mov
mov
sarb
mov
adc
jbe
pop
xor
xor
pop
nop
xor
xor
pop
sbb
xchg
stc
xchg
cltd
sbb
or
mov
in
je
mov
test
jb
icebp
mov
aaa
push
stos
lahf
sbb
add
xchg
inc
jge
mov
mov
mov
push
ret
call
dec
mov
fstl
aad
imul
sub
pop
jge
jno
out
popf
fiadds
icebp
and
aas
xchg
xor
pop
mov
and
stc
cmp
cmp
in
addl
xchg
dec
jp
inc
sub
dec
ja
sub
lret
out
xorb
fistl
mull
add
fneni(8087
and
mov
int3
fs
sbb
movsl
push
cmpsb
cmpsb
jle
add
push
xor
fs
push
out
dec
aas
sahf
and
mov
mov
sbb
xor
or
repz
push
cmp
xchg
icebp
mov
add
out
xchg
fisttpl
in
outsb
mov
or
iret
insl
repz
inc
jae
imul
sbb
loopne
ds
mov
leave
adc
xchg
xchg
jns
fdivrp
fs
xor
xor
push
sub
jmp
aam
int
pop
xor
rol
sarb
xor
xor
push
sbb
lcall
xchg
push
pop
dec
dec
and
cmp
fcomip
nop
sbb
mov
pop
repnz
repz
add
add
jo
rorb
imul
xchg
arpl
testb
sub
xor
dec
out
add
mov
mov
lret
iret
in
mov
or
add
es
insb
jg
mov
aaa
cmc
mov
cmp
enter
sbb
fcomps
je
inc
jae
xlat
push
inc
or
mov
xor
movsl
mov
inc
cmp
in
cmpsb
jmp
cwtl
xor
sarl
xor
mov
mov
xchg
iret
cmp
test
sbb
addl
es
sbb
sarl
in
cmp
pop
or
dec
or
mov
mov
nop
inc
mov
repnz
lret
mov
xor
lods
xchg
add
lock
mulb
cmp
popa
mov
mov
cmp
mov
or
subb
adc
out
mov
or
adc
ljmp
pop
add
adc
in
scas
idivl
sub
test
xlat
or
data16
cmp
ja
pusha
or
shrb
adc
cs
cmpsl
and
daa
es
mov
cmpb
fldl
shrl
filds
mov
movsl
lods
mov
adc
in
cmp
movsb
shl
mov
lods
push
mov
cmp
adc
lock
stos
mov
addr16
pop
sub
mov
jb
pop
loope
lods
sub
popa
lea
scas
add
jge
rcrb
xor
fidivl
or
pop
les
daa
cmp
enter
push
jo
jge,pt
push
incl
push
mov
or
mov
test
mov
adc
pop
mov
inc
jecxz
or
pushf
or
out
add
mov
inc
subb
add
pushf
lret
add
out
ret
lods
lea
cmp
pop
pop
mull
clc
js
pop
jle
popa
mov
mov
mov
add
xchg
fs
push
dec
push
sbb
push
pop
insb
notb
stc
xchg
xchg
and
out
xchg
fstp
mov
jne
or
jno
lods
insb
xchg
out
insb
ljmp
push
pop
and
push
pop
push
inc
je
adc
insl
pop
or
sbb
dec
test
lods
fs
mov
out
addr16
xor
xchg
pop
push
cmp
push
mov
outsl
or
xchg
jno
push
xor
ffree
scas
xlat
rcrl
jo
in
push
mov
xchg
mov
subb
push
adc
cmp
adc
mov
repz
ds
push
cmpsl
movsl
mov
mov
loope
sbb
mov
pop
dec
fnsave
hlt
sub
jbe
call
mov
leave
mov
aad
xor
sub
repz
rorb
gs
xchg
xor
xchg
dec
inc
aaa
iret
stc
rcrb
test
jmp
cmpsl
fldl
cwtl
xchg
pop
jne
adc
mov
je
pushf
test
pop
fucomip
mov
aam
outsl
jecxz
push
repnz
xor
lahf
and
repz
adc
test
in
sti
shlb
jle
cwtl
inc
jmp
add
push
inc
call
mov
adc
sti
mov
mov
push
cmp
and
push
cwtl
lea
je
div
ret
add
outsb
in
mov
inc
inc
in
xor
adcb
sbb
movsb
mov
loop
pusha
cmp
repz
dec
arpl
lods
dec
cmp
outsl
subl
jge
jmp
pop
repz
xchg
bound
shll
lea
pop
out
lods
jl
lret
sbb
lds
pop
je
inc
mov
jo
rolb
ds
mov
test
daa
shlb
lcall
stos
sar
shl
dec
leave
aam
push
xchg
lret
aaa
cmp
dec
shrl
mov
jl
lods
fst
xor
movsl
or
in
inc
inc
adc
rcl
int
loope
jo
push
scas
hlt
cmpsl
and
mov
mov
scas
adc
or
pop
jl
repz
sbb
xchg
lods
enter
inc
lods
sub
and
cmc
test
mov
mov
dec
dec
rcrb
rcll
scas
movsl
and
mov
add
int3
in
mov
test
cwtl
fucomp
in
mov
test
cmp
jbe
into
pop
pushf
mov
enter
movsb
pushf
dec
sub
xchg
inc
lock
ja
iret
jecxz
mov
fidivrl
scas
or
daa
out
mov
gs
inc
sub
pop
add
push
imulb
dec
sarl
lea
jle
and
lds
lock
xchg
jg
and
xchg
add
push
jp
pushf
mov
and
lock
jg
and
clc
adc
inc
mov
jno
or
dec
test
xlat
sub
add
pop
sbbl
stos
pushf
pop
les
shrb
les
mov
add
lods
pop
repz
aam
cmp
xor
mov
les
pushf
fiadds
or
and
inc
xor
int
cld
movsl
push
sub
mov
adc
xchg
cmp
aam
jmp
cvtdq2ps
pop
pusha
and
ljmp
out
mov
test
pushf
das
jns
ret
enter
roll
or
mov
stos
insb
jg
dec
inc
int3
jns
js
iret
lret
dec
or
push
fstpt
aaa
test
pop
jle
flds
fs
ffree
add
fcompp
fldenv
out
sub
or
sbb
mov
neg
or
aas
icebp
sahf
inc
add
das
mov
mov
fsubs
imul
push
cmp
imul
mov
movsb
cmpsb
push
in
lods
mov
mov
xchg
cmpb
push
aad
out
cld
imul
adc
cld
adc
rclb
loop
lret
ret
sbb
pushf
pop
subb
test
xor
xchg
or
push
xchg
mov
int
add
xchg
cli
rorl
movsl
cmp
test
dec
scas
sti
add
lods
aaa
sbb
dec
jl
push
rcll
mov
daa
mov
mov
test
rcl
cmpsb
ss
push
test
scas
and
nop
test
and
ficoms
out
adc
sti
sti
mov
inc
adc
xchg
and
pop
aad
push
ja
or
ret
push
loope
xchg
sub
inc
xchg
or
sbbl
cmp
inc
fmul
into
lret
pusha
cmc
jp
nop
int3
xchg
xor
fldl
cld
les
roll
orb
dec
ja
test
shl
out
mov
je
adc
test
inc
stos
mov
sti
xchg
dec
stos
or
adc
ss
mov
rcll
pop
lret
mov
addr16
rclb
cmp
cmpsl
pop
aas
add
jns
cmp
or
sbb
mov
mov
jo
mov
scas
add
mov
pop
jmp
sub
rcr
movsl
lahf
sbb
pop
dec
lods
jmp
pusha
jno
arpl
and
lsl
xchg
rol
pop
dec
mov
or
enter
add
xor
stos
push
pushf
out
daa
mov
fnsave
bound
adc
aaa
mov
sbb
fdivl
mov
fwait
push
insl
or
addl
inc
jns
jg
pop
out
lea
sbb
out
pop
jmp
stc
add
inc
fsts
sbb
mov
or
cmp
mov
insb
iret
sbb
in
mov
lar
jecxz
in
adc
pop
xchg
pusha
inc
xlat
sti
ss
shrb
in
addr16
stc
mov
dec
mov
out
jne
xchg
imul
inc
lcall
xchg
ret
outsl
js
mov
pop
pop
rol
adc
test
cmp
push
sbb
lret
jp
pushf
insb
stc
mov
aam
sub
cld
and
out
jecxz
decl
xchg
ja
cmp
push
pushf
xchg
xor
adc
xchg
int
iret
dec
push
mov
imul
bound
in
subl
lods
push
pop
jp
outsb
fcompl
inc
xor
test
jg
or
rep
fidivrl
mov
lock
cmp
mulb
fs
test
cmp
pop
sahf
xchg
xor
and
push
clc
stos
pop
xchg
inc
push
adc
xchg
xor
mov
sbb
jno
mov
dec
dec
sbb
push
xor
fidivrl
fcomps
test
test
pop
lret
ljmp
js
icebp
cmp
add
jge
rorb
jnp
pop
gs
sub
sub
xlat
mov
add
pop
aad
js
sub
jo
mov
pop
push
lahf
aaa
out
inc
mov
hlt
in
sti
test
xchg
pop
inc
lods
mov
fistpll
ret
es
imul
jg
pusha
jl,pn
das
lods
idiv
add
data16
leave
test
or
test
fcomi
pop
sub
out
add
sbb
push
loope
push
dec
out
cmp
daa
mov
pushf
outsl
bound
outsl
loop
imul
push
add
imul
in
xchg
outsl
cmp
mov
int3
sub
push
pop
mov
addr16
or
dec
loop
inc
mov
pop
or
mov
push
xor
in
out
sahf
enter
add
in
insl
pop
stos
dec
or
mov
inc
inc
mov
lods
call
mov
insb
ja
fs
adc
rolb
lods
aad
outsb
data16
dec
lds
adc
mov
jmp
imul
mov
xchg
jl
cmc
cmp
sbb
dec
pop
leave
xor
out
faddl
lret
popf
cmp
dec
mov
inc
rcrl
repnz
sub
jecxz
jo
popf
xchg
cmp
ret
xor
add
lret
cs
xor
inc
ds
pop
out
inc
imul
and
mov
scas
inc
push
jae
adc
sbb
pop
ret
mov
xor
mov
sub
popf
cli
push
lahf
mov
in
aaa
push
push
stc
cmp
and
dec
xchg
insl
aas
push
mov
mov
aas
scas
and
aaa
bnd
iret
ss
mov
ret
mov
out
inc
sub
mov
pop
into
add
out
push
pusha
addl
add
jmp
aas
test
sbb
and
add
pop
hlt
inc
roll
ss
je
cmp
and
pusha
pop
rclb
pop
jmp
idivl
shrl
and
and
add
xor
sbb
adc
push
in
aaa
sbb
lods
adc
dec
sbb
sub
out
add
xchg
cmp
push
xchg
mov
push
sbb
pop
lods
adc
das
in
mov
lcall
mov
mov
pop
inc
xchg
roll
fisubrl
cmpsb
shlb
jg
mov
dec
and
clc
jecxz
es
sub
lret
fldenv
push
outsl
out
adc
xor
cld
je
scas
xchg
fdivs
xchg
outsb
fists
and
inc
hlt
mov
fwait
out
cwtl
xor
loopne
mov
jmp
push
negb
out
data16
inc
rcl
pop
sti
mov
stc
jne
jne
sub
sub
adc
sub
fiaddl
xchg
sub
sub
cmpb
scas
or
mov
xor
test
xchg
out
ret
pop
jecxz
inc
mov
lds
insl
or
push
test
movsb
push
add
push
mov
jg
movl
jg
or
rcrb
and
and
imul
push
ret
out
and
es
mov
sti
push
mov
rolb
in
arpl
mov
mov
xchg
cld
sub
addr16
mov
hlt
pushf
xchg
in
lahf
jge
leave
sarb
data16
aad
in
pop
cmpsb
pop
pop
cbtw
stc
mov
in
cltd
popl
outsb
imul
xchg
push
test
mov
outsb
push
push
mulb
xlat
pop
push
mov
loopne
fsts
xorb
mov
push
push
ljmp
push
and
xor
vpsrlq
sahf
lcall
cs
jbe
jp
or
sti
inc
mov
cmp
mov
jnp
sbb
push
pop
sti
dec
ret
mov
sub
cwtl
es
and
sbb
jb
pop
cmp
jl
or
cmpsb
mov
notl
ret
cmp
je
adc
push
mov
repnz
cmp
mov
imul
or
popl
fimull
sbb
pop
fs
inc
in
xor
pop
inc
xchg
xchg
shll
ds
hlt
jg
gs
scas
sbb
das
push
nop
stos
insb
arpl
push
cld
cmpsl
fidivs
loopne
dec
xchg
or
pop
into
adcl
pop
push
jo
repz
inc
and
fs
int3
push
les
and
inc
popf
cmpsb
push
dec
adc
dec
jl
faddp
in
pop
ss
push
shll
popf
xor
enter
jno,pn
js
adc
ror
int
push
pushf
aas
imul
xor
xor
dec
mov
xchg
sbb
or
xchg
inc
ljmp
lea
sub
push
or
mov
mov
adc
call
and
icebp
cmpsl
adc
push
ljmp
scas
xor
mov
pop
mov
jp
in
sbb
inc
aaa
add
xchg
test
adcb
inc
pop
cld
push
or
adc
lret
xor
sbb
arpl
out
or
shr
sbb
push
sub
pop
pop
pop
mov
mov
xchg
cmc
icebp
add
inc
fldenv
das
sti
push
add
mov
nop
cmp
int
movsl
les
mov
xor
jns
test
push
add
test
or
mov
or
ss
push
lds
sbbl
mov
popf
pop
add
add
xchg
cmp
or
lret
mov
test
outsb
push
repnz
xchg
cmp
sarb
es
adc
mov
orb
jl
xor
push
mov
hlt
pop
nop
shl
push
mov
cmp
fistpl
cmp
mov
or
adc
testb
push
dec
jl
daa
cltd
inc
repz
add
xchg
sub
push
fidivs
adc
fadds
dec
int
xor
scas
pop
scas
mov
dec
mov
outsl
fnstsw
out
inc
das
in
mov
test
les
icebp
jecxz
test
mov
jne
inc
xchg
mov
or
xor
pop
rcrb
adc
fwait
lret
cli
xchg
xchg
or
cli
in
rcl
loop
je
scas
mov
inc
fists
add
pop
lock
dec
mov
imul
adc
imul
jl
insb
sub
jg
imul
fadd
and
popa
inc
sti
repz
lahf
bound
aas
mov
incb
mov
daa
xor
xchg
test
gs
push
shl
test
stos
jae
je
inc
dec
mov
xor
mov
mov
mov
popa
mov
imul
imul
push
mov
add
mov
xchg
fcmove
push
or
mov
fldl
fnstenv
mov
fidivl
sub
cli
loope
xchg
and
inc
fstps
sbb
sbb
mov
data16
push
mov
push
je
aas
push
xor
pop
or
fldcw
dec
xlat
jmp
mov
push
xor
out
pop
icebp
inc
aaa
hlt
cmpb
push
mov
and
pop
aas
push
call
loope
insl
lahf
mov
adc
mov
int3
xor
mov
cmp
sbb
aaa
and
or
xchg
aad
fcom
mov
fdivr
add
inc
jns
movsb
repnz
xorl
icebp
or
aam
mov
std
shll
or
aad
fwait
dec
xor
push
sahf
lea
call
ret
sbb
loopne
mov
pop
movsl
mov
jae
mov
jl
xchg
leave
push
je
lahf
pushf
lds
aam
adc
cmp
jle
push
sbb
fcomi
loope
sbb
arpl
adc
pop
mov
jge
add
pusha
xor
sbb
xchg
xlat
cli
sub
repnz
popf
jb
scas
shlb
rorb
push
adc
adc
mov
adc
aaa
push
movsl
cltd
cld
xor
xchg
clc
mov
xchg
loope,pt
les
cltd
jl
fisttps
cmp
inc
out
jp
sbb
scas
mov
sbb
sbb
cmp
inc
testb
out
jge
cmp
test
mov
fdivl
in
cmpsl
jp
xor
mov
jecxz
subl
jno
mov
inc
mov
testb
dec
fsubs
fistpl
test
sub
mov
adcl
loop
inc
or
addr16
lds
xor
or
jle
aad
js
fwait
push
test
mov
mov
aas
mov
sbbl
push
mov
mull
in
shlb
jns
insl
jp
and
icebp
rol
adc
enter
inc
sub
sub
inc
fldl
xchg
lahf
ja
arpl
pop
test
push
jl
jnp
or
fs
fstps
sub
fimull
jno
loope
pushf
lcall
sub
int3
adc
out
dec
scas
and
aad
and
out
jb
inc
ja
dec
in
sbb
mov
fcompl
movsl
mov
mov
xor
cmpsl
ja
test
call
fiadds
xchg
xor
aam
push
cmp
rolb
xchg
mov
adc
jp,pt
outsb
shll
jmp
fisubrl
loop
data16
mov
fs
stos
sbb
pop
popl
sarb
push
lahf
pop
lahf
cmpsl
or
js
mov
inc
mov
shlb
addps
das
std
inc
or
jecxz
hlt
movsl
inc
mov
sbb
in
leave
testb
inc
inc
in
sbb
test
cltd
imul
loopne
repz
dec
negb
push
dec
stos
loop
addb
xchg
add
mov
xor
mov
push
push
aad
adc
dec
add
mov
mov
in
aad
imul
out
shl
popf
cmp
outsl
and
dec
jmp
addl
inc
jg
iret
iret
pop
push
scas
ja
jg
sbb
lret
sbb
mov
adc
popa
scas
inc
fisttps
pusha
arpl
faddl
int
xlat
xchg
jne
jb
xlat
sahf
mov
push
dec
jg
dec
into
xor
mov
jae
xlat
or
orb
pop
inc
inc
jne
xchg
jnp
js
cwtl
push
les
sti
pop
icebp
push
daa
adc
dec
xor
mov
insb
scas
cmp
and
popf
out
mov
pop
jnp
pushf
call
push
add
imul
aam
je
rorl
ss
xchg
sbb
jmp
pop
mov
jge
xor
mov
sub
outsb
dec
shrl
stos
ds
mov
inc
mov
iret
stc
jo
xchg
ds
outsb
mov
sbb
sbb
mov
outsb
mov
rol
icebp
mov
ret
hlt
and
stc
pop
or
cli
add
imul
or
dec
add
or
scas
and
add
xchg
arpl
mov
xchg
lcall
xchg
jnp
cmp
scas
jmp
imul
jge
or
mov
out
add
insb
sub
push
adc
inc
out
enter
ss
test
popf
jnp
cmp
pop
xchg
inc
jae
adc
sub
pop
popf
aam
mov
mov
enter
mov
or
sub
add
idivb
mov
pop
xor
test
fbld
mov
mov
call
test
jmp
cmpsl
loopne
je
mov
addr16
out
mov
dec
gs
out
stc
xchg
mov
inc
sub
inc
and
fs
fcoml
or
fwait
stc
xchg
aaa
out
imul
pop
mov
int
fisubrl
loop
or
dec
dec
lea
add
lcall
popf
jl
ret
iret
loope
xor
ret
loope
cld
pop
flds
cltd
jnp
add
add
call
jp
std
lods
jns
stos
lret
and
inc
xchg
pop
mull
mov
push
test
sub
push
adc
mov
inc
push
sbb
dec
je
xchg
and
mov
rolb
test
mov
idivl
rcl
pop
loopne
sub
xor
jle
xor
aaa
mov
inc
movsb
aad
out
sbb
popf
dec
ret
aam
jnp
adc
xor
les
inc
outsb
mov
popa
mov
jns
push
and
or
leave
cmc
int
dec
adc
jp
iretw
dec
icebp
dec
cmp
add
or
adc
popa
cmp
xor
cmp
adc
pop
dec
pop
enter
fldl
or
in
mov
cmp
sbb
push
hlt
std
and
lahf
jno
lock
fwait
jl
or
cmp
test
cmp
cli
adc
push
icebp
fistl
repz
repz
adc
fnstsw
icebp
loop
aas
mov
xor
pop
imul
jno
push
into
in
adc
cs
mov
mov
push
lcall
mov
add
test
lcall
jne
mov
xor
je
dec
cmpsb
dec
or
ret
aaa
pop
mov
daa
or
movsb
jl
roll
addr16
dec
call
mov
inc
fadds
push
xor
into
mov
mov
repz
mov
fadds
out
jo
jmp
addr16
jle
inc
pop
push
in
lret
xchg
inc
xor
xchg
push
pop
dec
das
xor
mov
enter
or
xchg
jne
add
and
xchg
das
test
dec
mov
fisttpl
jle
mov
cmp
xchg
insb
pop
mov
call
cld
stc
fists
addb
and
adc
and
pushf
mull
mov
cmpb
inc
lahf
or
and
scas
shll
jb
movsb
cmp
cmp
add
divl
push
dec
icebp
js
sbb
jnp
scas
leave
enter
repnz
sar
jg
cld
push
addl
decb
mov
xchg
dec
mov
jmp
popf
jp
shlb
fldenv
cli
mov
cmpsb
adc
movb
fsubl
xchg
cmp
sub
mov
pop
xchg
xchg
add
bound
mov
dec
add
push
dec
dec
jb
lret
lock
dec
in
icebp
fs
dec
xchg
xchg
cld
fbstp
xchg
xchg
daa
inc
cmpsl
leave
pop
cmp
in
xor
mov
in
das
sbb
ja
adc
pop
xor
jo
sub
out
xor
push
iret
push
xchg
inc
fiadds
insb
inc
mov
mov
xchg
pop
adc
cld
mov
cmp
and
mov
xchg
out
dec
add
xchg
push
and
inc
add
mov
cli
insb
sahf
and
dec
mov
inc
loop
sub
sub
dec
lods
data16
inc
filds
or
push
or
mov
mov
cmp
insl
xchg
in
sub
xchg
test
or
xchg
clc
mov
or
mov
xchg
fstpt
cld
leave
add
push
or
cmpsb
push
xchg
dec
addr16
sarb
inc
and
xor
inc
inc
sub
sbb
imul
add
sub
push
lcall
cmp
shll
leave
shlb
mov
cli
repnz
jp
pop
outsl
out
pushf
mov
out
out
mov
dec
ljmp
mov
in
inc
cmp
pop
mov
xor
push
mov
aaa
mov
sysret
movsl
inc
fidivl
adc
sbb
rclb
shlb
adc
mov
mov
inc
inc
push
lcall
mov
sub
scas
test
add
jmp
shl
aaa
pop
out
adcb
inc
scas
and
mov
rolb
xchg
lods
sahf
fwait
cmp
mov
jne
jmp
pop
cs
aam
daa
mov
js
xchg
dec
outsl
fs
insb
shrb
pop
lock
sahf
outsl
imul
sub
test
repnz
xchg
jg
mov
gs
stos
jecxz
inc
mov
xlat
pop
adc
push
push
ret
push
movsb
test
repnz
mov
imul
push
cmp
sub
jne
dec
inc
fistpl
adc
sub
pop
imul
daa
div
mov
nop
cmp
ss
jp
inc
addl
outsb
out
lds
stc
aad
fstp
xchg
sti
inc
lcall
test
gs
inc
pushf
ds
cmp
cltd
xor
and
push
cmp
rorl
mov
sub
push
cwtl
sbb
xchg
bound
int
mull
icebp
aas
adc
repnz
sub
movsb
lods
push
or
push
mov
mov
inc
or
into
arpl
sbb
idiv
iret
das
cmpsl
rcll
sub
mov
jmp
negl
rorb
or
ret
jg
push
data16
clc
test
dec
add
out
adc
jge
push
sub
xchg
mov
gs
mov
aaa
mov
inc
sub
mov
cld
jle
xlat
xor
leave
mov
and
jns
mov
xor
gs
pop
push
xor
aas
leave
adc
dec
sbb
ss
mov
sti
xchg
daa
xor
out
inc
in
jno
cmp
out
in
dec
mov
stos
sub
lock
or
test
out
ret
pop
div
bound
clc
pushf
dec
pushf
rcrl
dec
dec
jl
sub
sub
fistl
xchg
lret
sub
mov
pusha
das
pop
scas
or
push
push
stos
or
clc
sti
hlt
fld
imul
push
fsubr
cmp
xor
cmp
and
cltd
testl
pop
cmp
das
jecxz
cmpsb
imul
sbb
scas
mov
repz
and
flds
ret
pushf
jle
cld
sbb
stos
ljmp
movsl
and
test
mov
gs
lds
jne
xlat
js
in
xchg
ret
push
adc
loop
adc
sbb
lods
cmc
lds
push
outsl
cmpsb
aas
imull
mov
test
dec
dec
les
test
out
movsb
adcb
push
sbb
inc
pop
lds
lret
pusha
dec
and
or
mov
int
shlb
adc
jno
mov
cmp
sbb
sub
xchg
sub
and
jg
aas
pop
mov
sbb
sti
mov
ljmp
in
xor
xchg
in
inc
push
and
pop
sbbb
clc
mov
ret
dec
mov
jecxz
mov
inc
stos
xchg
jp
inc
mov
addr16
xchg
cmpb
call
lds
or
test
pushf
push
cmp
mov
shll
mov
or
and
push
out
or
ret
or
out
xor
push
test
in
cld
int
jae
ds
sahf
jae
lock
inc
mov
pop
fisubrl
and
cltd
dec
and
arpl
mov
mov
xchg
sarb
cwtl
das
daa
lret
scas
popa
or
in
pop
xchg
sub
shr
insl
xorb
pop
lock
sbb
xchg
add
push
dec
nop
and
sub
dec
dec
pop
bound
or
dec
js
mov
lahf
pop
mov
imul
call
in
ret
or
pop
add
sub
jns
push
mov
popa
xchg
iret
negb
in
pop
sub
or
add
cmp
ret
xor
in
cmpsl
stos
inc
xchg
and
jl,pn
dec
push
cmp
fs
aas
daa
mov
hlt
sti
add
xchg
sub
aam
fcmovne
mov
lret
ss
pop
xchg
movsb
into
pop
cmp
dec
jbe
adc
mov
arpl
jge
cmpsl
or
or
out
xor
ficomps
or
dec
and
pop
jg
dec
idivl
push
and
jl
adc
sbbb
ret
nop
mov
jl
jo
or
popa
mov
shlb
data16
push
enter
xchg
inc
cmp
sti
call
dec
rclb
xchg
out
and
shll
fcoml
mov
add
test
popa
dec
cmc
inc
pop
loop
repnz
aam
ljmp
jbe
cmp
je
dec
nop
sarl
mov
add
push
out
pop
xor
loop
dec
call
mov
aas
lret
xchg
add
dec
push
mov
outsb
xchg
push
jmp
das
sbb
inc
aas
and
mov
repz
inc
push
repz
and
sub
lock
mov
pop
sbb
out
stos
xchg
xor
pop
ror
push
test
inc
jne
mov
fstps
jg
push
ret
sbb
jnp
mov
test
fcmovnu
or
pop
aad
hlt
loopne
aad
mov
arpl
mov
cmp
inc
pop
out
negl
jecxz
jae
add
xor
test
xor
rcr
mov
cmp
cmp
jmp
pop
add
ret
inc
adc
out
ficomps
sbbb
mov
outsb
es
test
into
jle
fsubrs
addr16
or
jno
jb
rol
repnz
adc
not
add
xor
es
push
out
mov
fs
push
scas
sub
mov
jb
cmp
mov
out
cmpsl
test
adc
aaa
pop
movaps
rcrb
stos
leave
cmp
adc
cmpsl
jle
pusha
pop
pop
mov
push
movsl
lods
mov
call
fcom
mov
xor
mov
int
aas
int
push
popf
les
adc
imul
pushf
pop
pop
mov
cs
cs
xor
mov
fdivrl
jp
jno
push
aam
fcoms
cli
repnz
std
out
test
pop
enter
clc
push
jno
popa
sbb
cmp
sbb
sbb
js
mov
loopne
inc
mov
xchg
mov
int
inc
push
daa
addb
add
pushf
sub
push
leave
mov
dec
sbb
and
jge
xchg
pop
iret
leave
sub
cltd
xchg
or
push
arpl
pop
xlat
loope
mov
dec
sahf
add
pop
push
outsl
or
sahf
mov
loope
ret
jmp
out
lock
cmp
xor
mov
and
in
mulb
filds
add
fildll
data16
push
mov
pop
lcall
inc
mov
mov
in
rol
lahf
xor
push
orl
jb
leave
xor
xor
xchg
int3
js
cwtl
leave
sbb
cmp
fistpll
sub
lds
jp
xlat
xchg
xorb
cmp
inc
push
loopne
das
aas
push
and
shlb
jecxz
dec
adc
mov
inc
and
add
loopne
mov
xchg
xlat
xchg
or
dec
mov
pop
fwait
divl
push
mov
xchg
outsl
dec
lods
aam
in
sbb
inc
pop
sub
sbb
push
loope
fldt
xchg
xor
mov
mov
adc
out
bound
insb
add
push
add
fistps
adc
mov
popf
lcall
mov
cmp
jecxz
or
or
fnstsw
cld
mov
inc
add
jge
in
mov
inc
mov
test
pop
hlt
ffree
aam
inc
je
jle
and
leave
fs
paddsb
ss
dec
daa
jo
jecxz
cmp
rolb
sahf
fwait
sub
dec
sub
cli
mov
push
insb
mov
dec
loop
pusha
lret
rcrl
cwtl
cmp
mov
jnp
dec
push
sarb
adc
int
pop
jmp
cmpsb
mov
sbb
and
or
les
aaa
imul
mov
push
xchg
add
push
test
das
out
das
shll
ljmp
insl
jl
and
or
movsb
push
inc
jg
add
in
cltd
shlb
pop
add
push
sub
std
in
jns
outsl
pop
cmp
leave
sub
dec
stos
push
ret
jg
jo
pop
sti
xchg
insl
das
iret
popf
loope
mov
cmpsb
sub
cmp
outsl
pop
jae
test
dec
aaa
loop
sbb
jecxz
fwait
adc
clc
div
lcall
mov
push
jno
inc
mov
aam
cmpsl
fdiv
jbe
xor
mov
cmp
aam
push
aas
sbb
inc
or
push
pop
xor
fimuls
rcll
iret
stos
push
fdivr
and
pop
fisttpl
inc
div
mov
cltd
ljmp
adc
cltd
adc
sbb
insb
mov
xchg
not
and
or
pop
jo
lcall
es
mov
fucomp
xor
ss
add
push
inc
lods
dec
mov
mov
inc
loop
pushaw
aad
ficoml
jg
mov
imul
jb
rcrb
lods
mov
fs
daa
push
cmpsb
gs
jmp
lods
fadds
orl
and
pop
pop
es
rcrb
jnp
or
das
push
xchg
adc
sbb
add
push
xchg
xlat
pop
cbtw
xor
mov
cltd
pop
cmpb
xchg
pop
dec
cmp
mov
iret
cmc
xor
fidivl
ljmp
dec
subl
lret
add
xchg
cmpsb
fdivs
pop
mov
shl
sti
jb
or
mov
adc
nop
sub
jbe
xchg
add
inc
rcrb
fistpl
mov
xchg
lcall
and
cs
add
dec
cmp
rol
cltd
and
cmpsl
jle
mov
pop
in
pop
jnp
push
ds
xchg
aaa
mov
pop
xor
ret
mov
cmp
hlt
and
repz
sahf
testb
movsb
jmp
sub
lea
test
xor
pop
cmpsl
push
and
test
inc
mov
mov
adc
pop
rcr
dec
sti
mov
sti
mov
sub
cli
div
test
mov
sub
cmp
mov
aaa
xchg
mov
cwtl
insl
jnp
cld
mov
xor
xchg
mov
dec
sti
outsl
jmp
cmpsl
mov
out
test
dec
jnp
sbb
push
pop
mov
xor
mov
add
das
dec
jne
insb
pop
cmp
fwait
jns
test
imul
fwait
lods
outsl
enter
pop
or
fnstsw
xchg
adc
jne
loop
call
sbb
ljmp
mov
lahf
xor
xor
push
call
and
pop
inc
pop
inc
sub
and
loopne
and
ja
and
jmp
fidivrs
mov
nop
push
and
mov
imul
sti
jl
cwtl
inc
adc
add
inc
bswap
bound
pop
dec
dec
sti
test
push
xor
mov
movsb
sub
sbb
repnz
cltd
jmp
mov
or
add
inc
shrb
xor
rorb
and
fwait
jle
dec
mov
push
loop
mov
or
mov
cld
inc
push
pop
dec
fucomip
test
int
rorl
sub
in
rol
adcb
ss
addr16
lret
and
sub
loopne
daa
int3
repnz
or
mov
xchg
mov
inc
adc
push
adc
cmc
pop
cmp
fdivl
jl
aad
lcall
in
fsubl
aas
enter
fwait
pusha
jns
inc
xchg
cmp
lret
sub
jmp
pop
and
cmp
or
dec
leave
call
lock
das
pop
or
add
out
cmp
movb
dec
addr16
pop
mov
pop
xor
xor
loope
pop
rcrl
mov
sub
jecxz
iret
or
mov
push
lock
pop
lret
imul
mov
push
cmp
mov
push
jae
sbb
out
sarl
and
popa
sub
push
ds
push
iret
leave
dec
ret
or
test
lcall
xchg
xchg
jl
int
pop
dec
adcb
xchg
or
or
sub
mov
push
and
mov
out
mov
jmp
scas
inc
stos
mov
icebp
mov
add
lds
sub
enter
add
xchg
sbb
pusha
mov
cld
cmp
out
xchg
adc
push
sub
lea
decl
adc
lret
notl
shl
or
out
jnp
sub
mov
mov
mov
imul
sarb
mov
or
xchg
add
cmp
mov
inc
aad
mov
xor
mov
pop
mov
test
cmp
adc
jl
sub
dec
push
in
jmp
loopne
sub
fwait
adc
mov
pop
push
ficomps
sub
cmp
repz
sub
aaa
jle
lcall
inc
lods
sub
add
adc
push
jle
fisubrl
fdivp
mov
mov
adc
jb
pop
je
pop
xor
push
test
or
add
push
pop
sub
add
mov
out
popf
mov
sbb
nop
mov
adc
dec
xor
mov
out
sbb
add
fadds
repz
push
in
inc
popf
mov
and
jo
and
adc
pop
subb
cli
int
and
fstpt
leave
scas
xchg
or
inc
add
lahf
mov
ss
int3
sub
popf
call
pop
jp
imul
jle
aaa
push
pusha
pop
js
rcl
fnsave
push
mov
mov
jecxz
xor
xlat
mov
outsb
push
inc
in
xchg
mov
sbb
rcl
test
arpl
sahf
in
xchg
ds
lods
popa
fistpl
sub
push
stc
testl
sahf
inc
mov
repnz
cmpb
lret
cmp
xor
jo
das
es
lock
add
or
jle
jg
out
mov
pop
outsb
jb
xchg
lods
call
je
jp
cmpsb
rcrl
and
xor
ss
dec
ja
dec
jne
pop
push
xor
xor
xor
insl
pusha
mov
inc
xchg
fildl
pop
out
adc
scas
clc
adcb
test
mov
push
xchg
fisubs
aaa
repz
movsl
mov
sub
sahf
mov
xor
jle
lret
int3
cli
clc
mull
fwait
jbe
jb
shrl
jecxz
es
push
add
inc
or
xchg
int3
imul
pop
jae
xchg
lret
mov
lods
push
push
test
jge
imul
fwait
setae
dec
inc
out
xchg
push
jp
bound
test
lds
adc
xor
movsl
xor
cmpsl
mov
push
popa
loopnew
insl
mov
repz
stos
sub
sub
cmpsl
lods
ficompl
mov
stc
out
inc
lock
push
out
xor
mov
in
xor
inc
gs
add
daa
pop
shll
jnp
sahf
pop
and
cltd
mov
or
sahf
or
rcrl
mov
cmp
xchg
pop
lret
lahf
out
sub
xchg
ret
sbbl
pop
cld
add
outsb
push
jg
aas
jp
jmp
sahf
jmp
pop
icebp
int3
in
sub
lock
adc
mov
xchg
push
xchg
out
push
sti
mov
ret
aas
push
push
mov
and
inc
loop
shl
mov
addr16
in
in
in
popf
pop
fcompl
popl
push
xchg
cmc
bound
xor
cwtl
lds
mov
lds
mov
addr16
testb
dec
imulb
loopne
sub
out
fcompl
ret
push
adc
cmp
shlb
xor
push
lcall
push
and
push
push
push
or
scas
add
adc
hlt
adc
rcrl
cmpsb
pusha
in
lret
aam
xlat
sbb
pop
or
clc
ret
sti
js
jne
imul
in
inc
mov
test
jnp
sub
jnp
loopne
or
mov
iret
xor
roll
out
loopne
jp
pop
arpl
scas
test
inc
lea
insl
inc
pusha
sub
xchg
mov
outsl
popf
sbb
mulb
scas
sub
int3
xor
addr16
jmp
ret
push
or
insb
cmp
inc
xchg
sbb
les
adc
sti
daa
out
and
pop
cmpsb
xor
sub
popa
mov
mov
mov
movsl
movsl
add
cld
bound
dec
ss
mov
sarl
lea
hlt
pop
mov
cwtl
or
xchg
in
add
lds
mov
pushf
jns
mov
mov
in
jo
insb
mov
clc
int3
arpl
mov
or
cli
in
inc
imul
imul
xor
add
sarb
xchg
sub
mov
and
lret
mov
int
mov
push
out
insl
pop
add
stos
cmp
jle
mov
xchg
daa
pop
test
arpl
sbb
dec
jne
inc
dec
xor
mov
and
iret
push
xchg
jmp
fistl
test
rcrl
and
mov
fcomps
jecxz
es
out
shll
lds
clc
in
mov
pop
dec
into
push
pop
daa
sbb
repnz
or
adc
fs
lret
adc
lcall
push
push
dec
les
daa
sbb
xchg
xor
mov
cmp
mov
dec
ss
fcmovne
stos
mov
aam
std
add
les
inc
shrl
mov
aam
fs
out
xor
and
aaa
std
xlat
fadd
test
jp
inc
inc
mov
insb
xchg
and
pop
xor
mov
and
xchg
int
lret
dec
adcb
inc
fidivs
insl
test
mov
add
mov
cwtl
mov
loopne
mov
out
xlat
test
xchg
mov
push
pop
sbb
in
lret
enter
enter
lcall
mov
movsl
ja
push
pushf
cwtl
dec
or
push
mov
fistpl
and
jmp
inc
ljmp
mov
sub
fwait
xchg
sar
sbb
add
xor
mov
mov
push
add
mov
in
inc
add
outsb
or
dec
mov
push
sar
cmp
fisubl
jmp
clc
sbb
movsb
ret
outsb
cwtl
xchg
push
mov
xchg
add
lahf
loopne
jbe
test
sub
test
push
ja
fcomp
inc
je
pop
push
pop
ret
fwait
mov
xor
js
adc
test
dec
add
ljmp
movsb
in
adc
in
jecxz
popf
stc
adc
dec
adc
pop
adc
jns
imul
cwtl
add
popf
jg
bound
adc
jge
fucomi
or
in
data16
lret
ret
daa
mov
mov
sti
jae
ss
das
fs
or
add
dec
mov
lcall
cmp
sbb
aas
jo
shrl
ds
dec
dec
dec
stc
jp
push
inc
add
fists
test
jae
push
push
mov
mov
sub
add
repz
pop
and
rorl
and
xchg
in
inc
je
sub
jo
and
pop
jle
sbb
or
xchg
sbb
sub
lea
mov
push
pop
mov
sub
push
rorb
jl
lcall
out
int
or
imul
shrb
add
pop
in
outsb
mull
leave
lret
xchg
out
popa
dec
mov
leave
xchg
ficoml
cmp
mov
enter
sbb
scas
mov
mov
rolb
mov
mov
shr
add
xlat
inc
outsl
push
fwait
call
adc
cmpsb
fildl
in
dec
fnstenv
mov
pop
sahf
fisubl
dec
dec
mov
rolb
faddp
dec
orl
call
inc
repz
cmp
iret
jecxz
mov
xor
inc
test
lret
mul
adc
dec
pop
and
cmp
lret
xchg
jge
das
repz
jl
fdivs
and
dec
mov
dec
mov
add
inc
sti
push
jne
jbe
mov
pop
dec
mov
sti
xor
lods
fsts
jg
inc
push
inc
es
shlb
ja
sub
clc
sarb
dec
adc
std
out
push
lahf
dec
std
out
enter
pushl
movsb
dec
pop
dec
add
adc
and
jne
jae
les
push
mov
sbb
pop
dec
test
subb
es
jno
and
xchg
scas
jo
cwtl
adc
inc
xor
mov
ret
pop
les
rcrl
xchg
push
dec
fwait
rcl
test
jo
cmp
and
xchg
sarb
inc
ret
dec
push
movsb
into
int3
mov
adc
pushf
add
push
stos
adc
jl
jle
mov
enter
sahf
push
leave
mov
jb
push
shlb
stos
pop
movsl
add
xor
cmp
and
pop
push
addl
test
lret
int
lret
cld
aas
test
hlt
cld
adc
cmpsl
xor
and
jmp
leave
mov
sar
pop
sbb
sub
mov
mov
mov
daa
pop
jno
or
sub
aad
fidivs
cs
pop
mov
call
fdiv
adc
fwait
shlb
fwait
mov
push
jns
test
push
loope
pop
pushf
and
cmp
pusha
pushf
test
jnp
xlat
iret
ja
mov
rcll
in
rclb
movsl
mov
scas
add
filds
negb
dec
pusha
pop
test
ss
push
xchg
xchg
bound
popa
arpl
adc
sub
out
jb
lods
pop
add
and
mov
flds
and
pop
adc
insl
int3
decb
push
gs
jbe
and
add
in
fs
dec
push
jecxz
xchg
lcall
sub
and
add
cmp
outsl
test
iret
rclb
scas
ret
dec
mov
pop
enter
mov
int3
mov
xor
jmp
cmp
stos
adc
and
in
movsb
dec
popf
inc
mov
xor
mov
or
mov
scas
xchg
pop
sbb
jo
insl
jmp
test
mov
cmp
push
jo
dec
out
std
cld
ljmp
push
sbb
lds
mov
mov
push
mov
add
adc
or
and
test
mov
les
mov
add
jae
mov
insb
loop
icebp
mov
icebp
dec
leave
aad
mov
enter
jo
pop
inc
aad
cld
pusha
fsubl
pop
sbb
sbb
sahf
pop
lret
sbb
ljmp
push
iret
pop
adc
and
js
jns
mov
xchg
mov
xchg
outsl
cmpsb
emms
fiaddl
dec
push
adc
nop
adc
mov
and
sub
shrb
and
ret
jle
js
jae
in
and
inc
push
add
pop
mov
push
bound
adc
lcall
add
add
jb
push
movl
cmp
fwait
xor
push
add
xchg
dec
cmpsl
shll
push
pusha
in
mov
cmp
popa
push
std
sbb
pop
daa
jge
inc
icebp
cld
mov
lock
and
xlat
jecxz
mov
jns
movsl
out
test
loope
ficoms
add
negl
stos
decb
stos
loop
sub
jae
cmpsb
cmp
popf
loop
jle
loopne
ret
out
xchg
insl
mov
fwait
cmpsl
inc
xchg
xor
ss
sbb
dec
vmwrite
xor
nop
fcoms
pop
movsl
sbbl
sti
fldcw
out
push
add
in
test
mov
or
cmp
add
and
sub
pop
stos
call
lret
cmpsb
inc
mov
xchg
xchg
fildll
js
pop
push
nop
xchg
mov
pop
or
fsubrl
pop
sbb
and
enter
imul
in
mov
xchg
adc
dec
dec
or
jle
adc
enter
pop
jns
sahf
inc
and
xchg
sbb
enter
int3
movb
mov
sub
inc
hlt
sbb
fnsave
aam
into
jecxz
into
fsubs
sbb
rorl
scas
loopne
dec
push
lock
xor
pop
inc
aam
add
push
mov
and
push
push
andb
add
pop
xchg
fistps
and
ds
lahf
cmpb
aad
sub
inc
mov
cwtl
lret
xchg
stos
fisttps
xor
xor
inc
push
fiadds
pusha
jns
shll
add
jo
insb
pop
test
dec
mov
dec
fldlg2
idiv
cmp
negb
xor
xchg
lock
ret
xor
xlat
aaa
xor
inc
les
orl
mov
loopne
fwait
add
enter
jb
xchg
std
ss
lock
and
fldenv
add
jns
mov
mov
mov
pop
sbb
insb
sahf
addr16
mov
or
mov
xlat
sub
popf
outsb
lahf
add
mov
rclb
pop
int3
adc
pop
adc
jo
lret
repnz
jecxz
xor
ljmp
movsl
jo
cmp
mov
inc
shrl
mov
push
pop
mov
xchg
cmp
xor
xor
mov
movsb
repz
sub
dec
mov
inc
jecxz
scas
out
inc
hlt
arpl
cmc
push
push
notl
pop
jl
mov
test
cmp
les
adc
mov
icebp
daa
test
jns
pop
scas
popf
stos
cld
pop
mov
loope
adc
fwait
sbb
imul
push
cmp
mov
fisubrs
cmp
mov
adc
mov
mov
aad
xchg
test
incl
mov
aad
mov
dec
dec
push
sub
js
mov
loope
mov
pop
xchg
mov
rcrb
int
cltd
test
xchg
mov
pushf
push
xlat
das
ja
cmc
push
shl
in
inc
ss
or
xor
imul
mov
dec
popa
mov
mov
negl
sahf
mov
mov
and
or
jb
or
or
or
push
inc
mull
nop
iret
and
fdivl
mov
rcr
adc
pop
xchg
dec
cmc
xchg
sub
xchg
dec
stos
or
repnz
nop
push
xchg
js
rclb
addl
je
xchg
shlb
mov
mov
cltd
inc
adc
daa
push
pop
xchg
mov
jb
stc
pushf
add
jno
mov
stc
mov
jp
bound
adc
xchg
push
out
lret
sub
and
ret
out
orb
setp
dec
xchg
mov
mov
push
xlat
inc
push
stos
cmpsb
xor
out
adc
loop
js
fiaddl
xorb
aad
das
cmpsb
lods
push
push
rolb
sti
add
push
je
mov
jecxz
ja
mov
rcrb
and
sbb
aas
fdivrs
push
dec
mov
lods
pop
xor
mov
rorb
mov
gs
lock
cwtl
push
push
iret
xchg
sarl
mov
and
out
lods
icebp
lcall
push
outsb
adc
cmc
divb
and
pop
fnstenv
mov
ja
imul
push
push
xchg
push
daa
sti
xor
mov
xor
mov
inc
das
pop
fildl
mov
lret
fistl
adc
mov
in
xlat
dec
sti
dec
pop
inc
mov
jmp
jmp
lock
xchg
ret
xor
in
and
mov
or
mov
test
aaa
push
mov
mov
pop
inc
cwtl
arpl
daa
add
je
mov
mov
int
movsl
and
mov
mov
sbb
mov
insb
bound
test
push
xlat
popa
sbb
jae
jge
in
xor
or
and
sub
inc
mov
jle
sbb
jb
cmp
sbb
in
xor
clc
popa
inc
pop
adc
das
cmp
int
jl
and
arpl
and
stc
mov
pushf
popa
xchg
xor
mov
daa
into
inc
or
adc
push
mov
loopne
rorl
lcall
leave
sbbl
push
push
outsb
shrl
inc
imulb
imul
ret
pop
imul
lea
popf
mov
sub
cmpb
and
xchg
inc
jbe
sub
or
arpl
and
mov
sub
mov
scas
mov
or
mov
or
bound
shrb
pushf
call
call
mov
xor
cltd
mov
icebp
pushf
out
cmovle
xchg
jae
mov
or
adc
in
sub
xor
cmp
xchg
mov
mov
xlat
inc
in
sub
add
in
imul
adc
loop
cmc
push
sub
lods
scas
fisubrs
jo
cmpsb
cmp
cwtl
and
jnp
imull
mov
ljmp
insl
ja
fs
arpl
movsb
mov
pop
dec
xchg
fisubl
cmc
mov
jns
jns
aad
pop
shl
das
gs
push
hlt
popa
push
aaa
icebp
out
enter
xor
popf
push
stc
mov
mov
test
jl
jne
sub
push
clc
or
cmp
jne
cltd
pushf
dec
repz
adc
fldl
sahf
jbe
pop
xchg
out
outsl
push
shr
sbb
xlat
movsl
sahf
dec
sahf
dec
ficomps
push
hlt
lcall
in
xlat
rorb
push
mov
adc
mov
lahf
sub
dec
pushl
fldenv
xchg
cli
popf
mov
in
adc
jnp
xchg
push
lods
or
mov
mov
push
hlt
push
or
daa
negl
and
xor
test
rcr
sbb
jmp
add
insb
test
sub
jle
in
leave
pop
cmp
fistpll
xorl
sbb
mov
xor
or
pop
int
sar
inc
rclb
sub
sti
push
mov
push
out
xchg
mov
test
shll
insl
or
int
lds
mov
and
aad
xor
call
fisubs
push
sub
insl
cld
jb
mov
out
in
stos
hlt
sti
push
mov
mov
adc
clc
pop
add
cmp
dec
iret
pop
sbb
adc
cmp
lcall
push
push
and
scas
cltd
inc
ret
hlt
sbbb
aam
addr16
xchg
jae
sub
add
pop
pop
add
sub
ja
mov
inc
mov
les
test
xchg
in
mov
iret
fldcw
jo
fsts
xor
imul
repz
add
push
xor
mov
sbb
or
jmp
push
push
add
pushf
ds
push
testl
test
pop
popa
bound
sarl
mov
push
mov
test
shr
add
pop
pop
xor
movsb
aas
jp
or
dec
push
and
jne
out
sub
out
sbb
imul
popf
jbe
cmp
mov
dec
or
mov
push
inc
aaa
mov
loope
in
iret
dec
xchg
add
out
add
xlat
fs
pop
dec
stc
mov
mov
orb
loopne
mov
cli
mov
cmp
sbb
cmpsl
imul
je
imul
rclb
jb
out
adc
mov
movsb
mov
mov
jb
cmp
fsubp
cmpsl
pop
mov
cli
and
ljmp
mov
pop
stc
shl
dec
xchg
sub
xor
dec
mov
jp
inc
scas
mov
das
xor
xchg
xchg
stos
aas
cld
fldcw
xchg
mov
or
push
jb
rorl
outsb
push
inc
movsb
xor
data16
in
pop
sbb
daa
jp
repz
or
sub
mov
mov
out
addr16
inc
mov
sbb
testb
add
jnp
mov
adc
adc
iret
dec
bound
repnz
out
jb
xchg
add
andb
pop
xchg
test
repnz
dec
add
or
stc
dec
xchg
inc
push
neg
es
loop
sub
push
adc
push
stos
out
xor
dec
lods
adc
xor
mov
mov
xchg
mov
insl
sub
jne
in
rolb
mov
mov
ficoml
ret
lret
mov
add
addb
or
or
push
sub
rcrl
cmpsb
subl
mov
pop
stc
add
sbb
sub
adc
cmp
sub
outsl
mov
pop
into
or
xchg
lods
les
jge
js
pop
mov
aad
int
mov
sub
dec
sbb
inc
inc
loopne
repnz
cmpsl
and
lahf
push
cltd
cmp
cli
push
sarl
jle
insb
mov
sub
sbb
ret
dec
jmp
aaa
loop
inc
lods
or
xchg
cli
stos
dec
ds
lods
cmpsl
lcall
test
scas
jne
mov
ljmp
mov
into
pop
or
jp
sbb
jg
sti
decl
mov
mov
sbb
lret
repnz
adc
xor
lret
ret
ret
fwait
scas
push
leave
cmp
aas
decb
xchg
lret
fistpl
sbb
mov
les
out
hlt
gs
xchg
lahf
sbb
xor
cltd
ja
mov
xlat
mov
xor
jbe
pop
arpl
fsts
jp
adc
mov
cmc
adc
or
inc
fcmove
ret
cmp
stos
push
jle
mov
mov
xor
ret
pop
pop
cli
mov
adc
mov
adc
adc
mov
mov
or
lret
call
fucomi
dec
dec
in
imul
iret
mov
fwait
sub
cwtl
movsb
repz
out
out
mov
xor
pop
pop
shlb
popf
mov
sbb
sbb
aas
and
dec
cli
fists
imul
icebp
pop
push
not
mov
dec
dec
cli
push
movsb
mov
push
pop
popa
cs
out
cmp
cmp
stos
mov
push
mov
pop
mov
jle
mov
push
jg
fwait
xor
sbb
mov
or
cwtl
data16
lds
ss
gs
rcrb
cmc
pop
sub
jnp
lods
call
stos
lods
subl
push
dec
lods
mov
repz
cmp
andl
xor
sti
fwait
xchg
rcrb
stc
mov
dec
sahf
lea
jno
movsb
mov
jmp
andb
jne
test
lcall
pop
or
adc
mov
notl
mov
and
aam
sahf
push
xchg
and
and
lods
mov
adc
jp
or
dec
cmp
inc
ret
push
mov
cli
loope
call
push
jbe
inc
adc
andb
hlt
shll
nop
dec
fists
in
fsts
lods
jge
mov
in
int
inc
jne
and
pusha
inc
cld
jo
stos
xchg
arpl
stc
mov
jb
rorl
mov
xchg
push
and
test
cli
mov
cmp
inc
das
xchg
cli
adc
adc
divl
stos
loop
sahf
xchg
lods
sbb
jbe
mov
cld
insl
popa
into
sarl
mov
lods
xchg
loope
inc
leave
jno
les
push
mov
mov
scas
imul
movsb
xchg
cmp
ljmp
das
jg
cli
add
in
pusha
mov
pusha
pop
pop
adc
fstl
nop
in
rclb
sbb
add
repnz
add
int3
cmp
test
mov
test
dec
or
cmp
fsub
dec
cmp
jbe
inc
iret
pop
je
imul
dec
sub
mov
mov
subb
pop
cmp
aam
jl
nopl
push
decl
out
push
jecxz
inc
xchg
outsb
cwtl
jns
loopne
xchg
filds
and
ljmp
xor
jp
and
rolb
pusha
popa
jns
std
daa
xchg
daa
imul
mov
dec
and
jnp
xor
idivl
push
nop
sbb
imul
ret
stos
jae
cli
orb
or
das
jb
repz
nop
push
cmpsb
mov
pop
and
aam
std
jp
pop
in
inc
add
dec
stc
rcrl
ficomps
movsb
je
mov
icebp
adc
adc
cmp
loop
inc
push
xchg
xchg
mov
mov
push
jmp
mov
mov
add
lds
into
dec
loope
hlt
aad
adc
fisttps
add
out
popf
lods
test
push
insb
jmp
pusha
mov
mov
sub
xchg
pop
dec
loop
popf
std
or
and
mov
out
outsl
in
lret
popa
push
lea
les
adcl
adc
jb
mov
jg
fildll
pusha
bound
test
stc
pop
loop
cli
mov
pop
lods
sub
jmp
and
mov
in
or
data16
sub
stos
push
outsb
jo
jae
cs
xchg
inc
adc
ss
outsl
adc
push
pop
adc
int
mov
jecxz
mov
lea
or
jne
in
sub
sbb
push
hlt
jge
js
and
lcall
add
es
movsb
push
fs
xchg
ret
test
leave
mov
jp
leave
jnp
lock
mov
jbe
pop
test
pop
testb
cltd
and
ljmp
test
gs
pushf
pop
repz
in
stos
push
sbb
push
scas
popa
add
test
in
gs
icebp
sar
addl
cmp
lahf
lods
mov
jp
mov
push
sbb
insb
cld
sahf
movsl
fnsave
jbe
repz
mov
out
ficomps
aaa
push
loope
sti
popf
push
cmp
fmull
push
scas
xchg
testb
movsl
xchg
mov
or
test
mov
cmp
lock
adc
inc
fmuls
cwtl
adc
xor
hlt
mov
add
into
mull
jo
push
out
mov
pop
fs
frstor
mov
push
inc
nop
add
test
fldcw
push
mov
mov
push
and
push
xchg
inc
adc
adc
xor
push
lret
out
cltd
addr16
lahf
and
rcll
out
sub
push
pop
int3
js
add
sahf
mov
mov
pop
pop
mov
pop
push
sub
push
dec
mov
clc
fisubrs
fsubrl
and
push
adcl
push
jecxz
lds
jmp
into
cmp
enter
bound
push
stos
pushf
xor
addr16
jo
adcl
imul
out
add
sbb
push
mov
or
sub
cmp
cwtl
outsl
imul
and
fwait
mov
addb
movsl
nop
xchg
sub
xchg
pop
push
pop
lahf
cs
daa
push
inc
stc
xor
xor
shrl
leave
push
jnp
adc
dec
cwtl
imul
stos
in
mov
xchg
cwtl
out
cmp
inc
aad
xchg
lods
enter
out
xchg
xor
popaw
icebp
cld
ljmp
test
mov
xor
xor
mov
jno
adc
sarb
test
das
mov
jne
push
cmp
aad
das
push
pop
insb
arpl
into
shl
movsl
sti
cmp
push
mov
push
sti
lret
dec
push
cmc
mov
aaa
adc
add
sub
andl
in
subl
cmc
mov
repnz
dec
stc
movsb
or
scas
lret
jge
mov
cmp
aaa
mov
push
mov
dec
mov
xchg
data16
ss
inc
nop
arpl
or
in
sbb
cld
jecxz
lcallw
call
cmp
cmp
aad
mov
dec
lods
mov
cmp
sbb
insb
pop
scas
movsl
push
cmp
add
mov
popa
fistl
cmp
xchg
xchg
pop
repnz
push
movsb
xor
scas
pushf
cs
xor
je
mov
nop
iret
stos
xchg
push
popf
dec
enter
mov
stc
ret
xchg
fnstsw
cld
cli
jne
mov
dec
lahf
inc
push
test
sbb
adc
xchg
jo
add
xor
into
xor
pop
push
xor
ja
mov
or
jnp
loope
aaa
push
movsb
imul
fdivrs
inc
inc
pop
in
xchg
sbb
pop
pusha
mov
mov
sub
test
sub
mov
jg
repz
and
cwtl
push
xchg
xchg
inc
cmp
ficomps
adc
and
clc
xlat
jno
dec
add
js
sbb
xor
cmp
pop
ret
aas
or
mov
leave
sub
fisubs
fmull
cmc
adc
cs
xchg
lea
loop
pop
add
mov
cmpsl
outsl
or
sbb
mov
cmp
mov
decl
inc
adc
mov
xlat
push
push
and
push
push
xor
lods
js
push
test
pusha
cmc
push
outsb
xchg
repz
jo
out
icebp
imul
xchg
sti
xor
dec
or
fidivrs
stos
testb
jnp
cmp
jle
ss
shll
outsl
sbb
jp
stos
or
jns
lret
lds
rcll
pop
cmp
es
test
push
addl
lret
jo
jns
and
add
dec
pop
test
jp
ss
push
loope
outsb
sahf
pushf
jae
push
add
imul
pop
push
filds
sti
inc
pop
xor
enter
or
xchg
movsl
rolb
aam
add
xor
and
ljmp
out
xor
and
adc
lahf
mov
adc
dec
cmp
loop
jns
arpl
mov
sub
mov
xchg
and
inc
xlat
divl
sarb
mov
cmpsl
jno
lcall
hlt
clc
jmp
cmp
loop
ja
adc
push
dec
fs
sbb
push
insl
imul
sarl
sbb
sub
mov
xor
push
rol
push
icebp
into
sbb
lods
mov
xchg
daa
pop
aaa
cmp
pusha
pop
sahf
dec
xor
dec
xor
and
sub
into
mov
repz
dec
lea
xchg
aad
movsl
in
jae
stos
jp
lea
xchg
cmpsl
dec
outsb
scas
xor
jnp
cmp
push
rclb
pushf
xchg
ror
dec
mov
inc
sub
mov
movsb
jmp
sub
cmp
push
add
dec
push
xchg
lret
push
fneni(8087
xor
and
xchg
mov
adc
mov
jae
inc
notl
pop
sub
mov
fsubp
pop
add
fstps
fmulp
in
cmp
cmp
push
std
xchg
outsl
je
fcmove
lahf
je
adc
stos
pop
or
in
pop
cmc
push
xor
or
cli
pusha
fcompl
lock
out
mov
addr16
sub
fisttps
cmpb
add
cmp
and
mov
xchg
negl
pop
push
sbb
pop
jmp
je
ja
mov
mov
call
les
lds
in
fidivrs
out
cmp
or
xchg
inc
pop
loop
sbb
mov
div
mov
jle
dec
aad
call
flds
aas
cmpl
mov
jo
and
jle
xor
daa
and
and
inc
movsb
cltd
daa
cmc
cmp
movsl
sti
add
test
out
je
and
aam
mov
jns
sbb
int
inc
out
jmp
mov
in
sub
cmpsb
lea
lret
flds
cmc
movsl
lcall
sub
aas
scas
mov
ja
sub
idivl
dec
ja
mov
cli
xchg
movsl
inc
xchg
rcl
or
mov
lret
leave
jae
cmpsb
jecxz
ret
mov
add
push
push
add
inc
lret
aas
lock
dec
jecxz
std
test
dec
inc
popl
sahf
add
jle
ret
sar
xchg
mov
adc
sahf
pop
inc
daa
mov
imul
add
out
jge
push
fldt
jge
xchg
adc
sub
inc
aam
cltd
inc
fcomps
adc
inc
movsb
lods
fidivl
sbb
mov
lods
dec
pop
fcmovne
loop
cmpsl
aad
stc
adc
sahf
or
cs
mov
sbbb
stos
mov
jecxz
lds
cmp
int3
cmp
sub
sbb
dec
imul
sbb
mov
mov
int3
inc
xor
mov
adc
stc
jbe
push
or
fcoms
ret
lods
push
push
or
repz
mull
push
add
out
insb
xorb
adc
fisubs
lods
rorl
jnp
sbb
popf
and
sti
push
stos
fwait
cwtl
roll
mov
dec
loope
jmp
aas
add
mov
jmp
jmp
mov
fldenv
aad
out
adc
out
sub
and
ret
scas
notb
movsl
adc
repz
pcmpeqd
sti
shrb
ret
cmp
cmp
outsl
push
inc
push
adc
cmpsb
jle
mov
movsl
sub
add
ljmp
lret
jne
jnp
arpl
arpl
repnz
push
adc
xor
xchg
push
xor
sbbb
cmpb
jb
loopne
xchg
mov
mov
mov
daa
pop
mov
outsl
add
push
mov
out
mov
adc
adc
cmc
and
pop
rclb
lock
pop
sub
sbb
mov
sub
testl
pushf
xor
les
pop
enter
push
cli
mov
addl
add
rcr
inc
popf
cmp
fcompl
call
jmp
in
mov
stc
sbb
cwtl
nop
or
jne
xchg
and
push
movsl
sarb
mov
mov
cmc
xchg
push
mov
leave
xorb
fdivrs
push
push
insl
adcl
movsb
sbb
out
imul
lea
ficoms
sar
movsl
rolb
inc
aas
jo
fdivrs
ficoml
adc
inc
int
jmp
cmp
cli
jnp
add
mov
xor
push
jo
sbb
mov
mov
out
mov
push
xor
adc
or
dec
pop
shr
xchg
fsubrl
out
in
repz
pop
push
sub
arpl
mov
mulb
mov
jp
push
or
test
adc
sbb
aas
dec
test
jns
adc
jge
jae
mov
aas
jno
dec
sbb
icebp
jbe
adc
sbbb
cwtl
pop
mov
ret
lahf
mov
lods
cmpsb
stos
jne
clc
fwait
sahf
sar
push
in
mov
push
sbb
push
pop
fdivrs
add
xchg
es
adc
fcomps
mov
mov
xor
adcb
xor
flds
pusha
dec
dec
cmp
in
mov
aas
pop
pop
gs
int3
mov
dec
movsb
cmp
imul
mov
inc
or
xor
mov
mov
jle
int
push
mov
pop
shll
scas
fwait
imul
aad
sub
scas
xchg
in
stos
inc
mov
pushf
push
ja
ds
divl
les
push
xor
sbb
jecxz
jae
ficoml
cmp
testl
stc
fdivl
movsb
jle
cmc
dec
fisubl
xlat
cld
or
cmpsl
pusha
js
mov
pop
sbb
fnsetpm(287
or
push
ret
lahf
sbb
sahf
or
lret
xchg
sub
test
push
jns
sti
push
lea
xor
push
outsl
mov
es
mov
mov
cli
popa
push
sub
data16
ss
pop
cmpsl
cmp
dec
inc
mov
dec
cmp
fisttps
xchg
rorl
icebp
stos
cmp
jp
pop
pop
rcrb
aam
add
popf
decb
sub
sbb
inc
inc
sbb
and
mov
insl
enter
mov
mov
push
jg
mov
dec
repz
and
push
mov
xlat
int
sbb
inc
sub
dec
inc
cmpsl
ds
popf
cmp
in
jmp
scas
mov
out
loop
sbb
lret
filds
pushf
arpl
out
leave
dec
pop
dec
sub
mov
pop
sub
int
mov
and
in
and
repnz
repnz
inc
gs
xchg
insl
in
out
aad
inc
push
xchg
lahf
pushf
dec
push
movsl
adc
loope
fidivs
push
push
jge
lds
shl
imul
sahf
sarb
ja
xor
pop
jl
fcoms
or
nop
inc
js
leave
pop
xor
mov
cs
or
adc
dec
scas
pop
scas
insb
mov
or
lahf
cltd
dec
cmp
sbb
mov
test
or
xchg
ret
mov
cmpsb
fs
fdivrs
jns
cmp
aam
push
nop
loop
call
pop
lcall
cltd
fwait
sub
push
mov
int
adc
xchg
pop
mov
ds
pop
std
push
push
pop
and
jb
push
outsl
dec
addr16
jnp
mov
jmp
cwtl
js
adc
test
and
hlt
inc
sbb
das
push
pushf
mov
stos
mov
sahf
popa
mov
and
or
pushf
mov
and
insl
push
scas
xor
cmc
push
mov
xlat
flds
inc
out
fwait
mov
pop
mov
shll
lds
mov
xor
test
mov
leave
in
out
pop
arpl
cmp
test
sahf
sbb
lret
dec
adc
rolb
jnp
cmp
xchg
push
mov
mov
adc
add
rolb
cli
cltd
data16
adc
adc
pop
and
jb
or
inc
adc
in
jmp
mov
imul
pop
inc
stos
mov
add
add
or
inc
cmp
cmp
jae
and
add
orl
mov
mov
jmp
jb
imul
hlt
sbb
std
test
lds
add
adc
dec
cmpsb
rclb
sub
xchg
lock
mov
push
xchg
add
lcall
pop
mov
mov
xchg
jno
and
cmpsl
aas
xchg
les
xor
pop
arpl
in
mov
xor
jle
sarb
mov
mov
frstor
and
cli
stos
pop
cltd
push
dec
jno
ds
lds
rclb
insl
fwait
ja
dec
mov
add
int
or
pop
sub
stos
cltd
mov
sub
scas
inc
int3
sub
lds
add
xchg
push
pop
lret
fcomps
stos
xor
pop
mov
or
shlb
xor
ljmp
into
loope
fucomip
push
mov
dec
adcl
daa
cmp
or
jo
adc
push
aam
push
mov
sbb
arpl
orb
aam
fadd
cs
fnstsw
xor
mov
jmp
mov
stos
into
sbb
repz
xchg
in
adc
clc
out
fnstsw
push
sub
popf
add
or
stos
stos
mov
popf
insl
xchg
xor
push
test
sub
hlt
pop
stc
or
bound
test
or
xchg
jmp
or
hlt
cld
clc
jnp
add
pusha
movsl
sbb
pop
jmp
shlb
pop
adc
cmp
mov
mov
stos
ljmp
clc
enter
lods
mov
pop
addr16
push
and
add
xchg
adc
pop
adc
mov
cmc
das
popf
adc
popl
mov
sub
aam
call
and
sbb
popa
insl
dec
sub
js
mov
cmp
and
xor
mov
push
mov
rorl
mov
pushf
sub
xor
addr16
mov
repnz
pop
jmp
mov
push
jge
dec
fsubrs
in
test
and
cmpsb
mov
adc
daa
jbe
or
pop
imul
jecxz
popf
fimuls
and
xchg
xchg
mov
loope
rcrl
enter
mov
adc
add
jae
loopne
cmp
sarb
xchg
movb
in
in
push
in
aad
cmc
test
xchg
or
jbe
je
test
inc
inc
inc
inc
pop
adc
sarl
gs
movsb
lock
das
jl
jae
inc
xchg
stc
sbb
enter
or
stos
idivl
adc
pop
add
cwtl
dec
and
push
pushw
js
sub
int3
xchg
dec
or
xor
inc
shrl
cli
jnp
mov
mov
xchg
mov
add
push
out
insb
in
xlat
in
add
dec
pop
stc
sbb
mov
add
inc
dec
test
test
xchg
aas
jbe
sub
mov
stc
rorl
int3
and
fidivrl
fiadds
or
in
stc
xchg
int3
pop
mov
cli
fmull
mov
bnd
in
in
mov
sbb
ss
mov
iret
popa
test
std
mov
and
cs
jb
filds
jb
rorl
scas
pusha
and
or
add
lret
push
insb
lock
sub
mov
mov
cltd
scas
lahf
frstor
fisttpll
and
lods
adc
scas
and
cmp
jnp
addr16
push
pop
cld
mov
adc
movsl
cli
push
pop
push
jge
add
xor
or
out
add
add
addr16
inc
xchg
insl
dec
out
psubusb
int3
xchg
pop
sbb
pop
mov
call
sub
inc
sbb
insl
xchg
aas
cmpsl
nop
pop
lea
out
mov
or
aas
add
mov
clc
dec
negb
ret
mov
testb
jo
aam
stos
mov
xchg
sbb
mov
ror
jl
jecxz
shlb
loop
leave
sub
dec
into
test
ja
xchg
inc
mov
fisttpl
ret
lcall
daa
pop
add
lcall
das
xchg
sub
and
std
arpl
ss
adc
sti
adc
pusha
cmp
jmp
test
jbe
adc
sahf
in
inc
or
mov
scas
popf
push
fdivl
data16
mov
test
jae
outsb
out
mov
mov
xchg
xchg
movb
mov
sbb
add
pop
fmuls
mov
popa
sub
add
pop
inc
push
add
sub
rclb
lret
sbb
out
insb
data16
pop
out
imul
movsl
ret
push
push
fsubrs
sbb
aad
or
les
aad
sti
xor
or
mov
inc
lods
negb
sub
dec
cmc
mov
pop
xlat
cli
ja
addl
test
decb
adc
dec
add
cmp
mov
sub
fisubl
cmp
add
cmpsb
fcmovu
les
cltd
scas
sti
or
in
and
or
dec
xchg
ds
icebp
mov
add
jno
jecxz
inc
adcl
xchg
dec
mov
mov
scas
dec
iret
lods
push
mov
jp
imull
leave
data16
lods
push
pop
xchg
and
lea
push
mov
lret
jg
je
bound
ss
call
repnz
insb
cmp
cmp
ret
mov
repnz
out
loop
and
lods
cmpsb
hlt
fcompl
in
mov
dec
outsb
mov
inc
out
rorb
xchg
cmp
out
sub
pop
push
mov
push
icebp
cmp
mov
add
outsl
repz
insl
cltd
into
stc
push
push
pop
jno
add
fildl
aad
pop
pop
roll
inc
dec
cmpsb
inc
mov
mov
cld
push
sbb
ljmp
sbb
add
std
inc
push
test
lods
repnz
in
sbb
aam
inc
mov
jae
loope
pop
div
xchg
icebp
addr16
cmp
imul
dec
addb
aad
xchg
jg
dec
sti
roll
test
enter
cltd
gs
out
fwait
dec
inc
or
mov
les
ds
leave
mov
push
bound
xor
mov
dec
jle
xor
jno
add
mov
mov
mov
test
mov
subl
movlps
leave
mov
xor
dec
xchg
lods
ds
call
xchg
mov
add
aaa
xchg
inc
pop
outsl
jmp
aas
mov
dec
mov
mov
inc
mov
sub
xchg
mov
pusha
xchg
jne
mov
rcr
cmp
add
inc
inc
fimull
pushf
movsb
push
mov
sarl
xor
fsubp
into
inc
add
or
sbb
pop
daa
dec
out
sbb
push
icebp
out
sub
pop
mov
sbb
ret
bound
movsl
mov
xor
cmpsl
sti
adc
js
imul
adc
adc
movsl
out
or
fistpll
adc
js
xchg
leave
jl
das
shlb
lea
mov
push
push
data16
stos
test
sti
imul
addl
or
idivl
pop
scas
test
sbb
mov
imul
scas
ljmp
cmp
dec
cmp
mov
pop
daa
sbb
add
fisttpl
dec
ss
or
sbb
jl
popf
mov
xchg
cmp
andl
ljmp
mov
mov
cli
loope
pop
cmp
cld
stos
dec
test
lahf
add
inc
xrelease
cmpsl
aad
bnd
inc
pop
cmp
xchg
inc
outsl
adc
dec
xor
cs
out
shrl
mov
xchg
adc
add
fcoml
adc
mov
adc
push
and
scas
and
mov
mov
xchg
addr16
or
mov
xchg
loopne
push
xchg
sbb
rorb
cmp
push
dec
mov
out
fsincos
jo
dec
movsb
in
mov
inc
inc
push
lret
mov
push
mov
add
xchg
shrb
outsl
popf
addr16
and
cmp
dec
mov
mov
mov
mov
push
rcrb
xchg
push
xchg
jg
pop
ret
sarb
pop
int3
lret
lods
add
add
aas
loope,pn
xchg
adc
xor
das
mov
sahf
adc
pop
xor
rcl
mov
scas
and
mov
fstpt
in
jns
push
push
push
jg
inc
in
icebp
cmp
mov
pushf
xchg
in
out
push
fidivrs
pop
dec
cmc
push
faddl
stos
mov
cs
addb
ret
notb
lret
dec
das
dec
mov
fildl
cmp
fnstsw
mov
movsl
and
mov
nop
pop
dec
or
pop
sub
popa
jmp
stc
xchg
hlt
lret
fcomps
ss
pop
out
lcall
jmp
ljmp
mov
ss
inc
arpl
shrb
leave
imul
cmpsl
mov
out
movsl
lret
adc
imul
nop
cmp
mov
repz
mov
or
bound
lods
push
xor
push
mov
sbb
in
daa
mov
and
xor
mov
stc
mov
fcoml
cli
push
rcr
jle
or
adc
ljmp
or
addr16
ja
cld
lods
scas
mov
or
sbb
mov
pop
fisubrl
gs
hlt
repnz
inc
jno
push
loopne
push
inc
dec
idivl
popf
and
fxrstor
xor
ret
fwait
les
jp
mov
jo
mov
or
cmp
aas
sub
add
aas
mov
repnz
dec
scas
flds
test
dec
pop
inc
dec
dec
xor
stc
popa
aas
xchg
and
mov
movsb
lret
mov
dec
mov
gs
cmp
add
fs
jle
xor
std
mov
xchg
jno
push
add
aaa
js
addl
shrb
jns
push
and
or
hlt
out
stos
ja
aaa
pop
mov
aam
adc
aaa
and
movsl
adc
cmp
call
mov
pop
pop
popf
sbb
addr16
movsb
sbb
xchg
imull
lcall
cmpb
daa
ds
sub
scas
fcmove
mov
inc
cwtl
xchg
insb
outsb
mov
decb
dec
mov
and
jb
xchg
dec
scas
in
inc
pop
mov
pushf
jmp
or
xor
adc
mov
xor
sbb
jns
lret
and
jle
mov
test
jns
add
sbb
js
mov
int
xchg
mov
subl
mov
cmp
sarl
adc
xchg
or
xor
shlb
lea
addb
jno
cmpsb
mov
cmp
add
imul
ja
es
jmp
arpl
outsl
dec
sub
sahf
sbb
into
mov
cli
push
pop
cmp
insb
sub
lock
cltd
xlat
fsubl
ror
loop
or
xchg
vprotw
mov
jecxz
sub
xchg
rol
cli
adc
movq
hlt
fs
or
addr16
ljmp
mov
inc
xchg
lock
jmp
lret
pop
dec
rcll
push
call
mov
jae
mov
in
leave
mov
mov
xor
ret
rorl
int
pop
and
inc
outsl
mov
inc
std
mov
fiaddl
ficoml
push
mov
cmc
test
mov
xchg
xor
mov
dec
jg
imulb
mov
clc
xchg
adc
jle
cmc
jno
imulb
xchg
push
stc
cli
adc
sti
mov
test
dec
out
xchg
jne
pop
stos
xor
popa
pusha
ja
sub
imul
adc
or
inc
aaa
ret
inc
dec
nop
addb
sti
push
pop
push
push
inc
out
add
dec
aad
xor
jecxz
pop
scas
out
fwait
xor
mov
popf
and
in
mov
insl
aad
aad
enter
loopne
mov
sahf
jecxz
xor
adc
movsl
cmp
cmp
movsl
mov
inc
jp
test
dec
sub
mov
lea
push
jbe
push
mov
inc
sbb
add
int
fucomip
xor
mov
push
cmp
inc
mov
call
push
mov
or
cmp
adc
xchg
arpl
dec
fbld
sub
xor
sub
push
push
mov
mov
pop
lea
movsl
mov
or
iret
lods
jne
cld
lock
add
mov
pop
push
cld
and
sar
pusha
test
ja
andb
popa
inc
push
addl
jmp
cmp
das
cmp
mov
popf
dec
xchg
or
sub
adc
push
movsl
or
sbbb
arpl
test
mov
lock
jge
dec
in
mov
adc
roll
mov
push
cmp
out
sbb
ret
nop
stos
sub
sbb
test
lahf
pop
jne
mov
shr
out
dec
in
inc
mov
dec
mov
dec
push
jb
and
push
xorb
jg
sbb
arpl
mov
xor
dec
in
ds
std
aas
ds
leave
scas
leave
sub
scas
sub
int
push
lods
cmp
ret
je
cwtl
stos
inc
xchg
rcl
xor
scas
in
lcall
mov
cmp
mov
stos
std
sub
adc
out
enter
mov
imul
adc
push
and
jns
pop
int3
popa
js
add
fdiv
xchg
ret
ds
mov
sub
dec
or
filds
pop
xor
and
add
fsubrs
icebp
mov
mov
pop
insb
push
test
sbb
mov
ret
adc
mov
xor
jno
sbb
mov
mov
lret
fwait
or
pop
shrl
sbbb
inc
std
mov
stc
scas
and
jbe
cld
leave
jno
or
adc
sbb
push
pop
jge
test
mov
je
pop
mov
data16
push
adc
call
lods
jb
adc
push
imul
push
cmpsl
ret
popf
icebp
and
dec
popf
repnz
mov
or
and
mov
nop
pop
jnp
mov
push
jno
cld
or
push
andb
pop
scas
cmp
aad
mov
in
test
mov
pusha
flds
movsb
aaa
inc
pop
mov
movsl
xorb
mov
fcmove
sbb
xchg
mov
mov
lods
dec
push
mov
or
push
push
sub
or
dec
sahf
sbb
jmp
add
mov
mov
and
push
scas
cmp
rep
lret
cmpsb
push
ss
and
add
mov
dec
mov
into
arpl
mov
fwait
and
push
dec
xchg
inc
adc
test
and
jbe
fwait
insb
cmp
aas
jns
dec
inc
sub
dec
xor
lds
dec
mov
lcall
inc
dec
xchg
mov
mov
jb
arpl
mov
pop
sub
popa
and
mov
mov
jno
xor
mov
test
adc
jmp
sbb
cmpsl
jg
cmpsl
js
cmp
lcall
aad
cmpsl
movsb
imul
aam
in
add
push
push
push
cli
pop
andl
cmp
addr16
xor
pusha
leave
imull
das
out
mov
xor
icebp
pop
fcoml
test
mov
push
sbb
sub
imul
cld
shlb
cmpsb
dec
pop
out
stc
or
adc
jns
outsb
call
push
push
lahf
xor
insl
cld
or
sbb
dec
mov
test
ljmp
frstor
hlt
mov
jae
cmp
inc
fildll
sbb
loope
xor
je
in
testl
xor
mov
push
sbb
jecxz
in
add
test
push
push
and
loope
movsl
in
sub
mov
pop
sbb
out
adc
xchg
jns
outsl
test
xchg
xor
cmc
push
push
repz
sbb
xor
xchg
incb
add
test
je
mov
scas
popa
imul
jmp
inc
sub
xchg
test
cld
nop
or
xlat
xchg
sahf
cld
xchg
dec
or
int
aad
inc
mov
stc
xchg
fcoms
dec
dec
pop
ja
mov
jmp
xor
mov
out
pop
fcomps
das
jo
shrl
cmp
leave
jmp
cmpsb
xor
pop
adc
and
dec
cmpsl
aas
sbb
mov
mov
adc
fidivrs
push
jmp
bound
pusha
test
fdivs
stos
fnstenv
lock
push
bound
cmp
lods
cmp
mov
out
ret
sbb
int
mov
inc
das
xchg
pop
movsb
std
cmp
xchg
lock
dec
aas
and
and
push
insb
push
and
pop
int
ds
sub
rcrb
test
sub
divb
add
int3
sub
jp
xor
ja
or
sub
ds
mov
lods
lret
cld
lahf
shlb
add
outsb
sbb
decl
cs
and
xorl
add
ret
inc
jmp
les
lock
out
mov
push
and
rcrl
add
shr
fucomi
in
or
fadds
dec
inc
jmp
jns
rcl
mov
in
sub
in
adc
push
inc
inc
and
push
dec
mov
mov
fidivrs
in
jb
dec
out
rcll
adc
add
add
pop
pop
out
sub
mov
add
push
mov
mov
add
imul
push
and
imul
or
cmp
pop
in
lret
sub
mov
xchg
loope
adc
popa
xor
lea
out
or
adc
imul
lds
pushf
push
rorl
test
addr16
mov
nop
push
mov
inc
mov
push
or
fisubrl
jns
jle
jbe
sub
sub
or
jb
outsl
sub
mov
and
lock
mov
or
xor
sbb
xchg
test
push
sti
xlat
ja
dec
stc
loop
mov
sbb
inc
push
inc
stos
jnp
mov
jp
rclb
xor
jo
repnz
mov
ret
bswap
pop
jae
push
iret
fsts
andl
dec
insl
xorb
lock
es
sbb
cmp
and
cld
ljmp
adc
jmp
imul
jp
loopne
bound
xor
xlat
pop
inc
cmc
nop
mov
mov
mov
or
rclb
cmp
lret
xchg
add
in
nop
clc
add
lret
jp
rclb
lds
inc
push
jno
cmp
xor
sub
outsb
push
roll
jb
pop
jl
in
push
jl
daa
mov
or
mov
ss
push
repz
fs
dec
mov
sahf
add
dec
rcll
ds
mov
add
popa
push
fsubl
lret
scas
insb
or
flds
stc
mov
test
sub
cmp
sub
jne
test
mulb
into
lret
xchg
xchg
mov
test
mov
pop
adc
xorl
mov
shll
mov
jp
cli
call
loop
sbb
int
imull
and
mov
jne
div
movsl
mov
leave
inc
xor
push
outsl
ljmp
xor
push
outsl
lahf
xchg
outsb
mov
push
inc
push
jnp
test
test
sbb
fsubrp
mov
mov
cmp
adc
mov
fadds
mov
push
or
push
lret
jecxz
mov
cmp
fmul
js
mov
xor
repz
push
vmaxsd
sbb
mov
cmpsl
push
outsl
and
mov
pop
mov
dec
mov
in
int
cwtl
fwait
mov
add
outsb
or
pop
push
mov
jle
or
pop
popf
sbb
mov
into
repz
sahf
int3
insb
fldenv
aam
lea
xchg
frstor
jbe
popf
and
dec
inc
clc
jp
mov
jl
xchg
xchg
data16
cld
fwait
aam
inc
aas
call
ret
xchg
mov
dec
fdivl
adc
inc
adc
or
push
sub
inc
xorb
cmp
mov
adc
sar
lret
movsl
adc
push
je
cs
mov
pop
out
fisttps
xchg
sub
cmpsl
loop
inc
addb
mov
addl
mov
mov
clc
loope
insl
ss
fs
dec
call
mov
jbe
cmp
pop
dec
xorl
and
and
ljmp
push
jbe
dec
stos
and
jne
inc
data16
and
nop
inc
pop
pop
faddl
lods
push
push
sahf
mov
outsl
or
fisttpl
out
stos
add
mov
rcr
mov
xor
dec
int3
clc
or
add
dec
fbstp
leave
arpl
cmpsl
xchg
aaa
ljmp
push
or
mov
test
add
data16
sbb
aam
dec
sbb
push
les
iret
imul
lret
in
or
popa
js
inc
xchg
out
arpl
movsl
imul
out
divb
jnp
xor
cli
arpl
ds
push
jbe
or
xor
test
sub
jmp
stos
js
imul
call
lods
scas
repnz
pushf
lea
mov
push
iret
mov
mov
stc
mov
std
xchg
cmp
cmpl
add
dec
xor
xchg
or
arpl
int3
push
jne
push
xor
xor
mov
add
mov
and
addl
inc
mov
jp
lcall
dec
mov
inc
mov
mov
inc
cmp
pop
jge
arpl
mov
jbe
push
adc
mov
mov
insb
outsb
mov
cmpl
jg
cmp
jg
adc
je
xchg
and
dec
pop
xchg
and
mov
js
hlt
movsb
pop
fsts
in
cmpsl
adc
outsl
ljmp
leave
inc
jno
imul
dec
xor
enter
add
xchg
imul
push
mov
popf
jno
adc
outsl
movsb
mov
and
lods
popf
stos
mov
sahf
pop
and
pop
adc
jne
pop
shlb
mov
testb
mov
das
pushf
int3
mov
xchg
mov
dec
mov
push
jg
test
sub
test
mov
pop
mov
aas
icebp
je
and
inc
mov
xchg
jo
ret
xchg
jo
mov
cmpsl
lea
cli
addl
and
dec
ljmp
fwait
pop
and
or
ret
aam
ret
fimuls
push
sbb
movsb
sahf
insb
push
rorb
jae
lds
mov
add
movsb
push
sub
inc
mov
cmp
sti
daa
into
nop
push
mov
or
cmc
push
arpl
leave
imul
mov
jnp
push
div
fdivl
shl
jno
pop
mov
js
mov
xor
pop
adc
jne
fimuls
mov
push
jp
jmp
push
bound
mov
adc
jle
ss
inc
jns
call
ja
dec
mov
ret
xor
add
mov
push
pop
or
push
repnz
in
lds
int3
lcall
or
add
repz
les
mov
or
add
pop
int
hlt
imul
test
or
ja
jns
pop
scas
dec
dec
inc
mov
stos
mov
enter
loop
adc
mov
push
push
mov
push
insl
lcall
dec
push
mov
test
push
imul
pop
cs
mov
and
mov
cmpsl
pop
add
and
sub
xchg
and
dec
rclb
popa
aad
out
sub
in
aam
xchg
popf
adc
sbb
jno
adc
inc
xchg
mov
insb
int
scas
push
dec
add
mov
test
xor
dec
lret
fldt
mov
push
shll
scas
stos
push
jp
outsb
inc
mov
pop
jp
cwtl
test
lahf
push
lock
sar
popf
outsl
sbb
xlat
xchg
in
add
or
adcb
sub
mov
jl
sti
lds
add
and
sbb
jle
xor
xor
dec
sub
shlb
push
imul
out
push
inc
arpl
push
mov
aad
mov
jmp
jl
push
mov
outsb
das
loopne
xchg
sbb
mov
ja
std
xchg
mov
jnp
lret
mov
push
dec
ret
mov
scas
sub
mov
xchg
scas
vpmaddwd
pop
push
fwait
jge
loop
outsb
inc
mov
mov
fisubrl
xchg
mov
pop
or
and
or
bound
cmp
mov
data16
ret
sar
sbb
in
ss
push
out
sbb
out
js
lods
xchg
xlat
cmp
add
jns
dec
jb
shl
inc
jle
pop
xor
cltd
add
out
in
repz
mov
mov
mov
nop
ret
adc
sub
inc
inc
cmp
sub
pop
popa
sti
mov
fpatan
sub
pop
xchg
xchg
or
mov
lea
sub
xlat
popf
inc
jmp
mov
movb
mov
sbb
rorl
and
shr
xchg
push
sub
aaa
pusha
push
test
cmpsl
loop
xchg
outsb
movsl
xor
sbb
imul
shll
xor
popl
xor
ljmp
mov
adc
vpaddsw
mov
dec
rcll
out
sbb
outsb
or
sahf
sti
dec
aas
popf
lcall
mov
jl
jle
cmp
mov
movsl
lods
mov
cmp
lock
jl
pusha
icebp
fwait
lahf
ss
inc
loope
mov
mov
fldt
cmpl
iret
insb
push
mov
aam
lods
cs
in
rol
imul
sub
dec
jmp
clc
cwtl
shr
dec
incb
js
ja
sbb
jg
and
sub
jae
repnz
lret
pop
dec
lea
mov
imulb
mov
mov
sbb
mov
push
cmc
push
nop
or
cmpsb
test
sbb
fbld
sbb
pop
mov
dec
fcos
int3
xor
xchg
andl
jge
lret
cs
cmpsb
xor
in
adc
repz
clc
mov
ljmp
popa
push
sbb
scas
inc
adc
dec
cmp
push
dec
jl
sbb
movsb
inc
jge
push
push
dec
popf
xchg
pop
test
lds
mov
sahf
lret
fwait
jmp
or
dec
xchg
sarl
cmc
daa
stc
sbbb
fsubr
into
mov
pop
sti
dec
loop
fnstcw
sbb
ror
mov
rcrb
sub
test
lret
add
adcl
xlat
popa
hlt
xlat
xchg
mov
add
sbb
movsb
jecxz
sti
mov
xorl
bnd
imul
jnp
mov
jae
sub
clc
lock
mov
jnp
or
enter
mov
out
mov
push
xchg
arpl
inc
dec
jge
lret
jmp
mov
jmp
sub
mov
adc
jae
lcall
repnz
rcrl
lahf
or
cmpsl
lret
popa
push
mov
insl
les
jo
mov
xor
sbb
and
xchg
xchg
repz
xor
dec
jae
dec
xchg
or
ljmp
inc
sub
das
aad
out
movsl
std
ret
sbb
push
pop
dec
sub
enter
inc
cltd
cmp
sahf
inc
dec
push
sarb
out
sub
cmpsl
jmp
adc
push
sub
mov
cmp
ret
pop
adc
add
add
addr16
cmp
fwait
into
inc
push
xor
in
push
mov
xor
add
and
pop
xchg
push
dec
aaa
lret
call
fmuls
push
adc
jb
ss
jns
and
mov
inc
inc
imul
test
pop
dec
mov
push
std
les
sbbb
cmp
lods
mov
add
enter
adc
in
adc
call
add
and
xchg
pop
arpl
inc
sahf
inc
ss
cmp
shll
enter
bound
mov
sub
aad
adc
pop
sbb
or
dec
add
fpatan
lret
adc
nop
das
xor
adc
and
cmp
test
jp
jecxz
mov
mov
add
pop
subl
movsl
xor
pop
cmpsb
ret
or
movsb
sub
and
les
add
jl
xchg
or
xchg
mov
inc
popa
in
add
xor
das
decl
std
lahf
fxch
cmp
cmp
inc
dec
xchg
in
inc
rcrl
test
iret
and
fiadds
imul
dec
ljmp
mov
lret
call
inc
dec
lods
xor
sub
add
scas
mov
pusha
out
out
sub
into
inc
scas
and
mov
stos
add
xor
sub
ret
push
mov
push
or
ds
hlt
push
mov
cmp
mov
sbb
mov
xlat
out
fwait
sbb
mov
and
jbe
xor
fs
leave
lea
mov
ret
or
sub
jecxz
insl
adc
outsb
pop
jb
adc
push
pop
stc
cmp
push
mov
mov
data16
pop
and
add
lea
cmp
scas
and
mov
lret
xor
mov
push
cmpsl
jne
pop
sub
add
and
jp
ds
push
out
aad
pop
negl
fstpl
cmp
cmp
ljmp
adc
xorl
cmp
or
dec
pop
mov
and
or
jb
dec
mov
insl
and
stos
jge
sbb
xchg
std
dec
test
xchg
dec
std
push
xchg
add
stos
gs
jbe
cmp
jns
sub
push
and
inc
inc
outsb
das
xchg
and
xor
push
cli
rcrl
xor
scas
push
stc
mov
push
ljmp
push
pop
in
jmp
shll
jae
ss
or
adc
lds
repz
mov
pop
adcl
int
push
push
or
or
jge
sbb
jecxz
pushf
jg
mov
xchg
or
push
xor
inc
sub
fnstcw
mov
and
cmp
xor
inc
fcmovbe
or
add
xor
mov
popf
aad
repz
loope
xlat
pop
inc
icebp
daa
in
jle
insb
add
cmc
mov
xchg
sbb
xor
jo
aaa
repnz
cmpl
testb
mov
mov
std
aas
inc
rclb
xlat
movlps
out
int
test
out
test
push
jb
daa
sub
pop
jg
ja
jnp
push
int3
dec
ds
jb
loope
sahf
loop
sub
adc
dec
sub
test
pop
scas
pop
jae
push
mov
inc
rcrb
out
nop
arpl
mov
stc
rcll
mov
jb
jg
mov
or
xchg
xor
aam
div
sar
mov
insl
mov
nop
scas
cmpsl
or
or
inc
pop
mov
add
cs
cmpsl
pop
jmp
adcl
iret
in
cmp
xchg
insl
add
xchg
or
adc
pop
repz
sbb
or
xor
pop
jge
adc
mov
jle
lret
push
bound
jae
add
lock
orb
sbb
in
aas
adcl
not
fsts
adc
inc
js
ljmp
shll
cmp
add
sahf
jne
mov
and
cmp
popl
imull
push
inc
or
push
push
push
xlat
add
push
rorb
shlb
mov
xor
iret
movsl
movsb
dec
dec
jmp
and
es
xchg
or
js
push
xor
into
inc
rorb
jge
out
daa
xor
dec
stc
stc
addl
loop
mov
push
shlb
data16
sbb
dec
xchg
sub
jmp
xchg
mov
lods
lcall
dec
mov
mov
test
sti
inc
cmpsb
dec
cmp
dec
pop
bound
lods
int
pop
aas
mov
pop
int3
dec
pop
and
add
cmc
jle
pop
inc
jno
repnz
inc
nop
sbb
inc
mov
mov
and
xor
aam
push
cmp
mov
loope
pop
jecxz
les
lcall
push
mov
pop
imul
adc
lahf
test
mov
mov
jo
mov
rol
ret
and
outsb
in
fidivrs
iret
sahf
out
mov
lods
mov
pushf
jns
lret
adc
iret
mov
shll
pop
fxch
pop
movsb
arpl
mov
repnz
jge
sahf
push
or
xor
xchg
and
movsl
cld
xchg
fs
dec
push
jmp
pop
adc
mov
push
sbb
insb
pop
movsb
in
inc
push
xchg
hlt
call
sbb
adc
lret
test
sbb
repnz
or
cwtl
add
or
adc
lea
inc
jp
add
mov
add
jmp
ret
inc
enter
movsb
shll
add
add
pop
jbe
rcrl
fst
inc
cli
test
or
push
add
fisttps
xlat
ds
fldenv
pop
incl
rcrb
xor
lods
cltd
les
movsb
sub
test
inc
cmp
jle
pop
sbb
fcomps
cmpsl
cli
arpl
push
or
add
insb
mul
sub
outsb
ss
icebp
repz
cmp
in
push
adc
mov
sub
add
push
push
jp
mov
fisubrs
std
aad
scas
add
sub
or
in
mov
cli
ret
or
dec
xor
insb
jno
jmp
adc
lods
mov
mov
pop
lds
out
ret
fs
sbb
loopne
lcall
xchg
push
sbb
divb
cld
int3
test
scas
pop
fsts
je
shr
cmp
sub
out
notl
sahf
int3
ljmp
imul
add
jp
dec
mov
cmpsb
xchg
jl
pop
aas
imul
cmp
and
imul
adc
mov
cmpsl
and
xor
inc
mov
xor
jnp
outsl
sub
push
sbb
fld
test
push
ja
bound
xor
xchg
insb
dec
sti
das
jb
dec
repnz
xchg
pop
mov
jo
jp
cmc
sub
mov
mov
iret
test
pop
sbb
sarb
jmp
jecxz
xchg
xlat
cs
lds
push
insl
icebp
loop
std
push
xchg
mov
fcoml
aas
test
xchg
insb
divl
lcall
jns
scas
daa
jb
pop
mov
add
jmp
or
add
mov
push
cmp
notb
cmpb
addb
gs
sub
cmc
pop
inc
ror
cmp
not
iret
push
sub
out
add
push
data16
inc
jns
popa
cmp
test
popf
inc
mov
inc
cmpsb
adc
fcmovb
scas
pop
push
ret
dec
sub
stos
lcall
push
pushf
in
or
pusha
xor
lret
inc
adc
jg
aam
fists
mov
es
jb
ja
sbb
imul
xchg
aam
pop
movsb
jnp
inc
jns
out
or
sub
rolb
pop
xor
cmp
jmp
insb
xchg
pop
leave
xchg
mov
add
arpl
cmp
sub
pop
std
cmp
sub
popf
xchg
mov
pop
clc
sub
outsb
xchg
cmp
mov
xor
loop
push
or
imul
xor
and
mov
mov
mov
push
cwtl
outsb
fmulp
push
inc
pop
push
push
cs
out
lar
or
sub
ret
jmp
stos
jbe
enter
mov
fstl
pusha
jl
in
xor
pop
popf
add
test
or
ss
and
lods
inc
cmp
jmp
inc
cltd
notb
jp
dec
fstl
pop
pusha
rolb
inc
int3
or
mov
jecxz
sbb
cli
jns
sub
loop
jmp
xor
lock
ret
scas
push
cmpsl
gs
bound
popa
xor
mov
inc
orb
or
mov
mov
jecxz
adc
xor
and
gs
rcl
mov
pop
jbe
pop
sahf
xchg
jge
mov
rolb
or
ja
das
stos
stos
jmp
je
and
dec
jg
incb
fs
push
test
or
out
mov
test
inc
pop
cli
ljmp
or
bound
and
movsb
into
cmp
add
addr16
sti
ja
scas
test
xchg
mov
shlb
dec
sub
rclb
sub
ret
ja
jmp
inc
pushf
jo
or
and
mov
sti
xor
sub
push
sub
inc
arpl
popa
sbb
dec
repnz
cmp
mov
test
sti
and
ljmp
xlat
jmp
sbb
ffreep
mov
cmp
shlb
sbb
dec
cmpsb
adc
push
xchg
cmp
bound
add
xor
in
movsb
xor
int3
or
inc
mov
ja
out
sbb
leave
call
sub
inc
ja
pop
icebp
clc
or
add
add
ljmp
repz
add
bound
scas
divb
lock
pop
adc
lods
or
jo
inc
int
sub
xor
fcomi
lods
loope
inc
adc
out
out
movsl
shl
shl
cmc
movsl
mov
jl
call
ficoml
mov
and
cmp
push
pop
jmp
div
mov
idiv
jb
sbb
popf
adc
adc
jae
rorl
rclb
sahf
push
sub
push
into
lods
mov
mov
pop
data16
dec
push
scas
out
cmovo
add
dec
pop
xor
lret
mov
jg
loopne
pop
push
test
data16
add
jecxz
xchg
shll
ss
xlat
mov
scas
adc
jg
xchg
cmp
sar
in
sub
inc
aaa
cmpsl
stc
adc
lret
loopne
fucomp
push
mov
out
and
es
outsb
repnz
push
sbb
fs
pop
lret
or
fs
cmp
inc
clc
stos
dec
rol
xor
out
xor
mov
daa
outsl
ds
cmp
cmp
sub
and
cmp
sti
add
insl
fistl
push
ret
enter
cld
cmpsb
mov
push
test
dec
jp
adc
pop
lods
sub
mov
addr16
push
sub
cltd
fisubs
lcall
and
cwtl
mov
cld
inc
mov
into
mov
imul
andb
mov
rcl
xchg
push
daa
idivb
mov
and
dec
loopne
imul
mov
sbb
xor
or
push
fmul
mov
inc
cmp
gs
adc
outsl
aaa
mov
fistpll
imull
pop
cmpsb
sub
or
sbbb
and
mov
shlb
inc
cmp
add
movb
cmp
repz
arpl
popf
mov
jg
pop
inc
sub
sub
mov
lods
movsb
pushw
jbe
and
sbb
mov
and
inc
cmpsb
sarl
add
xor
test
sub
or
test
adc
js
stos
lret
sahf
cs
add
dec
std
stos
lret
out
filds
xor
jp
adc
jl
push
ror
sub
mov
cwtl
call
repz
daa
addr16
pop
mov
sti
scas
push
loope
mov
mov
push
inc
pusha
adcb
pop
loopne
sbb
out
test
push
sbb
push
dec
sub
pop
jb
sbb
hlt
push
jnp
sbb
cmp
pop
loope
cmp
jbe
lcall
cld
inc
pushf
sub
fistpl
inc
sti
aad
jnp
sbb
xor
pop
mov
lock
aas
lds
mov
sbb
jp
sbb
loope
cmp
jp
frstor
pop
pop
into
fucom
in
pop
mov
ficoml
mov
mov
sbb
fisttps
mov
sub
scas
push
mov
mov
add
cmp
mov
or
rcrl
jmp
mov
in
pop
mov
push
rcrl
cmp
mov
jns
daa
arpl
jmp
prefetcht2
xchg
mov
mov
lret
je
adc
insl
mov
test
and
push
xchg
dec
mov
dec
in
mov
ret
xor
cmp
lods
push
popf
fbstp
in
xchg
mov
mov
sub
ds
orl
xlat
test
dec
sbb
fidivrs
sub
and
in
xchg
ljmp
dec
xor
pushf
fcmovne
fistl
push
ss
mov
pop
and
mov
sti
loopne
ss
rcrl
ljmp
adcl
jns
pop
xor
inc
nop
test
cmp
std
mov
movsl
test
es
or
fmul
hlt
cmp
xor
aas
and
xchg
lock
mov
rolb
inc
xchg
movsb
pop
inc
xor
cli
push
cmp
lods
je
xlat
pop
pop
popa
and
sbb
xchg
cs
jnp
test
mov
push
adc
sub
jo
adc
ljmp
adc
xorb
cs
dec
sarb
dec
loop
xchg
mov
test
fcomps
push
jl
outsl
xchg
add
push
pop
jmp
xlat
scas
inc
stos
stos
out
inc
dec
stos
popf
outsl
movsl
popf
aam
mov
sahf
pop
rcrb
mov
pop
mov
cmpsl
lcall
mul
mov
popa
iret
push
test
jbe
jno
loope
fsts
pusha
add
in
dec
add
cmp
outsl
cmpsl
test
pop
push
loop
xchg
pop
cmp
inc
add
subl
enter
mov
add
leave
mov
sub
or
sti
mov
bound
or
fdivrp
jne
jmp
pushf
cmp
cld
cmp
stos
fcomp
mov
jb
mov
insl
xor
lahf
mov
mov
sub
add
push
jle
sbb
sti
das
mov
sub
sbb
adcb
add
nop
sub
int
mov
out
or
add
push
outsl
pop
in
pop
xchg
out
movsl
hlt
nop
mov
das
dec
add
aad
arpl
push
repz
data16
rcrb
fnsave
adc
icebp
out
loopne
in
cmc
cmpsb
push
push
sbb
pop
mov
xor
stc
mov
jne
mov
mov
push
mov
jl
fdivs
shll
ljmp
rcll
xchg
gs
les
test
push
or
iret
push
inc
sub
mov
or
aas
mov
mov
into
or
fwait
pushf
mov
push
dec
iret
test
jno
push
shll
fldt
mov
lods
fwait
push
mov
filds
pop
pop
xor
outsl
in
sti
sti
fsubs
mov
adc
add
int3
addr16
stc
add
cmp
dec
lret
jne
in
inc
int3
mov
out
hlt
mov
leave
aaa
and
imul
pop
push
jns
cltd
fbld
bound
inc
adc
push
sub
jbe
cmp
xchg
mov
mov
push
mul
mov
and
push
addr16
addr16
je
stc
std
hlt
call
jge
into
test
mov
jg
cmc
ljmp
loop
adc
jg
ret
cmpsl
mov
arpl
cld
in
add
jg
inc
jnp
insl
js
insl
lods
dec
adc
push
dec
aaa
push
je
mov
push
testb
pop
or
loopne
pop
lea
xchg
pop
lret
es
xor
jns
sti
test
mov
jg
sub
mov
jns
shl
pop
icebp
add
test
xor
xchg
or
out
mov
adc
inc
lret
data16
adc
mov
lea
and
rclb
sub
or
int
imul
adc
dec
imul
and
ss
mov
sbb
jmp
nop
xchg
ret
test
lret
jle
sub
lods
mov
imul
add
ljmp
fbld
clc
test
cmp
inc
jns
in
je
or
movsl
jo
rol
sbb
mov
and
imulb
jb
dec
stos
xor
pop
in
test
cmpsb
jle
imul
test
mov
ljmp
lahf
mov
sub
cli
fldcw
sub
sbb
mov
push
stc
es
cmp
movsl
fisubs
dec
loope
xchg
test
leave
arpl
add
cmp
pushf
xor
mov
sbb
sti
and
push
dec
movsb
js
adc
inc
fwait
jmp
pushf
mov
ljmp
mov
lods
add
imul
dec
ss
ffree
jns
movsb
cli
mov
and
int3
addb
add
mov
je
mov
push
jg
xchg
insl
testl
cltd
sub
insl
dec
outsb
jmp
xchg
cmc
loop
test
rolb
stos
imul
jb
dec
mov
xor
cmp
mov
inc
mov
cwtl
xchg
sti
pop
aaa
adcl
and
mov
addr16
and
dec
iret
insl
mov
call
loopne
int3
mov
ja
daa
xorl
cmp
sar
adc
adc
fdivs
test
xchg
jns
sub
dec
pusha
pop
xchg
add
xor
or
pop
dec
popf
lock
and
sbb
scas
stos
mov
xchg
cmpsb
sub
xchg
add
jb
rorb
pop
lea
fisubrs
inc
test
shll
leave
add
int
shlb
pop
lods
mov
adc
mov
aaa
clc
mov
pop
inc
movsl
cmp
mov
mov
lods
cs
push
movsl
ljmp
mov
sti
mov
lcall
hlt
int
lcall
mov
inc
dec
data16
sahf
inc
insl
fildl
cmp
push
ss
adc
jle
sub
mov
andb
mov
mov
jle
dec
or
icebp
sub
adc
mov
pop
mov
mov
leave
in
jp
and
fs
subb
cmp
dec
push
pop
xor
cmpsb
aad
mov
adc
sahf
enter
in
rolb
add
adc
push
in
jb
or
subb
sbb
sub
lahf
jle
mov
cltd
xor
mov
and
mov
es
stos
xchg
cld
lret
push
clc
add
inc
mov
cs
or
mov
pushf
add
hlt
scas
sarb
stc
sub
jp
xor
dec
adc
les
cmp
or
mov
lea
data16
cmpsb
orb
lret
jp
inc
inc
push
pop
xchg
jecxz
jno
pop
push
dec
sbb
adc
mov
mov
sub
imul
loopne
stos
popf
jecxz,pt
fstl
sbb
insl
sub
icebp
cmp
push
mov
adc
cmpb
outsl
cmc
es
clc
test
shll
push
aaa
cmc
sbb
shll
sahf
nop
pop
mov
mov
mov
jmp
in
sbb
lock
aas
cmpsb
in
sbb
mov
int3
mov
push
mov
ffreep
pop
mov
scas
mov
ret
lods
xor
movsl
mull
push
ds
mov
jecxz
mov
xor
in
cltd
adc
cmp
inc
mov
cmpsl
std
xor
mov
mov
jno
and
test
push
pop
add
pop
sub
aam
sarb
into
mov
ja
sub
xor
cmpsl
xchg
js
mov
add
push
xchg
pop
negl
ljmp
jbe
repz
jle
add
sub
pusha
mov
push
cmp
mov
das
imulb
call
ja
std
incb
lea
jns
iret
adc
adc
adc
std
stos
jmp
cmp
scas
movhps
adc
mov
loope
out
inc
stc
push
mov
loope
fistpl
jge
jmp
adc
pop
and
push
es
xor
pop
jo
add
mov
outsb
or
or
out
bound
es
ret
push
xor
shrl
ret
enter
insb
fcomps
or
ret
out
test
dec
pop
dec
and
jns
jnp
push
xchg
jnp
xchg
shrb
add
jbe
mov
mov
gs
in
jns
adc
xor
les
xor
pop
mov
mov
and
jb
mov
adc
and
jno
call
push
out
sub
insl
xchg
adc
xchg
cmp
mov
dec
outsl
leave
pop
outsl
pushf
mov
push
enter
mov
dec
gs
push
subb
add
in
scas
into
aad
test
and
sub
cmp
clc
cmc
jb
mov
mov
js
leave
jns
add
pop
outsb
xchg
into
daa
push
mov
mov
pop
jg
cmp
mov
sti
sbb
shlb
cmp
leave
sbb
js
jae
lret
mov
cmpsl
dec
cld
movsl
mov
cwtl
bound
mov
or
cmpsl
pop
pusha
xor
mov
in
and
shlb
xchg
cmpl
jecxz
pop
int
pop
sbb
adc
jecxz
lcall
out
outsl
gs
iret
into
addr16
adc
movsb
xlat
lock
out
popf
inc
jns
into
pop
and
cltd
adc
cmp
xor
push
insl
shrb
inc
test
cmp
rcr
ljmp
adc
iret
push
push
dec
aam
fdivrp
mov
lret
jnp
sub
ffreep
les
add
add
inc
ret
mov
adc
jle
jne
adc
dec
mov
mov
and
clc
pushf
sti
ret
xor
sub
mov
jae
inc
pop
cmp
test
mov
sbb
cmp
inc
in
mov
mov
fistl
lcall
push
fmull
adc
xor
xchg
je
push
add
xorl
push
mov
loope
testb
ja
addr16
push
repz
mov
xchg
mov
sub
mov
pop
cmp
ficomps
push
xor
sbb
jne
dec
notl
jl
jecxz
cltd
movsl
mov
jg
fcomps
mov
sbb
jae
andl
add
das
xchg
aad
and
mov
nop
push
xchg
bsr
lea
fmulp
jnp
lret
rsqrtps
mov
daa
addr16
outsb
pop
in
sbb
inc
hlt
dec
popa
jnp
pop
out
outsl
ds
mov
iret
fdivl
cmp
mov
fiaddl
movsl
adc
mov
xchg
lods
lcall
movsb
das
dec
xchg
adc
popl
inc
sbbb
shlb
mov
xchg
rcll
fwait
add
or
test
xor
xor
xor
xor
xor
xchg
sub
pop
adc
cld
rorl
sbb
cli
xchg
or
in
scas
sub
out
adc
fcomp
ret
mov
mov
jp
xor
mov
push
mov
es
xchg
mov
push
dec
dec
scas
repnz
dec
je
mov
les
mov
mov
or
hlt
cmp
fdivr
xor
insl
inc
adc
bnd
and
sahf
cmpsl
inc
push
adc
push
dec
inc
cs
push
jae
lret
enter
ds
add
sub
lret
lock
dec
jbe
push
sub
insl
mov
gs
xor
pop
push
mov
cltd
movsl
pop
xor
gs
mov
xchg
add
frstor
push
gs
cmc
lret
pop
mov
outsl
pop
xorb
jne
sub
pop
push
add
add
imul
jb
xor
popa
inc
loopne
inc
das
cmpl
or
sbb
std
sub
add
leave
sahf
sti
xchg
pop
sub
add
movb
fadds
outsb
loop
cmc
mov
pop
xchg
pop
mov
imul
and
xlat
sub
jbe
jmp
inc
clc
ret
clc
push
imul
push
jbe
fbstp
and
push
mov
xchg
lahf
fmul
cmpsb
and
and
es
js
mov
outsb
inc
outsl
jg
stos
clc
std
mov
dec
cwtl
jmp
loope
xor
sbb
out
sub
sub
jno
pushl
xor
inc
je
stos
dec
and
push
lahf
jge
test
cmp
sub
pushf
popf
fmuls
adc
jle
std
cmc
or
xor
mov
mov
std
pop
dec
fmuls
push
aam
js
xchg
imul
mov
push
stos
popa
xor
loop
lea
stc
pop
sbb
jb,pt
int
push
mov
cmpsl
push
shr
outsl
push
mov
mov
inc
inc
pop
jg
lea
push
test
jl
push
jno
mov
inc
xor
mov
pushl
ja
xchg
lds
imul
popa
dec
enter
clc
sbb
adc
out
mov
fmull
and
gs
sbb
jb
cmpl
mov
cwtl
or
inc
jp
dec
mov
pop
mov
shlb
inc
add
sti
cmp
aad
mov
mov
outsl
xchg
or
rcl
push
jg
adc
cltd
sbb
incl
and
aas
pop
jnp
scas
pop
jne
cli
add
cmp
ljmp
ret
push
mov
popf
dec
in
inc
nop
push
push
lret
jno
sub
cmp
jecxz
push
nop
lahf
es
insl
cmp
sbb
push
cmp
mov
or
sar
mov
jns
jp
loope
inc
push
jecxz
xchg
ja
cmp
mov
xlat
dec
xor
jne
or
fwait
insl
lret
inc
push
add
dec
mov
in
mov
lea
sub
jl
pop
dec
pop
dec
mov
outsb
lret
inc
ja
push
fisttpll
pop
adc
add
jne
mov
xor
addr16
out
cmp
das
pop
sub
push
test
pop
mov
test
xchg
push
or
mov
or
inc
popf
fistl
jno
test
in
fwait
je
imul
inc
inc
push
xor
cwtl
in
or
vpcmpeqw
mov
push
mov
xor
xor
sbb
call
add
push
push
add
inc
xor
cmp
ss
sbb
xor
sub
ljmp
push
jo
adc
mov
cmp
xor
addr16
add
add
pop
xor
outsb
mov
repnz
pop
xor
or
pop
cld
xor
jecxz
std
mov
and
xchg
adc
pop
push
xchg
adc
inc
jmp
lods
les
jge
mov
pop
cld
test
or
scas
lods
push
xchg
or
mov
popa
and
cmc
mov
mov
mov
xlat
icebp
jns
and
lcall
clc
pushf
pop
imul
out
pop
cmp
sti
mov
shlb
adc
scas
jae
sbb
dec
stos
mov
mov
int
mov
aaa
mov
mov
dec
mov
scas
lock
jge
or
fdiv
ljmp
mov
and
incl
jne
sub
jge
sub
divb
out
mov
mov
jae
sub
mov
or
sbb
adc
cmc
or
add
pop
lcall
xchg
mov
and
jbe
fsubp
mov
pop
in
cmp
or
push
mov
rcrl
fcmovnu
testl
js
ret
shrb
and
out
sbbl
fdivr
jno
out
inc
sub
sub
jbe
test
add
pop
mov
mov
cmp
gs
xchg
cmp
jmp
arpl
inc
out
xlat
popf
in
adc
jp
ljmp
pop
add
sub
jae
lock
enter
pushf
jno
aas
enter
xor
mov
lods
sub
pop
mov
sbb
xchg
jb
in
aam
pushf
jae
jmp
out
std
add
idivb
dec
out
ss
out
movsl
ds
arpl
popa
cmp
pushf
fisttpll
in
mov
test
cmp
mov
pushf
pop
mov
idivb
add
movsb
ret
xor
adc
xchg
add
mov
jle
cli
jnp
xor
jne
gs
in
adc
jbe
push
add
hlt
arpl
adc
cmp
test
popf
cwtl
das
pop
push
aad
or
test
adc
in
lea
les
popa
inc
in
js
cmp
aas
lret
aas
xchg
cwtl
xorb
scas
jnp
call
sbb
push
inc
fsubrs
mov
test
mov
shll
stc
mov
dec
cli
cmp
xor
frstor
in
movsl
popa
dec
mov
sbb
xchg
or
mov
adc
and
popa
sub
adc
mov
int
pop
je
das
fwait
pop
scas
adc
repnz
pop
mov
sub
and
jge
xor
bound
frstor
mov
and
lcall
cli
daa
pop
xor
sub
jecxz
xor
mov
and
mov
mov
test
push
aas
mov
xchg
xlat
fsubr
and
cmp
aam
ja
mov
mov
out
test
xor
hlt
sbb
rcrb
cli
xchg
add
push
leave
dec
js
mov
dec
cmc
sub
push
lahf
cmp
jg
jg
hlt
movb
push
hlt
lea
lea
jno
sub
inc
ljmp
pusha
jbe
cs
sbb
adc
div
jmp
dec
cmc
stc
pop
scas
pop
or
orb
outsb
pop
rorl
cwtl
add
inc
addr16
jae
jge
aaa
or
incb
xor
shll
dec
xor
cmp
pop
inc
fistpll
insl
fisttpll
dec
dec
jae
and
jns
icebp
and
sbb
jmp
sbb
lods
ds
cmp
fwait
ja
and
pop
pop
popf
jge
push
les
lods
cs
mov
pop
xchg
cli
fadds
fmuls
jle
mov
in
xchg
stos
mov
repnz
ljmp
test
dec
xchg
sbb
mov
repz
mov
daa
adc
test
sahf
inc
jae
xchg
pushf
xchg
push
imul
cs
mov
pop
call
mov
or
jecxz,pn
push
mov
mov
imull
pop
repnz
jno
arpl
or
mov
sahf
stos
pop
mov
cmc
dec
push
and
andl
insb
xchg
mov
pop
jo
fistps
and
gs
push
push
stos
inc
rcrb
out
or
mov
adc
loope
enter
int3
std
das
jp
fs
lret
pop
dec
xor
test
xor
cltd
push
imul
sbb
sbb
or
into
loope
dec
cmp
stos
xchg
jmp
rorl
lods
iret
loope
or
push
and
repz
rolb
lds
popl
cltd
dec
clc
mov
xchg
jle
xchg
cltd
or
jmp
add
sbb
or
test
leave
or
sbb
test
js
jge
repnz
aam
pop
inc
push
push
cmp
lds
adc
sbb
dec
mov
lcall
dec
inc
push
cltd
inc
cmp
pop
mov
scas
lahf
or
push
xor
sub
sub
loope
adc
cwtl
enterw
mov
mov
add
mov
test
repz
scas
sub
gs
xchg
pop
sub
negl
subb
scas
xor
rcll
movsl
arpl
fimull
add
dec
lcall
in
fucom
scas
adc
movsl
jecxz
or
and
fidivs
cltd
testb
xlat
sub
jo
push
jne
in
out
xchg
lods
pushf
fwait
icebp
xchg
aaa
cld
fisttps
repz
dec
and
adc
movsl
mov
cli
insb
test
dec
sub
jo
jmp
and
stc
sub
stos
dec
in
add
xor
sub
sarb
aas
sbb
push
dec
add
gs
mov
dec
in
mov
mov
xlat
sbb
addr16
xchg
repz
mov
adc
cmp
pusha
and
lahf
sbb
lret
mov
push
inc
leave
sbb
adc
cmpsl
test
addr16
addb
das
mov
inc
mov
test
or
insb
mov
adc
or
js
xor
insl
into
das
jmp
test
fcomps
ljmp
scas
dec
push
add
push
adc
cld
in
mov
int
sbb
fwait
push
loop
or
scas
jle
outsb
cmp
rcr
rcll
pop
sbb
jae
sub
jae
mov
pop
jle
jae
push
outsl
out
xchg
add
bound
lcall
in
in
mov
test
or
cmp
cltd
cs
iret
sub
notb
cmp
xlat
sub
dec
push
jg
inc
xchg
sbb
ja
or
xchg
imul
mov
and
mov
add
std
mov
mov
mov
ljmp
sbbl
inc
dec
les
lret
xor
push
sbbl
mov
add
lahf
push
push
cld
loopne
inc
add
mov
lds
pushf
rcll
lcall
dec
lret
neg
rorb
je
movsl
mov
cld
stos
jmp
dec
imul
xchg
das
scas
xchg
cltd
push
xchg
sbb
sub
cmp
pushf
ret
sub
cs
jecxz
out
pop
test
cmp
dec
and
orb
pop
cmp
add
push
std
test
lahf
xor
bound
ljmp
lea
dec
mov
or
testb
scas
ret
insl
mov
push
in
icebp
mov
scas
xchg
arpl
cld
cmp
std
xchg
mov
ljmp
sbbl
jae
inc
mov
mov
and
push
push
ljmp
cmp
sahf
fcmovb
sbb
out
pop
fs
out
movsl
sbb
insl
mov
outsb
and
fiaddl
cmp
aas
ret
mov
mov
or
es
inc
adc
sti
cld
outsb
into
insb
mov
adc
cs
test
add
out
pop
xchg
add
stc
movsl
or
cmp
pushf
mov
xor
js
add
or
fwait
setl
jl
lock
clc
cltd
out
adc
enter
sub
pop
pop
mov
les
or
lods
xchg
add
inc
addb
cltd
mov
adc
test
inc
repnz
lds
enter
push
jno
mov
push
icebp
and
sub
stos
into
xchg
cld
jno
sahf
rorb
sub
fsubrs
mov
add
sub
leave
in
mov
adc
inc
mov
movsl
es
mov
test
mov
lahf
sub
jno
outsb
pushf
sbb
fisubrs
repnz
lret
push
mov
je
and
cmc
movsl
sarb
pop
push
in
sbb
sbbl
ss
shll
out
sub
pop
adc
loope
push
sub
dec
dec
add
imul
or
xlat
mov
cltd
loope
add
test
dec
inc
jo
sbb
into
bound
or
cld
pop
fidivrl
inc
scas
addr16
push
jg
clc
cmc
lods
or
inc
addr16
mov
lods
xor
dec
push
xchg
xchg
lcall
lcall
sbb
shll
leave
mov
pop
outsb
dec
dec
out
aam
xchg
pop
aad
sbb
je
lds
xchg
in
adc
or
icebp
adc
pop
inc
xchg
jae
cltd
icebp
sub
jb
lods
pop
xchg
xlat
cmp
lcall
fistl
add
arpl
fidivrl
push
adc
mov
sar
jnp
xchg
fistps
pushf
mov
pop
int
lods
subl
cltd
jmp
dec
out
or
push
pop
jbe
mov
push
jp
fdivp
adc
shrl
lods
xor
sub
test
jne
mov
popa
bound
mov
les
outsb
outsb
fldl
pop
adc
loope
xor
sbb
ja
adc
xor
div
sub
je
mulb
cs
jp
lock
clc
enter
loopne
cmpb
dec
bound
pop
push
add
movsw
pop
mov
jns
jmp
xor
pop
out
push
inc
aad
xchg
lcall
sbb
and
mov
mov
jmp
ss
adcl
inc
test
mov
or
lods
pop
insl
daa
or
add
jae
mov
les
adc
dec
clc
fidivrl
dec
inc
cmp
test
hlt
jg
ss
xchg
fiadds
or
fs
imul
pusha
xor
cs
inc
lds
cmp
les
movsb
das
into
jle
bound
popa
dec
sbb
xlat
xor
dec
call
or
test
mov
push
inc
inc
add
sub
lret
mov
imul
xor
sbb
xor
fwait
jno
adc
xor
dec
xchg
sbb
loop
stos
dec
xor
das
push
je
cmp
mov
sub
adc
lret
dec
fdiv
stos
in
popf
xchg
mov
les
cmp
sub
and
shr
mov
cmp
add
out
push
or
inc
push
cmp
stos
aad
and
xor
dec
test
mov
push
data16
xchg
int
mov
jne
sahf
std
lods
add
scas
adc
xchg
jecxz
les
iret
out
bound
mov
rcrb
lret
stos
push
mov
pushf
jl
ds
repnz
and
mov
roll
testl
popf
add
xchg
mov
cmp
add
inc
and
lcall
push
xor
mov
into
and
and
ss
jbe
out
mov
aaa
and
sub
xor
xchg
and
pop
rclb
aad
rolb
adc
xchg
push
mov
jle
mov
lds
jo
push
cmp
sbb
sbb
mov
cwtl
cmp
cmc
rcl
rcll
add
out
cmpsb
add
xorl
div
popa
loop
push
fwait
stos
test
push
insl
cwtl
cs
xlat
xor
xchg
mov
ss
pop
pusha
inc
dec
dec
repz
out
cwtl
nop
pop
pop
popf
cmpl
iret
ret
mov
mov
fnsave
push
popa
pop
mov
pop
xchg
outsb
in
push
sarl
mov
shll
mov
sbb
pop
pop
pop
push
xchg
mov
jmp
mov
jg
dec
sarb
bound
dec
pop
in
ret
dec
js
sti
movsb
xor
mov
mov
sbb
push
push
icebp
movl
stc
enter
cli
leave
jns
addr16
fildll
add
cmp
add
xchg
ret
je
and
shrb
stos
pop
repnz
push
sub
dec
cltd
stos
sub
imul
adcl
loop
inc
cmc
pop
mov
in
and
jmp
pop
add
push
sbb
dec
fcmovne
push
aad
dec
repnz
sub
cmc
sub
repz
xor
fs
and
push
inc
or
xchg
rcrb
fldenv
scas
fdivl
int3
and
mov
and
cld
push
push
cmp
sar
xor
jb
add
jmp
mov
adc
out
lcall
jg
mov
and
fcomps
mov
ja
repnz
xlat
xchg
sub
pop
adc
repnz
test
data16
int3
xor
mov
cli
push
mov
outsl
mov
mov
dec
jl
push
sbb
inc
out
cs
repz
jne
pop
pop
arpl
leave
and
mov
lcall
ret
jns
pop
aam
xor
popa
ss
xchg
jmp
and
stos
jecxz
mov
mov
jo
push
pop
in
outsb
add
or
jecxz
or
xor
cs
sbb
inc
push
aaa
mov
aaa
add
sub
ds
gs
js
in
dec
fxtract
xchg
mov
sbb
loope
jmp
push
hlt
rep
aam
mov
mov
jnp
sub
dec
adc
ret
imul
mov
jne
cwtl
jp
mov
rorl
sub
push
out
xchg
adc
push
lcall
adc
fwait
or
mov
push
das
mov
xor
fwait
loop
cltd
jl
sbb
pop
xorb
bound
jbe
stos
test
push
ret
push
xchg
push
xor
adc
sub
es
push
push
sub
mov
fcoms
pop
sbb
mov
pusha
cmp
mov
shrl
pop
fucom
add
fsubl
sahf
lahf
and
out
adc
mov
inc
je
stos
jo
pushf
in
jb
call
xchg
fdivs
jbe
mov
mov
push
cmpsb
cmp
scas
cli
add
movsb
sbb
insb
xor
fcoms
pop
xchg
mov
sub
or
cmp
mov
xor
out
mov
jno
movsl
jl
adc
ljmp
rorl
into
mov
out
or
imul
int
fs
push
push
pusha
cwtl
mov
or
xchg
sahf
mov
lret
ljmp
push
mov
mov
imul
and
lret
xlat
mov
jns
xor
repz
xorl
lock
xchg
test
aaa
sub
popa
inc
sbb
adc
push
stos
clc
jbe
shrl
pop
xchg
enter
insb
push
mov
sub
jge
bound
ljmp
mov
bound
pop
jg
iret
repz
stc
cmp
xchg
xor
adc
sbb
cmp
push
icebp
stc
out
inc
dec
xchg
aas
or
js
pushl
sub
xchg
mov
aam
or
or
jmp
data16
mov
cmc
in
sub
arpl
pop
add
jle
push
mov
mov
stc
jecxz
lahf
dec
js
loope
xorb
and
aam
outsb
insb
and
push
xlat
mov
pop
cmpsb
ds
mov
dec
adc
out
cwtl
cmp
inc
cmp
jo
mov
lods
mov
stos
popa
pusha
inc
mull
xor
out
xchg
ss
push
scas
lcall
repnz
mov
aam
pop
aas
andl
pop
mov
nop
out
repz
mov
cwtl
mov
fs
dec
sub
push
pop
and
xchg
fsubl
std
dec
cmpsb
jbe
mov
int3
dec
lcall
cld
jp
lods
loope
inc
dec
cwtl
jnp
and
push
call
xor
jp
mov
jno
fmull
in
lret
pop
test
jge
lahf
push
mov
popa
mov
shl
cwtl
ja
insl
and
imul
fs
xchg
sbbb
cwtl
xchg
mov
push
clc
lret
xor
iret
jnp
or
mov
lods
movb
call
xchg
dec
xor
push
sarb
adc
shl
xchg
mov
outsb
inc
xor
mov
dec
pop
lods
jecxz
cmp
cwtl
int
repz
ss
jb
clc
ja
sbb
cwtl
xchg
imul
dec
ret
or
clc
sub
sti
and
fsubr
into
dec
mov
push
mov
xchg
mov
add
pop
mov
loopne
and
xor
roll
js
mov
and
lea
rcll
mov
sbb
sbb
test
rcl
jne
cmc
mov
or
daa
repz
pop
popf
lods
aad
idivb
mov
loope
sub
xchg
sti
adc
pop
imul
jo
scas
inc
cs
lods
sub
xchg
bound
xchg
repnz
nop
imul
jecxz
sbb
push
sub
cmpl
lock
iret
mov
pushf
inc
lcall
cld
xlat
mov
repz
inc
ficoms
gs
add
xchg
mov
add
in
or
fldt
pusha
sbb
adc
mov
mov
movsl
lret
inc
loopne
leave
pop
add
inc
and
popf
shl
and
icebp
cmp
ljmp
test
xchg
sti
pop
cmp
push
push
out
cmp
orb
frstor
mov
sbbl
mov
pushf
xchg
pop
sub
sbb
cmc
or
pop
push
enter
push
jae
cmpsl
mov
pop
icebp
dec
sub
insl
inc
int
dec
dec
aad
call
imulb
repz
sbb
das
mov
push
push
loope
adc
and
addr16
popa
insl
jp
sbbl
adc
push
adc
int3
jmp
incb
shll
negb
lcall
sub
fs
sbb
ss
fiadds
push
and
pop
xlat
push
scas
dec
mov
shr
cmp
pop
pop
cmp
mov
lahf
adcb
xor
and
iret
subb
xor
cmp
or
test
jp
mov
mov
scas
pop
popa
cmpsl
jecxz
out
popa
push
lahf
jae
cld
xchg
test
bound
insl
pop
fstps
and
jmp
cmpsb
into
sub
mov
xor
pop
xor
sbb
cs
jo
jns
loop
add
dec
clc
push
xchg
mov
inc
push
imull
pushf
cli
loopne
into
or
shr
jne
push
or
sub
pop
dec
add
mov
jp
into
xchg
je
int
sub
mov
repz
decl
aas
mov
sub
fcoml
les
jecxz
dec
pop
cld
add
lds
xor
roll
arpl
ds
jle
fs
fmull
aas
test
or
iret
movq
fisubl
cmp
pop
pop
call
xor
mov
sub
pop
sub
mov
incb
xor
jle
pushf
rorl
into
popa
and
cmp
negb
xchg
xor
mov
xchg
lods
and
je
adc
test
cmp
imul
fdivl
sbbb
add
fstl
mov
mov
xchg
es
imul
ds
or
test
lret
movsb
pop
mov
sbb
in
rolb
scas
jno
aam
inc
inc
lock
mov
daa
jmp
mul
cmp
in
pop
push
popf
cmp
xchg
or
xor
bound
scas
out
rolb
and
or
mov
rcll
int3
pusha
sbb
push
rcr
xchg
testl
pop
mov
aas
inc
pop
ret
in
sub
movb
rcl
and
cltd
int
jg
xor
roll
filds
arpl
jmp
nop
in
or
test
adc
pop
movsb
sbb
adc
mov
inc
mov
sbb
xchg
lret
data16
pop
pusha
mov
into
mov
popf
in
fwait
movsw
pop
movsl
xorl
jge
je
aaa
rcrl
out
ret
outsl
ss
dec
xlat
test
ficoml
pop
push
das
sarb
adc
adc
dec
scas
xchg
mov
inc
dec
ss
int
mov
je
insl
dec
push
test
mov
ja
fst
xor
nop
xchg
insl
pop
repz
insl
aas
fsincos
push
cwtl
out
int
push
int
jg
dec
mov
dec
les
fcoml
cmp
rcr
mov
in
sti
inc
aad
push
pop
lcall
mov
sub
int3
push
test
test
daa
lahf
icebp
sub
mov
icebp
push
inc
out
xchg
dec
lock
lret
into
call
jns
lea
sub
dec
cmpsl
and
jbe
mov
clc
adc
int
and
loopne
pop
in
xor
addr16
add
push
lret
lods
in
add
fistpll
std
sbb
sbb
call
or
fldl
or
imul
rorl
cmp
push
insb
jp
sbb
jmp
pop
add
incb
stc
jmp
mov
int3
fdivs
cmp
or
pop
daa
xor
mov
shrb
lock
rorl
mov
into
inc
movsl
adc
inc
ss
sub
jge
mov
aaa
sub
lahf
repz
mov
xchg
add
cltd
add
loopne
mov
aas
xchg
mov
xchg
pop
lods
sarb
in
add
push
jmp
sti
mov
xor
sub
pop
sbb
sub
aas
mul
sbb
add
loop
enter
dec
sbbl
std
call
jbe
push
ja
jp
mov
es
out
pop
cld
add
idivl
shll
out
xchg
xchg
jne
aas
adc
and
pop
xor
or
pop
dec
hlt
and
mov
scas
mov
cltd
mov
or
out
lea
xchg
mov
and
in
jmp
es
adc
inc
xchg
rolb
and
mov
adc
mov
int3
push
or
ds
and
or
sub
mov
imul
mov
adc
push
fistps
fisubrs
xchg
dec
adc
adc
add
pusha
or
std
test
adc
dec
or
in
ret
popa
fbld
dec
outsl
out
andl
test
int3
movsb
enter
pusha
in
in
mov
mov
sub
dec
or
js
mov
dec
xor
and
pop
jl
outsl
test
jg
push
test
rol
jne
stos
mov
jnp
or
out
adc
dec
scas
enter
lret
test
xor
lret
adc
inc
lcall
sbb
popa
push
ja
jo
sub
fidivl
mov
inc
mov
aad
pop
jnp
push
fwait
jne
loope
popf
je
adc
jp
or
push
jge
add
inc
mov
push
mov
pusha
dec
movsb
les
sti
enter
loopne
mov
sbb
mov
shll
push
aad
icebp
jmp
adc
dec
cmp
repnz
mov
sbb
rorb
jne
sub
lods
mov
push
repnz
adc
jecxz
pop
jge
ror
les
jo
loopne
outsb
inc
mov
pop
jo
mov
je
repnz
cltd
insl
hlt
cmc
fidivrs
pop
xor
sub
rolb
popf
lock
cmpsb
xor
aas
sub
cmpsb
stos
ret
push
push
push
outsl
push
mov
push
xchg
cltd
mov
jl
cmpsb
psllq
scas
adc
in
pusha
mov
push
fs
mov
punpckhwd
ja
fs
ret
push
xchg
inc
lea
sbb
jnp
pushl
out
fbld
push
sub
push
mov
outsb
xor
sub
cmc
adc
fiaddl
mov
shl
addb
xorb
mov
js
call
notl
lods
in
ret
jmp
mov
es
jb
sarl
loop
and
inc
jnp
pushf
daa
push
and
divb
sbb
pop
pop
movsb
das
pop
cmpsb
xor
xor
xchg
jno
outsb
sub
sbb
negb
pop
mov
add
sti
adc
in
jmp
rcrl
xchg
mov
push
lret
nop
loop
mov
test
jmp
nop
sbb
mov
adcb
fdivs
xchg
outsl
inc
test
loop
je
daa
and
mov
pop
cmp
cwtl
or
sub
cmp
test
sbb
ret
fnstcw
das
push
repnz
roll
push
jle
or
leave
push
sbb
lds
fnsave
xchg
jmp
add
mov
jmp
push
adc
mov
mov
jae
pop
mov
cmp
add
addr16
fwait
and
xchg
subb
fstpt
push
js
into
jo
fistpl
mov
repz
fisttpl
ficomps
inc
cld
mov
add
adc
jmp
not
adc
dec
jl
out
pop
push
test
icebp
lock
lods
adc
cmp
mov
lret
xchg
pop
lock
cli
int
inc
lret
std
xor
incb
or
movb
pop
and
imul
mov
add
mov
daa
xor
test
jns
rcrb
fs
mov
in
rclb
add
jle
jmp
sahf
pop
sbb
xor
pop
pop
fiaddl
sub
mull
ds
xlat
ss
sbb
add
xchg
push
dec
ja
lods
inc
adc
jae
jl
dec
sub
jae
push
sub
cmp
cs
in
hlt
push
jmp
bound
jge
into
hlt
pop
sahf
or
and
enter
pop
cmp
inc
pop
mov
sub
inc
xchg
xor
andl
cmp
repz
mov
xchg
xchg
cmp
pop
pop
lahf
add
and
cs
lds
sbb
sub
xor
mov
fdiv
fdiv
mov
jnp
lea
mov
cwtl
adc
out
cli
lods
xor
push
dec
cmp
ret
imul
scas
cmpsl
call
fsubrl
fdivrs
out
insb
xor
push
dec
mov
sbb
pop
pop
xlat
jmp
cmpsl
in
sub
test
mov
mov
loope
cli
stc
cmpsb
shll
jbe
pop
push
orl
lods
jecxz
ffree
dec
imul
mov
and
push
loop
mov
mov
aad
pushf
push
pop
xor
es
cmp
jp
nop
dec
insb
cwtl
mov
orl
jle
aaa
push
sub
jle
sbb
pop
mov
cmp
rcll
out
test
cmpsl
xor
lock
adc
pop
mov
sbb
aad
xor
jno
adc
and
push
sarb
dec
dec
lcall
or
orb
dec
xchg
insl
sub
xchg
stos
lea
filds
or
popl
and
jle
aad
mov
dec
loope
addr16
add
enter
sbb
jne
hlt
mov
stos
or
pusha
test
dec
jns
sbb
pushf
dec
dec
lret
sbb
jae
mov
test
dec
jnp,pn
inc
mov
adc
imul
mov
in
lahf
adc
inc
mov
inc
jo
pop
ja
test
movsb
mov
stos
fistl
mov
add
movsb
and
sub
cld
or
mov
sub
stos
fmuls
mov
stos
xchg
ds
cmp
and
adcl
jae
xchg
fcmovu
adc
sbb
mov
aad
mov
insb
mov
and
and
mov
adc
inc
das
icebp
imul
es
mov
mov
pop
jne
fs
out
mov
fcoms
pop
sub
add
xchg
jecxz
hlt
cmpb
jbe
mov
gs
dec
test
pop
xchg
clc
out
fsts
mov
cwtl
or
xor
sarb
cltd
mov
inc
outsl
pop
xor
jns
mov
pop
jg
lcall
push
dec
test
jle
roll
insl
loopne
xor
inc
add
cmp
shlb
mov
or
mov
addb
outsl
xor
in
mov
cmp
sub
mov
jmp
mov
movsb
or
ja
or
mov
out
nop
and
pusha
xor
dec
mov
cli
into
jo
inc
clc
cwtl
data16
lods
cmpsl
mov
stos
jmp
addl
xchg
inc
nop
mov
imul
enter
loopne
and
add
inc
insb
dec
mov
leave
jo
mov
nop
ret
add
mov
jmp
lcall
enter
jbe
aam
negl
add
mov
call
push
nop
insb
cs
sub
call
popf
ja
pop
and
out
jmp
sbb
cwtl
mov
xor
xlat
js
cmpb
sbb
lret
lea
adc
and
out
jp
cmc
cmpsb
icebp
gs
jecxz
cmp
or
inc
sbb
add
add
into
pop
aad
jmp
pop
gs
fs
out
imul
fnstcw
in
adc
cs
pop
call
mov
jecxz
std
jmp
lcall
mov
push
push
xchg
mov
inc
aas
jbe
push
fcmovnu
icebp
add
adc
ds
aam
cmp
push
jecxz
insl
sbb
mov
mov
mov
pop
into
and
pop
je
pop
pop
sub
cmp
dec
mov
icebp
cmp
jns
ds
fiadds
push
aaa
cmp
stos
inc
add
mov
mov
out
std
or
pop
xor
ds
mov
in
adc
js
dec
mov
call
bswap
push
jecxz
mov
adc
mov
xor
fwait
dec
xor
enter
add
mov
lock
mov
or
in
add
enter
xchg
jae
fmuls
pop
push
sahf
lahf
fwait
mov
jp
mov
jecxz
xor
pop
paddd
imul
dec
leave
xchg
jp
inc
mov
lods
mov
jno
xchg
dec
dec
mov
push
in
pop
jnp
rclb
lahf
nop
push
lret
mov
inc
mov
jp
jnp
xchg
ret
mov
je
pop
push
mov
xchg
xchg
cli
lcall
xor
call
jo
mov
lea
pop
repnz
and
out
dec
inc
lcall
push
test
and
push
pop
cmp
sbb
cs
pop
fstl
loopne
xchg
ret
xor
dec
leave
dec
je
enter
add
add
scas
call
enter
addr16
sbb
sub
test
popf
pop
dec
movsl
jg
int
pop
insl
loop
mov
lods
jbe
insb
fdivs
xchg
dec
stos
pop
dec
rcrb
out
sub
ror
pop
nop
mov
and
roll
jle
lods
mov
xlat
push
push
and
mov
icebp
decl
cld
xchg
fldt
dec
sub
das
testb
sub
scas
addr16
out
mov
roll
es
fstl
in
jno
imul
int3
leave
and
cs
xchg
mov
mov
cmp
or
fwait
enter
imul
mov
outsb
fwait
mov
clc
pop
sti
sbb
arpl
daa
inc
and
xlat
gs
out
xchg
cmp
or
aas
je
andl
notb
ss
mov
imul
mov
mov
push
mov
jl,pn
and
cmpsl
bswap
test
into
jbe
jno
adc
xchg
fcomps
push
mov
pusha
sbbl
pop
lcall
add
xchg
sub
cmc
rorl
mov
add
fistps
notl
fdiv
add
rorl
fsts
mov
mov
cmpb
add
mov
mov
daa
or
jae
scas
and
test
xchg
gs
mov
push
pop
sbb
hlt
adc
cmp
push
push
and
gs
ja
and
pop
dec
cld
std
adcl
push
in
movsl
push
xor
dec
stos
jns
shrl
fs
in
or
mov
add
jmp
andb
push
and
arpl
mov
rorl
stos
inc
dec
js
pop
xor
adc
lock
xor
push
in
mov
addl
and
and
cmp
iret
out
lret
xor
int3
aam
mov
es
dec
bound
dec
mov
cmp
xchg
push
data16
inc
aad
test
jb
jle
mov
push
mov
das
jb
cltd
imul
mov
xchg
fnstsw
fsubp
out
bound
cmp
stc
jle
mov
mov
cwtl
adc
inc
mov
cli
jecxz,pt
dec
add
push
sahf
outsb
and
fildl
repnz
xchg
cmp
lods
cltd
imul
aam
fsubs
out
adc
cld
or
arpl
sbb
test
jns
mov
lahf
fadds
fidivrl
push
test
xor
xor
mov
mov
scas
mov
mov
xor
aas
inc
inc
insb
adc
dec
jae
jl
push
add
leave
fldcw
dec
sbb
add
xor
jl
sbb
movsl
jae
xchg
push
pop
lods
movsl
push
pop
cli
cmpsl
das
sub
mov
cmpsb
incl
jecxz
out
call
jmp
or
fistps
xor
nop
test
mov
ds
mov
jmp
ret
shll
les
cmp
xchg
mov
cwtl
loop
imul
stos
cmpsb
pushf
push
dec
pop
adc
imull
push
rep
xchg
mov
scas
lret
mov
pop
push
aas
enter
loope
or
aad
lea
pusha
push
adc
lea
dec
loopne
loop
adc
es
or
pusha
neg
arpl
sub
adc
jmp
pop
and
arpl
out
imul
inc
outsb
jmp
xchg
push
xchg
xor
xchg
xor
das
sbb
xchg
arpl
add
pop
scas
or
mov
lea
jns
xlat
popf
or
jbe
insl
xor
iret
and
push
mov
jp
lea
dec
and
shlb
add
mov
inc
xchg
mov
cli
dec
sti
stos
clc
xchg
push
ja
mov
ljmp
shll
jge
sbb
jge
nop
xor
xchg
into
popf
jmp
int3
jns
fdiv
pop
fcoms
or
and
jmp
xchg
push
clc
daa
sub
and
pop
loop
aas
outsl
cmpsl
shll
xchg
rcrl
dec
push
and
xor
mov
pop
ret
in
mov
and
or
outsb
dec
bound
jns
mov
jae
pop
adc
into
in
jl
lret
out
insb
or
jg
push
rcll
test
push
imul
lods
pop
dec
pop
xchg
fcmovnu
or
pop
dec
out
dec
popw
nop
add
movsl
adc
add
xlat
loopne
cmp
inc
in
jbe
push
repnz
stc
push
sub
adc
fistl
mov
xchg
mov
sbb
adc
pop
inc
sbb
cs
and
testl
mov
icebp
ds
fdivl
or
adc
loopne
xlat
ljmp
jnp
cmp
dec
fstpt
ljmp
lret
movsl
inc
xor
rolb
sub
xchg
es
movl
loope
scas
sbb
lcall
lods
lods
add
push
xor
cmp
push
out
mov
inc
aaa
sbb
ret
adc
ss
aas
and
scas
stos
cwtl
mov
mov
sbb
add
orl
pop
lcall
cmp
int
shrl
mov
mov
shrl
test
orl
xor
jg
fmuls
add
fwait
stos
inc
cmp
mov
xorb
outsb
fwait
xchg
dec
cmp
mov
addr16
dec
push
outsb
fisttpl
xor
sbb
jge
sbb
jle
mov
mov
fld
add
dec
jmp
pop
lods
das
repz
loop
push
scas
loopne
jl
push
push
mov
shrb
sbb
fsubrs
movb
lds
pop
xchg
orl
push
mov
mov
aaa
iret
push
bound
push
mov
xchg
push
cwtl
pop
aad
int3
ret
sbb
adc
xor
xor
test
out
mov
pushf
dec
xchg
addl
push
sbb
jge
push
push
call
shrl
imul
mov
scas
mov
rol
inc
adc
rclb
push
subb
xchg
pop
jmp
stc
and
andb
adc
out
outsb
fdivs
cmpsl
loope
and
in
lahf
xchg
imul
mov
push
inc
mov
mov
in
cmpsl
imul
sub
stos
sub
jnp
xor
xchg
pop
dec
test
xchg
loop
adc
cli
jg
ja
mov
rcrl
je
fwait
mov
stos
inc
push
push
enter
in
outsb
addb
sub
shll
in
sahf
mov
neg
int
fnstcw
add
and
xor
in
jge
push
jb
push
test
sub
shll
dec
sub
sbb
xchg
mov
and
mov
jp
sbb
jecxz
stos
and
cwtl
out
xor
in
xchg
dec
xlat
dec
int3
mov
pop
or
in
sub
lea
insl
mov
inc
mov
in
subl
mov
add
addr16
loop
divb
insb
insl
dec
lahf
pop
xor
scas
jb
jmp
aam
jl
cmp
loopne
and
mov
insb
sbb
fdivl
sub
in
test
dec
arpl
stc
push
dec
add
out
adc
sbb
gs
sbb
clc
xchg
fsubr
xor
das
stos
hlt
repnz
insl
fst
inc
mov
fbstp
sub
bound
bnd
xor
sub
fdivl
jb
cmp
in
and
aad
shlb
mov
jge
dec
push
mov
xchg
push
push
insl
mov
sar
push
repnz
testb
jnp
sub
sti
xlat
aam
jo
repnz
dec
cli
lcall
and
mov
cld
sti
int
xchg
jge
lods
adc
and
adc
aas
xchg
test
clc
insb
fistpll
sbb
push
push
adc
into
xchg
inc
out
sub
outsb
into
jecxz
jle
leave
xor
sub
test
and
inc
stos
hlt
pop
push
in
in
cmp
cmpsl
out
sbb
jae
mov
pop
add
or
pushl
lcall
mov
add
add
pop
xorb
push
mov
inc
fldcw
mov
xchg
cmovle
push
stos
mov
adc
sbb
stos
popf
rorb
dec
xchg
lods
pop
jbe
pop
repnz
and
mov
in
idivl
push
and
aad
adc
jecxz
lods
and
lds
pop
in
mov
mov
into
orb
hlt
decb
and
push
cmovg
mov
dec
pop
sarl
decb
jmp
or
xchg
and
mov
mov
imul
dec
mov
ljmp
sub
jmp
push
jmp
lods
jmp
jecxz
std
lock
adc
or
xchg
cmp
push
mov
fists
push
dec
shlb
pop
xchg
lsl
jecxz
cmp
add
enter
jno
test
xor
outsb
cltd
mov
adc
add
sbbb
and
or
push
lahf
call
jle
fidivs
jne
scas
mov
jge
cmpsl
cmp
pop
loope
dec
jl
xor
icebp
sti
sbbl
mov
sub
and
fwait
xchg
arpl
add
or
push
push
mov
push
push
push
repz
pop
dec
lahf
aas
inc
jb
pop
outsb
fsubp
mov
lcall
mov
inc
arpl
stc
mov
scas
pop
xchg
sub
repz
movsl
or
mov
out
mov
fs
sbb
xchg
add
stc
hlt
in
cmpsb
and
mov
pop
aas
sarl
imul
and
outsl
xlat
nop
xor
lods
stos
dec
lahf
add
fwait
mov
imul
mov
jae
imul
clc
imul
cmpxchg
cmpsl
xchg
enter
lret
and
add
jns
fcoml
add
push
mov
adc
or
bound
dec
rorb
scas
mov
test
test
mov
mov
jge
dec
stc
bound
inc
cmp
mov
loope
cmp
dec
sbb
das
mov
jns
loopne
inc
sub
mov
fmull
inc
popf
ds
mov
inc
cmp
xor
push
xor
inc
dec
mov
sahf
mov
sti
mov
jno
lcall
pusha
test
lock
nop
test
cld
into
mov
cmpsb
addb
iret
ret
lea
sub
or
packuswb
pusha
add
aaa
loope
nop
or
sbb
sbb
lret
sub
dec
sti
pop
out
and
leave
test
mov
mov
mov
push
ds
popf
pop
add
jge
xchg
jmp
rorb
push
dec
cltd
xor
push
pop
hlt
jp
fcom
dec
mov
xchg
movsb
pop
ficoml
std
xor
imul
jle
bswap
and
fldt
addr16
xor
cmp
sbb
pop
jb
loopne
or
sahf
xor
xchg
out
fwait
cmp
iret
popf
lret
sub
stos
loop
icebp
pop
xchg
pop
in
inc
ds
inc
xchg
cmpb
and
adc
pop
jl,pn
jne
repz
dec
inc
flds
icebp
out
jo
std
fisubs
jmp
insl
fsubl
pop
dec
sbb
pop
cltd
vmovdqa
cmp
xchg
mov
insl
mov
xchg
popa
loope
add
cmpsl
lret
popa
mov
lods
fisubs
and
sbb
inc
in
jecxz
sbb
lods
bound
push
les
mov
sbb
mov
loopne
fwait
push
rorl
push
xchg
sbb
scas
lret
int3
jns
inc
loope
fdivrs
inc
or
cmp
dec
mov
stos
pop
push
inc
and
inc
sbb
stos
lods
jmp
mov
push
jbe
mov
lea
xchg
push
adcl
imul
mov
xchg
add
cwtl
out
ret
dec
cs
in
dec
imul
xor
ss
aad
push
popa
xchg
or
jns,pt
fmull
sbb
inc
rcl
divb
shl
adc
outsb
lds
jae
cmp
jnp
sub
mov
outsl
std
in
pop
lret
inc
in
xor
mov
enter
cmc
mov
push
inc
daa
divb
jno
mov
sub
repnz
rorl
xor
in
nop
push
pop
push
cwtd
xchg
mov
vpsubd
das
push
push
sbb
or
call
test
sahf
cmp
pop
je
xor
push
cmp
shll
sub
gs
in
xchg
loop
push
sbb
lahf
cltd
loope
push
or
movsl
jecxz
pop
pop
bound
insb
pop
mov
mov
add
inc
inc
imul
xchg
xchg
cmp
lahf
mov
mov
xchg
xor
sbb
sub
add
sbb
les
ja
xor
pop
movsb
push
inc
dec
cmp
dec
lods
stos
imul
test
lods
and
lods
xor
pop
lret
fisttpl
movsl
ds
popa
insl
jmp
xor
iret
out
mov
xchg
je
fmull
sub
mov
dec
jns
push
nop
xor
and
push
push
js
into
rcl
pop
inc
les
ret
mov
enter
in
mov
hlt
test
or
aas
clc
rolb
jae
outsl
sbb
mov
call
mov
and
and
mov
sbbl
cmpl
pop
cld
lcall
daa
and
jl
repnz
repnz
out
add
mov
push
xchg
insl
pop
or
cmpsl
cs
out
and
push
out
jb
jg
push
push
gs
jle
jno
aad
jb
sub
cld
rorw
sub
repnz
nop
mov
out
lods
xor
lret
shr
push
jle
push
repnz
loope
jne
shlb
mov
adc
rolb
leave
ret
data16
imul
pusha
ds
and
nop
dec
inc
mov
mov
sub
inc
jnp
adc
inc
dec
movb
ljmp
inc
and
js
fisttpll
lret
inc
mov
jg
adc
pop
cmp
cwtl
sub
mov
in
sub
xchg
fisubrs
div
ja
cmp
movl
mov
repz
fld
xchg
pop
lcall
repz
leave
mov
int
lret
addr16
test
push
pop
push
lret
movsl
cld
push
stc
jne
nop
add
out
pushl
lds
push
or
inc
xlat
add
repz
or
data16
xchg
cmc
adc
push
cmc
inc
in
test
mov
fcmovnbe
jecxz
mov
pop
jp
call
in
mov
movsb
adc
adc
clc
rolb
dec
scas
enter
cmp
sub
jne
stc
rorb
pop
insb
repnz
mov
and
adc
aad
cmp
out
xchg
mov
in
pop
dec
adc
or
cld
lods
cli
xchg
sbb
jo
push
mov
xlat
xchg
lret
fucom
shrb
in
fsubrs
add
aas
daa
rclb
nop
jle
shrb
inc
add
mov
lods
push
mov
ss
cwtl
lret
sub
in
out
stos
mul
stc
into
out
push
dec
add
cmpsl
xor
push
xor
sbb
mov
lret
push
lret
sub
add
jns
ret
cmp
jl
andl
js
lods
sub
les
pop
cltd
sarl
adc
imull
bound
popa
cs
mov
and
sub
inc
jle
push
bound
adc
mov
mov
or
test
mov
xor
call
f2xm1
xor
dec
pop
push
ficoml
enter
iret
stc
pop
stc
push
ss
scas
push
push
fbstp
sbb
pop
push
add
bound
addr16
sbb
aaa
sbb
lret
adc
dec
adcl
inc
inc
lods
pop
ficoms
cmc
xor
mov
and
sub
push
dec
stos
sub
in
idivl
push
mov
lods
cmpsl
ja
mov
xchg
into
adc
sbb
push
adc
shll
mov
cmp
neg
mov
jmp
adc
int
fsubr
popa
out
add
mov
cmp
jg
test
push
or
pusha
addr16
jb
jo
xchg
lea
cltd
lcall
movsb
stos
clc
xor
leave
scas
inc
dec
push
sub
mov
lahf
xlat
inc
mov
rcll
gs
stc
cmp
push
add
hlt
xlat
insl
cmp
inc
addb
dec
fmul
lock
into
mov
mov
out
and
enter
jmp
ret
test
loope,pn
inc
gs
jg
movsl
and
pop
gs
mov
push
fwait
pushf
jmp
clc
in
int
xchg
testb
and
cmpsb
kaddb
mov
dec
and
mov
dec
stc
mov
scas
jns
pop
mov
test
mov
orl
mov
mov
or
xchg
push
jbe
and
fcmovnu
push
mov
test
lods
clc
cmp
pop
sti
jbe
push
sbb
hlt
cmpsb
pop
pop
jno
clc
mov
push
push
and
shlb
jl
mov
pop
jp
adc
imul
fldcw
aad
cld
jl
in
jne
push
pushf
or
and
inc
test
stc
mov
push
jns
mov
test
dec
das
out
jmp
test
jo
loop
inc
mov
test
sbb
movsl
fs
es
cs
aam
dec
pop
add
pop
lock
mov
fiadds
enter
mov
mov
stos
lods
dec
fiadds
je
dec
pop
js
cmp
daa
fnstenv
enter
push
mov
cld
xor
and
rcl
pop
mov
jnp
mov
mov
mov
jp
dec
jp
mov
or
push
sbb
mov
dec
mov
pushf
cmp
inc
filds
loope
fcmovnb
pop
mov
loope
pop
je
xor
addl
jmp
test
lcall
and
rcrl
mov
add
out
push
and
dec
cld
dec
jae
das
data16
fdivs
ret
inc
mov
lods
cmpsl
in
lds
cltd
push
out
mov
or
jmp
scas
xlat
std
xchg
test
cs
mov
enter
xor
lods
pusha
inc
sbb
mov
std
scas
inc
add
jmp
mov
fdivrs
dec
in
insl
push
cmc
insb
in
xlat
xor
dec
imul
orb
and
cmp
mov
mov
add
jno
cwtl
push
std
dec
inc
fadds
jp
xor
pop
rcr
das
imul
fwait
push
fcoml
lea
ds
sbb
mov
jp
out
arpl
rolb
hlt
or
cmp
adc
stc
andb
lods
das
add
inc
scas
popf
mov
fistl
out
pop
cmp
inc
dec
in
orb
jb
fcomi
pop
add
js
push
adc
xchg
xchg
xor
mov
fldcw
dec
outsb
sub
lcall
and
dec
inc
test
mov
fistpll
push
gs
push
jle
arpl
or
push
xchg
adc
int3
bound
pop
int3
fsubr
xor
mov
sub
xor
cltd
lods
fstpt
cmp
lock
sbb
rolb
add
jl
int3
lret
pop
or
inc
push
xor
mov
add
sahf
jmp
or
iret
mov
dec
or
sbb
mov
mov
dec
fisttpl
push
push
call
sub
adc
mov
and
cmp
lret
cmpsb
push
xor
aaa
fcomi
mov
jne
mov
xorb
fnstenv
aas
pop
dec
push
ret
mov
sub
dec
xor
or
sub
sbb
dec
lds
inc
call
sub
aad
push
popa
sub
outsb
sbb
rorl
mov
sbb
movsb
xchg
dec
inc
gs
dec
loope
popf
icebp
sub
insb
faddp
enter
sbbb
sbb
nop
pushf
xchg
sub
bts
jnp
test
add
and
js
xor
push
loope
cmpsb
pushf
lret
xor
cmp
mov
mov
in
and
sarb
lret
ss
mov
lock
cmpsb
fdivrl
push
sub
xchg
jmp
pop
xor
mov
shr
or
in
inc
es
out
stc
mov
inc
int
cmp
add
xor
clc
sub
fisttpll
push
push
and
xor
xchg
mov
sarl
mov
and
pop
mov
dec
scas
enter
dec
jge
mov
fs
jb
dec
mov
and
mov
outsb
pop
xor
pop
mov
stos
jnp
xchg
xlat
stos
jb
sbb
inc
shlb
adc
scas
imul
sahf
mov
out
imul
fadd
and
push
jne
pop
sub
aam
cltd
cmp
add
popa
jmp
lret
adc
mov
sbb
mov
push
xchg
dec
jge
inc
cltd
add
mov
add
insl
push
dec
idiv
divb
inc
nop
mov
mov
xchg
push
mov
std
mov
iret
into
popa
pop
aas
nop
stos
out
xchg
in
cmpsb
mov
or
jg
popa
pop
into
push
cmc
into
sti
xchg
rcrl
or
enter
test
inc
addb
call
fistps
out
xchg
icebp
sbbb
adcl
mov
xchg
and
shlb
or
iret
pop
xor
inc
loop
adc
ds
lcall
icebp
xchg
aad
lahf
adc
sbb
mov
jnp
adc
jle
out
dec
sti
xchg
rcrb
mov
std
mov
icebp
out
arpl
xchg
mov
xchg
sub
adc
dec
dec
xchg
adc
mov
aad
imul
daa
ret
jle
jae
cmp
std
bnd
push
pop
addl
sub
arpl
jb
cmp
jl
pushf
daa
std
dec
fildl
and
cmc
out
sarl
jecxz
je
shll
sub
mov
out
and
lret
jl
rorl
lret
movsl
sbb
lret
sahf
jmp
inc
stc
arpl
or
xchg
inc
mov
fidivs
es
imul
lods
sar
sub
scas
shll
cld
pop
fidivs
cmp
or
cld
lock
inc
sbb
cs
sarl
enter
mov
xchg
popf
push
mulb
sbb
rolb
dec
imul
mov
popf
popf
xor
mov
pop
dec
repnz
push
lods
cmp
lret
fdiv
add
push
dec
iret
in
push
sbb
lcall
sbb
roll
sub
jo
sub
imul
stos
inc
mov
sub
pop
in
movsl
popf
jge
jmp
sub
stc
fldcw
xchg
xchg
mov
push
mov
inc
xchg
dec
shll
scas
sarl
bts
lods
cmp
mov
push
cmc
fwait
popf
fildll
mov
pop
stc
pop
lret
cmp
ds
dec
mov
dec
int3
sub
sub
cltd
imul
adc
cmp
mov
cmp
fadd
fistpll
xchg
ret
xchg
push
mov
jno
call
sbb
or
lock
shrb
shll
and
int
popa
fistpll
bound
ret
addr16
push
and
push
popf
hlt
rolb
push
jp
pop
mov
sbb
loope
xor
jbe
stos
aas
jnp
xchg
loope
ficoml
adc
call
ljmp
andb
push
pop
dec
clc
mov
add
cs
push
dec
aas
xchg
ret
rcr
lcall
mov
dec
and
lret
iret
mov
adc
not
push
dec
sbb
sub
xchg
xchg
sbb
ret
add
push
pop
test
cmpsl
jae
xchg
out
mov
inc
dec
sahf
idivl
and
sub
pop
pop
shlb
sub
into
cmp
test
pop
fwait
imul
lods
and
pop
sbbl
mov
lret
cmp
lea
cs
xchg
pop
test
clc
mov
stos
add
mov
jne
lea
add
cmp
stos
iret
js
scas
push
pop
popa
cmp
add
rcrl
adc
mov
mov
add
stc
mov
gs
lods
sbb
imul
mov
ss
aas
adc
pop
and
cmp
jo
mov
cmp
fcomp
mul
mov
fisubrs
xor
iret
jp
cmp
fstps
stc
shll
and
and
fcoml
xchg
push
mov
repnz
pop
lret
jo
and
pop
fistl
xchg
inc
out
in
ss
clc
fimull
push
test
shll
push
jnp
fs
push
cmc
pop
out
sbb
fisubrl
jb
dec
dec
insl
hlt
sub
or
call
pop
ss
cs
aad
push
insl
jp
and
dec
fdivrl
aas
xchg
and
bnd
ud2
dec
inc
mov
jp
jl
mov
subl
mov
or
adc
dec
repz
ljmp
xlat
ret
dec
and
pop
stos
std
movsl
or
xchg
daa
sub
movsl
out
popf
fildll
pop
fisubrs
sub
rcll
das
and
shr
push
inc
into
jp
inc
ljmp
fwait
pop
sbb
shrl
pop
adc
call
xlat
inc
jbe
push
lods
push
jmp
cmp
cwtl
pop
pop
xchg
adc
dec
jae
sub
inc
das
mov
iret
push
add
popa
push
and
dec
testl
repnz
xchg
jmp
mov
mov
add
hlt
sub
jle
xor
aad
data16
mov
xchg
mov
mov
out
repnz
in
push
mov
push
add
mov
icebp
nop
push
or
mov
xlat
jnp
in
repnz
sub
cwtl
sub
mov
fistpll
fisubl
fucom
dec
jb
xor
jle
out
imul
fstpt
sub
xchg
cmpsl
add
fisubl
enter
bound
cmp
inc
pushf
xchg
aaa
xchg
jbe
cmp
mov
add
or
jp
sub
fdivs
or
rorl
leave
mov
shll
int3
mov
test
xorl
pop
insb
je
cmp
jae
cmpsl
insb
lock
clc
sub
dec
popf
scas
push
jl
sti
jnp
adcl
mov
add
jo
aam
es
adc
test
or
push
sbb
mov
ljmp
or
popf
loopne
ret
ja
or
stc
insb
cmp
xlat
dec
push
jns
mov
xchg
fwait
mov
jge
out
inc
mov
jp
cmp
rcl
push
in
popf
dec
arpl
in
pop
mov
mov
je
scas
cld
fmull
mov
imul
dec
mov
aas
cmp
ljmp
add
xchg
add
sti
or
xor
daa
jge
add
or
bound
cmc
fidivrl
les
mov
fildll
movsl
jbe
mov
loopne
faddl
scas
sub
scas
push
dec
test
pop
pop
mov
out
mov
clc
mov
sub
out
and
cmpl
jns
pop
sub
and
ja
lcall
pop
shlb
jmp
sti
fnstcw
mov
out
addr16
roll
cli
jns
outsl
in
js
mov
loope
jl
arpl
sbb
jmp
xchg
das
inc
add
movsl
pop
test
ss
gs
popa
push
cmp
xor
in
es
sbb
jno
test
pop
xor
adc
or
push
mov
sbb
jbe
push
out
push
xor
and
mov
mov
insl
sub
dec
mov
adc
sbb
push
in
inc
cmpsl
hlt
cwtl
mov
popa
adc
or
mov
pop
cmpsb
fnstsw
adc
xor
int3
fcomps
repnz
sbb
sarl
jmp
cmp
out
mov
cmp
jbe
ss
int
emms
nop
or
inc
or
pop
mov
dec
out
inc
add
icebp
mov
nop
call
insl
xchg
pop
jmp
jnp
jno
cmpsb
out
jge
mov
xor
jbe
inc
sbb
lret
and
dec
nop
scas
int
fsubr
lcall
loope
xor
test
pop
pop
mov
xchg
and
adc
push
outsb
sub
and
fcoms
lea
mov
or
and
sub
adc
sbb
and
jp
call
mov
cs
mov
notl
mov
aam
cmc
ja
int
cld
sub
inc
jns
cmp
fnstenv
and
and
icebp
push
xor
add
fidivs
xor
lret
mov
stos
ret
cmpsl
push
dec
aad
lcall
fidivrl
xor
adc
mov
add
xlat
adc
dec
imul
nop
test
lcall
and
in
cmp
js
push
push
xchg
jb
push
test
mov
add
repz
int3
pop
sbb
adc
dec
dec
imul
ret
mov
mov
cmp
pop
fstp
pusha
sbb
rcl
xlat
out
cmp
push
loop
inc
add
cmpl
repz
and
inc
popa
cmpsb
push
adc
int3
daa
mov
push
sbb
dec
xchg
sti
ds
xor
add
das
adc
dec
rorb
hlt
add
or
lahf
jmp
cltd
lods
iret
imul
lea
xchg
outsb
pusha
cli
clc
dec
repz
mov
mov
adc
cmp
out
loopne
mov
ja
sbb
stos
sbb
fdivrl
stos
lds
sub
fsubl
jmp
pop
outsb
aas
ljmp
icebp
pop
mov
cli
inc
and
dec
cmp
sub
fcoms
mov
outsl
out
push
popf
dec
pop
ljmp
cld
and
addr16
xchg
pop
daa
mov
fisubrl
icebp
aad
ds
lock
adc
sub
test
nop
lret
sahf
inc
subl
add
lret
test
pop
dec
push
adc
repz
cli
cmp
cmp
call
mov
mov
rcll
out
testb
inc
inc
cmp
je
mov
iret
push
lds
imul
andl
mov
sub
popa
outsl
test
mov
adc
std
call
iret
test
adc
mov
dec
jmp
and
sub
cwtl
in
mov
push
cli
push
dec
pop
xor
dec
fldl
pop
arpl
xchg
out
pop
adc
andb
push
cmpsb
ret
mov
jbe
mov
push
cmp
outsl
jge
pop
sbb
fsubl
xchg
aas
stc
pushl
mov
xchg
loopne
sub
push
cli
dec
ss
mov
push
rolb
or
testl
cmpsb
test
jno
popa
ret
divl
loop
sbbl
sarl
push
mov
les
ja
enter
or
xor
mov
fwait
arpl
or
pop
dec
shrb
shll
cmp
xchg
es
and
mov
sub
push
fiaddl
and
pushf
faddl
inc
cmpsb
insl
adc
in
push
jnp
cmc
lcall
or
into
inc
ret
add
and
or
push
adcb
out
popf
mov
movsb
sbb
into
out
fdiv
iret
pop
das
or
clc
push
xchg
lahf
hlt
jg
dec
inc
lret
jne
popa
fcmovnu
test
sahf
std
pop
aam
sbb
fstpl
clc
out
arpl
int
arpl
pop
mov
ret
hlt
mov
outsl
mov
pop
sbb
js
cs
or
aad
ffree
mov
jae
mov
inc
data16
dec
test
sbb
fisubrl
stos
jmp
mov
daa
mov
data16
push
fisttpl
add
outsb
cmpsl
lock
in
mov
cmp
dec
sbbb
int3
mov
and
inc
push
cmpl
nopl
xchg
dec
insl
nop
call
add
pushf
sbbl
push
xchg
jne
scas
mov
pop
or
daa
incb
dec
imul
mov
imul
mov
push
daa
fcoms
xor
jg
ficomps
insb
arpl
cmpsl
cmp
loopne
xchg
inc
test
mov
sbb
ficompl
movsl
stc
jb
imul
mov
push
into
mov
lret
mov
pop
inc
repnz
pop
pop
dec
aam
jl
xor
adc
inc
imul
push
into
sbb
or
sbb
ret
mov
testb
ss
mov
call
xchg
pop
es
fiaddl
jae
mov
and
jecxz
stos
pop
inc
inc
add
mov
pusha
ss
mov
in
mov
lods
xor
inc
push
dec
inc
or
std
adc
sbb
mov
cmpl
les
jp
scas
mov
mov
push
imul
aas
jle
or
sbb
test
mov
add
aad
mov
lcall
jle
sbb
or
jp
movsl
mov
push
das
int
xor
mov
lret
lret
fcmovu
pop
sbb
lods
inc
aam
xchg
jg
ss
inc
or
cmp
pop
fcompl
mov
lret
jne
mov
sbb
sub
and
sbbb
arpl
andl
movsl
and
bound
or
je
sbb
inc
mov
call
sti
mov
and
add
lret
repz
and
loope
enter
mov
addr16
sub
cmp
sarb
lret
jb
mov
sbb
aaa
and
dec
jns
cmp
cmp
mov
shl
push
popf
movsl
stc
or
mov
lahf
jbe
sbb
leave
push
ss
imul
into
sti
dec
out
sub
push
xor
insb
xchg
lahf
in
js
out
xor
les
push
dec
push
or
cmp
insb
mov
incb
or
arpl
cmp
js
jnp
and
sbb
add
cmpsb
xor
jecxz
jnp
cmp
mov
sub
loope
inc
lahf
outsl
cmp
daa
mov
mov
or
jbe
stc
ljmp
push
and
aam
leave
dec
inc
int
fst
sahf
dec
mov
dec
sub
jg
js
test
fmuls
and
sub
cs
dec
mov
or
sbb
mov
push
mov
add
xor
or
fnstenv
push
mov
jb
or
sbb
sbb
pop
je
in
das
icebp
adc
mov
cmpsl
or
pushf
mov
xor
stos
repnz
pusha
adc
mov
jmp
pop
test
test
adc
push
leave
adc
dec
jl
daa
mov
mov
sbb
or
test
sub
out
lea
ds
std
sub
mov
fstps
xchg
mov
in
ja
sub
add
push
addr16
adc
icebp
jae
xor
xlat
or
mov
jl
das
scas
arpl
xchg
outsb
mov
pop
mov
cmp
jmp
imul
cmp
in
sbb
sbb
mov
adc
ret
cmpsb
out
xchg
xchg
loopne
int3
in
mov
lds
pop
xor
mov
notb
repnz
lahf
jp
sbb
cmpsb
in
xchg
adc
mov
xchg
stc
sbb
roll
or
loopne
out
xchg
mov
scas
mov
loope
sbb
fistl
scas
repnz
nop
mov
and
mov
jmp
pop
sti
js
in
adc
in
jl
xchg
fidivrl
dec
sbb
ss
sub
cltd
ret
mov
mov
sbb
mov
or
sahf
add
daa
push
leave
adc
cmp
popf
sub
xchg
cltd
cmpsb
cmp
mov
sub
loop
fcoms
adc
sbb
aas
jnp
fs
int3
pushf
test
cmpl
lahf
sbb
lret
aas
pop
xchg
inc
xchg
mov
cmp
lahf
adc
add
enter
dec
aas
cmp
fwait
sub
dec
scas
rolb
adc
jne
sub
sbb
inc
and
outsl
cmp
fiaddl
loop
xor
dec
sub
dec
jnp
xchg
sbb
mov
ret
or
ds
nop
bound
mov
mov
pop
jae,pt
stos
js
mov
ficoml
cmp
jge
subb
or
dec
ss
ja
xor
std
mov
loopne
movsb
dec
jne
xchg
fistps
out
mov
lahf
add
push
push
xor
inc
aad
movsl
leave
adc
ds
add
inc
aas
sbb
push
aas
cmpsl
cli
rorl
popf
jo
and
scas
in
xchg
loopne
out
sub
xchg
stc
int
mov
jo
sub
out
or
out
mov
popf
adcl
flds
sbbb
popa
pushf
inc
in
sbb
and
sub
mov
mov
int
inc
jns
ss
push
xchg
jae
pushf
jge
cmp
fneni(8087
imul
pop
in
mov
or
mov
shr
push
sbb
xchg
push
je
sahf
movsb
push
mov
xchg
out
sbb
adc
adc
pop
in
push
push
sbb
jne
divb
xor
mov
dec
add
clc
push
cmp
inc
pop
xchg
xor
xorb
pop
sbb
pop
movsb
cmp
add
mov
shll
imul
xchg
mov
xchg
adc
sbb
stos
call
push
sbb
pop
or
hlt
stos
add
or
push
shrl
sub
iret
push
mov
xchg
mov
popf
nop
shrb
mov
je
fidivs
out
jnp
sbb
mov
jge
add
mov
pop
or
pop
jp
and
popa
imul
clc
cmpsl
test
pusha
adc
jmp
push
sub
pop
addb
js
sbb
pop
xchg
test
add
xchg
adc
and
cmc
jecxz
int3
dec
mov
loopne
pop
in
subb
cmp
jmp
divl
ds
mov
ret
fsts
jle
loop
cmc
mov
mov
outsl
loope
jnp
xor
inc
and
push
sub
xchg
ds
pop
jecxz
repz
or
cmp
pop
pop
inc
cmpsb
lret
jecxz
sarl
enter
cmp
enter
cwtl
add
mov
xor
mov
sbb
jecxz
jbe
sub
js
lret
cmpsl
dec
cmp
pusha
add
jae
xchg
bound
les
mov
jmp
jb
movsl
jg
shl
dec
pop
dec
cwtl
loope
imul
mov
sahf
xchg
cld
sbb
cmpsb
pop
push
loopne
jecxz
popa
or
inc
out
fwait
cwtl
jne
sahf
repnz
cmp
add
out
inc
or
cmc
dec
or
scas
adc
adc
dec
leave
or
das
popa
mov
loopne
xchg
mov
loop
movsl
mov
out
push
fdivrs
je
rcrl
jno
int
mov
sub
push
pop
xchg
xchg
xchg
dec
leave
les
std
push
popa
inc
pop
popf
lock
adc
adc
sahf
xor
jle
jbe
cmpsl
xchg
mov
mov
jl
fsqrt
sub
aam
aas
stc
andl
sub
sbb
xchg
iret
cli
xchg
sbb
or
in
mov
mov
sti
int3
imul
xchg
lea
mov
stc
shl
sahf
ficoml
xchg
mov
ja
jge
shl
sbb
stc
sbb
cmp
xchg
iret
in
push
lcall
insb
mov
fiadds
pop
nopl
and
repz
mov
dec
inc
lock
aaa
sbb
mov
popf
mov
inc
ss
leave
imul
enter
push
loopne
dec
iret
mov
add
or
lcall
inc
xchg
cmp
and
sti
out
js
ds
les
movsb
ss
cmpsl
mov
mov
mov
mov
push
sbbb
fiaddl
inc
int3
ljmp
xchg
insb
cmp
fsubrl
lds
test
jns
xor
sub
scas
inc
mov
add
movsb
mov
mov
adc
outsl
ror
adc
dec
and
stos
in
fnstenv
jl
in
int3
mov
nop
jge
aas
mov
imul
xor
pop
push
ljmp
xchg
and
or
aam
dec
xor
clc
mov
outsb
lret
cmc
pop
inc
repz
xor
adc
mov
jno
or
shrl
xor
mov
cmp
cmp
mov
stc
sbb
xor
ljmp
mov
cmp
add
fcmovb
jne
mov
inc
jle
subb
cmp
sbb
rclb
jmp
iret
int
cmp
inc
dec
pop
call
xor
gs
mov
mov
es
int3
fldenv
bound
xchg
mov
mov
movsb
jnp
jecxz
push
iret
sub
rcrb
loop
mov
sub
lcall
test
push
sbb
push
rolb
jp
xor
push
cmp
loopne
test
fld
cltd
inc
lds
fucomi
sahf
sub
in
insl
ljmp
not
jge
sbb
cwtl
sbb
pop
cmp
mov
add
add
jnp
sbb
frstor
dec
sbb
jo
mov
cmp
ja
shll
arpl
add
inc
xor
fstpl
push
pop
mov
add
xchg
fwait
in
test
int
rorb
in
and
mov
sub
jne
rolb
stc
mov
daa
mov
sbb
push
sbb
stos
mov
xor
pop
push
jmp
mov
adc
lods
sbb
rorb
pop
push
daa
out
je
and
pop
jg
or
ret
jecxz
mov
and
lahf
iret
sahf
or
in
lods
fmull
lock
mov
movsb
sahf
cwtl
jg
je
mov
dec
repz
sub
aam
sbb
mov
cwtl
decl
lds
cwtl
pop
mov
xor
adc
inc
orl
jae
repz
or
je
or
jecxz
push
inc
sbb
cwtl
xor
pop
mov
or
push
sbb
scas
inc
add
dec
pop
adc
push
push
js
push
xor
adc
adc
adc
jmp
insb
pop
test
int3
add
call
xchg
sub
out
mov
clc
hlt
ficompl
adc
bound
int3
jg
jo
jmp
fists
sbb
popf
cmp
test
call
ljmp
dec
lahf
loop
std
mov
aas
jae
push
lahf
adc
dec
ret
ret
push
pop
cmp
push
adc
inc
das
loope
test
lods
sub
mov
repz
clc
cwtl
xor
stc
add
add
sbb
cmpsb
cmc
and
cmp
fnsave
add
insl
push
sub
subb
and
mov
lods
mov
dec
cmpsb
lcall
cmp
pop
inc
in
sbbl
pusha
mov
outsl
xorl
sbb
push
repnz
test
movsb
mov
fsts
push
ss
stos
sbb
lret
xor
leave
mov
hlt
xchg
or
data16
and
xchg
andl
xchg
fs
pop
xlat
mov
or
mov
push
hlt
xor
enter
test
int3
repz
imul
rcll
cmp
into
inc
add
popa
and
outsb
out
fstpt
adc
pop
lods
xchg
push
xchg
int3
xor
scas
pop
jnp
cmp
and
cli
or
or
or
notl
je
jnp
mov
jmp
mov
pcmpeqw
and
pop
idiv
in
adc
mov
mov
push
in
roll
xchg
lods
aas
shlb
push
dec
lcall
mov
outsb
out
sub
or
insl
test
or
test
stos
leave
idivb
cmpsl
and
pop
cmp
les
cli
adc
cmpsl
add
inc
xor
xchg
jnp
cmp
xchg
mov
pop
xchg
jns
sub
pop
aaa
scas
xorl
push
push
sub
dec
push
shlb
sbb
stos
test
sbb
inc
in
adc
jl
mov
xchg
jmp
fisubrs
mov
adc
xlat
cmc
jo
sub
dec
cwtl
push
mov
out
aad
mov
jmp
sbb
jns
mov
ret
xchg
loop
add
xor
xchg
sbb
pop
mov
jp
mov
or
fsts
adc
xchg
jns
loopne
inc
adc
jle
dec
push
and
outsb
incl
and
rcrl
gs
loop
mov
idiv
test
hlt
inc
jo
std
push
fisttpll
fs
cltd
add
mov
add
xchg
push
out
rcl
gs
xor
sbbl
ret
pop
jmp
jge
je
testl
add
stc
and
lds
jb
xchg
mov
pop
in
mov
xchg
lret
push
aas
mov
mov
xor
movl
hlt
push
dec
enter
pusha
enter
cmp
enter
sub
push
pop
loope
fnstenv
out
push
or
std
push
jge
xorl
nop
inc
dec
pop
push
jle
xor
push
ljmp
xchg
mov
aam
mov
orl
outsb
inc
lock
mov
adc
cmc
adc
adc
pop
js
cltd
into
adc
push
sbb
sahf
adc
outsl
and
movsl
idiv
psrld
inc
sbb
shrl
push
scas
push
push
push
xchg
jmp
call
ljmp
shlb
jb
mov
mov
movsb
ss
mov
jle
cmp
inc
add
mov
cmpsl
nop
add
cmc
dec
pop
mov
push
ja
loopne
cmp
push
pop
jp
fldt
add
mov
jno
fcomp
add
xor
and
xchg
sub
xchg
shlb
aad
mov
lcall
add
incl
test
fidivl
cmp
notb
and
pushf
lcall
or
mov
movl
push
test
xchg
or
pop
sub
sub
inc
dec
rorb
popa
sbb
adc
stos
loopne
pusha
inc
cltd
imul
push
jle
push
fildll
jl
push
push
in
fs
movsl
mov
movsl
xor
xchg
mov
aas
push
shll
mov
ret
bndstx
xchg
jae
repz
jb
aad
mov
mov
ret
inc
mov
xor
mov
and
je
scas
setge
sti
rcrl
lea
xchg
or
das
mov
cltd
adcl
loopne
dec
hlt
mov
data16
lcall
pop
mov
add
ret
shll
repnz
xor
jecxz
es
subl
mov
roll
rcrb
dec
xchg
and
aaa
cmc
sub
or
sub
addb
test
pop
inc
mov
xchg
mov
nop
rol
mov
jb
jb
movsb
pushf
pop
push
pop
rcll
in
xchg
adc
aaa
pop
dec
mulb
loopne
mov
nop
test
cmpsb
ljmp
cld
dec
adc
inc
cmp
xchg
cmp
push
shlb
out
lcall
fstpt
adc
out
xchg
stos
add
mov
nop
mov
fcoms
fiaddl
call
fnstsw
test
cmp
aad
into
cmp
pop
sbb
fs
das
test
push
insb
shl
jmp
jne
stos
ret
pusha
mov
inc
xor
cmpsl
inc
div
dec
cvtps2pd
cmpsl
mov
sbb
pop
je
mov
xchg
add
cmp
filds
or
mov
cs
sbb
test
inc
mov
mov
and
xchg
arpl
enter
sbb
mov
and
fs
push
repz
mov
in
out
insl
movb
rcr
lods
adc
faddp
arpl
mov
subb
cmp
je
fisubs
inc
lods
sbb
outsb
outsl
and
mov
gs
xor
cmpl
jl
mov
sahf
and
jno
mov
xchg
xchg
sbb
mov
das
loopne
mov
jge
insl
mov
arpl
jp
xchg
in
in
shll
or
test
mov
mov
jecxz
jp
out
pop
inc
icebp
push
xchg
movsl
shrb
jge
mov
pop
push
mov
inc
dec
std
xchg
mov
add
ljmp
fcmovne
lods
cmc
lods
into
dec
sub
pop
adc
fbstp
int3
mov
imul
outsb
es
inc
sbb
cmpsb
inc
jl
stc
pop
add
ret
cwtl
xchg
daa
add
sub
sbb
int3
mov
cmpsl
dec
push
mov
mov
xor
fldt
pop
dec
fstpl
and
push
or
lods
jecxz
movsl
movsl
push
dec
stos
jecxz
flds
in
sub
or
mov
add
push
sbb
mov
call
cmc
inc
and
mov
stos
out
inc
in
xor
jno
xchg
xor
addr16
in
insb
push
jg
jmp
mov
cmp
pop
test
cld
cmp
xlat
insl
jecxz
incl
add
addr16
fs
lret
lods
sti
es
sbb
add
dec
mov
jp
in
test
imul
loopne
test
testl
add
jo
mov
pusha
mov
int3
test
xor
outsb
jp
bound
mov
int3
mov
fildll
loop
mov
ds
popf
mov
leave
imul
iret
fmull
outsl
lds
push
pop
pop
xor
adc
fwait
test
jnp
xchg
mov
and
fucomp
adc
jle
push
inc
fiadds
cmp
inc
push
adc
rol
dec
mov
dec
or
push
cmp
or
mov
ljmp
popa
bound
pop
xchg
sarl
jecxz
dec
add
and
into
jmp
and
jnp
push
mov
sub
xchg
or
rorl
aad
nop
fcoms
shrl
jo
dec
lods
mov
jb
or
stos
mov
inc
mov
das
push
jae
sahf
adc
in
test
and
ficoms
xor
inc
push
adc
xor
pop
cmp
daa
jecxz
xor
movsl
popa
push
cli
mov
pop
in
jo
adc
inc
mov
inc
nop
xlat
xchg
pop
mov
lcall
adc
xor
jmp
js
jae
mov
adc
and
inc
xor
or
lret
movsb
loop
pop
and
lret
scas
push
arpl
jnp
stc
pop
scas
add
ljmp
jo
or
ss
ljmp
lret
divl
and
or
pop
lahf
xor
sbb
mov
and
push
imul
test
push
sbb
movsl
in
je
inc
inc
xchg
in
and
xor
pop
ret
mov
fistpl
out
cmp
and
sbb
out
jb
push
std
sbb
or
sbb
sub
xor
repnz
add
jmp
sub
dec
aam
xlat
hlt
movsl
jne
or
jp
inc
clc
les
push
xorb
imul
ds
pop
or
aad
xlat
mov
stos
mov
xor
push
mov
pop
in
xchg
inc
movl
xor
cmc
and
jge
xchg
lods
les
lds
cli
inc
ds
jecxz
and
mov
xor
sub
fldt
lahf
jno
aam
add
xor
aam
int3
jb
aas
data16
out
adc
inc
mov
ss
push
inc
adc
pushf
in
dec
xchg
arpl
scas
or
lock
nop
jl
daa
pop
cwtl
stc
adc
in
sti
cmpsb
in
mov
mov
test
xchg
inc
and
out
push
addr16
imul
cs
flds
xchg
mov
dec
adc
test
add
jno
push
icebp
xor
jmp
and
call
stos
aam
push
std
fs
mov
icebp
std
mov
movsl
cmp
and
movsb
push
cmp
xor
sbb
cwtl
jp
clc
ret
pop
push
sub
cwtl
inc
dec
testl
ret
clc
sub
jl
enter
xor
std
stos
pop
mov
into
push
mov
dec
scas
int
and
pop
mov
fwait
stos
sbb
or
loopne
es
dec
xor
xchg
sub
lahf
sbb
out
xchg
fldcw
test
mov
scas
ss
inc
sub
push
js
sti
mov
sub
decb
ja
and
orl
data16
in
or
dec
not
push
pushf
cmp
mov
stos
lahf
xchg
cltd
vmovlps
iret
inc
push
or
pop
addl
test
shl
xchg
fldl
cmp
lret
insb
rcl
inc
adc
or
mov
iret
pop
mov
fildll
push
adc
test
cmp
inc
dec
dec
sbb
push
lds
mov
xor
pushf
jmp
jge
mov
leave
mov
xchg
rcl
cmp
xchg
stos
mov
lds
push
push
mov
jb
inc
roll
jecxz
std
rorl
int
and
adc
xchg
sahf
mov
jmp
mov
lods
mov
xchg
test
xchg
add
test
xchg
add
inc
xchg
push
dec
push
and
enter
sub
jl
sub
dec
jbe
push
adc
adc
mull
mov
mov
pop
lock
clc
push
testb
pop
int
mov
xor
imul
pop
sbb
fdivrl
dec
repnz
mov
mulb
push
aas
xor
rclb
mov
movsb
orb
jecxz
lods
pop
outsl
adc
inc
dec
lcall
jp
mov
add
orb
subb
push
cwtl
or
dec
pop
dec
in
jns
fimuls
inc
pop
dec
xchg
lods
mov
test
fadd
repnz
loop
pop
test
sbb
cmp
mov
dec
inc
mov
daa
dec
jb
add
push
idivb
lds
inc
int
jno
jbe
jmp
outsl
in
sbb
sti
sbb
and
mov
shrl
mov
adc
test
push
mov
hlt
gs
out
scas
lahf
push
mov
mov
push
aas
jmp
clc
adc
jns
addr16
or
mov
mov
cwtl
outsb
push
icebp
cmp
int
addb
in
out
call
jp
push
icebp
xor
mov
push
mov
pop
shlb
fisttpll
mov
aaa
cmp
rclb
jbe
xchg
mov
inc
fisttps
xor
shrb
sahf
mov
mov
push
cmp
or
add
push
or
inc
push
push
mov
scas
adc
jl
adc
lret
dec
mov
and
and
push
adc
cmp
mov
inc
mov
mov
xchg
xchg
jmp
mov
cmc
mov
mov
data16
cmc
hlt
stc
cwtl
add
lods
rcrb
mov
pop
mov
adc
xchg
cmp
fiaddl
clc
mov
loope
gs
addb
xchg
add
cmp
aam
pop
leave
mov
das
aad
das
shll
lret
dec
fisubs
jns
loop
inc
jmp
cmp
test
shlb
ja
and
sbb
imul
jle
sub
xchg
nop
jl
mov
mov
pop
cmp
nopl
sarl
fnstcw
xor
rcll
fidivrs
test
add
shlb
stos
sbb
jl
xchg
fcomps
xchg
or
je
insl
mov
pop
leave
sbb
out
push
xchg
insl
sub
sarl
mull
sbb
fstps
sarl
aad
mov
jns
es
das
and
add
jge
jle
insl
sbb
dec
sbb
lds
and
mov
wrmsr
ds
lcall
insl
imul
pop
mov
dec
xor
xchg
movsb
mov
adc
mull
jns
adc
in
nop
jnp
flds
sbb
rcrl
dec
mov
inc
aam
add
xchg
jns
jo
lret
in
push
inc
adc
xchg
adc
mov
add
dec
adc
stc
inc
mov
pop
daa
push
imul
jp
jecxz
add
xor
dec
adc
mov
fmuls
cmpsb
push
pop
adc
in
jge
dec
jb
pop
sti
cmc
sub
idivb
loope
cmpl
sbb
mov
mov
lods
adc
ret
imull
cmp
popa
int3
jmp
int
jge
sub
adc
lods
frstor
pusha
jns
out
repz
and
sub
cs
push
pop
cmp
addr16
jg
jg
cwtl
lahf
cmc
jnp
mov
mov
imul
pop
xor
rcrb
std
in
enter
loope
mov
pop
adc
rcll
or
iret
lods
sti
add
push
repnz
inc
imul
mov
fisttpl
test
rclb
fwait
xor
icebp
xchg
scas
cmpsl
adc
jmp
jl
lcall
add
mov
ja
std
jo
lea
pop
pop
in
imul
cli
or
and
rcr
lahf
fstl
adc
push
in
cmpsb
imul
ror
lea
rcl
cli
lret
ficompl
pop
pop
xor
and
ljmp
push
pop
jg
enter
xor
add
cmp
rol
or
inc
mov
sarb
push
dec
bound
roll
sub
cmp
xchg
cmc
mov
pop
in
xor
sub
pop
stos
and
xchg
pop
sub
data16
dec
pop
stos
sub
cmp
mov
test
xchg
je
or
jecxz
lds
gs
or
ret
loop
outsb
lret
adc
sbb
jb
dec
jns
mov
ss
mov
adc
loope
add
test
imul
lds
and
ljmp
add
shll
push
jl
or
rol
lahf
jmp
add
mov
pusha
test
lcall
jne
and
pop
dec
lret
loope
push
jle
insl
xorps
cmc
mov
inc
ss
daa
loope
push
jnp
add
into
sahf
and
or
add
cmp
addr16
dec
mov
inc
cmp
and
xchg
push
scas
dec
stc
push
test
mov
mov
mov
and
sti
inc
das
shl
xor
fwait
movsl
outsl
out
adc
push
jne
mov
jbe
lods
mov
xchg
cld
xor
cli
ljmp
sbb
sub
push
test
rcrl
aas
xchg
sbb
dec
outsl
mov
mov
push
xor
testb
pop
mov
push
sbb
adc
mov
sub
fsubrs
test
and
sbb
mov
push
aam
movsl
mov
pop
cmp
push
mov
les
ds
xchg
add
fistps
nop
sbb
sub
mov
mov
adc
sub
push
sub
cltd
xor
mov
inc
jmp
mov
push
movsl
push
adc
int
adc
orl
cmpsb
movsl
mov
je
popa
mov
out
mov
cmp
sub
aas
adc
jge
test
sub
insl
or
mov
adc
mov
insb
mov
je
es
mov
std
xor
loop
ja
cmpsb
cmpsl
mov
scas
mov
mov
cs
dec
mov
mov
mov
jle
aam
jnp
dec
mov
sti
sbb
scas
loopne
pop
in
push
and
push
stc
adc
movl
shl
push
movsl
mov
ret
lds
in
pusha
int3
add
inc
xor
xchg
mov
ja
ret
bound
je
shll
in
pop
push
xchg
icebp
sbb
sbb
or
insl
mov
mov
cwtl
or
mov
ja
xchg
roll
mov
mov
insl
mov
cmc
pop
and
into
add
bound
sahf
shlb
xchg
dec
cld
push
inc
ret
inc
push
xchg
or
jbe
xchg
xchg
jae
popf
mov
notl
das
ds
adc
push
pop
mov
push
cmp
mov
sahf
loopne
jge
push
daa
out
jmp
adc
xchg
mov
mov
test
xchg
ja
rcrb
sub
insb
fbstp
cld
loopne
lcall
sub
mov
mov
shrb
into
cwtl
lea
aad
xor
dec
mov
inc
jle
or
in
cli
push
and
les
negw
xor
jo
push
pop
pop
addl
sub
in
out
jne
add
cmp
fdivl
test
ljmp
mov
mov
int3
call
data16
inc
imul
push
daa
mov
aad
sbb
data16
or
pop
add
jbe
mov
lea
pop
loopne
scas
and
sub
xchg
push
jge
test
mov
xor
and
lcall
lahf
divl
mov
and
data16
mov
das
cltd
cmp
adc
sbb
sub
sbb
xchg
cltd
jbe
dec
lods
in
imul
xchg
xor
popf
dec
mov
sahf
shlb
dec
mov
sub
insb
jnp
sbb
fwait
pop
jecxz
movsl
and
jl
es
pop
dec
nop
or
dec
aam
mov
cmpl
vxorpd
sbbb
dec
sbb
andb
push
jecxz
sub
or
jne
cmpsb
addr16
popa
jbe
xor
xchg
push
pop
mov
cs
rcrl
mov
jle
xlat
and
lahf
adc
jb
sub
leave
fwait
xchg
or
mov
jmp
ret
add
mov
push
jmp
mov
mov
test
mov
idiv
and
fistps
loopne
aaa
orl
mov
and
and
shrl
test
sub
ja
aaa
sbb
fsubs
push
enter
insl
fs
sub
ud2
test
adc
popa
scas
pop
xchg
out
or
adc
outsb
push
lret
sbb
dec
xor
xchg
mov
cmp
sbb
sub
xchg
stos
mov
pushf
push
dec
cmp
mov
mov
mov
out
stos
repnz
adc
test
sbb
mov
iret
lods
in
jl
incl
dec
das
dec
jb
jns
stos
jb
jle
push
mov
mov
xchg
cltd
inc
call
or
scas
fs
push
push
lret
int3
jbe
sarb
cmp
inc
test
jge
push
sbb
cmp
adc
lods
inc
push
dec
hlt
cs
pop
fwait
cmp
mov
out
mov
into
inc
insb
ds
mov
aaa
mov
pushf
adc
jb
push
fildll
fwait
push
out
mov
push
adc
mov
sbb
adc
xor
mov
mov
or
inc
add
enter
lahf
enter
xor
aad
xor
jg
mov
sub
xchg
jmp
sarl
xor
jb
mov
add
fnstsw
push
int3
inc
xor
inc
push
sub
sbb
jno
xchg
xor
fidivrs
lret
jae
xchg
rorb
push
cltd
mov
xor
xorb
and
flds
jmp
pop
stos
jl
mov
pop
cld
repnz
insl
mov
in
pop
repz
orl
adc
int3
sbb
cmp
cmp
sbbl
stos
sbbl
rorb
xchg
insl
mov
cltd
sarb
xchg
in
lea
jge
mov
xchg
icebp
popa
pushl
pop
sub
push
call
into
and
mov
sysenter
jmp
std
movsb
loop
pop
sub
filds
push
adc
sbb
dec
andb
and
loope
clc
xor
data16
push
mov
push
push
insl
sahf
fwait
push
rcl
xor
arpl
cli
mov
dec
add
mov
js
popf
pop
sahf
outsb
je
mov
jns
jle
dec
mov
ret
nop
mov
fwait
in
and
cld
adc
outsl
popa
inc
inc
jb
enter
mov
and
jbe
sbb
cmc
cmpsb
addr16
xor
mov
pop
movsb
pop
mov
adc
mov
add
sbb
mov
add
or
lahf
cmpsl
idivl
xor
push
pop
lods
cmc
cmp
shll
mov
cld
fisubs
cld
lock
jmp
dec
pop
iret
fnstcw
int3
push
bnd
inc
or
ja
outsl
fstl
adc
in
push
mov
test
inc
xchg
cli
adc
stos
arpl
xor
data16
mov
rcl
sub
jle
xchg
ja
or
jo
push
sub
sti
insl
push
add
pop
xor
mov
fwait
bound
cmp
push
sub
lods
sbb
pushf
cwtl
frstor
addr16
xor
jbe
and
ret
repz
pop
imul
sbb
gs
add
iret
push
inc
orl
dec
les
xchg
mov
out
outsb
popf
sti
mov
andl
push
scas
or
xchg
pop
pop
cmpsb
fistpll
lock
xor
aas
dec
xor
imul
push
jno
push
sub
aam
into
or
push
xchg
sub
lds
out
lods
or
fxsave
loopne
adc
inc
icebp
xchg
add
cld
pusha
imul
pop
pop
or
push
add
jmp
mov
fwait
imul
in
loopne
lods
pusha
sbb
lret
mov
push
fcompl
push
sub
loope
movsl
in
pop
push
imulb
mov
cmp
test
fwait
sbb
mov
mov
clc
add
jb
mov
sbb
fcomip
mov
icebp
enter
add
repnz
popf
cmc
cli
lock
push
dec
xor
mov
mov
call
pop
sahf
cmp
inc
fdivp
fs
dec
ljmp
enter
loop
insl
xchg
push
cmc
dec
dec
sub
dec
mov
rclb
nop
jp
sarb
xchg
addr16
loop
xchg
in
bound
pop
into
mov
ljmp
scas
jb
jo
push
mov
sbb
fildl
leave
jns
and
jl
xchg
imul
insl
or
mov
addr16
movsb
andl
fwait
cltd
or
push
outsb
out
clc
test
jbe
aad
daa
dec
lret
shlb
xchg
test
push
cltd
decl
add
std
mov
enter
sub
sbb
dec
or
xchg
push
sub
dec
test
stos
xorl
rol
adc
rcrb
cs
call
jg
mov
aas
xchg
popf
adc
lahf
xor
fcomps
stc
cmp
loope
rcll
xor
mov
test
subl
push
xchg
pop
dec
fisubrs
ds
jmp
push
jmp
add
dec
mov
mov
lea
adc
test
xor
dec
xchg
or
insb
fiadds
fimuls
bound
test
mov
mov
rclb
outsl
mov
stos
jbe
push
push
xchg
insb
fdivl
jmp
xchg
fucomi
jb
sahf
pop
cmp
pop
popa
fisttps
test
mov
dec
adc
stos
push
xor
jle
pushf
mov
adc
test
mov
out
dec
mov
movsl
add
pop
fstpt
iret
xchg
in
out
sub
adc
cmc
dec
and
les
mov
and
in
cmp
inc
lret
jge
or
lret
add
fs
aas
in
cwtl
lods
push
mov
ljmp
xchg
stc
addr16
push
push
std
cwtl
and
fdivs
leave
jle
sub
pop
mov
pushf
ret
pushf
out
das
push
lods
add
in
in
scas
lock
out
cmpsb
out
jns
nop
mov
push
add
sub
aaa
notb
mov
mov
jae
int3
out
pop
dec
rorl
test
lock
mov
pusha
and
adc
decl
or
int
fstpl
jne
dec
mov
add
xchg
orl
push
push
dec
or
clc
mov
dec
gs
repz
sbb
loop
jp
aas
adc
cmp
fwait
mov
sub
imul
mov
jno
add
stc
imul
aaa
bound
pop
jmp
cmp
out
aas
pop
mov
in
dec
jne
jl
push
lods
pop
or
rcrb
mov
cmp
adc
dec
jl
jle
xor
inc
aaa
scas
fldcw
ljmp
mov
mov
mov
mov
and
fwait
movsb
out
pop
shlb
test
adc
int3
cmp
pop
in
imull
jb
jg
out
out
leave
dec
js
cmpsl
jmp
rolb
mov
out
xor
push
repz
lea
imul
shl
outsb
sbbl
int3
aaa
push
mov
sarl
das
out
dec
movsl
leave
test
jge
jmp
and
pop
sbb
aas
push
mov
iret
insb
jl
into
addb
sbb
and
aad
lock
leave
mov
sti
mov
xchg
push
cwtl
in
push
lock
xchg
clc
fadd
and
orl
dec
sti
mull
mov
icebp
dec
xchg
dec
cmpsb
in
add
test
cmc
dec
ficompl
test
add
mov
mov
stos
js
dec
mov
and
inc
lcall
or
ret
jp
xor
and
pop
cmp
sub
mov
add
dec
push
cmp
fsts
mov
jl
hlt
popf
call
adc
scas
lretw
sbb
lcall
sahf
repz
insb
mov
cmpl
sub
jg
adc
push
cli
enter
xchg
jg
dec
pop
dec
add
jge
fidivl
sub
rcrb
in
mov
ret
scas
sbb
mov
xchg
out
test
cmpl
xor
in
xor
sub
pusha
in
sbbl
scas
cltd
cmp
and
fwait
fwait
into
mov
mov
dec
xchg
in
pop
xchg
daa
cmp
xor
inc
fstpt
hlt
test
mov
test
fnsave
jbe
fcompl
mov
mov
test
loop
in
or
pop
out
fadd
pop
ficoms
and
or
mov
shrl
sub
xchg
outsl
xchg
int
lea
pop
inc
shll
popa
dec
push
pop
and
loop
xchg
movsb
jmp
sbbb
jbe
scas
out
loopne
pusha
movsl
inc
or
xchg
das
pop
imul
pop
jns
lsl
pop
orb
es
dec
jle
mov
pop
fs
fadd
pop
push
inc
movsl
ficomps
mov
sbbl
in
mov
or
ljmp
bound
test
lahf
mov
cmp
lahf
xor
lods
les
jno
cmp
call
push
sahf
xor
push
std
sar
je
push
mov
jo
cli
int
lds
cmp
xlat
mov
jne
xor
ljmp
fmull
scas
shr
mov
fsub
mov
popa
push
pusha
sub
nop
lret
dec
xor
jo
inc
pop
jecxz
adc
setb
mov
nop
sbb
je
shrl
pushf
jecxz
xchg
xor
mov
and
scas
dec
adc
lods
pop
add
pop
loop
inc
and
sub
mov
jmp
pusha
cmp
sbb
shl
cmovo
cmpsb
clc
fstpt
pop
dec
cmp
mov
pusha
fistps
mov
aam
into
push
fs
mov
adc
mov
jl
roll
inc
mov
fistps
mov
stos
popf
pop
cmp
add
add
movsl
fadds
xchg
inc
mov
jns
xchg
sbb
out
lods
out
mov
pop
test
cli
sti
sbb
pop
jecxz
fmuls
push
inc
rclb
cmp
pop
push
jmp
jae
mov
jno
idivl
jno
jg
mov
jl
into
jmp
jp
mov
int3
pop
push
xchg
and
mov
xor
dec
mov
jbe
jecxz
pop
aad
push
insb
xchg
and
nop
aad
and
int3
and
jmp
mov
sub
pop
pop
stc
mov
add
stos
jmp
lahf
dec
mov
repnz
ljmp
or
fwait
pop
xchg
pop
jg
sub
jbe
add
es
jp
xchg
faddl
adc
fnsave
rol
jg
jge
pop
sbb
in
sub
movhps
hlt
and
insl
jns
mov
pop
arpl
mov
fbld
cmpsb
lods
jb
push
mov
dec
cmc
mov
push
add
adc
push
fistpll
lahf
pop
imul
and
sub
mov
dec
cld
test
inc
pop
or
jl
mov
lret
cli
and
xchg
fdivs
lds
js
cli
nop
out
and
or
xlat
push
push
inc
js
ljmp
rolb
negl
mov
les
cltd
and
xchg
sub
sub
dec
inc
es
rorb
loop
int
fldl
sub
dec
jns
in
xor
in
ljmp
lods
iret
ja
sahf
sbbl
and
xor
cmc
sbb
test
dec
popa
dec
inc
stos
mov
mov
adc
push
xor
fimuls
mov
cmpsl
daa
lea
sbb
mov
insl
cmp
into
arpl
or
fisttpll
gs
dec
or
lds
jg
sbb
movsl
addb
scas
and
add
imulb
lahf
aad
jae
jge
cmp
dec
es
mov
xor
test
xchg
sbb
out
addb
pop
mov
aad
dec
adc
jb
rcll
jecxz
ret
rolb
aad
push
dec
shr
xchg
rcrb
jno
enter
cmp
or
clc
xor
dec
mov
sub
pop
int3
stc
inc
mov
inc
sbb
daa
pop
push
test
pop
inc
pop
or
inc
mov
in
int3
mov
dec
cmp
test
js
les
or
jb
and
das
jmp
lock
out
ds
fucom
or
loopne
jae
repnz
mov
cmp
cmp
and
push
in
sbb
pushf
sahf
popa
add
push
hlt
shlb
jge
mov
fcmovnbe
pop
test
adc
mov
rolb
sbb
xor
out
adc
or
rorl
subb
std
inc
loopne
das
shll
aaa
test
pop
aaa
xchg
std
pop
ret
outsl
add
iret
mov
xor
call
cwtl
dec
lret
cmpsl
push
sub
lret
push
push
sub
sti
xchg
int3
add
pop
fwait
cmp
mov
lldt
sti
lcall
negl
sti
dec
adc
dec
xchg
inc
bound
adc
repnz
shr
das
orb
jns
xor
sub
movsb
divl
out
adc
dec
test
lods
mov
pop
movsl
fidivl
xchg
js
roll
sbb
xchg
in
push
push
jp
push
insb
andl
and
and
rcrl
add
popa
loopne
test
ss
sbb
dec
and
das
mov
in
push
sub
mov
inc
push
push
sub
add
subb
jno
inc
call
add
cmp
jb
xchg
mov
and
dec
mov
fidivl
fs
int
cmp
jge
and
jb
mov
ss
pop
or
cmpsl
jp
rcrl
cmp
int3
ret
add
cmpl
data16
add
subl
pushf
aaa
mov
dec
cmp
inc
mov
lea
inc
scas
xchg
out
cmc
adc
push
js
inc
shll
int
push
movsl
pop
push
icebp
rcrl
and
idivb
dec
iret
fcoml
icebp
fwait
cld
dec
lahf
adc
int3
je
or
pop
pop
loop
or
cmpsl
stos
xchg
sbb
cmp
mov
test
jo
xchg
mov
movsb
sbb
xchg
ss
add
mov
fsubrs
mov
int
mov
insl
and
gs
sbb
loope
mov
jmp
pop
mov
ljmp
cmpsb
jne
push
sub
in
lcall
sbb
out
ja
lea
js
push
stos
mov
jno
mov
xor
push
push
add
xchg
push
mov
daa
xchg
dec
mov
outsb
stos
testl
negl
shll
push
jmp
mull
pushf
pop
xor
cli
pop
mov
mov
es
sub
mov
jno
pop
xor
aas
mov
add
mov
push
nop
cmpb
fists
pop
adc
out
sub
mov
add
jo
adc
jmp
sbb
inc
adc
or
aam
adc
out
lods
in
pop
xchg
rcrl
rcrl
rcll
or
push
mov
or
jae
cmpsl
enter
hlt
cmp
sub
push
shl
iret
cmpl
shl
cmp
jno
jge
clc
shlb
fwait
adc
data16
mov
inc
pop
mov
popa
xor
or
pop
jne
mov
mov
movl
push
outsl
push
xor
dec
arpl
call
jmp
sub
push
xchg
xchg
xor
cmp
cmp
rcrl
jae
xor
in
xor
insb
adc
xchg
pusha
push
add
call
aad
and
dec
je
sahf
stos
in
or
xor
mov
insl
or
and
pop
jae
lret
aam
xchg
scas
lret
add
mov
movsl
mov
out
push
cmpsl
dec
xor
xor
dec
mov
or
pop
pop
outsl
lret
ret
jnp
adc
and
mov
xchg
xor
xlat
mov
mov
sub
cmp
lock
ds
add
push
roll
sbb
and
inc
popa
or
leave
enter
leave
dec
lcall
mov
or
sbb
je
lods
or
jne
mov
fs
dec
pop
push
add
les
gs
mov
and
bound
roll
inc
mov
dec
jne
pop
adc
cmp
cmp
mov
imul
cmp
fisttps
mov
push
xor
fs
into
iret
mov
cmpsb
mov
test
decb
xor
call
adc
jmp
mov
mov
cmp
popa
les
dec
fwait
push
xor
pop
shr
in
cmp
scas
xchg
push
mov
adc
jmp
rcll
mov
add
xchg
lds
add
test
dec
push
xor
xchg
sbb
add
push
in
or
xchg
adc
fwait
mov
dec
ss
add
push
enter
mov
lock
idiv
and
inc
mov
push
fadd
lret
stos
cmp
jno
cmp
ja
lods
sahf
sub
mov
insl
into
movsb
mov
sbb
dec
jnp
xchg
push
sub
add
cmp
sbbb
jbe
sbb
movsb
and
sbb
stos
or
mov
fs
jno
sub
mov
lret
insl
mov
cmc
aam
inc
and
and
hlt
mov
push
je
mov
stc
mov
in
push
push
xchg
push
lods
les
addl
push
ficoml
addl
cmp
les
jbe
shll
js
js
mov
add
sbb
loope
and
pop
fiadds
fsubs
je
mov
adc
aas
jg
add
cltd
loop
jb
adc
mov
cmp
sbb
or
bound
leave
xchg
imul
cs
ds
and
jmp
aam
loope
mov
xorb
rcll
sub
pop
push
in
mov
lock
aas
pop
rcrb
mov
test
xor
sbbl
test
cmpsb
mov
repz
enter
pusha
mov
sub
into
sbb
push
xor
mov
fs
xor
sbb
cwtl
shlb
mov
and
sub
push
lods
clc
idivb
pop
or
mov
lods
xorb
subb
mov
loopne
pop
out
xchg
cli
sub
pop
rolb
aam
add
jb
or
or
das
clc
push
or
int3
int3
jp
ret
popa
subb
jns
neg
jp
lcall
mov
inc
test
sahf
add
and
hlt
arpl
ss
sub
sahf
stc
data16
lock
cmp
xor
in
test
jbe
jecxz
test
jmp
push
jg
lahf
adc
sahf
fucomp
mov
inc
push
and
cwtl
mov
or
dec
add
sub
lds
fsubrl
popa
ficoml
test
dec
int3
js
mov
cmpl
gs
imul
add
xchg
aas
push
or
ljmp
lahf
push
aaa
imul
cmpsl
call
sarl
cmp
mov
test
stos
mov
in
xor
dec
pop
jae
jns
arpl
jle
rclb
bound
or
les
cli
xchg
mov
xor
cld
push
pop
int3
jmp
mov
inc
loop
pushf
sub
js
mov
mov
sub
lahf
or
mov
sbb
sub
and
jle
jb
mov
xchg
das
movsl
fsubrp
pusha
or
dec
popf
aaa
fmul
mov
jbe
mov
popa
cmp
pop
sbb
xor
push
xor
mov
lahf
lahf
aaa
inc
and
dec
mov
test
adc
xchg
adc
je
int3
lea
dec
insl
mov
mov
mov
pop
xchg
inc
movsb
sbb
andl
push
and
stc
xchg
xor
jne
ror
shr
fnsave
clc
inc
and
in
jle
outsb
push
lahf
adc
popf
or
push
sbb
inc
push
mov
outsb
outsl
pop
scas
js
push
jle
pop
cmc
xchg
ja
pop
or
xchg
scas
ficoms
mov
dec
xor
movsl
ds
push
loopne
mov
cmpl
add
sbb
lret
jecxz
sub
int
jecxz
fwait
insl
negb
rcll
in
lret
mov
repnz
add
leave
push
mov
das
mov
js
jp
mov
movl
inc
mov
sub
movsl
cwtl
mov
adc
out
int3
out
int
or
ja
xor
int3
shrb
and
pop
rep
les
leave
adc
stc
mov
mov
and
stos
sbb
sbb
adc
jbe
data16
mov
pusha
or
xchg
mov
rcll
call
xor
popf
jnp
cmpl
adc
jle
add
push
mov
cmp
add
mov
sub
mul
leave
mov
push
sub
in
push
pusha
stos
out
cmp
push
cmp
or
mov
jne
adc
push
lods
movsl
lods
inc
shrl
sbb
daa
shl
sub
imul
jl
push
or
orl
loope
popa
cwtl
dec
xchg
adc
sub
add
dec
mov
fsubr
cmpsb
stos
push
nop
pop
fnstsw
xchg
adc
scas
adc
mov
or
pop
out
shrb
mov
mov
mov
adc
out
scas
cmpsl
pop
fistpll
bound
xor
loope
mov
push
fcmovb
jb
rorl
in
inc
mov
rol
push
lahf
xchg
fistpll
fldenv
push
in
sub
sub
mov
xchg
imul
sub
adc
adc
mov
mov
fidivs
sbb
lcall
adc
and
aas
mov
lcall
iret
cltd
rcl
add
or
out
push
xchg
movsl
pop
scas
or
cmp
and
bound
push
icebp
inc
mov
jno
push
xchg
jmp
loopne
sub
xchg
mov
mov
popl
stc
jno
sbb
inc
outsl
mov
inc
movsl
pop
xchg
mov
mov
add
outsl
arpl
add
jp
jmp
cltd
add
pop
dec
xchg
adc
fs
aad
iret
sub
cli
add
pop
mov
or
fwait
cmp
mov
jne
rol
fcompl
mov
mov
and
mov
cmc
in
add
loopne
jl
mul
nop
mov
insl
stos
movsb
sub
cmp
dec
xor
xchg
aad
xor
test
pushf
or
roll
mov
outsl
stos
sub
pop
cwtl
fmull
in
outsl
scas
jbe
xor
and
adc
mull
stos
ja
jae
rol
pop
sub
adc
leave
int
xchg
ja
mov
xchg
repnz
test
push
leave
xor
and
sbb
loop
sti
adc
leave
stos
pop
cmc
jnp
mov
dec
lret
bound
sar
push
lret
push
repnz
xchg
mov
push
pop
and
addr16
sub
xchg
mov
push
adc
cli
cmp
lcall
and
shrl
add
outsb
fs
negl
dec
ret
sarb
lods
les
aad
ret
inc
shll
ja
and
enter
sbb
insb
dec
pop
inc
mov
js
cld
repnz
outsl
rep
ret
xchg
sarb
cli
ret
xchg
add
push
push
xchg
mov
push
jno
xchg
add
pop
dec
imul
xchg
pop
xchg
stos
jae
imul
mov
scas
inc
push
cmp
mov
out
std
lahf
dec
or
aam
cwtl
not
pop
sahf
in
inc
mov
pop
inc
shl
add
loopne
jg
pop
sub
xlat
outsl
mov
xchg
into
pop
jne
or
lods
test
mov
sbb
push
mov
mov
cmpl
xchg
and
arpl
jmp
push
mov
pop
sar
mov
into
rolb
sbb
rcrl
movsb
jecxz
enter
jl
aam
sahf
cltd
xor
sub
add
nop
cmp
mov
dec
sbb
dec
xlat
pop
dec
sarl
out
data16
pop
adc
rorl
mov
push
mov
jnp
jle
jg
aad
push
pusha
outsb
mov
test
xor
call
aas
push
mov
mov
inc
pop
xchg
data16
and
mov
sub
inc
xor
push
mov
xchg
inc
mov
mov
lret
pop
dec
inc
pop
clc
xchg
dec
lret
clc
cmp
jle
std
loope
divl
push
push
cld
lods
or
jl
push
jmp
faddl
scas
mov
push
adc
ds
lea
pop
and
mov
leave
arpl
jae
pusha
add
mov
mov
inc
mov
or
xor
inc
loope
data16
xchg
scas
mov
js
push
test
dec
aam
fiadds
daa
insb
mov
sbb
jl
pop
jbe
std
or
and
out
xor
add
popa
ret
pop
clc
sub
call
adc
and
mov
xchg
adc
ljmp
sbb
addr16
int
idiv
jg
pusha
hlt
xor
jge
in
ret
nop
in
xor
dec
mov
lret
mov
fadd
jo
pop
sub
data16
cwtl
movsl
push
jge
push
cmp
xorl
into
fldcw
mov
in
int3
ret
push
pushf
xchg
sub
mov
scas
int
outsl
out
imul
aas
xchg
jo
push
ret
xchg
adc
test
pop
pop
dec
jp
dec
xor
jp
sbb
ljmp
sub
jo
inc
pop
outsl
push
in
jg
in
inc
aas
sub
mov
dec
push
shll
dec
sbb
fstps
int
bound
mov
sbb
xchg
lahf
je
insl
pushf
rol
insb
and
sbb
outsl
mov
mov
sub
dec
aaa
dec
iret
sbb
pop
inc
das
out
into
xchg
repnz
xor
js
punpckhbw
or
sub
sbb
mov
divl
xor
test
mov
jne
addl
lods
dec
add
inc
jbe
xchg
loopne
sahf
cmp
and
mov
lea
sbb
ret
stc
dec
daa
enter
fs
cmp
out
sbb
cmp
arpl
adc
repnz
in
xor
inc
daa
xchg
int3
sbb
mov
insb
push
jmp
stos
mov
ret
adc
insl
jb
xchg
scas
lret
mov
pushf
xchg
mov
pop
stos
call
adc
sbb
gs
push
clc
filds
sbb
or
jmp
and
and
ljmp
push
mov
and
xchg
subl
xchg
loop
jecxz
xchg
outsl
and
push
test
repnz
push
cmpb
mov
lret
les
paddw
cs
xor
mulb
cmp
dec
das
icebp
mov
leave
add
popf
ljmp
mov
adc
inc
jno
lret
shlb
in
cmp
ds
imul
xor
dec
sbb
fmuls
jge
ss
cld
sub
sar
inc
push
enter
loope
add
sbb
xor
stc
mov
jae
sbb
movsb
mov
jbe
cmp
mov
mov
das
dec
fmuls
pop
push
in
pop
add
cltd
lcall
mov
xchg
out
jge
push
push
call
xchg
pusha
mov
jnp
pop
fst
push
xor
in
sbb
pop
jae
add
je
data16
mov
dec
and
das
xor
popf
std
mov
int
push
int3
test
adc
mov
adc
xlat
xchg
sub
jae
ds
sarb
sbb
sbb
popa
pop
pop
inc
add
filds
pop
push
jnp
negl
lods
jns
pop
popf
arpl
cmp
cmp
pop
bound
xor
enter
leave
or
movsb
in
cli
incl
cmp
shrl
lods
mov
mov
aas
or
push
mov
pop
fnstsw
cld
std
sbb
ss
cmc
nop
dec
pop
out
pop
and
push
iret
lock
scas
inc
xorb
adc
scas
dec
insl
push
test
sbb
cmp
out
xchg
lods
jbe
ds
imul
push
inc
xor
add
mov
in
mov
cmp
addr16
std
xorl
pop
ljmp
jbe
pop
push
roll
iret
popa
inc
lahf
lea
in
test
inc
mov
imul
clc
xchg
fwait
sbb
push
fimuls
add
mov
sub
lcall
add
jmp
leave
mov
dec
dec
inc
jne
call
xor
hlt
outsl
lahf
xlat
sti
jb
out
fdivs
arpl
aaa
push
push
mov
mov
sub
pop
scas
js
and
adc
pop
divb
fs
or
sahf
jge
mov
and
cltd
fisubs
mov
sbb
ja
sbb
and
xchg
or
inc
cli
cmpsb
cmpsl
pop
mov
movsb
jmp
cmp
testb
xchg
loope
loop
movsl
adc
fistpl
inc
fstl
push
push
add
jp
imul
mov
or
sbb
xchg
pop
jmp
jo
cmpsl
dec
lret
pop
jg
sub
xchg
mov
out
sub
pop
pop
dec
cwtl
jle
cmp
pop
imul
lret
push
pop
jge
repz
adc
push
inc
les
adc
ds
les
shl
adc
sahf
call
enter
cltd
adc
imul
js
xchg
sub
jns
stc
es
call
cmp
mov
inc
xchg
fisttpl
mov
push
aaa
xchg
or
xchg
cmp
cs
arpl
test
scas
andb
jnp
js
jae
push
out
rorl
das
pop
call
or
sbbb
inc
jle
inc
mov
cmp
sub
cmp
sub
mov
aam
mov
xchg
lret
test
dec
fldcw
dec
lea
xchg
mov
add
ret
xor
arpl
test
cmp
inc
dec
enter
fldt
mov
dec
jbe
adc
xchg
jmp
test
jp
push
xlat
into
lgs
jnp
or
sahf
popa
test
dec
xchg
outsl
lods
arpl
inc
sbb
aad
mov
ja
and
shrl
sub
movsl
pop
cwtl
int
sti
pop
add
xchg
inc
insb
ja
mov
push
lret
ss
imul
bound
out
loope
mov
or
adc
fcomi
mov
push
pop
mov
cld
xchg
mov
lea
jp
movsl
add
pop
mov
cmc
sbb
pop
pop
orb
clc
or
dec
divl
cmp
pop
arpl
jne
gs
insb
adc
pop
dec
xchg
imul
imul
lcall
inc
jo
adc
xorl
lods
lcall
sub
cmp
in
imull
add
aam
leave
and
push
lahf
cmp
cmc
decl
mov
jl
push
mov
movsb
xchg
push
inc
and
pushl
mov
add
icebp
push
jne
sarl
fdivr
sub
jecxz
mov
dec
test
cmp
xchg
xchg
cltd
inc
adc
adc
cmp
or
xor
stos
movsb
mov
pop
push
hlt
push
add
insb
stc
popf
mov
cltd
ret
movsb
jnp
cld
sti
sub
adc
jno
sub
out
adcb
add
shr
aam
xor
xchg
inc
loope
inc
sbb
scas
stc
rorb
cmp
mov
xchg
lret
mov
add
cmp
xlat
xor
lret
pop
test
ret
mov
les
push
es
pop
push
cwtl
movsl
cmp
adcb
lds
mov
loope
sub
pop
test
push
sub
mov
call
or
or
push
pushf
aad
push
push
in
push
pop
fucomp
inc
aas
enter
xchg
pop
cmpb
cmp
enter
cmp
ds
int
lcall
ffree
sbb
cmp
out
lods
jl
cmpsl
rcll
pop
repz
xor
sbbl
shll
and
cltd
pop
fldcw
or
mov
bound
dec
call
cmp
sub
xchg
and
lock
pop
xor
and
jb
mov
lods
sar
adc
cmpsb
aaa
mov
xlat
hlt
jns
stos
cmpsb
and
stc
adc
jnp
mov
inc
enter
addr16
push
inc
add
mov
jp
xchg
mov
in
mulb
mov
jle
jg
adc
fwait
mov
fsubs
fidivrs
or
cs
mov
popa
les
jae
in
push
xchg
mull
dec
int
shlb
test
jo
cmpsb
cmp
xor
in
scas
inc
dec
inc
pop
out
addl
push
inc
hlt
aad
test
les
pop
or
shlb
arpl
xor
ja
mov
repnz
add
fiaddl
rcpps
test
pop
imul
cmp
jle
out
mov
test
mov
pop
das
dec
mov
cmp
addr16
jl
pop
mov
push
mov
inc
lahf
call
xchg
jnp
mov
dec
adc
lds
dec
inc
mov
push
loop
add
or
jbe
mov
cwtl
std
and
insl
loopne
dec
mov
mov
xchg
cs
mov
push
jae
lcall
push
adc
stc
es
imul
mov
mov
pop
push
decl
jne
repnz
cmc
aad
sub
xchg
lret
jnp
push
mov
dec
call
and
mov
pop
daa
fldt
push
popf
dec
arpl
mov
addl
mov
mov
daa
lds
out
and
sbb
sbb
jl
pop
mov
xorb
jbe
jo
mov
fidivs
mov
out
xor
cmpsl
mov
mov
push
andb
outsl
push
outsl
es
nop
or
mov
jmp
inc
adc
cli
push
lret
cmp
outsb
shlb
js
adc
in
loop
lahf
out
adc
lods
ret
cmc
mov
mov
pushf
arpl
and
iret
mov
es
mov
dec
push
lds
movsb
mov
xor
cmp
movsl
push
pop
sbb
adc
sarl
popa
inc
sub
ds
or
lds
subl
fs
hlt
jns
icebp
les
int
mov
popf
mov
aam
mov
sti
ret
push
sbb
pop
out
adc
das
mov
fildl
cli
lret
loop
and
mov
fildll
jno
xchg
lgs
jo
push
cmp
test
and
pop
ds
lret
ss
lock
iret
or
mov
and
and
sub
add
xchg
xchg
hlt
mov
or
pop
aas
cli
or
jp
add
cwtl
lea
sub
stos
cli
dec
stos
add
jecxz
fsubs
push
push
popa
movsl
aam
cs
inc
mov
mov
mov
pop
add
repz
sub
sub
xchg
shl
ret
cli
push
pop
jecxz
sub
sub
push
popa
rcl
sbb
sar
and
sti
pop
push
add
dec
mov
xchg
mov
dec
in
rorb
insb
xor
pop
and
or
add
pop
push
adc
mov
jnp
popa
jnp
and
addr16
inc
add
subb
out
call
das
mov
loope
fidivrl
jecxz
push
mov
loop
ds
sti
test
inc
out
dec
loope
cmp
adc
inc
mov
inc
jmp
mov
popa
in
icebp
xlat
push
dec
ss
inc
jo
mov
or
in
mov
pop
fdivr
popa
push
add
dec
fs
push
mov
pop
aaa
add
mov
lods
call
fdivs
xor
ljmp
adc
cwtl
dec
aad
cmpsl
add
pop
subb
pop
decl
insl
sar
mov
cmpb
sbb
fs
adc
sub
jg
aad
cmp
outsb
cmp
cltd
lea
add
sbb
mov
sbb
pop
insl
jle
cmp
xlat
push
cltd
inc
adc
js,pn
dec
add
xchg
ljmp
or
cmpsb
inc
in
adc
nop
scas
rcrl
push
inc
test
iret
mov
jl
xchg
add
xchg
xchg
xor
lcall
jg
mov
loopne
jge
adc
push
mov
cmp
mov
sbb
or
add
xchg
movsl
push
inc
ss
mov
mov
lds
jno
jmp
ja
int3
inc
sti
roll
aaa
pop
fdivrl
mov
shrb
sub
pop
pop
push
xchg
pop
xorl
pop
push
jo
lahf
pop
jne
sub
fwait
pop
dec
repnz
inc
pop
rorl
lods
repnz
mov
fwait
adc
les
iret
mov
insb
shl
jge
aam
xor
pop
lea
xor
cmp
xchg
push
cmpsl
pushf
shrb
hlt
lahf
xchg
jecxz
jb
cmp
xchg
inc
add
mov
into
pop
mull
fimull
cmp
mov
lcall
cmp
jmp
mov
lret
sub
jl
xor
paddusb
mov
fcmovu
je
insl
pop
stc
sub
stos
pusha
push
sbb
inc
scas
pop
xor
cli
xor
pop
mov
loop
div
inc
cwtl
mov
adc
dec
fisubrs
rcl
cmp
ret
sub
sbb
repnz
push
push
cmpsl
sbb
push
in
arpl
decb
dec
cld
js
sub
push
jne
pop
cmpsl
jb
fwait
mov
push
mov
aas
and
cltd
sti
xchg
in
lcall
decb
sbb
and
jle
ds
cli
cmc
outsl
pushf
and
sbb
mov
inc
clc
jg
jne
insl
sahf
cwtl
dec
fwait
inc
ret
mov
jno
jo
sub
leave
xchg
das
cmp
dec
sbbb
jne
repnz
leave
hlt
sti
ffree
icebp
dec
adc
cmp
push
mov
hlt
cmpsb
mov
gs
adc
std
ret
jg
inc
lret
roll
push
dec
dec
insl
nop
lret
cmp
jp
hlt
pop
cs
add
js
add
jp
mov
in
cmp
cmpsb
rol
mov
xchg
dec
inc
sbb
das
ss
mov
xchg
shll
pop
loop
fstps
cld
sbb
push
inc
inc
add
jl
sbb
push
mov
fcomp
sarl
pop
mov
push
dec
sbb
rclb
into
jp
ja
sbb
pushf
scas
frstor
jae
fldcw
xchg
sub
stos
sub
dec
jmp
mov
cmp
xor
dec
jmp
adc
push
hlt
cli
out
cmp
mov
pop
cs
sub
popf
insl
pop
push
mov
cwtl
mov
xchg
or
or
adc
fs
inc
adc
jne
cltd
hlt
xchg
loopne
mov
lods
out
cmp
add
mov
sbb
in
mov
out
scas
and
std
rclb
pop
call
lcall
cmp
int3
push
insl
adc
lret
xchg
addl
inc
push
fildl
pop
fmulp
cli
mov
pop
js
insb
sahf
add
cmp
stc
insl
in
pmullw
sbb
jecxz
xor
inc
and
pop
fldl
add
loope
fs
sbb
xchg
push
cmpsb
and
dec
xchg
fsubrl
adc
sti
js
mov
jns
or
jb
hlt
xor
pop
xor
addr16
cmpsb
adcl
mov
lea
les
iret
das
pushf
stos
mov
xor
hlt
jecxz
jmp
jb
sbb
mov
subl
or
inc
jp
std
jmp
fcomps
cs
and
arpl
nop
inc
jp
jl
pop
sti
aas
xor
aaa
push
dec
pop
mov
popl
or
jp
iret
adc
xchg
jno
in
push
jbe
jp
scas
ljmp
jg
jp
cli
push
ret
mov
or
aas
std
jo
mov
dec
adc
out
shr
mov
stos
mov
bound
rcrb
xchg
ljmp
dec
adc
pushf
pop
in
mov
in
add
mov
and
sbb
xchg
icebp
stos
test
add
pop
das
fistl
push
jmp
test
in
and
ffree
ss
cltd
pop
test
inc
pop
ret
mov
call
repnz
dec
pop
les
mov
xchg
mov
pop
std
adc
addl
sub
mov
adc
dec
mov
xchg
pop
adc
add
jp
sbb
xor
dec
jl
test
inc
xchg
and
hlt
movsl
arpl
mov
cs
test
stos
jae
mov
add
cmpsl
fidivs
in
mov
mov
xchg
or
int3
mov
je
mov
out
out
loopne
outsl
popf
ds
test
sub
fmuls
in
add
fsubl
lret
dec
iret
cmpsl
aam
sbb
push
cmp
out
lods
sahf
test
inc
push
mov
push
fs
pop
push
rclb
add
mov
jmp
cmc
hlt
daa
add
stos
pop
sahf
or
inc
xor
sub
jp
movsl
cli
aas
jo
sub
int3
out
push
xchg
je
jge
clc
push
mov
repz
sub
aad
push
and
in
nop
pusha
shl
fwait
jg
pmaddwd
xorl
xchg
xor
pop
or
cmp
enter
push
pop
cmc
add
push
lfs
enter
imul
xor
dec
inc
lods
in
and
mov
stc
cltd
and
xchg
sbb
xor
repz
mov
rcr
pop
mov
sub
sbb
mov
stos
imul
xor
or
leave
sbb
xchg
pop
or
fs
sub
mov
repz
lahf
arpl
jmp
sbb
div
nop
popf
loop
bnd
push
dec
xchg
lret
sti
pop
cmp
repz
jnp
mov
out
aam
lret
pop
jnp
pop
xor
push
jmp
pusha
or
leave
xchg
pop
mov
imul
mov
pop
cmp
xor
lahf
pusha
jp
dec
movsl
sbb
sbb
aam
lahf
ret
shrb
scas
pop
push
inc
out
testw
jnp
jecxz
adc
insl
and
xchg
pop
xor
int3
daa
stc
mov
iret
out
cmp
testb
sbb
jnp
popf
out
mov
sub
dec
cltd
xchg
test
sarb
scas
inc
mov
popf
mov
push
divb
jns
xchg
cmpb
mov
jb
out
sarb
or
sbb
cmp
ret
sbb
shrl
mov
mov
mov
clc
icebp
ja
pop
jno
jl
add
fld
xor
jne
sbb
dec
loope
or
inc
xor
lahf
adc
insl
push
mov
jnp
inc
jle
sbb
fwait
push
pop
xchg
xor
out
and
add
scas
jmp
inc
int3
mov
dec
pop
call
xchg
add
inc
lods
add
jp
pop
push
shl
xchg
jnp
mov
sbb
dec
pop
addr16
push
je
xor
inc
imulb
push
add
es
push
inc
jl,pn
into
jns
rcrb
nop
and
jno
in
adc
or
sub
int
xchg
xor
f2xm1
cmp
cmp
xchg
mov
int
xchg
sti
dec
pop
mov
ficompl
insl
inc
sub
xor
or
scas
jmp
pushf
inc
shr
and
and
loope
inc
mov
push
cmp
jecxz
push
jmp
pop
out
inc
pop
jl
cmp
enter
pop
outsb
dec
les
mov
jg
inc
jne
pop
cmp
xchg
aam
jg
xchg
arpl
and
dec
imul
out
dec
loop
cmpsl
movsb
pop
loop
ja
enter
xchg
aam
pop
movsl
scas
dec
aad
les
dec
cld
mov
jmp
adc
mov
lds
repz
data16
xchg
stos
jg
xchg
std
arpl
hlt
fucomip
inc
inc
cmp
arpl
cld
cli
xchg
outsl
jns
sbb
cmpsb
cli
popf
mov
bound
or
repnz
or
add
or
xlat
pop
xor
imul
pop
mov
mov
push
jmp
lcall
ds
xchg
inc
popa
sbb
cltd
loop
imul
pop
cmpsl
or
lock
int
inc
sbb
or
fwait
data16
add
or
hlt
shl
mov
xchg
mul
int
pop
filds
cmp
sub
jnp
mov
inc
packuswb
add
fisubs
enter
daa
push
xchg
dec
or
mov
mov
cmpsl
adc
sbb
add
mov
hlt
je
push
test
or
mov
jg
pop
and
shlb
add
cmpb
dec
pop
sub
lret
pushf
loope
jo
jp
call
call
xchg
mov
sub
ds
loopne
jnp
sbb
lcall
adc
cmp
js
mov
pop
inc
jg
adc
push
pusha
aam
inc
repnz
xor
sub
into
jge
shl
jp
scas
jo
mov
bound
sbb
cltd
gs
rcrl
push
dec
rorb
stos
mov
add
and
shrl
and
ret
loop
je
rolb
mov
orb
inc
and
jg
les
fldl
jnp
gs
loope,pt
inc
sub
lret
push
cmpsl
data16
jno
cmpsl
lcall
lcall
out
lcall
and
scas
lea
dec
ss
inc
jmp
dec
sar
dec
inc
adc
nop
pop
rolb
adc
jae
lods
adc
xchg
fstpt
enter
mov
lcall
mov
adc
mov
fbld
cmp
fwait
bound
nop
loop
outsl
imul
out
jno
fsubr
daa
sub
lret
cmpsl
sbb
pushf
adc
xchg
mov
xor
pop
and
out
add
xchg
lock
fwait
sbb
jle
cs
dec
inc
loope
mov
lahf
xor
add
lret
and
sub
mov
outsb
vmread
cmp
in
bound
or
xchg
scas
xor
jp
std
add
push
rol
adc
sbbl
jne
push
push
pusha
mov
sbb
test
sbb
fstp
sbb
movsb
popf
and
pushf
pop
movsb
outsb
inc
pop
mov
sbb
cmp
repnz
or
lcall
mov
jmp
xchg
ds
test
jl
sbb
in
popf
push
push
out
loopne
fstpt
enter
mov
mov
stos
mov
rcrb
mov
loope
pop
and
rcr
add
adc
cmpsb
cmp
mov
sarb
mov
adc
shr
pop
dec
testl
or
jecxz
fwait
ret
rcr
loop
pop
push
cmpsb
fstpt
adc
inc
rorb
push
cmc
outsb
call
pop
pop
dec
push
cmp
out
adc
je
rcr
push
fs
in
iret
sub
adc
loopne
cmp
inc
cmp
cmpsl
test
xor
xor
sbbl
mov
cmp
mov
jl
pop
adc
out
int3
incl
mov
aaa
push
pushf
push
pop
das
data16
cmp
lret
push
and
or
pop
adc
mov
xchg
push
and
in
cmpsl
dec
sti
in
outsl
daa
es
pop
std
ret
hlt
test
mov
pop
push
outsl
sub
subl
dec
mov
adc
mov
mov
test
out
sbb
gs
cmc
xchg
cltd
jmp
mov
cmp
lods
sbb
jle
ficoml
xchg
xchg
fs
and
dec
cmp
fidivl
push
movsb
jg
mov
cmpsb
push
adc
inc
es
adc
sti
mov
push
cmp
notl
xchg
out
clc
xor
push
nop
cld
inc
cs
jno
dec
push
add
pop
je
xchg
stos
clc
inc
cltd
ret
add
mov
jle
test
jae
mov
iret
lods
pop
iret
jmp
or
loopne
std
stos
mov
sub
idivb
repz
mov
je
mov
and
out
adc
mov
cltd
xchg
xor
pop
test
cmp
inc
push
push
enter
fwait
mov
cltd
cmp
jo
fisttpll
xchg
popl
cmp
stc
push
sti
fucomip
push
fimull
mov
sbb
mov
mov
inc
into
gs
and
inc
dec
icebp
pop
bound
mov
in
pop
mov
test
std
cs
int
in
out
stos
hlt
fisubl
or
cltd
aas
fs
mov
dec
scas
movaps
xor
insb
push
dec
cwtl
out
jl
push
mov
sub
mov
jb
scas
mov
inc
popa
fs
mov
std
inc
mov
das
mov
dec
pushf
aam
push
pop
lea
dec
dec
cld
rcll
lahf
pop
shrb
dec
in
inc
or
pushf
or
fmull
lds
and
jae
sbb
sub
loope
mov
cli
loop
mov
out
push
scas
scas
jb
dec
repz
sub
lret
jle
in
cltd
aam
in
xor
stc
jecxz
insb
mov
lret
dec
push
add
jp
shrl
bound
dec
adc
les
push
les
out
inc
std
push
or
cwtl
sbb
lret
aas
pusha
call
adc
scas
rclb
cmp
push
in
cld
xlat
je
out
ror
lret
sbb
mov
jl
mov
dec
pop
mov
jmp
adc
mov
mov
push
cltd
inc
popf
dec
mov
rorb
ret
push
push
popa
test
shr
jo
hlt
xor
dec
loop
dec
pop
mov
cltd
in
dec
mov
scas
notb
dec
xchg
repnz
or
out
lret
sbb
ret
or
xchg
push
mov
imul
movsb
test
xchg
fstl
dec
pop
rorl
cmp
pop
push
rcll
sub
and
mov
sub
mov
sbb
lock
cmpsl
inc
jo
ficoms
outsb
jbe
sub
push
xchg
jp
sbbb
add
mov
push
jl
xchg
inc
lods
insl
sub
sti
jo
iret
cli
stc
mov
lcall
add
lods
and
int
and
lock
mov
pushf
mov
call
scas
out
dec
mov
adc
and
dec
insl
push
outsl
sbb
lcall
pop
sarl
pushf
sti
jg
fwait
sub
cld
mov
fs
push
std
loope
adc
sbbl
dec
dec
repnz
imul
cmpl
lock
or
std
xchg
mov
mov
cmp
repz
lds
stos
jp
outsb
std
jno
adc
in
movsb
push
out
lcall
and
je
aam
adc
mov
or
mov
mov
into
in
cmpsb
xor
jg
test
sub
mov
subb
loop
dec
mov
mul
jg
idivb
sti
push
mov
popa
lock
stc
jo
jne
lds
popa
sar
sub
sub
lret
leave
pop
sbb
add
ret
xchg
jecxz
mov
push
stos
sub
mov
stos
aas
jne
pop
xchg
data16
aam
mov
push
pop
mov
out
mov
insl
clc
inc
in
call
sub
aam
int3
inc
mov
aaa
icebp
pop
fidivs
pop
sub
cmp
arpl
fistpll
in
add
pop
and
dec
push
int3
aam
or
cmp
enter
movsl
sub
xor
jmp
inc
in
add
push
adc
shrl
insb
mov
or
jmp
xor
fidivrl
lahf
and
push
into
jne
push
dec
jae
shl
adc
test
jo
fs
cld
fadd
cwtl
lods
and
test
idiv
adc
les
inc
scas
inc
loopne
movsl
or
adc
jae
pop
push
les
ret
jmp
subl
cltd
fcompl
popf
pop
xchg
sti
out
dec
and
add
xchg
push
push
pop
jecxz
push
push
or
sbb
or
cld
mov
aad
push
cmpl
dec
lea
cmp
dec
mov
imul
and
das
pop
push
int
loopne
xchg
das
xor
xchg
lds
ja
dec
cmpsl
mov
lods
jmp
in
imul
leave
mov
into
cmc
adc
cltd
push
stos
std
mov
xor
push
and
or
push
ljmp
das
imul
adc
sti
inc
inc
addr16
jns
imul
add
inc
popf
add
repz
clc
pusha
stc
into
lret
pop
loop
fadd
mov
add
push
push
pushf
or
imul
add
cmp
cs
mov
les
dec
inc
js
jns
movsb
pop
or
jae
jnp
jnp
xchg
aaa
and
push
out
xchg
mov
stos
and
out
ds
mov
dec
lret
pop
lcall
cmp
cmp
push
push
out
inc
jns
mov
cmpsb
push
sbb
sahf
fstps
jo
push
pop
lcall
cld
xor
dec
insl
xchg
pushf
int3
mov
sahf
dec
jmp
in
iret
add
ret
ja
or
xchg
xchg
std
adc
mov
adc
xor
pop
sub
xor
fimull
lea
testl
mov
jl
pop
cwtl
push
pop
ja
sub
push
mov
sub
roll
mov
cmc
sub
dec
shll
fucomip
fld
outsb
xchg
out
int3
xchg
xor
mov
mov
adc
ds
imul
lret
mov
testb
fmull
insl
inc
or
ret
cmpsl
lock
flds
add
aam
jl
fdivrp
mov
sub
int
dec
sbb
mov
movsl
pop
xchg
sub
pop
int
xchg
mov
push
lcall
lods
sub
mov
push
xchg
mov
sti
mov
scas
xor
mov
in
push
test
and
dec
fmuls
xlat
inc
imul
insb
adc
ds
cwtl
push
and
test
sbb
xchg
xchg
dec
xor
test
inc
mov
or
jne
pop
mov
mov
lods
add
mov
add
daa
in
jecxz
arpl
icebp
popl
insl
jno
nop
jecxz
hlt
arpl
shll
sub
mov
xchg
leave
sarb
add
dec
sti
cmp
nop
movsb
jle
or
xchg
leave
push
icebp
pop
out
and
in
bound
adc
jmp
mov
scas
sub
in
in
pop
jecxz
dec
hlt
stos
mov
push
xchg
movsb
push
dec
lods
mov
push
pop
rolb
insb
xchg
dec
pop
jp
cmc
push
cmc
jg
xor
arpl
sub
mov
loopne
xchg
jp
adc
repz
ds
cld
and
xchg
pop
rolb
popa
mov
push
adc
into
push
incb
inc
movsb
fisubrs
dec
in
mov
xor
je
aas
imul
push
in
pop
lahf
sbb
xor
push
pop
mov
loop
adc
ss
dec
jl
mov
stos
mov
cmp
mov
dec
int
ljmp
in
sub
jae
inc
popa
dec
ss
add
divl
cld
add
xchg
or
jbe
sbb
mov
xchg
push
inc
loope
or
add
xor
sbb
jp
enter
add
and
aad
adc
orl
ljmp
lcall
ds
sti
sahf
fdivrl
inc
mov
int3
xchg
or
fsubr
sarl
ret
mov
jo
lods
ja
into
popa
idivl
push
jb
jns
inc
mov
imul
jnp
sarb
push
mov
fs
mov
icebp
dec
or
cmpsb
push
lret
mov
fcompl
push
idivb
adc
xchg
jp
lahf
mov
pop
cltd
fdivl
cmpsl
dec
dec
add
movl
jns
mov
fisubrs
jl
add
cmp
jnp
stos
push
int
and
xchg
xchg
cmp
stos
call
pusha
push
inc
addr16
sub
jne
inc
adc
ret
mov
repnz
and
pop
das
stc
lahf
test
jnp
add
and
add
xor
popf
int3
arpl
sbb
sbb
cltd
stc
jbe
xchg
ja
mov
iret
pop
gs
xchg
ja
les
rcl
jae
cld
and
push
out
dec
sub
xlat
in
or
lret
push
inc
inc
aam
icebp
cmp
jae
pop
push
ds
rcll
jb
and
add
inc
mov
sarl
xchg
pop
nop
mov
aad
mov
rcl
push
mov
rcrb
test
mov
mov
fiadds
and
or
imul
sbb
test
pop
cmpsl
jl
jns
addr16
dec
push
loopne
push
adc
xchg
jmp
push
sbbb
lcall
hlt
push
and
jns
out
addr16
popf
push
push
jl
jae
movl
cmpsb
pop
pop
xchg
inc
push
adc
dec
or
adc
jnp
dec
pushf
mov
xchg
jecxz
mov
mov
loope
push
xchg
in
lret
jb
cwtl
sbb
sbb
mov
clc
xchg
in
pop
js
sub
pusha
outsb
pop
xchg
push
call
pop
inc
push
inc
repnz
or
jg
dec
dec
xchg
jge
in
daa
mov
or
cmpsl
cs
repz
into
ja
into
cmp
stos
mov
mov
fisttpll
rorl
adc
inc
sub
ljmp
aam
rcll
sti
negl
add
out
sub
mov
cmp
or
lds
in
mov
dec
mov
sti
dec
test
fisubrl
push
daa
inc
xchg
fcompl
dec
stc
shll
mov
jl
pop
xlat
or
or
pop
mov
add
mov
jae
jle
clc
adc
cmp
jo
movsb
stc
adc
enter
ret
mov
xchg
in
or
mov
mov
xor
xchg
xchg
mov
imul
fidivrl
jmp
sbb
and
nop
xchg
cs
or
inc
pop
mov
pop
pop
xchg
or
out
fdivr
lock
lcall
fsubr
pop
xor
add
xlat
shl
scas
data16
mov
and
stos
arpl
dec
adc
and
mov
add
mov
mov
dec
ljmp
test
sahf
mov
outsb
repz
push
add
ret
and
xchg
cmp
mov
in
xchg
xchg
pop
xor
pop
shlb
or
sbb
pop
bound
out
es
push
mov
fdivrl
sub
xchg
xor
js
xchg
and
mov
jns
lds
inc
add
ja
mov
adcl
nop
xor
mov
fldcw
test
jnp
in
or
mov
std
cmc
fsts
fbld
push
dec
repz
outsl
add
test
int
push
xor
cltd
stc
sbb
jmp
adcl
dec
fcmovu
outsl
cwtl
jno
xchg
out
mov
cmp
jecxz
adc
mov
push
push
ret
dec
lcall
and
jae
mov
in
insl
pop
jmp
xorb
rcrl
inc
ja
sti
fldl
test
push
sub
mov
fldt
mov
lahf
lock
aam
arpl
and
xor
cmpsl
dec
cmp
and
test
mov
movsl
push
cmp
push
pusha
or
daa
jbe
decb
imul
jmp
test
leave
pop
cmp
repnz
xor
adc
js
sbb
xchg
ret
xorb
insl
add
shlb
mov
adc
data16
adc
daa
outsl
dec
fisubrl
fmulp
aas
cli
mov
popa
xor
jl
sbb
or
jnp
insl
cli
and
std
mov
cmp
jae
xchg
push
dec
leave
jnp
dec
mov
jne
fld1
pusha
imul
ja
test
fcoms
jo
push
cmp
mov
adc
jl
inc
adc
or
scas
mov
in
xchg
mov
test
xchg
inc
add
iret
xor
lret
icebp
scas
fisttps
aad
add
movsb
pop
fnsave
daa
std
jno
lret
lahf
mov
jmp
push
xor
insb
jp
xchg
fistps
push
jo
cmc
cld
fadds
push
imul
and
in
stos
stos
and
xor
aad
mov
push
jmp
adc
popf
jno
negl
xchg
sbb
dec
sbb
or
data16
mov
jo
pop
inc
push
jecxz
daa
orb
or
loopne
sbb
inc
nop
mov
je
mov
mov
int3
in
aas
pop
or
jecxz,pn
dec
and
pop
xorl
add
int3
push
sbb
insl
xor
mov
ret
cs
xchg
shlb
dec
mov
stos
clc
pop
sub
pop
inc
loop
int
ljmp
mov
sbb
addl
mov
xchg
adc
pop
movsb
mov
cmp
xlat
rcrb
rcl
mov
movsb
mov
fdivr
mov
mov
scas
fnstenv
xchg
ja
push
bound
dec
daa
lods
push
sub
pop
stos
xor
jae
sub
mov
mov
imul
xor
div
es
and
addr16
dec
sub
mov
cmp
ja
and
cmp
mov
shl
ret
lds
imul
sbb
stos
sbb
sbbl
cmp
dec
fcoml
insb
pop
cmp
rol
cmp
cli
popf
and
xor
test
add
loope
es
lret
mov
jmp
insb
add
lcall
int
into
out
pusha
out
mov
ret
inc
mov
pop
mov
cmp
push
into
inc
mov
out
dec
push
movsl
cmp
sub
pop
dec
lock
or
lock
sub
shll
popf
fidivrs
repnz
or
push
out
ret
mov
inc
sbb
in
xchg
jae
cli
addr16
arpl
xchg
cli
daa
xor
and
stos
sbb
loope
jmp
or
insl
inc
sahf
int3
movsl
into
dec
test
dec
xchg
outsb
sti
arpl
sub
repz
cmp
in
cmp
hlt
adc
inc
push
or
and
roll
loopne
mov
ljmp
inc
jecxz
add
imul
jo
in
jge
mov
dec
cmp
pop
inc
lea
stos
xchg
sub
jb
push
inc
cmp
pop
cli
inc
test
ja
jmp
push
pop
inc
pop
and
inc
hlt
imul
pop
stos
lret
out
stc
add
sub
xchg
aam
push
xor
les
push
test
xchg
mov
test
sub
pusha
movsl
sbb
notb
sub
orb
scas
jmp
xor
out
pop
dec
daa
js
fsubrl
cmp
int
popa
or
add
sub
xchg
xchg
pop
lods
out
loop
pop
cmpsb
clc
pop
jo
and
jns
push
rorl
mov
sbb
in
sbb
and
push
xchg
mov
in
fsubl
mov
and
subb
add
cmpsl
aam
scas
inc
ss
fsub
movsl
add
cltd
mov
out
out
sbb
or
adc
fsubs
cmp
xlat
sbb
in
ja
pop
pop
mov
dec
pop
pop
cld
jge
jb
jmp
add
xchg
in
adc
jnp
dec
lahf
dec
negl
add
lret
sbb
xchg
or
xor
mov
and
xchg
aaa
and
jmp
push
iret
hlt
xchg
mov
mov
repnz
hlt
stos
sub
jns
ss
mov
hlt
mov
cwtl
dec
xor
je
sub
js
pop
jno
sub
cmp
add
and
nop
lahf
stos
jmp
jns
mov
jle
stos
mov
mov
fldt
jnp
stos
fmul
cmpsl
mov
out
push
pop
loope
out
cmp
es
jge
cmp
js
adc
cmp
mov
insl
dec
test
stos
mov
cmpsl
lds
jecxz
fs
clc
cmp
inc
imull
cltd
dec
dec
cmpsb
sahf
testl
lods
test
dec
fdivrl
sbb
xchg
push
adc
out
or
and
fimuls
jle
mov
mov
mov
xor
inc
mov
lret
sub
hlt
cmp
mov
dec
pop
popa
sub
lock
xlat
bound
cwtl
movsw
andl
dec
sbb
scas
imul
ret
cmp
repz
roll
xchg
shlb
adc
cld
mov
sbb
mov
das
cmpsl
icebp
jbe
and
hlt
lods
dec
jmp
jne
push
xchg
je
cmc
mov
pop
cld
jmp
mov
ret
rolw
cmp
popl
aad
std
sub
dec
out
repz
sti
mov
cmp
mov
pop
mov
sbb
sahf
jecxz
not
cmp
add
imulb
fld
aaa
sub
test
movzbl
inc
sub
shl
mov
sbb
jae
bound
sub
jno
mov
adc
or
rorl
cmp
push
cmp
daa
out
mov
pop
in
or
push
pop
cmpsb
je
popf
pusha
repz
and
mov
addb
sbb
outsl
adc
int
inc
das
adc
ds
mov
xchg
dec
outsb
adc
addb
mov
gs
data16
lahf
ljmp
push
or
cmp
nop
in
lret
pop
mov
inc
dec
jno
jns
gs
jno
scas
scas
mov
mov
je
mov
loope
mov
fildl
dec
shll
jbe
xchg
or
lcall
jbe
and
mov
cmp
mov
negl
xchg
xchg
outsl
sbb
cwtl
addr16
sbb
fwait
lods
inc
popa
pop
pop
cmp
arpl
fdivs
mov
nop
sti
ret
pop
das
pop
pop
cmpsb
in
mov
lea
movsl
dec
shlb
loop
test
adc
push
ret
mov
inc
pusha
lahf
xchg
jge
adc
jge
push
pop
dec
mov
leave
xchg
setl
xchg
cmp
pop
pop
dec
scas
fs
cmp
sub
cs
push
loop
movsb
jno
push
inc
sbb
mov
inc
dec
popf
test
lea
aas
pop
mov
jge
jno
out
cmp
repnz
or
push
lcall
and
dec
out
add
mov
out
subb
iret
sti
js
flds
sbb
movsl
mull
xor
xor
nop
aam
jmp
cmp
jne
lds
sbb
jae
call
cmpsb
dec
in
insl
cmc
jmp
sbbb
repnz
xchg
adc
mov
inc
ret
jo
xor
addr16
cmpsl
popl
dec
xlat
ret
push
xor
sbb
or
push
pop
dec
cmpsb
cs
into
stos
mov
enter
leave
add
xlat
testb
fs
mov
pop
int3
mov
decb
cs
ret
dec
jo
data16
fmul
ljmp
test
pop
mov
cmp
test
fldz
pop
add
loope
sbb
ret
pop
and
mov
stc
dec
mull
jmp
xor
or
adc
mov
lds
xchg
stos
pop
push
movd
xchg
rclb
or
enter
jg
mov
ja
push
in
aad
enter
sub
fnstsw
in
pop
btc
movsb
pushl
ret
test
jg
shr
lret
pop
inc
pop
sbbl
loop
jmp
rcr
push
lods
sti
mov
out
mov
or
push
xchg
aaa
mov
arpl
mov
xchg
mov
fists
mov
jb
add
movsb
sub
fwait
dec
dec
sbb
js
lret
pop
sar
jbe
jmp
bound
das
pop
sar
add
adc
push
mov
push
fs
xchg
cmpsl
ljmp
jle
popf
push
mov
jne
sbb
push
jp
sbb
mov
in
leave
mov
rorb
jo
dec
cwtl
or
adc
lcall
pop
mov
and
fdecstp
jns,pn
inc
jle
inc
mov
pusha
add
mov
pop
mul
shrl
in
idivb
sub
xor
push
arpl
lock
xor
mov
subl
aam
push
cmp
insb
scas
lds
cmp
repnz
push
testb
dec
lea
ja
and
inc
cltd
adc
popf
adc
btc
xor
sbb
fcoml
or
pop
cli
push
subb
incl
cwtl
cltd
adc
and
xchg
scas
lea
les
out
cmpsl
mov
mov
daa
mov
cmpsl
icebp
ret
mov
dec
sbb
cld
cmc
popa
jge
or
rcr
sub
call
nop
jmp
outsb
ret
dec
jecxz
xor
push
xchg
aas
pop
cld
aam
or
rcrl
add
cmp
jae
mov
inc
push
dec
mov
arpl
jg
or
sarl
ret
dec
sub
push
mov
add
sbb
pop
xor
fucom
add
ret
jns
pop
or
mov
aad
sbb
jp
mov
sub
xchg
sbb
addl
mov
imul
mov
xorl
test
mov
jbe
adc
mov
int
addb
ffree
xor
jle
cmp
pop
mov
testl
push
or
stos
inc
jns
lret
cs
xor
das
xchg
jge
mov
mov
aad
mov
pusha
lcall
add
in
ss
pop
loopne
testb
jno
xchg
adc
lahf
push
inc
pop
cwtl
mov
cmpsb
stc
xchg
mov
aam
test
cs
pop
imulb
xor
xor
loopne
xor
mov
inc
pusha
sub
fwait
addb
fisubrs
inc
jb
jo
cmp
jmp
cmp
pop
inc
jecxz
xchg
ret
clc
adc
ss
dec
rolb
int3
pushf
iret
sub
loopne
adc
adc
sbb
es
mov
sbb
mov
mov
rcl
adc
into
mov
mov
pop
insl
or
ds
lea
fdivl
or
or
and
sbb
iret
test
jmp
mov
inc
mov
pop
mov
xor
mov
and
push
js
lods
or
xchg
mov
les
xor
mov
adc
mov
mov
repz
jae
push
xchg
aaa
testb
testl
aaa
sarb
popa
leave
sbb
mov
sub
in
fsubs
xor
mov
fwait
mov
in
outsb
andl
mov
pop
cltd
loope
mov
jecxz
es
pop
in
dec
ficoms
xchg
xchg
xor
ja
lcall
add
or
std
push
push
ja
add
jg,pt
push
mov
mov
mov
enter
adc
mov
push
mov
idivl
sahf
sub
mov
adc
cmp
mov
cmpsl
xlat
jmp
add
in
add
jno
mov
inc
ljmp
pop
popl
and
sub
jle
jno
or
gs
out
mov
movsb
jno
pop
jo
mov
cld
mov
in
push
pop
jp
nop
jle
sti
addb
dec
repz
icebp
pushf
or
clc
dec
mov
jle
rcr
test
cmp
bound
jecxz
mov
xchg
movsl
pop
mov
subb
lret
adc
mov
jnp
std
jnp
jmp
lret
bswap
out
dec
jo
dec
sub
cmp
xor
add
push
mov
lods
shrl
mov
mov
push
pop
inc
movsl
and
push
xor
push
lods
and
xchg
mov
rorb
jns
or
add
cmp
inc
adc
addr16
insl
fstpl
add
jg
stc
leave
and
add
adc
mov
daa
jp
push
outsl
je
mov
call
xchg
pop
mov
inc
test
ficomps
test
inc
das
inc
xor
or
rorb
idivb
fbstp
lret
jge
fidivrl
inc
cli
sub
sub
movsl
add
sbb
push
mov
int3
popf
lcall
jle
rol
lea
fmuls
inc
sub
or
inc
repz
lock
jno
popf
cmp
push
adc
sbb
push
xchg
sbb
push
inc
iret
or
jbe
enter
mov
ret
cmp
and
jbe
aad
xor
movsb
mov
cmp
push
je
mov
jno
stc
iret
cmp
call
push
ret
pop
adc
xchg
cmp
es
xchg
mov
xchg
fisttpl
sbb
push
movsl
pop
aad
dec
xchg
ljmp
jns
fs
sub
das
inc
add
mov
jae
jecxz
insb
push
dec
sbb
out
fldt
mov
lahf
stos
mov
jge
sahf
test
sbb
mov
hlt
je
out
divb
lahf
and
xor
mov
jmp
pop
push
out
bound
mov
inc
jno
cmp
test
ficoms
adc
and
icebp
mov
cmpsb
sbb
sub
cmpsb
fdivr
mov
xor
push
inc
push
xlat
add
xchg
cld
pop
pop
inc
les
add
cmp
mov
jp
stos
push
jo
inc
and
nop
sbb
cmp
or
test
int
sbb
inc
mov
push
aaa
xchg
repz
fcom
mov
mov
or
sub
sahf
jecxz
aad
fists
mov
cmp
adc
insl
pop
add
mov
sarl
cmpsb
sbbl
and
mov
jae
ljmpw
fidivl
push
aad
sti
mov
inc
push
mov
inc
sbb
cmpb
aas
subb
loop
xchg
sub
push
xlat
sub
jp
lret
jne
inc
inc
mov
and
out
icebp
sti
add
mov
or
cmp
lahf
in
jg
outsl
stc
sub
jb
mov
mov
repnz
dec
mov
in
popf
mov
in
arpl
ljmp
or
fimull
xchg
dec
sbb
loopne
mov
fdivr
push
lods
leave
int
mov
fs
lods
push
idiv
inc
int
mov
movsb
dec
imul
sbb
cmpsb
out
jge
push
sbb
in
sbb
pop
hlt
xchg
fnsave
movsb
sbb
jge
mov
hlt
add
or
push
scas
fs
adc
pop
sbb
out
adc
leave
lea
cmpsb
arpl
add
sbb
scas
xlat
cwtl
xor
out
jbe
testl
xchg
jp
cmp
push
sub
adc
mov
fcoml
je
push
xchg
pop
imul
fcoms
test
push
test
popf
outsb
jecxz
push
add
cli
test
sahf
lea
dec
sbb
xchg
dec
outsb
dec
jns
aad
popf
cmp
cmp
mov
repnz
push
subl
pop
or
mov
in
dec
xor
mov
outsb
cli
xor
sbb
xor
jge
incb
loope
movsb
or
repz
xchg
mov
int3
sub
dec
std
leave
xor
movsl
bound
add
xchg
jle
adc
add
test
pop
iret
mov
out
imul
data16
adc
push
sub
sub
shll
sbb
mov
push
cmpsl
and
cmc
cwtl
lods
pusha
mov
mov
lock
mov
dec
xchg
mov
gs
fnstenv
movsb
mov
cmp
dec
and
and
sbb
inc
imul
push
jnp
push
hlt
mov
inc
fmulp
cwtl
push
ljmp
aaa
loop
and
rcrl
out
insl
mov
outsb
xchg
mov
inc
cmp
ss
push
lret
fs
mov
mov
cmpsb
int
into
popa
out
xchg
mov
orb
sarb
sub
push
popa
lret
cld
dec
je
hlt
sbb
sub
lret
aaa
and
xchg
xor
and
stos
stos
pop
and
or
fmull
aam
mov
mov
add
ljmp
sbb
test
jbe
popa
dec
pop
sub
push
or
fimuls
adc
xor
xor
cltd
js
lcall
movsb
in
mov
jmp
adcb
push
in
mov
shll
mov
lret
adc
mov
mov
mov
outsb
dec
xor
dec
fistl
imul
fidivs
mov
inc
cmp
test
push
lret
std
xor
dec
test
lcall
outsl
add
add
movsl
jbe
mov
icebp
dec
cltd
mov
sti
popf
inc
jbe
xor
movsl
int3
pushf
hlt
jnp
mov
bound
loopne
sbb
mov
mov
pop
imul
pop
xor
cli
jmp
aaa
mull
into
clc
inc
shl
cmpsb
aaa
sbb
mov
fdivrs
pop
pop
xor
ficompl
bound
mov
rcrb
scas
lea
aaa
jo
xor
clc
mov
push
inc
add
jne
bound
jecxz
cmp
jle
dec
mov
f2xm1
decl
testl
mov
dec
pop
dec
inc
das
fistpl
cmc
lcall
jne
xchg
sbb
pop
mov
andb
lret
daa
shrb
xchg
fimuls
inc
pop
push
jae
out
add
mov
mov
in
mov
pop
jae
pop
fmuls
cmp
or
mov
cmp
push
das
adc
sub
mov
mov
xchg
mov
lret
sub
loop
sbb
int3
or
jmp
sbb
inc
sbb
sub
pop
push
rcrl
hlt
mov
mov
lahf
xchg
cmc
es
cmp
rolb
inc
in
add
lock
jno
xchg
dec
aaa
push
jmp
push
orb
and
adc
or
in
jecxz
push
pop
sub
js
stos
inc
push
fistpll
enter
jg
iret
cmp
jb
sbb
inc
pop
jno
push
mov
xchg
adc
or
adcb
cmp
mov
mulb
mov
adc
sbb
xor
mov
and
scas
popa
push
xchg
cmp
aam
arpl
add
cmpsl
push
inc
xchg
movsl
into
dec
xor
sub
dec
stos
mov
mov
sbb
pop
pop
cmp
pop
xor
jnp
add
add
cmp
int3
pop
and
addr16
out
xchg
adcb
adc
sbb
pop
cmp
sub
in
add
push
icebp
cld
cld
out
add
fldenv
aaa
fs
lea
and
mov
imulb
cs
insl
and
jne
call
jg
xor
rolb
jnp
jmp
and
jle
pusha
mov
xchg
js
jecxz
pop
lahf
rcll
push
dec
cltd
orl
mov
and
mov
sbb
mov
jecxz
ja
in
push
bound
insb
pop
sbb
jmp
pop
dec
jae
loope
inc
ja
mov
inc
mov
pop
inc
jle
aam
pusha
push
mov
nop
fs
add
and
sub
loopne
add
bnd
out
mov
xor
popa
dec
push
cltd
or
ds
jno
adc
lcall
add
outsl
sub
or
out
push
rorl
int
sub
fcoms
ds
pushf
jnp
push
fsubs
or
sub
pop
stos
push
mov
fsub
cmp
cltd
add
and
test
cmp
xchg
xchg
push
push
push
jae
mov
mov
inc
dec
ja
cmp
push
pop
adcb
daa
pop
mov
cmpsl
sti
int3
iret
out
xor
pop
dec
push
cmpb
xchg
cmc
pushf
jmp
negb
jne
mov
jno
inc
xchg
xchg
insl
std
in
enter
mov
enter
call
and
push
ljmp
iret
push
mov
std
test
dec
add
mov
pop
xor
lods
push
mov
add
mov
push
loopne
icebp
outsl
jo
jp
inc
cmp
lods
jle
jne
adc
sbb
mov
sbb
push
movsb
pushf
lods
push
mov
sbb
mov
das
add
jae
mov
scas
inc
or
sbb
mov
not
out
push
clc
pop
dec
sbb
push
mov
jg
push
mov
xlat
mov
leave
sahf
es
mov
test
mov
lahf
cmp
mov
cs
cmp
std
ss
fstpl
add
mov
pop
add
aas
mov
mov
icebp
shr
lahf
xchg
or
fiaddl
popa
pop
xchg
ffreep
sbb
bound
outsl
sub
xchg
scas
xor
scas
dec
push
stos
mov
and
dec
add
pop
xlat
cmp
inc
jmp
adc
jne
cwtl
mov
sub
lods
ja
popf
adc
jecxz
add
cmp
mov
lock
addl
out
jmp
dec
sub
sub
pushl
cmp
test
push
inc
or
sahf
repz
hlt
lret
into
enter
mov
or
mov
out
sbb
cmpsl
pop
aaa
jmp
push
inc
mov
jno
cmpsl
push
inc
push
inc
mov
loopne
jno
arpl
cmp
cmp
andb
stos
mov
jg
xchg
jb
jmp
mov
lds
int3
dec
shlb
adc
aad
mov
inc
outsl
dec
daa
daa
mov
or
pop
les
mov
rorb
inc
or
inc
xor
add
lret
out
pop
scas
sub
mov
out
mov
and
push
mov
xchg
enter
xor
in
fidivs
and
push
or
mov
in
jecxz
lcall
and
adc
jb
jge
imul
jmp
xchg
inc
aaa
icebp
movsb
es
pop
adc
mov
loopne
or
xor
enter
ss
call
or
dec
push
mov
dec
insb
mov
loop
sbb
in
call
xchg
rcll
scas
dec
loopne
loop
inc
out
aad
mov
xchg
pop
cld
xchg
or
cmpsl
pushf
je
mov
adc
jmp
aad
sbb
decb
shll
pop
mov
dec
adc
adc
and
adc
sahf
loop
repnz
jl
ds
push
fidivs
jns
pop
and
cmpsb
lea
sarb
frstor
iret
push
mov
pop
sti
mov
inc
and
push
cltd
or
xor
cmp
faddp
xor
shrl
std
lret
inc
and
sti
add
xchg
or
cmp
test
jno
mov
rclb
imul
lcall
fwait
jecxz
outsb
xor
xchg
push
mov
fwait
mov
je
xchg
xor
xchg
push
add
ja
test
inc
mov
les
pop
and
jp
ret
jo
dec
daa
cmp
adc
das
in
or
leave
xor
subb
push
ss
std
aaa
lret
icebp
pop
mov
xchg
jge
pop
mov
out
arpl
cmovae
or
out
mov
mov
sti
insb
mov
add
adc
inc
fimuls
inc
in
or
call
movsb
xor
fidivs
adc
inc
xor
inc
mov
shr
jno
and
push
and
clc
fs
xor
add
push
xor
scas
in
popa
xchg
test
jo
data16
mov
in
adc
aaa
sub
ja
sub
jmp
cmc
push
mov
iret
push
rcll
loope
imul
mov
sub
mov
je
sub
sbb
mov
pop
icebp
fadds
comiss
xchg
dec
add
adc
ret
jge
repz
lock
ficoms
movsb
stos
pop
insb
mov
in
jns
inc
add
lea
cwtl
cmovae
fnstsw
mov
or
inc
xchg
xchg
or
mov
adc
mov
hlt
stos
lea
sbbl
fldcw
out
stos
mov
mov
and
lea
inc
outsb
rclb
pop
mov
sub
push
pop
dec
jecxz
push
lods
insl
cmc
in
inc
push
popa
and
shlb
dec
add
nop
movsl
cld
xchg
dec
js
cld
xchg
push
dec
xor
scas
out
stos
push
sub
add
fcompl
xor
xor
fs
aaa
mov
add
xchg
icebp
jo
xor
fimuls
lods
lret
cli
fdivs
mov
mov
nop
lock
ret
daa
popa
mov
mov
push
hlt
adc
sub
mov
dec
ja
addr16
jp
jno
cli
cmc
iret
push
pop
dec
lods
lods
andl
xlat
push
mov
das
sahf
fistpll
mov
sbb
std
aaa
xchg
xor
inc
push
pop
push
cld
loop
mov
mov
push
aad
shll
cmpsl
insl
fmulp
jle
clc
push
cmp
mov
lret
shr
lods
cld
mov
ss
idivl
mov
outsb
jbe
push
sbb
dec
pop
jae
std
ffreep
cld
int
aad
filds
pushf
jle
pop
mov
jle
pusha
sub
mov
mov
sbb
movsb
mov
or
add
in
mov
inc
fists
pop
pop
cli
mov
pusha
push
push
or
dec
pop
nop
push
lcall
pop
mov
loopne
sahf
mov
xor
or
fimuls
xlat
cmpb
xor
pusha
scas
fdivrl
mov
add
mov
cltd
sahf
xchg
pop
cmp
leave
inc
es
push
pop
enter
out
sub
jns
cmpb
les
pop
shll
cmc
adc
push
arpl
insb
add
xor
dec
fs
ss
push
aam
mov
pushf
xchg
bnd
xlat
mov
push
fbstp
pop
push
jb
mov
xchg
movsb
es
cmpsl
pop
mov
addr16
sub
insl
inc
test
mov
imul
pusha
pushl
mov
aas
ret
clc
inc
mov
mov
pop
sbb
pop
mov
pop
shrb
fldt
notb
cmpsb
or
inc
jg
jns
xchg
sub
pop
mov
cmp
sahf
popa
test
pusha
aam
mov
enter
dec
cld
pop
sbb
push
add
xor
movsl
movsl
xchg
lods
test
cli
pop
movl
adc
dec
fsubs
lods
ljmp
adc
pop
pop
push
or
lds
adc
mov
int3
ljmp
adc
mov
daa
dec
popf
addb
jno
adc
mov
loop
cmp
int
pop
xchg
insl
in
adc
fildl
inc
imul
adc
xchg
sbb
or
sub
xchg
lds
test
and
jl
sub
cmp
or
insl
inc
push
adc
or
xchg
pushf
mov
clc
mov
scas
out
mov
js
jp
testb
cmp
adc
mov
jns
xor
sub
pusha
scas
fldl2e
adcl
or
lds
mov
inc
or
out
cmp
add
lds
cmp
mov
repnz
pusha
js
enter
jge
ss
enter
sub
add
mov
repnz
int
outsb
and
push
adc
sbbb
mov
sub
or
call
inc
sbb
cmpl
popf
or
cld
repnz
xor
sarb
push
cli
je
ror
push
je
mov
add
inc
insl
mov
movsb
cli
inc
inc
lods
loope
push
sti
inc
in
pusha
cmpsb
lock
int
imulb
or
mov
shrb
push
dec
js
cld
push
les
aaa
test
sahf
and
cmc
pop
mov
movsl
adc
xor
ja
stos
mov
xor
aas
imul
imul
xor
mov
dec
arpl
adcb
push
pop
loopne
jg
out
jb
cmp
pop
adc
jne
adc
leave
sbb
int3
mov
dec
iret
fidivrs
sub
adc
add
ret
cmp
inc
sub
jl
xchg
lahf
fldl
cmp
dec
jp
push
shll
popf
sbb
pop
ja
scas
adc
ss
push
test
push
ss
mov
pop
je
ljmp
push
cmp
fistps
push
and
sub
stc
mov
add
imul
rcll
cli
out
imull
loop
scas
push
fwait
cmpsl
loop
lahf
or
and
pop
xor
sub
sub
or
ret
pop
mov
clc
dec
fidivrs
push
xchg
mov
outsb
jbe
dec
fists
push
mov
jmp
loopw
xchg
sbb
shll
out
sub
inc
mov
inc
lock
pop
push
or
push
cld
jbe
and
test
loope
int3
outsb
xchg
sbb
jmp
insb
jmp
dec
es
push
stos
cmc
cmc
xchg
mov
sub
sahf
xor
sbb
xchg
leave
mov
jno
mov
and
inc
mov
movsb
test
and
sub
jae
dec
hlt
loopne
aad
pop
stc
push
mov
sbb
fimuls
inc
rorl
mov
cmpsl
aaa
or
outsb
pusha
je
fcomps
popa
mov
out
ljmp
push
push
jae
int3
mov
jmp
outsb
shlb
mov
sbb
adc
cmpl
mov
cmpsb
loop
dec
cltd
std
mov
jg
push
pushf
mov
shll
adc
aam
sahf
lret
push
mov
fnstsw
mov
dec
adc
mov
and
cmp
cwtl
xchg
std
cmp
mov
into
test
insb
aas
fimuls
test
test
xor
lds
cmc
movsb
fstps
add
lds
mov
pop
pop
adc
pop
jne
bound
cmp
or
mov
dec
push
push
push
jge
pop
movl
mov
pop
cs
jmp
inc
orps
xchg
xor
call
loope
js
xchg
aas
mov
push
test
and
out
shll
loop
xlat
sbb
in
mov
cmp
filds
out
aad
test
clc
push
push
fs
repnz
cmp
mov
cmp
push
out
stc
fsubl
data16
cmp
mov
nop
push
push
push
into
mov
sbb
mov
iret
test
dec
addb
pop
cmp
mov
pop
cmp
dec
add
ss
movsb
addl
cmp
hlt
jae
fnstsw
jmp
and
cmp
and
sbb
out
lret
jne
popf
jae
sbb
inc
sbb
scas
xor
test
cltd
dec
inc
lock
push
and
div
mov
ret
shl
imull
lcall
arpl
repz
shlb
and
sub
sbb
sbb
mov
mov
sub
inc
or
jp
mov
add
mov
ds
repnz
pusha
es
or
jno
jns
imul
push
adc
imul
add
xchg
lods
xor
sbb
dec
hlt
testl
xchg
cmpsl
in
cwtl
jnp
insb
or
pop
mov
cmpsb
dec
rorb
push
push
lcall
mov
sbb
mov
mov
scas
adc
fsts
test
je
mov
fldl2e
inc
or
call
xchg
sub
jae
mov
jo
pop
notl
in
and
xlat
outsl
lret
loop
mov
add
lret
pop
sbb
inc
cltd
and
test
mov
fs
inc
lds
lret
shl
and
aaa
jo
dec
and
adc
inc
loopne
into
push
ds
sub
xor
mov
mov
lcall
jo
jno
int
loop
out
and
adc
xor
aaa
mov
fisttpll
shlb
xor
cmp
aaa
test
sub
xchg
je
insl
shll
pop
cwtl
push
imul
lods
sub
icebp
lahf
fstpl
fwait
push
inc
dec
mov
fimuls
fnstsw
bound
loop
mov
gs
or
out
aad
into
loope
add
sbb
cli
aas
cs
daa
inc
bound
lahf
mov
or
ret
mov
jl
je
mov
or
adc
clc
push
lods
mov
inc
adcl
aad
lods
daa
sbb
xor
pop
mov
daa
inc
gs
shr
andb
leave
mov
les
fstl
and
mov
inc
out
xchg
xor
ret
cmpsl
in
loope
daa
sub
pop
dec
popf
loop
lcall
in
mov
pop
test
xacquire
clc
ljmp
push
std
in
or
arpl
jne
cmp
mov
test
mov
cltd
cld
push
cwtl
sbb
xor
mov
push
jns
cmp
pop
outsl
xchg
and
fcoml
ficomps
and
aas
cmp
mov
xchg
xchg
jne
adc
lcall
add
and
int
lods
dec
mul
push
ret
shr
shrb
xchg
scas
bound
sbb
out
pusha
es
lret
call
cmpsb
sarb
push
cmpsl
cmp
std
fiaddl
into
and
push
xor
push
pop
aam
subb
pop
stc
jecxz
lahf
pop
out
loop
out
arpl
mov
das
sahf
pop
mov
lods
outsl
sbbb
imul
in
pop
or
pop
push
rcll
test
mov
andl
dec
and
sub
subl
loope
jmp
cmp
xor
aas
repz
aaa
bound
add
lahf
movsb
pop
cmpsb
cmp
not
mov
fcompl
fldl2t
jo
loop
lock
js
or
jns
mov
push
and
into
jno
mov
jbe
push
push
cmp
adc
inc
add
xlat
rorb
mov
enter
decb
ljmp
sbb
inc
adc
dec
push
ror
lret
in
roll
stos
jmp
push
mull
fisubrs
and
cwtl
es
adc
add
xchg
mov
repnz
push
cmp
outsl
inc
and
add
mov
pop
sar
xor
loope
xor
adc
mov
jl
jbe
mov
ljmp
out
sub
loope
out
mov
das
mov
inc
jg
es
adc
ret
sub
call
push
or
xor
cmp
data16
ja
pusha
icebp
add
jg
and
push
pusha
into
cmp
inc
mov
add
mov
loope
xchg
push
add
addb
mov
xchg
jnp
cwtl
push
cmp
lcall
sbb
mov
and
push
pop
fucom
mov
xor
sbb
dec
inc
adc
lret
bound
out
inc
pop
adc
jo
mov
and
mov
into
or
push
mov
jno
xlat
jecxz
ss
mov
xchg
adc
lcall
jecxz
cmp
cmp
outsl
xor
dec
loop
rcrb
cld
xor
iret
xchg
pusha
xchg
test
fcmovne
mov
in
mov
lea
dec
loop
mov
sub
jnp
jns
ljmp
stos
mov
push
mov
imul
imul
popa
jb
or
into
adc
fsubrl
stos
mov
sarl
and
dec
or
inc
and
sub
pshufw
lret
pop
sub
movl
xchg
popa
mov
dec
push
negl
cli
adc
xorl
xchg
push
or
dec
gs
mov
mov
mov
jmp
mov
xor
mov
mov
ljmp
mov
dec
push
ret
dec
xor
push
inc
shlb
dec
mov
call
shrb
popf
push
cmpsl
fwait
adc
data16
cmp
mov
inc
xchg
pop
dec
cmp
shl
mov
popf
icebp
inc
daa
nop
lcall
push
inc
hlt
jmp
xor
mov
jle
outsb
xor
fs
adc
ret
inc
inc
mov
adc
fsubs
out
lods
popf
mov
add
inc
cltd
cmp
in
fcompl
outsl
pushf
and
fbld
xor
cmp
sbb
lret
pop
shrl
out
stc
mov
dec
data16
ss
add
or
sahf
in
gs
pop
ret
popf
cmpsl
mov
xchg
push
decb
cmc
std
jnp
inc
mov
movsl
xchg
cmp
loop
sbb
push
lds
sbb
xor
inc
iret
push
sub
mov
jmp
mov
jnp
add
enter
loope
rolb
mov
dec
mov
jae
xor
cmc
cltd
sub
push
aaa
pop
enter
sub
dec
imul
in
ja
dec
ja
push
mov
mov
pop
out
loop
fisubl
jge
test
fs
dec
pop
mov
mov
ljmp
outsl
mov
rolb
mov
lcall
push
dec
dec
xorb
and
cmc
repnz
mov
cmp
dec
mov
dec
hlt
adc
xor
fldenv
sub
fs
bound
push
std
inc
adc
xchg
dec
inc
pop
gs
dec
xchg
jnp
add
out
mov
cs
xchg
and
mov
mov
icebp
mov
xor
jp
add
mov
lahf
jo
rcll
mov
enter
rcr
divb
pop
lds
mov
push
hlt
jae
mov
repz
xchg
sbb
adc
sbb
mov
and
popf
test
or
lret
lret
dec
mov
pop
jl
or
test
fimuls
cmp
jae
xchg
in
xchg
sahf
add
adc
push
flds
cli
fstl
xor
stc
out
jnp
jle
cmp
mov
adc
test
fisttps
pop
std
ret
out
mov
das
xchg
pop
add
imul
dec
icebp
ja
inc
cmpsb
fcomp
sub
hlt
mov
dec
jo
adc
jecxz
dec
jl
jg
add
dec
scas
stos
mov
imul
sub
pop
xchg
mov
sbb
fsts
inc
in
enter
out
out
mov
pop
gs
cmp
mov
cmp
shrb
and
lcall
pop
fwait
repnz
cld
mov
mov
decb
pop
push
shlb
loopne
cltd
ficomps
pop
loopne
add
xchg
sub
scas
jmp
push
or
mov
lret
jae
jns
shll
cmp
shlb
aas
ja
and
popa
gs
fistl
aaa
int
jns
or
stos
lods
movlhps
fsubrl
loopne
sarb
xchg
sahf
pop
add
movsl
jns
loop
sub
inc
mov
sti
repnz
pop
shrl
push
out
mov
pop
adc
leave
movsl
mulb
sahf
mov
or
jp
push
ljmp
lret
lods
cld
sti
out
stc
dec
adc
sbb
mov
cwtl
jp
scas
xchg
in
es
push
sahf
lcall
xor
push
rol
sbb
leave
in
add
into
fldl
sarb
or
dec
push
pop
fwait
xchg
mov
push
ffreep
test
out
jl
sarl
xchg
cltd
gs
in
jnp
ret
mov
mov
fcomps
or
repnz
sub
add
pop
jl
and
ljmp
add
mov
rorb
or
sbb
xor
mov
inc
in
faddl
outsl
add
cwtl
xor
dec
outsl
dec
scas
test
popf
mov
cmp
iret
pop
jge
popa
pop
addr16
cmp
pop
scas
cmpsb
lcall
jbe
xor
mov
faddp
icebp
xchg
jbe
pop
inc
mov
dec
push
adc
cltd
out
in
lds
lea
aas
jno
in
dec
repz
leave
icebp
xor
push
xchg
scas
or
inc
adc
leave
mov
dec
xchg
and
mov
mov
add
and
leave
or
mov
mov
out
mov
push
sub
incb
dec
jae
mov
gs
shrb
xor
push
scas
pop
xor
leave
into
mov
xchg
or
mov
jns
dec
movsl
or
sbb
xorl
inc
add
adc
inc
in
jo
out
cmpsl
dec
xor
outsl
out
xchg
addr16
push
or
ret
pop
gs
shll
enter
out
dec
cmp
aaa
aas
push
paddb
cwtl
inc
imul
and
cmpl
jae
neg
lret
fs
cwtl
inc
xlat
jmp
adc
ljmp
sub
leave
sbb
and
mov
pop
or
mov
jo
int3
xor
mov
pop
push
les
push
mov
push
sbb
inc
aas
scas
rolb
xor
jl
scas
fildll
fnstsw
xchg
stos
mov
roll
ret
mov
test
and
jne
jae
dec
jae
imul
loop
mov
lahf
hlt
out
fisubl
or
push
fwait
sub
popf
mov
inc
les
das
inc
pop
mov
mov
mov
and
and
push
adc
adc
data16
jge
jne
push
test
jmp
daa
pusha
adc
push
jne
movsb
stos
cmp
xor
js
cmp
clc
cld
jo
aam
shrb
sbb
push
push
and
lea
dec
sti
mov
inc
sub
mov
fisttps
jg
dec
das
movsl
push
mov
adc
cmp
sub
lock
add
enter
pop
cmp
in
ljmp
jle
mov
cmp
lods
test
mov
in
shll
push
dec
push
add
inc
dec
pop
into
out
fnstenv
fstpl
lret
jae
iret
xor
pop
push
aas
lea
je
into
sbb
mov
test
clc
ja
push
xor
dec
cld
mov
sbb
cmpsb
out
je
inc
dec
add
cmp
mov
xlat
lret
or
je
repz
lea
enter
dec
cmp
ret
pushf
mov
daa
hlt
test
or
xor
cmp
pushf
push
or
jl
popa
cmpsl
fcoml
lods
dec
push
subl
xor
aam
mov
jbe
sarl
andl
ficomps
jnp
loope
and
cltd
xchg
stc
jne
sbb
fcmovnbe
add
lods
mov
out
mov
mov
in
cli
mov
push
ror
test
sub
fwait
lret
jp
rol
andl
into
shlb
jnp
rorb
popf
inc
mov
fidivrs
loope
fstps
inc
lock
cmp
mov
scas
enter
lcall
sbb
out
icebp
mov
xchg
sbb
xchg
sub
fdivrl
sub
scas
aas
repnz
xchg
neg
jnp
aad
jge
out
add
stos
outsb
jmp
jns
sbb
mov
sub
jne
popf
sarb
jp
add
dec
mov
outsl
int
dec
testl
dec
out
inc
mov
int3
mov
mov
sub
jg
xchg
push
xchg
in
xor
ret
xor
and
pop
push
dec
call
mov
xorb
inc
xor
stc
sbb
fmull
insl
add
out
dec
or
inc
adc
dec
adcl
sub
fildl
les
add
aas
shlb
xor
xchg
pop
and
out
pop
and
and
push
aam
push
inc
les
repz
jnp
pop
and
xchg
sahf
mov
cmp
and
es
repnz
jne
lahf
jnp
pop
jno
cmpsl
pop
ret
mov
sbb
sub
nop
or
sbb
stc
das
loopne
ja
lds
cld
inc
dec
iret
fwait
icebp
sub
pop
and
sti
clc
cmp
iret
push
mov
test
je
adc
mov
das
jns
bound
cwtl
mov
push
push
out
stc
shll
addr16
or
cs
xchg
mov
inc
loopne
dec
xchg
push
lds
in
daa
arpl
cmp
mov
cmp
bswap
xor
sti
xor
mov
popf
daa
out
imul
add
xor
into
pushf
mov
mov
xor
pushf
sbb
out
lds
cwtl
ss
stos
jge
ret
mov
xorl
sbb
loopne
mov
loope
gs
aaa
and
mov
aaa
rcll
lods
outsl
repz
mov
dec
test
daa
mov
push
out
push
pop
in
cmp
pushf
add
decl
into
pop
loop
les
les
jg
shlb
fcmovnb
jae
mov
out
insl
push
mov
cmp
xchg
in
jnp
sbb
stos
pop
xchg
mov
xchg
test
jno
cwtl
outsl
lock
stc
cmp
rclb
xchg
and
in
les
ss
jmp
stc
in
imul
and
mov
push
mov
push
test
add
ss
movsl
orl
cmc
cmp
outsl
imul
test
sbb
xchg
std
std
xor
mov
xchg
subl
push
mov
xlat
jb
sbb
in
test
or
xlat
pop
xor
je
stos
aam
je
jecxz
cmp
addr16
movsb
mov
cmp
imul
dec
cmc
jns
adc
test
or
sub
xor
xchg
add
loop
sub
mov
outsl
push
out
and
gs
shll
repz
incl
and
mov
mov
aas
xchg
bound
fisttpll
cmp
fistpll
cwtl
pop
testl
jo,pt
pop
and
out
mov
cmc
mov
and
mov
rclb
pop
aaa
xchg
mov
push
push
aaa
pop
xchg
push
mov
into
loop
inc
adc
mov
into
mov
in
stos
or
popa
mov
rorb
repnz
imul
xor
loopne
in
repz
movsb
push
sbb
std
add
jl
loopne
push
cmc
adc
out
mov
ficomps
lret
arpl
nop
shlb
adc
xchg
add
rep
mov
or
push
fwait
dec
jle
lahf
mov
daa
mov
pop
rcrb
adc
mov
add
mov
push
scas
lret
sbb
push
mov
filds
std
dec
mov
jp
mov
mov
fidivl
daa
sbb
repnz
cmp
sbb
ret
sbb
inc
nop
or
mov
adcl
xor
inc
adc
lahf
push
and
stc
imul
pop
xchg
scas
mov
in
out
fstps
aad
fstpl
in
fidivs
dec
lahf
test
std
leave
fs
push
sbb
iret
jno
mov
outsl
ja
xor
cmpsl
add
les
fdivrl
lcall
or
xchg
icebp
adc
lods
fcompl
jecxz
cld
negl
mov
out
sub
and
fdivrs
cld
loope
inc
pop
jmp
imul
sub
pop
xor
test
aas
outsl
gs
ds
js
dec
imul
pop
ja
es
shlb
and
aas
sub
es
inc
sbb
jle
les
outsl
in
xchg
loope
mov
stc
out
daa
jne
rorl
das
mov
lea
mov
and
mov
sbb
pop
push
notb
sahf
and
dec
push
mov
ss
movsl
popf
enter
rcrb
imul
gs
lock
enter
push
xor
push
insb
mov
shll
add
ficoms
aaa
xlat
shll
daa
es
jg
push
sahf
mov
daa
ljmp
insl
popa
push
mov
fs
jns
int3
sbb
sub
pop
popa
sti
cwtl
jecxz
and
cmpsb
nop
test
scas
sbbb
cmp
mov
rcrl
push
js
xor
lea
out
add
arpl
dec
sub
cmpsl
int3
mov
ret
lds
pop
mov
adc
aas
jno
or
dec
xchg
out
outsb
add
dec
sbb
inc
pop
es
cltd
pop
sub
mov
test
bound
int3
xchg
jae
jl
inc
sbb
adcb
ss
dec
add
daa
in
inc
mov
cmpsb
mov
xor
icebp
repnz
sub
lods
mov
push
sub
xor
inc
imul
bound
cwtl
add
adc
sbb
inc
orb
test
repnz
sarb
test
nop
sub
and
lret
xchg
inc
pop
mov
test
push
ljmp
cmp
mov
mov
sbb
cmpsl
mov
in
pop
popf
inc
push
dec
std
fwait
ljmp
stos
test
out
sub
pop
add
fwait
daa
sub
sarl
stc
cmp
in
add
pop
push
ret
sbb
push
mov
adc
test
jnp
imul
inc
adc
mov
mov
bound
push
push
outsb
loope
or
dec
pop
repnz
pop
cmp
mov
jg
movsb
pop
xor
ss
add
push
cmpsb
movsl
mov
sbb
mov
movsl
ret
mov
lcall
ljmp
std
sbb
sbb
out
rcrl
dec
sbb
or
fstpt
dec
mov
adc
mov
dec
push
mov
je
mov
lretw
dec
outsb
inc
adc
out
or
mov
jbe
pop
test
sub
lahf
sub
sbb
push
divb
imul
aad
imul
daa
loopne
ror
jo
sbb
xor
test
lock
sahf
outsb
adc
adc
popf
pop
fwait
mov
push
push
push
mov
popa
add
pop
jg
cltd
jp
adc
sbb
repnz
mov
in
je
push
rorl
in
test
adc
jbe
dec
jl
inc
adc
or
fmull
and
sbbb
mov
push
mov
mov
out
or
mov
daa
xchg
rcrb
mov
push
mov
sbb
adc
aad
btcl
inc
inc
dec
xchg
iret
mov
mov
les
xor
popa
and
mov
cli
or
lods
mov
sub
xchg
jbe
ffree
hlt
rolb
jnp
pop
test
push
or
add
sub
outsb
sbb
or
fs
clc
nop
arpl
call
add
outsl
mov
arpl
call
adc
sbb
cmc
in
inc
or
int3
push
sarl
mov
pop
repnz
mov
push
outsl
mov
bnd
pop
in
xor
inc
cld
and
inc
int
xchg
xchg
out
xchg
scas
stc
lds
int3
mov
and
xchg
mov
xor
sub
add
mov
fiadds
push
fstps
leave
pop
shrl
push
inc
and
or
std
mov
insl
xchg
int3
lods
xchg
bound
lods
icebp
jge
cmpsb
push
fmul
pop
pop
outsl
pop
mov
inc
fdivs
int
ret
sbb
dec
and
imulb
mov
pop
jge
test
std
addb
pop
jne
js
jo
outsb
pop
xor
movb
rol
adc
int
jp
push
push
sub
xor
insl
push
scas
call
sbb
data16
mov
add
imul
inc
sbb
push
rcl
jle
push
int3
popa
push
aas
cld
movsb
or
test
pushf
jmp
or
mov
scas
rcl
jo
inc
ljmp
pusha
xor
mov
icebp
pop
mov
orb
and
shrl
out
daa
or
push
xchg
daa
mov
lret
fisubrs
cmp
push
cmp
adc
mov
enter
push
cltd
testb
testb
xchg
lds
cltd
or
cld
adc
lods
sub
jb
sbb
loopne
jle
lock
ficomps
mov
or
aaa
ds
jl
aas
sarl
aaa
cmp
inc
push
mov
jge
test
adc
into
fdivs
mov
aaa
xchg
dec
push
cmp
int
stos
loope
in
inc
lret
cmpsl
jae
add
lret
xor
aas
and
mov
pushl
or
loopne
aam
rol
mov
add
sub
sbb
fisubl
enter
insb
add
dec
add
stos
jp,pt
leave
lods
clc
stc
push
pushf
ret
cmp
ffreep
test
cmp
and
sbb
or
lcall
imul
notl
mov
in
ror
comiss
test
outsb
mov
aam
lds
popf
inc
pop
jmp
xadd
lea
sbb
sti
add
inc
int3
lock
push
and
xor
addl
rclw
mov
ffree
pop
and
ss
pop
inc
or
or
xor
repz
cmp
add
loop
xchg
push
lahf
xlat
mov
lds
adc
stos
loopne
subl
gs
sahf
dec
dec
adcb
push
push
xchg
jno
jle
stos
push
inc
sahf
movsl
sub
nop
xchg
test
inc
or
mov
movsb
cmpl
mov
jl
push
jecxz
mov
mov
cld
mov
and
xor
sbb
mov
sbb
ja
pusha
call
or
adc
movsl
push
imul
fwait
jmp
or
push
icebp
inc
or
push
sbb
fucomip
fs
mov
xlat
sub
jge
pop
xor
test
jnp
scas
push
out
cli
xchg
and
mov
dec
gs
push
adc
das
inc
lret
cmp
lret
push
outsl
shl
mov
mov
das
nop
add
cmp
xor
mov
xchg
ja
mov
pop
imul
outsb
fstl
jmp
cmp
inc
sbb
add
or
sub
hlt
jne
push
shlb
xor
sbb
cltd
add
cmp
btc
push
aas
aaa
pop
xchg
cwtl
insl
orl
cmp
jp
mov
je
dec
mov
jmp
xchg
and
cwtl
das
and
jp
out
sbb
out
clc
testb
xchg
mov
cmc
aas
adc
pusha
ja
push
pop
xchg
jno
aas
addr16
sti
test
in
cs
out
int3
pop
ss
inc
add
testb
popf
jnp
stc
add
mov
dec
pop
inc
repnz
loope
cwtl
xor
in
push
fdivs
mov
jns
add
mov
loop
rcrl
ss
xor
scas
imul
fwait
pop
lcall
sti
mov
cmc
sbb
adc
shll
outsl
loopne
in
xchg
testb
cmp
ljmp
int3
popf
jnp
test
add
mov
mov
and
cmc
push
add
sub
sbb
out
icebp
sub
aad
pop
cltd
mov
dec
xchg
neg
add
adc
lea
fmuls
outsb
test
mov
nop
jp
jae
lret
jg
sahf
pop
add
cmp
mov
push
xchg
fldt
iret
mov
repz
scas
and
sbb
add
push
call
push
iret
xchg
push
leave
or
jo
je
xor
or
orb
out
jnp
sub
jecxz
andl
jl
dec
add
mov
sbb
je
mov
sub
adc
jecxz
jne
sbb
cmp
movsb
push
add
out
lret
iret
jge
shrb
bnd
ss
pop
cmp
notb
xchg
mov
cmp
mov
addl
inc
stc
in
stos
sti
outsb
adc
es
jp
add
test
ret
and
into
and
mov
xor
loope
jnp
xlat
cmp
or
adc
imul
or
xorl
inc
sbb
std
adc
lcall
and
mov
or
mov
mov
jecxz
and
lds
repz
push
jge
sbb
adc
mov
lcall
adc
pushf
and
cmp
and
pop
jp
xchg
into
jle
nop
xor
xor
fnstcw
or
popa
int
push
xchg
sti
jbe
and
push
shlb
enter
pop
ret
mov
cmpsb
subl
push
jmp
xor
aam
dec
mov
testb
dec
push
xor
out
xlat
pop
pop
cmp
sub
jge
dec
pop
leave
das
cmp
lea
pop
sbb
loopne
sbb
test
ficomps
add
pop
pop
xor
outsl
and
or
into
hlt
cmc
fistpll
aas
rcll
outsb
aas
mov
jl
cwtl
fisttps
test
add
lods
xchg
dec
sbb
mov
sbb
orb
and
mov
out
jae
dec
call
inc
inc
mov
test
jae
inc
insb
jg
daa
push
jno
aas
xchg
dec
fcomip
jp
imul
add
mov
fwait
out
mov
repnz
pop
adc
int3
scas
inc
jmp
in
int
dec
dec
sbb
loopne
cmpsl
movsb
int3
sub
into
jg
insl
adc
je
jp
mov
jp
jl
jnp
mov
sub
inc
cld
clc
fldenv
push
mov
xchg
ss
ds
pop
mov
data16
addl
or
pop
dec
mov
cmpsb
lahf
jecxz
fidivrl
fsubs
and
in
sahf
jge
inc
lds
fistl
cwtl
inc
push
dec
ljmp
test
mov
aad
mov
cmpsb
add
or
pop
inc
pop
lcall
add
sbb
cmc
pop
movsl
mov
add
add
lock
in
sub
mov
aaa
bswap
ja
fldt
insb
lahf
lea
add
aas
loop
icebp
lock
push
stc
xor
push
fucomi
mov
mov
or
jmp
ret
stc
xchg
mov
call
mov
add
push
js
mov
or
sbb
sbb
and
in
call
push
in
inc
inc
loopne
mov
sar
rcr
dec
ret
mov
sbb
push
je
loopne
cmp
and
or
shlb
sbb
sbb
or
stos
push
pop
leave
lahf
pop
mov
push
jecxz
addl
pop
fs
ja
aas
leave
pop
adc
add
sbb
gs
push
cmpsb
xor
push
psubw
sbb
add
jbe
js
icebp
les
mov
pop
xor
jnp
sbbb
dec
pop
jnp
hlt
add
pop
mov
pop
sbb
xor
xchg
add
leave
icebp
lods
jno
movsb
add
insl
mov
popf
iret
xchg
xchg
das
mov
xchg
aas
jbe
dec
in
cmp
movsb
es
jb
int
xchg
inc
xchg
fidivl
subb
jb
xchg
pop
aas
lods
repz
jmp
mov
mov
rcrb
popf
jge
lds
repnz
mov
cwtl
mov
dec
mov
xchg
test
cmp
xchg
jns
pop
adc
xchg
jmp
xor
fidivs
test
push
fs
cmp
icebp
jp
aas
jmp
nop
mov
test
mull
add
jne
test
loop
sti
in
fists
add
aaa
push
leave
shlb
out
dec
mov
add
shll
or
ret
adc
movsb
js
and
push
add
mov
pop
icebp
in
jae
mov
enter
insb
or
int3
pop
jg
cmpsl
js
dec
cs
jns
inc
nop
push
or
pop
lret
pop
pop
adc
pop
mov
jmp
fs
repz
or
xchg
addr16
mov
push
push
mov
xchg
gs
or
mov
xchg
inc
and
stos
cmp
mov
inc
test
sbb
mov
xchg
sbb
stc
and
fwait
into
cmp
dec
mov
xchg
xor
add
inc
or
xchg
outsb
je
and
inc
jmp
std
cmp
xor
pop
push
lods
inc
mov
icebp
imul
push
dec
jmp
xor
cmc
je
js
loopne
aam
mov
dec
or
dec
hlt
jle
mov
and
les
mov
adc
jp
mov
pop
aad
adc
sub
je
and
jne
xor
mov
out
add
out
outsb
push
and
in
stc
out
push
and
mov
inc
sub
insb
pop
rolb
push
das
sbb
leave
jo
add
insl
pop
pop
enter
xchg
mov
cmc
dec
rcll
das
and
pop
fmul
push
aas
int3
sub
xor
xchg
jg
lods
mov
xlat
mov
sbb
inc
jmp
sbb
cltd
mov
inc
repnz
add
pop
dec
cwtl
push
in
arpl
in
and
mov
mov
jae,pt
and
or
mov
mov
dec
sarl
addr16
mov
push
xchg
push
cmp
inc
pop
push
or
stc
test
ret
add
fs
mov
cmp
shrb
mov
inc
add
gs
stc
xor
pop
cltd
push
scas
pop
sub
inc
jmp
cmpsb
les
mov
mov
popf
outsb
int3
fstp
and
dec
mov
push
pop
dec
lcall
adc
push
aam
pop
dec
lea
lods
push
pop
cmp
pop
lods
das
popa
mov
test
data16
mov
xchg
pop
lock
sahf
aaa
sub
pop
xor
ds
mov
shrl
mov
adc
roll
pusha
aad
xlat
negl
pop
mov
es
ljmp
xor
inc
jns
dec
ds
stos
pop
cmpsl
adc
inc
notb
jp
add
jae
std
loope
lds
xor
sahf
in
inc
pop
pop
xor
shrb
test
push
xorb
cmp
sub
in
mov
shr
or
pop
mov
mov
cld
std
cmpsb
xchg
adc
nop
pop
les
dec
cltd
ret
jmp
ret
and
mov
dec
or
xchg
dec
aad
scas
mov
test
movsb
test
and
das
mov
or
shr
andb
jnp
fwait
lret
ljmp
in
int3
lds
cmp
rcrb
cmp
cmp
adc
sub
lret
or
std
push
and
and
xor
cwtl
mov
je
xorb
sub
adc
loope
rcrl
mov
cmpsb
shll
scas
mov
pop
icebp
inc
mov
mov
or
xor
and
fnstsw
push
sub
dec
jl
lea
and
int3
xchg
inc
sub
ljmp
and
sbb
and
jo
xchg
jbe
dec
insb
aam
adc
jp
psrlq
enter
push
jp
push
cmp
push
and
mov
aam
or
ja
mov
pusha
bound
ficompl
add
ret
or
jae
in
mov
xor
dec
xchg
cmp
sub
mov
xor
and
adcl
sub
subb
push
pushf
rcr
mov
push
pop
jnp
mov
fiadds
pushf
xor
cs
fcmovne
inc
add
pop
or
add
pop
out
cs
adc
mov
test
fwait
push
pop
outsb
pop
loop
mov
xor
data16
test
pop
mov
xchg
nop
and
lock
add
mov
rcl
test
shl
jmp
xor
push
test
shl
out
mov
jmp
sub
shlb
sbb
adc
xor
mov
hlt
arpl
fnstcw
or
les
je
cmovge
lahf
mov
gs
imul
dec
pop
mov
pushf
jl
pusha
cmp
mov
movsb
mov
mov
sbb
jecxz
jl
pop
aas
aad
jl
iret
jb
aaa
sub
and
push
mov
stc
jp
jnp
imul
add
iret
jns
sbb
imull
fidivrl
pop
add
out
mov
mov
jns
lea
xchg
scas
aas
sahf
hlt
in
iret
stc
out
test
fimuls
ds
xchg
pop
mov
xchg
jl
push
popf
xor
pop
push
jae
pop
pop
jnp
push
or
or
cltd
scas
push
andl
sarl
pop
xor
fwait
sbb
int
test
and
lock
xor
sarl
out
sbb
repz
mov
iret
jbe
lret
test
inc
mov
fildl
and
xor
jmp
sbb
cltd
xor
in
xchg
bound
clc
mov
add
and
test
gs
push
iret
or
subb
dec
out
mov
or
xchg
test
xchg
fldcw
push
sbb
jl
aas
mov
out
fs
jp
aas
andl
xchg
mov
and
mov
xchg
mov
fsubl
pop
mov
stos
xchg
push
jo
xor
cmp
scas
ljmp
adc
dec
andl
dec
ds
or
mov
mov
xchg
xor
jbe
ficoms
cmpsl
negb
mov
mov
lahf
pusha
cmp
push
dec
clc
mov
push
sbb
lcall
das
push
fcomps
sbb
push
jns
sti
add
mov
and
sub
jge
xchg
mov
jg
and
icebp
outsl
and
cltd
cmp
inc
call
adc
push
mov
sbb
push
js
mull
clc
sbb
enter
xchg
stos
popf
nop
cld
cmp
enter
hlt
cmp
adc
jl
mov
or
xchg
andb
repz
xchg
dec
in
dec
fiaddl
stos
push
adc
mov
sbb
sub
inc
clc
sahf
add
add
jnp
rol
xor
out
in
inc
sbb
or
rorl
movb
iret
lock
inc
icebp
in
inc
lea
push
mov
jecxz
adc
or
mov
in
push
xchg
subb
and
push
fcmovnu
insl
lret
sub
imulb
mov
out
or
or
push
rcr
aaa
divl
sahf
xchg
fnsave
push
and
mov
adc
push
xchg
icebp
hlt
pop
out
mov
mov
aam
mov
add
adc
outsl
icebp
sbb
ss
repz
scas
js
rcrb
popf
dec
in
iret
xchg
pop
xchg
jle
xchg
movb
xor
sbb
pmaxsw
jae
push
inc
das
push
shr
pop
push
mov
fdivrl
aad
sahf
jp
cmpsb
mov
push
mov
stc
fdivrs
stos
fildll
mov
xchg
pop
push
lret
stos
xor
leave
hlt
or
or
cli
in
add
movsl
xor
int3
ret
mov
dec
hlt
roll
fnstenv
pusha
rclb
mov
jle
sahf
pusha
xorl
and
ret
xor
pop
cmp
pop
xchg
sahf
call
insl
fmul
ret
sbb
out
ret
xlat
jg
icebp
sti
push
ret
repz
stos
shrl
mov
jecxz
xchg
or
jge
test
and
scas
jns
roll
mov
xrelease
xchg
sub
stos
fxch
imul
aam
xchg
push
pop
pushf
xchg
pop
lret
jo
sub
xor
add
into
jno
das
nop
mov
fs
test
int3
adc
adc
mov
in
gs
mov
dec
mov
pop
xorb
jmp
push
arpl
adc
bound
dec
sub
sbb
gs
sub
xchg
cmp
jo
adc
in
inc
ss
dec
jb
mov
mov
gs
out
xchg
pop
pop
int3
lds
jge
sub
jg
pop
movsl
shll
inc
adc
icebp
xchg
rorl
mov
inc
lds
ja
jmp
xor
or
and
aam
mov
idivl
lcall
in
mov
inc
or
xchg
repnz
and
xlat
mov
push
data16
lahf
loop
add
push
repnz
jecxz
icebp
lahf
bound
pop
or
inc
or
lods
or
push
push
or
mov
pop
adc
jle
mov
or
xchg
or
add
in
aam
retw
int3
enter
fnstenv
nop
sbb
pop
std
cmpsb
cwtl
pop
inc
insb
push
jb
aam
cwtl
lds
mov
scas
jns
jl
idiv
cmpsb
or
cli
sbb
pop
pop
in
arpl
push
xchg
fisubs
add
aaa
cs
in
push
insl
in
test
pop
xchg
fstpt
ss
pop
into
popa
shl
inc
jge
push
jmp
cmc
or
mov
int3
mov
fs
push
mov
gs
adc
pop
mov
mov
push
push
mov
or
mov
rcll
pop
mov
in
xchg
dec
mov
push
fldl
xchg
repz
lods
in
stos
call
xchg
sbb
shlb
pushf
shll
lea
pop
sbb
adc
inc
js
mov
std
push
mov
xor
clc
popf
cmp
jg
or
jmp
and
sub
mov
popa
test
push
js
test
xor
outsb
inc
xor
pop
add
sti
mov
dec
aad
popf
pop
adcb
mov
mov
js
mov
mov
aaa
cmp
in
sbb
pop
and
lock
ja
sbb
stc
jmp
jp
xchg
test
jp
jno
dec
mov
jnp
aaa
pop
add
scas
mov
stos
out
jl
icebp
pop
cmc
ljmp
push
fimuls
out
mov
cs
pop
xor
adc
lods
test
fidivrs
mov
inc
dec
xchg
jmp
push
pop
popa
sub
xchg
jecxz
sub
sbb
sub
outsb
jge
rcrl
dec
out
xchg
das
rcl
mov
mov
mov
sbb
cld
mov
or
shlb
std
sarl
pop
sub
xchg
les
xorb
ret
pop
andl
jl
cmc
sahf
shll
pop
cmp
iret
and
mov
out
inc
fistpll
daa
jl
mov
jb
inc
hlt
movsb
push
pop
pop
inc
mov
lahf
outsb
jb
aaa
stc
cmp
mov
mov
fstps
imul
cld
jnp
pop
ret
add
cmp
aaa
int
push
lock
lret
mov
or
push
cmovo
lahf
bnd
adc
scas
mov
test
inc
xor
test
aaa
mov
and
dec
xor
stc
mov
es
cmp
pop
mull
xor
imul
adc
dec
pop
xchg
dec
or
or
in
pop
dec
es
fdivrl
push
pushf
sti
lods
mov
test
int3
mov
aas
jno
lods
push
push
pop
ja
push
stos
add
shl
cmp
fbstp
or
dec
mov
and
popa
out
sub
rcrl
mov
mov
addr16
or
or
cwtl
dec
xchg
push
inc
movsb
push
sbb
sti
rorl
sub
mov
or
lcall
mov
inc
int
dec
mov
jmp
add
je
and
rorb
push
andl
add
push
aam
sub
daa
mov
inc
push
out
cmpsl
in
loop
ficomps
cs
sahf
cmpsl
mov
xchg
leave
and
lock
and
dec
jge
mov
xor
pop
in
push
xor
or
mov
pop
or
or
dec
pusha
mov
add
xchg
push
and
decl
add
call
dec
out
sbb
adc
pop
out
add
xor
pop
dec
in
inc
pop
mov
and
xchg
pop
sbb
push
cmpb
cmp
mov
je
jmp
or
mov
mov
mov
jl
inc
insl
mov
dec
scas
imul
lahf
jno
aaa
mov
mov
sub
xor
jle
popf
cmc
jo
lea
jno
addr16
cli
fwait
push
or
pusha
inc
out
mov
adc
leave
lret
pop
fstpt
loopne
push
std
cmc
inc
pusha
add
in
imul
xchg
cmp
or
add
pop
xor
mov
and
xchg
test
shlb
es
mov
pop
mov
adc
ret
les
pop
mov
ror
lds
pusha
je
dec
les
and
adc
aaa
cwtl
pop
sbbl
mov
mov
sub
dec
mov
test
ss
push
push
lret
and
iret
aaa
adc
stos
mov
lret
stos
jo
dec
jb
sbb
movsl
jl
out
push
scas
popf
loop
jae
adc
xor
fwait
and
lods
std
ljmp
pusha
xorl
fbld
or
addr16
push
xlat
cli
fldl
adc
lds
push
test
jecxz
mov
jge
pop
mov
ss
shlb
mov
lahf
fsubs
arpl
loope
mov
mov
in
jbe
andl
je
lea
cmp
jecxz
scas
jecxz
mov
test
adc
popa
icebp
test
ja
mov
mov
adc
addr16
inc
xchg
movsb
shlb
iret
jb
sti
lcall
call
or
mov
in
add
pop
addb
mov
mov
xor
pop
cmovo
push
mov
pusha
xchg
ret
in
xor
test
or
inc
orb
push
sub
or
and
xor
xchg
popf
jg
loopne
ret
pop
and
shlb
push
ja
lds
cs
pop
mov
sub
mov
jmp
mov
jnp
mov
mov
pop
repz
xchg
scas
dec
jmp
push
lcall
iret
test
mov
dec
push
cmp
push
pop
xchg
fistpl
scas
push
push
out
mov
dec
add
cmpsl
js
popa
adcl
jo
mov
in
sub
pop
push
sti
int
lock
lahf
or
sub
inc
ss
stc
sub
push
daa
inc
fstpt
ror
mov
repz
mov
sbb
and
out
lods
xchg
movsl
int3
fwait
into
adc
cmp
add
xchg
and
xor
mov
pop
ficomps
mov
gs
pop
push
addl
pusha
insl
sahf
les
jae
jne
lahf
xor
lret
mov
jo
out
gs
and
rorl
pop
fcos
aas
in
xchg
dec
ret
das
test
sbb
mov
inc
fstpl
loopne
fidivs
mov
or
jae
sbb
and
or
add
scas
xchg
sbb
sub
stos
int
add
inc
or
hlt
dec
push
test
xor
cwtl
push
jae
or
sub
mov
aaa
mov
push
fdivrs
test
cwtl
out
inc
xchg
adc
mov
mov
adc
push
xchg
repz
int
leave
pop
and
xor
addb
mov
sarl
or
sub
mov
pop
sbb
pop
mov
jle
push
in
jge
int3
push
std
sti
aam
movsl
enter
jae
ss
adc
jg
test
xchg
pushf
daa
daa
cmp
push
movsl
pop
sub
nop
ss
xchg
aam
xor
mov
loop
call
mov
xor
xor
ljmp
lods
xor
js
cld
xchg
push
add
incl
mov
dec
aam
insl
xor
mov
xor
mov
fisttpl
sti
ljmp
xchg
mov
out
aad
ja
mov
adc
jbe
in
loope
imul
mov
fisttpl
xor
lret
in
int3
xchg
mov
int3
in
fwait
sti
inc
jmp
sbb
push
ja
loopne
imul
mov
or
sub
mov
dec
mov
mov
inc
imulb
fs
push
jae
stos
dec
daa
out
popa
fdivrl
ret
repz
je
mov
adc
into
pop
mov
mov
aas
jg
or
sbb
mov
jp
adc
sbb
adc
pushf
and
bound
cmp
ja
movl
cs
mov
adc
jne
fwait
push
pusha
int3
and
sub
in
push
adc
sbb
add
roll
cmp
mov
pop
lret
ffreep
cmp
sub
and
rcrb
stos
mov
in
in
jecxz
cmp
sahf
sbb
jmp
addr16
adc
cwtl
lret
out
dec
sbb
sahf
or
jecxz
out
neg
cld
icebp
inc
adc
aad
insb
jl
cwtl
dec
or
mov
push
cltd
add
dec
dec
lret
test
sbb
pop
cltd
movsb
push
add
inc
mov
xor
xchg
xorb
or
adc
or
ja
cmp
rclb
movsl
repz
push
aam
mov
fwait
xchg
adc
pop
dec
aas
add
xor
cmc
cmc
ja
add
mov
adc
inc
cltd
bound
iret
es
cmp
dec
test
pop
in
push
loopne
lods
adc
je
dec
js
sub
jle
in
jbe
mov
in
out
flds
and
fst
jno
stos
jge
cld
aaa
sub
les
pop
dec
psadbw
xchg
out
lret
mov
jp
pop
sub
js
xchg
jge
js
add
jg
jno
jae
cmp
and
out
push
push
int
frstor
add
cmp
int
scas
cmp
movq
inc
js
jnp
xor
outsb
adc
or
out
dec
sbb
add
sub
shlb
stos
clc
xor
lods
in
mul
inc
lods
lds
add
inc
ret
lahf
test
pop
push
xor
and
rorl
inc
insb
lods
cld
add
mov
adc
aas
and
push
lcall
inc
into
lods
scas
mov
add
mov
repz
les
stc
sbb
cwtl
sbb
mov
ljmp
mov
xor
or
or
pop
ret
insb
fs
inc
and
xchg
xchg
adcl
push
ret
jg
push
stos
mov
daa
icebp
mov
ljmp
adc
or
dec
push
pop
xchg
ret
shr
push
lahf
jg
cmp
cmp
dec
loope
or
pop
push
pusha
adc
out
xorl
test
mov
test
jb
mov
shr
ja
lea
cmp
and
inc
jg
inc
mov
add
xchg
loop
dec
ljmp
pusha
xchg
push
mov
fucom
inc
test
jl
mov
or
xor
sbb
push
or
and
lds
pop
enter
lods
mov
dec
rolb
pop
add
push
rcl
daa
lret
fdivrl
and
mov
ds
jae
mov
add
mov
add
lods
pop
lcall
adc
mov
xchg
popf
fmulp
jmp
loop
mov
xchg
hlt
sbb
test
lret
scas
pop
dec
cmp
cli
mov
loope
adc
repz
std
fcmovbe
shll
lods
clc
mov
mov
jbe
pop
negb
ds
xor
mov
es
or
xor
jnp
leave
cmpsb
std
andb
push
mov
xchg
int3
cmp
shll
icebp
mov
pop
mov
sahf
lea
aam
xchg
out
loop
sub
jnp
pushf
or
xor
mov
jae
movsb
scas
outsb
sbbl
movsb
jle
popf
xchg
ficoms
pushf
push
jo
lahf
sub
push
cs
cwtl
repnz
fs
out
mov
movsl
xor
lea
mov
and
shrl
out
jb
jns
lock
lahf
inc
imul
aam
pop
aad
aas
push
jmp
sbbb
sbb
mov
pop
and
mov
pop
add
pop
sbb
add
insb
mov
cmpl
clc
dec
mov
ror
adc
subb
cmp
xchg
outsb
pop
push
sarl
mov
stos
jo
and
xchg
xor
mov
nop
subl
mov
ja
out
xor
mov
sbb
inc
xorl
cmpsb
pop
decl
mov
or
xor
push
mov
test
insl
loope
mov
or
push
mov
mov
ja
adc
push
filds
push
inc
pop
in
push
sahf
enter
sti
hlt
call
call
xchg
jmp
and
and
addl
test
pavgw
jle
mov
scas
mov
pop
divl
jnp
aas
lcall
mov
andl
orb
add
cmp
jne
imul
cmpb
pusha
push
icebp
bound
jle
and
sbb
pop
push
arpl
mov
mov
sbb
jae
sbb
push
les
sub
loop
aas
cmp
push
add
outsb
in
and
rcrl
push
ja
das
imul
outsl
dec
jae
sub
push
jp
and
jb
dec
cmp
ja
out
shll
in
mov
and
add
out
adc
loop
outsb
jo
popa
jb
jecxz
mov
popa
push
jmp
jl
inc
data16
dec
dec
mov
push
xchg
leave
xor
into
adc
lods
jmp
mov
dec
bound
or
arpl
cmp
and
cmp
mov
sbb
adc
stos
jbe
ficompl
insl
inc
iret
or
enter
aas
push
lods
inc
xchg
sbb
push
pop
daa
sbb
fistpll
cwtl
in
mov
test
and
in
aaa
push
mov
scas
sarl
leave
mov
sbb
test
push
imul
hlt
mov
push
mov
mov
lahf
pop
push
mov
jnp
mov
lret
push
clc
arpl
sti
sbb
xchg
int
sbb
inc
cmp
fbld
jo
clc
mov
shrb
mov
in
daa
std
pop
jbe
rcll
daa
push
xchg
xor
out
fwait
call
stos
mov
inc
cwtl
pop
fsubrs
data16
rclb
inc
fcompl
int3
stos
iret
push
inc
jmp
lods
les
cmpsb
out
in
and
push
popa
push
daa
add
pop
nop
and
sub
xor
add
aam
lret
mov
fistpll
icebp
imul
mov
int3
sbb
jb
loope
jbe
daa
fsubs
or
test
loop
mov
test
pushf
pop
inc
cmpsl
lock
add
push
xor
ficoml
pop
roll
mov
or
cmp
pop
xor
lret
pop
in
push
out
xor
int
popf
and
xchg
test
je
jle
mov
dec
out
or
dec
je
repnz
push
push
xor
icebp
mov
xchg
adc
movsb
add
cmp
mov
pop
jge
xchg
iret
hlt
cmpsl
mov
cmp
jp
mov
cmp
arpl
adc
out
loop
in
rep
push
cmp
dec
je
xchg
sbb
and
cld
pop
jne
pop
push
pop
sbb
mov
pop
stos
mov
iret
adc
test
js
xchg
icebp
and
add
and
dec
int
fs
sub
push
xchg
outsb
notl
lock
xor
rorl
out
fsubs
push
add
aas
push
imul
lock
mov
xchg
aam
rorb
mov
mov
in
or
push
mov
aad
popa
xor
jnp
movaps
add
push
mov
shll
mov
push
mov
mov
push
fildll
jmp
mov
pop
pop
loop
mov
mov
xchg
icebp
sub
stos
mov
imulb
std
call
les
pop
push
call
dec
mov
xchg
push
dec
out
cli
jle
lret
or
add
lea
add
sub
inc
pop
insl
xor
stc
fucom
adc
int3
incb
cmpl
cmp
xchg
call
inc
cmpsb
pushf
std
push
add
mov
lods
je
xor
lret
jno
fstp
in
cmpsb
sbb
push
push
rcrb
pop
xchg
divl
mov
addl
push
xchg
or
mov
into
addr16
inc
pushf
inc
add
cwtl
orb
jo
lods
outsl
lahf
mov
les
aam
decb
sbb
mov
clc
test
shlb
pop
out
daa
imull
mov
dec
shlb
std
xchg
fucomip
mov
mov
gs
mov
mov
push
out
mov
mov
clc
push
push
cmp
jl
sub
in
mov
repnz
jmp
cmp
bound
push
fstps
push
enter
lahf
cmc
loop
mov
fdivl
push
xor
add
sbb
hlt
insl
out
outsl
enter
cmp
divb
inc
lea
and
movsl
sahf
pusha
out
dec
xor
xchg
idivl
inc
sub
add
xchg
pushf
insb
das
mov
pop
add
push
out
test
mov
jp
xchg
sbb
fists
adc
pop
xor
and
adc
iret
ss
pop
mov
and
jne
sub
xchg
dec
mov
push
test
int
cmp
test
not
pop
popf
cmpsb
mov
mov
push
sbb
xor
daa
mov
out
les
shll
imul
mov
aaa
inc
lds
test
daa
clc
sbb
lcall
push
xor
popf
icebp
push
mov
mov
daa
pop
cwtl
lret
add
or
imul
dec
movb
xor
xchg
mov
pop
or
andb
addr16
sub
popa
stos
out
int
leave
inc
pop
stc
lahf
sub
sub
in
in
es
xor
hlt
lods
mov
xor
or
push
dec
jl
and
mov
adcl
push
or
jne
mov
cwtl
stc
lahf
add
aas
cli
push
lods
in
outsb
out
in
xor
std
xor
push
not
jp
sti
test
adc
add
sub
mov
dec
mov
fcomi
and
mov
or
push
aas
aam
hlt
loopne
xchg
ret
loope
ret
enter
add
lds
mov
xchg
dec
lds
sbb
cmp
add
mov
xor
or
adc
push
or
mov
js
mov
enter
dec
ret
push
push
jge
test
xor
pop
mov
or
mov
punpckldq
pusha
cmp
adc
or
shrb
enter
movsl
xor
out
sub
push
push
add
mov
ret
and
mov
ret
movsb
pop
push
sub
jo
and
movsl
mov
mov
add
inc
pop
shr
aaa
jecxz
mov
push
fldcw
or
xchg
push
cmpsl
cli
gs
repnz
sub
jns
adc
add
mov
xchg
fnstcw
dec
jno
mov
fprem
cmp
mulb
xor
inc
add
cmp
dec
dec
scas
enter
movb
fwait
ljmp
mov
cld
enter
ja
or
sub
pop
and
jg
pop
lret
push
mov
mov
popa
or
shrl
push
in
lea
xchg
lock
cmp
push
cmp
dec
and
fnstcw
cmovns
sti
adc
call
xor
lods
adc
cmp
popa
fnstcw
imulb
xchg
inc
xchg
in
fnstsw
data16
push
repz
and
popf
inc
add
xor
cmp
jmp
adc
mov
push
out
adc
adc
movsb
pop
es
movsb
mov
in
popa
cmp
ret
jmp
dec
inc
ret
adc
cs
mov
xchg
xchg
inc
or
mov
pop
adc
adc
and
xor
ljmp
sub
cmp
push
insb
fistps
xor
push
mov
shll
sbb
adc
mov
push
repz
sbb
fiaddl
inc
addl
pushf
xor
fchs
xchg
repnz
and
pop
xor
or
cmp
int3
mov
lock
test
daa
call
push
sub
or
jl
es
jle
inc
pusha
cmp
xor
pop
fwait
adc
jno
je
push
std
imul
fists
cmp
bndldx
movsb
jne
pop
ret
fldcw
outsb
and
mov
mov
sub
lret
push
jno
push
sbb
es
outsl
cli
sti
je
ret
and
les
stc
dec
test
cmp
mov
iret
add
push
repz
scas
mov
cmp
test
xor
mov
pop
clc
inc
mov
pushf
push
mov
and
std
xchg
xor
jne
xor
mov
jns
or
cmpsb
fildl
cmp
jg
js
sbb
rcl
xchg
movsb
pop
aam
inc
jae
insl
xor
jge
orb
lea
xchg
or
adc
or
ja
xchg
stos
mov
dec
push
xor
insl
in
and
inc
mov
pushf
call
sbb
adc
mov
insb
adc
rep
dec
add
mov
fidivrs
insb
sub
mov
mov
add
pop
mov
imul
xor
jb
and
pop
out
jb
scas
pop
lahf
sbbl
pop
pop
arpl
xor
jge
push
nop
mov
add
pop
cmp
push
mov
cmp
mov
and
xchg
ret
je
mov
std
add
jo
mov
scas
sbb
hlt
sub
sbb
pop
jo
cmp
pop
lods
mov
shll
dec
loopne
andb
aas
push
pop
les
ret
dec
jnp
pushf
and
dec
dec
pop
movl
push
arpl
movsl
stos
cwtl
ror
inc
iret
jo
stos
or
pop
add
mov
mov
adc
mov
pop
xchg
mov
push
sub
push
mov
arpl
iret
push
daa
or
ds
jge
std
es
stos
or
movsl
lock
hlt
dec
into
mov
icebp
push
mov
jb
mov
cltd
xor
mov
icebp
adc
call
incb
mov
cmp
ljmp
loop
test
lock
loope
sbb
mov
cli
cwtl
faddl
int3
shl
pop
sub
test
mov
xchg
out
mov
ljmp
aad
popa
test
and
mov
push
cmp
imul
sbb
faddp
loop
jp
jmp
jb
inc
dec
dec
stc
push
or
pop
rclb
push
mov
movsb
call
sbb
mov
nop
jne
inc
out
sub
push
push
leave
and
insb
xlat
mov
std
add
mov
repnz
cli
pop
pusha
insb
inc
imul
sbb
xchg
cli
mov
or
gs
pusha
add
mov
mov
xor
cs
ret
popf
lods
sub
or
inc
insb
stos
sub
mov
inc
add
cwtl
pop
ja
dec
mov
cmp
pop
mov
shlb
arpl
mov
mov
adc
in
dec
psrad
sub
jo
jno
js
jp
sahf
int
mov
add
jns
xchg
jp
and
test
das
fbld
call
mov
pmaxub
cmp
or
je
in
mov
inc
rcll
iret
icebp
sbb
scas
cmp
pop
mov
ja
popa
arpl
roll
inc
sub
mov
in
mov
push
inc
jne
dec
xchg
or
and
xchg
xchg
lret
mov
repz
xchg
or
push
mov
mov
cmpsb
inc
ja
mov
les
lea
xchg
fwait
xor
mov
mov
push
out
dec
cltd
dec
rclb
pop
jle
les
jmp
xor
mov
pusha
inc
mov
sub
mov
inc
cmp
je
xor
cmp
pop
cmc
rcrb
daa
movsl
push
sti
sub
test
dec
mov
repz
test
orb
jns
notb
lods
fs
push
popf
aam
sub
mov
xchg
mov
std
fidivs
mov
xchg
push
in
mov
cli
dec
pop
popa
je
popf
sub
in
xchg
pop
call
inc
sar
add
sbb
jmp
les
hlt
and
data16
subb
imul
mov
push
shrb
and
inc
push
out
mov
xlat
ret
mov
ret
push
fstps
xor
je
pusha
xchg
les
mov
add
jl
lret
test
xorps
lds
jae
test
xchg
fstpt
sti
gs
loop
add
or
repnz
sub
das
cmp
inc
es
ror
cltd
pop
lods
or
data16
lds
lea
xor
sbbl
and
add
sarl
ret
push
push
dec
push
cwtl
or
xchg
xchg
push
arpl
loopne
pop
pop
mov
xchg
sub
int3
xchg
add
xchg
dec
cmp
int
xor
cmp
mov
orl
lods
or
into
mov
cmc
cmpsl
outsb
sub
pop
ja
scas
sbb
ret
sub
icebp
add
jns
add
lods
add
out
sbb
addr16
or
or
mov
loop
dec
aam
out
ljmp
je
int
int3
mov
mov
or
repz
cmp
dec
sbb
mov
add
or
push
loopne
scas
bound
xchg
out
mov
je
adc
mov
ret
loope
sbb
push
popa
shll
or
lahf
sub
push
in
dec
xor
std
mov
mov
addl
subl
xor
mov
inc
sarl
negb
in
dec
enter
push
sahf
pop
mov
lods
pop
popa
jae
mov
jne
inc
mov
nop
ljmp
imul
push
dec
ja
hlt
cmp
cmp
xchg
aad
testb
xor
nop
stos
jno
shrb
jae
ss
repnz
xor
mov
lret
arpl
pushf
sub
push
adc
stos
cmp
or
enter
sub
pop
rcrb
push
jae
push
xchg
inc
adc
popf
rcrb
dec
pop
jecxz
dec
mov
lret
inc
pop
adc
in
cmp
neg
sub
inc
inc
fdivl
fs
call
push
in
fldl
mov
int
pop
push
insb
push
jp
or
cmpb
push
arpl
pop
fsubrl
loope
test
in
adc
sbb
mov
ret
sbb
scas
fdivrs
dec
popa
ja
int3
gs
sub
inc
inc
xor
sub
push
sti
mov
xchg
insl
into
ss
lret
xchg
inc
push
or
sub
sub
lds
mov
add
out
in
popa
sub
lret
jp
dec
xor
fldenv
loop
shll
xorl
das
fsubs
into
pop
cmp
add
mov
jg
out
int
push
and
movsl
arpl
inc
sub
pop
leave
mov
or
xor
mov
dec
imul
test
shlb
lret
push
dec
add
push
mov
std
std
inc
popa
aaa
adcl
popf
dec
jmp
add
dec
faddl
loopne
test
aas
sbb
push
ror
jnp
jp
fs
orl
out
clc
rorb
movsb
out
outsl
lret
loope
fsts
sbb
arpl
pop
xchg
jge
push
sub
push
add
mov
xchg
cmpsb
arpl
test
and
adc
lea
xor
adc
and
mov
mov
push
ds
lret
cmc
scas
sbb
out
mov
mov
into
jbe
in
push
dec
push
fbld
adc
xchg
jge
fbld
sbb
dec
lahf
lds
aad
inc
cld
mov
lret
lods
dec
out
adc
jmp
nop
sbb
movsb
stos
sub
xchg
cmp
or
xchg
out
xlat
daa
insb
or
iret
or
cld
mov
inc
jb
jle
push
std
std
in
pop
hlt
xor
lret
and
pop
cmpsb
mov
aam
enter
mov
roll
into
push
adc
movsb
repz
inc
cmc
loop
cld
add
xor
test
aad
ja
mov
imul
fsub
fiadds
sbb
shll
mov
and
pusha
je
jnp
insl
jnp
adc
and
mov
sbb
in
push
sub
cli
jb
int
in
lahf
adc
test
hlt
jae
xchg
arpl
loop
push
xchg
mov
xor
test
lahf
loop
cmpsb
je
sub
inc
push
sub
mov
addr16
fdivl
in
fistps
xchg
sbb
clc
xchg
push
ret
jnp
cli
xchg
out
jl
out
shr
fisubl
adc
cltd
inc
push
adc
mov
cmpsb
movsb
sbb
xchg
cmp
jae
nop
jnp
out
jge
sub
xchg
ds
in
fnsave
cs
add
jle
sbb
and
add
mov
call
mov
and
mov
ret
or
push
cmp
jne
mov
adc
xchg
mov
iret
lahf
xor
sarb
popa
lods
mov
lahf
adc
jmp
outsl
xor
lret
dec
add
outsl
jno
pushl
cli
rorl
lods
mov
jle
lahf
mov
lods
push
stos
popf
push
call
sti
mov
sub
pop
mov
lret
pop
insb
sbb
sbb
xchg
mov
inc
loope
rcrl
idiv
lock
xchg
aam
cmp
add
push
and
inc
mov
sub
lods
test
sbb
push
scas
cli
jp
mov
jns
pop
add
cld
cmpb
and
je
mov
std
popf
pop
inc
xor
adc
sub
rcrl
mov
sub
stos
sbb
stc
dec
frstor
mov
inc
sbb
int
scas
sub
es
js
in
dec
push
movsl
imul
xchg
fmulp
dec
repz
fmull
cmpsb
loope
cmp
lds
cmp
adc
fiadds
imul
mov
dec
dec
mov
imul
scas
xor
pop
mov
mov
mov
jge
scas
xor
fiaddl
imul
imul
fsubl
xchg
in
mov
add
repz
imul
dec
mov
popa
fnstenv
or
xchg
pop
filds
adc
jbe
je
jecxz
push
cwtl
lods
and
subb
cmp
sub
push
push
imul
cli
enter
int
lret
iret
pop
push
cmp
sbb
addb
or
stos
pop
xor
inc
inc
aas
adc
adc
outsl
dec
rorl
sub
push
jnp
aam
mov
sahf
mov
xor
jmp
fisubrl
xor
add
sub
xchg
cmp
xchg
and
sbbb
sub
mov
faddl
lods
repz
in
scas
sub
test
xchg
inc
sbb
sbb
int3
xor
and
insl
loopne
sbb
int
pop
jns
imul
mov
inc
push
dec
inc
push
mov
pusha
or
dec
mov
jle
pop
stos
rorb
and
and
test
jge
in
and
dec
ljmp
out
stos
daa
call
add
xor
leave
lea
xchg
mov
jo
mov
add
js
enter
adc
imulb
jnp
mov
nop
call
inc
roll
cmp
es
leave
fnstsw
sub
cld
popf
popf
mov
or
repnz
sub
in
add
int3
ja
inc
mov
addr16
cmpsl
pop
adc
jp
lea
ja
pop
mov
sub
or
jno
test
addb
outsl
pop
pop
sbb
and
daa
cs
inc
pop
mov
push
test
cltd
xor
cld
dec
ret
pushl
push
sbb
add
mov
xchg
and
mov
mov
int
cmc
push
mov
xchg
out
jle
mov
push
aad
mov
mov
iret
push
mov
cmp
fidivrs
js
jmp
xchg
xchg
movq
cwtl
mov
sub
lret
loope
mov
ljmp
jg
or
jmp
push
flds
push
js
mov
mov
or
jle
aam
jo
mov
inc
stos
in
jp
mov
xchg
mov
push
outsb
test
jge
mov
sub
movsl
inc
push
mov
dec
jge
lods
sub
in
aas
mov
fistpl
outsl
push
movl
clc
push
pusha
xor
test
inc
sbb
lods
push
fidivrl
jl
test
mov
adc
mov
aad
in
mov
or
push
rcl
sbb
arpl
outsl
ss
movsl
mull
adc
das
xchg
push
ret
leave
pop
outsb
imul
stos
aaa
dec
sarb
cmp
gs
test
shll
cmp
cmp
in
ja
cmp
inc
bnd
fsubrp
lret
xchg
and
adc
lret
xchg
mov
add
mov
inc
dec
xchg
sbb
lods
andl
int3
add
outsl
pusha
mov
repz
sarl
jno
fstpt
sahf
fstpl
out
mov
imulb
or
pop
test
pop
lock
mov
cltd
push
pop
jbe
into
jns
je
hlt
push
push
pop
fimull
test
test
and
mov
add
repnz
mov
faddl
xor
pushf
inc
rclb
pop
or
mull
mov
inc
jmp
mov
in
adc
pop
add
mov
jle
jnp
jecxz
repz
call
cmp
xchg
movsb
mov
push
and
mov
popf
sub
imul
loop
sbb
adc
call
sub
xor
or
mov
jnp
or
fucomip
pop
mov
sbb
and
iret
jge
fcmovnbe
rclb
mov
jne
push
add
mov
sub
jbe
sbbb
mov
ja
push
lcall
mov
mov
xchg
out
lahf
jl
jns
outsl
mov
inc
roll
mov
mov
popa
adc
cmc
addr16
xchg
std
bound
aam
sub
xor
mov
int3
scas
dec
js
mov
das
mov
test
inc
jp
mov
aam
sarb
lock
hlt
loopne
sar
jno
push
pop
mov
jp
aas
mov
xor
mov
sbb
outsl
xor
lcall
ret
mov
or
add
mov
test
leave
bound
cmc
in
rcr
xor
out
jae
xchg
xchg
enter
lds
ljmp
jae
into
sbbl
ret
sub
xor
or
add
rolb
fstps
std
cmp
dec
and
out
add
orb
iret
add
xor
pop
mov
je
add
aaa
out
mov
jb
pop
ror
lea
in
je
push
daa
jp
xchg
xor
iret
cltd
push
ret
inc
push
xor
mov
push
jnp
mov
or
cli
push
loope
mov
jbe
sbb
clc
movsl
cmp
mov
jo
and
or
cwtl
clc
add
dec
sbb
jo
sbb
mov
jle
xchg
iret
push
sub
adc
adc
cltd
pop
or
loop
xor
push
aaa
and
out
insl
xor
or
jmp
filds
loopne
ds
ficoml
in
mov
leave
call
adc
push
cwtl
out
repz
sbb
jmp
xchg
mov
and
mov
outsl
fstl
test
xor
inc
adcb
sub
mov
sbb
xor
push
push
insb
sbb
push
mov
flds
jecxz
cwtl
mov
add
cmp
and
outsl
pop
inc
pop
lcall
les
sub
es
xchg
pusha
cmpsb
rclb
orb
loope
adcl
push
int3
mov
iret
lahf
push
or
add
jecxz
les
test
sahf
testb
das
lds
xchg
leave
or
sahf
push
fsub
pop
es
mov
push
jmp
outsl
add
jmp
repnz
xor
adc
xchg
subl
push
sbb
test
add
xchg
hlt
xchg
scas
mov
cli
lea
subl
addr16
insb
insb
or
aad
pushf
cmpsb
jbe
sbb
out
aam
mov
imul
arpl
pusha
pop
nop
mov
add
leave
push
out
dec
ljmp
cmp
ret
fnstenv
or
xorl
aas
pushf
addb
xlat
in
add
stos
and
mov
mov
push
add
jne
ja
add
cmpsb
cmpsb
enter
push
sbb
or
mov
inc
je
jg
dec
pop
sbb
or
out
mov
inc
xor
ljmpw
sbb
push
test
push
mov
cltd
pop
shrl
mov
xor
sbb
es
add
push
mov
mov
nopl
out
or
fdiv
push
sbb
xchg
sub
push
sub
xlat
jae
jnp
imul
push
andb
je
add
loop
or
mov
mov
pop
popa
pop
inc
or
hlt
xor
stc
call
dec
push
xlat
and
out
rcrl
jno
cmp
addr16
sti
sbb
mov
les
enter
push
imul
cmp
sbb
sub
mov
adcl
and
xchg
pop
push
rcll
xchg
cmp
or
arpl
out
pusha
xchg
test
jb
pop
push
dec
outsb
and
sub
sbb
add
in
mov
inc
and
adcb
xchg
sahf
and
bound
xlat
fcmovne
popf
inc
inc
dec
push
or
cmc
cmpsb
popa
mov
sbb
and
push
xor
dec
mov
xlat
add
cwtl
sahf
int3
das
stc
push
cmp
test
or
arpl
fwait
push
in
pop
test
xor
xor
addr16
add
add
sub
adc
sbb
and
pop
adc
adc
adc
idivb
call
fidivrl
in
inc
fidivs
adc
dec
jmp
sbb
cmp
outsb
mov
jmp
push
jge
ficoml
inc
popa
fildll
inc
sbb
cmp
sahf
dec
jp
shlb
movsb
lcall
cs
and
in
das
adc
lahf
std
mov
jb
xor
inc
push
cmc
stos
xchg
and
dec
fisttps
aaa
outsb
sbb
cmp
popa
daa
mov
pop
in
inc
insl
cmp
in
loopne
pop
mov
stc
scas
lahf
fimull
sar
pop
sub
call
adc
push
mov
aaa
je
mov
push
shll
inc
sbb
mov
stos
push
or
jo
jp
scas
pusha
xor
mov
or
adc
lods
push
xor
loop
jg
scas
addl
cmovae
jnp
cmp
or
cs
jle
xchg
ror
lahf
into
and
push
cmpsl
es
mov
and
lock
repnz
xchg
out
stc
and
push
xchg
pop
out
push
cmc
add
shrl
jge
push
into
mov
orb
dec
mov
inc
mov
push
lahf
mov
sbb
mov
push
mov
in
mov
fwait
pop
mov
sbbl
nop
sbb
push
mov
ret
mov
xor
dec
sub
clc
jg
cmp
hlt
and
add
and
push
adc
fisubs
and
add
sahf
shr
rcl
mov
in
xchg
xchg
repz
repnz
push
pop
jmp
adcl
pop
pushfw
push
pop
dec
adc
cmp
jg
cmp
xchg
inc
dec
popa
pop
inc
test
pop
cmpsb
fwait
lcall
clc
mov
dec
mov
aad
stos
cmp
xor
fistl
fistpl
int3
lods
imul
adc
mov
mov
or
fldenv
cmpsb
jg
or
mov
out
jno
inc
movsl
add
xchg
subb
mov
push
test
mov
add
pusha
sub
mov
adc
mov
mov
add
jle
mov
jbe
repnz
ja
lds
push
or
icebp
dec
xchg
lods
adc
jmp
pop
bound
loop
pop
fisubs
outsb
cmp
sbb
jl
outsb
inc
pop
mov
insb
xor
mov
or
sarl
fs
jbe
xorl
mov
rorb
adc
imull
or
test
or
dec
pop
dec
pusha
xchg
imul
scas
sahf
mov
inc
mov
rorb
mov
cld
fnsave
fdivl
orb
mov
push
and
xor
pop
and
cli
pop
adc
xchg
push
sbb
ss
pushw
es
sti
out
cmp
bound
sbb
pop
gs
or
shr
mov
fisubrl
jb
out
jnp
or
xor
fmuls
and
outsb
scas
hlt
popa
xchg
daa
enter
jecxz
sarb
loope
mov
pop
or
xchg
into
enter
loop
ret
rcrb
int
xor
gs
cmp
push
sub
in
movsl
push
mov
and
jmp
dec
jmp
flds
roll
inc
imul
xor
sub
cmc
push
push
mov
mov
lods
or
add
or
push
lock
test
adc
imul
xchg
add
jno
cli
xchg
mov
jge
pop
dec
test
frstor
cmp
les
jl
jmp
sbb
cmp
adc
mov
xchg
sbbl
push
aad
loope
push
lock
shll
xchg
mov
xchg
es
fcoms
push
movsl
insb
push
sbb
aam
jmp
js
cmp
in
sbb
rcr
divb
add
lea
dec
cmpsb
and
int3
pop
jecxz
out
out
sar
fcoms
dec
insl
xchg
mov
push
pop
jo
pop
in
dec
into
xor
cmp
daa
inc
das
xor
pop
xchg
seta
jo
inc
xchg
ljmp
shr
xchg
add
out
add
pop
sub
fdivrs
dec
dec
popa
mov
and
mov
xchg
fstps
stos
rclb
sub
sub
inc
out
sbb
fwait
es
lea
jne
push
add
ljmp
aam
push
sub
jne
sbb
stos
loopne
inc
sub
xor
movsl
cmp
pop
je
clc
adc
mov
in
add
push
addl
int
loope
dec
and
fldpi
jns
rcll
push
xlat
adc
push
inc
punpckhbw
xchg
xor
add
sbb
loope
pop
sub
repnz
push
push
push
add
sub
push
inc
adc
mov
xchg
sub
int
add
data16
sbb
ret
enter
inc
addr16
int3
in
sbbl
into
loopne
cltd
adc
fcoms
jbe
xchg
inc
pop
xchg
mov
mov
lods
pop
xchg
repnz
jp
dec
pop
sbb
push
or
int
mov
or
js
jle
ret
and
cmc
sub
jno
xor
repnz
mov
xchg
je
clc
cmc
out
jl
cmp
outsb
aaa
xchg
sbb
test
inc
mov
add
push
insl
dec
mul
jno
adc
jmp
jne
sti
cmc
aas
mov
xor
dec
int3
sbb
or
cmpsb
mov
aam
mov
outsb
out
scas
mov
pop
fcoml
sbb
sbb
aas
xchg
push
and
jg
repz
mov
pop
xchg
cmp
sbb
insb
sbb
bound
sbb
dec
or
pop
dec
or
jge
lret
sbb
cmp
loopne
dec
fdivp
pop
leave
adc
pop
lcall
lahf
ss
lock
es
adc
cli
add
aaa
and
bound
iret
jne
popa
jle
pop
subb
lock
cltd
fimull
xchg
cli
lock
insb
xlat
into
enter
cli
push
push
or
xor
mov
or
cld
mov
add
and
push
loope
mov
dec
and
push
pop
lds
jnp
inc
repz
mov
push
push
xchg
jae
dec
call
mov
lock
inc
test
gs
adc
jl
test
aas
push
adc
mov
insb
mov
pop
fdivl
cmp
sbb
mov
negl
rcrb
ljmp
adc
xchg
or
aas
and
ret
dec
jb
xor
adc
std
pop
and
lock
pop
pop
pop
push
jne
inc
filds
ss
cmp
int
cmp
cmp
sbb
jae
test
repz
adc
bswap
sub
xchg
les
mov
sub
or
andw
ret
jecxz
lea
add
jno
cmp
dec
stos
mov
pop
or
sbb
gs
cmp
jae
mov
push
orb
out
idivb
fcomp
push
mov
cmp
aad
or
bound
adc
push
push
ss
pop
test
out
xchg
mov
mov
call
mov
add
addl
push
mov
popf
popf
sbb
addr16
add
ret
imul
add
ror
and
push
gs
pop
and
dec
fsubs
xor
or
das
repz
sbb
cmpsb
sbb
cli
dec
inc
xor
xchg
lds
cwtl
insb
roll
mov
pop
cmpsb
lea
shlb
movsl
fbld
push
dec
in
sub
xchg
in
arpl
lcall
mov
test
push
mov
mov
add
aaa
dec
test
ljmp
cmp
into
push
mov
cli
pushf
push
loope
push
push
jae
divb
js
xchg
mov
fs
iret
int3
mov
je
mov
mov
cs
int3
push
mov
mov
xchg
dec
rorb
insb
inc
shll
js
jo
sbb
cmp
xchg
add
mov
inc
jbe
adc
popf
divb
shll
pushf
imul
shll
xchg
xor
or
xchg
adc
cs
adc
test
call
jg
insb
leave
ret
cwtl
ret
lret
das
leave
mov
sub
adc
jns
daa
cmp
sub
mov
rcll
dec
sbb
mov
jae
rcr
pop
pop
test
pop
pop
and
mov
loopne
cmp
push
test
cmp
frstor
in
adcb
popf
xchg
clc
push
scas
mov
les
mov
jmp
cmp
or
jle
icebp
sub
jbe
lds
jo
xchg
mov
pop
je
mov
fimuls
or
cmpsb
and
rcr
cmc
xchg
sbb
jne
nop
pop
sti
mov
aad
add
in
xor
or
les
xchg
mov
push
add
scas
je
cli
jl
adc
dec
loopne
leave
cwtl
out
in
in
lds
imulb
jg
fwait
in
xchg
fildl
mov
xor
inc
rcrb
in
dec
xor
push
xchg
dec
mov
mov
lods
insl
jb
scas
fldcw
adc
repnz
pop
and
scas
xchg
loope
adc
int
mov
ja
xchg
or
xor
or
pop
inc
adc
sbb
sbb
ljmp
jmp
lahf
jle
insl
dec
test
repnz
in
ficoml
xor
cwtl
cs
rorb
push
and
pop
push
mov
xchg
notb
push
cli
addr16
fdiv
popf
push
dec
test
bound
cld
stos
mov
mov
xchg
flds
sub
pusha
push
dec
ud0
shrl
fsubl
jns
adc
sbbl
ret
mov
jns
lock
outsb
mov
cmp
pop
arpl
sub
jns
je
or
lcall
movsb
out
rorl
sub
push
or
decl
push
stos
sub
push
xchg
mov
xor
add
insl
jle
roll
aas
int
cmp
pop
xorb
push
add
lods
loopne
or
sar
jecxz
daa
adc
popa
popf
dec
adc
cmpsb
push
mov
lods
fmull
fistpl
lretw
pop
cmp
add
adc
inc
lods
sbb
fldcw
repz
in
lods
jo
in
push
cld
sti
mov
jecxz
test
inc
dec
cltd
xchg
push
pop
jns
or
pop
js
outsl
adc
inc
repz
movsb
sub
outsl
fistps
cvtdq2ps
sub
adc
or
jmp
adc
rcl
cmp
movsb
mov
cs
cmc
fwait
mov
rolb
jb
jo
pop
ja
es
gs
push
out
mov
pop
les
out
pop
dec
pop
ret
fwait
idivl
pop
push
cmp
in
mov
movsb
ret
ret
pop
inc
inc
ljmp
sbb
shrl
dec
pop
rcrb
adc
inc
jge
inc
xchg
clc
push
lods
push
sbb
mov
adc
jno
loop
repnz
add
fistps
jecxz
jo
outsb
adc
mov
sub
xchg
das
xor
mov
push
xor
mov
dec
lahf
frstor
pop
arpl
notl
and
mov
mov
fcompl
sub
sbb
cmpsb
xor
sub
or
rcl
cmp
push
and
leave
mov
inc
fmuls
cld
add
or
pop
cmp
push
leave
add
sbb
cmp
mov
scas
cmpsb
xchg
hlt
scas
lods
test
bound
inc
pusha
jns
cmpsb
xchg
shl
push
xchg
loop
int
xor
ss
into
movb
or
dec
inc
dec
cli
sbb
aam
aaa
or
sbb
lods
adc
test
das
jns
mov
push
mov
inc
cmp
jo
int3
ds
inc
out
stos
insb
mov
add
into
inc
sbb
cmp
add
mov
or
inc
jno
testb
in
xchg
add
xchg
push
cmp
lret
push
sub
adc
mov
div
mov
mulb
inc
sbb
add
rcrl
mov
fdivrs
adc
cs
sbb
xorl
cmpsb
loop
add
lret
nop
fistl
and
mov
sar
scas
pop
or
fisubrs
dec
clc
jns
mov
imul
pop
xor
mov
xor
add
xor
clc
inc
pop
in
pop
cmp
test
pop
or
cmp
add
jmp
test
push
mov
fdiv
icebp
sub
add
idivl
cli
insl
hlt
add
cli
xor
xlat
mov
xchg
pushf
stc
int
subb
cltd
push
inc
pop
decb
push
sub
ljmp
fisubrl
jno
or
rclb
addb
adc
pop
aam
shl
outsb
mov
std
cltd
inc
std
js
mov
push
mov
mov
daa
cmp
shufps
jns
mov
and
push
adc
jbe
ja
aas
int
inc
inc
enter
cld
inc
jae
or
pop
cli
jae
jns
fadds
jge
jecxz
mov
ljmp
inc
push
aaa
imul
shll
fprem
hlt
xor
jbe
in
or
cmp
or
mov
dec
outsb
and
aad
jno
aad
dec
sbb
dec
xchg
test
jmp
jecxz
dec
sub
cmp
imul
lret
pop
cld
xchg
out
aaa
adc
loop
mov
mov
cmp
repz
sub
rcrl
enter
pop
jg
int3
cmp
ffreep
rcrl
negl
fstps
add
int
cld
popf
lahf
mov
and
loop
rorb
cltd
gs
popf
sub
mov
and
jg
or
std
and
in
mov
jne
jp
mov
or
and
cmpsl
xor
pop
pop
pop
push
aam
sbb
pop
into
movsl
ror
add
sbbl
pop
sub
jge
xor
pop
ljmp
dec
mov
xchg
popa
stc
dec
popf
ljmp
mov
movq
cli
repz
outsb
jecxz
fsubrs
icebp
add
dec
leave
popf
xchg
inc
add
or
xor
ret
sti
iret
push
sub
scas
int3
and
mov
adc
xchg
cmp
movsl
push
inc
inc
lret
pop
call
or
push
jb
loope
jmp
lret
fdiv
outsl
mov
in
inc
xchg
aaa
fildll
pusha
inc
decb
sti
pop
push
xor
imul
jbe
shll
cmpsb
adc
mov
std
dec
jl
xchg
loopne
push
xchg
pop
fmull
lds
ror
lret
jge
leave
je
xchg
inc
cmpsl
ja
ficompl
and
cltd
aad
jae
fisubrl
xor
dec
fdivs
aad
fsubrs
fsubl
sbb
movsl
js
imull
pop
and
mov
loop
shl
cmc
outsb
pop
pusha
sbb
push
das
out
pop
jle
jo
jb
outsl
xlat
call
incl
sahf
xchg
jp
out
mov
mov
pop
imul
cmp
js
aad
test
adc
xchg
fsubrs
test
xchg
inc
fstpt
and
xchg
or
jno
cld
fcoml
rorb
or
sbb
sub
adc
bound
pop
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
or
int3
or
xor
cmp
xchg
xor
sahf
std
ljmp
lea
and
cs
jp
cltd
sub
add
xor
sub
fnclex
push
pop
or
lock
dec
dec
mov
je
testb
and
inc
pushf
lea
pushf
sahf
mov
dec
loope
outsb
xchg
and
fstpl
lds
mov
stos
shlb
adc
repz
mov
rcr
jle
or
shl
movsb
push
shlb
cmpsb
stos
sti
push
or
jle
lock
adc
sbb
jb
inc
repz
js
loope
inc
mov
in
push
gs
out
enter
sbb
inc
inc
repz
lcall
lock
pop
cmpsl
loopne
adc
sub
ror
or
pop
mov
xlat
jle
push
sahf
test
dec
jb
loope
add
int3
ljmp
loope
sbbb
fidivrl
into
xor
gs
test
adc
inc
cltd
mov
inc
sahf
fiaddl
daa
aas
pop
xchg
pop
mov
adc
mov
sarb
mov
xorl
iret
adc
add
and
insb
pusha
hlt
pop
fucomip
lods
sub
outsb
push
dec
pop
or
iret
sbb
and
aad
push
imul
pop
loope
repnz
popa
add
out
sbb
out
aam
and
jg
ds
gs
mov
sti
inc
cli
es
pop
cmp
xchg
mov
sbb
addr16
sub
mov
lcall
push
cmpsl
sbb
pop
dec
in
in
addr16
push
or
mov
pop
lods
lret
mov
ljmp
cltd
jge
xchg
and
cmp
jmp
sbb
orb
out
not
rcr
les
pop
push
jecxz
imul
aas
sub
jle
push
xor
add
mov
mov
filds
cmc
dec
arpl
fs
dec
push
leave
test
jp
test
pop
sbb
pop
cmp
rolb
aas
xor
stos
push
sbb
cs
ja
mov
imul
aaa
or
mov
push
xchg
lds
popf
sub
scas
out
push
jle
dec
lea
adc
jb
mov
adc
mov
int3
add
pop
aas
dec
jp
int3
ja
sub
loopne
cmpsb
fwait
mov
cs
dec
cmp
sbb
cld
into
les
push
add
pop
movsb
adc
cs
mov
xchg
dec
scas
fsubrl
push
rcll
sub
mov
daa
or
and
stc
lea
xor
scas
enter
leave
xlat
hlt
jmp
xchg
lods
cwtl
imul
or
iret
cltd
imul
hlt
clc
test
inc
adc
xchg
int3
orb
data16
inc
and
pop
lea
mov
daa
pushl
aas
out
and
ds
inc
jg
push
sub
xchg
stos
pop
rcll
inc
push
les
stc
mov
push
mov
jmp
mov
hlt
ret
cwtl
rol
pop
or
mov
das
pusha
lahf
rcl
das
sbb
js
mov
test
loope
cltd
xorl
loopne
out
inc
mov
sub
xor
sub
out
insl
pop
or
or
push
mov
xchg
xor
xlat
lods
aaa
inc
push
mov
inc
cmp
leave
cmp
negb
aam
sub
sbb
add
push
in
xor
dec
inc
fsub
or
fcomps
add
pop
out
int
adc
adcl
jns
cmpsb
dec
std
mov
in
call
fcomps
lahf
fs
dec
mov
test
add
stos
jg
std
dec
iret
mov
jl
jnp
rcrb
out
clc
out
cmpl
push
movsl
data16
imul
jg
fstps
jp
add
sbb
int
int3
mov
imul
add
jge
int3
inc
test
psubw
and
push
ja
cmpsb
jg
pop
or
inc
mov
data16
repz
popa
movsl
sti
push
dec
push
fidivs
jge
cwtl
jcxz
test
dec
or
mov
jnp
shrl
cmp
sbb
fcmovnu
pause
inc
or
sbb
sub
pop
in
mov
sbb
dec
xchg
stos
js
jl
mov
out
testb
stos
push
ja
sub
movsb
xchg
xchg
mov
adc
push
xor
ljmp
xchg
push
adc
rorl
aad
sub
es
push
shrl
popf
les
pop
orl
popa
int
push
jns
xchg
mov
ljmp
jg
faddl
shlb
cmp
xchg
lock
cs
ss
jecxz
out
mov
jns
sarl
mov
lahf
fcompl
cmc
inc
and
lahf
loope
adc
pop
repnz
es
popf
mov
scas
aaa
mov
daa
popa
dec
pop
ret
pushl
pop
dec
cld
push
jne
adc
out
lea
add
mov
in
push
lods
push
cld
pop
jno
in
jnp
in
insb
sbb
out
and
in
jge
lret
pop
jecxz
notl
inc
jns
jb
mov
lcall
or
push
movsb
sub
mov
popa
inc
sub
outsl
ftst
jnp
mov
je
out
jae
adc
cmp
lret
cld
xor
pop
adc
insb
scas
dec
push
mov
pop
jl
cmp
in
inc
outsb
data16
sbb
mov
xor
adc
jb
mov
outsl
pop
aas
add
negl
pushf
aad
fdivl
pop
pop
mov
into
sbb
and
sbb
clc
fldl
xchg
in
sbb
pop
mov
std
and
lods
popf
rolb
add
sahf
into
inc
testb
push
dec
inc
xchg
ss
sub
test
inc
xchg
adc
into
sbb
and
mov
cs
add
fldenv
jmp
subl
mov
xchg
push
pusha
lret
cmpl
jmp
jge
push
or
pop
push
jecxz
popa
xchg
jbe
mull
jmp
mov
jbe
cli
cmpsb
nop
shr
jp
jp
mov
enter
gs
lds
sbb
cwtl
push
dec
sbb
lahf
insb
xchg
sub
in
xchg
mov
in
dec
popf
add
adc
sbb
pop
lods
movsl
inc
in
ret
sbb
sbb
fsts
rcll
mov
inc
cmp
cltd
inc
es
jne
xchg
lret
jne
pop
push
insl
or
rcr
xchg
xorl
inc
push
nop
mov
arpl
pop
or
iret
mov
mov
cmpsl
xchg
xor
mov
rcll
nop
lret
popf
mov
push
or
lea
push
xor
pop
xchg
sub
add
cmc
add
test
push
mov
push
je
push
xor
mov
lret
mov
int
sbb
push
pop
pop
jae
mov
push
xchg
jns
dec
or
mov
pop
repnz
sbb
and
inc
inc
jmp
push
xchg
mov
push
pusha
ret
mov
inc
xor
bswap
dec
loope
or
jl
test
das
xchg
jmp
cmp
or
and
in
hlt
mov
movsb
or
daa
sbb
iret
sub
sti
out
push
adc
cltd
pop
dec
sbb
mov
pop
enter
and
arpl
pop
mov
mov
dec
arpl
pusha
pop
sbb
movsl
or
jbe
add
sbb
cmp
push
xchg
loope
fdivs
cli
pushf
xchg
push
mov
int
sub
orb
ljmp
inc
shrl
sub
adc
movsl
cmp
push
push
dec
mulb
pop
cltd
mov
pop
add
out
repz
jae
jno
sub
popl
aad
or
mov
jl
inc
and
dec
xchg
inc
add
mov
sub
cmp
sub
xor
orl
das
scas
cmp
mov
and
test
push
cmp
or
adc
adc
arpl
pop
test
and
punpckldq
mov
pop
int3
aaa
lcall
inc
mov
add
daa
cmp
mov
sti
lahf
mov
push
xlat
sub
dec
inc
mov
jp
stos
jae
pshufw
dec
sahf
inc
in
add
mov
jecxz
adc
cmp
xchg
lock
sbb
lcall
stc
shrl
add
lods
repnz
loope
or
mov
hlt
push
xchg
stos
adc
movsl
insb
xor
js
ljmp
je
pop
outsb
push
fisttpll
mov
ret
in
out
scas
xlat
xorl
insl
push
cwtl
clc
sbb
push
stc
xor
dec
ljmp
mov
loop
les
aaa
fstps
lods
mov
out
iret
cmp
shrl
ds
dec
outsb
lock
jb
into
jb
out
into
popf
mov
mov
stc
fwait
mov
cmpsl
cmp
or
mov
sbb
ljmp
std
adc
inc
dec
stos
jnp
jmp
inc
outsb
pop
sub
jns
jbe
and
imul
push
sbb
leave
pop
aad
or
ficoms
mov
imul
test
and
fistpll
mov
ljmp
rcl
ret
jne
dec
sti
dec
jge
cltd
add
rcll
fsubrs
dec
sub
nop
call
lret
mov
jns
pop
scas
mov
std
push
iret
out
mov
cmpl
pop
push
lcall
cld
and
push
cmp
insl
inc
insl
dec
pop
push
mov
xor
addr16
xchg
and
mov
inc
cmp
inc
dec
jp
popf
mulb
js
inc
cmp
adc
fbld
test
jg
shlb
xchg
xchg
mov
xor
mov
int
mov
out
sub
jmp
cmp
arpl
cmp
stos
sbb
mov
jno
movsl
or
repz
dec
ror
sub
inc
mov
push
or
imul
cmp
shll
push
pop
or
es
ljmp
hlt
les
pop
ljmp
push
fiadds
jno
mov
mov
call
mov
out
push
jmp
daa
mov
and
lahf
mov
arpl
pushf
mov
or
insl
nop
es
insl
aam
dec
lods
push
push
jg
mov
push
popf
ret
fcmovnb
push
xor
js
lahf
push
or
ret
mov
or
cmp
push
in
cld
push
xor
out
cmpsl
popf
cmp
aad
shl
pop
jg
fldt
mov
lods
cmp
je
pop
push
adc
dec
cmp
mov
daa
fdivl
pushl
out
pop
pop
mov
cmpsl
ficompl
test
std
aaa
loop
lret
xchg
fcompp
fcmovnbe
xor
addb
mov
add
sbb
mov
xchg
sbb
in
les
in
jnp
cmp
xchg
or
sub
rcr
xchg
mov
test
mov
push
aad
adc
aam
xor
cmp
adc
jg
sub
push
aas
xchg
add
outsb
jg
mov
push
fistpl
mov
jae
test
pop
lcall
sarl
pop
cmp
mov
loop
mov
jns
les
fwait
shll
add
xchg
outsl
jnp
cmovbe
dec
adc
icebp
fmulp
imul
shrb
inc
movsb
fwait
sub
xlat
lret
add
add
fistps
or
fstpt
dec
adc
sbb
stos
cmc
cli
mov
or
orb
scas
mov
divb
push
xor
jb
aad
xchg
ss
sbb
mov
push
ja
clc
add
fwait
mov
std
sbb
gs
xor
div
xchg
add
jns
ja
sbb
into
stc
loopne
popf
aad
aaa
sub
jbe
mov
cmp
leave
ja
add
push
pop
mov
ror
arpl
lds
pop
dec
ss
jg
mov
sub
jge
fistpll
lds
rclb
out
xchg
mov
out
mov
repnz
lods
jecxz
pop
cwtl
mov
pop
xor
jge
aaa
add
sbb
mov
dec
aam
xchg
clc
mov
sbb
jl
ja
repz
andl
sti
sbb
inc
outsl
mov
movb
shlb
movsl
lock
stos
iret
fidivl
sahf
dec
dec
xor
xor
lods
mov
cld
imul
add
add
add
add
add
pop
add
inc
xchg
sub
rcll
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
insl
add
insl
