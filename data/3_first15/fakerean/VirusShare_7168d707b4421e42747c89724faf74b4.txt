and
add
pusha
add
inc
pusha
add
push
pusha
add
addr16
add
jle
add
cwtl
pusha
add
test
pusha
add
lret
add
pusha
add
cld
pusha
add
adc
add
popa
add
cmp
popa
add
pop
popa
add
jo
add
andl
mov
popa
add
ret
add
popa
add
frstor
add
popa
add
pop
bound
add
bound
add
bound
add
bound
add
add
jb
add
test
add
bound
add
bound
add
bound
add
bound
add
pusha
add
add
add
test
add
adc
add
add
add
add
add
pusha
add
mov
add
add
add
add
movsb
pushf
arpl
add
add
add
add
adc
add
aam
add
sub
test
add
dec
mov
inc
dec
movzbl
add
lea
mov
mov
dec
mov
dec
inc
movzbl
sub
sub
add
lea
movsbl
and
dec
inc
movzbl
dec
inc
xor
sub
lea
inc
mov
sub
dec
dec
inc
add
lea
mov
inc
dec
dec
jne
inc
mov
dec
or
pop
lea
mov
pop
inc
dec
pop
add
add
xor
lea
mov
dec
add
add
add
add
lea
add
ret
push
imul
dec
add
add
dec
xor
lea
imul
push
push
push
push
dec
inc
dec
push
add
and
lea
mov
add
inc
add
inc
xor
mov
lea
push
mov
dec
xor
add
dec
push
dec
sub
push
lea
mov
pushl
sub
call
add
add
dec
dec
add
lea
imul
add
inc
pop
ret
dec
sub
mov
loop
imul
pop
rolb
pop
imul
aad
and
add
rolb
fdivp
lds
cmpb
leave
and
imul
inc
inc
xchg
and
xlat
jle
test
adc
mov
cmpb
cmp
sub
lds
popa
insl
fneni(8087
pop
loop
iret
in
pop
xchg
fimuls
addr16
mov
and
pop
clc
inc
xchg
push
mov
decb
ja
loope
push
fwait
dec
inc
int
and
scas
push
pop
sbbl
js
lret
inc
lret
push
push
mov
jl
xchg
add
ja
sbb
in
pop
dec
mov
out
stos
adc
jmp
push
lret
fwait
in
pop
adc
in
test
xor
in
cmp
fwait
pusha
xor
hlt
jbe
ret
mov
xor
and
loope
les
out
int
mov
cs
data16
pop
xor
lock
add
dec
jp
shrb
adc
mov
jecxz
mull
jp
call
sbb
dec
dec
lock
pop
fnstsw
mov
aaa
mov
inc
or
pop
xor
push
pusha
push
loopne
lods
fs
lahf
mov
mov
inc
jns
in
outsl
mov
or
mov
cmp
and
push
cmpsl
pop
xchg
lods
enter
mov
out
test
les
loop
movsl
inc
pop
cwtl
xor
push
xor
adc
es
lahf
push
ljmp
pop
mov
jp
push
cmp
pop
mov
adc
pop
data16
sbb
leave
stos
jnp
pop
mov
cmc
pop
and
mov
aad
fnstcw
loop
aas
rclb
push
jno
adc
call
mov
iret
adc
add
repz
iret
pop
xchg
or
jnp
scas
lock
inc
cli
jo
shr
xor
rolb
or
imul
in
outsb
jb
rsqrtps
push
sub
stos
push
jb
aad
cwtl
dec
fcoms
inc
ss
gs
push
push
mov
fsubr
jg
push
dec
loopne
negb
js
gs
cmp
lods
dec
mov
jne
ljmp
fcoml
rcll
in
loopne
imul
out
outsl
nop
cmp
pushf
iret
xor
cltd
lods
fists
jl
enter
push
and
popa
je
fnsave
mov
addr16
cmp
mov
cmp
stos
cltd
aas
cmp
mov
cld
stc
xchg
cmp
daa
xchg
dec
mov
imul
cmpsb
cmp
mov
gs
jl
lods
stos
andl
sub
add
jecxz
adc
and
mov
pop
or
sahf
pop
jae
sbb
and
scas
inc
xor
add
or
xorl
loop
pop
dec
cltd
fsub
popa
fcmovnb
pop
jl
imul
jle
sub
insl
or
cmpsl
and
imul
mov
je
jmp
insl
int3
adcl
cmp
xor
push
cld
adc
dec
pop
dec
and
lret
movsl
fisubrl
adc
insb
add
adc
xor
repz
add
mov
hlt
mov
aad
hlt
dec
in
push
aas
repnz
stos
pop
scas
imulw
sub
push
sub
movaps
mov
add
sahf
jae
pop
lods
clc
sub
pmulhw
mov
ljmp
and
mov
mov
sbb
dec
or
sub
xchg
fcomps
dec
adc
ss
out
rorb
data16
inc
dec
vphaddubq
adc
sbb
stos
jno
pop
fisttpl
mov
fxam
out
dec
inc
inc
aad
leave
xor
xor
insb
into
mov
js
rcll
lret
call
pusha
aad
xor
int3
repnz
fistpll
adcb
sub
mov
es
push
xor
andb
in
stos
mov
cmp
test
movsl
dec
adc
xchg
mov
callw
sub
pop
imul
gs
cs
shlb
flds
cmp
sarl
pop
sbb
push
fs
cmp
outsb
cmp
mov
xchg
adc
pop
out
cmp
sbb
aad
hlt
out
cmp
adc
and
adcl
push
sbb
mov
xchg
xorl
in
lds
roll
xor
pop
mov
mov
test
int3
fistpl
push
push
mov
ss
push
ret
push
pop
inc
sbb
call
xor
xchg
in
les
mov
imul
ss
sbb
jmp
push
xchg
xchg
lods
or
push
jne
lret
nop
cmp
or
mov
inc
mov
mov
ret
and
lcall
mov
pop
test
loop
inc
or
mov
mov
popa
mov
push
filds
lahf
xchg
rorb
and
adc
push
sub
push
inc
or
jp
jl
adc
leave
push
mov
mov
pop
sti
repz
popa
jne
add
sub
add
ret
mov
add
jns
movsb
pop
fs
jecxz
lahf
add
or
js
inc
imul
pusha
jmp
mov
xor
ret
das
push
shrb
xchg
jg
push
push
xchg
clc
into
jne
pop
dec
mov
arpl
cmp
cltd
sarb
add
sbb
mov
popf
pop
inc
xor
pop
mov
inc
test
cmp
lods
dec
in
push
repnz
jne
cmpsl
popa
ficoml
sub
jno
mov
xchg
inc
dec
ja
dec
and
mov
cmp
cli
bound
mov
das
pop
inc
mov
icebp
ret
push
pop
push
pusha
mov
lea
jge
pop
mov
std
cwtl
hlt
jae
xchg
sbb
lea
stos
in
lahf
cwtl
inc
test
pop
scas
inc
or
mov
fwait
inc
js
fisubs
test
push
ret
loope
loope
aam
jl
adc
and
xlat
clc
xchg
mov
btc
icebp
cmpsl
mov
and
sub
idivl
sub
mov
jmp
daa
fwait
in
jge
hlt
fstpl
jno
xchg
push
jmp
das
sbb
sarb
test
xor
xchg
xor
in
sub
mov
in
mov
dec
add
xchg
sbbb
add
clc
pop
dec
cmpsb
and
cltd
outsl
cmc
test
sahf
andl
mov
mov
mov
sbbb
decl
fwait
inc
mov
mov
add
testl
loop
or
adc
movsl
stc
xchg
dec
jge
xchg
rorb
test
inc
dec
add
xor
addr16
lcall
inc
mov
push
dec
outsl
adc
mov
fsubrl
in
mov
mov
xchg
sti
sbb
fimuls
jne
cmpsb
mov
rorb
add
mov
sbb
or
mov
popa
fwait
adc
sub
sbb
xchg
pop
lret
jb
cmp
aam
mov
pop
dec
loop
lret
and
mov
leave
cmp
fisubrl
or
xor
or
mov
jecxz
cmp
mov
mov
jb
loop
push
inc
idivb
mov
mov
mov
and
sub
inc
dec
pop
mov
in
push
push
mov
ret
ja
insl
mov
in
out
enter
cmp
insl
xchg
orb
fadds
and
xor
daa
dec
adc
jne
std
shr
inc
nop
out
push
loope
or
loope
testl
or
push
jmp
add
rcr
cmp
cwtl
xor
fiaddl
loop
push
out
sar
pop
mov
icebp
push
xchg
stc
lods
inc
jle
adc
popf
sbb
orl
inc
sub
sti
mov
cli
xchg
pop
ror
rcrl
imul
ret
aad
dec
dec
movsl
dec
popa
je
lea
pop
gs
ja
insl
sub
xorl
or
leave
jecxz
sub
cwtl
and
ljmp
test
fdivrs
add
add
loop
mov
pop
movb
or
in
or
jmp
lahf
out
ds
daa
add
pop
jle
pop
mov
addb
mov
xor
jnp
sarb
xchg
incl
sbb
inc
xchg
stos
faddl
push
jle
ja
orl
rcr
xor
pop
aaa
mov
mov
xor
out
xor
ss
lahf
bound
jg
jne
adc
xlat
leave
push
and
cltd
roll
imull
dec
adc
jge
std
push
mov
addr16
sub
and
push
aam
add
hlt
test
dec
movsb
sbb
push
cmpsl
movsb
out
outsb
leave
cmpsb
int3
cmp
mov
push
pop
push
lea
jge
call
popf
cmp
pusha
cmp
icebp
adc
cmp
hlt
mov
in
out
add
xchg
int3
adc
sbb
pop
shl
sub
xchg
stos
cli
xor
ja
inc
subl
push
add
test
popa
fxtract
aaa
push
cmp
sub
pop
dec
arpl
xchg
sub
out
pop
mov
insb
pop
or
inc
pop
std
out
sarb
xchg
or
daa
push
or
pusha
leave
jecxz
lds
nop
adc
jae
fstpl
jbe
nop
sbbl
pop
and
push
pushf
inc
inc
cmpsb
dec
mov
movsl
lods
inc
cld
or
pop
cmp
in
xchg
sub
ljmp
sub
jns
nop
xchg
icebp
pop
cmp
leave
cmp
je
pop
scas
imul
int3
ret
and
jle
adc
cmp
mov
movsl
lret
sbb
inc
inc
cltd
inc
adc
inc
enter
mov
enter
fcom
rcrl
icebp
call
mov
cld
iret
loopne
push
ficoms
dec
add
and
push
sar
push
sbb
xchg
fs
in
mov
shrl
or
outsb
sub
mov
push
inc
sub
mov
dec
test
push
pop
loop
enter
or
es
add
xorl
lods
rclb
out
sbb
lea
icebp
add
push
nop
jmp
shrb
ss
das
sbb
sub
mov
cmpsb
sbb
or
cld
inc
sbb
sbb
pop
and
cld
jns
push
sti
cmp
cmp
fidivrl
lret
mov
mov
lea
lret
lds
shrb
sbb
les
leave
inc
shlb
mov
jecxz
ftst
notb
push
add
push
testb
roll
xor
cmpsb
aam
push
mov
adc
popf
and
xchg
iret
js
or
mov
push
xor
into
mov
aaa
add
lahf
or
sbb
and
xchg
scas
push
rorl
gs
lea
adc
add
inc
int3
js
sub
adc
push
in
adc
mov
jl
adc
dec
ljmp
jge
add
pop
gs
push
push
mov
adc
cmc
jp
and
stos
popf
inc
cmp
mov
mov
aas
push
mov
js
fnsave
xchg
pop
stc
lea
imul
adc
incb
nop
adc
in
insl
imul
add
sbbb
add
xchg
int
dec
push
mov
inc
xchg
jb
aam
js
loopne
sub
sbb
mov
lret
adc
dec
mov
nop
mov
push
je
mov
in
pop
cld
or
sub
xlat
lret
jns
mov
sbb
push
loop
mov
xor
xor
addr16
fucomip
cltd
mov
xor
pop
jns
lret
adc
iret
xor
dec
icebp
sub
scas
dec
dec
ss
sub
fdivl
add
push
inc
outsl
pop
mov
cmp
loop
mov
call
cmpsl
enter
sub
bound
test
xlat
adc
adc
xchg
adc
in
jl
fstpl
pop
fcom
mov
jp
movb
imul
adcl
int3
jae
ds
dec
jle
xchg
das
subl
jp
popa
sub
pop
inc
cwtl
movsb
fs
stos
dec
jne
or
imul
call
cmp
std
jb
pop
pop
out
push
loop
lods
push
jge
insl
pop
mov
push
test
jl
lds
jmp
mov
inc
dec
aad
dec
bound
cmc
push
int3
test
neg
ljmp
ret
and
inc
sarb
push
pop
in
rcll
sbb
je
adc
fcoml
push
stos
loopne
mov
cltd
sbb
cmpsl
dec
jo
add
jb
js
and
jl
mov
out
push
jp
rcll
jne
cmpsb
mov
xchg
sarb
mov
jp
xchg
sub
sbbb
push
lret
mov
cmpsb
adc
or
leave
or
cmpsb
test
jl
xchg
repnz
dec
push
xlat
dec
ja
dec
or
sarl
pop
or
mov
iret
fldcw
sbb
shl
xchg
cmpsl
pop
repnz
addb
jno
xchg
sbb
int
test
sub
push
pop
movsb
repnz
xchg
fwait
sahf
inc
push
cmp
add
gs
jo
cmp
fmulp
and
es
lea
adc
fmuls
sbb
test
call
gs
xor
cmp
sbb
in
outsb
movsl
inc
mov
data16
or
xchg
push
icebp
mov
mov
in
rcrl
xchg
mov
scas
sahf
stos
add
push
and
adc
or
test
mov
repnz
jne
leave
movsb
loop
adc
test
pop
movsb
out
data16
inc
sub
iret
xchg
push
out
mov
push
orl
pop
xchg
je
pop
iret
dec
xchg
jno
pushf
call
roll
dec
data16
imul
cmpsb
sub
aad
dec
adc
fidivrl
insb
ja
es
aaa
dec
xor
and
mov
sti
lea
add
lret
sbb
subl
lock
xchg
iret
mov
mov
inc
sti
mov
inc
sub
std
inc
out
xor
mov
test
rcrl
sub
jecxz
xor
in
jo
mov
ljmp
inc
mov
decl
or
je
pusha
xchg
and
lret
int
xchg
stos
inc
jmp
arpl
fsubrs
cmpsl
test
fisttpll
sbb
mov
out
cltd
push
in
add
jp
call
pop
loopne
repz
inc
sbb
push
sbb
mov
sbb
shll
leave
in
loopw
adc
call
fwait
mov
push
sub
pop
jae
dec
inc
lahf
test
sbb
cmpsb
lods
aaa
aas
lock
xchg
adc
mov
mov
inc
inc
and
push
jmp
call
cwtl
rclb
in
out
in
jecxz
lcall
mov
into
jp
mov
insl
lods
pop
pop
rcl
and
ljmp
int
mov
mull
push
test
or
adc
mov
mov
push
popf
test
aad
push
not
xchg
leave
mov
cmp
push
adcb
pop
aam
clc
pop
xchg
stos
movsb
out
mov
dec
mov
xchg
or
push
data16
mov
lret
fwait
mov
push
mov
cwtl
mov
addr16
xchg
cmp
cmp
clc
sub
out
arpl
in
adc
sub
test
std
hlt
lock
inc
cmp
or
orb
sahf
mov
ret
aaa
xlat
and
and
call
call
into
mov
cld
aad
fimuls
jbe
jmp
dec
cli
cmc
int
mov
adc
add
pop
mov
bound
pop
mov
int
movsl
dec
movsl
push
sbb
ficomps
iret
lock
jl,pt
incl
loop
xchg
nop
cmp
or
push
movsl
loop
mov
pop
rorl
mov
add
dec
jg
cmp
adc
idivb
or
fidivs
rolb
mov
into
int3
adc
push
sti
mov
into
mov
and
sbb
aas
sub
je
lret
xor
das
or
pop
inc
ret
popa
loopne
fcmovnb
aaa
cmp
mov
stos
xchg
test
add
mov
fmuls
pop
jmp
mov
push
pusha
mov
inc
sub
out
les
repnz
pop
mov
gs
dec
or
inc
pop
jno
bound
addr16
fistpll
shrl
push
fmull
mov
mov
in
mov
in
inc
call
and
or
cmpxchg
sbb
arpl
mov
push
data16
or
pushl
mov
jo
pop
push
push
les
push
pop
push
sbb
ret
mov
ret
sbb
inc
lahf
cmp
lock
sbb
mov
mov
je
movsw
and
add
ljmp
mov
or
icebp
imul
dec
lret
pmovmskb
and
and
sub
loopne
or
adc
push
les
in
mov
or
cs
jb
pop
jbe
adc
fiadds
decl
sub
push
stos
inc
sub
pop
mov
jne
inc
push
adc
jbe
add
push
cmp
sub
js
fisubrl
pop
add
lret
nop
jecxz
dec
push
xor
jp
adc
enter
mov
or
jb
xorb
xlat
jne
lods
mov
cmp
movsl
insb
push
lea
outsl
xor
test
xchg
pop
aam
push
fadds
xor
jge
out
imul
mov
fs
ja
or
pop
imul
aaa
ficoms
xor
push
xor
out
push
xchg
sub
sub
xor
or
add
add
jg
sysret
push
repnz
sub
fs
lods
or
push
out
mov
std
fcomp
repz
sarl
lret
or
popa
pop
pop
dec
xchg
fidivrs
lahf
les
jmp
jg
lods
fidivs
scas
test
inc
jle
pushf
push
dec
adc
movsl
mov
jae
in
mov
mov
xchg
mov
mov
mov
mov
cltd
hlt
jl
push
jl
fwait
scas
es
fistpl
jmp
pusha
add
loope
in
jecxz
or
jge
stos
xlat
test
enter
jp
sub
sbb
adc
pop
mov
cmpsl
jbe
pop
filds
outsb
jp
pop
adc
xor
outsl
mov
and
lock
cmp
mov
add
fisttpll
xchg
mov
cmpsl
test
adc
sti
and
fadd
clc
repz
xor
in
or
sub
dec
push
xchg
xchg
rorb
push
lcall
call
dec
xor
jp
pop
leave
jecxz
push
push
std
push
mov
nop
sbb
ret
loope
xchg
stc
out
push
outsl
int
mov
test
mov
push
sub
int3
test
sbb
les
mov
mov
insb
push
cmc
xor
push
xchg
pop
pop
call
push
cmp
mov
subps
mov
jg
dec
stos
enter
sbb
xchg
or
sub
stc
movb
mov
pop
fildl
rolb
lcall
iret
ret
sub
add
cmp
push
pusha
jmp
adc
cmp
into
lcall
jecxz
mov
mov
clc
ss
out
js
push
scas
rolb
mov
lock
sbb
mov
xchg
push
cltd
imul
or
shl
aas
rcr
repnz
fisubl
lcall
push
data16
roll
mov
or
arpl
addr16
mov
imul
xchg
outsb
fdivrl
ficoml
out
jmp
mov
gs
test
push
inc
mov
data16
inc
add
scas
out
mov
and
ja
inc
movsl
sub
mov
sbb
inc
inc
stos
sarb
dec
stos
scas
outsl
xchg
jns
addr16
lds
push
jae
sahf
sub
ret
sub
dec
scas
jbe
adc
jo
or
xor
xchg
mov
fisubrs
or
jmp
cmpsl
dec
xchg
movsl
xchg
sub
fnop
es
aam
rsm
shl
pop
cmc
mov
sarl
mov
popa
loope
popa
lret
push
arpl
push
mov
push
test
pop
ficomps
gs
xchg
leave
outsb
pop
inc
movsb
cld
test
imul
bound
jmp
addr16
js
add
and
je
aas
sub
xchg
jg
in
xor
dec
sbb
inc
mov
jae
cld
addr16
inc
cmpsb
es
mov
pop
pop
dec
sti
mov
xchg
mov
fs
call
mull
xchg
ret
and
out
push
xor
sub
addl
leave
cli
cwtl
movsb
dec
scas
jo
cli
push
add
insb
lods
test
dec
inc
mov
jg
sub
jecxz
mov
imul
shl
jno
inc
data16
adc
or
and
xor
pusha
dec
xchg
pusha
mov
push
daa
sbb
xor
or
push
jecxz
jno
outsb
cwtl
neg
adc
mov
jno
aas
ret
imul
daa
adc
andl
push
mov
jl
call
pop
cltd
push
arpl
xor
pop
pop
pop
sub
push
addr16
jp
push
dec
leave
or
mov
cmp
sub
xor
lcall
sbb
dec
dec
xchg
out
dec
imul
imul
fsubp
sub
fiaddl
mov
clc
mov
into
sbb
mov
test
inc
mov
cmp
loop
fildl
push
sbb
arpl
add
ret
pop
dec
mov
sub
lcall
pavgw
lcall
cs
add
es
push
mov
and
mov
cmp
pop
xlat
andl
inc
sahf
les
inc
dec
fwait
mov
out
sbb
insb
adc
cmpsl
xor
lcall
xchg
ss
fdivs
mov
xor
lahf
adc
les
mov
sbb
mov
or
sub
pop
shlb
call
jle
lea
add
adc
aaa
movsl
pushf
xor
cmp
xor
vmovaps
bound
inc
data16
pop
js
cltd
mov
add
sti
leave
xchg
mov
test
push
mov
sub
pop
pop
outsl
ficoms
pop
add
xchg
shl
data16
repnz
pushf
push
dec
sbb
lcall
xchg
mov
cmp
pop
into
adc
cli
fisubrs
or
jno
mov
jecxz
lea
or
push
sub
not
mov
out
cmp
mov
dec
aad
cmp
je
mov
pop
cmpsl
and
mov
rcll
jmp
xor
and
mov
and
mov
xlat
push
mov
rcll
mov
fs
push
imul
jge
test
and
push
dec
xchg
pop
xchg
xor
arpl
jmp
sbb
mov
mov
mov
fdivrs
leave
fistps
fstpl
cmpsl
ss
xchg
cld
out
fmuls
cmp
jo
lds
dec
cmpb
push
pusha
mov
sbb
add
jl
frstor
and
js
mov
sub
ja
mov
inc
mov
jp
dec
lods
and
outsb
push
mov
mov
testl
xor
dec
push
in
mov
ljmp
fiaddl
jmp
ljmp
xor
mov
sarl
out
dec
cli
cmp
xor
and
dec
sbb
push
dec
jg
dec
rorl
sbb
cmpsl
popf
lods
push
lcall
aas
mov
stc
sub
fdivrs
sub
nop
inc
clc
lret
lods
pop
and
jp
pop
mov
dec
fmul
aas
lods
sbb
cmp
mov
sbb
negl
push
xor
pop
pop
push
jns
dec
add
mov
inc
inc
repnz
sub
imul
mov
dec
push
xchg
jns
inc
pop
sbb
xchg
dec
xchg
lods
sub
out
fwait
dec
push
add
cmp
inc
paddb
and
daa
lahf
xchg
cltd
test
aad
mov
inc
cmp
neg
outsb
push
outsb
add
xchg
xchg
out
arpl
or
stc
rcrl
mov
test
dec
xor
lcall
xchg
sahf
or
bound
lret
xor
add
jp
push
sbb
sub
cltd
xchg
xor
out
mov
or
mov
lret
aad
es
or
mov
dec
xchg
inc
clc
test
arpl
push
or
ljmp
push
inc
outsl
negb
xor
sbb
cmp
cmp
xor
adc
jp
mov
jp
ficomps
push
add
daa
add
fistps
xchg
xor
mov
jne
push
xchg
loop
in
mov
jg
jae
lcall
push
sbb
xchg
das
lods
repz
int3
xor
pop
add
lret
nop
cmc
sub
stos
mov
lahf
ds
pop
adc
jns
mov
sub
sysexit
lock
push
outsb
mov
mov
sbb
pop
sbb
add
mov
test
xchg
clc
rcrb
into
mov
out
aas
cmp
idivb
daa
jmp
repz
cwtl
bound
push
adc
out
and
jg
and
je,pn
pop
mov
icebp
or
pavgb
sub
xchg
sbb
xor
movsl
fistpll
jge
jnp
adc
lret
add
push
adc
cmpsl
adc
mov
push
movsb
adc
int3
mov
stc
jge
arpl
mov
mov
pcmpgtd
jne
lds
ljmp
push
fcmovbe
adc
popf
dec
test
sub
movsb
mov
fldenv
add
scas
mov
rcl
loop
jbe
imul
in
cmpsl
insb
add
stos
mov
lret
jbe
adc
orb
mov
push
dec
sbb
inc
test
push
dec
mov
lcall
sbb
stc
inc
fs
jmp
jmp
adc
inc
cmp
jne
lcall
mov
sbb
mulb
stos
cltd
rolb
pop
int3
cwtl
or
fimuls
pop
push
cmp
fstps
jmp
int3
mov
lahf
lds
xor
repz
sub
in
adc
mov
fwait
mov
and
outsb
ds
inc
mov
imul
enter
pop
rcr
dec
sub
stos
sbb
lock
sub
mov
pop
cltd
shrl
rorb
std
jmp
test
sbb
shl
and
pop
mov
pop
cmc
mov
jle
std
aam
fbstp
dec
cmp
cmp
aam
push
mov
fsubrl
test
pop
mov
pop
xchg
xor
sbb
dec
lock
mov
mov
jp
xchg
mov
dec
enter
jb
push
je
mov
cmp
stos
cs
fsubrl
hlt
mov
fs
xchg
not
pop
mov
movsl
jmp
jl
pop
fs
xchg
lret
push
jo
jns
adc
inc
je
aas
push
jne
fdivl
cmp
pop
rcl
stos
out
dec
dec
in
adc
lret
enter
or
dec
xor
dec
aam
rcrl
mov
fildl
sub
and
out
stos
push
xchg
or
cmp
in
nop
push
pop
aad
jno
sub
pushf
shlb
leave
mov
out
test
dec
bswap
test
aaa
aaa
in
in
mov
in
pop
into
jne
sub
pop
push
jmp
movsb
cmp
xchg
or
pop
nop
pop
in
out
mov
movsl
test
fcmovnb
mov
xor
pop
mov
push
pop
cmc
jg
mov
les
loop
add
sub
pop
call
gs
pop
inc
shl
or
outsb
cmp
xorb
push
sbb
jae
cltd
mov
adc
push
dec
int
xor
push
cwtl
jl
call
enter
dec
add
in
push
jle
jge
repnz
outsl
push
pop
jmp
and
pop
mov
xchg
cmpsb
sbb
add
or
sub
repnz
lock
and
jb
test
idiv
shll
jge
mov
and
shlb
lock
ja
mull
in
inc
mov
jg
sbb
inc
data16
imul
adc
pop
cmpsl
fmul
imul
and
mov
inc
pusha
adc
push
sub
xor
jns
cmp
ja
sbb
add
adc
stc
mov
je
call
lods
push
adc
sub
insb
mov
pop
jge
scas
inc
or
xor
gs
and
decb
sub
rcrb
test
or
in
mov
addl
fldl
in
mov
mov
mov
mov
and
test
adc
clc
je
adc
loop
dec
and
dec
push
jbe
and
add
faddl
sbb
cmp
inc
rorl
cmp
jno
and
stc
shlb
jbe
and
xchg
icebp
insl
xchg
into
push
popl
jle
xchg
or
pop
pop
cmpsb
xchg
inc
call
daa
leave
push
jecxz
icebp
sti
aas
pop
xchg
add
or
sub
and
out
stc
sbb
iret
dec
outsl
sbb
mov
xchg
lcall
cmpsl
es
imul
bound
push
xor
xchg
imulb
mov
mov
fwait
cmc
pop
ret
repnz
or
cmpsl
sub
jg
int3
std
scas
xchg
xchg
adc
leave
sub
dec
pop
or
mov
cmp
mov
or
add
xor
fmul
test
in
mov
cli
jg
out
or
or
ret
xor
cmp
pushf
cmpsb
fisttpl
mov
inc
movsl
scas
sub
test
fmuls
xchg
mov
mov
mov
jp
ja
leave
mov
nop
cld
rclb
mov
fnsave
dec
ficoms
ljmp
clc
push
add
sub
rcrl
addb
in
mov
scas
xchg
cmp
pop
cmpsl
dec
and
faddl
dec
mov
jp
dec
mov
or
fs
pop
xchg
cmp
or
xor
mov
loopne
and
dec
and
leave
mov
fsubr
loopne
ljmp
imul
adc
rorb
loope
cwtl
jecxz
push
inc
push
nop
pop
pop
push
dec
mov
ror
icebp
mov
test
sub
adc
jge
pop
scas
xchg
mov
sti
cmc
xor
dec
sarb
sub
rolb
leave
nop
jp
xor
mov
sbb
cltd
fs
cmp
outsl
dec
mov
push
mov
mov
test
mov
scas
inc
jae
stos
sahf
mov
mov
xchg
jle
and
push
loop
fiaddl
xchg
mov
push
xor
adc
out
in
jae
aaa
test
mov
std
pop
ss
add
push
out
ud2
cmpsb
inc
in
cs
or
sbb
xor
lahf
loopne
and
adc
jmp
push
add
mov
pop
or
cmpsl
xchg
loopne
adc
loopne
cmpsl
cmp
or
and
pop
or
adc
mov
cmpsl
and
or
xlat
in
add
lock
insb
out
fimull
popa
sub
push
push
xor
rol
push
dec
fstl
mov
or
mov
sub
test
outsb
pop
test
jo
push
mov
adc
or
outsb
sbb
sub
sbb
fstps
mov
pop
mov
and
cmp
jge
add
push
push
dec
and
xor
xchg
pop
push
cmp
fdivs
cmpl
cltd
cli
adc
mov
sbb
push
pop
testb
out
xchg
mov
push
shrl
cli
pusha
xor
xchg
mov
and
push
ds
insl
mov
xchg
and
les
inc
adc
int3
pop
cli
out
sub
sub
lds
mov
pop
inc
daa
fs
sbb
pop
sub
cmp
lds
or
sbb
mov
dec
mov
aaa
cmp
je
cmp
mov
outsb
push
push
mov
push
pop
jge
in
jae
movsl
jmp
out
cmp
andl
cli
int
dec
sub
lock
sbb
jg
dec
mov
pop
fldcw
leave
mov
inc
movsb
lds
cld
jmp
mov
in
cmc
movsl
scas
adc
cmp
push
fcmovnu
je
mov
xchg
fwait
mov
mov
and
imul
ja
sub
mov
loop
add
cmpb
ret
jmp
mov
call
insl
rcr
xor
cli
fldcw
push
mov
sbb
sbb
rcrl
mov
jl
sub
addr16
mov
mov
popa
jb
adc
sbb
push
cmpsl
ljmp
dec
fiaddl
mov
in
repz
sbb
out
das
pop
scas
loope
sub
fcoml
pcmpgtw
lock
fildl
lock
mov
mov
aam
pop
pop
icebp
daa
and
jecxz
inc
jmp
aam
sti
aad
inc
xlat
into
sti
dec
fdivrp
cli
mov
jno
push
mov
lods
mov
xchg
clc
pop
jo
lea
fs
pop
ljmp
mov
mov
pop
and
add
mov
and
pop
fs
rolb
clc
add
pop
inc
cmp
lret
cltd
sbb
cmpsl
incl
mov
scas
jb
sub
in
aas
movsl
test
mov
pop
sub
stos
sbb
pop
aaa
xor
cltd
inc
sub
imul
addr16
int
leave
jle
pop
sub
cmp
xor
mov
pop
cmp
cltd
push
out
mov
daa
repz
push
cmp
popf
or
sub
cmp
xchg
sbbl
fidivrl
adc
dec
nop
ljmp
aam
sub
xor
aad
into
jns
or
jl
inc
stos
aad
inc
popf
pop
mov
sbb
pop
sbb
pop
adc
sub
aam
push
pop
in
sub
int
cmc
andb
xchg
ret
xchg
sarl
test
mov
jnp
stc
cmp
sub
lret
movsl
dec
lods
out
movsb
jmp
push
out
pop
sbb
out
repz
test
add
push
jmp
loope
push
dec
mov
xchg
and
xor
scas
fiaddl
jae
jnp
jne
scas
jno
mov
cmp
lret
inc
inc
dec
pop
sarl
enter
gs
sbb
aas
pop
nop
ror
jg
lahf
inc
lods
dec
movsl
aam
es
inc
jle
pop
jno
add
or
push
inc
mov
sbb
xchg
ret
leave
out
sahf
fcmovbe
ret
repz
jbe
push
mov
adc
pushf
jmp
scas
dec
cmpsl
jae
jp
sub
leave
and
dec
das
scas
sub
out
mov
sub
ficompl
std
icebp
fnstcw
fisubrs
and
fstpt
or
or
pop
ja
data16
rcrl
fdivrs
rcr
subb
scas
lret
imul
js
or
stc
dec
ss
std
imull
lahf
sub
ljmp
popf
test
adc
fistl
test
lcall
call
ljmp
xchg
sahf
lods
rolb
adc
call
aam
jb
cmc
fistpll
iret
cmp
fsubl
xchg
rcr
xor
frstor
movsl
cld
nop
jne
data16
idivb
jbe
pop
add
fildll
inc
mov
xchg
sub
jmp
das
sbb
sbb
scas
repz
adc
mov
mov
mov
or
out
fnstsw
mov
mov
insl
jns
mov
pop
xchg
or
dec
dec
jo
fs
stos
aad
dec
or
inc
shll
mov
cli
cmp
into
push
aad
xchg
scas
andl
pextrw
push
mov
ljmp
out
cmc
jl
mov
scas
jbe
xchg
loope
cmc
mov
pop
push
sub
repnz
jmp
push
ficoms
clc
sbb
in
add
push
sahf
iret
mov
sarl
mov
cmc
xorl
out
loop
fimull
lds
cmpl
pop
adc
stos
xchg
mov
sub
pusha
arpl
fcom
pop
jle
push
xor
xor
xchg
add
cmc
mov
cmc
out
mov
mov
in
push
je
repnz
mov
mov
dec
clc
xor
stc
mov
test
movb
jae
cmp
and
fcomps
in
add
adc
leave
adc
js,pt
push
xchg
mov
and
popa
add
push
or
jb
adc
xchg
test
add
fs
mov
ja
push
iret
insl
pop
push
ja
movsb
mov
gs
dec
mov
loope
xchg
sub
adc
pop
rcll
inc
adc
mov
das
xchg
dec
or
push
rdpmc
lods
xchg
ds
mov
mov
call
mov
inc
subl
cmp
div
mov
lock
pop
add
xchg
dec
and
fcoms
imulb
frstpm(287
mov
mov
je
dec
out
lods
fistl
in
mov
pusha
pop
xorl
pop
mov
jge
or
fisttpl
test
test
int
ds
sbbl
xor
enter
imull
popa
shll
mov
leave
dec
lcall
test
dec
sub
xchg
cwtl
add
or
and
jno
push
ss
jecxz
add
shll
mov
leave
push
pusha
or
in
data16
xchg
orb
mov
inc
in
in
xchg
shlb
xchg
cmpsb
sbb
jmp
mov
xor
xchg
mov
pop
xchg
mov
push
or
popf
repz
and
dec
sub
sub
idivb
pop
icebp
xchg
push
inc
shl
je
mov
shlb
add
leave
add
add
pop
sub
inc
push
jb
jnp,pn
sub
pop
xchg
aam
cmc
imul
pop
sub
out
out
jl
pop
out
sbb
addr16
sbb
scas
pop
pop
inc
pop
cmp
nop
or
push
mov
inc
leave
xchg
dec
jns
jge
loop
ret
inc
lahf
push
jl
push
movsl
sahf
dec
shrb
pop
testb
call
pusha
xchg
xor
hlt
jb
pop
dec
hlt
xor
stos
sub
scas
xchg
mov
push
lret
addr16
push
clc
pop
insl
lods
xor
xchg
fidivrs
sbb
jnp
push
mov
sti
rcr
imul
xchg
jmp
jmp
rolb
das
adc
insl
clc
cmpl
and
cmp
pop
jnp
add
lcall
or
rorl
push
and
insb
shrb
pop
ljmp
dec
mov
mov
ljmp
daa
sahf
shrb
loopne
jle
mov
push
dec
jno
pop
inc
loop
xor
fcmovnb
enter
jb
lds
jge
insl
fcom
inc
enter
test
pop
and
das
or
dec
test
mov
dec
xor
adc
mov
and
mov
cmp
push
adc
aas
jg
jne
imul
aas
addl
outsb
dec
add
lcall
dec
mov
pop
ljmp
jmp
mov
add
and
fldt
jecxz
ret
jb
adc
add
data16
cld
fists
icebp
jno
push
mov
shll
cmp
xor
adc
sbb
pop
inc
es
add
lods
cli
lods
aad
dec
xchg
push
mov
enter
mov
daa
cmc
data16
lahf
dec
pop
addl
sub
xor
mov
data16
stc
or
sbb
fldl
ss
add
or
imul
rclb
fimull
sbb
push
iret
call
sub
xor
push
mov
xor
cmp
inc
push
adc
das
lods
ja
xor
adc
test
mov
adc
mov
lds
dec
aad
or
in
xchg
push
adc
scas
je
jns
dec
ja
add
data16
test
or
mov
scas
pop
ret
test
xlat
lods
jg
in
stos
sub
ret
cmp
xchg
daa
cmp
inc
jb
mov
dec
jnp
mov
push
cmpsb
nop
sub
mov
add
clc
mov
pop
fidivrl
push
jno
mov
sub
pop
dec
adc
xor
adc
sub
pop
sub
in
cmpb
or
ja
imul
ss
fsubs
fstpt
sub
and
mov
mov
pop
outsb
push
lds
xor
mov
ljmp
aaa
cwtl
push
subl
xchg
dec
cmp
out
push
aas
sbb
xchg
dec
inc
sub
push
verw
pop
dec
mov
mov
pop
and
mov
jnp
mov
or
les
mov
rol
stos
popf
test
dec
pop
sbb
add
mulb
ja
ljmp
mov
or
or
mov
mov
or
and
adc
arpl
push
mov
adc
repnz
dec
ja
das
xor
int3
cld
movsb
pop
xchg
lret
outsl
fs
data16
xlat
les
xchg
inc
xchg
mov
sub
jbe
mov
test
adc
pop
jl
jo
shrl
je
and
aam
mov
ret
repz
dec
inc
pop
xchg
ret
fbstp
dec
sub
fldenv
add
in
adc
aaa
popa
rcrl
mov
sbb
sub
out
push
mov
mulb
push
lcall
cmp
xor
inc
xchg
jge
push
jae
test
push
ret
int3
icebp
and
push
cmp
xchg
sub
mov
sub
inc
ss
jge
lds
test
insb
and
push
ror
cmpsb
andl
mov
adc
pop
lods
fnsave
sub
fsts
les
cmp
sub
inc
sahf
mov
push
fld
daa
lcall
lds
iret
lods
cmp
jmp
jne
pusha
movsl
jl
mov
and
cmpsb
sub
xchg
out
cmpsl
cmpsl
pop
xor
cmc
mov
loopne
dec
sub
pop
mov
jmp
fwait
ror
cmp
add
popa
push
pop
pusha
ljmp
fld
xor
sbb
ss
into
push
out
loopne
mov
pop
out
mov
shrl
iret
mov
mov
mov
lods
lods
push
andb
popa
je
scas
or
add
and
inc
push
dec
jnp
imull
add
in
ficompl
aam
ljmp
cltd
xor
jp
movl
and
imul
jo
cmp
iret
push
push
jbe
es
dec
push
decb
lds
pop
or
ss
push
sarl
and
lret
mov
fistpll
test
inc
scas
adc
leave
in
sbb
fcoml
das
cld
iret
sub
jle,pt
pop
sahf
sub
sbb
sub
out
sbb
mov
push
scas
xchg
push
pop
sarb
int3
aaa
aaa
mov
push
aam
pop
adc
clc
mov
popa
nop
and
cli
mov
cmp
add
sub
cmp
mov
xlat
test
fstpl
fisttps
adc
mov
xor
jge
pop
mov
les
mov
std
int
rorl
jle
mov
cmp
sub
lods
mov
rorl
leave
dec
jg
push
push
ret
sbb
sub
test
push
daa
ljmp
push
mov
add
xchg
push
frstor
loope
mov
jmp
mov
jle
lcall
fwait
push
out
in
mov
outsb
cwtl
jl
cmpsl
test
test
test
pop
inc
inc
inc
adc
or
es
lock
xchg
lret
mov
mov
fadds
scas
popf
iret
gs
std
imul
xlat
pop
and
and
je
mov
out
shll
xchg
sarb
cmp
mov
in
mov
cmc
testl
iret
popf
ss
mov
test
outsb
fwait
int
xchg
sahf
push
fbstp
and
or
or
popa
or
jns
outsl
cmpsb
sbb
push
es
add
xchg
sbb
xchg
scas
adc
loope
cmp
lahf
bound
sbb
or
idivl
aad
push
xchg
ss
and
push
xchg
adc
and
das
movsb
jbe
mov
xchg
push
mov
rclb
fnstcw
std
insl
and
and
lcall
mov
mov
adc
xchg
pushf
lret
jge
sub
mov
sub
sbb
pop
daa
cltd
add
push
roll
addl
movsb
dec
scas
jne
push
sbb
mov
xor
push
repnz
mov
add
xchg
cmovp
mov
mov
orl
shlb
sbbl
adc
jl
pop
test
jbe
inc
enter
call
mov
mov
push
jl
mov
jo
aas
out
mov
pop
aas
je
ja
push
push
fadds
mov
loope
imulb
subl
fldt
xchg
int
sbb
popf
stos
sbb
outsb
xchg
sub
pop
mov
mov
enter
jecxz
jmp
jno
cmp
jns
call
int
sar
out
pop
pop
jl
movb
enter
push
mov
add
stos
mov
dec
les
jnp
mov
outsb
fwait
loopne
cmc
xchg
mov
and
scas
inc
clc
fisubrs
aas
mov
adc
movl
cmp
push
outsl
in
jns
in
jmp
sub
jecxz
lret
mov
dec
pushl
sub
ds
les
push
cld
jecxz
fwait
push
mov
stos
sub
loop
mov
jo
xchg
sti
mov
push
mov
sbb
incb
push
adc
aad
jg
push
push
nop
cmp
and
test
popa
out
ja
jg
jmp
push
inc
xor
subb
push
fs
pop
enter
xor
not
sub
lods
jb
shrb
cli
inc
lret
arpl
pop
push
ret
nop
cmp
imul
xor
mov
notl
inc
lret
stc
xorl
cmp
fnstcw
mov
icebp
jo
and
pop
aas
mov
inc
xchg
cmp
mov
pop
repnz
popa
pop
xor
lea
ljmp
xchg
inc
dec
cmp
aam
adc
sbb
adc
mov
lock
out
test
xchg
shrb
ljmp
inc
cs
rcl
and
push
sti
outsb
mov
or
imul
es
pop
mov
jns
imull
cmp
outsl
push
mov
cmp
scas
jp
push
mov
pop
std
jmp
gs
push
js
daa
sub
mov
jge
xlat
ja
dec
push
lods
test
clc
sub
push
mov
pop
mov
es
fists
inc
mov
or
inc
inc
or
inc
es
in
mov
mov
xchg
add
mov
xorl
daa
fldenv
xchg
mov
jp
adc
stos
adc
out
mov
cmpsb
mov
push
add
pop
mov
ret
enter
adc
imul
gs
push
ss
and
xlat
fidivrs
in
and
or
cwtl
xchg
fisttpl
rol
fcomi
nop
addr16
and
fimuls
insb
fs
mov
or
pusha
adc
arpl
mov
lods
fmul
addr16
jo
movsb
nop
test
into
jmp
pop
std
rclb
outsl
cmp
iret
int
pop
jmp
popa
jl
dec
js
xor
lahf
ret
xor
lret
cmpsl
stos
jl
rolb
js
lds
out
cmp
ljmp
adc
ret
pop
pop
in
mov
or
xchg
mov
xor
fisttpll
aam
add
fcomps
dec
imul
fwait
out
mov
push
in
sub
cmovge
out
test
dec
loop
push
xor
jae
sarl
xchg
loop
fisttps
pushf
fsubrs
xor
test
push
inc
push
xorb
cmp
lods
fcmovnu
or
popa
lea
add
rcrl
repnz
xor
jg
or
call
xor
push
adc
outsb
sahf
jo
pop
nop
mov
test
dec
sbb
mov
popl
lods
mov
pop
cli
dec
dec
inc
mov
iret
fwait
pop
adc
sbb
jb
xor
inc
jnp
add
push
push
dec
out
sub
flds
ljmp
xor
out
out
roll
movsl
cli
out
adcl
outsb
or
adc
stc
sbb
adc
jns
fsubs
sub
mov
mov
out
int3
call
ret
mov
pop
push
clc
jbe
xor
sub
in
test
jg
daa
xchg
testb
add
lds
into
fisubrs
data16
mov
jns
ficomps
jg
pop
pop
ja
pop
adc
sbbl
pop
jecxz
test
mov
inc
dec
pop
cmpsb
lods
cmp
loope
shlb
icebp
gs
mov
lahf
push
pop
mov
int
pop
inc
mov
and
int
xchg
mov
cmp
jnp
adc
repnz
mov
enter
test
vandps
loop
int
filds
mov
repz
pop
je
dec
je
inc
imul
insb
mov
sbb
add
xor
mov
sub
test
fidivl
fistl
sahf
cmp
movsl
lds
imul
sub
testb
lret
and
mov
jne
sbb
fisubl
nop
cltd
jl
mov
cmp
pop
stos
dec
inc
arpl
jecxz
mov
frstor
xchg
stc
jecxz
lcall
andl
xchg
and
test
in
les
xchg
mov
push
jmp
fcoml
and
into
cmp
add
popf
imul
xchg
or
add
rol
sbb
call
jnp
push
dec
push
outsb
add
cld
cwtl
scas
pop
xor
cmp
ficompl
jg
push
dec
xlat
outsl
mov
cmp
cmp
mov
pusha
out
jge
iret
or
sub
test
pop
imul
in
dec
adc
cmpsl
pop
add
imul
inc
inc
add
mov
xor
and
outsb
push
xor
pop
jl
xchg
dec
jns
inc
mov
and
int3
hlt
inc
xor
sbb
int
loopne
ret
fwait
mov
popa
mov
fidivrl
notb
pop
jmp
add
nop
fs
rorl
pushf
insl
jle
pop
sarb
sbb
adc
mov
add
rcll
sbb
dec
lcall
cmp
sub
shlb
rcr
movsl
mov
ficoml
test
inc
lock
loop
cmpsl
sar
call
lcall
sub
pop
cmc
addr16
inc
xor
sti
mov
push
jno
add
or
inc
fs
adc
mov
int
xchg
dec
pop
jb
sub
psubb
addl
fldl
mov
sahf
cmc
mov
movsb
sub
xchg
rcrb
push
dec
ss
dec
pop
cmp
jo
jbe
jmp
leave
cmp
mov
push
outsb
jmp
clc
lea
outsb
mov
outsl
push
hlt
xchg
pop
push
lcall
out
xor
or
sub
inc
test
test
mov
jne
cwtl
inc
cmpsl
xor
outsl
cmpsb
lahf
jno
iret
hlt
jle
sbb
lods
cwtl
loope
mov
mov
lea
loopne
in
mov
shll
jge
ror
push
mov
movb
scas
jo
fimuls
jge
mov
in
cld
fwait
cmpl
lahf
movsl
leave
mov
or
dec
mov
cld
out
jle
stos
mov
adc
xchg
cmpsb
ret
mov
sbb
xchg
in
pop
jne
lret
lds
push
fistpl
xor
xchg
leave
and
mov
xchg
icebp
stos
fsubr
sbb
jb
and
test
test
adc
jo
jp
xor
leave
xlat
loopne
sub
sahf
repnz
jo
lock
dec
hlt
mov
je
xorl
mov
shlb
in
xchg
orb
je
jno
repnz
xor
xchg
jbe
jle
sub
xchg
push
clc
bound
shrb
rcr
add
adc
lret
inc
cli
movsl
mov
sub
pop
arpl
jae
and
inc
xor
cmpl
mov
cltd
in
int3
adcl
js
jns
sbb
dec
sti
mov
cwtl
mov
push
add
lea
mov
fld
cld
xchg
mov
pop
mov
add
test
add
inc
push
xchg
popa
mov
aaa
je
sahf
ds
mov
movsb
sbb
sbb
je
fstpt
mov
sbb
or
adc
test
test
ret
sub
sbb
incl
sub
mov
mov
jmp
in
mov
out
cmc
je
sbb
imul
mov
cmp
ds
enter
add
mov
gs
sbbb
lds
clc
push
mov
into
gs
adc
cmp
jl
xchg
and
ret
in
mov
sbb
inc
rol
rcrl
jl
popa
movsb
ret
ja
inc
int
ja
aam
xchg
sub
xchg
add
mov
pop
sbbb
xchg
fs
aaa
mov
or
fwait
lods
cmp
sub
xor
cvtps2pi
push
pop
in
fbstp
and
sbb
insw
js
loope
sbb
sbb
lods
push
mov
adc
enter
push
add
unpckhps
aas
pop
stos
sub
adc
mov
cmc
negb
mov
std
xor
clc
out
xor
cld
aaa
aad
xchg
lock
xchg
sub
jne
repnz
into
gs
jae
mov
jle
xchg
insb
jae
popf
arpl
and
into
push
inc
xchg
jno
cmp
setb
push
out
lods
xchg
jge
sbb
sub
and
mov
lret
adc
call
or
pop
andb
jno
stos
repz
mull
mov
mov
cs
sbb
cmp
scas
iret
xchg
add
sahf
xor
jecxz
and
mov
js
fwait
aaa
test
xchg
fidivrl
jo
orl
jbe
stc
push
inc
repz
sub
aad
js
shrl
sub
mov
push
dec
in
lret
mov
cmp
dec
orb
dec
ljmp
aam
mov
shll
jmp
loope
mov
sahf
pop
pop
sti
push
xchg
or
sbb
fnstsw
jb
pop
outsl
enter
lahf
cmp
or
stos
pop
cmp
cs
and
into
cmp
sub
jecxz
and
movsl
pop
mov
pop
pop
rorb
out
loopne
xchg
ret
fwait
jle
lret
daa
inc
push
cmp
inc
adc
cmpl
mov
sbb
xor
shlb
mov
hlt
xor
sub
mov
test
das
jo
xor
rcl
mov
fdivr
cmp
into
jns
mov
es
cld
ret
and
loopne
adc
mov
pop
push
xchg
inc
and
call
pusha
adc
inc
in
cmp
mov
je
push
push
mov
es
mov
pop
js
clc
or
xor
or
in
imul
xchg
fcom
mov
lock
lds
pop
sub
mov
in
into
outsl
push
lock
mov
setne
mov
dec
test
fmuls
dec
lret
cmp
inc
sbb
adcb
std
cmp
or
pop
scas
jl
ret
xchg
cs
fnsave
or
xchg
mov
gs
outsl
lret
adc
rcl
insb
rorb
shr
mov
in
xchg
and
and
or
lahf
rorb
pop
test
pop
and
sbb
popa
jbe
inc
push
lock
mov
sub
push
jne
mov
adc
mov
xor
sub
mov
xchg
ja
add
out
pop
push
test
mov
in
mov
das
or
pop
mov
popf
and
fcoms
fsubs
sub
mov
lods
adc
jp
fistl
hlt
push
or
enter
pop
addr16
cmp
aaa
dec
lock
mov
addr16
jns
fimuls
cmp
mov
mov
inc
mov
movsb
or
int
dec
icebp
sub
push
negl
test
push
adc
cli
sub
iret
or
dec
pop
xchg
sarb
insb
cmpsl
xlat
or
test
jno
mov
inc
lods
outsl
jbe
push
xadd
leave
sbb
push
cld
mov
pop
mov
movsl
cmp
mov
push
xchg
jns
sti
pushf
mov
je
jns
aam
dec
out
repnz
icebp
jmp
sti
xchg
test
mov
shlb
faddl
les
dec
popl
adc
fisttps
aaa
sbbl
clc
jnp
push
ja
xor
pop
push
pop
mov
shrl
mov
pop
and
shlb
pop
xchg
pop
jae
jns
cmpsl
sub
into
xorl
rcr
dec
jnp
es
mov
clc
add
pop
sahf
xor
movsb
push
or
sbb
hlt
xchg
jecxz
call
jge
gs
adc
das
aas
int3
popa
pushf
outsl
xchg
cli
push
mov
cmp
call
xor
xlat
and
mov
outsb
iret
bound
push
sbb
rolb
mov
sarb
je
jl
jb
aaa
mov
enter
push
sahf
add
and
ror
cmc
adc
jnp
call
cmp
cmp
fwait
mov
jecxz
mov
adc
xchg
outsb
mov
pop
or
popa
pop
jmp
push
push
add
fsubl
jns
adc
out
cmpsb
adc
jmp
xchg
mov
sti
xchg
push
pop
pop
mov
out
dec
xor
push
and
xchg
fsubrs
scas
dec
pop
fnstsw
sarl
in
cld
xchg
mov
cs
sub
xlat
cmp
nop
icebp
inc
mov
mov
adc
push
daa
hlt
jno
orl
fs
jo
stos
xchg
xor
pop
aas
jg
dec
jae
into
jo
insb
scas
lock
inc
lods
call
dec
aad
scas
fbld
dec
mov
lods
ret
int
push
pop
sub
out
addl
out
xchg
jmp
nop
std
js
ret
dec
xor
test
fldenv
iret
cltd
add
test
or
pop
stos
pop
aad
push
sub
push
mov
daa
aas
and
xor
sub
mov
mov
inc
push
shrb
mov
cmp
inc
sub
movsb
es
pop
inc
aaa
aam
sarl
not
jae
xchg
mov
fldcw
xor
popf
cmp
mov
fcmove
repz
sub
sarb
mov
inc
popf
push
mov
scas
testl
push
or
fistpl
shlb
int3
and
mov
sbb
fnsave
sub
in
addb
xor
andb
cli
sub
jmp
dec
push
sub
test
aas
xchg
into
push
mov
in
adc
cmp
inc
jp
fmuls
adc
xchg
stos
cmpsl
mov
ret
clc
pop
sbb
cmp
iret
xlat
lret
sti
and
jp
rorb
mov
jge
jbe
mov
and
add
or
adc
lock
add
bound
fstps
insl
fwait
int
test
adc
mov
add
fcomp
xor
add
ja
cmp
jmp
mov
or
or
pop
and
in
sbb
stc
sub
scas
outsb
and
sbb
notb
pop
fwait
pop
jmp
cli
pop
imul
outsb
loopne
aas
cmp
addl
xorb
push
sahf
rorl
xchg
es
fnstcw
push
jl
inc
and
shrb
or
and
adc
push
xor
out
loope
dec
adc
inc
jg
xchg
sub
xor
loopne
add
lods
aam
call
xchg
aad
pop
mov
mov
adc
adc
mov
and
loopne
mov
or
mov
mov
rcrb
push
aam
push
inc
cmpsb
fnsave
mov
jle
jp
aam
gs
mov
clc
or
insb
imul
xor
rorl
inc
pop
jecxz
rorl
jns
lods
movsl
call
xor
jmp
mov
stos
inc
or
xchg
lds
arpl
mov
vpcmpgtd
fmull
or
jns
add
ret
in
popa
lods
jge
mov
or
jl
es
in
inc
es
jmp
hlt
push
cwtl
jg
mov
adc
pop
dec
pop
mov
out
or
dec
testb
loopne
mov
sbb
xor
jg
andl
mov
mov
xor
push
xchg
jae
std
loope
ss
and
xchg
xor
cmpsl
jmp
int3
mov
jne
xchg
add
ds
xchg
cmp
js
xor
push
or
ret
js
push
cmp
fdivrl
xchg
adc
sbb
jge
cmp
push
insl
dec
dec
faddl
jmp
push
pop
test
jge
jbe
xor
lods
jae
cltd
xchg
mov
pop
dec
mov
cwtl
cmc
mov
insb
stc
mov
jg
lcall
xor
add
push
jecxz
sub
cs
xor
aam
lcall
xor
jbe
sbb
push
pusha
stos
fidivrl
jg
mov
sbb
mov
dec
lret
and
push
sti
mov
test
inc
pusha
mov
lock
repnz
push
add
pop
mull
sub
ret
jno
and
scas
stos
sbb
repnz
sub
ljmp
sti
pusha
fisttpll
imul
dec
call
rorb
xor
xor
push
xchg
out
cli
xor
icebp
inc
repnz
lahf
xor
push
add
lret
or
ss
mov
ljmp
sbb
jns
jmp
es
outsl
jl
mov
loope
jmp
ja
rolb
out
cmp
dec
and
lods
je
iret
mov
push
jge
ljmp
les
mov
mov
inc
loope
add
ficomps
add
push
pop
rcr
nop
lds
xchg
fsts
test
lret
dec
lret
es
daa
jg
xlat
xchg
xchg
xor
shll
movb
les
call
jg
push
cmp
pop
shr
test
lret
pop
add
add
sbb
push
pop
jno
mov
insl
xor
mov
push
mov
in
out
xchg
inc
sub
rcrb
test
pop
gs
or
out
push
addr16
inc
or
push
outsl
lock
enter
xchg
sahf
cmpsb
cltd
lcall
push
jns
push
dec
sbb
xchg
insb
dec
inc
push
xor
in
leave
or
inc
int
push
mov
pop
and
or
loop
sub
dec
xlat
sbb
fbstp
push
jbe
roll
cltd
bound
sbb
add
push
jle
jmp
xor
pop
out
xor
pop
insb
push
lcall
lock
rclb
stos
je
inc
notb
popa
dec
pop
stos
or
and
icebp
pop
xchg
incb
cmpb
loope
mov
orl
rolb
clc
shrb
sbb
jge
andl
loope
pop
fadds
xchg
mov
aaa
ljmp
inc
sub
ljmp
hlt
sub
fdivr
mov
fwait
add
add
movsb
js
mov
rcl
outsl
dec
inc
arpl
push
adc
lods
mov
movsl
jmp
imul
pop
xchg
gs
sbb
xor
jo
addr16
add
in
jp
sbb
sti
repz
adc
mov
daa
or
scas
xor
jecxz
rcll
out
iret
cmp
out
jns
aad
inc
mov
mov
mov
rorb
pop
mov
sbb
push
xlat
adc
push
fwait
hlt
cmp
xchg
stos
scas
imul
add
outsl
push
push
shrb
das
jae
and
mov
movsl
das
fsubrs
lock
jae
sbb
stc
xchg
adc
pop
data16
xchg
lahf
das
or
mov
repz
inc
outsb
pop
add
jmp
add
lret
call
pop
lret
stos
add
int3
int
clc
lahf
xor
inc
and
sub
mov
pop
aas
sub
fisttpl
rolb
xchg
xchg
cmpsl
mov
cmp
lock
and
or
fdivs
scas
inc
pop
scas
mov
sbb
fstpt
fwait
or
sbb
push
dec
in
or
mov
arpl
stos
mov
mov
movsl
jno
test
cld
inc
movsb
jg
adc
jo
xchg
popf
jl
bound
int
in
jns
cmp
ret
mov
dec
mov
xchg
daa
lret
xor
addr16
mov
lds
jne
mov
mov
mov
sbb
out
cmpsl
loop
loop
test
test
imul
test
mov
cld
stos
jne
add
fdivl
xchg
scas
mov
mov
push
push
and
jno
sub
imul
mov
pushf
cltd
push
mov
jo
fwait
sub
das
lret
mov
push
lea
aam
push
orb
jo
mov
ss
jo
fwait
jne
call
xor
scas
pop
add
inc
adc
sub
subl
mov
dec
or
pop
ljmp
loope
mul
push
cmpb
jo
fsts
push
push
and
add
into
enter
iret
inc
imul
or
jmp
fwait
mov
aaa
out
ret
rcrl
pop
hlt
dec
jecxz
xchg
pop
sarb
int3
xlat
push
jle
stc
jl
xchg
sub
scas
inc
adc
sub
cmpsl
push
jg
push
push
fcomip
xchg
jnp
loope
push
pop
and
adcl
push
sub
hlt
xchg
xchg
outsl
fadd
sbb
jle
jl
adc
out
jnp
out
movsl
fstpl
cmc
mov
ss
push
icebp
into
cmpsb
and
mov
cmpsl
jle
adcl
add
in
test
jmp
mov
mov
shrl
rol
in
push
outsl
lahf
dec
inc
push
aam
xor
shl
pop
push
dec
das
mov
insb
cltd
leave
xor
inc
les
std
out
adc
aad
aad
push
arpl
aas
aas
mov
popf
filds
aam
jg
insl
sub
or
insb
and
jg
ret
jecxz
insl
movsb
mov
mov
push
and
fnstenv
test
sbb
loop
insb
aad
nop
mov
push
inc
imul
mov
mov
mov
xchg
scas
jecxz
jle
and
popf
pushaw
ljmp
pop
cmp
enter
jnp
aas
test
mov
sub
mov
cld
dec
hlt
into
test
ret
lods
add
std
cmpsb
aad
lret
fisttps
imul
pop
hlt
cmp
mov
adc
stos
or
fsts
add
lods
ss
mov
pop
repnz
adc
pop
mov
add
icebp
das
or
sbb
into
xor
lcall
scas
movsl
movsb
xchg
rclb
adc
movb
or
jmp
pop
sub
div
cmp
dec
inc
push
ds
and
xchg
cmc
mov
push
mov
aam
addl
jl
enter
xchg
hlt
outsb
sbb
pusha
sub
xchg
addr16
pop
scas
push
pop
outsl
xor
insl
in
mov
clc
xchg
cmpsb
std
popa
mov
pusha
inc
fimull
andb
or
cmp
push
pop
out
in
cmp
in
push
cmp
mov
lcall
outsl
nop
lea
mov
push
mov
in
sub
imul
mov
add
inc
xchg
fstl
pop
mov
pop
aaa
sbb
outsb
jno
jg
fidivrs
lods
xchg
test
xchg
out
and
push
gs
dec
mov
out
inc
jmp
add
stos
ljmp
adc
sbb
xchg
insl
fdivl
imul
xor
xchg
sbb
mov
leave
jb
emms
out
sub
jnp
fwait
add
cmp
test
cwtl
clc
push
xchg
pop
iret
push
inc
jmp
mov
lods
jnp
jle
mov
xchg
adc
ret
sbb
xchg
jbe
int3
ljmp
jecxz
mov
adc
or
mov
jge
aas
or
pop
xchg
pop
cmp
icebp
jle
mov
loop
sub
cmp
push
cli
int
insl
fs
or
add
fmuls
aaa
scas
notb
sbb
mov
mov
adcl
cwtl
cmp
jmp
lahf
dec
sbb
js
daa
lahf
mov
add
sbb
pop
xlat
or
push
push
adc
subb
insb
stos
mov
pop
fmuls
push
outsl
es
cs
jno
add
cltd
dec
fwait
pop
jecxz
lret
pop
in
push
mov
sar
lcall
jae
test
inc
add
xor
repz
sbb
imul
xchg
push
fcompl
jbe
xchg
jp
jle
jne
pop
lret
loope
aad
push
cmp
or
inc
inc
adc
inc
or
pop
sbb
in
test
movsb
pop
cmpsl
add
movsl
inc
mov
and
adc
and
dec
test
jnp
movsb
mov
pop
fcompl
push
dec
imul
push
test
cmp
dec
add
test
mov
dec
popa
sbb
in
sub
cmp
or
inc
orl
cvtps2pi
cmc
push
dec
pop
push
mov
repnz
lock
mov
sbb
lods
pushf
movsb
pop
fwait
iret
out
sti
inc
sub
mov
shlb
popf
movsb
or
shll
shrl
in
cmpsb
outsl
js
jno
xchg
ljmp
aaa
and
jmp
dec
movsb
pop
xor
sub
in
mov
in
dec
out
push
ja
subl
int3
sbb
sarb
sbb
test
push
das
xchg
cwtl
mov
pop
test
and
pop
lods
pushl
inc
mov
or
xchg
or
mov
scas
jl
sbb
xor
mov
adc
push
mov
sub
je
sub
jns
out
pop
bound
pop
mov
jae
dec
mov
jne
lods
stos
fsubl
ds
or
jne
fnsave
ds
out
sub
jmp
sub
rorb
xchg
in
arpl
por
dec
sahf
ss
or
pop
iret
mov
inc
jecxz
out
fdivp
fidivrs
shll
arpl
pop
fnsave
and
inc
stos
decl
or
jmp
ja
or
in
mov
sahf
pop
cli
and
xor
pop
adc
lds
sub
push
cli
mov
inc
xchg
push
sub
repnz
jmp
adc
shrl
pop
dec
push
pushf
test
mov
insl
xchg
ret
push
je
add
and
add
mov
dec
into
cmp
hlt
xlat
aaa
flds
jns
pop
fidivl
jecxz
jl
xor
fadds
mov
in
xor
xor
imul
cwtl
push
pop
movsl
sub
int3
push
sahf
xor
cltd
mov
scas
cmp
mov
call
inc
cli
bound
sbb
orb
cltd
leave
xchg
or
cmp
popa
pop
mov
push
sbb
dec
mov
lock
hlt
sub
ljmp
push
xchg
or
rcrl
cwtl
xchg
push
xchg
gs
or
sbb
ja
in
stc
sbbb
ret
es
push
add
test
add
imul
fcoms
inc
fs
push
daa
insl
fdiv
leave
sub
xchg
fwait
push
sub
fdivs
incb
das
iret
or
or
cmp
jb
aam
jg
or
sbb
xlat
mov
cmp
in
mov
bound
test
clc
je
jbe
cmp
cmp
pusha
notl
shlb
xor
jno
int3
rcrl
dec
lcall
xchg
fiadds
arpl
sbb
sub
popa
push
and
xor
fs
push
and
stos
fistl
mov
insl
jmp
xchg
dec
ljmp
cli
xor
sub
cltd
repnz
enter
xchg
ljmp
test
jmp
jae
or
fmulp
cmpsl
jecxz
inc
out
pop
and
in
add
mov
or
jnp
mov
mov
cmc
enter
inc
cli
vmaxps
inc
pop
cli
dec
adc
cmp
jno
ja
fscale
inc
imul
orb
push
shlb
sbb
mov
jecxz
leave
cwtl
test
leave
in
fstpl
mov
into
fistps
mov
iret
mov
les
aas
lret
inc
adc
fiaddl
add
inc
aad
add
andl
ffree
adc
sbb
test
pop
in
or
dec
or
jno
lds
or
mov
in
fs
mov
test
mov
mov
cmp
jl
sub
lahf
lahf
adc
enter
sbb
ds
pusha
lods
inc
mov
andb
mov
das
lock
jp
std
adc
jp
inc
pop
aad
call
jg
cs
and
dec
push
mov
lret
push
push
lahf
test
dec
sbb
outsb
jecxz
cmpsb
mov
in
cmp
scas
mov
cmp
rorl
push
aad
jle
lods
out
icebp
stos
pop
and
cmp
icebp
gs
push
adcl
push
push
sbb
in
adc
adc
jo
jmp
cmp
lea
cli
adc
mov
ljmp
jmp
xor
cmc
in
push
mov
fistpl
push
sbb
cmp
mov
rclb
rcr
sub
in
scas
add
or
inc
andl
test
dec
ljmp
mov
out
and
test
cld
in
sbb
dec
jnp
pop
lcall
xchg
pop
or
aas
and
incb
mov
das
fcomps
xchg
lahf
decl
cmp
jae
mov
pop
cltd
cmc
and
fadds
outsl
aas
inc
arpl
adc
and
xchg
mov
rolb
lea
mov
test
orb
push
cmp
popa
data16
jo
ja
inc
ja
cmpsb
jo
xchg
pusha
imul
inc
insb
movsb
dec
mov
pop
pop
in
or
pop
add
int3
adc
shrl
inc
xchg
movsl
jno
add
jl
mov
sub
add
popf
shr
dec
mov
and
add
or
ds
xchg
sbb
and
sbb
imulb
push
push
lret
jns
mov
rolb
xchg
movsl
xchg
mov
jb
cld
shll
cs
mov
sti
add
in
in
fsubs
dec
add
cwtl
inc
rorl
and
clc
xchg
xor
push
mov
push
jno
lahf
popf
jg
and
mov
add
jns
cmp
push
fistl
push
dec
stc
call
fsubs
pusha
out
ljmp
mov
into
pusha
xchg
inc
sarl
roll
shrb
test
pop
mov
inc
pushf
notl
mov
icebp
jge
fisubrs
xchg
cld
popa
fdivrl
mov
lcall
adc
call
hlt
stos
daa
popa
jmp
inc
js
cltd
addr16
pop
adc
roll
jg
sub
inc
stos
clc
or
out
lds
mov
ret
sub
cwtl
mov
popa
pop
rclb
mov
inc
cwtl
sub
xchg
repz
add
stos
not
sahf
dec
mov
jge
punpcklbw
add
ljmp
sbb
inc
cltd
or
push
pop
imulb
das
fs
pop
pop
addr16
gs
mov
pusha
and
sti
cmp
lret
pop
inc
outsb
xor
adc
inc
jl
sbb
mov
cltd
arpl
shlb
lret
lret
popa
push
sub
or
sub
stos
pop
js
mov
loopne
inc
jge
xchg
lcall
loopne
dec
hlt
push
cmp
jbe
stos
in
xor
dec
cmp
pop
outsb
push
jns
inc
add
add
cmpsb
add
out
mov
inc
insb
xchg
cmp
roll
enter
dec
cltd
and
insl
or
jecxz
push
in
push
adc
cmc
push
or
or
jae
data16
sub
inc
jp
pmulhuw
mov
push
mov
fimuls
aas
xor
bound
jmp
adc
nop
adc
mov
outsb
daa
dec
movsb
sbb
inc
sbb
cmp
js
jg
mov
icebp
jae
lret
ss
aas
mov
and
stos
mov
mov
bound
shll
pop
inc
into
jno
in
pop
mov
loopne
out
xchg
out
jg
mov
scas
jo
sub
movsl
out
pushf
js
sbb
popa
aad
xor
insl
daa
dec
test
mov
fsts
repnz
rcl
xchg
aad
arpl
xor
rorb
or
mov
dec
xchg
adc
pop
rolb
cmp
pop
ds
repnz
fldenv
dec
addr16
imul
mull
sbbl
xchg
stos
sahf
scas
lcall
sbb
push
jle
das
popa
sbbl
int
mov
dec
fildll
mov
pushf
push
push
dec
enter
pushf
test
mov
cmp
add
and
and
scas
xchg
dec
jno
stos
loop
repz
roll
loope
sub
push
icebp
ret
dec
xorb
cmpb
dec
pop
in
jae
aam
jp
testl
dec
jnp
adc
addr16
pop
cmp
ljmp
mov
pop
dec
insb
jg
lods
xchg
push
sub
sbb
mov
xchg
daa
push
cltd
xor
scas
test
sbb
test
out
int3
mov
sarb
cmp
inc
out
movsb
mov
lea
mov
lds
lcall
cmp
inc
std
cmp
lds
sti
xchg
icebp
cmp
add
inc
jb
cmp
jecxz
iret
mov
mov
ljmp
add
mov
fs
stos
dec
dec
rcll
push
out
in
sbb
cmp
mov
insb
sbb
stc
xor
cli
inc
adc
xor
or
mov
push
outsb
inc
arpl
jle
jmp
pusha
push
jbe
sub
leave
scas
imul
jl
out
cmp
dec
sbb
mov
rolb
jno
or
jecxz
movsl
loop
dec
leave
fs
pop
fdivl
add
and
test
mov
push
jo
fmull
in
xchg
jge
jle
xchg
cmp
lods
sbb
jge
subb
popf
enter
sbb
dec
xor
jp
nop
jo
das
cmpsb
or
dec
mov
xchg
pop
aas
in
clc
or
pop
lret
scas
jo
xchg
data16
ja
sarb
cmpsl
or
jbe
nop
into
adc
cmp
xchg
mov
sbb
pop
lcall
ljmp
pop
aaa
notb
ficoml
cmp
dec
test
das
jmp
out
dec
or
cs
mov
repz
pusha
xor
mov
orl
sbb
pop
cmp
sbb
inc
xor
push
adc
sbb
xor
sub
call
popf
insl
out
adc
sbb
test
cwtl
cwtl
jne
das
fisubl
daa
in
ds
lcall
pop
push
adc
mov
and
inc
scas
cli
int3
iret
push
into
stos
mov
cli
notl
dec
out
cmpsl
je
int
cmp
jb
mov
mov
int
mov
sub
lret
push
sub
cmpsb
dec
pop
mov
jge
xor
imul
lods
mov
xor
iret
cmp
pop
xor
push
outsl
pop
loopne
dec
sbb
push
popf
xchg
xchg
jmp
or
sbb
enter
bound
adc
mov
or
sbb
lea
movsl
adc
repnz
mov
imul
sarl
aaa
xchg
jecxz
icebp
adc
push
int
jne
cmpsl
mov
shl
in
pop
inc
js
orl
push
scas
shr
cmc
sub
fsub
enter
dec
cld
notl
aad
push
jo
push
and
fstl
aaa
and
mov
push
out
popf
mov
lret
mov
cwtl
popa
adc
push
cmp
pop
cmpsl
daa
fwait
dec
aaa
insb
movsb
cli
dec
jmp
stc
add
jmp
mov
add
jb
xchg
fs
and
mov
out
adc
lret
testb
sbb
popa
data16
jnp
ljmp
dec
dec
daa
push
es
jmp
xor
lahf
sbb
loop
nop
insl
andb
push
shll
cmp
in
push
arpl
jecxz
ret
dec
andb
mov
test
xor
popa
cmp
cli
das
or
sbb
shrl
cwtl
lcall
outsb
out
xlat
fwait
dec
cli
outsl
jp
daa
mov
fdivrs
negl
rcrl
sbb
shl
test
cltd
int3
sub
int3
sub
and
pop
sub
and
cltd
lock
leave
data16
xchg
cli
or
in
jne
cmp
jo
cwtl
jae
mov
push
mov
mov
pusha
sub
aad
push
gs
sub
cld
xchg
cli
shl
jp
cmp
dec
xchg
cmp
fmul
sbb
ja
nop
mov
sahf
pop
bound
mov
movsb
jmp
adc
imul
and
into
and
sahf
call
jo
adc
fsub
sub
shll
mov
faddl
lods
test
out
sbb
shlb
cmp
xor
pop
pusha
mov
sub
jns
popa
sub
mov
inc
in
fwait
scas
popa
mov
push
cltd
xor
mov
repz
add
dec
xor
xchg
dec
out
push
lret
push
mov
cltd
lock
push
movsl
add
jge
dec
sub
mov
inc
rcrl
or
scas
js
fsubs
pushf
aas
xchg
and
jnp
es
mov
mov
cmp
cwtl
jl
sub
push
jge
test
mov
cs
xchg
in
ficomps
mov
xchg
scas
pop
mov
fwait
xor
adcb
daa
pop
mov
cmpsl
les
pushf
xlat
lds
sbb
cmp
test
andl
inc
fcomps
push
ds
mov
mov
fwait
adc
push
push
adc
inc
aas
add
insl
push
sub
pop
sbb
scas
movsl
js
pop
push
cmp
push
xchg
and
pop
nop
imul
jg
ds
jns
mov
pop
loopne
pop
dec
mov
test
xchg
inc
jge
pop
testb
outsb
sub
je
pop
pop
mov
fs
cmp
pushf
adcb
sub
pop
int3
jns
xchg
sub
sub
and
rolb
lret
cmp
add
nop
sub
sbb
lock
mov
enter
out
imul
jg
add
leave
pop
or
inc
out
add
mov
rcll
sbb
and
mov
or
mov
cmp
push
addr16
nop
lahf
jae
xor
mov
mov
jge
push
cmpsb
movsb
mov
pop
and
and
shrb
loop
or
jno
add
dec
cmovs
lock
clc
in
lock
nop
xchg
shrb
push
cmpsb
movsb
dec
pop
cmp
mov
jl
out
mov
insl
or
or
mov
mov
or
into
fldt
pop
sbb
cmp
or
lret
imulb
sti
int
scas
sub
inc
xor
das
inc
and
leave
push
cs
roll
mov
and
adc
cmpsb
fwait
sbb
out
arpl
jg
ret
dec
and
sub
pop
lahf
push
inc
je
push
mov
mov
lea
test
mov
inc
out
pop
pop
imulb
into
stos
inc
add
jns
xchg
test
adc
dec
push
test
leave
sub
add
loope
pop
dec
es
jl
sub
mov
clc
stc
sub
sub
subl
icebp
mov
popa
fcmovnbe
xor
lcall
jbe
mov
dec
cmc
call
out
lock
mov
pop
xor
jbe
pop
sub
push
aam
add
mov
cmp
call
dec
xchg
adc
lock
push
scas
inc
xorb
push
sub
push
add
in
loop
adcl
push
jns
inc
fimull
inc
sbb
movsb
xchg
imul
xorb
cmpsb
mov
jno
sbb
repnz
lret
clc
sahf
mov
addr16
push
nop
sub
xor
fcoml
lret
mov
rorl
out
cmpsl
jle
out
mov
push
add
fmul
stos
or
lret
jg
mov
or
in
add
sti
icebp
mov
sbb
call
loopne
xlat
fwait
shr
sub
lods
cmpsb
pop
inc
push
mov
pop
dec
cltd
mov
pop
test
push
inc
pop
outsb
movsb
pop
mov
cltd
xchg
add
adc
int3
cmpsl
adc
push
aad
movsb
iret
add
sti
loope
out
ret
add
sbb
jns
aaa
and
in
ret
out
push
and
test
xchg
and
ljmp
cmovno
add
xlat
jbe
out
ja
push
and
hlt
idiv
dec
sub
outsl
mov
fsubs
cli
and
aam
enter
gs
out
pop
mov
xor
fchs
jnp
popa
and
int3
ja
outsl
jp
xchg
add
xor
jle
pop
stos
and
mov
call
fcoml
and
and
jo
add
adc
into
lea
lahf
inc
fcompp
jmp
stos
mov
insl
lea
out
stos
pop
inc
sub
and
in
scas
push
xchg
shll
loope
xchg
rclb
stc
data16
shrb
cs
jns
mov
enter
in
mov
xlat
test
xchg
sbb
int
aad
mov
fidivs
add
mov
aad
cwtl
out
in
jns
mov
in
xor
jp
adc
fucomip
shrb
aam
mov
mov
cmp
fldcw
mov
push
aam
gs
mov
cmp
sub
nop
mov
xchg
sahf
fnstenv
or
xor
orb
mov
sub
test
sbb
jmp
negl
setno
mov
push
sbb
add
pop
mov
cmp
sbb
cltd
dec
cli
mov
shll
sub
ret
out
xchg
into
cmpsl
add
mov
inc
aas
fdivs
pop
inc
xchg
jmp
or
dec
sbb
mov
sarb
mov
or
insl
dec
mov
mov
or
add
loop
test
cmp
dec
lcall
mov
push
inc
insb
cs
mov
or
or
aam
fcmovnb
rep
leave
or
repz
mov
repnz
repz
and
sahf
sub
mov
mov
lods
sbb
mov
in
mov
repz
mov
das
aam
rorl
and
in
adc
dec
jg
adc
enter
mov
lahf
cmpsl
int
push
mov
sub
shrl
loop
inc
repnz
out
dec
add
clc
inc
jne
popf
lcall
mov
adc
push
inc
xor
jp
in
mov
push
aaa
jno
and
aas
test
push
imul
add
add
lock
and
fnstcw
jne
jg,pt
cs
movsb
jg
repnz
jmp
jg
cmp
in
ljmp
loopne
stos
push
sub
xlat
or
sbb
arpl
in
into
daa
fdivs
or
out
fcmovb
stos
mov
test
lds
mov
jb
jb
jmp
movsb
arpl
cmpsb
adc
mov
pop
fcompl
mov
mov
loopne
adc
cmp
sub
sbb
mov
insb
mov
xchg
push
das
fwait
inc
or
mov
lcall
repnz
call
jnp
je
popa
add
das
inc
add
addb
or
sbb
sbbb
insl
js
adc
mov
pop
pusha
mov
jno
jmp
mov
sbb
sub
loopne
js
and
test
shlb
xor
mov
inc
mov
cmp
jmp
mov
and
cmp
push
push
popf
push
cmp
ss
jbe
cmp
sub
xchg
or
cmp
js
stc
stos
js
dec
push
rorb
mov
xchg
subb
cld
mov
mov
xchg
test
push
repz
pop
jae
rcr
imul
xchg
add
push
test
jecxz
mov
xlat
stc
in
pop
popf
jecxz
cltd
arpl
pop
mov
jne
mov
cmp
cmc
xchg
mov
insb
pop
dec
push
xor
push
mov
les
js
ret
into
mov
shll
test
cmpsl
mov
les
into
mov
mov
daa
push
fcoms
fcmovbe
in
in
or
mov
sub
fldcw
sti
pop
nop
mov
xor
jbe
aam
fidivrl
loopne
dec
sbb
dec
test
push
stos
inc
jns
movsb
arpl
push
xchg
mov
add
push
loopne
add
out
out
xor
cmp
imul
ret
and
push
mov
mov
pop
shll
xor
idivl
mov
loope
test
fnstenv
out
repz
test
je
aaa
movsb
add
push
call
xor
or
sbb
in
push
aam
sub
out
stos
cmovo
test
rcll
ja
adc
jle
mov
add
push
outsl
dec
xchg
mov
nop
inc
cs
xor
icebp
addr16
inc
cmpsb
pop
xchg
pushf
repnz
aaa
add
movsb
clc
ret
xchg
cmp
inc
or
or
ds
mov
daa
imul
out
cmpsb
pop
ljmp
and
add
in
jno
inc
icebp
jg
jl
in
fcmovnbe
xchg
cmpsl
cltd
lods
repnz
aaa
dec
sub
addr16
jle
lahf
int3
pop
xor
xor
jle
push
jle
lds
cld
imul
out
and
fcomps
bound
scas
jg
dec
jno
call
stc
jp
cmpsb
jne
sbb
insl
pop
or
sarl
fiaddl
mov
pusha
inc
leave
dec
inc
inc
add
push
test
sbb
jmp
mov
mov
add
into
mov
je
aam
or
dec
aaa
les
lods
arpl
mov
subl
mov
xchg
adc
fstpl
xchg
test
movsl
dec
cmpsb
xlat
hlt
aaa
adc
sub
std
les
in
mov
jmp
sbb
dec
cmp
pop
push
mov
cmp
hlt
lcall
cltd
out
cmc
out
shr
inc
nop
movsb
mov
mov
ljmp
mov
repnz
or
lret
sub
cmc
movsb
daa
dec
aaa
mov
mov
movsb
inc
je
ret
icebp
sbb
cmc
loope
mov
jecxz
scas
cmp
jo
out
mov
cmp
and
dec
sahf
stos
cmp
popl
ljmp
std
pop
pop
xor
int3
arpl
mov
lods
pushf
push
xor
out
or
lds
add
cmpsb
das
mov
mov
nop
or
cmc
pop
out
and
push
xchg
jl
push
xor
push
jmp
les
insl
mov
jmp
enter
idivl
fldl
pusha
in
cli
and
jmp
lcall
in
jg
and
sub
mov
push
lds
push
xchg
inc
out
pop
addr16
pop
mov
dec
fnstsw
movsl
loop
into
aas
inc
ds
jp
add
mov
dec
aad
hlt
outsb
and
sbb
jecxz
cmp
ds
shll
aam
add
inc
movsb
test
ficompl
xor
loope
xchg
pop
inc
out
mov
dec
mov
or
cmpsb
dec
dec
ds
jb
mov
shlb
test
scas
ror
loop
or
pop
movsl
js
stos
jne
mov
mov
jge
sbb
mov
sbb
hlt
adc
lcall
mov
dec
gs
xor
out
mov
psubd
insb
je
fistpl
cmp
fistpl
push
xchg
xchg
pusha
inc
adc
rcrl
jo
add
repnz
imul
mov
xlat
mov
mov
mov
idivb
mov
jmp
fst
cli
outsb
push
push
dec
pusha
cs
mov
xor
fistps
add
in
ds
mov
stos
ret
inc
lahf
xchg
xchg
xchg
lods
jno
push
push
xor
dec
cli
scas
cld
pop
or
scas
std
sbb
mov
pop
push
cmpsl
fisubl
or
and
adcb
push
and
ss
out
test
lcall
adc
push
add
or
add
mov
and
mov
xor
scas
loopne
nop
fsts
jg
out
adc
out
call
loope
jno
daa
data16
das
sub
shll
outsb
lret
pop
xchg
shll
inc
inc
add
jecxz,pn
jmp
in
pop
mov
and
xchg
sub
dec
stos
fstps
adc
orb
rolb
mov
add
xor
or
dec
fldcw
adc
loope
shrb
icebp
loope
cmp
add
sbb
sbb
ret
xchg
mov
aad
add
dec
adc
pushf
cmovb
xor
xchg
hlt
into
loopne
pop
push
cmc
insl
das
adc
jl
in
cmp
loopne
xor
xorb
sbb
pop
mov
js
stos
nop
mov
pop
and
aas
pop
mov
inc
and
lcall
daa
fwait
mov
filds
mov
xchg
pop
orb
push
inc
sar
xor
pop
imul
and
cmp
cltd
jmp
ljmp
pop
sahf
inc
ss
push
sbb
or
push
popf
cmp
adc
bound
orl
adc
pop
cmp
dec
xchg
jno
int
repnz
in
movsl
mov
adc
add
inc
mov
lea
inc
sbb
sbb
mov
fwait
rorl
ds
push
mov
mov
and
std
lds
sbb
sbb
jnp
shll
ret
xor
pop
lock
pop
das
push
jbe
dec
sbb
nop
mov
cmp
jno
sbb
and
cmp
std
ss
sbb
ror
push
cmp
jle
xor
adc
popf
sarb
loopne
push
cmp
xorl
push
int
imul
std
adc
sub
pop
test
into
adc
xchg
xchg
aad
aad
fwait
int
fistps
dec
add
inc
cmp
hlt
push
cmp
in
cmp
xor
repz
in
sub
mov
sub
mov
push
or
fst
mov
imul
outsb
add
mov
adc
or
das
enter
in
push
cmpsl
addl
sub
xor
cmp
mov
in
xor
add
je
ss
repz
dec
call
sahf
stc
leave
ret
rolb
fists
idiv
and
or
mov
testl
and
or
divl
or
pop
push
xchg
repnz
imul
leave
popf
cld
arpl
jns
cmpsb
adc
sbb
mov
sbb
mov
push
ss
mov
inc
movsl
xor
out
pusha
jae
jmp
dec
test
ror
cmp
sub
jp
xlat
xor
pop
mov
movsb
xor
cs
fwait
pop
in
andb
call
sti
icebp
iret
mov
sub
aaa
adc
cmp
testl
pop
cmp
fsubrl
mov
jnp,pt
mov
adc
mov
mov
and
and
popa
out
stc
xchg
in
cld
jo
xchg
jo
push
dec
pop
sahf
std
testb
sbb
mov
pop
lock
cmpsl
cltd
pop
ja
sti
adc
xlat
jecxz
fwait
adc
into
dec
clc
out
dec
mov
pop
or
in
add
pop
mov
aas
pushf
int
push
pop
sbb
movsl
jnp
mov
les
adc
int
jno
das
dec
lea
push
cmp
xchg
add
rcr
loope
gs
test
cwtl
mov
rcrl
and
and
push
xchg
cmc
stos
sti
lods
cmp
jno
dec
sbbb
lods
mov
ss
xchg
jnp
mov
aad
pop
push
and
lret
sbb
das
lds
or
popa
lret
push
out
adc
push
cmp
push
inc
push
dec
xor
xchg
out
pop
leave
dec
sbb
call
mov
mov
js
inc
int3
frstor
cmp
inc
shr
test
pop
movsl
inc
jge
mov
jl
lahf
pop
aad
ret
imul
inc
xchg
pop
loopne
out
cmpsl
aad
xor
or
shll
dec
lods
inc
mov
mov
xor
shrb
pop
mov
xor
push
sbb
or
or
jae
sbb
pop
pop
test
iret
mov
push
icebp
icebp
sub
sahf
sbbl
mov
jns
add
and
dec
aad
cmp
dec
xchg
jb
cld
push
lahf
aam
or
andb
or
pop
dec
mov
int
dec
add
add
sbb
sub
mov
lahf
imul
sahf
into
sub
sub
push
js
inc
cmc
popa
mov
test
loopne
push
sub
hlt
jmp
rcrl
mov
scas
and
push
mov
stos
cwtl
cmpb
xchg
pushl
bound
mov
jle
inc
cmp
mov
push
and
and
lret
mov
enter
imul
addr16
jns
std
xchg
add
ss
sahf
loop
xor
jb
out
inc
scas
fcos
mov
or
inc
xchg
xchg
jp
stc
testl
iret
xchg
divb
pop
adc
std
call
lods
lcall
push
mov
inc
jb
add
lcall
dec
fdivr
mov
xor
loopne
loope
push
jne
arpl
iret
mov
mov
pinsrw
insb
xlat
dec
in
adc
pushf
and
ficoms
jle
push
hlt
imul
ss
movsb
and
insb
or
andl
mov
pop
mov
adc
out
dec
sti
sbb
popa
gs
add
in
add
cmp
das
bound
jl
fwait
xor
jl
in
push
fs
mov
sub
aas
xor
push
fxch
push
out
bound
movb
mov
lret
xchg
mov
lret
inc
push
js
sbb
xor
imul
xchg
popa
sub
lahf
out
cmp
addr16
jb
cmpsl
in
push
xchg
cmp
filds
cmp
and
call
xchg
adc
repz
mov
and
stos
inc
int
mov
lods
jl
das
add
jge
rcrl
cltd
dec
addb
sbb
mov
sbb
out
inc
inc
stos
cmpsb
push
xor
mov
inc
xchg
lods
aam
faddl
aas
bound
cmp
fsubl
sub
mov
lea
test
or
push
add
dec
fadds
inc
or
sub
and
push
icebp
xor
push
inc
lods
xchg
call
adc
add
pushf
scas
or
push
jg
push
pushf
pop
insl
inc
test
fidivrl
or
aad
add
mov
call
lret
add
mov
and
cmp
pushf
lea
add
mov
mov
xor
pop
fstpt
imul
add
lds
xor
nop
cmpsl
aam
aaa
jns
xchg
add
sbb
cmp
enter
popa
jns
xor
xchg
jg
adc
mov
xchg
mov
xchg
pop
or
mov
out
mov
cwtl
adc
idiv
pop
das
inc
insl
ret
mov
xchg
stos
rcrb
in
into
inc
aaa
jno
dec
scas
inc
mov
pop
fcmovnu
push
shrl
push
and
jbe
pusha
add
mov
adc
out
test
movsb
push
je
or
repnz
adc
addr16
xor
add
aam
push
fnstcw
ret
shll
in
int3
or
sti
inc
test
incl
or
es
mov
movsb
add
pop
adc
push
aad
fisttps
mov
push
aaa
pop
cmpsl
sub
xor
aam
push
jmp
ss
sub
mov
push
les
inc
jp
cmp
xor
ss
sub
xchg
pop
lock
jno
nop
shrb
push
out
jnp
int3
add
cld
mov
pop
lods
push
xor
jl
push
mov
lret
push
add
mov
mov
mov
into
mov
push
jle
icebp
or
inc
mov
adc
mov
popa
mov
leave
xor
or
and
mov
imul
xor
and
jbe
dec
and
imul
add
das
or
jp
dec
aas
fdivr
jl
dec
je
arpl
push
mov
jmp
sbb
inc
in
dec
dec
sub
or
cmp
adc
sbb
in
mov
ja
cmp
mov
jmp
ret
setne
imul
fisubrs
stc
int
push
push
lret
jmp
repnz
push
sub
pusha
dec
das
out
jno
jecxz
adc
das
fwait
push
mov
pop
fcomp
cmp
dec
mov
test
xchg
xchg
mov
jbe
repz
inc
pop
jne
push
mov
sbb
cmp
dec
insb
cwtl
repz
pushf
data16
cltd
sub
aad
or
sub
jle
loop
and
pop
dec
fdivrl
cmp
xor
into
add
imul
xchg
mov
loop
mov
out
stos
fsubs
insl
mov
rcl
inc
insb
fiaddl
pop
jecxz
pop
dec
push
pop
mov
xchg
and
push
bound
test
and
mov
lsl
xor
lret
jnp
pop
in
adc
dec
pop
mov
xchg
push
mov
nop
jbe
in
orps
cmp
dec
or
dec
xor
aaa
enter
cmp
sub
mov
loope
cs
out
sub
std
mov
xor
xchg
cwtl
jp
subl
inc
mov
orl
sub
insl
sub
inc
inc
je
xor
pop
or
in
push
loopne
test
lret
push
push
bound
bound
dec
adc
sbb
cmp
xchg
adc
pushf
xchg
mov
movsl
fimull
inc
clc
or
test
sbbl
int
inc
jne
jns
mov
cli
inc
ljmp
mov
xorl
and
add
and
jb
jge
fistpll
sbb
or
mov
std
into
pop
inc
jbe
jmp
das
inc
dec
and
cmp
pop
xchg
mov
cs
subb
pushf
jecxz
or
jg
in
cli
sbb
jecxz
sarb
lret
mov
mov
mov
pop
dec
dec
push
inc
inc
mov
xor
lea
mov
dec
inc
add
dec
sub
lea
movswl
sub
call
inc
sub
sub
add
lea
mov
dec
dec
dec
inc
and
lea
mov
inc
dec
inc
sub
sub
lea
imul
inc
inc
inc
inc
call
add
lea
mov
dec
call
dec
dec
inc
sub
call
lea
push
mov
dec
sub
inc
inc
call
or
lea
imul
dec
dec
add
call
inc
pop
add
lea
imul
add
inc
pop
dec
dec
pop
inc
and
lea
imul
pop
inc
add
dec
dec
or
lea
imul
inc
pop
sub
inc
pop
inc
and
mov
lea
mov
call
sub
inc
dec
dec
ret
sub
lea
push
movsbl
sub
push
inc
dec
push
inc
and
push
lea
movsbl
push
dec
dec
mov
add
inc
push
sub
ret
push
lea
push
dec
push
inc
inc
push
dec
and
lea
mov
push
inc
add
sub
call
dec
sub
lea
mov
dec
dec
dec
inc
add
lea
imul
add
inc
inc
jmp
inc
mov
add
dec
movzbl
sub
lea
movzwl
dec
add
inc
sub
add
dec
sub
movzbl
lea
mov
inc
add
dec
sub
xor
lea
inc
mov
inc
mov
add
inc
dec
sub
lea
imul
cmp
jb
sub
xor
add
inc
mov
dec
add
mov
lea
inc
inc
dec
inc
dec
add
lea
mov
mov
dec
cmp
jb
inc
mov
inc
add
xor
xor
lea
xor
inc
pop
dec
inc
test
jbe
add
xor
lea
mov
inc
inc
dec
dec
add
lea
movswl
add
inc
sub
dec
or
lea
inc
mov
add
dec
inc
inc
or
and
lea
mov
mov
inc
inc
movzbl
inc
dec
add
or
lea
and
mov
inc
mov
dec
sub
mov
inc
or
mov
lea
mov
mov
add
add
add
inc
or
lea
dec
jne
mov
inc
dec
inc
dec
xor
lea
dec
inc
sub
mov
inc
xor
lea
mov
inc
dec
inc
dec
mov
or
lea
test
jbe
mov
sub
sub
sub
inc
or
lea
mov
inc
add
sub
dec
and
lea
imul
inc
inc
add
dec
inc
sub
lea
and
imul
inc
mov
add
sub
movzbl
sub
and
add
lea
mov
and
inc
jmp
inc
and
lea
imul
dec
sub
pop
ret
push
inc
sub
add
lea
mov
sub
inc
sub
sub
add
push
and
lea
push
mov
inc
push
add
add
push
dec
xor
lea
imul
inc
add
add
inc
or
lea
mov
dec
dec
sub
add
and
lea
movzbl
dec
call
call
inc
dec
dec
and
lea
mov
dec
dec
sub
sub
xor
lea
imul
dec
dec
dec
inc
or
lea
movzwl
inc
dec
inc
dec
sub
lea
imul
cmp
je
dec
dec
inc
sub
sub
lea
imul
dec
add
inc
sub
xor
lea
mov
dec
dec
add
dec
sub
lea
mov
sub
inc
add
add
and
lea
mov
sub
inc
inc
inc
sub
lea
movswl
dec
sub
inc
dec
and
lea
mov
dec
add
dec
dec
add
lea
mov
dec
inc
inc
add
or
lea
ret
imul
sub
pop
inc
ret
push
inc
mov
inc
xor
push
lea
mov
add
inc
inc
push
inc
push
sub
push
xor
lea
push
mov
jmp
call
inc
inc
dec
push
sub
sub
xor
lea
mov
imul
mov
dec
inc
mov
dec
inc
test
je
add
lea
mov
dec
dec
inc
inc
sub
lea
mov
mov
add
mov
inc
dec
add
add
repnz
lea
mov
add
sub
jmp
inc
inc
dec
xor
lea
movzwl
sub
dec
inc
sub
pop
pop
ret
push
add
lea
movzwl
inc
add
add
sub
add
lea
movzbl
add
dec
inc
sub
xor
lea
movzwl
dec
inc
dec
add
xor
lea
mov
dec
inc
inc
dec
pop
ret
sub
add
mov
lea
mov
mov
inc
add
mov
dec
inc
mov
or
lea
xor
mov
dec
mov
sub
add
inc
add
xor
lea
mov
inc
sub
cmp
jb
inc
push
inc
and
push
lea
mov
push
sub
dec
mov
inc
dec
xor
and
lea
xor
imul
inc
xor
dec
add
push
inc
xor
xor
lea
mov
mov
inc
jmp
mov
imul
lcall
push
jmp
mov
imul
scas
daa
sahf
jp
mov
mov
lret
insb
jl
jns
ret
ret
mov
js
xchg
mov
push
es
in
std
dec
in
jge
pop
add
dec
add
mul
cltd
or
je
outsb
cmp
test
rorl
xchg
inc
ds
push
push
mov
js
in
lods
mov
jb
sub
cmp
dec
out
fiaddl
dec
icebp
fwait
in
add
loop
test
mov
repz
lods
mov
mov
mov
sti
je
lods
cmpsb
and
cmp
jae
test
mov
push
sub
popf
and
pop
lea
or
mov
jge
jg
cmp
and
roll
pop
arpl
sub
or
mov
sub
mov
leave
fldl
pop
xor
jnp
faddp
xchg
ret
lcall
push
int3
add
jp
sbb
outsb
test
loop
out
loopne
inc
xchg
idivb
push
and
call
cmp
cmpsl
inc
inc
outsl
mov
outsb
int3
test
xchg
in
sub
scas
int3
fnclex
sarl
push
scas
stc
or
aas
push
movsb
mov
repnz
mov
xchg
pop
in
xchg
push
pop
jg
jae
popa
adc
leave
in
call
iret
and
jb
mov
and
and
sbb
or
xor
mov
push
xor
mov
rorl
mov
not
mov
addr16
aaa
dec
and
xor
mov
jl
lock
jbe
pop
sbb
sbb
mov
and
push
dec
ljmp
rcrb
xlat
addr16
adc
push
test
aad
add
push
xchg
and
stos
sar
inc
mov
cmp
mov
push
adcl
adcl
xor
xorb
sbb
push
xchg
jp
lret
hlt
lock
aas
insl
outsb
jno
aad
insl
outsl
jge
mov
jae
mov
adc
divl
in
shll
outsb
imul
in
sub
stc
lea
mov
iret
mov
or
lds
add
in
test
es
rol
mov
add
fstl
push
pusha
lods
or
xchg
sub
jg
fmull
les
lcall
xchg
dec
hlt
mov
add
dec
test
aam
mov
jmp
jmp
shrb
cltd
or
sbb
aam
cmp
lcall
jo
shrl
jnp
sub
stos
or
xchg
push
jno
dec
stos
popa
mov
pop
xor
push
sbb
push
subb
push
loope
cmp
mov
mov
xor
pop
cmp
cmp
push
jns
imul
sbb
pop
pop
push
sarb
out
adc
inc
fucomip
das
aam
mov
out
daa
int
cmp
jp
out
push
push
push
lds
jmp
test
in
scas
or
add
push
push
xlat
sub
arpl
mov
lock
movsl
leave
and
pop
mov
xor
leave
cmp
jg
adc
lock
in
push
fdivr
in
push
xchg
scas
push
jecxz
or
mov
and
pop
jo
scas
xor
mov
test
inc
lods
mov
mov
shl
je
xchg
shlb
hlt
loop
fdivp
movsb
adc
and
mov
aad
sbb
leave
xchg
stc
pop
mov
test
leave
shl
mov
mov
mov
push
bound
out
sub
cmp
je
or
jge
aam
push
fisttpll
add
sbb
cmp
fisttps
inc
mov
andb
popf
xchg
mov
movsb
mov
les
mov
fwait
push
dec
pop
xor
add
cmp
in
push
cmp
call
add
cmc
idivl
in
sub
pop
cmpsl
repz
lea
fldcw
nop
js
and
clc
xchg
push
mov
bndstx
in
cmpb
xor
daa
sbb
mov
ret
mov
frstor
sti
ss
xor
mov
push
outsl
inc
pop
cmp
andl
push
cs
popf
jle
dec
lcall
lods
sub
dec
inc
jl
movl
xchg
jnp
ds
xchg
lods
dec
sbb
das
aaa
xchg
mov
addr16
data16
out
int3
dec
mov
jo
pop
sub
add
dec
pushf
jns
pop
popl
xchg
pop
mov
fcmovnb
sub
leave
sbb
test
pop
sbb
xor
in
adc
rcrb
push
dec
xchg
dec
adc
xorb
cmp
add
nop
lahf
out
add
jmp
rcr
frstor
loop
jne
sarl
stos
testb
pop
sahf
mov
inc
dec
jmp
pop
push
sarl
imul
push
aad
sub
ss
cltd
add
ficoms
mov
cmp
push
and
dec
adc
cs
lock
mov
fnstenv
test
or
add
pusha
imull
lods
pop
push
cmp
subb
sbb
mov
dec
pop
cmp
mov
cwtl
pop
xchg
push
lahf
add
pop
push
lock
lock
scas
shll
and
dec
lahf
cmc
or
cmp
or
pop
cmp
iret
ja
sbb
popf
mov
call
mov
push
jmp
jl
jmp
mov
ds
out
mov
add
pop
pop
insb
mov
xchg
inc
rorl
jns
lgs
test
icebp
lahf
dec
or
aad
or
rorl
mov
xchg
mov
mov
les
inc
add
inc
dec
sub
fldt
mov
sub
push
fwait
movsl
rcrb
dec
sbb
push
test
sarb
xchg
jns
mov
adc
xlat
repz
adc
pop
out
lahf
sub
or
xchg
mov
dec
in
jb
in
inc
mov
add
es
add
stc
add
xor
mov
mov
rcll
xchg
out
shrl
scas
pop
lock
iret
inc
push
das
insl
in
cmp
push
sbb
xor
data16
mov
mov
pop
jecxz
fstl
js
dec
fdivrl
andb
ret
popf
out
popf
outsl
or
sbb
sbb
jmp
imul
mov
dec
xor
arpl
cli
pop
shlb
int3
sahf
cmp
push
out
mov
cmp
mov
inc
in
and
ja
test
xchg
popa
mov
lret
xor
cmp
outsl
mov
xchg
pop
and
mov
lret
loope
sub
mov
outsb
push
repz
es
mov
enter
daa
pop
pop
mov
pushf
sahf
or
lods
fs
ds
cmp
inc
shll
xchg
add
roll
pop
arpl
pusha
pop
mov
mov
dec
sar
repnz
pushf
xor
mov
in
and
iret
rol
neg
into
xchg
pop
lds
jno
push
stos
add
icebp
cltd
sbb
jns
out
xabort
dec
fiadds
lods
shlb
daa
xor
pop
jge
lcall
inc
push
loope
sarb
xchg
vpsubsb
inc
rcrb
movsb
das
and
mov
ret
adc
lock
sbb
adc
leave
sti
xchg
cmp
push
and
pop
inc
and
shlb
or
pop
and
inc
lahf
dec
sub
adc
loopne
aad
repz
push
out
shrb
push
in
stos
das
les
mov
je
cmc
outsb
popf
sbb
xchg
lea
sub
dec
cwtl
add
stos
push
xor
inc
testl
jle
xchg
adc
testl
xchg
mov
add
adc
lock
xor
sbb
mov
xchg
bound
jg
and
cmpsb
cmovle
ss
mov
jge
pop
out
fdivrs
mov
dec
rorb
pop
mov
pop
ret
daa
lret
pop
jbe
xchg
dec
adc
sub
or
mov
aad
jl
or
mov
lock
jg
fnsave
lea
lea
pop
shl
notb
jbe
sub
pop
adc
fwait
pop
cli
fisttpl
insl
cmp
int3
mov
inc
fidivrs
mov
cmc
xor
pop
mov
loope
push
mov
pop
jo
push
mov
xchg
addb
mov
sub
divb
aam
adc
ljmp
dec
fstps
pop
aas
into
mov
aad
add
out
or
mov
or
adc
nop
popa
inc
daa
pop
leave
mov
movsb
xchg
clc
adc
cld
push
xor
lret
mov
mov
add
les
adc
jg
mov
fisubl
pop
orl
xlat
push
jae
dec
push
test
cmp
cld
subb
test
pop
repz
push
sub
pop
inc
dec
inc
push
xchg
xor
push
sarb
mov
xchg
cmp
lods
js
inc
pop
xchg
push
push
mov
mov
inc
icebp
enter
int3
sarl
sbb
jns
popf
xor
test
daa
xchg
adc
ja
mov
push
nop
dec
pusha
sub
or
sbb
jb
bound
lret
pusha
and
aad
std
add
mov
aaa
scas
fcompl
sti
leave
adc
cs
adc
xor
inc
xor
mov
call
adc
mov
push
sub
push
aad
cld
in
sbb
sub
mov
outsb
lock
push
dec
push
jae
testl
andb
and
sbb
inc
pusha
xor
mov
shr
pop
adc
hlt
dec
cmpsl
and
push
mov
daa
inc
aaa
fbld
mov
and
add
nop
push
pop
movsl
cmpsb
jmp
push
lcall
outsb
and
adc
lods
nop
insb
test
or
and
ret
lods
mov
or
fwait
jbe
jne
in
sub
sub
out
inc
cmc
mov
pop
into
push
mov
mov
xchg
je
in
sbb
movsl
push
test
aaa
lcall
or
outsl
xor
sub
inc
dec
aam
arpl
push
scas
and
ljmp
sbb
sub
sarl
push
loope
and
call
mov
xchg
xchg
jmp
push
ror
xchg
cmpsb
xchg
fidivs
mov
sub
and
inc
sub
outsl
cmp
or
pop
pop
dec
push
dec
xor
cli
mov
imul
cwtl
xchg
sbb
inc
inc
or
out
inc
jmp
arpl
cwtl
or
xchg
push
cwtl
nop
enter
loopne
lock
icebp
ret
ret
sbb
leave
cmpl
mov
ja
mov
arpl
pop
call
pop
shl
sub
xor
adc
jnp
mov
push
imul
cli
nop
jge
aad
xor
stc
jp
imul
ror
subb
jp
adc
xor
jp
aaa
mov
leave
mov
adc
loopnew
int3
dec
sbb
sub
lds
pop
pop
inc
scas
outsw
loope
pop
data16
sahf
sub
insb
aad
pop
or
sbb
sbb
pop
aaa
in
inc
add
sub
jle
movsb
mov
mov
ficoml
or
fcoml
loopne
jge
in
jg
mov
shll
mov
mov
mov
enter
jno
lock
insl
sar
pop
mov
push
imul
sbb
sub
add
sub
bound
sub
rep
jne
mov
call
lock
sub
mov
imul
fs
inc
test
fsubp
sub
mov
aam
or
lret
arpl
mov
sbb
pop
les
cltd
xchg
les
mov
sti
xor
push
dec
ret
xchg
cmpsb
cmp
jns
pop
mov
sbb
insb
int3
fcompl
cltd
std
sub
and
loope
jno
mov
or
les
cmp
mov
loope
fstpl
cwtl
mov
aam
add
pop
push
xchg
out
pop
int
lds
mov
std
pop
popf
push
xlat
lods
sti
push
mov
mov
aad
mov
pop
movsb
gs
mov
inc
cmpsb
mov
mov
int
out
or
mov
xchg
sahf
ret
mov
sub
lds
dec
imul
lea
or
mov
mov
jne
subl
pop
cmpsb
push
cld
iret
xchg
iret
test
push
pop
pop
lods
popa
cmp
push
ret
jl
push
or
bnd
cmp
inc
add
xor
movsb
loopne
dec
cli
jle
adc
shll
movsl
mov
in
sub
in
push
cmp
sub
pop
add
aam
sub
rcrl
dec
scas
cmpsl
push
out
add
movsb
push
in
lret
jbe
adc
idiv
jmp
dec
lods
push
push
sbb
pushf
inc
mov
dec
push
inc
leave
or
lods
xor
push
in
mov
fistl
xchg
sub
scas
xchg
ficoms
cs
lret
jecxz
and
push
cmp
xchg
sub
arpl
imul
imul
push
adc
outsl
dec
xor
nop
fsub
les
add
cld
xchg
ljmp
insb
inc
loopne
xor
sbb
adc
pop
fisttpll
in
jp
out
insb
jnp
std
hlt
push
adc
xlat
ljmp
dec
pusha
lods
fadd
fmul
lret
adc
lret
xor
cli
cwtl
fidivrs
xchg
stos
pop
js
mov
push
xor
mov
mov
or
add
pop
xchg
pop
cld
pushf
enter
mov
out
orb
push
pop
and
push
daa
fistpl
dec
cmpsl
test
cltd
enter
or
repnz
cmpsb
je
mov
hlt
repz
repnz
out
cltd
dec
shll
mov
shrl
xchg
das
or
mov
insb
inc
adc
outsl
icebp
mov
cld
lods
add
sub
push
insl
and
sti
inc
enter
mov
add
mov
jbe
push
mov
jb
pushf
sti
jbe
std
ja
int
lcall
faddp
inc
push
ficoms
inc
rolb
jnp
sbb
loopne
mov
testl
or
dec
pop
mov
jp
mov
in
push
faddl
mov
jns
mov
fbld
adc
sub
pop
adc
adc
inc
stos
mov
jnp
jp
xchg
cmp
cli
mov
es
mov
insb
test
sub
push
adc
push
es
fsub
dec
sbb
jo
lahf
mov
fdivrl
jle
mov
popa
cmp
and
jp
es
and
mov
je
mov
rcrb
movsl
lods
sbbl
repz
mov
mov
loop
or
nop
add
jae
bound
xorb
jne
popf
je
lds
mov
addl
jge
push
push
pusha
sbb
out
dec
jb
insl
loopne
mov
popa
inc
pusha
pusha
outsl
jns
out
test
ret
jl
out
mov
data16
inc
loopne
out
pop
loopne
inc
arpl
lahf
mov
push
std
pop
int
or
daa
dec
jg
cmp
add
je
jns
push
jle
ja
aas
enter
xlat
push
mov
or
out
rcl
orb
and
gs
stc
dec
out
xor
ss
sbbl
movsl
cld
xchg
dec
stos
mov
sar
jmp
stc
push
leave
dec
cmpsb
cmp
addb
insl
cmp
cld
roll
addr16
adc
xchg
jmp
outsl
pop
xchg
dec
pusha
push
and
pop
roll
mov
xchg
mov
cwtl
dec
je
add
mov
jl
lds
jbe
out
in
mov
push
adc
shrb
sbb
popa
fwait
mov
cmp
adc
loop
mov
add
xor
cmp
cmpsl
dec
jmp
jno
leave
rep
adc
dec
sbb
js
lds
popf
popa
mov
sub
in
ljmp
cmpsb
cwtl
push
fnstcw
imul
sti
xor
jle
call
jns
jo
daa
movsb
movsl
mov
mov
fldenv
or
movsb
sub
add
cmp
test
mov
fbld
cltd
scas
cmp
stc
mov
mov
lret
ljmp
adc
add
repnz
int3
sbb
xor
mov
and
mov
loope
and
xor
scas
pop
mull
xchg
and
add
push
les
cmp
loop
dec
stc
sub
lock
xor
mov
mov
out
add
cmp
mov
push
daa
dec
in
cs
cmp
mov
fstpl
sbb
jmp
xchg
fsubrs
push
and
loopne
inc
mov
xor
pop
sub
call
xchg
cmp
cmp
sub
cmp
jl
aam
repnz
cmp
jae
cmpl
inc
cwtl
data16
jno
jp
daa
mov
andl
xor
xor
xlat
sub
pop
xchg
push
mov
pushf
xor
xor
sbb
sub
adc
adc
adc
mov
mov
cmp
scas
push
push
fdivrs
rorl
in
push
push
mov
popa
or
loope
cmp
xchg
xor
xlat
push
mov
clc
mov
xchg
pop
mov
cmp
mov
shlb
not
stos
dec
loope
cmp
jae
insl
sbb
orb
mov
adc
mov
add
add
scas
mov
sbb
ret
test
cmpsb
mov
or
dec
cmp
sbb
add
fiaddl
and
outsb
scas
loop
mov
mov
mov
pop
cmc
movsb
jo
jae
xchg
push
loop
add
dec
jmp
ja
jecxz
mov
inc
cwtl
ret
inc
jl
shlb
jns
out
mov
mov
pop
add
loope
push
cs
ret
lahf
add
xor
nop
mov
fidivl
push
xchg
out
mov
je
adc
push
or
fucom
push
xor
pop
lcall
pop
cmpl
ja
jmp
and
push
outsb
test
mov
xchg
mov
sub
push
imull
outsb
cwtl
icebp
jmp
shrb
jl
mov
mov
jg
cmp
loop
cld
and
cmp
rorl
sbb
push
push
mov
push
pop
sub
andb
fmulp
push
sbb
mov
adc
sub
lods
je
sbb
sub
gs
icebp
and
cmp
push
pop
add
add
push
filds
inc
jb
dec
outsb
and
inc
stos
jae
mov
dec
es
adc
hlt
in
dec
fbstp
dec
mov
adc
cwtl
out
aas
adc
outsb
popf
adc
xchg
mov
pop
sub
push
jo
mov
insl
sub
and
stc
inc
in
push
sub
xor
pop
and
imul
sbb
mov
mov
jno
dec
mov
loopne
test
lds
jg
mov
outsb
gs
dec
in
push
and
and
dec
hlt
ret
repnz
idivb
push
xor
and
filds
sub
jne
adc
addr16
mov
cmp
or
push
sbb
inc
inc
xchg
fsubrl
adc
xor
push
cmp
mov
xchg
xchg
lds
pop
sub
dec
cmp
and
mov
push
out
inc
xchg
loop
push
hlt
dec
mov
mov
cmp
outsb
jmp
int3
or
mov
push
or
arpl
dec
mov
cli
or
push
das
mov
hlt
jns
sbb
jmp
cmc
cmc
mov
sahf
lods
fisttpl
stos
and
in
imull
fs
popf
jne
pop
out
aam
push
cli
inc
nop
int
lds
mov
inc
or
in
mov
fwait
les
xchg
imul
fiaddl
mov
add
jae
ds
mov
jmp
fistpll
mov
push
faddl
pop
jge
push
iret
enter
in
jmp
push
movsl
cwtl
dec
js
or
ds
push
sub
stos
hlt
mov
cwtl
shlb
out
mov
repz
js
mov
movsl
xlat
loope
int3
xor
ljmp
dec
lret
dec
and
adc
pusha
stos
lock
xchg
lock
mov
jns
mov
fcmovnbe
jg
push
inc
xchg
ficomps
dec
pop
jno
int3
les
inc
fwait
int
ret
xor
inc
xchg
cmp
ds
mov
jecxz
pop
icebp
inc
jne
scas
jno
mov
out
mov
ja
sbb
lea
mov
add
ror
out
jno
scas
repnz
ret
pop
insb
xor
adc
out
test
push
add
xchg
add
dec
lahf
hlt
mov
loopne
or
inc
push
fwait
out
pop
shr
popa
push
inc
test
fs
pusha
dec
add
pop
inc
mov
js
cmpsb
pop
das
inc
out
dec
add
enter
rcrb
and
jmp
lds
popf
cli
or
dec
push
add
xchg
sbb
sbb
sub
sub
push
je
or
das
push
shlb
mov
xchg
xchg
loope
andl
mov
and
cmp
cld
jae
mov
ret
dec
movsl
xchg
lock
popf
push
loop
mov
das
cs
and
test
jae
dec
add
push
mov
add
fnstenv
bound
loop
mov
lods
imul
daa
in
repnz
dec
fistl
loop
mov
fs
mov
clc
add
movsb
cltd
in
jne
test
subb
js
mov
sahf
dec
rorb
mov
stos
sbb
cmp
das
adc
mov
out
adcl
push
jmp
fnstsw
filds
and
cmp
dec
ljmp
test
ljmp
pop
or
dec
rolb
sahf
mov
adc
mov
cmp
insb
mov
and
stos
jle
inc
pop
inc
dec
pop
dec
adc
add
out
inc
cmp
mov
mulps
out
lcall
sbb
xchg
mov
loope
fstl
xlat
pop
xor
aam
fisubs
push
fiadds
pop
cltd
cli
ss
push
pop
inc
xchg
lahf
out
roll
dec
data16
std
pop
mov
mov
fsubrp
ret
push
pop
leave
std
notb
sub
lds
mov
fdivp
movsl
or
hlt
loopne
es
sarb
xchg
add
cmpsb
pop
adc
pop
mov
test
add
mov
mov
jbe
jp
sub
add
jle
push
and
jmp
push
decl
dec
cmp
mov
jmp
pop
and
int
into
insl
inc
movsb
xor
and
lods
pushf
xchg
mov
and
rcrl
jae
or
adc
or
push
mov
idivb
pop
mov
les
push
cmp
and
dec
rclb
fnsave
pop
insb
xor
daa
adc
jns
fcmovu
fstps
pop
lds
fdivs
cmpsl
add
dec
int3
mov
and
lret
js
popf
mov
xchg
fmuls
orl
push
fs
jmp
sbb
leave
sub
sti
or
and
lret
sarl
pop
cmpsb
jp
push
fcompl
ds
loope
cmp
mov
or
jmp
lahf
push
jnp
scas
ret
xor
sahf
scas
sahf
out
sub
mov
lds
nop
imul
sahf
fsubrl
sub
andl
pop
fcmovnu
sub
sub
ljmp
adc
call
push
inc
inc
stos
dec
movsl
in
pop
cmp
dec
dec
fwait
adc
fwait
insb
pop
xorb
jge
add
or
lret
dec
mov
mov
xchg
mov
pop
mov
fwait
sbb
adc
out
stos
mov
sahf
push
push
mov
sub
mov
sub
push
jne
xchg
adc
xor
out
in
shlb
aad
xorl
shlb
aam
cmp
xor
mov
mov
mov
loope
ds
movsb
lret
mov
fcomip
or
inc
lret
rcll
mov
jns
call
pop
aas
insb
jle
push
cmpsl
mov
pop
aas
aam
outsb
mov
int3
iret
dec
movsb
cmp
sbb
sbb
xchg
inc
mov
aad
lret
dec
imul
popa
cmpsb
mov
sub
mov
movsl
pop
jmp
and
inc
inc
and
adc
cmpsl
insb
das
jo
mov
mov
mov
pop
stos
sub
cmp
pop
ret
cmp
mov
pop
sbbb
rorl
ja
movsb
push
and
mov
ss
adc
rcll
mov
out
mov
fidivrl
pop
dec
mov
sub
testl
add
stc
iret
stos
jg
sbb
leave
mov
add
mov
insb
popa
out
push
test
imul
clc
mov
shrl
push
inc
jecxz
xchg
pop
sbb
cltd
and
xorb
sbb
xlat
out
mov
sbb
ret
lods
cmp
fnstenv
cld
test
inc
cmp
xor
sbb
xor
pop
mov
icebp
outsl
mov
or
inc
push
push
int
mov
mov
outsl
int3
jecxz
cli
fisttps
lods
out
xor
ds
mov
lret
sbb
scas
cmpsb
lcall
jp
adc
push
push
mov
sbb
push
fadd
add
addr16
int
ja
mov
sahf
repz
int
pop
mov
sti
lea
xchg
mov
rorb
mov
nop
pop
test
pop
stos
aaa
or
cmp
ljmp
out
dec
or
mov
addr16
ljmp
mov
xchg
aad
jmp
faddl
enter
imul
or
jmp
inc
adc
cwtl
gs
pop
addb
dec
outsl
pop
push
add
dec
sub
fnstsw
in
sub
mov
add
cli
jbe
int
push
mov
jno
xchg
pop
arpl
push
inc
xchg
mov
push
sub
leave
dec
jl
lods
mov
test
dec
push
sub
jp
inc
pop
or
repnz
in
pop
lcall
adc
test
pop
push
mov
or
push
dec
mov
jb
jne
lods
repz
or
adc
sbb
push
shrb
jnp
add
test
xchg
sahf
test
test
jle
bound
add
movsl
test
test
adc
rolb
xchg
sub
addr16
ffreep
mov
sbb
dec
in
mov
out
rclb
test
int3
pop
mov
jg
lock
clc
add
pop
xlat
or
dec
popa
mov
in
inc
aaa
outsb
add
or
faddl
sub
mov
xchg
xchg
and
ret
test
lock
xchg
pop
cli
xor
push
or
repnz
push
jns
aam
movsb
fisttpl
daa
sub
sbb
mov
fs
fwait
cli
add
aaa
dec
int
cmpsb
push
iret
pop
test
pop
cmp
mov
fists
or
shrl
jmp
jb
push
sbb
dec
add
test
push
mov
loopne
and
dec
adc
inc
pop
lcall
xor
repnz
sti
dec
or
mov
icebp
pop
in
sbb
aas
mov
pusha
test
aam
stc
stos
xchg
repnz
out
icebp
fwait
inc
jb
jmp
jmp
mov
mov
outsl
cmpsl
or
movsl
inc
jo
mov
jecxz
or
jno
sahf
and
pop
mov
rcll
mov
inc
loop
inc
push
fsubp
mov
mov
dec
or
out
mov
call
cltd
fstpt
push
les
adc
and
push
sbb
mov
xor
mov
ljmp
fiadds
xor
xor
xchg
fucomp
subl
loope
mov
dec
mov
outsl
shlb
nop
mov
fwait
push
xchg
push
push
sbb
shll
test
outsl
frstor
sub
mov
test
popa
mov
mov
test
in
dec
cs
popf
mov
cld
fucomip
xchg
fmuls
sub
addl
es
jge
push
fbld
dec
mov
mov
dec
negb
aas
sbb
inc
ds
stc
addl
out
adc
repz
cli
mov
pop
jb
out
inc
pop
dec
xchg
dec
sub
cmp
xor
aam
das
jmp
xor
ljmp
xor
loopne
fwait
push
sub
ds
aas
and
adc
mov
aas
imul
xor
in
mov
and
rorb
sbb
enter
xchg
sbb
mov
dec
loop
mov
cmc
loop
adc
and
push
inc
cltd
jbe
mov
dec
xchg
lcall
daa
dec
or
fimull
jne
iret
jbe
xlat
inc
shl
mov
sub
leave
stc
adc
ret
sar
ljmp
clc
cmp
fsubl
xor
cld
mov
dec
cmc
cmp
pop
pop
icebp
ljmp
arpl
mov
mov
mov
mov
clc
mov
hlt
repnz
call
out
clc
scas
xor
cmp
push
lds
stos
pop
mov
sbb
xchg
dec
fisubrl
push
cmpsl
test
push
lret
outsl
push
repnz
or
ret
push
inc
call
aaa
jnp
mov
jns
inc
or
cmp
in
xlat
jecxz
dec
push
or
aaa
sbb
mov
leave
pop
aas
imul
ret
add
mov
sahf
cltd
add
dec
addr16
addr16
or
out
std
dec
scas
xchg
adc
ja
aas
cmpsb
xchg
out
inc
push
gs
mov
jnp
push
push
jo
leave
aad
pop
pop
and
int3
hlt
jl
mov
icebp
jnp
mov
js
aaa
jbe
sub
dec
dec
rorb
xor
pop
or
xchg
in
and
dec
jne
push
pushf
mov
mov
test
lock
or
std
stc
adc
shr
fs
js
cmpl
sarl
jae
sub
aad
add
in
test
cmp
hlt
lods
pop
jp
cmp
gs
inc
xor
pop
icebp
nop
mov
ss
cmc
stc
insl
pop
jne
in
cmpsb
imul
xchg
cltd
pop
in
enter
call
out
test
lds
sbb
and
sub
sbb
hlt
add
xchg
cld
add
ss
movsl
mov
fwait
add
xchg
dec
mov
lea
movsb
sarl
paddusw
pop
pushf
stc
cmc
or
lea
cs
repnz
pop
dec
push
and
in
mov
and
in
mov
test
cmp
pop
dec
aam
dec
pop
xchg
ss
cmpsl
mov
inc
movsl
into
jp
clc
mov
lahf
int3
mov
leave
dec
js
and
jmp
cld
lcall
popf
sahf
xlat
int3
dec
jp
orl
push
adc
scas
pop
xchg
test
cmp
test
in
jne
sbb
outsb
or
lock
lahf
dec
mov
mov
enter
push
inc
jg
ss
mov
outsb
add
push
add
test
popa
mov
out
mov
mov
xchg
in
js
stos
push
adc
cmp
arpl
dec
push
add
push
int
cmp
adc
das
add
icebp
cmp
rcrb
mov
icebp
js
inc
dec
sbb
cld
pop
sub
mov
lock
sbb
repz
push
xor
fsub
es
pop
movsl
add
outsl
cmp
fdivrp
push
push
adc
mov
pop
xor
add
incl
push
in
pop
into
mov
sbb
mov
jle
scas
jl
sbb
and
add
out
not
popf
mov
jmp
sub
test
xor
xor
fldt
push
outsb
cli
push
rorb
pop
dec
xor
lahf
xor
xchg
shrb
cmp
cmp
shl
adc
dec
sub
lea
aaa
xchg
jb
mov
outsl
pop
or
aad
mov
out
ffreep
fistpl
cmp
add
push
cmp
mov
xor
clc
js
int3
mov
push
inc
pop
dec
mov
sahf
push
dec
jg
add
std
jnp
out
cli
loope
jnp
xlat
jb
push
stos
mov
push
ja
mov
iret
push
mov
stos
test
jecxz
fld
mov
in
sub
ret
push
movsl
xor
daa
enter
lods
add
sub
js
std
jnp
shl
dec
fstpl
inc
fwait
xor
je
nop
cld
jg
scas
int3
js
fwait
add
js
fldenv
out
out
and
movsl
enter
xor
or
push
into
cmp
icebp
jmp
and
dec
mov
adc
lahf
leave
pop
testb
nop
dec
rorl
aaa
jo
xor
lahf
mov
repz
mov
push
mov
inc
lods
imul
es
cwtl
jne
push
jnp
fadds
sbbl
cmpsl
xchg
insb
pop
data16
cwtl
xor
mov
into
sbb
cs
pop
aas
xor
inc
clc
push
jno
sub
daa
lahf
aad
inc
mov
addl
add
pushf
xchg
xchg
xlat
fstp
cmovp
aas
push
loopne
daa
ret
adc
lock
xlat
sub
dec
idivb
cmp
adc
cmp
insb
or
xor
pop
addr16
xchg
xchg
and
push
in
pop
pushf
jge
push
imul
pop
movsb
out
push
fwait
add
lret
dec
lcall
loope
je
movsb
pop
in
or
test
inc
daa
dec
mov
xor
cld
es
loope
pusha
bound
cmc
jle
jns,pt
shrl
insb
xchg
data16
hlt
sarb
inc
pop
and
xacquire
jno
jae,pt
push
into
xchg
inc
lock
call
lcall
lcall
pop
dec
mov
out
adc
gs
or
push
rcrl
jno
daa
inc
loope
mov
lea
xor
pop
or
mov
mov
sub
std
sbb
repz
negl
push
sub
ss
sarb
xchg
movsb
xchg
inc
lret
daa
and
xor
sub
std
sub
outsl
sbb
leave
popa
and
fwait
pushf
xchg
xor
or
ds
mov
jl
ljmp
adc
sbb
push
fsubs
adcl
mov
add
mov
add
jg
repz
inc
mov
jge
insb
sub
popa
pop
movsl
lret
push
cmp
pop
js
fistl
jge
sbb
push
jecxz
fstpt
or
dec
jne
aaa
pop
sbb
and
sub
mov
mov
jle
inc
mov
loop
int
leave
xor
dec
dec
test
sub
sbb
addr16
mov
sub
lret
dec
mov
mov
test
inc
xor
lods
rorb
lods
loopne
cmp
je
stos
jbe
sti
xchg
dec
sbb
mov
jb
xor
pusha
ljmp
mov
adc
mov
lea
std
aas
and
and
jne
bound
shrb
loopne
out
lods
call
ret
push
cmp
pop
inc
dec
jle
add
std
sbb
pop
dec
mov
mov
dec
icebp
mov
lds
stc
jo
and
mov
aad
adc
pop
xlat
js
xchg
mov
pop
add
movsl
mov
imul
adc
pop
cltd
push
sbb
arpl
push
add
fisttpll
cld
sub
xchg
enter
pop
call
cmpsb
fsubp
push
xor
out
cwtl
aaa
pop
or
or
mov
repz
rcll
sub
dec
out
lods
jno
cmp
movsl
pop
xchg
loopne
push
cmc
xchg
pop
roll
cmc
dec
in
int
sub
sbb
pushf
push
and
arpl
xor
inc
mov
and
mov
cld
pop
cs
mov
out
mov
nop
xor
xchg
mov
cmpsb
sub
insb
cmp
insb
add
sub
cmc
inc
test
mov
xchg
repnz
mov
aad
cmp
sahf
or
jmp
push
xor
lret
mov
xchg
adc
jae
hlt
adc
cmpl
xorb
outsb
mov
gs
outsl
or
cmp
imulb
xor
dec
fldcw
sarb
push
mov
push
movsl
add
mov
push
dec
insl
inc
movsb
sti
dec
jns
add
insl
and
push
hlt
jg
cmp
pushf
pushf
pop
dec
jp
into
pop
scas
mov
movsl
je
mov
addr16
or
in
in
ffreep
jns
rcl
clc
scas
push
xchg
cli
enter
pop
cmp
sti
mov
filds
mov
in
dec
jl
push
aad
stos
sbb
mov
push
mov
scas
mov
stc
dec
daa
sub
lret
xchg
push
xor
cmp
cmp
mov
dec
mov
cs
xor
insl
push
lcall
jnp
and
sbb
inc
and
inc
and
sahf
popf
out
inc
mov
or
cs
arpl
into
add
mov
fs
loope
insl
es
cmp
incl
popa
pop
loop
xlat
inc
stc
ljmp
sti
mov
push
mov
imul
push
jbe
in
mov
inc
std
arpl
xor
lret
add
scas
dec
fdivrs
cmp
mov
ja
lahf
daa
cs
inc
lahf
cwtl
mov
lcall
inc
jl
mov
hlt
int3
pop
fnsave
or
lock
mov
sbb
test
mov
xor
icebp
outsb
shlb
jae
sbb
push
jge
cmpsl
clc
pop
or
fwait
lahf
testb
lret
mov
push
push
adc
xchg
jmp
xchg
decb
lea
cltd
jb
sub
in
adc
xchg
adc
push
in
loop
mov
add
pop
push
sbb
xchg
call
push
into
push
xor
pushf
sarb
jbe
arpl
dec
cltd
xor
and
mov
aas
fldenv
adc
mov
and
jp
test
lea
notl
test
lods
mov
icebp
mov
xorb
mov
jmp
xor
adc
inc
sarl
sub
adc
ss
movsl
test
mov
div
loop
sbb
rcr
roll
scas
cmp
in
and
lea
xchg
enter
iret
stc
pop
icebp
mov
stos
pop
and
das
inc
sub
xchg
xlat
dec
pop
insb
out
mov
mov
loope
push
insb
subps
xchg
xchg
ret
add
out
stos
xchg
jl
insb
jp
gs
or
into
jns
jne
ss
divl
mov
int
nop
arpl
mov
stc
fcom
insl
aam
arpl
cmp
pop
mov
sub
pop
jns
in
test
push
in
movsb
ficoml
jmp
pop
ficomps
xchg
lock
pop
imul
jo
push
adc
xchg
lahf
loopne
xchg
pop
fcmovbe
dec
clc
xchg
mov
mov
add
lret
inc
push
cli
push
cs
mov
mov
nop
fxch
ret
fimull
mov
daa
jbe
test
outsl
fcoml
sub
and
mov
jecxz
out
rorb
adc
out
incl
cmp
jge
cmp
aad
call
add
xchg
fidivs
repz
pop
mov
scas
mov
mov
jb
inc
jecxz
mov
pop
repnz
inc
adc
int
and
xchg
aas
lcall
cmp
test
shr
add
mov
cmpsb
addr16
leave
push
imul
push
call
and
cltd
mov
inc
fsubs
cs
and
push
xor
add
cmp
fabs
cmp
mov
push
mov
mov
jno
dec
xor
and
fistpl
fs
mov
cmpl
mov
xchg
or
lret
mov
inc
mov
imul
into
or
test
clc
xchg
gs
pop
push
dec
hlt
sahf
pop
jle
aaa
int3
lea
mov
mov
mov
int
orl
add
lret
mov
pop
mov
mov
adc
mov
dec
push
inc
faddp
negl
add
test
mov
outsb
xchg
ja
in
jno
sbb
xchg
aaa
jo
or
and
adc
sti
jmp
or
pop
mov
mov
cmp
std
out
inc
sbb
int
inc
sbb
dec
repz
dec
jae
fwait
loope
jb
add
mov
scas
jg
mov
pop
jp
cmp
in
fnstsw
mov
int
loop
pop
mov
fildll
mov
inc
ss
adc
jmp
daa
sub
adc
or
pop
dec
movsl
xlat
inc
jo
and
scas
jp
push
repz
ds
sar
mov
popf
mov
test
mov
cmp
shrl
push
push
adc
aaa
lds
enter
stos
pop
shl
cs
xlat
ret
dec
rorl
dec
aam
mov
pop
rcll
dec
lods
adc
xor
inc
in
ret
es
ret
ret
mov
aad
fstpl
adc
or
insl
test
xor
xor
push
mov
cmp
mov
dec
sub
lods
jnp
lods
int
inc
shrl
xor
lods
mov
shrb
cmpsb
xchg
sti
aas
in
movsb
pop
test
pop
sub
dec
out
push
imul
rcrb
mov
decb
ds
fidivs
loop
xor
stos
pop
mov
mov
adc
inc
cmovae
jne
dec
sti
pop
mov
mov
sub
loopne
cmp
mov
sub
rclb
lahf
in
rep
fimull
popf
hlt
dec
lea
pop
bound
mov
std
dec
insl
push
addl
in
push
cwtl
sbb
inc
mov
nop
bound
xchg
adc
push
call
mov
cmp
cltd
cli
ja
stos
mov
mov
ljmp
and
imul
out
sbb
je
dec
or
das
push
int3
sub
or
cs
ja
cs
cmp
into
mov
lock
sbb
push
orl
sbb
pusha
cltd
ret
pop
into
lret
xchg
and
mov
mov
jne
cltd
dec
test
sti
jnp
mov
clc
jecxz
mov
mov
push
mov
push
push
or
mov
push
xor
loopne
popa
and
cld
or
enter
aad
sub
je
sbb
int
lock
rcrb
and
inc
call
shrl
dec
jmp
call
rorl
xchg
cmp
jmp
or
in
out
movsb
aas
rcrb
sbb
in
sbb
std
les
ret
dec
mov
cmpl
in
cmp
add
dec
jmp
and
lret
subl
fwait
sbb
out
loope
call
test
push
popa
cmp
pop
push
sub
cltd
scas
cld
dec
sahf
cmp
dec
adc
pop
insl
outsb
out
test
mov
lcall
out
pop
sub
mov
dec
test
ja
aaa
jne
jge
repnz
orb
xor
mov
mov
sub
popf
inc
aad
ret
add
out
scas
test
pop
fsubs
jbe
addb
les
mov
iret
sbb
cld
mov
aas
pop
cli
push
nop
jg
and
xor
cmp
scas
fucomi
pop
sub
sub
pop
dec
ret
arpl
jge
sbb
xchg
insl
push
xchg
ret
xor
dec
inc
jno
push
pop
push
mov
fwait
pop
mov
pushf
xor
sti
xchg
mov
mov
sbb
mov
cmp
xor
pop
divl
xlat
inc
lcall
or
add
sub
mov
or
lahf
bound
jne
divb
xchg
pop
iret
fistl
ss
fstl
dec
je
rcrl
nop
dec
orl
cmp
inc
rcr
mov
or
std
mov
pop
push
cltd
negl
sbb
fisubs
cmp
jae
scas
sbb
add
dec
ds
out
shl
lret
jb
enter
mov
movsl
xchg
pop
mov
xchg
lods
hlt
insl
mov
sahf
pushf
lds
mov
lds
cmpsb
cmp
cmp
leave
adc
inc
out
mov
mov
cmp
in
roll
mov
ret
or
popa
pop
movsl
sub
into
fmull
xchg
jae
mov
pushf
cmp
popf
lahf
lock
orb
addr16
mov
aaa
add
fidivrl
mov
xor
push
and
cmp
jne
mov
int3
jae
push
imul
lods
push
in
sub
dec
cmp
pop
cmp
push
adc
sbbl
lret
sti
popf
xchg
jns
xor
les
dec
out
loopne
iret
mov
out
pop
add
sub
fdivs
out
data16
jecxz
sub
mov
pop
aad
mov
test
mov
dec
orb
test
in
inc
push
jae
loopne
pop
mov
jne
or
jae,pn
or
or
cmp
into
push
inc
rclb
xchg
sub
xchg
jecxz
push
roll
jne
stos
psllw
pop
bound
adc
fisubs
pop
inc
xchg
mov
dec
lods
cwtl
arpl
repz
sub
xor
call
imul
mov
ret
mov
lcall
xchg
pop
and
or
int3
gs
fstp
aam
push
xor
fwait
fs
dec
mov
aaa
xchg
mov
cltd
out
mov
call
cmp
shlb
ficompl
in
orl
xchg
adc
push
jge
scas
push
rol
fisubl
es
jle
pop
es
pop
xchg
push
or
sub
xchg
mov
jo
mov
insb
push
mov
ficomps
xchg
mov
adc
pop
stos
or
push
rolb
aam
decb
jb
jle
stos
and
test
sbb
cmp
jl
cwtl
rolb
addr16
in
push
wbinvd
mov
imul
jg
nop
sub
sbb
mov
cmp
sahf
and
adc
loop
test
xchg
mov
sub
je
shll
jno
mov
add
jbe
scas
lds
pop
mov
dec
repz
mov
sbb
inc
mov
xchg
fisubrl
or
les
mov
clc
imul
adc
iret
xchg
xor
mov
xchg
xchg
stos
push
xchg
scas
clc
hlt
and
cmp
mov
and
popa
sbb
arpl
or
dec
loop
fldl
xchg
movsb
loope
outsl
adcl
pop
outsl
lea
and
adcb
lods
andb
rclb
inc
lcall
int3
or
loopne
ret
xchg
dec
sub
stos
dec
or
add
out
fdivl
lahf
fisubs
rcrb
in
adc
imul
rcrl
push
mov
sub
add
adc
mov
jmp
popa
mov
mov
xor
dec
imul
fwait
mov
je,pt
into
add
xchg
in
in
loope
gs
xchg
hlt
cli
icebp
mov
sub
daa
xchg
inc
clc
test
inc
je
js
lcall
jne
idivb
jl
inc
xor
cmp
lahf
mov
fs
push
or
sti
xchg
roll
sbb
scas
or
cmc
lret
xchg
and
fs
out
out
enter
cld
repz
es
pop
inc
fcomip
xor
add
inc
jp
enter
or
pushf
inc
xchg
xor
loopne
mov
and
inc
inc
dec
popa
mov
inc
in
mov
enter
mov
jp
stc
pop
leave
scas
xchg
sahf
in
ret
popf
rclb
clc
add
in
dec
stos
fprem1
add
mov
xor
lret
cmp
scas
sub
push
cli
std
cltd
std
outsb
inc
lods
fmul
push
outsl
rcrl
adc
mov
testb
cmpsl
pusha
mov
movsl
incl
sbb
shll
pop
out
jle
rorb
sub
xor
fcompl
aad
mov
xor
jns
cwtl
sub
int
mov
or
jecxz
add
cwtl
xor
and
jb
and
sub
push
push
pop
mov
ss
mov
mov
sub
int
sub
enter
std
xor
lods
hlt
mov
pop
mov
mov
mov
lods
in
pop
ss
adc
mov
pcmpgtd
cmpsb
gs
lock
xchg
ret
pop
push
adc
enter
lret
mov
pop
ja
dec
sub
and
mov
adc
jge
sti
or
stc
int3
movsb
and
out
sub
mov
out
jecxz
xlat
sub
arpl
shrb
cmp
clc
jae
arpl
stos
call
enter
xchg
sti
dec
mov
dec
mov
lods
lret
mov
and
or
ja
ja
xchg
mov
aam
xor
in
cld
mov
xor
andl
add
mov
xchg
jns
pop
mov
outsl
pop
add
idiv
jne
sub
scas
push
xchg
mov
adcb
lea
mov
mov
lret
xchg
roll
lea
outsl
mov
ret
es
scas
stos
popf
dec
lcall
xor
fs
push
sti
push
pop
lock
sub
leave
divb
pop
add
sub
and
xor
insb
mov
jae
insl
repz
mov
subl
mov
adc
add
sub
xchg
ficoms
bound
cmp
push
cmpsl
jns
repnz
in
cmpsl
out
add
sbb
sbb
lds
sub
inc
cmp
stos
mov
repz
sahf
bound
sbb
jecxz
xor
mov
or
andb
fs
push
or
popa
lea
pop
fsubs
setge
das
xchg
mov
aad
mov
sub
mov
sbb
dec
repz
cmp
inc
fwait
outsb
and
into
es
into
out
fdivrs
ja
xor
push
notrack
sub
repz
mov
or
lds
lcall
out
mov
xlat
cmpsl
add
incb
jnp
sub
je
jle
pop
xchg
lods
ljmp
dec
movsb
dec
mov
call
xchg
sub
mov
push
andl
push
data16
and
sarl
stos
xor
jmp
mov
pop
ja
pop
mov
lret
xor
dec
loop
int3
loop
in
mov
and
aam
jle
xchg
or
pop
lcall
dec
add
stos
aas
pushf
insl
movl
rcll
cmpsl
mov
call
cwtl
sti
xor
cld
mov
stos
jbe
mov
mov
cltd
data16
aaa
push
stos
jmp
pop
sarl
jl
cmp
sahf
jbe
imul
decb
insb
int
loop
mov
sar
out
push
jmp
rol
out
push
mov
pop
ds
pop
cli
jp
imul
adc
pop
sub
aad
idivb
les
mov
addr16
cmpsb
int3
inc
aaa
sbb
inc
adc
xchg
mov
stos
add
test
sbb
shl
or
cs
mov
sub
mov
in
pop
iret
int3
xchg
cmpsb
cs
mov
cmpl
lahf
arpl
data16
jne
lret
sub
xlat
xor
sarb
cmp
aad
in
push
cmp
jno
push
in
lds
or
jmp
adc
fistps
addb
push
pop
xchg
cld
and
push
lock
int3
xchg
or
xorb
add
push
lds
jmp
add
add
fnsave
leave
testl
or
scas
pop
jno
inc
shlb
mov
add
dec
fcomps
sub
cltd
lods
inc
adc
lds
inc
push
stc
sub
ss
xchg
jns
lods
push
lock
xchg
leave
inc
xchg
mov
cmp
nop
int
dec
movsb
cltd
sbb
dec
fists
mov
jnp
inc
or
test
dec
sub
mov
arpl
xlat
add
sbb
lods
arpl
test
jle
cltd
xchg
fdivs
dec
fsts
outsl
pop
dec
movsl
cwtl
insb
lods
xchg
rolb
push
pop
pop
arpl
jmp
loop
cmp
mov
push
pop
xor
xchg
sub
dec
jp
mov
aam
sarb
jp
mov
aas
pop
mov
mov
or
out
add
or
icebp
rcll
mov
xchg
dec
dec
mov
mov
mov
lahf
jns
daa
insb
cmp
and
outsb
out
and
jmp
inc
ss
cmc
ja
bound
adc
daa
fmuls
ss
test
pop
cmc
mov
sub
adc
jl
jnp
add
xchg
call
xchg
mov
rcrb
in
ljmp
lcall
mov
pusha
mov
push
outsl
stos
pop
lret
cmp
sbb
cmpl
lar
push
data16
mov
dec
aas
loop
lea
inc
popa
ljmp
call
xchg
lds
jb
jle
pop
rclb
and
inc
mov
xor
and
sbb
sbb
and
outsb
ds
jg
lss
cld
or
mov
pop
or
cwtl
popf
nop
pop
popf
inc
mov
out
or
push
jmp
and
pop
movsl
add
sbb
ljmp
mov
jmp
adc
mov
shrl
xor
sub
into
xor
out
push
pop
stos
sub
frstor
inc
cs
and
fsub
enter
fsubr
add
fcomps
jae
loop
mov
jge
loope
scas
jne
inc
aas
push
mov
mov
fiaddl
cmp
rcrb
pop
shl
cmp
and
sbb
lahf
mov
addb
lret
jg
lock
std
push
xchg
inc
mov
or
push
call
inc
or
xchg
xor
inc
sub
rcl
pop
lcall
push
jns
cmpsb
dec
mov
pop
repz
sub
pop
clc
rolb
and
loopne
pop
lret
scas
imul
js
dec
push
mov
mov
aaa
smsw
mov
mov
frstor
shll
int
pop
into
subb
fildll
pop
test
xor
movaps
pop
fisubs
mov
shll
mov
stos
add
fwait
and
xchg
jns
stos
push
inc
stos
out
movsl
daa
jb
icebp
sub
inc
adc
popf
dec
mov
jmp
clc
pop
addr16
push
cmp
std
nop
sbb
adc
add
scas
and
push
ds
mov
in
xchg
pop
jg
mov
xchg
mov
inc
or
out
xor
or
aad
dec
outsl
xor
mov
xor
add
xchg
jnp
daa
sub
xchg
or
mov
pop
imul
dec
mov
cmp
mov
sub
sub
add
fsts
xor
out
xchg
sub
pop
xadd
pop
sarl
outsb
add
push
sahf
add
sub
ja
cmc
ret
sahf
sbb
jle
pusha
ds
cmp
cs
sahf
jle
out
cmp
pop
push
xchg
mov
mov
ljmp
aad
dec
and
hlt
adc
inc
cltd
arpl
test
add
xor
lret
gs
lahf
fcoms
shll
push
mov
mov
xor
inc
bound
inc
adc
clc
jnp
mov
pop
pushf
sub
pop
cmp
in
jne
sbb
ret
jo
sub
pusha
subl
mov
cmp
sbb
mov
jmp
xor
ret
adcb
shrb
mov
fldenv
pop
xor
sub
inc
push
fcoml
pop
pop
lods
mov
mov
pop
xchg
ds
jne
out
push
adc
xor
xchg
mov
xchg
scas
push
mov
lcall
stos
and
push
pop
in
mov
mov
cli
xchg
fwait
sub
scas
sub
add
pop
lods
insb
outsl
dec
ret
cli
imul
call
aas
push
out
flds
pop
fisttpll
shrb
adc
fistps
mov
icebp
jg
or
lock
sub
test
dec
pop
push
jg
adc
sbb
cwtl
daa
outsl
je
and
mov
jmp
cmp
jno
pop
ficomps
cmp
mov
shlb
lods
fidivl
lret
imul
lock
or
mov
sbbl
jb
and
in
cli
or
cmp
mov
mov
cmpsl
test
push
mov
bnd
aad
mov
and
jp
push
mov
cmc
sbb
shr
sbb
popa
mov
and
push
out
test
ss
jecxz
push
add
jmp
dec
es
out
mov
or
repz
mov
push
pushf
mov
ds
insb
sbb
adc
out
push
sub
stc
popf
mov
xor
adc
hlt
jns
mov
fwait
cmp
aad
pop
loope
jbe
les
mov
shll
fisttpll
int
cmp
and
fdivrs
push
pop
fcom
xorb
jne
mov
inc
aad
and
and
xchg
jno
mov
dec
cwtl
jo
idivl
xor
lds
imul
xchg
dec
cmp
sahf
mov
ds
dec
stos
ds
movsb
imul
test
iret
arpl
xor
stos
push
mov
aam
lcall
lahf
xchg
lret
adc
mov
inc
mov
jecxz
add
push
mov
test
arpl
rorb
xchg
dec
jo
push
std
sub
fcmovu
repnz
lock
insb
ja
into
add
sbb
mov
mov
dec
push
fsub
lods
cmp
lcall
out
pop
lods
in
adc
sub
ljmp
xor
aam
inc
mov
mov
sub
in
pop
mov
cltd
add
adc
mov
ja
clc
aad
and
sub
mov
addl
dec
out
adc
fistps
pop
fwait
jbe
mov
cld
jb
mov
dec
ja
mov
loope
mov
mov
outsb
adc
repnz
adc
aaa
add
jae
push
addr16
jp
enter
shl
or
inc
sbb
and
pop
sbb
imul
or
out
cmp
cmp
rcr
shr
and
inc
sub
test
fs
popf
xchg
cmp
inc
pop
jge
mov
mov
ljmp
fcmovu
or
cltd
mov
inc
das
mov
clc
xor
rorb
sub
jg
fstpt
jg
ljmp
xor
add
xor
stc
out
mov
loopne
idiv
dec
ret
shr
inc
xchg
push
dec
js
and
adc
cltd
add
sub
pushl
dec
jmp
adc
add
mov
xor
dec
jns
push
mov
or
call
loop
imul
pushf
inc
jecxz
ljmp
sbb
dec
out
clc
enter
iret
fdivrs
pop
scas
cmp
cmp
xor
push
cmp
dec
ja
clc
add
push
fbstp
in
cmp
pop
subb
inc
mov
sub
push
jno
in
sbb
scas
into
mov
inc
int3
lods
dec
dec
je
ss
movsl
fisubl
fstl
xchg
and
pusha
mov
pushf
aam
sub
clc
xlat
bound
in
cmp
xlat
imul
icebp
sbb
mov
sub
lret
mov
push
adc
and
xchg
or
pop
cwtl
inc
subl
sub
sbb
mov
or
arpl
inc
ja
rolb
xor
ja
mov
ljmp
imull
pusha
mov
cwtl
sbb
cmp
and
js
dec
js
das
ss
adc
rcl
clc
mov
fadds
fisubrl
rcll
aam
mov
cs
mov
xor
shl
xor
cld
adc
in
cmpsb
ret
sub
hlt
mov
mov
in
pop
int
mov
cs
lcall
arpl
hlt
jl
mov
fnstenv
mov
xchg
imul
arpl
sti
xchg
sbb
repz
dec
inc
and
lea
imul
stos
test
lcall
movsb
add
dec
or
pushf
push
aad
lret
pop
popa
out
lods
add
mov
mov
rcl
push
fucom
into
xchg
sub
and
inc
andps
fisubs
cmpsb
je
nop
or
xchg
stc
sub
jnp
les
mov
mov
pop
sub
loopne
fcoml
jl
push
and
popa
pop
add
cmp
aad
call
and
jbe
dec
add
inc
sbbb
test
or
fnstcw
sub
cmp
xor
jle
mov
stos
mov
cmp
dec
ds
inc
fucomi
popf
cmp
xchg
imul
mov
test
lds
lods
adc
xchg
add
in
pop
push
cmpsb
sub
dec
adcl
mov
lcall
sahf
cmc
movb
adc
addb
out
xchg
sub
faddp
mov
or
adc
mov
outsb
inc
pop
add
sti
jnp
cwtl
or
jae
fcmovu
jecxz
push
mov
loope
push
cmc
cld
scas
lds
dec
fiadds
dec
dec
aas
sbb
lret
sbb
fscale
lock
or
jge
adc
sahf
adc
xchg
nop
cmp
mov
dec
les
outsb
push
adc
icebp
scas
mov
xor
lea
and
jbe
and
repz
lahf
xchg
mov
mov
jne
jp
dec
push
and
sub
cmp
popf
push
repz
sub
adcb
and
or
push
mov
sbb
xor
rcrb
ficomps
adc
inc
hlt
add
call
ret
sbb
dec
outsb
jecxz
mov
mov
lods
xchg
cmp
push
lods
or
es
scas
inc
xchg
pop
out
filds
cs
stos
test
jg
xchg
mov
xchg
fsubrl
mov
shlb
lahf
xchg
mov
in
shll
arpl
fcomps
pop
jmp
push
mov
pop
int
in
imul
and
fcmovnu
fidivrs
dec
mov
movsl
add
addr16
xor
aas
and
or
mov
jmp
add
int3
mov
mov
xorb
jno
daa
pushf
mov
push
cmp
popf
or
repnz
xchg
sub
ret
mov
sti
pop
mov
lock
in
xor
stc
jg
xlat
sbb
dec
out
outsl
mov
out
dec
push
sub
sbb
std
adc
test
sub
push
mov
push
push
idivb
inc
sarb
in
cli
or
mov
aad
jmp
fistl
pop
push
out
ds
lea
and
or
ret
sbb
mov
loope
in
sahf
or
scas
sti
popa
les
enter
xor
daa
push
dec
mov
cmp
inc
les
aas
out
jle
bound
lret
cltd
pop
mov
dec
inc
es
int
or
adc
aam
mov
mov
bound
jne
jmp
mov
lahf
fcompl
out
imulb
mov
scas
leave
mov
fwait
int3
out
les
fcmovne
fcmovb
push
and
mov
jp
int
gs
out
cmp
xor
inc
cwtl
imul
fxch
jbe
mov
xchg
pop
outsb
addb
mov
mov
xchg
mov
cmp
push
push
pop
cwtl
jne
push
mov
xchg
dec
push
dec
popa
add
das
bound
inc
sbb
add
dec
call
repnz
push
sahf
add
adc
das
aaa
fwait
call
fstpl
fimuls
jns
mov
mov
xor
mov
cwtl
xchg
popf
enter
mov
and
iret
and
rorb
inc
imulb
movsl
hlt
das
add
pop
mov
lds
cmovp
ret
fimull
push
lret
and
cmc
fisubl
or
in
shl
out
inc
inc
out
ds
addr16
and
ds
push
lock
sbb
jmp
mov
cmpsb
sbb
lods
sub
sub
ljmp
add
push
movsl
pop
mov
inc
loope
cmp
mov
pop
cmp
push
pop
xor
popf
test
xor
and
xlat
in
xchg
or
push
sbb
mov
xor
mov
call
cmp
push
out
pop
shll
push
insb
popf
outsl
leave
std
push
iret
cli
xchg
cmp
jmp
push
mov
mov
iret
jbe
adc
and
xchg
adcl
cmc
fbstp
pop
dec
xchg
sub
shlb
cmp
cmpsb
test
clc
fisubl
xor
js
cmc
mov
into
xor
sub
lea
loop
fistpl
js
push
push
nop
scas
cmp
pop
iret
mov
sub
xor
lea
nop
flds
insl
shrb
cmp
adc
addr16
push
addr16
cmp
movsb
cmpsb
fwait
sbb
cmpsb
or
jmp
add
ja
ret
into
mov
test
filds
sub
out
mov
dec
dec
lcall
sti
add
xchg
mov
stc
pop
mov
ljmp
pop
and
adc
push
ja
mov
or
std
push
fcoml
dec
pop
jmp
mov
jbe
pushl
decb
push
gs
les
push
xor
jo
insb
outsl
repz
fdivrs
fldl
mov
outsl
mov
xchg
xor
and
jle
mov
adc
jecxz
push
mov
sahf
mov
leave
or
movl
pop
lea
or
dec
int
adc
pop
negb
pop
cmpsb
add
add
add
sub
dec
xor
aas
xchg
sub
aas
mov
leave
pop
mov
cmp
xchg
xchg
xchg
pop
daa
mov
jp
inc
xchg
push
dec
cmp
dec
orb
loopw
mov
popa
icebp
cwtl
mov
xor
les
lret
data16
xor
xor
call
cmp
jns
xor
cmpsl
xlat
sub
enter
xchg
fstpl
mov
jle
add
sbb
call
cltd
mov
push
dec
js
pop
gs
cltd
push
int
jge
inc
daa
and
xchg
xchg
data16
clc
cmp
sub
xor
sub
in
cltd
add
das
jns
mov
lret
cmp
xchg
push
pop
jecxz
dec
popf
cwtl
pop
fsts
jns
xor
insl
push
hlt
repz
lahf
enter
lahf
lods
mov
adc
lods
push
sub
jl
jnp
int3
or
sbb
ds
mov
jns
pop
dec
adcb
movsl
shr
pop
add
stos
pusha
mov
push
ret
pop
jne
into
repnz
ja
jbe
add
call
iret
notl
mov
sbb
mov
sar
mov
pop
jle
pop
sub
out
pop
icebp
adc
push
ljmp
sbb
lcall
lret
stos
inc
daa
mov
mov
sbbl
loopne
push
add
test
inc
int3
push
jge
mov
and
data16
aam
mov
mov
jnp
dec
add
rcrl
jno
xchg
sub
mov
sub
mov
mov
xchg
add
inc
and
orl
inc
lds
loop
jae
clc
in
jns
sbb
sti
in
js
xchg
mov
sbb
lret
mov
lahf
mov
repz
sbb
lcall
cmpb
popa
loope
inc
scas
js
and
imul
dec
outsb
int
pop
push
mov
lds
mov
mov
test
cmp
clc
xchg
sti
ret
or
jmp
mov
jb
dec
mov
outsl
in
data16
cmp
daa
divl
jge
inc
sbb
cmp
jb
or
imul
outsb
xor
mov
cmpsl
je
xchg
test
dec
mov
inc
adc
pushf
fisttps
add
jecxz
push
rcll
xchg
repz
aas
add
in
jno
jno
lret
cmc
lods
cmp
stos
and
sbb
iret
test
push
pop
lock
xchg
or
out
fimuls
shl
mov
inc
jns
or
push
outsl
mov
in
je
or
adc
into
test
negb
mov
popl
aas
jecxz
add
sub
dec
sbb
cmpsb
bound
xchg
dec
mov
push
sahf
pop
mov
mov
dec
xor
adc
es
rorb
xor
inc
inc
scas
int3
movsb
add
cmpsl
cmp
push
mov
fstpl
pop
pop
pop
adc
ret
movsl
lret
sbb
pop
inc
push
movsb
or
out
and
push
cmp
sbb
cli
int
popa
or
push
je
cmpsb
cmc
sbb
stos
inc
jl
popf
push
in
jp
mov
inc
and
pop
add
roll
jp
arpl
enterw
mov
pop
mov
movsb
int
jns
mov
hlt
jnp
push
jge
pop
bound
movsb
jb
and
adc
and
gs
mov
jbe
inc
cmp
out
outsl
jns
in
mov
sub
imul
dec
ficompl
xor
outsl
add
mov
pop
rorl
fidivrl
sub
push
std
mov
cwtl
loope
enter
jge
mov
rclb
inc
nop
stc
cmp
outsl
jne
jbe
jo
xadd
pusha
addr16
inc
cmc
lods
incb
int
daa
mov
pop
sub
sub
loope
push
ret
enter
inc
comiss
push
sahf
dec
jnp
test
fcmovbe
push
jl
pop
jecxz
iret
adc
out
pop
cli
out
js
jbe
xor
bound
roll
fdivp
jno
push
pop
andl
add
jl
dec
lods
mov
hlt
mov
mov
shrb
int
stos
insb
data16
xor
aaa
jno
mov
add
je
rolb
sub
stc
clc
adc
mov
data16
jmp
xor
imul
inc
ljmp
pop
mov
imull
mov
mov
jle
sub
xchg
push
sbbl
dec
in
jle
push
add
cmpsb
adc
adc
mov
scas
push
cmp
in
push
mov
push
pushf
sub
lods
pop
das
leave
push
xchg
insb
sahf
mov
in
push
mov
mov
out
adc
pop
lret
mov
scas
notl
lods
jae
cmp
ds
inc
ds
ljmp
dec
gs
fiadds
pop
xor
jne
xbegin
and
xchg
imul
scas
sub
cltd
inc
mov
push
cmp
repnz
jns
in
or
mov
stc
or
ret
or
xor
lret
les
jge
sahf
jmp
add
outsb
sahf
dec
lods
inc
sub
insl
imul
cwtl
mov
jne
xor
imul
inc
and
or
loope
aam
test
cmpsb
push
outsb
and
ja
mov
push
jb
adc
push
cltd
xchg
movaps
int
testb
and
scas
sub
mov
popa
inc
shl
mov
loop
int3
mov
sbb
cli
ja
ljmp
aad
call
mov
test
or
mov
pop
pop
ret
sbb
mov
mov
popf
cmc
and
adc
scas
out
rolb
lret
xchg
sarl
loopne
sub
xlat
data16
jbe
fildll
lock
mov
stos
rol
icebp
xor
fnstenv
push
and
pop
dec
mov
mov
and
sar
scas
mov
popf
lret
mov
test
in
push
inc
pop
fs
xchg
jg
mov
jbe
cli
inc
xor
insb
lock
outsb
sbb
loope
push
jno
mov
mov
out
pop
and
xor
clc
fsubp
inc
popf
cld
cmc
data16
aam
adc
inc
or
jno
divl
aaa
vmread
adc
sub
addb
and
test
pop
xchg
sahf
add
out
push
adc
mov
xor
negl
pop
push
dec
ret
sbb
mov
and
jmp
mov
push
jp
or
es
cmpsb
inc
lret
in
jmp
sbb
adc
addr16
iret
stos
xor
xchg
rclb
mov
shll
bound
pushf
inc
pop
sbb
adc
js
and
add
pop
push
ds
jg
cltd
lahf
outsl
ljmp
jae
out
mov
push
js
filds
leave
inc
xor
ds
jge
jl
sub
xor
inc
mov
sub
xor
push
mov
shrb
in
fs
push
jge
imul
sbb
addr16
out
fidivrs
lcall
sub
lahf
push
jl
sbb
pop
sub
pop
adc
mov
dec
rcrl
pop
sub
mov
insl
fsubs
pop
inc
subl
jle
fdivrl
imul
sub
cmpsl
sbb
movsb
cmp
mov
mov
xchg
pop
test
jb
insl
sub
lock
push
iret
or
outsl
fisttpll
lods
lock
cwtl
pop
mov
or
jae
fadds
mov
bound
ds
push
inc
jge
nop
inc
adc
cmp
je
inc
mov
xchg
movsb
push
cmp
cmp
rolb
pushf
push
mov
rcll
sbb
and
xchg
cmc
les
ljmp
inc
out
pop
bound
shrb
jbe
roll
out
shrl
mov
enter
fstpt
sbb
fnstsw
negl
je
mov
hlt
push
out
arpl
pusha
fldt
xchg
cmp
and
xchg
mov
mov
push
dec
jmp
fmuls
dec
outsb
mov
jne
push
aaa
dec
iret
ljmp
mov
add
mov
jno
divb
or
out
xor
sub
xchg
mov
mov
jns
stos
sahf
fs
dec
or
push
aaa
incb
pop
into
cmp
lcall
inc
xchg
out
test
push
mov
test
mov
loope
cmpsb
jnp
scas
pop
jl
xchg
inc
inc
loop
cmpl
jb
xchg
sub
sub
roll
jecxz
and
outsl
test
cmp
mov
insb
inc
dec
outsl
jo
loopne
les
out
cwtl
mov
ret
daa
inc
cld
jno
mull
data16
inc
sub
ficompl
or
negb
sbb
inc
mov
add
sbb
mov
mov
mov
or
pop
mov
aas
outsl
test
shufps
mov
push
nop
cmp
dec
std
rclb
int
js
fstps
rol
rcrb
push
test
pop
add
into
shll
mov
sbb
cmp
mov
jp
js
ss
scas
das
pop
scas
in
repnz
inc
push
std
mov
lds
f2xm1
stos
push
fsubrs
insb
lcall
nop
addl
push
dec
push
inc
adc
add
mov
push
int3
loopne
shrl
xor
in
lea
fimuls
nop
dec
lret
lcall
mov
pop
pushf
ja
or
jbe
or
shrl
outsl
mov
mov
jbe
push
lret
mov
lods
stos
les
lods
sbb
cmp
mov
test
lods
fwait
dec
sbb
cmp
xlat
in
popf
ja
jae
mov
mov
jmp
adc
into
sub
add
enter
pop
cmpsl
mov
sbb
fsubrs
push
addr16
jnp
clc
lret
cmp
setae
icebp
fnstcw
inc
pusha
inc
mov
jae
jmp
sahf
pop
repz
sub
in
stos
mov
shl
jns
lahf
bound
xor
pop
and
jae
add
aad
sahf
fsubrl
out
lock
xchg
sti
dec
popf
stos
jno
add
fs
add
test
mov
or
std
lods
sbb
pop
jg
mov
sub
adc
test
in
mov
xlat
test
sub
pop
xchg
adcl
pop
inc
in
mov
imul
mov
test
int
and
das
inc
gs
into
or
jl
pop
fwait
mov
push
mov
pusha
xchg
aam
xor
xchg
sahf
test
mov
push
lret
push
in
stc
arpl
pop
fsubr
pushf
dec
and
sub
pop
push
je
xchg
xchg
inc
xadd
fstpt
fists
fidivrl
lret
or
test
dec
and
xchg
mov
sub
xchg
jbe
mov
sub
cmpsl
add
loop
stos
push
inc
cmp
fsts
fimuls
movsl
testb
xchg
shll
and
cli
lods
cli
mov
rep
cmp
lea
xchg
mov
in
or
xor
inc
dec
int3
mov
gs
movsb
push
xor
loopne
and
inc
mov
push
inc
cld
cli
mov
sarb
sbb
pop
imul
cmc
stos
mov
inc
loop
test
and
addr16
push
in
sub
cmc
sbb
jo
repnz
cmc
add
clc
push
or
outsb
sub
mov
fiaddl
gs
loopne
sub
and
lahf
add
jmp
mov
int
ljmp
jae
ret
and
fadd
outsl
bound
ret
adc
push
jle
and
dec
clc
push
push
jb
push
cmp
add
mov
lods
bound
mov
mov
mov
inc
iret
xchg
lret
or
xor
lods
test
fcomi
movsb
pop
fs
and
in
loopne
jno
sarb
xchg
fstl
insb
addr16
mov
jb
icebp
xchg
mov
arpl
clc
mov
cmpsl
pop
int
ret
xchg
push
rolb
jl
cwtl
pop
adc
lds
sub
inc
stos
insl
mov
mov
in
pop
sub
mov
call
cltd
movsl
jp
in
imul
mov
mov
gs
jno
and
mov
or
jae
data16
jecxz
jp
sub
mov
adc
rcl
shll
push
imul
sbb
pushf
call
mov
dec
cmpsl
and
dec
testl
xchg
mov
stc
adc
roll
out
test
cmpl
adcb
adc
mov
mov
arpl
push
in
movsb
mov
test
mov
xor
mov
lea
in
in
test
into
mov
movsb
and
add
lock
add
movsb
sbb
or
out
jb
mov
in
jns
mov
leave
pop
add
xchg
outsl
test
sti
lods
xchg
sub
fisubl
cltd
sub
or
inc
inc
mov
aad
mov
jecxz
das
xor
mov
je
iret
fcoms
mov
sbb
out
mov
xchg
sbb
out
pushl
inc
jbe
cmpsb
pop
dec
mov
pop
fisttps
push
cmc
ds
popf
lcall
adc
out
push
movsb
xor
rclb
xchg
sub
inc
repz
fwait
shl
int
sub
dec
sub
in
mov
mov
pop
sub
cwtl
jg
push
sti
or
pop
into
jnp
sbb
xorl
mov
and
jo
sarl
jo
jnp
mov
xor
aas
or
lods
out
inc
ja
mov
test
jne
and
lcall
cmp
fwait
xor
mov
push
xor
les
jecxz
enter
inc
cmp
cli
stos
sub
idivl
mov
es
jle
xchg
mov
and
pop
loop
sbb
rol
add
inc
add
cltd
and
test
inc
aad
sub
aaa
sbb
lret
xor
dec
sbb
xor
xor
lahf
int
in
mov
popf
shll
push
jbe
adc
jno
sahf
or
mov
outsl
mov
insb
cmp
repnz
mov
mov
adc
jnp
pop
nop
push
int
cmp
dec
push
cwtl
in
les
hlt
add
ja
ja
loopne
sahf
cmp
jae
dec
sar
js
psrlw
dec
xor
xor
mov
adc
sub
mov
xchg
mov
xchg
pushf
pop
adc
and
lahf
inc
mov
sub
pop
dec
test
mov
icebp
arpl
lea
movsb
pop
mov
rorb
push
out
scas
mov
nop
xchg
add
out
or
clc
jnp
dec
push
daa
or
xor
jecxz
lods
inc
mov
lock
jmp
mov
cld
in
into
popa
ret
cld
fidivl
js
push
std
jmp
and
ss
mov
pop
cmp
ret
sti
shl
or
adc
rclb
mov
jno
mov
mov
repnz
ret
push
cmpsb
pop
xor
into
adc
dec
lock
bnd
xchg
lret
shr
push
out
mov
push
sbb
sbb
arpl
gs
stos
arpl
pop
add
pusha
xlat
sahf
lock
popf
iret
imul
or
es
pushf
inc
mov
ja
filds
aas
sub
mov
dec
mov
jns
scas
enter
push
out
sbb
jp
cltd
out
mov
mov
insl
shll
bound
leave
sbb
mov
pop
inc
movsb
lock
stos
int
pop
cmp
xchg
sbb
hlt
inc
insb
scas
add
lret
mov
add
or
imul
sbb
sbb
rclb
jmp
test
xchg
xor
adc
push
add
mov
jecxz
xchg
xor
xor
mov
sub
mov
data16
dec
and
dec
or
push
icebp
pusha
loop
sub
enter
call
xchg
or
test
xor
or
ljmp
ret
xor
push
sub
or
or
jae
es
mov
inc
repz
and
adc
mov
xchg
out
lret
xor
lret
shlb
or
mov
xchg
cmp
insb
cmc
ja
push
or
pop
jge
outsl
inc
ret
pusha
mov
and
addr16
xchg
xchg
push
push
shll
cmpsb
fs
stc
dec
and
callw
sbb
std
push
test
std
cmp
inc
shll
lods
int
pop
push
rclb
lahf
xchg
fsubs
daa
lcall
mov
xchg
xchg
pop
pusha
cmp
dec
jb
push
xor
push
dec
aad
mov
ja
xchg
mov
movsb
mov
inc
mov
pushf
cs
test
sub
shr
adc
dec
cmpsl
mov
test
popf
add
ja
fstpl
adc
mull
sbb
dec
outsl
mov
movd
ss
xchg
loope
loope
std
inc
stc
xor
sbb
sbb
jnp
cmp
test
jl
dec
jno
pop
inc
xor
dec
movsb
inc
inc
fimull
dec
out
aaa
stos
mov
mov
jecxz
jne
mov
sti
push
test
sbb
pop
loope
lahf
xor
jge
xor
les
dec
pop
sub
dec
pop
shll
rcrl
pop
fnstcw
xlat
out
out
call
sbb
sbb
or
fadds
or
push
call
mov
in
lahf
xchg
in
and
xchg
out
or
xor
or
imul
jg
ljmp
mov
inc
gs
jle
mov
push
cmp
sbb
out
sbb
std
pop
imul
pusha
outsb
jl
sub
cltd
rclb
dec
iret
fists
adc
add
or
adc
rcl
nop
sub
sti
push
dec
jp
dec
and
jmp
cli
add
sahf
icebp
adc
push
mov
loope
sub
mov
scas
sbb
nop
dec
in
ds
push
rcrl
sub
xchg
adc
mov
and
gs
sahf
sub
in
jb
icebp
and
test
pop
jb
jl
mov
aaa
aas
push
jle
cmpsl
sbb
xchg
sub
mov
aaa
out
sbb
lods
adc
push
fs
sub
out
repnz
add
lods
push
inc
mov
aam
adc
mov
jnp
push
popa
push
out
movsl
cmp
mov
sbb
notb
push
mov
xchg
jne
aas
jle
jp
mov
lcall
lret
mov
sub
xchg
cmp
dec
and
mov
push
fsincos
mov
push
jne
sub
jno
or
add
les
jl
push
cmp
push
push
adc
sbb
ret
rorl
jg
jle
mov
jg
cmp
push
fdivrl
fs
fnstenv
andb
les
outsb
inc
add
sahf
cltd
iret
aad
xchg
dec
or
push
add
add
cs
xchg
or
lahf
or
push
sahf
adc
and
out
adcl
xor
cmpsl
dec
pmulhuw
xor
adc
or
inc
negb
lcall
std
mov
mov
mov
pop
dec
push
pushf
adc
sub
pop
or
add
mov
js
ljmp
dec
lods
mov
stos
xor
add
pop
mov
mov
pushf
and
dec
cmpsb
xchg
test
xchg
rorb
stos
pop
stc
fisubrs
das
jo
nop
mov
pushf
cli
pop
inc
mov
or
and
mov
hlt
mov
addr16
xchg
pop
pop
aam
mov
movlps
sbb
imul
mov
fsubrl
rorb
xor
mov
aad
lock
leave
inc
jnp
push
jl
mov
rcrl
dec
mov
xchg
cmp
outsb
pop
cmpsl
shrb
adc
mov
outsb
clc
repnz
cmpl
jg
aam
sbb
fcomp
sub
pop
inc
insb
mov
xor
fisubrl
or
aas
arpl
pop
mov
cs
and
ljmp
es
cli
repz
add
xor
lret
test
xchg
ja
je
xor
sbb
pop
cmpsl
mov
nop
or
pop
inc
jb
mov
jae
and
out
add
pop
scas
movsl
xor
fcmove
jl
addl
dec
out
movsl
test
sbb
mov
cmp
shrl
push
adc
repnz
js
stc
or
lods
sbb
xor
enter
ret
push
cld
add
icebp
repnz
ret
adc
out
cmc
outsb
mov
jmp
push
xchg
or
sub
pop
movsb
mov
lret
inc
into
jle
lcall
dec
call
and
pop
stos
movsl
ds
add
and
pop
xchg
fldl
push
daa
xor
sub
sbb
dec
xor
ljmp
sbb
mov
push
test
notl
inc
adc
push
faddl
or
dec
mov
or
mov
mov
popa
add
test
fnstcw
sub
or
mov
fs
mov
enter
in
shrl
dec
xorw
mov
gs
sarb
xchg
push
or
test
add
xor
push
pop
lea
add
fldt
pushf
filds
dec
mov
aam
mov
cmp
cmpsl
dec
adc
xor
adc
push
les
addr16
xchg
lahf
movsb
shrb
pop
rorl
and
xchg
iret
pushf
ja
push
push
sbb
inc
lcall
mov
sbb
and
mov
sbb
je
cmc
push
pop
movsb
subl
int3
aas
push
sarl
loop
mov
mov
jne
sti
mov
nop
test
push
cli
test
test
or
insb
sbb
inc
popf
mov
adc
jecxz
cs
loopne
mov
mov
dec
test
lods
mov
lret
xor
mov
push
push
push
arpl
mov
jle
jge
xlat
js
ret
out
bts
mov
lods
add
jmp
mov
loop
xchg
sahf
lea
leave
dec
jp
dec
pop
xchg
stos
or
push
mov
fsubl
ret
out
mov
sub
jo
loop
movsl
sti
push
and
mov
pusha
fwait
cmc
test
jbe
pop
and
aaa
push
imul
cs
cmp
sub
nop
mov
bound
daa
push
lea
into
and
sbbl
jecxz
imul
repnz
push
xchg
inc
jg
mov
movq
sub
push
inc
notb
mov
clc
push
pusha
in
xchg
mov
jo
pop
mov
and
or
mov
sbb
pop
orl
xchg
lods
push
popf
jp
xchg
pop
jae
sarb
mov
js
fildl
sub
out
loopne
dec
dec
je
xchg
sub
arpl
stc
cmp
call
and
loopne
int
inc
sbb
mov
push
xorb
arpl
sub
orb
cs
ja
cmp
or
stc
clc
jb
xor
or
lock
call
add
bound
sbb
sbb
test
mov
mov
ret
mov
daa
adc
mov
push
pop
fcmovnb
pop
push
pop
popa
inc
out
push
mov
inc
jl
adc
mov
dec
shll
in
mov
fistps
xchg
ja
sar
int
add
je
inc
outsl
dec
idivl
ljmp
push
push
inc
jbe
gs
cmc
or
mov
sbb
cmp
and
rol
insl
adc
xor
push
sub
mov
ret
sub
and
cmp
jle
mov
add
mov
ljmp
loopne
sub
sbb
scas
fidivl
shrb
pop
mov
dec
lret
das
cmp
cmp
sub
movsl
pop
mov
and
test
cmp
repz
push
adc
jbe
sub
insl
ret
jb
xchg
mov
lcall
or
xchg
xchg
shll
icebp
ss
js
dec
popa
pop
mov
clc
shll
shl
push
int
inc
xchg
push
lret
mov
clc
pusha
adc
inc
jnp
push
aam
scas
scas
push
sbb
mov
out
pop
jp
push
vpaddw
jno
into
push
dec
sub
and
incl
lods
sbb
jp
sub
fmuls
cmp
mov
push
inc
cltd
mov
sub
int3
cmp
pop
movsl
jae
add
push
xchg
push
outsl
xor
mov
pop
je
xchg
cmpsl
test
ljmp
test
das
or
femms
xor
add
sub
mov
cmp
mov
in
ds
cld
repz
lahf
dec
inc
lret
lock
sub
fstpt
cmpsb
sub
lods
xor
sub
int3
fisubrs
mov
incb
fldl2t
pusha
mov
inc
cmp
ret
movsl
mov
out
adc
xchg
sub
xchg
mov
gs
xorb
xor
movsl
pop
dec
mov
fs
pop
xchg
test
lock
jb
lock
jecxz
sbb
scas
sbb
icebp
mov
pop
mov
jo
fdivrl
cs
in
sbb
addr16
jecxz
mov
es
mov
pop
push
js
or
sbbl
mov
xchg
aaa
inc
cmpsl
aas
pop
mov
shrl
adc
fiaddl
aaa
fmull
adc
add
test
fwait
hlt
sbb
push
xchg
dec
inc
add
out
cmp
dec
lds
push
outsl
jle
fldcw
loope
push
fcomp
jae
cmpsb
push
popf
ficomps
and
xchg
push
rcrl
dec
pushf
push
adc
and
fadd
dec
jmp
xchg
shr
sbb
js
lret
jnp
test
push
inc
mov
movsb
pushf
icebp
test
jl
xchg
fsts
sarb
mov
jbe
cmp
mov
fdivrs
cmp
aas
sbb
stos
int
sbb
popa
fnstcw
jns
and
addr16
push
push
rcrb
dec
dec
idiv
xchg
jp
xlat
sub
inc
enter
cmp
and
stos
rorl
push
arpl
cmp
mov
int3
fnstenv
lret
adc
mov
push
pop
inc
mov
stos
mov
dec
scas
iret
shll
add
jge
add
sub
das
pop
jbe
stos
inc
mov
push
lret
push
rorb
call
cmc
fsub
or
iret
push
adc
mov
out
add
aam
bound
dec
push
div
mov
sub
loop
add
jns
clc
sub
lahf
js
repz
mov
out
popa
imul
lcall
test
jo
fistl
lret
adc
mov
pop
fwait
ds
add
js
adc
adc
sbb
jl
mov
daa
leave
fs
cli
xchg
and
jae
movl
loop
mov
mov
or
pushl
xlat
pop
rcl
fwait
les
pop
cld
lret
nop
dec
outsl
in
testb
or
xchg
push
orl
mov
int
pop
stos
and
lds
adc
int3
pop
add
cli
aam
xchg
dec
cld
addb
out
cmp
mov
fdivl
mov
xchg
mov
pop
xchg
pop
jne
int
jb
pop
notb
mov
lock
leave
jg
lock
jnp
lahf
push
aam
xor
xlat
jp
loope
mov
or
out
shlb
lods
sbb
scas
cmp
pop
mov
xor
push
testb
push
fdivr
imul
fs
fimull
icebp
dec
jge
fsubs
xor
decb
pop
jnp
xchg
xor
jmp
cli
jge
mov
sub
sbb
push
int
adc
scas
sbb
loop
adc
xor
gs
add
xor
cmp
jl
ret
mov
imul
push
mov
adc
ja
jg
cli
aad
push
pop
in
add
je
insl
loop
mov
or
adcb
add
mov
sbb
and
jge
mov
dec
and
xor
sbb
imul
arpl
dec
je
call
xrelease
pop
add
push
cmpsb
insb
push
jo
mov
xchg
es
inc
aaa
cmp
xor
mov
mov
insl
fisubrl
test
insl
aaa
xor
adc
xchg
pop
cmpsl
adc
inc
test
test
mov
clc
sbb
jge
jmp
add
mov
or
dec
pop
movsb
push
and
cld
sub
ds
dec
out
cmpsb
mov
std
filds
repnz
lahf
sbb
and
repz
movsl
sbb
pop
int
addr16
push
fs
jg
lods
lahf
scas
and
or
out
ret
lret
addr16
dec
jge
and
jo
push
cmp
dec
mov
pushl
xchg
mov
push
pop
pop
xor
lea
mov
add
mov
xchg
mov
or
mov
dec
subl
xchg
mov
sahf
cltd
stc
jg
sahf
sub
lock
aaa
shr
negl
pop
or
push
pop
fwait
pop
adc
out
movsb
popa
cmp
test
and
lcall
cwtl
mov
jbe
ljmp
push
jg
cli
and
std
icebp
cli
xchg
loope
popl
fildll
rorl
inc
ret
mov
insl
cmp
mov
jp
push
das
pop
pop
call
fs
sub
pop
shrl
adc
and
xlat
or
mov
or
inc
cmpsl
sbb
adcb
icebp
xor
sub
int
insl
stos
pop
sbb
rol
sbb
dec
cmpsl
cmp
inc
sub
stc
xor
das
ljmp
call
scas
adc
fcomps
gs
loopne
pop
add
cwtl
ss
adc
lret
xchg
popa
cmp
addr16
insl
out
hlt
push
int
lahf
adc
xchg
push
je
push
add
aam
fistpl
lea
dec
in
out
popf
jge
dec
shrl
mov
dec
cmc
stos
push
sbb
pop
fstps
inc
mov
push
test
sbb
or
mov
cmp
fistpll
jno
outsb
dec
lds
pop
mov
in
pop
ljmp
daa
xchg
ret
ja,pn
jmp
sbb
test
scas
cmpsl
mov
xor
cld
jbe
mov
xor
pusha
cmp
mov
dec
pop
adc
stos
cmp
aas
test
cmc
in
outsl
mov
or
repnz
nop
adc
inc
mov
stos
xor
mov
lea
std
adc
das
test
xchg
adc
mov
in
mov
test
mov
stc
test
adc
cmp
sbb
xchg
adc
fidivs
rclb
js
out
test
test
pop
sub
dec
adc
idivb
popa
sub
dec
jns
cmp
lret
sub
jecxz
mov
or
push
dec
dec
mov
pop
lock
jge
ret
rorb
xor
jg
mov
and
jle
leave
xor
das
xchg
xor
data16
xchg
sahf
push
xor
xchg
xor
movsb
pop
test
cmpb
ljmp
cli
push
push
sub
inc
sar
xor
imul
std
push
pop
popf
repnz
mov
xchg
jo
inc
xor
ja
or
out
into
movsb
push
jo
xchg
adc
sbb
dec
xor
inc
jne
leave
cmp
jge
nop
cmpsb
jae
into
mov
aam
xchg
ja
mov
mov
inc
imul
fdivs
stos
mov
inc
leave
call
lods
xor
and
stc
int
sbb
jno
gs
repnz
ss
push
jecxz
hlt
lret
xchg
rcrb
jp
pop
xchg
fldcw
push
and
imul
lahf
mov
xchg
faddl
mov
popf
in
xor
std
clc
push
push
inc
jg
outsl
cmp
pop
pusha
fisttps
into
enter
loop
mov
sub
int3
inc
mov
pop
jmp
sbb
mov
mov
sbb
shll
inc
lcall
pushf
mov
fstpt
sbb
fldcw
fcmovbe
outsb
pop
xor
imul
jg
mov
popa
ret
jno
jmp
fsts
and
mov
test
cli
jle
shl
sbb
push
pop
dec
xor
cmp
movsl
xchg
xor
mov
lret
lret
mov
popa
rclb
sbb
dec
jl
movsl
xor
shll
jecxz
in
cmp
sbb
jo
hlt
das
jnp
mov
xchg
cmp
ja
or
ds
mov
mov
mov
push
std
testl
filds
mov
mov
rcrb
insb
clc
mov
pusha
rorb
xor
adc
dec
mov
xchg
sub
xor
cmp
dec
pop
push
inc
loop
sbb
sub
aas
hlt
cli
jl
or
test
xor
mov
push
sub
jp
shlb
lret
test
dec
sub
and
dec
xchg
test
cmp
subb
and
test
push
cwtl
and
lock
adc
push
push
sub
sahf
jg
arpl
inc
adc
scas
lds
or
mov
and
sub
aam
fwait
push
xchg
in
pop
sbb
jg
adc
ss
push
xor
out
aaa
pop
xor
sbb
dec
testb
sbb
insb
mov
aas
pop
les
push
fsubl
push
jnp
ficompl
xor
push
xor
loopne
loop
cmp
mov
or
das
fwait
lret
lods
adc
call
ss
jnp
or
fwait
stos
xor
jmp
in
enter
cs
xor
sti
stc
push
pop
mov
movsb
adc
adc
punpckhwd
xchg
lds
push
pop
or
mov
roll
outsb
cmpsl
aad
hlt
pusha
je
outsl
xor
lret
popa
push
daa
aaa
mov
sbb
pop
ret
imul
setb
sub
es
push
imul
inc
mov
mov
mov
ja
sti
movzwl
cmp
loopne
push
mov
mov
jnp
xor
hlt
cmc
jb
ja
lcall
xchg
mov
sub
stos
xor
adc
outsb
loope
push
xchg
sbb
arpl
push
fs
fiadds
shlb
adc
adc
pop
mov
adc
pop
xor
xor
ds
mov
add
mov
sbbb
push
movsl
or
adc
cmp
push
fs
push
loop
push
outsb
test
rcl
sbb
lock
inc
inc
sub
icebp
dec
in
push
sbb
inc
mov
lods
xchg
mov
fadd
mov
cld
call
iret
rol
pop
int
shl
push
sub
jbe
push
adc
cli
mov
pop
inc
aam
out
jnp
js
pop
mov
mov
and
mov
lods
jo
mov
pop
or
in
inc
stos
pop
push
insl
in
loop
test
stos
cmp
mov
jmp
out
cmp
push
push
sti
jmp
inc
jo
adc
fstps
adc
and
imul
mov
cli
push
aad
and
add
gs
sub
jp
das
jp
xchg
mov
ficoml
cs
inc
pop
jmp
adc
fcmove
dec
ret
hlt
xchg
xchg
sti
mov
add
movsl
xchg
pop
adc
inc
std
stos
dec
mov
or
xchg
aaa
popa
dec
aad
outsb
mov
xchg
fs
xchg
gs
xchg
mov
ds
pop
sbb
cmc
sub
cli
mov
test
repz
clc
push
sub
popf
fs
and
mov
out
stos
je
rcr
lods
jmp
adc
inc
push
flds
icebp
lret
sub
mov
pop
mov
fisttps
je
loope
xchg
fnstenv
sub
lret
dec
out
les
xlat
jnp
xchg
cmpl
rep
es
stc
int
cwtl
push
pop
xchg
push
cmp
and
addl
xchg
xor
or
bound
ret
stos
sub
mov
dec
subl
neg
or
cmp
mov
xor
jne
ja
mov
cltd
fwait
and
repz
mov
adc
sbb
fwait
rcrb
std
in
sub
add
test
clc
fdivrs
pop
sbb
addr16
lods
imul
std
leave
mov
or
pop
add
outsl
rcrb
pop
push
scas
dec
lock
jl
inc
in
sbb
mov
loope
movsl
in
fidivl
bsf
xor
arpl
fadd
mov
sarl
loop
push
mov
push
xor
pushf
sbb
inc
movsl
mov
inc
mov
mov
add
adc
jge
add
cmp
pop
sbb
adc
scas
push
push
ja
gs
mov
lret
cmp
fildll
test
jl
sarl
mov
or
or
add
mov
add
fidivrl
insl
fwait
test
cltd
fcmove
pop
cmp
in
push
nop
push
mov
fimuls
mov
daa
xchg
int
lret
daa
and
jle
inc
push
mov
xlat
mov
or
insl
out
mov
push
cmpb
out
test
xor
daa
sbb
push
add
jae
sub
jle
into
cmp
adc
adc
sbb
jo
jmp
rep
push
inc
enter
je
pop
xchg
sbbb
xchg
cmpl
subb
lods
das
lea
pop
orl
and
add
or
std
pmulhuw
popf
test
ljmp
mov
shll
or
jb
ret
pop
sub
cli
and
xor
jmp
enter
out
inc
xor
pushf
icebp
mov
sbbl
roll
sub
add
xchg
cld
data16
in
jnp
lods
in
insb
retw
dec
adc
jo
bound
outsb
jo
xchg
mov
push
loope
sub
es
push
aad
sbb
mov
jg
sarb
push
hlt
lods
mov
mov
inc
imul
mov
and
gs
lock
jno
inc
mov
flds
jae
loope
push
ljmp
xchg
movsb
push
sarl
add
andb
stos
popf
inc
sub
movsl
pop
and
and
xchg
pop
jnp
adc
dec
mov
les
sti
or
jl
mov
repnz
add
lods
push
mov
dec
inc
jmp
pop
pop
into
mov
jae
movsb
jns
js
data16
or
fsubrs
jl
pop
jne
jno
mov
outsl
daa
mov
xchg
nop
data16
jb
pop
jg
sbb
out
pop
pop
in
push
adc
loope
cmc
cld
push
icebp
addr16
std
ss
ret
adc
lahf
lock
dec
rcrl
push
lea
sbb
nop
and
adc
fnstsw
push
cmovp
mov
push
cmp
sbb
push
cwtl
dec
out
aaa
clc
sub
imul
mov
mov
adc
popa
dec
lret
dec
mov
mov
rol
insl
clc
std
data16
mov
sbb
jnp
out
mov
xchg
gs
rol
pushf
cmp
xor
adc
xor
jge
leave
lods
in
les
pop
lcall
pop
decl
inc
adc
loopne
jae
dec
ficoml
je
xor
dec
int
xor
fcmovbe
dec
bound
jne
mov
mov
sti
mov
xor
mov
sbb
mov
addl
shl
cmp
push
cmp
in
jb
jle
shll
cmp
xor
xchg
push
or
int
sub
lds
jbe
push
pop
jae
cld
xchg
test
aaa
fsub
lcall
bound
rol
aaa
addr16
push
adc
nop
popa
or
jbe
pop
jbe
icebp
xor
xchg
inc
jl
cmp
pop
out
xchg
mov
fsubl
into
sbb
mov
jne
testl
idivb
push
sub
jae
pop
dec
mov
fwait
inc
push
mov
xchg
sbb
js
sub
in
dec
ljmp
xor
sbb
inc
test
pop
pushf
fnstcw
icebp
sbb
push
mov
adc
sahf
nop
outsl
shll
cmp
addr16
sbb
std
sbb
xchg
xor
xchg
sahf
loop
jmp
lds
sub
push
dec
sti
mov
cld
sub
movl
lcall
xchg
loop
push
test
repz
xchg
loop
xchg
cwtl
jge
sbb
rcll
enter
sbb
cmp
ret
into
movsb
shr
add
jo
and
mov
jge
lods
rclb
lret
clc
jbe
out
push
pop
cmpsb
sbb
ficoml
into
popf
mov
fisubrl
xor
out
sarb
inc
pop
gs
ljmp
scas
sarb
into
ficoms
movl
cmp
xchg
loopne
mov
daa
es
or
ret
cmp
push
xchg
inc
imul
ljmp
fcompl
pop
xchg
push
js
lds
jbe
push
dec
or
stos
imul
gs
xorb
js
cmp
mov
iret
xlat
aam
das
scas
xor
je
mov
pop
jne
xchg
push
movsb
add
stc
sbb
roll
dec
push
mov
push
mov
sbb
dec
push
js
and
in
sbb
xchg
mov
dec
mov
aam
pop
cmp
jge
push
incb
cwtl
inc
xchg
in
xchg
icebp
jp
mov
aad
cmpb
aaa
mov
xchg
jecxz
cwtl
out
pop
mov
or
movsb
enter
add
jnp
mov
call
test
sti
or
cmp
out
push
pop
add
pop
mov
mov
shl
loope
rolb
mov
in
add
mov
mov
sti
cmp
or
push
outsl
and
xchg
out
ja
dec
jns
dec
dec
sbb
xchg
ret
lock
loop
hlt
push
mov
ret
inc
xchg
add
sbb
popl
mov
in
orl
dec
testb
aad
lods
jb
xorb
lahf
sub
cmp
inc
add
test
sbb
and
mov
jmp
xchg
gs
xor
aam
enter
inc
clc
out
xor
push
outsb
jne
cmp
std
ja
imul
pop
stc
fdivrs
or
dec
xchg
pop
mov
les
jl
push
daa
xor
sbb
adc
mov
pop
cmpb
mov
pop
jbe
add
in
outsb
popf
int3
sbb
ss
sbb
fsubp
add
push
repz
sbb
gs
outsb
sbb
adc
fmull
adc
xchg
rcll
ja
adc
mov
mov
cmp
or
and
mov
mov
in
mov
pop
sbb
sub
inc
push
pop
jbe
shrb
aam
fcmovb
dec
pop
adc
add
insl
and
pusha
jo
test
shl
xchg
sbb
fwait
adc
sbb
popa
jmp
add
xor
sti
cmp
adc
imul
mov
jno
mov
bound
push
adc
push
clc
dec
hlt
mov
cld
imul
shll
lret
pop
scas
cltd
daa
fsubp
retw
jg
xchg
sub
aaa
cmp
jmp
frstor
mov
rcrl
mov
cmpb
xchg
ret
mov
pop
scas
out
jl
das
pop
or
bound
lock
enter
dec
mov
mov
cmp
out
scas
jb
dec
pusha
out
sub
push
mov
mov
das
mov
fisubl
push
jo
std
mov
je
mov
cmp
mov
xchg
jno
out
out
push
xor
sbb
jecxz
mov
sarl
repz
sub
cmp
fisttpl
jne
jno
mov
lahf
les
movsb
push
xlat
jno
jge
popf
xchg
lret
cmp
test
test
pop
test
push
cmp
push
lds
mov
seta
fwait
xchg
mov
inc
mov
insl
inc
scas
sub
xor
push
xchg
mov
imulb
lret
push
jne
inc
les
sbb
sti
mov
pop
pop
xlat
adc
xchg
aad
clc
jnp
dec
inc
inc
pop
sbb
sub
jo
ret
xor
cmp
cmp
or
dec
dec
mov
scas
call
in
ja
adc
pushf
add
push
dec
fcmovnbe
orb
pop
sbb
incl
and
push
push
sub
mul
sahf
xchg
jmp
cmpsb
leave
pop
call
sbb
fimuls
cmc
hlt
roll
and
enter
or
cmpsl
mov
pushf
cmpsb
jne
xchg
xor
scas
outsb
test
cmp
in
jecxz
out
jmp
inc
fs
adc
push
xor
ret
dec
sarb
mov
rclb
aad
xor
out
cmp
clc
jmp
xchg
and
mov
imul
mov
xor
add
daa
fs
pusha
and
out
cmpsl
lods
adc
fildll
stc
imul
fdivrs
dec
dec
in
adc
cltd
or
and
cmp
sbb
and
daa
or
push
or
sub
int
in
add
ret
and
jnp
push
icebp
adc
xchg
arpl
movups
sbb
xlat
imulb
sahf
pusha
loopne
push
cmp
orb
jle
repz
pop
and
jg
enter
xor
roll
lcall
and
outsb
cwtl
push
test
mov
xor
ficomps
ja
mov
push
sbb
add
in
or
pop
fidivrl
and
jmp
mov
xchg
js
and
cmc
pop
and
mov
cmp
rorl
push
insb
pop
jb
leave
xor
sbb
fdivs
cld
cmc
imull
pop
je
popa
cs
nop
mov
test
test
mov
stc
sahf
dec
lods
out
std
sti
iret
pop
jl
jecxz
push
mov
shrb
dec
insl
rolb
int3
sarl
mov
xor
mov
inc
add
cld
add
sbb
rorb
in
movsl
jle
arpl
cs
xor
and
jmp
dec
iret
cld
scas
outsb
mov
lcall
xchg
push
sub
js
lret
dec
or
iret
dec
dec
xchg
enter
aas
xchg
imul
jecxz
cwtl
mov
daa
mov
inc
xor
and
mov
sub
and
adc
xchg
ffreep
andb
test
mov
shlb
test
lcall
in
jcxz
dec
js
pop
xor
mov
xor
pop
cmp
insl
mov
sub
mov
das
inc
cmp
fdiv
xchg
dec
cs
jno
sub
lods
add
cmp
ret
and
inc
daa
push
popa
int3
hlt
xchg
fnstsw
mov
xchg
dec
add
int3
push
stos
xor
jle
mov
repz
jo
arpl
jmp
mov
sbb
out
mov
mov
jbe
inc
aaa
movsb
jno
xchg
js
cmp
ljmp
sub
loopne
and
jne
data16
insb
or
jnp
arpl
ret
aam
cmp
pop
dec
nop
test
mov
subps
out
rorl
xlat
and
lcall
pusha
pshufw
into
test
adc
sbb
inc
pop
test
adc
repnz
and
daa
sbb
lock
inc
fsubl
push
out
repz
xor
sub
dec
ret
punpckldq
lahf
sub
mov
lcall
cmp
shlb
fyl2x
fs
mov
or
add
sbb
pop
pushl
sbb
or
in
push
dec
lahf
push
sub
xor
jnp
jb
add
push
std
push
dec
rorb
jp
or
lcall
pop
or
mov
xor
ficompl
data16
out
mulb
jo
adc
out
idivl
pop
pusha
fxtract
and
scas
loop
pop
inc
imul
sbb
inc
sbb
xlat
repnz
mov
cld
xlat
cmpsl
cli
xchg
out
add
into
ja
clc
or
ljmp
into
xchg
test
lret
lahf
test
gs
lock
mov
jno
dec
inc
ficompl
dec
push
xor
dec
inc
in
jae
or
pop
adc
out
push
shrl
mov
test
xor
mov
es
out
ds
imul
cmp
aaa
adc
pop
std
dec
jge
movsl
jecxz
mov
arpl
subl
in
sbb
jno
lret
cltd
rolb
push
inc
scas
fistl
dec
push
mov
mov
mov
dec
ja
mov
fimuls
mov
sbb
shlb
cli
xlat
loope
cmp
pop
push
jae
iret
les
clc
add
nop
wrmsr
mov
popl
dec
push
shll
push
mov
pushf
icebp
xlat
sub
mov
adc
popa
xchg
mov
cmp
xor
mov
jp
divb
lock
subl
jb
push
fsubs
xchg
repz
lcall
add
addb
push
pushf
mov
mov
dec
pop
fsubl
xchg
inc
daa
pop
mov
repz
icebp
je
bound
adc
jle
add
mov
cmp
dec
aaa
jp
inc
push
add
mov
jb
es
or
sbb
out
roll
add
jo
xchg
ljmp
push
sub
dec
pop
mov
lahf
movsb
cwtl
xor
test
orl
push
pop
fildll
movsl
jg
push
icebp
movsb
fildl
shr
jo
fimull
push
jg
cwtl
push
mov
les
fisubs
xchg
mov
dec
loope
xchg
xchg
cmpsl
jns
ljmp
inc
mov
andl
and
jnp
fisubrl
mov
jmp
pushf
insl
mov
aad
ret
insb
or
popa
mov
jge
loope
dec
psubb
fistpl
ds
and
jmp
adc
inc
jl
aam
test
pop
test
sarl
das
push
push
in
or
dec
dec
test
lods
loope
int
and
sub
in
jge
mov
cmpsl
outsl
out
aad
inc
cmp
dec
in
xor
shll
testl
xchg
andb
shrb
inc
cwtl
sub
mov
jge
daa
and
jl
std
call
arpl
inc
push
movsb
psubd
hlt
bound
mov
xchg
fstl
cmp
sahf
mov
test
push
lret
aaa
push
or
fs
roll
fisubs
or
mov
add
inc
orl
or
inc
mov
test
cld
add
inc
mov
pop
in
mov
pop
adc
cmp
enter
push
inc
mov
pop
dec
lea
mov
imul
mov
adc
pop
fcompl
outsl
push
and
xchg
sub
adc
mov
push
mov
pop
sub
pop
jl
sti
dec
inc
or
dec
sub
enter
divl
xchg
mov
xor
xchg
xchg
xchg
or
xor
imul
ret
pop
push
mov
cli
out
inc
add
pop
push
inc
mov
rcrb
and
out
fwait
in
add
aam
jecxz
mov
test
fs
cli
loop
insb
call
mov
push
sar
cmp
insl
xor
adc
lods
call
into
sbb
in
lret
popa
pusha
push
mov
adcl
pushf
popa
dec
sbb
cmp
stos
inc
repnz
sub
fwait
insb
adc
jp
pop
xchg
mov
int3
iret
push
shll
loopne
and
inc
das
pop
mov
lods
lcall
fwait
inc
fstl
cmpsb
ja
or
sub
inc
mov
pushf
jg
out
pop
clc
mov
jo
xchg
loop
cmp
bnd
and
add
aaa
bound
shll
insb
addb
sbb
out
out
jmp
div
fcmovnb
dec
popf
adc
lea
jge
shr
cmpsb
test
mov
xor
lock
decb
dec
mov
sub
fisubrl
mov
fists
imul
cmc
jae
jne
test
sub
lret
inc
rorb
xor
out
or
psubsw
cli
pop
cltd
stos
mov
mov
jp
std
fiadds
rcrb
inc
push
xchg
xchg
fadd
ja
insb
cmp
out
inc
mov
loope
aaa
jae
outsb
jmp
es
sbb
pop
mov
jnp
pop
aad
mov
mov
mov
imul
mov
insb
mov
lret
mov
lahf
nop
add
sti
jmp
jge
sub
and
xchg
mov
jl
pop
add
iret
pop
xchg
dec
lahf
dec
cmpsl
mov
repz
mov
mov
je
push
scas
popa
xor
add
adc
pop
jmp
mov
inc
ucomiss
movsb
xor
push
cmp
arpl
xchg
xor
sub
mov
or
add
pop
jp
xor
and
lods
into
push
sbb
mov
mov
in
repnz
sbb
outsl
loope
fimuls
mov
mov
inc
mov
jne
adcl
jns
aaa
jbe
sti
xor
jae
lods
and
aaa
jecxz
int3
fiaddl
inc
and
jae
jb
pop
aam
aad
lea
xchg
popa
ret
jb
jge
rol
jle
push
mov
xor
jecxz
aas
xchg
cmp
jmp
sbb
call
pop
scas
dec
loopne
jae
je
lock
imull
outsb
adc
inc
mov
xchg
out
jnp
push
sbb
or
adc
mov
mov
aam
sahf
iret
call
and
sub
and
xor
adc
clc
cli
rcrb
scas
gs
cltd
clc
or
lret
test
mov
pushf
test
dec
pop
jmp
and
jle
jg
ds
mov
in
rolb
fadd
inc
in
or
jne
lea
mov
loopne
add
inc
lahf
rolb
cmp
jmp
adc
cmc
dec
jno
pushf
jg
ds
push
fstp
sub
mov
sub
andl
cmpsb
aaa
mov
pop
jno
aam
jnp
pop
data16
repnz
js
stos
aaa
inc
add
shlb
inc
addr16
bound
jb
cmp
pop
xchg
xchg
xor
or
cmp
mov
lods
adc
int
xor
dec
mov
push
cmp
jl
rcrl
jns
push
xor
xorb
mov
sub
jo
repnz
test
mov
add
lds
add
xor
sub
bound
outsl
pop
bound
pop
pop
xor
stc
and
cmpsl
pop
pop
sbb
mov
dec
jbe
mov
cmpsl
inc
fstpt
repnz
stos
cmp
dec
ljmp
aad
mov
xorl
movsl
jge
stos
pop
shlb
and
cwtl
pushl
sub
xor
dec
push
nop
mov
ret
lea
mov
cmpsb
cmp
je
sahf
adc
or
sub
rcrb
lods
std
ljmp
pushf
jnp
sbbb
popa
stos
dec
push
add
dec
and
loope
xor
popf
hlt
jg
fists
jge
cmp
shrb
shl
cld
xchg
clc
dec
xchg
int3
add
int3
mov
icebp
push
push
or
aad
lahf
clc
cltd
cld
pop
lock
fistl
push
sarl
jecxz
mov
sbb
jne
test
fstp
stc
add
mov
call
mov
xchg
daa
scas
ret
push
xor
add
mov
cmp
das
cli
andl
mov
cmc
mov
adc
cwtl
mov
fmulp
push
adc
xor
dec
daa
cli
add
xchg
jecxz
sub
jbe
popf
sub
sahf
add
sbb
jnp
fsubl
outsl
imul
push
lock
movsl
nop
js
sub
ret
lahf
add
bound
pop
ret
mov
pop
loopne
cltd
jbe
cmp
xor
inc
mov
jl
jns
cmp
inc
jle
enter
pop
add
inc
ljmp
cli
fwait
xchg
mov
mov
or
pushf
sub
jp
addl
inc
add
imul
mov
and
jmp
or
push
mov
mov
pusha
mov
or
sub
pop
pop
das
jnp
xor
in
adc
pop
out
mov
dec
and
sub
dec
mov
add
push
lret
pop
inc
loop
orl
std
data16
cmp
fcomps
cmp
xor
fstpl
push
sbb
out
mov
push
popa
cmp
je
xor
adc
movsb
push
xchg
sbb
xchg
xchg
add
push
mov
mov
ljmp
mov
imul
push
lcall
cli
or
test
out
les
sbb
fwait
jle
push
lret
add
mov
xorb
xchg
jo
addr16
jge
in
push
xor
xchg
icebp
sbb
cmc
lea
sub
notb
mov
push
rcll
mov
mov
jle
sub
pop
inc
mov
xor
mov
cs
pop
xchg
arpl
hlt
sbb
jno
jg
mov
jns
std
or
mov
sahf
adc
ror
icebp
pop
push
dec
leave
sub
mov
clc
and
cmp
xchg
cli
mov
add
dec
pop
or
sub
jle
mov
jmp
fcmovnb
jo
xor
icebp
out
mov
aad
sti
xor
cmp
jns
and
outsl
out
mov
repnz
jmp
movsb
iret
pop
sub
jbe
mov
xor
in
pop
mov
mov
pop
jo
mov
push
or
dec
into
and
ror
loop
lret
stos
sbb
sbb
add
push
in
push
mov
cmp
clc
jle
xchg
movsb
push
fstps
add
stos
xor
ret
and
or
sbb
out
repnz
jmp
out
scas
pushw
mov
sbb
iret
fwait
sbb
mov
mov
jne
add
test
cli
or
xor
xchg
sbb
rcl
lds
xchg
cmp
mov
rclb
cmc
sbb
adc
cmp
std
arpl
jge
fisttpll
pusha
add
pop
pop
imul
aaa
mov
mov
fsubrs
sbb
xchg
cs
sub
jp
add
test
les
sub
in
sti
fdivrp
inc
in
data16
jne
push
das
cmp
aam
lea
or
pop
adc
or
and
mov
sub
loope
test
ljmp
adc
mov
testl
jno
stos
add
cmc
fidivs
test
testb
jmp
mov
push
repnz
ja
out
cmp
arpl
enter
push
mov
inc
xor
cmp
test
or
xchg
pop
mov
push
lock
jnp
sbb
aas
mov
sbb
sbb
push
push
loope
aas
cld
icebp
cmpsb
lea
fistpll
ss
jne
pop
dec
sub
mov
mov
dec
jae
call
inc
push
mov
in
pop
lret
js
lcall
clc
mov
add
dec
inc
test
pop
jno
mov
fadd
pushf
repnz
iret
xor
jns
jg
jno
pop
push
nop
icebp
cmp
sti
cmp
mov
push
pop
inc
scas
inc
or
lahf
or
call
xchg
adc
inc
mov
andl
and
aam
insb
inc
sbb
dec
push
push
lock
inc
push
rolb
addl
lret
dec
pop
repnz
lcall
inc
ds
dec
inc
push
pop
dec
dec
sahf
pop
out
sarl
inc
cmp
pop
pusha
or
jne
mov
cmp
cs
sbb
je
lods
inc
sub
push
adc
sub
add
out
sbb
fs
daa
dec
push
add
data16
and
jge
aaa
cmp
add
loope
push
ja
dec
or
fidivs
jnp
xor
sbb
lahf
cmp
adc
mov
add
mov
das
aas
and
in
sub
sti
mov
jne
inc
arpl
sub
mov
jnp
test
cmp
cli
lock
int3
add
addr16
mov
pusha
xchg
fildll
and
scas
mov
enter
call
mov
xor
data16
ja
mov
das
adc
fimuls
sbb
aad
sub
gs
pop
sub
mov
fbstp
leave
xor
std
jno
enter
movsl
dec
sbb
pop
xchg
aaa
es
fldl
repz
shrb
ljmp
and
hlt
mov
mov
loope
fistps
out
scas
movb
jne
mov
jb
orb
jle
cmp
xchg
jae
arpl
imul
clc
pop
inc
push
aam
adc
les
xchg
pop
inc
js
clc
or
and
pushf
movsl
fs
shrl
bound
jl
rcrb
dec
inc
fcmovb
jle
pop
in
adc
fcmovu
repz
jg
loope
jb
xchg
add
dec
cltd
adc
call
or
cmpsl
mov
dec
je
les
cli
scas
jnp
adc
mov
mov
aas
aam
inc
push
xchg
or
fs
pop
fldcw
pop
xor
cmp
cmp
xchg
fsubrl
daa
pop
test
cmp
mov
int3
aam
mov
fwait
movsl
xor
aas
repnz
lock
adc
inc
lahf
xor
mov
jl
leave
lods
xchg
jbe
sahf
add
or
adc
in
aad
xchg
dec
or
mov
pusha
dec
mov
loopne
pop
clc
imul
inc
fstps
mov
fcomi
out
push
sbb
dec
xchg
and
dec
xlat
jp
sti
outsl
movsb
cmp
inc
sahf
out
pop
or
xchg
rcll
sahf
popa
mov
cli
mov
xchg
ja
div
ret
xchg
mov
testb
sbb
push
fsub
xchg
cmp
xor
mov
cmp
ret
dec
pop
div
adc
insb
xor
pop
mov
sub
add
das
movsb
cli
cld
xor
jo
ljmp
loope
andb
and
mov
push
dec
cs
imul
sub
mov
pop
outsb
dec
cmpsb
bound
cmp
das
inc
ror
push
or
add
enter
jne
lret
inc
imul
xor
adc
fisttpl
and
addr16
xlat
lahf
pusha
push
sbb
pop
xchg
jp
and
movsl
inc
inc
imul
setne
sbb
push
je
cmp
mov
outsb
insw
inc
sub
or
repz
xchg
je
test
lret
pop
inc
rcl
inc
pop
mov
and
loop
sub
xchg
rolb
cmp
cwtl
push
roll
xor
sbb
inc
add
jae
sbb
daa
push
mov
inc
outsb
in
lock
imul
in
jo
or
add
mov
sbb
push
aam
push
fdivs
jne
cld
fs
ja
mov
pop
inc
insl
cmp
lock
dec
push
mov
adc
in
aaa
sub
insl
cld
add
aas
in
lods
and
or
push
mov
mov
int
jne
lea
dec
cwtl
hlt
cmp
and
pushf
pop
mov
mov
mov
fcomip
in
icebp
jecxz
dec
pusha
sub
in
shl
out
add
into
xor
insl
fisubrl
push
stos
push
add
adc
adc
test
lcall
lds
pusha
shrb
push
aam
arpl
xor
imul
mov
xor
pop
in
cltd
aaa
mov
xor
jns
and
movsb
ljmp
and
mov
cmpsl
sub
clc
jb
cmp
inc
and
cmp
addr16
pop
sahf
aad
dec
fcmovbe
lods
push
or
jp
ret
jne
add
inc
sub
imul
orl
xchg
and
add
loope
jno
dec
xor
and
xchg
sbb
and
mov
pop
stos
cmp
xchg
mov
js
xor
sub
into
sbb
shl
mov
mov
andl
stos
push
das
add
cmc
sbb
add
je
ljmp
xor
push
mov
test
mov
push
jne
fwait
sti
xchg
pop
pop
xlat
adc
rep
inc
xor
mov
mov
pop
xchg
jno
xor
cmp
sub
xchg
sub
adc
mov
in
hlt
fwait
bswap
xor
inc
shlb
lods
mov
dec
xor
adc
lahf
cld
not
loop
jae
ud1
jle
lods
pop
int
push
ss
insb
imul
out
movsl
fsubs
movsb
fisttpl
hlt
cmp
add
mov
loope
fdivs
test
mov
push
not
iret
sbbl
fstenv
sub
sti
loop
pop
push
add
loopne
test
sbb
push
out
inc
or
xor
adc
iret
mov
lret
in
jmp
adc
filds
xor
hlt
in
ljmp
push
and
fildl
jbe
mov
subw
enter
das
bound
cmp
dec
mov
jge
xor
bound
mov
push
mov
inc
mov
xor
insl
ret
cmp
jge
xor
pusha
sbb
add
scas
and
add
aas
sti
clc
lods
jmp
jnp
xor
inc
cmp
sub
lea
xchg
xor
daa
add
lods
bt
outsl
mov
push
roll
adc
outsb
dec
inc
mov
mov
les
imul
jo
lods
bound
fnstenv
divb
mov
cli
cs
jno
cmp
mov
lahf
adc
ret
push
inc
pop
jecxz
dec
fwait
popa
cmp
insb
sti
int3
sti
mov
das
aas
lret
repz
ss
subl
jle
inc
mov
clc
clc
mov
call
and
push
test
shll
jl
mov
mov
sub
shrl
sub
dec
adc
lcall
xchg
mov
push
add
movsb
or
in
out
fdivl
ret
xchg
adc
lahf
xlat
push
jo
mov
imul
jns
out
scas
sbb
sbb
outsl
sub
lea
push
cmp
cmpsb
mov
mov
ja
pop
rorl
xor
pop
fwait
pop
cmp
bts
int
pop
mov
call
mov
pop
push
add
mov
and
in
pushf
repnz
pop
mov
jno
push
cmpsb
push
sbb
mov
inc
xlat
xchg
sub
leave
mov
push
mov
in
mov
hlt
ljmp
call
mov
or
repz
data16
lock
sub
xchg
sbb
cmp
pop
mov
xor
test
fucomp
fdiv
mov
dec
test
mov
jne
addr16
outsb
addb
jb
imul
jmp
pop
cmp
testb
sub
cmc
mov
jmp
sahf
mov
mov
mov
pop
mov
movb
sbb
loop
rorb
repnz
mov
pop
or
ficomps
and
adc
pop
out
mov
fcoms
mov
gs
jno
lds
lret
cmc
ret
mov
xchg
out
push
cs
ret
ficoml
cmp
xchg
mov
iret
sub
or
mov
cmc
jp
mov
mov
pop
jo
cmp
pushl
fucomp
pop
je
scas
xchg
mov
in
jecxz
jbe
cwtl
jns
mov
sbb
ret
sbb
xchg
xlat
sbb
out
inc
movsb
mov
aad
rcl
mov
sub
and
mov
add
sti
pop
rcrl
ds
inc
ja
les
mov
gs
ret
test
xchg
loopne
je
jae
pop
jno
jo
mov
jb
or
insl
mov
into
pop
pop
shl
mov
mov
fs
jnp
mov
dec
loope
iret
mov
pop
das
test
cmp
push
sub
add
adc
adcb
fcmove
lcall
mov
xor
inc
into
add
fdivr
or
and
sbb
shll
lcall
mov
insl
jno
mov
jecxz
adc
adc
sti
ss
pop
and
das
jbe
rolb
jne
enter
xchg
sahf
in
in
push
lock
out
xchg
xchg
dec
rclb
dec
xchg
mov
mov
xchg
or
iret
out
stc
popa
iret
sbb
fbld
mov
outsb
outsb
mov
mov
aad
inc
xor
das
out
mov
push
mov
out
insb
jl
push
and
pop
pusha
stos
xchg
mov
cli
loop
scas
cmp
fdivl
jb
pusha
dec
ret
lds
sti
add
pop
jae
arpl
shlb
add
push
mov
movsb
clc
mov
mov
fistps
adc
push
sahf
sbb
mov
cmp
push
mov
cmp
or
push
lds
push
dec
cmp
shll
jns
cltd
test
xchg
dec
cmpsb
push
cwtl
jns
xor
loopne
inc
pop
ret
adc
push
das
pop
lret
in
push
adc
inc
sti
cli
cli
cmpsb
push
mov
and
notb
call
and
xlat
dec
adc
cli
jbe
out
jnp
loope
xor
imul
ficomps
push
jae
and
xchg
push
in
subl
cltd
imul
stc
aaa
and
mov
mov
adc
cmpsl
not
lea
mov
fistpll
cmpsb
mov
in
adc
in
pop
stos
mov
ret
les
dec
test
imul
jb
jne
in
call
loop
push
lock
mov
xchg
gs
add
loopne
jne
mov
inc
rclb
mov
push
cmpsl
shrb
cmp
xlat
sbb
xrelease
xorl
jmp
lahf
mov
jne
jae
out
fwait
and
push
lods
xor
js
pop
lcall
out
jecxz
inc
xor
xchg
fsub
in
jns
aas
push
or
loopne
and
test
mov
out
mov
sub
or
and
dec
roll
inc
cltd
lcall
fistl
adc
out
lds
stc
out
jns
jo
jo
pushf
in
mov
popf
imul
repnz
out
push
test
dec
jg
fists
gs
lahf
lret
mov
rcl
int3
push
inc
xchg
lds
mov
mov
dec
lock
lret
jae
ja
push
js
fldcw
pop
les
xchg
fildll
push
pmaddwd
rol
lret
jbe
xor
mov
sarb
inc
stos
jne
cmpsl
sahf
mov
lock
cmpsb
inc
cmp
in
cmp
or
daa
sub
sbbl
ret
repnz
and
lock
mov
cmpsb
and
in
xchg
cmc
cmp
mov
jo
test
aas
out
inc
mov
add
jb
xor
adc
je
std
mov
lea
dec
repnz
and
xchg
out
add
ret
and
push
push
cmp
cmp
cmp
in
add
gs
repnz
jbe
mov
and
sarb
inc
cmp
lret
pop
sarb
out
sbb
mov
dec
adc
in
push
repnz
cs
pop
int3
mov
mov
sbb
pop
aad
not
mov
mov
adc
mov
mov
insl
push
mov
into
movsl
inc
cmc
rcr
aad
cmpsb
mov
add
lock
ret
push
inc
cld
test
outsl
mov
xchg
add
mov
push
in
mov
xor
divl
adc
xor
sub
aam
add
xor
push
iret
popf
jle
aad
aas
xlat
push
cmp
mov
sub
lret
and
mov
or
jo
into
lods
mov
jbe
hlt
jns
lods
movsl
or
hlt
or
add
filds
in
xorl
mov
roll
das
data16
adc
ss
and
jmp
test
dec
and
in
jno
adc
test
pop
sbb
push
loope
in
sahf
addr16
adc
shr
xor
push
xchg
push
cmp
or
mov
mov
iret
dec
push
or
dec
mov
aaa
push
sub
aaa
jl
add
mov
clc
mov
mov
mov
xchg
cli
jo
sarl
into
out
stc
test
xor
test
sub
pop
mov
push
outsl
jne
jns
addr16
mov
out
cmp
or
and
inc
sub
stc
mov
rorl
pop
sbb
fimull
push
mov
xchg
sbb
dec
mov
pop
js
xor
scas
xchg
sti
scas
test
mov
add
mov
aaa
adcl
sbb
sub
popa
adc
fimull
jmp
pop
test
mov
xchg
mov
adc
sbb
cmc
daa
stos
aad
mov
test
sub
cmc
sbb
cwtl
jg
loop
je
cwtl
add
sbb
leave
jbe
ja
cmp
adc
lcall
push
mov
mov
pop
push
jbe
test
inc
push
cltd
dec
pop
sub
bound
enter
in
jo
or
dec
mov
inc
jle
fdivl
in
lcall
std
data16
push
pop
pop
arpl
imul
jg
add
sbb
fcompl
push
inc
dec
push
movsl
in
sti
jmp
mov
inc
in
push
shlb
arpl
out
adc
int
movsb
cmpsl
xor
push
inc
pop
cmp
ljmp
xchg
add
push
jp
dec
mov
stos
into
filds
add
mov
js
repz
mov
sbb
jmp
dec
je
in
cmp
jecxz
test
cmp
jl
lahf
cs
popa
jp
sub
pop
inc
xchg
lret
mov
stos
scas
imul
cmpsl
xchg
jecxz
enter
jbe
lahf
pusha
xor
inc
fadds
pop
addr16
xlat
xchg
jns
xchg
mov
or
sbb
add
fisttps
xor
adc
decb
int
xor
mov
aad
sbb
pop
push
and
push
sbb
push
push
test
adc
inc
jp
adcl
fbstp
or
or
leave
jno
mov
push
add
lods
pushf
adc
fidivrs
mov
or
mov
sub
sbbl
mov
push
mov
imul
notl
sub
mov
mov
pushl
ret
out
into
in
push
mov
lods
xchg
sub
jg
repnz
pop
jns
jecxz
xor
mov
jge
mov
mov
adc
jecxz
dec
shrb
mov
cli
lock
xchg
adc
xor
std
sbb
mov
xor
cli
mov
insl
mov
add
mov
ljmp
and
out
out
push
mov
movsb
scas
jo
and
adc
cltd
shll
jne
sbbb
pop
mov
cli
sub
stc
cmp
ss
in
push
ljmp
sarl
cmpsb
pop
mov
dec
lahf
ja
pop
mov
dec
nop
jno
cmpsl
out
jb
xchg
fwait
push
sbb
mov
fucom
xor
out
lret
push
fdivrp
and
sahf
mov
ds
pop
add
ljmp
mov
cmp
movsb
pop
ss
or
push
xchg
mov
aam
and
outsb
xchg
inc
fnstenv
into
aad
insl
imul
push
test
insb
je
ljmp
popa
cmp
pop
sbb
rcl
jnp
push
das
hlt
dec
xor
pop
or
push
mov
xchg
jmp
dec
pop
xchg
pusha
int
int3
repz
ret
jbe
pusha
xchg
push
aaa
and
and
in
test
dec
add
or
pop
in
in
loope
jmp
inc
pop
push
mov
or
testl
repz
sub
sub
test
testb
das
jle
negb
fcmovnb
mov
jl
lret
popf
arpl
movsl
ja
or
pushf
sti
dec
adc
add
mov
shrb
popa
es
lcall
frstor
fs
repz
scas
lock
mov
push
clc
pop
jmp
adc
xchg
in
jl
push
icebp
jne
push
jnp
push
xlat
dec
jne
lcall
or
aad
ret
mov
test
jl
jns
sub
jmp
sub
ss
mov
mov
mov
sub
sbb
jl
lahf
jl
and
js
pusha
fdivrs
hlt
push
sub
inc
cli
andb
jae
lods
xorl
mov
sub
data16
inc
fistpll
push
pop
rcr
arpl
push
mov
or
orl
adc
mov
mov
add
inc
ret
sbb
icebp
inc
sub
mov
es
pop
xchg
cmpsl
outsl
cmpsb
fdivs
hlt
rcll
adc
xor
inc
dec
fsubrs
pop
cwtl
shll
xorl
mov
adc
test
fcomps
test
loope
jne
mov
dec
jmp
or
clc
imul
cmp
das
ror
fucomp
movsb
sub
jp
fwait
and
xchg
pop
jbe
inc
push
jnp
xchg
outsb
addb
sub
cmp
adc
pop
aam
loope
and
lea
jg
adc
add
ja
jecxz
inc
dec
fbstp
pop
or
jmp
xor
xchg
jg
lahf
loope
aam
les
out
xchg
shrl
bound
mov
and
rep
scas
insl
jne
aas
popa
negl
xlat
pop
mov
inc
das
xor
pop
mov
push
jns
mov
add
adc
js
add
test
pop
sub
movsb
add
jnp
js
aad
xchg
adc
adc
xchg
xchg
iret
or
mov
in
repnz
fldl
push
cmp
adc
sub
clc
or
mov
lea
int3
cmpsb
cmp
movsl
pushf
iret
and
loop
cld
or
fmulp
add
and
sbb
sbb
xlat
pop
into
clc
cmp
xor
sar
pop
pop
adc
jno
add
gs
jmp
sub
popf
adc
jb
xor
sub
test
test
aad
sub
inc
test
loop
out
adc
dec
movsl
or
and
pop
add
fstpt
addl
and
repz
enter
into
lcall
cmpl
test
out
pop
outsl
or
dec
mov
sub
int3
pop
mulb
jge
ret
lcall
shll
mov
lea
outsb
lods
or
adc
jp
lret
push
and
mov
pop
popf
repnz
lea
aad
cmp
ja
jb
xor
mov
cld
test
push
les
cmp
shl
iret
ss
sbb
fists
popa
out
add
stos
repnz
jmp
int
mov
jg
scas
outsb
add
cli
mov
push
out
imull
jecxz
push
pop
fimull
xor
out
addl
pop
or
sbb
cli
xor
stos
fcoms
xor
mov
negl
push
lea
aas
hlt
testb
jle
movsl
aad
popf
xchg
into
mov
and
adc
cmpsl
pushf
rcl
hlt
ret
out
clc
in
call
sbb
imul
push
push
push
inc
or
jae
test
in
push
xor
adc
mov
push
lahf
int
mov
lock
lea
test
xchg
and
sbb
mov
push
cld
scas
pop
adc
xchg
mov
mov
gs
push
iret
arpl
out
cmp
pusha
inc
push
inc
cmp
xlat
mov
mov
shrb
mov
nop
push
in
mov
push
orb
jle
pop
lret
mov
incb
dec
sbb
pop
pop
xchg
sub
push
sub
mov
push
pop
xchg
gs
mov
adc
xchg
loope
cmp
add
xor
cmp
lret
sub
lock
add
lock
jle
jno
cmp
push
mov
sahf
push
dec
insb
lret
lock
cmp
pushf
mov
repz
jno
test
neg
push
jns
ret
mov
pushf
mov
dec
pop
and
je
adc
xchg
pushf
arpl
push
div
arpl
lea
push
insb
xchg
mov
ss
push
push
inc
dec
call
pop
in
scas
pop
lahf
inc
in
and
inc
sbb
popa
sub
out
es
frstor
imul
pop
sbb
out
lods
ret
add
add
ljmp
xor
push
and
mov
dec
and
xor
lods
lods
in
push
jbe
mov
cs
jns
out
xchg
sub
ljmp
sub
mov
bnd
mov
hlt
inc
fwait
mov
addr16
in
sub
lret
dec
das
push
sub
adc
aad
repz
popa
mov
push
inc
js
cmp
test
aaa
push
xorb
ret
mov
inc
mov
fiaddl
push
mov
add
push
mov
stos
inc
jmp
or
in
mov
xchg
orl
cmp
inc
sbb
pop
aaa
xchg
rcr
xlat
fcmovu
sbb
pop
xchg
scas
gs
sahf
fcomip
out
fimull
arpl
or
xchg
add
sahf
test
dec
lds
rclb
rorl
shrl
pop
or
pusha
pop
scas
cmp
dec
in
add
mov
ror
pop
cmp
loop
addr16
jno
rorb
add
sahf
mov
negb
sti
insb
insl
pop
cmp
ret
cld
pop
sbb
nop
shll
aas
sub
enter
inc
xchg
loopne
popf
push
ret
pop
jge
mov
jo
popa
jl
mov
sahf
mov
cmpsb
arpl
int3
pop
iret
leave
jno
outsb
in
push
dec
sub
xchg
mov
inc
sbb
dec
shrl
jbe
rorb
inc
ds
aad
sti
lcall
mov
xchg
and
por
jp
adc
sub
icebp
pop
rcl
pop
aad
cmp
loope
cmpl
int
lods
inc
cld
loope
cwtl
dec
dec
inc
xchg
inc
and
mov
insl
fistps
jns
leave
dec
idivb
out
dec
imul
fsincos
mov
leave
scas
sbb
mov
push
into
mul
sbb
lock
adc
rcrl
sub
repz
in
add
loopne
rolb
iret
dec
pop
pushf
aam
xor
repnz
lock
les
fisubrs
imul
scas
addb
arpl
clc
mov
in
insb
cwtl
push
cmp
mov
jecxz
sbb
out
cmp
jae
jmp
int3
mov
into
fstps
fnstenv
adc
sbb
push
jmp
divl
sbb
adc
in
mov
mov
adc
xchg
test
inc
add
dec
sbb
faddl
fstps
jl
sar
fistps
dec
or
cwtl
std
adc
icebp
jecxz
jbe
sub
jnp
in
xor
or
call
push
jns
sub
jge
inc
mov
sub
push
pop
lea
push
lods
in
scas
pop
xchg
cmp
movsl
enter
pushw
cld
inc
cmpsb
pop
pop
push
das
std
icebp
fs
pop
jl
inc
mov
incl
mov
daa
mov
xchg
popf
hlt
sub
outsb
sub
lods
jne
int
movsl
xchg
ljmp
push
in
cmp
sti
out
cmp
sub
movsl
sarl
int3
mov
negb
push
and
or
imul
cld
lds
fistps
loope
mov
aam
outsb
pop
test
sub
push
sbb
mov
popf
and
call
call
je
movsb
clc
stc
fs
push
fcomi
out
mov
mov
add
cmp
addr16
mov
pop
repz
dec
loopne
fadds
jns
in
jb
in
push
xor
loope
mov
outsl
nop
cli
in
jmp
sub
xchg
cmp
icebp
xchg
lcall
adc
cmpb
sub
icebp
enter
sbb
nop
std
or
cmp
daa
mov
lret
mov
inc
dec
pop
and
les
mov
mov
js
out
leave
arpl
insb
inc
push
sti
call
mov
lret
ret
mov
jge
fdivp
rorb
fldt
jle
jnp
dec
jbe
pop
push
sbbb
andl
in
mov
addb
dec
pop
cmp
dec
push
jl
dec
fbld
aad
inc
add
mov
xchg
stos
dec
fwait
xchg
push
test
mov
into
and
in
sub
std
pop
and
pop
cmp
and
sbb
jp
sub
fsubrl
cmpb
test
ljmp
stc
or
aam
mov
cli
add
push
xchg
int3
push
lcall
pushf
aas
pop
bound
clc
xchg
xor
call
dec
ret
popa
mov
and
mov
xchg
mov
sahf
push
je
lods
lods
imul
clc
dec
xor
fdivp
xor
ljmp
xchg
pop
jno
and
xor
inc
mov
sbb
insl
lods
hlt
in
inc
dec
leave
push
cwtl
xor
xchg
fwait
cmpsl
nop
fistl
add
fs
pop
sbb
gs
push
mov
xor
mov
aad
scas
sub
xchg
out
sub
jno
cmp
jns
xchg
imulb
ja
push
pop
setl
xor
sbb
inc
insl
out
pop
sub
mov
dec
pop
movsl
cltd
or
dec
iret
outsl
xchg
sub
sub
lods
cld
push
lcall
sub
sarb
lret
adc
dec
lret
mov
out
xor
dec
adc
out
sub
cmpsl
jmp
and
rcl
sbb
adc
pop
push
outsb
cmpsb
jnp
ja
sti
movsl
std
cmp
jecxz
lea
pop
pushf
in
mov
jge
cmp
inc
out
daa
es
fnstcw
fidivs
xor
in
xchg
sbb
inc
and
pushf
icebp
jl
add
int
je
mov
sbb
and
cmc
xchg
imul
jp
xchg
mov
sbb
ret
or
pop
imul
mov
dec
punpckhwd
aas
push
int3
mov
cmpsl
test
jecxz
arpl
dec
sbb
cli
sub
jmp
rcr
xchg
inc
fcmove
shl
xchg
xchg
xor
xor
cmp
adc
jecxz
pop
fldcw
les
pop
fadds
xor
mov
aam
jp
ret
aaa
int
pop
hlt
cli
jp
ja
pusha
lcall
mov
or
fwait
sti
addr16
cmp
bnd
cmp
mov
outsb
xchg
dec
int
fiadds
into
test
out
add
icebp
and
pop
sub
mov
iret
mov
mov
dec
pop
jns
jnp
cmp
imul
jae
add
ljmp
iret
mov
push
or
pushf
adc
pop
sbb
jbe
lahf
pushl
cmpsl
sub
insb
mov
nop
aam
push
lret
in
adc
adc
mov
cmp
cli
mov
add
and
out
ds
cmp
mov
jl
fcmovu
std
jmp
mov
add
les
pusha
pop
sub
cltd
pushl
jl
test
sbb
mov
inc
jo
cmp
cmp
xor
dec
fidivrs
dec
mov
insb
xchg
push
outsb
into
cmp
xchg
sub
lahf
data16
jmp
iret
xchg
rorl
mov
nop
out
sbb
adc
mov
orl
daa
push
push
scas
dec
repz
mov
mov
mov
pusha
mov
sub
and
repz
adc
outsb
jae
cmp
push
daa
xor
inc
xchg
inc
add
negb
inc
mov
add
test
mov
rcrb
add
sub
sbb
push
sti
lods
and
aad
lret
pop
iret
lcall
pop
sbb
insl
pop
hlt
shl
adc
jecxz
cs
loop
xor
cmp
aas
add
add
mov
movsl
jnp
cwtl
mov
mov
ss
mov
ret
hlt
call
inc
test
jbe
fnstsw
push
dec
loop
jno
inc
xchg
dec
scas
xchg
push
sub
jge
movsl
fcom
cmp
xchg
clc
test
push
imul
push
addr16
cmp
mov
add
mov
sti
and
xor
sub
lds
es
jbe
dec
addr16
dec
push
mov
pop
mov
mov
fidivrs
xchg
fdivrs
inc
pop
xchg
gs
xchg
cli
ret
cmp
cmpsb
fstl
or
lea
mov
movsb
or
or
loope
xor
sti
icebp
and
push
fs
sub
inc
dec
leave
out
fidivrl
pop
sbbb
mov
xor
xchg
adc
sbb
push
icebp
jge
outsb
iret
xchg
push
push
push
dec
out
xor
movsl
inc
out
xor
adc
mov
shlb
in
mov
iret
xchg
cmp
sub
sbb
bound
pop
sub
ss
mov
nop
adc
ljmp
mov
je
and
cmp
push
xchg
and
fdiv
addb
jecxz
outsl
inc
out
pop
cld
dec
jg
dec
shr
es
outsb
lds
xlat
and
cmpsl
test
xchg
inc
lds
jne
pop
mov
mov
mov
cmp
aaa
lds
xlat
xchg
psubsb
xlat
ja
push
js
call
insl
adc
pop
jle
add
subl
or
dec
rorb
sub
cmpxchg
xchg
jno
mov
pop
and
js
cmpl
stos
mov
stos
add
inc
xlat
mov
jb
pop
in
fidivl
stos
push
inc
add
roll
test
aaa
sub
jl
sbb
lret
outsb
push
int
sarb
in
cmp
xchg
data16
mov
bnd
and
xor
cmpsl
xchg
or
push
cmp
push
ja
fwait
cwtl
cs
push
sbb
pop
jno
push
mov
popa
shlb
mov
or
push
mov
mov
sub
xchg
add
xchg
cmp
or
push
sbb
jmp
or
push
dec
sub
rcll
fs
or
and
pop
xor
outsb
imul
adcb
sbb
sbb
push
fwait
in
inc
push
jle
xor
mov
cwtl
mov
jecxz
jnp
orb
sbb
outsl
push
in
or
fnstcw
mov
adc
cmpsb
pop
and
out
testb
xchg
mov
hlt
ss
les
xchg
jnp
push
xchg
add
fstpl
out
cmp
iret
or
ljmp
lods
ret
enter
mov
pop
ret
pop
pusha
jmp
inc
inc
xchg
jl
add
add
cs
lods
inc
pop
std
jnp
xor
jo
popa
pop
mov
cli
inc
aam
lcall
jb
xorb
cmp
mov
fists
xor
mov
hlt
sbb
jl
or
movd
repnz
xchg
movsl
jmp
jle
sbbl
fdivrl
cmpsl
cmpsb
out
sbb
push
outsl
pop
lds
mov
jb
push
outsl
fidivs
leave
aam
arpl
cmp
and
jg
movsb
popa
outsl
leavew
rorb
insl
mov
xor
mov
mov
rolb
and
out
lds
cmpsl
or
push
push
test
rcr
cmp
es
push
xchg
mov
add
shll
jbe
stos
add
daa
mov
push
insl
cmp
mov
cmpl
rolb
mov
xchg
or
mov
cmpsl
adc
ror
out
push
sub
stos
pop
out
push
push
ret
test
xchg
and
daa
cmp
inc
imul
imulb
push
call
mov
push
iret
pushf
ljmp
icebp
rcll
pop
or
mov
cmp
or
xchg
imul
hlt
mov
dec
imull
movsb
mov
sub
mov
repnz
std
or
pushf
rorl
xor
stos
mov
ret
imull
sub
mov
jge
fnstenv
test
add
bound
ljmp
hlt
push
push
cs
mov
adc
subb
aam
mov
test
js
jae
sbb
lds
xchg
bound
arpl
popf
mov
mov
lods
mov
jmp
adc
ret
in
sahf
cmp
scas
ljmp
push
mov
lahf
sahf
enter
push
or
dec
aad
xchg
fnstcw
je
xchg
call
pushl
fstpt
ficompl
push
xor
cs
push
les
jb
cmp
lds
push
or
pushf
pop
shl
je
jecxz
cmpb
and
sub
jbe
fdivrs
and
jmp
sub
or
or
xor
out
mov
fsts
call
in
sbb
xlat
mov
fstpl
or
and
fsubl
int3
xor
ret
push
xor
test
mov
sbb
leave
add
mov
stc
cmp
adc
pop
xchg
xor
in
sub
add
sub
jle
mov
mov
jle
aam
mov
cmp
mov
mov
daa
dec
sti
xchg
lcall
inc
in
mov
cmp
mov
mov
testl
loope
addr16
ret
xlat
push
jae
xchg
testb
fisttpll
fisubrl
fisubl
mov
adcl
int
inc
push
out
xor
fcomip
inc
sbb
mov
adc
daa
pop
cmp
mov
sbb
xchg
cmc
push
in
into
fs
jb
out
lea
enter
movsl
add
ds
sub
fucomp
ret
cmpsl
das
sti
arpl
dec
push
clc
mov
stc
popf
pop
xor
lods
pop
sti
andb
jns
lret
insb
mov
sbb
scas
add
dec
lock
or
jnp
cmp
lock
mov
sub
adc
adc
xchg
fidivrs
adc
sahf
daa
push
sbb
loope
stos
pop
outsb
fisubrs
prefetch
inc
cmp
xchg
mov
cld
rcrb
mov
inc
lods
aad
mov
movsl
lods
mov
xor
xchg
sub
push
mov
fnstcw
leave
sub
js
test
jns
or
ds
push
cmp
push
ja
leave
xchg
cmp
shlb
xchg
mov
inc
pop
jno
xor
xchg
lds
add
sti
mov
push
decl
shrb
jns
call
adc
xor
insl
cmp
sub
in
in
ret
outsl
inc
xchg
xchg
cltd
adc
push
fdivs
loope
jp
in
cmpsl
mov
jns
pop
cwtl
aaa
mov
inc
popf
mov
mov
int
adc
ja
ficompl
into
fucomip
jle
dec
cmp
pop
arpl
lldt
xchg
pop
push
pop
mov
repz
dec
scas
xchg
hlt
cs
jnp
dec
mov
push
cld
mov
pop
fistpl
add
mov
jp
test
mov
sub
arpl
mov
and
cwtl
sub
xchg
sub
iret
icebp
mov
dec
jecxz
lahf
xchg
mov
pop
test
lods
daa
in
jmp
cmp
jno
test
sahf
jnp
stos
inc
xor
push
xor
arpl
sub
xchg
stc
mov
mov
dec
xchg
test
ret
popa
jns
mov
pop
mov
movsb
jns
enter
les
cld
jl
int
in
int3
adcb
dec
clc
das
inc
mov
sub
add
out
jp
popf
rcl
sbb
sub
xchg
or
test
sub
lcall
jp
andl
or
sub
jb
mov
lret
jno
rcrb
stos
jmp
test
mov
jge
pop
add
lret
dec
or
push
mov
mov
rcrb
pushf
popa
or
loope
sub
push
push
sbb
leave
bound
push
or
movsb
sbb
push
dec
orb
int3
je
jns
inc
push
inc
ds
sarb
jnp
sub
cmpb
insb
inc
lret
inc
test
and
into
dec
rorl
xchg
shrb
mov
push
in
imul
iret
add
and
xor
dec
movsl
ds
jecxz
sub
lahf
mov
dec
aad
scas
testb
jp
fcmove
push
adc
cmpsl
mov
addr16
adc
sbb
repnz
lret
pop
jnp
ret
cmp
cmp
push
incb
stc
rcl
mov
imul
jne
add
out
cltd
and
loop
jae
ffree
adc
jnp
out
aam
out
fs
fidivrs
sub
sarb
ja
hlt
ffreep
cwtl
mov
xchg
sub
inc
das
sbb
mov
repz
addr16
or
and
push
mov
jg
mov
sti
jmp
out
jecxz
adc
or
lahf
dec
out
sbb
or
xchg
shrl
and
mov
xchg
es
hlt
jo
mov
mov
xor
adcb
xor
sub
lahf
test
cmp
je
or
out
jle
pop
or
cs
cmp
leave
mov
push
mov
shll
into
pop
lods
adc
mov
andps
mov
arpl
and
loop
sub
xchg
test
or
xchg
xchg
xor
pop
cmp
pop
bound
cmc
jo
or
add
imul
jo
ljmp
fbstp
or
jl
fnstsw
mov
stos
adc
and
aad
and
mov
pushf
xchg
ljmp
mov
in
lahf
xchg
and
add
xchg
scas
popa
mov
rcl
scas
outsb
mov
clc
in
sbb
mov
in
fdivs
fsts
cmova
mov
mov
mov
loop
jns
or
sub
dec
jae
movsb
pop
mov
out
stc
add
and
hlt
inc
or
rclb
dec
loop
add
cmp
in
lock
mov
dec
inc
in
and
jno
bound
daa
inc
outsl
inc
lea
mov
mov
sahf
lcall
imul
pop
lcall
nop
mov
xor
add
xchg
and
mov
iret
push
adc
bound
aaa
pop
dec
cmc
loopne
sahf
lahf
outsl
jno
fnstsw
dec
fists
pushf
pop
iret
mov
iret
push
call
punpckhwd
mov
and
andb
jl
frstor
in
jb
adc
or
jb
insl
adc
sar
xchg
lds
lsl
ss
jne
inc
shrl
andl
rorb
pop
cmp
dec
mov
ds
dec
ret
ja
cld
xchg
jl
fstps
jno
push
mov
sar
jge
cmc
test
lret
inc
and
cs
stc
push
out
mov
sub
mov
mov
fstp
inc
or
addr16
dec
xor
repz
push
dec
test
push
stc
movsl
cltd
test
jmp
and
dec
push
outsl
fs
cmp
call
mov
or
jp
mov
jb
pusha
repnz
dec
aam
add
cmp
pop
fimull
mov
bound
lret
aaa
mov
push
lock
mov
mov
stos
xor
or
xor
mov
jl
sbb
outsb
test
fwait
out
ss
mov
push
insl
adc
adc
push
mov
push
lods
dec
or
sbb
adc
iret
inc
out
sub
ja
cmp
mov
cld
outsl
xor
aas
fisttpll
sub
adc
pop
dec
xor
mov
dec
pushf
lahf
movb
mov
or
enter
pop
lcall
mov
and
adc
dec
cmpsl
lret
and
hlt
testb
cwtl
add
aaa
out
xor
iret
pop
das
fcomps
adc
jge
dec
lret
mov
mov
imull
xchg
scas
add
adc
scas
push
lock
test
cmc
rcl
inc
cmp
jno
sbbb
mov
adc
out
mov
stos
subl
and
aam
dec
mov
pusha
gs
dec
xchg
insl
add
stos
rcll
mov
or
decl
pop
and
int3
shr
js
ror
cmp
lahf
jo
imul
mov
lods
imul
mov
push
xchg
xor
sub
test
jb
test
adc
xchg
aaa
movsb
movsb
stos
sbb
pop
imul
lret
jbe
add
inc
push
pop
fld
xlat
mov
adc
mov
jecxz
insl
lock
lahf
jns
xchg
mov
pop
lods
test
jo
imul
inc
or
cmp
or
fs
addr16
push
loop
in
cmp
mov
scas
jbe
add
jae
shr
inc
adc
pop
stos
add
mov
shrb
out
mov
fldenv
mov
pop
sub
push
pop
stc
daa
js
jl
xchg
xchg
into
jnp
lret
jb
mov
jae
pop
add
call
shl
icebp
sub
rolb
jl
incb
popf
jle
pop
cmp
push
mov
lahf
push
mov
int
loope
lods
imul
sub
adc
in
insb
scas
sub
add
dec
or
jo
das
add
mov
pushf
jge
mov
stos
sub
mov
test
loope
imul
out
stc
pop
out
jae
ror
out
push
sub
cld
scas
bound
xchg
xorb
sub
es
aam
inc
sub
into
out
xor
mov
lds
addr16
mov
inc
ficomps
lods
pop
adc
mov
cmp
enter
push
scas
xor
adc
out
insb
cmp
adc
daa
xor
and
cmp
imul
dec
xor
cmp
popf
mov
loope
dec
adc
lea
fs
xchg
mov
mov
int3
filds
call
filds
xor
clc
and
adcl
mov
xor
ret
mov
jmp
fnstcw
loop
shll
ss
iret
dec
mov
adc
out
jo
outsl
xchg
jmp
sbb
fnsave
or
xchg
xchg
mov
test
mov
pop
lcall
pop
push
aam
xor
sbb
pop
das
test
mov
aas
aas
adc
adc
sub
sbb
je
pop
sbb
xor
pusha
cltd
xor
push
cs
icebp
or
jg
dec
stos
jne
push
xchg
cmp
pop
insl
sahf
cli
jmp
adc
mov
sbb
dec
rolb
sub
adcb
mov
sbb
nop
in
stc
loope
arpl
pop
and
jne
ss
popf
or
fxch
cmpsl
or
mov
imul
fisttps
inc
lahf
das
int3
into
pop
push
inc
jne
jge
adc
sbb
sbb
and
test
jo
mov
adc
ds
mov
lods
mov
xchg
xor
out
inc
data16
sbb
mov
lods
push
sti
dec
pushf
mov
jg
icebp
repz
lds
shl
cmp
outsl
out
fdivl
shlb
cmc
out
subb
push
pop
jb
icebp
push
mov
sbb
adc
loope
cs
mov
cmp
push
xor
dec
pop
imul
push
iret
push
bound
arpl
mov
in
add
dec
sahf
mov
push
jg
mov
into
movsl
pop
add
and
push
or
enter
cmp
jnp
jge
cmp
repz
loop
rcl
aad
pop
rol
inc
scas
dec
jns
jo
dec
andb
imul
pop
es
lods
add
push
andb
push
jno
inc
jle
xchg
lds
mov
mov
leave
outsl
repz
aam
mov
jb
in
adc
ss
and
lahf
inc
jne
loop
test
repz
or
adc
out
out
cmp
mov
movl
mov
aam
push
std
into
jle
popf
push
push
inc
add
mov
cli
punpckhwd
pop
mov
sbb
sti
std
add
fdivrl
xchg
aas
add
fdivrl
addl
lahf
lret
lcall
popa
outsl
lret
jno
dec
mov
or
pop
cmp
ds
pop
ljmp
or
or
cmp
pop
jg
cwtl
sub
mov
mov
mov
dec
xchg
iret
xor
cmpl
xchg
pop
ficoml
adc
test
fistpl
outsb
std
orl
mov
add
es
xchg
mov
cmc
fcomip
sbb
pop
mov
call
xchg
adc
cmp
mov
add
pop
cmc
add
cmp
clc
add
add
pop
in
adc
sbb
test
out
nop
rorb
mov
int3
xor
sub
