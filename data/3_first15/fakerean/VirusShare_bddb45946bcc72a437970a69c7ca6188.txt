jno
add
divb
rorb
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
mov
jmp
cmpl
jne
cmpl
jge
cmpl
jne
cmp
je
cmp
je
ret
push
lea
call
movl
pop
jmp
push
mov
push
push
incl
mov
mov
cmp
push
mov
je
mov
mov
mov
pushl
mov
pushl
mov
call
pop
leave
ret
push
mov
sub
push
push
push
mov
xor
cmp
je
mov
neg
sbb
pop
and
pop
add
pop
leave
ret
lea
push
push
lea
call
test
pop
pop
jne
lea
push
mov
call
push
push
call
test
js
lea
call
mov
test
mov
je
call
test
je
mov
test
je
mov
push
push
lea
push
push
call
mov
mov
push
push
push
push
call
lea
call
pushl
call
pop
pushl
movl
call
pop
pushl
call
pop
jmp
mov
pushl
mov
pushl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
cmp
ja
add
cmp
jb
mov
sub
jne
mov
test
mov
mov
je
mov
push
mov
call
addl
pop
mov
pop
ret
mov
mov
push
push
call
test
jne
pop
xor
pop
ret
push
mov
and
sub
push
push
mov
mov
cmp
lea
push
mov
jb
mov
test
je
push
lea
push
lea
push
push
push
movl
call
add
test
je
mov
cmp
jb
mov
mov
push
add
push
push
push
push
lea
push
mov
call
test
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
lea
push
push
push
push
lea
movl
call
add
test
js
mov
mov
lea
push
push
push
push
call
add
cmp
ja
xor
mov
lea
push
push
push
push
call
mov
mov
mov
mov
add
sub
push
push
mov
push
mov
push
lea
push
push
call
test
js
mov
movl
movl
mov
test
je
mov
push
mov
call
lea
call
mov
test
je
mov
mov
push
call
mov
pop
pop
pop
mov
pop
ret
push
push
call
add
jmp
mov
mov
jmp
push
mov
and
push
push
push
mov
push
mov
push
pushl
pushl
push
call
test
mov
jne
test
js
mov
mov
call
call
mov
mov
call
push
mov
call
mov
orl
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
mov
xor
cmp
je
add
add
cmpl
jne
test
mov
mov
je
lea
push
call
mov
add
test
mov
je
test
push
push
jbe
xor
mov
mov
mov
push
call
mov
add
test
je
push
push
push
call
mov
mov
mov
add
add
cmp
jae
mov
jmp
xor
pop
pop
pop
pop
add
ret
push
mov
push
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
jmp
mov
test
je
lea
jmp
mov
test
je
lea
jmp
mov
test
jne
mov
movl
movl
mov
jmp
mov
test
je
lea
jmp
push
mov
sub
mov
xor
mov
movzbl
push
xor
xor
push
inc
cmp
mov
mov
mov
mov
je
jg
cmp
jle
cmp
jg
cmp
jge
cmp
je
cmp
je
add
cmp
ja
mov
push
call
push
mov
call
mov
andl
xor
mov
pop
xor
pop
call
leave
ret
sub
je
dec
je
dec
jne
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
mov
push
call
push
jmp
cmp
jge
cmp
jg
je
cmp
je
jle
cmp
jg
push
pop
mov
jmp
push
call
add
mov
jmp
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
cmp
jle
sub
cmp
jbe
mov
jmp
je
sub
je
dec
dec
je
sub
je
dec
jne
push
call
jmp
movzbl
jmp
mov
push
call
push
mov
call
addl
add
mov
mov
cmp
je
cmp
jne
mov
jmp
cmp
je
jmp
xor
push
call
pop
jmp
cmp
je
cmp
jne
push
push
pop
jmp
lea
sbb
and
adc
cmp
insb
and
adc
cmp
hlt
fs
adc
add
add
push
push
push
push
push
push
push
push
push
push
push
add
add
add
add
and
push
mov
push
call
test
je
mov
push
lea
call
mov
neg
sbb
and
je
lea
mov
call
test
jbe
xor
mov
call
pop
ret
xor
jmp
cmpl
je
xor
inc
ret
push
testb
jne
call
pop
ret
mov
mov
mov
mov
mov
mov
shr
and
dec
je
xor
dec
je
dec
je
shr
and
cmp
sete
pop
ret
inc
pop
ret
push
mov
push
testb
push
push
push
mov
jne
mov
call
xor
cmpb
pop
setne
pop
pop
mov
leave
ret
mov
test
je
mov
add
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
or
inc
add
jl
insb
test
je
mov
lea
push
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
mov
push
push
push
lea
push
push
call
test
js
mov
mov
push
push
mov
call
mov
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
pop
pop
pop
xor
call
add
ret
test
jne
inc
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
test
push
mov
mov
je
push
call
mov
add
mov
mov
test
js
mov
cmp
je
cmpl
je
mov
cmp
jne
cmpl
jne
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
test
mov
je
test
je
push
call
add
xor
pop
pop
pop
add
ret
lea
call
test
je
mov
add
addl
mov
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
cmpl
push
push
push
movl
je
mov
mov
lea
push
lea
push
call
mov
test
js
mov
cmp
ja
test
je
mov
mov
mov
mov
lea
push
mov
push
push
push
push
push
movl
call
test
js
mov
mov
test
je
mov
add
add
sub
sub
add
adcl
test
jne
pop
mov
adc
inc
and
cmp
mov
jae
sub
push
mov
call
cmpl
jne
mov
pop
pop
pop
mov
pop
ret
mov
mov
jmp
pop
pop
xor
pop
mov
pop
ret
mov
test
jne
or
ret
test
push
mov
jbe
lea
push
mov
movzwl
movzwl
cmp
jae
movzwl
movzwl
sub
cmp
jb
add
dec
jne
pop
mov
cmpl
jge
push
call
pop
pop
ret
xor
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
xor
cmp
push
je
lea
mov
mov
add
call
cmp
mov
jne
xor
mov
call
mov
mov
cmpl
jge
mov
push
push
push
call
add
mov
call
mov
mov
sub
cmpl
jge
push
call
mov
add
mov
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
push
push
mov
cmp
push
mov
jge
mov
sub
mov
jns
lea
test
jl
lea
lea
cmp
jge
mov
testl
jne
cmpw
jne
sub
sub
test
jge
cmp
jge
mov
lea
push
push
mov
call
test
jl
cmpl
mov
jg
mov
sub
jns
test
je
cmpw
je
pop
pop
pop
xor
pop
add
ret
lea
lea
lea
mov
cmpl
jge
mov
testl
jne
movzwl
test
je
mov
movw
sub
sub
sub
test
mov
jge
mov
jmp
xor
lea
lea
test
jle
cmpw
je
mov
movw
movzwl
mov
mov
push
mov
push
call
mov
add
add
add
cmp
jl
mov
jmp
lea
lea
lea
mov
testl
jne
sub
sub
test
jl
jmp
mov
push
call
add
test
je
jmp
mov
cmpw
je
jmp
lea
push
push
call
test
mov
js
push
call
mov
mov
jmp
add
call
mov
mov
jmp
add
push
mov
call
mov
mov
jmp
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
mov
push
push
mov
mov
mov
mov
mov
test
je
push
push
call
add
mov
mov
test
je
mov
testl
je
lea
call
push
push
lea
call
test
je
mov
movl
mov
mov
mov
lea
push
mov
push
mov
push
push
push
push
push
call
test
js
cmpl
je
lea
call
mov
pop
pop
pop
pop
pop
ret
push
push
push
mov
lea
mov
push
call
xor
cmp
jne
mov
push
push
pushl
mov
push
call
cmp
je
pushl
mov
pushl
call
mov
call
pop
pop
pop
ret
cmp
jne
pushl
mov
push
mov
call
test
jne
pushl
mov
call
test
je
mov
test
lea
je
lea
andl
jmp
mov
push
mov
call
jmp
mov
mov
push
call
ds
add
adc
insb
cmp
mov
mov
push
call
mov
lea
push
push
call
mov
lea
push
push
call
mov
mov
imul
mov
mov
imul
mov
mov
and
or
jne
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
ret
jmp
mov
push
call
rol
inc
add
ret
mov
mov
test
jbe
dec
mov
mov
test
je
mov
decl
mov
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
jne
mov
mov
cmp
jne
call
test
jne
test
jne
pop
pop
ret
mov
mov
mov
call
test
jne
mov
mov
scas
inc
add
pop
ret
mov
mov
mov
call
test
js
mov
add
xor
and
xor
pop
pop
ret
call
jmp
xor
mov
xor
and
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
jbe
mov
cmp
je
mov
cmpl
jae
xor
ret
testb
je
xor
ret
mov
mov
incl
test
je
mov
incl
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
cmpl
je
push
push
xor
push
jmp
lea
test
movl
jne
mov
lea
push
push
push
call
add
test
js
mov
test
je
mov
mov
mov
mov
add
push
add
push
xor
push
mov
call
test
je
mov
mov
lea
add
lea
cmp
je
lea
lea
test
je
mov
mov
mov
add
add
cmp
jne
mov
addl
mov
add
je
xor
test
js
mov
mov
mov
mov
sub
je
sub
je
jmp
test
jne
xor
pop
pop
pop
pop
pop
ret
int3
int3
sub
mov
push
push
push
xor
mov
push
lea
mov
call
lea
call
mov
lea
mov
mov
xor
cmp
je
mov
lea
push
push
mov
mov
call
mov
add
test
js
cmp
jne
mov
mov
mov
mov
cmp
jge
insb
mov
add
mov
mov
test
js
lea
lea
call
test
je
lea
call
test
je
test
js
mov
mov
lea
push
mov
call
lea
push
call
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
movl
lea
call
test
jne
lea
call
test
jne
mov
mov
mov
mov
cmp
jne
mov
cmp
jg
lea
call
mov
lea
push
lea
mov
mov
movl
call
push
lea
lea
call
mov
add
test
js
mov
test
jne
mov
test
jne
xor
jmp
mov
mov
push
lea
call
push
lea
call
cmpl
jne
add
jmp
movl
jmp
sub
cmp
ja
movzbl
jmp
mov
jmp
lea
call
mov
mov
lea
push
lea
mov
movl
call
push
lea
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jns
jmp
mov
jmp
nop
fcompl
adc
pop
adc
mov
add
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
add
pop
inc
adc
jb
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
lea
push
push
movl
movl
call
add
test
js
mov
mov
cmp
je
mov
xor
mov
pop
pop
pop
add
ret
push
mov
call
add
test
je
movl
movl
mov
test
mov
je
mov
push
mov
call
test
js
mov
cmp
jne
lea
mov
mov
lea
push
push
mov
movl
call
add
test
js
mov
mov
lea
push
add
movl
mov
call
test
je
xor
test
js
mov
cmpl
je
mov
pop
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
mov
push
mov
cmpl
je
mov
cmp
je
cmp
je
mov
lea
push
push
mov
mov
call
add
test
js
mov
mov
cmp
je
cmp
je
mov
mov
xor
pop
pop
pop
add
ret
mov
push
call
add
cmp
je
movl
cmp
mov
je
push
call
add
cmp
je
movl
movl
mov
cmp
mov
je
add
call
cmp
je
mov
mov
mov
cmp
mov
jne
mov
xor
test
js
mov
mov
mov
mov
sub
je
sub
jne
movl
mov
lea
push
push
push
mov
call
add
test
js
mov
add
call
cmp
je
mov
mov
cmp
mov
mov
jne
mov
mov
xor
test
jns
jmp
cmp
je
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
xor
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
sub
sar
push
mov
mov
mov
movl
movl
call
xor
add
cmp
je
mov
mov
lea
mov
lea
movl
push
push
movl
mov
mov
call
xor
cmp
mov
je
add
mov
test
mov
mov
jne
test
je
mov
test
jne
test
jne
test
je
mov
mov
cmpl
je
mov
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
mov
cmp
je
mov
lea
mov
mov
push
push
push
mov
call
add
test
js
mov
jmp
mov
cmp
je
mov
mov
mov
push
push
push
call
mov
add
test
mov
jne
pop
mov
pop
pop
pop
add
ret
lea
push
push
inc
adc
push
inc
adc
push
inc
adc
ja
adc
pop
adc
add
add
add
add
add
add
in
and
sub
mov
xor
mov
push
mov
push
mov
push
mov
push
pushl
push
push
call
test
mov
jne
mov
test
js
mov
mov
call
mov
call
mov
mov
call
push
mov
call
cmpl
mov
je
mov
lea
mov
mov
lea
push
pushl
xor
push
mov
mov
mov
movl
movl
mov
call
cmpl
jne
testb
jne
testb
jne
mov
mov
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
push
movl
call
movzbl
push
push
mov
call
add
mov
jmp
push
mov
mov
test
je
mov
push
push
pushl
push
call
sub
je
dec
je
dec
je
pop
ret
orl
mov
mov
pop
ret
push
mov
push
mov
andl
test
je
mov
lea
push
push
push
call
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
push
push
push
call
add
mov
push
push
call
push
call
mov
add
cmp
je
push
push
call
add
pop
mov
pop
and
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
push
call
mov
push
call
add
cmp
jne
mov
push
call
add
xor
pop
pop
pop
pop
ret
cmp
je
cmp
je
mov
movl
mov
push
mov
mov
call
add
test
je
mov
mov
push
call
movl
movl
lea
add
mov
push
mov
movl
movl
movl
call
test
mov
je
mov
mov
push
call
mov
mov
push
call
mov
add
push
mov
call
mov
push
call
add
lea
call
mov
push
call
add
xor
pop
pop
pop
pop
ret
mov
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
lea
mov
push
push
call
cmpl
je
mov
mov
push
mov
call
add
cmpb
jne
mov
push
call
add
cmpl
je
test
jne
cmpb
je
movl
mov
pop
pop
pop
ret
mov
push
push
call
test
js
test
je
jmp
pop
pop
xor
pop
ret
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
fdivrl
mov
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
jne
mov
movl
movl
mov
jmp
sub
mov
xor
mov
push
mov
mov
test
push
mov
jne
add
orl
push
mov
push
xor
cmp
lea
mov
mov
mov
movl
movl
mov
mov
je
push
push
push
call
add
test
jne
cmp
mov
je
testb
je
mov
push
push
lea
call
test
je
movl
lea
mov
call
test
je
lea
call
mov
mov
mov
mov
push
call
push
lea
movl
call
xor
cmp
je
movb
mov
mov
push
push
mov
push
lea
push
push
push
push
push
xor
lea
call
cmp
pop
mov
pop
jne
mov
test
jne
test
jne
mov
mov
pop
pop
xor
call
add
ret
movb
jmp
push
mov
mov
push
call
test
je
mov
andl
mov
lea
mov
test
jne
mov
mov
xor
pop
ret
mov
jmp
push
push
push
pushl
lea
pushl
call
test
jne
or
pop
pop
pop
ret
mov
xor
cmp
je
mov
mov
mov
pushl
mov
mov
call
test
jne
inc
lea
cmpl
jne
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
test
je
mov
and
test
jne
test
jbe
xor
lea
mov
test
mov
je
cmp
je
add
add
cmp
jb
test
je
mov
test
jne
xor
pop
pop
pop
pop
ret
movzwl
test
jbe
xor
lea
lea
cmp
je
add
cmp
jae
jmp
lea
pop
pop
pop
pop
ret
mov
jmp
xor
jmp
test
jl
lea
pop
pop
pop
pop
ret
test
jbe
movl
lea
cmpl
je
mov
push
mov
call
test
jne
mov
add
add
cmp
mov
jb
pop
pop
pop
xor
pop
ret
push
mov
push
push
mov
push
pushl
mov
push
push
mov
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
mov
lea
mov
call
mov
andl
mov
mov
mov
mov
push
call
test
pop
je
mov
mov
mov
andl
mov
mov
mov
movl
mov
movl
push
mov
call
pop
pop
leave
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
mov
mov
mov
cmpl
mov
je
mov
mov
xor
mov
mov
mov
lea
push
push
mov
push
lea
call
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
cmp
mov
mov
lea
jne
mov
imul
add
sar
mov
shr
add
mov
imul
mov
sub
add
cmp
mov
jne
mov
mov
imul
add
sar
mov
shr
add
imul
sub
test
mov
jne
xor
cltd
idiv
imul
test
mov
jne
xor
cltd
idiv
pop
pop
imul
mov
mov
mov
pop
ret
push
call
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
int3
int3
push
mov
and
mov
sub
cmpl
push
mov
push
push
jge
mov
xor
cmp
lea
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
mov
jne
mov
push
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
cmp
jne
xor
mov
mov
call
cmp
jne
mov
lea
push
mov
call
mov
push
mov
push
push
push
call
add
test
js
mov
mov
push
mov
call
mov
add
lea
call
lea
call
mov
mov
mov
mov
cmp
je
mov
cmp
je
cmp
je
mov
mov
cmpb
jne
xor
lea
push
call
test
je
movl
push
mov
mov
call
mov
cmpl
jge
cmpl
jne
mov
push
push
push
call
mov
test
jne
mov
mov
push
lea
movl
call
push
push
lea
push
push
call
add
test
mov
js
mov
test
jne
mov
lea
mov
call
mov
mov
mov
lea
push
push
call
test
mov
js
lea
push
mov
call
add
push
mov
call
mov
mov
mov
push
push
push
push
push
push
push
call
add
test
mov
js
mov
mov
mov
mov
mov
push
call
lea
call
xor
pop
pop
pop
mov
pop
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
test
je
test
je
mov
push
push
lea
push
push
mov
mov
xor
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
mov
movl
movl
mov
call
mov
cmp
jne
cmp
jne
mov
mov
mov
push
call
mov
test
jne
test
jne
xor
pop
pop
mov
pop
pop
xor
call
add
ret
push
mov
sub
mov
xor
mov
mov
andl
push
push
lea
lea
push
lea
mov
movl
call
call
push
push
push
call
mov
test
pop
pop
je
testl
jne
mov
xor
xor
call
leave
ret
push
call
pop
jmp
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
cmpl
iret
inc
add
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
test
je
mov
mov
push
call
mov
pop
xor
pop
ret
decl
cmpl
jne
lea
movl
call
lea
call
lea
call
mov
call
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
mov
push
lea
push
lea
push
push
mov
xor
lea
push
push
push
xor
mov
mov
mov
mov
mov
movl
mov
mov
sub
pop
and
call
add
cmp
je
mov
cmpl
je
lea
push
mov
call
mov
test
js
cmp
mov
mov
mov
mov
mov
mov
mov
je
mov
lea
push
push
push
mov
call
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
mov
cmp
jne
cmpl
je
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
call
jmp
mov
add
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
cmpl
lea
push
movl
je
mov
test
mov
mov
je
lea
push
call
add
test
je
lea
call
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
lea
call
pop
pop
mov
pop
pop
jmp
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
test
push
je
push
call
add
test
je
xor
mov
mov
mov
mov
mov
movb
movb
movb
movl
movl
movl
movl
push
movl
mov
mov
push
push
call
mov
test
js
push
mov
lea
test
je
lea
mov
mov
push
push
push
mov
call
test
je
lea
mov
mov
push
push
push
mov
call
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
mov
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
jne
mov
push
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
xor
pop
pop
leave
ret
mov
call
cmp
je
mov
call
jmp
testb
je
mov
mov
mov
cmp
je
mov
call
cmp
je
push
mov
lea
call
lea
call
cmp
je
mov
lea
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
push
cmpl
push
push
push
push
je
mov
cmpl
jle
cmpl
jle
mov
mov
mov
add
cmp
jge
mov
mov
mov
add
cmp
jge
mov
add
cmp
jge
mov
add
cmp
jge
mov
cmp
jl
mov
cmp
jl
mov
add
cmp
jg
mov
add
cmp
jg
mov
xor
push
mov
call
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
mov
push
mov
call
pop
movl
movl
movl
movl
mov
pop
pop
pop
pop
ret
int3
int3
int3
sub
push
push
mov
push
push
call
add
test
je
mov
test
mov
movl
mov
je
cmpb
je
mov
test
jne
mov
push
call
add
mov
push
call
add
mov
push
call
mov
mov
mov
add
mov
call
mov
addl
mov
sub
mov
sub
mov
add
add
add
cmp
jg
mov
mov
add
cmp
jg
mov
mov
mov
neg
neg
test
je
xor
add
test
je
xor
flds
add
mov
add
mov
sub
fstpl
mov
flds
mov
add
fstpl
push
mov
call
fildl
fildl
mov
add
fchs
fxch
fchs
fstpl
fstpl
push
call
mov
add
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
push
xor
mov
mov
mov
mov
push
mov
push
lea
mov
mov
mov
call
push
lea
call
mov
mov
sub
mov
sar
push
lea
push
mov
lea
push
mov
lea
push
lea
mov
call
mov
mov
add
test
jne
test
jne
test
js
add
mov
jne
mov
cmp
je
add
cmp
jb
jmp
push
call
add
test
je
movl
movl
mov
mov
test
mov
jne
test
je
mov
push
push
push
call
add
test
js
mov
mov
mov
lea
movl
call
lea
call
mov
test
jne
xor
pop
pop
pop
pop
add
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jl
mov
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
add
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
xchg
mov
sbb
push
and
push
mov
mov
mov
xor
lea
mov
movl
movl
mov
mov
push
push
mov
call
mov
cmp
lea
mov
jb
mov
push
mov
add
sub
cmp
mov
mov
pop
jb
lea
mov
push
lea
mov
mov
call
mov
test
jne
test
jne
pop
xor
pop
mov
pop
mov
add
add
add
xabort
call
add
test
jne
push
call
mov
add
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
mov
mov
cmp
movb
je
cmp
je
mov
mov
mov
push
push
push
movb
mov
mov
call
pop
pop
ret
push
mov
push
mov
cmpl
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
xor
jmp
mov
mov
mov
add
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
mov
and
neg
sbb
inc
ret
push
mov
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
mov
jne
andl
pushl
mov
pushl
call
mov
pop
pop
ret
or
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
lea
add
xor
mov
mov
lea
lea
mov
mov
mov
mov
push
lea
push
movl
mov
call
mov
test
jne
test
jne
xor
add
ret
push
mov
cmpl
ja
push
mov
add
push
mov
call
cmpl
jne
pop
xor
pop
ret
push
mov
mov
lea
push
push
call
test
js
cmpl
jne
push
mov
call
jmp
pop
jmp
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
call
mov
add
test
je
addl
cmpl
je
pop
pop
ret
mov
movl
call
push
call
add
pop
pop
ret
push
mov
push
mov
mov
mov
push
call
test
je
push
mov
xor
cmp
setne
cmpl
lea
mov
jne
cmpb
jne
mov
mov
mov
mov
call
test
je
mov
push
pushl
pushl
pushl
push
call
pop
pop
pop
ret
orl
jmp
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
xor
cmp
mov
mov
mov
je
mov
movzbl
and
mov
mov
test
jbe
mov
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
mov
xor
add
cmp
jne
addl
subl
mov
jne
mov
mov
mov
andb
cmpl
mov
jne
and
mov
mov
add
cmp
jne
mov
mov
pop
pop
mov
pop
add
ret
cmpl
jne
cmpl
mov
jne
movb
add
cmp
jne
cmpb
jne
add
jmp
cmp
je
mov
call
add
jmp
orl
cmpb
je
mov
call
add
jmp
or
jmp
mov
or
mov
mov
pop
pop
pop
add
ret
mov
call
jmp
mov
test
jbe
mov
lea
mov
add
cmp
je
cmpb
jne
addl
cmp
je
mov
add
subl
jne
mov
mov
andb
jmp
or
mov
jmp
push
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
sub
add
add
push
lea
lea
cmp
je
push
mov
mov
add
lea
nop
test
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
je
mov
mov
push
call
lea
push
push
movl
movl
movl
call
mov
test
mov
je
mov
mov
push
call
mov
mov
mov
mov
mov
add
add
add
cmp
jne
mov
pop
mov
addl
mov
pop
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
inc
add
mov
pushf
movsb
inc
add
or
add
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
call
mov
mov
lea
lea
push
rep
call
mov
fldz
mov
add
fstl
lea
fstpl
push
push
lea
push
push
mov
call
inc
add
add
push
push
call
mov
mov
mov
add
call
cmpl
mov
mov
jne
fldz
mov
fldl
fcom
fnstsw
fstp
test
jne
fldl
out
inc
add
fcom
fnstsw
fstp
test
fldl
jne
fld
fadd
fcompl
fnstsw
test
jp
test
fstp
fstp
mov
faddl
fildl
jl
fmulp
sub
fstpl
call
fnstcw
add
movzwl
or
mov
fldcw
fistpll
mov
cmp
fldcw
jae
push
push
call
pop
pop
pop
mov
pop
ret
fldl
fldl
fxch
test
mov
fildl
jl
fld
push
fmulp
lea
fxch
lea
mov
fstpl
fld
fmulp
fxch
fstpl
fld
fmull
fstpl
fmulp
fstpl
call
test
je
fldl
pop
fstps
pop
fldl
pop
fstps
fldl
fstps
fldl
fstps
mov
pop
ret
fldl
fldl
fldl
fxch
jmp
mov
andl
mov
push
pushl
mov
call
pop
mov
mov
xor
pop
ret
push
mov
push
push
xor
cmp
je
xor
pop
leave
ret
cmpl
mov
push
mov
jne
cmp
jne
lea
orb
testb
jne
mov
push
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
push
mov
mov
call
push
pushl
mov
call
test
js
mov
cmp
je
xor
inc
pop
pop
jmp
cmpl
jne
jmp
xor
jmp
push
mov
sub
push
mov
push
push
xor
mov
call
mov
push
lea
call
and
lea
push
lea
mov
movl
mov
call
xor
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
xor
call
push
lea
call
lea
xor
call
and
and
lea
mov
push
mov
lea
movl
movl
ret
in
adc
test
jne
pushl
lea
call
andl
andl
lea
push
mov
lea
movl
movl
mov
add
mov
test
jne
pushl
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
call
xor
pop
pop
pop
leave
ret
mov
mov
mov
cmp
sbb
neg
ret
int3
int3
int3
push
mov
and
sub
push
push
push
mov
push
lea
xor
mov
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
mov
cmp
je
call
mov
mov
cmp
je
call
mov
mov
cmp
je
call
mov
push
call
push
call
add
push
call
pop
pop
pop
pop
mov
pop
ret
push
mov
and
push
decl
cmpl
push
je
pop
mov
pop
ret
mov
test
je
push
mov
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
test
push
je
inc
add
mov
outsb
sbb
int
pop
or
lea
mov
call
mov
lea
push
mov
add
call
mov
test
jne
push
push
call
add
test
je
mov
movl
lea
xor
movl
call
mov
test
mov
je
mov
mov
push
call
cmpl
je
mov
mov
mov
mov
call
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
mov
mov
add
test
mov
jne
push
push
call
test
je
test
je
mov
mov
push
call
mov
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
push
push
call
mov
test
je
addl
mov
test
mov
jne
mov
mov
mov
test
jne
mov
add
add
xor
lea
and
xor
call
xor
pop
pop
pop
pop
ret
mov
jmp
lea
movl
mov
mov
push
push
call
testb
jne
mov
mov
mov
push
mov
call
jmp
mov
push
mov
call
jmp
mov
push
mov
call
jmp
call
jmp
mov
mov
xor
push
mov
call
jmp
push
mov
mov
test
je
cmpl
je
push
mov
test
je
mov
push
mov
push
mov
call
test
js
mov
test
je
movzwl
mov
push
pushl
mov
call
mov
cmpl
jne
mov
mov
call
test
jne
mov
mov
call
andl
push
mov
lea
call
mov
mov
test
je
movzwl
mov
push
pushl
call
mov
mov
call
lea
call
jmp
xor
pop
pop
pop
ret
push
mov
test
je
push
push
push
mov
push
xor
lea
push
mov
mov
mov
push
push
call
cmp
jne
push
mov
call
lea
mov
mov
call
mov
lea
call
lea
mov
call
mov
lea
call
push
call
pop
pop
xor
pop
pop
ret
mov
test
push
push
mov
je
push
push
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
push
call
pop
test
je
call
test
mov
je
mov
push
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
xor
cmp
mov
je
mov
mov
push
call
mov
mov
lea
mov
mov
lea
lea
push
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
mov
add
call
inc
add
cmp
je
mov
mov
mov
lea
push
mov
call
mov
cmp
mov
je
push
mov
lea
mov
call
mov
cmp
je
test
movl
mov
mov
je
add
mov
mov
mov
mov
mov
mov
cmpb
sbb
add
test
or
test
dec
and
call
lea
call
push
push
lea
push
push
push
movl
movl
mov
call
mov
add
test
jne
test
jne
lea
call
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
sub
push
push
push
push
mov
xor
cmp
jne
mov
mov
call
test
je
mov
mov
cmp
mov
jne
cmp
jne
mov
mov
mov
mov
test
mov
mov
jne
mov
test
jne
mov
mov
mov
cmp
mov
jne
mov
mov
cmp
jne
or
mov
test
jne
mov
mov
mov
mov
push
call
orb
pop
pop
pop
pop
add
ret
mov
mov
and
xor
or
jne
test
je
orb
jmp
mov
mov
sub
cmpl
mov
mov
mov
mov
jne
mov
add
mov
mov
mov
lea
push
push
call
lea
lea
call
mov
push
push
lea
push
mov
push
push
call
testb
jne
mov
push
mov
lea
push
push
push
call
add
jmp
mov
mov
add
mov
mov
mov
mov
sub
mov
lea
mov
mov
push
push
mov
call
lea
lea
call
mov
push
push
mov
push
push
push
call
testb
jne
mov
mov
push
lea
push
push
push
call
add
jmp
testb
jne
movl
jmp
mov
mov
mov
xor
cmp
mov
jne
cmp
jne
mov
mov
sub
sub
add
sub
add
mov
mov
cmp
mov
jne
mov
mov
sub
sub
add
sub
add
mov
mov
test
mov
je
push
lea
push
push
push
call
mov
mov
add
cmpl
je
mov
test
je
mov
mov
push
lea
push
call
mov
mov
mov
cmp
jle
mov
cmp
mov
jne
cmpl
jne
mov
sub
add
mov
mov
test
je
mov
mov
push
lea
push
call
mov
mov
cmp
jle
mov
cmp
mov
jne
mov
sub
add
mov
mov
push
lea
push
push
push
call
add
jmp
xor
jmp
mov
test
je
xor
push
lea
push
push
push
mov
mov
mov
mov
call
add
jmp
push
mov
mov
sub
push
mov
push
push
lea
lea
movsl
movsl
movsl
lea
movsl
call
test
je
andl
pushl
push
pushl
call
add
cmpl
jne
pop
pop
pop
leave
ret
cmpl
movl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
cmpl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
mov
movl
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
mov
push
jne
mov
test
jne
test
jne
lea
xor
mov
call
mov
lea
mov
lea
mov
mov
call
cmp
jne
test
je
mov
mov
movzbl
and
neg
sbb
add
cmp
jb
mov
mov
push
lea
push
push
push
movl
call
test
js
cmpl
jne
xor
cmp
mov
je
mov
jmp
mov
mov
test
jne
mov
mov
mov
lea
push
push
push
call
test
js
add
cmpl
jne
cmpl
jne
jmp
mov
mov
lea
push
push
push
call
test
js
cmpl
jne
push
lea
movl
call
mov
mov
lea
push
push
call
test
js
testb
mov
je
mov
mov
push
push
call
mov
push
xor
mov
lea
mov
call
mov
cmp
je
testb
mov
je
mov
mov
push
push
call
mov
lea
add
lea
mov
movl
movl
movb
cmpsb
inc
add
inc
push
js
mov
mov
call
mov
push
lea
push
push
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
lea
call
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
push
push
push
push
mov
mov
mov
call
mov
movl
andl
or
cmp
je
mov
push
call
test
je
mov
mov
testb
jne
push
lea
push
call
test
jne
cmpl
je
lea
push
pushl
mov
pushl
push
call
test
je
lea
push
call
test
je
andl
mov
lea
call
lea
xor
call
lea
xor
call
lea
add
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
add
mov
mov
mov
xor
add
lea
mov
mov
push
push
mov
mov
mov
call
mov
test
jne
pushl
lea
push
push
pushl
push
lea
push
mov
call
mov
mov
mov
andl
test
jne
add
mov
andl
test
jne
push
push
lea
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
push
mov
mov
jne
push
call
add
cmp
je
push
mov
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
push
push
push
call
mov
mov
mov
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
mov
test
movl
movl
movl
movl
je
cmpb
jne
movl
push
call
add
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
movl
call
add
cmpw
je
xor
pop
add
ret
cmpw
jne
mov
mov
call
test
je
push
mov
push
call
add
test
jne
mov
push
call
add
test
je
push
mov
mov
test
je
mov
push
mov
lea
movl
call
mov
test
je
mov
mov
push
call
test
je
push
lea
mov
call
push
call
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
push
push
call
mov
add
cmpl
jne
cmpl
push
jne
mov
push
push
mov
push
push
call
test
js
mov
lea
call
lea
call
mov
pop
pop
pop
add
ret
mov
push
call
jmp
mov
jmp
push
mov
push
push
mov
test
push
mov
jne
push
call
test
pop
je
call
mov
test
je
mov
push
call
pushl
mov
push
call
andl
push
lea
call
mov
test
je
mov
mov
push
call
pushl
mov
pushl
push
pushl
mov
call
test
js
mov
mov
xor
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
push
mov
test
je
mov
push
call
mov
test
mov
jne
test
mov
je
movb
mov
push
call
mov
lea
call
mov
test
je
mov
push
call
mov
test
mov
pop
pop
jne
mov
lea
call
mov
test
je
push
call
xor
ret
mov
mov
cmp
je
test
je
cmpl
je
pushl
push
call
test
pop
pop
jne
xor
inc
ret
xor
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
test
js
mov
cmpl
jne
xor
pop
pop
pop
ret
mov
test
je
pushl
mov
call
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
not
je
jmp
lea
test
jne
cmp
push
push
jae
cmp
jae
test
pop
pop
je
nop
movzbl
xor
and
shr
xor
add
sub
jne
not
pop
ret
mov
shr
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
add
xor
add
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
add
xor
add
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
xor
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
sub
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
jne
jmp
mov
shr
lea
xor
add
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
sub
mov
jne
jmp
add
loop
add
add
call
mov
roll
out
add
test
jmp
int3
int3
sub
push
mov
test
push
mov
push
mov
je
mov
push
mov
call
add
mov
lea
xor
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
mov
mov
push
push
push
mov
call
mov
mov
mov
push
push
mov
push
mov
push
mov
push
push
mov
call
mov
mov
add
mov
lea
call
mov
pop
pop
pop
add
ret
push
mov
push
pushl
andl
mov
lea
call
pushl
mov
pushl
call
push
lea
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
test
mov
push
mov
push
mov
push
mov
movl
je
test
je
test
je
cmpl
mov
mov
je
movl
movl
lea
push
mov
push
push
push
push
mov
movl
call
test
js
xor
cmp
mov
jne
mov
cmp
mov
je
testb
jne
add
mov
mov
lea
push
push
call
test
js
cmpl
mov
jne
mov
mov
mov
push
push
call
test
js
mov
push
mov
mov
call
test
js
xor
mov
mov
mov
cmp
je
testb
jne
mov
mov
cmp
je
testb
je
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
mov
mov
push
lea
push
call
add
lea
push
push
call
mov
test
jne
test
jne
mov
cmp
je
testb
jne
push
lea
mov
call
mov
lea
push
lea
call
add
test
mov
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
mov
mov
mov
mov
lea
push
mov
push
movl
movl
call
test
je
movb
testb
je
mov
test
jne
test
jne
cmpb
jne
push
lea
movl
call
mov
mov
lea
push
push
mov
call
test
mov
js
mov
test
je
cmpl
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
mov
mov
movl
je
movzbl
mov
mov
push
push
mov
call
mov
mov
mov
mov
push
lea
push
mov
lea
push
push
push
call
test
mov
js
cmpl
je
mov
test
je
mov
cmpw
je
xor
mov
push
mov
lea
movl
call
mov
mov
mov
push
push
call
mov
mov
mov
mov
push
push
push
call
lea
call
test
je
mov
mov
mov
push
push
call
lea
call
mov
mov
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
push
push
mov
ret
or
push
add
or
jmp
mov
mov
lea
lea
mov
cmp
je
mov
mov
sub
cmp
push
jne
push
push
call
add
test
jne
mov
mov
cmp
je
mov
cmp
je
mov
push
push
sub
sub
push
mov
push
mov
mov
call
test
je
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
scas
inc
add
or
add
jo
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
jne
mov
push
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
cmp
je
mov
push
mov
add
mov
mov
mov
mov
lea
mov
mov
call
test
je
mov
mov
cmp
mov
push
jne
push
push
call
add
test
je
addl
jmp
mov
mov
call
test
je
pop
xor
pop
add
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lea
add
add
mov
mov
lea
lea
call
test
je
mov
mov
mov
mov
mov
pop
mov
mov
pop
add
ret
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
mov
cmp
je
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fldz
push
push
mov
fcoml
mov
fnstsw
test
je
fcompl
fnstsw
test
je
push
mov
test
jne
push
call
add
test
je
fldl
fstpl
fldl
fstpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
add
pop
pop
pop
ret
fstp
mov
push
movl
call
add
pop
pop
ret
xor
jmp
push
mov
push
lea
push
pushl
mov
call
test
je
mov
mov
mov
xor
inc
pop
pop
ret
push
mov
sub
push
mov
mov
push
mov
mov
call
cmp
je
xor
pop
pop
leave
ret
push
pushl
mov
pushl
call
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
test
push
push
je
lea
mov
test
jne
pop
pop
pop
lea
pop
pop
ret
test
je
sar
sub
mov
je
mov
test
je
mov
push
call
cmp
jne
cmpl
jne
cmpl
jne
add
cmpl
je
mov
mov
and
test
mov
je
addl
mov
test
je
mov
mov
mov
test
je
pop
mov
pop
pop
pop
pop
ret
mov
sub
je
mov
jmp
movl
mov
mov
push
mov
call
pop
pop
pop
xor
pop
pop
ret
lea
or
jmp
cmpl
je
mov
call
test
je
movl
jmp
push
push
mov
mov
call
add
add
push
mov
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
lea
call
lea
call
testb
movl
je
push
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
test
je
mov
mov
xor
cmpl
movl
mov
movl
je
mov
lea
push
lea
push
mov
mov
push
mov
call
mov
mov
mov
test
mov
je
mov
lea
mov
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
or
add
mov
mov
xor
mov
test
jns
mov
mov
test
jne
test
jne
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
push
call
xor
test
je
mov
orl
jmp
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
mov
push
lea
lea
movl
movl
mov
mov
call
testl
jne
mov
lea
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
mov
mov
add
lea
push
push
call
mov
test
jne
test
jne
mov
mov
mov
mov
mov
lea
call
mov
test
jne
test
je
mov
push
call
mov
add
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
push
mov
call
cmp
jne
mov
mov
call
test
jne
cmp
jne
mov
lea
push
lea
push
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
call
mov
test
js
testb
jne
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
je
mov
push
call
add
mov
test
js
mov
mov
mov
mov
lea
mov
call
jmp
mov
add
call
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
mov
cmp
mov
je
cmp
jg
mov
cmp
je
mov
cmp
je
cmp
je
mov
cmp
je
cmp
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
mov
call
mov
push
mov
call
jmp
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
mov
cmp
je
cmp
je
cmp
je
cmp
jne
addl
jmp
mov
mov
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
jmp
push
mov
andl
push
lea
mov
test
movl
jne
lea
call
mov
call
testb
je
push
call
pop
pop
mov
pop
ret
push
mov
push
push
mov
cmp
je
mov
mov
lea
mov
mov
mov
leave
ret
push
mov
mov
sub
push
xor
test
je
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
call
push
mov
lea
mov
call
mov
cmp
mov
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
pushl
mov
add
mov
call
mov
push
lea
call
mov
lea
push
push
call
lea
call
lea
call
cmp
je
cmp
je
mov
cmp
je
pushl
mov
call
cmp
je
mov
mov
call
mov
mov
mov
call
cmp
jne
call
mov
lea
call
lea
call
pop
lea
call
lea
call
pop
mov
pop
leave
ret
mov
cmp
je
jmp
add
int3
int3
int3
push
mov
and
push
push
mov
push
push
mov
nop
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
jne
cmpw
je
push
call
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movw
cmp
jne
mov
mov
mov
cmp
je
cmp
jne
cmpw
je
cmp
jne
cmpw
je
cmp
jne
cmpw
jne
mov
push
mov
call
cmp
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
pop
pop
pop
mov
pop
ret
mov
push
push
push
push
push
push
mov
call
jmp
lea
mov
cmp
lea
je
jmp
mov
orl
mov
call
jmp
mov
push
mov
call
jmp
mov
push
push
push
call
jmp
push
mov
push
cmpw
jne
mov
test
je
mov
push
call
mov
test
mov
je
mov
mov
push
pushl
push
push
call
lea
call
xor
leave
ret
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
push
push
mov
test
je
mov
push
call
mov
mov
mov
leave
ret
mov
andl
test
je
lea
push
push
push
add
push
call
and
je
andl
test
je
andl
pushl
lea
call
mov
andl
lea
mov
call
mov
test
je
jmp
sub
mov
xor
mov
mov
push
push
mov
push
mov
push
mov
cmpl
je
mov
test
mov
jne
test
jne
lea
push
push
call
lea
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
push
lea
push
push
call
test
lea
js
call
mov
test
jne
test
jne
mov
movl
xor
mov
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
lea
push
push
movl
call
add
test
je
jmp
lea
push
push
call
mov
xchg
add
push
in
int
add
add
add
xchg
xchg
add
add
mov
jb
push
out
add
mov
add
xchg
addb
roll
jbe
add
add
add
gs
add
sahf
xchg
gs
add
lea
add
test
pop
sti
push
pop
jno
cli
pusha
lea
hlt
add
add
mov
leave
call
mov
fucomp
push
add
fwait
add
push
mov
add
nop
lock
mov
add
lea
mov
popa
roll
add
mov
mov
in
lock
xor
fiaddl
testl
scas
add
mov
popl
rclb
neg
lods
add
mov
mov
add
push
push
push
push
lea
push
push
call
add
add
nop
mov
in
movb
stc
push
andl
clc
int
jecxz
pop
add
push
rolb
jmp
add
add
add
add
pop
push
add
mov
filds
jp
scas
call
scas
cli
add
mov
add
data16
std
stc
jae
rolb
add
mov
lea
pop
movl
popl
push
push
push
push
push
push
push
lea
push
push
push
call
mov
add
into
add
fildl
xchg
jb
mov
filds
not
add
add
sahf
pop
add
add
jp
mov
add
pop
add
imul
mov
pop
filds
xchg
mov
fstpt
jo
scas
addb
movb
jl
add
add
add
mov
lea
pop
push
push
push
push
push
push
call
add
xchg
jmp
mov
idivb
mov
add
add
xchg
add
scas
in
xchg
test
add
cmpb
xchg
addl
lods
ja
add
pop
fcomip
add
icebp
xchg
xchg
add
mov
aad
in
add
pop
addr16
add
jb
add
imul
add
pusha
pop
lea
sahf
mov
add
add
arpl
push
push
push
call
incb
cli
xchg
add
fiadds
mov
push
add
add
add
mov
shl
add
add
into
gs
sti
add
mov
add
lea
add
out
fadds
icebp
add
add
add
jo
rolb
xchg
popf
add
push
movsb
mov
add
add
add
pop
mov
lea
pop
call
call
push
push
call
push
shll
popa
pop
lret
add
std
cwtl
jp
into
popl
add
mov
add
add
mov
test
add
insb
fwait
jae
popa
stc
mov
push
scas
add
jae
cmpsb
mov
add
add
pop
jge
into
xchg
add
add
cmpsl
xchg
mov
add
lret
push
pop
jmp
loope
add
jl
add
add
imul
add
add
in
ljmp
or
add
pusha
arpl
add
lea
push
push
push
push
push
call
lods
add
xchg
add
fildll
loop
sti
add
mov
add
add
jmp
add
bound
cltd
loopne
mov
xchg
add
add
add
cmpsl
addl
add
pushf
xorl
add
add
roll
scas
add
mov
jbe
add
in
jns
mov
jle
mov
lea
pop
jmp
push
lea
push
lea
push
push
push
call
out
test
add
clc
add
add
js
filds
add
pop
mov
test
out
call
imul
hlt
addl
add
add
js
xchg
mov
iret
jns
fwait
roll
add
pop
roll
fstpt
add
lret
add
pop
ret
mov
push
lea
push
push
lea
push
push
push
lea
push
call
add
ret
add
jmp
xchg
add
out
mov
add
lret
jns
sti
add
movl
add
mov
rcrb
add
andb
mov
add
pop
imul
cmc
hlt
into
add
push
rclb
add
add
mov
fwait
xchg
mov
add
fldl
lods
lcall
pop
mov
push
push
push
lea
push
lea
push
call
add
lods
push
gs
mov
jmp
add
fsubl
add
jno
mov
rolb
add
jno
push
jno
add
add
stos
stos
outsl
pop
lds
cmpsb
loopne
xchg
add
sahf
lret
filds
add
test
cli
loop
add
add
mov
add
outsl
les
mov
addb
mov
lea
pop
add
add
add
push
push
push
call
add
shlb
sar
fisttpll
add
loope
mov
add
add
pop
jp
xchg
xchg
imul
in
mov
xchg
icebp
mov
add
pop
add
jp
arpl
je
movsl
test
ret
gs
mov
add
xchg
ficomps
add
fadd
add
add
addl
add
jae
aad
pusha
clc
mov
rcrb
in
imul
les
add
sti
push
push
push
push
push
push
call
shl
add
or
flds
sahf
mov
add
sti
add
outsl
stc
lcall
push
add
outsl
push
stc
imul
mov
push
push
loop
add
in
add
call
jne
cmc
bound
gs
addb
add
add
xchg
imul
xchg
pop
add
push
push
lea
push
push
push
call
mov
add
add
insb
lret
add
mov
mov
add
pop
add
fs
add
sbbl
add
jle
mov
out
ret
push
loopne
add
xchg
out
roll
pop
add
add
mov
mov
add
add
add
mov
lea
pop
call
mov
push
push
push
push
push
call
add
add
mov
add
xchg
call
add
mov
add
add
add
mov
shr
mov
add
add
jae
xchg
insb
add
pushf
call
shrl
xchg
out
add
add
cltd
stos
add
adc
mov
add
lods
add
les
pop
xor
push
lea
push
push
lea
push
lea
push
lea
push
call
test
jb
out
add
ret
push
push
sarb
add
lock
cli
add
data16
addb
add
xchg
aad
jno
add
into
mov
jge
add
add
add
mov
add
in
add
mulb
outsl
add
movsl
add
out
insb
add
lea
pop
add
push
push
rol
push
xor
add
add
sub
dec
sub
ror
dec
lea
pop
add
add
shr
pop
push
lea
push
push
push
call
add
mov
ret
add
jp
push
addl
add
add
add
add
icebp
add
add
cld
mov
add
ljmp
pop
mov
stc
out
add
lahf
pusha
out
pop
add
arpl
pop
push
xchg
roll
lcall
mov
mov
lea
pop
pushl
call
push
push
push
push
call
mov
add
add
lds
mov
lret
push
add
les
jl
in
add
add
rcl
add
add
push
arpl
push
mov
add
leave
add
add
add
int
push
mov
jle
insb
pop
mov
add
pop
movsl
int
pop
in
cmpsb
hlt
nop
add
fsubrs
adc
inc
call
push
push
push
push
push
call
add
leave
je
xchg
rolb
add
add
cmc
xchg
sub
aam
add
icebp
fbld
movsl
add
cld
add
cmpsb
out
mov
int3
add
cmpsl
mov
mov
jae
aam
add
iret
xlat
ljmp
add
push
mov
lea
std
xchg
push
add
fildll
add
jge
jbe
popl
testb
xchg
jbe
imulb
into
rorl
mov
lea
pop
movl
push
push
push
lea
push
call
jns
add
add
out
fs
add
movsl
add
add
pop
add
add
pop
pop
in
add
add
int
flds
int
push
add
mov
iret
pop
add
xchg
ja
add
movsb
aad
mov
in
ja
mov
push
add
add
cmc
shrl
cmp
add
add
mov
mov
lea
pop
lea
push
push
push
lea
push
call
icebp
hlt
repnz
add
divl
mov
add
add
push
loop
lret
cmpl
xchg
outsl
mov
rcrl
jo
add
fcmovne
add
add
in
add
add
fcoms
pop
add
pop
add
add
mov
mov
add
insb
mov
insb
add
jmp
test
pop
mov
jno
mov
lea
pop
pushl
pushl
push
push
push
lea
push
lea
push
lea
push
lea
push
call
jle
add
mov
js
bound
add
rcrl
add
cmpsl
mov
fwait
mov
jb
fiaddl
jbe
fdivl
jns
add
mov
add
shlb
pop
add
aad
jns
int3
add
cwtl
add
push
xchg
cld
ja
xchg
imul
mov
lea
pop
call
push
push
lea
push
call
mov
mov
test
arpl
les
xlat
lock
mov
add
pushf
add
add
add
add
and
add
mov
add
push
add
add
bound
add
add
add
jo
add
test
add
std
add
cmpsl
arpl
mov
popa
or
pushl
push
push
push
lea
push
push
lea
push
push
push
call
cmpsl
mov
insb
add
xchg
outsl
add
add
ret
addr16
sub
mov
loope
mov
add
add
add
xchg
add
add
add
add
add
xlat
in
push
push
lahf
bound
cmpsb
add
xchg
add
frstor
mov
stos
pop
jmp
mov
fucomi
add
mov
mov
lea
pop
pushl
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
mov
mov
add
mov
rorb
add
sti
mov
jne
mov
repnz
fistl
addr16
loope
test
mov
add
addl
mov
mov
idivb
stos
insb
int
add
popa
add
push
add
mov
add
mov
lea
pop
call
push
push
xor
dec
sub
ror
push
push
pop
add
shr
xor
lea
sub
sub
ror
pop
dec
pop
push
push
push
call
add
add
jb
je
adc
arpl
fidivs
xchg
lahf
add
stc
out
push
add
add
arpl
bound
jns
into
pop
xchg
loop
add
insb
add
fcoms
add
add
add
out
addl
pop
add
je
add
add
ja
cmp
loope
fmull
jne
call
push
push
push
push
push
push
push
call
push
jp
negb
mov
push
in
push
lcall
push
add
pop
add
in
mov
test
add
mov
pop
pop
mov
mov
popa
add
out
sarl
push
test
ret
cwtl
add
mov
add
mov
lea
pop
push
push
push
inc
add
add
push
xor
add
xor
not
sub
xor
sub
pop
dec
dec
pop
push
push
lea
push
push
push
push
push
push
push
push
call
sti
add
ja
add
add
stos
mov
push
add
add
icebp
or
cld
in
add
add
add
push
adc
add
clc
add
mov
add
arpl
popl
add
add
cmpsb
mov
scas
add
pop
test
sbb
add
add
add
pop
push
push
call
push
push
push
push
push
push
call
lret
out
add
push
add
out
jnp
xchg
movl
cltd
test
jecxz
je
add
mov
add
iret
xorb
add
shr
jb
jae
gs
cld
in
hlt
movl
add
add
lds
lds
add
add
push
add
lahf
popa
add
add
xlat
add
add
test
add
add
pop
mov
push
push
push
push
push
push
push
push
lea
push
lea
push
call
pop
add
add
out
nop
add
pop
in
add
ljmp
add
jb
lcall
add
cld
lea
add
add
test
pop
pushf
add
push
pop
stos
in
lret
pop
faddl
add
jo
jp
add
add
xchg
add
lcall
jne
add
out
out
jae
add
leavew
add
lea
pop
mov
push
lea
push
push
push
push
call
mov
into
add
add
pop
add
fwait
add
add
jl
mov
fs
add
popl
add
push
test
xchg
add
add
add
add
add
fadds
mov
add
jmp
add
mov
add
xchg
add
popa
in
add
pop
add
add
add
push
lea
push
lea
push
lea
push
push
call
add
testl
iret
icebp
mov
data16
test
add
cltd
pop
mov
js
mov
mov
add
in
add
add
mov
in
add
push
mov
push
add
sti
pop
mov
int
testb
in
add
adc
mov
push
push
push
push
push
push
push
lea
push
push
call
add
add
arpl
add
clc
add
ljmp
lret
pop
jmp
test
add
mov
cli
add
aam
mov
mov
add
push
xacquire
push
mov
mov
jl
add
add
add
add
add
int
xlat
test
fcmovbe
jae
int
sti
rolb
divb
add
mov
in
scas
add
fwait
add
ja
test
int3
lea
pop
xor
push
push
push
push
lea
push
push
lea
push
push
call
add
pushf
push
aam
test
push
add
shlb
mov
mov
ret
add
scas
push
push
movsl
add
add
add
addr16
ja
mov
mov
mov
pop
add
cmc
fldcw
or
mov
add
aad
mov
pusha
add
add
mov
add
mov
lea
pop
add
push
push
push
push
push
push
push
lea
push
lea
push
push
call
lods
pop
add
jmp
add
add
add
pushf
out
add
rcr
xchg
add
out
lcall
mov
add
add
rolb
testl
xchg
add
mov
mov
add
mov
add
fmulp
add
add
imul
jge
jp
jecxz
add
add
jns
add
sub
jne
push
lea
push
lea
push
call
add
add
add
hlt
mov
add
pop
lret
add
mov
lret
add
add
test
add
add
enter
add
push
out
add
add
lods
shll
mov
aam
add
loope
sti
pushf
popa
add
mov
lea
pop
push
mov
xor
push
lea
push
lea
push
push
push
push
push
lea
push
call
push
test
rclb
add
addl
xchg
movsl
cmpsl
pop
push
add
add
add
add
out
fldenv
jne
arpl
aad
fisubrs
gs
lcall
orb
pop
mov
call
test
stc
jo
add
add
fsin
xlat
nop
add
pop
add
call
aad
jns
mov
lea
pop
add
pop
mov
xor
push
lea
push
push
push
call
test
push
add
add
add
jo
fists
in
add
mov
add
addl
add
push
imul
mov
push
lock
add
insb
jne
add
jnp
mov
add
into
add
add
add
cmpsl
pop
add
push
out
add
mov
add
shl
fidivl
add
repnz
mov
pusha
add
jge
rcrb
hlt
lea
pop
push
mov
xor
push
lea
push
push
push
push
call
add
add
out
lock
addr16
mov
xchg
in
fistpl
add
add
iret
test
ficomps
clc
add
mov
add
add
popa
cmpsb
pushf
fs
addl
add
lods
mov
mov
rorb
mov
popa
fs
loope
cltd
add
fwait
mov
add
add
aam
bound
sub
push
push
push
push
push
push
push
push
push
call
sti
js
xchg
fiadds
aad
add
in
jmp
add
leave
add
sbbl
std
add
int3
sti
push
mov
mov
pop
out
lea
jbe
pop
add
jbe
ljmp
mov
lret
addl
mov
pop
mov
incb
ja
scas
lock
call
cltd
jle
add
xchg
les
add
addr16
pop
rep
push
push
push
push
push
lea
push
call
mov
ja
add
add
add
cltd
add
add
mov
hlt
add
mov
pop
lcall
add
pop
push
loopne
jp
sti
add
add
jge
push
cli
add
add
xchg
incb
push
add
popa
jp
in
out
sti
mov
pusha
add
add
in
fdivr
mov
mov
add
xchg
add
mov
mov
lea
pop
pop
mov
add
push
push
call
add
add
lock
mov
test
clc
add
popa
in
add
into
int3
cld
xchg
xchg
add
movsb
jae
add
movsb
mov
cmpsl
fsubrp
push
out
add
jno
in
sti
scas
pop
add
push
jb
iret
into
push
add
pop
pushf
add
fwait
add
add
cltd
mov
push
add
pop
cld
js
mov
add
jge
jne
add
fmull
ret
add
add
push
push
push
push
push
lea
push
push
push
lea
push
call
popf
pop
mov
mov
pop
lods
add
mov
mov
add
jae
add
add
push
add
mov
movsb
add
lock
add
lods
stos
add
mov
add
lods
mov
push
mov
add
insb
xorb
xchg
add
nop
pop
je
shl
jns
push
jae
add
mov
lea
pop
add
mov
xor
push
push
push
lea
push
call
add
jns
js
jge
cltd
lock
loopne
add
add
test
add
push
lcall
add
add
mov
mov
jno
xlat
add
mov
add
mov
push
add
mov
movsb
add
outsl
add
add
add
mov
xchg
add
add
ret
fildl
add
fucomip
rorl
hlt
lea
pop
mov
push
push
push
push
call
add
roll
sahf
mov
add
xchg
movsl
add
in
add
nop
leave
mov
add
addl
add
imul
add
test
add
negb
add
add
movsb
mov
in
lock
add
add
test
sti
mov
addr16
lea
pop
xor
push
lea
push
push
push
push
lea
push
push
call
jp
nop
aam
add
add
add
loopne
mov
add
add
stos
scas
xchg
add
add
loope
jle
add
add
jbe
add
lahf
add
insb
pop
xchg
insb
push
cld
mov
into
mov
ficompl
add
add
push
add
mov
lea
pop
add
push
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
call
bound
in
xchg
add
mov
pusha
shlb
add
add
add
jno
add
out
lahf
add
add
jnp
popa
imul
cltd
add
mov
add
add
push
add
add
pop
xchg
idivl
mov
incb
mov
add
roll
enter
lock
jnp
clc
add
rolb
loope
mov
lea
pop
mov
xor
add
push
lea
push
call
add
int3
xchg
loope
pop
jle
aam
pop
add
pop
add
int3
pop
add
add
add
jae
lods
test
jle
lret
mov
jns
in
add
mov
lcall
mov
out
cli
pop
mov
cltd
aam
add
mov
add
scas
xchg
add
add
fcomp
stos
out
push
insb
add
popf
fstpl
add
fists
pop
add
mov
push
push
sub
rol
push
xor
add
add
sub
not
pop
inc
add
pop
push
push
push
push
push
push
push
push
push
lea
push
call
lret
cmc
add
add
add
add
jne
xchg
cld
add
add
add
add
add
test
out
add
fwait
jp
in
pop
mov
ret
pop
jns
fsts
xchg
add
aad
ljmp
add
add
lods
lret
lods
xchg
ret
test
add
je
push
add
nop
in
add
fmull
jne
call
push
push
push
shr
push
sub
add
add
dec
sub
not
pop
pop
push
push
push
push
push
push
push
push
push
push
call
add
add
add
ljmp
add
mov
mov
add
add
add
scas
add
loopne
add
loopne
xchg
add
add
add
xchg
add
add
fwait
add
mov
mov
add
jo
arpl
fs
add
xchg
rcrl
pushf
mov
pop
mov
popa
sub
push
push
push
push
push
lea
push
push
call
lcall
pop
mov
add
push
add
add
add
add
test
clc
jno
aam
add
stos
add
roll
mulb
jge
add
add
add
addl
xlat
pop
add
add
lods
pushf
add
jo
mov
fdiv
mov
out
add
push
add
mov
add
mov
lea
pop
push
push
push
push
push
lea
push
lea
push
call
scas
pop
neg
jp
faddl
xchg
add
icebp
cltd
lods
gs
nop
cli
add
jl
filds
push
xorl
xlat
cli
add
addl
add
in
push
ja
add
int
stc
stc
add
arpl
add
icebp
mov
jmp
xchg
pushf
ja
fiadds
add
jp
stos
arpl
lcall
jmp
jp
in
pop
jp
mov
hlt
lea
pop
call
push
push
push
push
push
push
call
mov
add
stc
bound
add
test
add
mov
pop
mov
xchg
add
add
mov
mov
add
xchg
mov
fwait
jbe
add
add
add
add
in
int
add
pusha
cld
mov
mov
out
add
xchg
jae
add
test
aam
bound
pop
mov
push
push
push
xor
shl
pop
mov
push
push
push
lea
push
call
jecxz
add
add
push
in
out
mov
add
je
add
add
add
add
fiaddl
roll
mov
push
test
std
jl
add
lahf
add
add
add
add
pop
ljmp
mov
add
mov
add
out
mov
jmp
add
jp
cld
int
fistpll
mov
add
scas
add
pop
add
push
lea
pop
add
add
mov
xor
push
xor
pop
add
push
push
call
mov
icebp
lods
add
je
add
add
mov
add
push
add
mov
in
fdivp
pop
lret
add
outsl
add
mov
push
add
insb
xchg
shlb
orl
pushf
add
xchg
add
add
push
push
insb
mov
jecxz
bnd
pop
filds
add
add
mov
lea
pop
push
mov
xor
push
push
push
lea
push
call
mov
insb
fcomi
add
add
icebp
rcrb
add
ja
pop
add
add
add
add
std
add
data16
add
add
loope
add
add
lea
lods
bound
scas
add
add
shrb
mov
add
xchg
add
cli
mov
jns
add
pop
pop
mov
pop
call
hlt
lea
pop
add
push
push
push
push
push
push
call
add
add
movsl
mov
pop
add
mov
stc
add
pop
add
je
ror
loop
mov
add
rcr
add
add
push
mov
add
fiadds
ret
add
jl
pop
testl
add
cmc
add
add
lret
mov
rcr
jb
andb
jb
pop
mov
mov
orl
mov
fidivrl
pusha
sbb
push
push
push
push
push
push
push
call
ja
add
mov
add
add
mov
add
test
fsubp
scas
add
add
scas
test
add
pusha
movsb
lret
add
iret
fs
mov
shl
cltd
mov
xchg
cmpsb
ja
mov
add
in
add
pop
addb
jp
in
xchg
add
pop
lods
pop
clc
add
mov
mov
addr16
mov
xor
push
push
push
lea
push
call
add
add
data16
push
add
test
test
mov
cmpsb
add
push
mov
add
lcall
roll
imul
movsb
add
add
add
xlat
jecxz
les
loopne
data16
stc
add
mov
add
jmp
addb
jp
movsl
jbe
jno
cmpsb
add
mov
mov
push
add
ljmp
int3
lea
pop
rep
push
lea
push
push
push
push
push
lea
push
push
push
call
xchg
add
mov
add
leave
add
mov
add
mov
iret
lock
push
hlt
cmpb
add
add
movb
add
add
add
andb
mov
js
mov
add
cli
add
add
add
addr16
jecxz
pop
rcl
add
add
and
mov
push
push
push
push
call
add
push
push
xchg
jae
add
pop
jl
jb
add
repnz
lahf
mov
fs
lret
mov
flds
roll
add
add
shll
add
imul
add
add
push
pop
add
test
mov
popf
add
out
pop
add
or
xor
push
lea
push
push
lea
push
push
lea
push
call
int3
arpl
add
add
add
xchg
mov
add
jns
mov
add
add
popa
movl
xchg
add
movsb
add
cmc
push
mov
xchg
add
pop
pop
out
loope
xchg
popa
aad
add
iret
add
push
push
movsl
out
add
add
add
movb
add
movl
mov
add
push
xlat
add
out
mov
lea
pop
add
push
lea
dec
inc
pop
or
je
mov
push
push
push
lea
push
push
call
jns
xchg
out
jnp
add
add
call
mov
fwait
add
add
jecxz
add
aad
int3
mov
loop
out
testb
mov
xchg
pop
push
add
push
add
add
faddl
add
lret
add
xlat
insb
arpl
out
mov
cmpsb
in
fsts
pop
add
push
in
cld
lea
pop
xor
push
push
push
call
xchg
in
add
mov
xchg
push
mov
data16
add
add
add
jge
out
pop
add
test
rcrl
pop
rolb
cltd
adcb
test
movsl
in
add
test
ljmp
imul
xlat
add
add
leave
add
cld
lea
pop
add
push
lea
push
lea
push
push
lea
push
push
push
lea
push
push
lea
push
call
in
xchg
xchg
cld
add
loope
std
xchg
add
pop
push
addl
imul
pop
push
add
add
fldcw
jle
push
lods
add
mov
xchg
jmp
mov
sarb
into
jge
jge
cwtl
icebp
xchg
push
jb
add
mov
lea
pop
mov
xor
push
sub
pop
add
push
push
call
addl
add
test
out
add
test
add
xchg
testb
add
stc
out
add
add
in
push
jge
mov
bound
add
add
pop
add
mov
add
in
add
add
addr16
add
add
add
scas
pop
movsl
mov
lds
add
xchg
xchg
add
mov
add
test
in
orb
add
push
ror
inc
pop
push
mov
xor
push
lea
push
push
push
push
push
push
call
add
cld
mov
mov
xchg
mov
add
mov
in
mov
add
add
loopne
out
mov
add
pop
hlt
add
mov
pushf
cmpsb
call
add
aam
add
add
mov
fiadds
add
popa
ljmp
add
in
xchg
push
add
add
sahf
add
fistpll
add
jl
and
les
lock
push
push
push
lea
push
push
call
insb
bnd
xchg
enter
xchg
shlb
mov
lret
xchg
add
jb
add
loopne
fildl
add
add
lock
repnz
gs
movsl
stos
roll
add
mov
add
cwtl
je
add
push
mov
imul
add
mov
lea
pop
pop
push
push
push
push
push
push
call
mov
cltd
xlat
pop
add
jmp
add
movb
sti
add
cmpsb
add
add
add
add
add
lods
jp
add
add
add
add
sahf
enter
push
cmc
ret
stc
mov
add
jmp
xchg
add
add
ficomps
add
add
add
repnz
mov
add
fs
lock
add
lret
add
lock
lahf
mov
lea
pop
rep
push
push
call
call
js
mov
mov
jmp
push
testb
add
pop
add
test
add
in
add
add
stos
add
add
jb
fiadds
add
add
data16
add
jle
jo
add
add
mov
add
add
int
jnp
gs
add
pop
testl
aam
bound
pop
mov
xor
push
push
push
lea
push
push
push
call
test
add
pushf
add
add
enter
aam
ljmp
add
add
add
enter
mov
addl
add
add
mov
sarb
cmpsl
add
add
movsl
rcrb
test
test
sti
add
pop
popa
add
add
xchg
in
fcompl
ljmp
mov
lea
pop
or
je
mov
add
push
push
push
lea
push
push
push
call
popa
jnp
scas
scas
add
add
lds
xchg
lcall
movsb
iret
xchg
gs
push
add
pop
imul
add
jl
add
add
insb
pushf
scas
add
test
int
add
lcall
add
add
into
insb
add
add
add
lock
pop
add
js
mov
adc
sbb
movb
add
push
push
push
push
push
push
lea
push
push
push
call
pop
push
mov
out
mov
mov
popf
xchg
add
stos
add
jle
add
scas
pushfw
mov
add
mov
mov
add
push
add
movsl
add
pop
imul
sti
ror
incb
add
fildl
mov
add
add
iret
add
in
into
push
mov
lea
pop
rep
pop
push
push
add
push
and
add
dec
ror
rol
rol
sub
lea
pop
inc
add
pop
push
lea
push
push
push
lea
push
push
call
jnp
jo
add
add
lds
add
add
scas
add
add
mov
jb
add
add
mov
add
add
outsl
mov
add
int
add
cltd
add
cmpsl
add
lods
les
mov
outsl
clc
roll
mov
sarb
xchg
jp
xchg
mov
mov
jge
add
loopne
int3
lea
pop
pop
push
lea
push
push
push
call
cmc
add
add
add
mov
jmp
add
add
add
fnstenv
insb
pop
enter
add
shll
loope
out
add
cltd
imul
add
leave
jns
jo
ret
push
jle
pop
push
movsb
stc
stc
jbe
jmp
jmp
enter
nop
xchg
add
add
mov
add
jle
hlt
lea
pop
mov
push
push
push
call
int3
add
stos
cmc
jne
aam
push
out
add
mov
add
divl
add
mov
add
xchg
add
into
mov
stos
mov
mov
mov
add
movsb
int
std
add
push
stc
stos
add
mov
add
add
test
xorl
lea
pop
mov
mov
push
push
lea
push
push
lea
push
push
call
mov
imul
out
push
mov
je
fisubl
add
arpl
add
popf
cmpsl
mov
jb
add
jns
roll
mov
add
incb
incb
add
in
add
push
cmpsl
xchg
fldt
pop
addl
add
add
mov
add
sarl
in
add
add
aam
fisttps
pop
jmp
push
sub
dec
rol
pop
push
push
push
push
push
push
push
push
lea
push
push
call
pop
mov
mov
pop
push
into
cli
add
add
in
mov
mov
out
add
lea
mov
add
mov
add
add
data16
add
add
cmpsl
mov
add
push
add
mov
add
roll
add
mov
rcl
mov
out
clc
add
fcmovb
add
add
add
xchg
mov
mov
outsl
add
mov
lea
pop
mov
add
push
push
push
call
mov
roll
stos
js
mov
ja
pop
add
in
jecxz
pop
add
movsb
ret
ret
loope
add
mov
flds
mov
add
push
mov
add
shr
cmp
mulb
lock
add
add
push
add
add
scas
pop
int
add
cmp
lds
add
pop
push
push
push
push
push
push
call
push
fists
iret
popf
in
jnp
std
push
add
lock
pop
add
add
add
in
add
testl
mov
test
add
jne
fld
add
mov
insb
push
add
test
add
hlt
fs
mov
mov
add
lret
add
mov
add
add
add
add
jbe
add
cld
lea
pop
push
mov
pop
push
push
push
lea
push
call
clc
add
out
add
push
pop
fsubrp
xchg
push
add
bnd
add
add
mov
add
fstp
add
mov
jne
scas
add
clc
add
jecxz
push
lods
add
rolb
xchg
add
pop
add
into
jnp
stos
add
jbe
add
add
jp
pop
shlb
leave
test
add
add
add
add
lret
jmp
popa
adc
push
inc
dec
pop
pop
pop
push
pop
leave
ret
push
push
lea
push
push
lea
push
lea
push
push
push
call
xchg
push
aad
add
mov
add
mov
add
add
loop
pop
add
xchg
add
mov
fsubr
xchg
mov
in
jmp
lods
les
add
add
add
add
popa
divb
add
pusha
add
cli
add
iret
lret
add
cmpsb
add
xchg
xchg
add
cmpsb
mov
jecxz
out
shr
into
pop
push
mov
lea
pop
mov
push
rol
sub
xor
pop
add
push
push
push
shr
inc
pop
push
push
movl
push
push
push
push
lea
push
call
add
jecxz
cwtl
lock
rcrb
add
cmpl
imul
jge
pop
hlt
mul
add
jo
xchg
add
push
lahf
cltd
mov
shl
push
add
add
add
std
fst
out
scas
scas
aad
aam
faddl
jmp
movsb
int
xchg
test
gs
mov
add
iret
add
adc
addl
test
je
push
push
lea
push
push
call
jmp
ljmp
fisubs
pop
add
fwait
lods
pop
loope
repnz
add
jp
pop
test
xchg
add
add
in
rcrl
add
xchg
popf
pop
add
mov
pop
lea
xchg
lds
test
add
jno
leave
xchg
add
enter
stos
out
pop
xchg
in
stc
cmpsw
add
jmp
mov
add
add
add
cld
add
cmpb
popf
pop
push
mov
lea
pop
mov
push
push
push
push
lea
push
call
mov
in
jecxz
cmpsb
add
jnp
in
add
loope
sti
jb
bound
icebp
add
lea
add
mov
gs
mov
in
test
add
mov
fadds
add
add
mov
add
cmc
add
add
pop
mov
adc
pop
push
not
sub
ror
pop
pop
pop
pop
push
push
push
lea
push
lea
push
call
addr16
stc
scas
mov
xchg
mov
scas
aad
cmpsl
arpl
mov
test
stc
add
mov
add
mov
repnz
lea
scas
rcl
clc
int3
xlat
cltd
add
add
jmp
add
scas
add
add
add
lahf
add
mov
add
add
jns
lock
add
pop
add
add
loope
mov
mov
lea
pop
leave
ret
push
push
sub
pop
mov
add
push
push
lea
sub
pop
push
push
lea
pop
push
push
testl
push
push
push
lea
push
push
call
add
add
add
repnz
jle
add
jo
mov
push
cltd
pop
add
lods
lcall
fadds
addb
test
xchg
jne
mov
jb
add
pop
iret
add
mov
out
lods
xchg
jge
popa
add
pop
pop
add
imul
xchg
fsubs
outsl
pop
mov
lea
pop
addl
push
sub
xor
inc
shl
pop
push
push
sub
pop
call
mov
push
push
lea
push
push
call
add
fdivr
loop
add
movb
mov
jge
aam
add
fiaddl
add
scas
add
cwtl
xchg
std
les
add
hlt
add
ret
push
shll
fwait
xchg
js
test
pop
add
jp
add
cwtl
add
add
push
add
stos
pop
add
push
shl
add
ja
add
shlb
add
lret
aam
push
mov
cld
mov
lea
pop
pushl
push
lea
push
call
cmc
add
mov
int3
addl
xchg
jecxz
add
add
loop
add
add
call
xchg
add
add
sahf
add
pop
add
mov
lahf
mov
jbe
pop
fs
popf
push
jns
mov
add
pop
ror
add
filds
test
add
lret
arpl
fists
jno
xchg
std
add
add
fadds
add
std
shlb
add
mov
lea
pop
push
push
inc
inc
pop
push
call
cmpl
jne
push
push
lea
push
push
push
push
push
push
lea
push
call
cld
mov
lret
add
xchg
jne
ja
add
jecxz
xchg
js
testl
js
insb
ret
scas
add
movl
icebp
arpl
cmc
imul
mov
add
add
les
loope
arpl
add
add
in
pop
mov
pop
and
cmpb
mov
data16
pop
pop
push
lea
push
push
lea
push
push
call
leave
repnz
add
add
out
add
rolb
shlb
jno
add
call
lcall
add
add
push
mov
in
testl
add
shrl
mov
shl
push
out
add
add
add
loop
mov
clc
add
addl
lods
movsb
les
bound
pop
pop
pop
push
push
push
lea
push
call
jmp
add
add
loopne
add
push
nop
add
jmp
add
add
shlb
add
push
add
jb
fisubrs
add
addr16
mov
mov
pusha
repnz
jb
addr16
add
nop
add
lret
insb
add
add
movsl
xchg
fdivrs
fucom
xchg
push
mov
lea
pop
leave
ret
push
add
sub
xor
pop
push
mov
push
lea
not
pop
add
push
push
push
lea
push
push
push
lea
push
push
call
add
add
add
add
test
js
jge
outsl
loopne
pop
lods
xlat
cltd
insb
mov
mov
mov
in
mov
add
sbbl
add
stos
add
add
add
add
cmpsl
add
xlat
add
xchg
mov
loopne
imul
data16
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
sti
cmpsl
mov
out
jns
xlat
clc
loopne
stos
add
mov
mov
add
mov
add
add
decb
add
add
in
mov
mov
pop
add
pop
add
sti
sbbb
test
imul
add
mov
xchg
clc
add
push
pop
loop
jae
loope
in
add
pop
mov
addb
hlt
lea
pop
push
push
shl
add
shr
pop
movl
push
push
lea
pop
call
push
push
push
lea
push
call
add
add
add
mov
add
add
jnp
scas
mov
fdiv
rolb
iret
add
xchg
jae
flds
mov
add
mov
addl
add
addl
test
jb
add
add
add
ret
add
mov
gs
icebp
jne
mov
lea
pop
push
call
push
add
ror
ror
not
pop
subl
push
dec
ror
inc
shl
pop
cmpl
jne
pop
pop
push
push
lea
push
push
push
lea
push
call
xchg
mov
add
cmpsb
add
arpl
iret
xchg
movsl
cltd
lret
xchg
fucom
xchg
fwait
add
add
add
add
add
add
add
push
add
push
mov
add
add
add
imul
jmp
jo
mov
out
xchg
add
enter
add
lea
pop
pop
push
lea
lea
not
pop
pop
push
push
lea
push
push
push
push
call
add
add
mov
xlat
add
mov
mov
mov
jnp
roll
lods
add
mov
int
push
lea
shll
jae
fldl
outsl
pop
fildl
lods
add
add
pop
sahf
shlb
icebp
add
add
js
add
add
xchg
push
scas
out
test
xchg
add
data16
ret
push
xor
dec
pop
push
mov
add
push
push
push
push
push
push
push
call
enter
int
addl
add
add
js
mov
clc
add
add
mov
aam
add
lds
sbbb
mov
mov
xor
test
fstps
addb
out
imul
call
add
fdivrl
pop
js
add
lret
andb
mov
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
xchg
js
push
add
lea
stc
pop
out
add
nop
pop
call
jecxz
lods
not
add
add
arpl
add
add
sti
loop
fldl
add
add
add
xchg
add
hlt
gs
add
xchg
lds
push
pop
andb
jp
add
add
aam
in
flds
mov
add
jnp
add
aam
bound
push
push
push
lea
push
push
push
push
lea
push
push
push
push
call
test
subl
icebp
push
add
lea
flds
add
fdivr
add
cmpsl
gs
add
lods
add
add
filds
je
test
out
rolb
xchg
in
mov
add
test
fnstsw
add
xchg
add
mov
lcall
push
push
movsl
add
cltd
add
gs
mov
mov
add
jnp
xchg
pop
mov
lea
pop
push
mov
lea
push
ror
pop
sub
push
shr
rol
lea
pop
mov
push
pop
shr
push
push
push
push
lea
push
push
call
mov
stc
mov
sti
loop
in
insb
add
arpl
add
jge
mov
add
loopne
add
add
add
mov
fldl
add
ror
incb
add
jne
loope
add
pusha
add
add
add
add
lds
lea
add
bound
mov
jl
shrw
mov
cld
lea
pop
add
mov
mov
push
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
jae
pop
add
add
test
xlat
movsl
fsub
add
loop
add
mov
imul
rol
cld
hlt
movsb
pushf
add
test
test
scas
xchg
push
jae
popf
sti
xchg
rcrb
add
stos
filds
add
jne
imul
pop
addb
pop
add
push
push
lea
push
push
push
push
push
lea
push
call
leave
out
stc
add
add
add
add
cltd
shrl
xchg
add
ret
addr16
add
arpl
add
push
sahf
popa
loopne
add
mov
pop
add
jb
add
insb
add
aad
pop
lcall
add
cld
xchg
add
enter
mov
mov
pop
imul
add
arpl
pop
stc
mov
lea
pop
add
push
lea
push
lea
push
push
push
push
push
call
stos
jno
jae
enter
add
roll
xchg
add
add
clc
add
add
outsl
xchg
add
fsubrs
adcb
push
pop
mov
add
push
add
jl
mov
xchg
add
addl
nop
rcll
add
in
add
mov
mov
add
popl
stos
arpl
add
sarb
lea
incb
jl
mov
lea
pop
mov
mov
push
lea
push
lea
push
push
push
push
lea
push
push
call
pop
out
fldl
jbe
push
cltd
out
gs
lret
pop
jmp
movsb
push
in
add
add
add
mov
add
add
add
add
fnstcw
hlt
lret
mov
mov
jl
pusha
sbbl
xchg
add
add
test
add
mov
xchg
fcoml
les
pop
outsl
jne
push
lea
push
lea
push
lea
push
call
cltd
test
add
cwtl
add
sti
add
imul
jae
add
add
scas
add
jb
insb
add
into
out
out
lret
add
add
arpl
add
sar
stos
movsl
leave
add
lret
les
add
mov
add
add
stc
add
add
add
test
add
add
add
pop
cmp
jne
push
add
add
shl
pop
mov
movl
push
shr
shr
pop
jmp
mov
push
not
rol
sub
not
pop
mov
push
push
call
clc
lea
mov
add
out
jb
test
add
cmc
add
lods
aad
jnp
loop
xchg
incb
add
add
in
int3
nop
xchg
pop
fisubs
push
add
mov
add
add
pushf
add
imul
add
bound
add
mov
fmull
ljmp
and
add
mov
movl
push
push
lea
push
push
push
call
ror
jmp
fiaddl
push
aam
add
mov
popf
add
sti
or
aad
add
mov
add
add
out
add
sarb
add
loope
cmpsb
xchg
jle
iret
mov
add
out
add
stos
out
insb
add
lods
add
hlt
mov
fwait
js
add
pop
jmp
push
lea
push
push
push
push
push
push
lea
push
push
call
add
out
jge
rolb
je
lock
int
jmp
cwtl
add
out
mov
add
lret
enter
mov
add
add
fsubl
mov
add
add
test
add
add
add
cmc
add
loope
sbbl
add
loope
add
jne
mov
sahf
add
push
add
add
pop
mov
lea
pop
mov
mov
push
push
push
push
push
push
push
push
call
add
hlt
add
into
add
add
xchg
add
lret
add
fildl
lods
mov
add
add
add
cli
sar
add
test
std
mov
add
mov
mov
add
js
xchg
add
jb
push
in
ljmp
add
jmp
icebp
add
add
mov
in
addl
mov
lea
pop
cmp
jne
push
push
push
push
push
push
push
lea
push
push
push
call
mov
add
fwait
add
lcall
fxch
pushf
addl
add
andb
mov
cli
add
push
mov
shrb
fcoml
flds
pop
mov
insb
xchg
add
scas
cltd
jle
add
jb
cmc
fistps
les
fadds
add
add
repnz
mov
lea
pop
mov
movl
push
push
call
xchg
jmp
nop
les
in
fstpt
add
pop
ja
pop
add
stos
push
add
push
in
aad
jecxz
add
cltd
lcall
ja
xchg
add
movl
push
jecxz
int
pop
mov
add
add
push
add
mov
popf
xor
add
popa
mov
add
mov
lea
pop
jmp
mov
cmpw
jne
push
shl
pop
mov
movl
jmp
push
xor
add
pop
pushl
push
sub
inc
sub
pop
pop
push
not
pop
mov
push
ror
add
xor
sub
pop
mov
mov
push
push
not
ror
inc
add
push
or
not
add
add
sub
inc
pop
pop
push
not
add
xor
sub
pop
push
push
lea
push
push
push
push
push
push
push
push
push
call
add
push
add
fcmovnb
add
add
xchg
mov
add
cld
lock
add
shl
mov
fldcw
add
nop
lahf
jl
xchg
xchg
add
add
add
add
imul
add
shr
add
add
aam
mov
add
lret
add
add
in
jp
jmp
mov
popa
sub
jecxz
add
push
push
push
push
call
mov
roll
add
add
cli
loop
mov
add
cmpsb
fstpt
add
add
mov
add
add
add
add
enter
add
add
add
add
fwait
add
aad
mov
shrl
add
add
imul
add
add
mov
fmull
js
int3
fldz
ret
les
add
push
push
xor
xor
not
add
push
sub
add
sub
sub
lea
sub
pop
sub
sub
pop
push
rol
pop
push
push
push
push
push
push
lea
push
lea
push
push
call
mov
add
jns
add
xchg
add
popf
add
shlb
jge
stc
add
mov
add
jecxz
add
lea
add
movb
notb
mov
add
add
add
add
lock
jmp
xchg
jne
leave
add
cmpsl
add
add
bound
pop
call
cmpl
je
push
push
inc
push
or
not
add
lea
add
sub
sub
shr
dec
add
pop
xor
ror
pop
push
push
push
push
push
push
push
call
add
out
fwait
add
mov
enter
add
pop
add
add
add
cld
mov
xchg
rolb
add
sbbl
test
xchg
xchg
int
addr16
jbe
add
add
add
pusha
add
mov
add
xchg
fsub
out
fwait
test
add
jns
add
lahf
ljmp
mov
add
add
add
add
mov
mov
lea
pop
push
call
cmpl
je
push
push
xor
shl
shr
push
and
add
sub
lea
pop
sub
pop
push
shl
pop
push
call
push
push
push
lea
push
push
push
lea
push
push
push
push
call
gs
cli
mov
add
lods
addb
mov
sahf
add
add
mov
mov
add
loope
add
add
add
cltd
xchg
sarl
mov
xchg
add
ljmp
add
imul
pop
imul
add
pop
outsl
add
mov
clc
mov
lea
pop
cmpl
je
push
push
not
push
sub
add
xor
dec
sub
rol
ror
shr
pop
add
inc
pop
push
dec
rol
not
lea
pop
push
call
push
dec
add
pop
cmpl
je
push
push
shr
sub
push
and
add
shl
sub
inc
pop
add
pop
push
lea
push
push
lea
push
push
call
add
insb
mov
rclb
sti
pop
icebp
xchg
add
add
add
lods
add
in
pop
add
add
lcall
lds
gs
mov
mov
add
xchg
pop
ja
mov
add
jle
add
fcoms
pusha
add
loope
add
pop
pop
test
xchg
pushf
xchg
test
mov
test
add
add
mov
aam
add
pop
push
push
pop
call
push
push
push
push
call
addr16
xchg
mov
ret
test
enter
in
add
xchg
data16
add
xchg
xchg
lret
xchg
add
jnp
mov
add
lahf
pop
pusha
push
add
pop
add
rcl
xchg
add
add
lret
add
add
add
jbe
add
jp
aad
mov
repnz
add
out
add
mov
aam
bound
pop
cmpl
je
push
push
lea
not
push
xor
add
sub
dec
lea
sub
shl
pop
dec
add
inc
pop
push
push
sub
inc
not
pop
call
push
sub
pop
cmpl
je
push
push
rol
lea
shl
sub
push
or
not
add
lea
sub
add
pop
inc
pop
push
push
push
push
push
push
call
roll
insb
fsubs
mov
add
icebp
jae
add
mov
add
add
popf
pop
add
movsl
mov
clc
addl
out
add
lret
add
arpl
addb
add
mull
pop
test
add
roll
add
add
lret
scas
repnz
icebp
xlat
add
out
add
mov
sbbb
add
loopne
add
mov
cli
in
cmc
push
add
pop
push
push
rol
pop
call
push
add
not
ror
pop
cmpl
je
push
push
shl
ror
push
xor
add
add
sub
add
rol
dec
pop
add
not
xor
pop
push
push
push
push
call
jl
add
add
xlat
pop
lds
call
jle
stc
mov
add
lods
mov
fadds
add
add
add
add
lahf
clc
scas
shll
add
into
imul
sahf
xchg
jbe
out
pop
mov
loopne
add
pop
jns
addb
iret
out
add
enter
hlt
icebp
add
pop
popa
scas
xchg
add
pop
push
push
lea
pop
call
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
mov
pop
gs
add
xchg
cli
fstpt
add
add
add
jl
add
int3
cltd
xchg
add
stc
xchg
loope
ljmp
pop
add
fs
add
add
mov
add
loop
jmp
add
add
lock
add
xchg
xchg
in
push
stos
xchg
enter
add
jae
js
mov
lea
pop
cmpl
je
push
push
dec
lea
push
xor
add
shl
add
sub
sub
add
dec
pop
sub
inc
add
pop
push
sub
add
pop
push
call
push
inc
lea
shr
shr
pop
cmpl
je
push
push
shr
push
sub
add
sub
shr
sub
ror
sub
inc
shr
shl
pop
add
lea
pop
push
shl
pop
push
push
dec
inc
pop
call
cmpl
je
push
push
ror
push
or
inc
add
sub
lea
ror
sub
pop
xor
pop
push
add
pop
push
push
lea
push
lea
push
call
aam
add
add
push
add
mov
cmc
add
add
in
lcall
mov
add
insb
jno
add
xchg
jmp
scas
add
add
add
pushf
xchg
add
shlb
add
add
outsl
add
add
cli
mov
mov
lcall
cltd
mov
lea
pop
call
cmpl
je
push
push
not
sub
shr
push
sub
add
ror
dec
dec
sub
add
pop
not
sub
pop
push
lea
push
push
lea
push
push
push
push
call
xchg
aad
jp
gs
ret
lods
mov
out
add
add
movsl
add
cmc
test
stc
fwait
add
adcl
call
mov
jae
add
add
clc
add
sarl
add
mov
add
add
add
add
add
jmp
add
fsts
in
add
popa
mov
lea
pop
push
call
cmpl
jne
push
add
ror
xor
pop
mov
movl
push
lea
not
pop
jmp
push
not
lea
pop
xor
pop
push
push
push
push
push
lea
push
push
push
push
push
call
fwait
add
data16
lret
std
lahf
jo
add
mov
add
data16
lock
mov
retw
add
jle
enter
add
ret
enter
imul
addb
add
push
add
fs
stos
push
nop
lock
jbe
mov
test
add
bound
jp
popa
mov
pusha
sub
push
dec
xor
pop
pop
pop
leave
push
lea
push
push
lea
push
lea
push
push
push
call
arpl
pop
and
jmp
mov
lods
add
add
sbb
mov
movsl
iret
add
add
fwait
lret
jae
add
enter
mov
std
pop
add
addr16
add
add
in
add
movsb
push
outsl
add
mov
lea
in
mov
add
jne
mov
mov
lea
pop
ret
push
push
lea
push
push
call
popa
scas
data16
add
add
add
lods
add
add
xchg
popa
add
add
add
cmpsl
movsl
addb
add
flds
add
imul
shrb
fldenv
clc
push
add
add
fnstenv
add
lahf
add
out
jecxz
movb
mov
mov
pop
rolb
mov
lea
pop
mov
add
push
shr
xor
pop
cmpl
jne
push
push
xor
dec
push
xor
add
xor
sub
sub
rol
shl
shr
sub
pop
ror
add
inc
pop
push
push
push
push
lea
push
push
push
call
pop
add
add
aad
add
lcall
loope
ja
add
add
repnz
add
testb
popf
add
roll
andb
addr16
add
test
cld
add
add
mov
add
stc
jecxz
sub
mov
stos
gs
test
mov
lea
pop
pushl
call
push
add
sub
ror
pop
push
push
add
add
pop
call
push
not
add
pop
jmp
push
lea
push
lea
push
push
lea
push
call
pop
loop
mov
add
xchg
mov
loop
fiadds
add
lods
out
fadds
ljmp
add
cmpl
add
add
test
mov
add
in
add
roll
jmp
pop
mov
cmc
enter
scas
mov
add
out
clc
mov
add
scas
icebp
jmp
hlt
insb
clc
lock
cmpl
je
push
push
call
out
fiaddl
mov
push
mov
mov
add
add
add
arpl
pop
rolb
in
mov
add
jl
xchg
enter
xchg
add
jle
add
int
add
add
lods
lret
bound
out
cwtl
ror
int
add
ret
add
cmpsb
int3
add
lock
jbe
add
push
lods
add
in
int3
lea
pop
cmpl
jne
leave
add
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
std
add
xchg
mov
imul
add
add
popl
xchg
add
cld
mov
jo
add
test
mov
add
push
add
decb
add
gs
jno
push
add
add
add
mov
mov
rcll
mov
arpl
add
mov
in
testl
sub
pop
push
push
lea
push
push
call
cli
cmc
lcall
imul
push
enter
in
add
jp
mov
stc
add
add
add
mov
gs
add
test
jno
add
add
adcb
add
mov
jmp
movsb
add
push
add
cld
pop
add
add
imul
pusha
adc
push
lea
push
push
lea
push
push
push
push
push
call
add
test
lret
lds
pop
pop
nop
out
divb
lds
rcll
test
jns
out
mov
fcompl
add
add
cmpsl
mov
add
popf
fiaddl
lods
sar
add
add
add
jno
xchg
cld
test
add
add
in
add
imul
aam
bound
pop
pop
leave
push
push
push
push
push
push
lea
push
push
push
call
lret
jb
fwait
addr16
test
add
add
rcrb
add
jno
in
add
mov
mov
push
sbbl
xchg
add
ja
lret
enter
add
stos
push
add
aad
add
push
iret
add
add
rolb
add
add
fcomps
hlt
lea
pop
add
push
shr
shl
sub
pop
ret
jmp
push
push
lea
push
push
push
push
push
push
call
in
jl
add
add
add
xchg
pop
std
add
add
add
add
add
add
push
add
cltd
roll
add
add
movsl
pop
fisubl
push
lret
add
pop
jo
les
xchg
test
jmp
sti
add
jne
add
jmp
shlb
popa
jns
add
lock
add
lcall
pop
cmpl
jne
push
push
sub
push
xor
add
sub
sub
rol
add
not
pop
sub
sub
not
pop
push
sub
inc
pop
pushl
call
push
push
push
push
push
push
push
push
call
std
add
add
test
imul
sahf
enter
cmpsl
xchg
popa
test
add
mov
fiadds
add
mov
add
mov
jmp
add
add
add
cld
lods
pop
xchg
add
add
xchg
scas
add
mov
jge
xchg
add
add
lea
out
fstpt
mov
lcall
push
call
push
lea
push
call
fiadds
add
negl
data16
loope
scas
add
cli
add
add
scas
add
ror
scas
test
add
xchg
add
add
add
add
test
add
mov
mov
add
rcrl
lea
jmp
cmc
pop
rcl
xchg
popf
add
add
add
iret
rorb
pop
jmp
cmpl
jne
push
push
push
push
push
push
push
lea
push
push
push
call
nop
arpl
test
add
lods
add
cli
shrb
movl
mov
add
jno
ljmp
add
mov
nop
add
call
add
icebp
add
add
add
ljmp
add
add
add
and
mov
add
fincstp
add
pop
mov
mov
push
push
push
xor
push
and
add
sub
sub
sub
dec
pop
shr
add
pop
push
lea
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
add
mov
mov
pop
xchg
int3
mov
sti
add
add
in
jp
mov
add
add
add
add
push
xchg
jo
popf
add
mov
loope
movl
pushf
add
add
add
shr
add
mov
add
scas
pop
repnz
pop
mov
mov
ljmp
add
add
add
lea
pop
pushl
push
push
lea
push
push
lea
push
call
add
add
enter
push
cwtl
enter
jge
add
add
stos
roll
clc
add
add
out
fstps
into
les
lds
add
xlat
imul
stos
cmpsb
mov
insb
std
cmpsl
jbe
mov
mov
add
add
outsl
add
add
jae
cltd
mov
add
mov
lea
pop
call
push
push
push
push
call
jbe
add
add
push
add
add
add
pop
stc
add
cmc
fsubrp
add
add
add
jns
add
mov
add
push
add
into
fidivs
cmpsl
jns
test
ja
gs
mov
add
add
into
jo
cmpsb
jge
add
pusha
add
add
bound
test
popf
bound
out
data16
mov
add
jmp
mov
lea
pop
call
push
push
sub
push
or
inc
add
inc
sub
sub
pop
shl
shl
dec
pop
push
push
push
push
push
push
lea
push
call
cmpsb
mov
pop
rorl
add
jmp
out
add
imul
enter
shr
add
cwtl
mov
jecxz
add
jmp
mov
imul
stos
std
add
add
add
add
add
push
movb
add
pop
add
bound
lods
add
add
mov
fmull
jne
push
rol
dec
add
pop
call
call
push
push
not
rol
push
xor
add
ror
sub
inc
ror
shr
pop
ror
inc
dec
pop
push
lea
push
lea
push
push
push
lea
push
push
push
push
push
call
add
add
jb
add
add
add
add
out
roll
popf
add
sbbl
loop
jne
idivb
fsub
cwtl
add
add
jge
ret
push
cltd
xchg
jecxz
add
add
add
jge
aad
add
add
add
pusha
pusha
int
lock
add
adc
mov
add
pop
mov
lea
pop
pushl
push
push
push
push
push
push
call
push
out
fcoms
add
add
add
clc
fcomps
add
xchg
scas
add
into
xchg
pop
call
add
outsl
add
in
add
mov
les
add
in
lahf
add
je
add
add
add
add
scas
xchg
nop
ljmp
cwtl
add
fstpt
push
add
mov
add
clc
ficomps
mov
lea
pop
call
push
push
push
push
call
ret
sar
jge
mov
lahf
add
add
mov
add
sahf
push
arpl
in
add
add
push
test
testl
mov
add
imul
mov
pop
add
mov
insb
push
pushf
mov
add
add
data16
xchg
add
add
shlb
movsb
rclb
add
jno
adcl
pop
call
push
push
shr
push
xor
add
sub
sub
sub
pop
sub
xor
pop
push
push
sub
push
or
not
add
add
lea
sub
ror
shr
not
inc
pop
pop
push
not
ror
pop
call
push
rol
sub
not
pop
pop
push
push
push
push
lea
push
lea
push
push
push
push
call
test
push
popf
add
xchg
lock
aam
add
filds
add
loope
xchg
std
add
jno
rcrb
mov
add
add
je
ficompl
add
add
into
mov
add
add
mov
add
add
add
add
mov
data16
dec
jne
push
push
lea
push
push
lea
push
push
lea
push
call
mov
imul
add
out
fwait
add
add
arpl
les
lret
add
add
pusha
push
fiadds
pop
movsb
add
pop
pop
add
add
add
add
lods
add
add
add
sbb
call
jmp
call
push
push
push
xor
add
ror
sub
lea
pop
not
pop
push
shr
pop
pushl
call
push
lea
push
push
push
push
push
push
call
xchg
add
xlat
out
popl
add
cwtl
jo
add
pusha
mov
add
add
mov
add
add
add
add
cmpsb
insb
js
pop
add
fildl
add
cli
add
jb
filds
imul
add
add
add
push
add
rcrl
gs
mull
sbb
push
push
push
push
push
push
push
push
push
push
push
call
movb
pusha
lods
cwtl
popa
add
pop
add
cmpsb
add
js
add
add
pop
jae
cld
add
ret
add
fsub
add
fldt
imul
add
add
stos
loope
add
sbbb
mov
xchg
mov
outsl
mov
push
add
hlt
mov
sti
mov
incb
add
pusha
add
xchg
clc
add
fisubl
lret
jmp
popa
cli
flds
add
pop
call
push
push
lea
push
push
push
call
add
add
out
insb
mov
cltd
mov
add
clc
jnp
jb
pop
push
add
add
loope
jb
xchg
add
out
pop
mov
out
roll
add
pop
icebp
clc
mov
rcll
add
mov
sarl
push
popa
test
add
insb
xchg
xorl
xchg
add
in
loope
aam
bound
mov
lea
push
push
sub
push
or
inc
add
add
sub
dec
pop
sub
ror
inc
pop
push
not
shl
shl
shl
pop
pushl
push
push
push
call
enter
imul
cmpb
add
pop
sbbb
cli
shll
add
add
cmc
mov
jae
pop
mov
fnstcw
fldl
add
push
add
les
mov
jecxz
add
add
aad
arpl
add
push
add
add
adc
hlt
iret
mov
data16
call
push
push
shl
add
add
pop
call
push
push
xor
push
sub
add
ror
rol
not
add
sub
rol
xor
ror
xor
pop
ror
xor
ror
pop
push
lea
push
push
push
lea
push
call
cmpsb
xchg
jbe
jp
jp
shl
rolb
mov
add
out
mov
mov
add
loopne
movsl
insb
lods
mov
add
add
add
mov
mov
jecxz
add
push
faddl
andl
push
add
add
mov
pop
add
jb
add
roll
add
add
jbe
jmp
rcrl
aam
bound
pushl
call
push
push
push
push
push
push
push
push
lea
push
push
call
arpl
add
popl
add
ljmp
cwtl
push
in
push
add
int3
add
mov
add
mov
mov
xchg
aam
sahf
jnp
pop
gs
faddl
add
idiv
lds
mov
push
mov
add
add
push
pusha
add
push
mov
aam
add
fildl
jbe
std
xchg
add
mov
loop
jge
add
mov
sub
rorb
push
call
icebp
popf
mov
jo
add
add
scas
repnz
add
add
add
mov
arpl
testb
imul
add
inc
imul
push
xchg
add
arpl
cmc
add
add
fadds
add
jne
in
add
push
gs
xchg
mov
push
mov
lea
pop
lea
push
push
rol
xor
rol
push
push
pop
add
shr
ror
dec
sub
shr
pop
not
lea
lea
add
pop
push
push
push
push
push
push
push
push
push
call
mov
clc
pop
fcompl
add
mov
add
popl
fwait
add
add
add
add
mov
add
shll
add
add
jp
enter
add
leave
jno
lds
add
add
je
bound
imul
add
add
sti
repnz
imul
mov
lea
pop
pushl
push
dec
pop
call
lea
push
push
push
lea
push
call
mov
repnz
in
add
add
out
add
add
add
cli
add
add
add
stc
loope
in
add
mov
mov
mov
add
add
lds
call
add
add
add
add
addb
sti
pop
push
orl
add
imul
outsl
mov
lea
pop
push
push
push
lea
pop
pushl
push
push
rol
push
or
not
add
not
dec
sub
rol
sub
add
pop
sub
pop
push
lea
push
push
push
call
jecxz
and
lods
imul
add
xchg
ljmp
add
add
mov
xchg
add
data16
mov
mov
roll
ret
add
add
lds
add
jmp
push
add
pop
pop
add
jns
mov
hlt
lret
repnz
mov
mov
add
andl
add
lret
shl
xchg
test
pop
push
call
push
push
sub
push
or
inc
add
xor
sub
sub
shl
ror
lea
pop
ror
add
shr
pop
push
add
add
pop
pushl
call
push
push
lea
add
pop
call
push
push
shl
push
or
not
add
inc
sub
inc
pop
sub
sub
inc
pop
push
shr
xor
sub
pop
pushl
call
call
push
push
push
lea
push
push
push
push
push
call
mov
filds
jle
pop
add
icebp
lds
ja
push
add
add
push
mov
test
add
add
add
xchg
stos
scas
mov
add
add
repnz
add
mov
xchg
cld
add
lock
add
add
int3
lea
pop
jmp
pushl
push
push
lea
push
lea
push
push
push
call
addr16
mov
lods
lock
mov
add
shlb
fistpll
xchg
les
lods
mov
mov
rolb
push
int
add
add
add
push
in
rolb
mov
mov
pushw
add
add
xlat
cwtl
add
add
stc
add
ja
cmpsb
fcomps
jmp
data16
mov
push
add
add
pop
jmp
push
push
lea
not
inc
push
push
pop
add
not
inc
sub
ror
rol
shr
inc
pop
shl
shl
pop
push
sub
ror
lea
pop
pushl
push
shl
pop
call
push
lea
push
push
push
lea
push
push
lea
push
lea
push
push
call
out
mov
les
xchg
jne
xchg
stc
cli
stos
fstps
xchg
jno
jl
test
add
movsb
movb
add
testb
add
add
scas
add
add
jp
hlt
add
jecxz
mov
add
add
nop
fildl
loop
add
add
push
add
movsb
pop
add
data16
test
pop
push
push
shr
shl
pop
call
push
push
shr
rol
push
or
not
add
ror
sub
shr
pop
shl
inc
dec
pop
push
push
call
add
mov
add
mov
push
int
jle
flds
cli
shrl
pop
test
mov
mov
add
insb
add
add
mov
ret
add
int3
icebp
add
mov
xchg
add
ret
loope
ret
cld
loope
fnstcw
popa
addr16
add
add
cld
mov
in
mov
lea
pop
pushl
push
sub
dec
pop
call
push
push
push
call
jo
add
add
add
add
orb
incb
push
pushf
mov
fwait
mov
add
mov
jl
add
add
in
test
test
add
add
pop
addl
fcom
ljmp
add
iret
stc
add
add
je
aam
add
les
scas
add
add
jmp
repnz
out
add
mov
add
add
pop
call
push
ror
sub
inc
ror
pop
leave
push
ror
pop
add
push
shr
sub
pop
pop
push
push
push
call
pop
fnstenv
lods
add
add
xchg
xchg
jge
outsl
mov
add
add
mov
add
add
imul
add
add
addb
add
popa
mov
add
add
ret
fstpl
jb
add
outsl
out
ljmp
fwait
mov
lea
pop
pop
push
not
dec
pop
pop
push
add
dec
inc
lea
pop
pop
push
rol
inc
pop
leave
add
ret
push
dec
pop
leave
push
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
ret
pop
std
add
add
add
add
add
lods
insb
ljmp
pop
mov
jle
orl
add
add
add
mov
in
nop
add
jbe
add
jl
push
push
cmc
xchg
add
push
mov
push
mov
pop
push
mov
lea
pop
ret
push
mov
push
pop
cmpl
jne
mov
push
add
pop
jmp
push
push
push
lea
push
push
lea
push
call
add
add
add
add
add
enter
neg
sti
add
add
aam
pop
les
mov
pop
rolb
add
les
mov
add
add
push
cltd
cltd
lret
testb
add
mov
pop
add
mov
add
add
imul
add
cwtl
add
mov
add
add
mov
pushf
ja
stc
add
xchg
loop
scas
add
mov
lea
pop
mov
push
ror
pop
and
push
push
push
push
push
push
push
call
hlt
mov
add
fidivl
out
add
into
out
jnp
add
add
pop
pop
call
movb
add
add
rolb
mov
addl
pop
xchg
imul
scas
int3
mov
cmc
js
bound
mov
jns
pop
add
push
lock
add
pop
xor
xor
push
shl
xor
add
pop
add
xor
push
lea
push
push
push
lea
push
lea
push
push
call
add
add
ja
pop
add
add
popa
add
loopne
push
cli
scas
mov
mov
add
add
mov
add
add
andb
jb
add
js
add
mov
add
test
in
test
push
jno
ljmp
mov
add
in
repnz
sti
enter
push
mov
add
pop
nop
sti
fcoml
mov
je
add
fcomp
add
ret
lea
pop
dec
push
lea
push
push
push
push
lea
push
push
call
fisubl
add
add
int3
mov
add
pop
add
rcl
pusha
jnp
data16
bound
add
push
jl
add
add
add
add
add
add
mov
add
pop
add
sti
gs
add
nop
add
fistpll
jle
xchg
add
xlat
xchg
push
fwait
fs
cmc
insb
call
xchg
add
int
add
pop
sub
jmp
sub
push
lea
push
call
add
pop
mov
mov
fldl
fwait
add
add
add
cli
add
xchg
mov
mov
xlat
aam
rolb
mov
add
add
loope
mov
add
ljmp
icebp
aad
add
ljmp
lods
add
push
add
add
add
cmpsb
add
ja
je
mov
lea
pop
pushl
pop
push
lea
push
lea
push
push
lea
push
call
lcall
add
add
mov
add
pop
sti
add
add
std
xchg
cltd
cmpsl
fidivl
xlat
add
add
std
repnz
movl
nop
add
jecxz
push
add
mov
mov
add
jb
xchg
adcb
sarb
add
add
pop
sub
push
lea
push
push
push
push
call
add
add
add
stos
sahf
add
mov
add
add
cmpsl
jmp
test
jecxz
sarl
pop
in
aam
stos
call
pop
lret
stos
cmpsl
outsl
add
roll
add
mov
jmp
js
xor
int3
jecxz
loop
std
add
mov
add
add
test
lcall
pop
mov
add
mov
lea
pop
cmp
jne
push
sub
sub
sub
shl
pop
mov
lea
push
push
push
lea
push
push
push
call
mov
add
mov
movsb
cmpsl
negb
addr16
add
add
add
loopne
mov
mov
add
movl
mov
lahf
data16
stc
flds
enter
jl
pushf
ljmp
mov
add
fst
stc
bound
pop
add
add
pop
jbe
rorl
push
add
test
roll
shll
imul
aam
bound
pop
sub
mov
shr
push
pop
add
sub
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
addl
subb
out
push
add
cmpb
into
pop
fiaddl
out
add
mov
cwtl
xchg
add
testl
add
test
sbbl
add
pop
lahf
je
je
gs
add
sahf
mov
add
add
add
mov
lds
addb
insb
rolb
lods
movsl
iret
add
pop
pop
in
ret
mov
add
add
lea
pop
pushl
push
push
lea
push
call
fs
pop
add
add
add
add
add
add
pop
bound
movl
test
add
movl
out
pop
nop
lahf
add
mul
fs
popa
add
mov
enter
sahf
mov
add
add
scas
add
loope
add
fldenv
outsl
call
lcall
add
addr16
pop
shr
push
xor
lea
inc
lea
pop
and
push
push
push
push
push
push
lea
push
push
push
lea
push
call
pop
add
addr16
lahf
add
stos
add
mov
faddl
add
popl
add
shlb
loope
add
add
lds
into
ljmp
mov
xchg
mov
sti
filds
subb
out
add
aam
stc
add
mov
scas
pop
push
loopne
add
pop
sub
push
dec
ror
pop
cmp
jne
leave
ret
push
lea
push
push
push
call
enter
add
rolb
mov
add
xchg
mov
cld
movsl
std
add
add
sahf
nop
stos
popa
cld
lahf
add
rcll
roll
cmc
add
iret
movb
lcall
pop
rorl
in
jne
push
xchg
jmp
insb
lcall
fiadds
add
add
mov
div
mov
int3
lea
pop
push
push
push
push
push
push
push
call
int
test
mov
xchg
mov
add
sahf
mov
ret
shr
add
cltd
arpl
add
movsl
call
mov
add
cwtl
add
mov
pop
add
push
add
mov
xchg
add
mov
add
add
movsl
jl
add
popa
sbb
in
add
push
push
lea
push
lea
push
push
push
call
add
rcrl
add
mov
loope
aad
add
jne
movsb
add
mov
pop
gs
mov
in
add
add
add
mov
push
add
in
mov
add
movsb
out
call
ficoms
push
int
mov
lods
lahf
notl
add
push
mov
in
filds
mov
lea
pop
push
push
not
ror
pop
push
push
add
sub
inc
ror
pop
push
push
mov
push
push
call
loop
add
push
sar
test
lea
add
jecxz
xchg
pop
add
outsl
mov
push
loope
add
add
add
jne
add
push
xchg
pop
leave
jo
test
rorl
mov
js
add
add
loop
push
shr
mov
mov
jbe
mov
fmull
push
cmp
ljmp
mov
push
lea
push
call
add
into
leave
push
add
pushf
mov
je
pop
js
mov
mov
cltd
out
mov
add
outsl
clc
push
add
push
xchg
add
push
pop
add
add
pushf
add
cltd
add
add
pop
lea
add
add
mov
loopne
mov
add
fs
shlb
push
mov
add
loop
mov
fsubrl
addb
add
add
int
add
xchg
mov
lea
pop
shr
add
mov
push
inc
pop
add
mov
push
not
add
ror
pop
add
xor
mov
push
push
lea
push
push
lea
push
lea
push
push
call
add
movsb
mov
add
enter
insb
imul
insb
bound
add
hlt
add
xchg
mov
ret
add
roll
add
add
cmpsl
add
add
xchg
add
bound
add
add
fcmovnu
xchg
std
xchg
jl
jae
pop
ret
hlt
add
data16
out
mov
lea
pop
and
push
lea
push
lea
push
push
push
push
push
push
call
movsb
add
add
movsl
jne
shll
add
mov
add
pop
jmp
push
lea
jp
cmc
add
cmc
add
mov
pop
pop
loope
add
fucompp
push
jnp
lock
cmpsb
mov
add
test
je
jmp
enter
incb
popf
add
roll
jae
jne
add
mov
mov
addl
test
add
mov
mov
lea
pop
call
add
cmp
je
push
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
cmc
add
add
scas
add
xchg
addl
xchg
enter
add
pop
add
jmp
add
cmpsb
insb
in
push
mov
add
add
mov
add
add
mov
cmpsb
push
add
mov
add
cwtl
add
pushf
pushf
mov
jns
jge
add
fadds
add
outsl
add
out
loopne
pop
scas
test
cli
add
bound
add
push
shl
sub
pop
cmpl
jne
xor
pop
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
xchg
std
add
push
lcall
add
xchg
add
hlt
add
mov
ret
add
add
pop
ljmp
ja
push
pop
rclb
xor
add
pop
aam
add
add
mov
add
stos
push
add
jb
add
add
add
sub
push
add
mov
add
xchg
mov
aam
bound
pop
pop
push
push
push
push
push
push
lea
push
lea
push
call
shr
mov
jl
je
outsl
add
mov
cld
cmpsl
xchg
lds
loope
nop
fiaddl
add
add
fistps
add
out
xchg
mov
int3
enter
add
xchg
add
add
add
lds
jne
add
cwtl
add
jns
add
mov
xchg
xchg
add
push
jl
add
xchg
in
push
std
fistpl
and
push
inc
dec
add
pop
pop
push
push
lea
push
call
rcl
enter
arpl
ficomps
ret
mov
jmp
mov
add
push
mov
add
add
std
aad
shll
jge
push
fstps
add
push
popf
lret
out
hlt
shl
mov
add
add
cmc
mov
pusha
ja
add
lahf
popf
lods
mov
int3
lea
pop
pop
push
add
dec
dec
pop
leave
ret
mov
push
push
push
push
push
push
push
push
push
lea
push
call
call
add
call
nop
je
add
sbb
add
jl
add
cbtw
clc
lds
jo
icebp
fadds
add
sar
add
add
add
call
insb
icebp
scas
add
in
xchg
div
mov
add
add
repnz
jae
add
cmpsl
add
add
pop
add
mov
jge
add
add
pop
add
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
lahf
add
roll
in
stos
out
add
loopne
push
add
jns
mov
test
jmp
je
add
shlb
cmc
add
in
enter
shll
add
js
cli
out
jne
add
fildl
push
add
pop
pop
push
insb
sub
cwtl
mov
lret
lahf
bound
add
popf
mov
bound
pop
push
pop
push
rol
pop
pop
mov
push
lea
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
add
jnp
aad
js
int
mov
imul
xchg
add
pop
jmp
mov
bound
ljmp
add
in
loope
add
mov
pop
mov
add
pop
test
testl
jb
fidivrl
les
mov
jnp
cltd
int
int3
lea
pop
push
call
xor
push
sub
dec
rol
pop
pop
push
pop
pop
push
add
add
shr
pop
pop
push
lea
push
push
push
push
call
fiaddl
add
pop
add
jnp
add
jmp
add
jnp
add
scas
mov
imul
addb
mov
in
in
jle
add
jbe
andl
fucomp
js
ja
movsb
mov
repnz
add
pop
add
les
fwait
add
add
insb
enter
rolb
lcall
lods
cwtl
mov
lea
pop
pop
pop
push
push
lea
push
push
push
lea
push
push
push
call
add
add
clc
loope
add
iret
test
mov
add
fwait
jne
mov
ljmp
movsl
xlat
mov
fdiv
jl
mov
add
push
lds
mov
pop
add
push
jns
add
out
out
shll
enter
add
int3
add
lea
jno
jnp
lret
icebp
xchg
add
scas
cmpsb
mov
lea
pop
leave
ret
push
sub
ror
shl
ror
pop
push
push
lea
rol
pop
mov
add
push
push
sub
pop
push
push
push
push
shr
xor
pop
mov
push
pop
push
lea
push
push
push
push
lea
push
call
add
pop
out
add
add
add
add
add
add
out
add
add
aad
movsl
arpl
pop
push
in
add
add
add
jp
jl
add
add
rcll
add
add
add
pop
add
add
les
stc
add
into
test
cld
lea
pop
lea
sub
mov
push
sub
add
dec
pop
shr
push
push
push
lea
push
lea
push
push
push
push
call
std
jle
xchg
fdivr
add
fldenv
sti
add
pusha
add
add
xchg
out
sti
scas
imul
jb
add
add
sti
add
add
mov
gs
push
pop
add
jo
push
add
mov
add
push
loope
shlb
movsb
add
pop
movsb
fsubrl
scas
add
mov
popl
push
popa
push
jne
add
mov
lea
pop
add
mov
add
push
push
push
call
add
out
add
add
add
xchg
add
shlb
pusha
mov
add
ret
add
jns
cli
out
addb
add
imul
enter
sahf
addr16
add
mov
cli
add
outsl
ror
add
in
movb
movb
add
add
push
mov
cmpsl
stos
pop
add
add
pop
scas
arpl
add
out
add
push
add
mov
lea
pop
pushl
popl
mov
push
xor
rol
pop
add
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
jb
jnp
xchg
aam
iret
fs
lock
rclb
add
xchg
add
js
add
add
mov
mul
mov
mov
add
pop
mov
jae
lods
iret
mov
outsl
add
shrl
add
out
filds
add
add
mov
mov
test
push
lea
pop
xor
lea
mov
push
xor
pop
add
xor
push
push
lea
push
push
push
lea
push
push
call
popf
int
aam
add
xchg
scas
mov
pop
add
notb
add
lret
fiadds
clc
lcall
cmpsb
mov
jae
add
je
stos
mov
in
mov
lcall
imul
test
lods
repnz
nop
leave
mov
pop
stos
cltd
add
out
add
push
mov
int
add
stc
stos
sar
jmp
add
lea
pop
call
push
lea
push
call
test
mov
add
add
lds
in
cld
iret
mov
cltd
mov
data16
add
fwait
orl
xchg
add
add
xchg
int
pushf
enter
add
insb
bound
cmpsl
add
add
add
std
add
out
cltd
lock
push
add
rcrl
loopne
mov
push
add
add
add
mov
lea
pop
add
nop
push
push
lea
push
push
push
push
push
call
add
add
cwtl
jbe
add
add
pop
add
add
jnp
add
add
add
mov
add
pop
add
add
cmc
mov
add
js
add
push
test
rorl
fldl
add
mov
mov
add
lcall
mov
lea
pop
nop
cmp
je
nop
push
add
pop
nop
inc
push
push
push
push
push
call
loop
jle
add
cld
loop
pop
add
add
add
jecxz
add
mov
ljmp
test
push
xchg
mov
lods
roll
add
xchg
push
out
add
pop
xchg
add
in
in
addl
add
stc
pop
add
leave
add
jae
jge
arpl
mov
mov
faddl
add
pop
nop
nop
cmp
jb
push
inc
pop
xor
push
push
push
push
push
push
push
push
push
call
cld
out
add
mov
push
add
mov
add
mov
add
mov
add
les
add
add
roll
aam
in
add
add
pop
cld
cli
mov
in
add
je
subl
add
add
jns
xlat
insb
push
mov
lea
pop
jmp
push
add
ror
pop
mov
push
dec
add
pop
add
push
pop
movzwl
mov
push
ror
pop
add
push
push
push
push
call
add
add
add
add
push
lea
out
add
cltd
js
add
mov
arpl
jge
add
clc
iret
mov
mov
xchg
cmpsl
roll
fcmovnbe
lahf
push
icebp
add
mov
adcb
add
add
add
add
lret
mov
jb
add
add
add
pop
mov
add
push
mov
mov
mov
lea
pop
mov
push
lea
push
push
push
push
push
push
push
call
add
shrl
add
xlat
add
fcoml
add
loopne
int3
xlat
lcall
fiaddl
int
pop
repnz
idivl
add
mov
jl
arpl
xchg
jp
add
xchg
jge
add
loop
in
call
loop
pop
add
add
iret
pop
add
mov
lea
pop
xor
xor
push
push
push
lea
push
call
add
in
add
add
lods
pop
add
add
nop
je
add
stos
mov
add
push
add
cmpl
add
add
test
cmpsb
add
fldl
add
cwtl
lock
add
add
movsb
mov
testb
lret
fs
add
add
jbe
les
loope
push
lea
push
call
add
add
xchg
add
movsb
jecxz
mov
enter
xchg
push
filds
add
mov
add
add
call
test
ljmp
lahf
add
mov
add
add
in
jbe
push
mov
add
popf
cmc
cmpl
mov
movsl
lods
add
or
dec
nop
add
loope
xor
push
push
push
lea
push
lea
push
lea
push
call
add
sti
add
xlat
push
jo
add
add
icebp
pusha
jl
je
jnp
add
movsb
test
sti
mov
pushf
add
sub
add
add
jl
imul
pop
cmc
xchg
add
add
mov
add
addl
push
add
cwtl
fstl
xchg
test
bound
jecxz
lret
mov
add
add
pop
shl
push
push
lea
push
push
push
push
push
call
lahf
mov
mov
add
mov
add
add
ja
lods
mov
adcb
add
add
add
add
xlat
test
fiaddl
adcl
jo
loope
push
add
mov
fiaddl
push
in
je
popf
push
add
out
cmpsb
add
xchg
add
clc
xlat
cld
add
add
mov
lea
pop
xor
mov
push
xor
pop
add
pop
pop
push
sub
add
pop
pop
push
xor
sub
pop
pop
push
dec
add
pop
leave
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
movb
add
add
mov
sbbl
add
int3
add
cltd
insb
add
cld
mov
cld
sahf
js
outsl
add
aad
push
mov
add
add
rcr
add
add
jae
insb
add
imul
add
push
add
add
add
add
cmc
pop
stos
mov
push
loope
add
ja
add
pop
add
and
ret
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
jge
push
mov
out
add
pop
icebp
lds
mov
mov
add
mov
add
js
add
mov
add
jo
lret
je
loop
add
jp
add
mov
add
jmp
add
jge
testl
add
add
imul
jmp
mov
add
cmpb
add
and
mov
push
pop
push
push
push
push
lea
shr
pop
push
mov
push
push
push
push
push
push
lea
push
lea
push
push
call
add
in
add
add
add
add
sahf
pop
jbe
xchg
testl
push
add
add
mov
add
add
add
mov
rcrb
mov
imul
shr
add
orl
test
lds
pop
cmpsl
mov
fdivrl
pop
xchg
aad
jge
aam
bound
mov
mov
test
je
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
add
lds
add
jl
aam
add
out
ret
repnz
rolb
enter
mov
add
rorb
add
hlt
add
popa
add
add
fwait
add
cltd
fisubrs
pop
arpl
jne
enter
fs
jl
cmpsl
xchg
hlt
pop
add
into
les
mov
ja
popl
add
pop
mov
push
add
pop
test
je
mov
mov
push
push
push
call
sahf
ljmp
pop
add
add
in
add
jae
add
add
pusha
pop
add
outsl
add
add
add
add
ret
add
add
jl
je
sti
add
add
rcr
add
add
push
xchg
add
in
je
std
lea
lret
stos
mov
xchg
xchg
add
fisubs
add
add
mov
mov
add
mov
aam
bound
mov
inc
cmp
je
push
push
lea
push
push
push
call
add
add
out
add
fstl
add
add
jo
test
add
test
add
push
les
add
mov
fldl
aad
add
lret
add
add
mov
jns
in
add
fildl
add
scas
add
add
xchg
mov
test
pop
mov
in
mov
add
imul
mov
lea
pop
test
je
mov
push
push
lea
push
push
lea
push
push
push
push
push
call
loopne
add
mov
add
add
enter
mov
mov
add
mov
test
add
mov
add
add
jb
mov
add
add
aad
mov
mov
add
out
fdivrl
mov
add
add
jo
test
jle
pop
test
pop
pop
add
mov
test
cld
lea
pop
inc
push
push
push
push
lea
push
push
lea
push
push
push
call
lcall
add
add
add
add
xchg
mov
popl
pop
pop
add
add
pop
lret
pop
add
aad
imul
mov
out
add
add
mov
xchg
fcmovnb
outsl
push
repnz
add
mov
add
out
add
sarb
cmpsb
mov
pusha
movsb
rolb
add
pusha
add
add
mov
lea
pop
cmp
je
test
jne
push
push
push
push
push
call
pop
add
jecxz
pop
add
mov
pushf
icebp
add
imul
add
add
xchg
popf
movsl
mov
fldl
repnz
xchg
lahf
add
add
testl
sahf
add
mov
mov
rcl
add
add
jns
mov
sar
mov
add
xchg
add
add
jnp
push
test
loopne
negl
hlt
push
cltd
movl
push
add
mov
lea
pop
xor
push
inc
inc
pop
pop
pop
push
ror
dec
pop
pop
push
push
lea
push
call
add
add
lcall
imul
cli
sarl
pop
mov
push
xchg
add
scas
jl
add
add
loope
cmpsb
add
stc
mov
push
add
add
fdiv
fisubs
push
add
add
fisttps
movl
outsl
add
ret
add
out
add
xchg
mov
mov
lea
pop
pop
push
lea
push
push
push
call
filds
lret
fdivr
add
lret
pop
icebp
leave
jnp
add
add
add
add
xchg
cld
pop
clc
push
loope
mov
jbe
iret
add
hlt
add
add
add
imul
add
pop
fs
out
add
add
out
pop
add
pop
add
add
add
add
add
stos
add
add
xchg
mov
int3
lea
pop
leave
push
sub
not
sub
pop
ret
mov
push
dec
pop
inc
cmp
jne
push
rol
pop
lea
mov
push
push
push
push
push
call
aam
mov
iret
xchg
add
jae
mov
je
add
add
add
int
xchg
add
add
loop
pop
mov
lcall
add
stc
add
shrl
add
add
in
add
ficoml
cld
lock
mov
call
jns
push
add
std
mov
lea
pop
test
je
mov
add
push
push
push
lea
push
push
lea
push
push
push
push
push
call
add
xchg
iret
jno
les
popf
mov
add
add
mov
rolb
add
push
jns
xchg
filds
add
add
push
add
addb
jbe
jle
movsb
add
pusha
mov
jmp
je
add
add
mov
add
add
rorb
cmp
jne
mov
push
add
dec
pop
test
je
mov
push
lea
push
lea
push
push
push
push
push
push
push
call
add
lea
add
fdivp
movsb
add
into
fcmovb
add
loop
iret
cmpsb
imul
pusha
add
pop
jbe
mov
fcmovne
rolb
mov
pop
lods
add
aam
add
negl
jbe
mov
pop
jmp
aad
mov
fcmovne
jge
scas
mov
cltd
lea
add
out
sahf
outsl
add
xchg
data16
add
and
add
cmp
je
jmp
push
rol
xor
add
pop
xor
push
sub
dec
pop
pop
push
lea
push
push
call
test
mov
add
add
shrb
js
add
bound
mov
les
mov
add
add
push
push
add
add
stos
jmp
cmpb
cwtl
add
in
add
mov
roll
lret
add
je
sti
jb
add
ffree
mov
icebp
add
in
lods
je
add
mov
or
pop
push
inc
sub
pop
pop
push
dec
dec
add
pop
pop
push
rol
pop
leave
ret
lea
push
lea
push
push
lea
push
push
lea
push
push
push
push
push
call
lods
add
pop
add
pusha
xchg
add
loopne
add
jecxz
lock
add
mov
jle
mov
cmp
push
add
in
jno
mov
add
add
add
filds
jmp
push
add
pop
fsubr
icebp
icebp
hlt
mov
out
add
add
mov
mov
in
mov
jb
xchg
mov
add
fmull
push
shl
dec
sub
pop
pop
push
not
dec
xor
pop
pop
pop
push
ror
rol
lea
pop
leave
push
not
pop
ret
mov
push
push
push
lea
push
push
push
push
call
add
fs
add
lcall
add
add
add
add
jb
fucom
add
add
mov
add
lahf
ror
mov
pop
mov
mov
int3
push
cmpsl
add
loope
scas
mov
gs
sti
add
test
pop
mov
bound
add
leave
decb
mov
add
pop
pop
pop
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
call
ficompl
lods
test
add
mov
lods
js
add
test
mov
lods
add
scas
add
push
add
out
add
into
xchg
int
iret
add
icebp
add
add
add
add
mov
in
mov
add
pop
add
pop
add
add
test
data16
hlt
lea
pop
pop
leave
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
add
add
add
mov
out
mov
add
add
xchg
pop
lea
mov
cltd
add
add
add
add
add
add
push
pop
mov
mov
add
arpl
add
add
test
pop
fxch
sub
xchg
mov
lea
pop
ret
push
push
call
rclb
mov
add
mov
mul
into
lret
xchg
jo
loopne
jecxz
pop
jns
fcoms
add
add
sti
scas
cltd
add
mov
push
cmpsl
mov
pop
test
add
push
add
add
adcb
mov
fwait
add
add
push
mov
out
lock
lcall
xchg
lea
mov
or
rolb
idivb
push
call
mov
add
add
add
pop
movb
in
pop
xchg
lods
movsl
mov
faddl
mov
xchg
pop
fwait
add
cmc
push
scas
mov
iret
push
mov
pusha
int3
lret
add
gs
lds
mul
add
mov
add
push
loopne
add
add
lcall
add
pop
xor
inc
push
lea
push
push
push
push
push
call
insb
jmp
add
je
jnp
mov
in
xchg
mov
xchg
jne
cld
add
out
cli
add
push
mov
mov
xchg
add
add
mov
add
repnz
add
push
scas
cld
add
jecxz
adcl
add
rolb
add
mov
rcrb
mov
les
pop
cmpb
jne
ret
mov
shll
sti
movsb
shll
sti
movsb
shll
sti
movsb
adc
sti
movsb
mov
sti
movsb
xchg
mov
sti
rcrb
sti
rcrb
movsb
sub
sti
in
push
mov
add
bound
decl
dec
or
adc
ret
fidivl
inc
cmpsb
jae
cli
insb
xlat
sbb
cltd
jg
repnz
adc
dec
int3
push
lods
es
xchg
popf
hlt
enter
or
mov
inc
aad
lret
push
jns
add
add
das
jle
in
pop
gs
movsl
pop
sbb
cmc
es
stc
push
xor
not
hlt
mov
pop
lea
push
out
cmpl
adc
push
std
push
outsl
and
and
or
mov
xchg
fisttpll
ljmp
movsb
rcll
stos
sub
or
inc
lret
fisttpll
fcompl
sub
fisttpl
sbb
out
shl
dec
test
stos
xchg
add
mov
sti
addr16
jbe
mov
xchg
mov
cmpsl
mov
addl
push
aad
push
and
jae
iret
mov
pop
test
dec
jbe
pop
add
mov
test
xlat
repnz
roll
push
bound
stc
pop
cmp
popa
lds
pop
sub
enter
loop
adc
jg
popf
lea
add
or
mov
lock
pop
mov
mov
sbb
adc
call
inc
test
add
push
fmuls
add
pushf
mov
mov
mov
pop
cltd
push
scas
iret
dec
outsl
into
mov
int3
test
out
xchg
mov
inc
fidivs
jecxz
mov
add
adc
sbb
cmc
mov
dec
and
cmp
stos
dec
fdivrs
decb
pop
cmp
jg
mov
pop
in
ret
outsl
xor
ds
adc
xchg
mov
sbb
jo
and
test
icebp
sub
sbb
sub
fsubr
fimull
js
test
cmp
mov
lock
loope
pop
call
add
mov
dec
scas
inc
and
mov
sub
andl
push
aaa
lret
fsubl
les
xor
jne
mov
popf
adc
adc
inc
into
ljmp
roll
es
lods
out
adc
or
mov
popa
xor
xor
js
arpl
int3
or
xlat
orb
popl
mov
clc
and
gs
add
mov
test
push
in
mov
hlt
and
push
cmp
std
add
out
ret
cmp
dec
arpl
pop
out
inc
iret
loop
movsl
in
push
test
xchg
jne
sub
sbb
rorb
incb
mov
mov
outsb
daa
inc
xchg
jmp
sbb
xorb
js
adc
hlt
pop
paddusw
adc
pop
inc
test
aam
lds
mov
shlb
sub
mov
xor
fwait
mov
arpl
icebp
dec
xchg
fwait
and
xchg
gs
mov
push
outsl
call
xorb
mov
push
mov
gs
mov
sub
mov
xchg
jo
dec
movsl
pop
in
xchg
loop
les
sub
add
iret
stos
lcall
push
in
jmp
repnz
data16
xchg
fld1
cmp
push
mov
xor
pop
dec
jne
dec
mov
stos
sub
cmp
push
repnz
add
mov
jo
mov
sti
arpl
dec
jae
ljmp
jno
popa
sbb
je
imul
pop
sbb
sbb
sub
flds
out
cmp
movsb
mov
dec
sbb
xchg
pusha
xchg
sub
dec
xchg
fisubl
test
std
fiadds
mov
leave
into
shl
lds
mov
leave
shll
add
add
lahf
push
cmp
dec
pop
push
cmpl
inc
shrb
movsb
push
mov
aaa
jge
ret
mov
lahf
lret
jae
mov
mov
jge
das
mov
pop
or
push
loop
aas
jne
cmc
js
ja
add
sbb
int
add
cmp
push
jns
sti
dec
inc
mov
stos
push
jnp
xchg
and
mov
sti
shlb
je
cmp
lea
add
mov
jle
push
scas
jbe
sti
xchg
fisttps
xchg
cmpsb
xchg
adc
jo
int3
xchg
xor
std
push
cs
mov
adc
fcomp
xchg
pop
xor
cmp
enter
mov
sbb
xor
pop
mov
sbb
mov
sbb
jl
cmp
cmc
dec
sub
jecxz
lcall
fcmovne
xchg
sub
into
push
mov
iret
sub
test
mov
jnp
fiaddl
mov
inc
aas
add
ret
push
sub
in
or
push
es
jecxz
and
jecxz
mov
adc
sbb
ret
or
lods
icebp
movsl
push
pop
icebp
mov
fnstsw
add
orl
lods
mov
dec
inc
popf
test
adc
in
mov
mov
loopne
and
sarb
dec
pop
adc
or
lods
xchg
pusha
stos
punpckldq
out
test
cld
mov
push
out
test
xor
movsb
testb
dec
xchg
rcrb
test
test
xor
mov
es
stos
add
lret
jne
inc
and
gs
push
leave
test
sub
mov
rcl
jg
or
jp
repnz
daa
mov
xor
jle
fs
out
jae
pusha
sbb
stos
negb
mov
sub
xor
outsl
test
es
ficomps
or
mov
inc
sbb
xchg
xchg
mov
and
jns
pop
sbb
mov
aaa
cmc
jmp
addr16
out
in
adc
imul
inc
ljmp
ret
shll
pop
fcompl
inc
jne
in
fstp
xlat
push
aaa
sbb
inc
add
dec
xor
jns
push
cs
fdivp
jecxz
push
mov
push
mov
mov
repnz
stos
push
push
xor
jmp
add
repnz
lret
loope
out
add
pop
sbb
loope
loop
sahf
mov
aam
cmp
xlat
jno
sub
cli
pop
pop
xchg
pop
push
inc
cltd
stc
jo
jbe
movswl
and
sub
unpckhps
cmp
divb
ja
mov
pop
mov
mov
mov
sub
dec
push
jno
mov
shl
sahf
and
cmp
cmc
adc
mov
ret
or
pop
aaa
xchg
fists
xchg
out
repnz
out
das
arpl
cmp
xor
cli
push
imul
les
sbb
ja
popf
icebp
pop
xchg
adc
or
data16
inc
clc
mov
ret
mov
in
cmp
jp
mov
sub
insl
xor
xor
jle
dec
push
fwait
in
ret
out
mov
daa
cltd
les
cmp
mov
ficoms
pop
cmp
fs
jle
out
mov
in
jg
inc
xor
and
push
cltd
aaa
mov
mov
insb
rcll
test
lock
ljmp
iret
jno
test
lret
in
je
push
outsb
mulb
ret
shll
filds
icebp
cmp
and
js
shlb
int
outsb
dec
xor
pop
rcll
lret
mov
dec
pminub
jno
xor
insl
aad
stos
sub
jge
mov
sbb
lahf
imul
or
dec
mov
sub
pop
ja
daa
movq
mov
pop
leave
ds
pop
das
lcall
inc
or
fs
mov
repz
jno
cltd
stos
addr16
and
lahf
push
mov
cmp
test
jb
fcmovb
push
shll
mov
call
clc
mov
in
xor
mov
mov
lcall
lds
xlat
xor
lahf
test
stos
and
adc
push
jns
fcomip
jo
inc
pop
jecxz
aad
mov
daa
outsb
mov
mov
sarb
adc
jmp
mov
adc
push
fnstcw
iret
mov
in
outsl
cli
fnstsw
adc
xor
sub
jmp
sbb
push
jp
add
repnz
pusha
imul
in
mov
xor
into
inc
sub
cmp
adc
test
xorb
adc
daa
data16
pusha
jae
xchg
cmpsl
pusha
pop
or
jp
mull
jo
mov
es
fcmovnb
and
stos
push
insb
adc
iret
pusha
lahf
jns
lret
sub
adc
inc
xor
dec
repnz
mov
pop
aam
mov
inc
lret
mov
xchg
jp
stos
mov
rcll
nop
push
repz
daa
ljmp
sbb
adc
sahf
mov
xor
das
pop
fimull
mov
inc
adc
adc
push
sbb
mov
repnz
out
out
push
fmuls
mov
adc
cmp
push
mov
sub
cmpsl
inc
sub
jo
jno
popa
in
add
sub
rolb
rclb
jle
push
pop
mov
dec
nop
pusha
cmp
mov
outsl
xor
sub
push
aad
pop
stc
mov
lds
sub
sbb
fsub
pop
add
test
nop
test
movsl
push
shlb
cli
sub
mov
inc
mov
jecxz
xchg
dec
pop
cmc
jae
scas
popf
pusha
icebp
inc
push
push
xor
inc
enter
icebp
int3
xor
mov
jl
test
data16
gs
pop
jecxz,pt
mov
xchg
ret
mov
mov
or
and
hlt
xlat
push
int
jmp
test
dec
inc
push
repnz
loop
inc
jno
aam
inc
sti
add
sahf
dec
js
push
push
push
push
repnz
inc
inc
push
mov
xchg
js
mov
and
mov
aas
and
idiv
out
cmovge
outsl
mov
push
sbb
add
sbb
adc
ljmp
xlat
lock
andb
xchg
inc
pop
sti
xor
inc
adc
ror
ljmp
rorl
xor
data16
cwtl
cmp
or
dec
jno
imul
stos
outsl
imul
sub
and
cmp
jmp
push
push
jnp
fsts
adc
mov
adc
out
mov
pop
into
lret
in
jno
out
test
dec
sbb
movsl
sahf
cmp
in
adc
pop
pushf
mov
sub
xor
fstp
xor
sub
mov
and
xlat
adc
pop
inc
or
xor
in
sub
add
nopl
mov
push
jae
pushf
xchg
xor
cmpsb
xor
xchg
movsl
lock
stos
js
fsts
push
push
push
sti
mov
inc
lea
fisubrl
jb
daa
add
mov
jns
ja
out
in
test
jle
dec
inc
and
dec
cli
add
repnz
push
dec
pop
sbb
push
test
pop
inc
imul
pusha
jmp
test
xchg
xor
jp
in
leave
xchg
jge
mov
stc
dec
push
loopne
cmp
push
sbb
dec
xor
inc
loope
or
leave
arpl
rorb
aam
into
cltd
jo
adc
iret
mov
mov
inc
mov
out
idivl
sti
sub
in
xchg
arpl
jae
and
xchg
aaa
mov
sarb
dec
clc
dec
cmpsl
jae
test
std
push
jp
pusha
je
mov
dec
pusha
push
sub
lcall
das
lahf
pop
ja
push
stc
xchg
dec
xor
shrl
iret
pushl
sbb
lds
mov
icebp
pop
mov
out
mov
jg
mov
std
pop
out
lcall
imul
sarb
pop
arpl
pop
adc
dec
pop
xor
das
add
movsb
lods
scas
aaa
xor
out
sbb
sbb
lret
lds
fs
aas
sbb
xor
and
jmp
pusha
push
dec
dec
jle
push
lcall
lcall
sub
inc
out
xor
jmp
sub
xchg
push
adc
in
or
pop
pop
mov
jne
popa
adc
out
pop
fists
bound
xchg
pop
and
lret
lret
lods
mov
or
add
aaa
shll
jns
lcall
xlat
addr16
jb
in
or
pop
mov
popf
insl
sbb
pop
pop
rolb
inc
push
push
movsb
ja
sub
in
fdivrs
mov
adc
adc
sarb
inc
ficoml
mov
pop
jecxz
out
mov
out
sbb
xlat
jae
outsb
pushf
push
jmp
jae
jae
andb
pop
aam
shlb
xor
jge
sub
push
xchg
outsl
insl
adc
lret
xor
stos
sub
cltd
push
mov
add
sbb
test
or
imul
mov
out
mov
rorl
getsec
or
xor
ret
leave
aad
jno
xchg
cmp
popl
lret
jecxz
add
idivb
mov
mov
addb
bound
insl
jp
xchg
push
cmp
cmp
add
repnz
lods
dec
mov
cmp
sub
mov
adc
fldenv
push
shll
test
xor
imul
aad
cmc
inc
aam
fldt
add
push
scas
popa
aam
push
sub
sti
xchg
sahf
inc
fimuls
push
cmp
repz
fadds
pop
stos
pop
sahf
xchg
pushf
mov
scas
or
or
jl
inc
push
andb
sub
lock
je
test
xchg
shll
jne
xchg
shll
ljmp
sbb
fdiv
popf
adc
imul
loop
mov
xlat
aaa
sarl
jo
mov
pop
stos
addl
dec
add
fstps
adcb
push
cmc
sbb
and
pop
sub
ja
popf
roll
repz
sbbl
shr
rcll
mov
loop
inc
push
out
call
inc
cmp
mov
icebp
sbb
xchg
je
icebp
or
popf
icebp
scas
rclb
fwait
clc
cmp
pop
push
dec
cmpsb
sub
dec
sub
or
sbb
xlat
add
jbe
outsl
and
fnsave
fnstcw
push
popf
lods
ss
dec
adc
mov
mov
mov
sahf
sub
pop
scas
pop
pushf
ret
imul
int3
mov
mov
cwtl
push
pop
mov
stos
inc
addl
xchg
repz
lcall
jno
test
inc
xchg
or
jns
pop
dec
push
dec
jns
inc
imul
rcr
cmpsl
or
shll
pushf
mov
jecxz
mov
into
fstpl
sub
rep
push
ja
into
negb
or
ret
push
pushf
pop
aad
imul
push
sub
push
jnp
jmp
cmp
mov
ljmp
jns
adc
inc
cmp
rclb
mov
xchg
fstpl
pop
and
mov
leave
mov
xchg
sbb
and
sub
shlb
and
cli
inc
scas
enter
adcl
sbb
jmp
pop
aad
mov
mov
test
out
fildl
dec
std
or
addl
mov
int3
out
adc
sbbb
jae
sbb
push
mov
sbb
shll
push
lea
jnp
es
adcb
lods
scas
cmpsb
mov
mov
dec
cs
lret
pop
arpl
loopne
aas
dec
cmp
cmpl
mov
insb
xchg
outsl
mov
or
cli
int
sbb
push
push
into
nop
sbb
mov
fdivrs
scas
dec
sbb
sbb
arpl
mov
and
pop
mov
enter
mov
leave
jp
pop
in
lods
ret
es
push
jne
popa
js
out
outsl
push
pop
test
es
mov
mov
add
push
test
xchg
outsb
repnz
jecxz
xchg
inc
ds
xchg
jo
rcrb
daa
aam
push
sub
push
sub
jmp
or
jae
aad
cmp
mov
sbb
outsb
xchg
add
loope
push
mov
inc
js
lret
rcll
cmpsb
call
mov
dec
jne
sahf
cli
in
xchg
xchg
popf
fs
lock
sub
mov
dec
add
push
in
inc
ret
sbb
xor
add
jecxz
cmc
pusha
sbb
cmpsl
fstpl
jmp
jl
inc
fistl
lods
mov
leave
pop
filds
add
mov
push
xchg
or
je
rcr
repz
subl
push
mov
ficoml
out
fldt
bound
inc
shl
mov
jmp
sbb
dec
or
inc
xchg
sbb
jmp
and
adc
adc
jno
xor
and
cmp
mov
roll
and
roll
push
pop
vmovdqu
xchg
add
jmp
mov
dec
xchg
mov
insl
imul
or
pop
fstps
jno
dec
add
fdivl
pop
rcll
fmuls
xchg
sbb
das
sbb
inc
jge
inc
fdivrl
cmp
or
divl
cmc
mov
push
fmul
sarl
adc
insb
test
in
in
mov
in
mov
scas
out
jge
outsl
pop
mov
mov
add
fwait
hlt
xchg
jae
push
sbb
jne
test
sub
xchg
xor
mov
test
rcrb
push
push
inc
xchg
rol
lret
test
xchg
cmp
test
pop
dec
push
sti
jle
ljmp
cmpsb
ret
push
adc
fists
dec
imul
out
adc
push
lret
shrl
mov
mov
mul
outsb
aas
fiadds
add
dec
inc
push
fstps
jp
dec
inc
popa
aas
imul
inc
jl
mov
das
mov
xor
cmp
xchg
jne
dec
push
stc
dec
mov
push
mov
cmpsb
mov
xor
inc
mov
filds
adc
roll
xchg
insb
lret
xchg
pop
insl
xor
cmp
add
testl
add
pusha
lret
add
add
addr16
add
sub
jecxz
and
jge
or
pop
loop
add
sub
jne
sub
dec
gs
pop
mov
subb
mov
jo
pop
ljmp
pop
inc
jecxz
mov
lcall
cwtl
sub
cmp
fcoms
xor
xor
push
adc
add
inc
pop
sub
out
pop
mov
loop
sarl
pop
ret
icebp
sub
fs
neg
sub
xchg
xchg
es
ds
into
iret
add
jne
fidivl
test
stos
xchg
jmp
mov
or
stos
and
jno
stos
fnstcw
mov
adc
mov
cmc
fldl
sub
das
test
out
loop
adc
mov
js
and
xor
xor
or
xor
insb
push
jo
out
mov
sbb
scas
mov
jle
imul
inc
cmove
imul
lods
aad
loope
add
sbb
or
cmpsl
out
xorb
iret
jmp
sub
adc
fidivl
iret
mov
and
xor
adc
loop
call
adc
cmp
or
fcompl
mov
bound
push
arpl
inc
pop
dec
test
outsb
mov
lret
push
push
iret
mov
int
test
pushf
outsl
imul
movsl
mov
adc
std
sbb
sti
pushf
out
sti
int
popa
mov
inc
xor
icebp
sub
dec
mov
int
cmp
mov
fisubrs
add
mov
lods
scas
pop
or
lds
add
cmp
inc
outsb
fwait
jecxz
rol
fcoml
cmpsb
pushf
sub
mov
xor
mov
or
jns
and
sub
sub
push
cmpsl
enter
add
xor
jle
movsb
sahf
insb
ret
imul
jl
sbb
or
movsl
xchg
dec
jnp
in
imul
popf
xor
nop
adcb
jg
ret
pop
push
ret
movsb
sub
rolb
jno
iret
jns
ret
test
repz
inc
inc
dec
loop
out
fwait
ror
and
mov
pop
xchg
mov
clc
push
cmc
loopne
push
test
xchg
dec
rcrb
loopne
mov
jno
insb
test
lock
mov
je
lahf
dec
loope
mov
or
dec
mov
loope
xchg
cmp
mov
push
test
push
icebp
enter
xor
enter
fists
bound
ss
lds
fcomps
ss
push
cmp
push
out
dec
mov
popf
pop
fwait
inc
cli
dec
sub
or
jmp
pushf
dec
inc
cli
test
js
stos
cmp
mov
out
mov
inc
push
mov
into
pop
lods
sti
and
fsubl
mov
xchg
jle
add
cmp
mov
mov
lret
idivb
scas
fiaddl
pusha
xchg
jbe
ljmp
cmp
imul
xchg
lock
mov
int3
pop
mov
es
inc
xor
lret
stos
sbb
mov
xchg
movb
ljmp
inc
cltd
ds
pop
sub
ss
fidivs
adc
mov
mov
lock
fistpll
push
ret
arpl
sti
push
je
push
fildll
inc
cli
ror
fsubrl
push
pop
xor
nop
pop
adc
fiadds
lret
add
lea
scas
movsb
mov
adc
add
inc
mov
lods
insl
push
xchg
mov
outsb
cld
push
push
cmpsl
jnp
into
push
aam
sub
insb
ret
adc
hlt
lds
mov
sub
cmp
loop
movsb
push
and
mov
addr16
jmp
jecxz
dec
iret
push
or
sahf
outsl
dec
addr16
add
in
cmc
mov
call
leave
pop
add
pop
lea
sti
inc
out
rorl
sub
outsb
ds
sar
cmp
or
or
or
daa
dec
push
nop
mov
lds
cltd
add
loop
or
xchg
mov
fiadds
jge
std
hlt
mov
xor
pop
imul
inc
inc
cmp
or
rdmsr
imul
mov
ja
ds
pop
xor
loop
and
or
popf
outsb
xchg
scas
pusha
dec
jmp
sti
lock
ret
and
fmul
mov
sub
xor
jge
in
shlb
addr16
addl
clc
inc
push
push
test
test
pop
xchg
push
cld
adc
popf
mov
enter
jne
ss
xchg
xor
test
jle
jns
and
arpl
jge
leave
sub
add
xchg
jno
jmp
dec
in
repz
aam
loopne
mov
xchg
xchg
lahf
sbb
mov
mov
data16
out
or
ret
ret
cld
mov
lock
lahf
aad
push
or
jns
push
insl
mov
cmp
push
mov
out
outsl
or
push
and
imul
sub
mov
addr16
mov
push
sub
pushf
repz
lcall
xchg
xor
test
and
sub
iret
dec
lods
mov
shlb
shrl
in
mov
loop
inc
jecxz
cmc
test
std
fwait
jns
jb
xchg
ret
out
mov
shll
add
jno
dec
decl
out
jmp
pop
xor
movsb
jle
push
and
or
cmpl
ja
pusha
dec
orl
jb
mov
mov
mov
inc
jecxz
sub
dec
xchg
ret
add
jne
sub
mov
dec
outsl
inc
int
push
mov
push
adc
mov
addr16
pop
jmp
pop
int3
call
cltd
in
and
jno
orl
jle
push
dec
ds
into
sub
or
test
inc
push
loop
dec
cmpxchg
and
sub
push
mov
inc
sbb
test
xor
sbb
out
or
iret
jne
dec
aam
out
xchg
fstps
fcmovnu
orl
scas
cmp
popa
mov
mov
fwait
add
dec
and
gs
into
sub
mov
in
fistpll
cmp
inc
push
add
aad
test
fistpll
sbb
lea
push
mov
aas
mov
and
dec
mov
sbb
lods
rorb
lods
es
dec
lahf
sbb
jnp
les
push
mov
or
mov
and
stos
test
cmpb
into
fmulp
scas
adcb
loop
sub
sbb
mov
out
sarl
sub
aad
or
mov
sub
hlt
dec
cs
xchg
rol
jne
mov
daa
xor
or
setns
push
ficompl
push
leave
jo
xchg
les
enter
lcall
add
push
pop
mov
loopne
inc
insb
push
into
push
mov
push
xchg
pop
bswap
lea
xlat
mull
add
test
rorb
jecxz
push
popa
add
pop
out
mov
dec
lds
mov
out
in
inc
inc
sbb
cltd
pusha
rclb
mov
mov
dec
test
inc
inc
mov
fsubp
daa
aas
jo
xchg
popf
xorb
mov
jecxz
and
mov
pop
mov
rcll
add
and
popl
fdivs
and
mov
inc
icebp
and
adc
lahf
rclb
out
dec
std
mov
clc
mov
inc
pop
push
test
push
xchg
adc
cmp
out
push
jg
ret
xchg
jg
decl
push
or
jl
mov
xor
mov
ja
and
sti
arpl
pop
xchg
int
adc
mov
push
in
jg
scas
lds
cmp
in
fistpll
xchg
adc
pop
ret
xrelease
popa
ret
insb
jne
dec
aad
out
sbb
cmp
jne
jae
fstpt
shll
fnsave
adc
mov
outsb
loope
out
insb
pop
mov
adc
std
push
clc
cmpsl
sub
adc
jmp
dec
dec
sub
push
icebp
jl
scas
or
outsl
sub
fcmovnbe
xlat
sub
shr
jecxz
es
mov
sbb
mov
and
shl
pop
mov
dec
mov
mov
push
lea
imul
inc
cmp
xchg
mov
or
test
cltd
ret
movsb
pop
fs
pop
mov
xchg
pop
sub
stos
dec
jle
test
push
call
lcall
push
data16
ret
shlb
xchg
jb
lret
cmp
lods
in
in
sti
out
xlat
test
inc
movsl
mov
xor
int
sarb
std
lcall
stos
mov
xchg
sbb
iret
aam
pushf
mov
xchg
jl,pn
lock
sub
gs
mov
dec
xchg
ret
aad
jbe
mov
jge
mov
pop
push
cmp
ret
mov
add
adcl
repnz
push
not
arpl
scas
nop
mov
pop
and
ja
out
stc
insb
mov
xchg
xor
ss
popf
popa
pop
jbe
pop
pop
and
jno
movsl
ja
test
ja
fwait
or
jmp
lret
mov
sbb
xchg
out
push
or
add
or
nop
decl
inc
movsl
mov
mov
and
inc
pop
sbb
jl
inc
mov
or
mov
dec
push
add
sahf
mov
xlat
add
cmp
or
dec
sub
testl
cmp
les
cmp
mov
out
or
or
test
out
mov
jno
or
shll
xchg
jl
inc
stos
stos
fs
loope
test
mov
insl
mov
pushf
pop
out
pop
fdivl
mov
clc
adc
icebp
dec
js
push
in
xchg
rcrl
push
and
and
loopne
push
negl
lods
lret
xlat
cmp
leave
sbb
xchg
push
sub
stc
or
fimull
nop
jns
inc
sub
xchg
or
lret
lahf
es
fldcw
imul
inc
imul
cltd
aas
lds
rolb
jns
stos
lods
sub
mov
sub
loopne
cmp
fnstenv
mov
cs
sub
pusha
or
mov
or
lock
in
cmpsb
pusha
sub
xor
fimull
sub
push
leave
addr16
jb
xchg
lret
arpl
fstp
add
xchg
dec
inc
jb
add
js
movsl
or
mov
pop
fsubrl
pop
or
repz
loop
push
add
mov
jmp
adc
aad
outsl
roll
dec
ret
imul
rcr
pop
fld
jp
arpl
cmp
rorl
sub
cmpsl
dec
imul
or
pop
sbb
cmp
xchg
dec
xor
out
mov
sti
test
ja
dec
xor
js
orb
sbb
xor
jmp
mov
dec
fimull
xor
insl
call
push
lahf
roll
nop
mov
jae
test
scas
shlb
push
icebp
mov
and
sub
jb
rcll
mov
int
jmp
repz
jg
subl
fcoms
mov
fldenv
mov
dec
jns
pushf
or
xchg
xlat
adc
movb
inc
mov
inc
jae
mov
mov
adc
fdiv
out
imul
jo
adc
loop
mov
arpl
and
sub
mov
sub
xchg
aam
cmp
jno
pop
cmp
fwait
aaa
mov
aad
push
mov
pop
jge
or
into
je
jmp
inc
pop
sub
cltd
mov
in
xor
mov
inc
pop
fmull
push
or
mov
lea
inc
pop
xchg
scas
mov
cmpsb
jno
movl
in
add
leave
ja
into
mov
jb
mov
je
mov
aad
popa
push
lret
loopne
add
shl
jl
adc
bswap
adc
std
xchg
lds
jg
xchg
inc
xchg
and
test
pusha
pusha
add
cli
mov
cmp
ja
aas
jmp
test
ljmp
jmp
pop
jmp
pop
sub
les
cmpsb
mov
sub
repnz
jb
movsl
xlat
test
mov
add
pop
jne
leave
clc
xchg
inc
repnz
imul
sarl
cli
rcr
xchg
dec
cmpsl
cmpsl
pop
leave
and
lds
jae
cmp
dec
jns
sub
fdivs
mov
or
sub
aad
adc
push
ficoml
mov
rcr
dec
pop
adc
dec
mov
test
sub
call
mov
shll
repz
mov
lcall
out
lcall
cs
mov
mov
loopne
mov
fld
inc
add
jnp
pop
xchg
and
es
cmp
loope
push
mov
sub
rorb
mov
jae
je
and
test
mov
leave
mov
mov
cmpsb
sub
pop
mov
jnp
jl
mov
adc
push
xchg
mov
jne
push
jmp
push
popa
cmp
test
mov
sbb
pop
mov
mov
push
addr16
in
push
incb
fldl
mov
add
fwait
shrb
out
add
sbb
cmp
xor
xchg
jle
adcb
shlb
pop
movsb
movsl
fimull
sbb
ljmp
fldt
das
adc
mov
je
xchg
test
cmp
mov
or
test
push
cmp
stos
ret
pop
ja
sbb
lods
stos
mov
icebp
adc
push
sbb
movsb
mov
mov
imul
mov
sub
sub
sub
jl
aam
out
push
and
mov
xor
je
inc
subb
cwtl
lock
xlat
inc
pop
es
mov
xchg
push
loopne
mov
icebp
push
mov
adc
or
sub
dec
cwtl
sarl
daa
jecxz
mov
push
stc
lods
lock
push
xchg
xorl
mov
scas
adc
cmpb
subb
out
outsb
lds
jmp
lods
in
ja
daa
sbb
mulb
lret
aaa
inc
jge
pusha
add
outsl
stos
and
jb
mov
fs
jmp
stos
outsb
mov
mov
xor
rorb
dec
dec
cli
dec
sub
test
push
xchg
rolb
and
sbb
and
stos
sub
out
dec
fnstcw
js
fs
push
std
adc
mov
repz
fsts
mov
push
pop
pushf
cmp
es
test
add
test
int3
push
scas
mov
push
test
iret
and
mov
mov
movsl
cltd
push
lds
flds
adc
and
je
das
ds
push
loopne
xchg
fstpt
loop
adc
lea
xchg
addr16
inc
adc
das
mov
mov
dec
or
mov
mov
popf
les
xchg
jae
dec
xchg
out
lret
aas
mov
and
sbb
lock
rolb
adc
outsb
and
or
dec
dec
lods
xchg
sub
mov
mov
nop
sub
push
fwait
scas
shr
pop
push
shl
test
lods
push
xchg
jb
lods
mov
add
sub
and
mov
push
das
add
xchg
lods
sahf
mov
add
stc
addr16
mov
aas
jae
add
mov
lret
cmp
test
jne
and
sub
xor
cwtl
xchg
rol
inc
push
sbb
xchg
hlt
dec
fldcw
or
outsb
out
inc
xchg
dec
pusha
pop
out
sub
sbbl
mov
sub
xor
gs
jge
pop
call
inc
in
or
test
or
fldcw
push
sti
jae
cli
fcomip
and
mov
ret
mov
xor
sub
cmp
cmp
movsl
cmp
inc
in
dec
and
xor
lret
add
mov
cmp
jl
sti
idivl
fcmovb
cli
enter
dec
xchg
fwait
aad
mov
das
pushf
mov
xor
or
sbb
and
jns
sti
push
xor
mov
mov
int
and
mov
xor
jle
enter
sti
in
imulb
aam
or
push
or
clc
enter
xchg
mov
std
pop
xchg
mov
insl
repz
cld
outsl
pop
cmp
scas
pop
mov
into
ljmp
aas
inc
inc
jnp
push
pop
vmulpd
sarl
sbb
dec
jo
loopne
enter
sub
cmp
aaa
mov
pusha
xchg
push
pop
add
inc
icebp
cmp
fnstenv
fstpt
sub
xor
jmp
sub
int3
mov
or
mov
xchg
mov
popf
jg
cmp
xchg
test
daa
inc
pop
jle
push
adc
xor
rcrb
lock
mov
mov
pop
fbstp
cmc
shl
insb
or
imul
or
hlt
xor
add
cmc
inc
stc
rolb
xor
mov
repnz
mov
or
inc
repnz
sbb
test
sti
imul
std
or
icebp
cmp
xchg
jno
outsb
or
js
scas
mov
stc
rorl
ret
push
adc
inc
rolb
test
pop
roll
rcrb
repz
sub
or
cld
int3
jg
cli
mov
mov
cld
loopne
test
push
sub
push
nop
or
out
adc
sub
enter
inc
popf
pushf
lods
and
lret
in
sbb
cmp
ret
jg
pop
shrb
xchg
iret
cmp
imul
sbb
cmpsl
inc
mov
test
lret
dec
pop
and
and
fdivrl
push
jmp
in
jmp
pop
pop
inc
sbb
js
fsts
sbb
enter
jg
call
sub
stc
lcall
cmp
ret
xchg
test
lret
adcl
sbb
sub
dec
movsb
mov
or
shl
dec
outsl
mov
adc
js
lea
push
mov
ds
stos
sbb
mov
bound
call
mov
ja
mov
xor
mov
push
mov
mov
or
xchg
xchg
out
and
dec
push
or
ds
cmpsl
xchg
push
call
mov
cmp
pusha
adc
add
adc
fstpt
movsb
mov
ljmp
lds
jnp
into
mov
inc
pop
mov
sub
out
cmp
push
add
dec
dec
pop
mov
xchg
loop
repz
add
sub
scas
dec
mov
stos
mov
mov
das
push
cs
xor
push
xchg
cld
xchg
or
mov
imul
shrl
push
push
inc
lret
loope
sub
jl
pop
rorl
movsb
pop
mov
jo
cs
xlat
mov
insb
sub
fisttpl
and
outsl
dec
shlb
dec
lock
dec
mov
or
setno
iret
jl
mov
cmp
fldenv
cmp
mov
stos
test
adc
xchg
je
out
push
mov
push
dec
adc
gs
jae
sub
jle
xchg
icebp
cld
adcb
insb
mov
lret
cmp
shrb
adc
sbb
lock
je
pop
js
xchg
shll
shr
mov
repz
outsl
fnstenv
xchg
test
and
xor
ss
popa
test
mov
out
out
pop
inc
or
in
jmp
xchg
and
mov
jns
jo
cmp
push
sbb
cmp
sbb
pop
nop
jbe
pushf
scas
fisttpl
push
pop
enter
sub
lea
cli
inc
pop
xor
fs
movsl
jo
outsb
cmpsb
mov
int3
add
lds
or
inc
adc
ret
dec
insl
mov
adc
scas
cmpsl
mov
jno
mov
push
push
pop
dec
mov
inc
lock
jecxz
enter
lret
jle
add
insl
cmp
or
dec
jbe
cwtl
lcall
push
and
mov
mov
xor
sbb
std
ljmp
cmpsl
cmpsb
es
jno
add
pop
lret
in
mov
adc
lea
jnp
stos
jg
clc
sub
clc
mov
mov
daa
in
mov
mov
pop
adc
add
imul
lods
mov
movsl
cmp
repz
in
ss
in
mov
pop
dec
pop
mov
insb
xchg
js
add
pop
stos
pop
sbb
frstor
fstps
rcrb
addr16
pushl
mov
pop
aaa
sbb
push
pusha
dec
pop
enter
lock
ljmp
inc
popf
insb
inc
push
or
je
fiaddl
les
bound
divb
push
push
enter
clc
fsubrl
add
cs
cld
cmc
add
cltd
mov
insb
icebp
mov
sbb
and
sti
and
mov
aam
loop
arpl
iret
call
fyl2xp1
pop
mov
cltd
lfs
jb
hlt
imul
xor
mov
mov
outsl
mov
imul
int
adc
sub
insl
outsb
push
xor
or
jg
movsb
xor
in
push
movsb
pop
jae
js
mov
or
mov
or
loopne
xor
in
push
sbb
add
mov
adc
icebp
es
jns
inc
mov
and
inc
pop
js
call
fcmovnb
push
cld
aad
inc
mov
jp
ljmp
rcll
aaa
cmp
jno
jg
mov
inc
std
movsb
leave
xchg
pop
das
pusha
add
into
popf
jle
jl
xchg
and
push
out
shr
adc
dec
shrl
or
ja
add
pop
sbb
lcall
and
es
mov
pop
cmpsb
xor
xor
aaa
loopne
sub
and
add
or
lods
dec
push
mov
add
mov
sbb
mov
inc
ret
sub
or
je
lret
jns
adcb
push
inc
mov
hlt
divb
mov
repnz
sbb
stos
jge
orb
clc
jbe
mov
push
sbb
jno
push
jge
and
dec
xchg
pop
js
fsin
mov
pop
in
js
sbbl
mov
fld
call
shlb
lock
aas
dec
into
rorb
pop
aad
jo
sarb
leave
mov
push
sahf
mov
fsubs
xchg
inc
jbe
mov
jmp
sbb
mov
outsl
js
into
push
in
push
push
ss
pop
push
sbb
arpl
inc
arpl
cs
fwait
sbb
and
pusha
insl
lock
push
xchg
rcrb
fisubl
and
enter
adc
push
jecxz
orb
clc
inc
rcl
inc
aam
ds
xor
mov
rolb
sbbb
dec
jp
pop
dec
sbb
jecxz
inc
mov
cld
and
add
fadds
mov
or
mov
xor
add
sbb
mov
mov
mov
lret
mov
push
test
jne
pop
mov
inc
cmp
add
in
idiv
xchg
mov
fiadds
sub
js
jmp
iret
in
and
or
es
mov
xorl
or
jbe
xor
and
pop
icebp
xlat
out
xchg
insb
mov
cli
jge
inc
repnz
jp
mov
sbb
add
data16
dec
dec
insb
xor
loop
sahf
mov
ret
test
loop
xlat
cmpsl
out
and
sti
nop
insl
and
sub
outsl
stc
lock
mov
mov
pop
popa
in
js
or
fs
add
mov
lods
loope
jle
pop
stc
mov
stos
out
popa
mov
icebp
arpl
lret
dec
std
mov
sti
imul
cmp
mov
lcall
push
jne
scas
popa
adc
cmp
frstor
mov
ljmp
pop
iret
jmp
jge
mov
pushf
and
jbe
lds
lea
and
jb
cmp
cmp
mov
xchg
dec
aaa
push
inc
fdivs
jbe
dec
adc
dec
lods
jge
cmp
inc
test
sbbl
out
repnz
out
pop
fcmovne
dec
aas
vpandn
fs
mov
ror
sub
pop
out
cmc
out
and
cmp
push
pushf
mov
or
sbb
sbb
mov
pop
out
imul
jnp
call
lcall
les
addb
aas
mov
test
aad
adc
or
cmpsb
movsb
pop
jecxz
insl
aas
sbb
xchg
pop
inc
mov
mov
icebp
sub
and
aad
and
push
ljmp
and
adc
sub
adc
push
fcompp
inc
sub
jp
pop
les
adc
push
fwait
dec
fld
lret
dec
arpl
mov
xchg
inc
nop
cmp
lret
xchg
addl
cmpsb
sub
push
xor
popf
aad
push
inc
daa
push
mov
adc
cmp
fsubl
or
stc
cmp
jl
xchg
out
jmp
pop
imul
push
mov
mov
or
icebp
sub
jns
outsl
cmp
cli
ljmp
cltd
fs
mov
mov
in
les
mov
dec
pushf
test
push
cmpsb
gs
cld
mov
mov
jns
push
mov
cmp
les
faddl
cmpsl
movsb
cltd
dec
arpl
outsl
dec
xadd
pop
or
adc
jns
mov
iret
test
mov
dec
insl
cmpsb
repnz
nop
repnz
jg
js
sbb
or
and
add
xor
out
mov
adc
mov
jae
push
push
scas
rorb
repz
mov
dec
in
push
pusha
ret
xchg
bound
rorl
pop
out
mov
scas
hlt
xorl
xchg
inc
mov
iret
in
dec
sub
xlat
pop
and
mov
cltd
scas
enter
insl
sub
add
or
mov
rorb
jge,pt
or
add
lock
sub
repz
addr16
jl
in
lahf
fdivl
in
mov
mov
push
mov
xorb
test
dec
js
xorb
sub
jno
and
fldt
sub
lea
inc
xor
sar
ljmp
push
dec
lret
aas
add
imul
cltd
imul
insl
push
lock
dec
and
mov
push
es
cmp
bound
push
outsb
mov
cmp
mov
mov
imul
cltd
xchg
mov
or
sbb
add
push
dec
fnsave
xchg
jmp
push
xor
ficoms
add
jo
in
lods
leave
jp
out
mov
lods
xor
insb
sub
icebp
push
scas
jns
adc
mov
jecxz
scas
in
mov
dec
lcall
xorb
test
push
jno
mov
push
cmp
or
pop
mov
or
sbb
cmp
or
adc
xchg
addr16
stc
cmp
xor
jp
pop
imul
push
xlat
loopne
cmp
ret
fsub
add
aaa
or
jecxz
fsubrs
xor
cmpsb
nop
orb
ret
cmp
xchg
std
stc
push
cmp
xchg
jns
stc
sub
enter
insl
push
sub
in
sub
jl
mov
pusha
ret
add
cmp
bnd
or
sar
mov
cmpsl
aad
rcrb
jle
adc
jl
cltd
repz
jge
sub
dec
out
adc
es
pop
sub
sahf
adc
rol
mul
ds
xchg
mov
sbb
dec
aaa
movsb
out
cld
sbb
cmp
stc
movhps
inc
and
xchg
lret
sub
pop
cltd
outsb
cwtl
dec
scas
xchg
imul
pop
jge
outsb
jnp
fildll
jmp
mov
dec
mov
fsubs
stos
adc
and
sbb
mov
add
scas
xchg
mov
add
xchg
ja
out
sbb
rclb
or
stos
jg
das
les
sbb
aas
adc
jno
mov
push
sub
adc
jbe
pop
loopne
scas
add
inc
pop
or
mov
pop
add
mov
jae
dec
les
mov
sahf
inc
lret
and
je
lods
pop
jno
and
sub
or
dec
stos
sahf
pop
fwait
mov
pop
or
cmp
xchg
jmp
mov
sahf
adc
and
xor
or
or
mov
and
fnstenv
mov
clc
xchg
cmpsb
rcr
dec
cmp
pop
fidivrl
aam
pop
jmp
sbb
leave
lret
push
outsl
int
inc
cmp
out
pop
popf
int
add
std
fisttpl
test
aaa
faddl
filds
iret
fcompl
push
push
jo
cli
sub
sahf
mov
xchg
fcomi
xchg
ljmp
repnz
loop
xchg
leave
mov
jl
mov
clc
call
daa
aas
mov
repnz
aam
stc
xor
or
sbbl
push
loope
xchg
shlb
mov
xchg
sub
ljmp
lods
and
mov
push
bound
das
jno
cpuid
xchg
jmp
fbld
pusha
int
bound
inc
gs
imul
mov
rorb
sarl
call
fwait
lahf
out
push
fidivrl
add
push
adc
jnp
xchg
and
cmpsb
imul
cmp
or
fcmovnb
mov
fstl
jge
pusha
inc
ret
add
adc
cltd
mov
and
dec
int3
adc
dec
xor
pusha
jne
aam
bound
ja
mov
in
pushaw
lahf
gs
imul
and
sub
inc
lds
jb
mov
test
or
jecxz
or
push
sub
jecxz
push
je
mov
pop
or
es
loope
jg
sbb
addr16
cmp
pop
loope
xlat
movsb
ds
inc
into
int
fs
inc
cmpsb
push
push
out
ror
mov
ret
lods
ljmp
dec
pushf
xor
lahf
std
jb
fimull
out
jnp
movsl
fs
imul
in
xor
xchg
stos
mov
mov
push
cmpb
pop
mov
xor
shrl
sub
dec
outsb
mov
mov
ffree
dec
mov
push
push
test
out
and
pusha
xchg
lods
xor
or
cltd
mov
lahf
adc
inc
mov
cli
pop
incb
push
daa
fdivrl
xchg
roll
out
mov
cs
rcll
mov
lret
jb
fisubrl
push
mov
jmp
jmp
data16
ret
test
into
or
pop
adc
sbb
js
or
aad
xchg
add
adcl
popa
test
and
sub
fcoms
mov
ja
fcoml
sbb
js
and
test
inc
sub
ljmp
repz
mov
pushf
push
inc
aad
cmp
push
aad
fneni(8087
ret
push
inc
mov
scas
xchg
loope
xchg
hlt
or
jne
jns
inc
inc
adc
pop
push
ds
jnp
inc
add
add
xchg
add
jg
lea
int
fcoms
outsl
leave
mov
pop
movsl
outsb
sbbl
adc
rorb
rcll
cwtl
inc
iret
push
jbe
mov
push
jp
add
jns
loope
inc
outsl
xchg
adc
and
jp
xor
mov
pusha
aad
xchg
add
leave
add
xchg
insl
loop
clc
aaa
mov
mov
addr16
gs
das
aad
mov
rcrl
pop
jo
add
fwait
jnp
sbb
mov
xlat
test
mov
aam
dec
ja
and
stc
adc
ds
rcll
mov
xchg
icebp
stc
lahf
add
std
aad
dec
jg
mov
in
iret
mov
or
aas
cmp
lret
jge
das
dec
fwait
add
imul
xor
adc
test
push
lock
loope
jne
xor
pop
ja
pop
push
or
bnd
mov
pcmpeqb
inc
movsl
mov
dec
sbb
mov
cld
xorb
pushf
in
sbb
int
and
outsl
andb
loope
pushf
mov
jae,pn
cmp
lock
jg
add
das
fsubr
sarl
lahf
scas
movsl
test
mov
repnz
lahf
rcl
mov
jmp
pushf
stc
je
ss
int3
mov
daa
inc
mov
ljmp
ds
inc
cmpb
add
orb
cltd
dec
ret
arpl
add
cmp
repz
addl
pop
sub
mov
lret
gs
iret
insb
xchg
fwait
testb
lret
sub
jmp
xchg
mov
ss
faddl
and
jns
and
mov
jno
decl
fists
cwtl
xor
les
pop
lret
ljmp
sub
movsl
mov
xchg
outsl
sub
std
mov
pop
and
push
mov
insb
inc
ret
movl
cltd
lods
fwait
call
mov
push
sub
les
movsl
lret
imul
adcl
or
rclb
push
int3
leave
sub
xor
dec
loop
or
cmc
inc
loop
pop
push
les
rcr
jmp
lret
push
dec
popf
xchg
xlat
mov
pop
cmpsl
leave
popa
jge
int
sub
fwait
inc
jl
mov
push
xchg
adc
push
pop
clc
mov
rcl
pop
lcall
in
push
pop
or
mov
pop
sub
mov
repz
arpl
hlt
pop
fsubs
mov
test
je
sbbb
jno
jb
lea
and
xrelease
daa
inc
int3
mov
mov
in
xchg
pop
mov
into
dec
xor
addl
lret
stos
fs
call
insl
pop
xor
pop
sub
mov
punpckhwd
jg
mov
shrb
stos
push
xchg
xchg
pop
int3
and
mov
outsl
dec
lock
inc
cmp
xlat
daa
mov
lcall
gs
lret
jbe
adc
xchg
call
and
lret
int3
out
sub
push
inc
xchg
pop
jnp
divb
cmp
insl
ja
bound
jmp
xor
cltd
test
int
mov
sub
fs
int
push
adcl
in
pushl
jle
jne
jp
pop
pop
and
pop
dec
cmp
lea
adc
call
nop
dec
xor
xor
pushf
inc
jne
sub
mov
xchg
inc
cwtl
push
jo
sbb
or
mov
ds
jno
stos
imul
loop
push
mov
test
inc
movsl
js
dec
adc
stos
adc
jns
movsb
daa
inc
jp
js
adc
cld
outsl
xchg
cmpsl
lock
test
cmp
cmp
fs
add
test
dec
les
ficoms
mov
pop
mov
out
imul
pop
popf
popa
lahf
ja
movsl
pushf
dec
into
imul
cmpsl
les
adc
xchg
arpl
popa
rorl
jo
mov
popf
pop
sbb
xchg
ljmp
lret
jo
mov
test
std
shlb
dec
mov
jge
sub
and
jmp
sub
push
cmp
arpl
shll
push
shlb
shl
mov
xchg
jb
int
jo
xor
mov
dec
fsubp
test
inc
xor
xor
idiv
push
jmp
das
xchg
and
into
mov
inc
dec
or
mov
out
in
push
push
cmp
push
loope
sub
fmull
pop
xchg
mov
inc
sahf
mov
outsb
xor
pop
inc
sbb
stos
push
xchg
aas
icebp
xor
or
imul
dec
ret
imul
dec
xchg
dec
xor
inc
bnd
add
mov
cli
or
jae
xor
fmull
cmp
inc
imull
mov
sahf
adc
icebp
call
stos
stos
cli
sbbl
cmove
cmp
pop
inc
ret
dec
sub
push
hlt
les
mov
addl
pop
iret
dec
adc
pop
jbe
shlb
popa
sbb
pop
sahf
cmp
int
fcoml
pop
mov
jge
movsb
scas
adc
dec
xchg
mov
push
push
or
lock
add
shlb
cmp
push
mov
clc
add
addr16
cmpb
sbb
lods
jg
xor
jmp
fisubs
lock
push
or
aaa
inc
mov
out
lcall
xor
adc
xchg
rolb
rcr
into
fnstsw
push
test
dec
testb
rorb
mov
std
test
adc
mov
xor
lret
outsb
and
push
enter
mov
xor
imul
add
inc
mov
inc
sub
adc
mov
mov
push
ljmp
inc
adc
dec
add
hlt
cmp
inc
cmpsl
movsl
xchg
xor
xor
icebp
dec
outsl
out
cmp
adc
mov
inc
push
and
mov
inc
test
loop
shrl
cs
mov
lock
dec
setnp
mov
add
cmp
jp
push
popw
cmc
mov
push
mov
xchg
cld
lods
roll
test
push
sub
sub
mov
add
sub
sub
cmp
xchg
add
movsb
cmpsl
lods
adc
mov
das
aam
inc
pop
mov
dec
xchg
lret
sub
jg
ss
xor
push
divl
fimull
pop
mov
adc
mov
cmp
es
sbb
mov
pop
push
movsb
into
jle
scas
jecxz
rclb
test
mov
cs
push
cmp
imul
jg
test
adc
aam
adc
testl
sahf
ljmpw
and
push
or
push
dec
arpl
xchg
inc
in
jg
jmp
jecxz
adcl
push
fdivrl
sbb
jae
cmp
gs
mov
les
push
mov
mov
cmp
or
clc
mov
inc
dec
gs
cmp
pop
dec
fimuls
pop
cmp
mov
in
adc
sarb
movsb
jg
lods
inc
sub
lock
add
xchg
imul
sbb
addr16
loope
pop
icebp
rcrl
nop
ret
cwtl
and
out
cmp
cmp
sbb
xchg
ret
add
or
shrl
dec
rclb
cmp
cltd
or
ror
xlat
inc
sarl
les
sahf
inc
and
data16
popf
nop
adc
dec
xor
or
outsl
jle
insb
je
shl
xchg
je
inc
ficoms
mov
mov
xor
lret
ret
insl
outsb
mov
add
mov
popa
cwtl
jge
cli
push
sbb
mov
pop
or
pop
add
mov
pop
sbb
dec
mov
mov
lock
push
insl
cmp
xchg
imul
pop
ret
and
and
inc
int
cmc
clc
dec
dec
repnz
dec
add
sar
hlt
sahf
and
imul
scas
push
sub
dec
stos
fists
mov
mov
ja
mov
les
mov
sbb
das
push
inc
dec
sub
cmpsl
sub
inc
pusha
sahf
push
inc
movsb
pushf
dec
mov
pop
in
or
rcll
mov
aad
into
aam
daa
sub
pop
mov
cltd
adc
push
in
jns
lret
push
test
inc
pop
les
dec
popf
add
aam
shll
jo
and
pop
mov
pop
mov
mov
xchg
int
imull
mov
imul
jle
pusha
sub
push
ds
pusha
cmpsl
and
fisubs
dec
cli
lahf
daa
pop
shr
dec
sub
pop
fs
mov
pop
sub
bound
jnp
movsl
dec
adc
stos
push
or
pop
push
or
int3
test
fidivs
cld
sub
push
insl
cmpsl
push
fisttps
shlb
jmp
js
bound
nop
add
js
xchg
popf
testl
dec
loopne
inc
and
out
int3
push
xor
jne
test
das
ljmp
sub
pop
cmc
sbb
or
int3
repnz
mov
imul
push
add
and
cmp
mov
jge
scas
test
jmp
mov
and
hlt
push
int3
inc
pop
add
or
cld
test
dec
icebp
loope
in
idivb
or
dec
mov
cmpsl
daa
or
imull
test
jmp
adc
js
cwtl
std
or
loopne
xor
sbb
ret
inc
xor
and
cmpsb
adc
imul
xor
sbb
iret
bound
xor
push
adc
inc
cmp
loope
jb
mov
shl
icebp
dec
xchg
jb
pop
mov
cwtl
mov
lret
subl
cmpsl
sarl
insl
rcrl
repz
sahf
or
cmp
lods
mov
or
adc
fidivs
mov
mov
sbb
dec
stos
dec
sbb
mov
leave
mov
in
or
daa
xchg
pop
pop
hlt
mov
or
insl
add
push
cmp
push
cmp
dec
sub
xchg
out
icebp
imul
pop
xlat
xlat
loope
sub
cmp
jns
int3
dec
lcall
je
sub
xchg
mov
lahf
mov
out
std
out
pop
adc
imulb
push
lret
iret
neg
mov
lods
sbb
cmp
dec
jns
inc
daa
test
push
jbe
adc
test
ret
scas
outsb
push
jo
pushf
push
push
addr16
adc
rcrb
pop
push
dec
jbe
cmc
movsl
loopne
cmp
jo
mov
lret
and
repz
xchg
lea
mov
mov
sti
adc
icebp
into
orb
adc
cmp
pop
and
dec
addr16
nop
repz
push
sub
cltd
rolb
stos
ds
addr16
jmp
push
cmpl
fcomps
test
roll
push
cmp
mov
loope
push
shr
dec
and
int3
lret
cmp
mov
fisttps
cmp
hlt
cmp
fwait
leave
dec
out
data16
ja
cli
inc
and
xchg
mov
clc
cmp
cmc
popa
pop
call
dec
pusha
jb
out
fbstp
sub
inc
cmpsb
hlt
xorb
cmp
push
cmp
loope
xor
clc
popa
popf
and
inc
xor
lahf
rolb
push
pop
jns
repz
les
pusha
clc
js
xor
mov
insb
pop
outsl
sub
pushf
sub
xlat
cwtl
or
cld
jno
and
mov
scas
and
push
push
mov
outsl
cmp
add
repz
jo
mov
push
icebp
xor
mov
push
mov
jp
pop
mov
pop
call
or
adc
mov
addl
outsl
gs
pop
mov
in
fldl
mov
aam
lcall
pop
cld
scas
mov
inc
fs
cwtl
mov
pop
xchg
push
lea
mov
adc
in
sbb
cmp
fs
mov
cmpsb
jns
and
mov
pop
jge
jmp
outsb
mov
fbstp
dec
sub
jecxz
dec
and
inc
xlat
sarb
in
push
cmp
pop
pop
pop
loop
mov
mov
xchg
sub
or
cmpsb
lock
cmp
sbb
dec
mov
leave
les
fmul
inc
outsb
imul
sub
xchg
mov
bound
push
mov
jae
test
fwait
cwtl
pop
stc
repz
insl
sbb
mov
and
adc
aaa
cmp
rolb
pop
rorb
pop
nop
aad
addb
out
cmp
xchg
sbb
clc
sub
pop
std
sbb
xchg
loopne
mov
dec
cli
adc
adc
jnp
divl
call
nop
mov
ss
movsl
mov
js
jb
aas
mov
pop
sbb
cwtl
movsl
arpl
cld
or
jb
xchg
mov
xchg
sub
out
int
pushf
cmp
notb
mov
mov
dec
lea
xchg
incl
mov
jg
div
or
pusha
cmp
cwtl
jmp
rclb
dec
mov
mov
fs
adc
jbe
cmpsb
repnz
in
or
pop
or
inc
push
mov
xchg
lahf
pop
xor
mov
jnp
pushf
mov
push
arpl
int
pop
pop
adc
out
sbb
add
inc
dec
mov
pop
inc
lods
add
mov
in
xorb
push
jae
ds
mov
push
fidivs
mov
fstl
in
sbb
mov
adc
xor
roll
add
daa
popa
int
mov
gs
or
hlt
mov
xor
or
insb
out
lret
push
xchg
inc
or
jne
roll
mov
out
popa
out
or
jo
popf
adc
aam
push
cmc
sub
inc
fwait
xchg
xchg
add
ret
ret
xor
roll
xlat
cwtl
and
adc
cltd
aas
mov
sbb
out
sbb
notb
hlt
cmpxchg
cmp
xchg
xor
fwait
push
subl
pop
int3
mov
jb
and
in
lods
xlat
popa
jnp
sbb
pusha
inc
inc
fisubrl
jge
push
mulps
movsl
bound
sub
sti
pop
jno
cld
cmp
sbb
data16
fsubrs
orl
aam
and
cmp
jne
sti
negb
aas
mov
out
pop
bound
in
xchg
cmpsb
xchg
pushf
push
dec
repz
mov
push
mov
adc
fsubs
sub
mov
xchg
jo
jmp
stc
jns
mov
movb
mov
dec
jecxz
or
adc
sub
inc
je
inc
sub
sbbb
mov
pop
adc
call
pushf
pusha
and
cmp
roll
mov
jo
adc
ret
int3
sti
bound
stos
cltd
adc
sbb
dec
in
adc
push
cwtl
pusha
add
les
mov
repnz
xlat
aaa
add
sub
mov
or
pop
out
addr16
xor
flds
rcrb
icebp
sbb
rolb
stos
int3
negb
inc
ja
mov
ret
adc
mov
repnz
mov
arpl
in
jo
jle
fimull
or
mov
add
mov
lcall
xor
lea
mov
das
xlat
fsubl
mov
repnz
xlat
movsb
enter
or
stos
hlt
or
das
adc
push
push
jge
lret
pop
hlt
dec
icebp
push
stos
inc
inc
loope
ret
dec
cwtl
inc
lods
jl
lds
cpuid
mulb
cmpsb
pop
jl
popa
fistl
arpl
outsb
cmp
movsl
int
fisttpl
inc
inc
outsb
pop
inc
adc
mov
cmpsb
jge
or
testb
jae
pop
das
out
lods
sbb
push
leave
inc
std
xchg
pop
pop
jecxz
pop
jle
out
xchg
cmp
test
aad
clc
aaa
dec
xchg
js
aas
aas
imul
jno
inc
inc
outsl
xchg
nop
pop
and
push
in
push
push
cmp
add
mov
cmc
add
and
into
insb
shrl
es
push
test
aam
jp
dec
pop
add
push
adc
imull
fucom
pushf
enter
push
mov
int
in
icebp
jnp
sahf
aaa
sub
aad
and
imul
dec
addr16
mov
jnp
dec
sti
and
lcall
es
jae
push
and
sti
and
adc
and
cmp
mov
fwait
sbb
fwait
dec
push
cmp
popa
dec
push
scas
mov
inc
inc
call
pop
jno
test
xchg
pop
ficompl
cmc
adc
rclb
pop
int
cmp
jae
loope
pop
jecxz
dec
jbe
fwait
mov
mov
ja
push
aaa
scas
cwtl
std
sbb
insl
push
aam
push
add
pop
ds
push
lock
cld
add
xchg
and
mov
mov
xchg
scas
dec
scas
pusha
cltd
movsl
push
paddusw
push
or
dec
inc
inc
cmp
push
mov
xchg
mov
insl
pop
push
xor
push
iret
mov
iret
lahf
fdiv
in
imul
rcr
cwtl
add
sarl
loop
shll
clc
test
shrl
adc
cmpsl
in
jno
mov
inc
or
mov
xor
and
sub
sub
loope
jo
sbb
insb
rcrb
mov
mov
sbb
mov
xor
push
mov
stc
push
mov
test
mov
scas
push
das
inc
add
dec
xlat
xor
push
sbb
aad
jmp
rorl
pop
jbe
fwait
or
aad
xchg
orl
fnstcw
add
dec
fwait
jns
adc
xor
fucomp
arpl
gs
dec
jle
xor
imul
jb
ljmp
in
lret
jne
jmp
cwtl
mov
xlat
xchg
ljmp
gs
int
push
out
lock
fists
je
rcl
cmp
ja
out
imul
jle
cmpsb
cmpsb
jmp
pushf
pop
lret
jbe
sahf
jle
jl
stos
dec
or
push
sbb
adc
cltd
lea
mov
pop
push
jecxz
dec
mov
jb
mov
push
cli
xchg
pusha
int
inc
push
inc
andl
mov
sub
std
add
jle
shlb
adc
or
rcrl
cmp
xchg
dec
dec
jno
jle
adc
pusha
repnz
lea
movsb
mov
and
mov
ds
int
xor
lret
adc
add
shr
dec
push
pop
xchg
movsl
push
rclb
mov
mov
test
mov
pop
and
mov
cld
lcall
pop
xchg
test
imul
pop
aas
test
push
mov
cwtl
roll
jmp
xchg
add
call
repz
out
push
aas
les
pop
pop
pushf
sar
xchg
cmpb
xor
inc
dec
popf
mov
or
jp
xor
fidivrl
outsb
sub
fcompl
mov
or
call
jne
sbb
addr16
adc
cmp
and
add
inc
nop
bound
nop
lahf
sub
popa
mov
xchg
out
xor
xchg
inc
jp
repnz
ljmp
push
pop
outsb
cli
push
push
jle
inc
scas
jne
ss
cmp
dec
mov
mov
inc
adc
add
lods
add
loope
fidivrl
fmulp
pop
int
js
pop
shl
mov
pop
inc
xchg
or
jle
pop
pop
insl
xor
call
dec
sub
add
or
int3
mov
push
dec
fsubrs
inc
jns
call
out
mov
or
call
jne
cmpsl
stc
test
fdivl
add
test
rcll
in
fcmovu
movsb
mov
inc
negl
ss
out
cli
lds
rcl
jb
in
hlt
sbb
jge
inc
xchg
adc
arpl
ss
mov
inc
mov
imul
add
mov
xor
inc
cmpsb
pop
dec
es
add
xor
gs
rorl
outsl
fbstp
popf
lds
lret
or
mov
leave
xor
fildl
or
xor
push
jmp
stos
repnz
sub
js
xchg
int
test
aad
xchg
mov
jmp
push
out
add
mov
fs
jge
inc
test
repnz
outsb
out
cltd
adc
out
mov
fwait
outsb
or
lret
outsl
adc
dec
fs
cmpsb
call
in
lods
add
cmc
cmp
pop
add
pop
es
jno
inc
push
or
aam
dec
mov
icebp
cmp
in
jno
xor
and
loop
mov
mov
mov
mov
js
imul
dec
mov
lcall
xlat
or
sub
xor
mov
lods
clc
jecxz
pop
push
push
and
fwait
jmp
and
out
movsb
sbb
dec
int3
sar
or
inc
lods
mov
int
push
sbb
sbbb
xchg
es
dec
in
pop
mov
xor
pop
lret
push
mov
push
or
lds
movsl
sbb
incl
xlat
add
add
dec
pop
in
je
scas
pop
add
movsb
sahf
dec
jp
mov
cwtl
xchg
hlt
jo
mov
stos
test
test
shlb
push
jge
arpl
xor
pop
mov
cmpsb
push
add
cmpb
clc
in
lds
les
push
push
cmp
ljmp
mov
ffreep
adc
out
insl
imul
bound
scas
sbb
mov
mov
cmpl
out
push
lret
add
out
in
hlt
data16
icebp
sbb
leave
mov
rcll
cmpl
pop
push
idivb
mov
inc
aad
call
mov
in
xchg
dec
ss
into
mov
lret
call
sub
arpl
adc
xchg
test
outsl
pop
sbb
pop
hlt
mov
test
fs
cwtl
adc
adc
xchg
ret
adc
pop
xchg
in
xor
or
jp
insl
jne
fildl
call
mov
mov
and
lcall
out
xor
jp
cwtl
push
test
std
add
mov
cmp
jnp
jge
mov
hlt
rcll
xchg
repz
adc
xchg
jnp
ret
fwait
or
sub
pop
push
js
rorb
inc
jne
xchg
ret
pop
adcl
or
pushf
cmp
pusha
sbb
cs
push
push
int
push
and
leave
loopne
xchg
int3
ljmp
push
jge
fistl
xchg
jge
mov
push
orb
sbb
rcpps
scas
jno
inc
fwait
mov
push
and
jb
loopne
pcmpeqd
push
test
adc
fsubrl
or
dec
cmp
lock
es
xchg
push
sub
scas
or
cltd
popf
sub
dec
sub
cld
mov
lahf
inc
cmp
dec
dec
jno
xor
shrl
push
dec
xchg
iret
leave
add
push
lcall
in
in
ror
mov
into
dec
add
pop
lea
ficoml
into
cld
push
and
jge
sub
xchg
xchg
arpl
out
testb
fdivs
fnstenv
je
flds
sub
mov
xchg
dec
repz
push
and
imul
mov
cmp
fbstp
or
or
sahf
mov
les
pop
inc
ret
sbb
jge
shll
mov
dec
out
mov
jae
out
cld
lods
mov
scas
repnz
add
jmp
fnsave
out
std
cwtl
jns
sbb
xchg
cwtl
pop
adc
es
dec
repz
icebp
mov
cli
dec
in
iret
sub
pop
mov
je
jmp
pop
cmp
cs
cld
or
mov
pop
add
testl
mov
cmp
stos
mov
shrb
jge
sub
cltd
or
inc
stc
cltd
in
mov
test
mov
imul
mov
xor
test
or
and
mov
cld
mov
int3
insl
mov
lahf
clc
jge
scas
bnd
lret
jno
ja
or
daa
outsl
jne
test
xchg
fcomps
adc
sti
sbb
les
aad
jnp
cmpsb
xor
lds
jle
popf
inc
cli
inc
inc
data16
gs
or
fisubrl
cmp
sbb
jb
push
mov
jbe
js
cmp
lods
inc
test
addb
into
call
cltd
jg
jle
aam
lret
inc
inc
pop
sti
mov
or
jl
insl
fisubrl
inc
les
inc
xchg
inc
lahf
lods
cmp
lret
decb
pop
pop
out
lods
add
or
add
jle
pop
push
mov
mov
sbb
lods
fisubl
adc
cltd
mov
inc
gs
pusha
js
ss
out
cmc
popa
mov
cltd
mov
mov
dec
mov
arpl
out
cwtl
incb
scas
int
cmp
int3
stos
rcll
unpckhps
js
js
sub
jge
outsl
or
push
xor
lods
dec
push
fwait
dec
pushf
es
push
leave
jg
pop
scas
movsb
test
fchs
jb
repz
adc
sbb
mov
mov
sbb
dec
dec
lret
add
or
int
add
adc
lods
cwtl
pop
jo
sbbl
aam
divb
in
add
and
adc
mov
push
mov
insl
push
dec
push
xchg
jl
shlb
ss
jns
jno
ja
inc
shrl
fisubs
ret
les
mov
add
jne
in
inc
add
loop
fs
adc
mov
xchg
imul
aaa
in
lret
adc
push
xchg
inc
out
aad
cmp
dec
popf
pop
xor
jns
lret
in
lds
jae
sbb
test
frstor
xchg
add
jae
jns
es
push
lods
push
stc
addr16
or
xchg
pop
stc
dec
lret
fistpll
dec
into
mov
cli
es
fwait
xchg
cmp
pop
fs
sti
mov
jl
enter
faddl
std
mov
push
sahf
imul
push
roll
dec
sub
xor
add
orb
pusha
add
dec
adc
adc
mov
ss
popa
cwtl
xchg
pop
in
mov
push
xor
cmp
add
sub
push
dec
pop
add
sbb
jg
lret
xor
and
inc
lea
xchg
mov
repnz
stos
stos
idivb
cmpsl
mov
xchg
jbe
out
bound
push
mov
aad
pop
pusha
addr16
adc
xchg
mov
enter
pop
mov
mov
cwtl
neg
xchg
in
aas
mov
nop
lea
jnp
mov
inc
sbb
lret
sub
pop
mov
mov
and
dec
xor
mov
dec
mov
sbb
mov
and
or
adc
loop
pop
lret
sbb
cmc
dec
ret
jl
inc
cmpsl
das
mov
pop
mov
test
mov
stc
sub
jecxz
dec
mov
adc
shr
loop
xchg
mov
mov
and
push
jecxz
cld
xchg
gs
call
jecxz
jns
jno
mov
gs
adc
jo
sub
sbb
cmp
dec
cld
cmp
sub
dec
in
insl
push
movb
add
and
xchg
mov
lgs
sbb
cld
xchg
mov
push
xchg
dec
mov
in
pop
out
dec
repnz
and
adc
pop
cmp
int3
shr
movsb
loope
jb
or
nop
add
push
js
push
fwait
and
outsb
pop
lret
test
mov
adc
je
daa
or
pop
mov
sbb
inc
mov
in
scas
sbb
push
and
dec
jmp
ja
push
popf
flds
shll
adcb
and
pop
or
outsb
dec
xchg
lahf
mov
or
push
leave
mov
xchg
clc
arpl
lret
into
sahf
addr16
rorb
xchg
outsb
sub
and
jg
repnz
test
xor
into
jecxz
push
inc
das
shrb
push
shlb
inc
les
in
js
push
adcl
or
jb
mov
inc
iret
test
scas
cmp
or
xchg
add
mov
push
mov
int3
jne
and
xchg
ret
out
or
ljmp
jnp
and
mov
into
pop
iret
xchg
lock
les
sub
mov
fwait
hlt
mov
xchg
sbb
sarl
sahf
sarb
fisubrl
incl
ja
cltd
sbb
add
sbb
movsb
into
flds
fistpll
mov
lds
xor
jmp
and
dec
fwait
mov
dec
out
fwait
push
jmp
data16
mov
add
mov
filds
sbb
sbb
pushl
shr
push
jle
lea
sbb
in
dec
ljmp
mov
push
cmp
fcoms
mov
push
jg
test
lret
fdivrl
push
in
push
hlt
ret
repnz
pop
fisubrl
ss
push
iret
sub
xchg
mov
xchg
aaa
addr16
cmp
mov
adc
mov
xchg
fwait
add
dec
xorb
xor
jb
lcall
mov
ffree
add
je
shl
mov
adc
cmp
rorb
stos
nop
mov
call
pushf
and
pop
dec
jnp
pop
roll
mov
add
jb
pop
pushf
push
mov
bound
std
or
mov
cmp
push
bnd
stos
js
loop
ficomps
jno
arpl
xchg
mov
push
sar
cs
mov
call
jle
jle,pn
imul
rcrb
xchg
and
arpl
xor
into
inc
ret
repz
frstor
sub
push
add
shrb
test
cmove
sbb
fsubrs
dec
pop
ficompl
xor
xchg
mov
clc
dec
out
adc
mov
xchg
add
pop
ja
test
jl
dec
addr16
cmpsl
xlat
cmp
push
add
jecxz
aas
scas
scas
es
xchg
icebp
js
xor
push
push
mov
jl
rorb
pop
sub
loopne
scas
or
lret
or
and
push
mov
or
inc
pop
mov
adc
xchg
sbb
out
push
mov
rcrb
scas
cmpsb
xor
pop
faddl
not
or
fcoms
mov
movsb
dec
outsb
lea
add
sarl
loopne
sarl
xchg
sbb
popa
lea
bound
push
movsb
lds
xchg
sub
ljmp
imul
jno
adc
lock
inc
jge
pop
pop
xchg
or
cmp
shlb
lds
leave
mov
imul
xchg
mov
dec
xor
mov
popa
jae
pop
adc
cmp
into
test
ffree
mov
adc
aad
dec
sbbb
mov
fwait
inc
aas
jg
insb
or
negl
rcll
jne
inc
in
mov
dec
push
inc
jmp
jp
stos
push
push
daa
jbe
cmp
dec
es
ret
into
test
xchg
outsl
push
int
mov
out
out
sarb
loopne
nop
jp
mov
and
mov
and
js
loope
xor
pop
xchg
inc
mov
out
and
lock
fs
cmp
dec
clc
shrb
lcall
push
int
xchg
sbb
cld
push
xchg
mov
rcll
dec
inc
add
popa
lock
aaa
js
shlb
out
inc
push
jae
jno
cmp
mov
xor
xor
loopne
popf
sbb
push
add
cmpb
test
std
cmpb
jecxz
fmul
lret
adc
pop
push
mov
stc
mov
push
mov
jle
outsl
add
xor
cwtl
pushf
pop
xor
add
addr16
andl
sub
xlat
and
cwtl
xchg
mov
test
dec
pop
cmc
push
aam
popf
lea
int
mov
sbb
cs
add
cmp
dec
sarb
nop
ljmp
out
enter
cmpsb
out
mov
xor
sbb
fwait
inc
jo
cmp
insb
inc
fs
push
inc
rorb
or
mov
pop
pusha
js
xor
pop
jo
dec
sub
pop
xchg
cmp
cmp
mov
jo
mov
mov
xor
xor
out
sbb
out
in
js
pop
stc
cmpsl
and
aaa
insb
push
les
out
and
imul
cmp
int
adc
mov
faddl
dec
neg
xor
pop
lea
xor
sbb
shr
add
sub
aas
push
outsb
fldt
out
mov
mov
rolb
adc
push
cmpsl
sarl
shlb
rclb
push
or
mov
pop
in
je
je
sub
mov
inc
dec
movsb
cmp
popa
inc
pop
mov
das
push
push
sbbl
inc
jb
addb
sbb
sub
test
or
sub
jge
mov
loopne
scas
cwtl
cltd
jge
sub
xor
dec
nop
js
xchg
or
fsubrs
dec
mov
and
jo
pop
clc
les
xorb
jge
outsl
inc
cmp
out
sarb
mov
icebp
fcoms
loopne
arpl
jle
xor
dec
shrb
adc
sub
scas
xchg
cmp
ret
pushf
repz
jb
mov
lret
mov
test
in
push
aam
push
or
insb
daa
sahf
push
data16
sub
mov
mov
ss
xchg
imul
push
cmpsl
push
adcl
add
into
push
daa
sahf
scas
or
dec
mov
pop
into
mov
pop
pop
notb
adc
push
lret
mov
mov
mov
iret
mov
cwtl
negb
cmp
inc
jnp
cmp
sub
ds
push
fwait
in
push
add
xor
cmp
or
pop
jp
cmp
sub
adc
xchg
lods
andb
in
sub
cmp
aam
es
mov
cmpsl
mov
cmpsb
mov
sub
push
leave
aam
fs
or
cmp
orb
xchg
mov
push
sub
in
dec
in
neg
les
outsl
movsb
lahf
fwait
and
js
into
push
jg
mov
mov
lods
push
add
push
cmpsl
ja
sub
ljmp
mov
xchg
cli
sub
xor
pop
mulb
sub
je
dec
inc
xor
mov
jo
mov
cmp
int3
das
andl
rolb
fbstp
adc
mov
les
rorb
sbb
add
movsb
repz
fwait
in
scas
pop
dec
pop
mov
into
sub
xor
in
push
pop
push
inc
jne
mov
sbb
mov
test
shrb
mov
or
dec
popf
jns
push
imul
jbe
jg
sbb
addr16
mov
dec
push
subl
lea
push
es
jg
sbb
adc
lretw
shrl
and
pop
push
push
jecxz
pop
outsb
mov
mov
mov
das
mov
xor
rcl
sahf
gs
cmpsl
inc
jnp
jl
stos
out
lock
lahf
adc
jmp
mov
iret
shlb
lret
jno
repnz
mov
dec
mov
hlt
mov
jo
fldenv
push
add
add
mov
sbb
mov
nop
cmp
ss
data16
imul
movsb
test
stos
sub
hlt
pop
ret
loope
xchg
pusha
mov
push
lcall
sbb
outsb
scas
in
jb
inc
out
dec
pop
adc
adc
pop
fsubrs
jge
inc
cmp
aaa
add
mov
cs
ret
ds
inc
jl
sti
jno
sub
mov
loopne
shrl
inc
fnstsw
push
lret
sub
pop
idivb
sahf
xor
dec
popa
jl
dec
stos
add
jmp
std
scas
inc
dec
push
mov
pop
add
out
dec
sahf
mulb
call
lds
and
enter
xor
push
mov
int
mov
mov
cwtl
icebp
inc
pusha
adc
xchg
subb
push
pop
cld
jo
push
sbb
popl
das
cmp
mov
jecxz
das
adc
add
frstor
sti
lahf
in
sub
pop
loope
dec
cwtl
push
sti
adc
js
imul
xor
sub
dec
mov
mov
or
or
and
in
cmp
lock
lret
jo
jg
dec
lock
rorl
movsb
sub
jg
lahf
xor
iret
roll
loop
aas
stos
sbb
pop
ljmp
dec
shrl
ja
outsl
or
mov
sahf
xor
lods
sub
dec
ror
mov
jge
sub
mov
pop
jae
lds
xchg
pop
call
mov
imul
lea
fwait
aam
xor
mov
ljmp
int3
push
aaa
call
mov
inc
addr16
xor
stos
inc
sbb
xor
popf
fdivr
mov
lods
data16
imul
leave
aam
arpl
test
hlt
xor
lcall
dec
sbb
or
push
stc
pop
ret
add
arpl
jp,pt
arpl
punpcklwd
leave
cli
mov
fcompl
xchg
dec
adc
lds
pop
out
orb
and
mov
adc
mov
cltd
mov
dec
and
das
pop
dec
dec
out
sbb
inc
lds
decb
data16
xchg
inc
sahf
gs
mov
les
cmp
pop
dec
lock
add
imul
imul
jle
bound
dec
adc
gs
push
loope
rol
inc
repz
push
sbb
cmpsb
arpl
sub
inc
inc
sahf
ja
fisttpll
push
repnz
pop
or
xchg
jle
pop
insl
sub
fs
out
xor
and
outsl
inc
mov
fistpl
mov
popa
xor
pop
mov
out
idivb
in
sbb
sub
jno
outsl
lcall
mov
xchg
nop
mov
mov
push
inc
jne
cwtl
add
outsb
jbe
hlt
pushf
add
imul
cld
cltd
inc
add
cmpsb
outsb
pop
adc
xor
lret
sbb
dec
mov
mov
das
or
cwtl
mov
loopne
push
rolb
dec
pusha
adc
out
pop
out
cmp
movsl
rcll
push
push
pop
or
clc
shll
ret
add
mov
add
jae
adc
xor
int
shrl
dec
dec
gs
xchg
push
imul
xor
mov
scas
pop
mov
pop
mov
mov
xchg
mov
gs
movsb
shlb
sarb
xchg
sbb
punpckhwd
clc
sbb
aaa
and
push
inc
daa
cmp
rcll
mov
enter
dec
jp
pop
fcom
in
mov
or
pop
les
dec
inc
jo
pop
rcr
fstpt
mov
pop
add
xorb
xchg
jg
cwtl
hlt
mov
dec
push
arpl
dec
sub
cmpsl
scas
pop
mov
movsb
lds
rclb
mov
mov
jbe
xlat
mov
test
cmpl
stos
es
xchg
push
aaa
in
or
and
push
jns
lods
add
ret
loop
xchg
push
adcb
xor
inc
fstps
jmp
jl
pop
dec
jmp
or
mov
xlat
mov
fwait
or
dec
pop
push
iret
insb
or
loope
adc
imul
add
je
or
daa
mov
pop
xor
mov
cwtl
bound
fwait
xor
jle
xchg
int
roll
pop
dec
cmp
insl
cmc
repnz
jecxz
in
push
mov
cmp
ret
and
mov
scas
mov
mov
dec
dec
sbb
lcall
mov
cwtl
test
icebp
dec
jae
mov
push
shll
jb
dec
lods
pop
mov
ja
push
mov
cmpsl
clc
pop
shrb
or
addr16
and
insl
loope
xchg
mov
dec
push
in
jnp
stos
add
movb
aas
cs
out
pop
repnz
mov
mov
imul
sbb
scas
aaa
and
mov
or
or
stos
cmc
adc
mov
in
fs
push
mov
jg
int
jne
mov
fcomps
mov
xchg
sub
mov
or
xor
mov
jle
loopne
sub
dec
xchg
or
popf
aas
pop
punpckhdq
je
lea
aas
icebp
lcall
jno
es
hlt
inc
pop
and
mov
xchg
xchg
sbb
das
in
and
add
mov
adc
in
lea
inc
dec
lcall
jle
mov
add
in
sbb
mov
enter
inc
pop
jge
cltd
inc
insl
push
mov
push
lods
and
dec
inc
inc
mov
fdivrp
ret
lret
mov
mov
cltd
xchg
mov
push
lret
xchg
movl
mov
dec
sub
pop
adc
mov
outsb
or
inc
fmuls
cmp
fwait
stc
add
pop
sub
or
or
gs
adcl
scas
inc
xchg
xor
pop
push
subl
loope
insb
cmc
jbe
int
gs
or
pop
cmc
cwtl
mov
xchg
pop
pop
dec
cs
fwait
cmpsl
js
pop
xchg
xchg
xchg
out
add
push
add
mov
jg
sub
mov
add
das
cld
sti
dec
mov
add
ss
add
lods
push
lcall
loop
bound
jg
pop
bound
add
mov
shll
sahf
inc
sbb
into
mov
lcall
cmp
lods
loop
hlt
push
aas
mov
icebp
fcoml
scas
sbb
jae
js
hlt
pop
mov
xchg
add
lock
dec
idivl
cli
jbe
push
scas
push
and
outsb
adc
sbb
pop
mov
les
xor
aaa
rcr
je
add
push
add
inc
dec
mov
push
rorb
push
orl
lahf
inc
call
xchg
popa
ror
imul
sbbl
lods
int3
adc
hlt
jge
imul
jge
in
cmp
mov
inc
jp
inc
jge
test
stos
xor
mov
push
push
cwtl
lret
mov
add
mov
pop
jne
lret
cmpsb
out
outsb
mov
mov
dec
pop
mov
lret
repnz
pop
xor
inc
jp
adc
iret
push
sub
test
movsl
inc
xchg
in
adc
movsl
and
mov
loope
sub
pushf
or
xor
jnp
or
mov
aad
aas
popa
jo
fists
add
insb
shrb
mov
fdivrp
xchg
xchg
sub
jb
pop
cltd
lock
repnz
xor
sub
cmp
or
cmp
pop
mov
movsb
sub
inc
aam
dec
movsl
loop
pop
mov
sbb
bswap
inc
pop
orb
test
xor
adc
movsl
push
jp
hlt
push
jno
mov
leave
sti
sub
stc
adc
mov
or
clc
cmpsl
xor
fiadds
loopne
mov
sbb
mov
out
jno
mov
add
push
cwtl
xlat
adc
inc
pusha
xchg
xorb
dec
jmp
lods
cld
mov
dec
mov
mov
mov
bound
sub
xchg
rclb
pop
mov
pop
imul
imul
jg
cltd
xlat
hlt
test
adc
pop
lods
cmpsb
mov
pop
outsb
mov
xlat
mov
insl
fiadds
jg
add
shll
imul
adc
push
cli
call
stos
cmp
cmp
xchg
or
cmp
iret
cmp
imul
and
insl
jg
cmp
ffree
jns
mov
out
ja
mov
jnp
inc
call
xor
rorl
push
or
add
sub
std
or
test
into
call
jns
rcrb
pop
hlt
push
fs
movsl
or
adc
cs
fdiv
fdivrp
jbe
bnd
scas
ja
loope
mov
push
inc
std
std
mov
and
les
aam
fldcw
sub
in
xchg
imul
or
ret
jge
std
dec
xlat
mov
inc
sbb
mov
popf
stc
adc
dec
divb
fmul
mov
leave
xor
call
flds
ds
jae
aad
cli
loope
cmp
sub
stos
jmp
jecxz
push
aad
xor
sbb
inc
jbe
sub
and
lds
adc
fwait
dec
pop
dec
mov
in
cmpsb
sub
and
adc
sbb
andb
cs
push
lea
xchg
mov
rolb
add
jmp
cmp
push
test
daa
shll
fs
push
ret
icebp
and
sub
pop
fadds
gs
cmpl
push
js
pop
loopne
push
cmp
adcb
mov
cmp
mov
rorl
inc
jge
sub
xchg
mov
fidivl
sub
xor
aad
pop
adc
inc
xlat
in
shufps
jl
lods
outsl
xchg
shrb
sbb
daa
test
sahf
movsb
pop
pop
movsb
and
decb
ja
stos
stos
mov
jns
ss
push
or
add
test
dec
test
dec
scas
stos
push
sub
cmpsl
mov
dec
pop
pusha
je
pop
lret
dec
push
je
inc
jns
xor
mov
and
aam
cmp
xor
out
fwait
lcall
hlt
je
test
stc
lahf
mulb
psllq
shlb
push
shlb
sbb
ds
gs
xchg
or
xor
sti
mov
mov
test
inc
xchg
mov
sbb
aam
and
test
push
mov
jns
aam
jno
aas
dec
fimull
bound
xor
jmp
or
out
mov
jp
inc
push
mov
cmp
data16
sahf
fidivrs
pop
enter
mov
mov
push
imul
fcoml
es
repz
mov
lods
push
dec
sub
mov
stos
fucomip
pop
and
in
shlb
inc
lcall
pop
xchg
xchg
jns
mov
lret
pop
xchg
xchg
cmp
and
lods
fisttps
and
cmpsl
popf
lahf
cmp
pop
and
pop
xchg
or
mov
sbbb
inc
inc
aam
mov
pop
cmpsb
sub
adc
mov
sbb
xor
and
mov
sbb
fdivr
xchg
test
add
in
add
sub
out
call
cwtl
mov
mov
adc
xchg
mov
jp
pop
adc
xchg
mov
inc
and
sbb
pop
or
mov
pop
mov
lods
pop
cmp
and
std
mov
jne
push
add
lods
adc
dec
cmpsb
cwtl
mov
add
jg
loopne
cwtl
add
cli
cmp
fcom
mov
adc
sub
mov
out
cmp
mov
lock
jnp
xlat
arpl
xchg
sbb
movsb
lock
js
mov
out
out
and
jl
mov
cmc
call
movsb
loopne
popa
sbb
jecxz
or
rclb
es
movsl
or
mov
outsb
js
xchg
orb
ret
or
pop
dec
js
push
xorl
lret
movsb
rsqrtps
sub
cmp
fsubrl
out
stos
jp
mov
or
mov
mov
and
pop
xchg
mov
clc
push
les
mov
push
in
dec
push
jno
push
enter
mov
je
clc
mov
lret
mov
sub
std
jns
mov
test
jns
popa
mov
add
xor
inc
leave
mov
sbb
pop
outsb
arpl
xor
xchg
jae
xchg
cmp
jge
jb
push
or
push
sub
dec
push
adc
lahf
ds
jne
mov
aaa
push
fistpll
aam
out
out
jg
or
pop
jns
jo
sbb
push
push
repz
sbb
sti
inc
andb
scas
jl
mov
call
sbb
leave
les
testl
enter
stos
mov
cld
pop
xor
test
out
or
sbb
xchg
lods
sbb
mov
out
shll
push
out
lods
enter
jp
push
imul
mov
jo
push
mov
shll
mov
adc
lods
aas
dec
push
call
pop
insb
dec
mov
pop
push
pushf
icebp
xchg
dec
ds
mov
arpl
shll
or
add
pop
ret
push
hlt
and
jg
dec
pop
jl,pt
xchg
push
les
cmp
in
pop
xor
in
lret
push
jp
jns
repz
sub
std
push
aaa
popf
fisttpll
jmp
or
jnp
inc
sub
pop
jo
mov
xor
mov
add
out
add
scas
stos
sub
enter
add
int3
rcr
xor
xor
addb
dec
mov
shlb
jg
mov
movsl
lods
cmp
shlb
add
je
data16
sbb
pop
fs
scas
cltd
add
cmpsl
insb
or
mov
dec
jo
fs
mov
das
pop
cmp
adcb
adc
jp
ret
or
int3
stos
lret
les
cmp
mov
mov
out
push
idiv
arpl
mov
pop
sbb
or
xchg
jbe
push
cli
jg
cmp
mov
lea
pusha
gs
or
addr16
scas
mov
and
push
jmp
sub
repz
cmpsb
subl
xchg
jb
testl
outsb
xor
repnz
mov
push
dec
stos
repz
add
inc
mov
movsl
xor
cmpl
popf
dec
popf
jb
dec
xchg
aam
jno
pop
dec
mov
aad
and
maxps
push
out
call
in
xor
jne
repnz
rcll
das
jl
sbb
pop
aas
jecxz
xchg
stc
jo
or
outsl
mov
pop
pop
jecxz
mov
outsb
stos
inc
push
add
and
jg
addb
lahf
mov
mov
sbb
ds
hlt
leave
arpl
ret
and
stos
mov
andb
push
push
outsb
add
push
dec
add
pop
adc
inc
cmp
mov
int3
mov
mov
jne
jo
pop
add
jo
ja
aaa
not
gs
pop
push
lods
gs
adc
int3
push
mov
scas
jmp
push
stc
repnz
pop
mov
fsubrs
pushf
xchg
fistl
or
ja
adc
ljmp
and
mov
aam
lret
push
and
jle
jo
or
dec
aas
imul
mov
jns
xchg
addb
shll
xchg
dec
loop
fldcw
mov
lret
icebp
jl
cmp
jne
icebp
mov
outsl
jbe
in
out
and
cmp
add
ja
xchg
mov
lret
mov
testb
push
out
negb
push
mov
ljmp
mov
sbb
inc
dec
inc
sub
pop
push
adc
pushf
std
lds
adc
in
add
loope
or
or
iret
mov
aam
xor
cmp
mov
lret
dec
mov
sub
push
jnp
add
xchg
jb
enter
mov
test
pop
inc
lahf
xorb
fbstp
mov
bound
stos
imul
dec
or
aam
shll
jne
fdivs
xchg
gs
push
push
push
mov
test
insl
and
rcrb
shrl
popf
jns
cwtl
es
fld
mov
into
lea
pop
add
cmp
and
into
or
ret
push
repz
adc
out
in
dec
insl
add
cmp
cwtl
test
scas
cwtl
mov
cmpsl
jg
aad
cmc
jns
test
lret
xchg
repz
adcb
cld
sub
bound
dec
sub
cli
pop
in
pop
test
movhps
mov
xchg
call
loopne
cli
mov
iret
adc
stos
xchg
vpaddw
dec
xor
or
imul
xor
fwait
jl
movsb
push
gs
scas
mov
popf
cmpsb
adc
cmp
iret
es
xlat
out
jo
lods
mov
das
daa
ret
add
lds
adc
mov
and
sbb
cltd
imul
pop
cli
loope
clc
rorb
rcr
out
sbb
pop
enter
mov
adc
jle
dec
lods
mov
pop
stc
mov
mov
xor
sbb
sub
jp
jecxz
xchg
fisttps
test
sub
xor
sub
lea
and
mov
pop
cltd
data16
arpl
lea
lods
call
xor
into
cmp
js
sbb
cmpsb
xchg
adc
fcomp
cmp
loope
in
pop
ja
inc
pop
in
inc
cmpsb
fstpt
je
dec
mov
imul
sub
lods
lret
jl
hlt
sbb
mov
call
jg
mov
out
pop
fisubs
popa
mov
dec
mov
jno
mov
data16
dec
cli
mov
gs
je
xchg
stos
ficoms
and
scas
inc
nop
mov
xchg
xor
pop
gs
ljmp
adc
pop
repnz
mov
jmp
pop
gs
in
push
sub
pop
decl
inc
cmpsb
jecxz
adc
shrl
pop
fiaddl
ret
sbb
or
push
sub
dec
jg
jl
out
je
scas
popa
cmp
push
mov
mov
scas
cmc
cwtl
jmp
xor
popf
xchg
push
cmp
fcmove
inc
sbb
dec
add
pusha
gs
pop
cs
add
push
inc
int3
mov
stos
mov
mov
jno
add
sub
movsl
movsb
cmpl
and
jecxz
frstor
dec
nop
movsb
pop
or
adc
es
fbstp
imul
xchg
xor
scas
xchg
xor
or
leave
ja
xor
add
jo
stos
mov
out
adc
leave
or
push
mov
out
add
cld
pop
mov
sarb
ret
or
lret
xchg
lahf
mov
sub
sbbl
push
mov
cs
int
fwait
in
push
dec
sbb
in
jl
mov
or
fcomp
dec
icebp
jl
push
adc
cmp
enter
out
push
lcall
dec
inc
imull
and
gs
pop
mov
jmp
loope
cmp
push
out
sbb
in
pop
adc
movsl
in
or
mov
inc
daa
jle
pusha
out
stos
jg
jp
sti
cltd
cmpl
cs
jp
daa
dec
pop
push
pop
pop
bound
mov
fidivl
or
and
or
cli
out
dec
mov
lret
f2xm1
xlat
adc
pushf
jo
pop
mov
inc
imul
cli
clc
jo
insl
mov
arpl
cmpsl
test
sub
lock
mov
mov
stos
dec
nop
or
mov
es
ret
dec
orb
pop
jo
inc
cmpsl
bound
xchg
cmpsl
call
mov
out
push
add
xchg
sti
mov
push
sub
mov
mov
test
gs
push
fildll
and
insl
add
testb
cli
lock
dec
int3
inc
cmp
icebp
mov
adc
mov
mov
pushf
jg
mov
cmp
pusha
xchg
push
adc
mov
sub
test
shll
dec
cmp
inc
ror
pop
popa
pop
imulb
adcb
jmp
pop
mov
sub
test
fistps
inc
and
inc
nop
jmp
imul
push
data16
out
fldt
inc
adc
push
jae
xor
out
or
lods
cmp
jnp
pop
adc
loope
dec
xchg
xorb
mov
leave
repnz
int
add
hlt
lret
add
aas
xchg
and
icebp
out
call
aas
iret
dec
addr16
lcall
sub
outsl
fisttpl
pop
ret
push
pop
movsb
repnz
idivb
cli
mov
stos
ret
orb
mov
outsl
xchg
scas
cmp
cmpsb
inc
sub
lret
jne
rolb
mov
jle
in
jecxz
ds
mov
movsb
mov
lock
cmpsl
insl
push
fs
cli
sub
mov
insb
mov
pop
or
jmp
dec
gs
arpl
dec
pop
xor
loope
or
adc
lret
cli
and
loop
mov
xchg
inc
mov
fucomp
sbb
mov
fdiv
mov
lret
pop
xchg
icebp
mov
jb
adc
and
lahf
and
sarb
fnstsw
pop
jl
push
mov
sub
dec
in
sarl
pop
adc
sbb
cwtl
in
push
stc
in
out
aam
testl
add
and
add
lahf
push
xchg
or
insl
fbld
dec
pusha
nop
push
or
push
in
cli
ljmp
bound
inc
gs
das
movsb
repnz
ret
pop
xor
xor
adc
push
mov
jae
daa
xor
sub
pop
push
xlat
js
add
adc
inc
mov
xchg
test
nop
aas
cwtl
mov
push
fs
jo
push
daa
pop
arpl
lret
push
push
xchg
insl
inc
inc
scas
cmp
and
icebp
sbb
lret
mov
insl
lods
mov
mov
mov
mov
push
out
push
mov
adcl
push
mov
pop
xor
inc
adc
ja
jge
xchg
push
aas
mov
in
mov
push
rorb
xchg
lock
loop
inc
addr16
jge
les
mov
and
pop
dec
mov
add
push
mov
int3
push
aaa
aas
add
in
push
fldt
loop
cmp
mov
gs
sbb
mov
out
mov
dec
fs
enter
jmp
mov
pop
jp
pop
xchg
pop
sbb
pusha
xor
push
cmpsl
inc
inc
cmpsb
push
cmp
xchg
repz
add
fcoml
bswap
pop
cmc
sarb
dec
sub
or
push
cwtl
dec
mov
dec
stc
in
sbb
in
pop
sarl
mov
jo
or
xor
cmpsl
mov
mov
aad
cmovne
mov
sub
adc
push
out
xorl
jnp
jbe
daa
subb
scas
pop
aad
jbe
lret
adc
and
scas
aaa
fcomp
mov
test
movsb
jae
jnp
pop
loop
fistpl
xchg
pop
sti
les
test
xor
loop
xchg
push
lahf
test
inc
add
test
cli
add
out
add
int3
out
pop
stc
loope
rcr
js
dec
pop
int3
mov
adc
cmp
out
js
mov
cwtl
mov
in
mov
pusha
popa
jb,pn
and
xor
or
movsl
outsb
cmp
mov
jge
stc
out
stos
in
outsb
imul
cmp
mov
xor
bound
jmp
cmp
sub
orb
lods
in
jne
jge
int3
enter
cmp
push
repnz
mov
mov
xchg
or
sbb
xchg
or
js
mov
mov
sahf
push
xor
pop
in
or
push
sahf
rcrl
stc
xchg
mov
and
gs
mov
nop
jmp
or
mov
pop
mov
cmpsb
lcall
ljmp
xor
pusha
jbe
mov
pushf
dec
cltd
testb
outsl
fildll
lret
mov
pop
xchg
shr
movsb
mov
jnp
outsb
fwait
insb
mov
cmp
pop
inc
ja
xchg
dec
lods
sub
andb
xor
cld
loopne
not
test
movsl
mov
ret
lea
popf
xchg
and
cmp
add
dec
jbe
xor
std
and
xor
enter
and
lret
pop
stos
ja
pop
roll
mov
mov
push
lahf
std
and
pop
in
cmpsb
dec
push
stos
cli
popf
jg
outsl
out
jbe
int3
fbld
jnp
xchg
jae
ficomps
cltd
mov
cmpsb
pop
sub
xorb
test
imul
insb
sub
divl
dec
ljmp
aad
dec
lock
insb
icebp
adc
js
pop
test
sbb
scas
inc
jmp
imull
out
cmpsb
mov
mov
rorb
repz
outsl
mov
or
nop
das
jmp
jo
adc
mov
or
sub
pusha
inc
es
sub
cmp
js
mov
xor
dec
outsb
and
mov
lods
add
dec
sarl
xchg
and
imul
jnp
push
cmp
lods
outsb
cltd
outsl
cwtl
jmp
jg
or
jnp
movsl
cs
jnp
xchg
sahf
mov
inc
and
push
cmp
cmp
stos
movsl
jns
mov
int3
pop
sbb
daa
xor
jne
inc
mov
push
pop
sbbl
ljmp
push
or
sbb
testl
lods
outsl
xor
push
cmpsl
mov
inc
mov
push
xchg
lret
test
inc
dec
mov
xor
ljmp
stos
lahf
std
mov
cmc
out
dec
cmpsl
sub
clc
push
push
sbb
lcall
jne
in
jb
ret
mov
mov
mov
jg
cmp
movsb
scas
cmp
pop
out
mov
sub
xor
or
or
inc
pop
pop
fs
push
inc
mov
pop
jle
mov
addr16
jbe
int
leave
nop
xchg
cmc
push
scas
iret
pop
and
sbb
popf
dec
mov
js
rcrl
xor
mov
stc
xlat
gs
push
pop
fisubl
and
bnd
xchg
daa
jmp
cmpsb
mov
push
xlat
out
lods
inc
or
ret
cmp
add
xchg
or
inc
xlat
insb
pop
xor
add
mov
hlt
clc
fstpt
xor
push
inc
movsb
decb
repz
popf
pop
lahf
mov
inc
bound
aam
addr16
clc
repz
pop
out
pop
repnz
testl
push
xchg
icebp
popa
push
xor
lods
repnz
in
or
cltd
fwait
xchg
xchg
sahf
repz
popa
dec
mov
mov
jmp
jmp
lret
pusha
pusha
jmp
cmp
jp
loop
lret
push
push
decl
and
call
cmp
sbb
imul
pop
daa
push
dec
movsb
fisttps
xchg
rcrb
jle
or
jo
pop
adc
iret
imul
jmp
mov
scas
jmp
push
shlb
fs
loope,pt
mov
add
push
xchg
mov
pop
ret
rcrb
jmp
jge
mov
cmp
pop
sbb
sti
sbbb
pand
fldt
mov
ret
cmpsb
testl
xor
bswap
dec
ret
outsl
addr16
repz
mov
sahf
in
xchg
inc
jb
push
roll
mov
fldt
sahf
cmp
mov
xor
push
fcoms
sbb
adc
push
push
sbb
adc
sbb
imul
push
xor
mov
mov
mov
pop
sbb
and
cmp
or
adc
add
es
cmpsb
mov
add
int
mov
call
dec
leave
dec
aam
ss
gs
push
in
xor
pushf
rorb
inc
fbld
cmp
or
adc
sbb
xchg
jge
dec
jae
adc
cmp
and
aas
std
mov
jge
movsb
mov
sub
push
push
shll
ret
lcall
xchg
rcr
jp
fbstp
stos
xchg
pop
or
andps
dec
pop
test
xlat
dec
and
jne
and
or
sbb
addb
aad
dec
lds
sub
loope
mov
or
mov
cmc
adc
add
and
imul
iret
and
repnz
xchg
sti
lret
jl
mov
pop
add
jge
cld
or
mov
aas
aas
ret
push
cmp
daa
push
or
or
jmp
push
cltd
call
in
mov
int3
mov
xchg
dec
cli
ss
fistps
pop
scas
mov
push
sub
and
ljmp
les
adc
dec
ret
xchg
lds
add
sbb
je
mov
inc
divb
dec
cmc
sbb
jno
les
leave
outsb
addr16
fbld
clc
sbbb
iret
in
inc
push
call
push
aad
loopne
and
inc
cltd
push
sbb
movsl
inc
mov
call
notb
jg
pop
ljmp
mov
dec
adc
lret
in
add
fisttpl
mov
data16
sub
lret
cmpb
sahf
iret
inc
push
pop
inc
nop
or
daa
push
fistl
inc
lods
mov
mov
sbb
mov
stos
fbstp
test
in
in
cmc
adc
jl
cmc
mov
adc
sub
fadd
inc
xor
or
or
pop
dec
sbb
cmpsb
dec
outsl
cmpsl
mov
xchg
dec
js
adc
pop
cld
push
mov
test
jne
lcall
cmp
cs
popf
jg
jb
or
fwait
inc
xor
mov
aaa
fsubrp
repnz
pop
push
cmp
sbb
lret
jmp
insb
test
and
xor
xor
inc
sub
shrl
cmpsb
dec
cmp
inc
xchg
fisttpl
adc
push
stos
lods
jb
mov
lcall
hlt
jle
js
xchg
pop
je
mov
inc
loop
mov
push
call
adc
sarb
aad
nop
ficoms
sbb
cmpsl
ja
popa
sub
out
xchg
das
leave
pop
sub
add
ja
xor
xor
int
xchg
and
inc
xor
xor
lcall
adc
dec
movsl
jns
pop
dec
fimull
inc
sbb
shlb
lock
adc
movsl
stos
mov
pop
mov
icebp
sbb
lret
mov
inc
rorl
loop
pop
pop
outsb
jge
mov
lock
and
hlt
or
mov
sbb
push
in
rcll
xchg
gs
add
mov
pushf
outsb
jno
dec
mov
or
mov
sub
repnz
je
gs
mov
cmp
xchg
orl
mov
cmc
add
mov
cmp
sub
add
mov
sbb
out
shlb
mov
cmp
and
add
pop
cld
dec
scas
repnz
scas
and
mov
movsl
ljmp
cmpsb
fisttps
adc
and
push
pushf
call
mov
arpl
mov
stc
jb
andb
icebp
out
xor
lcall
mov
or
dec
adc
cmp
adc
jmp
cmp
into
jo
inc
push
dec
fs
lds
nop
loop,pn
bswap
test
sbb
out
jne
adc
insb
cs
lret
nop
xchg
out
sub
jae
js
mov
es
xor
popa
jbe
inc
jmp
and
push
cmp
mov
pop
out
sub
push
mov
adc
push
testl
xchg
jge
mov
mov
mov
dec
lahf
pushf
and
xlat
insb
sti
adc
mov
add
inc
cwtl
hlt
jge
sbb
dec
adc
xchg
mov
jl
pusha
or
sub
mov
dec
stc
adc
cld
and
cmp
fcomps
add
loop
or
push
ret
or
in
jp
data16
push
sub
std
mov
hlt
bound
pop
aad
jle
loop
cwtl
push
sbb
movsb
adc
frstor
inc
subb
rorl
xchg
bound
xlat
int3
dec
jae
pop
sti
lret
mov
in
imul
out
sbb
inc
shlb
jge
jae
cs
daa
jae
mov
push
ja
cmp
jmp
shll
mov
testl
pop
push
xchg
xor
outsb
lret
xlat
mov
aad
incl
fsts
in
iret
push
cmp
scas
cmp
aaa
ficoml
mov
popf
or
sub
mov
test
sar
into
ret
dec
sbb
pop
stos
daa
ficoml
inc
dec
insb
cwtl
jecxz
daa
jl
sti
pop
and
pop
inc
fcomp
divl
pop
add
lret
dec
sub
sti
fdivl
mov
jo
pusha
aam
enter
out
adc
stc
push
out
inc
hlt
inc
mov
add
xor
mov
jne
adc
mov
ljmp
or
jp
das
iret
dec
pop
out
clc
xor
dec
xlat
outsb
inc
and
or
outsl
movsb
adc
dec
inc
sbb
in
popf
testl
int3
inc
push
enter
mov
dec
andl
xchg
and
out
loop
stos
fiaddl
push
lods
arpl
push
cmp
mov
loope
cli
loopne
push
xchg
out
cs
mov
push
push
mov
inc
push
inc
cmp
ss
movsb
cmp
dec
pavgw
and
sti
jae
iret
stc
aas
mov
aad
addr16
out
out
cmp
shr
cwtl
pop
push
jno
mov
jns
rcr
jmp
lods
push
or
stos
int
stos
adc
cmpsb
test
test
lock
repz
pop
pop
mov
jbe
in
iret
fbstp
mov
fists
rcll
faddp
mov
xchg
call
fstpt
push
movsl
aaa
mov
sbb
rclb
jns
sahf
stos
rorb
push
jb
jp
sbb
cwtl
dec
adc
jno
mov
aam
fwait
cli
in
dec
mov
movlps
outsb
rcl
mov
push
icebp
les
hlt
enter
add
pop
xor
andb
or
repnz
dec
mov
sarb
dec
jne
in
adc
sbb
fbstp
ret
pushf
dec
push
in
jmp
adc
dec
inc
push
andb
push
mov
in
cld
in
add
add
xchg
mov
or
in
rcrl
xchg
dec
mov
jnp
dec
dec
imul
add
bnd
aaa
outsb
pop
mov
add
dec
cmp
jbe
jb
inc
in
xor
imul
adc
or
ja
and
push
pop
jmp
roll
xchg
pop
xor
imul
mov
sub
dec
jnp
loop
sti
aas
scas
sub
mov
inc
dec
jne
push
fsubl
mov
push
inc
outsb
mov
or
lock
sti
movsl
arpl
lcall
outsl
lret
test
lret
and
pusha
xlat
mov
and
dec
lcall
es
or
out
cmp
lock
andl
test
jbe
add
movsb
rcll
jmp
xor
mov
rcll
mov
cmp
icebp
push
dec
fsubrl
fidivs
iret
or
mov
adc
xchg
cmpsb
fildl
clc
test
add
dec
clc
xchg
add
sub
dec
into
das
aas
inc
lds
or
mov
jno
outsb
mov
idiv
sub
insl
mov
and
pop
aas
sub
mov
lea
fcmovnu
dec
imulb
push
push
sbb
mov
jmp
pop
sahf
loope
repnz
pushf
push
pushf
sub
xchg
in
sbb
mov
mov
sbb
and
add
in
ret
jge
in
ret
stos
dec
adc
fnstcw
into
insb
and
xor
and
mov
aaa
fdivl
sbb
push
scas
andb
lea
out
stc
jae
dec
rcrb
fwait
push
and
pusha
xor
cmp
jmp
shlb
fldt
lret
xor
xchg
add
enter
fbstp
xorl
fstpt
jb
stos
out
pusha
or
xchg
push
test
mov
scas
or
dec
lea
dec
mov
and
pop
xchg
imul
clc
and
lcall
xchg
dec
xor
stos
pop
pop
es
push
icebp
adcb
adc
mov
pushf
sti
mov
sub
sub
mov
das
xchg
mov
sahf
outsb
pushf
fmul
xor
mov
xor
adc
aad
lock
sbb
inc
mov
inc
inc
cli
repnz
xchg
pop
das
das
mov
inc
mov
cmp
mov
lea
testl
pop
aaa
xchg
jle
inc
insb
dec
movsb
test
subl
popa
ja
mov
sbb
rol
pop
sub
mov
xchg
mov
iret
xor
mov
stc
jae
mov
sbb
gs
stc
std
jno
insl
inc
cli
xor
cs
adc
xor
js
fisttpl
fsubr
xor
push
mov
adc
add
xchg
idivb
ret
pushf
cli
sub
push
mov
dec
push
imul
test
rolb
std
pop
cli
sub
jmp
repz
sahf
push
or
push
or
mov
sbb
rclb
cltd
je
push
scas
dec
dec
ss
cmpl
push
rcrb
xor
iret
sahf
bound
das
rol
mov
ljmp
mov
ds
cmpsb
loope
xchg
add
repnz
cmp
mov
inc
push
xchg
push
xor
adc
and
push
mov
dec
or
cmpsl
les
jge
aam
mov
out
jle
pop
sbb
sub
mov
pusha
rol
and
adc
mov
das
int
push
cltd
xlat
mov
and
and
fsub
ja
mov
loop
push
imul
push
sarb
loope
pop
mov
mov
cmp
in
xchg
test
dec
jo
pop
push
jg
sub
pop
or
arpl
pop
cmp
xchg
xor
inc
xor
jo
ss
sbb
stos
push
inc
push
lea
fcomp
pop
sbb
inc
mov
loope
and
pop
jb
stos
testl
jle
xor
inc
cli
mov
adcb
sti
lock
mov
add
mov
push
and
pop
pop
push
rorb
mov
sbb
data16
pop
dec
lcall
add
outsl
ss
xor
sarl
push
push
bound
adc
dec
lods
mov
inc
mov
pmaxub
xor
push
outsb
fcmove
sbb
leave
out
mov
sub
sub
jmp
jle
insb
dec
cmpsl
add
push
mov
in
pusha
xchg
lods
in
aaa
sub
inc
ja
pop
inc
or
adc
aas
sbb
mov
orl
std
xor
mov
pusha
adc
mov
push
push
inc
repnz
and
mov
repz
pop
push
dec
add
push
pop
pop
mov
ror
ret
dec
fldt
imul
cmp
cwtl
jb
int
mov
mov
push
jp
fs
mov
xchg
stc
sar
push
inc
fldenv
sti
and
call
dec
into
pop
ja
in
imul
jne
or
dec
cmp
and
dec
clc
push
mov
mov
adc
inc
movsl
xchg
push
lea
jb
push
mov
rorb
mov
cmp
sarb
sub
adc
or
imul
pop
fldpi
jno
fdivrp
add
inc
xchg
cmp
sub
mov
int3
test
movsb
stc
mov
out
cmpb
inc
xchg
ds
adc
add
or
mov
rep
add
lods
mov
sahf
cmp
rcl
sar
xchg
push
xchg
sub
outsl
sbb
pop
rcrb
loope
fchs
push
inc
gs
xor
sbb
dec
add
lret
cmp
push
cwtl
dec
push
sub
mov
pushf
and
mov
cmp
push
xchg
xor
inc
stos
xlat
addl
in
jae
test
add
jnp
mov
add
mov
adc
sbb
clc
inc
sub
and
jge
dec
dec
addl
and
pop
fbld
or
das
mov
sbb
stos
push
out
test
stos
test
lahf
movsw
rcl
std
out
stos
and
xchg
aaa
mov
in
push
testl
fwait
mov
pop
test
repnz
imul
es
scas
xchg
jb
inc
push
mov
add
dec
popf
pop
adc
addr16
divb
jbe
jg
pop
movsb
dec
addr16
fs
jmp
roll
test
push
mov
mov
adc
adc
cmp
mov
or
xor
in
popf
sti
dec
movsb
pop
mov
shll
bound
stos
push
sbb
out
fldl
push
daa
in
jno
and
dec
add
adc
xchg
jle
xor
sti
test
addb
into
shlb
pushl
fadds
mov
jecxz
xchg
cmp
cli
lods
jl
and
lods
mov
test
and
flds
mov
xchg
jae
xchg
out
jo
lea
cmp
mov
pop
lret
cli
push
push
les
pop
adcl
lods
data16
leave
bound
sub
adc
popf
stos
mov
mov
aad
scas
ret
mov
jmp
push
movsl
pop
out
sub
mov
lahf
xchg
notb
cld
shld
movsl
xchg
test
loopne
pop
adc
sub
push
enter
mov
gs
inc
mov
adc
sbb
shrl
cmp
dec
loope
and
fcoml
cld
jle
cmc
adc
mov
mov
xchg
dec
fwait
mov
leave
jmp
aas
jmp
and
ljmp
leave
scas
lahf
cmp
rclb
push
in
cmpsb
push
add
dec
add
sbb
sub
push
mov
rolb
xchg
lret
dec
jne
adc
mov
movsb
in
test
sarl
jno
outsb
rorb
push
and
and
mov
mov
dec
add
sarb
mov
xor
jne
int3
or
sbb
clc
je
pop
jecxz
push
pop
push
fsub
mov
sbb
daa
mov
dec
pop
insl
lods
jmp
or
das
inc
jg
cmpsl
pop
mov
jp
shrb
shll
adc
pop
dec
xor
adc
mov
shrl
data16
cmp
ja
or
sub
or
mov
inc
test
lret
lea
leave
inc
imul
xchg
adc
mov
mov
mov
clc
jb
repnz
lds
imul
sub
lret
and
daa
cli
adc
mov
aaa
test
aam
aad
mov
adc
mov
mov
cmp
push
xchg
out
or
jne
mov
cmp
lahf
lods
bound
cmp
jae
xchg
out
pop
orl
js
daa
lahf
lds
fimull
push
jecxz
pop
stos
sub
mov
mov
aam
cmp
push
es
out
imul
lahf
mov
dec
xlat
mov
fsts
inc
push
stos
dec
push
ljmp
scas
movsl
outsl
jo
pusha
jne
leave
mov
repz
aas
mov
jae
rorl
stos
out
push
add
mov
xchg
movsb
lods
jp
jl
aad
add
popf
aas
mov
fistpl
or
mov
fwait
jle
push
fdivp
adc
pushf
repz
sahf
push
xchg
push
fabs
push
mov
leave
test
adc
popa
pop
xor
mov
adc
aad
jo
sbb
or
and
sub
fwait
pop
js
jecxz
push
or
jb
mov
arpl
lcall
scas
cld
cmp
fst
push
push
popa
inc
or
bound
pop
mov
cmc
dec
sbb
call
push
xorb
leave
mov
push
mov
mov
mov
jg
jg
or
and
cmp
jnp
adc
mov
cmp
mov
adc
xor
adc
mov
in
or
popf
fcomps
in
inc
cs
mov
aad
xchg
push
jb
sbb
nop
adc
mov
push
cmp
test
les
sti
repz
jl
push
aam
xchg
push
int3
pop
nop
lods
iret
out
outsl
decb
sar
pop
mov
jns
xor
incl
xor
ljmp
mov
popa
data16
scas
addr16
cmp
mov
xchg
add
push
adc
jl
jmp
into
sub
popa
jno
cs
test
dec
arpl
cmp
xchg
sbb
xor
lock
mov
imul
dec
dec
or
and
mov
in
loope
xor
push
cmp
pushf
mov
insb
add
stc
jp
daa
mov
mov
cli
rclb
xchg
lcall
mov
fwait
sahf
push
mov
sbb
aad
pop
jl
ret
add
mov
hlt
gs
loop
pushf
cs
mov
jae
insl
dec
inc
shll
je
push
push
fcom
mov
push
sbb
push
inc
inc
xor
dec
jo
movsb
and
pop
pop
arpl
test
popa
fildll
sti
mov
mov
fsubrl
arpl
clc
fcmovb
adc
xor
sarl
and
sbbl
mov
pop
sub
fucomi
jl
mov
cmp
mov
loop
adc
sbbl
add
int3
mov
adc
dec
mov
xor
mov
ljmp
sub
out
dec
and
xchg
aam
add
call
ljmp
add
xor
fistpl
or
repz
push
jl
push
cmp
fwait
cmpsl
and
xor
xchg
dec
lods
sbb
pushf
aaa
xchg
test
jg
adc
mov
sahf
out
jns
or
sahf
mov
cmp
test
lahf
mov
xchg
cmp
lods
popf
push
mov
jae
push
jb
enter
lahf
and
cmp
push
ss
loope
dec
dec
ja
inc
inc
add
dec
dec
jae
scas
jb
popf
lahf
rcrb
cmp
mov
sub
sbb
mov
int3
or
mov
movsb
cmp
cmp
gs
cmp
fcoms
les
int
xor
arpl
mov
and
fwait
jmp
inc
icebp
mov
xor
cltd
jne
aas
lcall
add
clc
push
es
or
push
ja
popw
mov
jno
mov
cmpsl
xchg
fimull
ja
jnp
mov
or
jne
xchg
mov
lret
jge
push
jo
cmp
enter
adc
sub
loopne
call
inc
jp
nop
adc
cltd
sbb
lsl
adc
dec
jo
insl
rorl
mov
xchg
in
sbb
cmp
jns
and
fildl
and
es
ja
cwtl
jae
adc
cmpsb
inc
inc
push
movsl
stc
inc
aaa
push
jle
lahf
mov
int
jle
imul
outsl
fmuls
inc
xor
mov
lahf
and
mov
testl
shl
sbb
xor
cmp
mov
das
adc
cmp
std
sbb
xchg
cli
inc
popf
adc
xchg
xchg
stos
push
cs
std
xchg
and
cld
hlt
aam
outsb
fcoms
pop
xlat
inc
xlat
ss
mov
push
cmc
sbb
out
adc
int
inc
mov
inc
arpl
xlat
sub
testb
pop
test
rolb
push
js
mov
call
xchg
loopne
into
fsubr
test
fsubp
shlb
loope
shlb
mov
pop
inc
in
inc
xchg
sahf
xor
inc
push
add
sub
movzbl
ds
add
hlt
dec
and
adc
push
testl
data16
aaa
stos
cmp
ja
pushf
push
jne
sub
imul
add
nop
sbb
fs
aam
nop
outsb
xor
push
sbb
cmp
test
pop
into
out
pushf
negb
ds
lret
push
ljmp
or
mov
pop
lods
adc
leave
into
gs
and
adc
sbb
out
adc
cld
enter
cmp
mov
outsl
mov
ficomps
push
ljmp
inc
ljmp
out
fistpl
ljmp
xlat
das
push
pop
xchg
adc
pop
push
pop
mov
jnp
dec
pop
nop
fucomip
mov
cmp
out
movsl
jmp
mov
adc
rorl
sarl
stc
cmp
inc
mov
inc
xor
sub
cmc
cmp
jns
xor
pop
lahf
test
sbb
push
mov
or
lret
dec
or
cmp
scas
mov
pop
mov
jp
jl
and
outsl
pusha
dec
fnstcw
cwtl
adc
cmc
cmp
out
cwtl
repz
js
cli
fdivrl
lea
xchg
adc
fst
ficompl
test
mov
inc
negl
fnsave
outsb
mov
lret
dec
int3
int3
xlat
daa
pop
inc
or
pop
xor
add
imul
sub
adc
sub
lea
cmpsl
jo
arpl
pop
and
scas
les
mov
mull
jo
and
aaa
mov
xchg
push
icebp
out
xor
mov
rorl
aad
adc
fcoml
mov
imul
outsl
int
push
addr16
adc
les
inc
push
jl
out
mov
fadd
jo
int
out
pop
mov
mov
mov
loopne
mov
iret
mov
jbe
xchg
hlt
mov
pop
popf
test
jmp
inc
xchg
pop
in
pop
push
cmp
adc
int3
jne
cmp
imul
or
mov
mov
mov
mov
jge
sub
sub
jbe
jae
xchg
movsl
jns
test
adc
mov
or
imul
push
sbbb
xchg
loopne
ffree
mov
icebp
xor
cmp
cmpsl
cmp
mov
jno
add
mov
jl
push
decb
fisubs
add
add
inc
pop
pop
mov
mov
dec
outsl
xor
jge
add
js
icebp
loopne
jecxz
fs
pop
rcll
adc
sahf
rcll
cld
cmp
xor
test
or
mov
rcll
adc
nop
sti
push
clc
out
inc
pusha
add
sbb
lcall
add
sub
cmp
sub
push
mull
mov
popa
int
jmp
mov
das
pop
mov
pop
or
cmc
pop
rolw
jmp
mov
rcl
xor
dec
cld
mov
jmp
cmp
je
imul
jno
jne
mov
xchg
xor
push
sbb
sbb
xchg
dec
mov
jmp
pop
sub
cmp
xchg
imul
ret
mov
inc
and
outsb
cmp
sbb
mov
pop
add
jmp
loop
mov
xchg
test
jmp
jne
cwtl
imul
xor
jne
fisubs
fsts
push
aaa
cltd
mov
pop
cld
les
pop
repz
xchg
and
and
sub
push
adcb
xor
sbb
popa
test
lds
cmp
cmp
push
lahf
insl
lret
iret
add
daa
jne
jne
and
sub
jbe
test
and
scas
test
mov
icebp
lods
sub
sub
or
xor
pop
mov
push
xchg
and
addr16
xor
or
ja
xor
jne
es
icebp
leave
xchg
in
add
ja
imul
sti
xor
in
es
hlt
jae
or
addb
push
stos
out
jmp
mov
add
jae
cwtl
lret
push
push
mov
push
push
inc
je
sub
pop
push
dec
das
sub
movsb
fstpt
mov
mov
xchg
mov
mov
insl
stc
dec
mov
lock
dec
push
push
pop
mov
sub
add
jp
mov
push
inc
call
dec
jecxz
sub
nop
std
dec
fdivs
add
mov
pop
pop
push
js
sub
fs
jle
xchg
stos
mov
imul
hlt
jge
fcompl
es
mov
inc
loope
push
fdivrp
sbb
cli
cmp
fdivrl
and
addr16
inc
out
dec
les
aaa
inc
lcall
outsl
cmc
jno
aas
cmp
in
ljmp
imul
mov
jne
inc
bound
leave
inc
inc
jno
nop
pop
jl
dec
inc
stc
je
mov
dec
aam
insl
shl
in
and
lods
push
es
adc
push
mov
daa
lea
pushf
out
add
je
add
out
or
imul
cmp
xor
subl
add
or
scas
mov
and
incb
psllq
imull
inc
inc
cmp
and
xchg
fs
imul
in
jb
lcall
sbb
mov
xchg
mov
push
cmp
lret
jbe
mov
insb
rcll
push
mov
or
test
aad
ljmp
aam
andb
icebp
or
dec
int3
mov
jge
fwait
jmp
pop
sub
cmpl
in
cmpsl
cmpsb
jge
jns
jns
jno
popa
cmp
push
cmp
neg
jbe
ss
inc
jbe
add
xor
aam
mov
divb
in
and
mov
sub
jg
push
arpl
cmp
add
mov
arpl
fisubs
mov
rclb
push
inc
data16
pop
daa
add
add
add
xor
imul
test
and
loop
mov
lcall
jmp
and
into
pop
icebp
flds
pusha
dec
lods
pop
aad
scas
inc
or
inc
test
dec
into
jb
cs
xchg
rcrb
cld
xor
add
dec
rol
mov
pop
mov
dec
and
frstor
scas
sbb
sub
xchg
and
cli
jmp
mov
mov
push
pop
mov
clc
inc
sbbl
ret
lods
in
jnp
cmp
xchg
dec
scas
in
out
add
mov
fimull
mov
fsubs
je
mov
jo
xchg
cwtl
shl
mov
stc
pushf
popa
xchg
lods
das
mov
sub
cwtl
xchg
push
inc
sub
add
xor
pop
cmpsb
xor
sub
shrl
pop
bound
xor
add
or
pop
mov
lcall
dec
cli
shll
sbb
imul
cld
and
mov
out
sub
jge
jle
adc
out
scas
sub
mov
push
and
fcmove
notb
test
stos
add
mov
adc
push
dec
les
or
ds
test
repz
pop
cltd
int3
iret
pusha
or
add
mov
dec
mov
stc
fisubl
loope
rolb
xor
scas
inc
js
dec
test
push
xlat
sub
lea
sbb
outsl
xor
daa
repnz
lea
pop
in
popf
stc
pop
fs
fistpll
cli
loopne
cmp
mov
out
rcll
sti
sub
dec
dec
cwtl
insl
or
or
in
repz
pop
sub
bound
push
test
pop
mov
in
testb
xor
xchg
mov
mov
push
popa
pop
cli
xchg
test
fwait
inc
jmp
push
jecxz
jg
jb
xchg
jb
iret
jo
movsb
or
push
mov
push
and
rorl
and
scas
imul
sbb
adc
and
adc
test
iret
outsl
rcll
sub
ret
arpl
aam
xor
jae
adc
sub
ror
or
add
outsl
lods
rep
dec
scas
push
push
aaa
dec
cmp
inc
cmpsl
je
fnsave
push
data16
aad
mov
pop
aaa
mov
aas
dec
jge
pop
test
sub
stos
btr
push
mov
std
test
adc
fildll
mov
cwtl
jp
xchg
push
scas
int3
add
in
cmp
push
mov
jnp
insl
mov
in
lahf
pushf
imul
mov
jbe
sub
inc
dec
inc
mov
dec
hlt
or
and
rcrb
fsin
sti
pop
int
push
iret
sub
dec
lcall
sub
mov
xchg
outsb
dec
inc
popf
ljmp
sub
and
les
popf
sbb
sub
test
mov
lock
nop
in
xlat
lods
loope
aaa
orb
mov
push
je
mov
sub
decb
mov
cmp
dec
jecxz
sahf
aam
mov
cmpsl
stc
mov
pop
jb
mov
loop
lcall
inc
dec
pop
aaa
dec
scas
in
bound
adc
jge
mov
add
cmp
test
or
roll
pop
das
scas
or
jl
das
cld
sti
push
inc
ss
rclb
xchg
incl
xor
push
jl
das
mov
lahf
mov
sbb
in
adc
jle
mov
aas
jae
mov
and
pop
lds
dec
and
xchg
add
jmp
outsb
int
les
fsubrl
mov
lahf
jecxz
or
sbb
repnz
addl
add
stos
lods
test
out
sbb
xor
in
hlt
insb
dec
aas
jge
jne
add
lret
nop
push
testl
in
stc
clc
in
stos
adc
fwait
inc
clc
add
mov
jecxz
mov
add
sbb
push
xchg
sbb
mov
int
mov
ljmp
mov
lods
in
aas
cmp
movsb
xor
mov
stos
cld
inc
in
arpl
lods
sbb
mov
ja
movl
adc
repnz
xchg
cmc
lods
call
mov
pop
jl
pop
dec
popa
sarl
shl
mov
xor
jecxz
test
or
andl
mov
and
add
jmp
test
inc
or
sahf
and
mov
adc
adc
ret
cmp
mov
dec
push
jb
push
jb
ss
mov
shrl
out
inc
sub
pop
lcall
lcall
push
xlat
xchg
shrb
outsl
repnz
rcll
incl
xchg
jnp
or
cld
dec
cmp
insb
leave
push
mov
inc
sub
dec
inc
loop
lds
addr16
sbb
notb
stos
scas
fidivrs
add
mov
in
sbb
add
out
pusha
enter
lods
pop
insl
cmpsl
push
push
sti
and
pop
cmpsb
push
mov
lret
cltd
gs
js
fsubrs
mov
mov
sbb
pop
fidivs
in
scas
lods
jne
cli
testl
adc
jnp
or
test
mov
add
xchg
fcmovbe
je
mov
dec
cmpsl
pushf
push
pop
sub
sbb
jnp
pop
mov
clc
aas
mov
cwtl
das
int3
ret
mov
xor
mov
aam
mov
call
or
lret
or
pop
inc
pop
pop
repz
cld
jne
rcrb
push
mov
sbb
dec
mov
nop
pop
xchg
cltd
xor
cmp
imul
aaa
lcall
sarl
or
mov
pop
xchg
sbb
sbb
testb
cmpsb
sub
daa
sarl
pusha
jns
and
mov
cmp
adc
inc
cltd
fists
xchg
scas
loope
repnz
aaa
jb
loope
inc
imul
insl
sub
cmc
inc
pop
xchg
mov
mull
jo
pusha
loope
shlb
jno
jo
push
pop
mov
cs
and
xlat
lods
xchg
adc
adc
rcr
pop
xchg
mov
in
les
or
dec
lahf
aad
dec
push
xchg
fiadds
pop
lcall
es
es
mov
xchg
sahf
out
sbb
mov
mov
cmpb
insl
xchg
dec
ljmp
xor
dec
xchg
sar
jns
push
mov
jg
idivb
cld
and
or
mov
mov
push
add
aaa
mov
push
int3
mov
sub
inc
mov
xchg
inc
push
cmpsl
or
sarb
mov
xchg
cwtl
into
cld
popa
jne
dec
xor
pop
or
ffreep
ret
mov
mov
add
push
push
imul
dec
andl
mov
sahf
mov
sbb
jecxz
nop
inc
loopne
insl
inc
add
cmpsl
jo
aaa
repnz
aaa
adc
add
stos
cmp
dec
xchg
lcall
cmp
sbb
xchg
in
enter
arpl
imul
jl
rcrb
xor
popf
adc
xor
jle
push
inc
in
repnz
fldcw
fs
xchg
push
inc
jge
ficompl
pop
dec
daa
xor
ret
aaa
fdivl
add
outsb
or
add
adc
mov
cmpsl
xor
mov
lods
rcll
stos
inc
add
pop
push
cld
arpl
mov
outsb
in
mov
xor
add
sub
add
mov
rorb
mov
jl
jbe
xchg
enter
and
or
or
add
xchg
sub
fbstp
out
in
push
cmp
test
negl
xchg
mull
xchg
dec
into
sub
sub
mov
daa
dec
mov
xor
lds
push
cmpsl
inc
outsb
jecxz
insb
imul
rolb
cld
in
jno
cmp
cltd
mov
test
mov
cld
shl
sub
sbb
pop
inc
jno
or
push
arpl
das
or
ret
jle
cmp
cmc
xchg
lods
popf
ss
out
cmp
shll
iret
icebp
popa
dec
adc
dec
insl
add
mov
inc
cli
jge
enter
aam
mov
push
jmp
out
inc
int
or
pop
jp
ja
cld
gs
mov
jecxz
icebp
sti
jmp
or
outsl
sub
xor
xor
jo
je
jge
dec
add
data16
mov
mov
jge
fcomip
xor
clc
xchg
sub
inc
iret
out
test
push
in
nop
in
mov
mov
or
add
jno
rorl
jl
sbb
cmc
out
mov
loope
add
sub
insb
dec
mov
push
subb
js
cs
addb
imul
test
faddl
lods
mov
mov
pop
pop
xor
jns
mov
add
movsl
int3
push
sub
mov
loop
xor
jg
insb
inc
xor
shr
popa
negl
xchg
sbb
lahf
adc
bound
les
ret
xchg
movsb
mov
sub
adc
cmovae
xchg
imul
sbb
mov
lcall
shlb
out
mov
sahf
add
ljmp
and
xchg
jg
cmpsl
jns
loope
addb
mov
mov
xlat
sar
adc
push
sbb
lahf
sti
or
lea
xchg
stos
in
outsl
sti
subl
mov
repnz
je
sbb
mov
jge
mov
les
cli
popf
loope
aam
stos
pop
dec
dec
fstpt
mov
adc
out
test
cmpsb
dec
shlb
adc
sbb
cmpsl
ss
loope
xchg
into
jo
adc
jno
lods
mov
push
xchg
pushf
ret
aaa
cmp
adc
movsl
and
inc
mov
or
jo
cmp
imul
cmp
jmp
dec
arpl
gs
add
aam
cmp
or
inc
cmpsb
aaa
and
mov
adc
test
outsl
or
xchg
rcrb
adc
mov
xlat
push
dec
ljmp
cmp
call
xor
adc
mov
aas
add
inc
mov
xchg
notl
orl
ja
mov
sub
lcall
mov
popa
repnz
sub
jg
cli
push
sub
hlt
pop
inc
lahf
dec
enter
scas
pop
lahf
fadds
lret
dec
xchg
out
xchg
sbb
ret
in
sti
push
cli
pop
pop
rol
paddsb
aaa
dec
aaa
sti
dec
jns
jmp
xor
in
and
icebp
lock
out
xor
dec
sub
dec
sub
mov
jmp
stos
mov
outsl
scas
jle
jle
ret
or
xlat
mov
jecxz
push
movsl
fwait
jmp
mov
outsb
inc
loop
mov
sbb
push
mov
mov
ljmp
mov
push
jae
and
mov
jge
mov
pusha
sub
leave
and
cld
inc
and
lock
push
pop
push
fnstsw
sub
mov
insb
leave
into
jecxz
mov
inc
mov
sub
adc
cmc
movsb
push
pop
test
hlt
mov
and
mov
sbb
test
jne
or
mov
sub
xchg
adc
sbb
push
outsl
mov
out
int
in
sahf
jl
jne
nop
pushf
jb
fs
xchg
jl
xchg
or
pop
mov
mov
roll
cwtl
repz
cmpsl
sbb
lret
fstpt
in
push
test
aad
mov
test
divl
push
xlat
mov
cwtl
push
push
cmp
pop
clc
jns
pop
jnp
fildll
mov
pop
stos
lods
xchg
inc
pusha
or
test
ds
pop
adc
fildl
jp
out
xchg
mov
xchg
dec
and
dec
push
loopne
dec
add
cmp
bound
add
loopne
jnp
cmp
sub
cmp
mov
or
xor
and
mov
mov
data16
outsl
inc
jmp
sbb
cmp
aas
lret
mulb
rolb
push
pop
mov
or
xorb
or
mov
repnz
and
push
mov
or
decl
inc
daa
xor
repz
dec
mov
sbbb
rclb
loopne
cmp
pop
push
shlb
in
loop
aas
push
and
push
xor
iret
mov
jne
mov
pop
lock
nop
mov
stos
aas
cltd
xchg
jns
call
nop
add
xchg
lcall
in
xchg
out
add
push
sub
mov
shll
ss
andl
decl
pop
mov
fwait
loop
xchg
lret
dec
sbb
inc
mov
lea
or
jle
inc
fwait
or
and
pop
jecxz
insl
std
add
in
push
rcll
scas
xlat
pop
dec
les
std
or
addb
pop
iret
shl
out
ds
or
inc
cmc
lcall
xchg
mov
mov
fwait
cli
and
test
stos
cwtl
adc
out
xor
add
insl
fwait
enter
add
push
jae
and
popf
inc
pop
mov
xor
mov
fbld
pop
jns
imul
lock
xor
jp
inc
ds
pop
loop
and
push
inc
mov
and
popa
xor
pop
and
fimuls
and
bound
shl
inc
and
xor
gs
nop
fwait
das
mov
shl
fdivs
cwtl
cmc
xchg
sbb
call
pop
xlat
subb
es
fwait
nop
movsl
or
out
stc
aam
cli
bound
loope
ret
out
lcall
sbb
dec
mov
ds
xchg
mov
adc
jne
inc
push
imul
aam
jg
add
lods
pushl
jbe
pop
out
mov
xchg
mov
aam
adc
inc
data16
stc
push
inc
out
inc
jmp
jb
cmp
adc
sbb
dec
xorl
ret
les
push
mov
cmp
test
xor
inc
xchg
push
test
outsl
mov
add
add
fcomps
or
dec
in
mov
mov
push
bnd
jns
call
mov
push
mov
das
repnz
pop
or
stos
std
fstpl
add
push
cs
inc
push
cmpsb
mov
daa
adc
adcb
fcompl
pop
enter
fwait
es
adc
movsl
jmp
push
dec
xlat
lea
stos
hlt
lods
sub
dec
in
push
int
outsb
pop
shrl
fcomi
repz
inc
and
lods
pushl
stc
aad
sahf
jge
mov
mov
divb
mov
pop
scas
jne
fnsave
push
jb
push
push
lcall
shll
fs
push
dec
mov
stos
ss
dec
sbb
push
aas
inc
push
mov
test
js
rcll
xchg
add
sub
mov
and
das
test
int
sbb
dec
jmp
in
mov
cltd
mov
dec
fwait
push
sub
shlb
mov
das
xchg
ret
adc
xchg
jnp
ficompl
pop
mov
dec
sub
stos
dec
in
stos
outsb
frstor
push
popf
cmp
mov
inc
xchg
loope
movb
enter
jmp
pop
aad
pop
shlb
mov
sahf
insb
adc
fcoml
and
dec
cmp
inc
push
pop
sub
std
test
lahf
daa
mov
add
jge
mov
adc
inc
aas
pusha
jae
hlt
and
outsl
push
scas
push
inc
jne
jp
insl
jb
cmp
fstpl
test
mov
dec
or
aas
push
lret
cmp
jg
jecxz
cmpb
addb
xchg
sbb
lea
out
fs
inc
mov
leave
aaa
cmc
and
jbe
sbb
mov
jbe
pop
jg
push
and
movsb
jg
jae
pop
inc
mov
cmp
into
fsubrs
or
or
nop
shll
nopl
insl
sbb
outsl
dec
push
stc
mov
push
repnz
cmp
mov
sub
in
pop
enter
mov
fistpl
sbb
and
sbb
in
fmull
inc
jo
lret
lret
fcoml
sbb
pop
ss
xchg
fs
adc
ds
mov
out
sbb
cmpsb
pop
xor
mov
push
sti
push
shrb
in
push
adc
fstp
and
mov
and
test
jbe
in
jbe
ffree
and
popl
jae
xor
and
mov
push
jno
mov
and
adc
inc
push
xchg
stos
adc
lods
leave
imul
xchg
cs
or
in
xchg
pop
pop
pop
push
lods
jno
notb
sbb
sbb
add
nop
adc
pop
pop
add
ret
fsubrp
out
fnstcw
repnz
push
xchg
inc
leave
scas
jle
xor
outsl
sub
jmp
push
pop
into
shrb
dec
rcll
add
mov
mov
gs
lcall
or
lods
movd
nop
rolb
sbb
mov
inc
xchg
pop
mov
pop
or
psubusb
push
mov
mov
mov
in
add
add
ret
shlb
or
int
inc
push
pushf
mov
cmp
push
stc
adc
js
inc
cmp
or
xor
cmp
cmpsl
outsl
rep
xchg
fscale
inc
lock
add
popl
leave
push
data16
cwtl
aad
ja
mov
xchg
aad
loope
pop
add
outsl
or
shl
pop
fsubs
repz
mov
repnz
rclb
out
jecxz
pop
hlt
pop
mov
jns
imul
movsb
pop
mov
push
rcl
ret
ljmp
test
inc
gs
cmc
jne
jae
es
repnz
mov
adc
cmp
xchg
push
enter
cmp
in
es
cltd
sti
push
push
int
lret
or
rcr
test
sahf
dec
jg
sub
mov
das
and
cmpsl
jecxz
add
push
repnz
out
hlt
leave
dec
test
cmp
dec
jb
xor
mov
sbb
fmuls
hlt
lock
xchg
xorb
rcr
push
mov
push
xorl
or
xchg
imulb
inc
outsl
rep
lret
sti
cmp
xchg
mov
pop
enter
out
cld
mov
inc
loopne
pop
jecxz
stos
mov
xor
xchg
mov
pop
mov
aad
jg
jp
enter
leave
adc
dec
jle
rorb
cmp
shrl
lock
fwait
mov
sbb
cmpb
push
movsl
fnstcw
gs
repnz
and
jg
nop
jae
call
stos
mov
dec
outsl
mov
cmp
or
cmp
iret
roll
dec
cld
inc
inc
xchg
dec
in
loopne
movswl
cmp
pop
dec
cmp
int3
xchg
cli
icebp
inc
push
lds
xor
test
inc
sbb
jg
sbb
xor
inc
fisttpll
and
arpl
roll
cmp
popf
pop
rcr
jne
jb
push
test
xor
and
mov
in
mov
outsl
push
ror
mov
pop
shrb
adc
pop
jl
iret
lods
ja
sbb
mov
imul
fcomps
pop
das
mov
push
outsl
stc
add
inc
pusha
jo
popf
and
mov
dec
jl
ljmp
lcall
dec
cld
add
int3
adc
addr16
std
inc
lahf
lock
outsb
push
lret
sti
adc
dec
pop
add
mov
fsubrp
xchg
int
sarb
fstpl
nop
mov
ljmp
jp
lcall
daa
aaa
push
scas
enter
push
les
lcall
xchg
push
out
ljmp
sbb
sbb
data16
ljmp
mov
xchg
sub
and
push
cmpsl
test
adc
sar
pop
int
lds
call
lods
dec
inc
pop
cmp
mov
mov
dec
sbb
jge
in
adc
shrl
cmp
clc
addb
lds
dec
ret
in
jmp
mov
jecxz
inc
mov
cmp
push
in
adc
pcmpeqb
pusha
jo
outsl
dec
les
sbb
xchg
push
int
sub
and
sub
pop
out
out
jg
xor
stos
xchg
inc
iret
dec
andl
shlb
add
cs
mov
xor
xchg
cli
sbb
adc
and
fnstcw
mov
dec
div
sbb
xor
xor
fistpl
cmp
and
inc
insl
sub
xor
jo
insl
stc
jmp
dec
loop
push
decl
repnz
mov
xor
jg
gs
mov
mov
jp
in
sub
mov
adc
adc
jb
das
xor
cmpsb
jg
popf
mov
fiadds
adc
insb
sbb
mov
and
std
ja
leave
lahf
pop
sub
push
and
dec
dec
cmp
fsubrl
xchg
xchg
fsts
mov
adc
xlat
push
mov
mov
dec
push
pop
nop
sub
in
jno
and
lahf
sbb
cli
push
std
test
add
mov
test
push
addr16
rcrl
or
sarb
sub
xorb
data16
lcall
pop
clc
into
and
clc
lcall
add
add
loop
out
adc
and
push
hlt
cmpsb
inc
pusha
xlat
jmp
cmc
xchg
mov
js
mov
inc
mov
insl
in
cmp
xlat
call
xchg
lods
pusha
insb
mov
movsb
add
xchg
imul
sahf
popf
sbb
aam
sti
or
rcl
stos
xor
pop
loopne
sbb
shrb
xor
fcompl
jecxz
jnp
mov
clc
inc
push
lods
std
xor
and
sbb
push
pop
test
push
movsl
mov
jne
pop
test
xchg
push
arpl
or
cmp
dec
jns
and
or
mov
dec
push
xchg
daa
inc
mov
jp
cli
xchg
lea
xchg
dec
ret
mov
rcr
mov
xlat
rolb
cmp
xchg
mov
fists
sub
fcomps
test
xorb
mov
lods
leave
pop
insb
mov
pmaddwd
pusha
inc
mov
and
js
enter
in
push
xchg
in
push
repnz
mov
sbb
into
push
out
or
xchg
xor
subb
sbb
mov
out
xlat
cli
orb
xor
stos
imul
mov
jns
xchg
test
in
shll
lods
pop
addr16
adc
cmp
jl
push
pushf
std
cltd
gs
fcmovbe
enter
fwait
mov
cmp
fidivrl
cmpb
push
pop
add
and
scas
in
inc
cwtl
xor
add
call
mov
inc
sbb
cmpsb
insl
dec
jno
push
sbb
mov
sahf
iret
lea
cmp
pop
sub
loope
push
xor
out
and
jmp
cs
ja
aas
aaa
cwtl
lods
loopne
mov
mov
adc
push
pop
and
xchg
js
imul
and
add
popf
dec
sbb
xor
enter
jnp
push
push
jb
roll
cli
dec
outsb
lret
inc
js
mov
mov
pop
faddp
jmp
mov
mov
popa
add
lahf
in
xchg
lahf
xor
mov
incl
dec
scas
add
fs
arpl
stos
jae
cwtl
movsl
inc
imul
shll
cmp
daa
ret
gs
or
ret
mov
in
lret
cmpsb
rorl
ffree
sbb
sub
pop
mov
ret
cmp
mov
and
fadd
js
sarb
fwait
inc
aas
add
inc
mov
jle
ja
cwtl
xchg
mov
dec
jns
jp
fiaddl
inc
incl
mov
cli
outsb
pusha
or
fwait
mov
mov
jmp
add
sbb
and
inc
insl
test
mov
or
mov
jge
adc
push
into
pop
and
in
stos
pop
popf
inc
sub
daa
or
scas
pop
gs
xchg
sub
in
mov
push
push
sbb
mov
mov
loop
or
repnz
xor
fsubl
shll
aaa
lods
addr16
jl
jge
negl
cld
imul
scas
lock
xchg
dec
and
xchg
cld
fwait
and
dec
addb
adc
mov
and
sarl
jae
movsb
aad
pop
sub
mov
cmp
ficoms
stc
pop
aam
rcrl
or
xabort
sub
stos
jle
dec
pushl
lock
cld
shrl
jge
adc
ja
xor
shlb
fcoml
mov
mov
or
test
orb
mov
repnz
test
dec
loopne
pusha
and
and
mov
xchg
or
push
cwtl
mov
jle
push
stc
aas
mov
arpl
icebp
dec
in
dec
aaa
fisubs
je
sbb
sub
jg
cli
scas
ja
inc
xchg
es
push
mov
jmp
sbb
js
iret
in
in
sti
sahf
cld
jno
in
cld
into
lock
dec
orl
aam
mov
push
decb
mov
fs
jg
scas
lock
out
pop
test
push
add
push
push
inc
loope
mov
sbb
sahf
cmp
adc
lahf
cwtl
sub
pop
cltd
mov
inc
adc
out
fdivrl
push
lcall
cwtl
sti
subl
std
jle
mov
push
insl
lahf
add
mov
rcll
inc
aam
or
inc
sbb
sub
jo
push
shll
int3
int3
insb
scas
mov
xchg
stc
pop
mov
ss
stos
fistps
rcrl
in
inc
fsubrp
push
pop
add
sbb
or
inc
adc
dec
cmp
jbe
cmp
pop
sbb
addr16
stos
insb
cmp
adc
xor
cltd
pop
scas
mov
mov
jno
fmulp
ret
lea
pop
cld
dec
ja
mov
jl
mov
push
add
inc
push
repnz
loop
xorb
mov
std
xor
imul
xorb
xor
jle
dec
sub
ss
mov
pop
xor
or
test
cmp
lods
scas
aas
sarl
add
orl
mov
sti
mov
jnp
jmp
jle
add
inc
add
cmpl
pop
inc
and
shll
sarl
ljmp
pop
int
xchg
std
jns
out
cs
jp
jmp
jmp
mov
adc
sbb
jns
insb
lods
jmp
mov
lsl
inc
aad
pop
int
jb
inc
dec
jp
out
clc
sbbl
popf
mov
mov
mov
in
fmuls
mov
xchg
in
jnp
mov
push
ljmp
mov
dec
daa
lea
fstl
dec
xor
insl
inc
mov
lahf
jbe
add
sub
xchg
push
leave
pop
or
stos
rorl
xlat
inc
mov
add
loope
popa
jge
dec
aas
pop
and
mov
pop
pop
jb
jbe
mov
xchg
imul
idivb
mov
mov
mov
sbb
sub
mov
lds
xor
fidivs
movsb
jno
sbb
dec
stos
jmp
cmp
push
or
add
sub
mov
and
jnp
xor
add
inc
dec
add
fwait
add
les
repnz
icebp
stc
pop
push
test
mov
sub
jo
jnp
loope
xchg
in
idiv
mov
mov
je
sbb
scas
jg
stos
push
mov
pop
bound
faddl
loopne
push
aad
push
or
xor
into
sbb
sub
inc
xor
adc
push
push
xor
mov
inc
push
aas
xor
adc
dec
jbe
jb
cmp
scas
pop
jg
mov
cs
out
xstore-rng
cmpsl
xchg
lds
movsl
out
xchg
add
mov
stos
aaa
shrb
orl
popf
pop
sub
mov
sub
jo
xchg
pop
pop
xor
test
add
int3
ret
das
icebp
inc
loope
mov
lock
xorl
ljmp
mov
push
ds
jb
sbb
cmc
pop
mov
adcb
jns
add
jge
lds
lcall
cmpsb
mov
push
mov
call
ja
sar
frstor
dec
shr
leave
xchg
fisttps
popf
fistl
push
inc
out
popa
jo
xor
pop
fsqrt
add
std
test
sbb
push
fdivrl
dec
cmpsb
xchg
stos
sbb
and
pop
js
pop
loopne
xor
cmp
mov
add
popl
xchg
lock
dec
dec
scas
fsubl
push
lret
sub
inc
cmp
jae
inc
mov
fs
jne
or
pop
mov
orl
idivb
insb
xchg
dec
jl
repz
sub
mov
outsl
lods
sbb
stc
mov
mov
mov
cwtl
adc
bound
inc
mov
push
int
mov
dec
mov
mov
dec
sti
cmpsb
jg
out
cmpsb
xchg
testl
cmp
jns
cmp
leave
sbb
call
lahf
scas
mul
cmc
xchg
pushf
inc
inc
cwtl
mov
scas
mov
out
cmp
sbb
pop
xchg
lods
cmp
inc
adc
inc
xchg
test
dec
movsb
popw
xchg
dec
shr
sub
pop
inc
sub
out
je
outsb
lcall
iret
rorb
cmp
ret
test
clc
aam
cmpsb
movsl
sbb
pop
cwtl
sub
jge
iret
aam
and
cmc
das
mov
cs
jo
int
xor
mov
lret
inc
add
xor
push
pop
lahf
cmp
cltd
jg
imul
sub
lahf
push
insb
scas
jge
xor
dec
xor
pop
add
xor
loopne
fdivp
or
cwtl
loop
add
pop
out
add
fxtract
ja
sbb
not
mov
mov
inc
push
inc
in
push
dec
aad
and
or
std
ret
mov
adc
cli
sbb
fidivrl
and
loopne
or
minps
mov
push
subl
sub
mov
adc
cmp
inc
inc
imul
xchg
cltd
jle
push
push
psubusb
arpl
jmp
xor
jp
xor
cmp
leave
ljmp
fldenv
mov
or
mov
jnp
sub
popf
cmpsl
fdivrs
dec
sbb
iret
add
and
pop
sub
cmp
jg
out
sbb
cmpsl
adc
sbb
dec
pop
out
jo
mov
inc
sub
jg
mov
mov
nop
pop
cltd
add
sbb
aas
pushf
sub
push
xchg
dec
jmp
mov
jp
outsl
add
out
cmp
jae,pt
xchg
inc
mov
addr16
je
fmull
hlt
das
pop
push
push
sbb
push
out
add
add
and
ss
push
pop
fldenv
icebp
xlat
mov
sarb
lock
add
roll
dec
clc
add
mov
mov
sahf
and
push
sbb
lcall
xchg
ss
mov
sub
push
sbb
stos
aam
lods
xchg
xchg
ds
sti
push
daa
pop
aad
push
inc
xor
jg
pop
jne
and
inc
or
das
stos
data16
and
or
pusha
ret
popa
sar
mov
xor
mov
sub
or
mov
dec
cltd
cmpsl
jno
add
test
fsubrs
or
mov
hlt
cmpsb
xchg
jle
cmp
sbb
jp
push
imulb
xchg
mov
imul
rcrl
pop
in
or
xor
push
call
or
sbb
aas
lods
dec
push
out
lods
jne
xchg
sbb
scas
push
fcmovbe
sbb
add
dec
je
push
mov
mov
das
xor
push
lds
mov
fdivp
xchg
loopne
jb
push
je
jle
sti
out
icebp
inc
sbb
aaa
inc
mov
or
add
mov
icebp
ja
mov
shl
jp
add
ja
xor
lea
mov
stc
and
pushf
insb
mov
sahf
cmp
test
divb
xlat
inc
insl
jb
mov
and
fcoms
cltd
fistpl
mov
scas
pop
test
ds
es
or
push
in
test
scas
inc
inc
in
push
fs
lret
jg
test
mov
loopne
test
dec
inc
movsb
mov
jo
fnstcw
mov
dec
push
push
pop
push
pop
imul
icebp
jo
push
mov
leave
insl
das
mov
scas
push
xchg
jp
imul
std
int3
cmpsl
xlat
negb
pop
add
hlt
cmp
outsl
mov
mov
sub
cmp
bound
repz
iret
mov
lret
jle
and
repnz
ljmp
jmp
sti
push
test
test
std
lods
xchg
dec
sbb
inc
mov
inc
repz
hlt
loopne
mov
cmp
jge
mov
pop
fcomi
xorb
cmp
pop
repnz
xor
and
repnz
enter
xchg
inc
and
jnp
mov
jae
push
xlat
daa
jb
jb,pt
add
push
or
mov
cmp
out
inc
sbb
sub
lds
in
pop
jb
clc
aam
lret
sbb
xor
rorb
mov
lods
mov
push
sub
or
xchg
pop
data16
fbstp
sbb
insl
ljmp
cs
mov
mov
fwait
loopne
bound
iret
test
mov
xchg
icebp
fsubrp
pop
pop
pusha
addr16
cmc
std
jbe
cltd
jmp
xor
adc
push
push
add
out
mov
inc
sub
jbe
aaa
in
imul
pop
and
das
cmpsb
mov
filds
or
pop
clc
fldl2e
xor
ljmp
mov
out
jl
add
adc
je
scas
sub
sbb
dec
dec
movsl
frstor
push
or
inc
pop
std
imulb
sub
sbb
repz
call
loop
jmp
sub
mov
stc
mov
xor
popa
pop
mov
in
test
fdivs
adc
repnz
push
loopne
push
out
psubd
fs
cmpsl
sahf
pusha
add
mov
pusha
add
xor
jns
lds
adc
mov
and
inc
sub
mov
and
adc
cld
jl
repz
cmp
pusha
and
fcomps
sahf
test
pop
push
jbe
std
out
lret
shlb
jae
push
in
cmp
sbb
mov
add
mov
mov
jecxz
dec
pop
mov
dec
sti
test
das
jge
adc
or
dec
ret
mov
push
sub
mov
dec
and
arpl
push
lods
aaa
pop
push
inc
dec
jbe
mov
incb
fwait
jo
test
sti
xchg
flds
lock
imul
icebp
cmp
sarb
dec
mov
xchg
mov
sbb
dec
or
out
jecxz
ja
xchg
jp
cmp
fadds
ret
adc
xchg
in
mov
dec
jae
aad
imul
dec
xor
mov
shrb
inc
out
push
xchg
sti
clc
ds
imul
mov
fldl
xchg
jp
in
and
aas
and
jl
test
in
mov
js
xor
shl
rolb
dec
and
and
mov
hlt
roll
jmp
movsb
inc
jl
fwait
es
and
push
sub
push
insl
mov
dec
fnstsw
pop
xchg
cltd
mov
mov
push
ja
or
xor
mov
in
push
mov
jb
mov
rorl
push
popl
and
ret
loop
gs
push
or
push
pop
or
mov
jg
ljmp
xor
leave
mov
mov
notl
subl
xchg
xor
pop
mov
popf
cld
sbb
out
ljmp
loopne
push
adc
push
mov
push
xchg
inc
idivl
lock
es
mov
fcom
lods
xor
ds
fs
sti
mov
sbb
jb
dec
or
adc
xchg
fs
jae
out
mov
xchg
fisubs
iret
adc
mov
and
xchg
sub
daa
jmp
es
fistpl
stos
inc
lods
scas
dec
out
aam
shll
adc
mov
popa
mov
shll
out
mov
push
pushf
in
mov
jae
pop
sbb
ds
push
cmc
sub
xlat
std
cmpl
orl
popa
push
push
push
outsl
pop
pop
pop
push
jns
sbbb
push
xchg
rcll
aad
add
inc
xor
les
dec
fcmovu
jo
fisubrs
cmp
adc
mov
js
jb
outsb
lret
movswl
pop
sbbb
fmuls
test
in
iret
mov
pop
je
xchg
pop
push
fisttps
xor
mov
dec
jmp
push
fucomip
jnp
pusha
xchg
dec
mov
jecxz
mov
lock
pop
repnz
dec
push
push
sub
je
dec
js
aaa
call
mov
xchg
jecxz
dec
ja
imul
outsb
test
sub
inc
ret
outsb
sub
cmpsl
inc
inc
bound
inc
dec
leave
lret
cmp
mov
push
pop
and
push
pop
jb
jns
fisubrl
adc
orl
mull
mov
adc
je
xchg
push
outsl
jg
pusha
sub
gs
mov
inc
jb
xchg
mov
loopne
ss
das
dec
cltd
inc
outsb
dec
test
mov
push
jecxz
nop
in
stc
imul
cmp
lods
sbb
imull
mov
lcall
int3
nop
lret
nop
je
clc
ja
push
loopne
repz
cld
sub
notb
fldcw
adcl
and
sbbb
pop
xchg
mov
test
xor
inc
lds
stos
and
cmpsb
xor
mov
xor
sti
ficoml
stos
rorb
pusha
jg
cmp
das
mov
pushf
mov
call
sbb
iret
dec
xchg
and
imul
out
dec
imul
push
lret
ret
push
push
insl
add
mov
out
stos
cmpsl
and
mov
add
add
movsb
cwtl
out
imul
imul
inc
inc
push
sahf
sbb
and
fwait
or
push
fistl
xchg
xor
pop
fmul
rclb
rorb
pop
fdivs
inc
sarb
ss
mov
sbb
cltd
scas
xchg
and
subb
cltd
mov
sar
inc
xor
loop
repnz
inc
lcall
add
out
pop
sbb
and
mov
cmp
out
fistl
jl
pop
mov
ret
bnd
aam
jne
mov
xor
fcmovne
faddp
mov
lds
scas
inc
mov
mov
out
mov
and
and
mov
mov
fcompl
cmpsl
out
call
es
xchg
xchg
roll
jg
int
inc
mov
xor
jge
or
loopne
pop
arpl
into
inc
data16
faddp
or
xor
test
es
add
ret
imul
inc
xchg
scas
xchg
mov
call
mov
in
or
push
pop
pop
lock
inc
add
jae
shrb
movsb
mov
out
sub
stc
dec
sti
orb
movsb
xlat
hlt
and
les
lret
ret
iret
xor
jae
xor
and
inc
jbe
test
xchg
das
inc
stos
jecxz
popf
aad
pop
in
mov
dec
cmp
or
sub
and
pop
sub
add
stos
xchg
test
lret
mov
stos
mov
ret
in
xchg
cmp
mov
aam
addl
es
data16
jle
adc
pop
test
loop
cmpl
or
mov
mov
jne
stos
push
lret
push
incb
lock
repnz
push
sub
push
mov
std
scas
call
stc
in
push
jns
dec
arpl
das
pop
repnz
lods
addl
push
adc
jbe
dec
xlat
js
insl
rorl
mov
cmc
xorl
add
stos
lret
fildll
in
mov
movsb
jno
adc
mov
adc
pop
add
and
xor
inc
xchg
nop
jmp
cmpsl
pop
add
aaa
test
and
loope
leave
or
ja
leave
xchg
ljmp
aas
and
and
pushf
sahf
iret
sbb
mov
sub
inc
or
sahf
pop
repnz
popf
push
mov
mov
pop
sbb
and
movsl
push
cmp
dec
gs
cmp
xchg
or
xor
dec
sub
imul
data16
pop
dec
jle
nop
add
or
jo
imul
scas
cs
xchg
scas
push
push
insl
enter
sub
mov
cmc
pop
mov
dec
adc
add
jecxz
mov
inc
pop
mov
pusha
nop
ds
xchg
imul
and
fcmovb
mov
cmpsl
int3
idiv
jge
lea
idivl
cltd
movsl
xchg
sub
jecxz
or
jno
xchg
shrb
push
cmpsl
addr16
jb
mov
xorl
cld
or
push
xchg
pusha
insl
mov
and
adc
pop
orl
pop
xchg
loopne
mov
xchg
and
jns
jp
push
mov
adc
lcall
pop
mov
mov
fidivs
jno
push
dec
mulb
call
insl
stos
fists
pop
daa
mov
push
pop
dec
xchg
xchg
sarl
aam
add
stc
mov
sub
xchg
ss
cmp
xor
rcll
sbb
stos
cmp
adc
lahf
mov
hlt
push
xor
pop
xchg
sub
pop
call
xor
push
sbb
sub
adc
aas
xor
jae
and
push
mov
inc
and
gs
aaa
adc
gs
inc
popf
cs
cwtl
jae
adc
inc
mov
pop
leave
or
add
add
out
movl
push
imul
or
ficoml
stc
stc
test
les
mov
mov
xor
sub
mov
lret
inc
pop
adc
jns
cmp
lret
dec
inc
inc
test
into
jnp
xchg
adcb
pop
push
mov
cmp
lcall
shll
fidivrs
mov
aaa
push
and
ss
cmp
sbb
pop
mov
jb
into
out
push
push
cmpsl
dec
adc
xor
sbb
lahf
jg
inc
arpl
sub
fcoms
inc
outsb
adc
shrb
loopne
xlat
mov
mov
sti
mov
inc
jnp
fisttps
mov
roll
xchg
test
adc
cmpsb
lahf
ja
cmp
pop
push
mov
pop
ja
mov
jecxz
mov
xchg
ficoml
scas
and
add
push
popa
cmpsl
js
pop
mov
test
daa
std
pop
fldl
pusha
test
pop
mov
jo
xchg
movsl
mov
adc
cmp
pop
add
lods
xchg
into
leave
mov
mov
cmp
pop
dec
lds
dec
in
hlt
mov
xor
mov
repz
dec
jp
aas
ljmp
jmp
mov
shlb
xchg
orb
imul
jno
daa
mov
insb
inc
scas
gs
enter
inc
iret
mov
mov
aam
stos
xchg
push
stc
insl
cmp
cmpsb
fwait
call
clc
ds
inc
dec
add
or
jnp
xor
mov
leave
pop
or
fabs
out
dec
mov
jg
mov
jno
inc
add
sub
inc
push
cmp
lods
aad
dec
add
push
cmp
fimuls
sub
lods
dec
test
jecxz
out
enter
pop
cmpsl
cmp
mov
mov
sbb
mov
mov
xlat
mov
loop
outsb
enter
bound
jmp
outsb
push
leave
dec
mov
mov
sub
cs
pop
xor
mov
sub
pop
je
sub
xchg
jge
adc
scas
sub
xchg
fcoml
sub
mov
aaa
sub
imul
adc
or
adc
mov
mov
sub
jge
out
xchg
imul
nop
ds
xchg
or
xchg
lods
mov
insl
inc
push
incl
push
inc
add
cmovns
adc
fwait
jl
sub
pop
dec
and
xchg
add
lods
hlt
add
cmp
mov
or
insb
test
inc
mov
pop
mov
lods
inc
add
fxch
rol
sub
lcall
and
jge
inc
mov
mov
add
and
fmulp
arpl
jns
icebp
pusha
xor
call
pop
insl
mov
sbb
std
mov
dec
dec
pushf
out
dec
cmp
lds
movsb
sub
in
mov
xor
sbb
lahf
push
mov
cmp
scas
adc
mov
mov
xchg
into
insl
xor
xorb
inc
ret
or
mov
jb
mov
mov
fwait
cwtl
adc
mul
mov
scas
iret
imul
stos
loopne
xchg
clc
rorl
xchg
fs
leave
pop
sub
inc
xchg
lcall
jge
inc
pop
ret
add
lock
push
lods
or
cmc
jnp
subb
pop
mov
jns
decb
stos
mov
addb
mov
scas
push
test
jmp
lahf
and
test
mov
loop
cmp
mov
xor
addr16
push
out
adc
shr
mov
mov
frstor
shlb
adc
call
pop
xchg
ss
xor
sbb
mov
cmp
insl
sub
push
out
or
mov
add
loop
jae
fcoms
gs
sub
jo
cmpsl
and
push
pop
aad
pusha
cmc
jp
insb
out
addl
dec
dec
push
in
cwtl
cvttps2pi
sbb
push
bound
das
in
push
push
dec
cmp
mov
sti
add
sarl
xchg
and
mov
popa
add
fidivrs
xor
and
and
cmp
inc
cli
push
or
test
jl
xor
mov
je
iret
shrl
mov
add
sti
dec
and
out
shll
inc
loope
loopne
addb
sti
inc
mov
aad
cld
jne
push
jl
std
adc
imul
push
lret
movsl
push
adc
lcall
xchg
test
pop
cmc
inc
aam
cmp
movsl
sub
pop
sbb
sbb
in
sbb
mov
data16
daa
mov
ds
call
jge
push
fsubrs
repnz
adc
or
jmp
pusha
xchg
shl
lahf
call
imul
pop
sbb
call
or
ret
popa
inc
bound
cli
inc
dec
cli
push
mov
add
mov
out
fldcw
andb
add
rcrl
inc
dec
scas
ss
pop
iret
xlat
xor
je
jno
mov
xor
jge
pushf
ss
stos
cmp
daa
and
mov
adc
in
add
popf
jp
aam
jg
aad
dec
lcall
or
sarl
lcall
add
lret
xchg
mov
subl
leave
xchg
fildl
add
ret
lcall
repnz
les
fcomps
sub
xlat
repnz
pop
sbb
dec
inc
jns
xchg
mov
fistpll
jp
jp
sub
scas
push
fldl
mov
fbld
jns
hlt
test
mov
jle
pop
inc
push
pop
adc
enter
mov
mov
lods
mov
add
pop
insb
sti
xchg
xor
lock
jnp
movsb
std
push
add
imul
mov
mov
sbb
scas
cmp
ds
cmp
adc
adc
movsb
push
mov
arpl
call
mov
into
out
xchg
jp
or
mov
sarl
clc
das
xorb
fs
cmp
inc
aad
pop
push
inc
cltd
or
jns
sahf
test
dec
repnz
mov
cmp
aas
push
idivb
lea
lcall
dec
hlt
sub
sbb
xlat
mov
ficompl
mov
and
xor
shrl
shlb
movsl
bound
loope
dec
mov
loopne
mov
fldcw
aad
inc
stos
popa
stos
mov
out
mov
sbb
js
mov
test
add
mov
sti
out
lea
jge
inc
stc
int3
xchg
or
pop
sbb
fsub
pusha
sbb
pop
sub
and
pop
test
in
xchg
mov
dec
mov
mov
adc
inc
jl
and
add
lock
cli
ja
push
loopne
adc
sti
xchg
xlat
pop
movsb
in
pop
dec
lahf
lahf
sub
imul
aad
xor
pop
push
mov
sbb
lds
cwtl
sbb
outsb
das
sub
mov
add
sar
mov
mov
push
jmp
adc
fidivrl
les
adc
inc
push
xor
mov
adc
inc
cmp
ljmp
addr16
mov
fsubrs
mov
hlt
test
push
loop
adc
out
mov
mov
cmp
and
das
push
sahf
xor
pop
cmp
pop
clc
mov
mov
icebp
or
mov
andb
mov
loope
dec
movsl
cmp
je
fnsave
andb
mov
ljmp
push
mov
in
rol
push
cmp
push
out
or
adc
loope
lock
push
xchg
and
add
int3
dec
mov
movsl
dec
xchg
cmp
call
lock
cmpsl
aad
xchg
out
adc
cmp
add
aad
pop
shl
in
dec
movsb
icebp
sbb
xor
testb
cld
jae
negl
out
shrl
xchg
lret
push
xchg
jo
nop
xor
mov
fiadds
pop
daa
dec
imull
sbb
mov
mov
sub
inc
mov
sbb
aas
jmp
push
cmc
or
ret
fisubrl
in
cmp
and
mov
mov
cmp
std
je
inc
pop
lret
out
dec
test
cmpsl
bound
std
xlat
cmp
pop
mov
xchg
popf
cwtl
jne
mov
lret
popa
cmp
nop
das
popa
sub
subl
enter
dec
sbb
cmp
pop
add
fiadds
enter
push
lds
arpl
and
sbb
in
xlat
repnz
shrb
jmp
mov
insl
fistl
cld
adc
and
leave
push
pop
daa
fsubp
jmp
sbb
dec
sbb
iret
adc
pop
xchg
negb
adc
jnp
pop
sti
fcoms
mov
mov
xchg
rep
sti
cmp
shll
xchg
jge
push
pop
test
negb
dec
xchg
push
jo
clc
sbb
rolb
lea
pop
dec
fcompl
aaa
or
lea
hlt
jnp
lea
std
rcl
push
movsl
rorb
push
mov
xor
xor
es
test
push
test
jmp
sbb
lds
add
out
insb
mov
cs
adcl
les
rorb
dec
sti
daa
stos
xchg
xor
lahf
jne
pop
into
call
push
and
adc
outsl
cld
sahf
repnz
inc
dec
xchg
mov
push
pusha
jecxz
jne
inc
dec
push
mov
aad
jecxz
cmp
ss
cmp
shr
xchg
insl
das
stos
icebp
jae
xchg
roll
jbe
mov
mov
xor
les
ljmp
pop
xor
pop
in
xadd
pop
roll
fwait
lea
loopne
in
or
jnp
mov
imul
rcrb
loope
data16
fcompl
or
add
xor
cmpsb
stos
mov
pop
scas
xchg
xchg
cmp
imul
shlb
xor
es
sub
xchg
sub
int
lret
mov
pop
xchg
sbb
push
imul
mov
pusha
fbld
mov
stos
xchg
int3
push
je
sub
mov
je
ja
inc
dec
das
fistpll
nop
or
adc
mov
repnz
out
andl
loop
cltd
push
jb
insb
add
xchg
adc
mov
xor
jnp
loop
push
mov
inc
aaa
mov
aas
xchg
mov
fistpll
cmp
xchg
push
inc
pushf
lods
or
fdivl
inc
fidivrl
sbb
sub
and
xchg
and
fwait
inc
pop
daa
cmp
pusha
sub
outsl
pop
movsb
xchg
fiadds
sbb
sti
decl
inc
mov
rclb
inc
add
jl
push
xchg
xlat
cmp
add
xor
sti
mov
adc
and
add
icebp
mov
les
dec
pop
push
mov
dec
fs
ja
mov
out
sub
push
sbb
mov
orl
imul
push
sti
cmp
sarb
js
cld
adc
push
enter
adc
in
xchg
xchg
mov
repz
scas
fbstp
push
jno
sarb
cli
in
out
add
mov
shrl
call
in
add
and
jge
jp
rorl
adc
dec
cwtl
sbb
aad
push
inc
movsl
add
daa
push
rcl
lods
outsl
out
es
xor
mov
sbb
mov
iret
notl
cmp
xor
add
sub
out
push
sub
lods
pop
mov
gs
sbb
sub
inc
cmp
std
sub
adc
loope
pop
pop
sub
add
inc
push
lret
add
out
call
and
pop
pop
fs
jp
push
loopne
fisubrl
mov
mov
int3
inc
fcoml
sbb
pusha
lahf
icebp
jnp
andl
adc
jmp
bound
fdivl
push
dec
cmp
pop
iret
scas
test
mov
lods
icebp
xchg
das
lret
gs
and
addr16
push
fld
xchg
cwtl
xor
andl
mov
dec
inc
sub
add
push
pop
mov
and
and
add
pop
idiv
mov
test
adc
pop
push
cmp
add
outsb
fisubrs
add
and
mov
in
adc
push
test
fidivl
in
xchg
xchg
sub
pop
mov
imul
xchg
sbbl
aas
xor
xchg
insb
push
and
sbb
add
push
aam
jb
pop
imul
mov
in
aam
cwtl
test
outsb
xor
sbb
sbb
xchg
fcomps
out
leave
or
repz
sbb
mov
pop
jo
enter
xchg
enter
orl
jge
mov
jae
fstpl
and
adc
push
arpl
cmpsb
xor
addr16
mov
mov
ret
or
notl
jb
add
scas
add
cmp
sbb
sbb
stc
inc
mov
cltd
adc
inc
sub
mov
and
or
gs
adc
inc
jmp
mov
aas
mov
insb
pop
enter
js
xor
ds
mov
mov
cmp
int3
pushl
callw
jle
test
jecxz
sub
and
pop
lds
sbbb
fnstcw
add
mov
rolb
xor
cmp
lcall
test
cwtl
and
fnsave
push
mov
adc
scas
cmpsb
std
rol
inc
jae
add
insl
jmp
int3
jne
xchg
sub
in
pop
mov
test
and
sbb
in
sbb
addr16
outsb
xlat
xchg
in
lcall
adc
adc
dec
lods
pushf
icebp
int
jno
sbb
sbbl
test
jo
psrlw
sub
popa
jge
pusha
xor
lods
sub
add
xchg
arpl
cltd
xlat
popf
mov
es
or
xrelease
or
test
aaa
dec
or
mov
sbb
jns
sbb
leave
inc
or
xor
fildll
sbb
cltd
into
js
mov
mov
repz
in
test
jge
xchg
mov
sub
xor
movsb
xchg
and
ret
pusha
aaa
xor
mov
gs
push
bound
mov
fdiv
adc
roll
and
sub
sub
dec
add
int3
into
leave
mov
shlb
shll
scas
inc
xchg
std
add
or
and
and
mov
pop
fcmovnb
mov
cmp
xor
pop
iret
into
inc
aaa
jb
pop
cmp
adc
inc
pop
pop
mov
stos
int3
aaa
and
lret
pop
add
ficoml
push
sbb
and
xor
test
sahf
and
aam
aam
push
inc
ficomps
jno
or
sbb
hlt
mov
aad
xchg
and
xor
fs
test
test
xchg
dec
sahf
xchg
jae
std
in
test
movsb
pushf
xchg
imul
sti
cwtl
pop
and
mov
and
dec
jae
inc
loopne
lret
mov
mov
pusha
cmp
jecxz
dec
xchg
aam
notw
fwait
xor
out
xor
lret
mov
scas
xchg
sbb
pop
cmpl
mov
in
mov
ret
dec
enter
mov
fs
mov
pop
dec
xchg
sbb
out
ja
or
js
movsl
pop
outsb
jg
dec
sub
mov
sbb
adc
inc
mov
stos
rcl
int3
ljmp
dec
fs
mov
int
js
or
add
out
ljmp
lret
fsub
or
adc
bound
push
xchg
sahf
inc
sbbl
loope
pop
ret
repz
cmp
inc
jl
pop
aam
sub
inc
sarb
out
pop
add
cmp
cmp
gs
mov
xor
cwtl
into
ds
mov
xchg
inc
stos
cwtl
test
mov
add
mov
lahf
test
cli
mov
cmp
dec
push
subl
jns
sbb
fistpll
fdivrl
pushf
jp
loop
xchg
std
mov
pop
stc
inc
pusha
xchg
scas
decb
xor
xchg
push
add
mov
lods
fdivrp
add
or
int
mov
xor
cwtl
fimuls
cli
sbb
jae
pop
push
dec
or
out
sub
fnstcw
ret
mov
mov
je
cmp
add
mov
shrl
cld
sub
inc
lods
or
add
or
pop
add
stos
add
sahf
inc
fistl
push
test
dec
test
jo
add
sbb
rcrl
adc
test
clc
pop
into
lea
add
cld
cmp
mov
cmp
les
insl
pop
in
inc
mov
cmp
lret
push
xor
out
cmp
iret
xor
jl
aas
xor
pusha
repnz
popa
or
dec
dec
lods
lods
ret
jp
sub
loopne
cwtl
mov
or
fldt
xchg
cmp
in
scas
jno
cmp
and
fildl
push
push
out
std
sbb
mov
enter
add
pushf
jecxz
es
jb
cmp
fldenv
or
clc
or
push
mov
jg
mov
dec
imul
inc
mov
mov
adcb
notb
ficomps
xchg
or
cmpsl
mov
fildll
xchg
or
adc
pusha
sbbb
xor
in
or
cmp
addr16
mov
sbb
add
jo
notb
cwtl
cwtl
xchg
push
cmpsb
lods
pusha
xchg
mov
shll
pop
aas
mov
inc
jl
pop
lahf
mov
xor
mov
pop
dec
hlt
icebp
mov
sbb
inc
mov
jb
test
iret
jecxz
das
daa
lods
mov
repnz
xlat
in
andl
mov
or
in
adc
pop
mov
sub
dec
mov
push
adc
xor
xor
inc
inc
mov
inc
xchg
sub
cmpsb
mov
push
sub
shll
and
inc
xchg
mov
cld
add
cmp
cmp
jb
sub
ss
inc
sub
lret
outsb
xchg
loopne
jbe
lods
popa
xchg
sti
adc
hlt
int3
mov
cmp
stos
les
mov
hlt
jp
and
fstl
mov
lds
jae
mov
xchg
sbb
cmpsb
lahf
jno
inc
pop
mov
cmpsl
dec
add
jg
ret
or
cmpsb
arpl
or
or
lcall
xor
cli
adcb
fsubrl
cmpsl
scas
adc
movsl
cmc
add
cmp
pop
xor
jbe
or
arpl
jecxz
sbb
jb
rorb
lods
nop
loopne
inc
cmp
js
inc
jg
jo
dec
ljmp
call
mov
sbb
repnz
test
in
es
incl
cwtd
pop
fcomp
insl
inc
jmp
fnsetpm(287
jb
sbb
shlb
shlb
mov
sub
sbb
dec
pop
scas
sub
push
mov
repz
popf
add
adc
scas
into
fsubl
das
and
mov
jns
out
sbb
sahf
or
xchg
arpl
int
inc
cmc
mov
xor
mov
or
jg
loope
enter
mov
sbbb
and
dec
lea
stc
mov
inc
int
data16
push
sbb
cwtl
sub
xchg
or
push
mov
lock
in
mov
cltd
stos
jp
or
in
sub
sbb
sub
pop
pop
mov
fs
jnp
outsl
xchg
jecxz
inc
and
or
jo
call
into
add
push
pusha
scas
adc
imul
in
enter
in
ds
xchg
pop
out
adc
ror
mov
push
sub
mov
push
adc
outsl
mov
pop
loop
jecxz
icebp
xor
out
int3
pusha
loope
sub
and
mov
cld
inc
push
sub
jne
and
insl
mov
xchg
int3
cmp
out
test
fdivs
push
cmp
push
pop
je
pop
stos
jae
je
jmp
ja
mov
scas
pop
mov
push
xchg
xchg
sub
pop
arpl
adc
xor
xchg
xchg
sub
push
mov
mov
add
addr16
or
add
jns
aad
add
fcoml
xor
sub
mov
out
out
add
arpl
sub
push
mov
sbb
lock
pop
dec
les
adc
mov
stos
cs
nop
clc
imull
gs
jl
in
aas
push
inc
mov
fsubl
mov
mov
push
arpl
push
into
mov
dec
jecxz
cmc
or
mov
pop
orb
ljmp
lods
pop
daa
and
movsb
add
mov
adc
xchg
and
mov
dec
cmpsl
sbb
fildll
mov
sub
out
call
cltd
ds
jne
shlb
mov
inc
inc
inc
push
xchg
test
dec
subl
stos
jns
test
addr16
xlat
test
stos
mov
cmp
or
stos
mov
mov
pop
cmpb
mov
insb
sbb
das
xor
roll
inc
push
jbe
dec
bound
in
push
inc
push
pop
jmp
ljmp
dec
dec
and
les
mov
fwait
dec
pop
jle
sahf
cmpl
xchg
test
or
push
xor
mov
inc
fidivrl
sbb
fwait
sahf
test
mov
adc
push
push
dec
jb
ljmp
sbb
mov
std
cmp
mov
xor
scas
cmp
cmp
or
ljmp
pop
repz
dec
dec
mov
es
xchg
stos
shlb
lds
sub
or
into
or
mov
cmpsl
fistps
inc
aaa
or
lock
cmc
ret
adc
lcall
or
add
cld
or
test
clc
mov
dec
dec
aad
adc
xlat
add
mov
sbb
shl
das
mov
or
mov
sbb
arpl
xor
add
js
test
rclb
pushl
mov
mov
add
bnd
push
movsb
hlt
ja
jne
adc
push
cmp
jge
fistps
cwtl
push
popf
push
sbb
es
stc
std
xor
sub
dec
adc
jmp
aaa
mov
xchg
or
and
jo
cli
stc
aam
pop
testl
xchg
push
jb
pop
outsb
arpl
inc
sub
sbb
jl
xlat
icebp
pop
leave
shlb
or
dec
sbb
pop
std
int
std
inc
fimull
mov
imul
sbb
shll
push
xchg
insl
loop,pn
mov
pop
xchg
insb
out
enter
ret
call
cs
adc
mov
xor
pusha
out
jge
inc
out
jnp
pop
das
idivb
jg
xor
call
and
loopne
movsl
inc
mov
inc
out
push
mov
lods
inc
jmp
xor
dec
mov
pop
inc
mov
dec
inc
and
jg
sbb
fwait
sarb
stos
divb
pop
mov
sbb
add
out
cwtl
or
out
xor
int3
inc
ja
add
pop
cmp
sbb
mov
push
xchg
add
mov
mov
or
insl
pop
data16
or
popf
hlt
xchg
mov
push
insb
loopne
ljmp
ret
sbb
mov
dec
movsb
xor
out
aam
xchg
dec
in
enter
stc
test
xor
pop
movsb
lods
cmpsb
or
lret
or
adc
movsl
iret
or
lahf
mov
nop
jne
sbb
dec
dec
mov
mov
and
mov
and
add
mov
jns
clc
mov
sti
mov
cmpsb
fcoml
ja
int3
aam
push
rorb
xor
jnp
xor
cltd
hlt
mov
mov
jo
lods
outsl
addr16
push
imul
setle
push
popf
mov
and
dec
mov
or
test
out
dec
rcll
outsb
je
xchg
mov
cmpb
cmpsl
sub
mov
sub
mov
jne
push
push
adc
dec
or
push
in
out
xchg
leave
aad
aaa
ss
jle
sbb
test
andl
push
loope
add
xor
aaa
in
ret
sarl
sub
and
inc
pop
clc
push
lret
pop
jbe
pop
daa
xor
stos
cmpl
in
xor
inc
xchg
add
xor
fnsave
rcr
fcoms
jmp
test
movsb
in
sar
add
mov
xchg
insl
stc
stc
sub
push
xchg
out
mov
in
push
adc
inc
cmp
aam
negl
pop
sarl
loope
repnz
scas
mov
jg
jb
shll
fmuls
mov
fcmovnbe
ja
and
imul
dec
int3
xor
inc
push
jmp
popa
ret
or
leave
inc
arpl
xchg
int3
jno
cmp
sub
pusha
inc
scas
fstpt
fists
movsl
ja
xlat
mov
sbb
jmp
push
inc
push
push
lock
and
inc
dec
mov
dec
xchg
roll
inc
aas
cli
pop
sub
nop
add
lods
mov
and
xor
out
icebp
rolb
jl
ds
int3
orl
cli
mov
or
mov
sub
in
arpl
aad
andb
add
xcrypt-cbc
cmpsl
xchg
in
jnp,pt
lods
dec
aad
ret
jo
out
mov
sbb
jle
mov
add
out
out
call
out
scas
lea
stc
aaa
fcmovnb
add
leave
fmull
push
xchg
sub
push
mull
lahf
subl
push
jg
dec
loopne
fisttps
fs
lds
cwtl
test
bnd
cmp
js
cmp
arpl
dec
fstps
ljmp
daa
testb
xor
jl
push
arpl
xor
sub
mov
xchg
stos
push
test
inc
jmp
mov
mov
add
clc
mov
aas
jmp
sbb
mov
pop
fs
imul
in
adc
xchg
and
mov
jmp
cmp
xorl
fmuls
cmpsl
add
dec
shll
pop
mov
push
int3
ret
push
test
inc
out
xchg
movsl
mov
das
push
mov
lcall
adc
adc
stos
aad
xchg
pop
mov
inc
xor
jno
add
mov
xchg
sar
mov
outsl
scas
mov
pop
jl
lds
test
pop
int3
push
mov
rorl
cmpsl
mov
push
sbb
inc
shlb
jne
jbe
mov
adc
or
sbb
rclb
ret
push
addr16
fdivs
fcmovu
in
jl
lods
data16
mov
cmp
mov
adc
movsl
loopne
mov
add
ret
jbe
fisttps
push
mov
lods
in
inc
enter
mov
xor
scas
sub
ret
imul
les
clc
jp
stc
lea
mov
xchg
cmp
cwtl
jae
or
pop
cmp
inc
xor
inc
pop
pop
fisttpl
jmp
sti
roll
les
in
inc
mov
push
sub
orb
in
rorb
lret
inc
pop
pop
pop
pop
in
xor
push
pushl
test
inc
fistpl
stos
inc
xchg
jnp
mov
aaa
cmp
inc
or
mov
mov
jae
lahf
mov
jmp
lock
ja
pop
mov
push
ret
sahf
xchg
jbe
sbb
scas
adc
hlt
jb
add
pop
aad
cmc
adc
aas
jnp
jg
dec
adc
jge
les
push
fstps
jl
fsubrp
adc
pushf
imul
aad
add
add
out
jae
mov
mov
jecxz
clc
je
aaa
rcr
or
xor
dec
scas
popf
xchg
out
push
pop
lcall
xor
sub
cmc
les
dec
jne
pop
into
icebp
mov
fidivs
adc
pop
daa
inc
dec
xchg
in
sub
stos
add
aad
mov
inc
adc
add
lods
popf
dec
sbb
aam
pop
xchg
xor
std
adc
cld
inc
scas
and
out
jno
sub
and
fs
fwait
pop
mov
int
xchg
xchg
fstps
push
xor
scas
sbb
rcl
mov
mov
cmc
cmc
mov
into
mov
test
mov
mov
negl
mov
mov
cmp
loopne
xor
cmp
ret
pop
xchg
ja
jo
enter
les
std
cmp
mov
inc
jmp
pop
mov
movsb
clc
mov
ficoml
cmp
push
into
in
adc
nop
jbe
orl
rorb
add
push
cltd
stc
stos
sahf
cli
ret
or
pushf
sbb
clc
stos
das
clc
sbb
inc
xchg
mov
fiadds
cmp
mov
xor
arpl
push
es
mov
xchg
xchg
push
aas
jl
push
lret
push
jp
sahf
cmpsl
xorb
inc
push
out
cld
bound
or
cld
dec
iret
dec
xor
out
pushf
cwtl
push
ret
inc
xor
loopew
sub
mov
and
push
push
in
inc
add
add
push
adc
stos
or
fmull
add
popf
fstl
sbb
lods
rol
add
mov
cmpsb
lods
cmpl
fsts
pop
jmp
lret
jb
mov
in
adc
in
sub
dec
adc
pop
mov
push
adc
pop
xor
call
sub
in
std
int3
inc
lcall
pushf
pop
movsb
mov
fwait
push
add
adc
pop
ret
sbb
out
push
insl
jns
imul
les
insb
dec
aam
ja
xchg
xchg
mov
mov
add
lret
lock
push
stc
daa
mov
push
idiv
test
xchg
leave
mov
shrl
ja
xchg
dec
js
mulb
outsl
clc
inc
cmp
sub
adc
in
pop
rcrl
jmp
xchg
lea
idiv
push
add
jb
movsb
mov
sarl
cmpsl
lds
push
xchg
xor
popa
out
ss
cld
sbb
sbb
in
xor
dec
out
and
addr16
sub
push
mov
and
or
and
incl
les
pusha
daa
cwtl
add
lcall
sbb
repz
testl
xchg
cmpsb
sbb
adc
inc
lret
cwtl
or
int
in
cmp
adc
cmp
insl
out
and
xchg
adc
lret
test
sar
ja
mov
stos
push
xchg
xchg
cmp
outsl
subb
ljmp
pop
cmp
xchg
imul
sti
leave
adc
fst
xor
push
hlt
adc
jnp
cltd
xor
rcll
loope
jns
push
fisubrl
lahf
mov
insl
push
lahf
mov
cmp
or
loopne
push
fisttpl
icebp
xchg
cltd
sbb
aad
inc
xor
xorl
inc
jns
ds
arpl
sbb
insb
mov
mov
mov
fimuls
adc
xchg
adc
jmp
xchg
movsb
add
and
xchg
jp
dec
push
cs
lahf
mov
fwait
mov
movsl
dec
testl
test
fs
sarl
pop
push
cmp
add
mov
call
jbe
xor
push
shlb
add
xor
ret
push
push
js
cmp
mov
mov
dec
fs
cmpsl
push
pop
xchg
jge
dec
cmp
popa
daa
inc
inc
cwtl
test
addr16
lods
push
pop
jo
stos
and
ss
stos
xchg
out
cmc
rclb
movsl
lods
jge
mov
in
mov
xchg
fisubrl
mov
mov
xchg
mov
es
sahf
addr16
jno
imull
mov
jbe
inc
dec
scas
nop
inc
scas
scas
xor
xor
cmp
add
clc
push
cmc
mov
scas
mov
int3
and
test
cmp
loopne
cli
arpl
sar
clc
pop
test
ret
std
adc
lock
int3
mov
scas
sbb
xchg
cmp
jg
dec
push
dec
pop
xchg
xor
repz
mov
aam
mov
xchg
das
pushf
inc
adcl
fcmovnb
push
jmp
imul
push
lret
push
repnz
or
addr16
push
mov
and
mov
mov
adc
xor
mov
mov
sbb
jb
lahf
pop
jecxz
loope
mov
cmp
sbb
jbe
clc
push
fstl
mov
aaa
ret
lea
lods
mov
add
mov
mov
stc
sbb
les
js
lds
jg
inc
les
call
ljmp
pop
lock
sub
mov
push
lret
mov
jp
xchg
mov
jecxz
xchg
mov
sbb
adc
cmp
sub
jo
or
pop
notl
shrl
repnz
pop
and
pushf
dec
fidivs
int3
xchg
outsb
loope
push
shrb
pop
and
shl
inc
sahf
fidivrl
inc
sbb
ret
fdivrs
jle
mov
fiaddl
ljmp
sahf
cmpsb
jne
mov
mov
mov
lods
sbb
add
and
xchg
test
dec
add
lock
jge
xor
adc
fwait
ss
pop
jae
pop
adcl
testb
pop
pop
sbb
xchg
fistl
adc
cmp
shlb
mov
mov
sub
pop
push
push
jmp
outsb
repz
aam
add
rcr
cmp
das
dec
add
mov
scas
ja
pop
cld
sbb
adc
mov
mov
sbb
scas
push
push
mov
decb
xchg
movsl
dec
imul
dec
inc
mov
in
pushf
pop
mov
dec
in
je
adc
xchg
js
les
pop
les
aaa
add
into
aam
jbe
sub
outsl
addr16
shrb
xlat
fxch
shlb
inc
xor
mov
mov
cmp
jnp
mov
jmp
or
icebp
mov
pinsrw
stos
shrb
movsl
jge
sti
or
popa
xor
mov
push
mov
and
mov
mov
mov
adc
in
jl
or
mov
xor
lahf
movsl
sub
sub
repz
adc
scas
mov
test
push
cld
push
sbb
leave
fnstsw
sbb
mov
mov
sub
mov
ds
jae
add
xchg
lahf
xchg
inc
arpl
test
mov
xor
sub
cld
shrb
insl
inc
bound
sbb
inc
call
push
outsl
jbe
push
mov
or
fwait
mov
ja
mov
pusha
maxps
mov
mov
jle
jge
mov
and
add
mov
pop
pushf
xchg
push
movsl
or
push
jl
adc
mov
insb
movaps
push
or
inc
shll
pop
xor
sub
or
ficoms
or
jecxz
movsl
xchg
or
fs
inc
shlb
dec
xor
mov
movsb
in
mov
mov
lahf
bound
in
das
inc
mov
gs
or
pop
dec
jb
bound
xor
imul
lods
push
pop
adcl
xor
insb
stos
pop
in
xor
jb
repnz
test
push
mov
bound
push
mov
pop
and
adc
shlb
or
out
lahf
cli
sti
repnz
dec
xlat
es
push
dec
test
test
and
mov
add
push
jp
sub
cmpl
sbb
and
gs
jmp
inc
adc
out
mov
loop
inc
out
mov
sub
addb
mov
pop
jle
loopne
xchg
sahf
pushf
cmp
dec
push
nop
and
mov
adc
push
stc
rcrb
int
insb
add
mov
xor
xorb
jno
and
lds
imul
insl
ret
lds
dec
dec
cmp
sbb
or
stc
loopne
cmp
xorl
std
dec
dec
pop
jnp
leave
inc
mov
mov
scas
fstp
shlb
mov
xor
cmpsl
icebp
inc
gs
mov
loop
std
cmp
and
jp
stos
loop
shll
fisubs
loopne
ja
aas
push
xchg
iret
fidivrl
aad
mov
clc
scas
xchg
fcoms
loop
add
pop
pop
mov
pop
stos
adcl
ss
pop
imul
xchg
sti
test
in
pop
pop
pop
not
stos
mov
pop
repnz
mov
test
shlb
cmc
push
xor
in
xor
mov
into
outsl
in
mov
test
cmp
into
adc
gs
adc
inc
fidivs
jge
jp
sbb
pop
sub
loop
adc
je
lock
scas
jno
das
push
pop
pop
mov
push
std
mov
mov
dec
rclb
hlt
mov
inc
adc
jno
pop
pop
or
mov
inc
leave
arpl
cmovo
pop
cmovs
xchg
movsl
mov
pop
cs
inc
cmpsb
jno
dec
jecxz
mov
add
inc
sbb
fistpll
sub
in
adc
mov
ja
mov
in
loope
or
pop
shr
fdivl
arpl
adc
cmp
mov
hlt
repnz
cmpsb
orb
imul
sti
ficomps
push
mov
sbb
andl
sbb
jmp
jmp
jns
pop
clc
jae
mov
outsb
lcall
push
pop
dec
pop
mov
push
fptan
and
cmp
aas
push
dec
loopne
ss
popa
add
cmc
pop
xor
test
rcrb
loop
adc
pop
lea
xchg
and
or
test
loopne
imul
xchg
dec
sbb
mov
sub
in
sbb
xchg
arpl
sbb
nop
xchg
and
dec
cmp
out
aad
in
xor
add
mov
cmp
loopne
data16
stos
lea
mov
jns
icebp
push
shrl
lods
popf
lea
sahf
loope
aaa
enter
sbbb
push
mov
and
fadds
test
push
cmpsb
in
lock
loopne
enter
imul
lds
int3
sbbb
cmpsb
dec
data16
stos
add
addr16
push
test
jle
cmc
sub
cli
cmpsb
es
iret
cmp
imul
xor
mov
aas
and
xchg
shll
mov
aam
cmp
xchg
lahf
rorl
divl
ljmp
shlb
lcall
addr16
push
jle
add
xchg
lock
pop
and
clc
dec
mov
xchg
mov
data16
lds
dec
mov
fwait
pop
mov
jne
and
adc
aaa
push
lcall
and
mov
test
gs
dec
xchg
and
rclb
scas
insl
sbb
add
mov
out
outsb
cmp
push
pop
push
pop
push
mov
and
aad
or
outsl
int3
adc
or
cmc
fisttpll
push
aas
out
sbb
sbb
add
inc
jg
clc
stc
popa
sub
cs
sub
dec
xor
aam
lcall
mov
cld
btr
fstpt
faddl
in
sbb
lahf
outsl
rcr
loope
dec
sti
dec
rclb
fsts
and
add
sahf
call
add
or
and
mov
ds
jl
popf
clc
cmp
stc
pop
jl
dec
cmp
ss
fidivs
adc
add
adc
mov
add
shl
xchg
xor
mov
push
mov
into
iret
mov
sahf
aam
test
jno
push
aad
or
aam
je
rcrl
ret
jecxz
sahf
push
xor
gs
push
mov
ds
add
mov
mov
popa
push
xor
shlb
dec
fldl
cmpsl
lea
sbb
mov
xor
loop
and
and
cmp
loopne
data16
dec
cs
or
ss
add
xchg
sti
out
stos
or
mov
mov
xor
inc
xlat
shrd
dec
jecxz
dec
cs
inc
adc
lock
test
adc
jmp
sahf
and
jnp
dec
mov
movsl
cmp
dec
cmp
out
repnz
shl
sub
shll
sub
add
jns
dec
mov
and
xchg
cmpsb
popa
push
push
xchg
call
leave
pop
addr16
dec
mov
jmp
push
cbtw
jmp
jle
inc
mov
mov
lods
dec
jne
mov
lahf
add
sub
mov
mov
cmpsl
je
push
ss
xchg
pop
adc
cmp
mov
addr16
sti
jge
sbb
or
out
aad
imul
adc
sbbb
xlat
fdivl
adc
jns
sub
jmp
jns
dec
adc
imul
sbb
insl
dec
dec
je
pop
mov
cmove
cmp
cmp
out
dec
mov
es
fadd
jp
pop
pop
rorl
inc
inc
dec
out
pushf
add
cmpsl
das
insl
lcall
dec
fbstp
xchg
jmp
icebp
xchg
dec
jge
cld
ljmp
and
in
adc
sahf
shlb
std
mov
pop
sub
loope
bound
cmpsb
je
push
testl
xlat
jbe
rorl
movsl
scas
inc
and
lcall
mov
in
clc
dec
inc
mov
shrd
push
jne
pop
loop
push
test
ja
in
jbe
arpl
imul
sarb
mov
adc
jno
sub
push
inc
jmp
aaa
adc
push
add
aas
mov
push
mov
inc
enter
sti
jb
call
jecxz
sub
les
xchg
ljmp
rclb
movb
push
shrl
imul
push
call
fnstenv
mov
add
cmpsb
and
adc
push
cs
mov
mov
ret
inc
jp
in
and
ret
enter
cmp
fisttpll
mov
pop
lcall
xor
inc
or
into
test
ss
push
mov
js
mov
lods
push
mov
push
outsb
pop
add
xchg
dec
mov
xor
push
mov
mov
sbb
lcall
xor
dec
mov
pusha
push
jge
ficomps
dec
sbb
ret
lcall
jg
mov
jae
jg
mov
fisubrs
cmp
ds
push
ds
sti
push
inc
dec
sbb
loope
mov
push
mov
sti
push
mov
add
mov
in
xchg
fdivp
mov
iret
and
mov
xor
mov
insb
and
clc
xchg
pusha
and
adc
popa
fcompl
xchg
push
pop
subl
dec
sub
inc
rolb
ficompl
ret
cmc
mov
cmc
outsl
in
inc
lcall
fistpl
dec
add
xor
cld
adc
pusha
imul
push
shlb
and
rcrl
adc
lds
arpl
out
cli
test
sbb
sbb
adc
dec
cmp
xchg
subl
test
pop
sub
lods
fldt
mov
cmp
and
std
or
decl
mov
dec
mov
inc
int
push
pop
je
inc
aas
xor
stos
outsl
fldt
or
pop
cmp
scas
push
mov
inc
cs
pop
jecxz
cmp
xchg
jns
lods
mov
dec
mov
inc
xchg
xor
popa
push
xchg
scas
std
sub
inc
mov
push
or
fistpll
inc
xchg
data16
cmp
test
addr16
jo
loopne
cmp
rorb
jb
mov
out
sub
cltd
pusha
in
pop
hlt
add
popa
sti
xchg
or
je
or
inc
inc
jl
mov
pop
jnp
jle
jbe
jg
in
imul
cmp
mov
mov
jbe
pop
call
mov
lea
inc
test
pop
add
cli
lods
add
xchg
call
lds
lock
imul
rdpmc
cmpsb
cmp
test
xlat
mov
shrb
jmp
push
xchg
jle
stos
adc
in
insb
jnp
sbb
push
fldl
movsb
inc
xchg
xchg
inc
imul
ja
mov
jmp
inc
int3
cmp
in
pusha
aaa
ja
add
jge
les
mov
mov
inc
jnp
ljmp
shll
cmp
push
lret
sbb
mov
cmpsl
dec
testl
dec
jo
dec
xlat
cmp
inc
jae
stos
jbe
mov
push
add
pop
pop
out
mov
test
add
pop
jae
movsb
mov
xor
add
push
cli
mov
xorl
xor
mov
ret
out
lret
jbe
mov
inc
sbb
cli
jb
inc
scas
out
aas
cmc
pop
pop
mov
lea
jae
aam
fimull
jl
pop
nop
je
leave
hlt
ja
std
dec
jae
jp
inc
sbb
push
jmp
cmp
jl
pusha
jmp
in
inc
push
std
mov
ficoms
xor
and
sbb
jge
xor
or
repz
pop
int
xor
or
call
inc
xor
andl
sbb
lods
outsl
clc
push
jb
push
sahf
aam
push
pop
fs
inc
arpl
rorl
es
jns
cmp
movaps
xor
lds
data16
cltd
cmp
adc
adc
data16
lock
stos
in
and
ffree
and
ljmp
shl
test
add
mov
jp
mov
cmp
mov
fcmovu
test
mov
xorl
jl
arpl
int
mov
push
add
jg
pop
cmp
cmp
pop
aas
push
rclb
in
xchg
mov
or
or
dec
sbb
es
mov
and
sub
sub
fmull
jl
mov
and
inc
out
add
push
arpl
jge
and
loop
and
sub
pop
mov
jns
dec
jp
cwtl
addr16
sbb
orb
aaa
xor
mov
inc
sahf
loope
dec
popf
scas
jns
cmp
push
cmc
mov
push
mov
mov
repnz
mov
fbstp
sahf
sub
enter
add
andb
fnstsw
jno
lret
loope
pop
fiadds
pushf
aas
movsb
stos
cmovno
and
shll
xchg
mov
pop
inc
daa
dec
cld
mov
push
loopne
sti
popa
jo
inc
cmp
mov
out
add
xlat
pop
inc
inc
insb
cmpsb
pop
clc
gs
sbb
cli
nop
mov
js
test
sbb
js
jl
sub
arpl
push
int3
mov
pop
or
lods
mov
and
add
stos
es
arpl
cld
cmp
push
stos
jl
dec
lods
push
in
shrl
dec
ljmp
jle
and
stos
aaa
jmp
jge
mov
xchg
mov
pop
push
imul
lea
jnp
test
aaa
dec
inc
dec
jmp
xchg
test
sub
and
push
pop
xchg
imul
or
push
jo
adc
push
add
adc
push
push
stos
xlat
mov
insb
aam
or
out
sub
pop
pop
sub
test
pop
mov
lret
and
sarl
sbb
jb
fcomps
cld
jo
popa
das
push
insb
inc
sbb
or
or
adc
out
test
and
loopne
sub
int
xor
inc
mov
jnp
les
stos
in
insl
repnz
or
cmp
dec
nop
push
rorl
inc
sbb
and
fsubl
cs
test
inc
ljmp
es
mov
sbb
xor
dec
mov
int
nop
pushf
ficomps
rcrb
mov
pop
iret
out
icebp
mov
test
imul
fnstenv
loopne
and
in
out
push
push
mov
sbb
adcl
mov
add
jae
iret
cmp
and
lods
push
adc
loopne
jmp
or
aas
mov
mov
leave
jmp
pop
mov
inc
mov
adc
test
fcoml
jb
dec
repz
mov
xchg
add
insb
xchg
fimull
je
fisttpll
push
inc
dec
pop
lock
add
push
fdivrp
jnp
leave
xchg
push
adc
jbe
xor
fbstp
pop
loopne
test
movsl
sbb
cmp
test
fldenv
outsb
add
pop
mov
inc
lock
test
cltd
xor
mov
xchg
mov
stc
jge
popf
xchg
pop
data16
mov
mov
fwait
jne
sub
clc
popf
lock
add
dec
and
hlt
das
xlat
pop
jle
lds
out
rolb
mov
inc
push
cwtl
inc
mov
cmp
dec
xchg
mov
ss
mov
inc
mov
sub
mov
outsb
nop
and
push
scas
out
inc
popa
popf
add
fsubrl
jl
push
sbb
sbb
ss
inc
fsubl
cli
std
repnz
roll
cwtl
xor
sbb
mov
xor
insl
pop
data16
je
xchg
stc
sarl
mov
inc
repnz
pushf
cltd
sahf
mov
jmp
test
stos
inc
pop
sub
xchg
popa
or
jg
outsb
and
mov
cltd
pop
pop
inc
and
lock
adc
ljmp
dec
int
imul
mov
push
iret
lahf
add
clc
xorl
pop
scas
or
add
lcall
mov
push
adc
into
xor
sbb
jae
aad
in
lret
jmp
cmpsb
add
fwait
jnp
push
stos
ret
sub
or
mov
adc
aad
pop
adc
insb
pop
ljmp
data16
dec
push
jbe
dec
test
out
xlat
mov
mov
xchg
lret
fisubrs
sti
cltd
push
call
xchg
mov
int
stos
sbb
sub
add
pop
scas
das
and
test
mov
mov
xor
jmp
and
jo
or
xchg
mov
pop
out
and
mov
mov
push
cmpsb
negl
inc
push
daa
jne
mov
ret
mov
mov
jmp
ljmp
fsubrl
fiaddl
pop
inc
pop
jbe
out
leave
clc
aam
jl
enter
cmp
rcll
in
mov
outsb
cmp
es
xor
ss
push
sub
js
in
inc
pop
mov
fwait
leave
fstpl
jnp
pop
rcl
jge
ja
cmp
mov
cs
int3
stos
les
sbb
ljmp
jmp
sbb
dec
ljmp
add
enter
sbb
pushf
lcall
jae
mov
or
sub
nop
add
sahf
mov
aaa
adc
mov
sbb
sbb
pop
mov
mov
mov
adc
push
das
sbb
xchg
les
lock
xchg
sub
pop
mov
leave
jne
mov
test
inc
in
jp
aam
pushf
test
mov
xor
pushf
sub
xchg
push
fcmovb
sub
aam
scas
das
add
adc
aas
popa
rcrb
dec
jmp
xorb
mov
cmp
mov
push
mov
in
cmp
imul
cmp
cmp
push
or
mov
mov
mov
or
xchg
mov
aas
es
or
or
pop
test
aaa
mov
jne
jne
mov
scas
movsb
icebp
test
sub
pop
sub
pop
nop
or
imul
jnp
scas
popf
push
and
popf
and
cmp
cwtl
jle
xlat
arpl
cmpb
lret
rorb
pop
fsubrs
cmp
scas
sbb
sbb
xor
test
popf
push
xchg
xor
or
sub
inc
xlat
ljmp
out
fildll
out
inc
adc
fistpll
add
mov
mov
and
test
inc
sbb
and
shlb
cmc
jae
pop
inc
push
je
js
mov
jg
mov
movsb
jnp
push
mov
mov
lods
scas
jb
inc
insb
mov
popa
addb
sbb
and
or
pop
jp
insl
pop
mov
rcr
aad
dec
mov
and
pushf
or
xchg
or
js
shll
jno
repnz
shll
pop
aad
sub
int
loop
jle
adc
mov
dec
pop
mov
pop
imul
mov
mov
repnz
cmpsl
jl
and
decl
ret
inc
mov
int
cmpsb
test
mov
sub
test
sbb
sub
cmc
nop
dec
test
ds
lret
pop
ja
cmpsb
gs
inc
out
mov
shll
dec
cmpsl
pushf
cld
cltd
jg
nop
adc
add
ss
cltd
sub
int
pop
loop
lcall
add
sub
add
pusha
cmp
out
in
xchg
scas
bound
andl
cmp
outsb
inc
sti
mov
test
repnz
push
outsb
aas
inc
cs
jbe
in
arpl
mov
inc
insl
xchg
lea
notb
sub
sub
ss
mov
cltd
out
fidivs
jno
cltd
outsl
les
mov
cmp
inc
stos
mov
sbb
sahf
test
hlt
popl
in
adc
imul
rol
mov
lds
sbb
add
das
mov
fistl
negl
and
ljmp
mov
popf
mov
adc
pusha
xor
and
arpl
jb
stos
add
dec
sub
mov
movsl
repz
mov
daa
in
dec
and
fsubrs
xlat
sub
into
std
cli
mov
lahf
outsb
call
movsb
ljmp
mov
and
ret
mov
xorb
xlat
adc
pop
sub
and
push
xchg
nop
pushf
loope
cmp
and
andb
fistps
insl
pop
negl
xor
push
cld
or
mov
mov
inc
xchg
faddl
mulb
add
setl
cmp
cmp
mov
and
cmp
jecxz
repnz
adc
cmp
leave
xchg
push
add
adc
sahf
test
repnz
imul
dec
adc
les
rolb
add
mov
sahf
jg
xchg
cmp
repz
xor
cmp
mov
push
idiv
pop
pop
ficoml
xor
test
std
mov
ss
gs
push
or
in
xorl
cmp
hlt
subb
mov
insl
std
lds
addr16
pushf
mov
mov
fdivrs
jge
sub
dec
push
sub
jae
push
icebp
dec
orl
sahf
call
mov
fsubs
les
sahf
imul
dec
push
fimuls
xor
mov
mov
js
aad
push
fbstp
int3
mov
mov
pop
inc
sbb
xchg
mov
sarl
or
rcrb
addl
dec
test
jle
pop
out
cltd
test
sbb
jnp
loopne
pop
mov
lods
incl
mov
inc
scas
sahf
push
adc
add
jnp
xor
imul
in
test
fidivs
jae
in
insl
xor
in
aam
je
push
lods
stos
and
popf
hlt
pop
add
inc
into
xlat
lods
lcall
fldt
bound
xchg
test
arpl
mov
mov
lret
icebp
push
mov
rcrl
gs
jge
addr16
std
jle
test
push
outsb
push
sahf
and
adc
sarl
popa
adc
outsb
nop
or
jle
xchg
mov
jl
jp
out
pop
in
out
ret
stos
pop
dec
and
push
fisubrl
jmp
mov
dec
mov
sbb
inc
mov
pop
mov
aaa
dec
sbb
out
incl
or
push
inc
sbb
repnz
adc
jo
pop
mov
add
pusha
xor
jg
movsb
pop
jns
adc
push
mov
and
adcl
mov
inc
clc
ret
pop
mov
jno
jns
rcr
sarl
enter
gs
mov
daa
gs
mov
cld
jp
lret
call
push
mov
incb
and
inc
int
push
jns
xor
int3
and
cmpb
lods
sbb
ficoms
sbb
lcall
shl
push
out
popa
sub
cmp
adc
dec
ljmp
arpl
dec
pop
sub
notl
enter
enter
push
jp
arpl
jb
das
ds
test
clc
enter
sub
add
dec
lods
out
sahf
idivl
dec
mov
jne
mov
jnp
xchg
jb
mov
dec
xchg
je
andb
add
cld
cwtl
ja
xchg
fldcw
enter
shlb
xchg
mov
out
dec
fldenv
ss
sub
cmp
inc
ja
std
jp
push
xor
jecxz
stos
ljmp
movsb
popf
pop
jne
mov
xor
arpl
jp
mov
lcall
dec
arpl
je
push
xchg
or
xlat
xlat
pop
pop
repnz
and
sub
je
jmp
hlt
sub
xor
fcomp
cmp
pushl
adc
mov
jnp
xor
or
mov
nop
rcl
mov
xor
clc
jnp
leave
or
popa
pop
sahf
mov
xor
push
push
push
pop
push
inc
in
xchg
mov
jl
std
mov
or
inc
xchg
adc
hlt
inc
movsb
pop
fucomi
ret
push
mov
mov
add
les
or
cmp
jb
cmp
js
in
mov
loope
outsl
out
xchg
sarb
ljmp
sahf
loop
lods
adc
gs
push
pop
push
repnz
mov
sbb
insb
mov
jl
add
mov
repz
ss
fisubrs
sbb
xor
fdivrp
mov
dec
fmuls
out
mov
test
xor
lock
movsb
mov
fsubl
mov
popf
push
call
jns
aaa
cwtl
dec
xor
outsl
push
pop
fidivl
xchg
inc
mov
jae
out
push
mov
mov
cmp
fisubrl
sub
mov
jbe
clc
jle
adc
xchg
dec
mov
fcmovu
cmp
xchg
iret
out
mov
nop
cltd
xor
mov
inc
or
dec
imul
sub
bound
inc
sbb
mov
add
or
adc
insl
add
js
pop
fs
or
dec
insb
cmc
test
push
jo
das
lcall
xor
sahf
aad
xchg
outsl
mov
mov
adc
xor
jno
inc
mov
ret
mov
push
cmp
enter
push
sbb
out
mov
push
aam
push
push
pop
in
adc
mov
mov
push
xchg
call
push
push
and
sahf
and
leave
or
dec
or
adc
roll
iret
mov
std
cltd
int3
inc
mov
in
mov
push
jle
push
nop
xchg
loop
test
outsb
lea
enter
mov
sub
outsb
ja
jp
lea
sub
xchg
fs
mov
inc
rorl
or
jns
push
loopne
or
enter
jb
or
enter
stc
ret
mov
repnz
mov
or
fucomp
mov
or
cmp
xchg
out
push
sub
ds
idivl
sti
push
xor
jae
movsb
loope
xor
push
cmp
pusha
xchg
xchg
lods
pusha
add
fnstenv
adc
in
call
aam
shl
mov
push
push
sub
sbb
fs
out
jmp
pop
jmp
repz
pop
es
lcall
push
leave
ja
pop
or
daa
jmp
imul
popa
mov
sub
subb
inc
cmp
nop
mov
cs
mov
ja
test
sub
out
adc
and
push
xchg
ja
pop
push
jnp
pop
lahf
popf
rcl
iret
xchg
and
and
pop
fwait
push
into
cmpb
loopne
inc
dec
sub
mov
loope
insb
idivl
and
add
imul
pop
popf
pop
push
add
push
lods
pop
cmc
add
mov
jge
cmpsl
cli
adcl
stos
pop
xchg
aaa
cmp
cmpsl
push
adc
xlat
dec
lods
pop
mov
cmp
sub
and
xlat
imulb
imul
xchg
cmpb
fs
leave
adc
sub
insl
pop
inc
int3
test
sub
cmp
mov
mov
and
cltd
pop
and
fisttpll
pop
fs
movsl
pop
jp
iret
stc
bound
test
leave
push
negl
cwtl
jl
mov
ret
test
test
lret
in
arpl
mov
mov
sbb
jle
cmp
mov
and
cmp
mov
data16
rol
mov
xchg
loopne
ja
cmpsl
inc
movsb
inc
test
imul
adc
xchg
jge
rcrb
sub
out
in
outsl
push
xchg
xor
je
arpl
mov
xor
test
mov
cltd
repz
add
pop
imul
mov
orb
idivl
lcall
push
adc
cld
pop
addr16
lahf
lods
shlb
fdivrp
into
ret
movsl
out
rclb
add
dec
or
dec
or
sbb
ja
dec
fisubl
mov
scas
insl
mov
out
lret
movsb
pop
inc
ja
jnp
push
and
xor
in
cli
jno
cmp
pop
adc
ja
cmpsb
rol
mov
and
jmp
pop
jecxz
dec
dec
shrl
out
jle
mov
popf
xchg
icebp
sbb
mov
xchg
out
inc
cmp
je
shl
and
pop
xor
int3
add
enter
stos
pushl
mov
mov
rcr
pop
bswap
int3
push
mov
cld
das
insl
andb
repnz
nop
push
add
push
js
and
mov
jno
mov
sti
loop
mov
add
jnp
cmpsb
push
xchg
ret
mov
cld
mov
xchg
mov
out
roll
sub
jo
fldenv
fmull
nop
mov
mov
jb
repnz
mov
fists
xchg
dec
fistl
dec
shll
inc
loope
stos
mov
jle
iret
jo
aad
add
pop
hlt
or
sub
xchg
add
sub
pop
outsb
xor
leave
push
sbb
pop
sarb
lret
mov
inc
das
insb
nop
enter
loope
cmp
push
js
sbb
daa
sbb
jae
loope
jmp
cli
ds
or
nop
xor
mov
pop
pop
jle
call
push
cltd
push
xor
jne
mov
pop
jp
das
mov
inc
sub
lods
and
mov
cld
inc
cmpb
pushf
mov
pushf
lods
sbb
filds
push
jne
movsb
lods
daa
or
cmpsl
pushl
ret
dec
jg
jp
dec
add
jno
andl
pop
insl
ss
sub
test
popa
ret
inc
lock
add
arpl
stos
movsl
stos
push
adc
jp
ss
xor
add
add
hlt
cmpsl
sbb
shll
fcoms
mov
push
nop
jmp
xchg
xor
dec
in
nop
or
sti
push
je
cmpsl
sbb
mov
outsl
mov
jns
adc
test
lods
dec
lea
push
jo
add
jne
inc
jg
adc
xchg
sti
test
sbb
sahf
jno
lods
push
inc
xchg
dec
push
push
aam
and
jae
push
cmc
stos
xchg
out
es
mov
addr16
in
movsl
imulb
popf
js
imul
jns
mov
and
dec
inc
jno
shld
mov
loop
outsb
enter
pop
mov
shll
cmp
into
add
sti
insl
xchg
inc
fmuls
ja
jbe
dec
mov
out
dec
mov
pop
jmp
in
xlat
mov
or
je
fwait
int3
jmp
cmp
pop
inc
imul
bound
in
mov
mov
cmp
repz
xchg
rcl
bound
mov
roll
fstpl
aam
cmpsb
mov
leave
inc
lock
add
push
in
popa
icebp
pop
inc
mov
jno
sbb
ficompl
sub
lods
cmp
fisttpll
ljmp
shll
inc
inc
pop
cmp
adcb
sbb
pop
sub
and
movsb
jae
inc
daa
jge
mov
test
sbb
adc
adc
or
scas
mov
call
mov
mov
jae
xor
jl
loop
and
ror
imul
push
ja
cld
test
jb
icebp
dec
ss
sub
test
add
in
repz
cmpsb
dec
xchg
xor
movsl
xchg
out
jge
mov
aas
adcl
mov
stc
fcomi
dec
add
popf
fldl
cmpsb
iret
and
mov
push
xchg
rclb
icebp
movsl
int
int
sub
fs
adc
inc
lcall
mov
push
and
test
xchg
repz
jns
mov
sbb
cmpsl
in
icebp
fwait
repz
pusha
daa
rorl
add
aaa
scas
xlat
adc
jnp
ss
je
sbb
pop
and
cmp
add
es
das
stos
xchg
addr16
push
xchg
adc
inc
lods
lahf
test
pop
mov
test
andl
push
mov
arpl
sbb
ljmp
sbb
inc
xlat
mov
mov
fmuls
jnp
test
push
adc
out
xchg
mov
mov
in
fs
popa
jnp
pop
lcall
mov
cmpb
mov
sahf
push
lret
push
mov
or
std
xchg
pop
es
movsl
les
dec
out
mov
notl
insl
xchg
push
xor
je
cmp
xchg
sub
in
sub
daa
or
dec
enter
movsb
mov
pop
mov
fisubrs
jnp
test
sub
jne
add
push
lcall
mov
jne
cmp
inc
jmp
xchg
ljmp
xchg
sti
inc
popf
pop
mov
loop
xchg
xchg
mov
pushf
and
or
mov
lret
and
in
push
xorb
push
aad
adc
test
jbe
mov
cltd
fcomps
add
add
xor
mov
pop
out
adc
add
mov
lock
sub
fstpt
ret
hlt
cli
push
adc
ja
dec
repnz
fwait
outsb
fistps
and
push
mov
loop
scas
jbe
pop
cmp
leave
fs
mov
movsb
pop
sub
mov
js
lods
pusha
xchg
add
and
mov
pop
push
jae
daa
scas
fdivr
popa
dec
xchg
mov
mov
xchg
lods
sub
fs
shl
dec
jnp
push
or
imul
in
data16
adc
out
test
cwtl
ret
xchg
push
out
and
mov
xchg
rorb
mov
sub
in
mov
mov
cmp
cmp
push
jb
mov
es
jmp
das
dec
jmp
int3
jmp
ret
stos
push
add
dec
xor
repz
ret
mov
test
divl
sub
leave
xor
js
or
lahf
dec
pop
into
adc
mov
data16
pop
inc
negb
jecxz
pop
es
testl
pop
add
sahf
xchg
jo
lea
or
loop
ficoml
cmpsl
jmp
jl
daa
daa
js
pop
cmc
sub
sbb
mov
lcall
mov
add
pop
mov
fsubrl
mov
fdivrs
insb
mov
mov
and
and
icebp
out
addr16
sahf
in
popf
cmp
jne
pushl
fnstsw
sarl
xor
les
iret
adc
push
dec
pop
sub
lods
in
data16
and
idivb
push
cs
push
aam
outsb
adc
push
inc
lret
xor
dec
out
out
aaa
jl
cmp
into
and
adc
push
ja
jno
out
aam
mov
frstor
push
in
jne
pop
lock
mov
mov
jmp
push
push
jbe
cwtl
leave
data16
enter
dec
jmp
sti
hlt
mov
repz
out
inc
ret
or
sbb
in
xlat
sahf
adc
inc
or
inc
insl
cmpsl
pop
stc
jns
loope
inc
shlb
push
or
inc
mov
jo
lock
inc
xor
pushf
and
js
xchg
imul
jecxz
cltd
mov
jle
xchg
push
cmp
arpl
sub
lock
outsl
xor
xor
gs
lds
or
loopne
cmp
adc
cs
arpl
in
jmp
fidivl
out
jmp
xorb
pop
mov
push
jb
iret
push
loop
int
xchg
cmpsb
stos
mov
in
dec
mov
jnp
lret
inc
popf
arpl
mov
xchg
xchg
sbbl
icebp
ret
jecxz
fstpt
add
jmp
bound
sub
test
mov
shll
add
enter
fs
lcall
jno
sbb
call
fistpll
cli
inc
or
xor
cmp
cmc
pop
mov
int
add
mov
and
sub
outsb
push
add
push
rol
and
loop
sub
cs
jge
jmp
mov
push
pop
or
stos
mov
dec
sbb
scas
call
out
pop
adc
lcall
xchg
shlb
fs
movsl
jno
push
pop
xor
cltd
jno
mov
sub
out
push
pop
bound
test
xchg
sbb
fistpl
add
adcb
hlt
ljmp
mov
lcall
fisubrl
push
pop
daa
xchg
and
sub
outsb
in
or
jmp
lahf
and
mov
xor
outsl
adcb
pusha
cvtps2pi
insl
cli
in
scas
xchg
cli
arpl
adc
lds
repnz
loope
jns
call
xchg
inc
test
mov
and
push
ds
je
jbe
je
ljmp
es
sub
test
mov
jbe
xchg
sarl
mov
stos
sti
rolb
rcll
leave
icebp
test
adc
sbb
mov
and
repnz
inc
add
pushf
pushl
and
fisttps
and
sti
cmp
ror
in
mov
sarb
movsb
mov
je
push
cmpl
push
sub
add
adc
or
adc
xchg
imull
cli
push
sbb
pop
and
adcb
xor
or
mov
cmp
cmc
sub
dec
xchg
repnz
popf
mov
mov
jp
cmp
cld
pop
jmp
popa
fildl
mov
stos
adc
adc
fistps
pop
pop
cmp
jne
dec
push
add
movsl
push
mov
insl
mov
xor
pop
out
sub
int
aam
cmp
sbb
lea
sbb
mov
testl
xchg
pop
and
stos
popf
pop
inc
loopne
ljmp
add
inc
pop
push
pop
mov
clc
mov
lret
dec
sbb
faddl
insl
test
push
xchg
inc
jns
or
fstpt
mov
sarl
out
sbb
mov
jnp
negl
stos
fldt
das
lock
lock
pop
inc
fidivl
in
xchg
fdivs
call
lds
fs
fldt
push
mov
mov
movsl
cli
sbb
out
inc
test
lret
add
pop
cmp
adc
stc
mov
push
pop
insb
scas
sub
mov
outsl
lahf
jecxz
mov
cwtl
test
and
inc
cmpsl
sbb
jl
push
xchg
filds
inc
or
fcoml
jecxz
rcrb
add
mov
outsl
xchg
cmp
addr16
push
ja
sbb
mov
arpl
dec
push
arpl
adc
lods
into
adc
cld
not
cltd
push
dec
sub
test
loop
aaa
cmp
push
daa
out
cmpb
in
mov
or
xor
pop
icebp
ja
pusha
mov
ret
aam
ja
lret
jg
lret
ds
mov
lahf
stos
xor
enter
icebp
adc
jb
insb
in
inc
add
mull
je
or
in
lret
ja
xchg
mov
push
in
fmull
and
in
imul
nop
jno
sti
xchg
shlb
dec
mov
xor
xchg
mov
mov
mov
mov
dec
lret
xor
mov
pop
mov
data16
fcoms
push
fldl
cmp
push
cmp
dec
movsb
aaa
ljmp
sbb
subl
pushl
add
cltd
imul
addl
loop,pn
int
inc
push
dec
sbb
push
repz
sbb
jae
mov
and
push
scas
mov
sbb
in
decl
lods
sti
mov
jbe
ds
aaa
fisubl
inc
dec
pop
xor
mov
push
je
psrad
adc
jge
or
pop
and
pushf
and
xor
clc
shl
push
outsb
adc
jecxz
or
subb
fisubrs
mov
and
mov
add
cmp
mov
out
popa
orl
sub
lcall
loopne
pop
sub
push
negl
pop
jmp
adcl
pusha
imul
cmp
and
repz
xchg
enter
cli
cmp
imul
iret
or
out
ret
in
mov
mov
jmp
cmp
sub
out
arpl
ljmp
pop
inc
dec
sub
dec
jne
lret
inc
cmp
jl
inc
push
lea
stos
pop
in
mov
adc
sub
jnp
cmp
and
int3
dec
and
dec
cs
dec
es
scas
sub
dec
cmc
sub
testl
out
sub
popf
jne
sbb
jbe
pop
imul
push
aad
mov
mov
xchg
add
outsl
cli
sahf
push
xor
push
testl
cmc
dec
lcall
aaa
jmp
mov
aas
bound
lds
test
loop
add
cwtl
test
insb
mov
mov
popf
mov
mov
cltd
mov
pop
mov
fnstsw
xchg
cmpsl
nop
mov
jle
sub
mov
fdivl
sub
inc
xchg
cmp
fwait
inc
and
lret
aad
adc
push
es
xchg
je
arpl
xchg
or
xchg
pop
fisubrl
pop
std
popf
leave
cmp
std
mov
jbe
negl
mov
mov
dec
les
fxam
enter
pop
push
sbb
outsl
jge
xchg
mov
call
inc
xor
jecxz
stos
mov
jbe
or
insb
in
adc
inc
add
add
pop
cmp
xlat
xchg
call
fwait
test
inc
xorb
jp
lahf
mov
inc
mov
jecxz
cmp
mov
pop
ret
icebp
cmp
jne
xchg
mov
push
aas
mov
or
lods
in
aaa
vmovq
lret
mov
fimuls
or
js
jmp
pop
dec
out
aad
repnz
push
ja
mov
mov
sti
addr16
adc
dec
inc
fldl
xor
cli
sbb
jno
or
ret
dec
repz
fs
fadds
ja
push
push
mov
push
cmpsl
or
push
cwtl
int
jle
dec
sbb
and
call
stos
cmp
fsubrp
sbbl
push
and
cmc
mov
jle
sub
incl
nop
arpl
xchg
sbb
lock
cld
or
mov
mov
je
stc
fstp
nop
mov
fs
xchg
cli
vmread
xor
imul
xchg
push
ret
inc
pop
sbb
jle
imul
jo
scas
xor
lods
jp
fwait
mov
test
in
push
cmp
xchg
mov
jne
cli
icebp
or
sbb
arpl
cmc
stos
dec
je
cmp
std
sub
ja
and
xchg
jmp
rep
gs
nopl
fists
fdivr
aaa
daa
inc
sbb
pop
loope
shlb
fcompl
push
filds
pop
push
jae
data16
es
xor
dec
test
outsb
test
lret
sub
cmpsl
mov
mov
sbb
gs
adc
adc
xor
iret
dec
out
cltd
hlt
int
xchg
jg
mov
mov
subl
iret
mov
subb
mov
lock
xchg
scas
popa
push
adc
or
push
pusha
leave
js
mov
or
loop
test
inc
fistpl
mov
pushf
test
adc
insl
out
jmp
xchg
lahf
movsl
cmp
xor
cmp
adc
pop
test
push
fnsetpm(287
sbb
out
jns
sub
mov
lcall
jecxz
fwait
nop
jmp
xor
jg
dec
dec
xor
fists
fistps
dec
orb
pushf
pop
push
sahf
mov
dec
xor
lcall
fistps
out
push
inc
ja
iret
in
out
imulb
orl
mov
jl
inc
inc
adc
mov
jecxz
cmp
test
dec
clc
adc
shlb
jbe
mov
sub
out
sbb
mov
and
loop
fdiv
aas
imul
sub
lods
mov
adc
frstor
in
in
sub
daa
add
orl
mov
ljmp
push
sub
mov
stc
pop
stc
adc
mov
fisttpl
mov
cmp
dec
sbb
inc
decb
daa
and
jbe
pop
sub
adc
mov
cmp
xchg
pushf
mov
repnz
out
lea
es
dec
in
neg
cmpsb
mov
xchg
push
ss
cmp
test
int
rorb
ret
fbld
addr16
loop
das
pop
dec
cmc
sub
fdivrl
jle
xchg
fisttpl
jmp
or
loopne
inc
clc
shrb
ret
shrl
sti
cmp
and
sbb
or
std
dec
mov
stc
dec
lcall
jg
or
push
push
and
dec
pop
nop
je
push
cmp
clc
xchg
stc
arpl
inc
inc
fwait
call
lods
add
and
stos
push
fnstsw
rcl
ss
mov
sahf
jmp
pop
xchg
in
pop
xor
inc
cld
movsb
inc
int3
jl
sbb
mov
sub
inc
mov
xor
shll
icebp
push
test
mov
mov
pop
insl
lods
imul
push
cmp
insb
mov
aad
test
adc
jp
or
mov
cmp
xchg
or
sub
cmp
lret
xorl
or
outsb
jecxz
dec
fnstenv
repnz
mov
sub
jmp
sub
cli
mov
sub
inc
push
sub
jecxz
mov
scas
icebp
xor
push
enter
xchg
inc
out
loope
mov
pop
or
pop
push
imul
pop
mov
push
filds
sub
dec
andps
push
cmp
or
in
mov
or
ret
xchg
lock
outsl
ret
sub
inc
shll
shll
xlat
lea
jmp
sub
fs
and
mov
loopne
mov
pop
std
mov
cmp
ret
push
movsb
add
push
movsl
mov
arpl
test
addb
test
pop
sub
test
gs
push
stc
sahf
xchg
test
push
push
pop
daa
jge
arpl
push
mov
adc
cmc
mov
orb
adc
lcall
ljmp
sahf
pop
cmp
outsb
dec
pop
mov
fiadds
mov
outsb
lea
adc
int3
and
pusha
pop
addr16
int3
test
pop
stc
add
push
test
pop
jl
lea
call
push
aaa
fstpl
jg
mov
pusha
sti
cmp
inc
sub
rcll
dec
cmpsb
shrl
pop
stos
ds
or
push
sub
fbstp
pop
out
cmc
pusha
mov
les
repnz
push
fcoml
xchg
pop
sbb
gs
add
mov
ret
std
inc
xchg
jo
lods
xchg
fcoms
adc
xchg
push
repz
xlat
and
dec
sub
push
jno
dec
sub
push
push
cmpsl
cmc
xchg
outsb
push
sbb
lds
outsb
lret
adc
or
sub
xor
scas
jmp
fnstcw
repnz
pop
mov
push
jnp
jno
in
pushl
sub
mov
lahf
mov
data16
pushf
leave
fcmovu
adc
or
jo
dec
cmp
cli
push
mov
in
pushf
or
mov
cltd
lret
push
mov
inc
cltd
jne
adc
out
in
or
nop
inc
mulb
push
addb
in
jae
jmp
cmc
mov
lock
mov
inc
idivb
adc
bound
cmpsl
mov
xchg
shrl
xlat
test
mov
xor
inc
inc
daa
setge
sbb
test
sbbb
sbb
fdiv
scas
les
ja
jne
iret
mov
jo
fisubrl
xorl
mov
lock
outsl
lret
sub
mov
shlb
xor
inc
int
mov
es
mov
xchg
xchg
and
ficoml
sahf
clc
aas
sbb
mov
xchg
dec
lahf
jne
leave
mov
lods
rol
movb
push
and
mov
cmp
imul
push
call
xlat
fisttpll
cmp
xor
loop
fbstp
push
repz
sbb
adc
push
testb
add
jo
popf
adc
xorb
mov
std
mov
inc
push
testb
repz
lret
mov
mov
lcall
add
lret
cwtl
pop
mov
sbb
xor
lahf
imul
mov
in
jle
cmp
cmp
in
pop
es
stos
sub
scas
adc
lods
inc
lret
inc
jae
jae
sub
xchg
je
adc
movsb
add
popa
stos
ret
lds
xchg
in
push
push
adc
jno
loope
sub
shr
in
jbe
into
dec
int
insl
push
cmp
loop
popa
shlb
mov
and
xchg
addb
adc
mov
xchg
popa
aaa
data16
cwtl
adc
and
cmp
iret
cmp
fiaddl
dec
out
je
xor
cld
push
xchg
ret
cmpsl
imul
cmpsb
push
stc
xor
lahf
add
adcb
xchg
inc
fwait
test
or
pop
es
pop
adc
movsl
sub
xchg
in
nop
rcrl
rcrl
lahf
testl
mov
pop
addr16
and
xchg
jg
imul
sti
jnp
mov
cmc
popf
inc
push
shlb
jo
cmp
jbe
and
cltd
or
mov
ljmp
and
add
mov
andl
das
xchg
adc
nop
sub
stc
adc
mov
xlat
xchg
jg
cld
pop
bound
pop
stos
push
adc
xor
add
cmp
mov
inc
mov
lea
lds
adc
sbb
jge
leave
mov
js
fwait
mov
sar
pusha
andb
dec
ror
shrb
sub
lods
lret
leave
lods
sbb
sub
mov
mov
mov
inc
lock
jecxz
xor
incl
mov
push
repnz
mov
push
aad
out
sbb
insb
hlt
hlt
movsb
xor
into
es
jnp
jecxz
movsb
mov
cmp
je
insb
mov
int
pop
mov
xchg
adc
mov
ljmp
mov
out
ljmp
aad
out
repz
sbbb
jmp
push
insl
dec
and
mov
ret
mov
pop
aam
ja
sbb
sub
test
fisttps
enter
mov
pop
dec
or
fnstenv
or
stos
insb
ret
dec
mov
rorl
jns
mov
into
xchg
jl
xchg
lret
push
xchg
xchg
inc
or
fbld
mov
push
sti
subl
ret
in
call
mov
push
bound
xlat
mov
std
js
lahf
sar
mov
jecxz
enter
sbb
bound
repz
mov
push
pop
sarb
stc
push
mov
adc
std
es
add
mov
call
mov
and
cmp
adc
xchg
adc
adc
xchg
or
or
sbb
mov
data16
roll
jg
inc
repz
dec
fildll
cmp
imul
pop
cmp
jg
stos
xchg
mov
adc
in
out
out
pop
in
inc
dec
ds
cmpsb
jecxz
sub
push
xchg
gs
mov
mov
arpl
sbb
add
hlt
shlb
fnstcw
jns
loop
xchg
ret
ljmp
mov
divl
adc
enter
inc
add
ret
mov
fwait
das
adc
repnz
pusha
test
ret
jnp
add
cli
cmp
into
rcl
cli
pop
ret
and
inc
fildl
mov
insl
fwait
jne
and
jge
je
dec
push
loopne
mov
cli
mov
mov
push
adc
pop
incb
in
mov
subb
hlt
cwtl
inc
rcrb
aam
inc
add
test
ret
repz
dec
cmp
pop
or
xchg
adc
jns
mov
movsb
cmp
fcmovu
push
push
out
clc
jb
xor
out
mov
lcall
add
roll
mov
test
fwait
jno
mov
cli
adc
inc
sti
dec
outsb
fs
es
call
xchg
mov
xchg
xchg
inc
jmp
or
sbb
jmp
sbb
jnp
push
ret
xchg
jge
push
xchg
push
xchg
sbbl
enter
lea
sub
push
bound
mov
xor
pop
sbb
sbb
mov
cmp
scas
push
cmp
je
mov
clc
xchg
xchg
push
and
xlat
aas
insl
mov
adc
pop
lock
aam
dec
cltd
push
ljmp
out
mov
iret
xchg
bound
mov
dec
rclb
mov
jnp
cld
popf
mov
mov
fiaddl
cli
sahf
cltd
fwait
pop
fcmovu
push
push
aad
jg
in
testl
xor
cmpl
ret
outsl
jle
adc
jo
sub
jp
and
addr16
cs
int3
jmp
ss
aad
adc
leave
push
in
mov
push
loope
xor
test
mov
pop
out
push
into
mov
pop
push
sbb
and
or
jl
or
add
mov
xor
gs
jno
jg
cmp
call
outsb
test
mov
xchg
push
ret
push
imul
out
xchg
sub
pop
sub
cmp
sbbb
inc
sbb
enter
ljmp
mov
push
popf
mov
fiaddl
push
and
push
scas
popf
iret
in
mov
jno
rcrl
ret
mov
xorb
pop
xor
sahf
mov
shlb
fistpl
aaa
shrb
ja
push
mov
ljmp
cltd
sbbl
fdivrs
mov
les
ljmp
adc
pop
adc
push
mov
mov
sub
enter
pushl
out
pop
mov
cmpsl
mov
sarb
dec
adc
add
adc
and
daa
push
int3
or
sub
cli
mov
test
ret
mov
outsl
xchg
lock
cld
jo
imul
mov
stos
out
sbb
scas
sub
data16
rclb
movsl
std
ljmp
mov
cmp
lret
xor
xchg
add
xchg
mov
sbb
jle
ja
iret
ret
int3
cli
push
cmp
sub
sar
imul
mov
mov
in
outsb
mov
inc
out
jbe
jo
xor
sub
jns
sub
sti
call
push
js
gs
imul
subb
stos
js
push
cmp
cmp
add
jno
je
mov
mov
jbe
sbb
pop
add
push
sbb
add
mov
xchg
jbe
lock
test
shll
dec
pop
loope
test
mov
loop
int
mov
mov
cmp
shl
loopne
xor
jmp
cs
pop
inc
mov
mov
xchg
sbb
lock
mov
lret
push
cwtl
xor
xchg
test
mov
xchg
test
fsubrs
xor
movsl
insb
push
sbb
loop
scas
aad
adc
cltd
cltd
jl
scas
ret
sbb
xchg
popa
push
shlb
or
adc
out
stos
test
ss
cmpsb
or
movsb
es
std
xchg
xor
cld
int
mov
out
cmc
popf
js
scas
test
inc
nop
inc
in
repz
xchg
push
or
aam
mov
dec
data16
inc
mov
sarl
iret
dec
loopne
insb
fwait
ljmp
sbb
jmp
xchg
lods
sti
jmp
xchg
and
popl
mov
dec
adc
les
inc
jp
add
push
loopne
inc
nop
pop
lcall
cs
cmc
sti
iret
sub
test
xchg
pusha
dec
daa
dec
push
jge
fcmovnu
sti
sub
aad
cwtl
mov
andl
cmp
dec
fildll
iret
movsb
popa
out
push
pop
inc
add
and
xchg
int
cli
push
and
add
mov
cmc
push
iret
dec
mov
and
dec
pop
iret
adc
test
xchg
cmp
add
xorb
mov
push
push
cmp
scas
mov
fwait
stc
xor
cmp
gs
cmp
dec
xor
pushf
gs
inc
scas
dec
cmc
pop
inc
out
scas
stos
adc
jmp
sahf
add
xor
les
mov
into
lahf
pop
lds
ljmp
cmp
ret
pop
ja
cs
imul
cmpsb
fistl
xor
testb
jle
inc
fwait
or
jecxz
cmpsl
ja
movsb
arpl
pop
insl
int3
enter
pop
sub
adc
lcall
xor
addr16
movsl
mov
pop
cmp
adc
jnp,pt
rorl
pop
sub
mov
enter
sbb
mov
add
das
mov
test
mov
mov
adc
xor
int
xor
sbb
sahf
imul
push
adc
push
dec
sub
adc
push
mov
outsl
pop
sbb
pop
fbstp
mov
aad
and
mov
push
pop
out
xlat
or
pushf
dec
aam
mov
mov
lds
fsub
sub
nop
sbb
in
ret
fwait
test
sub
imull
cld
pop
jge
and
bound
enter
inc
add
out
sub
mov
ss
add
mov
gs
cwtl
std
jo
repnz
leave
loop
popa
add
test
outsb
jae
mov
insb
hlt
mov
cwtl
and
pop
mov
and
stc
push
test
push
jmp
mov
lea
cmp
std
or
dec
push
xchg
pop
shl
scas
dec
push
rclb
test
scas
inc
mov
in
imul
pop
mov
cmc
and
dec
shll
mov
jbe
orb
mov
jb
sub
push
or
jns
out
or
or
ficoms
sub
movsl
cmp
into
shrb
mov
adc
or
jae
je
adc
mov
repz
daa
out
in
inc
insl
dec
out
orl
je
inc
jno
pop
gs
iret
pushl
push
dec
rclb
notl
pop
adc
out
lea
adc
and
mov
iret
inc
cmp
shll
mov
bound
stos
jg
aad
or
lods
scas
push
sub
xor
les
sbb
jge
cmp
aad
dec
into
jmp
dec
fwait
add
adc
inc
in
in
bound
xchg
or
popf
jmp
dec
inc
mov
fisttpll
adc
imul
jle
dec
notb
fsts
roll
int
lcall
bound
push
repz
cli
jae
sub
jnp
mov
inc
enter
xlat
adc
xchg
and
fidivs
and
into
xchg
jg
cmp
push
xor
sbbl
std
add
xchg
sub
pop
ss
dec
mov
in
or
repz
lods
ljmp
ja
xchg
scas
rol
mov
dec
jns
jae
push
aaa
in
lahf
sub
repz
jno
loope
mov
aaa
cmp
outsl
xchg
std
jno,pt
cmp
imul
pushf
iret
shr
push
xor
js
inc
out
sbb
test
pop
outsl
repz
imul
sbb
adc
xlat
xchg
pop
lock
xor
xor
adc
test
lea
pop
fdivr
repnz
icebp
mov
enter
out
adc
iret
mov
cmpsl
pusha
cli
and
mov
sbb
nop
mov
clc
jae
adc
test
test
in
cmp
jbe
fwait
sub
repz
mov
xchg
sahf
loope
mov
jb
mov
pop
pop
cmp
or
xor
xchg
int
inc
pop
aaa
mov
add
into
test
mov
fs
les
movsl
fs
jne
sub
mov
lds
pop
lods
push
or
adc
repnz
inc
imul
pop
dec
pop
add
fldenv
bound
scas
fsubrl
or
mov
xlat
pop
add
jb
xor
sub
and
in
dec
call
jo
imul
add
xchg
mov
out
call
aaa
lcall
add
mov
mov
addb
cli
mov
icebp
push
jno
sbb
movsb
mov
push
mov
gs
push
ljmp
or
cmp
leave
or
pop
loope
mov
scas
pusha
xchg
je
jp
jb
gs
mov
sub
and
pop
mov
jb
dec
iret
mov
popa
nop
mov
push
ds
decl
push
cli
cmpsl
in
in
push
xorb
mov
or
xchg
push
fwait
xchg
adc
sbb
or
cwtl
or
je
insb
jnp
mov
loopne
jo
cmp
mov
sub
test
jg
pop
cmpl
cli
mov
add
mov
xor
daa
lds
cmp
or
icebp
and
lds
int3
sub
dec
and
sti
pop
add
shlb
xor
cmp
jnp
shrb
lret
gs
outsl
popf
daa
dec
shrb
bound
xchg
out
or
scas
mov
mov
pop
mov
fidivs
mov
mov
pop
jmp
dec
xor
mov
lahf
push
adc
popf
loopne
test
mov
mov
adc
mov
addr16
call
adc
sbb
sub
out
andl
sbb
mov
movsb
and
cmc
shl
push
cmp
fisubrl
call
inc
or
mov
out
xchg
mov
das
pop
cltd
adc
mov
xchg
icebp
and
mov
ss
pop
add
aam
rolb
push
mov
xchg
jg
std
pop
out
dec
mov
out
mov
stos
inc
imul
pop
mov
mov
lods
int3
fwait
stc
push
lock
mov
cmp
mulb
xor
in
jl
adc
repnz
cmp
mov
sub
mov
jecxz
loopw
jl
xchg
add
subb
movsl
nop
mov
adc
and
xchg
jnp
jge
jne
outsl
pop
stos
jmp
inc
jle
mov
sub
pop
lahf
loop
add
aas
jmp
out
insl
jb
adc
imul
xor
shll
jp
inc
xor
ret
pop
shll
mov
cld
fildl
mov
pop
aam
inc
push
add
pop
sahf
aaa
xchg
sub
sub
mov
sbb
sbb
das
notb
sbb
fistl
inc
je
fwait
inc
and
adc
or
mov
cli
cmp
mov
push
mov
mov
inc
test
sbb
lcall
inc
push
daa
imul
cmp
push
xor
ss
nop
sub
cmpsb
sbb
repnz
nop
aaa
sub
enter
ljmp
fdivrl
mov
xchg
lock
out
hlt
sub
insl
mov
add
outsl
jge
jmp
xor
xor
fnstsw
jns
add
lret
cmp
fstpt
roll
jb
ljmp
popf
xchg
add
les
cltd
and
mov
and
dec
std
mov
out
dec
add
movsl
push
adc
cmp
pop
cwtl
outsl
inc
leave
test
sub
mov
ds
inc
add
nop
stos
inc
call
or
pop
int3
sub
cmp
inc
stos
lods
add
out
jo
ret
outsb
xor
jle
dec
push
push
cli
fisttpll
test
loopne
ljmp
enter
out
sbb
dec
xor
leave
sbb
fwait
inc
xor
sub
mov
mov
xchg
ret
inc
cld
out
stos
stos
pop
add
mov
adc
xor
jbe
mov
sti
and
inc
dec
leave
sbb
imul
and
mov
sub
cli
daa
mov
sub
cmc
jg
cs
jecxz
movsb
mov
incb
les
pop
mov
enter
and
and
popa
pusha
dec
bound
testl
or
push
cwtl
push
fnstenv
mov
mov
pop
jbe
test
cwtl
ljmp
xchg
jns
sbb
xchg
adc
mov
mov
jmp
inc
xchg
out
popa
cmp
in
mov
icebp
pop
mov
xchg
data16
aad
pop
mov
xchg
sbb
mov
push
fmul
and
adc
hlt
xchg
xchg
fsubl
lahf
cmp
pop
ss
andl
xor
int3
negl
in
push
cmpl
pop
mov
push
adc
dec
ret
and
ja
in
aad
pop
sbb
sbb
pop
ret
xor
mov
mov
ss
cmp
cwtl
jmp
push
push
pop
mov
sbb
cmc
lret
gs
fdivr
int3
push
div
xchg
jo
dec
roll
aaa
int3
bswap
xor
xchg
mov
or
pusha
cmpsl
js
mov
mov
loop
adc
push
les
push
or
sti
lods
dec
jo
xchg
mov
ss
inc
sbb
dec
cmp
in
aaa
fs
mov
rol
iret
sbb
pop
in
js
ret
insl
decl
push
arpl
lods
ret
jg
fst
sub
stc
mov
mov
push
dec
dec
mov
clc
mov
sbb
dec
jno
rcl
or
push
xchg
dec
addr16
int3
arpl
loop
sbb
cmp
mov
sbb
ret
gs
lcall
or
popl
push
outsl
cmp
call
sti
pushl
movsl
fs
mov
pop
adc
inc
bound
aad
out
or
sahf
std
scas
gs
cltd
mov
cmpsb
lahf
adcb
lods
mov
adc
mov
incb
nop
test
jmp
push
jmp
and
out
bnd
insb
lcall
je
fwait
mov
pushf
push
mov
mov
dec
in
aam
inc
adc
cmpsb
stos
push
pop
sbb
or
repnz
push
popf
je
int3
fists
fwait
or
inc
mov
push
lahf
jbe
lea
orw
cmp
sbb
roll
fyl2xp1
or
ret
stos
nop
xor
inc
gs
mov
jg
inc
or
pop
pop
dec
adc
mov
jp
repz
cli
les
rcrb
aad
scas
daa
sbb
xor
fidivrs
pushf
mov
cmp
inc
jle
out
jl
mov
stc
mov
sub
cmp
adc
lods
ljmp
push
jmp
jle
es
pop
mov
popa
jle
mov
mov
lods
xchg
pop
test
inc
jo
aaa
or
add
iret
jl
shlb
nop
xchg
xchg
pop
aad
out
ret
pusha
lds
sbb
loope
aad
sbb
or
mov
int
movsl
dec
push
fisttps
cmpl
xor
ss
jae
mov
dec
pop
je
push
sbb
inc
push
mov
jmp
push
cmpsb
mov
insl
mov
adc
jecxz
movsl
push
xor
mov
ds
and
int3
push
mov
push
movsl
fists
xchg
or
add
sti
aaa
cli
push
test
xlat
dec
decb
adc
dec
cmp
iret
jo
ret
repnz
cmp
ds
or
lahf
hlt
insb
xor
inc
inc
decl
cmpsb
mov
insb
dec
pop
sahf
sub
jl
test
xchg
test
xor
pop
lret
popa
fbstp
lcall
js
xor
push
cmp
xorb
in
mov
dec
iret
xchg
iret
push
dec
add
clc
les
stc
pushf
cld
ds
sub
fnsave
pushf
pop
test
xor
jno
int
and
scas
and
and
jmp
and
jge
shrl
inc
lea
jnp
iret
cli
std
fadds
out
push
cwtl
dec
mov
ficompl
inc
sub
aaa
into
dec
mov
push
sub
subl
inc
adc
sub
movsb
lret
inc
cmp
or
sub
dec
rcrb
ss
rcrb
xchg
and
popf
rcrl
fistl
mov
sub
arpl
outsl
xchg
xor
mov
push
loope
or
sub
jl
sbb
insb
xor
ds
out
lods
sti
fbld
sub
xor
inc
adc
test
cmc
lock
adc
xlat
xchg
or
jno
dec
shlb
mov
pop
mov
dec
in
sbb
or
push
and
lahf
into
cmpb
aam
push
in
lds
mov
test
out
lds
add
cmpsb
sbb
scas
push
push
mov
cltd
sbbb
cmp
mov
mov
sub
cmpsb
pop
int
and
sbb
inc
push
cmp
aad
add
mov
add
ficoms
sbbb
mov
pop
lret
jmp
ljmp
push
jg
out
add
add
push
adcl
mov
adc
xchg
aad
call
adc
and
test
push
mov
mov
js
fistpll
daa
push
inc
xor
xor
mov
notb
cmpsl
or
gs
popf
xor
pushf
fdivrl
inc
cli
mov
fnsave
ds
sarl
add
cmp
xchg
sbb
or
xor
into
loopne
out
sbb
test
int
push
int
fidivrs
dec
stos
negl
enter
repz
xchg
subl
shlb
shlb
loope
add
lods
in
fstp
adc
mov
mov
mov
into
jb
outsl
insl
adc
out
hlt
jmp
fiaddl
sub
sarl
scas
fwait
mov
data16
dec
jbe
mov
incb
jge
stc
rolb
scas
cmpsl
jno
xchg
sti
lcall
mov
adc
xor
stos
mov
dec
hlt
int
lahf
daa
inc
sbb
mov
adc
fnsave
inc
pop
jae
push
popf
mov
icebp
cmc
add
out
sar
cltd
cltd
loopne
fimull
in
add
pop
adc
sti
cltd
xchg
int
mov
jmp
movsl
iret
rclb
sbb
mull
jne
or
add
and
or
enter
mov
and
or
mov
fisubrl
lcall
lock
cs
lahf
push
push
pop
mov
cmpsb
mov
mov
out
push
jecxz
mov
or
aad
add
push
loopne
and
fdivl
mov
push
arpl
fwait
arpl
push
and
cmp
data16
pop
or
jo
das
add
adc
xor
insb
cmp
add
jne
or
stc
iret
add
es
or
gs
sbb
mov
insl
lea
cli
dec
daa
popf
test
push
stc
push
js
and
or
cmp
rcll
push
jns
inc
sahf
leave
call
sub
push
pop
or
push
adc
enter
fcmovnb
inc
sub
push
xchg
pusha
inc
push
rcrl
cmp
xchg
lds
push
insl
mov
pop
stos
les
or
faddl
ss
add
in
jnp
and
shll
mov
cmpsl
fwait
imul
sbb
mov
sbb
outsl
jns
mov
mov
jno
mov
fcmovnbe
lock
test
add
roll
mov
insl
sbb
lret
ds
mov
nop
sbb
sti
mov
je
adc
ljmp
mov
mov
daa
cmpsl
push
pslld
sahf
aam
ja
jne
shl
mov
dec
aas
fdivs
jb
aaa
push
neg
lds
inc
ret
and
sub
test
jb
lret
in
mov
out
push
or
test
cmp
pop
inc
fwait
pop
and
cs
loopne
and
mov
jae
out
add
xchg
imulb
sahf
lcall
insb
push
pop
pop
test
push
int
or
jo
push
nop
sahf
out
pop
adc
pop
test
and
scas
cmp
push
adc
mov
fldenv
imul
clc
lret
pop
and
adc
and
repz
mov
imul
rcl
imul
add
sti
in
xchg
fwait
dec
or
xor
loop
sti
push
mov
push
fucomi
and
in
xchg
push
lea
jo
add
adc
sub
dec
into
mov
add
out
pop
shrb
adc
lahf
pop
mov
loope
or
push
lods
mov
and
in
cmp
or
movsl
pop
std
xor
mov
fucom
ja
stos
mov
sub
je
sub
push
jle
int
mov
movsl
sti
stos
cmp
sub
jo
cmpsb
roll
fildll
pusha
nop
add
or
fildl
jns
sub
xchg
icebp
gs
sub
push
and
add
loope
sbb
cs
xchg
lock
test
or
fucomp
imul
pop
jno
adc
mov
js
inc
cmp
gs
xor
mov
and
mov
sbb
sbb
dec
or
lods
lea
push
lods
dec
or
test
xchg
cld
testb
addb
popf
xchg
test
fsub
stc
add
in
popf
and
push
in
mov
repnz
int
ret
xchg
cmpsl
ret
mov
mov
cld
lret
loopne
int3
les
push
push
push
pop
xchg
popf
rolb
sbb
mov
push
push
in
ds
inc
rclb
sbb
jae
pop
pop
js
inc
adc
cltd
inc
or
xor
mov
sbb
adc
or
jp
into
jmp
stos
adc
out
imul
in
loopne
inc
mov
ret
sbb
leave
mov
mov
repnz
jb
rcr
xor
cmpsb
std
out
sub
insb
sbb
mov
inc
fwait
idiv
test
dec
xor
pop
xor
in
fldenv
mov
cmp
lret
notl
push
jge
das
icebp
dec
stc
popf
sbb
repz
mov
add
shrb
scas
lret
jl
sbb
ret
mov
aas
lret
xchg
call
pop
jae
or
loop
cmp
in
push
fistpll
cmpxchg
push
jno
sbb
fwait
pop
fcoms
push
mov
inc
jne
jmp
scas
aam
mov
and
orb
out
add
imul
inc
subb
cld
iret
std
mov
rcrb
adc
xor
adc
mov
sbb
aaa
outsb
mov
and
fisttpl
push
testl
outsl
inc
and
mov
and
add
scas
sbb
stos
lahf
push
repz
stos
fwait
dec
out
dec
shrl
std
push
lea
pushf
imul
popf
push
lret
pop
fistpl
pop
inc
xchg
and
lock
aaa
fbstp
jg
push
arpl
lds
pop
int3
mov
sub
pusha
fs
je
push
adc
mov
fidivl
pop
pusha
push
into
ds
imul
popf
or
lock
in
call
pop
out
jae
imulb
cmpsl
sbb
outsl
xchg
enter
cltd
mov
adc
loopne
pusha
in
xchg
cmp
mov
notb
jl
adc
nop
gs
add
and
jmp
mov
xor
fstpl
push
fst
cwtl
jg
push
notb
fdivrp
dec
or
loop
out
mov
lods
mov
mov
mov
and
push
sub
movb
dec
pop
xchg
push
mov
push
outsl
aam
and
int
in
add
sarb
orl
inc
outsb
push
xor
inc
sbb
dec
and
fxam
sub
dec
pop
jno
fisubrs
ja
insb
ss
idivb
outsl
divb
mov
inc
movsb
and
and
fsubl
ret
mov
adc
dec
das
stc
and
sbb
jmp
xor
out
add
sarl
out
mov
mov
push
mov
xorl
movd
popf
cmp
mov
jg
sub
cmp
mov
sub
xchg
in
cmp
adc
pop
and
jl
mov
test
pop
ja
lcall
imul
mov
mov
push
es
into
sbb
or
pop
in
in
push
mov
add
or
sahf
mov
ds
pop
enter
push
jge
fcomi
fildll
sahf
xchg
stc
fdivl
mov
fstpl
test
jns
xor
cmp
mov
xchg
cmc
fsubl
cmp
dec
sbb
add
sub
stos
xchg
cmp
enter
lret
lock
mov
rcll
insl
jbe
addr16
xchg
inc
fwait
or
add
loop
jmp
sub
sbb
test
insl
inc
les
cmp
inc
dec
ret
push
jmp
adcb
add
inc
xchg
xchg
jne
mov
sbb
ds
movsb
mov
cmpsl
pop
outsb
xor
in
mov
and
jno
sbb
dec
adc
and
adc
sbb
insl
testb
gs
add
jae
mov
push
push
incb
mov
push
mov
and
jle
pop
out
xchg
test
jb
enter
lret
cmpsb
mov
ficoml
sub
lcall
jg
inc
jno
pop
pushf
xchg
mov
push
xchg
inc
adc
cmp
imul
fisttpll
fstps
aad
xchg
xor
xchg
cmpsl
jbe
mov
or
iret
nop
stos
pushf
in
jl
data16
mov
xchg
xchg
cli
mov
dec
imul
cltd
clc
aad
fs
je
cmpsl
popf
iret
pop
scas
push
sbb
pop
mov
sahf
rolb
sub
aad
xlat
mov
fsubrl
std
xlat
out
pop
out
outsb
pop
lahf
inc
push
adc
iret
or
movsb
cltd
sbbb
loope
insl
stc
sete
adc
xchg
punpckhbw
inc
aad
outsl
cs
and
data16
mov
stc
loope
das
add
test
cmpsb
sti
in
push
sbb
sub
xchg
push
or
sbb
lret
mov
test
pop
cmp
push
pop
sub
js
scas
and
sbb
xchg
cmpb
lods
imul
loopne
push
jb
pop
push
into
or
xchg
push
xor
dec
mov
movsl
bnd
fidivl
or
mov
ret
mov
push
ja
addr16
inc
call
xlat
jp
pop
and
jne
fnstenv
pop
and
cs
mov
out
push
dec
push
dec
sub
outsl
mov
xchg
jno
out
push
jg
pop
out
push
out
pusha
out
ret
mov
adc
test
mov
adc
subl
push
pop
mov
pop
mov
jecxz
lods
popa
sti
push
aas
cltd
inc
mov
inc
jg
push
xchg
mov
data16
outsl
mov
enter
sub
sti
mov
xchg
push
fwait
test
add
jge
cmpb
or
inc
push
xchg
lret
loope
dec
int
inc
or
insb
jo
loop
xchg
cmp
repnz
lea
mov
in
push
into
sahf
add
ret
cmp
mov
lods
shlb
scas
pop
push
stc
aaa
jnp
das
and
mov
test
ds
push
pop
pop
dec
lea
ss
push
or
sbb
nop
stos
xchg
sbb
and
in
sti
push
test
or
cmp
leave
jg
sbb
movsl
loope
test
push
sub
add
sub
lret
xchg
int
xchg
jb
lds
mov
sbb
enter
mov
mov
es
mov
and
jmp
in
dec
xor
inc
jmp
adc
or
inc
sub
fdiv
pushf
pop
mov
lods
sub
inc
and
int3
push
jle
mov
rcrb
hlt
sub
out
les
pop
test
stc
fs
mov
scas
inc
adcl
add
add
repz
icebp
xlat
call
push
sbb
or
cld
xchg
adc
aas
adc
dec
repnz
inc
push
iret
dec
jno
not
cmpsl
mov
jns
insb
xor
aaa
add
mov
imul
insl
mov
fsubl
outsb
pushf
cmpsl
add
scas
insl
cmp
cli
bound
mov
test
xor
xchg
mov
cmp
repz
lahf
and
xchg
sbb
push
xchg
mov
cs
loop
test
jne
in
int3
cmc
push
ret
int3
jae
gs
test
xchg
xchg
and
or
lea
out
jmp
mov
inc
ja
xchg
bnd
fisubl
inc
fadd
jo
mov
in
cmp
in
mov
push
test
cmpb
xchg
sub
scas
es
sbb
mov
xchg
iret
push
xchg
add
mov
cltd
xor
mov
lret
fdivrs
or
pop
adc
mov
mov
push
stos
leave
cmp
xchg
outsl
shll
ds
and
fbld
adc
out
aam
add
push
gs
adc
push
mov
dec
fwait
insl
sbb
movb
inc
or
xchg
lock
icebp
mov
cwtl
arpl
in
out
pop
mov
les
xlat
mov
imull
repnz
xchg
popa
xlat
add
shll
push
stos
lds
sub
inc
sub
pop
cmp
or
ja
rolb
into
sub
inc
adc
bound
sahf
xlat
mov
add
int
movsl
gs
out
jns
notb
push
mov
ljmp
push
pop
inc
and
jb
jbe
movsl
pusha
movsb
xchg
or
pushf
mov
sbb
adc
xchg
fdivrp
mov
aad
xchg
fnstcw
xor
sbb
sbb
sub
add
mov
aas
aaa
adc
xor
cli
add
jno
fstp
push
call
repz
mov
imul
mov
mov
inc
cmp
frstor
pop
pop
je
push
adc
out
mov
fwait
sbb
and
lret
repnz
dec
addr16
sub
inc
jne
inc
mov
sbbl
or
pop
inc
lods
jb
movsl
cmc
xchg
sbb
and
ss
test
push
jge
dec
and
mov
adc
test
jbe
inc
pop
scas
push
lahf
xchg
xor
sub
inc
adc
inc
out
out
into
sub
in
pop
push
dec
cmpb
jge
pop
pop
dec
push
sub
sub
pop
pusha
cmpsl
push
ret
jne
sub
and
into
xchg
aaa
lahf
aam
mov
jb
dec
outsb
pop
test
fsubrl
fnstsw
dec
push
call
leave
lds
iret
push
mov
in
pop
mov
int3
adc
repnz
jno
fs
in
lock
scas
dec
stos
int3
cmp
adc
push
out
loop
jae
gs
pop
mov
or
in
sbb
in
push
loope
adc
adc
mov
inc
adc
mov
push
inc
mov
stos
xchg
shlb
inc
xor
lods
xchg
and
aam
pop
sbb
enter
pop
and
mov
les
mov
xchg
jmp
dec
fnsave
data16
out
push
mov
ja
mov
push
fisubrl
into
aaa
xchg
lock
and
arpl
jmp
xor
repz
test
and
cmp
pusha
shl
test
mov
inc
dec
fidivs
cmp
xor
test
push
sub
dec
aad
test
mov
int3
mov
in
push
lahf
das
lock
imul
mov
stos
and
vcvtpd2dqy
lret
or
xchg
or
mov
pop
adc
push
paddusw
inc
sub
or
out
push
jmp
ret
cs
loopne
jge
jg
adc
push
push
sbb
dec
es
xchg
push
in
xchg
pop
inc
push
xchg
popf
or
mov
cld
test
test
int
aad
imul
sti
mov
das
out
es
ds
mov
push
call
or
fisubs
mov
dec
push
outsb
test
rcrl
out
jmp
fstl
ss
inc
pop
jecxz
mov
repnz
into
popf
add
popf
push
repz
cmpsl
mov
jp
cwtl
addr16
cmpsl
mov
cmp
push
mov
sub
inc
push
je
in
filds
mov
stos
sub
push
pop
and
leave
in
repz
outsb
bound
out
mov
je
insl
inc
fisttps
and
inc
inc
loop
sarl
xchg
clc
shll
mov
insl
imul
xchg
xor
aas
fwait
movsb
push
inc
lds
and
loopne
fwait
cwtl
jecxz
jg
sub
sti
push
ds
shrb
dec
scas
push
pop
test
mov
or
fildll
inc
scas
cmpsl
dec
add
xlat
pop
mov
jg
cmp
xchg
out
pop
cmp
adc
rclb
push
jle
sbb
xchg
cmp
adc
ss
fdivl
jnp
popa
test
add
push
xchg
filds
ret
pop
divb
loopne
ffree
outsb
iret
and
jp
orl
shrb
xor
fcoms
push
xor
sub
shlb
cltd
test
mov
push
popa
sub
idivl
adc
dec
mov
popf
lods
mov
lahf
popf
or
sub
cmp
rcrl
lds
dec
pop
jbe
addl
mov
out
cmp
jns
into
aam
push
and
jb
push
mov
stc
pop
fcomi
add
and
aas
fwait
leave
and
aad
and
xchg
jb
jp
dec
clc
imulb
nop
xor
jbe
pop
mov
xor
bound
add
int
mov
repz
inc
repnz
mov
insl
and
dec
xorb
and
cli
or
inc
out
cmpsl
repnz
ret
outsb
jge
xor
jbe
jo
fdivrl
bound
mov
aaa
daa
pop
fstpt
lahf
mov
push
cwtl
jbe
lods
push
je
xchg
xchg
popa
dec
adc
repz
jb
out
jne
pushf
out
push
mov
cs
enter
pop
mov
icebp
mov
cmp
inc
rcll
mov
stos
mov
rcrl
pop
mov
ret
cmp
rolb
push
pop
inc
repz
or
test
sub
mov
inc
or
add
cmp
sbb
jns
insl
push
daa
inc
lret
int
repz
mov
and
into
sub
mov
or
repnz
cmc
notl
cmc
dec
mov
push
inc
dec
outsl
ljmp
data16
cmp
je
or
in
jmp
in
ljmp
jnp
inc
pop
dec
and
push
sub
mov
imul
mov
addr16
ret
cmpsl
adc
xchg
out
cmp
xor
inc
lret
dec
insl
mov
js
es
ret
stos
lahf
jo
leave
call
jl
cs
push
int
add
and
out
xchg
jge
lock
into
pop
out
pop
sbb
imul
icebp
dec
in
jb
pop
sarb
insb
xchg
pop
pop
mov
cmp
xchg
mov
mov
mov
dec
adc
notb
stc
inc
add
gs
popf
shl
jle
stc
aas
fsubs
shlb
das
ret
mov
negl
sbb
sub
jo
jmp
adc
and
call
sbb
add
movb
sti
adcb
shll
sahf
push
in
dec
xchg
gs
notb
xor
add
inc
or
add
imul
dec
ja
nop
add
mov
or
mov
mov
pop
push
hlt
int
adc
nop
cmpsl
in
ret
das
outsb
das
push
mov
mov
mov
adc
popl
pushf
mov
mov
jle
out
int
adc
adc
fcomip
sbb
xchg
pop
lret
iret
dec
adc
xchg
jae
xor
mov
sbb
inc
sub
and
pusha
pop
mov
mov
notl
sbb
icebp
cwtl
mov
push
nop
fisttps
xor
jecxz
push
mov
inc
rolb
es
dec
mov
aaa
push
mov
cmp
sbb
or
in
jne
nop
jno
lods
and
xor
cmpsl
lcall
repz
std
pop
sahf
fs
dec
sub
push
lret
mov
dec
lea
testb
xor
jo
adc
jge
repz
xchg
sahf
adc
xor
orb
ficoml
sub
and
es
shll
out
or
mov
stc
add
in
out
in
int
sahf
imul
arpl
push
mov
rcrb
out
mov
popa
pop
cmp
lcall
out
mov
mov
mov
xchg
push
fwait
stc
ja
push
fwait
mov
cltd
inc
movsb
xchg
insl
cmp
sbb
scas
sahf
lods
movsb
inc
xor
pop
cwtl
or
pushf
imul
scas
repnz
clc
cmpps
adc
test
xchg
gs
rcl
push
imul
push
xor
xor
lret
fistpl
jp
inc
sub
fcmovnb
mov
fwait
jbe
xchg
stos
les
test
add
cmp
cs
repnz
loopne
sarb
mov
xor
lret
gs
pop
dec
push
cld
cmp
add
aas
sbb
ret
lahf
mov
mov
bound
cltd
pop
pop
or
mov
xchg
fcmovnu
es
leave
xor
and
or
pushf
jb
add
dec
push
push
mov
add
sahf
aas
xchg
xchg
fsubr
or
jb
pushf
push
js
test
sub
jle
and
xor
sti
pusha
das
dec
or
xchg
mov
push
xchg
lods
repnz
xlat
mov
iret
sub
mov
mov
xor
pop
subl
icebp
pop
add
js
adc
jp
xlat
and
dec
mov
mov
and
cld
into
ss
mov
mov
ror
addr16
and
hlt
pusha
dec
pop
push
pop
inc
loope
jnp
mov
fcomps
arpl
enter
push
or
stos
aaa
push
popa
dec
dec
aad
or
mov
dec
mov
lds
mov
lahf
scas
jp
push
push
idivl
and
or
mov
cmpsb
push
sahf
cld
sbb
lret
push
jae
sbb
popf
fs
cltd
mov
scas
mov
push
adc
in
daa
rcl
cs
sub
sbb
fmuls
icebp
inc
inc
ficoms
sbb
lock
jb
jle
int3
jno
push
std
js
push
pop
aam
std
xor
cltd
stos
test
mov
cld
and
ljmp
arpl
and
fsubl
test
movsl
sub
lret
jge
mulw
sub
inc
in
and
adc
test
stc
cmc
aam
push
cmp
es
cmp
cmp
and
sub
aam
gs
sub
sti
mov
inc
loopne
push
mov
in
movsl
fs
popf
pusha
nop
addw
call
jne
mov
cltd
arpl
cld
outsl
dec
cs
and
mov
jg
fimuls
clc
cmp
in
xchg
pop
lds
aaa
mov
mov
loope
mov
stos
or
xchg
mov
ds
xchg
out
mov
dec
add
inc
mov
shll
pop
push
stos
push
mov
das
xor
js
cmpsl
pop
adc
sbb
jmp
dec
aas
xor
push
jp
ja
push
inc
or
xor
push
jbe
adc
adc
dec
lds
dec
or
ds
dec
insl
enter
sbb
popf
lret
test
or
push
int
movsb
pop
loopne
jp
jge
push
inc
addr16
cmpsb
mov
dec
pop
bnd
aas
lock
sbb
fdivl
adc
xor
push
and
cmp
repnz
cmc
cli
jge
dec
arpl
sub
pop
mov
push
or
push
aad
popa
jbe
jg
outsl
push
pop
pushf
psraw
cwtl
push
hlt
std
mov
dec
mov
cmp
push
pop
pop
mov
mov
out
test
jb
and
sub
adc
dec
stos
imul
data16
dec
bound
adc
imul
mov
test
es
outsb
mov
pop
sahf
push
jg
ja
xchg
lcall
xchg
xchg
push
ljmp
mov
fsub
gs
jb
and
lret
xchg
test
and
sbb
popf
xchg
pop
flds
jle
dec
daa
pusha
jb
sbb
adc
cmpsb
int
push
xchg
inc
add
xchg
out
in
test
pushf
mov
or
inc
inc
ficomps
inc
aam
add
rcll
loopne
or
add
vpcmpeqd
or
loopne
pusha
pop
mov
add
idivb
adc
fldenv
xchg
repz
inc
mov
pop
lods
and
ret
pop
xor
mov
lret
adc
add
das
divb
jp
fistpll
xchg
adc
xchg
test
jnp
loopne
daa
pop
je
jle
adc
mov
fildll
test
fcom
andb
in
push
mov
clc
out
mov
cmpb
popf
inc
lods
and
xchg
fdivrs
clc
inc
js
and
std
cmpb
loopne
mov
leave
int3
xlat
aaa
or
sbb
jns
repnz
mov
dec
das
scas
mov
mov
inc
jg
inc
xchg
shlb
mov
popf
mov
jmp
pop
dec
popf
mov
mov
jmp
pop
mov
hlt
and
or
push
call
cmp
push
sbb
loopne
hlt
bound
js,pt
mov
jb
mov
cmovs
mov
inc
popa
cmp
neg
and
xor
test
dec
xor
aas
push
add
fdiv
add
pop
xor
jecxz
add
sahf
sbb
rclb
push
test
mov
mov
inc
pop
enter
jl
int3
loopne
jnp
jns
xchg
outsb
inc
jecxz
push
cmp
dec
adc
lahf
sub
dec
ljmp
inc
lret
jnp
bound
fsts
xchg
pushf
cmp
mull
and
out
lods
mov
xor
cmp
imul
mov
outsb
adc
insb
xchg
mov
mov
insl
xor
cmpsb
iret
lret
cld
cmp
mov
mov
in
mov
mov
mov
shll
add
adc
xchg
mov
cmp
xor
inc
xchg
mov
test
mov
mov
popl
inc
hlt
mov
loop
in
inc
mov
push
lods
nop
in
push
adc
mov
push
mov
pop
xor
pushf
adc
lret
mov
jecxz
mov
xchg
clc
iret
pop
pusha
cs
xor
jmp
outsb
cmpsb
cwtl
rcr
shlb
push
pop
sbb
mov
out
jo
jmp
daa
scas
pop
dec
mov
or
cmc
repnz
adc
or
cmp
jl
push
sbb
cli
push
sub
or
decb
shlb
pop
adc
sub
cmp
orb
pushf
mov
xlat
jbe
and
and
mov
shlb
pop
or
loopne
into
es
in
out
and
aas
mov
inc
jp
aam
cmpl
sub
xchg
jns
cwtl
cmp
lcall
pop
shrl
inc
jb
jb
push
enter
mov
dec
cmpsb
xchg
pop
xor
sub
add
rcrl
mov
dec
pop
or
pusha
and
sbb
cmp
xchg
and
add
pushf
jo
test
cld
lods
and
lea
lods
mov
icebp
mov
push
adc
push
push
or
dec
mull
dec
pushf
push
scas
gs
loop
pop
ret
dec
movsb
mov
rcll
xorl
inc
test
rclb
mov
out
stc
xchg
or
cltd
mov
jl
imul
push
add
xchg
and
sbb
pop
xchg
dec
stc
and
je
inc
mov
mov
push
adc
jns
ja
rolb
mov
jno
rorb
sti
mov
cmp
int
sbb
mov
ret
pushw
fidivrs
push
and
add
aas
incb
inc
and
sbb
dec
insb
and
sarb
sub
cmp
sub
mov
pop
mov
rcrl
pushf
ss
repnz
adc
pop
inc
fidivl
scas
cmp
pop
scas
xchg
pop
jp
roll
mov
push
js,pn
lods
xor
mov
sbb
mov
call
mov
into
xchg
mov
loopne
sahf
pop
data16
mov
les
xchg
in
punpckhwd
lcall
pop
loope
add
push
sub
mov
push
dec
jns
xor
mov
mov
cltd
push
into
es
add
or
insl
cmpsl
test
test
bound
fnsave
mov
dec
insl
imul
cmp
pop
cmp
cmp
movsb
mov
sti
rolb
mov
fdivrl
shlb
out
test
pop
xchg
imul
mov
int
mov
ss
dec
cmp
mov
jno
mov
add
sti
mov
pop
or
aaa
sub
aas
or
dec
gs
sti
xor
shlb
dec
xchg
push
fmull
mov
cmp
jb
test
or
cmp
xchg
adc
dec
dec
jbe
jae
int
jge
inc
lock
xchg
scas
cmp
lret
fs
nop
dec
mov
inc
dec
fcomps
mov
add
xchg
aas
loopne
ret
loopne
jb
or
scas
sbb
stos
lret
sbb
outsb
pop
sti
out
iret
dec
inc
cmpl
mov
shufps
or
pop
es
push
sbb
test
xor
orl
aad
sbb
jno
jb
xchg
lods
mov
std
pop
xchg
lcall
stos
adcb
add
mov
cmp
gs
stos
fdivrs
mov
lret
sbbl
lea
js
cmp
push
fisttpl
addr16
add
dec
mov
jno
lret
pop
or
inc
cmp
mov
adc
mov
sub
jecxz
xlat
cltd
test
inc
xchg
cmp
in
or
rorl
or
jbe
les
insb
sarl
cmp
aad
sarb
mov
cmp
in
ja
mov
and
shll
or
scas
pop
sbb
iret
push
lods
push
jg
outsb
lret
and
gs
dec
xor
jecxz
pop
imul
mov
gs
xorl
jl
mov
stos
jo
mov
lcall
push
push
push
sbb
divb
xchg
xchg
imul
jge
mov
imul
mov
pop
inc
xchg
bound
addl
adc
mov
inc
outsb
sbb
inc
mov
push
aad
imul
inc
cld
add
jne
fistpl
adc
into
or
pop
mov
push
jecxz
stos
jmp
daa
pop
jae
push
aaa
xor
xor
arpl
xchg
add
xchg
mov
in
xor
dec
out
jecxz
pusha
push
rcr
fildl
and
or
mov
outsb
fmull
xor
xchg
add
bound
lds
mov
mov
push
imul
add
lods
or
jmp
sub
dec
mov
pop
xor
add
and
enter
sub
sbb
cmpsb
mov
mov
in
add
in
inc
into
xchg
adc
stos
or
inc
push
inc
xor
idivl
mov
ret
aas
clc
lret
add
add
lcall
clc
xor
enter
icebp
mov
push
cmc
add
cmp
add
mov
mov
add
jmp
sub
clc
flds
faddl
movsl
insl
cmp
clc
lds
dec
dec
xchg
test
mov
cmp
jne
and
mov
lods
out
add
test
mov
xor
jge
bound
jne
and
xor
sbb
cmpsb
xchg
ret
cltd
call
imul
ljmp
pushf
jnp
push
cmovae
jmp
mov
inc
adc
mov
xor
adc
les
jl
fmuls
out
inc
int3
call
mov
push
push
mov
cs
insl
movntps
inc
imul
popa
lock
jae
out
fimull
sbbl
fbstp
hlt
push
cs
pop
sbb
jp
or
mov
fdivrs
fs
sbb
fstps
fistpl
mov
in
push
loop
sbb
add
imul
loopne
daa
or
out
push
insb
add
jmp
push
xchg
xor
mov
push
dec
dec
mov
cld
sbb
gs
push
dec
cltd
mov
mov
data16
jb
fcoms
sbb
jmp
push
lods
add
loopne
shrb
outsl
push
sub
push
in
ficoms
mov
and
sbb
mov
bnd
mov
into
jns
bnd
or
push
rcrl
mov
push
aas
movsb
push
scas
stc
or
cmp
pusha
dec
movsb
xchg
adc
mov
pop
jmp
sbb
jno
sbb
les
pop
push
stc
cld
push
jle
inc
mov
pop
push
jns
cmp
fcomp
insb
jecxz
xor
in
cmpsb
add
or
rol
pop
xlat
sarl
mov
mov
roll
lods
inc
jmp
cs
mov
pop
or
jns
xor
sub
xlat
xchg
mov
xchg
mov
mov
mov
and
pop
in
mov
andb
adc
call
jge
xor
sub
gs
adc
sub
and
mov
in
data16
sub
mov
mov
mov
imul
inc
jo
or
ret
fs
inc
mov
pop
push
rolb
outsl
push
je
push
cli
xor
jnp
mov
insb
lcall
add
int3
aad
jno
int3
pop
outsb
xor
sub
imul
repz
or
pop
bound
adc
add
xlat
out
or
fstpt
xor
loop
xchg
shlb
jae
mov
fisttps
subb
cmpsl
inc
scas
test
xor
test
cmpsb
xchg
sbb
xor
ss
jnp
or
mov
adc
sub
jne
add
ret
mov
test
or
and
mov
adc
rol
jecxz
xchg
mov
cmpsb
mov
fstps
adc
cli
lcall
cli
outsb
aam
add
or
fdivl
sub
and
or
xor
cli
in
mov
icebp
xchg
in
push
jle
sub
enter
lret
cmp
xor
jecxz
and
and
cmp
push
jb
mov
sbb
or
cwtl
pop
jg
push
stc
sub
aaa
fdiv
insb
mov
or
dec
mov
insl
mov
xchg
push
pop
push
fwait
sub
push
jbe
push
sub
mov
imul
cmc
and
subb
rcrl
xlat
add
jecxz
jge
shrl
outsl
and
imull
lret
cmp
mov
arpl
aad
hlt
pop
jp
shlb
pop
and
inc
cmp
daa
jg
lock
das
cli
loopne
add
negb
loope
test
pop
subb
mov
add
gs
push
cmpsl
imul
dec
mov
aam
imul
cmp
ljmp
or
imul
fldt
jo
mov
mov
pusha
mov
jg
push
das
mov
and
push
mov
jg
cmpsl
mov
and
mov
push
inc
int3
mov
aaa
inc
cmp
cwtl
loop
outsl
adc
cld
mov
cmovnp
imul
call
aaa
cmpsb
push
adc
sub
mul
fistps
cs
enter
movsb
negb
jg
movsb
xchg
mov
in
push
cmp
sub
xchg
bound
jg
lock
push
mov
movsl
and
xchg
sbb
xchg
cs
mov
das
and
or
sbb
movsb
xor
insb
enter
fs
push
mov
enter
push
and
pushf
xchg
cmp
mov
jbe
mov
push
pusha
stos
in
subl
push
dec
out
sbb
sub
dec
sub
insb
pop
shl
iret
test
ds
sbb
mov
stc
lock
dec
cmp
pop
mov
pop
push
xchg
lods
adcb
or
in
push
mov
add
jmp
repz
mov
xchg
daa
jmp
jno
dec
rclb
cltd
add
int3
loopne
cmp
mov
out
xchg
pop
inc
mov
sub
imul
push
cmc
push
stos
outsb
aaa
jle
cmpsl
out
xor
jle
frstor
jecxz
push
cmc
cmp
lods
sbb
rorb
dec
cmc
xchg
test
push
dec
and
leave
lahf
in
add
rorl
repz
or
adc
mov
jmp
ret
ljmp
push
push
jo
xchg
push
inc
int
cmc
adc
fiadds
scas
or
or
sbb
xchg
mov
dec
pop
lret
add
mov
addr16
mov
and
mov
jg
jnp
cmp
push
push
bound
jmp
jbe
sbb
stos
mov
sbb
cmp
cmp
sub
hlt
or
add
cs
push
xorl
add
xor
stos
lret
push
jb
cmp
imul
jo
andl
inc
scas
xor
sbb
or
sbb
mov
lcall
add
xchg
cmp
sub
addr16
cmp
mov
sub
push
pop
push
jne
aam
jne
andb
inc
cld
out
push
dec
push
jmp
jns
mov
dec
jnp
or
aad
aaa
dec
imul
pop
hlt
xorb
scas
push
jbe
push
fstpt
dec
mov
sub
sbb
movsb
jo
xorb
testl
out
loope
cltd
fs
stos
xchg
or
mov
or
xorl
xor
sbb
inc
cltd
test
aad
sub
lock
xor
push
hlt
ja
inc
pop
call
mov
mov
mov
xchg
adc
mov
addr16
sub
dec
mov
imulb
and
out
stos
mov
jl
jg
adc
jmp
push
ss
scas
lret
outsl
inc
xchg
addr16
sbb
daa
mov
pop
push
cltd
outsb
aaa
dec
sub
cmovs
pushf
leave
jmp
add
aam
fcmovnbe
or
fcmovbe
data16
sahf
jl
testl
fs
xor
mov
movsl
cmp
adc
mov
addb
push
dec
jo
xor
fistl
in
dec
leave
ljmp
testl
enter
das
repz
add
stos
add
std
cmp
xlat
repz
stos
mov
test
mov
rorl
jns
pop
xlat
xlat
pop
add
jp
sbb
pop
inc
sub
test
rol
sbb
dec
loope
inc
or
mov
pop
rcrl
outsl
mov
sbb
cltd
pop
inc
sbb
dec
push
cmpsb
xchg
in
movsl
fstpt
jecxz
aas
pop
lret
out
xor
mov
outsl
aaa
mov
rorl
adc
aas
bound
repz
adc
aam
inc
and
sbb
cmp
xchg
jmp
shrl
lcall
dec
pop
mov
push
dec
add
outsl
out
cmpsl
xor
pop
int3
pop
cli
jnp
cld
mov
es
sub
inc
cmpsb
sbb
add
adc
mov
fmull
cltd
ficomps
push
or
add
pop
jae
lret
xor
mov
mov
inc
insb
xor
jae
scas
hlt
mov
add
dec
xchg
fbld
dec
ret
outsb
xlat
pushf
xchg
fwait
adc
ja
and
and
out
pop
mov
inc
jno
icebp
pop
and
fidivrl
incb
sti
std
or
into
fs
js
push
pusha
add
repnz
call
cmpsb
enter
fldln2
jnp
ror
adc
insl
lret
loopne
adc
adc
fisubs
popa
xchg
test
xor
mov
sub
into
fbld
adc
imul
test
popf
hlt
jno
std
lahf
or
mov
mov
idiv
sahf
cmp
icebp
or
mov
mov
aam
jmp
rcrl
mov
jnp
push
lret
stos
sub
add
push
cmp
repz
lods
mov
dec
in
jno
lahf
out
mov
and
lret
sbbl
xchg
bound
push
dec
cmp
clc
mov
sti
nop
daa
lahf
out
loope
fidivrl
addr16
sbb
cmp
sub
popa
jl
out
xchg
imul
fisubrl
mov
mov
loopne
shll
sar
xor
dec
loopne
push
xor
inc
sarb
pop
stos
arpl
mov
add
sbb
and
adc
mov
popl
movsb
dec
and
adc
out
arpl
and
mov
cltd
push
std
movsl
push
xchg
mov
sub
push
pusha
sbb
cltd
add
mov
add
xchg
jno
fwait
orb
clc
mov
mov
push
lahf
push
rorl
push
or
sub
and
mov
jecxz
aaa
iret
xor
int
push
mov
lahf
xchg
aas
in
outsl
add
mov
add
xchg
lods
jecxz
fnstcw
mov
mov
test
or
mov
pop
sub
inc
ss
lods
or
xchg
loopne
sbbl
out
bswap
jg
jae
dec
inc
aad
dec
mov
fsub
dec
repz
dec
mov
inc
cmp
mov
xchg
fstl
adc
test
addl
lods
xor
push
out
sub
sub
xchg
rol
push
mov
js
inc
lahf
imul
cmc
xor
ljmp
sbb
cmp
and
rcrl
xchg
mov
icebp
dec
inc
cli
fnstcw
sub
outsl
and
ljmp
jns
call
mov
mov
dec
movsl
mov
fwait
mov
mov
inc
adc
cld
add
outsl
fs
jp
xchg
std
mov
add
lcall
cld
or
shll
popa
xchg
add
jmp
inc
icebp
cld
fisttpll
shlb
xor
push
sub
in
repz
xor
mov
sahf
add
sub
mov
pop
xchg
pushf
fucomi
sahf
adc
leave
xchg
ret
sbb
xor
pop
subb
ljmp
and
jl
dec
dec
pusha
dec
xchg
mov
pop
mov
shr
das
aas
je
ljmp
push
mov
inc
out
xchg
mov
pop
mov
in
push
add
test
and
popa
pusha
scas
jo
mov
xchg
fimull
lods
or
scas
in
ljmp
sub
ds
jle
rcrb
add
push
dec
fs
in
xor
push
stos
sub
popa
aad
movsl
jb
pop
push
repnz
repz
shll
jecxz
dec
cmp
mov
jbe
jbe
aaa
xor
ret
popl
ljmp
and
xlat
andl
jns
dec
xchg
inc
in
cmp
mov
fwait
sbb
repnz
pop
lds
fimull
sbb
xchg
stos
cmp
test
xchg
jge
dec
loope
xchg
in
mov
rcr
hlt
aad
test
rol
fwait
sub
jbe
into
sbb
popa
or
mov
dec
data16
pop
pusha
aaa
in
mov
in
sbb
dec
fnstenv
dec
adc
xor
jg
jecxz
bsf
int3
inc
rorl
dec
push
repnz
jp
push
sbb
gs
fmul
pop
adcb
mov
jbe
jmp
xlat
in
daa
test
sbb
rorb
dec
arpl
add
ret
loopne
iret
and
and
fisubl
insb
xchg
sub
dec
inc
aas
sub
add
lahf
mov
sbb
std
xchg
jae
cmp
push
push
mov
test
lods
mov
xchg
notl
ret
std
mov
push
out
inc
push
loopne
loope
iret
pop
sbb
lea
jne
mov
pop
test
enter
outsb
mov
movsb
xchg
jbe
add
pop
push
cmpsb
xor
push
aam
xchg
mov
cltd
fcomps
aaa
dec
cmp
mov
notb
cmp
or
nop
imul
das
lret
xchg
adc
testb
stc
xor
fnstcw
cmp
lods
xchg
outsl
jecxz
mov
mov
jne
pop
sti
popa
jo
dec
iret
daa
jb
inc
lahf
mov
pop
pop
pop
iret
hlt
jg
mov
je
mov
rcrb
fsubrs
inc
leave
in
pop
xchg
jnp
push
lahf
cmp
repz
dec
fnstsw
cvtps2pd
cmp
out
adc
push
bound
out
inc
sub
xchg
lcall
bound
dec
aaa
fnstsw
mov
push
aam
sbb
scas
jae
scas
jnp
inc
adc
mov
lods
pushf
out
je
xor
mov
jno
mov
out
imul
stc
push
push
mov
les
outsl
ss
clc
mov
or
fsubrs
xor
xchg
xlat
jl
inc
out
inc
push
out
in
ret
adc
cmc
mov
outsb
and
push
mov
subb
xor
inc
nop
std
mov
push
jecxz
inc
sub
in
mov
xor
in
dec
scas
lahf
int
es
inc
and
or
lods
dec
int3
cmp
add
xchg
pop
mov
scas
ljmp
jbe
sbb
mov
mov
fs
jge
sbb
mov
sbb
sahf
shlb
push
out
inc
ss
ljmp
sub
inc
xor
nop
stos
ja
xor
add
lret
push
dec
push
es
aam
rcl
movsl
loop
arpl
lcall
mov
rcrb
sti
imul
mov
or
pop
lock
popa
jmp
js
orl
xor
inc
lds
jl
sub
addr16
imul
in
jmp
or
jae
mov
jl
test
jne
xchg
sub
sub
mov
int3
js
inc
push
dec
mov
xor
xor
dec
mov
aaa
push
ficoms
rclb
ja
dec
mov
dec
outsb
jmp
dec
addr16
inc
andl
