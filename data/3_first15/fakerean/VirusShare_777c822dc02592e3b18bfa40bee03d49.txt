sbb
add
mov
sbb
imul
and
push
or
xchg
or
ja
test
out
fcmovne
test
shll
inc
push
push
jns
push
adc
dec
and
push
cmp
sub
xor
xchg
int
or
jns
aad
add
mov
mov
push
in
lds
cli
sbb
or
ret
add
jo
and
in
in
fisttpll
lcall
sbb
sub
nop
lea
inc
lock
js
push
mov
jo
imul
mov
push
inc
xchg
in
jno,pt
pop
push
jecxz
pop
dec
inc
cmp
mov
cmp
cmc
push
lods
andl
push
call
sbb
icebp
pop
jnp
loop
dec
add
mov
popf
fstl
mov
add
or
jge
dec
sarb
jmp
adc
jne
repz
addr16
mov
test
xchg
sahf
jo
add
mov
fdivs
xchg
out
movsb
pop
mov
test
cwtl
xchg
dec
jne
pop
in
add
mov
jae
and
mov
mov
xor
pop
bound
aaa
xchg
and
cmp
inc
cld
inc
dec
shrl
add
xchg
or
jp
clc
xchg
out
xchg
mov
inc
xchg
ljmp
dec
sub
lds
xchg
sbb
fdivrs
stos
sub
rol
movsb
inc
xor
aas
and
inc
rclb
subl
inc
or
mov
mov
insl
shll
in
incl
fsubl
or
push
sbb
shlb
push
sub
or
in
test
daa
xchg
inc
adc
bound
jmp
jmp
or
lret
add
dec
sub
jge
adc
popf
inc
cmp
ds
aaa
lds
adc
xchg
je
lods
pop
cltd
add
loop
clc
cmc
mov
daa
rcrb
jb
fiadds
add
push
jae
call
loop
repz
adc
pop
xchg
mov
adc
inc
sub
arpl
flds
das
rorl
adc
push
sub
dec
push
add
cmc
enter
pop
pop
lds
adc
mov
stos
sub
popf
push
lock
mov
adcb
stc
jge
test
mov
mov
andnps
in
sbb
sti
and
mov
inc
outsb
jnp
ljmp
negl
orl
xor
fdivrs
pop
inc
or
ret
scas
add
mov
add
mov
jb
mov
pop
test
arpl
out
lock
test
jne
call
loope
pop
mov
jl
fcmovnb
movsl
popf
ret
jp
fwait
jmp
cs
mov
test
fldl
sub
xchg
dec
addr16
sub
call
pop
sub
hlt
jmp
xor
sbb
aas
pop
shrb
ljmp
int
loopne
or
mov
outsl
pop
or
mov
lock
cmpsb
sbb
aad
ffreep
cmp
inc
inc
lahf
subl
fs
shrb
cmpsb
push
sahf
or
xchg
gs
jge
lcall
cmp
xchg
xrelease
dec
je
mov
loope
push
dec
inc
aaa
vpperm
push
xchg
mov
les
inc
repnz
pushf
xor
and
push
ljmp
mov
lock
outsb
pop
mov
dec
inc
es
and
andb
lods
stos
shl
xor
push
or
pushf
adc
jns
adc
xor
xchg
jl
out
adc
jno
inc
outsb
adc
push
cmp
into
test
adc
or
ljmp
mov
mov
push
test
dec
scas
or
daa
dec
xlat
cmp
mov
test
shlb
loopne
lcall
adc
movsb
cmp
jbe
ja
jnp
fstp
jbe
mov
pop
daa
push
sub
incl
std
add
push
push
movsl
clc
repz
daa
mov
lahf
addb
mov
ljmp
iret
test
mov
imul
loopne
xchg
shll
mov
ljmp
les
and
mov
imul
scas
mov
or
mov
jmp
and
mov
sbb
clc
ljmp
mov
push
cld
arpl
dec
push
out
push
fmull
and
inc
stos
pop
xchg
mov
xchg
cmpsl
stos
loop
mov
xor
fcoms
lods
or
pop
cltd
test
jae
mov
inc
cmc
cmp
push
fcmovnbe
push
imul
mov
jmp
jbe
enter
sbb
sub
out
jb
shlb
dec
fs
ljmp
leave
cmp
push
je
arpl
push
fists
stc
inc
mov
jne
cwtl
or
in
movsb
shrb
test
aad
insb
es
popa
clc
repnz
fidivrl
adc
dec
aas
outsl
jns
push
pop
mov
push
aaa
xchg
cmpsl
push
push
popa
jno
lods
mov
aaa
cli
jno
jno
ja
push
and
inc
and
push
pop
jae
cmp
jbe
jbe
and
xchg
mov
xor
inc
mov
clc
and
std
or
outsl
mov
pop
in
cltd
push
lods
ljmp
or
jl
ljmp
ss
push
mov
pushf
push
pop
mov
inc
jmp
nop
jge
adcl
fmul
jle
enter
push
add
cmp
stos
cmp
lods
sub
cmc
std
popf
push
ja
sub
mov
test
pop
mov
push
mov
shll
dec
cltd
cltd
pop
das
pop
xor
data16
sub
adc
add
push
xor
dec
add
mov
or
jbe
je
mov
rorb
ss
mov
test
sub
into
inc
insl
push
cmc
and
add
mov
clc
xchg
test
cmpsl
ret
in
adc
or
mov
and
inc
jg
fisubrs
jns
pop
xchg
xor
hlt
jmp
xchg
enter
push
in
sub
movsl
outsl
jns
cli
gs
mov
pop
sub
pop
xor
xor
mov
or
nop
mov
loop
pop
add
ds
jb
cmc
and
jae
xchg
fnstenv
mov
pop
inc
or
lods
push
dec
andb
insb
sbb
inc
or
out
cmc
inc
je
test
loope
sub
shrl
icebp
daa
scas
leave
push
shlb
xchg
popa
ja
iret
repnz
pop
leave
mov
mov
and
out
xchg
mov
push
push
std
fisubl
in
pslld
mov
incl
mov
sub
sbb
and
fidivrl
jae
test
sti
push
imul
xor
orl
mov
sbb
mov
stos
xor
stos
mov
mov
fnsave
and
mov
hlt
jmp
pushf
scas
dec
xchg
icebp
jmp
jno
jg
ret
add
lods
inc
jnp
fiadds
imul
stos
adc
and
cltd
jae
in
sbb
clc
cs
add
dec
fidivl
and
mul
sti
dec
leave
ffreep
add
adc
mov
pop
push
call
jae
jbe
fldcw
jp
lds
sbb
pushf
ret
xchg
je
push
mov
xlat
sahf
loop
adc
and
out
dec
jo
adc
xchg
das
pushf
mov
cmpsl
pop
mov
sub
in
jecxz
sbb
mov
or
xor
or
or
pop
stos
jge
cmp
inc
in
inc
rorl
adc
out
lret
jno
mov
mov
xchg
or
push
bound
data16
test
fistpl
leave
xlat
push
cmc
sub
test
mov
out
idiv
hlt
and
mov
sub
in
fists
mov
push
xor
pop
jns
imull
jge
pop
stos
or
dec
in
xchg
sub
aam
mov
dec
sbb
fistpl
push
mov
sahf
adc
icebp
gs
into
inc
jl
movsb
ret
cltd
scas
xchg
in
adc
push
jbe
and
frstor
mov
notb
mov
ss
xor
jmp
push
jae
leave
push
mulb
sarb
notb
mov
xchg
sbb
inc
push
inc
or
scas
out
inc
dec
lahf
cwtl
test
sbb
jl
je
jo
mov
dec
lahf
sbb
enter
test
add
loope
lea
out
mov
dec
data16
les
xchg
lret
arpl
mov
mov
es
addr16
or
rorl
and
cmp
out
inc
mov
add
sub
out
daa
rcll
mov
mov
ds
ret
jmp
jbe
out
mov
ljmp
or
popf
test
into
data16
outsl
rorl
cld
cmp
cmc
mov
push
jne
push
xchg
pop
maxps
or
xchg
test
test
push
arpl
stos
mov
adc
cli
jecxz
push
mov
mov
cmpsb
mov
jecxz
xchg
or
sbb
jb
pusha
pop
ret
stos
jecxz
imul
xor
inc
xor
aas
imul
jb
inc
daa
add
out
inc
pushf
and
sub
adcl
fdivrl
xchg
loope
jns
stc
adc
cmp
gs
or
sbb
lods
aam
mov
fildll
pushf
mov
or
sahf
sbb
seta
sti
test
int
sti
pop
jbe
adc
adc
dec
pop
fadd
fimuls
into
shrl
pop
jecxz
pop
iret
pop
pop
add
mov
rcrb
cmp
mov
dec
loope
in
stc
push
and
test
int
shl
or
inc
cmc
or
jmp
or
xlat
cmp
int3
jl
mov
out
adc
mov
pushf
sbb
bound
subb
test
mov
push
push
xchg
mov
aam
loop
xchg
fdivrl
gs
mov
icebp
xchg
jp
mov
rorl
iret
mov
mov
mov
fisubrs
iret
mov
mov
sub
stos
stc
pushf
out
dec
sbb
lcall
lods
hlt
testb
pop
hlt
or
repnz
sub
pop
cmpsl
fldl
xorb
cmp
int
imul
jno
rorb
roll
xchg
aaa
sbb
cmpsb
sub
iret
and
aas
mov
incb
shlb
xor
mov
push
out
xchg
mov
clc
clc
aas
inc
test
sahf
mov
jne
mov
aad
add
mov
push
or
test
add
jae
unpcklps
mov
mov
std
inc
mov
stos
jle
ja
leave
cmp
jge
inc
das
or
xlat
mov
shrl
dec
inc
xor
mov
push
in
aas
dec
mov
rolb
mov
add
fcoms
mov
iret
jmp
mov
dec
xchg
lods
outsl
adc
mov
sbb
add
xor
push
sub
adc
in
in
xchg
fadds
sbb
mov
jle
mov
jae
mov
in
mov
xchg
push
sbb
sbb
dec
insl
stos
test
mov
in
sti
sbb
jo
test
sub
jae
aas
adc
enter
sub
xchg
mov
push
repnz
dec
mov
sbb
dec
sbbb
cmp
xor
int
popf
les
jl
pop
and
aaa
test
loope
push
and
lret
mov
xor
cmpsl
stos
or
cwtl
xchg
jno
aaa
sbb
int3
out
pop
mov
fs
insl
outsl
gs
lods
sbb
repnz
hlt
mov
cmp
dec
push
ds
in
scas
sbb
jnp
daa
call
or
or
imul
hlt
lret
add
mov
pop
dec
mov
pop
mov
mov
out
hlt
adc
jl
xchg
sbb
sub
scas
sub
test
test
frstor
ja
ja
shr
cmp
pop
jmp
call
lds
jb
sub
out
inc
push
push
lret
sarb
pop
jbe
ss
pop
ret
sbb
loop
das
inc
cmpsb
aad
mov
in
push
je
iret
lods
fildl
cmc
cmpsb
into
xchg
adc
dec
or
bound
cmp
add
lods
cmpb
jge
test
xor
lcall
cmc
les
xchg
mov
aam
iret
pop
mov
fbld
cmp
jns
shll
xchg
outsb
sbb
inc
inc
das
clc
lds
jb
xchg
xchg
sbb
xchg
int
inc
cltd
inc
pushf
inc
sahf
movsb
cmp
jae
loop
aam
mov
cmpsl
mov
cmp
dec
mov
xor
xorl
jnp
hlt
outsb
ds
xlat
insb
push
jnp
out
bound
adc
imul
cmp
or
mov
jge
or
add
cltd
sbb
cmpsl
lahf
push
in
and
jg
jp
mov
inc
mov
lret
cmp
lea
or
push
lret
lahf
jp
dec
mov
xor
out
loope
xchg
std
inc
ficomps
ret
jne
cmp
or
rcll
test
sub
push
out
les
movsb
or
xor
pop
mov
jge
mov
cmp
or
mov
je
mov
mov
cltd
jg
ret
iret
jne
jbe
push
pop
test
dec
addr16
shl
int3
sahf
les
xchg
sub
sbb
mov
jnp
pop
adc
inc
aas
and
test
xor
pop
shl
test
adc
insb
xchg
push
add
inc
cmpsl
iret
inc
mov
inc
test
push
mov
mov
lret
mov
stos
rolb
fwait
out
pop
in
pop
mov
ret
cld
add
adc
inc
nop
movsb
int3
ret
andb
xor
mov
cmp
cmp
sbb
outsb
pop
push
push
cmpsl
inc
imul
jmp
aad
jmp
adcb
fsubl
sub
cltd
cmp
std
fnstenv
dec
dec
js
mov
stos
enter
dec
push
cmp
and
push
xchg
mov
aam
mov
sbb
nop
add
arpl
and
sub
fwait
imul
iret
loope
aas
rcrb
in
and
bound
jae
popf
aad
in
push
jecxz
mov
mov
inc
xchg
mov
cwtl
push
adc
in
insb
stos
xchg
call
insb
test
adc
stc
clts
std
aad
fsubrl
jne
xchg
testb
sbb
push
xchg
imul
arpl
roll
dec
lods
and
sahf
sub
inc
xchg
push
xchg
js
outsl
mov
and
rorl
push
aad
dec
mov
xchg
ret
mov
mov
dec
push
pop
dec
scas
call
leave
and
and
jbe
pop
scas
scas
push
movsl
mov
mov
inc
sub
sub
sbb
sti
push
nop
xorb
stos
push
arpl
ljmp
sbb
test
subl
push
mov
cs
rol
xor
jnp
in
cli
and
add
test
mov
add
cmp
aad
lcall
cmpsb
add
shll
adc
clc
sbb
or
aad
popf
out
pop
cs
imul
shlb
test
mov
jg
mov
adc
in
cmp
xchg
pop
push
pop
adc
jmp
icebp
jo
mov
sub
cld
mov
rcl
xchg
loop
push
sbb
aaa
sets
pop
les
jb
lods
inc
inc
add
scas
add
test
out
jp
pop
inc
fnsave
dec
andl
in
out
popf
jl
pop
fmul
hlt
xor
and
push
rorl
pop
push
addb
in
fildl
sbb
cmc
push
push
test
jmp
out
ds
push
icebp
pushf
cld
and
sbb
repnz
leave
cmp
js
inc
jmp
dec
in
fdivr
call
nop
test
jle
and
mov
sbb
mov
lret
rorb
jle
mov
add
or
clc
rolb
loop
adc
xchg
adc
xchg
dec
clc
mov
ja
sahf
cmp
xchg
push
cmp
jl
xor
aaa
pop
insb
cmpsl
cli
sahf
out
into
xlat
aad
jmp
repz
fidivl
hlt
stos
out
les
sub
mov
testb
rol
iret
out
ret
adc
mov
mov
movsl
add
das
dec
repnz
mov
push
sub
ror
repnz
test
pushf
push
fsts
inc
clc
idivb
pop
pop
shrb
es
jo
outsl
pop
xor
lcall
fcoml
call
add
or
pop
mov
sarl
test
push
or
cld
sti
hlt
push
mov
xlat
outsl
sarb
dec
xor
xchg
sbbb
pushf
lea
lock
ret
mov
mov
dec
mov
xchg
jmp
adc
add
dec
imul
and
or
insl
dec
ss
xchg
mov
lret
popl
dec
outsl
in
mov
sar
inc
jbe
test
enter
xlat
fwait
call
popf
jmp
fistps
das
scas
xchg
add
leave
lods
dec
push
xor
mov
lods
imull
fdivrs
pop
jns
pop
loopne
cmp
push
sbb
es
cmp
in
jmp
movsl
and
sbb
inc
test
or
sbb
add
ja
test
clc
mov
xchg
xchg
lahf
mov
mov
sub
add
dec
mov
cli
xor
mov
hlt
repz
mov
repz
mov
adc
movsl
xor
mov
mov
pop
cmpsl
pop
xor
or
enter
sbb
sub
addr16
es
mov
je
jo
lcall
sbb
inc
in
icebp
jecxz
daa
xchg
pop
xor
and
arpl
xchg
adc
pusha
or
iret
gs
dec
jns
xchg
inc
pop
jge
fimuls
push
lods
mov
lock
and
into
mov
xor
xchg
popl
pop
cmp
or
mov
call
psubsb
and
fdivl
imul
cltd
aam
mov
sahf
push
out
sbb
into
mov
add
ds
jecxz
cmc
and
icebp
sub
xchg
pushf
inc
or
cmp
insl
inc
jecxz
fiaddl
add
pop
iret
addb
push
push
push
out
fs
std
cmpsl
call
pop
add
and
pop
lods
add
cmpsl
stos
cld
push
adcb
and
fstp
loopne
push
rol
loopne
hlt
stos
mov
popf
orl
mov
stos
pop
dec
cltd
dec
mov
jmp
mov
scas
fxam
mov
jg
es
xchg
shlb
mulb
sub
clc
or
ret
or
outsb
cmp
mov
push
notb
call
xor
sahf
rol
mov
ja
jmp
mov
dec
push
dec
add
int3
shll
adcl
int3
mov
add
xchg
mov
rcll
sbb
or
stc
std
pop
shrb
cs
arpl
or
mov
cltd
mov
or
sbb
jmp
pop
test
ret
push
ja
lcall
and
in
mov
ss
mov
sti
mov
lahf
movsl
mov
mov
sbb
cmp
iret
adc
cld
sbb
movsb
sub
loopne
call
movsl
mov
or
and
push
push
push
jns
mov
cwtl
cld
cmp
lret
orl
rcr
inc
mov
mov
rcrl
test
xchg
decb
insl
pop
rclb
loop
jge
jmp
adc
jge
inc
adc
pop
pop
cmc
insl
rolb
movsb
or
dec
je
mov
sub
and
and
adc
cmpsl
mov
inc
sub
test
mov
adc
add
ret
jecxz
fnsave
es
std
es
lret
into
or
cmpsb
mov
mov
pusha
bound
push
es
xchg
and
dec
mov
sbb
repz
jmp
gs
xlat
mov
adc
in
ret
pusha
popa
xorl
mov
and
xor
add
sbb
mov
jge
add
hlt
int3
in
sbb
dec
arpl
popa
testl
mov
inc
push
mov
lret
xor
iret
push
lret
cs
icebp
mov
aad
sarl
xchg
xchg
cmp
arpl
lret
movsb
inc
or
jp
dec
nop
enter
lret
aaa
xorb
jo,pn
push
cmpsl
jno
inc
loope
int3
pop
sub
jnp
aad
int
mov
lret
xchg
cwtl
mov
xor
lock
fs
lahf
mov
fisttpl
dec
rorl
push
stos
call
xor
pop
xor
mov
daa
sbb
std
cld
mov
xlat
ret
mov
iret
jo
xchg
sub
les
movd
inc
imul
in
mov
lods
push
push
push
sub
rcrl
fnstsw
jmp
decb
pop
loopne
insl
cmp
neg
push
pop
pop
cmp
adc
std
sub
inc
xchg
data16
in
lahf
popa
pop
dec
and
int
test
push
pmuludq
data16
cli
cmp
sbb
or
imull
sub
pop
mov
jmp
roll
icebp
pushf
aam
pushf
not
dec
mov
push
rcr
outsl
sbb
or
inc
mull
adc
dec
pop
bound
cmp
sub
sub
mov
addr16
mov
fcoml
sbbb
inc
and
jp
push
mov
shl
mov
jns
and
cs
hlt
out
add
xchg
cwtl
push
push
stc
div
adc
jg
mov
push
cld
inc
push
pop
mov
adc
xchg
cmp
jmp
and
sub
aaa
or
fisttpll
outsb
sbb
mov
sub
movsb
movsb
or
jecxz
push
bound
cmp
inc
push
popl
into
inc
dec
pop
test
cmp
xchg
mov
sti
sahf
jp
jle
movsl
push
push
dec
cmp
test
pop
ljmp
xorl
mov
pop
mov
xchg
dec
loope
fidivs
popf
out
es
test
rcrb
addl
xor
inc
jo
popf
mov
jp
and
jl
inc
shlb
mov
xor
xorl
out
jns
cltd
in
iret
fs
std
les
cmp
sub
popf
cmp
mov
std
cmpsl
in
cmc
inc
aaa
loope,pn
out
stos
jecxz
xchg
and
mov
int
rorl
jno
andb
je
addb
loopne
add
inc
or
out
push
mov
in
adc
cmp
shlb
ja
xlat
xchg
insl
ret
cmpsl
les
shll
mov
mov
mov
sbb
and
ror
pop
dec
and
push
dec
dec
fmul
imul
sahf
xchg
ret
call
call
int3
leave
hlt
cltd
test
in
pop
outsb
movsl
outsb
adc
stos
and
cltd
pop
xor
pop
ror
test
pop
js
outsb
daa
sbb
jb
sahf
cmp
push
jno
cmp
ret
dec
mov
scas
sub
insb
dec
and
ss
dec
sahf
mov
shlb
pop
push
stc
stos
mov
xchg
or
sti
or
or
out
xchg
xchg
outsl
gs
inc
jb
imul
stos
ss
add
icebp
mov
call
imul
pop
int3
or
push
jns
cmp
cmp
mov
jmp
test
cld
loop
addl
dec
add
andl
or
inc
mov
and
sahf
js
push
roll
scas
in
xchg
add
outsb
and
mov
push
jecxz
imul
fimull
and
aam
mov
repz
cli
popf
cmpsb
add
arpl
je
pavgb
shr
call
int
add
mov
addr16
cmp
push
ljmp
xor
cmp
shrl
pop
call
add
mov
outsb
loop
xchg
aaa
ret
sub
mov
jae
in
test
mov
pop
call
inc
xor
push
mov
cmp
out
push
sbb
inc
push
fcmovnbe
sarb
or
data16
or
jnp
fidivs
cli
adc
sub
test
aaa
ret
pop
sti
jge
inc
scas
or
insb
mov
push
or
xchg
adc
lret
call
sahf
insb
pusha
dec
ret
lea
dec
loope
push
inc
ds
add
mov
jmp
pop
lds
fists
std
adc
sub
fwait
test
movsl
pavgb
sbb
dec
inc
lret
xchg
sbb
mov
cltd
stos
cmp
ljmp
adc
int3
aas
jnp
lret
mov
addr16
rorl
insl
or
aam
mov
adc
dec
lret
cmp
fldenv
scas
dec
or
lret
push
mov
push
lret
loopne
fxch
aaa
jne
loope
leave
lcall
dec
dec
pop
fistps
sbb
fnstsw
fsubrs
andl
lret
push
push
enter
xchg
or
xchg
sub
bound
cmpsb
rclb
dec
bound
fwait
jb
shlb
mov
pop
rcl
mov
jp
insb
xchg
sbb
mov
sbb
pop
cmovb
call
int3
xchg
mov
pushf
mov
or
test
dec
fcompl
sub
imul
xchg
add
fnsave
xor
push
or
ds
lret
stos
hlt
outsl
inc
xor
adc
stos
jg
rcr
push
rol
shl
pop
aas
orl
ss
inc
jno
mov
pop
push
or
cs
jl
adc
sbb
cwtl
pop
jp
ljmp
add
pop
ljmp
xchg
sbb
stc
test
or
shll
jge
jp
mov
addr16
aad
xchg
cltd
cltd
dec
mov
andl
sub
mov
jb
push
outsb
mulb
xlat
nop
in
mov
lods
pop
cmp
sub
addr16
mov
gs
sub
inc
lods
clc
aas
int
clc
in
or
sbb
jbe
inc
sbb
pop
pop
gs
pushf
faddl
je
pusha
sbb
and
adc
lds
inc
mov
ja
cmpsb
jne
int3
push
dec
rcrl
or
leave
fcoms
test
sbb
adc
or
xchg
cmc
mov
mov
das
lcall
mov
ret
sahf
push
xchg
lret
jg
push
leave
arpl
sahf
sub
mov
lock
cmc
rclb
popf
scas
sbbb
push
jecxz
out
fisttps
pop
shl
cmp
add
sub
lock
arpl
mov
add
jg
xchg
enter
sar
mov
test
jb
mov
pop
mov
loop
xchg
out
sub
fadds
gs
mov
push
dec
addr16
mov
push
mov
scas
pop
repz
mov
lods
mov
daa
pop
sub
pop
pushf
in
add
dec
pop
mov
movsb
pop
fimull
std
pop
jecxz,pn
mov
lds
ret
aaa
push
pop
hlt
cmc
iret
je
gs
addl
roll
push
mov
cmpsl
mov
or
pop
and
add
dec
repz
test
sti
cmpsb
sarl
pop
add
int3
push
jb
pop
mov
mulb
sbb
into
movsb
adcl
enter
lahf
enter
fwait
popf
pop
jmp
lcall
adc
xchg
and
outsl
add
push
scas
cmp
pop
add
mov
adc
dec
iret
fisttpl
jecxz
mov
xchg
cld
jle
test
popf
push
push
jae
mov
or
in
pop
cwtl
xor
leave
dec
outsb
ficoms
fadds
lret
xchg
into
xchg
nop
stos
add
rol
out
rolb
mov
adc
mov
pop
xchg
stos
dec
cmpsl
dec
in
xchg
repnz
ljmp
stos
mov
cmp
in
sub
insb
jmp
imul
jnp
imul
sub
shll
daa
pop
daa
adc
add
sarl
mov
cli
test
lods
push
push
cmp
in
push
push
bound
pop
or
mov
dec
cmp
shrl
cmpsb
and
jmp
pop
lods
jg
adc
imul
and
das
int
pop
ret
inc
xchg
stc
adc
push
cmc
pop
out
mov
mov
dec
cmc
jno
outsl
cmp
arpl
push
xchg
sub
movsl
and
adc
cmpsb
push
add
jle
shll
fisttps
xor
lcall
xchg
out
xchg
pusha
aas
sarb
add
enter
dec
movsb
mov
dec
and
inc
push
mov
pop
out
xchg
mov
cmp
pop
jae
ds
mov
mov
jg
sbb
call
rolb
idiv
lock
sbb
outsl
mov
fstps
dec
lods
xor
aas
lock
xor
in
hlt
stos
fwait
pop
or
lahf
adc
push
out
loopne
mov
sub
in
repnz
mov
jae
xlat
inc
and
jp
inc
fdivrl
cltd
mov
insb
cs
enter
stos
imul
mov
mov
std
in
mov
mov
mov
adc
mov
adc
cmp
dec
pop
xlat
xor
mov
das
cld
je
hlt
cmp
dec
ret
or
movsb
adc
inc
cmpsb
add
mov
std
push
sarl
aas
or
imul
jg
rclb
add
or
imul
mov
and
mov
mov
mov
sub
jns
sub
inc
pop
aam
out
mov
mov
dec
or
stc
push
lods
and
dec
and
stos
push
sti
enter
mov
enter
pop
bound
cs
dec
sarl
pop
cltd
cmpsb
add
outsl
xchg
daa
fsubl
mov
and
inc
sub
sti
and
mov
lret
aad
daa
jecxz
dec
je
stc
and
lret
adc
out
push
sub
dec
mov
cmp
mov
std
daa
popa
dec
push
push
adc
pop
or
add
jmp
mov
loop
mov
aas
pop
stos
dec
jo
push
xor
or
stos
sbb
xor
xchg
mov
lock
inc
enter
aaa
push
mov
orl
jecxz
cmp
xor
fsubrs
out
add
adc
rorb
popa
or
add
loope
lret
xchg
cs
cmp
push
leave
and
sbb
add
xchg
test
cmp
outsl
push
jb
adc
pop
popa
add
mov
sbb
adc
mov
mov
dec
cwtl
fdiv
xorl
imul
adc
pushl
inc
aas
jge
cld
fisubrl
mov
mov
rorl
jo
adc
repz
and
jmp
outsl
sbb
lcall
add
jmp
sbb
inc
lods
mov
dec
inc
dec
mov
mov
hlt
js
lds
cmpsl
nop
mov
sbb
xor
fmul
dec
mov
fiaddl
mov
incb
scas
add
std
add
lds
and
decb
xchg
and
mov
mov
out
or
push
or
adc
push
mov
or
mov
xchg
imul
xchg
mov
cmp
ficompl
push
sbb
jl
xor
mov
mov
lock
xchg
push
mov
lcall
jno
and
pop
js
les
cmpsb
or
dec
mov
test
push
jp
inc
cmp
js
jae
sub
pop
lods
loopne
mov
jle
cld
jbe
mov
push
sub
or
pop
test
das
jb
rorb
repz
mov
ret
xchg
pop
mov
push
in
push
or
orl
sub
push
push
lds
mov
push
cld
hlt
bound
mov
xchg
pop
fwait
mov
and
clc
hlt
fldenv
pop
sub
lahf
es
xchg
or
pop
insb
cmp
and
and
sub
fiadds
inc
jge
sbb
mov
dec
sub
mov
mov
mull
in
adc
mov
out
mov
cs
daa
mov
xchg
popa
mov
ds
mov
xor
xor
cmp
aam
mov
inc
push
cmp
mov
inc
lea
icebp
push
push
mov
ljmp
call
lcall
scas
lds
mov
cmp
sahf
and
jbe
sub
dec
outsl
dec
cwtd
mov
in
icebp
gs
rcrb
jl
dec
or
fwait
testl
push
rorb
xchg
and
lds
int
mov
or
mov
inc
bound
rcr
inc
out
jmp
aas
clc
jl
add
std
fists
mov
js
push
loop
mov
ss
pusha
xchg
add
int3
mov
and
add
or
mov
inc
xchg
jge
cltd
push
pop
mov
jae
fistl
lahf
xor
adcl
fimuls
and
and
dec
adc
push
mov
aaa
lock
aas
rcrb
mov
aam
add
movsl
push
inc
push
or
sub
mov
rol
pop
cmp
stc
insb
pop
sbb
popa
xchg
push
and
xchg
je
add
fnsave
jp
jmp
movsb
lock
cs
shrb
pop
js
bound
mov
xchg
mov
scas
fucomi
or
unpcklps
fimull
repz
xchg
push
fucomip
movsl
mov
cmc
sti
add
int
push
mov
int
mov
pushf
cltd
xor
xchg
and
add
hlt
and
pop
jae
mov
ljmp
popa
lock
add
lds
in
jbe
mov
mov
testb
sbb
test
mov
xlat
mov
jmp
fstl
popf
sti
js
sbb
push
and
mov
sub
jbe
and
mov
mov
sub
mov
sti
dec
in
dec
inc
sub
push
test
into
jl
enter
int3
aad
sbb
imul
dec
adc
pop
mov
aam
int
sbb
loopne
faddl
loopne
pop
lods
orl
stos
loopne
lds
and
aad
xchg
ret
pop
mov
es
aam
add
leave
scas
aam
out
and
mov
or
ljmp
cld
xchg
loopne
lahf
xor
mov
inc
in
push
lahf
test
mov
add
push
ret
and
xchg
cmp
loope
jecxz
mov
ja
rcll
push
nop
pushl
pop
xor
test
pop
jns
mov
pop
std
xlat
mov
push
mov
or
maskmovq
divl
jl
clflush
gs
xchg
shrl
dec
mov
loope
shrb
mov
cmc
pop
imul
mov
pop
jb
inc
cmpb
js
into
xor
out
aas
stos
das
iret
bound
jnp
jecxz
adc
xor
xchg
repz
orl
xchg
mov
addr16
int3
in
pusha
es
or
jge
popa
rcl
or
jp
filds
lahf
mov
jp
dec
jle
subl
and
xchg
pop
fadd
into
jno
sub
jo
ja
scas
popa
jae
sub
in
sbb
shlb
or
shll
sbb
sti
jnp
aas
jb
pop
xchg
ja
sbb
jns
and
sti
inc
xchg
jae
aad
cmc
call
out
sti
bound
std
dec
push
cmp
shr
pop
stos
cmp
push
outsb
push
jecxz
lahf
pop
mov
enter
mov
inc
jp
bound
mov
in
xor
fstpl
jmp
imul
mov
push
lock
pop
jb
rcrl
fsts
lret
mov
lret
shl
int3
mov
test
and
insl
cmovbe
lds
add
aam
test
adc
icebp
cmp
fsubrp
inc
or
sbb
or
fcmovnbe
ret
fs
xchg
jbe
repz
mov
inc
xor
into
bound
leave
clc
insb
ja
adc
fistps
in
and
sbb
clc
sbb
adc
inc
add
adc
jge
pusha
into
pop
xor
push
cmc
sahf
loopne
adc
mov
mov
aaa
rcrb
mov
jb
mov
xor
leave
mov
sub
lcall
adc
push
mov
jb
mov
push
stos
cmc
pop
shlb
into
sbb
orl
into
loopne
cltd
scas
aam
pop
fxch
aam
sbb
xchg
aam
xchg
lea
inc
ret
cmp
push
ljmp
rolb
mov
shrl
mov
cmp
repnz
mov
fwait
and
cmp
in
mov
in
add
dec
stos
mov
ret
push
jb
adc
sub
mov
cmp
push
mull
test
mov
lret
leave
shll
mov
cltd
sarl
scas
push
lahf
mov
test
fdivrs
fldt
in
cmp
nop
sub
cmp
cmp
push
mov
or
scas
in
adc
loop
mov
popa
cmp
fcoml
and
imul
mov
mov
push
mov
mov
mov
testl
inc
mov
jbe
push
add
adc
add
les
fisubl
icebp
pop
jg
rcrl
push
mov
das
or
test
and
fucomip
mov
imul
std
cmp
movb
addl
mov
push
fcmovnu
ds
loope
call
mov
or
push
cmpsb
mov
mov
xor
repnz
lods
pop
adc
mov
push
inc
repz
pminub
mov
cwtl
jo,pt
adc
popa
mov
or
jl
adc
push
mov
in
push
outsb
pop
rcrl
push
cli
or
mov
out
lret
adc
dec
out
adcl
pop
jl
in
jmp
add
dec
ret
out
push
ss
jge
mov
push
jmp
in
pop
fdivr
sub
mov
add
sbb
rcrl
push
or
testl
sub
scas
cltd
jne
sbb
xchg
insl
int3
adc
and
dec
inc
repnz
in
inc
mov
pop
or
adc
cs
mov
mov
jge
aaa
js
jbe
cmc
pop
sub
xchg
scas
sbb
popaw
pop
mov
or
mov
test
pop
stos
mov
cmpsb
ja
lahf
push
dec
mov
sbb
out
test
aas
sysexit
and
adc
sub
push
inc
xchg
cmp
std
add
xor
das
or
addr16
and
pop
mov
dec
iret
sub
sub
sub
jne
cmpsl
sbb
push
xchg
insl
cmpl
popl
xor
xor
inc
fsubrl
push
adc
adc
rcr
lcall
jmp
xchg
ret
out
movsb
in
jmp
daa
push
stos
xchg
dec
lcall
add
scas
lret
sbb
cld
xchg
mov
dec
hlt
insl
scas
or
mov
insb
scas
nop
int
sbb
jb
aam
push
scas
add
xchg
add
jle
xchg
sub
xorb
movsl
or
bound
adc
ret
addr16
fidivrl
push
imul
popa
sti
insb
mov
adc
iret
loop
loope
lahf
mov
stc
test
aad
pop
stos
fdiv
mov
push
mov
adc
aaa
sbb
mov
pop
aad
fwait
and
sti
std
pusha
bound
push
push
aad
test
into
aaa
test
cmpsb
test
mov
push
push
lds
or
push
lods
lret
xchg
movsl
mov
inc
pop
mov
jae
or
pop
mov
outsl
andl
or
sub
or
jp
xchg
pop
cmpb
xchg
out
dec
adc
pop
sbb
mov
push
or
pop
cmp
scas
pop
and
scas
xor
sub
test
dec
pop
loop
jecxz
and
or
xchg
insl
push
and
mov
pop
repnz
pushf
movsl
add
repnz
or
sub
test
add
mov
std
repnz
test
test
cmp
inc
fsubrs
mov
inc
pop
nop
fucomp
dec
arpl
mov
dec
cli
mov
clc
sub
fcomip
ds
mov
mov
xchg
mov
inc
movsl
xchg
outsb
out
lods
push
aas
call
jns
shl
sub
das
lahf
enter
out
aad
adc
mov
inc
lret
subl
stos
cmp
jecxz
in
lea
add
mov
cld
xor
mov
dec
mov
lcall
sbb
mov
xchg
jno
cltd
dec
pop
jbe
dec
mov
pusha
stos
subb
lahf
movsl
out
iret
mov
mov
sti
xchg
cmp
xor
mov
pop
cmp
scas
adc
jecxz
es
mov
pop
imul
fdivrs
rorb
xchg
daa
insl
lea
mov
mov
dec
sub
clc
in
xor
pop
push
icebp
and
cmp
loopne
repnz
shrl
and
lds
ds
sarb
dec
sbb
mov
jecxz
enter
inc
ret
out
xchg
xor
mov
xchg
rolb
in
ja
int3
jno
repz
sub
lret
jl
mov
call
jns
pop
addr16
jae
mov
imul
js
pop
xor
sbbl
gs
add
mov
pop
jge
add
sbb
outsl
out
fwait
gs
out
add
aam
repnz
icebp
mov
cmp
insl
jl
jge
lcall
cmp
adc
mov
pop
inc
dec
jle
leave
adc
add
mov
ds
add
jecxz
ss
out
cmpsl
ljmp
inc
pandn
fwait
mov
cmpsb
mov
cmp
sub
adc
int3
jo
shll
push
xor
lods
jp
and
inc
std
mov
bound
pop
ljmp
mov
cmp
sbb
inc
push
push
add
out
out
es
fidivl
lods
dec
out
mov
mov
pusha
ja
jbe
pop
mov
xor
dec
mov
pop
cmp
cmpsb
dec
mov
je
sub
aam
lahf
fmull
push
daa
add
and
cmpb
jle
xor
arpl
jp
xchg
xor
insb
aam
add
insl
push
inc
mov
dec
adc
scas
mov
ror
push
xchg
lahf
leave
out
dec
into
xchg
mov
mov
mov
push
sahf
idivl
add
push
pop
xchg
mov
sbb
arpl
movsb
out
out
scas
aam
stc
adc
jns
and
popf
mov
push
cmpsl
mov
lea
inc
scas
les
sbb
int3
adc
push
int
sbb
mov
and
movsl
bound
push
push
pop
arpl
adc
cli
gs
mov
js
in
cld
je
adc
dec
iret
mov
mov
jg
aad
ljmp
adc
jmp
pusha
dec
ljmp
sti
mov
mov
dec
ss
insb
sub
jne
rolb
out
jnp
push
jb
popa
xchg
jecxz
shll
adc
jno
jge
pushf
into
sub
cs
xor
sahf
mov
sbb
repz
jnp
xchg
cwtl
cli
leave
fimuls
cmc
mov
xchg
lds
mov
es
mov
test
mov
jle
and
daa
cltd
repnz
jp
jbe
cmp
add
int3
movsb
xlat
fsub
sar
stos
add
lock
lea
and
jl
sub
jmp
inc
ss
pop
ret
push
shlb
rol
pop
aam
add
sub
stc
cli
fcmovnu
sahf
icebp
adcb
ds
gs
cwtl
mov
lea
rorb
test
mov
hlt
fdivrl
pop
insb
in
mov
and
push
nop
push
fistps
jae
mov
std
dec
out
ret
xor
mov
and
loopne
rolb
dec
mov
or
mov
push
pop
es
loope
inc
xor
adc
lods
sub
andb
xlat
int3
fucomp
bound
sub
sahf
jns
xchg
rcrl
mov
cltd
dec
icebp
cmp
dec
jo
gs
or
aaa
out
dec
sub
addr16
lock
movsb
orl
addl
lea
xchg
add
sub
cmp
insb
call
mov
sti
lahf
test
pop
xor
ror
adc
in
rolb
std
xchg
jge
fwait
cmp
scas
cmp
jae
daa
mov
xor
movsl
stc
lcall
fsubrl
shrb
pop
cwtl
adc
or
xchg
addr16
add
popa
or
hlt
jmp
divb
cwtl
js
in
mov
cmp
mov
jl
fldt
xchg
lret
in
push
pop
pop
dec
cmp
rorl
or
cmp
pusha
mov
pop
mov
sub
xlat
inc
push
mov
sbb
cmp
mov
mov
pushf
dec
mov
or
ljmp
mov
or
test
das
push
loope
xor
bound
lea
ljmp
notl
add
shll
cmp
mov
pop
aas
adc
leave
pop
sub
ret
and
inc
in
xlat
rol
aad
rcrb
lahf
xchg
lds
andb
push
stos
and
sbb
or
leave
test
dec
xchg
push
cmp
push
pop
shl
cwtl
push
lods
jno
shrl
loopne
lods
fwait
dec
and
jl
test
and
pop
inc
add
sbb
jno
xchg
xor
scas
loop
nop
pop
mov
rolb
inc
into
daa
sub
icebp
adc
fldl
mov
mov
repz
aam
pop
enter
subl
jmp
sbb
loopne
add
popf
or
dec
ds
mov
mov
xchg
test
mov
cltd
mov
lds
push
sub
mov
scas
push
sub
cwtl
test
mov
adc
xchg
adc
sub
xor
jge
test
dec
xor
imull
bound
lds
aaa
js
shll
lds
hlt
idivl
pop
loopne
adc
push
ja
sbb
inc
xor
cmp
popf
add
mov
dec
daa
xchg
stos
test
push
test
inc
adc
inc
imul
add
sub
mov
std
dec
cmp
pop
pop
jle
divl
and
fiaddl
dec
arpl
dec
dec
mov
stos
outsl
and
cwtl
jmp
cwtl
clc
ret
jns
out
sub
add
cltd
sbb
xlat
jl
and
xchg
popa
cmp
jl
rcll
pop
popa
sahf
pop
cmpsb
aaa
inc
loope
and
in
cmp
lods
mov
int
imul
sub
xchg
test
cli
sti
push
fnsave
sahf
mov
pop
cmp
ficomps
inc
fwait
or
arpl
jg
dec
movsb
sub
int
bound
jp
mov
loopne
mov
mov
imul
imul
push
mov
xor
jg
clc
jns
enter
mov
lods
inc
shll
xchg
ss
test
sbbb
cld
and
and
xor
data16
pop
icebp
or
out
fadd
dec
xchg
cmp
push
mov
and
lret
add
cmc
or
inc
inc
inc
or
repnz
pop
inc
sub
stc
push
xchg
cmp
lret
pop
push
cli
loopne
sub
xchg
add
mov
fistl
mov
movsb
je
jle
mov
xchg
sbb
into
sub
cld
dec
cmp
imul
mov
test
sbb
iret
add
mov
push
mov
push
pop
and
cmp
pop
loop
pop
scas
cli
add
and
push
int3
jnp
add
add
lret
decl
inc
fwait
lret
rcll
dec
dec
sbb
insb
repz
xor
mov
push
mov
jmp
addb
or
push
pop
pop
adc
mov
pop
imul
mov
push
mov
adc
mov
out
data16
out
inc
adc
divl
mov
outsb
insl
xchg
adc
incl
sarl
xor
les
popf
rorb
aaa
loopne
mov
mov
in
mov
adc
scas
lods
dec
mov
pushf
mov
data16
jbe
jecxz
test
sub
faddl
dec
std
loop
dec
mov
inc
add
jns
sub
adc
sbb
insb
cmp
shl
xchg
jg
jge
jecxz
lods
cmpb
into
mov
and
xchg
mov
xchg
mov
jbe
rep
fsubs
aaa
xchg
jmp
orb
pop
sahf
cmp
mov
mov
vfrczps
sub
sub
inc
test
lock
mov
jp
pushf
test
and
fcompl
or
sarb
inc
leave
push
inc
les
std
lahf
es
jecxz
repnz
cmc
sub
push
pop
jle
repnz
cmp
push
inc
scas
or
dec
imul
and
jmp
mov
pop
movq
popa
xor
pop
jecxz
mov
add
xchg
cltd
and
jg
ljmp
mov
or
leave
pushf
sub
lret
lds
and
aad
imul
repz
movl
sbb
mov
out
inc
incb
sbb
or
std
pop
xchg
in
jns
pop
push
lds
mov
mov
jp
or
scas
dec
jbe
mov
jb
jge
mov
xchg
mov
and
jecxz
ret
push
rcr
sub
xor
push
orb
add
push
out
mov
push
jb
mov
lret
sahf
sub
xchg
loopne
addr16
mov
movsb
dec
sarb
jle
and
adc
sub
movsb
sub
popa
fmul
xchg
rclb
mov
mov
stos
xor
jae
and
je
lea
jne
mov
test
inc
inc
and
jl
xor
push
fiaddl
popf
icebp
pop
mov
fisttpll
mov
int3
xor
insl
ret
xor
mov
pushf
pop
cld
jmp
rcrl
js
cmpsb
sti
mov
push
add
push
xor
mov
mov
in
insl
jg
loopne
cld
or
cmc
or
mulb
mov
movsl
popa
pop
loop
sbb
add
or
lds
outsb
test
lahf
mov
aad
add
daa
mov
jmp
loopne
adc
inc
sub
jne
or
inc
aaa
in
inc
lock
test
inc
mov
fcomp
outsb
jnp
mov
mov
sarb
jns
mov
stc
inc
dec
sub
popa
mov
inc
adc
adc
idivl
outsl
icebp
fdivp
std
jge
sub
lods
addb
stc
cmp
pop
mov
sub
insb
mov
sbb
sbb
cmp
in
lret
inc
lahf
rcrb
sbb
movsb
xchg
shr
mov
imul
cld
adc
scas
cmp
rorb
add
cmp
lods
ja
outsl
and
mov
int3
dec
lret
sub
jp
outsl
lods
inc
pop
pop
lds
ror
pusha
fstpt
in
mov
jo
xor
push
xchg
sbb
xchg
or
lods
in
and
mov
cmpsl
mov
lds
dec
fs
mov
in
xchg
mov
xchg
adc
lret
dec
data16
xor
adc
dec
xchg
push
push
jle
loopne
jae
jb
add
jg
mov
popf
or
mov
jbe
mov
pop
sub
cmpsb
sbb
sbb
jae
push
imul
rcrl
add
sub
xlat
in
mov
sub
ret
and
or
test
and
xchg
imul
fldln2
add
or
or
mov
mov
cld
cs
and
dec
and
lahf
stos
nop
aam
arpl
loope
mov
inc
or
push
leave
add
sub
pop
or
xchg
xchg
in
push
adc
lret
shrl
stos
or
xchg
stc
mov
sbb
rcr
lods
fsub
push
sbb
sbb
outsl
xor
mov
hlt
sub
std
lock
ljmp
add
out
dec
xchg
fcmovne
sbb
outsb
daa
and
fs
shlb
mov
xor
sub
out
xchg
sbb
pop
or
or
fdiv
sbb
cmc
sti
mov
insl
or
rclb
jns
push
pushf
or
adcl
mov
repz
add
mov
sub
push
pop
sbb
rclb
xorb
fs
iret
cs
jb
std
cmc
mov
das
sub
shrl
mov
mov
loope
rorb
out
jge
insl
insl
xor
push
fildl
push
dec
jno
fs
pop
sub
jmp
jne
sarl
int3
xor
aas
mov
mov
cli
mov
ret
push
mov
and
movsl
gs
std
fcoms
or
xchg
lock
dec
into
dec
pop
inc
push
lea
push
ror
daa
loopne
sub
int
popf
mov
jecxz
xchg
mov
pop
inc
inc
or
popa
jbe
test
jecxz
mov
mov
cmp
adcb
jo
inc
mov
xchg
and
mov
out
imulb
push
mov
mov
into
cmp
cmp
xor
push
pop
jg
out
xchg
repz
add
push
loopne
cmpsl
stos
push
in
mov
mov
push
iret
mov
cmc
push
adc
xor
out
fistps
cmpb
mov
into
shrb
mov
xchg
sub
lahf
cmc
std
xor
rclb
jne
pop
cmpsb
gs
out
and
call
xchg
xor
sub
movsl
push
pop
sbb
push
lock
jne
shrl
std
and
sub
in
mov
xchg
repz
dec
pop
rcl
sub
test
mov
xchg
and
mov
das
mov
push
stc
clc
jmp
add
stos
xor
popf
mov
mov
push
push
in
inc
mov
jg
call
push
adc
lods
xchg
xor
jp
cmp
and
imul
cltd
pop
sub
rolb
js
cmc
neg
inc
mov
sbb
sbb
and
push
jb
gs
popf
mov
je
negl
jmp
pop
popf
jg
push
pop
fldt
push
dec
mov
pop
xorb
cmpsl
sbbb
sbb
imull
leave
arpl
add
daa
insl
xchg
xor
cmp
cmp
or
pushf
sub
nop
jp
fcoms
lcall
repz
clc
mov
loope
mov
sti
push
negl
mov
fs
ret
mov
lods
sbb
das
test
ljmp
add
out
test
mov
out
fsin
fdiv
lods
arpl
std
dec
jl
lds
fcomp
stos
repz
sbb
push
or
aad
test
jne
adc
lods
imul
stc
int
dec
mov
jbe
inc
jns
popf
ret
das
xchg
out
cmp
and
adc
sbb
xor
push
xchg
push
movsb
ja
push
jmp
xchg
inc
call
fnstcw
subl
mov
sbb
jle
xor
lods
popf
adcb
pop
in
les
mull
std
dec
mov
loop
ds
and
mov
inc
stos
pop
xbegin
test
or
dec
dec
gs
test
mov
pop
call
pop
inc
idivb
orb
mov
inc
movsb
cmpsl
adc
mov
push
dec
push
push
mov
sbb
lret
push
xchg
inc
mov
fiadds
sbb
and
mov
pop
xchg
cmp
sbb
stos
mov
sub
int3
idivl
and
pusha
mov
clc
and
out
xchg
mov
lcall
mov
cld
cltd
xor
mov
mov
inc
into
lahf
jmp
xor
mov
lods
icebp
cmpsl
mov
jg
push
rcrb
mov
or
mov
inc
adc
lahf
mov
das
jecxz
ljmp
roll
inc
inc
dec
adc
cli
hlt
adc
stos
call
fwait
cmpsl
fistpl
sub
int
arpl
sbb
shl
pop
xchg
inc
sbb
sbb
divb
popa
es
push
shll
popa
push
scas
in
pop
cmpsl
out
sub
je
cltd
into
dec
or
rcrl
push
movsb
movsl
cmp
sub
loopne
imull
into
das
rcrb
pop
insl
mov
xchg
fdivr
sub
in
push
arpl
insb
xor
xchg
clc
and
ja
pop
fiadds
mov
sub
dec
lahf
mov
xchg
jecxz
pop
add
outsb
shll
push
and
clc
cmpsl
inc
mov
sbb
dec
imul
out
xchg
and
mov
loop
nop
ds
push
xor
pop
or
dec
cmp
jmp
lret
mov
xchg
pop
mov
das
mov
in
out
das
ret
jbe
popa
sub
jmp
jge
les
add
daa
jmp
outsb
mov
push
and
dec
dec
ds
icebp
xchg
jle
adc
dec
loopne
mov
ffree
lret
dec
repnz
lret
mov
dec
sahf
sti
test
adc
loop
out
dec
sbb
imul
or
popf
jae
incb
daa
dec
cltd
mov
outsb
fcmovu
lds
sub
mov
das
jo
aam
pop
xchg
scas
mov
pop
mov
jno
in
mov
out
out
nop
notl
pop
inc
roll
push
inc
and
jns
mov
pushf
clc
hlt
or
mov
xchg
in
mov
js
sub
adc
mov
jmp
jmp
inc
jno
aas
aas
pop
inc
scas
push
mov
ret
shlb
lcall
cmp
hlt
inc
cmp
lods
ja
inc
dec
and
lea
jne
lret
subl
xchg
pusha
prefetchwt1
lea
sahf
lret
jb
push
frstor
mov
mov
xchg
push
lcall
sbb
cmp
mov
xor
sti
aas
mov
xor
ds
mov
mov
push
xor
out
mov
sbb
xor
jmp
aas
fisubrl
aaa
in
mov
ja
lods
push
dec
arpl
jae
sub
fdivl
insl
cmp
push
stc
mov
daa
cmp
dec
repz
mov
adc
loopne
rclb
out
dec
sbbl
jae
loope
cmpsl
cmpl
sub
jnp
shll
adc
in
andl
lods
fcoml
test
adc
lock
or
ljmp
sti
flds
movsl
mov
shrb
mov
popf
outsb
add
jmp
adc
xor
sbb
fnsave
push
mov
mov
clc
cmp
ret
leave
sbb
jns
fisubl
add
out
push
cltd
test
call
test
cltd
dec
jmp
pop
dec
test
xor
fwait
test
xor
fwait
notb
jne
fimull
daa
mov
in
jmp
or
sti
bound
adc
or
sahf
xor
cld
or
sub
aad
pop
shl
xchg
inc
loope
stos
pop
stc
push
xor
out
out
fstl
mov
sub
stos
lods
mov
cli
lret
decl
sti
stc
cmc
out
push
sar
fwait
mov
mov
xchg
mov
jl
insb
adc
out
out
fsubrs
pop
jmp
inc
pusha
pop
cs
fwait
leave
es
ja
dec
imul
stc
pop
or
hlt
cmpb
rcrb
fwait
cltd
cmpsl
xchg
mov
inc
test
lret
sub
out
jp
or
lcall
inc
or
movsl
test
lret
aas
into
cld
xchg
and
adc
fldenv
cmpsb
fisubrl
out
mov
inc
shll
dec
sbb
or
aas
cmpsb
mov
sub
in
out
pusha
jo
sbbl
xchg
jl
push
movsl
aas
cmpb
test
test
lock
push
mov
mov
out
fiaddl
and
orb
in
jmp
mov
jno
scas
es
jg
push
mov
js
and
xchg
cmp
clc
jo
push
call
out
adc
xchg
cmp
sahf
out
lock
ret
arpl
jno
pop
mov
jmp
and
mov
adcl
daa
aas
pop
xlat
sti
roll
int
jne
icebp
gs
push
stc
xor
dec
adc
add
std
ss
adc
lahf
stos
add
aam
jle
repz
xchg
adc
xchg
std
push
cmp
lods
int3
mov
push
fmull
jmp
iret
ljmp
insb
mov
jmp
outsl
mov
orl
out
push
jno
dec
adc
in
lods
mov
int
insb
mov
cwtl
push
lret
imul
mov
lea
fisubrl
sub
sarl
push
inc
xor
push
cmp
popa
sub
dec
cwtl
andl
in
inc
mov
adc
or
or
shrb
jg
je
mov
addr16
mov
mov
lds
in
fmul
push
dec
pop
jl
and
in
fistpll
xchg
ljmp
call
mov
aas
cld
jp
aas
lods
xor
xor
mov
fmull
inc
cmc
rcl
fldcw
iret
cltd
cs
int
sbb
fisubrs
rcl
dec
adc
hlt
loop
xor
mov
adc
arpl
adc
inc
arpl
jmp
pop
inc
sub
sub
jns
jmp
shll
jbe
add
mov
xchg
imul
jno
xor
ret
cli
nop
inc
push
outsl
dec
adc
and
stos
jecxz
jno
mov
testl
repz
pop
in
mov
xchg
mov
cmp
mov
jp
in
ror
jns
mov
sbb
int3
ss
jb
sbb
push
jbe
adc
mov
iret
arpl
repz
lock
or
rol
inc
sti
dec
lcall
scas
lods
mov
stc
sub
test
sub
or
rclb
adc
negl
push
clc
sub
in
xchg
cs
push
and
jl
mov
stos
mov
push
dec
mov
push
mov
movsb
sbb
mov
iret
fwait
stos
xchg
inc
adc
pop
mov
popa
cmc
lcall
into
fs
ud2
push
mov
movsb
xchg
imul
xchg
mov
cld
xor
stc
mov
insl
je
dec
out
mov
lods
jmp
adc
inc
es
xor
xchg
les
cmp
jne
pop
test
ja
add
arpl
mov
bound
or
push
jb
xor
add
add
stc
or
cmpsl
fdivrs
hlt
inc
pop
loopne,pn
add
push
scas
movsb
sbb
add
mov
adc
lods
loopne
adc
fistpl
mov
popf
xchg
aam
xor
mulb
fs
popf
es
add
push
xor
push
frndint
mov
test
xchg
jge
ficoml
aam
mov
in
xchg
mov
sbb
movsl
pop
mov
add
das
dec
sti
mov
lcall
ljmp
sti
jb
dec
push
in
mov
cmp
add
cmpsb
rcll
loopne
lahf
xor
lods
push
lock
cld
lret
rorb
das
jne
sahf
fs
inc
aam
fdivrl
or
testb
imul
cld
lret
inc
pop
cs
mov
and
pop
adc
loop
cs
ja
jne
dec
jecxz
insl
and
leave
aaa
and
fs
adc
jno
xor
xchg
jno
sti
shrb
pop
dec
jge
cmpsb
add
add
inc
je
cmp
jl
xor
nop
mov
and
test
rorb
jp
mov
insb
aaa
fsubr
ss
pop
fs
fcompl
jne
aam
mov
div
mov
inc
push
and
jmp
jmp
jo
add
xlat
mov
mov
mov
adc
mov
mov
xchg
xchg
mov
inc
cmc
sub
clc
repnz
mov
xlat
cld
mulb
mov
ja
push
pop
mov
outsl
lcall
daa
pushf
jp
xchg
mov
jne
lods
xchg
loop
ret
dec
mov
mov
mov
cmp
sub
gs
fstpl
cmc
add
jns
loopne
out
sub
push
and
into
mov
pop
mov
js
in
ret
cmp
inc
test
jecxz
dec
negl
fsubrl
popa
push
and
outsl
fdiv
jnp
and
cld
dec
mov
push
je
lahf
dec
mov
in
push
ds
fidivrl
jae
mov
add
cmp
jg
lock
or
out
mov
jae
and
cltd
mov
xor
mov
lret
inc
add
out
dec
and
xor
mov
inc
xchg
xlat
std
cld
shll
or
fldcw
mov
jnp
fldl
call
pop
mov
repnz
pop
pusha
or
cld
and
mov
stc
scas
lods
add
xor
inc
push
pop
pusha
sub
rcrl
pop
pusha
push
pusha
and
aas
pop
jle
sub
iret
loop
xor
stc
push
cmp
aad
mov
jne
dec
mov
jmp
xchg
sub
faddl
sub
sbb
sahf
sub
ljmp
mov
insl
int3
adc
jg
jns
mov
xor
dec
ss
jne
add
cmp
pop
lock
fbstp
dec
jecxz
add
sarl
pushf
push
and
jne
rcr
clc
repnz
push
inc
jae
xchg
sarb
xchg
aad
inc
xor
lock
pop
stc
pop
out
mov
or
out
xchg
icebp
std
pop
sbb
sub
add
pop
aas
repnz
or
aam
test
inc
mov
add
xchg
or
push
mov
and
adc
aad
mov
mov
xchg
pop
sti
roll
hlt
and
adc
in
and
lock
sbb
or
mov
mov
fs
pop
add
out
adc
cmp
adc
sub
mov
mov
jno
jge
es
arpl
fisubs
add
mov
inc
in
or
shlb
sub
jp
or
add
and
stos
repnz
cmpsl
aad
in
sub
test
lret
sbb
int
dec
out
jl
lea
in
pop
in
adc
shrl
pushf
pop
ret
sub
cmp
jmp
fldt
mov
movsl
cmpsb
dec
xchg
pop
shlb
in
cltd
popf
sahf
fistpll
scas
jp
sbb
enter
push
or
cmp
daa
leave
pop
mov
cmp
test
add
loop
and
push
das
cmp
cmp
push
rorb
out
dec
fisubs
pop
lcall
loope
in
cmp
sbbb
sub
adc
xlat
xchg
mov
stos
ret
push
das
cwtl
push
sar
aaa
loop
mov
rorl
mov
adcb
adcl
add
add
xchg
aas
or
cld
mov
xlat
rorb
subb
and
nop
fs
ret
lcall
test
fldcw
or
xor
inc
leave
xlat
cmp
jae
xor
out
xchg
dec
inc
sub
pop
stc
frstor
dec
mov
rorb
test
pop
mov
pop
mov
or
adcb
cli
cmp
and
xchg
imul
in
mov
push
sbb
cltd
sbb
inc
mov
subb
divl
sub
frstor
jecxz
push
cmp
adc
jbe
or
fs
sbb
repnz
popa
addb
jno
cmpsl
jne
pop
outsl
dec
xchg
test
div
add
sub
sub
sub
leave
xchg
adc
popf
mov
xchg
paddw
arpl
inc
out
mov
pop
dec
loope
sub
cltd
stos
js
fldt
stos
jbe
stos
outsb
jb
test
push
sub
dec
enter
mov
sbbb
in
adc
jg
fdivrs
int3
xor
test
jmp
jl
je
or
xchg
loope
xor
jno
jecxz
push
je
push
pop
in
xor
mov
sub
and
test
cltd
sub
shr
into
std
into
add
pop
sbb
pop
sbb
ds
and
imul
xlat
xlat
push
scas
out
pop
mov
pop
stos
jno
cmpsl
inc
aam
test
push
cltd
add
xor
pop
mov
nop
sbb
and
pop
gs
fstp
lret
fs
xchg
mov
inc
stc
mov
adc
push
cwtl
mov
and
mov
ret
pushf
push
xchg
or
pop
lds
test
dec
lock
stos
jmp
into
jb
jae
xor
sub
lods
xchg
shrb
cmp
lock
push
jb
xchg
pop
addr16
sub
jge
push
and
sti
and
push
lods
mov
inc
cmp
mov
push
aad
lret
mov
hlt
testb
xchg
xor
xchg
nop
fcoml
and
ret
jmp
push
sbb
repz
mov
mov
in
dec
test
scas
pop
out
mov
mov
or
push
lret
stos
and
lock
fcoms
ja
sti
jbe
inc
out
dec
cs
ljmp
add
dec
outsl
daa
adc
mov
fldl
add
fsubrs
jg
inc
lahf
jae
inc
jmp
adc
jg
xchg
ret
push
clc
in
mov
pop
daa
sub
xchg
imul
and
add
les
mov
cmp
inc
imul
in
xor
xchg
sbb
or
jecxz
or
popf
jle
mov
mov
jnp
xor
aam
mov
lret
repz
int3
xchg
mov
js
lods
mov
adc
adc
test
lahf
mov
xor
pop
sbb
mov
pop
add
roll
cmp
cs
jnp
dec
lock
push
pop
xor
movsl
fs
cmp
mov
mull
shlb
mov
xchg
and
into
push
jo
dec
fcom
imul
out
sub
cmpsb
jge
lea
fidivl
mov
and
inc
inc
mov
inc
aaa
jnp
aas
and
jbe
pop
lock
loope
pop
cmc
negl
adc
ja
xchg
cs
nop
mov
je
push
cld
sbb
lea
jnp,pt
ljmp
daa
mov
stos
sbb
mov
mov
xchg
in
pop
adc
jo
lods
and
je
loope
sbb
jb
jmp
jecxz
push
dec
ror
and
or
aad
adc
mov
outsb
dec
push
fsubs
outsb
ficomps
xchg
aam
mov
stos
jecxz
adc
orb
inc
inc
shufps
dec
mov
sbb
fisubrl
in
daa
fadds
notb
xchg
mov
xchg
mov
adc
fldl
out
add
push
adc
shll
int
scas
fisubl
outsl
cmp
add
loop
mov
xlat
or
inc
add
rolb
inc
mov
adc
test
out
xchg
sub
mov
imul
pop
sub
movsb
mov
testb
xor
or
aaa
mov
pushw
push
pop
adc
outsl
lods
leave
popa
xorb
test
or
pop
pop
mov
push
bound
adcl
jmp
push
mov
push
inc
xor
imull
sub
jnp
push
mov
sub
lret
out
dec
dec
mov
mov
cltd
loopne
pop
fmul
mov
inc
dec
out
imul
xchg
dec
xor
adc
jp
ljmp
rcrl
push
pop
loope
jb
mov
insb
neg
les
adc
pop
lds
xor
mov
sub
xchg
cmp
mov
jp
and
jp
jnp
sub
adc
inc
mov
sub
stc
mov
pop
push
pop
add
pop
out
dec
ret
ror
cmp
sbb
movsl
cmp
adc
int
fs
movsbl
insb
sub
mov
mov
pop
pushf
fdivr
nop
jp
in
jge
repnz
ss
cmp
jnp
sbb
sti
roll
xor
ret
add
mov
pop
lret
push
scas
and
xor
mov
popa
add
cmp
mov
ljmp
fnsave
push
pminsw
cwtl
or
mov
push
lret
mov
mov
jp
lods
jl
sbb
mov
mov
add
pop
or
mov
repnz
sti
addr16
pop
or
xchg
in
gs
movsb
pop
pop
repnz
fs
cmc
jae
ret
nop
in
push
push
inc
clc
jge
mov
mov
rorl
int3
lret
push
jb
lods
sbb
add
fnstsw
push
xchg
push
adc
mov
jo
jge
das
sbb
xchg
fdivrs
es
decb
adc
in
push
jno
mov
jge
fnstenv
ljmp
lcall
test
sbb
and
dec
jno
sbb
jno
add
adc
mov
outsl
cmc
lods
cmp
js
lret
push
xor
and
dec
xchg
mov
inc
xor
xchg
push
rcll
mov
xor
pop
shll
xor
cmp
jno
cmp
xchg
sbb
fdivl
repz
jecxz
cwtl
cmc
test
push
cmpsl
scas
cld
frstor
dec
outsb
cltd
repnz
lret
inc
lods
ljmp
loope
dec
dec
mov
cmp
int3
xlat
stos
xchg
jo
call
push
arpl
pop
pop
push
shll
xchg
push
xor
cmp
sbb
cmc
add
xor
dec
lods
mov
add
push
push
sarl
popa
dec
push
xchg
adc
sub
out
ja
enter
rcrl
ficoml
jp
and
xchg
mov
pushf
mov
push
test
or
les
fstpl
punpcklbw
movsl
clc
jno
fdivrs
xchg
mov
pop
test
mov
cmp
xor
lds
in
mov
sbb
xchg
fwait
test
jl
adc
or
into
push
inc
in
loopne
int
jnp
pop
xor
adc
or
push
ljmp
lock
pop
add
push
cmp
mov
cmp
in
xchg
fcoms
mov
or
push
addl
js
psubsw
cmc
loope
mov
cmp
hlt
pop
add
into
stos
mov
test
ljmp
scas
adc
mov
outsl
in
push
ljmp
mov
movsb
inc
rcrb
add
ljmp
and
stos
adc
in
or
adc
loop
cs
mov
imul
inc
xor
jle
inc
add
loopne
sbb
jae
mov
mov
stos
sub
lods
sub
das
cmp
push
push
cwtl
scas
leave
das
bound
loopne,pn
jo
pop
adcl
imul
aad
pop
rcrb
sub
sbb
pushf
iret
hlt
xchg
out
mov
insl
clc
gs
inc
scas
jno
fwait
fwait
sub
scas
xchg
stos
not
in
xor
push
in
dec
xor
pop
lock
adc
popa
inc
mov
mov
mov
pop
insl
sub
pop
add
lock
push
test
imul
gs
xor
icebp
arpl
fidivrl
xor
frstor
mov
push
lods
jg
das
loopne
and
mov
dec
adcb
out
popf
jp
or
jb
cwtl
mov
sbb
out
adc
fs
pop
and
cmp
jl
sbb
sbb
clc
fidivl
icebp
push
inc
lds
popf
les
xchg
add
mov
mov
cmc
sub
popa
sub
fsubrs
test
lret
dec
rcrl
cld
sahf
hlt
mov
jae
int
add
sub
js
cmpsl
or
jno
cmp
jmp
sti
mov
push
dec
les
add
xchg
popf
divps
outsl
stos
fstpl
inc
mov
cmp
test
mov
inc
out
sahf
ret
mov
xlat
pop
mov
mov
mov
cmpsl
jns
mov
mov
push
jbe
hlt
xor
arpl
pop
mov
jle
popa
lret
test
subl
sbb
pop
push
sti
leave
in
sbb
repnz
in
mov
mov
pop
sub
adc
push
dec
loopne
xor
push
incl
stos
inc
mov
aam
popl
dec
lods
call
lret
mov
xlat
fs
lods
inc
adc
repnz
jno
sbb
outsl
push
mov
inc
jg
jmp
sbb
bound
mov
sub
fbld
mov
stos
gs
xchg
mov
cmp
jle
ret
mov
xchg
test
jp
and
cs
cmpsb
jbe
pop
push
xchg
xchg
in
leave
push
out
lret
push
push
aas
push
jo
test
repnz
cld
cmpsl
les
iret
and
rclb
hlt
xchg
fldenv
dec
push
push
push
imul
or
jne
jae
adc
mov
repz
dec
fcmovb
pop
dec
jmp
xor
bound
sub
inc
and
shll
popa
xor
lods
lock
loop
pop
mov
ja
jmp
dec
sahf
sbb
push
or
fbld
rolb
fiadds
sti
and
xchg
xchg
outsl
pop
std
and
inc
jnp
cmp
and
xor
nop
cmpsl
sub
ret
dec
pusha
ds
pop
out
xor
ror
jecxz
pop
add
mov
pop
stos
push
icebp
in
jbe
nop
push
imul
ds
push
fnstsw
shll
add
vmptrld
fstpl
xor
sbb
imull
stos
test
xchg
xchg
mov
xor
popf
xor
cmc
sarb
or
jbe
add
in
xchg
inc
orl
stos
sar
pop
cmpsb
jle
imul
adc
push
push
ficoms
icebp
mov
lret
cli
pusha
adc
sub
inc
jo,pn
inc
push
add
xor
nop
xchg
adc
pop
and
sub
aaa
sub
int3
out
push
int3
es
hlt
jg
test
xor
sbb
sbb
ret
roll
insl
out
mov
xchg
xor
jp
leave
repnz
xor
insb
scas
fdivrs
jne
sahf
push
bound
cwtl
loop
xor
sbbb
mov
dec
mov
xchg
popf
adc
pop
mov
xor
sub
rorb
mov
cmp
aaa
pop
or
ret
out
adc
adc
jmp
xchg
pop
aam
movsb
dec
xchg
xor
test
in
mov
pop
sub
jecxz
or
js
pop
iret
or
dec
lahf
cld
dec
dec
or
incl
cmp
popa
mov
daa
push
mov
pop
pusha
stos
imul
shlb
imul
xchg
test
not
jmp
cs
fistps
push
dec
cmp
mov
sbb
iret
and
dec
xchg
jp
pop
insb
mov
fdivs
mov
jae
dec
int
or
jl
xor
gs
hlt
cmp
mov
xchg
dec
mov
aaa
jnp
or
mov
ret
cmc
insb
add
fcomip
jle
cmp
dec
and
arpl
sbb
out
mov
fwait
mov
gs
lds
adc
in
adc
xor
ja
sbb
or
jo
inc
pop
cmp
adc
lahf
xchg
movsb
xchg
sbb
popf
sub
add
sti
std
mov
test
xor
sbb
inc
fdivr
lret
xorl
and
fdiv
inc
movsl
ret
ja
dec
xor
xchg
scas
add
lods
push
loop
and
jecxz
jp
outsb
mov
movd
dec
jno
imul
fdivp
lea
jnp
ljmp
fdivs
fidivl
pop
insl
cmp
pushf
mov
xchg
mov
and
push
mov
jbe
adc
clc
jne
inc
push
shrl
sbb
dec
call
out
jmp
xchg
popa
or
mov
fbstp
sub
cli
movsl
inc
sbb
jle
fwait
or
repz
fisubl
sbb
fimuls
dec
mov
mov
dec
je
and
loop
out
mov
xchg
push
xor
loopne
push
inc
lret
aad
dec
jo
or
testb
ftst
ja
add
subb
or
jge
jl
mov
push
ficompl
push
and
mov
aas
insb
cmp
loope
test
mov
push
mov
popa
orb
aaa
icebp
mov
jg
and
xchg
jp
out
test
add
loop
sub
xor
sub
adc
jp
jle
jbe
adc
fwait
mov
xchg
bound
cmp
aam
cmp
sub
cmp
ja
inc
xchg
push
pop
ror
cmp
test
leave
lret
addr16
jmp
xorb
int
pop
mov
cmp
ja
dec
push
cmpsb
cmp
lret
stos
and
ror
out
pop
std
adc
ljmp
mov
dec
loope
cmp
jnp
dec
int
jmp
movsl
mov
cli
mov
addr16
push
jne
push
andb
nop
fmulp
bound
inc
das
and
inc
dec
lods
mov
dec
cli
pop
push
call
adc
jmp
or
sbb
mov
and
push
pusha
push
pusha
pop
mov
or
sub
scas
mov
add
out
xor
iret
xor
adc
push
inc
popa
cmpsl
sahf
nop
xchg
repz
mov
das
cwtl
xor
cmp
les
push
popa
lret
es
aas
inc
inc
mov
mov
and
sub
dec
data16
pop
push
mov
mov
jne
orb
fadds
es
mov
xchg
sti
xor
outsl
lret
lods
scas
insb
or
scas
and
cld
jbe
mov
imul
inc
and
mov
cmp
cmp
push
filds
test
xchg
icebp
adc
shll
cli
jbe
enter
test
fucompp
mov
inc
xchg
push
ficomps
and
cmpsl
jge
test
or
cmp
out
jp
test
mov
ja
hlt
call
mov
add
sbbl
stc
call
mov
mov
jb
cmp
xchg
add
stos
fsubrl
pusha
mov
inc
inc
dec
pop
movsl
sbb
jle
imul
pop
imulb
pop
push
xchg
push
mov
xlat
xor
ss
inc
frstor
sub
jns
popa
cmpsl
icebp
js
pop
lods
adc
pop
mov
push
outsl
ljmp
cli
fsubr
jne
xor
jae
xchg
jae
inc
pop
andb
fwait
mov
decb
lock
movsb
mov
add
add
in
mov
aaa
xor
out
ret
sbb
jmp
jo
xor
lcall
mov
das
imul
push
lahf
out
lret
push
daa
jmp
gs
xchg
dec
mov
pop
in
mov
cwtl
ljmp
jmp
fstl
out
rcl
and
test
sub
jl
iret
pop
cltd
mov
add
mov
sub
mov
cs
add
sub
add
or
adc
push
or
jbe
cmp
xchg
dec
jl
loop
enter
imul
decb
iret
bound
adc
fs
loope,pn
pop
sahf
std
xchg
das
imul
pop
loopne
incb
add
pop
insl
jae
adc
sti
sub
cmp
data16
loopne
jp
loope
jae
and
ficoml
pop
lahf
arpl
mov
std
add
pop
clc
outsb
push
add
cmc
rep
and
fbstp
push
cmpsb
icebp
pmulhw
or
xchg
insb
jge
dec
mov
in
repz
and
lret
jne
or
xorl
mov
out
push
or
inc
inc
shlb
repnz
test
scas
lods
add
and
rorb
push
mov
lock
inc
cmp
ret
push
cmpsb
jbe
aam
inc
stc
mov
rcll
or
or
repz
popa
cmp
xor
adc
xchg
inc
in
and
mov
insb
sbb
mov
lods
or
inc
loopne
xor
repz
xor
pop
jns
mov
enter
xchg
daa
movsb
les
lret
sub
cld
mov
mov
lret
cmp
cmc
inc
and
mov
cwtl
nop
mov
fstl
xor
or
sub
cmp
xchg
and
sub
or
fcom
and
add
inc
outsb
stos
out
xchg
roll
sbb
cwtl
loope
test
popf
sub
sti
aam
and
xchg
cmpl
fnstenv
pusha
loope
bnd
es
or
mov
or
and
push
jno
popf
pop
inc
pushf
and
sbb
pop
pop
lahf
daa
adc
mov
scas
mov
cmp
jbe
addr16
push
mov
std
cmpl
scas
inc
xchg
sahf
stos
jge
sub
js
ljmp
jo
jbe
mov
mov
ja
push
stos
movsb
push
mov
popf
xchg
cmp
leave
popl
jle
out
into
or
in
xchg
add
and
ljmp
lcall
stos
cmp
cld
or
hlt
sbbb
xor
es
outsl
rcll
mov
push
cwtl
enter
push
shrl
sbb
popf
pop
inc
mov
mov
in
leave
pop
push
xor
in
rol
sbb
adc
fxch
test
movsl
mov
mov
mov
xlat
pushf
call
inc
fidivl
push
and
mov
and
int
jns
dec
xchg
mov
adc
push
in
sbb
clc
jmp
int
addl
ret
xor
les
xor
xchg
xor
cltd
fldenv
sbb
out
jns
cmp
ss
mov
movsb
cs
push
icebp
gs
cwtl
arpl
fsubrp
push
imul
in
enter
jb
and
xchg
gs
lcall
sub
sub
push
dec
data16
dec
gs
icebp
stos
jne
mov
mov
adc
xor
shlb
mov
mov
sub
nop
ficompl
gs
push
out
and
push
push
jecxz
push
jle
xchg
or
inc
and
in
lods
mov
les
xor
mov
loop
repnz
fildl
adc
adc
xchg
aas
cmpsb
inc
pop
mov
add
or
xchg
loop
xor
fucomp
push
sbb
ret
xchg
movsl
jg
jbe
xchg
dec
dec
adcl
jnp
jb
xor
adc
cli
dec
jmp
adc
repnz
sbb
inc
sub
pop
push
std
pop
rorb
icebp
jbe
imul
movsl
and
roll
into
arpl
fwait
xor
cs
sub
stc
and
xchg
or
push
lcall
and
js
movl
dec
gs
push
sub
or
enter
nop
lods
aad
jmp
xchg
pop
jns
rcl
int
jg
xorl
int3
call
shr
push
cmp
out
dec
sub
repnz
pop
lods
push
cmc
jge
shrb
movsb
mov
xchg
push
hlt
sbb
jne
aad
and
bswap
dec
into
enter
jg
test
mov
mov
in
mov
arpl
in
sub
sbb
in
inc
in
sahf
dec
ffree
sahf
pop
jge
jmp
pop
mov
nop
fwait
mov
pop
sbb
and
js
cmp
add
mov
mov
hlt
fdivrs
je
stos
or
jp
push
fcompl
sbb
aad
sar
mov
in
test
dec
mov
jl
xor
sub
nop
push
imul
and
aas
jae
int
xchg
dec
repz
into
adc
dec
push
and
mov
ffreep
inc
xchg
iret
stc
mov
test
cmp
mov
jb
pushf
fdivrl
add
int3
jne
push
add
movsb
in
repz
loop
lock
mov
sub
mov
stc
cltd
xor
cltd
mov
pop
ss
dec
lea
fdivr
out
mov
pop
add
das
cmp
cmp
adc
cmc
popf
enter
xchg
xchg
add
mov
pop
negb
stos
xchg
dec
ss
enter
dec
pop
pop
mov
les
ret
sarb
inc
aam
sbb
call
cmp
pop
sarl
xlat
mov
cld
lea
pop
mov
stos
push
xor
jbe
dec
or
mov
sbb
and
fisttpl
jne
or
or
mov
inc
mov
pop
mov
imulb
and
mov
mov
enter
clc
ljmp
cmp
jmp
mov
cmp
sbbb
scas
add
pop
sahf
mov
es
pop
pop
pop
pop
lock
pushf
adc
push
xchg
dec
sahf
divl
cs
stc
stc
outsb
popa
push
or
mov
gs
jb
push
xor
jle
cmp
stc
cmp
cmp
insb
test
sub
std
or
fbstp
stos
adc
inc
jae
fistpll
sub
cmp
jno
pop
and
fcomps
adc
mov
testl
loope
fcomps
add
xlat
add
cmp
mov
mov
in
stos
loope
enter
imul
jae
inc
mov
jp
dec
and
outsl
jns
insl
mov
dec
iret
pop
and
or
cmpsl
clc
mov
scas
mov
out
inc
frstor
jle
fcomp
push
mov
rol
jge
xchg
sbbb
sbb
leave
sbb
ret
stc
jp,pn
dec
push
jns
insl
cltd
xchg
lret
in
out
jb
jle
iret
nop
shlb
jae
arpl
cld
xlat
aam
adc
push
push
stos
sub
incl
stos
mov
cli
push
loopne
jecxz
jmp
test
scas
rcrl
ss
xchg
cwtl
sbb
call
jecxz
cmp
loopne
test
inc
mov
ja
test
mov
notb
adc
cltd
in
pop
inc
sub
jb
in
aad
sub
mov
xchg
add
call
lods
inc
aas
xchg
dec
sbb
enter
jno
mov
cmp
add
sub
testb
xchg
and
nop
shll
shl
inc
jnp
loop
or
push
jge
data16
mov
lods
fsubl
adc
xchg
jle
or
and
push
jbe
push
iret
mov
inc
mov
pop
pop
cmp
push
push
out
mov
lock
and
sbb
inc
insb
ret
out
inc
es
ljmp
jle
dec
xor
aam
and
push
inc
fs
cmp
daa
out
sbb
mov
lea
aaa
jmp
sbb
lret
sbb
js
fidivrl
sub
aaa
push
xor
sub
fistps
cmp
dec
mov
mov
outsb
insl
jae
mov
out
outsb
std
imul
rclb
xor
mov
popa
loopne
rorl
ret
stos
pop
or
arpl
lret
iret
arpl
mov
divl
xchg
push
hlt
sub
out
shll
inc
sbb
arpl
pop
sub
test
mov
mov
adc
pop
pushf
add
mov
leave
fbld
out
jmp
sbb
push
mov
outsl
jbe
pop
and
insl
enter
loopne
xchg
jle
dec
add
sbb
dec
mov
repz
xchg
arpl
insb
decl
test
dec
xchg
inc
cmpb
imul
pop
xchg
mov
dec
cmpsb
xor
mov
lds
add
cmpsl
hlt
mov
mov
push
xor
jle
cld
mov
enter
leave
lds
lcall
mov
pop
cmpsl
cmp
aaa
fisubs
jno
mov
cmpsb
jmp
cmp
andb
loope
daa
sar
stc
mov
mov
dec
pop
xor
or
imull
cwtl
fdivs
loopne
stc
cmp
pop
dec
lods
sub
xchg
inc
fiadds
mov
iret
xchg
sbb
add
es
call
cmp
lods
mov
cli
cld
mov
stos
fildl
sbbl
movsb
xor
cli
or
mov
mov
daa
xlat
andl
jb
cwtl
stos
popa
sbb
lds
cli
inc
dec
lret
cmp
aas
lea
pop
inc
fldenv
ss
cltd
inc
pop
sahf
add
popa
shlb
pop
xor
pop
pop
scas
cmpb
pop
imul
clc
loop
sbb
add
arpl
mov
sbb
ljmp
cmp
sbb
push
inc
mov
pop
scas
iret
mov
enter
mov
jb
sbb
stos
mov
mov
pop
xor
push
inc
mov
push
adc
in
add
mov
mov
notb
in
stos
mov
imul
pop
pop
insb
sbb
pop
xchg
mov
xorl
sub
stos
inc
mov
call
ficoml
cwtl
add
int3
arpl
dec
out
dec
call
cwtl
insb
cli
nop
icebp
adc
adc
push
fidivrl
xchg
imul
jne
in
int
inc
sar
ficoms
jnp
shrl
pop
in
jle
and
xchg
add
xchg
pop
aas
sbbb
mov
stos
sar
stc
push
xor
pop
push
rol
test
cmpsl
insl
clc
das
or
jo
lds
or
cs
movsl
popf
add
sub
sbb
arpl
cld
dec
pop
int3
mov
adc
jb
push
decl
jno
and
jb
rcrl
test
lcall
mov
mov
and
push
pop
fdivrs
push
icebp
pop
icebp
jae
cmp
xchg
sub
mov
mov
pop
xchg
mov
pushf
cmp
and
outsb
fcompl
xor
test
sbb
addr16
push
je
jge
and
mov
fisubl
jg
sub
mov
js
aam
lods
push
pop
mov
push
es
jae
push
pop
test
pushf
xchg
pop
xor
xor
lcall
xor
adc
jbe
dec
mov
cmp
xor
hlt
push
adc
inc
mov
insl
ss
stos
arpl
imul
movaps
lahf
sti
shlb
out
lcall
inc
adc
test
xor
push
sbb
cmp
fnstcw
int
add
or
pop
popf
mov
imul
push
xor
jmp
push
and
and
sub
inc
inc
ficoms
pop
adc
jmp
fcom
and
cmp
mov
ds
daa
adc
pop
les
fchs
push
or
imul
lcall
ljmp
ret
js
inc
shl
lcall
scas
lods
ljmp
mov
lds
xlat
call
adc
inc
in
das
test
stc
mov
icebp
jle
push
cs
mov
jno
stc
push
mov
call
in
cmp
aam
push
cmp
std
leave
cmp
aad
rcrl
xor
sbb
fidivs
xor
lods
inc
outsb
ljmp
inc
popa
movsl
mov
pushf
sti
mov
lcall
sbb
pop
add
iret
fistpl
adc
clc
inc
xchg
xor
lcall
in
mov
repz
outsl
movsl
mov
adc
lods
xchg
lret
jmp
sti
leave
dec
adc
fstpl
icebp
xlat
out
lock
scas
les
mov
jbe
sbb
dec
or
mov
push
subl
sbb
sbb
ficoms
das
sub
sub
inc
sub
jecxz
adc
pusha
fnstcw
icebp
shrb
je
inc
rcrb
fsubr
adc
lods
dec
test
addr16
stc
mov
imul
icebp
mov
das
outsl
pop
imul
and
xor
xor
icebp
insb
stos
sub
xor
inc
sub
cltd
out
mov
xchg
mov
clc
dec
inc
neg
or
loope
push
add
dec
popf
inc
repz
push
mov
add
bound
out
das
stc
adc
mov
sub
in
adc
ljmp
mov
mov
push
and
lcall
or
call
adc
test
cmc
or
mov
mov
sbb
or
dec
push
add
fstp
insb
ds
push
cltd
pusha
lahf
mov
mov
push
xor
xor
cltd
ds
sbb
bound
int3
scas
mov
int3
adc
xchg
xchg
call
ret
imul
pop
mov
dec
mov
ror
add
jo
rep
js
mov
daa
adc
sub
jnp
xor
jo
pop
mov
insb
add
dec
mov
mov
mov
gs
adc
call
and
push
sbb
test
pop
mov
fbld
mov
or
mov
jno
out
xor
xor
mov
or
in
add
inc
fdivs
into
inc
or
push
jo
inc
jmp
push
xor
repnz
out
mov
and
cmp
add
xor
outsb
inc
adc
fs
sub
xor
xlat
inc
fwait
arpl
daa
mov
jo
xchg
pusha
out
pop
adc
xor
adc
fldt
cmp
push
sbb
les
imul
sbb
or
movsl
mov
int3
daa
xchg
ret
inc
sbb
ljmp
adc
sbb
icebp
cmp
adcl
fildll
icebp
in
add
mov
sub
rorl
aam
push
popa
mov
pushf
int
dec
xor
xor
adc
add
subb
in
jg
lds
sub
mov
push
cmp
xchg
outsl
cmp
addr16
dec
aad
mov
pop
jmp
lea
xchg
jbe
test
out
dec
mov
dec
jns
out
cs
cld
or
cwtl
daa
jl
ret
pop
mov
dec
rol
xchg
mov
ds
inc
andl
enter
mov
xchg
adc
inc
movsb
pop
in
cltd
sahf
iret
clc
adc
xchg
lods
sahf
fwait
mov
cmp
mov
sarb
push
cmp
sahf
xor
pop
fdivp
xor
stc
dec
add
or
fisubrl
loope
sub
fnstcw
mov
jnp
mov
iret
lods
mov
mov
out
ret
btc
int
insl
pop
add
lcall
aaa
xchg
fisttpll
push
movsb
mov
push
cmp
pop
or
punpcklwd
cli
popa
and
das
imul
or
jg
and
inc
xchg
mov
xchg
cmp
pop
mov
mov
in
mov
hlt
fistl
inc
cmp
aam
test
mov
test
pop
aad
mov
mov
dec
xor
das
outsl
arpl
mov
jnp
fdivl
push
push
inc
sub
lods
pop
xor
fimuls
jns
jno
sub
mov
push
adc
add
cmp
cmc
sub
sbb
pop
jl
sub
dec
push
adc
fcomps
repnz
cli
xor
lods
in
lret
sub
and
ret
mov
dec
cld
imul
jne
sbb
fistl
add
add
cwtl
xor
xchg
clc
mov
sbb
add
jp
inc
xchg
aas
gs
out
adc
pop
pop
jns
lea
leave
sub
stos
sahf
fmuls
inc
fisttps
pop
push
xor
pop
jp
fbld
out
arpl
push
pop
ljmp
push
insb
push
cmp
inc
jmp
dec
and
call
push
je
in
gs
jmp
aam
jo
stos
repnz
xchg
cmc
jbe
ret
jbe
inc
push
icebp
xlat
cld
cmpsl
mov
insl
dec
outsl
call
jne
sbb
inc
and
ja
icebp
in
mov
mov
xchg
mov
cmp
pusha
push
int3
nop
addr16
adc
lods
ret
mov
mov
int3
sti
dec
ret
stos
icebp
scas
mov
pop
outsb
adc
out
incl
xorb
inc
xor
mov
lret
icebp
sbb
dec
xchg
out
ds
cmp
xor
inc
mov
iret
aaa
stos
out
stos
push
mov
into
cwtl
ficomps
data16
in
lahf
lods
mov
inc
lret
aad
inc
cmpsl
xor
lret
inc
sub
stos
nop
jecxz
dec
movsl
adc
cltd
pop
xchg
js
mov
sbb
ret
jecxz
scas
ret
jns
sub
imul
movsl
sbbl
mov
stc
pop
enter
pop
xor
mov
push
mov
clc
jg
lock
or
push
daa
repnz
adc
aaa
xor
sbb
xor
insb
movsl
mov
jne
cs
xchg
popa
xchg
mov
data16
inc
ss
aaa
mov
test
mov
or
mov
fimull
add
xor
std
daa
test
dec
sbb
aam
xchg
in
xor
add
repz
and
insb
sbb
lret
push
adc
adc
cmp
cmp
cmpsl
shll
iret
mov
xchg
inc
xchg
rorb
ret
mov
push
repz
and
add
mov
cltd
icebp
push
enter
insl
and
mov
shl
imul
sub
call
push
cmp
adc
cmpsb
lods
push
cli
mov
rcrb
in
ret
mov
mov
mov
add
and
mov
sbb
xchg
andb
fistl
mul
repz
cmp
shrb
xor
test
push
gs
fsubr
jmp
loope
lret
add
mov
dec
mov
lods
cmp
dec
or
xlat
out
aas
add
popf
mov
into
sar
stc
in
dec
adcb
lcall
adc
mov
jne
and
clc
iret
push
scas
mov
fisttps
nop
out
add
or
ffreep
mov
adc
jnp
ja
arpl
mov
and
ljmp
push
push
push
mov
dec
xchg
int
adc
shll
add
xchg
lock
push
imul
ss
jmp
sub
pop
lcall
push
mov
ss
gs
pop
push
dec
and
test
sub
in
divb
das
xchg
cli
loop
cmpsb
cmpsb
xchg
daa
sub
lock
pusha
mov
js
popf
sahf
cwtl
iret
test
sub
aaa
sbb
fs
ficoml
jmp
push
or
das
rcr
cmc
pushf
into
fidivrs
es
inc
fdivs
mov
int
fadd
js
push
fld
test
mov
out
aaa
scas
push
in
les
pop
pop
pop
ror
test
push
orb
lock
leave
stc
clc
mov
shrl
dec
popf
lret
roll
xor
rcrb
test
xchg
push
loope
jmp
push
xor
cmp
pop
cmp
and
cli
fs
adc
jmp
mov
mov
popf
sub
pop
mov
or
push
push
jnp
pop
inc
jnp
arpl
jge
jnp
dec
or
mov
mov
or
lret
bound
in
mov
jmp
pop
mov
repnz
stos
fcmovu
xchg
cmp
dec
ss
mov
jns
add
xchg
add
flds
push
cld
movsl
add
or
scas
outsl
scas
test
adc
insb
xchg
fwait
cmc
inc
mov
mov
mov
test
push
sub
scas
insl
clc
adc
test
xchg
minps
bound
fimuls
fs
loope
aam
pop
and
mov
int
mov
push
or
sbb
push
push
ja
in
inc
push
mov
sub
pop
into
mov
mov
cmc
jg
mov
out
cmp
jg
mov
jle
push
ljmp
push
sub
xchg
and
add
pusha
mov
int
jge
sbb
push
out
xchg
mov
push
pop
aad
adc
andl
sbb
mov
adc
ds
lahf
mov
popa
popf
outsb
xor
movsb
loope
mov
loopne
rcl
dec
push
push
mov
and
and
das
cli
pop
hlt
inc
push
cmp
add
aam
dec
jl
adc
fcomps
pop
std
push
test
sub
sbb
xor
cmp
inc
cli
fistpll
push
sbb
mov
dec
adc
inc
sbb
pop
jge
mov
repnz
inc
inc
sbb
outsl
mov
out
std
mov
popl
jg
negb
adc
sub
enter
scas
xchg
stos
push
ficompl
dec
fcomip
or
pop
jae
dec
mov
sbb
pop
or
mov
or
cmp
fwait
jne
jno
inc
sbb
gs
leave
jae
jge
sbb
pop
and
cmp
jge
mov
repz
add
movsl
icebp
xchg
das
arpl
mov
je
sbb
ds
or
mov
mov
iret
sbb
pop
dec
hlt
xchg
cmpsl
jle
cmp
push
mov
jne
jb
fistl
insb
rcrl
ret
push
cmpsl
test
js
inc
pop
insb
ljmp
adc
bound
or
fdivl
lcall
cmp
sub
dec
imul
repnz
mov
sbb
arpl
xor
pop
cmp
popa
movsb
or
inc
rolb
inc
sbb
nop
inc
jge
cs
dec
cmpl
adc
add
fwait
sarw
js
inc
shr
mov
pop
sub
push
pop
shlb
add
and
aad
sar
mov
push
jno
inc
mov
inc
gs
or
pusha
loope
in
xor
repz
mov
int
mov
jbe
movsl
add
xchg
jnp
xor
rcr
xchg
or
xchg
jle
sub
bound
xchg
js
sub
jno
pop
jmp
adcb
mov
roll
mov
fsub
push
stc
inc
dec
fistpl
ret
in
pop
sub
xlat
mov
sbb
mov
lahf
stos
xor
sbb
pop
cwtl
mov
insl
push
add
jnp
push
push
push
sub
lea
pshufw
ds
in
rcrb
lds
popa
sti
loop
sti
adc
or
xchg
movsb
mov
testb
xor
and
gs
xchg
ret
pop
ret
or
int
jo
lret
clc
inc
dec
fcmovbe
add
rcrb
mov
inc
push
cmpl
out
pop
loop
jnp
mov
mov
push
xchg
xchg
cmpsl
sub
lahf
cmp
scas
repz
std
xchg
inc
mov
popf
mov
sub
test
in
inc
rorl
test
lahf
jbe
scas
outsl
loope
mov
loopne
pusha
hlt
mov
cmp
mov
fsubs
mov
pop
mov
jo
sbb
addr16
dec
stc
arpl
rcll
xchg
test
cmpsb
jecxz
adc
jp
jmp
push
push
pop
negl
lds
ret
rorl
adc
xchg
xchg
pop
mov
dec
cmp
jno
jo
dec
repnz
lea
mov
imul
in
ret
pop
sub
loope
in
in
xchg
and
imul
mov
scas
fdivrs
cmc
repnz
imul
adc
outsb
int3
xchg
jne
add
loope
rolb
push
push
nop
xchg
fidivs
xchg
mov
std
xor
xor
jb
ja
lret
cmp
jge
sbb
es
push
ds
lea
sub
mov
mov
or
jns
sub
pop
mov
nop
cmp
lds
dec
inc
clc
ljmp
int
mov
jae
cmp
xor
shll
cmc
dec
pushf
jne
mov
push
mov
fildl
sbb
faddl
fsubrp
je
lcall
test
add
and
mov
sub
mov
rcrb
pop
fcomps
rorl
int
loope
andl
mov
lock
mov
cmpsb
scas
insb
hlt
mov
and
daa
push
push
mov
sbb
in
xlat
test
pusha
loope
mov
rolb
in
xchg
push
add
mov
testb
insl
dec
mov
sub
cmc
xchg
dec
mov
mov
mov
gs
push
push
iret
aad
inc
int3
inc
or
lock
cmc
enter
fstpl
sar
sbb
imul
push
add
mov
stos
mov
je
out
jmp
inc
arpl
test
sahf
xor
xchg
shlb
and
dec
or
es
adc
imul
lret
into
cmp
fsubl
scas
enter
push
pushf
sub
pop
push
movsl
push
xchg
out
push
js
cs
pop
rolb
dec
mov
or
xchg
jae
nop
arpl
cmp
outsl
add
pop
into
es
stos
cltd
out
sub
pop
push
fst
data16
dec
sub
mov
loope
push
sbb
inc
mov
inc
popa
xlat
arpl
jge
push
xchg
mov
into
xor
orl
sub
daa
mov
pop
and
xlat
popa
pop
mov
or
and
inc
mov
test
jns
mov
xorb
jno
sub
imul
pop
pop
cmp
add
pop
push
pusha
mov
mov
lods
push
xchg
xchg
in
and
fst
pop
xchg
lea
push
jmp
mov
je
pusha
out
int
adc
jmp
add
or
pop
adc
mov
out
mov
sbb
aad
cmc
mov
mov
push
pop
dec
mull
lock
push
stc
jbe
jecxz
sbb
leave
fstpt
xor
xchg
testb
rclb
test
inc
push
out
jne
lahf
fdivrp
punpckhbw
or
mov
pmuludq
ror
cli
jne
out
ds
mov
inc
fs
mov
sbb
mov
mov
or
pusha
mov
mov
cmp
hlt
inc
xchg
cmp
ret
enter
stc
in
push
or
fdivs
aam
mov
outsb
mov
cmp
dec
outsb
and
mov
fsubs
xchg
push
push
imull
in
js
mov
or
or
in
pushf
and
mov
mov
fnstenv
pop
push
jo
loope
mull
cmp
pop
xchg
lret
mov
add
jecxz
pop
jb
pop
pop
imul
bound
and
lea
aas
mov
lahf
mov
repz
idiv
jecxz
push
add
daa
cmpb
jae
add
push
test
push
lods
scas
mov
movsl
mov
js
ds
out
push
adc
dec
sbb
cmpsb
pop
and
add
mov
ss
pop
mov
add
lret
sbb
rorl
nopl
sub
adc
imul
jle
arpl
call
arpl
outsl
cmp
xchg
inc
cmpsb
push
int
test
mov
int3
aam
inc
mov
or
sub
outsb
je
adc
add
movsl
into
fildl
adc
gs
int3
ret
cwtl
aaa
lcall
rcr
cmpsl
cmpsl
lods
push
ds
fsubs
cmpsl
pop
cltd
add
dec
fnstcw
gs
xchg
add
mul
test
les
ss
ret
decb
push
daa
xor
xor
fists
loop
inc
xchg
mov
repz
loopne
test
add
aam
adc
insb
jo
push
or
jb
or
call
fsubrs
mov
mov
fsub
int3
mov
icebp
iret
int
lret
jge
out
cmp
mov
or
or
or
push
inc
pop
mov
icebp
addr16
pop
aad
gs
jb
push
pop
test
push
jne
push
js
xor
into
mov
and
iret
insb
fwait
pop
pop
sbb
aaa
and
aad
add
mov
icebp
insb
push
sbb
mov
jbe
mov
mov
jg
stc
jge
add
sbbl
xchg
aam
or
pushf
ds
out
mulb
lret
fldcw
mov
movl
push
scas
iret
sub
jnp
movsl
into
and
loopne
mov
subl
sub
ss
pop
shll
aas
lcall
mov
cltd
jbe
aam
fisttps
ja
mov
push
mov
or
xor
imul
fnsave
mov
dec
push
ds
lret
repnz
pop
es
and
and
dec
test
shlb
in
lret
fbld
dec
mov
int
push
pop
clc
push
sub
bound
rcll
inc
pop
add
add
gs
push
xor
mov
mov
or
sbbl
push
rcl
es
inc
or
mov
push
outsb
xchg
leave
dec
xchg
or
xchg
or
rcr
loop
lcall
je
ds
jno
lods
fs
insb
addr16
gs
sahf
lret
filds
out
aas
roll
fisubrs
sub
or
fwait
test
mov
jns
mov
repz
xchg
aas
mov
test
mov
adc
pop
sub
adc
test
in
fs
adc
in
or
xchg
fdivrl
xor
push
sbb
mov
sti
stos
push
and
or
adc
mov
push
inc
in
mov
and
cmp
inc
push
cmc
mov
test
aam
ljmp
mov
cmpsl
imul
clc
adcb
pop
rcrl
pop
pop
cmp
mov
lcall
inc
out
cld
call
and
repz
jbe
mov
inc
call
lret
jp
mov
push
pop
mov
xchg
arpl
jne
push
fistpl
and
int
imul
push
lret
shrb
iret
jne
and
shlb
mov
stc
inc
pop
inc
mov
xchg
xchg
jecxz
pop
xor
aas
test
mov
ficompl
mov
xchg
das
and
xchg
rolb
pop
shrl
aam
push
fcomps
aaa
pop
sbbb
xchg
sarl
addr16
xchg
mov
cmp
sub
pop
stc
adc
sbb
aam
pop
loop
xor
pusha
enter
pop
clc
enter
cmp
mov
inc
add
decb
jb
add
in
aas
adc
dec
bswap
xor
aas
xlat
fidivrl
outsb
mov
or
dec
pop
xor
shr
mov
adc
pop
jle
sbb
pop
push
imul
adc
cli
sbb
lret
push
mov
mov
push
sub
movsl
push
adc
mov
scas
aam
sub
leave
sub
add
push
sar
lret
xorl
pop
data16
in
adc
jb
pop
or
inc
jg
jge
lea
cmpsb
jge
mov
rclb
inc
jno
add
je
hlt
adc
in
xchg
push
push
inc
jl
dec
add
fcmovu
aad
pusha
mov
and
aas
cmc
fnstsw
daa
jecxz
mov
mov
add
cwtl
add
dec
lahf
mov
cmpsl
das
push
stos
push
and
sub
sbb
inc
daa
mov
cmp
cmpsb
fisubrs
daa
sbbl
lret
jno
mov
jecxz
fdivs
das
rcll
dec
ss
sti
stc
xchg
mov
pop
rcl
inc
lock
movsb
xchg
pop
lods
push
mov
adc
out
and
addb
push
cmp
sbb
mov
and
idivl
mov
fnstenv
pop
daa
aam
mov
pop
pop
or
jo
call
pop
cmp
sbb
test
imul
mov
stos
jg
mov
leave
xor
sbbl
inc
pop
pushf
xchg
scas
or
lods
subb
xchg
ljmp
into
ljmp
je
popf
stos
insb
sarl
pop
pop
adc
ljmp
mov
lret
dec
jo
pop
add
das
xor
out
aaa
inc
pop
loopne
jae
imulb
inc
sbb
lods
jle
fisttpl
cmc
push
sbb
cwtl
rclb
mov
jns
or
push
inc
ret
inc
in
pop
pop
jmp
xchg
xor
pop
imul
or
mov
sub
in
insb
or
test
cmp
push
push
sbb
test
aad
sub
cmp
adc
sbb
adc
mov
out
ljmp
cmpsl
mov
repnz
ret
int
lods
dec
xor
add
or
inc
push
loope
mov
je
jecxz
fisttpl
subl
and
sub
xor
mov
pop
scas
dec
mov
int3
adc
jg
out
arpl
cmc
ljmp
lds
push
insw
data16
xchg
xor
pop
pop
imul
xor
sarl
push
mov
in
or
inc
sbb
mov
lods
push
clc
pusha
cmpsb
cmpsb
aaa
jo
mov
int3
push
mov
mov
lahf
rol
dec
stc
adc
in
mov
mov
lock
mov
subl
xchg
sbb
loopne
dec
xchg
push
push
pop
bnd
std
push
pmaxsw
shlb
push
xchg
xor
lods
je
mov
in
clc
add
test
popa
lret
xchg
sub
out
add
dec
orb
jmp
jecxz
push
push
jae
push
fcomps
jp
mov
imul
lcall
and
jae
sbb
insl
mov
inc
xchg
mov
test
notl
shlb
xchg
pop
ljmp
push
mov
lcall
int3
clflush
cmp
outsl
out
pop
mov
sbb
fistl
pop
test
ljmp
ljmp
icebp
rcr
inc
xorb
rcll
cmp
fwait
mov
mov
mov
xor
mov
das
and
xor
ja
xchg
into
jb
add
mov
push
add
clc
or
out
adc
jnp
cltd
dec
jmp
repnz
dec
sbb
push
lcall
or
cltd
das
or
int3
cld
jp
clc
sti
pop
add
shlb
cs
loop
clc
push
clc
or
or
pop
pusha
xor
dec
idivb
lret
inc
cmp
je
add
movsl
dec
lahf
pushf
mov
xchg
inc
js
sub
adc
cli
or
testl
fstpl
out
mov
adc
push
dec
mov
nop
arpl
mov
in
add
dec
mov
ljmp
sbb
sub
xor
mov
das
adc
mov
jne
mov
icebp
push
cmp
mov
cwtl
bound
push
movsl
push
sbb
cltd
add
and
inc
std
stos
cli
push
xor
xor
mov
int
adc
ret
jns
dec
pop
test
iret
mov
dec
dec
cmp
lcall
loopne
jecxz
adc
mov
push
rcr
das
test
jmp
nop
clc
dec
fdivl
movsb
aad
or
xor
subl
inc
stos
sbb
jp
push
xchg
push
cltd
aas
out
testl
mov
icebp
mov
push
add
out
mov
jp
enter
into
and
mov
gs
shrl
adc
xor
add
xchg
je
lods
test
sub
ret
lods
rcr
out
mov
test
push
ds
add
mov
sbb
maxps
sub
adcb
daa
or
mov
pop
mov
push
xchg
incl
jnp
mov
mov
adc
jno
fwait
xor
mov
push
mov
mov
lahf
xchg
jge
cmpsb
adc
test
outsb
dec
sahf
loop
add
mov
lock
shrl
mov
cmp
cltd
repnz
adc
xor
aam
inc
xchg
pop
test
xor
jne
jae
dec
jl
mov
inc
cltd
xchg
fnstsw
filds
cmp
out
test
lret
xchg
clc
divl
push
out
test
ret
clc
sub
adc
fmulp
push
leave
es
mov
loop
mov
mov
sti
aam
mov
pop
pop
jns
push
or
jmp
faddl
ss
test
mov
push
adc
mov
out
out
jne
std
shr
js
ret
and
and
pop
loopne
jle
push
jno
shlb
arpl
push
fcoms
and
leave
sbb
adc
ja
xor
xor
outsl
mov
in
mov
xor
dec
sbb
out
lods
sub
lock
jmp
mov
pop
mov
jbe
loop
arpl
out
fsts
les
fmuls
adc
cmpsl
push
test
fstpt
adc
xor
cli
jae
add
pop
rorb
jge
icebp
imul
ret
lcall
je
xchg
jno
add
ss
jp
push
xor
mov
pushf
ja
je
jbe
vpsllq
hlt
lahf
mov
jp
pop
adc
push
aam
aad
shrl
call
setbe
loopne
inc
xor
or
cmp
jle
dec
inc
sti
push
in
sbb
jno
or
shr
sahf
mov
cmp
mov
add
jae
out
fwait
je
clc
addr16
dec
and
fbstp
adc
jecxz
push
inc
loope
and
arpl
fisubs
loopne
push
ja
mov
push
add
outsb
xorb
dec
sub
incl
lds
xchg
lea
sbb
inc
pop
pop
push
adc
sbb
daa
sbb
fnsave
repz
xor
out
mov
cmp
imul
mov
jo
in
inc
loop
out
xchg
mov
mov
or
xor
gs
loop
xchg
bound
adc
rorb
fcomps
mov
shrl
add
test
imul
pop
cmpsb
add
xchg
push
mov
mov
inc
jmp
cmp
push
int
mov
rcll
sbb
jecxz
nop
cmpsl
daa
mov
pop
sub
cmpb
cli
sub
cltd
out
mov
sub
jg
pop
je
pop
fistpl
jg
shlb
aas
sub
mov
mov
jmp
mov
fbld
test
in
ds
adc
mov
sub
xor
push
bound
shrl
cwtl
rorl
push
ss
rolb
xchg
jno
imulb
jecxz
sti
lds
popa
cmp
pop
pop
in
xlat
out
mov
mov
hlt
sbb
add
loop
fs
sbb
aas
adc
fucomp
push
lcall
aaa
icebp
pop
mov
mov
shlb
outsl
ficoml
xchg
scas
or
and
dec
pop
sub
jnp
or
cmpsl
hlt
out
or
mov
cmpsl
xabort
mov
sbb
or
test
inc
popa
mov
xchg
dec
or
cmp
mov
sub
loope
int3
lock
mov
xchg
inc
inc
repz
jp
mov
or
repnz
aaa
scas
data16
and
icebp
sbb
test
xor
aas
test
test
sub
inc
rcll
in
repnz
loopne
push
and
imul
maskmovq
pop
rcrb
push
loopne
add
cltd
xchg
add
or
arpl
inc
pop
jecxz
jp
jle
or
fidivs
sbb
cmp
mov
lods
sarl
aas
cmp
bound
sbb
sahf
fisttpl
clc
jle
xchg
push
or
jl
movb
mov
aad
inc
xlat
mov
adc
sbb
jno
push
fsubrl
mov
mov
dec
adc
cmp
cmc
data16
sbb
data16
loope
out
call
rorb
js
fisttpl
test
out
out
arpl
paddsw
add
ljmp
cmpsl
mov
adc
jnp
push
and
xor
add
and
pushf
pop
lds
imul
int3
popa
jo
negb
mov
in
rol
or
hlt
jecxz
loop
sbb
clc
lods
adc
and
lcall
pop
inc
mov
adc
mov
sti
cmpsl
inc
clc
bound
xorl
mov
dec
inc
mov
rcl
mov
pop
lds
loop
jns
aad
arpl
popf
mov
test
ret
lret
mov
fcmovne
add
jns
test
out
mov
scas
mov
xlat
nop
icebp
orps
or
sub
push
lret
push
int3
mov
cmpsb
xchg
ss
aas
cli
out
scas
fimuls
mov
test
dec
mov
rolb
cmc
test
imul
aam
mov
dec
aam
vmovups
les
mov
push
sbb
mov
into
nop
jbe
fbld
cmp
cmpl
fcom
xlat
je
popa
les
aam
xchg
out
cli
aad
pop
pop
je
jmp
xchg
jmp
mov
mov
pop
dec
les
aam
mov
xor
add
push
sub
adc
and
dec
cmp
lock
call
and
out
jnp
imul
adc
sbb
loopne
les
test
pop
out
sub
mov
nop
cmp
lahf
push
hlt
int3
insb
or
and
subb
ret
sbbl
movsl
inc
jp
icebp
jnp
sub
bound
mov
inc
movsb
mov
cld
pop
inc
cmp
fsubp
inc
dec
push
lret
nop
mov
push
xchg
pushf
cwtl
fsubl
imul
add
cmpb
je
push
mov
or
xor
fsts
mov
mov
test
xchg
stos
and
pop
call
cmp
imul
pop
sbb
inc
push
inc
test
ret
in
jne
mov
fs
jb
push
xchg
clc
shll
pop
cwtl
int
lcall
scas
cmp
dec
sub
xor
mov
cmp
push
sub
mov
inc
mov
in
pop
inc
mov
push
rcrl
and
dec
mov
mov
add
xchg
pop
jo
adc
mov
movsl
ja
das
inc
jg
mov
out
sahf
out
or
dec
cmpsb
pop
push
lret
rorl
pop
into
lock
sbb
cs
or
jmp
xor
mov
mov
mov
mov
lcall
mov
pop
adc
adc
xchg
les
xor
cltd
out
xchg
inc
push
nop
mov
scas
mov
pop
xor
pop
repz
sbb
mov
cmpsb
mov
call
in
je
int3
push
rcl
inc
addr16
mov
xchg
and
repz
jmp
pop
fiadds
ss
sub
mov
jmp
out
lods
adc
push
cmp
jne
loopne
fidivrs
sbb
imul
inc
cmp
push
dec
enter
jmp
pop
ja
jo
sub
pmaxsw
add
mov
in
fucom
xor
sbb
xchg
pop
shrb
sbb
faddp
mov
push
mov
add
aas
leave
hlt
cmp
xor
jno
lcall
inc
push
xchg
lods
addr16
std
movsb
and
xchg
xor
repz
outsl
in
cwtl
mov
mov
lods
mov
xchg
int3
jno
mov
dec
je
addb
push
sub
inc
and
cmp
and
ret
add
add
rorb
es
aam
test
imul
mov
and
jnp
cmp
xor
lds
out
shll
jmp
jmp
lods
je
sbb
xchg
popf
sbb
clc
mov
aaa
shl
insb
sbb
cli
mov
outsl
or
out
xor
sub
or
into
jge
insb
test
sub
xor
repnz
add
and
inc
std
push
cld
mov
cmp
xor
lds
sub
push
call
sti
daa
dec
iret
or
and
lret
in
lret
xor
leave
push
xor
call
jnp
jp
mov
jmp
or
loopne
nop
jne
out
mov
mov
push
pushf
mov
iret
xor
repz
adc
and
into
lahf
or
arpl
shlb
mov
icebp
dec
and
insb
rcll
aad
cli
dec
icebp
cmpsl
dec
xor
lret
xchg
lods
and
imul
enter
stos
mov
pop
jmp
imul
mov
mov
ss
imul
test
jl
mov
cltd
dec
fsubrp
or
jbe
cltd
xchg
or
push
fst
jne
lods
ljmp
mov
push
aaa
jecxz
mov
inc
and
xor
ret
adc
cmp
mov
or
call
mov
push
rolb
pop
les
mov
push
and
fidivrs
cmp
and
dec
jge
inc
inc
stc
insl
sub
dec
ds
fwait
xor
mov
mov
arpl
pop
sub
test
mov
xchg
lock
insl
icebp
ror
dec
loope
lret
adc
inc
add
push
rcrl
push
jmp
es
ja
andl
mov
or
xchg
test
out
popf
pop
outsl
lock
jno
dec
aas
sub
or
xor
xor
int
dec
fnstenv
and
and
or
mov
cltd
xchg
inc
hlt
mov
pop
or
data16
pop
lahf
testb
cmp
push
xchg
repnz
cmpsl
push
insb
or
add
mov
ds
data16
add
lea
aam
fsqrt
fmul
sbb
fcomip
and
iret
jb
shrl
cltd
dec
and
in
xlat
repz
mov
dec
jo
jecxz
rol
rcll
cmp
or
cmpsl
xor
std
out
mov
cmpsb
adcb
push
sbb
fiaddl
push
out
test
xchg
pop
xchg
xchg
lea
push
std
shlb
or
cmp
dec
lcall
push
mov
cmpsl
lds
and
sub
test
mov
pop
xchg
loopne
inc
jns
jge
jbe
insl
add
stos
mov
stos
mov
pop
icebp
cld
push
sarb
popf
or
nop
sahf
mov
sbb
inc
mov
imul
xchg
lret
sub
fmuls
push
inc
ret
iret
mov
mov
xchg
dec
orl
scas
jne
outsl
mov
movsl
repz
add
pop
sbb
push
pop
int3
add
pop
push
push
fwait
jbe
leave
clc
repnz
mov
mov
cs
fcoml
mov
xor
ds
in
inc
pushf
testb
cs
sbb
dec
jbe
int
into
hlt
mov
out
sahf
gs
aaa
roll
push
sarb
or
push
xchg
xchg
mov
jge
aad
pop
sbb
jno
mov
xchg
lahf
pop
and
jecxz
cwtl
int
call
cmp
add
sub
iret
jno
cmp
sub
mov
add
mov
sbb
pusha
mov
jle
nop
jl
xchg
adc
pop
add
dec
xchg
mov
adc
jg
sbb
xor
xor
ja
ja
and
outsl
test
leave
mov
cwtl
fnstsw
cmp
sbbl
dec
roll
shlb
pop
jmp
rcrl
mov
addr16
sbb
jmp
mov
xchg
mov
add
sbb
dec
xlat
sub
pop
movsb
ss
jmp
jmp
jns
into
frstor
xlat
das
mov
mov
subb
xchg
in
jae
aaa
adc
adc
test
mov
push
push
aas
cmp
ds
push
repz
mov
lret
or
daa
mov
sub
dec
sbb
arpl
dec
ljmp
test
in
jmp
push
shrl
push
stos
pop
and
xor
push
lret
sarb
scas
movsl
es
pop
sub
call
fcmovbe
dec
inc
inc
ds
outsl
fyl2xp1
mov
inc
popf
je
pop
scas
in
xchg
lcall
mov
push
push
dec
cmc
xchg
popa
addb
add
das
push
dec
sbb
loopne
mov
mov
sarb
lds
mov
mov
xlat
and
mov
sub
inc
clc
leave
push
std
stc
loopne
xor
cmp
mov
inc
fwait
cmp
xchg
ja
pusha
hlt
pop
iret
mov
push
fcmovu
faddl
aad
loope
xchg
pop
push
mov
sub
jp
out
outsl
mov
jae
out
fwait
cltd
add
dec
or
fcom
frndint
movsl
cmp
aam
bound
xchg
sub
sub
cltd
ret
jg
loope
push
pop
mov
divb
nop
gs
push
mov
xor
js
and
push
mov
mov
and
fsubr
sbb
loopne
jnp
pop
or
sub
push
inc
call
fsubrl
das
push
ja
push
cli
stos
enter
outsb
into
mov
andb
fildll
mov
pop
inc
test
int
in
mov
js
scas
pop
imul
lods
jns
cmp
es
out
push
sub
sub
mov
dec
aad
jp
outsb
fdivrp
leave
mov
das
das
inc
rorb
cli
lods
mov
cwtl
push
mov
push
sbb
imul
xchg
mov
mov
and
inc
popf
out
push
xchg
popf
leave
pop
add
adc
mov
dec
mov
mulb
add
repnz
test
cmpsl
lock
lods
inc
out
sbb
fprem1
mov
outsb
cmp
cmpsl
jmp
jmp
or
insl
lds
les
inc
test
pop
sbb
in
in
insl
inc
xchg
mov
mov
inc
fwait
sub
push
icebp
jae
test
pop
adc
idivb
dec
mov
aad
push
mov
dec
int
rorb
in
mov
mov
and
xchg
dec
sahf
cmp
add
add
pop
mov
gs
cmpsl
sub
pop
sub
es
lods
xchg
mov
inc
fiadds
xor
sub
fisubs
cmp
or
les
pop
aad
jo
push
push
xor
std
into
in
test
cmpsb
fadds
mov
or
inc
in
jmp
xor
lods
pop
sub
loop
ja
inc
cwtl
add
cmc
jg
or
bound
xorl
test
loop
aas
cmpsl
or
ljmp
enter
push
fbld
stc
movsl
out
filds
push
add
xor
push
xchg
mov
pop
sbbl
out
add
push
cmp
stc
or
lods
mov
dec
sub
jb
cmp
scas
fstpl
subb
mov
cmp
xor
int
lcall
iret
cmpb
loop
into
out
mov
push
mov
jge
dec
jmp
dec
in
ds
pop
pop
jae
mov
ss
xchg
scas
mov
rorl
dec
popf
fildl
fldcw
out
popa
jo
inc
fcoms
repnz
mov
sub
or
idivb
cli
mov
jg
dec
mov
out
in
mov
jae
jne
jbe
mov
addr16
stc
mov
into
rolb
or
in
cmp
and
push
mov
rcl
mov
lahf
cli
pushf
pop
hlt
mov
subb
cld
or
lcall
xorb
lcall
sbb
incl
mov
jecxz
mov
gs
sub
inc
movsl
sbb
fldt
mov
sbb
mov
add
cmpsl
and
hlt
or
jns
bts
add
insl
or
test
fdivp
pop
gs
shll
jae
push
fnstcw
bound
jp
rolb
adc
call
shl
ficompl
xchg
pop
jle
sub
in
imul
aam
mov
sub
pop
scas
out
mov
fcomip
popa
lea
dec
in
into
inc
cmp
nop
aam
mov
and
mov
imul
fidivrl
sti
dec
daa
scas
fs
repz
insl
adc
fadd
mov
sbb
fadds
dec
xor
in
or
and
xor
shl
mov
scas
repz
dec
into
sub
aas
adc
jno
cmpsl
sub
aam
xor
sahf
sbb
shll
or
mov
ret
cmpsl
sti
call
test
ss
loop
aaa
or
mov
rcl
xor
jmp
gs
pop
or
sub
xor
popf
sub
int3
faddl
fisttpl
aaa
ret
push
mov
clc
and
lock
adc
jg
aas
mov
repz
push
clc
mov
xor
fisubrl
push
sub
bnd
lock
jb
insb
xchg
repnz
sub
or
sub
adc
xor
jb
movsl
or
cmp
in
and
out
stos
or
imull
lret
sahf
and
loopne
mov
mov
fldpi
push
add
in
pop
hlt
push
inc
push
xchg
rclb
lahf
out
fwait
mov
jle
pop
sahf
adc
out
filds
insl
rcrb
mov
add
data16
push
and
mov
fldl
cmc
pop
dec
inc
pop
mov
outsb
xchg
adc
mov
dec
or
xorb
ror
ja
jmp
mov
lea
jle
ljmp
je
dec
fstps
xchg
out
inc
mov
push
or
pop
push
pop
stos
sub
or
or
jge
or
pop
push
mov
xorl
adcl
inc
push
int
clc
add
or
into
test
ret
ret
enter
xor
xchg
dec
fs
dec
jmp
push
mov
mov
push
pop
fdivs
and
sub
push
in
push
adc
hlt
xchg
add
shlb
or
test
cmp
idivb
addb
stc
addb
jecxz,pt
les
cld
lret
mov
mov
add
test
mov
adc
loop
out
mov
sti
mov
test
test
xor
mov
pop
int3
xchg
testb
xchg
shlb
push
fistpl
aam
aad
loope
cmp
test
sub
nop
in
js
flds
mov
aas
jle
rcrl
pop
jbe
push
sub
adc
mov
ljmp
xchg
bound
or
sbb
push
fsub
nop
icebp
cmpsl
imul
cld
xchg
pop
dec
xchg
out
push
cmp
je
fsts
sub
xchg
cwtl
push
add
daa
jns
das
out
dec
sbb
aad
or
ds
cltd
xchg
jge
cmp
loopne
das
mov
pop
ds
sub
jl
cwtl
xchg
and
add
cli
divl
pop
pop
sti
dec
and
inc
pop
jmp
leave
insb
push
dec
lahf
repnz
test
test
imul
push
or
lret
addl
add
inc
stc
adc
jno
fcoml
adc
push
scas
lret
sbb
push
inc
xchg
push
xor
les
xchg
add
jg
cmp
outsl
lret
sbb
subl
cmpsb
push
mov
sbb
popa
or
xchg
fstl
scas
jl
xchg
frstor
xor
xor
cmp
pop
pop
adc
jae
jns
sub
cld
mov
jp
jbe
aaa
xor
add
push
cmpsb
popl
dec
mov
cmp
adc
aas
mov
mov
lret
inc
jge
mov
inc
adc
clc
in
and
xchg
add
cmpsb
xor
clc
sbb
test
and
mov
popf
sahf
xchg
pushf
sbb
movsl
or
or
and
inc
sti
adc
shlb
data16
je
mov
rorb
loope
and
mov
jecxz
mov
sbb
sahf
int
ja
mov
cli
and
inc
push
test
cmc
fcmovne
jns
jno
out
shl
pop
adc
in
enter
sub
push
jne
int
scas
aas
fmul
mov
mov
sub
mov
ret
std
repnz
push
pushf
fwait
mov
push
dec
iret
movswl
inc
sbb
sub
jnp
push
shl
sbb
imul
xchg
pop
iret
fcmovnbe
data16
pop
movsb
inc
push
pop
cmp
sbb
lds
adc
std
sbb
and
fbld
and
add
and
cltd
adc
xor
and
mull
insl
iret
loop
inc
pop
pop
shll
clc
lcall
les
int3
into
xchg
lea
lahf
test
fcomip
mov
mov
rcr
mov
cmp
outsb
mov
mov
scas
jne
adcb
bound
in
popa
rcr
add
int3
cmc
imul
loope
add
out
ds
adc
dec
lods
xor
xor
xchg
sub
les
dec
std
aam
push
jns
aam
in
pop
cltd
lock
jo
and
mov
arpl
ds
inc
sub
insl
movsl
cmp
dec
hlt
imul
mov
fsubs
pop
lret
xor
shrb
inc
cmp
xchg
negb
inc
das
out
fldt
leave
inc
sahf
lahf
or
pop
add
ret
dec
adc
push
negl
sub
std
pop
iret
adc
sti
pusha
pusha
mov
loope
loop
inc
and
imul
and
fadds
sbb
addl
jg
stc
add
pop
sti
ljmp
push
xor
or
xchg
sbb
add
adc
sbb
mov
jo
movsb
sub
inc
push
shrl
pusha
mov
lds
les
jecxz
adc
sbb
push
adc
or
out
xor
dec
or
shr
data16
test
mov
cltd
pusha
ds
cmp
fs
add
aam
lock
in
scas
mov
leave
shll
pop
ss
cs
shld
loopne
loop
in
add
loopne
test
ret
push
jp
jp
xchg
xchg
mov
rclb
clc
rol
inc
xor
jmp
sbbl
sbb
lods
sub
aam
subb
and
jbe
rorb
dec
sbb
adcb
loopne
xchg
movsl
or
mov
lods
fnstsw
xchg
int
pop
xor
iret
xchg
movsb
enter
xchg
xor
lock
gs
ds
aad
into
adc
popa
mov
sub
push
sub
mov
or
mov
nop
les
adc
addr16
jmp
mov
call
into
dec
mov
pop
push
sbb
aaa
cmp
mov
pop
fdivrl
into
pop
mov
and
scas
pop
dec
out
xlat
invd
test
cmp
rolb
bound
cmp
iret
xor
mov
cltd
imul
lret
arpl
cwtl
dec
and
mov
inc
scas
int
mov
jp
sub
pop
dec
ret
test
les
xchg
mov
imul
shlb
shl
lods
push
clc
jg
lcall
push
pop
and
and
dec
and
inc
sub
jg
fmuls
pop
and
loopne
mov
mov
cmp
or
adc
push
adc
pop
mov
sub
push
or
jecxz
out
cmp
inc
rolb
dec
jnp
hlt
adc
mov
std
or
int3
adcb
xchg
or
hlt
pop
xchg
sbb
cmp
pop
shrb
cmp
shll
iret
fstl
sbb
push
cmp
mov
or
nop
push
jecxz
das
and
dec
enter
xorb
sbb
mov
xor
ljmp
cmp
movl
jnp
adcb
ss
cld
sub
mov
pop
ret
mov
push
xchg
mov
arpl
adc
mov
scas
xor
lret
dec
push
mov
out
pop
fwait
mov
loopnew
mov
scas
mull
or
jb
pusha
imul
jge
mov
cmp
mov
pop
lods
sub
sub
jo
or
cmp
insb
std
jp
xchg
cltd
sub
lods
xchg
xor
add
in
arpl
or
sti
mov
pop
cmp
xor
scas
xchg
shrb
jp
les
xchg
int
push
test
scas
into
and
repnz
outsb
fwait
push
mov
jmp
push
xchg
jmp
sbb
jns
mov
adc
cmp
iret
push
aam
and
out
fs
cmp
test
movzwl
loop
pop
ss
imul
pop
jge
pusha
aam
cltd
mov
and
fnsave
jo
cmc
push
xchg
loopne
add
jns
jbe
dec
shll
sbb
pushf
inc
xchg
mov
dec
pop
mov
jnp
mov
push
mov
push
ja
mov
insb
out
or
jge
lods
iret
jno
pushf
add
icebp
pop
mov
cmpsl
mulb
add
mov
in
add
add
pop
push
pop
pop
daa
cmp
dec
pop
jge
aas
comiss
inc
incl
pushf
sbb
mov
or
test
xor
xchg
subb
cmc
mov
movsl
loope
andl
lcall
jae
test
push
dec
cmp
in
inc
pop
sub
mov
call
and
repz
mov
movsl
outsb
cmp
cmp
mov
mov
sbb
or
cmp
popa
sub
fiaddl
adc
sbb
inc
and
ss
dec
sub
aam
xchg
cwtl
add
loopne
daa
enter
push
fcomps
das
fsubrs
bound
pop
mov
jno
cs
rclb
push
push
dec
mov
jecxz
and
sbb
out
cmp
add
inc
addb
cli
stos
xchg
adc
sbb
scas
inc
add
addr16
mulb
inc
push
xor
scas
pop
mov
xchg
xchg
ds
push
add
out
aas
jge
popa
je
or
push
scas
mov
push
inc
outsl
pop
jns
mov
and
pushf
adcb
push
test
sub
scas
mov
add
xor
mov
pop
fnstcw
inc
adc
or
loop
cltd
push
out
mov
enter
jbe
xchg
sti
mov
jecxz
mov
lcall
sbb
ret
sysexit
push
push
fs
xor
idivl
dec
leave
dec
or
clc
cwtl
rcr
lock
hlt
mov
pextrw
pop
xor
out
jae
adc
adc
stc
and
sub
rolb
push
dec
pop
inc
orl
cmp
les
push
xlat
shrl
push
cmp
jp
adc
ja
loopne
sbb
sti
inc
adc
jb
std
mov
mov
ja
aam
daa
xchg
jae
in
scas
jle
rep
mov
fwait
mov
cwtl
test
push
cmp
sti
movsl
popa
mov
scas
xor
lret
out
pop
xchg
arpl
dec
jl
das
xchg
xchg
ljmp
mov
lahf
imul
xchg
sbb
movsb
dec
lods
mov
mov
aas
std
jg
ja
inc
adc
shrb
mov
jbe
adc
test
xchg
leave
cs
mov
mov
into
imul
test
xchg
lret
scas
or
or
jbe
cmp
in
mov
aaa
pop
rcrl
cmp
xor
push
xor
cmp
pop
mov
jmp
sbb
or
lea
into
scas
push
sub
xchg
inc
fs
push
aas
cs
lahf
mov
movsb
jl
mov
cmp
ljmp
insb
sbb
shll
dec
xor
test
rcll
and
add
into
cmc
sub
out
inc
test
nop
cld
push
aam
iret
in
and
cmp
cmp
clc
push
sub
pop
das
testl
pop
pop
out
xor
aaa
and
xorl
jno
insb
mov
jns
mov
or
xor
jl
enter
mov
pop
fs
mov
xchg
inc
cmc
jl
ret
in
out
dec
mov
pop
inc
std
adc
add
rorl
mov
push
xchg
and
sub
pop
scas
pmulhuw
lock
das
lock
xchg
hlt
divl
push
mov
sub
popa
inc
es
jno
aaa
mov
dec
sub
pop
pop
dec
sti
cmp
aam
xchg
lea
cld
jmp
jle
in
lods
in
mov
jg
in
flds
push
and
xor
data16
shrl
jbe
sub
icebp
mov
sub
shlb
fs
inc
fistpll
clc
mov
pop
mov
sbbb
mov
pop
push
pop
jg
push
fstps
pushf
mov
xchg
sbb
daa
adc
jge
jae
shll
mov
out
sahf
mov
mov
jg
icebp
insb
in
inc
jmp
ficoms
fdivrl
push
call
cmc
xor
push
test
adc
sub
shll
sub
aaa
popa
mov
loopne
push
and
jp
ficompl
dec
in
add
cmp
xor
pop
stc
mov
insb
jecxz
out
lods
mov
mov
shlb
jmp
sub
lods
jmp
push
adc
mov
sbb
mov
or
adc
les
sbbb
xor
andl
dec
cmp
sbb
sbb
jno
pushf
insl
icebp
push
pop
rcll
imul
sarb
jnp
inc
ds
dec
inc
jo
in
dec
jle
sbb
in
inc
mov
gs
fsts
stos
mov
jge
xor
in
add
pop
pop
mov
je
inc
enter
sahf
lods
cmpsl
cwtl
push
dec
movsb
imul
rcr
push
cmpsb
repz
ret
push
pop
jno
add
jo
sub
and
add
mov
mov
insb
cmp
pop
xor
xlat
cmp
scas
dec
mov
shlb
mov
fdivrs
shlb
mov
cmp
pop
ja
pop
push
sub
push
decb
sub
pop
xor
jnp
push
xchg
stc
push
mov
std
ret
in
je
std
repnz
in
mov
sarb
adc
arpl
fcmovnu
popa
lret
jle
mov
outsb
push
outsl
ss
mov
mov
xor
sti
dec
cmpsl
insb
push
sbb
outsl
push
push
mov
mov
popa
and
cmp
std
outsl
lahf
pop
cmpsb
or
int3
cmpsl
and
inc
popa
ss
in
neg
imul
mov
push
repnz
xchg
mov
mov
jecxz
enter
inc
mov
push
popa
das
xor
adc
lods
jne
pop
call
jmp
push
insb
adc
push
jg
fistpll
fwait
sub
lea
xor
cmpsb
int3
sbb
cmpl
xor
push
push
xchg
jo
inc
xchg
fcompl
inc
push
aam
or
insb
inc
fs
dec
cmp
push
arpl
adc
jecxz
imul
data16
or
fdivl
fidivl
pop
push
sbb
xchg
test
jo
jb
cmp
mov
addr16
movsl
insl
js
jbe
cld
mov
int
popa
std
popf
cwtl
mov
fisttps
call
jbe
xchg
and
pop
inc
mov
lret
add
lods
insb
sbb
ds
in
scas
push
pusha
aaa
cmp
stos
ljmp
mov
add
loopne
shll
jo
lcall
shrb
sahf
nop
add
adc
adc
loop
cs
dec
and
pop
dec
mov
pop
mov
addb
arpl
je
push
scas
cmp
push
jg
shrb
mov
gs
inc
cmp
sub
xor
test
xchg
int
sahf
lret
sub
or
dec
mov
or
push
sub
xchg
stos
adc
adc
fsubs
pop
fldl
data16
lods
jb
sub
pop
imul
lcall
mov
shrl
sbb
mov
das
fwait
sbb
rcrb
mov
test
lcall
jl
in
leave
inc
add
outsb
test
add
adcb
imul
mov
fstl
xchg
mov
clc
add
out
popf
push
jg
adc
out
cmp
cmp
cmp
xchg
insb
push
imul
mov
iret
jns
fadd
fildll
mov
imul
adc
sub
lcall
ret
xchg
movsl
jo
sti
enter
mulb
jg
mov
cmpsb
adc
cmp
enter
mov
inc
sbb
arpl
test
xchg
and
sbbl
iret
cmpsl
dec
push
jne,pt
addr16
or
iret
adc
mov
adcb
fs
sbb
imul
jg
loope
and
xor
leave
insl
je
cmp
mov
iret
out
cltd
push
enter
or
sub
das
jne
out
cmp
xchg
sub
jmp
imul
aad
ficoml
adc
ss
mov
ss
jecxz
pshufw
mull
push
loopne
cli
popa
imul
or
and
xchg
xor
and
push
mov
pop
scas
inc
int3
fsubrs
mov
inc
bound
fdiv
mov
xor
or
out
push
sub
dec
pop
call
or
fwait
xor
mov
das
sub
sar
adc
jmp
mov
mov
pop
pop
aad
push
xchg
dec
xlat
lock
jne
and
int3
gs
mov
pop
in
ljmp
cs
sub
pop
push
mov
ds
adc
xor
fists
mov
aaa
lock
xchg
xchg
out
movsl
lods
push
add
sub
pop
hlt
dec
add
xchg
sbb
sbb
push
and
mov
xor
mov
adcw
push
clc
int3
gs
xor
pop
inc
inc
mov
in
push
ja
fwait
std
pop
fidivrs
pop
lods
or
and
das
aam
add
push
pop
sbb
cmpl
idivb
cmp
inc
mov
pop
icebp
out
push
in
cld
out
fst
lods
les
mov
xor
in
lea
push
push
loopne
es
les
repnz
fists
data16
push
jae
or
ljmp
push
pushf
enter
hlt
sbbl
xchg
or
stos
push
fsubr
movsb
mov
cmpsl
leave
and
sbbl
push
cmp
aas
jb
sahf
xor
mov
inc
xchg
scas
sbb
sub
not
sbb
repnz
pop
outsl
data16
int
aas
mov
mov
jo
xchg
sarl
or
mov
aam
mov
mov
jp
int3
shll
int
xchg
rolb
int
leave
mov
xor
shl
repnz
in
sahf
xor
pop
add
call
int
pop
xor
or
and
sbb
push
jl
mov
stos
xchg
dec
je
inc
fnstcw
ret
push
pop
adc
stc
and
jecxz
movd
in
ljmp
sub
imul
inc
clc
paddw
pop
movsb
mov
pop
aad
and
mov
sub
cmp
sbb
lods
mov
insb
cltd
xchg
mov
and
mov
and
pop
cmc
fists
outsl
and
call
ds
push
jp
nop
sub
xor
jle
or
popf
lcall
sti
cwtl
in
jg
jns
push
push
in
cmp
cmp
add
mov
stc
jp
icebp
fsubs
cmp
daa
or
mov
iret
pop
out
ljmp
bound
fs
and
ret
nop
gs
cwtl
xchg
aas
ficompl
mov
pushf
imul
mov
imul
jns
or
adc
lea
or
fs
aad
sarl
ret
mov
stc
ds
jbe
imul
fcmovnu
pop
popa
out
xchg
xchg
adc
enter
adc
imul
mov
stc
int
loope
pop
pop
and
in
add
scas
cltd
xchg
pusha
fidivrl
int
ds
jns
repz
ja
filds
test
push
mov
jmp
xchg
shlb
cmp
sbb
sub
std
xchg
xchg
xchg
jbe
shll
cld
mov
fsubr
stos
pop
mov
xchg
mov
std
nop
test
loope
inc
or
or
jne
scas
fisttps
jecxz
test
mov
aas
into
cltd
push
mov
inc
dec
cwtl
loopne,pn
add
pop
sub
ret
adc
mov
sbb
cmp
lret
loop
ljmp
dec
je
or
sti
or
mov
fcoms
pop
push
add
call
inc
int3
and
cmp
movsl
stos
inc
daa
int
xchg
mov
nop
inc
adc
movhps
fstpt
or
mov
dec
imul
push
xchg
ss
jle
add
xor
sub
pop
or
cwtl
add
xchg
and
sbb
ss
repnz
pop
icebp
jnp
insb
xchg
dec
in
adc
mov
xor
add
add
or
das
and
lods
push
in
je
pushf
xor
pop
pop
js
jmp
jge
inc
popa
add
lock
mov
dec
mov
inc
test
xchg
xchg
je
inc
hlt
mov
inc
xor
or
stc
leave
imul
test
cmp
lock
xchg
push
loopne
push
inc
sub
cmp
sbb
push
mov
xor
or
insb
cmp
pop
mov
mov
pmulhw
fsin
and
fstpt
ja
mov
adc
push
mov
cs
pop
fldt
xor
test
mov
jae
in
shrl
or
jnp
jecxz
push
sub
iret
aad
mov
or
cld
inc
lret
sarl
test
sub
aas
add
ljmp
pop
jg
enter
adc
jbe
inc
push
or
pop
mov
icebp
outsb
xchg
imul
or
xor
add
fisttps
add
cld
xor
or
mov
lcall
cmc
push
loop
jns
xor
push
jns
aad
mov
xor
and
and
inc
das
or
xchg
mov
fcoms
push
push
dec
jle
rcr
stc
in
in
out
cmpl
call
mov
shlb
lods
xor
push
dec
mov
adc
add
add
cmpsb
xchg
mov
imul
dec
or
push
xor
pop
xchg
ffree
sarb
out
cwtl
or
xlat
test
data16
fistps
mov
jmp
xchg
push
imul
xor
lds
aam
pop
ja
pop
cmpsb
out
mov
mov
and
inc
add
inc
cmp
or
and
cmp
and
clc
sub
and
dec
push
clc
jb
xchg
dec
pop
fdivr
jno
popa
fs
jb
or
mov
and
fidivl
or
sti
jp
ffree
jns
or
jp
cmpsb
adc
mov
insb
scas
out
mov
ss
add
jne
pushf
movsl
popa
lock
lret
nop
xchg
scas
cs
and
adc
or
rorl
inc
mov
icebp
xlat
cld
push
test
or
mov
and
out
lret
and
xor
fistpl
pushf
xchg
mov
shll
xchg
xor
pop
out
ss
std
jl
icebp
test
jg
pop
in
jns
and
ljmp
inc
fstps
cs
mov
mov
lods
fiaddl
jo
lds
cld
addr16
mov
stos
insl
scas
push
stc
pop
in
lods
push
in
adc
or
mov
es
inc
or
lods
sbbl
xchg
and
pop
jno
leave
mov
sbbb
stos
push
jne
xchg
pop
dec
pop
hlt
adc
inc
and
xchg
inc
xchg
loop
sub
imul
mov
push
cltd
mov
punpckhwd
movsl
test
sar
dec
ss
mov
in
out
repnz
mov
xchg
in
mov
sarl
sub
enter
adc
dec
insl
mov
sahf
jae
addl
in
or
rorl
ret
xchg
cmp
xchg
call
andb
jl
das
mov
sti
test
xchg
push
push
in
mov
xor
das
dec
and
mov
mov
in
fcomps
cmc
and
or
add
xchg
jno
pop
xchg
mov
es
out
rclb
sub
lret
sbb
push
pop
xchg
adc
mov
sbb
inc
fs
daa
lret
scas
int3
mov
pop
and
adc
loopne
lods
pop
push
or
and
or
inc
dec
inc
scas
je
push
lods
test
shll
lods
aad
dec
repnz
add
rep
lds
fisttpl
outsb
sbb
mov
stc
pop
pop
movsb
test
sub
fsubs
inc
fdivrs
outsb
sub
icebp
jb
pusha
mov
or
movsl
rcr
inc
xorl
pop
in
push
scas
cmpsb
add
jae
or
adc
ds
cli
mov
dec
call
push
or
mov
iret
sbb
xor
mov
clc
and
addr16
jmp
or
inc
or
jo
adc
test
hlt
cs
sub
sbb
out
dec
mulps
push
popf
adc
inc
out
and
test
mov
adc
js
xor
inc
or
sarb
stos
data16
mov
mov
mov
jge
in
mov
cmp
add
sbb
cwtl
xor
jne
cmp
call
dec
mov
cmpsb
insb
xor
fistpll
mov
test
adc
stos
adc
rolb
dec
int
mov
mov
mov
aam
adc
sub
outsl
fdivs
ds
enter
inc
in
in
loopne
cmp
test
mov
and
enter
push
cmp
mov
pop
outsb
fldcw
sbb
mov
stos
lods
xchg
in
inc
outsl
jmp
lock
or
js
or
loop
leave
push
jecxz
jo
outsl
mov
push
lock
or
push
repz
cmp
cmp
sarb
jnp
lods
mov
mov
fs
lds
push
xor
in
hlt
or
xor
lahf
into
push
lret
sarl
call
es
xor
and
sbb
jno
insl
adc
mov
sub
jae
sub
clc
dec
ret
pop
repnz
mov
xchg
shlb
popf
sbbl
and
inc
jbe
aaa
cmp
jmp
cmp
lret
mov
pop
stc
and
jb
js
mov
clc
fiaddl
and
push
outsb
jecxz
aas
cmp
xchg
pop
ss
or
xchg
dec
daa
jg
cmp
fiaddl
sub
je
xadd
and
stos
xchg
lret
jae
mov
mov
push
mov
arpl
mov
pop
sub
or
loopne
xchg
sarb
loopne
pop
push
add
cmp
dec
shl
bnd
fbld
sti
lods
lds
testb
or
xchg
jbe
imul
xchg
xchg
mov
jle
mov
dec
lds
push
jecxz
jge
push
ret
xlat
cmpsb
push
ds
fildll
rcr
js
push
mov
adc
sub
mov
iret
leave
pop
shll
cmp
mov
or
scas
dec
popa
adc
adc
push
repz
and
ljmp
cmpsb
xchg
lock
cld
je
xor
outsb
jb
filds
sub
jecxz
push
lret
push
fldt
push
or
pusha
shrb
arpl
push
inc
scas
jp
adc
xor
cmp
fldcw
jno
or
sub
sbb
insb
xor
pop
ret
xchg
xor
std
orl
mov
jne
cwtl
or
sbb
fs
xlat
je
dec
test
add
ljmp
out
call
loop
lret
bound
mov
stc
imul
mov
mov
out
repnz
xor
mov
ds
inc
dec
inc
rol
paddw
bound
insb
cld
jb
data16
and
sets
mov
push
test
push
ja
push
mov
scas
aad
fidivs
mov
jge
mov
or
ss
lahf
xchg
mov
testl
movsl
icebp
shll
movsb
loope
pop
popa
cmpsb
jg
orl
or
mov
andb
adc
inc
add
jmp
jnp
mov
jbe
inc
mov
or
shrb
dec
out
in
cmp
pop
pop
jle
test
movsb
mov
dec
dec
popf
cmp
dec
sbb
fstp
pop
sti
mov
mov
inc
jmp
sub
xchg
cs
pop
pop
test
inc
lock
aam
addl
or
pop
push
mov
fcmovnb
jbe
jae
loope
ja
jmp
popa
add
mov
sub
fisttpl
sbb
push
aas
rcll
sbbb
les
imul
movb
adc
mov
notl
pop
out
in
imul
bound
roll
test
testb
sbb
enter
cmc
mov
daa
or
xchg
cli
or
aas
pop
jp
or
fsts
mov
add
mov
test
mov
test
sub
out
push
bound
push
das
iret
pop
mov
pushf
popa
mov
pushf
imul
loopne
stc
dec
mov
cli
mov
pop
mov
xchg
sarl
xor
aas
icebp
movsl
mov
insb
les
fsubrs
icebp
mov
and
clc
mov
test
test
xlat
and
jo
fistpll
jle
dec
dec
cmp
and
fwait
jno
sub
jno
jns
std
xchg
xchg
pop
lods
neg
popf
pop
aad
pop
fiaddl
int
iret
and
sub
sbb
jle
cld
adc
mov
and
mov
add
and
loope
adc
in
xchg
out
outsl
ja
insl
push
inc
gs
fwait
pop
mov
and
cmp
out
pop
lea
dec
call
std
into
xlat
iret
dec
bound
int
mov
or
pop
add
mov
jl
repz
enter
and
repz
movmskps
or
jp
xchg
dec
mov
and
jns
imul
sub
enter
cmp
mov
xlat
data16
bound
fisttpll
adc
xchg
loop
xor
test
inc
jecxz
xor
popf
in
in
shlb
mov
insb
cmc
test
nop
ds
add
out
cmp
insl
lea
jae
cmp
add
ficoms
and
mov
aaa
jno
fs
mov
arpl
mov
and
mov
pop
fs
and
popf
mov
mov
xlat
sub
pop
push
sbbl
mov
out
aaa
dec
xchg
sahf
add
cwtl
sub
lret
mov
jle
cmp
sub
sub
push
dec
mov
rcrl
stos
sub
cwtl
out
inc
sti
mov
cmp
sub
addl
sbb
pusha
ja
in
ljmp
xchg
xchg
loope
inc
xchg
pop
xor
pop
xchg
sub
lret
inc
cli
sbb
fadds
scas
rcl
mov
or
mov
fwait
dec
xchg
and
popa
lcall
sub
imul
lods
dec
push
loope
sbb
jmp
adc
xor
mov
pushw
sub
loop
cmp
xchg
sbb
aam
rcrl
xor
push
adc
cmc
jne
rcl
jecxz
jp
cs
test
out
adc
and
sub
xor
xchg
or
shlb
sub
lock
push
add
xchg
cmc
mov
inc
orb
sbb
sbb
scas
inc
ja
ja
in
mov
pop
jo
enter
subl
inc
pop
adc
aam
insb
sbb
bound
lods
scas
imul
push
mov
mov
shrb
lods
push
jne
or
pop
pop
pop
pop
out
sub
push
movsb
pop
push
sbb
mov
popa
lods
xchg
xor
pop
xchg
clc
jp
dec
ss
inc
xlat
xor
les
cltd
and
repnz
repnz
add
je
xor
or
and
pop
fs
in
adc
adc
push
loop
aam
cmpsb
sub
imul
loope
test
jg
int3
jnp
and
daa
dec
mov
stos
jnp
pop
cmpsl
xor
scas
jb
mov
xchg
sbb
and
test
fildl
xlat
mov
addr16
stos
jne
out
push
dec
add
mov
xor
and
jge
and
sub
sub
lret
jns
or
mov
lret
xchg
add
lret
aas
repz
into
daa
outsb
sub
dec
and
out
fdivl
adc
adc
sub
xor
and
fldenv
aas
add
add
daa
cmp
fs
aad
das
lcall
push
lock
adc
cmp
out
je
mov
or
fwait
cmp
or
scas
lret
jg
dec
mov
add
pushf
and
lods
jno
insl
in
rcrl
pop
add
ror
xchg
mov
xor
lds
sbb
cs
leave
mul
or
shrb
or
jmp
add
mov
test
or
out
xor
orb
push
rclb
adc
jp
data16
mov
lcall
repz
push
adc
mov
ret
pop
pop
mov
jg
push
and
jecxz
in
mov
push
subb
mov
mov
xor
nop
jb
fisttpll
sbb
fldl
idivl
add
inc
aad
inc
mov
cmpsl
or
inc
pushf
jmp
jne
cmp
push
lds
mov
xor
enter
or
mov
pop
inc
push
scas
insl
push
lret
pusha
lods
jne
rclb
popa
inc
mov
enter
rol
addr16
adc
mov
jno
andb
pop
clc
fisubrs
dec
repnz
jmp
out
mov
cmp
pop
xor
das
lahf
stos
pop
lret
inc
mov
js
lret
int3
stos
jae
inc
ss
mov
popw
dec
push
ja
dec
and
lea
clc
in
cmpsb
xchg
fs
rdtsc
out
popf
ss
cmp
pop
adc
adc
shr
xchg
loope
dec
cld
imul
ret
fisttpl
test
mov
xchg
sbbl
push
xlat
fcomp
cmp
int3
jmp
mov
add
mov
dec
test
nop
xchg
je
sarl
fistpl
push
out
jnp
xchg
lods
into
fadds
cmpb
les
xchg
shrl
mov
test
pop
pop
lea
int
xchg
and
dec
clc
test
mov
mov
lcall
popf
push
inc
popf
mov
lea
gs
adc
ljmp
dec
jp
fisubl
and
pushf
aaa
jmp
cmpsb
sbb
test
xor
sarl
rorb
sti
and
data16
pop
test
mov
or
xor
aam
pop
rol
test
in
fdivrl
or
cwtl
mov
mov
cli
add
dec
push
test
stos
dec
mov
out
add
loope
test
out
fucomi
stos
sarl
pop
push
rorl
ja
int
inc
std
rorb
and
dec
mov
insb
jnp
data16
xchg
jmp
inc
cmpsb
inc
mov
and
je
jae
or
jge
sub
and
mov
pop
leave
cld
loop
fcoml
mov
push
inc
pop
rcr
fwait
inc
lods
test
cmp
mov
mov
xchg
aas
pop
fbld
adc
mov
or
movsb
sbb
hlt
out
sbbl
add
xor
mov
lcall
mov
or
adc
lods
int
loopne
cwtl
lret
jns
aad
mov
add
or
add
mov
js
xchg
xlat
adc
fwait
rorb
mov
add
out
xorl
inc
sarl
inc
push
jb
and
sub
mov
xchg
mov
and
outsb
push
les
and
test
call
mov
cltd
loope
mov
mov
loope
cmc
jp
add
or
shrb
or
icebp
dec
fistpll
or
outsl
fistl
cmp
test
roll
cmp
aam
mov
lods
sub
lret
outsb
jns
jl
mov
mov
or
js
sbb
in
fs
xchg
icebp
dec
mov
loope
pusha
fcmovb
cmpsl
cli
sahf
out
popf
xchg
pop
inc
mov
and
and
sbb
fstl
pop
adc
pop
movsl
dec
xor
cld
dec
das
or
lcall
dec
dec
mov
cli
inc
push
mov
int
jb
sti
add
out
and
repnz
addr16
jp
cwtl
fsubrs
cmc
out
inc
inc
push
fsubrp
ja
jo
push
jb
xchg
pop
out
mov
clc
inc
cmc
pusha
loop
nop
push
pop
and
add
cmc
in
dec
cmp
mov
adc
xchg
adc
mov
inc
cmp
imul
jno
and
clc
sbb
mov
adc
fisttps
mov
xchg
and
sbb
mov
cmp
hlt
insb
xchg
ret
mov
jl
xor
mov
outsl
xchg
movsb
sbb
clc
shrl
sbb
push
jl
rcrb
iret
clc
jns
jg
and
dec
dec
int
arpl
cmpsb
loopne
pop
xor
in
subb
dec
insb
pop
sub
stos
in
jecxz
push
inc
jp
xchg
pusha
aad
hlt
jns
lret
je
and
xchg
loope
mov
mov
jp
push
loopne
bound
xor
pop
imul
icebp
mov
aas
nop
cmp
aas
std
pushf
lahf
adc
xchg
and
cmpsl
ss
mov
imul
mov
and
pop
testb
sub
into
inc
jno
stos
sub
and
adc
or
outsl
ret
out
sbb
shlb
fs
stc
or
mov
and
jbe
cmp
pop
dec
repz
orb
dec
bound
or
nop
jns
mov
cs
sarl
fbstp
in
ja
push
bound
int3
ret
lret
push
sub
sub
inc
cld
sub
pop
xchg
loop
fisttpl
pop
push
jg
pop
daa
pop
sub
inc
xlat
cmpsl
dec
and
popf
xor
inc
xchg
or
je
and
in
jle
call
xor
pop
mov
movsb
and
push
mov
jno
and
xchg
fwait
xchg
imul
jmp
push
xchg
mov
cmp
jne
sbb
jge
je
xchg
popa
jno
push
sbb
fisubrl
jg
mov
sub
sub
nop
jb
inc
add
push
mov
jne
icebp
clc
lock
cld
pop
lret
mov
ljmp
lret
pusha
lock
loopne
pavgb
fidivs
aam
jbe
inc
xchg
test
dec
movsl
and
js
xchg
add
mov
hlt
ret
psubusb
jno
mov
clc
es
arpl
xchg
iret
into
fbstp
xchg
testb
pop
shr
aas
xchg
sbb
mov
fcoml
testl
in
ja
xchg
pop
lods
aas
mov
pushf
shll
mov
and
outsb
in
imul
push
popf
insl
jae
jne
push
hlt
ror
sbb
clc
test
push
dec
jae
mov
xor
inc
xor
or
mov
mov
jb
mov
outsb
jp
inc
orb
cli
shr
or
out
push
mov
or
shrb
sub
or
mov
push
fwait
addr16
or
add
lea
testl
adc
mov
lea
lock
adc
push
adc
cmpsl
arpl
jae
xchg
push
push
shlb
clc
mov
test
and
mov
sub
loope
pop
in
dec
insl
xchg
pop
je
mov
sbb
add
mov
mov
push
mov
cmp
loope
sbb
jp
push
dec
or
fisubs
pop
xor
ret
popa
pop
add
sbb
push
mov
mov
repnz
sub
dec
xor
repnz
mov
pop
pop
popa
mov
mov
data16
call
jo
nop
incb
sub
loope
mov
cltd
mov
cmp
ljmp
std
lock
repnz
push
pop
pop
push
jl
andl
cmp
push
dec
shl
bts
sbb
xor
jl
push
dec
fistps
test
adc
popf
shll
out
ficoms
jbe
pop
sbb
loopne
in
movsl
lret
and
pop
mov
xor
cs
cld
aaa
hlt
scas
ds
or
cmp
add
nop
adc
mov
ret
into
mov
xchg
push
aad
aas
mov
jnp
insb
sub
gs
mov
push
or
mov
mov
pop
mov
and
dec
add
sar
mov
xchg
jae
push
or
sub
test
ret
cltd
inc
mov
negb
mov
mov
inc
loop
push
in
lahf
adc
sbbb
sbb
loopne
jne
xor
mov
add
mov
sbbb
xchg
sub
push
inc
outsb
int
in
aaa
in
jg
in
sbb
mov
fcompl
addr16
gs
clc
xlat
jp
or
jg
cwtl
jp
in
je
dec
in
leave
dec
movsl
loop
xor
mov
inc
jmp
sub
add
clc
push
out
and
mov
stos
mov
aas
and
sbb
push
jns
mov
inc
cmpsb
imul
rcll
pusha
jl
jl
rorb
movsl
add
shl
aam
movsb
dec
pop
ds
repz
inc
push
add
shr
dec
fidivrl
fnstsw
xor
aam
mov
mov
dec
test
pusha
xlat
or
cmp
mov
xlat
out
leave
mov
jbe
outsb
xchg
icebp
pop
test
push
push
lods
test
je
xor
cmpsb
cli
fwait
jae
test
and
arpl
mov
out
adc
adc
leave
and
sub
sub
mov
or
sub
xor
add
mov
shl
fisttpll
mov
mov
sub
add
fisubs
out
add
add
pop
fcomp
inc
jge
or
shll
push
or
pushf
add
decl
inc
fwait
cmp
pop
push
sub
ss
out
push
jbe
lret
stc
pop
push
cli
fsubl
in
imul
inc
xchg
fimull
out
outsb
xchg
jnp
jne
mov
push
jecxz
xchg
sbb
aaa
dec
fistpll
int
out
movsbl
pop
idiv
cmpsb
push
call
call
or
popa
rcrl
std
sub
and
mov
fstpt
daa
int3
cs
mov
dec
shll
into
dec
and
aad
loope
bound
int3
cmpb
movsl
jns
add
pusha
add
std
push
in
sbb
cmp
imul
aad
dec
ja
pop
clc
mov
sbb
cmc
test
fcomps
push
adc
cmp
arpl
or
imul
sbb
adc
jecxz
jmp
push
arpl
mov
mov
adc
int
adc
dec
sbb
inc
pop
mov
div
inc
inc
das
ja
xchg
cs
inc
and
je
stos
or
dec
sub
shr
cwtl
jle
int
fisttpll
fwait
jmp
jmp
xor
jno
adc
push
movsb
nop
mov
sti
xlat
jnp
icebp
xchg
jnp
into
inc
fwait
into
push
iret
mov
pop
cmpb
cmp
shll
jae
pmulhw
cltd
shrb
mov
push
fidivs
sub
cmovge
jne
std
fs
push
lea
mov
in
or
ret
sub
sub
loop
int3
add
fimull
xor
sbbl
lock
jb
shll
mov
cmovo
popa
or
fbld
mov
or
jae
sbb
int3
sbb
push
icebp
cmp
cmp
loop
jecxz
push
addb
mov
pop
jb
subb
lahf
xchg
pop
mov
push
lods
mov
fwait
push
das
lfs
ss
sti
jl
in
and
lds
stos
js
adc
js
repnz
lcall
aam
sahf
ret
and
fistpl
repz
jno
mov
ror
mov
push
fistpl
adc
movl
insl
pop
sbb
into
leave
push
shlb
mov
jmp
jb
aam
pop
dec
faddl
add
fwait
in
inc
aam
push
rorb
popf
push
dec
xchg
sbb
mov
scas
xor
mov
mov
loopne
fstps
in
vxorps
cmp
dec
aas
push
fisttps
mov
loop
cmpsl
xchg
sub
aam
mov
aam
sub
clc
cltd
in
cwtl
popa
stos
outsb
push
std
add
rcll
adc
bound
mov
stos
jle
add
arpl
inc
jl
pop
mov
leave
or
sub
aad
leave
inc
ficomps
xchg
jb
inc
xchg
push
pop
addr16
in
inc
aam
shr
add
jl
cmpsl
enter
pop
push
mov
fistpll
xchg
iret
xchg
xor
jg
cmc
fsubl
shll
push
sbb
xchg
cwtl
test
pop
daa
sub
or
stos
dec
stc
pop
sbb
je
test
stos
jo
jo
aam
lock
pop
pusha
mov
adc
mov
in
push
int3
call
in
adc
mov
xchg
test
dec
push
dec
aam
fiadds
mov
xchg
push
and
mov
add
sub
out
lock
adc
push
in
inc
push
ret
dec
jecxz
ljmp
mov
dec
adc
les
cmpsl
sti
rorb
push
test
and
out
test
mov
mov
mov
inc
mov
push
mov
jle
adc
notl
inc
es
dec
pop
mov
pusha
fsubrs
mov
orl
nop
shll
cmp
and
fbstp
sbb
repz
in
and
stc
lods
insb
gs
mov
xchg
arpl
mov
outsl
cld
mov
std
mov
cmp
lahf
mov
mov
data16
jp
std
repz
call
adc
push
mov
and
sub
lahf
sbb
hlt
test
and
ret
jge
ljmp
stos
and
std
icebp
fcmove
in
les
in
mov
imul
sbb
xchg
jmp
adc
adc
inc
dec
xlat
mov
roll
adc
jne
and
sub
mov
cmc
cltd
and
fs
mov
dec
les
push
cli
dec
add
mov
and
fidivl
outsb
hlt
adc
dec
add
jmp
pop
jnp
xor
cld
add
adc
cwtl
mov
xchg
std
test
rcrl
jg
divl
add
jno
add
fdivrs
xchg
popf
or
repz
sbb
lods
lret
mov
push
data16
loop
rolb
add
es
dec
add
pop
mov
mov
add
sub
clc
sub
and
ret
out
mov
movb
fmul
push
xchg
mov
das
ds
ss
pop
jo
jl
into
int
jns
dec
mov
jb
enter
decl
daa
imul
fcoms
xor
ficompl
sub
or
mov
cmp
mov
scas
cs
or
rcrl
adc
sti
imul
out
js
xor
sub
js
stc
add
movsb
add
xchg
mov
add
stos
leave
aam
lcall
sub
lods
push
lea
js
lods
sub
pop
scas
dec
push
out
popa
sbb
xchg
int
xchg
insl
jns
aas
mov
outsl
xlat
mov
call
rcr
call
push
outsl
push
movsb
and
pop
jl
push
aad
add
bound
push
je
imul
je
fisubl
mov
pop
xchg
jbe
lss
push
sub
rorl
test
mov
aad
stos
or
pop
push
lret
hlt
clc
fcomp
xchg
rorb
mov
loop
cmpsl
xchg
gs
popa
mov
imul
lods
int
xor
addr16
test
sahf
pop
repz
xor
and
mov
mov
mov
mov
sub
pinsrw
leave
into
or
pop
js
inc
in
xchg
cmp
and
dec
pop
xchg
xchg
xor
lock
rorb
lods
dec
inc
fbld
push
push
push
cltd
shll
adc
push
lret
mov
or
aam
int3
jns
insl
negb
push
jge
mov
lds
pop
jnp
dec
flds
out
push
xchg
cli
dec
jecxz
jl
dec
jg
movb
mov
aaa
cmc
and
inc
jp
stos
jmp
in
cmpsl
loop
cmovb
sarl
mov
pop
and
sahf
subl
jp
sub
push
push
fwait
in
adc
xor
fsubrs
loopne
and
cmp
push
mov
pusha
pop
imul
push
into
or
movsb
jnp
push
jl
sbb
xchg
mov
test
je
andb
into
aam
bound
dec
dec
lea
mov
outsl
push
shlb
cmc
mov
mov
outsb
pop
lret
mov
rcl
stc
or
clc
mov
cmc
dec
and
xchg
clc
push
aam
jmp
mov
lret
fildl
or
loope
push
call
cmp
dec
mov
lds
xchg
adc
out
mov
pop
sbb
add
inc
xlat
pop
mov
sub
sub
sti
or
mov
push
dec
jge
jg
add
ret
sub
and
inc
shlb
mov
test
aas
in
ucomiss
inc
pop
std
xlat
loopne
es
in
into
add
in
xchg
inc
gs
jle
or
insl
ficompl
imul
cltd
inc
popa
xchg
jne
fldt
out
jecxz
pop
mov
adc
mov
and
mov
cmpl
insb
sti
mov
rcl
cwtl
jecxz
flds
cs
sub
jp
repnz
lds
and
stc
xor
sbb
or
mov
xor
add
push
xor
fsubrs
lret
test
inc
inc
mov
or
dec
dec
or
mov
jne
adc
hlt
xchg
mov
xor
insb
cmpsl
mov
fbld
sbb
pop
adc
and
mov
pop
pop
outsb
addl
aam
std
hlt
aam
adc
test
sarl
test
or
in
stc
push
dec
add
xchg
lret
aam
or
push
outsl
pusha
ja
mov
pop
shll
and
pop
icebp
js
inc
inc
jp
or
outsb
daa
xchg
orb
mov
xchg
aam
pop
push
sub
cmp
adc
mov
adc
push
repz
mov
arpl
push
sarl
pushl
pop
cmp
std
xchg
dec
sub
in
inc
ljmp
repz
fdivl
jp
lods
popa
jae
or
adc
or
pop
mov
outsb
sub
hlt
into
sub
test
movsl
incl
push
mov
out
ret
sbb
push
jae
dec
stos
push
cmp
push
cmp
aaa
subl
pop
pop
xchg
add
loopne
cmpsb
and
out
dec
sub
cs
dec
add
sub
loop
fldenv
cltd
sbb
adc
pop
adc
scas
mov
sbb
test
mov
sub
push
or
cltd
sub
lock
sub
push
jmp
inc
fisubs
ds
je
mov
enter
xchg
xchg
mov
xchg
mov
addb
ret
into
and
rcr
fidivl
push
adc
out
pushl
xlat
xlat
dec
inc
mov
addr16
adc
jl
xchg
jmp
sbb
mov
cs
mov
mov
or
jno
shrl
imul
scas
cmpsb
sbb
fdivrs
add
push
push
mov
pop
push
sbb
pop
sahf
js
outsl
dec
dec
mov
pop
pop
stos
dec
sub
test
test
in
pop
ss
inc
push
jg
push
mov
jb
pushf
mov
addr16
daa
add
roll
andl
adc
adc
cmpsb
shr
pushf
jp
pop
cmpsl
xchg
sbb
mov
adc
xchg
sahf
movl
pusha
das
mov
in
ret
fistps
iret
shll
or
or
push
and
mov
inc
xor
pop
in
in
cmp
pop
std
adc
sbbb
lods
cli
xor
fwait
mov
add
xchg
inc
loope
ror
xchg
cmp
aas
mov
or
cmp
ss
inc
pop
aad
mov
xchg
xchg
stos
inc
mov
or
shlb
or
aam
in
jae
cmp
jae
adc
cmpsl
in
adc
cmpsl
shrb
pop
mov
sbb
jne
mov
rorl
and
sub
xchg
push
rolb
xor
adcl
mov
add
aad
ss
jg
and
push
add
sbbl
or
call
mov
sbb
pop
and
cli
push
lcall
xchg
xchg
sbb
testb
push
add
and
lock
es
fbld
add
punpcklwd
pop
mov
rep
fcom
ficompl
popf
je
cmpsb
icebp
sti
sub
idivb
leave
or
into
pop
clc
mov
loop
jmp
xchg
test
mov
mov
xchg
nop
jmp
xchg
dec
ret
pop
adc
push
inc
fs
out
cmpsb
sub
pushf
jmp
stc
jg
lods
dec
mov
xchg
jl
mov
dec
mov
jb
mov
inc
in
jo
loope
addr16
test
adc
inc
xor
cli
mov
sub
out
cmpsl
fwait
lcall
and
and
mov
js
std
aas
fwait
push
jmp
jae
xchg
popa
aas
cltd
push
shrl
mov
ret
push
xchg
sub
popa
xchg
insl
jg
stos
fildl
dec
and
xor
lea
cmp
xchg
pop
inc
icebp
add
std
push
inc
dec
pop
ja
mov
add
and
lods
adc
mov
lret
and
jnp,pt
fdivrs
mov
push
scas
cwtl
mov
jecxz
ljmp
add
sub
mov
sahf
mov
loopne
imul
inc
int3
addr16
insb
jmp
test
inc
push
pop
push
pop
cli
sbb
shl
jbe
popf
xor
test
lcall
and
mov
cli
sahf
sub
xchg
push
inc
lods
fucomi
adc
loope
mov
outsl
mov
pusha
mov
in
decl
xchg
push
xor
sub
pop
call
or
shlb
stos
std
les
fcomps
loopne
lock
mov
test
lods
enter
das
sub
cmp
dec
pop
mov
dec
outsl
fisubs
loope
ja,pt
shll
test
addr16
push
mov
in
dec
scas
repnz
scas
mov
xor
sarb
out
inc
mov
jbe
pop
add
sub
aas
lret
ljmp
ljmp
fistpll
test
mov
or
cmp
mov
js
mov
subl
jbe
movsb
push
pop
push
xor
and
insl
test
ret
faddl
sbb
push
mov
mov
test
loop
cwtl
test
push
sbb
test
fists
cmpsl
jecxz
fisttpll
test
data16
sti
lods
orl
sarb
jns
subl
aam
loop
iret
inc
pop
push
inc
lahf
pop
adc
cmp
insl
ficoml
into
push
mov
cmp
fadd
out
imul
subb
test
dec
mov
inc
sbb
dec
inc
pusha
icebp
scas
mov
xchg
cmp
mov
push
mov
ja
or
clc
sub
insb
mov
sbb
inc
aad
push
jg
imul
das
fsubr
cmc
lock
cmp
movsl
xchg
je
pop
and
enter
dec
jg
ret
lea
jnp
xor
mov
js
lret
movsb
movsl
push
fs
lock
fiaddl
jmp
std
rorl
jno
mov
sbb
imulb
xchg
and
inc
xchg
in
iret
in
dec
shll
cld
ss
xor
or
nop
data16
in
mov
arpl
in
and
xor
aad
test
sub
test
shr
push
fs
sub
add
in
stos
and
daa
enter
imul
and
mov
outsb
fdivp
or
mov
stos
rclb
cmpxchg
mov
incb
js
sub
lret
outsb
xchg
xchg
inc
adc
mov
adc
jge
and
dec
repnz
cmp
lret
je
clc
jg
leave
jg
mov
fildl
jp
notl
mov
jno
mov
push
movb
mov
in
std
mov
mov
addr16
or
dec
dec
cmp
jns
mov
jo
mov
mov
xchg
pop
pop
sbb
jmp
sarl
pop
pushf
popa
std
xchg
xchg
add
dec
js
ljmp
push
jae
mov
insw
pop
or
pop
gs
xchg
jne
cmc
cmp
repnz
lock
push
mov
in
sbb
jmp
adc
out
out
in
das
adc
aad
sbbl
and
out
cwtl
rclb
jl
jecxz
mov
cltd
xchg
xor
xorb
das
sub
inc
test
jle
sti
test
int3
mov
lods
fnstenv
filds
jo
imul
fmulp
dec
in
sbb
pop
pop
fwait
aas
inc
shl
vpackuswb
pop
movsbl
xor
inc
test
into
fstpt
lods
push
mov
pusha
xor
xchg
sub
inc
fisttps
jl
scas
mov
dec
insb
cmp
or
push
fcomp
aas
mov
sbb
push
push
fnstcw
cltd
incb
xchg
mov
mov
gs
pop
cmp
pop
pop
imul
cltd
or
lcall
imul
pop
push
cltd
jo
icebp
mov
pusha
rcll
fsubrs
xchg
mov
mov
sahf
xchg
cld
out
inc
fldl
jl
jne
inc
push
in
repz
gs
addr16
out
divl
xlat
leave
sbb
sbb
dec
es
pushf
divl
test
test
andl
ret
jle
mov
mov
minps
mov
xlat
inc
int3
cmpsb
add
adc
mov
inc
or
leave
pop
outsl
leave
pusha
jl
sahf
sub
jno
inc
repnz
movsb
dec
mov
cmp
cltd
cmp
dec
push
inc
sbb
movsb
jno
jecxz
sub
fs
int3
mov
cltd
shrb
jmp
jmp
jne
imul
sti
leave
adc
xchg
mov
dec
adc
inc
pushf
xor
xchg
mov
mov
scas
mov
daa
dec
sti
icebp
mov
mov
mov
xchg
jns
sti
inc
test
cmpsb
dec
cmp
inc
movsl
lcall
loop
data16
popf
call
xchg
lods
mov
or
cmpsl
sub
fstps
and
pop
lods
mov
inc
nop
jl
in
cmp
jne
aam
xor
pusha
xchg
loopne
jg
or
cmp
or
testl
aaa
shll
xchg
fsubs
sub
mov
fwait
dec
aam
and
sub
jae
jne
adc
outsl
sub
addl
cmovae
or
int
pop
pop
xchg
inc
ja
mov
and
out
faddl
jle
add
lods
mov
jnp
cwtl
int
subl
sbb
mov
data16
jbe
je
sub
add
stos
scas
lret
mov
outsb
repz
negl
mov
scas
sbb
andl
ds
add
mov
fcomi
lds
enter
adc
jecxz
pop
fisubl
xchg
adc
sbb
pminub
jne
data16
add
dec
sub
dec
sti
ja
in
shrl
cmp
mov
jle
shll
dec
adc
cli
int3
jl
pushl
xor
hlt
addr16
dec
inc
jge
jae
jp
xor
addb
pop
leave
mov
aas
mov
sbb
scas
mov
mov
xlat
fcmovu
add
out
pop
test
mov
pop
adc
hlt
pop
sub
loope
xchg
js
jmp
lahf
adc
push
adc
repnz
sub
addr16
pop
sub
add
mov
in
js
mov
jg
jecxz
dec
jnp
xor
daa
push
orl
mov
jne
lret
xchg
fwait
test
lds
lahf
and
and
and
ds
nop
cmp
orb
push
test
lods
sbb
pushf
xor
jns
ljmp
ja
lock
push
xchg
push
int3
sbb
cmpsb
jmp
imul
jecxz
es
ljmp
cli
bswap
mov
clc
gs
adc
sbb
ret
setbe
lods
outsl
pop
fs
jmp
pop
pop
fdivp
dec
mov
pop
add
push
dec
popf
in
xchg
aaa
push
xchg
cmp
cwtl
test
push
hlt
xchg
cmp
jmp
outsl
lods
dec
ret
sub
loopne
mov
sbb
repz
shlb
jnp
hlt
cmp
dec
enter
adc
icebp
cmp
out
mov
push
jmp
test
jmp
subb
mov
lahf
stos
jnp
add
das
cmpsb
stos
cmp
sar
cmp
xchg
fcompl
dec
pop
lahf
sub
xlat
mov
or
dec
sbbl
xchg
mov
xor
mul
push
xchg
lcall
in
xor
cmc
sbb
inc
je
adcl
adc
mov
jne
mov
lcall
fs
je
push
mov
test
inc
jmp
loope
push
fwait
push
je
jns
mov
jbe
or
xor
jg
sbb
jle
fnsave
jnp
xchg
mov
loop
aad
adc
sbb
jnp
lret
push
outsl
iret
int3
mov
xor
sbb
inc
and
faddp
leave
mov
test
jmp
jle
in
push
repnz
jg
js
dec
jae
xlat
js
leave
mov
xchg
dec
test
shll
int3
hlt
decb
jl
out
mov
insl
add
inc
xor
inc
popa
jecxz
mov
insl
in
insl
mov
add
insl
xchg
js
insb
push
sub
mov
rol
lret
cmp
mov
aaa
into
xor
out
out
sub
faddl
add
mov
dec
aas
repz
out
sub
fidivrl
sub
fcmovne
dec
fs
jo
pslld
leave
arpl
shlb
sahf
fidivrl
xor
inc
std
adc
dec
lock
cmpsl
mov
ja
mov
roll
mov
lret
sahf
xchg
neg
lods
push
nop
mov
inc
mov
add
repnz
std
push
and
pushf
repz
sub
add
push
xchg
mov
pop
sub
aaa
sub
xorl
or
std
push
push
shll
daa
pop
inc
mov
dec
insl
sub
insb
xchg
lea
xor
enter
ljmp
lahf
orl
in
imull
shrl
cli
les
cli
loop
add
out
inc
test
lret
inc
add
fcompl
mov
shl
xchg
mov
scas
popf
inc
jmp
rclb
das
mov
xchg
pop
fsubr
ret
loope
push
daa
sub
push
push
xchg
xchg
sub
sub
push
adc
into
adc
inc
nop
adc
jl
or
push
dec
loope
jae
push
dec
xchg
outsl
inc
lds
lret
jmp
mov
sub
jbe
gs
ret
push
push
aad
fwait
push
pushf
repnz
outsb
dec
scas
add
incb
cli
jb
rorb
cmp
cmp
adc
loope
add
pop
xchg
push
push
dec
add
xchg
mov
push
jne
cs
je
fnsave
pop
sbb
mov
mov
rclb
pushf
jbe
cmp
movsl
push
xor
test
movsl
inc
out
gs
ret
rcll
in
cltd
insb
mov
or
xchg
clc
dec
jmp
int3
and
sub
cmp
ret
mov
jg
sbb
sti
mov
sahf
stc
pop
fidivrl
adc
repnz
push
jmp
xchg
push
test
out
gs
int
jecxz
mov
push
fisubrs
dec
add
pop
outsb
lods
jp
cmp
mulb
sub
jmp
mov
jp
xor
cmp
shl
sbb
cmp
push
insl
lret
mov
call
mulb
insl
push
sub
rorb
xchg
movsb
xor
sub
jge
xchg
push
dec
inc
inc
out
mov
lret
scas
lea
push
mov
pop
fidivrs
inc
pop
insl
dec
pop
mov
mov
je
sbb
cmpsl
xor
insl
fnstenv
push
cmpsl
lret
sahf
cmpsl
mov
jno
pop
jmp
mov
mov
sti
mov
je
adc
mov
fwait
shr
lret
jmp
ljmp
xor
and
mov
test
cs
inc
call
sbbl
loop
sbb
lods
inc
pusha
imul
push
call
mov
clc
mov
js
std
outsl
fs
rol
fwait
jle
nop
mov
mov
scas
adc
jl
lret
inc
ret
adc
and
sbb
lret
lret
es
ds
xchg
jp
push
test
push
ljmp
ljmp
nop
subl
inc
fs
std
or
popl
test
out
aad
sub
sar
in
rcll
test
aad
fnstsw
or
js
arpl
nop
jno
bound
int
dec
jecxz
dec
push
pop
adc
lock
jo
mov
enter
or
les
mov
or
pusha
sbbl
in
lcall
add
jns
je
fbstp
mov
mov
add
pop
push
aaa
xor
push
xchg
imull
orb
xchg
mov
loopne
arpl
aaa
sarl
push
add
push
inc
enter
nop
in
mov
inc
push
add
outsl
js
loopne
int
cmpsb
xchg
and
sub
ljmp
cmp
push
sti
out
pop
and
inc
sub
or
cld
ret
xor
mov
sar
data16
into
js
add
push
les
and
mov
push
push
jg
jbe
xchg
pop
aam
mov
cld
push
int3
jne
ss
arpl
insl
ror
sub
inc
sbb
cmp
mov
xchg
fadds
aam
jns
sub
daa
pushf
cmp
mov
pop
dec
aam
int3
inc
bound
sub
cmp
jmp
rclb
xchg
mov
std
sub
add
rorl
jl
sub
add
adc
pushf
call
adc
mov
into
jbe
insl
lea
mov
jp
mov
lret
adc
and
add
or
adc
jmp
mov
es
loope
je
rol
dec
mov
sbb
jp
lret
ret
and
inc
mov
jle
mov
push
adc
js
out
mov
add
mov
jle
subl
loopne
fcomp
adc
cmpsl
shll
push
fstpl
notl
adc
mov
add
call
xor
jp
mov
mov
mov
hlt
lret
scas
ret
and
enter
cmp
xor
or
mov
testl
push
addr16
push
inc
negb
dec
aas
daa
add
add
leave
int3
and
or
push
xchg
test
mov
mov
test
push
in
xchg
out
cmp
rol
mov
jno
movsl
ficoms
cmp
stos
and
lods
push
xor
push
pushf
es
cwtl
mov
cmp
push
out
inc
cwtl
push
dec
inc
fnstenv
pop
push
mov
data16
test
push
or
cmp
cmc
shlb
stos
iret
stos
stos
loope
pop
mov
dec
leave
repz
in
add
aam
call
movsb
mov
inc
pop
fstpt
outsb
sbb
out
fcmovbe
out
jne
in
out
dec
xor
rorl
cmovnp
push
popa
clc
dec
fcmovne
daa
sar
addr16
push
int3
lret
dec
xchg
jne
jae
pop
ja
xchg
xchg
push
popa
xor
push
mov
xchg
jb
inc
jmp
cmp
std
arpl
push
xor
clc
lret
out
mov
dec
xchg
cs
inc
test
inc
pop
test
in
icebp
imul
or
subb
mull
popa
add
rolb
clc
jecxz
out
jo
shlb
jne
repz
mov
in
pop
in
cmp
orb
shrb
mov
cmc
repnz
pop
jns
loop
stos
fwait
cmp
test
xlat
ret
fdivrl
push
loope
xchg
dec
aad
jp
rorb
daa
ret
xor
lahf
mov
mov
inc
or
inc
and
mov
pop
loop
into
lea
mov
aam
jg
call
jmp
lahf
sub
add
sub
popa
jne
adc
add
xor
pop
jo
dec
sbb
gs
and
and
mov
in
rcrl
in
sub
push
sub
mov
xchg
dec
mov
outsb
fwait
jno
addr16
inc
rclb
mov
lea
cmp
js
jb
sub
das
add
lds
xor
dec
mov
mov
mov
sub
subl
test
rcll
xchg
mov
leave
or
adc
push
call
or
repnz
mov
push
mov
ret
cwtl
mov
mov
jle
negb
lahf
sub
inc
cmp
adc
mov
out
daa
cmc
lds
inc
and
add
addb
or
lock
inc
pop
enter
add
shll
and
cld
mov
pusha
dec
adc
lds
ss
and
adcb
jnp
sti
pop
scas
fdivr
dec
es
cmp
fisttpl
addl
cli
mov
inc
scas
insl
inc
lcall
lcall
inc
repnz
out
lret
xchg
xchg
sub
mov
test
notb
cmp
cmp
sbb
adc
nopl
fst
or
fdivs
outsb
mov
add
int
or
mov
xchg
sbb
jmp
test
cwtl
mov
lea
xlat
jg
add
jbe
pop
push
fsubs
adc
mull
sub
push
pop
jbe
sub
inc
subb
cli
jge
xchg
adc
push
add
cmp
repz
pop
adc
mov
xchg
mov
mov
mov
jno
push
movsl
cs
jmp
pop
xor
fcomps
jo
xchg
cmp
pop
loop
add
mov
std
fnstsw
aad
dec
imul
pop
mov
iret
es
inc
adc
mov
ror
fimull
popf
cmpsb
aad
arpl
push
mov
cmpsb
cmpb
xchg
decb
push
filds
cmp
or
sub
push
jmp
jge
fisttps
cmp
xadd
inc
ss
lret
lahf
int3
les
sbb
mov
test
rorl
jb
push
roll
jnp
xchg
mov
sub
adc
and
lea
clc
sbb
les
xchg
loopne
xchg
ret
sub
mov
fidivrs
mov
sub
mov
pop
in
or
mov
pop
push
sahf
mov
lahf
shlb
lods
movsl
inc
push
mov
mov
in
movsb
or
or
fidivrl
je
js
pop
push
jle
mov
stos
cwtl
mov
das
jno
mov
bound
xchg
aam
mov
jb
rclb
das
int
cmpsb
inc
pop
das
xchg
das
push
js
push
push
lret
adc
and
std
aas
and
fsub
xor
jg
loope
nop
ret
stos
xchg
fwait
xor
adc
dec
mov
lods
cwtl
scas
into
jge
or
xchg
pop
mov
daa
jl
jge
xchg
pushf
adc
xchg
mov
test
pop
insl
cmp
jb
mov
mov
or
sbb
addl
xchg
xchg
insl
pop
popa
enter
hlt
inc
push
adc
cmpsb
push
jns
fstp
mov
lcall
dec
mov
mov
mov
lods
mov
adc
adc
sub
lods
jle
cld
mov
or
and
jno
gs
rclb
mov
inc
jns
push
push
mov
cmpsb
and
repnz
addl
push
lcall
pusha
inc
inc
cmp
clc
fsts
and
inc
push
pop
mov
mov
xor
aam
push
mov
lret
push
xchg
mov
inc
push
adc
xchg
leave
shrl
pop
adc
fmull
cltd
mov
mov
xlat
xor
sbb
xlat
adc
dec
fisubrs
adc
add
fcomi
adc
sub
leave
push
cld
inc
repnz
mov
adc
inc
fistl
repnz
ret
push
movsb
aaa
adc
nop
repnz
mov
mov
cmpb
mov
ljmp
push
jne
test
iret
movsb
or
push
pop
aad
jge
std
cld
ss
push
xchg
cmp
add
addr16
lea
cltd
cmp
push
push
push
jge
mov
xchg
cmp
add
faddl
int
mov
pushf
repz
dec
js
fistl
loope
in
mov
adc
sub
mov
adc
dec
outsb
fildll
add
adc
sub
sbb
add
sub
mov
lock
sub
fwait
in
jbe
popa
xchg
mov
mov
xchg
cs
hlt
scas
mov
dec
push
or
in
cmpsb
mov
test
movsl
mov
cmp
stc
adc
mov
mov
shll
add
xor
xchg
push
and
std
lcall
outsb
popa
stos
mov
stc
mov
add
push
pop
ficompl
mov
push
fdivs
aad
enter
cmpsb
jl
xlat
jno
loope
sbb
jne
cmp
pushf
push
and
pop
jns
ljmp
ret
and
push
mov
cmpsb
loopne
gs
pop
add
in
hlt
in
add
gs
cmc
jnp
fcoms
scas
clc
repz
mov
mov
mov
sti
inc
cmp
popa
mov
ds
stos
cmp
push
sti
push
ljmp
sbb
pop
add
jnp
nop
xor
xor
lahf
jae
jg
andl
mov
sbb
lahf
xor
fwait
test
mov
das
aad
pop
ja
out
pushf
mov
imul
bound
daa
pop
stos
arpl
repnz
pusha
mov
dec
mov
in
test
popa
outsl
ds
es
lcall
mov
sub
cmp
fwait
enter
adc
dec
arpl
mov
inc
popa
sbb
xlat
inc
lret
sbb
addr16
or
or
ret
loop
xor
pop
jl
sahf
test
mov
les
pop
push
addb
pop
in
sub
out
dec
in
mov
push
jns
inc
aas
mov
fprem1
sbb
push
int3
or
and
or
bnd
shr
mov
mov
rolb
push
dec
into
mov
jo
enter
fiaddl
add
pop
stos
xchg
movsb
inc
mov
mov
pushf
sub
call
js
adc
xorb
sahf
in
fistl
jne
jbe
inc
jle
or
test
lds
adc
test
inc
cmp
and
add
aas
out
in
mov
repz
outsl
rcl
push
lret
movsl
add
aaa
or
and
mov
sub
xchg
fwait
pushf
mov
nop
or
cmp
aam
adc
add
and
and
jg
xchg
pop
inc
notb
push
sub
stos
pop
or
pop
dec
push
jmp
add
lcall
lret
ds
sti
ficompl
adc
test
xor
dec
dec
bound
imul
jns
sarb
sub
je
pop
and
add
adc
repnz
adc
mov
pop
add
sahf
sub
mov
push
cmpl
ret
in
sub
addb
jg
pop
outsl
sbb
mov
test
xor
adc
dec
into
fistps
rcrb
pop
push
jmp
jbe
mov
push
push
mulb
movsl
push
add
jno
sbb
cmp
cmpl
pop
or
call
push
imul
je
out
insb
je
mov
fsub
hlt
cmp
mov
cmc
rclb
out
test
insl
inc
mov
inc
sbb
jle
inc
roll
push
add
fdivrs
divb
sarb
adc
ljmp
xor
sub
inc
and
or
sti
outsb
je
adc
daa
imul
pop
adc
and
or
mov
movsl
test
ret
mov
movsb
adc
into
pop
push
inc
insb
jp
pop
xor
jo
es
icebp
inc
jle
ja
int3
sbb
insl
stos
add
mov
jnp
sti
fnstcw
mov
or
test
push
mov
xchg
sbb
out
popa
mov
mov
mov
jmp
mov
sub
mov
shrl
shrl
mov
pop
rclb
es
movsl
inc
jecxz
sahf
lods
dec
ja
in
push
iret
movsl
lods
in
insb
adc
push
dec
cli
mov
ret
and
mov
pop
scas
adcl
pop
sub
cs
js
sbb
jle
cmp
filds
xchg
fincstp
jb
and
jb
sbb
adc
xchg
pop
inc
mov
xchg
mov
cli
shr
cwtl
sub
pop
push
xchg
jae
xchg
imulb
sub
jp
pop
inc
sub
sbb
cld
jge
rorb
sbb
adc
xchg
orl
add
das
inc
mov
mov
aaa
inc
scas
fsts
mov
adc
push
xchg
cltd
icebp
ret
xor
mov
shrb
jge
lret
movsb
imul
pop
in
push
adc
outsl
pushl
sbb
jo
int
or
stos
stos
leave
mov
ret
xchg
cmp
cli
jmp
sti
pop
sub
dec
jbe
jne
mov
add
push
shll
inc
test
js
or
adc
movsb
fimull
sub
cwtl
xchg
mov
imul
into
cmp
or
in
out
lahf
clc
ds
ljmp
loope
imul
inc
mov
cmpsl
add
pop
mov
mov
mov
mov
or
std
or
stos
popa
sub
dec
loope
pop
aad
mov
ja
andb
add
adc
imul
add
das
adc
xor
add
jno
dec
insb
xor
add
mov
ss
xor
dec
shr
adc
sahf
repnz
fdivr
push
lods
mov
or
cmpsl
mov
test
jbe
and
jle
mov
cmp
jne
imul
insb
jmp
mov
iret
cmp
inc
pop
push
mov
testl
lcall
jp
cmp
jl
xlat
dec
mov
mov
inc
cli
sahf
and
xor
mov
aas
jne
push
sarb
icebp
in
lds
jl
push
fmull
or
push
notb
imul
das
xchg
inc
sub
test
xchg
and
fistl
je
or
mov
inc
inc
mov
stc
jae
inc
inc
add
cmpb
mov
imul
sub
add
test
cmp
mov
mov
scas
and
add
jo
imul
scas
in
int3
pushf
fwait
jle
pop
shrb
add
pop
fcmove
idivb
jbe
rep
jl
int
bound
jno
addb
push
enter
sub
push
mov
push
inc
aaa
popf
pop
dec
mov
pop
fcompl
push
fs
addr16
movsb
repz
pop
push
dec
mov
adc
mov
pop
sbb
enter
imul
mov
xchg
jmp
xor
inc
sub
push
incb
js
jo
mov
mov
pop
sub
dec
je
mov
int3
xchg
jl
cmp
and
xchg
mov
ret
icebp
mov
movsl
out
pop
pop
lret
jae
or
xor
and
ret
jb
mov
sbb
inc
aad
push
sbb
cmp
mov
push
dec
packssdw
cmpsb
push
lsl
in
xchg
rcrb
adc
ret
or
mov
and
sbbl
mov
iret
xor
in
pop
mov
fdivrs
jnp
mov
es
lea
fs
sbb
cwtl
stos
inc
cmc
mov
adcb
lret
adc
lea
mov
mov
jl
mov
movsb
sub
or
push
cmpsb
dec
pop
mov
push
test
movsl
inc
mov
filds
push
cmpl
sub
enter
pop
mov
movsb
in
ret
push
lcall
popf
mov
xor
aas
dec
insl
sbb
dec
mov
pop
cmp
aam
sbb
out
add
dec
push
addr16
fsub
or
mov
leave
outsl
in
inc
adc
sbb
push
jb
add
or
and
call
cld
and
cld
aas
mov
jb
mov
orl
dec
xchg
and
inc
outsb
in
scas
aaa
mov
rorb
scas
nop
lods
push
cmp
fcoml
xor
mov
jl
fisttpll
ficoml
jne
pop
es
inc
xor
dec
lahf
out
mov
popf
popf
cmp
jecxz
or
leave
mov
nopl
pop
or
pop
ja
out
xor
or
subl
std
pop
and
cbtw
pop
xor
mov
les
iret
insb
ljmp
subl
clc
push
cmp
jg
add
mov
or
jl
pop
mov
xor
mov
xchg
dec
xchg
fstp
mov
adc
jge
orb
rcll
int
cld
repnz
in
ds
pop
inc
push
out
addr16
mov
ret
and
loop
fs
or
negb
mov
jmp
fsubl
mov
aaa
cltd
push
fmuls
xlat
insb
push
pop
push
jmp
xor
cmp
bound
pop
pop
fsubrs
clc
push
adc
sbb
daa
cld
test
in
gs
pusha
ss
bound
movsl
hlt
std
repnz
mov
or
cltd
out
xchg
sbb
les
dec
test
push
fbld
cmp
mov
pop
lcall
or
xor
sbb
pop
ret
out
js
syscall
cmp
pop
int
mov
and
sar
scas
cmp
xlat
addr16
lahf
add
in
faddl
int3
popa
dec
rol
push
mov
jae
dec
mov
lock
xor
jne
test
mov
push
out
pop
testl
inc
lea
and
lods
xor
je
fnstenv
xlat
dec
pop
or
scas
sub
sub
push
mov
xchg
mov
adc
jle
cmp
xor
xchg
adc
mov
bound
and
and
push
pop
out
sub
scas
mov
sti
movsl
mov
fs
loope
imul
cs
add
adc
das
cmp
mov
mov
lods
adc
inc
add
cmp
adc
mov
jg
and
popa
dec
in
lods
rcll
popa
cmpsb
test
push
mov
inc
out
xorb
hlt
fldl
scas
sub
push
pop
rorl
adc
push
fdivrl
inc
jecxz
sbb
sub
mov
lret
lcall
shr
mov
sti
test
scas
inc
movsb
repnz
pop
imul
jecxz
lea
aaa
scas
popf
adc
push
lea
xor
scas
pop
jo
scas
mov
sub
fmull
xchg
fdivr
push
sar
pop
xor
jl
out
popf
leave
aas
test
inc
rorl
xchg
xchg
aam
je
inc
sarl
cmp
sbb
or
sahf
mov
sbb
je
and
push
pop
lahf
scas
jae
xchg
dec
scas
sub
pop
or
outsb
add
shl
call
gs
out
aad
mov
rorw
sbb
xchg
out
outsb
inc
shlb
mov
popf
mov
nop
sbb
stos
xchg
xchg
int3
push
jmp
adcb
and
adc
jecxz
push
pop
pop
lock
pop
pop
cmp
pop
into
loop
dec
push
mov
mov
adc
mov
sbbl
dec
jb
pop
inc
test
or
push
push
and
sar
and
int
xor
push
inc
xchg
or
pop
in
lods
pop
lret
in
aas
sbb
or
xchg
xchg
lcall
mov
mov
fldcw
insb
push
cmp
cmp
cmp
pop
or
into
jmp
mov
in
lods
scas
negb
sub
stc
adcb
bound
data16
pop
hlt
test
push
mov
cmp
sub
add
test
sub
sub
scas
insl
pop
cmp
and
loope
sub
lea
jns
lds
cld
enter
jns
mov
shrl
jns
push
ja
or
sub
insb
push
add
hlt
mov
test
inc
mov
fisubl
aas
cmpsl
div
sub
mov
jp
jmp
pop
push
xchg
cmp
xchg
cld
rcr
add
js
jb
sbb
xor
mov
mov
push
dec
and
jmp
sbb
fdivrl
jmp
inc
adc
lret
sbb
add
push
jle
xor
aaa
shl
add
nop
adc
pop
push
sbb
sub
ljmp
inc
sbb
xor
fcomip
int
test
int3
or
scas
cmp
sbb
call
or
imul
pop
stos
ja
ret
repnz
pop
shlb
paddb
jmp
xchg
pop
adc
jmp
mov
mov
push
or
mov
add
into
iret
cs
scas
xor
inc
and
in
xlat
push
push
jns
pop
and
adc
fnclex
test
pop
out
pop
iret
jne
icebp
loope
push
push
xchg
std
sbb
dec
sub
mov
pop
inc
mov
push
xchg
shrl
cli
sbb
fnstenv
xchg
xor
xchg
rorb
dec
movsb
lahf
in
scas
int3
adc
and
mov
in
lods
jg
ret
test
shl
rcrb
in
cli
lea
mov
cmp
xor
xchg
out
cmp
test
insl
das
andb
loope
lahf
adc
gs
jae
sbb
jp
pop
aaa
xchg
jle
int3
arpl
ret
setno
lahf
add
jmp
pop
sbb
inc
mov
jmp
dec
lds
cld
jne
pusha
mov
js
inc
mov
inc
push
inc
clc
pop
fldcw
or
cmp
add
bound
ds
icebp
or
xor
ret
jl
push
rclb
cmp
xchg
xchg
mov
add
add
adc
push
test
ret
pop
std
push
rcrb
cmp
sahf
out
daa
pop
in
push
ss
add
in
xlat
es
insb
dec
cmovle
ja
xor
outsb
jle
test
sub
leave
or
mulb
jne
mov
sub
add
or
into
sub
push
dec
inc
insb
out
in
pop
fisttpl
fiadds
ficompl
scas
adc
call
daa
repnz
adc
dec
jle
pop
nop
movb
inc
fldcw
cmp
mov
lret
add
call
loopne
cmp
ret
pop
dec
push
out
aas
rcll
sub
ret
cwtl
pop
jne
mov
insb
jp
cmp
pop
push
cmp
lcall
sub
cmp
int3
out
jne
xchg
hlt
cmc
xor
fiaddl
rclb
roll
testl
out
mov
fistl
mov
push
or
mov
add
sbb
daa
adc
or
xlat
dec
jp
xor
push
fucomp
addr16
das
in
xor
or
into
jne
fcomps
xor
dec
cld
sbb
dec
lods
inc
rcr
test
in
adc
insb
xlat
sub
pop
jae
in
sbb
dec
jno
push
mov
pop
mov
cmp
add
repz
jno
cltd
push
cli
mov
daa
decb
adc
movsb
ja
xor
mov
inc
fdivrl
leave
jp
leave
ss
into
lds
leave
xchg
adc
aad
sub
pop
mov
or
movsb
xchg
test
addr16
popf
mov
cmpsl
das
xor
pop
rolb
mov
inc
sbb
popf
sub
loop
in
imul
and
in
jnp
sub
or
push
aaa
and
mov
sub
cmpsl
out
pop
xchg
insb
in
sub
loope
add
insb
lcall
fcoml
insl
or
mov
push
clc
imul
icebp
jg
sub
xorb
cli
or
into
jb
sti
enter
push
in
dec
cmp
aad
stos
stos
push
cmpsb
add
adc
mov
out
sti
and
push
push
mov
push
inc
and
sar
in
insb
push
aaa
sbb
popf
dec
jp
xor
fadd
shlb
out
loopne
push
pop
clc
jns
fldenv
xchg
rclb
ljmp
mov
or
sub
mulb
cltd
jp
cmpl
aam
leave
flds
lods
adc
repz
fidivrl
pop
in
jnp
arpl
test
rol
out
jbe
ficoml
inc
fstpt
lcall
std
mov
cmp
in
int
ja
jle
and
xor
xor
aas
nop
or
add
mov
lahf
loop
jno
dec
sub
jmp
imul
pushf
js
push
loop
jae
mov
pop
inc
sub
jge
mov
hlt
pop
aam
rol
jbe
lods
ret
push
and
mov
lret
sbb
cld
lret
in
cmp
scas
dec
and
test
sti
ret
scas
dec
incl
mov
cmovb
test
or
and
push
mov
mov
mov
rorb
sahf
sti
push
enter
loope
push
mov
xchg
push
fdiv
cmc
sahf
adc
insl
jo
push
add
xchg
cli
and
insb
mov
lret
aad
xor
fldt
out
mov
mov
mov
hlt
dec
stos
sahf
sti
lods
push
je
xchg
lahf
mov
pushl
dec
xor
or
rol
das
movsb
arpl
pushf
outsl
sbb
sbb
xchg
insb
inc
sub
mov
lods
in
aas
and
mov
xor
ret
pop
ss
cwtl
icebp
aaa
insb
jle
push
lds
mov
jmp
shlb
rorb
stc
sahf
mov
xchg
test
jno
mov
sbb
pushf
sbb
mov
sub
in
push
xchg
mov
orl
js
jecxz
insb
enter
insb
outsl
sbb
jbe
mov
xor
ljmp
add
push
scas
fnsave
mov
push
int
inc
hlt
mov
stc
xchg
ret
push
loope
mov
fisubl
dec
mov
jg
fcompl
movsb
mov
adc
jb
push
push
leave
in
cmp
mov
lret
test
jp
notb
sub
jmp
imul
or
andb
mov
insb
aam
inc
les
jecxz
pop
and
mov
aas
sbb
push
repz
jae
sbb
inc
or
pop
jp
ret
int
adc
fimull
pop
jge
imul
sub
jae
mov
lahf
dec
inc
mov
iret
stc
js
mov
shlb
or
push
xor
popa
or
push
xchg
lea
mov
and
addr16
sti
xchg
imul
lods
push
pop
sub
or
inc
ficompl
mov
je
pushf
mov
out
push
mov
insl
ljmp
rorb
add
xor
cmp
xor
jns
jno
ffreep
and
lcall
pop
int3
lea
cmp
cmp
lods
cltd
test
and
testl
mov
add
mov
and
movsl
clc
aam
test
or
pop
jg
mov
arpl
cmpsl
outsb
addb
test
dec
cmp
fs
dec
aam
dec
fbstp
lods
outsb
lret
mov
imul
lret
ficomps
sbb
mov
add
jp
mov
mov
mov
cli
fldt
dec
dec
mov
inc
test
and
and
inc
and
adc
sub
add
fcoms
daa
inc
dec
xlat
or
adc
mov
inc
xor
pop
inc
cmp
enter
add
or
clc
xchg
int3
insl
sub
jg
cmp
add
dec
xchg
xorl
pop
mov
mov
repz
mov
gs
cmc
xchg
mov
das
lahf
inc
xor
mov
mov
pop
mov
fs
pushf
iret
jb
arpl
and
lock
sbbl
push
daa
push
mov
test
pop
adc
cmovb
popa
lock
or
int3
cld
sti
and
mov
int3
lret
pop
cmp
cmp
lahf
das
xchg
lds
inc
repz
fsincos
sub
daa
push
xor
jb
mov
arpl
test
mov
es
ret
popa
filds
cmp
inc
orb
pop
rorb
aad
sbb
je
in
clc
add
fistps
int3
jl
cld
pop
cmp
int3
cs
shrb
js
hlt
call
mov
pop
roll
jmp
sbb
mov
inc
sbb
pushw
mov
loope
dec
sbb
into
xchg
xchg
in
lods
sarb
shrb
xchg
inc
arpl
notb
cmp
xchg
xchg
loop
dec
fnsave
jge
enter
ljmp
enter
in
aas
inc
adc
xchg
add
jmp
sbb
fidivrs
inc
mov
add
or
xor
int3
pop
and
das
xchg
aad
mov
out
inc
xchg
or
outsl
dec
ljmp
aas
lahf
enter
test
and
testl
leave
mov
lret
movsb
mov
push
addb
leave
lret
push
inc
mov
es
cmp
mov
adc
jecxz
mov
insb
lahf
add
lods
mov
fstl
ja
push
call
push
inc
sub
or
dec
std
andl
inc
inc
push
and
sbb
jo
adc
cmp
into
xchg
ljmp
lcall
or
shr
fldl
pop
stos
sbb
sbb
out
jns
mov
shrb
cmp
xor
aaa
xchg
and
stc
lds
and
test
and
sub
sbb
jb
pop
test
pop
mov
adc
out
pop
sbb
adc
xchg
sub
mov
aas
mov
repnz
cmp
add
aam
pop
jmp
enter
aas
test
dec
jno
cmp
ja
push
xlat
clc
aaa
adc
push
dec
inc
nop
andb
push
sbb
dec
jp
sbb
cmp
enter
cmp
lcall
xor
jl
add
jg
out
jle
jge
test
lods
ret
sub
ja
lods
mov
addr16
mov
popf
inc
adc
xor
add
pusha
or
pop
mov
mov
movsl
aaa
mov
orb
cmc
lds
jmp
and
pop
cmp
in
lahf
and
push
xchg
push
pop
call
pushf
stc
inc
int
data16
mull
xor
mov
xor
xor
xlat
ds
jnp
or
pusha
push
pop
test
in
and
hlt
cmc
mov
idivl
sti
cmc
lods
hlt
das
sbb
mov
sarl
sbb
push
jp
xor
push
cmpsl
cmp
cli
add
mov
das
mov
xlat
push
push
imul
aaa
and
out
fistpll
sbb
cmp
and
filds
fimuls
xchg
mov
mov
jae
pop
fcomps
ja
push
ljmp
pushf
adc
push
inc
imul
js
mov
sbb
clc
sbb
and
cmc
adc
fdivl
xor
stos
je
mov
dec
dec
cmp
pop
enter
in
insl
gs
and
in
aaa
cmp
cmp
xor
or
sbb
jnp
mov
insb
or
in
or
fucomip
xor
jmp
subb
loope
stc
cmp
jnp
add
cmc
xor
pop
mov
nop
mov
or
cmpsl
mov
inc
inc
mov
sub
addr16
mov
ljmp
aam
fcomi
adc
add
mov
or
pop
lock
stos
mov
test
mov
outsb
mov
sahf
movsb
in
xchg
mov
or
imul
mov
or
sbb
push
fistpl
jp
mov
push
inc
movsb
fildll
call
imul
inc
fimull
outsb
pop
fnstcw
insb
loopne
bound
or
lods
adc
inc
or
push
mov
fsubrs
mov
add
jnp
mov
xchg
inc
popf
out
imul
out
shlb
jns
in
pop
mov
mov
pop
cmp
stos
mov
and
popf
mov
out
mov
fsts
out
punpckhdq
adcb
xchg
push
sbb
subb
or
aam
out
aam
mov
adc
stos
int3
sub
cs
cld
bound
out
adc
in
daa
adc
aas
popl
inc
mov
lods
inc
mov
outsl
test
or
xor
out
imul
xor
pusha
jl
jo
mov
xor
adc
or
and
sbb
mov
push
repz
loope
pop
das
inc
sbb
clc
jae
xchg
int
mov
cwtl
insl
lahf
mov
inc
test
mov
dec
xchg
and
incb
orl
jecxz
sub
mov
add
push
mov
jp
call
out
jns
enter
mov
jp
aad
adc
xor
sub
push
pop
fs
add
in
out
sub
in
outsb
pushf
xchg
mov
jp
push
testl
xor
into
and
jle
fwait
inc
jbe
or
add
pop
push
mov
mov
mov
cmp
push
xchg
fiaddl
mov
xor
xchg
dec
sub
xor
pause
lds
std
and
push
jno
sub
cltd
loopne
inc
cmc
jg
sub
push
inc
xchg
inc
add
jp
aad
dec
adc
in
cmp
xchg
mov
cmp
sub
adcl
fldl
xor
mov
cwtl
inc
outsl
xor
jmp
xchg
add
pop
lock
mov
xor
jns
pop
mov
scas
in
push
add
std
js
jbe
stos
mov
push
mov
popf
or
pop
mov
sbb
iret
and
add
int3
and
sbb
dec
jg
mov
cmpsl
in
in
mov
add
in
cmc
add
lods
outsb
sub
lock
lahf
sub
pop
mov
xor
shrb
fcmove
subl
insl
movsl
push
testb
je
jecxz
pushf
mov
mov
sub
stc
iret
movb
add
js
dec
cmp
adc
mov
push
cmpb
rorl
jl
pop
hlt
cmpsl
sti
mov
or
xor
test
addr16
sbb
jo
adc
dec
inc
ss
je
imul
test
xchg
ret
sub
loope
stos
arpl
aas
pop
inc
sahf
xchg
dec
scas
cltd
adc
xchg
pop
cmpsb
fwait
shll
xchg
jg
adc
pop
push
stos
adc
dec
mov
lods
jo
mov
mov
test
push
outsb
push
int3
push
cld
or
push
fdiv
test
or
and
repnz
ficoms
jno
jp
loopne
stos
in
dec
xchg
enter
dec
cmpsl
sbb
cmp
out
push
cmc
aam
fldcw
lcall
pushf
pop
cmp
cmp
mov
push
lods
mov
lahf
and
cmp
lahf
mov
div
jns
adc
mov
js
bound
xchg
insl
mov
dec
in
test
push
mov
fldt
inc
mov
sub
add
or
testb
mov
jne
ret
sbbb
stc
xor
lock
mov
mov
mov
shl
mov
stc
and
in
sbb
fsubl
shrl
and
sbb
pop
xchg
push
scas
pop
leave
fsub
fisubrl
iret
sub
sub
xchg
jb
scas
stos
divl
lods
aaa
in
iret
or
aaa
repz
sub
and
mov
mov
inc
mov
mov
outsl
add
dec
in
mov
addr16
fsubrs
mov
dec
mov
shlb
sbb
insl
mov
insl
jmp
cmpsb
inc
jae
mov
jge
mov
repnz
out
sahf
xchg
pusha
aam
addr16
sub
sarl
incb
insl
repnz
mov
sarb
pop
and
mov
stos
add
jbe
cld
loopne
cmp
subl
leave
cld
insb
push
jns
pop
stc
int
inc
inc
or
imul
movsl
or
into
xchg
mov
test
inc
lock
imul
aaa
dec
lock
xor
or
pop
dec
mov
jae
std
lock
test
out
sti
iret
iret
outsl
test
cmp
mov
je
mov
jno
or
fnstsw
jb
js
insl
dec
aas
mov
inc
inc
fisubrs
pop
dec
jle
adc
out
sti
in
add
jle
mov
xchg
gs
mov
jp
decl
js
xor
aam
fidivrs
stos
out
fcoms
test
js
outsl
loopne
divl
jecxz
scas
pop
test
dec
or
sbb
sub
pop
stos
scas
pop
lods
lahf
jnp
jmp
dec
lock
leave
mov
sbb
and
je
mov
pop
mov
fisubl
cmp
mulb
sub
gs
adc
sahf
ficomps
cmp
fistps
shll
sti
sbb
push
js
mov
xor
xchg
lret
bnd
rcll
or
in
fcomp
cmpl
mov
inc
sub
sbb
cld
iret
dec
mov
out
adcb
cwtl
scas
orl
out
addb
shlb
xorb
aaa
loopne
movsl
jb
push
and
add
imul
add
fnstcw
fstpt
sti
inc
and
subb
mov
cmc
call
nop
adc
jno
sahf
loope
bound
pop
int3
and
adc
or
call
pop
sti
ljmp
leavew
pop
xor
xor
repz
sbb
sbb
dec
pop
adc
dec
into
xchg
lret
cmp
jecxz
fsubrl
addr16
cmp
sub
cld
test
push
xor
push
cmp
out
jne
sar
cmp
cmp
add
push
pop
cs
cwtl
out
adc
cmp
ret
sub
shrb
lock
lock
mov
adc
out
sub
movsl
addr16
mov
xchg
jg
ret
dec
mov
xor
lcall
add
fsubl
pop
add
pop
or
mov
dec
popf
ficomps
pop
sbb
xor
adc
iret
in
add
ret
shl
stc
call
js
js
es
cmpsl
mov
int3
xchg
push
fnstcw
xchg
xor
sbb
pop
mov
push
jge
sub
mov
jmp
dec
out
in
xor
xchg
out
sub
clc
insb
xor
mov
das
pop
jnp
or
daa
push
outsl
lahf
lods
mov
add
inc
ret
cmp
jge
jb
adc
xor
loop
cli
sbb
jno
cwtl
sub
adcl
dec
push
dec
icebp
jo
mov
push
fwait
cmp
dec
stos
in
in
mov
adc
nop
mov
mov
sahf
jnp
fiadds
jp
flds
call
dec
sub
xor
add
faddp
mov
jbe
es
pop
nop
mov
imul
sub
cmp
xor
loop
repz
mov
loopne
adc
add
inc
dec
leave
cltd
xchg
add
mov
dec
in
dec
out
sub
pushf
mov
add
scas
add
push
mov
sbb
sbb
clc
add
aam
js
out
jg
push
fcmove
mov
sti
roll
movsb
xchg
pop
int
fcom
jno
adcb
mov
xchg
subl
cmp
cmpsb
mov
rorb
shll
adc
add
mov
pop
inc
lods
adc
sub
cmp
lret
shl
in
xchg
xchg
loope
push
call
pushf
xor
cli
sub
out
cmp
or
test
lds
dec
mov
lahf
clc
mov
jl
adc
lahf
pop
sub
push
inc
jl
ret
sbb
inc
ss
dec
pop
mov
add
add
shrb
xlat
or
push
ljmp
cmp
outsb
ret
dec
adc
int3
jbe
lahf
or
xor
ds
mov
xchg
dec
addl
ds
repz
addb
mov
loop
orb
ja
xchg
xor
je
addr16
pop
lock
add
fcompl
or
push
jg
cmpsb
inc
icebp
int
jb
repz
jmp
xchg
mov
dec
sub
mul
rcll
fists
loop
movsl
dec
les
jnp
cltd
mov
push
popf
fwait
inc
mov
movsl
aam
mov
dec
inc
in
ja
adc
mov
adc
pushf
sti
popw
rorb
sbb
dec
dec
mov
daa
xorb
fsts
fstl
pop
movsb
add
sub
adc
or
rclb
xchg
popf
sahf
loop
cmp
ja
inc
inc
call
xor
out
xor
pop
lret
xchg
sbb
jo
cmpsb
popf
adc
jle
lret
repz
call
adc
fs
cld
shrl
push
pop
adc
mov
adc
out
rcrb
push
cmp
fiaddl
add
nop
outsl
dec
imul
jnp
negl
iret
std
inc
cmp
scas
xor
adc
popf
push
dec
sub
jns
cli
int3
pop
sbb
push
inc
cmc
dec
add
jle
push
adc
stos
push
jmp
sub
not
inc
push
push
sti
jl
pop
inc
fldl
add
popa
inc
cmpsl
in
inc
int
arpl
mov
int
sahf
push
fstpt
push
push
push
gs
imul
inc
adc
cmc
int3
pop
jp
inc
sbb
adc
adcl
adc
loope
pop
push
xchg
jnp
loopne
ficoms
sbbb
movsl
fildll
lods
xchg
push
fcmovne
mull
add
ja
mov
inc
ficomps
xorl
lret
fildl
jle
stc
arpl
lret
xchg
jb
xchg
in
push
movsl
inc
mov
push
aad
es
xor
dec
jo
dec
xchg
dec
pop
movsl
mov
lods
into
add
adc
cmp
subps
insl
mov
les
fsubr
test
cmpsb
nop
xchg
movsb
in
cs
ljmp
loopnew
xchg
test
jns
fdivrs
mov
sbb
and
inc
cmp
int
dec
jmp
insb
push
out
cmp
clc
adc
notb
sub
push
bound
jae
nop
pop
imul
fmul
inc
in
jmp
pop
test
cmp
xlat
mov
jne
adc
andb
pop
jne
hlt
insb
jp
add
stos
inc
fldt
test
mov
les
xchg
xchg
sarl
xor
outsb
addr16
clc
sti
cli
cmpsl
pop
cs
jo
shlb
xor
lds
mov
cmp
aaa
int
fsts
sub
pop
test
cli
shll
jns
rolb
lock
jnp
push
subl
test
cmp
stos
cmpsl
aam
out
daa
cmp
movsb
sub
rorb
test
push
imul
in
pusha
aas
push
cld
push
mov
cmp
add
cmp
mov
inc
jbe
mov
xor
cmp
ja
adc
push
pop
ljmp
repz
or
pop
dec
int
insb
dec
out
mov
lcall
pop
out
mov
mov
xor
cld
iret
aad
jo
mov
cmp
and
lods
pop
mov
mov
jae
rorl
mov
int
and
adc
sub
in
xchg
in
mov
add
dec
fdivr
sbb
mov
lods
fwait
scas
xor
cmpb
cltd
leave
js
int
sti
mov
add
jl
stos
xor
ss
cmc
pusha
rcrb
mov
movsb
icebp
push
adc
dec
adc
xor
mov
push
cmp
jmp
repnz
fisubs
cld
xorl
movsl
inc
pop
and
pop
mov
sub
andl
xchg
arpl
cmpsl
std
repnz
adc
mov
iret
mov
pusha
cmp
xchg
xchg
cmpsl
xchg
sbb
jno
inc
push
jmp
pop
jp
mov
roll
inc
xor
addl
out
and
iret
adc
push
loop
push
mov
xchg
adc
sub
jo
sbb
test
test
dec
pop
mov
mov
js
push
cmpsl
out
ljmp
cltd
pop
xor
cltd
mov
add
push
dec
fisubl
mov
andl
cmovae
dec
fisttpll
jl
sub
bound
jge
dec
fnsave
cli
outsb
lret
push
jle
adc
or
or
lahf
xchg
mov
add
add
pushf
aad
call
rorb
mov
leave
mov
sahf
icebp
outsb
bound
push
mov
dec
jbe
ja
das
cld
mov
cmpsb
xor
out
insb
aam
mov
mov
jp
mov
shl
or
cmpsb
not
jg
mov
lods
iret
std
and
out
add
addr16
pop
mov
cmc
and
sub
outsb
rorl
lcall
xor
jmp
out
sbb
xchg
fisttps
push
loop
jp
mull
out
stos
sbb
sbb
mov
pop
cmpsl
mov
jns
bound
enter
lock
sub
insb
mov
sub
fwait
jno
xchg
imul
dec
xchg
aaa
xchg
loope
pop
int3
out
das
stc
call
mov
push
imul
sub
pop
movsl
into
pusha
incb
insl
xchg
movsl
scas
sarb
data16
push
or
lcall
arpl
jnp
xchg
in
pop
cmp
mov
or
sbbl
aad
sahf
jbe
movsb
cmpsl
inc
mov
out
xchg
adc
jp
or
es
stos
ljmp
push
lahf
mov
sbb
gs
paddsb
cmpsl
pop
cmp
sub
inc
roll
das
js
cmp
mov
sub
loopne
dec
into
sub
adc
ret
jb
lret
mov
into
mov
scas
jl
jge
cmp
and
outsl
jmp
mov
or
subl
mov
pop
mov
lcall
mov
movsb
lods
addl
outsl
cli
xor
jnp
inc
adc
fnstenv
mov
fbstp
pop
pop
pop
mov
push
stos
into
inc
and
das
dec
inc
xchg
xlat
dec
and
in
in
push
or
loopne
jle
push
cmp
fcmovnu
adc
or
shrl
popf
sub
sub
xchg
icebp
test
leave
cmp
add
ficomps
lahf
dec
add
movsb
cltd
xchg
cs
jge
fwait
ret
out
cwtl
add
addr16
shlb
sti
inc
ljmp
xor
imul
in
inc
pop
mov
sbb
xchg
sbb
mov
xchg
icebp
dec
pop
ret
and
inc
adc
call
addr16
push
repz
add
stos
xor
mov
imul
mov
dec
cwtl
sub
es
mov
xor
or
iret
nop
daa
jo
inc
cmp
out
mov
adc
add
mov
cmp
fcmove
ds
xor
jmp
sbb
cwtl
cmp
in
sub
and
xchg
popa
sbb
pusha
fimull
inc
mov
insb
imul
mov
adc
dec
mov
and
xchg
movsl
sub
into
mov
int
lcall
xor
pop
pushf
fs
call
jg
in
mov
mov
sub
xchg
es
adc
inc
dec
mov
lods
or
fwait
test
nop
pop
jnp
mov
xchg
fstl
mov
mov
ds
or
sbb
stos
xchg
pop
cmpl
addl
loop
or
addr16
inc
adc
test
out
inc
add
pop
aam
mov
into
ret
add
mov
fidivrs
and
jne
or
iret
adc
and
push
pop
add
movsl
sti
push
jns
push
or
ljmp
push
and
jmp
jbe
adc
ror
insb
inc
jp
xor
loop
stos
inc
mov
addl
fnstsw
hlt
inc
pushf
repnz
cmp
xchg
loope
test
push
pop
xchg
loopne
jns
inc
jbe
mov
mov
subb
lahf
mov
lret
das
ret
lcall
das
inc
stos
xor
or
insb
ds
mov
shrb
fsubrp
sti
lcall
sbb
adc
sub
and
mov
cmp
shl
cli
movsb
sub
mov
gs
dec
cld
addr16
arpl
sub
sbb
push
inc
mov
jns
lcall
lret
push
rcrb
stos
cmp
mov
int
jo
pop
add
or
jns
dec
jns
cltd
daa
stos
lods
xor
mov
xor
adc
and
das
add
fs
add
insl
gs
lods
inc
rcl
pop
les
fs
outsl
mov
pop
shll
push
push
pop
pop
into
jno
mov
rclb
gs
xor
push
jecxz
add
or
mov
sub
add
cld
icebp
jnp
movsl
out
push
mov
jo
ret
fnstcw
and
imul
mov
jns
sbb
outsl
imul
push
sbb
jl
in
push
lods
sub
cmp
std
xor
imul
cmpb
sbb
hlt
mov
push
out
add
mov
cmpsb
test
pop
xchg
sbb
add
push
test
in
in
ljmp
fistpl
mov
mov
mov
xor
loop
cmp
js
xchg
lcall
dec
mov
fstpt
pop
rolb
rcrb
push
jecxz,pn
out
xor
xchg
inc
fstpt
push
les
xor
cmp
loop
out
inc
push
in
add
cmpsl
lret
call
rolb
and
das
pop
movsl
mov
push
inc
sbb
mov
push
sbb
push
cmpsl
popf
fdivl
jg
push
and
push
ret
sub
das
xor
aas
push
fdivrl
fsubs
loope
jb
sar
add
adc
mov
movsb
arpl
cmp
adc
and
stc
or
mov
lods
adc
mov
and
aaa
shlb
lret
dec
inc
fdivl
dec
xorl
fimuls
push
fisubs
rorl
xor
or
mov
int3
fisubrl
dec
push
mov
mov
cli
mov
cmp
push
dec
and
adc
aaa
xchg
js
mov
sub
push
aad
out
sbb
mov
jns
cld
jmp
xor
cld
or
dec
mov
aas
pop
jns
add
add
aad
out
aaa
js
dec
call
xor
adc
mov
lcall
xchg
aad
mov
jmp
pop
add
test
cmp
or
jp
loop
dec
rcrb
aad
adc
in
iret
adc
lds
lods
cmp
movsb
lock
jp
mov
mov
pop
stc
cmp
mov
jg
add
mov
je
cli
push
in
dec
mov
imul
dec
inc
or
test
fdiv
jecxz
es
in
int3
xchg
inc
sub
add
sbb
add
dec
das
enter
lea
repz
cwtl
mov
test
add
shl
popa
rol
push
xchg
cmp
sub
addb
sbb
mov
int
arpl
shll
int
insl
mov
mov
ljmp
cltd
sarl
ljmp
insb
cmovp
sub
lcall
and
ret
xchg
jecxz
jnp
xchg
fwait
jp
in
push
add
cli
mov
cmpsl
call
xor
adc
cltd
les
push
aam
mov
test
mov
sbb
inc
or
mov
xchg
jbe
xor
jecxz
mov
dec
cmp
push
lret
mov
lcall
inc
aas
popa
enter
cmpb
jbe
loop
dec
xorl
pop
mov
push
scas
push
cwtl
xchg
aas
sbb
daa
lods
cli
xor
loopne
inc
movsl
popa
adc
xchg
sbb
pop
push
sti
mov
int3
daa
mov
rorb
xchg
mov
fwait
xchg
xchg
in
outsb
outsl
sbb
or
mov
fwait
ja
stc
aam
push
mov
aam
add
in
sti
in
dec
loopne
cs
sti
mov
inc
dec
scas
jns
fidivrs
icebp
xchg
pop
js
cmp
lock
and
lods
jnp
mov
sbb
std
fildl
in
ljmp
repz
and
hlt
test
ret
pop
shrb
mov
fadd
adc
insl
and
or
pop
mov
dec
jmp
jb
mov
js
loop
incb
std
jge
int3
jecxz
clc
cmp
xlat
pop
sbb
xor
mov
pop
xorl
mov
negb
fisubrl
pop
jmp
cmp
sbb
cmp
dec
pop
cmp
sub
test
inc
testb
push
notl
pop
mulb
sti
lds
pusha
enter
add
fcom
sbb
cmp
fucomp
dec
cltd
jp
xchg
loop
in
clc
push
push
add
inc
andl
jl
in
add
pop
imul
data16
cltd
and
lds
xchg
aaa
push
xchg
push
stos
mov
std
ds
xor
dec
in
rolb
jo
lret
fmull
or
in
enter
rclb
sub
out
pop
and
ljmp
pop
pop
jnp
stc
sahf
call
stc
pop
add
ret
mov
sbb
push
mov
xchg
pop
and
call
push
mov
fmull
imul
icebp
stos
pop
xchg
xchg
int
repnz
repz
jb
or
into
mov
dec
mov
cltd
lcall
scas
pop
adc
cmc
repz
js
jle
jae
and
lret
fsubl
push
add
icebp
mov
xchg
mulb
es
fstpt
inc
sbb
mov
cmp
and
addb
int
xchg
mov
sbb
mov
jecxz
into
inc
pop
pop
shrb
mov
xor
lods
adc
bound
aad
addr16
or
jecxz
xlat
in
adc
daa
xchg
aam
mov
rcrb
imul
jbe
push
scas
inc
mov
jg
stos
sbb
pop
inc
push
cmpsl
xchg
andl
mov
cmp
and
adc
fidivl
lock
ror
cmpsb
jge
ds
test
adc
insb
mov
add
mov
gs
fidivs
cmp
outsb
sbb
int3
iret
or
call
sub
inc
lods
in
in
mov
pushf
mov
shrd
ljmp
movsb
pop
mov
xlat
mov
cmp
mov
xor
xchg
aam
cmp
mov
push
dec
xor
adc
push
movsb
inc
xchg
rorl
cltd
xor
and
movsb
test
aam
mov
jno
add
mov
ds
xor
mov
mov
inc
sahf
sub
pop
clc
pop
negl
cmpxchg8b
out
push
add
mov
gs
and
push
sbb
push
push
ret
ret
pop
mov
repnz
cmpsb
fs
push
leave
js
arpl
jnp
push
in
leave
mov
fidivrl
dec
bound
sbb
stos
aaa
sbb
fwait
and
into
and
nop
and
in
testb
inc
sub
hlt
popa
add
inc
jge
mov
enter
inc
push
cmpl
pop
push
les
out
dec
nop
bound
enter
in
testb
xlat
cld
popa
sub
das
cwtl
fwait
sbb
push
jle
mov
add
repnz
loopne
cmp
dec
outsl
stos
and
cmp
xchg
pop
loope
cld
mov
xchg
jbe
and
xchg
sbb
xchg
out
lahf
sub
inc
xorl
pop
pop
lret
push
cmpsl
leave
outsb
stos
mov
ja
pop
xor
mov
and
sub
in
sub
fs
in
xchg
cwtl
dec
ret
mov
data16
jae
push
xchg
movsl
add
lea
sub
iret
ret
testb
mov
lret
jecxz
adc
adc
add
shlb
jne
in
mov
add
movsb
or
stc
or
or
xchg
and
bnd
popa
insl
inc
xchg
or
lahf
fwait
ror
out
loopne
cwtl
shl
xchg
movsl
cwtl
cs
mov
scas
pop
ror
dec
daa
inc
mov
fcoms
aaa
or
mov
sbb
subl
clc
test
push
dec
push
jbe
mov
dec
das
scas
cld
sbb
mov
lods
pop
xchg
adc
fwait
xchg
scas
push
and
pop
sub
push
push
insb
mov
mov
pop
mov
addr16
test
in
push
jle
xor
orb
mov
push
cmp
data16
mov
jns
xchg
mov
inc
inc
push
jp
sub
mov
xchg
mov
es
push
shlb
add
out
jl
test
mov
cmp
and
pop
fcoml
mov
jg
aaa
popa
aas
jg
dec
mov
mov
sti
xor
sub
adc
adc
adc
inc
lret
addl
lock
jle
mov
es
int3
jg
orb
fiaddl
clc
in
cmp
dec
push
dec
psubd
rcrb
js
rcrb
addl
mov
push
out
mov
mov
push
loope
fs
je
rorb
int
fmul
or
sbb
push
push
out
push
jp
mov
inc
lea
xchg
push
mov
arpl
je
inc
mov
mov
loop
lcall
sar
adc
push
fisttpll
into
push
pop
push
clc
test
roll
mov
pop
aas
mov
add
cwtl
jnp
push
jae
xor
lods
rcrl
mov
stos
jae
mov
into
std
sub
or
lods
psraw
nop
inc
inc
inc
mov
xchg
add
push
pop
sub
shlb
pop
and
ss
mov
mov
dec
cmc
fwait
xchg
test
insl
sub
inc
arpl
dec
xor
mov
in
mov
push
mov
cmpsl
jne
fadds
dec
andl
inc
popf
mov
into
sahf
mov
cmp
mov
dec
push
jno
mov
or
lds
out
inc
stos
das
mov
lds
dec
xchg
xchg
add
jg
orb
add
repnz
pop
cmp
icebp
repz
ret
lret
push
mov
scas
xor
pop
or
lods
daa
ja
push
rolb
lea
inc
or
enter
shrb
fcmovbe
imul
xchg
cmc
fdecstp
movsl
rorb
mov
mov
jecxz
dec
pop
in
push
lret
hlt
ljmp
in
jmp
lods
sub
scas
ret
insl
mov
xchg
test
add
jge
xor
pushf
inc
adc
ss
mov
fisubs
in
idiv
stos
dec
insl
inc
mov
mull
adcb
es
jo
push
pop
mov
xor
sti
jno
push
jmp
push
ja
sub
mov
add
sbb
mov
sbb
inc
xor
sbb
jb
jg
adc
fs
or
cmc
and
fildll
add
cltd
mov
dec
push
les
mov
ret
push
subl
sbb
jg
push
fucom
mov
fwait
jp
loopne
fbld
fbld
adc
sbb
adc
movsl
or
ds
mov
pop
lea
sub
lahf
aas
inc
mov
push
or
push
mov
mov
js
or
fsubrs
add
insl
mov
inc
adc
ficoml
add
loopne
mov
das
xchg
push
pop
dec
imul
aad
cmp
xchg
mov
mov
data16
sbb
std
insl
or
sbb
mov
pop
sub
clc
daa
sarl
adc
dec
mov
mov
movsl
push
push
jb
push
popa
ret
push
es
jae
lock
xchg
scas
add
nop
lds
scas
movsb
shr
stc
data16
xchg
jg
xchg
adc
jge
adcb
adc
mov
sub
and
fwait
stos
mov
scas
cmp
sub
mov
js
scas
inc
popf
cs
add
out
loop
mov
adc
pop
cli
pop
fsts
sbb
add
and
adc
jnp
mov
dec
xchg
push
loopne
xor
fldenv
sub
nop
xchg
jbe
adc
mov
test
fadds
add
xor
mov
add
pop
rep
cmpsb
paddsw
stos
xor
movsb
test
pop
mov
jmp
orl
test
mov
lock
sbb
mov
mov
lahf
pop
call
xor
insl
jmp
cli
leave
xor
aam
or
andl
pop
xchg
xchg
push
ret
mov
into
mov
out
jge
jnp
jae
and
jno
push
jmp
mov
sbb
mov
jns
test
xor
cwtl
lahf
push
fwait
push
cmpsb
jecxz
pop
movsb
add
cmp
mov
push
les
icebp
gs
or
dec
jnp
mov
sbb
ljmp
addr16
loopne
fldenv
lea
or
sti
xor
and
or
mov
sbb
test
push
int
test
mov
xor
sbb
add
sub
pop
mov
pop
sbb
mov
inc
sbb
pushf
lds
shrl
test
push
rclb
or
popf
repnz
subb
std
dec
rorl
pop
test
add
sbb
test
repnz
fnsave
cmpsb
sahf
and
or
pop
lods
mov
ljmp
inc
ds
loop
out
lahf
stos
repz
push
dec
jge
out
test
or
in
pop
mov
adc
xor
adc
sbb
sub
or
mov
jo
push
insb
mov
mov
bound
xor
fildll
sti
out
ret
mov
in
sub
lret
inc
mov
mov
push
xchg
inc
jle
sbb
xchg
je
insb
mov
testb
mov
sbbl
repnz
or
jb
scas
xor
push
ret
pop
jb
cmp
add
sbb
mov
xlat
outsl
mov
xchg
addl
dec
add
sub
add
mov
jecxz
fistpl
sti
inc
rclb
and
pop
andl
jecxz
xor
xchg
xchg
arpl
adc
inc
xchg
cwtl
leave
xchg
mov
notb
xchg
mov
repz
push
jne
ds
into
dec
or
add
movsb
lret
out
sahf
xorl
dec
adc
cmp
clc
push
add
dec
push
jo
cmpsl
add
daa
fistpl
fwait
cltd
fisubrl
cld
mov
out
cltd
xor
loop
mov
orb
cmpsl
inc
jae,pt
in
loop
aam
outsl
imul
rcrb
movsb
dec
int3
rclb
subl
lret
push
dec
pop
lret
xor
mov
call
aas
lret
or
pop
or
adc
je
cmp
inc
pop
pusha
cmp
popa
adc
jo
mov
add
nop
pop
shlb
and
jo
dec
add
in
inc
ret
mov
mov
bound
stc
nop
jno
arpl
fistps
or
hlt
aas
test
movsb
lcall
sbb
pop
add
pop
adc
adc
adc
mov
test
dec
dec
les
loop
cld
xlat
scas
xor
cmp
rolb
push
imul
xchg
fs
push
bound
pop
movsl
addl
sub
insb
mov
mov
into
ret
aaa
add
in
inc
xor
leave
popf
cmp
sub
push
lahf
cmp
nop
jne
repnz
inc
movsb
clc
inc
imul
and
lcall
fiadds
cltd
call
lret
fwait
in
test
ret
sti
inc
sub
jns
cmp
adc
jecxz
mov
sbbb
icebp
cmpsl
jne
js
daa
leave
les
add
mov
sbb
test
stc
jne
out
jnp
push
inc
jb
or
cwtl
pop
loop
jns
jno
fimuls
shlb
or
iret
stos
push
sti
rcll
mov
stos
fwait
cmp
xor
pop
push
shl
sbb
mov
aam
imul
and
outsb
jns
sub
add
movsb
xor
xchg
cmpsb
xor
adc
int
dec
jl
adc
dec
ja
jmp
mov
mov
sub
push
sbb
inc
cmpsb
imul
push
sbb
mov
fistpl
orb
cld
das
fistps
mov
and
loope
inc
xchg
mov
into
mov
fwait
push
fimuls
lods
push
inc
or
jecxz
and
out
mov
xchg
mov
push
or
test
mov
or
stc
sub
ds
fwait
jmp
mov
inc
jo
jbe
icebp
shl
or
jp
dec
stos
and
stos
cmp
nop
xchg
or
int3
dec
lods
mov
push
push
sub
sub
test
ret
jmp
push
or
call
sub
cmpsb
sbb
adc
push
cltd
push
mov
jbe
xlat
ret
bound
jmp
cmc
mov
fistps
and
sub
js
popa
lcall
pop
out
xchg
dec
fsubrs
add
insb
push
add
xor
push
test
push
mov
fstps
xor
lods
xchg
dec
push
jge
pop
stc
lea
enter
rorb
lods
rclb
push
ljmp
mov
shll
movsl
inc
iret
mov
gs
negl
insl
cld
and
xor
int
fistpl
sub
mov
sub
shrl
pminsw
dec
std
sbb
stc
movsb
ja
test
dec
in
lock
inc
ret
mov
ds
push
xchg
pop
or
or
ret
mul
or
add
div
inc
xchg
lock
scas
mov
dec
cmp
aad
add
dec
pop
negb
mov
mov
mov
into
ljmp
add
inc
adc
sbb
shll
push
loopne
aad
dec
cmp
cli
loop
je
loopne
std
pop
jmp
mov
jno
roll
sarl
add
push
int3
pop
inc
notb
sub
icebp
sub
lds
bound
xor
lds
jmp
mov
lret
cmp
pop
lods
mov
std
addr16
pop
cmp
or
xchg
shlb
aad
sbb
out
push
jp
mov
pop
shll
jno
jne
push
cltd
add
inc
xchg
xadd
add
ss
mov
mov
aaa
mov
xor
add
cs
es
imul
mov
mov
loop
mov
enter
pop
mov
aad
les
dec
ss
arpl
nop
dec
out
cmp
mov
sbb
pusha
add
sarl
bound
dec
xchg
xor
mov
lret
xchg
sub
lcall
pop
dec
dec
cmp
xchg
in
movsb
cmp
aas
insb
and
pop
adc
pop
enter
aad
subps
hlt
xchg
dec
pushf
notl
aaa
mov
cld
arpl
sub
in
xor
es
in
cmc
insb
clc
stos
ret
fwait
cwtl
xchg
fdivs
insl
cwtl
fs
out
mov
movsb
and
push
iret
add
adc
xchg
or
pop
cld
mov
dec
mov
mov
popa
pop
xor
jnp
adc
adc
pop
lea
cmp
popa
leave
or
out
mov
shl
mov
lcall
cmp
popa
and
adc
out
insb
cmp
lret
inc
mov
call
js
sub
adc
insb
xor
stos
nop
fsubl
fidivs
dec
push
out
jo
repz
icebp
ss
sub
pusha
inc
xchg
fmuls
xor
sbb
mov
sbb
sbb
mov
negl
mov
xor
mov
jbe
mov
cmp
fwait
mov
xor
hlt
fs
andb
mov
rclb
std
ficomps
xchg
jnp
aaa
das
rclb
or
pop
pop
test
or
std
out
pop
call
or
xor
xchg
sbb
out
xlat
ficomps
jmp
fbld
jo
popf
out
lods
and
addl
adc
mov
popa
or
imul
cmp
fidivl
andb
fmull
lock
cmc
dec
popa
xchg
pusha
les
cli
test
mov
fs
mulb
sahf
push
pop
mov
add
test
popf
cmc
arpl
or
sub
inc
fists
inc
sub
sti
sarl
push
xchg
sub
jb
xchg
add
out
das
or
fisttpl
inc
pop
push
adc
and
in
insb
cmp
in
push
fisubrl
pop
fwait
cli
lret
enter
loop
jle
inc
pushf
lods
aam
mov
testb
loope
push
loope
and
push
jg
add
fucomp
or
data16
or
fcmovb
pop
jbe
xlat
and
stc
push
pop
dec
xor
lcallw
loope
xor
fwait
aad
add
adc
loopne
pop
cli
sub
adc
in
inc
dec
fmull
xchg
test
xorl
xchg
pop
mov
pop
fbstp
ret
or
popa
xchg
std
jb
icebp
xchg
insb
fwait
pusha
and
sub
arpl
loopne
push
in
mov
sub
sub
add
ljmp
adc
stos
sbb
pop
clc
lock
lock
fisttpl
xchg
xchg
cld
jo
mov
adc
aas
out
mov
xchg
insb
pushf
setle
in
push
mov
int
mov
mov
mov
xchg
and
icebp
and
nop
inc
inc
out
arpl
fisttpll
scas
xlat
cmp
and
pop
mov
testb
repz
or
push
out
and
sbb
push
fxtract
mov
inc
lds
aas
sbb
jmp
fsubr
pop
adc
loop
push
fs
dec
movl
pop
pushf
inc
neg
aaa
lock
arpl
mov
adc
adc
test
cwtl
ret
mov
movsb
sbb
lret
fisubrs
je
jle
pusha
sbb
dec
inc
rolb
xor
sub
in
stos
mov
sbb
add
pop
gs
lahf
repz
jns
call
mov
loopne
pop
mov
repnz
stos
clc
arpl
pop
call
clc
in
testb
sub
xor
movb
paddb
jmp
pop
mov
jmp
and
adc
or
int
in
cmpsb
cmp
int3
lcall
mov
jge
mov
cli
and
iret
test
jmp
mov
in
in
and
add
je
pop
or
in
sbb
mov
iret
cmp
mov
push
and
cmp
lds
test
push
push
cmpsl
and
test
ljmp
pop
outsl
xorl
sub
pop
mov
adc
pop
popa
sbb
push
and
fidivl
jne
lcall
stos
xor
push
movsb
dec
adc
rcl
iret
int3
and
clc
cmp
popa
shll
sbb
fildl
mov
xchg
int3
sbb
adc
icebp
out
fs
add
movsb
sub
repnz
les
lret
mov
test
sarl
loop
or
roll
mov
jg
xlat
cmpsl
addr16
xor
cmpl
fs
adc
mov
outsb
dec
cmp
mov
ret
mov
mov
xchg
adc
sbb
xchg
dec
popa
and
and
mov
in
mov
stos
pop
mov
and
xchg
mov
daa
sub
inc
sub
add
gs
rolb
cmp
push
xchg
ret
xlat
push
mov
subb
cs
xchg
sti
push
outsb
mov
cld
scas
or
mulb
sbb
daa
push
inc
mov
xor
cmpsb
dec
add
pop
jl
pop
inc
filds
sbb
fisttps
xchg
hlt
imul
cs
push
lret
idivb
test
push
add
scas
fsubl
iret
ss
xchg
mov
mov
mov
jae
jo
cld
daa
lret
outsl
into
xor
or
xor
lock
andb
int3
into
movsl
subl
mov
xorl
inc
jno
inc
push
cwtl
xchg
test
scas
or
pop
stc
sti
push
out
testb
or
mov
iret
xchg
inc
cld
jg
mov
jecxz
xchg
pushf
int
lretw
jmp
stc
pop
cwtl
aam
mov
in
or
shlb
pop
jo
pusha
mov
add
cmp
movb
movsl
lds
xchg
orb
inc
pushf
mov
daa
pop
int
pop
jg
testl
adc
testb
pop
xor
imul
pop
fsts
imul
xlat
jle
mov
and
repnz
andl
add
cmp
movsl
shlb
or
aam
xor
popf
mov
inc
jae
negl
lahf
inc
sahf
sub
push
ret
stos
pop
gs
je
mov
subb
jo
js
dec
cmpsl
sbb
ds
cmp
test
enter
dec
ja
mov
adc
sub
inc
mov
pop
pop
aad
add
pushf
cmc
dec
movsb
hlt
iret
mov
lcall
mov
mov
adc
ret
in
mov
in
fdivrl
mov
ss
mov
ja
fisttpll
jb
inc
out
sbb
and
mov
push
clc
mov
mov
sub
mov
aad
sbb
xor
xor
jb
ljmp
sbb
sahf
loop
loope
adc
mov
dec
cmp
mov
enter
popf
mov
inc
and
in
xchg
xchg
incl
mov
cmp
call
out
stos
setne
pop
notl
and
test
adc
or
movsb
imul
inc
or
or
cld
test
aam
sbb
cmp
addb
ds
push
int
add
cmp
mov
xor
add
sbb
cmp
jo
and
rclb
adc
or
nop
xchg
mov
and
imul
jecxz
out
push
sarl
jo
rol
bswap
xor
sahf
sbb
in
mov
and
fisttpl
loope
nop
xlat
filds
inc
cmpsl
bound
or
sti
mov
jnp
cmp
push
jl
daa
les
jbe
push
repnz
lods
jp
cmp
adc
arpl
pusha
and
sub
jge
xchg
mov
inc
sahf
xchg
ret
push
and
mov
push
ss
inc
ret
mov
ljmp
rcll
add
aam
clc
pusha
push
lcall
mov
xchg
mov
push
sbb
xor
cmp
jmp
or
pusha
clc
fimull
pusha
out
dec
iret
fidivl
loope
sbb
sbb
rorb
xor
imul
xor
jo
sbbl
ret
or
fistps
inc
hlt
mov
test
imul
or
mov
stc
inc
ret
je
movsb
nop
mov
pop
mov
mov
xor
mov
dec
iret
mov
mov
test
pop
out
fisttpll
jno
pushf
or
ja
xchg
mov
mov
jle
lret
jne
imul
repz
das
adc
inc
bswap
in
push
pop
xor
int3
sub
std
mov
btr
je
mov
arpl
xor
mov
dec
clc
or
imul
mov
loope
dec
test
xor
xor
fistps
test
in
ss
push
shll
cmp
lret
rcrl
jg
mov
cmp
push
add
cli
pop
sbb
xor
mov
mov
dec
or
sub
mov
outsl
aaa
pop
or
mov
sarb
popf
add
dec
dec
mov
pop
gs
rcrl
cmp
mov
xor
rcr
inc
nop
dec
jo
pop
pop
sub
mov
xor
inc
xor
mov
mov
ret
mov
cmp
jge
mov
xchg
pop
call
xchg
and
lds
popf
mov
mov
jle
lret
inc
adc
dec
in
xor
pop
pop
push
dec
ret
push
mov
mov
cwtl
xor
and
lock
and
pop
jp
testl
ja
aas
inc
dec
cld
nop
jne
imul
jg
cmpsb
and
push
divb
sar
pop
adc
rolb
cltd
jge
sbbl
mov
jno
inc
push
xchg
movl
adc
inc
ja
cmp
jo
mov
loope
jg
dec
push
pmaxsw
popf
inc
mov
mov
xchg
aaa
pop
sbb
sbb
rcll
jmp
xchg
dec
clc
pop
jmp
repz
leave
js
pop
add
cmp
lock
dec
loopne
cmpsl
pop
lcall
lcall
test
mov
push
imul
ret
jno
mov
mov
cmp
adc
cmp
das
pop
or
mov
popa
mov
sahf
jg
and
or
mov
jmp
xor
rorl
mov
adc
xchg
lcall
and
fwait
or
lods
ret
cli
jno
push
sbb
cmc
push
rcrb
imul
dec
sti
bound
add
jle,pn
hlt
jmp
jl
sahf
xchg
push
sti
insb
stc
popf
mov
outsb
inc
repnz
out
push
add
fidivrl
movsl
mov
outsb
ret
jno
in
dec
adc
in
mov
stos
pop
mov
pop
addl
cmp
mov
mov
and
pop
stc
lods
test
cwtl
cmpsl
push
pop
and
lock
loopne
xorl
jl
xchg
sub
xchg
mov
jge
mov
inc
mov
fsubp
mov
push
gs
test
bnd
add
dec
mov
and
ficoml
lock
loope
fs
stos
mov
call
lret
adc
pop
stos
dec
inc
jno
or
push
ljmp
dec
in
push
mov
fstl
push
fcomi
cmp
enter
rorb
lcall
es
sbb
das
fwait
mov
fldcw
mov
jnp
jbe
and
add
xchg
push
hlt
andb
push
xor
in
push
xbegin
rolb
and
adc
pop
add
aaa
out
jb
dec
ljmp
pusha
fsubrs
add
mov
pushf
movsl
addr16
push
push
or
and
or
in
ror
imul
inc
or
and
icebp
outsl
add
lea
ret
mov
inc
lods
in
clc
test
mov
shll
jp
in
rcl
sbb
lcall
or
arpl
cmp
inc
mov
xchg
jle
xor
lods
sbb
xor
mov
dec
mov
fcoml
inc
pop
mov
and
enter
flds
mov
int3
mov
cs
jp
xchg
cmp
pusha
jecxz
and
cmp
inc
and
rcll
mov
stos
mov
lea
popf
dec
push
rcll
stos
sbb
xor
and
clc
shll
test
pop
test
repz
push
pop
int3
mov
mov
inc
pusha
jae
stos
xor
cmp
mov
leave
sub
cmp
add
scas
inc
mov
mov
mov
inc
mov
ljmp
push
mov
fsubl
cmp
mov
aam
shlb
lcall
jge
cltd
add
in
inc
push
rcll
les
ds
jb
lds
mov
in
cwtl
dec
movsb
add
rclb
int
cmp
adc
idivl
call
xor
pop
sub
out
or
in
lock
sbb
mov
inc
or
xchg
cmp
push
dec
mov
pop
pop
les
mov
sbb
sub
lds
popa
inc
pop
mov
lcall
imul
jl
jns
xchg
sbb
aad
out
out
aad
imul
jle
stc
or
xlat
fstpl
push
xlat
test
test
xor
push
inc
rclb
and
mov
repnz
or
jl
ret
arpl
imul
mov
lock
pop
fsubs
mov
popf
in
mov
pop
inc
repnz
stc
mov
mov
std
cmp
mov
cli
stos
sub
cmp
cmpsl
or
mov
dec
xor
outsb
inc
jmp
movsl
mov
dec
cmpsl
repnz
test
rcrb
dec
movsb
push
inc
xchg
jo
push
repz
cmp
mov
mov
les
fwait
inc
sub
xor
out
jmp
cld
out
imul
dec
jle
xor
sbb
mov
dec
push
adc
sub
adc
into
mov
movsl
pop
mov
nop
mov
xchg
xchg
inc
push
mov
adc
push
inc
push
dec
aad
cmp
sbb
insl
push
jo
pushf
cli
jno
inc
push
cli
mov
dec
sbbl
and
mov
cli
jecxz
aad
sub
pop
mov
ret
xlat
inc
jp
sub
adc
sub
sti
push
movl
cmc
sub
lods
mov
mov
or
insl
in
pop
and
movsl
xchg
lea
leave
push
outsl
mov
mov
sbb
arpl
add
ja
sbb
cmpsl
cs
adc
psubd
stos
loope
adc
inc
lahf
jmp
push
nop
addr16
cld
fld
pop
sti
ficompl
inc
pusha
sbb
mov
push
popa
add
mov
dec
popa
lock
int3
insl
into
push
fld1
sub
popa
and
fldt
out
inc
jnp
xor
sbb
sbb
clc
mov
or
mov
lret
inc
mov
pushl
icebp
adc
xchg
mov
jo
adc
cmpsb
pop
jns
or
push
js
mov
inc
loope
test
mov
jb
gs
xor
xchg
je
mov
cld
jb
testl
xchg
jmp
rcrb
sbb
push
loop
test
cltd
xchg
leave
popf
fcomps
lcall
or
popf
cmp
jp
jp
nop
jp
pushl
add
addr16
pusha
aad
lods
inc
dec
pop
cmpsb
in
cli
sub
cmp
mov
add
leave
out
test
cmpsl
mov
insl
xchg
mov
mov
lods
sbb
popa
sbb
std
nop
adc
je
movsb
sbb
xlat
jp
insb
nop
pushf
hlt
cmpb
push
ljmp
repnz
arpl
pminub
jno
jns
test
cmp
popf
pop
inc
sbb
rorb
inc
jb
es
xor
test
sbb
fcoms
leave
fbstp
aad
cmp
shlb
test
jecxz
imul
sarl
insb
jbe
mov
popf
popf
mov
test
ss
xor
nop
inc
int3
aaa
mov
xchg
mov
push
rcll
jg
pop
mov
aaa
rcrb
ss
adc
dec
cld
push
xor
jge
fwait
js
hlt
cld
cli
jne
pop
imul
xchg
push
sbb
sub
test
gs
jmp
mov
lods
xor
mov
int3
inc
mov
jnp
jne
nop
mov
cltd
adc
cld
sbbl
or
stos
bnd
add
aas
jl
xchg
test
xor
fwait
test
push
fpatan
xchg
xchg
inc
lea
rorb
xchg
aas
test
xchg
pushf
arpl
push
sar
xor
pop
ja
daa
pushf
xchg
add
sbb
inc
add
sahf
jns
imul
lcall
jns
sub
aas
ret
cwtl
mov
movsl
fdivrs
inc
pusha
mov
mov
inc
pop
ja
pop
fwait
xchg
adc
mov
push
stos
xchg
mov
xchg
push
lock
cmpsb
sbb
mov
mov
cwtl
repnz
sub
decl
fsubrs
and
addr16
mov
fisttpll
push
push
cmc
mov
loop
jne
push
shrl
xchg
sub
sbbl
or
in
js
ss
fwait
insb
push
mov
sbb
add
push
hlt
sub
pusha
test
popa
sbb
dec
lds
mov
xchg
test
ja
xchg
ja
hlt
cmp
push
push
inc
adcb
xchg
outsl
es
hlt
divl
sbb
nop
sar
aam
dec
or
test
jne
jnp
xchg
test
adc
inc
add
je
stos
mov
dec
out
add
cmp
inc
mov
enter
mov
loopne
mov
lar
lret
jae
pushf
fwait
push
stos
mov
push
jecxz
pusha
repnz
das
fsubl
imul
ljmp
filds
das
push
repnz
jbe
into
mov
push
cmp
mov
lea
jmp
repz
sbb
fwait
and
and
xor
mov
frstor
in
lret
cld
sti
pop
shrb
xchg
mov
sub
call
dec
pop
cmp
cmpsl
aad
iret
sub
xchg
movsb
movsl
mov
and
and
arpl
bound
test
mov
popf
add
push
stc
xor
add
js
sbb
shlb
and
xor
jg
push
dec
daa
popf
sahf
mov
nop
pop
in
shlb
lock
dec
xlat
setb
mov
lret
repz
push
aaa
nop
das
fcmovnu
jae
add
mov
pop
rcrl
fisubl
out
cmc
sahf
push
stos
stos
out
stos
je
ljmp
mov
movl
sbb
dec
jb
fwait
into
or
jo
cmp
and
ret
inc
xor
icebp
lahf
out
xchg
ss
and
popf
jge
loopne
mov
aas
and
cmp
inc
push
xchg
insb
xor
adc
cli
ja
inc
loopne
mov
jb
sbb
cmc
pop
sti
cmp
sbb
mov
testl
mov
inc
cmp
subb
jbe
inc
ret
sbbl
or
popa
lahf
popf
jns
xchg
mov
ficoml
insl
mov
cwtl
sub
outsl
inc
pop
es
add
jl
mov
loope
mov
in
mov
out
popa
pop
push
nop
xchg
hlt
or
popa
ljmp
inc
loopne
mov
sbb
or
adcl
sub
inc
mov
push
xchg
lret
push
dec
loope
jno
inc
icebp
xchg
inc
jmp
ds
pop
add
dec
and
pop
cwtl
in
pusha
lret
std
and
sbb
xchg
mov
imulb
push
fnstenv
daa
sahf
dec
mov
inc
sub
es
add
mov
mov
inc
leave
scas
push
aas
jg
int
pop
jl
inc
loop
jo
js
dec
gs
xchg
hlt
stos
cli
or
das
jp
fimuls
and
lods
mov
xchg
inc
jo
sarl
cmp
xor
add
jno
aas
mov
dec
das
outsb
test
add
and
movsl
lods
pusha
test
xchg
dec
test
ret
je
mov
shrb
in
add
adc
lea
fnstenv
fimull
inc
out
lret
add
sbb
jno
and
sbb
jne
loope
popa
cmp
shl
mov
cmp
inc
clc
scas
push
daa
cs
pop
int3
pushf
les
jae
mov
mov
fisubs
cmpsl
jg
stos
das
pushf
frndint
aad
jge
adc
lods
xor
inc
pop
xchg
cs
mov
mov
push
mov
rcr
leave
xchg
push
loop
mov
and
hlt
in
pop
daa
fs
cltd
rep
cltd
or
ljmp
push
xchg
mov
jb
and
cmpb
cmc
mov
lret
mov
cmp
fsubl
leave
jmp
or
fcoml
push
push
int3
test
push
mov
jno
inc
cmpsb
inc
sub
inc
jmp
pop
push
dec
xchg
ret
push
rcrb
dec
pusha
mov
cmp
jno
sbb
idiv
das
loope
push
jbe
sbb
bound
pop
fisubrs
shll
mov
test
stos
cmp
lcall
mov
lahf
xor
out
sbb
lret
subb
xor
icebp
fdivs
mov
mov
or
pop
cmp
mov
fmul
adc
subb
xchg
jns
stc
ret
mov
dec
adc
shl
adc
ja
cmpb
imul
ficoms
arpl
das
xor
ret
int
sub
cmp
or
aas
aas
dec
pusha
sbb
and
mov
inc
fs
cmpsb
mov
test
repnz
cwtl
adc
or
cmp
jno
pop
xchg
xchg
iret
push
sub
cmpsl
mov
and
insl
mov
inc
aad
dec
pusha
das
cmc
dec
out
mov
ja
adc
mov
mov
rcl
push
std
mov
fsubrs
push
enter
mov
xchg
push
mov
sahf
aam
push
decb
testb
lods
call
mov
icebp
movsb
call
push
test
xchg
and
scas
push
mov
in
bound
test
jns
rclb
int
mov
pop
cmp
mov
sbb
out
xchg
add
mov
dec
pusha
lock
fdivs
rcrl
cmpb
add
mov
xchg
cmp
test
push
push
mov
lea
test
lds
sbb
mov
cmpsb
arpl
scas
enter
and
neg
dec
nop
add
push
icebp
sbb
mov
imul
mov
fisttps
and
cld
testl
cmpsb
add
pop
pop
mov
or
mov
xchg
xchg
stos
mov
mov
inc
cmpsl
fdivl
or
insb
icebp
outsb
or
inc
mov
inc
xor
dec
movsl
and
jne
push
and
push
jge
jp
lret
cmp
arpl
rolb
xchg
pop
ja
pop
push
sti
cli
mov
mov
sub
nop
sbb
inc
mov
sub
dec
cli
imulb
mov
xlat
jmp
std
out
arpl
xchg
jmp
mov
nop
sbb
test
adc
movsb
testl
leave
cltd
xchg
jmp
test
lahf
jl
sub
hlt
rcll
and
das
scas
maxps
fisttpl
repz
repz
push
add
rolb
mov
jae
jnp
call
xchg
sbb
aam
or
int
inc
enter
adc
jb
sti
inc
sbb
insl
or
fsubrl
xchg
mov
je
dec
sbb
xor
adc
add
inc
in
pop
stos
cwtl
adc
mov
lret
or
icebp
or
push
lea
outsl
dec
in
imul
push
hlt
clc
aaa
pop
lods
mov
xchg
insl
or
popa
push
dec
lea
lea
popa
leave
xorb
adc
cmp
mov
adc
or
ljmp
test
push
sar
push
push
jno
dec
inc
mov
std
xor
scas
mov
ret
inc
add
fidivl
xor
jp
xchg
jns
jae
adc
dec
mov
jnp
or
or
push
xor
mov
loope
outsl
xchg
ds
in
pusha
cmp
cmp
gs
imul
xchg
rcl
pop
xchg
ret
pop
sarl
ljmp
cmpsl
adc
repz
movsl
pop
mov
gs
or
sub
cmc
ja
jne
mov
arpl
adc
lods
gs
sub
cmp
mov
pcmpeqd
mov
shr
xchg
outsb
inc
adc
sbb
ret
push
in
sahf
stc
jecxz
push
hlt
mov
xchg
xchg
lods
movl
test
orl
pop
mov
or
ret
adc
cmp
fwait
pop
mov
scas
push
mov
mov
push
cmp
gs
cli
stos
inc
adc
pushf
adc
and
aas
xchg
daa
jle
enter
repz
and
das
add
mov
cli
or
aas
pop
int
adc
pop
cmc
rep
dec
inc
jg
sti
das
mov
loop
inc
dec
push
js
add
int3
push
arpl
xor
mov
rcrb
or
int3
pop
lret
adc
cld
jge
inc
sub
lcall
pop
xchg
pop
xor
lods
mov
push
adc
push
leave
jp
pop
pop
mov
mov
roll
ss
cmp
in
lret
cltd
sub
lret
pop
push
aad
and
add
adc
adc
ljmp
mov
push
iret
mov
jecxz
testb
adc
jg
sahf
jb
inc
rclb
sbb
add
int3
pop
or
cmp
pop
mov
stos
adcb
inc
cli
lahf
mov
jbe
sbb
mov
test
lcall
dec
mov
jnp
jo
sbb
fsubr
adcl
xor
imul
nop
push
lcall
jo
jae
fldcw
sbbl
or
adc
mov
in
dec
mov
pop
add
cmp
call
xor
sub
xchg
mov
ret
shll
mov
daa
negl
lods
jp
pop
mov
adc
adcb
jp
mov
or
add
cmpsl
jge
pop
cmp
pop
dec
cmp
push
xchg
mov
scas
add
adc
or
push
insb
mov
fldcw
mov
adc
push
add
je
je
push
insl
ja
inc
lahf
lcall
in
loop
js
aaa
shll
std
and
fisttpll
out
fcoms
daa
dec
and
sub
adc
xor
push
cli
out
sub
cli
mov
sub
bound
sbb
out
out
popa
mov
fwait
sub
jo
mov
add
xchg
leave
inc
push
inc
inc
jns
imul
or
fldl
or
loopne
cmp
cs
xchg
testl
add
fimull
xlat
dec
testb
imul
cmp
sbb
mov
jbe
push
and
xlat
fwait
bound
push
sub
mov
lock
lds
icebp
cmp
cmp
mov
dec
push
out
xchg
nop
test
add
sbbl
mov
aad
mov
pop
cld
xor
sbb
mov
aas
jle
sub
pop
add
cmp
ret
in
inc
jp
mov
cmp
dec
push
push
push
pushf
shlb
lock
popa
das
sahf
cmp
orb
mov
test
mov
adc
ret
fs
sbb
arpl
popf
pop
rol
mov
xchg
add
je
pop
nop
or
sar
mov
mov
in
out
loope
mov
fdivp
add
and
call
outsl
sub
cmpsb
daa
and
mov
lret
jns
add
fstpt
insb
inc
ljmp
out
iret
jg
adc
fisubrs
add
xchg
frstor
dec
jle
sbb
xchg
in
mov
sti
push
arpl
les
stc
adc
cli
push
add
cs
xchg
dec
cwtl
shrl
aam
pop
movsl
test
dec
dec
in
jns
cmp
xchg
pushf
out
xchg
push
movsb
mov
push
xchg
js
int
adc
mov
inc
mov
stos
push
daa
jbe
add
jmp
movsb
shll
fistps
into
addl
sti
sub
xrelease
cmp
mov
adc
pop
or
lcall
adc
sbb
ss
xor
sarl
add
and
push
pop
cltd
jo
cwtl
rorl
pop
sti
push
jne
cmp
movsl
sub
in
das
shrb
mov
push
js
cli
adc
cmp
cwtl
in
dec
std
adc
xchg
fcmovne
outsl
mov
mov
sub
push
call
pop
rcll
xchg
out
lcall
lret
mov
push
out
add
fstpt
call
or
and
movsb
mov
xor
ret
xchg
test
mov
and
xlat
mov
and
lods
mov
shrl
xchg
or
nop
rorl
lods
mov
out
inc
in
sbb
es
or
xor
addr16
in
mov
sub
lods
adc
js
insl
jmp
dec
outsl
shll
inc
jp
ss
jne,pt
bound
lahf
pop
jbe
scas
mov
in
outsb
sub
xor
add
adc
or
shrb
sbb
fidivrs
or
adc
fwait
push
rclb
sbb
xor
int3
ret
dec
and
xlat
inc
push
mov
sahf
jbe
xor
sub
or
pop
sti
js
bound
mov
jo
loopne
lret
mov
sahf
pop
jno
sub
dec
push
push
inc
jbe
mov
je
pop
add
aas
lods
outsl
mov
data16
push
in
lahf
adc
push
adc
cs
pop
test
inc
rclb
xlat
mov
add
and
loope
ds
aad
pop
in
rolb
pushf
les
sub
dec
in
push
dec
nop
cmc
aaa
popl
jbe
adc
shl
mov
sbb
stos
jnp
jnp
insl
mov
inc
inc
fisttpl
daa
jno
fistpll
stc
push
cmp
sub
test
adc
mov
fcomps
fs
cmp
sub
into
lods
sub
mov
shrl
mov
mov
mov
or
xor
adc
fs
cld
push
xchg
sub
cltd
clc
jl
in
sub
xchg
fists
inc
fs
inc
xlat
cmpl
sub
int
dec
pop
into
adc
lret
mov
repnz
jp
cmpsl
mov
insl
ret
or
pop
call
push
in
arpl
lret
scas
test
mov
pushf
dec
aaa
xor
push
icebp
jl
xchg
and
push
fistpll
jnp
mov
and
dec
push
mov
shlb
aad
cli
mov
xor
adc
inc
ret
imulb
jne
inc
xor
push
jl
inc
rcl
aaa
repnz
js
repnz
dec
movswl
add
hlt
fmul
xor
repnz
aad
ss
scas
out
fistl
in
dec
mov
pop
pop
repz
push
xchg
lods
shlb
xchg
ss
or
add
xor
aad
and
leave
sbb
cmp
into
sub
cmp
fwait
out
rcrb
mov
push
mov
or
test
push
lods
mov
aaa
mov
push
dec
scas
fistl
pop
in
sbb
jmp
mov
mov
sub
fisubrs
pop
int3
movsb
sbb
mov
aam
or
out
repnz
or
sbb
repnz
or
repnz
and
and
out
daa
loope
cs
xchg
mov
adc
or
and
sub
lock
xor
sbb
rcl
fbstp
inc
or
lret
push
ljmp
sub
pop
inc
push
ss
fs
out
mov
jg
push
jns
inc
popf
pop
out
in
jmp
pop
fs
push
pop
and
jb
into
xlat
xchg
leave
jmp
std
data16
dec
jbe
xchg
test
sbb
into
mov
sub
add
loope
push
lds
sbb
xor
pop
push
pop
sub
mov
mov
das
push
out
stos
scas
fldl
sub
xchg
fidivs
cmc
xorl
dec
mov
neg
pop
pushf
pop
clc
add
mov
sbb
dec
sbb
outsl
dec
cs
push
jo
mov
adc
sub
sub
andb
lock
fiaddl
dec
jmp
ror
ficomps
xor
pop
inc
sbb
dec
pop
insl
cltd
adc
insl
sbb
push
dec
test
mov
loopne
or
or
pushf
stos
or
mov
mov
push
repnz
adc
mov
sbb
out
testl
mov
cmc
adc
pop
xor
fs
push
sbb
fwait
xor
jns
cmpsb
mov
les
getsec
sbb
out
jmp
xchg
jbe
aaa
add
popf
out
lahf
xchg
popa
fdivp
push
cmpsl
insb
dec
push
sbb
jnp
test
push
test
std
push
test
cmp
pop
jae
test
cmp
inc
insb
jno
push
mov
cltd
cmpsb
das
jb
loop
mov
pop
sub
arpl
mov
jae
xor
fadd
fnstsw
inc
adc
rclb
sti
xchg
je
cmp
adc
push
adc
push
out
pop
mov
mov
test
cmc
push
test
and
in
mov
pushf
lods
adcb
movsl
push
fistps
je
jge
sub
inc
lret
iret
push
fisubrs
xchg
sub
jb
xchg
sahf
dec
fcompl
ja
lcall
rorb
mov
das
xor
lea
sbb
data16
push
inc
push
lea
xchg
nop
nop
mov
dec
fiadds
adc
xlat
call
ret
das
decb
dec
push
fisubrs
jecxz
mov
test
repnz
and
fisubrl
inc
adc
dec
push
ret
jns
leave
push
leave
mov
push
mov
sti
std
in
mov
pop
add
in
add
pop
lret
sbb
mov
cmp
cli
arpl
fmull
outsl
and
mov
jg
mov
daa
sbb
push
sahf
add
mov
cmp
int3
outsb
jmp
aam
rorl
out
sub
and
sarl
ret
pop
push
mov
imul
jne
lahf
push
cli
add
cmp
rorb
mov
push
fidivrs
jle
sbb
mov
fdivr
cld
push
std
loope
loope
mov
sub
push
rol
lcall
ljmp
cmp
int3
scas
mov
cwtl
stos
pop
mov
and
mov
in
sbbl
popa
adc
xlat
repnz
xor
lods
data16
cld
addb
sub
mov
test
out
outsb
outsb
or
rorb
fst
loopne
jns
xor
mov
jo
mov
jl
inc
adc
cltd
add
jmp
repz
in
subl
loope
mov
mov
dec
orl
lea
mov
aaa
aas
adc
mul
sbb
das
xchg
inc
cmp
icebp
hlt
loope
push
mov
jle
xchg
leave
pop
lods
or
mov
out
xor
pop
cmc
in
out
pop
pusha
jns
xchg
aad
xchg
lret
jmp
lret
xlat
mov
movsl
test
jle
jge
movsl
fimuls
mov
cs
insb
es
push
imul
int
jno
imul
cmpsl
stos
pop
xchg
xchg
jns
inc
je
push
push
mov
xor
mov
mov
adc
sbb
sub
push
sahf
decl
sub
pushf
adc
mov
xor
test
mov
dec
and
scas
xchg
dec
fcompl
ss
pop
push
or
jmp
jge
pop
ret
outsl
andl
or
cmp
mov
test
call
out
mov
or
mov
repz
xor
lcall
test
ja
add
mov
ja
ljmp
mov
clts
xor
lock
hlt
inc
fidivs
jecxz
push
rorb
inc
cli
shll
loope
int
sub
cmc
fimuls
cmp
xor
scas
imul
je
lcall
scas
arpl
xor
dec
push
sub
mov
add
les
xlat
ss
mov
enter
push
pop
fprem
fwait
cltd
jo
or
mov
xor
lcall
add
pop
scas
jmp
lcall
or
addr16
aad
sahf
fnsave
popf
sbb
in
or
cmp
scas
inc
imul
or
cmpsb
xlat
out
pop
pop
jns
inc
gs
xchg
mov
scas
xchg
jle
xor
ss
add
xchg
in
movsl
xlat
movsl
mov
ljmp
sbb
sub
dec
call
stos
xchg
pandn
and
fcmovne
cmp
divl
lock
push
aas
aaa
and
ja
sti
cmp
mov
pop
insl
cmp
imul
add
in
aas
iret
xchg
imul
push
imul
js
push
fcomi
clc
loope
sbb
xchg
pop
push
jb
ret
notl
or
pop
push
adc
xor
push
mov
test
or
jle
push
mov
mov
push
mov
into
and
and
int
aaa
fadds
bnd
mov
test
ja
or
lock
jb
inc
push
push
les
ja
xchg
icebp
sbb
ret
js
cmpsl
lret
mov
ljmp
insl
ret
jl
mov
push
add
mov
xchg
insl
jne
cmp
lods
mov
or
push
shl
push
imul
mov
movsb
lret
sbb
fsubs
ja
out
insl
and
lahf
or
ja
xchg
xchg
ljmp
dec
or
out
test
int
sarl
bound
cli
sub
cs
pop
cli
cli
sub
mov
adc
dec
push
or
xor
mov
xlat
fsubr
mov
loope
mov
sub
loope
xchg
cs
outsl
pushf
and
pop
rclb
cld
popf
out
in
xchg
mov
mov
push
mov
dec
inc
or
pop
fildll
pop
ret
repz
inc
rolb
push
xor
fwait
adc
add
cli
jbe
xor
mov
jge
mov
xchg
cmp
mov
push
sahf
xchg
dec
ficomps
mov
xchg
sahf
es
mov
and
push
push
mov
mov
dec
stos
sbb
nop
xor
jns
loope
mov
mov
push
pushl
shll
and
sbb
fwait
xchg
xchg
jle
clc
arpl
pusha
inc
xor
repnz
lret
sbb
loopne
fst
pop
je
faddl
lods
add
js
mov
mov
pop
test
jmp
and
push
push
adc
xor
and
test
and
ds
bound
mov
sbb
ret
jbe
lret
mov
rcll
repnz
sbb
mov
pop
cld
out
ss
inc
int
or
subb
xchg
mov
push
mov
loopne
jo
xchg
xchg
cmp
lret
pop
xor
iret
jg
cmpsl
mov
scas
push
inc
stos
in
xchg
push
dec
mov
push
mul
pop
adc
out
and
movsl
mov
std
fwait
sbb
setg
fwait
mov
in
jnp
fcmovnbe
testl
in
pop
jmp
mov
shlb
cld
or
fsubrl
ljmp
shl
and
pop
mov
mov
xchg
test
fcmovnu
xchg
call
in
jo
jns
orl
mov
iret
push
jmp
in
out
shl
in
adc
inc
or
add
sub
fwait
xchg
and
fs
sti
pop
test
es
out
xchg
mov
pop
jae
das
leave
lcall
aad
mov
jne
sub
ret
mov
adc
and
cld
dec
ret
inc
fldl2t
fs
pop
ja
shlb
push
outsb
dec
ljmp
cmp
addr16
outsl
adc
subl
xor
test
movsb
adc
aad
notl
mov
pop
jnp
sbb
jge
push
int
pop
push
aas
fidivrl
fdivrl
aaa
cld
std
decb
push
push
out
mov
sahf
add
out
jge
and
jp
inc
mov
add
mov
mov
mov
cmp
inc
movsb
stc
jmp
icebp
pop
xlat
and
ljmp
dec
inc
lock
ret
jbe
lcall
jns
jo
or
aas
add
inc
push
dec
cld
daa
cmpsl
scas
outsb
shlb
push
mov
fstpt
inc
push
sbb
xchg
ja
sub
pop
js
add
cmpsb
xchg
inc
je
das
sub
push
leave
out
sbb
inc
xor
adc
mov
mov
inc
or
cmpsl
into
shll
icebp
clc
xlat
inc
nop
in
mov
jg
imul
pop
and
push
repz
xor
mov
xchg
fcompl
pop
test
jno
xor
js
xchg
pop
add
sahf
mov
mov
cmpsl
cs
cmp
push
sbbb
bnd
pop
jl
stos
test
sub
jecxz
pop
push
rorb
nop
and
stc
shlb
roll
fwait
loopne
test
xchg
popf
add
data16
adc
gs
fldt
xchg
mov
pop
jne
sub
and
fwait
in
mov
xchg
rclb
xchg
add
aaa
sbb
arpl
je
jb
jne
xor
enter
push
mov
shr
mov
test
mov
xor
ja
jp
lea
imul
lret
popf
xlat
jb
jns
pop
imul
cli
mov
mov
sub
mov
or
daa
test
xor
xlat
and
sub
inc
out
xchg
cs
add
xchg
ja
sbb
cmpsl
sbb
imul
pop
mov
mov
adc
fcmove
in
inc
inc
stc
jmp
nop
loop
rcl
aaa
outsb
mov
adc
xrelease
and
in
sbb
lea
mov
jl
lds
aas
ja
xor
imul
fildl
out
out
idivb
popa
and
inc
rolb
andb
std
add
xor
push
mov
outsb
loopne
add
mov
add
mov
test
jb
jl
imul
test
in
adc
mov
imul
sub
aaa
scas
jno
iret
add
xor
pop
add
repnz
xor
movsl
int3
sub
mov
push
mov
roll
movsb
daa
jle
js
xchg
xor
adc
cmp
sbb
aas
into
fsin
adc
outsb
push
xor
push
or
out
and
pop
push
out
fmuls
aad
or
adc
add
jno
cmp
sub
mov
imul
mov
jl
pop
or
ficompl
sbb
jb
adc
sbb
sbb
adc
xchg
add
xor
dec
xor
mov
ret
lods
pushf
fs
lea
punpcklbw
or
xlat
lahf
nop
fdivp
cmp
sub
adc
repnz
adc
je
inc
cmpb
rcll
stos
lods
sahf
sbb
leave
ds
mov
mov
sti
mov
inc
mov
mov
pop
std
push
mov
xchg
mov
adc
iret
insb
out
test
out
movsl
ret
push
xchg
mov
or
adc
movsb
aam
jno
ds
sahf
test
loopne
adc
pop
ds
cli
cmp
add
cmpsb
add
jne
add
mov
sub
and
or
ror
fistpl
jbe
inc
jmp
cwtl
push
loopne
ss
inc
cld
imul
jbe
fcmovnbe
mov
out
popa
jp
xor
sbb
notb
mov
mov
jnp
movl
mov
add
xor
sbb
aaa
push
sbb
adc
repnz
jo
inc
push
inc
fidivs
jb
xor
adc
in
or
mov
in
cltd
jbe
inc
push
jecxz
add
les
fcomip
pushw
popa
jb
push
adc
sub
jp
insl
push
inc
pusha
insl
outsl
mov
cmpsb
cmpsb
xor
fildll
or
pop
scas
data16
cmp
or
out
fsubrs
or
push
inc
mov
stc
hlt
mov
or
add
sbb
imul
cwtl
cs
ljmp
xchg
popa
test
pop
jno
out
test
sbb
leave
dec
add
push
dec
jle
push
mov
repnz
scas
or
fdivl
sbb
inc
lahf
adc
cwtl
push
inc
push
adc
lods
push
repnz
jnp
test
jge
sub
adc
faddl
into
mov
fwait
dec
sub
xor
ret
lahf
jmp
pop
dec
adc
xchg
xchg
test
cs
test
shrd
outsb
sub
xchg
mov
and
jno
loop
scas
adc
shll
pop
mov
mov
push
addr16
mov
mov
xchg
jle
call
or
iret
xor
dec
and
jnp
lcall
lret
push
sub
cmp
and
push
stos
jp
cli
lods
sub
stc
shll
fstl
pop
inc
inc
call
fistl
cmp
outsb
int3
out
out
xor
push
dec
es
scas
stos
and
mov
insl
je
add
je
cmp
jmp
imul
lret
mov
test
xchg
cltd
sbb
loop
dec
cmpsb
pop
mov
mov
push
in
mov
xchg
add
or
push
nop
inc
mov
cmpsl
test
jns
loope
push
sub
mov
cmpsl
xor
mov
scas
mov
cs
mov
sahf
sete
sub
scas
pop
push
mov
addr16
pop
jp
mov
dec
dec
jb
xor
arpl
cli
inc
cs
xor
mov
jbe
inc
imul
sub
gs
imulb
dec
jmp
fldenv
lods
jge
xchg
jns
ret
jmp
je
inc
dec
xchg
jg
into
add
aas
pop
cmpsb
mov
ss
fcmovbe
std
xchg
bound
push
add
pop
mov
imul
pop
cmp
and
in
mov
cmpsl
lock
sbbb
sti
ret
mov
iret
cmp
adc
leave
fld
jb
adc
aaa
lret
hlt
or
les
and
and
lret
call
cli
sbb
aas
ret
or
loopne
cmp
and
inc
and
iret
mov
or
mov
aam
dec
adc
jp
cmp
aam
jne
aaa
mov
mov
movsl
push
and
in
sti
fsub
mov
dec
inc
sbb
push
jae
adc
pop
jle
pop
cmc
lea
fdivrs
daa
sbb
add
sub
sbb
mov
push
shll
push
add
cs
sbb
aaa
lods
or
xor
jns
fistl
mov
lea
es
jg
dec
or
cli
jno
mov
hlt
inc
stos
jge
shl
sub
into
rorl
xor
jmp
adc
shll
arpl
push
add
adc
mov
outsb
mov
sub
fdivrl
pop
les
xlat
imul
popa
jg
sub
add
andb
sbb
sbb
ret
aaa
lods
xor
fiadds
pop
push
xchg
mov
or
lock
push
pop
xor
adc
mov
jnp
sbb
andb
add
pop
jae
dec
pop
test
sub
js
sarb
fidivs
ret
sbb
dec
jo
push
into
or
sbb
mov
es
or
inc
cmp
scas
pop
mov
mov
out
xchg
andl
dec
jp
or
imul
fidivl
js
into
lret
jmp
xor
mov
xchg
jmp
jns
jnp
sbbb
ja
arpl
push
xchg
divb
cmp
test
aam
xchg
jno
or
lea
sub
sbb
imul
aad
int3
popa
mov
fldl
test
mov
fimuls
das
test
in
sub
sub
push
sub
push
inc
add
dec
xor
not
pop
in
jp
pop
mov
dec
test
pop
cmp
nop
jmp
int
push
popf
cmp
and
scas
pop
sbb
add
add
movsb
add
popa
sbb
lds
aas
lock
dec
cltd
bound
pushl
ficoml
pop
imul
fldenv
dec
iret
cmp
repnz
sub
aaa
test
lret
insb
sbb
std
stc
bound
jmp
push
test
ja,pn
inc
les
inc
outsb
push
sahf
and
addr16
lds
aas
push
sbb
fists
sub
je
in
fistpl
push
lods
icebp
mov
test
call
xchg
sbb
push
cmp
adc
sbb
push
dec
xchg
mov
jle
mov
xor
fidivs
test
push
jb
mov
das
dec
inc
sbb
ret
mov
cmp
dec
jb
inc
push
jmp
xor
scas
cld
add
jmp
leave
pop
daa
pop
lods
lock
enter
test
ret
cmp
dec
outsl
cltd
scas
pop
lods
in
popf
dec
les
adc
sbb
push
mov
ds
popa
lahf
addb
jnp
jns
dec
push
dec
lea
cmc
dec
fcmovnb
lock
jno
sub
daa
dec
or
xchg
and
call
idiv
dec
aam
cmp
cwtl
mov
popf
push
lea
movb
jno
push
imul
leave
adc
sbb
movsl
adc
lea
pop
push
stos
dec
mov
jg
inc
cli
cmp
test
dec
jl
jno
lahf
sbb
cld
pop
fmull
mov
lods
or
pushw
out
adc
sbb
or
cmp
flds
mov
call
jnp
fs
or
adc
and
cltd
bound
es
jecxz
jecxz
sub
cli
sub
dec
imulb
sub
je
or
lahf
into
or
and
icebp
cli
cltd
inc
or
int
and
cmp
inc
jnp
fs
cmpsb
mov
xchg
shlb
dec
mov
inc
fsts
mov
ret
adc
adc
mov
data16
sar
scas
ja
shll
add
jge
and
scas
roll
lcall
jge
cwtl
stos
pop
adc
mov
mov
movsl
xchg
std
inc
shrb
cmpsb
mov
out
dec
add
add
idivl
sbb
insb
mov
rcr
je
cmp
xchg
cmp
inc
cmc
ss
clc
fldcw
dec
insb
jnp
and
sbb
mov
ret
inc
inc
xorb
push
xor
jns
stc
out
scas
lret
xor
add
cli
out
ficompl
neg
mov
mov
jg
ja
xor
xor
test
push
aas
shll
mov
and
iret
add
sub
jnp
scas
stos
push
jmp
push
ljmp
sbb
test
jae
ret
jecxz
lds
mov
movsl
xor
xor
sahf
cmpsl
shll
sbbl
jno
scas
and
ds
jmp
in
push
and
nop
clc
jp
inc
sub
xor
lods
cwtl
mov
outsl
add
fmuls
mov
sub
pop
sub
bound
push
fnstenv
ds
int
pop
jmp
jo
fildl
mov
dec
repnz
repz
into
std
mov
or
jmp
push
outsb
jns
pop
inc
loope
sahf
std
lret
jge
aaa
out
addb
and
rorb
stc
aas
mov
pop
pop
add
mov
dec
xor
inc
popa
out
xor
xchg
jo
xchg
fisttpl
jl
or
cmc
mov
leave
jle
fisubrl
xor
scas
fmull
sub
in
stos
dec
pusha
xchg
imul
and
cmp
cld
sbb
movsl
dec
pop
lock
out
jne
cmp
mov
mov
mov
jmp
sub
xchg
outsb
loop
or
mov
cltd
pusha
push
ret
xchg
aas
cmp
mov
mov
xor
testb
xor
cmp
jmp
or
std
je
mov
add
jp
mov
dec
inc
ret
jbe
inc
and
in
mov
repnz
imul
leave
mov
cmp
or
shl
and
cmpsb
xchg
jle
jg
or
aad
jp
fcmovne
jmp
shll
push
fs
pop
fistps
clc
pop
pop
mov
mov
das
cmpsl
sti
std
sub
loope
addr16
xchg
cmp
fidivs
into
aam
adc
mov
push
popa
aaa
push
js
dec
adc
xor
push
data16
loopne
cld
mov
xchg
cmpsl
rcrb
cltd
pop
out
adc
mov
push
je
adc
jecxz
incb
mov
ja
gs
add
cmp
pop
loope
into
fimuls
clc
sub
and
add
jne
pushf
dec
inc
xor
pop
in
sub
and
push
mov
adc
sbb
mov
dec
fcomi
outsl
jmp
cld
outsb
and
inc
icebp
stc
sarb
imul
pop
insl
nop
pop
pop
pop
test
test
sti
fld
std
lods
lret
in
out
out
mov
loope
dec
sub
push
notb
inc
icebp
sub
or
pop
pop
ss
lret
push
jne
adc
fsubrs
daa
pop
inc
ds
lds
stos
loop
jb
and
and
dec
mov
insl
lret
stos
inc
xor
xchg
leave
inc
push
and
or
cmp
or
scas
and
mov
scas
into
aas
push
jae
cmc
insb
lret
outsl
in
sub
outsl
ret
cmp
cld
cmc
cltd
push
ret
aaa
pop
push
jle
insl
loope
mov
xor
aas
cmp
dec
aaa
push
in
mov
adc
xchg
icebp
out
push
dec
ficoms
scas
sbb
xor
push
cmp
test
aas
xor
adc
fs
mulb
lea
scas
out
pop
aaa
scas
fnstcw
in
mov
push
scas
fnsave
add
pop
stos
fildl
push
xchg
mov
mull
jo
push
aad
lret
data16
in
movsl
lahf
int3
push
gs
and
lods
jge
gs
scas
enter
insb
pop
enter
ljmp
add
and
testb
leave
movsb
xchg
sbb
mov
mov
xor
je
and
and
jno
dec
iret
cld
popf
sub
jge
push
jg
sub
push
dec
rcrl
cmp
es
sbb
lods
xor
hlt
mov
testl
aaa
push
loope
inc
jle,pn
adc
add
mov
cld
shrb
je
fbstp
repz
repnz
pop
mov
pop
jle
lods
inc
pop
sub
mov
push
loop
cmp
xchg
push
cmpsl
pop
lea
inc
jno
hlt
mov
jns
sub
adc
bsf
lock
jb
outsb
popa
movsl
js
imul
cli
push
sub
out
insl
xor
int3
test
and
jns
outsl
out
mov
cwtl
mov
mov
loop
fs
jne
test
add
sti
xor
mov
push
loope
lret
and
cmpsb
cmp
shll
adc
aas
cmp
das
add
sub
cmpsb
ret
cmp
nop
or
xchg
push
jecxz
aaa
filds
pusha
sub
jnp
jno
dec
test
orb
pop
jns
es
sub
mov
insl
xchg
lods
jecxz
push
add
fwait
mov
push
push
push
nop
xchg
inc
loop
daa
or
icebp
daa
in
push
leave
inc
mov
out
sbb
shlb
mov
sbb
or
jne
bound
mov
xchg
adc
sub
loopne
xor
in
fisubrs
scas
inc
dec
pop
jnp
dec
shrb
xor
cli
xchg
push
or
pop
add
andl
mov
xchg
jne
cmp
jl
sti
pusha
mov
popa
sahf
mov
lods
int
pop
shrb
iret
stos
mov
jno
loop
jne
and
stos
shrb
pop
xchg
jo
mov
imul
fisttpl
inc
pop
dec
in
cs
dec
fisubrs
jae
sub
fmul
int3
pop
fcoml
or
mov
dec
clc
fwait
mov
dec
inc
out
lods
clc
and
pushf
dec
mov
loopne
xchg
push
lods
stos
aam
ja
cmp
mov
in
jo
xchg
nop
inc
cld
movsb
outsb
outsb
pop
xchg
je
jns
ficomps
ds
xor
mov
sahf
add
or
xor
or
data16
pop
mov
xor
mov
add
cmp
ret
arpl
outsl
stos
jp
pop
subl
subl
ja
es
xor
in
fbstp
xchg
xchg
and
mov
mov
insl
shrb
jo
repz
fstpt
in
push
jmp
ljmp
out
xchg
or
jb
imul
xchg
loope
pop
sar
sub
and
cmp
loop
testb
xor
ss
sbb
idivl
jno
jmp
push
push
push
pop
outsb
xor
pop
dec
outsl
mov
insb
xchg
sti
xor
or
sbb
loopne
mov
int
push
dec
push
jnp
xlat
lods
sbb
es
cli
movsl
or
xor
shrl
in
mov
ss
sub
pushf
jle
stos
mov
dec
hlt
cwtl
shll
call
jns
out
repz
fimull
adc
xor
shrb
enter
in
fsubl
test
int
jle
cmp
aaa
popf
xchg
ror
les
addb
inc
popl
arpl
out
xorl
ret
mov
xchg
repnz
and
cmc
jbe
loopne
sbb
lahf
add
sub
int
sub
sbb
and
mov
sar
into
push
push
adc
stos
xor
jge
adc
xor
shl
ret
sbb
mov
inc
mov
sub
sub
js
in
int3
lea
mov
aas
mov
mov
fwait
ret
inc
lcall
xor
jg
xlat
lods
fcmove
xchg
outsb
mov
sbb
aaa
les
pop
in
or
movsl
xorl
cmove
xchg
push
inc
push
xchg
adc
out
fxam
adc
or
pop
push
stos
aaa
or
and
xor
mov
outsb
xchg
inc
clc
cmpsl
ja
out
xchg
mov
popa
in
mov
sbb
insl
sbb
mov
cmp
dec
pop
mov
repz
jle
in
lret
daa
dec
xor
sub
in
jmp
sbb
push
pushf
pop
pop
iret
pop
mov
mov
push
jnp
call
lods
jne
inc
xlat
pop
xor
jge
push
imul
fisttpll
lods
loop
xchg
in
jno
loope
inc
xchg
jge
outsb
adc
aaa
jbe
jns
mov
sbb
pop
sbb
adc
sub
cmp
xchg
pop
insl
push
push
scas
mov
jp
mov
fucom
and
jnp
pop
cmpl
fcompl
xchg
loop
orb
push
lahf
cli
sub
mov
adc
stos
and
daa
cmp
pop
arpl
xor
inc
test
ficomps
sbb
je
xor
pop
in
bound
mov
lret
jbe
popa
repnz
bound
pusha
pop
ljmp
orb
loopne
jae
ljmp
push
shrl
add
sub
pusha
jae
xchg
fdivs
dec
lods
and
adc
pop
cmp
rolb
mov
jge
ret
xchg
cli
shlb
insb
mov
or
lret
sbb
jb
dec
dec
mov
insl
pop
loope
jp
imul
and
xchg
dec
jnp
dec
andl
cmp
outsb
into
adc
bt
xchg
xchg
mov
mov
xor
cmp
aad
cld
lea
movsl
or
mov
nop
xor
mov
mov
adc
jge
addl
enter
in
loopne
xor
iret
push
in
repnz
imul
popa
mov
inc
repz
pop
pop
lret
adc
les
jmp
mov
in
pop
add
xchg
push
mov
pop
test
je
xchg
bound
lods
aad
push
test
aaa
addb
pop
imul
out
xor
movsb
push
leave
fwait
mov
lretw
iret
pop
inc
jmp
fstpl
pop
xchg
outsb
pop
mov
andl
insl
mov
out
dec
out
mov
movsb
lahf
push
mov
inc
mov
cli
mov
push
cld
aad
ficompl
xor
or
ss
roll
or
call
and
pop
xor
cltd
test
mov
and
ja
push
fisubrs
add
add
hlt
dec
xor
arpl
sbb
int
or
mov
inc
movsl
push
add
dec
jbe
xor
adcl
pop
or
cli
cmpsl
adc
sbb
cmpsb
cs
jp
pop
std
mov
mov
and
mov
fnsave
imul
pushf
sbb
cli
lock
ljmp
and
imul
push
in
jp
hlt
mov
int3
cmpsl
lds
fsubl
sbb
std
jge
mov
je
lods
pop
repnz
mov
lea
ljmp
pop
xor
adc
cmpsl
fldl
int3
jge
mov
pusha
pop
in
inc
sub
jns
inc
mov
jle,pn
pop
cli
cli
push
pop
pop
bound
adc
rolb
imul
shrl
jbe
dec
inc
insl
xchg
imul
push
pop
dec
push
sbb
imul
mov
jge
cmpsl
dec
jecxz
das
adc
imul
and
push
fstpl
sub
ret
stos
loopne
inc
imul
xchg
jnp
adcb
call
ljmp
rcr
mov
push
mov
adc
scas
sbb
fstpl
pushf
mov
xchg
shrb
mov
repnz
enter
sub
or
call
and
nop
push
or
sub
mov
inc
nop
ja
lods
andl
mov
mov
mov
movsl
fs
js
sub
mov
outsb
jns
push
mov
jge
mov
push
inc
les
bound
inc
fwait
outsb
or
jb
push
push
mov
jecxz
scas
out
adcb
fwait
test
inc
inc
gs
bound
loop
mov
sbb
test
jns
inc
sbb
and
inc
sbb
repz
fsubs
jbe
shll
in
and
shl
xchg
or
pop
movsl
pop
fcompl
fsubl
add
jge
push
cmc
daa
rcrl
cmp
stos
mov
cmp
test
push
rol
out
mov
dec
mov
mov
adc
ja
lods
xchg
sub
outsl
dec
mov
aaa
loop
nop
mov
pushf
pop
iret
xchg
ss
mov
mov
outsl
aad
aad
push
and
or
shlb
std
or
loopne
psubb
jb
sub
sub
dec
jmp
push
ss
jl
ja
cwtl
sub
mov
jp
add
imul
shlb
pop
jns
push
insb
loop
sbb
bnd
in
pop
pop
gs
arpl
push
jne
push
add
xchg
insb
mov
jecxz
sub
ficoml
test
or
ret
loope
push
bnd
pop
dec
xor
loopne
call
xchg
push
cwtl
xor
xchg
rol
lcall
pop
loope
out
clc
flds
jno
dec
and
popf
xor
jne
cmp
mov
dec
fcoms
ret
mov
aas
dec
je
cmp
pop
jmp
xchg
je
sub
outsb
lahf
xor
jne
add
sbbl
inc
mov
push
ret
inc
cmpb
cli
jbe
pop
or
sub
sbb
ss
add
cltd
xor
mov
popf
or
cmp
stos
push
or
sbb
lret
jmp
xor
sub
jae
pushf
jbe
fdiv
ljmp
aaa
or
push
mov
and
mov
movsl
scas
fstps
ret
outsb
in
add
stos
in
xchg
sbb
dec
inc
and
mov
cmp
mov
jp
rcrl
mov
xchg
clc
lods
outsl
frstor
cmp
dec
sti
in
fadd
fs
or
sbb
inc
dec
jp
cltd
mov
jbe
sahf
flds
push
clc
icebp
les
loop
imul
test
xchg
imul
jbe
fstl
inc
sub
aad
adc
sbb
sarl
ds
pop
sbb
or
jge
mov
inc
or
mov
mov
fidivs
jle
idivl
sub
out
mov
cltd
push
xor
popa
mov
fdiv
iret
aas
pop
gs
xor
cmpsb
inc
push
pop
lock
kaddb
aaa
cmpsb
fstpt
sub
push
aaa
inc
movsl
sbb
lret
mov
test
mov
mov
mov
scas
sar
jne
loopne
xchg
andl
mov
lea
fists
cli
mov
popf
xlat
pusha
ficompl
mov
les
sub
in
or
xchg
in
sub
inc
ds
push
pop
push
add
mov
add
daa
xorb
outsb
jo
adc
or
add
dec
sbb
mov
inc
mov
add
rolb
push
dec
incl
rep
lock
add
ds
sbb
inc
push
int3
cmp
cltd
push
sbb
sub
mov
jecxz
orl
je
shl
inc
cli
cmpb
pop
int
aas
add
jne
rclb
pop
nopl
pop
imul
or
call
cmp
jp
mov
xor
ffree
push
xchg
movsl
xchg
cmp
sbb
push
fs
jae
and
subl
mov
cltd
je
lret
xchg
sarl
xchg
std
or
inc
cmp
and
jecxz
into
es
dec
scas
fdivr
inc
adc
js
mov
and
fidivrs
dec
mov
addb
cmpsl
mov
cmp
pop
sbb
es
xor
sub
dec
xor
sub
outsl
pusha
mov
xor
in
sub
mov
cmp
push
stos
mov
and
push
test
cmp
and
call
les
pusha
fucom
mov
aad
xlat
pop
popa
inc
scas
loopne
adc
cmp
ds
pop
int
xchg
scas
leave
mov
or
movsl
xor
xchg
xchg
adc
ds
leave
mov
or
negb
data16
push
push
or
jg
pop
test
scas
xlat
movsb
mov
fbstp
dec
push
push
jecxz
push
jmp
jns
fildll
popf
mov
xchg
or
jecxz
scas
xchg
xchg
insl
jae
pop
cmp
jge
imul
mov
sbb
in
mov
ds
sbb
mov
xlat
fdivl
lahf
mov
jge
xor
mov
cs
mov
dec
xchg
jle
or
addr16
cmc
inc
rolb
scas
cmc
xor
pusha
aas
jle
and
jmp
xchg
or
repz
and
lahf
addr16
push
mov
mov
adc
add
mov
dec
or
cs
or
mov
jae
inc
dec
sahf
and
cmp
icebp
cmp
ffreep
mov
pop
jecxz
bound
and
jecxz
lock
lret
js
and
xor
enter
inc
int3
shlb
into
fsub
cli
stc
test
sti
js
mov
je
adc
dec
daa
insb
add
mov
mov
mov
adc
or
leave
dec
insl
jno
cltd
xor
sahf
push
ds
mov
lds
dec
loop
mov
shll
xchg
add
ds
dec
mov
ret
pop
icebp
popf
mov
cmp
mov
adc
enter
adc
push
fxch
test
xchg
call
and
xlat
push
mull
ret
xchg
out
xlat
outsl
sbb
cmp
jmp
mov
sbb
testb
inc
pop
sub
adc
push
lods
adc
or
cs
mov
xchg
pop
jbe
dec
inc
imul
mov
adc
loop
ss
test
cmp
push
mov
jns
lds
cs
adc
add
mov
sti
and
ss
and
lret
pop
lea
dec
mov
js
push
or
ss
inc
out
pop
in
ficoms
sbb
fisubrl
lahf
xor
sub
add
daa
pop
push
mov
dec
or
mov
flds
push
loope
out
push
jns
lds
scas
push
test
mov
test
in
sub
lcall
aaa
sarl
loope
int3
lret
gs
jno
hlt
stos
mov
incl
in
lea
pushf
cwtl
pop
pushf
inc
dec
cmp
jecxz
xchg
and
scas
adc
int3
fisubl
cmpsb
cli
mov
push
cli
dec
lods
mov
push
jp
js
bound
addr16
cmp
push
mov
jmp
add
ret
ret
clc
mov
clc
push
pop
std
xor
pushf
jbe
fildl
jo
push
bound
lret
xchg
xor
jne
dec
xchg
cmp
xor
test
adc
adc
ret
fcmove
or
outsb
in
cwtl
cmp
xor
jbe
sub
je
xchg
cmp
xchg
lcall
out
out
ficomps
les
aam
cmp
stos
mov
push
mov
mov
jecxz
jbe
js
data16
imulb
movsl
inc
aam
shll
and
test
lods
jnp
mov
mov
clc
imul
je
std
sbb
popl
movsb
xchg
mov
xlat
je
ret
in
insl
inc
lret
rcll
mov
sub
cmp
sahf
pop
and
dec
int
rorl
stos
inc
sub
mov
test
in
dec
push
call
dec
repz
mov
mov
mov
and
testl
in
inc
mov
addr16
icebp
add
xor
xor
sbb
push
cld
jne
dec
dec
pop
or
enter
lock
int
dec
xchg
js
xor
shlb
sbb
cltd
or
push
stc
mov
pop
pop
sahf
xor
cmc
sbb
or
mov
jl
cmp
pop
and
inc
add
pop
ficoml
xchg
in
testl
jmp
xchg
xchg
adc
pop
and
push
cmp
mov
adc
dec
hlt
sar
les
dec
orb
add
insb
push
repz
inc
stos
pusha
mov
xor
jno
xor
jae
aam
jae
pop
int
push
je
xchg
xchg
mov
jo
shll
push
push
push
fbstp
les
jb
int3
dec
lcall
sahf
add
in
mov
xor
dec
in
cld
sub
and
mov
sub
jae
mov
jg
dec
jge
sbb
mov
inc
sbb
push
popa
xor
ja
xor
fstps
in
stos
mov
xor
call
or
jge
test
push
andl
push
sub
mov
push
hlt
push
adc
hlt
ljmp
cmp
inc
jle
dec
in
xor
movsb
mov
outsb
gs
xchg
cwtl
xchg
sub
and
sti
sub
ljmp
sbb
adc
inc
mov
lahf
enter
fisttps
xorl
shl
leave
icebp
or
pop
pop
lods
in
cli
and
ret
es
or
pop
push
pcmpgtw
dec
jmp
or
je
jle
sub
subl
nop
js
mov
fidivrl
pop
lcall
dec
inc
push
cmc
sbb
std
lods
sub
gs
movsb
fucomp
les
ljmp
adc
arpl
call
mov
inc
adc
add
pop
add
das
lahf
xchg
out
cltd
sbb
mov
fdivr
xchg
data16
das
push
or
xchg
inc
pop
sub
in
mov
jecxz
std
pop
xor
mov
mov
sub
add
movsl
in
sbb
or
xor
aad
outsl
imul
dec
mov
insl
bound
inc
xchg
jl
push
xor
and
sahf
lds
loopne
lods
mov
cmp
xchg
and
mov
inc
cli
fistps
ja
push
fwait
sub
push
or
inc
pop
scas
xchg
push
xlat
push
mov
or
repz
mov
push
popf
sub
loopne
imul
or
inc
jno
sbb
push
int3
test
xchg
jl
and
jo
loope
xchg
jne
fnstcw
dec
addr16
test
push
xor
mov
nop
push
adc
xchg
xchg
pop
pop
xchg
dec
fmull
loope
adc
dec
addr16
and
arpl
lods
inc
cmc
jnp
stos
shlb
out
std
xchg
loopne,pn
mov
sbb
iret
loope
adc
in
mov
mov
scas
fstl
push
mov
test
lods
aam
ret
adc
lret
pop
lahf
into
xchg
test
insb
mov
ja
cli
jecxz
cmp
sub
jno
stc
or
xor
sbb
dec
add
clc
mov
jl
mov
sahf
es
lcall
pop
jns,pt
decl
js
push
cmp
mov
jecxz
stos
lahf
dec
pusha
or
push
pusha
in
mov
inc
mov
dec
or
into
inc
mov
inc
and
sbb
pop
ffreep
cmp
int
lret
mov
daa
mov
mov
or
xor
into
xchg
jns
jo
mov
loope
or
enter
fcoms
mov
in
sbb
movsb
xor
adc
mov
and
mov
enter
stc
jnp
mov
jmp
clc
mov
cmp
pop
mov
int3
push
nop
inc
test
jmp
dec
adc
out
jb
fists
adc
xor
les
sub
fidivrs
outsb
xor
rcrl
cmp
push
aas
movsb
xor
xor
push
enter
push
push
outsl
ds
stos
ret
nop
inc
mov
mov
sbb
push
jb
mov
sbb
punpckhbw
insl
test
addr16
cmp
dec
or
movsb
repnz
sbb
adc
sub
movsb
push
dec
nop
add
add
pop
xor
repnz
jge
add
decl
popf
stos
hlt
into
shrb
int3
dec
push
jle
out
imul
fsubs
add
inc
cmp
daa
or
sbb
int3
fnstenv
xor
rol
testl
fsubl
pop
pop
daa
jge
jl
test
add
add
and
and
or
mov
push
icebp
stos
jle
cld
mov
mov
pop
dec
movsb
jp
jne
sub
stc
push
cmpl
mov
xchg
and
movl
jg
xchg
inc
into
stc
adc
rcll
jecxz
or
xor
iret
jae
loopne
das
push
xchg
xchg
out
test
addl
or
jbe
shl
pop
cmpsb
dec
cltd
xchg
sub
push
cmp
pop
scas
sbb
aas
loopne
cli
or
sti
in
sub
jnp
cld
adc
lds
mov
cmc
pusha
pop
out
xchg
roll
mov
insl
pop
add
into
movsl
sub
mov
shrb
xchg
xchg
mov
iret
movsl
out
mov
test
mov
mov
and
mov
sub
add
in
imul
cmp
cltd
loopne
loop
and
inc
sub
fistps
push
scas
jb
and
repnz
fwait
adc
adc
pop
inc
mov
outsl
ret
test
cs
and
cmp
pop
pushf
xchg
and
pop
fnstenv
jl
jbe
push
jae
rcll
sbb
cmc
sarl
out
xchg
icebp
and
push
jecxz
push
cld
rorl
push
xchg
loopne
fmull
aam
xor
shll
jl
cs
inc
rcr
jle
xchg
stc
jns
push
inc
scas
and
lret
sub
lock
cmp
dec
pushf
jle
scas
xlat
pop
repnz
pop
push
int
xor
pop
cmpsl
flds
lock
xor
fistps
dec
shl
and
scas
iret
stc
mov
aad
mov
xchg
mov
loopne
or
adc
cli
or
xor
mov
nop
push
cs
cmpl
adc
or
xlat
lret
dec
cmp
add
add
leave
mov
jns
shll
add
mov
pop
push
xchg
ja
adc
loope
cltd
ja
in
cmp
aas
xor
dec
out
les
jb
and
jae
clc
gs
push
dec
and
mov
lret
mov
jnp
cltd
popf
loope
xor
pop
dec
lret
mov
cmp
inc
dec
mov
std
sub
clc
ja
decl
jg
dec
mov
mov
jecxz
in
cli
adc
shrl
movsl
mov
enter
test
sbb
sarl
out
mov
inc
rcll
popf
nop
push
loopne
repz
cltd
clc
std
shll
movsb
in
call
ret
or
mov
or
mov
sub
pushf
and
aas
sahf
pop
xor
lret
push
out
daa
sub
call
ljmp
add
cmp
sbb
mov
cli
inc
xor
test
out
lea
jmp
mov
sbb
fsub
mov
mov
js
pop
stos
pop
or
mov
repz
xchg
and
mov
jp
stos
sbb
lahf
dec
cmp
jp
fisubs
out
xchg
aad
scas
and
mov
pop
insl
inc
cli
mov
jbe
scas
inc
icebp
xor
push
fucomp
cltd
adc
outsl
adc
inc
stc
jle
xchg
mov
pop
and
jno
js
jl
dec
daa
rcrl
xor
xor
psubsb
jo
inc
and
mov
clc
inc
into
push
add
aam
test
in
jbe
add
mov
repnz
xchg
lea
rcl
lods
dec
icebp
sub
repz
and
hlt
pop
mov
gs
mov
cmc
stos
lret
pop
je
fcoml
loope
sarl
adc
inc
int
xchg
int
and
into
fisubs
cmp
jb
movsl
add
cmpsb
out
fstpl
stos
sbb
mov
in
xor
sbb
aaa
jbe
push
enter
out
add
push
or
enter
imul
aas
xchg
in
outsl
repnz
popf
mov
dec
pop
dec
jns
shr
mov
dec
pop
push
sbb
pop
repz
mov
lahf
fnsave
hlt
ret
mov
shll
iret
in
xor
jbe
jge
ds
jb
jns,pt
push
dec
movsl
cmp
scas
mov
mov
and
mov
les
inc
pushf
mov
mov
es
cmpsb
orl
sub
out
and
sahf
ja
gs
or
daa
or
stos
insb
cwtl
sub
lea
test
les
sbb
add
jg
or
adc
xchg
sub
xchg
in
inc
out
add
xlat
js
push
push
jno
inc
movsl
arpl
das
fcompl
pop
mov
jne
push
push
jne
shl
jge
lret
cmp
cmp
scas
pushfw
mov
loopne
ja
or
inc
aam
loope
movsl
cmp
cmc
mov
inc
lods
pop
and
jnp
jle
sbb
jge
add
ficoms
mov
inc
loopne
addr16
xlat
sbb
inc
sti
sbb
test
pop
testl
popa
xchg
pop
pop
sub
xor
nop
push
mov
xor
sahf
jo
mov
les
dec
push
mov
pop
in
sbb
in
mov
xor
and
stos
adc
inc
jb
andl
xchg
inc
xor
out
dec
shufps
cs
rcl
aaa
cmpsb
adc
jmp
jae
fstl
jo
and
dec
out
mov
sarb
push
push
inc
aad
mov
ret
loop
jp
mov
insb
aam
or
push
dec
sbb
xchg
jne
xchg
cmpsb
pop
in
xor
in
inc
jg
mov
ret
inc
mov
fistpll
in
xor
fidivl
mov
das
or
mov
mov
imul
or
fsubr
jne
jns
or
icebp
test
xor
out
add
movsl
sub
subb
xlat
ljmp
loop,pt
aaa
mov
repnz
mov
inc
mov
repz
dec
xchg
cmpsl
or
push
jno
shrb
lret
cmp
or
adc
rorb
mov
into
sub
sahf
fs
call
add
sbb
push
imull
test
lcall
ret
jb
push
lret
adc
jno
out
scas
and
sub
jb
mov
jecxz
xchg
pop
mov
fldenv
test
mov
dec
xchg
push
mov
loopne
bound
xchg
mov
jle
adc
cmp
push
mov
xor
popa
adc
fdivrp
adc
sahf
arpl
jecxz
lret
dec
pop
and
icebp
sbb
sbb
dec
pop
stc
insb
pushf
lahf
mov
pusha
test
fistpl
ja
sahf
sub
aad
imul
ret
push
sub
lret
push
adc
jae
stos
stos
outsb
cli
inc
cmc
ja
out
jbe
jp
stc
jno
mov
sbb
lea
ret
mov
sub
scas
push
cltd
in
popa
scas
adc
mov
iret
rorl
notb
and
ja
aam
pop
subl
dec
jno
je
mov
jle
pusha
pop
sti
outsb
jg
lret
mov
xchg
loopne
iret
and
cmpsl
stc
push
sbb
mov
ja
pop
pop
lahf
cltd
or
arpl
cmp
mov
mov
lret
arpl
imul
pop
repz
sarl
adc
xchg
sub
idivl
and
mov
scas
jmp
inc
inc
call
es
xchg
adc
xlat
push
cmpsb
outsl
inc
stos
mov
xor
imul
sbb
fwait
jns
sub
shrl
or
out
mov
loope
cmp
xchg
in
shl
adc
mov
jge
repz
and
pusha
test
dec
stos
xlat
sbb
shlb
shlb
outsl
dec
dec
add
mov
fsubrs
and
loop
pop
push
inc
xor
cmp
sbb
jnp,pt
pop
xor
jg
or
or
add
and
lock
cmp
repnz
out
xchg
push
mov
adc
or
jb
xchg
shl
mov
pop
jae
out
pop
mov
sub
cwtl
decb
fisttpl
mov
into
std
repnz
pop
mov
popf
jg
adc
std
stos
movsb
daa
setge
lcall
clc
fcomip
xor
insb
cmp
in
adc
data16
push
jae
mov
imul
push
int3
add
add
jno
js
in
je
cs
jmp
bound
mov
mov
cmp
jne
enter
jns
cmp
lcall
repz
rol
sahf
push
ss
lds
add
jno
insl
sbb
dec
fidivrl
jle
mov
dec
jbe
xor
mov
mov
jge
insl
jae
repz
nop
and
add
sub
lds
adc
enter
jmp
push
fcompl
push
imul
dec
xorl
jns
pop
or
es
adcb
in
pop
and
repnz
paddusw
nop
int
and
es
inc
mov
jae
mov
bound
cwtl
loop
push
fcmovb
stos
add
mov
mov
jnp
add
mov
inc
jbe
lds
push
sahf
sbb
pop
ret
ret
pusha
push
cmp
popa
push
stos
loope
enter
cmp
inc
mov
xchg
ss
mov
dec
test
inc
dec
in
insb
int
imul
addr16
inc
mov
jmp
mov
sbb
xor
int
dec
xchg
adc
and
xchg
sbb
mov
mov
call
pop
stos
jp
jle
arpl
lods
fnsave
testb
mov
dec
inc
mov
adc
fbstp
hlt
repz
sub
out
mov
imul
mov
push
dec
dec
lock
add
out
push
insb
cltd
mov
cli
sbb
bound
fmul
outsb
xor
xor
xchg
pop
sarl
movsb
jns
add
aaa
mov
xor
or
jg
sub
int
and
pushf
sarl
adc
cmpsb
stc
fnstenv
sbb
sahf
cmpsb
jnp
jbe
jge
loop
xor
cmpsb
sub
fcomp
mov
mov
xchg
in
xchg
adc
je
pop
jmp
daa
mov
jmp
xchg
jle
push
pop
pop
sahf
adc
cld
sub
adc
out
and
xchg
addr16
xor
js
xor
push
call
in
das
ljmp
repnz
test
ficomps
bound
hlt
add
js
std
ja
cmc
popf
add
cmc
rolb
xor
cltd
out
int
add
imul
outsl
shlb
je
jne
or
cmp
jecxz
push
mov
or
jnp
ljmp
mov
fsubl
adc
mov
call
loop
movb
stos
data16
mov
adcb
dec
stos
cmp
test
mov
inc
shll
subl
mov
popa
sub
jns
stos
or
addr16
mov
das
mov
push
ss
sbb
std
lea
imul
adc
mov
jne
insl
mov
scas
sahf
movsl
sub
mov
test
dec
jle
scas
mov
bound
das
insb
in
clc
dec
jecxz
xchg
and
dec
rclb
rol
clc
inc
inc
cli
movsb
inc
push
push
inc
fisubrl
xchg
clc
jb
or
test
leave
xchg
jo
scas
jp
out
xor
and
fucomp
shl
cmc
call
add
mov
jmp
pop
push
cli
decl
push
and
push
sbb
and
call
xchg
pop
test
push
push
adc
xchg
es
outsb
xchg
xor
xchg
call
xor
pop
cmp
mov
stos
mov
dec
pop
pop
adc
and
pop
xchg
scas
mov
jns
call
push
cmpsb
ljmp
pop
sub
adc
mov
shlb
test
pop
push
jnp
adc
je
add
cld
idivl
aas
daa
repnz
fcompl
jno
enter
int
mov
pop
push
cwtl
push
jns
cs
ficoms
int3
outsl
fcompl
or
jb
lods
shl
sbb
pop
jg
lods
cmp
mov
sbb
pop
pop
lods
mov
cmpl
pop
std
sub
fnstsw
xchg
sbb
xor
cmc
inc
xlat
addr16
fidivrs
inc
xchg
ds
stos
into
push
jecxz
dec
push
pop
or
cltd
jno
lock
inc
push
cmpsb
out
arpl
or
inc
sub
pushf
hlt
push
sbb
push
push
adc
aas
sub
inc
and
mov
addb
mov
mov
lds
push
jecxz
cmpsb
push
mov
jae
pop
add
jg
xor
leave
mov
mov
aaa
cmc
xchg
test
lods
xchg
iret
andb
mov
and
cmp
sbbw
or
std
data16
test
xchg
repnz
and
std
inc
les
jae
and
ljmp
fnstsw
pop
xchg
scas
xchg
mov
loope
or
cmpsl
pop
sbb
stos
hlt
ss
cmpsl
push
lret
dec
enter
sbb
cmpsl
dec
std
lea
and
mov
cmp
inc
mov
xor
mov
xor
iret
bound
popa
mov
outsb
jge
push
xor
ds
jl
gs
cld
mov
cs
and
mov
flds
div
pop
jno
lds
pop
fisubrl
fimull
dec
push
icebp
push
sub
arpl
jbe
inc
sbb
int3
push
decb
outsl
xchg
lret
pop
push
push
pop
lods
mov
pop
sub
mov
xor
add
mov
pop
inc
leave
xchg
outsl
jecxz
insl
pusha
ret
add
jns
pop
scas
inc
pop
sti
sub
mov
jmp
sti
fdivrs
dec
push
adc
xlat
outsl
icebp
sti
int3
mov
mov
sbb
shll
push
test
outsl
or
arpl
cmp
es
add
ret
aaa
scas
sbbb
jl
mov
sbb
xchg
mov
ja
in
mov
rcrl
adc
push
xor
ficoml
aas
in
push
jecxz
std
aad
xchg
lods
bound
xor
cmp
push
dec
pop
add
orl
and
pop
inc
repnz
enter
repnz
ss
fisubrs
cs
subb
or
xchg
push
pop
pop
dec
popl
out
pop
xchg
stos
mov
je
out
cmpsb
mov
xchg
cmp
xor
out
retw
and
jge
les
dec
ljmp
fsubl
push
lea
xchg
sti
gs
cmp
lds
in
mov
add
shll
imul
std
ficoml
jge
bnd
shll
andl
rorb
adcb
das
int3
clc
pop
pop
and
jg
inc
lods
sub
sub
pushf
push
push
or
adc
sub
xor
stos
arpl
xchg
inc
cs
std
dec
in
aas
mov
xor
mov
mov
push
mov
lods
imul
iret
stos
repnz
cmc
lds
xchg
mov
xchg
cmp
les
cmp
cmp
clc
cmpsl
mov
mov
in
xlat
add
inc
mov
xchg
js
repnz
cmpsb
mov
ficoml
ret
cli
cmp
jg
mov
xchg
ds
scas
imull
sbb
push
mov
ret
hlt
leave
add
adc
adc
mov
int3
cld
inc
movsb
ljmp
add
add
jns
movl
push
nop
rol
in
es
popa
mov
push
lahf
xlat
jmp
lea
into
je
mov
jmp
cli
xchg
xor
mov
pop
subb
into
clc
mov
push
cmpsl
jae
mov
in
subb
loopne
bswap
jecxz
fisubl
stos
out
andl
mov
mov
push
movsl
and
out
mov
push
sbb
sahf
in
mov
ja
push
outsb
pusha
push
xchg
mov
xlat
jge
stc
sub
add
fwait
cli
pop
fwait
xorb
push
mov
nop
hlt
push
dec
mov
out
fisttps
pop
jmp
loop
sti
lods
sbb
sbb
outsl
cmp
movl
std
pop
dec
push
lock
inc
xchg
cs
mov
push
imul
jle
into
fstl
lock
mov
cmpsb
stos
idivl
add
inc
daa
test
pop
ja
imul
pop
mov
roll
xor
call
ficomps
and
mov
jge
bound
pop
jmp
shrl
insb
inc
add
push
and
mov
push
cmp
sbb
into
or
mov
mov
or
mov
imul
mov
enter
jp
mov
test
rcr
pop
movsb
adcb
clc
cmp
cmp
cmpxchg
scas
jg
or
out
jne
inc
rorb
addr16
push
enter
jge
jmp
xor
andb
subl
sub
fwait
sbb
push
ret
xor
mov
adc
insl
loop
xchg
jae
push
cmpl
mov
mov
jg
push
ljmp
mov
clc
fwait
out
jae
mov
mov
adc
mov
stos
in
or
push
in
or
xchg
sbb
add
cli
jb
ret
inc
xlat
btl
adc
cwtl
fdivr
imul
mov
into
cmpl
adc
out
mov
imul
fld
gs
mov
popa
shll
cmpsl
lret
dec
std
sahf
cli
pop
dec
cmp
xor
adcl
cmpsb
adc
or
and
xchg
and
jb
mov
xchg
stc
mov
dec
inc
pop
and
mov
pushl
mov
leave
jge
sbb
notb
jmp
cmpsl
xor
ds
icebp
push
arpl
adc
pop
outsb
and
out
icebp
loope
xor
push
call
xchg
clc
fimull
and
push
sub
mov
js
pop
dec
jae
hlt
pop
orps
stos
jno
dec
ss
add
mov
outsb
call
cmp
rcrl
fadd
dec
pop
cmc
xor
int
mov
ja
lcall
or
adc
sbb
lret
in
mov
pop
jae
stos
cmp
add
fadd
fidivs
pop
dec
lock
pop
or
fstpl
or
fisubrs
mov
adc
pop
fdivl
js
cli
mov
rcrb
les
xor
cs
push
xchg
pop
sub
arpl
enter
xlat
mov
xchg
xchg
jmp
adc
subb
add
lret
icebp
repz
mov
xor
mov
xchg
or
aas
cmp
imul
add
addr16
loop
cmp
cmc
popf
scas
cmp
xor
sbb
and
cmp
stos
and
sub
fwait
pop
jae
sbb
imul
ljmp
inc
ret
outsl
mov
subl
jl
mov
lods
or
mov
imul
cli
outsb
sbb
adcl
andl
mov
add
pop
pushl
mov
inc
int3
cmp
adc
sub
inc
xchg
sub
jno
pop
mov
pop
sub
mov
inc
dec
cmp
mov
mov
xchg
out
pop
sub
mov
pop
xchg
sbb
cmp
das
fstps
xor
gs
sbb
cld
and
sbb
adc
fs
enter
jecxz
adc
cmc
add
ljmp
xor
lods
lock
jmp
inc
inc
jg
xchg
jg
ss
push
sub
adc
mov
aaa
and
sub
pop
jb
and
mov
mov
jle
mov
xchg
jnp
nop
js
cmp
jp
scas
push
dec
shll
popf
outsl
add
sti
adc
lods
inc
adc
lods
in
add
pop
ret
lret
mov
popa
push
or
jmp
movsl
add
out
pop
aam
jle
xor
leave
mov
movsb
stos
sbb
cmp
cltd
pop
pushf
into
cmc
test
jg
shl
adc
xchg
mov
mov
in
cmp
dec
pop
xor
add
test
adc
push
nop
jbe
test
mov
jmp
popf
fimull
out
mov
or
inc
stc
xchg
add
jmp
addr16
aad
lods
inc
add
jno,pt
mov
lea
push
or
in
ss
push
sbb
dec
lahf
popf
arpl
and
push
out
sub
or
push
stos
movsb
xchg
imul
or
test
cmp
mov
inc
in
movsl
adc
push
xchg
adc
jecxz
push
pop
nop
out
aas
fcomip
bsr
mov
cmp
mov
scas
scas
or
push
xor
add
aas
addl
xchg
loop
stos
les
mov
ds
pop
jg
pop
lcall
ret
fs
cmp
pop
ja
fwait
mov
leave
xchg
pop
jp
leave
loope
and
dec
repz
xchg
repz
xor
int
dec
xchg
push
jp
and
inc
imul
jge
pop
add
inc
lea
jge
mov
roll
push
pop
xor
cmpsb
pop
call
sub
out
je
mov
push
shlb
mov
pop
cmp
pop
mov
cmpsl
jne
gs
jns
fidivrs
pop
xchg
mov
pop
push
popf
push
clc
std
fcmove
fs
outsb
sbbb
std
cmpsb
in
loopne
mov
pop
xor
nop
push
mov
test
lock
jp
stos
ja
aas
mov
inc
mov
fmulp
add
lods
lds
pop
pop
insb
mov
mov
jle
push
sbb
jb
pushf
xchg
mov
test
cmc
rol
fmul
aad
mov
jb
in
cwtl
aaa
aaa
fisubrs
mov
mov
insl
or
ret
pop
dec
mov
lret
ds
fbld
cli
adc
inc
pop
out
push
dec
outsl
mov
loopne
dec
fdivp
jmp
sbb
out
add
aas
pop
sub
xchg
xor
cmc
and
dec
insb
and
or
sahf
aaa
lcall
mov
add
add
jae
xchg
cmp
lret
pushf
jbe
int
sbb
clc
xor
int3
sbb
dec
mov
cmp
xchg
shrl
xchg
ret
push
iret
mov
jp
jb
adc
sbb
insl
hlt
pop
in
inc
dec
jo
xchg
sbb
das
lret
sub
iret
adc
sub
fistps
mov
daa
enter
test
out
int
sti
and
inc
outsl
pop
rcr
mov
push
js
add
cwtl
push
mov
jg
fs
rcrl
push
ret
js
and
lock
push
mov
fbstp
clc
outsl
fdivrp
or
pop
or
je
je
inc
rorb
ja
push
mov
rcll
push
mov
ljmp
outsl
rcr
jb
mov
push
sub
sbb
inc
ficompl
inc
or
jnp
pop
mov
mov
xlat
ss
mov
das
xchg
cmp
jns
or
shlb
dec
int3
ja
lret
adc
mov
mov
cmp
inc
add
test
enter
pop
jns
mov
jne
or
cmp
daa
das
and
dec
add
in
out
push
gs
xor
sbb
fwait
loope
push
or
out
mov
jb
sbb
cs
xor
jb
mov
lds
cmp
dec
sub
jne
jb
inc
jae
lcall
retw
test
pusha
add
pop
or
mov
cmp
mov
mov
inc
cmp
shll
mov
int
push
xor
sysexit
repnz
cmp
jnp
mov
add
cmpb
adc
jns
or
les
adc
mov
jbe
push
into
mov
dec
sbb
push
imul
lds
scas
dec
fsub
dec
dec
mov
jl
add
add
pop
dec
pushf
int3
jge
push
scas
loope
jge
ss
xchg
or
adc
mov
pop
sbb
pop
insl
rolb
js
or
out
inc
jne
jo
push
mov
orb
xlat
dec
pop
dec
ja
lret
rclb
mov
cwtl
adc
mov
lds
in
push
add
xor
adc
sub
sarb
adc
pop
sub
push
mov
sbb
lock
mov
xchg
enter
add
clc
pop
lret
fdivr
dec
sbb
jge
and
rcrb
iret
adc
dec
fimull
mov
xchg
shll
push
inc
mov
inc
mov
xchg
icebp
jno
call
sarb
fsub
imul
push
cmp
push
xchg
mov
aas
xchg
shrl
pushf
lock
dec
pusha
lods
jne
cmp
test
push
pop
pop
mov
pop
push
inc
xor
iret
push
dec
out
sub
jle
dec
dec
xchg
mov
push
cld
cs
lods
mov
xchg
es
sub
xor
sub
push
mov
jg
push
mov
add
and
mov
mov
jl
xor
or
mov
stc
notl
xlat
cmpsl
fwait
jno
inc
inc
ds
loop
pop
dec
dec
gs
arpl
mov
sbb
sub
push
sbb
dec
jb
sbb
mov
cmp
mov
lods
aas
bound
arpl
jns
repz
sub
xchg
ss
inc
or
dec
rcrb
sub
hlt
pop
out
add
stos
ljmp
xchg
gs
xor
loopne
arpl
dec
sahf
ljmp
inc
stc
lret
push
add
cmp
out
in
sahf
orb
inc
mov
pop
jne
les
shl
sarb
popa
in
mov
pop
fxch
rcrb
and
pop
sbb
jne
sub
xchg
cmp
xchg
mov
stos
jno
das
inc
dec
jbe
sti
add
jnp
add
push
cmp
out
mov
push
outsl
jmp
mov
xchg
pop
push
xor
mov
aam
cli
cmp
push
icebp
xchg
xchg
ja
mov
popa
xor
cli
pop
enter
mov
aas
in
repnz
add
xor
or
out
fs
aad
lods
adc
mov
repnz
add
push
aaa
fnstcw
or
data16
push
lahf
negl
test
xchg
add
jns
insl
icebp
sub
jnp
and
ja
stc
jne
lods
jp
imul
mov
mov
hlt
sub
dec
ss
dec
loop
mov
test
mov
sub
pusha
sbb
jecxz
rclb
xor
sbb
lret
mov
mov
cs
pop
dec
dec
dec
push
mov
inc
xor
std
jmp
shl
and
jge
cmp
stos
cmp
insb
adc
or
loop
mov
xorb
cmp
divb
sbb
push
cmp
cs
shrb
cld
dec
adc
lods
out
mov
mov
mov
fmull
ss
adc
mov
fcoml
push
and
cli
mov
out
ljmp
jle
mov
decl
push
sahf
xchg
outsl
clc
fldcw
push
imul
ss
sarl
xlat
scas
rcrb
or
pop
and
dec
cmp
outsb
push
lods
lea
xor
out
xor
xor
jnp
xchg
jp
add
out
xor
fisttpll
cmp
insb
xchg
cmp
jl
xchg
adc
adc
dec
inc
lret
and
cmp
mov
movsb
aas
aas
je
xchg
dec
jbe
mov
int3
mov
mov
fldcw
fwait
push
mov
test
pop
aad
inc
gs
sbb
lods
add
sbb
sub
stos
push
sbb
add
mov
xchg
rcrl
inc
mov
in
mov
add
and
popa
fwait
push
imul
cs
filds
add
mov
fwait
ljmp
mov
mov
or
mov
pop
sub
adc
cmpsl
lahf
pop
mov
and
jle
mov
push
fwait
xor
mov
dec
xchg
mov
sbb
pop
pop
test
pop
pop
sbb
out
out
push
test
xor
pop
add
cs
aas
xchg
fisttpl
arpl
adc
bound
fwait
push
outsb
dec
daa
jl
iret
xchg
test
sub
sbb
mov
dec
and
and
sub
test
scas
inc
jmp
or
or
sub
das
pop
sti
js
xchg
lock
sub
test
adc
outsl
rcll
out
xchg
arpl
dec
jb
pop
aam
dec
js
xor
dec
inc
loopne
push
push
push
ret
lods
sub
ds
xchg
mov
sub
enter
imul
test
std
movsb
das
inc
and
and
and
dec
stos
and
hlt
adc
stos
or
fwait
arpl
or
jg
mov
fstpl
imul
imul
call
mov
in
xchg
cld
ret
cltd
lahf
mov
dec
sti
add
stc
push
in
mov
loopne
test
or
adcb
fisubs
xlat
sub
sub
mov
mov
imul
and
scas
jle
cmp
mov
xorl
jns
outsb
scas
sbb
push
test
push
or
mulb
ds
iret
aas
adc
or
adc
or
int3
sbb
fists
testl
jns
ficoms
push
mov
or
aad
test
std
arpl
or
xchg
jge
dec
ja
xchg
xorb
movsl
pop
fisttps
test
clc
into
out
xchg
or
xchg
jg
add
shrl
fistpl
out
lahf
mov
sbb
cmp
dec
push
cmp
jl
jbe
dec
cld
add
lods
push
lods
sbb
dec
or
add
lods
mov
ficoms
sub
inc
push
shl
push
xchg
push
jbe
fcomi
jmp
xor
divb
dec
mov
xorb
cmpsb
fcomps
arpl
mov
adc
mov
sub
jmp
sbb
or
dec
mov
int3
jns
ja
in
push
mov
jbe
movsb
cmp
cmc
inc
stos
in
pop
and
sub
adc
xchg
push
or
cmp
mov
ss
push
loop
je
jge
aas
std
mov
adc
movsl
or
pop
or
popa
xor
addr16
cld
inc
sahf
jbe
cmp
daa
xchg
mov
mov
shrl
outsb
xchg
dec
xchg
inc
mov
addr16
mov
push
pop
push
mov
in
push
dec
dec
test
or
xchg
xorb
popf
sahf
insb
add
aam
leave
int
stos
mov
sub
aam
cmpb
push
cmp
xor
loop
jp
fs
and
fadds
cltd
adc
mov
leave
insb
jmp
and
or
sbb
pop
lret
fdivrs
imull
mov
enter
jo
in
pop
in
scas
push
mov
mov
retw
cwtl
nop
vmptrld
cmp
mov
leave
lahf
popa
dec
stos
repnz
sub
cld
jmp
divl
add
and
cwtl
adc
rcll
lock
jns
sbb
outsl
mov
shl
sub
mov
inc
adc
xor
dec
mov
imul
loope
ret
cs
and
aam
popf
cwtl
dec
push
sub
jmp
inc
lret
in
les
cmp
rorl
pusha
cmp
xlat
hlt
int
push
lret
lahf
sbb
or
aam
insl
imul
testl
push
flds
cmp
and
mov
add
lea
call
ret
call
xchg
push
dec
xchg
mov
ret
push
fistpl
mov
jns
mulb
iret
adc
cmp
shll
fs
mov
fcmovu
dec
push
fcmovb
fiadds
insb
outsb
dec
movsl
in
cli
adc
add
cmpsl
mov
jo
loop
loope
mov
mov
adc
test
mov
xchg
jg
pop
imul
xor
outsl
repnz
xor
lcall
mov
inc
out
xorb
mov
push
sbb
inc
sbb
aas
leave
cli
and
adc
popa
cmc
mov
add
adc
pop
push
dec
pop
xor
cmp
pop
addr16
xor
outsb
stos
in
outsb
and
outsb
mov
push
out
xchg
adc
sar
cmp
cltd
test
xor
pop
mov
mov
and
push
cmp
xchg
es
pop
jae
jl
and
inc
aam
mov
int
add
cmp
aaa
mov
xchg
xor
shl
rcrb
aam
xor
adc
fcomps
add
add
out
call
aam
in
pusha
cmp
cmp
push
pop
inc
push
push
ja
mov
mov
enter
rcll
cmpsb
mov
push
frstor
scas
mov
or
or
loop
push
jp
lock
out
mov
push
cmpb
shll
loope
mov
pop
aaa
roll
sub
or
test
mov
jns
enter
cltd
xor
hlt
popf
in
rolb
stos
mov
mov
jb
lods
dec
xlat
mov
addb
xchg
push
das
aas
outsb
lods
push
lea
and
xchg
je
xor
xor
fsubl
cmpsb
aad
cmp
jle
sub
push
inc
mov
movsl
pop
les
lret
repz
cltd
in
or
ficomps
push
push
lea
dec
mov
or
arpl
pusha
loop
stos
sbb
pop
rcll
insb
leave
xchg
in
imul
push
pop
sbb
outsb
fwait
pop
mov
jne
xor
adc
cmp
pop
or
ljmp
dec
cmp
test
mov
insb
insl
add
das
mov
stc
bnd
repz
stos
mov
add
pop
in
jne
mov
lods
xchg
ljmp
test
xchg
les
jp
add
in
xchg
popf
lods
and
subb
inc
sub
ficoml
cmpsl
loop
mov
aas
sbb
mov
jno
or
mov
pop
jmp
repnz
mov
test
push
into
cmp
sub
ja
rcrl
mov
lea
sub
sbb
push
cmp
pop
or
mov
and
mov
sub
lcall
push
sub
fldln2
jnp
sbbl
jge
loopne
cwtl
stos
cltd
lods
movsb
arpl
test
pop
sahf
jno
fildll
test
scas
lods
loop
int3
fldcw
sub
jnp
clc
enter
jno
jmp
add
ljmp
test
stos
cld
cli
cld
decl
jmp
push
outsb
out
xchg
cmpb
fdivrl
push
inc
dec
rorb
fisubl
out
enter
and
mov
mov
or
mov
lods
xchg
cmpsl
pop
insb
ss
into
or
mov
cmp
pushf
xor
into
xchg
pop
lahf
cmc
mov
aaa
push
cli
cmc
jecxz
or
add
je
cmpb
push
mov
add
sarl
mov
pop
add
clc
xchg
shll
das
mov
cltd
mov
push
inc
pop
mov
and
push
xor
mov
hlt
les
adc
pop
xchg
lds
mov
flds
adc
ja
xor
outsb
dec
push
xchg
jp
or
jne
xchg
xchg
clc
jmp
sbb
jno
ja
fimuls
lock
adc
lds
imul
orb
jne
jno
jb
in
and
mov
repz
xor
in
loop
ja
test
out
xor
xchg
xchg
sbb
daa
addr16
call
call
std
popa
imul
jle
pusha
std
xor
data16
inc
dec
mov
mov
pop
ljmp
xor
add
icebp
jns
xchg
and
xorb
fidivl
pop
into
je
ret
test
out
cmpsb
adc
xchg
xor
out
sbb
mov
nop
sbb
mov
test
sbb
bound
lds
push
mov
fdivr
shrb
xor
outsb
call
cmc
nop
xor
rorb
dec
mov
cmp
inc
insb
and
and
xchg
ret
insl
xor
loop
sbb
xchg
push
es
scas
in
leave
call
mov
fabs
jge
scas
icebp
push
cwtl
sti
push
mov
mov
pop
lret
hlt
popf
push
mov
cmp
pop
aaa
in
xlat
or
arpl
sbb
das
push
into
scas
std
call
jnp
getsec
mov
dec
adc
sbb
and
int3
aad
dec
pop
xchg
mov
std
out
out
dec
hlt
cmp
sbb
xor
add
add
mov
loop
dec
and
cmp
xchg
lock
bound
sahf
xor
insl
xor
xchg
cmp
xchg
xlat
call
cs
mov
jno
mov
mov
shlb
cmpsl
jecxz
xchg
mov
push
cmpsl
xchg
repnz
mov
inc
mov
sti
mov
jb
xor
cmp
mov
jl
inc
dec
or
sbb
adc
mov
sbb
pop
fcmovnb
call
test
lret
dec
push
lahf
adc
shl
stos
fmull
stos
adc
arpl
loopne
add
test
push
and
stos
mul
das
js
repnz
fcoms
dec
mov
outsl
mov
pop
mov
push
enter
or
mov
in
imul
jle
xor
or
mov
ljmp
mov
add
std
fcomp
int3
in
stos
mov
xorl
jae
and
xchg
inc
pop
xor
inc
test
cmc
xor
push
xchg
pop
out
sub
pop
pop
cmpsl
sahf
xor
push
mulb
lods
jnp
jo
scas
cmpsb
bound
test
or
xchg
mov
sub
loope
scas
mov
cmpsl
hlt
mov
xchg
filds
push
mov
and
data16
mov
pop
lea
add
es
xchg
and
into
mov
add
decl
push
ret
aas
clc
aad
or
shlb
push
std
jecxz
insl
into
sub
rcll
sub
and
rcl
icebp
out
cmp
push
pop
push
sub
mov
rcr
rorb
mov
inc
push
cmp
sbb
inc
mov
cwtl
loopne
mov
cmp
stos
lds
or
pop
xor
xor
cmpb
popf
sahf
mov
ficompl
int3
xchg
mov
movsl
push
mov
xor
sub
pop
pusha
mov
sub
stos
data16
enter
push
xor
pop
movsb
cmpl
fnsave
outsb
push
add
mov
js
fimuls
loope
out
sti
mov
jbe
xor
sbb
mov
ficoml
lcall
sub
dec
cmp
adc
cmp
xlat
inc
je
or
mov
cld
negl
push
shl
xor
sahf
mov
jl
mov
jne
jb
pushf
push
rcrl
ds
std
xorl
mov
mov
cmpsl
cmp
add
jno
jp
lods
sahf
movsb
call
jecxz
adc
pop
cmp
dec
in
jns
push
sbbl
jle
and
int
pop
aaa
fstps
jne,pt
divl
adc
test
add
sbb
repz
push
add
dec
imul
push
int3
sahf
pushf
fs
iret
aam
mov
xor
pushf
jg
sub
jae
jo
inc
repz
shrb
jmp
inc
jno
and
hlt
jne
sti
in
cmp
das
lock
sub
push
jmp
outsb
pop
jge
mov
jge
mov
sub
pop
enter
push
sbb
loopne
pop
out
mov
push
jp
mov
inc
mov
jp
and
add
ljmp
pop
pop
mov
dec
jns
out
pop
mov
dec
cmp
scas
cmpsb
or
sub
mov
adc
scas
cltd
gs
bnd
cli
sub
sbb
fsubs
or
mov
xor
sub
lret
pop
stos
adc
adc
std
adc
mov
lods
jnp
lret
pop
shrl
adc
jg
mov
scas
fdivr
fsub
dec
and
cmc
jnp
adcl
movsb
sub
xchg
mov
repz
xorb
arpl
es
pop
inc
ret
pop
jecxz
ljmp
loop
xor
mov
aad
lods
cmp
and
xor
mov
push
mov
mov
lcall
jo
jle
xor
xchg
movsb
lock
dec
push
inc
cmc
sub
daa
add
mull
or
pop
addr16
or
inc
js
fadds
mov
std
stc
and
lds
ficompl
push
stos
cmp
adc
lods
popf
arpl
insl
scas
xor
mov
xchg
dec
mov
sti
popa
jecxz
add
sub
jmp
call
pop
and
daa
stc
inc
out
inc
xchg
add
movsl
jge
push
sar
dec
xchg
fcmove
cmp
xor
sub
fsubl
fcmovnu
cli
shl
sub
bound
inc
lahf
imul
or
fs
and
les
xchg
fnstsw
test
rcl
loop
adc
roll
cmp
or
push
adc
iret
gs
push
ja
push
sahf
jbe
stos
out
adc
lods
les
scas
adc
in
push
sub
andb
inc
test
inc
inc
mov
push
mov
mov
mov
mov
pop
loope
dec
xor
mov
or
out
jg
sub
test
inc
pop
imul
stos
mov
xor
addl
jle
xchg
out
mov
out
aaa
adc
out
out
sbb
imul
pop
jne
fidivs
nop
pop
int3
mov
sbb
mov
outsl
pop
mov
push
adc
xchg
mov
mov
pop
test
lret
jge
push
dec
pop
pop
jnp
cmp
xchg
leave
popa
cld
mov
lcall
sar
jo
decb
adc
imul
adc
dec
mov
outsl
adc
dec
testl
xor
int3
cmp
outsb
sub
leave
and
inc
lock
fdivl
mov
jbe
mov
iret
mov
mov
jle
sbb
inc
je
pop
sarb
scas
adc
cwtl
stc
pop
pop
xor
xchg
nop
mov
xor
test
mull
jg
adc
bound
stos
out
or
xor
fdivl
or
enter
mov
pop
xor
xlat
mov
xor
dec
add
repz
fidivl
dec
out
mov
mov
mov
aam
scas
andb
shlb
fnstenv
lahf
fnstcw
cwtl
test
test
adc
push
mov
ljmp
sbb
cld
cmp
out
jle,pt
aaa
push
inc
ja
push
stos
mov
aad
xchg
call
test
int3
nop
pop
loop
cmp
ss
mov
pop
lret
leave
int3
idiv
hlt
orb
mov
mov
sbb
leave
aam
mov
lahf
and
cmpsl
stos
pop
sub
flds
dec
sarb
sbb
out
adc
andb
lea
fwait
aam
jge
mov
icebp
inc
sub
mov
cmp
mov
imul
icebp
cmpsl
sti
dec
add
sub
loopne
imul
mov
cmp
lret
fstpt
or
add
inc
sbb
into
repz
or
fistpl
xor
xor
push
or
cmp
mov
cld
jb
pop
add
insl
jl
sub
cmp
mov
ss
and
or
hlt
aas
mov
cmc
mov
adc
xor
adc
rcrb
and
orl
fistps
pop
cltd
jo
fs
inc
mov
addr16
sub
sbb
inc
jns
movsb
pop
xchg
jp
mov
icebp
mov
adc
mov
pop
clc
adc
test
jb
push
out
cmp
cmc
inc
out
rcll
out
push
add
dec
nop
pop
pop
cmc
into
in
and
aam
jge
xchg
sbb
jl
loope
mov
cmpsb
xorl
mov
lret
jns
xchg
dec
xlat
jb
dec
cld
pop
jge
loop
sub
cmp
adc
scas
test
inc
add
mov
and
jmp
sbb
adc
ds
and
inc
adc
xchg
mov
pop
loope
dec
int3
jbe
test
clc
pop
shrl
shlb
mov
in
pop
enter
fisttpll
adc
icebp
cmpsl
test
inc
and
das
orb
inc
incl
jbe
and
pop
xchg
std
add
movb
int
sbb
movsl
lahf
jnp
fucomp
popf
lret
mov
cltd
mov
mov
push
test
and
test
sbb
or
js
cmp
jle
jb
and
rolb
int3
cwtl
cmpsl
adc
fnstcw
or
popl
sbb
mov
test
add
in
cmp
es
jbe
ljmp
cmpl
sub
popf
xor
std
out
jecxz
inc
insl
inc
xor
jg
bound
call
push
add
mov
iret
outsl
getsec
pop
sbb
pop
dec
jl
or
push
jmp
in
inc
inc
bound
shll
js
xor
adc
push
lods
xlat
adc
adc
ss
mov
loop
in
pop
test
push
in
or
into
mov
mov
lret
jne
into
scas
jecxz
jbe
bound
mov
add
in
cs
push
adc
push
out
mov
imul
mov
cmp
push
inc
mov
jg
pop
icebp
inc
enter
mulb
ljmp
out
das
out
push
sti
and
dec
and
push
cmpsb
mov
jne
notl
out
mov
and
lods
mov
jl
lock
push
sbbl
popf
inc
cltd
ret
push
fistpl
addr16
enter
fistpll
in
inc
into
jns
fcoml
lret
scas
out
and
mov
shlb
std
mov
fxch
test
dec
ja
in
pop
pop
rcl
ja
and
jle
xchg
fisttps
mov
in
lcall
adc
in
inc
jno
or
idivb
sbb
sub
sar
mov
lret
imul
inc
in
rclb
mov
lahf
popa
sub
push
mov
loope
pop
mov
pmaxsw
jns
popf
ret
hlt
pop
scas
adc
insl
gs
sar
cs
aaa
je
shrb
adc
fbstp
cld
xchg
mov
dec
imul
movl
add
adc
mov
lods
xlat
mov
lods
lods
push
dec
cmc
jecxz
inc
movsl
pop
pushf
stos
sub
add
je
push
shrb
lcall
leave
xor
test
in
cwtl
outsl
push
std
sahf
mov
fs
pop
cmp
and
testb
idivl
inc
lock
mov
iret
and
or
or
stos
iret
push
mov
adc
cmp
aam
nop
andl
jp
xor
pop
xor
mov
fildll
je
arpl
mov
xor
add
aas
sub
xor
es
adc
shll
lods
add
add
sub
adc
mov
inc
imul
pop
mov
in
push
iret
int3
ret
push
out
popf
and
xor
fdivrp
in
sub
pause
imul
pop
loopne
repz
cmc
je
pushf
rclb
push
int3
fcoms
insl
mov
pop
and
push
aas
jns
clc
rcrb
adc
mov
dec
pop
xchg
dec
dec
aad
dec
lock
scas
popa
mov
or
arpl
dec
pop
push
inc
sahf
add
lock
ficoms
iret
mov
inc
out
xchg
lcall
mov
aad
cmc
adc
mov
adc
cltd
cmp
test
es
lods
into
lock
adc
inc
daa
xchg
cmp
in
mov
mov
ss
cmc
cwtl
std
rolb
sub
fs
adc
cmp
aam
outsb
aad
icebp
rolb
out
jl
ret
xchg
push
cld
imul
push
movsl
cmp
ljmp
mov
addr16
aas
mov
es
mov
add
das
sub
lahf
insb
cwtl
xor
repnz
xchg
xor
jb,pn
mov
pusha
sbb
cmc
cwtl
js
cmc
sub
xchg
js
sub
and
mov
jmp
and
adc
les
push
push
mov
pop
mov
push
aad
std
in
mov
ljmp
aam
gs
mov
insb
fimuls
push
xlat
shl
shrb
pop
adc
hlt
ss
or
leave
test
sar
test
aaa
test
test
mov
cmove
lods
int
xor
adc
pop
xor
je
cmpsl
ja
pop
inc
xor
or
lcall
mov
xchg
aaa
inc
fstpt
jb
push
and
mov
test
fcoms
pop
jae
outsb
sub
bound
imul
cmc
call
cmp
xchg
mov
xchg
les
jl
inc
xchg
cmp
addr16
xor
pop
negb
pop
or
in
fcomi
js
push
arpl
jne
hlt
scas
mov
mov
cmp
fldl
aaa
imul
cltd
push
mov
inc
test
pop
mov
cmpsl
jae
fwait
adc
lahf
lds
loopne
lcall
mov
or
cmpsb
adc
mov
jecxz
jno
pop
mov
int
ds
mov
loope
sub
mov
mov
pop
push
scas
lcall
out
add
add
les
push
popa
leave
adc
divl
xchg
mov
addr16
inc
push
vpsubq
inc
daa
ljmp
stc
icebp
fldt
xchg
lcall
mov
mov
loope
jge
js
and
fwait
test
mov
pop
jp
sbb
dec
sub
sub
mov
test
pushf
adc
add
xor
imul
xchg
shlb
js
std
xor
jns
xor
ljmp
push
fists
divb
xor
pusha
rcll
movups
adc
cli
outsl
sbb
sbb
js
pop
in
shrb
mov
dec
push
xor
mov
scas
popa
sbb
movsb
and
cmpsb
addr16
repnz
jecxz
stos
and
push
stos
lock
push
mov
mov
jbe
pop
sbb
push
scas
push
loopne
push
aad
inc
dec
in
sbb
push
inc
push
repz
pop
loopne
arpl
jo
pop
mov
mov
inc
arpl
push
or
mov
or
sub
std
inc
data16
add
sub
lret
aas
daa
jecxz
adc
and
push
mov
mov
jo
dec
rolb
fstpl
inc
fistps
adc
xchg
out
mov
mov
mov
xchg
mov
pop
jle
pop
mov
cmp
out
mov
push
repnz
repz
cmp
xlat
sbb
pop
cmpsb
scas
roll
test
shlb
out
cmc
js
stos
adc
dec
sar
jge
cmpsl
pushf
cmp
andl
rclb
jmp
insl
loope
mov
mov
pop
scas
jnp
inc
jno
jo,pn
pusha
pop
push
jnp
dec
cmc
adc
int
hlt
fistl
jnp
adc
pop
and
cmp
lahf
xchg
outsb
mov
dec
sub
adc
mov
jno
lods
or
lret
mov
adc
dec
mov
lcall
or
xor
inc
jne
dec
cmc
xchg
cld
jne
xor
roll
js
js
jl
fmulp
fistps
add
pop
pop
fistpl
mov
outsl
fstl
inc
cmp
aas
lret
mov
sub
call
fwait
jl
mov
out
push
outsb
shlb
mov
xor
mov
mov
bndstx
xchg
adc
shlb
ja
out
cmpsb
xchg
lods
fmull
push
mov
push
ret
lahf
insb
fisubrl
and
data16
mov
mov
mov
sub
push
ljmp
pop
imul
sub
dec
pop
adc
xlat
fimuls
not
xchg
sbb
add
dec
sbb
std
leave
jbe
and
fs
repnz
test
jnp
aas
ret
sub
stos
imul
and
gs
xor
sub
int
jp
dec
mov
aaa
mov
out
cmp
mov
fldt
dec
or
scas
cmc
addl
repz
cmp
popa
mov
ret
cmp
stos
ss
sbb
mov
cs
jnp
stos
insl
sub
and
movsl
gs
xor
cltd
test
bnd
mov
mov
sbb
pop
shrb
shl
xchg
adcl
stc
push
mov
adc
out
add
fadds
imul
test
out
rorb
imul
add
cmpsl
sub
movsl
or
xor
aas
lcall
or
scas
mov
add
aam
daa
popa
outsb
enter
xchg
jmp
mov
xchg
add
jle
dec
loopne
sbb
into
sbb
je
add
clc
out
fwait
aaa
mov
test
or
imulb
cmp
movsb
fwait
adc
push
sti
fisttpl
add
fsubp
stos
sbbl
jp
sahf
push
jb
xchg
out
push
sbb
adc
pop
dec
xor
mov
mov
or
in
cmp
adc
sti
leave
mov
mov
xor
mov
cmp
xor
ja
test
cmp
add
insl
push
pop
std
iret
mov
inc
cmpsl
inc
sub
dec
xchg
and
ljmp
mov
data16
sub
dec
mov
inc
inc
pop
mov
std
xchg
dec
and
cli
or
fsts
hlt
test
push
cli
push
cmp
cwtl
ucomiss
js
das
or
mov
dec
imul
jecxz
stos
or
inc
adc
rorb
imul
sbb
lods
mov
sar
add
cmp
loope
testb
outsb
int3
sbb
xchg
fcmovnb
dec
out
mov
push
or
cmp
adc
fimuls
pop
mov
xchg
mov
cs
adc
call
pop
fwait
repnz
bound
jp
pop
inc
adc
repz
ss
lss
aad
movsb
mov
sarb
add
mov
movb
jle
push
or
fs
pop
xor
repz
adc
mov
ds
adc
int3
pop
cmp
out
push
imul
and
mov
mov
xor
xchg
jno
test
push
add
adc
mov
jmp
pop
and
outsl
mov
shrl
pop
test
xor
jecxz
inc
mov
int3
mov
pop
std
pushf
pop
dec
popa
xor
hlt
enter
into
fs
fnstcw
leave
lods
cmp
jne
hlt
push
fnstenv
ss
jmp
xchg
mov
xor
movsb
rcll
mov
leave
imul
and
aas
mov
mov
cmp
sbb
cltd
add
add
mov
cmp
push
insb
add
enter
outsl
dec
jns
xor
jns
sbb
adc
popl
pushf
imul
lahf
dec
jecxz
mov
adc
cli
fdivrs
ds
fwait
inc
xor
fs
mov
mov
leave
ret
mov
in
add
xor
or
andb
stos
push
iret
mov
push
rcrl
ja
mov
inc
sbb
negl
cli
lds
mov
bnd
insb
or
mov
xchg
mov
mov
stos
rcll
fwait
adc
jno
mov
ret
leave
sbb
cmp
mov
xor
push
mov
popf
xor
enter
xchg
and
mov
scas
and
fsubrl
push
scas
jl
bound
cmp
mov
cmp
jp
mov
lahf
pusha
or
and
addr16
xor
out
mov
or
shll
insb
jp
jecxz
mov
mov
fnsave
loopne
cmp
jg
lock
out
stos
pop
push
rolb
popa
mov
jbe
ret
inc
dec
xor
cmpsb
mov
enter
mov
clc
fcomi
idivl
fs
dec
aaa
push
inc
or
mov
dec
xchg
xor
xor
inc
fcompp
add
lcall
cmpl
xorl
mov
into
mov
cmpsb
mov
and
xchg
mov
lods
test
and
jp
sbbl
cmp
and
pop
daa
das
and
and
outsl
xchg
mov
pop
pushf
fnstsw
add
push
out
fldenv
add
sub
lock
or
xchg
bound
incl
xchg
push
loope
leave
add
js
hlt
jmp
fdivl
in
into
int3
xlat
adcl
mov
jbe
rep
mov
clc
clc
jae
insb
mov
cld
mov
mov
test
leave
stos
orb
int
enter
dec
mov
scas
cmpsb
test
sbb
fdivs
shrb
sbb
out
pusha
jns
pop
mov
scas
aad
call
pop
outsb
cltd
pop
mov
aam
out
stos
and
xor
aaa
jbe
sti
icebp
jl
popa
stos
sub
lahf
mov
inc
mov
push
push
add
int3
mov
cli
cmpsb
pop
loop
sbb
cmp
or
js
jne
xor
mov
test
in
rcr
lea
out
mov
or
mov
sbb
ljmp
mov
xor
mov
cltd
sbb
rol
adc
mov
inc
pop
xchg
mov
cmp
fisttpl
mov
pop
push
mov
mov
ljmp
in
std
insb
std
iret
xorl
jbe
or
jne
or
mov
ret
inc
or
push
mov
jnp
test
push
add
sbb
ret
das
clc
inc
aam
and
leave
push
pop
dec
xchg
push
mov
lods
std
mov
ja
mov
sbb
jl
cwtl
dec
mov
int
mov
dec
mov
jl
mov
pushf
xchg
jbe
lock
jae
popf
mov
push
push
popf
rclb
inc
andl
loop
mov
mov
inc
jg
jno
and
fld
rclb
sar
xlat
scas
mov
inc
mov
mov
or
xor
aaa
loope
lock
mov
loop
add
jae
pushf
sti
stos
fwait
push
and
mov
sub
rcll
aam
aas
lret
clc
loop
sahf
aad
clc
cld
sub
pop
pop
cmpsb
cmp
lret
ss
mov
cmp
js
adc
mov
mov
cwtl
mov
lea
imul
stos
rorl
mov
int3
mov
xlat
mov
or
or
dec
jbe
dec
xor
push
jmp
jg
add
sub
leave
sub
sub
dec
push
lds
adc
lea
xchg
xor
inc
cmc
xchg
and
call
dec
mov
and
popf
sbb
sarl
fmull
or
jl
mov
pop
sbb
adc
test
je
loope
cli
mov
mov
fs
jns
sub
jecxz
js
pminub
xchg
mov
test
dec
sbb
pop
sbb
addb
pop
xchg
je
mov
sti
mov
stc
mov
ljmp
lods
fs
aas
mov
push
daa
mov
in
mov
push
jg
scas
bound
aaa
mov
lahf
fs
dec
and
xor
cmp
cli
test
mov
stos
pop
sub
mov
movntq
sbb
iret
xchg
jne
notb
mov
pop
and
push
push
pop
sub
sbb
inc
xchg
es
dec
sbb
imul
mov
sub
push
lods
test
rorl
sahf
cmp
adc
es
cld
and
push
hlt
xchg
dec
pusha
leave
sar
sbb
mov
sbb
cmp
xor
out
mov
push
push
xchg
or
imul
xor
push
pop
push
inc
push
icebp
push
push
test
lret
and
or
prefetchwt1
sbb
outsb
dec
mov
inc
insb
cwtl
lods
jbe,pt
cmc
lahf
lods
mov
imul
daa
stc
nop
jo
shlb
pop
adc
outsb
loopne
jmp
adc
fistl
push
adc
mov
push
iret
dec
jbe
jge
sbb
popf
adc
jg
dec
add
cli
test
mov
cld
pop
in
sub
mov
cwtl
fdivr
or
rol
xor
push
int3
cli
lds
in
jge
aam
mov
test
lahf
sbb
jp
xor
in
and
dec
call
mov
imul
test
and
xor
cmp
mov
jmp
mov
test
push
lock
call
push
repz
pop
test
cmp
xor
pop
popf
jmp
fdivl
xor
stos
daa
push
mov
xchg
icebp
mov
jmp
punpckhwd
push
xor
mov
in
add
xorl
pop
lahf
cmc
dec
arpl
popf
or
fsubs
loopne
je
imul
inc
movsl
ja
push
js
cld
outsl
push
mov
shrb
lods
mov
jmp
push
outsl
dec
dec
push
and
xchg
call
xchg
in
rclb
sub
or
loop
sub
jno
ret
adc
sbb
cwtl
pop
inc
cmp
push
sub
mov
mov
insl
xor
mov
mov
push
lea
adc
lea
cld
add
pop
dec
cmp
movsb
dec
movsb
xor
pushf
cmp
add
stos
cmp
stc
jnp
xchg
xor
push
xor
dec
push
pop
sti
push
mov
dec
mov
rorl
mov
call
jmp
arpl
arpl
nop
dec
or
pop
mov
popf
popf
das
sahf
and
je
push
and
sub
icebp
mull
sub
dec
movhps
test
icebp
cltd
add
jp
testl
out
xor
sbb
rcrl
loope
popf
rcrl
addl
aaa
iret
cmp
inc
jbe
decb
jmp
xor
stc
pop
mov
inc
pusha
xlat
gs
mov
fistl
test
mov
in
aaa
push
cmp
fisubs
cmp
push
arpl
pop
out
outsb
js
rorl
repnz
add
jno
mov
popf
jo
aas
and
mov
pop
ds
xchg
test
adc
sbb
or
adc
add
scas
popf
mov
dec
sbb
mov
push
xor
jne
inc
pop
pushf
or
push
lahf
inc
push
pop
sub
mul
inc
pop
mov
xor
push
popa
mov
or
icebp
mov
mov
shrb
rdmsr
mov
pop
xor
sub
jbe
pop
mov
out
loope
testb
jge
lods
mov
adc
cld
test
arpl
mov
popf
das
movsl
push
and
or
int3
rorb
jne
mov
shl
jg
sbb
das
loopne
xchg
cld
jmp
lock
mov
or
mov
jle
cmpb
and
in
outsb
test
in
jb
mov
cmc
jno
aam
pop
test
pop
sar
jle
xchg
sub
stos
mov
cmp
ss
adc
jb
xchg
rcl
aam
fwait
push
cmp
pop
jmp
mov
jg
xor
xor
je
andl
movsb
push
movsl
push
cmpsl
push
mov
dec
lret
mov
mov
pop
push
lahf
aam
jp
pop
sub
dec
xor
mov
lods
stos
sti
test
mov
popf
ds
cld
bound
inc
mov
add
push
fsubl
int3
pop
sarl
insl
aad
imul
addb
cmp
insb
sbb
mov
inc
lods
lret
notb
cltd
push
inc
jmp
mov
cmpsb
int
popf
jmp
pop
call
lods
test
sbbl
out
mov
sub
roll
outsb
fcom
daa
jl
or
in
pop
test
pop
fsts
ret
xchg
mov
sar
in
nop
mov
jae
add
mov
fwait
bound
mov
cmp
paddd
jg
jns
mov
mov
addr16
iret
lret
sahf
cmp
imul
mov
push
push
test
repz
mov
stc
jge
scas
icebp
mov
fs
ljmp
adc
popf
push
push
in
push
pop
sarl
xchg
adcl
cmc
mov
outsl
push
dec
mov
add
push
xor
or
mov
xchg
orb
stos
push
cmpsl
mov
add
jo
cmp
int
mov
lret
xor
aas
popa
ss
data16
and
mov
addl
sbb
lods
lea
mov
dec
loope
and
mov
rcr
negb
mov
pop
outsl
idivb
test
outsb
and
or
arpl
out
push
or
dec
jp
sbb
push
pusha
test
sub
push
repz
xchg
push
fisttpl
andb
pop
inc
sbb
mov
hlt
fmuls
inc
xchg
and
jle
pop
mov
out
movsl
das
inc
mov
jb
xchg
int
jg
mov
xor
mov
pop
cwtl
add
xchg
push
and
or
hlt
xchg
or
mov
mov
mov
add
rcll
jg
sbb
mov
repz
xor
push
pop
push
xchg
cld
lods
jge
std
shlb
in
jle
sbb
enter
rcrb
jg
sub
int3
and
cs
js
xchg
xchg
jae
rcl
add
outsb
sbb
pop
insl
popf
lcall
call
stos
cmc
cmp
je
jae
adc
mov
xlat
cwtl
adc
push
or
inc
lock
fs
pop
insb
cmp
shrb
dec
lret
incb
xor
lods
add
sbb
or
mov
push
mov
jbe
mov
mov
jge
mov
jnp
loopne
scas
dec
mov
popf
ret
les
rcrb
sub
and
dec
test
ljmp
pop
pusha
sbb
fwait
ror
push
mov
or
mov
jle
push
repnz
std
add
jbe
sbb
fcoml
xchg
jnp
adc
lock
sbb
aam
stc
int3
std
dec
inc
imul
insl
mov
mov
add
stc
cmp
insb
xor
pop
in
stos
xchg
out
jne,pn
sub
pop
pop
mov
mov
push
pop
mov
add
jle
inc
loopne
xchg
nop
pop
mov
cmp
xchg
mov
pusha
mov
push
sbb
push
pop
mov
sbb
scas
ja
jecxz
xchg
inc
nop
jl
push
insl
jp
es
dec
inc
xchg
push
int
xchg
cmp
mov
push
mov
or
pop
out
or
xchg
ret
mov
cmp
jg
rcl
adc
mov
push
scas
xchg
xchg
mov
jp
popa
sarb
push
mov
shlb
ror
xchg
xor
pop
test
add
push
push
and
std
pop
movq
jp
jnp
add
sti
mov
fisubs
cmp
add
dec
cmp
popa
div
lds
in
inc
repnz
inc
fsts
pop
jne
dec
cmp
mov
test
push
push
clc
fldcw
fs
or
jae
jmp
xor
bound
movsb
daa
push
push
aad
ljmp
fucomi
jp
sub
into
mov
pop
jge
jle
xor
pop
and
test
stos
sbb
mov
sahf
stos
jle
and
pop
inc
cmpsl
lods
push
adc
add
stos
hlt
test
jmp
jno
bound
adc
fnstenv
es
or
and
loope
xor
mov
jnp
push
das
fsubrl
in
sbb
imul
cld
mov
add
into
xor
add
in
lcall
jecxz
popf
lods
daa
imul
add
ja
pop
sbb
fs
push
arpl
push
out
das
movsb
pop
in
cmpsl
mov
add
scas
add
lcall
sti
xchg
mov
hlt
scas
testb
sbb
cli
in
adc
dec
orl
insl
popa
out
es
scas
notb
pop
rorl
sub
or
sub
cmp
inc
sub
scas
cld
insl
mov
loopne
out
sub
mov
pop
inc
cmc
ljmp
fnstsw
push
pop
inc
push
push
je
xchg
pop
imul
or
push
or
adc
sub
mulb
test
aaa
dec
sbb
addb
dec
or
push
andb
aaa
xchg
sub
mov
gs
inc
jnp
xchg
es
mov
adc
push
test
jecxz
inc
das
out
aaa
or
cltd
mov
aas
ljmp
push
dec
icebp
sbb
jae
cmc
cmp
bound
out
scas
insw
adc
sbb
mov
lods
dec
test
mov
ss
or
loopne
scas
out
sbb
push
add
arpl
jnp
mov
mov
mov
mov
jnp
ljmp
or
mov
aas
and
fstps
mov
mov
push
pop
or
ds
adc
sti
or
add
dec
mull
pop
sbb
lods
or
sbb
sub
pop
test
js
sbb
bound
jne
jne
mov
jg
clc
sti
adc
and
push
mov
and
push
xchg
push
scas
pop
arpl
dec
lea
adc
jle
fsubrl
cmp
icebp
imulb
aaa
push
xchg
adc
and
xchg
and
push
adc
xchg
icebp
adc
cmpsb
int3
push
sbb
mov
and
jmp
or
mov
in
lods
popa
cmp
mov
and
xor
mov
hlt
mov
adc
xor
repnz
push
in
adc
lret
lcall
movsl
mov
sbb
mov
subb
mov
xor
cmp
push
testl
sbb
jbe
pushf
sbb
adc
scas
cmp
pop
in
popf
mov
int
cwtl
ljmp
loope
push
loope
ljmp
mov
cvtpi2ps
out
test
sub
xor
mov
scas
cmp
sbb
and
stos
lds
dec
leave
jne
nop
inc
dec
pushf
pop
jge
loopne
sarb
xchg
bound
mov
rcrb
push
push
stos
jno
mov
dec
cmp
and
scas
mov
mov
add
cmp
je
imul
mov
push
inc
imul
xchg
int3
gs
cs
sub
test
fwait
mov
repz
mov
sbb
xor
imulb
sti
ret
push
push
sbb
xor
popf
jo
inc
cwtl
sbb
hlt
nop
or
mov
int
ret
lret
ljmp
loope
subb
je
fnstsw
fbstp
cmp
rol
loop
out
mov
cmpsb
aam
jecxz
cmp
imul
xor
or
nop
push
dec
ret
push
or
imul
cld
ret
rorb
pop
jle
popl
les
fsubrp
aam
loop
xor
enter
adc
je
or
mov
sub
cmpsl
or
into
dec
lods
lods
rol
xchg
mulb
adc
ret
dec
push
sub
icebp
flds
ret
inc
dec
pusha
pop
insb
xor
enter
sub
iret
out
scas
adc
mov
roll
or
add
cmpl
movsb
cltd
sbb
push
loope
sbb
push
fsubs
and
cmpsb
arpl
mov
or
ret
push
inc
pop
and
lret
pop
ret
and
aad
mov
mov
fcomp
in
cmpxchg
imul
movsl
mov
sub
in
ja
movsb
stos
xor
mov
cs
mov
leave
mov
sub
popf
inc
sarb
lret
cmp
or
loop
adc
dec
ret
cmpsl
pop
xor
fsubp
mov
out
sbb
arpl
loopne
jb
pop
ffree
dec
cmpsb
add
nop
repz
scas
in
sub
push
lods
scas
addr16
mov
ljmp
jo
mov
push
fcoms
pop
mov
fisubrs
daa
hlt
adc
pop
inc
test
dec
aam
push
cli
in
adc
ret
adc
sbb
mov
rolb
adc
dec
aaa
push
sahf
dec
out
mov
cli
xchg
in
gs
adc
es
stos
cli
addr16
int3
mull
nop
sbb
xchg
sub
xchg
pop
push
xchg
ja
pop
call
adc
sbb
nop
repnz
inc
outsb
dec
xor
push
add
adc
and
jge
sbb
imul
push
push
add
and
or
adc
mov
adc
pop
lss
jno
push
xor
jnp
ljmp
sbb
cmc
mov
mov
adc
popa
mov
cmp
push
cmpsl
xchg
sbbl
sbb
scas
cltd
ja
fwait
cmpsb
inc
sarb
icebp
mov
repnz
push
insl
xchg
mov
push
jp
bnd
jge
mov
add
ljmp
jo
or
das
inc
inc
mov
test
rclb
call
mov
xor
rcrl
xchg
mov
out
pushf
test
pop
jge
sub
imul
fldt
into
dec
pop
push
and
jg
xor
fsubs
ret
daa
fildl
mov
ss
cmp
xorb
fmull
sub
lock
xor
addl
adc
leave
sbbl
pop
add
fiaddl
js
inc
fs
adc
mov
inc
out
sbb
jbe
sbb
xchg
mov
lcall
leave
or
fisubs
xor
push
cld
test
addr16
int3
scas
pusha
cmp
out
sahf
inc
sbb
fsubrs
or
jo
cmc
mov
cmp
inc
adc
or
pop
add
in
daa
pop
int
gs
fisubrs
sbb
fbld
dec
mov
adc
or
jno
aad
inc
decl
jb
cmp
scas
mov
dec
rorb
loope
in
adc
fstl
dec
cmpsl
mov
es
ss
lret
dec
pop
aaa
xor
sbb
out
lret
lock
mov
add
mov
dec
jp
cmpsb
mov
pop
out
aam
push
ljmp
dec
std
mov
xor
or
imul
push
xchg
shll
movsl
aam
and
sub
popa
mov
nop
idivl
je
add
fidivrs
pop
shrb
xor
call
std
dec
xchg
jo
out
pop
lahf
jecxz
mov
mov
stc
pop
adc
mov
inc
push
insl
push
fsubrl
sbb
sbb
jl
jmp
stos
pop
mov
and
xor
fisubl
xor
scas
gs
mov
add
or
xor
sbb
mov
pop
je
stos
pop
or
loop
inc
sub
push
test
test
adc
imul
add
iret
jno
inc
in
sub
stos
mov
push
mov
jmp
mov
ret
mov
cmpsb
inc
push
shrl
mov
repnz
fwait
jl
stos
cli
xor
frstor
fstpt
scas
int3
inc
andl
repnz
cmp
hlt
rcrl
in
ljmp
mov
adc
push
repz
and
push
cltd
add
push
cmp
mov
mov
xchg
es
pop
cwtl
inc
fildll
aad
icebp
jmp
fimuls
adc
xorl
xor
jbe
sub
test
push
push
icebp
repz
fst
movsb
and
jecxz
cltd
pushf
sahf
nopl
push
in
lret
je
add
loopne
cld
loop
dec
out
adcl
pop
lret
pop
test
hlt
fidivl
jle
pop
mov
out
xchg
xchg
dec
sub
sahf
or
mov
dec
notl
sbb
jnp
pop
xor
fsubrl
cmc
jb
inc
mov
loope
lret
or
lret
mov
daa
orb
mov
inc
add
mov
inc
pop
sbb
cmp
add
into
imulb
stos
xor
cmp
rcrb
hlt
pusha
std
gs
jno
js
cmpsb
mov
mov
lret
fistpl
pop
mov
xchg
cld
ss
std
dec
add
pusha
bound
push
xor
push
bound
lods
in
cmpsb
and
pop
fisubrl
xchg
cmpb
cmp
scas
add
shrb
outsl
push
and
add
daa
in
jle
mov
dec
xor
nop
pop
clc
jns
out
outsb
vpxor
pop
and
bswap
xorl
test
xchg
jb
mov
imul
cli
and
insl
mov
test
fldcw
out
sub
sbb
es
js
sbb
dec
mov
fisubrs
mov
stos
mov
pop
pop
xchg
add
rorb
jg
mov
ret
ret
sbb
or
ret
icebp
push
cmpsb
lcall
jmp
mov
inc
negl
call
push
cvtpi2ps
ss
xor
xchg
sub
iret
pop
push
stos
popf
dec
pushf
mov
pop
and
jb
loope
stc
nop
aad
data16
lahf
stc
cmc
xchg
mov
pusha
bound
push
and
inc
rol
fcomi
imul
dec
les
outsl
mov
ret
ljmp
or
inc
dec
push
ljmp
cmp
xor
adc
dec
fsubrl
ficoml
mov
pop
inc
fs
andl
sti
rorb
adc
lea
adc
lcall
imul
xchg
cld
popa
dec
ficomps
iret
push
imul
in
fisubl
cwtl
pop
loop
sub
ret
push
js
and
rol
gs
outsb
adc
xchg
sbb
xchg
aas
aas
push
outsb
inc
mov
mov
ja
movb
mov
adc
ss
ja
mov
gs
and
dec
xor
repnz
ret
push
jge
das
cmp
add
mov
data16
out
mov
insb
out
int3
mov
insl
sbb
sub
in
aad
push
lods
mov
addl
or
cltd
loop
test
mov
adc
push
ss
imul
insl
inc
rcrl
fiadds
fisubl
hlt
pop
inc
popa
notb
jmp
loop
jbe
hlt
mov
ds
cmp
mov
sbb
add
dec
and
jecxz
xlat
xor
movsb
push
xchg
shrb
sub
lods
jge
rolb
addl
jg
iret
pop
or
ss
dec
lea
prefetcht1
loop
mov
rcrl
ret
adc
imul
fdivs
lahf
adc
loop
rol
out
enter
inc
push
repz
into
mov
out
xchg
shrl
test
jae
and
push
bound
ret
inc
loope
mov
sbbl
push
mull
sbb
cwtl
inc
dec
sub
pop
sbb
dec
cmp
stos
inc
test
loop
dec
pop
mull
push
xchg
nop
jge
xchg
in
int
shlb
push
xchg
mov
jns
stos
cmp
scas
mov
out
sub
sti
in
xchg
inc
arpl
icebp
mov
dec
in
dec
mov
xchg
call
xchg
push
push
es
fidivrl
adc
sbb
out
pop
lret
mov
icebp
js
ret
dec
jle
nop
pop
jg
cmp
imul
lods
in
cmp
adc
pop
ljmp
xchg
jno
lret
lcall
or
into
sbb
fs
in
and
fcomps
xchg
sub
jnp
xor
ljmp
mov
cwtl
dec
sarb
stc
arpl
cli
jnp
push
sti
dec
dec
lret
cmc
cmp
stc
jbe
jg
xchg
out
jmp
lcall
popf
fisubs
xchg
in
mov
call
test
or
repz
mov
std
movl
loopne
popl
pop
jae
or
adc
add
fsts
xchg
sbb
xor
out
xchg
daa
clc
jo
dec
in
shlb
les
lods
aaa
xor
fcomps
in
xchg
jnp
sti
insl
push
idivl
shll
push
stc
push
mov
xchg
mov
sbb
rcl
andb
mov
fbld
push
lret
lret
out
cltd
btsl
jbe
fisttpl
dec
sub
outsb
inc
out
push
add
mov
or
sbb
inc
xchg
ss
xchg
aaa
adc
and
mov
pop
xor
sub
leave
push
addl
das
aas
test
dec
popfw
jae
cld
in
mov
sti
bound
sub
xchg
hlt
lret
mov
mov
daa
mov
loope
pop
in
iret
jecxz
movsl
xor
mov
adcb
inc
and
je
and
lods
xchg
into
dec
lds
inc
jne
iret
mov
repnz
mov
or
xor
pop
adc
inc
mov
mov
xor
xchg
lock
loope
xchg
and
arpl
mov
ja
pop
test
xor
or
fnstenv
push
sub
fwait
sbb
mov
mov
dec
push
xchg
cld
cs
inc
fstpt
dec
inc
shlb
scas
cmp
lods
xor
sbb
andb
icebp
mov
jbe
pop
push
test
enter
movsl
iret
sub
je
mov
int3
cmp
je
jg
mov
xor
loope
aas
dec
cmp
cmp
scas
cmp
jo
cli
sbb
jle
gs
sbb
mov
jae
sar
pop
or
test
and
jmp
jmp
pop
movsb
cwtl
xchg
add
push
push
push
inc
push
icebp
es
aaa
test
test
push
incl
jo
pop
cs
adc
arpl
mov
pop
push
sub
push
jmp
xchg
lods
sbb
in
fidivl
movsb
popf
in
adc
mov
sub
mov
mov
cmpsb
pusha
lret
dec
jle
cwtl
adc
push
outsl
dec
fistpl
jle
addr16
push
pop
add
mov
sbb
bound
mov
dec
or
pop
leave
cltd
scas
jnp
push
divl
mov
xchg
jmp
popf
add
ficompl
adcb
add
or
xchg
add
frstor
icebp
and
xchg
jno
gs
aad
shll
shll
hlt
stos
ljmp
mov
orl
mov
cmp
xlat
cmpsb
cmp
cmp
pop
lock
pop
push
ficompl
lock
mov
insb
inc
jnp
data16
in
pop
out
mov
jl
xor
out
cld
add
mov
call
dec
repz
mov
out
dec
int3
in
cmp
out
push
cmp
dec
sub
nop
test
js
mov
pop
imul
xchg
insb
aam
lret
sub
dec
push
loopne
sbbb
xchg
test
stos
push
repnz
mov
mov
nop
sbb
dec
xchg
pop
xor
and
mov
jb
push
mov
fwait
shll
les
cmp
pop
jns
imul
fs
lea
loop
aad
push
jbe
lret
lock
dec
mov
fs
lahf
inc
cs
daa
jl
push
aam
fists
xchg
sbb
xchg
dec
cmpsb
repz
cmp
loop
pop
fildll
lcall
xchg
fsubs
int3
aas
or
xchg
and
mov
leave
cld
into
add
loope
cmp
insb
call
movsb
cltd
mov
inc
xor
fildl
test
inc
aam
push
mov
mov
js
es
push
inc
jl
loope
jno
daa
cltd
mov
out
cs
sub
hlt
sub
fdiv
xchg
sub
inc
fwait
leave
and
mov
push
push
xor
movsl
sub
xchg
xor
add
inc
jge
adc
hlt
cmpsb
sub
mov
add
or
in
stc
sbb
pop
mov
nop
pop
cld
or
add
loopne
xor
push
pop
arpl
aam
cmp
daa
cmp
roll
or
sarb
add
push
repnz
adc
pop
rolb
out
xor
data16
jnp
imul
xchg
fcomps
add
adc
push
clc
scas
daa
mov
notb
std
es
mov
pop
aaa
mov
jbe
xor
test
js
outsb
idivl
ljmp
outsb
gs
adc
cmp
fdivr
fildl
sahf
push
out
mov
lret
dec
push
xchg
sub
inc
cmp
fistps
jle
mov
cmp
rorb
adc
mul
out
in
and
lret
test
mov
and
iret
cmpsb
andb
into
jb
push
popf
mov
push
js
cli
or
xor
lds
stos
movl
jg
push
inc
mov
dec
into
sarl
mov
mov
xchg
jae
bound
sti
imul
jecxz
pop
ja
cmp
pusha
in
ss
lods
jp
or
add
dec
cmp
lea
sbbl
std
add
mov
mov
fsubs
jl
lcall
mov
fnsave
or
hlt
je
sub
mov
sub
pop
fwait
les
in
rcrb
fmul
add
push
push
fwait
into
sbbb
cmp
loop
jo
mov
mov
push
jge
imul
and
mov
and
sub
in
add
subl
mov
push
rcll
movsb
insl
stos
cmpsl
repnz
lahf
pop
sbb
cmp
add
ljmp
push
or
imul
xchg
insl
int3
jbe
jb
adc
push
insl
subl
xchg
adc
add
mov
repz
je
mov
int
mov
push
push
sub
mov
push
scas
pop
jbe
mov
stos
sbb
xchg
inc
ret
ror
lods
ds
arpl
loopne
jne
cmp
jo
out
sub
lret
adc
or
mov
xor
dec
pop
out
lods
adc
and
stos
xor
mulb
je
add
je
dec
sub
std
jbe
pop
adc
mov
outsl
out
icebp
mov
in
mov
mov
mov
mull
adc
xor
lods
repz
xchg
mov
lods
jmp
push
or
sub
pop
jns
popa
jmp
adc
adc
repnz
icebp
icebp
out
cmc
push
nop
jns
mov
mov
in
leave
andb
mov
into
mov
loope
xchg
subb
adc
cmc
adc
sbb
mov
xorl
dec
push
lods
push
xor
vphaddudq
jg
ret
js
int
push
lea
mov
cltd
dec
mov
roll
xchg
fidivrl
fnsave
mov
ret
pop
pop
test
daa
lods
jle
dec
leave
bound
aas
pusha
stc
imul
int
mov
adc
gs
jb
in
pop
into
adc
mov
insl
jae
dec
stc
and
movsl
rol
and
mov
sub
and
js
pop
add
movsl
xchg
out
dec
popf
xor
test
pop
mov
mov
cmc
pushf
ret
mov
and
loopne
int
cmp
dec
add
lret
and
mov
push
xchg
mov
mov
clc
ret
and
pop
push
and
imul
les
adc
stos
jnp
sti
dec
negb
mov
add
and
sbb
scas
sarb
cmp
push
arpl
cmp
sub
cmp
fdivs
mov
fcmovu
jb
adc
pushf
rol
lds
mov
cltd
cmp
cmp
mov
mov
sub
jns
push
pop
and
inc
sub
xchg
lahf
sub
inc
lret
mov
test
enter
push
iret
and
xchg
sar
shlb
mov
scas
mov
rcrl
mov
jle
jmp
pop
xor
cmp
fbld
xor
xchg
stos
fidivrl
push
xchg
ss
sbb
shlb
dec
test
fdivs
pop
adc
mov
out
xchg
lcall
insl
mov
in
jp
add
sbb
andl
push
sbb
pusha
or
lock
aad
in
inc
loopne
pop
or
push
in
cld
repz
lods
add
out
outsb
bound
sbb
jb
sub
push
jmp
dec
cwtl
clc
jbe
shl
scas
xchg
sub
dec
sbb
and
hlt
es
out
xlat
mov
dec
sub
pop
sbb
fildl
sub
push
mov
int3
sub
cmpsb
and
inc
adc
add
scas
mov
lcall
in
cs
roll
sbb
cmp
pusha
hlt
pop
mov
imul
dec
outsl
pushf
dec
out
adc
scas
lret
or
cmp
aam
in
lret
aad
setge
cli
loope
daa
adc
lds
lret
arpl
cmpsl
sbb
clc
add
dec
stc
scas
int3
stc
lds
sub
lahf
pop
mov
or
outsb
xchg
imulb
into
mov
scas
pop
jmp
fucomip
adc
and
jp
fwait
and
push
out
mov
push
cmpsb
cmc
cmpsl
loop
jae
sbb
mov
sbb
push
cmp
bound
enter
xchg
imulb
push
jnp
cli
std
mov
stos
shr
aad
fcoms
ds
xchg
arpl
sahf
mov
addr16
divl
inc
scas
lret
add
mov
mov
lret
jne
stos
or
sbb
addr16
mov
cmp
dec
dec
sbb
std
test
aas
imul
cmp
adc
adc
into
xor
movsl
cmp
add
lret
addr16
lock
std
ljmp
xor
repnz
loope
sbb
jnp
in
xor
jp
in
dec
repz
jg
test
jmp
dec
inc
adc
rcrl
mov
es
jne
and
jnp
add
pop
or
leave
lret
jle
mov
sbb
je
mov
ss
pop
lods
and
out
scas
mov
outsl
xor
add
addr16
add
dec
xor
sbb
mov
repnz
jbe
sbb
sbb
jo
lea
stos
xchg
ret
jl
jl
jg
pusha
mov
fwait
dec
js
jbe
aaa
out
into
je
pusha
js
add
ret
mov
push
mov
pop
cld
out
pop
and
pop
scas
rep
adc
mov
shlb
mov
jne
mov
repnz
jmp
pop
outsb
bswap
mov
ret
fbstp
or
pop
pop
and
cmpsb
xor
and
adc
pop
in
push
push
insl
in
pop
cmp
fisubs
arpl
xchg
movsb
pop
sbb
nop
movsb
xchg
fiadds
push
adc
shl
adc
cld
das
jg
sub
xchg
cmp
fcoms
cld
cltd
mov
push
ret
repz
mov
jno
jae
mov
bound
sbb
cmpl
push
mov
repz
aam
pop
inc
mov
int
inc
sub
scas
pop
pop
scas
or
mov
jp
jno
push
add
or
aam
es
adc
dec
insl
sbb
bound
sbb
and
mov
mov
push
or
nop
ret
das
xor
mov
jne
sti
push
push
std
fisubrl
xchg
pop
sub
inc
mov
sub
xchg
jl
pop
mov
cmp
sbb
mov
ja
mov
js
jb
push
inc
dec
aaa
dec
mov
nop
lcall
call
std
xchg
pop
jbe
lea
cwtl
out
sbb
sub
push
nopl
or
mov
loope
sub
out
sbb
cmp
out
test
insb
mov
ret
mov
ss
dec
sub
sub
add
jb
lret
sbb
mov
test
pop
subb
insb
dec
insl
sti
dec
mov
rorl
das
or
sbb
test
sti
xchg
cs
mov
or
cmc
movsl
mov
test
inc
push
pop
stc
mov
and
jo
hlt
movsb
js
sub
sbb
cs
lret
jno
cmpb
lcall
sub
mov
mov
push
lahf
mov
std
push
call
inc
daa
scas
mov
imul
in
sbb
inc
fsubrl
jp
inc
dec
mov
inc
jmp
loopne
arpl
mull
sarl
fnsave
mov
ds
fs
lds
jl
xchg
dec
cmpb
ljmp
cmpl
jl
xor
lea
or
dec
jmp
in
dec
adc
popf
sbb
pusha
jle
and
inc
je
repz
sub
pop
mov
cmp
push
inc
xchg
xchg
mov
out
loopne
inc
adc
ss
xor
int3
popa
sti
cltd
pop
sbb
nop
insb
orl
icebp
mov
and
mov
mov
sarb
xor
inc
add
pusha
int3
in
out
pusha
lock
or
sbb
cltd
aaa
or
loope
in
clc
jnp
xchg
cmp
adc
test
push
lds
fiaddl
sahf
test
pop
pop
add
repz
sub
inc
xor
test
lods
and
iret
ret
sbb
arpl
xor
dec
cs
cmp
sbb
cmp
sub
add
lock
sub
js
test
pop
jl
dec
mov
sbb
ja
lea
xchg
xchg
jne
fcmovne
sarl
shl
idiv
xchg
mov
mov
repz
test
fwait
jne
outsb
imul
pop
and
ret
pop
out
daa
mov
popf
out
cltd
push
rcr
sbb
push
push
inc
xchg
push
or
jae
lahf
ss
xor
call
outsb
or
lods
std
cmp
mov
ficomps
stos
xchg
push
sub
xlat
int3
jno
push
test
push
aam
arpl
in
dec
mov
fdivs
sti
cs
dec
sbbb
call
dec
aam
hlt
vpcmpgtb
push
aas
fdiv
inc
mov
xor
sbb
movsl
test
repz
call
mov
mov
stc
fdivrs
mov
in
aas
push
movsb
inc
cltd
mov
pop
repz
out
stc
xchg
ds
stos
call
stos
jmp
and
sarl
in
fdivrl
test
out
mov
subb
gs
loopne
les
xchg
jnp
pop
ret
shlb
dec
add
ja
out
les
mov
inc
mov
out
dec
lcall
inc
loop
mov
mov
in
repz
enter
insb
xchg
aas
out
ljmp
loop
add
jb
jmp
push
dec
inc
sbb
iret
pop
xchg
scas
scas
xor
imul
mov
loop
in
cmp
pop
xchg
insb
out
mov
mov
fistpl
mov
mov
pop
inc
and
inc
inc
xchg
mov
or
movsl
stc
shrb
andb
pop
int
outsb
xchg
jle,pn
test
sbb
mov
and
int
and
int3
dec
pop
fs
sbb
ret
out
outsb
sbb
pop
mov
test
add
rcll
mov
xor
test
sub
lret
insl
gs
les
jns
adc
stc
inc
xor
cli
adc
push
call
or
adc
and
iret
and
imul
jno
and
sbb
adc
push
sti
mov
pop
das
scas
ficompl
adc
aad
movsb
je
nop
cmp
push
mov
jge
mov
mov
sbb
repz
ss
pop
jp
push
inc
out
dec
add
rorb
sub
adc
lods
mov
sarb
out
pop
mov
movsb
xor
jp
dec
in
inc
ljmp
xchg
or
into
or
pop
or
stos
cmp
test
ds
dec
scas
jmp
in
add
cmp
jne
icebp
add
mov
or
add
push
cwtl
xchg
inc
in
cli
pop
cmp
jno
jge
xor
cmp
nop
sub
addl
arpl
das
arpl
sub
insb
inc
jmp
mov
push
jns
dec
jb
ja
dec
dec
lods
or
push
imul
add
push
addb
icebp
loope
mov
insb
shll
push
mov
adc
push
sub
fbstp
movl
push
ss
sbb
pop
hlt
das
mov
jmp
cmp
jno
jno
or
add
xchg
test
add
test
loope
sbb
dec
idivl
daa
dec
std
mov
mov
push
dec
add
pushf
pop
push
test
loop
sbb
dec
loop
movsl
mov
test
call
stc
add
sub
inc
dec
shl
mov
jmp
lret
movsb
sbb
out
out
leave
jg
aaa
fistl
or
test
mull
sbb
lcall
cmpsb
sbb
popa
fldt
pop
popf
cli
lret
in
lea
adc
inc
mov
cmpsb
mov
test
lret
cmp
ffree
outsl
iret
int
mov
inc
adc
jno
mov
std
cltd
xchg
cld
adc
mov
rcrb
repz
lret
inc
stos
xchg
cmp
int3
jbe
outsb
mov
mov
int3
loopne
ljmp
xchg
into
hlt
sarb
std
jne
shrl
sahf
jle
dec
jl
test
cmp
fmuls
fnstsw
mov
dec
dec
dec
push
andl
push
push
xchg
inc
test
mov
in
repnz
scas
mov
adc
enter
in
cmp
lcall
bound
cltd
out
lods
stos
cmp
imul
cli
xchg
test
cmp
push
hlt
push
fstps
sti
pop
in
push
jge
inc
adc
popa
dec
adc
fistpll
mov
ja
xchg
and
sub
shrl
push
fistps
stos
mov
or
sbb
mov
sti
jmp
cmp
or
mov
stc
mov
sub
movsl
subl
or
sbb
cmp
xor
in
pop
repnz
in
rcll
xchg
mov
popf
mov
pop
jbe
les
movsb
ret
call
lods
mov
cmp
xchg
lods
jl
pop
mull
loope
scas
adc
shlb
loopne
cwtl
inc
lods
add
jb
insl
or
enter
out
mov
cltd
mov
and
mov
inc
pop
ja
lahf
pop
adc
ljmp
mov
imul
addr16
xor
rcl
mull
xchg
daa
in
pop
fdivrp
dec
pop
inc
out
and
fs
mov
in
aaa
das
leave
call
jo
jnp
xor
stos
xchg
xchg
xchg
cmp
orl
sahf
hlt
fildll
pop
add
lock
xchg
dec
lea
push
adc
mov
jmp
leave
mov
sub
leave
addr16
and
ja
out
js
push
push
push
aad
out
pop
mov
in
jmp
js
jnp
add
ja
xor
dec
cli
mov
into
add
push
xchg
stc
mov
mov
popa
scas
mov
xchg
clc
push
mov
inc
fdivl
mov
or
lea
sub
nop
ljmp
jp
icebp
fwait
bound
dec
movsl
pop
inc
aad
sbb
jb
mov
jmp
stc
and
xchg
dec
ror
cmp
jb
jb
movsb
scas
pop
int
mov
mov
loop
dec
adc
out
adc
jge
mov
inc
flds
in
dec
loope
xor
push
icebp
stos
add
out
lret
xchg
mov
push
cmpl
nop
pop
cmp
out
push
sub
mov
in
cmp
xor
fdivs
or
ljmpw
jecxz
cmp
xchg
popf
jo
stos
test
iret
cltd
fisubs
repnz
fldt
js
cmpsb
inc
loopne
jno
scas
jg
sti
jb
push
fmuls
xor
cli
push
sub
scas
xor
adcl
mov
mov
push
xchg
mov
shl
iret
pop
mov
data16
xchg
inc
je
xchg
sub
push
mov
ffree
js
int3
sahf
cmp
adc
or
jge
sbb
and
incb
mov
nopl
xor
pop
or
dec
inc
je
ss
sbb
xor
cltd
push
inc
pop
mov
mov
popf
repnz
xor
mov
sti
fs
enter
and
xchg
dec
test
push
sub
mov
sbb
leave
test
ret
aaa
adc
icebp
stos
inc
lret
out
xor
int
xchg
cs
mov
das
dec
gs
gs
jbe
cmc
imul
mov
xor
add
dec
dec
pop
or
push
adc
adc
xchg
cmp
jns
add
sbb
inc
sti
push
mov
je
dec
dec
test
repz
dec
mov
mov
xchg
and
or
fsubl
popf
xchg
fdivrl
push
hlt
outsb
add
sub
xchg
pop
fiadds
testl
imul
dec
sbb
fwait
jg
pop
pop
push
insl
xor
adc
lret
push
sub
inc
ss
daa
in
and
cmpsb
cmpsl
lret
arpl
pushf
mov
adc
mov
int3
inc
xchg
sub
ljmp
xor
test
dec
loope
cmp
pop
xchg
and
aad
loope
les
jno
sahf
and
ljmp
pop
test
in
into
push
xchg
in
add
add
rolb
sbb
sbb
out
out
ja
ss
push
mov
cmp
mov
lods
cmp
test
xchg
and
or
test
push
xchg
push
jo
push
sbb
sahf
mov
shll
inc
leave
shufps
dec
dec
add
pop
imul
stos
loop
cmp
fwait
ds
in
xchg
and
rolb
xor
ret
imul
adc
jnp
int
lret
fsubp
jnp
push
and
xor
sbb
movsl
add
fsubrl
dec
mov
js
mov
mov
dec
adc
or
rcr
in
test
jle,pn
xlat
pop
and
das
xlat
outsb
les
gs
int3
aad
scas
lods
sub
jecxz
cltd
jb
lods
cs
or
pop
mov
aad
jo
add
xlat
fiadds
pop
imul
xlat
push
lods
ret
sahf
clc
xchg
add
lods
push
bound
arpl
outsb
movswl
jge
cs
and
or
mov
add
adc
cmpb
popa
xor
and
cmpsl
cltd
sub
xor
mov
int3
jmp
out
hlt
pop
dec
dec
out
movsl
lret
jp
dec
loopne
lock
in
xchg
testb
inc
adc
jne
shrl
lcall
mov
shll
cli
jb
mov
test
outsb
shrb
adc
fldt
shrl
mov
das
subl
dec
cli
and
clc
inc
sbb
leave
fs
and
xchg
sub
into
repz
mov
xchg
and
adc
les
mov
out
cmp
cmpsl
xor
test
in
loopne
pusha
int
arpl
mov
mov
jg
mov
orl
fwait
orl
mov
idivb
out
fstp
cmpsb
mov
pop
nop
int3
les
cmp
dec
and
jo
enter
loopne
adc
jg
je
repz
mov
stc
test
or
rorb
in
push
mov
out
mov
ja
cmp
scas
dec
sbb
push
popf
fidivrl
inc
jle
fisubl
test
dec
and
test
push
imul
loop
pop
or
icebp
cli
xor
xchg
xchg
adc
arpl
fwait
addb
lret
mov
outsb
fsubrs
or
rcrb
dec
push
movsb
or
outsl
mov
xor
insl
shrb
sbb
mov
sysexit
jb
cli
dec
jle
push
or
or
add
ja,pn
and
push
xor
js
inc
imul
movsl
push
icebp
mov
aaa
clc
fimuls
adc
cmpsl
jbe
movsb
push
test
movsl
sbb
jl
inc
int
out
rcrl
idivb
push
jne
cli
mov
stos
push
aam
pop
add
mov
repz
leave
std
mov
and
dec
subl
int3
aam
inc
mov
xor
inc
sbb
in
fisubs
rsqrtps
stos
es
fstl
js
xor
mov
jnp
lock
push
inc
dec
sbb
lods
in
icebp
xchg
mov
jle
aam
fs
movsb
mov
cltd
lods
loopne
add
adc
aad
jbe
mov
into
testl
lods
sub
movsb
js
cld
lret
lock
xor
ljmp
dec
xchg
mov
adc
loop
xchg
leave
cwtl
std
bound
pusha
inc
jne
jmp
iret
add
xchg
ja
dec
clc
pop
mov
nop
and
outsb
and
jmp
int
pop
nop
mov
mov
aam
mov
jne
jbe
sub
jne
cmp
mov
fdivl
nop
imul
mov
arpl
fstpt
pop
fs
loopne
xor
push
jg
and
cmp
push
cmp
dec
shl
xor
xor
in
rol
sbb
call
push
sbb
test
pusha
cmp
pop
iret
fisubl
inc
addr16
dec
and
int3
ss
cmc
push
mov
mov
or
popf
daa
and
mov
iret
or
dec
fcomps
andl
inc
pop
addr16
or
ds
rorb
outsl
inc
jae
sti
mov
xor
pop
gs
sbb
lcall
mov
xor
cmp
lds
add
fcomps
and
sub
lret
leave
fildl
dec
das
sub
mov
in
mov
repz
inc
ficoml
outsl
xchg
or
sbb
mov
iret
pop
aam
inc
pop
push
dec
ds
inc
push
xchg
adc
xlat
xor
outsb
pop
dec
test
sub
das
fistpll
xchg
mov
hlt
xchg
or
jmp
cmp
and
lcall
inc
fwait
ret
psllq
jne
stos
sub
add
bound
daa
mov
sbb
add
jne
mov
pusha
mov
mov
and
xor
jle
aaa
or
sarb
add
ret
push
popa
pop
leave
shll
cmpsl
outsl
push
fisttps
movsl
ret
ja
cli
aad
jno
xchg
dec
mov
and
add
das
add
enter
out
scas
mov
mov
inc
sahf
or
test
sti
xlat
lock
push
mov
sub
pop
adc
div
filds
or
arpl
outsl
cmp
int3
jp
sub
not
std
xchg
mov
negl
data16
and
mov
mov
sti
inc
and
popa
addr16
xlat
sbb
xor
or
inc
fnstcw
enter
push
sbb
lcall
sti
push
mov
jle
pop
pushf
sbb
test
test
rorl
jle
xor
push
std
adc
mov
cld
movsl
cs
inc
cld
pusha
scas
pushf
sti
push
push
and
and
jge
testb
popa
jae
mov
and
in
inc
jae
daa
dec
aad
mov
and
js
lret
mov
xor
lret
push
roll
add
cmp
mov
xchg
negl
mov
in
jo
int3
cltd
pop
sub
cmpsb
mov
add
out
inc
loop
in
es
cmc
fildl
mov
mov
mov
lcall
cs
cmpsl
mov
insb
and
dec
mov
jmp
mov
shlb
mov
ret
in
mov
or
add
scas
push
and
out
mov
imul
mov
lret
jo
insl
orl
sub
js
test
cmp
xchg
xor
repz
in
mov
stos
push
cmp
cmpsb
xchg
dec
sbb
inc
fistl
mov
add
cld
movsl
add
aas
out
add
scas
sub
jae
inc
daa
sub
mov
pop
stos
in
fsubs
xchg
xor
push
push
cwtl
subb
xchg
inc
pusha
enter
int3
out
jmp
jg
and
out
xor
shlb
mov
cld
jecxz
imul
mov
add
jns
es
fwait
dec
aad
push
loopne
cld
aaa
aaa
mov
push
scas
dec
inc
cld
dec
nop
ret
inc
insl
xchg
push
or
add
pop
xchg
mov
and
push
xchg
loope
inc
loope
inc
jle
scas
dec
cmp
jns
lods
lret
push
clc
mov
es
les
push
das
xorb
stos
imul
outsl
cld
ljmp
sbb
fnsetpm(287
dec
push
mov
dec
dec
jg
mov
in
pop
mov
scas
mov
aaa
fwait
ret
xor
daa
push
pop
jge
outsl
xchg
push
xchg
cmpsl
addr16
push
xor
sbb
inc
mov
push
mov
or
mov
ljmp
loopne
outsl
inc
and
mov
scas
ret
shl
arpl
adc
push
sbb
out
test
mov
movsb
hlt
dec
in
xor
jb
ror
pop
popa
das
and
lock
xlat
xor
cltd
js
cmpsl
push
inc
ss
imul
imul
test
mov
push
dec
pop
and
jo
outsb
je
dec
jl
pop
cmp
je
sub
dec
outsl
aas
dec
iret
int
in
jle
mov
out
decl
shlb
fldl
or
fcoml
pop
call
xchg
mov
push
out
inc
test
popa
dec
in
sbb
sbb
sub
sub
mov
xor
sahf
out
scas
enter
out
pop
pop
test
push
mov
cltd
retw
sbb
sub
push
enter
jmp
inc
mov
mov
cmp
mov
push
jae
or
in
xor
push
imul
push
inc
rcrl
pop
repz
or
xorb
xchg
mov
fisttpl
xchg
call
fwait
int3
mov
sub
iret
aaa
lock
jne
cwtd
int
sub
push
or
movb
push
scas
loop
jle
testl
gs
hlt
call
lods
ror
sbb
mov
cltd
xor
push
mov
mov
cli
jcxz
test
add
lret
lods
loop
sub
push
sbb
or
and
cwtl
jae
lods
push
enter
sub
mov
mov
pop
nop
pusha
or
push
jae
xchg
shll
lods
or
and
pop
add
in
ret
scas
pop
adc
and
std
std
imul
cwtl
lcall
inc
out
mov
test
int3
dec
jo,pn
dec
jge
cltd
mov
adc
outsl
arpl
mov
movsb
lret
imul
lret
push
and
pop
cmp
xlat
data16
xchg
repnz
cltd
lock
loope
iret
ficoms
pop
and
dec
push
je
jmp
cmpsb
cmp
ret
sbb
cmpsl
xchg
inc
sbbl
mov
pop
jb
lret
into
pushf
push
add
jmp
pushf
aaa
popa
test
sbb
cmp
popa
mov
cmp
cmp
mov
pop
sub
aaa
xchg
push
out
jp
pop
clc
sub
imul
push
push
dec
mov
jns
mov
add
adc
aam
mov
mov
adc
clc
mov
mov
push
int
dec
and
in
sbb
ficoml
lea
lds
xchg
mov
sbb
sub
mov
ljmp
dec
out
sub
xor
in
scas
push
rcll
inc
xor
mov
dec
repz
dec
aaa
mov
mov
mov
lret
clc
movsl
inc
jbe
dec
js
xlat
lahf
negl
inc
in
pop
sbb
data16
push
nop
cmpsl
jno
sub
mov
fcoms
xchg
jle
inc
cmpsb
shll
stc
pop
es
sbb
or
rcl
inc
andl
dec
and
jae
int
adc
jg
into
cli
inc
inc
push
hlt
mov
mov
fwait
in
int3
push
out
inc
lcall
push
in
xor
sbb
cvtdq2ps
mov
pop
inc
mov
add
repnz
rcl
mov
ficomps
dec
adc
das
inc
lcall
dec
test
mov
pop
sbb
rorl
xchg
mov
sbb
popa
data16
sbb
popa
test
es
xlat
ds
loope
mov
sub
or
addb
pop
aam
outsl
out
jp
loopne
mov
xchg
adc
sbb
sahf
cs
mov
dec
icebp
cmp
jbe
pop
dec
stc
mov
mov
mov
fs
fs
sub
xchg
mov
inc
jo
sub
imul
cltd
jp
sub
jl
loop
ret
pop
fldenv
and
or
lret
dec
mov
jmp
jle
shrl
lods
jg
mov
sub
les
cmp
mov
stos
das
mov
push
dec
mov
add
mov
in
add
rorl
mov
outsb
and
or
cmp
mov
dec
dec
cmp
xchg
insb
and
xor
icebp
les
and
jmp
fnstcw
xchg
xchg
test
push
xchg
jbe
mov
adcb
fisubs
adc
out
stos
movsl
mov
jle
cmp
scas
shlb
icebp
xor
push
popf
mov
pusha
pop
add
dec
jg
sti
ljmp
adc
pop
ret
or
add
inc
mov
rcr
into
sbb
pop
aam
mov
ljmp
mov
clc
or
dec
loope
pop
gs
dec
cs
dec
fsubp
mov
bound
dec
xorl
jb
mov
dec
xchg
xchg
xchg
or
cmpsl
shlb
xchg
scas
mov
push
rorb
xchg
sub
sub
jbe
sub
jbe
push
xchg
add
dec
mov
xchg
xlat
lock
das
pop
inc
testb
mov
add
xchg
jmp
iret
push
pop
pop
push
dec
dec
lods
cmp
aaa
iret
xlat
jle
cmp
rorb
aad
and
jecxz
xlat
dec
mov
add
pop
aas
cmp
inc
adc
in
push
data16
jle
inc
negb
jns
pusha
int3
scas
or
or
sbb
rclb
sbb
inc
adc
mov
push
xorl
test
outsb
dec
dec
addr16
fsts
int3
and
imul
add
les
or
mov
xorl
cmpsb
mov
sub
enter
popf
scas
mov
xor
test
stos
les
les
dec
mov
sti
sub
popf
mov
lods
mov
repz
data16
jb
pop
mov
int
sbb
and
jmp
mov
xor
xor
sar
and
fisubs
inc
enter
add
sti
add
mov
mov
les
xor
arpl
das
lock
clc
stos
adc
pusha
and
sub
int3
xchg
sub
and
sbb
and
insb
cli
xchg
test
push
jns
stos
ret
fs
pop
popa
filds
sub
call
lcall
cmp
es
mov
movsb
sub
sub
xchg
lret
push
test
jl
addr16
cmp
loop
fstps
push
sub
xor
pop
or
addl
inc
push
sub
xor
outsl
lcall
mov
or
inc
rcrb
lahf
mov
or
je
insl
dec
ja
cmpb
fiaddl
je
mov
push
sub
xlat
xchg
mov
outsb
jae
add
stc
ret
or
je
sbb
jne
mov
into
inc
mov
xor
aaa
fs
push
mov
pop
mov
aaa
imul
fstl
lcall
sbb
pop
and
or
jae
in
fidivrs
cmp
rolb
dec
aam
sbb
cmc
sbb
pop
xchg
cmp
lret
pop
pop
test
inc
pop
addr16
add
enter
lea
fcoms
push
mov
lock
out
mov
idiv
push
mov
jle
dec
cmpsb
inc
adc
in
aas
xor
js
fstl
pushl
mov
pop
outsl
cli
pop
int
dec
sarl
popl
mov
repz
jmp
sub
mov
ss
pop
scas
mov
add
cwtl
add
mov
testb
movsl
in
mov
fs
push
test
push
push
add
add
sub
pusha
or
fisubrl
pop
insb
gs
mov
rclb
ss
dec
out
mov
inc
add
inc
sahf
fisttpll
lds
xchg
loope
lahf
lret
and
mov
xchg
xor
std
xor
lea
sub
outsl
or
push
dec
subl
sahf
lcall
dec
jae
in
in
dec
call
jno
pushf
push
pop
jns
ret
and
cmpsb
das
addr16
in
sbb
push
pusha
mov
pusha
fnstenv
out
xor
loop
lret
xor
dec
jnp
sub
mov
adc
daa
push
popf
and
cmp
push
stos
addl
adc
aas
aaa
push
popa
mov
cwtl
sbb
ss
sbb
insb
push
mov
repnz
cmp
loopne
push
int3
adc
push
ret
cmpsl
je
fistpl
adc
inc
or
sahf
pop
xor
xchg
dec
shlb
xlat
mov
jb
std
xchg
or
mov
mov
ja
lea
fmul
adc
lds
ss
aad
jle
and
xchg
jno
sarb
lods
and
test
ljmp
adc
jmp
ds
out
xchg
and
add
hlt
xlat
pop
orl
gs
push
jo
xchg
jp
pop
jmp
jno
rcr
cmpsl
rcll
push
mov
sbb
adc
inc
jge
addr16
push
xor
cmp
or
inc
inc
test
in
subb
push
cmc
mov
subl
fsub
push
add
add
pusha
jnp
nop
loope
xchg
mov
cs
clc
repnz
sub
xchg
xor
js
xchg
xor
pmuludq
mov
adc
xlat
lods
andb
test
dec
aad
outsb
in
lret
mov
mov
mov
je
das
sbb
shll
xor
lcall
sub
jmp
movsb
loope
push
pop
fs
xor
push
mov
daa
or
mov
xchg
inc
inc
ds
or
fnstcw
cld
fildll
dec
out
pushf
push
ss
scas
call
mov
ficoml
mov
subl
sub
repz
and
stos
mov
mov
cmp
adc
stos
sub
cmpsl
jecxz
jae
cmp
jbe
push
inc
test
mov
jp
ret
outsb
sbbb
fdivl
push
cmpsb
xchg
push
mov
ret
sub
pop
loope
or
add
xchg
push
lods
ja
out
jno
mov
jbe
mov
mov
mov
jmp
cmp
sub
cld
pop
mov
and
mov
out
sub
lods
ret
lahf
inc
sub
dec
sbbb
sub
mov
bound
sbb
xlat
cmpsl
fistps
fcomps
stc
mov
outsl
mov
jae
lahf
pop
sub
ret
xchg
push
mov
cmp
xchg
in
cwtl
xor
push
dec
mov
les
adc
lods
sbb
add
shll
mov
inc
xor
movsb
pop
in
fbstp
pop
xchg
ja
mov
pop
or
adc
mov
push
arpl
adc
outsb
out
lds
mov
aas
and
mov
lahf
push
pop
adc
popa
imulb
sbb
arpl
call
jns
cmp
xorl
test
aam
cltd
or
sbb
xlat
and
mov
lcall
sub
insl
sbb
mov
pop
pushf
push
mov
push
xchg
sub
inc
pop
xchg
shll
sub
icebp
pop
data16
push
dec
fistpl
out
xor
and
sti
inc
or
sub
or
loop
cmp
and
shlb
xchg
pop
or
mov
push
jne
inc
mov
daa
cmpsl
pop
jl
push
mov
sub
pop
add
mov
or
xor
fs
mov
mov
jo
pop
xlat
dec
cmp
mov
cmp
and
int3
call
cmpsb
lret
or
cmp
and
scas
push
nop
jbe
iret
pop
mov
mov
xchg
sti
ja
lret
stos
addb
rcr
shr
int
cmp
jmp
lock
aas
mov
insl
cli
data16
negb
icebp
ret
aad
mov
xor
inc
push
outsl
fsubrp
mov
sub
rcrl
incb
lds
lock
xchg
pop
mov
repnz
adc
dec
test
in
fdivrp
push
in
add
jge
fbld
push
push
pop
mov
or
int3
insb
mov
scas
mov
push
shlb
dec
std
adc
dec
icebp
push
mov
int3
mov
push
sub
insb
pop
inc
xchg
push
sti
pop
jb
cltd
jge
vpmaddwd
in
lcall
insl
inc
inc
bound
fldt
jns
xlat
mov
push
mov
outsb
dec
shlb
cmp
repnz
pop
stos
add
pop
test
dec
xor
dec
aas
and
pushf
xchg
jno
mov
lods
push
cmp
pop
aam
sub
mull
bound
outsl
test
icebp
and
lock
test
imul
or
mov
mov
cmp
push
pop
xor
xchg
pop
mov
pop
cmpsb
pop
inc
pop
pop
vpslld
mov
jmp
lock
mov
sub
or
sbb
pusha
jnp
sub
jg
gs
mov
sbb
jp
cltd
sub
sub
lods
mov
iret
test
mov
das
gs
sbb
add
sub
inc
in
push
lret
notl
jl
push
push
insl
sbb
aaa
jae
es
jle
xlat
cmp
popf
mov
add
fmuls
lods
in
push
xchg
push
jb
aad
popa
shrb
ss
push
jo
pop
and
fdiv
std
sbb
add
loop
movsb
dec
mov
cmp
sti
sub
ljmp
insb
pop
or
mov
mov
loopne
hlt
mov
sahf
in
enter
inc
ret
ds
pop
jmp
push
fidivl
jge
dec
xor
or
inc
loope
icebp
leave
fistpl
xchg
inc
adc
fildll
and
mov
filds
pop
aas
inc
mov
push
mov
pop
xchg
xchg
popf
dec
stos
mov
divl
sahf
inc
mov
fdivs
ficoml
in
mov
xor
inc
mov
or
xor
jne
sbb
cmpsb
jne
push
add
xchg
dec
dec
lock
inc
and
pop
sub
aam
sub
add
aaa
cmp
add
push
pop
jecxz
xor
cmp
rclb
adc
xchg
mov
xchg
insb
sbb
sbb
add
fsubrl
dec
or
roll
stos
pop
cmp
scas
xor
mov
sub
pushf
mov
outsl
popfw
dec
lret
out
mov
stc
adc
cmp
pushf
push
adc
loopne
int
in
push
cmp
lods
pop
addr16
push
jecxz
stos
hlt
fidivs
stos
xchg
push
dec
insl
adc
loope
cmp
push
cwtl
div
sbb
out
inc
mov
or
pop
add
fiadds
push
out
shlb
cld
in
aam
xor
pop
xor
lahf
mov
pop
test
mov
and
cs
mov
inc
divl
xlat
pusha
or
out
lahf
imulb
divb
mov
mov
jmp
es
hlt
mov
push
insb
lock
xlat
sub
aaa
les
aaa
ljmp
jge
les
adc
stos
mov
xor
fcomps
stos
das
test
pop
sub
inc
mov
and
xlat
pop
js
js
sbb
popf
push
mov
xor
andl
pop
outsl
dec
push
sub
out
jbe
or
mov
fidivrs
sbb
push
ret
outsb
bound
mov
or
sti
mov
ljmp
mov
sub
mov
pusha
pop
out
push
ljmp
mov
sbb
loop
mov
cmp
call
mov
cli
lret
xor
out
mov
stos
nop
or
loop
pop
pushf
sbb
xchg
add
adc
mov
mov
push
rcll
loop
mov
popf
jbe
iret
push
jg
sarb
outsb
mov
xchg
sub
xor
and
movsb
ss
aas
stos
stc
xchg
cmc
cmp
subb
rclb
je
pop
cmp
jg
dec
push
xor
pop
xchg
jo
pushf
lods
fldt
leave
mov
test
sbb
mov
dec
inc
es
pop
or
mov
xchg
pushf
push
mov
xchg
push
pop
shrb
and
pop
inc
jg
push
lahf
stos
jp
add
in
mov
pop
dec
jg
pop
xchg
pop
mov
lock
mov
inc
lds
out
dec
cmpb
icebp
ret
and
sahf
mov
inc
imul
loope
mov
out
pop
aas
clc
in
pop
incl
in
pop
mov
fdivs
mov
sbb
jg
mov
ljmp
lods
fsts
out
cmc
pushf
and
sahf
mov
push
mov
leave
sbb
mov
dec
add
pop
adcl
test
call
dec
dec
int
dec
cmpl
enter
xlat
xor
data16
ret
out
push
test
xchg
test
pop
insl
movsl
or
sbb
clc
iret
or
sbb
fsubl
test
inc
in
test
mov
or
mov
xor
or
addb
cmp
fidivrl
pushl
int3
inc
cmpsb
lret
lret
std
sahf
inc
mov
sub
iret
mov
ret
mov
shrb
fistpll
mov
jo
or
call
add
inc
lods
call
pslld
inc
lcall
call
bnd
sbb
dec
cmp
sti
add
pusha
pusha
xor
jnp
inc
dec
cmp
fldcw
lods
inc
fcoms
add
dec
jmp
mov
mov
loopne
cmc
mov
cmp
push
push
adc
jle
xor
adc
jp
imul
mov
dec
insl
jne
xor
nop
imul
out
xchg
push
jp
mov
repnz
adc
mov
xchg
out
inc
shll
sub
jns
mov
aad
in
xchg
aaa
dec
cmp
aas
arpl
lods
flds
fs
dec
jns
fnsave
aad
das
repz
mov
dec
shr
jbe
dec
mov
add
je
clc
cltd
data16
repnz
cs
incl
out
mov
ret
push
nop
xor
mov
loopne
cltd
sbb
jg
stos
jae
aam
sub
ret
mov
lods
imul
out
sub
cmpsl
lcall
enter
cmp
cli
mov
shll
into
test
mov
cmp
push
popa
xor
test
scas
pushl
popa
fs
cmp
xor
or
cmp
mov
jl
mov
jbe
inc
aaa
outsb
jae
test
sbb
sbb
cmp
jl
sbb
scas
loop
mov
pop
inc
loope
mov
insb
fwait
scas
or
or
jg
cmpsl
push
mov
jns
pop
out
lret
pop
mov
in
testl
add
jbe
icebp
insb
and
std
xor
pop
test
ss
loope
scas
into
pop
cmp
push
fdivrs
pop
movsb
fs
sub
sub
jmp
mov
fwait
call
leave
or
popa
iret
loop
sbb
scas
loopne
jg
jno
jbe
jb
jb
push
mov
sahf
repz
dec
arpl
imul
pop
ret
xchg
cmovge
sub
jbe
mov
xor
mov
sub
mov
mov
cwtl
out
ljmp
bound
divb
xor
mov
mov
clc
mov
xchg
inc
add
add
push
aam
sbbb
aas
push
lret
out
xchg
and
mov
sub
adc
and
mov
mov
out
add
mov
stc
add
adc
inc
pop
icebp
jg
push
jecxz
dec
adc
fwait
lea
call
inc
test
or
push
sub
pushf
mov
or
int3
jge
jp
cmp
pop
mov
jle
aas
xchg
sbb
xchg
les
sbb
ljmp
popf
lods
cmc
mov
cmpsb
push
cwtl
fbld
push
sti
popf
push
push
and
or
mov
add
dec
push
fwait
cmp
cwtl
xchg
cmp
shll
sbb
test
sub
in
rorb
jp
ror
mov
rorl
pop
push
xchg
mov
pop
add
inc
fadds
mov
pop
cwtl
inc
push
mov
enter
insb
adc
dec
cmp
dec
jbe
pusha
sbb
into
jne
xchg
push
jl
popa
divl
jge
xor
test
mov
cs
es
in
sub
and
pop
xlat
sub
lcall
fs
push
fidivrs
sub
hlt
jmp
xor
lret
stos
push
mov
imul
mov
imul
mov
lcall
jne
cltd
mov
mov
test
mov
push
sub
mov
aas
push
xor
std
xor
dec
sbb
push
out
pop
repnz
mov
icebp
add
and
adc
push
xchg
repz
add
cmp
aaa
orb
fprem
inc
repnz
mov
mov
les
sahf
sub
cli
in
loopne
mov
fs
pop
pop
popf
or
ret
gs
pop
push
testb
lods
pop
cmc
cmp
stos
cmpl
mov
pushf
jns
cmp
adc
or
cltd
movsl
or
daa
ret
xor
or
loope
jne
std
and
xorb
es
jns
shll
fadds
test
data16
adc
mov
mov
mov
mov
mov
or
mov
sub
adc
sub
dec
adc
adc
int3
mov
xchg
inc
test
xchg
cli
sbb
pop
push
sbb
lcall
test
jg
jmp
scas
push
jno
outsb
jns
aad
lret
ja
std
jmp
push
xor
mov
mov
sti
fdivr
adc
mov
sbb
push
mov
lods
jecxz
mov
add
movsb
pop
push
mov
xchg
pop
adc
repnz
stos
sahf
div
cmp
jg
pinsrw
cmp
push
sbb
xor
call
fldl
call
insb
test
jno
jl
inc
push
hlt
cli
cli
lock
jle
lret
ret
push
push
sub
xchg
aas
hlt
push
mov
out
lret
outsl
cmp
dec
add
sbb
bound
lods
sahf
xchg
jnp
xchg
fdivl
push
jge
jmp
test
out
arpl
jae
pop
push
mov
inc
inc
xor
mov
push
ja
dec
push
xor
cmp
in
loopne
xor
cmp
fildl
inc
push
dec
jo
dec
dec
cmp
outsb
push
mov
enter
dec
nop
lret
cmpsb
mov
sahf
mov
fsubp
adc
outsl
mov
pop
push
cmpsw
adc
leave
comiss
xchg
imul
cli
nop
sbb
xchg
and
je
mov
xchg
add
sub
sbb
bound
repnz
pop
add
sbb
inc
cmp
inc
inc
test
addr16
sub
mov
rolb
push
mov
sbbb
mov
fidivl
addr16
xor
mov
or
mov
xlat
pusha
push
jbe
icebp
xchg
xor
fcompl
out
outsb
mov
xchg
and
negb
fdivs
xchg
mov
jo
push
test
dec
cmp
rcr
repnz
popa
xchg
nop
imul
add
fildl
add
jae
call
add
arpl
push
aad
leave
mov
repz
test
pop
pop
xor
mov
inc
in
imul
xor
mov
adc
xchg
mov
sub
add
js
push
int3
into
push
push
push
sbb
xor
test
cmpsb
data16
ror
push
push
shlb
mov
dec
adc
pop
inc
or
lds
mov
mov
or
mov
mov
sub
and
cltd
inc
mov
out
insb
and
je
push
iret
int3
push
mov
inc
adc
ds
scas
aas
cmp
movsb
inc
jmp
adc
cltd
les
mov
mov
xchg
out
lcall
addr16
mov
sbb
mov
fsubrs
add
fdivs
je
idivl
aaa
sub
nop
pop
std
mov
dec
int3
test
movsb
mov
das
hlt
aam
int3
leave
mov
scas
adc
shll
popf
push
mov
divl
cmp
loope
adc
jno
mov
lret
mov
adcb
outsb
in
test
sbb
xor
cmp
mov
dec
xchg
pusha
xchg
les
mov
mov
imul
pop
das
ja
sub
lea
sbb
movb
or
pop
mov
push
sahf
jno
jno
or
roll
mov
dec
gs
add
fnsave
test
je
ds
cltd
mov
sbb
mov
jp
inc
divb
call
stos
call
lea
idivb
sbb
int3
in
fsts
sti
push
inc
test
mov
cmp
push
bound
jns
pop
sub
hlt
insl
inc
xor
cmp
cmp
push
stos
mov
inc
push
or
and
xchg
divl
stos
repz
clc
cmc
jl
xor
testl
ret
daa
cmp
xor
jg
lds
hlt
cmp
dec
sub
mov
cmp
jl
push
in
into
sub
mov
inc
mov
dec
inc
ds
xchg
sbb
and
or
adc
lea
and
cwtl
xchg
push
mov
cmp
aad
cmpsl
pop
cmc
mov
add
push
add
cmp
jnp
cmp
push
scas
dec
ljmp
popa
xchg
jg
sti
rcr
cmp
pop
in
gs
fstpl
jg
in
jp
int
push
jne
es
outsl
ret
cmpsl
imul
push
pop
es
pop
stos
imul
pop
cld
cmpsl
dec
jb,pn
dec
push
mov
sub
out
sub
mov
push
js
lods
or
and
xchg
and
and
xchg
pop
sub
icebp
and
cltd
shlb
rcr
mov
std
inc
jmp
out
mov
pop
mov
mov
adc
xlat
push
out
shlb
mov
and
push
out
cmpb
imull
scas
pusha
test
xor
mov
dec
inc
fnstenv
insl
mov
cmp
repz
in
jnp
shll
fldenv
add
loop
andl
jae
pop
fisubs
aad
jnp
cmp
dec
and
lock
ds
aad
int
inc
pop
pop
div
pop
xchg
mov
cmp
imul
mov
test
jb
push
gs
testb
add
pop
pop
add
mov
inc
push
out
js
pop
clc
push
jno
inc
or
pop
and
sbb
jb
shl
mov
out
or
xchg
shll
mov
call
xchg
jmp
mov
jmp
pop
in
inc
pop
sbb
cmpsb
dec
sbb
fidivrl
sahf
in
mov
mov
jge
and
xchg
xchg
and
xchg
insl
and
jmp
inc
mov
adc
lods
int3
sbb
push
data16
and
shlb
jge
push
dec
and
ret
in
mov
sbb
pusha
iret
sbb
hlt
insl
xor
and
loopw
fdivrl
xchg
push
inc
pop
jne
mov
jnp
inc
xchg
push
sbb
mov
pop
cmpsb
cwtl
movsb
or
xor
rcrl
mov
ret
and
cld
mov
icebp
xchg
xorl
ss
mov
nop
pop
shrb
subb
adc
jmp
nop
fcoml
cli
sar
xchg
mov
sbb
mov
xor
jns
test
mov
adc
subb
popaw
add
gs
mov
call
or
popf
idivl
int
icebp
aad
imul
in
sahf
and
pop
sub
mov
xchg
data16
in
ljmp
adc
jmp
stos
sub
inc
icebp
fldcw
xchg
in
in
cmpsb
jo
add
arpl
xlat
xor
sbb
ss
stc
test
jbe
dec
dec
mov
xchg
frstor
push
xor
pop
mov
into
push
pop
cmp
cmp
sub
mov
sbb
sub
xor
fsubr
and
xor
outsb
aas
push
sbb
and
lret
insl
jbe
mov
mov
mov
cmpsb
pop
ret
stos
xchg
pop
dec
outsb
mov
xchg
push
and
cmp
lret
outsb
cs
push
jl
pop
inc
imul
or
into
cld
sbb
outsb
dec
inc
jo
jno
cwtl
adc
mov
lret
shll
fstps
mov
mov
inc
or
outsb
add
jp
and
cmpsb
mov
adc
dec
or
xor
mov
movsl
insl
xor
jl
pusha
push
arpl
push
mov
add
mov
out
movsl
sbb
dec
out
push
mov
imul
mov
negb
dec
fdivr
flds
pop
cli
mov
sub
xchg
jns
iret
xor
cli
mov
push
icebp
cld
repz
xchg
sti
mov
cmp
ficompl
sbb
out
xchg
cmp
and
int
mov
adc
inc
scas
sbb
in
or
in
or
jmp
mov
faddl
xchg
add
xor
fcoml
popa
push
push
dec
jmp
aad
sbb
addl
mov
dec
inc
push
mov
data16
mov
or
cmp
das
pop
rcl
into
mov
jno
mov
push
xlat
jle
pushf
lret
rcl
andl
hlt
mov
mov
xor
dec
add
jmp
and
mov
fldt
popf
xor
adc
divb
scas
pop
pop
out
rclb
addr16
ds
movsb
jmp
or
pop
fiaddl
inc
and
mov
mov
ret
push
adc
fiaddl
mov
roll
fadds
lret
cmp
loopne
out
loopne
lea
add
jge
sub
adc
ret
mov
xorb
push
stc
inc
push
cmc
xchg
mov
sbb
and
shrl
dec
push
insl
mov
mov
adc
mov
fildl
cmpsb
cwtl
push
pop
mov
imul
test
mov
cmc
test
daa
add
dec
sti
lret
cmp
xchg
addl
add
es
popa
mov
insb
rcrl
les
ret
mov
out
repz
enter
mov
jle
adc
pop
xchg
adc
dec
cli
in
mov
lahf
xchg
or
outsl
out
mov
fsubrp
popa
lods
and
push
call
sahf
push
cmp
dec
popf
sbb
xlat
ret
sub
call
lcall
rcl
xchg
xor
jle
cmpsb
dec
les
lahf
push
xchg
xor
daa
sub
jp,pt
mov
orb
mov
push
and
popf
dec
dec
xor
dec
lret
cmp
inc
cld
sub
cwtl
lds
adc
mov
mov
rol
imul
mov
adc
rcrl
imul
shrl
or
loopne
sti
das
dec
divb
imul
adc
cwtl
cs
mov
aam
mov
mov
push
leave
jmp
dec
shrb
shll
stos
out
xor
dec
and
inc
les
adc
adc
adc
adc
insb
jl
jbe
add
cmpsb
push
sub
lret
daa
imul
push
adc
dec
and
into
fdivrs
or
push
test
mov
mov
fldt
stc
imul
out
lea
dec
test
ljmp
lcall
sbb
rcrb
inc
leave
adc
jge
das
bound
pop
std
hlt
scas
inc
inc
cli
adc
repz
mov
cmp
repz
xor
ja
repnz
push
sbbl
fnstenv
pop
inc
xchg
mov
lods
shll
popa
out
inc
into
lds
sbb
repz
nop
sub
cmp
and
stos
stos
out
fs
mov
add
sbb
push
repnz
imul
mov
and
out
adc
mov
notl
mov
adc
mov
cwtl
lea
push
pusha
sub
fistps
xchg
adc
cld
test
cmp
cli
mov
sub
je
sahf
mov
mov
xchg
movsb
outsb
aad
mov
jg
mov
mov
inc
jmp
dec
xor
aaa
mov
arpl
in
clc
cltd
mov
lds
in
pop
das
jns
sub
insb
mov
std
cmp
mov
xchg
inc
push
lcall
lahf
sbb
orl
loope
mov
inc
or
jno
cmp
sbb
orb
dec
cmp
nop
mov
lods
dec
and
and
push
xchg
mov
fs
lcall
lret
bound
clc
lods
sti
fbstp
cmp
sarl
into
sub
inc
xchg
fxch
fidivrs
push
inc
bound
or
fstpl
cltd
add
ds
data16
ss
int
sub
hlt
in
sub
xchg
out
jecxz
gs
or
mov
fisubl
insl
jno
outsl
test
rcl
rclb
sbb
mov
sbb
or
stos
fbstp
jo
push
pop
fadds
pop
or
dec
test
outsl
xor
inc
pop
leave
xor
jo
popf
movsbl
dec
test
fsub
outsb
jecxz
dec
dec
lods
icebp
mov
inc
inc
jo
or
jle
mov
mov
dec
mov
mov
mov
push
shlb
cmp
mov
mov
call
sbb
xor
scas
outsl
push
loopne
xchg
push
push
xlat
in
fwait
and
dec
and
pop
push
adc
mov
push
push
jne
mov
xchg
mov
in
jb
and
sub
into
mov
xchg
lret
leave
jbe
pushf
dec
scas
data16
test
mov
pop
push
scas
sbb
mov
and
adc
and
mov
das
addr16
xlat
loope
dec
sub
mov
lret
push
lds
mov
sarb
push
xor
dec
adc
insb
jmp
push
lds
cltd
adc
pop
mov
push
in
mov
push
mov
mov
shlb
js
cmp
loop
lods
inc
xor
sub
stos
insl
ljmp
jg
rolb
hlt
sub
data16
jnp
xchg
inc
mov
cmp
stos
jae
pop
sub
jns
imul
test
sbb
testl
lcall
movsl
aad
mov
or
add
out
bound
outsb
movsl
pop
pop
add
and
lock
test
jno
insl
mov
sti
gs
adc
ljmp
sahf
icebp
add
jb
push
or
sub
or
or
arpl
or
sbb
enter
jecxz
cs
add
cmp
out
dec
leave
addr16
mov
aam
outsb
int3
test
push
aam
orb
lret
push
jbe
ret
divb
mov
in
cltd
outsb
aad
jmp
xchg
and
popf
dec
mov
cmpsl
shrb
fs
sbbb
sbb
out
mov
or
push
test
sub
in
jnp
invd
push
push
pop
xchg
icebp
xor
movsb
pop
fistps
iret
inc
push
xchg
cltd
pop
shl
dec
cmp
int
push
or
xchg
sub
sub
js
dec
mov
flds
xor
pop
roll
and
in
sbb
pop
sub
pop
cmp
out
loopne
loopne
dec
or
std
pop
adc
adc
lret
mov
fwait
jo
inc
in
call
aas
and
or
leave
nop
aas
in
enter
jg
adc
sbb
mov
in
xor
ret
ss
push
je
es
xchg
and
jae
xchg
jmp
sbb
insb
cmp
and
pushf
mov
fxtract
add
dec
jge
movsl
lea
push
sbb
nop
cld
sbb
push
xchg
shll
mov
cld
mov
das
add
lea
adc
fwait
jl
test
sahf
add
push
repz
or
inc
fsubrl
xor
iretw
outsb
scas
dec
pop
sub
mov
or
add
cmpsb
das
xchg
ret
add
add
push
in
mov
pop
mov
pop
insb
sbb
xchg
xorl
cvtdq2ps
pop
cltd
pop
mov
and
xchg
test
sub
or
int3
bnd
imul
xchg
xor
mov
sbb
pop
jp
addr16
fbstp
push
mov
fmuls
push
daa
pushf
push
ret
scas
popf
shr
pop
mov
mov
addr16
cmc
cvttps2pi
mov
xor
loope
cli
mov
add
test
mov
js
das
xor
sbb
ja
fldenv
lods
cltd
push
ss
in
push
mov
pusha
mov
push
jmp
add
mov
push
sbb
orl
adc
dec
repnz
and
js
out
aam
imul
ret
ret
push
stos
mov
cmpsl
mov
mov
arpl
cli
xchg
adc
fsubrp
test
jae
inc
mov
jle
push
dec
lcall
cmc
mov
scas
sbb
mov
and
xchg
inc
lods
push
mov
sarl
pop
test
stos
push
sub
mov
inc
mov
jecxz
adc
xchg
push
nop
pop
mov
imul
inc
outsb
enter
inc
js
adcb
dec
jns
or
adc
jb
sub
or
ret
add
dec
mov
mov
decl
test
fisubs
mov
mov
outsb
or
cld
aas
fidivrs
test
dec
adc
cwtl
das
push
adc
ja
mov
cmp
aam
mov
fildll
adc
fnstcw
pop
push
inc
imul
inc
sbb
cmp
shll
shlb
xor
fs
ja
xor
shll
cwtl
mov
rcrb
cmp
jno
add
dec
jg
rcll
or
cmp
mov
add
iret
js
insl
out
cmp
mov
cmc
mov
lret
fsub
fimuls
jo
lahf
jg
shlb
and
inc
mov
fnsave
mov
jno
sbbl
push
and
xchg
xchg
nop
push
xor
addl
lea
cmp
push
and
pop
pop
xchg
push
int
pop
inc
mov
int
subl
testb
pushf
pop
test
in
lahf
dec
je
push
mov
and
push
in
mov
push
cltd
mov
jecxz
lcall
int3
push
adc
rol
adc
lret
call
push
xchg
sub
fistpl
jg
sub
inc
int
outsb
xchg
dec
sbb
mov
lods
shlb
mov
ja
dec
inc
mov
orb
push
jnp
icebp
sbb
fwait
dec
in
or
jmp
sub
dec
je
nop
sbb
cmp
push
fnstsw
adc
push
cld
inc
aad
mov
filds
jg
loope
test
lods
mov
mov
aam
dec
inc
sbb
dec
flds
frstor
cs
cmp
lahf
std
hlt
std
dec
int3
push
fsubl
xlat
xchg
add
outsl
in
fwait
or
lods
fsubrs
jle
std
loopne
mulb
mov
icebp
pushf
fsubrs
idivb
mov
cmp
mov
into
cmp
jo
inc
xchg
or
loope
insb
dec
cmp
dec
fldcw
aaa
pusha
jo
repz
jle
popw
inc
lcall
rcll
push
ds
fsubs
gs
popa
int3
stos
je
mov
sub
imul
movsl
xchg
mov
enter
sahf
fs
cmp
into
scas
mov
inc
rcr
sahf
fsts
pop
dec
rcrl
rol
cmp
sbb
fsubrl
xchg
jo
lods
mov
lea
ja
pop
data16
add
and
in
dec
xchg
call
mov
add
jb
cmpsl
popa
mov
lods
dec
dec
adc
nop
cmp
cli
add
adc
iret
jle
xor
enter
fisttps
popa
fcoms
addr16
call
xchg
and
add
ret
cmp
sbb
pop
xor
hlt
mov
ljmp
and
xchg
ror
lahf
subl
loop
loop
ret
lret
imul
xlat
mov
sahf
imul
mov
adc
sbb
mov
mov
clc
mov
call
xchg
scas
daa
shlb
ret
and
cmp
add
pop
inc
cmc
add
mov
pop
xchg
cmp
pop
xchg
test
mull
jnp
je
xchg
sbb
push
pusha
dec
xor
mov
sahf
dec
dec
sub
adc
ss
jno
cld
cmp
rcl
in
push
xor
inc
add
jle
imul
and
outsl
leave
jbe
cmp
cltd
rolb
popf
push
push
icebp
test
lret
pop
or
ficoms
mov
cld
je
jmp
fistpll
movlps
or
push
clc
pop
repnz
cmp
jle
sbb
xchg
jb
pop
cmp
insl
mov
shll
fnstenv
repnz
jle
jge
mov
xchg
and
or
ret
ficoms
fcoms
xchg
leave
jecxz
mov
mov
jbe
and
mov
dec
inc
sbb
in
and
add
adc
push
sets
cmp
dec
sub
mov
cmc
jnp
cmp
xor
add
adcl
jne
add
popa
iret
adc
fs
sti
sub
ret
testb
mov
mov
dec
inc
hlt
rol
cmp
adcb
testb
xadd
cld
push
mov
sub
out
out
sti
inc
sub
lea
stos
lods
in
dec
adc
jl
cmp
lock
mov
cwtl
push
ljmp
cs
sub
pop
push
stos
clc
flds
aas
iret
int
jno
out
aad
out
call
add
int3
sub
daa
mov
out
jno
incb
stos
std
add
scas
fidivrs
sbbl
repnz
push
mov
jmp
nop
inc
sbb
dec
push
out
push
int3
movsl
or
repnz
sub
mov
popa
sub
in
in
repz
xchg
stos
sbb
test
or
jl
jns
ja
and
sub
xchg
sub
test
stc
aas
xchg
in
cmp
xchg
push
cmpsl
iret
lahf
xor
or
or
and
sbb
mov
leave
out
mov
dec
or
pushf
cltd
sahf
inc
pop
cmpsb
xchg
or
enter
mov
and
leave
jp
jae
mov
les
inc
scas
and
mov
ljmp
cmp
mov
popa
scas
cld
inc
jmp
push
call
loop
sbb
ljmp
lret
fstpt
lods
sbbl
and
mul
cmpsl
pop
mov
sub
and
jp
pop
xor
aam
into
xlat
sbb
xchg
lcall
stos
stos
cli
or
mov
cwtl
call
stos
xchg
cli
insb
xchg
clc
mov
enter
sub
pop
mov
mov
gs
fsubrs
daa
mov
cwtl
data16
or
mov
jle
shrb
add
movsb
aam
dec
pushf
sbb
rcll
sbb
andb
stc
out
jae
jmp
xchg
inc
das
push
jp
jb
cmp
cmp
cmpsl
mov
ss
movsl
inc
and
out
gs
and
push
lds
push
rcrb
lock
dec
imul
sahf
pop
les
shl
push
inc
sub
loop
imul
sbb
sahf
mov
repnz
pop
cld
cld
sub
pop
mov
scas
sarl
scas
and
int
in
shl
std
sbb
rolb
sbb
test
add
and
pop
lret
sub
pop
inc
jo
mov
sub
sub
lret
cwtl
mov
mov
adc
rolb
ja
pop
test
dec
mov
cmpsl
and
jbe
fidivrs
loopne
jbe
sbb
test
push
adc
in
add
and
mov
std
fstl
in
mov
push
push
out
imul
sarl
pop
xor
stos
cmp
ret
je
and
jno
jg
in
mov
insb
dec
pop
mov
into
or
jl
lock
insl
orb
insl
stos
xchg
xor
lret
cmpsb
loop
and
lahf
mov
mov
sub
dec
or
insb
sub
popaw
adc
enter
or
enter
xor
adc
pop
sbb
repnz
or
jnp
xor
out
ficompl
pop
dec
sbb
and
push
clc
add
mov
sub
pusha
fwait
lahf
fcomps
xor
xor
mov
mov
add
aam
popa
sub
push
pusha
inc
fcomp
cmp
int
mov
sub
insl
loopne
mov
repnz
mov
stos
out
insl
or
jl
arpl
ss
inc
xchg
dec
daa
mov
push
pushf
sub
inc
call
outsl
jno
jno
xor
imul
inc
in
fisttps
test
or
adc
rcl
jg
adc
xchg
jae
adc
test
fdivs
mov
aas
jb
xor
push
xchg
ret
sbb
dec
lret
add
lea
push
xchg
mov
or
mov
ss
loopne
js
pop
mov
xlat
roll
lahf
xor
xor
test
or
push
divl
pop
pop
ljmp
sub
fs
hlt
ja
jnp
inc
fdivrs
jge
xor
sbb
in
jns
sbb
mov
icebp
jle
xor
jecxz
lahf
and
add
popa
inc
mov
iret
mov
fcmovne
loope
addl
outsb
push
fdivrs
cmpsb
cltd
dec
and
jae
jmp
mov
les
cmp
mov
xor
into
out
cmp
and
or
call
fsubl
mov
xchg
int3
xchg
adc
or
int3
fwait
sub
out
xchg
dec
ds
add
sbb
int
dec
bound
push
lea
or
or
into
ret
stc
adc
dec
xchg
mov
sub
outsl
pop
popa
icebp
jb
jp
push
xchg
jae
mov
hlt
dec
xchg
push
out
adc
outsb
lret
ret
xor
in
enter
cwtl
and
sbb
cmpsl
xor
and
out
mov
ss
call
test
and
int
and
data16
js
push
in
jb
enter
popf
and
sbb
cmp
mov
cmp
cmp
lock
mov
inc
aaa
cwtl
push
mov
das
sbb
dec
in
cmpsl
xchg
and
lret
sbb
imul
fs
bound
mov
mov
lcall
ret
es
leave
pop
sbb
pop
scas
fsubr
andl
xchg
shrl
sbb
stos
inc
dec
mov
fsubl
lock
inc
xchg
push
sub
pop
mov
jl
dec
jns
jge
fwait
xor
or
push
cmpsb
in
sbb
movsb
jne
es
andl
or
xchg
push
xor
adc
jno
sti
jne
ja
xchg
out
movb
push
in
int
test
scas
mov
add
lret
sbb
mov
sbb
sub
sbb
mov
push
bound
mov
pop
and
int3
repnz
gs
pop
js
mov
inc
sbb
and
xchg
jle
sti
xchg
in
ficoml
xor
and
pop
jmp
clc
test
jecxz
in
jp
lock
adc
xor
cmp
test
xor
dec
notb
dec
push
push
sub
jecxz
push
mov
adc
jecxz,pt
pop
ljmp
popf
adcl
add
outsb
shrb
cmc
ss
imul
mov
pop
push
ja
xor
or
sbb
dec
cmpl
mov
ficoms
xor
pop
and
ror
fcmove
pop
mov
fs
pop
mov
pop
repnz
or
fidivs
cli
adc
cltd
orl
int3
jmp
fcmovnbe
dec
enter
pop
nop
fsubrs
push
mov
adc
pop
movsl
xor
mov
js
test
mov
in
jecxz
inc
inc
scas
jno
adc
xchg
inc
int
adc
cltd
daa
xchg
pop
fsubl
add
leave
dec
pushf
cmp
into
dec
loopne
pop
andl
inc
rcrb
mov
int3
xchg
or
rolb
adc
repz
fldcw
inc
xchg
aad
faddl
sub
push
iret
in
aad
or
sbb
pop
sahf
mov
add
add
sub
mov
call
popa
push
icebp
jmp
fisubl
stos
stc
add
sub
rol
pop
mov
scas
dec
mov
add
pop
sbb
mov
or
sbb
test
mov
push
int
adc
js
add
mov
js
xchg
les
lods
ja
test
stc
leave
or
fmull
mov
fnstsw
mov
sub
cmp
test
jmp
or
shll
fsts
aam
xchg
mov
cld
mov
cmpsl
ja
pop
push
cs
or
rclb
mov
aaa
addr16
scas
push
push
xor
out
add
ljmp
xor
lret
addr16
mov
icebp
mov
mov
push
dec
sbb
sub
mov
fistpll
xchg
add
push
xchg
cli
aaa
insl
mov
inc
imul
inc
cmpsb
imul
inc
sbb
add
mov
cmp
in
loope
lods
pop
inc
xlat
jae
xchg
lods
jb
pop
fbld
lods
jbe
dec
fs
push
sub
clc
insb
sahf
aad
mov
or
dec
lcall
call
out
mov
and
sysret
mov
pop
fucomip
mov
ja
scas
sahf
pop
in
or
xchg
test
mov
iret
sbb
xor
mov
dec
cmc
out
outsb
insl
xchg
out
repz
negb
es
jno
mov
xor
jnp
stos
rorb
ret
addl
sbb
test
pop
cmc
or
lods
pop
jecxz
cld
scas
adc
pop
xor
dec
xchg
xchg
cmp
sub
orl
movsl
mull
call
fldt
inc
xchg
decl
or
push
loopne
push
add
dec
sbb
sub
fs
aam
outsb
icebp
inc
mov
jg
add
leave
mov
les
nop
xchg
add
inc
dec
ret
hlt
daa
dec
xor
js
cld
dec
mov
repz
mull
mov
mov
mov
or
lret
insl
pushl
push
pop
dec
or
mov
repz
xor
jmp
inc
mov
enter
xchg
xor
mov
movsb
in
jle
fnstcw
mov
jecxz
aam
scas
test
outsb
jbe
aaa
mov
ss
dec
mov
add
or
pop
inc
sar
cmp
dec
lret
xorb
sbb
xor
xchg
add
and
and
repz
dec
xchg
mov
xor
jne
call
pop
repz
nop
aaa
test
insl
sub
out
inc
adc
outsb
inc
paddsb
lcall
adc
jle
xchg
mov
aas
loopne
mov
jnp
fimull
jmp
pop
das
xchg
pop
dec
shr
fs
lahf
sbb
ja
fbld
xchg
insl
mov
cmpsb
adc
xor
add
push
out
or
push
and
mov
lahf
push
insb
in
and
rcll
mov
or
cld
lret
jb
xor
jne
pop
dec
in
fucom
fstps
xor
mov
xor
sahf
rcrl
jb
push
insb
xchg
pop
jns
fs
mov
xchg
loop
push
jle
test
andl
cli
ret
addr16
xor
dec
test
sbb
cltd
jp
cmpsb
xchg
cmovne
sbb
pop
in
xlat
out
mov
sahf
jecxz
popf
repz
xor
push
rclb
movsl
xor
sbb
shrl
jb
imul
push
sbb
jmp
jae
cli
int
mov
roll
xor
jmp
xor
lret
test
shll
adc
movsb
add
push
clc
sub
and
aas
movb
aas
insl
xchg
outsl
or
pushf
xorl
fidivrs
movsb
int
xchg
inc
call
mov
enter
adc
jbe
out
jmp
adc
mov
or
cmpsb
ja
pusha
cmp
rcll
les
mov
js
push
mov
cmpsb
cli
sbb
cs
setae
push
fisubl
add
bound
mov
daa
adc
jns
test
aas
cmc
push
loopne
adcl
movq
mov
lcall
sti
repz
cmp
and
sub
jge
xor
inc
ljmp
mov
sub
aaa
pushf
xchg
ss
lea
aaa
lds
js
add
push
stc
repz
mov
dec
arpl
popf
cmpsb
das
mov
into
pushf
mov
addb
or
xor
mov
sub
int
jg
pop
inc
das
dec
mov
sbb
clc
mov
mov
push
dec
je
loop
cmp
fists
cmp
xor
xor
fists
nop
iret
popf
call
mov
imul
int
push
sub
xor
pop
ds
clc
adc
int
imul
and
pop
test
addr16
int3
mov
push
or
and
lock
cmpl
push
imul
xor
aam
xchg
lea
icebp
inc
and
mov
mov
jo
sub
adc
aaa
daa
or
imul
out
mov
push
pop
mov
fisttpll
push
fnsave
fwait
and
push
jne,pn
dec
fcoms
lret
outsb
sub
out
mov
and
pop
cltd
dec
mov
xor
pop
loope
or
jns
movsb
sbb
je
adc
mov
cmp
pop
aaa
add
xchg
cmp
lret
movsl
mov
jp
or
or
mov
outsb
mov
addr16
pop
popl
or
xchg
push
call
and
ss
push
out
xor
jge
mov
fwait
xchg
xchg
push
xchg
mov
test
sarl
xchg
out
inc
mov
arpl
shrl
sar
add
mov
mov
test
icebp
fs
popa
add
adc
xchg
lock
inc
mov
mov
loop
sbb
push
pop
push
xchg
xorb
or
push
push
add
test
ficoms
fisubrs
sahf
repnz
fsubrs
cld
xchg
aad
inc
jne
xchg
xchg
dec
leave
shlb
fsubr
jne
add
movsl
popf
dec
fbstp
fidivl
or
pop
mov
and
stc
xor
fisubrs
adc
pop
inc
cmp
mov
inc
dec
and
fcomp
jae
sbb
mov
mov
adc
ret
adc
xchg
outsl
fisubl
lret
mov
stos
ds
xor
and
bnd
pop
adc
pop
pop
mov
call
arpl
xchg
mov
aaa
push
out
fisubrs
out
xchg
lea
dec
or
jnp
jne
cmp
jb
idiv
std
add
sbb
test
repz
pop
xor
mov
mov
inc
cs
xor
and
sub
scas
xchg
scas
repnz
arpl
mov
xlat
cltd
mov
mov
sti
xor
cmpsl
iret
gs
add
push
dec
xor
mov
test
fucomp
cs
je
stos
xchg
xchg
pop
inc
pop
aas
mov
out
jbe
lahf
es
jns
repnz
sbb
cmp
inc
stos
mov
call
xchg
pop
test
jo
or
stc
mov
fcoml
fs
dec
sarb
pop
push
pushf
mov
mov
mov
movsb
or
pop
inc
insb
pusha
sar
cmp
notb
mov
mov
jno
call
mov
in
cmpsl
dec
sar
nop
int3
outsb
js
das
fildl
or
lcall
push
xchg
aas
ja
scas
stos
insl
inc
test
xor
iret
test
lock
test
push
mov
into
cli
mov
loopne
cmp
push
test
mov
sbb
push
dec
mov
sub
mov
adc
xchg
shrl
in
add
pop
mov
repz
jecxz
ffree
lret
movsb
cmpsb
cmp
dec
jmp
and
pop
sbbl
push
decb
mov
xchg
push
jp
mov
xchg
iret
rcrl
shlb
pcmpgtb
sub
sbb
pop
call
cmp
testb
fildll
push
push
sub
push
add
das
pop
adc
std
int
jns
lods
push
xor
inc
pop
mov
jl
mov
add
sarl
pop
xor
shrb
jl
loopne
lds
lods
rcll
jb
jae
mov
sub
push
imul
lahf
add
sbb
cwtl
in
xchg
out
popa
sub
sbb
hlt
call
adcb
pusha
shll
movsl
add
cmp
mov
std
jbe
or
mov
idivl
pusha
insl
andl
rcll
insb
jo
out
cmpsl
aam
out
or
test
push
clc
push
mov
rcl
lret
dec
push
pop
add
add
inc
cs
outsb
jmp
pop
test
dec
cmc
cmp
or
imul
mov
bound
sub
lock
mov
sbbb
push
in
test
lahf
xchg
insb
ficompl
inc
or
mov
fdivs
dec
fisubs
xchg
xchg
mov
mov
pushf
lods
addr16
pop
jl
hlt
dec
lahf
mov
mov
mov
push
jb
aam
mov
je
mov
mov
mov
mov
aaa
push
jne
aad
gs
sbb
fs
fnsave
test
xor
mull
daa
in
xchg
dec
pop
xchg
es
mov
mov
jne
dec
fs
pop
dec
stc
scas
lds
insl
dec
lea
popf
adc
mov
lock
call
adc
rolb
and
mov
call
xchg
sub
daa
lds
test
push
hlt
add
iret
push
sub
mov
iret
mov
gs
inc
es
mov
pop
push
inc
inc
movsb
pop
data16
add
test
mov
pop
mov
inc
shll
addr16
imul
in
inc
jle
adc
ljmp
cmp
inc
js
into
push
nop
jmp
sbb
jo
cmpsb
pushf
pop
dec
clc
fwait
sub
mov
and
cmc
xchg
mov
sub
cli
mov
jo
sbb
daa
cli
outsl
xchg
push
jne
sub
mov
jnp
cld
jns
jnp
mov
js
xchg
pop
cli
push
push
mov
imul
xchg
fcoms
test
xchg
ret
ficoml
dec
cmc
fildl
mov
enter
jnp
xor
jne
mov
stos
je
sub
ret
mov
das
out
mov
or
les
test
inc
dec
pushf
pop
mov
orb
outsl
stos
rcrb
mov
sub
ja
dec
bound
cs
pop
mov
test
je
and
sub
sarl
stos
daa
nop
jb
sbb
jne
mov
pushf
sub
or
cli
push
add
pushf
push
cmpl
data16
lds
mulb
test
mov
leave
xchg
sbb
jns
sub
push
rclb
icebp
gs
adc
bound
enter
data16
lahf
sbb
popf
das
mov
add
addl
call
fdivp
in
mov
mov
mov
push
mov
sub
popa
jns
xchg
fwait
cld
fcomp
inc
adc
dec
mov
divl
sub
loop
push
in
ljmp
mov
push
call
dec
lods
iret
mov
stos
aam
popf
ret
int
in
imul
insb
pop
push
adc
xor
je
push
push
lods
pop
and
lcall
jne
add
inc
or
lret
out
inc
xor
ret
xchg
jge
pop
test
pop
and
hlt
clc
loope
and
jae
push
or
sbb
shll
int3
mov
mov
xor
mov
add
hlt
clc
into
imulb
lods
icebp
repnz
jbe
or
mov
cmc
lcall
lock
dec
adc
ja
push
lods
ja
test
mov
ds
repz
sbb
cmp
xchg
inc
stos
pop
pop
sub
mov
decl
push
ja
jp
cmp
xchg
js
jmp
push
dec
add
in
cwtl
mov
push
sti
cs
jae
push
jp
mov
frstor
int
mov
sub
pop
inc
adc
add
jnp
lcall
and
iret
shlb
cmp
xor
test
imul
dec
insb
cmp
ret
jno
movsb
imul
sub
sbb
arpl
xor
ljmp
push
mov
or
ja
enter
and
aad
repnz
stos
movsb
int3
stos
jecxz
shll
arpl
pop
mov
fsubrl
dec
ss
scas
jb
cmpsl
mov
push
dec
push
test
xchg
iret
or
push
mov
jnp
scas
jmp
test
into
outsb
pop
mov
cmp
jge
adc
pushf
inc
pop
add
sub
jne
es
add
aad
mov
das
pop
test
xchg
rorl
cld
call
lea
push
out
lds
mov
push
xor
mov
fwait
jne
scas
mov
mov
mov
pushf
pusha
mov
jl
lcall
cmp
test
push
lahf
ja
nop
push
ret
clc
divl
rcrb
add
or
mov
arpl
push
xchg
mov
popa
push
test
pop
mov
xchg
popa
pop
out
ret
adc
fimull
push
push
lods
rcrb
adc
pop
in
jmp
inc
mov
add
pop
mov
sbb
fsubr
scas
xchg
jae
sub
mov
fisubs
sbb
pop
mov
ret
mov
mov
jbe
push
js
andl
in
nop
lock
cmp
and
jb
fbstp
inc
sub
mov
pushf
scas
imul
div
popa
andb
mov
test
sub
pop
mov
icebp
xchg
popf
test
inc
mov
insl
cmp
and
mov
inc
dec
dec
gs
loop
xor
xor
pushw
fs
pop
sbb
xchg
push
gs
mov
pop
xchg
and
fs
or
mov
aam
clc
inc
rcl
popf
add
xor
dec
xor
push
jns
mov
imul
sbb
das
inc
inc
sub
mov
mov
je
adc
add
fs
or
leave
data16
pop
sbb
mov
sub
paddsb
mov
movsl
xchg
popa
in
repnz
faddl
ljmp
or
jnp
adc
daa
dec
cmp
inc
mov
cs
arpl
daa
das
into
push
loope
cmp
in
rcrb
mov
pushf
popf
xor
hlt
push
pusha
xchg
add
roll
mov
shrb
out
cmpsb
jo
add
dec
sbb
adc
fists
test
fldt
xor
or
mov
pop
xor
lahf
or
or
xchg
mov
hlt
sbb
or
sub
push
add
scas
pop
leave
bound
mov
inc
dec
call
imul
mov
push
add
add
gs
dec
jnp
jb
pop
fsubr
aad
or
push
dec
outsl
mov
and
xor
inc
aam
mov
xor
or
scas
outsl
or
push
out
imul
mov
rcrl
or
outsl
add
es
mov
outsb
cmp
xchg
enter
mov
imul
or
daa
adc
cmp
aad
mov
xchg
pushf
fbld
pop
out
ret
iret
shl
stc
lods
jmp
shrb
je
cmpsb
popf
and
insb
jns
cmpsl
imul
add
pop
iret
xor
nop
and
adc
sub
cli
movsl
lahf
xor
jne
lcall
mov
pop
fisttpll
mov
inc
ret
or
scas
push
xor
or
sti
call
lods
fnstsw
adc
xlat
adc
icebp
pusha
lahf
jg
and
stos
xor
mov
sti
add
dec
xor
push
fs
popf
xchg
adc
adc
inc
jle
add
in
sbb
orl
in
outsb
ja
dec
cmc
out
sbb
xorb
sti
into
sbb
sbb
push
or
sti
jecxz
lods
inc
jb
jno
out
add
mov
jns
repnz
test
adc
lock
cmpxchg
lcall
cmc
sbb
rolb
mov
cmp
push
ss
idivl
adc
xchg
cld
xchg
les
xchg
sbb
or
sub
out
push
adc
fwait
or
std
push
pop
xchg
incb
stos
xlat
mov
add
xor
ret
mov
out
dec
add
sub
scas
fs
xor
and
sbb
or
aam
cmpsb
or
cltd
inc
out
ljmp
dec
push
dec
sbb
leave
outsl
cmpsl
dec
jg
xor
dec
lret
push
xchg
pop
test
push
imul
cmpl
in
sub
sub
aam
ret
in
popa
dec
mov
cmp
sbb
adc
sbb
inc
popa
mov
lcall
jmp
adc
adc
sub
xchg
jmp
add
xchg
lahf
stc
push
mov
adc
xchg
mov
inc
jns
mov
into
jl
xchg
ret
mov
es
jp
xor
cmpsb
push
pop
sbb
dec
fists
fisttpl
inc
push
fimull
div
shrd
xlat
call
push
mov
insl
sbb
jns
cmp
scas
shr
pushl
and
sahf
mov
push
xchg
mov
xchg
push
stos
jp
mov
dec
lret
aas
inc
dec
pop
and
adc
dec
lods
jle
push
jne
lods
add
cmp
mov
mov
or
lret
pop
int3
addr16
pop
mov
dec
mov
push
outsl
andb
rcrb
scas
ds
rcr
ljmp
call
sbb
enter
pop
dec
and
sbb
inc
xchg
fs
inc
mov
pop
nop
mov
imul
xchg
adc
inc
das
xlat
sbb
sbb
add
jb
adc
push
mov
ljmp
fcmovnbe
fstpl
mov
int3
dec
shl
cmp
ljmp
fisubrl
aaa
jl
lods
mov
fisubl
cld
jae
xchg
mov
fnstenv
add
sarb
sbb
inc
mov
sbb
adcl
stos
and
cmc
std
jmp
sub
push
outsb
fdivr
xchg
jmp
inc
mov
and
sub
cmp
negl
fidivrs
inc
jp
fcompl
cmp
mov
xlat
adc
sub
xchg
cmc
xchg
cmp
lock
adc
sub
mov
es
mov
push
mov
or
xchg
inc
arpl
mov
aaa
cmp
ss
push
stc
fwait
cwtl
test
mov
pop
cmpsl
mov
mov
mov
stos
xchg
pop
popf
lock
sti
cmp
arpl
xchg
inc
pusha
xor
in
lods
pop
pop
outsb
jl
cmp
and
push
pop
sbbl
lds
pop
pop
imul
xchg
jg
fsubr
into
vunpckhps
xor
nop
ja
xor
push
test
lea
jle
es
ficoms
fadds
xor
popa
cmc
jp
xchg
dec
xor
and
pop
nop
movsl
jecxz
cwtl
test
gs
cmpsl
fs
inc
outsl
mov
mov
mov
jge
hlt
cmp
jp
jmp
sbb
jmp
and
das
or
xchg
imul
mov
scas
sbb
cmpsl
aad
xchg
lods
stos
mov
icebp
cwtl
or
sbb
test
adc
leave
popf
xor
rcrb
out
popa
cmc
out
inc
es
sbb
mov
xor
scas
test
mov
and
mov
mov
aas
adc
sahf
ret
jecxz
mov
push
lods
jle
scas
test
fidivl
dec
xor
dec
sub
lock
je
and
sub
push
mov
push
xor
inc
lods
jl
sarl
adc
or
cltd
xor
xor
sbb
subl
imul
fists
mov
lds
into
sub
fnsave
popa
push
lea
sbb
mov
and
push
dec
xchg
loop
mov
mov
hlt
pop
mov
loop
xor
mov
fcoms
push
rcr
fisttpll
add
in
in
jns
insl
int
xchg
fmul
popa
sbb
or
popa
mov
or
jbe
mov
jmp
or
inc
or
xchg
push
mov
cmc
push
and
cwtl
sahf
pop
mov
xor
cld
scas
and
jb
repnz
inc
aam
push
arpl
sub
jo
rorb
stos
push
mov
mov
negl
cltd
loopne
lahf
push
aad
test
cmp
out
mov
nop
arpl
xchg
fnstsw
idiv
xchg
mov
cmc
lea
or
pop
mov
or
adc
roll
pop
xchg
adc
repz
cmp
lret
out
icebp
xchg
adc
push
dec
sub
push
mov
aaa
xlat
jne
inc
cmp
dec
xlat
mov
stc
mov
aam
xchg
jle
fldenv
pop
pop
fistl
jp
jge
adc
cmp
push
mov
mov
subl
mov
popf
sahf
xchg
dec
dec
xchg
lds
insl
add
add
inc
imul
adc
outsl
out
pop
jl
xchg
mov
push
jo
cmpxchg
cmpb
xchg
loope
mov
lcall
roll
out
sub
cld
push
pushf
jmp
ja
dec
adc
cmp
push
pop
cmp
insl
loopne
inc
jmp
xor
lret
mov
outsb
xchg
test
mov
cmp
test
lret
sub
sahf
pop
mov
lods
jo
insb
xchg
daa
inc
js
xor
dec
inc
jnp
xchg
jmp
pop
sub
cs
rep
inc
lock
es
add
cli
call
pop
out
push
mov
adc
insb
aas
mov
mov
cmc
outsb
push
icebp
push
faddl
mov
jge
pushf
jle
aaa
ja
fsubs
sbb
inc
xchg
push
jmp
jo
je
xchg
addr16
add
mov
rorb
dec
in
dec
leave
cwtl
mov
fwait
pop
sti
xlat
and
in
imul
rolb
popa
mov
or
out
scas
fcomps
sbb
dec
xchg
adc
sti
insl
adc
popf
pusha
adc
jp
cmp
jp
insl
pop
inc
mov
adc
and
push
mov
enter
sbb
rcl
das
cmp
xor
rolb
sub
mov
adcl
mov
jns
or
dec
pop
add
push
lret
xlat
adc
and
xorb
ret
cmpsl
popa
fcmovne
adc
fdivr
inc
scas
xchg
aad
scas
adc
ficoml
mov
mov
cmp
sub
add
sti
mov
add
mov
and
lea
insb
jnp
leave
repz
outsl
ror
mov
xchg
add
scas
ljmp
test
iret
scas
pop
imul
movsl
sub
in
push
imul
push
icebp
xchg
into
or
push
outsb
fisttpl
test
sub
cmpsl
loop
sbb
ja
sub
outsb
movl
mov
ds
and
pop
push
lahf
rcrl
flds
inc
pop
sub
xor
jmp
jno
stos
test
cltd
jb
mov
fwait
adc
cmc
dec
adc
sbb
pushf
std
jae
jl
shlb
lea
and
adc
jnp
mov
in
dec
add
xor
scas
adc
inc
dec
mov
xor
push
sub
sub
movsb
jnp
push
sub
bound
cwtl
cs
jecxz
notl
and
add
paddsb
loop
and
rcrb
lahf
xchg
jb
cmp
jo
in
mov
push
scas
repz
push
dec
test
pop
mov
adc
addl
push
cld
pop
scas
fbstp
fcoml
in
mov
jle
sbb
test
xchg
filds
sub
mov
stc
push
push
adc
imul
xchg
xchg
lret
push
es
les
xchg
xchg
scas
jne
mov
pop
sub
mov
dec
rorb
addr16
cltd
ss
dec
and
ffree
or
clc
push
jbe
xor
push
pop
popa
fwait
and
inc
dec
daa
aas
sar
pop
mov
mov
or
jne
enter
incl
in
dec
lcall
popa
jb
xor
mov
lret
lret
ljmp
xor
scas
movb
xchg
repz
stc
scas
test
or
outsl
xchg
pop
mov
aas
or
adc
enter
dec
lea
enter
inc
inc
xlat
sub
mov
or
jmp
int3
lcall
mov
cmpb
std
inc
es
aas
je
ss
fldl
scas
mov
out
push
add
rcr
cs
mov
sbb
xchg
adc
cmp
arpl
jl
dec
add
adc
addr16
jbe
cmpsb
add
dec
dec
cmp
adc
shrb
push
dec
fiaddl
pusha
ficoms
test
add
cltd
stos
jmp
movsl
adc
aad
loope
cmp
mov
out
movsb
or
cmp
push
add
mov
xor
lcall
pop
bound
into
loop
xchg
pop
add
xchg
push
jle
dec
fwait
cmp
repnz
xchg
pop
add
int
mov
fildl
fwait
ret
jbe
pop
ss
pop
in
mov
and
stc
lea
dec
and
stos
xor
outsl
jae
add
cmpsb
push
cli
add
lea
fs
aad
xchg
adc
ljmp
in
push
mov
dec
xchg
pop
jge
inc
inc
push
sub
hlt
jp
xchg
push
rcll
fiaddl
loop
sbb
xor
mov
outsb
pop
in
inc
adcb
sti
data16
mov
jp
dec
and
sub
or
in
inc
leave
daa
dec
je
cmpsl
push
add
leave
out
cmc
lret
sub
test
jge
mov
shlb
aad
dec
xchg
dec
add
mov
orl
scas
int3
cli
or
xor
jge
shrb
fsubs
mov
mov
jg
in
push
push
cmp
jae
dec
in
fisubrl
mov
out
mov
mov
hlt
cwtl
hlt
iret
mov
add
insl
mov
sub
arpl
mov
into
cltd
jle
mov
and
pop
ss
testb
incb
mov
dec
xor
out
mov
mov
jle
mov
sub
sbb
and
adcl
shrl
dec
pusha
call
lret
mov
pop
cmc
mov
loop,pn
cwtl
fs
loope
push
or
and
rcrb
mov
xor
nop
add
mov
sub
filds
dec
xor
shr
mov
inc
push
arpl
push
test
push
shufps
push
imul
out
sbb
hlt
fmuls
bound
dec
push
mov
daa
pop
rolb
mov
mov
mov
repnz
dec
ja
or
sbb
jp
mov
repz
and
dec
negl
ja
inc
fisubrl
je
and
mov
out
pop
jl
into
gs
aam
xchg
push
mov
rcl
fisttpl
xchg
push
push
add
pop
xchg
call
sbb
ljmp
xchg
add
jbe
mov
or
dec
ja
and
xchg
xchg
jnp
mov
mov
mov
pushf
movsb
stc
popf
inc
xor
pop
mov
adc
and
cltd
stos
push
add
rcll
pop
syscall
inc
push
pop
sti
aas
cld
pop
aad
jbe
jnp
jo
lret
loope
ror
cmpsb
movsl
lock
pop
add
mov
or
loope
xor
aas
cs
adc
aaa
bound
insl
adc
sub
shr
gs
and
pop
lods
xchg
push
sub
fbstp
sub
test
ret
fildl
rcrb
test
ljmp
mov
sbb
call
xor
dec
or
or
xchg
pop
lret
imul
cltd
cmp
add
jnp
push
mov
roll
xchg
mov
cmc
outsb
push
fsubrl
je
push
adc
xor
stc
xor
cmpb
rol
jecxz
sbb
cmc
add
outsb
stos
mov
lret
test
clc
or
xor
jmp
scas
int
mov
jo
pop
lods
cmp
addr16
test
push
fwait
and
dec
pushf
ds
xchg
negl
mov
aaa
nop
je
sub
lret
add
mov
scas
sbb
mov
inc
scas
and
int3
push
movsb
cmpl
adc
mov
lret
pop
pop
pop
dec
pop
daa
push
js
push
out
popf
cmc
jo
pop
or
aad
mov
fs
push
push
push
and
cs
sbb
and
adc
shrb
cmp
movsb
addr16
sahf
push
js
iret
pop
popa
push
mov
lods
es
xorl
sbb
js
aad
les
pushf
mulb
cltd
imull
jae
scas
jo
mov
in
mov
and
fdivl
mov
dec
push
jp
cwtl
loopne
push
scas
pop
jmp
inc
xchg
insl
xlat
jb
adc
pop
addr16
push
pop
and
inc
xchg
mov
arpl
xchg
or
out
inc
mov
mov
xor
enter
outsl
xor
mov
hlt
arpl
xor
aaa
into
pop
daa
push
cmp
shl
mov
sbb
shrb
insb
or
clc
sub
in
int
fcomps
loope
repz
data16
mov
out
movl
pop
cwtl
scas
sbb
lods
lea
cld
fnstenv
lret
addr16
mov
ret
out
cmp
push
fisubrs
cwtl
lahf
xchg
xor
jne
jo
mov
out
lods
push
arpl
or
cmpsl
inc
mov
jnp
mov
lret
mov
sub
mov
dec
pop
xchg
mov
jmp
mov
pop
jae
sub
push
lds
inc
pop
pop
sbb
test
inc
cmp
int3
mov
out
sub
add
fdivr
dec
xlat
imul
mov
mov
imul
mov
pop
ss
lret
xchg
push
pop
clc
in
jl
push
js
je
jnp
xorb
add
cli
and
pop
sub
xchg
movsb
add
sub
xchg
movsl
jae
mov
or
repnz
and
rep
out
mov
fbstp
mov
jo
mov
fs
add
cmp
jmp
clc
jne
lock
ffreep
mov
inc
pop
fisubrl
adc
xchg
lcall
push
push
loope
pop
insl
bound
cmp
lahf
dec
jno
adc
fisubs
fwait
inc
inc
dec
shlb
mov
add
mov
pop
adc
mov
and
sbb
lret
cmp
inc
sub
insb
mov
dec
or
lds
and
jae
je
cmp
es
clc
push
outsb
xor
inc
lret
cmpsl
cmp
pop
out
jmp
cli
sbb
movsb
inc
pushf
xchg
sti
inc
and
adc
push
lcall
rcll
mov
insl
xchg
sub
mov
call
pop
push
adc
jae
jne
shrb
addb
pop
jb
fadd
idiv
clc
mov
mov
dec
call
fstpt
fcomp
gs
inc
pop
jae
jmp
repz
std
sub
pop
add
mov
imul
sbb
mov
fldcw
sbb
iret
mov
or
into
punpckhwd
fisttpll
inc
xlat
loope
test
inc
in
and
jo
arpl
pand
push
cmc
out
lret
cmp
decb
loope
adc
adc
popf
sbb
shl
jo
push
mov
repnz
data16
add
cmp
mov
aaa
sbb
rcrb
sahf
insb
imul
ss
hlt
insl
mov
mov
lahf
lods
subb
or
add
mov
push
inc
pop
es
cmp
nop
jbe
or
mov
dec
mov
jno
lods
and
bound
jle
ror
push
shlb
push
add
mov
dec
insl
in
mov
sti
aad
dec
and
dec
leave
or
mov
sub
inc
rcrb
xor
xlat
inc
mov
push
cs
ret
movsl
cmp
mov
ljmp
or
mov
notb
push
dec
addr16
scas
jb
jno
push
xor
outsl
inc
in
push
cwtl
xchg
or
lea
jb
or
imul
es
inc
call
or
pop
pop
sbb
leave
adc
cmp
and
push
or
mov
sarb
push
dec
in
and
mov
scas
dec
fists
fstpt
sbb
jno
pop
jl
jne
mov
jns
ss
rorl
mov
sub
push
ret
into
pop
pop
pop
cltd
dec
or
std
mov
les
aam
xchg
dec
iret
xchg
andb
add
negl
hlt
hlt
xlat
pop
imulb
mov
adc
js
icebp
shlb
cmp
add
or
gs
call
inc
xor
in
fstpl
jl
cmp
jo
and
iret
xor
ret
push
push
das
adc
icebp
fildl
push
test
ficoms
jnp
mov
xchg
lods
inc
jbe
sub
test
test
orb
call
call
enter
pop
clc
ljmp
push
pop
dec
xor
mov
fadds
xchg
xchg
pop
lret
mov
mov
imul
jb
xor
shlb
cwtl
jp
scas
xchg
or
scas
dec
adc
addr16
add
mov
push
sub
test
cmpsb
push
push
outsl
je
testb
pop
pushf
pop
rep
testl
leave
cltd
sub
dec
out
mov
dec
mov
shrl
lea
add
fs
cmp
lret
outsl
jbe
mov
insl
push
jnp
push
rorb
mov
pop
jnp
adc
xchg
cs
xchg
fwait
pop
cwtl
pop
jp
ret
sub
stos
mov
push
jg
in
in
dec
sbb
idivb
mov
test
cltd
gs
jnp
sbb
sbb
mov
repnz
mov
mov
out
jne
sub
decl
add
movsl
test
pop
lds
fdivrs
mov
mov
in
cli
mov
adc
jp
adc
xor
xchg
lahf
popa
and
daa
pop
jns
cli
dec
sbb
add
cmpb
pop
push
and
lds
ds
aas
or
sarb
inc
out
je
push
push
rcrb
icebp
inc
mov
decl
gs
adc
icebp
adc
in
jo
sub
stos
xor
aam
sub
push
orb
je
adc
xor
test
add
arpl
and
leave
jbe
dec
dec
push
push
add
or
in
jp
fistpll
loope
inc
adc
aaa
jo
adc
pop
int3
ss
mov
loopne
xchg
adcl
pop
fisttps
iret
cmp
sub
insl
pop
xchg
xchg
or
push
mov
vpsubusb
mov
inc
xchg
inc
out
es
mov
bound
cltd
mov
dec
push
jns
jg
or
jg
cs
cmp
mov
lods
cmp
dec
lahf
mov
fcmovu
xor
das
xchg
imul
aas
bound
lock
repz
test
xchg
stos
movsb
push
jb
daa
push
cmpsl
test
in
stc
mov
aad
cld
gs
inc
shrb
pop
test
push
imul
push
jo
inc
loop
loopne
cmp
into
add
or
loop
sbb
mov
sbb
inc
sbb
or
fsubrl
int3
cmpsl
filds
or
ljmp
mov
out
leave
mov
aad
pop
or
inc
les
mov
iret
xchg
aam
mov
dec
cmp
jl
dec
cmpsb
xchg
xor
adc
push
test
inc
pop
and
mull
rcrb
repnz
scas
xor
mov
dec
stos
test
daa
lock
mov
rolb
jnp
neg
cwtl
inc
cli
ret
sbb
xchg
loopne
pop
sbb
test
xchg
xchg
jae
outsl
mov
loope
dec
sub
cli
mov
rcrb
fnstenv
push
leave
mov
sub
xchg
js
cmp
mov
pop
hlt
and
imul
ljmp
shl
dec
les
subl
jne
xor
mov
daa
add
sbb
xor
aas
bound
js
stos
add
shrl
test
shrb
adc
aad
jb
or
add
jp
xor
sub
enter
loopne
xlat
xchg
jne
cmp
push
xor
stc
outsl
xor
mov
dec
fimull
push
movsb
rolb
ds
aas
push
add
dec
in
scas
push
movsl
std
lret
and
adc
pop
out
pop
xor
nop
scas
inc
pushf
test
or
and
addr16
mov
out
xchg
dec
arpl
in
or
sub
jg
mov
pop
adc
shrl
cmpl
cmp
in
loopne
outsb
add
imul
mov
sarb
addr16
mov
ret
pop
sub
out
lret
inc
sbb
mov
mov
lret
movsb
fdivrs
and
cmpsb
jo
sbb
cli
xchg
dec
jns
icebp
mov
stos
fucomp
ret
clc
push
adc
popa
dec
loopne
subb
cld
jmp
jmp
cmp
je
lds
push
pop
pop
test
jae
pop
or
mov
pop
das
xchg
ljmp
lea
pop
mov
ret
int3
shl
push
aaa
stc
xor
mov
inc
hlt
sbb
lahf
mov
scas
dec
fwait
divb
pop
mov
aaa
fnstsw
sbb
fstps
dec
push
xchg
and
loope
xor
stc
aas
sub
ror
jl
pop
js
adc
sti
aas
push
dec
lea
mov
cli
out
push
cli
scas
pushf
cld
stc
add
pusha
xchg
pop
mov
fidivl
cmp
jbe
arpl
into
jecxz
pop
pop
jg
sbb
pop
popf
loopne
sahf
cmp
loopne
bswap
mov
icebp
aas
fsubs
mov
into
add
or
xchg
outsb
xchg
cmp
cmp
jle
fildl
imul
jbe
or
xchg
dec
cmp
bound
fwait
pop
les
jl
jl
dec
mov
adc
daa
imul
cwtl
xor
mov
cmp
aas
enter
lcall
sbb
aaa
movsl
sbb
and
cmp
std
ja
or
xchg
adc
cwtl
and
jge
sub
jb
mov
repz
in
orb
xchg
mul
cltd
out
push
and
sbb
je
lds
aad
pop
sub
lea
xchg
scas
repnz
xchg
ret
ret
mov
call
insl
xchg
dec
xor
mov
bound
fwait
rolb
adc
int
stc
xchg
popa
or
and
out
movsl
inc
test
rorl
les
jle
and
lock
jp
inc
sbb
pop
mov
xchg
jg
lea
or
push
rorb
aas
imul
hlt
push
incl
test
mov
dec
jae
push
push
cltd
xor
adc
dec
lcall
inc
cmp
cmpsl
movsb
or
in
push
arpl
dec
xchg
in
sarb
pusha
cmp
nop
pushf
add
push
out
xchg
fs
push
xchg
out
notb
pop
mov
push
ficompl
clc
add
shll
inc
leave
pop
and
rorb
loop
clc
lods
pop
push
mov
out
cmp
cmpsb
push
add
xchg
fistpll
lock
loopne
lret
fists
inc
mov
inc
and
mov
in
std
and
and
push
incl
cmc
or
aas
pop
mov
mov
sub
out
cmp
int
mov
aam
cmc
ja
sub
in
in
rcrb
mov
rolb
adc
cmc
push
mov
dec
push
jnp
and
shlb
pop
add
add
bound
mov
inc
mov
sbb
js
cmp
mov
fstpt
test
mov
adc
sub
mov
insb
imul
inc
ret
std
sub
imul
shr
ja
rcrb
enter
xchg
lret
jns
and
arpl
lods
and
int3
xchg
mov
sbb
movsb
cwtl
adcb
pop
mov
cld
lcall
aad
mov
xorl
pop
jg
pushf
mov
pop
sbb
ljmp
dec
inc
mov
data16
jg
cltd
cmp
mov
aad
int
push
or
xlat
xchg
cmpsl
xor
mov
lahf
cmp
sub
jno
mov
pop
fdivr
jl,pt
or
push
inc
xchg
mov
std
push
cmp
cmp
out
xor
mov
inc
hlt
mov
cli
xchg
and
inc
adc
inc
cld
aas
dec
in
xchg
in
shrl
mov
cltd
or
mov
lods
and
dec
filds
or
or
xchg
repnz
jae
fistl
add
ret
insb
lahf
cli
daa
mov
or
xchg
or
fcmove
push
mov
adc
pop
push
mov
xor
ljmp
fsubs
insl
icebp
mov
jb
fidivs
out
movsl
dec
popf
jae
add
arpl
icebp
jo
je
cltd
ds
adc
and
inc
adc
loop
stos
mov
sti
rcll
jge
cmp
hlt
imul
lahf
arpl
inc
or
fsubl
cmp
pop
jmp
adc
popf
stos
ss
fcom
and
sub
movsl
in
popa
add
or
mov
add
dec
in
sub
pop
in
daa
les
in
js
into
inc
stc
or
cmp
xor
scas
ja
out
out
and
sbb
pop
lea
int3
imul
mov
aas
inc
dec
and
or
loopne
jae
lret
xchg
pop
shlb
mov
ljmp
push
iret
ret
movsl
aad
mov
inc
pusha
xchg
bound
add
lret
mov
aaa
cmp
sbb
test
push
sbb
fucomip
lcall
sub
clc
aas
cmpsb
outsb
jbe
popa
in
int
or
out
out
jge
mov
fwait
test
push
scas
jecxz
jnp
mov
js
cmp
jb
push
push
lcall
mov
mov
test
push
sbb
push
jno
aaa
rorl
leave
push
mov
inc
movsb
cmc
xor
std
push
and
mov
in
mov
xor
mov
inc
jmp
cmp
dec
mov
es
pushf
stc
mov
arpl
pop
enter
mov
jb
test
shlb
jb
pop
mov
xor
adc
jle
test
xchg
inc
and
mov
imul
lds
cmpsl
bound
mov
mov
jne
insl
cltd
xchg
in
mov
int
xchg
out
nop
int3
cmp
out
jl
int
incl
push
sbb
leave
mov
testb
xor
addr16
outsl
cmpsb
xchg
shlb
out
pop
shl
and
fisubl
push
and
std
jnp
imul
aad
pusha
test
push
mov
jo
movsb
mov
jb
or
pop
cmp
pop
pop
push
and
sbb
loopne
fcomi
imul
das
mov
bound
shrl
iret
and
fimull
lret
add
xor
mov
sub
pop
stc
cli
pop
jp
push
es
aas
or
mov
or
in
movsl
bound
cmc
int
mov
addl
mov
ret
push
xor
mov
mov
test
adc
addr16
es
jno
lea
xchg
push
add
inc
inc
rorl
xchg
dec
xlat
out
out
shll
jno
mov
hlt
mov
lock
andl
or
inc
pop
mov
jg
lock
imull
cmp
arpl
jmp
jbe
arpl
sbb
xchg
and
push
adc
xchg
popa
jg
adc
jle
mov
mov
xchg
xor
sahf
pop
jns
inc
ja
and
cmp
and
cmp
hlt
mov
pop
iret
mov
scas
pop
xlat
mov
pop
ljmp
in
fstps
mov
jno
addb
pushl
enter
loope
lret
rclb
or
lcall
jb
addr16
push
lea
mov
aam
in
pop
cmp
add
or
and
sub
xor
lahf
dec
mov
outsl
lret
popa
ret
sub
cmpsb
cld
adc
ds
add
mov
add
cmp
cmpb
xchg
pop
adc
mov
mov
div
sti
xchg
mov
cld
sbb
mov
sahf
xchg
aad
fisubrs
xor
xchg
shlb
scas
pop
stos
add
fstl
orb
js
inc
push
lret
dec
cwtl
inc
mov
test
int
add
rolb
jo
icebp
cmc
push
cli
mov
repnz
add
dec
xchg
adc
fs
mov
fnsave
mov
fisubs
dec
repnz
cmp
mov
cmp
into
xor
xor
cmp
shl
andb
xchg
out
push
or
pop
xchg
movsb
mov
mov
jnp
jg
movsl
push
pop
out
jp
out
lea
sub
shlb
sbb
movsb
adc
jecxz
mov
cmp
add
xchg
cli
in
insl
std
pop
ljmp
pop
pop
dec
lret
imul
mov
cmp
pop
insb
mov
mov
push
outsb
rcrb
dec
lds
notl
add
jbe
mov
or
jae
int3
inc
adcl
adc
inc
enter
mov
loop
lods
test
cld
stos
sub
sub
pop
lret
mov
push
pop
mov
mov
iret
pop
cmp
inc
iret
ss
popf
mov
lret
mov
addr16
gs
cltd
jne
leave
cmp
jb
out
rcrl
mov
jnp
mov
sub
mov
sahf
ja
push
sub
sbbl
xchg
out
mov
dec
dec
int
shrb
aaa
ja
aaa
pop
out
scas
rcrb
popf
xchg
ret
jb
and
adc
sub
lods
fcomps
jmp
cld
xchg
add
ss
mov
jnp
cli
pop
add
nop
sbb
xchg
das
xchg
das
mov
outsl
sbb
add
dec
xor
pop
pop
mov
popa
imul
cmpsl
adc
cltd
adc
hlt
inc
dec
sub
push
push
lret
xor
xor
dec
jne
pusha
push
sbb
jmp
fcmovne
mov
es
adc
inc
add
lock
or
jbe
or
aaa
out
clc
shll
aam
pop
fldl
sub
lcall
adc
div
loop
xchg
rorb
fisubrl
cmp
pop
rorb
push
sbb
pop
cmp
stos
adc
dec
scas
popf
test
mov
les
mov
cmp
fisubrl
shl
sub
dec
daa
stc
out
ret
hlt
adc
idivl
stos
lcall
fistl
out
push
sub
gs
ljmp
nop
mov
push
inc
adc
add
cmpl
testb
fldcw
into
dec
sti
push
pop
sbb
adc
dec
mov
pop
cmc
add
or
notl
aam
call
les
popa
mov
mov
fisubs
inc
sbb
fwait
push
sub
dec
sub
sti
mov
repz
gs
and
out
clc
addr16
mov
jmp
std
sub
in
aam
lret
mov
xchg
cmpb
shl
mov
xchg
stos
jg
cmp
push
hlt
pop
movsb
mov
add
mov
pop
iret
jb
jmp
push
pop
and
out
repnz
fisubrl
mov
lret
sub
sub
in
or
jmp
rcl
mov
adc
pop
mov
fs
ss
jmp
pop
sbb
ljmp
xor
shlb
mov
adc
sbb
xor
nop
mov
xchg
dec
lods
int
sbb
mov
loop
xor
jne
in
xchg
dec
stos
outsb
daa
movsl
push
testl
testl
cltd
lea
jge
mov
dec
ljmp
xchg
nop
add
inc
mov
pop
sbb
adc
adc
das
fnsave
cmp
xchg
xor
in
jne
jmp
xchg
lock
jge
ljmp
mov
cmp
xor
xor
sbb
pop
cmpsb
aas
jle
mov
ror
push
inc
inc
inc
decl
loopne
movl
test
xchg
out
sbb
lods
xor
aas
and
push
enter
and
pop
repnz
xor
sbb
mov
jl
push
push
das
ret
mov
adc
outsb
out
inc
cmp
data16
mov
dec
add
pop
hlt
adc
mov
mov
and
xchg
mov
repz
mov
leave
pushf
cmpsl
adc
jg
pop
cs
stc
cmp
insb
mov
xchg
push
enter
mov
xor
ja
mov
lods
movsb
or
loop
dec
std
ljmp
sub
lret
leave
in
mov
and
cltd
out
pop
sbb
stc
repz
hlt
sbb
push
and
and
or
outsl
xor
addr16
or
aaa
in
pop
lret
mov
lea
cmp
jns
decl
dec
mov
adcl
dec
test
mov
inc
movsl
add
and
out
in
pop
subb
jne
rcrb
out
popf
dec
lods
jmp
xor
leavew
inc
ret
mov
outsl
in
jecxz
jae
and
loopne
jg
in
cmpsb
fnstsw
shrb
sbb
bswap
sub
imul
addr16
adc
or
xchg
dec
lcall
lret
outsl
pop
push
mov
inc
stos
lret
mov
cmp
mov
mov
cs
mov
jg
pop
adc
fsubs
fs
xchg
add
mov
inc
inc
jno
pop
pop
cmpsl
aaa
je
add
lods
fcompl
addl
dec
cmp
cld
or
pop
xor
sti
pushf
mov
lods
fsts
pop
and
enter
dec
jnp
in
cmc
inc
jle
pop
enter
jb
cmp
dec
out
pop
insb
movsb
in
test
or
clc
cmc
cmp
lcall
xchg
mov
insl
subb
ss
lret
or
nop
outsl
adc
cmp
pop
std
pop
aad
or
xor
outsl
insb
fwait
mov
dec
inc
aad
jge
out
outsl
inc
mov
push
inc
mov
ret
cltd
out
in
jmp
push
jns
lock
lret
xchg
xchg
lods
enter
inc
stos
pop
mov
jo
imul
pushf
mov
mov
push
inc
bound
inc
pop
data16
stos
popf
in
ret
and
popa
and
js
mov
mov
sbb
ss
xchg
inc
mov
test
ret
mov
xchg
fisttpll
mov
mov
imul
xor
or
push
ffreep
lcall
xor
popf
insl
loope
gs
sbb
data16
lods
fisttpl
jecxz
pop
inc
movsb
xor
mov
xchg
dec
or
cwtl
jb
lahf
out
add
cmp
jo
cli
dec
inc
push
cltd
ljmp
xchg
lcall
ret
adc
cmp
das
das
and
mov
mov
addl
ja
mov
mov
push
aas
lcall
call
mov
ror
pop
je
pop
adc
insl
lret
and
lret
clc
fdivrl
pop
xor
int3
aaa
lret
inc
xor
cmpsb
mov
stc
mov
mov
mov
dec
xor
push
add
movb
lods
sbb
in
fldt
or
out
sarl
aad
mov
call
arpl
icebp
fistpll
or
outsl
data16
push
mov
arpl
add
mov
cmp
aas
fsubs
int3
xor
sbb
push
sub
dec
aad
ret
mov
jl
sbb
cmc
nop
push
scas
test
or
in
ljmp
push
rorb
xor
cmp
cs
loope
adc
xor
jbe
ds
jl
pushf
xor
jnp
ret
icebp
shrl
test
cwtl
sub
daa
mov
or
xchg
sbb
dec
fs
jg
mov
imul
or
out
lds
nop
cmp
pushf
dec
jl,pt
cmc
test
ja
mov
jno
mov
cmp
adc
mov
push
lahf
out
aaa
mov
pop
and
pop
inc
mov
scas
adc
roll
loop
subb
pop
add
push
fmul
loopne
push
dec
cmp
scas
add
mov
fcmovnu
inc
and
dec
cmc
fwait
lods
loopne
mov
adc
lcall
jp
ret
fwait
mov
jbe
ficoml
mov
lds
cmp
sub
es
xor
push
std
dec
xor
call
cmp
pushf
lea
push
sbb
xchg
les
xor
and
out
test
push
push
dec
push
or
in
xor
cli
fucom
dec
sarl
stc
cmc
test
adc
xchg
or
mov
jns
loopne
xor
gs
loopne
mov
and
popa
inc
mov
inc
xor
lock
hlt
mov
in
jb
dec
inc
nop
mov
mov
lcall
add
lods
jp
push
mov
inc
cs
js
jns
test
add
test
jnp
das
insb
loop
add
or
ffreep
sub
jbe
xchg
pushf
sbb
imul
nop
aaa
das
jbe
aam
push
mov
add
cmc
addl
mov
add
gs
dec
movsb
test
or
push
push
mov
jae
mov
inc
adc
movsb
push
jo
pop
aaa
in
repnz
inc
push
jbe
subb
aas
push
dec
push
lods
int3
or
mov
out
movsl
inc
dec
sub
mov
push
sbb
xor
or
in
mov
sub
push
repz
fucomp
shll
int
xchg
lret
insb
jno
inc
pop
push
dec
orb
xor
outsl
outsb
or
aas
repnz
adc
arpl
xchg
movsl
stos
sub
xchg
mov
outsb
cmpsl
enter
shlb
frndint
xchg
lahf
inc
repz
scas
shrl
jle
iret
daa
shlb
add
clc
mov
ret
xchg
rorb
stos
jne
push
loop
repz
dec
fistps
outsl
jne
mov
cmp
js
add
mov
out
loopne
subb
lahf
lret
lea
movsl
xchg
adc
jl
fcoms
call
xchg
xchg
push
daa
cmp
inc
or
mov
les
inc
dec
lods
pop
mov
inc
jnp
push
sti
ss
cmp
sub
popf
add
decl
mov
and
insb
in
cmp
addr16
sbbb
xchg
push
pop
roll
pushf
push
fldenv
pop
and
in
xchg
push
nop
mov
inc
push
pop
enter
mov
repz
adc
js
shr
std
push
and
and
sub
aam
ss
dec
mov
sub
adc
jbe
push
gs
and
sub
mov
jle
adcb
xchg
lods
xchg
lret
iret
mov
hlt
fstpt
dec
cmp
cmp
push
push
repnz
addl
lcall
loopne
loopne
and
pop
push
test
in
sbb
aad
cmpsb
lock
out
xchg
jle
out
xor
cld
pop
xchg
xor
jg
jp
xor
or
mov
sub
inc
jae
sub
clc
sbb
in
mov
clc
pusha
sbb
or
xchg
inc
iret
mov
cmpsl
adc
rorl
dec
iret
mov
jae
pusha
and
inc
ss
test
mov
xor
sbbb
jnp
pop
sub
add
sbb
nop
pop
push
adc
fs
pop
push
jnp
rclb
xchg
push
iret
mov
or
repnz
jb
cmovg
popa
outsl
insb
scas
dec
sub
mov
mov
outsb
jns
pop
int
mov
rorl
inc
pop
and
ljmp
xor
repnz
jl
repz
imul
jnp
xchg
in
enter
xor
enter
cmpsb
inc
mov
push
jg
aas
pop
ds
adc
xlat
hlt
cmp
add
lods
mov
popa
cmp
clc
int3
xchg
test
std
add
mov
mov
add
sub
pop
push
aas
xchg
adcb
sbb
push
lea
sahf
or
push
lods
test
sbb
cmpb
inc
aad
adc
fs
xor
add
mov
test
scas
lret
ss
fsubl
icebp
jmp
lock
jge
cmc
mov
add
test
mov
mov
mov
aas
pop
daa
mov
adc
xchg
rolb
sbb
pushf
xchg
or
xor
js
jbe
sub
xor
popa
mov
addr16
xor
mov
mov
push
outsl
push
imul
xchg
push
cld
imul
data16
xor
fs
dec
inc
xor
repz
cmp
inc
ja
sbbb
mov
ja
jl
add
divl
enter
jecxz
loop
push
imul
push
ret
jg
mov
inc
testb
ss
dec
push
mov
dec
test
xor
pop
dec
push
jae
sub
xchg
xchg
dec
aas
or
sub
popa
outsl
push
stos
sub
and
sbb
push
pop
pop
xchg
lret
or
dec
jbe
imul
call
xor
aas
mull
and
sahf
icebp
jo
push
inc
ds
mov
outsl
dec
cmpsb
inc
pop
dec
push
mov
adc
stc
sbb
loopne
dec
mov
cmp
fwait
cmp
pop
cmp
movsb
mov
pushf
cs
mov
test
sub
sbb
loop
cmc
scas
push
test
mov
in
cmc
jg
outsb
and
sbb
or
iret
mov
cltd
cmc
jecxz
in
cld
daa
outsb
push
in
sub
add
fsubr
and
cmpsl
ficoms
mov
jecxz
pop
xlat
ja
cmp
stos
mov
lret
aad
cmc
add
hlt
adc
loop
int
addr16
push
fldenv
xlat
dec
fadds
imul
jge
mov
adc
imul
sbb
fcmovnb
or
pop
adc
sti
push
jno
inc
imul
scas
add
adc
xchg
mov
ret
clc
movsb
mov
jge
sub
lea
xchg
mov
pusha
repnz
in
push
add
movsb
lret
lea
pop
cmc
imul
cmp
and
icebp
push
shlb
adc
inc
mov
adc
loop
adc
daa
rcll
inc
inc
sub
push
push
shlb
inc
icebp
cli
fdivrp
xchg
sbb
or
in
push
mov
push
jo
add
dec
test
mov
mov
push
sub
and
jecxz
test
or
dec
cmp
imul
mov
stos
fidivrl
cwtl
ret
insl
cmp
sti
and
inc
jmp
inc
add
dec
dec
pop
mov
sbb
pusha
inc
jge
dec
into
je,pt
inc
sbb
mov
adc
fsub
sbb
outsl
outsb
addl
arpl
js
imul
out
push
daa
pop
dec
add
cli
add
mov
add
test
sub
aad
movsb
arpl
and
out
push
mov
pop
push
adc
clc
mov
push
add
sti
sbb
cmc
adc
fstpl
dec
test
add
pop
mov
or
lods
pop
or
stos
test
cmpsl
push
daa
inc
nop
lock
xor
ds
bound
loope
add
outsl
insb
pop
in
inc
movsb
pop
inc
xlat
push
mov
jle
into
stos
ret
and
mov
test
and
mov
add
cmpsb
xor
xor
mov
push
arpl
out
roll
getsec
inc
push
xor
xlat
or
inc
data16
push
sub
and
inc
mov
aam
jo
dec
gs
jno
lock
pop
lds
inc
test
mov
clc
xor
inc
in
xchg
xor
bts
ss
lock
icebp
adc
rol
sbb
inc
pusha
push
pop
pushf
ret
xor
pop
aas
mov
movsl
loope
xor
js
jmp
jno
test
xchg
shl
jae
push
ret
jbe
iret
and
pop
dec
test
push
pop
xchg
das
mov
mov
push
lods
adc
inc
mov
push
jge
in
mov
addl
xor
loopne
lcall
shll
sub
dec
cltd
xchg
or
pop
sbb
mov
dec
dec
sub
jns
les
jns
inc
in
sbb
aas
cmpsb
pop
dec
sarl
jns
iret
movl
jnp
lret
inc
clc
mov
add
out
int
and
mov
mov
push
add
mov
xchg
pop
addr16
sahf
sbb
pop
lea
mov
dec
movsb
repz
cwtl
or
movsl
xchg
inc
inc
mov
mov
sbb
or
js
jge
jbe
xor
mov
test
sub
cwtl
push
loope
add
jecxz
push
and
ret
sti
jle
insb
punpckhwd
xchg
cmc
add
xor
in
jns
insb
sub
push
lock
jmp
mov
dec
adc
xor
and
mov
movsb
andb
outsl
loope
inc
js
dec
add
mul
repz
mov
std
mov
outsb
inc
sbb
cli
stos
loope,pt
in
loop
sub
lods
rclb
popf
mov
outsl
dec
push
xchg
xlat
movsl
jo
dec
xchg
nop
outsl
nop
lahf
fistps
rcrb
test
lock
mov
dec
imul
pop
mov
jmp
fistps
rolb
and
in
pop
fs
inc
pop
push
add
dec
cmp
gs
pusha
or
out
xor
xchg
sbb
lock
dec
int
push
gs
jecxz
xchg
mov
notl
test
in
in
push
daa
pop
or
divb
sbbl
mov
ficompl
sahf
int3
fs
loopne
fistpll
cltd
addl
mov
dec
hlt
push
insl
dec
addr16
je
hlt
jo
pop
adc
in
scas
cmp
sbb
sbb
cmp
mov
lahf
xchg
inc
sub
scas
sub
add
ss
lods
jbe
push
popa
jae
mov
push
fnstenv
dec
std
jle
lea
loopne
test
pop
pop
repnz
out
rolb
inc
mov
xchg
sub
mov
xor
dec
pop
ljmp
jmp
push
mov
inc
and
xchg
int3
addr16
test
test
lods
test
adc
add
mov
push
cmp
arpl
adc
dec
in
mov
adc
xor
xor
bsr
int
lret
or
loop
dec
inc
mov
mov
leave
stc
loope
rolb
mov
lds
jnp
sarl
sbb
cmp
stc
xor
mov
mov
aam
into
and
mov
xor
sub
pop
xchg
push
push
pushf
fsubl
iret
imul
ds
cmc
mov
adc
cmp
out
lock
xchg
int3
mov
mov
xor
mov
scas
mov
and
out
gs
xor
repz
mov
adc
and
xchg
adc
or
ja
mov
cmp
imul
out
sub
sub
sahf
dec
mov
and
data16
stc
gs
rolb
hlt
and
or
mov
loop
inc
adc
mov
xchg
push
js
mov
pop
shl
push
ret
cmpsl
xor
mov
push
jae
mov
adc
iret
sbb
mov
push
xor
push
sbb
cmpsb
imul
stc
dec
cmp
int3
pusha
cld
cli
lcall
js
xchg
push
mov
hlt
popf
mov
push
repnz
test
call
sahf
jo
push
xor
sahf
push
ja
mov
gs
arpl
add
and
aaa
mov
mov
mov
in
in
scas
in
aaa
iret
mov
inc
jo
inc
or
or
sub
jbe
or
pop
popl
mov
mov
out
xchg
mov
call
sbb
push
jmp
dec
cmp
and
jle
jne
dec
out
inc
cmc
cmpsb
mov
repz
rorl
mov
pop
cmpsl
push
xchg
xchg
andl
mov
sahf
imul
in
or
mov
dec
ret
int
dec
pop
mov
sub
repnz
dec
sbb
jae
pop
iret
sub
shl
andb
das
push
in
mov
add
nop
popa
pop
jne
inc
jns
int3
jmp
imul
out
aad
orb
mov
mov
leave
mov
or
cli
lret
mov
dec
pop
mov
xor
pop
pop
xor
push
sub
ret
stc
jge
call
push
lock
mov
add
daa
push
add
sub
xor
push
mov
xor
js
aaa
mov
pop
pop
fisubl
repnz
add
outsb
inc
push
imul
bound
in
icebp
mov
insl
imul
xor
sahf
sbb
loopne
jle
pop
mov
sti
lea
push
jl
sbb
scas
test
xor
inc
mov
mov
pop
cwtl
mov
add
icebp
push
insb
push
lods
imul
shl
jns
enter
shlb
lahf
xchg
and
add
jp
push
xchg
int
mov
shlb
scas
xor
mov
push
loop
xchg
aam
or
enter
filds
lahf
scas
cmp
xchg
into
cld
mov
mov
jp
xlat
sub
and
sti
cmpsb
push
push
fnstcw
xchg
cmpsl
cmp
in
inc
mov
adc
cmpsb
cmp
or
test
sub
or
mov
cmp
cmp
xor
inc
push
daa
jns
push
es
push
adc
mov
cmp
adc
ljmp
adc
ret
addb
adc
nop
das
and
cltd
cld
jno
add
int3
xor
cmpl
and
in
jle
fisttpl
xchg
and
jecxz
sbb
mov
cs
bound
dec
out
test
shrb
push
lds
mov
stc
stos
jbe
sub
imul
add
inc
fdivrl
mov
mov
pop
xchg
lock
out
stos
std
push
mov
or
sbb
outsb
out
popa
xor
icebp
cmp
xchg
lds
sbb
test
ret
mov
xor
push
cmpsb
xchg
xor
dec
and
out
jg
xor
cwtl
dec
push
mov
es
fucom
add
sub
or
and
and
movq
addb
inc
inc
arpl
es
push
repnz
and
repz
into
mov
das
nop
push
cltd
cmp
mov
mov
or
into
ret
sarb
lcall
mov
cmpsl
push
sarl
or
fdivrl
pop
mov
push
fistpl
mov
orb
ljmp
ret
xchg
or
movsl
int3
nop
pop
and
repnz
outsl
cmp
dec
xchg
pushf
push
push
pusha
shll
cmp
dec
sbb
xchg
and
dec
hlt
rclb
ss
xor
fcmovnb
cmpsb
incb
fwait
lahf
icebp
shlb
pop
sahf
in
mov
mov
jb
push
in
std
das
inc
cmc
call
scas
insl
mov
lahf
mov
fisubrl
ljmp
xor
shlb
ljmp
mov
pop
rorl
sbb
push
xchg
movl
push
mov
test
mov
xchg
imul
pop
pop
inc
xor
movsl
jb
xchg
pop
inc
sahf
pushf
sub
xchg
das
and
dec
sbb
roll
call
mov
adc
out
out
out
lret
call
mov
shl
mov
add
cld
xor
push
enter
mov
mov
stos
dec
fiaddl
sub
cmpb
ljmp
in
dec
mov
mov
insl
int3
out
and
sbb
icebp
out
adc
mov
arpl
pop
test
jp
xchg
lods
mov
sbb
enter
jo
mov
out
rcrb
or
pop
sub
aad
or
fwait
pop
mov
in
je
sbb
mov
in
dec
lods
fsubrs
les
faddl
inc
aas
out
sbbb
inc
test
mov
mov
loope
repz
subl
sarb
add
in
mov
lret
or
cmp
lahf
sarl
push
mov
add
adc
xor
jns
sbb
leave
cmc
fiadds
xor
insb
sub
and
sub
shlb
ret
add
mov
inc
into
push
pop
pop
testl
sub
adc
push
mov
in
inc
and
nop
aaa
sbb
imulb
js
data16
inc
pushf
repz
and
pop
divl
das
flds
add
and
dec
out
push
mov
repz
inc
mov
cmp
inc
mov
ds
jbe
fistpll
ja
mov
mov
jle
hlt
fiadds
push
sbb
lods
loopne
mov
jbe
jne
lods
mov
call
in
divl
std
and
mov
xor
daa
dec
int3
cld
aam
xor
test
xchg
and
mov
sbb
mov
xchg
mov
jl
cli
xchg
sub
sub
scas
call
lods
gs
adc
sub
les
mov
stos
mov
jno
xchg
shlb
call
aad
xorb
pop
mov
sub
sbb
push
jb
xor
and
adc
ss
ficoms
icebp
imul
test
pop
sbb
pop
outsl
sarb
cwtl
roll
call
in
sbb
fbstp
push
xor
cmp
cld
xor
add
fisttpll
pusha
or
stos
std
jbe
fistpl
fidivs
xor
push
mov
lret
lcall
fsubs
out
jo
jmp
or
mov
pop
outsb
scas
icebp
jle
out
inc
in
mov
jg
lods
inc
or
sbb
sbb
lds
pop
ljmp
fstps
aam
int3
sbb
sbb
push
test
cltd
lds
fimuls
push
jne
jle
sub
fucomip
xchg
cmp
mov
push
nop
inc
jg
mov
sbb
dec
xor
inc
ja
jnp
ror
loop
mov
adc
ja
gs
mov
mov
push
ss
cmp
jle
lods
xlat
sub
jne
test
add
das
xchg
jns
or
stos
push
mov
fistps
sbb
pop
loope
jbe
ss
add
dec
outsb
movsl
aam
lcall
mov
lea
sar
addr16
cmp
xor
out
xchg
popf
arpl
sbb
sub
aaa
dec
sub
sbb
adc
stc
subl
loope
adc
gs
imul
std
ret
mov
cmp
data16
jl
jecxz
sub
and
insl
pop
pop
repnz
adc
fldenv
mov
add
test
lods
out
jmp
jge
sub
mov
test
mov
popa
sub
sbb
mov
adc
mov
cmp
jmp
lea
shlb
hlt
rorb
mov
outsl
rcll
repnz
and
in
gs
lods
push
orl
rorb
fwait
inc
pop
fldcw
lea
cmpsb
xchg
in
stc
mov
and
fnsave
sub
inc
xlat
mov
les
sbb
aaa
mov
fldcw
cwtl
xor
popf
out
or
mov
cmpsb
movsl
insb
dec
cmp
mov
hlt
pop
aad
int
mov
or
push
inc
xchg
push
cltd
mov
mov
xchg
push
out
adc
add
in
xor
jle
sbb
cltd
movsl
jne
leave
push
or
xor
add
jbe
mov
pop
popf
loopne
int
sub
lahf
fsubrl
dec
push
or
adc
loopne
pop
adc
sbb
dec
adc
dec
jo
outsb
sbb
mov
add
addr16
aad
ja
lods
push
pop
jg
jmp
or
cmpsb
jge
push
jae
sbb
and
js
mov
xor
xchg
andl
jbe
jbe
fdivs
mov
hlt
out
sbb
adc
loopne
lds
adc
xchg
fwait
inc
ljmp
daa
sbb
jbe
cwtl
out
sahf
mov
cmp
pop
mov
pop
inc
test
loope
jnp
js
popa
xchg
and
dec
or
test
xor
push
mov
add
mov
in
dec
lahf
add
movb
in
jno
mov
js
fsubl
fiadds
outsl
xchg
jle
xchg
pusha
pop
imul
mov
pop
or
das
dec
push
xchg
lods
idivl
or
out
and
scas
pushf
mov
sub
pop
xor
es
mov
loop
leave
sbb
out
cmp
jge
rcll
test
dec
inc
or
sbb
add
or
cmp
iret
clc
cwtl
jo
lahf
imul
dec
cld
push
pop
imul
nop
xchg
sub
ret
xchg
or
fsts
sub
dec
mov
add
jl
dec
les
lahf
out
add
ret
adc
pop
daa
or
push
je
or
mov
push
add
loop
hlt
push
mov
push
repnz
jle
dec
pop
aas
imul
or
inc
mov
mov
push
push
loopne
ja
cwtl
in
aam
mov
ficoml
in
mov
xor
in
scas
sub
push
push
mov
add
stos
out
enter
adc
outsb
fwait
cmc
cmp
xor
adc
cmp
dec
sahf
inc
adc
add
mov
out
movl
mov
fcmovnu
das
rcrb
addr16
gs
test
xor
push
out
cmc
idiv
shll
xchg
pop
sub
mov
mov
mov
xchg
push
jp
out
nop
aaa
imul
and
fisttps
lret
cli
dec
mov
cmp
jmp
movnti
mov
out
dec
cmp
leave
cld
pop
stos
daa
imul
movsb
add
lahf
xchg
sbb
and
sbb
dec
mov
lea
push
in
mov
adc
dec
lds
stos
movb
add
dec
and
or
lahf
inc
ja
mov
les
fdivrl
jl
orl
aas
cmc
fwait
push
pushf
sbb
clc
adc
les
push
and
cltd
or
movsl
stc
cmp
and
and
test
and
es
or
cmp
mov
xor
nop
imul
push
lret
es
sarb
loopne
loop
outsb
andb
mov
push
std
xor
ret
sub
fs
sbb
out
lret
ret
sub
jge
mov
add
arpl
jo
stos
sub
movsl
out
adc
clc
mov
pop
daa
ja
rol
in
into
ss
inc
cmc
out
and
movsl
and
icebp
lea
aam
sbb
ss
jns
rcll
popf
cmp
sti
subl
jbe
lcall
mov
fdecstp
outsl
xor
outsl
adc
pop
clc
xor
xchg
push
push
ds
les
nop
sbb
push
nop
cltd
fwait
into
inc
out
dec
mov
js
stos
or
lret
sub
daa
mov
cmpsl
in
sti
mov
into
fistpll
and
test
and
stos
ljmp
lods
jp
sub
cwtl
inc
or
sbb
or
fldl
push
xlat
stos
out
iret
mov
xor
and
jl
test
ror
mov
mov
xor
stc
mov
fisubrs
sub
loopne
movsb
movsl
cltd
mov
loop
cltd
addb
add
movb
jmp
push
adc
fimull
stc
xchg
sub
jle
jnp
mov
das
ljmp
frstor
sub
stc
inc
dec
push
arpl
sbb
jmp
hlt
adc
imull
rol
fs
fldl
add
sub
add
inc
in
arpl
inc
jnp
mov
inc
push
dec
dec
mov
push
cltd
sub
jp
push
push
sub
das
dec
scas
sub
test
rcl
pop
xor
xchg
fiadds
int
mov
inc
imul
mov
inc
psllq
outsb
push
scas
add
jge
adc
cmp
ja
arpl
jp
repnz
fstp
cmp
mov
notl
mov
jbe
adc
ss
mov
sarb
lea
xchg
mov
xchg
test
inc
push
hlt
xor
mov
rcl
in
xchg
movsl
ss
sbb
dec
pop
mov
test
inc
ss
out
push
jne
jle
fisttpl
leave
sbb
shlb
repz
dec
rclb
aaa
xorl
and
je
sub
test
movsl
and
lahf
sbb
add
loope
scas
push
fisttps
mov
mov
push
or
lret
stos
adc
xlat
or
addr16
or
sbb
js
mov
ret
mov
sub
fistpl
inc
in
add
push
jbe
and
mov
dec
cmp
cmp
jns
mov
call
adc
add
mov
popl
xchg
aaa
cmp
jns
cmp
insb
mov
push
out
mov
jle
cwtl
and
pop
sarl
inc
xchg
sahf
test
negb
or
imul
mov
out
andb
jns
mov
outsl
gs
add
cmp
jl
bound
lcall
add
xlat
push
push
ljmp
jnp
outsb
xor
into
cmpsl
inc
adc
lods
int3
jmp
lods
add
cmp
xor
ds
out
loope
push
ret
adc
xchg
jp
fdivrl
pop
push
sub
jb
fwait
repz
sarb
mov
jnp
rclb
inc
nop
jnp
sub
sub
decl
jne
repnz
inc
cli
sbb
dec
inc
mov
sbb
jge
inc
xchg
cmc
fwait
nop
push
clc
pop
add
stos
int3
adc
fldenv
inc
pushf
loop
dec
jmp
int
xchg
jno
test
push
add
jno
out
dec
dec
sahf
leave
jge
jno
mov
das
push
lods
mov
andb
mov
out
mov
and
hlt
int3
sub
adc
out
adc
dec
test
adc
dec
jne
cmp
in
loop
rcll
das
sub
test
mov
pusha
or
mov
cmp
movsl
sti
adc
fimull
imul
xchg
mov
mov
dec
xor
inc
loope
xor
mov
ljmp
adc
shl
aad
jecxz
sbb
jb
mov
sub
addr16
xor
mov
icebp
aaa
jmp
mov
or
adc
bound
mov
scas
enter
add
fcmovne
lods
divl
popf
jae
loopne
fdivl
cmc
cltd
popl
cltd
adc
lea
outsb
and
dec
jae
xchg
jge
pusha
aad
mov
jbe
lock
pop
cltd
mov
popa
xchg
inc
fwait
add
xor
mov
out
or
std
les
je
pop
sbb
aad
addr16
or
bound
loopne
xor
rcrl
aaa
ja
cmp
sbb
inc
mov
lret
adc
push
insb
push
rcll
mov
imul
sub
cltd
ds
sub
pop
pop
mov
arpl
xchg
adc
ret
inc
je
js
insl
test
mov
clc
sti
sub
pop
mov
fisubrl
aam
cltd
sbb
imul
cmp
mov
sub
in
lock
loopw
mov
das
mov
int
dec
push
inc
repz
push
std
test
sub
inc
push
pop
ficoml
pushf
mov
jecxz
pop
mov
pop
sub
loope
frstor
push
or
and
add
mov
mov
les
add
ss
jnp
push
out
mov
inc
cmp
xchg
test
xor
in
ffreep
out
cmpsl
test
push
push
mov
xchg
fs
cmpsl
or
ret
aaa
leave
jle
add
push
inc
mov
mov
repnz
xchg
cmp
lret
xor
cld
pop
xor
popf
lea
pushf
and
inc
aam
inc
and
loop
lahf
lahf
xor
and
jmp
fidivs
jo
das
inc
shll
fnsave
mov
mov
mov
inc
jo
mov
xchg
or
scas
lcall
xchg
cmp
add
daa
pop
add
inc
sub
mov
idiv
lock
inc
mov
addr16
push
adc
and
jbe
je
out
outsb
out
inc
sahf
inc
xchg
fwait
push
pop
inc
lock
push
inc
fsubrl
jg
lock
imul
iret
dec
lahf
xor
mov
adc
cmpsb
jnp
cmp
sbb
adc
data16
sub
cmp
sbb
dec
mov
mov
test
adcl
pop
inc
in
fld
inc
pop
push
jbe
cltd
arpl
cli
and
xchg
cmp
xor
outsb
sbb
lea
sub
std
xchg
scas
mov
inc
inc
dec
sbb
jo
subl
push
jl
cmpl
mov
ds
rep
xchg
xor
lret
inc
adc
xchg
dec
in
mov
sbb
push
adc
or
arpl
push
or
cld
inc
lret
cmp
push
add
in
pop
pop
xor
popa
movsl
push
mov
adc
push
shlb
cmp
mov
push
dec
fildll
iret
pop
jae
ljmp
fmull
lods
cmp
or
imul
es
fistpll
testb
inc
les
mov
insb
xor
xchg
jnp
pop
adc
jns
in
fwait
mov
shll
ss
push
xor
ss
nop
lahf
stc
ds
es
jecxz
shll
xor
ret
inc
outsl
jne
xchg
or
gs
cmp
push
je
xchg
mov
test
leave
je
jae
adc
pop
std
pop
lret
hlt
xor
testb
scas
shlb
and
add
popf
mov
sbb
sbb
jns
xor
inc
push
add
scas
lret
and
jp
insl
and
lret
xchg
inc
out
outsl
outsl
aas
sub
mov
pop
call
cmp
cwtl
enter
push
lea
mov
mov
dec
cmc
int
dec
lcall
cmp
fstpl
jns
xlat
addr16
iret
cmpsl
cli
aam
mov
je
inc
stos
pop
pusha
push
adc
push
mov
cmp
push
mov
jns
lret
loope
jo
push
pop
push
jo
xchg
scas
clc
stc
xchg
pop
pop
jge
mov
aaa
xchg
push
movsl
pop
inc
sbb
test
ss
popf
out
sub
xchg
jae
cmpsb
shr
pop
ficompl
shlb
inc
test
loope
lock
mov
or
imul
mov
jg
subl
dec
add
adc
je
sti
push
insb
mov
stos
popf
pop
add
fstpt
and
xor
push
adc
push
mov
shll
out
cmpsb
push
test
pop
lods
imul
xchg
adc
dec
xchg
push
xor
jmp
shlb
cli
xor
insb
or
inc
push
aam
sti
rcll
mov
jo
mov
stos
popf
call
cmp
xorb
jae
stos
fimull
ja
inc
add
hlt
xor
add
scas
xchg
sarb
dec
dec
es
aas
sub
dec
dec
mov
xor
test
push
mov
push
test
mov
adc
scas
ret
mov
mov
test
outsl
iret
inc
test
insl
jbe
and
mov
push
mov
fwait
in
push
outsb
pop
pop
popf
sbb
jo
push
lret
adc
inc
cmp
xchg
sub
and
jne
xlat
push
loopne
cmp
mov
sarb
gs
sahf
int
jle
or
shll
scas
shll
dec
daa
jmp
pop
pop
scas
hlt
xor
arpl
pop
cmp
lret
iret
mov
fidivrs
test
lret
fbld
movsl
or
jp
mov
scas
jne
pop
ret
je
push
xchg
repnz
adc
icebp
jns
cmp
loop
test
or
mov
cli
adc
iret
std
mov
or
rcrl
jl
jae
out
push
dec
sbb
sub
outsl
inc
ficoml
cwtl
adc
ret
sti
pop
das
dec
dec
push
push
adc
push
out
xchg
lds
hlt
repz
push
mov
jns
adc
mov
daa
mov
mov
pop
xor
call
nop
jo
add
test
lods
mov
adc
fdivl
sbb
jg
jae
mov
icebp
fbstp
ret
imul
add
movsb
dec
xchg
pop
sbb
and
pop
stos
inc
js
iret
call
and
lret
popf
inc
mov
xor
xor
mov
push
push
push
sbb
mov
mov
or
stc
outsb
mov
lea
mov
push
fisubl
scas
push
jp
or
adcl
adc
mov
mov
in
popa
loop
push
sub
ljmp
mov
ljmp
cmpsl
scas
ds
jae
adc
insb
add
test
insb
push
push
cmp
movsl
sub
or
jb
jae
leave
cmp
xchg
push
fistpll
xlat
js
inc
bsr
in
mov
iret
mov
lret
clc
mov
leave
das
fmull
mov
pop
dec
push
loop
pop
lret
scas
inc
jo
test
mov
mov
popf
sbb
jl
arpl
dec
cld
push
jns
pop
adc
adc
call
add
xchg
data16
push
or
adc
movsb
cltd
pop
push
cmp
mov
daa
ljmp
aaa
cmp
push
inc
sbb
mov
stc
rcrl
mov
pop
pop
insl
shl
and
icebp
xor
push
dec
out
xor
gs
sbb
in
insl
mov
test
insl
lahf
in
arpl
or
pop
pop
jg
addl
imul
push
loope
jnp
jmp
mov
js
lahf
pop
imul
leave
pop
inc
rorl
mov
mov
and
or
test
xor
sbb
ja
mov
xlat
or
pop
into
and
stos
inc
xor
sbb
lea
push
sub
and
test
jne
push
push
sbb
push
mov
pop
sbb
in
int
std
rorb
lret
ss
xchg
jle
aam
push
adc
sub
mov
enter
adcl
xchg
push
out
popa
sbb
pop
stos
fcoms
pop
xchg
lock
jmp
add
mov
aad
nop
or
pop
push
cmpsb
rclb
decb
add
sbb
mov
inc
add
insb
sub
jmp
lds
bound
ror
or
cli
pop
cwtl
cmc
andl
repz
rcrl
push
les
add
test
xor
or
sub
pop
xor
pop
cmp
lds
sub
call
into
daa
inc
ljmp
out
xor
lret
orl
outsb
add
subb
sbb
daa
pop
mov
int
dec
cmc
sub
jp
or
jecxz
mov
adc
xor
pop
rcrb
adc
adc
cmpsl
roll
test
lahf
mov
sub
pop
scas
push
inc
jmp
cmc
cmp
mov
push
adc
push
ja
sbb
push
jecxz
inc
dec
pop
pop
imul
orb
popf
cmp
clc
imul
ret
add
loop
add
daa
sahf
pop
inc
jo
aam
mov
and
lods
lods
mov
mov
outsb
addr16
std
cs
int3
lods
sbb
xchg
push
cmp
mov
data16
ficomps
out
outsb
loop
xor
cmp
leave
sbb
and
lahf
mov
mov
jb
out
xor
mov
or
pushf
lods
scas
inc
frstor
push
pop
mov
cmp
sahf
mov
rcll
pop
fwait
roll
push
mov
xchg
push
inc
mov
pop
int
xor
out
mov
or
mov
mov
jge
mul
int
hlt
xlat
lahf
mov
sub
in
fldl
sbb
push
sub
rorl
ret
popa
or
dec
int3
push
lret
js
pop
shrb
js
inc
cmp
fildll
mov
sbb
or
pop
mov
fcomps
pop
xor
les
aaa
fstps
call
xchg
in
push
loop
or
movsl
mov
or
sarl
sub
inc
add
js
mov
leave
mov
pop
out
hlt
outsb
jno
sbb
popf
insl
jmp
insb
add
pop
dec
fs
and
lods
jbe
test
mov
ds
push
xor
cmc
mov
mov
loop
aas
add
jne
xchg
mov
lds
lcall
adc
iret
sbbl
movsl
lret
add
and
jo
roll
mov
push
mov
mov
hlt
out
adc
cmpsl
mov
out
pop
je
mov
dec
sub
cmpsb
lods
rcrl
pop
mov
lock
lock
ljmp
mov
xlat
lret
test
sbb
insb
lret
sbbl
xchg
adc
sbb
lahf
repz
dec
mov
subl
loopne
inc
add
or
push
mov
mov
sahf
push
adc
xor
jo
pusha
xchg
int
clc
out
adc
mov
mov
push
mov
cmp
jmp
push
sbb
push
inc
mov
push
ja
fdivs
andb
cmp
out
jecxz
ljmp
fisttps
adc
xchg
test
in
in
movsl
pop
data16
sub
inc
in
imulb
dec
push
ret
insb
aam
popf
mov
lods
sti
mov
xchg
shll
push
cmp
jo
ror
testb
xchg
cmp
add
negb
andb
lds
sahf
movsl
jbe
nop
pop
mov
push
movsb
leave
push
repz
insb
cmp
pop
inc
or
push
mov
into
icebp
mov
mov
and
push
add
rorl
test
pushf
in
call
xlat
ljmp
aas
push
sbb
insl
push
pop
mov
hlt
in
lea
fwait
rclb
shll
pop
inc
jp
out
scas
pop
aas
mov
lret
and
inc
sbbl
push
lea
int3
adcl
mov
lods
mov
mov
add
shrb
lahf
cmpsl
pop
out
or
lret
mov
cmp
dec
sqrtps
lahf
ds
adc
push
and
sbb
test
xchg
jg
lods
outsl
xor
and
jo
or
in
push
push
sub
push
sar
pop
and
arpl
scas
faddl
sbbl
enter
js
inc
adc
push
xor
cmp
inc
or
or
lret
fmul
fwait
sub
adc
mov
es
lods
test
fcomps
clc
sbb
imul
aaa
mov
imul
clc
jae
lcall
inc
inc
addr16
xchg
xchg
mov
push
mov
add
mov
adc
push
pop
insl
scas
lcall
fisttps
scas
xor
inc
inc
adc
cmpsb
mov
dec
shrl
sbb
add
pop
les
adc
int
pop
mov
mov
xlat
les
cmp
out
cmp
insb
mov
lret
xchg
cmp
mov
inc
and
and
cmpl
push
in
clc
cmp
insl
clc
rolb
jg
ja
rorb
sbb
xor
cmp
cmpsl
leave
and
xchg
aaa
test
or
push
fstl
xor
test
pop
and
cwtl
cmp
test
dec
jbe
inc
fbstp
iret
into
aas
mov
xchg
push
movsb
out
mov
mov
out
mov
insl
js
pop
mov
in
outsb
loopne
mov
mov
mov
push
mov
or
lcall
mov
adc
mov
xchg
fbld
xchg
jge
sub
inc
or
movsl
fists
mov
mov
inc
xrelease
or
dec
mov
xchg
or
push
pop
or
sub
push
es
and
pop
lods
out
xchg
cmp
addr16
scas
sahf
arpl
fidivl
pop
mov
enter
or
jo
mov
add
mov
in
ret
lahf
sbb
cld
or
fs
xorb
pop
ss
push
pop
xchg
in
dec
jbe
int3
pop
adcl
out
dec
bound
mov
daa
mov
xchg
push
lods
add
adc
stos
add
cmp
push
andb
pop
test
mov
cltd
scas
mov
push
gs
or
push
jl
add
insl
add
pusha
movsl
push
inc
adc
outsb
mov
rcrl
mov
in
push
popf
pop
push
fisttps
jno
int3
adc
and
xchg
dec
fwait
ret
movsb
mov
jns
scas
imul
fistps
icebp
outsb
push
fstps
cmp
inc
lods
jge
cmp
dec
scas
enter
cmp
jnp
mov
push
mov
adc
lcall
jne
push
pop
adc
push
jg
into
and
das
or
cmpl
fsts
pop
push
add
jbe
gs
adc
cmp
dec
inc
pop
add
fisttpll
fsubs
add
dec
pop
rclb
hlt
imul
xor
and
cmc
jae
in
cmp
and
add
pop
aam
test
xchg
sti
cmpsl
add
dec
jbe
divb
test
fimuls
outsl
int3
imul
imull
fstpt
adc
and
pop
scas
pop
fs
pop
mov
mov
adc
std
push
enter
nop
outsl
repz
inc
ds
adc
mov
cmp
mov
lahf
testl
xchg
aas
or
jno
mov
lock
and
icebp
mov
jl
dec
inc
fdivr
mov
dec
imul
add
hlt
push
fwait
cmpsb
add
cmp
jbe
and
mov
jl
hlt
lret
mov
jno
add
sbb
cmp
pop
xor
sub
xchg
or
pop
sub
out
mov
ret
mov
fs
js
push
mov
addr16
push
ja
into
call
cwtl
faddl
sbb
cli
and
lahf
mov
cmc
inc
push
mov
xchg
and
inc
pop
scas
outsl
int3
rclb
xlat
ficompl
jmp
test
xchg
lods
xchg
rcll
lret
mov
mov
xchg
sub
sbb
sub
movsb
lods
js
adc
mov
add
pop
mov
add
cmp
pop
sub
mov
fadds
xchg
sub
push
xchg
or
jnp
and
adc
dec
sbb
ret
lcall
pop
lcall
nop
ss
icebp
gs
jp
repz
dec
cmpsl
sahf
mov
call
mov
xchg
jge
test
sbb
fcoml
xor
repnz
lods
lods
dec
cmp
mov
or
pop
xchg
jo
mov
mov
shl
inc
repz
and
fcmovb
jg
mov
push
mov
mov
fs
adc
push
xchg
lds
popf
fwait
and
add
jp
pop
dec
les
mov
out
xor
mov
sbb
ja
mov
repnz
sub
addr16
das
sub
or
mov
xor
mov
pop
sbb
roll
sbb
and
clc
or
sbb
int
xchg
fsubl
ret
leave
js
push
cmpsl
cmpsl
or
stos
pusha
out
in
inc
hlt
icebp
repnz
cld
add
fmull
cmpsl
mov
xor
sub
inc
push
imul
aas
fcoml
pop
in
xchg
mulb
arpl
pop
lea
mov
push
xor
outsb
cmp
add
sub
idivb
addr16
ret
ficompl
jne
scas
jecxz
mov
xchg
jp
ja
and
icebp
lcall
push
fdivl
in
lods
js
dec
inc
les
stos
lahf
adc
or
fwait
mov
cmpb
notb
mov
stc
ds
dec
push
push
bound
inc
scas
cmp
push
outsb
es
or
mov
dec
jl
pop
fs
ljmp
test
movsb
shl
mov
mov
ja
adc
pop
mov
sbb
cwtl
or
pushf
sub
pusha
lcall
ljmp
fsubs
int
xchg
xchg
sbb
push
xchg
test
sti
out
push
aaa
inc
mov
pop
inc
add
out
ss
enter
leave
push
das
and
int
cmp
or
mov
aam
stc
add
or
repz
addr16
ss
leave
and
subb
popa
je
push
incl
sti
int
popf
jae
dec
jb
sahf
adc
push
mov
lret
test
pop
test
and
sahf
movsb
mov
sbb
enter
mov
push
jl
out
adc
sahf
pop
lret
mov
hlt
ds
pushf
push
ljmp
pop
scas
jns
mov
jg
lods
mov
adc
je
ret
jp
cmpsl
imul
mov
ret
and
xchg
mov
fdivs
ja
cmp
dec
lds
ja
jne
mov
je
push
adc
popf
lcall
add
aas
dec
pop
rcrl
aad
pop
pop
mov
shrb
in
or
cli
or
mov
pop
test
sbb
hlt
push
mov
ds
psllw
sbb
sub
ror
jae
cmc
incl
adc
and
and
popf
pop
mov
mov
test
mov
mov
fwait
test
sbb
add
test
or
and
out
outsb
xchg
xor
nop
imul
sarl
sbb
test
xor
loop
lcall
xor
and
test
mov
es
bswap
test
inc
sbb
push
jmp
mov
test
mov
in
xor
lahf
ret
xchg
scas
data16
outsl
movsb
mov
lods
push
imul
mov
dec
stos
cmp
push
sbb
mov
sub
cmp
cmc
sub
ds
movsb
xchg
xor
fcompl
into
cmpsb
lods
les
xor
and
or
test
jle
and
sub
div
mov
cs
dec
xchg
int3
repz
mov
fs
cmp
loopne
js
int
outsl
mov
jo
sbb
pop
jno
add
and
xchg
and
mov
int
lods
leave
sbb
fcmovb
ss
les
jb
cli
sub
add
cmp
jp
bound
je
jb
mov
push
jmp
ljmp
mov
outsl
cs
es
cltd
js
outsl
pop
fistpll
subl
out
xchg
leave
cmp
lods
push
bound
test
flds
inc
idiv
rol
xor
and
dec
test
fistpll
mov
or
sbb
cmpsl
scas
loopne
or
jb
rol
insl
addr16
outsl
test
or
sahf
stos
jo
adc
sbb
lcall
fistl
mov
faddl
cld
add
and
inc
and
loop
sbb
sbbb
or
movsb
mov
pop
pop
sub
pop
rclb
adc
push
rcl
cmpsb
out
shr
movsb
mov
test
add
mov
fs
cmp
jnp
inc
mov
lcall
dec
je
inc
mov
xor
lea
add
aam
mov
out
and
adc
adc
imul
repnz
in
mov
pushf
ficoml
das
mov
xor
test
cld
mov
jmp
test
sbb
fstl
jle
test
lcall
xchg
adc
test
lret
fnsave
scas
rolb
sahf
inc
loopne
dec
repz
btr
sbb
pop
daa
sahf
jg
xor
in
sbb
ljmp
push
inc
insb
fstl
adc
and
jle
xor
movsl
fs
pop
das
jbe
push
les
clc
loopne
rclb
aam
mov
dec
cli
test
cmp
mov
sahf
sbb
sbb
xor
xchg
and
pop
or
aam
pop
dec
inc
inc
adc
inc
dec
in
stc
mov
inc
mov
clc
mov
ret
pop
push
adc
cmp
jl
pop
bound
test
push
push
push
mov
jg
pushf
cltd
cmp
mov
pop
pop
loope
xor
sahf
daa
out
popf
rcr
fidivl
rcr
inc
lcall
mov
add
xor
jle
jl
mov
adc
lret
adc
mov
mov
xchg
or
adc
xor
bound
loopnew
addb
jnp
jmp
jne
sbb
test
hlt
rcrl
rcll
dec
xor
out
out
stc
xrelease
mov
popa
or
pop
mov
inc
jne
inc
clc
add
mov
movsl
xchg
lcall
jae
sub
ret
pushf
outsb
and
mov
sahf
lret
push
sbb
ss
mov
pushl
mov
pop
adc
sub
push
pop
fcmove
data16
int3
daa
add
inc
mov
xchg
sti
xor
sti
gs
jg
and
jp
in
outsl
or
xchg
push
add
in
add
sbb
jno
and
add
repnz
sbb
and
frstor
stos
scas
out
xchg
sbb
sub
scas
hlt
mov
rorl
mov
ret
sub
popf
test
stos
lret
mov
dec
pop
sti
daa
negb
mov
mov
sub
jge
int3
mov
jg
imul
flds
mov
adc
mov
pop
mov
inc
dec
aaa
push
xor
mov
or
cli
dec
hlt
mov
mov
pop
sbb
xchg
bound
lods
xchg
mov
cmpl
movsl
cs
insl
loop
xor
add
push
sbb
cmp
cmp
and
test
hlt
push
in
mov
imul
fstpl
shlb
mov
mov
je
sbb
aas
je
out
jecxz
jae
outsb
testb
mov
or
lret
ss
das
add
dec
int
xor
mov
and
jo
lahf
sarb
mov
lods
or
inc
jbe
daa
shll
pop
jg
leave
addr16
in
imul
ret
sahf
popa
mov
cs
icebp
mov
xchg
mov
xchg
push
sbb
xor
xchg
popa
jecxz
cmp
insl
pop
fcoms
loopne
fstpt
dec
sbb
sarl
cmp
leave
sub
leave
or
scas
insl
or
jns
pop
add
shrb
sbb
mov
es
adc
jp
pop
aaa
mov
mov
and
and
inc
pop
lods
mov
loop
cltd
push
icebp
xchg
outsl
rorb
movsl
inc
aad
cmp
aas
je
add
add
pusha
adc
add
jno
pop
jp
cltd
inc
hlt
mov
daa
aaa
lret
sarb
dec
shrl
mov
pop
test
mov
mov
jg
scas
sahf
pop
loop
jge
or
dec
aas
mov
out
fs
bound
or
nop
mov
add
lcall
ret
fistps
fcomp
adc
pop
into
iret
push
jbe
jb
push
mov
lock
rcll
insb
insl
push
jne
out
rol
sahf
inc
mov
lds
sarl
add
cwtl
pop
insl
cmp
xlat
les
imul
out
pop
cmp
jle
sbb
push
xor
push
or
cmp
lock
mov
xchg
shlb
xchg
loop
add
dec
adc
hlt
and
push
xor
das
imul
mov
mov
push
repnz
inc
inc
and
cwtl
stos
popf
jbe
fs
cmpsl
fwait
das
dec
sub
push
sub
xor
jl
push
ss
cmpl
icebp
sbb
mov
loop
call
loop
roll
mov
mov
dec
mov
test
sbb
mov
or
add
jae
mov
lods
sub
and
dec
jne
je
les
rol
cltd
jge
sbb
stc
lock
push
xor
mull
adc
call
mov
stos
cli
pop
push
or
ds
mov
pop
ljmp
or
lahf
filds
push
sbb
mov
jae
test
lods
aad
xchg
adc
jecxz
pop
inc
adc
stos
fwait
adc
or
mov
mov
negb
push
jbe
xchg
pusha
pop
scas
mov
sti
push
cmp
sbb
in
out
stos
add
ss
ret
xor
mov
inc
lods
lods
lods
sti
shl
mov
sub
mov
pushf
xchg
xlat
jecxz
sub
stc
jge
cmpsl
xor
lds
aad
gs
xlat
incb
int
fidivrl
out
sbb
sbb
add
jl
rolb
movsb
xchg
xchg
sub
adc
je
popf
adc
mov
cmp
push
or
stos
add
ss
pop
xor
cld
jae
jle
sub
mov
sbb
inc
xchg
lods
mov
cmp
sub
xor
cmp
push
or
mov
mov
or
imul
pop
or
push
stc
cmp
xor
inc
leave
add
outsl
pop
in
and
sbb
daa
xchg
outsl
in
fiadds
cmp
cmp
mov
mov
rcr
imul
aad
dec
mov
add
jbe
xchg
push
shl
and
mov
cmpsl
mov
iret
mov
xchg
cltd
call
in
fwait
inc
lahf
or
sbb
mov
aas
andl
lods
pushf
dec
shrb
push
scas
push
push
cmpsl
into
aad
pusha
mov
or
sub
orb
les
ljmp
sub
jle
in
push
sbb
iret
fisubs
pop
cmp
cli
inc
std
popa
rorl
hlt
adc
add
and
push
sbb
adc
push
pushf
movsb
lods
adc
gs
cmpb
pop
call
movsl
inc
xchg
add
dec
xchg
sub
adc
cmp
jb
mov
sbb
loopne
sbb
push
fisubs
inc
stos
xchg
or
mov
xchg
inc
inc
test
ja
mov
comiss
mov
and
mov
push
cli
mov
orb
fiadds
andb
lea
cmp
pop
cmp
jecxz
mov
and
cli
addb
or
sahf
xchg
lea
xchg
sub
jbe
js
inc
call
mov
loopne
mov
mov
inc
out
xlat
mov
cmpl
add
pop
or
inc
and
jp
mov
lret
mov
cs
add
shlb
gs
fisttps
and
mov
ret
mov
dec
jb
sbb
jg
daa
cmp
and
test
add
mov
push
popa
xchg
sahf
adc
imul
sub
and
adc
btc
sub
lea
call
ds
ret
movsb
and
inc
pop
pushf
sub
sahf
inc
negl
fsubp
outsl
adc
mov
test
mov
and
adc
inc
inc
mov
add
lds
xchg
mov
insl
push
jmp
jle
loope
and
jecxz
stos
imul
fwait
pop
call
fstps
aam
sbb
pop
jne
xor
mov
or
cmp
push
xchg
jl
adc
sub
push
gs
mov
push
jbe
call
mov
int3
sub
jne
int
pop
mov
lods
jmp
fucomip
in
add
insl
adc
in
rorb
inc
push
xchg
jecxz
or
jne
les
sahf
sub
insb
shrl
out
push
cltd
adc
sti
jecxz
cmp
jnp
jo
push
in
pop
adc
es
mov
or
add
jb
jne
push
psadbw
in
sbb
je
jb
outsb
das
mov
popa
test
push
add
popa
out
push
ljmp
lds
lahf
insb
xlat
fistpl
adc
rorb
adc
sbb
gs
push
sbb
xor
pop
push
jbe
inc
xor
mov
xchg
add
rorb
out
cltd
mov
shlb
push
popa
testl
mov
incb
cmpsb
xchg
mov
or
pop
es
jmp
xlat
callw
mov
sbb
push
pop
mov
jmp
dec
xor
sbb
push
push
repnz
lret
adc
popa
std
fiadds
imul
les
fidivrl
dec
mov
pushf
mov
icebp
or
add
dec
push
int3
nop
test
push
xchg
mov
sub
rclb
sbb
imull
mov
inc
leave
lahf
inc
fwait
popa
and
pop
cltd
cli
mov
or
and
ret
mov
in
scas
jl
imul
lahf
mov
mov
insl
fwait
sahf
jmp
lds
hlt
es
ret
jne
fsubs
xor
xor
dec
and
dec
imulb
cmpsb
int
into
push
test
or
xlat
lret
int
jne
hlt
jmp
xor
jno
mov
mov
xchg
fistps
rorl
decb
cmpsb
xor
jb
sbb
add
lods
cld
xor
cmp
lcall
icebp
aas
jge
jnp
and
sub
push
out
iret
sbb
pop
stos
jl
dec
in
sbb
push
sti
pushf
minps
movsb
mov
dec
jno
icebp
ja
push
cs
shl
mov
pop
fiaddl
in
por
testl
jmp
pop
cmp
xor
cs
mov
ja
pop
fwait
mov
push
pop
lods
mov
out
pushf
incb
outsl
adc
cmpsl
test
or
xchg
in
daa
and
push
fcomps
push
xor
jno
jb
fmuls
xchg
call
xchg
cli
mov
and
mov
in
out
jno
xchg
into
push
cmp
aad
sbb
clc
loop
mov
sub
pusha
fsubl
push
shrb
jge
and
lds
inc
scas
pop
out
or
pop
add
clc
add
mov
repnz
mov
mov
dec
test
cmp
inc
popa
decb
cld
pop
or
pop
in
jne
lret
cld
mov
in
or
daa
mov
hlt
insb
ret
rclb
movl
iret
sub
add
xor
sti
int3
inc
lods
fs
js
or
add
shrl
adcl
adc
mov
sub
dec
mov
data16
sub
and
jmp
in
or
data16
pop
call
iret
lcall
xor
rclb
jb
ljmp
repz
mov
mov
cmp
lret
xor
mov
cwtl
mov
ljmp
mov
cmp
mov
pop
xchg
subl
xchg
mov
mov
dec
push
jge
jp
sbb
call
or
or
shll
fmul
mov
clc
mov
cmpsb
add
adc
in
in
lods
mov
imul
aaa
cmp
inc
push
mov
push
jl
add
ficoms
stos
mov
jne
data16
lods
shl
imul
imul
lahf
int3
jmp
push
insl
push
sub
mov
movsb
adc
cmc
or
xor
pop
pushf
and
int
cltd
push
and
jo
cwtl
lret
xor
testb
lods
jmp
add
lahf
add
cmc
sub
cmp
movsb
enter
popf
xchg
fdivrl
int3
or
pop
mov
xchg
add
mov
popf
aas
adc
mov
xchg
sti
addl
sbb
add
repz
cli
int
xorb
adc
jae
int
scas
pop
out
mov
dec
lds
pop
mov
cmova
inc
sbb
jg
xchg
mov
rcll
push
movsl
cs
cli
xchg
loopne
fcomps
xor
cmp
fmull
cld
mov
lret
lods
mov
jmp
jbe
or
sahf
jo
dec
cmp
lds
into
out
repz
or
adc
dec
in
shr
cwtl
mov
iret
enter
or
ljmp
dec
shll
or
jge
pop
nop
test
jge
repz
testl
add
pop
testb
in
add
dec
movsl
ljmp
ret
rolb
in
mov
inc
adc
mov
ds
js
fisttps
mov
icebp
push
and
aam
in
stos
or
xlat
lahf
xlat
pop
jp
mov
in
sbb
xor
mov
mov
xchg
iret
sub
push
add
cwtl
push
add
sbb
pop
fistpl
inc
out
rcll
mov
mov
aaa
mov
out
sbb
xchg
adc
call
call
lods
fisubs
inc
inc
jg
scas
jne
cmc
bound
xor
or
pop
sub
mov
jmp
jecxz,pt
lahf
cs
dec
mov
arpl
arpl
pop
push
sbb
test
iret
hlt
add
addl
jb
ds
out
push
xor
jo
adc
clc
push
fisttps
scas
sbb
cmp
les
mov
xchg
xchg
mov
pop
add
jecxz
test
sub
das
pop
fs
mov
js
dec
rorb
aad
fldt
xchg
shrl
add
je
mov
mov
jae
cmp
inc
mov
and
insb
mov
test
lahf
roll
mov
xchg
pop
jns
lds
jl
test
cmc
mov
test
mov
outsb
loopne
stc
in
xor
aas
jns
add
mov
add
pop
out
mov
out
mov
mov
pop
mov
lret
nop
mov
out
bound
push
gs
pop
mov
mov
cmp
mov
imul
pop
lahf
adc
mov
cmpsb
je
out
xor
sbb
sbbl
orb
sub
inc
fidivs
pop
sub
or
js
and
adc
push
aad
fstl
jbe
mov
insl
dec
fwait
mov
xor
stos
addr16
cmp
mov
shrl
jl
ja
or
mov
shll
in
mov
jecxz
out
test
inc
fstp
push
outsb
icebp
sbb
xchg
sti
ss
repz
aaa
cmp
enter
mov
xor
rolb
int3
aaa
test
dec
mov
fcmovb
fstpt
pop
stos
mov
pop
mov
sti
mov
cmp
leave
or
sbb
loope
push
sbb
imul
cmp
cli
xchg
xlat
stc
and
jmp
gs
stos
sub
ficoml
inc
mov
sti
loop
fldenv
neg
xor
xchg
in
sbb
scas
outsl
test
popa
test
arpl
add
js
pop
mov
movsb
xor
pop
pusha
fsubrl
sbb
dec
add
xor
les
mov
add
cltd
subb
pop
jns
bound
sbb
test
pop
stos
aad
inc
pop
dec
adc
es
add
push
jmp
aad
inc
cmp
add
ljmp
movsl
inc
ret
mov
sub
popa
mov
or
test
enter
push
test
insb
int3
cmp
call
add
repz
jae
fimuls
cmp
das
or
push
bound
stc
sub
add
in
pop
sti
cmp
in
pop
or
inc
imul
lods
dec
mov
cmpsl
es
popl
pushf
or
repnz
aad
adc
pop
sbb
sub
push
adc
fnsetpm(287
dec
xor
mov
cmp
pop
repnz
dec
add
jno
insb
pop
and
leave
movsb
mov
sbb
xlat
mov
rcrl
cmp
cwtl
xor
std
in
mov
fsubp
shll
xchg
stc
dec
xlat
test
sbb
dec
inc
ja
jmp
jns
add
test
popl
outsl
cmc
adc
mov
fdivl
mov
ret
push
or
lret
and
add
mov
test
pop
pushw
lods
int
jge
jnp
test
movsl
test
xor
add
cli
xchg
mov
mov
mov
ret
or
push
out
stos
xchg
out
cmp
jmp
inc
idivb
out
lret
dec
aam
mov
js
vcomiss
dec
pusha
mov
and
rcrl
pop
push
mov
push
js
pusha
push
data16
add
mov
inc
mov
pop
xchg
das
adc
sti
shrb
mov
pop
arpl
fdivs
cmpsl
adc
daa
xchg
and
adc
dec
mov
outsl
xchg
shll
adc
ljmp
cmpsl
xchg
adc
jno
fstps
cmp
jp
sbb
mov
push
cld
add
cli
mov
and
mov
sub
cmp
dec
fcmovnb
push
sti
pop
push
xchg
pop
fstpl
mov
fdivl
fnstenv
xor
cmp
push
mov
add
inc
test
xchg
imul
movsb
xor
mov
xchg
out
mov
mov
adc
insl
mov
add
add
inc
sbb
jmp
rorb
xor
lea
mov
cmp
or
rcl
movsb
jae
push
mov
loope
out
sbb
add
mov
xor
jbe
push
aaa
xchg
sub
mov
cmp
cmpsb
icebp
mov
jnp
lock
add
fiaddl
shl
insb
jb
imul
mov
adc
mov
dec
xchg
fidivl
inc
stc
popa
push
adc
mov
add
sbb
stc
mov
cmp
or
lret
inc
imul
xchg
call
ja
lods
fnstcw
das
call
subb
repnz
pop
pushf
or
cmp
jnp
jmp
mov
addl
aaa
imul
icebp
or
pusha
rorl
es
mov
xchg
mov
jl
popf
or
add
mov
leave
orb
or
test
stos
clc
sub
push
notl
aas
loope
mov
jp
bound
pop
psubd
jl
mov
ljmp
push
pop
or
inc
cwtl
dec
stos
lcall
and
xor
mov
or
cli
mov
sbbb
inc
inc
mov
add
dec
sub
insl
mov
clc
stos
pop
shl
popa
mov
shlb
inc
ljmp
xlat
adc
mov
mov
fwait
xor
cmpsb
imul
xchg
out
loope
jge
xor
fwait
lahf
mov
push
pop
ja
mov
or
add
push
out
lcall
cmp
fimuls
xchg
jne
test
into
xor
mov
shrb
mov
mov
bound
dec
sbb
push
cmp
jle
jl
jp
push
pusha
inc
jp
push
lret
cmp
and
mov
daa
jae
sarl
jno
mov
lock
pop
mov
das
jns
sbb
mov
cmp
enter
insl
cld
sub
or
sbb
bound
push
nop
and
mov
jns
mov
and
lods
jnp
scas
or
cmp
cld
and
pop
push
xchg
pop
inc
push
rcrb
mov
add
cmc
movsb
popa
arpl
pop
ljmp
dec
jge
popa
lods
arpl
adc
fistps
movsl
dec
sahf
cmp
rcrl
mov
jae
sub
mov
inc
idiv
rol
call
cmp
daa
and
adc
sub
sbbb
sub
pusha
movsb
cltd
pusha
or
imul
outsl
mov
pop
cmpsb
push
cmp
idiv
fbstp
mov
pop
dec
jge
xchg
push
inc
js
jo
dec
pop
or
and
pop
dec
xchg
xor
test
mov
push
aam
mov
insl
inc
push
repz
inc
mov
mov
mov
fistpll
sub
fldt
dec
jmp
andb
loop
lods
push
adcl
cmp
lock
sbbl
mov
cmp
leave
test
pop
and
adc
xchg
outsl
inc
in
xor
insl
lret
cs
mov
pop
or
sbb
pop
mov
pop
mov
arpl
sbbl
xchg
icebp
xlat
fisubrs
jae
cmp
inc
push
mov
push
mov
dec
pop
sbb
mov
cmpsb
inc
push
sbb
gs
mov
inc
xor
rcr
roll
mov
inc
enter
sbb
mov
sbb
dec
int
das
inc
pusha
mov
fnstsw
jae
icebp
aas
add
adc
or
sbb
outsb
ret
adc
pop
call
aas
cmc
jns
cmp
push
cld
inc
pop
stos
pop
lods
sti
mov
fsubr
daa
insl
xor
xor
es
lea
jb
shll
dec
loop
cld
test
stc
ficomps
jge
pop
xor
lcall
rcrl
in
int
jge
xchg
pop
add
test
pop
decb
jle
fbld
imul
jge
sbb
sub
jle
and
add
subb
pop
inc
pop
mov
cmc
repnz
leave
test
out
inc
jae
or
dec
shlb
lods
add
or
and
lods
ja
aaa
adc
mov
lock
inc
jbe
dec
add
inc
inc
cmc
jg
mov
sbb
mov
inc
push
pop
fmuls
adc
xchg
shl
out
or
xchg
hlt
fcom
push
orb
sbb
or
fwait
adc
fcoml
pop
cmp
es
inc
and
sbbl
mov
lds
jmp
jb
dec
clc
or
icebp
jle
loopne
popa
out
sbb
pop
ficomps
cwtl
mov
sub
xchg
cmc
loope
in
add
call
jge
adc
push
pop
push
pop
mov
inc
mov
repnz
and
xchg
or
jp
les
add
xchg
insb
ficomps
in
dec
inc
and
shrl
fcomps
les
mov
jae
pop
push
outsl
inc
in
aam
xor
and
cwtl
cli
stos
or
test
mov
jl
mov
fmull
adc
add
jns
sub
mov
xchg
sub
sbb
ljmp
pop
xchg
jmp
cmp
and
mov
jp
stos
ja
mov
mov
adc
mov
jnp
jns
sub
sub
xchg
inc
add
clc
and
test
add
pusha
mov
es
sub
arpl
fstl
je
adc
jg
pop
enter
mov
enter
jge
push
test
pcmpeqw
divl
loopne
fwait
hlt
cs
insb
je
mov
out
out
int
je
mov
cwtl
das
leave
jecxz
adc
cli
ds
xor
mov
cmp
ja
imull
dec
adc
mov
fprem1
push
push
cs
loope
out
dec
dec
fmull
out
mov
imul
stos
movsb
andl
push
insb
pop
mov
mov
repz
jp
mov
iret
sub
int
out
pop
xor
cmpsb
sub
rorl
push
sub
es
lahf
sbb
xchg
cmc
push
xlat
cmp
stc
mov
gs
jno
inc
lock
jecxz
push
or
fdivs
in
cs
xchg
cli
mov
cld
and
test
outsl
add
adc
clc
loop
test
scas
addr16
enter
filds
jo
ror
pop
inc
mov
push
mov
lea
pop
fs
rclb
adc
cltd
aaa
dec
rolb
cld
sub
sub
mov
dec
cmpsl
repz
sub
dec
inc
push
std
dec
lock
push
xlat
adc
inc
lds
mov
punpckhwd
sub
fdivs
cmp
push
sbbb
gs
out
iret
jg
mov
adc
mov
fdivs
es
inc
jnp
xor
aam
inc
xor
scas
jl
jge
xor
fst
stos
call
xorb
sbb
cwtl
jmp
xor
data16
adc
in
pusha
leave
stc
adc
lcall
rcrb
mov
sbb
cltd
les
lea
jbe
js
pop
jnp
invd
std
xchg
jp
je
inc
dec
pop
arpl
pop
pop
enter
cmp
repz
lock
pop
mov
cmpb
pop
shlb
inc
in
lea
jae
mov
jg
mov
adc
sbb
adc
mov
nop
test
cltd
test
dec
push
shr
xchg
vxorps
inc
sub
jns
dec
push
pop
stc
clc
xor
arpl
mov
adc
push
enter
inc
loop
pop
int3
pop
and
iret
cs
mov
rcrb
imul
inc
mov
mov
cmpsl
sub
mov
fistps
add
les
sar
add
xchg
clc
mov
push
push
out
pop
popl
sti
pop
mov
inc
and
nop
jp
into
xor
mov
out
data16
orb
add
mov
js
inc
and
les
idivl
andl
or
loop
jno
jmp
add
mov
mov
xor
xor
or
std
push
stc
ds
lods
in
lods
out
out
push
cmp
jmp
fxch
repz
adcl
xor
jbe
enter
sbb
stos
aas
cwtl
xchg
jg
mov
mov
loop
ja
shll
pop
dec
cwtl
cmp
mov
pop
popa
popa
cmpb
xchg
mov
cltd
jns
xchg
inc
bound
out
mov
mov
rolb
in
bound
pop
and
mov
and
xor
lea
xchg
add
scas
mov
mov
mov
stc
ret
sti
fnstcw
jg
jge
inc
lahf
inc
jno
xchg
in
insb
push
cld
rcl
xorb
std
and
mov
pop
aam
mov
and
rol
cmp
inc
jmp
mov
loopne
add
pop
mov
jne
faddl
push
ds
in
ret
xor
fmuls
mov
sarl
das
inc
push
pop
cwtl
dec
pop
cmpsb
int3
stos
adc
cmpsl
inc
mov
mov
mov
ret
inc
mov
lock
dec
movsl
jmp
icebp
push
popa
dec
pop
mov
icebp
push
aaa
sbb
scas
mov
out
aam
xchg
fdivrs
hlt
sub
push
sbb
inc
jno
mov
adc
xchg
jmp
mov
iret
xor
scas
sbb
insb
sbb
add
mov
insl
repnz
aaa
add
rolb
stos
or
pusha
add
clc
sbb
xchg
imul
jmp
or
adc
scas
int3
iret
sti
cmp
xchg
dec
or
or
mov
xor
cmp
in
fwait
ja
inc
push
pop
jo
stos
fwait
sbb
xchg
and
test
out
jmp
push
lods
cltd
add
mov
mov
jecxz
push
fdivrs
outsb
cld
rorb
inc
sbb
sarl
stc
push
outsb
sbb
adc
subl
cmp
aas
fsub
stc
dec
shll
inc
lcall
fstl
in
or
test
addl
scas
pushl
mov
sbb
pop
mov
mov
mov
icebp
or
leave
mov
or
je
jmp
fcmovb
mov
push
out
xchg
push
mov
addb
xor
add
movsb
insb
push
out
pop
pop
add
dec
daa
jb
icebp
ljmp
add
lds
lods
add
xchg
inc
jp
mov
mov
sbb
sbb
sub
je
adc
mov
loope
out
cmpsb
cmpsb
lret
dec
ret
or
cmp
insb
call
lds
stc
dec
push
cmpsb
pusha
in
jo
movsl
out
xor
daa
and
mov
adc
adc
movsb
sahf
das
cmp
je
movsb
mov
mov
add
in
sub
roll
test
sbb
out
sub
sarl
leave
push
jnp
inc
mov
movsb
jb
ud0
pop
cltd
or
fidivs
bound
rcrl
or
sub
call
popa
popf
and
pushf
push
aas
lods
jecxz
stos
or
idivl
jl
mov
leave
ret
xchg
mov
or
inc
les
jecxz
repnz
ret
sbb
inc
cmpsl
xor
fildl
loopne
pop
pop
shr
inc
sahf
sub
sbb
xor
js
xchg
hlt
js
inc
vmwrite
pop
in
or
enter
xor
movsl
imul
adc
dec
jns
lods
testl
cli
rolb
xlat
xchg
test
pusha
fwait
shl
movsb
add
int
xchg
add
or
shrl
lods
lock
or
test
lcall
aam
mov
or
ret
mov
and
mov
and
sbb
cmp
xchg
call
cmpsb
cmpsl
in
inc
into
mov
aas
xor
jnp
dec
jge
stos
nop
ljmp
ret
dec
scas
hlt
add
jl
adc
sub
mov
mov
pop
mov
mov
cmp
adc
xlat
push
sahf
movsb
xor
rorl
fldenv
cmc
out
adc
sbb
dec
shll
dec
daa
mov
adc
faddp
push
iret
or
scas
lcall
rorl
mov
loopne
xor
push
sbb
loopne
leave
pop
and
add
add
xor
adc
gs
mov
mov
repz
out
lcall
icebp
popf
mov
popf
cwtl
cmp
dec
jb
push
xchg
or
adc
inc
popa
out
mov
out
inc
adc
pop
sub
enter
jecxz
or
inc
cmc
gs
sub
xchg
stos
xchg
addr16
out
add
loope
nop
mov
incb
rorb
out
aaa
add
hlt
and
jnp
movsl
pushf
inc
xlat
sahf
pushf
inc
inc
pop
or
std
bound
imul
ret
js
imul
jle
xchg
fnstenv
jno
mov
mov
sub
call
ljmp
pop
dec
dec
jnp
lock
dec
add
lds
mov
pop
push
in
mov
cmpl
push
gs
stos
mov
cmc
xlat
and
mov
cli
rdtsc
add
xchg
sbb
dec
in
in
pop
or
jno
es
loope
adc
aaa
sub
or
mov
mov
sub
jo
incb
std
push
or
sbb
and
aaa
inc
fists
sbb
pop
bound
jecxz
nop
stc
xchg
test
xchg
mov
es
mov
cld
gs
cld
and
movsb
int3
in
std
inc
xor
xchg
cmc
jne
and
in
push
dec
addr16
mov
in
pop
negl
movsl
xchg
xor
icebp
xchg
stos
lret
mov
jae
nopl
ja
inc
js
jmp
repz
aaa
xchg
pop
test
sbb
jnp
sahf
sbb
sbb
or
inc
sbb
nop
je
icebp
jmp
movsl
cmpsb
mov
adc
and
dec
into
lds
sub
jbe
adc
add
pop
js
sub
outsb
adc
inc
pop
rorb
fimull
mov
and
neg
fstl
mov
fcompl
adc
xchg
or
mov
arpl
pop
or
mov
add
xor
xchg
into
je
repz
movsb
lret
jp
cmp
xchg
enter
aad
mov
pop
jno
iret
xchg
out
adc
xchg
push
shlb
enter
push
test
idivl
sbb
push
lods
xor
inc
mov
mov
xchg
shl
push
outsl
aad
sbb
mov
mov
lcall
lcall
or
enter
sti
push
mov
and
push
cmp
cmp
inc
push
aaa
negb
pusha
test
xchg
lock
xchg
or
cmp
repnz
fdivrl
jb
push
and
mov
jbe
mulb
dec
rclb
jmp
aas
aaa
movb
push
clc
mov
ret
sub
imul
jo
mov
mov
jmp
push
and
xchg
mov
insl
fldlg2
scas
ja
stc
xor
jne
dec
mov
xchg
xchg
rcl
fidivs
fisttpl
lea
pop
das
dec
cld
sub
out
jmp
dec
sub
jns
pop
out
in
adc
call
cmp
test
dec
into
popf
in
test
mov
mov
mov
and
dec
daa
xchg
notb
add
push
xlat
lahf
or
mov
mov
pop
jl
mov
mov
add
inc
inc
jb
movsb
mov
add
dec
mov
cwtl
pop
and
or
daa
sub
or
mov
lret
add
lods
sub
adc
ds
cmp
lea
enter
lds
mov
xor
pop
dec
jecxz
imul
stos
xchg
cmpsb
imul
add
leave
mov
lds
insb
pop
mov
and
push
iret
mov
jl
dec
add
push
notb
mov
cmp
lods
cmp
pusha
in
adc
cld
lods
cmc
xchg
hlt
sti
testb
or
cli
aam
mov
mov
and
mov
jecxz
or
push
icebp
inc
in
test
out
repz
sub
jp
inc
loopne
sub
inc
xchg
rcrl
push
dec
repz
adc
pop
mov
push
int
jno
mov
test
repnz
sbb
mov
shl
sub
and
sub
cs
push
lock
pushf
pop
sub
popf
jl
xor
sti
cli
ds
out
lds
sbb
es
and
movsl
push
add
sbb
inc
sub
sub
daa
jmp
stc
mov
js
inc
xchg
push
testb
pusha
inc
cmpsl
add
or
movsl
and
jne
lahf
fwait
lcall
xor
inc
popf
enter
xor
test
dec
xchg
jge
jb
push
push
mov
mov
jnp
enter
and
iret
and
lahf
mov
xchg
sub
pop
inc
stos
xchg
mov
jb
lea
adc
nop
mov
insl
imul
xorl
lods
imul
pop
or
sbb
cwtl
cli
insl
jmp
pop
stc
dec
push
fwait
add
mov
aas
repz
cmp
mov
aaa
add
lea
pop
mov
outsb
rclb
pushf
sarl
cmpsl
push
ss
cmp
xor
xor
push
cmp
leave
mov
aad
and
xchg
scas
pushf
and
fsubl
xchg
ret
xchg
cli
ret
fucomi
lcall
xor
shll
dec
dec
mov
rorb
imul
fmuls
pop
je
call
push
or
lcall
cmp
mov
lret
aas
test
popf
test
xor
xor
adc
mov
cwtl
js
lret
xchg
scas
dec
ficoml
je
cld
test
and
hlt
repnz
leave
dec
mov
sub
lds
xchg
and
mov
adc
clc
inc
pcmpgtd
arpl
fcomi
adc
inc
mov
jns
ret
rcr
jle
daa
jl
xchg
and
out
popa
cmpsb
xchg
rolb
pop
push
shlb
and
jle
pushf
mov
or
popf
mov
clc
in
cmpsl
adc
pop
mov
mov
out
and
xchg
test
iret
std
sbb
cmp
cmp
and
fsubr
or
test
mov
add
mov
neg
xchg
loop
jbe
sbb
sub
out
outsb
aad
jge
repz
add
mov
xchg
clc
push
outsb
aad
nop
popa
add
cmp
in
adc
push
int3
shll
je
push
sbb
and
xor
cmc
mov
popf
popw
jae
add
in
jne
push
xor
bound
out
loop
adc
jg
mov
icebp
or
lods
dec
in
sbb
pop
das
mull
leave
and
and
cmp
jno
inc
push
rorl
std
xchg
sbb
loop
adc
mov
inc
daa
loop
pop
or
stc
jbe
test
stos
test
bound
lret
adc
imul
dec
arpl
push
mov
adc
out
pop
or
pop
into
adc
lods
add
push
add
mov
or
sub
scas
fs
call
adc
imul
mov
cli
xor
dec
pop
sti
bound
fcoml
lods
adc
adc
mov
mov
mov
notb
fsubrl
popf
clc
cli
push
insb
mov
adc
adcl
dec
sbb
sbb
push
fs
aad
jo
dec
clc
cld
pusha
mov
mov
mov
jb
cmp
out
dec
loop
adc
jmp
add
js
fcompl
rolb
shlb
test
fcmovnbe
jmp
lret
xor
adc
addr16
or
int3
lods
orb
push
pop
scas
mov
mov
jb
xchg
inc
loop
repz
inc
mov
adcb
cmpsb
cmp
loop
mov
fistps
rol
cmpsl
xchg
cmpsb
sub
and
call
test
out
je
stos
movsl
jo
movsb
mov
ret
lcall
xchg
stos
dec
adc
dec
test
and
gs
push
fwait
divl
inc
cmpsb
shll
jmp
pusha
mov
mov
shll
cmpsb
icebp
icebp
mov
and
fstpl
cmpb
sarb
mov
icebp
clc
ljmp
add
xor
ds
inc
mov
int
mov
sub
shrl
aad
fwait
pop
push
aam
fildl
mov
cwtl
aad
enter
mov
pop
pop
mov
cmp
adc
adc
inc
sub
mov
sbb
insb
and
lods
or
mov
cltd
adc
and
scas
shrb
sahf
sbbl
movl
push
xor
sub
nop
mov
sub
sti
daa
fstpl
adc
dec
lea
mov
dec
add
imul
ret
in
fldcw
mov
lea
cmp
addr16
mov
sub
push
xor
cld
aad
out
mov
mov
hlt
jno
cmpsb
xchg
in
scas
notb
jae
aas
xor
mov
pop
int3
add
jbe
jb
daa
clc
adc
lds
cwtl
cli
cmpsl
mov
xchg
dec
test
fildl
jnp
sub
xchg
insb
pop
mov
fidivl
outsb
gs
movsb
addr16
fsubrs
push
inc
push
movsb
nop
sbb
fwait
imul
bound
loope
mov
js
xchg
push
push
test
repnz
sbb
fmul
js
cltd
imul
jo
add
in
mov
pop
sbb
addl
sti
pusha
push
mov
nop
sbb
xor
daa
and
test
pop
or
int3
mov
jo
sbb
pop
outsl
mov
jbe
dec
pushf
pusha
insb
xchg
jae
mov
adc
cmpl
icebp
movsl
sti
adc
jbe
and
movsb
sbb
insb
jne
add
call
or
fldz
or
cwtl
mov
fs
and
fists
sbb
or
adc
xchg
jns
test
mov
xor
xor
imul
leave
leave
popa
mov
lret
mov
cs
fimuls
sbb
popa
or
aad
fsubrs
mov
sub
fdivr
pop
and
stos
adc
in
sahf
mov
stc
aas
adc
cmpsl
pop
shl
dec
clc
push
pop
outsl
push
inc
sbb
and
notl
xchg
xor
ja
shlb
cmp
decb
pop
xchg
cmpsl
lods
push
xchg
cmp
mov
mov
fidivrs
sahf
jp
lods
and
and
xchg
adc
sub
push
mov
fs
je
fst
mov
aas
pop
mov
xchg
inc
or
sub
movb
xchg
sbbl
mov
ljmp
jmp
repnz
movsl
mov
xor
or
outsb
fwait
mov
fisubrl
mov
pop
mov
lods
int3
js
int
jne
sub
sahf
xchg
sub
les
cbtw
cmp
inc
sub
dec
outsl
mov
fs
cmpsl
lahf
neg
addr16
cmpsl
mov
scas
and
pusha
nop
xchg
out
out
and
loopne
xor
sbb
pop
mov
pop
inc
sar
xor
xchg
cli
lret
push
or
imul
or
fidivs
adc
inc
sbb
mov
push
add
mov
aad
dec
mov
aaa
pop
xor
scas
or
pop
xchg
adc
inc
jle
mov
xor
add
dec
mov
addl
or
mov
sub
lods
ds
movsl
jecxz
cmp
pop
dec
sub
jp
sbb
in
les
jae
sub
and
sub
adc
mov
mov
or
adc
mov
call
movsl
sbb
aas
test
dec
lcall
pop
push
neg
call
xor
rorb
lods
push
sub
arpl
inc
inc
cwtl
inc
push
push
dec
and
adc
rcr
bound
pop
loope
add
rclb
jmp
je
sbb
jge
inc
aad
xchg
mov
movsb
stos
jo
test
mov
test
push
mov
test
stos
and
insl
int
hlt
push
pop
iret
sti
ja
xchg
xchg
mov
jno
and
push
push
pop
xlat
outsl
inc
into
xor
fidivrl
outsl
or
sbb
out
add
lret
push
mov
cmc
cmpsb
ljmp
push
aas
sahf
cmpl
bound
shll
lods
das
cmp
mov
add
mov
xor
dec
xchg
add
adc
scas
jg
lret
xor
xorb
lea
or
or
xlat
test
xor
out
cmpsb
or
les
adc
pop
push
cli
ret
mov
outsl
mov
inc
test
cmp
repnz
and
mov
pushl
mov
xor
sub
fdivrp
and
movsl
mov
add
ret
test
cmp
cmp
fists
cltd
testl
mov
or
mov
data16
mov
sub
push
mov
out
je
sbb
shlb
aad
push
push
lcall
adc
mov
mov
cld
inc
aad
mov
icebp
inc
int3
movsl
pop
scas
xchg
jnp
adc
sub
popf
adc
aas
repnz
add
add
mov
mov
sahf
inc
mov
shlb
mov
fnstcw
adc
leave
xor
xchg
icebp
mov
mov
pushf
xchg
or
pushf
sbb
shll
daa
mov
push
jno
adcb
lock
add
out
xchg
adc
std
popf
or
and
xor
mov
gs
pop
xor
dec
popa
jae
mov
xor
lret
adc
imul
stos
pushf
adc
cltd
and
and
inc
pop
push
xchg
push
dec
mov
pop
cld
and
in
jl
or
repz
mov
in
test
sub
push
cmc
in
shlb
dec
mov
fdivrs
sub
jmp
mov
je
or
xchg
adc
into
popa
ja
add
cld
dec
repnz
push
sbb
rcr
imul
addps
popa
into
popa
and
mov
mov
lods
cmc
mov
fisttpll
xchg
fimull
or
sub
xchg
push
packsswb
or
mov
and
xchg
or
in
sbb
fs
pop
fwait
jg
movsb
out
stos
or
enter
or
mov
pushf
in
jge,pt
xchg
mov
pop
push
daa
push
movq
push
push
mov
ds
lods
dec
mov
hlt
push
leave
aad
mov
shl
xchg
lret
or
mov
or
sahf
mov
hlt
xor
test
mov
dec
sub
mov
sti
subb
inc
mov
mov
shrb
push
popa
lcall
sarl
jo
loop
pop
cmp
ja
sahf
cmpsl
mov
ds
push
push
ret
or
jnp
pop
jg
adc
jle
mov
adc
sub
sbb
pop
pop
test
notl
sarl
lret
pop
sub
pop
dec
push
sub
stc
sahf
push
cmc
mov
push
cwtl
or
out
xchg
cmp
data16
decl
fstpt
or
or
das
cmp
or
push
orl
out
int3
in
fistpl
lea
into
incl
or
push
xchg
sub
pop
inc
lea
addr16
push
outsl
sub
xor
in
xchg
adc
dec
mov
cwtl
arpl
add
scas
jecxz
leave
xchg
ds
lahf
in
lahf
popa
cmp
push
mov
loopne
mov
arpl
mov
test
push
scas
pushf
dec
cli
out
int
jnp
sub
inc
cld
inc
test
xchg
test
adc
pop
sub
jp
iret
sbb
stos
dec
pop
in
mov
icebp
sbb
dec
daa
mov
push
adc
push
cmp
pop
xor
and
push
add
pop
jp
pop
inc
cmp
push
mov
sub
inc
add
cmp
cmp
push
or
insl
mov
add
xor
mov
arpl
jl
leave
js
fwait
sub
pop
jns
and
in
jecxz
mov
pop
xchg
insl
mov
sahf
sub
bswap
jnp
xor
sbb
gs
jmp
sbb
sbb
pop
iret
cmp
ljmp
or
jns
mov
rcll
data16
mov
xchg
adc
out
cltd
or
lea
xchg
xchg
fdivs
movsb
jo
and
mov
insb
roll
test
int3
mov
fimull
add
insb
repz
dec
in
sub
jnp
mov
das
scas
pop
pop
les
in
push
xor
fstpt
push
mov
lods
xchg
mulb
aaa
jnp
sarb
loope
aad
enter
adc
ss
cmpsl
xor
jecxz
jl
aas
outsl
lret
stc
outsb
adc
adc
or
dec
int
sbb
inc
mov
cmp
lret
jecxz
imul
xchg
sbb
or
pop
daa
sub
aaa
add
cmc
mov
decl
mov
mov
pop
icebp
insb
fadds
add
pop
or
pushl
mov
xchg
xchg
js
gs
jmp
in
mov
xchg
mov
xor
cmc
pop
int3
arpl
mov
sbb
mov
dec
xorb
cmp
cli
fwait
pushf
add
test
aas
mov
lret
sbb
test
lock
lcall
sbb
pop
lahf
insl
jo
sbbl
sahf
push
jle
ss
insl
repz
xchg
push
push
xorb
mov
jns
jp
ss
imul
addl
sub
pop
cmc
adc
lahf
lret
ret
inc
psubusw
sub
stc
sub
cmp
inc
push
shrl
dec
xor
jmp
mov
push
aad
test
lods
arpl
cmpsl
inc
andl
inc
pop
fstl
mov
jmp
xor
push
test
and
rorl
arpl
inc
xchg
push
jne
cwtl
sar
test
dec
in
test
inc
cld
addr16
in
addr16
lret
pushf
pushf
orb
nop
insl
mov
add
mov
push
sbbb
cmc
mov
divl
sbb
sbb
dec
xchg
adc
inc
leave
cld
mov
pushf
aam
not
daa
test
inc
or
lods
jge
and
out
popf
and
inc
xor
mov
xor
cmp
cltd
pusha
aas
cmp
push
imul
pop
dec
or
pop
push
pop
stc
pushf
inc
repnz
rorl
mov
std
repz
or
xor
fstpt
mov
jmp
mov
mov
push
pop
xor
jb
rclb
cmp
inc
add
repz
lea
inc
and
inc
sahf
fwait
ljmp
and
pop
sahf
mov
jecxz
add
cmp
cmp
or
adc
mov
leave
and
push
sub
mov
lods
fmuls
popf
jb
and
pop
sbb
dec
push
out
cmpsl
push
std
lock
stos
fcompl
jo
daa
loopne
leave
mov
out
mov
fstpl
fcmovnu
push
jle
mov
and
sbb
inc
jne
mov
pop
daa
leave
test
inc
lahf
stos
fisttpl
jg
xor
pop
js
add
push
mov
mov
rorl
fstpl
push
inc
mov
rolb
js
das
out
imul
movsb
dec
loop
mov
or
mov
and
sbb
pop
sbb
dec
jg
pop
jg
pushl
cltd
cmpsl
iret
push
mov
ja
cmp
xlat
pop
fstps
cmp
sahf
or
push
sahf
push
xor
jge
out
push
sbb
jns
scas
lret
inc
jne
ss
push
out
sbb
cmp
cmpsb
jmp
rolb
dec
and
out
lods
in
xchg
pop
inc
and
xchg
xchg
shrb
mov
mov
imul
sub
pushf
mov
pop
xorb
inc
xchg
mov
mov
push
fwait
mov
xor
xchg
popfw
xor
les
incl
adc
out
les
cmp
mov
je
add
int
mov
in
inc
aaa
jmp
fsubrl
out
mov
fcomps
dec
or
test
sub
lods
fistl
mov
imul
aad
jnp
adc
fisttps
jo
stc
aaa
andl
mov
xchg
mulb
das
xchg
mov
mov
aad
lret
pushf
sub
cmp
iret
arpl
cli
push
psllw
push
mov
mov
adc
arpl
or
lcall
cmp
sbb
jnp
sub
and
push
cmc
jle
out
popl
fwait
cmp
or
out
pop
cmp
push
cmp
enter
push
add
push
mov
mov
bnd
rcll
inc
test
adc
sbbb
dec
and
hlt
shrl
xchg
mov
cmp
popa
push
aam
push
adc
mov
insl
ret
fwait
xor
into
xor
not
jns
sarl
rcl
jp
or
add
loopne
repnz
imul
xlat
jns
cmpb
adc
sub
mov
jne
ljmp
jmp
and
into
test
xchg
jle
shll
aas
sbb
sub
scas
popa
push
rcrl
xor
fs
out
jae
xchg
sub
ja
push
push
in
fsubr
shr
test
xor
push
cmc
mov
inc
std
lcall
jo
sbb
pushl
jb
popf
cmpsb
push
bnd
jnp
mov
sub
sbb
or
sbb
push
fcom
add
imul
mov
insl
shl
mov
cmc
pop
mov
lods
mov
repz
mov
sub
jg
pop
jg
inc
mov
push
aad
lea
pusha
jne
dec
jecxz
add
fxch
mov
pop
into
stos
jecxz
ss
or
push
inc
lret
jg
shrl
xlat
fnstenv
hlt
jnp
call
pusha
fsubp
jl,pn
aad
add
jmp
jecxz
ror
lahf
in
daa
push
sub
clc
leave
push
ds
ss
repnz
shrl
imull
es
sahf
jle
into
test
lods
sub
adc
adc
jg
adcb
lret
push
aam
cmp
mov
mov
pop
stc
stos
test
ret
jle
and
mov
fldcw
and
sbb
cwtl
xor
dec
leave
and
xchg
and
cli
aaa
outsb
sbb
arpl
ljmp
insl
jbe
jg
ljmp
ret
push
push
push
test
fcoml
cld
jbe
add
repz
adc
mov
adc
inc
jb
adcb
testl
sbb
fs
ret
sbb
push
adc
in
jnp
pop
push
in
in
dec
adc
or
in
pshufw
mov
sub
xchg
je
popa
std
dec
pop
pop
and
add
data16
cmc
mov
mov
test
xor
push
cs
data16
lret
mov
xchg
call
sbb
mov
pop
daa
in
fnstsw
icebp
cli
or
cli
and
push
das
fisttps
jbe
or
mov
das
sbb
xor
mov
ficoms
sbbb
fsubs
ja
sarb
push
adc
adc
add
arpl
inc
fs
pop
jp
sar
test
mov
xchg
stos
in
and
adc
push
ret
mov
enter
and
mov
fidivs
in
mov
lcall
mov
jle
addr16
repz
and
pop
pop
lcall
fbstp
fs
stos
arpl
inc
inc
sbb
cmpsl
hlt
out
pop
push
jl
push
iret
mov
ljmp
jmp
lods
data16
sub
lods
cwtl
imul
mov
nop
rcl
fdivp
inc
stc
popa
outsl
iret
mov
sub
mov
ds
sub
sbb
jl
jmp
add
and
xor
lods
pop
push
jnp
fmull
adc
mov
adc
imul
adc
es
scas
mov
clc
jmp
inc
dec
lock
loop
mov
fisubrl
jbe
insb
or
cmp
inc
add
bnd
xor
mov
ss
sbb
and
out
fsubl
jnp
add
mov
test
and
mov
testb
cmp
mov
lret
mov
push
test
add
push
clc
push
jmp
lds
xchg
std
mov
push
pop
cli
insl
aam
mov
arpl
jmp
and
or
dec
sub
hlt
push
notl
clc
mov
roll
mov
add
lret
hlt
out
pop
sbb
lods
outsb
dec
enter
int
xchg
ljmp
push
jg
arpl
mov
jecxz
fsubrs
push
push
push
or
out
mov
sub
mov
jbe
enter
shll
sbb
cwtl
or
shlb
idivl
mov
lret
mov
xchg
mov
cli
sbb
dec
mov
testb
mov
xor
sbb
out
sub
cmp
pop
mov
rorb
scas
push
jb
lret
xchg
and
mov
adc
sbb
xor
in
cmpsb
lods
lds
pop
rorb
ret
jo
push
cmpl
push
and
mov
sbb
test
jl
out
cmpsb
mov
xor
jno
dec
divb
test
pop
cmp
lods
push
xchg
notb
mov
push
mov
scas
cmp
fnstcw
and
sahf
outsb
icebp
push
sarb
mov
inc
pusha
jns
push
sub
iret
cmp
or
lods
scas
xor
push
sbb
xchg
stos
int
sub
jb
xchg
mov
cli
mov
mov
jle
shr
cwtl
movsb
xchg
sub
mov
and
jb
gs
mov
in
sub
movsl
xor
aaa
les
jge
push
in
jge
adcl
jno
push
std
cwtl
mov
loop
rcr
pop
rcrb
pop
mov
pop
popf
std
sub
push
nop
mov
out
mov
add
jns
xor
das
jl
aam
xorb
push
pop
inc
insb
xchg
pop
icebp
nop
popf
fbstp
dec
cltd
ret
push
mov
out
lret
decb
sbb
xchg
push
dec
pop
jbe
loope
pop
add
jno
out
imul
pop
mov
xor
push
pop
sbb
outsb
aas
mov
inc
ds
sub
test
cmc
inc
push
idivl
aas
sbb
cmp
pop
arpl
out
push
clc
mov
xchg
pop
adc
mov
sub
mov
push
jp
dec
xchg
testb
imul
dec
mov
arpl
mov
inc
outsl
inc
push
xorl
cmp
dec
decl
test
jbe
mov
sub
adc
movsb
xlat
mov
sbb
in
rcrl
push
repnz
out
pop
sub
xchg
dec
bound
push
loopne
ss
xchg
mov
sti
add
ja
mov
adc
dec
aam
mov
push
xchg
mov
push
lods
loopne
lea
add
mov
shr
cmp
jb
insb
idivb
arpl
outsb
mov
outsb
fwait
bndldx
das
mov
clc
cltd
and
mov
dec
and
lea
cmp
mov
xor
pop
scas
cmpsl
and
std
rcrl
mov
shll
adc
out
into
ror
add
mov
into
and
notb
xchg
fucom
scas
inc
cwtl
lcall
repz
sub
fldt
and
mov
shr
bound
out
stos
test
sahf
or
push
fnstsw
sub
ss
pop
js
adc
dec
xchg
pop
lret
imul
test
pop
push
adc
gs
xor
mov
xor
cltd
inc
pop
imul
je
sbb
out
mov
push
fs
div
jae
roll
test
orl
cmp
pop
fidivrl
pusha
inc
popf
push
push
cwtl
xchg
mov
mov
arpl
subl
adc
movsb
jbe
pop
xor
ja
stos
push
ret
push
mov
pop
mov
add
or
mov
and
insb
xchg
mov
loop
ror
fcomps
mov
xlat
and
mov
outsb
pop
out
xor
outsl
stos
je
or
adc
sbb
subl
sbb
rclb
sbb
jmp
push
int3
fcmovne
and
ss
stos
pop
out
and
in
test
cld
xchg
gs
sub
jno
sbb
adc
xchg
fstpt
leave
xchg
mov
int
stc
cmp
stc
jge
or
test
xor
movsl
sar
inc
shll
adc
movsb
lret
dec
xor
lret
ss
sti
sub
mov
mov
das
push
pushf
jecxz
test
gs
add
ljmp
pop
loopne
xor
ror
cltd
fdivrs
inc
xchg
sub
ljmp
test
jne
inc
mov
dec
jne
movsl
mov
or
xor
jns
jmp
js
add
repz
cs
cld
xor
loopne
add
and
lds
pop
or
fistl
dec
insb
push
decb
inc
add
scas
mov
nop
mov
stos
aaa
pop
mov
ret
jae
lcall
sar
sti
mov
lcall
nop
push
test
stc
xor
lahf
and
xor
xchg
push
adc
mov
pop
and
daa
das
cli
push
push
mov
push
mov
and
adc
test
pop
lret
repnz
movl
adc
lock
pop
mov
pop
sub
push
out
mov
aad
jne
sbb
dec
js
xchg
mov
push
sarb
adc
mov
cmpsl
loopew,pn
in
or
int3
mov
mov
mov
push
lods
xor
sbb
movl
cwtl
ljmp
push
xchg
cmpsl
pusha
les
inc
sub
es
adc
lahf
mov
and
xor
add
mov
add
sarb
sbb
lahf
xor
add
ret
jns
leave
adc
int
je
sub
push
fsubrl
or
and
daa
ret
xchg
vmovaps
or
loopne
pop
push
mulb
mov
in
ja
dec
cmpsl
sub
dec
loop
dec
add
sbbb
mov
push
adc
adc
je
dec
and
or
insl
aad
sbb
pop
jo
data16
pushf
add
push
mov
lret
fcompl
sbb
cmp
scas
stos
push
or
bnd
push
xchg
fstpt
bound
testb
lahf
fisubl
inc
jne
or
nop
cmp
pop
pop
mov
sub
nop
push
cmc
inc
mov
fldl
cwtl
add
shlb
cbtw
mov
and
adc
cmp
cltd
ret
xor
cmp
adc
pop
and
mov
pusha
xor
push
pop
stos
jmp
sbb
pop
push
iret
lea
inc
mov
sbb
ja
fwait
sbb
ss
adc
dec
xor
test
gs
rclb
fcmovbe
mov
movsb
mov
lcall
mov
cmp
dec
jbe
push
lea
lock
subl
jnp
jecxz
or
jmp
push
xor
mov
cli
add
loopne
jmp
movsb
fisttps
adc
das
inc
xor
and
mov
hlt
push
pop
in
sub
jb
sub
xlat
ja
push
incl
sub
scas
jg
mov
jne
ficomps
pop
std
lret
jg
pop
mov
std
xlat
mov
lcall
int3
jo
fmull
cld
or
add
jno
push
int3
jae
orb
imul
iret
inc
jge
cmp
fistl
loop
aam
imul
fldt
sub
xor
rcrl
faddp
inc
hlt
cld
jmp
fs
sub
push
call
mov
xor
pop
nop
add
adc
or
push
add
inc
incb
xchg
xchg
xor
jb
js
jo
xchg
je
int
test
or
pushf
jle
fwait
jg
inc
imul
inc
cmpsl
test
push
shrb
je
pushf
dec
pop
mov
or
xchg
aam
sahf
and
xchg
push
iret
mov
popf
push
xlat
popl
dec
imul
ljmp
mov
jns
scas
mov
jg
sub
leave
je
mov
ljmp
insl
jl
mov
xchg
xor
pop
sub
lock
call
ret
push
or
pop
xlat
mov
mov
cmpsl
jbe
dec
jmp
xor
or
cmpsb
outsb
aam
mov
jecxz
and
scas
cltd
push
pop
shlb
iret
and
ja
jae
sbb
mov
inc
cmp
nopl
imul
pop
dec
adc
add
pusha
sbb
out
daa
je
cltd
xchg
loopne,pn
push
bound
into
bound
test
or
int3
das
push
pushf
in
insl
outsl
into
ror
std
lret
cld
js
pop
mov
xor
cs
mov
sbb
jge
or
and
aaa
sbb
lcall
adc
pop
xlat
in
test
shll
add
pop
out
setb
pushf
sbb
dec
pop
cs
fidivl
inc
cmpsb
push
cbtw
arpl
cmp
punpckldq
gs
sbb
repnz
push
movb
sub
xchg
cwtl
inc
icebp
fwait
push
lock
stos
mov
jae
adc
cmp
dec
jb
adc
ja
out
fdivrs
scas
mov
inc
imul
xchg
sub
sbb
cmp
dec
xlat
xchg
inc
mov
test
lods
inc
imul
mov
or
push
jmp
pop
mov
nop
mov
ljmp
push
les
sbb
call
stos
add
xor
xchg
flds
xor
push
lcall
adc
push
fistl
jb
mov
lret
xor
in
fsubrl
and
sahf
cmp
mov
je
pop
and
fldcw
popf
movsb
dec
js
sub
lock
ret
stc
cmc
out
mov
and
pop
in
pop
add
out
adc
mov
pop
or
sub
iret
cmp
stos
fwait
jb
aam
dec
shlb
xchg
popf
sbb
dec
pop
mov
fcmove
sbbl
popa
pop
push
or
js
iret
push
xchg
ret
pop
dec
gs
add
push
mov
pop
cmpsl
or
lock
add
mov
push
data16
cs
cli
mov
mov
pop
stc
inc
pop
mov
iret
xchg
out
inc
adc
test
xor
inc
push
dec
ljmp
outsb
and
mov
sbb
mov
shll
in
jno
mov
push
jae
push
dec
pop
sub
movsb
add
sbb
and
dec
into
xor
cltd
cmp
das
sbb
sbb
fstpl
xchg
xor
cmp
inc
bnd
or
icebp
inc
jmp
daa
xchg
shll
hlt
cmp
test
sub
mov
push
imul
dec
xchg
out
add
pop
push
lods
loope
jg
repz
scas
in
fs
lcallw
sub
sub
mov
sbb
repz
loop
pop
and
add
push
xor
inc
push
push
imul
mov
es
xchg
out
in
adc
inc
std
clc
add
gs
ret
fists
rcll
movsl
and
sub
xchg
dec
fists
hlt
iret
scas
test
out
arpl
and
shrb
or
sbb
ljmp
ja
push
cmpsb
scas
dec
mov
sarb
aas
jno
jnp
mov
pop
std
xchg
idivl
das
and
rcrb
repz
sahf
push
stc
add
lds
mov
xor
leave
mov
pop
sbbl
scas
and
cld
xor
mov
mov
xor
mov
xchg
mov
test
dec
mov
inc
loope
xchg
int3
ret
push
stos
inc
cmp
cmp
or
jp
sahf
cltd
sub
mov
mov
adc
xor
gs
push
cmpsl
and
fwait
inc
jae
rcrl
adcl
sbb
mov
mov
aam
cld
jno
push
mov
fcompl
fsubrp
leave
mov
push
push
push
push
aad
fstpl
cmp
adc
fildl
ljmp
int3
lods
sti
repnz
mov
mov
fnstcw
xor
repz
add
xchg
xor
cmp
arpl
and
lahf
or
out
ja
popf
fcoms
rcrl
test
repnz
lods
in
ljmp
inc
mov
cmp
inc
adc
xchg
sbb
adc
and
nop
mov
mov
sbb
add
jmp
sbb
push
or
mov
es
adc
sbb
pop
mov
nop
pop
xchg
push
sub
fdiv
ss
sub
aam
ret
in
and
cmp
cltd
xchg
div
stos
xchg
xor
mov
test
cmp
loop
rcrb
add
enter
sbb
cmp
pop
idiv
addr16
popf
sbb
sbb
mov
push
and
sahf
mov
xor
jns
leave
sub
test
sahf
jns
jmp
xor
cmpl
mov
jns
nop
mov
testl
in
xchg
test
loop
jns
adc
jo
sbb
insb
repz
cmpsl
je
mov
push
adc
arpl
gs
popa
insl
stc
inc
scas
inc
jecxz
rol
testb
xchg
outsb
jg
jns
ss
aam
xchg
pop
pop
rolb
scas
js,pn
sub
mov
cmp
inc
jns
mov
mov
jnp
mov
fldcw
repz
xlat
popf
push
in
dec
cmpsb
ret
jno
incb
sbb
cwtl
mov
xchg
pop
pop
mov
ror
ljmp
int3
pop
sar
iret
loop
inc
cwtl
dec
pop
test
adcl
and
insb
fdivrs
mov
shll
mov
push
mov
jg
test
daa
jge
push
jne
mov
out
add
aam
xchg
fldcw
test
outsl
enter
clc
add
jle
aas
lcall
jg
repz
mov
cmpsl
jle
in
jle
push
xchg
cmpsl
adc
jle
mov
cmp
push
sbb
bnd
popf
inc
stos
add
stc
xchg
cltd
scas
pop
mov
arpl
cmc
mov
pop
inc
pop
mov
lock
mov
add
mov
cmp
loope
inc
rorb
and
sti
pop
in
adc
mov
lcall
mov
test
scas
negb
test
dec
push
mov
pop
outsl
sbb
push
xchg
out
add
cmp
into
add
pop
push
pop
test
mov
jbe
cmp
decb
shll
mov
sahf
sbb
xchg
sub
push
outsb
add
mov
pop
mov
inc
rcr
fldenv
frstor
in
leave
insl
pop
mov
ret
push
xchg
mov
lods
push
jecxz
add
dec
out
das
or
sbb
adc
mov
sarb
pop
xlat
call
inc
xchg
xor
jmp
inc
loop
cmp
xchg
jecxz
ffreep
cmpb
in
sub
push
mov
pushf
subb
or
jns
test
das
jg
pop
fwait
adc
dec
mov
push
pop
mov
inc
enter
xor
dec
lcall
sbb
cli
rcrl
mov
test
mov
mov
pushf
xor
cs
imulb
push
rcl
jb
in
add
dec
sahf
loopne
push
sahf
movsl
call
jge
adc
mov
ljmp
out
ss
mov
adc
pop
inc
mov
cmc
lret
jmp
pop
jecxz
mov
mov
repz
or
int
jecxz
mov
mov
pop
scas
orb
inc
sbb
sbb
sarl
add
jo
cmp
icebp
jnp
cmp
rdtsc
jb
xchg
jle
jo
out
rorb
insb
mov
adc
sbbb
mov
mov
lock
xor
xchg
call
stos
xchg
sbb
and
pop
sbb
pop
adc
add
aam
aas
mov
xchg
mov
les
xchg
xor
out
sub
xor
jns
mov
arpl
sahf
mov
icebp
fs
xor
call
outsb
mov
enter
cli
or
adc
push
mov
idivl
xchg
lahf
and
jmp
push
stos
movsb
mov
mov
jne
push
add
dec
lcall
hlt
or
jnp
es
lret
mov
xchg
xor
jecxz
not
nop
popa
jb
sbb
cltd
cmp
fisubrs
int3
mov
in
fdivrs
in
sbb
mov
mov
adc
jns
dec
jno
inc
sbb
adc
push
push
movsl
mov
in
and
out
xchg
inc
push
xchg
lods
inc
pop
xchg
xchg
ja
mov
xchg
imul
lds
adc
ret
pop
mov
cmpsl
add
mov
lcall
inc
outsl
ljmp
push
sub
enter
mov
sub
bnd
pop
inc
call
dec
out
push
push
in
push
imul
mov
popa
pop
jo
dec
inc
or
popa
cmpsb
push
pop
stc
arpl
pushf
sbb
and
movsb
inc
in
xchg
and
ja
mov
subb
cmp
xor
jmp
test
cltd
sbb
inc
out
pop
inc
andl
mov
xchg
gs
lcall
jnp
test
scas
lcall
adc
dec
xchg
movsl
pop
xchg
shlb
mov
sbbl
inc
pop
ucomiss
in
sub
dec
cmpsb
cmp
divl
pop
fsubl
and
jbe
outsl
mov
add
loope
cmp
sbb
inc
mov
jmp
ror
mov
daa
dec
shrl
jle
push
cmp
imul
shlb
pop
scas
or
ds
pusha
sbb
jns
out
xchg
jbe
std
or
mov
pop
stos
sub
jb
fbld
sti
and
div
push
test
inc
xchg
fdivrp
or
lock
in
bound
cmc
test
clc
insb
mov
push
mov
sbb
test
int
sahf
sub
inc
lods
cmp
inc
test
leave
xchg
in
lods
lds
test
lock
std
cmpsb
and
cli
xor
or
mov
lods
int
movsl
outsb
pushf
inc
sub
mov
call
sbb
lds
inc
das
push
cli
sbb
mov
aaa
sbb
add
popa
faddp
int
ficomps
stc
out
jge
xchg
mov
daa
push
inc
inc
mov
dec
iret
fbld
pop
lret
jmp
jle
pop
outsl
push
sahf
in
push
mov
or
sbb
jnp
shlb
outsb
mov
in
jne
out
cwtl
xor
sub
sub
fsts
dec
mov
in
stc
jle
es
cld
in
scas
movsl
ljmp
inc
add
adc
inc
insl
xor
dec
leave
sub
lods
jae
sbb
mov
hlt
mov
pop
sbb
jmp
mov
les
xchg
push
inc
cmp
mov
fs
sub
sbb
xor
ja
sub
sbb
mov
fimull
mov
cmc
xchg
mov
push
adc
adc
dec
andl
cwtl
mov
loop
mov
sub
lods
mov
jmp
xlat
cld
push
insl
mov
xor
enter
xor
or
mov
andb
cli
std
add
movsl
mov
fbld
mov
popa
loopne
sub
jns
and
cmp
pop
or
push
lods
xor
repz
movsb
add
ja
pop
cmp
aas
in
inc
test
push
adc
jo
add
mov
aas
jb
gs
outsb
outsl
pushf
ja
int3
lcall
or
push
int3
int
testl
jb
pop
add
pusha
fisttps
stos
inc
shrb
xor
inc
push
nop
sahf
sbb
or
int3
xchg
dec
imul
adc
shr
mov
or
cmp
sub
in
or
push
or
inc
dec
imul
jb
sub
push
xchg
stos
fnstsw
lods
cmp
sub
std
xchg
jnp
mov
adc
outsb
pop
clc
movsl
aam
push
jae
pop
repz
jmp
fadds
xor
mov
or
stos
insl
fstpt
cmp
dec
push
xchg
sbb
lea
cltd
jb
out
arpl
xchg
loopne
dec
mov
shlb
sbb
lods
sarl
or
jp
rorl
xor
add
push
mov
call
fstpt
dec
cmp
dec
pop
jno
repz
sub
in
add
loop
fs
jno
das
pop
xor
or
inc
mov
imul
stos
mov
stc
into
enter
push
in
inc
or
out
faddl
jb
mov
mov
push
int
imul
xor
sahf
inc
and
or
ljmp
mov
push
fimull
cmp
cmp
adc
xchg
push
ja
pusha
clc
movhps
mov
cld
cmpsb
inc
popf
or
les
ja
push
jo
mov
jae
enter
add
cmpsl
xorl
out
or
lock
mov
lods
mov
cmp
or
arpl
insb
fwait
jne
or
mov
movzbl
mov
pop
jbe
sbb
or
push
push
xorl
push
sbbl
inc
add
xchg
push
xorl
fbstp
fstpt
loope
sbb
rcrl
push
xchg
outsl
mov
inc
in
fdivrs
sub
es
movsb
aad
cmc
lea
sub
fnsave
sub
mov
inc
dec
pop
xchg
shr
divl
xchg
mov
scas
imul
push
xchg
cmp
dec
in
or
inc
nop
ljmp
xor
imul
push
pop
in
jg
in
xor
dec
xor
pop
js
inc
std
mov
pop
and
pop
insb
gs
lea
aaa
lret
xor
mov
mov
movsl
and
loop
scas
dec
adc
jnp
in
aam
cmc
movsl
push
push
xlat
or
mov
sbb
xor
popf
jae
int3
dec
jmp
push
cli
fwait
mov
test
cmpsb
sbb
push
imul
sbb
add
stos
xor
pop
loope
es
scas
aaa
xchg
rolb
loopne
pusha
call
imulb
cmc
dec
xchg
mov
inc
dec
sub
push
pop
shl
xor
xchg
sub
sub
xchg
and
fwait
pop
or
xorl
loope
mov
and
and
movsb
jge
dec
xchg
mov
inc
dec
pop
aam
dec
mov
xlat
lods
pop
mov
iret
cltd
inc
es
loope
mov
jg
xchg
jne
mov
subb
xchg
arpl
fldcw
ficompl
jle
adc
jns
jle
into
in
sbb
sbb
loop
mov
cmpsl
jge
cmp
iret
add
aaa
aas
jecxz
mov
jo
ljmp
push
sub
pop
es
and
lahf
sub
leave
in
sub
insl
sahf
sbb
add
iret
pop
fidivrl
xor
lods
into
test
orb
test
and
adcl
fsts
mov
rcrl
cmpsb
inc
fnsave
add
inc
iret
cmp
adc
cmp
repnz
daa
mov
out
mov
rorb
or
rclb
gs
jg
xchg
jo
lahf
es
sti
sahf
xor
xor
mov
insl
sbb
fistpll
call
dec
jmp
cmpl
leave
xchg
xchg
sub
push
call
hlt
frstor
or
sub
in
mov
popl
xchg
sbb
add
adc
mov
orl
lret
adc
inc
add
and
cmp
sub
out
mov
pop
sbb
gs
popf
cmp
repz
in
sub
fidivrs
or
mov
scas
iret
imul
push
aam
dec
push
mov
shlb
pusha
mov
mov
or
sbb
mov
jl
call
mov
loopne
mov
jo
daa
jg
mov
mov
pop
daa
add
loopne,pn
cmp
xor
sub
add
cld
inc
adc
addr16
adc
push
pop
pop
sbb
dec
clc
es
push
pop
inc
push
pop
jnp
jmp
test
inc
adc
xlat
repz
stos
cmc
xchg
dec
pop
test
stos
cmpsl
add
lods
mov
or
and
add
nop
imul
dec
cmp
mov
int3
push
or
cmp
jns
push
mov
test
push
aas
int3
in
cmp
inc
in
adc
js
sub
pop
pusha
std
shrb
ljmp
dec
sub
push
mov
jp
movsl
negb
mov
notb
mov
pop
testb
cli
js
or
cmc
dec
sahf
mov
in
add
call
xor
lcall
add
out
pop
lds
scas
outsb
pop
repz
lods
jmp
mov
les
push
arpl
out
scas
xor
movsb
lea
in
outsb
out
sbb
je
and
add
mov
xorb
popa
push
out
ret
jp
mov
fcmovbe
int3
fsubr
jns
cmc
sub
movsb
ds
and
sbb
mov
rol
mov
adc
xlat
iret
push
xor
adc
pop
or
xor
in
out
xchg
or
jo
loope
jb
xchg
mov
mov
fcomps
stc
in
and
mov
ja
inc
pop
mov
jle
sbb
push
dec
pop
xchg
je
fiadds
cmp
add
pop
mov
pop
jp
out
das
sub
push
or
es
adc
and
movsl
cwtl
ret
sub
lahf
lea
call
inc
in
fwait
sbb
arpl
testl
mov
fimuls
lods
push
lods
test
movsl
insl
lods
scas
cmp
dec
dec
pop
repz
fisubs
test
mov
ds
xorb
in
push
and
clc
mov
pushf
outsl
stos
mov
cmp
xor
test
mov
xor
pop
repnz
lea
popa
or
jge
push
testl
das
hlt
in
or
and
loop
lahf
xchg
pop
stos
lret
out
add
fcompl
cwtl
dec
flds
bound
je
lods
lods
repnz
and
loope
and
jnp
jle
sub
das
xor
jmp
fnsave
xor
mov
enter
gs
mov
aam
fs
pop
pop
pop
push
out
fcomp
push
ficompl
and
test
lcall
adc
pop
mov
pusha
rcrb
shlb
jb
stos
into
rorw
les
dec
push
xchg
adc
jmp
jne
scas
repz
lret
enter
insl
and
ljmp
cmc
scas
ucomiss
sbbl
fiaddl
jno
pop
push
aaa
dec
jg
jbe
jecxz
in
mov
cltd
repz
mov
cmp
mov
lret
lahf
cmp
out
cmp
push
cli
icebp
test
xor
push
adc
std
loope
mov
ret
jne
or
cs
jecxz
mov
sub
xor
inc
inc
stos
js
add
ja
jne
inc
rol
mov
dec
les
fdivp
sti
sbb
insb
xchg
push
xchg
pushf
rcr
mov
aam
jecxz
jae
cs
and
adc
ficoms
mul
adc
fistpll
and
and
inc
adc
add
lods
aas
push
lods
loopne
ja
fcoms
add
hlt
movsl
add
xor
mov
movsb
in
dec
jle
dec
xchg
call
pushf
pop
sbb
push
scas
aas
or
test
pop
aam
or
xchg
dec
xor
call
ss
fistl
mov
push
test
cmp
or
test
inc
or
jne
repnz
das
xor
fcomps
cmpsb
fs
mov
and
into
jecxz
iret
jne
push
cmp
aam
aam
idivb
mov
sub
dec
xchg
pop
es
fstl
aas
mov
imul
mov
test
mov
cmp
lock
fcompl
fs
sarb
jno
mov
iret
sbb
jnp
sbb
pop
xchg
arpl
pushf
mov
mov
xchg
jne
adc
inc
push
call
xchg
aad
in
mov
pushf
lods
and
sub
das
loopne
xor
push
adc
and
mov
aaa
or
inc
add
ret
mov
ret
leave
lahf
test
sub
out
in
xchg
sbb
dec
jnp
mov
xchg
int
jno
shrb
popl
sub
jl
cwtl
xchg
xor
jno
ds
pop
cmc
pusha
dec
subl
pusha
mov
cmp
sarl
les
ja
jecxz
aas
ljmp
cltd
dec
out
cmp
jnp
bound
push
inc
fldenv
out
popf
mov
pop
and
adc
lds
push
push
test
movsl
adc
mov
jbe
std
sbb
jg
das
clc
inc
mov
sub
mov
cld
mov
mov
aam
xor
xchg
aas
jnp
pusha
fisubrs
pop
pop
pop
xor
cmp
lret
popa
cmp
outsl
push
addr16
add
inc
es
jl
cmp
xchg
rolb
fisttpl
add
jl
pop
cmp
or
incl
xor
sarl
add
in
pop
bnd
mov
jnp
movl
lock
jne
gs
push
mov
imul
xor
leave
ret
in
stc
xlat
fistl
outsl
scas
inc
repz
xchg
lds
inc
jne
fsub
sbb
repnz
lods
lock
xor
xor
push
sub
add
rol
out
mov
es
jle
pop
or
mov
push
dec
stos
pop
mov
xchg
jp
test
mov
and
adc
fmuls
cmpsl
push
push
xchg
cmc
add
mov
push
jg
push
xor
ret
insb
stos
pop
out
test
scas
inc
repz
dec
ds
out
cld
jbe
and
mov
fiadds
into
cmpb
test
cmpsw
cmp
jmp
std
push
and
sti
add
cltd
cwtl
jbe
daa
mov
gs
ret
jmp
push
ret
in
jnp
enter
pop
pop
mov
jmp
mov
fldcw
movsb
mov
xchg
out
jmp
dec
push
popf
outsl
inc
call
dec
aad
pop
push
pop
jno
out
dec
cmpsb
xchg
or
cli
pop
dec
adc
pop
or
out
push
das
mov
scas
mov
mov
jmp
pop
jbe
movsl
inc
xchg
loop
mov
or
gs
movsb
mov
mov
mov
adc
add
xchg
jecxz
stc
flds
push
mov
xor
outsb
in
cmc
mov
cwtl
cmp
dec
pop
mov
sub
adc
fiaddl
push
adc
push
out
out
xor
out
push
dec
sub
outsl
inc
and
add
lock
push
js
xchg
jbe
cltd
or
test
and
aam
movb
xchg
jp
push
jno
test
inc
add
movsb
push
por
push
out
fcomi
or
xchg
aad
scas
sbb
push
inc
cld
popf
dec
jno
mov
mov
inc
inc
inc
push
jmp
pop
int
mov
imul
ficompl
mov
mov
into
xchg
dec
inc
mov
xchg
mov
es
aaa
aas
sbb
shrl
xor
jb
cmp
shl
mov
aam
ret
aaa
in
push
out
shll
out
cmp
jecxz
mov
ds
fwait
movsb
pop
and
aas
jecxz
cld
adc
sub
sahf
mov
dec
sbb
xorb
xchg
rcrb
repz
mov
addr16
pop
out
pop
sbb
push
stos
daa
mov
push
sti
clc
xchg
iret
lret
mov
out
sub
mov
pop
inc
dec
icebp
xor
mov
mov
mov
lea
test
or
pushl
inc
adc
scas
pop
ficomps
cltd
fnstcw
sub
test
xchg
stos
lea
mov
lcall
test
mov
cmp
xlat
xor
fsubl
ficomps
gs
test
sbb
sarb
arpl
popf
mov
sbb
sub
ficoml
ficomps
xor
popa
sbb
lods
adc
insb
pop
dec
mov
push
adc
jmp
andl
inc
mov
fidivs
mov
sarl
jns
fidivrl
cmp
and
and
push
cld
jno
sbb
aas
lea
les
test
rcrb
dec
mov
fisubrl
dec
movsl
jecxz
jne
nop
sub
cs
xchg
cmp
or
push
aam
fstpl
pusha
arpl
lods
stc
leave
push
mov
mov
push
push
xchg
cmp
fdivrp
mov
cld
xchg
cmpb
fwait
stc
lahf
test
cmp
mov
mov
push
mov
mov
push
andl
lahf
sahf
shll
or
add
pop
jns
lods
loop
pop
mov
mov
jle
icebp
pop
jae
mov
xor
test
stos
test
out
push
dec
xchg
out
dec
fwait
and
scas
push
test
sbb
sbb
pusha
orl
adc
subb
cmp
cmp
hlt
lahf
mov
xchg
push
or
cmp
sarl
xor
adc
xor
aad
mov
adc
sbb
hlt
outsb
push
fdivrs
pop
sahf
and
and
add
mov
iret
rorl
scas
scas
or
sahf
stos
add
mov
leave
aaa
mov
ret
ss
xor
inc
sub
ret
dec
jl
stos
xchg
adc
inc
sbb
ror
or
inc
pop
pop
mov
or
xlat
icebp
jle
aam
xor
push
jle
sbb
or
cs
cmpb
ja
hlt
xchg
inc
in
jne
jne
sarb
rorb
hlt
cld
imul
fs
ja
push
push
ror
jbe
jge
loop
push
mov
mov
jecxz
lahf
loope
loope
cmp
pop
out
dec
cmpsb
xchg
shrb
and
scas
mov
lcall
outsb
jne
cmpsl
push
es
xchg
sahf
mov
gs
pop
add
pusha
fwait
inc
pop
mov
rclb
jbe
ret
aaa
and
inc
pusha
mov
arpl
jo
cmp
imul
mov
jb
cmc
outsb
test
push
cmp
xor
or
loopne
add
sbb
xor
fnsave
ret
in
fsubs
imul
int3
push
leave
in
mov
loopne
cmp
fwait
push
and
xchg
add
or
fimuls
lea
lret
or
xor
jecxz
jecxz
sbbl
xor
ss
adc
pop
xchg
add
xor
jnp
shll
sbb
call
xchg
xchg
jp
shl
mov
pop
fmull
aad
scas
add
das
add
or
faddl
inc
iret
test
mov
das
push
cs
cli
cltd
push
add
fisttpll
and
imul
icebp
outsb
pop
fiadds
popf
neg
out
mov
pop
jnp
shrb
loopne
js
add
icebp
push
sub
add
pop
cltd
fbstp
les
std
mov
lret
pop
out
insb
into
fwait
rclb
cmp
adcl
cwtl
movq
out
repnz
push
dec
pop
or
lds
dec
es
imulb
add
mov
aaa
loop
mov
add
and
hlt
jnp
bound
into
cld
aaa
pop
jne
mov
sub
dec
lods
push
push
pop
cld
pop
mov
push
ja
mov
sbb
imul
cs
mov
add
insb
push
imul
cmpsl
push
int
mov
jecxz
push
leave
pop
popa
imul
lea
dec
fldcw
dec
mov
sub
bound
pop
lcall
or
rorl
push
movsb
jns
jno
mov
das
ds
out
or
pusha
mov
cld
mov
in
xor
push
lret
stos
jbe
inc
daa
mov
out
push
stos
and
or
cli
push
jo,pt
jo
mov
loope
lret
testl
test
and
call
stos
xor
pop
xchg
xchg
add
popf
xchg
sbb
sub
popa
insb
idiv
jp
scas
adc
stc
inc
clc
scas
push
push
sahf
daa
sahf
jle
shrl
rolb
test
mov
cmp
outsb
mov
faddp
pop
xchg
sub
lret
push
bound
push
push
gs
call
and
stos
scas
fwait
pop
lock
dec
les
jle
jp
addr16
mov
and
shlb
xchg
add
popa
lret
cmp
cld
mov
fildl
xchg
jnp
insb
push
dec
add
inc
dec
jae
repnz
es
dec
out
cmc
ja
cmp
fdivrs
pusha
sti
push
mov
add
jae
sub
mov
mov
loop
xchg
test
mov
add
pusha
inc
xchg
fcmovu
rcrl
icebp
push
push
sub
enter
mov
cmp
icebp
pushf
push
or
push
jb
subl
dec
test
pop
rorb
sarl
mov
jne
dec
push
jecxz,pt
subl
cli
sbb
ret
push
and
idivb
out
repz
test
test
sbb
jnp
xorl
mov
faddp
jbe
dec
mov
mov
jnp
lock
rcrl
jnp
loop
mov
pop
push
clc
cs
xlat
dec
push
enter
lds
cmp
mov
mov
sbb
jno
testl
dec
js
push
mov
mov
mov
pop
jg
push
fst
incl
rcll
imul
sbb
ffreep
nop
in
mov
lret
pop
push
lahf
xor
stos
pop
outsb
jno
out
adc
mov
imul
adc
data16
jl
cld
inc
sub
dec
fldcw
outsl
cmp
imul
mov
pop
dec
dec
js
or
nop
mov
pop
mov
insl
sbb
inc
jo
sub
push
imul
negl
adc
xor
lods
inc
xlat
adc
lock
icebp
pusha
mov
mov
ret
cmc
mov
stos
sub
mov
jmp
xchg
cmp
out
das
jno
jle
movq
mov
insl
jns
xchg
roll
pushf
push
in
repnz
insb
sub
adc
cmp
add
push
lods
cmpl
mov
sbb
int3
cmp
xlat
clc
inc
mov
sbb
jae
popf
addr16
jae
pop
js
cli
lret
and
das
jne
fldt
scas
jnp
ret
out
in
push
loopne
jle
fwait
xchg
shl
fsubrl
mov
mov
sub
mov
sahf
sub
jo
ljmp
pop
xor
push
sti
dec
mov
mov
in
rcrb
push
sub
jp
loop
cmp
fwait
mov
xor
dec
cmpl
mov
add
es
loop
aam
jnp
inc
push
xor
push
scas
pusha
loopne
add
add
popf
jae
clc
pop
push
cmpsl
test
lods
loopne
das
dec
mov
movsb
push
testb
pop
fcoml
aaa
inc
aad
push
mov
dec
push
scas
faddl
rorl
sub
xchg
mulb
gs
fisubrl
repnz
gs
inc
shlb
pop
cld
cwtl
scas
andb
mov
mov
cmp
pop
adc
sbb
inc
cld
fs
xor
sarl
iret
xchg
or
inc
loope
jp
cmp
prefetchnta
fs
inc
jp
fcoml
stos
inc
shlb
fcompl
and
lret
push
btsl
lret
cwtl
and
mov
mov
inc
and
ljmp
testb
loop
rolb
sbb
cmpsl
or
mov
pop
mov
lret
lret
push
test
sbb
pop
jmp
aam
out
add
pusha
mov
sub
dec
push
add
sub
sub
sbb
xlat
pop
sub
aaa
mov
adc
jp
cli
sub
jg
fidivs
cmp
insb
mov
test
rcrl
aad
add
mov
arpl
jno
xchg
pop
ja
leave
cli
jmp
mov
ljmp
lock
pushf
adc
rorl
popa
push
sbb
jne
push
mov
xor
jg
fldcw
or
inc
inc
jl
sbb
mov
cmpsl
je
mov
mov
dec
scas
mov
mov
leave
push
insl
jnp
clc
roll
cs
cmp
aaa
ficoml
pop
mov
add
jmp
sub
test
sub
push
xlat
and
lret
fisubrl
adc
push
dec
jbe
out
inc
repnz
xchg
ret
add
dec
jns
popa
rclb
push
hlt
sub
mov
sar
or
call
xlat
leave
inc
pop
sbb
xlat
add
leave
dec
loop
add
cmpsb
lds
mov
cmovne
xor
and
push
or
or
jbe
cmp
test
repz
lods
xor
lcall
jae
mov
xchg
xlat
test
mov
mov
pushl
dec
inc
sbb
or
out
and
dec
ret
mov
mov
out
jge
addr16
hlt
adc
push
push
dec
xchg
adc
rolb
enter
mov
movsb
mov
test
inc
subb
shrl
ja
lock
xchg
popa
inc
mov
xchg
data16
cwtl
fnstenv
xchg
ss
mov
setb
pushf
rol
xor
into
pop
sbb
mov
cmp
fldl
jecxz
cld
or
sbb
mov
or
out
adc
ljmp
mov
in
mov
addr16
or
or
insb
sub
xchg
pop
sbb
faddl
xchg
cmpsb
lds
push
pop
xchg
sbb
icebp
sub
or
int
aaa
push
test
stos
inc
ljmp
cmp
add
out
mov
xchg
shlb
lret
mov
into
addl
jl
dec
adc
push
dec
mov
aad
lods
inc
pop
or
jmp
sbb
out
push
pop
stc
imul
lods
inc
mov
mov
test
or
xchg
mov
and
int3
adc
in
sub
shrl
das
mov
data16
test
cli
xchg
sbb
arpl
xor
ljmp
dec
xchg
xchg
lcall
sub
sub
leave
lret
mov
add
out
pop
fidivl
fadds
cld
push
or
pop
or
jmp
cld
push
ret
cmp
cmc
adc
or
xchg
inc
xchg
test
ret
popa
mov
dec
int
arpl
jg
push
hlt
sub
sbb
and
cmc
xor
pop
inc
insl
ss
cmp
int3
inc
shlb
mov
ret
cmpsl
rolb
popa
jns
fsub
adc
std
adc
stc
movsl
outsb
pop
ret
jbe
mov
or
push
vxorps
fwait
sti
decl
mov
push
jg
sbb
sub
out
and
enter
xor
xor
jb
cmp
sub
push
int
sub
cmp
in
les
xchg
movsl
xor
inc
cmp
push
sbb
jp
lods
xchg
rclb
sbb
inc
sbb
fwait
divb
sti
stos
mov
out
mov
pop
pushf
shll
dec
pop
je,pn
stos
loopne
adc
lds
scas
clc
adc
inc
sbbb
and
lcall
lods
dec
std
das
jno
add
or
push
test
dec
and
dec
addr16
xor
xchg
rcrb
xor
push
jmp
mov
cmpsl
and
loope
push
in
mov
cmp
mov
xchg
inc
inc
xor
push
rcrl
cmp
mov
fsub
ss
xor
cmpsb
xchg
push
jnp
orl
add
movsb
mov
sahf
dec
sub
out
adc
ljmp
js
mov
cmp
setnp
mov
subl
movsb
add
dec
inc
insl
sub
sbbb
cmc
adc
fldt
mov
and
sub
out
aas
jmp
push
or
xchg
xchg
cmc
cwtl
add
out
xor
lret
jmp
pop
cld
xor
mov
ds
cmp
roll
mov
js
mov
cmp
jbe
pop
jne
cwtl
xchg
pop
mov
push
nop
mov
jl
ja
jg
mov
or
adc
mov
lret
cvtpi2ps
mov
sub
dec
cs
sbb
adc
push
sub
in
jp
pop
mov
ret
pop
cmp
dec
push
movsb
dec
mov
hlt
out
test
sarb
or
lahf
mov
jp
mov
push
push
lods
cs
test
loop
jmp
ds
jge
jecxz
nop
mov
loop
jo
shl
jl
and
xchg
icebp
sbb
test
add
cmc
pop
and
xchg
mov
mov
mov
xor
mov
je
xlat
mov
ds
popa
arpl
outsb
fstpt
push
xchg
xchg
inc
jp
and
cmpsb
fnsave
mov
idivl
xchg
in
jmp
into
push
icebp
stos
adc
dec
and
cs
pusha
mov
mov
add
xor
cmp
jle
int
ss
lret
adc
jb
sbb
mov
pop
push
pushl
push
mov
push
pop
adc
das
xlat
mov
and
jnp
stos
cmp
and
mov
loop
pop
xor
push
and
pop
push
mov
fdivrs
adc
imul
shlb
adc
or
lds
cmp
loopne
xchg
add
frstor
sub
in
aas
cmpsb
or
out
lock
call
lret
iret
int3
mov
dec
dec
push
jle
stos
loope
dec
push
leave
xchg
dec
into
cmp
loop
sub
cmp
nop
popa
jb
cmp
ss
mov
mov
aad
inc
movsb
enter
inc
insl
cli
sbb
or
jge
lds
imul
jge
sbb
sarb
push
or
in
int
adcl
inc
loop
mov
jnp
addr16
scas
jle
shl
jo
mov
dec
popf
stos
lret
jge
push
test
sbb
pop
mov
push
xchg
fcompl
push
jg
pop
scas
std
test
in
fisttpl
mul
sahf
lods
sbb
dec
and
shll
leave
sbb
stos
insb
sub
mov
insl
outsl
lcall
fisttpl
xchg
fwait
insl
outsb
pop
aad
mov
xor
xchg
insl
xchg
sti
push
adc
and
sbb
pop
sbb
dec
ret
and
call
add
out
push
pusha
or
cmp
xor
or
or
lods
sub
cmp
jno
fwait
in
sub
add
das
test
push
loope
pop
loop
dec
add
push
dec
jns,pt
lret
loope
insb
dec
xchg
rcll
cmpsl
dec
pop
fwait
mov
fs
lret
push
jae
je
js
sub
pop
movsb
mov
leave
xor
cmp
aad
sub
sub
scas
out
mov
jmp
sub
xor
adc
or
aam
push
shl
xchg
sbb
jmp
dec
dec
xchg
movb
mov
jecxz
add
inc
adc
sbb
out
adc
pop
hlt
cmp
mov
arpl
scas
cs
in
cltd
ja
out
cltd
dec
or
rclb
pop
inc
test
pop
insl
or
cli
xor
or
mov
into
push
push
sub
ljmp
les
repnz
sbb
nop
sbb
jp
add
sub
jae
sub
insl
test
shlb
jnp
adc
sahf
and
pop
dec
adc
fmulp
test
inc
sub
xchg
arpl
loop
rorl
mov
sub
les
sahf
push
imul
push
inc
fisubrl
testb
or
push
lods
cmpsl
pusha
test
adc
mov
pusha
call
adc
loope
icebp
xor
sbb
mov
int3
out
and
lods
sbb
rorl
int3
adcb
xchg
xor
stos
sub
add
xchg
xor
mov
in
adc
mov
push
int
adc
cmp
mov
out
sahf
out
testb
into
lock
sbb
lahf
adc
inc
loopne
jl
int3
enter
sub
test
inc
add
inc
enter
mov
adc
sbbb
xchg
and
mov
push
das
icebp
push
jnp
add
add
mov
loop
test
push
lods
aad
pop
mov
test
xchg
vandps
inc
ffree
and
pop
jg
test
leave
lock
or
aad
in
sbb
imul
nop
mov
mov
xchg
adc
je
mov
js
lea
mov
push
mov
sub
divl
scas
mov
mulb
jg
xor
inc
push
mov
daa
mov
movsb
adc
std
inc
ret
out
aam
add
xchg
cmp
cwtl
or
aaa
pushf
cmp
and
sub
lds
mov
lret
jno
in
ja
leave
sbb
jns
fcmovnbe
sub
sub
rcll
add
jg
mov
mov
stc
xor
jb
jecxz
mov
xrelease
add
dec
jno
jb
aad
mov
xor
popa
xchg
cld
pop
and
mov
jae
icebp
scas
mov
push
adc
push
in
jno
rcrb
mov
or
mov
push
sahf
push
push
leave
cwtl
mov
sarb
popf
push
xor
ss
sub
sub
sti
int3
movsl
fisttpll
sahf
roll
movsb
jl
mov
loopne
scas
scas
dec
popa
pop
lea
pop
pop
in
xorb
rorb
pop
and
add
fistl
test
or
pop
push
mov
cltd
jb
loop
cltd
pop
or
mov
scas
in
test
test
dec
call
dec
pop
jg
push
and
fnstenv
sub
sub
xchg
mov
inc
dec
lret
rcrl
mov
dec
xorb
xor
fsubrs
dec
enter
cli
clc
fmull
pop
pop
jnp
data16
adc
dec
push
jae
loopne
xlat
adc
dec
rcrl
cmpl
sbb
or
xor
add
inc
lcall
and
and
insl
add
lds
fisttpl
sub
jecxz
and
repz
jns
jg
leave
inc
xchg
cmp
dec
jns
in
lret
add
daa
inc
pop
add
fstl
mov
pop
mov
outsb
lret
mov
scas
aaa
pushf
popa
out
sbb
lahf
hlt
pop
test
mov
sub
in
push
mov
adc
jb
out
jle
shll
leave
outsl
loope
stc
arpl
ds
inc
xor
xchg
ljmp
xor
sbb
out
sub
int3
or
aaa
es
lret
lods
mov
mov
outsl
push
mov
cmc
test
sbb
cmp
int
icebp
push
ss
jmp
pop
cwtl
mov
in
sbb
in
mov
xor
stc
movsl
xchg
xchg
or
loope
cli
pop
push
cmc
fcoml
lods
push
andl
add
mov
dec
jno
mov
loop
pop
push
xor
sbb
pushl
outsl
insb
jle
sbb
shrl
sub
add
mulb
add
push
dec
cmp
mov
push
rcll
xchg
push
int3
adc
icebp
imulw
repz
int3
leave
fs
aad
adc
adc
in
adc
inc
pop
add
xor
test
and
add
jecxz
or
aad
icebp
insl
xor
in
fucom
mov
fbld
pusha
lock
push
imul
dec
push
mov
outsl
or
fs
flds
stos
dec
out
je
add
arpl
imull
shrl
add
lea
mov
xor
jns
push
ret
fcoms
mov
sbbl
lods
das
and
ret
mov
or
out
inc
push
loope
adc
mov
je
xchg
pop
xchg
repnz
add
and
sub
mov
push
push
jmp
scas
js
stos
dec
mov
cmp
cmp
lret
xor
and
shl
or
lahf
cmp
pop
cmp
inc
notl
jnp
pop
test
fiadds
aas
ja
push
jge
cmp
inc
cmpsl
ret
push
or
push
mov
xchg
fs
imul
iret
mov
and
movsb
or
and
mov
std
and
and
ret
out
insb
test
and
add
nop
jae
clc
push
popa
sbb
movb
cmp
jb
gs
jnp
fisubl
je
push
repz
xchg
orl
xorb
xchg
jmp
push
rcrb
pop
xor
inc
mov
mov
adc
arpl
pop
orl
xchg
ret
mov
je
xlat
and
in
add
adc
sahf
ret
loopne
dec
dec
int3
inc
adcl
jbe
out
push
fsubrs
mov
scas
shl
push
loopne
add
shlb
cli
jno
push
add
pop
add
pop
shll
and
xchg
ret
jmp
lods
cmpsb
mov
pop
mov
sti
sbb
cltd
popf
lods
push
daa
or
ja
cmp
insb
pop
xor
jmp
pop
mov
lods
xchg
mov
loopne
inc
decb
cwtl
call
lahf
je
imul
call
into
xor
jmp
xchg
jle
test
pop
sbb
mov
cmc
add
mov
insl
pop
les
push
ret
jb
jecxz
dec
loope
rcrb
inc
inc
adc
shl
jp
es
dec
adc
inc
mov
lahf
xchg
pop
adc
dec
pop
rcr
jmp
pop
enter
add
xor
xchg
jo
push
nop
pop
mov
bound
pushf
loopne
sbb
inc
stc
divb
imul
add
fwait
cmp
or
cmpsb
sahf
outsl
pop
and
pop
mov
adc
sub
mov
mov
into
insb
outsl
jns
cmp
mov
das
xchg
jle
xchg
xor
test
js
dec
ds
sub
in
dec
cli
test
pop
bound
mov
jbe
ret
push
pop
call
mov
lret
divl
mov
inc
sahf
add
xor
jno
mov
mov
mov
xor
scas
xor
push
sbb
scas
jp
test
xchg
fistpll
dec
stos
mov
cld
addr16
lea
mov
mov
andb
jmp
std
out
iret
and
inc
jae
sub
repz
xchg
addr16
stos
push
call
in
push
sub
mov
in
loope
or
adc
inc
xchg
adc
les
pop
movsb
lds
push
ja
mov
hlt
cmp
and
mov
iret
push
xchg
loopne
pushf
mov
xchg
fildll
ds
xchg
pop
icebp
into
aas
xchg
mov
inc
and
outsl
xchg
pop
fwait
in
jmp
jl
mov
scas
sub
and
and
push
cmp
mov
jb
adcl
aad
jne
mov
or
dec
mov
sub
out
rcrl
add
fwait
sbb
mov
and
dec
mov
iret
and
movb
or
lds
jmp
inc
fisttps
sbb
imul
stos
mov
push
inc
mov
fstpt
mov
mov
fdivs
push
mull
jmp
inc
scas
jge
pop
fsts
aad
sbb
fdivs
in
cmpsb
inc
pop
mov
xchg
ret
aam
jl
inc
inc
cld
pop
lock
adc
inc
push
inc
add
das
int
push
mov
nopl
mov
push
div
mov
mov
test
pop
or
dec
das
out
dec
jl
leave
cmpsb
imul
push
scas
or
insl
lock
sbb
insb
ret
lods
lahf
pop
push
adc
xchg
sub
xor
sti
inc
adc
popf
lock
gs
into
rcrb
xor
sti
sub
es
sbb
lret
bound
in
pop
jnp
je
add
jne
jb
add
cltd
test
xchg
lcall
outsl
inc
add
sarl
fmuls
aaa
push
and
jg
mov
lahf
into
mov
adc
test
cmp
jle
mov
xchg
inc
leave
and
ret
mov
imul
leave
inc
xchg
xor
mov
jge
inc
aam
test
flds
push
outsl
sbb
cmc
lahf
inc
stos
jge
out
adc
enter
jbe
xchg
rcrw
and
sbb
shll
bound
xor
mov
cli
pop
jnp
cmpsb
out
add
daa
mov
movsb
or
adc
sub
push
add
lret
imul
fisubrl
or
stos
clc
pop
es
mov
inc
icebp
sub
aam
lret
xchg
pushf
nop
stos
xchg
mov
and
test
outsl
es
pop
push
xchg
jp
filds
lock
movsb
dec
sti
gs
fnsave
jle
filds
jae
adc
daa
dec
pop
out
sub
adc
int
push
adc
aaa
mov
test
fld
adc
cmp
push
mov
push
pushf
dec
popf
inc
dec
cmpb
dec
orb
int3
xor
ficomps
and
push
js
mov
jge
inc
jmp
stc
mov
mov
pop
sbb
inc
shl
call
aaa
in
cltd
insb
test
out
adc
call
push
dec
pop
add
iret
imul
jl
sbb
push
sarb
jbe
or
jns
jp
mov
leave
adc
out
daa
inc
cmp
add
addb
enter
xor
or
xor
test
aam
push
ret
rcll
or
pop
add
or
sbb
sub
fadd
jl
aas
jb
lret
push
adc
jmp
jmp
aad
dec
inc
xlat
jbe
aam
mov
bound
das
sub
mov
mov
popa
mov
rol
and
int
loopne
mov
orl
push
jmp
insb
and
loop
rorl
jl
adc
int3
movsl
lcall
ljmp
aas
int
gs
sahf
mov
add
push
pop
dec
popl
lcall
pop
lret
push
or
inc
and
dec
xchg
dec
loop
out
mov
sbb
fstps
inc
in
mov
adc
lock
in
clc
ds
sar
push
xor
jo
je
in
mov
cwtl
ds
jle
jb
movl
scas
xor
lret
scas
cmpsb
push
lret
mov
xchg
mov
or
mov
cmp
or
fisubrs
inc
push
jp
cmp
sub
loopne
jge
rcrl
dec
repz
ficomps
in
fldl
aad
ljmp
jns
pop
out
adc
movsl
or
xchg
mov
aam
pop
or
push
addr16
dec
push
sbb
mov
std
pop
js
add
dec
inc
xchg
mov
cmp
sbb
mov
in
jg
iret
add
loop
sbb
rcll
mov
cmp
mov
scas
cmpsb
push
cmpsl
cwtl
inc
in
popf
inc
popa
add
adc
les
adc
shrb
inc
adc
push
mov
outsb
movsl
popa
jmp
add
inc
test
or
call
in
mov
ret
mov
fwait
mov
jb
dec
lea
addr16
push
fists
in
or
cwtl
xchg
gs
xchg
cmpsb
stos
or
jns
xchg
cmp
hlt
xor
loopne
adc
jl
repz
push
xchg
xchg
mov
repnz
in
stc
cli
or
aam
aas
mov
mov
xor
mov
lcall
xchg
test
int3
std
mov
push
inc
cmp
faddp
inc
dec
mov
sahf
lea
inc
sti
icebp
jne
loop
fs
inc
shl
mov
mov
pusha
rcrl
roll
iret
lcall
int3
scas
subb
cmp
sahf
cmp
or
push
mov
addb
test
fisubrl
cltd
or
lea
imul
repz
les
std
add
xor
sub
xchg
pop
xchg
mov
outsl
or
sti
jmp
sbb
in
shlb
xor
or
adcb
fldl
daa
adcb
adc
add
jp
sbb
fnstsw
mov
cmc
mov
xor
push
in
ds
aad
adc
popf
pop
pop
movsb
xchg
in
cmp
push
pop
inc
mov
inc
xor
jae
xor
out
mov
mov
mov
shlb
xchg
jp
dec
mov
or
cmp
or
pusha
out
push
lods
in
aaa
iret
xor
nop
test
sub
in
xchg
shlb
rclb
test
fstpl
out
sbb
jg
movzbl
test
ss
sub
negb
or
scas
xchg
mov
sub
mov
xor
scas
add
sub
lea
lea
and
ds
adcb
sahf
jecxz
dec
xchg
imul
ret
or
sbb
mov
in
addr16
movsl
xchg
mov
dec
mov
loopne
push
movsb
fisubl
addb
mov
adc
cwtl
sbb
inc
push
jo
movsl
mov
mov
shrb
test
cmpsl
jmp
sbb
push
fstpt
fwait
mov
mov
daa
push
lds
lcall
jno
sti
clc
add
or
and
mov
notb
dec
pop
dec
nop
gs
cli
add
dec
dec
arpl
psubb
pop
call
lahf
push
stc
mov
jecxz
mov
test
mov
adc
shlb
push
orl
jns
loopne
sbb
and
and
outsl
fistpll
push
lret
mov
movsl
xchg
mov
and
push
mov
ja
int
rcll
push
sbb
mov
xchg
dec
inc
push
xor
xchg
jle
or
jle
fists
xchg
das
bound
shrb
sub
data16
pop
hlt
cltd
xor
mov
out
notb
mov
mov
mov
xchg
imul
rcll
mov
mov
push
fsubs
mov
repnz
add
and
jecxz
sti
add
adc
inc
daa
mov
inc
fwait
push
add
push
psubw
test
push
mov
stc
fwait
cmp
jg
xchg
cmpsl
mov
iret
or
xchg
hlt
mov
jg
fwait
daa
test
mov
mov
shrl
aad
or
xor
loop
inc
das
arpl
mov
je
jae
lea
and
aad
lods
incl
jns
or
adc
push
jge
xchg
push
sub
jl
xchg
mov
push
out
clc
movsb
in
jl
push
fstl
add
xor
jne
pop
mov
adc
mov
xchg
and
imul
mov
mov
xchg
insl
mov
mov
arpl
add
loopne
sub
mov
shll
dec
push
jecxz
xchg
loope
lods
mov
push
pop
inc
inc
dec
xor
jno
dec
enter
das
or
gs
sti
and
ljmp
shrl
inc
ret
icebp
fimuls
roll
pop
xor
inc
dec
dec
cwtl
mov
pop
lret
xchg
push
sub
xchg
pop
fcmovne
ja
jmp
adc
mov
enter
add
and
push
and
lods
pop
repnz
cwtl
scas
add
mov
sti
xchg
cmp
imul
aam
outsb
mov
cli
lcall
mov
clc
adc
dec
test
sbb
mov
xor
pop
loopne
and
in
popa
xchg
das
and
and
gs
jmp
push
cltd
bound
andl
outsb
push
das
rclb
popa
or
cmp
ret
icebp
insb
int3
aad
insb
popf
jbe
pushf
ss
icebp
js
lds
es
leave
mov
mov
push
test
test
push
outsb
pop
popf
in
mov
jmp
bound
mov
jae
rcll
andb
adc
xchg
adc
test
sbb
cld
mov
iret
movsb
adc
xor
pop
and
fs
mov
mov
sbb
test
test
mov
xchg
call
aam
enter
adc
arpl
xchg
cs
lods
adc
jbe
push
dec
mov
add
int3
push
je
lret
ja
dec
mov
ret
cmp
or
xchg
pop
arpl
xchg
es
test
mov
loope
xchg
push
mov
push
popf
es
cld
into
ret
ret
pop
lret
push
stos
scas
push
fidivrs
arpl
out
mov
pop
lret
insb
mov
jp
adc
mov
jnp
arpl
adc
das
push
mov
lret
fldpi
xchg
jg
and
mov
or
shlb
fisubs
out
mov
push
mov
ds
or
cli
jb
repz
imulb
ja
movhps
sbb
loopne
jg
mov
bound
dec
cld
addr16
pop
xchg
and
dec
mov
xchg
out
pop
pop
je
jle
xchg
lods
dec
int3
sub
mov
sbb
xchg
repnz
cmp
mov
mov
jle
mov
ret
inc
sbb
not
pushf
cmp
mov
add
out
sbb
es
sub
jmp
test
xor
sub
aad
popa
js
jno
out
mov
test
or
lods
stc
fbstp
ss
and
sub
incl
mov
adc
mov
sbb
mov
repz
xchg
test
daa
or
dec
in
cmc
aaa
cmp
dec
shlb
mov
xor
lcall
jb
in
fs
xor
mov
arpl
push
lret
cs
xchg
sbb
and
mov
insl
popa
scas
testb
push
mov
gs
enter
mov
repnz
xor
es
push
jnp
push
xchg
add
jecxz
sbb
int3
push
fcoms
mov
loopne
push
jg
stos
inc
inc
or
test
mov
insl
nopl
cmpsl
mov
sbb
test
push
in
dec
or
repz
mov
aad
mov
sub
xchg
subb
fs
in
lret
adc
pop
enter
pop
les
adc
sub
jo
cmp
jg
enter
sbb
repnz
adc
or
arpl
mov
adc
and
cmpl
vaddsubps
ds
bound
loopne
dec
push
push
cmp
out
faddl
les
mov
sbb
add
mov
rorb
mov
clc
sbb
cmpsl
xchg
mov
sbb
pop
cmp
test
or
and
test
xchg
es
and
add
cmp
cmp
les
jns
test
xor
stos
sub
popf
sub
movsl
xchg
pop
xchg
push
cli
out
push
fdivrl
xor
xchg
in
test
test
sub
lret
inc
cmpsl
jecxz
pop
lods
and
sub
in
lods
mov
mov
mov
xor
ss
add
ds
cs
daa
cmpsl
repnz
push
in
fucomp
aas
les
adc
inc
xchg
and
mov
mov
addb
adc
adc
xchg
mov
fistpll
xchg
mov
pusha
mov
push
mov
dec
sbb
sbb
shlb
jns
cmc
pop
aas
imul
loop
lcall
pushf
or
stc
jne
cltd
ret
jge
push
dec
test
sbb
pop
inc
lds
jns
jbe
sbb
xor
test
mov
mov
sbb
mov
in
dec
mov
xchg
ja
push
outsl
imul
jae
inc
cwtl
cmpsb
stc
popa
int3
mov
je
inc
pop
push
nop
sti
xchg
or
int
adcb
sahf
pop
aas
inc
fs
in
xor
in
clc
pop
push
ja
jne
push
or
lods
pushf
sti
push
inc
pop
in
push
leave
dec
jmp
cmpsb
mov
repz
push
test
sub
adcb
push
aam
mov
cli
cmpsb
cwtl
imulb
pop
jno
pop
adc
decl
aas
rcrl
xorl
xchg
dec
adc
ret
mov
mov
insl
and
mov
fildll
fs
dec
scas
cmp
dec
int3
fidivs
ffreep
movsl
dec
sbb
add
sbb
dec
and
xor
popf
inc
sbb
jge
jo
push
leave
push
es
shll
mov
push
and
jl
cmpsb
push
add
das
xchg
mov
cmp
mov
pop
dec
adc
in
shl
jo
mov
inc
cltd
ret
loop
sub
sub
jbe
adc
inc
or
mov
mov
pop
jl
pop
imul
test
cmp
sbb
test
lds
mov
mov
repnz
aaa
and
mov
adc
insb
divl
and
mov
dec
xor
int3
mov
adc
leave
rcrl
pop
int3
stc
sbb
push
and
dec
adc
or
insl
mov
jne
lods
call
out
cmp
mov
jo
lret
dec
fisttps
fldcw
out
std
mov
xor
int
push
iret
jo
xchg
mov
push
pop
out
jle
push
test
pop
fistpl
xlat
adc
ljmp
clc
imul
mov
xor
or
in
dec
add
sub
rcrl
cmovp
int3
push
and
sbb
adc
pop
sarb
inc
pop
push
and
xchg
pop
adc
ss
imul
mov
mov
je
call
inc
cmpsl
mov
out
mov
in
aam
in
add
shll
mov
aaa
mov
dec
mov
mov
xchg
jecxz
gs
test
lds
lods
or
pushf
mov
movsb
hlt
xor
xor
sub
mov
dec
js
stos
inc
push
xchg
ss
or
mov
xchg
cwtl
in
lcall
fdivr
push
aad
mov
imulb
mov
rcrb
clc
int
add
ret
leave
jp
mov
add
adc
mov
loope
push
es
mov
out
push
push
std
in
aaa
pop
mov
lea
sub
and
in
call
pusha
push
jne
jmp
push
and
inc
bnd
mov
or
mov
jnp
mov
fwait
cmp
push
lcall
xor
les
pop
pop
or
push
mov
divl
and
dec
hlt
and
fwait
pop
push
adc
std
jg
repz
jp
fs
into
mov
outsb
sbbl
adc
adc
enter
popa
rorl
add
sub
mov
push
xchg
add
pusha
mov
rclb
scas
or
mov
inc
movsb
movsl
aaa
mov
and
inc
cmp
out
jbe
mov
cmc
les
and
adc
es
ljmp
loopne
int
xor
adc
insb
dec
mov
jns
test
xor
mov
in
out
popf
pushf
dec
xchg
loop
outsb
aad
pop
lock
cld
push
addb
pusha
lods
push
arpl
lahf
sub
add
cmp
xor
test
lods
mov
rcr
fists
cmp
frstor
adcb
fwait
ror
add
sbb
add
add
mov
xchg
mov
fstps
push
xchg
into
add
sbb
jle
push
pop
movsl
js
jmp
mov
test
sbb
mov
fstl
sahf
pop
int3
ficoml
xchg
push
unpckhps
fnstcw
jb
insl
inc
repnz
imul
dec
xchg
sbb
inc
sub
mov
xor
iret
pop
inc
jle
sbb
lea
cmpsb
cmpsl
in
sbb
decl
pop
pop
adc
adc
scas
sti
mov
aaa
and
and
fcoml
adc
fnstsw
lcall
dec
cmp
dec
jnp
fists
adc
sbb
data16
pop
cmp
pushf
cmp
inc
lds
mov
scas
xchg
mov
xchg
fdivrp
mov
in
mov
in
xor
or
ljmp
std
sbb
dec
push
and
stc
lock
mov
insb
je
xor
mov
fsubrs
sub
jb
das
rcll
push
sub
or
shl
pop
imul
aas
pop
cmp
leave
add
xchg
and
dec
fnsave
xchg
inc
ss
lret
pop
fwait
mov
lods
test
and
repz
mov
es
fs
out
push
push
mov
fcoms
mov
iret
fdivrs
dec
sbb
mov
arpl
jle
push
dec
arpl
cli
aaa
adc
pop
shll
cmp
fmull
ret
xchg
sub
cmp
dec
push
xchg
fwait
into
push
out
xchg
cli
or
loop
in
xor
jbe
xchg
dec
jg
cmp
mov
test
or
push
and
jge
fistl
mov
cltd
push
cmp
lods
lahf
add
mov
xor
or
mov
pop
ss
pop
dec
fisttpll
xchg
cmpsl
push
in
inc
pop
xorb
xor
fcmovu
or
inc
push
movsl
ss
mov
sbb
je
jbe
fcom
out
fwait
ret
push
movsl
jno
mov
xchg
loopne
lcall
pop
mov
stc
mov
icebp
mov
aas
scas
xor
mov
cmpsb
cs
mov
and
outsl
xor
push
mov
int3
mov
or
fwait
mov
shlb
or
popa
pop
add
xlat
xchg
shll
jnp
mov
jae
shld
sti
gs
es
or
into
adcl
mov
cld
stos
mov
jle
mov
inc
loopne
cmpsb
and
out
pop
jl
push
notb
js
pop
dec
sub
ja
dec
jno
cmp
adc
je
jmp
dec
pop
int
loope
and
ficoml
pop
push
cmc
icebp
dec
hlt
mov
jle
rorl
push
cmp
xlat
vzeroall
cltd
andb
lahf
add
xor
stos
lods
outsl
sub
add
jmp
fcompl
push
push
test
sbb
push
jge
lea
push
jp
pop
fst
lcall
test
push
push
or
loopne
clc
mov
jp
xor
gs
mov
call
dec
lcall
movsb
stc
jb
inc
jle
in
arpl
fs
ljmp
jle
push
push
xchg
es
jns
nop
mov
insb
addl
push
mov
lock
pop
pop
outsb
fisttpl
call
sub
lcall
add
popf
or
and
pushf
xchg
sbb
and
adc
sbb
divb
sbb
mov
jmp
iret
mov
stos
and
cli
add
cltd
inc
addr16
and
mov
and
cli
mov
push
and
inc
ret
dec
sub
pop
sbb
negl
orb
dec
sbb
lds
and
sub
sbb
in
cli
loopne
jne
xlat
and
pop
push
call
sub
pushf
jp
sbb
aad
or
mov
inc
outsl
clc
push
or
scas
sbb
mov
test
push
imulb
or
stos
xchg
fldl
pop
lahf
xchg
mov
scas
loope
mov
xor
pop
adc
xchg
mul
lods
pop
pop
push
push
add
out
dec
or
sub
add
test
cmp
in
lcall
mov
roll
mov
jno
fucomip
or
mov
rcrb
movb
cmpsl
fistps
test
pop
xchg
outsb
add
insl
fldenv
pop
xor
adc
cmp
mov
or
mov
pushf
lea
inc
leave
mov
cmc
shrl
pop
pop
sbb
rcrb
repz
arpl
lret
push
mov
xchg
push
ret
push
roll
pop
mov
add
sub
mov
pop
cmpsl
sub
sbb
es
jb
fcmovne
mov
test
stos
pop
sbb
xor
push
in
jge
repnz
daa
fs
loope
in
sub
pop
push
enter
lds
adc
cmp
mov
mov
jae
icebp
popa
jns
stc
stos
test
in
loop
lock
ljmp
pop
xchg
xchg
idivl
lea
fninit
js
lahf
and
sbb
push
pop
add
push
lock
ficoml
rorb
aad
and
and
pop
mov
movsl
out
inc
add
sub
sbb
push
and
pop
mov
xor
hlt
rorl
cmp
flds
jns
push
test
pusha
mov
pop
xacquire
dec
mov
js
mov
adc
aam
test
cmp
mov
pop
xlat
lock
aaa
lock
into
cmp
test
addl
lcall
pop
fwait
dec
jae
inc
pop
sbb
xor
lods
inc
cwtl
fisubrs
pop
stos
test
outsl
jmp
push
pop
adcb
inc
cmp
and
gs
dec
xor
sub
loope
test
push
push
adc
jnp
fildl
stos
mov
adc
outsl
adc
inc
stos
ljmp
jo
push
orb
bound
push
jb
push
dec
push
pop
icebp
mov
ja
and
mov
lods
aad
mul
inc
sbb
repz
test
mov
add
or
add
fisubl
or
ror
jnp
cmp
cmp
insl
mov
push
icebp
cltd
test
cmp
inc
mov
out
or
stos
rorl
add
test
in
addl
xlat
xor
sti
test
mov
sub
pusha
daa
xchg
jmp
add
pop
gs
popf
ds
xlat
xchg
or
xchg
scas
mov
or
int3
sbb
xor
scas
xor
xchg
cmpsb
aaa
into
sbb
jmp
mov
xor
pop
cmc
cwtl
repz
mov
pop
jecxz
adc
movsb
in
cwtl
arpl
loopne
xchg
push
jmp
mov
or
adc
sahf
xor
iret
push
movsb
mov
rcrl
lods
ret
push
pop
xor
mov
mov
pop
xchg
orl
xchg
mov
jne
xor
sub
leave
insb
repz
icebp
or
add
adc
rorl
pop
sbb
sub
add
pop
out
lock
cltd
sub
cltd
add
sub
pop
fistl
fiadds
imul
cmpl
cld
xor
out
and
mov
mov
stos
inc
inc
mov
add
int3
jle
pop
aas
imul
pop
iret
popf
sahf
mov
jne
and
test
jl
es
in
popa
pop
cmpsl
cmp
adc
iret
test
add
enter
inc
test
jecxz
mov
dec
fucomip
jae
and
mov
xor
cld
in
push
lock
and
scas
cli
dec
popf
mov
xor
cwtl
jl
fsubs
inc
push
roll
cld
dec
mov
sbb
mov
jae
fbstp
lds
ret
insl
xchg
cwtl
test
xchg
dec
sub
cltd
or
fcompl
mov
pop
mov
mov
dec
daa
or
std
cmp
xchg
dec
subl
sub
jo
fistpll
dec
cmp
cmp
jne
outsb
fmuls
sub
jge
cld
push
lcall
arpl
push
notl
lds
movups
xor
inc
push
sbb
or
push
cmp
sub
xchg
pushf
movsb
shrb
xchg
in
lea
mov
leave
imul
mov
stos
mov
imul
add
stos
jb
or
fidivrl
idivb
cmp
adc
and
inc
enter
mov
xchg
and
int
lods
push
pop
pop
mov
popa
fxch
sub
fsubs
jbe
ss
jecxz
push
mov
stos
xor
xchg
in
int3
xor
mov
jecxz
push
mov
push
clc
movsl
mov
push
out
add
pop
jnp
mov
outsl
jns
popl
dec
adc
mov
xor
push
xor
mov
xor
jge
movsb
and
std
xor
or
fsubrs
popf
lcall
add
popa
mov
pop
mov
imul
js
add
and
fildl
lods
and
mov
std
cmp
xchg
fmull
xchg
sub
das
mov
adc
add
clc
cld
adc
scas
pop
in
cmp
jge
inc
mov
jo
push
add
lret
pop
cmpsl
inc
cmpsl
cmpsl
loopne
push
push
shrl
pushf
xchg
out
jge
lock
out
mov
dec
cwtl
and
notl
aad
cmp
push
cmp
std
push
test
pop
or
sbbb
xchg
shrb
inc
leave
insb
adc
lret
outsl
loopne
pop
push
and
nop
inc
jge
inc
and
sbb
in
movsb
aaa
dec
push
add
mov
nop
stos
sbb
call
xchg
dec
push
lods
push
or
xor
push
iret
adc
pusha
push
scas
adcl
int3
jle
aas
xor
lock
cmpsl
shr
mov
or
std
lahf
xor
push
lock
adc
insb
movsb
mov
and
xorb
cmp
outsb
rclb
in
adc
mov
jge
loope
xchg
sahf
pop
test
xchg
push
aam
mov
add
test
pop
and
sahf
scas
stos
pop
adcl
nop
push
call
and
jnp
jecxz
aas
xchg
inc
notb
ds
cli
jne
lret
pop
movsb
pushf
inc
xorb
cmp
int3
pop
nop
xor
push
es
loope
add
call
xor
subl
in
aas
sbb
dec
push
sub
xchg
in
ficoms
adc
pop
add
out
inc
push
add
mov
push
sbb
xor
data16
jecxz
add
sub
xor
mov
loope
outsl
xchg
sti
jb
push
pushf
fldcw
dec
repnz
jne
mov
xor
sarb
addr16
mov
xor
mov
subb
mov
pop
jg
int3
mov
rcll
add
or
mov
cltd
sbb
inc
xchg
adc
sub
mov
adc
adc
jl
cmc
pop
or
adcl
test
loope
ficompl
mov
cmpsb
or
jae
xchg
fsts
and
bound
jp
out
lods
fcmove
insl
sbb
sub
pop
cmpsl
test
jg
popf
fsubrs
inc
int
add
adc
adc
out
repnz
mov
enter
sbb
in
jbe
inc
push
out
in
and
fldl
loopne
mov
ss
adc
xor
mov
and
mov
loopne
dec
dec
popf
andl
insl
jle
and
stos
repz
loopne
pop
fldcw
test
push
lock
sbb
test
mov
inc
xchg
loope
call
inc
xchg
push
xlat
lret
jnp
sbb
xchg
add
inc
add
pop
adc
call
adc
jg
pushf
mov
xor
mov
pop
or
push
mov
data16
adc
and
jb
shlb
lods
push
rcrl
lahf
fwait
cld
and
jp
push
insb
jne
pause
xchg
ret
inc
mov
mov
jecxz
sub
jecxz
mov
inc
sbb
imul
xorb
cmp
sub
xor
xchg
decb
push
movsb
aaa
jecxz
ds
popa
xchg
dec
xchg
adc
xchg
xor
sub
in
adc
jl
arpl
es
sbb
mov
movsl
ss
int
sbb
or
sarl
negb
jnp
and
pop
add
xor
in
ret
mov
fucom
jae
inc
outsb
shll
add
mov
fisubs
jnp
xchg
inc
cli
inc
std
xchg
stos
in
mov
cwtl
into
push
xor
fwait
aam
test
test
adc
and
mov
lahf
sahf
mov
dec
pop
jne
in
es
pop
or
xor
xor
in
fcomps
mov
lret
mov
mov
cmp
icebp
pop
pop
cli
sbb
and
pop
out
pop
xchg
std
sbb
inc
popa
shrl
loop
das
jns
and
inc
leave
jge
push
pop
mov
rcrb
push
out
in
jl
ret
movsl
sub
rorb
mov
mov
movsl
nop
push
jnp
popa
sti
dec
mov
and
ds
pop
push
cmc
fiadds
cmp
imul
xchg
icebp
dec
lea
js
xchg
lret
cmpb
ja
inc
sbb
insb
cmp
pop
xorl
mov
mov
sbb
mov
xor
lods
xchg
ret
shlb
pop
and
negl
lcall
lcall
jle
das
icebp
pushf
test
push
idivl
dec
inc
jecxz
repnz
cmp
in
std
cmpsb
push
inc
cmpb
pop
incl
in
loopne
popf
leave
out
repnz
sub
mov
cmp
aas
adc
sbb
mov
xor
inc
test
xchg
adc
andb
cld
std
push
sub
pushf
sti
push
sti
lret
xchg
stc
imul
stos
pop
push
addl
push
leave
jbe
sbb
adc
ret
push
lahf
stc
dec
test
stc
decb
jg
lea
xchg
cltd
repnz
rcrb
xor
and
movsb
add
fwait
stos
mov
loopne
stos
jmp
cwtl
add
or
jecxz
jge
jbe
dec
repz
jmp
arpl
lock
mov
xchg
fmull
addr16
xlat
std
and
ret
sahf
add
push
int
dec
add
clc
les
iret
lods
push
mov
mov
add
rclb
movsb
push
xor
das
mov
sti
std
cli
sub
add
ror
xchg
push
aaa
dec
ja
std
push
xor
leave
test
psrld
iret
jp
pushf
push
cmp
lods
movsb
in
cwtl
mov
int3
sti
jge
int3
xchg
cmp
in
cmp
sti
test
push
aad
inc
pop
cltd
inc
lea
insb
leave
sub
adc
adc
insb
dec
xchg
cmp
fwait
xchg
xlat
test
dec
addr16
in
aas
pop
out
inc
out
ljmp
jle
js
lds
fwait
cld
adc
inc
test
inc
and
cmpsb
insb
lahf
xor
pop
adc
push
or
pop
sbb
imul
cmc
push
or
out
out
mov
ja
adc
nop
fimuls
rcrb
rcll
push
fidivrs
mov
shll
jno
push
les
int3
in
cld
dec
dec
sub
dec
sub
in
mov
xlat
push
enter
je
outsl
jne
enter
sbb
push
sbb
bound
jmp
in
scas
push
sti
lds
pop
lea
sub
fdivs
push
out
and
ss
pop
mov
add
lods
push
js
jnp
ja
movsl
fs
jb
icebp
sbb
daa
xchg
and
jle
rcrl
mov
pop
movsl
pop
in
add
dec
lahf
mov
inc
lcall
loopne
vorpd
cltd
pop
mov
mov
mov
sbb
inc
aad
imul
ss
pop
fsubl
fsubl
movsl
and
fdivs
movsb
jg
stc
dec
inc
push
jb
ret
pop
fbstp
mov
hlt
imul
push
pop
ret
add
pusha
rcrb
dec
or
push
sarb
mov
mov
mov
xor
aad
es
mov
jnp
scas
sub
ss
sbb
jge
out
call
in
pushf
jns
sub
sbb
loop
faddp
sub
inc
sahf
int3
enter
int3
daa
pop
lds
dec
xchg
imul
les
adc
cmp
insl
inc
pusha
mov
sub
scas
cmp
mov
mov
loopne
daa
out
dec
xchg
push
cld
int
js
lea
ret
xchg
sbb
jl
pop
mov
stos
pop
pop
mov
cmp
fadds
pop
jb
popf
sub
lods
pusha
mov
xchg
sahf
and
insb
test
push
or
cmpsb
out
mov
pop
xchg
and
shlb
push
mov
int3
loope
mov
int3
adc
lret
xchg
push
xor
mov
sbb
push
fstpl
jl
insb
cltd
pop
daa
mov
jnp
adc
adc
mov
add
adc
adcl
scas
xor
in
test
test
inc
sub
fiaddl
adc
or
xor
mov
pop
push
push
adc
adc
shlb
in
mov
mov
bound
push
sbb
gs
add
jle
pop
sub
push
sti
insb
imul
or
push
or
or
sub
xchg
scas
div
mov
cmp
cmp
adc
movsl
scas
scas
dec
jae
sbb
incl
and
sub
add
pop
ss
xor
add
xchg
cmp
push
push
mov
test
pop
fldenv
dec
sub
or
push
sbb
mov
imul
xor
or
xor
hlt
pop
es
xor
imul
mov
imul
stos
push
xchg
fucomip
pop
lock
scas
add
insl
jp
stos
inc
or
mov
jg
addr16
into
pop
add
mov
scas
gs
mov
jecxz
jb
mov
jno
dec
std
sbb
sahf
fistps
push
mov
pop
stos
pop
push
out
jb
movsb
into
xchg
cmpsb
and
dec
enter
dec
repnz
mov
cmp
mov
gs
push
data16
add
data16
pop
popa
or
fsubr
lcall
mov
int
lahf
loop
adc
sbb
xchg
sub
imul
jg
lock
repz
and
lret
lret
add
mov
cwtl
jl
cmc
push
push
ja
jecxz
cwtl
insl
lahf
cli
pop
lcall
shrb
stos
movb
inc
pop
xor
sahf
inc
std
movswl
mov
push
ja
lret
dec
rclb
adc
dec
pop
jg
daa
mov
sbb
fwait
les
test
ja
data16
mov
jb
mov
xchg
cwtl
pop
or
sbb
shlb
dec
adc
jnp
push
sti
cmp
jmp
push
fadd
adc
cmpsl
inc
es
xor
xchg
mov
int
psrad
and
divb
lcall
das
je
shlb
or
push
xchg
sub
push
sub
inc
mov
pop
cmp
test
xchg
sub
inc
imul
outsb
sub
pushf
scas
mov
mov
add
sbb
int3
or
add
mov
mov
sub
inc
add
mov
push
sub
inc
imul
ficompl
fistpll
ja
movsb
movsl
dec
sarb
sbbl
xchg
loop
fsubrp
scas
roll
jae
lcall
call
lock
inc
test
adc
pushf
arpl
scas
gs
push
push
push
or
pushf
and
in
aam
xchg
pop
xchg
mov
gs
lret
fidivs
cltd
js
cmpsl
aad
into
sub
sub
movsl
xor
scas
sti
sub
push
addr16
inc
fldt
mov
xchg
adc
test
xor
cs
in
or
mov
dec
pop
jmp
mov
xchg
cmp
cmp
stos
jmp
cmp
icebp
cmp
mov
or
addb
dec
icebp
jbe
add
jl
out
lcall
mov
xor
jg
jno
scas
dec
cs
ret
lcall
mov
mov
dec
and
add
add
sub
outsl
hlt
push
insl
repnz
and
jae
movsl
add
dec
mov
mov
sbb
fs
pop
xchg
jp
clc
mov
mov
and
and
out
adc
hlt
sbb
hlt
dec
cmp
lods
and
fistpll
inc
sub
inc
lret
subb
and
push
push
sbb
xor
push
fs
fs
loope
es
rclb
iret
xchg
push
ljmp
mov
xor
add
fcomps
cwtl
xchg
or
xchg
dec
jbe
push
ds
sbb
out
ja
lret
mov
jbe
cmp
icebp
jmp
fcmovnu
repnz
cmp
ds
ja
clc
xchg
pop
cmp
hlt
fucomp
movb
hlt
or
cmpsl
in
mov
add
push
lret
adcb
push
subb
inc
dec
lahf
pop
inc
mov
or
or
jae
sbb
inc
mov
dec
cmpb
clc
dec
push
imul
mov
rcrb
iret
ja,pt
mov
adc
lods
scas
pop
stos
push
cli
out
xor
jnp
rcll
scas
push
push
or
mov
push
divl
xchg
das
mov
in
ds
adc
in
test
nop
cmp
xchg
xchg
stc
lcall
sahf
lods
xchg
pop
push
das
fyl2x
out
je
xchg
sub
out
pusha
sub
in
or
dec
inc
loope
mov
out
jo
je
and
push
scas
and
sub
mov
repnz
outsl
add
fs
fsubrl
pop
or
fs
imul
pop
popa
jmp
sti
das
xor
int3
aas
or
cld
out
add
mov
cltd
push
out
mov
jb
ljmp
jns
push
and
repnz
pop
out
cmc
lods
sub
sbb
sub
insl
cmp
out
add
lahf
push
jbe
mov
adc
out
xchg
fwait
into
pop
fdivrl
in
xor
fptan
fdivl
in
pop
mov
bound
ret
insl
sub
iret
push
mov
push
xor
add
jb
testl
std
cmp
xchg
lods
jae
xor
enter
mov
cmp
xchg
mov
jb
nop
add
adc
fwait
scas
push
mov
bound
xor
imul
dec
xlat
enter
sub
mov
xchg
pushf
dec
in
fs
mov
adc
sub
xor
mov
enter
or
mov
xchg
push
popl
add
je
mov
jecxz
gs
adc
xchg
pop
ret
outsl
cwtl
adc
xchg
sub
aad
ror
nop
jae
sbb
leave
add
iret
lcall
mov
xor
dec
lret
shlb
sbb
out
test
and
and
push
sbb
dec
dec
or
mov
push
sub
gs
je
sti
mov
mov
out
mov
push
shrb
dec
cltd
addr16
movsl
decb
in
and
dec
jb
sbb
xor
adc
xchg
pop
loop
push
cmc
out
xchg
cwtl
jl
dec
ret
pop
jb
addr16
mov
mov
pop
lds
cmp
push
decb
iret
int
push
nop
es
jmp
adc
in
int3
mov
in
sub
adc
in
stc
cmpb
jle
add
popf
pop
jmp
out
out
stos
push
shrl
mov
imul
fistpll
shll
push
movsb
lahf
out
andl
imul
imul
ss
fsubp
inc
mov
popf
sarl
adc
clc
cmpb
push
lret
xchg
cmc
mov
pop
inc
sub
sub
out
pop
aaa
andl
xchg
cmp
dec
xchg
int
jle
push
out
cmc
adc
inc
add
cwtl
icebp
add
jnp
outsl
jns
jne
int3
mov
mov
cmpsl
ja
pop
jecxz
adc
les
les
push
jo
mov
int
and
ror
pop
sbb
hlt
sbb
add
sbb
mov
push
xchg
sub
cmpsl
jmp
xor
or
pop
xchg
lock
cmp
clc
jl
and
call
push
imul
dec
aaa
sbb
ljmp
addr16
icebp
add
aam
sub
fstpt
or
or
push
cld
in
add
pop
repz
das
push
adc
test
lahf
in
mov
and
push
jnp
jle
jp
dec
out
test
ds
mov
popf
mov
cmovp
sub
pop
xchg
adc
insb
out
pop
mov
lods
loopne
xor
mov
and
jns
mov
gs
imull
add
call
dec
icebp
lret
or
jl
mov
pop
jae
lret
out
pop
mov
mov
jecxz
xchg
insb
lock
mov
mov
repz
fwait
push
jg
addr16
es
scas
std
and
fsubrl
dec
dec
bound
lret
movb
mov
xor
or
pop
pop
or
sbb
test
or
mov
add
fildl
add
lds
or
imul
test
js
stc
dec
imul
insl
cmp
sub
in
jb
mov
jecxz
adc
fnstenv
and
outsb
sbb
outsb
pop
jns
jecxz
sti
adcb
jl
rcl
mov
in
dec
ret
push
cmp
fcomps
imul
push
ds
fcompl
xor
xor
test
or
inc
lock
sbb
call
shrb
aaa
leave
sti
add
adc
xor
push
outsb
aas
jge
xchg
pop
popa
sub
xor
das
dec
push
pop
js
icebp
jae
lahf
push
sub
into
daa
dec
test
lahf
decl
jnp
aas
cmp
jmp
mov
xchg
mov
bound
jb
adcb
leave
pop
pop
outsl
mov
mov
imul
and
jecxz
dec
jmp
mull
mov
push
xchg
mov
xchg
push
sbb
sbb
or
pop
out
jmp
mov
xor
nop
pop
es
jle
cmp
cmpsb
and
rcl
and
sbb
dec
stos
push
daa
mov
loope
clc
icebp
lods
loop
in
das
lret
shlb
cmp
rcrl
fs
in
dec
xchg
pushf
popf
xor
dec
gs
movsl
adc
dec
pcmpgtd
fildll
data16
mov
insl
dec
lret
test
or
insl
mov
ja
cwtl
cmpsb
sbb
xchg
call
sbb
shrb
shll
scas
inc
data16
mov
jo
xchg
cwtl
pop
pop
shrl
lcall
in
and
fisubs
movsb
arpl
lret
dec
int
movsb
fucomp
js
sub
arpl
adc
inc
es
sbb
adc
repz
lods
popa
stc
add
jbe
and
inc
loope
add
fistpll
cli
and
mov
sahf
mov
xor
ret
cmp
push
addb
mov
add
push
loopne
sub
fisubrl
lret
cmp
pop
pusha
and
int
popf
loopne
jo
popf
loope
les
inc
sub
fldenv
dec
ljmp
negl
xchg
lods
push
lcall
pop
push
xrelease
xor
pushf
ljmp
push
jbe
mov
testb
jp
pushw
fisttps
es
and
pop
add
adc
and
cmpsb
push
insl
out
add
xchg
xor
out
pop
inc
outsl
pop
mov
stos
mov
into
inc
and
insl
out
xor
lock
pop
or
add
jle
sbb
imul
mov
addr16
add
scas
loop
ds
dec
test
ss
shr
xchg
stos
pusha
xchg
in
iret
sahf
pop
mov
dec
jne
icebp
aas
add
lret
push
lock
pop
daa
fwait
push
pop
nop
psubd
xorl
mov
lcall
lret
adc
test
or
iret
popa
xor
xor
dec
cmpxchg
or
in
orl
push
and
repz
aas
pop
mov
out
dec
adc
cmp
imul
dec
xchg
pop
xchg
adc
cltd
cmp
push
add
popf
in
out
xlat
fstl
pop
mov
and
xchg
ds
adc
aaa
inc
test
mov
or
sub
lahf
filds
ja
jae
out
sahf
mov
mov
fwait
ja
pusha
or
popf
test
cmp
out
pop
fwait
dec
cmp
mov
popf
testl
jl
stos
int3
jae
inc
cmp
lcall
lret
push
pop
leave
push
scas
adc
jnp
and
sub
in
adc
pop
or
gs
loop
pop
rorl
xor
ds
orb
test
mul
pusha
push
mov
sbb
add
lret
arpl
lds
push
inc
mov
mov
test
test
cli
lds
mov
sub
push
stos
xchg
daa
mov
lods
push
xchg
test
push
push
jns
arpl
enter
or
mul
push
fwait
and
inc
xor
inc
cwtl
and
fsub
sbb
je
add
test
lret
loopnew
cld
add
add
inc
addr16
mov
scas
inc
xchg
mulb
lods
or
or
or
incb
movsl
test
inc
sbb
insl
push
or
jne
lods
loopne
sbb
sbb
jcxz
push
lds
fldt
in
jecxz
popl
fsts
fisttps
inc
dec
sbb
push
pop
mov
mov
fiaddl
jb
ret
push
or
xchg
shll
sbb
sahf
loop
ljmp
sbb
nop
sti
and
adc
loope
js
mov
hlt
xor
xor
xchg
mov
sbb
popa
mov
sub
sbb
mov
mov
dec
movsb
and
or
and
movsl
xor
popfw
popl
sbb
push
stos
data16
sub
imul
sbb
jne
mov
jo
mov
cwtl
jl
jns
andl
push
mov
dec
xorb
hlt
and
sbb
push
pop
sub
nop
stc
pop
dec
call
or
out
mov
cmpb
adc
mov
fidivl
inc
jns
cld
in
clc
mov
pop
cwtl
pop
jle
cmpsl
mov
mov
push
mov
mov
jmp
je
mov
addr16
sbb
dec
cmc
addl
lea
inc
mov
std
inc
rcr
mov
jae
add
mov
xchg
repnz
stos
push
sbb
pop
pop
fiaddl
inc
mov
inc
sub
jb
mov
popl
lds
outsl
test
decb
jbe
shll
pop
dec
ja
sahf
out
lcall
cmp
pop
xor
or
ljmp
inc
cmp
add
cmc
movsl
xchg
adc
pushf
push
daa
and
jae
or
stos
jecxz
mov
imul
inc
xchg
fld
mov
jne
xor
shll
sahf
mov
decb
lock
mov
jp
test
ds
xor
xchg
lcall
js
push
icebp
loope
mov
leave
mov
bound
adc
stos
data16
shrb
shlb
insb
jno
cmp
jb
clc
inc
lods
xor
bound
mov
stos
inc
mov
dec
xchg
lret
lcall
jp
dec
fstl
jl
testl
pop
popf
and
jg
mov
in
push
inc
je
hlt
test
insl
add
pop
stc
xor
sub
test
insl
outsl
lock
xlat
pop
lret
imul
das
fnstenv
test
filds
inc
mov
dec
xchg
push
hlt
gs
pop
mov
movsl
push
push
mov
adc
in
fldcw
test
in
loopne
aad
push
rcrb
fisttps
cmp
ret
xchg
mov
jg
push
ficoml
movsl
ret
sbb
out
mov
push
fildll
xor
and
jge
jne
sub
adcb
orl
movsl
shlb
ja
xchg
jno
dec
int3
fcoml
push
ret
ret
xorb
sub
sbb
je
dec
adc
sub
xor
out
push
cmp
pop
adc
and
mov
jmp
insl
jp
and
xchg
mov
add
fisttpll
imulb
sbb
mov
inc
sti
out
sbb
and
js
xchg
push
push
inc
pusha
adc
jmp
xchg
incb
lods
insb
sub
nop
or
adc
in
jle
jmp
mov
rcrb
lods
mov
inc
aam
scas
mov
inc
stc
fcompl
pop
xor
push
outsb
adc
cmpsb
outsb
ljmp
mov
and
scas
shr
icebp
fdivrs
enter
nop
sub
adc
popf
cwtl
fdivs
xchg
ljmp
mov
dec
mov
cld
out
sub
int
sarb
and
pop
add
les
es
cmp
push
mov
sti
loope
dec
sbb
push
shrb
arpl
fstl
fbld
jp
mov
xor
enter
stc
mov
mov
xchg
gs
lahf
adc
hlt
dec
jb
leave
xor
sti
dec
shll
add
mov
mov
ljmp
loopne
nop
insl
inc
dec
mov
arpl
in
jmp
stos
cmp
loopne
into
imul
add
jb
notl
jmp
sbb
xor
outsl
cltd
push
dec
sub
inc
adc
repnz
sbb
cltd
pushl
push
cmpl
outsb
mov
mov
gs
and
xor
in
mov
jae
popa
inc
or
stos
or
lcall
mov
cmpsb
stc
sbb
pop
in
sti
adc
mov
push
or
dec
pop
pop
push
xchg
jp
addr16
iret
ss
or
inc
inc
jle
push
loope
add
jns
divb
inc
sbb
jb
mov
pop
in
fsub
cltd
sbb
pop
inc
inc
inc
inc
pop
add
adc
aam
mov
cs
pop
or
mov
add
addr16
or
mov
cmp
xor
cmp
gs
jge
ss
inc
mov
cmc
arpl
push
insb
cmc
data16
jnp
mov
movsb
sbbl
push
inc
xor
push
jmp
add
dec
pop
test
imul
dec
filds
sbb
inc
inc
es
push
jnp
sbb
pushf
leave
xchg
add
cmc
push
jbe
push
dec
xor
pop
es
int
push
test
dec
push
pop
inc
int
pop
mov
das
dec
ficoms
sbb
les
daa
icebp
mov
push
dec
lods
push
faddl
or
mov
fstpt
jmp
popf
and
leave
pushf
add
sbb
rcll
out
test
or
jmp
es
xchg
jecxz
insb
rcl
std
sarl
sub
enter
push
ds
pop
and
ret
ljmp
sbb
cmp
data16
insb
lods
mov
rolb
fwait
ja
ja
pop
ds
cmc
lods
and
notb
xor
ja
aam
xchg
mov
enter
sbb
sub
nop
popf
push
loop
sbb
sub
mov
mov
adc
mov
pop
xor
outsb
lret
leave
cwtl
cmp
sub
bound
andl
frstor
inc
movsl
cmp
push
mov
lods
mov
or
or
push
jge
icebp
fisttpll
mov
xchg
aaa
lock
pop
add
and
mov
insl
idivl
out
lcall
nop
sub
les
push
daa
divb
sub
lods
fcoml
adc
jbe
lea
hlt
inc
leave
icebp
mov
pop
flds
sbb
xchg
cmovs
cwtl
and
sub
mov
jmp
xchg
mov
int3
rcrw
scas
pop
in
outsb
test
add
mov
mov
movsl
and
jge
cmc
lcall
cmp
or
pushf
cmc
fidivrl
shl
jno
or
std
adc
jp
push
or
jae
cmp
or
lock
shlb
imul
or
mov
cmp
or
mov
fwait
das
fimuls
scas
push
and
and
mov
pop
ljmp
add
jmp
push
gs
in
xor
inc
inc
cmpsl
vandps
and
insb
fnstenv
adc
in
xchg
xchg
pop
cmp
outsb
add
add
orb
sti
in
push
das
inc
add
movsb
loopne
xchg
mov
mov
push
into
test
pop
mov
pop
push
lret
sub
ljmp
sub
pop
inc
dec
fcomi
xor
cmp
and
in
jecxz
in
lods
bound
out
hlt
aam
xor
sarb
mov
sbb
jg
dec
inc
ret
fcmovnb
fnsave
lods
ja
test
in
negb
mov
adc
or
mov
push
popf
and
aam
adc
cmp
clc
sbb
jmp
mov
movsl
lock
iret
push
ret
sahf
repz
fwait
add
adc
sub
std
mov
sub
sbb
testb
and
lods
mov
ror
dec
aad
xor
sub
shll
and
lea
jg
sti
dec
lcall
cmpsl
ds
jae
push
xchg
mov
imulb
jp
stc
push
test
icebp
mov
xor
jo
out
loope
dec
sub
enter
test
push
mov
pop
mov
pop
add
and
ds
loope
das
cmp
addl
sahf
or
pop
stos
test
movsl
sub
inc
mov
xorl
fcomps
cmp
mov
xor
test
cmp
scas
and
sbb
pop
cmp
push
jl
xchg
cltd
jb
mov
int3
jmp
out
out
rdmsr
dec
jmp
cmp
and
inc
sbb
rorl
xchg
cmp
sarl
inc
inc
push
sarb
incl
and
mov
pop
inc
sub
pop
outsl
subb
mov
xchg
icebp
js
scas
mov
push
push
push
add
xchg
inc
jae
jnp
pop
pop
push
pushf
jmp
cmc
imul
pop
nop
jns
jg
rorl
push
mov
test
mov
shlb
xchg
sbb
outsl
dec
dec
or
mull
cmc
lock
aas
testb
cli
aas
out
cmp
lret
sbb
mov
movq
icebp
add
adc
cmp
popa
sub
or
pop
sbb
fldcw
push
cmpsb
int
popf
xchg
cmp
cmpb
mov
pop
jae
push
or
fcomps
xor
pop
nop
mov
and
ja
aas
pop
pop
lret
out
clc
pop
inc
js
pusha
push
lods
and
test
ds
repz
add
cs
sub
sub
lock
std
rorl
ja
jl
and
sbb
dec
inc
orb
xor
mov
push
dec
imul
lahf
sbb
lds
cmpsl
mov
cltd
cmp
or
lcall
pop
lods
mov
add
insl
js
ljmp
jno
ljmp
and
or
push
iret
and
clc
out
sahf
fs
pop
pop
scas
test
rorb
cmp
call
icebp
movsl
mov
sbb
andb
push
push
xchg
lods
aam
push
inc
add
push
ret
cmpsl
mov
imul
divb
ret
loop,pn
mov
cmp
jae
fcompl
ror
cmpl
mov
pop
pop
inc
adc
cmp
adc
jecxz
inc
jge
fldl
xchg
in
add
inc
sbb
xchg
jmp
xchg
mov
cmpsb
xor
or
movsb
mov
dec
mov
fincstp
inc
pop
xchg
int3
pop
xchg
jne
das
mov
jne
inc
xor
and
cmc
ret
add
mov
lea
int
sbb
jo
mov
jnp
jo
inc
test
lea
push
ret
andb
insl
ds
and
or
imul
or
data16
into
mov
imul
shlb
dec
mulb
jge
cmpsl
test
stos
dec
loopne
leave
addb
mov
aas
iret
xor
imulb
sbb
jl
call
xchg
mov
loopne
and
xchg
xor
jl
inc
sub
scas
add
aad
dec
stc
push
aam
and
cmp
inc
xor
pop
xor
rol
push
sub
pop
and
aas
adc
jg
mov
mov
pop
cld
fdiv
test
jl
push
sub
mov
xor
out
popf
fwait
mov
inc
jns
xchg
pop
add
add
call
push
pop
test
pop
inc
sbb
popf
push
cmpsb
dec
fidivrl
mov
jecxz
daa
jl
xchg
or
inc
mov
test
add
fistpl
add
int3
inc
dec
cld
lahf
hlt
out
repnz
cmp
movsb
sarb
sub
jns
test
xor
fwait
mov
or
test
das
insl
mov
lock
sar
jle
clc
inc
out
daa
sarl
add
jl
negl
pop
adc
lods
test
pusha
aam
into
rcrb
jne,pn
push
dec
movsb
scas
leavew
adc
out
xchg
stos
or
dec
lds
aaa
icebp
mov
clc
cmp
xchg
mov
xor
sbb
mov
and
sahf
sub
sbb
jae
testl
mov
fiaddl
cmp
inc
cmc
cmp
sbb
lods
pop
std
fldl
js
ds
lods
das
shlb
popa
adc
and
sub
sbb
add
mov
stos
lods
dec
ds
xor
and
mov
sbb
sub
inc
mov
testb
fnstcw
mov
jle
in
push
dec
cltd
test
jnp
push
jle
into
or
aam
cmp
xchg
cmp
out
scas
cmp
loopne
jecxz
mov
das
jp
leave
adc
dec
cmp
mov
or
sbb
dec
add
sub
dec
mov
cmp
js
lds
and
in
outsl
aam
push
stos
pop
push
sbb
cmp
push
mov
sbb
mov
adc
shrb
fmuls
sbb
pop
xchg
mov
lahf
sbb
or
pop
in
movsb
cmp
aam
push
mov
cmp
test
pop
in
push
push
or
jno
stos
jle
and
jecxz
js
mov
cmp
mov
adc
cmpsl
xchg
and
fidivs
dec
lret
fidivrl
pop
movsl
inc
popa
xchg
clc
rolb
insb
outsl
sbb
pop
rol
movsl
push
mov
inc
nop
or
int3
addr16
stc
push
mov
cltd
daa
pop
add
leave
mov
dec
pop
xor
cs
inc
pop
outsl
fisttpl
add
out
dec
pop
scas
pop
mov
mov
fcoml
js
orb
mov
sub
inc
adc
sarl
in
roll
iret
mov
dec
iret
mov
inc
mov
and
idiv
test
sbb
jmp
movsb
inc
jecxz
sbb
clc
les
adc
adc
sub
adc
sub
jmp
insl
cmp
xchg
out
loope
movsl
ljmp
lcall
int3
push
cltd
adc
push
loope
cmpsl
lods
mov
jno
dec
add
cmp
into
add
pusha
add
add
push
addb
mov
mov
mov
call
pop
mov
jecxz
adc
mov
in
test
cmp
sbb
xor
push
je
inc
inc
add
or
mov
aas
mov
loop
or
jle
lret
adc
ror
push
xchg
sub
jns
int3
xor
movl
lret
sahf
dec
lea
enter
add
ljmp
and
sub
shlb
test
mov
pop
in
movsl
nop
aaa
enter
push
cmc
hlt
js
popf
fnstcw
sar
mov
push
repnz
xor
mov
addr16
pop
lds
add
mov
fldenv
ss
icebp
or
sub
mov
test
in
pop
xchg
insl
push
rcrb
push
mov
lahf
cs
shrb
out
pop
or
jle
xchg
cli
push
das
cltd
gs
inc
shlb
mov
cmpsb
mov
lahf
push
ret
cwtl
sub
add
mov
rcll
jae
cs
sbb
and
sub
call
pusha
jo
mov
cmpsl
sub
xor
jae
jne
lahf
push
mov
movsb
push
nop
push
cltd
and
cmp
loopne
scas
sub
dec
test
loop
jle
mov
push
mov
dec
repnz
sbb
mov
shl
xchg
das
shlb
shl
scas
call
inc
filds
shr
push
and
cmp
push
mov
aas
xchg
mov
and
out
xlat
imul
dec
fcomi
jae
das
fmull
jge
xor
dec
dec
outsb
and
pop
aam
in
shlb
add
xchg
xchg
xchg
flds
mov
push
mov
inc
lock
dec
ljmp
fs
cld
repz
push
mul
jnp,pn
imul
mov
test
xor
cs
lret
loop
jl
sub
push
shll
popf
jns
jnp
stos
dec
fldenv
les
and
bound
test
mov
xor
pop
fbld
fdivrs
sbb
aaa
push
dec
lds
push
outsl
jo
jnp
dec
out
dec
mov
sbb
out
stos
fwait
ret
mov
divb
sub
dec
dec
jmp
cli
sub
cmpsb
jmp
jg
test
xchg
inc
lret
loopne
or
movsb
add
fcmovb
sbb
dec
andnps
aas
sbb
js
mov
cmc
movsl
pop
cmp
jo
shlb
xchg
sbb
pop
and
repz
sbb
popw
xchg
push
sbb
mov
mov
ja
leave
sbb
or
movsl
rcll
dec
shlb
cmc
clc
jae
fisttpl
std
lahf
sub
pop
lds
jnp
xchg
rcrb
xchg
movsl
pop
in
repz
dec
js
pop
adc
sub
cs
pop
cmp
inc
adc
inc
sub
mov
sub
xchg
or
sub
adc
loop
ret
into
jecxz
call
push
xchg
cld
pop
pop
lods
push
ret
xor
pop
iret
cmp
sub
jmp
popl
inc
outsb
test
enter
bound
bound
cli
xor
add
in
sbb
jo
nopl
daa
outsb
jg
push
inc
adc
dec
lcall
xchg
sub
jge
pusha
sbbb
in
sub
iret
adc
adc
cli
add
das
sbb
jns
inc
jo
mov
and
mov
nop
push
mov
adc
call
add
into
xor
loopne
cltd
enter
ja
loope
movsb
dec
lock
mov
in
dec
sub
cmp
jns
mov
inc
test
push
flds
ret
js
arpl
pop
icebp
sub
imul
xchg
lock
scas
push
mov
inc
test
imul
fldl
xor
iret
jle
xchg
fsubrl
pop
pop
outsb
lcall
or
dec
leave
jnp
adc
cmc
fs
sbb
lea
rorl
lcall
jmp
cmp
push
push
push
stc
add
and
push
imul
pop
inc
and
pushf
imul
shrl
xchg
in
imul
imull
push
jmp
mov
adc
ret
hlt
les
pop
sbb
iret
jge
pop
and
mov
jbe
push
adc
out
add
sti
fsubl
inc
cmc
dec
dec
jge
lcall
popf
stos
pusha
jno
sti
adc
rol
sbb
fistl
push
sbb
repz
xor
lds
jmp
inc
aad
cmp
insl
aam
or
sarb
mov
test
adc
add
into
adc
push
cli
or
ljmp
jmp
divl
jg
imul
inc
push
add
aaa
cmp
arpl
adc
push
mov
je
adc
sub
pushf
ret
xchg
jbe
pop
imul
mov
xor
movsb
das
xor
rorb
jbe
loopne
adc
out
xchg
cltd
inc
iret
call
cld
jmp
subb
test
test
leave
pop
inc
test
cmp
loopne
jle
scas
or
xchg
nop
jnp
movsl
mov
add
jno
lock
sub
add
cmpsb
or
xor
jecxz
imul
adc
in
sub
out
add
cmpsb
rcl
and
jno
mov
mov
in
inc
sub
mov
repnz
jne
sbb
or
pop
pop
mov
mov
sub
rcrb
out
in
adc
xchg
mov
push
sub
mov
xor
dec
push
push
jle
pop
test
dec
movsl
fcmovnbe
adc
xor
push
ret
loop
mulb
ss
lret
int3
pop
movsl
xchg
pop
stos
and
push
adc
or
jae
inc
das
aam
jmp
call
aas
data16
ja
dec
test
add
imul
aas
lret
jge
adc
gs
gs
sti
enter
aad
aam
aaa
add
mov
sub
fwait
insl
test
int3
pop
mov
jg
xchg
insb
mov
mov
sbb
inc
adc
lods
inc
mov
ret
push
add
adc
cmp
inc
mov
enter
inc
sbb
and
insl
test
test
or
arpl
test
xor
pop
pop
scas
aaa
dec
loopne
mov
inc
mov
jecxz
pop
dec
xor
shll
xchg
ds
xchg
xor
mov
test
filds
pushf
mov
iret
push
sti
xor
outsl
xlat
mov
xchg
adc
ret
adc
or
adc
les
pop
push
mov
fsts
lret
cmc
mov
loopne
pop
xchg
pop
andl
shll
outsb
push
shlb
sahf
cmc
in
xchg
or
fxch
adc
and
mov
dec
cmp
popf
shl
jnp
or
mov
push
enter
jg
or
loopne
xor
jle
sub
jp
adc
cs
fsubs
jecxz
lea
lahf
mov
sub
mov
cmp
jmp
stc
aam
sahf
lret
and
stc
sbb
mov
ljmp
or
test
xor
insb
pop
aaa
mov
out
cmp
dec
jnp
rorb
cwtl
and
outsl
push
jae
xchg
les
fbstp
pushf
lret
adc
adc
mov
mov
add
jbe
add
or
stos
out
cltd
jg
and
sti
pop
daa
shl
std
das
aaa
sub
stos
arpl
arpl
adc
test
or
cmpsl
jno
jae
pop
fldenv
xor
ficomps
es
push
jg
dec
cld
shlb
outsb
pop
jo
int3
push
dec
stc
lret
aaa
add
cmp
aaa
adc
dec
sub
out
sub
adc
test
push
push
xchg
pop
jge
cmpsl
adc
jae
cmc
and
dec
dec
les
sub
testb
push
outsb
shrb
shll
cmp
sbb
sbb
jns
das
lock
and
push
push
push
and
inc
cmp
mov
lock
ljmp
gs
mov
dec
test
jle
adc
les
shrb
lcall
pop
push
imul
repnz
shrl
jnp
mov
ljmp
das
in
sub
dec
dec
mov
push
ret
repz
test
mov
pop
push
sub
mov
movsb
testl
mov
mov
int
out
lods
sub
mov
mov
mov
shlb
xchg
xlat
push
sub
enter
fisubrl
sbb
mov
and
mov
jge
push
adcl
inc
lods
test
mov
add
fstpl
lock
push
repz
enter
dec
loop
inc
pop
lret
scas
sub
fdivl
and
jb
pop
pop
clc
cmp
fdivrs
test
and
and
das
or
shlb
push
adc
incb
mov
subl
hlt
int3
xor
xchg
dec
mov
dec
imul
sub
sbb
add
lcall
leave
mov
lods
xor
hlt
push
sub
xor
inc
aaa
into
test
das
data16
nop
sbb
lret
or
mov
mov
mov
push
enter
mov
aam
mov
lret
stc
jl
std
jmp
cmp
add
sub
fmuls
xor
test
dec
or
cmc
fs
lds
sbb
test
repnz
or
out
push
add
jne
icebp
and
pusha
lahf
add
sbb
sub
lds
mov
je,pt
xlat
sbb
inc
sbb
and
and
lcall
leave
mov
loopne
repnz
or
mov
push
jl
inc
insb
mov
mov
loop
into
pop
enter
andb
sub
pop
imul
lcall
int
iret
in
jo
sbb
pushf
loop
ret
pop
popf
jne
sub
add
push
add
mov
sub
in
jp
pop
and
ficoml
sub
pop
gs
dec
sahf
bnd
mov
mov
roll
je
xchg
rolb
test
jnp
adc
add
or
cmp
adc
les
dec
and
inc
cmp
inc
fsubl
ret
xchg
loope
sub
adc
mov
jne
mov
inc
adc
imul
nop
jmp
xchg
fdivrl
xchg
jl
out
and
in
jno
mov
daa
sub
cmpsl
pop
shrb
scas
inc
jge
adc
leave
jae
stos
push
outsl
add
xchg
lods
pushf
cmp
cmp
lea
dec
sub
sub
ja
std
xchg
push
jbe
push
adc
test
rcr
int
pop
and
aaa
icebp
push
decb
pop
cld
mov
push
inc
data16
movsl
dec
mov
aas
stos
lcall
cltd
xchg
mov
lods
xor
pusha
pusha
or
nop
inc
xor
in
pop
pop
das
addr16
cmp
pop
dec
pop
push
inc
xor
mov
and
divb
subb
lret
pop
xchg
cmp
loopne
jge
fisubrs
xchg
aaa
arpl
xchg
cmpl
icebp
int3
idivl
lret
add
mov
sbb
inc
mov
inc
repnz
clc
arpl
adc
les
lods
jbe
pop
aad
cli
xor
mov
dec
popa
leave
adc
sbb
fidivl
imul
in
push
sbbl
mov
dec
mov
scas
jg
popf
jb
pop
and
ja
sbb
rolb
cmp
or
aad
xor
in
movsl
inc
aam
dec
in
repnz
jns
stos
jmp
test
xlat
jle
loopne
mov
nop
and
pop
jb
mov
push
filds
xor
int3
xchg
push
inc
mov
mov
pop
clc
xchg
adc
in
ss
int
dec
leave
mov
mov
sub
xor
inc
cmc
adc
push
lods
fstl
call
movsb
xor
outsb
pusha
mov
sub
pop
or
xchg
push
mov
inc
and
sbb
jne
testl
jb
int
leave
cmpl
out
subb
test
les
sub
sbb
pusha
push
bsr
out
fs
movsl
xchg
push
jp
rorb
jb
popa
scas
mov
in
sub
int
push
pop
sbb
jbe
cltd
leave
mov
jb
lret
out
fsts
push
loop
or
fisttpll
mov
popa
testb
pop
sbb
icebp
mov
cmp
pop
mov
pop
out
test
mov
xchg
dec
sti
mov
and
out
std
adc
imul
jle
lods
mov
movl
jge
mov
pop
xchg
dec
jne
je
in
mov
inc
in
or
fmull
push
lock
and
push
daa
fsubrs
or
pop
and
sbb
popa
call
ja
outsb
adc
out
mov
pushf
jo
sti
rcl
leave
fstl
mov
push
aam
mul
lods
push
outsl
sub
sub
enter
pop
out
xor
aaa
add
enter
pop
xor
aad
cmp
xchg
in
push
fistpl
lock
xor
pop
xchg
into
xchg
xlat
inc
rorl
lods
inc
movsb
or
ja
push
out
cld
mov
ljmp
or
jo
negl
or
jle
mov
xor
mov
js
jae
cmpsb
inc
xor
test
cltd
pop
xor
dec
sub
mov
into
rsm
rcll
and
test
mov
xor
inc
orl
out
jp
push
pop
jae
jge
mov
movsl
cs
xorl
pop
pop
movsb
or
jmp
and
sbb
xor
or
jne
cmpsb
cwtl
inc
es
pop
imul
push
cmp
cmp
lods
icebp
sahf
mov
sbb
ret
js
jne
jmp
subb
jmp
ljmp
aaa
repnz
imul
enter
negl
fwait
dec
sar
dec
cmp
aas
inc
lods
sub
inc
fnstenv
mov
jmp
sbb
sbb
in
sbb
stos
jecxz
stc
add
sub
push
mov
cmp
lods
adc
push
xchg
hlt
test
out
lock
scas
sbb
in
or
stos
jge
push
fsubs
cmp
sub
push
inc
mov
cmp
adc
xor
sbb
mov
jp
popf
mov
int3
into
mov
push
insb
jae
dec
lods
ficomps
and
jbe
push
sbb
pop
push
outsl
pop
ret
test
ret
pop
mov
les
push
cld
sar
loopne
fldcw
and
pop
test
or
mov
fadds
push
xlat
dec
es
mov
xchg
pushf
popa
addr16
mov
loop
inc
xchg
and
push
lods
jl
jb
mov
out
scas
adc
mov
leave
aad
pop
jmp
push
leave
test
mov
sbb
xor
ja
lret
outsl
adc
cmp
mov
into
in
mov
sub
and
and
cli
stos
neg
xchg
sub
shl
cmpl
pop
lods
cwtl
cmp
add
fstpt
xchg
and
jge
out
jp
aas
or
jns
rorl
out
faddl
out
out
es
adc
mov
jns
and
shrb
cmp
cmp
rcrb
or
add
and
sub
mov
xchg
and
scas
stos
pop
mov
mov
adc
dec
xor
xor
mov
inc
fs
xchg
lods
xor
rclb
movsb
pop
cmp
or
cmp
outsb
jo
push
inc
push
loope
sub
popf
jecxz
into
jmp
out
mov
push
aam
je
mov
xor
cmc
sbb
in
sbb
push
xchg
adc
insl
fistpll
outsl
cli
and
xor
xchg
arpl
mov
fwait
or
or
jg
xor
jae
xlat
out
cli
sbbl
fs
mov
ss
inc
or
sbbb
add
sarb
push
sbb
fstl
loop
mov
pop
fistps
loopne
enter
pop
cmpsb
in
out
mov
aas
dec
arpl
shr
mov
fwait
cmp
das
cmp
or
add
xchg
jecxz
testl
mov
mov
dec
push
or
repz
sub
and
loope
mov
sbb
push
fisubs
xchg
div
jb
cmpb
mov
fidivl
pop
jae
aaa
jmp
clc
xlat
push
pop
lahf
mov
or
lods
movsl
mov
mov
loopne
fwait
and
push
aad
mov
xor
cmp
outsl
dec
or
sti
mov
ret
mov
data16
sbb
adc
outsl
xor
and
fwait
inc
pop
and
xchg
es
ja
insl
xchg
shrb
mov
lds
popf
loop
testb
cld
and
sbb
mov
pop
lea
jno
fsubr
jg
scas
pop
mov
adc
inc
push
or
sahf
scas
insb
cwtl
xchg
push
sub
mov
mov
pop
sbb
clc
movsl
movsl
lret
pop
xorb
sbb
xlat
leave
push
pop
jns
adc
popw
pop
clc
sbb
rcll
ret
inc
push
sbb
inc
push
dec
fisubrl
xor
shr
cs
pop
int3
aad
dec
jge
cmp
mov
cmpsb
mov
inc
mov
mov
inc
xor
pusha
inc
popf
insl
add
jl
lods
iret
mov
add
push
push
test
dec
and
jg
jp
jns
dec
mov
xlat
xchg
sete
sbb
jl
push
sbb
mov
dec
jle
push
or
cmpsl
je
daa
fcom
shlb
loopne
push
and
pop
loop
push
sarl
es
push
lret
testl
push
shll
xchg
movsb
mov
insl
mov
xor
mov
xchg
xchg
xchg
call
aad
test
dec
inc
cltd
daa
jbe
in
mov
imul
lock
fisubrl
testl
repnz
xchg
outsl
mov
jge
or
push
xor
push
jge
jecxz
mull
lret
test
and
adc
mov
add
in
aad
icebp
and
dec
outsb
fildl
and
fisubl
jno
add
outsb
int3
outsb
xor
add
sahf
shlb
incb
inc
and
frstor
cmpsl
xor
add
repnz
xchg
fnsave
scas
push
or
pop
or
xchg
ja
andb
jl
jns
add
call
movsb
and
sub
pop
test
daa
lea
arpl
ret
int3
adc
fbld
or
pop
dec
shrl
and
cs
lret
add
mov
in
rcl
pop
inc
cmp
mov
or
loopne
rorb
lahf
andl
jl
loop
pop
shl
fs
ss
cmp
jno
out
mov
sub
dec
cmp
jns
in
stos
movsl
push
fbld
mov
dec
shl
or
into
sbb
cld
ja
xor
sub
push
sbb
lret
testl
pop
xchg
les
xor
dec
inc
lea
aas
mov
stos
and
xchg
int
mov
mov
mov
out
jo
xchg
xchg
sub
stos
jge
sbb
push
push
movsb
outsb
cmp
xor
js
movsl
add
in
push
insl
shlb
mov
jg
mov
xchg
jo
sbb
dec
and
lret
add
aas
div
mov
es
sub
mov
jle
loope
fiadds
popf
mov
mov
pushf
mov
mov
leave
orb
scas
sti
cmpsl
inc
cmp
push
fcmovb
lds
jge
sub
jnp
ljmp
cmp
out
inc
jp
sbb
lock
xor
mov
fwait
testl
jmp
subl
imul
out
test
dec
mov
xchg
xchg
in
scas
sub
mov
mov
dec
xor
mov
push
cwtl
mov
mov
loop
or
repz
pusha
push
mov
mov
inc
jb
push
jmp
outsl
push
or
inc
fsts
dec
inc
push
rcll
mov
xor
aam
negb
cli
mov
insl
insl
test
or
popa
out
xchg
xchg
xor
pop
pop
sbb
sbb
add
inc
push
out
and
outsl
xchg
mov
xor
xchg
mov
and
sarl
lsl
mov
clc
lods
std
push
mov
adc
fcmovbe
adc
mov
fwait
pusha
andb
jmpw
and
inc
es
out
shll
adc
das
lcall
cmp
fnstcw
ret
aad
adc
ja
je
xor
inc
je
dec
mov
lret
mov
in
dec
out
shl
in
imul
loope
int3
leave
fwait
scas
aas
testl
fdivp
xor
aam
lea
test
mov
push
inc
xchg
adc
ljmp
out
out
mov
sbb
jae
push
ss
ja
movsb
jno
jne
pop
test
int
lcall
inc
fsubr
jne
and
repnz
xchg
mov
stos
mov
adc
ret
popf
jg
dec
inc
pop
stos
daa
or
add
leave
outsl
fsub
jb
js
jnp
test
inc
es
loope
and
add
jb
loope
out
sbb
sub
fsts
or
out
adcb
xor
ficompl
adc
popf
sub
ss
push
adc
adc
mov
mov
outsb
aas
jo
or
xchg
loop
cs
test
mov
outsl
sub
and
push
popf
test
sbb
ljmp
lret
xor
jo
sbb
dec
pushf
rcrb
out
inc
lds
lahf
rorb
in
and
fdivrs
jle
aam
jb
rolb
lods
das
dec
cmp
cmp
loope,pt
icebp
inc
subl
sbb
inc
xchg
push
aas
push
aaa
push
pop
add
test
dec
sahf
imul
pop
shl
fnstenv
push
cwtl
mov
jne
sub
push
jl
addr16
push
cld
mov
shlb
push
cmp
fsubp
mov
sub
mov
adc
mov
je
sbb
popf
inc
mov
xor
and
inc
int
and
pop
push
pop
or
shl
in
fmull
out
fcmovu
sub
mov
mov
xor
dec
sti
adc
jo
dec
in
push
jne
jle
mov
xchg
orb
mov
inc
hlt
ljmp
inc
jecxz
xchg
xchg
int
push
xlat
pop
imul
cmpl
popf
xchg
les
ret
iret
pop
sub
popa
lret
adc
jge
sub
push
add
lock
mov
mov
imul
pusha
negb
es
pop
xorl
ljmp
xchg
pop
push
cwtl
lahf
jbe
mov
sub
sbb
xor
out
repz
icebp
add
mov
sbb
sbb
pop
add
mov
sbb
and
pop
idivb
mov
roll
js
das
sbb
or
sahf
jecxz
pusha
iret
xor
add
jle
stos
lahf
ja
fisttpl
test
push
xchg
aad
ds
addr16
cmp
jne
data16
pusha
jns
cmp
mov
loope
jne
pop
mov
outsl
fimull
add
imul
shrb
out
adc
push
and
hlt
adcl
sbb
push
adc
sub
push
sub
fmulp
mov
xchg
scas
or
lock
test
pushf
movsl
loopne
loopne
mov
push
addr16
mov
ret
out
mov
inc
push
jmp
mov
or
dec
mov
cmp
sbb
pop
shr
mov
fldt
jp
mov
push
loop
int3
int3
ja
fldcw
mov
jmp
mov
mov
rol
outsl
xchg
cmp
cwtl
scas
scas
jge
in
pop
fidivrl
mov
out
das
pop
aas
daa
cmp
dec
scas
hlt
sarb
cmp
jbe
lds
and
inc
mov
sbb
add
shrl
push
xor
ret
mov
pop
out
cmp
ror
rcrb
pop
xchg
mov
jbe
in
adc
adc
cmp
add
sub
test
nop
jns
sub
popa
cmpsb
nop
mov
jp
lcall
xchg
jb
bound
xor
pusha
jns
rorb
inc
mov
test
nop
sahf
cmp
mov
in
inc
sbb
lds
pushf
pop
nop
mov
adc
and
dec
cmp
stos
in
xor
xchg
push
cld
lret
cmp
push
mov
sbbb
mov
sub
rcr
pop
dec
pop
movsl
es
dec
cltd
push
sbb
cmp
dec
ja
and
and
adc
addb
sub
pop
mov
sub
out
inc
cmp
sbb
aad
pop
jns
xchg
push
mov
fwait
xchg
addr16
xchg
mov
push
pop
jo
mov
clc
orb
std
add
lret
jecxz
mov
add
jo
cli
mov
movsb
fisubrl
mov
jno
std
cli
cwtl
sbb
divb
loopne
mov
xor
inc
cwtl
std
out
mov
adc
inc
jecxz
in
insb
jns
dec
mov
cmp
sbb
dec
adc
ficomps
push
fidivrl
hlt
xchg
pop
cwtl
test
push
ja
mov
mov
sub
cmp
mov
and
adc
loopne
dec
push
xor
shr
add
testl
mov
xchg
push
xchg
lds
and
int3
cmp
jo
push
movsl
pop
xchg
rcrl
xchg
pop
jmp
push
mov
pop
xchg
aas
xor
pop
ficompl
repz
inc
cld
sub
fiaddl
scas
sti
and
push
and
test
shlb
insb
add
jo
or
repnz
push
ror
fwait
and
push
or
pusha
or
lret
jns
fdivs
imul
xchg
push
call
lret
popa
pushf
dec
jnp
inc
add
rep
push
lret
cmp
cs
sbb
inc
xchg
or
mov
es
jl
cmpsb
cld
xchg
pop
shlb
loopne
inc
mov
popf
aam
push
sbb
add
adc
rcrl
negb
out
insl
mov
sub
stc
mov
jl
dec
pop
mov
cmp
pop
in
daa
cmp
sub
cs
push
or
mov
cmpsl
in
outsb
mov
in
out
aad
cmp
fs
cmp
std
dec
and
hlt
outsl
jbe
sub
jge
push
push
xor
cmp
adc
and
icebp
mov
xor
mov
and
fwait
mov
adcl
jl
ljmp
rclb
pop
sbb
jae
xchg
test
pushf
out
adc
cwtl
dec
xor
sub
cmc
fbstp
mov
shll
or
movsl
test
mov
lahf
pop
jg
outsl
and
cmc
cmc
outsb
aam
mov
loopne
negl
cmpsl
aad
pop
inc
mov
push
pop
mov
cwtl
xor
js
mov
mov
pop
sub
inc
fdivl
xchg
push
mov
popf
fstpt
cmp
mov
mov
div
pop
xchg
cmp
pop
mov
lcall
push
adc
push
push
mov
ud1
jne
mov
mov
and
insl
cwtl
movsl
clc
adc
shlb
and
inc
add
int
ja
fsubrs
loop
xchg
mov
or
sub
push
sti
xorb
fiadds
ljmp
pop
add
push
and
inc
inc
fcoms
inc
inc
push
pusha
stos
xor
je
cmc
fucomip
popa
add
and
test
cmp
je
das
dec
loop
sbb
pop
gs
test
cmc
add
scas
sbb
lea
loop
jle
sbb
push
jg
mov
sub
sbb
inc
lock
movsl
fcom
sar
arpl
lret
pop
or
adc
or
sbb
fs
push
pop
orb
outsl
jno
popa
mov
or
fwait
xor
iret
push
add
data16
loope
cmp
jne
jne
fwait
push
mov
mov
out
cltd
imul
loopne
pop
icebp
es
mov
mov
test
out
jle
jne
dec
arpl
and
mov
jno
dec
adc
icebp
cmp
xor
in
jmp
ret
sahf
jp
roll
sbb
jge
jne
jo
inc
loop
push
scas
add
fistl
test
xlat
int
xchg
sbb
aam
ret
mov
pop
cli
leave
dec
pop
out
mov
xor
fcoml
and
ret
dec
cmpsb
filds
mov
inc
daa
jns
pop
xor
inc
or
jb
inc
jb
enter
ficompl
and
inc
add
dec
inc
ret
inc
scas
or
sbb
dec
mov
inc
inc
dec
xor
es
pushf
mov
repnz
jl
in
push
jno
xlat
xor
mov
mov
aad
sarl
cmpsb
popf
cmp
cld
andl
in
xchg
jnp
or
jg
jl
add
xor
out
movsl
loop
sub
dec
imul
xor
sub
pop
jecxz
bound
addl
popa
hlt
pminsw
scas
cmp
add
mov
inc
jbe
xor
ud2
pop
pop
add
dec
fldt
leave
test
loope
aam
push
aad
push
jae
std
inc
xchg
xor
cmp
adc
cmp
add
xchg
mov
iret
aas
push
movb
daa
inc
xchg
dec
add
lret
xchg
daa
push
sbb
mov
outsl
ds
in
mov
inc
and
ja
nop
sub
jl
loopne
xchg
ficoml
outsb
sub
std
xchg
inc
jmp
sub
mov
outsb
loop
jae
sub
pop
popf
push
insb
adc
inc
push
sbb
xor
notb
repz
ret
mov
repz
or
sub
inc
ds
jmp
ds
sahf
subb
mov
xchg
xchg
push
mov
pop
add
ljmp
out
int
test
int3
jp
cmp
stos
mov
push
xchg
std
pop
pop
adc
sub
js
mov
lds
mov
jge
dec
clc
daa
xchg
xchg
in
clc
dec
mov
dec
fs
shrb
test
sub
inc
bswap
test
or
pop
es
jns
push
pop
test
sarl
inc
aaa
xchg
cltd
leave
cltd
and
inc
inc
lods
sub
pop
xchg
sti
xchg
je
sub
andl
dec
insb
pusha
adc
lahf
mov
movl
push
push
xor
imul
sub
cmpsb
rcr
inc
inc
xorl
mov
and
dec
stc
outsb
push
and
inc
push
lock
mov
mov
stos
in
sbb
das
jmp
dec
lea
cltd
mov
ds
mov
aad
test
lret
sub
shlb
mov
sahf
inc
sbb
dec
cmpsb
dec
stos
dec
xor
dec
rorl
mov
inc
cmpsb
in
adc
jmp
dec
fiadds
arpl
imul
scas
dec
inc
pushf
aas
stos
stos
test
js
sub
fs
mov
test
adc
and
pop
pop
push
cmc
jmp
push
pusha
int3
push
pop
sub
sub
add
dec
or
fwait
rorb
int
dec
xor
mov
pop
lea
mov
and
or
test
pop
and
lock
pop
test
popf
xchg
cltd
stos
jne
rclb
push
xchg
xor
inc
and
dec
sub
pop
scas
jns
xchg
push
aas
push
jle
adcl
fisttpl
fucomi
in
mov
xchg
sub
js
pushf
std
mov
lahf
outsl
int3
dec
mov
mov
push
push
add
push
mov
mov
in
xchg
push
push
aad
fbstp
data16
mov
xor
jge
sbb
mov
mov
inc
ljmp
rorb
lret
aaa
pop
jecxz
scas
mov
cmp
pop
or
roll
lret
fcoml
add
loop
cmc
inc
push
jae
loope
xchg
test
mov
add
jae
imul
jle
sbb
or
ja
and
fcmovnbe
xchg
or
test
dec
es
addl
out
jo
add
lds
mov
sub
sub
loopne
outsb
hlt
mov
les
addb
es
sarl
subps
icebp
sbb
add
je
push
icebp
cmp
lcall
mov
rorb
push
les
int3
mov
mov
std
adc
cmp
addr16
cmp
ds
icebp
in
adc
aam
mov
adc
inc
cmp
cmpsl
push
es
loope
add
mov
and
int
movsl
ret
mov
lcall
lods
cmpsb
sub
popw
test
ss
inc
push
insl
sub
movsb
and
xchg
adc
adc
mov
pusha
enter
addr16
xchg
push
cmpsb
mov
movsb
dec
pop
les
pop
dec
cmp
jg
sbb
fldl
sbb
add
mov
lret
outsb
and
lea
jbe
jle
xor
mov
imul
and
ss
iret
push
inc
adc
xor
fdivrs
repz
rcl
push
xchg
scas
and
mov
xchg
add
or
sbb
mov
jbe
loope
test
ljmp
cmp
enter
scas
pop
imul
inc
je
add
jne
fnstcw
fidivs
add
xor
mov
push
mov
mov
pop
push
lcall
push
cwtl
sbb
aas
push
adc
mov
mov
lods
mov
mov
mov
push
mov
add
rorl
sahf
movsl
sub
adcl
mov
les
cmc
les
push
insl
loopne
ja
xchg
ljmp
xorl
insb
cwtl
leave
inc
jnp
inc
cld
ss
inc
test
and
xchg
lods
rcrb
xor
mov
mov
fwait
and
pushf
pop
pop
fisttpll
and
jne
loopne
mov
cmp
sbb
pop
cmpsl
loope
pop
mov
adc
test
dec
jmp
out
outsb
cltd
sbb
es
lret
or
lea
les
imul
rcll
popa
dec
mov
aas
pop
jmp
je
arpl
mov
mov
lret
cwtl
and
negl
pop
push
push
ds
adc
cmc
shr
shll
scas
jecxz
dec
add
aas
adc
or
andb
mov
mov
pop
adc
push
pusha
mov
mov
mov
jge
lahf
mov
stos
fistpll
loopne
shll
out
xchg
inc
jne
fbstp
fmull
mov
in
mov
dec
in
cmp
push
enter
mov
bswap
xor
movsb
loope
xor
jl
jmp
ficoms
adc
out
dec
cmpsl
jmp
iret
xchg
and
mov
push
lahf
out
dec
das
or
pop
mov
push
xor
out
or
mov
outsl
in
add
test
jnp
gs
mov
jecxz
fs
pusha
mov
lret
jo
shrb
and
outsb
test
add
xor
int3
adc
movsl
and
jne
sub
jae
inc
rclb
jg
and
gs
imul
ljmp
jle
loopne
mov
in
mov
je
dec
inc
push
mov
mov
and
sbb
filds
call
cmpsb
inc
jp
cltd
mov
push
stos
clc
xchg
stos
aam
or
imul
pop
fildl
outsl
add
inc
std
ret
sub
mov
sbb
lock
jns
shll
scas
inc
xchg
movsl
xor
and
jmp
dec
sub
mov
lret
rolb
sbb
lret
adc
stos
pusha
negb
lret
ret
mov
jns
roll
into
or
daa
push
stos
push
xacquire
add
imul
lds
adc
jge
in
cmpsl
and
call
ficomps
ljmp
imul
mov
inc
ficomps
xlat
test
add
pusha
cmp
jmp
fbld
js
pop
js
mov
dec
movsb
xchg
cmp
sbb
or
movsb
call
out
add
push
cs
daa
xlat
cmp
fldl
xlat
ret
sbb
pop
loopne
dec
mov
sbb
test
sub
cmp
lods
loopne
mov
pop
lods
sahf
dec
imulb
sub
mov
fists
push
adc
cmp
in
outsb
sbbl
loopne
out
mov
add
or
and
int3
mov
pop
movsb
jmp
fdivrs
xchg
pushl
sbb
sbb
or
or
and
or
cmpsb
sub
iret
gs
xchg
rcrb
nop
xor
hlt
sub
inc
pushf
xchg
pushl
mov
js
shlb
call
jmp
cmc
add
rcrb
mov
dec
jmp
gs
mov
or
mov
dec
adc
lods
out
jl
and
mov
lsl
mov
icebp
stc
movsl
mov
imul
sub
ds
xor
cmp
xchg
int
insb
dec
pop
or
out
rclb
push
xchg
xchg
mov
cmp
sar
jge
inc
mov
or
btr
xchg
xor
xor
enter
mov
in
in
aas
out
aam
mov
pop
in
mov
das
push
inc
xchg
inc
mov
ja
or
popa
jecxz
mov
rcrb
iret
sub
ret
add
xchg
mov
add
dec
add
fistl
xor
jnp
dec
push
pusha
lea
jne
aam
fwait
ljmp
mov
popf
repz
sbb
ret
jb
lret
xchg
insb
data16
aad
mov
or
sub
lret
mov
mov
mov
shrl
movsb
add
test
mov
sbb
test
dec
jmp
cltd
jg
and
xor
nop
movsb
pop
or
mov
mov
cmpb
xor
or
dec
movsb
push
lea
dec
jl
lahf
xor
or
dec
mov
inc
xchg
sub
mov
popa
adc
out
sbb
push
enter
sbb
nop
gs
jp
in
pop
mov
pop
insl
es
in
and
cmp
sbb
and
pop
inc
ds
out
es
xchg
mov
fistps
test
mov
nop
mov
clc
xor
js
sub
sub
inc
arpl
clc
jns
in
mov
mov
adc
push
movsb
xchg
repz
jnp
push
mov
add
lcall
addr16
xor
push
push
into
test
lea
push
cmp
inc
mov
mov
imul
roll
pop
sbb
push
xchg
call
sbb
adcl
xchg
fldl
fnstenv
mov
cmp
xor
xorl
rclb
out
movsb
mov
cmp
xor
and
imul
aam
shr
add
dec
and
loop
and
iret
dec
adc
add
mov
inc
loop
push
loope
insl
jp
sbb
insl
cmc
cmp
mov
je
rorb
dec
out
imulb
add
or
loope
loope
xor
clc
push
mov
fdivrp
test
shlb
insl
inc
dec
fisubrs
mov
test
call
iret
bound
inc
xor
aam
cmp
lock
js
loope
mov
cmpsl
repnz
scas
addl
push
outsb
xorb
jp
mov
loope
push
jecxz
test
data16
jge
clc
and
int
or
pop
mov
mov
cmc
add
andb
xchg
jns
les
push
aad
jnp
test
stos
jae
add
cmp
sub
out
repnz
stc
cld
fbld
test
test
lret
pop
out
xchg
movsb
push
lret
mov
pop
pop
add
fisttpl
les
mov
andb
lret
mov
add
mov
mov
cmc
into
dec
dec
pop
out
push
ret
xor
repnz
mov
arpl
fucomip
inc
push
dec
loop
insb
movsl
arpl
sub
lods
dec
adc
fnstcw
repz
lea
sub
xor
cs
les
mov
inc
and
cmp
movsl
xor
pop
mov
adc
mov
and
repz
sbb
pop
shrb
sar
rcrb
sbb
and
push
sbb
insl
mov
mov
movb
mov
jge
pop
mov
pop
scas
shl
xor
mov
shlb
addb
jb
in
adc
push
xrelease
push
sahf
data16
insl
adc
add
and
dec
test
ja
dec
adc
fildl
mov
adc
cmp
shrl
jns
fists
push
ja
push
cmp
pop
mov
mov
aas
mov
jle
xchg
mov
mov
popa
rcrb
mov
int3
ds
jnp
xor
cmp
add
sub
cli
insb
imul
jecxz
clc
pop
push
test
aas
jb
mov
sbbb
popf
bound
mov
xor
inc
and
or
xor
cli
mov
out
sbb
clc
in
daa
out
sbb
daa
xor
stos
imul
dec
icebp
mov
stos
shll
sti
adc
mov
mov
fdivrl
sub
das
mov
hlt
jns
rclb
xor
fistps
jle
mov
dec
imul
fistps
adc
sbb
int
iret
loope
push
fwait
pop
imul
jg
inc
xor
ljmp
xchg
das
int
sahf
outsb
add
or
clc
jg
sbb
mov
xor
mov
mov
inc
int
xor
daa
pop
jp
jno
mov
xchg
outsb
adcb
ss
or
dec
das
fld
test
neg
pop
fiadds
movsl
mov
jo
popa
in
xchg
add
mov
mov
sbb
push
mov
xlat
and
and
pop
mov
les
push
repz
sbb
jecxz
mov
rolb
xor
mov
inc
jns
shlb
pop
mov
imulb
add
xchg
mov
jle
xchg
jae
lea
dec
mov
clc
adc
pusha
mov
or
dec
jl
xlat
pop
in
jp
in
divl
cltd
sar
mov
mov
xor
push
pop
xor
sbb
arpl
cmp
sbb
sbb
cmp
jecxz
scas
out
adc
int
push
sahf
out
and
push
stos
adc
mulps
dec
test
sbb
adc
loope
jle
sbb
and
jnp
jbe
orb
in
pop
cmc
pop
jno
jg
push
out
sbb
mov
xchg
addr16
out
addr16
aaa
cmp
sbb
adc
mov
pop
xchg
or
das
lods
mov
pusha
imul
push
dec
arpl
jnp
xchg
out
adc
arpl
xchg
aas
dec
insl
adc
dec
cmp
mov
mov
loopne
jne
mov
fcom
js
jp
cmpsb
loop
xor
int3
sbb
inc
sti
adc
movsl
sti
sahf
aam
imul
cmp
jbe
push
xlat
ret
arpl
jge
clc
sbb
mov
pusha
fcoml
movsb
pop
ret
ret
jge
leave
outsl
aaa
sub
idiv
and
or
jne
jnp
lahf
sahf
pop
xchg
pop
cld
scas
pusha
or
cmp
adc
mov
cmp
jmp
inc
outsl
loop
push
adc
imul
inc
mov
inc
jmp
mov
jp
cmp
push
aam
or
xor
les
inc
pop
sub
addr16
jle
fs
mov
and
mov
adc
add
sub
ds
dec
in
lret
xchg
adc
adc
out
cmp
cs
jnp
push
out
fldl
push
adc
out
movsb
lods
and
or
fimuls
and
xor
repz
push
cmp
or
inc
icebp
or
dec
or
pop
or
movsl
push
lods
xchg
cmp
cmp
dec
scas
pop
mov
xchg
mov
xchg
scas
outsb
pop
mov
push
pop
scas
std
jge
fildll
dec
int3
ljmp
sbb
pop
cmc
xchg
leave
sub
jecxz
cmc
or
push
adc
icebp
xchg
in
inc
das
pop
jns
inc
notb
jecxz
sub
lcall
dec
and
pop
test
cmp
lods
mov
dec
gs
mov
xchg
jg
pop
int
cld
das
push
scas
test
stc
pop
inc
fidivrs
inc
pop
adc
sbb
and
pop
js
fsubrp
jno
sub
mov
icebp
ret
xor
aas
pushf
push
xor
insl
pop
fadd
xor
enter
fmull
in
mov
or
cmp
push
daa
mov
repz
pop
dec
push
stos
into
pop
daa
xor
jl
xor
iret
sbb
cltd
int3
aaa
cli
jmp
cwtl
mov
repz
dec
and
jp
dec
push
and
add
xchg
pop
xlat
das
clc
mov
mov
fs
mov
aam
fxch
sbb
mov
push
loopne
mov
push
ljmp
xor
xor
test
gs
sbb
adc
mov
fs
les
inc
pop
insb
daa
dec
ja
sub
push
or
popa
out
bound
add
xchg
in
jmp
icebp
repnz
cmc
jmp
dec
inc
cmp
pusha
inc
cwtl
hlt
loopne
inc
stos
cmp
data16
in
mov
je
add
roll
lahf
adc
sbb
je
inc
mov
inc
jl
xchg
mov
jle
sbb
mov
call
push
xor
sub
jo
mov
imull
push
sbb
mov
adc
xchg
jns
bound
add
pop
stos
lret
or
ss
xlat
adc
fs
outsb
jecxz
xchg
adc
adc
loope
mov
stos
testb
xchg
outsb
fsubrl
pop
or
push
ret
or
lea
stc
nop
ljmp
dec
sbb
in
jbe
pusha
repz
push
push
scas
fidivrs
movsl
xchg
pushl
push
jne
stos
push
push
sub
repnz
js
push
push
std
xor
adc
xor
mov
and
inc
mov
jge
sub
cltd
fwait
sarb
xchg
jns
push
mov
mov
mov
jb
push
xchg
jecxz
fnstenv
and
sbb
push
add
and
dec
shl
jmp
jo
xor
and
rorb
hlt
and
push
xor
cmpsl
pop
imul
pop
daa
or
in
pushf
mov
imul
add
inc
xor
pop
shrb
or
xor
in
lahf
addr16
shrl
jecxz
dec
lods
pop
or
xchg
pop
outsb
mov
test
invd
int
ss
xchg
aam
adc
push
sub
xor
xor
xor
xchg
mov
cmp
les
inc
cmpsb
cli
mov
mov
jo
rolb
ja
jp
rcrl
enter
push
pop
pop
xchg
pop
xor
repz
or
cmp
imul
leave
push
std
mov
lods
cmpl
in
imul
pcmpgtw
out
call
xor
lock
sbb
mov
fnstenv
sbb
mov
lret
push
insl
jmp
dec
sub
dec
inc
sbb
lock
sub
xor
lret
mov
pop
xchg
inc
cltd
int3
sub
inc
cli
das
mov
std
sbb
add
cltd
stos
lret
pushf
inc
push
neg
popf
mov
ja
mov
data16
mov
mov
mov
sub
sahf
adc
add
das
int
shrb
hlt
popf
pushl
jge
stos
ret
repnz
rolb
aad
jne
cld
xor
xor
or
add
push
mov
sub
mov
mov
cwtl
shrb
adc
pop
jg
clc
repnz
push
adc
xor
or
sub
cmp
frstor
and
jo
jmp
mov
mov
pushf
xchg
ficomps
es
jp
dec
in
xlat
int
xor
xchg
fdiv
out
xchg
or
and
imul
lods
xor
lods
sub
insb
adc
sbb
jecxz
inc
mov
cltd
inc
stos
sbb
scas
repnz
cmp
es
mov
in
jl
adc
sahf
push
mov
or
data16
pop
mov
gs
inc
cmc
testb
xchg
mov
inc
mov
orb
lds
and
mov
jbe
mov
jb
fidivs
ret
mov
rol
mov
xor
ss
outsb
cmpl
ja
pop
iret
cmpb
or
shlb
hlt
cmpsb
icebp
rcr
addr16
push
fwait
scas
loopne
test
and
push
add
sbb
mov
add
aaa
daa
movsl
sub
cmp
mov
data16
mov
cld
inc
imul
mov
insl
add
es
mov
xchg
div
push
scas
je
vminss
sub
xor
daa
loopne
dec
stc
mov
sahf
stos
mov
cmp
add
lock
xor
fbstp
xor
mov
fimuls
xor
pop
jae
sarb
mov
jp
add
xchg
jnp
cltd
dec
inc
pop
lock
sub
adc
jecxz
xor
fisttpll
mov
leave
mov
and
cmp
lret
inc
and
pop
sub
outsl
stc
clc
jge
mov
mov
imul
sbb
xor
imul
movsb
negb
lods
push
add
or
out
or
lock
push
aaa
jecxz
cmp
cli
push
sbb
add
inc
int3
mov
jl
xlat
loop
cmp
sub
in
cmp
scas
mov
aaa
stos
pop
pop
lds
rol
xlat
test
les
push
cwtl
in
mov
push
loopne
mov
decl
inc
faddl
lcall
pop
aad
jns
lock
jp
cmp
loopne
jo
inc
js
nop
outsb
lods
pop
xlat
inc
mov
dec
mov
enter
bound
push
mov
adc
push
rcrb
popa
mov
mov
js
cwtl
popf
ret
iret
inc
pop
je
push
dec
push
lret
fcmovnbe
xor
ds
xor
arpl
ret
sbb
adc
jmp
xor
fisubl
lar
lods
movq
adc
and
cmpsb
sahf
jp
sub
fnstenv
mov
ficoms
hlt
sub
dec
lret
xor
jbe
inc
aad
ret
and
faddl
shrb
int3
nop
or
push
loop
test
jb
daa
dec
ss
mov
rcrb
movsb
orl
data16
roll
imul
jmp
add
sub
fs
push
pop
lcall
pop
shll
push
je
cmp
ljmp
js
test
imul
pop
xchg
lahf
aas
push
aaa
sar
in
inc
fisubrs
mov
mov
fwait
lcall
int
scas
inc
pop
mov
daa
adc
jmp
das
repz
inc
fsubp
add
sbb
in
lcall
or
mov
es
and
push
adc
loopne
ss
mov
lods
push
fsubrs
repnz
loop
test
jp
outsb
das
sub
mov
cld
std
call
movsb
lds
mov
add
inc
inc
repnz
xchg
leave
push
inc
lret
in
jns
adc
jle
lods
pop
rclb
pop
mov
mov
inc
in
test
xchg
test
xchg
dec
lret
adc
ss
adc
rcrb
out
pusha
das
push
jecxz
pop
pop
xor
dec
xchg
inc
cmpsl
sub
dec
mov
sbb
imul
jns
cmp
inc
dec
test
push
sub
imul
jno
test
sbb
shrb
fwait
das
test
pop
test
sbb
fisubrl
jns
xchg
cwtl
xor
dec
and
dec
lea
pop
pop
mov
stc
sub
push
fiadds
xor
sbb
in
stos
imul
fimuls
xor
or
scas
out
cli
adc
scas
xor
dec
mov
dec
mov
or
popf
clc
loopne
mov
pop
cld
cltd
jge
xlat
sbbb
inc
jae
pop
les
mov
push
pop
daa
out
push
inc
in
cmp
aas
lahf
addr16
push
fninit
sbb
pusha
or
xor
scas
fsubrs
in
cld
and
push
shrl
aas
xchg
pop
idivl
add
arpl
insb
inc
es
jb
and
push
ret
addb
xchg
jbe
iret
lods
cld
xchg
daa
stc
in
ja
in
lret
jle
jmp
loop
sub
lahf
jno
pop
into
fmulp
pop
ds
fisubs
test
popf
call
jmp
shl
cmp
jns
fwait
scas
pop
cmp
xchg
aaa
pop
jge
add
pop
popf
cli
sub
adc
imul
movsl
cmp
xchg
sub
ss
sub
jne
or
sahf
jbe
das
or
jae
rcr
lret
dec
push
jnp
loopne
dec
push
mov
and
xchg
sub
cmp
inc
jbe
push
or
mov
or
mov
sub
pop
adc
lock
ficoms
stos
add
fistpll
repz
std
cs
das
jge
xchg
push
out
jbe
inc
js
xchg
mov
cmc
pop
lret
dec
orl
jae
stc
dec
sbb
lds
cmpsl
popa
cmp
push
push
test
jae
dec
xor
dec
sub
jmp
add
jno
dec
sub
addr16
adc
cmp
add
add
jb
shlb
mov
and
fbstp
xchg
push
cltd
inc
xchg
pop
dec
cmpsl
mov
xchg
xor
jns
dec
data16
mov
cmpsl
call
adc
je
push
test
movsw
movsl
aam
sbbb
adc
mov
andb
push
or
jecxz
and
mov
pop
mov
jns
cmpsb
xchg
sub
ss
mull
xlat
call
shr
or
aad
bound
mov
cmpsb
add
add
fistl
mov
cmp
loope
mov
enter
xor
jno
inc
or
fldt
cmp
mov
lods
add
and
mov
and
rcrl
add
movsb
mov
imulb
adc
loope
lcall
movsb
sbb
cmp
mov
dec
out
cld
fnstsw
push
addl
xor
mov
jns
test
mov
shll
lock
inc
outsb
sbb
dec
insb
dec
jmp
mov
xorl
xchg
inc
fcomip
imul
shlb
pop
lahf
sbb
in
stos
push
xchg
mov
adc
fists
push
lret
xor
fdecstp
insl
mov
stos
divb
push
inc
add
mov
repnz
inc
jo
pop
pushf
inc
mov
fdivl
mov
xchg
or
fldcw
testl
mov
mov
out
aam
jle
jmp
aam
mov
mov
cmp
mov
mov
sub
xor
in
and
mov
ret
mov
push
push
mov
test
ficompl
sub
sarl
insb
aas
iret
dec
rorb
mov
ret
ror
lahf
xchg
push
popa
push
insb
inc
aaa
pop
pop
xor
pop
out
xchg
xchg
movsl
or
or
lock
ljmp
rolb
fcom
cmp
push
in
pop
jno
dec
incb
aam
mov
or
push
jnp
cmp
adc
mov
cmp
dec
mov
call
and
jl
mov
das
fldlg2
push
cmp
push
pop
pop
jmp
inc
pop
sahf
cmpsb
outsb
push
outsl
adc
cltd
mov
les
mov
sub
cs
imul
xor
xchg
inc
scas
mov
mov
test
jne
xchg
ret
movsl
aam
sbb
cld
add
sub
xor
icebp
je
jbe
jae
cwtl
aam
test
rol
call
add
or
xor
and
out
outsb
sub
pop
xor
in
sbb
ficoml
jge
adcb
mov
sbb
push
mov
fcmovbe
sub
jae
out
inc
cmpsb
push
fmuls
pop
movsb
fldcw
iret
repz
fidivl
mov
mov
pop
mov
push
aad
stos
xor
lock
notl
sbbl
or
pop
pop
ja
lahf
cmp
adc
test
cmpsl
and
rol
dec
mov
xchg
lret
mov
push
mov
dec
clc
popa
scas
jae
mov
inc
cli
adc
pop
sbb
adc
mov
adc
loop
mov
xchg
push
xchg
dec
mov
inc
bnd
dec
outsl
cld
pop
out
stos
sub
add
mov
inc
dec
sbbb
scas
xchg
adc
das
lcall
xlat
push
loope
push
mov
fsubrl
or
and
jae,pt
or
call
sbb
dec
sub
lea
imul
pop
sti
scas
or
fwait
xchg
adc
xor
add
sbb
xchg
mov
pop
sahf
add
lods
mov
cmp
aam
std
cltd
out
mov
lahf
sub
cmp
push
stos
push
adc
inc
xchg
pusha
addr16
out
aad
pop
add
inc
or
jg
xchg
cld
shlb
xor
loop
mov
jo
jne
dec
push
test
sub
shll
push
lods
xlat
out
pop
xlat
mov
stos
or
jle
mov
xchg
out
std
push
stc
in
jecxz
inc
push
push
xor
lods
xchg
mov
lods
xchg
adc
push
inc
out
fcomi
jle
mov
xchg
mov
js
imul
nop
sbb
aad
add
lret
sub
lcall
movsl
sbb
add
push
mov
das
sub
out
cmc
pushf
repnz
scas
or
or
cltd
gs
addr16
out
pop
stc
and
push
aaa
sub
adc
dec
lock
cmp
push
jns
mov
jle
aam
sub
mov
pop
aam
shrl
cltd
int
adc
inc
out
and
out
rcrl
inc
and
xor
adc
int
sahf
dec
dec
inc
test
xchg
or
cmpsl
sti
fisubrl
pop
adc
mov
mov
sbb
push
aas
enter
dec
jae
xchg
jne
push
mov
sahf
sarl
nop
inc
insb
push
add
sbb
jno
xor
inc
cld
mov
inc
sti
jmp
sub
jmp
jecxz
rolb
mulb
xor
mov
frstor
hlt
icebp
push
sbb
cmp
and
scas
gs
sub
sub
dec
cld
sub
mov
rorl
xchg
adc
dec
dec
in
inc
loope
sub
cs
js
sub
mov
cmpsb
mov
xchg
mov
jae
inc
pop
pop
shl
add
mov
pop
mov
stos
adc
jne
adc
push
out
xchg
lods
ret
cltd
cmp
cmp
inc
lcall
cmp
add
jno
cli
xchg
sbb
cmp
lea
cmp
jno
sbb
mov
aad
or
jbe
and
add
lods
or
iret
iret
push
sub
sahf
xchg
pop
nop
mov
xor
out
stos
rclb
dec
cmp
sahf
mov
or
push
lock
in
insl
pushf
cli
mov
int3
into
jl
push
dec
fnstsw
cmpsl
mov
sti
rcll
ljmp
xlat
repz
sahf
bound
lahf
push
out
pop
add
push
sub
test
mov
inc
lret
incl
idiv
pop
inc
push
mov
movsl
dec
mov
sub
stos
mov
or
sub
mov
sbb
jmp
scas
cmpsl
mov
lahf
call
add
mov
sub
mov
mov
sbb
xacquire
filds
fucomi
je
mov
push
imul
mov
or
xchg
int3
add
mov
push
stc
add
inc
cmp
rolb
shlb
addr16
lcall
mov
int
sub
sub
cltd
lea
test
in
cwtl
xchg
dec
push
repz
or
nop
mov
pop
mov
jle
jmp
xchg
dec
xor
gs
xchg
xchg
leave
jecxz
dec
daa
or
cmp
or
cmp
hlt
jnp
bound
clc
testb
sub
arpl
cmp
push
sbb
and
mov
mov
xchg
inc
mov
cmp
lods
pop
out
mov
adcl
cmc
imul
jp
aam
pop
xorb
cs
hlt
fidivs
mov
lret
loope
xchg
push
push
fwait
in
push
fdivl
jecxz
mov
test
xchg
pop
shl
push
lock
in
jo
faddl
aad
xor
xchg
fs
mov
fildll
mov
jnp
mov
jno
addl
and
or
mov
popa
cmc
jg
add
ja
mov
into
dec
jbe
lock
mov
dec
fstp
mov
bound
clc
xlat
sub
xchg
unpcklps
scas
push
sbb
sub
jg
inc
addr16
bound
stc
lretw
dec
add
adc
sub
push
xchg
test
xchg
out
jns
out
imul
and
lock
add
mov
dec
inc
movsb
cmp
jle
repnz
out
int
sahf
mov
int
gs
rcrb
mov
icebp
cmpsl
push
in
call
jmp
iret
int
test
dec
imul
lcall
dec
bound
cmpsl
xor
jae
inc
loope
or
xor
mov
pushf
xor
sbb
sbbb
mov
pop
jmp
dec
shrb
incb
test
jle
imulb
sahf
push
sbb
test
das
xor
mov
mov
outsl
jno
push
les
in
add
push
out
cld
dec
in
outsb
push
inc
cs
mov
cs
push
xor
mov
cmp
xor
lock
dec
mov
sbb
imul
xchg
mov
add
repz
inc
fisttpl
cld
insb
aas
pop
sub
mov
shlb
push
mov
jo
mov
testl
inc
cltd
lds
lcall
xchg
mov
lret
xchg
cwtl
roll
xchg
jns
push
mov
add
movsl
xchg
aas
mov
sbb
push
inc
mov
dec
xchg
mov
es
stos
sbb
xchg
repnz
mov
fs
mov
dec
repz
pop
fsubrp
xchg
inc
insb
mov
mov
or
jbe
add
cmp
ds
adc
push
pop
xlat
outsl
out
push
mov
notl
mov
mov
adc
js
aam
inc
sub
lea
cmp
fwait
out
popf
xor
adcl
cmp
jle
inc
shrl
stc
addr16
aam
and
in
pop
add
pop
pop
mov
inc
xor
xchg
fdivrs
out
xor
push
push
call
sub
repnz
add
out
push
dec
pop
xor
ss
pop
add
inc
lods
dec
rorb
inc
divb
jne
fwait
or
jg
jbe
or
cmpsl
inc
mov
andb
pop
test
mov
adc
icebp
in
ficomps
ja
cmp
pop
xchg
cmp
mov
out
push
pop
xlat
push
scas
mov
hlt
jmp
fdivrl
scas
add
jl
movsb
cmpsl
aas
mov
mov
pop
mov
sbb
mov
jle
jmp
jl
add
xor
cmpsl
dec
jl
mov
pop
mov
stos
into
lret
adc
scas
fwait
js
xchg
cli
fwait
inc
mov
and
mov
pop
xor
shlb
pop
or
into
push
imul
push
jg
xor
pop
xchg
xchg
fstps
pop
push
mov
push
sub
push
jo
popf
add
fs
mov
mov
xor
sub
aam
std
sub
push
mov
fistl
add
mov
sahf
inc
xor
ljmp
inc
insl
loope
dec
sub
repz
push
jg
adc
pop
insl
fsts
ret
sbb
adc
inc
addr16
jno
or
mov
out
pop
loop
mov
lods
orl
test
std
mov
and
in
xor
mov
xchg
and
stc
loope
test
and
lds
inc
and
mov
ja
sbb
or
arpl
jge
add
jecxz
inc
push
mov
dec
sub
lds
test
sbb
sbb
shl
sbb
sbb
shlb
push
call
ret
lea
adc
dec
or
push
mov
jns
jo
pop
push
pop
imul
inc
inc
out
mov
orl
dec
xchg
lea
xor
mov
mov
xchg
mov
mov
mov
rcrb
xchg
jo
xlat
xrstors
adc
push
mov
sub
fcompl
insl
fdivs
mov
or
fdivl
int3
dec
push
xchg
call
fdivrs
ds
fdivs
cmp
xor
lea
loopne
pop
psraw
pop
adc
pop
mov
pop
cltd
sbb
sub
sbb
pop
aad
jbe
pop
adc
in
dec
adc
mov
mov
and
or
aas
pop
mov
jg
add
lret
ret
push
dec
test
jno
push
das
je
push
add
call
cmp
icebp
sbb
pushf
inc
cmpsl
xor
xchg
or
sub
xchg
jns
sarb
punpckhwd
pop
fmuls
pop
stc
and
add
data16
int
xchg
jo
test
iret
leave
aam
ret
cmpsb
mov
adc
adc
jbe
mov
mov
mov
sub
sbb
lea
mov
leave
jmp
ja
enter
movsl
adc
lret
cmp
imul
push
add
cli
negb
sub
ss
cmp
pop
sti
andl
dec
push
inc
popf
ja
xchg
out
loope
xchg
cmp
xchg
adc
sahf
repz
sbbl
push
push
pop
dec
mov
jg
mov
cli
shr
stos
sbbl
pop
scas
test
loope
sub
sub
clc
movntq
out
cmp
fwait
stc
test
inc
xchg
inc
daa
adcb
fildl
pop
sub
in
cmp
in
sbb
movsb
push
stc
test
mov
or
notb
pop
mov
or
and
mov
loope
jg
call
lods
aas
mov
push
xor
lret
arpl
test
pop
jge
leave
popf
push
dec
mov
jge
inc
cmpl
in
sbb
mov
cmp
jbe
loopne
cmp
xchg
push
dec
adc
iret
mov
or
das
mov
in
test
jns
fsubs
cmp
inc
jnp
jle
jle
cld
add
xchg
push
jp
shll
cmp
mov
cwtl
lock
add
ds
jl
xor
cmp
fidivrs
data16
xor
or
jne
add
fists
fistps
movsb
sbb
into
insb
xor
imul
jmp
and
jo
jbe
sub
jnp
cmc
pop
ljmp
cmp
ja
inc
cmpsb
or
mov
add
into
adc
mov
cmpsb
jmp
and
inc
call
inc
rcl
idivl
out
mov
dec
stos
outsb
nop
sub
sbb
push
aad
pop
mov
adc
in
xchg
hlt
add
sub
jg
iret
insl
adc
dec
scas
popf
cli
ror
daa
xchg
push
mov
pop
insl
rolb
mov
repz
and
pushf
cmpsb
sub
xlat
mov
mov
mov
scas
clc
dec
int
sbb
fcomi
add
add
pop
rorb
loope
or
inc
fiadds
pushf
cltd
clc
push
inc
idivl
lcall
sub
inc
add
fnsave
fstps
inc
and
clc
out
xchg
mov
aaa
adc
ljmp
xchg
in
sbb
jp
divl
sub
mov
mov
repnz
sub
adc
and
rcl
mov
mov
push
lods
xor
mov
imul
es
add
and
inc
mov
sub
xor
popf
mov
inc
push
xor
scas
jo
cmp
dec
and
aad
jle
jne
mov
jle
cmp
or
and
lods
and
sub
and
shlb
iret
andl
lahf
sarb
stos
sub
cmc
or
sbb
fcomp
jmp
das
stc
loope
inc
ja
xor
cmp
movsb
imul
add
sbb
jns
aad
out
adc
and
jnp
movsl
push
cmp
mov
movsb
jmp
mov
mov
add
pushf
mov
ljmp
sbb
je
dec
mov
es
dec
inc
hlt
shr
mov
lea
mov
sbb
movsb
out
insl
push
mov
dec
out
adc
mov
adc
mov
inc
or
mov
addr16
jg
ja
repnz
shrb
push
sbb
insb
push
and
std
push
or
mov
add
imul
jnp
cmpb
inc
fbld
xchg
mulb
fidivl
cmp
xor
pop
jecxz
inc
push
ja
xor
xlat
dec
push
mov
jb
jb
les
data16
pop
ret
and
loop
xchg
push
sub
cmp
inc
jl
enter
mov
cs
fsubrl
stc
mov
and
not
mov
push
mov
cmp
test
jb
or
and
inc
push
push
in
add
cmpsb
push
jecxz
push
data16
mov
flds
pop
fs
dec
in
sub
aaa
dec
xchg
inc
cs
in
adc
aas
es
iret
test
jg
imul
dec
mov
xchg
cmc
pop
cmp
push
je
fisubrl
sti
and
out
mov
dec
clc
mov
push
or
sahf
mov
push
dec
sahf
int3
sahf
cmp
inc
pop
andl
mov
dec
dec
add
nop
popa
or
lock
xor
xchg
push
pop
testb
lods
cmpsl
cltd
cmpsb
outsb
pop
sub
aam
in
lock
dec
or
adc
lcall
popa
jnp
rcr
push
fwait
mov
push
out
fcomi
notl
mov
mov
xor
in
test
testl
enter
cs
jns
ds
cmp
lret
pushf
ds
es
int3
in
cmpl
jmp
and
shlb
cmp
stos
loopne
pop
ret
mov
xor
clc
outsb
test
and
add
mov
pop
lods
push
nop
and
xor
cmp
jo
shll
call
daa
cmpsb
test
sti
ljmp
fldl
jns
sbb
cmpsl
loopne
fsubrs
lods
aad
jbe
divb
sbb
lods
mov
pop
jne
les
insb
fistps
or
or
inc
inc
inc
pushf
andl
int
mov
in
je
cmc
mov
test
mov
out
push
in
aad
movsb
dec
nop
rorl
push
mov
pop
pushf
cmp
xchg
xchg
out
xchg
and
xor
push
push
ss
add
dec
das
out
xchg
pop
cmp
ret
push
int
shll
jg
jp
leave
add
adc
negb
ja
daa
cmc
repz
xor
or
sbb
xor
adc
push
push
inc
cwtl
test
test
call
mov
out
daa
mov
sahf
out
push
xor
dec
stc
cmp
lock
js
and
or
fnstsw
out
pop
fsts
jge
bound
cmp
lret
out
lock
xlat
mov
popf
les
sbb
outsb
sbb
nop
iret
cli
in
ja
fisubs
xchg
xor
rclb
bound
mov
js
loopne
daa
adc
xchg
xorl
add
cmp
xchg
mov
jmp
clc
adc
scas
outsl
mov
rcr
sbb
out
shrl
ret
sub
jbe
jmp
test
and
sbb
in
push
mov
dec
scas
test
inc
shlb
ja
lods
inc
jp
cmpl
clc
mov
or
xor
sahf
insb
mov
and
inc
xchg
add
and
js
ja
sub
pop
outsl
pop
xchg
lcall
xor
xchg
xchg
mov
notb
out
jl
mov
scas
xchg
aas
testb
insb
cmp
mov
gs
dec
cli
fs
test
sub
pop
and
sbb
add
fisttpl
sub
sti
push
insl
ret
repnz
ja
push
mov
add
outsb
sbb
je
outsl
mov
sbb
pop
dec
test
test
add
xchg
fidivrl
lea
pop
add
jg
adc
mov
loope
test
in
jnp
cltd
mov
fistpll
into
mov
dec
push
push
and
inc
inc
mov
push
enter
mov
in
dec
mov
or
pop
aaa
inc
mov
pop
in
mov
movsl
ds
sarl
fwait
dec
scas
outsl
add
pop
les
outsl
stos
cmp
mov
shlb
ror
inc
fsubp
sarl
jae
incb
mov
fdivl
mov
jo
loope
xlat
xor
es
adc
filds
ret
aad
int
lcall
jnp
mov
scas
jae
push
push
inc
adc
addb
inc
loop
mov
xor
jg
xor
clc
addb
xchg
fcmovnu
jg
dec
push
outsb
lahf
and
jnp
mov
das
scas
call
sub
fldl
or
inc
cs
jns
xchg
pop
and
push
int
fdivrs
mov
stc
adc
sub
iret
mov
ja
movsb
lods
inc
jb
or
fisttpl
insb
leave
mov
fistl
dec
push
je
jno
dec
add
dec
jle
cmp
clc
out
ja
in
fimull
nop
fidivrs
hlt
popa
mov
adc
cmpsl
adc
mov
add
ret
fsubl
addr16
outsb
dec
sbb
or
test
mov
call
sbb
cmpsl
aaa
mov
mov
jmp
std
pop
out
fs
or
mov
popa
test
mov
fiadds
push
xchg
cwtl
repnz
jmp
ror
mov
inc
cld
push
adc
adc
sbb
scas
movsb
push
neg
ljmp
shr
std
xchg
dec
push
sbb
out
sbb
sub
cmp
pop
arpl
mov
jae
in
push
les
out
xchg
cmp
das
test
and
pop
imul
and
and
sbb
sbb
insb
push
out
stos
aad
sti
lds
insb
xchg
lock
int3
sub
sub
pusha
add
xlat
inc
cmp
icebp
cli
jecxz
adc
inc
cmpsl
lret
leave
and
jbe
mov
es
loopne
loope
xchg
cmpsb
xor
frstor
or
jg
inc
lcall
inc
pop
in
ss
xor
add
insb
dec
fucomi
mov
icebp
mov
into
aad
int
in
push
dec
lods
or
and
out
cmp
mov
movsl
dec
popf
mov
push
icebp
insb
mov
sub
mov
jns
xchg
aaa
shll
cmc
sbb
sbb
xor
mov
loope
pop
loop
loopne
subb
shrl
sbb
aas
add
inc
inc
push
fsubrl
jmp
in
cmp
gs
inc
inc
in
cmp
lret
pop
push
mov
movsl
int3
push
test
jno
add
xchg
or
stos
pop
sub
sub
mov
pop
mov
aam
cmc
jnp
aad
lods
xor
sub
out
mov
stc
xchg
mov
iret
filds
das
sti
dec
inc
xchg
imul
ret
loopne
rolb
mov
jo
popa
jno
and
sbb
pop
in
jge
call
mov
out
stc
xchg
jecxz
mov
mov
lcall
lock
fcomps
xor
push
sbbl
cmpsb
mov
mov
sub
push
and
aas
xchg
add
sbb
mov
ds
cmp
add
push
cwtl
call
shl
rcl
mov
add
mov
iret
mulb
jnp
cmp
insl
xor
sbb
inc
xchg
dec
xchg
data16
rolb
xor
pop
cld
insl
ds
out
es
pop
iret
sbb
nopl
leave
cwtl
lds
mov
add
in
ljmp
pushf
or
sahf
aas
stc
sub
sbb
frstor
pop
movsl
xor
or
sarb
xchg
rcrl
xor
ja
and
inc
sub
inc
ja
pop
sub
insl
inc
pop
mov
lea
adc
std
mov
lret
negb
ret
dec
out
jo
lea
sbb
pop
sub
xchg
jbe
push
mov
sti
in
push
int3
xchg
xor
jo
push
sbb
aad
mov
sbb
sarl
insb
fstpl
pop
mov
lcall
and
lret
inc
clc
jge
jmp
in
add
pop
repz
cmc
and
outsb
xchg
xor
add
xor
mov
xchg
jbe
mov
out
fistpl
mov
cmp
insb
mov
sub
xlat
data16
scas
mov
cmp
arpl
mov
cwtl
lahf
push
fildl
xchg
out
cmp
jmp
inc
jbe
and
out
adc
lods
dec
btrl
push
add
cltd
or
cmpsb
dec
add
cmpsb
mov
test
pop
cmp
jbe
adc
fisubrl
mov
in
inc
pop
xchg
ljmp
aam
pop
test
rorl
lea
mov
fistl
into
xor
cli
sub
xor
scas
insl
in
jae
addb
js
leave
cmc
movsl
xchg
bnd
and
cmpsb
xlat
and
push
test
xchg
and
icebp
and
fimuls
in
arpl
jecxz
or
mov
out
aam
adc
loopne
jb
add
mov
call
sub
inc
lods
xor
sahf
rcrl
aas
push
aas
inc
xchg
sbb
and
repz
dec
fidivs
xchg
imul
mov
or
mov
cli
dec
ja
inc
or
mov
mov
dec
sub
jb
int
jae
add
jno
fldl
pop
push
xchg
sub
lret
jne
pop
imul
daa
mov
adc
push
pop
in
jae
jge
addl
mov
jnp
ret
xor
push
mov
xor
aas
push
adc
sbb
pop
dec
loope
ss
andb
xor
xor
lods
push
lock
pop
stos
push
stos
push
adc
pop
outsl
stos
mov
inc
repnz
popa
mov
inc
dec
mov
psubd
push
dec
or
nop
mov
xlat
mov
aas
stos
inc
and
es
dec
ret
add
cld
fmuls
push
xchg
pop
in
in
scas
mov
in
xchg
pop
adc
std
data16
xor
adcl
xchg
leave
insb
xchg
jae
test
lret
sub
popf
iret
jg
adc
testl
loopne
fstpt
scas
jne
out
inc
sub
mov
in
movsb
cmp
mov
lret
sub
push
xchg
mov
lret
jg
data16
out
ror
cmpsl
aaa
xchg
cmp
mov
add
mov
maxps
insb
adc
pop
int
out
add
mov
sbb
dec
js
push
repnz
cmp
sub
and
push
clc
adc
mov
xchg
ljmp
sbb
dec
out
push
fcomps
cmp
aad
arpl
popa
loopne
sbb
addl
addb
xchg
cld
jge
jg,pt
push
inc
lret
push
cmp
out
loop
fwait
ds
lahf
in
or
inc
aaa
inc
sbb
jg
jb
movsl
dec
dec
mov
push
mov
fldcw
or
push
ret
and
stos
clc
clc
aad
fldt
imul
popf
mov
mov
mov
mov
movsb
sbb
push
mov
mov
enter
inc
outsl
test
nop
addr16
dec
test
std
sbb
call
mov
xchg
sbb
add
cmp
xchg
in
sahf
dec
xlat
scas
loopne
lea
andb
je
cwtl
lds
mov
sti
xor
mov
in
push
call
lret
mov
pop
data16
shrl
push
dec
out
pusha
shll
pop
ljmp
js
xchg
fcomi
mulb
test
hlt
js
fdiv
pop
cmp
aad
int3
xchg
push
push
imul
xlat
xor
push
fisubrs
sub
push
add
jae
ret
pop
or
out
xor
jmp
outsl
xor
imul
sbb
mov
loopne
ja
inc
inc
int
jp
cltd
jae
popa
sbb
out
inc
popa
dec
pop
pop
jmp
loop
adc
loopne
mov
adc
lods
lea
adc
inc
nop
add
sub
cwtl
sub
mov
and
mov
xchg
pusha
test
cmpsb
repnz
push
arpl
sbb
mov
lock
mov
vpcmpgtd
jp
xchg
dec
adc
shl
pop
jecxz
mov
sbb
mov
jle,pt
pop
jecxz
lret
dec
nop
call
mov
push
repnz
fcomps
mov
in
in
sbb
mov
cmp
jae
mov
hlt
daa
test
dec
push
ret
add
insb
pusha
hlt
or
jl
repnz
rorb
dec
inc
loope
mov
fdivrs
imul
jl
mov
mov
out
pop
xor
imul
data16
mov
push
push
sub
xor
data16
rcrl
pop
pop
lret
loopne
popf
push
daa
jns
fstpl
jne
rclb
popa
inc
pushf
out
repnz
scas
fprem1
dec
cld
add
xorl
sub
push
out
pusha
mov
hlt
and
in
cli
jp
stos
add
test
decl
mov
cli
mov
xorb
and
fidivrl
stos
cmc
arpl
enter
mov
pop
lock
fs
mov
aad
nop
mov
jecxz
xor
outsl
add
adc
fstps
mov
faddl
inc
add
dec
pop
mov
int3
mov
and
out
mov
push
or
mov
out
mov
stc
xor
gs
cmp
lods
cmpsb
enter
jns
push
bound
push
push
dec
ljmp
jo
in
imul
sub
inc
adc
jl
jge
mov
sbb
cmp
xchg
inc
scas
fwait
jmp
push
repnz
jl
jmp
add
mov
sub
or
aad
rcrb
mov
les
ret
bound
std
sahf
outsb
add
mull
jnp
pusha
fists
fisubrl
dec
cmp
nop
sub
ds
mov
jl
push
test
pop
test
imul
fwait
adc
int3
ss
fsubrs
aas
push
push
mov
sub
jnp
cli
std
inc
adc
xor
cmp
inc
jge
jb
jb
rcll
adc
sub
xchg
cld
ret
jo
fwait
lcall
ss
adc
pop
out
scas
mov
clc
xlat
inc
mov
xor
sub
iret
jmp
int
std
jbe
jo
jb
das
hlt
xor
dec
clc
xchg
rorl
mov
mov
dec
pop
sbb
out
pop
mov
inc
push
xorl
sub
ret
mov
addb
test
xchg
mov
ret
imul
or
cmp
dec
or
int
pop
or
xchg
xchg
in
test
mov
dec
stc
popf
jg
cmp
shrl
int
dec
or
push
xor
std
cmp
or
clc
xchg
jl
cld
dec
pushf
pop
or
mov
into
in
jo
arpl
sub
xchg
xchg
ja
rol
cmpsl
mov
mov
dec
mov
pop
mov
mov
inc
add
mov
repnz
cmpl
in
pop
aas
adc
cmpsb
mov
stc
jnp
int
aaa
arpl
mov
popa
cmpl
xorb
mov
inc
pop
jmp
and
push
imull
clc
lahf
push
xchg
mov
push
jbe
insl
lret
or
cmp
fidivrs
pop
push
push
inc
cmp
mov
cmp
xor
mov
fsubl
jnp
rolb
mov
arpl
lea
dec
xchg
fisubrs
sbb
es
dec
cwtl
xchg
iret
jne
adc
push
sti
ret
inc
in
aaa
ja
scas
loopne
adc
and
scas
aas
cwtl
inc
mov
jae
push
mov
cmp
mov
inc
outsl
mov
mov
and
ret
push
or
cmpsl
jmp
daa
add
sub
adc
cmc
pusha
popf
insl
movb
insl
clc
insb
out
lea
inc
lods
nop
cmp
inc
xchg
sub
je
test
fnstcw
push
mov
mov
fs
sarb
aam
pop
push
loop
dec
adc
jl
xor
cmc
rcl
dec
test
xor
ds
lea
or
subl
cmpsl
mov
scas
xchg
adc
mov
aad
mov
pop
mov
lret
and
and
lcall
les
add
in
jnp
mov
div
mulb
repnz
cmpsb
fisubrs
jg
aas
xchg
cli
jp
dec
stos
dec
lods
iret
cwtl
jnp
bound
int3
pop
mov
and
aaa
mov
mov
test
rcll
inc
push
adc
rorb
mov
and
pop
je
in
dec
sbb
jmp
movsb
push
out
mov
and
aam
inc
jecxz
jg
clc
inc
lcall
adc
xor
sub
aaa
cmp
dec
inc
imul
inc
mov
in
or
jbe
lock
adc
xor
mov
stc
loopne
push
pop
cmpsl
aad
push
push
pusha
cmc
adc
xchg
iret
jne
cmpsb
inc
movsb
push
sub
dec
xor
mov
xor
popw
mov
cltd
movsb
sti
das
push
addr16
sbb
bts
mov
inc
jb
sub
add
add
mov
sub
fwait
popa
dec
sub
xchg
inc
hlt
repz
mov
cs
adc
dec
xchg
pop
cs
inc
dec
lds
addb
imul
dec
nop
repz
call
pop
cmp
cmpsb
testb
xchg
jnp
dec
scas
repz
lret
mov
push
lea
mov
mov
mov
lret
sbb
push
xchg
inc
loopne
push
test
lahf
jmp
pop
xor
das
test
sarb
ss
and
lods
mov
sbb
pushf
pop
dec
bound
or
fstps
xchg
popl
mov
je
jl
aas
push
fnstenv
in
mov
jnp
jne
push
push
test
ss
test
out
sarl
and
mov
sub
stc
sbb
cmp
sysret
scas
lcall
mov
jne
dec
mov
and
add
jae
aas
pop
movb
xlat
daa
or
fisttps
or
out
adc
mov
leave
ret
xchg
push
popf
sub
cmp
aas
sub
in
lods
dec
out
shrb
aad
imul
repnz
out
inc
xchg
xchg
push
cmp
pushf
addr16
push
mov
mov
mov
jp
xchg
jl
push
mov
cmc
jo
sarb
imul
loop
ret
rclb
mov
mov
or
lcall
outsl
ds
inc
push
out
fs
scas
aaa
pop
mov
popf
daa
sbb
ret
fdivs
cmp
inc
or
lcall
and
push
scas
fmull
ss
sbb
es
out
xor
ret
fwait
mov
out
jne
and
stos
loopne
and
or
pop
adc
xchg
dec
sub
popf
or
in
sbb
jge
adc
rclb
xlat
dec
inc
movsb
push
andb
xor
in
test
jb
je
xchg
repz
mov
outsb
add
jg
test
fidivrs
xor
sub
jge
xchg
jle
nop
test
cmp
sarl
loopne
add
ror
xor
xor
or
xor
and
js
and
mov
dec
xchg
push
loop
lahf
jge
mov
add
push
inc
jp
outsb
lret
movb
clc
pop
outsl
pop
popa
jnp
mov
push
sarl
fs
ja
dec
mov
mov
cmp
push
movsl
dec
adc
push
and
dec
mov
adc
add
mov
jmp
dec
xchg
sbb
insb
lds
cmpsb
movhps
jbe
jp,pt
nopl
inc
rolb
lods
daa
cmp
push
and
cmp
mov
outsb
push
aas
push
inc
testl
push
dec
pop
jnp
add
imul
movsl
jmp
push
xchg
faddp
sbb
sbb
sti
clc
out
xchg
test
xchg
jo
sub
fisttpl
ja
sub
fwait
es
scas
add
pop
les
sti
mov
mov
out
cmpsl
xor
in
divb
inc
stos
xchg
add
adc
mov
icebp
push
in
cmp
mov
sbb
insl
jns
arpl
push
mov
stos
das
inc
inc
lds
adc
push
mov
push
sub
in
in
push
push
cltd
fucomi
out
out
inc
push
pop
inc
stos
xchg
out
push
push
decl
pop
das
mov
inc
sbb
xchg
sbb
push
and
push
popa
adc
cli
adc
or
push
ds
inc
xchg
and
or
mov
xor
outsb
sub
ljmp
mov
sbb
lock
push
std
imul
mov
push
inc
push
sbb
push
sub
frstor
xor
fisubrl
hlt
add
pop
push
cwtl
cmp
xlat
mov
xor
mov
in
xchg
mov
outsl
and
aas
adc
fwait
push
add
xchg
push
or
sbb
push
aaa
dec
data16
leave
cmp
std
mov
lods
scas
adc
ret
testl
das
xor
sbb
mov
xchg
or
mov
jp
inc
nop
mov
adc
jns
int
jno
or
and
lds
into
push
ret
mov
mov
push
mov
jle
mov
xchg
pop
push
out
cmp
pop
loop
inc
xchg
pop
jnp
cmpb
dec
jmp
and
mov
cmp
jno
call
xor
dec
dec
gs
or
inc
jge
ret
mov
loope
pop
andb
pop
ljmp
xchg
aad
adc
divb
pop
push
xor
mov
aas
mov
imul
enter
sbb
hlt
les
jnp
idivl
adc
sub
fstps
push
add
popa
js
test
inc
jnp
das
mov
inc
ror
ret
lds
push
loop
mov
scas
pop
cmp
fcmovbe
jmp
xor
xchg
sub
sbb
sub
lret
stc
inc
repnz
aaa
cmpsb
mov
test
add
scas
mov
in
fistps
xchg
or
push
or
jp
and
stos
mov
gs
arpl
je
push
gs
ret
mov
scas
sub
ret
jns
mov
movsl
shlb
and
adc
and
call
jo
add
xor
cmp
out
movsb
xchg
dec
hlt
add
sub
pop
cs
mov
int
repnz
mov
jnp
push
dec
div
mov
scas
mov
push
popf
cmc
xor
jl
jno
fs
push
mov
rolb
adcb
push
pop
popf
pop
add
cli
mov
data16
popa
adc
fcomps
in
movsl
in
cmp
stos
aad
mov
in
add
push
mov
addb
cmpsb
bound
pusha
loop
mov
mov
jno
push
rcrb
mov
xchg
outsl
jnp
inc
cwtl
dec
mov
fsubs
sub
movsl
addr16
insb
and
gs
push
hlt
sub
push
shrb
and
mov
xchg
out
mov
jmp
push
shlb
pop
jno
int
call
push
out
cmpsb
inc
lahf
fadd
sbb
int
imul
movl
mov
cld
sbb
or
nop
stos
jmp
rolb
aaa
std
cmp
aam
xor
jo
mov
loope
push
mov
xchg
sarl
fyl2x
ret
popf
rorb
out
nop
xchg
sub
and
cwtl
stos
daa
xchg
fwait
mov
push
int3
js
leave
jmp
xchg
or
adc
add
push
push
pop
xor
jo
inc
xor
or
in
cmc
call
mov
adc
or
inc
enter
dec
xchg
icebp
push
inc
add
jno
sbb
mov
xor
pop
or
push
ror
mov
mov
cli
ror
lcall
out
mov
cwtl
into
xor
je
inc
jne
mov
rolb
mov
cmc
lock
cltd
adc
dec
lea
and
aaa
mov
leave
add
ret
leave
cmpsb
xchg
movsl
test
loopne
cltd
hlt
jge
dec
jge
jmp
inc
aas
jle
dec
and
xor
mov
iret
adc
fisubrs
fldcw
push
jecxz
and
popf
scas
dec
push
inc
fdivrl
dec
push
lret
arpl
jno
mov
sub
add
loope
inc
pusha
call
test
mov
jae
in
or
scas
dec
out
fs
les
add
or
mov
dec
scas
shl
pop
popa
adc
mov
xchg
xor
lret
fnsetpm(287
sub
adc
xlat
into
mov
int
xor
xor
push
fmuls
adc
mov
pause
enter
mov
loope
lds
stos
xchg
push
inc
nop
in
lret
rcll
jecxz
je
insb
mov
sbb
mov
outsl
gs
cmp
dec
pop
adc
repz
push
add
jbe
lods
jecxz
std
insl
xor
stos
or
jnp
movsb
dec
push
dec
push
push
orb
push
lcall
adc
jl
daa
jno
nop
pusha
cmpsl
nop
mov
aam
movsb
bound
rcll
ret
inc
fldenv
inc
jno
mov
fcompp
into
or
xor
xchg
add
push
paddsw
cli
push
lcall
cltd
sbb
sub
mov
lds
sbb
nop
rcl
mov
lods
xchg
xchg
mov
mov
mov
xor
imul
ss
jmp
pop
out
cmp
pop
subb
out
cltd
cmpsb
int
dec
mov
fcmovnb
push
sub
xchg
push
add
jo
stos
xor
sbb
jae
dec
sbb
jne
cwtl
dec
xchg
jne
push
mov
mov
dec
pop
jmp
add
in
jg
jmp
mov
lcall
or
aam
xchg
adc
cmp
outsb
mov
in
arpl
lock
nop
cmp
cltd
jbe
flds
add
sbb
jns
inc
inc
aas
in
inc
lods
ljmp
enter
mov
inc
jp
in
std
jp
lock
mov
add
fcmovnb
xor
das
pop
inc
jno
dec
repnz
push
lds
rclb
dec
dec
in
movsb
ljmp
out
mov
daa
and
cmp
icebp
inc
ret
nop
stos
push
lds
loop
insl
arpl
mov
jle
out
add
cmc
in
outsb
sub
xchg
lahf
fldcw
push
add
cwtl
adc
and
xchg
mov
cmc
push
popf
push
pop
sub
mov
flds
jl
lods
pop
sbb
stos
jp
pop
notb
stos
movsb
cmp
or
inc
jns
cli
pop
mov
jp
mov
xchg
bound
cmpsl
adc
jns
pop
lds
dec
jmp
andl
in
fisubl
inc
cmp
shll
into
mov
es
jp
imul
cli
fs
mov
jg
int3
or
and
icebp
mov
xor
xchg
mov
lret
mov
les
stos
test
jecxz
mov
insb
mov
push
cwtl
call
push
daa
outsl
or
inc
ljmp
fildll
stos
pop
hlt
sbb
jge
xchg
rorl
inc
xor
shll
repz
dec
enter
fwait
mov
and
xor
add
ret
fsubl
clc
test
daa
mov
repz
xchg
dec
lods
mov
cmovb
out
cli
popw
adc
subl
testl
push
stc
es
or
inc
cmp
jne
push
cltd
mov
cmp
pop
popf
fmuls
lock
and
cmp
or
xchg
adc
push
push
call
push
aam
lock
pop
adc
mov
clc
movsb
or
int3
mov
xor
lea
mov
sub
frstpm(287
cmp
or
es
mov
push
xchg
mov
test
xor
mov
mov
aas
and
cmp
cmc
ja
icebp
lahf
inc
shlb
mov
push
sbb
test
nop
ds
scas
inc
push
addb
arpl
xor
scas
mov
movsb
mov
insl
fisttpll
sar
add
mov
repnz
aad
dec
xchg
adc
mov
jns
mov
pandn
push
adc
rorb
cwtl
data16
and
sbbb
jp
gs
cwtl
pop
int3
adc
lret
fbld
xlat
pop
imul
xchg
xchg
jns
mov
inc
jecxz
jns
daa
xor
xchg
test
int3
hlt
cmp
sbb
cltd
mov
dec
aam
shl
ficoms
pusha
sti
notb
xchg
stos
cld
fstps
rclb
push
addr16
jmp
popf
out
xchg
or
xchg
enter
dec
cmp
sbb
je
or
test
and
dec
and
outsb
daa
and
pop
dec
out
addb
adc
and
in
std
leave
lret
ja
mov
sbb
divb
in
jno
shl
mov
in
dec
xlat
dec
pop
bound
gs
fdivrp
imul
iret
loope
sarl
inc
cmp
dec
loopne
cmp
xor
push
sahf
aam
dec
mov
mov
jb
int
cmp
xor
shll
mov
insb
test
mov
push
push
mov
lock
dec
mov
mov
in
push
testl
insb
aam
in
mov
ret
xor
cltd
jae
sub
mov
ja
adc
hlt
arpl
inc
jp
into
hlt
jecxz
lds
xchg
mov
xchg
lret
adc
adc
push
or
cmp
sub
cs
jl
xlat
inc
xor
lcall
adc
movsw
ljmp
inc
jne
jmp
or
clc
pop
sub
repnz
sbb
mov
fwait
hlt
in
mov
cs
mov
out
test
dec
mov
add
mov
add
push
mov
movsl
mov
sbb
movsl
dec
pusha
dec
pop
test
inc
xor
mov
or
sub
scas
mov
ret
jae
xchg
cmp
xor
test
pop
in
inc
xlat
shrb
divb
dec
jmp
dec
or
inc
out
jnp
jmp
stc
xor
fwait
aas
loop
scas
cmp
xor
pop
iret
push
mov
pop
add
bound
pop
mov
in
push
pop
outsl
sub
pop
mov
sbb
cs
mov
dec
sbb
cs
out
xchg
dec
mov
repz
dec
mov
lea
xor
mov
sub
pop
bound
jo
sub
int3
imul
push
mov
test
cmc
ljmp
ljmp
sub
lcall
test
fisttpll
xor
jns
pop
pop
xchg
in
mov
bnd
pop
shrl
ret
idivb
rorl
fldln2
and
xchg
sub
das
and
cmp
jmp
mov
popa
icebp
fmuls
gs
movntq
mov
data16
mov
scas
bound
into
inc
bound
adc
mov
roll
roll
fistps
sub
lock
fidivl
and
std
fnstenv
cmp
jg
inc
sti
mov
or
jl
movsb
pop
mov
xlat
data16
and
fcomip
adc
push
dec
push
orb
mov
pop
push
push
rcr
xor
outsb
mov
push
add
add
sbb
xchg
inc
and
and
mov
mov
pop
dec
mov
dec
dec
mov
out
add
cwtl
fdivl
and
xor
iret
or
scas
es
cmpb
test
cltd
ret
sbb
test
jp
push
cmpsl
iret
inc
xor
dec
lods
pop
lods
mov
rol
jb
jbe
xor
sbb
and
xchg
dec
inc
lea
dec
jnp
mov
clc
xor
pop
stos
xadd
loope
mov
imul
aas
xchg
xchg
dec
xor
enter
cmpsb
jle
and
dec
xchg
and
sub
scas
jno
sahf
lret
pop
sahf
sbb
push
dec
in
add
mov
les
inc
loopne
shrl
jmp
repz
cmp
adc
sub
call
mov
mov
dec
jb
xchg
mov
xchg
add
push
mov
and
mov
in
lahf
jnp
adc
jae
and
ret
push
mov
push
mov
push
mov
fidivrl
sahf
cmpl
add
mov
sbb
cmp
cmp
cmp
inc
pop
lock
jns
xchg
and
dec
js
mov
ja
out
pop
ja
adc
and
mov
xchg
divb
cmp
xchg
or
das
lahf
sub
push
jb
fmuls
jp
inc
adc
jb
out
int
pop
lods
pop
inc
icebp
mov
ds
mov
fwait
jg
movsb
fdivr
shl
and
and
pop
mov
mov
sarb
jno
stos
and
ja
sbb
cmp
pushf
add
pop
loopne
xchg
mov
daa
stos
shll
xor
xchg
adc
sbb
movsb
add
leave
xchg
cmpsl
mov
insb
cltd
jge
cld
test
dec
inc
jge
les
jno
jo
mov
pop
cmp
movsl
fcompl
jbe
addr16
mov
bswap
sub
jg
cmpsb
mov
push
sbbl
cs
pop
int
popa
popa
push
addr16
cmp
stos
cld
bound
pop
jge
shlb
rcll
out
popf
mov
push
in
dec
fcomps
outsb
push
xchg
lea
call
in
insl
pop
mov
pop
loop
mov
adc
mov
jge
cli
outsb
fsubl
out
pusha
ds
cmp
fmull
xchg
inc
in
mov
stos
add
mov
test
out
js
sbb
jb
repnz
fisubrl
lds
insl
push
outsb
dec
jmp
sahf
cmp
xchg
cld
mov
dec
ds
bound
push
popl
movsb
adc
and
pop
pop
in
inc
mov
icebp
scas
lods
jno
xor
outsb
and
adc
in
xor
loopne
repz
gs
adc
iret
adc
mov
ja
in
cmpsb
mov
jns
and
sbb
cmpsl
imul
jge
sti
js
data16
mov
in
test
push
adc
lret
jbe
es
lods
outsb
mov
inc
adcb
rclb
int
mov
movsl
das
test
sub
ljmp
sti
test
push
and
mov
xchg
push
xchg
push
mov
and
pop
mov
std
push
in
mov
mov
mov
es
dec
movsb
repz
mov
int
fisttpll
addr16
inc
sbb
mov
cmp
pop
test
pop
in
pop
xor
add
aaa
sahf
stc
ror
xchg
add
pushf
mov
outsb
sub
pop
sub
jp
mov
js
popf
mov
into
push
pop
insb
std
jb
clc
sete
xor
jle
cmp
dec
out
or
xchg
jecxz
loopne
mov
cmp
mov
int3
hlt
leave
ficoml
jbe
movsl
sbb
rorl
dec
dec
out
sbb
ret
pushf
repnz
add
push
ljmp
hlt
sahf
mov
rsm
inc
int3
stos
sbb
pop
xchg
xor
fstps
fmuls
mov
and
addb
fisubrl
ffreep
or
xchg
mov
jnp
mov
jecxz
jnp
lock
push
mov
adc
sub
lret
and
pop
push
push
outsb
repz
dec
subb
add
das
mov
mov
fadds
dec
mov
xchg
fistpl
roll
xchg
jge
lds
mov
mov
out
xor
dec
or
adc
sahf
push
mov
xchg
dec
xchg
dec
dec
xchg
mov
leave
or
rep
mov
test
imul
push
mov
orb
xor
xchg
or
jp
push
lea
scas
pop
rorb
in
push
jge
xchg
mov
dec
jge
sub
pop
insb
mov
or
lods
mov
dec
inc
pusha
or
push
xchg
fdivrs
sahf
push
add
mov
std
fldt
cmp
loop
gs
stos
xor
adc
cmc
test
in
add
adc
mov
movb
fdivrs
mov
dec
inc
repnz
adc
xchg
cmp
dec
sub
stc
xchg
xor
xchg
push
int
jle
mov
ret
into
outsl
dec
push
pop
das
hlt
cmc
xor
cmpsb
cmp
cmp
stc
sti
daa
xchg
jns
mov
push
inc
ficomps
imul
ljmp
fcomp
loope
cmp
inc
fstps
icebp
rcrb
and
ret
mov
xor
jge
out
sbb
add
aaa
and
cmpl
lret
scas
sbb
call
adc
xchg
jge
xor
adc
insb
decb
push
insl
jno
cmp
out
inc
mov
mov
xchg
inc
mov
lds
mov
mov
mov
add
sub
or
and
push
sub
jb
sahf
int
lahf
aam
out
xor
repz
int
xchg
mov
add
xlat
cwtl
hlt
adc
xor
sub
ffreep
mov
jno
icebp
clc
xor
inc
es
sti
pusha
xchg
loop
xorb
call
xchg
popa
jmp
xchg
movsl
lods
and
into
loop
dec
adc
add
fcomps
popf
push
cmp
jp
jp
xchg
sti
inc
sub
hlt
xchg
pop
lock
js
sub
dec
or
adc
lods
ljmp
std
clc
fnstsw
xor
sbbb
add
shr
aaa
aam
mov
or
je
rcrl
fdivrp
outsl
mov
jge
cmpsb
jp
dec
rol
test
jle
lea
mov
adc
pushl
and
mov
inc
jbe
inc
or
mov
sub
dec
bound
jl
xor
pop
add
shl
and
mov
mov
call
data16
pop
adc
mov
cmp
or
enter
adc
lcall
test
pop
les
dec
jg
push
jp
xchg
rolb
push
cli
in
divl
xor
fnstsw
push
or
ljmp
ja
cmp
insl
push
cmp
nop
push
sub
lret
dec
pushf
test
subl
push
sub
daa
push
or
les
or
scas
adc
call
adc
mov
add
inc
inc
lret
xor
adc
mov
popf
push
mov
mov
lret
xchg
xor
sbb
subl
stc
ret
pop
into
pop
or
or
lea
jl
stc
repnz
addl
mov
ds
jmp
add
stos
cmpsl
mov
lock
push
pop
notl
call
fsubrp
or
cwtl
sbb
fcmovnu
xchg
or
jmp
outsl
sbb
dec
aam
scas
adc
adc
into
mov
fs
add
xchg
fwait
inc
cmp
orl
out
mov
mov
xchg
das
and
daa
mov
cmc
cmpsb
ror
or
push
adc
aaa
movsl
pop
mov
mov
jmp
shll
andl
adc
mov
aas
add
pop
inc
push
mov
jecxz
hlt
mov
stc
inc
das
add
mov
clc
jmp
outsl
arpl
loopne
das
data16
and
or
jns
adc
cmp
fisubs
fwait
test
sbb
xor
inc
push
xchg
out
sub
mov
neg
mov
stos
mov
stos
popa
jno
push
imul
mov
push
xchg
test
cmovle
and
pop
into
add
adc
inc
push
push
into
insl
lods
pop
add
inc
decl
xor
loopne
fsts
lds
xchg
xor
test
fimull
aad
pop
lahf
and
mov
sbb
nop
mov
negl
push
push
inc
push
pop
jl
stc
lahf
xchg
mov
dec
das
push
pop
pusha
xchg
loopne
or
push
call
test
lods
inc
jmp
jne
dec
and
xor
xchg
xor
pop
lea
sbb
mov
test
or
xor
inc
push
jb
dec
faddl
rcrb
js
mov
cmp
in
in
clc
push
scas
xchg
jg
js
dec
add
mov
je
lea
xchg
adc
pop
xchg
cmpsl
je
rclb
adc
pop
sub
pop
ja
or
hlt
push
mov
sub
testb
mov
cmc
sbb
insl
test
aad
jecxz
das
pop
ds
add
xchg
mov
xchg
adc
aad
xor
cs
sub
jmp
aam
insl
int3
lods
daa
cmp
ret
mov
lea
mov
fcmovnb
in
popa
in
push
popa
lds
add
push
adc
cmp
push
sbb
xchg
fsubr
sbb
popf
inc
xor
pop
sahf
push
clc
cmp
test
mov
or
mov
popf
mov
pop
dec
std
lret
daa
ror
adc
fmuls
loopne
dec
xor
push
jg
push
pop
or
iret
xchg
icebp
and
lret
int3
push
shll
and
add
jecxz
test
enter
mov
insb
xor
and
xchg
push
pop
movsb
in
xchg
daa
jecxz
daa
imul
sarb
mov
xchg
in
lahf
xchg
xor
push
fbld
mov
pop
jle
mov
mov
std
loop
jp
bound
daa
test
arpl
loope
xchg
mov
aam
loopne
outsb
or
daa
push
jg
xchg
xchg
and
mov
aaa
iret
xor
test
adc
jnp
push
aaa
or
and
jnp
aad
inc
jnp
dec
xlat
jle
cmp
loopne
out
add
or
sbb
mov
mov
jno
xchg
rorb
mov
dec
test
and
mov
sbb
stos
sbb
sti
test
leave
push
sahf
popa
fldt
mov
movsb
icebp
mov
pop
mov
xchg
bound
push
xchg
ds
pop
lahf
sub
xchg
aam
in
fwait
mov
into
fs
jmp
cli
ja
mov
rcl
or
mov
fs
dec
adc
pop
addr16
in
mov
mov
xchg
repz
movsb
inc
test
sub
enter
les
stos
cltd
insl
jae
xchg
inc
jecxz
out
or
ss
push
psubusb
inc
and
sti
mov
cwtd
add
cs
adc
sbb
sbb
jp
mov
dec
jno
fwait
int
mov
aas
fists
enter
stos
inc
mov
xchg
les
inc
incl
pop
aam
and
mov
xchg
ret
dec
rolb
xor
and
ret
test
aad
enter
push
pop
jne
dec
or
and
cli
jnp
fs
jbe
mov
out
xchg
adc
dec
clc
cs
xchg
push
mov
mov
scas
cmpsl
pop
sarl
aaa
scas
nop
cld
mov
jmp
clc
in
mov
mov
outsb
movl
push
push
daa
mov
std
sahf
mov
rol
xor
mov
push
mov
cmp
hlt
mov
xchg
push
je
xchg
lods
or
pop
fstpt
mov
ror
sahf
mov
jnp
xor
mov
inc
inc
adc
fisttpl
sub
sbb
lahf
adc
mov
setno
es
push
das
fcmovbe
jbe
mov
xchg
popa
cmpsl
or
repnz
fstpt
sbb
lahf
inc
bound
out
push
add
and
mov
xchg
sbbl
out
sbb
bound
lods
jno
gs
aas
sub
pop
add
scas
cmp
add
cmp
lea
aas
mov
mov
fmul
lds
and
shrb
adc
sub
sarb
test
pop
repnz
mov
jle
and
jl
ljmp
testl
pop
dec
inc
sti
sub
idiv
and
cld
and
jno
xchg
xchg
pop
in
int
movsl
mov
cmp
inc
adc
out
pop
sub
add
aad
les
out
pop
adc
cltd
mov
mov
xchg
cmp
push
bound
lock
cltd
add
mov
xchg
mov
sahf
push
inc
aam
scas
jb
cwtl
out
pop
inc
faddl
adc
clc
mov
adc
je
push
pop
cli
inc
inc
sahf
add
insl
jp
and
mov
std
xor
pop
aam
shll
aaa
push
sbb
jg
or
cld
cwtl
mov
xor
sub
ljmp
aas
push
mov
push
mov
lahf
cmp
xchg
push
sub
out
fstpl
fimuls
jl
out
sbbb
push
mov
push
out
dec
jae
dec
gs
out
repz
add
xor
xor
in
fisttps
mov
movsb
ret
ss
jb
mov
xor
xor
jb
push
scas
call
cmp
mov
and
mov
pusha
aaa
sub
loop
pop
jg
adc
lods
sbb
jnp
fsubrl
add
mov
pop
call
sahf
movsb
pop
test
add
nop
jg
test
outsl
mov
movsb
shlb
jne
add
jle
pop
jnp
add
xchg
movsb
sub
cmp
mov
xor
int
xor
fcomi
or
in
xor
push
sahf
add
loop
popaw
mov
mov
sub
lret
scas
divl
mov
xor
imul
sahf
mov
cmc
orl
cwtl
sbb
cmp
push
push
jge
and
sahf
or
shl
mov
sub
dec
dec
out
push
cwtl
js
fcmovb
lea
xchg
xchg
bound
cmpsl
and
repnz
ja
fildl
sub
adc
fwait
movsb
adc
imul
mov
sbb
outsb
js
in
fsubr
mov
push
lods
repz
jbe
stc
xor
sbb
mov
enter
scas
sbb
ljmp
push
repz
mov
in
or
and
stc
xor
rcr
push
push
inc
pop
lods
stos
ret
mov
xor
jno
out
xchg
roll
imul
mov
das
filds
outsl
movsl
arpl
arpl
cmp
sub
aaa
mov
dec
pop
aaa
cld
mov
xor
addr16
fistl
loop
popf
out
add
add
bound
mov
lret
ljmp
insb
and
xor
xchg
hlt
iret
outsl
aas
mov
xlat
or
pop
sub
sti
outsl
fbstp
dec
pop
cwtl
sub
pop
test
int3
loope
add
pop
lahf
in
fdivs
cmp
inc
xchg
cmp
sub
repnz
sti
aaa
or
in
rcl
sub
out
dec
cmp
cld
scas
out
pop
or
scas
cmp
daa
movsb
adc
mov
mov
or
and
out
sti
mov
pop
add
mov
es
xor
outsb
nop
adc
cld
arpl
xor
xor
xor
xchg
xor
lea
inc
dec
mov
sub
dec
push
imul
jecxz
pop
mov
jno
push
cltd
lock
es
movsl
leave
sbb
movsl
mov
mov
push
and
enter
and
jae
test
hlt
dec
mov
add
int3
inc
out
and
lods
mov
shll
mov
fucomip
push
fisubrl
scas
xor
imul
aam
repnz
pop
enter
pop
sbb
insl
test
test
pop
addr16
cwtl
push
in
les
lods
mov
js
out
inc
in
shlb
loopne
loope
lds
loopne
dec
xor
xor
pop
addr16
loope
pop
mov
push
ljmp
mov
pushf
movb
out
inc
aas
or
and
shll
mov
push
xor
adc
adc
outsb
icebp
pop
mov
pop
or
sbb
or
and
popf
add
dec
shll
rcll
frstor
mov
pop
dec
dec
inc
jmp
orb
mov
cmp
mov
stc
lret
adc
sbb
lahf
or
shlb
stos
bound
pop
mov
cmpsl
mov
sub
xchg
fistpl
sbb
mov
pop
xor
push
pop
add
xor
inc
loop
enter
shl
sbb
imul
imul
inc
pop
outsl
addr16
out
outsl
sbb
mov
xor
xchg
adc
and
mov
insb
nop
sahf
pop
xchg
inc
pop
rorl
repz
xchg
pop
xchg
loopne
addr16
sbb
les
bound
pop
jae
and
lea
dec
pop
pop
xchg
xchg
rclb
int3
xor
movsl
push
or
enter
mov
dec
xchg
mov
test
insl
shrb
pushf
mov
cli
lds
lretw
mov
pop
push
ret
xor
xor
adc
pop
push
ffreep
jl
cmp
lahf
test
mov
pushf
daa
lret
sub
dec
xchg
xchg
sbb
aaa
push
stos
push
push
filds
notl
das
jp
jne
es
push
xor
fdivrp
sbb
mov
xchg
dec
mov
and
inc
jne
sub
mov
mov
bound
pushf
movsb
mov
mov
add
cli
rol
push
sbb
cmp
in
adc
pop
loopne
shlb
adc
loopne
js
add
sbb
mov
cmpsb
lock
dec
pop
dec
mov
idivl
add
jns
jnp
insb
clc
push
testl
mov
ficoml
add
in
add
mov
jne
pop
cmc
jge
sbb
mov
inc
sub
pop
sub
outsl
jo
shll
mov
fwait
and
add
pop
jae
mov
xchg
loopne
iret
stos
jg
movsb
es
loopne
add
stc
and
pop
or
mov
insb
push
push
jge
int
notb
xchg
mov
push
xchg
jnp
mov
mov
push
jno
call
jbe
test
stos
cli
push
lar
mov
fs
add
mov
setb
inc
sbb
jno
pushf
fstps
mov
mov
popa
int3
add
add
cmpsb
das
jge
cmpsb
and
adc
sub
stc
inc
mov
push
sub
loop
mov
les
and
iret
repnz
popf
mov
inc
fcmovnbe
das
sahf
notb
jae
fimuls
ss
xor
jl
or
cmc
xor
std
jo
mov
cwtl
loop
sbbb
xchg
ret
scas
pop
dec
xor
out
cmp
add
sti
and
stos
push
push
push
inc
outsb
pop
sbb
repz
cmp
test
subl
lahf
scas
xchg
orb
sub
stc
adc
inc
pop
cld
sbb
stos
lret
push
lahf
testl
faddl
mov
call
sbb
jns
nop
sarl
stc
dec
sbb
xorl
push
jb
add
xor
test
fimull
out
imul
sbb
inc
xchg
ret
add
loope
out
pop
lods
daa
sahf
jnp
xorb
xchg
inc
psrld
mov
js
push
ss
cmp
push
cwtl
sub
jmp
pop
aaa
in
add
pinsrw
incl
scas
cmp
int3
sub
pop
sub
adc
fnstenv
xor
stc
push
push
mov
cli
mov
test
push
lahf
sub
jle
in
or
push
mov
mov
aad
and
jmp
sbb
mov
xchg
push
dec
std
pop
push
sub
mov
gs
in
or
cltd
nop
xorl
sub
jns
jg
jmp
popa
pop
loope
xchg
cmp
push
push
roll
or
gs
mov
fidivs
movsb
mov
pop
out
pop
or
movsl
add
int
scas
sarl
in
fdiv
dec
mov
sub
fsubrl
jg
out
addr16
aad
jp
lea
mov
sub
or
aas
test
int
push
jmp
or
push
lods
std
test
mov
pop
or
push
in
adc
cmp
stos
sbb
mov
mov
xor
insl
pop
or
pop
into
dec
enter
pusha
jge
int
cmpsl
loopne
lahf
mov
fucomi
nop
mov
ret
push
jb
inc
dec
cmpsb
es
mov
movsl
ret
adc
mov
sub
xchg
filds
push
sub
adc
int3
pop
add
add
insb
negl
or
cmp
push
leave
jge
lea
sub
mov
sarl
leave
notb
ret
and
aaa
xchg
arpl
pop
push
adc
cmp
test
xchg
js
stos
out
lahf
cld
mov
cltd
test
sahf
xlat
cmpsb
lret
scas
leave
adc
jno
xchg
fdivl
sub
in
sbb
pop
leave
insb
lods
loopne
mov
jns
xor
pop
mov
movl
stc
mov
loope
stc
incb
cmp
jp
test
mov
mov
in
mov
jb
xor
sbb
cmp
divps
daa
repnz
mov
imul
popf
in
mov
inc
jo
pop
lods
jmp
sahf
pushf
and
cli
mov
data16
ss
lcall
nop
and
sbb
inc
jo
inc
push
mov
jb
adc
add
dec
jns
fsubrl
push
int
in
rolb
test
repnz
inc
lahf
and
and
fcomps
pop
inc
adc
adc
and
inc
add
push
sub
arpl
into
push
idivl
or
das
jns
push
xchg
mov
sbb
call
add
and
cltd
xchg
cli
and
addl
ja
pop
dec
push
push
xchg
cmp
ljmp
fnstsw
or
inc
stc
test
insl
sbb
int3
inc
or
aad
movsb
fs
int
and
sahf
daa
xchg
xchg
xor
out
pop
repz
repz
mov
clc
jmp
lcall
push
inc
add
cli
xchg
imul
xchg
xor
add
adc
dec
and
test
cmp
enter
dec
xor
stc
pop
sbbl
cmp
outsl
pop
shrl
pop
sbb
fs
loopne
xchg
stc
faddl
rclb
and
lret
add
push
cwtl
or
fmul
push
jmp
push
cmp
mov
idivl
icebp
loope
jge
lahf
add
xchg
or
fwait
cmp
popa
fiaddl
pushf
inc
pop
pushf
enter
movsb
jne
dec
mov
mov
popa
icebp
into
stc
cmp
stos
lods
les
les
loope
add
stos
pop
out
mov
adc
fisttpl
mov
mov
sbbl
push
rclb
jnp
outsb
inc
aas
lock
inc
jmp
xchg
push
popa
push
jae
dec
mov
pop
inc
arpl
repnz
lods
icebp
add
xor
jo
add
dec
lock
jb
push
out
jle
test
xlat
push
rcrl
ss
movsl
das
rol
jle
xor
imull
adc
clc
int3
xchg
pop
outsl
loopne
sbb
and
inc
adc
mov
lock
leave
mov
or
sbb
mov
lret
fsubl
mov
xchg
arpl
insb
enter
push
or
xchg
inc
fwait
push
mov
pop
xchg
mov
jno
adc
dec
stos
sahf
inc
daa
push
rcll
loopne
push
pop
mov
imul
inc
inc
or
shrl
dec
data16
jp
and
inc
pop
mov
mov
xor
testl
and
addr16
mov
push
outsl
int
cmp
sti
lds
sub
sbb
repnz
pop
fidivrl
inc
fstpl
pop
xchg
in
xor
lods
cmp
test
add
aaa
hlt
ret
dec
les
mov
pop
fldcw
cmp
jmp
add
push
rcl
xchg
mov
iret
sbb
mov
pop
hlt
les
dec
pop
lret
icebp
jno
stos
adc
mov
fiaddl
inc
and
jge
rorb
adc
nop
sti
stc
inc
add
xor
xchg
cli
push
jle
int3
scas
mov
pop
xchg
or
xor
xor
xor
pop
push
adc
mov
jl
add
cmp
in
lret
xor
popa
dec
and
mov
pop
jge
pop
out
mov
sti
in
xchg
js
push
mov
xchg
xchg
jge
stc
or
push
cmp
pop
mov
pop
jae
lds
pop
jno
cld
mov
fcoml
outsb
lret
sub
loope
movsb
pop
adc
adc
fbstp
les
pop
adc
sub
arpl
in
out
push
sbb
cmpsb
cmp
mov
shrb
test
dec
stc
fwait
cmc
in
leave
andb
popa
pop
in
test
adc
bswap
push
mov
pop
jge
pop
in
sub
int3
sti
inc
mov
and
pop
push
les
sub
cmp
inc
insl
addr16
arpl
shll
add
mov
js
loop
mov
dec
mov
jg
sti
jl
stos
jg
jns
stc
sti
sbb
dec
mov
test
daa
imul
enter
xchg
pop
movsl
cmp
pop
les
stc
sub
xor
movsb
mov
mov
inc
aam
mov
mov
dec
sahf
mov
cmp
cmp
pop
and
insb
or
int3
subl
fscale
xchg
jp
sub
jbe
cwtl
or
enter
or
shll
loop
pop
popf
pushf
test
out
pop
out
sti
xchg
mov
xorb
pusha
or
inc
imul
ret
je
test
loopne
mov
and
fisubs
adc
sub
cmpsb
push
inc
fwait
cmp
mov
inc
sbb
popa
sbb
das
jbe
stos
popa
divl
ljmp
mov
dec
aad
cmp
lret
mov
insb
jl
jmp
rcrl
cli
shl
dec
and
sbb
pop
jge
cmpsl
push
mov
movsb
mov
pop
aas
lret
and
or
mov
in
cmc
push
insb
fdivs
inc
int
setb
fwait
mov
mov
outsb
pop
cli
hlt
lret
dec
fcmovb
pop
stos
dec
xor
sbb
jecxz
out
in
repz
push
jmp
inc
or
rolb
sub
push
push
mov
mov
rcrl
fstpt
and
imulb
cs
addr16
dec
cli
mov
pop
cmpps
mov
add
addr16
subb
lret
cmp
mov
pop
mov
adc
push
mov
aad
jge
loop
mov
xchg
enter
mov
inc
cmp
outsl
ret
xchg
daa
xchg
xchg
cli
pop
mov
xchg
int
insb
scas
mov
popf
fndisi(8087
cwtl
movsl
mov
aad
aaa
lret
cmp
lcall
das
mov
sahf
sti
sub
pop
sub
add
lea
fstpl
fisubrs
dec
jle
cmp
jg
mov
arpl
add
in
loope
push
adc
cmp
cmp
out
repz
xlat
adc
loop
gs
nop
cmp
stc
je
jg
adc
out
je
cmp
xchg
aas
mov
dec
or
push
leave
mov
lods
scas
add
mov
xchg
jns
cmp
pop
loopne
ljmp
adc
dec
fistpll
shrb
imul
enter
lahf
cmp
dec
test
cs
sub
orb
mov
xor
ds
adc
mov
push
enter
sar
dec
adc
shr
mov
int3
filds
and
and
cmpsb
cmp
push
stos
sbb
jecxz
pop
les
cwtl
out
add
inc
inc
add
lcall
imul
xchg
cmp
xchg
mov
xchg
push
inc
xchg
rcll
push
out
sub
imul
mov
xchg
inc
dec
mov
fldl
xor
pop
dec
xlat
leave
fsts
adc
or
addb
es
imul
enter
hlt
mov
mov
or
xchg
ret
cld
sti
movsl
mov
inc
lock
test
fsubr
jle
and
xor
js
test
and
sbb
adc
cmp
inc
and
lea
cltd
mov
inc
jecxz
adc
mov
ret
xchg
stos
in
and
mov
push
xor
jge
pop
stc
add
icebp
repz
adc
inc
pop
xor
mov
mov
cmc
faddp
cmpsb
fsubr
mov
jmp
adc
sub
pop
push
lcall
adc
mov
or
shlb
jno
adc
adc
pop
push
mov
fadds
or
popa
inc
lcall
dec
mov
fsubrl
mov
mov
xchg
cmp
xchg
or
outsb
mov
test
adc
jbe
jg
sbb
xchg
filds
and
and
push
push
clc
sub
insl
pop
pop
lods
push
or
pop
test
jecxz
into
das
and
jg
rorl
int3
mov
inc
sub
out
dec
jle
cmp
je
or
scas
ss
dec
into
aad
push
push
leave
xchg
lds
sahf
imul
xchg
nop
inc
lret
fwait
xchg
jno
and
pop
insl
adc
xor
pop
ds
jno
das
les
vmread
pushaw
mov
ss
loope
sub
mov
inc
mov
jmp
into
in
fwait
in
insb
adc
sahf
push
dec
ret
cmp
push
test
sub
pop
mov
xchg
shr
clc
cmpb
jmp
fsubr
inc
mov
mov
inc
mov
xor
cltd
fsubrs
pop
gs
jbe
ret
cwtl
jns
or
cmp
mov
push
mov
dec
and
pop
mov
and
pop
iret
lret
push
iret
shrl
rorb
mov
pop
xchg
xchg
test
sub
mov
in
xchg
rcr
ds
add
add
sbb
xchg
and
int3
loopne
sahf
test
loopne
adc
dec
lcall
js
push
push
cmp
mov
vsqrtss
cmp
jae
jle
ss
sbb
lahf
cvtdq2ps
push
je
dec
pop
shll
jbe
sahf
rcrl
xchg
push
dec
and
incl
pop
nop
jecxz
aas
enter
jmp
pushf
inc
mov
xor
push
fst
test
fs
icebp
push
shll
pop
popf
repnz
mov
ja
inc
push
pop
push
xchg
and
xor
cmp
out
lret
sbb
out
ljmp
xchg
mov
mov
fbld
jne
push
imul
loopne
gs
cwtl
dec
fs
xlat
mov
fucomi
inc
dec
push
cmp
or
adc
aam
mov
call
cmpsl
addr16
jecxz
xchg
or
dec
jmp
sub
mov
shr
push
je
push
jbe
test
lcall
push
leave
and
add
call
aad
in
test
adcb
repz
push
lahf
xchg
jp
pop
cmp
incb
pop
test
sub
popa
or
pop
add
inc
push
mov
in
inc
fldl
es
jb
ds
or
outsl
hlt
push
xchg
icebp
cld
adc
movsl
out
push
imul
cli
hlt
cmp
insl
add
jmp
mov
orb
pop
and
aad
xor
stos
test
and
daa
add
and
mov
push
and
or
aad
cs
mov
insl
inc
in
subl
inc
ljmp
inc
jnp
jge
dec
rcrl
mov
mov
push
cs
repnz
orb
in
adc
fcoml
icebp
lods
clc
cmp
loope
lds
stc
rorl
xor
fs
mov
mov
lret
lods
in
out
out
movl
push
int3
aas
adc
add
sub
adcl
mov
sbb
mov
jmp
and
daa
push
stos
fcos
push
xor
clc
jle
sub
cld
sub
pop
neg
fimull
lock
aam
popf
add
fcmovnbe
adc
subl
push
sti
lods
ret
test
sbb
and
cmp
js
pop
psubb
cmovl
stos
rcl
push
mov
and
mov
popf
pop
or
sub
pop
lret
and
push
mov
jns
or
cmp
pop
lahf
in
jnp
mov
lret
push
das
xor
in
paddsb
and
dec
nop
rcr
push
adc
in
push
stos
cld
outsb
pop
push
int3
add
int3
pop
ret
cmpsb
in
pop
call
cltd
sbb
iret
cmp
test
leave
jmp
nop
in
shlb
gs
jmp
fisttps
ud0
pop
lods
sbb
push
dec
syscall
cltd
test
lcall
pop
ds
push
daa
jno
std
jne
adc
movsb
in
sbb
adc
xor
popf
imul
pop
mov
mov
jg
out
adc
xor
fcomi
jp
dec
sbb
xchg
sbb
repnz
mov
test
add
cmp
xchg
cmp
ret
jb
xchg
pop
movsb
jle
pusha
orl
xchg
add
lahf
addr16
mov
sbb
mov
xchg
int3
dec
mov
add
cmp
mov
and
daa
mov
or
cmp
dec
pushf
nop
mov
das
mov
xor
sub
dec
mov
fwait
lods
sbb
push
fwait
nop
and
and
stos
in
in
test
xchg
push
in
movsl
sarl
in
shlb
sub
sbb
test
icebp
cwtl
jno
lret
lret
mov
daa
cli
insl
lods
mov
push
fdivrs
enter
mov
and
xlat
dec
pop
mov
xor
fsts
adc
scas
repz
xlat
rorb
inc
stos
sbb
std
jns
enter
stc
push
mov
mov
and
xchg
adc
rcll
sub
sbb
enter
sub
icebp
jmp
mov
mov
sub
aaa
mov
jns
jae
shrl
push
or
inc
roll
dec
fstps
xchg
sub
push
outsb
stc
into
sti
es
mov
lds
mov
pop
ja
add
rcl
repnz
xlat
jb
sahf
in
jge,pt
popf
adc
je
insb
xchg
cwtl
mov
cli
movsb
cmc
pop
cmp
ja
pop
sbb
adcb
inc
jbe
fisubs
sub
or
inc
lods
mov
lds
pop
xchg
dec
adcl
neg
outsb
ret
inc
cmp
xor
adc
scas
dec
in
outsb
iret
popa
push
mov
dec
mov
mov
mov
sub
pop
inc
dec
or
jle
jmp
je
mov
fwait
insb
pushf
cmc
mov
push
stos
add
and
mov
jle
icebp
fsubr
in
mov
pop
loop
vmovhps
orb
jge
push
push
cmp
mov
aam
insb
inc
enter
add
xchg
cmp
adc
push
iret
xchg
pop
cmp
xchg
xchg
jbe
cmp
xchg
gs
pop
push
mov
jno
icebp
ret
sti
xchg
bound
sbb
test
out
mov
mov
mov
ficomps
add
sbb
xor
xchg
xchg
movsl
dec
mov
and
fistpl
inc
xor
call
cmpsl
sbb
xchg
or
or
rcll
mov
jb
or
inc
push
ss
push
pop
adc
out
hlt
xchg
mov
or
movsl
fwait
loop
fwait
out
pop
inc
mov
lock
das
push
test
ficoml
and
jp
movsb
xor
dec
dec
dec
out
das
xchg
aad
fs
nop
and
cmp
ss
enter
test
nop
insb
fwait
gs
lods
bound
pop
xor
fisubrl
sub
jmp
xchg
mov
outsb
fwait
sbb
sub
add
int3
dec
push
nop
dec
into
jnp
pop
push
push
loopne
xchg
lods
inc
xchg
insl
jnp
inc
push
mov
and
leave
adc
fisttpl
or
xchg
out
jnp
xchg
dec
int
mov
js
jnp
cmp
imul
sub
adc
cmp
cmp
cmpsb
sbb
push
xor
lods
lahf
sub
inc
mov
lahf
imul
mov
scas
xor
sub
pop
mov
adc
jne
nop
ljmp
dec
das
ret
inc
roll
negb
adc
mov
je
dec
adc
sbb
inc
les
mov
ja
lods
adc
mov
dec
das
test
inc
loopne
es
mov
mov
push
je
pusha
insb
filds
inc
addr16
in
mov
stc
out
mov
inc
addr16
push
xchg
inc
dec
cmp
out
std
cmp
inc
ret
cld
cmpsb
clc
aam
loope
cld
lds
movups
adc
mov
add
sarl
mov
and
push
push
cwtl
jns
or
push
cli
dec
loop
test
cmp
ds
or
xlat
iret
imul
sbb
or
stc
imul
out
pop
xor
pop
push
sbbl
dec
push
in
jp
mov
imul
sahf
or
out
or
mov
and
push
jo
int3
arpl
cmc
adc
sbb
insb
aaa
data16
mov
jae
cmp
xor
shll
sbb
jbe
and
jns
jmp
adc
mov
fcmovnb
outsb
sarb
rcrl
xor
inc
stos
dec
dec
mov
in
dec
xchg
shll
add
outsl
mov
jnp
inc
sub
loop
jp
mov
repnz
lods
outsb
and
loop
lock
ret
inc
mul
fistpl
inc
pop
mov
xchg
out
sbb
inc
dec
mov
dec
add
xor
push
xchg
lods
cmp
int
stos
push
fwait
jb
bound
xchg
lret
cmp
sbb
jb
sbb
mov
push
or
out
hlt
int
jo
subb
pop
mov
and
adc
cmc
hlt
fsubp
call
sub
or
dec
push
fstp
icebp
push
xchg
pop
xor
ja
xchg
mov
xor
jmp
clc
mov
sti
adc
push
jp
addr16
ror
lret
push
add
subl
mov
movsl
out
lds
notl
inc
stos
arpl
push
mov
adc
int3
mov
inc
xchg
pop
loopne
cmp
in
ja
fsubrs
je
in
enter
aas
sub
mov
push
xor
icebp
xchg
ljmp
stc
sbb
int
les
mov
dec
pushf
dec
dec
xchg
sbb
int3
mov
mov
jno
aas
mov
inc
outsl
mov
shl
cmp
ss
fwait
andl
stos
negb
lea
cli
pop
xchg
mov
inc
das
movsb
and
xor
add
mov
cmpsb
enter
lahf
push
out
cmp
sub
push
push
loop
jb
or
lcall
and
and
sbbl
addr16
mov
mov
ljmp
inc
es
test
or
sub
aam
popf
aas
inc
xchg
push
mov
jno
and
lds
movsl
ja
stos
test
mov
sbbl
enter
cmpsb
scas
hlt
jnp
imulb
mov
mov
jmp
cs
cld
movsl
fisttps
jmp
int
in
push
mov
js
out
inc
dec
xlat
cli
push
mov
sbb
push
xchg
repz
arpl
jl
jo
sub
rcll
adc
test
in
out
lret
dec
lahf
imul
sub
sbb
outsb
loop
mov
pushf
cmp
mov
jge
nop
xchg
xchg
aaa
fisttps
negb
loope
stc
movsl
imul
in
mov
dec
call
push
outsb
xchg
pushl
xchg
pop
push
shr
je
push
xlat
rolb
loope
jnp
jmp
push
dec
mov
push
jge
sub
pop
cmp
push
inc
mov
mov
movsb
jle
cmp
imul
pop
pop
jne
aad
adc
dec
and
mov
xchg
sarl
test
mov
dec
test
adc
lds
es
push
push
cmp
sbb
test
fnstcw
sahf
imul
and
xchg
cmp
or
into
xchg
push
inc
and
xchg
add
fs
mov
add
arpl
xchg
mov
jnp
outsl
add
and
lcall
sarb
lds
pop
cmp
pop
insl
sbb
inc
lret
sub
cmpl
mov
jecxz
jp
add
lret
movsb
xchg
pop
inc
xchg
cmp
aam
add
jge
xor
outsl
fwait
jns
out
sub
pop
addl
mov
inc
repz
or
xchg
popa
xlat
inc
jmp
and
fwait
repnz
data16
enter
sbb
cld
out
add
mov
js
rolb
add
mov
xchg
neg
loop
xor
inc
bound
outsl
sti
clc
xchg
popf
ret
andb
push
in
test
adc
std
scas
xor
popf
sub
je
in
cmp
and
mov
jbe
mov
lock
adc
mov
imul
adc
xor
xlat
out
push
cmpsl
movsl
mulb
scas
fdivrs
jmp
repz
mov
mov
loope
inc
stc
push
in
div
push
jecxz
out
and
adc
pop
sub
mov
nop
mov
adc
outsl
adc
out
pop
jbe
jns
mov
or
movsl
shll
sbb
and
pop
jl
pop
data16
jmp
sbb
xchg
mov
fbld
std
scas
pop
sbb
outsl
inc
xor
in
inc
in
mov
jno
bound
ds
test
or
adc
out
fcmovnb
inc
adc
jne
in
shl
test
add
jne
mov
into
jle
out
sbb
movsb
xor
lods
push
test
push
fldcw
push
movsl
popf
add
add
shl
add
push
popf
cmpsb
ficoml
inc
pushf
inc
adc
pushf
and
cmpsb
xorb
inc
insb
mov
xchg
sti
hlt
push
cli
xor
adc
mov
xchg
loopne
in
popf
insl
outsl
jb
out
push
cwtl
xor
inc
inc
stc
mov
and
xchg
or
int
out
xchg
mov
cmc
test
adc
outsl
sub
mov
and
cltd
call
cmpsb
rcl
daa
out
xor
push
pop
pushf
sub
pushf
bound
cmp
movsb
ljmp
in
cltd
xlat
out
jo
sbb
push
inc
fbstp
out
mov
scas
cmpsl
outsl
mov
arpl
fbld
fwait
xchg
or
cmp
ror
mov
xchg
jecxz
push
xor
and
mov
leave
or
mov
and
shll
in
mov
dec
xchg
xor
in
iret
data16
push
dec
dec
fucomip
xlat
ss
sbb
cmpb
pushw
xor
jp
cmc
mov
into
pushfw
jns
push
test
int3
setp
jg
inc
fisttpl
jg
xchg
outsl
xor
rorb
sbb
mov
in
loopne
add
je
xor
das
push
aaa
or
dec
std
jmp
gs
xor
add
in
pop
imul
test
testl
jae
inc
xlat
sub
mov
push
mov
sub
ret
lock
mov
popa
push
push
push
push
cmc
and
hlt
movsl
pushf
das
xchg
add
pop
testl
cmp
out
lret
jge
cmc
scas
fdiv
sahf
add
or
enter
test
stos
lods
shl
cld
sub
js
xor
push
jb
fcoml
out
cltd
add
push
pop
gs
jb
and
pop
ret
lea
decl
xchg
inc
es
xchg
lods
popa
xor
xor
cmp
xchg
dec
inc
clc
add
pop
sub
hlt
dec
cmpsb
inc
das
fdivrp
sahf
and
push
orl
leave
cli
popa
inc
and
ret
push
pushf
xchg
jmp
jl
dec
nopl
fsubs
decl
sbbb
cld
lea
mov
cld
dec
cmp
pop
jno
or
inc
pop
mov
psubb
sti
lods
add
pusha
pop
cmpb
add
push
mov
cwtl
add
xchg
rorb
je
cwtl
repz
shrb
test
loopne
push
dec
jp
mov
lahf
mov
rorb
movsl
and
mov
cmp
pop
cmpb
aas
sbb
mov
sbb
movb
push
rcrl
ret
repz
daa
mov
inc
add
in
pop
cwtl
daa
fists
push
ja
std
push
dec
jg
cmp
int3
daa
dec
ljmp
jl
stos
sbb
fisttpll
sbb
inc
sbb
js
push
aaa
adc
bswap
pusha
nop
inc
jmp
pop
nop
mov
mov
jmp
xchg
flds
jb
cwtl
mov
mov
lahf
sbb
mov
pusha
jae
jo
jns
stos
cltd
ljmp
jecxz
add
push
clc
add
add
bound
pop
aaa
dec
xchg
mov
and
push
sub
xchg
lcall
mov
sbb
push
pop
je
or
xchg
int
adc
inc
stc
push
adc
inc
lods
and
pop
adc
push
lock
push
shlb
jmp
inc
into
scas
xor
push
inc
leave
enter
push
push
or
pcmpeqb
aas
sbb
push
loop
jge
aad
cmp
aas
scas
add
outsl
and
mov
insb
mov
and
adc
and
in
js
push
sbb
jg
js
popf
pop
push
cmpb
ret
es
and
or
xchg
adc
fbstp
and
sub
or
mov
stc
sti
pop
or
mov
push
andb
sbb
or
cmc
and
jno
and
jb
push
in
jbe
jno
dec
and
sub
jmp
out
sbb
add
adc
fs
aam
sub
push
leave
cwtl
outsb
push
xor
xchg
mov
insl
aaa
das
or
mov
pop
jb
pop
cwtl
pop
mov
in
jb
out
mov
test
rolb
mov
or
xchg
sub
pop
push
mov
xor
shlb
rcll
sub
addr16
imul
dec
stos
cmpsb
pop
rep
xorb
nop
dec
shll
mov
xchg
xchg
jbe
dec
mov
cltd
movd
dec
sbb
and
aad
mov
push
mov
push
cmpsl
rcrb
dec
std
movsl
inc
hlt
aaa
fstps
pop
adc
call
arpl
push
mov
out
xchg
push
push
test
add
mov
and
out
test
mov
pop
lods
xlat
dec
lds
dec
ds
jnp
dec
xchg
inc
mov
xor
inc
icebp
lock
dec
fbstp
xor
xchg
xchg
aas
push
call
in
sub
stos
and
push
inc
jp
mov
fcmovb
xchg
jno
testb
shl
xchg
in
lds
and
scas
sub
repnz
stos
jecxz
enter
pop
push
jp
jo
ds
daa
adc
sbb
into
dec
jecxz
cmp
test
push
cmp
ljmp
push
inc
push
pop
repz
fmull
test
iret
pop
xor
push
aaa
cs
leave
test
jp
and
icebp
popa
out
loop
sbb
pop
clc
outsb
lret
and
shr
adc
jnp
inc
jne
lock
popa
jmp
adc
pop
lods
inc
mov
xchg
out
outsb
popa
dec
adc
adc
int3
imul
pop
push
mov
scas
into
lret
das
cmpsb
scas
fisttpl
ret
lods
mov
cmp
mov
jae
int
std
mov
mov
mov
iret
testl
aad
cmpsl
and
mov
add
xchg
jno
stc
pop
or
ja
test
jge
xchg
leave
dec
pop
call
movsb
icebp
inc
arpl
addb
inc
push
popa
sti
pop
pop
in
pcmpeqw
pusha
aad
jl
ficoml
jle
adc
ret
ljmp
jbe
push
jb
pop
and
jns
xor
lock
sbb
les
jmp
push
rolb
cmpsb
xchg
jne
mov
mov
or
add
pop
push
call
out
sbb
scas
dec
jge
xchg
adc
mov
fisttps
jge
push
jne
stos
push
jo
cmp
pushf
inc
sbb
mov
lds
pop
sbb
je
pop
mov
dec
xchg
movsb
scas
xchg
mov
mov
pop
pop
mov
xor
stos
fstl
cmp
das
pushf
aas
jge
and
push
sbb
lret
sub
mov
movsl
bound
mov
mov
lods
fildll
xor
cwtl
or
lock
hlt
out
add
ss
mov
outsl
pop
add
dec
pop
mov
xchg
jo
adc
pop
leave
dec
jecxz
push
inc
mov
or
mov
jno
aam
push
test
and
inc
sub
adc
cmp
popa
mov
mov
lods
mov
gs
pop
test
insl
ret
mov
test
aas
push
cs
repnz
fistpl
and
ret
loop
push
or
pop
push
aad
xor
mov
mov
and
test
xchg
stos
push
or
shlb
loope
hlt
mov
ret
or
and
push
dec
outsb
pop
and
ret
mov
jbe
stc
or
incb
call
lods
xchg
in
lock
inc
inc
pop
mov
dec
mov
push
mov
ret
outsb
movsl
cmpsl
mov
jmp
cmp
xchg
shll
sbb
into
dec
xchg
pop
leave
test
scas
sub
mov
lcall
imul
shrl
jle
int3
jae
jecxz
mov
pop
cli
adc
ret
test
cmpsb
push
adc
rcrb
push
push
add
xlat
dec
dec
repz
hlt
adc
cmpsl
pop
fwait
ret
leave
mov
mov
dec
push
cmp
jmp
cmc
aam
les
xchg
out
jecxz
clc
push
repz
shll
lods
into
repz
jle
sbb
js
sbb
inc
outsl
xor
sub
stc
add
jmp
leave
xor
pop
and
test
pop
fmuls
fistpll
lods
add
mov
pushf
jbe
scas
mov
cltd
sarb
dec
xor
lods
jnp
sub
sub
xlat
sub
inc
fidivl
mov
adc
lahf
bswap
test
jge
popf
lods
rorl
pop
lock
jg
sbb
scas
insb
sbb
pop
xor
cltd
xor
inc
push
sbb
cli
clc
mov
cltd
jo
cmp
scas
mov
fcoms
add
out
or
or
inc
insb
pop
add
adc
pop
cwtl
pop
sbb
mov
arpl
test
stos
pop
roll
xchg
cli
sub
dec
scas
cs
pop
nop
mov
adc
push
jmp
mov
imulb
mov
push
push
in
xchg
test
iret
insl
inc
in
aad
or
sub
iret
in
inc
lcall
add
and
adc
xor
mov
int3
add
ret
pop
mov
cltd
inc
xchg
jnp
jecxz
das
aam
mov
lods
jmp
in
mov
xchg
aam
mov
xor
pop
popf
cmpsl
and
push
rcrb
pop
or
aad
mov
pushf
ret
push
pop
xchg
and
mull
mov
mov
sub
sub
lahf
incl
mov
xchg
inc
leave
scas
cmp
pop
rcrl
push
shll
and
push
arpl
xor
mov
jmp
rorl
loope
mov
enter
push
jo
push
adc
ljmp
lods
xchg
out
pop
pop
hlt
lea
jl
or
or
push
sbb
loopne
lods
test
and
dec
pop
rol
je
cs
adc
cli
arpl
xor
jg
xor
cwtd
adc
lret
sbb
ds
addr16
js
sbb
mov
jp
iret
xlat
std
lcall
dec
and
sbb
jg
stos
lds
fistl
mul
cmp
int
pop
loope
mov
mov
inc
bound
sub
inc
cmp
imul
mov
xchg
mov
or
aam
sub
ret
dec
lcall
xchg
lcall
adc
movsl
xchg
or
scas
aaa
sub
dec
in
mov
sub
and
push
inc
jbe
lahf
cmpsb
jb
jl
sbb
aas
in
cmp
outsl
adcl
divb
add
shrl
cmp
push
fidivl
dec
and
lcall
jne
mov
imul
dec
in
out
pop
into
pop
adc
sti
scas
out
daa
jno
sub
dec
xchg
psrad
repz
lret
add
mov
cmpsl
mov
add
jno
cmp
add
mov
loope
xor
mov
ret
in
pusha
data16
cmpsb
adc
push
push
andb
pushf
sbb
call
mov
mov
mov
mov
cmpsl
outsb
lods
js
push
in
ja
frstor
mov
stc
cltd
inc
sbb
sti
fdivrs
lahf
add
stc
lea
addr16
cld
jle
cmpsl
orl
std
sbb
xchg
fstl
imul
in
sub
sbb
xchg
inc
pop
mov
jbe
sub
push
hlt
jae
shl
dec
mov
xor
lahf
push
push
mov
pop
shrl
aad
insl
xchg
pushf
adc
pop
pop
test
sbb
cmpsb
mov
inc
push
dec
pop
and
stos
xchg
cltd
into
sub
into
ja
cmp
add
fldln2
lea
daa
lahf
insb
push
loopne
jmp
lock
call
in
dec
dec
fidivrs
or
cmc
or
mov
int
pop
xlat
sbb
mov
cmpsb
jge
lods
jo
or
jl
xor
dec
aad
adc
jle
icebp
xchg
mov
stos
cmpb
dec
pop
mov
xlat
jp
sbb
sub
shlb
jne
push
pop
in
mov
add
imul
bound
xchg
loope
aaa
jne
cld
stos
add
out
ret
aaa
mov
mov
sti
jp
test
jo
rorb
jle
mov
nop
mov
add
enter
push
jmp
sarl
cltd
sbb
jne
enter
cmp
dec
adc
icebp
pop
sbb
jecxz
out
jo
popf
std
pop
popa
shrb
mov
and
fsubrl
pop
cmp
out
in
sub
cld
lahf
xchg
out
pusha
sub
dec
gs
lahf
xchg
dec
xchg
add
and
jl
scas
fsubl
in
cmpsl
aas
mov
jp
ror
lods
mov
mov
xchg
test
sub
jecxz
out
mov
adc
jnp
xor
fisttps
shll
dec
movsb
js
std
jo
fnstenv
in
imul
xchg
aam
jne
mov
and
jo
je
sti
arpl
lds
mov
ds
addb
pop
in
push
lcall
fcmovbe
fisttpl
repnz
xchg
pop
jp
ficomps
inc
inc
loop
cli
cmc
push
jecxz
test
cmp
push
mov
lods
pop
icebp
or
or
sub
and
leave
lret
or
inc
subb
outsl
ret
xor
and
arpl
mov
xchg
and
js
adc
push
insb
subb
int
scas
ljmp
ljmp
mov
mov
xchg
imul
mov
imul
cld
fidivrs
out
mov
and
jmp
nop
pop
cmp
pop
imul
xlat
mov
pop
js
mov
sti
adc
fstps
fistpl
cwtl
jmp
dec
inc
aas
jne
xchg
mov
and
mov
cmp
loopne
inc
data16
and
or
sti
inc
mov
jae
int
adc
dec
jno
lahf
cmc
in
xchg
das
and
lea
pop
jecxz
push
xchg
stos
cmp
and
imulb
das
sub
int3
xlat
cmpsb
es
ret
mov
pusha
mov
fisubrs
ret
lods
cmpb
ljmp
cmp
bound
fstps
mov
xor
in
dec
ficoml
int3
test
cmp
xsave
mov
mov
adc
mov
dec
sarb
sub
cmp
ret
sbb
idivl
push
add
add
movd
add
pop
out
mov
in
and
lea
mov
inc
or
pop
jns
xchg
pop
js
cld
imul
push
or
imul
adc
clc
cmp
out
jno
adc
cwtl
clc
dec
ljmp
imul
gs
xchg
dec
mov
movsl
cmp
icebp
push
fistpll
sbb
fwait
loope
movsb
jp
dec
ljmp
cmp
gs
stos
rcll
decb
mov
add
lock
out
mov
mov
mov
mov
adc
pop
push
mov
lahf
icebp
das
mov
lods
in
sti
add
mov
inc
pop
pop
test
pop
cmp
pushl
jecxz
insb
and
fstps
les
int3
mov
push
call
add
or
ljmp
pushf
mov
scas
jecxz
add
pop
mov
jno
push
and
aas
fxch
fstp
jbe
lock
mov
cli
xor
add
xchg
ret
and
inc
mov
mov
lods
sbb
sub
push
bound
loope
add
or
push
fldl
out
nop
push
xchg
inc
sbb
in
inc
in
in
rcrb
mov
loopne
mov
xlat
lret
jns
nop
aam
mov
fcoms
cmp
sub
adc
mov
mov
inc
xor
push
sub
ja
in
xor
les
mov
jmp
add
scas
cmc
or
sbb
ss
clc
push
aad
jbe
test
outsl
loop
jl
leave
or
and
pop
ljmp
std
popf
dec
sub
hlt
push
das
push
outsl
jge
add
push
fcmove
sbb
mov
ljmp
push
mov
mov
in
push
stos
sub
dec
mov
mov
or
cmc
sbb
fstpt
sti
inc
inc
and
push
sbb
dec
lods
bound
pop
out
cmp
out
pushf
lahf
aas
test
das
mov
sbb
and
cli
ret
jae
inc
daa
cmpl
pop
mov
mov
shll
icebp
dec
jge
fmuls
nop
sbb
daa
lods
pop
aad
push
fdivl
or
or
cmp
inc
add
cmpsb
shrl
outsl
ror
enter
inc
add
aaa
addb
icebp
fadds
push
mov
scas
inc
mov
cli
push
adcb
or
sub
jae
or
lds
pop
push
inc
pop
mov
lahf
outsb
dec
lods
sbb
lods
and
shll
mov
adc
decl
cwtl
mov
jge
jmp
jmp
es
dec
xor
sub
outsl
lods
outsb
aam
les
or
rcl
insl
dec
addr16
mov
ds
pop
push
out
fdivl
les
lcall
bound
mov
divb
ljmp
pop
in
xor
cwtl
inc
sbbb
icebp
adc
daa
sbb
mov
mov
dec
dec
adc
jns
clc
and
fdiv
adc
enter
push
movsl
pusha
scas
xchg
jne
mov
stc
aam
push
clc
jecxz
enter
in
mov
test
lods
fstl
pop
lret
clc
xlat
fstps
jno
sub
adc
or
sbb
rcrl
fcomi
subl
jmp
lcall
lcall
jle
mov
jl
mov
lods
and
out
cmpsl
sbb
in
and
and
cmp
stos
pusha
xorb
jecxz
pop
cmp
fbstp
sbb
fdivs
rclb
jl
decb
sub
xor
dec
add
mov
cmp
mov
fidivl
push
jmp
xchg
jecxz
mov
jne
loopne
cs
mov
pop
arpl
push
adc
rorl
hlt
out
dec
scas
and
and
xchg
sbb
out
and
sahf
jae
pop
hlt
and
imul
ljmp
popf
orb
mov
xor
xchg
aaa
mov
in
push
cmp
int
jo
test
and
or
popa
icebp
or
repnz
mov
popf
sub
stos
xor
jb
pop
or
test
lock
insl
pop
jl
shrb
xchg
mov
mov
xchg
xchg
imul
lcall
test
data16
lahf
out
mov
cs
lcall
data16
aaa
ret
xor
int3
lds
ret
mov
sub
out
scas
or
hlt
sub
add
sahf
mov
fs
ret
ds
int3
repnz
jge
leave
out
iret
and
shrl
add
out
push
imul
pop
add
je
out
rorb
pop
adc
mov
xchg
rcr
loope
lahf
int
lahf
add
mov
push
fistl
mov
cs
push
shrl
cltd
push
mov
mov
mov
jae
push
hlt
bound
or
push
xchg
stc
mov
mov
adc
push
jnp
push
cmp
push
xor
loop
dec
hlt
lods
cmp
dec
leave
cmc
sub
dec
inc
pop
cmpl
mov
call
jae
push
jb
push
jge
outsb
push
packsswb
fwait
call
or
je
gs
mov
lahf
imul
dec
xor
jns
inc
jbe
shlb
or
sahf
rolb
adc
adc
xor
int3
fnstenv
dec
jge
out
ljmp
mov
mov
lea
negl
or
mov
loopne
mov
jne
sub
cs
les
daa
sti
pop
or
mov
pop
mov
and
xor
gs
pop
punpckhdq
inc
mov
mov
xchg
and
jns
movsl
dec
push
jae
inc
negb
mov
testb
mov
ja
pop
clc
push
out
push
dec
arpl
icebp
mov
pop
pop
xchg
adc
cmpl
stos
inc
popa
jg
dec
cld
outsb
jae
ret
dec
scas
pushf
or
cmp
push
scas
sbb
mov
pop
sbb
dec
ljmp
or
xchg
sahf
shl
jp
push
cmc
cmp
sbb
into
lcall
push
dec
pop
push
adc
inc
pushf
and
lds
sbb
push
call
mov
add
dec
pop
xor
xor
push
xchg
add
adcl
negl
or
lahf
xchg
cmpsl
popf
cmpsb
inc
sbb
dec
mov
ja
leave
pop
jb
movsl
loope
push
fdivrs
jno
icebp
inc
sbb
aas
xchg
lods
mov
or
or
pushf
fucomip
xor
lods
xlat
jge
jno
ret
adc
lret
or
jle,pt
out
or
setbe
dec
xchg
mov
jge
sub
push
xor
stos
push
jecxz
cmp
lcall
push
jns
popf
xor
in
cmp
sbb
mov
mov
js
das
adc
push
pop
and
and
inc
ljmp
insb
hlt
in
and
sbb
nop
push
cmp
aaa
shlb
bound
fldt
pop
shrb
mov
mov
lods
adc
fstps
imul
jmp
arpl
push
sahf
sub
fnstcw
jl
and
jae
orb
mov
and
repnz
push
scas
add
adc
lret
pop
push
sbb
pusha
loope
or
orl
popf
lahf
repz
test
loop
mov
aam
xor
mov
addb
push
sarl
fdivr
daa
xchg
xor
mov
inc
pusha
rorb
dec
push
cmp
sub
jnp
mov
cmp
sub
test
sub
and
lahf
xchg
pop
jno
or
cmpsl
and
cmpsl
in
dec
movsl
dec
daa
loope
insb
mov
push
cmpsb
push
pop
pop
sub
stos
cwtl
cmp
jg
out
sbb
mov
lock
sub
push
mov
repnz
push
xchg
in
cmpsb
mov
iret
xor
push
mov
mov
jle
enter
mov
in
mov
jmp
inc
cmpsl
out
dec
popf
les
xchg
outsb
movsl
outsb
lods
fldl
js
jmp
ret
std
push
cmp
pop
push
inc
lret
and
rolb
andl
jno
lds
cltd
sar
std
xchg
sub
fisubl
xor
fsubrs
orl
bound
lds
data16
lea
fwait
out
es
test
jns
sbb
data16
push
jle
cmp
ficomps
rcrl
lahf
loope
fildll
sarl
gs
mov
jp
sahf
nop
and
xlat
cmp
aam
nop
jle
fadd
jg
into
jnp
lret
rolb
push
push
loopne
aaa
push
sti
pusha
or
add
mov
ljmp
cmp
aad
xor
xchg
cmp
pop
pop
ja
out
dec
loop
arpl
xor
inc
mov
loope
mov
inc
ret
push
mov
cmpsl
negb
dec
mov
push
jecxz
push
adcb
idivb
jg
icebp
push
out
pop
repnz
add
adc
sbb
cs
adc
push
mov
jae
adc
into
jbe
ljmp
lock
xor
and
push
cmpb
rol
pop
and
sub
outsb
mov
pop
ret
repnz
push
mov
xor
cld
or
arpl
jecxz
push
subb
cmp
mov
cmp
push
mov
or
clc
jle
or
lock
ljmp
rolb
mov
xchg
jmp
push
adc
pop
cmpsl
xchg
inc
out
mov
xchg
lods
test
jnp
inc
daa
and
insl
cltd
add
nop
or
jns
loop
fdivl
jbe
cs
loop
mov
cmp
mov
loope
mov
push
cmp
dec
loop
ja
adc
cmp
sub
cld
adc
sbb
ljmp
mov
gs
insl
pop
cmp
nop
jg
outsb
or
mov
adc
sbbl
and
inc
movups
in
push
dec
xchg
jge
cmp
fsubrs
rcr
call
adc
lret
out
mov
jo
mov
pop
jnp
xor
push
int
xlat
fcomi
fisttpl
xchg
dec
jns
roll
loope
insl
lds
cmpl
xchg
sub
ds
stc
jae
lds
inc
out
jmp
mov
je
or
adc
mov
std
cmc
out
push
mov
adc
imul
outsb
pop
scas
addr16
sbb
lret
inc
adc
fcompl
cmp
xchg
inc
jecxz
imul
call
xor
adc
mov
inc
inc
cs
cmpb
jmp
and
sbb
dec
push
add
lock
add
cmpb
or
inc
mov
out
test
dec
xlat
jne
bound
jge
mov
mov
subl
sub
mov
adc
jg
mov
subl
inc
outsb
lock
cli
pop
bnd
mov
mov
aas
in
in
shlb
or
cmp
or
aaa
mov
push
sbb
imul
mov
add
xchg
popa
mov
lcall
repnz
sbb
dec
push
enter
repnz
das
inc
mov
shlb
enter
push
das
insb
and
dec
xor
sbb
imul
fidivrl
addb
push
cs
stc
cmp
test
push
pop
dec
and
add
add
mov
sbb
inc
ffreep
enter
pop
lea
out
mov
scas
loop
pop
test
fcmovb
mov
sbb
cwtl
sbb
icebp
push
ja
aaa
movsb
sbb
jle
push
jb
hlt
and
or
addr16
mov
adc
imul
or
inc
aaa
cmp
dec
test
orl
addb
xchg
shrb
inc
mov
jmp
or
push
loop
popa
addr16
ss
cli
sti
test
dec
mov
mov
jne
mov
lds
daa
imul
inc
cmp
adc
out
idivl
leave
adc
and
adcb
mov
sbb
mov
repnz
dec
push
mov
sub
mov
shll
out
or
cmpl
insb
in
rol
fwait
popf
jle
or
sbb
inc
aam
pusha
jp
cmpsl
filds
ds
mov
in
addr16
ljmp
aaa
add
cwtl
jl
test
mov
daa
mov
inc
fcompl
jmp
loopne
lods
test
das
mov
incl
xor
lods
jo
mov
fbld
cmpsb
xchg
jbe
add
mov
jne
sbb
in
pushf
pop
rorl
jmp
adc
mov
or
iret
mov
or
cmc
outsl
fidivrl
scas
mov
shl
inc
in
add
dec
lods
sub
sahf
mov
cld
lcall
dec
insb
lret
xchg
mov
roll
sub
adc
fldenv
test
les
imul
jmp
sub
mov
sbb
mov
out
fstps
insb
inc
fsubrs
pop
pop
inc
notl
cli
adc
mov
cld
loopne
or
xrelease
mov
and
mov
dec
mov
pusha
xchg
cmp
or
das
pop
xchg
scas
cmpsl
cmp
jb
jmp
call
add
sbb
jo
xchg
pop
aad
mov
cmp
scas
jne
movsl
out
and
loope
imul
and
lea
out
cli
push
mov
pop
loope
or
rclb
out
mov
jne,pt
sbbl
mov
jg
sub
popa
sarb
xlat
inc
rcrb
out
or
repz
cmp
test
pop
mov
xchg
or
push
lods
in
les
sub
pop
sub
pop
lock
jg
mov
insl
sub
add
mov
outsl
cmc
fs
mov
idiv
fdivrp
pop
lahf
xchg
fnsave
sbb
cmp
push
adc
xor
ja
imul
pop
movsl
xor
iret
imulb
dec
dec
pop
sbb
mov
imul
or
sbb
push
pop
movsb
jge
mov
lsl
cmp
ficompl
int3
sub
int
pusha
emms
ja
lret
ret
cmp
jb
jae
push
outsb
imul
add
and
cli
jp
sub
cwtl
adc
push
xlat
ljmp
fmull
pop
push
pop
cmpsl
mov
pop
cld
fstpt
dec
movsl
or
add
mov
mov
ffreep
or
lcall
loopnew
pop
pop
and
adc
mov
das
cmp
pop
repnz
or
movsl
cmc
add
mov
repz
push
cli
and
enter
mov
pop
mov
adc
lret
sub
mov
pop
sub
inc
hlt
les
sahf
shrd
add
ljmp
sbb
pop
ja
jmp
imul
stc
ljmp
fldt
jae
int
mov
lret
aad
jns
in
add
in
mov
shlb
xchg
jbe
mov
ficomps
bound
sbb
fnsave
rcll
test
popa
test
mov
std
lret
mov
mov
xor
push
stos
mov
pop
jge
xchg
jb
out
mov
mov
jo
out
push
repz
ficompl
adc
lods
jg
mov
inc
ds
imul
or
rorb
cs
sub
xchg
dec
adc
fistps
loopne
mov
add
mov
int
subl
daa
popa
std
scas
aaa
movsl
push
inc
mov
add
dec
ret
inc
jne
ret
pop
cmpb
dec
std
mov
sbb
insl
dec
fsubrl
jp
int
mov
fnstsw
lods
sub
mov
mov
mov
push
cmc
pop
mov
dec
lods
test
mov
mov
adcl
jo
es
push
or
outsb
adc
fmuls
mov
ja
pop
ret
fnsave
mov
lods
lcall
lret
xchg
or
sbb
mov
or
mov
outsl
pushl
fbld
xchg
leave
sub
std
lret
jbe
sub
jg
xor
ud2
das
aam
mov
jns
loop
adc
and
and
clc
add
aam
les
sbb
jg
das
je
lock
dec
push
shl
xor
shll
mov
mov
mov
pop
cld
sbb
or
and
xchg
push
inc
daa
xchg
daa
jge
test
popf
scas
or
xlat
xor
mov
jbe
int
pop
mov
cmp
push
loopne
push
pop
popa
xor
lret
test
insb
lret
lock
cmp
mov
stos
adc
sarl
xchg
push
jno
ljmp
mov
xchg
aaa
addl
out
neg
int
sti
cmpb
dec
or
ds
fwait
imul
cmp
icebp
repz
ljmp
lret
adcl
mov
jae
leave
stos
repz
jecxz
popf
shll
inc
cmp
pop
mov
sbb
hlt
shl
rcr
jmp
fidivrs
arpl
mov
mov
cs
jle
inc
lock
mov
stos
add
lods
mov
mov
adc
orl
jne
xchg
cmp
ds
jno
adc
sub
jne
fwait
push
insl
fwait
aad
jmp
aad
aas
sub
aad
scas
adcl
mov
sub
xchg
imul
xor
jb
mov
push
test
mov
test
adc
repnz
icebp
addr16
clc
jae
cmp
jp
and
mov
pop
mov
pop
insb
mov
test
xor
dec
out
mov
fnstenv
mov
mov
xchg
roll
scas
rorb
push
xchg
sub
cmp
add
inc
test
orl
mov
or
jnp
icebp
shrl
jo
gs
fbld
push
adc
cmpsl
add
ds
ja
stc
sbb
or
xor
das
or
mov
cltd
sbb
out
les
sub
xor
cmp
fsubp
mov
dec
fs
dec
jns
jnp
mov
fsubrl
sbb
cmp
pop
imul
add
dec
jle
jns
inc
sub
adc
jns
shr
and
pop
push
mov
or
cmp
sahf
call
mov
inc
push
xor
les
pop
mov
leave
in
sbb
iret
xor
daa
jmp
mov
jp
arpl
xorb
imul
lea
out
add
addr16
jl
pop
xor
and
and
shr
inc
mov
orb
cld
mov
xchg
pop
dec
aad
pop
in
adc
inc
inc
cmp
and
xor
addr16
shl
push
xchg
sbb
cs
jne
adc
es
xor
lea
jecxz
nop
mov
sub
outsl
cwtl
jb
add
pusha
cwtl
xchg
lret
lds
xor
mov
cli
mov
clc
clc
adc
mov
cmp
jge
popa
dec
movsb
push
pop
mov
adcl
dec
jbe
jl
cmpsl
movsb
cmp
cmp
adc
aas
adc
pop
movsb
pop
or
negl
test
clc
test
and
or
clc
sbb
cwtl
cs
stos
dec
sub
das
mov
cmc
mov
push
orb
inc
imul
mov
xchg
xor
popf
insb
aam
cmp
dec
mov
push
sti
push
push
push
jno
dec
ret
js
pop
add
or
xchg
xchg
pop
push
inc
out
cld
xor
popf
jge
test
decb
add
add
orb
data16
and
stos
sub
sbb
js
hlt
jnp
push
aas
inc
xchg
lds
jmp
and
js
mov
adc
in
pop
out
mov
insb
outsb
cmp
push
jle
or
hlt
fsub
push
or
cmpb
mov
fs
jno
daa
mov
pop
scas
cmp
xor
xor
xchg
ja
fiadds
add
shl
or
or
or
iret
xor
loopne
cmc
testl
out
ss
arpl
jb
mov
arpl
pusha
xor
loope
and
cmp
sbb
mov
mov
scas
lcall
pop
mov
insl
aam
and
inc
addr16
imul
bound
shrl
notb
pushf
jno
xor
xchg
inc
pop
ja
out
mov
lods
adc
out
test
mov
rcll
dec
push
in
lcall
addl
dec
jo
jmp
fisttpl
in
mov
cmp
adc
call
es
ss
or
mov
addr16
adc
mov
jbe
hlt
nop
pop
push
loop
cmp
notl
aaa
jns
mov
jne
aam
leave
cli
adc
xchg
rcll
jmp
nop
inc
xchg
repnz
movsl
adc
add
ret
popa
xchg
pop
inc
mov
mov
add
int3
sahf
and
lcall
outsb
lss
test
les
out
jle
push
xor
xchg
sbb
mov
pop
fistpll
icebp
pop
mov
xor
jmp
enter
xchg
cmpsb
or
mov
pop
push
sti
dec
mov
inc
sbb
hlt
fstl
pop
add
in
fidivl
cmp
mov
scas
jmp
mov
adc
loopne
jmp
add
lret
data16
in
aad
and
ret
push
clc
sbb
lret
xor
test
adc
sbb
pop
in
outsb
sbb
fwait
popa
and
push
sbb
push
pop
add
push
sub
in
cmp
fcmovnb
pushf
sub
nop
adc
icebp
xchg
or
jge
inc
mov
dec
or
fdivrl
aas
jg
cmpl
cmp
sbb
adc
test
pop
test
ljmp
mov
sar
pop
fcomp
mov
repnz
add
int3
sub
pop
and
mov
hlt
add
ret
fisubs
lretw
pop
leave
mov
cli
and
adc
ss
cli
rcl
insl
aaa
dec
ds
or
xchg
or
jmp
and
mov
or
arpl
sahf
shrl
mov
ss
mov
cmp
shll
pop
pop
adc
adc
gs
sub
jmp
dec
ja
jno
popa
push
push
icebp
adc
lock
in
rcll
and
mov
inc
fwait
testl
iret
lahf
stc
dec
and
shlb
sbb
push
xchg
adc
nop
arpl
inc
xor
lods
add
mov
fwait
loopne
and
jb
les
jl
xor
xlat
cli
shr
jne
jns
outsb
cltd
inc
int
sbb
mov
mov
xor
or
test
lods
jp
cmp
pop
jl
ds
mov
lock
sub
pop
mov
mov
loopne
insb
cmpsb
mov
adcl
push
das
jg
js
ficoms
cmp
fs
je
lcall
sbb
flds
inc
jge
lahf
jae
push
jmp
jo
xchg
xchg
insl
ja
push
pop
popa
push
xchg
inc
adc
insb
jno
add
jo
insl
int3
sbb
sti
cs
shlb
outsl
std
xor
cmp
lret
adc
jnp
mov
dec
sbb
fstp
mov
out
int3
aam
mov
xchg
psraw
pop
fdivs
orb
cmpsb
pop
inc
sbb
inc
push
icebp
push
out
mov
jo
clc
test
aaa
or
push
mov
cmp
jno
lods
lock
push
pusha
loop
fstpl
lods
insb
pop
jbe
cltd
mov
jmp
pop
cmpsl
icebp
mov
popf
popf
jl
push
stos
test
dec
mov
int
mov
test
mov
sub
inc
dec
popf
push
push
push
inc
fmulp
loopne
cmpsb
jge
jne
inc
jl
mov
jno
adc
jno
pop
sub
mov
push
inc
or
out
pop
or
clc
sub
scas
mov
lods
dec
jp
test
or
sub
jle
push
cs
in
lods
lret
inc
pop
push
jp
push
push
nop
jg
movb
inc
aaa
mov
xor
mov
xor
dec
jns
outsl
mov
ljmp
and
lods
int3
insl
leave
rclb
in
adc
push
jae
and
outsl
sbb
scas
add
bound
mov
xchg
xchg
lods
mov
iret
loopne
add
cmpsl
jp
test
and
xchg
test
jl
outsb
mov
shl
xor
pop
dec
cwtl
mov
mov
repz
cmp
cmp
imul
outsl
stos
cmp
and
popa
push
mov
or
ret
jne
test
mov
sbbb
pop
arpl
insb
jle
dec
clc
xchg
inc
sti
mov
cmpsb
inc
jecxz
movsl
xchg
mov
into
xor
adc
mov
movsl
ja
dec
jg
mov
mov
jb
push
lret
and
sbb
pop
movsb
aad
jae
mov
test
mov
notl
rorb
jecxz
jle
mov
jno
fists
xor
aas
xor
jo
adc
dec
int3
ficoml
pop
add
mov
add
pop
push
pop
stos
rcrb
lods
mov
daa
jo
and
icebp
pop
fstl
sub
arpl
xor
add
pop
scas
mov
inc
ljmp
rorl
sbb
xor
adc
loope
bound
aam
pop
sahf
lahf
test
bound
push
jge
sub
mov
test
sub
mov
mov
repz
cmp
and
mov
mov
fs
jecxz
lret
pop
dec
mov
loopne
push
mov
add
insb
test
test
cmc
xor
rorb
and
mov
dec
ret
into
insb
sbb
push
jge
cmc
repz
dec
sub
mov
mov
fwait
and
cli
cs
mov
call
ret
cwtl
mov
mov
neg
pusha
dec
jno
js
mov
shlb
shrb
mov
pop
leave
sbb
sbb
mov
shr
mov
test
adc
mov
cmpsl
add
scas
and
fsubs
inc
jnp
cmp
push
mov
leave
jne
push
adc
jg
bnd
pop
aam
outsb
scas
mov
xchg
jno
scas
and
js
push
es
test
add
std
test
jmp
icebp
nop
jge
out
clc
sahf
or
cmc
mov
out
scas
orb
add
sarl
mov
scas
dec
mov
je
cmp
imul
out
jl
fs
add
sti
mov
in
lahf
jg
dec
sbb
flds
inc
shr
pop
or
push
inc
cmc
cmp
je
fbstp
lds
fucomi
mul
je
mov
push
hlt
xchg
mov
cwtl
outsb
jge
pushw
popf
cmp
aaa
mov
pushf
rol
cmpsl
jge
jge
inc
int3
inc
pop
clc
or
stc
psubb
dec
out
adc
stos
and
sub
jl
inc
cmp
cmp
sub
stos
movsl
mov
cmc
xor
shr
inc
sbb
aad
inc
mov
lret
or
mov
or
add
sbbl
jp
out
mov
fiaddl
or
jo
sbb
cli
loopne
mov
hlt
sub
dec
adc
mov
jno
cwtl
jecxz
sbb
push
maskmovq
notl
mov
mov
outsl
or
inc
xchg
mov
mov
cs
adc
dec
xor
rclb
jnp
xor
sarb
imul
repnz
xchg
das
decl
into
mov
pop
cmpsl
ljmp
ja
push
int
mov
cmpsb
ljmp
scas
jl
shll
adc
out
jmp
and
fbstp
lods
add
push
adc
xchg
dec
xchg
mov
push
mov
sahf
mov
cli
sub
xchg
rcl
or
out
and
pop
addr16
inc
mov
mov
outsb
iret
mov
or
and
bound
fildl
inc
sbb
dec
or
pusha
in
imul
push
mov
cmc
lret
xorb
mov
inc
daa
mov
movsb
sbb
test
cmp
mov
out
push
enter
inc
aam
or
add
ljmp
outsb
sbb
std
in
add
xchg
xor
sub
dec
mov
mov
nop
pop
imul
pop
jp
cmc
out
adc
cmp
xor
mov
mov
inc
insl
lods
jl
cltd
shr
jo
xor
add
xor
test
call
inc
out
push
add
push
hlt
jle
and
lret
inc
mov
cmp
xchg
ss
fisubrs
mov
cld
jnp
pop
sub
fldenv
es
xchg
xor
mov
sbb
or
push
and
xlat
mov
repnz
ret
std
mov
iret
fldcw
mov
pushf
fs
aas
jle
mov
xlat
jno
mov
jnp
stc
pop
sahf
or
dec
mov
pop
xchg
rolb
add
push
inc
mov
xor
std
cld
jmp
fsubrl
jae
imul
pop
sbb
lahf
mov
out
or
dec
je
and
add
mov
rorb
dec
pushf
lea
movsl
inc
dec
push
cmp
dec
add
or
filds
cmpsb
mov
fs
pop
xor
push
mov
push
dec
mov
mov
flds
pop
leave
dec
bound
fs
loop
repz
movsb
std
cmc
insl
movsl
ret
repz
xor
push
enter
faddl
push
enter
clc
xchg
mov
dec
jl
mov
sub
fnsave
js
imul
push
fiadds
mov
das
cmp
cs
push
rorl
push
in
push
faddl
jmp
mov
repz
or
push
mov
aam
xchg
dec
cmp
add
mov
mov
add
or
mov
dec
cmp
popa
mov
push
mov
mov
daa
or
xchg
jle
push
or
mov
and
jle
push
sbb
push
and
jne
push
push
aas
jbe
push
dec
aas
jnp
insb
xchg
pop
pop
cmp
sbb
cld
pop
std
xor
push
push
mov
mov
add
insb
fnsave
pop
jbe
rcrl
ja
mov
xor
push
ucomiss
sahf
scas
ss
stos
mov
or
pop
jmp
adc
test
and
sbb
lcall
pop
xchg
out
dec
fists
mov
shlb
fadds
xor
repnz
cmp
movnti
inc
push
dec
sbb
push
dec
pop
fsubs
idiv
enter
lea
fsubp
orl
dec
and
lds
lret
mov
xor
shlb
imul
lret
dec
clc
jae
mov
push
out
sub
and
inc
js
cmp
adc
xchg
cmpsl
mov
lret
js
jno
sbb
test
mov
pushf
mov
add
dec
xchg
xchg
std
shrb
adc
and
sarl
or
loopne
pop
cmpb
popf
push
cmp
add
pusha
xchg
xchg
dec
sub
rolb
cmpsb
add
loop
adc
scas
or
cld
cmp
aad
incl
outsl
std
sub
lret
cmp
cmpsl
fistpl
frstor
sub
enter
icebp
das
addr16
add
dec
mov
sar
cmpsl
hlt
push
xor
push
push
lock
push
stos
mov
lcall
jle
hlt
nop
frstor
fmulp
pop
stos
sbb
jp
cs
cmp
adc
mov
add
into
hlt
and
push
pop
scas
mov
movsl
ds
dec
xlat
jle
jo
fs
lcall
fsubs
sarb
jae
mov
dec
mov
stc
mov
mov
push
mov
push
pop
mov
inc
subl
jg
push
jg
adc
popa
jbe
repnz
lods
mov
cmp
push
dec
mov
test
mov
add
fs
scas
repnz
mov
sbb
push
shlb
xor
loopne
lds
ljmp
and
inc
popf
dec
add
xor
inc
sbb
scas
adc
push
xchg
test
cmpsl
stos
add
inc
xor
ret
push
not
dec
mov
jns
sbb
pop
push
into
jle
lahf
xor
pop
mov
sub
mov
imul
stc
fbstp
outsl
dec
or
mov
ret
cwtl
mov
jne
pop
addr16
cmpsl
add
push
daa
aam
cld
ds
ret
ret
inc
inc
pop
mov
mov
jle
jno
xor
push
outsb
ret
loope
pop
in
jmp
add
shlb
je
jbe
repnz
sub
stc
out
aad
push
in
addr16
cltd
mov
cld
adc
mul
or
xchg
adc
mov
mov
cmpsl
fisttpl
daa
arpl
jo
and
popa
push
xchg
les
addl
and
jb
daa
pop
ss
push
cli
or
aaa
jle
outsl
outsb
fnstsw
and
scas
mov
aaa
in
loope
loopne
cld
roll
mov
fs
cmp
or
fildll
fidivl
mov
icebp
in
mov
mov
inc
dec
imul
or
sub
cmpb
cmpb
and
test
das
movsl
jle
ss
lret
enter
out
push
dec
sbb
mov
mov
inc
sub
fildll
mov
dec
or
sbb
dec
leave
mov
push
cltd
or
mov
sbb
adc
push
cmp
xchg
push
test
jae
mov
decl
test
or
ficoml
es
loope
hlt
sbb
pop
fs
aaa
into
xchg
fsubrl
insl
ja
dec
sbb
int
inc
out
mov
jge
xchg
jno
mov
arpl
popa
add
mov
inc
and
mov
sahf
dec
mov
cmpsl
loope
cli
and
mov
xor
cmp
imul
cmpsb
stos
pop
mov
push
adc
inc
pop
sbb
sahf
jae
xor
inc
mov
scas
fdivs
out
xor
cli
popl
imul
cs
sbbb
shl
adc
push
pop
cmpsb
pop
leave
fldcw
test
sbb
dec
adc
mov
pop
add
dec
push
inc
cmp
and
subl
sbb
aaa
rolb
mov
cmp
mov
jo
jae
nop
xor
xchg
neg
movsb
into
mov
sbb
push
sbb
add
mov
loope
aad
push
lcall
jecxz
loopne
dec
imul
push
xchg
jns
mov
mov
lods
jb
cmpsl
inc
dec
xor
xchg
adc
mov
sub
lea
je
inc
icebp
data16
inc
or
mov
lods
pop
xor
nop
ret
les
lds
js
or
mov
push
into
roll
bound
in
jge
or
fistps
int3
mov
push
fbld
jo
lods
in
sahf
es
push
or
and
rorl
push
cmp
ret
pusha
outsb
int
lods
sub
adc
daa
push
add
movsl
or
inc
push
jne
and
movsb
outsb
jns
xchg
cld
inc
mov
or
inc
pop
rcl
jecxz
xor
out
push
cli
push
fwait
mov
js
lahf
fsin
notl
dec
subb
arpl
inc
push
insl
sub
push
and
lret
adc
push
es
roll
add
push
push
inc
ret
test
xchg
fsubrp
inc
shll
clc
adc
out
cmp
add
fimull
es
jmp
jecxz
mov
in
mov
sbb
ret
pop
fldl
sbb
mov
push
nop
pop
push
mov
push
mov
mov
in
adc
add
bound
int
aaa
inc
pop
jl
inc
sub
pusha
pop
mov
jl
or
test
xor
popl
jp
pop
lods
enter
pop
xchg
sub
ljmp
inc
arpl
mov
cmp
aad
inc
mov
pop
sbb
cld
jge
mov
sub
aas
dec
pop
lock
pop
mov
add
inc
mov
sbb
jecxz
ret
push
nop
outsl
lds
jns
in
or
mov
cmp
jg
push
add
cli
cwtl
push
mov
ret
jp
call
dec
out
sbb
adc
data16
mov
dec
add
sahf
sub
in
inc
xchg
js
pop
xor
lea
sbb
iret
mov
stc
sbb
out
mov
insl
push
dec
jne
cmp
adc
in
inc
sar
stc
adc
add
push
stc
outsb
js
je
popa
dec
pop
xor
and
inc
pop
push
bound
leave
adc
jl
cmp
adc
aaa
and
dec
or
jecxz
cmpsl
aad
ret
jmp
jb
notb
test
dec
insb
mov
xor
xor
lods
mov
add
rclb
pop
push
inc
xor
pop
sub
adc
mov
enter
ret
jnp
add
push
lret
ret
outsl
jle
sub
dec
sbb
sub
andl
mov
in
xor
int3
out
or
adc
jl
mov
popf
lret
adc
or
int
fistps
sarl
stos
test
jne
add
lcall
outsb
lahf
call
daa
fstl
mov
pop
test
pop
push
mov
ret
enter
pop
push
aas
mov
push
js
push
push
jne
ret
pushf
sbb
aas
shll
repz
inc
fildll
dec
lods
and
add
mov
add
stc
push
insb
das
popa
and
sbb
loop
fcom
cmpsl
cs
cltd
addr16
jae
pop
sti
mov
pop
dec
add
sbb
or
or
mov
and
scas
mov
pusha
cmp
xchg
xchg
push
addr16
push
pop
gs
mov
leave
lret
xchg
cli
pop
iret
lret
and
mov
fs
stos
add
out
pushf
sub
pop
mov
nop
sub
xor
jle
ret
sarl
adcb
dec
cmpsb
popf
daa
or
mov
in
pop
jnp
pop
mov
cmpsl
sub
dec
jbe
adc
push
repnz
jno,pt
loop
cmp
outsb
sti
pop
adc
jp
mov
inc
sub
rol
lods
jae
das
cmpsl
dec
jae
incl
mov
sarl
pop
jg
out
nop
sbb
ja
aas
pop
rorb
mov
add
aad
fnstenv
sub
pop
jne
xlat
mov
lods
fcoml
inc
pop
mov
aam
das
std
rclb
pop
loop
and
fisttpll
mov
sub
dec
cmp
lahf
mov
ss
and
sahf
mov
popf
cmpsb
inc
fstl
stos
outsl
cltd
push
adc
subl
test
popa
cmp
movsb
xor
adc
push
fwait
and
mov
and
flds
jae
and
jg
or
das
add
aam
pop
cld
stos
cmp
mov
fs
xor
sahf
mov
adc
inc
adc
pop
frstor
dec
loopne
in
or
push
cmc
pop
rolb
movl
cmpsb
sub
inc
inc
rolb
inc
js
adc
sbb
fdivrp
bound
jns
pop
fstp
shlb
xor
xchg
sbb
jmp
mov
stos
inc
cmc
std
out
sub
movsl
leave
in
pusha
loopne
pop
adc
inc
adcb
dec
inc
aaa
jle
or
xchg
xchg
fstpt
jecxz
jle
out
icebp
movsb
mov
inc
dec
dec
dec
push
fsts
and
sbb
sahf
jecxz
in
or
lret
cwtl
cmp
dec
cld
xchg
jge
xorl
fneni(8087
aam
xlat
push
in
out
frstor
lahf
pop
data16
xor
add
push
rorl
mov
push
imul
scas
or
push
fimull
push
inc
jl
cmp
ja
scas
push
jge
dec
or
mov
xchg
push
mov
or
cmp
inc
sbb
xchg
inc
cmp
pop
outsb
lds
aas
xlat
dec
insb
fisubl
sarb
dec
sub
mov
sub
outsb
leave
loop
shll
push
ljmp
mov
cltd
test
hlt
es
ret
idiv
xchg
cmp
scas
xchg
out
xchg
ret
push
xor
into
addr16
xor
push
cmpsb
push
mov
and
sbb
lods
sti
repz
in
pop
icebp
cs
fwait
push
lea
pusha
pop
jb
cltd
add
stos
repnz
or
or
sub
push
scas
repnz
sbb
in
lret
xlat
pop
jp
lret
inc
pop
dec
ffreep
push
sub
test
mov
cmpsb
xor
dec
add
enter
test
ret
std
lret
push
icebp
jno
mov
bound
hlt
jecxz
pop
aaa
das
xchg
outsb
lcall
loope
fcoml
jmp
jmp
xchg
das
jmp
add
inc
ret
cmc
sub
or
les
xor
ficoml
lahf
jnp
cmpl
push
and
jge
ss
fldcw
lods
adc
mov
add
mov
cli
jecxz
dec
jle
fisubl
in
popf
addl
cwtl
dec
aas
lds
sbb
mov
loopne
sahf
push
inc
xor
add
mov
fildl
out
ja
add
popa
pop
arpl
int3
xchg
test
pop
mov
stos
mov
sbb
cli
fildl
call
dec
pop
fbstp
or
jmp
mov
mov
das
xchg
cs
repz
push
jge
shll
enter
add
sub
fsubs
xchg
push
aad
jge
sbb
shrb
xchg
inc
cltd
push
int3
mov
sub
arpl
inc
add
mov
subl
cwtl
hlt
lods
xchg
bound
lret
mov
clc
pop
adc
cli
mov
jne
pop
or
push
push
ja
rcrl
movsb
mov
xchg
push
loopne
dec
jp
insl
out
or
dec
xchg
and
iret
lret
push
ret
push
jle
cmp
in
jb
adc
cmpsl
sub
in
jns
or
mov
xor
orl
arpl
add
and
mov
aad
add
mov
loopne
pop
mov
loop
push
push
inc
fcomp
addr16
fsubl
inc
test
and
xor
mov
cmpsb
int3
lahf
cltd
cmp
test
and
sar
int
js
dec
adc
test
adc
mov
mov
shll
xor
adc
pusha
insb
pop
daa
push
ljmp
dec
lods
adc
sub
pop
pop
in
movsl
repz
or
mov
fstpt
push
sbb
mov
rol
outsl
shrl
xchg
outsb
push
mov
push
shll
lahf
test
push
lods
out
lods
pop
stc
inc
xchg
cvtps2pd
sti
mov
cltd
imul
cltd
lock
ljmp
mov
jno
fisubrs
push
cs
add
lods
cmp
cmpb
push
mov
aam
inc
jg
dec
or
je
push
decl
rcll
cmp
jae
shl
xor
mov
incl
fwait
je
mov
test
jp
mov
repz
xchg
or
mov
and
ja
inc
xchg
sub
mov
mov
xchg
cmp
cwtl
clc
mov
xor
orl
mov
ds
rolb
cmp
push
out
add
lea
cli
inc
cmc
ds
jg
outsb
inc
ja
xchg
jbe
mov
sub
int
inc
out
and
mov
mov
repnz
or
xchg
jp
xchg
pop
int
xor
adc
mov
imull
mov
push
xchg
shl
setae
ljmp
jle
leave
test
inc
xchg
push
add
movsb
dec
cld
cmpb
imul
fildl
and
fildll
lods
push
adc
out
gs
pop
or
repz
dec
jb
mov
loopne
outsb
jno
ret
ficoml
xchg
sahf
cmp
mov
mov
lret
notb
pop
cmpsl
jecxz
and
test
sub
loope
adc
aaa
jl
fcoms
fcmovu
adc
inc
filds
pop
in
xor
and
js
imul
or
je
test
loope
pop
inc
sbb
inc
fldcw
sbb
out
push
fsubr
xchg
jp
xchg
movsl
mov
test
popa
cmpsb
jne
lea
js
cmp
in
add
fisubl
mov
pop
out
push
pop
mov
mov
in
stc
loop
xor
mull
xor
cltd
push
push
cltd
xchg
pop
pop
in
sub
les
cmc
stos
das
les
mov
or
inc
enter
into
sbb
testb
xchg
lahf
or
and
mov
addr16
jo
sub
daa
test
jmp
inc
addr16
hlt
cmpsl
ret
and
sub
lahf
add
xor
mov
push
push
mov
ret
in
daa
mov
inc
xor
lea
cwtl
xor
out
push
ds
aad
add
cmp
mov
cmp
ds
mov
cmc
fadds
sub
adcl
popa
enter
lret
xchg
add
sarl
adc
inc
and
cmp
push
jo
xchg
mov
add
je
add
sti
dec
fs
sbb
aam
lret
adc
xchg
inc
add
scas
test
cmp
mov
inc
lea
dec
lret
cmp
mov
lcall
inc
and
les
mov
xchg
pop
leave
sub
or
jle
adc
movsl
js
mov
out
leave
adc
lea
or
adc
ljmp
lret
xchg
repnz
call
testb
mov
outsb
mov
out
adc
adc
sub
xor
popf
gs
sub
daa
call
out
js
pminsw
mov
xlat
roll
fstpt
sub
aas
and
pusha
lret
xchg
and
and
out
mov
dec
jo
outsl
push
sti
cmpsb
fistps
cmp
adc
and
adc
dec
inc
or
pop
sti
sub
jo
jmp
out
mov
repnz
pop
daa
xor
aaa
jnp
or
pop
sub
ret
rcrl
cmpsb
das
jl
jb
push
ret
out
repz
xchg
movsb
inc
out
lods
into
ja
push
sub
and
test
das
adc
stc
push
into
fcmovbe
xchg
sbb
cmp
jo
ret
cmp
aas
push
js
in
sbb
pop
cmp
fdivl
movsl
xor
jl
xor
pop
stos
adc
mov
loope
sbb
mov
cmp
aad
dec
pop
or
push
cs
loope
ss
sbb
orb
mov
ljmp
decl
inc
sarl
cmp
adc
mov
roll
mov
dec
sti
arpl
fisubrs
jle
repnz
lock
mov
cmc
icebp
lods
sbb
mov
or
pusha
test
push
add
add
es
rcrb
shlb
out
xor
in
xor
sti
int3
inc
insl
dec
imul
jmp
add
mov
dec
int3
hlt
xlat
idivb
inc
inc
add
mov
push
scas
lcall
outsl
daa
or
pop
xor
pop
mov
shll
hlt
iret
and
fxam
mov
bnd
push
pushf
mov
loopne
cmp
imulb
insb
clc
xor
mov
insb
jp
inc
roll
mov
es
pop
push
xor
fs
pop
or
ja
sti
sbb
dec
lods
arpl
or
xchg
hlt
lock
mov
in
popa
scas
adc
jb
inc
inc
div
and
pop
or
fiaddl
adc
push
and
loop
add
ret
dec
dec
rolb
fwait
inc
js
lock
in
movsl
call
mov
mov
movsl
cld
mov
dec
mov
repz
push
test
pop
mov
into
dec
out
and
imul
es
movsl
jne
in
jne
imul
ret
call
outsl
or
sub
das
jns
mov
mov
fists
jae
in
xor
orb
jg
scas
lret
enter
add
and
sbb
ret
jl
pusha
mov
lcall
mov
insb
add
jae
imul
bound
push
sbb
adc
push
add
lret
pop
cmpsl
mov
mov
lret
and
sahf
iret
xchg
shrb
out
out
outsb
sub
data16
pop
pop
jl
mov
aad
in
xor
lock
pop
lahf
adc
mov
xor
pop
loope
cltd
aas
mov
bsf
xchg
lahf
sub
dec
sbb
jl
fdivrl
movsb
push
mov
loopne
hlt
mov
adc
mov
sub
in
decb
adc
push
add
and
adc
enter
pop
shrl
cmpsl
mov
push
sub
scas
sti
add
lods
mov
dec
test
loopne
inc
pop
shrd
shlb
outsb
sub
aad
stos
sub
mov
push
sbbl
rolb
push
rorb
std
jmp
jnp
sti
xor
xchg
fisubrs
or
jae
ja
or
in
xor
into
jp
pop
loope
mov
dec
mov
mov
pushf
pop
cs
adc
ja
cmp
xchg
out
add
cmpsb
pop
xorb
gs
or
outsb
add
out
adc
jecxz
pop
xchg
add
mov
mov
mov
xor
and
mov
ret
aam
xchg
nop
cmpsl
inc
mov
test
push
push
dec
xchg
fs
sbb
mov
in
shrb
sub
hlt
add
leave
ret
xor
ss
repnz
sbb
xor
les
cmp
push
mov
in
sti
inc
test
lock
mov
push
nop
adc
outsl
subb
inc
enter
lret
out
loope
jmp
inc
bound
xchg
push
fidivs
and
shll
out
repnz
das
cli
push
mov
adc
add
daa
arpl
int3
cmc
adc
jmp
lret
push
mov
hlt
loop
adcl
lods
or
or
sbb
fisttpll
cwtl
test
pop
xlat
mov
jmp
mov
dec
dec
imul
stc
pop
inc
jb
ret
cltd
std
push
or
fldt
mov
xchg
lock
inc
push
xchg
push
stos
mov
in
inc
popa
aam
and
incb
and
cmp
das
data16
sbb
ljmp
mov
in
add
pop
pop
mov
cwtl
or
xor
mov
loop
inc
roll
div
mov
mov
mov
xchg
jbe
test
cld
cmp
loop
cmp
cmp
lods
test
xchg
popf
pop
and
dec
scas
xchg
add
arpl
push
lock
xchg
lods
and
mov
jl
out
push
mov
and
cmp
aam
leave
divb
hlt
sar
jmp
pop
inc
cmp
add
pop
cmp
dec
sbb
test
in
call
add
or
adc
sbb
lahf
scas
test
stos
jl
outsl
adc
or
and
lock
mov
shrl
sahf
adc
cmp
in
inc
sbb
test
sbb
cmc
mov
pusha
or
jp
or
adc
lret
xchg
outsb
mov
and
sbb
push
pop
mov
and
rcrb
push
test
fimuls
into
push
gs
dec
pop
cmp
iret
jae
test
add
and
bound
out
inc
stc
xchg
rcll
sub
ljmp
sbb
or
cli
jnp
in
jo
test
in
cmp
shll
fldcw
mov
pop
push
mov
sbb
lret
pop
dec
cmc
jb
shlb
int
pop
lds
loopne
adc
fdivrs
test
mov
pop
push
add
pop
fucom
sub
rcll
cmc
adc
aam
cmc
inc
rorb
or
sbb
pop
dec
inc
in
rcrl
leave
jmp
dec
in
out
mov
jecxz
aam
loop
les
xor
sbb
dec
pop
or
stc
inc
or
pop
test
sub
test
ja
in
or
sub
pop
add
xchg
inc
add
mov
cmp
xchg
and
mov
in
ds
cmp
jae
out
mov
mov
mov
adc
fpatan
stc
xlat
aaa
dec
sti
jl
mov
push
in
aaa
rclb
inc
push
adc
mov
decb
sbb
xchg
jbe
adc
xchg
stos
cmp
xchg
pop
add
into
jge
xchg
mov
mov
dec
dec
pushf
je
dec
mov
pop
popf
xchg
dec
mov
shll
int
pop
push
xor
or
lods
inc
and
ret
jae
stos
pop
adc
aas
rcll
aaa
add
inc
jo
jno
shr
push
push
dec
push
xchg
fmull
es
adc
sbb
lock
mov
xchg
ljmp
xchg
rcll
mov
add
les
mov
outsl
loop
pushf
mov
jp
sub
push
std
mov
test
test
inc
outsb
mov
lret
scas
in
lds
push
movsl
bound
jo
push
test
je
dec
fsubs
aam
and
into
push
mov
cmp
pop
stos
out
dec
lcall
pop
mov
push
fdiv
faddp
xor
int3
inc
add
add
sbb
pop
shl
es
ror
xchg
pshufw
push
cmc
enter
or
xchg
add
lock
cmp
mov
mov
cmp
push
pushf
test
divl
jno
xchg
mov
aad
or
test
ret
xchg
imul
rclb
std
sub
outsl
push
lock
pop
pop
fisttpll
cld
xlat
gs
in
mov
dec
call
xlat
loopne
icebp
lea
in
mov
jge,pn
jb
push
add
mov
or
sub
sarb
imul
push
add
rcll
test
repnz
dec
dec
xchg
mov
jnp
mov
jmp
cmc
incl
ja
xchg
jecxz
xor
out
sbb
cs
mov
push
dec
stc
cmp
inc
mov
push
pop
cmp
pop
fnstsw
mov
jle
sbb
dec
popl
add
add
ljmp
mov
je
cld
aas
push
and
lock
pop
or
dec
or
sub
movsb
mov
sbb
cmp
cmpsl
mov
jne
hlt
push
mov
popa
push
aas
icebp
icebp
add
bound
sub
gs
xorl
dec
mov
or
repnz
je
mov
inc
push
mov
xor
mov
xchg
sbb
sahf
mov
sub
jle
out
and
imulb
mov
dec
mov
mov
push
mov
fmulp
pushf
push
mov
jns
jne
cmpb
pushl
das
enter
scas
jg
stos
scas
and
add
loopne
test
dec
pop
ds
sbb
jmp
mov
mov
shlb
inc
imul
pop
mov
push
idivl
xor
sub
lret
xor
mov
mov
and
jne,pt
mov
inc
cwtl
inc
pop
ja
lods
cwtl
rcrl
push
pop
inc
inc
push
test
sar
mov
popf
nop
sbb
push
jge
sti
xchg
jne
into
int
daa
sub
iret
shr
or
daa
addr16
das
push
shlb
shrb
jae
inc
cli
in
daa
jl
jae
inc
jmp
ret
jge
lret
jl
adc
mov
cmpl
xor
cmp
mov
fnstsw
or
inc
xchg
das
adc
inc
mov
inc
adc
pop
inc
rol
aas
inc
lock
and
sbb
je
iret
fsubrs
jne
push
xchg
jb
movsb
repz
mov
mov
push
or
addl
leave
pop
mov
movsb
sub
pop
push
lods
xchg
pop
push
stc
enter
mov
mov
addr16
add
cmp
lds
jecxz
test
cmp
adc
ja
rcrl
mov
jl
dec
mov
fwait
sti
out
aaa
stos
fistpll
fldt
mov
fisttpll
outsl
cmpsb
mov
into
xor
cmpsl
mov
xor
jae
inc
dec
jmp
dec
popf
je
mov
jl
inc
faddl
hlt
add
es
sbb
xor
pop
or
xchg
and
lods
and
adc
in
xchg
das
mov
dec
jno
pusha
pushf
in
cli
insl
sbb
jb
add
shll
rcrl
or
xchg
cmp
lcall
mov
test
ret
or
cs
test
and
or
mov
push
inc
fldcw
mov
faddl
jecxz
int3
pushf
das
call
test
leave
movd
fistpll
dec
lret
push
aad
lea
xchg
xor
jbe
jne
shll
pop
push
mov
dec
das
xlat
lcall
xlat
mov
cld
fs
notb
ret
mov
mov
insl
xorb
xchg
fildll
jbe
mov
or
das
nop
push
mov
push
insb
arpl
push
inc
sti
xchg
out
jl
std
or
mov
lret
jp
mov
xlat
dec
mov
adc
rorb
mov
and
outsl
hlt
mov
pop
pop
imul
and
mov
daa
jnp
and
pop
popf
mov
and
add
fldt
xchg
lcall
cmpsl
xor
push
pop
les
test
push
hlt
imul
pop
int
sbb
fwait
sub
cmp
lret
push
mov
push
add
dec
es
in
pop
or
pop
mov
dec
sbb
jae
lods
test
rclb
repz
das
push
mov
es
push
pop
pop
test
test
enter
aaa
jecxz
inc
mov
push
les
call
in
sbb
or
out
mov
cmpsb
inc
mov
fiaddl
sbb
test
sub
out
push
cld
sbb
movl
aas
inc
loope
adc
pusha
fists
add
jns
push
jecxz
push
cli
dec
xchg
push
int3
lock
fstp
jne
int
daa
int3
inc
pop
leave
fisubrl
sbb
push
sti
mov
subl
add
hlt
or
ret
adcl
mov
aaa
mov
loope
xchg
cmp
xchg
ss
sub
push
xorl
sti
push
cmpsl
iret
xlat
out
push
or
push
push
incb
enter
aad
jle
xchg
shrl
xchg
push
cmc
movsl
scas
pop
mov
mov
cmp
dec
jns
cmpsl
push
enter
xor
scas
nop
sbbb
pop
popa
test
push
push
add
mov
xchg
mov
dec
jns
add
int
popa
jge
leave
push
das
fldl
mov
pop
outsl
xchg
je
mov
push
fildl
stos
fnsave
dec
ja
cltd
fisubs
cli
pop
and
jno
cmp
add
xbegin
fstps
addl
mov
cmp
ret
xchg
test
mov
in
mov
cmovle
scas
in
je
js
in
sbb
mov
cmp
pop
stos
lcall
push
adc
out
fimuls
push
movsb
cli
lods
out
adc
push
push
sahf
movsb
lea
mov
daa
scas
sar
inc
out
aam
stos
lods
pop
insb
adc
mov
dec
sbbb
hlt
xchg
dec
mov
cmovge
stc
push
jecxz
mov
cmp
mov
push
int
rcrb
xchg
lea
cld
fsts
vcmpeq_ospd
leave
and
cmc
or
notb
jne,pt
cmc
push
dec
adc
cmpsb
fwait
bound
pop
in
xchg
pop
fwait
aaa
loope
push
les
inc
mov
stos
insl
aad
adc
lahf
sub
inc
jge
cmp
fcmovbe
jecxz
pushf
inc
pop
push
lds
pop
sbb
xchg
iret
bound
insl
les
sub
pop
lods
scas
ret
repnz
adc
call
enter
ret
fisttpll
xchg
push
neg
fdivs
adc
aam
mov
stc
out
sub
mov
fwait
into
jno
lret
clc
mov
loopne
dec
mov
adc
sbb
stos
in
mov
jp
mov
jp
inc
jnp
lret
repnz
xchg
aam
jb
dec
jno
push
decb
popa
shrl
stos
mov
sahf
lds
repz
fstpl
insl
push
or
shrb
sub
pop
pop
loop
fwait
cmp
aam
stos
dec
or
jo
movsl
stos
adc
pop
or
xchg
pop
cmpsl
outsl
lret
mov
jg
xor
xchg
sbb
lock
out
pushf
sub
adc
and
add
outsl
out
push
push
out
inc
popf
cmpsl
adc
lret
repz
cmp
jae
enter
jg
mov
out
xor
mov
adc
adc
dec
xor
outsl
adcb
jbe
mov
push
cltd
gs
lahf
clc
enter
cli
iret
inc
call
addr16
mov
xor
std
aad
pop
leave
negb
lcall
nop
pop
and
cwtl
fidivl
test
in
scas
pop
insl
filds
mov
jmp
mov
mov
iret
je
adc
std
sbb
inc
aad
fs
mov
mov
jg
test
jae
mov
arpl
fldenv
idiv
and
cmpsl
imul
jp
pop
movsl
push
sti
pop
call
mov
xor
stos
push
stc
test
inc
sub
mov
scas
call
fcomps
mov
pushf
push
pop
jae
dec
inc
leave
push
cmpsl
mov
xchg
adcb
dec
fs
testb
pop
fstpt
addr16
adc
sbb
adc
dec
je
mov
test
cwtl
inc
inc
dec
push
rcrb
or
add
inc
imul
jg
test
dec
ret
jl
mov
lret
cmp
stc
fsubs
mov
mov
or
adc
addr16
mul
add
negb
pop
mov
sbb
xchg
pop
add
jmp
xchg
cmp
cli
sub
jge
sub
add
addl
mov
push
stos
or
aas
fwait
pushf
push
and
in
icebp
out
mov
xor
cli
mov
or
xor
fcomps
ljmp
adc
popa
repz
enter
out
lods
fisubrl
pop
insl
fldl
cwtl
test
jl
aad
roll
xchg
insl
push
jb
sti
fld
sahf
dec
sub
hlt
mov
sbb
pop
mov
test
aas
shrl
out
ljmp
xorb
addb
push
dec
rol
jo
jnp
push
push
xlat
xchg
out
arpl
out
ljmp
mov
xor
repz
loope
outsb
sub
mov
sahf
fildll
xor
cmp
popf
imul
pop
ret
dec
call
or
push
xchg
sbb
push
sbb
in
and
out
cli
pop
ja
shlb
or
xchg
testb
mov
and
dec
xlat
in
call
insb
std
pop
mov
into
shrb
add
mov
repnz
mov
push
adcl
loopne,pn
mov
shr
cmp
out
jge
repz
mov
sar
pushl
test
add
adc
fbld
ror
mov
es
add
cmc
jo
mov
mov
inc
out
inc
inc
xlat
and
hlt
call
lock
and
cltd
adc
fidivs
or
hlt
mov
movsl
in
faddl
mov
add
add
push
sar
xor
adc
mov
clc
pop
or
sbb
adc
push
push
sub
dec
xor
push
daa
and
ret
imul
dec
adc
out
mov
add
cmc
test
xchg
jl
jl
sub
dec
cmp
jecxz
add
lahf
in
xor
or
mov
add
xorl
mov
in
fwait
mov
lods
cwtl
add
arpl
andl
xor
push
repnz
loop
int
movsl
in
cmpsb
repnz
mov
cmp
mov
movsb
inc
imul
mov
testb
sbb
loopne
mov
data16
lods
mov
add
dec
pop
and
popa
jle
add
les
lods
mov
mov
mov
pushl
in
inc
subl
cltd
jae
cli
scas
int
cmp
cmpsb
ret
add
jle
inc
stos
and
cmpsb
inc
mov
jno
stc
or
pusha
stos
add
mov
int
add
cmova
mov
icebp
fisubs
sbb
lock
nop
daa
adc
or
push
ljmp
inc
mov
cmp
mov
jns
mov
test
xorl
xchg
sub
ret
cmp
inc
daa
testb
sti
xchg
cmp
adc
adc
stos
in
loop
pop
test
ljmp
xchg
or
filds
out
pop
and
pop
movsl
xor
jb
and
je
mull
sbbb
outsb
cli
aad
ret
lahf
scas
int3
hlt
sbb
jbe
inc
pop
mov
push
push
mov
mov
out
addr16
inc
add
bound
iret
cmp
jl
push
pusha
mov
lret
jb
ficomps
push
addl
dec
xchg
push
xor
in
cs
mov
aaa
jnp
add
add
repz
lahf
lods
insb
pop
xor
or
xchg
lcall
pop
cmpsb
adc
mov
push
outsb
jns
sahf
rcrl
subl
add
loop
scas
icebp
mov
mov
mov
mov
shlb
jg
push
out
loopne
mov
inc
fldenv
mov
popl
ret
data16
and
insb
xor
xchg
nop
loopne
daa
lahf
xor
dec
iret
pushf
lahf
mov
jle
mov
add
jno
push
mov
dec
sbb
xchg
xchg
mov
in
push
adc
testb
pop
lret
arpl
or
mov
xor
or
cmp
stos
inc
inc
jne
jnp
movsb
in
insl
dec
dec
sub
adc
add
mov
bound
pop
mov
sarb
pop
jnp
sarb
fwait
add
aam
pop
mov
xor
int3
stc
jge
add
push
ret
jmp
push
inc
ljmp
sbb
lret
and
jmp
loop
add
das
jnp
fcoml
imul
jle
insb
lret
ss
lahf
and
push
fdiv
mov
fnstcw
pushf
call
imul
addr16
es
add
sarl
ja
sub
add
icebp
pop
cmp
push
or
mov
mov
xor
test
add
lea
das
insb
cmp
hlt
xor
lock
sub
push
jbe
fsubrl
notl
shl
and
pop
inc
sbb
out
push
imul
negl
lcall
inc
mov
pushf
lods
pop
les
mov
cs
and
jecxz
mov
add
jecxz
xchg
ret
scas
mov
jmp
inc
scas
jb
dec
aaa
cltd
shll
mov
mov
xchg
dec
sbb
sub
xchg
jp
dec
add
adc
lret
mov
out
mov
xchg
xor
lods
sub
iret
inc
push
call
pusha
sub
out
outsl
sbb
outsl
popa
mov
movsl
add
jbe
test
mov
adc
adc
fmull
push
or
idivb
mov
xor
icebp
popa
jbe
testb
adc
jecxz
test
loopne
popa
jo
repnz
adc
or
cmp
aad
shrl
popf
xchg
repnz
int3
push
mov
ret
dec
sbbb
pusha
push
push
push
or
mov
add
das
stos
xchg
push
push
mov
lea
addb
push
sbb
inc
decb
rclb
jne
push
jne
dec
pop
sub
outsb
int
push
sub
lcall
inc
jl
xor
adc
inc
ljmp
mov
inc
xchg
mov
xchg
incb
cltd
scas
test
sub
push
out
testl
or
jns
sub
pop
repz
mov
shll
pop
adc
jp
mov
dec
lret
cmp
ds
clc
adc
mov
ret
xchg
add
or
jnp
mov
mov
je
je
cmp
jmp
test
inc
aad
fisubrl
push
leave
bound
sub
push
idiv
mov
sbb
add
mov
es
cmpsl
out
jne
jno
mov
divb
ss
popa
stos
shl
pop
fsubl
cmp
or
sub
jmp
push
ja
loop
popa
xor
fdivr
push
outsb
stc
add
push
lods
inc
cwtl
lock
push
cmp
clc
push
mov
filds
jne
push
sub
pop
lret
cmp
sub
mov
push
std
or
es
test
cmp
repnz
jmp
inc
sub
mov
mov
lahf
and
das
test
lret
xchg
into
in
inc
jae
jl
repz
inc
fs
sub
cli
out
inc
add
xchg
jg
in
sbb
sbb
mov
mov
cmp
mov
movsb
lds
inc
push
jmp
cs
cmp
pop
xor
notb
inc
mov
cwtl
add
add
sub
mov
adc
dec
sub
inc
aaa
inc
aas
fdivl
dec
jmp
mov
cld
daa
in
ss
sbb
movsb
sub
sbb
lret
mov
test
fs
popa
push
movsb
cmp
addr16
shlb
into
arpl
pop
incl
xchg
loopne
push
icebp
cmp
push
enter
jg
pop
fbld
or
sti
in
push
inc
cmc
mov
nop
call
lret
mov
cmp
sbb
test
pop
jb
imul
hlt
out
movsb
jne
sahf
notl
je
sub
shr
das
xchg
xor
repnz
cmp
jmp
lahf
xchg
cmp
xor
jnp
into
inc
or
imul
inc
stos
inc
jo
cmp
out
nop
push
aam
or
arpl
loope
jns
jb
xor
jnp
insl
inc
movsb
inc
mov
xchg
les
push
ret
push
loope
mov
mov
xor
ds
push
jo
cwtl
cmp
mov
mov
ret
pop
sbb
jnp
dec
rclb
sub
hlt
adc
ljmp
and
das
adc
and
xchg
inc
lods
cli
pop
cld
dec
ret
mov
imul
imul
je
adcl
inc
push
mov
in
aad
lea
push
pop
inc
jecxz
fsubl
fdivl
shrl
test
shrl
fsubp
pop
sbbl
les
movb
fnstenv
mov
pop
testb
ds
or
popf
or
mov
push
xchg
es
sub
fildll
aaa
in
inc
ss
jns
mov
adc
orb
pop
ds
hlt
sbb
xlat
fcoms
movsb
leave
and
and
xor
mov
xor
dec
movsb
rcrb
mov
inc
and
inc
push
mov
push
ret
popf
lret
or
and
mov
and
inc
repnz
sub
popa
jo
in
std
dec
push
jno
jl
and
inc
inc
pop
adc
adc
cltd
daa
ret
les
xchg
cmp
add
int3
popf
lock
or
aaa
js
js
arpl
dec
shrl
pop
imul
cmpsb
les
mov
aam
adc
push
testl
int3
push
pushf
and
adc
lods
fsubrs
jae
stos
iret
ds
jle
scas
pop
daa
test
mov
sbb
and
lcall
push
aad
in
cmc
mov
push
mov
pop
pop
ret
mov
bound
test
mov
rcl
in
dec
insl
mov
adc
insb
mov
mov
fsts
fidivs
aad
adc
and
dec
test
pop
inc
inc
shl
shll
sbb
mov
ja
dec
sub
dec
jl
lret
push
and
pop
sbb
les
inc
push
movsb
add
sbb
enter
cmp
fidivs
adc
mov
mov
cmc
mov
pop
mov
std
xor
xor
addb
lret
add
sbb
loope
mov
addr16
imul
outsl
enter
mov
lret
mov
cmpb
xor
add
adc
bound
int3
repz
bound
dec
cli
sbb
imul
xadd
dec
loopne
mov
jnp
bnd
jmp
mov
cmp
mov
xchg
hlt
and
sbbb
inc
pop
sbb
out
lret
jle
pop
xchg
xchg
ds
add
lock
adc
add
xor
sub
fdivs
aaa
dec
mov
in
and
sub
pushl
in
data16
ds
movsb
cltd
les
ja
xchg
out
xor
lods
pop
mov
popa
subb
add
xchg
cmpsl
cmp
and
xor
adcl
out
out
push
aam
stos
and
fstpt
mov
mov
mov
xorb
push
add
nop
xlat
sbbl
bswap
je
jge
cmc
psadbw
push
sub
dec
inc
mov
push
into
shlb
lods
pop
dec
or
mov
loope
bound
insl
pusha
insb
xlat
fdivl
pushf
pop
mov
and
aaa
pop
jbe
jmp
dec
dec
lea
xchg
inc
out
mov
fwait
pop
dec
lret
loopne
push
push
idiv
jg
jge
push
sbb
loope
js
and
out
ficompl
scas
jmp
dec
scas
mov
sbb
and
pop
xchg
ret
push
cmpsl
sub
loop
stos
mov
gs
cmc
pop
scas
clc
sbb
das
js
lret
popf
push
loop
dec
inc
push
and
insb
mov
jo
jo
jno
int3
add
adc
xchg
adc
xchg
push
scas
stc
popf
mov
popa
cld
push
push
mov
ret
out
adc
pop
clc
js
inc
adc
adc
dec
aas
fdivp
push
dec
andl
ret
and
enter
pop
cmp
int
sahf
mov
outsl
and
jae
cmp
jl
rolb
or
pop
decl
fistps
cmc
mov
inc
outsb
daa
hlt
hlt
jo
out
jg
mov
arpl
test
pop
pop
or
in
out
cmp
in
es
ret
sbb
sub
call
daa
shr
fwait
leave
loope
aad
push
fsts
es
mov
in
add
fldcw
xchg
aaa
xor
sahf
mov
ds
or
cmp
roll
int3
pop
cltd
data16
es
push
xor
repz
insl
push
pop
enter
jg
pushf
je
sbb
ror
dec
sbb
enter
test
nop
sub
or
xchg
jnp
mov
cmp
xlat
lcall
inc
fisubrl
jg
sub
aas
push
mov
hlt
les
mov
mov
or
mov
and
shll
pop
xor
mov
cltd
add
std
shr
shl
inc
mov
adc
stos
sub
out
cs
dec
xor
sbb
push
and
xchg
das
jl
movsb
ds
andb
xchg
flds
js
in
mov
sbb
outsl
xor
mov
in
shl
iret
cmp
cli
loopne
jle
jp
xchg
inc
bswap
inc
xor
xlat
or
enter
cmp
xchg
ret
push
and
jo
in
fxch
xchg
mov
js
pop
daa
cmpb
sbb
rcr
cmp
dec
imul
ret
into
dec
ja
call
inc
inc
cwtl
in
ja
pop
stc
gs
jge
pop
cmp
push
mov
test
mov
in
inc
daa
subl
pushf
gs
pop
insl
aas
lods
mov
inc
dec
pop
das
in
cmc
je
push
or
xorb
add
xchg
mov
or
jns
out
lock
add
fnstcw
xor
or
dec
mov
ds
iret
in
sub
mov
and
rclb
xchg
dec
out
jmp
cmpsl
mov
in
fld
xor
xor
std
out
std
imul
pop
mov
js
cmpsl
shll
pop
mov
mov
daa
cwtl
stc
aad
dec
cmpsl
imul
push
std
fidivrl
mov
cmp
sbb
and
and
pop
mov
or
push
push
aaa
ja
add
and
adc
xor
scas
insb
mov
inc
cmp
stc
pop
jae
stos
test
aad
dec
xor
addl
push
and
mov
lea
adc
jle
clc
das
pop
testl
mov
in
adc
fbstp
and
mov
cmp
mov
cli
push
aas
xchg
push
fsubrs
fisttpll
in
cmp
aad
xor
out
mov
cli
mulb
jl
or
les
cmc
push
mov
int3
cltd
sbb
inc
or
lret
fucomip
jno
sbb
add
mov
in
ds
popf
mov
pcmpgtd
clc
pushf
adcl
stos
aaa
fldpi
or
add
push
dec
sbb
into
jns
sbb
cmp
sahf
repnz
mov
jge
and
mov
push
out
push
push
mov
jne
mov
les
pop
sbb
popa
add
pop
scas
push
dec
rolb
icebp
pop
adc
out
scas
mov
xchg
push
sbbb
push
or
mov
repz
lea
lods
push
jne
cmp
xchg
aad
arpl
inc
xchg
jle
outsl
into
cmp
adc
dec
test
rorb
add
xor
mov
or
dec
cli
sub
mov
in
push
test
lret
cmpsl
xchg
popa
sbb
mov
frstor
xchg
add
es
cmp
xchg
fstl
mov
int3
mov
jl
mov
stos
pop
cli
inc
xor
mov
ret
xchg
lods
rolb
rorb
fs
add
popfw
mov
idivl
jne
repz
fincstp
pop
add
into
push
cmp
push
pop
xor
rolb
and
inc
iret
fcom
stc
lahf
or
sub
into
dec
inc
mov
add
fdivl
sub
push
cmp
std
lcall
addr16
sbb
cmp
je
cmp
in
adc
pop
or
mov
adc
movsb
outsb
fldenv
ret
cs
jecxz
stos
or
fidivl
or
and
adc
add
es
cmpsb
inc
insl
fsubl
xor
xchg
imul
cmp
fnsave
fisttps
mov
xchg
fucomip
push
movsb
adc
gs
mov
or
dec
pop
test
test
dec
adc
movsb
jb
lcall
testl
nop
scas
adc
jno
or
xchg
stc
jecxz
pop
pop
ljmp
dec
daa
mov
sub
xor
sbb
idivb
push
or
test
test
call
int
stos
mov
sub
and
insb
mov
jmp
movsl
or
mov
mov
ret
jb
sar
pop
loop
jno
lods
cmovae
jne
test
mov
enter
mov
add
or
push
cmp
arpl
lcall
pop
add
jp
inc
mov
ss
dec
jp
test
dec
das
ljmp
mov
sub
cmp
bound
bound
sahf
fldl
in
inc
fcomp
idiv
shlb
into
das
jb
adc
adc
mov
cwtl
lds
push
pop
cld
xchg
call
daa
jb
fsubrl
jl
cmp
movsb
dec
jb
std
jne
mov
and
cmpl
outsb
or
movsb
or
mov
push
repnz
mov
push
mov
pop
aad
scas
int
xor
lahf
iret
add
pop
and
inc
mov
jp
addr16
jo
or
inc
andl
inc
xor
insb
inc
shll
rolb
rcrb
xchg
push
lret
xor
repz
aad
and
xor
pop
pop
repz
test
and
jns
sub
dec
ljmp
cwtl
push
mov
push
push
adc
sahf
adc
out
xchg
cmp
movsb
and
xchg
push
jmp
dec
lock
push
mov
sbb
mov
outsl
add
int
sub
rcr
or
adc
jg
daa
nop
shrb
xchg
mov
test
enter
jae
out
push
inc
inc
push
adc
jl
outsb
cmp
pop
fisubl
stc
sub
popf
sbb
push
push
test
add
adc
sbbl
jns
push
out
lcall
adcb
push
inc
push
mov
ja
push
jp
mov
cmpsb
push
fsts
movl
std
aam
insb
pop
mov
mov
jae
pop
sbb
popf
data16
maxps
mov
into
int
mov
add
test
mov
or
jns
sbb
mov
dec
xor
pop
jno
push
pop
clc
or
adc
xchg
loope
gs
inc
dec
ds
sahf
cmp
adc
sarb
test
sbbb
or
add
pop
nop
lcall
sub
mov
jo,pt
jle
pusha
inc
xchg
imul
outsb
jbe
sahf
dec
lahf
aad
int3
xchg
popf
and
stos
es
or
std
fmuls
push
sub
mov
repnz
mov
aaa
mov
icebp
repz
inc
sbb
jecxz
inc
adc
shl
or
orl
lods
push
icebp
nop
jo
cwtl
mov
popa
and
aam
add
xchg
dec
pop
mov
dec
cmp
sahf
jecxz
scas
sti
xchg
jle
jne
inc
movsb
ljmp
add
mov
adc
jmp
scas
mov
jg
testb
xor
jmp
sahf
dec
stos
rcrb
cmpsl
cmp
xchg
mov
inc
mov
dec
jge
fs
mov
xchg
ds
push
scas
push
or
fisttpll
rolb
add
mulb
inc
in
push
iret
add
cmc
jge
mov
and
sbb
sbb
mov
stos
flds
mov
jno
hlt
imul
outsl
xor
jmp
push
or
int
push
es
xor
arpl
fstp
insl
les
aaa
outsl
das
mov
jne
jne
jge
cltd
out
mov
call
mov
sbb
jne
fdivrl
or
into
mov
pop
das
dec
mov
push
leave
push
inc
dec
sbb
rcrb
jbe
mov
sub
loopne
xor
push
or
out
mov
and
aas
mov
jo
ljmp
jmp
jge
mov
mov
cmc
fs
mov
fldcw
sub
dec
cmpsb
std
and
repz
xorl
inc
sbb
xor
cld
lret
sbb
sub
mov
push
in
pop
ficoml
add
mov
popf
mov
sub
push
sti
mov
mov
inc
sub
xchg
stos
lea
push
pop
test
scas
sub
rcll
loopne,pt
xor
jecxz
lods
mov
or
cmp
in
pcmpeqw
lods
punpckhdq
icebp
cltd
pushf
stos
push
insl
out
test
xchg
shl
push
xor
jns
cmpsl
sub
mov
das
mov
repz
pop
xor
mov
fistl
cmpsl
push
test
push
dec
sbb
mov
clc
lahf
push
aam
pop
push
push
lock
push
insl
jnp
sarl
mov
fprem
test
loopne
mov
pop
inc
pop
pop
sbb
or
insb
and
cld
popa
pop
xchg
push
jo
loop
loop
gs
dec
shl
xor
cmp
mov
adcb
test
xor
xchg
push
jecxz
cmp
mov
xchg
out
daa
adcb
cmp
aas
cmp
jmp
pop
xor
std
stos
pusha
insl
es
xlat
mov
sbb
cld
add
mov
push
outsl
int
mov
and
out
cmp
sbb
adc
inc
adc
sbb
sbb
bound
sti
in
ds
jmp
mov
mov
dec
into
add
xor
xor
dec
dec
jecxz
add
push
cmp
mov
int3
test
lcall
mov
outsb
and
cmp
cmp
xchg
inc
mov
mov
push
out
repnz
movsl
or
movsb
xor
add
sarl
inc
pop
movb
iret
call
and
je
out
fstpt
frndint
inc
dec
sbb
sub
mov
aaa
lods
sub
xor
scas
adc
out
or
sub
cs
notl
pop
jae
cli
fbld
into
sub
aas
mov
decb
dec
cmp
movsb
bound
pop
mov
pushf
outsb
das
jb
pushf
fsubrl
push
add
cltd
ss
push
in
sub
enter
and
hlt
pop
dec
dec
and
test
mov
fsubl
loopne
mov
xchg
ss
int3
xchg
lea
pusha
cmp
and
xor
or
add
popa
push
fcomps
cmp
inc
sub
dec
mov
in
mov
loope
pop
push
mov
cmp
shll
jge
sub
in
movb
adc
cmp
add
sbb
sbb
jns
lds
mov
aad
call
outsb
and
mov
je
data16
mov
jae
cld
xor
mov
adc
push
inc
and
pop
push
xchg
insb
xchg
int3
loopne
ret
nop
add
dec
cli
inc
jno
adc
push
pop
shrl
dec
xlat
pop
dec
aaa
addl
cmp
jae
addb
lret
jle
mov
xchg
jp
sbbb
push
subb
or
clc
fnstenv
mov
call
push
push
xor
jbe
mov
mov
xchg
push
nop
xchg
xorl
xor
mov
popf
into
ret
mov
push
push
xor
mov
add
test
icebp
push
loop
push
push
aas
jb
test
mov
sbb
fiadds
jo
fstps
dec
and
xor
int3
sbb
pop
xchg
inc
mov
mov
dec
incl
mov
push
into
pop
mov
or
lock
in
pop
dec
push
sbb
dec
ret
mov
lods
lret
or
or
js
aaa
pushf
jno
push
dec
cwtl
sbb
add
into
sub
dec
call
cmp
add
ret
jg
jmp
bound
jo
repnz
pop
pop
jge
jecxz
jno
in
mov
ret
out
mov
sbb
add
es
nop
in
cmp
pop
sub
ss
pop
nop
aam
sbb
movsb
pop
xchg
push
jge
adc
shlb
pop
mov
adcl
sub
arpl
out
cmp
scas
ja
filds
xchg
xorb
sbb
in
push
or
imul
outsb
sbb
std
cmpsl
pop
loope
inc
xchg
fdivl
sbb
test
shrd
dec
xor
adcb
inc
inc
sub
repz
gs
repz
xchg
popa
push
xchg
mov
jp
adc
in
jmp
int3
daa
aaa
and
insb
movsb
and
lcall
and
out
inc
lcall
sbb
fwait
dec
sub
mov
add
push
stos
test
push
lods
loopne
sahf
in
mov
pop
add
jno
dec
cmp
mov
mov
push
mov
cmp
mull
or
jo
mov
sahf
pusha
scas
add
out
mov
mov
aam
addb
inc
add
movsl
cltd
fldcw
cmp
jg
xchg
notb
pop
sub
js
push
iret
xor
and
repz
push
mov
add
mov
jmp
dec
jge
adc
js
jp
loope
mov
xor
or
ljmp
mov
stos
mov
adc
lret
sbb
aam
xor
mov
xchg
mov
daa
cwtl
shll
pop
stos
bound
jmp
mov
fcomps
xchg
cltd
push
imul
ds
jp
in
outsl
inc
movb
mov
pop
mov
dec
mov
pushl
aam
out
sbb
xchg
pop
adc
push
mov
mov
repnz
fildl
adc
cmpsb
dec
scas
dec
xor
cs
call
popf
roll
ret
and
lret
sbb
lret
xchg
push
mov
inc
or
add
repnz
int3
adc
xchg
mov
xchg
and
xor
lret
repz
jmp
lods
and
mov
sahf
rolb
mov
into
loop
push
mov
or
cmp
out
sub
or
fisttps
std
movsb
movsl
push
and
push
mov
popa
mov
mov
mov
jne
imul
and
dec
stos
mov
pop
cmc
stos
inc
push
js
ja
jg
cmp
push
jbe
dec
imul
gs
sbb
inc
pop
fldz
fbld
push
xchg
ret
mov
int
aas
pop
pusha
pop
ret
jne
roll
push
adc
mov
sahf
sub
mov
jmp
inc
cmpl
pusha
xor
mov
movsl
dec
inc
push
xchg
push
ds
in
inc
insl
add
cmc
sbb
out
jnp
jns
add
adc
inc
jmp
dec
es
mov
pop
mov
test
out
je
and
rolb
push
adc
cmp
rcrl
ljmp
scas
adc
out
pushf
out
aaa
push
test
mov
sub
rcrb
sti
aas
mov
sub
sub
dec
pop
sub
outsl
fdivl
push
add
in
setl
and
xchg
push
mov
push
iret
rorb
daa
jo
xchg
mov
addr16
cmp
jno
cmc
xchg
push
adcl
cmpsb
or
mov
sti
out
add
movl
dec
inc
adc
cmp
lods
push
xchg
xorb
mov
xor
shrl
lods
push
mulb
int
lret
mov
pop
subl
inc
jle
icebp
xchg
lods
pusha
sbb
jo
cld
jae
dec
adc
add
mov
fidivl
fisubs
dec
and
addr16
and
scas
mov
scas
outsl
aaa
and
or
in
imul
les
sbb
xlat
int3
jne
cltd
mov
stos
icebp
sbb
icebp
mov
push
call
sbb
sub
xchg
add
gs
mov
xor
lods
fdivs
mov
mov
idiv
out
inc
adc
sub
mov
sbb
or
mov
or
inc
mov
aas
insl
ljmp
add
dec
sub
pusha
or
rolb
aam
pop
inc
or
mov
fcmove
mov
lret
pushf
popf
call
ja
add
and
or
xchg
stos
push
lods
mov
xor
sub
dec
and
dec
scas
mov
adc
pop
mov
scas
icebp
xchg
or
imul
push
movsl
push
cmp
and
ffree
pop
data16
push
sbb
rcrl
inc
mov
jmp
inc
sub
leave
repz
lock
movsl
mov
dec
xchg
fistl
ljmp
add
jge,pt
fldenv
cmp
pop
mov
fldenv
inc
popf
jnp
imul
leave
scas
adc
cltd
xchg
orl
rcrb
pop
in
sub
js
jmp
cmpsl
js
stos
fwait
js
mov
or
test
int3
xchg
lcall
sbb
mov
mov
xor
loop
stc
outsb
cmp
mov
je
or
sbb
nop
roll
inc
jno
sbb
in
mov
in
jmp
out
push
pop
sbb
mov
loope
addr16
push
out
sub
jb
fisttpl
mov
xchg
enter
sub
xor
xchg
scas
in
push
je
mov
pop
mov
flds
icebp
out
xchg
fsubl
inc
dec
call
lret
cld
adc
sbb
fadds
add
sbb
dec
push
mov
cli
gs
ja
pop
mov
dec
pop
push
xor
ret
xchg
repnz
push
sub
inc
sub
scas
js
repz
ds
cmp
pop
sub
iret
out
ja
push
rcll
or
mov
cmc
mov
mov
fmulp
push
mov
int3
stos
in
cmc
mov
cmc
push
testl
jno
das
push
dec
aad
in
or
int3
out
xchg
scas
out
push
cltd
inc
jbe
adc
fwait
push
cld
decb
fcomi
test
imul
mov
xor
jns
xchg
or
mov
imul
clc
xchg
cmpb
mov
pop
xor
pop
in
adc
in
mov
notl
stc
lds
aam
sbb
outsl
mov
loopne
lea
adc
mov
into
sub
sub
stos
sbb
je
out
scas
mov
int3
dec
clc
sub
cmp
loope
sub
nop
mov
rcll
lret
test
xchg
lock
pop
ret
test
pusha
cltd
sub
push
testb
stc
or
movsl
dec
mov
jbe
cwtl
push
add
ret
popa
jmp
push
sub
mov
adc
out
push
push
mov
leave
push
imul
jne
or
jle
lds
jl
cwtl
movsl
mov
hlt
xchg
out
add
lea
mov
and
outsb
xchg
pusha
pop
and
sub
add
inc
mov
sub
enter
sbb
or
mov
clc
shll
jmp
cmp
mov
js
fwait
inc
cmp
outsb
push
shlb
stos
inc
mov
mov
mov
jo
jle
sbb
sbb
or
test
arpl
jmp
mov
sub
inc
pop
inc
inc
ljmp
sub
inc
test
mov
sub
mov
pop
out
out
pop
pop
repz
and
mov
sub
test
mov
pop
pop
cmpsb
js
or
pop
jp
sub
mulb
bound
sub
outsl
push
mov
mov
xlat
ret
mov
aam
fildl
loop
leave
mov
push
fisubs
add
jl
idiv
orl
inc
sub
cs
repz
mov
jle
insl
mov
or
nop
mov
fstps
lcall
int3
mov
out
stos
adc
mov
popa
insb
jle
movsb
sub
add
mov
movsb
leave
pop
and
inc
out
add
jae
das
mov
stos
rclb
sar
rorb
jae
pop
loopne
adc
and
mov
sahf
iret
frstor
push
cmp
mov
insb
adc
das
call
cmpsl
dec
sbb
cmp
inc
lea
mov
inc
cmp
mov
push
les
shlb
pusha
jno
icebp
push
stos
icebp
shrl
int3
push
mov
sub
jg
lds
test
int
es
sub
fxch
mov
push
pop
cld
pop
inc
lea
push
xchg
lea
xchg
filds
push
add
daa
in
aaa
cmp
orb
ror
push
insl
ds
push
andl
fiaddl
mov
and
pop
enter
pushf
adc
adc
cmp
jl
push
cmp
sbb
fnstsw
pop
cmp
push
mov
test
mov
mov
iret
sbb
xchg
xor
test
loop
mov
lahf
mov
push
sbb
mov
or
pop
push
shrb
ret
mov
cmp
sub
sub
push
dec
xchg
sbb
sbb
xor
orl
imul
pop
mov
cwtl
add
sbbb
jmp
cmp
lods
xchg
sub
mov
adc
jne
movsl
hlt
int3
std
push
out
pop
cmp
pop
xor
out
xor
xchg
cld
jmp
cmpsb
xlat
mov
scas
sub
cmpsl
std
xor
xor
add
sub
sub
pop
and
adc
dec
scas
insb
push
lahf
jmp
scas
xor
outsl
stos
lock
push
dec
mov
shll
xchg
nop
test
add
xchg
iret
cltd
ds
jns
and
repnz
fldl
sub
lds
lea
inc
xchg
cs
in
lret
inc
push
push
scas
xchg
ja
xchg
mov
cmp
addr16
pop
adc
and
fcmovnu
leave
pusha
push
pop
into
mov
xor
negb
push
pop
mov
adcl
cmpsb
adc
dec
jge
sbb
mov
add
mov
jmp
lea
in
cmp
jo
shrl
loopne
adcb
mov
test
fistpl
mov
orl
and
repz
and
jbe
cld
sti
mov
adc
lret
sbb
sub
add
sarl
and
aas
int3
adc
cltd
andl
aas
int3
jae
mov
adc
sub
fstl
sbb
loope
lret
imul
mov
loop
mov
sub
jo
scas
mov
push
bnd
sub
sbb
nop
inc
adc
call
mov
jo
pop
sti
xor
stc
jp
and
inc
bound
aas
inc
add
cmp
push
dec
xor
mov
mov
sub
fbld
add
mov
and
in
ret
lea
add
mov
pop
in
rorl
mov
inc
sub
ror
push
adc
loope
out
in
push
ss
and
xchg
lods
xor
pop
cmpsb
sub
add
xchg
inc
sbb
pop
inc
adcl
addl
xchg
mov
sub
stos
scas
test
or
clc
sahf
or
xor
mov
lods
loope
test
push
sub
loop
ds
mov
dec
and
push
mov
jnp
and
dec
mov
and
jg
stc
mov
sub
cmp
lods
pop
stc
sahf
ss
loop
push
insl
sub
int
sbb
lds
xor
bound
into
scas
popa
mov
das
mov
js
out
jo
and
lahf
lret
aam
inc
or
add
ds
sbb
add
mov
lds
dec
add
lods
out
test
xor
jno
jae
sub
adc
cwtl
outsl
arpl
stos
xchg
dec
std
adc
test
cs
in
add
mov
or
jg
lea
pop
adcl
push
xor
pop
in
push
jns
cmp
loop
jns
test
push
lods
cmp
aam
jae
aaa
dec
sbbb
sub
and
std
sbb
outsl
add
daa
xlat
orl
movsb
daa
sti
inc
xor
roll
sbb
mov
les
add
roll
sbb
inc
gs
push
and
decl
nop
sub
or
mov
fldcw
int
mov
pop
cwtl
cmp
decb
adc
stos
push
and
xor
push
dec
pop
rcll
sbb
mov
andb
add
repnz
add
xchg
pop
pop
and
inc
repz
fs
xor
dec
mov
mulb
fdivs
stc
sbb
jne
dec
not
push
push
fdivrl
ret
push
adc
and
ret
ret
jbe
or
adc
sub
in
clc
mov
pushf
aas
inc
bound
inc
rcr
and
and
and
jmp
cli
push
in
inc
int3
add
dec
dec
out
adc
add
ss
or
xchg
mov
lret
cmp
lea
std
shrb
leave
test
xchg
xlat
adc
mov
lds
out
mov
inc
sub
sbb
mov
lcall
pop
sbb
cs
mov
divl
scas
out
xlat
push
xor
andl
or
mov
xchg
jae
sbb
jp
test
dec
mov
mov
or
jge
ljmp
xor
cli
int
xchg
and
in
out
incl
jecxz
mov
cltd
iret
cmpsl
fldl
and
aas
dec
aaa
insb
aad
les
mov
push
sub
jns
pop
in
loopne
xchg
xchg
mov
mov
int3
sbb
mov
sbb
inc
sub
ret
xchg
pushf
and
sbb
loope
mov
mov
aam
stos
sub
nop
test
sbb
xor
cld
mov
or
mov
cld
movsbl
dec
sbb
insb
scas
imul
lcall
inc
and
mov
pop
pop
rep
lods
sbb
xchg
imul
ret
adc
mov
in
xor
les
shll
out
lcall
jge
dec
inc
ret
jl
rdmsr
pop
rolb
cmp
mov
mov
inc
xchg
pop
pop
jmp
in
hlt
daa
and
mov
xor
ret
arpl
hlt
sbb
loope
lock
lods
add
outsb
ret
xor
mov
cltd
adc
dec
incl
nop
dec
in
add
mov
lret
or
cmc
std
scas
and
lds
fiadds
dec
into
xchg
sbb
jo
sub
jle
cmp
sub
les
rep
or
sbb
arpl
mov
stos
je
imull
mov
jle
fistpll
jne
and
add
mov
movsl
adc
xchg
mov
pop
pushf
adc
iret
out
xchg
mov
jbe
repnz
pop
movsl
jle
sar
fstpl
cmp
and
test
push
mov
std
mov
je
adc
subb
xchg
sub
sub
das
sbb
ret
xchg
jae
mov
push
in
in
xor
and
or
out
mov
mov
fldt
adc
mov
push
loop
out
pop
push
lahf
and
xchg
aaa
je
insb
and
push
aaa
ljmp
jle
in
lea
mov
jo
xchg
xor
outsl
rclb
mov
mov
add
mov
lcall
mov
ja
mov
lods
or
mov
xchg
add
xor
cltd
sub
fistl
and
inc
mov
dec
jns
or
push
cmpsb
out
mov
pop
pushl
ficoml
mov
push
mov
test
int3
pusha
scas
push
sti
xor
stos
js
adc
mov
or
hlt
mov
push
das
cmc
pop
loopne
cs
push
nop
in
and
and
loope
sub
loop
mov
push
es
xchg
and
sbb
ds
push
mov
pandn
std
mov
adc
pop
and
test
stos
jb
push
jle
or
and
lcall
mov
lcall
jge
xchg
push
and
fwait
mov
lods
xchg
add
sub
movsl
rorb
adc
cmpb
dec
js
mov
jns
ficompl
xlat
movsb
aaa
mov
out
cld
mov
or
mov
out
xchg
imul
push
outsl
flds
aam
dec
sbb
dec
jnp
pop
cld
cmc
ret
pop
inc
push
inc
mov
push
daa
pop
pop
mov
test
xchg
push
jno
and
cwtl
cs
and
and
fcomps
sub
hlt
test
stos
xchg
rep
dec
pop
cmp
lods
cltd
dec
imull
push
cmp
in
inc
insl
xchg
mov
jge
jmp
leave
outsl
pop
addr16
fiadds
movsb
push
or
lahf
sbb
stc
mov
jmp
and
push
hlt
cmpsb
popl
push
xor
test
jl
out
cmpsl
and
movsl
std
loopne
xor
sub
ds
lods
scas
rclb
or
iret
sbb
pop
inc
je
dec
aam
inc
inc
mov
fstpl
movl
and
das
imul
das
push
mov
push
push
xchg
push
iret
loop
adc
push
loope
pop
mov
sub
fisttpl
pop
adc
or
fs
inc
stc
and
std
pop
out
xchg
jne
out
repz
or
idivb
push
mov
xor
mov
gs
je
and
mulb
and
sub
fadd
sbbb
mov
xchg
ds
pop
pop
push
outsb
or
aad
sti
adc
cmc
mov
add
fdiv
mov
and
divb
jp
std
inc
push
in
movl
add
xchg
xor
inc
jnp
sub
loopne
fisubl
jae
lods
xor
pop
test
stos
inc
aam
jg
or
sub
and
out
js
cmp
dec
or
out
mov
clc
fs
and
fbld
outsb
sti
jp
repz
push
imul
call
sub
out
andl
fwait
dec
inc
xlat
imul
pop
shll
and
test
sub
mov
push
nop
cli
ss
inc
and
cmp
gs
adc
dec
mov
jne
and
xor
in
jg
cmp
ss
push
sbb
stc
ds
xor
in
arpl
inc
lahf
mov
arpl
or
insb
arpl
std
addr16
test
pop
and
sbb
sete
mov
dec
int3
clc
inc
shll
les
insl
adc
mov
das
cmp
mov
es
sbbl
push
stos
imul
in
call
in
push
test
jno
mov
inc
cmpsb
aam
push
loop
xor
fmull
push
mov
bound
in
test
stos
aaa
jo
div
pop
push
loop
outsl
enter
pop
mov
fwait
xchg
pop
xor
add
outsb
or
fdivrs
sub
test
lahf
imul
and
jmp
addb
add
jae
stc
dec
jecxz
ds
dec
add
rorb
outsl
loope
mov
shlb
xchg
and
xchg
xor
pop
jno
notb
adc
and
ljmp
addb
or
fdivrl
mov
pop
xor
in
jmp
adc
in
cmp
cmp
cmovo
jl
sub
push
cmp
xlat
arpl
xor
movsl
lea
sub
xor
stos
outsl
sub
adc
call
and
adc
ja
xlat
push
fsubp
mov
xor
sub
pop
dec
rol
inc
xchg
int3
push
push
repnz
mov
xchg
leave
repnz
aaa
jmp
sbb
mov
jecxz
je
les
jnp
lods
lret
fimuls
push
lea
push
sub
dec
mov
imul
imul
popf
loopne
jbe
mov
xor
popl
sub
mov
mov
cmpsb
fnsave
xchg
gs
and
aas
xor
add
jae
out
mov
sbb
sti
in
cwtl
negb
mov
cmovle
and
call
inc
push
xchg
addl
mov
push
pop
dec
xor
sbb
insl
insb
mov
jb
js
push
jl
jecxz
push
push
jl
in
cmp
push
fisubrs
fdivr
and
mov
mov
andb
xchg
mull
rcrb
stc
pop
in
add
scas
shrl
cmp
jae
push
popf
pop
cs
lret
mov
add
fdivr
std
mov
cmp
lret
xor
cltd
daa
into
gs
inc
inc
inc
call
mov
popf
or
in
les
lahf
in
roll
test
jge
xchg
insb
flds
mov
cwtl
bound
or
filds
lahf
cmp
push
sbb
sahf
inc
imul
and
ss
fwait
jmp
fwait
out
shr
jnp
mov
aad
adc
mov
mulb
popa
gs
test
mov
xchg
jp
movsb
push
nop
daa
pop
popa
mov
sub
push
fistps
jbe
add
pop
test
fadd
ffree
in
jbe
push
pop
into
xchg
fs
mov
outsl
mov
push
out
fidivs
in
adc
mov
sahf
stc
incl
jg
or
sbb
inc
out
fbstp
push
pop
dec
and
repnz
orl
sbb
xchg
xchg
ljmp
jmp
sahf
insl
push
dec
push
jae
cmp
push
sub
mov
les
cmp
sbb
xor
pop
sbb
dec
fwait
outsb
dec
jle
mov
xchg
and
fwait
std
popf
add
pop
mov
enter
lods
loopne
nop
cmpsl
xchg
scas
xchg
sbb
daa
jbe
leave
adc
dec
notb
xor
test
add
pop
and
test
lock
inc
sti
mov
inc
sub
ret
xchg
das
in
xor
lret
fcmovu
aad
or
sub
adc
xchg
jns
sbb
lea
and
repnz
add
cmc
cwtl
mov
push
icebp
mov
test
jb
xchg
daa
stc
or
pushf
imul
scas
dec
mov
pop
add
cmp
js
mulw
fadd
or
into
adc
pop
mov
ljmp
or
nop
cmp
cli
mov
cmp
mov
adc
mov
cmp
or
fisubrl
aam
subb
jle
jmp
xchg
jl
xchg
push
adc
jge
int
outsl
iret
loop
adc
andl
dec
mov
and
push
push
xchg
lcall
aaa
pop
pop
jecxz
roll
jecxz
setns
aad
lret
test
jbe
insl
dec
jnp
fwait
shlb
push
sub
mov
js
ret
ds
jge
inc
fcmovnbe
clc
mov
cwtl
fists
xlat
leave
and
ljmp
out
push
mov
ds
lret
xchg
int
push
fwait
push
pop
pslld
outsb
repnz
push
stc
xchg
mov
xor
inc
pop
mov
fnstcw
jl
mov
add
xchg
mov
jp
lret
inc
or
in
ja
and
test
push
cmp
in
xor
adc
outsl
cwtl
lds
sub
add
cld
mov
add
sub
rol
xchg
std
push
push
rol
sahf
xchg
std
outsb
push
cmp
scas
xor
or
lods
jno
es
jnp
mov
in
pop
dec
pop
fucomi
fwait
pop
cmp
and
inc
repnz
jb
sub
int
hlt
in
std
lahf
sbbb
inc
adc
rorl
jg
jne
shll
pop
es
xchg
js
out
imul
adc
jo
pop
aam
jge
ficomps
mulb
test
mov
xchg
jmp
je
adc
sbb
test
dec
pusha
loope
inc
mov
xchg
cmp
mov
xchg
and
add
jnp
xchg
mov
push
jg
pop
das
lret
dec
aam
nop
aad
decl
inc
jb
mov
aam
mov
iret
xchg
repnz
ret
scas
insb
dec
pop
and
aaa
fs
in
lock
lcall
xchg
inc
call
cmp
xor
mov
inc
cmpsl
icebp
pop
ss
stos
fadd
push
lods
adc
out
dec
dec
in
mov
lahf
js
sub
adc
inc
mov
test
fdivrl
mov
jge
mov
lds
fabs
adc
push
sbb
aaa
stc
add
cmp
xlat
clc
aad
imul
inc
or
aad
fwait
mov
mov
fwait
push
cld
cmp
and
xchg
pop
and
es
jb
idiv
mov
and
fucomp
mov
lcall
in
xor
fidivrl
lods
lods
add
bound
jge
in
mov
clc
add
es
pop
lds
nop
mov
add
adcb
hlt
out
add
mov
lods
pop
cmp
daa
inc
stos
clc
or
mov
dec
cmpsb
jbe
shl
or
mov
cmp
test
pop
enter
cmp
into
imul
lahf
xchg
pushf
das
dec
ljmp
repz
cmc
push
lret
int
repz
pop
inc
mov
lahf
jns
cmc
mov
jmp
shrb
mov
rolb
add
lahf
nop
movsb
popa
xchg
sbb
lock
xor
xor
pop
fidivs
pop
mov
sbb
push
push
fiadds
jno
iret
push
stos
nop
adc
mov
popf
test
rolb
pushf
shl
dec
enter
icebp
and
stos
dec
mov
xor
subb
xlat
fisttps
call
pushf
sahf
or
test
jo
pusha
or
sarl
adc
inc
inc
push
mov
hlt
test
scas
push
mov
jmp
mov
cmp
sub
popa
and
cmc
sbb
popa
cmp
mov
mov
dec
dec
xchg
lock
sub
outsl
outsb
ret
pusha
mov
call
adc
and
cmpsb
mov
fmull
jne
in
inc
call
xchg
push
dec
mov
pop
push
add
cmp
fwait
enter
scas
iret
mov
push
fnsave
mov
fdivl
dec
fdivs
xor
not
out
push
pop
aas
insl
shlb
test
jmp
test
cmp
sub
testb
inc
cs
push
scas
xchg
out
jns
dec
mov
push
sar
xchg
jg
push
dec
xor
push
sti
push
adc
out
push
fdiv
clc
push
or
in
in
inc
adcl
jnp
cmp
jns
push
sbb
jmp
jmp
test
inc
ja
in
cmp
scas
lcall
pop
scas
dec
and
icebp
ja
inc
lods
or
sub
lahf
dec
dec
xor
push
cs
in
fs
popa
lret
pop
arpl
fnstenv
adc
sbb
ljmp
fstl
mov
aaa
and
cmp
adc
adc
pop
cs
sarb
mov
test
inc
sub
arpl
xchg
jbe
jg
std
or
jmpw
pop
mov
push
jl
pop
int3
movsb
popa
xchg
in
cli
cmp
jmp
fldcw
jns
inc
pop
jl
xchg
xchg
addr16
xchg
jg
lret
std
adc
stos
andb
adc
pop
fiaddl
lods
push
mov
pop
js
movsl
jmp
add
fwait
clc
sub
in
or
daa
test
ror
orl
xchg
mov
cmpsb
fwait
sub
fistpll
and
dec
rorb
mov
das
mov
cwtl
adc
mov
mov
pop
lret
imul
and
adc
jnp
std
pushf
hlt
cli
out
insb
fsubs
arpl
test
or
lds
inc
out
or
sbb
sbb
mov
mov
mov
iret
aam
test
push
push
sub
jo
mov
add
pop
cli
jle
sti
pop
jne
lret
ja
into
insl
lods
fldcw
or
aam
mov
out
sahf
jg
xchg
xlat
inc
mov
lods
loop
jl
jns
mov
fwait
jge
push
sub
adc
sti
sub
ds
hlt
xor
pop
js
fistpl
outsl
into
xchg
out
int
cltd
pop
xor
cmp
shl
cmc
daa
push
mov
in
popa
into
fucomp
pop
sbb
jae
mov
sub
sub
dec
add
inc
out
push
out
dec
addr16
adc
xchg
xor
fbstp
cli
and
enter
mov
mov
mov
loope
mov
and
sub
inc
xchg
std
in
jl
outsb
inc
cmpsb
pushf
notb
push
add
lea
xchg
pop
int3
shr
mov
jns
iret
xchg
mov
push
movsb
pop
testb
push
pop
pop
cwtl
adc
cmpsl
sub
mov
or
imul
pop
call
add
jb
mov
in
call
jle
xchg
inc
push
pop
dec
icebp
aas
pop
pop
sub
xor
inc
cmpsl
popa
and
pop
and
ret
sub
loopne
aad
and
enter
or
sub
scas
mov
movsl
cltd
nop
xchg
jg
adc
int3
std
mov
std
mov
push
rolb
hlt
jo
xlat
ret
jl
stc
cmc
xor
mov
mov
jne
out
sbb
out
mov
out
xchg
fwait
xchg
push
vmread
xchg
shrl
cli
and
cmpsb
je
shrl
inc
nop
sti
push
insb
xchg
or
pusha
xchg
popf
fwait
shr
imul
xchg
inc
xchg
or
shrb
xchg
repnz
xchg
inc
les
adc
insl
arpl
and
das
or
cmp
loope
pop
arpl
dec
daa
jb
out
dec
push
fsubrl
cmpb
call
sub
jle
xchg
xchg
daa
mov
fs
shl
xchg
in
mov
add
fnstenv
and
mov
xor
xchg
mov
fstpl
imul
or
inc
dec
pusha
cmpsl
imul
shl
add
nop
aaa
in
or
jne
push
cmp
mov
mov
loopne
cmc
idivl
push
rorl
loop
lds
mov
jecxz
xchg
pop
cld
cs
fsubrl
int
enter
push
dec
lods
sbb
popa
ror
fiadds
push
jb
jno
pop
mov
mov
xor
jg
pop
sub
mov
push
xchg
pop
outsb
pop
mov
outsb
fs
mov
and
das
nop
cmp
push
mov
inc
in
ds
add
ljmp
dec
xchg
fld
cmpsb
xor
inc
dec
add
xchg
inc
pop
adc
cmpsb
add
adc
mov
push
mov
xchg
cmpsl
mov
jne
xchg
or
push
mov
popa
mov
in
out
mov
subl
xor
fcoms
mov
dec
fimull
or
mov
xchg
jge
pop
jp
lock
rorb
ja
inc
dec
cmp
roll
es
clc
shrl
add
adc
rolw
ss
jmp
dec
xchg
xchg
out
pusha
ja
in
js
ret
sub
push
xchg
scas
cmpsb
cmp
push
mov
mov
popf
fsubl
call
jg
mov
mov
xchg
mov
mov
cmp
mov
mov
xor
aas
shl
stc
arpl
adc
inc
lahf
jl
xchg
push
jp
imul
ja
sub
and
and
sbb
pop
dec
inc
push
js,pt
cmp
stos
movsl
xor
cmpsb
xlat
pop
push
call
sbb
xchg
mov
out
loopne
xchg
lret
mov
jae
cmp
push
dec
into
sbb
ret
mov
inc
test
testl
adc
mov
dec
dec
scas
jmp
mov
inc
fcoml
jmp
dec
ljmp
inc
push
pop
loope
mov
sub
shlb
dec
out
xchg
mov
test
sub
mov
and
aaa
cmp
mov
cli
pop
imul
mov
mov
arpl
sub
or
rcl
das
loop
or
jecxz
movsb
mov
insb
dec
jecxz
and
lahf
or
and
addr16
or
jmp
jo
sahf
sti
js
mov
mov
adc
xor
jg
jmp
pop
out
xor
std
divw
daa
sub
add
jbe
or
movsl
push
insb
and
mov
cld
and
in
inc
push
cmp
mov
jmp
jge
xor
jecxz
jl
mov
push
iret
cli
cmp
fdivrp
out
and
je
jae
xchg
add
or
test
in
jl
test
repz
insl
sahf
in
je
adc
mulb
mov
cmp
jmp
dec
fs
sub
xchg
and
cld
in
or
sub
xorb
insb
enter
push
xchg
add
mov
sbb
out
aad
xor
jge
and
scas
xchg
jp
sub
push
mov
mov
jmp
sahf
mull
daa
push
pop
pushf
mov
sbb
dec
cltd
mov
adc
pop
mov
mov
cmpsl
and
mov
push
int
add
xor
mov
gs
mov
ret
loop
pop
pop
or
mov
sahf
push
leave
dec
rcrb
mov
or
pop
fcoml
scas
mov
in
hlt
pop
ss
ljmp
jg
mov
cltd
jmp
cs
mov
enter
mov
lds
test
je
jecxz
dec
sbb
mov
fisttps
cs
in
xor
out
push
sub
mov
ffree
add
or
test
hlt
rorb
iret
mov
addr16
out
int3
pop
das
out
aad
add
and
cltd
addr16
cmp
stos
negl
pushf
daa
sub
mov
push
lods
inc
and
sbb
fdivrs
or
or
scas
rcrb
pusha
jmp
iret
jb
outsl
mov
lock
mov
pop
sub
insl
add
or
dec
add
sub
xlat
incl
vpsrlq
push
in
or
test
xlat
cmpsb
addr16
sbb
sbb
sub
fisubl
inc
fwait
test
push
jns
sbb
inc
daa
cmpsl
xchg
or
xchg
stos
mov
mov
cmp
je,pt
mov
sub
in
clc
adc
popf
add
jns
ror
adc
mov
das
pop
insb
jno
out
inc
lods
sub
fs
mov
and
fcompl
lods
mov
stos
xor
jae
inc
arpl
fidivs
push
lods
mov
loope
mov
lcall
add
or
push
mov
loopne
movsb
cmpsl
sbb
cmp
pop
xor
pop
jb
fld
cld
or
adc
jle
or
pop
ret
out
xor
and
xchg
inc
dec
push
bound
mov
jmp
arpl
or
paddd
sti
sbb
ret
out
decl
push
and
sub
fmul
cmpsb
insl
pop
jnp
pop
call
dec
into
rol
mov
lds
dec
push
dec
adc
lods
inc
lods
push
xchg
add
pop
nop
mov
test
inc
fstps
mov
in
repnz
pop
lds
jne
mov
out
fnsave
jnp
movsl
xchg
out
ret
sti
hlt
sahf
pop
or
in
ss
sbb
mov
pminsw
icebp
or
jns
mov
mov
subl
jmp
xor
stos
mov
pusha
dec
push
aaa
or
inc
adc
movsl
out
fldcw
pop
adc
js
inc
daa
iret
dec
int
xor
lock
cmp
xchg
nop
das
jg
xlat
rorl
xor
fldl
inc
mov
xchg
mov
test
mov
pop
mov
mov
icebp
pusha
call
adc
ficomps
push
inc
or
cmovns
dec
lahf
aad
mov
adc
cmc
mov
or
mov
or
push
mov
xchg
and
iret
es
push
jecxz
flds
sub
xor
mov
cmpsl
inc
cmpsb
push
pop
xor
or
push
out
mov
lods
icebp
mov
dec
sub
push
xor
cmpsl
daa
ficoml
xchg
push
pop
xor
pop
pop
insb
push
das
test
adc
sub
dec
push
mov
mov
xchg
sub
out
rcll
insl
xor
push
out
lods
or
adc
sub
insb
aaa
icebp
and
dec
pop
fs
add
in
ss
cmpsl
pop
xchg
sbb
pop
mov
sbb
lcall
aas
sub
cli
pop
ds
push
cmpsb
shlb
in
test
cltd
icebp
lods
pusha
clc
xor
dec
dec
push
inc
in
or
push
pop
in
clc
test
mov
inc
mov
xchg
add
and
fimull
loop
mov
jmp
dec
dec
pop
xchg
lock
pop
mov
adc
imul
rdpmc
jmp
xchg
mov
mov
fidivrs
mov
sub
subl
js
inc
xchg
add
jmp
enter
loopne
jp
outsl
subl
lods
inc
lods
fisubl
icebp
je
sti
loop
incl
mov
jno
lea
sbb
xchg
jo
out
mov
jmp
push
xorb
and
je
imul
add
loopne
jp
stos
in
sbb
bnd
pop
js
mov
mov
mov
fstl
int
imul
mov
arpl
sbb
seta
test
int
scas
add
push
hlt
pop
or
xor
pop
mov
mov
jno
jle
mov
ja
test
clc
cmpsb
js
lea
mov
jae
dec
xchg
or
pop
push
cmp
add
mov
add
pavgb
fstps
ss
cs
mov
aad
popf
add
push
call
rcrb
subl
mov
lret
inc
and
dec
xor
mov
out
in
data16
xchg
rorb
cli
mov
rcrl
add
fcomps
adc
out
mov
fs
adc
xchg
sub
and
pop
cmp
cmp
testb
call
or
mov
imul
dec
dec
inc
add
add
dec
cmp
mov
scas
add
inc
and
sti
shll
test
xchg
sbbb
mov
fsubrl
pop
sbb
mov
ds
leave
add
shl
lret
cmpsl
adc
add
sbb
stc
aam
scas
sbb
push
in
add
test
imul
inc
jmp
mov
pop
movsl
mov
mov
sbb
dec
cltd
dec
inc
xor
cmp
or
iret
lods
stos
outsl
jnp
adc
and
lds
add
inc
mov
addr16
cmpl
hlt
adc
movsb
ds
out
pusha
popf
hlt
jecxz
sahf
loope
push
or
push
xor
loope
cmp
je
cmpsb
call
pop
add
jmp
js
push
and
dec
bound
mov
push
mov
mulb
mov
add
in
loope
lea
nop
mov
cmp
fsubl
dec
imul
add
es
mov
test
xor
xor
test
jp
das
std
repz
jl
dec
into
pop
jmp
sbb
lcall
bnd
add
sbb
jmp
xchg
fdivrl
sahf
mov
lods
inc
dec
lret
xor
sub
shr
jbe
add
das
xor
lods
and
popa
fcoml
add
test
stos
cmp
int3
and
xchg
fwait
jp
or
into
addr16
outsb
loopne
adc
jns
test
sub
ja
jge
xchg
fwait
imulb
bound
ja
enter
shll
ror
xchg
js
insl
jmp
mov
dec
xor
out
fsubrp
inc
mov
int
std
xor
or
imul
int3
and
sub
push
movsl
push
jecxz
cmp
sub
xchg
sti
xchg
sbb
add
mov
push
jnp
pop
jne
pop
mov
cs
data16
clc
push
mov
adc
loope
mov
fldcw
jmp
jl
cwtl
jae
xchg
mov
in
mov
addr16
cmp
cmpl
nop
mov
cmp
insb
mov
jp
loop
int3
push
mov
out
cld
sub
push
xor
mov
cmc
ja
cwtl
or
stc
mov
popa
test
push
cmp
enter
adc
and
pushf
icebp
out
pop
mov
push
in
mov
fdivs
movsl
mov
addr16
jmp
or
dec
push
add
and
mov
dec
je
fisubs
subl
mov
jp
popf
flds
loopne
pop
hlt
mov
mov
lret
fnstenv
push
push
ljmp
push
fwait
or
cmp
nop
mov
mov
outsb
in
jg
xlat
inc
inc
xor
add
pop
stos
push
shlb
xchg
addr16
loop
pop
jecxz
adc
int
imull
shl
stc
push
mov
adc
or
pop
cld
fstps
ret
mov
sbb
js
mov
mov
int3
fwait
mov
push
or
and
adcb
cmp
ss
and
pushl
dec
push
push
mov
ss
or
or
jmp
mov
push
jmp
mov
cmp
mov
mov
xor
imul
dec
mov
mov
push
aam
mov
push
push
rorl
mov
xchg
ret
and
iret
push
add
and
jge
jmp
stos
sbb
add
out
cwtl
mov
add
sbb
arpl
dec
add
mov
mov
mov
dec
repnz
or
xor
mov
scas
divb
nop
fistpll
mov
negl
in
xchg
mov
sub
loope
sti
cmp
jbe
mov
ret
mov
adc
or
packuswb
rcrl
push
std
fucomip
popa
sbb
push
push
add
pusha
fs
pop
mov
pushf
sub
jnp
ljmp
xchg
pop
inc
dec
subb
mov
mov
insb
inc
movsl
out
jns
push
shlb
mov
icebp
mov
inc
mov
xchg
arpl
lret
push
gs
and
mov
addr16
pop
mov
sbb
cmc
pop
nop
push
fidivrl
fldl2t
repnz
cli
hlt
jge
js
ljmp
out
xchg
cld
cmpsb
je
mov
mov
loop
filds
in
push
cs
mov
adc
adc
cmpsl
pop
push
fnstsw
mov
adc
icebp
mov
ds
xlat
popa
movsb
fwait
mov
and
fs
nop
roll
js
mov
mov
jns
arpl
sub
sahf
add
xchg
and
arpl
sbb
movsl
ja
mov
mov
out
cmpsl
fsubp
adc
dec
ljmp
enter
pop
xor
pop
aad
dec
cld
cmp
cmp
pop
je
sub
mov
inc
imul
inc
lea
in
mov
std
mov
push
inc
inc
adc
mov
ss
adc
popf
stos
mov
dec
mov
insl
sbb
push
leave
cltd
addr16
js
add
rcll
int
mov
dec
ror
insb
cwtl
pop
mov
das
mov
insl
xchg
sbbl
mov
cmp
mov
subl
insl
pop
pop
adc
jmp
das
cltd
sub
mov
loopne
dec
cmpsl
imul
inc
movsl
inc
fiadds
das
std
mov
bound
ret
nop
inc
out
js
hlt
mov
dec
cltd
ljmp
lcall
or
gs
stc
xchg
mov
lods
jne
sub
cmp
and
mov
sub
int3
cmp
movsl
mov
lahf
mov
in
inc
lea
mov
rcrb
mov
mov
jp
daa
xor
add
cli
in
bound
popf
div
cltd
cmp
js
imul
sahf
stc
lea
xchg
mov
push
add
sarl
pop
and
addr16
popf
mov
call
adc
nop
ret
in
pop
mov
push
data16
test
ret
mov
fsubr
or
fisubs
inc
inc
pop
pop
xchg
jno
mov
icebp
clc
outsb
xchg
das
mov
adc
outsl
fstps
repnz
sbb
xchg
sbb
dec
fucomip
sub
xchg
rorl
jne
mov
pop
shrb
das
mov
ret
and
mov
push
mov
mov
cmpsb
in
jle
inc
rcrl
sti
out
loope
xchg
pop
out
std
or
xchg
push
mov
mov
lahf
jmp
add
addr16
xchg
dec
arpl
test
ljmp
push
xor
repnz
into
push
or
mov
icebp
std
shll
fdiv
lret
cwtl
bound
out
push
setno
adc
push
dec
push
jb
jae
repnz
jb
scas
mov
pop
rcrb
sub
mov
sbb
in
in
inc
inc
mov
ljmp
push
loopne
sub
rcr
or
xor
sbb
xchg
lret
inc
leave
out
sub
mov
movntps
jo
gs
test
inc
sbb
dec
rorb
int3
mov
roll
xchg
loop
mov
mov
dec
aad
adc
push
or
or
sbb
xor
roll
or
add
fildl
shr
mov
and
push
lret
sarb
pop
lahf
std
jecxz
mov
fldenv
rorl
ljmp
push
mov
outsb
imul
stc
divl
dec
pop
cld
jg
mov
push
inc
ja
adc
cwtl
ds
orl
xchg
mov
cmp
push
sahf
repz
jmp
mov
in
push
adc
lods
ja
stos
dec
jns
sbb
inc
jmp
int
mov
std
or
fcomip
push
mov
fnsave
in
sbb
bnd
cmp
xor
shlb
xor
lds
popf
popa
push
enter
mov
sub
mov
test
or
mov
das
push
mov
mov
cld
in
cmp
nop
inc
ret
push
jo
xchg
out
push
push
sub
js
js
int
out
test
and
in
xchg
add
addr16
ret
sub
push
push
fwait
sbb
dec
stc
jle
inc
and
scas
mov
int
cmp
cmp
mov
dec
outsl
ljmp
xchg
sub
fcompl
push
mov
insl
loopne
std
add
xchg
fimull
cmp
xor
aaa
out
mov
iret
adc
dec
sbb
mov
add
mov
jo
fcom
test
je
stos
mov
sub
mov
call
adc
call
cmc
jecxz
addr16
mov
ficoms
sub
lcall
cmpsl
add
in
aas
jo
cmpsl
inc
jnp
dec
mov
mov
movb
jbe
rcll
sub
pop
pop
lret
jae
stos
xor
insl
cld
in
mov
xor
add
es
ljmp
sbb
jge
fcoml
cmp
mov
rcll
or
test
jl
fsubl
inc
mov
js
int3
jb
sub
je
lret
xchg
add
push
dec
daa
jbe
mov
sbb
inc
lahf
cmp
mov
and
push
mov
push
rcrb
cld
push
xchg
pop
lahf
shlb
lds
jb
fs
std
mov
cmp
adc
lds
orb
je
xlat
loopne
xchg
cmp
and
imul
imul
pop
leave
repnz
js
out
test
mov
mov
xor
js
push
repz
cmpl
in
scas
mov
cmpsb
or
fldcw
cwtl
aam
hlt
push
or
xchg
adc
push
lock
add
push
movsl
dec
sarb
mov
push
push
fsub
push
jb
fsubr
cltd
test
pusha
mov
push
enter
insl
jmp
hlt
into
andb
in
dec
adc
lock
icebp
lret
inc
aad
dec
jae
jge
ja
pop
cwtl
enter
ret
push
xchg
dec
decl
adc
sbb
mov
hlt
xor
mov
fsubp
mov
or
cmp
push
mov
aad
mov
jns
jl
lcall
addr16
lahf
add
xchg
inc
mov
les
jle
fcomi
gs
hlt
ss
int3
push
pop
cmp
rclb
jl
dec
mov
test
negb
xchg
push
data16
pop
jne
call
and
cmpsb
cmp
fdivs
xor
mov
popf
rorb
jb
lock
lods
or
iret
ljmp
fldcw
sti
push
aad
aam
repnz
hlt
mov
aaa
or
jge
ja
adc
jge
mov
int
mov
cmp
in
cmpsl
xor
push
inc
aad
ret
push
and
lock
xorl
pop
xchg
loop
xor
jb
pusha
cmpsl
test
adc
lods
sbb
ffreep
mov
cli
inc
lret
cmpsl
mov
mov
mov
adc
lcall
pop
pop
xchg
pusha
jle
out
jae
jbe
shll
fldcw
int3
mov
into
or
out
mov
or
idivl
sub
in
fldcw
out
scas
fidivl
popa
es
cmp
push
jns
xorb
xchg
jae
sbb
popa
sahf
push
mov
pop
adc
lea
and
fs
pop
cmp
imul
call
loopne
fistpll
sub
sahf
jne
scas
push
arpl
test
mov
out
dec
dec
mov
aas
cwtl
pop
dec
push
xor
pop
add
mov
xchg
loope
int3
add
xor
xor
pushf
jg
add
mov
pop
imul
xor
pop
adc
lea
xorl
xorl
imul
inc
add
testb
mov
popf
in
xchg
fnstcw
jecxz
cltd
sub
fwait
loop
push
adc
jno
push
pushf
cld
ret
mov
icebp
jle
pop
sub
fcomps
ret
arpl
sub
sub
add
pop
add
aaa
inc
mov
mov
rclb
sar
mov
nop
fsts
ret
jmp
inc
mov
lcall
cmp
jbe
movsl
into
dec
inc
pop
arpl
cmc
add
scas
cmpsl
popf
mov
cld
and
movsb
mov
inc
mov
into
jmp
mov
sbb
int
dec
das
gs
std
mov
mov
jb
pop
xor
fimull
jae
and
call
arpl
test
lods
add
pop
popa
leave
push
fucomi
out
shr
sub
imul
mov
les
mov
inc
mov
lret
aas
jnp
xor
cld
je
xor
mov
scas
push
je
andb
mov
fsubrs
sbb
fsubrl
stos
mov
mov
filds
stc
addr16
pusha
lea
dec
std
jo
xor
and
pop
mov
ret
inc
adc
cld
mov
mov
lret
test
adc
cmc
movsb
addr16
jmp
sub
adc
je
sbb
daa
pushf
divb
jge
xchg
fstps
inc
push
imul
and
scas
mov
lcall
out
push
push
jno
out
sti
aam
sbb
das
daa
push
shll
stos
jb
fsubs
sbb
add
repz
mov
xor
call
test
call
inc
lret
dec
add
stos
cmc
cs
mov
push
dec
ret
cld
and
sahf
mulb
push
lcall
push
dec
pushf
mov
xor
mull
cmc
sti
cs
bound
mov
ds
add
pusha
pushf
add
arpl
push
pop
mov
test
cmp
testb
jbe
fstps
pop
cltd
adc
loope
test
movsb
sbb
movsl
cmp
cs
push
idiv
ljmp
cmpsb
shll
adc
adc
cld
cmpsl
sti
add
sub
jecxz
cmp
repz
sbb
mov
ja
pushf
add
pop
sub
jb
out
xchg
aas
xchg
and
dec
lcall
imul
ja
ljmp
stos
call
repz
or
add
int
push
or
arpl
loope
test
fwait
stc
sbb
adc
cmp
cmc
xchg
sti
add
add
mov
test
mov
aad
cmpsb
jge
fucomp
lcall
sbb
ret
imul
mov
pop
sub
mov
jmp
ficomps
pop
sbb
adc
or
sub
cli
sub
lahf
negl
aad
ss
pop
jp
adc
add
dec
stc
push
pop
lcall
fs
jp
aas
pop
ret
pop
repz
xchg
insl
or
inc
lea
or
cltd
loope
hlt
push
int3
ja
mov
stos
in
xchg
inc
adc
roll
test
fldenv
lret
lea
enter
push
popa
scas
test
xchg
mov
ss
lcall
and
xor
pop
sbb
push
sub
loopne
jo
je
pop
in
mov
add
sbb
xor
fdivrl
sub
pop
movsl
loop
sbb
xchg
das
mov
loopne
mov
jbe
cwtl
stc
aas
fisttps
loop
out
dec
cld
sarl
enter
push
pop
jge
hlt
mov
sbb
xor
push
jmp
mov
dec
cwtl
push
add
and
pop
fs
out
add
lods
ljmp
dec
shrb
sub
xchg
mov
gs
repnz
jne
add
push
cmp
xor
adc
loop
int3
cmp
lret
add
cmp
mov
jo
sbbb
fldcw
xchg
stos
fisttps
outsl
insl
cmp
lods
scas
call
ficoml
mov
lods
repnz
mov
xor
mov
mov
cld
mov
xor
cmp
rclb
dec
test
cmc
mov
ret
cwtl
xor
cmp
loopne
jle
mov
jle
mov
fdivl
and
cmp
fnsave
cmp
repnz
sub
xor
lds
pop
jnp
mov
jb
jmp
ja
in
scas
loop
bound
mov
ljmp
inc
push
aaa
cmp
outsl
xlat
mov
push
sub
cwtl
ljmp
jge
inc
in
jp
out
and
and
inc
stos
jge
push
mov
lret
inc
divb
rcr
pop
aas
mov
cmp
outsl
icebp
sub
mov
ss
mov
mov
sti
test
inc
xchg
movsl
jl
add
pop
and
cmp
dec
sbb
add
cmp
cmp
loope
cmp
mov
pop
ds
mov
clc
lret
rcrl
sub
jns
or
xchg
jecxz
outsl
out
std
mov
arpl
adc
add
push
mov
imul
cmp
adc
js
push
out
cmpsl
jl
or
mov
stos
add
add
es
or
into
sarb
push
testl
or
stc
fcmovnu
xchg
add
inc
sbb
jle
mov
mov
test
fstps
loop
cmp
test
std
sbb
xchg
lahf
aad
cmpsb
adc
aam
out
xchg
adc
sub
inc
jmp
cmp
dec
inc
inc
movsl
clc
mov
xchg
sub
fwait
loop
loop
out
out
pop
outsl
rcrl
ja
mov
xchg
loopne
or
std
lock
jbe
adc
dec
pop
andb
sub
lahf
mov
xchg
enter
push
fsubl
and
jp
pop
inc
push
push
mov
es
cmpsl
push
imul
jb
mov
enter
inc
or
mov
dec
inc
sub
inc
shll
xlat
sahf
dec
insl
hlt
mov
call
inc
subl
test
filds
ret
pop
stos
or
pop
mov
and
inc
lea
ljmp
or
cmp
stos
push
pop
movsl
add
adc
cmp
xchg
movl
jne
push
pop
add
or
sub
or
insl
push
push
ljmp
data16
push
push
cmp
xchg
push
test
push
loopne
push
add
jo
notl
dec
ret
jne
out
jmp
ficoml
cmp
fsubrl
mov
mov
push
fsts
adc
std
in
test
ficomps
ret
orb
mov
mov
dec
dec
int3
mov
push
out
aam
int
pop
cmp
dec
push
roll
pop
rcrl
jp
fdivl
insl
dec
outsl
adc
fs
xchg
xchg
lcall
mov
push
scas
or
and
adc
into
cld
push
imul
shl
iret
pop
lahf
fildll
inc
dec
stos
mov
add
imul
adc
fldl
sbb
mov
jecxz
dec
xlat
pop
add
push
sbb
loope
mov
cwtl
and
mov
and
test
adc
dec
sbb
add
jge
cmp
lahf
repz
cld
jb
mov
mov
sub
mov
pop
dec
imul
leave
fdivrp
sbb
lods
call
pop
jg
mov
add
lret
mov
lods
rorl
xor
cwtl
in
je
sub
add
mov
pop
xor
shlb
push
xor
cmp
jnp
mov
add
dec
dec
std
subb
jb
push
sahf
xor
sti
or
ds
xchg
call
mov
lods
jb
xchg
fstps
xor
clc
push
imul
xor
pop
sbb
aad
dec
push
xchg
dec
es
gs
or
adc
mov
hlt
xorb
dec
and
sbb
lods
cli
mov
jmp
push
fcoms
daa
and
lock
sti
mov
je
movsl
lret
jecxz
dec
xchg
repz
jbe
arpl
push
in
and
stc
or
hlt
cli
and
push
push
scas
gs
sub
popa
fisubl
mov
out
jnp
cmp
jb
add
ss
lret
lret
pusha
ret
sub
ss
pusha
xchg
mov
and
stos
lret
jle
pop
inc
test
mov
insb
ret
push
out
ret
ss
shl
sti
test
mov
or
inc
push
insb
sbb
int3
arpl
inc
into
outsl
jecxz
sbb
movsl
sarb
xor
data16
sub
loop
jns
mov
lret
aad
mov
inc
xchg
bswap
sub
sub
xor
mov
xchg
icebp
arpl
shll
add
xchg
ss
test
out
xchg
sbb
pop
nop
in
iret
aad
push
jae
sbb
out
mov
icebp
rcrl
fisttpl
fsubp
mov
xor
cmp
cwtl
xchg
and
xor
and
mov
and
sbb
push
mov
and
rcr
or
xchg
xchg
xchg
or
cmp
mov
xor
cwtl
nop
mov
or
icebp
push
jnp
adc
inc
ret
mov
push
cltd
mov
inc
pop
mov
push
xor
outsl
ja
icebp
addb
ja
ret
dec
icebp
cwtl
add
cld
mov
pop
push
mov
pop
or
pushf
dec
movl
cmc
mov
jl
hlt
mov
cld
fnstcw
mov
faddl
ret
jae
lret
pop
test
popa
jno
inc
imul
push
inc
push
imul
jmp
lods
pop
rclb
clc
adc
or
dec
out
mov
mov
clc
add
lods
and
dec
dec
mov
add
jne
ret
or
mov
fs
mulb
mov
jbe
mov
lcall
mov
fs
es
loop
mov
sti
jmp
or
adc
sbb
dec
sub
es
out
lahf
mov
test
lods
ss
pop
cmp
pop
lods
lods
cmp
or
fdivrs
push
test
gs
out
xchg
shr
xor
xchg
dec
lret
mov
in
cwtl
dec
rclb
adc
and
push
xchg
dec
bound
shll
test
add
insb
mov
fadds
cld
or
push
cmc
fldcw
adc
enter
jbe
push
cmp
je
mov
pop
cmc
data16
push
or
inc
cmpl
sub
decl
incb
and
aad
movsl
test
mov
mov
or
fimuls
scas
cmpsl
xchg
xchg
push
jno
nop
int
cmpsb
dec
outsl
jnp
sub
xorb
fistl
or
popf
cld
stos
fwait
adc
xchg
cmp
scas
mov
lods
imul
dec
sub
ret
sahf
icebp
jne
mov
mov
popf
or
mul
cmp
xchg
pop
jne
jecxz
icebp
fs
sti
arpl
in
ss
jns
inc
leave
rol
clc
sub
push
stos
add
imul
xchg
out
repz
fldt
mov
ja
in
rcrb
stos
mov
xor
xor
lahf
out
xchg
movsl
aas
mov
cmc
cmp
out
mov
and
and
addb
lds
or
mov
inc
xchg
andl
add
sub
je
leave
mov
lds
mov
xchg
inc
sub
mov
lods
pop
mov
movsb
jle
jecxz
dec
data16
ds
fistpl
or
or
shr
xchg
inc
inc
and
jmp
fsubr
mov
push
sbb
lcall
pop
mov
inc
mov
jbe
push
leave
rcrl
aad
cmp
stc
cmp
or
jp
sbb
out
xchg
out
arpl
popa
daa
aam
stos
sbb
gs
add
icebp
scas
decl
xlat
mov
jmp
mov
push
sahf
test
mov
sub
into
lods
imul
loope
roll
cmc
inc
imulb
out
js
test
mov
enter
lahf
xor
imul
mov
or
jmp
mov
cmpsb
inc
inc
mov
test
sbb
xchg
fs
inc
icebp
mov
adc
or
out
iret
arpl
xchg
or
repnz
jmp
cltd
pminub
ja
lods
popa
lods
cltd
out
lret
inc
push
sub
and
mov
and
pop
push
mov
outsl
addr16
fdivrs
gs
ret
lcall
addr16
inc
scas
fsubrs
push
scas
icebp
int
cli
jge
cli
mov
insl
arpl
insl
pop
add
inc
fbld
sub
pop
ss
pusha
dec
jle
nop
fisubs
arpl
mov
imul
ret
jbe
add
xor
aam
push
sti
outsb
das
push
jnp
pop
dec
jae
fmuls
cli
repnz
inc
ds
mov
frstor
push
fidivl
sbb
js
icebp
xor
insl
cli
mov
push
pushf
rcl
les
and
mov
adc
bound
mov
out
dec
in
mov
inc
fsubrs
adc
or
xchg
imul
sbb
inc
adc
jno
rolb
fmull
jge
mov
mov
mov
xchg
add
addl
rorl
pop
fistl
es
imul
jmp
out
bound
jnp
ds
aas
xchg
cmovp
ret
push
mov
xchg
add
jmp
loopne
mov
ljmp
dec
or
test
cmp
mov
test
xchg
aam
ret
fcomp
test
jae
lods
sub
ja
push
mov
mov
das
push
or
xlat
scas
in
sub
fbstp
test
lahf
pusha
mov
sbb
int3
push
shl
mov
pop
pop
cmc
and
test
stos
mov
iret
stc
push
cmp
mov
stc
sub
repz
in
out
cmp
dec
push
mov
mull
xor
xor
ret
je
sbb
xor
dec
arpl
sbb
in
das
or
adc
pop
fistpll
lods
cmp
mov
sub
mov
jb
jle
dec
scas
sbb
jl
ljmp
out
std
inc
adc
lret
push
in
inc
je
push
mov
cmp
cld
mov
xor
pop
cmpb
ret
dec
mov
aaa
insb
push
inc
sbb
push
add
push
pop
imull
ret
and
mov
lds
gs
filds
sub
cli
sub
enter
mov
movsb
or
or
dec
sti
inc
stc
pop
sti
outsl
sbb
or
xlat
cmc
call
lea
fists
scas
pop
aaa
in
in
mov
popa
scas
mov
or
addl
sahf
push
out
push
arpl
cmp
mov
jbe
sbb
mov
sbb
lret
inc
cltd
xor
mov
fisubl
je
mov
mov
mov
dec
fcoms
sub
add
push
mov
jp
out
add
pop
mov
daa
and
xlat
sbb
stos
jmp
popf
in
pop
shrb
out
pop
xor
sbb
stos
jb
mov
mov
or
rorl
and
lods
xchg
push
enter
into
int3
arpl
xor
fisttps
or
inc
fnsave
loopne
loopne
mov
mov
mov
imul
xchg
jmp
adc
test
fcomp
mov
mov
inc
mov
push
add
out
sbb
cld
push
inc
sub
jge
shrl
mov
or
and
add
insb
ficoml
inc
or
js
mov
int
jmp
xchg
mov
cmpl
rorl
add
sahf
cmpsb
std
pop
insb
add
scas
cmp
dec
add
jmp
adc
nop
xor
cmp
int3
dec
inc
int
mov
sbb
fimuls
push
mov
dec
xlat
mov
jne
push
pushf
andb
mov
ja
mov
test
fnstcw
daa
xchg
iret
jge
mov
mov
pop
jnp
fisubs
aad
jmp
mov
cmpsb
ja
sbb
inc
and
fnstenv
aam
mov
mov
pop
or
out
pusha
pop
jns
stos
stc
sbb
ljmp
push
iret
inc
pop
xor
inc
out
or
loopne
fwait
xor
mov
iret
or
sbb
popf
xchg
shll
jnp
fmull
mov
shrl
inc
jmp
ss
push
aad
push
mov
cwtl
mov
inc
jae
jno
mov
popf
xchg
jp
ja
dec
jns
pop
lds
imul
inc
jle
insl
imul
and
mov
jae
push
repnz
out
imul
in
popf
lahf
and
mov
pop
imul
imul
sub
mov
cmpsl
xor
mov
and
mov
std
xor
data16
leave
imul
jno
xchg
mov
mov
jmp
adc
adc
int
aaa
jb
fwait
outsb
mov
mov
insb
in
inc
xchg
adc
xor
lret
cmp
repz
and
sbb
lret
aaa
fcomps
je
clc
scas
or
push
mul
popf
push
aaa
jbe
sbb
push
sub
pusha
jae
pop
je
xchg
test
inc
pop
test
or
jecxz
sbb
popf
test
cltd
or
ja
lods
call
daa
mov
lds
xchg
lret
adc
leave
xchg
adc
inc
push
test
fcomps
jecxz
pusha
movsl
sub
outsl
out
push
fstpl
std
je
mov
iret
mov
push
sbb
movsb
roll
repnz
fidivs
adc
lret
loope
orb
push
jo
cmpsb
aad
daa
push
xor
dec
adc
ret
xchg
xor
pop
xlat
gs
jne
or
lds
dec
out
adc
dec
std
stc
xor
mov
jno
pop
dec
push
sbb
xchg
ja
hlt
enter
pop
les
imul
sahf
lcall
sbb
jmp
xor
imulb
ja
mov
lods
and
cmp
mov
pop
mov
xor
ljmp
scas
sbb
mov
lret
mov
int3
cmp
and
adc
test
xchg
mov
or
ss
je
imul
pop
mov
mov
mov
ljmp
nop
xor
lods
lods
inc
test
imul
cmp
mov
jae
and
and
mov
or
test
cli
fwait
sub
xchg
push
cmp
pop
pop
xor
cmp
mov
in
lret
std
dec
bound
xor
push
lcall
mov
jp
jle
mov
lret
adcb
sbb
cli
pop
mov
inc
cld
jb
sbb
mov
dec
out
stc
test
adc
dec
dec
stc
int3
cltd
fdivl
sub
lret
in
stos
and
movsl
clc
xor
fwait
repz
out
lea
fsubr
mov
test
xchg
decl
adc
in
lea
lcall
push
mov
adc
sub
cs
jae
xor
pop
lcall
rcr
mov
cmp
shll
fs
sti
and
fwait
dec
jg
sbb
aad
sbb
xor
mov
sub
enter
xor
inc
xor
jl
loopne
nop
cmp
or
jae
push
sub
test
sbb
pushf
repnz
mov
es
repnz
inc
and
inc
into
and
in
push
sbb
mov
mov
sub
repz
gs
in
lock
jno
sbb
or
mov
dec
add
stos
mov
cltd
jmp
ja
mov
push
jmp
jno
je
add
jne
int
mov
outsb
jnp
xchg
popf
daa
pushw
cmp
lock
das
cs
add
jns
test
jns
mov
sbb
outsl
scas
sub
ret
push
sbb
mov
sbbb
adc
inc
and
sub
pop
jle
hlt
fsubr
icebp
fidivrl
jo
std
pop
fldenv
xchg
dec
test
movsb
cmc
sbb
das
jp
in
mov
mov
add
lea
out
call
nop
das
mov
rep
cmp
jns
xchg
cli
jmp
outsb
test
sbb
mov
test
scas
mov
mov
mov
fstpl
pop
pop
sbb
iret
data16
loopne
add
adc
je
push
movsb
pop
out
xchg
pop
xchg
test
popf
lea
and
jo
adc
mov
jge
mov
mov
jg
and
mov
push
adc
mov
lret
jmp
frstor
add
push
mov
cld
int
add
jecxz
cmp
ljmp
in
add
js
cwtl
jmp
imul
and
inc
pop
mov
adc
adc
je
or
ret
mov
lret
inc
adc
and
int
insb
adc
adc
push
cs
aas
leave
sahf
add
pushf
inc
lock
mov
mov
shlb
pop
xchg
xchg
add
out
lret
add
test
add
das
xchg
outsb
lret
in
mov
insb
jne
xchg
ret
push
pop
icebp
adc
or
leave
gs
add
in
fnsave
shrb
push
mov
push
setg
pop
xor
call
jnp
mov
add
or
cmp
test
sub
in
rorb
cmp
fdivp
pop
sbb
frstor
movsb
mov
out
decl
jno
idiv
ret
inc
and
mov
sub
lahf
jecxz
das
fisubs
aas
inc
pop
bound
pop
push
mov
into
xor
dec
inc
cltd
sbb
lods
inc
sbb
scas
movsb
roll
orb
cmp
cmc
xor
xlat
das
cltd
jne
fcmovu
imul
xchg
sub
stc
outsl
divl
push
push
in
mov
jno
mov
je
mov
mov
and
shrb
fdivr
jb
jns
adc
mov
iret
mov
or
shr
dec
xchg
mov
addr16
arpl
fwait
inc
fiadds
fwait
mov
mov
sub
lods
mov
insb
cmp
mov
add
push
inc
sbb
fndisi(8087
jae
sti
pop
lea
ss
pop
clc
mov
loop
inc
push
loope
add
mov
push
negb
movsl
add
push
xchg
loope
iret
mov
jnp
cld
in
pop
leave
pusha
push
push
lret
cmpsl
lcall
cmp
sar
add
cmpsb
mov
push
push
dec
jnp
frstor
jns
dec
lock
jecxz
cmp
and
sub
mov
bound
sbb
inc
mov
gs
mov
data16
fdivl
dec
xor
popa
ds
mov
mov
jb
in
pop
add
xchg
pop
xor
in
imul
out
cmp
inc
xchg
jbe
cmp
jns
pop
fidivs
xchg
mov
xor
mov
es
shl
arpl
stos
in
dec
or
insl
test
fs
pop
and
push
jbe
into
movsb
dec
test
cmp
mov
aam
adc
aas
rol
into
std
out
stc
inc
or
jle
aaa
jg
inc
jbe
jl
mov
inc
into
cltd
pushl
loopne
push
mov
xlat
in
push
cltd
ljmp
std
mov
push
push
lods
pop
dec
test
mov
shlb
adc
stos
stos
enter
fisubs
out
xorl
div
divl
push
out
pop
xbegin
cmc
mull
add
movsl
jmp
nop
ficompl
out
ret
and
rorl
ret
push
xor
xchg
clc
mov
jp
dec
lea
sar
idiv
sbb
inc
inc
movsb
std
outsl
shlb
divb
insb
inc
xchg
dec
nop
jp
shrb
fwait
idivl
test
or
jno
mov
jbe
cmp
ljmp
cmp
pop
testb
or
sbbb
fnstenv
ja
test
add
inc
mov
pop
ss
jmp
fldcw
mov
inc
mov
adc
cmpsb
jecxz
out
and
inc
bound
jns
mov
xchg
sub
in
mov
jmp
jecxz
mov
and
arpl
cmp
jmp
cwtl
dec
push
lods
cli
mov
addr16
iret
sbb
sarb
and
push
int3
jb
mov
lret
add
sbb
stc
push
lods
or
and
mov
jmp
sbb
lret
iret
cmp
loop
in
jge
and
adc
inc
ss
fdivl
stos
jp
imul
aad
aaa
hlt
imul
aaa
scas
test
loope
adc
mov
jecxz
and
lock
std
sahf
cltd
pop
cltd
mov
jp
out
xchg
push
and
jae
add
shll
divl
in
lods
out
jo
xchg
and
adc
inc
pop
out
out
lock
dec
jae
add
shll
mov
pusha
xchg
sbb
or
xlat
dec
call
cs
movb
orl
out
adc
out
out
in
imul
and
das
add
enter
leave
mov
js
jbe
test
cmpsl
dec
stc
lds
roll
sti
into
and
or
xchg
lahf
cmpsl
pop
dec
out
adc
mov
xchg
cld
cmpb
shlb
cmpsb
leave
stc
mov
sub
int
push
test
add
repz
es
sbb
sub
pop
pop
jb
fdivrl
fcomps
push
xor
xchg
add
sub
xorl
lret
sbb
pop
loop
sbb
data16
cmpl
dec
aas
test
adc
cmpsb
adc
dec
out
pop
ss
push
jno
test
mov
out
xor
add
pop
adc
ret
outsb
cs
mov
add
call
pushf
dec
xor
in
xor
jbe
cmp
ja
js
in
xchg
int
mov
and
push
xchg
aam
mov
shrl
add
mov
data16
in
sub
lret
xor
push
mov
clc
dec
sub
outsl
in
ss
jns
stos
jg
add
sahf
clc
or
cltd
jp
push
add
xchg
and
mov
ret
dec
iret
jo
sahf
or
sbb
notb
mov
out
popa
test
jp
into
mov
sub
scas
jb
jle
jg
aaa
jmp
out
lods
xchg
mov
mov
ds
ja
movsb
xor
aaa
pop
in
roll
fwait
inc
jle
and
and
out
inc
and
dec
push
test
sub
add
inc
rcrb
push
call
lret
pop
cwtl
xchg
pop
mov
jnp
mov
mov
rcr
mov
push
fcom
pop
sbb
add
out
pushf
int3
outsb
push
or
add
push
fstpl
xchg
mov
pop
push
jecxz
add
repnz
js
les
pop
mov
insb
jbe
sarb
divl
mov
xchg
push
xor
pushl
sbb
cmp
push
out
jne
cmpsl
cmc
mov
divb
adc
inc
scas
repnz
testb
or
bound
inc
sarl
inc
inc
pop
add
add
xor
je
clc
jp
fistl
stos
clc
icebp
ja
sbb
push
iret
mov
mov
shlb
pop
inc
xchg
in
ja
cwtl
hlt
sti
loop
stc
inc
push
iret
cmp
jle
xchg
imulb
rcll
into
mov
fisttps
sub
dec
xchg
pop
push
inc
in
repz
xor
mov
fsubrl
pop
out
sbb
lds
xchg
lods
inc
xor
scas
push
mov
addr16
fisubl
xchg
cmp
mov
incb
or
mov
xor
push
mov
and
loopne
in
jl,pt
test
push
sbb
stc
or
or
mov
xchg
jmp
int
shll
insb
jle
ret
inc
out
cmp
stc
loope
sbb
popf
adc
dec
mov
or
into
xchg
mov
add
push
scas
xor
or
sti
lea
fcmovbe
xor
xor
pusha
in
test
mov
arpl
ret
cmp
xchg
xor
and
movsl
lods
cwtl
dec
mov
push
jns
inc
cld
aas
jecxz
mov
inc
stc
sub
push
add
xlat
mov
dec
std
jne
aas
repz
out
sbb
das
push
mov
xchg
pop
push
adc
shrb
jmp
out
lret
loop
xor
shll
push
insb
out
gs
mov
mov
dec
cs
or
pushf
out
sub
bound
jno
push
jle
jl
cld
xchg
jp
pop
iret
mov
xchg
insb
and
pmulhuw
movsb
cmp
pop
jl
sbb
push
jnp
fdiv
pop
pop
cmp
in
add
icebp
pushf
sub
dec
inc
fistl
adc
cmp
adc
mov
cmp
pop
jns
fstps
test
cmp
jnp
ficomps
add
jns
and
cmp
sbb
cmp
ret
xchg
jae
mov
loopne
jb
cmpsl
fs
mov
xor
dec
repz
xor
push
sub
jp
pop
and
call
scas
call
push
mov
lea
cmp
xor
cltd
mov
mov
sub
cmpl
xchg
xchg
imul
or
sbb
mov
xchg
insb
insl
aam
fcom
xchg
sbb
adc
mov
in
fildl
mov
dec
in
mov
mov
in
xor
adc
add
mov
sub
jecxz
pop
test
jp
mov
aas
pop
sti
jmp
jb
mov
call
lods
or
mov
mov
ret
mov
and
push
je
jae
or
xor
pop
pusha
push
cmp
ja
lods
gs
mov
sub
ret
dec
and
adc
popf
cmc
lods
sub
aas
and
or
mov
add
push
inc
iret
into
cld
ja
loope
negl
cwtl
add
jae
insb
aas
dec
test
xlat
pop
mov
cld
sbb
add
add
inc
push
bound
int3
xlat
pop
pop
insb
sahf
cmp
pop
mov
push
mov
or
pop
jl
mov
push
je
repz
jae
test
and
imul
aad
sub
inc
sbb
jae
add
icebp
shl
and
inc
in
fbstp
jne
int3
mov
push
popf
xor
in
mov
roll
xorl
sub
mov
ljmp
pop
dec
lds
add
in
dec
les
cmp
fs
into
mov
lea
xchg
pop
stos
fcmovb
mov
dec
xor
mov
hlt
xchg
add
adc
fdivp
int
repz
nop
int
insb
leave
stos
mov
xchg
jge
rclb
repnz
imul
gs
out
add
paddw
ss
cmp
fadd
jnp
or
inc
rolb
int3
xor
cwtl
test
mov
aad
mov
stos
enter
fdivrs
imul
push
lock
lods
fwait
mov
stc
pop
clc
push
sub
in
pop
mov
pop
sbbb
mov
scas
add
cmp
jecxz
and
inc
mov
arpl
mov
dec
lcall
iret
cs
rolb
lcall
fnsave
xor
dec
xlat
xor
insb
es
das
js
sub
outsl
adc
fs
mov
lock
addl
loope
divl
mov
rorb
or
scas
arpl
mov
dec
mov
out
iret
ficompl
repz
xchg
icebp
xor
push
mov
xlat
cmp
cwtl
scas
es
ljmp
pop
adc
loope
out
in
std
add
shrl
inc
ret
inc
inc
pop
cmp
xor
lds
and
out
arpl
cmpsb
push
ret
ja
pop
ficompl
sbb
or
ljmp
shlb
xchg
add
js
add
sti
nop
add
xor
sub
add
ljmp
jg
push
jbe
sub
xor
sub
mov
cmp
out
repnz
shrl
sub
mov
push
xchg
push
pop
mov
je
xchg
in
and
dec
sub
notb
adc
push
in
ret
scas
lods
ja
cld
adc
jno
stos
testb
lcall
fdivp
or
movsb
into
lahf
jmp
mov
jne
mov
popf
cwtl
outsl
or
fstpl
mov
repnz
pusha
xor
xchg
jnp
and
adc
jnp
push
xlat
mov
ss
leave
cwtl
fsts
sbb
popf
testl
fsubrs
ret
and
pop
imul
lret
dec
test
dec
cli
cmp
into
pop
adc
jns
in
pop
call
cltd
sub
shll
pushf
mov
jp
mov
lea
mov
leave
jl
pop
filds
icebp
jge
sub
movsb
jecxz
addr16
icebp
xchg
icebp
pop
pop
mov
adcb
mov
int
test
add
push
xchg
mov
mov
cmpsl
test
mov
push
inc
test
ficoms
cmp
roll
adcl
xchg
enter
jne
xlat
fwait
pusha
mov
mov
dec
test
clc
sub
pop
inc
pop
adc
sbb
mov
xchg
aas
xor
dec
or
pushf
insb
push
clc
adc
or
jecxz
sbb
outsb
fwait
movsb
adc
dec
fildll
inc
sbb
lock
scas
mov
out
loope
sbb
sub
add
push
cmpsb
test
imul
push
repz
sbb
push
and
cmp
ljmp
das
adc
lock
push
xchg
jo
gs
pop
aad
add
mov
jnp
arpl
inc
bound
pop
jp
add
outsb
cmpsb
shlb
or
out
push
dec
add
fwait
jns
pushw
xcrypt-cfb
cmpsl
jecxz
lods
lcall
scas
imul
cld
jle
ljmp
sbb
rcl
dec
adc
mov
pop
cmpsb
dec
movq
cmpb
cwtl
hlt
fisttpll
loope
add
jo
lods
fwait
insb
dec
pop
sub
jl
cltd
cmp
ds
cld
lcall
mov
jns
scas
mov
pop
aas
in
mov
xor
pop
aad
test
and
testb
test
push
sbb
inc
adc
sub
add
push
inc
fbstp
cmp
movsb
cmpsb
push
mov
jae
cmp
dec
and
sahf
shlb
add
cmpl
pop
or
xor
mov
cli
jge
dec
aas
data16
inc
mov
shrl
mov
pop
xor
adc
pop
scas
adc
inc
mov
sbb
sub
lock
or
test
xor
sub
mov
inc
cmp
or
add
shrb
jno
jb
push
popf
cltd
pop
mov
push
jle
add
shll
add
or
cmp
inc
mull
mov
and
notb
xchg
xchg
inc
and
add
add
hlt
and
cli
jns
adc
jno
enter
shl
dec
and
outsb
mov
xlat
insl
pusha
scas
loope
xor
out
sbb
push
cmpsl
imul
mov
xchg
xchg
and
inc
test
lock
lea
popa
movl
sub
and
imul
fs
repz
into
dec
aas
mov
in
adc
dec
inc
cmc
adc
adc
or
mov
ljmp
mov
fstp
add
test
addr16
xchg
jno
cwtl
clc
dec
jmp
push
or
adcl
test
lcall
push
in
scas
and
mov
out
cmp
xor
testl
in
xchg
sbbb
or
flds
test
fdivs
loopne
sub
cmc
and
mov
mov
fcomp
movsb
out
popf
daa
mov
mov
cmp
out
mov
cmpsb
push
mov
or
lods
and
popf
arpl
pop
add
mov
aad
push
pop
into
pusha
cmp
test
pushf
add
jle
mov
or
xchg
adc
movsb
xchg
jmp
mov
mov
add
cmp
loope
imul
cmp
insb
ffree
rcrb
std
and
test
gs
mov
cmovle
sub
sub
or
cmp
addb
bound
popf
scas
cmpsl
call
cwtl
ss
push
mov
mov
jne
fwait
push
push
std
xor
or
enter
lods
mov
cmp
aaa
negl
popf
pop
pop
lahf
lcall
jno
push
enter
hlt
and
cwtl
stos
mov
mov
dec
xchg
dec
mov
pop
outsl
jae
out
sub
or
in
sub
inc
aam
lret
inc
mov
in
mov
mov
test
mov
or
loope
or
imul
jbe
cltd
push
jl
mov
cmpb
xor
mov
lods
add
sti
mov
std
into
fwait
int
xor
scas
popf
les
and
jl
adc
adc
out
inc
dec
mov
dec
movsl
bound
mov
test
test
push
push
mov
imul
insl
cs
mulb
sub
fmul
jb
shll
jge
pop
sub
fnstcw
rep
add
test
inc
jecxz
pop
jle
mov
cmp
xlat
int3
out
dec
cmp
xor
in
cmpsl
jle
ja
and
fiadds
fmull
loope
outsb
repnz
dec
test
add
xchg
outsl
repz
xor
mov
jmp
out
jp
sub
shrl
clc
test
jb
jecxz
popf
movsb
in
cmp
mov
xor
lret
rolb
insl
cmpb
sbb
mov
mov
xor
adc
add
lcall
int
xlat
pop
push
int3
sub
rcll
dec
rcrb
arpl
pop
cwtl
es
je
loope
push
imul
sbb
add
and
dec
jge
in
in
and
int3
jae
cli
xor
std
or
enter
or
xorb
ljmp
in
sbb
insl
aas
sbb
lret
inc
sbb
popf
in
mov
cmp
in
arpl
jmp
fwait
inc
popf
jmp
fsubrl
repnz
pop
outsb
cmp
or
xor
sti
fists
subb
cmp
jns
fadds
push
push
aam
mov
stos
mov
xlat
loope
push
inc
rcrl
lods
dec
or
jbe
mov
call
add
outsl
cmp
and
decb
xorl
rorb
dec
test
xchg
push
add
mov
xor
xor
mov
addr16
pop
int3
cmp
add
jne
pop
cmpsl
push
pop
mov
jb
adc
lret
rorb
push
inc
fs
mov
inc
dec
mov
inc
mov
lcall
push
sub
test
lock
stc
pop
xor
lods
sbb
mov
adc
insl
xchg
pop
insb
jae
push
icebp
pop
imul
popa
imul
out
add
orl
fs
jo
movsl
aad
ja
mov
sbb
mov
in
dec
or
mov
push
test
pop
mov
inc
lods
xor
int3
js
shl
xchg
leave
xchg
roll
mov
fistpll
in
movsl
es
mov
lea
outsl
jnp
insl
fdiv
in
cmc
push
mov
or
pop
addr16
mov
daa
pop
adc
xlat
data16
and
cmp
mov
sbb
stos
movsl
into
sahf
push
outsl
add
nop
push
and
sub
and
es
loope
mov
xor
into
sar
cmp
xchg
out
inc
pop
dec
loopne
iret
jbe
mov
push
jmp
int
rcrl
int
std
cld
add
push
arpl
mov
leave
push
int3
fstps
sti
mov
inc
or
je
roll
xor
xchg
pop
lock
lahf
lcall
fisubrl
mov
jbe
mov
and
roll
aam
dec
in
jne
insb
mov
push
shl
loop
adc
xor
mov
adc
mov
jg
push
add
call
movsb
pop
ret
movsl
dec
inc
or
jmp
xor
sub
dec
mov
push
cmpb
xor
mov
xchg
and
out
and
cmp
add
std
dec
mov
in
jae
repnz
mov
out
daa
xchg
cwtl
mov
aad
clc
rcrl
shrl
dec
mov
imul
flds
arpl
sub
std
mov
xchg
lret
mov
xchg
sti
into
stc
mov
mov
daa
pop
gs
mov
and
jb
popa
push
inc
add
popf
popa
adc
add
pop
je
add
roll
xchg
movsl
push
ficomps
mov
add
outsl
sbbl
sbb
lret
jge
mov
push
mov
jle
push
inc
into
rcrl
arpl
int
ret
sub
rorl
pushf
cmpsb
lea
fidivrl
push
aad
clc
mov
aaa
pop
pop
imul
push
cmpl
arpl
cmp
cmp
sub
mov
popf
mov
pop
mov
add
shr
shrb
jae
jo
add
movb
cmp
mov
dec
add
cwtl
xchg
mov
mull
adc
sub
inc
mov
xchg
ret
sub
aas
fildll
push
dec
and
insb
subb
ja
pop
popf
test
push
mov
sahf
shlb
in
mov
out
sub
mov
mov
jl
sbb
aad
punpcklwd
test
push
adc
hlt
orl
jbe
xchg
and
clc
int3
mov
sbb
mov
inc
add
sbbb
shlb
mov
cld
push
sub
outsb
dec
inc
sub
scas
notb
mov
js
jl
popf
push
pop
mov
les
mov
push
stos
and
xchg
dec
jns
icebp
cli
mov
movsl
popa
mov
outsb
sub
jge
into
cs
gs
mov
add
icebp
jne
rolb
or
std
shrl
loop
mov
adc
inc
pop
push
lock
leave
sbb
push
int
test
out
add
dec
int
xchg
pop
cmp
sub
lcall
xor
repz
xchg
mov
outsl
ret
int
inc
mov
icebp
push
dec
fadd
lds
pop
mov
mov
mov
ss
scas
adc
and
xchg
pop
imul
cld
and
xor
cmp
xchg
frstor
and
jns
adc
pushf
sbb
out
dec
int
test
in
jmp
sub
cld
rolb
adc
jo
js
inc
sub
clc
mov
sbb
or
cli
push
cld
add
cmc
jae
stos
mov
push
aas
dec
test
xlat
push
stc
iret
pop
rcrb
dec
xchg
xor
in
imul
xor
lea
in
mov
dec
sub
pop
es
dec
mov
sub
js
stos
mov
inc
xchg
test
rclb
mov
and
stc
xor
pop
xor
cmp
push
adc
in
rorb
push
pushf
arpl
xchg
jge
out
out
push
hlt
fiaddl
in
push
cmp
outsb
xchg
pushf
stc
mov
fistl
sub
mov
jo
and
in
leave
jge
out
jl
xor
test
mov
jae
lods
shlb
mov
jnp
mov
std
fdiv
dec
inc
adc
pop
out
arpl
in
push
out
jnp
mov
dec
pop
dec
cmp
popf
jecxz
mov
push
int3
jle
daa
push
or
stos
xchg
mov
rorb
mov
or
popf
mov
sub
push
mov
mov
mov
add
mov
je
jp
adcl
jae
jg
xor
lahf
and
cmp
in
mov
jb
aas
cmp
xchg
sub
jmp
inc
arpl
sbbb
cmc
or
xchg
adc
add
adc
xchg
mov
cmp
popf
jp
sbb
mull
sarb
aad
jns
dec
imul
insl
xchg
mov
sub
pop
pop
xchg
adc
lods
mov
clc
mov
add
mov
dec
es
les
pop
adc
inc
aad
mov
loop
leave
loope
daa
dec
xchg
xchg
stos
push
xlat
adc
sub
shll
fdivs
inc
dec
outsl
cmpb
fidivs
jae
std
shll
adc
mov
jg
mov
jge
mov
push
inc
xor
sub
addl
cmpl
test
js
fstpt
scas
sub
or
sbb
cmpsl
daa
loopne
imul
lcall
jmp
jmp
inc
enter
dec
xchg
xchg
je
pop
inc
loop
imul
fldt
dec
push
pop
frstor
mov
loopne
rorl
cmp
int
lods
mov
nop
inc
sbbl
jle
jnp
cmp
test
in
div
sub
pop
cmc
or
pop
in
pop
inc
aad
sbb
mov
nop
sbb
cmp
cmpl
shrb
roll
add
adc
in
std
or
fs
push
cmp
add
not
push
out
push
cmpsl
fs
push
les
lods
insl
jnp
mov
out
ss
mov
repz
sub
dec
and
sub
aas
rcll
push
mov
int3
adc
out
and
ds
push
jno
int3
pop
xchg
mov
xor
loopne
ds
loopne
xorl
rcrl
inc
rcrb
dec
sbb
sbb
jle
js
loope
leave
inc
int3
push
cmp
sub
add
arpl
jmp
and
push
jge
sbb
arpl
xor
sti
popa
xchg
inc
filds
les
test
push
mov
jb
pop
push
inc
and
dec
jb
jecxz
cmp
cmp
xchg
and
movsb
push
fs
pusha
fsubrs
mov
jg
mov
cmp
cmp
mov
stos
rcr
adc
fnstsw
stos
stc
filds
stos
fwait
jmp
fisubl
xchg
dec
xorb
jo
lcall
mov
inc
lock
mov
cmp
or
inc
aas
add
mov
push
ja
lahf
cltd
jb
jnp
int
xchg
push
xchg
mov
xlat
mov
into
into
aad
lds
jmp
das
cmc
pop
push
add
aad
decl
lcall
jmp
shr
stos
lea
fsubl
and
sub
mov
and
mulb
faddl
push
adc
jg
stc
cmp
cmpsb
das
jp
jecxz
add
and
add
sbb
popa
mov
sbb
xlat
ror
mov
push
inc
or
push
movsl
minps
mov
jecxz
outsl
pop
push
xchg
dec
push
movl
mov
bound
mov
orl
jge
sti
es
or
pop
mov
mov
push
mov
add
daa
shrb
int
aam
rcrl
in
mov
mov
idiv
push
add
sub
sub
notl
mov
add
xlat
push
dec
mov
es
push
cltd
adc
fucomp
dec
sub
jp
mov
gs
fmuls
pop
sbb
jb
add
bound
das
outsb
mov
jmp
inc
mov
notb
leave
mov
pop
sub
push
push
jns
xchg
mov
bound
inc
mov
push
pop
add
movsl
cmc
loopne
inc
aas
std
cmpsb
sbb
clc
icebp
jp
imull
mov
pushf
sahf
addr16
clc
sbb
mov
lret
or
andl
jbe
dec
and
test
xor
push
shll
pop
xchg
lgs
or
inc
dec
add
es
pop
xchg
xor
mov
loopne
popa
inc
out
mov
or
push
cmp
pushf
test
inc
aaa
in
and
inc
cmp
clc
ret
out
lods
cmp
add
jae
lret
xchg
mov
loopne
jb
mov
lahf
cmp
icebp
xchg
mov
popa
loop
pop
adc
aaa
adcb
add
mov
xchg
shr
xchg
jne
cli
pushf
outsl
std
xorb
inc
cmc
jae
orb
push
lds
fwait
mov
jmp
cmp
loope
stc
insl
mov
xchg
jmp
and
rcrl
fdivrl
xabort
adcl
sbb
xchg
or
cmpsb
sub
mov
and
lock
jmp
mov
push
or
sub
xor
bound
ret
jg
sbb
test
fmull
dec
sarb
out
hlt
jle
pop
adc
sub
mov
xchg
mov
and
imul
sbb
sub
loopne
jno
je
mov
xchg
push
xchg
cmpsl
jne
pushf
stc
bound
jp
sbb
in
cmp
mov
pop
ja
cmp
aam
mov
dec
decl
hlt
cmpl
notl
lret
movsb
cs
addr16
test
lcall
mov
loope
cmc
test
and
sub
cmp
les
xchg
jl
dec
and
adc
mov
adc
mov
jmp
ja
lahf
testb
aas
mov
pop
or
ja
jnp
mov
loope
pop
add
mov
out
jp
stos
pop
aaa
dec
xor
outsb
les
mov
lods
imul
leave
push
and
loop
outsl
addr16
mov
dec
repnz
and
jg
and
out
lods
mov
push
pop
les
cmp
mov
sahf
stos
sub
rcrl
imul
xor
mov
addr16
jno
jl
adc
sub
and
xchg
addr16
sub
fistpll
add
xor
adc
add
pop
push
xor
insb
int3
daa
mov
adc
insb
sahf
dec
inc
dec
sbb
repz
scas
sbb
loopne
push
xchg
in
fwait
cmp
dec
ret
shr
into
enter
xor
jl
jp
jno
cmp
xlat
repz
push
inc
add
adc
iret
out
dec
push
popa
mov
sbb
xor
sbb
adc
sbb
fsts
inc
add
popa
std
jg
push
add
test
inc
sub
xor
inc
sti
test
push
pop
dec
xor
add
imul
push
mov
jne
int3
cmc
inc
in
or
in
cmp
addr16
les
pop
sub
ss
ds
or
sub
xchg
pop
fldcw
popa
fimull
fcmovu
les
ljmp
scas
lcall
leave
aad
pop
inc
stos
mov
adc
inc
dec
adc
inc
adc
les
pop
in
and
out
add
repz
xchg
ret
cmpsl
xchg
sbb
pop
cs
icebp
mov
fmul
inc
sub
iret
mov
push
jb
call
jecxz
paddsw
xor
lret
leave
in
pop
sti
lods
sarl
mov
fst
lahf
xchg
pop
mov
xor
js
jg
push
add
mov
stc
loop
xor
hlt
dec
push
scas
icebp
fildl
enter
cmp
sub
mov
jl
jg
xchg
mov
stc
add
aas
or
adc
mov
mov
xchg
add
inc
cmp
hlt
dec
pop
jmp
out
sbb
aam
add
add
cmp
clc
cmp
aam
sarb
iret
jns
fdivs
mov
or
outsb
stos
and
dec
adc
lret
xlat
xchg
jo
test
sarl
xlat
fmul
js
imul
mov
roll
stc
movsb
scas
jno
sarl
xchg
xlat
outsb
and
cltd
pop
sub
xor
incl
add
stos
push
and
push
jg
mov
stos
in
push
cs
and
mov
push
cmc
mov
push
mov
inc
xchg
push
or
js
movb
je
or
in
xchg
mov
mov
dec
sbbl
repnz
je
mov
pushf
jno
push
dec
fmul
mov
jo
test
cmpsl
push
hlt
jl
cmp
sbb
push
adc
adc
mov
nop
xchg
push
xchg
mov
lods
mov
or
ret
pop
popa
lcall
hlt
cltd
roll
push
test
lock
push
sub
mov
leave
xchg
fistpl
clc
arpl
dec
lds
jno
dec
cmc
movsl
outsb
aam
or
xchg
std
mov
cmc
and
dec
mov
sub
hlt
movsb
jns
push
xor
adc
int
dec
std
or
sti
stc
mov
xchg
sub
pop
or
dec
pop
sub
xor
loop
pop
stos
in
mov
aad
adc
xchg
decl
or
inc
ljmp
dec
inc
jmp
mov
movsb
dec
push
sub
sub
push
popw
in
aaa
mov
dec
dec
mov
fnstsw
inc
inc
int
imul
xchg
mov
dec
js
jmp
push
xor
shrl
popa
or
inc
add
inc
sub
and
pop
push
sub
push
imul
xor
outsl
xor
leave
in
imul
mov
adcb
push
in
test
mov
arpl
int
lea
pop
stc
push
lahf
ds
sbb
xchg
mov
cmp
ret
push
inc
adc
mov
sub
and
jae
in
fsts
outsb
scas
cmp
inc
das
xlat
push
es
mov
fildl
test
sbb
adc
in
dec
iret
inc
or
xor
add
and
pop
mov
or
jmp
sti
jg
test
das
mov
sub
mov
in
adc
lds
push
adc
mov
in
pop
jno
repnz
test
inc
adc
and
fcomps
gs
lcall
gs
ret
pop
jg
jg
js
test
movsb
sbb
adc
insl
fstpl
mov
mov
lds
push
imul
mov
mov
pusha
xchg
push
pop
add
inc
repz
adc
out
cmc
incl
stos
ret
lcall
ret
inc
push
cmp
les
aam
push
fdivrl
test
cmp
test
cltd
ret
or
jl
pop
adc
sub
lock
sbb
aad
dec
and
dec
jp
outsl
fcompl
inc
cmc
mov
or
and
cmc
mov
mov
adc
or
sub
jae
inc
pop
ljmp
push
push
pop
add
out
pop
or
cmp
lret
cmp
scas
mov
mov
and
jo
repnz
jae
insl
in
leave
and
xor
mov
adc
adc
jle
scas
xlat
sub
adc
mov
mov
jne
mov
mov
push
arpl
mov
ss
outsl
pushf
push
pop
or
add
mov
sbb
mov
je
gs
push
in
imul
pop
dec
jb
ret
pushf
mov
push
xor
mov
fsubrl
push
xorl
in
mov
push
and
sbb
sbb
sbb
sbb
sub
inc
repz
das
jb
into
lret
int3
inc
sbb
out
mov
pop
cmc
outsl
push
sbbb
mov
pop
js
sub
sbb
jbe
int3
cld
pop
jg
sub
loopne
or
insb
fcomps
inc
xor
dec
popa
mov
in
outsb
push
imul
pusha
adc
inc
fwait
into
sbb
es
in
gs
and
inc
adc
insl
cmpsb
push
adc
cmpsl
lock
daa
pop
pop
jb
and
mov
fdivrp
nop
jle
inc
jno
scas
fidivrs
adc
mov
adc
ja
fs
push
dec
inc
cmpsl
pop
icebp
add
mov
inc
dec
dec
aas
jno
lock
int3
cmpsl
test
mov
jmp
cmpsl
xchg
mulb
es
or
scas
jge
bound
es
sbb
pop
and
pop
add
aaa
movsl
lcall
cmc
das
push
xor
mov
test
stos
add
dec
xlat
je
jecxz
outsb
jbe
ret
gs
es
mov
loopne
dec
sub
repnz
cmp
cmpsl
imul
lcall
mov
pop
jmp
stos
stos
fisttps
ret
adc
pusha
loopne
sbb
je
jecxz
imul
xchg
aaa
shlb
mov
dec
lcall
mov
lock
jb
xchg
add
sub
in
xchg
xor
cltd
cltd
cmp
inc
out
out
and
das
adc
sbb
mov
iret
cltd
sti
push
fisttpl
enter
sahf
mov
mov
sub
aam
cs
adc
out
lret
lea
jmp
addb
or
in
pushf
enter
xchg
sub
fstl
in
inc
mov
inc
add
jns
or
insb
mov
icebp
aas
test
leave
shll
loopne
jnp
jb
cmp
mov
int
orl
push
int3
xchg
jge
xchg
repnz
in
add
popa
lcall
leave
lods
clc
clc
add
ljmp
je
stos
fsubs
xor
dec
inc
sarb
movsl
pop
mov
mov
mov
mov
pop
decb
les
fcom
lea
loop
and
imul
jmp
dec
mov
mov
xlat
lret
jmp
repz
ss
repnz
loope
je
sbb
mov
mov
insb
int3
fstp
sbb
mov
push
mov
mov
jge
mov
pop
fldcw
in
in
sub
push
iret
jmp
jle
dec
mov
adc
pop
lahf
mov
adc
adc
sbbb
mov
sub
arpl
mov
call
lods
dec
jo
jmpw
test
jbe
xchg
dec
add
aaa
stos
sub
imul
dec
fcmovne
or
jp
sub
mov
into
mov
lcall
cltd
and
sub
xchg
xor
mov
arpl
jmp
cmp
insb
adc
mov
out
imul
roll
int3
sub
adc
mov
dec
sti
cli
push
cld
fs
add
xchg
out
mov
dec
mov
xchg
ja
dec
jp
fistps
insb
or
divl
cmp
mov
orb
divl
xchg
les
sub
and
mov
jp
not
push
cwtl
pop
and
inc
pop
or
dec
xlat
jl
mov
push
and
mov
dec
mov
pop
jecxz
or
rcll
or
aaa
inc
adc
iret
inc
fdivp
lret
fimuls
jle
xchg
push
lods
adc
mov
xor
sbb
out
mov
test
mov
loopne
or
add
and
jae
in
inc
ljmpw
jbe
dec
pop
imulb
pusha
push
add
cmp
stc
lds
push
addr16
das
hlt
mov
cmp
lret
mov
mov
push
push
sub
or
loope
or
sbb
add
dec
adc
scas
mov
std
xchg
dec
icebp
cmp
mov
cltd
test
xchg
jle
dec
xchg
leave
mov
add
cli
xchg
mov
push
sarl
daa
jge
out
adc
mov
fdivrl
inc
push
ss
js
pop
jbe
cwtl
aad
push
test
push
ljmp
call
pushf
mov
test
xchg
push
add
cwtl
xor
pop
nop
adc
scas
decb
jbe
idivl
sarl
ja
push
push
pop
andb
and
cmpsl
xor
setno
add
jno
mov
push
stc
mov
xend
in
rorl
cmp
mov
ss
shl
pusha
or
mov
xlat
sbb
imul
dec
out
cmp
jmp
dec
fcoms
lock
fucomip
mov
pop
leave
fdivl
lock
fldcw
shlb
pop
lock
mov
fnstsw
lods
sbb
pop
ret
in
mull
mov
sub
nop
das
test
sub
or
lods
bound
pop
loopne
daa
mov
outsl
push
jle
popa
aaa
cmpsl
xchg
movsl
dec
test
sub
and
pop
rol
movsl
movsl
sar
mov
cmp
nopl
pop
xor
push
aad
scas
mov
sbbl
jle
rorl
ret
jecxz
inc
test
inc
cmpsb
lahf
and
cmpsl
fisubs
mov
js
filds
call
mov
mov
bound
jmp
pushf
std
push
pushf
mov
repnz
pop
xchg
push
aas
cmp
in
mov
xor
mov
fnstsw
pop
notl
mov
pop
dec
and
out
xchg
jp
rcl
lods
or
insb
ror
inc
insl
repz
out
call
xor
aad
adc
mov
dec
jns
sti
mov
push
xor
and
pop
xor
lret
lea
lcall
push
movsb
call
push
rorb
mov
insb
stc
sub
push
sbb
inc
inc
jne
ljmp
and
mov
xchg
mov
sar
in
lcall
std
pop
fidivs
aaa
bound
mov
add
pop
bt
sbb
jmp
mov
mov
hlt
push
shl
stc
xchg
mov
ds
mov
sub
icebp
mov
push
sbb
inc
ja
add
ja
subl
movl
cmp
lock
xor
hlt
dec
orb
jbe
mov
cmc
xchg
test
cmpsl
aam
mov
jne
je
sbb
std
repz
in
scas
push
inc
pusha
push
adc
dec
jo
jne
xchg
jne
fs
cltd
pushf
rcr
in
jmp
push
ljmp
in
imul
sbb
fs
ss
cmp
jne
xchg
int
std
fmull
jnp
aas
mov
jecxz
stc
loop
in
mov
mov
mov
adc
sbb
add
cmp
loopne
gs
mov
fwait
loope
cs
inc
scas
inc
push
push
lock
iret
popa
sbb
cli
or
test
fidivs
popf
int3
sahf
sbb
shlb
mov
cmpsb
mov
lret
mov
cmp
xchg
mov
insb
mov
sbb
cmp
mov
and
ljmp
cmp
insb
mov
negb
es
cwtl
ret
push
dec
mull
push
in
divl
and
fmulp
retw
data16
repz
leave
notl
adc
push
hlt
xchg
cwtl
aaa
test
or
xor
gs
out
lods
aad
dec
out
inc
popf
ss
mov
in
xchg
icebp
push
push
mov
fstps
inc
ret
push
adc
xchg
push
fsubs
inc
mov
lods
rcl
scas
xor
repnz
adc
mov
scas
ljmp
jmp
lcall
hlt
out
out
out
ja
dec
push
inc
or
add
cmp
cwtl
stos
sbb
in
mov
dec
and
mov
mov
lods
sub
or
jb
adc
dec
pop
ss
push
vmwrite
jecxz
cmp
or
pop
repnz
sbb
jl
lods
add
pushf
or
xchg
and
dec
and
fldcw
xor
mov
in
mov
mov
cmp
adc
imul
in
outsb
stc
in
aas
add
lods
mov
lods
pop
jo
xlat
adc
movups
lods
pop
push
insb
mov
popf
sahf
jnp
adc
hlt
jne
enter
jmp
mov
js
or
add
pop
xchg
jno
jo
addr16
pop
jne
movsb
and
pusha
xchg
xchg
xchg
xor
and
mov
jmp
sbb
movsl
je
jns
push
lret
addr16
int3
xchg
imul
xlat
pop
cwtl
test
das
out
arpl
mov
and
fcoms
sbb
sub
loope
arpl
inc
and
popa
sti
cmp
movsb
js
xor
lret
stos
jnp
mov
lea
repz
mov
push
pop
adc
xor
jecxz
jl
adc
adc
jl
bswap
rolb
in
pop
clc
push
jge
sahf
data16
aad
daa
jo
dec
in
cld
movsl
ss
jg
or
icebp
popf
movsl
mov
add
jg
push
xor
sub
pop
and
xchg
pop
xchg
sub
test
jne
lods
mov
inc
mov
cltd
xor
push
ss
scas
cmp
push
and
fldt
mov
mov
dec
testl
push
mov
jmp
jne
hlt
cmpsl
pop
popa
cs
call
test
push
scas
call
dec
jne
mov
jnp
fs
fisubl
out
lds
out
cmp
fs
mov
mov
mov
jmp
cmpsl
xlat
push
add
cmp
scas
imul
inc
test
mov
or
stc
aaa
pop
orb
notl
push
and
lods
ds
mov
lcall
push
out
or
sub
ret
pop
sbb
test
loopne
xchg
xor
shll
cmp
inc
dec
movsb
out
ds
fdivr
mov
inc
dec
mov
mov
adc
cmc
mov
shl
mov
inc
inc
ljmp
cmp
lret
incb
xchg
jg
mov
jmp
iret
cwtl
or
fistpl
jno
sub
xchg
sbb
std
jle
mov
cmp
jg
pop
inc
push
stos
mov
cltd
sub
pop
stos
jns
sbb
shl
mov
sbb
in
and
mov
cmp
pop
sub
in
imul
int
out
jle
outsl
xchg
xchg
das
ja
loope
inc
nop
stc
jae
neg
dec
mov
ja
adc
dec
mov
dec
cs
dec
aad
scas
jecxz
in
mov
fwait
aam
mov
fwait
sbb
ret
popf
std
push
or
cli
insl
ss
je
lret
dec
scas
mov
or
aam
add
mov
sbb
movsl
daa
pop
sbb
jl
push
jl
scas
mov
bnd
pusha
fcos
cmc
mov
push
fsubs
out
jp
sbb
sbb
pop
enter
dec
jp
out
in
mov
jecxz
dec
sbb
xor
xor
pop
sbb
push
repnz
lahf
cmp
lock
ret
in
ss
pop
pop
or
pop
das
mov
stos
xor
xor
jns
mov
daa
arpl
faddl
mov
and
imul
push
fcompl
push
inc
pop
insl
loope
divps
in
mov
shrb
sbb
push
aas
mov
or
mull
or
cmp
stc
aad
sub
iret
inc
fsubr
push
jns
mov
inc
scas
adc
and
rorb
fsubrs
sbb
mov
ds
test
inc
mov
adc
or
mov
decb
mov
pop
adc
sub
sub
adc
adc
push
lcall
stos
insl
sbb
lods
stos
sarb
jae
popl
cmpsb
cld
pop
and
fld
fiaddl
jecxz
and
and
sbb
in
cmpsb
sub
adc
cmp
cmp
adc
xor
xlat
hlt
insl
jle
pop
jmp
sarl
jbe
fidivrl
pop
add
pop
adc
pop
fdivrs
xchg
cli
xchg
push
cmpsb
and
mov
int3
es
or
mov
std
cbtw
jl
fs
mov
aad
lret
mov
inc
insl
adcl
mov
cs
lock
jb,pn
and
sub
xor
mov
sub
xchg
arpl
jle
dec
pop
add
xchg
negb
movsb
add
das
enter
sub
mov
cmp
jle
cmp
dec
mov
inc
repz
xor
test
dec
or
pop
cmp
inc
inc
push
imul
mov
mov
push
cmpsb
outsb
in
xchg
outsl
push
out
pop
jmp
xor
jo
sbb
adc
lods
cs
adc
movl
lahf
pop
aam
ret
mov
dec
sbb
mov
hlt
imul
daa
sub
jnp
push
repz
inc
lods
scas
push
mov
call
inc
push
sub
cmc
decb
lret
inc
or
test
cld
xor
cmpsl
clc
jg
sbb
aam
pop
and
adc
adc
pusha
ret
and
pop
xchg
or
xchg
into
sbbb
sub
insl
movsb
xchg
sahf
aad
or
sti
xchg
test
xor
pusha
xchg
pop
sub
aaa
into
movsb
sub
and
fisubl
lods
mov
jmp
int3
jmp
mov
imul
dec
sbb
cltd
icebp
adc
mov
push
lea
pop
mov
out
repnz
pop
cmp
lods
cmp
ljmp
mov
les
lret
in
pop
cmc
das
mov
push
mov
roll
std
dec
and
sbb
xchg
push
mov
daa
add
gs
mov
xchg
cmpsl
test
and
or
adc
std
fcoml
add
dec
sbb
ds
mov
in
jno
mov
shll
pop
sbb
test
mov
call
lods
mov
clc
jno
dec
je
add
bsr
ljmp
movsb
movsb
insl
inc
fbstp
or
pop
ja
arpl
or
adc
inc
in
xor
lods
jmp
in
test
sbbb
jg
sbb
inc
sub
dec
cltd
push
loop
je
in
out
fidivrs
aad
pop
mov
and
jo
pop
outsl
jg
mov
and
cmpsb
mov
int
pop
sub
sbb
lods
cmp
jg
sub
in
mov
das
mov
popa
jg
mov
in
popf
xchg
dec
push
into
mov
daa
or
jge
add
xchg
insl
xor
pop
pop
lock
sub
and
mov
arpl
lds
sbbb
add
out
xchg
stos
push
imul
in
ljmp
lahf
sbb
hlt
js
icebp
adc
faddl
mov
scas
shlb
rcll
out
cmc
xchg
pop
fwait
push
decb
or
lea
sub
sub
pop
outsl
jbe
faddl
sub
cmpsl
cmc
cs
imul
lret
pop
je
cmc
fwait
scas
rclb
mov
out
popf
xchg
dec
aas
dec
inc
sub
out
jns
shrb
xchg
stos
or
inc
loopne
in
jnp
into
sar
or
and
cmp
clc
nop
lods
call
adc
push
mov
pop
cmp
outsb
adc
add
arpl
stos
pushf
in
fimull
or
imul
hlt
mull
aad
or
enter
ja
dec
cmp
dec
je
loope
sbbb
sub
sub
outsb
insl
xlat
pop
sbb
or
sub
stos
addb
fidivrl
andl
test
dec
mov
mov
sbb
push
fsubs
ljmp
dec
inc
das
sub
jmp
sbbb
push
push
jae
out
shrb
mov
sub
sub
xchg
mov
stc
lods
int
sbb
sub
sbb
cmpsb
ja
adc
test
adc
adc
icebp
repnz
xchg
int3
hlt
jmp
fisubrs
xchg
and
rcrb
mov
adcl
jmp
scas
aad
fs
popf
push
jbe
pop
bswap
and
xabort
clc
mov
cmp
fidivl
es
jbe
jae
xor
adc
jns
xor
stos
shrb
arpl
sahf
test
mov
fbld
mov
sub
add
add
lcall
shrl
xor
cmpsl
xor
xor
mov
jno
cmp
in
sub
fnstenv
xchg
fidivs
js
xor
repz
scas
lret
mov
test
dec
push
movsl
jp
or
and
sub
mov
call
stos
or
loope
stos
dec
imul
cmpsl
inc
sti
aas
or
lret
subb
fwait
and
hlt
xlat
repz
mov
mov
and
or
sbb
jge
int
fsubrp
dec
cmovge
lods
push
aad
sbbl
aad
cld
fwait
pushf
and
movsb
mov
fnsave
cld
popf
dec
ror
push
insb
push
enter
xor
dec
sub
data16
call
adc
xchg
add
pop
and
dec
jle
mov
xchg
cmp
hlt
sbb
repz
lahf
or
jl
lds
in
outsl
sub
rclb
jge
mov
rcr
push
data16
sub
mov
mov
nop
mov
ja
jne
xor
lods
cmp
lret
lret
mov
sbb
sarb
inc
popf
jbe
ret
dec
aaa
dec
jl
cmpsl
dec
fs
cs
fucomp
ret
inc
fucompp
xchg
dec
mov
jb
mov
xchg
leave
mov
jns
fsubrs
mov
lods
lds
rolb
and
loopne
inc
pop
adc
sahf
push
fcomi
leave
shll
mov
mov
adc
sub
inc
nop
imul
cmc
pop
cmp
mov
imul
lret
push
lcall
out
lret
or
loopne
pop
push
shl
scas
fs
aaa
icebp
xor
xor
aam
repnz
cmp
pop
iret
js
mov
fisubl
ja
push
iret
decb
xchg
lcall
movsb
pop
push
popa
les
mov
push
inc
loopne
sti
sub
pushl
pop
ret
nop
js
inc
ret
push
int
mov
xor
pop
sahf
imulb
jbe
dec
inc
xor
xchg
enter
cwtl
movsl
push
nop
dec
mov
sub
icebp
jbe
sub
mov
call
les
js
and
add
push
test
dec
mov
in
cld
data16
sub
cmc
dec
scas
mov
adc
aaa
inc
jnp
dec
jbe
call
cmp
dec
divl
mov
or
xchg
dec
imul
cmpsl
xchg
fiadds
fnstsw
jecxz
pop
lock
sbb
pop
sub
sahf
icebp
pop
add
jle
xchg
xchg
mov
gs
mov
ficoms
mov
orb
insl
mov
popf
xor
cmp
or
pop
enter
jb
mov
jg
jle
sub
push
xchg
ljmp
dec
ficoms
stos
dec
pop
or
mov
cwtl
jle
sbb
in
dec
stc
xchg
out
in
mov
jmp
int
test
mov
loopne
sbb
push
notl
adc
test
inc
xor
cwtl
mov
jmp
dec
out
sarl
test
rcrl
xchg
cmpl
push
out
dec
sbb
cmp
popa
mov
xor
inc
mov
ljmp
pop
jp
add
add
add
sahf
jg
mov
daa
dec
xor
jne
out
stos
and
dec
cwtl
xchg
movsb
lods
mov
pop
mov
xor
xor
jge
dec
xor
push
add
pop
scas
mov
and
xchg
test
push
addb
and
jg
sarl
mov
ficomps
mov
mov
sub
dec
ds
insb
push
jle
fildl
shll
mov
push
mov
add
loopne
dec
dec
mov
mov
dec
adc
ret
mov
pop
jecxz
pop
insl
sarl
push
adc
jb
das
aaa
or
fnsave
xor
cmpsl
mov
push
jo
in
shll
mov
xor
mov
lods
repz
adcl
mull
insb
shll
data16
pop
sbb
lret
inc
adc
shl
jecxz
push
cwtl
mov
xchg
pop
push
scas
outsb
jb
mov
xchg
mov
mov
or
lods
pop
stos
sub
jecxz
jno
inc
and
jb
pop
inc
sbb
std
shl
into
xchg
pop
clc
push
imul
iret
xchg
scas
mov
sub
push
mov
jle
ds
sub
bnd
lods
xchg
mov
sbb
xchg
fadds
loop
addl
push
xor
push
mov
mov
icebp
push
push
nop
int
push
cwtl
adc
mov
and
pop
sbb
mov
incl
xchg
and
xchg
js
mov
repz
pop
into
pop
pop
loope
das
or
sub
mov
sbb
or
push
out
fwait
push
mov
push
mov
or
andl
push
in
or
inc
andb
mov
filds
and
or
xchg
xlat
mov
lock
pop
icebp
movsb
popf
fidivl
adc
stc
mov
shll
aaa
xor
sub
xchg
push
das
xor
mov
andb
cltd
inc
sti
mov
into
imul
push
lods
mov
aas
sub
sub
cltd
mov
dec
fbstp
mov
xorb
push
jle
add
les
mov
aam
push
mov
fisttpl
or
sbbb
imul
sbb
cwtl
stc
xchg
jl
xchg
jbe
int3
filds
arpl
xchg
inc
fucomi
xlat
xchg
ret
mov
jne
push
pop
jg
popf
mov
xchg
adc
jno
push
dec
sub
pop
daa
adcb
pop
icebp
call
je
jo
jmp
sbbl
fcoms
cmp
xor
fwait
add
in
lret
sub
leave
rcrl
push
cmp
or
daa
lcall
pop
inc
inc
dec
nop
mov
push
lds
pushf
cli
sub
pop
and
andl
mov
mov
cltd
test
movsb
jl
sbbl
and
mov
mov
inc
and
filds
mov
push
daa
and
into
xor
ja
dec
jecxz
cmp
mov
iret
aaa
je
sahf
inc
out
lret
sub
fcomps
call
daa
add
mov
mov
pusha
lret
jge
add
int3
dec
lret
mov
fbstp
loopne
push
scas
dec
xchg
and
mov
ljmp
push
ja
loopne
sbb
pop
fcompl
inc
outsl
mov
xchg
ret
mov
sub
jnp
shlb
rcl
int3
jno
sahf
pop
push
into
jno
pop
iret
adc
mov
imul
add
into
cmp
jb
and
mov
pop
stos
xor
push
dec
daa
rcll
push
adc
sub
pop
xchg
mov
push
adc
cmpsl
mov
ds
rcrb
and
push
adcb
cs
mov
mov
daa
mov
add
and
push
cmp
out
aad
dec
push
jmp
and
xor
ja
pop
pop
addr16
add
repz
and
clc
aas
aaa
dec
jo
add
sub
dec
outsb
sbb
icebp
hlt
lret
sbb
dec
mov
clc
loopne
icebp
jl
xchg
xchg
decb
cmp
sub
or
filds
sbb
outsl
daa
add
sub
inc
js
dec
mov
jb
mov
rcl
pop
push
dec
and
rcr
mov
and
jp
sub
std
leave
xor
dec
add
fucompp
sbb
imul
mov
mov
inc
push
sbb
mov
call
dec
dec
cmpsl
divb
ljmp
loopne
pusha
cmp
fwait
dec
push
pop
mov
testb
fs
push
pushf
add
push
and
dec
jle
mov
aam
xchg
es
sub
add
jecxz
jbe
call
cld
xor
rcll
add
sbb
fwait
loope
stc
leave
leave
mov
xchg
sub
ret
add
ljmp
imul
xor
push
cmp
mov
jge
cmpsl
les
enter
mov
and
pop
sbbl
xor
call
mov
sub
inc
cmpsl
sub
jnp
shl
add
gs
lahf
xorl
push
inc
sub
ret
aam
and
add
adc
xor
aad
inc
ret
mov
lret
aad
lcall
lret
xlat
push
sbb
xor
je
jle
adc
cmp
sub
add
adc
adc
movsl
xorb
xchg
data16
mov
clc
xor
loop
iret
pusha
out
stc
loopne
dec
cmp
xor
iret
js
lret
mov
fdivrl
sarl
hlt
test
jne
js
xor
enter
das
mov
jl
icebp
sarl
es
add
cmp
push
inc
and
push
or
pop
cld
xchg
push
jnp
jecxz
xchg
push
out
aad
dec
and
cmpsl
xchg
mov
dec
das
enter
mov
add
cmpsb
leave
movb
test
pop
mov
lea
lea
sbb
xchg
ja
shrb
outsb
cmpsb
push
jle
sbb
mov
xor
rcll
dec
adc
lds
mov
fstp
sbb
out
gs
mov
dec
xchg
jmp
in
sbb
stos
mov
cmpl
xor
cmp
loopne
sbb
xchg
addr16
push
cmp
sti
push
mov
pusha
pop
xor
test
leave
addl
pop
cmp
out
xor
jmp
jno
inc
ret
lods
cmpsb
stos
mov
ret
sub
push
adc
mov
mov
test
pop
adc
outsb
xchg
shlb
add
aaa
cld
cmp
call
pop
lahf
insb
push
cs
pop
jmp
loope
jns
repnz
lods
cld
out
sub
hlt
jae
xchg
xchg
mov
ret
push
jns
jle
sub
arpl
das
fs
cmp
inc
cltd
lahf
repz
nop
imul
ja
in
aaa
xchg
scas
fucompp
lret
in
shll
inc
imul
xchg
or
ret
mov
and
and
fstl
pushf
js
sbb
sbb
lret
xor
jp
aam
mov
cld
xchg
add
repz
subl
incb
rolb
cmp
mov
lock
test
mov
dec
mov
push
mov
sbb
adc
repnz
mov
and
and
and
adc
lahf
dec
jmp
test
xlat
adc
nop
mov
jae
sub
pusha
inc
dec
xor
cmp
adcb
jmp
arpl
test
outsl
push
scas
rol
mov
push
nop
and
fidivrl
and
jl
aas
push
pop
sub
jno
lcall
or
and
jl
xchg
dec
push
sub
jnp
test
dec
cld
enter
hlt
sbb
jne
outsl
xchg
push
jp
shrl
out
adc
jns
sub
lret
and
ljmp
aas
xor
bound
pop
das
sahf
mov
test
dec
mov
mov
shll
xchg
push
pop
test
test
out
movsl
popf
sbb
cwtl
call
lods
ss
fcoml
insb
jmp
push
fcmovnbe
das
pop
or
test
sub
push
jno
or
movl
sbb
pop
xchg
stos
gs
xor
mov
out
sbb
push
mov
scas
movl
jne
mov
add
das
adc
gs
xchg
movsb
cmpl
mov
xor
mov
sbb
sbb
mov
nop
idivl
mov
test
push
or
ret
mov
mov
iret
insb
pop
pop
nop
lock
scas
cmc
ds
mov
cmpsb
es
neg
fsubl
movsb
pushf
jb
pop
data16
scas
test
ljmp
mov
test
inc
rorl
mov
inc
ret
or
xor
loope
mov
add
scas
inc
sbb
sbb
scas
mov
nop
push
xchg
clc
push
imul
inc
or
mov
pop
divl
add
xchg
fildll
fidivrs
stos
das
lds
jae
mov
adc
movsl
jmp
out
or
and
jge
push
insl
repnz
and
ljmp
mov
pop
pushf
enter
and
mov
xor
pop
push
mov
adc
movsl
rcll
mov
push
jmp
or
inc
mov
adc
pop
xchg
mov
inc
dec
or
dec
jbe
xchg
xchg
divl
push
icebp
ds
rcr
mov
loop
cmp
mov
inc
and
into
mov
int
inc
pop
mov
lret
rcrb
stc
rcll
jg
jb
push
xor
mov
outsl
sub
jmpw
lock
fistpl
mov
sarl
add
mov
lods
mov
mov
aaa
jbe
jg
or
mov
sti
fwait
test
mov
cmpsl
hlt
adcl
stos
jb
inc
dec
mov
xchg
test
sbb
lahf
cmpsl
lret
in
pop
pop
push
push
cld
inc
inc
cmp
cmp
mov
pop
test
dec
fimull
mov
push
mov
shlb
loop
xor
xchg
jnp
int3
sbb
pusha
jg
lcall
insl
mov
arpl
les
mov
xor
lcall
lret
ret
or
stos
into
xchg
movsl
jle
fistps
cmpsl
push
jns
or
lods
sbb
ja
sbb
inc
adc
test
adc
push
adc
fwait
mov
pop
xor
mov
or
loope
pop
sbb
push
push
jl
jnp
lahf
iret
movsl
adcl
add
incl
and
add
sbb
fcmovb
js
add
push
gs
mov
lods
mov
movsl
shrl
shlb
mov
and
sbb
jae
popa
jo
jnp
es
push
es
shll
sbb
xor
je
cltd
xchg
repz
pop
inc
ret
xchg
cli
fs
mov
xchg
jno
in
xchg
pop
insb
push
lea
dec
and
pop
cmp
int
and
cwtl
stc
add
mov
lds
rcr
xor
and
sti
jle
aaa
push
push
push
or
les
scas
popa
jnp
faddp
and
fidivs
pop
loop
aas
arpl
jmp
insb
inc
xor
adc
test
and
jns
pop
xor
test
mov
push
out
adc
pop
scas
mov
cmc
std
aaa
jbe
pop
inc
stos
scas
inc
inc
lret
aas
xchg
daa
rcrl
xchg
sub
out
addr16
push
ss
mov
mov
lahf
push
subl
inc
add
adc
xorl
mov
or
mov
out
ret
aaa
dec
outsb
loope
push
jns
push
shrb
mov
dec
out
jg
jp
push
mov
repz
pop
inc
sti
loope
scas
aad
je
outsl
push
dec
sarl
add
jb
adc
repz
and
cmc
adc
gs
push
ret
cmpsl
ss
pop
mov
jmp
push
cmp
adc
sub
aad
cmpsl
push
dec
cltd
cmp
test
out
data16
out
ja
mov
std
mov
or
xchg
js
lcall
cmp
sbb
mov
push
dec
enter
or
repz
cmpb
out
daa
mov
loop
sbb
aam
sub
repz
mov
lret
cmp
ss
push
pushf
sub
popf
xchg
jl
inc
xor
testb
jbe
scas
inc
and
insl
sbb
inc
and
pop
push
insb
jg
aaa
push
mov
inc
insl
pop
push
es
inc
fistpll
repnz
push
xchg
inc
rclb
xchg
mov
gs
inc
les
push
cmc
adc
inc
jnp
xchg
cmp
xor
sub
xchg
mov
das
cld
into
clc
loope
bound
sti
xor
aas
cmp
dec
dec
loope
jle
mov
hlt
mov
inc
and
adc
das
push
imul
pop
dec
sub
push
mov
lret
jg
addl
push
lds
inc
or
adc
aad
iret
icebp
std
push
cli
ret
stc
imul
dec
inc
xor
xchg
js
add
pop
sub
cld
test
popf
sarb
arpl
jl
loope
negl
fdivrl
jbe
popa
add
cli
lahf
pop
imul
jbe
nop
scas
mov
lret
mov
fisttps
loopne
mov
fisubrl
popa
push
mov
dec
cmp
arpl
cmp
shll
outsw
insl
mov
mov
les
add
adc
sbb
jmp
sbb
mov
sar
xchg
jo
pop
mov
sbb
test
sbb
cmp
out
ds
bnd
lods
cmp
jmp
pop
inc
mov
push
stos
in
lahf
or
cmp
xchg
outsb
dec
lret
add
lods
mov
in
iret
adc
jg
pop
xor
adc
xchg
xchg
pop
mov
loopne
or
ss
and
mull
lods
mov
subl
mov
cmpsb
or
jmp
loopne
dec
fidivs
lods
mov
adcl
insl
push
jmp
mov
leave
push
retw
std
pop
mov
jns
jbe
dec
push
push
add
mov
mov
cmpl
inc
pop
mov
repnz
add
shlb
loop
or
data16
inc
aam
js
mov
pop
xchg
adc
jno
pop
test
les
pop
cmpl
cmovno
jmp
test
mov
nop
repnz
adc
inc
scas
sub
xchg
loop
cwtl
das
lahf
insb
ljmp
les
std
mov
cltd
sbb
or
lret
mov
scas
insl
jne
lahf
sahf
xor
stc
xlat
loopne
test
mov
pop
out
cmp
lock
cwtl
jg
cmp
not
loop
insb
mov
jle
movsb
leave
or
sbb
loop
inc
xchg
mov
cmp
imul
jmp
in
xlat
adc
shrb
lcall
testl
lock
dec
mov
pop
sub
sbb
xchg
adc
bnd
pop
in
stos
xor
gs
das
sub
test
mov
hlt
dec
hlt
or
sub
pop
xchg
imull
jmp
inc
dec
nop
sub
sbbl
lock
pop
sbb
adc
xor
je
mov
and
dec
adc
test
pop
inc
cs
xor
fmull
dec
cmp
or
mov
xorl
notb
sub
test
inc
sbb
stos
add
dec
cmp
movb
and
pop
mov
fs
std
add
scas
frstor
jnp
outsb
insb
jmp
fiadds
mov
addl
push
stc
mov
orl
popf
mov
into
jp
add
ret
enter
jg
jge
aas
cmpb
jae
xchg
mov
daa
aas
push
clc
jae
jbe
mov
fdivs
popf
inc
jb
das
sbb
andb
enter
and
inc
mov
xor
aad
sub
fstpt
inc
fdivrp
pusha
or
push
sbb
sub
call
add
ret
ret
adc
mov
in
or
cwtl
sbb
inc
or
xor
pop
mov
push
je
push
mov
rcrb
mov
out
add
movsl
lods
push
pop
mov
ds
xor
sub
sub
je
fimuls
cwtl
push
cmpsb
aad
lock
or
and
mov
jge
mov
dec
push
adc
repnz
sbb
pop
mov
cmp
mov
add
jnp
aas
dec
fcomp
adc
adc
sub
sbb
daa
push
push
pop
jg
push
arpl
test
test
pop
mov
cmp
fcmove
sbb
repz
aad
loope
jmp
jbe
andl
cli
dec
loope
adc
fisubl
fwait
popa
in
sahf
cmp
icebp
into
das
nop
fxch
leave
das
rcrl
or
shr
clc
test
lods
nop
sub
and
jle
pusha
dec
test
or
das
orb
pop
out
loope
aad
test
mov
mov
jae
shrb
fisubrs
inc
repnz
sbbb
cmp
nop
xchg
xchg
mov
xor
dec
shr
mov
inc
and
das
aad
repnz
jle
jmp
loop
fs
xchg
fwait
enter
imul
jae
js
push
mov
les
and
cwtl
or
imul
insl
or
rcr
inc
ret
aam
push
lods
adc
jle
nop
jg
fbstp
cmp
cld
xchg
movl
push
push
jno
je
cmp
scas
out
jns
lret
sbb
clc
push
mov
and
adc
mov
ds
mov
push
mov
fsubs
sub
xchg
add
sbb
mov
adc
pavgb
dec
xchg
loop
stos
add
sbbl
sbb
inc
lods
mov
sub
addr16
sbb
jmp
aaa
mov
push
jmp
mov
and
xor
or
stos
adc
enter
les
mov
mov
cs
mov
sbb
stos
and
or
int
fcompl
fldl
subl
mov
mov
shrb
cs
lret
rolb
cmp
stc
xchg
sub
xchg
into
fdivs
sub
mov
arpl
xchg
sbb
mov
dec
out
xor
icebp
xor
cwtl
adc
or
xor
test
add
repnz
stc
jnp
mov
mov
push
xor
push
push
mov
je
stos
inc
push
xchg
add
js
pusha
nop
pop
outsb
sti
jae
mov
cwtl
and
lret
mov
mov
imul
je
push
aam
js
ret
mov
push
jmp
jg
sbb
loop
stos
add
push
and
add
dec
in
inc
or
xchg
push
jns
jge
mov
or
mov
icebp
pop
mov
out
pop
push
mov
inc
adc
jb
or
test
in
xor
arpl
mov
fistpll
jb
inc
stos
add
fcomps
lret
add
loope
scas
bound
pop
mov
mov
rclb
jecxz
jmp
mov
mov
dec
or
loope
aas
icebp
stos
push
mov
test
dec
stos
test
jp
call
sbb
test
sbb
inc
pop
lods
js
loop
jle
aaa
fcmove
mov
lret
adc
in
jle
fs
mov
idiv
cmpsl
ljmp
out
push
pop
aam
sub
or
fisubs
pop
pop
iret
mov
fs
scas
jno
mov
aas
xor
mov
movsl
jnp
clc
pop
sbb
cmp
les
pop
sti
ds
in
imul
orb
insb
add
push
cltd
out
scas
mov
mov
decb
mov
sub
cs
pushf
jo
adcb
xchg
sbb
inc
pushf
test
jns
dec
nop
test
int
mov
mov
cmp
ret
mov
xor
cmp
sub
xchg
xlat
pop
and
shll
pop
addl
add
dec
lret
ret
xor
add
pop
sbb
mov
hlt
into
mov
and
pop
add
aam
std
out
cmpsl
popf
mov
mov
arpl
stos
aas
xchg
inc
lahf
fcoml
add
out
xor
enter
mov
movsb
xor
mov
mov
or
pop
lahf
shlb
mov
mov
mov
mov
jbe
aas
mov
cmp
dec
dec
ljmp
loope
mov
and
lcall
std
add
cmp
adcl
add
ret
mov
mov
cmp
pop
mov
mov
lods
ljmp
test
scas
inc
xchg
enter
xchg
dec
mov
popf
out
psrlq
push
push
subl
shll
xchg
addl
xchg
cmp
cmp
inc
or
mov
push
dec
sbb
lea
jmp
out
xchg
fcmovne
xchg
cmp
jno
loop
data16
pop
je
dec
jnp
pop
push
cmp
lret
cmp
in
mov
adcl
push
sbb
test
add
ffreep
std
fcoml
jmp
mov
or
out
mov
sub
sbb
jg
test
or
out
lock
add
out
mov
xlat
shrl
jae
neg
fiadds
xchg
les
les
dec
mov
fcomi
pusha
pop
insl
adc
ja
rcll
call
das
loope
and
out
js
and
aas
jle
inc
xchg
xorl
hlt
call
test
xor
je
lods
pusha
inc
in
mov
scas
mov
mov
dec
gs
shll
dec
jne
sub
xor
mov
add
pop
jg
scas
xchg
pop
cmp
pop
rcrl
xchg
jg
push
fwait
out
loopne,pt
mov
es
adc
mov
jge
cmp
dec
dec
je
jbe
add
add
pushf
sub
movsb
add
in
sub
sub
stc
and
and
sub
sub
mov
movsl
adc
ja
mov
mov
pushf
add
ret
and
ljmp
fistpll
xor
fiaddl
adc
mov
or
jge
sbb
pop
and
cmpsb
sub
loope
push
out
mov
sub
xor
or
imul
inc
cmc
sbb
mov
dec
inc
sub
mov
stos
les
adc
movsb
cmp
out
sub
xchg
rol
dec
leave
xchg
negl
out
es
cltd
test
test
sbb
das
orl
pushf
inc
jns
pop
aaa
mov
rolb
mov
mov
sarl
sub
pop
ds
addr16
mov
inc
mov
arpl
test
xchg
xchg
mov
int3
pop
mov
cli
fnop
out
or
aam
idivl
pop
xchg
shlb
add
push
xchg
and
sbb
push
mov
jns
push
fbstp
mov
stos
jge
dec
jle
fs
mov
push
shll
sub
aad
xchg
xchg
fnstcw
dec
and
lahf
push
push
andl
sbb
sub
cmc
and
fs
sub
repnz
int
pop
hlt
mov
cmp
push
outsl
fimuls
sbb
pop
jecxz
je
es
jl
push
mov
dec
push
push
gs
or
je
scas
ja
add
inc
adc
cwtl
in
push
jae
mov
mov
in
xor
fdivrl
and
mov
dec
scas
add
testb
lahf
in
add
xchg
sbb
push
nop
adc
xchg
shrl
outsb
test
lcall
pop
pop
jb
test
sub
mov
mov
fcomip
mov
sub
mull
iret
cwtl
cmpsl
adc
cmp
sbb
cli
sub
push
shll
mov
mov
stos
and
cmp
cwtl
push
xor
dec
pusha
and
dec
es
sbb
std
jecxz
imul
les
jns
push
ret
mov
jle
test
inc
sub
ffree
xor
inc
lcall
lods
lcall
xchg
xchg
mov
adc
pop
pop
pop
push
or
out
pop
inc
loopne
subb
mov
aaa
fisttps
xor
popa
push
pusha
in
in
outsl
sub
mov
dec
xlat
add
lret
sarl
sbb
jl
xchg
ror
repnz
xchg
dec
repz
ss
push
les
jns
fmul
and
jmp
sub
pushf
ret
lret
das
lods
clc
cmp
out
out
gs
cli
push
std
lods
lret
stos
dec
add
andl
jge
fimull
jae
mov
ss
loop
std
adc
add
cmp
cmpsb
mov
xchg
lahf
jo
add
inc
popf
in
mov
xor
into
sbb
cwtl
rep
mov
daa
add
sbb
mov
aas
sub
shl
ja
movsl
loop
loop
jno
ret
addb
adc
and
aas
jg
adc
dec
pop
sub
and
fstl
jbe
and
push
arpl
cli
jae
sbb
mov
push
arpl
iret
xchg
fsubrl
iret
cmc
lcall
add
js
pushf
sti
notl
and
xor
enter
neg
cli
adc
xchg
mov
daa
jp
loopne
sub
jp
pop
and
sti
mov
movsb
loop
pop
hlt
sub
xchg
fs
jp
cmpsl
sub
adc
dec
xchg
outsb
mov
dec
pop
rorl
int3
addr16
push
hlt
call
loope
pusha
or
int
add
xchg
adc
mov
jnp
ljmp
adc
icebp
lret
stos
sub
fistl
ficoms
aad
fnstcw
mov
cmp
cmp
mov
cmp
fcoml
inc
jae
test
lret
lret
xlat
scas
test
in
ficoms
lahf
adc
sub
jo
adc
aad
mov
xchg
jl
bnd
and
ret
add
dec
xchg
mov
lds
xor
int
dec
call
mov
adc
jbe
mov
imul
mov
mov
push
xchg
out
gs
sub
clc
and
outsl
in
out
xor
sub
sub
fimuls
gs
add
adc
push
rcrb
add
push
ret
sahf
dec
push
aad
cmc
push
subl
out
in
xor
add
popa
push
fstpl
daa
lock
imul
mov
stc
fiadds
imul
popf
mov
jno
outsb
mov
dec
aam
adc
mov
push
pop
imul
hlt
xor
loop
adc
lcall
outsb
testb
stos
hlt
rcrb
sub
push
hlt
pop
sbb
out
sub
hlt
push
pop
inc
popa
sbb
dec
aad
inc
shll
sub
jg
pop
out
jae
sub
dec
mov
and
push
inc
in
lret
add
jbe
imul
push
mov
cmp
lock
jecxz
outsl
mov
inc
pop
das
lret
fsubrl
dec
repnz
ss
scas
test
neg
cmp
in
adc
std
lods
cmpsb
outsb
inc
dec
sub
jno
pop
jp
or
rclb
or
sub
inc
daa
xchg
les
pop
lcall
pop
fucomi
dec
in
mov
lret
sub
and
movsb
rclb
subb
add
push
in
push
mov
popa
movsl
dec
hlt
mov
ljmp
gs
addr16
xchg
repnz
pop
sub
cmp
or
pop
jo
cmp
test
cmp
sub
push
scas
aam
or
xchg
dec
arpl
or
lea
cmpsl
sbb
dec
out
fisttpl
mov
adc
add
gs
inc
stos
adc
push
inc
xchg
stos
hlt
push
cli
enter
lcall
sub
js
cmp
lods
sub
adc
jg
loope
mov
xor
sbb
pop
out
fmuls
int
pusha
adc
sub
mov
orb
xchg
outsb
imul
movsl
inc
push
daa
mov
dec
testl
xchg
mov
push
fistpll
xchg
gs
movb
aas
jb
fwait
jo
jle
ljmp
inc
or
jle
mov
js
xchg
lock
popw
subl
es
xchg
xchg
mov
test
adc
push
push
aad
adc
in
test
add
out
movsl
adcl
sti
lds
pop
mov
and
push
cmc
test
xor
mov
das
sub
outsl
lods
or
fisubrs
or
jle
test
mov
sti
sbb
jecxz
movsb
pop
pushl
fidivs
push
ret
test
add
fidivl
inc
subb
jle,pt
ja
test
cmp
and
xchg
pop
dec
inc
mov
pop
clc
and
jo
inc
lret
jle
in
aaa
fsubl
push
mov
idiv
rep
jecxz,pn
int
xor
outsl
dec
mov
loope
movsb
repnz
pop
mov
xchg
cmp
mov
sbb
loopne
xlat
aam
fisttpl
jae
fisubs
mov
xchg
aas
cmp
xchg
jae
xchg
push
xchg
lds
pop
and
call
push
pop
lods
testl
das
lcall
mov
pop
call
pop
and
xor
mov
cs
xchg
inc
sbb
push
dec
rorb
pop
pop
fdivrl
mov
in
mov
mov
add
pop
cmp
sbb
js
cmp
cmp
dec
pop
and
mov
ljmp
test
mov
stc
fisttpl
out
inc
pushf
lret
sti
ret
ret
cmpsb
insl
xor
addr16
mov
fistps
icebp
mov
inc
push
or
in
xchg
mov
xchg
popa
add
fdivr
ljmp
iret
stc
sbb
ljmp
dec
and
mov
add
sbb
dec
cli
icebp
sub
sahf
fdivrl
jle
mov
pop
in
movsl
std
stc
icebp
inc
es
std
push
ljmp
push
lcall
push
dec
and
pop
jns
xchg
shll
or
mov
cmp
pop
xor
andb
int3
iret
jp
dec
pop
push
mov
mov
mov
shll
or
cmpsl
mov
test
enter
scas
pop
mov
sub
jle
cmp
je
mov
ds
push
sarl
pop
cmp
xchg
mov
inc
cmpsb
addr16
stos
jne
jl
sub
mov
sbb
xchg
bound
xchg
std
jnp
cmp
pop
icebp
add
ds
lock
and
cwtl
push
adc
jno
pop
mul
pop
xchg
out
jbe
push
inc
lods
sbb
das
icebp
jle
pusha
mov
mov
ljmp
movsl
stos
xchg
sub
sti
mov
or
fistps
push
arpl
cld
les
iret
outsb
in
cld
ds
jge
jmp
shrl
sbb
and
or
cmp
push
cmp
push
lods
mov
and
mov
divb
sub
es
sahf
lret
sbbb
adcb
imul
arpl
das
mov
aas
sub
pop
pushf
sbb
and
mov
adc
mov
insl
pop
dec
push
arpl
sahf
mov
jmp
daa
mov
cmovnp
mulps
repnz
sub
and
pop
mov
pop
lret
fwait
ret
adc
sarl
loopne
mov
pushf
imul
mov
and
jns
pop
fwait
aad
arpl
jb
int3
xchg
sar
sbb
xchg
mov
adc
sbb
cli
data16
aam
shll
and
lret
pushf
mov
ret
cltd
push
gs
lcall
pop
jecxz
loop
xchg
addr16
lcall
mov
push
mov
adc
sub
add
test
mov
dec
jo
test
insl
cmp
mov
roll
jp
mov
push
xchg
mov
orb
fiaddl
push
pop
insl
dec
sub
adc
repz
stos
outsb
xorb
mov
push
popf
xor
lea
and
cmp
or
out
or
stos
repz
fdivp
push
sbb
adc
int3
add
test
jge
mov
push
pop
popf
sbbl
shll
ljmp
add
xchg
jecxz
and
or
lock
jnp
xchg
movsb
mov
sub
pop
inc
jno
cmp
mov
add
sub
out
inc
mov
xchg
int
ljmp
xor
sub
jno
and
add
adc
mov
cwtl
jl
sarb
int3
sbb
and
arpl
test
leave
push
add
mov
push
lods
sbb
cltd
cmp
fs
or
iret
mov
cmp
sbb
add
mov
adc
lock
sub
pop
shlb
xor
jbe
mov
test
jmp
arpl
push
mov
dec
mov
pop
outsl
clc
jnp
mov
les
fcmovbe
mov
xor
sbb
std
jge
imull
in
lcall
cmp
int
hlt
push
sarl
mov
adc
push
loopne
outsl
imul
dec
pusha
lods
jb
cmp
scas
pop
mov
cmp
push
ja
mov
xchg
pop
cmc
dec
or
push
xor
cmpsb
inc
and
sub
data16
mov
ljmp
les
sbb
jmp
xchg
dec
outsl
je
pop
inc
mov
fsubs
shlb
bound
int
xchg
cmp
cmp
cwtl
les
jg
xlat
cmp
jae
dec
cmpsl
flds
lret
jmp
pop
movsb
repz
addl
shl
lods
pop
cs
mov
into
std
xor
je
pop
dec
sarl
inc
movsb
or
dec
jge
mov
sbbl
pushf
or
mov
daa
pop
and
sarl
adc
xor
stos
roll
jns
adc
cmp
and
xchg
mov
and
mov
mov
in
xchg
sub
imul
insb
cmp
divb
shll
push
cmp
andb
mov
jmp
fs
outsl
call
outsb
mov
adc
fsubp
xor
loopne
sub
out
lret
scas
orb
push
and
cmpsb
pop
dec
orb
in
call
test
loope
and
stos
mov
cmp
pop
and
cmp
or
jecxz
mov
fsts
mov
push
andb
push
stos
fcomps
mov
outsl
out
cwtl
cld
popf
add
cld
imul
arpl
inc
or
push
xor
mov
jl
cmp
out
add
lret
push
pop
fstpl
daa
mov
sti
dec
aas
push
lret
adc
jnp
or
pop
pop
pusha
mov
cltd
imul
insl
outsl
adc
lods
add
roll
int3
push
outsb
push
pop
mov
inc
icebp
bound
and
pop
xchg
jae
ffreep
add
rcr
scas
inc
cld
jp
repz
sbb
int3
ds
in
sahf
mov
mov
mov
xor
add
mov
pop
cmpsl
and
rorl
inc
sbb
daa
and
mov
push
leave
fwait
test
and
xchg
dec
mov
inc
and
gs
mov
inc
jg
mov
mov
loopne
pushf
dec
jns
icebp
fidivl
out
or
daa
fs
inc
ss
cmc
mov
call
sti
aaa
sbb
mov
mov
cmp
loope
int
pop
pop
adc
xchg
add
lret
or
push
jb
shll
xor
icebp
inc
negl
fucom
addr16
pop
loope
insl
insl
jo
sbb
mov
pop
dec
adc
in
xorb
mov
lock
mov
push
jp
stc
loopne
mov
xchg
jg
sbb
hlt
inc
addr16
cmp
ss
clc
in
cld
or
ret
addl
bndldx
mov
in
lret
pop
lret
adc
xchg
xchg
sbb
jp
or
pop
pop
arpl
push
mov
in
insl
lods
shlb
cmp
mov
inc
mov
mov
inc
cmp
sub
into
das
dec
mov
inc
cmp
iret
and
push
mov
add
adc
sub
dec
fcoms
repz
rcrb
repnz
push
stos
jbe
mov
pop
outsb
jl
xchg
ds
add
sti
daa
pop
xor
jg
fmul
movsl
and
xchg
cs
jno
push
cs
cld
ss
ret
mov
xchg
lcall
push
aam
dec
loope
rorb
iret
mov
movsb
and
and
push
out
xor
xor
inc
push
lds
imul
inc
inc
jbe
push
jg
adc
mov
aad
cli
jo
inc
ljmp
pop
dec
sub
shrb
lea
aad
clc
stc
stc
jne
adc
ljmp
push
mov
arpl
inc
push
flds
dec
stos
cmp
outsl
std
mov
adc
cwtl
iret
xor
ds
sub
inc
or
leave
sbb
mov
and
mov
jle
daa
decl
loop
cmc
add
push
inc
xchg
fistpll
dec
mov
and
jp
rcll
ss
inc
inc
mov
ja
sub
push
jbe
inc
test
sbb
loop
inc
sub
and
jge
inc
les
stos
int
ror
push
adc
dec
arpl
fists
icebp
fldt
shlb
lret
lcall
jne
jb
jbe
xchg
arpl
sub
sti
sub
insb
test
out
jb
xchg
and
mov
push
and
popa
mov
mov
rolb
repz
call
paddd
xchg
jle
shr
jmp
mov
test
and
imul
iret
in
sub
movsb
popa
jo
push
jo
jl
nop
cs
popf
lds
fistl
cwtl
sahf
xor
out
add
fisubs
jl
push
xchg
inc
ljmp
imul
scas
movsb
in
in
outsb
mov
in
adcb
cld
pop
fwait
jbe
out
and
mov
mov
mov
aas
insl
mov
dec
mov
inc
mov
mov
and
cmpsl
pop
out
repnz
mov
ret
imul
call
nop
mov
out
call
test
dec
push
test
je
xchg
test
int3
mov
jge
push
ds
cmc
xchg
adc
push
subl
xor
mov
cmp
mov
loope
cmc
sub
dec
pop
jo
adc
and
xor
push
xor
mov
mov
hlt
xor
rcrb
dec
aam
ja
mov
or
jle
es
cli
cltd
xor
cmp
mov
xchg
push
out
aad
dec
popf
lret
push
adc
ret
adc
mov
jmp
pop
inc
inc
push
jo
dec
rclb
inc
pusha
pop
dec
dec
into
mov
adc
stos
fwait
mov
repnz
inc
jno
pop
pop
leave
fwait
jb
mov
xor
fdivl
mov
sub
sub
xor
sub
add
xor
add
add
daa
mov
jge
cmc
lcall
fwait
arpl
daa
lcall
stc
dec
cmp
fdivrl
jl
loop
add
jmp
lods
sub
cmp
popf
imul
mov
scas
pop
test
test
xor
push
stos
push
jbe
psubd
mov
pushf
sbb
inc
xor
out
test
ret
push
jno
inc
xchg
lock
mov
add
shl
test
dec
mov
aam
out
adc
or
and
aam
cld
sub
jmp
jne
sbb
cmp
arpl
dec
fwait
push
mov
mov
or
fsubl
es
jl
mov
pop
mov
jp
jecxz
inc
mov
dec
pop
out
push
cmp
mov
lds
push
xor
sub
lea
pop
mov
jb
testl
faddp
or
inc
mov
jmp
jo
sub
cmp
movsb
testb
adc
mov
push
cwtl
movsl
cltd
dec
fbld
jecxz
mov
push
loopne
cmp
nop
or
push
or
cs
cmpsl
lahf
out
and
xchg
lahf
aad
lock
push
lods
xor
out
std
icebp
cld
xor
shrl
xor
and
scas
push
or
lcall
rorl
jg
mov
mov
xor
aad
mov
clc
pop
push
and
xchg
mov
repnz
jo
gs
addl
add
and
popf
adc
stos
lds
cmp
movsb
cmpl
sub
clc
dec
lods
cs
pop
add
xor
jnp
cmp
xchg
shrl
icebp
mov
inc
decl
mov
dec
mov
inc
rclb
jne
mov
mov
dec
dec
adc
test
push
lcall
dec
mov
cmp
push
xchg
mov
and
inc
adc
inc
inc
fs
jp
aas
iret
aas
in
jbe
std
pop
out
inc
lahf
jnp
fisttps
and
add
mov
xor
jg
adcb
loope
popf
rcrb
loop
mov
mov
xchg
jnp
jae
ljmp
leave
inc
sub
insl
mov
pmulhuw
in
rcr
xor
push
push
pop
shl
mov
sbb
test
jae
push
mov
sub
sbb
cmp
hlt
sahf
shrb
xchg
idivb
jge
xchg
pop
ret
pop
js
jns
sarl
sbb
lret
adc
je
inc
inc
test
push
xchg
jg
addb
xor
or
lock
sbb
add
jecxz
mov
repnz
lret
and
or
cwtl
mov
lret
test
bound
cmpsl
fmull
enter
je
pusha
or
pop
in
pop
mov
mov
cmp
pop
mov
js
int
je
add
mov
shrb
sbb
or
mov
int3
mov
sarl
cmp
mov
inc
jae
ss
sbb
jb
fxam
ret
cmp
adc
mov
ret
mov
xor
dec
scas
push
gs
dec
fs
popa
mov
subb
push
insb
sub
inc
aam
pop
ljmp
dec
lods
test
dec
sahf
push
shl
mov
or
xchg
insl
int3
pusha
dec
iret
xchg
and
scas
dec
iretw
add
leave
or
inc
dec
mov
inc
mov
push
dec
std
push
xchg
jl
add
jae
ret
sbb
loop
sahf
add
ds
aad
mov
dec
or
ficoml
cmp
jmp
mov
movsb
imul
pop
jo
pusha
call
jno
je
inc
sbb
adcl
repz
push
mov
or
shll
sub
out
mov
aas
je
xor
pop
in
inc
mov
cmp
loope
sti
aad
dec
iret
xchg
pop
mov
jo
lahf
stos
in
xchg
xor
test
xor
aas
out
sub
mov
fdivrl
dec
roll
cwtl
push
lock
stos
hlt
sub
shll
jecxz
xor
test
mov
pushf
mov
sub
repnz
adc
push
push
xchg
cwtl
mov
push
lret
mov
orl
jae
jns
insl
sarl
addr16
mov
test
out
xchg
sbb
imul
push
scas
imul
cmpl
jp
sbb
negb
xchg
cmp
inc
dec
sbb
nop
test
dec
mov
cmp
sbb
pusha
xchg
sub
lods
mov
out
xor
enter
jne
loopne
outsb
or
ror
rcrb
add
dec
xor
test
dec
shlb
ja
pop
mov
pusha
xor
int3
fildll
mov
idivb
push
aad
mov
mov
inc
pop
sub
repz
add
push
dec
lds
pop
aad
push
jmp
loope
enter
lret
rorl
cmc
leave
jae
xchg
in
ret
pop
out
xchg
adcb
push
js
rol
push
fsubs
pusha
xlat
xor
add
rclb
mov
mov
xchg
pushf
push
cmp
stos
rorb
leave
mov
sub
dec
cmp
dec
dec
bound
clc
adc
mov
ljmp
adc
inc
adc
mov
pop
xchg
add
loope
es
push
jle
pusha
add
xchg
push
dec
xor
in
push
adc
idivl
fcmovne
jecxz
sbb
ljmp
mov
sub
nop
fstpt
mov
std
cmpsb
mov
mul
test
pop
out
scas
aam
xchg
in
ljmp
cmp
jo
aam
std
push
shll
sub
pop
stos
mov
repnz
and
imul
adc
out
mov
xor
xchg
sub
xor
jp
fbstp
xor
adc
cwtl
mov
mov
pop
add
dec
adc
inc
and
orb
inc
xor
cmp
mov
dec
cmp
mov
fnstenv
in
popa
pop
xchg
fnstenv
mov
ficomps
cmpsw
in
sub
jns
clc
rcrb
stos
iret
ljmp
sub
in
dec
out
push
ret
int
sub
mov
fisttpll
ret
pop
fcomp
push
add
or
out
lods
lret
inc
lret
je
mov
movsb
xor
aas
ljmp
aaa
pop
dec
rclb
pop
sarl
pop
mov
mov
inc
out
cmp
xor
add
stos
lret
mov
std
cmp
pop
pop
rolb
cmp
fdivrs
jnp
xchg
adc
sub
pop
in
vmovupd
mov
je
mov
xor
enter
push
mov
push
dec
sub
sbb
jg
cmp
dec
xlat
rorb
in
dec
orl
popf
push
lea
in
and
or
pop
inc
pop
enter
inc
outsl
bswap
lea
stc
ret
mov
test
das
jg
sbb
mov
test
neg
xchg
and
data16
jb
or
loope
lods
imul
push
push
orl
sahf
or
ret
jno
adc
xchg
cmpsl
inc
push
ja
lods
cld
inc
cltd
adc
add
mov
inc
push
ret
add
dec
adc
rcrb
jecxz
mov
xchg
fcoml
pop
cs
repz
mov
cltd
xchg
cltd
dec
das
popf
mov
jecxz
std
and
daa
lods
fcoml
insl
xchg
daa
jae
inc
sti
pop
fildl
int3
cli
bound
inc
jp
or
add
mov
mov
and
test
addl
add
mov
mov
dec
roll
adc
rolb
pop
outsb
add
cmpsb
pop
fxch
push
fs
sahf
sahf
jecxz
repnz
mov
jl
inc
jle
cmp
outsb
jne
cltd
adc
mov
mov
push
leave
dec
fwait
xchg
lahf
sahf
stos
dec
xchg
jne
in
lcall
or
insb
icebp
out
fistpll
mov
dec
jno
mov
sub
fbld
test
inc
pop
pusha
imul
jle
mov
mov
aaa
cmp
addb
lea
std
mov
fistps
jmp
mov
xor
arpl
lret
xor
aaa
or
add
sub
cs
mov
es
or
mov
jmp
push
and
ds
cmp
inc
dec
jnp
sbb
mov
data16
fmuls
jle
add
or
dec
and
test
pop
push
jae
shlb
movsl
mov
push
jno
push
mov
dec
xchg
cli
scas
loop
mov
aas
movsb
cmpsb
shlb
cmp
inc
fnsave
fsubrs
push
dec
jns
fmuls
mov
push
stos
fiaddl
mov
movsl
jmp
loopne
call
jns
clc
cld
push
shll
movsl
push
xor
cmp
movl
adc
ljmp
cmp
cmp
adcl
pop
xchg
fstp
xchg
dec
daa
push
mov
stc
pop
jge
ret
scas
sub
and
mov
xor
cmp
xor
pushf
shll
into
call
fsubl
in
lods
pop
push
pushf
or
mov
lds
mov
sub
dec
into
and
cwtl
outsl
out
xchg
mov
jge
adc
xchg
or
jne
jne
sub
lods
jno
cli
pop
fs
lds
or
sbb
cmpsl
push
jnp
shrl
mov
inc
dec
jns
xor
push
sub
mov
mov
sub
jle
stos
sbb
push
inc
pop
je
pop
sub
xchg
sbb
add
push
lods
mov
loope
pop
je
or
and
addb
mov
stos
fsub
mov
sbb
xchg
push
clc
jle
mov
mov
pop
inc
sub
popl
outsl
jns
and
xchg
sbb
pushf
clc
in
mov
mov
scas
jmp
cmp
stos
sub
dec
in
dec
jmp
rcr
iret
mov
pop
add
xor
test
test
cmp
mov
mov
pop
push
adc
and
sbb
lret
sub
inc
push
outsb
pusha
fildl
bound
insb
sbb
aaa
sahf
push
imul
dec
push
pop
mov
subl
mov
enter
lret
daa
rclb
mov
es
pop
ret
and
mov
xchg
addb
es
incb
ds
xchg
ljmp
xor
xor
cltd
adc
xor
xor
dec
ficompl
stos
mov
ja
mov
je
sbbb
outsl
mov
xchg
dec
inc
gs
addb
popf
cmpsb
in
fistpll
jge
jl
jbe
lds
push
outsb
out
mov
pop
xchg
movsl
adc
das
pop
dec
mov
xchg
loope
sub
jge
mov
or
cmpsl
push
ljmp
sarb
out
ret
jg
inc
add
nop
cld
ss
dec
sbb
daa
fdivs
movsl
pop
mov
nop
mov
pop
fisubrl
inc
sub
jg
not
iret
jno
sub
je
jb
in
add
inc
push
jl
or
push
into
stc
adc
xchg
stos
icebp
enter
cmp
cs
addr16
lods
ficompl
lret
jns
cwtl
jno
iret
test
lret
notl
cmp
push
or
inc
lods
cmovnp
add
sub
ret
pop
stos
aas
cwtl
mov
lods
mov
cld
in
inc
sarl
inc
into
jb
add
jae
imul
lods
cmp
sbb
add
mov
dec
nop
or
lret
jae
pop
ja
int3
pop
ds
xchg
dec
jns
mov
or
push
das
subl
and
lahf
inc
lcall
je
shll
and
jno
mov
out
mov
push
inc
xchg
mov
mov
mov
sbb
outsb
mov
mov
pushl
out
dec
xor
adc
fdivrl
arpl
or
outsl
addr16
mul
stc
xchg
fwait
and
out
or
data16
pop
out
int
pop
out
or
xor
ret
out
add
sub
mov
adc
and
xchg
jmp
icebp
loope
mov
js
sbb
sub
out
xchg
lds
sub
adc
inc
rorl
push
dec
inc
inc
shlb
pop
adc
xchg
mov
gs
inc
dec
xchg
scas
movsb
decb
pop
shlb
mov
dec
jle
nop
cwtl
mov
clc
mov
in
incb
repz
jg
mov
pop
lods
repz
hlt
pop
pop
push
leave
add
xchg
sub
xchg
lock
cwtl
adc
outsb
je,pt
inc
stc
xorl
push
iret
enter
jae
pop
dec
fstsw
imul
mov
js
insl
push
fwait
jne
stc
in
lcallw
mov
mov
push
shrb
imul
nop
jno
es
insl
pop
adc
mov
jecxz
cltd
inc
xchg
out
push
insb
shr
cld
mov
or
popf
in
pop
or
or
int
xchg
pop
divb
cmp
pop
ljmp
ja
int3
in
sbb
outsl
addr16
lods
mov
imul
xchg
out
xlat
sbb
dec
or
mov
push
aas
xor
mov
lods
or
jnp
das
jp
stos
xchg
loope
ljmp
jae
mov
fildll
je
mov
loope
and
sahf
mov
dec
leave
and
mov
lods
or
gs
cmpb
or
jg
xchg
pusha
cli
xor
ja,pt
test
notb
add
or
movsl
addl
mov
dec
dec
fidivrl
fcmovb
sub
or
and
or
add
in
pop
sbbl
mov
shll
mov
dec
stc
andb
incl
mov
xchg
adc
and
jbe
or
ret
adc
sub
mov
test
xor
pop
fldl
incl
inc
push
mov
lahf
aam
mov
shr
addl
sbb
add
xor
in
inc
or
in
leave
idivb
shll
jnp
inc
adc
cwtl
jb
mov
jns
imul
mov
adc
out
pushf
push
jb
loopne
dec
inc
lock
loop
filds
insb
pop
pop
jbe
and
push
mov
in
jmp
stc
push
sub
xchg
aam
mov
test
push
movsl
fs
adc
aaa
xor
xchg
aam
test
xor
int3
lea
in
mov
loopne
stc
cmp
jae
shll
sub
jle
scas
jl
addl
int
fwait
xor
cmp
loope
ljmp
clc
cmp
repnz
add
in
out
loop
scas
lret
push
mov
push
lcall
xor
mov
outsl
pusha
insl
cmc
push
and
mov
mov
push
mov
fstpl
dec
mov
adc
jb
daa
stc
mov
xchg
lcall
dec
iret
xor
movsb
fimuls
lret
fdivrs
push
adc
imul
cli
test
into
jl
sub
hlt
sub
stos
pop
jae
jno
lret
or
jb
xchg
jecxz
test
pop
add
sar
into
inc
push
enter
aad
mov
outsl
cld
and
jb
idiv
mov
rcrl
insl
pop
push
sbb
inc
cmpsl
out
sbb
imul
sahf
inc
cmp
sbb
das
mov
xchg
cmc
int3
dec
repnz
cli
dec
mov
shll
clc
pop
fnsave
pop
push
push
and
js
aaa
fcmovne
fwait
push
dec
xchg
push
cli
dec
outsl
xor
fildl
jb,pt
inc
jl
sbb
cmpsl
push
sub
and
notl
inc
fstpt
addr16
lahf
xchg
stc
mov
rolb
push
inc
xor
inc
insb
out
add
shll
movsb
test
outsl
sahf
fimull
mov
out
dec
in
inc
push
je
inc
sarb
mov
insl
test
imul
xchg
add
jns
xlat
imul
shll
mov
push
fcoml
mov
lret
pop
fmuls
or
mov
xorb
rorb
call
ds
pop
cmp
sar
xlat
hlt
adc
pop
push
shl
daa
mov
sub
adc
cmp
mov
insb
orb
out
lods
testb
pop
inc
pop
mov
lock
jo
std
clc
pop
je
sub
insl
mov
test
sub
rol
test
bound
jns
lods
sbb
sahf
mov
inc
mov
cmp
pop
sub
mov
adcl
repz
stos
ja
xchg
movsl
test
inc
jmp
test
aaa
icebp
call
jecxz
push
mov
outsb
std
out
sub
push
repz
iret
push
lret
add
mov
cwtl
sbb
jl
xor
pop
popl
test
cmp
mov
inc
mov
xor
lea
mov
push
das
clc
and
outsl
sbb
mov
cwtl
or
loop
mov
lcall
cmc
pop
push
stos
cmpsl
dec
fistps
cld
or
in
xor
adc
sbb
fucom
setae
add
add
sbb
dec
xlat
js
inc
lahf
inc
stos
mov
rcrb
in
add
sub
pushf
xchg
cmp
push
aas
dec
xlat
addb
xor
test
jne
js
call
out
sahf
loop
lds
xchg
sub
sbb
daa
aas
push
rorl
mov
and
jb
scas
xlat
cmp
and
mov
pop
add
lea
out
icebp
push
cmp
or
cmp
sbb
mov
in
xchg
jne
jbe
cmpsl
xlat
jge
sub
lret
into
or
sbb
out
adc
fs
dec
cmp
and
push
jnp
or
mov
or
mov
cwtl
popa
aas
sbb
adc
icebp
and
mov
or
cmpsb
jae
pushf
sub
sbbb
mov
add
mov
or
or
xchg
or
dec
movsb
incb
sub
adcb
mov
pop
aaa
pop
dec
popa
fdiv
orb
jb
inc
mov
test
dec
mov
adcb
ja
lea
xor
jns
and
lcall
sahf
stc
cld
shl
test
cmp
mov
pop
push
in
jl
mov
dec
aas
pop
xor
insl
icebp
cmp
xor
jbe
pop
mov
test
jbe
cld
js
mov
jmp
imul
popa
and
ss
and
or
aas
or
addr16
sub
mov
rcll
les
ret
loopne
push
pusha
in
lcall
or
pop
js
or
jae
popf
sub
mov
gs
mov
adc
es
cmp
push
xor
jbe
iret
jl
jmp
imul
pop
cmp
loopne
pushf
mov
and
popa
cmc
test
or
pop
and
fistl
cmpsb
or
test
sbb
push
sub
add
dec
arpl
shl
and
mov
jne
mov
das
inc
inc
aad
xchg
sbb
loope
in
sub
incb
addl
lcall
jo
and
jecxz
stos
lahf
xchg
push
fimull
sbb
add
rcrb
adc
or
in
mov
adc
mov
dec
pop
cs
push
stc
cmp
test
xor
pop
mov
bound
mov
incb
sub
rclb
enter
test
icebp
test
mov
iret
sub
pushf
daa
outsb
test
sbbl
jbe
push
jno
outsb
loope
dec
cld
mov
push
clc
and
sti
outsl
jbe
mov
arpl
cmp
adc
adcl
xor
test
pop
or
jne
pushf
jo
dec
int
jbe
push
mov
jge
sahf
orl
mov
xor
pop
pop
call
sbbb
or
bound
cmpsb
loope
scas
cmpsl
cs
jecxz
rorb
cmp
mov
mov
sbb
insl
sub
lcall
pop
inc
jne
out
mov
mov
pop
jecxz
cs
out
mov
jmp
lcall
outsb
adc
or
pop
ljmp
push
arpl
cli
lahf
bound
js
ljmp
shll
add
xlat
pop
std
add
mov
push
jne
sbb
sahf
xor
lea
jg
les
cwtl
lds
mov
pop
fistl
push
xor
sub
cmp
ret
lds
cld
inc
push
or
stos
and
mov
mov
jo
test
jmp
nop
push
adc
imul
sbb
jo,pt
repnz
rcrl
dec
pop
add
ret
lret
dec
mov
pop
mov
pop
mov
sub
push
dec
imul
inc
pushl
xor
or
aam
stos
outsb
loop
add
push
add
xchg
mov
mov
fbld
loop
xor
inc
movsl
in
add
filds
pop
mov
jl
leave
test
mov
pop
xchg
pop
cwtl
loop
mov
pushf
push
xchg
aas
push
mov
mov
sub
cmp
shlb
mov
sub
fsubr
jg
lock
ret
imul
pop
push
pop
aam
rol
fs
scas
sub
stc
popa
xor
ljmp
in
jmp
push
pop
cmp
mov
lahf
xor
loopne
jg
xor
sar
imul
repz
repz
fcomps
or
shll
gs
rorb
stos
mov
lods
pop
sti
cmp
mov
lcall
pop
andb
mov
in
shll
push
mov
or
mov
loopne
xor
xor
loope
pop
shll
jmp
lahf
dec
dec
mov
inc
xor
mov
adc
pop
aas
in
add
outsl
hlt
fsubs
push
leave
pop
jmp
xchg
mov
mov
mov
stos
fsubrp
in
push
scas
sahf
push
push
adc
daa
movsb
jne
clc
inc
and
shrl
sbb
push
inc
shrl
into
sbb
ds
les
pusha
jle
movsb
cltd
ret
mov
jmp
cmp
outsl
jbe
pop
jl
cmp
pop
mov
repnz
adc
inc
lahf
sub
and
inc
lahf
xchg
push
dec
mov
mov
xchg
nop
sbb
std
jp
cmc
loopne
pop
jecxz
cmp
cmpsl
or
xchg
push
scas
cmc
popa
repnz
xor
xor
aam
push
loop
rorl
dec
xchg
stc
shl
jle
sub
jo
sbb
loopne
and
test
ret
ret
ljmp
adc
adc
cltd
mov
pop
cmp
jnp
ds
outsb
not
cmp
inc
inc
pusha
mov
ja
out
lea
out
xchg
ftst
fists
imul
and
int3
mov
mov
and
push
jmp
jo
pushf
jle
cmc
imul
lock
mov
and
fcom
cmp
test
sahf
or
imul
lock
jmp
mov
inc
fistl
jecxz
adc
or
mov
xchg
add
mov
iret
jae
movsl
icebp
outsb
jb
mov
xchg
out
sub
push
cli
dec
mov
test
inc
mov
jne
insb
cmp
outsl
sub
dec
sarb
cld
cltd
sbb
mov
sub
ret
mov
lock
daa
loop
pop
data16
mov
sub
sti
mov
jge
jge
arpl
mov
pop
ret
fiaddl
test
fs
fistpl
mov
pop
pushf
insl
test
or
stc
and
lds
sub
mov
add
cmp
add
push
ret
or
leave
adc
push
rorb
shll
xor
sbb
cmp
lock
push
das
lea
mov
out
cmp
mov
push
cmp
or
repz
aas
fsubl
sub
mov
sub
and
test
inc
add
push
jne
or
ficompl
or
test
es
jnp
or
inc
in
out
mov
push
or
sub
jo
jg
lock
mov
movsl
cwtl
ret
or
mov
clc
sti
std
shll
xchg
dec
xchg
mov
mov
popf
sahf
sbb
cmp
jmp
in
dec
push
roll
rcll
ljmp
js
icebp
xchg
push
xlat
out
rep
dec
std
xlat
fwait
loope
fdiv
lods
adc
hlt
int3
push
adc
cmp
sarb
or
cltd
cmc
test
xchg
out
pop
mov
xchg
xor
xchg
dec
lcall
shlb
clc
fdivr
xor
jnp
dec
mov
push
clc
aam
bound
push
inc
pop
lds
dec
cmpsl
adc
push
and
push
mov
rcll
or
idivl
negb
ret
loop
in
neg
lods
mov
xor
push
push
xchg
jmp
mov
fiadds
or
gs
mov
xchg
pop
and
bound
pop
scas
mov
leave
jo
div
mov
aad
fwait
cmp
shlb
dec
data16
imul
inc
mov
fistpll
packssdw
xor
pop
dec
mov
inc
stos
lahf
lcall
push
es
sub
xlat
fbld
loop
pop
fildl
or
jno
bound
movsl
icebp
sarl
mov
cld
cmp
hlt
xor
leave
or
mov
je
sahf
push
enter
mov
mov
loop
mov
inc
or
in
testb
push
push
push
loope
and
xchg
mov
leave
fsubr
mov
sahf
cmc
inc
insb
iret
mov
pop
loop
fisubs
addr16
loop
fdivs
adc
loope
cmp
cmpsl
mov
xchg
ds
inc
mov
mov
push
repnz
dec
lret
and
mov
xor
int3
dec
jns
push
xchg
loop
mov
add
cmp
mov
mov
dec
in
test
cmc
push
movsl
enter
xchg
or
pop
and
jbe
xchg
adc
mov
pop
in
jl
fldl
sub
das
mov
sbb
mov
test
std
inc
inc
mov
cmp
hlt
adc
push
adc
jge
fld
popa
and
pop
outsl
add
int3
cwtl
in
sbb
inc
or
xchg
pop
and
pop
and
add
sbb
mov
adc
push
and
push
ss
mov
pop
sbb
aam
stos
mov
dec
addr16
cmpsb
scas
and
lods
xchg
fldl
mov
bound
imul
adc
mov
ja
popf
cmpsb
shr
out
shrb
in
sub
pop
dec
or
andl
test
push
xchg
in
addr16
ljmp
adc
jb
inc
ror
mov
xchg
inc
fists
aam
xor
jns
xchg
ss
into
cwtl
popf
fisttpl
push
sub
daa
test
or
insl
xchg
cmp
cmp
sbb
xchg
mov
mov
out
test
imul
cmc
aas
push
addr16
loopne
xor
loope
add
pop
cmp
ds
mov
push
loop
mov
les
jmp
cmpsb
iret
jo
inc
and
adc
jbe
aam
loope
dec
cmp
push
pop
jae
xchg
adc
xor
mov
mov
je
ljmp
inc
in
xchg
or
sbb
dec
icebp
mov
shlb
fwait
inc
jnp
jbe
cmpsb
ja
push
aas
cmp
addb
mov
sbb
mov
fsubs
cmpsb
or
mov
cwtl
xor
sbb
inc
jo
imul
outsl
test
adc
les
subb
jae
mov
movsl
push
sti
leave
enter
fsts
jb
mov
and
or
lock
ret
inc
out
dec
push
xchg
inc
push
rcr
imul
sbbb
pusha
mov
stos
push
jns
mov
xchg
lret
out
xor
cs
lods
jno
lcall
fdivs
add
in
loop
or
sub
shll
dec
int3
out
push
add
cmc
adc
pushf
ret
jne
fcmovu
movsb
arpl
pop
pop
rcrl
rorl
cmpb
notl
mov
jns
dec
xchg
xchg
xor
add
out
xor
sub
mov
popl
out
sbb
lahf
jl
inc
xchg
xor
mov
in
arpl
sti
dec
repz
enter
pusha
arpl
inc
outsl
daa
sbb
adc
popa
mov
rolb
ljmp
sbb
cld
rol
dec
mov
and
mov
fwait
cmp
pushf
imul
push
sub
leave
inc
mov
or
fistpl
gs
sub
vmovupd
jecxz
push
imul
ret
xor
cmp
stc
mov
mov
jbe
js
movsb
sbb
cmp
xchg
xchg
adc
cmpsl
xor
xchg
lods
hlt
inc
mov
mov
or
cmp
mov
scas
rol
pusha
adc
insl
daa
rclb
je
sbbb
dec
dec
andb
push
ds
jns
dec
push
mov
pop
cmp
outsl
mov
data16
dec
add
fcmovnbe
mov
rcrl
das
xchg
mov
jmp
in
dec
sub
lods
mov
lds
mov
xor
fldt
xchg
push
leave
pop
mov
cmp
mov
outsl
stc
pop
mov
xchg
sub
push
xchg
jmp
fs
inc
adc
stos
outsb
ja
inc
fcmovbe
and
cmp
loop
or
repz
cmp
xor
sub
cmp
adc
stos
pop
mov
or
imul
mov
out
mov
push
clc
xchg
jno
in
and
pushf
jae
scas
jo
insl
xchg
mov
sbb
jecxz
jmp
add
shlb
add
xchg
add
mov
or
test
and
mov
push
popa
test
mov
inc
sarb
inc
jae
aas
dec
in
mov
inc
mov
mov
movsb
jb
into
imul
mov
mov
xchg
mov
cli
icebp
rorl
cltd
mov
hlt
cmp
xchg
fs
or
filds
testb
inc
mov
mov
ret
pop
mov
out
cwtl
ret
in
sub
mov
pushf
dec
ja
xchg
popf
mov
inc
xchg
popa
push
sub
sbb
xchg
push
lahf
adc
je
lret
fwait
mov
jnp
xchg
nop
in
icebp
adc
push
sub
mov
cmp
or
dec
adc
jne
icebp
dec
sbb
add
mov
xchg
mov
jge
lret
mov
push
xchg
or
and
sub
sub
xrelease
and
jecxz
xchg
mov
sbb
sbb
add
shlb
sbb
inc
hlt
adc
push
fisubrs
lahf
push
test
add
into
mov
ljmp
leave
adc
mov
cs
div
fincstp
push
mov
test
cli
mov
sahf
mov
and
jo
push
mov
sbb
movsb
out
icebp
push
push
mov
das
cmp
cmp
sbb
adc
rcr
lods
xchg
xchg
int3
push
rcrb
mov
shll
and
add
lea
sbb
fwait
ret
cli
jmp
loop
in
jne
mov
pop
cwtl
in
scas
nop
lods
sub
lret
xchg
xor
fs
shrl
pop
cli
gs
jmp
shll
add
lret
add
adc
mov
inc
stos
cmp
pusha
fistpll
loopne
mov
inc
retw
pop
xchg
pop
dec
push
and
add
or
rol
int
insl
push
daa
bound
push
sbbb
add
jae
xor
in
sub
jp
into
adc
fsubs
pop
mov
push
data16
shll
das
addr16
repz
mov
pop
mov
sub
scas
or
stos
dec
xchg
mov
jb
inc
dec
cmp
inc
mov
sub
pushf
ds
hlt
popa
enter
add
pop
mov
bound
push
dec
dec
sbb
pop
xchg
add
nop
xorb
out
jno
jg
xlat
jb
stos
cmpsb
dec
sub
xlat
js
xchg
pop
cmpsl
cmp
in
ret
or
outsl
adc
clc
xchg
fcmove
inc
jle
ljmp
shll
sbb
int3
cmp
jmp
sub
and
cli
roll
cmc
adcl
mov
or
xchg
test
cmpsb
sbb
js
dec
out
in
cltd
pop
popf
js
fwait
push
mov
jb
out
mov
jcxz
push
aad
enter
jmp
dec
movsl
imul
xchg
inc
mov
inc
jmp
xor
mov
addr16
in
jns
idiv
mov
mov
cmp
mov
into
dec
cmp
fsubrs
or
cmp
out
xlat
pop
gs
xchg
push
jmp
out
dec
div
fdivrl
mov
mov
inc
add
ja
sub
xor
mov
inc
sub
insl
mov
inc
das
xchg
out
call
xchg
js
and
dec
stos
sarl
clc
or
aam
pop
mov
jbe
dec
mov
push
test
enter
dec
cmpsb
paddusb
pcmpeqd
cmp
mov
repnz
jl
pop
sbb
repnz
dec
mov
xchg
dec
out
adc
adc
out
mov
pop
xor
test
sub
inc
sbb
sub
sub
mov
dec
outsl
ljmp
pop
sub
or
or
xchg
and
xchg
cltd
loop
test
ret
cwtl
das
iret
push
jp
lds
shl
mov
rcrl
loope
jmp
call
and
inc
jb
sub
jbe
and
je
jmp
enter
dec
adcb
das
inc
cmp
cmovno
pop
int3
ss
popf
movsb
push
push
dec
fiadds
into
clc
mov
insb
push
adc
jl
cmp
repnz
pop
mov
in
push
dec
xchg
push
dec
dec
or
test
push
xor
rcrb
jns
mov
sahf
daa
mov
ficoms
int
aad
add
arpl
rcl
mov
xor
sub
inc
lret
jle
rclb
sub
cmc
jo
in
pop
add
cwtl
das
test
push
in
mov
push
cld
or
cmc
fiadds
scas
or
sbb
insb
cmpsl
inc
mov
or
mov
gs
push
enter
push
xchg
jb
cmpsl
in
xor
mov
insb
jp
addb
std
dec
clc
outsb
or
repnz
mov
dec
ds
loopne
test
data16
cli
mov
pop
add
inc
enter
loope
sub
imul
add
arpl
and
imul
xor
stos
lods
pop
daa
mov
xchg
xchg
cmp
cld
mov
cmp
sub
push
cmpsl
and
pop
push
ja
cltd
cmpb
enter
fdivrs
mov
movl
test
jne
out
mov
mov
sbb
mov
pop
test
mov
imul
jb
mov
lods
xchg
pop
mov
popf
int3
sub
loope
movsb
jne
pxor
in
and
sbb
mov
fidivrs
xchg
jb
cltd
sbb
cmpsl
aad
fisubrl
mov
dec
jno
scas
in
pushf
cld
addl
daa
int
data16
and
ret
mov
sbb
sub
sub
mov
push
dec
cmpsl
mul
push
pop
gs
in
xor
fidivrl
push
lods
out
pop
mov
jbe
push
ja
lret
jne
mov
mov
push
insb
adc
jge
push
and
or
jbe
insl
sbb
out
and
cmp
dec
cmp
cmc
pushf
push
fbld
fists
inc
hlt
inc
testl
scas
sarl
hlt
sub
dec
mov
fsts
imul
cmp
outsb
or
ret
es
mov
sbb
data16
xor
jl
stos
inc
into
mov
jo
jno
pop
xor
push
jo
mov
pop
jo
fdivrs
fsubl
cmp
fwait
sub
push
movsb
sbb
pop
and
out
pop
xor
mov
adc
or
in
lret
fdivrs
cli
lods
jbe
jb
int3
mov
inc
bound
je
loope
lahf
bound
enter
dec
addr16
lret
pop
mov
fwait
scas
sbb
xchg
sbb
inc
inc
je
mov
pop
sub
or
sarb
sarl
push
xlat
push
push
mov
inc
cs
cmpsb
fsub
mov
xchg
incb
xchg
jne
push
std
push
mov
and
cmp
ljmp
and
int3
stos
fcompl
xor
mul
adc
loope
clc
and
push
sbb
aad
test
repz
fsubs
sub
mov
test
xchg
mov
inc
daa
xor
sub
hlt
mov
scas
in
push
in
xchg
enter
in
out
bound
add
je
mov
cltd
xor
and
push
in
or
sub
sub
mov
out
out
leave
dec
xchg
dec
jo
jmp
pop
jae
sbb
sbb
mov
xchg
dec
add
enter
cs
hlt
cld
ret
and
pop
inc
jnp
xchg
movsl
loop
mov
cmpsl
mov
add
in
or
in
aam
cmp
push
sub
addr16
mov
std
mov
lock
negl
lahf
sub
rol
mov
xor
add
xor
dec
xchg
aad
in
adc
shl
in
inc
inc
fbld
jns
mov
data16
int
mov
test
in
out
cmp
xlat
sbb
movsl
inc
and
lcall
jge
repz
pop
cmp
jge
xchg
pop
out
call
adc
fucom
stc
mov
sub
xor
subl
xchg
add
jns,pt
or
push
add
and
inc
cmp
pinsrw
or
out
or
jo
fimuls
test
add
pop
adc
push
xlat
jno
jbe
mov
lret
adc
mov
xor
or
mov
mov
xlat
testb
or
jno
int3
sub
out
mov
sub
lods
cmp
jns
and
mov
push
cmpsb
sbb
jbe
jo
xchg
jle
aam
hlt
ja
mov
pushf
sub
add
sbb
mov
push
out
das
ret
xor
scas
aas
lock
push
xchg
int
xor
add
add
and
fisubrs
outsb
andb
sbbl
into
adc
adc
and
sub
cmp
filds
mov
sti
inc
lret
adc
loopne
pushf
mov
imul
and
int3
pop
fisubl
xor
out
cli
fdivs
and
cmp
pop
sbb
imulb
movsb
dec
push
push
movsl
loopne
xchg
mov
hlt
daa
lahf
jnp
cmp
sbb
ds
ficoms
push
mov
inc
cmpsb
inc
loop
sbb
lret
xor
inc
dec
mov
jo
sub
pop
cs
xlat
push
mov
pop
rcr
cld
pop
leave
jge
push
xchg
or
pop
pop
dec
pop
dec
das
stos
sbb
inc
out
push
pushf
jo
push
inc
mov
pop
out
jp
sub
inc
sub
mov
jmp
stos
fdivrl
out
sbb
stc
or
pushf
inc
stos
pop
das
xchg
adc
ja
sub
dec
add
cmp
mov
sub
pop
cmp
sarl
xorb
mov
fstpl
cs
mov
out
out
pop
inc
sbbl
and
push
imul
cltd
add
push
pop
mov
fdivrs
data16
mov
lret
leave
mov
dec
test
std
mov
lret
es
iret
aam
and
push
xchg
cmc
fwait
out
cmpsb
jb
jle
xorl
iret
pop
sub
lods
out
inc
mov
lcall
mov
xchg
loop
cld
aas
das
and
addr16
mov
inc
and
loope
cmpsl
int3
orb
cmp
cmp
mov
add
add
cs
je
fisttpll
push
lret
loop
ljmp
mov
divl
xchg
aad
shll
pop
mov
push
lds
adc
int3
gs
icebp
sarb
jmp
pop
push
js
jl
imulb
inc
jle
call
jae
mov
push
dec
pop
jae
push
imul
xchg
fnstenv
jle
arpl
jmp
movsb
iret
aam
popf
into
lods
and
lds
fidivrs
and
pop
popa
ss
fistl
cld
add
jg
insb
jmp
sbb
std
and
xor
jnp
pop
mov
or
loop
loopne
pop
adc
outsl
ljmp
scas
xor
setp
xor
and
pop
stos
cmp
push
lahf
mov
fadds
rorl
mov
clts
dec
xor
icebp
jl
lods
loope
flds
mov
lahf
sub
or
pop
mov
mov
pop
cwtl
mov
inc
stc
xchg
lret
aaa
cwtl
in
fwait
lret
stos
test
push
das
leave
sub
inc
lret
jmp
or
cmpsb
jg
sbb
xor
arpl
js
or
jae
inc
ret
ja
jns
jo
sbb
insl
fsts
gs
sub
mov
mov
popa
cltd
dec
aam
sbb
pop
cli
pop
mov
jo
jo
push
int3
or
mov
mov
dec
xchg
sbb
and
popl
jae
shll
sbb
into
sub
pop
neg
xchg
orb
sbb
int3
and
jp
loope
lcall
pop
xor
fidivs
incl
sbb
add
imulb
pop
cmpsl
dec
sbb
pop
loopne
sub
adc
loop
stos
stos
fsts
sub
sub
mov
fcoml
leave
and
sbb
out
xchg
dec
add
add
mov
or
sub
push
cld
push
scas
pop
xchg
test
daa
scas
sub
lcall
fs
adc
call
mov
stos
icebp
shll
out
xchg
jo
jmp
es
je
mov
add
je
lcall
jne
fwait
and
and
das
ret
mov
inc
int3
sbb
push
jecxz
adc
dec
lcall
push
les
push
cmpb
and
out
imulb
cld
ss
popa
xchg
int
mov
mov
out
push
xchg
mov
mov
repz
movsl
inc
lret
dec
incl
js
pop
mov
into
repz
adc
or
sbb
jge
subb
je
pop
rcll
rcrb
add
ljmp
mov
dec
mov
cmp
pop
inc
fs
sbb
out
dec
insb
pop
mov
or
inc
mov
bound
movsl
mov
icebp
pop
jle
popf
mov
mov
imulb
lahf
dec
xchg
cmpsl
cmp
negl
mov
pop
out
xor
fisttps
mov
in
clc
sub
mov
inc
fisubrs
sbb
adcl
dec
mov
jns
lret
jp
pusha
lods
adc
push
mov
cs
push
fwait
dec
push
cmp
jg
ja
loop
sti
xchg
cmp
pop
roll
stos
cmp
adc
in
lret
mov
ret
fcomip
cmp
xchg
push
jmp
cmpsb
mov
jmp
push
inc
nop
xchg
sub
mov
cmp
rcr
cmp
int
out
fistps
or
and
call
cmp
mov
insl
shll
push
stc
dec
movsb
mov
pop
cmp
sub
rorb
push
aad
out
out
inc
mov
and
jbe
xorl
and
cmpsl
lcall
popl
clc
inc
dec
adc
and
cmp
push
loopne
jne
push
out
mov
or
lds
pminsw
mov
fcmovnb
scas
call
dec
dec
insb
jge
cmp
loope
shll
lret
mov
lret
jae
xchg
mov
sub
cmp
add
xchg
or
push
xlat
jne
stos
or
jno
outsb
jae
imul
pop
adc
mov
mov
icebp
ret
xor
pop
repz
and
test
add
pop
dec
inc
or
cmp
xor
push
xchg
xchg
repnz
mov
testb
in
xchg
lahf
movsl
dec
shll
xor
ret
jns
xchg
adc
and
sbb
push
faddl
sbb
cmp
imul
or
sbb
or
stos
ret
sbbl
mov
dec
mov
mov
mov
aad
xchg
push
int3
jmp
mov
fcmove
add
mov
push
sbb
ljmp
dec
ja
xor
das
cwtl
xor
ss
dec
jl
push
inc
test
add
das
pop
sub
add
mov
inc
lods
push
icebp
iret
mov
pop
leave
pop
je
cltd
hlt
inc
in
and
inc
pop
adc
addr16
mov
sub
cli
pushfw
add
xchg
jecxz
or
pop
in
xchg
push
das
inc
stos
mov
or
inc
icebp
sbb
jnp
or
inc
or
mov
je
punpckhwd
mov
and
lret
nop
add
test
out
loop
scas
aad
mov
icebp
cli
mov
les
mov
pop
xchg
repz
into
xchg
mov
mov
ret
cltd
xor
cltd
xchg
into
cs
mov
mov
mov
jbe
mov
xor
mov
mov
repz
push
add
push
clc
fiadds
aas
jbe
pop
nop
push
sbb
mov
sub
repz
xor
outsl
push
outsb
cmc
aam
fmull
hlt
cli
add
inc
fmulp
je
std
cmp
add
mov
sub
out
ja
sbb
cmp
xlat
bound
loopne
xor
mov
dec
movsl
setbe
popa
into
fmull
sbb
mov
mov
push
shl
fstps
fiaddl
fcompl
cmp
add
daa
mov
test
int3
xchg
fdivrl
out
mov
loop
mov
frstor
hlt
dec
std
insb
pop
aas
dec
xchg
lods
xchg
pop
sbb
sub
scas
xchg
ljmp
fdivr
xchg
js
adc
mov
lcall
mov
dec
ss
lods
cli
addr16
std
movsb
daa
sub
dec
fsubrl
cmp
cmp
ret
adc
jae
movsb
xchg
stos
cs
cld
sbb
or
add
sar
xlat
push
fsub
add
adc
add
or
out
rcrb
std
ss
cmp
leave
sub
fidivrl
cli
pop
cmp
loope
outsl
scas
jp
xchg
mov
push
in
call
std
push
outsl
leave
test
sbb
sbb
push
es
les
mov
imul
ds
pusha
push
test
mov
das
test
pop
mov
cmp
aas
int3
pop
push
leave
push
ds
movsl
mov
pop
and
ljmp
andb
inc
jno
packsswb
mov
sahf
inc
pushf
das
daa
mov
mov
push
lock
outsl
push
imul
outsl
aas
fbld
push
push
std
add
rolb
cmc
into
or
mov
pop
daa
test
arpl
add
mov
mov
test
xchg
call
enter
pop
mov
or
cltd
sbb
data16
push
int3
loope
add
push
cmp
jnp
aas
bnd
sub
es
scas
repz
mov
xchg
fcmovne
fsubrs
jle
nop
cmpsb
in
repnz
jnp
loopne
xlat
jae
xchg
push
out
repnz
lret
cmp
test
mov
xlat
push
addl
fwait
xor
movsb
adc
clc
or
adc
in
mov
mov
ja
out
pop
xorb
ljmp
icebp
aaa
js
int3
nop
test
ja
rclb
mov
addl
add
xor
mov
push
test
fsub
fxch
sub
movsb
pshufw
sbb
loop
sub
sarb
imul
jo
and
pop
xor
or
repz
sub
fadds
inc
or
pop
push
mov
js
push
scas
mov
and
out
in
out
mov
out
jbe
daa
mov
mov
stos
lcall
insl
sbb
push
outsl
cmp
push
or
adc
scas
rorl
sbb
fistpll
xor
jge
dec
jge
aad
xchg
cmp
sub
popf
push
dec
flds
dec
mov
jns
xchg
mov
mov
ljmp
fldenv
and
jb
xchg
inc
inc
ds
and
je
roll
lea
sahf
pop
insb
mov
pop
mov
cld
adc
mov
mov
int
push
pop
adc
cltd
pause
push
sarl
mov
daa
loop
fstpl
int
lret
add
sbb
cmp
pop
adc
repnz
and
xor
pushf
inc
loop
push
leave
or
sbb
push
dec
jb
and
lret
sub
test
xor
cmp
push
or
adcl
add
or
lods
repz
inc
dec
sub
push
sbb
aam
pop
or
scas
gs
cmp
lods
pop
jae
sbb
dec
cmp
sbb
xchg
faddl
mov
mov
es
arpl
mov
call
xor
rolb
dec
test
repz
cmc
mov
pop
jle
outsl
xchg
das
in
xchg
fisubrs
or
addr16
xchg
cmpsb
inc
push
jo
mov
lock
scas
mov
jle
fsubp
pop
shll
dec
pop
mov
scas
arpl
sahf
inc
jmp
enter
cmp
adc
cmpb
test
iret
sbb
ss
es
dec
push
jb
pop
adc
idivb
lock
rorl
out
testl
hlt
sub
push
aaa
jle
ljmp
xlat
dec
inc
mov
adc
jmp
test
cmp
mov
cmp
push
pop
sbb
adc
jae
or
push
call
fwait
aad
movsl
add
dec
sub
xchg
adc
xor
sbb
leave
sti
jecxz
cwtl
out
shrb
cli
imul
jg
fistpll
movsb
not
pop
sub
push
cltd
push
ret
and
lods
pop
xchg
ret
push
push
adc
lods
cmp
pop
pop
inc
sub
mov
ds
imul
mov
les
sarb
pop
add
enter
movsl
cld
mov
xchg
rorb
mov
int3
mov
aaa
fs
jo
mov
mov
mov
outsb
ljmp
repz
fwait
es
cld
fucomi
nop
dec
sbb
pop
push
sar
push
test
lods
popa
clc
lock
arpl
in
push
push
xchg
mov
pop
adc
into
pop
shl
aas
or
aad
div
orb
ret
cmp
mov
dec
inc
ret
adc
push
cmp
adc
inc
out
imul
fadds
outsb
add
sub
cmpsl
ret
or
testl
neg
jg
xchg
movsl
ljmp
fmull
and
xlat
sub
push
xchg
jb
and
sbb
repz
call
orl
lret
iret
jle
shlb
sub
mov
sbb
xor
inc
xchg
decb
enter
pusha
testl
rcll
xor
orl
push
popl
loope
sbb
sub
test
cltd
jp
add
jo
addr16
inc
pop
push
aaa
dec
xchg
mov
push
int3
sbb
dec
pop
sub
add
push
stos
cmpsb
cmp
mov
mov
outsb
aad
cwtl
fidivs
sub
mov
and
jb
mov
pop
cmpsl
and
sbb
sbb
pop
xor
ror
ja
pop
not
imul
xchg
and
ss
mov
jnp
pushf
movsl
inc
jae
pop
push
cwtl
and
jnp
loopne
jl
cltd
mov
and
add
cmc
mov
shll
jb
xchg
sbb
in
hlt
dec
into
xor
fadds
mov
adc
shrl
jecxz
lea
in
mov
rorb
dec
lock
cwtl
or
mov
add
inc
test
decl
imul
mov
mov
test
adc
xchg
xchg
push
fldcw
stos
enter
sahf
sbb
fwait
inc
sub
std
mov
xchg
test
jb
or
fildll
rcrb
add
mov
push
dec
js
cli
adc
inc
outsl
pop
mov
mov
jmp
cltd
mov
ror
mov
cwtl
add
inc
negb
sub
xchg
mov
inc
addr16
jecxz
clc
std
mov
stc
rcll
fidivl
cmp
push
cwtl
add
lock
push
scas
dec
xor
cld
mov
lea
das
push
cs
or
ja
add
push
mov
dec
xchg
sub
scas
mov
ret
test
add
dec
insl
push
fwait
xchg
dec
add
sub
into
stc
or
loope
dec
test
lea
sbb
pop
divl
and
jns
push
lahf
out
mov
push
loop
sub
sbb
sahf
shlb
sbbb
jbe
ds
xor
jb
cwtl
std
ret
fstps
mov
int
test
out
jae
nop
mov
popa
out
push
aas
pop
rcrb
call
popf
sbb
jecxz
push
xor
shlb
inc
jno
jb
push
and
sbbl
mov
pop
sahf
ret
push
out
aas
sub
and
xor
xlat
adcl
cmp
cmp
jb
rcll
jp
lret
or
popa
aad
dec
aad
inc
cmp
xor
jne
gs
sbb
inc
sti
fadds
jbe
sub
cmc
or
pop
add
cmc
ja
inc
fistpll
icebp
mov
data16
out
mov
mov
insb
mov
stc
mov
xor
les
loope
or
dec
lods
and
cmpsl
sbb
in
in
fnstenv
jne
repz
and
pop
add
push
inc
icebp
mov
das
ficomps
dec
push
lods
cmp
repnz
cmp
mov
ss
jo
movsl
push
add
and
fistpl
jbe
fidivrl
fs
cmpsb
fwait
imul
mov
outsl
out
imul
fdivs
cmp
ret
xor
cmpsb
subl
dec
jns
sub
jge
xchg
insl
test
pushf
in
jb
cltd
jecxz
aam
ret
mov
test
fcoms
ret
push
fidivrs
push
push
mov
sbb
shlb
dec
xor
test
inc
cmpsb
push
jne
mov
rcrb
and
scas
iret
add
push
add
sbb
test
loope
or
mov
repz
sbb
aam
aaa
movb
cmc
mov
lods
mov
mov
test
inc
or
push
enter
cmp
mov
hlt
out
xchg
sub
inc
push
cmpsl
loopne
test
add
dec
in
jg
stc
js
fnstenv
and
mov
sub
push
aam
mov
incl
addr16
sbb
sbb
or
xor
lcall
push
sub
scas
imul
fnsave
imul
stos
imul
negl
pop
imul
jns
scas
inc
xchg
mov
popf
mov
sbb
mov
outsb
push
scas
mov
fnstenv
arpl
in
cmp
ret
movsl
fisubrl
enter
jo
cmpsb
dec
push
adcl
and
fmull
outsl
int3
and
jo
lret
arpl
dec
add
mov
insl
outsb
add
pop
jo
test
xchg
sub
cli
xchg
cmp
shrl
or
xchg
fwait
cmp
lcall
adc
xchg
or
xchg
inc
test
mov
sub
dec
sti
popf
test
lea
or
mov
addr16
mov
dec
sub
jne
sub
or
cmp
and
cmp
lea
sarl
hlt
out
aas
movsl
push
iret
cmpsb
xchg
jecxz
pop
push
fbstp
add
icebp
lcall
rcrb
shr
cltd
inc
cmp
sub
pusha
mov
jmp
addr16
repz
repz
mov
sbb
fst
sub
dec
and
sub
adc
mov
inc
call
jecxz
jns
jecxz
mov
jno
dec
aam
ret
stos
inc
fucomip
push
mov
cld
push
sarl
das
addr16
clc
inc
mov
or
int3
out
add
xchg
adcb
push
dec
jae
and
ja
loop
ds
mov
push
dec
jno,pn
jecxz
mov
data16
aam
repnz
xorb
sub
cmc
inc
or
add
adc
lods
or
mov
sub
mov
mov
decl
push
dec
mov
cltd
cmp
and
test
sub
pop
ja
cmc
lods
dec
cmc
lcall
cwtl
aad
pusha
mov
lods
ret
ret
push
stos
addl
cmc
fs
gs
sahf
ficoml
sbb
lds
inc
fwait
jno
mov
mov
enter
fdiv
dec
test
insb
inc
sti
sbb
add
adc
mov
fnstsw
mov
pop
ficomps
cmp
push
ja
mov
push
cs
out
or
mov
lcall
mov
out
add
lret
sub
je
adc
aas
fdivrp
pop
pop
adc
pop
imul
cmpsb
adcl
xor
mov
test
sbb
testb
xchg
roll
call
push
mov
or
movsl
inc
lahf
ret
xchg
push
fisttpll
daa
leave
ss
mov
hlt
xchg
inc
jnp
push
or
in
mov
out
xchg
cld
data16
mov
mov
jnp
clc
dec
test
mov
ret
je
cmp
movsl
dec
in
jmp
sbb
sti
or
pop
je
lret
adc
dec
jp
dec
mov
lahf
xor
test
mov
aam
cmp
pop
arpl
lahf
sub
outsb
xchg
sahf
loopne
dec
scas
mov
mov
js
add
neg
cli
int3
mov
push
xchg
add
ss
fldl2t
sub
sbb
xor
pushf
jne
loop
out
xchg
lods
mov
jbe
mov
enter
cmp
or
stos
andl
repnz
push
aaa
push
in
fiadds
dec
aas
int3
inc
sbb
xor
pop
mov
xchg
jne
std
lock
push
fwait
pop
test
push
sti
aas
sub
js
mov
xor
repz
mov
movsb
loope
mov
inc
inc
add
jnp
jbe
dec
mov
outsl
popa
shr
inc
inc
and
dec
fidivs
sbb
iret
aaa
push
test
inc
add
mov
loopne
popf
inc
and
push
movb
xchg
mov
out
rcrl
jo
mov
aas
dec
out
add
jo
lret
aam
dec
dec
sub
xchg
add
je
xor
inc
mov
jnp
out
xor
stos
add
mov
pop
ds
inc
xchg
dec
jp
pop
rorb
mov
sub
cmp
and
fdivr
pushf
and
xlat
jns
dec
outsl
scas
sbb
inc
xchg
movsl
dec
js
push
test
jo
iret
cmp
add
daa
aas
andl
push
imul
iret
xor
cltd
stos
xor
xor
mov
out
addr16
push
jmp
sub
inc
pop
inc
pushf
jle
adc
mov
mov
mov
sub
push
push
push
adc
std
mov
mov
cmp
outsl
dec
movsl
sbb
addl
add
lret
or
sub
jo
pushf
repz
xor
fbstp
jmp
rclb
pop
fadds
pop
scas
lcall
and
inc
mov
or
mov
xor
frstor
and
xchg
rcl
cwtl
mov
jb
les
sbbb
or
xor
in
shrl
rorl
in
lods
cmp
jecxz
jo
fcmovu
or
in
jge
mov
xor
or
repz
xchg
notb
ret
pop
sbb
xchg
mov
sbb
pusha
push
or
lods
imul
dec
icebp
and
fldl
cmpsb
mov
sbb
or
inc
inc
sub
jge
cmpsl
pushw
push
pusha
addr16
testb
sub
cmp
stos
push
sub
mov
enter
sbb
push
push
repz
sarb
inc
dec
xor
add
pop
fisubrs
in
sarl
xor
mov
ret
fsubs
cltd
pop
mov
jns
adcl
clc
cmp
test
jns
sahf
and
cmp
cmc
mov
addr16
data16
rorl
cs
add
imul
pop
in
in
addr16
adc
sub
call
or
gs
je
mov
imul
mov
mov
push
and
mov
addr16
in
incl
ja
aad
adc
pusha
sti
in
add
inc
outsl
roll
xchg
sbb
notb
pop
movsb
ds
movsb
pop
fistl
adc
and
imul
push
push
xchg
clc
arpl
mov
lds
orb
das
aad
jecxz
loop
fisubl
or
inc
mov
xchg
mov
sti
aam
out
imul
lahf
and
stos
lds
add
cwtl
test
lods
gs
dec
xchg
lahf
xchg
lret
scas
test
mov
or
ljmp
dec
aas
pusha
das
dec
sbb
ss
arpl
sub
or
out
adc
add
sbb
js
pop
mov
int3
ja
mov
subl
xchg
call
int
iret
jne
test
mov
jmp
and
fcom
insl
pop
mov
fldcw
aas
popa
jne
lock
pop
cmp
lret
push
test
movsb
hlt
dec
stc
inc
mov
push
mov
inc
pop
scas
adcb
or
repnz
je,pt
cli
inc
adc
test
repz
out
mov
pop
push
xchg
and
ret
in
push
jmp
out
mov
mov
into
dec
or
scas
loopne
jle
mov
mov
xor
xor
test
add
mov
and
jo
or
xor
push
and
xchg
add
dec
push
sarb
call
outsl
ja
out
and
insb
add
icebp
push
mov
iret
sub
andl
xor
lret
pop
hlt
mov
in
loope
rorb
xchg
lock
test
sbb
cmp
popa
stos
fwait
jnp
flds
lahf
mov
inc
cltd
mov
mov
jle
dec
fdivr
insl
jae
int3
rolb
cmp
xor
in
iret
cli
not
testb
shll
push
add
inc
push
mov
xor
xor
gs
mov
iret
fbstp
shlb
mov
adc
push
xchg
sbb
and
aaa
pop
and
mov
dec
out
cmc
loop
mov
cmp
loopne
rep
bound
in
int3
sbb
inc
pop
sarb
or
sub
dec
aaa
in
test
jmp
sti
pop
fsubrs
dec
int
xor
adc
lcall
push
dec
mov
dec
pop
push
cmp
inc
in
fsubr
mov
push
mov
rol
in
popa
xrelease
stos
xor
jle
idivl
cmp
test
pop
sub
xorb
arpl
roll
cmp
insb
out
packsswb
ret
test
je
fsts
pop
jnp
ds
addr16
das
cmp
loope
fcompl
pop
repnz
inc
dec
or
roll
mov
js
dec
pop
xchg
or
jbe
js
adc
fwait
idivb
arpl
or
iret
cmp
mov
adc
xor
mov
addb
rorl
fcoml
sub
pusha
lahf
xchg
shlb
jmp
adc
sbb
ljmp
mov
inc
inc
paddb
outsb
dec
scas
scas
sbb
test
ja
call
lret
cmp
pusha
adc
hlt
scas
add
lea
popa
sti
push
fiadds
mov
in
mov
nop
mov
pop
mov
loop
sub
lret
pusha
push
in
jmp
sti
mov
mov
repnz
adc
xor
lahf
aaa
xor
dec
ret
cs
xor
mov
add
add
lods
aaa
jo
addb
iret
jno
push
cmp
sbb
push
jle
lods
stos
and
inc
adc
inc
xor
xchg
call
lahf
jns
and
mov
xchg
inc
loop
repz
jns
mov
aam
stc
xor
cld
xchg
fcomps
dec
and
mov
mov
jp
rol
stos
xor
test
repz
add
pop
pop
jecxz
pop
loope
xchg
mov
mov
add
in
imul
xor
pop
ljmp
jo
in
cli
mov
sahf
cmp
xlat
and
and
sbb
ljmp
jmp
mov
call
dec
outsl
inc
fmul
cmpsb
add
adc
mov
daa
cmp
xchg
mov
and
fwait
sub
je
xchg
jne
xchg
inc
pop
mov
mov
cmp
pop
pushf
iret
cltd
pushf
sub
imul
lret
test
sbb
add
sbb
addr16
imul
adc
stos
shll
rorb
jno
jo
insb
daa
cmpb
adc
inc
and
push
xor
or
sbb
mov
inc
sub
inc
mov
les
pop
out
ss
and
add
and
xor
sub
xorl
mov
icebp
fwait
stos
loopne
push
aas
pop
mov
lods
sub
outsl
repz
mov
call
cmp
jno
test
scas
daa
cld
frstor
dec
sbb
add
mov
fmul
cmpsl
js
in
ds
in
mov
int3
pop
sub
test
adc
xchg
pop
jl
fs
add
stos
mov
xchg
fstl
xchg
fst
rcll
popf
dec
js
and
rclb
push
stos
insb
scas
das
adcb
rclb
aad
dec
and
pop
jl
xchg
stos
imul
test
sti
out
cmp
dec
cmp
sub
xor
fimull
cwtl
pop
xor
cmpl
xchg
push
in
jge
xchg
jmp
rclb
inc
xchg
sub
push
into
int
and
fistpl
mov
xor
mov
adc
insl
les
mov
mov
sahf
es
out
aas
mov
adc
cltd
mov
cmp
gs
mov
dec
and
aas
or
mov
cmp
xchg
roll
cmc
inc
rcrl
decb
jno
jns
rcrb
lret
mov
testb
repnz
or
leave
imul
ljmp
out
loope
dec
imul
xchg
mov
inc
or
dec
sahf
mov
inc
rcrb
mov
jae
test
into
xchg
xor
cmp
test
mov
inc
lods
inc
xchg
adc
add
mov
push
jg
js
out
inc
adcb
sbb
jne
insl
add
push
lods
sahf
jns
add
inc
or
xor
jbe
push
mull
test
mov
out
loop
dec
push
cmc
and
or
pop
push
push
out
jb
clc
jbe
out
aas
cld
or
popf
jb
push
xor
es
inc
ss
jle
push
ret
jge
add
dec
lret
jno
or
mov
inc
cmp
sbb
jo
mov
push
add
mov
add
pusha
pop
push
mov
adc
cltd
hlt
sub
dec
mov
or
pushl
sarl
xor
les
pop
fiaddl
in
dec
dec
cwtl
cltd
or
mov
adc
mov
add
add
fs
mov
jbe
jge
pop
dec
test
daa
dec
lea
rol
sarl
push
mov
push
out
jp
mov
in
inc
xor
pop
xchg
pop
mov
inc
fcomps
cmpsb
sbb
sti
and
push
mov
push
je
push
dec
pop
jns
jp
sbb
frstor
popa
lcall
daa
test
cmp
cmp
push
and
mov
add
rcl
fwait
inc
xchg
mov
jne
aad
in
lds
sub
in
cmp
push
es
inc
jno
inc
pop
and
outsl
outsb
dec
dec
in
mov
sub
sub
out
mov
mov
add
push
inc
std
xor
std
mov
lods
push
cwtl
out
out
lods
mov
mov
dec
sub
inc
pop
cmpsl
xlat
jl
pop
ffreep
leave
dec
neg
ret
and
sub
inc
add
aas
sub
aas
sbb
fisubs
or
fistpll
mov
insb
cld
ja
out
repnz
dec
dec
or
adcl
xor
lret
cld
hlt
cmp
outsb
sahf
imul
sub
inc
pop
data16
out
jmp
mov
test
fdivs
xor
outsb
pusha
sbb
js
sbb
mov
jns
add
mov
xchg
mov
cwtl
aaa
into
mov
pusha
ljmp
dec
adc
stos
aaa
sarl
and
sub
dec
lock
jb
mov
pop
jle
lea
mov
mov
sub
jnp
dec
dec
add
sbb
lret
pop
cltd
inc
pushf
dec
mov
idivb
je
ds
in
lock
adc
ljmp
aad
sub
mov
out
add
jb
in
dec
stos
xor
fcmovnu
inc
popa
stos
shlb
mov
ret
test
inc
out
pop
iret
std
mov
jmp
addr16
hlt
movb
loopne
bound
popa
xchg
outsl
cmpsl
test
mov
ja
jns
dec
shl
fildll
sbb
in
mov
shrb
or
divl
push
sub
pop
cmpsl
push
sbb
lea
cs
sbb
lds
iret
pop
mov
and
mov
push
lods
lods
jmp
das
mov
pop
pop
scas
cmp
hlt
pop
jns
adc
lea
inc
and
outsl
mov
add
or
les
les
dec
inc
and
jle
repnz
xchg
add
mov
pop
es
cwtl
icebp
ljmp
jnp
fildl
mov
test
data16
inc
aam
ljmp
cmc
dec
and
test
add
jbe
adcl
movb
cltd
cmp
testb
mov
sub
push
xchg
cmp
xchg
xchg
lret
or
mov
in
in
fistpll
mov
clc
enter
dec
dec
add
jno
pop
and
sub
sub
ss
sysexit
mov
shrl
dec
sbb
mov
mov
mov
movsl
sbb
pop
sub
jle
push
mov
imul
mov
add
push
jmp
imul
push
dec
data16
jge
mov
inc
xchg
sub
lcall
push
in
xchg
enter
dec
dec
fcmovnbe
pop
sub
jae
dec
and
stos
sarb
shrl
or
incl
xchg
pushf
addl
mov
xchg
add
jae
sub
dec
das
mov
xchg
js
pop
mov
jle
inc
cmc
fwait
cmpsl
xor
xor
mov
mov
stos
mov
mov
pop
int3
neg
push
push
mov
jns
fadds
jecxz
std
jg
inc
jmp
cld
imul
sbb
movsb
add
or
jecxz
mov
xor
cld
xchg
aam
inc
push
pop
jnp
ret
pop
popf
ret
dec
data16
rclb
pop
lods
xchg
and
popa
jne
and
fisttpl
push
insb
inc
loope
jbe
pop
cltd
les
mov
addb
lods
and
pop
rorl
scas
lahf
lds
pop
clc
inc
push
mov
testl
pop
dec
sbb
adc
xchg
sbb
fs
iret
cs
out
ret
or
gs
cwtl
inc
sahf
pop
pop
jg
mov
outsl
jle
mov
mov
clc
xor
lret
test
push
jmp
imul
jecxz
iret
inc
pusha
adc
das
mov
mov
mov
sub
jecxz
rorb
ja
fiaddl
inc
jnp
hlt
ljmp
jl
cld
xchg
aaa
jecxz
shr
imul
dec
popf
add
add
sub
mov
stos
jns
cmp
mov
push
sub
imul
adc
popf
aam
cs
lods
lods
jle
popa
xorb
push
mov
xor
jns
ds
imul
pop
lock
lret
mov
mov
daa
js
int3
or
jmp
mov
les
pop
jbe
lods
push
adc
mov
hlt
and
test
push
pop
pop
iret
sbb
out
scas
repz
pop
scas
adc
or
movsl
shl
jecxz
mov
in
pop
mov
lock
mov
xchg
test
jno
lock
cmp
fwait
jle
xchg
imul
sbb
popf
push
xchg
mov
gs
pushf
mov
outsb
scas
xchg
inc
xchg
jmp
mov
hlt
mov
cld
mov
scas
loop
push
adc
negl
insb
pop
movsb
icebp
in
popf
add
adc
fisubrl
mov
or
adc
jmp
add
push
push
jp
push
and
dec
mov
adc
ficompl
add
call
sub
loop
sub
stc
adc
shlb
cltd
fiadds
insl
xor
mov
testb
scas
loop
xor
pop
in
and
pop
lds
pop
fildl
dec
mov
jl
push
lret
inc
adc
xor
andb
std
frstor
mov
lea
cmp
lret
or
imul
andb
and
dec
pop
xor
cmp
rcl
or
jnp
and
sahf
xor
in
rcll
or
cmpsl
jecxz
popf
inc
or
out
loop
pop
shll
jge
and
add
lcall
sub
ficoml
mov
nop
xchg
jnp
push
mov
and
out
andb
cli
addr16
pop
pop
lea
dec
js
mov
add
out
dec
xor
ficoms
cmp
ficoms
or
xchg
out
ljmp
push
jne
data16
ss
das
cs
cmpsb
push
push
cwtl
aas
inc
mov
inc
jnp
addr16
dec
into
pop
mov
lods
scas
repz
aam
scas
imul
adc
mov
mov
andb
mov
and
sbb
adc
pop
mov
xor
add
or
push
sti
adc
sti
pop
fs
out
pop
cltd
test
cmpb
pop
stc
jb
lods
sbb
lahf
nop
daa
mov
inc
jbe
movb
mov
leave
imul
or
shrl
dec
xchg
sti
sbb
test
lahf
jl
jnp
jae
dec
sbb
jmp
inc
test
mull
mov
mov
mov
add
pop
sbb
pop
lods
fldt
xchg
psadbw
lds
sbb
test
and
cwtl
sub
outsb
xlat
mov
aam
push
mov
push
adc
xor
int3
shll
aaa
idivl
cmpsl
xchg
and
repz
inc
sbb
xor
mov
stc
scas
and
pop
add
push
push
dec
pop
xchg
outsl
outsl
int3
xor
es
and
lret
sbb
xchg
pop
mov
inc
lods
bound
cld
ja
js
les
xchg
mov
sub
popa
mov
cli
pop
pop
mov
jp
cmpsb
divb
loop
push
sub
xor
aam
scas
js
mov
inc
mov
mov
aaa
sub
pop
lods
mov
dec
xchg
mov
lods
push
adc
dec
mov
pop
xorb
scas
push
pop
and
pop
jne
inc
mov
aad
flds
scas
insl
dec
xchg
out
dec
inc
fildll
in
imul
inc
fildll
xor
sbb
push
test
sbb
cwtl
mov
cli
xchg
inc
add
cmp
mov
mov
pop
push
and
jp
test
xor
sbb
roll
mov
rcrl
daa
in
lea
insl
ss
or
test
ljmp
call
and
ja
mov
adc
adc
mov
mov
gs
test
push
sub
xchg
mov
repz
cmp
cld
sbb
loope,pt
mov
inc
lods
and
mov
shrl
sub
call
les
mov
std
repz
test
inc
pop
mov
mov
call
mov
mov
adcb
out
imul
pop
inc
lahf
jmp
adc
lea
sahf
outsl
int3
jne
xchg
jb
iret
js
cmp
cmp
inc
jmp
cltd
pop
dec
add
and
pop
push
mov
sbb
stos
jge
stos
push
pushf
pop
lret
jge
jae
inc
popl
push
aas
fwait
lret
int3
sti
inc
dec
fildl
aaa
cwtl
jne
push
push
out
add
jns
inc
add
cmp
div
mov
cmp
fists
cmp
in
mov
jnp
adc
cmp
lods
mov
shrl
xchg
inc
sahf
lds
cmc
xor
rol
push
jnp
adc
int
sbb
call
jp
and
xchg
xchg
mov
lea
mov
les
push
loopne
mov
inc
jns
mov
cmp
xor
aaa
xor
iret
push
cmp
add
mov
ret
and
inc
aad
test
xor
pop
mov
icebp
sbb
movsl
xchg
lcall
lds
xor
data16
rcr
push
adc
cmp
fldenv
fcompl
fs
stc
in
mov
inc
stos
idivb
mov
xchg
loope
aas
cmpsl
test
cmp
mov
lods
push
fstpl
ret
add
adc
fildll
xor
jg
jb
dec
pop
out
add
push
mov
pop
lds
jmp
mov
mov
mov
in
dec
pop
add
dec
cmp
shll
mov
push
sbb
pop
repnz
lea
icebp
loopne
dec
mov
push
repz
adc
into
dec
adc
push
mov
jle
stc
in
jmp
mov
fcmovu
lods
icebp
push
popw
ds
xor
arpl
or
ret
sub
push
bound
inc
dec
mov
inc
xor
daa
lea
js
sahf
add
iret
lods
mov
jne
cmp
add
addl
ret
xchg
out
lds
mov
popa
push
xchg
lods
cmc
cmpsb
xor
sub
or
fmuls
xor
pop
and
les
or
inc
push
lret
push
push
add
fdiv
cwtl
stc
lahf
xchg
and
popf
imul
sub
fwait
jnp,pn
into
push
clc
mov
dec
popf
sbb
ss
sbb
mov
gs
jne
loope
repnz
fadds
xor
or
cpuid
sbb
jae
int3
cmp
xchg
leave
outsb
rol
mov
rcll
lahf
fldenv
inc
mov
loope
fsubs
or
hlt
xchg
mov
lret
push
test
ret
mov
pop
or
mov
ja
dec
jno
fistl
jne
pushf
pop
push
adc
int
mov
sbb
mov
gs
xchg
scas
xor
std
push
shrl
mov
sti
mov
push
push
dec
sbb
push
pop
push
mov
stos
rcrb
ljmp
jns
int
xor
jle
jp
loop
ret
jno
ja
xchg
mov
pop
add
sbb
dec
jb
jp
cwtl
sahf
xchg
pop
test
mov
scas
outsl
mov
outsb
loopne
push
jns
movsl
pop
orl
insb
roll
nop
pushf
sub
aas
cltd
push
leave
sarl
pop
into
push
inc
shrb
out
xor
xchg
or
mov
shr
jae
sub
test
push
cltd
lds
in
xor
or
dec
icebp
add
cltd
insb
xchg
insb
push
ja
fcmovnu
xorl
loope
jmp
test
jb
pop
lcall
sub
add
sbb
dec
lcall
xchg
das
bnd
push
into
inc
sbb
in
fcmovnb
inc
andl
mov
fcomip
jl
mov
jbe
fidivs
xor
outsb
mov
push
cmpsb
jmp
push
mov
xor
add
push
fisttpll
hlt
sbb
aam
jbe
addr16
or
pop
orl
cmp
das
movsb
enter
out
pop
fwait
shrl
loop
call
cld
jns
and
insb
xor
mov
fsts
jne
mov
aaa
add
sti
add
pop
dec
push
sub
movsl
xor
cmpsb
cltd
je
mov
xor
pop
push
in
cmp
dec
in
insl
xor
loopne
imul
outsb
fdivl
mov
push
mov
sbb
jnp
frstor
add
movsb
fnstenv
cmp
rorb
stos
sbb
dec
mov
jnp
nop
stc
inc
test
outsl
arpl
add
cmc
enter
sti
sbb
mov
xchg
lods
iret
jge
loop
pop
lcall
or
adcb
daa
pop
shrb
gs
loop
xor
fldt
in
mov
dec
jle
fcmovne
mov
push
add
jmp
push
idiv
imulb
mov
or
jl
jmp
fs
mov
add
jle
lock
scas
fdivrs
or
data16
mov
push
and
andl
out
out
pop
insl
icebp
pop
inc
cmp
xchg
rcl
mov
dec
and
cs
or
test
ds
bound
and
int
fcmovne
adcb
incb
mov
mov
icebp
xchg
test
jp
lds
mov
stos
sub
push
das
daa
push
push
fmuls
add
sahf
mov
sbbb
in
mov
push
pop
add
aad
dec
aad
stc
fstp
or
bswap
ss
scas
shr
jmp
pop
dec
mov
cmp
test
scas
mov
sahf
testl
iret
out
adc
ret
js
pop
aad
mov
pushf
jno
jg
push
jbe
add
mov
inc
movsl
das
sar
jne
mov
jno
dec
movsb
jle
stc
or
std
idivl
xchg
stos
cmp
adc
popf
sbbl
clc
sub
or
push
mov
add
dec
sub
addr16
fcomps
hlt
ds
les
cltd
shll
adc
test
jmp
je
lds
je
and
cmc
gs
je
rorl
popf
mov
cld
add
xor
orl
lods
cli
push
test
pop
mov
push
add
sahf
push
add
loope
mov
outsl
cld
or
loopne
mov
imul
adc
xchg
xor
mov
sahf
dec
and
or
movsl
popf
stos
jae
lods
inc
pusha
pop
into
shll
adc
stc
jge
fstpt
push
insb
enter
or
or
adc
add
loop
adc
xor
in
stc
call
ret
ret
jl
sbb
adc
cmp
push
fs
mov
sbb
or
jne
pushf
dec
cmp
std
jo
dec
xor
shll
mov
out
or
and
loop
push
inc
dec
sub
lret
jg
pop
push
and
rcr
pop
out
jnp
cmovne
and
daa
jp
mov
jnp
inc
adc
mov
mov
in
aas
mov
mov
dec
fstpt
into
mov
stos
pop
inc
xor
test
sub
scas
and
xchg
cmp
lret
out
add
xchg
inc
mov
xor
in
outsl
push
mov
cld
push
sar
and
sub
xor
ret
lret
es
sub
xor
adc
imul
fildll
xchg
jle
aaa
jne
cmpsl
popa
fwait
pop
std
xchg
add
test
inc
pop
lods
mov
ljmp
out
or
popa
adc
push
lret
cmp
mov
cmp
repnz
and
outsb
pop
pop
sub
imul
aas
xor
xchg
movb
or
insl
sub
mov
nop
int
pop
pop
jbe
mov
out
bound
fimull
shl
adc
mov
test
xor
test
jg
jg
hlt
jmp
xchg
mov
inc
mov
dec
aas
mov
in
es
mov
aam
inc
orl
iret
out
push
aaa
jp
mov
insb
cmpsl
mov
into
fwait
in
inc
dec
lods
push
fidivl
adc
xlat
or
inc
and
lds
inc
inc
xchg
and
aam
in
inc
testl
and
rclb
aas
mov
cli
insl
mov
lahf
addr16
mov
cld
add
pop
fidivrs
rclb
mov
mov
mov
arpl
cs
es
inc
cld
inc
loope
aam
push
pop
push
in
or
stc
or
repnz
adc
shld
mov
test
mov
mov
sbb
lahf
addr16
or
mov
out
scas
push
scas
cmpb
xchg
and
fcomi
test
into
and
push
cmc
fcompl
call
iretw
test
dec
or
sub
push
test
cmp
mov
lods
cltd
das
push
fmul
or
and
push
lea
mov
add
mov
or
aaa
cld
mov
je
mov
xor
test
dec
les
test
stos
push
jmp
cmovle
hlt
daa
ss
aas
mov
ds
xchg
cmp
lret
dec
push
mov
adc
adc
push
jns
movsb
inc
xor
mov
jnp
sbb
xchg
fldcw
xorb
movsb
into
in
mov
addr16
sbb
inc
jbe
aam
lea
jno
pop
stc
push
lods
add
jbe
repz
lret
sbbl
test
out
movsl
sbb
mov
andb
xor
inc
add
call
insl
scas
xchg
call
xor
mov
sub
cld
push
adc
int3
dec
inc
xchg
popf
push
gs
pop
icebp
mov
lahf
es
mov
xchg
pop
push
adc
cmpsb
lock
xchg
scas
mov
xor
pusha
cli
call
iret
ds
push
nop
jp
lods
and
mov
mov
jle
cld
adc
test
repnz
and
push
cmp
sarb
cmpsb
test
push
insb
mov
dec
je
imul
or
pushf
jbe
fisttps
xchg
push
lock
out
fdivrp
sbb
add
rorb
mov
inc
xor
sbb
or
dec
mov
test
cmpsl
cmp
test
cmpsl
mov
adc
inc
out
cld
cmpb
test
loopne
cli
dec
in
cmc
mov
add
ja
mov
popf
xor
xchg
loop
mov
xor
add
js
mov
sub
ret
in
cmp
js
mov
inc
lea
xchg
push
cmp
cld
stc
aam
sti
xchg
cltd
fwait
arpl
rolb
cmpsl
sbb
push
and
repnz
in
mov
leave
push
xchg
lock
aaa
jge
pop
or
fistpll
addr16
cltd
sbb
pop
dec
pop
adcb
inc
gs
shlb
jno
into
insb
stc
jge
push
data16
and
or
dec
pusha
lea
fistps
mov
mov
xchg
fldt
adc
push
mov
aaa
add
cld
and
insl
cmpsb
sbb
sbb
jle
div
aaa
cmpsl
adc
and
push
xchg
dec
inc
pusha
lds
fistps
in
mov
xchg
std
incl
test
mov
xchg
sbb
adc
sub
testl
and
enter
lahf
pop
pusha
sbb
adc
test
lods
imul
jp
add
mov
popl
add
leave
xchg
jl
jno
fbld
sub
cmc
xor
jo
addr16
dec
incb
jmp
ja
and
dec
fcomi
jns
lcall
adc
aad
jb
jno
push
aaa
icebp
add
dec
dec
in
pop
mov
pop
sbb
andl
mov
pop
and
jns
xor
sub
push
sti
rep
sarb
jae
pusha
sbb
movsb
push
cmc
loop
cmp
mov
into
icebp
inc
imul
insl
int3
test
mov
dec
push
lock
xchg
sahf
out
aaa
mov
and
push
pushf
imul
fstl
es
cmp
lcall
cmp
loope
pop
cld
mov
fsubrl
pop
cmpsb
sub
or
fsin
push
push
cmp
and
sub
dec
lret
in
rcll
sub
lock
cli
aam
mov
call
repz
idivb
cwtl
mov
dec
cltd
mov
cmpl
bound
in
mov
dec
les
and
pop
aaa
mov
popa
and
cmp
cltd
mov
cmp
pushf
adc
test
and
popa
pop
idivl
xorl
mov
je
adc
sarl
lods
add
enter
mov
sub
and
xor
lcall
sbb
mov
mov
xor
sbb
icebp
dec
pop
add
xor
push
jl
cmp
sbb
into
adc
inc
mov
loopne
das
adc
test
mov
movsb
jae
adc
push
es
adc
mov
lret
mov
or
popa
out
cmp
adc
mov
dec
cmp
xchg
fsubp
jmp
pusha
mov
mov
push
fcmove
sub
add
push
jecxz
rcll
loopne
in
and
pop
insb
cli
mov
inc
xchg
mov
ss
loopne
push
repnz
daa
pop
repz
xor
aas
arpl
xchg
fcmovnu
add
dec
fwait
pop
jns
popa
add
xor
cmp
hlt
push
popa
and
jmp
mov
outsb
jnp
mov
mov
fisttpll
mov
xchg
fbstp
push
mov
mov
or
mov
inc
inc
lods
inc
sbb
outsb
outsl
into
imulb
pop
sbbl
pop
dec
push
mov
jae
adc
xor
andb
popf
outsl
faddl
mov
mov
jecxz
lahf
ss
adcl
lods
xor
pop
inc
sub
pop
out
in
outsl
mov
pop
les
js
mov
pop
push
ret
mov
rcl
shlb
outsl
jl
idivb
bound
outsl
add
mov
push
mov
xor
cmpsl
push
mov
nop
adc
and
fs
arpl
cwtl
data16
fwait
ret
mov
inc
and
dec
imul
sar
add
inc
ffreep
outsl
cltd
add
stos
sbb
orl
xchg
std
cbtw
fldt
sbbb
scas
dec
mov
adc
jo
cmp
ds
dec
ss
test
lea
ljmp
leave
push
popa
sbb
pop
push
sti
cltd
test
scas
out
into
jno
jnp
sub
dec
xchg
scas
mov
cmp
mov
inc
shll
or
cwtl
out
subb
push
inc
popa
jnp
adc
cmc
sbb
clc
fnstcw
icebp
mov
cmp
mov
sub
jno
out
jnp
push
and
jle
xchg
cmovl
hlt
jecxz
or
addr16
and
fists
or
and
fwait
movsb
inc
or
aaa
out
dec
cmpsb
mov
ss
sub
xor
inc
xor
add
es
lahf
push
rcrl
testb
pop
mov
das
jecxz
shll
in
pop
enter
xchg
mov
and
fdivl
jmp
mov
sbb
sbb
ds
mov
lds
fsubl
mov
popf
out
push
movsl
and
jmp
es
fmuls
mov
in
fisttps
push
cmpsl
lahf
sbb
push
xchg
aad
sbb
insb
sahf
add
fwait
movsl
inc
xchg
cmpsb
repnz
cltd
xchg
fisubl
xchg
insb
mov
xor
test
and
and
gs
movsl
mov
cmpl
cmp
and
pop
or
mov
inc
cmpsl
mov
pop
jnp
inc
xchg
lret
inc
cmp
jle
adc
hlt
cmpsl
push
in
inc
mov
sub
das
mov
ror
jecxz
test
sub
sti
jmp
mov
mov
nop
fs
dec
inc
mov
mov
lods
and
or
jne
daa
mov
dec
sbb
cs
adc
out
inc
aas
stc
dec
dec
aaa
stos
cwtl
test
jge
dec
stc
and
lods
insb
lea
mov
mov
cwtl
mov
jno
gs
inc
lock
icebp
call
sub
rcr
add
xor
xchg
inc
xor
sbb
aam
popf
inc
cmp
nop
rcl
aas
xor
mov
ret
sbb
adc
xchg
cmp
repz
add
mov
push
enter
mov
test
sub
arpl
cltd
mov
enter
add
arpl
pusha
mov
divl
adc
push
fsubp
pop
mov
and
xchg
test
add
sub
mov
cmp
push
or
add
clc
sub
imul
je
inc
int3
mov
fbstp
in
loopne
sbb
pop
mov
clc
cwtl
inc
loope
mov
xlat
mov
dec
dec
ja
jno
test
push
popa
jmp
pusha
adc
and
js
mov
mov
lea
mov
popf
and
les
cmp
cmpsl
xchg
xor
mov
in
sub
ret
hlt
fisubrs
push
testb
ret
loop
adc
mov
jns
xorb
mov
fimuls
adc
loopne
jb
or
and
lret
lea
flds
mov
cmp
leave
popf
xor
pop
enter
incl
icebp
std
inc
out
and
or
sbb
cmp
mov
inc
loop
imul
int
xchg
std
lret
sbb
sbbb
lcall
sub
and
lret
pop
push
or
jo
or
cmp
popa
xlat
call
shll
cmp
sub
clc
or
nop
insb
xchg
xor
inc
push
add
iret
dec
sbb
sbb
and
push
addr16
inc
scas
mov
adc
clc
push
das
insl
dec
pop
and
scas
inc
lahf
insl
das
inc
pop
and
out
mov
jle
add
lcall
scas
jp
xor
xchg
pop
lock
push
mov
orl
mov
or
fldcw
aas
sbbl
clc
outsb
mov
fidivrs
push
enter
adc
mov
stos
add
cmpsb
jae
fdiv
lea
mov
mov
xchg
and
ret
leave
inc
dec
jns
ljmp
xor
mov
jmp
es
test
lods
repz
shll
pushf
into
repz
hlt
add
dec
dec
clc
dec
pop
cwtl
scas
cmp
push
pop
add
mov
aas
cmpl
add
dec
rcrb
sub
mov
mov
inc
cwtl
push
cmc
xor
lods
push
bswap
xor
push
sub
daa
sub
xor
cmp
jae
nop
out
pop
jp
mov
test
add
gs
nop
movsb
push
mov
cmp
shlb
push
cli
es
stos
imul
les
xchg
mov
scas
xchg
test
cwtl
test
push
jecxz
shll
xchg
dec
fists
adc
dec
movsl
lahf
call
dec
std
mov
xchg
push
xchg
stos
popa
xchg
cmp
push
leave
mov
push
mov
lret
jmp
xor
ljmp
imul
mov
mov
mov
mov
lods
mov
insb
sbb
mov
bound
mov
mov
int3
push
dec
pop
in
mov
adc
mov
mov
mov
jge
sbb
dec
mov
and
cmp
scas
mov
int3
data16
dec
loop
sbb
mov
fchs
push
jns
add
push
fld
mov
inc
jns
xchg
xor
sbb
xchg
sbb
mov
and
out
push
xor
nop
sbb
int
ss
ljmp
outsb
add
dec
scas
popf
fs
cmpsb
xor
mov
lahf
push
idivb
repz
sar
std
invd
fisubl
and
xor
and
xchg
push
pop
dec
or
mov
jno
pop
jnp
lods
loop
cld
mov
fmuls
inc
jne
or
mov
jb
mov
or
out
int3
movsl
int
iret
roll
jp
les
mov
imul
jecxz
and
pop
push
cmp
cmpsl
jl
cmc
and
jb
xor
jmp
aad
enter
and
sub
sarb
mov
sysret
repz
xor
mov
mov
mov
dec
fwait
pop
mull
outsb
icebp
notl
fdivrl
dec
sbb
xchg
pop
cmp
ds
inc
scas
cld
xchg
lock
sbb
sti
mov
push
pushf
lods
push
jo
jo
push
push
pop
out
jmp
leave
cmpsl
es
and
jns
das
mov
iret
dec
test
cmp
adc
or
leave
into
push
dec
sbb
mov
mov
out
fs
cli
pop
into
addb
cmp
xor
mov
sub
rcrl
dec
ds
fbld
xor
mov
fcomps
adc
pop
fistl
pushl
pop
scas
sub
rcl
jmp
imul
push
pusha
push
mov
xor
das
mov
inc
cmp
sub
sbbl
xchg
pop
fdivrl
cltd
xor
addl
fcmovne
ja
mov
enter
into
add
in
push
rolb
test
mov
add
out
dec
scas
test
test
dec
mov
rol
loop
jmp
mov
cmp
mov
lahf
shll
cmp
hlt
and
lret
jle
mov
in
punpckhbw
mov
and
dec
inc
rclb
loope
in
mov
adc
mov
cmc
jnp
loopne
mov
icebp
pop
in
dec
and
jmp
arpl
jg
and
inc
inc
dec
incb
jae
add
xor
scas
or
ljmp
add
pop
dec
gs
sbb
jl
cmpsb
out
push
dec
lds
mov
adc
dec
fs
popf
mov
sbb
ds
in
lods
pusha
sbb
roll
pop
aad
mov
fdivs
dec
jb
es
mov
push
xor
mov
push
add
sub
arpl
insb
xor
pop
orl
in
dec
mov
xchg
xchg
aas
adc
push
inc
and
loopne
xchg
pop
sbb
jecxz
mov
cmp
push
shll
mov
sub
cmp
mov
daa
inc
mov
icebp
mov
int
fbstp
popf
pop
imul
inc
or
push
pop
ja
mov
lock
bound
test
xchg
or
mov
sub
imul
data16
sbb
mov
arpl
jb
js
in
sub
sub
xchg
fdivrs
jecxz
adc
fidivl
int
jns
insb
fsubrs
adc
xchg
imul
mov
hlt
xor
mov
sbb
int3
cmp
xchg
jmp
pusha
cmp
addr16
jb
nop
rorl
ret
test
add
shlb
push
jp
add
inc
sbb
ds
shl
cmpsl
mov
mov
xchg
push
mov
pop
xor
hlt
jns
mov
and
sbb
popl
sahf
mov
xchg
xchg
cmp
push
lods
popf
push
cmc
scas
sarb
mov
cmp
add
sahf
roll
inc
inc
jmp
push
repnz
sbb
sub
add
in
pop
insb
add
add
repnz
aaa
test
xor
push
and
xchg
add
mov
or
pop
and
lahf
or
loopne
test
mov
push
lods
decb
and
push
jl
xchg
insb
jno
sti
stos
or
push
mov
pop
lods
fiadds
hlt
repz
add
cld
dec
adc
leave
jmp
bound
sbb
jmp
xor
mov
dec
push
mov
cmp
dec
dec
mov
int
pop
jbe
in
pop
jb
sub
dec
andb
ficompl
out
fucomip
and
cmp
lcall
mov
ja
xlat
leave
mov
pusha
sub
bound
movl
fsts
mov
add
in
test
clc
ljmp
scas
push
mov
xchg
popf
dec
jge
xor
popa
dec
mov
jnp
imul
push
mov
push
mov
popf
dec
in
cwtl
xor
icebp
notl
push
std
les
fiadds
mov
dec
mov
imul
cld
setbe
mov
sub
fisttps
ror
hlt
push
mov
enter
lahf
jnp
shl
call
mov
jnp
iret
push
sub
adc
xchg
mov
cmp
add
fwait
jmp
add
add
lods
popl
fwait
hlt
mov
adc
call
ret
je
xor
inc
enter
cmp
pop
aaa
pop
sub
mov
cwtl
std
jo
cld
addr16
cmp
mov
js
jb
lock
jo
rol
sbb
setg
pop
push
int3
mov
into
sub
xchg
ret
xchg
fstps
mov
outsl
push
jmp
jmp
push
je
shlb
or
adc
or
dec
sbb
or
mov
iret
push
add
imul
rcrl
mov
lods
sbb
stc
cwtl
jecxz
sbb
adc
jecxz
insl
mov
rcr
push
outsb
cltd
and
xchg
inc
pushf
push
pushf
stos
adc
xchg
test
repnz
push
mov
ret
inc
aaa
xabort
cltd
pop
cli
cmp
fwait
jo
sbb
cmp
mov
testb
jo
jne
repz
cmp
arpl
fstl
test
lods
push
pop
int3
xor
sbb
mov
lea
mov
cmp
cmp
push
inc
jle
push
and
pop
mov
pop
adc
and
pop
not
push
daa
sbbl
jp
ljmp
xor
enter
lret
fmull
outsb
les
cld
testl
fdivl
mov
push
xor
insb
fistl
mov
jecxz
cs
inc
fdivrs
pushf
push
pushf
and
xchg
mov
out
scas
jge
repz
mov
rcrb
mov
mov
pop
xchg
loop
mov
je
imul
into
and
test
andl
nop
adc
xchg
cmp
inc
loopne
std
mov
or
jmp
int
hlt
dec
lea
cmp
daa
stos
adc
mov
out
fsts
sti
cmp
jle
adc
lcall
mov
jmp
stc
lea
ret
and
inc
push
dec
rol
ret
jg
js
les
out
fs
xchg
fs
fstps
aas
jns
dec
dec
mov
repnz
push
add
lret
adc
add
mov
mov
rclb
inc
cmp
icebp
jae
pop
xchg
mov
pop
pop
jnp
popa
jae
int
xchg
and
mov
jmp
push
out
stos
daa
call
adc
daa
je
cmp
test
lret
cmp
sub
in
mov
jg
call
lret
lahf
mov
loop
pop
push
pusha
js
xor
lcall
scas
pop
sub
sub
sbb
and
data16
test
iret
jb
mov
decl
cmp
out
sbb
sti
add
add
into
or
je
pushf
push
jmp
cmc
adc
subl
inc
cmp
xchg
jbe
jbe
dec
jecxz
cwtl
mov
lret
pusha
push
add
sub
jmp
data16
jge
inc
test
and
jmp
mov
int3
mov
das
and
mov
pop
jp
pop
stos
xchg
es
xchg
mov
mov
sub
jge
mov
pop
and
ret
arpl
push
das
xchg
call
inc
aaa
clc
int3
sub
xchg
sub
roll
mov
sti
shr
fists
divl
inc
adc
stos
adc
iret
repz
sarl
push
and
imul
push
and
loop
sbb
jl
xor
enter
sbb
mov
jb
aam
in
cmp
and
repz
and
and
cltd
repnz
and
in
sti
and
cltd
lods
push
sbb
jmp
stos
push
dec
cld
xchg
dec
mov
mov
insl
xchg
inc
cmc
pop
xchg
loopne
imulb
scas
sub
xor
aad
fisubl
ret
dec
setns
ret
std
ret
and
push
adc
sbbb
fdivr
jnp
sub
mov
clc
outsb
mov
fiaddl
mov
dec
push
cmc
aas
mov
cwtl
dec
shrb
mov
cmp
mov
jp
enter
imul
loop
cwtl
push
push
mov
lcall
mov
sti
insl
pop
cld
stos
cld
dec
test
icebp
out
imul
xor
aaa
sbb
aaa
push
lret
or
mov
cmc
adc
sahf
and
and
dec
fadds
dec
cmpl
add
cmpxchg
xchg
xor
sbb
xchg
xchg
loop
adc
rcrl
or
sub
out
push
push
jl
les
stos
mov
mov
stos
ja
out
cwtl
mov
rclb
jecxz
dec
dec
jmp
dec
pop
lea
jae
test
mov
jle
popf
les
popf
popf
xor
clc
je
das
mov
pushf
hlt
sbb
adc
mov
jnp
insl
xor
pop
fdivl
cld
in
pop
jno
pop
jmp
aad
scas
mov
push
jmp
sti
nop
xlat
call
adc
inc
and
aam
ficomps
cmpsl
adc
std
push
orb
add
jne
or
jle
jg
pop
jne
mov
sbb
loope
sub
cs
xchg
mov
loop
pop
test
jbe
push
or
xchg
lret
push
in
lods
adc
adc
bound
lds
jae
daa
mov
jle
fwait
bnd
xchg
stc
sub
pop
and
loopne
aas
fldt
inc
div
sub
jns
add
xor
fwait
xor
cwtl
jo
movsb
mov
mov
inc
mov
popf
fldl
and
add
jmp
notl
mov
ret
dec
push
push
mov
xchg
std
sbb
out
arpl
ja
jle
div
or
cltd
xchg
mov
dec
pop
dec
push
pop
ja
pop
ret
int
jno
inc
mov
incl
aam
cs
outsl
lret
adc
pop
aas
fstps
into
cmp
sub
loop
pop
lea
stos
push
cmp
bound
jecxz
mov
jo
int
cmp
scas
cmc
mov
push
rcr
push
xchg
lret
push
int3
push
sbbb
das
aas
mov
mov
sub
sbb
push
sub
dec
add
and
addr16
lahf
jg
xchg
mov
and
pop
mov
test
ja
jns
sbb
stc
mov
js
push
scas
in
inc
imul
cwtl
adc
add
dec
or
and
les
jecxz
add
cmp
mov
inc
cli
fsubl
jo
enter
aam
xlat
pusha
icebp
dec
fcomip
out
loope
mov
mov
shl
stos
xchg
inc
icebp
or
or
inc
mov
inc
pop
mov
loope
dec
or
enter
push
test
mov
xor
pusha
cwtl
sub
mov
rcl
clc
sub
push
rorb
fstpl
jmp
add
ficomps
mov
lods
cltd
jp
adc
dec
xor
outsl
sub
sbb
dec
inc
pop
pop
or
jge
nop
pop
mov
add
cmp
test
test
les
jne
jnp
arpl
std
xor
jl
pusha
jb
mov
out
sub
pop
sbb
jl
xor
stos
mov
sti
roll
sti
imul
out
xor
add
pusha
mov
daa
stos
dec
loop
mov
xchg
shll
xchg
fldt
addl
or
fstpt
ret
xlat
xlat
add
cwtl
mov
and
sbb
stos
rcr
enter
cmp
jp
filds
xchg
inc
pop
das
in
cli
sbb
jae
rorb
or
or
nop
js
sbb
xchg
jnp
lds
and
ja
dec
jl
push
addr16
subl
cltd
out
adc
jle
int
or
lock
push
cmp
stc
bound
push
jae
inc
sbb
lahf
outsb
pop
inc
dec
dec
cltd
inc
test
int
aad
sub
xor
daa
shlb
and
aam
jnp
mov
jp
loopne
lret
xchg
sub
sub
xlat
cmp
cld
pop
inc
xor
or
stos
mov
mov
lahf
das
ret
jecxz
cmp
pushf
jb
sbb
mov
jg
jae
ljmp
cmp
xchg
fucom
jge
mov
outsl
pop
in
aas
and
test
mov
pop
lcall
inc
js
sbbb
sub
es
incb
adc
push
je
mov
sub
jne
sub
fcomip
or
or
rcl
in
shlb
das
push
leave
push
mov
shlb
rorl
jbe,pn
test
js
outsl
pop
rolb
sbb
sub
jb
add
xor
cmp
jl
xchg
push
jle
imul
arpl
loope
xor
lcall
cmp
cld
in
or
jb
xchg
mov
ja
out
roll
mov
cmp
sbb
add
fcomip
repnz
mov
add
or
xchg
inc
fildl
cwtl
mov
push
gs
jnp
popw
xchg
loopne
inc
cmp
or
mov
lods
adc
cmp
call
lret
and
mov
pusha
es
repnz
add
das
pusha
nop
add
in
xchg
sbbb
pushl
pop
mov
mov
mov
inc
cmpsb
dec
adc
loopne
ja
mov
jecxz
fs
lret
jp
out
add
daa
scas
xchg
aam
das
sub
pop
imul
sbb
xchg
jmp
call
mov
testb
inc
repz
mov
mov
testb
lcall
xchg
shll
repz
std
cltd
jp
dec
iret
or
sbb
das
les
dec
mov
stos
dec
or
mov
notb
pop
inc
xchg
cmp
clc
mov
mov
dec
loopne
je
mull
sti
mov
in
in
ds
inc
xchg
repz
mov
inc
dec
adc
cli
mov
faddl
int
sbb
dec
clc
fnstsw
aad
bswap
adc
out
mov
sahf
popf
push
js
xchg
and
mov
je
inc
int
and
sbb
xlat
xchg
fstpt
pusha
xchg
test
mov
xchg
xchg
mov
pop
xor
aad
dec
xor
ret
pop
add
inc
outsb
mov
rcrb
sub
jbe
or
in
sub
xchg
xor
and
in
mov
jecxz
iret
or
jne
sbb
in
lcall
int3
fbstp
push
mov
scas
xchg
stos
mov
fnsave
sub
mov
adc
and
bound
jl
clc
sbb
jmp
or
repz
or
jmp
aam
arpl
mov
dec
push
dec
cmpsb
add
mov
out
shrl
pop
inc
push
shr
repz
fisubrs
mov
test
icebp
inc
fbld
inc
sbb
out
xlat
pop
xchg
enter
adc
or
loope
inc
pop
jmp
xor
pop
loope
mov
xor
and
popa
cli
xchg
insl
mov
int3
push
loopne
cmp
cs
xchg
mov
frstor
jne
add
inc
lahf
in
lods
inc
push
cld
stos
pop
out
cwtl
test
cmc
jne
movsl
and
jb
stc
xchg
lret
add
out
pop
stc
jge
jp
pop
or
aas
repnz
cmp
inc
inc
in
divb
je
cli
loop
leave
rcrl
add
cmp
imul
cwtl
loopne
lods
mov
in
loop
jb
sbbb
or
xor
cmpsb
fdivp
dec
ret
cmp
jg
mov
and
and
xor
int3
sbbl
and
dec
pop
pop
aas
loop
sub
aad
add
and
cld
outsl
movl
ret
in
imul
int
dec
push
ja
mov
cmp
pusha
and
dec
sbb
inc
mov
jbe
bound
and
cmp
retw
jnp
xor
out
add
addr16
xor
xor
hlt
out
jl
sbb
es
loope
not
and
dec
inc
dec
xor
jnp
mov
decl
xchg
shrb
les
fwait
mov
aas
fdivl
dec
dec
sub
or
pop
push
sub
aaa
sti
xchg
sub
jae
ljmp
cmpsl
aas
int
ret
jle
aas
int
aas
push
cwtl
sbbb
scas
jp
popf
push
mov
xchg
push
inc
or
jb
dec
lcall
mov
pop
jge
adc
or
and
xor
psrld
in
mov
push
repnz
push
xor
jecxz
int3
cmpsb
sbb
or
add
and
jno
pop
mov
add
in
mov
or
jl
xorb
ret
push
cmp
scas
out
fidivrl
lock
dec
inc
popf
daa
insl
mov
cmc
lret
testb
mov
inc
jecxz
xchg
and
stc
xchg
cmp
mov
in
enter
lcall
imul
lock
mov
push
or
mov
ds
incl
hlt
push
mov
xchg
inc
or
add
sbb
sbb
mov
fiadds
leave
sbb
xchg
push
sbb
cltd
pop
out
jne
sbb
pop
adc
mov
rcrw
fimull
scas
ljmp
lods
xchg
mov
out
mov
jmp
mov
lret
xchg
xor
iret
loopne
sbb
repnz
push
into
fwait
and
lods
stos
out
cwtl
dec
push
fucomp
int
into
pop
push
xchg
lea
fimuls
cs
shrb
push
cmp
insl
movsb
dec
popf
movsl
cltd
scas
xchg
xchg
cmp
mov
insl
out
aas
adc
jo
test
xchg
mov
inc
aam
cmp
or
daa
push
push
add
bound
dec
in
or
nop
lret
add
repnz
cmp
mov
xchg
sbb
jl
or
push
cmp
xor
cld
push
insl
and
inc
shll
mov
jno
inc
mov
push
mov
sahf
sbb
in
dec
mov
stc
sub
arpl
cld
adc
adc
ret
dec
outsb
clc
scas
push
add
loope
mov
into
call
mov
stc
and
and
push
in
fcoml
fildll
jmp
jmp
sahf
shlb
jle
push
aam
enter
cld
push
sarb
xorl
inc
mov
jne
stos
xor
aad
pop
mov
jecxz
mov
or
pop
push
cmpsl
cld
jl
pop
push
adc
jnp
and
js
hlt
test
sbb
int
sbb
in
and
xlat
push
xor
loop
fmull
dec
push
gs
sub
pop
jp
mov
push
mov
mov
sbb
test
lock
xor
push
cmp
fwait
mov
mov
shll
mov
jmp
in
lock
lahf
in
icebp
adcl
shlb
sti
mov
movsl
pop
xchg
sbb
sbbb
in
or
mov
mov
icebp
aam
push
cmp
lcall
lods
inc
jmp
sub
sbb
out
push
jmp
sbb
in
fs
dec
jle
loop
das
jne
frstor
subb
xchg
rcl
xor
cld
loop
push
rolb
push
scas
inc
dec
mov
cmp
xchg
pop
adc
mov
jl
and
mov
test
sub
sbb
das
mov
xchg
dec
idivb
push
cltd
pop
fcomi
sbb
or
ja
mov
sub
adc
sbb
add
lahf
xchg
mov
jmp
fadds
outsl
mov
insl
bound
mov
in
mov
xchg
rep
sub
sbb
daa
imul
xlat
addl
rcll
mov
xor
and
outsl
lret
ja
inc
es
pop
sbb
mov
sub
xchg
cli
inc
scas
mov
lods
push
sbb
sub
jo
fstps
ja
fildll
movsb
es
loope
lahf
les
out
movsl
fisttpl
lcall
cmp
jg
cmpsl
imul
fimuls
sub
lret
xchg
in
or
fs
cmp
call
aas
mov
pop
push
popf
inc
loop
xchg
jbe
jns
mov
adc
adc
es
adc
or
sbb
ja
mov
adc
xor
mov
lods
pop
dec
pop
pop
push
and
shl
cmpsb
daa
push
adc
lock
scas
push
adc
fnsave
movsl
dec
scas
sub
fs
mov
in
mov
jp
mov
sbb
pop
sub
std
in
hlt
int3
adc
or
or
and
xor
cmpl
cli
call
out
mov
xor
or
bound
sbb
push
and
outsb
mov
add
jg
in
int3
mov
jb
jno
das
test
or
clc
sti
lcall
fisubrl
mov
jae
add
out
jge
ss
sub
xlat
push
xor
in
jnp
movsl
mov
call
push
and
push
out
in
cld
fbld
es
int3
adc
jo
repnz
gs
in
bound
rcr
in
pop
mov
mov
loopne
xchg
lock
jle
cvtdq2ps
int
xorl
inc
mov
push
sbb
jbe
push
mov
jb
dec
sbb
jmp
mov
sub
jbe
adc
ficompl
mov
out
push
shl
sahf
mov
cld
clc
add
dec
push
pop
scas
out
push
mov
out
and
loopne
dec
pop
out
inc
pop
jg
call
push
push
inc
mov
jno
lret
pop
enter
or
outsb
adc
test
and
xor
or
into
and
push
aas
jge
stos
data16
cmp
add
in
xchg
out
mov
movsb
mov
call
jmp
cmp
jmp
iret
and
aad
sub
in
xchg
mov
pop
je
gs
je
dec
jae
les
jmp
push
ds
jle
jno
inc
push
dec
jns
lds
cmpl
xor
int3
add
mov
in
dec
inc
adc
cld
imul
std
mov
adc
test
ja
mov
add
xor
add
fstpt
iret
dec
jae
in
loop
xor
sub
pop
je
mov
mov
mov
sbb
imul
mov
jmp
clc
lcall
sbb
push
mov
dec
dec
sbb
imul
dec
fdivl
pushf
rolb
hlt
sub
sbb
aas
xlat
ret
lcall
jne
mov
enter
or
dec
jno
mov
and
jno
shll
rorl
dec
pop
mov
shrl
incb
outsb
or
aad
test
jae
jmp
fwait
pop
ficoml
lods
stos
xchg
xchg
cmp
mov
mov
insb
push
sbb
push
xor
fcomps
repnz
sbb
jp
add
xchg
sub
sbb
cmpsb
and
pop
xchg
push
jecxz
lods
pop
pop
xchg
ret
push
sbb
pop
push
jnp
mov
fisubrl
sub
push
jo
out
outsb
dec
dec
pop
mov
mov
ret
xchg
test
movsl
xor
xchg
xchg
add
test
fucomi
sbb
mov
jl
fsubrl
loope
mov
sbb
dec
push
push
es
fimuls
fwait
sahf
fsubs
mov
and
rcl
add
lret
das
mov
loopne
inc
outsl
adc
push
mov
mov
mov
enter
arpl
test
ret
cs
icebp
adc
cmp
in
xor
push
je
lods
out
shl
inc
std
les
jmp
cmp
and
addl
loope
sahf
scas
push
div
lret
imul
jbe
dec
fwait
jno
mov
or
sub
out
leave
testl
ja
xchg
mov
rcrl
sub
dec
cmp
sahf
dec
test
dec
dec
lock
jmp
or
sbb
jle
into
push
inc
push
loope
xor
sub
enter
sub
and
xchg
pop
nop
test
or
std
mov
popa
pop
inc
sub
ficoms
jne
ret
pushf
jns
sub
clts
sub
movsl
add
nop
ds
into
jae
add
jo
mov
xlat
jnp
pop
repz
mov
lods
stos
cltd
jno
dec
insl
pushf
adc
mov
jl
sbb
add
popf
jno
xor
cwtl
pop
fstpl
push
stc
inc
cltd
pop
adc
xor
gs
pop
popf
dec
adc
pushf
push
in
xchg
and
fscale
scas
cld
cltd
fdivrs
out
sti
int3
enter
and
pop
mov
out
fwait
shll
fdivr
sbb
mov
mov
inc
adc
inc
enter
push
lods
pop
repnz
dec
mov
out
mov
xor
sub
xchg
or
add
loope
adc
scas
push
fcmovb
out
or
sub
fmuls
int
or
clc
ret
add
inc
sarl
jg
inc
loop
sarb
mov
jnp
sti
inc
or
xchg
out
xchg
cmp
dec
outsl
sub
and
xchg
mov
dec
call
and
push
cli
push
xor
fs
xchg
addr16
adc
gs
mov
pop
jp
dec
pop
loopne
aad
cmc
inc
and
pop
inc
mov
mov
fsubrs
int
or
xchg
mov
xchg
push
outsb
push
rorb
xor
jp
dec
clc
imul
add
pop
dec
xor
in
cmp
sub
mov
les
pop
addr16
xor
pusha
aam
ret
rorl
test
jg
mov
repnz
or
pop
jno
jae
inc
xchg
xchg
fiadds
movsb
jl
inc
and
fnstcw
cmpsl
xor
stos
lods
mov
inc
xchg
jg
inc
and
aas
mov
test
loop
mov
push
movsl
lahf
outsl
lcall
sub
insl
xchg
popf
popa
mov
add
xchg
mov
dec
add
mov
adc
and
mov
or
sbbl
out
adc
cltd
inc
jl
int3
stos
inc
jae
mov
xchg
xor
xlat
and
push
mov
or
inc
jg
rsqrtps
imul
mov
pop
push
mov
pop
out
cld
sub
sbb
gs
xor
jae
sub
out
mov
cmp
add
jbe
jg
mov
and
mov
xor
pushf
lcall
popf
jg
mov
fbstp
hlt
push
mov
je
and
add
and
mov
lfs
pop
sti
cli
enter
cmp
add
xlat
cmp
adc
mov
cmc
mov
shlb
fisubrl
xchg
hlt
push
mov
sbb
xchg
dec
add
mov
les
mov
imul
or
gs
sbb
enter
movsb
cld
jb
pop
repz
nop
insb
mov
lods
mov
aam
std
lahf
in
rolb
movsb
mov
push
fldenv
testl
aad
lret
in
jg
repnz
and
mov
lds
push
in
pop
xor
jo
mov
mov
add
xchg
inc
les
orb
rcl
jmp
mov
jne
inc
lahf
xor
mov
lea
jmp
imul
jecxz
dec
nop
add
lcall
ret
pushf
add
xor
call
pop
mov
out
aaa
xchg
jns
cmp
test
repnz
cwtl
xchg
stos
mov
stc
or
push
sbb
cwtl
jns
inc
and
int
mov
jne
iret
fistpl
mov
or
xorl
out
pop
mov
cltd
jns
mov
hlt
cli
int3
or
jbe
ret
pop
popa
mov
sbb
dec
enter
decl
data16
cmc
mov
mov
xchg
sub
add
in
hlt
cmc
add
mov
or
pop
jge
push
or
adc
push
pop
add
xor
inc
arpl
iret
sbb
std
in
inc
push
ficoms
mov
lret
je
push
pusha
shrb
mov
jno
and
aas
sub
insb
cmp
or
aas
cmp
xchg
sar
fwait
adc
push
and
hlt
add
push
sub
ja
sub
push
ret
mov
add
ss
insb
mov
or
bound
push
std
cmpsl
xor
sahf
ds
sub
das
je
lea
and
mov
xlat
out
hlt
jp
popf
jno
xor
xor
push
sub
jno
je
inc
pop
js
jb
xchg
lcall
pop
das
jne
out
push
mov
and
xlat
push
sbbl
fcmovnb
adc
outsb
scas
adcb
jb
sbb
jns
xchg
cmp
pop
loopne
lret
adc
cmp
lods
out
cmp
pop
push
stos
lcall
inc
imul
pushf
je
xlat
mov
or
sub
out
cmp
dec
pop
subb
sub
mov
fwait
dec
ss
jge
pop
xor
dec
fwait
out
xchg
push
push
push
cmp
cmpsl
std
cmpsb
add
loopne
leave
inc
jno
call
cwtl
fs
test
cwtl
lret
decl
jecxz
lea
sub
enter
roll
xor
push
scas
mov
xor
nop
or
popf
enter
push
add
cld
cwtl
andl
rep
xor
mov
xchg
and
bound
and
mov
test
or
daa
pusha
lock
add
arpl
sbbb
jmp
jne
push
frstor
push
stos
les
pop
push
out
mov
jno
sub
adc
mov
dec
or
sub
out
mov
xchg
nop
xor
sbb
fisubs
sbbb
pop
push
pop
dec
imul
mov
cmp
shll
sbb
jns
aaa
lahf
or
repnz
sar
jno
cmp
cmp
jbe
scas
in
cld
xchg
or
subl
sub
rcrl
cmpb
mov
adc
mov
xor
out
lea
jns
jno
movsb
pop
push
sbb
ret
stc
add
mov
fadds
push
lods
mov
jmp
out
sub
mov
push
mov
pusha
loopne
xchg
popf
mov
std
add
jnp
and
push
lahf
push
mov
pop
nop
fcoms
pop
in
out
scas
out
sar
shlb
xchg
into
xor
jl
sub
sbb
xor
lds
sbb
test
sub
cmp
lret
jns
fisubrl
mov
or
aas
or
rolb
sbb
fadds
in
jge
push
push
push
and
sbb
into
shlb
jae
xor
and
in
imul
xor
or
sub
test
adc
or
stos
sub
dec
fcmove
cmp
jle
clc
imulb
pop
cmp
mov
int3
sub
push
mov
xor
adc
bound
sbb
jle
movl
sahf
lds
dec
stos
fincstp
popf
lahf
rep
add
add
mov
sub
aaa
xchg
jns
xchg
repnz
xor
xchg
nop
cltd
mov
push
ret
jle
inc
jae
jl
dec
in
fistpll
jo
out
sbb
and
inc
loope
pop
xchg
jge
xchg
mov
mov
push
mov
push
push
mov
xor
mov
out
fs
mov
push
out
and
xorl
rorl
not
and
mov
xchg
push
es
mov
in
rcl
xor
xor
cmp
mov
xor
and
ret
mov
int
pop
loope
ljmp
lcall
mov
inc
jmp
inc
push
sbb
loope
test
ljmp
ds
xor
into
xchg
jne
cmp
iret
outsl
push
mov
iret
in
arpl
push
sbb
xor
xor
ficoms
mov
subb
lods
cmp
out
iret
pop
inc
xchg
bswap
mov
out
imul
push
sar
jbe
mov
sub
xchg
sbb
mov
push
hlt
sub
mov
xor
jno
stos
xor
inc
loope
jecxz
loop
enter
mov
mov
adc
xor
mul
or
xorb
jg
js
int
sub
mov
outsl
dec
and
adc
fwait
add
leave
in
out
cmpsl
mov
addl
xor
cli
dec
stos
sti
mov
mov
mov
daa
sarb
mov
int3
push
adc
fwait
idivl
and
pop
sbb
outsb
test
les
aas
fstl
xor
fdivrs
dec
lods
push
ss
sub
nop
outsl
jmp
xchg
icebp
and
aad
sbb
inc
xchg
leave
xor
push
fisubrs
xchg
cmp
inc
aad
inc
fldenv
push
pop
inc
mov
xor
jp
mov
sbb
daa
rcrl
sub
out
fwait
in
adc
and
lcall
pop
dec
pop
subb
es
xor
add
outsb
cli
add
sub
sbb
push
push
scas
mov
inc
jp
push
fcomps
sbb
sub
add
pcmpeqd
xor
dec
or
xor
sbb
dec
add
adc
cmp
mov
push
mov
add
pop
gs
divb
adc
sbb
clc
fisttpl
cmp
or
dec
dec
xor
icebp
cmp
jge
lret
jmp
xor
daa
mov
and
inc
jge
mov
jno
ret
repnz
in
add
inc
xchg
imulb
mov
mov
sbb
sub
es
data16
out
adc
cmc
xchg
and
mov
add
repnz
xchg
loope
jo
or
xchg
incl
inc
mov
das
or
xor
in
mov
testl
test
xor
push
or
pop
sub
ja
jle
fucomip
pusha
outsb
insw
pop
gs
stos
dec
xchg
push
insl
sub
adc
rcrb
or
jae
aaa
lods
dec
lds
push
adc
pushf
pop
pop
push
repnz
insl
mov
stos
mov
cmpsb
xchg
pop
bound
add
xor
and
xchg
clc
mov
push
mov
ss
pop
push
mov
rcr
mov
es
adc
stc
xchg
pop
jmp
push
leave
insb
sti
stos
mov
mov
mov
lret
sbb
out
adc
sbb
pusha
ljmp
pop
bnd
jecxz
stos
and
pminub
mov
inc
inc
lods
cmp
loop
in
fisubrl
je
sbb
movsl
scas
pusha
push
sahf
sub
mov
stos
ret
test
xchg
movsb
scas
lds
add
add
scas
jmp
insb
mov
ss
nop
mov
addr16
push
and
and
insb
push
pushf
mov
mov
adc
inc
shrl
fists
loop
sub
mov
sub
xchg
aad
js
ss
stos
and
sub
jge
insl
push
mov
ss
ret
loop
outsl
inc
je
xor
movsl
lods
adc
adc
cld
out
cli
xchg
cmp
fistl
sub
sub
lods
daa
pop
or
test
test
push
gs
dec
xchg
int3
and
test
inc
xor
cmpsb
in
xor
lahf
push
mov
jno
int
mov
fbstp
fwait
int
arpl
stos
gs
mov
jb
add
testl
incl
and
xchg
or
and
insl
les
cmp
fildll
adc
sti
out
add
mov
cmp
and
inc
or
and
jo
add
shlb
xchg
out
lret
nop
add
mov
scas
ret
notb
xchg
repnz
dec
int3
add
lock
mov
jno
mov
dec
ds
or
cmp
mov
loopne
out
ss
test
mov
jmp
cmp
sbb
mov
in
push
shlb
sbbl
jne
xchg
xchg
int
dec
aam
and
call
fsubr
lahf
jmp
adc
out
subb
int
shlb
inc
movsl
cmp
into
lret
xor
xchg
xor
jle
inc
mov
sub
sub
lcall
ljmp
xlat
fcomps
jbe
mov
lahf
int3
cmp
cmpsb
insl
mov
out
inc
daa
push
in
addl
ret
sub
push
leave
adc
sub
push
and
popf
or
pop
and
push
in
push
call
enter
data16
pop
imul
adc
sub
call
lahf
pushf
clc
stos
pop
dec
sub
movsl
movsl
pop
arpl
sarl
pop
push
add
jg
test
in
sub
xchg
push
mov
pop
xchg
dec
cmp
pop
add
repnz
mov
ds
scas
loope
sarb
inc
mov
out
in
mov
stos
mov
shl
push
mov
mov
xchg
mov
lock
sub
int3
nop
xchg
and
jecxz
outsw
adc
lods
inc
mov
jmp
cmc
jns
sub
popf
jmp
add
jecxz
xor
pop
inc
fstl
repz
sub
das
movsb
push
mov
cmpsb
aaa
mov
sti
jns
aad
mov
push
inc
mov
mov
shlb
lret
out
or
sub
mov
pop
idivl
popf
inc
mov
mov
pop
bound
stos
in
sbb
sahf
push
sti
add
dec
mov
pop
sub
icebp
fstpl
mov
scas
imul
and
push
pop
mov
les
push
mov
xor
xchg
add
clc
fnstcw
loopne
cmc
jge
ja
dec
jne
sahf
inc
in
dec
mov
mov
fwait
pushf
sub
lods
mov
cmp
mov
push
mov
pop
mov
cmc
add
sarl
sub
adc
test
xor
nop
sub
out
cmp
jo
ffreep
stos
and
mov
fwait
arpl
ret
pusha
ret
xchg
lea
adc
dec
sahf
sar
add
movsb
inc
dec
stos
int
or
pop
loop
adc
inc
rclb
adc
fwait
xlat
push
jp
dec
mov
lret
test
les
int3
xorb
xchg
fdivl
inc
fnstsw
aad
cmp
mov
mov
xchg
shrl
dec
pop
rcrl
mov
cmp
mov
pushl
inc
and
pop
loop
mov
mov
sahf
movsl
pop
out
lds
mov
out
call
xor
jb
cmpsb
mov
dec
cmpsl
scas
push
jae
in
stos
aas
and
inc
mov
sbb
xchg
push
adc
cld
cmp
ss
or
or
mov
out
mov
lret
aaa
sbb
cmp
mov
push
fucomi
aam
jmp
pop
cwtl
mov
push
imul
pop
mov
cmp
dec
push
hlt
dec
push
push
ja
push
ds
sbb
stc
inc
cmp
movsb
or
mov
icebp
cmp
rol
iret
das
sbb
mov
aam
or
pop
mov
jns
fildl
cmpsb
sti
scas
insb
pop
dec
lea
or
leave
pop
inc
xchg
ja
sbb
mov
xchg
pop
mov
out
les
inc
pusha
add
xor
push
ret
jbe
mov
dec
or
pusha
aas
packssdw
cmp
inc
mov
or
iret
fnsave
xor
stos
aaa
adc
mov
push
inc
leave
clc
push
lahf
mov
mul
mov
movsb
add
std
sbb
imul
dec
sub
aam
je
xchg
les
mov
movl
push
inc
mov
notb
inc
push
sub
sub
push
subb
pop
push
sahf
cli
ficoml
sahf
out
hlt
push
rcrl
enter
push
cmp
out
dec
pop
shrb
or
lds
inc
pushf
flds
mov
jb
inc
and
cwtl
xlat
in
in
mov
fmull
imul
mov
mov
or
ja
shld
cmp
dec
or
pop
les
lock
cmp
out
sub
cs
in
int
push
ja
ja
cltd
lds
imul
cmp
js
sbb
dec
push
dec
add
mov
insl
jp
jne
imul
inc
daa
hlt
xchg
dec
mov
dec
jo
sub
shl
repz
mov
into
mov
test
xor
insb
imul
cltd
pushf
push
jb
or
testl
pop
inc
xor
push
fxch
call
mov
xor
cmp
add
bound
inc
jmp
popa
out
loope
loope
xlat
jg
jo
sbb
and
mov
lds
or
stos
leave
clc
cmp
data16
mov
cld
test
outsl
loop
push
push
mov
in
iret
jno
out
testb
in
test
ret
arpl
pushf
adc
pop
iret
inc
enter
adc
inc
sub
rolb
ret
cmp
mov
lods
loop
out
jge
xor
ds
lea
ret
cltd
ret
cmp
inc
sub
pusha
fsqrt
js
clc
negb
outsl
jo
mov
mov
mov
sub
and
jb
fcmovnu
enter
mov
test
out
incl
hlt
insb
aas
push
nop
mov
add
bnd
repnz
repnz
pop
adc
out
repz
or
cld
mov
jmp
sbb
ret
mov
push
repz
inc
jmp
movl
xchg
mov
mov
shr
dec
shrb
sub
addr16
dec
lods
test
stos
and
mov
scas
or
dec
fnsave
out
xchg
pop
dec
sub
pop
imul
movsl
repnz
lahf
shll
xor
fmul
jl
cmp
mov
rorl
shlb
jle
inc
push
dec
add
or
testb
sbb
or
int
xchg
jno
ror
jne
lahf
sbb
pop
arpl
addr16
ja
lcall
hlt
test
mov
push
sbb
and
es
sub
mov
cmp
jl
fimull
les
movsb
aad
or
lahf
or
test
and
stos
pusha
fisubl
int3
test
mov
decl
pusha
dec
add
and
xchg
xor
xlat
in
push
inc
and
aam
aas
inc
jle
movsl
mulb
sbb
mov
jns
loope
adc
shr
clc
lahf
imul
addr16
jle
xorl
push
xchg
mov
pop
mov
cltd
inc
iret
cmp
xor
xchg
jle
cmpl
into
xor
outsl
jae
mov
dec
and
int
je
adc
in
push
jle
pop
xor
jbe
lret
add
in
push
mov
mov
fcoml
jb
mov
out
pavgw
sub
mov
xor
mov
std
fstps
clc
int
mov
cmp
in
inc
xchg
and
mov
scas
add
sub
call
out
ja
and
imul
adc
and
loopne
mov
sub
add
cmp
fidivl
ret
jle
adc
stos
and
sub
sub
popf
or
mov
xor
push
je
call
cmpl
inc
pop
or
push
cmp
add
push
inc
out
movsb
jne
adc
test
pop
call
push
out
test
xchg
ljmp
imulb
xor
loop
outsb
fstpl
aaa
push
push
inc
fwait
jecxz
or
or
stos
mov
int
fildl
mov
sub
arpl
pop
in
push
mov
ja
jle
pop
and
jne
mov
ss
aaa
mov
rclb
das
sbb
mov
jbe
mov
or
enter
push
les
xor
adc
mov
loope
and
push
push
fwait
xchg
dec
test
lret
xchg
or
outsl
sahf
push
aaa
inc
test
cli
xchg
cmpb
test
in
and
dec
push
in
and
or
xchg
cmpl
fisubrl
cmp
inc
sbb
mov
shll
mov
jecxz
pusha
mov
mov
hlt
mov
js
mull
dec
movsb
call
and
ret
push
adc
sbb
repnz
fiaddl
mov
data16
xchg
leave
pop
push
mov
mov
jbe
test
in
jmp
arpl
call
jne
jle
test
movsb
jbe
ja
jo
adc
jmp
dec
or
push
lods
repz
mov
mov
push
imul
xlat
lods
data16
sbb
jge
repz
inc
in
inc
or
pop
in
sarl
or
xor
or
sahf
inc
scas
bound
sti
xor
es
cmc
dec
movsl
jb
mov
sub
repz
dec
ret
pop
sbb
or
in
inc
mov
out
push
xor
fmul
lcall
daa
out
mov
sbb
das
jae
inc
pop
outsl
icebp
dec
das
push
mov
cmpsl
js
inc
loope
es
xor
std
push
cltd
mov
jecxz
or
sbb
pushf
sbb
jl
test
scas
cmp
cld
mov
adc
push
call
movsb
push
cld
std
jmp
xchg
insb
sti
xchg
arpl
inc
xchg
mov
cmc
jp
cwtl
sbb
dec
hlt
cmc
frstor
pushf
aad
sti
loope
pushf
add
mov
mov
or
jbe
sbb
test
adc
mov
xor
sti
ja
inc
test
pop
xchg
sarb
inc
sub
push
inc
daa
dec
mov
daa
aad
pop
stc
xchg
mov
mov
insl
sbb
lcall
xchg
add
xlat
cmpsl
mov
cwtl
into
xlat
add
sbb
inc
imul
mov
cmp
mov
out
inc
mov
fcompl
lods
cmp
fiadds
in
jmp
pusha
jno
ficompl
pop
jg
das
leave
pop
cli
mov
ficoml
sub
or
fisubl
cs
cmpl
pushf
call
cmpsl
out
jle
mov
adc
clc
int
sub
out
inc
xlat
loopne
cmp
inc
xchg
mov
iret
out
mov
mov
cwtl
test
mov
adc
mov
cwtl
cmp
or
add
imul
fistps
mov
icebp
add
int3
pop
outsb
sbb
outsl
test
mov
sbb
iret
lods
and
push
pushl
mov
mov
call
add
mov
sub
pop
jns
insl
mov
jl
les
test
leave
mov
loopne
jb
push
mov
mov
das
jne
aas
push
mov
scas
jecxz
bound
add
cmc
mov
das
mov
das
aam
test
inc
adc
cmp
in
push
jle
lcall
mov
outsl
cmp
movsb
mov
jne
data16
or
adc
into
pop
insb
insl
or
std
and
or
fisttps
mov
scas
mov
mov
mov
push
js
movsb
mov
jo
fwait
add
push
jnp
sbb
xor
jge
pop
add
cs
loop
fsubrs
push
adc
lods
mov
jle
push
mov
stc
jo
lahf
pop
or
or
add
or
mov
inc
xor
lahf
sbb
xchg
cmc
movsb
push
add
inc
lret
xor
sub
popf
push
xchg
hlt
adc
mov
pop
dec
in
stc
jno
adc
out
cwtl
dec
aam
and
ja
or
loopne
push
aas
test
mov
push
rorb
movsb
ss
loope
dec
mov
out
mov
push
in
jae
xchg
inc
movsb
sub
nop
sub
push
push
loope
popa
cmp
daa
xchg
xor
ljmp
aad
insl
mov
rclb
into
mov
rolb
xchg
lods
cli
lds
inc
adc
imul
mov
mov
dec
leave
xor
jb
pop
mov
stc
popf
push
cli
mov
sti
je
adc
aad
incl
sbb
xor
xchg
dec
inc
fcmovbe
xchg
jp
push
xor
jno
test
hlt
arpl
fs
sub
mov
ds
jne
repnz
push
pop
stos
inc
js
movsl
sbb
enter
pop
cmp
mov
cmp
inc
daa
or
jmp
dec
mov
xchg
ja
or
xor
nop
shl
adc
jl
arpl
xor
dec
cltd
dec
mov
inc
or
out
xchg
imul
insl
mov
and
mov
adc
push
pop
lods
pushf
inc
xor
or
adc
mov
and
lretw
or
ja
aad
push
mov
cmp
cmp
pushl
cltd
ret
lds
pushf
jle
testl
icebp
in
loop
mov
mov
mov
add
test
xor
xchg
cmc
inc
pop
outsb
xlat
push
fwait
daa
mov
stos
dec
mov
jnp
ljmp
sbb
cli
lcall
push
sub
push
das
icebp
xchg
push
cmc
leave
lods
xor
mov
adc
sarl
cmp
test
cs
rcll
sbb
push
in
jl
frstpm(287
std
fsts
loopne
in
stc
std
mov
roll
add
rol
dec
mov
jnp
and
sbb
sbb
imul
pop
in
push
inc
cmpsb
sub
mov
mov
cmp
hlt
imul
or
and
gs
sbb
push
movb
pop
mov
sub
data16
scas
aad
dec
ljmp
and
data16
mov
push
test
inc
cltd
xor
sub
inc
scas
sbbl
bound
lock
and
mov
lods
push
fiadds
add
sbb
out
mov
aas
sub
icebp
stc
lcall
and
jno
data16
std
dec
int
loop
add
adc
pop
add
xchg
pop
imul
fdiv
adc
jl
pop
mov
sbb
hlt
inc
push
andl
and
gs
lds
ljmp
inc
das
jns
jge
adcb
xor
xchg
mov
push
loope
movsl
pop
fidivs
xchg
jne
sbb
fcmovnbe
lods
dec
add
imul
jecxz
icebp
stos
xlat
into
repnz
leave
and
xor
adc
sub
add
lret
inc
and
xor
aam
and
ficoml
cmp
mov
lock
jbe
aas
add
test
das
jg
xchg
test
aas
and
push
jae
ja
cmpsl
add
pop
std
add
adc
push
push
addr16
hlt
test
xchg
mov
sub
incb
inc
test
sub
cmp
xchg
outsb
lods
cmp
inc
lret
pusha
and
and
pushf
push
pusha
sub
int3
ljmp
push
ficomps
fwait
adc
xlat
cmpsb
fisubl
dec
lahf
ret
pop
jge
test
pop
mov
mov
cmpb
je
dec
mov
inc
adc
xchg
jb
rolb
fbld
jno
aad
jb
cmp
mov
dec
push
fdivrs
xor
xchg
incl
adc
jl
loope
das
fstl
lahf
out
data16
cwtl
pusha
outsl
add
cmp
sahf
in
test
pop
ljmp
repnz
test
sbb
out
or
into
or
idiv
lret
jecxz
inc
inc
mov
ds
xor
cltd
sbb
jecxz
add
mov
add
mov
mov
fisubrl
test
mov
fmuls
insb
std
ja
push
dec
in
fisttps
div
cwtl
mov
mov
popa
xchg
pushf
add
jb
mov
and
dec
xlat
call
hlt
pop
lret
xchg
leave
jg
jl
sub
push
mov
jmp
mov
adc
cmp
mov
gs
sub
jmp
addr16
and
mov
sub
jb
mov
mov
mov
test
loope
mov
mov
aad
fildl
and
lds
ds
inc
lcall
sbb
andl
push
insb
ror
int
cmp
cwtl
mov
cs
arpl
js
out
ja
test
xor
dec
adc
jle
jmp
mov
icebp
mov
cbtw
xor
pop
std
pop
std
sti
sahf
pop
in
adc
mov
cmp
mov
ja
jno
push
push
out
repnz
lods
mov
ret
fisttps
push
jno
push
insl
lea
or
leave
pop
sbb
pop
sub
test
mov
fs
nop
cmp
push
xchg
push
or
xchg
leave
in
inc
cmp
mov
je
pop
dec
sti
call
pop
or
les
vorps
push
xchg
mov
push
xor
sbbl
cmp
outsb
lea
notl
aaa
mov
mov
daa
ret
jb
and
lds
inc
loop
hlt
jne
pop
mov
int3
int
fistpl
xchg
push
ss
cmp
test
lds
push
incb
test
test
and
mov
mov
in
imul
xchg
jmp
or
stc
dec
pop
jb
mov
ficomps
int3
adc
and
pop
jge
fbstp
add
divb
testl
pop
inc
and
and
add
imul
or
in
ret
icebp
adcb
pop
lret
mov
push
out
arpl
fdiv
cwtl
xor
out
int3
pop
lahf
cmp
ret
clc
jecxz
in
sub
xor
cwtl
mov
repz
push
sbbb
push
aaa
test
and
popa
imul
pop
sub
inc
jno
xchg
lds
push
sarb
ss
in
es
popf
ja
cltd
xor
loope
push
pop
fstps
or
adc
js
dec
les
ss
pop
mov
iret
mov
mov
mov
cli
sub
aam
popf
dec
jmp
rorl
mov
sahf
sbb
insl
leave
cmp
mov
repz
jg
rolb
int
movsb
imul
fldl
adc
dec
in
jbe
cltd
bound
stc
pop
cmpsl
stos
dec
jo
xchg
push
pop
dec
mov
push
mov
jno
inc
and
mov
pushf
addr16
jnp
into
and
mov
mov
arpl
xor
inc
and
mov
xchg
jbe
repnz
ret
hlt
mov
sub
mov
es
jmp
push
cmp
and
jb
cmp
sub
sbb
loopne
int3
push
shl
int3
xchg
fimuls
adc
out
push
test
hlt
lock
add
inc
mov
add
sbb
or
mov
negl
mov
sbb
jmp
out
and
dec
nop
mov
inc
pop
lods
inc
popa
int3
call
xlat
xchg
imul
xchg
sub
mov
lock
bnd
je
mov
mov
sub
add
test
sub
mov
cmp
add
or
lcall
cmp
mov
repz
sub
loop
cwtl
add
xchg
aad
insb
pushf
les
adc
cs
pop
lds
iret
dec
pop
fsubl
fwait
cmp
cmc
add
cmp
jp
or
cwtl
push
pop
or
mov
addr16
les
sub
div
rcrb
mov
push
lea
scas
roll
push
sub
cmp
sub
gs
and
out
out
jle
adc
inc
cli
mov
mov
cmpsb
cmp
mov
in
and
xchg
cmpsl
mov
outsl
fwait
cmp
aaa
mov
loopne
cs
sbb
pop
dec
dec
lcall
sub
enter
pop
imul
es
jbe
mov
subb
jno
mov
mov
mov
es
fadd
mov
adc
shlb
rcr
std
cltd
mov
cmp
jb
out
dec
pop
and
sbb
hlt
xor
cmp
mov
aam
push
add
sbb
popa
push
inc
popf
sub
jg
fildl
jg
int3
hlt
push
cmp
std
inc
jbe
inc
inc
pop
leave
sbb
call
lds
aaa
sbb
pop
ror
imul
lret
jbe
icebp
jae
ljmp
in
push
aam
xchg
out
cmpsl
push
jns
lret
dec
lret
test
mov
mov
out
loope
test
cmp
mov
xor
inc
adc
test
ljmp
test
cmp
lods
jmp
mov
add
inc
shl
cmp
in
pop
add
lds
xor
dec
loope
stc
xchg
dec
sti
iret
lahf
fadds
push
lea
mov
xlat
jb
mov
inc
sbb
cwtl
mov
neg
loopne
jb
cltd
scas
shr
sub
add
push
sbb
pop
mov
and
push
or
out
cmp
jno
mov
mov
cwtl
mov
enter
cwtl
movsb
test
or
in
dec
arpl
xor
cmp
fs
in
sbb
jp
xchg
es
and
addr16
lcall
sub
adc
xchg
pop
mov
push
je
or
in
adc
je
or
dec
int
jg
push
add
ja
in
mov
stos
jns
xor
popa
sub
pop
adc
sti
sbb
leave
push
xor
inc
out
push
cmp
cmc
sub
insl
xor
mov
pop
and
mov
mov
out
push
mov
loopne
stos
iret
out
push
ret
inc
or
das
mov
cmp
adc
es
jnp
imul
push
cmp
lret
stc
jbe
pop
lret
cmp
and
inc
jle
pop
mov
movsb
fnstsw
je
push
aas
jb
scas
stos
inc
leave
negl
inc
addb
adc
js
mov
xchg
nop
sub
pusha
addr16
lret
or
sub
lods
mov
cli
jne
mov
idiv
jnp
mov
xchg
insb
aas
imul
push
mov
sbb
and
adc
xchg
adcb
adc
jge
cmp
fstpl
sub
icebp
out
mov
ror
stos
mov
insb
dec
ret
stc
push
sbb
xchg
ret
pop
enter
test
sub
cwtl
inc
inc
xlat
mov
ljmp
mov
mov
inc
mov
decl
cmp
push
pop
dec
fidivrl
int3
shll
repz
ret
xchg
cmp
popl
mov
jp
add
and
push
mov
sahf
sub
mov
ror
pop
push
or
mov
fisubs
test
imul
stos
mov
jbe
popa
dec
pop
push
mov
sarb
fistpl
les
or
test
insb
mov
cltd
jle
xchg
ret
mov
mov
cmpsl
xchg
fsubrs
mov
cmc
mov
sub
enter
stc
xor
pop
cmp
std
loop
in
xchg
arpl
clc
fidivrs
pop
shlb
stos
les
sahf
cli
xchg
and
cmp
aaa
sub
inc
popf
cmp
xchg
mov
cli
sbb
rsqrtps
fabs
frstor
push
sbb
imul
dec
cmp
stc
lods
jl
aas
lahf
out
mov
inc
cwtl
imul
imul
outsb
mov
mov
je
fstl
xchg
aad
dec
fsub
cmp
mov
or
cld
or
cmpl
loop
in
ret
dec
inc
popf
fcomps
xchg
cmpsl
mov
push
dec
js
mov
xchg
adc
mov
mov
bound
jo
repz
dec
mov
add
mov
pop
push
test
test
psubusb
sbb
cltd
mov
xor
repnz
jo
jecxz
sub
lock
repnz
or
icebp
ficoml
mov
ret
cmp
int3
rcl
or
cmpsl
mov
lds
dec
or
test
jp
adc
cmpsb
dec
ret
fsubrp
int3
inc
mov
and
inc
roll
mov
push
mov
fildl
in
push
push
xchg
xor
les
push
dec
fsubs
stos
jle
mov
loopne
mov
sub
pusha
loopne
lods
test
and
jae
sbb
jge
cmp
jb
loop
mov
jbe
mov
cmpsb
in
daa
and
mov
cmp
int3
loopne
mov
repnz
push
pop
rcrl
cli
xchg
fdivs
fs
dec
sub
and
cs
sbb
lret
in
lea
imul
xor
subb
test
pop
sub
xchg
test
sbb
fdiv
arpl
jo
and
mov
cmp
add
aam
pop
ret
mov
loope
dec
and
sarl
dec
mov
aaa
inc
aad
pop
shll
pop
pop
lods
test
cmp
push
mov
fisubs
dec
sbb
fwait
adc
mov
cwtl
jne
int
xor
rcrb
dec
mov
cmp
shll
fidivs
cmp
imul
xchg
orb
loop
adc
cmpsb
insl
inc
ljmp
or
shlb
clc
call
mov
jo
mov
mov
stc
inc
ret
adc
mov
mov
or
fadds
adc
rcl
adc
add
xchg
test
sti
lds
adc
jbe
cmp
or
imul
stos
xchg
test
xor
pusha
lods
jns
adc
jo
push
scas
xchg
inc
subps
xchg
in
std
flds
repnz
ja
stos
dec
gs
jmp
into
xor
xor
pop
js
cs
pop
bound
mov
jle
pop
push
es
movsl
or
push
add
xchg
and
je
xchg
data16
mov
jno
dec
mov
cli
and
dec
inc
push
mov
or
loop
ret
xlat
xor
jl
pop
arpl
repnz
dec
loop
adc
hlt
xchg
mov
jl
in
sub
test
rcll
mov
pop
push
idivl
adc
subb
xchg
pop
jp
sub
mov
xchg
arpl
mov
jae
or
mov
inc
icebp
sti
lahf
adc
out
push
xchg
add
fildll
adc
mov
or
push
mov
adc
and
aam
xlat
and
iret
enter
jecxz
outsl
clc
daa
fdivrl
pop
xor
sahf
cmp
into
dec
mov
add
mov
and
adc
mov
daa
mov
cwtl
test
stos
aad
loope
add
xor
outsb
push
scas
adc
push
mov
jge
push
jns
and
test
add
or
or
rol
out
push
jl
rcrl
push
mov
pop
dec
fwait
cmpsb
inc
ds
xchg
or
cmpsl
sbb
outsl
mov
jns
imul
vpaddusw
ret
push
xor
jb
xchg
pop
test
rclb
dec
or
lcall
insb
push
inc
xchg
xlat
les
mov
jns
out
dec
dec
and
xchg
inc
imull
arpl
jb
xor
push
inc
lret
test
in
sub
push
das
and
add
icebp
xchg
fchs
mov
pop
cmp
dec
or
inc
and
test
push
jne
mov
pop
repz
inc
xor
mov
test
mov
nop
xchg
gs
dec
lods
jge
scas
popa
or
pop
fst
add
dec
stc
lods
pop
addr16
inc
icebp
sub
dec
sti
xchg
rcr
cmpsb
push
lcall
xor
in
lea
loopne
add
test
sbb
pushaw
push
in
push
push
aas
jo
test
out
adc
push
sbb
out
cmp
roll
popa
and
mov
popf
lods
ds
dec
les
cmc
xor
sub
js
mov
and
inc
in
out
test
and
es
dec
xlat
testb
rcl
inc
jecxz
xor
in
inc
push
sbb
int3
push
xchg
sub
fs
sub
add
stos
or
inc
xchg
dec
daa
mov
test
mov
scas
jae
cmp
fsubs
xchg
mov
sbbb
xchg
testl
mov
int
sub
cmp
mov
mov
dec
add
call
in
and
ljmp
bound
jmp
fwait
and
sahf
pop
dec
mov
sbb
mov
popa
lcall
iret
fimuls
pop
jecxz
pop
xor
sbb
mov
dec
movsb
pop
into
mov
or
xor
shrl
outsl
testb
icebp
fnstcw
mov
gs
or
rcll
mov
popf
or
ret
jns
dec
inc
jno
inc
ds
xchg
repnz
dec
xor
jbe
aad
pop
sbb
mov
fcomi
lea
cmpsb
add
aad
ljmp
nop
in
ss
inc
mov
lret
mov
lds
pop
les
push
push
scas
ja
mov
pusha
pop
es
lret
pusha
sbb
and
movsl
cmpsb
add
xchg
jl
cmp
sub
dec
jmp
mov
insb
add
into
cmp
inc
xchg
rcll
imul
sbb
frstpm(287
xor
cmc
add
fidivrl
and
dec
xor
aad
fbld
dec
pop
sub
inc
xor
xchg
cmc
mov
push
and
sbb
inc
stc
aam
popa
sbb
fstl
in
xlat
xor
dec
xchg
inc
xchg
xchg
bound
stc
adc
test
pop
out
push
sbb
arpl
xchg
mov
mov
pop
jbe
sbb
sbb
sub
sub
sbb
add
mov
iret
mov
jmp
or
add
stc
mov
cmp
test
dec
pusha
and
and
fstpl
roll
ds
test
cmpsl
movsl
jbe
xor
in
test
les
out
mov
sub
jle
pop
leave
ss
fldcw
push
dec
pop
lret
or
stos
push
push
mov
jge
test
pop
jb
hlt
sub
push
jg
gs
and
testb
mov
hlt
cmp
mov
cli
adc
loopne
fmuls
lcall
sbb
xor
pop
mov
jb
loope
inc
cmp
mov
sub
or
inc
xchg
sub
ds
push
int
add
imul
add
pop
jnp
sbb
adc
ss
mov
hlt
insb
push
cmpsb
inc
inc
shlb
lds
adc
lods
aaa
data16
fisttpl
addr16
sub
or
adc
mov
jae
sub
addb
jne
outsb
xor
insb
inc
mov
mov
push
pop
out
lods
add
cmp
sar
xor
stos
pushf
aaa
jle
cltd
in
stos
cmc
mov
mov
cli
in
xorb
xlat
mov
ret
mov
add
ret
test
shll
movsl
ljmp
xor
sbb
xor
hlt
xor
mov
cmp
lret
cwtl
inc
mov
mov
cmp
mov
test
test
push
mov
mov
or
sub
loope
mov
dec
xor
xor
sbb
in
aaa
pop
imul
lock
xor
das
std
dec
lcall
repz
rcr
xchg
fstps
xchg
lret
sub
adc
xor
add
xchg
sub
fwait
in
mull
adcb
pop
scas
and
or
shll
xchg
mov
cmpsl
int
outsl
lret
push
dec
dec
xchg
lods
sub
ror
popf
pusha
ljmp
lcall
xor
popf
lods
jns
xlat
shll
nop
inc
popf
scas
jae
ds
xchg
or
aas
dec
jge
mov
lea
cmpsl
fnsave
sahf
adc
mov
movsb
sti
pushf
sbb
xchg
xchg
pop
scas
sbb
xchg
push
sbb
mov
lock
sahf
mov
insb
mov
subl
cli
fcos
rcrb
mov
push
loopne
sbb
adc
ljmp
push
pop
repz
popf
sub
inc
inc
das
lret
cmpsl
cmpsb
xchg
cmp
mov
dec
cmpb
cmp
push
dec
lods
and
add
out
popf
push
xor
cwtl
jecxz
dec
pop
cltd
sub
mov
add
mov
dec
mov
mov
inc
mov
sarl
pop
je
sti
fidivrs
jge
jmp
dec
push
movsb
nop
in
lcall
popf
jge
pop
mov
sarb
fwait
int
lret
js
lds
jb
ja
out
andb
and
xchg
dec
or
rolb
into
aaa
stos
push
xchg
ret
xor
inc
lret
mov
ja
push
adc
mov
out
sub
jb
fldcw
pop
imul
shl
inc
pop
mov
outsl
and
mov
stc
hlt
inc
outsl
pop
aam
es
inc
lahf
scas
mov
pop
push
shlb
ljmp
jo
in
loopne
insb
mov
addr16
xor
cltd
jno
push
xchg
xchg
pushw
jmp
push
jmp
outsb
sar
and
sti
push
lea
push
icebp
test
pop
mov
rolb
dec
push
lcall
repz
dec
subb
sahf
je
lret
loop
cmc
or
xor
and
fcmovb
pop
jnp
jle
mov
push
pop
aam
cld
cs
push
mov
pop
nop
mov
test
add
and
out
rcrl
popa
pop
cld
test
add
cs
push
cld
adcl
mov
ret
stos
js
dec
inc
lods
and
push
adc
outsb
push
popa
adc
lods
jmp
cmp
mov
lds
fcoml
sub
cmc
jo
mov
into
pop
das
mov
sbb
xchg
popl
dec
cmpsl
mov
xor
pushf
mov
adc
mov
sbb
xor
fisttpll
sahf
clc
xor
push
xor
test
test
pop
ljmp
mov
push
pop
pop
in
loope
popf
mov
in
add
and
jae
xchg
add
push
jne
xchg
xchg
push
and
data16
stos
dec
mov
ja
out
inc
mov
daa
aam
jo
jl
jmp
cmp
out
pushf
or
popf
repnz
xlat
sub
mov
jno
shll
cld
inc
sbb
orl
insl
or
jb
pop
mov
cmpl
imul
mov
movsl
xchg
sarl
sbb
stos
lock
sub
sbbl
cmpsb
pop
mulb
rcll
adc
cmp
pop
push
add
and
pop
pop
lahf
inc
imul
or
push
imul
sti
or
movsl
push
aam
dec
addr16
or
js
stos
lock
fsubp
icebp
test
jle
int3
inc
sbb
or
xor
add
imulb
jg
cs
rclb
add
adc
or
pop
mov
data16
push
add
ret
es
out
cwtl
imul
and
jo
ss
mov
movsl
shrl
inc
popa
xchg
jmp
fucomp
mov
sarb
insl
mov
mov
xlat
notb
mov
outsb
sbb
pushf
jecxz
dec
or
cld
mov
pop
enter
sub
scas
jb
imul
imul
cmp
pop
add
jbe
pop
movsb
stos
adc
inc
stc
adc
jl
mov
adc
mov
sub
pop
subl
pop
mov
jbe
inc
cld
adc
add
mov
xchg
pop
jno
aas
test
add
inc
push
adc
sbb
daa
push
insl
pop
mov
jge
push
xor
aaa
bound
fdivp
fcomps
cltd
pop
pop
mov
addr16
push
xor
sub
push
inc
lds
jae
inc
dec
xchg
lods
data16
and
pop
mov
test
sub
add
sub
pushf
cmc
pushf
dec
inc
repnz
push
or
sub
push
ss
pop
pop
out
inc
in
inc
out
in
dec
push
cmc
xlat
xor
add
imul
mov
mov
dec
mov
es
or
jb
mov
jne
test
rcl
inc
lds
adc
push
push
and
lcall
mov
out
ja
and
xor
lods
sarb
sbb
jnp
stos
jmp
andb
xchg
pop
push
dec
ret
pop
mov
jns
ret
roll
xchg
roll
test
sub
inc
stos
and
hlt
and
aas
push
dec
push
xor
rolb
cmpsb
andl
fwait
jl
sti
push
mov
leave
add
scas
and
inc
lock
sub
sub
xchg
sarl
jmp
jnp
lret
int
jbe
enter
push
cmp
pop
or
data16
fwait
dec
jle
sbb
xchg
sub
dec
push
or
mov
mov
fisttps
jno
push
pop
mov
push
pop
inc
pop
inc
sbb
push
mov
ret
cmpsb
out
mov
xor
jnp
cltd
ja
jns
adc
sub
mov
mov
mov
mov
and
mov
lods
jp
xor
in
xchg
jmp
mov
xchg
cmc
dec
lock
add
jecxz
mov
stos
mov
lods
out
mov
es
jmp
lret
or
bound
subb
dec
ret
push
lds
cld
mov
hlt
dec
pop
ret
rclb
mov
jae
sbb
push
and
aad
sti
shlb
scas
repnz
xchg
dec
cmp
stc
ljmp
push
pop
outsl
pop
faddl
jecxz
dec
and
es
or
jno
pop
mov
inc
or
xchg
jb
lods
jno
lahf
adcb
cld
and
insb
push
xor
or
imul
push
out
fldcw
int3
sub
ljmp
arpl
dec
pop
ret
jp
insb
sub
les
and
lea
rcl
xor
mov
sbb
arpl
cltd
push
mov
not
in
mov
inc
or
jle
jle
je
add
cmp
xchg
jb
test
dec
clc
mov
mov
shll
xor
push
or
inc
jae
and
lahf
xor
hlt
inc
repz
or
pop
jae
mov
and
or
jmp
mov
insl
mov
push
popa
cmc
dec
add
pop
or
mov
jns
lods
movsl
test
lcall
push
jmp
sub
pop
icebp
out
and
cwtl
jp
js
ss
insb
lods
sarb
xchg
fcoms
push
std
iret
mov
das
sti
mov
mov
dec
sub
test
test
dec
out
cmpb
jb,pt
jge
pop
fildll
movsl
push
lret
xlat
fstpl
lahf
out
inc
cli
xor
iret
out
test
mov
adc
lret
inc
stos
cs
sbb
mov
and
and
jmp
das
fildl
inc
repnz
jge
cmp
rcr
jge
jp
mov
sub
ror
pop
inc
mov
pop
mov
lret
in
lock
mov
push
std
fcmovnb
clc
push
pop
in
mov
ret
aas
insl
xor
xchg
inc
push
sbb
enter
mov
pop
xchg
mov
mov
push
mov
cmc
mov
cmp
jmp
pushf
lods
leave
sbb
test
mov
sbb
sbb
icebp
xor
iret
xlat
out
shlb
xor
xlat
jle
nop
jg
mov
jmp
repnz
popf
push
push
sbb
out
and
push
shl
cmp
jo
nop
sub
push
adc
cld
adc
lock
cmp
movsb
sar
xchg
or
dec
cwtl
push
dec
sbb
xchg
popl
cmp
fldcw
popa
fstpl
in
push
inc
ja
dec
movsl
xlat
outsb
fs
inc
lds
sub
mov
out
pop
bswap
or
add
and
push
cmp
xchg
jmp
lods
repnz
sbbl
or
test
fcoms
outsb
jmp
pusha
int3
shlb
iret
addr16
add
test
adc
divl
push
sub
xchg
mov
in
sub
fwait
mov
fmul
cmc
sbb
pusha
pop
mov
ja
cmc
xor
inc
sub
scas
jns
jb
fs
mov
mov
fimull
lods
sub
pop
lods
push
and
jbe
rolb
dec
cwtl
mov
xchg
leave
pop
xchg
fisttpl
test
jbe
insl
sbb
sub
mov
lret
je
xor
or
fdivr
or
lods
mov
in
shrb
jns
adc
xchg
jno
push
lock
mov
push
pop
jmpw
cmp
xchg
ja
clc
or
jge
in
push
pusha
enter
mov
repnz
cmp
pop
push
sbbl
adc
xor
stos
fstpl
adc
mov
int
das
sub
xorb
sbb
sub
testb
aam
nop
mov
int3
clc
cld
stc
add
inc
or
pushf
jo
fldt
inc
dec
push
repz
in
jbe
cmovnp
in
mov
int
mov
add
stos
cmc
xchg
fneni(8087
inc
pop
in
sbb
cmp
pop
jge
cltd
fistpl
andb
sub
xor
mov
pop
push
arpl
mov
lahf
out
cmpsb
and
shrl
pop
out
mov
movsb
adc
push
cmc
xchg
pop
es
dec
add
popf
mov
int
adc
call
or
dec
stos
fs
ja
pop
mov
out
mov
loopne
push
rcl
mov
sbb
pop
pop
test
or
sub
lods
out
cld
sub
pop
jae
js
mov
js
cmp
fists
or
jbe
inc
lods
mov
ja
pusha
ja
imul
aam
stos
repz
rorb
pcmpeqd
aad
mov
xor
pop
pop
jae
mov
add
jmp
xchg
push
leave
pop
inc
repz
je
ljmp
in
push
push
lret
in
outsb
dec
push
dec
jnp
lods
movsl
fimuls
push
mov
call
jmp
mov
mov
xor
cltd
pop
jge
mov
pop
inc
adc
shll
add
iret
lret
inc
stc
ret
jae
nop
sub
inc
jnp
mov
nop
xor
daa
stos
add
mov
ret
leave
in
jmp
cmp
jae
sub
push
ret
inc
mov
fcmove
cmpsb
ret
lds
ret
cmp
push
imull
inc
jbe
or
xlat
aad
add
cltd
int
jmp
out
pop
mov
roll
fisubl
dec
ljmp
dec
std
dec
aam
mov
cmp
mov
pop
xor
adc
and
mull
aad
movsb
dec
and
cmp
clc
aam
push
push
sahf
jnp
adc
addl
aaa
inc
fdivs
outsb
mov
mov
sarb
fsubrs
repz
add
loopne
inc
adc
or
mov
pop
adc
and
mov
push
jle
cmp
mov
add
push
imul
inc
jmp
mov
xor
adc
mov
pop
push
lahf
sbb
mov
xchg
push
sub
mov
loop
mov
or
int
pop
lock
jge
jmp
mov
lea
sti
mov
outsl
dec
dec
outsb
sahf
dec
mov
lret
jne
orb
xchg
lret
mov
and
xor
mov
mov
leave
or
lock
adc
add
jmp
jbe
lods
and
add
out
shr
arpl
test
ret
in
movsl
jns
cmc
stos
mov
pop
outsb
scas
xchg
aam
divb
cs
lret
outsl
lea
adc
std
jg
int
jo
pop
enter
in
sbb
mov
push
js
loopne
sbb
int3
ja
repnz
sub
ljmp
adc
test
mov
add
pop
pop
mov
push
daa
ret
push
adc
dec
inc
xor
push
insl
dec
jae
or
xor
jg
lea
mov
mov
cmp
cs
and
ret
sbb
xchg
push
scas
add
aad
out
fucomi
jns
dec
insb
jne
jmp
xor
jge
xchg
and
dec
pushf
and
lret
inc
xchg
dec
out
sub
gs
hlt
push
fdivrl
das
push
dec
push
dec
mov
xchg
nop
bnd
push
out
jg
add
push
push
lahf
xchg
xchg
stos
in
jbe
jns
popf
aad
mov
sbb
xor
push
rclb
xor
test
jg
aad
loope
adc
sti
jmp
fisttpl
sbb
ds
cmp
xchg
lea
sbb
jle
aad
mov
sub
test
pop
clc
inc
add
shlb
rcr
xchg
pop
hlt
popa
and
jg
js
jnp
mov
pop
xchg
sti
cmp
pop
stos
repnz
into
fnsave
xchg
jno
loope
xor
rol
repnz
add
sbb
repnz
fcompl
ljmp
xchg
xlat
or
imul
andps
inc
xchg
xor
jnp
cmp
mov
ss
divl
sub
push
nopl
or
cmp
adc
frndint
xor
add
repnz
jle
pop
xchg
mov
cli
dec
adc
out
gs
mov
mov
cwtl
fwait
push
pushf
dec
cwtl
lods
loope
dec
mov
or
jno
repz
jge
jbe
xchg
mov
or
cld
mov
neg
pop
inc
pushf
lahf
lock
repnz
pop
jmp
mov
enter
push
loopne
xchg
hlt
arpl
mov
cmp
jl
ljmp
sbb
insb
and
push
mov
push
dec
pop
stos
pusha
adc
fstl
add
inc
andb
clc
repz
test
dec
inc
ffreep
push
dec
in
dec
sbb
popf
adc
push
mov
mov
add
pop
in
cmp
les
xchg
jne
xor
cli
dec
sub
popf
jp
arpl
adc
mov
out
stos
in
stc
mov
in
dec
shl
cmpl
xchg
mov
cmp
adc
xor
mov
jmp
int
sub
cmp
or
pop
movsl
mov
dec
addr16
sti
fwait
mov
mov
push
jb
xchg
hlt
lahf
sub
pop
lods
movsb
jns
pop
out
in
addr16
rclb
pop
dec
push
jno
out
fidivl
pop
sub
insb
lahf
push
repz
or
mov
cld
mov
push
cli
imul
pusha
jnp
ljmp
pop
dec
inc
pop
or
adc
daa
out
es
and
push
pop
jle
icebp
imul
lcall
jbe
lahf
outsb
jne
cli
je
sbbl
movb
sbb
arpl
jne
sub
movsb
aam
out
pop
ja
pusha
sbb
push
jae
xchg
jbe
jns
pushf
lea
ljmp
jb
mov
in
cmp
fdivrp
ffreep
jp
into
sti
inc
faddl
cmp
cmp
pop
or
shrb
xor
xchg
jle
movl
jmp
fisubs
and
mov
push
sbbl
push
xor
in
xchg
sub
xor
mov
dec
aam
mov
outsl
sbb
push
push
lods
movsb
jne
dec
fs
mov
inc
pushf
fcoml
je
popa
or
mov
scas
pop
and
rclb
jnp
ljmp
adc
mov
aas
in
addr16
mov
lods
nop
scas
mov
sahf
adc
ds
mov
sbb
jmp
daa
sbb
int
enter
push
repnz
orl
ficompl
pop
in
mov
leave
mov
mov
scas
stc
push
sub
dec
test
jno
jnp
dec
mov
mov
daa
ret
aaa
fwait
sub
jge
xor
ret
loop
jb
sbb
test
add
xchg
in
outsb
cld
rcr
push
or
lcall
ja
xchg
xlat
adc
je
lods
movsl
jecxz
icebp
pop
aas
repz
xor
inc
testb
scas
add
sub
not
icebp
sbb
fstpl
pop
nop
mov
mov
mov
mov
ss
mov
sbb
dec
fdivrs
cmp
mov
jle
pop
loop
push
push
andb
pusha
mov
xchg
mov
mov
sub
push
xchg
or
test
fcomps
inc
bound
mov
xchg
es
jnp
mov
and
jecxz
xchg
cmpsl
call
repz
mov
rol
xchg
pop
jo
sub
cmp
pop
push
jno
ficomps
fwait
out
xchg
ja
mov
mov
loopne
jecxz
repnz
in
adc
sti
xchg
out
leave
loope
xorl
push
in
aam
push
sti
stc
cmp
adc
mov
jmp
nop
dec
stos
cmc
mov
push
cmp
cmpsl
mov
fsubs
cmp
bound
sub
or
cmp
lods
inc
push
inc
popa
dec
push
repz
xchg
jl
jnp
leave
hlt
cmp
fisttpll
mov
shlb
arpl
xor
xor
sarl
cmp
mov
popf
mov
sub
push
imul
cmpsb
inc
mov
pop
call
mov
jle
jge
ja
sbb
xchg
xorb
mov
out
jae
sbb
xchg
sub
jo
adc
or
int3
int3
push
lea
cmc
aaa
adc
andl
xchg
add
dec
ljmp
push
dec
or
xor
mov
inc
sbb
movsb
fisubrl
pop
sbb
std
js
test
mov
adc
fsts
add
xor
hlt
loop
sub
xor
sub
sub
scas
add
movsl
xchg
idivl
insb
push
inc
in
ret
jecxz
add
pop
inc
sbb
pop
and
push
fwait
lods
movsl
lret
lods
push
or
lea
aas
repz
in
xchg
add
push
cmp
inc
in
cmpsl
cmpsl
adc
fisttpl
adc
arpl
push
in
aaa
addr16
repz
sbb
dec
add
push
jle
sbb
mov
or
fs
mov
or
outsl
sbb
lret
and
xor
sbb
adc
call
mov
out
in
jecxz
dec
out
pop
inc
ss
push
in
dec
pop
dec
xlat
push
cmpsb
lds
daa
xor
push
push
insb
ljmp
cmp
pop
shr
ds
repnz
adc
and
cmp
cmpsl
push
jbe
lahf
shrl
mov
and
pop
mov
mov
lock
sbb
xchg
test
lock
and
iret
pop
imul
mov
popf
scas
sti
loop
pusha
imul
icebp
idiv
loope
rcr
test
ret
sahf
push
xchg
or
sbb
adc
xchg
adc
mov
inc
lods
aam
push
mov
test
mov
sub
mov
movsl
fs
pop
jge
push
lods
das
ja
std
sub
scas
cmpsb
mov
push
imulb
fistps
stos
js
stos
xchg
dec
inc
shll
or
xchg
pop
std
inc
int
and
repz
dec
cmp
scas
aad
xchg
mov
mov
movsb
cmp
stos
push
jmp
scas
and
jmp
xor
aad
aas
dec
mov
push
adc
fwait
gs
imul
adc
lret
cmp
jle
loopne
sarl
sar
ja
loope
jg
inc
push
push
pop
ja
pop
lods
lret
jnp
sub
xchg
fsts
adc
das
add
mov
lock
xchg
arpl
fnstenv
lock
push
dec
aaa
jl,pt
push
repnz
adc
in
in
cld
sub
push
sub
mov
xor
sbb
adc
cltd
cmp
sub
sub
test
mov
mov
adc
xchg
and
mov
xchg
test
sub
sub
push
stos
lret
jnp
pop
mov
adc
jl
arpl
loope
jl
arpl
cli
jns
cs
pop
mov
movsb
loop
lods
push
and
fiaddl
pop
pop
lret
lret
pop
imul
sbb
aam
jecxz
daa
or
jecxz
mov
adc
arpl
popl
add
pop
inc
aas
xchg
or
xchg
pop
and
call
and
inc
and
sti
sti
mov
push
mov
inc
imul
adc
popa
arpl
mov
xor
sbb
and
test
mov
inc
loope
inc
stos
subl
stc
xor
cwtl
xchg
testb
mov
xchg
mov
stc
shl
imul
int
inc
mov
xor
in
jnp
dec
sbb
out
in
rcll
ss
sahf
mov
push
mov
jnp
out
lret
fistpll
jle
sbb
add
arpl
loop
insl
aad
jne
pop
add
sbb
cmp
incb
sbb
jmp
sbb
xchg
movsb
in
cmpl
mov
push
test
les
testb
adc
clc
leave
inc
cltd
fcompl
push
add
mov
lods
daa
push
enter
enter
jne
pop
inc
rclb
sbb
sub
lods
jae
mov
nop
stos
sbb
jns
mov
mov
cltd
or
pop
mov
xor
sub
adc
imulb
std
cmp
aad
push
add
cs
add
inc
push
leave
push
and
stos
cmpsb
je
push
andl
jbe
xor
xchg
jl
jle
fists
es
lret
xor
mov
push
or
mov
push
stc
push
mov
mov
xchg
pop
lcall
lahf
test
cmpxchg
or
adc
ror
xchg
stc
or
jns
pop
jl
ja
push
std
mov
ss
lds
loope
cltd
xlat
sbb
arpl
xchg
repnz
sbb
stos
cmp
pop
out
gs
mov
dec
jl
out
add
movsb
adc
cmp
sub
shrl
lret
xchg
cltd
mov
cwtl
outsb
lods
xchg
cli
mov
xor
insl
cwtl
jnp
lock
fcmovnb
inc
cmpsb
pop
pop
in
shlb
subb
insb
pop
bound
mov
mov
dec
loopne
enter
jle
adc
or
lret
sbb
mov
xchg
mov
fidivrl
nop
test
aas
mulb
or
cld
cltd
xor
js
cs
mov
and
or
push
sbb
jg
xor
sub
pop
arpl
lret
jecxz
aad
xor
sub
mov
xor
in
lahf
and
pop
push
cli
stc
dec
and
jl
jo
stos
cmp
notb
sbb
rcrl
jo
test
push
mov
jnp
sub
inc
icebp
mov
sub
pushf
cmp
out
test
fimuls
pop
sub
aam
jl
push
rolb
pop
je
lods
dec
dec
negb
in
dec
out
xchg
inc
mov
popa
data16
add
test
ret
push
shrl
repz
mov
dec
and
jmp
cltd
cwtl
outsl
subb
int
lcall
popf
fwait
inc
movsl
aaa
fstpl
fldenv
or
sbb
aaa
aaa
sbb
jg
cltd
ljmp
shl
mov
mov
xchg
lods
int
fcomps
rorl
test
pop
mulb
mov
and
pop
shll
or
and
xchg
dec
adc
push
jl
test
lods
aaa
and
inc
or
mov
mov
out
pop
mov
rorl
leave
cmp
ret
arpl
pop
test
add
int
push
imul
cltd
pop
xor
dec
add
lret
fdivrs
sbb
int
cmp
sub
xchg
jle
popa
xor
test
hlt
js
stc
mov
xor
xchg
out
orb
inc
cmpb
sahf
push
iret
jo
mov
xor
sub
lret
movsl
mov
push
outsl
test
sahf
and
xor
cmp
or
or
outsb
stos
aas
mov
movsl
push
dec
inc
rcrb
cltd
lret
popa
insl
andl
insl
call
mov
nop
cmp
sahf
xor
xchg
sub
jg
int
pushl
and
ret
mov
mov
push
pop
fstpt
and
jmp
test
outsb
hlt
pusha
je
in
push
jl
cmp
ds
les
push
or
adc
call
lcall
das
loope
sbb
ds
aad
adc
enter
and
xchg
xchg
add
imul
cs
adc
jg
xchg
in
cmp
adc
ljmp
adc
sbb
xchg
sub
insl
jae
inc
mull
cmp
add
in
popf
fwait
jmp
out
hlt
nop
test
mov
mov
test
xchg
push
aaa
in
fcmovu
sbb
ja
jle
std
loop
or
rol
sub
mov
outsl
call
push
inc
pusha
and
rorl
sub
in
repnz
rcrb
insb
out
jnp
mov
push
sbb
jp
mov
mov
push
add
adc
inc
mov
sbb
or
mov
adc
lds
sub
pop
test
scas
add
cmp
js
bound
and
add
jle
push
or
out
pavgw
cmc
cmp
ds
clc
pop
loope
stc
push
test
cmpsb
adc
bound
lret
xor
jp
clc
adc
cmpsl
das
rcll
std
push
mov
jbe
scas
xorl
sub
xchg
inc
lret
dec
mov
jo
dec
inc
sbb
std
xor
pushl
int
repz
fs
adc
imul
pop
cmp
js
enter
hlt
dec
rorb
shll
and
lret
mov
adc
roll
lret
and
cmpsb
dec
add
pusha
out
and
add
mov
inc
std
mov
lahf
adc
mov
imul
cmp
or
or
jns
pop
xchg
pop
mov
adc
sbb
xor
sub
lea
dec
enter
or
mov
insb
imul
xor
mov
ret
mov
mov
cltd
lcall
cwtl
inc
les
jnp
pop
ss
pop
jmp
mov
xor
jl
sbb
repz
outsl
mov
stos
adc
dec
inc
pusha
sbb
stos
out
fiaddl
xlat
das
pop
popf
out
add
daa
mov
jp
dec
ret
and
mul
push
stos
xchg
in
sbb
jb
sub
dec
in
insl
sahf
adc
andb
out
xor
lods
inc
fistpll
or
das
xchg
outsb
data16
mov
mov
icebp
arpl
add
xchg
push
xor
and
cmp
mov
dec
adcb
sub
mov
xor
enter
mov
fs
int
inc
mov
fs
cmp
cmp
fisubrl
movsl
xlat
xor
dec
inc
in
test
push
jmp
pop
push
inc
in
decb
insb
mov
pop
jne
ja
jg
mov
call
ret
lahf
mov
add
ror
xchg
test
jmp
fistpl
fsubrl
or
inc
sarb
jg
pop
and
popa
cli
lahf
mov
mov
and
pop
inc
inc
das
xor
cmp
ret
test
mov
sahf
dec
test
and
cwtl
in
cmpsl
js
push
sbb
idivb
sub
leave
int3
push
mov
lods
iret
fisubs
jl
cli
push
cli
jmp
sbb
test
outsb
push
outsl
call
cmc
pop
idiv
loop
lea
fistps
pusha
inc
hlt
fists
mov
flds
pushf
ds
add
cmp
inc
popf
test
jnp
out
sbb
and
lcall
enter
cmp
mov
push
pop
xor
frstor
mov
into
mov
cs
out
cmp
pop
push
out
cmp
stos
cmp
or
cmpsl
bound
aam
xor
pop
divl
imul
loope
cmc
jg
in
jns
mov
inc
dec
loop
sbb
sub
inc
inc
mov
and
cld
push
test
sahf
cwtl
repnz
adc
or
sub
test
jb
movsb
insl
inc
loop
mov
mov
jl
push
lahf
inc
cli
cmp
pop
jne
clc
sarb
xchg
xchg
repnz
pop
cmp
xchg
cwtl
jae
push
mov
add
pop
push
mov
js
mov
cltd
cwtl
add
inc
andb
in
rcr
int
xlat
mov
push
mov
mov
mov
mov
cmc
sbb
lods
popf
out
cs
aam
xor
mov
enter
jne
out
fiaddl
jb
repnz
xor
mov
xchg
dec
sub
pusha
je
mov
leave
cli
inc
daa
arpl
cmp
xchg
imul
out
mov
xchg
nop
ror
xlat
mov
test
enter
les
mov
call
jg
lcall
fnsave
daa
inc
dec
in
lret
out
jecxz
xor
dec
push
arpl
shlb
inc
jecxz
popf
push
movsb
push
add
dec
mov
orb
clc
mov
imul
loope
addr16
aam
pushf
ss
cli
push
cmpsb
mov
loope
vcvttss2si
pop
ss
rcr
inc
add
test
xlat
outsb
xchg
int3
cmp
adc
mov
pusha
cmp
add
jae
in
repz
aam
dec
sub
cld
jmp
push
out
sub
outsl
or
add
repz
xor
mov
inc
mov
cmp
popa
jo
inc
dec
mov
jle
out
jbe
aaa
enter
iret
xchg
cmc
cmpsb
cmp
dec
xchg
and
aas
adc
pop
adc
sub
dec
mov
fisttps
xor
pop
cmp
shl
push
mov
cmpb
mov
rorl
test
sahf
jne
leave
pop
mov
shr
xor
fdivs
fmull
mov
imul
jmp
sbb
pusha
pop
mov
jmp
insb
push
xor
orl
call
mov
nop
adcb
mov
int3
push
fldenv
push
std
xor
pop
inc
int3
aad
cltd
shrl
jmp
or
or
or
std
mov
push
cli
sahf
orb
mov
ret
in
mov
in
inc
or
inc
les
mov
sbb
fiadds
icebp
lock
and
sub
call
cld
loop
inc
pop
loopne
mov
pop
stos
push
out
mov
lret
ret
int3
aas
jp
jbe
inc
in
push
cmc
push
push
aam
sub
stc
or
gs
ja
loope
jl
aad
pop
xor
lcall
xchg
mov
clc
les
shrl
cmp
cmp
cmp
mov
cmove
inc
dec
add
fidivrl
xor
adc
leave
xchg
mov
push
add
mov
aam
ret
and
add
sub
int3
hlt
cmpsl
mov
xor
outsl
mov
cs
stos
shrl
fadds
dec
adc
outsl
or
loopne
xchg
mov
mov
cmp
adc
enter
ljmp
test
test
je
mov
subb
iret
or
outsb
stc
mov
adc
ljmp
dec
pushl
insb
mov
jbe
inc
mov
js
fildll
iret
xor
aaa
mov
das
bnd
ss
pop
sahf
sub
xchg
sbb
orb
loope
xchg
mov
jg
notb
push
and
mov
lret
and
repz
push
jno
in
jne
jg
push
xor
hlt
shr
jb
std
pop
add
ret
jns
fsubs
or
jle
and
rorl
insl
cmp
aas
push
dec
pop
rcl
and
push
ss
xchg
xor
sahf
or
xchg
mov
cmp
dec
xchg
sbb
adc
pop
cmp
inc
subl
or
jbe
subl
leave
es
gs
and
dec
add
dec
shlb
mov
lods
mov
sbb
push
fisubl
hlt
pusha
mov
mov
push
push
and
mov
mov
int3
sub
pusha
jle
loop
pop
sbb
dec
arpl
enter
clc
pop
xor
jp
dec
cmp
cmp
jno
mov
imull
mov
push
dec
and
sub
xchg
mov
or
in
adc
sub
cwtl
sbb
or
xchg
jp
cmp
adc
ds
cwtl
fstl
cmp
sbb
pop
shrb
fisubrs
add
or
inc
pop
shl
scas
jg
inc
pop
or
xchg
or
fwait
sub
loope
test
and
dec
movsl
data16
xchg
andb
sub
in
mov
mov
dec
add
ljmp
addb
or
xchg
pushf
ljmp
pop
jae
out
jecxz
lds
mov
inc
mov
lret
sbb
push
addr16
pop
cmp
mov
lods
rolb
repnz
scas
fwait
in
shlb
xor
loopne
in
push
xchg
or
aas
pop
imul
popa
or
xchg
arpl
push
jo
lock
ljmp
insb
pop
sub
add
jb
pop
int3
jg
jg
rolb
push
jnp
fs
jo
and
cltd
movsl
lds
cltd
hlt
mov
jge
lods
xchg
sbb
call
repnz
push
jno
ror
push
push
cmc
inc
jecxz
fs
mov
enter
add
or
xchg
jns
fisubrs
sbb
sbbb
fmuls
mov
sbb
mov
pop
shll
repz
rolb
gs
sub
cmpsl
xor
jno
imull
jp
or
imul
loopne
int3
addr16
call
mov
arpl
sbb
mov
pop
add
stc
jp
out
rolb
sub
ss
pop
aad
adc
xchg
sub
ret
lods
call
sbb
pop
pop
sbb
mov
mov
insl
cmp
jge
xor
sbb
addb
inc
dec
lcall
xchg
frstor
mov
fistl
jp
call
fistpll
insl
push
in
pop
cld
cmp
test
jp
pop
daa
add
sub
sahf
sarb
pop
psubb
jle
lods
lret
mov
stc
or
or
xchg
mov
adc
jno
jle
int
add
sahf
adc
fs
cs
sbb
test
rol
sbb
notl
cmc
cmc
jo
push
or
testl
shlb
sbb
add
fildll
shll
lahf
pop
mov
pop
int3
dec
out
push
aad
jg
mov
inc
testl
xor
dec
or
pop
flds
jno
aas
pop
rolb
icebp
imul
adc
pop
fldcw
cmp
pop
sbb
data16
das
inc
repnz
cld
dec
ficoml
push
cs
lock
in
or
mov
pop
push
sub
dec
sbb
data16
inc
sub
adc
mov
push
pop
loop
int
test
sub
jbe
sarb
cmp
mov
mov
fwait
xor
fiaddl
dec
jbe
repz
fwait
ds
inc
dec
pop
shlb
cmp
mov
push
cmpsl
subl
jno
xchg
shl
pop
roll
sub
movsb
pusha
sbb
jg
pop
mov
cmp
inc
mov
cmp
test
pop
sbb
outsl
sub
adc
addb
mov
mov
add
adc
adc
mov
shl
jno
xor
lods
mov
sti
cli
or
out
cmpsb
sbb
mov
cmpsb
inc
adc
xchg
push
loop
sbb
in
adc
fmul
sub
in
mov
and
mov
jns
arpl
scas
sub
in
jl
lret
outsb
push
pushf
xchg
mov
in
call
movsb
push
jle
loope
inc
jl
inc
inc
outsl
adc
jge
push
cwtl
hlt
adc
xor
callw
pop
movsl
xchg
add
or
mov
push
and
mov
bound
lahf
jb
ja
nop
hlt
sub
lock
dec
jp
push
insl
enter
cmp
cmp
mov
loope
in
lods
dec
sub
mov
mov
loopne
movsl
cltd
adc
aas
popf
clc
jo
pop
loop
inc
jmp
xor
mov
stos
movsb
pop
in
les
push
sbb
shlb
cs
and
mov
dec
mov
faddl
imul
lea
roll
inc
int3
filds
lcall
add
sub
movsb
pop
add
mov
imulb
or
and
sti
aaa
add
int3
out
dec
ljmp
mov
xchg
insb
test
or
or
outsl
mov
xchg
incl
cmp
and
loopne
jnp
ljmp
jg
mov
adc
pop
out
data16
lcall
gs
roll
push
jo
xor
sbb
clc
hlt
fnsave
mov
pop
out
scas
xor
cmp
std
popa
cwtl
je
jmp
dec
fistps
leave
sbbb
add
pop
in
mov
pushl
int
jno
mov
push
cli
or
add
or
xor
jmp
jbe
sbb
stos
call
cs
mov
adc
cli
fisttpll
scas
or
ret
popa
jle
orl
loop
and
call
jle
adc
pop
sbb
std
pop
xchg
pop
cltd
mov
push
xchg
insl
push
out
dec
hlt
call
scas
mov
push
mov
shl
int3
or
cltd
push
push
fidivrs
out
adcb
cmpsl
fsubrp
pop
pop
jb
xchg
adc
lods
into
mov
push
and
jl
xor
bound
nop
movsl
mov
push
push
lods
movsl
aaa
rcll
js
test
rclb
inc
rcl
dec
or
xor
or
insb
nop
movsb
cwtl
sbb
out
push
shll
adc
inc
sub
dec
add
push
cmp
stos
aaa
jg
rcrl
mov
and
arpl
fnstsw
ljmp
ds
mov
pop
inc
pop
sub
idivl
mov
sbb
sbbl
bound
std
add
enter
add
or
cmp
and
xlat
cmp
dec
mov
fs
jg
mov
adc
add
xlat
decb
xlat
pop
pop
pop
js
or
sahf
push
into
cmpb
repnz
and
roll
jp
pop
sub
sarl
mov
jl
cmp
push
stos
ljmp
inc
stc
movb
and
mov
xchg
or
test
testb
aas
sub
nop
and
and
pop
jo
cli
dec
stos
testl
dec
xor
addb
int
pop
and
mov
jns
adc
pusha
or
lds
dec
xchg
shll
inc
cmp
stos
mov
mov
mov
movsl
jecxz
pop
adc
xchg
lods
insb
in
daa
jg
bound
push
sub
jmp
xchg
mov
dec
mov
popa
enter
adc
xchg
stc
das
je
std
ds
mov
dec
inc
call
and
push
xchg
cli
or
cmp
jno
push
icebp
mov
adc
pushf
imul
lods
and
imulb
and
fimull
repz
insl
xchg
xor
and
pop
sbb
xchg
fs
lret
pop
bound
dec
fsubp
add
sub
outsb
ret
in
sub
mov
dec
stc
pop
or
inc
jmp
addr16
sub
iret
stos
pop
neg
mov
ja
ret
lahf
push
sbb
sbb
aaa
out
out
inc
jnp
mov
pop
sbb
dec
rolb
lods
inc
pop
and
jno
adc
sub
mov
dec
dec
popf
out
dec
addb
lret
xor
lock
jne
sar
repz
mov
lcall
daa
into
inc
xchg
neg
adc
dec
sub
in
imul
mov
mov
sahf
scas
xchg
jns
and
frstor
cli
call
pop
mov
pop
and
jp
js
cmp
stos
or
leave
call
xchg
inc
dec
ljmp
aam
loope
or
stos
sbb
mov
mov
cmp
lods
mov
adc
push
push
arpl
sbb
bound
jl
jmp
das
lea
mov
and
push
inc
sub
int
jnp
gs
loop
cmp
cmp
out
dec
aaa
push
repnz
jnp
push
xor
movsb
dec
mov
test
cli
push
test
inc
sbbl
inc
xchg
ja
cmpsl
jne
sub
nop
cmp
push
lea
mov
std
out
cmc
fwait
cmpsb
test
repz
sub
stos
adc
mov
mov
outsl
cmp
ljmp
stos
mov
jge
push
mov
mov
inc
add
movsl
ja
and
mov
adc
jns
mov
cwtl
fbld
test
mov
lock
arpl
mov
mov
pop
sub
loopne
and
jnp
push
in
ljmp
aam
int3
mov
lahf
push
pop
outsb
leave
fsubrl
iret
push
pusha
fidivs
enter
jp
push
and
arpl
jecxz
imul
lahf
pop
int3
sarb
aam
fsubrs
mov
cmpsb
js
movsb
adc
adc
and
add
push
jl
ja
adc
adc
hlt
and
in
push
dec
or
mov
jbe
stos
xchg
fnstenv
sbb
add
jle
mov
daa
or
sub
rcll
inc
jnp
fcom
inc
clc
call
bound
filds
inc
xchg
mov
push
jne
ljmp
cmpsb
sub
mov
int3
iret
scas
lea
fistl
sub
std
test
sub
leave
test
and
mov
inc
cwtl
mov
sbb
jg
dec
aad
sbb
popa
adc
popa
ss
daa
addr16
test
push
jae
fisttps
out
xchg
arpl
shlb
jae
lahf
stc
fmulp
mov
pusha
xchg
jne
mov
into
idivb
sub
add
bound
call
mov
jns
dec
mov
or
xchg
popa
stos
push
test
push
dec
cmp
or
ljmp
lcall
add
stos
lret
faddp
out
adc
int
mov
mov
fdiv
mov
sahf
jmp
mov
ja
and
mov
cmp
jnp
ror
in
mov
pop
xchg
stc
shlb
stc
cmp
push
imul
les
mov
xor
xor
inc
dec
nopl
sub
mov
cli
push
std
es
repz
iret
pop
or
outsl
movsl
xor
adc
negb
cmp
fisubl
mov
or
xlat
in
insb
push
push
rol
adc
and
mov
xchg
sub
add
xor
adc
flds
xor
aas
ljmp
pop
out
mov
dec
pop
xor
add
insl
leave
aas
roll
dec
xor
ljmp
and
sub
push
je
imul
fcompl
testl
imul
inc
mov
or
sbb
sarl
ret
das
sub
pop
xor
xlat
inc
xor
sbb
mov
orb
xor
movsl
dec
mov
inc
jo
xchg
fdivrs
sahf
mov
fimull
mov
imul
cmp
lods
push
shrb
cltd
fnstenv
pop
xchg
or
loope
push
cmp
rol
fidivl
pop
gs
movsb
rolb
aam
loop
jecxz
inc
inc
lahf
dec
pop
adc
pop
insl
mov
push
and
jne
cmp
clc
in
jnp
and
xor
jle
sar
mov
pusha
es
js
repz
loop
jl
mov
cmp
mov
mov
xor
mov
aam
dec
orb
and
pop
lcall
out
inc
mov
cwtl
dec
dec
or
push
enter
push
out
fidivs
mov
es
insl
sub
test
xor
ljmp
test
jne
bnd
nop
jne
xchg
shll
lods
lods
inc
mov
cmp
sahf
xor
sub
movsl
mov
mov
inc
into
stc
popa
mov
lret
adc
jge
cmp
or
dec
in
scas
xchg
xlat
sti
add
inc
test
dec
imul
outsl
jbe
incb
mov
icebp
or
jae
vmwrite
pop
xor
and
testb
stc
xchg
push
das
mov
mov
lods
jae
lock
xchg
xor
sub
mov
cmpsb
push
xor
adc
sub
ljmp
or
push
in
cli
and
adc
ror
mov
mov
out
mov
mov
scas
shr
xchg
or
or
mov
shr
mov
js
mov
je
cmc
psllq
inc
fimuls
adcl
and
sub
es
cmp
ljmp
xchg
sub
leave
mov
pop
mov
and
mov
add
jl
rolb
ss
movsl
rcr
adc
in
and
arpl
mov
js
imul
rcl
push
testl
les
inc
lret
pop
pop
out
enter
lcall
clc
dec
enter
and
jmp
mov
hlt
pop
fwait
and
xor
shlb
mov
dec
sbb
cli
leave
mov
imul
inc
mov
xchg
inc
xchg
nop
insl
pop
cli
out
mov
push
loope
xchg
movsb
sub
int3
push
jnp
xor
outsl
fsts
dec
or
inc
lock
jb
pop
push
and
cmp
cs
mov
adc
ret
mov
mov
push
xor
mov
out
aas
cmp
js
or
inc
mov
pop
ror
mov
inc
mov
into
lea
enter
push
pop
stos
mov
bound
imul
aam
xor
std
aad
pusha
cmp
psrad
aas
mov
mov
xchg
xor
add
adc
cmc
lods
mov
in
loopne
pop
adc
or
cmpsb
lea
movsl
incb
mov
mov
adc
cmp
sbb
aad
and
int
ret
ret
sub
lea
mov
inc
bound
jnp
xor
mov
test
mov
mov
addr16
shll
shlb
leave
scas
add
xor
dec
xor
push
shrb
mov
add
adc
lret
adc
into
cwtl
cld
int3
popf
notl
out
fcmovu
fdivrl
ss
daa
js
push
xlat
xor
jnp
cmp
insl
jns
sub
je
loope
xor
aad
call
cwtl
lret
sub
int3
sarb
dec
faddl
sti
dec
dec
adc
inc
jp
push
popf
int3
aas
inc
push
lret
loopne
sarb
imul
pop
out
pusha
sbb
adcl
das
mov
stos
sbb
push
or
lods
test
add
cmpb
popa
xlat
push
sbb
fdivl
mov
ret
push
sbb
push
enter
push
mov
loope
lods
ret
fs
sub
insb
insl
cmpsl
adc
cmp
cmp
rol
mov
mov
push
jg
cmp
movsl
lods
lods
aas
or
xor
push
dec
xor
push
adc
ss
lods
mov
add
xor
out
hlt
out
out
hlt
lods
add
jae
das
or
sub
std
push
pop
push
add
sub
ja
pop
into
cmc
add
xchg
in
pop
sahf
decb
imul
xchg
lcall
xor
push
jb
fwait
mov
fbld
xchg
sbb
mov
lcall
lcall
fwait
stc
arpl
push
push
je
in
push
push
push
mov
popf
lea
jg
inc
lods
dec
sub
xchg
cmpsb
pop
paddsb
pop
clc
pop
stc
inc
dec
fstl
ret
mov
mov
xor
or
insl
test
adc
pop
pop
add
lcall
xor
and
inc
mov
call
enter
and
jmp
pop
sti
stos
test
movsb
mov
test
hlt
fstpt
out
repnz
adc
mov
jle
sbb
push
jmp
leave
lret
arpl
push
cmovbe
rorl
jns
in
pop
xchg
call
pusha
xlat
into
inc
out
mov
in
jo
mov
out
iret
rolb
push
iret
aad
mov
xchg
push
or
ret
add
rorl
cmc
bound
aas
jmp
cmpsb
jp
pop
dec
inc
push
repz
pop
xor
mov
and
pusha
cmp
mov
out
addr16
xor
pop
enter
pushf
sub
sbb
sbb
push
inc
cmp
mov
imul
mov
push
das
cmp
insl
mov
roll
push
cmc
sub
sub
sbb
pop
mov
out
mov
hlt
xor
jo
inc
test
pop
sub
mov
es
jns
inc
xchg
addb
mov
insb
and
mov
fdivr
and
adc
mov
sbb
push
icebp
imul
das
inc
in
wbinvd
cltd
call
mov
push
stc
adc
push
jl
imul
push
dec
insb
push
pop
mov
pop
jmp
or
in
push
or
mov
test
out
dec
jnp
aam
cmp
push
notl
in
jo
pop
pop
pop
pop
testl
loop
mov
ljmp
sbb
push
and
pop
jae
xlat
outsb
sub
jns
push
mov
pop
int
push
xlat
aas
psllq
dec
mov
lret
mov
sarb
leave
xlat
out
ljmp
cld
dec
sbbl
xor
pop
popf
loop
mov
mov
inc
sbb
out
xchg
orl
xchg
nop
push
or
jl
stos
insb
mov
xlat
xchg
sbb
out
stos
hlt
lcall
sub
dec
jo
jl
ret
mov
mov
das
pop
std
sbb
loopne
leave
cmp
mov
pop
adc
test
push
outsl
sbb
mov
cli
mov
mov
dec
invd
cld
popa
pop
repz
call
mov
pushf
mov
mov
push
mov
add
push
sbb
inc
iret
and
jge
test
cmpsl
or
xor
lea
mov
add
notl
daa
clc
or
out
mov
or
je
xor
pop
aam
mov
or
mov
sbb
call
mov
jnp
xchg
sub
cmp
add
rclb
popa
add
out
jno
push
xchg
and
lods
das
hlt
sub
fstl
sbb
je
cltd
mov
lret
or
xchg
jle
jb
add
mov
movsb
fucomip
fisubs
jae
movsl
adc
add
xor
mov
inc
nop
pop
push
loop
insb
mulb
add
push
repz
or
fidivs
push
jns
cli
dec
mov
and
movl
cmp
in
dec
mov
cld
ljmp
cmp
mov
jle
cmp
xorb
lret
xchg
xchg
mov
mov
mov
jnp
mov
fildll
xchg
out
cmp
jle
insb
or
orps
imul
mov
xchg
sbb
pop
lret
adc
pop
popa
add
inc
push
xchg
pop
mov
iret
jge
in
hlt
mov
and
icebp
push
gs
fldt
add
roll
and
data16
xorb
movsb
pop
mov
imul
loope
jmp
xlat
jae
cmpl
test
sbb
cmp
and
mov
cli
in
js
pop
mov
cmc
leave
jg
insb
mov
mov
dec
mov
roll
cmc
aaa
pop
lods
les
adc
rcll
es
cmc
jp
xchg
bound
gs
dec
mov
sbb
xchg
sbb
xor
cltd
aaa
cmpsl
or
movsl
sub
mov
fcom
and
lock
lods
mov
jl
cmp
sti
inc
movsb
shrb
or
sub
mov
adc
and
pop
gs
and
or
cmp
jae
dec
pop
insl
aam
sub
adc
add
sbb
sarl
jnp
mov
mov
pusha
pop
xor
popl
movsl
flds
test
jae
imul
push
popf
mov
push
ficomps
inc
mov
cmp
sub
fcoms
mov
pop
jle
mov
cmpsb
and
movsl
sarl
or
push
dec
xor
push
sar
sub
push
outsl
sbb
pop
cmpsb
lds
cmpl
push
lret
push
ret
mov
scas
out
ljmp
es
in
lea
pop
fucomp
test
mov
inc
mov
jne
jnp
add
dec
jl
hlt
and
jno
mov
inc
pop
dec
lret
popf
dec
xchg
pop
jl
stos
sbb
and
or
and
notl
jle
lahf
cmpsb
pop
mov
subb
lret
fnstsw
push
mov
insl
stos
mov
pop
ret
or
jno
in
inc
cmp
xchg
rorb
cmp
cmp
ljmp
and
or
sub
repnz
mov
adc
outsl
je
ret
hlt
loop
adc
lods
and
sti
adc
cltd
testb
int
push
nop
and
lds
js
fsubrs
dec
pop
and
sub
inc
or
and
in
test
mov
sub
out
mov
shrb
imul
orb
mov
push
inc
lea
mov
mov
or
stc
fs
sub
or
pop
aad
jg
push
rorl
out
pushf
pushf
lock
cmp
cmp
xchg
cld
push
push
icebp
loop
mov
jp
hlt
mov
xchg
dec
inc
xlat
cwtl
fstpl
into
dec
dec
repz
sti
lcall
ja
push
daa
mov
pop
jecxz
mov
insl
jb
and
sub
lret
fsubl
inc
cmp
xor
out
imul
fnsave
imul
mov
pop
dec
or
push
in
popf
stc
sbb
inc
in
data16
out
jnp
push
pop
mov
adc
cmpsb
cmp
cli
in
enter
adc
sbb
pop
dec
cli
xchg
pop
adc
rolb
popf
mov
inc
js
xor
add
pop
sub
jnp
outsb
pop
push
cmp
xchg
cld
stos
fdivl
ret
aaa
xor
and
fcos
cmp
std
pop
divb
gs
adc
out
imul
aad
dec
jmp
xchg
gs
sub
xchg
pop
mov
jg
lret
pop
cltd
fidivrs
ret
add
mov
xchg
mov
sbb
pop
adc
stos
adc
rcll
bound
pop
mov
push
nop
cltd
dec
mov
into
sub
or
pop
lret
sub
jae
and
mov
shrb
cmp
sti
outsl
sub
sbb
enter
dec
popf
jmp
std
cs
pushf
pop
jno
adc
push
or
jge
arpl
std
inc
inc
mov
aad
ret
jns
in
and
in
or
sahf
popa
int
popa
jo
mov
inc
push
mov
adc
mov
jae
nop
cmp
and
loopne
test
es
inc
mov
movsl
add
icebp
add
popf
add
repz
inc
out
add
or
xchg
push
or
xchg
lods
gs
mov
lods
div
sub
push
inc
mov
pop
mov
punpckldq
push
test
pushf
fldenv
adc
pop
push
in
pop
xor
icebp
and
daa
adcl
xor
and
xchg
adc
rcrl
xor
in
fldenv
sub
aam
popa
cmp
mov
ret
iret
xchg
add
popf
pop
ss
je
lret
mov
and
or
insb
es
loope
push
and
mov
nop
jb
ret
movsb
repnz
scas
jp
adc
pop
into
repnz
jp
imul
pop
ja
sub
subl
lods
sub
push
pop
pop
mulb
jge
out
addr16
cltd
sbb
ret
mov
xchg
iret
dec
inc
pop
repnz
and
dec
mov
add
imul
push
rol
push
add
dec
data16
movsl
ljmp
sti
mov
mov
pop
jae
xchg
leave
shlb
add
dec
and
jb
pop
sbb
notb
pop
pop
sub
cs
mov
add
mov
push
jb
cmp
xchg
and
pop
inc
popa
and
movd
jmp
pop
pop
push
scas
js
mov
pushl
fbstp
out
pop
xor
adc
xchg
cld
mov
xchg
xchg
and
push
push
lahf
arpl
mov
roll
lret
pop
inc
roll
ja
mov
xchg
push
clc
shrl
dec
mov
xchg
dec
xor
popa
mov
jg
jmp
lock
fs
cli
xor
jb
mov
imul
and
inc
mov
into
jnp
sbb
cmpsl
mov
ds
mov
mov
push
test
jb
push
in
xor
mov
adc
int
jne
mov
cwtl
aad
pop
and
jecxz
ds
add
cmc
dec
mov
imull
jnp
or
add
imul
loopne
aaa
xlat
sub
inc
sbb
cmp
pop
mov
sbb
pop
push
xchg
and
popl
mov
or
mov
cmp
xchg
in
pop
or
outsb
in
scas
stos
ss
push
xchg
pop
mov
mov
gs
insl
mov
popf
popa
xor
mov
out
inc
std
cwtl
sti
in
test
and
loopne
les
out
xor
jnp
xchg
push
jae
dec
js
loope
pop
xchg
mov
sub
xchg
cmpsb
sbb
lock
leave
or
cmp
cs
dec
leave
icebp
jb
xchg
fst
repnz
mov
pop
inc
lods
and
out
pushf
cs
outsb
jmp
outsb
pop
xchg
mov
jmp
nop
sub
ljmp
dec
out
pop
adc
popf
int
xor
and
loope
sub
jno
or
jl
pop
xor
fistl
sub
xchg
jns
push
fadd
lahf
cli
stc
fistl
hlt
jecxz
repnz
adc
pop
pop
sbb
ret
jp
and
ret
orl
out
sti
shlb
mov
adc
mov
adcb
jle
cwtl
aas
fs
jnp
mov
xor
repnz
and
int
and
testl
jle
mov
inc
xchg
xor
add
adc
ret
notl
adc
and
out
cwtl
arpl
cltd
int
ret
mov
push
pop
lcall
dec
adc
mov
cmc
int3
lahf
scas
cld
jo
je
push
pusha
mov
fstpt
repnz
popa
jno
fisubs
test
push
mov
mov
add
pushf
ret
dec
lret
cmpsb
jne
sbb
mov
fsts
jmp
fs
pop
test
cmp
sub
in
jnp
mov
pop
sbb
orb
pushf
xchg
dec
bswap
jno
jmp
or
xchg
shll
xor
jmp
push
arpl
ret
mov
push
lahf
cld
out
fadds
inc
into
loop
aam
in
xchg
fcmovbe
fisubs
loop
scas
dec
push
xor
je
mull
das
daa
repnz
icebp
iret
out
push
xchg
jo
in
ret
cmp
sahf
rol
inc
push
popf
inc
outsb
fs
adc
movsb
add
rorb
cs
pop
cmp
add
or
inc
in
loop
out
xor
ds
or
loope
dec
mov
es
hlt
cmp
insb
call
ret
add
popf
mov
bound
call
enter
mov
vcvtsd2ss
xchg
mov
cmp
lret
in
outsb
addl
scas
jp
pop
cmp
ret
test
pop
rolb
aad
and
imulb
pop
dec
cs
jb
dec
mov
mov
ret
shll
or
pop
pop
dec
idivl
or
sub
rorl
lods
lea
test
and
hlt
js
adc
sub
cmpsb
sub
push
dec
rorl
repnz
popf
daa
jmp
mov
das
inc
mov
call
inc
lods
mov
mov
stos
imul
mov
add
or
pop
aam
cmc
in
clc
lock
cld
addr16
pop
leave
xchg
cmp
ljmp
xor
fisubrs
mov
xchg
fs
jno
inc
jae
adc
xchg
inc
shl
and
xor
mov
cmp
push
sbb
mov
sbb
mov
push
filds
xlat
aaa
fcompl
mov
jp
add
pop
lods
pop
fsubs
cmpsb
and
fnstenv
outsb
xchg
and
insl
in
xor
xor
jecxz
xor
shrl
in
adc
sub
cmp
push
sub
repnz
sbb
xchg
loopne
lahf
enter
into
imul
test
notb
in
lea
xor
fldenv
je
jbe
cltd
sbb
jbe
mov
clc
pusha
cmpsl
sarb
add
aas
leave
cmp
and
test
push
cwtl
xchg
idivl
sub
addb
lock
xchg
sub
and
lret
daa
icebp
cmp
dec
ljmp
pusha
or
or
sbb
or
fwait
scas
out
or
aad
jne
lea
out
pop
pop
sbb
jge
repz
sub
pop
popa
lahf
dec
jg
and
push
push
and
mov
cmp
adc
mov
fldcw
pop
cmp
jecxz
shl
xlat
pop
pop
pop
repnz
sub
loop
aam
jge
lret
lods
imul
push
cmp
sti
xchg
out
nop
mov
mov
dec
int3
add
bound
pop
and
mov
call
xor
shll
mov
push
jg
pop
pop
stc
out
mov
pop
fildl
imul
lods
or
mov
arpl
mov
cmp
jle
popa
dec
test
mov
sbb
daa
jl
ljmp
mov
inc
lret
enter
rcr
aam
push
neg
into
jae
or
and
test
mov
push
ljmp
cli
mov
dec
dec
pop
mov
hlt
loope
in
test
xor
mov
mov
mov
lds
push
pop
rcrl
dec
addl
dec
mov
cld
push
jp
push
arpl
outsl
and
mov
jl
fcoms
std
nop
out
das
mov
and
testl
mov
push
insl
call
leave
jle
push
lods
scas
mov
rcrb
xchg
add
jne
fdivl
sub
jmp
mov
lahf
aaa
xchg
sub
rcll
pop
xchg
repz
imul
pop
loope
push
jmp
fildll
out
pop
out
mov
cmp
mov
jg
jae
cmpl
add
push
shll
aad
mov
bound
inc
adc
movsl
mov
sbb
pop
clc
jb
rclb
aam
dec
push
push
xchg
int
in
xor
sbb
aaa
fcomp
es
or
jl
fistps
sbb
nop
jb
xchg
repz
ud2
stos
ret
stc
push
sub
jbe
push
loopne
add
imul
cmp
test
jecxz
and
mov
movb
xchg
lret
mov
lods
mov
jmp
fistpl
sub
testb
lret
aas
leave
cmp
add
stos
jno
dec
dec
push
nop
in
and
dec
nop
mov
sbb
dec
sti
hlt
xchg
cmp
jmp
decb
test
jl
inc
aas
sbbb
aaa
sbb
test
lods
lods
and
test
xchg
mov
and
test
sti
cmc
shlb
push
xchg
outsl
push
iret
fs
mov
sbb
jmp
inc
mov
cmp
decl
fsubs
pop
sbb
sahf
lods
mov
cs
mov
je
in
jns
es
jns
xchg
xlat
xor
xchg
inc
jmp
dec
into
movsb
dec
xchg
xor
jne
lods
test
ret
stc
mov
rcr
mov
pop
popf
fcomip
sub
push
int
sarl
or
dec
idiv
mov
cli
adc
push
divl
subb
shrl
dec
psubusw
mov
sbb
fbstp
push
jg
inc
loop
out
rorl
sbb
push
outsb
add
mov
hlt
push
inc
cld
hlt
std
fimuls
js
pop
dec
push
inc
xchg
pop
pop
pop
mov
idiv
jecxz
push
mov
js
fcoms
jae
jns
mov
cwtl
insl
in
add
mov
mov
lret
shll
fisubl
movsl
cmp
outsb
stos
lods
cmp
adc
sub
ss
pop
cmpsl
popa
pop
push
mov
div
and
dec
mov
imul
test
aam
adc
xchg
jl
dec
sbb
pop
pop
and
fldcw
mov
loopne
push
mov
add
pop
shlb
jns
scas
notb
lahf
push
pop
scas
pop
stos
cmc
sahf
and
shrb
cli
das
cmp
or
pop
adc
mov
pavgw
add
or
ficomps
sub
ljmp
sbb
int3
sti
cltd
add
in
in
sub
dec
inc
adcl
add
lret
push
dec
rcr
inc
inc
or
mov
or
pop
gs
imul
fcom
lds
cmpsl
pop
push
jne
test
fidivs
pushf
jnp
jne
push
or
movsb
es
push
or
icebp
sbb
popa
cmpsl
xchg
sbb
fdivl
xor
sub
push
inc
cmp
sub
sub
lahf
mov
mov
xchg
dec
imul
pop
sub
pop
stc
dec
loopne
sbb
fcmove
pop
test
popa
test
push
push
nop
movsb
cmp
popa
mov
jno
clc
movsl
mov
fs
mov
push
aad
jo
pop
jl
pusha
and
jmp
lahf
jno
mov
imull
push
mov
add
sbb
push
fld1
inc
insl
sarl
and
dec
fwait
push
cmp
inc
or
bound
icebp
test
adc
rcrl
dec
ss
fwait
xchg
outsl
in
inc
xchg
push
add
in
scas
and
xor
inc
add
and
pop
cmp
aam
xchg
sbb
in
pop
testl
pop
shlb
ret
xchg
pop
xor
cli
xchg
push
xchg
jae
adcl
imul
sbb
notl
xlat
and
out
in
cmp
xlat
xchg
sub
push
or
jecxz
inc
inc
out
enter
cmpsb
mov
aaa
scas
or
je
inc
test
stos
cltd
fsincos
xor
mov
lret
jp
mov
and
xchg
pop
fidivrl
pop
jno
mov
jecxz
xchg
imul
nop
icebp
test
or
sbb
inc
push
sub
jl
mov
pmullw
sbb
jge
out
dec
mov
mov
scas
add
frstor
pop
sar
push
imul
jae
sbb
in
pop
or
stos
movsl
stos
sbb
in
pop
dec
mov
int3
sahf
jae
sub
pop
cmpl
dec
test
push
dec
mov
ret
fnstsw
rorb
out
inc
mov
jae
adc
adc
repz
sbb
push
test
leave
push
inc
int3
in
push
call
mov
xor
lahf
fld
rorl
in
ds
cmc
fcompl
out
mov
icebp
cmp
or
shll
scas
cld
dec
mov
mov
addr16
leave
aad
jmp
mov
cld
add
pop
fldl2e
popa
xchg
dec
and
pushf
lcall
in
cltd
jmp
out
neg
and
movsl
fbstp
pusha
pop
jle
dec
enter
xor
stos
push
inc
pop
cmc
cli
loope
xor
stc
xor
jp
ja
pop
leave
or
mov
rorb
push
jmp
pop
push
jae
inc
or
test
sahf
int
loop
mov
cld
sub
mov
imul
in
popf
add
adc
in
adcb
sti
es
ds
pushf
fmull
sbb
ds
int
test
bnd
pop
dec
push
js
and
outsb
sub
bound
push
insb
mov
sarl
sbb
inc
jns
in
popa
and
test
mov
aad
lds
loopne
mov
push
shr
inc
adc
and
inc
mov
jne
imul
add
cltd
dec
xchg
notb
stc
leave
sbb
ja
jmp
dec
test
cmpsl
pusha
inc
scas
cwtl
popa
sub
loopne
jns
bound
dec
popf
xchg
jns
inc
mov
pop
pop
jmp
inc
mov
dec
mov
cmp
pop
dec
xor
add
mov
add
bound
shrl
xchg
cli
push
inc
add
pop
pop
and
shrb
xchg
jb
fistpll
xor
xor
jle
repnz
mov
cs
inc
sub
sub
imul
inc
xorl
pop
scas
mov
prefetch
or
fldl
push
mov
sbb
pop
clc
mov
cmp
xlat
int3
daa
mov
push
jecxz
pop
movsl
pop
movsb
inc
dec
test
xchg
outsb
xor
pop
xchg
mov
test
mov
cld
jns
and
mov
jp
adc
add
std
test
xchg
push
dec
rcr
cmc
sbb
mov
cld
mov
push
imul
mov
rcrl
inc
jl
push
dec
in
movsl
jge
cmc
insb
mov
idivb
out
mov
xchg
add
cmpsb
jnp
pop
mov
lock
dec
leave
cwtl
cltd
mov
imul
jb
pop
insl
sahf
clc
loopne
call
call
test
sbb
xchg
dec
test
js
jnp
mov
pop
imul
and
push
fs
pop
pop
jp
jnp
sbb
jns
inc
sbbb
fwait
mov
xchg
add
push
lahf
shr
stos
adc
mov
cmc
mov
jge
dec
xchg
cld
xor
sti
insl
aaa
outsb
lret
cmpsl
or
jle
mov
clc
andl
sub
xlat
push
mov
leave
neg
push
cmpsb
cmp
std
mov
adc
shll
test
leave
jne
sub
xchg
inc
aam
nop
jmp
hlt
and
sub
in
lahf
push
dec
in
std
push
jnp
add
pop
xchg
loopne
cmpsl
out
lock
sbb
scas
jl
shr
lahf
mov
add
cmp
pop
popf
push
cmp
clc
mov
xor
xchg
pop
push
push
add
aad
xor
jp
cmc
das
push
push
mov
mov
iret
push
cmpsb
add
and
cmc
scas
pop
or
adc
rolb
ret
ret
cwtl
pusha
jmp
push
xchg
lahf
push
lcall
gs
hlt
push
arpl
lcall
mov
mov
loopne
lahf
fistps
pop
or
enter
or
sbb
mov
cmc
test
mov
arpl
xchg
pop
dec
sub
std
lods
mov
test
or
dec
mov
sub
ss
add
sub
bnd
jo
xor
loope
repz
lock
add
mov
adc
sub
and
js
pop
and
nop
push
gs
ds
sbb
fdivrs
js
mov
xchg
inc
outsl
inc
push
test
imul
lods
into
xor
mov
and
push
leave
jb
icebp
cmpsl
cld
jb
std
pusha
add
sub
test
cmp
lds
pop
xchg
in
js
fsubs
outsl
es
cltd
int3
sbb
pop
dec
adc
cmp
insl
dec
sarl
fisttps
push
testl
inc
push
jl
int3
fwait
aaa
bound
push
shll
pop
jne
and
and
mov
fs
jg
rolb
ret
jg
adc
xchg
negb
mov
jp
insl
adc
out
stos
bound
daa
in
lds
sbb
mov
jl
xchg
cmc
cmpsb
jnp
icebp
inc
inc
push
push
jecxz
mov
mov
lds
cwtl
sbb
scas
mov
lcall
je
xor
imul
push
test
cmp
mov
cld
pop
dec
push
mov
mull
cmpb
sub
inc
mov
movsb
sahf
stos
cmp
loop
add
call
xchg
subl
add
add
push
jb
outsb
jo
insl
xchg
add
in
loope
ss
in
dec
aam
test
dec
push
mov
sarl
int
cmc
xor
int
or
xchg
jmp
jo
notb
rcrl
mov
cmp
add
repz
pop
fdivrs
sub
mov
add
fidivrs
dec
mov
cmp
xchg
mov
dec
dec
pop
inc
lock
cmp
jno
pop
jge
cltd
lea
or
sbb
pop
loope
leave
dec
xchg
cmpsl
cltd
das
addr16
gs
sub
out
rcll
loopne
push
xor
cmp
roll
popf
pop
cmp
repnz
adc
adc
mov
out
xchg
scas
inc
push
adc
sbb
test
jge
inc
ljmp
adcb
mov
daa
jle
or
fsubr
mov
pop
test
cld
inc
ret
out
int
dec
push
ja
mov
inc
nop
add
and
mov
aam
push
push
sbb
cltd
fcmovnb
loop
sbb
pop
and
adc
hlt
int3
mov
sub
cli
inc
aam
sar
jmp
cltd
mov
pop
push
jg
daa
adc
xchg
aam
sbb
dec
xchg
push
mov
add
test
lods
cmp
inc
inc
push
leave
adc
xchg
mov
jnp
inc
popf
std
hlt
mov
mov
stc
gs
fcomip
fs
dec
or
sbbl
dec
cmpsl
bound
ja
movl
jecxz
push
mov
fs
or
sarb
mov
pop
push
sahf
inc
cli
das
pop
pop
popa
andl
pushf
add
in
xor
aaa
loop
inc
call
call
cmp
fcompl
cs
outsl
push
cmpsl
adc
shrb
adc
in
mov
test
mov
mov
mov
cld
shrb
jecxz
mov
jge
mov
popf
sbb
out
jp
push
ljmp
and
popf
mov
jne
nop
mov
jle
test
in
fs
icebp
mov
add
dec
stc
dec
xchg
stos
push
int
jno
push
push
nop
dec
xchg
dec
daa
pop
cld
inc
push
xchg
sbb
lods
test
add
jns
aad
pop
mov
imul
push
sar
aad
cli
xchg
cmpl
js
jecxz
bound
add
xor
mov
jno
bound
mov
lret
and
test
sbb
aam
in
bound
jmp
lea
ret
mov
jmp
add
out
out
mov
dec
lods
inc
pop
scas
xchg
leave
dec
test
out
pushl
outsb
mov
push
adc
sbb
movq
cwtl
dec
out
or
lods
xor
mov
push
daa
xor
loop
push
and
test
pop
sbbb
xor
outsb
test
dec
ret
sub
and
les
ljmp
dec
insl
addb
cwtl
xchg
das
leave
xchg
cmpsb
mov
popf
mov
mov
jmp
xor
dec
sub
cmp
addr16
outsb
jbe
mov
and
xor
jnp
scas
out
sbb
movsl
dec
fucom
pop
xlat
cmp
mov
test
mov
lods
cli
dec
loope
mov
inc
pop
stos
in
xchg
sbb
jae
pop
rcrl
aaa
clc
inc
fstpl
pusha
outsb
push
ficoms
repnz
outsl
jno
cmp
in
repnz
add
inc
sbb
stos
repz
ret
int
dec
add
mov
stos
mov
jne
cmp
inc
sbb
cwtl
or
inc
jno
or
push
inc
mov
sarb
pop
dec
mov
aas
aaa
pop
ret
mov
inc
push
cmp
pop
jmp
mov
sbb
test
adc
icebp
cltd
adc
mov
mov
add
add
fnstenv
push
cld
jle
pop
fistl
pop
or
stos
lret
jne
lods
out
push
popa
insb
sahf
scas
test
push
mov
jb
pop
push
mov
testb
loope
enter
cmp
inc
dec
inc
cmp
xchg
insb
and
and
inc
push
sub
jg
push
repz
testb
loopne
stos
xor
jbe
jns
pusha
jns
mov
lea
dec
push
pop
mov
jle
mov
outsl
lret
ret
jbe
psrld
cmp
xchg
ja
rcrb
imulb
subb
jp
sti
ret
xorl
ffree
and
js
cmp
sub
out
lods
imul
jecxz
fcmovnu
lods
jge
pushf
add
push
data16
mov
ss
gs
out
and
sahf
inc
mov
inc
das
addr16
adc
push
std
clc
cmpsl
sub
aaa
mov
js
dec
pop
aad
rcll
icebp
pop
inc
sub
out
ja
popf
stos
test
je
pop
stc
xor
push
mov
lods
push
pop
addr16
xchg
repz
repz
xor
sahf
not
dec
leave
das
call
cmpsl
cmp
imulb
scas
sub
jmp
rolb
les
iret
out
mov
pop
add
and
out
xlat
nop
inc
add
sub
iret
mov
push
out
inc
and
fwait
in
ja
les
mov
sub
and
out
mov
add
xor
and
cmp
arpl
cwtl
and
cltd
sbb
jae
mov
jecxz
jg
in
push
outsl
push
js
popa
or
jno
sub
cmp
push
imull
jns
mov
roll
dec
add
addr16
jnp
test
cmp
pop
adc
push
insb
loop
into
dec
pop
jo
push
jp
mov
push
xorb
push
out
fldt
je
xchg
mov
mov
ljmp
and
xchg
js
test
sub
cmpsb
test
sar
inc
dec
aas
jmp
dec
outsb
mov
out
mov
mov
xorb
dec
sbb
or
jl
xchg
movsl
add
inc
roll
sub
insb
sbb
jl
jne
cmp
dec
or
test
push
sti
icebp
fadds
xchg
sahf
test
cmpsb
cmp
dec
adc
sbb
loopne
bound
orb
leave
lea
into
dec
and
das
js
mov
aad
sbb
add
je
cmp
sbbl
fwait
mov
int3
icebp
or
int
add
or
rolb
pop
mov
loopne
fs
pop
push
xchg
xor
nop
jb
bound
push
inc
mov
lea
int3
adc
xchg
push
or
mov
aam
test
dec
push
jae
mov
sbb
std
mov
and
fnstenv
fs
mov
lret
mov
dec
add
mov
xchg
inc
push
xor
xchg
mov
mov
cmpl
cmpl
icebp
mov
and
loop
fnstsw
xchg
pop
sbb
out
lret
inc
jno
xchg
push
repz
pop
cmpsb
jae
adc
mov
dec
enter
sbb
jecxz
lods
ret
pop
ss
mov
stos
ljmp
dec
mov
jbe
push
mov
bound
das
mov
cmp
xor
xor
fwait
push
jns
sahf
push
clc
stos
mov
cmpsb
and
mov
or
je
and
pusha
sub
and
mov
bound
cli
rcrb
mov
pop
and
cmp
shr
push
inc
jecxz
nopl
sbb
cmpsb
adc
pop
mov
out
and
adc
insl
inc
inc
sub
fmul
xor
and
mov
xor
xchg
lret
xchg
fsubr
or
mov
jmp
ljmp
mov
cmpl
ljmp
mov
jnp
mov
mov
aam
xchg
mov
out
fidivrs
mov
and
sub
pop
jmp
xchg
test
jb
addr16
dec
pusha
fwait
jle
das
mov
je
out
sbb
enter
es
pusha
pop
imul
sub
orb
pop
imul
mov
or
jecxz
cmpsl
sub
push
das
or
in
xchg
gs
in
and
mov
pop
jecxz
dec
std
sub
idivb
pop
int
sarl
fiadds
mov
push
mov
mov
mov
push
pop
shrl
out
pop
inc
and
outsb
adc
sbb
xchg
fdivr
test
sarb
gs
cmovno
mov
pop
imull
adc
out
add
lahf
in
mov
rolb
mov
adc
rorl
mov
lods
insb
lahf
imul
and
in
jp
out
popa
bound
scas
popa
leave
insl
push
and
push
add
cli
sar
or
fcmovne
imul
fwait
sarl
xor
sar
sub
addl
sub
jo
mov
jo
sbb
insb
fdivl
insb
cmp
jno
leave
mov
fbstp
inc
or
fidivl
orb
in
loope
clc
call
jns
loopne
xor
mov
mov
ret
mov
add
sbb
mov
mov
jnp
adc
leave
mov
jecxz
xor
jecxz
sbb
in
lret
inc
cmp
jnp
mov
push
fldln2
sub
sbb
pop
xor
test
xchg
movsl
fimuls
xchg
inc
xchg
mov
hlt
int
dec
add
jmp
lods
mov
mov
int3
xchg
repz
rorl
inc
leave
dec
push
mov
jns
xchg
lret
push
mov
sbb
cs
addr16
mov
into
dec
ljmp
ret
adc
mov
fisttpl
add
test
sub
sub
popa
arpl
xchg
mov
mov
jns
fisttps
fsubrl
add
push
push
xchg
cmp
in
inc
jne
outsb
sbb
dec
ss
push
jmp
insl
xor
push
std
jns
pop
push
iret
mov
inc
daa
mov
shrl
mov
push
jo
and
push
movsb
dec
and
jle
mov
push
lea
jbe
repnz
ds
jecxz
xor
repnz
pushf
push
aad
out
mov
ljmp
or
in
mov
mov
sbb
int3
adc
xchg
or
xor
mov
das
sub
aad
stc
cld
mov
movsl
int3
sarb
cmpsb
inc
mov
adc
push
xchg
pop
mov
sub
les
mov
pusha
mov
xchg
dec
and
cs
test
es
jge
sub
cmp
push
or
cld
cmc
push
out
mov
divl
jg
fwait
inc
stc
mov
subl
lock
push
testl
les
int
mov
sbbb
test
xor
iret
push
dec
pop
data16
pushf
mov
lret
cmp
loope
mov
lock
jle
and
shll
mov
and
cmp
or
aam
push
in
test
out
jge
stc
xchg
sbb
adc
lahf
cltd
sahf
repz
jns
aaa
push
insl
pop
dec
enter
ret
cli
sbb
inc
pop
inc
jge
adc
or
lret
mov
scas
outsl
jb
aam
notb
push
icebp
cmp
cmp
pop
pop
data16
movsl
mov
out
aaa
in
es
das
test
je
dec
iret
jno
mov
out
sub
mov
xor
push
ret
cli
jmp
mov
xor
inc
cmp
sbb
pop
out
rclb
xor
repnz
xchg
sub
xor
clc
push
push
jnp
repnz
xor
sub
dec
push
mov
rol
add
mov
or
cmp
push
lods
mov
out
fsts
lcall
aam
sub
sbb
mull
js
cmp
jecxz
add
push
or
or
sbb
jg
mov
stos
cmc
jae
addr16
je
mov
jbe
xchg
orl
mov
adc
icebp
xchg
and
xor
lds
mov
scas
xor
aam
loopne
jp
repnz
mov
icebp
loopne
xchg
add
mov
leave
lret
stos
dec
xor
andl
dec
std
push
mov
mov
jbe
xor
push
lea
mov
adc
dec
adc
enter
pop
loope
aam
jle
adc
inc
ss
xor
rsm
add
or
inc
arpl
in
outsl
aaa
sub
icebp
mov
add
les
adc
inc
pop
into
inc
shrb
movlhps
setbe
jae
ud2
cmp
jle
inc
das
test
loope
jae
mov
xor
gs
xchg
mov
mov
rcrb
aad
leave
lcall
daa
push
aam
xchg
sbb
sar
push
push
insl
enter
inc
sub
and
sub
mov
jp
jg
mov
decl
aaa
jg
shlb
push
pop
dec
xchg
mov
idivl
test
lods
out
test
dec
cmp
aaa
mov
mov
inc
cltd
roll
in
cmpsl
repz
aam
mov
inc
and
roll
in
ljmp
out
push
or
inc
enter
sub
shll
xlat
loopne
popl
push
mov
inc
mov
inc
cmp
xor
mov
je
inc
mov
fisttps
leave
push
xchg
insl
mov
jmp
lahf
pusha
or
stos
add
pop
sbb
dec
lods
repnz
repnz
jne
push
or
je
loopne
xchg
cmp
dec
scas
out
loop
pop
out
out
mov
push
sub
int
adc
jae
nop
xor
int
add
fwait
xchg
lcall
cs
daa
test
dec
sarl
lcall
xor
imul
daa
addl
roll
out
test
clc
addr16
cwtl
jae
repz
fdivrs
in
sub
movsl
jg
mov
ret
pop
lea
add
std
ljmp
js
pusha
in
fistpll
ret
cld
popf
dec
jl
cs
hlt
lahf
inc
insb
mov
mov
in
fdivrl
stos
jae
push
mov
sarl
inc
mov
mov
std
and
popa
jne
or
xchg
mov
jnp
arpl
out
xor
push
jg
add
jno
lods
jg
jmp
je
stc
sub
jmp
or
fimuls
inc
rcrl
in
ljmp
dec
fstpl
jp
mov
mov
cmp
jne
aas
adc
clc
jnp
mov
jle
lock
mov
mov
lret
addr16
dec
aas
and
xchg
stos
inc
loopne
push
aas
mov
repnz
push
or
mov
das
or
push
inc
ficompl
xchg
push
sahf
cmpsl
jmp
sahf
cltd
mov
cmp
out
mov
cmp
popf
lret
pop
mov
xor
push
sarl
and
imul
dec
cld
cmpb
jnp
ret
jg
xor
decl
xor
push
dec
aas
xor
mov
sbb
leave
idivl
add
pop
cmp
push
or
shlb
cs
pop
xor
cmc
pop
adc
sbb
inc
repnz
lret
add
mov
adc
mov
in
incb
in
std
jge
shll
out
add
cmp
mov
mov
cmpsl
add
mov
int3
dec
ds
or
popa
loop
push
push
out
jle
fpatan
dec
movsl
inc
shrl
jo
cmp
ror
int
or
mov
leave
xchg
ficoml
jnp
hlt
jmp
test
fidivl
insb
hlt
jecxz
push
mov
pop
inc
mov
xor
sbb
pop
inc
inc
sub
imull
jle
or
lock
xchg
mov
out
sub
cmp
pop
sqrtsd
repz
out
push
xchg
sbb
lock
sbb
cld
cmpsb
pop
mov
pop
ljmp
enter
in
loopne
lcall
sbb
dec
stos
adc
inc
push
mov
outsb
sub
inc
ja
push
bound
mov
dec
fs
movsl
call
loope
in
mov
and
cmp
cmp
pop
push
and
mov
push
mov
inc
inc
add
cs
movsb
mov
ljmp
sub
outsb
cmp
lds
inc
int
lea
pop
sub
cmp
lock
pop
stc
in
stos
push
adc
adc
dec
mov
and
sub
push
sub
frstor
fldl
insl
lods
movsl
lds
ja
or
sbb
jae
pop
push
cmp
mov
movsl
mov
insb
lahf
sbb
mov
xchg
pop
sti
mov
mov
jmp
mov
add
inc
sbb
cwtl
add
idivl
jnp
sub
adc
imul
pop
push
mov
pop
test
jno
or
lds
fimuls
push
shll
and
sbb
shl
divl
shlb
mov
das
xchg
push
pop
dec
int
aad
pop
xor
lcall
xor
push
jo
daa
xchg
jmp
xor
inc
andl
jns
push
jmp
movsl
popa
add
lods
pop
nop
data16
mov
xchg
inc
icebp
je
cmovb
mov
movsl
mov
daa
mov
pmulhuw
out
ret
ret
adc
cs
inc
pop
and
cmp
in
push
repz
fs
testb
dec
push
mov
xchg
imul
cmp
scas
lods
pop
pop
insb
lock
push
ljmp
test
popa
sbb
les
jo
jp
cmp
stc
push
mov
bound
add
clc
insl
sub
and
xchg
popf
dec
xchg
cld
inc
cmpb
mov
jno
jbe
out
dec
sub
push
cs
or
adc
sbb
in
xor
lcall
xchg
add
outsb
cs
pop
mov
repz
dec
in
mov
push
or
sub
ss
cli
dec
out
add
push
mov
mov
sbb
lahf
repz
call
mov
jmp
xchg
adc
dec
push
int
das
and
mov
std
loopne
dec
sub
popa
enter
jae
xchg
mov
cmp
ret
insl
sub
push
and
mov
sbb
jne
and
rcrl
sti
inc
mov
out
push
push
push
mov
jno
rol
jmp
or
lods
lcall
adc
mov
in
inc
and
cmp
ss
jmp
mov
pusha
int
je
xchg
inc
popf
xchg
and
push
xor
dec
mov
cmp
sub
or
movsl
and
jne
mov
fcmovnb
sbb
and
mov
lret
xor
jg
jp
and
jg
adc
test
dec
aad
xor
cmc
mov
out
dec
int
movsl
and
in
cmp
sbb
imul
push
ljmp
fldcw
pop
xchg
sbb
jecxz
inc
out
daa
clc
shlb
rcr
ljmp
push
inc
fstl
lcall
js
mov
xchg
mov
mov
shll
lahf
pop
sub
fidivs
adc
aad
test
das
sub
addr16
insl
repz
add
int3
pop
sub
mov
adc
sbb
leave
lret
lods
jo
aas
repnz
orb
in
fnstenv
add
loope
mov
dec
shll
lcall
outsb
iret
inc
repnz
clc
mov
jb
inc
mov
or
push
mov
cwtl
lcall
adc
ja
hlt
pop
inc
out
pushf
pop
and
xchg
xor
sbb
xchg
xchg
mov
xchg
cmp
xchg
pop
xor
mov
jae
mov
lret
nop
arpl
ds
pop
adc
aas
pop
lahf
adc
adc
fsts
inc
cli
pop
cmp
rclb
xor
dec
mov
test
mov
ret
cmovg
pop
test
push
stc
pushf
aam
in
push
sub
adc
and
inc
in
pop
push
mov
and
les
adc
dec
pop
add
je
jmp
mov
sub
lock
dec
stos
xchg
jl
idivb
jge
jecxz
add
int3
loop
insl
pop
icebp
mov
pop
mov
mov
pop
sub
add
dec
popf
cld
and
out
aas
push
mov
rcrb
or
inc
add
ret
push
dec
out
jp
imul
dec
mov
cmp
adc
inc
xor
ret
pusha
adc
mov
or
ret
mov
lahf
sbb
sbb
cmp
sti
adc
mov
sub
cmp
outsb
ror
ljmp
push
ds
das
lock
mov
sub
insb
test
nop
es
mov
cmpsl
inc
fbld
sarb
cmpsb
xor
aam
sbb
call
les
adc
scas
sbb
xor
dec
jno
movsb
fidivs
movsb
scas
pushf
bnd
movb
ror
outsl
mov
mov
int3
rcll
pop
cli
jnp
outsl
xor
cmp
jl
sbb
add
add
clc
mov
fdivs
fdivrs
in
repnz
add
mov
push
jne
xchg
sbb
sbb
and
mov
push
and
jns
or
cmp
push
sahf
cwtl
sbb
lea
rcrb
inc
mov
or
dec
xchg
hlt
add
movsl
adc
ret
sti
and
div
in
push
in
and
fcom
js
loop
jmp
xor
adc
shrb
push
movsb
sbb
dec
jmp
jle
xchg
push
call
sbb
test
add
imul
inc
test
adc
lock
jb
insb
mov
test
out
mov
jne
mov
icebp
mov
shll
jne
cli
xchg
sbbb
dec
aas
adc
xlat
jg
lcall
lods
xor
mov
insb
aam
adc
stos
in
pop
push
ja
insb
out
hlt
icebp
xor
aaa
imulb
lret
jmp
mov
jno
jle
xchg
inc
loop
ficoms
rclb
rcr
movsb
inc
loope
jecxz
adc
mov
lea
xor
xor
lds
dec
push
outsb
mov
mov
mov
popf
sbb
xor
sbb
shll
fwait
sub
mov
push
outsb
push
jecxz
loop
mov
insl
loop
out
mov
je
dec
jg
mov
pop
das
inc
inc
es
pop
xor
adc
cmpsb
scas
testb
negb
sbb
dec
pushf
pushf
fistpll
dec
cmp
mov
sub
inc
mov
add
cld
dec
fimuls
jg
ss
push
jns
cwtl
daa
inc
mov
scas
add
and
mov
adc
lods
fiaddl
int
lcall
jmp
fs
push
cmp
jecxz
mov
mov
subl
sarl
mov
cwtl
jne
lahf
inc
and
xor
pop
ss
ljmp
xchg
cli
mov
pop
add
outsb
das
cmp
insl
fincstp
cmp
loop
ficoms
push
sub
cmc
mov
dec
test
cwtl
add
lret
aas
addb
inc
lea
push
sub
sahf
dec
sub
xor
movsl
xchg
cmp
push
sbb
cli
xor
xchg
das
mov
mov
dec
inc
mov
scas
and
xor
pusha
shl
cltd
xchg
scas
hlt
mov
mov
cmc
outsl
and
jl
sub
pop
scas
jno
push
popf
inc
jb
mov
pop
mov
rcrb
add
push
ljmp
test
out
stos
jo
fsubrl
add
cmpsb
xor
pop
sbb
cmc
lods
ds
cli
adc
mov
and
imul
xor
repz
jo
adcl
sbb
adc
arpl
and
loope
xlat
xchg
dec
imul
mov
sbb
cmpsl
out
or
xor
cmpsl
data16
cmp
push
movsl
aad
xchg
cmp
or
mov
jg
pop
sub
sbb
pop
xchg
sub
xchg
int
pop
push
insb
pop
and
in
dec
dec
ljmp
add
and
mov
or
dec
mov
push
lcall
outsb
imul
mov
pop
inc
dec
imul
or
shrb
pop
out
push
ja
inc
adc
push
fcompl
add
cmp
das
rep
jno
loopne
out
xchg
or
and
imul
xchg
inc
mov
jno
sbb
repz
sub
and
sbb
test
jp
jg
and
aas
adcb
add
sub
mov
add
int3
data16
les
icebp
or
rol
insl
mov
fstpt
bound
push
outsb
call
dec
cmpsl
push
cld
adcb
arpl
push
shrl
mov
xor
adc
push
shr
jle
jo
cmpsl
xchg
das
pop
adc
aad
dec
imul
inc
lahf
sub
shlb
ss
dec
leave
insb
xchg
je
xchg
mov
push
sbb
jno
idivb
mov
repnz
ret
dec
jmp
pop
adc
loope
mov
pushf
bound
jge
or
pop
sahf
jp
jns
neg
adc
fistpll
mov
ljmp
insl
out
fisubl
inc
jns
ds
sub
jge
xor
imulb
xchg
pop
cmpb
mov
push
ficoms
and
sub
mov
inc
movsl
popa
cli
sub
adc
dec
loope
sub
subb
iret
pop
out
jp
addr16
stos
inc
lret
pushf
fdivrp
popa
sbb
xchg
jb
lahf
pop
jns
lds
iret
jge
mul
cmp
sbb
mov
ret
fldenv
mov
lret
or
pop
dec
xchg
pop
pop
test
shrl
fildl
xor
repz
dec
hlt
inc
pop
inc
scas
mov
jno
outsl
in
jnp
test
adc
mov
test
stc
lea
mov
pop
adc
stc
rorl
das
mov
shll
mov
sub
sub
mov
xor
cmp
xchg
sbb
imul
les
in
jp
jb
cmp
imul
out
dec
push
jg
hlt
sub
jno
pop
xchg
cli
dec
adcb
xchg
jae
test
fmull
xchg
push
ljmp
inc
xor
ja
test
inc
popa
add
pmulhuw
mov
pop
or
rsm
arpl
sub
int3
cmpsb
cmp
mov
adcb
popf
andl
push
sub
cmp
adc
jle
lahf
sbb
mov
add
icebp
xor
and
xchg
fs
cmp
jo
or
cltd
xchg
idivb
pop
sbbb
lods
cwtl
or
ret
pop
popf
mov
mov
inc
cltd
mov
sbb
test
js
xchg
scas
int3
sub
iret
outsl
aaa
push
xor
mov
push
out
mov
add
insl
inc
and
lcall
testl
mov
pusha
mov
xchg
mov
mov
pop
cmc
test
or
pop
pop
pop
mov
jle
outsb
stc
test
pushf
mov
int3
cli
daa
cmpl
clc
popa
mov
sbb
fwait
pop
cmp
jecxz
dec
mov
arpl
lret
out
test
aas
adc
push
sahf
cmp
xor
xchg
push
testb
xor
outsl
add
jl
test
cltd
call
in
pop
or
movl
in
push
pop
push
rorl
pop
jecxz
inc
fidivs
fwait
ja
pop
nop
out
ds
shrb
aaa
lock
jb
enter
xor
xchg
ljmp
sarb
inc
xor
shrb
mov
incl
test
cmpsl
hlt
pop
cmp
popf
outsl
mov
inc
loopne
push
fwait
sbb
sub
jmp
push
std
inc
aad
lcall
mov
je
dec
xchg
dec
or
test
mov
mov
adc
push
pop
xchg
das
fstl
scas
sub
sbb
not
xor
cmp
test
cmp
dec
jnp
add
inc
nop
divb
cmp
hlt
jnp
jnp
xlat
cmp
pop
mov
push
int
in
adc
jb
aam
mov
fisubl
pop
mov
test
and
cmp
nop
test
or
mov
jb
push
pop
push
pop
iret
stos
pop
lret
ss
faddp
sbb
mov
call
jge
pop
jae
rcrb
mov
aaa
push
stc
fnstsw
mov
call
push
aaa
incl
aaa
inc
movsl
popf
int3
jle
or
xchg
insl
mov
lcall
adc
xor
pop
int3
mov
daa
ret
and
addb
push
mov
out
xchg
xchg
les
imul
sbb
xor
xchg
rcrb
ret
hlt
sbb
inc
jl
xchg
cs
popa
pop
push
jmp
clc
cmp
xor
or
rcll
mov
pop
mov
cmc
jne
in
push
push
fcmovnu
cmp
ds
testb
mov
sub
mov
sbbb
jl
fsubl
cmp
pop
adcl
add
push
in
ret
in
scas
pop
pop
pop
sub
push
cmp
mov
aam
shll
jno
test
js
hlt
imul
and
cmp
xchg
leave
scas
loop
sbbb
jno
popa
jnp
xor
dec
and
fs
in
in
or
addr16
cmpl
mov
sti
dec
js
in
fwait
inc
sub
imul
push
mov
mov
push
add
out
adc
nop
stc
sbb
adc
repnz
shrl
or
jne
pop
sarl
fstpl
imul
testl
mov
stos
rcrl
movsb
sub
sub
mov
mov
add
add
imul
and
adc
or
push
sbb
sub
lret
jge
dec
dec
pop
nop
insl
fildll
mov
mov
cmp
mov
xor
int
std
aas
jae
xchg
hlt
or
ret
inc
add
sub
lcall
in
adc
out
hlt
mov
lods
mov
pop
xorb
and
cmpsb
imul
push
rcrl
sub
inc
and
sub
rcrl
sbb
enter
in
push
add
xchg
cmpsl
mov
xlat
sarb
pop
xchg
in
stos
adc
mov
jl
push
push
sbb
xchg
add
stc
xchg
and
out
pop
in
iret
mov
adc
jle
adcl
inc
ret
push
sti
sub
pop
icebp
and
add
sub
cmc
jno
push
sbb
leave
imul
sbb
add
mov
test
out
test
xchg
daa
aam
jnp
fistl
fsts
rcl
lahf
aam
sub
sarl
sub
out
jnp
jg
jge,pt
loop
pop
das
sub
test
int
inc
outsl
ja
pop
jbe
pop
call
jg
test
mov
inc
xchg
pop
inc
imul
in
leave
add
inc
mov
rorb
cmpsb
call
mov
adc
push
xchg
push
lds
mov
dec
andb
pop
adc
add
push
sar
xchg
cld
dec
pop
adc
mov
lds
ror
inc
jle
mov
sbb
insb
mov
daa
aaa
mov
dec
or
lahf
lea
ljmp
sbb
lods
shr
stos
js
add
iret
test
dec
add
loopne
sub
sbb
repz
mov
xchg
jg
push
mov
lock
dec
leave
dec
int
fimuls
sub
sti
push
insl
daa
int3
out
push
mov
loopne
ret
cwtl
mov
inc
stos
movb
add
jp
sbb
jle
cmp
lods
xor
psubusw
or
clc
lea
push
mov
push
bound
mov
test
mov
mov
and
aaa
jg
sysret
xchg
int3
loope
or
pop
jmp
add
xchg
lock
add
test
int3
or
rcrl
pop
add
cmpsl
cmp
cmc
enter
and
out
push
notb
call
bnd
dec
hlt
or
sbb
adc
add
xchg
or
mov
sub
lcall
mov
pop
lret
dec
repz
int
movsl
jmp
std
data16
sub
add
std
xor
popa
lahf
dec
jmp
sub
aas
push
pop
imul
jmp
pop
es
in
mov
sub
xor
bound
shl
inc
es
mov
or
rorl
sub
mov
fdivrp
push
inc
subl
inc
jnp
inc
pop
fwait
cmpsb
xchg
out
repz
data16
sub
mov
or
rclb
push
movsl
push
imul
stc
aad
inc
push
cmp
mov
dec
and
xchg
es
in
push
cmp
pop
mov
cld
pop
imul
cmpsl
inc
jg
into
aas
add
stc
and
dec
inc
jl
sbb
mov
es
xor
pop
pop
sbb
repnz
jbe
xor
and
sub
xchg
xchg
push
mov
jb
aas
bound
repnz
pop
stos
mov
mov
push
push
lock
mov
dec
inc
and
xor
loopne
cmpl
push
add
push
mov
icebp
push
mov
mov
divb
mov
cmp
sahf
jp
adc
adcl
cwtl
fldt
scas
mov
cmp
test
loopne
pushf
inc
shr
cmp
test
out
das
hlt
pop
mov
les
or
push
sub
scas
pop
into
mov
dec
sub
das
sbb
add
test
daa
leave
icebp
aam
push
lcall
or
pushf
aas
in
lret
out
mov
push
or
sub
cmp
push
xor
mov
xchg
sbb
xor
ret
popa
push
idivb
int3
dec
sub
popa
jne
push
mov
mov
add
test
stos
sarl
jmp
js
push
rcll
mov
dec
jo
sti
inc
sub
xchg
xor
inc
push
movsl
mov
lods
push
dec
cmpsb
ljmp
lcall
nop
iret
sbb
test
pusha
minps
fsubrl
cmp
inc
ret
jno
push
sbb
mov
les
inc
push
mov
adc
pop
sub
push
sbb
jnp
and
xor
xor
pushf
xchg
mov
mov
popa
aam
sub
adc
cwtl
inc
push
pop
aam
aam
sub
repnz
hlt
cwtl
sahf
dec
dec
out
xchg
push
inc
dec
pushf
push
dec
xorl
rcll
cwtl
adcl
fildll
leave
ficompl
jp
lods
fildl
jmp
mov
imul
fdivr
in
sub
sub
adc
cmpsb
stos
dec
js
dec
addr16
sub
lods
ret
jg
push
dec
sbb
xor
cmpsb
mov
jp
pushl
sbb
loopne
popa
cmp
daa
xorb
pop
movsb
add
inc
mov
jmp
lcall
xchg
aad
rcll
push
mov
leave
movsl
jno
and
in
jle
add
or
xchg
cmc
and
sbb
jl
cmp
push
dec
lods
leave
int3
mov
dec
push
ret
ss
fwait
jb
dec
daa
jnp
xchg
xor
dec
test
dec
fdivs
push
mov
insb
xlat
and
sub
mov
push
mov
daa
les
and
cmp
push
add
xor
iret
mov
push
pushf
stos
jnp
xor
jle
addr16
or
push
mov
mov
outsb
dec
mov
push
or
xor
or
jb
imul
rorb
jp
pop
popa
ss
mov
hlt
pop
stc
adc
or
bound
lahf
push
lock
xorb
pop
cmp
repz
jbe
jecxz
xlat
mov
jmp
xchg
push
test
xchg
dec
sub
mov
push
push
or
subb
dec
and
and
jno
lahf
sbb
inc
icebp
divb
iret
or
or
dec
mov
fcomps
rclb
outsl
sub
cmp
sbb
cmpsl
cli
pop
cmp
jmp
inc
pop
int
or
sub
inc
lsl
or
stos
jbe
inc
and
pushf
pushf
jbe
fcoms
pop
insb
sub
or
into
mov
hlt
orb
jb
jns
mov
in
sub
sbb
dec
lds
mov
jno
popa
or
das
popa
pop
mov
mov
stos
jnp
xor
xchg
ficompl
das
in
cmpsl
adc
add
outsl
mov
jb
adc
cli
pusha
insl
sub
pop
xchg
je
jle
xchg
jbe
push
iret
dec
test
adc
add
loope
mov
sub
sbb
in
fimull
or
movsb
add
push
or
out
cmpxchg
or
imul
outsl
mov
cmpsb
and
addr16
add
mov
div
call
test
pop
xchg
enter
jle
sub
cmc
mov
pop
frstor
iret
add
xchg
sbb
pop
lret
shlb
cmp
add
filds
cmp
sub
mov
jae
xchg
or
mov
xchg
sarb
jle
sbb
daa
mov
in
pop
mov
pinsrw
sahf
mov
pop
mov
mov
push
mov
orl
add
pop
dec
js
into
adc
sahf
add
jmp
mov
dec
cwtl
int3
jns
dec
jecxz
das
das
mov
add
adc
xor
insb
push
sbb
cmc
xchg
nop
xor
push
dec
and
lahf
mov
movsb
popa
lds
cwtl
jg
and
inc
cmpsb
sbb
clc
xor
lret
fisttps
fldt
jp
jmp
jb
mov
notl
ljmp
shrb
dec
mov
jg
je
mov
outsl
lds
sti
mov
pop
mov
lret
daa
arpl
adc
js
push
sub
into
inc
arpl
sahf
add
dec
lock
push
fsubr
pop
std
cmp
fidivl
push
hlt
adc
or
test
mov
push
stos
xchg
pop
and
sub
or
gs
push
jne
out
incb
and
inc
cmpsl
sub
int
sub
out
adc
gs
sbb
and
pop
jecxz
inc
sbb
mov
int
rclb
fimull
mov
rcll
js
subl
adc
ret
shr
xchg
iret
cld
xor
fimull
rorb
ljmp
mov
lea
push
lahf
adc
mov
aam
cmpsb
cmc
pop
loope
mov
mov
xor
mov
and
inc
enter
mov
das
add
popf
test
cmp
clc
data16
cmp
aad
dec
and
lret
jae
sub
lds
arpl
inc
and
inc
xor
inc
add
inc
jnp
pop
mov
jnp
leave
mov
dec
dec
clc
rcrl
loope
in
dec
scas
paddsb
adc
sub
adc
xor
fldlg2
xchg
mov
not
push
or
clc
jp
aad
mov
mov
push
pop
shlb
rcr
arpl
lds
push
stc
mov
or
daa
add
std
nop
and
imul
fistl
pop
add
es
scas
into
adc
jmp
sbb
and
and
dec
fcoms
repz
xor
xchg
pop
ja
arpl
test
or
mov
xor
xor
push
dec
jecxz
push
or
push
pop
ficompl
iret
xlat
lea
pop
std
inc
jno
mov
repnz
and
cld
int3
jne
mov
ss
and
mov
leave
mov
fimull
mov
cltd
jmp
mov
push
adc
clc
mov
xor
cmp
sbb
lds
sbb
sub
dec
xchg
push
mov
pop
xor
data16
pop
scas
cwtl
inc
adc
push
jae
stos
jno
shll
test
cmp
in
adc
int3
xchg
mov
pop
cli
pop
sub
jne
pushf
jns,pt
and
repz
movsl
or
ds
ljmp
sub
and
fwait
mov
push
icebp
mov
mov
rcl
in
stc
jae
testl
jne
cmp
mov
mov
lods
add
ds
push
rcll
test
jae
mov
pop
jecxz
inc
cwtl
jns
jle
cwtl
sahf
scas
or
cmp
xor
pop
divl
out
jno
aad
jno
pushf
ret
mov
xchg
cmpsl
pop
mov
dec
lcall
in
mov
movsl
mov
daa
inc
scas
gs
stc
lahf
or
mov
push
fists
push
xchg
into
pushl
es
fbld
sbb
sahf
push
cmp
mov
adc
cmp
imull
loopne
aas
popa
and
push
mov
push
sti
mov
sar
int
jns
adc
push
mov
lods
movsl
dec
in
icebp
add
aam
rolb
bnd
lock
js
aad
loope
pop
fiaddl
frstor
mov
mov
lods
jle
jl
imul
cmpsb
addb
and
push
ss
dec
lods
mov
adc
mov
jg
add
iret
pop
mov
or
push
fldcw
loopne
xchg
decb
sub
sbb
pop
mov
in
mov
testb
add
sub
movsl
or
push
add
mov
out
xor
mov
scas
cmp
jae
push
xor
mov
movsl
lahf
orl
imul
ja
jnp
fbld
jns
xchg
test
fwait
ljmp
push
fstp
push
mov
or
pushf
dec
imul
push
leave
pop
push
imulb
sti
jae
or
ljmp
mov
inc
pushf
mov
xlat
loope
lret
ja
and
adc
sbb
aaa
jno
roll
mov
outsb
jge
mov
xor
mov
cmpb
lret
aas
insl
fs
je
std
lahf
cmp
out
add
enter
es
dec
fsubs
mov
fs
cmp
cmc
leave
sub
ja
orb
cli
cmp
aam
xchg
jl
lcall
sbb
loopne
fwait
test
int3
sub
pop
cld
xchg
xor
pop
jo
or
sbb
je
jl
inc
aam
das
imul
jo
or
adc
cld
lods
filds
call
insl
xchg
fnsave
mov
in
lods
jp
test
pop
sub
dec
pushf
cmp
mov
pop
dec
inc
xor
shll
mov
add
and
shlb
iret
pop
jmp
je
or
mov
mov
dec
xchg
movsl
jecxz
add
jle
dec
stos
test
push
mov
adc
mov
clc
movsl
mov
or
or
sub
je
sbb
repnz
cmp
insb
lcall
insl
scas
lret
fldenv
cld
pop
cmp
mov
pop
mov
mov
push
pop
mov
mov
daa
inc
mov
aad
ret
mov
sbb
mov
nop
mov
hlt
movsl
sub
scas
push
orb
jl
loop
mov
mov
je
mov
pop
pop
jle
or
dec
stos
mov
iret
aad
jg
pop
es
add
out
xor
jl
pop
jae
jo
mov
pusha
sbb
jle
jp
xor
and
mov
cli
js
inc
lret
lcall
inc
inc
inc
dec
or
mov
add
repnz
pop
add
jb
and
cmp
pop
mov
jl
and
pop
imul
push
push
cmp
mov
incb
xor
xchg
cli
dec
mov
ds
scas
aaa
dec
inc
jp
jno
add
xchg
cltd
mov
gs
pushf
addr16
xchg
adc
fwait
xlat
pop
hlt
fdivrs
add
sbb
das
dec
sbb
mov
scas
mov
imul
adc
mov
inc
fs
iret
push
mov
push
outsl
push
icebp
inc
movsb
data16
mov
sarb
aad
sub
jne
sbb
cmp
jae
xchg
adc
in
xchg
mulb
cmp
mov
rclb
lcall
push
dec
sub
adc
jno
das
aaa
ret
mov
sub
add
imul
je
ljmp
daa
je
cmpsl
pushf
push
sub
and
out
scas
or
add
sbb
mov
xor
mov
arpl
add
shr
inc
mov
lcall
repnz
inc
xor
cli
push
rcrb
pushf
push
pushf
test
adc
mov
sub
inc
rcrl
sub
out
push
movsb
repnz
repnz
outsl
call
or
mov
fdivs
sub
lds
mov
mov
mov
outsl
add
adc
push
cld
sub
unpcklps
sbb
lea
and
inc
cs
xor
lods
pop
xchg
push
aas
inc
sahf
jmp
pushl
pop
pop
xrelease
lahf
cltd
xchg
aas
fldl
push
leave
jmp
aas
pop
ret
imul
int3
add
fsubs
push
pop
mov
push
push
in
push
mov
add
cmp
add
cmp
ret
xor
imul
in
inc
sub
mov
mov
sub
push
xor
popa
ror
std
shlb
jbe
rcrb
mov
fwait
mov
hlt
mov
and
sbb
cwtl
xorb
xor
lahf
clts
push
lea
xor
inc
fstpt
xor
xor
jg
jge
lds
notb
stc
lret
cld
jmp
pop
push
std
mov
lds
es
inc
xor
ret
jmp
fcomps
stos
jno
in
int
push
push
add
inc
xor
loope
shrb
mov
pop
inc
js
mov
divl
mov
dec
adc
rorb
cmp
mov
xor
xchg
pop
adcl
xchg
sub
stos
addr16
jge
mov
xchg
inc
jbe
ret
xchg
sub
pop
lcall
lret
addr16
sbbb
push
cmpsb
enter
mov
xor
pop
or
mov
sbb
adc
push
pop
les
inc
jge
adc
scas
in
pop
mov
rcll
cwtl
dec
mov
mov
xchg
pop
int3
aas
movsb
push
jmp
addl
clc
jle
mov
imul
jmp
negl
xlat
movsl
daa
ss
out
inc
mov
adc
xor
add
shlb
dec
mov
or
push
sbb
xchg
pop
inc
fidivrl
mov
xor
imul
aad
sbb
inc
sahf
pop
sbb
jp
lret
out
xor
mov
xchg
pop
mov
sbb
and
sub
rcrb
int3
sbb
cmp
xchg
jne
sub
cmc
cmp
xor
adc
or
adc
mov
cmc
addr16
xchg
pop
das
aas
sahf
pop
loop
mov
pushf
sub
jl
and
mov
iret
sbb
cmp
pop
inc
call
cwtl
inc
sti
cmpsb
arpl
fisubrl
adcl
dec
inc
push
loop
or
gs
mov
int
mov
enter
imul
push
xor
mov
sub
fdivs
fmuls
rolb
js
jbe
ficoml
out
push
pop
int
popf
pop
add
test
push
or
mov
or
xchg
mov
les
mov
ljmp
inc
and
push
add
sub
and
into
mov
add
add
adc
ret
cmpl
jle
or
inc
aad
mov
ljmp
cli
mov
mov
mov
sarl
add
iret
adc
dec
push
cmp
lret
dec
xorb
xchg
sub
jmp
shlb
pop
or
stos
aad
inc
int3
arpl
mov
in
add
or
add
pop
mov
cmp
pop
popa
xchg
adc
data16
dec
cmpsb
leave
jp
repnz
sbbl
jg
lret
cmpsl
shll
push
adc
popw
mov
hlt
dec
mov
mov
test
clc
lahf
inc
pop
push
push
in
mov
inc
int
xchg
sbbl
and
ljmp
fdivrl
inc
testl
inc
push
jge
cld
xor
cmp
pop
mov
push
xchg
adc
xchg
nop
push
sbb
decl
and
lods
adc
fs
clc
mov
imul
lcall
clc
leave
pop
pop
pop
xchg
mov
and
sub
mov
pop
lods
fistl
ss
ficoms
rcll
outsl
inc
lcall
insb
mov
jb
xor
mov
adc
sti
fnstenv
dec
fcomi
shrl
mov
xchg
aaa
xor
mov
gs
xor
stos
sarb
xchg
pop
aad
mov
leave
jle
dec
and
leave
out
and
in
cmc
lea
pop
fs
loope
cmp
out
adc
and
adc
cmpb
add
jb
addb
or
mov
sub
sarl
pop
push
sahf
xchg
jno
jp
dec
jns
mov
les
inc
inc
or
sbb
outsl
dec
cli
and
mov
outsl
jl
and
dec
movl
mov
lock
rcll
outsl
or
or
inc
out
cmp
mov
sub
mov
sub
sub
loopne
stos
sbb
ss
in
xor
mov
inc
xchg
sbb
nop
fcmovne
jg
push
fwait
aaa
aam
lcall
shlb
inc
jo
mov
pop
cmp
xchg
imul
and
lods
xchg
sub
inc
lahf
jno
jl
mov
cmpsb
jb
cmp
aam
mov
pop
lds
or
jb
int
mov
mov
popa
fdivs
jle
xchg
mov
inc
out
xor
mov
repnz
push
mov
shll
mov
pop
leave
jo
clc
dec
sbb
aad
outsl
mov
nop
test
data16
lret
sbb
rorb
and
sbb
cmp
mov
sub
pop
ret
arpl
jg
mov
in
std
push
in
lret
push
add
mov
outsl
fldt
das
test
cmc
sbb
movsl
das
push
fsubrl
xchg
inc
and
filds
sbb
mov
xor
mov
push
push
pop
idiv
mov
hlt
hlt
in
adc
mov
mov
push
sahf
lock
jge
cmp
mov
adc
push
cmp
mov
lcall
imul
nop
cmp
push
pop
movsb
mov
xchg
ret
fistps
cmp
hlt
pop
out
jns
shlb
inc
cmc
push
pusha
aam
es
adc
imul
loopne
js
fadds
mov
pusha
test
popa
js
ficoms
pop
cmp
js
rorb
nop
cmp
xchg
repz
mov
pushl
outsl
xor
jle
stos
xchg
mov
iret
dec
inc
inc
push
mov
or
add
jae
xor
jno
mov
ret
iret
call
pop
addr16
fs
outsb
daa
lods
pop
adc
or
jns
int3
dec
insb
mov
push
jp
pop
loop
sbb
mov
mov
adc
fmuls
xchg
int
pop
pop
pusha
xchg
mov
aad
das
push
aas
fildl
ja
fisttpll
or
mov
dec
rol
fcoms
cmp
cwtl
cmp
xchg
loopne
lcall
xorl
fsubr
out
push
out
neg
and
mov
adc
cmp
jle
pop
xchg
adc
xor
in
nop
add
inc
adc
xchg
push
test
jg
mov
fsubs
pop
sti
and
pop
push
lock
lods
in
into
rcr
data16
mov
dec
sbb
call
or
icebp
les
or
sarl
mov
mov
aas
jge
mov
push
cmp
mov
enter
push
icebp
out
dec
lock
mov
mov
je
loop
inc
xchg
dec
out
or
push
cmp
xor
rcrl
jp
ud1
ss
sub
shll
dec
xor
xor
sarb
bound
jl
addr16
jnp
inc
xlat
jecxz
adc
enter
fnsave
dec
push
pop
js
adc
clc
xor
cmp
imul
cmpsb
sbb
stos
pop
mov
cmp
mov
dec
sub
and
jne
sbb
sbb
dec
fs
repz
and
leave
push
inc
push
mov
out
stos
popa
or
ss
clc
jo
xor
lods
cld
jae
push
loopne
mov
xchg
pop
jno
imul
dec
int
lock
shll
mov
dec
cmpsl
mov
push
mov
mov
repz
cmpsb
push
sub
pop
stos
in
pop
lahf
mov
dec
jg
ficoms
lods
pop
jns
mov
xchg
adc
ret
mov
mov
sbb
sbb
push
inc
jno
stos
call
mov
in
or
ret
lock
mov
mul
adc
ss
cmp
and
inc
mov
or
movsb
icebp
add
nop
nop
cltd
fnstenv
aaa
add
sub
int
inc
pusha
xchg
imul
and
rolb
lcall
insl
xor
cld
jbe
enter
inc
sub
xchg
mov
cmp
fistps
jne
je
int
notb
aad
fstpt
cmpsb
ja
cmp
je
pop
nop
jl
gs
aam
jbe
icebp
lret
dec
test
idivb
out
inc
dec
and
jle
push
fwait
stc
test
imul
notrack
jno
lea
lcall
or
add
add
mov
ficoml
pop
mov
scas
lret
addr16
and
cmp
out
dec
cmp
lret
sarb
and
test
jno
pop
jmp
inc
pop
jmp
cmpsb
fdivrp
sbb
inc
lods
orl
jmp
outsl
dec
xlat
leave
popa
fbstp
dec
sbb
push
rcrl
cmp
mov
and
es
inc
xchg
ja
pop
outsb
aas
fcoms
shll
lods
int
int3
mov
lcall
and
push
fdivrl
icebp
je
not
lds
inc
je
push
cmpb
adc
jle
cmpl
sub
sbb
inc
jno
bound
test
sbb
xchg
cmpsb
test
loop
ret
push
xchg
test
into
mov
stos
xor
arpl
inc
in
xchg
sbbl
or
mov
test
mov
dec
pop
cmp
xchg
xor
int
dec
insl
mov
jnp
jo
sti
out
sub
jnp
loopne
jg
push
lods
lahf
sub
xor
aam
test
adc
nop
loop
in
js
and
cmovnp
sahf
rcrb
jge
lods
mov
or
ret
sbb
push
insl
sub
pushf
addl
adc
push
mov
mov
jo
in
dec
add
ds
mov
ss
jae
lods
fmull
cmp
scas
aas
cwtl
sbb
cli
inc
sbb
pop
mov
cmpsb
leave
add
fwait
or
sahf
mov
pusha
pop
aam
xchg
fsubr
pop
sub
pop
xchg
lock
cwtl
aam
or
mov
push
outsb
ret
xchg
mull
pop
xchg
pop
dec
sbb
sbb
das
insl
mov
les
adc
fidivl
test
les
adc
ret
adc
mov
pop
adcl
inc
inc
and
pop
push
iret
das
vpaddb
jecxz
std
sbb
jge
in
movsb
imulb
pop
mov
lret
push
es
cmp
cmpsb
stos
cmp
push
out
xor
dec
add
inc
inc
repz
imul
xchg
movsb
fcmovne
aaa
popa
pushf
filds
ffree
or
jnp
push
pop
mov
push
js
xchg
or
fldln2
mov
les
mov
adc
aaa
sbb
xlat
arpl
mov
setnp
mulb
mov
dec
xchg
dec
push
in
add
sbb
inc
push
pop
jno
sub
adc
lret
stc
in
jle
pop
lahf
roll
add
mov
pushf
in
push
mov
test
jae
adc
push
mov
mov
aam
loop
lcall
out
push
mov
jp
and
jmp
nop
mov
test
lods
or
xchg
inc
and
adc
sub
pushf
inc
cltd
test
movsb
xchg
mov
jno
mov
push
xor
pop
shl
andl
add
jmp
push
in
icebp
xor
cmpsl
repz
mov
jle
jge
punpcklbw
jecxz
push
mov
lods
clc
addb
stc
scas
das
mov
lret
and
movsb
inc
lock
xor
xlat
lret
into
in
cmp
pop
jne
dec
jg
mov
std
push
or
pop
sbb
fildll
mov
outsl
cmc
mov
inc
mov
and
inc
push
xchg
fbstp
sbb
popf
js
stos
dec
mov
sub
ret
or
sub
sahf
in
test
inc
mov
popf
lds
pop
rolb
out
or
pop
pop
pop
ljmp
jae
stos
stc
pop
sbb
rcrb
push
in
mov
ret
fstps
fisttpl
pop
dec
cmpl
movsb
roll
push
js
xchg
lods
outsb
adc
pop
js
test
jecxz
icebp
adc
pop
add
inc
loope
mov
rolb
movsb
xor
lahf
jno
cmpsl
mov
mov
pop
sub
inc
xor
stos
add
out
adc
rcrl
rcr
jbe
iret
out
mov
xchg
cmpsb
call
stc
mov
adc
add
fistl
outsb
jo
add
int3
iret
and
shll
pop
adc
test
add
jns
inc
jmp
mov
pop
mov
fadd
clc
push
nop
dec
mov
add
outsl
push
jne
scas
ja
mov
int3
popa
push
sbb
aad
cld
mov
inc
mov
movsb
xor
xor
mov
cwtl
jge
scas
div
clc
xor
xor
cmc
loopne
xchg
mov
xlat
mov
cmp
outsl
sub
repz
int3
fcoms
sbb
inc
std
add
lea
jne
add
sub
enter
daa
test
push
sub
inc
addr16
sbb
enter
lret
inc
das
std
add
or
jns
adc
rclb
mov
jbe
insl
mov
stos
xor
add
aaa
xlat
iret
imul
enter
repnz
dec
sarl
xor
rolb
or
mov
flds
cmp
and
arpl
jmp
pop
pop
pop
sub
and
sbb
sbbb
push
jnp
insb
scas
out
mov
dec
mov
pop
and
adcb
inc
outsb
dec
ja
stc
inc
imul
lret
out
sahf
imul
fisttpl
sahf
out
lods
or
test
mov
xchg
dec
or
lret
mov
jb
cmp
clc
adc
mov
sti
push
mov
sub
lret
fnstsw
mov
cmp
push
sub
sbb
cmp
and
cmpsl
shlb
xor
jne
push
add
mov
push
pop
into
inc
sub
xchg
and
rcrb
mov
push
mov
subb
sbb
sub
sti
into
lcall
rorb
lds
dec
leave
mov
scas
or
dec
mov
sub
jmp
sub
lcall
leave
lret
push
insb
mov
shl
push
mov
cld
cmc
pop
mov
out
jle
cmp
jle
cmp
rcr
dec
mov
xchg
add
fdivp
inc
push
jbe
bound
xor
xor
cmpsl
sub
mov
jb
inc
cmp
xor
sbb
inc
ret
jnp
fsubs
test
sbb
push
gs
inc
lds
xchg
and
inc
pop
movsl
out
xor
int
in
mov
shl
mov
xor
cmp
in
sub
int3
pop
rcll
add
sub
jp
jl
ss
icebp
jbe
adc
push
cmp
xchg
fcos
dec
fcmovbe
mov
inc
jae
sub
mov
pop
daa
adc
mov
push
lahf
cwtl
jae
xchg
or
out
lret
xor
pushf
popf
pop
push
in
mov
into
push
addl
imul
mov
inc
out
pop
cmpsb
adc
repz
stc
stos
shlb
dec
sub
or
fs
popf
enter
stos
jns
adc
pop
mov
sub
scas
mov
cmpsb
cmp
cmp
mov
mov
test
les
mov
inc
pop
xor
fistps
jg
pop
loop
movsl
push
stos
cmp
add
xchg
imul
js
jns
inc
xchg
out
inc
sbb
lock
in
xor
repnz
mov
test
roll
aaa
inc
out
std
cmp
ds
mov
adc
dec
xchg
and
mov
cli
fwait
hlt
sub
call
ljmp
cmp
arpl
imul
std
jbe
rolb
mov
out
fcmovu
notl
outsb
or
jo
pop
stc
pop
dec
xor
dec
and
ljmp
mov
pop
cmp
aad
mov
xor
out
pop
or
ret
es
aaa
aas
mov
adc
mov
sbb
jecxz
fsubrs
jbe
js
jp
fdivl
scas
fcoml
and
push
cmpl
fdivr
push
movsl
push
sbb
xchg
mov
inc
cmc
sub
xchg
adc
cli
cmc
push
mov
mov
aad
sub
ja
aam
dec
dec
lret
bound
lods
xor
and
lret
pop
out
mov
adc
pop
mov
popa
mov
pop
adc
popf
popf
jo
lea
pop
out
cmp
push
mov
pop
mov
stos
insb
adc
sbb
or
iret
adc
adc
push
lea
aas
pop
or
iretw
into
mov
xor
or
mov
fnsave
cld
roll
je
cmp
ret
pushf
in
int3
jmp
ss
xor
mov
leave
iret
cmpsb
pop
insl
stos
pusha
fnstsw
jmp
fistpll
push
sbb
stos
xor
cli
push
and
test
aam
xchg
or
test
icebp
cmp
pop
sub
int
mov
je
sbb
cmp
ljmp
or
jmp
sbb
mov
cwtl
out
jbe
mov
pop
lahf
call
ja
addb
in
add
lea
jnp
sub
mov
addr16
pop
popf
xor
or
push
sarb
cmc
hlt
insb
pop
mov
lcall
and
test
dec
test
je
iret
cs
or
es
out
clc
inc
mov
test
pushf
xchg
push
mov
and
xor
sub
out
adc
shll
sub
arpl
int
sub
shlb
lret
icebp
sahf
mov
call
and
sbb
test
in
xchg
aas
xor
xor
fstps
push
jp
fsubs
add
or
or
jle
pop
ljmp
add
scas
mov
nop
pop
and
sub
cmpsl
mov
dec
mov
lret
mov
insl
xchg
xchg
mov
mov
inc
cmp
call
mov
loope
adc
testl
cli
dec
aam
sbb
imul
out
gs
or
insl
mov
cmpsb
clc
sbb
inc
insl
hlt
pop
repz
f2xm1
or
and
cmp
nop
imul
xchg
fldt
pusha
movzbl
divl
hlt
je
aad
jb
ljmp
mov
push
outsb
jns
push
or
rol
mov
cmp
fsubrp
rcrb
mov
jnp
xor
std
mov
adcb
scas
imul
push
bound
push
fnstcw
fcomi
mov
push
leave
jge
popf
add
mov
popa
xor
mov
orb
nop
xchg
cmp
clc
sahf
addl
or
push
sarl
xor
xchg
inc
icebp
std
scas
stos
lds
mov
out
and
outsl
xorb
lret
pop
and
popf
push
incb
mov
cmpb
cmc
cli
cs
out
adc
and
jns,pt
xor
loop
ret
jb
xlat
and
outsl
mov
test
and
mov
jb
insb
inc
dec
lret
add
pusha
repz
cmpsb
adc
mov
xchg
push
xchg
jg
push
rorb
pop
mov
sub
or
fmull
cltd
inc
sub
sahf
sub
aaa
add
out
xor
jo
into
loope
das
push
xchg
stos
lret
or
int
out
jno
sub
in
mov
jnp
rorl
add
xchg
rcrl
jb
aad
inc
lea
mov
stc
push
adc
lcall
call
pop
lods
push
insl
add
enter
adc
pop
outsl
fldenv
sbb
lcall
pop
in
test
push
dec
push
mov
gs
or
push
idivb
or
rcll
fidivrs
aaa
loope
sbb
add
pop
popa
jge
sub
in
rolb
and
loopne
lcall
fwait
jb
mov
out
cmp
jbe
adc
mov
arpl
inc
stc
js
mov
aas
clc
in
neg
push
popf
sub
stos
xor
mov
sbb
pop
sti
loopne
cltd
fs
aas
shrl
mov
mov
sbb
adc
ds
test
fistps
mov
mov
pop
push
dec
pop
cmc
xchg
icebp
cmp
pop
mov
push
sbb
ret
pop
fcomps
mov
mov
sarl
test
xchg
cld
xorl
pusha
cmp
mov
push
jle
jle
inc
jno
sbb
cs
mov
out
and
out
ja
pop
imul
jbe
xchg
mov
es
adc
in
test
sbb
sbb
dec
lods
scas
xchg
ret
lds
pop
adc
inc
add
testl
mov
cli
scas
and
pop
mov
int
pop
orl
sbb
sbb
pop
pusha
popf
sub
mov
jb
cmp
orb
notb
sub
aad
cwtl
xchg
enter
sub
pop
lahf
cli
mov
inc
mov
mov
ljmp
xor
or
fbstp
aaa
mov
pop
push
sahf
fs
push
je
pop
repnz
std
aad
shr
cmp
cmpsb
mov
fidivl
push
dec
js
sub
xchg
mov
aas
dec
jae
icebp
cmp
int3
cwtl
mov
sub
and
in
loop
sub
into
jg
add
mov
rcrl
lods
movsb
push
xlat
dec
jns
bound
aaa
or
outsb
inc
xchg
mov
les
pop
bound
jmp
loopne
lock
mov
fimull
pop
mov
fwait
mov
out
es
in
jg
push
cmc
mov
adc
out
inc
imul
clc
cmp
mov
mov
ljmp
sahf
pop
enter
stos
inc
jge
mov
je
pop
dec
push
inc
leave
push
insl
inc
xor
jge
dec
xchg
shll
popa
ds
sub
cld
addr16
xchg
lcall
lcall
mov
sbbl
enter
mov
roll
cmpsl
cmpsb
loopne
adc
or
pop
pop
es
pop
sbb
inc
dec
std
adc
or
mov
arpl
xor
in
dec
push
jns
dec
mov
arpl
adc
insl
mov
add
pop
dec
or
lahf
and
addr16
in
mov
xor
jl
cmpl
inc
push
sbb
mov
ret
add
inc
cmc
aad
cmpsb
adc
bound
and
in
js
js
je
mov
sbb
add
sbb
pop
add
shr
fidivrl
ret
js
fcoml
mov
rolb
inc
int
stos
scas
push
and
mov
aaa
in
and
pop
repnz
fildl
lods
or
mov
add
push
loope
inc
lds
aaa
sub
sub
xor
cmp
shlb
sub
jp
cmp
dec
inc
sbb
dec
or
push
adc
sti
jbe
loop
outsb
add
mov
adc
and
icebp
mov
andl
cmp
int3
fmuls
shr
outsl
cli
inc
dec
pop
and
cmp
add
xchg
jle
xor
xchg
pop
push
shll
xchg
xchg
and
mov
jns
fucomp
cmp
cld
sbb
dec
fsub
scas
add
dec
xor
pop
js
cli
pop
pop
or
shl
and
mov
clc
scas
jl
fcoml
mov
das
lods
out
shrd
and
inc
inc
fs
sbb
xor
lock
pop
inc
aas
scas
mov
xlat
mov
lret
pop
imul
push
mov
mov
jo
pop
pop
stc
adc
iret
imul
in
adc
sub
adc
adc
xchg
sbb
in
int3
pop
ret
or
or
jo
movsl
aam
mov
jae
adc
sub
pop
pop
rcrl
pop
fwait
mov
sahf
jbe
mov
dec
sbb
mov
or
pop
ja
cltd
jne
push
in
adc
pusha
lds
cmp
inc
repz
or
out
adc
push
fs
jl
fildl
leave
add
mov
pop
incl
repz
aaa
das
icebp
into
cmp
ds
stos
mov
lcall
cmp
stos
les
adcb
mov
repnz
mov
clc
icebp
adcl
cmpsl
mov
push
lret
and
js
or
push
xchg
roll
inc
addr16
test
ficomps
adc
mov
test
fldt
ret
negl
push
mov
mov
lock
pop
jne
leave
inc
inc
push
pop
aaa
cli
cltd
ret
jb
das
sub
push
mov
mov
pop
adc
dec
pop
sbbl
arpl
test
scas
or
inc
jo
cmp
mov
hlt
loopne
dec
push
or
mov
jnp
outsl
add
pop
adc
sti
push
lods
and
cli
xchg
mov
push
push
movsl
popf
jp
jecxz
adc
das
cmova
rcr
leave
popa
rsm
fmuls
or
dec
fistps
pop
je
cld
and
popf
aam
mov
pop
scas
cmp
lret
cmp
imul
push
jle
adc
sbb
xchg
xchg
sti
andb
xor
lock
cmpsb
int
push
adc
imul
or
push
loope
mov
lret
test
aas
bound
cmp
frstor
aam
fists
ljmp
lret
sub
arpl
and
inc
out
and
push
ret
cmp
sub
cmp
enter
dec
pop
jbe
push
lock
sub
ja
xor
jl
push
ffree
add
std
arpl
inc
cmp
popa
add
sub
test
cwtl
or
imul
xchg
jb
dec
mov
add
xchg
sbb
xchg
negl
xorb
sub
out
out
test
fstl
jmp
dec
lret
add
leave
inc
mov
push
adc
das
lock
dec
mov
sar
cltd
fcom
int
mov
adc
cmp
mov
rcll
lret
movsb
jae
sti
jmp
negl
mov
cli
clc
push
lods
out
ret
and
dec
arpl
pop
mov
adc
xor
popf
fwait
sahf
daa
or
mov
jmp
jbe
aas
adc
fildl
loope
jg
mov
fisubs
add
jnp
in
cmp
mov
movsb
and
inc
outsl
in
sbb
pop
test
loope
cmp
pop
pushf
dec
xchg
in
and
jno
aaa
cmc
stos
sbb
shlb
dec
loope
and
insb
or
in
aad
inc
dec
outsb
arpl
dec
popa
ja
pop
and
inc
scas
sbb
push
xchg
mov
pop
fs
cs
fimuls
repz
dec
dec
out
and
sub
lcall
and
cmove
jg
lahf
mov
ret
ja
mov
fwait
lea
jl
mov
outsl
and
in
in
dec
cmp
mov
fs
pusha
fistpl
adc
pop
js
cmp
cmp
out
inc
jmp
lock
ret
adc
mov
shl
mov
je
sbb
cltd
cld
cmpb
add
xchg
pop
cltd
adc
mov
jl
xchg
sti
lret
cld
call
xor
jbe
test
je
jbe
movsl
sub
fwait
xor
mov
mov
iret
lods
mov
ret
mov
fs
shll
paddq
cmp
scas
orl
lcall
out
xor
stc
jge
sbb
push
xchg
std
sbb
mov
sahf
jbe
sbb
cmpsl
mov
popa
rclb
mov
test
dec
ja
dec
cwtl
jl
jnp
stc
popf
mov
cld
mov
dec
fistps
cmp
test
in
and
inc
lock
out
enter
xor
sahf
test
inc
ret
aas
sub
mov
clc
push
roll
or
jle
adc
inc
jbe
jno
les
test
nop
push
jmp
cmp
ficomps
outsl
out
repnz
idiv
ss
orl
in
xchg
inc
add
push
icebp
out
mov
ljmp
dec
aaa
scas
cmp
decb
lahf
sbb
sarl
sub
sbb
push
pop
xor
aaa
lds
testl
push
or
cmpsb
push
push
dec
rolb
and
mov
dec
in
jbe
movsl
push
les
fs
xchg
outsb
or
xchg
or
aad
sub
imul
lods
shl
sbb
fsts
mov
jne
call
rolb
test
pop
sub
xchg
or
sub
xchg
outsl
lods
sub
pop
inc
fmul
cmpsl
jno
outsb
mov
pop
data16
loope
jg
inc
mov
sbb
push
fadds
fisubrl
out
int
mov
lret
aas
inc
mov
lods
out
pop
inc
movsb
mov
and
jo
hlt
jp
lret
mov
cld
sbb
stc
sbb
mov
int3
and
in
pushf
icebp
inc
shl
adc
jl
xor
enter
sub
pop
int
mov
in
mov
push
hlt
out
call
aam
in
sti
hlt
ret
insb
filds
rcrl
loope
sbb
loop
add
ret
sahf
inc
frstor
push
js
imul
ret
ss
adc
push
jecxz
or
cli
imul
mov
jge
call
pop
inc
fwait
lret
insb
bound
inc
out
adc
jnp
insb
cltd
xchg
arpl
ds
bound
out
repnz
roll
rsqrtps
and
cmpsl
mov
push
push
xchg
add
int
addl
xor
scas
test
sub
jae
lcall
cmpb
lea
sbb
sbb
jo
jp
cld
and
and
test
push
jnp
pop
iret
or
mov
xchg
sub
cmp
decl
jp
ja
pop
out
into
scas
mov
ret
jo
aas
fwait
pop
mov
das
invd
cmp
sub
jo
jge
data16
aas
int
loope
fwait
in
sub
leave
mov
xor
jle
out
fldt
fwait
push
imul
stos
jge
pop
jno
imul
push
lret
pop
vhaddps
stos
and
movsb
testl
adc
inc
nop
push
pop
mov
push
sbb
not
or
push
mov
jnp
cli
add
mov
inc
call
mov
loopne
jmp
int
and
repnz
gs
in
mov
lret
add
loope
or
in
xchg
jne
push
mov
loop
jno
xor
out
out
mov
mov
adc
xor
je
push
je
gs
xchg
jl
ja
addr16
inc
ss
loope
fbstp
cvtdq2ps
jle
xchg
pusha
inc
push
pop
lahf
lds
jge
jb
daa
fs
dec
mov
sub
ds
jp
xor
jecxz
push
test
sub
push
mov
sar
add
add
es
addr16
mov
fcmove
inc
inc
jnp
dec
mov
test
mov
sti
lahf
pop
cld
cld
fsubs
and
or
sub
lea
gs
fwait
stos
push
sbb
stc
cmp
out
pop
sbb
push
loop
or
data16
test
lock
out
lods
inc
dec
and
xchg
outsl
adc
cmp
or
sbb
pop
xor
sub
nop
mov
cmpsl
jge
cmp
negb
xor
add
mov
and
maskmovq
mull
imul
jecxz
clc
rol
sbb
movsb
and
dec
popa
pop
jo
ret
add
pop
insl
push
and
or
pop
pop
jb
fwait
in
cmp
gs
add
push
mov
stc
popa
mov
sbb
fwait
cwtl
sub
mov
jbe
cmpsl
inc
lods
or
setne
in
and
xor
mov
dec
pop
enter
inc
loope
adc
or
and
popf
xor
les
jle
xchg
inc
fstpt
sbb
adc
ss
and
std
mov
mov
jecxz
pop
jg
or
jbe
out
push
jg
sbb
imul
mov
leave
gs
xor
jmp
or
test
faddp
mov
or
dec
cmp
stos
xchg
test
clc
jns
js
or
inc
jecxz
aaa
std
imul
xchg
jl
lcall
push
stc
out
dec
and
test
inc
loop
inc
in
pop
rcrl
jb
rolb
lds
das
xor
roll
aaa
sub
psrlq
cmpsb
cmp
mov
cmp
mov
inc
fnsave
mov
push
xchg
or
xor
ds
mov
scas
es
fisttps
adc
and
and
cmp
addl
cltd
mov
imul
bound
jl
dec
sub
movsl
xchg
mov
adc
sbb
repnz
xor
sub
js
in
pushf
push
cmpxchg
sbb
sub
xor
sub
imulb
push
xorb
inc
adc
loopne
xchg
push
scas
std
xchg
mov
in
and
xchg
or
popa
mov
lcall
inc
aam
ja
add
or
adc
inc
imul
xor
test
dec
add
mov
imul
pop
jmp
gs
push
mov
adc
mov
in
xchg
ds
rclb
push
inc
cmp
or
into
and
xchg
testl
jg
pop
sbb
push
sub
mov
xlat
inc
pop
cmpsl
push
imul
xlat
dec
in
adc
andb
inc
fs
adc
push
imulb
in
xchg
es
mov
sub
mov
inc
cmpsl
in
pop
xchg
fwait
jg
sub
je
aaa
mov
mov
and
mov
bound
hlt
mov
lock
leave
lds
xor
in
mov
xorl
push
mov
fsubl
cmp
xor
clc
add
sub
inc
pop
mov
in
sahf
adc
jge
xchg
and
in
push
cmp
shrl
add
loope
aad
and
lods
movl
mov
ljmp
sets
rolb
andb
sar
mov
fsubl
jne
insb
xchg
push
jge
dec
lds
pop
imul
adc
jne
stos
inc
xor
cmp
outsb
ljmp
cli
enter
lods
lret
or
push
and
loop
es
adc
jno
jmp
jl
pop
mov
jns
fidivrs
jle
mov
xor
pusha
int
arpl
ja
outsb
add
push
orps
pop
jnp
pop
add
pop
pop
mov
into
iret
test
jmp
ficoms
mov
int
xor
pop
or
xchg
push
stos
jo
movsb
ja
inc
add
dec
ficomps
jns
pop
pop
std
and
sbb
xchg
adc
nop
xor
inc
les
or
test
rclb
pop
xor
int3
inc
xor
sbb
shl
pop
shlb
xlat
faddl
je
mov
insl
incl
sbb
lret
scas
sahf
fmul
xor
mov
jns
jle
xchg
mov
sub
pop
sub
fistl
push
subl
leave
lret
repz
push
cli
gs
pop
xor
or
adc
shll
or
andl
dec
push
and
mov
cmp
stos
push
sti
dec
sahf
shll
clc
sbbl
mov
mov
fsub
push
dec
enter
mov
mov
add
pop
adc
lret
leave
lock
push
pop
cmp
scas
lea
aam
adc
test
ljmp
hlt
lretw
fsubr
mov
mov
sti
mov
jl
sub
sub
xchg
cmp
mov
push
cmp
sti
pop
mul
enter
mov
and
xor
pusha
je
inc
fiadds
pop
sti
iret
in
fmulp
lods
aam
in
popf
in
xlat
cmp
lea
into
mov
pop
jg
data16
push
and
add
pop
fisttpl
dec
adc
mov
jns
xor
popa
xor
andb
mov
or
sbb
aam
sarl
idivl
push
add
movsb
movsl
jp
enter
nop
fucomp
loop
jns
outsl
ljmp
aas
xchg
shr
dec
pop
inc
lods
cmp
mov
das
mov
fisubl
stc
aam
ret
dec
mov
adc
movsb
push
or
iret
mov
mov
jle
dec
push
inc
xchg
sbbb
adc
mov
in
cli
xchg
test
push
pop
mov
jb
mov
pop
push
clc
ret
pop
out
push
fcomps
push
or
dec
mov
inc
adc
cmp
sub
xchg
pop
xchg
mov
push
inc
xchg
sti
outsb
fwait
aas
idivl
jbe
aad
lret
sub
test
in
push
cli
push
adc
sbb
icebp
mov
aaa
jae
dec
test
jbe
xchg
fmulp
push
loop
aaa
xor
loope
sahf
push
pop
outsl
sub
lds
aad
dec
xchg
inc
push
inc
lds
mov
mov
pop
arpl
sti
repz
adc
push
jmp
stos
jo
xchg
pop
dec
pop
pushl
pop
out
pop
sbb
mov
fwait
dec
xchg
aam
dec
or
ss
jg
test
out
stos
inc
pusha
addr16
xor
pop
dec
fwait
mov
movsb
inc
mov
addr16
rcll
mov
xor
fildl
add
hlt
notb
mov
mov
mov
push
lahf
sbb
test
mov
mov
ret
mov
movsb
loope
sbb
push
jbe
jg
adc
rol
sub
xchg
imull
xchg
es
dec
ds
aaa
cmp
sbb
inc
push
pop
mov
fnstcw
sub
sub
fisttps
mov
or
pushf
sub
mulb
add
bound
int
cmp
and
scas
cmpsl
mov
negl
repz
enter
stos
aaa
fsubrl
jl
jns
cmpsb
lcall
testl
test
adc
or
pop
adc
adc
jb
jmp
fscale
mov
fucomp
add
test
jg
je
adc
xor
cmpsl
jle
mov
out
xchg
test
add
mov
stc
mov
push
out
pushf
aaa
or
xor
fucomp
dec
xchg
mov
aam
pop
pop
xor
arpl
ljmp
sub
std
ss
add
out
inc
scas
hlt
aad
nop
cli
test
incb
divb
cs
cmp
shrb
sub
push
push
sub
mov
add
daa
scas
lcall
lea
test
cmc
pop
push
aaa
les
add
push
add
xchg
xchg
ret
xor
push
inc
mov
jo
push
jmp
notl
jnp
mov
ret
repz
cmpl
inc
lods
jae
imul
push
mov
xchg
push
dec
pusha
push
push
aas
add
xor
cltd
add
pop
pushf
fildll
jns
cmpsl
mov
ss
arpl
push
das
icebp
dec
xchg
out
jno
sahf
js
xor
push
test
inc
sub
add
movsl
cmpsl
lods
sti
cmp
fs
cmpsb
xchg
or
cmp
cmpl
pop
in
mov
cmp
push
cmpb
insb
out
xchg
repnz
in
ret
mov
mov
sbbb
iret
cmp
jg
and
pop
pushf
enter
push
jmp
or
movsl
adc
push
dec
jecxz
scas
xchg
jg
stos
or
cmp
pop
les
add
push
inc
movsl
stc
or
add
jne
shll
dec
xlat
mov
or
pop
fstps
mov
push
xchg
add
imull
cwtl
mov
fdivp
jae
clc
adc
adc
imul
scas
sub
scas
iret
loop
inc
and
push
adc
clc
ret
pop
lods
rolb
mov
incb
add
into
sahf
mov
mov
lret
aas
mull
pop
lea
inc
add
test
in
cmp
lods
out
mov
ja
std
mov
push
lret
daa
or
outsl
fsubr
shll
sbb
xchg
mov
or
repnz
test
sub
ja
fs
pop
push
aaa
mov
xchg
lods
jl
xor
call
fistpl
xchg
jo
shll
test
jns
loop
loopne
pop
cmc
stc
and
dec
jge
lods
mov
mov
test
ja
jno
outsl
push
fbld
jo
pop
mov
adc
pop
mov
or
fsubrs
in
jmp
jmp
in
xchg
fsubl
inc
pop
push
aaa
jno
adc
nop
pusha
idivl
fcoms
fisubl
cmp
call
lock
lcall
aaa
or
rcr
pop
mov
cmpsl
movsl
orl
adc
jge
xchg
add
aam
push
sub
fidivs
push
and
test
cmp
fldcw
adc
fsubrl
mov
sub
cs
cmp
mov
subl
lods
shlb
push
adc
sub
xchg
sub
push
or
jne
mov
es
fsubl
sbb
movsl
jnp
jge
ficomps
or
dec
or
pusha
or
in
sbb
out
cltd
push
xorb
ja
add
or
xor
rolb
add
sbb
icebp
test
inc
lds
xor
xchg
cmp
cmp
mov
repnz
testl
ss
rolb
add
stos
xchg
inc
pop
out
adcb
push
sub
clc
and
xchg
and
xchg
inc
jecxz
stos
or
or
pop
sbb
data16
push
aad
push
xchg
test
sub
pop
int
push
xchg
cmp
mov
push
jne
mov
inc
sbb
fcomip
mov
ret
stc
pop
pop
xchg
in
mov
test
pop
adc
or
bound
out
or
nop
mov
arpl
sbb
mov
mov
sahf
xchg
lcall
shlb
cwtl
enter
inc
sub
jbe
mov
mov
std
xor
fisubs
xchg
cs
pop
daa
stos
out
sbb
mov
xchg
imulb
sbbb
pop
xor
ja
repnz
adc
add
pop
add
repnz
ret
xor
xchg
popa
fisttpl
add
fldenv
xchg
and
je
xchg
ljmp
jl
frstor
xor
add
adc
inc
mov
cmp
xchg
cmp
roll
adcb
adc
jnp
mov
arpl
std
aam
popl
shl
sbb
mov
inc
rcll
fcompl
arpl
test
test
fdivrs
cmc
fcmovnu
movsl
int
add
add
insl
push
inc
sbb
aad
sbb
cwtl
cmp
iret
enter
add
jp
mov
mov
int3
mov
call
pop
nop
xchg
aad
mov
stc
xchg
inc
xchg
mov
test
in
add
xchg
aad
sbb
test
inc
nop
and
xchg
popa
push
sahf
jmp
inc
mov
adc
mov
sub
jbe
mov
int
icebp
sti
lock
lock
int
push
arpl
lods
lock
imul
xchg
lahf
jg
add
inc
shll
push
dec
fistpll
mul
push
and
loope
lods
and
in
or
bts
hlt
jne
rorb
sbb
cltd
inc
outsb
pop
mov
lea
imul
int3
aas
dec
ljmp
mov
jbe
xchg
mov
jcxz
arpl
fadd
rcrl
loope
jmp
fxch
aam
mov
jb
cmpl
mov
ljmp
adc
into
xlat
shrl
lea
sub
sbb
and
lea
imul
or
and
add
xchg
xchg
nop
inc
adc
xchg
cltd
add
movsb
test
sbb
movsb
aad
subl
test
xor
pushf
das
fstpt
sub
mov
roll
mov
sub
fistps
jge
in
lods
lret
push
push
cmp
cmp
pop
std
mov
lds
roll
push
push
sub
ficoms
xor
mov
pop
dec
fcmovne
mov
xchg
push
lahf
cmp
push
aas
mov
aad
inc
xor
insl
xchg
in
sub
aaa
cmpl
loopne
in
sub
mov
xchg
lahf
insb
test
ret
inc
or
lahf
fwait
rcrl
mov
sbb
sbb
rcrl
pop
lcall
inc
sbb
add
inc
jae
scas
xchg
xor
xorb
movsb
cmp
dec
lret
jle
cmp
or
xchg
lahf
lret
mov
out
push
loopne
add
mov
mov
xor
jns
dec
stos
cmp
cwtl
out
mov
pusha
inc
sahf
loope
fs
sub
push
xor
out
push
mov
xor
popf
cmp
pop
hlt
xchg
sub
mov
or
mov
mov
inc
mov
inc
mov
mov
pop
jp
cmpsl
roll
sbb
add
std
rcrb
shr
out
adc
je
jnp
les
push
adc
mov
pop
xchg
jge
mov
cld
fists
cmp
pop
pusha
adc
dec
cmp
mov
mov
popa
sahf
inc
stc
sbb
arpl
popf
adc
adc
arpl
bound
and
lret
int3
xor
fdivs
ds
mov
fdivr
xor
les
leave
cmc
hlt
test
add
adc
cli
push
push
lods
or
xchg
test
lret
mov
push
sub
pop
xchg
mov
aam
arpl
rorl
imul
jl
in
fsubl
imul
pop
outsb
js
cs
loopne
ss
mov
jl
pop
inc
idivl
out
test
mov
mov
dec
ds
pop
adc
mov
inc
fsts
xor
pop
dec
insb
cmp
jbe
sbb
lods
dec
push
rcrl
cmpsb
dec
icebp
sbb
lea
xchg
inc
sub
in
mov
add
xchg
loopne
bound
xor
mov
icebp
and
adc
lods
pop
xchg
es
xchg
mov
repz
std
out
inc
push
push
out
push
decb
mov
aam
jp
xchg
pushl
mov
dec
push
pop
mov
divb
int3
inc
iret
out
stos
pop
fcmovne
push
mov
push
dec
popf
std
add
inc
cs
imul
mov
cs
inc
push
loop
xchg
mov
int3
fcoml
jae
lret
or
nop
add
or
jae
mov
sub
and
mov
sbb
add
aad
sub
mov
xchg
sub
ret
mov
repnz
sbb
xchg
sub
mov
ss
sub
sub
stos
mov
cli
push
add
or
mov
cs
push
mov
sub
ljmp
loopne
lods
lods
daa
scas
test
hlt
js
cmc
dec
pop
fwait
insl
mov
pop
addr16
mov
shlb
aas
cmp
ljmp
mov
sub
cmp
rcl
or
outsb
popf
sti
add
mov
inc
je
idiv
push
enter
and
xchg
lret
cmp
inc
add
fistpl
je
icebp
jnp
mov
int3
fwait
stos
adc
outsl
aam
mov
rcrb
cltd
push
mov
inc
dec
clc
cmc
mov
insb
inc
movsl
fwait
lods
pop
sbbl
cmp
and
in
push
lods
lret
popf
lret
mov
sbb
les
rcl
out
lods
push
push
inc
jge
lods
xchg
add
fs
jecxz
pop
and
xchg
out
mov
orb
imul
fmul
mull
xor
shl
rorb
sbb
push
ja
fiaddl
dec
add
sub
xor
inc
xor
jo
push
pop
in
and
je
ljmp
test
mov
pop
mov
push
out
cmp
jl
jb
daa
out
aam
ficomps
push
or
jmp
and
sub
iret
setl
jno
fucomi
inc
jbe
orb
dec
add
addr16
lock
icebp
add
shlb
repnz
push
movsl
push
div
inc
sub
daa
push
inc
jmp
or
call
or
pop
stc
mov
mov
in
scas
pushf
cld
sbb
or
int
out
js
out
scas
lcall
xchg
dec
cmp
cwtl
outsl
nop
cmpb
stc
mov
aam
sbb
mov
cmp
fbld
adc
arpl
cmp
dec
mov
sbb
push
imul
fstpt
adcb
sub
sbb
loopne
xor
pop
lcall
cmp
xlat
fsubp
fdivrl
adc
mov
int3
mov
pop
and
outsl
jl
syscall
rol
mov
lock
and
in
out
bound
push
dec
addr16
xorl
xchg
mov
sbb
or
aas
or
inc
aad
out
fisubrs
cmpsb
push
inc
xor
ja
fcoms
fcomps
cli
inc
ud2
stos
in
cltd
out
out
nop
xor
repnz
push
repnz
test
mov
jle
repnz
adc
sub
mov
scas
popa
mov
es
pop
repnz
ret
xor
subb
int
adc
lea
loopne
stc
mov
jmp
mov
xor
or
jmp
add
and
xchg
push
arpl
repz
or
fsubs
loopne
jae
cmp
lock
sahf
dec
shr
or
xchg
aaa
push
call
and
mov
adc
pop
mov
adcl
in
cld
pop
lods
mov
pop
cwtl
dec
fsubl
cmpsb
ds
push
cwtl
and
js
test
stos
add
mov
or
cld
bound
cltd
pop
push
pop
push
or
shr
sub
sub
xchg
imul
imul
sub
inc
or
cmp
lret
fnstsw
dec
adc
push
xor
jl
cmpsl
movsb
imul
es
es
push
pop
ljmp
popa
movsl
rol
dec
inc
jg
dec
cmpsl
mov
movaps
adc
mov
mov
lahf
test
fldln2
mov
mov
clc
jp
out
pop
and
mov
dec
xor
mov
hlt
dec
sahf
and
repz
call
xor
mov
jae
xchg
movl
xor
lods
enter
popf
xor
movsb
test
mov
in
jno
test
and
jae
sbb
sub
mov
jmp
xor
cmp
bound
lret
arpl
loope
push
dec
mov
outsl
loopne
sbb
ja
ss
cmc
ret
cli
and
push
xchg
lods
bound
nop
sbb
into
sub
inc
lret
mov
xor
xchg
xor
push
and
adc
orb
xor
push
dec
cmp
inc
xlat
or
cli
xorb
adc
add
cmp
sub
lret
loopne
add
xchg
xchg
sub
add
sub
mov
xchg
sub
xadd
sub
testl
or
call
les
dec
pop
or
jno
inc
imul
stos
cld
inc
stos
xor
cmpsl
fwait
sub
or
pop
pop
xchg
nop
cmp
mov
inc
mov
xlat
fwait
jecxz
jg
cs
movsb
cmp
jmp
repnz
dec
cmp
pcmpeqd
push
test
push
adc
dec
arpl
ret
test
loope
fcomps
aam
jae
pop
jle
lods
mov
loope
xor
mov
add
mov
imul
test
shrb
push
cld
mov
dec
cmp
sar
scas
iret
stos
mov
mov
and
mov
sti
inc
dec
cmc
insl
xor
lahf
cmp
jbe
jp
daa
or
mov
orl
call
cmc
ds
add
outsb
aad
in
das
jne
jle
mov
add
sbb
push
lret
mov
outsb
push
les
movsb
or
push
sub
dec
mov
movd
cmpb
ret
rorl
test
mov
stos
lea
push
inc
xchg
jmp
out
test
mov
xorb
mov
pushf
mov
mov
adcb
cmp
sub
sbb
and
imul
jg
ss
sahf
aaa
inc
imul
dec
dec
and
xchg
imul
shrb
sbb
iret
ret
roll
or
cmpsl
sahf
xlat
les
jmp
jge
mov
and
sbb
inc
push
and
iret
xor
out
fstpl
hlt
push
popa
icebp
push
push
out
pop
xchg
out
adc
shl
jle
xchg
jg
mov
xchg
les
fcomps
adc
icebp
sbb
and
mov
mov
mov
jo
or
sar
shrb
and
das
jge
adc
cmp
jg
push
xchg
cmp
pop
inc
sub
xchg
and
jge
push
lret
push
ret
xchg
insl
mov
or
test
stos
xor
mov
xchg
push
gs
and
push
stos
xor
mov
mov
mov
lea
adc
xchg
xchg
ret
jle
add
imul
mov
cmp
push
aas
mov
push
popf
dec
ret
xlat
popa
push
mov
fcoml
fmul
pop
cmpsl
js
sbb
mov
push
std
jl
mov
sbb
cmpsb
xorl
sub
pop
push
pushl
inc
out
enter
cmp
filds
jge
loopne
sbb
movsb
cmpsl
lock
mov
adc
lret
xor
or
movsb
push
sub
ret
add
jo
push
movsl
adcb
daa
mov
bound
xchg
mov
jae
lahf
add
jp
js
mov
je
imul
movsb
jb
outsl
outsl
sub
sbb
inc
xchg
ret
cmp
sahf
out
cwtl
jecxz
inc
aas
stos
adc
jns
pop
push
popf
loop
cld
outsb
andl
push
jo
xchg
enter
orb
jns
lret
cmpsb
mov
in
outsb
ja
in
fstpt
mov
fildl
cmp
mov
lods
loope
sub
lods
push
adc
cld
popf
xor
js
in
lahf
jns
cmpsl
out
dec
pop
add
fcmove
cmp
jne
cmpb
xor
and
imul
mov
push
and
cmpb
clc
adc
test
lret
jns
sub
jbe
dec
out
les
mov
push
inc
jg
add
imul
je
sbb
adc
cltd
fisubl
outsl
in
jno
push
cmp
mov
jnp
stc
shlb
mov
cmp
pop
fldcw
cmp
push
xchg
popa
xor
movsl
jne
jb
add
xchg
fildl
pop
setp
pop
cmc
ret
out
loope
pop
sbb
add
sbb
pop
xor
adc
sub
mov
in
ss
or
dec
jns
stc
add
pop
xchg
loopne
mov
outsb
mov
push
sub
div
pop
jmp
movsl
mov
fmul
loope
and
push
inc
add
add
or
je
out
fs
inc
push
rcl
push
nop
test
or
inc
and
pop
cmp
sub
imul
pop
mov
push
sub
push
jbe
lea
dec
sub
dec
push
fnstsw
in
mov
adc
loop
hlt
shrb
pop
push
jl
and
sbb
scas
scas
lods
das
adc
xchg
lret
in
adc
mov
test
ja
lcall
sahf
xchg
das
scas
adc
sbb
or
and
data16
pusha
mov
fidivs
movsl
rcll
int
sub
jmp
add
inc
test
ljmp
push
test
xor
orb
int3
push
clc
pop
sub
lock
xchg
xchg
push
faddl
cmpsl
out
xchg
movsb
pop
andl
sbb
sbb
mov
loope
pop
adcb
pop
dec
cmp
jmp
stc
or
sbb
jecxz
xor
addr16
push
loop
pop
mov
and
sbb
test
xor
or
jbe,pt
or
jns
sbb
lret
xchg
add
cmp
test
pop
testb
xchg
fsubrl
ds
cld
ss
adc
pushf
into
mov
or
and
outsb
mov
xorl
jbe
mov
fisubrl
movb
cmp
add
jae
cmp
mov
push
orb
xlat
and
jp
pop
sub
or
inc
icebp
lods
or
int
and
imul
mov
cltd
cmc
cs
sbb
sbb
sub
push
daa
fdivs
fistl
je
aaa
cmp
ja
dec
and
adcb
popf
xor
in
mov
lods
aaa
sub
push
mov
sbb
xor
hlt
lock
mov
mov
mov
mov
in
or
fistpl
stos
fwait
mov
aaa
cmc
insl
sarl
or
add
popf
lret
out
pop
mov
cmpsl
in
hlt
inc
out
dec
cli
push
lods
and
pop
jne
xchg
xchg
pop
xor
add
pop
fdivrl
jmp
sbb
mov
inc
std
mov
add
pop
sbb
pop
cmp
add
mov
xchg
roll
les
lds
add
sbb
cmp
aas
lods
pop
push
lahf
pop
cltd
lea
popf
push
xchg
cmp
bound
inc
mov
mov
in
cmp
lea
sbb
sti
ljmp
outsb
push
inc
xor
and
add
fnsave
sbb
cmp
jbe
in
hlt
lret
in
fdivs
or
mov
mov
aaa
cli
icebp
xchg
sar
pop
push
add
out
shlb
call
add
decb
lret
adc
pop
xchg
and
cmp
or
jno
icebp
mov
cld
test
inc
xchg
jmp
mov
xchg
call
pop
loope
push
test
in
or
mov
push
cli
bound
outsb
fcmove
or
in
addr16
xchg
rolb
out
push
lret
ljmp
movsl
pushl
push
push
fsubl
jno
jae
jl
ds
jmp
fiadds
inc
scas
xchg
mov
xchg
sahf
sbb
loopne
push
sub
inc
pop
in
or
insl
fsts
aas
and
sbb
fwait
xchg
fistl
cmp
cltd
add
sti
jle
inc
inc
aaa
xor
push
sahf
popa
pop
dec
xchg
pop
xchg
jae
or
push
mov
pop
outsb
mov
or
test
stc
hlt
pop
out
dec
fs
dec
inc
add
sbb
sub
mov
xchg
inc
cmc
add
pop
cmp
mov
les
hlt
popa
dec
dec
xlat
test
and
and
push
sub
xchg
xlat
xchg
pop
mov
and
push
sub
cli
lea
sar
daa
adc
pop
scas
dec
repnz
psrad
mov
lahf
pop
add
push
xlat
out
clc
xchg
lahf
scas
movsl
inc
fwait
inc
rcl
jge
xor
rcrb
stos
sbb
and
movsb
arpl
imul
sub
mov
xchg
dec
ret
cmp
add
daa
push
push
sbb
xchg
and
sti
xlat
xchg
push
icebp
adc
push
test
pop
add
js
les
and
ret
xchg
jb
add
ljmp
mov
cmp
ss
fcoms
ss
sbb
vcvtsd2si
dec
inc
mov
int3
xchg
sbb
dec
mov
and
fldenv
daa
jp
pop
xchg
dec
out
push
inc
fldt
fsubs
in
cmp
xor
js
sahf
js
xchg
fwait
not
jnp
adc
mov
rcrb
dec
inc
mov
or
adc
out
push
test
dec
bound
ja
fdivl
cli
int
add
clc
dec
js
std
into
xchg
or
jb
insl
push
testb
and
jecxz
lea
lahf
pop
xchg
fidivrs
cwtl
pop
add
xchg
cmp
cmp
jns
cmc
lods
call
dec
mov
xchg
lds
add
push
insl
sahf
or
sub
mull
pusha
js
loopne
xor
mov
out
sbb
push
fstl
cmp
imul
lock
pop
add
pop
out
stc
stos
inc
and
pushf
gs
imul
push
daa
mov
add
cmp
dec
or
cltd
dec
out
shrl
add
inc
adc
rcrl
sub
test
fs
fidivrs
cmp
repnz
fidivl
das
push
sbb
mov
andl
pusha
pop
pop
jmp
sub
repz
repnz
mul
push
push
mov
cmp
pop
cltd
das
cwtl
in
mov
push
sub
sti
ret
stc
add
mov
push
xchg
cmp
push
test
cmc
out
in
push
xor
sahf
cltd
nop
jno
ret
jbe
pusha
test
loope
pop
shr
js
adc
mov
sub
push
push
out
sahf
adc
jno
imul
nop
test
mov
mov
xchg
ret
imul
test
jge
scas
xor
cwtl
aas
inc
push
xchg
or
or
ljmp
arpl
or
jne,pt
in
stos
and
call
push
push
xor
lods
xor
clc
pop
scas
lret
mov
daa
lret
cmpsb
fbstp
popl
movsl
repz
loope
movsb
cwtl
xor
inc
inc
mov
loope
test
xor
addr16
inc
negl
sbb
sbbl
sbb
shlb
pop
sti
jecxz
fmul
mov
mov
lock
lock
push
push
inc
sbb
hlt
mov
and
faddl
int
jo
mov
mov
idivl
push
mov
mov
aaa
inc
lret
push
data16
loopne
push
sbb
sbb
push
sbb
ficoms
sti
lahf
loopne
repnz
fdivs
jg
inc
push
and
hlt
mov
popf
jle
pop
stc
loop
les
popf
xor
lret
pop
dec
push
in
mov
jmp
stos
push
loopne
rcrl
xor
fs
cmp
cs
xor
lds
pop
add
cwtl
pop
int3
test
leave
scas
or
jns
adc
inc
jmp
xchg
add
mov
cmc
jecxz
out
lock
das
jg
fildl
sbb
push
or
icebp
aaa
mov
lea
movsl
mov
in
fbstp
xor
daa
inc
out
mov
sub
mov
jle
psubusb
push
push
out
mov
jecxz
xorb
pop
fcoml
push
adc
repnz
stos
shlw
dec
push
aas
mov
or
out
das
xchg
sbb
jne
call
cli
pop
popf
bound
mov
jl
add
push
inc
outsl
ret
sarb
push
pop
mov
clc
dec
lds
fsubs
xchg
xor
pop
and
push
inc
push
sahf
xchg
rcr
fsts
jmp
in
cli
test
cmp
cwtl
mov
xrelease
xchg
stc
jmp
jo
add
mov
xchg
les
dec
sub
pusha
cmp
test
dec
or
fstps
add
mov
jg
test
es
mov
or
or
jno
jae
add
std
mov
ret
push
sub
xchg
aad
jae
icebp
xchg
dec
adcl
aaa
xor
dec
dec
mov
cmpsb
fsubrs
push
bound
imul
bound
out
and
dec
scas
push
iret
out
add
push
mov
xor
pushf
jle
push
mov
jnp
xor
call
fwait
or
mov
repnz
add
sbb
xor
fwait
cwtl
out
add
xor
xchg
jnp
pop
inc
inc
repnz
and
mul
xchg
mov
movsl
jmp
jae
repnz
sbb
xor
pop
cmp
std
mov
sub
pushl
add
xor
data16
adc
dec
enter
test
push
scas
mov
gs
popa
movl
loope
sub
xchg
fxch
pop
mov
popa
sahf
lret
pop
mov
lahf
cltd
scas
sub
cmpsb
js
lret
or
xchg
rclb
ja
addr16
or
pop
movsl
je
fildl
fs
stos
add
and
xchg
lret
test
dec
push
dec
sbb
inc
xor
imul
dec
ficoml
mov
and
xchg
xor
inc
repnz
pop
ds
mov
xor
repz
push
roll
loope
jp
mov
lmsw
xchg
adcb
aad
xor
mov
scas
push
lock
cmpsl
jbe
stos
cmpl
jle
inc
test
xor
xorb
mov
mov
sub
add
out
cs
push
cmp
jo
rclb
loope
scas
btc
in
filds
lock
ljmp
test
push
jae
and
inc
jne
into
outsb
dec
fdivl
dec
mov
sahf
push
rolb
fisubrl
rorl
mov
je
add
cs
stc
xchg
fdivr
lock
xchg
fmuls
push
test
xchg
orl
lea
dec
idivb
xchg
das
sub
pop
loopne
cmp
xchg
in
enter
cld
push
add
gs
jl
push
dec
pushw
sti
mov
lock
cmp
sbb
mov
outsb
cmp
jl
movsb
push
xchg
fimull
loop
mov
add
aam
inc
xorb
inc
test
mov
jle
js
or
or
cmc
xchg
outsl
xchg
inc
push
fs
push
add
test
addb
mov
inc
cmpsb
push
push
push
in
push
fidivrl
push
pop
rcr
shrb
dec
insb
mov
enter
xor
push
inc
and
fbstp
jp
sbb
or
xchg
test
cld
adc
stos
sti
cmp
mov
adc
sub
mov
out
in
cmp
mov
hlt
jns
sub
mov
frstor
jb
daa
arpl
xchg
fnstcw
push
mov
xchg
cltd
add
or
mov
jb
sbb
lea
pop
jnp
test
imul
sbb
mov
jbe
cmp
pop
sub
into
mov
pop
and
cmp
pop
clc
std
pop
jge
jo
ds
push
add
lds
sahf
or
shll
push
push
pop
sub
cmp
mov
inc
add
mov
pushf
sbb
in
cmp
and
stc
call
imulb
inc
cmp
mov
loop
rorb
arpl
daa
fstl
iret
clc
and
xor
xchg
xchg
lret
mov
aas
sbb
xchg
ficoml
test
xchg
movsb
cmp
shrb
push
xor
and
ret
fdivrl
sahf
and
add
adc
cli
xchg
sub
pop
das
in
pop
mov
xchg
sbb
or
ret
xchg
loope
cli
pushf
jb
jns
movsl
or
cmc
xchg
aam
cld
out
stc
jmp
xor
xor
jge
sbb
xchg
and
sbb
inc
add
leave
push
push
push
cmp
add
pop
sahf
sub
insb
mov
sbb
sbb
mov
ljmp
xchg
rorb
arpl
adc
pop
mov
call
jmp
sti
inc
arpl
pop
imul
and
lea
outsb
jge
sub
mov
dec
adc
arpl
in
ja
movsb
in
dec
xor
mov
jg
push
and
outsb
daa
cmc
mov
testl
aas
or
cmpsl
push
negl
in
adc
sbb
aad
int3
adcb
or
lods
cmpsb
sub
add
fiadds
popf
xor
ffree
loope
dec
inc
rolb
jae
outsb
mov
add
xor
and
out
jne
pushf
xor
push
leave
and
in
mov
out
mov
popf
pushf
cli
in
sub
jp
jge
xchg
stc
ret
pop
mov
js
add
add
outsl
cltd
inc
cmp
insb
stos
push
movsb
jp
dec
pop
xor
repz
inc
imul
negb
xor
nop
or
lcall
jl
dec
dec
insl
cli
push
mov
dec
popa
pop
ss
std
mov
mov
repz
mov
inc
iret
pop
xchg
mov
sub
add
xchg
mov
inc
hlt
adc
mov
jl
daa
adc
imul
bound
mov
clc
push
mov
dec
push
mov
inc
out
mov
ds
lahf
pop
mov
xor
mov
shr
mov
push
mov
rclb
pop
inc
dec
xor
cwtl
jmp
cwtl
clc
es
ljmp
jmp
push
mov
ljmp
int
test
sbb
faddl
pop
aas
test
or
mov
test
mov
sub
push
aam
inc
mov
mov
outsl
aaa
arpl
stc
mov
iret
jne
or
inc
mov
int3
mov
sbb
stos
sbbb
cmp
sub
jae
push
sub
sbb
dec
mov
inc
insb
mov
xchg
into
and
decl
jmp
cmp
adc
loope
push
andl
lcall
xor
xchg
fcmovb
clc
inc
or
cmp
jae
jmp
and
xchg
jae
mov
sub
dec
call
push
mov
dec
lahf
dec
cmpsl
mov
dec
scas
rcl
ret
sti
dec
jb
push
leave
fcoml
sub
fstp
into
jge
shll
mov
iret
xchg
lahf
fimull
jns
or
dec
imul
jge
popa
loope
in
push
jecxz
loop
mov
ss
ljmp
ret
xchg
mov
ret
stc
jne
add
hlt
or
xlat
push
jae
ss
sahf
outsl
jecxz
adc
mov
fwait
sbb
push
rcll
es
sub
int3
jle
shlb
inc
sbb
test
lret
and
inc
mov
pop
adc
sub
stc
rclb
add
sub
mov
dec
mov
mov
xor
popa
add
out
fistps
push
test
inc
orb
shlb
cmp
jo
xchg
arpl
pop
sbb
inc
test
inc
adc
fsubl
test
call
mov
test
or
xor
nop
inc
sbb
xlat
adc
pop
add
dec
add
dec
xchg
inc
js
sahf
inc
out
lods
mov
aaa
in
xchg
mov
or
mov
adc
mov
and
daa
fdivs
nop
daa
cmpsb
push
test
xor
and
xor
insl
sbb
xchg
shrl
mov
imul
iret
xor
or
xor
adc
xor
std
jb
cmp
inc
punpckhwd
inc
cmp
addr16
sbb
adc
pop
sbb
adc
cli
ljmp
adc
push
sub
xchg
in
sub
fbld
adc
jge
dec
add
push
dec
je
cmpsb
xchg
or
cmp
cmp
testb
call
sub
mov
lods
fiaddl
dec
loope
cmp
xor
stos
dec
pushf
lods
push
xor
jnp
cmc
add
inc
xchg
jmp
test
sub
lock
mov
cld
mov
jl
jle
pushf
test
lahf
pop
mov
or
inc
ret
adc
adc
fsubs
popf
pop
cltd
pusha
outsl
dec
je
ja
jmp
lret
xor
jb
and
test
jp
xor
std
mov
inc
xor
inc
mov
push
insl
out
jno
clc
lcall
pop
sbb
mov
ret
scas
mov
aam
test
enter
mov
dec
int
dec
into
inc
add
pop
or
arpl
xchg
nop
cwtl
cmpl
xor
loope
xorl
adc
mov
cmpsb
lcall
fs
nop
push
lea
jmp
shrb
push
pop
jmp
shrl
xchg
push
sbb
pop
pop
jb
push
and
ds
push
out
mov
cmp
inc
fidivs
movsl
pop
and
pop
lods
test
mov
mov
mov
stc
or
dec
or
or
cmp
cmp
lret
fsubrl
jecxz
xor
imul
xchg
stos
jno
add
fidivrl
notb
adc
mov
and
pushf
mov
pop
mov
sub
pop
sbb
push
cmp
hlt
fnstcw
sbb
jns
idivl
push
lcall
mov
adc
push
mov
in
insl
sub
xor
outsb
mov
rcll
mov
mov
pop
sahf
push
icebp
cwtl
push
mov
popf
sub
aas
xchg
sbb
mov
scas
fidivrl
mov
jnp
jp
clc
sarl
jle
sbb
sbb
cmp
mov
movsb
dec
xchg
mov
xor
pop
jne
xchg
cwtl
jp
pop
inc
dec
add
mov
aad
leave
int
pop
test
pop
mov
adc
insb
xchg
in
sub
pop
arpl
xor
add
arpl
push
xor
sbbl
jbe
lret
mov
test
jecxz
aas
movsl
subb
imul
mov
icebp
sub
adc
push
push
rcrb
test
popa
dec
rorb
ss
imul
xchg
inc
xchg
xor
test
add
mov
out
pop
fmulp
xchg
add
dec
xchg
fisubrs
out
mov
xchg
test
roll
int
sbb
fwait
jecxz
and
and
dec
push
cmpsb
popl
cmp
popa
mov
outsb
iret
aaa
bound
jle
mov
jb
sbb
test
sbb
aaa
js
sub
fnsave
subb
das
aam
lret
pop
jp
jb
imul
dec
dec
and
jmp
xchg
test
and
stos
lods
xchg
jno
mov
pop
sub
push
and
or
xchg
fcmovnb
fsts
andl
push
jns
ss
fisubs
push
jnp
fmuls
dec
jg
inc
mov
test
cmpsl
data16
jno
xor
pusha
enter
pop
jp
data16
stos
and
and
das
in
xchg
add
sti
std
jge
jo
jno
mov
negb
adc
lcall
fimuls
jl
inc
ret
mov
pop
sub
sti
enter
pop
mov
ret
mov
dec
add
ficomps
ret
xor
push
sbb
gs
popf
xchg
divl
shrb
fdivr
sahf
insb
test
insl
nop
iret
add
pop
and
dec
stos
sbb
idivb
mov
insb
out
das
pop
add
int
or
pop
mov
out
xor
pushf
sbb
xor
mov
or
bound
xor
dec
mov
test
inc
cmp
testb
out
and
mov
mov
incl
mov
ljmp
shlb
fstpt
shl
es
sbb
js
push
popa
xor
nop
add
fsts
fildl
sbbl
xchg
popa
or
pop
push
fisttpl
movsl
jmp
inc
lcall
addl
fsubrs
cmp
jecxz
aam
shr
shlb
inc
jge
outsb
sub
stos
pop
jmp
xchg
cli
xchg
negb
add
cmp
bound
push
sbb
xchg
stos
ja
inc
shlb
push
test
mov
rorl
xchg
loopne
ror
sub
xchg
sbb
dec
jne
fbld
or
xchg
pop
lds
es
out
imul
idivb
cmpsl
mov
ds
shl
popa
popf
fsubr
dec
pop
out
jle
data16
cmp
push
sbb
mov
mov
dec
test
pop
in
daa
in
movq
push
pop
mov
and
pop
or
xor
ret
mov
dec
shrl
sbb
mov
push
shll
fcmovu
jae
adc
daa
dec
mov
push
scas
lock
inc
inc
das
xor
cwtl
leave
inc
xor
out
push
mov
insb
sub
testl
mov
sub
mov
mov
daa
cld
mov
shll
and
call
add
and
fbstp
mov
mov
mov
icebp
cwtl
cmp
dec
xor
pushf
stc
jmp
stos
mov
iret
sub
sbb
mov
adc
fucomp
lret
cwtl
push
inc
andb
xor
test
lahf
mov
mov
add
inc
xchg
out
push
adc
in
mov
add
bound
clc
mov
push
mov
jmp
cmp
adc
cmp
push
push
fildl
push
push
mov
jmp
mov
pushf
xor
and
xor
stc
loopne
cs
and
push
pop
rolb
sbb
sub
jmp
ret
add
test
orb
js
xchg
orl
dec
faddl
je
adc
shr
dec
push
aad
dec
dec
fwait
jle
xor
aam
aaa
andl
xlat
fistpl
and
sar
push
cltd
mov
gs
fisubl
and
arpl
jno
imul
out
mov
adc
jae
inc
cld
cmc
lea
cmp
jbe
mov
idivl
push
ret
mov
in
mov
mov
inc
aam
jmp
addr16
pusha
xchg
daa
ret
cmovg
mov
adc
insb
cli
mov
lds
int3
push
push
xchg
lds
or
inc
jp
jg
mov
jecxz
test
sub
not
xor
pop
push
push
cmpsl
sahf
xchg
fcomip
lahf
adcb
mov
shl
outsb
gs
jo
addr16
xchg
mov
push
mov
imul
adc
inc
mov
sbb
fcomps
cmp
add
sbb
jle
lock
xor
mov
insl
shlb
or
sub
divl
xchg
vpand
xor
xchg
stos
outsb
inc
ret
sbb
arpl
push
add
mov
adc
fldt
xor
pop
lods
push
mov
adc
clc
scas
dec
rdpmc
push
cli
xlat
adc
sub
and
mov
lret
mov
xor
mov
push
jno
iret
lods
pop
je
in
out
mov
cmp
jmp
out
sub
ret
js
sbb
jg
pop
imul
xor
mov
mov
popf
xchg
sub
or
push
pop
pop
icebp
xor
or
lds
or
sbb
xchg
push
push
stos
mov
mov
aas
push
aad
mov
push
popa
imul
shl
and
dec
jecxz
popa
sbb
xchg
sub
and
dec
mov
add
mov
andb
cmp
pusha
jle
dec
and
inc
jno
jae
push
add
sub
out
outsl
jae
mov
jnp
movsl
xor
adc
std
clc
and
nop
out
jp
dec
sahf
mov
jns
dec
or
or
loope
incb
pop
adc
cmp
pusha
cmc
js
mov
dec
xchg
push
xor
js
sbb
adc
aam
jno
dec
push
add
xchg
ror
aaa
leave
pop
aaa
lea
movsl
pop
aad
mov
and
repz
xchg
mov
sarb
pushf
aam
std
xchg
jb
fidivl
xor
mov
pop
ss
lahf
sbb
pop
mov
jg
fsubrs
cwtl
add
je
mov
aad
cmp
imul
mov
ret
jno
sub
pop
repnz
je
pop
dec
pop
dec
inc
xchg
iret
cmp
xchg
or
adc
pop
push
pusha
aam
lds
scas
xlat
or
sbb
lods
ss
scas
mov
xchg
test
mov
hlt
daa
aad
pop
repz
jmp
jno
iret
pop
out
lods
jecxz
sub
mov
sub
outsb
fists
cmp
ror
inc
cmp
fs
xor
loope
inc
lea
cmp
sub
fsubrl
out
push
fcmovbe
mov
pop
cmp
cwtl
mov
sbb
mov
adc
roll
incl
inc
scas
push
icebp
dec
ret
pushf
pop
rcll
xor
xchg
sbb
fisubs
enter
loop
ljmp
inc
nop
xor
into
xchg
pop
je
xchg
int3
dec
push
xchg
adc
or
inc
or
shll
push
lock
aam
xchg
orb
jnp
outsl
mov
cmp
mov
mov
xor
test
lret
addr16
xchg
lcall
scas
pop
or
ds
outsl
add
dec
outsl
pop
sti
cmp
movsl
push
push
movsl
sub
pop
shrb
mov
pop
icebp
and
scas
frstor
pop
dec
rcrl
out
push
adc
in
pop
jb
push
rorb
or
mov
stc
push
enter
pop
dec
je
into
aaa
jb
mov
adc
daa
test
leave
mov
imul
into
inc
jae
sbb
cmp
repz
subb
addr16
push
cli
sub
add
jecxz
cmpl
stos
stos
das
push
call
stc
sbb
or
or
jg
xchg
ror
fs
pop
test
cmp
or
push
mov
shrl
testl
imul
fstpt
outsl
pop
into
mov
mov
push
imul
pop
test
push
out
test
push
and
es
arpl
sti
push
ja
mov
in
cmpl
test
or
mov
sahf
sub
xor
pushf
lds
inc
lahf
or
pop
push
ljmp
add
inc
mov
inc
adcl
push
dec
dec
push
inc
xor
dec
movsb
pop
aam
xchg
jg
out
insl
push
xor
gs
mov
cmp
or
xchg
xchg
mov
mov
pop
scas
test
jle
gs
cmpsb
addr16
mov
sbb
or
es
lret
divb
testb
in
jo
divl
dec
gs
bound
or
enter
mov
out
sbbb
and
ss
mov
pusha
hlt
mov
mov
popl
iret
imul
popl
iret
imul
and
cmp
xchg
ret
pop
test
sub
out
andb
adc
cmp
lret
hlt
push
shlb
and
pusha
jb
repnz
outsb
shrl
dec
inc
inc
mov
dec
sbb
push
cmpsl
jp
mov
rorb
cld
xchg
mov
lods
popa
mov
add
outsl
cltd
add
jae
insb
mov
outsb
adc
nop
dec
pop
xchg
iret
push
gs
jne
mov
or
insb
cs
push
enter
in
out
add
cmpsb
in
push
mov
outsl
std
lea
add
es
sti
outsb
cmp
xlat
jl
pop
or
pop
loopne
pusha
imul
mov
fs
outsb
ret
shll
jl
ja
incl
clc
xlat
pushl
add
rcll
push
out
jne
inc
gs
mov
imul
outsb
outsb
ret
in
fwait
pop
sarb
xor
sbb
mov
scas
imul
mov
insl
xor
or
xchg
scas
and
sahf
mulb
mov
sbb
dec
cmp
inc
sbb
pop
mov
notb
arpl
stc
in
shl
cmpsb
mov
mov
mov
mov
andb
ja
cmpsl
push
sbb
sahf
lea
imulb
loopne
scas
stos
je
xor
rolb
adc
int3
adc
sub
adc
aas
int3
loopne
mov
jns
xlat
pusha
sbb
pop
cmc
add
mov
pop
ja
aas
lea
popf
and
lret
mov
mov
mov
sub
mov
jnp
popf
or
mov
in
add
stc
jbe
jnp
out
stos
xchg
fwait
cmp
movsb
xor
ljmp
pusha
jle
jb
clc
in
xor
test
rolb
fnstsw
cld
mov
pop
push
repnz
cmpsl
jge
imul
stc
inc
shr
call
sub
cwtl
test
sub
cmpsl
dec
ss
mov
add
cmp
pushf
imul
xor
pushf
repnz
insb
xchg
lds
pop
lods
outsl
mov
push
aad
lahf
dec
insl
push
inc
test
push
xchg
lcall
ficoms
imulb
je
fldl
xchg
xor
cmp
cli
sar
xor
icebp
cmp
and
iret
and
sub
inc
outsl
outsl
scas
sub
jae
fcomps
dec
push
sbb
and
fiaddl
call
neg
int3
cmc
pop
aam
mov
dec
mov
aam
xchg
push
test
mov
jle
outsb
xor
sub
pop
das
fisubrl
add
sbb
mov
inc
orl
les
jae
mov
jecxz
outsl
hlt
sub
mov
sbb
movsl
mov
jg
fwait
nop
mov
loop
add
xor
stos
and
divb
lods
adc
mov
ljmp
push
fistpl
cmp
std
arpl
and
push
int3
push
xchg
add
in
lds
mov
xchg
call
stc
sbb
addr16
enter
pop
or
insl
mov
movsl
sbb
jne
loop
jae
push
inc
in
jmp
or
test
mov
adc
lock
sahf
shrl
into
filds
jns
out
adc
aad
sbbl
or
xlat
jmp
mov
pushf
or
cs
xchg
ljmp
sbbb
mov
jge
xchg
rclb
dec
jle
decl
push
int
test
push
and
fiaddl
add
mov
out
mov
mov
sbb
cwtl
in
xchg
in
xchg
rclb
push
pop
enter
out
xor
sbb
push
cli
xchg
xchg
or
out
leave
loopne
test
xchg
out
inc
dec
adc
and
test
ficoms
jmp
stos
push
test
adc
hlt
sub
xor
cltd
je
cs
stos
push
pop
adc
mov
stc
mov
and
cmp
std
push
dec
lds
jle
pop
adc
movsb
sti
loop
jle
inc
mov
pop
pop
xchg
xor
jmp
mov
repnz
int
dec
scas
xchg
push
jo
mov
and
popa
cltd
push
ret
lret
imul
pop
insb
pop
iret
or
mov
and
pushl
cs
icebp
int
repnz
or
jno
mov
imulb
cld
dec
dec
pop
scas
jo
sti
int
push
in
mov
mov
add
test
mul
push
in
cmp
mov
inc
lock
mov
aad
mull
mov
imul
test
add
mov
les
xor
stos
loop
and
mov
in
ds
fwait
pop
test
inc
xor
clc
jno
sbb
das
inc
xor
push
test
aam
jae
cli
sti
stos
stc
ficoms
sbb
cs
insl
inc
dec
and
sbb
jle
cmp
roll
pop
fsubl
daa
lods
mov
pop
jp
fs
data16
cmp
adc
aaa
mov
jo
dec
inc
hlt
pop
js
pop
test
mov
jl
in
inc
jl
xchg
int3
popf
add
cmp
cmpsb
outsb
sti
xchg
jl
sbb
xlat
sub
mov
dec
fdivl
jnp
mov
call
mov
sbb
and
loope
xchg
lea
pusha
aad
and
push
in
cmp
movsb
movsb
call
scas
inc
mov
push
dec
sub
arpl
icebp
gs
mov
out
lock
in
sbb
or
push
add
mov
cmpsl
or
ret
mov
push
popf
and
int3
pop
aad
leave
push
mov
int3
cmp
ja
xchg
sbb
xchg
or
adc
inc
je
sub
and
xchg
xchg
stos
add
popa
xchg
pop
xchg
movsl
ret
stos
inc
loope
mov
or
sub
mov
imul
inc
push
aaa
in
adcl
or
or
fistpl
fstpt
stos
mov
daa
inc
sbb
dec
fwait
lcall
daa
cmpsl
dec
cltd
cmpb
icebp
push
cmpsb
call
adcl
mov
int3
aad
jno
xlat
dec
ret
adc
repz
jle
xchg
xchg
mov
sbb
or
out
add
xor
addb
test
cltd
inc
or
inc
imul
xchg
xchg
scas
pop
enter
out
mov
and
sub
sub
add
aam
inc
lods
inc
ffreep
je
dec
xchg
mov
push
popf
nop
sbb
xor
cmp
cs
inc
arpl
cmpsl
fidivrl
mov
mov
mov
xchg
or
cmp
shrl
fists
push
jns
xchg
in
add
leave
sahf
orl
jns
aaa
iret
in
sahf
pop
shr
gs
decb
lds
cmc
imul
adcl
mov
mov
mov
mov
sub
insb
ret
xor
rcll
push
loope
adc
pop
adc
aad
movl
sub
clc
mov
outsl
sub
fisubl
add
mov
loopne
andl
sbb
push
pop
dec
andl
cmp
jmp
jb
mov
push
ds
test
jne
movsb
dec
std
popa
add
sub
pusha
in
mov
inc
hlt
inc
lods
push
mov
movsb
scas
cwtl
jmp
xadd
idivl
push
dec
pop
jbe
leave
mov
xchg
adc
pop
adc
adc
dec
adc
add
or
sarb
mov
pop
sub
jnp
inc
dec
stos
test
ja
das
lcall
mov
xchg
xlat
xchg
das
rol
add
loop
fdivl
lcall
and
cmp
sub
lret
dec
push
call
jmp
and
mov
cmp
ss
mov
add
std
ret
jno
pop
jae
adc
dec
dec
push
and
bound
arpl
jbe
shll
push
sbb
movsl
pop
push
data16
inc
cs
xor
rorl
push
in
icebp
xchg
mov
loope
aam
or
mov
mov
lcall
out
ss
mov
movsl
repz
inc
mov
cwtl
cmp
pop
sub
fsubrl
rcpps
movb
cmp
addr16
scas
mov
jle
test
shlb
pop
sub
data16
cwtl
cmp
dec
cld
loopne
cmp
jg
imul
sbb
dec
jne
sbb
pop
or
ljmp
insl
fidivrl
cltd
fwait
push
pop
push
into
cmp
jp
pop
out
scas
negb
dec
popa
adc
test
xor
add
push
xor
fldt
cld
cmp
mov
push
loop
add
std
sarl
inc
xchg
push
push
xor
nop
in
lods
lods
out
test
push
sahf
ss
mov
repnz
scas
scas
cmp
mov
mov
and
add
inc
adc
mov
rcll
test
or
dec
push
dec
adc
push
pop
sub
fsubl
cmc
inc
mov
inc
adc
imul
stos
sub
sbb
mov
jns
mov
or
test
cmp
sub
lock
addb
aas
dec
sub
movsb
in
lahf
xchg
lods
xchg
mov
cmpl
mov
jg
clc
cmp
divl
repnz
mov
jns
cmc
sub
call
cmp
or
in
push
clc
js
movsb
shrl
stos
lahf
aam
sbb
sbb
or
scas
add
jmp
cwtl
sub
icebp
xchg
jg
add
cs
scas
rolb
sub
inc
dec
popa
jp
loopne
test
fs
ret
out
mov
stos
fsubl
jbe
in
cltd
sbb
repnz
fwait
imul
hlt
add
loope
sbb
mov
out
push
inc
sub
adc
aaa
jae
push
mov
movsb
push
ret
xchg
or
roll
dec
add
mov
ret
xor
push
cltd
hlt
jo
in
jo
mov
mov
sbb
addr16
sub
pop
or
push
xor
lcall
imul
orb
jbe
sbb
addr16
enter
test
aas
imul
movsb
fldt
adc
loope
jl
push
andl
or
or
rcll
and
subb
push
mov
fisubl
fidivrs
popf
les
ljmp
mov
ror
and
adc
xchg
xchg
gs
pop
pop
outsl
movsb
dec
js
push
daa
hlt
repnz
test
pop
ldmxcsr
inc
scas
push
repz
shll
push
push
test
scas
std
cmp
jno
or
jne
in
fisttps
sti
xor
adc
add
std
aas
mov
jg
add
cmp
and
lock
mov
cmp
out
lret
pop
bound
or
out
loope
ret
in
fistpll
or
dec
mov
out
mov
subl
adc
push
push
jo
add
adc
sbb
arpl
or
fidivl
add
cld
or
scas
xor
lar
jae
les
pop
cltd
sbb
test
sbb
lock
lds
jg
cmc
push
xchg
adc
fwait
sub
inc
enter
add
xchg
js
enter
cmp
outsb
test
js
rcr
xchg
adc
xor
mov
and
std
in
in
daa
mov
xchg
clc
mov
sbb
sbb
cmc
insb
scas
nop
mov
popa
pop
jmp
in
inc
xorb
or
lret
shll
mov
in
jmp
mov
fsubl
loop
cmp
aad
outsl
inc
fisubs
ja
cmp
xor
imul
div
icebp
cwtl
push
jp
jns
es
ja
sub
pop
mov
pushf
insl
sub
stc
add
aad
das
mov
xchg
arpl
mov
mov
ret
xchg
lahf
adc
and
movsl
lret
jbe
mov
dec
lods
mov
clc
push
sub
sti
insb
xchg
jg
stos
pop
test
xor
in
out
cmp
pushf
push
xchg
adc
adc
dec
mov
xchg
cmp
and
sub
add
ficompl
adc
dec
ret
ljmp
nop
out
lret
clc
cs
sbb
adc
negl
mov
scas
ss
pop
faddl
movntps
aad
lret
add
loopne
dec
mov
and
js
xchg
push
push
dec
pop
xchg
mov
ljmp
clc
in
xor
push
shlb
xlat
sub
mov
fwait
es
dec
xor
mov
shrl
mov
addr16
sbb
int
inc
sub
scas
or
cmp
cmc
push
jns
ljmp
std
sbb
cltd
daa
popf
popa
add
outsb
in
push
add
sub
call
cmc
ror
cmpsl
inc
dec
gs
ljmp
pop
push
mov
out
xchg
outsl
fucomi
repz
loop
outsb
push
fsts
popa
and
lcall
xchg
mov
inc
das
into
inc
sbb
or
xchg
and
cmp
das
inc
xchg
sub
mov
fstl
add
or
fwait
enter
adcb
adc
idivb
or
and
arpl
test
cwtl
std
cmp
jno
push
inc
test
mov
cmc
js
and
cs
pushf
pop
ljmp
mov
fidivrs
stc
test
push
enter
add
out
jge
test
nop
inc
aam
sbb
mov
inc
mov
stos
sub
xor
pop
add
popa
xlat
xchg
dec
fisubl
movsl
xor
xor
in
mov
ret
out
loopne
out
mov
jge
fstl
fcom
call
int3
test
xchg
mov
cmpsl
cmc
pop
repz
sbb
jg
xchg
pop
xor
mov
daa
and
inc
cmp
loop
mov
rorb
push
shlb
enter
or
cmp
inc
inc
pop
sbb
cwtl
mov
stos
ja
dec
jns
add
call
ljmp
lods
dec
adc
adc
rorl
int3
inc
xor
das
loopne
repnz
xchg
sub
out
bswap
jae
pusha
mov
aad
fbld
insl
mov
stc
push
push
cmpsb
stos
outsb
shll
sbb
adc
out
adc
xchg
cs
or
cmp
int
das
xor
sarl
xchg
push
and
insl
push
loopne
cmc
sbb
dec
ja
push
dec
mov
adc
cmpsb
inc
xor
xchg
out
aaa
push
stc
test
shl
popa
sub
mov
mov
and
or
repz
mov
lret
in
adc
mov
out
into
xlat
xor
pop
sbb
jb
mov
imul
jmp
inc
xor
int
in
add
jne
jb
and
daa
push
cmp
sbb
pop
xchg
scas
mov
hlt
leave
aad
test
outsl
dec
out
imulb
sub
repnz
cmp
mov
mov
repnz
mov
pop
pop
mov
mov
dec
lcall
incb
movsl
enter
pop
xchg
loopne
and
dec
addr16
push
sub
ljmp
ja
dec
cmpb
inc
lods
mov
js
or
cli
mov
cs
xor
clc
adc
fwait
insl
stos
dec
sub
sahf
push
cld
testb
jmp
cmp
jno
inc
sbbb
mov
xor
inc
mov
jbe
aam
xchg
bound
lahf
pop
mov
addl
mov
jb
out
xchg
lret
fxch
push
rcll
and
fimuls
sbb
and
lret
shl
cmp
lods
jnp
push
adc
xchg
dec
int3
pop
sbb
repz
adc
test
repnz
insb
xchg
pop
out
mov
jne
hlt
mov
cmp
lahf
mov
cmp
xor
push
jno
jno
cli
jmp
addr16
cmc
rolb
jne
xchg
lret
dec
mov
push
cmp
adc
sbb
lret
cmc
mov
orl
fbld
rcrb
fsubs
orb
or
sub
scas
and
xchg
stos
insl
iret
insb
jno
lods
xor
jg
jno
popa
add
mov
lock
sub
fwait
ljmp
jle
imul
mov
and
push
xchg
pop
out
pop
fwait
ret
mov
inc
sahf
xchg
mov
push
in
mov
and
outsb
aad
mov
mov
imul
xlat
xor
mov
dec
jo
fstl
mov
dec
sbb
bound
sbb
sub
es
out
into
aam
sti
into
pop
sub
adc
pop
aam
jbe
add
popf
sarb
lret
jecxz
jo
cmp
cmpsl
sbb
popf
sub
cld
cmpsl
inc
lods
shrb
movsb
outsb
arpl
lret
add
sahf
adc
jecxz
fists
inc
sub
sub
jb
mov
push
pop
test
xchg
mov
add
clc
jbe
lret
dec
ja
negl
fwait
cmpsl
inc
or
mov
xor
inc
stos
into
addr16
fs
inc
inc
ret
mov
out
aas
xchg
into
lea
test
mov
jo
outsl
dec
leave
leave
sti
xchg
arpl
mov
push
hlt
pop
xchg
pop
inc
mov
into
fnstsw
xchg
insl
fisttpll
dec
or
icebp
jb
and
das
add
cld
and
gs
inc
mov
fidivrl
sbb
push
pop
outsb
cli
xchg
or
pop
movsb
mov
push
in
gs
jp
xlat
sub
test
nop
insl
or
jb
cmpsb
fidivl
pop
mov
iret
mov
test
and
jg
and
xor
jg
sahf
sub
add
orl
out
leave
or
jmp
adc
aad
test
pop
loopne
mov
mov
lock
pop
cmp
mov
dec
fidivrl
into
mov
pop
push
fdivs
repnz
jbe
pop
rorl
jl
ficoml
sub
out
mov
jno,pn
inc
pop
and
in
add
into
ret
scas
int
stos
and
stos
mov
or
or
iret
lock
loopne
loop
and
aam
push
scas
test
push
aam
inc
dec
mov
sbb
sbb
popa
xor
out
xchg
push
xchg
loop
movsl
push
stos
out
ret
push
jle
repnz
pop
lea
idiv
shl
lea
int3
push
push
ud2
dec
dec
sbb
fistl
mov
mov
les
test
mov
in
out
rcrl
push
outsl
ja
and
or
dec
les
insl
sti
inc
ds
push
mov
push
xchg
inc
daa
aas
shlb
jp
xorb
add
addr16
aad
shlb
sub
push
lds
in
insl
adc
xor
pop
stc
int
into
push
fsubl
mov
adc
popa
xor
je
inc
xchg
jbe
popa
int
sbb
lahf
out
cli
fstps
pop
mov
sbb
dec
repnz
dec
int
mov
pop
xlat
mov
pop
mov
call
popf
sub
bound
mov
in
dec
rclb
pop
sub
imul
and
push
or
jmp
or
add
ret
sbb
stc
pop
mov
repz
shlb
xlat
daa
negl
cld
lock
dec
nop
inc
pop
clc
push
aam
addl
cmc
inc
pop
mov
jae
loope
jae
roll
stc
std
and
pop
cmp
mov
sbb
cmpsl
jmp
imul
jbe,pt
idivb
sahf
aas
push
paddusw
out
ret
jp
add
imul
fimuls
test
jb
pop
fiadds
cmp
neg
sahf
adc
insb
iret
in
mov
inc
mov
daa
and
inc
pop
es
jns
js
test
call
pushf
pop
xchg
and
adc
inc
inc
clc
or
divl
aam
psubusw
int3
adc
cmp
lods
icebp
mov
adc
int3
mov
add
sahf
cltd
sbbb
add
mov
mov
test
sub
add
mov
fsubl
push
sbb
and
mov
data16
lret
int
dec
pop
inc
adc
fs
adc
inc
xchg
xor
addr16
sub
sbbl
xchg
sarb
mov
push
aad
lods
mov
mov
dec
gs
fidivl
out
les
aam
mov
fists
lods
xchg
mov
sbb
std
fmul
jns
mov
adc
aam
dec
push
stc
xchg
add
xchg
movnti
fsubrs
dec
xor
xchg
dec
in
loopne
adc
add
jnp
hlt
fstpt
xor
cld
add
leave
das
xchg
pop
fdivr
loop
sub
fidivs
lds
lods
insb
aad
pop
repnz
lcall
jno
jg
adc
or
cmpsb
xor
icebp
les
mov
hlt
push
mov
mov
jbe
fsubl
or
mov
popf
lods
jae
insl
adc
mov
xor
stc
out
jp
mov
pushf
xor
add
pop
test
jno
mov
and
cmp
leave
pop
ljmp
jae
sbb
mov
fnsave
leave
jns
jae
and
adc
mov
iretw
aaa
pop
add
sbb
hlt
sti
clc
test
adc
cs
stos
xor
pop
pop
test
das
sub
adc
fdivp
fcomps
add
fisubl
fidivrs
push
aas
dec
add
sbb
lahf
lcall
add
inc
pusha
mov
sbb
notl
mov
andl
xchg
or
lea
adc
and
mov
add
call
jbe
pop
xchg
mov
jle
sbb
xor
mov
es
fsubrl
aaa
fcoms
xchg
sti
movsl
arpl
aad
das
pop
and
aas
pop
inc
mov
sbb
xchg
mov
adc
xchg
hlt
xorb
cmp
push
daa
pushf
movsl
test
pop
add
mov
pop
pop
roll
xorb
sti
mov
mov
mov
and
cli
stos
aam
hlt
mov
mov
mov
icebp
lea
push
xchg
les
and
push
xor
jl
jne
mov
xchg
mov
fs
repnz
out
test
insb
xor
sub
push
mov
shll
rcll
inc
bound
cli
dec
jo
aam
mov
rdtsc
push
gs
lahf
xorb
or
fs
mov
push
inc
xor
aas
xchg
test
arpl
push
xchg
in
cmpsb
repz
arpl
movsb
enter
xchg
sbb
lock
stc
and
push
nop
imul
stos
std
pop
xchg
cld
adc
jge
iret
pushf
or
pushf
or
xchg
push
filds
insl
cmc
ficompl
popf
mov
sqrtps
fisubrl
ficompl
cmpsb
ljmp
inc
cmp
mov
jg
icebp
dec
test
jmp
iret
fistpll
xchg
sub
pop
mov
jle
push
xchg
fldcw
sbb
testb
push
outsl
mov
ret
hlt
jecxz
dec
lcall
jo
sbb
mov
outsb
sbb
inc
adc
mov
ret
aas
jecxz
inc
mov
dec
add
loope
adc
fisttps
icebp
push
dec
imul
xchg
fnsave
pop
pop
xor
outsb
sbbl
out
inc
mov
mov
popa
aaa
xchg
lahf
sbb
roll
jns
pop
ret
add
adc
ret
and
cli
into
xchg
ds
pop
add
out
fistl
cmp
lahf
addr16
mul
jns
sahf
sub
cmp
adc
mov
xor
fs
insl
int3
cmpsl
xor
movsl
jmp
push
mov
stos
popf
aas
and
mov
sbbb
test
test
pop
mov
jbe,pn
xor
clc
adc
push
dec
sub
xchg
dec
lahf
adc
xorl
cmp
movsb
iret
push
cwtl
inc
push
ja
push
sbb
int
loope
shr
lea
mov
xchg
mov
adc
add
cmc
fcompl
orl
push
xchg
cmp
testb
and
das
lahf
fldt
lret
das
fistl
cmp
dec
fsubl
sbb
int3
test
cmp
ss
cmc
in
xor
inc
mov
out
mov
rorl
in
xor
ret
cmp
shll
imul
cmp
filds
jnp
cmp
push
mov
out
mov
aaa
and
jle
adc
fs
pop
addr16
or
adc
scas
push
outsb
call
enter
jl
jo
ja
popa
cmp
mov
inc
repz
and
out
ret
sbb
lock
mov
jno
lods
mov
insl
mov
iret
cmp
aad
adc
mov
rcll
inc
ss
ljmp
jmp
lods
push
xor
fmul
daa
movsb
fildll
push
xchg
addr16
push
aad
dec
loopne
xchg
cmp
jp
mov
sbb
mulb
cmpsb
mov
cmpsl
mov
xlat
nop
leave
sbb
flds
cli
dec
shlb
pusha
aas
sub
mov
sub
pop
inc
xchg
lock
jl
ja
test
mov
xchg
dec
pop
xchg
lcall
sub
add
push
and
roll
adc
movsl
stc
outsl
mov
inc
mov
pop
insl
mov
push
mov
dec
insb
or
sub
mov
push
lds
loop
and
out
cli
daa
imul
test
inc
jo
bound
and
sti
aas
mov
cmpsl
xchg
xor
ret
imulb
loope
out
xchg
rolb
pop
jno
fnsave
inc
dec
inc
outsb
fisubl
inc
jae
add
out
and
inc
jbe
int3
in
xor
cmpsl
pop
ret
inc
adcl
mov
lds
popf
lahf
ret
adc
hlt
jne
in
test
inc
in
pop
mov
repz
and
mov
add
sbb
inc
int3
and
pop
push
push
ja
loope
loope
int3
xchg
stos
icebp
and
mov
sbb
pop
divl
lahf
nop
xchg
les
cmpsb
xor
sbb
push
mov
outsb
cs
cmp
loop
sub
in
ret
aaa
ljmp
lods
xchg
outsl
addl
xor
push
pop
sub
mov
fiadds
add
cmp
jge
jecxz
loop
adc
lea
mov
cmp
and
lahf
int
ret
xchg
fiaddl
je
or
cmpsb
sarb
fdivrl
cmpsb
in
cwtl
mov
jp
loope
bound
mov
testb
and
andb
push
dec
jecxz
cmp
mov
xchg
stos
cmp
push
aam
mov
rcrb
mov
inc
push
popf
mov
adc
sbb
loope
ss
push
lahf
pop
aad
adc
mov
add
cmp
outsb
gs
pop
inc
and
pop
dec
clc
fsubr
test
and
jno
punpckldq
loope
sbb
insl
cmp
push
cmpsb
dec
jbe
push
in
lds
push
imul
cmpsl
xor
subl
stos
jecxz
cltd
loope
or
jnp
xor
mov
and
stos
mov
mov
pop
loop
sar
data16
mov
jp
mov
std
jle
das
cld
ret
mov
adc
xchg
mov
adc
or
out
ds
outsl
push
cmp
xor
inc
pop
push
inc
pushf
or
mov
mov
jbe
sbb
cmp
xchg
adc
add
inc
out
loope
out
sbbl
in
stos
movsb
push
and
mov
fwait
addr16
push
xor
repnz
repnz
lcall
insl
fisubs
mov
ljmp
pop
int3
adc
scas
fiadds
xor
pop
inc
push
push
outsb
test
popf
int3
adc
gs
je
mov
mov
cwtl
test
stos
fdivrs
sub
gs
dec
inc
pusha
mov
add
ret
inc
dec
loop
jo
xchg
test
out
xchg
jbe
jmp
repnz
or
xchg
push
mov
jp
add
insl
cltd
int
or
mov
es
add
mov
call
test
hlt
sub
les
cmp
mov
aas
stos
addr16
cmpsb
or
insl
jg
fs
ss
xchg
jno
xor
xchg
lds
in
ja
icebp
add
push
push
or
push
loopne
or
andb
and
add
push
sbb
dec
test
rorb
and
es
pop
mov
adc
in
ret
add
in
test
push
popa
mov
or
movsl
daa
mov
call
std
dec
leave
sub
push
scas
push
pop
xor
inc
and
jns
push
mov
pop
ror
xchg
jecxz
adc
mov
nop
sub
lods
rcrl
shlb
mov
in
xlat
push
in
incb
jo
insb
sub
xchg
fisubrl
push
mov
ficoms
pop
push
ljmp
or
xchg
inc
fs
adc
pop
sti
aad
or
insb
jb
fstpl
mov
xchg
push
push
inc
xor
xchg
jns
imul
fisubrs
nop
mov
dec
mov
out
sub
mul
mov
enter
repnz
cmp
subb
hlt
push
add
pop
pop
mov
jecxz
loopne
dec
xchg
lahf
jmp
jecxz
test
inc
push
movsl
mov
repz
push
lret
scas
addl
sti
dec
imul
lods
stc
repnz
and
adc
xchg
jo
mov
push
xor
into
fsubl
jne
ds
or
repz
addb
pushf
dec
mov
mov
add
xchg
adc
or
xor
add
gs
inc
inc
jno
jns
out
fnstenv
shll
mov
imul
test
into
push
mov
xchg
pop
sub
jae
sbb
pop
lcall
test
mull
int3
mov
clc
cli
xchg
cwtl
push
imul
mov
test
dec
add
mov
mov
sarb
add
rol
and
cld
mov
aas
xlat
rclb
and
cmp
and
inc
lcall
push
add
sub
test
sbb
repz
dec
lock
popf
test
fbstp
mov
sbb
mov
or
push
mov
sbb
jno
mov
mov
fldenv
std
adc
cmc
fdivrs
push
add
dec
test
sbb
out
cmp
mov
dec
and
pushf
enter
pop
ret
jns
jns
popa
cmp
lret
call
aas
push
jmp
cli
xchg
mov
fs
push
push
adc
in
imul
sub
mov
jle
pop
mov
enter
movsb
mov
sbb
enter
mov
dec
and
xor
dec
lcall
or
std
lahf
cli
jns
jecxz
test
ss
sub
cmp
xchg
pusha
das
or
mov
testl
inc
jo
inc
or
test
sub
cmc
cld
popa
cld
xchg
mov
hlt
loop
jge
pop
jns
in
cmpsl
mov
inc
mov
stos
out
mov
xchg
pop
pop
in
fcmovne
or
ja
aam
push
sahf
xlat
aas
dec
and
push
jbe
mov
mov
mov
cmp
neg
popa
out
movsl
stc
lds
xchg
xchg
jl
push
mov
pushf
lea
push
xchg
inc
sub
stos
adcb
adc
mov
lret
inc
cmp
cmp
push
jmp
test
popa
test
or
mov
lods
xlat
je
pushf
or
dec
cmp
dec
adc
add
ja
mov
shl
xchg
es
lods
cmp
scas
lret
sbb
pushf
adc
mov
neg
pop
aam
xchg
jno
lahf
fstl
loopne
jb
and
mov
dec
sbb
xchg
fsubr
jno
or
insb
sub
push
fstpl
jbe
sbbb
and
ret
lret
movsb
cmp
cltd
sbbl
sbb
fidivl
fsubrs
jns
stos
sbb
add
loop
cld
iret
std
mov
mov
pushf
push
hlt
pop
dec
push
int
in
insl
adc
lret
add
sub
cmc
inc
loope
out
stos
fstpt
ja
in
add
daa
jbe
dec
cld
jp
mov
xchg
sbb
and
add
sub
fucomp
dec
lods
mov
out
aad
dec
mov
sahf
mov
in
pop
push
scas
push
jo
dec
imulb
pop
push
adc
out
imul
into
fidivrl
lea
jp
dec
add
jns
jg
jo
aam
lahf
in
movsl
es
arpl
test
sbb
xor
pop
pushf
pop
dec
ljmp
fstl
sbb
push
test
mov
cld
pop
mov
lods
mov
ret
pop
add
les
mov
adc
jl
sbb
pop
sub
sbb
mov
dec
pop
or
xchg
ds
cmp
stc
cltd
sub
nop
js
int3
aam
or
lcall
dec
dec
cli
xchg
adc
and
sbb
ds
or
add
sti
arpl
cmp
mov
in
scas
mov
call
xchg
cmp
sbb
pop
xchg
cmpsb
xchg
decl
push
out
lds
addb
cld
pop
pop
js
push
movsb
add
cwtl
aas
sub
fdivrs
fnstsw
jae
adc
ret
nop
jo
xlat
pushf
jmp
adc
cwtl
inc
dec
icebp
ja
pop
test
lods
adc
pop
shlb
js
movb
cmp
in
std
in
xrelease
pop
bound
jb
mov
pop
sarl
mov
loop
ret
sub
std
ss
jp
popa
xor
xchg
add
push
test
push
or
fst
pop
cmp
push
movsb
fs
adc
shlb
jl
sbbb
sarl
push
nop
lods
ja
pop
push
jl
jbe
movups
loope
mov
lods
loop
jg
frstor
pop
inc
shlb
and
xchg
cwtl
popf
xchg
ds
insl
xchg
add
mov
lods
cmc
stc
xor
dec
mov
test
stc
std
adc
int3
pop
or
push
xor
and
ret
daa
push
fcmovnbe
add
aaa
lret
xchg
mov
scas
insb
or
je
cmp
cmp
inc
xchg
add
fidivrl
bound
xor
int3
daa
or
popa
jb
and
insb
and
fwait
cwtl
test
and
imul
xor
mov
mov
inc
fs
and
sarb
xchg
adcl
icebp
inc
aad
pop
lods
dec
dec
dec
hlt
es
mov
sbbl
scas
fcompl
adc
jne
xor
dec
lret
xchg
fs
xor
in
xor
xchg
mov
sub
xor
push
jmp
jle
loopne
sar
dec
mov
inc
daa
cwtl
std
repnz
xor
ficoms
popf
xor
popf
out
int3
sbb
lea
repz
cmc
lret
inc
mov
scas
test
icebp
cmp
mov
push
pop
xchg
loop
cltd
js
push
or
jp
mov
sbb
inc
or
idiv
xor
insb
push
shrl
in
hlt
loop
pop
jmp
pop
stos
frstor
cmp
out
or
push
mov
mov
cmp
xchg
and
and
hlt
cmp
pop
rorb
mov
pop
aas
lds
bnd
mov
repz
pop
ftst
fldl
ret
lock
shlb
mov
xchg
lea
and
xchg
insb
test
and
cmp
jge
jge
push
push
and
les
imul
push
dec
lret
jno
mov
test
cmc
lcall
pusha
enter
bound
jnp
jno
mov
fsts
mov
sub
icebp
push
gs
inc
test
jmp
arpl
jp
dec
aaa
jmp
rcl
mov
mov
stos
xlat
repz
lret
mov
push
sarl
and
push
sti
cli
mov
loop
bound
dec
into
pop
roll
mov
jae
out
sbb
mov
fistps
ds
es
mov
loopne
es
xor
cmp
or
iret
stos
pushf
aaa
cmp
icebp
loope
mov
outsb
and
push
xchg
aaa
aam
repz
xchg
cmpsl
inc
pop
adc
andb
push
push
mov
jbe
xor
cs
adc
ja
push
cmpsb
mov
mov
hlt
pop
and
dec
sti
add
xchg
insl
js
call
loope
adc
das
vpavgw
fs
xor
inc
adc
cmp
adc
ret
inc
push
ret
rcll
mov
imul
hlt
xchg
ficoms
jb
sbb
aad
xchg
xlat
sub
jno
aas
cs
testl
nop
xlat
push
mov
or
subb
push
lahf
xchg
and
sahf
dec
insb
ljmp
pop
outsl
inc
aaa
nop
push
mov
into
ss
fdivrs
icebp
cmp
push
sahf
lcall
out
movsb
sbb
nop
sbbb
and
add
dec
or
or
pop
movsl
stos
cmp
mov
daa
cmc
adc
xchg
adc
mov
mov
fisttpll
sub
push
mov
in
mov
in
icebp
stc
push
lcall
test
std
aas
gs
xor
out
dec
call
mov
mov
and
lahf
push
push
in
xchg
imul
aam
je
outsb
loope
test
fsubs
out
mov
push
pop
xchg
push
fwait
bound
ss
xor
adc
mov
stc
and
push
push
sbb
jmp
mov
pushf
mov
lret
add
hlt
push
out
clc
addb
mov
xchg
push
fndisi(8087
lret
insb
or
sti
ficoml
jmp
fnstsw
int
dec
pop
sbb
sbb
push
mov
pop
fs
mov
mov
adc
in
in
cltd
or
jb
pop
cmovs
or
sub
jns
in
cmc
mov
jne
xchg
pop
stos
loopne
aam
dec
jle
sub
fidivs
xor
or
sbb
or
movb
adc
loope
std
out
mov
shlb
jno
fdivs
popf
popa
sbb
sbb
hlt
out
pop
dec
mov
fimull
cmp
adc
or
cmpsb
mov
cmp
test
xor
push
adcl
cmp
xchg
or
xor
jae
push
pop
sbb
adcl
aam
push
sahf
outsl
subl
movsl
mov
iret
aaa
mov
icebp
jae
cli
push
lea
dec
xchg
arpl
mov
movsl
push
cld
std
push
add
hlt
jl
and
in
les
xchg
add
xor
mov
or
or
jbe
mov
jne
loope
mov
mov
fcoms
dec
enter
and
adc
jns
jecxz
dec
sbb
jae
fimull
scas
mov
jae
pop
lret
xor
mov
push
and
cmp
in
scas
arpl
or
and
outsb
shlb
mov
mov
popf
pop
pop
rcrb
repnz
shrb
cld
pop
or
sbb
inc
add
add
jge
ret
xor
test
cs
jo
xchg
cmp
mov
jle
mulb
pop
sahf
push
in
push
in
push
movsb
ret
push
lahf
repnz
pop
jns
nop
sti
add
push
data16
cltd
ret
ljmp
imul
mov
fiadds
sbb
add
pop
sahf
cmc
pop
std
push
pushf
clc
cld
leave
es
or
mov
insl
test
and
fwait
rcrb
or
fsubs
fistpl
mov
cmp
ret
imulb
inc
push
jb
shl
sub
push
imul
sbb
mov
insl
mov
xor
xor
xchg
enter
movsb
int3
or
fcompl
inc
push
icebp
dec
rolb
outsb
mov
sbb
add
loop
sub
dec
inc
loope
adc
cli
inc
adc
pusha
jl
pop
clc
push
in
xor
dec
gs
enter
popf
les
fisubs
je
lods
inc
lret
jns
mov
shl
adc
inc
cmp
cltd
jno
or
daa
scas
jo
sub
jle
nop
or
cld
insl
jg
dec
mov
lds
adc
push
mov
rcll
stos
mov
jb
mov
jl
jbe
addl
mov
mov
testb
test
push
fldln2
jg
shrl
mov
imul
and
fs
icebp
mov
out
ret
in
dec
loopne
mov
lret
or
mov
push
jb
cmp
mov
and
imul
into
aaa
icebp
jl
and
push
xor
in
xchg
gs
lods
pop
mov
inc
push
and
iret
dec
lea
sbb
cmp
pushf
dec
lds
cmp
in
in
cld
shl
outsb
stc
cmp
or
mov
xchg
jnp
mov
cmp
cmp
dec
mov
jg
mov
xchg
mov
sub
lods
in
out
das
hlt
sub
xor
out
push
in
hlt
adc
das
mov
push
sub
repz
div
add
lret
xchg
xchg
std
scas
sahf
rcrb
iret
mov
cmp
lret
and
out
mov
adc
fstps
leave
stos
cmp
cmpb
adc
dec
and
fidivl
test
mov
ret
pop
jge
push
ret
push
dec
mov
sbb
cli
or
xchg
dec
inc
xchg
and
mov
nop
xchg
dec
mov
mov
test
nop
dec
jp
into
push
imul
push
ljmp
mov
sbb
push
inc
in
sbb
sbb
clc
hlt
and
jo
sbb
xchg
stc
fsubrs
das
jbe
popa
jo
pusha
pushf
inc
jmp
sbb
push
dec
sbbl
lcall
out
xchg
cmpsl
adc
pop
insb
and
fidivl
loop
into
sbb
aad
outsl
jge
and
pop
sub
sbb
leave
adc
add
jb
ljmp
std
out
xor
xor
ud0
lds
cmc
add
iret
push
lfs
stos
gs
pop
nop
rol
mov
outsl
leave
mov
mov
movsl
lcall
cltd
insl
call
cli
xchg
hlt
leave
xorl
nop
sbb
xchg
jbe
sub
pop
cmpsl
xchg
xchg
punpckldq
jg
xchg
loop
fidivrs
inc
sub
scas
out
and
mov
sbb
cli
lcall
jno
outsb
mov
fs
pop
movsl
dec
and
call
stc
inc
imul
xchg
stc
inc
dec
outsb
dec
nop
add
mov
xor
pop
nop
repz
mov
loopne
int
clc
rclb
or
pop
lea
add
dec
pop
aam
lret
cmpsb
push
lret
in
jo
fwait
jne
push
push
stos
stos
out
fwait
in
cmpsl
cmpsl
shl
das
and
mov
sahf
xchg
xor
int
push
call
pop
xchg
fnstcw
stos
pcmpgtw
pusha
arpl
add
addr16
xchg
ljmp
inc
repz
inc
lds
orb
dec
adc
gs
clc
mov
dec
das
fmul
dec
faddl
sbbl
cld
ja
fisubl
pushf
push
inc
dec
aas
add
lret
out
pop
mov
fsts
add
jae
add
pand
test
or
imul
jae
rolb
pop
pop
pop
xchg
movsl
mov
or
jp
jno
ds
pushf
leave
add
inc
adc
pusha
cli
push
lret
cmp
hlt
and
mov
mov
test
bound
mov
sbb
aam
mov
fisttpll
add
aaa
lahf
test
test
mov
or
loope
mov
int
sbb
es
jle
insb
mov
mov
jecxz
sbb
imul
jne
or
ds
adc
sahf
movsl
sarb
fwait
adc
cmp
mov
inc
jae
das
jne
mov
stc
push
fildll
pop
pop
nop
pop
loopne
pop
lret
cmp
and
sahf
pop
iret
jmp
fistpl
fmulp
push
clc
inc
shll
cli
jmp
pop
xor
ljmp
fimuls
push
mov
in
add
mov
inc
fcomps
xchg
adcb
pop
aas
xor
lret
ja
outsl
push
inc
rol
pop
pop
rorb
inc
daa
and
cmp
pop
sbb
cmpsl
loopne
mov
dec
push
pop
and
out
and
test
mov
sub
test
leave
pop
or
js
xchg
mov
dec
sub
jnp
aaa
mov
insl
fstl
lea
lods
insl
out
sbb
xchg
nop
orb
jo
xor
int
int
sbb
clc
push
mov
loope
sub
inc
daa
add
push
lds
test
mulb
xor
xchg
ss
lea
data16
inc
inc
shlb
mov
xchg
fs
xchg
test
mov
pop
call
sub
dec
mov
test
inc
and
push
fimull
sub
cmp
xchg
daa
adc
les
sbb
sbb
sub
xor
inc
test
mov
rolb
or
add
jle
adc
xchg
xchg
xchg
lock
arpl
imul
jo
inc
sbb
cmp
and
dec
dec
cmp
ficoms
mov
pop
pop
aam
movsl
mov
or
jp
dec
jmp
fistl
ljmp
and
sbb
mov
mov
fimull
mov
xchg
xchg
sbb
pop
pop
shr
cmpsl
jb
scas
out
fimuls
out
jae
mov
or
and
cld
lds
out
sbb
ret
and
mov
out
das
jecxz
stos
jecxz
scas
push
dec
mov
ret
pop
inc
pop
ss
fdivrs
lods
cmp
mov
js
sbb
aas
mov
xor
sar
ss
repnz
ljmp
out
das
mov
nop
and
test
ljmp
mov
inc
fadds
mov
scas
sti
adcl
pushf
add
push
cmc
cli
popf
notb
movsb
sub
xor
insb
clc
leave
notl
test
outsb
insb
add
stos
dec
jne
mov
or
lret
fsubrp
push
je
or
mov
jmp
lret
xor
mov
lcall
sahf
loop
cmp
cmpsb
push
add
ljmp
mov
inc
sub
subl
and
ss
jmp
mov
cmp
lahf
out
out
aad
data16
xchg
popa
adc
pop
mov
outsl
and
test
cli
test
cmp
je
in
out
hlt
add
jb
stc
xchg
lods
xor
in
shll
ret
outsb
pop
jg
scas
cwtl
daa
dec
orb
xor
das
out
int
rcrl
mov
mov
adc
mov
outsb
push
sub
push
mov
xchg
xchg
sbb
mov
mull
pop
mov
and
scas
fs
loope
stos
xlat
xor
dec
daa
int3
jo
adcb
mov
movb
pop
fsubr
cs
pop
add
out
ret
scas
shl
fadd
jecxz
or
insb
icebp
mov
mov
loop
jp
icebp
adc
jge
xchg
jnp
cwtl
daa
pop
inc
int
add
imul
or
mov
add
in
xor
insb
mov
test
jecxz
jb
adc
cmp
sbb
mov
lock
cmp
xor
cmpsl
pop
rcl
dec
fsubrl
shll
or
subb
cmp
jl
lds
incl
fmull
sti
mov
test
sub
mov
cwtl
ss
out
pushf
data16
xchg
adc
jecxz
je
mov
xchg
adcb
mov
fimuls
push
inc
mov
lods
dec
nop
sbb
cmp
or
mov
ja
pop
int
out
std
out
lea
cmp
fcoms
test
movl
out
loope
iret
sbb
ret
loopne
insl
stc
xchg
xchg
pusha
cmp
push
and
dec
rolb
or
pop
jo
iret
popa
xchg
or
mov
mov
cmpsb
add
pop
mov
arpl
mov
mov
add
add
bound
arpl
xchg
or
push
push
push
push
inc
and
into
imul
nop
push
stos
pop
xchg
xor
clc
into
cli
jnp
call
mov
mov
dec
in
sub
sbb
pop
push
arpl
and
stos
movsb
into
or
and
ret
adc
xchg
push
jb
ljmp
push
loop
jl
clc
pop
or
data16
cmp
xchg
add
fidivs
stos
fisttps
cwtl
fs
sti
call
jae
out
call
cmp
push
popa
add
push
sbbb
add
sub
push
sbb
icebp
in
push
aaa
or
mov
aas
pop
or
imul
sbb
xor
mov
push
in
mov
mov
enter
sub
dec
insb
iret
aas
xchg
in
pusha
jmp
fmulp
mov
scas
lds
dec
sub
cmp
add
jg
ret
dec
loop
insl
sub
out
insl
pop
into
clc
pop
pop
fwait
xor
inc
testl
fwait
lahf
fcompl
hlt
ss
add
movlps
ficoml
je
jle
and
mov
fdiv
mov
mov
or
aam
sub
int
sbb
mov
sbb
xlat
imul
jns
dec
push
mov
aaa
dec
into
jp
cmpsb
jmp
mov
std
inc
push
fstpt
jp
jge
stos
or
xchg
mov
pop
push
adc
push
adcl
outsb
stos
pop
xchg
rclb
fcoml
inc
jp
xor
cwtl
repnz
test
stos
push
push
mov
popa
jnp
ja
dec
push
mov
dec
pop
mov
dec
pusha
mov
xchg
jne
inc
icebp
dec
and
jge
data16
sti
mov
js
out
js
xchg
addb
aas
aaa
data16
jno
pop
hlt
pop
jge
loop
cwtl
mov
rcr
mulb
fcmovne
divl
imul
in
xorl
inc
push
data16
sub
pop
mov
lea
or
mov
fs
cli
adc
aas
mov
mov
and
jp
in
pop
sbbl
sbb
mov
and
mov
push
xchg
jnp
or
sahf
mov
jo
fadds
pop
fs
inc
xchg
repz
inc
adc
cmp
out
sti
xchg
outsl
sub
pushl
cmp
pop
clc
insl
data16
mov
jge
hlt
out
cmp
push
in
sti
cld
lcall
sbb
iret
aam
and
pop
sub
pop
mov
push
adc
push
cltd
loopne
sbb
insl
ljmp
xor
ja
dec
mov
shlb
add
pop
mov
push
adc
xor
jg
in
push
pop
fistl
adc
dec
push
push
cmpsb
push
mov
push
sbb
push
pop
pop
mov
xlat
sub
mov
test
xchg
xor
mov
cmpsb
sub
and
cmp
mov
and
addl
cmp
push
aad
xchg
mov
push
loope
scas
je
sar
mov
ror
mov
push
sti
pop
jnp
jge
jp
pushf
or
rsm
movsb
mov
jnp
lock
test
arpl
shlb
pusha
mov
or
pusha
out
sub
xchg
fisubrs
fscale
fadd
rclb
and
dec
inc
sbb
gs
ret
std
add
aaa
pop
mov
mov
std
lahf
inc
pushf
daa
pop
mov
lret
add
sub
cmp
imul
dec
dec
enter
pop
jge
mov
shrl
mov
mov
or
xor
rcrb
sub
pop
ret
lods
es
inc
movb
jmp
ljmp
mov
push
sub
inc
test
mov
pop
aad
cmp
fwait
sbb
mov
sub
add
push
dec
cmpsl
sti
cmp
push
jne
pusha
mov
aam
xor
jecxz
lods
gs
push
add
in
popa
aam
out
mov
scas
pop
jp
ljmp
call
dec
xor
dec
adcl
inc
sub
adc
xor
cmp
mov
xchg
or
push
xchg
data16
sub
xchg
mov
xorb
pop
sbb
stos
pop
pop
sahf
and
mov
jno
inc
push
sahf
xor
stos
push
adc
pop
or
xor
cmpsl
popa
xor
jle
adc
pushf
jmp
add
ljmpw
xchg
xor
bound
jno
pop
arpl
test
out
cs
stos
loopne
mov
dec
sub
ret
jo
push
jne
std
fscale
xchg
cs
mov
aam
mov
sub
in
pushf
fdivl
leave
loop
daa
cltd
scas
lret
outsb
push
mov
imul
push
xchg
jp
imul
push
xchg
pop
adc
fwait
scas
nop
inc
mov
fidivrl
pop
pop
pop
mov
push
mov
jnp
sbb
sub
outsl
cmc
lods
jg
adcl
xchg
test
mov
insb
out
adc
sub
stos
out
push
xchg
lock
sub
jp
jmp
sti
arpl
pop
sub
jmp
sub
outsb
sbb
mov
sahf
scas
add
fnstenv
mov
or
inc
xchg
cmp
push
xlat
je
adc
mov
loopne
mov
imul
inc
stos
push
mov
and
jb
mov
stos
aaa
mov
rclb
xchg
push
push
mov
aad
mov
inc
mov
mov
jl
mov
std
pop
aam
sbb
repz
mov
or
push
aas
addr16
sti
and
or
lret
cs
cli
pop
movsb
xchg
lods
push
push
xor
add
xor
xchg
flds
imul
insb
sbb
pop
out
dec
push
lahf
rcrb
outsl
sahf
orb
jo
scas
leave
insb
sbb
lahf
mov
pop
xor
sub
xchg
xchg
mov
out
dec
dec
xor
sbb
pop
idivb
shl
push
int
add
sub
cmp
adc
xchg
add
mov
ret
and
mov
push
les
test
dec
imul
stos
adc
incl
outsb
addr16
jl
and
int
and
add
rcrb
add
pop
add
sbb
je
add
push
in
lret
or
movsl
insl
inc
mov
sbb
repnz
jle
fsubrl
xor
enter
push
push
pop
int3
movl
arpl
inc
inc
xrelease
or
xchg
fcoml
sbb
mov
mov
xchg
aad
cltd
in
xor
ja
jl
sbb
pusha
adc
imul
rdrand
enter
data16
clc
imul
leave
push
adc
bound
sub
xor
mov
bound
sub
pop
aaa
es
inc
push
sub
cs
loop
lods
stos
out
push
push
ficompl
in
inc
pop
jne
push
subl
jo
stc
fs
data16
gs
inc
mov
std
and
push
pop
pop
jae
and
inc
xchg
mov
jl
mov
sti
inc
push
es
std
jbe
std
cmpsb
fcomps
into
stos
repnz
ja
add
rclb
pop
data16
sub
sbbl
lds
std
pop
push
stos
sub
enter
add
addr16
daa
lds
xor
js
test
ljmp
out
push
or
xchg
pop
repnz
cmpsb
dec
test
shll
subb
jmp
cmp
nop
jg
das
mov
push
mov
push
dec
or
mov
push
js
jp
mov
mov
pop
aam
fisubrs
sub
mov
or
or
dec
sti
ljmp
test
inc
imul
cmp
xchg
inc
and
push
mov
adc
mov
out
cmp
test
xchg
sub
leave
sbb
mov
popf
xlat
xor
dec
mov
xlat
mov
xor
addr16
jp
scas
jne
test
mov
insb
sbb
testb
add
dec
adcb
rol
cmp
imul
cmp
js
adc
mov
iret
int3
jnp
lcall
roll
shrl
pushf
mov
mov
icebp
push
shrb
das
aam
and
insl
subl
xchg
mov
xchg
cwtl
repnz
sti
sub
scas
lods
and
iret
sub
jecxz
pop
sti
leave
cmpsl
scas
stos
dec
stos
leave
jbe
lcall
inc
jb
mov
pop
jmp
movsl
lods
call
imul
cmp
icebp
fwait
adc
pop
imul
dec
aaa
fsub
movsb
roll
xchg
cltd
roll
int3
mov
orl
mov
in
scas
fcoms
sbb
mov
inc
push
xchg
or
lahf
pop
sarl
hlt
mov
mov
cmp
test
stos
jns
dec
orl
les
push
mov
mov
fildl
mov
jb
mov
dec
lock
cmp
clc
mov
jbe
popa
repz
jns
clc
in
xchg
xor
jb
pop
arpl
out
mov
testb
lods
jp
adc
sub
imulb
nop
pop
mov
adc
in
mov
fiaddl
enter
fsubs
js
or
pop
ret
out
inc
ficomps
xchg
dec
sbb
xchg
xchg
jbe
xor
or
imul
loop
pop
das
inc
pop
mov
jl
mov
test
mov
push
inc
sbbb
sub
dec
daa
cld
fcompl
pushf
push
mov
pop
and
pop
dec
les
pop
nop
mov
push
jnp
std
inc
lahf
cmp
icebp
jnp
daa
mov
sub
push
cmc
lds
mov
jne
mov
xchg
rolb
dec
clc
bswap
inc
mov
pop
or
cs
cmp
jmp
xor
adc
push
dec
test
inc
clc
sub
sbb
adc
xchg
xchg
cwtl
xchg
adc
sbb
lret
out
or
lods
sub
rcll
cmp
push
aam
add
fisubl
mov
sbbb
lods
mov
pop
cld
jg
and
icebp
gs
xchg
fsubp
movsb
popa
mov
inc
xorl
mov
pop
mov
push
mov
aad
loop
popf
mov
push
fcmovnu
aad
mov
xchg
insb
repnz
mov
das
shrb
add
test
pusha
jnp
pop
sar
mov
mov
nop
mov
pop
cwtl
xchg
push
rolb
ror
lods
xchg
aas
pop
gs
cmc
inc
add
mov
es
mov
add
dec
addr16
int
nop
jecxz
sbb
lret
mov
jge
jg
in
repnz
and
ds
mov
mov
xorps
jb
outsb
jmp
pusha
xor
xor
jl
mov
sub
out
addr16
or
in
roll
repz
ljmp
sarb
packsswb
cld
cmp
cmp
push
cvtps2pd
imul
ror
in
sbb
sbb
into
scas
sbb
xchg
lea
ret
fsubl
mov
andb
insb
iret
lret
add
pop
imul
add
iret
addr16
xchg
fst
in
aaa
pop
es
out
sbb
xor
mov
sbb
or
aaa
inc
xor
jne
imul
xor
aas
shrb
fcoms
adc
outsl
and
jb
inc
xchg
dec
lock
fcompl
insb
or
inc
test
in
jecxz
xchg
adc
xor
sbb
xchg
inc
dec
cmpsb
daa
insb
inc
cmp
dec
cwtl
ljmp
xor
jp
sbb
aaa
jb
repnz
idivb
insb
jae
push
inc
ret
fistpl
adc
cmp
sub
stos
lods
push
sub
inc
xchg
std
sub
sarb
dec
arpl
sub
and
and
lods
ret
aas
mov
or
adc
push
inc
icebp
mov
sub
or
int
fimull
mov
dec
std
aam
repz
cli
cmp
cmc
aad
icebp
test
shlb
inc
ret
mov
fidivrs
movsb
mov
mov
lret
sub
in
push
xchg
aas
xor
scas
mov
fistpl
ficoms
stos
dec
push
xchg
sub
mov
pop
jbe
popl
jne
mov
push
inc
insl
rcll
and
dec
cmc
mov
popa
mov
mov
arpl
iret
or
dec
cltd
mov
adc
addr16
or
stos
adc
dec
ja
js
push
imulb
cwtl
cmc
inc
and
pushf
cltd
outsb
cli
leave
sub
addr16
test
jbe
ja
sub
pop
add
xchg
adc
insl
repnz
mov
popf
dec
or
scas
cwtl
dec
addl
jle
jns
out
imul
push
adc
jns
lret
fcmovnbe
mov
inc
adc
rolb
xor
push
mov
dec
or
xchg
xchg
mov
xlat
jns
push
jns
sbb
inc
mov
adc
or
mov
fnstenv
sbb
data16
add
sahf
out
mov
test
xor
and
out
or
mov
xor
rcr
or
jmp
dec
mov
repz
and
sbb
sbb
dec
push
or
add
repnz
in
mov
mov
mov
out
aad
adcl
rcr
bound
and
insb
into
lea
and
loope
mov
mov
adc
mov
ds
xchg
aas
cmp
imul
stc
mov
js
sub
outsb
pusha
push
adc
push
bound
out
pop
lcall
mov
into
ret
cmp
fcompl
or
sarb
icebp
daa
andl
ror
cwtl
sub
jle
pop
mov
and
jnp
test
jge
mov
cwtl
ss
xchg
mov
push
icebp
pop
push
add
and
hlt
testl
mov
leave
xchg
xlat
pop
sti
dec
add
js
stos
mov
roll
inc
sub
adc
jb
pop
cli
pop
adc
popa
push
xchg
lds
mov
mov
int3
xor
cwtl
cmp
sub
je
jp
fwait
aad
scas
mov
cmp
pop
sbb
rol
push
test
mov
xchg
rolb
cmpsb
pop
fbld
les
rclb
mov
stos
test
xor
js
fwait
rorb
push
outsb
xchg
lods
push
test
mov
andb
fs
jle
pop
adc
push
sti
faddl
fisubs
pop
jno
orl
clc
and
idiv
loop
inc
inc
pushf
push
in
jne
test
jmp
sub
cs
mov
aas
ror
in
push
std
push
mov
pop
push
sbb
cli
lods
out
xchg
mov
jmp
dec
lahf
xor
xchg
inc
mov
clc
push
test
ret
xchg
nop
mov
push
aad
lahf
daa
adc
imul
aaa
out
daa
xchg
xor
dec
sbb
cmc
not
lret
js
ds
xchg
out
shll
cmpsb
sub
xchg
mov
mov
mov
orb
sub
imul
aam
jnp
cmp
and
clc
push
mov
xchg
sub
fstpl
call
fdiv
mov
xor
cli
and
jp
inc
pop
adc
mov
mov
xlat
mov
shr
sti
out
jle
mov
xchg
mov
dec
je
push
aad
sub
jns
int
test
and
mov
cwtl
fiadds
push
aaa
xchg
in
jo
mov
adc
and
outsb
inc
fdiv
xchg
jns
adc
aaa
pushf
cs
insb
xchg
sub
cltd
icebp
imul
push
dec
xor
mov
add
je
daa
mov
sub
out
fstpl
jl
xchg
movsb
xor
xor
jnp
subb
pop
xor
pop
add
inc
call
insl
rorl
imul
sub
pop
dec
movsb
in
int3
addl
xchg
mov
fidivrs
and
mov
fsubrl
jg
xchg
mov
test
in
inc
out
std
incl
pop
pop
push
mov
into
js
cmp
out
sub
add
daa
ss
xchg
pop
mov
pusha
push
outsb
jl
xor
outsl
mov
ret
pop
test
iret
lods
mov
pop
bound
xlat
sbb
inc
xchg
mov
pop
inc
push
je
repnz
cwtl
mov
ss
mov
loope
dec
inc
out
rcr
jmp
out
mov
ret
out
notb
push
aad
or
pop
filds
xchg
dec
pop
sbb
int
dec
sahf
sahf
std
lcall
add
and
cld
adc
aaa
cli
mov
mov
jle
testb
in
testb
int3
nop
push
std
pop
aas
int3
and
mov
adc
test
adc
cmp
nop
aaa
push
inc
push
cmpsl
das
xor
cmpsb
test
pushf
and
adc
test
sbb
into
cmp
pop
repz
xlat
jae
cli
and
imul
push
push
adc
mov
ljmp
jl
cmpsb
movsl
mov
add
mov
xor
sbb
push
popf
stc
mov
or
bound
mov
ret
out
popf
pushf
sub
or
dec
iret
push
mov
cli
jecxz
sbb
or
pop
ret
aad
lods
js
or
cmpsl
movsb
mov
out
insb
mov
loopne
mov
push
push
cmc
and
rorb
dec
js
cwtl
ret
mov
jb
shrl
and
dec
aad
out
int
xor
mov
pusha
inc
aaa
or
repnz
imul
lods
in
jnp
sbb
lds
ss
cmc
jmp
lret
sbb
mov
and
xchg
sub
mov
dec
test
aad
or
popf
and
sub
shrb
mov
sahf
mov
inc
stos
pushf
xchg
or
add
out
cli
cld
icebp
push
js
pop
push
inc
in
cmp
cmp
and
std
and
imul
and
dec
jns
scas
dec
iret
jne,pt
pop
icebp
das
mov
into
lahf
push
test
pop
repnz
shlb
and
xchg
xchg
out
fdiv
pop
cmp
push
mov
adc
push
int
cmp
sbb
lods
mov
mov
sub
hlt
lods
jo
test
lock
inc
test
ret
jnp
xor
int3
add
clc
push
inc
outsb
movsl
das
jecxz
hlt
ljmp
mov
fdivrl
sub
push
aad
mov
loope
mov
mov
xlat
int
sbb
dec
fcmovb
aaa
mov
jp
daa
sbb
pop
movsb
mov
loope
les
out
lret
mov
into
cmp
cmp
je
imul
repnz
test
mov
xchg
jmp
arpl
add
mov
dec
jmp
cld
shll
dec
loop
in
outsb
xor
mov
aaa
push
add
jge
sbb
xchg
mov
sbb
int
xchg
push
jecxz
inc
call
div
mov
sub
loopne
test
pop
mov
sahf
mov
fnstcw
lds
mov
inc
das
mov
sarl
cli
push
cmp
loop
xchg
adc
xchg
shlb
xchg
cli
ret
test
rolb
cmp
movsb
test
imul
dec
stc
inc
lods
mov
pushf
rorb
cld
mov
cli
push
or
or
aad
pop
add
out
fwait
push
adc
dec
sub
jle
or
lahf
dec
gs
lods
adc
add
fwait
jnp
daa
fisubl
lret
or
stc
mov
ljmp
je
jl
mov
andb
xchg
int
xor
cld
pop
and
ja
cmp
faddp
mov
xor
mov
loopne
mov
xchg
shlb
inc
and
inc
enter
sub
arpl
out
push
jne
inc
jl
mov
out
movb
push
pop
dec
mov
repnz
inc
mov
cmp
add
sub
enter
lds
sub
lods
pop
cmp
mov
adc
push
jae
xor
xor
cmpsb
push
push
imul
scas
inc
fcmovnb
cmp
xor
mov
push
push
sub
sub
es
data16
adc
add
xchg
mov
sbb
repz
loopne
dec
push
xchg
addb
xchg
or
hlt
test
mull
les
and
stos
push
or
ret
shlb
jno
cmp
lods
jle
and
sub
push
call
repz
andb
ret
xchg
mov
jnp
idivb
add
aas
mov
fs
iret
cs
push
cli
or
push
pop
cmpsb
repnz
or
add
mov
jp
sti
rorb
ret
stos
stos
and
rolb
fstpl
inc
insl
das
pop
ficomps
jle
popa
jbe
popa
int3
mov
in
mov
push
mov
shl
add
js
cmp
xor
out
ljmp
xchg
cmp
cli
xlat
mov
cwtl
push
mov
cld
sbb
jge
fisubrs
aaa
cli
fwait
adc
scas
stos
sub
int
and
xchg
inc
icebp
sahf
lahf
int3
cmp
cmp
fidivrl
push
lret
cmp
cmpsb
dec
push
gs
das
push
test
sub
inc
pop
in
fwait
movb
push
out
jle
mov
xchg
lods
mov
sub
mul
icebp
pop
xchg
icebp
fisubl
insl
repz
adc
push
daa
push
clc
sbb
cmpsl
cmp
fimull
out
aas
nop
es
rol
into
mov
dec
pop
xchg
fidivl
and
jle
out
adc
mov
push
inc
lods
repz
mov
in
outsl
arpl
adc
sahf
inc
lret
cmp
mov
ljmp
ljmp
mov
movb
add
mov
data16
js
dec
jp
test
lods
aaa
test
daa
bound
std
pop
and
test
cmp
outsl
add
cs
and
or
push
ja
pop
decb
loopne
aad
or
out
pop
inc
test
cmc
jge
push
scas
scas
outsl
push
or
mov
gs
dec
and
add
insb
sarb
fbld
jb
js
mov
pop
nop
inc
mov
cmp
adc
add
or
je
test
nop
dec
shlb
push
loop
dec
aam
cli
fmul
addr16
push
cs
xchg
cli
dec
adc
stos
cld
adc
mov
adc
pop
in
fcoms
addl
out
jmp
std
sarl
pop
out
fmuls
xchg
xchg
call
jo
test
int
loopne,pt
jle
insl
loope
push
cmp
sti
jb
pop
test
sbb
cli
cmp
roll
push
mov
jno
divb
sbb
std
in
jecxz
xchg
cmp
cmp
es
fdivs
sarl
cmp
enter
pop
mov
mov
pop
lcall
mov
jmp
mov
jg
das
inc
sar
out
test
fstpl
out
les
sub
adc
sbb
jg
std
pop
jp
aad
imul
out
cmp
aad
leave
cmp
xor
cmpb
aad
sbb
sahf
ja
lods
pop
cs
popl
add
sarb
and
ret
sti
jl
jbe
jo
and
pop
pop
or
xlat
xor
push
sbb
frstor
ds
xchg
xlat
scas
loope
pushf
add
xorl
pop
lret
or
mov
mov
adc
sub
sub
cmp
xor
push
testl
xchg
test
dec
arpl
jbe
aam
les
pop
or
mov
addr16
or
push
loop
mov
push
int3
push
lds
std
test
xor
pop
out
sti
xchg
cwtl
mov
imul
dec
push
shl
push
jle
inc
cld
cmp
adc
mov
rcrl
decl
sbb
sbb
and
add
subb
sahf
adc
test
mov
xchg
repnz
lea
push
mov
or
inc
and
add
inc
dec
shll
loop,pt
sub
dec
aad
push
cwtl
add
mov
xchg
mov
pop
push
pop
test
ss
stc
sbb
shr
pop
stos
push
jle
lods
insl
push
ret
lcall
inc
cs
leave
shlb
popf
cld
call
push
leave
mov
and
testl
pop
pop
icebp
jno
lahf
fcomps
or
lcall
testl
xor
gs
cmc
adc
shlb
rclb
fs
fnstenv
and
inc
ret
mov
mov
cmc
bound
subl
inc
xchg
loop
out
scas
and
out
popa
and
int
clc
sub
les
stc
mov
push
xor
aam
movsb
or
stos
adc
gs
dec
cmp
xchg
inc
lret
gs
jb
push
jg
sub
sbb
xor
fnsave
inc
scas
test
repz
dec
fidivl
mov
inc
ret
enter
push
mov
mov
pop
ret
adc
icebp
pop
fcomps
xchg
in
pop
inc
in
cwtl
sub
inc
xor
mov
add
imul
xchg
sbb
outsb
jno
cld
jns
xchg
dec
inc
daa
aas
sbb
repnz
xchg
je
ss
cs
test
out
inc
in
ds
xor
dec
dec
lahf
pop
fwait
insb
pop
dec
push
jb
push
dec
sbbb
in
cli
outsb
in
xchg
cltd
outsl
mov
and
inc
jmp
or
out
adc
ss
xor
clc
rdmsr
unpcklps
pop
sub
cs
push
sub
mov
enter
cmp
sti
test
stos
sti
ret
inc
push
sti
mov
push
aas
adc
js
andb
pop
std
push
add
mov
fiadds
sbb
and
rorb
adc
adc
mov
mov
and
imul
jge
pop
pop
mov
rclb
fldt
dec
dec
push
push
aad
inc
ret
adc
scas
mov
or
shlb
cmc
addb
sbb
subb
in
mov
mov
sarl
arpl
or
mov
jbe
push
cld
inc
pop
mov
testl
lret
lret
loop
ud1
and
es
cmp
mov
sahf
clc
mov
or
dec
rorb
jne
iret
int3
xchg
pushl
inc
adc
scas
ss
xchg
sub
pop
mov
jmp
enter
ret
mov
lods
in
inc
in
push
lock
mov
cwtl
add
mov
pop
int3
xor
jmp
push
je
in
cmp
test
sbb
test
jae
leavew
push
je
repz
inc
jae
dec
fs
daa
pop
sub
and
in
inc
or
adc
popf
loopne
loope
xor
scas
ljmp
mov
popf
js
or
rorb
inc
imul
mov
mov
mov
jg
daa
adc
dec
jb
and
inc
xchg
ret
and
xlat
dec
inc
imull
sbb
cmpsl
je
add
test
rcrl
adc
inc
repnz
hlt
fcomip
repz
pop
push
push
xchg
mov
inc
outsl
inc
std
add
add
addr16
int
inc
lahf
mov
push
xor
js
adc
xchg
inc
dec
and
or
mov
clc
lea
inc
mov
insb
xchg
jg
mov
sub
pop
loopne
sbb
xchg
notb
popf
xchg
loop
adc
xor
sub
dec
sahf
mov
scas
pop
or
out
adc
push
shll
out
jg
bound
shrb
inc
sub
testb
push
xor
pop
pop
adc
aad
notb
or
xchg
mov
bound
inc
pop
push
cwtl
dec
jae
shll
out
xor
cmp
pushf
add
jno
pop
subb
pushf
push
aam
ret
fisttpl
adc
jl
divb
popa
inc
sbbb
and
sub
xchg
xor
and
and
lea
mov
push
cmc
mov
int3
pop
gs
mov
dec
aaa
mov
xor
loopne
cmc
negb
jle
xchg
sbb
in
cwtl
fistpll
gs
inc
ror
pop
in
dec
adc
push
daa
lret
adc
push
addr16
push
add
orb
imul
adc
insl
push
add
cmp
inc
mov
repnz
enter
or
out
rol
add
mov
dec
int3
push
mov
jle
mov
je
cltd
sub
popf
pop
jge
push
int
pusha
push
mov
andl
lret
mov
add
movsb
int
cmpsb
lods
out
xor
fimuls
lcall
add
add
out
rcl
mov
pop
mov
jo
cli
ljmp
cltd
xor
add
mov
js
pop
loop
int3
lahf
in
scas
cmpsb
pop
or
add
pop
int3
int
and
fdivp
pop
sub
subl
ja
scas
xor
xchg
fwait
test
push
cmpb
fildll
jmp
or
adc
inc
mov
cli
mov
add
pop
test
daa
test
and
andb
test
dec
mov
lret
mov
incl
cmp
jne
pop
jbe
dec
popa
and
inc
cs
loope
sub
pushf
add
jnp
push
in
pop
adc
fs
or
sbb
xchg
dec
loopne
stos
pop
xor
aad
mov
out
dec
lds
sub
leave
mov
xchg
orl
mov
ds
push
shll
adc
xlat
and
call
bound
sbb
pop
fadd
cmpsl
and
inc
dec
adc
and
icebp
cmp
dec
push
fidivl
pusha
inc
pop
xor
mov
jno
int3
pop
or
adc
ror
cmp
xor
aas
mov
lods
ja
adc
fistps
js
jge
int
sub
mov
addr16
dec
add
mov
lret
rcrb
xor
and
push
lret
fisttpll
scas
add
inc
repnz
add
lods
xchg
and
and
pushf
bound
pop
push
xlat
mov
fs
add
xchg
pop
loope
leave
repnz
pop
add
test
push
or
shrl
popa
je
mov
icebp
jg
test
xor
popf
jbe
icebp
and
mov
bound
sarl
scas
stos
jnp
pop
xchg
int3
test
ljmp
push
ljmp
repnz
pop
std
cmpsb
jb
and
mov
cs
jne,pn
rorb
add
cmpb
mov
push
neg
xchg
adc
fsts
jl
loope
mov
dec
iret
mov
cli
mov
dec
scas
fdiv
adc
loopne
sbb
gs
into
loope
mov
das
xor
jmp
lcall
jne
sbb
push
or
pop
mov
mov
inc
fdivs
cmc
insb
mov
sbb
loope
mov
not
mov
cmpsb
fbld
loope
ficoml
cmpl
xchg
rolb
and
repz
xor
icebp
mov
call
call
mov
pop
jns
rcrb
cwtl
jmp
mov
nop
cmpsb
jl
cmp
inc
adc
push
pop
mov
jp
fdivrs
push
loopne
out
test
pop
and
frstor
lea
pop
xor
popf
std
jbe
jg
mov
not
mov
inc
cmp
daa
stos
shrl
jbe
lcall
inc
add
mov
shll
mov
test
sbb
ja
loopne
mov
cmpsl
jne
fdivs
fcoml
fidivrs
mov
sbb
incb
pop
adc
sub
sbbb
jbe
ret
sub
in
scas
dec
sti
mov
fstps
mov
xchg
call
pop
dec
ja
adc
mov
inc
ja
outsb
or
fsubrp
xor
out
adc
repz
fisttpl
push
add
sbb
pop
pop
jo
add
mov
adc
or
ja
add
push
scas
dec
push
ror
mov
mov
mov
sub
sbb
repnz
shrb
jb
loope
and
addr16
loope
sbb
sbb
push
cld
push
mov
js
in
mov
push
ret
xchg
mov
aaa
ret
insb
mov
roll
outsb
push
pop
imul
push
subb
mov
cmp
cmc
lock
cltd
test
jle
daa
imul
dec
dec
rorl
mov
cld
push
shlb
mov
fwait
jnp
in
les
dec
jmp
sub
arpl
icebp
xchg
test
xor
out
loopne
pushf
lea
pop
out
sub
pushf
add
sbb
push
jg
push
pop
outsb
hlt
sbb
in
mov
test
mov
mov
mov
push
push
repnz
push
lods
xorl
push
xchg
sbb
adc
dec
xor
cmp
dec
scas
adc
fmull
inc
in
fldenv
mov
jg
xchg
inc
fstps
sahf
xor
add
enter
mov
xchg
dec
loopne
push
pop
in
mov
jl
jb
dec
dec
bound
add
xchg
loop
xor
pop
mov
dec
jmp
lods
add
dec
xchg
movsl
cmc
cwtl
mov
xor
enter
je
test
scas
int3
insb
fdivs
or
std
repnz
hlt
inc
rcrl
andl
push
cmpsl
cltd
xor
gs
mov
fstps
outsb
ss
ud1
mov
inc
mov
xor
mov
sti
jbe
daa
jl
dec
pop
lods
fs
cltd
mov
adc
mov
gs
mov
pop
js
lock
mov
into
dec
dec
push
and
sub
xchg
pop
data16
movsl
not
push
fimull
lock
jns
inc
push
mov
pusha
lods
fsts
inc
int
or
xchg
add
cltd
dec
ljmp
xchg
loopne
cmc
stc
test
sahf
mov
push
aad
inc
imul
xchg
xchg
stos
addr16
add
xchg
xchg
mov
decl
mov
push
jmp
into
icebp
cmc
mov
popa
sbb
in
pop
and
insl
fwait
sbb
sub
or
rdtsc
mov
rorl
insb
jecxz
or
mov
pop
xchg
pop
inc
in
xchg
and
lret
jg
ss
jmp
sub
jmp
sbbb
lock
xor
pop
not
repz
sbb
sbb
or
stos
mov
xor
mulb
pop
test
test
sti
push
lds
dec
and
movsb
cwtl
pop
mov
mov
sbb
adc
and
xchg
cmp
and
repnz
scas
mov
fwait
in
test
js
ficomps
rcrl
sub
shl
and
popa
push
or
xor
aam
or
mov
sub
jmp
loopne
push
mov
out
jbe
inc
outsl
iret
int3
inc
xlat
je
or
inc
stc
sahf
xchg
int
icebp
push
insb
cmp
and
or
jo
or
xchg
je
mov
cmp
repz
divl
ss
xchg
popf
leave
cmp
xchg
jb
fldt
mov
sub
je
out
adc
ja
xchg
aam
lcall
add
mov
inc
fmul
dec
dec
xchg
pop
repz
mov
aam
add
aad
incb
mov
sub
js
frstor
jbe
aam
sub
cmc
or
xchg
stos
jae
loopne
pop
out
lcall
add
ljmp
sbb
int3
xchg
pop
aas
pop
push
gs
iret
imul
out
sub
push
add
mov
mov
shl
mov
pop
sbb
dec
fsubrl
pop
add
dec
lock
mov
mov
leave
xchg
mov
call
jno
xchg
sbb
repz
or
lret
es
daa
sbb
ret
stos
push
dec
pop
push
aad
testl
or
ror
out
dec
mov
into
mov
in
inc
push
jo
or
pop
xchg
pop
mov
ljmp
sub
pop
rol
or
lahf
or
stos
or
sbb
aam
movsb
xor
cmp
cmp
rcrb
shrl
aad
push
add
dec
scas
mov
sti
push
sbb
sbb
outsb
gs
mov
mov
push
sarl
mov
inc
adc
popa
xlat
or
pop
mov
sarb
xor
movsl
push
sti
popa
mov
setg
or
add
jb
fucomi
mov
out
mov
xchg
test
push
xchg
bound
into
dec
lcall
cld
roll
mov
fmull
push
ds
icebp
rcl
adc
dec
mov
mov
mov
insb
mov
ds
cld
test
inc
cmp
scas
pop
stc
std
into
xor
stos
xor
aas
insl
jno
cwtl
pop
std
popl
push
mov
mov
dec
movsl
pop
mov
jae
out
adc
xor
xchg
lret
fnstenv
out
std
in
sbb
cltd
fwait
add
hlt
fs
lea
punpckhbw
mov
add
adc
movsl
cli
adc
bound
dec
inc
scas
out
cmp
sbb
repz
mov
lret
repnz
xchg
imul
inc
mov
cld
xchg
pop
ja
leave
xor
mov
sbb
and
lahf
jg
insb
inc
enter
xchg
std
ficompl
inc
rorl
je
jo
or
pop
pop
mov
lret
push
mov
mov
jnp
inc
cmp
sbb
aad
sti
out
dec
in
push
pop
sar
ficoms
aaa
loopne
mov
test
and
fnstsw
mov
jp
jb
bound
fstps
jl
and
add
test
lods
enter
mov
leave
push
xchg
push
ret
xchg
push
cmp
iret
clc
dec
pop
inc
roll
xor
aam
repz
adc
repnz
divl
inc
jno
mov
sbb
mov
mull
stos
push
cmpsl
outsb
fbstp
sub
and
imul
sbbb
in
xlat
inc
addr16
ret
mov
popa
pop
inc
dec
push
test
insl
cmp
nop
inc
inc
sti
outsb
loopne
pushf
arpl
insb
notb
fdivr
ret
cwtl
pop
lods
xchg
xlat
pop
xor
stc
mov
stos
xchg
outsl
pop
stos
cmp
icebp
fcomps
push
xor
cmpsl
pop
sarb
jne
mov
inc
pop
push
xchg
inc
mov
sbb
ret
pop
repz
imulb
sbb
lret
out
ljmp
lock
xor
cmpb
ret
jmp
add
or
ret
xchg
imul
jnp
aas
nop
fwait
sti
push
sahf
jg
or
pop
shl
xor
movsb
ret
sub
lret
pop
adc
nop
jmp
ds
stc
rorl
inc
cmc
or
out
call
es
hlt
jl
cmp
movsb
fwait
and
mov
fwait
cmc
out
rcrl
call
cld
lcall
bound
mov
push
and
xchg
fisubrs
lahf
xor
mov
bound
and
jl
or
icebp
mov
loop
mov
cmpsl
adc
loop
jge
xchg
jae
xchg
inc
inc
pop
xor
shl
pop
push
pop
jo
jbe
jecxz
jnp
les
and
xor
lods
mov
mov
lds
jge
repnz
sbb
dec
outsb
aam
xchg
addr16
mov
pop
adc
jo
add
and
insl
ja
jno
test
aaa
dec
dec
mov
fisubrl
fdivrs
mov
adc
and
or
andl
ror
add
push
mov
cwtl
dec
call
cmpsb
jge
mov
out
ror
cmp
fxch
outsb
sub
in
and
and
push
aaa
push
xchg
xchg
mov
pop
sub
jae
mov
fildl
stos
hlt
cmc
adc
ret
push
ss
add
or
rcrb
pop
gs
fisubrs
fimull
shll
out
xor
in
mov
and
sar
jno
fs
fisubs
int
pop
jns
or
mov
cli
mov
inc
repz
lods
movsl
push
std
mov
repnz
hlt
out
ljmp
and
pusha
test
jb
sub
mov
mov
push
pop
fucompp
popa
leave
push
mov
push
cmp
imul
dec
je
adc
or
adc
cmpsl
arpl
lds
mov
pop
jl
xchg
pop
jb
sub
mov
mov
mov
negl
pop
jnp
flds
mov
mov
int3
ficoms
cmp
dec
jae
sub
rcll
jecxz
dec
pop
iret
push
or
cmpsb
mov
int
lret
add
dec
jo
pop
mov
test
inc
fcomps
movsb
repz
or
and
ss
push
rolb
push
jo
insb
clc
mulb
lcall
cld
xor
mov
sub
aad
and
out
inc
cmc
lret
bound
cmp
dec
je
add
cmc
in
push
jg
and
lds
sub
inc
popf
and
rorb
mov
outsb
sub
push
or
mov
and
pop
fwait
cmp
mov
loopne
cltd
js
push
jns
lret
test
lret
pop
pop
add
aas
inc
adc
into
adc
mov
sub
sub
fwait
rcll
or
mov
pop
jb
movsl
fcoml
loopne
test
mov
sbb
jl
shrb
loop
add
xchg
mov
hlt
dec
fcoms
jle
or
mov
push
xor
sahf
jmp
rorl
and
mov
jns
inc
push
or
inc
pushf
push
pop
pop
push
cmc
push
mov
arpl
test
fdivl
push
mov
jbe
ss
fwait
adc
push
add
rclb
pop
lds
and
jge
add
movsb
aam
dec
paddd
ret
into
inc
bound
dec
fs
or
outsb
in
jp
subb
in
test
in
lret
mov
push
cmp
lds
cld
stos
out
mov
fs
sbb
jae
ss
stos
mov
sub
cmpsb
in
cs
call
adc
std
cmp
inc
inc
hlt
aaa
sub
ffree
adc
ret
mov
icebp
push
cmp
sbb
xor
cltd
push
inc
fwait
xor
or
sti
test
xchg
xor
int
dec
sub
pop
leave
loop
fisttpl
mov
dec
and
sarl
mov
into
ds
popf
mov
jp
nop
dec
xor
mov
pusha
lret
cmp
frstor
sub
mov
push
mov
cmpsb
pop
repnz
arpl
xchg
test
into
in
push
in
push
leave
xchg
hlt
inc
and
inc
xlat
ja
inc
cli
scas
sub
push
xchg
xchg
arpl
aaa
sbb
sbb
inc
push
xor
mov
push
xchg
aad
inc
hlt
and
mov
dec
stc
cmp
mov
jg
or
mov
leave
add
jge
jb
daa
cmp
mov
sub
or
adc
andb
in
daa
push
mov
pop
sbb
or
popf
mov
pop
stc
out
mov
add
sub
push
pop
fstl
mov
movsb
jae
cmp
inc
push
movsb
inc
xorl
mov
jns
cs
xchg
ret
or
pop
or
fcomps
mov
inc
lods
push
ds
mov
es
adc
sub
cltd
stc
add
mov
and
xor
mov
jno
sbb
jns
dec
and
sbb
jo
idivl
loope
rcll
ficompl
mov
push
jae
or
shll
and
inc
scas
ds
subb
or
sti
pop
sbb
shlb
loopne
mov
div
adc
push
or
fnclex
jge
jecxz
out
add
clc
nop
inc
ret
cld
leave
xchg
or
push
mov
out
xor
inc
jl
add
jo
mov
sahf
pop
mov
leave
jl
and
fistl
leave
test
ds
adc
cltd
pop
arpl
xor
adc
add
xchg
cmp
addr16
mov
jb
repz
xchg
push
lock
mov
inc
cs
jnp
adc
and
test
jmp
dec
cmp
xor
out
push
dec
mov
repz
jns
addr16
outsl
xchg
sbb
push
pop
das
add
jmp
pop
fadds
cmp
mov
roll
jbe
push
nop
push
xor
sbb
cmp
xor
pusha
pop
test
sahf
push
les
iret
push
js
lcall
add
pop
push
push
stos
mov
scas
ret
sub
sub
sub
je
push
daa
std
adc
insb
les
xchg
je
cmp
mov
movb
mov
dec
pop
sub
pop
xchg
movsb
xor
jo
or
dec
in
sti
mov
xchg
mov
push
cmp
sahf
jle
jle
adc
sub
jnp
dec
mov
rcrb
cmp
sahf
sub
insb
mov
push
stos
and
insl
push
dec
fcmove
adc
ljmp
pop
and
and
call
fwait
pusha
mov
cmpsl
dec
push
outsl
fisttps
imul
inc
mov
inc
insl
inc
add
jle
push
ret
movsl
pop
adc
dec
repz
push
mov
aaa
inc
scas
lcall
in
sub
xor
mov
daa
sub
inc
add
sbb
mov
sub
sub
jge
incb
or
fstp
scas
pop
es
mov
sahf
jg
jge
sarb
inc
decl
addl
fbld
or
add
popa
repnz
jae
sbb
push
inc
sub
stos
push
sarl
lock
mov
sub
ss
aam
xor
incb
adc
rcll
in
pop
mov
int
mov
jle
mov
out
jg
and
loop
call
int
loop
push
ss
add
pop
jp
cmp
in
cli
push
mov
nop
cs
int3
cmp
shll
daa
mov
jg
mov
sbb
push
jns
fmul
and
movsb
ja
and
out
cli
fs
leave
and
inc
or
pop
lea
push
lds
mov
jo
mov
xor
push
aam
ss
movsb
aad
imul
enter
push
imul
int3
jnp
insl
ljmp
sbb
sub
push
faddl
test
cmp
icebp
fsubl
push
rclb
add
xchg
cltd
push
sbbb
pushl
mov
enter
mov
and
enter
aaa
cmp
mov
xlat
bound
push
jle
in
cmpsb
ja
outsl
jo
pushf
fmuls
out
mov
pushf
mov
push
test
xor
pop
xchg
push
mov
xchg
xchg
insb
and
inc
pushf
rorb
arpl
cs
xchg
pop
lcall
ss
sbb
cmp
xor
cmp
mov
cmp
xor
fs
daa
stc
cmpsl
push
sub
bound
cwtl
insb
adc
mov
jns
push
adcl
mov
sbb
clc
filds
pop
xchg
bound
or
add
xchg
stos
push
pop
sub
lret
push
mov
xorl
fwait
mov
mov
int3
jbe
hlt
add
add
jbe
ljmp
movsl
fidivl
shll
xor
xchg
lods
mov
fs
push
andb
mov
fildll
sub
pop
and
xchg
and
jo
cs
and
ret
mov
out
cmp
or
aaa
cmpb
repz
inc
lret
pop
nop
cwtl
push
shlb
cltd
ficomps
iret
cmpsl
xchg
jp
call
xchg
leave
mov
push
movsb
and
sub
das
inc
push
add
mov
mov
lcall
sahf
or
xor
addl
roll
test
sub
jecxz
out
sbb
pop
cmp
and
int
adc
xchg
dec
rcrl
push
or
pop
push
inc
cmc
stc
jl
fisttps
inc
test
mov
cmp
movsb
sub
mov
and
xor
in
mov
hlt
sbbl
mov
adc
ret
mov
xor
jno
lahf
add
adc
xchg
pop
sub
shl
mov
fmull
push
dec
mov
shrb
inc
add
jno
xor
adc
addr16
out
xchg
movq
mov
inc
mov
xor
xchg
scas
ds
ror
xchg
add
xchg
fstp
sbb
inc
mov
out
jo,pn
outsb
sbb
test
mov
std
fwait
lcall
sub
andb
daa
cmp
cmc
cmp
decl
mov
mov
iret
or
sub
and
mov
jmp
pusha
mov
cmpsb
dec
jnp
leave
fdivp
roll
ss
dec
adc
movb
sbb
adc
js
xchg
ds
js
fnstcw
inc
mov
push
push
js
inc
insl
pop
scas
fs
rcl
loopne
and
push
daa
mov
xchg
sbb
shl
adc
mov
jo
into
das
cmp
xchg
jne
dec
lds
testb
js
lret
or
pop
jecxz
and
rcl
les
andb
test
loopne
adc
push
xchg
and
mov
xor
repz
mov
roll
data16
scas
jp
and
repz
test
aaa
orb
dec
inc
pop
dec
aaa
pop
push
and
mov
push
xorl
cmp
imulb
push
inc
cmpsb
mov
mov
cmp
fwait
les
mov
popa
cmc
shrb
repnz
add
inc
leave
aaa
mov
or
outsb
outsb
lea
pop
jo
xor
xchg
inc
stos
xchg
jmp
inc
addr16
mov
ret
xlat
xchg
mov
jecxz
pop
clc
and
outsb
dec
dec
leave
sbb
dec
stc
stc
mov
sub
cmp
les
lcall
mov
mov
cmpsb
jle
lods
movsb
push
shlb
jmp
push
rcr
sub
adc
xchg
mov
test
sub
xorb
adc
lret
cmp
in
addr16
cmp
add
and
xchg
and
jmp
stos
lahf
test
out
pop
mov
cs
loop
jg
adc
ljmp
arpl
sub
xchg
dec
int3
jp
inc
leave
das
and
aaa
add
dec
push
shlb
adc
shl
push
bound
jmp
iret
andl
std
cmp
adc
ror
pusha
daa
pop
aam
loop
adc
push
arpl
repz
dec
adc
mov
popf
movsb
and
xor
jno
pop
push
push
mov
jo
or
adc
xchg
adc
rcrl
lcall
in
popf
test
lret
aam
ret
xor
dec
sbb
xlat
jmp
mov
mov
xchg
lods
in
or
lods
mov
in
xchg
dec
movsl
stc
dec
clc
gs
pop
mov
inc
loopne
xchg
hlt
push
cmp
and
xchg
loopne
in
mov
dec
dec
push
fs
rcl
and
or
shrb
lods
push
cs
and
iret
push
cmp
rcl
out
test
jecxz
or
push
loopne
add
lret
jmp
add
pop
mov
push
jg
shr
jnp
cmp
mov
je
dec
xchg
bnd
cmc
iret
fldt
mov
xchg
jns
mov
mov
scas
adc
std
pusha
test
mov
xor
mov
dec
dec
add
jbe
nop
rclb
sti
es
es
jo
jl
cmp
add
fldl
and
in
arpl
cli
inc
loope
int
ret
jno
mov
mov
test
push
push
imul
jle
mov
mov
std
pusha
test
xchg
and
jg
sbb
mov
or
add
pushf
xorb
xchg
add
es
cli
mov
scas
jmp
adc
sahf
mov
add
movsl
es
inc
and
dec
inc
jmp
lahf
adcl
fstpl
mov
mov
fidivs
and
xchg
mov
pop
jl
pushf
and
mov
inc
mov
fs
cltd
subb
and
hlt
push
mov
clc
sub
ja
cmp
inc
subl
push
mov
sarb
xchg
fisttps
repz
xlat
or
push
iret
movsl
nop
aas
push
sarb
mov
push
push
fistpll
xor
mov
sub
xchg
xor
test
adc
in
and
fwait
jne
ficomps
xor
dec
mov
lret
mov
mov
loop
fisttpll
sub
adc
cmp
stc
movsb
xchg
shrl
and
int
fiaddl
cmp
add
pop
fiadds
movsb
xchg
jb
mov
out
mull
push
push
sbb
xchg
mov
cmp
lcall
loope
stos
int
xor
jo
hlt
cli
orb
rep
xchg
pusha
lahf
mov
pushf
or
bound
test
gs
inc
js
in
insl
dec
mov
sbb
pop
fs
mov
ret
imulb
push
jb
xor
xor
cmp
jbe
adc
das
loopne
sbb
mov
ret
or
je
cmp
nop
loopne
dec
test
lret
xor
inc
and
int3
insl
popf
shll
fldt
lods
jae
push
sahf
out
ret
cmp
xor
or
add
push
movsb
outsb
fsts
push
test
ss
ds
jno
mov
in
adc
mov
mov
jns
int3
pop
insb
orl
push
jae
push
lcall
movsl
xchg
icebp
mov
mov
js
push
into
mov
and
imul
test
cmp
enter
dec
insb
sbb
fiaddl
insb
scas
pusha
inc
add
ficomps
jle
jae
jge
pop
rcr
xchg
mov
mov
inc
pop
mov
mov
divl
mov
xchg
movsb
aam
ret
xlat
lahf
add
subb
test
cwtl
in
lret
adc
mov
out
mov
adc
adc
arpl
sbb
je
lods
imulb
les
sbb
push
shlb
movl
popa
rorl
xchg
iret
dec
repnz
lret
cmp
std
into
into
fldenv
faddl
push
cmp
popw
and
aas
bound
dec
jno
mov
loope
inc
jge
mov
sbb
ja
sbb
jbe
dec
xchg
test
mov
add
xchg
fildl
mov
divb
push
je
push
xchg
popa
scas
pop
sub
sbb
adc
pop
sbbl
stc
test
and
es
inc
sbb
aam
minps
xchg
pop
cltd
push
mov
repz
adc
xchg
jecxz
int3
lods
lea
xchg
push
mov
aas
imul
jb
push
xlat
nop
fldt
clc
jne
fbstp
loop
jb
cmp
jo
add
fldt
scas
loope
aad
sbb
sbb
add
sub
aam
inc
loopne
add
shll
mov
xchg
test
lret
mov
push
mov
hlt
and
push
and
loope
jns
out
jbe
repnz
inc
inc
stos
mov
sbb
cmp
xor
or
fisubl
push
or
gs
scas
out
push
adc
int3
inc
inc
sarl
loop
aaa
popl
jmp
fistl
sbb
ror
pop
sub
pop
js
and
das
fstps
cmp
mov
movsb
mov
push
sub
sbb
shll
jg
push
cmp
fnsave
out
adc
jle
or
sub
jmp
mov
fldt
or
adc
or
xor
out
adc
sbb
fcmove
mov
aaa
ljmp
cmpsb
push
js
imul
test
test
jecxz
in
jo
lcallw
iret
push
cmp
aad
scas
adc
xchg
xchg
shl
fsts
jno
int
std
cmp
lock
aas
js
xchg
stc
aas
mov
mov
addb
push
shlb
sbb
movsl
cmpb
mov
sahf
xlat
scas
jnp
xlat
or
push
cmp
sub
mov
stc
sbb
jne
lea
imul
ljmp
loope
push
sbb
inc
pop
push
mov
fucomi
std
dec
adc
pop
push
into
aas
daa
add
mov
dec
jp
lcall
mov
push
or
loope
icebp
xlat
inc
es
fistpll
int
ret
out
fadd
mov
dec
lock
mov
sahf
js
pop
push
xlat
inc
jp
mov
test
dec
and
sub
fs
jb,pn
sbb
dec
add
out
mov
push
out
ljmp
call
and
xchg
jns
ljmp
mov
sub
xchg
mov
into
notb
push
adc
mov
in
bound
and
int
in
mov
or
push
dec
cmp
insl
data16
out
icebp
ja
std
hlt
push
enter
mov
push
xchg
push
in
dec
cmp
jmp
faddl
ljmp
xor
mov
data16
cmp
dec
lock
jg
outsl
out
xchg
mov
push
inc
int
and
jns
lahf
ds
add
iret
xchg
pminsw
sub
dec
scas
addl
dec
sahf
ljmp
lds
sti
test
mov
sbb
sbb
push
gs
or
xchg
mov
sbb
sbb
mov
scas
ss
out
pop
sarb
or
divl
add
push
jecxz
insl
subps
or
push
mov
jl
pop
pcmpgtd
out
call
movsb
lds
pop
and
mov
mov
jl
push
test
icebp
out
dec
pop
imul
rcrb
cmp
xor
pop
xchg
das
push
leave
call
divl
cmp
rorl
inc
dec
xor
fcmove
inc
cli
fbld
in
mov
xchg
mov
stos
aad
adc
jg
clc
inc
xor
hlt
fidivl
xchg
hlt
lret
gs
cli
jno
into
lcall
loope
add
dec
pushl
mov
add
loope
add
pop
xchg
xchg
xor
or
pop
xchg
or
mov
rep
or
pop
out
test
dec
rol
outsl
push
jle
sbb
cmpl
jne
test
scas
inc
cmp
cmc
cmpsl
inc
popf
xlat
xor
lcall
out
xchg
pushf
xor
push
add
stc
or
jecxz
jae
loop
ja
or
insb
js
mov
cmp
push
sbb
bound
push
test
pop
jnp
in
subl
enter
xchg
xchg
test
das
xor
ret
fidivs
mov
das
cli
test
jp
aaa
mov
mov
dec
add
push
and
push
test
clc
mov
cltd
into
fldl
je
ss
ljmp
jno
dec
out
sbb
ss
cmp
lfs
jb
aaa
addr16
sbb
roll
cwtl
sbb
sub
cmp
repz
lods
xor
mov
jo
and
push
dec
jnp
pop
add
mov
inc
mov
imul
inc
pushf
shrb
push
clc
mov
cmpsl
add
fldl
lods
sub
lods
dec
xchg
test
jp
adc
add
divl
dec
mov
imul
mov
ret
jnp
push
sbb
sahf
and
pop
xor
call
shlb
aaa
es
jae
pop
pop
sbb
mov
or
in
fstpt
dec
cmp
jne
insl
into
ja
cmpsb
mov
push
out
jae
int
xor
pop
inc
mov
sti
adc
cltd
mov
jb
test
pusha
add
xchg
sub
out
xchg
xor
icebp
movsb
daa
sbb
mov
xlat
sahf
call
inc
push
icebp
scas
scas
jo
xchg
popa
pop
in
and
sub
add
pop
mov
add
sub
sti
jl
rorb
daa
call
and
decb
dec
dec
outsb
inc
pop
stc
cmp
loope
orl
aas
jmp
xor
or
mov
mov
dec
movsl
sub
xlat
dec
push
mov
cmpsl
adc
xor
jns
xchg
inc
imul
std
scas
mov
addr16
pop
mov
xor
insl
cmp
je
sbb
mov
or
jge
icebp
mov
xchg
mov
jl
fwait
jle
fldt
subl
loope
cwtl
xchg
push
push
shrl
xchg
mov
sbbb
scas
iret
xor
mov
add
pop
repz
mov
ret
mov
xchg
inc
dec
fstps
add
lea
push
in
add
fbld
dec
js
xor
xlat
xchg
sub
and
pusha
push
add
scas
mov
jecxz
clc
lock
mov
mov
pop
dec
adc
cmpsl
push
out
pop
cli
sbb
fdiv
mov
xor
xchg
movsb
es
shll
adc
push
fistpll
js
xor
les
jp
mov
sbb
insl
cs
pop
idivl
jmp
std
and
test
push
inc
and
cwtl
push
push
mov
fldenv
negl
inc
shlb
xchg
pushl
addl
scas
cmpsl
inc
push
outsb
lcall
std
cld
adcb
rcrl
in
sub
xlat
push
sub
mov
xchg
cmpsb
and
jne
xor
mov
cmp
out
inc
fnstenv
nop
mov
jb
pusha
xchg
aas
adc
and
add
xchg
sub
hlt
inc
push
mov
fistpll
dec
les
in
add
pop
pushf
pop
pop
add
aad
es
mov
mov
sub
js
movsl
push
nop
pop
lret
pop
andl
cli
in
lahf
sbb
andl
adc
aad
test
in
into
nop
imul
xchg
cmpl
stos
inc
divb
int3
xor
int3
mov
fidivrs
jecxz
dec
push
or
dec
pop
stos
adc
sbb
sub
stc
jmp
mov
mov
inc
inc
sbbb
js
pop
clc
inc
fs
ret
ret
popa
adc
ds
and
cmp
fs
dec
movsl
jl
pop
push
jno
xchg
cmp
mov
addr16
push
cltd
jne
add
out
cmp
xchg
add
fcompl
add
xchg
push
pop
stos
xchg
push
mov
movsl
xor
inc
shrb
mov
lret
and
cld
imul
movsl
sub
adcl
or
xchg
lds
sbb
jo
pop
pushf
adc
push
jl
inc
jb
mov
and
lahf
add
and
pop
sarb
xchg
cmpsb
ds
cli
fisubrs
mov
cmp
icebp
cmpsb
cmpsl
jne
mov
fstps
sub
jge
xchg
std
and
pop
mov
je
and
shr
sbb
pop
orb
push
or
sub
sub
cmp
sti
push
ja
jge
push
add
loope
cmp
dec
stos
mov
push
test
mov
mov
cmp
pop
sbbb
mov
push
out
push
mov
cld
cwtl
es
stos
les
push
cs
aam
xchg
and
lcall
bound
mov
add
pop
sahf
dec
imul
pop
inc
fiadds
pop
or
xchg
mov
sub
xchg
xchg
mov
mov
lods
pop
imul
sahf
or
imul
andl
cmp
cs
int
mov
push
pop
out
arpl
mov
insb
mov
out
into
sbb
inc
adc
mov
mov
dec
jl
xor
xchg
loope
cmp
pop
mov
mov
and
leave
inc
andl
mov
fistps
and
outsb
cmp
lods
xchg
cli
popf
sub
pop
mov
sbb
jne
cmp
imul
aad
ds
xchg
mov
sbb
out
sti
movsl
test
xor
pop
jl
sbb
loopne
and
scas
xchg
and
fisttps
bound
cmp
inc
fwait
pop
addr16
mov
sub
aaa
fisubl
lock
and
adc
fbld
insl
addr16
jae
aam
and
pushf
push
aas
sub
jne
out
hlt
in
xchg
in
push
pop
fidivs
xchg
add
fwait
enter
bound
pop
ficompl
adc
xchg
rclb
scas
sbb
and
pop
stos
loopne
popa
and
xchg
sub
pop
sbb
push
adc
stos
or
mov
xchg
mov
xchg
xchg
adc
cmpsl
gs
pop
xchg
xor
adc
fstl
jbe
sub
jne
rcrb
repnz
pop
jg
and
pop
xchg
pop
shll
add
fldt
lret
mov
arpl
jp
jo
push
adc
outsb
cmpsl
adc
jmp
in
testl
popa
addr16
cmp
pop
lds
xor
xchg
daa
pop
add
pop
or
sub
jp
and
mov
in
mov
insb
movsb
pop
pop
mov
test
add
ljmp
xchg
data16
or
fdivp
adc
in
xchg
adc
adc
notb
fdivs
lods
adc
jecxz
push
in
imul
lds
adc
psrlq
sar
or
repz
in
lock
shlb
pop
xlat
sub
test
fwait
leave
dec
fwait
cmp
test
movsl
sbb
pop
test
test
and
jmp
popf
pushf
ljmp
icebp
jae
lods
mov
xchg
ficomps
mov
loopne
pop
aam
popa
xor
sbb
lret
test
inc
fdivr
push
cmp
jno
adc
mov
loopne
mov
scas
cmp
int3
xchg
or
jne
xor
mov
cmpsl
repz
add
jmp
dec
out
sahf
in
test
and
dec
adc
imul
mov
fisubrl
jp
divl
jno
adc
fiaddl
loopne
xor
lea
inc
hlt
or
xchg
stc
cmpsb
push
test
in
mov
adc
mov
testb
incb
gs
sbb
notb
dec
repz
shlb
xor
push
push
mov
movsl
xor
cmpsl
xchg
in
rol
mov
push
aaa
mov
arpl
imul
orb
mov
enter
mov
js
jns
fisttpll
hlt
dec
clc
loope
je
out
push
and
psubsw
rolb
scas
movsl
addr16
pop
cmp
dec
std
out
push
inc
pushf
or
xchg
or
add
inc
in
lds
cld
mov
das
test
push
incb
aas
push
mov
mov
icebp
sub
xorb
test
es
sti
cwtl
stos
sbb
addr16
repnz
mov
arpl
aas
imul
push
xor
inc
dec
mov
outsb
xchg
imul
shl
inc
xor
push
aam
jnp
notb
xor
test
fs
cmp
shlb
adcb
icebp
mov
xchg
xor
pusha
mov
in
or
jecxz
inc
aas
xchg
mov
shrb
cmpsb
out
dec
mov
negb
lds
repnz
aas
fcompl
xchg
mov
mov
jns
ja
dec
push
jo
hlt
outsb
xor
lret
shrl
test
sub
scas
out
xor
xor
enter
stc
dec
es
pop
jae
test
cmp
cmp
loope
cmc
mov
xor
stc
into
sahf
sbb
dec
and
jp
pop
imul
mov
popl
addr16
xor
or
aam
pop
jb
ret
jbe
xor
pop
rol
cmp
jns
sub
pop
sub
pop
push
or
out
add
mov
stos
aad
cmp
sti
aas
sub
in
mov
xchg
xchg
stos
sbb
dec
jmp
pushf
insl
or
cltd
jb
push
dec
xor
sub
inc
sbb
mov
fnstcw
orl
push
mov
int
fadd
mov
or
aam
xor
popf
cmp
add
add
pop
sub
shr
scas
add
sbb
divl
icebp
jmp
cltd
jns
mov
pop
pushf
cld
rcrl
push
insb
addr16
dec
cwtl
hlt
movl
xchg
mov
mov
push
dec
gs
sbb
in
stos
pop
ljmp
xchg
mov
xor
out
cmp
cmp
pushf
sub
inc
enter
stos
jle
push
mov
das
sub
ss
cltd
test
je
push
inc
add
out
pushf
scas
fdivr
jo
imul
or
adc
mov
cmp
scas
mov
testb
in
mov
and
sar
and
sbb
sbb
cltd
xor
adc
fucompp
mov
call
vmovlpd
out
mov
mov
cmp
xchg
std
pop
into
pop
inc
cld
repnz
jle
fsubrl
andl
shll
and
cmp
xor
mov
lods
data16
mov
pushf
dec
pusha
sti
inc
int3
pop
fmul
ds
and
add
inc
jne
les
add
mulb
mov
dec
movsb
lods
cs
sub
xlat
ljmp
int3
shufps
imul
lock
mov
pop
add
inc
add
je
iret
xchg
lods
int3
sbb
or
imul
lret
lods
sub
jo
shrb
sub
lcall
jno
mov
movsl
pushf
jno
mov
and
mov
leave
dec
insb
aaa
test
fwait
pop
mov
mov
mov
shll
fwait
aam
outsb
lret
gs
or
lods
setle
dec
jno,pn
jle
outsb
xchg
fisubrl
outsb
rol
mov
sbb
lods
lahf
out
std
jo
pusha
xor
pop
das
in
mov
jnp
fstpt
dec
xchg
int3
pop
pop
lods
push
sbb
addr16
lcall
arpl
loopne
fs
and
test
push
fsubrl
cbtw
push
and
loop
push
aad
mov
or
dec
js
dec
repnz
lret
mov
mov
ficoml
jbe
adc
lock
sub
adc
ret
fstps
in
lods
outsb
lcall
ljmp
movsl
inc
cmp
aas
mov
push
stos
scas
fs
dec
push
mov
jle
mov
mov
adc
sub
mov
hlt
pop
sar
mov
cld
sahf
js
scas
outsb
cmp
pop
pushf
test
gs
sub
jl
dec
stos
or
es
js
inc
ret
test
mov
or
in
sub
mov
pop
mov
pop
in
sbb
cwtl
push
cmp
ljmp
mov
test
xchg
cmp
jg
cmp
dec
stos
addr16
jge
xor
outsl
mov
sbb
xchg
adc
add
lds
mov
jbe
cli
add
jmp
inc
mov
out
aam
xchg
cmp
ss
sbb
push
add
jno
loope
insl
mov
mov
je
adcl
inc
xchg
xor
and
and
out
and
int
add
daa
sahf
out
lock
insl
ss
adcl
jo
xor
add
push
insl
push
or
fnsave
pop
inc
fs
aas
mov
xchg
pop
ds
mov
rolb
call
roll
ss
cmp
and
jge,pn
mov
gs
push
adc
sub
fisubrl
ss
out
mov
mov
aam
out
into
das
or
insl
jecxz
dec
mov
adc
fsubr
inc
scas
je
insl
adc
and
sbb
mov
or
adc
add
jg
arpl
filds
pop
lea
rcrl
lods
or
loope
mov
lahf
rcr
int3
cld
sbb
xor
xlat
xchg
js
fsubrl
in
push
jno
push
mov
add
test
lahf
or
movsl
pusha
inc
rol
ss
data16
fdivs
xor
ror
xor
sbb
mov
xchg
inc
push
jno
push
mov
aas
inc
xchg
jmp
iret
dec
sbb
mov
mov
pop
fiadds
fsubrl
test
outsb
enter
or
loope
icebp
call
xor
add
test
jecxz
call
cmp
push
xlat
or
push
or
mov
into
cmp
lods
je
call
pop
cmp
xchg
xor
faddl
pop
lret
xor
outsb
jge
insl
xchg
fnstcw
adc
loope
hlt
jp
sub
std
adcl
cwtl
push
jns
cmpsb
por
fstpt
scas
mov
sub
pop
cmp
lret
testl
pop
push
sbb
cmp
xchg
call
or
mov
or
jecxz
or
fcmovnb
jno
pop
mov
xchg
shr
mov
out
adc
or
loope
pop
xchg
jnp
sub
lret
mov
push
cmpb
jb
sub
dec
inc
pop
and
xchg
xchg
xchg
pop
push
nop
dec
xchg
and
nopl
jecxz
mov
bound
test
jbe
and
je
jle
jle
insb
sub
in
dec
xchg
mov
inc
dec
insb
je
lret
pop
rcrb
mov
jbe
vmulss
dec
test
mov
lods
adcb
into
sub
and
and
xor
std
aad
mov
mov
sbb
or
pop
sbb
je
pop
adc
jno
push
int
insb
xor
inc
rorl
push
or
pop
jecxz
decl
jmp
xchg
rolb
mov
or
aad
mov
and
xchg
pop
mov
jnp
out
jmp
aaa
pop
inc
mov
add
mov
pop
out
les
jnp
cmpsb
das
jb
test
push
pop
cmpsb
iret
popf
dec
in
xchg
les
jmp
and
negb
push
lods
jp
stos
inc
fs
out
adc
xor
addr16
rep
test
inc
mov
cld
sub
iret
adc
lret
icebp
and
ficomps
cmp
aam
mov
shlb
icebp
push
in
or
xchg
lea
mov
fst
cmp
sub
dec
mov
xor
xorl
js
movsb
mov
pop
add
aam
mov
adc
mov
dec
repnz
mov
push
pop
sbb
jb
cmpsl
jns
inc
inc
push
lcall
xor
inc
add
push
push
fstl
and
mov
and
pop
mov
outsl
cmp
sub
lcall
ja
cs
movsl
mov
test
cmpsl
sub
mov
sahf
mov
mov
mov
dec
xor
jns
in
mov
dec
enter
in
jbe
out
fsubp
and
pmaddwd
jo
imul
jbe
sbb
out
sti
fisubl
adc
or
mov
inc
inc
fistps
mov
lcall
andl
out
push
test
call
inc
std
jmp
sbb
jge
add
sbb
inc
sub
rcl
int
ja
ss
orl
dec
dec
popf
inc
ret
mov
jns
pop
cs
fnstsw
test
arpl
sub
xchg
sbb
pop
xlat
pop
and
pop
mov
or
push
dec
or
xor
jle
jle
outsl
and
cmp
pop
inc
xchg
and
mov
jp
inc
xchg
addr16
pop
and
imul
mov
or
sbb
inc
mov
dec
dec
or
pop
jne
dec
add
stc
cmpsl
data16
scas
fcmovb
xchg
xchg
dec
fldl
scas
ss
jbe
gs
mov
mov
xor
lret
cmp
clc
mov
std
cmp
sub
sub
push
in
aaa
mov
lret
int3
cwtl
movsl
lods
call
rol
mov
xor
ss
or
push
rol
popa
faddl
cmp
fcomp
rcll
jmp
mov
in
stos
mov
mov
jg
push
ficompl
inc
and
das
pop
rorl
imull
fistpl
lods
jecxz
loopne
in
mov
jmp
or
or
dec
fsubrl
inc
insl
pop
imull
lods
ljmp
fs
mov
jno
pop
push
push
pop
inc
enter
mov
mov
push
imul
ja
lcall
fistpll
movsb
push
cmp
inc
jns
cmp
jmp
ds
int3
cmpsb
add
push
xrelease
stos
and
inc
push
rcrl
pop
mov
push
outsb
xor
fwait
lock
mov
ljmp
jecxz
adc
adc
jmp
in
test
pop
add
sbb
xor
pop
push
pslld
bound
jge
loopne
pop
pop
cmp
imul
ret
adc
jge
icebp
mov
mov
add
ds
rolb
push
pop
neg
xchg
mov
pop
fs
mov
lock
pop
sbbb
iret
stos
fsubrl
mov
je
adc
push
jns
mov
mov
lods
in
jge
mov
mov
fwait
push
mov
nop
xchg
fstpl
rolb
mov
push
std
es
mov
or
fimull
mov
ljmp
mov
out
ljmp
dec
jbe
sbb
mov
xchg
mov
cmc
xor
and
test
pop
pop
dec
mov
sub
sbb
add
aaa
inc
bswap
popa
fwait
int3
sbbl
and
or
insl
and
push
sbb
cmp
fdivrl
xchg
bound
add
mov
leave
add
cmp
xor
mov
dec
lds
mov
sbb
xchg
push
fsubrs
xchg
das
out
mov
clc
or
jne
jbe
popa
clc
aas
and
repz
mov
jmp
mov
xchg
xchg
into
lods
enter
jo
adc
cmc
mov
andps
ss
cmp
cltd
int
cmc
mov
out
sbb
adc
lret
icebp
mov
mov
js
filds
jo
pop
cmp
mov
nop/reserved
inc
ret
mov
cltd
stos
pushl
mov
cwtl
inc
sub
push
dec
dec
cmp
xchg
orl
push
mov
insl
test
or
inc
lods
add
lods
pop
push
push
pusha
sbb
mov
pop
mul
sub
test
xor
sbb
sbb
adc
pop
aam
imul
jnp
push
sbb
subb
push
xor
push
push
mov
aam
inc
loope
fs
test
out
inc
pop
pavgw
pop
mov
sub
mov
outsb
loope
and
mov
into
hlt
stc
and
or
call
aas
das
daa
aaa
or
adc
divb
cli
stc
nop
std
cmpsb
inc
push
cmc
cmc
and
outsb
fsub
push
push
je
push
xchg
das
js
jae
ss
push
scas
inc
ret
ja
push
rorl
lret
fistl
icebp
or
sub
cmp
movsb
aaa
and
mov
push
cmp
rcll
mov
jne
insl
mov
js
les
cld
cld
adc
movsl
mov
clc
pusha
out
jne
adc
add
xchg
dec
adc
fbstp
adc
cmp
je
test
lds
dec
adc
push
mov
mov
inc
and
stos
mov
and
repz
out
rolb
test
xchg
ret
or
lods
jp
mov
negb
push
mov
sbb
xor
insl
adc
lea
pusha
test
pusha
clc
icebp
lods
xchg
xor
icebp
dec
test
inc
sub
lcall
mov
push
test
inc
add
fisttpl
lods
shl
push
subl
jbe
lcall
push
mov
pop
es
scas
or
aas
loopne
inc
fwait
shll
pop
mov
dec
dec
inc
cld
repz
adc
imul
div
jle
iret
fmul
pushf
imul
in
pop
and
cmp
push
xchg
dec
mov
jle
cwtl
leave
jg
lret
lahf
ud2
mov
lea
mov
xchg
outsl
xchg
jg
mov
sub
add
push
add
cwtl
sbb
cwtl
pop
popf
mov
jb
fcmovb
fwait
xchg
loopne,pn
data16
add
or
movsb
scas
and
sbb
imul
or
fwait
lret
lods
push
es
pop
xor
mov
inc
add
int
and
mov
jae
fisubrl
nop
notb
pop
ret
adc
push
test
or
pushf
pusha
inc
inc
insb
aam
addr16
pusha
test
icebp
lods
sub
cwtl
mov
mov
ds
sbb
mov
cltd
arpl
pop
inc
das
test
imul
addr16
les
sub
mov
cmp
xor
jo
push
push
jnp
jg
std
fs
loope
pop
jno
jns
xchg
add
cmp
sbb
dec
shrb
dec
mov
mov
stos
je
sbb
push
mov
push
jae
test
dec
push
push
jnp
cmp
iret
lcall
insb
mov
inc
ds
mov
popf
jecxz
pop
out
lock
enter
lds
call
add
hlt
push
daa
rcrl
jb
pop
mov
sub
adc
les
loopne
xchg
dec
xchg
xchg
mov
bnd
push
dec
xor
cmp
orb
xchg
pop
push
mov
mov
mov
mov
mov
jns
ret
inc
andb
or
adc
jp
inc
push
ret
and
adcb
test
jl
add
and
mov
mov
jg
pop
inc
sahf
or
pushf
stos
mov
outsb
fsts
xchg
outsb
jp
add
in
movsb
stos
push
popa
pusha
sub
lret
mov
sbb
cmc
mov
add
inc
daa
dec
sbb
ja
mov
sub
mov
and
fldl
sbb
mov
xlat
pop
and
pop
call
pop
adc
mov
imul
dec
ja
out
idiv
scas
sub
pop
mov
add
js,pt
mov
mov
mov
cmp
jmp
or
sub
jmp
xchg
mov
jge
jbe
mov
jno
addb
mov
xor
cmp
push
pop
mov
js
xchg
cld
pusha
mov
outsl
nop
rclb
push
sti
js
fmull
mov
xchg
or
jns
cmc
lods
mov
pop
dec
in
jecxz
jbe
xlat
pop
pop
ljmp
cmpsb
movsl
pop
lods
mov
pop
jb
rcll
xlat
in
dec
divb
jmp
ss
mov
aaa
movsb
in
out
out
xor
jnp
mov
loope
ss
mov
clc
sbb
adc
dec
inc
jecxz
xchg
xor
fdiv
shlb
paddd
das
cmpsl
xchg
lahf
pusha
lahf
dec
adcl
jmp
push
fnstcw
xchg
xchg
mov
bound
sbb
push
in
xor
and
jo
ljmp
add
jmp
add
push
js
pop
insb
call
cli
dec
es
jle
dec
xchg
mov
sub
sti
push
add
adc
js
je
aaa
int3
fildll
xchg
stos
mov
and
sar
or
out
movsb
add
loope
push
leave
int3
jno
jnp
clc
or
cs
icebp
jecxz
inc
imul
negl
sbb
cmp
adc
lock
loope
pushf
pop
mov
enter
je
stc
add
out
mov
sub
lds
pusha
and
ret
aad
push
push
stos
in
popa
arpl
aad
cmc
xor
aas
insl
popf
stos
inc
jle
sub
out
pusha
xchg
cs
xor
sbb
sbb
out
xor
cmc
inc
add
testb
pop
imul
mov
fs
outsl
dec
pusha
add
add
nop
push
scas
loopne
mov
sub
dec
push
cmp
xchg
lea
xchg
mov
dec
das
movsl
mov
test
clc
push
stos
int
or
shrl
pop
mov
repz
push
lods
dec
bound
mov
aad
rcpps
inc
or
iret
adc
xchg
sbb
fsub
cmp
push
push
xor
xor
cld
in
les
dec
orb
and
pop
daa
push
mov
adc
hlt
jns
sbb
dec
daa
pop
add
fsubrl
mov
pop
dec
sbb
jp
adc
pop
cmp
or
jb
push
movsb
sahf
lahf
movsb
loope
lea
leave
push
or
push
sub
pop
les
mov
inc
in
mov
add
lea
jae
and
stc
inc
lods
movsl
inc
enter
test
addl
pushf
lret
int
in
cltd
cli
jo
addl
cmpsl
push
inc
outsb
nop
mov
loop
mov
jbe
in
lods
cmp
cmpsl
rcl
and
sbb
cmp
ret
ljmp
in
daa
jnp
shll
adc
dec
add
jge
inc
jl
sbb
iret
push
flds
and
sub
iret
push
movsb
int3
fsub
in
popa
xor
popa
sahf
loopne
cmp
jnp
add
out
aaa
notl
cmp
imul
mov
les
add
mov
stc
pop
repnz
cli
imul
inc
sub
mov
jmp
mov
xchg
sahf
inc
ret
xchg
lret
sbb
mov
js
mov
xor
add
notl
xchg
jns
dec
and
out
push
xchg
scas
lods
jnp
jmp
adc
stos
sti
xchg
xchg
int3
andb
call
mov
dec
sub
mov
adc
test
mov
sahf
fmull
mov
shlb
outsb
sbb
es
popf
sbb
or
shrb
out
insl
xchg
pusha
cmp
lret
ffree
mov
adc
int
scas
iret
or
stos
sbb
call
jmp
out
inc
and
mov
xor
mov
push
mov
mov
addr16
push
testl
jnp
adc
ss
mov
or
xor
mov
repnz
loope
pushf
pop
adc
in
xacquire
push
pop
test
loopne
cltd
push
mov
adc
mov
cmc
imul
dec
xchg
adc
xor
inc
insl
adc
std
jno
out
int3
loopne
pop
sub
push
or
repnz
mov
in
inc
or
xor
mov
sbb
paddw
popf
mov
or
lret
lcall
outsb
add
clc
lods
daa
stos
stos
push
lret
sbb
push
mov
or
push
push
sbb
int3
imul
add
pop
bnd
popl
lcall
dec
or
in
cmc
stc
inc
icebp
dec
loopne
push
mov
hlt
rcr
fsubrl
xchg
fstpt
xchg
popa
push
xor
or
jb
out
nop
rolb
fldenv
xchg
jnp
mov
call
loope
fwait
rcrb
mov
adc
jle
cwtl
add
inc
jo
cwtl
aas
sbbl
push
fmuls
je
clc
outsl
loope
dec
shrb
es
scas
and
mov
mov
jl
cmpsl
sbb
fistl
inc
or
sbb
rorl
cmc
xor
ds
loop
mov
inc
subl
das
or
out
ds
lds
psadbw
das
sub
cmp
mov
inc
jle
inc
mov
sbb
pop
pop
cwtl
jge
jo
in
jge
add
les
mull
cmp
push
jbe
inc
sbb
jo
and
lcall
jecxz
lahf
sub
cmp
inc
call
sbb
adc
inc
outsb
or
lahf
mov
push
push
arpl
mov
dec
sti
dec
push
push
lret
in
inc
aam
pop
sub
push
mulps
call
cmp
add
jmp
mov
jmp
xor
leave
sarb
in
jns
xchg
inc
int3
stos
or
push
push
js
aaa
dec
sbb
cmp
mov
push
lods
pop
pop
or
mov
or
pop
loop
cwtl
outsb
in
fstpl
xor
fdiv
push
xor
mov
mov
lock
mov
inc
insl
xor
leave
les
xlat
dec
notl
sbb
and
in
or
fcomps
aam
sbb
gs
inc
dec
push
insl
jge
jg
push
pop
cvtps2pd
adc
push
adc
sarl
cli
adc
lahf
pop
and
push
mov
lahf
lcall
xchg
pop
inc
out
jo
test
out
xor
scas
enter
fidivrs
dec
lock
adc
movb
cmp
stos
call
mov
push
mov
scas
addl
or
in
movsb
inc
fimuls
add
jle
push
test
mov
ss
lock
stos
or
push
cmp
xchg
jl
adc
lods
cmove
std
xchg
icebp
aad
hlt
unpckhps
imul
jl
fstpl
jno
cmc
or
jmp
enter
loop
mov
xchg
jmp
pop
clc
and
pop
lods
inc
dec
outsb
lcall
movsb
mov
mov
pop
inc
iret
xchg
insl
pop
stos
out
jnp
inc
and
sub
or
lds
nop
and
roll
test
xchg
pushf
addr16
fisttpll
out
lcall
inc
lock
fwait
push
push
lcall
inc
int
pop
add
xor
insb
cmp
and
dec
rcrb
fadds
mov
adc
or
js
lock
mov
adc
cmpsl
pusha
lret
push
cmp
gs
add
sbb
mov
lds
inc
sahf
daa
les
stos
lret
es
ret
lods
jp
sub
in
das
jmp
bound
sti
pop
dec
divl
stos
mov
push
dec
push
push
cmp
pop
ja
test
fisttps
mov
inc
mov
adc
lods
lret
cmpsl
icebp
shl
push
gs
aam
imul
mov
jmp
idivl
mov
js
cs
addr16
enter
dec
loop
sbb
cmp
mov
adc
cs
mov
or
adc
arpl
sbb
or
pop
cwtl
sbb
test
inc
mov
push
les
mov
adc
push
ss
sahf
add
jne
in
insl
mov
gs
sti
mov
insl
push
popf
pop
and
sbb
sub
aam
les
push
out
icebp
push
movsl
ss
mov
mov
les
adc
jbe
mov
out
push
cmp
ds
cmp
jl
jo
and
shrl
and
xor
sbb
out
out
loope
loop
mov
outsl
cmp
adc
rcr
insb
adc
and
sbb
add
ret
cmp
cmp
dec
and
sbb
test
popa
clc
add
pop
das
jge
cmpsb
or
or
push
movsl
jle
out
pop
fidivl
cmp
aaa
sbb
shr
mov
adc
lret
cmp
xchg
sbb
aad
popf
mov
test
fstpt
aaa
pop
adc
pop
jo
bound
sub
or
out
popf
nop
idivl
mov
loopne
bnd
cmp
out
loop
cmp
test
mov
add
in
out
mov
xchg
jns
fsubrs
pop
js
orb
loopne
sub
das
gs
pop
mov
aaa
andb
insb
mov
outsl
loop
xlat
cmp
test
jb
mov
xchg
mov
jmp
or
xor
push
pop
inc
xchg
push
sub
lods
inc
inc
xchg
popa
jmp
lret
pop
adc
push
pop
hlt
fcomps
inc
stos
leave
nop
das
int
ja
mov
aas
imul
daa
sbb
cmp
js
arpl
sub
cmpsb
cld
fsub
daa
dec
movsbl
hlt
pop
cmp
inc
adc
lar
xor
jb
outsl
pop
adc
dec
in
aas
jno
and
push
sbb
add
test
dec
mov
mov
jg
das
les
inc
sub
mov
paddd
test
pop
inc
ret
data16
ja
repnz
or
cmpl
loopne
lret
pop
insl
ljmp
mov
push
loop
add
aaa
mov
lret
jae
mov
jp
arpl
les
jmp
add
lea
cmp
dec
scas
lock
mov
pop
jno
arpl
lods
xchg
jge
sbb
add
bound
push
sub
add
lods
push
jp
xchg
fcoms
in
xor
mov
fisttpl
xchg
jno
and
xor
in
pop
test
add
dec
mov
jmp
cwtl
mov
inc
addl
mov
jl
clc
int3
cmpsl
in
cmp
cmp
and
adc
push
sub
jnp
shl
inc
and
lea
xor
hlt
xor
dec
lcall
sbb
lcall
lods
xor
xchg
repnz
adc
cmp
enter
mov
dec
aam
scas
and
es
decl
sbb
cmp
outsl
fadds
sbb
sbb
adc
jmp
sub
mov
fwait
push
or
lods
dec
jo
jno
gs
push
bound
adc
pop
sub
aas
divb
jbe
xchg
pop
xchg
cwtl
mov
jecxz
das
mov
and
mov
test
push
js
imul
jnp
les
call
lcall
test
mov
inc
jb
int
dec
pop
dec
or
mov
std
dec
sarb
incb
lods
adc
xor
ja
push
sub
ja
add
addr16
icebp
mov
mov
stc
mov
dec
stc
jl
scas
daa
addr16
xchg
fwait
lds
imul
imul
mov
int
rcrb
inc
imul
stc
insb
aaa
cmp
js
xor
cmp
ljmp
fsubl
mov
in
inc
xor
outsl
aaa
sti
fwait
ret
mov
lcall
push
fidivl
mov
aaa
xor
outsl
in
pushf
negb
sbb
popa
sahf
add
xor
dec
rclb
lods
cwtl
push
mov
roll
dec
add
cmp
push
aas
hlt
and
xchg
push
push
pop
cmp
mov
cmp
cld
push
sub
in
inc
add
push
ja
mov
incl
xchg
cmc
xchg
hlt
arpl
mov
lea
xor
pop
aam
stc
mov
jg
sti
aaa
stc
xchg
cmp
push
out
lea
adc
and
adc
xchg
je
sti
xor
lock
fsubl
jo
sub
pop
add
or
insl
repnz
cltd
xor
jl
cmpsb
xor
stos
enter
cmp
shr
sbb
jmp
inc
adc
aaa
in
sti
cltd
and
sbb
cltd
cmp
sub
iret
pop
lock
pop
stos
xor
or
jg
sub
pop
andl
cmpsl
jmp
outsb
sub
push
mov
fcompp
je
jno
test
fsubrl
fistps
or
xor
addl
inc
mov
insb
jge
cld
push
test
pop
jo
lahf
fsubl
pop
in
ret
shrl
and
into
leave
cmpsb
lea
jb
or
out
jg
cs
add
mov
rcrb
or
clflush
push
clc
loopne
cmp
pusha
cmpl
shlb
popf
stos
lahf
cmpsl
ret
dec
daa
ret
pop
int3
popa
push
pop
test
sub
jbe
cmpsl
push
pop
sahf
int3
scas
cwtl
add
into
imul
cmp
mov
mov
std
in
xchg
mov
addr16
push
imul
addb
or
inc
push
fsubp
outsl
call
jne
jbe
mov
inc
mov
and
out
enter
lcall
cmp
addr16
adc
xor
jl
push
and
dec
jmp
mov
lods
int
mov
xchg
das
pop
faddl
pop
repz
ret
out
les
inc
push
fiaddl
xchg
sarb
cmp
inc
test
clc
orb
cld
push
enter
repz
psubsw
add
dec
ja
enter
or
or
movsb
addr16
push
mov
and
xchg
sbb
sbb
loop
popa
out
jo
push
jp
and
dec
stos
push
sbb
mov
sub
mov
dec
pop
scas
lahf
in
nop
les
xchg
das
mov
data16
test
arpl
mov
jb
push
xchg
xor
xchg
arpl
dec
xchg
push
jne
addr16
jne
ret
outsb
push
pop
ffree
xchg
mov
lock
in
fistl
das
shl
fldt
imul
lea
jge
in
add
pop
xor
in
mov
lds
dec
es
add
ret
xor
jg
ss
push
in
adc
and
lock
mov
adc
inc
push
jg
imul
mov
pop
xchg
mov
mov
lods
cld
ljmp
pop
pop
mov
in
nop
inc
insl
push
adc
jbe
and
push
dec
mov
frstor
sahf
repnz
mov
adc
clc
insl
sbb
sbb
sbb
call
add
outsb
lcall
push
xor
loopne
out
xchg
pop
test
xor
xor
mov
mov
out
lock
std
ficoml
outsl
lods
lea
dec
adc
fs
add
imull
xchg
or
inc
mov
cmp
in
pop
shlb
mov
mov
ss
add
aam
inc
stos
pop
push
and
mov
out
jle
mov
jae
or
insl
lds
jmp
adc
xor
ss
xor
push
pop
jmp
pop
xchg
add
pop
adc
or
xchg
lods
icebp
dec
ljmp
aaa
push
stos
mov
or
jno
outsb
das
push
aam
divb
movsl
sub
pop
js
lahf
pop
mov
mov
or
and
sbb
cli
or
cmpl
fstl
hlt
mov
mov
mov
mov
mov
out
mov
inc
pop
andps
or
lahf
lea
mov
mov
push
dec
dec
add
in
inc
divb
cmpb
cmp
sbb
cmp
jge
cmp
xchg
in
imull
jl
aaa
stc
push
je
xor
mov
aas
lcall
fwait
mov
jle
stos
int3
lret
hlt
rcll
push
or
and
test
pushf
iret
lahf
mov
stos
into
or
scas
lcall
inc
sub
repnz
xor
jg
cli
test
or
test
inc
lods
sub
cwtl
adc
clc
lds
fildl
mov
sbb
fistl
mov
or
icebp
mov
out
dec
sub
dec
sub
mov
add
add
push
popf
test
xchg
aaa
pusha
pop
jmp
idivb
xchg
stos
pop
sub
add
gs
test
xor
mov
aaa
psubsb
mov
int3
inc
mov
adc
jle
dec
push
insb
pop
xchg
fwait
clc
inc
mov
jle
out
je
ljmp
sarb
daa
aas
adc
jns
mov
xor
icebp
sbb
or
idivl
sbb
push
mov
fcoml
daa
dec
movsl
xor
call
mov
test
ret
nop
xor
into
or
mov
sbb
xchg
test
test
pusha
dec
add
dec
imul
dec
adc
inc
or
add
out
pop
aas
xchg
fdivrl
push
add
rcr
loope
adc
movsl
xchg
test
clc
xor
xor
addl
cmp
shrb
and
mov
stc
in
adcl
dec
jmp
push
jecxz
inc
sbb
std
call
add
test
cli
ds
fwait
enter
mov
add
sahf
mov
int
push
mov
cmp
xchg
xchg
xchg
hlt
mov
ja
xor
icebp
mov
sbb
adc
add
jnp
cltd
cli
xchg
roll
add
or
data16
xchg
push
ds
fwait
loope
mull
jecxz
mov
ds
andl
notl
loop
int3
mov
xlat
repz
pusha
fdivl
inc
hlt
lcall
mov
jne
ret
test
ret
inc
pusha
std
lcall
sti
insb
mov
in
nop
fmul
mov
xor
or
or
loope
inc
pop
xor
out
lock
or
cld
repz
cmp
xchg
add
mov
jbe
aad
jno
sub
add
sti
aas
push
dec
inc
imul
cld
rclb
sub
aam
fistps
push
dec
aam
outsb
push
lahf
and
mul
icebp
bound
andl
bound
cmpsb
push
cli
popf
sub
dec
scas
jno
sarb
sbb
les
push
ljmp
decb
ret
xor
xchg
and
fdivr
out
mov
xor
adc
cld
ret
das
cwtl
repz
dec
mov
xor
cmp
test
jb
incb
xchg
pop
sbb
js
adc
mov
addl
mov
cs
xor
dec
xchg
icebp
jmp
push
pusha
pop
mov
fiadds
lock
or
test
pop
out
inc
lods
into
pop
inc
fwait
jo
gs
xor
jne
insb
sub
or
xchg
pop
leave
sahf
iret
fcmovnbe
xchg
repnz
push
mov
dec
pop
sub
mov
shll
xchg
cmp
movsl
popa
cmp
sub
or
fimull
scas
mov
cmp
adcl
and
test
testb
addl
into
cmc
int
movsl
popa
mov
jbe
outsb
jno
mov
bound
out
test
jg
mov
popa
aam
je
stos
insb
jp
dec
aaa
sahf
popa
cmp
mov
ficomps
arpl
inc
inc
popa
enter
adc
add
loope
cltd
dec
sub
dec
mov
mov
test
mov
jno
sub
pop
or
jge
ds
jb
sub
rolb
orb
cmc
loopne
sahf
aam
int3
sarl
cld
jae
testl
and
dec
pushf
sub
sub
jecxz
fnstsw
mov
adc
mov
sbb
sbb
adc
add
and
mov
inc
jo
xor
subb
adc
leave
lock
lods
fsubrs
xor
sub
cli
into
out
stos
pop
ja
inc
cmp
hlt
aas
cmpl
xorb
clc
adc
mov
out
inc
rorb
jno
xor
test
lods
mov
push
enter
dec
aad
es
bound
xchg
stc
pop
pop
xchg
jno
mov
mov
pop
arpl
lods
out
push
inc
sbb
mov
xchg
cmpsl
out
addb
imul
loope
cmpsb
adc
adc
jnp
xor
loope
sbb
loop
xchg
mov
pop
fwait
push
loop
in
pop
xorl
arpl
out
inc
push
push
dec
jge
mov
mov
xor
mov
xor
cmp
push
mov
adc
add
cli
mov
stos
divl
lods
ret
enter
leave
mov
inc
es
add
lock
xor
mov
cmp
mov
sub
mov
cwtl
xor
cmpsb
stos
nop
sbb
inc
mov
push
loope
cmpb
dec
icebp
mov
fwait
les
shlb
insb
adc
jbe
xlat
pusha
addr16
xor
pushf
inc
into
push
stos
dec
ss
aam
xor
and
ret
pop
sahf
adc
mov
cmpsl
sahf
movsl
fld
lea
ss
test
pop
in
xchg
pop
cmp
jo
mov
lret
mov
test
jno
int
sahf
xchg
or
rcl
sub
push
movsl
add
xor
xchg
xchg
lock
ret
mov
cli
mov
sti
xor
lea
xchg
shll
imul
das
add
cli
or
or
je
xchg
dec
pop
inc
mov
sahf
stos
cmp
jmp
or
andb
les
push
gs
iret
pushf
shr
sbb
mov
or
das
rorl
xchg
cmc
pop
sub
mov
push
ljmp
xor
in
lods
xchg
xchg
lcall
push
mov
adc
jl
mov
mov
push
jae
xchg
cmc
dec
int3
or
mov
cmp
data16
inc
lock
into
pusha
pop
jmp
iret
jge
dec
scas
fcomps
mov
push
mov
mov
jo
xor
fwait
popf
dec
insl
mov
addr16
push
imul
mov
aas
loopne
inc
scas
cmpsb
jb
pusha
cmpsb
or
mov
sahf
mov
or
adc
fldl
mov
dec
and
adc
jb
lret
dec
aam
or
pop
stc
mov
mov
push
add
fbld
dec
xor
inc
jne
out
lods
fldenv
cltd
decb
mov
lret
fisubl
lods
leave
mov
push
fdivl
fistpl
aaa
lahf
sub
testl
mov
inc
cli
jae
or
xchg
or
shl
cmp
xchg
ja
daa
dec
cld
fisttpll
out
cs
jge
mov
in
mov
ficoml
mov
int3
jl
ss
iret
sub
pop
aas
jge
push
leave
dec
and
sub
sti
loopne
add
mov
mov
mov
push
dec
ljmp
xchg
stos
lret
lret
xchg
hlt
hlt
stos
mull
inc
in
mov
xlat
and
or
mov
cmp
sub
xchg
lcall
in
repnz
mov
fwait
dec
out
dec
gs
xbegin
or
cld
test
adc
incb
adc
mov
mov
cmc
sbb
sbb
in
mov
lods
adc
cld
jno
out
push
xor
nop
adc
mov
cmp
push
adc
cmp
cmp
gs
pop
inc
push
xor
mov
xchg
fldcw
cld
mov
jns
std
iret
cmp
loope
xchg
fildl
add
fwait
mov
popa
jp
in
cmp
pop
stos
ljmp
or
mov
adc
inc
sbb
adc
jo
mov
dec
pop
add
and
inc
mov
dec
mov
psubusb
sub
fwait
and
mov
movl
lods
pop
mov
adc
mov
jg,pt
cmp
fiaddl
lea
inc
rorb
jae
ret
negl
call
add
stos
clc
adcl
push
aas
gs
mov
mov
cmp
fildl
dec
adc
test
jmp
test
xchg
lahf
movsb
xchg
ret
adc
iret
test
aad
out
inc
mov
jg
or
or
jno
xor
mov
rcrl
mov
mov
push
test
mov
out
sub
loopne
in
pusha
xor
outsb
xchg
loop
das
push
xor
jnp
pop
sbb
mov
mov
test
mov
mov
insb
popa
mov
add
sarb
push
inc
mov
cli
movsl
xor
test
xchg
mov
jle
push
sbb
sub
mov
mov
lods
lret
jbe
aaa
lds
pop
dec
int3
mov
lret
aad
aaa
loopne
in
sbb
mov
mov
push
jb
movsl
repz
jnp
cmp
ljmp
or
stos
fmull
pop
test
movd
xor
pop
mov
sahf
pop
cmp
add
inc
cmc
mov
aad
adc
lcall
push
mov
out
lods
mov
cs
adc
sbb
sbb
ficompl
movsb
out
fsts
in
cmp
daa
add
daa
rcrb
ret
adc
sbbb
cmp
out
push
inc
jecxz
lds
jg
pop
ja
cmc
pop
push
push
add
jmp
add
loope
stos
negb
sub
sub
mov
mov
fwait
mov
mov
add
jnp
mov
loopne
xor
icebp
xor
cmpsb
add
aaa
add
outsb
in
fcomp
repnz
jb
stos
jecxz
pop
xor
jo
scas
pop
lds
mov
mov
fldcw
jge
idivl
mov
ja
stc
clc
push
out
fcmovnb
dec
in
inc
add
rolb
push
aaa
iret
fs
or
inc
sub
les
dec
daa
pop
ret
mov
xor
sub
pop
lahf
cmp
or
xor
stos
stos
or
ficompl
push
adc
or
cmp
pop
cmp
das
add
xor
inc
ss
mov
xor
lret
jns
xor
rorl
aaa
dec
xchg
jge
and
test
and
bnd
jno
adc
add
arpl
pop
jecxz
add
inc
faddp
pop
mov
sbb
mov
out
aam
test
push
stos
fs
jnp
leave
cmpsl
mov
insl
test
mov
cmp
pop
jae
insb
fcoml
push
pop
cmp
lds
jle
rolb
add
es
shr
inc
sbb
push
pop
repz
sbb
mov
out
push
pop
ljmp
incl
dec
nop
out
arpl
popa
in
dec
mov
adc
cmpsl
mov
or
ret
repz
sub
jmp
dec
icebp
jmp
js
pop
jmp
ljmp
repz
fcmovu
insl
cmp
pop
xor
cmp
mov
arpl
pop
cmpsb
cmc
pop
sub
sub
paddusb
and
loopne
mov
mov
stos
xor
aam
mov
jl
cli
out
mov
xor
mov
inc
push
adc
xchg
dec
dec
dec
jnp
sahf
add
rcrb
js
outsl
arpl
pop
rep
lcall
mov
inc
inc
mov
or
rorb
subl
xor
rcrb
jae
pop
test
sbb
jp
or
jno
aam
mov
andl
test
loope
cbtw
push
rcl
pop
push
add
push
rcrb
adc
or
mov
jns
and
fsubrl
jle
push
sbbl
shll
push
gs
fcomi
xor
inc
push
adc
mov
imul
fldenv
sarl
shr
push
js
lods
ds
or
sbb
pop
mov
push
sub
fdivl
dec
xor
fcompl
out
hlt
and
xor
movsb
icebp
lret
xchg
push
pop
cmp
jne
lcall
add
cli
mov
iret
ss
bound
xor
jmp
rcrl
paddsb
clc
cmc
add
sarl
inc
fs
pop
push
es
push
out
lods
iret
push
imul
jmp
adc
lea
cld
mov
js
hlt
jnp
insb
pop
sbb
sarb
push
push
out
push
stc
std
or
mov
notl
out
gs
sub
sarl
or
xor
pushf
in
sbb
imul
pop
xor
mov
stos
test
inc
and
inc
pop
xchg
xchg
and
jo
and
cli
fwait
loope
testl
imul
in
pop
lret
xor
inc
sbb
scas
jmp
cltd
scas
icebp
add
bound
mov
leave
sbb
sub
sbb
aam
dec
xchg
cli
mov
pop
aas
cmc
pop
mov
loopne
ds
push
inc
test
cmp
jg
push
add
js
lock
xchg
jg
add
xchg
inc
pop
stos
frstor
inc
jmp
rorb
stos
add
lcall
xchg
in
mov
daa
in
push
mov
add
mov
les
bound
jb
mov
and
adc
inc
inc
jb
rorl
add
shr
pushf
fcmovnbe
ret
mov
aam
outsl
dec
cld
jle
rorb
mov
std
ret
outsl
push
push
dec
mov
loop
cmp
mov
cmp
mov
nop
addr16
inc
mov
push
icebp
xchg
loope
cld
lahf
cmpsb
jmp
ss
and
jg
in
or
push
adc
test
push
mov
fsubs
xchg
dec
push
push
push
sbb
int3
sub
hlt
pushf
xchg
nop
shlb
enter
loopne
or
push
xchg
mov
or
mov
aaa
test
fstpl
cmp
and
in
test
xchg
dec
add
or
sub
sbb
setge
stc
ljmp
adc
adc
mov
movsb
push
mov
fists
inc
xchg
sub
insl
and
jbe
out
in
xchg
sub
or
push
adc
inc
sbb
ret
cld
data16
mov
scas
negb
pusha
adc
sub
in
mov
loope
ret
push
mov
sub
jp
lret
mov
repnz
aam
loopne
mov
push
mov
cmp
sub
les
mov
mov
pop
loope
mov
imul
mov
jnp
je
adc
mov
aaa
jle
xlat
jg
pusha
inc
fcoms
test
pop
add
push
or
xor
bound
insb
dec
cld
cmp
cmp
ret
outsl
sbb
test
stos
add
adc
hlt
js
mov
jno
dec
je
lods
fbld
xorl
sub
add
ficoml
mov
xchg
fnsave
mov
int
leave
fcomip
icebp
movsl
or
negl
aas
decb
arpl
out
insb
das
popf
ret
xor
push
jmp
or
dec
dec
ds
repz
dec
lret
or
leave
leave
inc
jp
lahf
jge
mov
mov
push
dec
out
dec
imul
mov
xorb
movsl
jmp
outsb
les
ficoml
sti
jecxz
jno
arpl
xor
mov
pop
sahf
lret
das
push
jne
sbb
sub
das
mov
sti
addr16
int
movsl
das
out
addr16
ds
mov
lock
and
push
and
xor
or
jge
inc
sub
add
stos
out
dec
pop
adc
sbb
add
cltd
out
adc
jne
adc
out
jno
hlt
loope
add
push
xchg
xchg
lret
inc
leave
add
mov
imul
loop
in
add
mov
xchg
xchg
xorl
add
into
push
int3
inc
dec
clc
mov
movnti
cli
xchg
test
int3
dec
jle
aas
cmp
adc
and
in
cmp
fiaddl
lret
inc
dec
out
cmp
mov
test
fucom
sbb
subl
cmp
add
repz
movsb
mov
xchg
dec
ret
push
mov
ljmp
xor
shrb
mov
push
mov
mov
jb
scas
push
cld
jno
cmp
mov
cmp
pop
add
push
mov
stos
testb
add
or
dec
and
aaa
in
rcl
std
mov
sbb
mov
lcall
inc
cmp
mov
rolb
lods
sub
xorb
shr
rolb
iret
filds
mov
test
xchg
cmp
movsl
sub
jbe
dec
rolb
out
filds
lods
xor
je
inc
out
mov
mov
rorl
sarb
incl
and
lods
mov
pop
push
cmp
fidivrl
mov
xchg
lahf
inc
int
lods
jmp
aad
push
daa
xor
out
inc
leave
sbb
in
in
ljmp
pop
repz
dec
sahf
sbb
lcall
sahf
out
aaa
or
into
mov
ret
or
out
imul
pop
call
sbbb
sti
ss
pop
adc
push
mov
addr16
mov
jns
xchg
adc
and
cmp
lods
cmp
inc
and
int3
jbe
pusha
xor
stc
sbb
jbe
cmpsl
lods
inc
popf
enter
hlt
mov
dec
jg
outsl
je
andl
inc
and
xor
dec
push
test
mov
pop
subb
xchg
xchg
sub
out
dec
js
mov
enter
rorb
xchg
inc
mov
gs
mov
dec
pop
push
jnp
and
cmp
sub
cld
mov
mov
fsts
mov
cmp
insl
es
movsl
and
es
lock
nop
out
fwait
lock
adc
pop
sub
add
imul
loop
adc
clc
inc
out
int
add
data16
and
les
adc
in
in
xor
shufps
sahf
add
push
cmp
xchg
negl
push
push
inc
lcall
pop
mov
mov
out
mov
adc
inc
sbb
movsl
iret
jns
inc
sbb
orl
je
out
sarl
inc
inc
push
jg
inc
stos
mov
pusha
jmp
jl
leave
or
inc
imul
mov
jge
mov
rcll
iret
mov
and
add
das
fwait
out
jg
mov
shll
in
fists
fcompl
mov
or
inc
pop
cwtl
pushf
arpl
out
ret
inc
out
pop
push
lcall
sbb
pop
fildll
add
push
je
lds
cmpsl
mov
xchg
xchg
pushf
loopne
fbld
int
cmpsl
sarb
test
push
jmp
dec
inc
lods
imul
adc
ja
sub
sahf
subb
inc
popa
push
adc
xor
push
jg
sahf
cmp
sub
sti
insb
dec
sbb
dec
lret
hlt
das
or
fdivp
inc
rorb
mov
push
repnz
inc
shlb
xor
sbbb
push
adc
test
mov
pop
fldcw
adc
xchg
cmp
scas
lahf
mov
xor
cld
cmp
jns
out
lods
mov
push
loope
lret
xchg
mov
in
out
push
nop
pusha
xor
mov
mov
mov
dec
or
mov
jo
push
cwtl
or
out
pusha
cli
jbe
push
push
repz
xchg
leave
add
fidivrs
mov
cmp
or
pop
jns
dec
push
sbb
pop
mov
movsl
cmc
xchg
and
jge
int
je
push
inc
fsubrs
pop
sarl
jnp
jne
fwait
or
sti
cltd
stos
xchg
hlt
dec
inc
mov
lods
mov
dec
aaa
adc
pop
leave
insb
and
add
inc
das
mov
push
aam
lods
repnz
add
imul
dec
aas
hlt
cltd
fmuls
out
test
sub
cld
fisttpl
jmp
es
daa
addl
jnp
in
js
insl
jno
lcall
push
iret
sarl
test
sbbb
dec
lret
test
cmpsl
sub
mov
pushf
inc
arpl
or
push
inc
inc
pop
inc
flds
adc
xchg
pop
pop
movsb
int
jo
pop
lahf
xor
leave
fdivrs
cld
shl
and
fdivl
int3
lret
mov
mov
jo
xchg
xor
outsl
jle
sub
leave
or
lods
mov
ljmp
inc
lret
mov
add
ds
dec
stc
loop
nop
mov
scas
push
and
jg
icebp
push
stc
jl
jno
arpl
imul
out
mov
into
pop
out
fnstcw
mov
xchg
mov
sti
orb
lock
dec
and
mov
imul
add
jecxz
call
sub
jle
add
loopne
test
ljmp
imul
push
ficomps
stos
andb
fwait
jge
rol
dec
sub
mov
fisubrs
sub
popf
mov
inc
movsl
inc
sbb
aam
or
mov
dec
addr16
js
xchg
dec
xor
xchg
into
pop
pusha
ljmp
repnz
mov
fcompl
repnz
mov
jo
ljmp
jno
repz
sub
out
xchg
xchg
fxtract
lods
xor
aas
ret
jmp
addr16
adc
clc
jns
xor
add
inc
in
fimull
xchg
jae
shll
jne
pop
jbe
andb
and
mov
xor
jns
aaa
jge
cmp
jl
mov
or
das
xchg
xchg
leave
jo
inc
push
pop
and
orl
inc
subb
push
out
out
ss
xchg
adc
imul
imulb
push
test
cltd
movsb
mov
mov
sub
iret
pop
sbb
adc
xor
push
ljmp
cmp
mov
cmpsb
sbb
lods
jae
scas
adc
add
inc
in
xchg
sub
mov
sub
movsb
call
jg
xorb
xor
pop
insl
iret
mov
add
ret
aad
xor
addr16
test
std
dec
push
addb
and
int3
and
into
andl
repnz
inc
lods
pop
cmp
sub
pusha
mov
or
pop
mov
push
mov
add
mov
popf
pop
sbb
or
mov
fisubl
clc
jmp
cmpsl
jl
fiaddl
sub
outsl
sub
or
ret
pop
push
ljmp
pop
cmp
jbe
xchg
xchg
shrb
jb
fs
push
in
mov
xchg
pop
cmpl
ja
cli
pushf
mov
sbb
icebp
into
jp
scas
jle
addb
push
mov
aas
mov
cli
add
notb
shl
dec
xchg
inc
adc
and
pop
inc
mov
push
lock
and
add
sub
jmp
or
xor
shll
lret
sbb
inc
pop
cmp
or
push
pop
cmp
stos
clc
shlb
scas
cmp
and
sahf
mov
outsb
sub
mov
movsb
ja
sub
xchg
xlat
nopl
outsl
inc
push
add
stc
repnz
mov
pop
movsb
dec
pop
adc
rcll
ss
js
sbb
data16
mov
add
das
cmp
or
cltd
and
xchg
pop
data16
ret
clc
and
divb
rcl
stos
popa
pop
cmpsl
mov
sbb
stos
cmp
inc
in
gs
jo
mov
testl
enter
dec
mov
xchg
push
mov
sub
ss
inc
cli
sbb
mov
sub
ds
dec
push
sub
jb
insb
sti
enter
cltd
test
xchg
dec
fisubrs
ds
mov
sahf
or
sbb
pop
mov
mov
jp
jno
mov
pop
js
aam
cmc
or
xor
data16
push
inc
rol
xchg
dec
std
sub
ljmp
add
add
test
mov
jo
mov
movsl
xchg
mov
cli
mov
push
pop
stc
fimuls
cmp
pop
jnp
jle
je
dec
dec
outsl
ja
shlb
sub
xor
xor
add
sahf
fisttpl
fiadds
clc
inc
sbb
outsl
inc
inc
add
sbb
mov
out
xchg
mov
cwtl
xchg
pop
in
xchg
or
shrl
div
pushf
mov
les
xchg
mov
hlt
add
idiv
nop
lcall
jl
or
ret
push
push
mov
arpl
dec
mov
pusha
jbe
int3
pcmpeqb
and
scas
sbb
nop
test
xchg
pop
lock
sti
inc
mov
addr16
pushf
negb
ds
push
test
jl
aas
les
fmull
fadd
sbb
je
dec
dec
inc
jecxz
pusha
imul
or
pop
out
mov
mov
xchg
adc
lods
mov
sbb
push
xchg
in
and
and
sub
cmp
dec
adcl
xlat
test
dec
pop
jb
daa
mov
push
test
pop
inc
aam
iret
out
push
sbb
jne
test
clc
lcall
cmc
and
pop
xchg
in
int3
into
mov
loop
loop
mov
and
jnp
fs
adc
pop
nop
arpl
inc
jae
sbb
push
dec
dec
fxch
and
test
jne
mov
lahf
sub
xor
in
dec
add
pop
mov
pop
jl
sbb
aad
add
jg
rclb
in
mov
sbb
adc
fnstenv
jle
adc
fcmovu
imul
arpl
insb
sub
xlat
push
inc
adc
pusha
push
hlt
cmp
cmpsb
test
bound
lcall
es
aas
mov
xlat
push
jnp
subl
gs
insl
jmp
sahf
idiv
push
cmpsl
xlat
mov
mov
or
mov
pop
cmp
xlat
fcmovne
test
imul
and
lcall
add
and
sbb
test
sbb
push
inc
sub
lds
inc
mov
loopne
pop
mov
push
stos
stc
jle
xor
aas
add
xchg
mov
lret
mov
xor
out
idivb
add
push
adc
push
popf
iret
outsl
sahf
cmp
je
pop
mov
popa
fsubl
jge
out
sub
lods
xchg
sbb
fmuls
push
enter
jae
sub
in
testb
loop
pop
mov
sbbl
lret
pop
jecxz
pop
divb
shll
adcl
sbb
adc
sbb
jne
fs
inc
fsub
jo
int3
cmpsl
cmp
ja
mov
xor
mov
scas
inc
dec
cmc
imul
mov
mov
outsb
pop
insb
or
jmp
cmp
icebp
dec
fiaddl
adc
add
mov
cmp
or
dec
mov
mov
lods
sub
orb
mov
and
es
or
inc
scas
xor
rolb
jo
in
mov
xor
and
push
or
aad
sub
pushl
insb
je
test
jns
lock
leave
fimull
rclb
sbb
inc
jl
andb
sbb
jl
xchg
fnsave
dec
mov
mov
xorl
popl
dec
sti
faddl
jne
ret
push
lds
lock
test
xchg
in
fisttpl
cmp
jo
aad
iret
cmpsb
dec
ds
sub
dec
gs
les
push
mov
mov
mov
inc
pop
icebp
arpl
addb
add
cltd
daa
iret
jmp
xlat
pop
mov
andl
scas
fidivrs
andl
adc
testl
lods
xchg
pop
loopne
les
mov
lret
in
mov
add
add
and
fistps
ficompl
mov
mov
jl
inc
sub
popa
xchg
cmovle
into
pop
notb
mov
cwtl
jnp
addr16
clc
lahf
add
inc
fsubl
mov
lea
dec
jp
cli
pushf
lahf
fwait
fwait
inc
xchg
rorb
push
xor
sbb
arpl
sbb
jns
movsl
fmull
or
call
ret
mov
ds
push
cmpsb
test
iret
inc
dec
leave
dec
imul
enter
dec
mov
fs
outsb
outsl
rcll
and
in
enter
lcall
inc
cmpsb
andb
push
in
popf
lcall
fmull
ret
ret
stc
fidivs
call
sbb
popf
xchg
cli
repnz
xor
add
repz
popa
mov
std
push
movsb
in
aad
push
xchg
ds
push
jne
stos
fstpt
imul
pop
les
xchg
sbb
inc
or
jae
push
adc
aam
cmpsb
adc
call
add
sbb
loope
addr16
pop
xor
sarb
subl
sbb
out
sbb
xor
repz
stos
pusha
popf
dec
mov
xor
or
cs
cli
dec
cwtl
es
add
inc
add
xor
dec
fstp
jns
outsb
pop
xchg
and
and
dec
xor
cmp
cmc
enter
mov
jecxz
jp
popa
mov
test
cmp
pusha
pop
jl
jle
push
in
lahf
fcmovne
inc
inc
xchg
in
add
or
hlt
adc
xlat
mov
ret
dec
ret
add
sub
mov
lret
sbb
sub
sahf
dec
push
sub
lods
and
aas
dec
pusha
xor
push
cld
sub
jno
push
fs
jb
test
nop
movl
out
sbb
jmp
ret
push
jns
jo
scas
add
pop
std
jno
repnz
pop
aas
cmp
xchg
inc
inc
mov
lcall
inc
xor
or
stos
aas
inc
fidivrs
push
mov
lock
inc
dec
xchg
int3
xchg
jecxz
xchg
sub
jmp
jnp
pop
aam
aaa
jae
subl
ficompl
jbe
fmull
repnz
cmp
jbe
mov
arpl
data16
mov
ljmp
test
hlt
push
add
fstpl
pop
and
mov
shl
inc
push
ret
pop
bound
and
adc
xchg
pushf
bound
dec
or
inc
add
ss
and
mov
push
mov
lahf
pop
push
or
or
dec
xchg
mov
sub
xchg
pop
or
sub
xorb
lock
lock
mov
iret
shl
mov
cltd
in
mov
test
xchg
jl
cmp
in
repnz
sbb
dec
dec
iret
out
loop
in
push
mov
inc
cmpsl
icebp
or
push
clc
mov
lods
inc
and
data16
or
aas
gs
mov
sbb
scas
xchg
jnp
sub
adc
mov
pop
out
fnstenv
pop
sbb
adc
pop
imul
add
mov
jp
in
jl
shrl
mov
std
xor
movsb
std
in
repz
mov
pop
push
mov
mov
jecxz
cmp
mov
dec
jb
fstpl
stos
inc
js
adc
adc
inc
ss
push
shrb
filds
xlat
mov
stos
subb
push
inc
sbbb
inc
fmulp
xor
ds
mov
or
jne
mov
cmp
push
mov
fld
mov
insl
sub
mov
or
stos
sarb
push
cvtps2pi
rorb
loopne
fst
pop
sti
pop
or
lock
push
xlat
sti
add
push
lock
imul
cmp
dec
xor
stos
sbb
adc
push
add
negb
push
insl
pop
sarb
movsb
out
cli
mov
mov
ss
pop
sub
xchg
mov
test
pushf
mov
fldz
sub
xchg
pop
mov
jns
and
cs
inc
dec
mov
lock
or
adc
xor
outsb
jg
sbb
das
rcll
enter
insb
jae
mov
xor
scas
shrb
stos
adc
xor
jb
popf
sub
rcr
sti
push
jnp
and
rol
arpl
xor
out
in
mov
lret
imul
mov
and
push
inc
loope
js
cmp
xchg
movl
les
adc
loop
xor
dec
shrl
inc
add
scas
jae
jp
jle
lret
fstpt
mov
scas
sbb
rol
adc
mov
sti
aas
and
pushfw
and
call
jnp
aaa
sub
mov
dec
sub
dec
call
mov
xlat
jae
add
mov
mov
mov
mov
pop
sub
lods
arpl
out
mov
dec
add
cs
pop
aad
pusha
cmp
bound
scas
aad
xchg
and
mov
insl
sub
jne
xchg
or
xchg
sub
in
or
js
adcb
push
pop
sub
push
or
xorl
pop
mov
jne
jmp
adc
dec
inc
xlat
or
sbb
sarb
mov
sub
popf
shlb
mov
cwtl
rcl
nop
mov
cmp
inc
jmp
sbb
push
or
icebp
and
pop
pop
mov
jne
aaa
xchg
loope
jae
movsb
inc
push
pop
test
mov
lahf
sub
pop
pop
int3
insl
cmpsb
shll
loop
fsub
call
add
adc
movsl
and
mov
jp
mulb
insl
shl
jno
mov
into
lock
aaa
jg
fidivs
aam
jns
leave
pop
xor
xor
outsb
ret
jmp
in
push
into
lods
jg
adc
movsl
mov
stos
adc
and
xchg
inc
inc
shlb
jb
inc
dec
imul
or
xchg
inc
std
sti
out
mov
stc
pop
test
ret
pop
mov
adc
cmp
dec
aad
fs
mov
sar
cwtl
jns
xor
sub
push
test
pop
testl
inc
lret
push
jp
mov
lea
movsl
fcompl
cmp
clc
jle
int
rcrb
and
mov
lods
dec
shrl
jo
out
into
cs
dec
add
pop
cmp
mov
int
jbe
mov
jmp
mov
mov
fdivr
sbb
cmp
lcall
sub
addr16
mov
ficompl
sub
cmp
in
pop
hlt
aad
lock
jge
mov
stos
mov
lods
sbb
aaa
pop
jg
push
mov
sub
in
fwait
mov
imul
imul
mov
jnp
xchg
push
sbb
pusha
push
rcr
push
xor
out
loope
sbb
mov
dec
jmp
mov
push
cmc
iret
xchg
cli
cmpl
movsl
cli
xchg
push
mov
and
sysenter
jmp
xchg
and
fisubrl
mov
push
sbb
lds
leave
outsl
jbe,pn
in
cmpsl
movsl
inc
mov
shll
and
out
inc
cmp
in
nop
sub
adc
mov
mov
cli
jnp
pop
and
xorb
inc
or
frstor
insb
mov
rorl
imul
push
and
jae
addr16
loopne
call
es
inc
xchg
inc
leave
sub
xor
adc
pop
dec
decb
mov
cmpsl
je
mov
test
jmp
adc
addr16
xchg
aad
jns
and
cwtl
or
out
adc
xor
add
xlat
fcoms
lea
test
lret
inc
pop
ret
adc
neg
shlb
jecxz
mov
lock
sbb
sbb
pusha
pop
mov
insb
stos
xchg
push
bound
mov
push
dec
and
or
dec
pop
pusha
add
xor
or
cwtl
mov
std
inc
and
and
lods
or
das
out
jnp
and
into
in
gs
enter
addr16
push
add
and
ret
pushf
mov
scas
pop
int
jg
mov
inc
xlat
sub
jge
insb
popf
lcall
je
in
icebp
jecxz
stos
adc
pusha
fchs
scas
aaa
std
adc
and
rcrl
sahf
jge
fs
jmp
shlb
push
imul
or
adc
imulb
adc
cmc
mov
jmp
jle
or
sbb
sbb
iret
vaddsubpd
mov
fucomip
inc
into
xor
xor
pop
insb
jae
cmp
pop
outsb
pop
mov
push
inc
js
and
mov
push
stc
movsb
push
xlat
fs
push
jo
mov
scas
xchg
adc
call
sub
jo
mov
or
cmp
jg
leave
popa
scas
sbb
xchg
jg
jmp
inc
add
pop
cs
sub
incl
jmp
sub
pop
inc
mov
mov
jecxz
push
sub
addr16
je
mov
pop
insl
dec
pop
and
das
sbb
jl
mov
or
inc
push
lea
cwtl
cli
fsts
jecxz
inc
mov
dec
popa
ljmp
sbb
enter
sub
mov
psubb
aam
imul
pop
in
mov
iret
xor
jg
jg
adc
mov
int
ss
stos
xchg
sub
aaa
imul
cld
decl
inc
mov
lock
int
lea
mov
cs
sahf
inc
push
jae
test
adcb
dec
mov
dec
out
pop
in
incb
push
and
js
in
test
insb
pushf
rcrl
sbb
mov
add
mov
mov
ret
cli
and
cmpsb
add
ficoms
push
mov
lods
or
cmp
add
test
adc
pop
loopne
sbb
jl
lods
mov
pop
adc
inc
loop
out
xor
test
mov
out
not
cmp
cmp
es
cli
xor
sbb
jae
mov
adcb
pop
ret
mov
lock
sbb
fistpll
into
loopne
loope
fnstsw
pop
xor
mov
repz
mov
insb
pop
push
mov
rclb
aas
leave
push
inc
inc
aad
push
cmpsb
xor
push
cld
or
outsl
pop
fcmovu
ret
pop
jl
sub
cmp
js
xchg
push
dec
fstpl
push
inc
jecxz
pop
iret
push
lahf
inc
mov
cmp
mov
xchg
mov
jmp
ljmp
pop
sar
jg
jecxz
pop
jns
das
outsb
push
repnz
leave
mov
or
je
inc
fs
sub
mov
loope
cmp
add
out
add
jp
inc
leave
lret
mov
fmull
dec
xlat
jae
jge
xchg
mulb
insb
lods
js
cmp
mov
test
inc
mov
xchg
pop
fisttps
and
sub
loopne
jbe
xchg
jmp
scas
clc
es
movsl
xor
shlb
mov
pop
enter
mov
scas
dec
out
xchg
test
pop
and
in
rcll
and
mov
jl
sahf
arpl
add
dec
sub
in
adc
add
addb
lods
fistpll
enter
or
movsl
loope
pop
ja
mov
sub
lahf
test
xchg
add
xchg
lahf
mov
dec
push
push
fs
pop
repnz
and
xchg
pop
fxch
sub
mov
and
sbb
mov
imul
push
shr
sbb
and
sub
imul
push
loopne
sub
std
pusha
jnp
or
cmp
pusha
push
push
mov
lret
and
or
xlat
into
loope
and
nop
pop
mov
pushf
mov
xor
lahf
outsl
ljmp
out
aas
aas
jle
iret
xorl
aaa
sub
xchg
sbb
mov
rorb
aas
jecxz
repnz
lods
sub
int
rcrl
rcrl
jbe
mov
add
push
aas
iret
dec
and
test
arpl
jnp
jno
pop
daa
dec
bound
push
cmp
xchg
or
xor
dec
or
unpckhps
mov
xor
neg
scas
sbb
jmp
jmp
inc
jo
dec
mov
mov
or
xchg
mov
fucomp
xchg
es
pop
xchg
mov
xchg
xchg
movsl
mov
jg
dec
or
incl
cld
into
mov
jne
lret
push
mov
mov
add
dec
outsl
dec
or
repnz
xchg
aad
pop
aad
mov
xchg
xor
mov
add
cmpsl
xchg
mov
icebp
xlat
mov
or
bound
mov
jle
cli
mov
jle
cld
and
lret
add
in
shrb
mov
mov
cmpsl
in
std
and
dec
mov
ds
popa
adc
adc
cmp
xor
loop
shrl
repnz
pop
mov
dec
mov
inc
or
nop
ja
icebp
outsl
mov
sub
ja
stos
out
jns
fdivrs
xchg
test
sbb
mov
out
bswap
das
dec
push
imul
dec
pop
out
loop
cmpl
lods
or
jno
scas
aam
jge
jo
mov
xlat
roll
adc
aas
rcrb
out
mov
mov
int
in
sub
xchg
lods
sti
inc
inc
mov
xor
repnz
cmpb
and
cs
cmp
bound
push
nop
scas
cwtl
mov
push
flds
push
push
mov
sbb
pop
cld
inc
sbb
fdiv
stos
pop
test
or
and
out
out
adc
gs
jno
sub
add
lret
outsb
jecxz
jns
inc
mov
push
cli
mov
sub
call
int3
mov
jne
ja
sbb
cmp
out
and
sbb
out
cmpsb
push
lods
aad
adc
arpl
cld
ficoms
mov
xchg
pop
cmp
fsubs
xlat
rorb
xchg
rcrl
movsb
popf
xor
xchg
scas
cmp
sbb
aas
test
aaa
cmp
dec
or
es
jge
cmp
cmpsb
push
mov
fimull
scas
mov
pop
aaa
sarl
xchg
sbb
pushf
mov
sbb
cmp
and
sbb
mov
sbb
mov
pop
lods
fnstsw
pusha
sti
push
fistpl
sub
cmpsb
loopne
nop
mov
cmp
fcompl
mov
add
cld
xchg
jecxz
xor
hlt
cmp
aaa
icebp
out
mov
sar
scas
mov
ret
mov
mov
rorb
or
jg
fndisi(8087
xchg
pop
push
inc
cli
outsl
mov
jno
cmpb
mov
andl
mov
mov
or
pop
popa
aad
mov
nop
popa
push
and
out
lahf
enter
cmp
nop
fwait
es
in
xor
cmp
cmp
outsb
pop
adc
xor
test
sbb
pop
out
cmp
dec
movl
xor
test
jb
xor
cltd
pop
ljmp
mov
add
sub
movsl
or
mov
xchg
incl
mov
jecxz
aad
pop
fnsave
fisubs
sbb
dec
into
inc
dec
lock
mov
mov
hlt
cmp
sbb
hlt
dec
std
call
xor
arpl
scas
mov
lds
sub
xor
push
pushf
xorl
loope,pn
or
or
mov
iret
sbb
das
pop
dec
in
enter
add
imul
sbbl
stos
xor
hlt
and
mov
orb
jb
insl
addr16
xlat
repz
pop
push
aas
aad
push
mov
jns
ret
or
or
imulb
and
movsb
sub
popf
shr
adc
rclb
add
out
bound
jae
mov
repnz
or
test
jg
loop
adc
es
fstl
fsub
scas
nop
mov
in
out
sub
dec
cmpsb
das
sub
movsb
ds
sbb
pop
mov
icebp
pop
insb
sarb
xchg
cs
fiaddl
cmp
mov
mov
jae
jg
test
out
leave
jb
jb
dec
arpl
dec
mov
and
loope
js
mov
out
cmp
xchg
std
fwait
mov
scas
add
dec
fnstenv
popa
lea
call
loop
lahf
mov
cmp
lock
lcall
sbb
jno
lret
popa
fstps
sub
out
test
enter
into
mov
aaa
mov
pop
mov
xor
lea
jne
sub
fdivs
or
jge
pushf
test
sub
sub
lock
js
mov
in
adc
adc
or
std
fwait
rolb
or
imul
or
out
pop
jecxz
mov
jmp
nop
mov
lahf
mov
inc
ret
pop
insl
xchg
and
cmp
pusha
je
add
nop
ja
sub
out
loopne
cwtl
cmp
icebp
dec
lcall
lahf
mov
xchg
sbb
nop
jne
adc
dec
fldpi
sbb
movsl
and
cmpsl
imul
sub
inc
push
out
aad
xor
push
inc
leave
fistpll
lods
jns
cmp
scas
in
mul
xchg
and
popa
jae
insb
sub
dec
filds
loope
sub
mov
data16
cmp
jb
jmp
daa
adc
mov
stos
mov
jp
cmpsl
inc
push
push
aas
test
hlt
in
cltd
mov
and
test
lods
rcr
std
fwait
rcr
daa
aam
hlt
or
mov
faddl
xor
aaa
fcomp
dec
stc
jo
jmp
xor
aas
movsb
scas
out
stos
data16
cwtl
negl
dec
dec
and
outsb
jb
sbb
fs
lcall
insl
add
cmp
dec
xlat
push
notl
out
js
repz
cltd
in
mov
mov
sub
stc
aad
jbe
shlb
out
in
loope
loop
inc
xor
pop
ret
adc
dec
in
fcompl
sbb
dec
pop
clc
test
call
xor
popa
cmpsl
jno
jae
mov
movsl
aad
gs
jae
pop
jl
push
loopne
pusha
cmp
or
jge
mov
repz
jb
fnsave
inc
cmp
in
jl
add
lods
in
fdivr
dec
aaa
adc
push
pushf
pop
mov
sbb
aam
pop
sbb
ss
sbb
or
aam
das
mov
data16
sub
mov
dec
and
loope
mov
int3
lret
lret
xor
scas
out
prefetch
or
cmp
push
inc
js
xchg
jecxz
adc
jl
aas
mov
js
repnz
pop
adc
mov
mov
pop
xor
mov
lcall
pushf
add
mov
es
inc
insl
movsl
mulb
cmp
lds
out
jno
mov
xor
mov
inc
mov
sub
shl
push
pop
lds
jp
xchg
data16
js
mov
jl
mov
add
xor
popf
stos
jecxz
nop
filds
andl
les
test
inc
aaa
xor
inc
repnz
repz
cmp
ja
inc
jns
int3
lock
and
adc
jbe
push
push
fdiv
or
xchg
ds
aas
mov
or
outsb
mov
out
aam
and
jne
int
jge
add
push
mov
dec
xor
xorl
clc
and
je
mov
pop
mov
jmp
sub
or
or
in
jl
lahf
dec
jl
xor
mov
mov
mov
mov
ret
mov
sbb
sbb
dec
add
mov
mov
mov
ljmp
inc
jae
aam
mov
add
shrl
mov
jp
mov
add
call
insb
inc
leave
cmp
mov
push
fiadds
jo
xchg
jmp
repnz
xchg
add
or
icebp
sbb
sub
or
iret
xchg
mov
cli
negb
repnz
mov
testl
dec
addr16
mov
popa
jp
mov
cmp
pop
jb
std
data16
pop
and
inc
bound
xchg
pusha
and
add
shlb
or
punpcklbw
cltd
cmpsl
sbb
les
dec
sub
lret
lret
fiadds
shrb
out
jb
inc
xchg
andb
cmp
arpl
rcll
mov
dec
sub
or
xchg
shrb
mov
out
adc
add
dec
xor
in
cmpsl
adcb
and
aam
cmp
mov
lods
gs
mov
std
inc
movsb
add
inc
and
daa
cwtl
mov
data16
iret
mov
add
sbb
xchg
test
mov
pop
jl
xchg
sbb
jl
inc
cmpsb
jnp
mov
xlat
stos
sbb
in
jecxz
daa
mov
fsubl
mov
mov
and
aaa
ret
xchg
aam
adcb
stc
xchg
popa
loope
mov
dec
mov
mov
lcall
ret
cmp
push
jb
outsb
stos
push
jb
popa
push
jbe
mov
dec
jo
xchg
mov
fnstenv
daa
loop
xor
cmpsb
and
por
dec
dec
lea
fbstp
push
data16
mov
push
loopne
inc
negl
pop
sub
push
jmp
or
cmpsl
or
addr16
xchg
sub
push
cld
loopne
lret
imul
stos
xor
sbb
in
mov
pop
push
sbb
jmp
push
cltd
popf
out
outsb
insb
mov
test
out
sub
or
add
aas
push
sbb
divb
scas
or
mov
add
adc
fs
sub
imul
lea
fcompl
jo
sbb
mov
xchg
dec
aam
scas
mov
stc
xchg
and
into
idivl
xchg
push
adc
loopne
xor
in
ret
stc
inc
dec
pop
push
dec
and
scas
mov
push
test
fs
pop
in
repnz
cmpsb
outsl
or
lods
sbb
mov
mov
leave
and
scas
cmp
xchg
pop
lahf
push
jbe
add
adc
andb
rcl
inc
xor
cmp
aas
sahf
leave
pusha
jae
inc
dec
jnp
aaa
je
xchg
addr16
jae
push
adc
cmpsl
insl
es
pop
pop
mov
mov
push
and
idiv
daa
pop
xor
mov
lock
adc
mov
movsb
popa
pop
lret
lret
xlat
xchg
add
push
aam
loop
jbe
ja
lods
mov
arpl
aaa
mov
and
and
cmpsl
sahf
test
mov
and
jae
fs
nop
push
in
or
popl
aas
popa
mov
les
push
mov
xor
and
pop
loop
lret
mov
sbb
mov
insl
sbb
jb
in
mov
pop
cmpsl
push
shr
jg
pop
scas
mov
sub
xchg
mov
fimull
xchg
das
jp
arpl
push
das
dec
loop
lods
lahf
iret
rol
xor
sub
jbe
jb
fidivl
repnz
inc
xor
mov
dec
jnp
popa
xor
pop
imul
xchg
adc
or
dec
stc
add
inc
sti
pushf
loope
mov
adc
mov
mov
pop
pop
aad
xor
adc
adc
das
mov
sub
and
fdiv
mov
sbb
adc
fs
or
rorl
push
movsb
jo
push
sub
in
push
inc
pop
lods
jbe
jle
jp
or
jb
fistl
push
aad
lcall
xchg
mov
jmp
aam
insl
cmp
negb
add
nop
jl
sub
add
pop
scas
jecxz
into
popf
mov
mov
add
mov
jecxz
and
std
push
repz
add
leavew
add
in
add
dec
jle
sahf
je
xchg
push
popf
loope
imul
mov
sub
mov
mov
xor
xchg
jno
fs
gs
test
jnp
xlat
mov
and
add
rcr
ja
sub
push
cmpsl
xchg
lds
jg
scas
ror
repz
push
jnp
pop
hlt
orl
mov
adc
cmp
push
pop
xchg
mov
inc
cmp
into
jb
add
je
sub
addl
fmuls
xor
push
stos
dec
add
int
outsb
pop
jae
inc
cmc
rol
lret
mov
sahf
loopne
add
push
mov
xchg
repz
faddl
inc
pop
js
jae
mov
lea
jne
nop
inc
mov
mov
ret
out
ficoms
out
jmp
mov
aam
jmp
and
imulb
xchg
rol
push
pop
fcom
ficoms
cmp
rorl
repnz
jnp
in
jbe
pop
lea
shlb
inc
inc
mov
cltd
push
test
scas
outsl
jmp
insl
mov
pop
dec
icebp
pop
mov
int
xchg
fs
int3
call
cmp
mov
push
hlt
mov
pop
imul
mov
push
push
repnz
or
out
shl
dec
cmp
jmp
push
movsl
cmc
dec
loopne
lahf
arpl
js
cltd
ljmp
cld
data16
jno
inc
cmp
popa
es
push
dec
and
mov
test
dec
leave
mov
cmp
arpl
std
adc
icebp
rcll
loop
pushf
aas
xor
insl
sbb
pop
mov
push
test
xchg
xlat
sbb
nop
push
cmp
jp
mov
xchg
fldcw
repnz
fsub
sbb
mov
popa
cmp
and
jge
enter
std
fwait
insb
mov
pop
lock
sarl
xor
lcall
adc
xchg
jb
mov
test
sbb
pop
push
jl
in
xchg
mov
add
sahf
jno
vpminsw
lahf
gs
dec
sar
push
mov
imul
enter
push
nop
push
loopne
inc
inc
out
icebp
or
adc
push
jg
call
bound
or
adc
imul
leave
mov
cmp
fisttps
loope
and
daa
leave
mov
inc
xchg
adc
or
test
int
popa
xlat
adc
ljmp
out
and
mov
add
mov
sub
bnd
jge
cmp
push
push
dec
sbb
test
jg
iret
inc
int
imul
mov
xchg
jmp
ss
jp
jnp
shrl
int3
jmp
jae
out
inc
pop
ficoml
sar
sub
das
out
xor
mov
push
mov
imul
cli
mov
rcll
dec
hlt
adc
mov
cs
sahf
bound
mov
cmpsb
sahf
jne
mov
cltd
rcrb
cmpsb
inc
in
int
inc
push
insl
mov
mov
xor
push
xor
sbb
lds
xorb
flds
ja
pop
dec
ret
aaa
fsubrl
adc
mov
out
jb
clc
cmp
push
adc
fwait
mov
les
add
xchg
popf
dec
sub
data16
repnz
shll
xchg
stos
aad
adc
fidivs
inc
cmp
add
add
push
dec
sarl
inc
ret
rcrl
ds
icebp
xor
or
fwait
push
xchg
ret
sti
leave
testb
push
sahf
sbb
loopne
pop
jl
dec
cmp
ljmp
cli
inc
int
jp
push
pop
iret
insl
hlt
mov
insl
xchg
mov
dec
mov
insb
sbb
push
ljmp
outsb
jno
jl
addr16
sbb
jae
sbb
mov
adc
sub
push
xchg
mov
shlb
test
icebp
add
adc
mov
add
loop
cli
or
cld
push
sbb
lahf
test
push
and
lock
adc
and
fdivrs
ret
mov
out
dec
or
adc
adc
inc
es
push
out
xchg
movsl
mov
sbb
jno
push
aaa
sahf
cmc
mov
sub
xchg
test
or
lcall
imul
into
lds
mov
mov
mov
fiaddl
xchg
into
dec
dec
inc
incb
popf
loopne,pt
fistps
subb
mov
dec
push
add
fimuls
jne
adc
not
daa
iret
and
or
loop
pop
mov
push
imul
aad
jbe
inc
push
cmp
push
aam
js
xchg
mov
adc
mov
xchg
out
sbb
jg
push
inc
out
xor
lock
mov
sahf
mov
jne
mov
lcall
adc
push
and
jmp
adc
scas
je
and
hlt
dec
arpl
mov
mov
bound
sub
jb
out
mov
xchg
shll
iret
lret
push
push
dec
outsb
mov
rorl
ret
xchg
mov
pop
jmp
pop
cmp
mov
xchg
sarl
inc
arpl
xor
movsl
mov
rcr
push
cmp
movsb
std
das
push
cld
aaa
push
sarl
imul
xchg
idivb
jbe
stos
xchg
or
pop
sbb
rolb
mov
xor
push
std
cmp
cmpsl
cmp
sbb
mov
mov
xor
movsl
mov
jnp
jno
mov
aam
or
iret
mov
notb
pop
xchg
pop
gs
push
stos
lret
inc
arpl
dec
cmp
shlb
and
shlb
push
push
nop
sbb
outsb
int3
push
push
sub
in
popa
pusha
mov
adc
lcall
sarb
movsb
ret
or
cmc
adc
cmp
sbb
inc
aas
jno
sub
push
shrl
or
inc
rcrl
add
pop
out
std
cmp
mov
pop
jge
sbb
adc
mov
xor
dec
loope
cwtl
mov
jecxz
rcrb
les
inc
mov
inc
or
jge
jns
pop
cs
xchg
dec
mov
pop
sub
lods
jns
mov
loope
sub
mov
aam
popf
imul
pop
fcmovb
mov
jne
lods
push
add
sbb
adcb
mov
iret
or
scas
xor
ret
sbb
cmp
rcrb
and
push
and
leave
test
add
fstpt
sbb
dec
stc
and
cwtl
sbbb
stos
push
mov
repnz
mov
push
insb
dec
pusha
cmp
daa
jnp
cli
jbe
xchg
fdivs
popa
add
leave
stos
lahf
cwtl
add
aas
scas
pop
dec
ds
push
add
or
pop
movsl
hlt
ret
inc
lahf
sarb
jbe
push
dec
lea
lcall
and
xchg
or
fwait
addr16
mov
jbe,pn
mov
sub
repz
jnp
add
in
sbb
mov
aas
sub
inc
mov
subl
daa
pop
arpl
push
xor
les
rcll
pushf
sub
xchg
pop
push
mov
incl
pop
fwait
xchg
and
pop
mov
mov
das
push
andl
mov
jmp
jae
aad
sbb
jecxz
push
sub
sti
jg
out
jp
mov
add
push
inc
fs
push
dec
mov
movsb
lods
mov
data16
enter
shlb
jbe
es
daa
push
and
fcoml
jle
je
pop
fcomps
jno
and
cltd
pushf
jnp
outsl
addb
inc
pop
std
aam
std
rol
and
lods
loopne
and
cli
loopne
mov
pop
scas
cmp
or
xor
xlat
push
inc
sub
add
sti
pop
icebp
push
adc
cmp
in
and
fwait
and
dec
rolb
mov
fldl2t
dec
fstl
push
sarl
xchg
movsb
cmp
fcomps
pop
ds
mov
mov
in
cmp
sbb
out
cltd
clc
sub
ss
pop
mov
testb
ret
mov
call
stos
mov
and
es
jecxz
jo
add
xor
orl
fdivs
jno
mov
and
pop
fisubrl
das
call
fisttpll
dec
fdivrs
sbb
lods
ret
xchg
pop
scas
adc
sub
daa
fs
pop
imul
int
mov
and
and
ds
stc
arpl
daa
pop
jmp
add
lds
inc
sbb
flds
sarb
mov
in
push
sbb
xchg
adc
out
pop
jns
sub
adc
lods
pop
pop
sbb
std
mov
adc
sub
in
and
pop
fnsaves
sbbl
xchg
pop
or
xchg
lret
movsl
leave
cmp
mov
ds
mov
cli
xor
mov
push
and
mov
push
and
sbb
sbb
pop
frstor
in
movl
sbb
mov
cmp
sub
into
ret
in
xchg
out
or
push
insl
xchg
dec
cmp
sbb
stos
nop
shrb
je
pop
jo
fs
add
or
mov
sub
int
out
leave
xor
jnp
cmp
mov
mov
scas
movsl
jne
jl
aam
mov
inc
sbb
mov
mov
cltd
ljmp
jmp
imul
mov
or
mov
lret
and
lds
ret
dec
mov
lea
cmp
push
in
cmpl
loopne
pop
push
cmp
outsl
mov
nop
movsb
mov
mov
lds
dec
mov
ljmp
xchg
mov
adc
in
mov
fs
push
push
clc
stos
nop
or
xchg
add
ljmp
shrl
pop
insl
push
adc
dec
cmp
js
in
popa
push
cli
pop
mov
ret
push
jnp
js
pop
inc
push
pop
cmp
aaa
mov
mov
cmp
test
push
pop
ret
int
mov
lcall
push
adc
mov
xorb
int
mov
bound
cld
in
pop
scas
shr
fcomps
roll
sbb
push
sbb
pop
and
js
mov
stc
inc
mov
sbb
std
push
aad
es
shll
xchg
pop
xor
loopne
out
sub
inc
or
jnp
mov
pusha
xchg
scas
sbb
in
inc
js
and
iret
push
loop
and
cmpsl
cmp
push
sub
mov
mov
sub
sti
call
mov
loopne
push
mov
pusha
jno
test
sarl
inc
imul
mov
inc
mov
dec
add
mov
ljmp
aaa
xor
test
xchg
push
das
pop
jle
push
out
outsb
xchg
jbe
lret
out
cmp
jo
and
adc
shlw
dec
popf
rcll
dec
loopne
enter
cmpsb
adc
jno
adc
pop
stos
fs
cmpsb
fmull
sahf
mov
cmp
cltd
cld
jp
sbb
cmc
adc
dec
clc
mov
scas
jl
xchg
xlat
mov
and
lods
dec
cmp
fistpl
sub
pop
inc
movsl
sbb
sub
popf
into
mov
aaa
shrb
push
mov
or
sub
or
lret
push
mov
and
inc
mov
ljmp
in
aas
ret
sbb
mov
mov
int
jg
sbb
repnz
lahf
xor
xchg
mov
mov
add
test
idiv
sub
dec
xorb
mov
lods
int3
addl
bound
mov
jbe
add
sub
mov
shlb
lds
inc
fwait
xor
lods
sub
into
adc
icebp
movb
mov
mov
outsb
rolb
dec
pusha
mov
daa
and
std
cmp
pop
lock
pop
dec
fwait
or
int3
push
and
daa
mov
lods
xchg
xor
mov
mov
imul
sub
cmp
popf
ja
aas
or
push
retw
jl
popf
push
fldt
cmp
or
or
lea
iret
mulb
pop
into
cmp
arpl
cli
mov
mov
pop
cli
aas
dec
mov
push
ret
pusha
or
cmp
je
mov
lods
movsb
xlat
and
movsb
faddl
outsb
div
sub
test
in
push
mov
clc
or
gs
sub
jecxz
dec
cltd
jnp
sbb
ljmp
or
mov
inc
and
sarl
cmp
cli
js
and
jle
cli
mov
scas
and
mov
pop
xor
test
sti
jp
mov
loope
inc
or
ds
jecxz
shr
inc
fstl
out
ret
dec
cmp
js
cli
loopne
cmp
lret
lock
leave
mov
pop
push
ja
mov
ds
add
loope
out
leave
fadd
sbb
mov
sub
cs
out
movsl
adc
lcall
int
xchg
mov
sbb
std
jl
test
xchg
bound
dec
jno
scas
jecxz
adc
pusha
call
int3
roll
xor
shll
jg
test
and
mov
ss
xchg
mov
or
xor
adc
pop
icebp
dec
ret
inc
or
mov
test
ss
and
xlat
and
js
or
jge
shlb
mov
mov
sub
scas
idivb
xchg
sbb
pop
pop
jb
mov
sbb
dec
imul
adc
inc
jle
insb
add
loop
mov
xor
pop
cmp
and
lock
flds
imul
pop
or
fwait
inc
cmp
sub
push
xlat
jge
add
shl
sub
cmp
mov
add
jmp
cmp
sbbl
xchg
mov
sbb
cmp
mov
jg
xor
pop
mov
jmp
mov
pushf
pop
sti
cs
mov
scas
daa
lods
cmp
cmp
mov
add
fiadds
cli
mulb
outsb
popa
repnz
and
std
jmp
dec
shl
call
out
cmpb
loopne
xor
fdiv
jle
aam
enter
fstps
xchg
ja
mov
inc
xlat
jg
dec
xorl
pushf
xor
pop
mov
pop
test
sbb
ds
jp
pop
xor
ret
fsubs
std
test
push
cli
pop
add
push
pop
ret
hlt
adcl
lods
sahf
mov
loopne
flds
negl
bound
xchg
daa
dec
mov
adc
push
mov
ja
lods
add
cltd
xchg
cmp
mov
into
aas
inc
outsl
add
aad
es
gs
lret
mov
push
sarl
push
repnz
aas
xor
jbe
lock
xchg
adc
hlt
ret
gs
imul
mov
insb
in
and
repz
and
mov
mov
mov
pop
xchg
mov
scas
hlt
shrl
dec
push
test
mov
repnz
sub
aam
daa
sbb
mov
jne
mov
push
cld
fnstcw
mov
jp
fwait
test
test
and
sub
dec
out
std
push
cs
and
pop
imul
jg
mov
ljmp
xor
mov
fmull
in
mov
lret
test
dec
pop
push
test
mov
int
mov
xchg
ljmp
xchg
fildl
jb
sbb
sub
jmp
inc
jmp
mov
jae
add
lahf
pushf
std
xchg
lea
mov
pop
dec
push
pop
jo
add
and
mov
test
mov
mov
sar
test
add
movsl
cmc
nop
dec
fdivl
dec
into
adcb
xchg
std
ss
jg
insl
je
lds
mov
cmpsb
insb
loope
insb
add
pop
dec
imulb
mov
adc
out
sub
and
and
jns
mov
rolb
add
test
inc
mov
lods
jae
subl
repnz
ljmp
mov
fldt
sub
mov
in
fbstp
or
jmp
sbb
mov
in
stc
aaa
aaa
lcall
out
cmp
fbstp
subl
stc
jo
jae
push
add
fimull
mov
into
or
test
jne
xor
into
insb
popf
ret
xchg
in
cmovno
int
mov
lods
xor
jge
sub
sbb
vmovntpd
stos
lock
dec
xor
add
pop
mov
daa
xor
lds
aas
test
iret
push
test
jmp
push
sbb
repnz
mov
repnz
mov
test
dec
inc
mov
sbb
sub
in
fisttps
inc
xchg
jmp
popa
mov
sub
mov
movsb
mov
pop
adc
lods
mov
enter
mov
faddp
movsl
and
mov
pop
fnsetpm(287
add
adc
iret
adc
jno
fildl
icebp
test
out
mov
stos
loopne
lahf
pop
add
mov
int
lock
jb
cli
add
dec
lods
jno
lret
lods
cmp
lock
mov
push
sub
mov
cmpsb
cli
in
repnz
ror
in
and
popa
mov
sbbl
lret
notl
call
jmp
xchg
dec
push
out
out
lock
in
cmpsl
sub
jnp
pop
pop
das
dec
or
rol
aaa
shlb
mov
pop
xchg
xchg
sti
xor
lods
pop
cmovo
shl
mov
lock
insl
inc
cmp
enter
cmp
inc
popa
pop
scas
gs
pop
hlt
sahf
or
or
xchg
jp
jno
outsb
xchg
sbb
jecxz
sahf
jecxz
jb
in
adc
ficoml
cwtl
jmp
leave
push
adc
cmpsb
jne
adc
jle
rcrb
ret
jecxz
ficoms
sub
push
js
ficoml
cli
xchg
movsl
lea
add
mov
jnp
cmc
cmpsb
pop
popf
sbb
inc
aas
incb
fildll
pop
ficompl
inc
inc
and
je
add
orl
pop
or
mov
dec
sbb
sbb
jecxz
xor
lods
xchg
in
jns
jmp
mov
push
cwtl
mov
xchg
xchg
and
andl
insb
daa
into
pop
adc
test
jp
add
push
icebp
sarb
fbstp
sub
jp
jne
testl
das
sbb
cmp
cs
mov
and
cmp
repnz
cmp
jae
xor
cs
pop
subl
mov
jmp
sahf
cli
pop
sar
cmp
sysret
sub
ss
bound
sub
mov
in
mov
cmp
ja
add
std
call
jg
xor
dec
mov
xchg
cmp
jb
imulb
push
add
push
aas
lahf
cmp
test
shll
cli
sub
leave
in
leave
xchg
imul
jecxz
loope
cmp
cli
cld
rorb
call
xchg
rorl
in
jae
je
lahf
inc
cmpb
jge
frstor
outsb
aaa
xlat
mov
sbb
arpl
mov
iret
sbb
cmp
pop
xor
lock
mov
popa
stc
sbb
dec
hlt
fs
sbb
in
dec
jle
fwait
inc
les
in
and
fisubrs
mov
jne
sahf
dec
aam
in
ljmp
cmpsl
jae
xor
xlat
cmpb
xchg
es
xor
call
push
fcomip
arpl
rcll
loop
jp
je
fidivs
pop
jb
les
xchg
jne
xchg
cld
jo
orb
pop
pop
gs
or
jmp
add
icebp
mov
and
pop
sub
rorb
or
int3
dec
stos
mov
sub
je
mov
jp
jne
adc
out
loope
icebp
push
das
dec
adc
mov
inc
sbb
imul
jecxz
enter
das
inc
push
mov
cltd
mov
sub
inc
add
daa
xchg
mov
mov
loopne
stc
jno
call
icebp
dec
mov
push
sub
movsl
add
dec
mov
loop
fnstsw
mov
sub
pop
sbb
and
lahf
fstps
push
ljmp
push
ret
or
int
mov
imul
mov
insl
movsb
in
js
fnsave
test
lret
xor
xchg
stos
cli
sahf
mov
adc
outsb
call
ret
xchg
fdivr
pop
sbb
nop
loop
inc
lret
scas
jg
sti
decb
pop
jne
cmp
dec
leave
jmp
dec
and
jg
sbb
idiv
add
or
mov
xchg
adc
fwait
sti
push
mov
push
add
xor
or
not
add
cmp
unpckhps
aam
and
and
sub
or
push
mov
jae
and
add
xor
cmp
decb
inc
jl
fbld
hlt
mov
mov
xchg
filds
jns
sbb
pusha
jb
scas
decl
dec
mov
mov
cmp
mov
sub
out
or
cmpsl
mov
mov
es
jl
push
inc
sahf
mov
xchg
jp
add
adc
out
popa
pop
sarb
add
insb
mov
ds
std
call
imul
sub
sbb
cmp
xlat
outsb
std
pop
mov
fwait
aam
jnp
mov
inc
xchg
pop
mov
jmp
pop
and
popf
mov
arpl
inc
loopne
lcall
pop
aaa
mov
leave
in
and
pop
push
mov
fimull
popa
inc
jb
xor
imul
pop
ja
dec
cmp
pop
data16
or
lahf
or
lret
cmp
pop
and
mov
enter
push
in
adc
int3
jmp
mov
sub
inc
cli
push
add
inc
adc
inc
add
popa
pslld
mov
test
fnstenv
jp
sub
pop
xchg
mov
lock
xchg
test
imul
mov
cmp
outsb
mov
fisubl
fidivl
add
and
pop
fistl
sub
push
std
insl
out
mov
pop
lock
cmpsb
testb
das
and
mov
xor
xor
clc
push
popf
test
fwait
sub
sbb
xorb
xor
mov
cmc
xchg
cwtl
sarb
xchg
jns
es
mov
ljmp
and
cmp
cmc
lahf
inc
mov
sbb
inc
inc
sub
sbb
push
cld
cmp
and
inc
pop
adc
in
inc
test
or
mov
int3
sbb
xchg
sub
mov
mov
or
xor
push
sahf
pop
stos
mov
xchg
xorb
sub
sbb
lods
push
cmp
rolb
push
mov
lahf
adcl
xchg
out
xchg
mov
imul
pusha
inc
sbb
scas
add
leave
mov
pop
ja
cmp
loop
push
test
out
inc
dec
cltd
bound
repz
loope
ss
or
jae
jmp
push
ret
data16
cmp
mov
xorb
in
clc
ja
cmp
xchg
fsubs
and
jl
sub
aam
scas
pop
and
push
pushl
pop
cltd
fisubrl
mov
popa
lea
sbb
cltd
ret
push
mov
mov
push
das
mov
sbb
aad
push
xchg
dec
sbb
jns
dec
add
cmp
test
inc
cli
push
enter
mov
lcall
fcomip
push
rolb
adc
mov
xor
pusha
and
xor
fidivl
cmp
sahf
or
push
mov
ss
pop
subl
shl
lods
jbe
inc
dec
ljmp
fnstenv
mov
push
mov
enter
pop
cmp
sahf
stos
fnstsw
pop
flds
xor
gs
xchg
inc
jnp
mov
test
test
cmpsb
lods
cmp
andb
test
fnsave
xchg
lock
in
xor
fnstcw
jne
test
cmpsl
out
mov
adc
jmp
bound
repz
lods
pop
fisttpll
mov
test
pushf
fists
scas
les
pop
out
pop
inc
push
cld
sbb
dec
xchg
jo
mov
cmp
or
inc
rolb
and
xchg
pop
leave
xchg
mov
clc
push
push
jmp
jl
pop
mov
rcr
mov
or
loope
xchg
mov
push
ret
test
xchg
xor
mov
rorl
push
call
das
std
orl
popf
mov
int
inc
push
outsb
fcmovne
mov
call
jmp
add
sub
hlt
sbb
or
or
shrb
cld
movsb
shrl
cmpsl
jo
popa
adc
cmp
push
arpl
icebp
sub
or
subb
and
push
in
fildll
aam
inc
or
lods
inc
mov
hlt
jle
pop
jno
mov
data16
pop
pop
fcomps
lret
imul
rcll
int
adc
sti
dec
fxch
test
stos
outsl
mov
rcll
test
jo
mov
dec
lea
decl
repnz
out
xorl
xchg
js
ret
or
data16
xchg
xor
shr
mov
ret
mov
lret
shl
cmp
adc
lret
out
pop
xor
or
sbb
add
into
xor
rorb
lret
pop
imul
clc
cmpsb
push
jmp
cmp
icebp
jg
mov
sub
mov
fsin
pop
ret
xchg
sbb
std
add
nop
dec
loopne
sbb
sbbb
imul
push
adcb
je
sub
lea
notl
imul
adcl
vpaddsw
inc
push
dec
sub
inc
dec
sub
mov
in
movsb
cmp
xor
mov
daa
sub
insb
pop
lret
jb
dec
mov
repnz
fcoms
mov
jmp
push
push
sbb
xchg
stos
xor
push
dec
add
out
dec
jne
mov
mov
lret
mov
out
xor
cmp
shll
mov
cmpsb
cltd
das
jbe
push
ret
push
mov
xorb
repz
or
ljmp
nop
repz
iret
dec
iret
inc
mov
mov
inc
ja
sub
pop
xor
daa
sbb
pop
push
decl
sub
flds
addb
pusha
rep
xor
jae
xor
dec
xor
call
jecxz
popf
cmp
dec
scas
scas
popa
ja
mov
jmp
repnz
sarb
mov
jecxz
jge
scas
mov
mov
jge
outsl
sub
es
inc
fldt
hlt
jbe
out
inc
nop
ret
inc
lret
xor
stos
sub
pop
jle
test
pop
push
mov
idivl
pushf
jl
jnp
out
mov
jge
adc
jb
and
inc
outsb
das
out
loop
lret
xchg
repnz
lods
sbb
sbb
lret
mov
pop
add
insl
stos
pop
sti
push
add
in
out
mov
push
jae
and
jecxz
mov
lcall
andb
sbb
xlat
add
cmp
hlt
mov
mov
xchg
mov
sub
or
jp
sahf
or
or
pop
call
das
dec
or
fnstsw
mov
or
frstor
ds
add
adc
test
dec
inc
lods
incb
and
arpl
or
pop
shl
push
dec
sub
ffree
jno
sahf
cmp
mov
aad
lea
cmpsl
jo
ret
and
out
cmc
adc
and
nop
into
outsb
data16
cmp
mov
je
pop
lcall
imul
adc
jecxz
stos
xchg
xor
inc
pop
adc
fcomi
add
or
push
out
add
pop
adc
sbbb
pop
sbb
mov
push
pop
scas
jge
test
movl
push
pop
xchg
faddl
xor
mov
and
inc
call
adc
mov
add
popf
daa
cmpsl
pop
xchg
mov
addb
mov
sub
cmp
mov
test
jne
test
stos
push
pop
inc
idiv
pop
sbb
jg
xor
nop
xchg
stos
or
ret
push
lods
test
sbb
ficompl
clc
adc
cmp
lods
sbb
push
popa
daa
push
jns
in
xchg
xlat
ret
mov
and
mov
or
test
bound
cmp
idivl
cltd
mov
xlat
je
fsubr
and
fucomip
negl
mov
std
jg
out
push
xor
add
cmp
jne
dec
mov
xchg
mov
push
or
clc
xchg
mov
pop
jno
dec
or
fstl
bound
out
cmp
mov
je
repz
xchg
out
xor
xor
mov
scas
aad
dec
lcall
stos
faddl
cld
dec
mov
push
push
jb
addr16
mov
into
mov
int
fwait
es
into
cwtl
mov
mov
mov
sub
jp
jns
in
int3
push
inc
mov
push
inc
pop
fistpll
mov
sub
sub
int3
push
cwtl
jns
adc
xor
inc
push
jmp
out
pusha
xlat
xchg
in
pushl
add
data16
push
cmpsb
add
xorl
lock
sub
das
movsb
adc
imul
sub
cmp
mov
pop
mov
inc
cmp
xchg
mov
mov
scas
adc
decl
adc
in
sbb
jae
out
pop
clc
add
orl
iret
mov
fisttps
inc
nop
rcrb
movsl
btc
sub
mov
xchg
sbb
hlt
aas
sbb
clc
pop
sbb
mov
inc
push
enter
in
repnz
imul
sbb
xchg
jge
cld
mov
xchg
je
sub
cmp
mov
cmc
pop
mov
xchg
arpl
cli
lods
jecxz,pn
xor
aam
nop
das
mov
cli
sbb
ret
push
pop
subl
inc
js
leave
outsb
cwtl
xor
rcl
daa
aaa
xchg
jmp
xchg
sti
mov
arpl
test
jge
cmp
movaps
xchg
xchg
sbb
iret
cmp
gs
shrl
xorl
mov
sub
rcll
in
dec
jo
jb
add
mov
cmp
push
icebp
jl
push
repnz
popa
jl
cwtl
lods
and
fmuls
xchg
repnz
rcrl
pop
jae,pt
rcll
lea
je
inc
mov
xchg
cmp
mov
pop
imul
mov
cmp
pop
jecxz
jl
lea
loop
or
mov
pop
jns
mov
mov
push
xlat
or
adc
push
jno
loopne
out
pop
leave
fnsave
cli
ret
cli
mov
sbbl
dec
jb
lret
xor
push
xchg
orb
inc
inc
sub
into
xchg
cmp
hlt
mov
loope
mov
jmp
xchg
aam
cmc
pop
push
mov
xchg
ret
push
xor
je
adc
out
lea
mov
test
fmuls
push
mov
sbb
push
mov
sbb
mov
add
jae
sub
out
push
popf
xor
jb
sub
pop
inc
cmp
add
popa
leave
out
pop
cwtl
movsb
pop
mov
nop
xchg
mov
xlat
cmpb
mov
das
adc
mov
cmp
rolb
notl
xchg
in
dec
sub
mov
scas
add
dec
jae
push
mov
push
add
cltd
ficompl
lods
ja
movsl
ret
xchg
or
stos
fisubrs
fldl
loope
xlat
mov
lods
mov
mov
lret
insb
inc
push
push
xchg
es
dec
jmp
arpl
clc
popf
cmp
pop
leave
pop
jmp
ljmp
add
jo
and
addr16
data16
lock
mov
lret
push
jno
movsl
and
mov
push
mov
pusha
pop
cmc
cmpsl
mov
push
jl
push
mov
push
inc
xor
insb
add
imul
add
clc
test
cli
stos
jmp
mov
push
out
and
insl
pop
icebp
loope
xor
push
dec
mov
addr16
in
aaa
aaa
dec
or
loop
jge
push
js
mov
xlat
adc
inc
adc
xchg
into
dec
dec
and
sar
gs
jl
rorl
cmp
insl
cltd
push
push
mov
lcall
push
xchg
adc
dec
adc
jno
ds
hlt
push
test
fs
insb
mov
xor
or
loop
test
enter
fdivl
test
pushl
out
int3
dec
mov
pop
or
push
sahf
out
add
jg
data16
xlat
cwtl
out
stos
xor
sbb
lahf
sarl
inc
fidivrl
push
cmp
cwtl
mov
mov
test
mov
addl
fcompl
mov
or
rcll
jp
jecxz
push
repz
add
push
or
outsb
loope
jbe
lock
lea
mov
adc
and
jae
mov
popa
xchg
ljmp
in
stos
and
jl
sbb
ljmp
inc
mov
sub
in
or
rcll
addb
jl
lds
fsts
jge
or
sti
cmp
data16
iret
sbb
mov
cmpsl
ficoml
and
inc
ret
lahf
popa
ja
imul
jb
mov
gs
and
test
enter
jle
sbb
ret
inc
cmp
adc
push
mov
sub
xchg
mov
cli
adc
cwtl
arpl
jge
nop
data16
fcoms
sahf
dec
pop
dec
test
pop
or
xchg
cs
dec
or
cld
sub
sbb
mov
stos
sbb
xchg
sti
test
xor
or
push
jle
fldln2
inc
or
dec
jp
loop
lea
push
fdivl
rcr
loopne
add
sti
test
xchg
inc
mov
out
das
aad
adc
scas
lret
push
adc
xchg
outsb
cs
mov
dec
jbe
inc
movsl
cmp
js
add
ror
lods
out
ljmp
and
fwait
sbb
cmc
pop
bound
push
dec
or
xchg
stos
jp
rclb
add
pop
mov
enter
out
push
cmc
inc
push
pop
sahf
mov
jp
int3
out
jbe
cmp
adc
lcall
outsb
mov
icebp
mov
hlt
mov
dec
push
cmp
cmp
dec
jne
outsl
gs
push
cmp
adc
mov
push
xor
push
mov
push
fistpl
das
in
push
mov
dec
jge
into
inc
jg
jge
xchg
pop
lret
stos
pop
fs
pop
repz
jne
inc
xchg
nop
adc
cltd
pop
mov
jno
inc
test
lods
push
jns
lods
pop
cmpsb
test
adc
jl
inc
sbb
nop
sbbb
xchg
sbb
imul
fnstenv
push
and
dec
inc
add
cmpsb
xchg
shlb
add
pop
in
lahf
in
mov
lods
push
inc
into
mov
imul
inc
dec
stc
popa
lds
data16
push
xchg
pop
jl
dec
movsb
and
jge
xchg
sbb
bound
vmread
jns
mov
or
or
lcall
pushf
sub
mull
shrl
data16
adc
xorb
pop
cmp
into
enter
shll
jne
mov
fstl
cld
and
ja,pt
bound
subb
mov
fnstsw
xor
out
aaa
cmc
jns
dec
add
aad
xor
test
hlt
xchg
ljmp
ja
sub
and
jae
cmpsl
cwtl
dec
inc
rorb
cmpsb
push
mov
dec
add
imul
mov
fwait
outsl
xchg
mov
xor
es
aaa
pop
push
dec
movsl
or
leave
xlat
call
lret
push
push
sti
loop
test
jns
in
pop
mov
inc
shlb
dec
dec
push
adc
cmp
mov
add
repz
pop
mov
or
es
daa
push
jge
inc
and
cld
cmp
sbb
int3
dec
fdivrp
fldpi
cmp
out
rolb
aam
mov
call
or
sahf
fnstsw
lock
hlt
fcoms
sbb
add
or
mov
push
loop
stos
cmpsb
dec
jmp
ror
push
cld
lea
cmpsl
push
cld
mov
movsl
jl
lods
jnp
xchg
adc
cmp
jmp
mov
adc
dec
shrb
aam
xor
mov
int
push
sbb
leave
push
std
adc
incl
sub
inc
rcrb
stc
xor
mov
push
cld
jg
gs
dec
pop
or
mov
or
gs
enter
mov
fdivr
fwait
insb
jbe
push
sti
sbb
xor
mov
test
incb
cmp
lea
mov
out
push
pop
shrb
mov
add
sub
cmp
fists
clc
push
xchg
loop
jg
sub
lods
add
add
mov
xor
repnz
imulb
fcomi
ret
popa
adc
xchg
dec
pop
adc
push
xchg
sub
sub
repnz
stos
je
mov
rclb
and
and
mov
lret
test
mov
push
aam
jmp
and
add
xchg
dec
int3
mov
push
repnz
mov
jecxz
dec
jp
add
arpl
inc
mov
mov
lcall
into
lcall
xchg
add
and
icebp
into
sbb
imul
loop
repnz
mov
pop
ja
mov
mov
sti
mov
mov
jg
pcmpgtb
test
xchg
xor
xlat
fistpll
jle
flds
jns
movsl
jecxz
js
dec
fs
inc
insb
mov
pop
cmp
roll
cld
test
outsl
lock
aad
mov
jae
iret
pop
push
rcrl
adc
test
sub
dec
outsl
inc
sti
mov
mov
sbb
fdiv
or
ljmp
and
repnz
lods
lcall
lcall
inc
xchg
shll
pop
fisttpl
aas
add
fs
sub
in
xor
mov
and
lods
sbb
adc
sti
mov
add
and
nop
add
mov
push
xchg
sub
lock
inc
in
mov
arpl
cmp
inc
xchg
sbb
xchg
mulb
mov
imul
outsl
imul
xchg
add
ja
mov
nop
insb
call
or
xor
lods
cmc
popf
icebp
xor
and
shrl
xor
into
cmpsb
lock
push
inc
fs
jecxz
rcrb
push
mov
sub
mov
sub
cmp
fdivs
cltd
es
test
in
ret
pop
subb
cmp
mov
jo
add
in
jl
mov
rcll
sbb
adc
fsubr
repnz
fistpl
add
lea
jnp
ficompl
out
xor
sub
lea
cmp
enter
inc
xchg
fs
fdivrs
jp
outsb
cli
ret
inc
lahf
inc
xchg
lret
adc
fldcw
xchg
scas
fsubrl
pushl
jo
jecxz
and
leave
sub
inc
cmc
ds
incl
lods
loop
mov
mov
adc
push
out
test
int3
test
xchg
jbe
rclb
dec
pop
call
js
das
cmc
and
arpl
out
sbb
and
and
pop
adc
sbb
adc
lods
push
add
xchg
push
pop
cld
jp
xor
out
mov
push
inc
sbb
divl
add
inc
inc
mov
jecxz
dec
sbb
lahf
shl
out
push
aam
add
cmp
pop
ror
fsub
jb
stc
xchg
sahf
div
mov
dec
les
sub
lahf
xchg
int
lods
jb
addr16
mov
ficoms
sub
adc
sbb
and
mov
and
loope
dec
out
push
in
push
xlat
add
cmp
sahf
lods
mov
int
jp
dec
sub
loopne
cmp
out
mov
insl
inc
popa
out
inc
xchg
mov
lahf
jle
sbb
push
cs
lock
subb
push
adc
mov
push
out
fimull
std
xor
test
stos
in
add
lock
push
xor
xor
je
add
xchg
xchg
shlb
cmp
push
and
fisttps
xor
cmp
movsl
sub
out
out
in
push
fcoms
mov
xor
and
pop
insb
popf
mov
imul
mov
ljmp
xor
subl
dec
sub
adc
rcll
and
adc
pop
jbe
or
cmc
xor
xchg
push
idivl
test
adc
into
mov
xlat
sahf
icebp
ret
and
xchg
push
hlt
movb
pop
pop
add
ret
das
lret
mov
cltd
int3
test
sbb
loop
ret
xchg
or
pop
mov
mov
jo
cmp
cwtl
daa
xchg
xlat
dec
pop
jmp
xor
divb
std
pusha
add
lret
xchg
int3
sbb
pop
sbb
sub
lods
pop
jbe
push
push
or
loop
jmp
pop
push
pop
add
cmovno
mov
add
mov
adc
jnp
push
data16
stos
mov
out
mov
jge
xor
mov
leave
aad
xchg
jae
int
mov
loop
pop
pop
mov
out
movsb
inc
adc
ds
jb
decl
lds
or
jg
sbb
iret
sbb
adc
mov
mov
mov
jno
mov
or
cmc
pop
leave
lock
movsl
cli
pop
cli
xor
mov
repnz
mov
mov
mov
cwtl
imul
rclb
pop
cltd
testl
lds
push
sti
jne
outsb
je
mov
int3
mov
dec
mov
lock
outsl
mov
xchg
out
mov
or
lcall
dec
jae
jge
sub
xchg
jge
xchg
icebp
pop
cmc
rol
xchg
out
xor
mov
daa
push
dec
xchg
cmpsb
cmp
aam
xchg
fidivrs
insb
aam
nop
pop
loop
aam
js
push
sub
movsb
insb
add
sub
fisubl
or
sarl
dec
mov
push
cli
cwtl
jae
ror
aam
mov
ja
push
or
pop
cmp
cld
or
pop
fcmovbe
andl
mov
in
mov
mov
data16
outsl
xor
orl
pop
fisttpl
aas
xchg
nop
sbb
mov
icebp
xor
loopne
aaa
inc
push
sbb
adc
mov
xor
jmp
lods
lods
push
faddl
jge
mov
popa
or
cltd
sahf
shrl
mov
movsl
mov
sbb
lods
outsl
lds
out
or
and
enter
lret
rcr
xor
inc
mov
mov
adcb
clc
and
mov
mov
pop
stos
fistpl
mov
int3
push
xchg
loope
push
fs
push
push
cmp
pop
mov
rorl
cwtl
sub
dec
lahf
aad
mov
inc
pop
fwait
repnz
jmp
cli
scas
ljmp
movsb
icebp
mov
xchg
test
cld
xor
mov
jnp
imul
popf
imul
mov
mov
xor
mov
int3
dec
shlb
inc
adcb
jne
outsl
loopne
push
push
lret
sbb
sbb
mov
inc
add
fstps
in
push
dec
ret
repz
sub
xlat
adc
mov
xchg
jns
scas
cmp
xchg
arpl
test
xor
mov
push
xor
lret
lea
fwait
std
leave
gs
mov
jg
sub
or
inc
mov
and
mov
imul
sub
call
outsl
sbb
imul
loopne
mov
and
inc
mov
cld
mov
scas
xchg
sbb
mov
mov
sub
cs
dec
push
pop
cmp
incl
jmp
dec
mov
test
outsl
aas
lcall
xchg
test
test
ret
into
cltd
xor
sbb
jo
inc
xor
dec
cmc
jmp
push
mov
fnstsw
enter
add
mov
sbb
in
sahf
mov
repnz
mov
jge
loopne
inc
push
pop
repnz
add
push
inc
and
mov
dec
adc
adcb
xor
or
lret
ljmp
and
cs
mov
test
cmp
mov
rclb
xchg
push
push
aam
sbbb
mov
add
mov
cli
fs
out
sarb
xor
enter
mov
push
sub
xlat
and
mov
mov
test
jnp
testb
jle
jg
inc
adc
xlat
popw
xchg
mov
mov
out
sbb
fucomi
mov
aaa
mov
loopne
int
in
add
adc
mov
lret
dec
push
cmp
dec
repnz
adc
sub
adc
call
jecxz
push
pop
xor
fsubl
pop
test
push
es
loopne
mov
sbb
xor
mov
or
lret
fmuls
rclb
std
roll
out
adc
test
inc
repnz
dec
jnp
mov
shlb
aad
shl
scas
cmp
scas
mov
aaa
adc
adc
adc
sti
inc
fistpll
cwtl
adc
fcmovb
mov
mov
dec
jne
xor
loop
sbb
das
addr16
jge
loop
adcl
xor
fistl
in
xchg
int
das
jo
test
pop
or
and
hlt
gs
ror
ljmp
fldl
lods
lahf
jnp
mov
orl
addr16
sbb
pop
aad
jecxz
lea
dec
into
mov
hlt
les
inc
inc
aas
fnstsw
clts
test
imulb
scas
movsb
test
scas
clc
pop
mov
je
das
in
ss
jmp
jmp
jbe
pop
xchg
or
sub
cmp
sbb
aas
mov
push
jl
loope
xchg
das
pop
subb
shlb
push
cmp
clc
neg
pop
mov
lahf
jmp
inc
mov
fs
aam
push
mov
dec
mov
sub
mov
add
sbb
dec
repnz
mov
pop
jmp
scas
outsb
popf
or
cmp
imul
mov
test
push
test
jb
xchg
cmp
xor
fsubrs
fs
les
out
xchg
mov
nop
mov
fadds
mov
add
inc
sub
daa
sbb
rolb
adc
sbb
lret
and
mov
outsl
adcb
es
push
jp
dec
xchg
inc
ja
je
xor
out
jbe
adc
cltd
dec
or
and
repnz
push
jnp
cmp
bound
or
xchg
mov
mov
pop
fistl
pop
movl
jmp
jmp
push
add
pop
push
mov
outsl
sti
add
jge
add
subb
test
aaa
out
jae
adc
jmp
fisttpll
jbe
jg
call
dec
xchg
imulb
xchg
das
nop
in
sbb
jnp
inc
mov
stos
mov
addb
pop
adc
cltd
jbe
mov
inc
pop
adc
aaa
sub
arpl
sbb
xor
or
popa
push
mov
add
rcrl
ss
insl
add
add
cmp
mov
cmp
pop
dec
mov
mov
cli
cmp
jle
xchg
adc
imul
mov
shl
in
xchg
sub
mov
mov
xor
and
inc
sub
cmp
ret
in
mov
jo
mov
int3
jmp
add
add
inc
scas
in
lds
push
pop
sub
mov
cmpsl
and
xchg
jle
add
imul
sahf
push
aas
mov
inc
popa
sbb
push
fstps
jnp
xlat
or
movsl
sarb
hlt
insl
in
insb
add
dec
push
mov
scas
pop
shlb
jne
sbb
inc
or
mov
cli
jge
test
pop
and
cs
pop
cmp
mov
mov
rcrl
adc
ret
out
cmp
jae
push
mov
sub
and
jl
fimuls
sub
and
aad
mov
icebp
imul
jne
push
notl
ret
loope
nop
filds
add
sbb
scas
aaa
sub
and
andl
sub
jle
and
mov
es
sub
movsl
mov
cmp
imul
pusha
int3
rclb
ljmp
jne
pop
ret
jg,pn
xlat
ret
les
sbb
loope
jbe
or
dec
sbb
and
or
pop
test
addr16
mov
dec
arpl
dec
cwtl
ret
int
in
test
mov
jp
inc
jno
add
inc
sub
ja
cmpsl
pop
push
sub
outsl
pop
jo
mov
adc
fwait
push
in
xchg
popf
fldl
xchg
lock
cld
pop
out
cltd
jp
mov
pop
les
jbe
stos
in
cltd
ss
lods
cmp
pavgb
cmovo
dec
push
ret
inc
in
data16
or
xor
sub
js
pop
fdivrl
iret
push
adc
pop
sbb
lds
jb
dec
jbe
and
lock
movsb
mov
mov
cli
mov
lods
pop
popa
jne
outsl
jnp
pop
insb
in
sub
jnp
sub
testl
movsb
aam
aaa
pop
xor
xor
popa
in
sub
pop
jne
mov
call
lods
jle
div
in
pop
push
mov
into
call
addl
loope
cmp
inc
shlb
ljmp
out
or
pop
ret
or
and
test
loope
and
stos
lods
shl
sbb
jge
xchg
popa
ss
sarb
fcmove
dec
sub
xchg
cltd
mov
xor
out
jg
mov
out
movsl
add
xor
cltd
push
sub
and
and
adc
xchg
xchg
shr
mov
lods
add
dec
mov
adc
in
fwait
sub
test
push
dec
mov
fsubl
loope
and
xchg
or
sahf
call
mov
loop
stos
pop
sbb
aad
mov
aad
cmp
mov
dec
addr16
add
bound
lds
push
cmpsb
addr16
xchg
jae
loope
dec
jo
cmp
sub
xor
mov
sbb
mov
push
inc
aas
xor
or
sbb
cmp
push
adc
mov
bound
xchg
add
in
arpl
jne
fisubrl
inc
cmpl
iret
or
or
and
xor
cli
lods
jmp
jmp
daa
leave
mov
sbb
out
xor
pop
int
in
ljmp
negl
outsl
cmpsb
imul
xor
jg
fsts
lock
xor
inc
sbb
mov
pushf
aaa
sarb
pop
fidivs
and
es
leave
or
add
mov
lea
or
pop
jnp
test
pop
cs
sbb
movsl
mov
xor
mov
mov
lret
cmc
lret
push
push
add
popf
lcall
dec
mov
or
pushf
das
push
adc
inc
jns
sub
lea
fiadds
push
insb
inc
cmc
mov
add
out
cmpsl
jno
jl
movsb
push
push
push
fistps
lcall
imul
in
clc
cmp
stos
mov
aas
xchg
and
and
dec
mov
ja
add
fidivrs
jbe
dec
add
fisubl
inc
jne
sbb
insl
inc
std
lock
jnp
mov
sub
push
lcall
jne
mov
push
mov
push
push
repz
loopne
sbb
rcrl
or
mov
jg
xor
sbb
cmp
cmpsb
cmp
xor
fisttpll
lcall
push
xchg
popf
lret
pop
xchg
ljmp
out
and
mov
and
pop
data16
out
push
mov
jbe
cmpsb
dec
ret
andb
dec
xsavec
sbb
cmp
iret
adc
xorb
popf
and
aam
sahf
mov
mov
icebp
sahf
andb
inc
cmp
subb
nop
xchg
xchg
xor
cltd
lock
shrd
push
mov
sub
push
pop
push
clc
ja
add
and
mov
mov
jns,pn
push
shlb
xchg
cmp
icebp
test
pop
inc
mov
pop
fucomip
fldcw
mov
push
out
imul
imul
add
push
pushl
adc
mov
adc
xchg
ss
mov
inc
jl
jl
lods
push
outsl
loope
lcall
add
into
pop
gs
ret
daa
sbb
xorl
jg
rcrb
stos
add
push
dec
stc
addr16
in
scas
xor
push
fwait
dec
or
int3
stos
in
adc
js
push
xor
add
mov
jecxz
stos
test
xor
sub
pop
pop
mov
out
pop
mov
push
jnp
jg
imul
and
fiadds
out
rcl
and
lea
inc
daa
inc
mov
mov
cltd
xchg
stc
dec
add
insl
nop
movsb
add
decl
cmp
call
xor
xchg
push
adc
ret
xchg
test
fs
cld
repz
aas
jl
jae
imul
cmpsb
mov
pop
pusha
jecxz
sub
or
adc
xor
adcl
pop
jne
mov
stos
lcall
movsb
lods
mov
out
xchg
clc
repnz
arpl
popa
jbe
mov
inc
push
int3
mov
in
arpl
dec
mov
sar
in
std
mov
mov
out
adc
push
pop
inc
mov
nop
arpl
inc
jne
and
xor
fldlg2
jl
mov
mov
push
sub
aad
sub
dec
ffree
bound
cs
mov
popa
xlat
inc
aaa
nop
inc
in
imul
cmp
aad
and
xorl
or
testl
movsb
adc
and
mov
mov
sbb
xchg
pop
pop
int3
sti
xchg
in
inc
outsb
jne
and
push
inc
jmp
mov
out
jge
mov
pop
mov
cld
out
cld
arpl
shlb
mov
outsl
cmp
adc
xchg
arpl
mov
adc
ret
les
jbe
sub
mov
loope
push
dec
sti
inc
or
sarb
adc
xorl
es
xchg
mov
addb
push
dec
adc
bswap
jns
mov
cwtl
pushf
loope
jbe
js
and
pop
out
addb
pop
ret
std
mov
movsl
and
push
push
loopne
or
mov
xchg
adc
xor
cld
mov
scas
mov
repnz
cmp
cmp
adc
pushf
inc
call
mov
pop
add
int3
sarl
fwait
popf
insl
imul
add
and
ret
fs
or
adc
adc
and
stos
cltd
mov
add
sbb
test
fsubrl
inc
popf
ficoml
inc
mov
sahf
repz
stos
pop
xchg
jb
loop
mov
stos
sarb
pop
mov
iret
mov
adc
inc
cmpsb
les
mov
lods
xor
decb
js
jg
fsubp
js
stos
or
and
sbb
stos
insb
outsb
add
xor
add
jo
xor
push
dec
mov
mov
jl
cmp
push
rcrl
inc
iret
cmp
outsl
push
pop
aam
lret
cmp
lea
mov
push
popf
stos
xchg
sbb
pop
cmp
adc
xchg
gs
int
std
scas
and
pusha
pop
mov
in
orb
data16
mov
imul
and
out
daa
out
roll
in
pushf
xacquire
insl
xchg
cmp
mov
fbld
jp
push
mov
xor
or
inc
or
int3
out
imul
xchg
sar
adc
das
jp
mov
pop
and
jns
jno
cmpsb
repnz
pop
inc
add
dec
sarl
push
cmpsb
lods
ja
add
adc
pop
or
aas
mov
daa
pusha
dec
xor
fxch
jl
insb
lret
mov
rolb
fwait
or
rol
lcall
mov
jmp
mov
mov
in
andb
out
es
mov
ret
mov
and
or
mov
ds
into
subb
cmp
fsubr
mov
stos
ret
adc
dec
fwait
sub
push
pop
and
dec
xor
stos
sbb
aas
or
xchg
hlt
fistpll
xor
addr16
and
xor
pop
jle
jns
mov
or
fistps
sbb
push
adc
jge
mov
mov
jns
xor
pop
popf
enter
jecxz
insl
or
xchg
or
mov
roll
ljmp
pop
mov
sub
je
pusha
cmp
sahf
or
pop
pop
fwait
or
insl
jo
mov
out
cmp
out
xor
repz
divb
stos
push
sub
push
xor
mov
sub
loopne
xchg
pop
sarl
aas
xlat
mov
sbb
cmpb
std
jl
or
aam
idivb
push
in
jns
cwtl
je
xor
jmp
and
ljmp
mov
cld
in
jnp
push
lock
xchg
ljmp
pop
inc
jmp
fdivr
sarl
pop
fcom
shl
movsb
push
jae
movsb
mov
and
stos
inc
aaa
pop
cwtl
dec
sub
je
jbe
mov
adc
sbb
mov
push
popf
out
das
sub
adc
addb
push
cmp
mov
mulb
std
mov
loope
lods
and
negl
hlt
or
shrl
lret
leave
mov
push
and
lret
stc
add
and
sahf
cmp
lea
pop
and
adc
hlt
mov
test
rol
xchg
dec
stc
push
aas
xchg
dec
inc
jl
adc
cmpsl
adc
adc
cmpsl
pop
dec
test
cld
xchg
mov
and
dec
push
test
stos
pop
daa
push
mov
out
cwtl
iret
push
or
in
jp
pusha
dec
cmp
jno
nop
dec
orl
xor
pop
add
cmpsl
inc
cwtl
push
and
and
scas
lds
mov
xor
mov
add
jns
repz
inc
outsl
or
mov
pop
dec
and
jno
das
imul
aas
add
jl
lret
xor
mov
fistl
mov
int3
les
jecxz
sbb
rcll
rorb
loop
mov
aaa
sbb
push
mov
jmp
insl
cli
fcoms
and
stc
mov
mov
push
cmc
insl
aam
sbb
pop
dec
cmp
cwtl
daa
jbe
int3
bound
xlat
fists
push
and
aam
adc
push
lods
cmp
lods
mov
mov
mov
bound
dec
iret
std
lcall
fsubrp
push
jne
push
lahf
cmpsl
loopne
add
add
cmc
adc
jmp
xchg
scas
roll
jge
mov
pop
jnp
lods
cmpsl
push
push
push
aaa
pop
sahf
push
popa
jg
jg
scas
test
popf
sahf
cwtl
lods
jl
loope
pop
je
pop
add
dec
add
inc
loop
push
push
shll
or
ficompl
jne
rcl
xchg
jae
cmpsb
imull
sbb
sarl
xor
mov
mov
mov
outsl
rclb
out
out
mov
xor
pop
fwait
pop
xor
jnp
push
xchg
pop
loop
gs
xlat
mov
cwtl
aas
ds
arpl
aaa
lock
push
je
fwait
inc
shr
sbb
xchg
out
push
pop
fisttps
fiaddl
dec
lcall
pushf
icebp
mov
mov
jge
popa
outsl
jnp
mov
out
roll
lret
pop
cltd
std
inc
fdivrs
cwtl
add
stc
idivl
and
push
pop
cs
shrb
cltd
leave
xor
lods
pushf
lea
repz
lods
xchg
inc
sahf
xchg
and
mov
insl
dec
mov
in
mov
nop
dec
arpl
sbb
repz
inc
lods
xor
and
rorb
cmp
call
fs
and
sub
ret
lock
xor
push
addb
push
aas
outsl
pop
inc
in
fisubrs
adc
mov
xchg
push
ja
jnp
push
sub
and
xchg
mov
xor
addr16
lock
inc
or
sbb
or
mov
mov
stos
test
ja
jbe
pop
aad
test
fldt
push
hlt
jl
stc
lret
xor
outsb
jns
sub
fidivrs
or
or
ja
adc
fldln2
int
inc
shrb
mov
mov
push
nop
pop
decb
dec
adc
stos
mov
push
mov
gs
jge
out
inc
push
mov
icebp
dec
add
xor
iret
jl
lods
sub
prefetch
outsl
and
mov
xchg
mov
pop
cmc
adc
aas
jae
mov
mov
imul
mov
push
or
xor
hlt
push
and
add
repz
outsb
ror
adc
call
test
idivb
dec
jle
cmp
add
sarl
outsb
pop
push
jae
jl
adc
xlat
mov
ss
fcomps
pusha
lods
jb
push
stc
lods
push
fsubp
mov
ja
pop
daa
mov
insb
lods
into
add
inc
das
outsb
aaa
mov
das
push
dec
pop
sub
sarb
or
sub
std
stos
push
sti
pushf
push
sub
ja
fwait
in
dec
cmp
je
push
inc
pop
sahf
sub
sbb
inc
and
cli
subl
sub
bound
add
mov
inc
hlt
adc
dec
jecxz
push
xor
pop
ljmp
sbbb
scas
ja
or
idivl
popf
fsts
xor
cli
or
cmpsl
sti
lret
mov
out
imul
or
loope
adc
cltd
add
adcl
aaa
cmp
jno
mov
out
mov
in
sbb
ret
and
xchg
jl
adc
add
fsts
aam
or
sti
cmp
shl
push
jmp
mov
push
arpl
xor
sbb
shrb
loopne
pushl
cmp
fists
and
pop
adc
insl
ret
pop
mov
inc
jmp
into
and
push
sbb
fmul
mov
sub
inc
pop
push
jg
pop
push
cmpsl
mov
pop
in
xor
or
aas
std
or
add
mov
sub
mov
aaa
mov
int3
cld
mov
jp,pn
mov
mov
push
les
in
scas
loopne
cmpsl
rolb
cwtl
mov
inc
xorb
adc
sub
inc
lock
adc
jmp
sahf
or
mov
imul
xor
dec
lds
fidivl
xor
jmp
fistpll
sub
rcr
xor
out
dec
pop
add
loopne
and
push
jae
add
inc
outsb
push
insl
pop
cli
add
mov
mov
aaa
orb
cltd
outsb
fdivr
xchg
stos
test
push
jno
je
and
xor
push
cwtl
or
aad
imul
cmc
mov
pop
adc
or
cmp
jecxz
xchg
jno
mov
test
and
dec
pop
sbb
mov
mov
pop
cwtl
leave
pop
mov
aam
rorb
pop
xor
mov
cmp
dec
cmp
adc
ljmp
jp
xchg
jns
add
mov
pusha
jl
pushl
int
adc
sub
mov
mulb
jae
xor
in
xchg
loope
or
mov
push
insl
dec
std
rcr
jge
lds
push
repnz
sbbl
or
jge
mov
adc
mov
or
out
xchg
pop
roll
xor
ret
lods
test
mov
pop
stc
sbb
in
out
cli
pop
out
aam
push
mov
out
int3
pusha
lahf
repnz
das
push
cmp
xchg
xchg
push
pop
push
push
ljmp
rclb
aam
mov
fwait
push
jp
xchg
pushf
cmpsl
stos
jge
add
negl
or
cmp
es
pop
js
scas
push
stc
cwtl
jne
cmp
shlb
insl
fisttps
jmp
and
jae
and
popf
in
loop
cmc
int3
pop
mov
je
bound
xor
jle
inc
sbb
jg
or
dec
cmp
push
inc
mov
cwtl
pop
mov
pusha
mov
enter
sbbl
xchg
push
cmc
add
sub
sbb
sub
lcall
stos
xchg
push
dec
dec
mov
lds
xor
jl
test
repnz
jb
int
pushl
lret
pop
popa
test
out
rclb
jmp
outsb
pop
mov
jmp
scas
sbb
nop
adc
nop
out
sti
push
lret
pop
and
sbb
push
or
movsl
subb
push
out
add
mov
dec
dec
jmp
test
xchg
jmp
push
pop
mov
dec
insb
fistl
nop
mov
inc
ljmp
push
push
pop
pop
out
shl
adc
cmp
shl
jg
insl
outsl
xchg
xor
mov
outsl
test
add
aad
rcrb
mov
insl
dec
cli
xchg
inc
add
add
jne
xchg
jecxz
in
sarl
gs
jne
and
fcompl
jmp
call
cs
mov
jge
iret
ret
daa
dec
or
mov
xchg
sti
mov
test
out
xlat
inc
add
jae
mov
out
mov
jp
add
sbb
lds
in
jae
add
cmovge
out
mov
xchg
cmpsl
mov
ret
test
stc
dec
and
std
fwait
push
ret
mov
push
push
cmp
sub
jl
call
pop
and
mov
cmp
popa
lods
add
push
leave
out
add
sbb
mov
or
or
push
jne
push
cltd
sbbl
xor
test
dec
ljmp
aaa
pop
sbb
pop
andl
mov
gs
add
add
inc
pop
or
in
mov
inc
push
sbb
and
test
es
mov
bound
push
push
push
cmpsl
pop
xor
cs
fstl
data16
test
push
mov
or
jecxz
leave
data16
add
outsb
push
cmp
addr16
xchg
ja
clc
push
cmc
cmc
jb
cmpsb
mov
and
in
mov
js
and
and
sbb
adc
rcr
mov
adc
lock
es
imul
mov
pusha
js
xchg
pop
pop
inc
inc
shrb
sar
out
xchg
arpl
int3
push
ss
into
pop
fucomp
xchg
mov
sbb
jge
std
mov
cmp
push
out
lods
mov
jp
lahf
mov
adc
push
adc
jge
test
fidivs
or
push
add
lds
stos
sub
push
mov
scas
out
jge
mov
je
dec
mov
js
cs
shlb
pop
out
mov
fimull
pop
arpl
jp
cmp
outsl
inc
xchg
adc
fistpll
sub
lock
leave
addl
pop
cmp
mov
sub
pop
imul
jbe
or
mov
bswap
popf
ljmp
or
push
rcr
lcall
sbb
movsl
dec
xor
dec
jb
dec
xchg
lods
mov
fdivrs
ds
sbb
mov
push
sbbb
rcrl
and
imul
mov
mov
lret
mov
inc
inc
stos
or
jne
std
cs
mov
mov
clc
mov
std
hlt
outsb
jns
outsl
rcll
shrb
shlb
or
jnp
mov
xchg
push
lahf
test
mov
push
lea
dec
and
repz
mov
ficomps
rclb
jmp
mov
js
stos
mov
jle
push
imul
sub
test
daa
pop
cs
call
stc
loop
sbb
pop
inc
lcall
mov
or
sti
push
ret
adc
fistl
and
jnp
imul
fldcw
fcompl
sarb
adc
xor
mov
out
in
fcoml
outsb
mov
addr16
fnstcw
push
xor
lea
cmc
or
insl
push
mov
dec
hlt
inc
inc
jmp
pusha
dec
pop
aas
add
std
fldpi
leave
cwtl
xchg
xor
dec
pop
aad
rorl
in
fsubl
adc
mov
es
addl
push
iret
pop
and
ret
xor
xlat
cwtl
fstps
sbbl
push
lcall
push
stc
aam
pop
and
and
iret
aas
pop
cmp
stos
dec
jecxz
dec
faddl
imul
cmp
shr
ja
cwtl
xorb
jbe
jg
in
pop
sbb
movsl
jne
mov
push
imul
cmp
scas
pop
dec
daa
rclb
sub
and
arpl
mov
lcall
push
stc
jns
inc
movsl
mov
adc
rcrl
sbbl
aaa
data16
cwtl
xor
mov
enter
ja
es
fwait
xlat
aam
insb
and
xlat
fsubrs
push
pop
fcomi
and
out
mov
mov
inc
cmp
dec
cltd
aam
and
mov
xchg
xlat
pop
pop
jbe
or
insb
add
inc
push
mov
addl
mov
sbb
stos
out
sahf
inc
pop
cmp
sbb
dec
mov
mov
cmp
sbbl
sub
jge
flds
push
pop
sarl
pop
jb
fisubl
out
inc
popa
xor
addr16
pop
lahf
repz
xchg
dec
test
fcmovb
sbb
mov
ret
xchg
push
mov
fisttps
inc
inc
pop
push
popa
je
xor
ror
test
sub
push
cmpsl
add
js
mov
inc
sub
jg
pop
push
lea
bound
cld
xor
incb
lcall
push
sub
dec
out
add
push
xchg
push
fsub
test
int3
sub
push
cs
movsl
pop
test
xor
in
pop
rorb
sub
out
and
fucomp
frstor
xor
pop
fwait
loope
mov
jmp
pop
pop
notb
inc
mov
jo
dec
in
fimuls
gs
inc
xchg
daa
cs
in
sti
cmp
mov
mov
jne
xchg
mov
fistpll
cmp
data16
sbb
cmpsl
fmul
loope
xchg
movsb
jg
adc
cmp
mov
add
jmp
xlat
mov
rcrb
sub
push
ljmp
mov
int3
mov
xchg
stos
movsl
jae
add
xor
outsb
jle
mov
out
push
sub
test
and
or
inc
mov
xchg
je
js
in
dec
shlb
sahf
push
mov
pop
fcompl
pop
mov
push
ja
sbb
cmp
leave
or
into
pop
imul
popa
inc
cs
and
aaa
mov
dec
xchg
jno
xor
push
repz
dec
movsb
cmp
ja,pt
pop
pop
mov
test
lahf
data16
jmp
cmpb
cmp
or
jno
hlt
arpl
xchg
cmp
mov
ja
pop
xchg
push
mov
or
jp
cmpsb
cmp
dec
test
dec
pop
andb
pop
arpl
in
test
das
scas
sbb
mov
ja
dec
shll
mov
test
hlt
mov
int3
pop
xchg
fistpl
mov
out
fstps
popf
gs
cli
lret
insl
imul
mov
cld
imul
xchg
fcoml
loope
xor
add
sahf
ficoms
add
shl
test
xor
test
lcall
xchg
loope
pop
mov
sbb
sub
aas
mov
in
repnz
mov
jle
pusha
scas
sbb
dec
mov
imul
inc
jge
jnp
stc
jne
adc
and
fistps
mov
inc
mov
mov
pop
sub
xchg
aas
repnz
lret
sahf
mov
sbb
sahf
mov
ds
jge
sbb
push
sahf
inc
lods
insb
adc
mov
push
or
addr16
aas
mov
sbb
xchg
mov
lock
imul
cmp
movsb
xor
ja
xor
mov
cmp
dec
incl
iret
and
ds
xchg
pop
lret
pop
jne
jle
clc
xor
test
mov
pop
in
imul
mov
mov
adc
xchg
jae
cmpsl
mov
cmp
mov
and
cwtl
in
fincstp
push
test
popf
shlb
dec
cmp
leave
push
mov
jl
cmp
and
jl
push
and
xor
lcall
js
test
and
xchg
into
adc
mov
mov
std
and
or
repnz
clc
loopne
loopne
jno
fwait
xor
scas
lods
fs
mov
lods
repnz
cmp
push
mov
sub
jnp
in
in
mov
xlat
or
dec
cltd
aam
in
stos
add
loopne
add
xchg
loop
mov
cltd
jge
aad
lret
mov
xchg
repnz
sbb
stc
fisttpll
fdivs
mov
dec
push
cmp
adc
adc
push
mov
xor
dec
xchg
out
pop
mov
mov
bound
xor
xor
icebp
and
sbb
xor
aad
fcomps
jg
cwtl
and
pop
jne
jnp
xchg
imul
mov
adc
xchg
sub
divl
aas
pusha
sbbl
fcom
stc
stos
rcrb
inc
hlt
or
std
and
divb
iret
cmc
insl
adc
movsb
cmp
mov
ds
pop
mov
iret
jb
push
xor
xchg
xlat
dec
mov
push
movb
jo
cmpsl
es
mov
adc
int
fistps
jns
enter
xchg
imul
out
sbb
inc
les
bound
stc
cmp
popf
mov
mov
pop
add
jge
mov
popl
in
sub
jp
shlb
dec
cmp
add
stc
cs
ss
add
gs
xor
dec
pop
sbb
test
test
and
int
movsb
xchg
and
mov
lods
jb
fidivrs
loope
and
and
jp
push
imul
cs
add
lahf
das
imul
adc
push
jp
or
jl
sub
or
cld
add
push
pop
adc
dec
scas
addr16
dec
js
add
ret
pop
xor
fwait
hlt
fimuls
xor
jl
aad
jmp
cmp
or
stos
popa
sbb
pop
mov
pop
xor
sbb
jae
cmp
mov
loop
cmpsl
sbb
inc
adcl
jle
and
jno
out
stc
pop
lds
je
mov
rcrb
in
push
inc
in
sahf
jno
movsl
leave
ret
sub
into
iret
adc
jl
sub
insb
inc
xchg
xlat
andl
lret
movsb
sub
mov
mov
dec
sub
pop
xchg
inc
fidivrl
lods
adc
xchg
push
push
mov
push
jge
dec
inc
xchg
sub
jae
les
mov
push
fs
outsl
int
je
inc
cmpb
jae
xor
into
mov
cmpsb
outsl
icebp
fisttps
fsubs
cmp
movsb
pushl
push
pop
sbb
dec
shlb
jb
cmpsb
shlb
insb
push
arpl
icebp
xor
dec
cmp
xchg
or
cwtl
inc
scas
mov
out
iret
adc
jle
stc
loope
lret
dec
and
in
jmp
add
fimull
and
adc
or
adc
fisubl
push
imul
add
sbb
xor
xchg
or
sbb
sti
in
cmpb
sub
loopne
stos
xchg
popf
aam
daa
arpl
jb
push
jle
push
fisubl
gs
dec
dec
xor
dec
loop
divb
loopne
outsl
psubw
dec
into
in
in
leave
mov
mov
pop
pop
pop
mov
les
in
jno
cld
xor
mov
imul
mov
mov
lahf
dec
pop
in
dec
xchg
and
xlat
mov
rorl
xor
fcompl
xor
loope
pop
in
lods
test
add
cmp
dec
push
jmp
rcrb
and
outsb
cmc
enter
jne
cvtpi2ps
or
jecxz
inc
out
stos
push
outsb
je
sbbb
xor
dec
cmp
sub
jns
dec
pusha
add
arpl
mov
sbb
add
sbb
jbe
mov
cmp
std
jmp
or
mov
ds
bnd
push
mov
bnd
adc
cld
xchg
popa
stc
sub
es
push
cmp
adc
adc
lods
or
mov
or
pushf
xor
and
sbb
ffreep
mov
push
add
sbb
lock
adc
jns
adc
and
cmp
or
insl
push
stc
mov
mov
pop
xchg
push
xchg
adc
leave
inc
push
sbb
mov
push
cli
sarb
stos
sub
jmp
dec
add
or
jl
jne
mov
mov
xchg
jo
out
jne
pop
mov
pop
mov
mov
aas
mov
cmp
sahf
outsb
aaa
aaa
shlb
cmpb
jmp
arpl
pop
xchg
adc
int
fsub
movsl
mov
inc
ja
insb
imul
or
cmp
notb
sbb
movups
movsb
jnp
pop
cmp
neg
call
dec
mov
lret
scas
mov
test
int
out
mov
pop
cmc
in
pop
orl
sbb
xor
mov
xor
outsb
or
fwait
dec
and
repz
iret
fistl
inc
scas
or
dec
and
jne
add
es
jecxz
adc
cmp
dec
dec
jno
fimull
mov
out
mov
int3
jmp
mov
test
ljmp
jo
lret
pop
cltd
mov
out
outsl
rcrb
mov
fisubs
hlt
test
sbb
shlb
inc
add
mov
fldt
fwait
xorl
insl
je
movsb
scas
pop
or
xor
jecxz
arpl
inc
add
xor
lds
jae
enter
add
sbb
test
adc
mov
lock
jne
cld
movsl
adc
repz
jp
jp
sarl
enter
cli
sahf
out
pop
jmp
shrb
cmp
mov
and
xor
pop
inc
jne
pop
push
outsb
lcall
vpcmpgtd
nop
mov
pushf
dec
lods
dec
sub
repnz
inc
cmp
mov
je
cltd
pusha
mov
ficoml
in
jmp
popa
lock
or
jecxz
outsb
sarb
orl
xchg
mov
mov
cli
lods
dec
mov
jae
lahf
pop
icebp
and
jnp
mov
add
add
xor
ds
sub
mov
jp
insl
sahf
mov
iret
lods
pop
jb
and
adc
pop
dec
iret
mov
pop
push
fs
pop
pop
mov
test
push
movsl
in
adc
fdivl
popa
sbb
adc
sbb
push
lcall
cmpsb
jbe
sub
sbb
imul
setnp
sub
dec
sub
dec
mov
bound
scas
mull
push
sub
int3
or
out
push
mov
dec
imul
out
pop
push
adc
dec
pop
lds
fcmove
inc
sub
icebp
sbb
jo
mov
xchg
std
daa
jp
test
sub
push
movsl
stc
out
pop
jb
into
daa
inc
cwtl
cltd
cmp
inc
int
mov
and
int
jae
dec
in
sub
xorl
fidivrl
push
sahf
fucom
in
dec
imul
lock
clc
mov
ljmp
jo
ss
stos
mov
sti
sub
dec
mulb
mov
xchg
les
or
inc
xchg
jbe
lds
xchg
in
lods
pop
adc
sub
ret
dec
jo
inc
sbbb
sub
in
mov
lods
pop
xchg
arpl
adc
out
adc
mov
or
jl
repz
ljmp
out
notl
push
mov
push
adc
fcomps
sub
insb
outsl
lret
sub
jns
mov
popa
dec
inc
mov
push
jp
dec
fildl
popl
aam
incw
and
lahf
mov
jl
fs
leave
out
dec
sbb
sbb
inc
scas
mov
xor
js
push
xchg
dec
push
sub
cmp
fs
outsb
lods
in
dec
stc
bnd
nop
fs
or
cs
cmc
cmp
ljmp
repz
cld
cmp
jae
mov
pop
jle
movsl
mov
jle
push
stos
add
les
mull
loopne
addr16
fwait
cld
mov
rcrl
scas
leave
jge
out
ret
fwait
lahf
jbe
repz
mov
test
xchg
stos
mov
pop
out
ja
notl
shll
lret
imul
inc
dec
outsl
cmp
push
xor
inc
repz
add
jo
cltd
jl
stos
push
lahf
mov
and
add
out
and
sbb
sub
out
cmp
pop
fisttpl
outsl
lcall
mov
clc
sbb
jmp
mov
insb
pusha
lods
xor
in
mov
out
ljmp
sub
inc
out
sbb
ljmp
jp
fistpll
mov
jg
jns
pop
das
fidivl
xchg
xchg
jb
and
loopne
push
outsl
out
shr
inc
shll
or
out
cmp
mov
nop
aaa
pop
test
and
adc
push
mov
sub
std
leave
add
jb
mov
orl
or
jmp
sbb
dec
pop
mov
and
je
mov
call
adc
jl
push
xchg
lea
shl
sbb
aam
jbe
dec
jmp
sbb
add
push
lahf
sarl
push
ja
xor
dec
mov
mov
sub
jae
pop
jo
mov
cli
nop
and
cltd
or
imul
and
les
in
mov
push
sub
mov
cmc
sbb
cmpsl
jecxz
xchg
cld
mov
cmp
mov
mov
adc
xor
mov
into
and
push
aas
enter
adc
fimuls
mov
sbb
inc
xlat
adc
push
jmp
xor
or
jl
add
inc
ja
push
xchg
mov
dec
les
ss
jno
jo
lret
movsl
outsb
sub
adcl
dec
push
cmpb
jg
cmp
shl
mov
sbb
add
enter
mov
mov
hlt
pop
cmpl
xor
mov
imul
stc
adc
mov
rolb
inc
mov
mov
ds
pop
aad
mov
sarl
rol
adc
rorb
subb
push
cltd
mov
jl
sbb
cmp
clc
ret
xchg
lret
repz
test
les
les
inc
dec
test
xchg
sub
das
adc
rcrb
mov
mov
mov
push
insl
mov
shrl
add
sbb
fwait
mov
into
push
in
rol
cmp
shlb
fdivs
rcll
mov
daa
pusha
mov
cmp
test
iret
xor
mov
mov
outsb
mov
out
addl
jb
adc
in
jg
mov
mov
mov
cmp
loope
lret
dec
lret
orb
mov
jg
push
mov
push
and
adc
xor
mov
mov
adc
dec
push
out
xor
xlat
add
out
sbb
push
push
xor
push
add
test
jns
inc
cmp
std
or
in
into
pushf
xchg
cltd
lcall
cmp
adc
push
nop
sbb
sbb
mov
imul
les
iret
testl
lock
clc
and
dec
jae
jbe
push
test
call
mov
loope
sets
lret
jle
movaps
daa
outsl
pop
subb
repnz
jae
mov
adc
or
ss
inc
rcrl
aad
in
lea
cwtl
pop
sub
out
jl
push
in
ficoms
mov
cmp
imul
or
push
mov
out
jg
ja
loope
scas
addr16
xor
pop
fldt
shr
adc
ds
cmp
mov
shrl
cltd
outsb
jae
aad
push
outsl
lods
jno
and
outsl
cwtl
shrl
xchg
lock
das
lods
stos
xchg
fidivs
mov
into
frstor
adc
pop
fwait
pop
mov
jg
cmp
push
fwait
inc
pop
mov
nop
ret
adc
scas
ljmp
movsb
pop
dec
mov
imull
xor
xchg
adc
bound
mov
pop
movsb
and
rol
js
sbb
roll
push
xchg
pusha
stos
mov
aad
pop
mov
xchg
mov
lds
fnstsw
mov
leave
lods
xchg
pop
pop
add
pop
inc
into
mov
mov
xchg
pop
sti
in
xchg
aam
enter
rcr
xchg
mov
data16
add
xchg
movl
mov
mov
call
xlat
push
sbb
push
loope
push
shlb
out
and
jp
mov
xchg
dec
inc
movzwl
sub
shrb
xchg
pop
mov
mov
xchg
add
push
inc
repz
push
pop
insb
icebp
fstpl
mov
test
pop
push
icebp
inc
and
cmp
or
movsl
mov
out
mov
std
or
cmp
frndint
addl
cld
repz
xor
stos
ja
stc
adc
pop
stos
sbb
scas
fcmove
push
xor
mov
jle
cmp
insb
dec
lcall
nop
lahf
sbb
and
cwtl
mov
xlat
adc
dec
mul
loop
mov
adc
jne,pt
jnp
outsb
mov
daa
or
int3
sbb
aas
andl
add
ret
sub
adc
jle
jle
inc
or
xchg
hlt
cmpsb
xchg
adc
push
bound
repnz
xchg
enter
jae
ljmp
sbb
xchg
cmpsb
xor
into
gs
xchg
xchg
and
dec
rcrb
or
shlb
stc
add
xor
out
push
push
sub
fs
loope
push
xrelease
leave
pop
sub
cltd
loope
jo
mov
jle
js
leave
cmpsl
cmpsl
cmc
int
xor
lret
jne
cmp
out
xor
test
xchg
test
stos
ficomps
jecxz
dec
subb
fs
or
cmc
outsl
out
sbb
add
ljmp
jp
sub
jg
bound
lods
jae
xor
xchg
stos
negb
stos
mov
mov
test
ja
test
push
xchg
leave
and
lret
cmp
mov
adc
sbb
imul
sub
mov
pop
cmp
in
in
andb
jle
fldz
sti
leave
arpl
roll
icebp
add
ret
push
jge
push
pop
pop
imul
push
out
mov
pop
dec
lds
mov
loop
add
dec
filds
fldenv
es
inc
aad
ljmp
jo
and
fisubrs
movsb
shlb
xchg
xchg
repnz
lret
sbb
je
cltd
push
jmp
fcompl
pop
lcall
push
xlat
add
push
test
pop
in
aaa
jo
cmp
jl
push
dec
cli
enter
push
fdivrp
mov
loopne
setge
sbb
xchg
and
sub
jmp
sbbl
ror
test
jno
or
test
jmp
cmp
cmp
pop
dec
cld
out
hlt
pusha
fbld
jge
repnz
fxch
movl
call
test
fstps
jns
ja
sbb
stc
icebp
push
push
jg
sub
mov
sbb
dec
sub
or
dec
mov
push
inc
fs
ljmp
pop
test
lods
or
frstor
jle
xlat
aam
pushf
aad
pop
xchg
inc
int3
insb
pop
insb
out
mov
ss
and
adc
cs
scas
mov
lret
addr16
cmp
enter
push
mov
jns
mov
mov
lahf
cmp
stos
dec
adc
dec
bound
mov
scas
icebp
int3
adc
cmp
nop
cmpsl
jb
aas
sub
xchg
xchg
push
aad
pop
cwtl
lods
cmp
dec
stos
popf
xor
mov
jge
outsl
dec
dec
hlt
inc
andb
push
add
int
sahf
dec
aas
xlat
dec
std
lea
dec
je
mov
and
fwait
arpl
aad
arpl
mov
call
and
clc
jl
ljmp
pop
xor
fcomp
xchg
inc
mov
cmc
fsubs
loop
fwait
jmp
cmp
push
in
push
loope
movsl
mov
push
xchg
jmp
lds
or
xor
push
dec
rcrl
stos
xchg
dec
adc
movaps
inc
cmpsl
sbb
jg
cwtl
mov
icebp
pop
mov
xchg
sbb
fwait
loop
adc
les
cmp
pop
push
sub
cmp
push
pop
push
xor
mov
pop
jl
leave
cmp
testl
xchg
mov
rcrl
lcall
dec
lret
mov
cmp
movsb
aam
cld
push
pop
adc
and
cwtl
mov
aad
js
lret
lods
mov
cltd
mov
pop
inc
pop
jnp
sub
add
pusha
rcr
sahf
and
jmp
mov
jne
jecxz
outsl
and
adc
lret
mov
pop
lds
sbb
sbb
push
push
mov
arpl
sub
jmp
pushl
adc
stos
js
push
jno
ds
jbe
int
sub
shlb
or
adc
std
mov
out
push
adc
insl
sbb
ss
stc
mov
or
sub
inc
sbb
enter
push
stos
jbe
mov
add
lock
jb
mov
out
pop
push
out
mov
inc
movsb
call
insl
lahf
xor
push
inc
iret
and
ret
jnp
cld
fisttpl
xchg
cmp
mov
roll
dec
movsb
fcomps
test
in
mov
cmp
pop
or
push
imul
loop
movsl
mov
inc
dec
lcall
jno
in
pushf
and
hlt
jae
mov
lcall
jb
xchg
dec
dec
fbstp
add
xor
sbb
xchg
int3
out
or
cmc
shl
mov
test
das
sbbl
lcall
sbb
insb
and
jno
xchg
mov
into
sbb
pop
fninit
jmp
imul
out
mov
arpl
and
cmp
dec
pop
add
arpl
rcl
jo
test
ret
jge
scas
mov
dec
xchg
clc
insb
enter
loopne
test
enter
mov
insb
cli
daa
bound
sub
sbb
jecxz
jae
es
or
cmp
mov
cltd
xor
lock
into
pop
pop
std
nop
int3
mov
sub
imul
push
test
in
stos
out
dec
les
fdivrl
mov
push
mov
pop
mov
mov
inc
inc
stos
or
add
arpl
sbb
cmp
leave
inc
jae
push
scas
mov
mov
inc
adc
jbe
xchg
aas
jo
jmp
test
incb
out
sbb
cmp
out
inc
sub
dec
fdivrp
pushf
std
xadd
jo
popa
pushf
bound
sbb
stos
setb
xor
jmp
pop
mov
test
out
hlt
hlt
pop
cmp
test
arpl
ljmp
stc
enter
lods
xor
push
xchg
push
and
xchg
and
jmp
pop
xor
loop
ret
enter
xchg
repnz
xchg
jns
lahf
jg
push
sbb
jp
push
repz
push
adc
xchg
mov
pop
outsb
fisubl
adc
add
jnp
xor
addr16
push
push
sahf
ffree
pop
inc
fwait
and
in
xchg
push
push
dec
loope
push
in
push
sbb
add
inc
xor
mov
and
mov
xchg
stos
inc
fwait
push
iret
push
adc
or
mov
jo
mov
aas
cs
repz
loopne
shll
pop
es
mov
mov
cmp
mov
lret
xchg
mov
mov
movsb
xchg
mov
clc
ffreep
int3
inc
scas
ret
movsb
push
jge
add
xchg
es
jmp
cs
mov
sbb
fldenv
cld
mov
js
adc
decl
movsl
aas
jb
fcoml
test
pop
sbb
jmp
push
mov
sbb
sbb
dec
xchg
pop
pop
sbbl
jns
or
call
mov
inc
stos
stc
mov
mov
movsl
cmc
xor
mov
jmp
push
jb
xchg
test
iret
xchg
mov
push
sarl
push
sahf
les
int3
mov
xor
mov
and
sbb
cmpb
xchg
je,pn
add
iret
dec
xor
xchg
jb
push
or
ret
inc
lock
bound
xor
movsl
cltd
in
xchg
dec
dec
pop
dec
cli
jno
insb
cmc
adc
out
mov
push
arpl
mov
add
sbb
jns
aas
lahf
jle
sub
sbb
mov
sbb
push
mov
mov
mov
lods
gs
test
jnp
jecxz
orb
and
jbe
stos
in
negb
dec
inc
jns
sub
shr
imul
pop
jle
push
cmp
mov
mov
fidivrl
stos
cmp
mov
sub
jp
mov
or
mov
jmp
popf
shlb
outsb
push
lock
dec
icebp
xchg
jbe
mov
xor
js
stc
push
dec
adc
divl
dec
inc
sub
aam
enter
mov
jp
scas
jne
xchg
in
inc
push
hlt
mov
and
icebp
inc
in
inc
sbb
ljmp
fsts
les
insl
cld
orb
xchg
cld
dec
in
mov
repnz
stos
inc
push
pushf
and
pop
std
add
call
test
or
sub
pop
in
xchg
aas
ja
mov
add
dec
idivb
jp
lock
outsl
pop
lret
loope
mov
ret
cmp
adc
cwtl
ja
call
dec
pop
movsb
jge
inc
sbb
adc
cwtl
cltd
mov
incb
lods
call
cltd
lea
jp
and
xor
or
adc
mov
pop
call
fbld
mov
xchg
dec
scas
sarb
fisubrs
or
mov
cs
fs
xor
mov
leave
out
popf
rclb
popa
cmp
loopne
mov
adc
sbb
mov
push
mov
mov
sarb
gs
xor
push
loope
cmpsl
arpl
shrl
xchg
xor
xor
push
lds
into
jno
mov
adc
stos
cmp
cmc
js
inc
shrb
pop
rol
mov
inc
inc
xchg
and
jno
insb
xchg
mov
and
andl
xchg
mov
xchg
imul
xchg
mov
icebp
insl
dec
mov
push
testb
int3
mov
push
xor
or
sbb
xchg
mov
scas
in
sub
pop
paddusb
jl
push
push
adc
sub
sarb
and
out
dec
mov
test
adc
outsb
and
je
sahf
push
lret
pushf
add
fxch
or
sbb
add
cmp
popf
loop
mov
mov
adc
sti
push
imul
adc
xor
stos
mov
sub
out
mov
sahf
out
sbb
mov
rorb
addr16
adc
pop
mov
jb
cmp
mov
test
jnp
cmp
mov
xchg
push
lods
dec
push
call
out
xchg
xor
daa
dec
xchg
ret
mov
sbb
ret
fs
outsl
cmpb
aaa
je
cltd
nop
ljmp
push
sub
cmp
push
shrb
je
adc
pop
adc
jbe
and
xor
xor
jecxz
adc
xchg
mov
pop
cmpsl
std
icebp
ret
cmc
jno
fsubrp
ficompl
and
inc
rcrl
add
mov
stos
lahf
icebp
sbb
fists
mov
xor
stos
ret
mov
adc
and
xchg
movl
ja
sub
out
cli
lret
loopne
in
jmp
out
mov
push
push
popf
shr
imulb
pop
xchg
rcrb
mov
loopne
lahf
mov
xchg
ud1
pop
shll
jne
cmp
mov
add
sbb
loop
stos
or
dec
or
fs
lods
mov
arpl
out
jns
jp
in
jb
push
jl
sub
or
lret
sarl
rcl
sub
fsubrs
lret
or
iret
add
mov
push
pop
jb
lcall
mov
push
jo
bound
mov
mov
mov
mov
popf
stos
jecxz
xchg
xchg
pop
push
mov
mov
popaw
iret
inc
pop
scas
ds
sbb
mov
jns
xchg
or
xchg
add
cld
jae
push
cmpsl
pop
aad
push
jb
mov
xor
push
adc
ret
das
xchg
sub
test
pop
add
or
pop
mov
std
icebp
leave
fs
pop
jecxz
sbb
adc
dec
and
mov
loop
pop
inc
iret
mov
lods
xchg
or
ds
mov
lods
push
adc
sbb
loopne
lcall
ficompl
push
adc
out
and
bound
xchg
in
popf
pop
xchg
pushf
add
imul
int
popa
in
pop
lret
sbb
fsubrs
sub
sub
cmp
jle
mov
xlat
ljmp
ss
dec
sub
bound
and
push
popa
mov
add
push
int3
fsubrp
cltd
xor
lock
push
mov
push
insb
sub
call
lea
mov
out
shlb
ja
and
pop
sbb
cs
mov
pop
mov
icebp
xor
fisubs
test
push
repnz
pop
jo
stos
dec
test
loopne
cltd
jo
pop
inc
mov
ds
xchg
repnz
in
xchg
lcall
mov
mov
in
add
or
adc
adc
fwait
addb
xchg
mov
push
cltd
push
cs
fnstenv
and
sub
fmull
cltd
xor
adc
mov
jbe
aad
ja
call
ret
stos
or
fcomi
lahf
push
xchg
or
flds
mov
xor
or
lods
inc
jbe
mov
das
and
add
imul
loopne
dec
enter
push
mov
roll
adc
sbb
or
imul
testb
mov
inc
and
mov
dec
andb
mov
es
ret
idivl
ficompl
enter
dec
mov
mull
push
mov
je
ficomps
jg
movsl
stos
xor
mov
inc
mov
push
push
pop
add
test
adc
xchg
and
add
jbe
gs
imul
cltd
push
jp
sarb
pop
pop
and
pop
int
mulb
lods
ja
cmc
sbb
fisubs
jle
mov
icebp
mov
pop
in
inc
in
cmpsl
inc
add
pop
jns
pop
adcb
jnp
gs
out
mov
into
lods
cmp
sarl
lcall
push
hlt
test
xorb
mov
xchg
out
int3
sub
or
jnp
sub
and
mov
aas
scas
loopne
dec
pushf
sub
jp
or
pusha
rcrl
out
iret
stc
mov
rcr
ret
mov
es
push
mov
or
mov
daa
mov
sbb
fldcw
jb
outsb
jle
iret
movsl
jns
repz
cmp
jecxz
sub
dec
lahf
cltd
jnp
jo
stc
in
jnp
je
push
cmp
out
dec
lret
loopne
mov
pop
xchg
es
and
loop
aaa
nop
fs
cmp
sti
movnti
lods
jl
stc
fs
aaa
and
and
mov
pop
jmp
fidivs
cld
push
sbb
lock
mov
sbb
enter
test
dec
in
imul
dec
gs
int3
outsb
push
jo
xchg
push
addr16
push
stc
repnz
je
sbb
cmpsb
aam
hlt
in
mov
pop
mov
push
cmc
jmp
shlb
mov
xchg
inc
jnp
adc
xchg
xchg
dec
mov
and
sbb
sub
adc
int
inc
mov
jno
inc
fs
das
movsl
add
push
mov
lods
jnp
jle
incl
addr16
sbb
inc
aad
sub
mov
xchg
aam
ja
mov
lahf
in
out
adc
pop
ss
sbb
test
std
sti
push
sub
bound
fsubr
cmp
dec
sbb
mov
mov
push
daa
ficoms
mov
mov
pop
add
cmpsl
mov
daa
mov
dec
fadd
in
stc
and
jge
fcomps
jge
jg
in
pop
call
fimull
divl
rorb
sbb
ja
pop
push
cmp
xchg
aam
repnz
pushf
sub
test
mov
stos
rolb
lds
cmp
and
ss
push
lods
int
xor
push
mov
push
cs
icebp
call
mov
aaa
popf
jae
inc
in
jnp
aad
push
in
inc
adc
mov
mov
and
xor
xor
mov
fbld
or
and
pop
addr16
pushf
mov
outsl
test
mov
adc
out
fs
push
pop
scas
dec
and
pop
in
jbe
clc
mov
insl
sbb
aaa
hlt
pusha
mov
xchg
pop
mov
push
or
mov
jecxz
stc
std
jbe
adc
fmuls
sbbb
mov
inc
not
insb
insl
cli
jmp
fistpll
or
add
mov
xchg
mov
xor
mov
fistpl
rclb
pop
sbb
dec
aam
sbbl
xchg
or
xchg
and
scas
xchg
ret
inc
ljmp
push
mov
in
mov
mov
imul
pop
call
bound
pop
xor
jmp
neg
fninit
jns
and
mov
add
lods
mov
loope
mov
mov
cwtl
push
mov
cs
subb
xor
mov
jge
cwtl
cmp
mov
pusha
pop
fst
push
inc
xchg
ss
mov
lahf
insb
mov
adc
jmp
jae
leave
inc
negl
add
fsubrp
addr16
push
xorl
add
jno
repnz
adc
xchg
loop
das
jbe
into
clc
xchg
jne
push
jae
arpl
fsubp
data16
out
cmpsl
stos
in
inc
xlat
stc
dec
push
ds
scas
pop
int3
mov
xchg
jg
sarl
and
push
push
xchg
andb
ficomps
pop
jne
dec
jnp
mov
rorl
jge
outsb
out
bound
cmc
push
mov
stos
pop
mov
out
call
cs
aas
jb
cmp
add
cld
test
add
mov
in
pop
rolb
cmpsb
enter
xor
in
and
mov
insb
lods
push
lret
testl
push
leave
inc
sbbl
repnz
cmpsl
inc
in
add
fxam
dec
inc
rclb
mov
or
sbb
div
test
andl
jge
dec
and
cld
mov
jae
mov
in
pop
push
or
repnz
mov
stc
mov
or
aad
stos
cmp
enter
jo
jmp
out
mov
jbe
ljmp
aam
cmp
add
mov
sub
ja
dec
jmp
adc
jmp
cmpsl
xor
dec
insl
test
mov
lock
xlat
outsl
pop
mov
dec
cmpsl
xor
adc
sbb
jae
stc
pop
popf
iret
adc
sbb
test
adc
cld
inc
sbbb
test
lcall
inc
pop
filds
les
inc
jo
mov
pop
sbb
std
jge
or
mov
xor
getsec
mov
outsl
xchg
mov
scas
sub
jae
test
adc
xchg
inc
popf
jp
stc
mov
or
inc
pushf
in
xchg
xor
or
cmp
sub
lcall
rcll
mov
faddl
or
scas
xchg
pop
pop
sbb
lcall
ret
ret
sbb
push
sub
xchg
pop
jae
aaa
push
out
ficompl
lret
loop
dec
sub
int
fsubr
imul
mov
jmp
aaa
xor
push
mov
mov
mov
fsub
add
xlat
xor
mov
sti
daa
test
xchg
cwtl
popa
pop
pop
inc
mov
adc
jo
xchg
fsubs
jae
push
mov
xchg
mov
rorb
test
mov
shl
cld
mov
jnp
cmp
fdivrl
clc
push
jmp
cmp
mov
test
and
addl
in
sar
pop
insb
mov
cld
mov
adc
add
imull
dec
sub
cmc
in
sub
pop
mov
mov
sbb
cmp
test
enter
movsl
les
or
mov
lret
bound
lret
shrl
dec
adc
mov
pop
cmp
xchg
in
aas
jle
mov
out
and
pop
mov
sub
ljmp
and
xor
sbb
cld
repz
lds
testl
xor
jbe
jl
repz
fimuls
jecxz
push
mov
push
mov
pop
pop
pop
mov
test
lcall
mov
mov
aaa
je
stos
dec
lods
or
cmp
popa
repnz
push
and
push
mov
imul
sbb
dec
pushf
fists
push
and
dec
movsl
jne
in
adc
mov
and
mov
rorl
test
mov
xor
fistps
xchg
jbe
fbld
repnz
rol
mov
sti
shrb
sub
and
aam
xchg
mov
roll
ds
int3
lret
mov
add
cmp
clc
stos
xor
or
lds
adc
push
aaa
dec
mov
xchg
cli
lret
fldt
insl
cmp
sub
cmp
mov
cmp
cmpsl
or
jle
shrb
test
sbb
dec
mov
dec
idivl
pop
lods
xchg
ja
xor
jns
test
mov
adc
xchg
les
incb
les
lods
cmp
shll
stos
cmp
or
cmp
aaa
rorb
jb
adc
mov
xor
and
add
repnz
cwtl
imul
ja
je
clc
mov
decl
mov
xor
hlt
mov
jb
mov
out
lds
adc
xchg
jg
pusha
in
bnd
or
xor
inc
mov
repnz
mov
std
outsb
mov
test
outsb
cmpsb
data16
lds
cli
jg
or
dec
mov
pop
jge
jbe
mov
paddd
push
leave
rorl
sub
popa
mov
dec
add
push
adc
push
cmp
aam
leave
xchg
pop
insl
sarb
in
fidivs
outsb
sbb
inc
inc
and
iret
imul
inc
jg
movsl
stc
pop
pop
push
xchg
push
fwait
cli
into
mov
push
fdivl
jns
incl
or
sbb
faddl
cmp
add
pop
add
fistpll
push
dec
outsl
inc
dec
out
or
xor
mov
jg
xchg
jle
mov
jmp
xor
xchg
or
pop
cmp
nop
cli
mov
mov
test
add
fcom
or
loop
xor
nop
fdivl
jecxz
mov
cwtl
cwtl
push
mov
xchg
scas
mov
testb
push
xor
or
adc
add
pop
aad
mov
sbb
clc
pop
mov
repz
fsub
test
dec
loop
or
dec
mov
dec
subb
mov
insl
scas
inc
leave
add
sub
call
insl
dec
bound
dec
out
cmc
inc
inc
jns
push
iret
outsb
cmpsb
jp
push
mov
inc
adcb
aas
cmc
dec
pop
ret
xor
test
mov
inc
mov
repz
mov
mov
mov
jmp
fdivs
xchg
xchg
adc
or
mov
push
imul
flds
sub
and
add
adc
adc
ror
push
xchg
mov
adcb
inc
cli
ret
jne
xor
aaa
ret
fistpll
fwait
lea
dec
inc
fiadds
xchg
cmp
shr
in
dec
repz
xchg
pop
add
adcb
pop
fistl
push
scas
das
imul
cmc
mov
mov
push
mov
mov
pop
pop
mov
lods
mov
imul
sbb
adc
xchg
xchg
jg
sar
dec
xchg
add
dec
and
mov
dec
nop
jge
shll
mov
jmp
sahf
push
int3
mov
lcall
sub
icebp
rolb
outsl
xor
jb
add
or
xchg
cmp
push
or
movzwl
rcrb
inc
fs
lds
cmpsl
xchg
aad
sbb
add
dec
jge
push
adc
or
sahf
mov
and
mov
or
mov
cli
lds
push
cld
pusha
jge
add
mov
movsb
stos
inc
das
cmpb
jmp
or
out
loopne
aad
imul
scas
mov
jecxz
stos
mov
and
clc
sbb
inc
movsl
fwait
into
lcall
pop
es
cs
inc
mov
jo
mov
add
jge
xchg
mov
mov
and
cmpsl
and
xor
or
in
outsb
xchg
arpl
pop
pop
sbb
int3
out
fldz
cmp
mov
in
ljmp
mov
pop
pop
insb
sbb
sbb
adc
or
test
cmp
sbb
cmp
adc
mov
inc
mov
pop
aaa
rolb
mov
or
shll
cltd
outsl
subb
stos
mov
pusha
test
inc
popa
mov
xlat
ljmp
mov
jle
jmpw
mov
mov
test
sbb
call
fidivs
in
mov
icebp
or
testb
sbb
dec
push
mov
stos
inc
xor
test
mov
sti
popf
push
and
cmp
fcoms
mov
cli
push
pop
fwait
mov
in
add
and
push
adc
sahf
fisttpll
mov
fld1
std
mov
xchg
pushl
int3
sar
sbb
ret
daa
data16
mov
hlt
idivl
jg
or
imul
xchg
outsb
xor
push
add
nop
add
xor
add
rcll
pushfw
sti
mov
cmpsl
aas
je
pop
aad
ss
push
rorb
pop
rcl
xchg
push
mov
jl
jmp
mov
inc
lock
sbbb
jnp
sbb
scas
xchg
movsl
imul
mov
jge
pop
push
outsl
jb
add
mov
cld
nop
adc
mov
jns
push
xor
inc
sub
dec
lods
ds
shrb
cmpsb
out
shll
int3
mov
call
sub
adc
adc
mov
test
call
sbb
sub
sbb
cmp
andl
out
daa
sbb
ds
adcl
int
mov
sub
sub
xlat
jno
inc
push
aam
aam
div
xchg
inc
sar
das
nop
imul
fs
cmp
inc
push
ja
je
push
xchg
and
mov
push
int
and
ja
imul
mov
outsb
mov
mov
mov
pop
pop
sub
dec
cmpb
cmp
jp
insb
mov
das
loop
daa
mov
ficoml
xorb
cli
mov
je
push
and
sbbl
fadds
sub
out
rcl
insb
int3
mov
cmpb
xor
jle
push
das
cltd
and
or
insl
dec
mov
fstpt
fdivr
mov
and
lds
lret
clc
cmp
add
cwtl
fsubrl
cli
insl
sti
sub
inc
push
cli
push
inc
mov
xor
sbb
dec
mov
mov
push
xchg
dec
mov
fwait
negb
and
mov
out
rcll
into
std
cmpsb
and
cs
clc
testb
mov
lcall
pop
mov
dec
mov
xor
push
ljmp
pop
adc
mov
lret
shl
enter
xchg
popl
dec
out
or
shll
pop
movsl
call
cmp
ljmp
cld
insl
in
into
pop
test
ret
xchg
mov
and
repnz
gs
fucomip
mov
popa
out
outsb
je
mov
xchg
addr16
shll
sub
stos
xor
mov
xorb
xlat
add
repz
jmp
and
in
std
ret
adc
dec
fldt
into
idivl
js
in
in
aam
sub
js
push
lods
lcall
dec
dec
jnp
sbb
clc
xor
push
adc
loope
cmp
or
adc
cltd
xlat
jecxz
pop
pop
sbb
sbb
push
inc
shlb
sub
int3
sub
cmp
imul
pop
pop
sub
xor
mov
mov
sti
mov
cmp
jne
mov
and
ss
xor
fisttps
ss
mov
in
loop
dec
into
imul
or
repnz
lock
out
leave
aas
cmc
fnsave
fldenv
lods
lret
pusha
push
adcb
mov
cmp
sub
cmp
imul
scas
sub
mov
dec
cs
mov
and
fidivs
int
add
lea
hlt
out
aaa
ds
stos
addl
push
pushf
repz
push
inc
arpl
dec
jp
xchg
push
rorb
push
ds
dec
and
xchg
pop
popa
mov
or
clc
cmovg
mov
iret
mov
lea
jnp
mov
vpsubusb
iret
and
xor
lock
and
or
sub
mov
repz
daa
ret
or
sub
sub
pop
scas
cwtl
ss
aaa
movl
subb
xchg
push
or
dec
jle
in
jecxz
repz
scas
repz
and
js
inc
mov
mov
leave
imul
push
dec
adc
subb
js
lods
add
xchg
push
lret
add
push
or
scas
pop
rcrl
mov
pop
xchg
movsb
out
mov
popa
jb
lret
mov
mov
lock
das
out
or
aaa
jecxz
lret
repz
or
pop
mov
test
cmpb
dec
mov
lret
rclb
fimull
push
adc
popa
or
push
fistl
scas
push
loope
push
pmaddwd
sub
push
sub
or
fnstsw
data16
fnstcw
das
or
sbb
sarl
ror
add
fistpll
fsubrs
stos
pop
ss
les
andb
sub
scas
lret
or
pop
or
test
fldcw
les
add
arpl
call
out
popf
pop
fisttps
dec
sub
fwait
jmp
mov
adc
in
mov
jmp
mov
pop
cmpsb
popa
dec
dec
and
imul
add
adc
xor
addr16
pop
xor
into
sti
insb
lds
popa
addl
cli
std
push
xchg
jno
hlt
add
and
push
ror
mov
pop
and
and
fistpl
and
jb
leave
cmc
adcl
jmp
inc
push
sub
inc
mov
adc
inc
jle
or
cmpsl
add
mov
xor
scas
pusha
arpl
sub
add
shl
mov
jnp
pusha
les
xor
dec
inc
mov
loope
pop
xor
test
pushf
mov
mov
jne
es
icebp
add
test
sub
push
in
or
stos
dec
adc
fcomp
fsub
fimuls
sbb
sub
adc
xorps
out
inc
outsl
jmp
rolb
xchg
xchg
mov
clc
lods
stc
push
mov
fcmovne
test
aaa
js
pop
mov
jmp
push
stos
mov
test
pop
fsubl
sub
lea
or
inc
pop
mov
ret
push
inc
loope
enter
jbe
mov
and
lcall
pusha
xlat
jge
or
pushf
sbb
and
dec
je
out
icebp
jecxz
ret
xchg
push
mov
xlat
jb
fs
pop
fldl2e
jecxz
and
repnz
je
cmp
jg
ss
sbb
cmc
lods
loope
inc
sti
pop
xor
push
ror
inc
push
sbb
adc
push
adc
xor
dec
cmpsl
data16
xor
repnz
pop
es
and
push
xchg
cmp
test
adc
add
test
adc
adc
push
mov
aaa
push
test
call
and
das
mov
inc
adc
sub
pop
push
dec
cmp
jae
push
mov
and
bound
pushf
ret
pop
std
cmpsl
lret
fs
xchg
cmc
xor
add
xor
push
cmp
push
xor
ja
push
ret
dec
adc
mov
ret
sahf
cld
add
data16
pop
jl
mov
dec
mov
pop
test
jb
mov
aas
and
xchg
cmp
cmp
fldcw
pop
inc
jne
leave
cmp
jle
inc
jle
popf
cwtl
jne
sahf
fdivs
enter
in
pop
shll
mov
and
stos
jnp
pop
or
in
dec
pop
cmpsl
mov
imul
sub
and
mov
push
fcompl
and
jecxz
insb
movsl
fwait
or
pop
mov
sub
incb
test
cli
xchg
in
std
jae
jae
xchg
and
push
sbb
enter
push
sahf
ljmp
or
adc
or
adc
stos
xchg
jb
mov
in
push
cmp
xlat
out
imul
and
cli
sub
push
mov
mov
orl
mov
out
cmp
xlat
mov
and
lods
sti
or
nop
cmp
ss
xchg
dec
sbb
in
rclb
adc
jle
adc
fsubr
hlt
sbb
adc
ss
arpl
mov
fmuls
cmp
adc
xchg
sub
cmpsb
and
aam
dec
mov
lock
fcoml
push
loopne
pop
aad
sbb
mov
pop
cmpsb
sub
aaa
in
loop
inc
enter
mov
pop
fsubrl
mov
cmp
inc
xchg
arpl
sti
orl
int
out
icebp
inc
xlat
fdivrs
push
int3
xlat
cmc
cmpsl
loopne
outsb
or
mov
icebp
in
repz
mov
sbb
fsubl
push
add
mov
outsb
push
push
inc
push
pop
lods
arpl
sbb
hlt
sbb
cld
lods
pushf
scas
into
dec
cs
jmp
push
mov
movsl
pop
and
and
fisttps
lcall
cli
mov
inc
sbb
lcall
inc
jle
fs
xchg
fiaddl
sar
fdivs
mov
push
cmp
adc
scas
shr
out
sbb
xor
es
xor
mov
and
mov
test
mov
dec
cmp
cmc
adc
push
sahf
test
push
fcompl
mov
jae
into
push
movsb
jle
mov
in
loopne
addr16
mov
js
and
aad
push
adc
frstor
add
pop
fs
adc
jnp
in
in
and
mov
push
mov
mov
stc
cli
adc
in
xchg
aas
sbb
xlat
inc
cli
daa
aas
pushf
fwait
mov
popf
push
packuswb
jge
jge
leave
mov
adc
in
mov
mov
dec
xor
xchg
sub
jnp
push
mov
add
test
fcoml
push
adc
lret
jmp
rcrl
pop
push
fmuls
mov
sub
mov
call
jle
aad
sub
clc
rcll
inc
and
mov
mul
fwait
stos
jmp
push
dec
dec
std
xchg
dec
jns
adc
xor
int
jnp
rcll
jbe
icebp
es
cli
in
xor
movswl
push
cmc
ret
jmp
pop
stc
xchg
xchg
or
mov
rcll
push
push
gs
fnstcw
cmp
add
xchg
addb
add
cmp
pop
negb
int
sub
cmp
loop
roll
push
or
loopne
movsl
or
orl
mov
adc
aas
inc
iret
jmp
je
inc
xorb
test
popa
sti
cwtl
cltd
cwtl
sbb
adc
fldl
pop
shlb
xor
jno
mov
xor
cwtl
add
xchg
push
add
pop
push
xor
call
in
pop
test
int3
sub
add
or
mov
push
inc
mov
sub
pop
test
test
sahf
or
mov
push
out
iret
je
ss
pmovmskb
es
addr16
mov
mov
push
lret
nop
dec
sti
shll
sbb
or
ds
inc
daa
scas
popf
fwait
arpl
hlt
push
ja
inc
jp
adc
pop
jae
and
sti
pop
fadds
inc
out
movsb
mov
cli
aaa
enter
icebp
jb
shlb
neg
movsl
ror
loope
and
out
add
jmp
and
in
and
ja
cmp
jle
out
fwait
pop
out
sbb
inc
arpl
clc
and
dec
outsl
cmpl
shlb
push
inc
scas
jbe
mov
mov
lea
sbb
call
pop
shll
add
xor
ss
fcom
push
repz
or
adcb
and
mov
cmp
daa
jns
scas
push
mov
push
sub
loopne
fimuls
sti
ljmp
out
clc
jno
ret
push
sub
sbbb
imul
lahf
ds
jns
add
std
sti
dec
jp
sub
inc
sbb
ljmp
jg
pop
das
sub
adc
sbb
dec
test
lret
push
cmp
jle
mov
lock
push
and
mov
std
out
mov
push
arpl
test
jle
pusha
popf
notb
or
inc
inc
int3
jle
outsb
repz
call
and
es
xor
into
jg
mov
loop
xchg
fcomi
inc
mov
cmp
je
leave
loop
sahf
cmp
and
xor
xor
push
and
mov
insb
and
jmp
stos
out
pop
idivl
sub
jnp
sbb
xchg
daa
push
into
xor
or
gs
loope
fbstp
popa
inc
pop
stos
pop
insl
jne
cltd
movsb
psrlw
ret
push
inc
sub
push
pop
mov
gs
cmpb
stos
jle
ljmp
lcall
cld
xor
scas
jg
fwait
mov
sahf
cmp
jg
and
cmc
lods
jbe
sbb
imul
loop
mov
push
repnz
xor
fisubrl
jb
and
cs
cmp
dec
aam
inc
repz
jge
insl
movl
sub
sub
cmp
imul
mov
mov
je
daa
pop
pop
js
shr
jecxz
fwait
or
mov
or
icebp
pop
loope
loope
sti
out
test
lods
in
inc
mov
icebp
sbb
push
mov
mov
inc
mov
mov
ret
dec
pop
push
aam
fldenv
sub
out
mov
out
das
out
xor
cwtl
inc
idivb
xchg
in
imul
and
repnz
dec
push
insb
lret
ret
xchg
popf
repnz
pop
or
push
fs
add
daa
mov
and
fimull
mov
imul
ss
mov
cmpsb
mov
jno
fdivr
scas
stos
or
cltd
insb
dec
mov
and
in
mov
fimull
test
stc
mov
adc
jp
sbbb
int
cmc
jg
cmp
push
inc
rcrb
xchg
mov
mov
ljmp
notl
pop
add
add
xchg
jne
pop
sub
xlat
inc
cmc
int
les
fstps
push
sti
cmp
test
inc
insl
call
mov
bound
in
cmp
into
iret
dec
jo
lret
loope
cmc
sub
mov
aam
pop
push
aas
nopl
arpl
push
movsb
shlb
xorl
out
movsl
jne
test
sub
fdivrl
pop
jl
adc
mov
dec
jbe
push
lahf
xor
sbb
pop
and
sub
and
lret
or
inc
jle
aam
daa
mov
sahf
pop
or
mov
test
mov
jg
lcall
mov
mov
iret
add
rolb
movsb
xor
xchg
xor
movsb
xchg
shrb
leave
insb
pop
test
adc
daa
andl
xchg
xchg
xchg
in
jae
test
xchg
call
push
mov
xchg
inc
inc
push
push
rolb
aas
jecxz
andl
in
sub
pop
mov
mov
std
jle
dec
add
jne
pusha
inc
lock
sbb
or
stos
outsl
movlhps
dec
sbb
std
jp
rcl
fwait
out
cltd
popa
and
add
das
xorl
inc
fdivl
das
and
cmp
push
add
cs
sub
fildll
int3
adc
xorb
ret
or
push
mov
rcrb
pop
xchg
pop
mov
nop
int3
scas
scas
out
nop
in
hlt
cmpb
xchg
fs
mov
pop
out
sbb
nop
adc
jb
popa
lods
hlt
pop
push
movsb
sub
pop
mov
jle
jne
testb
stos
jg
xchg
shlb
push
and
sbb
fstl
std
xchg
pushf
adc
inc
gs
dec
mov
iret
or
cmpl
call
ds
pop
mov
ja
addr16
push
jmp
fldl
push
in
or
add
scas
les
shlb
add
mov
addl
add
fldl
jmp
lcall
lods
pop
enter
test
fwait
xchg
or
dec
lds
push
pop
mov
cmp
stos
addl
xchg
pop
mov
aam
jbe
sub
mov
call
into
cmp
cmp
insb
cmc
inc
mov
xor
les
in
sahf
int
jg
gs
ljmp
dec
jge
and
cwtl
imul
mov
into
pop
xor
scas
cmpsb
loope
mov
xor
xor
leave
inc
jl
jne
mov
popa
and
add
jne
fs
adcl
mov
mov
add
inc
mov
xor
fcoml
xchg
and
popa
mov
les
and
mov
repz
fmuls
lahf
mov
pop
push
xorb
out
jg
xorl
fcomps
in
push
sub
fcompl
jl
fimull
xlat
push
cmp
fisttpll
hlt
sbb
pop
and
cmc
fs
add
push
xchg
push
mov
lret
mov
cmc
in
ss
aam
int
add
aaa
insb
and
push
cmp
testl
lods
jno
mov
movsl
mov
fs
mov
xor
ljmp
mov
jg
popa
fisubs
arpl
in
nop
stc
mov
sti
jecxz
enter
adc
insb
fwait
cmp
lea
adc
cld
add
pop
cs
in
cmp
xor
out
mov
fsubl
xor
cld
insl
xchg
je
fstps
inc
insl
imul
mov
std
sub
inc
or
push
popf
into
push
adc
pop
xor
pop
sbb
xchg
pop
repz
push
inc
lret
mov
lcall
ficoms
cmp
insb
push
inc
lcall
add
cli
ja
mov
cmc
cmpsl
cmc
pop
adc
pop
dec
jno
push
pop
fcompl
sub
es
lret
inc
and
fxtract
fldenv
pop
mov
sub
rcrl
push
mov
xor
neg
xchg
fsubs
sbb
and
and
insl
mov
push
xchg
pushf
xchg
jno
cmp
or
int3
std
sbb
adcb
pop
in
add
push
dec
gs
rcl
out
cmc
pop
test
dec
push
js
and
mov
js
dec
rorl
dec
movsb
and
pop
cmp
mov
dec
inc
dec
or
in
out
dec
jp
mov
pop
push
sub
out
cmp
movsl
fidivrl
cmc
into
jae
dec
jae
or
inc
or
xchg
inc
test
lds
mov
lahf
pop
xchg
sub
and
add
jle
les
clc
add
mov
mov
xchg
call
mov
hlt
and
mov
fcompl
mov
cmp
cmp
pop
adc
xlat
das
cmp
dec
mov
xlat
xchg
sub
push
insb
jo
ret
mov
ljmp
and
sbb
fisubrs
stos
stos
jg
daa
lock
adc
xor
inc
sub
mov
cli
mov
xlat
cld
pop
mov
sbbl
fistpll
and
xchg
xchg
inc
lret
in
adc
mov
stos
sahf
aaa
ljmp
int
mov
popl
in
xor
scas
inc
fcmovnbe
xor
mov
cld
sbb
mov
dec
mov
and
pop
mov
call
data16
ffree
pushaw
mov
rorb
inc
cmc
mov
ljmp
pop
in
loop
jg
mov
pop
jno
add
in
andb
adc
adc
xchg
jae
rorl
sbb
xor
mov
adc
sti
inc
sub
pop
pop
push
xor
clc
shr
sbb
dec
sti
sti
shr
arpl
out
pop
dec
and
xchg
out
int3
mov
call
icebp
inc
test
shlb
sub
fiadds
flds
xchg
mov
xor
add
das
daa
xchg
repnz
xchg
test
ds
sar
mov
movsb
mov
mov
pop
adc
stos
cmp
mov
das
rclb
out
jbe
or
dec
inc
push
mov
shlb
xchg
out
jb
jbe
mov
pop
xchg
iret
xor
imul
lods
inc
jmp
subl
test
into
adc
test
sub
repz
outsb
stos
inc
pause
das
je
pop
sbb
shl
xor
mov
mov
adc
adc
je
xchg
movsl
adc
mov
cmp
in
nop
aaa
fwait
jmp
or
out
mov
add
jno
jmp
ja
jg
cli
pop
insl
cmp
xor
mov
fnstcw
jae
xchg
dec
icebp
mov
test
mov
scas
or
xor
xchg
leave
dec
sbb
xchg
lahf
add
imul
stos
xor
pushf
fabs
xor
mov
push
xor
add
sqrtps
cli
dec
cli
push
bound
call
xchg
rorb
or
and
pop
jge
mov
sbb
xor
outsb
sub
jne
lods
lret
jp
in
aaa
push
outsl
fcmovu
inc
push
jns
dec
or
jle
test
xor
push
xchg
jno
arpl
xor
jl
add
cmpsb
jo
out
dec
or
aas
or
xor
push
in
out
ljmp
jmp
or
popf
lds
or
lret
cmc
xchg
cs
adc
jp
in
xor
pushf
movsb
loop
sbb
cwtl
cmp
popa
pop
xlat
das
add
adc
jg
and
mov
scas
push
out
jl
fiaddl
and
push
loope
out
loopne
shll
dec
popa
clc
cli
jbe
lock
mov
imul
add
rcll
shrl
stos
mov
add
cmc
aaa
inc
std
jne
cmp
ret
clc
inc
cmp
push
insb
in
ja
les
cmc
loope
add
int3
mov
jne
dec
cwtl
jo
jno
orb
cmp
add
ret
scas
or
sti
add
sahf
push
loopne
cmp
jp
push
imul
ret
or
lock
dec
or
xchg
lcall
ret
test
mov
mov
dec
push
imul
dec
rorb
push
xchg
xchg
jb
jns
dec
jb
leave
addr16
ljmp
jb
sub
sti
lret
or
hlt
test
cmpsl
mov
cwtl
mov
pop
fidivrl
aad
add
insl
jb
leave
popf
aad
inc
loope
popa
jmp
aam
mov
mov
xchg
aas
jae
jp
int
dec
lcall
push
sub
jmp
sbbl
mov
pop
jbe
enter
pop
fsubl
rcll
test
or
push
cmp
sub
inc
dec
call
push
enter
div
push
xchg
fists
and
cmpb
test
adc
fwait
loope
cmp
jns
stos
sub
sub
mov
mov
decb
mov
ror
shlb
mov
cmp
push
pop
xchg
push
fisttps
shl
add
push
inc
and
mov
movsb
push
add
mov
jmp
test
enter
repnz
cmp
cmp
sbb
xchg
sbb
into
or
adc
fadds
movl
xlat
out
cmp
insb
rcr
mov
inc
rcrb
xchg
daa
xorb
in
inc
cmp
inc
xor
std
es
bnd
jmp
add
push
lahf
pop
fistpll
cld
inc
push
enter
ffree
movsl
shll
adc
adc
mov
shl
mov
cmp
add
push
fadds
lcall
add
pop
inc
scas
jge
sti
mov
je
sbb
jecxz
push
jecxz
out
lds
ja
rol
adcb
dec
enter
out
sub
mov
iret
bound
icebp
add
push
dec
lret
loop
mov
sbbl
lret
jle
scas
out
test
popa
fs
clc
jge
xor
nop
jmp
mov
jmp
adcl
aad
add
daa
adc
add
cs
and
sbb
fistl
sub
shlb
xchg
cli
or
push
mov
mov
adc
lret
imull
inc
out
mov
test
jo
xor
mov
mov
dec
bound
in
jb
ja
push
rcl
cltd
ret
dec
ds
lea
cmc
add
mov
test
scas
sbbl
cmp
fldenv
jnp
dec
das
or
sbb
das
mov
xchg
sti
aam
test
or
inc
sarl
add
aam
mov
out
js
add
out
loopne
leave
dec
addw
cld
cmp
ja
jge
jge
cmp
orb
cmp
popf
rcl
rcrb
or
and
fidivs
cli
xor
sub
test
pop
rorl
out
xor
xor
fstpt
rcl
dec
int3
jle
outsb
cmpsl
cld
push
enter
push
cmovp
jecxz
xchg
push
or
push
sti
mov
scas
aaa
jl
lret
loopne
inc
icebp
test
ja
push
cld
fnstenv
lds
and
lret
cwtl
push
sbb
lods
sar
and
mov
fnstsw
test
fcoms
shrb
push
mov
mov
inc
addb
mov
movb
push
leave
cwtl
loop
sti
add
loope
fdivr
jmp
stos
lret
test
stos
or
adc
xlat
jp
xor
fmuls
push
inc
stos
xchg
jae
aad
test
mov
psubq
negb
or
or
ja
jg
xor
hlt
xor
xor
notb
aaa
movsl
bound
in
push
in
sub
adc
mov
or
outsl
push
sub
mov
lds
jle
pop
aam
sub
adc
popa
inc
lahf
testb
iret
scas
inc
mov
mov
fdivrs
cli
insb
daa
cmp
inc
stos
lods
addr16
fisttpll
cwtl
or
sahf
add
aaa
scas
lods
daa
mov
outsl
imul
cltd
mov
orb
les
ret
mov
xchg
imul
mov
iret
push
loopne
adc
fldcw
movsl
mov
test
hlt
outsb
gs
stc
push
sbb
loopne
push
and
add
test
push
call
jle
mov
std
xor
sbb
je
fisubs
shlb
cmp
arpl
hlt
imul
add
test
loopne
inc
movsb
cmc
sub
stc
cmp
xor
inc
mov
in
mov
lahf
jns
out
iret
cmp
xchg
adc
jp
jmp
xchg
call
fldenv
and
loopne
dec
mov
pop
cld
or
sub
daa
cmp
lds
fcmovnb
lcall
aam
ja
shrd
pusha
fwait
inc
mov
add
sbb
rolb
mov
xor
jg
mov
lods
lcall
lret
bound
push
adc
out
xchg
xor
lret
into
rorb
int3
sub
adc
xchg
inc
das
xchg
aam
insb
sub
imul
leave
gs
inc
rorl
mov
add
mov
loope
add
xor
sub
xchg
or
push
pushf
push
jg
repnz
in
aam
and
cli
pusha
repz
js
jae
xor
or
and
xor
xchg
push
stc
xchg
movsl
push
xlat
jne
adc
pop
or
out
aad
leave
and
mov
dec
fsubp
xchg
lods
mov
pop
mov
pushf
or
mov
and
je
mov
push
or
in
dec
loopne
loop
sahf
test
sub
adcb
cmp
push
add
test
cmc
cmpsb
push
pop
xor
mov
imul
and
out
mov
pop
lret
lods
icebp
push
enter
shlb
fucomi
shll
push
dec
adc
add
push
pop
sarl
cmpsb
push
lahf
mov
mov
sbb
pop
pop
mov
mov
pop
xchg
inc
lahf
inc
push
outsb
lods
xor
add
xlat
dec
sub
pop
pop
testb
dec
or
sbb
scas
int3
or
pop
push
dec
movb
dec
ljmp
lds
push
mov
lods
inc
cwtl
adc
mov
repnz
xchg
leave
push
cmp
aaa
jb
inc
test
shrl
fmulp
cmp
je
les
loop
push
adc
and
mov
and
cwtl
push
pushf
packsswb
adc
fs
cmp
stos
das
int
sub
mov
jmp
outsb
leave
push
mov
addr16
mull
cmpsl
pop
int3
xchg
aam
mov
pop
shll
cld
jb
ss
mov
dec
aad
lcall
fs
rorb
js
push
ror
dec
outsl
mov
les
mov
out
xchg
lahf
sbb
mov
add
push
test
rorb
sar
mov
sbbl
sub
inc
cmpsb
xchg
pop
bound
cmp
mov
mov
pushf
sbb
mov
cmp
dec
push
bound
ljmp
fdivrl
addb
or
fiadds
and
nop
xor
movsl
cld
mov
xor
cmp
mov
sbb
popf
mov
mov
lds
sbb
cmp
aam
test
jno
cmpsb
push
icebp
xor
lea
push
push
aad
xchg
stos
in
stos
aad
and
sbb
negl
add
jl
push
fnstenv
hlt
nop
pop
mov
cmpsl
jp
add
rorb
fisubs
lret
repnz
notl
mov
sbb
or
jno
mov
ret
test
cmpb
dec
ljmp
ljmp
cmpsl
int
xor
pop
push
push
cwtl
bound
push
inc
movsl
xchg
imul
pop
aas
out
loop
lret
iret
and
scas
jb
out
into
xor
fisubrs
or
mov
les
mov
jbe
movb
in
xor
pop
cmc
add
jmp
lock
or
sub
xlat
cs
cmpsl
or
test
push
sbb
ds
js
xor
cltd
stos
ljmp
inc
or
cli
push
scas
sbb
fsubl
in
add
into
adc
mov
cmpsl
or
pop
sbb
or
jge
jae
jno
ljmp
dec
pop
loope
hlt
xor
hlt
fsubl
push
xlat
loop
lods
out
daa
jge
mov
iret
or
pushf
out
adc
cmp
shrb
xlat
dec
push
fdivs
sbb
xacquire
sbb
enter
lret
jo
mov
lds
jo
scas
fnstcw
pop
or
incb
dec
cmc
add
jg
sub
pop
xorl
xor
inc
xor
fbstp
and
in
xchg
js
pop
cmp
leave
scas
jecxz
leave
popa
enter
lcall
push
xchg
iret
mov
loopne
movsl
dec
push
and
jp
ja
inc
es
pop
xchg
push
sbb
jne
pop
xchg
in
fcomi
jae
test
mov
adc
daa
lret
cmp
and
lret
sub
iret
mov
add
inc
adc
or
test
mov
pop
int
mov
movsb
mov
sub
out
arpl
mov
adc
hlt
sub
or
fs
fdiv
sub
lods
adc
sbb
jge
fildll
jae
fs
pop
out
mov
pushf
insl
int
inc
cmc
mov
sub
jne
pop
push
jmp
sbb
pushf
jns
cld
jp
xchg
loopne
insl
xchg
add
push
dec
lea
mov
enter
stc
jecxz
pop
stc
adc
xlat
ja
inc
je
sti
pop
xchg
scas
sub
xor
ficompl
mov
outsl
xlat
mov
f2xm1
repnz
nop
movsb
and
add
in
push
add
cli
push
pop
hlt
out
or
idivl
mov
mov
mov
jle
out
pop
mov
xchg
xchg
jecxz
xchg
inc
sbb
xchg
idivb
mov
cmpb
mov
test
stos
sbb
lcall
cmpsl
jmp
icebp
mov
pop
mov
inc
push
xchg
mov
lret
inc
lret
mov
inc
stos
shll
add
call
inc
sbb
es
mov
sub
pop
out
jnp
push
xor
adc
pop
sbb
sbb
xor
cwtl
popa
xchg
cmp
xchg
and
insb
ljmp
sub
sub
or
ror
cltd
in
sub
aam
mov
xchg
push
scas
aad
addl
mull
test
outsl
out
outsb
and
jl
jb
lock
jg
popf
enter
divl
scas
in
or
aas
sbb
adc
lcall
ficompl
pushf
ss
xor
mov
lea
xchg
inc
pop
pop
mov
int
dec
mov
mov
mov
mov
das
repnz
test
out
dec
push
loopne
jg
rolb
pop
mov
insb
sub
shl
push
ss
sub
vmovapd
push
je
jo
nop
sub
das
addr16
pusha
int
sub
mov
aaa
sub
jae
loopne
hlt
dec
iret
ljmp
pop
insl
or
cmp
scas
test
push
mov
test
push
hlt
clc
mov
aad
stc
loope
into
or
sub
movl
stos
aam
push
push
scas
jns
pop
ret
imul
or
inc
or
int3
test
adc
mov
mov
sub
pop
dec
aas
pop
jbe
mov
cmc
sub
pop
mov
adcl
mov
dec
xor
idiv
leave
lods
test
sub
or
cld
jge
js
cwtl
add
sbb
inc
call
les
test
mov
push
bound
icebp
adc
mov
rolb
in
cmp
xchg
ds
fwait
or
xlat
jmp
negl
xchg
inc
ret
idivl
pop
mov
jp
sbb
xor
jno
call
dec
pop
jb
ja
test
test
rcl
push
xchg
sub
scas
in
adc
and
and
mov
and
test
lods
pop
sub
jge
or
jp
cld
mov
jle
dec
cli
fldcw
or
xor
inc
sbb
ffree
loopne
fucomp
sbb
xchg
pop
daa
out
movsb
jg
dec
popa
addr16
mov
stos
gs
cmc
jp
xchg
or
pusha
jp
jne
test
add
adc
dec
xchg
es
sbb
repz
dec
imulb
add
out
movsb
ficomps
or
jle
adc
mov
pop
cmp
es
daa
jno
insb
mov
lds
mov
jl
xchg
dec
jecxz
push
jo
dec
or
mov
leave
lods
jecxz
adc
push
mov
cmp
jno
push
fimull
mov
push
imul
xorl
jmp
jb
out
inc
outsb
das
scas
mov
cmpsl
inc
xor
jle
out
data16
loopne
popa
clc
jno
mov
ljmp
ffreep
pop
ds
fcom
pop
bound
daa
sbb
inc
and
fstps
cld
test
dec
jne
movsl
or
mov
inc
adc
mov
xchg
adc
mov
scas
sbb
leave
sub
cmp
push
sub
scas
or
ss
jns
cltd
cs
push
cs
fistpll
out
in
mov
lds
sti
cld
xor
mov
mov
cmp
lahf
xchg
int
iret
sbb
les
adc
jno
inc
nop
sbb
jne
outsl
push
or
inc
in
jbe
mov
iret
aam
pusha
dec
scas
sbb
xor
pop
adc
js
add
aad
fnstenv
or
jae
leave
cwtl
sbb
aas
mov
dec
push
movsb
in
cmp
outsl
add
in
fdivrs
pop
mov
jno
and
sub
gs
jae
test
cs
loope
sbb
popa
idivl
sub
dec
jmp
sbb
loopne
roll
inc
ds
mov
pop
and
addl
mov
jle
push
sbbl
mov
outsl
jecxz
loop
jmp
filds
add
jns
cltd
in
cmpsl
das
mov
mov
inc
ljmp
or
ret
jbe
jp
das
inc
imul
jns
mov
dec
xor
andl
aas
movntps
adc
cld
bound
push
mov
or
outsl
and
lea
cmp
adc
sbb
lcall
or
push
push
push
les
push
hlt
xchg
mov
cmpsl
inc
out
push
cli
out
nop
xchg
add
out
jns
jg
xchg
enter
lods
jae,pt
push
fistpl
cmc
mov
mov
pop
mov
insb
in
into
test
and
lds
ja
sub
mov
lret
dec
xor
xchg
pop
les
repz
leave
enter
sub
mov
or
adcl
repnz
subl
sub
sbb
mov
dec
rolb
add
aad
test
pop
enter
cmp
xchg
add
ret
nop
outsb
stc
fisttpl
push
movsb
mov
mov
daa
sti
negb
cmp
arpl
cs
shlb
pop
pop
pop
out
ret
jae
xchg
push
pop
mov
lret
mov
mov
inc
fwait
cvtps2pi
xor
push
pusha
test
jmp
add
test
pop
sbbb
xor
bound
imul
xor
bound
dec
loop
add
adc
mov
scas
mov
andb
inc
jg
pop
imul
and
pop
bound
mov
hlt
mov
jle
mov
cmpsl
rcrl
loope
and
movsl
lahf
int
test
and
fimuls
or
movsb
imul
cmovle
xor
in
fwait
out
aam
adc
outsb
filds
dec
sub
in
push
sti
dec
dec
push
jp
loopne
aad
insb
mov
mov
int
mov
cli
testl
pop
push
and
xchg
push
sarl
aas
xchg
xchg
cmp
push
lret
dec
lret
sahf
stos
sbb
iret
push
inc
lret
add
and
pop
add
fstpt
roll
stc
mov
fldcw
mov
or
mov
je
cmp
out
inc
jnp
mov
aas
jb
sub
repz
cmp
jecxz
scas
cmp
pop
cmp
stc
pushw
lods
xchg
xchg
jmp
pop
orb
pop
and
fbstp
push
inc
cs
out
sub
push
inc
jecxz
add
sub
sbb
inc
dec
add
sbb
enter
lods
sub
pop
or
sbb
pop
and
or
fwait
adc
movsb
ret
xor
xchg
fidivrs
adc
jmp
xchg
div
or
rorb
movsl
adc
pop
sbb
mov
out
mov
mov
lcall
fnstcw
mov
test
and
lock
pop
jmp
adc
cltd
and
mov
or
or
mov
mov
and
add
dec
push
fdivl
ret
jae
sub
sahf
sahf
sub
mov
lock
sub
neg
cs
adc
adc
sahf
fstpl
ret
movsb
xchg
add
repnz
outsb
mov
jp
mov
xchg
lock
jp
mov
add
jle
aas
cs
xchg
mov
leave
cmpsb
adcl
mov
push
adc
insl
fs
sbb
ljmp
cmp
out
adc
push
pusha
aam
inc
mov
mov
in
jg
test
repnz
adc
movsb
aam
negb
ja
dec
xchg
pop
cld
xor
cld
in
xchg
xchg
mov
aas
and
xchg
mov
xor
mov
je
es
fisubs
jnp
xchg
dec
les
or
gs
mov
push
aad
jge
sbb
add
int3
sbb
mov
and
sub
divl
into
inc
xchg
js
movsb
or
mov
add
mov
jge
stos
fs
ret
stos
inc
mov
mov
shll
cmp
push
adc
lds
sub
dec
or
push
popl
arpl
pop
mov
cmpsb
mov
repz
jns
sbb
jmp
push
or
push
jb
sarl
mov
inc
sub
xchg
fcoml
mov
adc
sbb
int3
pop
add
sahf
xchg
jmp
mov
scas
xchg
int
and
enter
cmp
es
push
push
and
mov
fsubrl
divb
fldenv
ja
dec
xchg
lock
sbb
mov
and
sbb
jns
sahf
nop
cmp
js
sub
adc
mov
test
call
sbb
lods
jnp
subl
inc
cmp
xchg
enter
mov
push
mov
cmc
fdivl
mov
mov
sbb
popa
hlt
roll
mov
jb
cmp
lret
jnp
mov
pushf
xor
cmpsl
push
push
aas
or
in
xor
iret
outsl
mov
xlat
cs
xor
cmc
sbb
mov
pop
stos
insl
loope
cmc
and
rcrl
xchg
pop
nop
add
jp
mov
push
pop
mov
fiaddl
jecxz
aam
xchg
fildl
inc
jbe
imul
insb
addr16
repnz
cwtl
mov
test
loope
push
insb
cld
add
pop
or
subl
pushf
jmp
aas
cmp
sub
mov
into
test
ja
rcll
test
pushf
or
in
fstpl
jge
sbb
mov
xchg
dec
lods
mov
dec
test
shrl
jmp
aaa
gs
and
adc
fsts
sub
dec
xchg
jno
lock
lret
mov
inc
orb
out
add
in
mov
int
mov
loope
test
add
aam
scas
sbb
xorb
xor
pop
loop
loopne
mov
sbbb
cmp
insb
adc
inc
jbe
mov
push
mov
gs
mov
rcrb
pop
xchg
in
lret
arpl
frstor
dec
mov
stc
jne
cmp
cmp
lret
fisubs
mov
xor
sub
push
jo
sub
inc
mov
notb
dec
xor
insl
into
outsb
jne
mov
rcrb
jne
and
dec
lret
xlat
cwtl
and
pop
shl
adc
in
roll
sbb
icebp
add
xor
scas
and
leave
lods
push
jge
icebp
mov
pop
jno
int3
fidivs
adc
in
lock
pop
test
call
subb
mov
dec
push
inc
mov
loop
dec
ss
or
mov
into
pop
adc
xor
dec
mov
jecxz
add
inc
sbb
add
xchg
lods
imul
je
fiadds
hlt
test
adc
push
pop
add
pusha
cmpsl
add
ljmp
sub
jne
lret
xor
test
mov
push
daa
dec
and
fdivs
or
jae
lret
fistpl
or
ljmp
xchg
pop
fcompl
mov
pop
sbb
mov
xchg
mov
popa
mov
or
repnz
leave
je
ret
subb
scas
xor
dec
lds
xchg
fwait
outsl
pop
scas
push
mov
mov
pusha
lods
xor
mov
mov
lahf
pusha
jb
gs
hlt
shrb
outsl
dec
outsb
pop
sub
out
jle
or
mov
leave
mov
mov
lahf
ffreep
in
fs
push
sub
sahf
test
xlat
sub
jp
mov
or
sub
sub
fidivl
in
popf
cwtl
mov
push
loop
xchg
sub
nop
mov
aam
mov
cli
nop/reserved
pop
ds
jbe
scas
mov
add
decb
aad
ss
in
fcmove
inc
in
insl
loopne
fistpll
sub
jns
jae
cmp
adc
mov
inc
je
inc
insl
pop
mov
push
js
insl
andl
mov
push
mov
push
clc
dec
leave
mov
or
lds
pop
mov
daa
xor
lods
or
pop
aam
fcomps
push
fdivs
or
fnstsw
xor
mov
push
mov
mov
loopne
outsl
mov
ss
sbb
push
testb
xchg
push
dec
push
in
sub
fstl
and
pushf
loop
cmpsb
and
enter
jle
js
adc
addr16
dec
hlt
imul
fstl
cmp
sti
ret
push
stos
mov
aad
dec
fdivl
loope
mov
jp
shrl
mov
andl
test
jmp
mov
jo
pop
jle
imulb
cmpsl
int
push
xor
xor
repnz
dec
mov
add
dec
loope
fdiv
mov
or
fwait
test
in
mov
sub
xor
push
jb
mov
sub
rcrb
mov
insb
fucomi
mov
cld
adcl
dec
sbb
mov
es
push
scas
cmpsl
outsl
lret
pop
mov
xor
stc
jnp
test
fildl
std
xor
js
out
in
sub
cwtl
in
cltd
adc
sbb
loopne
add
or
jle
dec
push
inc
jbe
cmpsb
fcom
push
js
dec
push
jmp
es
loope
pop
call
in
popa
cs
iret
mov
dec
stc
jno
jno
int
xchg
ja
sbb
mov
mov
icebp
mov
xchg
sub
testl
les
cmp
lods
cmp
lret
stos
stc
in
dec
ror
movsb
jns
inc
sub
lock
aaa
sbb
shrb
fimuls
mov
fwait
push
leave
cmpsb
ljmp
ret
and
es
xchg
lea
inc
lea
fadd
js
or
inc
push
mov
inc
xlat
adc
lds
push
pop
sbb
hlt
in
mov
mov
jbe
pop
aaa
inc
xchg
mov
scas
push
cmp
fmull
pop
dec
mov
clc
int3
xor
mov
in
jns
repz
in
xchg
xor
jo
add
push
test
ret
shl
jno
cmp
movsl
gs
insl
and
and
sub
fldcw
sbbb
inc
jb
fwait
jb,pn
mov
test
iret
pop
hlt
jle
inc
std
repnz
fstps
sub
lret
add
mov
or
jge
cltd
outsl
push
mov
dec
jno
pop
loopne
push
xor
jb
mov
ret
pop
test
cmp
or
mov
sbb
push
dec
mov
loopne
cmpsl
dec
add
inc
inc
push
adc
lret
data16
or
push
ret
sar
bound
dec
xchg
pop
orb
inc
int3
pop
and
leave
cmp
hlt
add
int3
mov
in
stc
mull
sbb
icebp
or
jp
cmp
xchg
lea
add
pop
add
adc
pushf
xorl
imul
pop
xor
fsubp
aad
rcrl
lret
rorl
inc
dec
pop
add
adc
test
mov
xor
rolb
pop
push
xor
out
int
pusha
sub
hlt
mov
std
in
ds
mull
daa
iret
das
mov
pushf
daa
shrl
adc
sbb
mov
cmp
sbb
jne
popf
mov
inc
popf
inc
stos
ds
xor
mov
pushf
mov
dec
ljmp
sub
add
js
in
icebp
pop
iret
dec
movsb
push
faddl
movsl
mov
in
dec
adc
inc
cwtl
fcmovnbe
pop
inc
xchg
mov
mov
icebp
xchg
cmpsb
fisubs
xchg
cmp
enter
cltd
xor
add
mov
test
repnz
andl
mov
cltd
xchg
xor
or
push
add
push
xchg
push
push
or
bound
pop
push
popf
mov
push
test
dec
dec
dec
test
pop
out
jbe
xor
in
push
xlat
cli
jo
mov
cmc
add
cmpsl
xor
mov
xchg
xor
fdiv
pop
je
or
jg
addb
sub
das
rol
outsl
roll
pop
or
lods
push
movsb
incl
mov
jnp
jg
and
lods
into
icebp
dec
cmp
outsl
idivb
mov
rclw
cmp
pop
mov
adc
shlb
mov
dec
nop
out
arpl
push
jno
loope
std
nop
inc
cmpl
xor
aam
aas
sub
in
mov
jne
cli
aad
jmp
pop
sbb
jecxz
push
adc
jg
push
inc
std
mov
pop
daa
mov
into
lret
adc
cmp
sbb
dec
fxch
mov
fwait
test
sbb
xchg
jg
lds
mov
jb
cltd
cmc
cltd
test
mov
mov
sbb
adc
pop
fwait
daa
and
cli
push
sub
jbe
shlb
ficomps
pop
test
loope
xor
or
xchg
js
adc
mov
push
out
sub
insb
clc
aaa
add
xor
jecxz
push
mov
out
cmovl
outsb
push
jne
mov
xchg
scas
scas
repz
jbe
insl
cs
sbb
xlat
mov
inc
mov
dec
cmp
mov
add
lahf
inc
fmul
fwait
adc
jae
pop
clc
mov
push
ret
insl
rclb
sub
mov
mov
cmp
dec
rcrl
cmpsb
in
ret
ror
or
sarl
fisttpll
jp
insb
leave
cmpsl
adc
sbb
mov
jp
mov
test
xor
xor
jns
std
pop
stos
or
jo
mov
sbb
insl
les
mov
rcll
cmp
cmp
test
adc
push
subb
inc
mov
in
dec
enter
popf
decl
imul
pop
xor
cmp
ret
add
imul
lods
shlb
stc
out
arpl
imul
and
cmp
adc
loop
mov
push
movsl
jmp
add
jmp
xchg
sub
cli
xor
ret
pop
push
push
sub
jg
inc
lcall
pop
rclb
pop
xchg
mov
lret
pop
outsb
pop
std
sbb
cmp
xor
jo
jbe
mov
cmpsb
sub
fmulp
hlt
inc
mov
shlb
lcall
rorl
xchg
test
mov
pushf
shl
mov
lahf
jmp
jl
jno
sbb
xchg
ljmp
jno
xorl
adc
xchg
mov
shrb
xor
loopne
xchg
imul
push
ret
vmwrite
fsubl
mov
or
dec
cmp
add
adc
pop
add
inc
mov
fcoms
aas
ret
shlb
stos
sub
addr16
mov
out
mov
jae
mov
dec
scas
dec
and
sub
or
outsb
test
and
jbe
leave
and
std
rcr
mov
std
imul
fsub
push
into
mov
xchg
test
fcmovu
add
mov
mov
movsb
xchg
outsl
xorb
ljmp
mov
popa
lahf
adc
add
mov
jge
mov
mov
aam
ret
ljmp
dec
add
scas
nop
gs
push
xor
mov
scas
arpl
sbb
mov
cld
mov
mov
inc
mov
jmp
sarl
or
test
pop
aaa
pop
inc
adc
jbe
test
out
add
arpl
mov
or
cmpsl
pop
lock
stos
xchg
scas
test
add
cmp
fisttps
xchg
or
rcrb
sahf
inc
rcr
iret
inc
inc
fsts
imull
mov
cs
push
rcll
clc
cmp
mov
shll
fs
sbb
jne
jno
rcll
cmp
into
push
std
gs
test
inc
push
push
mov
aam
lcall
loop
lods
mov
mov
add
push
push
jle
push
mov
stos
les
inc
xor
lods
dec
sbb
testl
and
sarb
dec
mov
lds
mov
pop
push
aam
mov
loop
scas
mov
xorl
push
pop
xchg
jmp
push
popa
lret
push
pop
inc
das
jmp
mov
insl
sbb
dec
dec
push
loope
rcrb
push
jle
xchg
out
jge
pop
testb
sahf
mov
stos
lcall
and
ret
mov
inc
inc
cmp
xor
fidivl
add
faddl
pop
add
mov
pop
ficoms
sbb
mov
lds
cmp
out
xchg
ljmp
mov
fstl
jb
cwtl
push
in
mov
sub
cmp
lea
cld
je
rcll
mov
repz
shl
jns
lcall
jnp
clc
push
in
test
adc
push
lcall
andb
sarl
xlat
xor
sarb
bound
cmp
jns
ret
pop
inc
jecxz
cmp
dec
enter
mov
mov
mov
subl
mov
ss
mov
pop
fiadds
xor
in
lret
dec
xchg
xchg
pop
stc
jnp
sar
in
or
test
sbb
mov
filds
push
add
in
or
arpl
xchg
sti
dec
lock
fs
aad
cmp
pop
ljmp
mov
test
ljmp
jns
stos
cli
scas
lea
decl
nop
mov
sbb
das
dec
add
jp
fdivs
aad
sbb
mov
mov
and
sbb
sub
nop
mov
cmpsl
test
les
jl
leave
fdivrs
and
fwait
jl
mov
xor
jno
adc
nop
push
imul
rolb
and
clc
cli
xor
fnstcw
push
and
mov
ljmp
enter
mov
sahf
movsb
scas
lods
mov
cmp
inc
test
cmp
stos
addr16
mov
mov
in
xor
data16
or
push
and
loopne
xlat
xor
movzwl
test
mov
jmp
test
inc
loopne
inc
cmpsl
jle
dec
push
mov
hlt
loop
pop
add
cmc
lcall
inc
mov
inc
add
pop
mov
cmc
mov
add
lret
dec
jae
cmp
sarl
sbb
daa
sub
pop
addb
and
push
xchg
fistpl
sti
dec
lret
or
lds
or
dec
sbb
xor
popa
mov
out
lahf
mov
ss
call
lods
or
cmpsb
out
idiv
fisttps
jp
jae
xlat
push
mov
addr16
imul
enter
das
imulb
lds
inc
xchg
xor
cmp
sbb
jl
dec
or
in
stos
clc
xor
jns
xor
mov
xchg
lss
call
inc
pop
addr16
popa
adc
ret
mov
outsl
or
test
cmp
sbb
negl
je
mov
xor
rorl
idivb
ss
loope
mov
add
mov
lret
jge
xor
imul
fwait
popa
mov
shld
push
das
lahf
sub
mov
movsl
int
push
mov
or
adc
pop
jnp
ljmp
sbbl
adcl
add
out
fst
popf
stc
dec
pop
jnp
add
dec
jae
stos
leave
mov
add
mov
js
movsb
subb
pop
or
fiaddl
lods
xchg
push
jne
sub
lods
pop
imul
lods
cmp
faddl
mov
in
outsb
sbb
mov
pop
cmp
cmp
bound
pop
adc
mov
jb
fnsave
sub
mov
push
xchg
test
loopne
jecxz
dec
mov
add
xchg
gs
mov
fwait
dec
arpl
pop
test
mov
sub
jns
insl
adc
sub
mov
push
mov
sahf
adc
jmp
cmp
add
push
add
push
add
push
jmp
sbb
mov
stos
mov
cld
xchg
or
and
xchg
in
jno
scas
mov
xchg
jge
fistpll
add
or
pop
sbb
xlat
std
arpl
xchg
inc
in
stc
cmp
sub
push
sbb
pop
dec
mov
pop
mov
loopne
stos
inc
pop
lahf
xchg
mov
dec
dec
cld
push
cld
lods
leave
mov
pop
inc
jmp
in
push
pop
mov
xor
nop
adc
cmp
movsl
ss
daa
adc
jmp
mulb
sbb
lret
insb
call
pop
iret
jmp
or
adc
mov
mov
jbe
sbb
jne
in
jp
xchg
push
adc
test
test
mov
shr
shll
ss
int3
in
test
stc
enter
sub
cmpsb
jb
scas
iret
shr
mov
jg
pop
mov
std
add
push
fidivs
cmpsl
imul
pop
roll
std
outsl
sbb
xchg
movsb
inc
popa
adc
faddl
cmp
inc
fcompl
xchg
push
lret
add
dec
sub
jl
and
jg
add
popa
loopne
jb
cld
cmp
push
sub
out
mov
in
push
add
and
add
lret
aam
pop
push
pop
cs
jecxz
cs
and
fisubs
lock
aam
pop
sbb
movsl
lcall
lods
in
and
lret
inc
add
lea
push
sbb
mov
lcall
sbb
sarl
or
inc
cwtl
ja
push
sub
sub
mov
sbb
cmpsb
popa
jecxz
loopne
mov
add
dec
pop
inc
jo
jl
pop
test
movsb
sub
ja
add
icebp
mov
inc
mov
insb
mov
mov
dec
adc
xchg
rcll
cmpsb
and
pop
je
rcll
shll
pusha
std
ja
pop
punpckhwd
xor
in
pop
and
cmp
out
stos
outsl
adc
ret
sub
lret
scas
inc
fnclex
jge
add
ds
mov
test
pushl
push
inc
mov
jnp
addr16
sahf
imul
addb
addl
push
fsubrl
add
popf
xchg
pop
test
mov
mov
add
jne
or
pop
scas
sbb
push
cmc
fsubrl
or
and
add
aam
jbe
pop
out
push
or
dec
add
push
mov
xchg
fs
aas
cmp
dec
and
dec
mov
adc
ds
jg
test
in
fs
mov
insl
hlt
sub
stc
xchg
mov
in
or
jbe
push
repz
xchg
ss
mov
push
cmpsl
mov
icebp
inc
stos
test
sahf
std
push
or
inc
in
lock
jbe
fcoml
mov
push
xchg
mov
or
mov
lds
dec
idivl
mov
or
dec
cmc
jp
insb
dec
pop
imul
add
out
std
lock
rclb
mov
cltd
mov
push
arpl
lret
sbbl
enter
push
add
movsl
lcall
mov
ljmp
cmpsb
pop
repnz
mov
nop
jg
ret
cmp
push
fsts
adc
xchg
add
and
mov
cmp
lock
shrl
mov
addb
mov
push
fidivrs
and
fs
subb
jno
scas
sbb
dec
lcall
jo
pop
insl
rcll
push
inc
fwait
test
ja
andb
mov
jno
pop
xor
or
xor
adc
std
adc
xorb
mov
mov
cli
aam
insl
mull
jmp
pop
add
or
xor
dec
push
test
dec
jl
and
loop
test
loop
sti
jno
jle
daa
xchg
inc
es
cmp
or
leave
lods
sahf
outsl
imul
ret
aaa
cmp
aas
pop
pop
cmp
inc
add
mov
movl
mov
addr16
sbb
and
in
fnstsw
movsb
repnz
and
jle
and
jb
dec
nop
push
sub
mov
shll
push
jae,pt
loope
loope
pop
push
lahf
dec
mov
adc
pop
mov
ret
lret
adc
scas
and
sar
xchg
add
iret
fcoms
pop
xchg
inc
pop
push
lcall
das
call
out
fdivp
jo
adc
sbb
aad
js
or
cmp
out
inc
mov
arpl
adc
mov
jp
incl
inc
pop
clc
sub
in
sub
ss
pushf
ret
outsl
adc
cmp
cmpsb
or
in
push
sub
fidivs
pusha
sub
dec
mov
adc
stos
imul
in
inc
jae
addr16
imul
mov
pop
lahf
sbb
popf
mov
and
mov
mov
adc
ret
out
mov
add
outsb
outsb
mov
mov
outsb
icebp
in
mov
outsl
mov
mov
sbbb
mov
and
jle
int3
mov
push
ret
cmp
xchg
xor
movsl
imul
jl
jge
jns
cmp
push
ficoms
gs
jle
push
clc
inc
pop
in
jae
clc
xlat
inc
inc
pop
outsb
jno
mov
mov
mov
hlt
dec
orl
xor
out
inc
test
xor
sar
in
mov
data16
stos
and
cmp
jbe
push
inc
hlt
lods
sub
sub
or
pop
xor
xorb
xor
xor
pusha
ret
icebp
movsb
daa
and
sub
cmpsb
lret
cmp
rol
dec
arpl
pop
push
mov
push
gs
or
pusha
dec
pop
push
loope
push
jnp
dec
dec
add
jl
xchg
xchg
std
sub
pop
add
cmp
fisttpll
pop
jp
xchg
stos
mov
mov
scas
insl
add
mov
xor
or
sbb
pop
outsl
inc
inc
pop
jnp
test
arpl
sbb
fwait
pop
repz
out
sbb
sub
rcrb
inc
jg
mov
notb
sti
ret
incb
cltd
repz
mov
les
loopne
stos
sub
pop
jae
sub
testb
ret
cmp
scas
mov
fimuls
data16
sbb
jb
sahf
push
adc
sub
imul
jns
lods
push
loope
sub
loopne
out
adcl
scas
sub
ja
imulb
icebp
mov
pop
sbb
pusha
push
rep
pop
dec
jmp
push
mov
lret
aaa
icebp
dec
or
test
sar
icebp
aad
jecxz
into
dec
jae
sbb
insl
jmp
mov
and
mov
jmp
scas
xchg
mov
inc
rorb
out
pop
scas
dec
jne
and
cmp
test
lcall
inc
mov
bound
lahf
repnz
lahf
jmp
push
push
hlt
scas
mov
sbb
add
xchg
adc
imul
scas
push
xor
repz
and
aaa
ss
gs
insb
lahf
lret
or
or
loop
lahf
pop
xor
xchg
in
push
out
mov
pop
js
add
xchg
xor
fcoml
push
sti
mov
cwtl
or
and
add
jge
xchg
pmaxub
cmp
arpl
in
adc
and
popa
pop
in
lods
push
fs
pop
dec
push
into
inc
add
push
push
inc
dec
aad
inc
fs
imul
cmp
xchg
mov
outsl
into
sbb
add
or
inc
out
cmp
jb
add
daa
call
shrl
mull
lahf
or
and
mov
call
mov
lahf
xchg
jns
dec
sbb
sti
dec
mov
insb
clc
movsb
add
push
jo
mov
arpl
fmull
jecxz
push
aam
xchg
das
push
push
xchg
inc
test
push
jnp
mov
gs
scas
dec
fisttps
jae
add
xor
sar
push
shll
push
fcoml
or
pop
icebp
pop
decl
dec
xchg
push
stc
into
insb
dec
mov
ret
cmp
inc
xchg
out
cmc
inc
lods
or
gs
lock
push
test
mov
sahf
lods
sub
icebp
gs
adc
fimull
xlat
roll
je
cli
mov
pusha
lahf
adc
jl
stos
in
imul
or
out
mov
fisubl
in
mov
outsl
daa
pop
mov
mov
sbb
inc
cmp
mov
scas
pop
add
aaa
push
adc
push
add
xor
push
imul
push
or
jbe
inc
outsl
mov
or
iret
cltd
fwait
mov
xchg
negb
xor
je
mov
jl
add
dec
sub
xchg
push
decb
subb
ret
mov
icebp
mov
sbb
rolb
stc
leave
dec
sbb
dec
or
cmovs
add
frstor
dec
ds
jns
mov
xchg
inc
fwait
nop
add
mov
jns
imul
movsl
fidivrs
stos
pop
mov
jge
daa
or
xchg
adc
dec
cmc
js
mov
adc
mov
or
loopne
ret
jl
nop
pop
mov
shufps
pop
add
pusha
cmpsl
testb
icebp
cmpsl
xor
and
push
or
push
push
xor
popf
mov
cld
adc
stos
or
rorb
popf
lahf
jl
pop
sbb
adc
cmp
and
add
xchg
push
and
xchg
pop
mov
outsb
add
in
xchg
xor
mov
adc
jo
mov
in
imul
sub
mov
fwait
jle
movsb
ljmp
jae
aad
dec
ficoml
xlat
leave
aas
lret
dec
fs
les
or
in
mov
sahf
cli
inc
lods
pushf
jb
imul
and
in
add
mov
cmp
mov
mov
jg
mov
mov
out
mov
in
xor
adc
out
mov
mov
sbb
inc
and
push
inc
insl
js
fsubp
add
test
clc
ss
push
out
add
pop
add
sahf
pop
push
mov
and
sahf
movb
xchg
push
xchg
sub
mov
insb
adc
dec
xchg
push
xchg
push
ss
flds
lret
outsb
fwait
inc
insl
xchg
bsr
cmp
popf
xor
jle
icebp
push
addr16
or
jl
dec
dec
roll
cmp
das
hlt
inc
sub
jp
movl
mov
bound
gs
mov
outsl
addr16
outsb
and
call
into
push
hlt
mov
or
out
pop
sarb
divl
push
repnz
ss
hlt
pusha
push
insb
movsb
stos
popa
repnz
test
add
test
push
scas
rcrl
pushf
lret
outsl
push
lods
lcall
test
adc
push
aam
mov
pop
fwait
shlb
ss
or
push
dec
and
add
push
mov
xchg
and
inc
add
out
mov
fwait
out
jbe
out
cmpsb
xor
int
jnp
xorb
jns
cmc
lods
mov
dec
or
cmc
sbb
xor
mov
xchg
imul
jle
cmpsb
pop
mov
xor
scas
jbe
add
sbb
sbb
mov
push
mov
fcmovnbe
dec
je
push
pop
addb
pop
xchg
jnp
jle
push
mov
pop
xchg
int3
gs
stos
sub
popf
imul
bswap
mov
adc
mov
fstl
dec
cwtl
inc
adc
or
cmp
mov
lcall
adc
add
dec
fimuls
mov
in
mulb
cmpsl
test
cmpsb
lcall
xchg
mov
pop
pop
clc
jnp
fcmovne
push
pop
and
or
bound
push
neg
mov
iret
hlt
sub
adc
lods
sub
mov
jns
push
sbb
push
xchg
fcomi
inc
add
pop
pop
adc
push
mov
push
pop
arpl
es
lret
sar
or
cmp
call
mov
lds
int
or
iret
fs
mov
stos
sbb
mov
add
or
inc
lret
jo
adc
dec
jns
inc
repz
negl
and
pop
xchg
xchg
test
or
aaa
hlt
ret
xchg
or
mov
jne
add
pop
adc
push
jecxz
dec
fcmovnb
and
mov
sub
sub
xor
mov
mov
jg
dec
inc
fwait
mov
lods
pushf
test
mov
clc
cmpl
add
test
and
out
jno
cmp
jns
gs
addr16
outsl
orl
jb
lods
jge
jge
xchg
sbb
mov
pop
mov
cmp
aas
insb
xchg
pop
insl
popf
sti
sbb
insb
and
es
mov
stos
adc
add
and
sbb
loop
push
and
mov
cmp
xchg
rcrb
jp
icebp
inc
add
mov
inc
sbb
fs
add
push
insl
cld
ret
int3
sahf
cmp
enter
adc
sahf
inc
dec
mov
sbb
jmp
mov
xchg
push
xor
mov
addr16
mov
les
cmp
xchg
roll
mov
mov
insb
test
sbb
icebp
insb
pop
mov
out
push
movsl
dec
dec
mov
or
cmp
lahf
jbe
divl
push
sahf
fs
pop
popa
dec
iret
jae
sub
push
inc
mov
gs
or
pusha
popf
inc
inc
inc
sbb
lret
movsb
out
stos
mov
addr16
stos
push
idivl
in
sub
push
loope
test
fistps
pop
or
xchg
xor
ljmp
lods
xchg
add
lds
pop
cmp
in
mov
loopne
in
pop
psubw
cmp
jbe
repz
std
inc
scas
xchg
lds
mov
aam
repz
fists
rcl
aam
aad
pop
jnp
pushw
xchg
sub
sbb
cmpsb
stos
or
add
aas
dec
fldt
out
jae
ret
cmp
xchg
dec
or
ljmp
dec
xchg
test
and
insl
xor
shrb
test
cmpsb
das
mov
popf
cmp
out
lret
int3
sbb
push
fcomps
sbb
std
inc
mov
cmp
add
filds
enter
mov
mov
add
xor
test
repz
add
pop
out
fwait
imul
mov
mov
out
sub
adc
cmp
lahf
add
ds
jnp
push
xchg
jecxz
add
push
add
stos
mov
pusha
leave
and
iret
cmp
mov
ljmp
push
or
popa
inc
or
fisubs
pop
and
fdivrl
test
fwait
cmp
cld
movsb
cltd
frstor
jecxz
shlb
imul
inc
pushf
mov
out
int
pop
mov
mov
icebp
notl
pop
mov
push
lods
mov
mov
xor
cli
stos
mov
fxch
shrb
notl
ficompl
into
stc
jecxz
add
cmp
dec
sbb
inc
fists
mov
sub
insb
hlt
in
xchg
inc
mov
mov
cmpsb
jns
scas
out
dec
mov
push
mov
jns
sbb
pop
xor
inc
addl
push
ret
mov
out
pop
fidivrl
insl
icebp
or
sbb
aas
lcall
rorb
and
movsl
adc
and
xchg
pushf
cltd
out
mov
sahf
stos
inc
xlat
dec
ds
or
or
in
outsl
stos
and
sbb
cmp
adc
pushf
into
inc
jmp
push
sbbb
dec
stos
insl
mov
sahf
mov
cmp
sub
cmp
ja
mov
mov
or
stos
inc
pusha
ret
sarl
aam
push
pop
in
or
jecxz
mov
mov
nop
or
mov
mov
mov
pop
xchg
in
xor
ror
xlat
ret
push
xchg
cmpsl
sti
xor
xchg
xchg
push
xlat
sbb
sub
jns
lea
in
fistps
insb
mov
push
divl
std
pop
jl
jge
mov
pop
popf
jae
pop
xorl
mov
cs
sahf
popf
jns
hlt
fcompl
pop
push
pop
or
stos
fsubrl
pop
movsl
mov
mov
mov
inc
cmp
enter
inc
sub
int3
sbb
xor
jo
mov
in
xchg
inc
adc
fucomp
nop
movsl
cmp
arpl
push
imull
inc
std
imul
inc
push
cli
jne
out
daa
fnstenv
out
inc
jle
xor
jle
fdivrl
jmp
in
mov
mov
mov
clc
xor
imul
stc
add
les
scas
lods
adc
push
mov
dec
xchg
lret
mov
fidivl
fucomi
gs
push
daa
icebp
leave
cmpsb
cmp
sbb
aaa
fistpl
icebp
test
or
jp
jne
dec
daa
movsl
outsl
or
lahf
mov
popf
shrb
icebp
mov
mov
adc
pop
add
jmp
push
pop
imul
cmp
sub
popf
aad
leave
jae
dec
rolb
or
pand
inc
push
sti
ror
ret
cmc
cmp
cmp
adc
fwait
imul
jg
push
bound
in
nop
int
jecxz
xchg
lds
stos
data16
into
cmovle
push
cmpsb
repz
mov
stc
inc
fdivrs
pop
add
push
inc
mov
dec
add
out
mov
or
popf
push
fnstenv
mov
xchg
mov
outsl
jmp
push
pushf
mov
mov
cmp
je
cmp
xchg
jae
push
adc
mov
push
movsl
fstps
fisttpll
clc
xchg
pop
cs
cld
and
pop
xchg
mov
imul
mov
cmc
rcr
push
pop
lods
push
iret
jo
rorb
dec
mov
in
out
lods
shlb
lock
jp
or
dec
add
repnz
pop
test
sub
daa
mov
fstp
and
fidivs
dec
mov
or
pop
test
cld
shl
decb
sbb
mov
mov
mov
pop
divl
add
sbb
pop
pop
movl
jno
bnd
mov
xchg
sbb
or
pop
andb
push
in
and
fs
out
xchg
jb
loop
mov
dec
inc
movsb
xlat
cmp
mov
or
adc
sbb
sub
movsb
jg
lahf
in
movl
stc
out
movsl
dec
hlt
lret
cmp
pop
fld
pop
pushf
lcall
ljmp
insb
mov
xchg
mov
push
dec
es
inc
decl
cmpb
movsl
inc
popf
in
das
push
sar
inc
in
icebp
ss
or
popa
push
adc
pop
scas
imul
dec
mov
loopne
pop
es
fidivrl
inc
fisubs
enter
mov
aam
test
test
aas
std
sbb
pop
mov
loop
data16
iret
aaa
push
sbb
faddl
jae
sub
mulb
hlt
xor
push
mov
xchg
inc
fdivrs
addr16
mov
mov
mov
mov
sub
jb
jnp
dec
or
adc
dec
sti
add
hlt
push
jg
lds
mov
or
jmp
jns
cwtl
mov
inc
repnz
cmp
gs
cmpb
scas
and
or
nop
ret
add
test
nop
jg
shr
dec
test
fbstp
mov
xchg
mov
push
mov
cmp
or
push
mov
inc
lahf
jae
pusha
sahf
pop
out
insb
fisttpll
aam
and
and
and
popa
sub
jb
mov
out
pushaw
jge
add
hlt
mov
mov
push
xchg
sub
insb
inc
sub
and
hlt
cmp
dec
adc
cmpsb
sarl
data16
pop
push
jne
fwait
push
jo
clc
iret
inc
and
cmc
cmp
fcoml
and
inc
mov
or
paddb
subl
add
push
pop
pop
fs
or
mov
xchg
mov
fwait
das
loop
jae
adc
xor
pop
mov
rclb
insl
loope
out
clc
mov
inc
rcr
sbb
jno
ds
gs
dec
push
mov
hlt
push
xor
test
clc
push
jbe
xchg
mov
push
cmp
movsl
cld
xor
mov
ss
adc
xor
pop
adc
or
mov
fldl
push
sub
or
movsl
adc
sbb
les
scas
mov
clc
jno
scas
adcl
or
push
aam
dec
les
enter
scas
push
std
adc
xor
sti
out
sub
push
inc
xor
xor
imul
sbb
jo
out
or
mov
aad
mov
jns
inc
outsb
mov
dec
xchg
dec
jae
cmpsb
mov
testb
mov
mov
inc
push
jo
outsl
xchg
jmp
outsb
jl
adc
jb
jl
pop
sub
push
jb
in
pusha
clc
pop
idivl
xchg
loope
mov
sbb
push
jbe
lret
sub
aad
sbb
in
pusha
outsl
lods
dec
pop
jl,pt
mov
popf
popf
adc
xchg
icebp
push
ss
jecxz
test
push
inc
push
hlt
jns
add
push
std
xchg
adc
dec
or
jno
cmp
icebp
mov
repz
mov
shll
xchg
lret
iret
pop
ret
mov
push
jp
daa
sti
jg
jne
lds
sbb
mov
dec
mov
inc
pop
sub
add
cmpsl
movsl
cmpsb
xchg
rcll
mov
add
add
xor
lock
or
test
cmp
and
gs
popf
cmc
addr16
add
aad
cmpl
clc
mov
out
sbb
lcall
rcll
int3
push
adcl
xorb
xchg
jge
mov
jne
call
adc
mov
test
cmp
mov
or
cmp
arpl
movl
cmp
lret
pop
jmp
push
jg
stos
jae
jbe
inc
es
dec
pop
ljmp
add
pop
dec
sub
fs
les
mov
mov
mov
fwait
or
repnz
test
int3
xor
and
scas
loope
cli
adc
repz
scas
inc
jno
jo
sub
shlb
push
dec
inc
fstpt
leave
insb
mov
sbb
push
sti
enter
scas
push
add
sub
mov
jbe
pusha
out
xchg
and
fistpl
xlat
xor
out
scas
insl
ret
jns
ret
cmpsb
lods
inc
mov
out
inc
jbe
jo
fisubrs
lods
aad
fwait
pop
insl
outsl
dec
sbb
jge
repnz
jg
add
push
int
lock
mov
adc
cmp
dec
out
dec
cmp
mov
push
data16
pop
out
mov
fs
fbstp
arpl
movsl
scas
xchg
fcmovbe
out
stos
lods
sbb
aad
cmc
aad
xor
jae
enter
hlt
pop
mov
ja
sub
mov
or
cmovo
push
jmp
jl
inc
jge
mov
mov
test
push
add
push
push
stos
adc
jb
in
mov
int
in
mov
addl
ret
nop
repz
cltd
lret
fs
test
aam
aad
mov
idivl
xchg
adcb
jb
cmpl
fnsave
jae
push
xor
rorb
ret
les
pop
and
xor
adc
cmpb
mov
dec
add
push
daa
sbb
jbe
fucompp
pop
cli
dec
into
les
dec
add
movb
cmp
push
mov
cmp
mov
hlt
pop
jo
es
imul
push
mov
cwtl
mov
outsl
mov
aaa
dec
mov
sub
push
shrb
es
bsr
int3
jno
fs
lret
aad
xor
jae
aas
imul
fnstenv
add
cmpsl
add
fmulp
sbb
mov
ret
js
pop
dec
ds
rcrb
sbb
je
jge
sub
lcall
dec
lret
pusha
mov
pop
frstor
dec
lea
sub
push
insb
test
cltd
imul
sbb
mov
cwtl
jnp
je
mov
jecxz
popa
sub
push
rcrb
or
or
gs
jns
adc
cmp
ja
icebp
mov
in
jge
adc
out
cwtl
xchg
fwait
xchg
enter
scas
pop
xor
notb
mov
inc
arpl
call
not
ret
mov
and
inc
cmp
xlat
clc
mov
cmp
jae
test
push
ja
jno
inc
fnstsw
sbb
int
fmuls
jmp
pushf
cmpsl
jnp
pop
and
arpl
dec
loope
imul
and
xchg
adc
insl
int
ret
pop
sub
lret
enter
mov
pop
and
icebp
je
stc
mov
out
nop
xor
mov
jb
lea
inc
adc
loop
mov
sahf
cs
hlt
fcoms
pop
mov
mov
in
mov
jae
xchg
xchg
pop
out
popf
inc
mov
ret
inc
movsl
jbe
pop
scas
pop
lret
cmp
sbb
mov
stc
push
or
mov
jno
daa
jae
in
add
movsl
shll
mov
das
mov
adc
out
call
rcll
mov
ret
addr16
cltd
mov
lods
push
sub
dec
in
add
xor
jg
rclb
popf
ja
dec
jecxz
sub
sub
sub
test
xchg
int
mov
and
cld
sbb
fistpl
stc
out
mov
jne
int3
mov
jl
cltd
cmp
or
and
jle
andl
ja
aaa
dec
pop
arpl
dec
xor
mov
jae
push
push
loop
sub
lds
gs
sbb
or
mov
sub
cltd
mov
int3
cltd
jnp
imul
mov
sub
outsb
sbb
mov
mov
test
dec
sub
pop
push
inc
mov
or
sarb
aam
pop
fsubrs
add
or
lods
sbb
inc
cltd
inc
add
jno
add
sti
in
iret
shrb
clc
dec
jp
jp
dec
lahf
push
mov
ds
in
xor
cmp
cmpl
in
add
lea
into
add
inc
mov
xor
jp
je
repz
mov
sub
scas
xor
insb
jno
lods
mov
cmpsl
mov
push
sub
stos
cltd
lods
mov
and
add
fs
lock
mov
fstpl
add
pop
lret
cmpl
fiaddl
xchg
in
hlt
or
add
in
dec
mov
stos
movsb
adc
cwtl
nop
lds
notb
nop
loopne
out
pop
cmpsl
xor
andl
xchg
scas
push
jmp
nop
dec
pop
xlat
inc
jp
roll
xchg
xchg
test
shlb
fsubrs
rdpmc
fstl
jl
cwtl
jo
imul
test
push
les
inc
mov
mov
mov
lea
and
test
inc
mov
mov
enter
pop
add
fistpl
clc
inc
insl
js
aad
push
pop
inc
loope
cmp
xchg
inc
js
push
cmpsl
pushf
inc
outsl
sub
xchg
out
adc
shll
enter
cmp
dec
or
mov
adc
pop
push
bnd
dec
add
xchg
dec
call
inc
enter
cli
xor
mov
loopne
sub
pop
and
cli
insl
xchg
shl
loope
ja
fiaddl
mov
lds
or
mov
mov
fisubrl
cwtl
cwtl
lods
outsl
jno
call
outsb
mov
mov
jnp
push
jge
mov
sbb
cmpsl
cmp
jnp
inc
pushl
test
or
mov
cmpb
repz
xchg
hlt
imul
or
dec
dec
sub
pusha
andb
cmp
xchg
mov
insl
jl
in
add
xlat
jle
sbb
std
insl
es
decb
adc
pop
call
loope
ljmp
push
xlat
imul
ljmp
scas
mov
push
inc
cmpb
xor
push
ss
xlat
das
xchg
dec
mov
adc
sarl
insb
sbb
xor
cmp
stos
clc
adc
pop
and
and
shl
sub
xor
call
xor
insb
adc
xchg
es
mov
mov
sbb
or
pop
push
lret
frstor
jns
xchg
mov
push
cmc
xor
pop
pop
mov
out
ret
ficoml
aas
int3
mov
inc
inc
xor
xchg
insl
js
sbb
inc
test
out
or
das
cmpl
ficompl
cmp
pop
outsb
dec
add
mov
and
out
mov
mov
shlb
xchg
pushf
sbb
mov
mov
aaa
jmp
jge
push
cmpb
push
jno
pop
adc
cmp
daa
sub
add
and
mov
sub
mov
xchg
dec
adc
cmp
loope
push
insl
jne
and
hlt
mov
js
mov
pop
les
push
test
movsl
add
cwtl
add
jmp
and
cmp
adc
and
nop
enter
movl
push
xor
andl
xor
sti
adc
push
xor
pop
xchg
xor
mov
xor
shl
cmp
push
in
sub
cmp
scas
cmp
std
test
fidivs
test
or
cmp
push
jg
mov
sub
or
rcr
xor
stos
in
aam
mov
sarl
popf
adc
sub
repnz
mov
adc
jge
cmpsb
push
flds
icebp
pop
insl
arpl
pop
jae
aam
fwait
scas
or
movsb
aas
push
mov
in
sbb
dec
test
cmpsl
jmp
jb
or
sub
xchg
pop
inc
or
xor
xor
push
mov
je
adc
ret
mov
out
in
lods
les
inc
mov
cltd
repnz
and
add
imul
sbb
push
xchg
inc
loopne
cmp
int
int3
es
and
jnp
sub
add
ja
jne
lea
lock
cmpsb
fs
mov
lods
sbb
jmp
mov
gs
jmp
cmp
repnz
loop
addl
mov
iret
aas
xchg
lods
imul
adc
add
cmp
xor
loop
pop
mov
mov
xchg
push
test
push
xchg
out
stos
aad
mov
repz
mov
pop
dec
jg,pn
jae
popa
xor
out
orb
push
pop
inc
xchg
cli
mov
shlb
popa
xchg
test
cmp
mov
loope
fstpt
data16
mov
mov
push
xchg
sbb
mov
sbb
xor
cmc
in
mov
mov
ds
es
pusha
mov
pop
mov
subl
out
sbb
adc
push
jle
mov
inc
scas
sub
jle
jno
mov
mov
sbb
lock
test
shrl
jecxz
popf
aad
sub
pushf
pop
xlat
mov
stos
outsb
sarb
pop
pop
dec
or
or
push
adc
dec
mulb
ud0
push
ret
stc
jg
mov
sahf
fists
xchg
ja
sbb
dec
jno
inc
xor
and
pop
rcl
out
push
in
scas
lods
aas
pop
mov
push
mov
or
cmp
cmp
xchg
xchg
xchg
into
repz
inc
mov
insb
mov
sub
jle
mov
xor
arpl
das
inc
decl
cs
lret
fwait
lret
insb
mov
xchg
rcrl
lea
aaa
cmpsl
mov
push
jle
jmp
cmp
push
stos
fwait
inc
mov
inc
mov
xchg
lods
ror
arpl
mov
push
in
and
add
daa
xchg
xchg
ljmp
popa
lcall
insl
sbb
sub
xor
lret
in
lds
call
sbb
pop
scas
jmp
in
cld
push
fstps
cmp
cmp
sub
ret
sbb
cmp
in
fs
aaa
jns
xchg
mov
and
jp
frstor
push
inc
lock
pop
lods
dec
dec
and
and
loopne
jo
es
arpl
jl
jle
and
pop
repnz
sub
pop
cmp
and
xchg
lret
test
dec
clc
ds
loope
jmp
mov
cmp
cwtl
fwait
popf
cmp
data16
or
mov
cmp
into
mov
jno
fbstp
xor
imul
mov
shlb
xor
or
cmp
cld
adc
mov
xor
lret
loop
mov
push
push
inc
jb
dec
cmp
push
out
bound
push
xchg
leave
xchg
divl
mov
jmp
xchg
and
dec
jg
mov
in
jmp
loop
cs
lea
aam
decl
std
fildll
fbld
cld
imul
popf
ljmp
mov
imul
fstp
into
mov
adc
loopne
leave
cmp
mov
fcomp
cld
jae
push
cmp
inc
dec
fadd
and
sub
outsl
dec
mov
jmp
pushf
mov
pop
out
rcl
pop
imul
cld
mov
jge
inc
icebp
cmp
push
jmp
stc
push
pushf
pop
stc
pminsw
fistpl
push
mov
lcall
mov
lahf
jmp
cwtl
fsubl
das
int3
std
inc
mov
push
adc
data16
sbb
cmp
mov
sub
mov
xchg
scas
dec
pop
rep
push
es
das
aad
mov
lods
enter
cs
in
mov
mov
pop
cltd
ficoml
cmp
repz
and
mov
dec
sti
pop
popa
in
int
jne
in
inc
pop
mov
sbb
insb
int3
jle
je
push
mov
ljmp
adc
mul
add
mov
shrb
add
jne
fsubrp
pop
pop
jbe
dec
mov
mov
push
jno
jmp
or
pop
xchg
xlat
das
xchg
ja
dec
dec
adc
xor
sbbb
cmc
xor
cmc
es
rclb
push
mov
sbb
les
lret
xor
inc
rcrl
xchg
dec
lods
popa
inc
sar
ljmp
mov
and
fiaddl
sub
psubusb
stos
aaa
xor
fildll
out
negb
dec
sub
mov
inc
aad
repnz
das
stos
pop
outsb
push
loopne
sbb
mov
sub
fs
push
or
adcb
sbb
hlt
sbb
push
stos
clc
mov
cwtl
outsl
dec
icebp
dec
adc
imul
inc
xchg
mov
std
adc
int3
adc
cli
xchg
mov
mov
ljmp
jb
lods
and
lods
dec
movsl
pushf
pop
add
aas
out
adc
insb
sbb
mov
and
bound
push
jecxz
rcrb
jl
mov
stos
aaa
dec
aam
add
sbb
xchg
jbe
or
jle
cmc
sbb
pop
push
push
fldt
pop
pop
ja
mov
dec
arpl
in
mov
sub
stos
mov
sbb
pop
mov
outsb
or
fbld
aad
daa
jb
mov
mov
xchg
or
arpl
jno
hlt
jmp
xchg
adc
dec
int3
inc
add
cmpsb
mov
xor
ss
lret
add
inc
and
cmc
mov
xlat
test
adc
mov
jl
int
xchg
in
adc
push
dec
xchg
mov
incb
fistpl
in
bound
test
enter
fiadds
andnps
mov
test
push
adcl
data16
pusha
sub
roll
int3
push
and
sub
loope
cmpsb
sti
lods
xchg
jnp
gs
nop
xchg
xchg
and
les
or
out
shr
push
pop
cmpsb
pop
sub
lods
adcl
addr16
dec
insb
sub
mov
sbb
aam
sbb
ja
cs
test
push
adc
imul
cmc
jae,pt
xor
mov
mov
sbbl
daa
xor
xchg
push
into
dec
mov
test
adcb
push
notb
fmuls
out
stc
push
xchg
nop
sahf
andl
mov
lods
addr16
inc
xchg
es
or
pop
insb
es
sbb
sub
sbb
or
test
cmpl
dec
rcrb
and
fsub
jnp
loope
nop
cwtl
cmp
lea
sub
xor
fidivl
scas
pusha
fxch
je
fcoms
sahf
cltd
lret
mov
cmp
sub
insl
fstps
lahf
popl
sub
fadd
pop
and
push
shll
and
pop
das
stos
fidivrl
outsb
adc
clc
mov
push
js
scas
pop
xor
jl
pop
fldenv
inc
lods
mov
lret
lret
in
rcrb
adc
repz
sbb
popl
js
or
sub
pushf
vhaddpd
lods
or
or
dec
std
mov
push
js
rcrl
push
hlt
jne
lock
mov
in
in
mov
xchg
xchg
popa
cmp
jg
insl
scas
cs
pusha
adc
xchg
xchg
sbb
xor
xor
lret
and
ret
stc
or
dec
roll
add
mov
test
enter
sub
insl
push
aas
pop
push
daa
sub
scas
cmpsb
pushf
sbb
jbe
or
daa
stc
rcrb
xor
sub
mov
stos
mov
jb
xor
les
adc
loop
sub
add
imul
cmp
lret
mov
xor
std
adcb
ror
jnp
aas
jmp
into
mov
orb
or
inc
cmpb
dec
and
push
cmpsb
les
pusha
dec
adc
imul
gs
pop
test
pop
ja
clc
adc
cltd
hlt
mov
addl
jb
jmp
push
mov
addb
pop
dec
push
outsl
adc
pop
iret
push
xchg
fstpt
hlt
inc
pop
sub
push
imul
ficomps
lods
push
or
cli
hlt
movsl
loope
pop
xchg
xchg
mov
loop
add
mov
mov
testl
inc
xchg
mov
push
mov
jno
mov
test
push
push
out
mov
jns,pt
mov
sbb
testb
movsb
dec
add
ss
add
leave
pushf
gs
jbe
cmpsb
int3
pusha
push
mov
scas
lahf
dec
mov
xor
ficoml
lret
repz
xchg
adc
shl
in
loope
repnz
ret
xchg
setbe
or
pop
sbb
outsb
in
dec
aaa
idiv
test
js
bound
dec
sbb
jno
test
out
sti
filds
pop
insl
mov
andb
cmp
dec
adc
pop
inc
and
ljmp
jecxz
push
jbe
js
aas
xchg
xor
sub
pop
daa
xlat
and
jno
xchg
jmp
int
add
dec
adc
jmp
xchg
pusha
mov
test
add
pop
mov
mov
outsl
add
sbb
and
pop
outsb
sub
jl
loop
xor
insl
les
pop
aad
pop
stc
sub
jne
add
icebp
mov
or
add
push
stos
cmp
cmp
scas
mov
inc
stc
fcmovnbe
into
sub
mov
mov
or
inc
ss
stc
inc
mov
in
xchg
inc
lock
cmp
jg
aaa
jae
pop
dec
jle
mov
insl
inc
jmp
add
pop
lods
sub
out
xor
add
ja
test
lods
dec
out
scas
mov
testb
push
popf
cwtl
xor
sbb
out
dec
lret
mov
pop
lock
lock
pop
and
or
fwait
out
fbld
lcall
nop
mov
sahf
inc
xchg
adc
sbb
push
jnp
push
fnstenv
pop
cmp
cmp
sbb
lret
scas
lahf
cmp
mov
add
pop
mov
push
ja
pop
das
xchg
mov
adc
shlb
in
mov
test
add
inc
mov
out
mov
jns
jp
icebp
jp
dec
jmp
push
mov
out
clc
pop
push
inc
insb
or
jno
imul
int3
leave
push
pop
add
dec
jnp
scas
sub
xor
mov
out
adc
pop
sub
div
movl
lock
push
mov
pop
jns
into
and
xlat
xchg
mov
cltd
inc
push
pop
lods
stc
cmp
pop
addr16
jle
sbb
cwtl
add
jno
lods
ja
inc
rolb
inc
bnd
jecxz
dec
sub
jg
push
es
mov
ljmp
movsb
xor
movsb
sbb
or
divl
scas
push
mov
xchg
mov
fwait
insl
clc
repz
test
inc
popa
cmp
push
xor
jbe
outsl
stc
lcall
test
sub
or
sub
movsb
or
stos
cwtl
mov
add
fnstcw
fdivs
xor
jle
pop
mov
sub
xlat
push
push
add
repz
sbb
xchg
or
lcall
iret
or
lcall
mov
jge
test
loopne
gs
mov
not
adc
pop
push
inc
movsb
ja
mov
cmpb
loope
mov
lea
push
hlt
test
test
je
jecxz
clc
pop
enter
lock
push
rol
pop
jge
hlt
aaa
cmp
inc
popw
insb
negb
lret
xchg
ret
add
adc
pop
lret
push
push
add
pop
lods
loope
jg
inc
jo
jb
push
sbb
mov
lcall
inc
jns
adc
and
adc
daa
fs
scas
lahf
stos
or
dec
sbb
sahf
jge
mov
fs
pop
daa
add
cld
pop
gs
cmp
call
lea
jecxz
cli
jl
cli
fincstp
icebp
stc
popf
shl
ret
pop
ds
xor
imul
nop
gs
aas
xchg
jns
mov
or
add
arpl
mov
daa
jle
stos
repnz
sub
testl
mov
mov
insl
lods
insl
enter
dec
aaa
shll
sbb
pop
les
repnz
push
call
fdivs
xor
fwait
ret
cmp
jns
xor
inc
inc
mov
shr
not
and
cmp
imull
sub
lcall
inc
mov
push
add
cli
xor
les
sub
cmp
rcr
scas
shrl
fbld
scas
outsl
sbb
mov
sub
or
inc
sub
mov
and
inc
cmpsl
outsl
sub
outsl
pop
or
jno
inc
inc
outsb
movsb
mov
jmp
popa
cmp
cltd
cmp
imul
inc
sbbb
outsb
testb
xor
or
push
jbe
jp
sub
inc
mov
test
sub
das
test
or
loope
inc
enter
sahf
cli
cmp
mov
popf
lcall
cmpsl
push
cs
push
loope
scas
bound
fdivrl
arpl
call
pop
inc
pop
pop
push
mov
stos
push
push
clc
xor
mov
jnp
fstpt
xchg
push
loop
jg
out
popf
out
xchg
cmpl
mov
ljmp
mov
lret
sub
mov
adc
pop
jg
mov
lret
inc
sub
call
pop
sub
in
push
mov
push
push
xchg
pop
stos
add
jno
cld
adc
adc
adc
push
xchg
cs
pop
xor
mov
adc
lods
push
or
push
dec
dec
into
adc
icebp
es
add
ret
inc
je
movsl
or
lret
and
lret
inc
dec
sbb
jmp
mov
rcl
sub
and
pushf
inc
leave
xor
push
pop
lods
sub
push
xor
stos
movsl
or
loop
cmp
je
cmp
mov
push
push
xor
out
jne
adc
aam
mov
pop
nop
push
push
fldenv
lret
xor
aad
add
mov
xor
or
insb
xchg
mov
pop
stc
out
imul
mov
ds
and
pop
sub
jecxz
jg
cmpb
mov
pop
lods
jb
mov
in
cmp
aam
dec
push
jp
mov
adcb
cli
movsb
sarl
pop
scas
inc
daa
jb
pop
cvtpi2ps
testl
shrl
cmp
and
adc
addb
cmpsb
add
sarb
lea
add
pop
cmp
pop
ficoms
subl
adc
in
repz
leave
adc
andb
xor
cltd
jno
les
enter
clc
push
xor
mov
cmp
cmp
in
out
call
es
insb
sub
das
incb
mov
std
ljmp
int3
sbb
testl
fiadds
jmp
adc
sub
in
mov
push
xor
xor
xor
pop
inc
out
lods
adc
xchg
cmp
jle
inc
lret
pop
lcall
test
pop
fsubrl
pop
cmp
stos
jmp
mov
mov
cli
fldt
mov
adc
mov
push
push
fldenv
aad
adc
fwait
repz
dec
fs
repnz
add
cli
notl
arpl
xor
xchg
out
lds
dec
imul
scas
cmp
xchg
jne
push
mov
fcmovnu
mov
pop
outsb
repnz
cld
fs
sbb
push
hlt
je
pop
ja
fisubs
or
lock
or
je
fildl
fistl
outsb
enter
push
mov
push
jle
cmpsl
cmpsl
mov
sub
add
fwait
int
mov
adc
jno
inc
mov
ss
mov
jo
mov
jnp
cmpsl
mov
add
jns
aam
push
dec
inc
adc
mov
out
das
lods
xchg
xchg
push
sub
imull
and
pushf
das
pop
push
and
imul
and
cs
pop
fisubrl
cltd
xor
xchg
sbb
popa
repz
adc
out
aas
or
shlb
add
sti
push
ret
cmp
cmc
cmp
and
jns
mov
inc
es
lcall
jo
pop
out
fs
add
fs
je
cmpsb
decb
ret
daa
std
fimull
int3
sbbl
jg
lock
inc
xor
lock
and
fstps
lcall
stc
add
jmp
testl
ret
fadd
dec
mov
push
aaa
jg
and
pop
inc
aad
repnz
je
pop
inc
daa
add
sub
je
mov
push
out
cmp
pop
cs
jnp
jns
scas
push
fcomps
jno
inc
mov
es
ja
cmp
fwait
add
xor
sbb
xchg
inc
push
xchg
inc
pop
cltd
sub
cmp
iret
int
add
stc
aas
push
mov
mov
xchg
ja
mov
sbb
ret
mov
or
leave
and
test
test
leave
xchg
int
sbb
or
mov
xor
mov
jmp
add
add
aad
int
or
mov
inc
mov
cwtl
mov
lcall
dec
push
pop
xor
sbb
fs
or
xchg
mov
test
int
rcll
or
leave
int3
adc
mov
rorl
stc
icebp
inc
test
iret
addb
ja
lahf
lds
sbbl
mov
or
pop
add
es
subl
pop
into
sbb
inc
idivl
into
xchg
cmp
rclb
xor
pop
enter
pop
ffreep
mov
popa
cs
lret
test
sub
jbe
dec
leave
sub
push
cli
jmp
push
in
out
or
pushf
scas
mov
cltd
sbbb
and
pop
and
mov
jno
rcll
test
icebp
fldt
lea
cltd
daa
aad
push
das
pushf
mov
adc
popa
mov
or
jge
jg
dec
mov
or
daa
div
push
mov
dec
cmp
jnp
push
sbb
inc
jno
xchg
xchg
or
aam
cld
and
push
jg
push
stos
jge
das
imul
fisubrs
adc
rolb
loop
inc
and
les
cmp
inc
ret
add
inc
dec
push
and
out
sub
jmp
inc
adc
nop
mov
cwtl
push
addr16
sbb
ljmp
jns
xchg
fnsave
imul
add
pop
add
aad
je
rclb
jmp
lds
outsl
sti
jge
add
mov
lock
adc
sbb
shlb
pop
test
add
cmc
inc
cmc
sarl
jnp
scas
jne
ret
jmp
sbb
test
xchg
jno
ror
daa
lods
jo
fs
je
ficoms
xlat
sub
sub
jecxz
and
fcompl
or
je
mov
sub
scas
in
push
push
sub
fimull
xchg
shlb
stos
jns
and
int3
cld
adc
sti
out
lahf
jno
mov
movsb
xor
jl,pn
aas
add
inc
adc
push
imul
popw
dec
mov
pop
mov
mov
cmp
push
lcall
ret
out
out
int3
adc
and
cmpsb
das
dec
sti
mov
dec
lahf
ret
adc
mov
es
pop
sahf
into
adc
mov
xor
int
test
stc
int
jns
and
xor
in
out
add
pop
or
xchg
loopne
add
mov
mov
push
or
std
cmp
lret
fildl
adc
pop
icebp
sbb
cld
daa
ret
mov
movsb
rolb
lahf
lods
ror
push
daa
aas
pushf
rcll
adc
fstpl
or
lds
int3
pop
rol
fcmovb
mov
loopne
test
pop
xchg
jb
add
push
jl
pop
scas
adc
pop
adc
xchg
lcall
jb
shl
jp
idiv
das
outsb
sub
call
inc
pop
fprem
arpl
xor
mov
test
mov
shlb
arpl
sub
sub
dec
push
sarl
adc
ret
mov
sub
popa
imul
in
add
movsb
mov
xor
mov
xor
jns
shll
ret
test
arpl
in
sub
ret
jno
xorb
mov
outsl
ficoms
fisubrl
lea
mov
cmp
xor
flds
fistpl
lret
push
mov
movsb
lock
or
sbb
jnp
mov
xchg
cmp
lods
jae
sub
popf
mov
dec
pop
ljmp
add
cmpsb
mov
idivl
or
mov
repz
popf
pusha
mov
popa
test
pushf
lahf
lahf
pop
test
or
out
pop
jge
sub
andl
shrl
mov
xchg
mov
loop
ret
hlt
push
and
pusha
idivl
cli
fdivs
add
pop
sti
jle
ss
sub
push
fisubs
testb
inc
aaa
leave
add
pusha
scas
mov
push
lods
cmp
inc
or
sbb
xor
mov
pop
add
inc
negb
xchg
and
mov
lcall
or
fildll
hlt
jne
out
add
loop
pusha
out
push
mov
pop
fmulp
shl
in
inc
jge
push
jmp
adc
xchg
cmpsb
xor
push
pop
or
lods
push
and
incb
mov
xor
push
shr
movsb
jle
add
out
subb
sbb
push
fwait
mov
xchg
testb
cmp
add
xchg
mov
cmp
xchg
in
mov
scas
jmp
jl
lret
jl
or
inc
aas
stos
lcall
out
mov
or
adc
in
cmp
or
mov
jo
movb
pusha
int3
sub
push
mov
mov
lret
cs
or
out
test
test
push
jp
sahf
frstor
add
notl
dec
les
std
cmpsb
dec
or
jg
xchg
dec
outsl
push
fnstsw
push
lea
test
fdivl
stos
xor
push
pop
test
cli
ret
repnz
add
lret
icebp
movsl
enter
ljmp
rorb
sbb
imul
fsqrt
jp
xorb
sbbb
enter
out
orl
lea
cmpsb
arpl
daa
rclb
xchg
add
cli
mov
enter
repnz
test
jecxz
imul
fstpl
movsl
mov
sbb
inc
andb
out
push
in
iret
push
mov
stos
cmpsb
inc
and
mov
mov
ja
add
mov
pushf
sahf
mov
mov
cmp
dec
pop
fidivl
mov
mulb
shlb
ds
jae
jns
jmp
add
aad
pop
mulb
loopne
sbb
cwtl
cmp
xchg
cltd
dec
or
adc
or
cmp
lret
mov
mov
inc
or
inc
fidivl
fisttpll
xor
lds
push
enter
mov
sbb
jge
repz
xchg
nop
imul
shll
mov
push
fwait
jns
test
mov
das
lods
int
fstpl
push
dec
xor
dec
xchg
mov
add
jp
or
leave
jo
nop
es
xchg
jno
dec
mov
mov
mov
scas
inc
test
mov
sub
sbb
clc
push
xchg
and
or
daa
dec
arpl
sub
icebp
mov
repz
faddl
dec
xchg
ss
mov
iret
dec
sbb
rolb
movsl
pop
sarl
inc
insb
test
push
sbb
movsb
pop
rcll
cmp
and
pop
push
stos
insb
fists
xchg
dec
mov
adc
push
std
scas
data16
xchg
xor
enter
lods
sub
imul
dec
jb
or
push
mov
xchg
ret
adc
xor
iret
xchg
push
push
clc
fists
push
dec
icebp
mov
cmpl
jb
inc
mov
mov
cmp
aad
std
repnz
fnstsw
movsl
mov
cli
popa
mov
outsb
nop
pushf
mov
add
jo
call
inc
ret
cwtl
push
inc
dec
xchg
push
xchg
xchg
and
cltd
sbb
int
jne
insl
or
xor
or
push
out
sub
pop
data16
mov
mov
outsb
pusha
pop
lret
xor
inc
mov
in
and
pop
pusha
test
shl
out
xor
imul
scas
and
cld
mov
aas
dec
pop
sbb
cld
shll
sti
mov
jp
cmp
xchg
int
mov
scas
and
add
push
mov
mov
cmp
inc
test
mov
bswap
ja
addr16
scas
shll
push
sub
xor
sbb
sarb
test
divl
aam
addr16
and
or
outsl
add
lock
enter
mov
popa
mov
dec
and
sbb
lret
xor
sbb
mov
push
pop
jnp
cmp
push
hlt
xlat
sub
js
jmp
test
adc
mov
mov
aad
mov
cli
cli
sbb
mov
cmp
mov
aaa
mov
insl
mov
insb
pop
enter
mov
lods
xor
mov
xor
addr16
movsl
cltd
mov
movsb
add
inc
iret
daa
lret
repnz
lret
loop
lret
sbb
rcrb
jmp
sub
mov
sub
inc
pusha
and
call
xor
ljmp
inc
imul
mov
nop
sbb
cmp
push
testb
mov
in
cmp
adcl
leave
cmpsb
scas
out
ret
mov
push
push
fmul
cmp
lcall
call
imulb
outsl
add
mov
mov
inc
jae
pop
ss
mov
lret
mov
leave
ret
cmp
test
sbb
loope
ja
fisttpl
ds
popa
mov
dec
mov
cli
mov
je
sbb
push
push
adc
inc
adc
nop
prefetcht0
jle
adc
mov
xlat
in
add
sub
sbb
dec
and
inc
xor
iret
pop
lahf
push
into
jle
in
fs
int
and
popf
dec
xchg
lock
mov
insb
movsb
data16
mov
or
push
dec
insb
fwait
inc
adc
mov
sahf
xchg
mov
sahf
push
ret
fs
popa
mov
out
test
shrb
mov
loop
adc
jno
ficoml
push
out
sbbb
dec
ss
push
mov
add
bnd
sbbb
sub
push
les
jle
insl
jne,pn
dec
xchg
pop
leave
fisubs
dec
outsb
shr
pusha
insb
push
add
shrb
mov
loope
popf
in
aam
es
pop
jmp
ljmp
dec
ficoml
jne
adc
and
jae
add
dec
ljmp
icebp
lcall
leave
enter
enter
jb
sub
cmp
cmpsl
rorl
scas
sbb
jecxz
test
pop
jge
jno
add
stc
arpl
popf
xor
insl
adc
add
je
test
push
mov
xchg
loope
dec
and
mov
jae
bound
test
adc
les
jle
nop
ret
jge
inc
dec
xor
lds
inc
jge
jb,pt
in
call
std
int
mov
iret
jp
pop
pop
mov
call
fldcw
push
pop
inc
aam
rorb
stos
inc
lcall
cmp
push
xchg
and
or
in
xchg
bound
xor
leave
pop
cmpsl
push
dec
std
sub
cmovs
mov
jge
sbb
sahf
hlt
push
pop
ret
xchg
lods
push
jno
xchg
lods
mov
sbb
aad
pushf
mov
imull
mov
inc
inc
aas
sub
adc
fldenv
std
nop
fists
jnp
cmp
pushf
pop
dec
mov
into
sbb
es
fsts
add
pusha
or
loope
adc
cwtl
xor
and
addr16
sbb
out
test
jo
insb
xchg
push
xchg
mov
in
loop
push
dec
stc
mov
pop
jae
mov
fisttpll
or
xchg
dec
or
dec
push
sub
movsb
dec
stos
dec
call
insb
push
lods
outsb
mov
mov
mov
inc
jno
jnp
mov
pop
sbb
mov
outsl
negb
daa
mov
cmp
push
sub
in
andl
jnp
jmp
mov
xchg
and
cmp
sub
cli
push
cmc
cltd
fs
enter
sti
mov
jno
in
mov
sbb
in
aam
mov
cmp
pop
in
pop
jle
pushf
ret
mov
xchg
lods
scas
ret
shlb
and
testb
out
test
imul
pop
inc
insl
sub
inc
lods
fcom
mov
mov
rclb
ss
jmp
aad
mov
repz
jo
mov
stos
jp
in
scas
dec
in
jg
cmp
and
jno
or
lea
rorl
xor
inc
lods
xchg
sbb
or
and
pop
sub
andl
push
push
dec
and
mov
stos
mov
push
inc
or
andb
sbb
push
aam
add
out
les
add
arpl
mov
mov
lods
mov
imul
dec
adc
or
lock
push
out
jnp
xchg
negl
pusha
mov
movsl
xor
inc
mov
xchg
out
xor
add
jae
mov
and
jle
or
mov
or
mov
cmp
adc
dec
jmp
mov
int
nop
sub
mov
pop
or
decl
fstps
pop
aas
cs
mov
orb
fisubs
cs
aas
adc
jb
jno
mov
cli
xor
sbb
pusha
arpl
inc
mov
jmp
pop
and
clc
jp
nop
mov
or
fs
pop
mov
push
and
shr
and
and
aaa
jb
xchg
push
dec
ret
pop
nop
popf
mov
call
jo
or
jne
push
mov
test
jecxz
mov
sbb
loope
xor
clc
lods
mov
fwait
out
pop
pop
push
jle
xchg
sbb
xchg
hlt
in
cmp
mov
pusha
mov
cmpl
dec
call
push
shll
mov
daa
je
jp
xor
cli
enter
cmp
fisubl
sbb
jne
fisttpl
movsl
adc
iret
dec
fcmovbe
aas
idivb
add
call
xor
stos
lea
jnp
pushf
dec
and
fadds
jns
xchg
dec
dec
jle
iret
push
jnp
xchg
xchg
in
adc
or
fisubrl
insl
xor
and
das
mov
scas
lcall
add
fwait
xor
sarb
inc
cmp
pop
mov
dec
loop
and
sub
push
notb
xor
ss
add
push
and
or
mov
sbb
and
sbb
imul
add
jno
xchg
mov
icebp
testl
sbbb
or
stos
addr16
mov
fisttpl
or
mov
jo
push
jmp
cmpsl
fcomps
mov
mov
sub
aaa
in
or
mov
icebp
movsl
stos
dec
icebp
jge
jns
sub
sub
jecxz
and
add
enter
mov
pop
lods
subb
cmpsl
jo
cmp
std
cmp
gs
aaa
loop
mov
sub
incl
mov
cmpsl
mov
imul
adcl
mov
insl
cmp
adc
fwait
mov
sbb
inc
mov
stos
sub
adc
or
mov
out
cmp
iret
out
dec
and
mov
in
jmp
jl
int3
dec
outsb
dec
add
xor
out
mov
push
or
dec
mov
push
sub
stos
push
fcmovnu
mov
mov
movd
xchg
mov
les
push
rcr
xor
test
inc
cs
jns
movsl
jno
sbb
in
jp
mov
das
imul
ds
out
add
das
jmp
mov
inc
mov
push
fisubrl
push
stos
xchg
mov
fisubrs
dec
ds
dec
or
add
mov
cmp
dec
hlt
inc
out
jo
dec
shll
xchg
jnp
addr16
leave
in
cmp
popa
pop
cmpsl
sbb
xchg
les
sbb
jle
and
sub
fdivs
ljmp
pop
add
jno
and
mov
sub
pop
sub
iret
sbb
jecxz
ret
mov
push
ds
cmp
mov
push
adc
test
xor
jl
imul
dec
std
mov
jnp
daa
fs
pop
je
inc
xor
ds
lock
cmp
out
fildll
xor
repz
test
lods
cli
ret
test
paddb
cmp
lods
push
mov
add
out
lock
push
dec
jo
outsl
push
ret
das
inc
ljmp
es
pop
imul
pop
xchg
push
cwtl
xor
mov
gs
subb
fldt
jnp
and
stos
cmpsl
pop
adc
xor
add
daa
add
in
roll
pop
push
fiadds
loop
arpl
or
jmp
shrl
sbbb
cmpsb
sub
jns
divb
test
push
mov
jne
or
test
gs
test
pop
jbe
lret
cwtl
es
push
push
xchg
outsl
fbld
jecxz
mov
into
push
sti
iret
sbb
sbb
pop
or
imul
jbe
lea
movsb
xchg
test
xchg
iret
cmc
addb
loope
fcompl
scas
fdivrs
xor
add
in
dec
pop
in
cmp
jbe
jl
or
and
es
fcompl
insl
ret
add
aas
icebp
shlb
inc
rcr
nop
cld
jmp
out
inc
pushf
inc
push
jb
adcl
xor
lahf
mov
jmp
add
inc
bsr
jmp
pop
fists
jecxz
xor
aas
stos
addb
movsl
in
out
lock
sbb
ror
fsubr
pop
pushf
adc
mov
xchg
imul
jg
insb
and
mov
xor
sbb
dec
sub
adc
and
jge
rcrl
fst
in
jno
inc
pop
mov
mov
aas
push
cmp
pusha
jb
es
fbstp
outsl
test
das
outsb
pushf
sbb
out
cmp
fsubr
fstps
xchg
movsb
mov
fs
inc
mov
jl
loopne
test
rclb
leave
fdivl
sbb
mov
fnstenv
pusha
ljmp
cmp
xor
in
xchg
jp
mov
push
lret
xchg
mov
mov
mov
or
adc
fsubrl
cmp
es
pop
subb
mov
sub
push
iret
mov
cmc
pop
imul
inc
ret
ret
mov
jo
pushf
pop
out
sti
sbb
sub
xor
xchg
sbb
push
and
ret
push
ljmp
mov
ljmp
pop
fwait
cli
lahf
pop
xor
mov
cmpsl
test
lods
icebp
xchg
aad
pop
rcrb
addb
cmp
xor
push
pop
inc
sbb
outsb
xchg
xor
roll
les
cmpsb
and
in
mov
in
cmp
ja
push
out
into
add
or
sbb
loopne
pop
xlat
arpl
jge
int3
imul
push
dec
and
cmp
add
and
adc
pop
loopne
push
idivl
pop
ret
jp
imul
cmpsb
sbb
clc
pop
xchg
mov
fisubl
arpl
jge
ret
lret
hlt
stos
adc
ljmp
in
cli
adc
sub
cmp
std
cmp
jnp
adc
nop
push
or
aam
ja
xchg
pop
inc
insb
out
pop
push
rclb
sub
jg
test
jbe
int
xorl
pop
repz
and
enter
pop
sahf
aaa
dec
jmp
adc
jmp
stos
in
imul
aam
mov
adc
push
push
jl
push
fsts
push
jg
add
loope
jle
in
adc
test
xor
push
popf
les
je
imull
add
imul
mov
xchg
cmp
pop
adc
fistl
push
pop
sub
push
es
leave
stos
je
pop
repz
cmp
add
jge
xchg
test
aas
imul
jge
pop
xchg
cli
out
inc
cmp
in
mov
mov
push
xlat
ret
xchg
push
int3
xchg
push
rolb
test
xlat
pop
mov
repnz
sahf
dec
add
mov
pop
sbb
jmp
xchg
xlat
xlat
dec
call
cli
cmp
movswl
bound
loope
xorb
and
aam
cmp
xchg
pop
add
dec
add
fs
lcall
xor
jge
iret
fimull
push
cmp
xchg
imul
fstl
jns
xor
pusha
fcom
gs
add
outsb
mov
adcb
leave
das
xor
add
jl
or
bound
pop
add
cmpb
pop
xchg
push
dec
jns
loopne
or
and
pusha
push
in
enter
ss
pop
cmpsb
xchg
stos
cmpsl
mov
pop
jge
scas
lock
into
add
xchg
out
test
clc
fnstsw
faddl
inc
inc
sti
or
ss
inc
pop
arpl
xor
cmp
pop
mov
movsl
push
scas
insl
mov
mov
cmp
popa
pop
fstps
imul
lds
xor
and
js
lahf
popa
enter
mov
or
pop
and
insl
or
nop
add
xchg
push
pop
jne
lods
push
lods
adcl
sub
es
jns
xor
incl
jmp
sub
adc
fwait
push
fcoms
call
jns
scas
mov
les
int3
sub
rclb
or
loopne
push
push
pop
dec
and
nop
pop
inc
cmpsb
push
stos
rcl
loope
cld
insl
push
movsl
jnp
adc
xchg
jg
mov
jb
or
mov
add
out
adc
mov
aas
bound
cltd
fsubs
pop
sub
sahf
or
pop
rcrb
dec
gs
fsubr
jae
in
xchg
pop
adc
test
lods
mov
clc
clc
jbe
ror
mov
cmc
daa
cmp
sbb
in
dec
mov
imul
mov
lods
adc
or
fwait
roll
bound
sub
jg
filds
inc
pop
gs
xchg
sbb
mov
mov
jecxz
cmpsl
xor
ss
jmp
adc
shrl
popf
repz
xchg
sub
je
push
push
inc
dec
cmpb
push
loopne
aam
lds
push
sahf
mov
gs
movsl
sbb
sub
and
lret
sbb
pop
dec
dec
mov
loopne
fwait
mov
sub
addr16
rcrb
movsl
pop
out
leave
test
xchg
xor
mov
sbb
inc
add
dec
aam
lock
or
daa
or
leave
out
xor
mov
lret
mov
mov
push
hlt
mov
fstpt
xor
mov
rclb
mov
inc
fdiv
mov
add
psllw
call
fldenv
pusha
test
xor
js
cmpsl
pop
das
sub
mov
dec
idivl
cmp
dec
or
sub
mov
pop
xor
rcl
jb
loopne
push
cld
inc
xchg
shl
cli
mov
fisttps
ljmp
pop
in
xchg
inc
lock
loop
testl
out
mov
faddp
mov
aaa
lahf
and
sub
mov
lret
jle
arpl
sbb
mov
mov
cmp
into
and
jecxz
xor
adc
mov
sti
adc
test
xchg
sbb
ret
pop
iret
cli
out
scas
roll
mov
mov
data16
fninit
add
mov
mov
popa
cld
sub
decb
cli
sti
adc
sti
insl
js
shrl
jg
push
jne
rorb
rcll
mov
clc
stc
outsl
int3
xchg
mov
push
or
jo
jp
xchg
inc
mov
sbb
cltd
dec
cmc
inc
push
fwait
push
les
lret
call
push
insl
mov
in
je
dec
imul
nop
xchg
mov
lret
xlat
imul
push
push
mov
adc
sbb
jne
add
jg
lds
call
stc
push
std
fistps
lahf
repnz
sti
add
jo
cmpsl
mov
cmp
jecxz
mov
add
push
stos
cmp
mov
sbb
xchg
jle
jl
add
cltd
mov
fwait
adc
pop
popa
cmp
out
mov
lahf
or
jnp
push
push
xor
pushl
mov
test
imul
inc
jbe
pop
lea
stos
xchg
dec
hlt
sub
pushf
xchg
aaa
in
mov
aad
testb
jmp
outsb
jno
sbb
dec
adc
loope
cmp
adc
push
test
mov
sar
sbbb
outsl
adc
or
pop
add
sbb
in
adc
inc
mov
cwtl
cli
or
xor
mov
pop
cmp
sub
mov
arpl
cmc
dec
mov
test
xchg
negb
push
and
pop
jge
inc
mov
cmp
cli
gs
mov
push
cmp
nop
std
cli
stos
into
adc
pop
mov
push
cltd
sbb
xor
les
pop
jns
iret
mov
sub
rcll
adc
clc
xchg
stc
inc
jmp
dec
shl
lods
cli
andl
inc
push
sahf
jle
mov
pop
in
gs
movsb
fwait
aaa
jbe
div
pop
mov
arpl
jb
inc
aas
mov
pop
mov
scas
bound
movsl
cld
inc
jo
arpl
aaa
xchg
pop
ljmp
test
daa
add
adc
lret
into
adc
and
mov
add
out
js
mov
push
jo
lcall
jmp
jno
imul
add
cmc
shlb
and
pop
jns
daa
shll
insb
pusha
imul
or
xor
mov
in
push
pop
jno
push
outsb
fiadds
pop
sbb
addb
adc
fistpl
jne
inc
pop
in
mov
daa
mov
outsb
xchg
imul
lods
adc
push
dec
fwait
adc
xchg
mov
popa
adc
int
adc
push
jo
lock
mov
es
mov
rolb
xor
add
xchg
sti
jle
mov
xor
dec
in
subb
pusha
fwait
push
push
lds
jp
lcall
sbb
xchg
sub
pop
pop
sub
cs
rcll
rcrl
push
or
sbb
call
sub
mov
lods
push
adc
pop
sub
lret
xchg
cmp
sub
add
shlb
lods
mov
push
lods
cmp
movsb
xchg
pop
xchg
xchg
or
pop
sbb
push
aad
adc
cmp
mov
call
ja
or
lret
dec
mov
fidivrl
sti
lea
js
aas
outsl
mov
bound
movups
add
xchg
pop
das
aas
pop
sahf
arpl
pusha
outsl
jp
and
out
pop
rol
mov
add
mov
jnp
ficomps
cmp
pusha
cmpb
xor
ds
inc
fs
or
pop
mov
mov
lcall
xchg
dec
adc
lock
pop
insl
lcall
rorl
dec
inc
pop
daa
jnp
mov
inc
bound
sub
addr16
jg
shlb
jg
loop
ret
lret
mov
dec
jbe
xchg
cmpl
jl
pop
cli
lock
testb
pop
xor
mov
push
mov
and
shlb
push
mov
push
mov
dec
cltd
adc
fmul
out
cmp
nop
pop
pushf
jnp
aaa
scas
cltd
xlat
sbb
or
or
ss
cmpxchg
movl
jns
outsw
push
push
jg
cmp
sbb
stos
aad
mov
or
dec
mov
cmp
cmp
repnz
adc
pop
leave
mov
hlt
pop
jnp
cmpb
faddp
fldt
std
pop
decl
mov
xlat
call
or
cmp
fisttps
loop
push
add
xor
xor
pop
int
push
repnz
inc
daa
rorl
and
push
repnz
aas
xor
jp
sub
in
dec
fwait
gs
adc
or
inc
jmp
scas
outsl
adc
out
mov
and
leave
cmp
jo
xchg
mov
jb
rolb
stos
dec
sbb
pop
ds
hlt
mov
data16
dec
pop
shl
popa
iret
nop
jnp
leave
aaa
das
fldt
xchg
int
jmp
cmp
xchg
push
xor
fcomi
test
xchg
fildll
xchg
in
xor
sub
das
add
mov
push
sarb
cwtl
xchg
or
inc
ret
pop
jle
jge
mov
int3
out
mov
lods
rcl
xor
subl
fwait
xor
clc
mov
loope
repnz
jne
test
jno
mov
lret
xchg
mov
cs
dec
ret
fs
xchg
ja
push
inc
jb
aaa
xor
cwtl
enter
incb
sub
cmp
andl
sysret
sbb
mov
into
enter
shl
dec
outsl
test
sub
cmp
pop
repz
mov
daa
push
fsubs
aaa
andb
dec
sub
lcall
jbe
mov
lods
negb
fdivr
fiadds
inc
cli
pop
mov
ss
cld
std
jnp
shrl
mov
mull
dec
loopne
xor
or
ljmp
mov
xor
sbb
lods
and
cmp
xchg
in
dec
gs
aaa
sub
push
es
fstpl
fidivrs
push
bound
dec
sahf
arpl
jo
es
mov
out
adc
jle
lds
and
rorb
call
addr16
icebp
xor
xor
out
jp
cmp
lret
inc
fucom
stos
mov
push
jb
push
sub
cmpsl
idiv
popa
mov
sbb
or
out
pushf
out
insl
mov
sbb
cli
ss
in
push
dec
xchg
pop
lds
dec
sub
jle
imul
es
xor
mov
lods
xor
or
mov
mov
cmpsl
std
mov
ss
or
add
xchg
pop
sub
cmp
mov
ljmp
stos
in
mov
nop
mov
stc
dec
xor
push
push
addr16
jnp
std
cmpsb
cwtl
jge
push
scas
adc
sbb
test
sub
scas
inc
dec
loop
icebp
lcall
mov
leave
ja
sbb
in
stc
push
in
mov
repnz
cmc
adc
lods
das
mov
scas
test
out
and
lea
xchg
lods
dec
fists
lods
cmp
loopne
sahf
xor
push
pop
adc
add
adc
mov
lea
mov
inc
int
in
enter
mov
add
popf
cmp
push
jle
lret
push
in
out
jle
lcall
mov
jae
mov
aad
jae
sbb
jno
out
mov
outsl
outsb
adc
test
pop
incb
leave
mov
addb
mov
nop
or
lods
sbbl
push
push
jl
mov
mov
inc
loope
add
leave
sub
jge
xor
xchg
mov
mov
dec
popf
xor
int
repz
out
ljmp
pop
call
test
icebp
mov
andl
sub
jecxz
in
fistpl
dec
lods
mov
inc
mov
fs
cmpsl
ret
dec
xlat
pop
and
mov
inc
mov
nop
daa
aaa
insb
divb
push
push
sti
dec
je
in
icebp
fs
inc
add
add
mov
cmp
jle
jae
pusha
cmpsl
inc
adcb
ss
jb
pop
into
xchg
shll
push
addl
xor
mov
mov
shll
movsl
addr16
pop
jo
out
mov
loope
jnp
xor
xchg
imull
add
sub
and
outsb
gs
shlb
push
pop
in
push
ljmp
cwtl
int
jae
ret
cmpsb
daa
cmp
repz
lods
push
jl
ficomps
rorb
pop
xor
out
mov
ds
rcll
cmc
aas
pop
cmp
insb
xchg
mov
lret
lahf
cli
cmp
and
das
push
pop
sarb
clc
rcl
jg
fwait
sbb
push
mov
lods
out
add
inc
xchg
repnz
sbb
xchg
xor
lret
sbb
pop
loope
xor
popa
cmp
movsl
pop
xor
gs
push
leave
mov
or
fistpl
std
repz
int
xchg
ja
inc
adcl
test
dec
push
les
cmc
shl
icebp
cmp
mov
xor
cltd
or
loopne
add
aad
aaa
insl
clc
or
out
jmp
cltd
aam
sub
popf
push
ds
jp
pop
add
inc
jg
pop
push
mov
movsl
and
fs
popf
mov
inc
xor
jno
dec
fcompl
mov
push
sub
mov
mov
inc
leave
int3
ss
push
xchg
iret
dec
xchg
fwait
cmpb
stos
popf
mov
mov
jge
mov
out
or
xor
push
into
aam
repnz
mov
out
xor
mov
icebp
mov
or
je
das
movsb
xchg
mov
sbb
out
cld
pop
pop
sbb
cs
mov
add
out
or
rolb
divps
cmp
fildl
push
stos
xchg
or
loop
pop
push
data16
arpl
es
je
ret
pop
lret
loopne
nop
push
dec
out
mov
je
mov
jp
push
jl
hlt
icebp
enter
rclb
or
mov
dec
and
mov
xchg
sahf
sbb
in
das
ret
pop
add
imul
push
sub
xor
scas
dec
fs
and
mov
sahf
rclb
jg
xlat
push
popa
xchg
dec
and
pop
push
insl
add
jns
enter
cmp
jge
xchg
and
into
imul
xchg
inc
mov
shlb
inc
jl
repnz
popf
fwait
push
dec
jge
mov
xor
push
mov
xor
fsubrl
nop
pop
inc
sub
stos
lret
lods
mov
mov
and
jo
dec
inc
fsubs
mov
inc
push
repz
out
mov
push
jl
mov
mov
sbb
adc
mov
imul
jb
out
test
lahf
sbb
and
shll
mov
inc
jg,pt
lea
ja
in
mov
pop
mov
movsb
cltd
movsl
int3
mov
adc
and
xorl
push
aaa
in
aam
add
inc
and
cmc
mov
hlt
lods
cmc
push
ss
sub
adc
sub
iret
dec
adc
aad
adc
sub
xlat
add
cmpsl
js
fmuls
sub
pop
or
or
out
push
imul
pusha
mov
jne
and
enter
fisttpl
ret
into
inc
ja
imul
xchg
mov
sbbl
cmp
cmp
or
jmp
sti
add
push
jmp
mov
mov
cld
fsubrs
sbb
adc
push
dec
into
or
loopne
xchg
js
or
adc
push
test
int3
push
ficomps
xchg
fnstsw
cmc
jecxz
rcrl
or
clc
roll
mov
test
rol
xor
hlt
movsl
and
stos
scas
lea
or
subb
xor
lods
in
cld
ret
inc
dec
or
mov
lcall
cmp
mov
push
lds
outsb
movsl
outsl
or
ffree
fwait
aam
test
push
inc
push
dec
hlt
cs
xor
mov
aad
mov
mov
fwait
ss
loop
jbe
pop
cmp
xor
jns
ficomps
push
sbb
imul
out
fists
sub
insl
dec
xchg
pop
ffreep
aaa
ret
inc
cmp
in
mov
imul
lret
mov
shrl
fidivs
inc
mov
dec
push
xchg
lret
js
mov
ljmp
jmp
aad
lea
cmpsb
push
inc
mov
shrb
arpl
and
xchg
or
xchg
mov
adc
aad
call
inc
mov
pop
aad
pushf
movsl
cmp
mov
mov
cltd
pop
jne
jbe
clc
and
test
xchg
repz
mov
inc
cmpb
mov
js
inc
mov
jns
leave
fdivs
ret
mov
or
jle
inc
mov
fists
mov
push
imul
imul
cli
imul
xchg
and
mov
movsb
test
cmpsb
scas
xor
pop
sbb
ret
in
mov
movsl
dec
imul
js
lods
fwait
test
cmp
xor
lods
faddl
push
cmpsb
and
pop
jo
push
mov
dec
call
sbb
addr16
in
push
xchg
add
mov
or
dec
bound
stos
stos
and
mov
je
inc
inc
sbb
popa
jle
sbb
push
cmc
fsts
xor
mov
leave
lea
fs
pop
sub
dec
xor
pop
dec
push
jbe
sar
xor
jge
je
test
cwtl
mov
xor
in
dec
lcall
mov
sub
xchg
mov
out
mov
shrl
sahf
xchg
addr16
pop
and
jmp
sub
fildl
dec
push
pop
rcrb
push
movsl
int3
sbb
xchg
and
shrb
jmp
lods
inc
jbe
popf
es
inc
cmp
mov
leave
dec
sahf
mov
mov
push
dec
fadd
arpl
pop
orb
adc
imul
xchg
or
adc
aaa
adc
jge
insb
ret
rclb
or
aam
or
mov
dec
and
mov
cld
cmpsb
or
mov
mov
sar
mov
xchg
sbb
mov
and
pop
cmp
add
fcmovnb
imul
or
test
adc
or
cmpsl
push
ds
in
cli
sahf
mov
cmp
or
mov
movsl
movsb
inc
enter
and
adc
and
rcrl
in
scas
mov
xchg
jp
sbb
sub
nop
sub
add
pop
jl
jecxz
add
mov
sti
mov
cmp
hlt
dec
mov
mov
cltd
push
and
mov
adc
xchg
pop
jns
lret
nop
mov
ja
popf
mov
or
mov
mov
xchg
jl
ss
adc
mov
fs
rorb
shrl
mov
pushf
mov
jb
push
dec
pop
popa
das
roll
add
push
fldenv
jle
in
pop
xchg
jmp
dec
jmp
sub
pop
inc
sbb
dec
std
jmp
movsb
arpl
ss
and
jecxz
movsl
lods
cmc
push
xor
sub
inc
adc
xchg
push
pop
or
cli
push
out
xchg
les
dec
jo
fidivrs
outsl
adc
iret
enter
dec
jecxz
scas
sub
mov
rcl
inc
loop
pop
or
mov
fsubrp
jo
and
cmpsl
rcll
rorl
into
mov
pop
negl
ss
pop
out
mov
and
sti
cmp
push
inc
xor
stos
adc
jp
push
mov
adc
hlt
push
push
dec
sahf
pop
int3
aad
lods
gs
cmp
das
mov
sub
dec
int3
cmp
ja
mov
xchg
or
mov
push
xchg
and
aas
sbb
and
mov
pop
push
push
filds
movsl
mov
push
orb
sbb
mov
cwtl
fisubl
dec
cltd
xor
push
cmp
push
mov
cli
lock
insl
stos
in
xor
addl
xor
js
popl
cmp
ss
std
test
mov
pop
jno
pop
lahf
pop
xchg
xchg
inc
out
push
jne
mov
push
push
jno
in
lcall
pop
fldt
fdivl
das
jmp
fxch
in
lock
pop
or
mov
dec
pop
add
js
add
pushf
cs
jno
outsb
daa
pop
mov
mov
les
aam
and
aaa
dec
out
into
mov
dec
adc
test
add
mov
mov
mov
jnp
cmpsl
adc
push
mov
stos
std
jge
cmc
xor
sbb
std
std
push
fimull
stc
out
mov
sbb
js
bound
rcl
jl
bound
push
addb
cmp
cmp
adc
or
push
cmp
fwait
jnp
or
pop
xor
and
pop
mov
out
or
xor
pushf
insl
ja
stos
push
xchg
stos
pop
cmp
cmp
dec
jae
xchg
xchg
loop
inc
push
or
je
test
cmp
mov
cld
sbb
decb
jg
mov
adc
mov
push
in
xor
mov
sbb
adc
push
idivb
fwait
mov
sar
mov
sbb
sahf
aam
out
jp
cwtl
sub
and
inc
mov
in
into
mov
int3
sbb
cmp
add
push
or
xchg
push
out
sahf
loope
shlb
daa
jg
mov
adc
pop
xchg
or
push
fisttpll
aam
lret
push
adc
push
xorb
js
mov
insl
addr16
or
roll
cmpb
pushf
jae
pushf
pop
inc
and
jmp
mov
jle
push
iret
push
or
xchg
unpcklps
jbe
les
lahf
insb
sbb
xchg
mov
jg
pop
xor
xchg
in
rorl
and
jmp
adc
or
xchg
lods
mov
pop
aas
xchg
push
add
arpl
test
mov
cmp
sub
cmp
cmp
ds
dec
sub
mov
pop
sbb
nop
push
jns
addr16
cmp
mov
cmp
in
sbb
push
mov
nop
inc
sahf
add
xchg
mov
mov
dec
int
jno
stos
lcall
mov
pop
rclb
push
and
push
dec
ja
sbb
pop
sbb
popa
add
gs
and
fcomps
xlat
and
xchg
mov
dec
mov
out
adc
bound
pop
jnp
xchg
pop
mov
dec
inc
xchg
jp
scas
movsl
and
xor
sbb
sub
loop
mov
add
in
push
jnp
loop
inc
aad
stos
cld
sbb
push
adc
and
rorb
inc
in
lods
jb
and
xor
adc
aad
mov
sub
adc
lret
adc
test
xor
popf
ja
xchg
mov
lea
jmp
or
xor
xchg
sub
movsl
movsl
adc
sbb
xchg
icebp
test
mov
sahf
repnz
adc
sub
cmp
jb
ret
aam
mov
lds
lret
push
xor
es
lret
cld
scas
inc
movsb
cwtl
cmp
outsb
lret
sub
loopne
ja
mov
lock
loopne
rclb
stos
lods
mov
dec
aam
or
mov
cwtl
je
mov
inc
iret
mov
std
dec
lahf
sub
pop
or
xchg
xchg
mov
mov
popa
cmpsb
scas
test
sub
sub
jp
sti
jl
inc
inc
rorl
in
lods
mov
stos
and
mov
and
pushl
sbb
mov
fwait
adc
mov
mov
imul
stc
jbe
fwait
shll
mov
cmp
loopne
or
jge
jecxz
popa
pop
add
ret
lods
pushf
push
fsubp
sub
es
push
xor
orb
int
mov
dec
jbe
fidivrs
push
add
pop
or
push
xchg
dec
insl
sub
xchg
into
inc
add
rorl
push
mov
xchg
int3
jge
lea
popf
dec
arpl
mov
dec
cmpsb
jns
mov
mov
out
scas
pop
push
push
inc
mov
mov
stos
dec
mov
sahf
dec
jmp
mov
mov
stos
pop
sbb
inc
cmp
mov
fsts
mov
insb
shlb
pop
nop
xchg
lret
push
pop
movsl
or
dec
gs
movb
inc
enter
rorb
daa
inc
adc
xchg
adc
outsb
stc
and
ret
mov
roll
push
pop
and
test
shlb
xchg
mov
mov
pop
stc
cmp
jmp
loop
pop
jg
into
xchg
mov
ret
mov
xor
lods
addr16
cltd
and
jne
enter
cmpsb
inc
push
ret
paddusb
adc
dec
add
lock
jne
xor
fcoms
les
dec
rol
jnp
outsb
xor
inc
or
mov
push
xor
rorb
mov
push
inc
aad
mov
fcmovb
lods
dec
mov
adc
les
jae
xchg
cld
fsubr
lods
ficoml
iret
push
jb
inc
sub
jno
mov
data16
sbb
cmp
stc
cmp
push
xchg
xchg
in
fwait
xchg
sbb
imul
aad
dec
sub
leave
push
pushf
rcll
call
pop
jbe
jmp
out
mov
inc
adc
jge
sahf
lret
jbe
inc
test
pusha
pop
test
pop
es
into
negl
xlat
push
clc
stc
in
mov
push
scas
inc
jo
jge
adc
cmp
inc
push
aam
dec
cmp
cli
aas
adcl
in
add
mov
pop
jmp
outsl
push
insb
jecxz
jl
cmp
mov
sarl
sbb
ljmp
js
dec
dec
xchg
fnsave
stos
out
jns
bound
and
or
out
sub
dec
xchg
add
push
jmp
cmpsl
fwait
or
lods
popfw
mov
add
je
enter
sti
and
imul
icebp
mov
popa
cmp
push
pop
mov
insl
loope
out
dec
mov
adc
call
xorb
cmc
xor
mov
fwait
mov
pop
sub
icebp
add
and
or
sbb
pusha
jo
xor
jg
add
sbbb
es
arpl
flds
les
sub
aas
xor
lds
inc
inc
sbb
insl
xchg
and
dec
outsb
scas
xor
in
jnp
xchg
or
push
sbb
les
jbe
sbb
lods
and
cmp
dec
movsl
xchg
pop
mov
cmp
push
or
daa
push
dec
jmp
add
pusha
add
xchg
imul
cwtl
inc
inc
fsts
rcll
adc
scas
jmp
xchg
xchg
pop
mov
mov
xor
jp
sub
daa
arpl
or
outsb
sbb
jmp
scas
jle
push
dec
pop
sbb
cld
subb
xchg
fwait
sbbl
sub
adc
into
pop
sti
push
pop
test
xor
xchg
or
lret
cs
pop
in
dec
leave
mov
repnz
and
or
jns
jecxz
pusha
xor
mov
notb
xchg
stc
scas
scas
pop
or
xchg
out
stc
les
jg
testb
jb
push
jle
lods
pop
nop
iret
sub
dec
sbb
and
aas
sub
rclb
adc
movsl
rcll
and
push
sbb
add
into
pop
stc
and
sahf
push
jmp
add
mov
adc
test
jae
es
xlat
dec
sub
mov
int3
imul
mov
inc
inc
inc
cli
shlb
sbb
mov
int
mov
nop
mov
popf
int
cmc
mov
xlat
clc
push
les
enter
push
sbb
test
sahf
mov
outsl
data16
cmp
cli
cmpl
add
ja
lahf
jmp
xor
int
xlat
testb
sub
seto
scas
sbb
sbb
xor
xor
cs
dec
or
xchg
loope
js
orl
mov
inc
loopne
or
imul
test
test
mov
push
sti
mov
insb
fmuls
mov
loop
jp
mov
vmptrst
rorl
js
in
xchg
stos
sub
icebp
ret
sub
jno
add
add
pop
adcb
insb
mov
pop
adc
int
sub
push
mov
fstp
arpl
test
push
and
out
mov
jl
pop
xchg
xchg
lds
scas
lcall
xchg
xchg
mov
vpsadbw
xchg
out
pop
xchg
cmpsl
and
jmp
pop
xor
ds
int3
stc
std
ficompl
popa
stos
test
jbe
sarl
jno
add
cmp
pop
push
mov
inc
pusha
adc
ss
add
popf
pop
sbbb
rorb
inc
xorl
xor
or
cltd
xor
mov
adc
mov
fdivrs
ljmp
scas
arpl
movsl
cs
movsl
sbb
cmp
stos
mov
push
mov
and
mov
mov
cmp
stc
xchg
mov
push
in
cltd
push
test
daa
cmc
add
ljmp
cmpsb
sub
in
or
push
fisttpll
imul
sbb
or
cmp
sbb
fidivrl
xchg
pop
test
or
mov
xor
or
pop
mov
push
lret
test
xor
addb
mov
imulb
leave
notl
ret
or
push
notb
fmulp
jnp
jae
and
cmc
xor
scas
mov
ds
adc
fnstcw
or
xchg
pop
pop
bound
bound
cmp
cmp
dec
iret
add
xchg
cmpsl
mov
in
jecxz
pushf
out
mov
lahf
fcmovu
std
fstps
loope
xchg
es
mov
loope
out
sub
or
mov
fidivrs
mov
dec
mov
flds
cmp
sub
xchg
push
fcoml
mov
mov
mov
jg
and
mov
add
fisttpll
cmp
push
pop
outsl
jo
sub
mov
cwtl
xor
imull
dec
xchg
sbb
sub
mov
xor
cld
aam
dec
lds
mov
shll
dec
pop
fsubrl
inc
arpl
mov
mov
imul
inc
or
in
ficomps
in
or
pop
mov
jge
mov
pop
insl
inc
rcr
test
adc
jle
and
mov
clc
sbb
xor
mov
popa
ss
mov
pop
orl
jmp
pop
xchg
or
test
mov
or
pop
inc
aad
xchg
xor
mov
cmpsb
popf
xor
mov
in
das
push
cld
test
sahf
inc
movsl
lea
in
aaa
lahf
scas
inc
xchg
xor
stos
add
jge
cmp
int3
push
movsb
xchg
enter
hlt
fldl
jmp
sub
mov
lcall
push
enter
dec
and
xchg
ds
push
fadds
push
je
dec
jbe
xor
mov
int3
int3
ret
aaa
push
inc
push
xchg
sbb
inc
lods
outsl
shlb
addr16
inc
adc
out
and
pop
dec
xchg
add
hlt
sub
mov
out
pusha
mov
adc
xor
xor
push
out
adc
movsl
mov
mov
outsl
jno
sti
adc
rorb
sarl
mov
and
mov
or
and
insb
push
sbb
std
mov
cmpsl
xchg
mov
aad
lea
ljmp
ds
jmp
sbb
stos
add
mov
cmp
loop
pop
aas
jns
ja
rorl
sub
pop
vmread
cmpsl
mov
mov
out
movsl
sbb
sbb
test
adc
leave
fcmovne
jns
ja
dec
testl
add
push
std
and
mov
dec
jge
add
xchg
sbb
scas
popf
outsb
fildll
mov
and
repnz
sbb
shr
mov
mov
pop
in
ret
imul
lds
negb
xchg
jns
xchg
cmpsl
add
scas
sbb
xorb
and
lods
push
dec
and
es
cmpsb
and
test
test
push
hlt
cmp
xor
repz
and
mov
dec
sbb
mov
sub
push
cli
frstor
pop
push
int3
adc
add
cmp
js
sub
stc
ficoml
xchg
or
xor
fiaddl
clc
daa
loop
mov
or
sub
cmp
gs
dec
push
cmp
mov
fcom
rorl
lock
jo
ja
fisttps
neg
inc
lds
xor
jmp
mov
dec
dec
ret
fisubrs
shll
clc
adcl
lcall
cmp
fadds
in
push
mov
fwait
sbb
jo
lock
dec
sbb
rsm
subb
mov
repz
push
jbe
lods
xchg
stos
jl
out
cmpb
ss
dec
xor
push
jle
iret
inc
xchg
loope,pt
inc
loopne
fcompl
cld
pop
daa
add
adc
or
push
mov
loop
jge
inc
mov
xchg
or
xor
push
pop
lret
or
xchg
ret
outsl
icebp
cmpsb
push
ss
dec
scas
shll
pusha
in
test
ljmp
xchg
lods
in
xor
mov
xchg
inc
inc
jge
dec
pop
cmpsl
mov
xor
insl
repz
mov
insl
jle
pop
scas
mov
nop
insb
loop
inc
or
push
sub
imul
pop
flds
out
repnz
adc
aad
xchg
and
jecxz
jmp
push
lea
je
shr
jmp
sub
sar
mov
push
leave
mov
add
push
jg
mov
leave
sub
mov
cmp
mov
in
pushf
sbb
adc
inc
sub
mov
xor
push
es
loopne
dec
pop
ficoms
je
ja
push
sub
or
sbb
outsl
int3
dec
aam
sti
push
movsl
xchg
jle
test
push
adc
out
fmull
sbb
pop
cli
push
dec
iret
ds
mov
testb
inc
mov
xor
hlt
mov
jnp
imul
jl
les
sahf
mov
adc
pushf
pop
aad
arpl
cmp
in
dec
mov
or
cmp
add
addb
cli
gs
pushf
rorb
sbb
mov
cmp
cltd
pop
or
frstor
push
dec
movsb
or
xchg
jbe
popa
adc
fstpt
adcl
ret
sbb
dec
cmp
aam
cmp
or
jb
iret
lret
jnp
push
jns
ret
or
mov
subb
mov
xchg
lahf
in
cmp
mov
je
mov
push
out
sar
outsl
or
sub
lret
add
adc
lret
xor
sbb
imul
aas
js
xor
sbb
fistpll
ss
lea
dec
ret
aas
aaa
mov
jle
dec
sbb
sar
pop
les
and
int3
mov
stos
sub
cmp
add
cs
out
lahf
lahf
pop
cs
inc
leave
call
jl
dec
and
in
mov
add
push
and
xor
pop
push
insl
lahf
inc
mov
out
mov
inc
or
and
lods
xchg
pop
out
mov
stos
lods
dec
inc
cmc
testb
adc
ds
jnp
cwtl
pop
pop
cmp
inc
inc
enter
cli
dec
jo
inc
sarb
fmulp
and
jo
sahf
lods
dec
push
pop
lret
sahf
test
dec
and
pop
imull
inc
push
sbb
je
rorb
xor
dec
imul
adc
or
es
ja
push
mov
push
sub
and
jmp
cpuid
in
int
mov
add
aas
dec
add
pop
xchg
rorl
jnp
dec
mov
bound
sub
or
and
fcoml
ret
push
lds
aas
enter
pop
dec
cltd
imul
clc
mov
mov
mov
cli
sbbb
fstpt
or
add
jg
call
jle
cltd
ss
mov
das
push
cmp
sub
adc
sub
pushf
mov
daa
push
lcall
inc
imul
xor
sahf
in
movsb
cld
in
neg
push
aaa
xchg
dec
subl
adc
out
imul
outsl
jecxz
cmc
dec
jnp
lock
fadd
xchg
test
xor
dec
adc
sub
inc
ret
push
fists
push
or
jecxz
dec
sbb
nop
cmp
outsl
mov
imul
lock
pop
pop
xchg
add
sar
jmp
jle
ljmp
rcr
cmp
mov
shrl
not
test
pop
cmp
push
dec
cld
lods
movl
mov
lods
pcmpeqw
or
fwait
imul
jns
xlat
idivl
sbb
sti
sbb
fmuls
test
cmpsl
and
adc
in
add
imul
cltd
push
ja
hlt
pop
dec
push
popf
repnz
int
pusha
add
cld
push
dec
negb
xchg
sbb
lds
movsl
dec
and
imul
into
jnp
pop
sub
pop
mov
or
push
pop
insl
xor
dec
lods
sbb
xchg
jecxz
out
jle
sbb
jp
pop
maskmovq
testl
test
xchg
sub
xor
out
adc
insl
cmp
imul
push
jecxz
lret
fstsw
mov
xor
sar
push
cmp
mov
inc
push
cmpsb
and
stc
cli
mov
and
and
add
insb
psadbw
cltd
jns
shll
inc
lods
xor
mov
inc
iret
or
xor
xchg
rcll
xchg
ds
shll
sub
insb
mov
and
xchg
mov
adc
and
pop
jb
xor
sub
inc
mov
cmp
fnstsw
mov
imul
mov
fcoms
sbb
fsub
mov
mov
inc
xor
cwtd
loopne
push
pop
ret
pop
lahf
add
ficoms
sub
lret
jae
stos
dec
std
push
adc
mov
loop
cmpsl
inc
adc
add
leave
add
ljmp
or
mov
scas
push
push
pop
clc
stos
xor
or
adc
push
in
inc
insl
repnz
lock
test
jns
aad
shlb
sub
sbb
add
mov
cmpsl
clc
outsb
pushf
dec
into
inc
dec
sbb
hlt
add
outsl
or
and
dec
push
out
push
sub
scas
push
mov
fsubl
shlb
dec
dec
and
dec
push
xor
cltd
mov
insb
ffree
and
js
add
mov
dec
lret
add
in
mov
ftst
loope
lods
insl
xor
int3
sbb
addl
lds
movsb
add
sub
mov
pop
pop
cmp
mov
adc
insb
or
iretw
mov
add
mov
and
shlb
lahf
pop
and
or
xor
aaa
lcall
xchg
dec
adc
sbb
push
dec
xchg
and
and
outsb
or
inc
hlt
jbe
test
jne
dec
mul
add
scas
xor
subb
sbbl
jb
sbb
cmpsb
sbb
testb
sbb
test
xor
iret
xchg
test
dec
add
adc
je
cld
mov
xchg
xchg
sahf
jbe
xchg
push
jae
sub
dec
gs
xsave
je
bound
xchg
or
mov
add
mov
stos
mov
dec
xchg
inc
mov
jp
into
scas
and
mov
fistpll
cli
data16
and
xchg
cmp
daa
mov
jne
std
in
lds
lods
push
cmp
in
shll
test
mov
lret
inc
mov
mov
pop
fwait
out
xor
push
repnz
dec
add
insl
pop
sub
scas
aas
sti
in
in
nop
je
inc
and
cli
xor
stos
stos
call
sub
inc
sub
outsl
inc
stos
xor
std
sarl
js
push
das
mov
mov
push
cvtpi2ps
ja
mov
cmp
dec
lods
push
scas
mov
fsubs
jle
sbb
push
lods
cmpsl
jmp
mov
xor
cmp
test
out
int3
or
inc
pushf
and
inc
test
outsb
imul
mov
sub
adc
into
mov
aas
add
and
xchg
mov
pop
fiadds
loope
and
scas
mov
inc
stos
pop
jmp
rol
pop
lret
imul
inc
sbb
push
sub
dec
or
ret
jl
jns
sbb
pusha
inc
push
mov
das
sahf
mov
mov
add
arpl
not
cmpsl
and
mov
iret
stos
mov
pop
int
pop
cltd
or
loop
sbb
jb
mov
out
call
cmp
xor
inc
adc
jmp
les
pop
sub
lea
lea
inc
aaa
add
push
ret
mov
jb
add
push
add
shrl
xor
cmp
pusha
call
or
mov
loop
push
mov
push
cmp
push
fsubl
cmp
jae
cmpsl
sar
xchg
and
pusha
xor
mov
repnz
jmp
int3
add
inc
sbb
xchg
adc
add
mov
repz
scas
loop
cmp
mov
push
inc
pop
jle
jecxz
loopne
and
xchg
jo
adc
push
out
repz
rorl
inc
xchg
sbb
out
loop
inc
mov
dec
push
mov
mov
cmpsl
das
pop
pop
dec
xchg
sbb
scas
fs
jo
jg
push
in
daa
cmp
out
mov
ret
lds
xorb
or
dec
clc
fs
cmc
es
xlat
int3
xor
pop
jnp
xchg
mov
shlb
inc
repnz
push
repz
add
sbb
or
and
scas
jmp
inc
ftst
cmp
pop
mov
imul
dec
aaa
sbb
push
icebp
cmp
cmp
pop
xor
cmp
std
cmp
inc
in
sbb
cwtl
jecxz
bound
pop
insl
mov
fdivrl
xor
mov
hlt
iret
fs
and
in
imul
test
push
sbb
movsl
stos
xchg
dec
test
sahf
addr16
or
push
ljmp
sbb
out
pop
popa
mov
adc
lea
jl
in
je
xchg
cli
lods
int3
mov
cli
lock
aam
imul
mov
lahf
std
movsb
rolb
int
scas
daa
cmpsb
xchg
sub
mov
xor
rol
jg
out
jl
lods
add
push
fisttpl
fcomip
dec
pop
ljmp
and
lods
pop
xchg
push
mov
lock
adc
jnp
push
incb
push
cmp
leave
sbb
sub
imul
add
inc
push
into
in
adc
or
in
loop
mov
fstps
or
cmp
enter
in
pop
sbb
cmp
pop
call
push
movsb
fcompl
rorb
mov
adc
fstp
scas
or
jg
imul
add
pop
pop
iret
arpl
pop
xchg
in
nop
add
mov
push
pop
icebp
lcall
mov
aad
nop
lds
ds
xchg
push
mov
pushl
pop
ds
inc
xchg
fistl
icebp
or
repz
test
jle
inc
out
adc
add
test
and
or
mov
pop
ja
dec
xchg
nop
pop
xor
addr16
ret
notb
mov
jae
jge
rcrb
push
cmpb
lods
cmp
stos
sub
fisubrl
cmpsb
sbb
daa
adc
pop
stc
mov
movsl
push
dec
lods
and
adc
cmpsb
imul
xor
pushf
pusha
jecxz
push
les
mov
mov
dec
push
adc
jmp
cwtl
mov
stos
mov
mov
cwtl
cmpsb
test
movsl
add
pop
std
cs
or
dec
in
add
and
dec
adc
jo
pop
aam
iret
movsl
mov
mov
and
adc
cli
sub
cs
out
jnp
int
mov
fcoml
lea
push
push
test
mov
and
stc
test
aam
mov
mov
push
ud1
mov
or
hlt
sub
add
jmp
insl
mov
sti
sbb
inc
xchg
scas
mov
fadd
pusha
shlb
aaa
xchg
int3
push
stos
xor
ret
scas
insl
xor
stos
jo
cld
mov
sbb
pop
cmpsb
ja
sti
xor
lcall
jne
jg
bound
cli
fwait
aas
xor
ss
mov
cmpsb
sbb
pop
adc
movsl
call
out
incb
jne
mov
aam
inc
cltd
xor
dec
lret
rcrl
jl
push
sarl
rclb
mov
or
inc
jp
xor
xchg
aas
mov
mov
mov
mov
xor
xchg
mov
enter
mov
inc
xchg
mov
mov
sarb
js
pop
jmp
aad
cmp
mov
shll
and
out
arpl
mov
cmp
les
inc
push
sahf
mov
jnp
add
push
sbbb
add
hlt
mov
seta
xor
cltd
dec
and
out
stos
cltd
stc
aad
jo
mov
and
fcoml
sub
iret
pop
fisttpll
push
ret
jbe
das
sub
out
mov
inc
orb
or
test
mov
bound
pop
push
test
in
push
xlat
xchg
xchg
dec
pop
or
xchg
add
stc
mov
addr16
xchg
mov
jecxz
pop
push
push
lahf
cmpb
dec
sub
cmp
arpl
push
and
pop
scas
adc
mov
xor
repz
jbe
sub
dec
cmp
into
aas
xchg
sub
imul
das
pop
sub
xchg
cmp
xchg
lret
add
fcomip
fmull
pop
out
mov
add
jmp
arpl
arpl
add
xor
daa
icebp
stc
inc
ljmp
out
orb
lods
repnz
bound
pop
pop
ficomps
pop
xor
mov
or
fcmovu
pushf
ret
lcall
rcrb
sbb
aad
cmp
je
sti
insl
inc
sti
movsb
mov
das
or
lds
add
enter
je
lods
out
or
inc
leave
test
push
pop
dec
pop
lret
pop
jg
daa
mov
dec
push
xchg
stc
push
cmpsl
clc
add
add
ljmp
xor
fiaddl
sbb
xor
or
loopne
outsb
or
sbb
insb
int3
retw
enter
aam
cs
add
push
inc
add
xchg
insl
inc
lods
cmpsb
incl
in
andl
xchg
inc
adc
push
divl
insb
push
test
icebp
shlb
lcall
stc
notb
repz
and
aad
inc
or
sbb
aad
mov
pop
dec
arpl
ror
ret
cld
push
scas
fiaddl
daa
xor
setae
or
cmpsl
fnstsw
fdiv
repnz
mov
pop
mov
mov
ficoml
xchg
ja
lock
push
lds
jae
mov
into
addb
mov
lock
mov
jb
aas
dec
rcrb
pop
sbb
sbb
and
scas
cmpsl
jbe
imul
mov
jne
les
sti
jb
stos
cmpsb
daa
xor
popf
mov
imul
fucomi
out
out
and
push
adc
mov
adc
fwait
xor
jb
dec
ja
cltd
and
loopne
pop
push
andl
loop
mov
dec
adc
pusha
push
dec
and
sbb
mov
sete
std
xor
cmp
pop
sub
scas
push
push
mov
cmpsl
ds
int3
push
mov
in
ljmp
outsb
pop
dec
out
in
xchg
ja
lret
mov
pushf
sti
idivl
push
outsb
scas
push
dec
cmp
jmp
jb
les
push
and
xchg
aam
push
js
jmp
out
loope
ljmp
and
and
pop
push
add
push
outsl
popa
push
cld
fisttps
mov
ja
cwtl
inc
dec
fdivrl
cltd
fcmovnu
xorl
and
add
mov
sub
mov
enter
ret
cwtl
xchg
cs
clc
jae
pop
add
lret
mov
in
imul
aaa
ret
or
jnp
push
es
mov
clc
rclb
in
push
stos
rorb
or
ss
cli
dec
inc
pushf
je
or
je
jno
into
cmp
fmuls
jo
sbb
ljmp
lret
out
out
aad
fdivrs
jp
xchg
cmp
or
mov
pop
ss
jecxz
rcl
cs
push
mov
data16
movsl
cli
mov
pop
enter
int
loop
cli
icebp
mov
test
cltd
xor
mov
sbb
mov
repnz
jp
add
xorb
sbb
arpl
pop
stos
mov
or
xor
and
adc
push
fwait
dec
in
and
push
add
inc
push
mov
fs
xchg
or
mov
mov
dec
fdivs
stos
stos
xchg
pop
cmpsb
pop
jnp
pop
ja
pop
mov
dec
out
mov
or
push
mov
adc
movsb
mov
rcl
nop
adc
cmp
bound
insl
mov
jp
fdivrs
or
pop
cmp
mov
out
mov
or
cwtl
mov
movsl
into
pop
fs
add
or
sti
outsl
xchg
mov
insb
inc
mov
jo
test
push
dec
mov
inc
idivl
int3
in
cmp
out
sahf
lahf
test
rolb
push
jecxz
add
popf
mov
cli
divb
mov
push
pop
cmp
mov
add
fmuls
loop
std
xchg
mov
mov
outsb
sbb
aas
fistpll
repz
shlb
das
xlat
insl
insl
mov
fstpl
iret
xchg
pop
cltd
rorb
addr16
mov
outsb
data16
add
cld
xchg
cs
scas
sub
lcall
std
js
cli
jne
gs
jbe
fsts
lret
outsl
jne
scas
jecxz
outsb
imul
fcmove
mov
sbb
test
mov
lds
ret
adc
push
mov
xor
jmp
das
cwtl
mov
pusha
ret
mov
or
int3
push
sub
add
in
add
cmp
cmc
mov
jo
cmp
dec
ja
sbb
aam
cmp
in
cmp
xor
or
mov
jecxz
les
insw
jge
fisubl
sbb
adc
mov
stos
shr
test
add
sarb
or
bound
cltd
ficoms
jp
lods
dec
loope
and
xor
es
jo
imul
mov
aad
mov
fisttpl
es
out
cmpsb
test
out
cmpsb
pop
cmp
mov
test
shrl
jle
lret
jle
pop
adc
pop
addb
dec
mov
decb
xor
scas
xchg
dec
movsb
ret
repz
sub
lds
icebp
or
xor
lock
jg
test
and
roll
pop
mov
mov
sub
pop
xor
nop
into
test
cld
xor
jne
cmpsb
sti
cli
rorb
xchg
daa
push
stos
xchg
or
data16
or
lahf
xchg
jb
mov
add
cltd
cmp
test
bound
add
andb
lahf
int3
cmc
xchg
adc
xchg
pusha
std
or
ss
push
sahf
xchg
insl
imul
clc
ret
jl
dec
inc
inc
sbb
pusha
sbb
sbb
mov
and
test
call
and
pop
test
cmc
cmp
enter
shll
sbb
out
xor
sub
jl
mov
pop
mov
jp
pop
movsb
sbb
xor
cld
mov
ror
movsb
lds
movsl
mov
cmc
jb
jmp
popa
pop
mov
movsl
clc
pop
xchg
loopne
or
mov
mov
dec
popa
cmp
and
repz
push
sub
mov
and
xor
fwait
xchg
push
inc
add
jne
bound
mov
rcrb
in
push
jl
push
stos
or
sub
push
xor
push
daa
xchg
inc
mov
out
sahf
mov
jle
stos
mov
push
fdivs
mov
jl
or
sarb
cmpl
fwait
roll
and
push
in
imul
mov
les
sub
mov
inc
jle
sub
das
xlat
or
repz
mov
adc
mov
xchg
xchg
outsl
mov
push
cwtl
push
cmpsb
xor
pop
or
hlt
or
cmpsl
inc
icebp
jo
xor
inc
fsubs
pop
popa
shlb
fwait
mov
test
insl
fimull
js
cltd
inc
cli
pop
push
mov
into
lcall
mov
test
stc
jb
and
fisttps
lods
scas
pop
xor
push
dec
fdivrs
adc
mov
dec
mov
or
les
mov
rcll
cs
pop
data16
into
test
and
mov
jns
sub
loopne,pn
je
es
fadd
ret
push
xor
idivb
rcl
in
int
add
call
mov
mov
mov
and
shll
xchg
enter
add
aam
pop
in
movsl
cmp
imul
jno
fwait
testb
pusha
ficoms
push
push
std
stos
sub
push
sbb
movsl
adc
inc
xchg
or
push
nop
mov
adc
fidivs
and
imul
push
pushf
xchg
fidivl
data16
inc
mov
push
xor
jmp
push
mov
cmp
in
cli
and
in
mov
mov
out
sbb
jmp
mov
and
je
dec
jle
aad
push
sti
jmp
push
dec
xlat
aaa
loop
adc
or
divb
cmpsl
imul
pop
xor
les
das
imul
cwtl
mov
sub
fildll
mov
insl
dec
rcll
fsubrs
repz
pop
sub
ret
test
jmp
jle
mov
add
out
pop
xchg
xor
icebp
or
cmpsb
inc
lret
mov
out
xor
nop
cli
mov
fadd
mov
data16
cmp
sbb
xor
inc
movsb
roll
insb
cltd
jg
mov
mov
popf
inc
cmp
cmpsb
xlat
rcrl
adc
pop
movb
out
mov
mov
ss
bound
ljmp
enter
mov
lret
mov
ret
lock
inc
out
loop
xchg
imul
fs
iret
cld
cmpsb
jecxz
push
movsb
inc
hlt
rolb
push
mov
push
or
adc
fidivrl
xor
das
shrl
sbb
inc
inc
repnz
or
jno
add
or
mov
lods
inc
push
setl
mov
xchg
std
fistpll
stc
dec
sbb
or
xchg
push
push
dec
or
inc
push
mov
mov
jae
mov
pusha
mov
negb
cltd
and
sbb
pop
daa
adc
pushf
push
orb
mov
cli
mov
call
mov
adc
cmp
cmp
add
jmp
adc
xor
mov
cmp
pop
fwait
mov
es
jno
loop
cmp
xchg
mov
fwait
test
adc
mov
loop
pusha
aam
sbb
inc
fcompl
dec
ret
cmpsl
jge
or
lds
mov
jae
icebp
xor
add
add
lret
cs
xchg
gs
xor
nop
jmp
push
xlat
xorb
mov
xlat
enter
jbe
push
jp
test
xchg
enter
repz
sbb
loop
adc
repz
lock
mov
add
andl
je
loop
cli
jne
rcll
cltd
out
test
test
mov
xchg
add
cmp
sbbb
neg
jl
in
pop
dec
cmpsl
mov
ret
mov
scas
lock
pop
arpl
pop
arpl
jp
pop
cmp
jg
imul
mov
jb
dec
lret
and
mov
out
pop
cmpsl
jmp
sbb
popa
sarl
aam
shrb
inc
sbb
mov
cltd
stos
out
inc
and
and
push
cmpsb
mov
mov
imul
sbb
repz
roll
pop
mov
xor
inc
xchg
mov
ds
cmp
dec
shlb
shlb
or
subb
arpl
sbb
jne
xchg
mov
arpl
call
lock
xor
imul
bound
adc
adc
xorb
ja
dec
test
mov
jge
aad
aad
bound
addr16
sbb
inc
fwait
lods
xchg
inc
fcmovnu
popa
add
insl
lods
mov
jno
stos
fimull
inc
xchg
mov
jmp
stos
mov
mov
mov
test
hlt
ret
scas
mov
rep
out
addl
cmp
xchg
das
sub
aas
loopne
hlt
mov
pop
add
ss
add
movb
sub
push
js
xchg
cmpsb
jne
xchg
or
enter
pop
cltd
add
int
insb
add
add
mov
addr16
in
mov
jnp
pop
mov
xchg
ret
repz
push
lods
fldenv
inc
jge
scas
dec
add
and
lret
fcmovnb
or
mov
and
aas
fs
and
mov
xchg
jne
or
mov
inc
add
out
cmp
jbe
mov
sbbb
cld
jns
loope
mov
shr
int
out
notl
mov
cmp
fwait
sub
mov
sub
cmp
mov
dec
jno
imul
adc
je
inc
cmp
lret
cmp
xor
mov
xor
fsubs
mov
movsl
sub
lds
sahf
fwait
lcall
mov
mov
jmp
stos
jbe
popf
repnz
mov
cld
loopne
push
mov
push
out
stos
mov
pop
data16
push
xor
cmp
popa
and
mov
mov
hlt
cltd
pop
mov
pop
push
dec
fcoms
aad
jl
int3
jg
jecxz
pop
add
and
adc
bound
sbb
test
faddl
popf
jmp
xchg
pop
push
mov
popa
pop
js
or
xor
sbb
out
scas
cltd
inc
mov
in
xchg
pop
pushf
sub
pusha
test
push
mov
and
dec
out
jae
in
add
popf
lret
jp
sbb
adc
xchg
loopne
ds
insb
inc
sub
adc
xchg
ret
scas
bound
and
and
adc
push
mov
push
cmp
pusha
jl
cmpl
or
shlb
in
or
add
outsl
dec
push
adc
aas
cmp
push
xor
or
inc
inc
push
sahf
cmp
sti
in
sub
cmpsb
and
outsl
dec
xchg
andl
mov
fcomps
mov
inc
nop
xchg
push
inc
pop
cmpsb
movsb
adc
cmp
jns
mov
mov
fdivrs
mov
les
shr
stos
mov
aam
dec
or
jno
outsb
sub
add
movsb
ljmp
shrl
sub
lods
lods
jno
out
aaa
jo
fst
dec
mov
mov
mov
mov
popa
mov
ret
push
data16
adc
pop
dec
jb
push
and
imul
out
inc
out
movsb
mov
mov
dec
mov
inc
fiadds
jno
cmp
mov
leave
sti
and
and
scas
push
and
cltd
mov
push
cli
sahf
inc
jl
mov
xchg
imul
sbb
roll
push
test
push
shll
mov
xor
xlat
sqrtps
push
lret
push
ret
aaa
push
pushl
shlb
pop
inc
xor
sti
imul
mov
push
inc
into
inc
or
nop
insl
hlt
mov
int3
imul
stc
and
dec
mov
jae
pop
or
in
xor
xor
push
leave
jle,pt
mov
mov
and
mov
loopne
mov
call
jmp
cmpb
dec
adc
int
addr16
scas
jae
rcl
adc
cmp
rol
lods
int3
scas
mov
mov
mov
fistps
std
jge
xlat
gs
mov
in
xor
cli
mov
loopne
mov
pop
sub
dec
push
rcrb
sub
ds
add
out
xor
mov
rolb
divb
xchg
adc
repnz
mov
sbb
inc
stos
std
xor
mov
loopne
arpl
andl
mov
sbb
aam
xor
lods
repnz
mov
xor
add
mov
mov
and
pop
ret
les
ud1
aam
sbb
vhsubps
in
sarl
outsb
jp
arpl
and
imul
aad
push
adc
leave
adc
mov
push
sarl
inc
xchg
inc
popl
pop
add
data16
sarb
fcmovnb
imul
ror
stc
xor
dec
ret
inc
mov
push
pop
pop
mov
das
jb
jns
pop
mov
adc
mov
mov
add
sbb
dec
lods
fwait
jl
pop
into
loope
fwait
call
or
loope
add
mov
push
pop
pop
pop
mov
jmp
test
in
push
je
out
arpl
add
daa
push
movsb
mov
ljmp
ret
jno
verr
mov
jmp
add
dec
mov
mov
push
dec
mov
idiv
stos
inc
dec
jge
xor
fistpl
inc
sub
pop
push
fsubrl
adc
pop
push
call
lret
adc
lcall
cmovge
dec
test
dec
xchg
mov
ljmp
lods
daa
or
push
add
aaa
popf
inc
int
das
cmp
sub
std
dec
aad
stc
xchg
xlat
outsl
out
inc
xchg
cmp
xchg
int3
fidivs
aam
xor
popa
add
int3
in
stos
sbb
lock
xchg
add
push
sbb
push
loopne
pop
addr16
pusha
add
fldenv
test
icebp
imull
aas
push
leave
mov
and
xor
mov
mov
inc
bound
sbb
lret
mov
add
int
movsl
popa
cmp
dec
pop
jno
sbbl
fs
out
pop
in
add
lret
xorl
into
aam
int
cld
cltd
or
mov
ja
cmc
add
movb
xchg
idivl
mov
pop
sti
scas
sub
xor
lcall
nop
lods
or
imul
cwtl
shrb
jmp
test
cs
mov
aam
bound
test
cmp
insl
insl
pop
mov
fmull
jge
mov
mov
push
mov
mov
jl
nop
or
loop
inc
add
ds
mov
mov
pop
dec
sbbb
fstpl
cmp
dec
call
xchg
pop
xor
ja
pop
jb
je
inc
inc
lods
xorb
mov
out
je
out
mov
push
std
cmp
mov
aas
mov
in
cmp
imul
and
icebp
push
inc
mul
enter
fs
notl
push
cmc
mov
pop
repz
add
das
data16
and
cmp
mov
push
xchg
or
int
dec
jle
outsl
bound
sahf
sub
dec
icebp
inc
lahf
xor
or
push
sub
aas
nop
inc
out
dec
jns
mov
add
cmp
dec
jb
pop
sti
jb
xor
mov
int
lret
xchg
fld
dec
inc
mov
lods
push
sub
add
xchg
fwait
lods
or
aam
int3
punpckhdq
dec
mov
daa
ss
lret
pop
in
pop
rcr
rclb
lcall
jp
xor
add
push
arpl
jbe
nop
icebp
lds
fs
dec
push
out
fildll
and
cmp
subb
leave
pop
xchg
mov
adc
xchg
mov
adc
aas
int3
cmp
mov
stos
mov
jge
dec
loope
imul
fs
push
pop
adc
cmc
fs
cs
fwait
mov
sbb
scas
inc
and
insb
call
cmc
xchg
into
cltd
push
negl
fnstenv
lods
inc
cmp
icebp
sub
fdiv
testb
lret
cmpb
out
push
add
xchg
cmp
ret
vhsubpd
repnz
mov
xlat
ret
rolb
mov
fcomp
insb
or
out
push
std
stos
fxch
sti
pop
and
sbb
aad
pop
xlat
mov
add
hlt
adc
fsubrs
sbb
rcl
sub
fs
mov
adc
adc
pushf
dec
xchg
xchg
or
sub
xor
lret
inc
lods
cwtl
jb
std
rorb
pusha
lods
xchg
or
or
add
call
push
push
cmpsb
cli
adc
pop
dec
adc
insb
and
sbb
inc
outsl
cmpsl
push
jmp
cmpsb
dec
scas
inc
pop
mov
jnp
lea
push
popa
in
mov
cmc
imul
inc
push
out
aas
je
add
loopne
cmovp
clc
imul
xadd
jno
cmp
jge
cmpb
and
jne
outsl
jbe
cmp
rcrb
cwtl
call
lock
aad
or
cmpsb
push
dec
dec
ja
aad
ds
daa
shl
orb
pop
mov
xchg
cmpsb
jle
mov
mov
mov
add
shll
xor
repnz
ljmp
cmp
or
imul
add
jecxz
testb
pop
mov
outsl
add
jns
jnp
orl
xchg
aad
pop
or
and
sbb
js
push
and
cld
outsb
inc
xlat
lcall
or
adc
rorl
popf
out
push
sbb
lahf
out
pushf
sbb
cli
sub
cwtl
dec
and
lods
dec
pop
bound
inc
sub
dec
pop
or
scas
mov
les
cmp
inc
and
into
arpl
xchg
bound
or
pop
inc
cmpsb
fs
fstl
aaa
cld
mov
ficompl
loopne
stos
shlb
ficoms
in
popa
aas
cld
outsl
inc
bound
loopne
mov
fiaddl
pop
add
cli
cwtl
and
pusha
mull
scas
add
test
loopne
push
inc
inc
mov
xchg
jbe
cmc
sbb
cwtl
jbe
sub
incl
icebp
or
and
pop
add
test
les
dec
ds
popa
mov
pushf
jb,pn
jae
nop
mov
shll
add
negl
loop
xor
js
rclb
mov
loope
push
in
movsb
iret
mov
insb
lea
js
xor
jmp
lock
cmp
ja
and
outsb
out
push
mov
repnz
enter
mov
add
cmp
push
movsl
aas
jmp
xchg
sbb
lods
xchg
mov
movsl
cmp
loop
test
cwtl
sbb
xchg
xchg
mov
and
xchg
outsb
jle
lret
fildll
jge
testb
xor
xor
mov
xor
push
out
rcl
aad
frstor
add
popa
and
mov
nop
xchg
ja
insl
movsb
fisttpll
aam
mov
sub
mov
pop
xchg
mov
sbb
daa
xchg
cmp
or
sbb
push
dec
outsl
out
pop
or
mov
and
test
jge
enter
fstpl
adc
xchg
mov
sbb
cmpsl
adc
mov
scas
sub
cli
fisubl
inc
push
or
jle
fwait
sbb
or
movsb
mov
ret
fcmovb
loope
loope
mov
cli
inc
xchg
enter
in
int3
fstpl
jns
mov
lret
ljmp
and
jmp
insl
repz
and
mov
jmp
adc
cmp
mov
loopne
pusha
dec
mov
mov
stos
xor
in
fmul
inc
push
cld
fwait
lods
push
push
push
test
pop
sti
in
xchg
add
test
and
cmpsl
popa
fdivrl
pop
into
push
mov
fwait
ret
mov
mov
mov
shlb
bound
inc
insb
sarl
jecxz
pushf
hlt
mov
and
push
lea
dec
mov
addr16
incl
stos
or
mov
int3
add
outsb
xadd
dec
ret
sbb
jle
jno
add
fdivrs
popa
ja
movsl
in
mov
sahf
cmp
addr16
fmull
xor
push
jns
pop
repnz
adc
pop
dec
imul
out
roll
xchg
xor
mov
ja
inc
data16
dec
fcoms
les
push
xchg
lods
loopne
xchg
inc
out
test
xor
leave
jnp
sub
jecxz
lret
inc
jle
adc
clc
mov
ret
outsb
add
mov
push
out
lea
int
mov
xchg
je
adc
inc
mov
test
and
inc
xorl
gs
shll
popa
divb
es
jae
adc
push
lea
inc
cmp
cltd
jnp
push
xchg
aas
jmp
aam
inc
adc
fwait
mov
and
aad
sbb
cs
mov
jno
jae
push
in
rcll
ljmp
loope
shrl
push
lahf
std
push
mov
movb
push
adc
ja
pusha
dec
cwtl
rcl
aaa
push
dec
out
and
rcr
pop
mov
stos
incb
push
push
dec
leave
test
jg
jmp
pop
outsl
add
flds
mov
test
out
cmpsl
pushf
ja
adc
push
stos
cld
xchg
push
stos
popa
push
mov
add
ret
fcmovne
enter
ret
add
shl
test
iret
pusha
sbbb
push
das
lcall
pusha
jno
vprotd
xor
shll
push
imul
inc
aaa
mov
repnz
pop
sbb
cmp
inc
movsl
imul
pushf
outsb
cmpsb
stos
cmpsb
sti
rcrb
or
sub
mov
inc
sub
mov
xchg
pop
out
or
mov
mov
cmpb
mov
sbb
mov
leave
xchg
jnp,pn
or
jb
add
ret
xchg
dec
test
pop
enter
adc
stc
cs
pop
and
test
nop
dec
mov
xchg
sbb
dec
lods
loopne
add
pop
lds
sbb
push
xchg
ret
je
popf
bound
cmp
jnp
movsl
inc
movsb
jne
mov
mov
pop
push
push
inc
adc
ljmp
mov
adc
shrb
adcl
cmp
jnp
hlt
ja
jmp
sub
adc
mov
adc
dec
test
sub
sarl
jo
lods
std
shr
adc
push
jecxz
dec
fisttps
mov
dec
xor
cmp
lods
cmp
jecxz
jl
sbb
lcall
sub
adc
testl
sti
pop
inc
or
dec
std
stc
mov
out
adc
std
jbe
mov
fs
mov
and
xchg
inc
cmp
adc
aad
jg
popf
mov
and
addr16
pop
repnz
inc
xchg
out
stc
lret
outsl
rorl
test
je
icebp
fildll
adc
xchg
or
shlb
jmp
xor
cmp
adcl
dec
adc
aas
movsl
mov
rcll
sti
push
add
jnp
push
cld
addr16
jae
loope
lds
in
jb
outsb
jbe
lods
mov
shll
nop
jmp
xchg
adc
test
in
lret
inc
add
sbb
push
or
push
fcoml
mov
cmpsl
xchg
iret
or
xor
inc
cmp
negb
mov
shr
test
in
push
and
mov
shl
push
in
outsb
mov
test
xor
pushf
xor
jmp
pop
push
ret
xchg
ss
jno
cmp
dec
jns
rcll
sub
push
xor
inc
into
in
cli
cld
arpl
mov
fisubrs
jmp
movsb
xor
sub
out
or
das
lods
sub
push
push
sbb
adc
fdivr
xchg
ret
mov
popa
cmpsb
and
inc
nop
test
addr16
and
mov
xor
dec
dec
dec
jae
jo
ror
xlat
and
insl
push
ds
je
adc
add
xor
movsl
rcrb
in
pop
test
rcrl
sbb
mov
cltd
fwait
and
lods
sub
sbb
adc
pop
dec
mov
or
icebp
movsl
push
and
cltd
cmpsl
sub
mov
adc
in
sbb
cmp
fsubs
aaa
popa
sbb
mov
fidivl
pop
ja
jmp
les
loope
dec
dec
out
add
and
dec
dec
lahf
xorl
mov
popf
adcb
das
fsubs
sub
mov
jecxz
mov
xchg
in
and
add
dec
sub
scas
xor
jno
xor
dec
stos
ljmp
xor
push
and
adc
jl
fmull
mov
sub
ror
pusha
xchg
sbb
fidivrl
movsl
insl
aaa
mov
push
testb
sahf
addr16
movsb
adc
ja
bound
into
sbb
dec
sbb
rorl
adc
xchg
mov
icebp
sbb
and
dec
fcmovne
aam
or
jo
rorl
sti
jo
ljmp
loope
pop
sbb
mov
or
pop
mov
lret
jl
mov
jmp
movd
jb
adc
cmp
arpl
xchg
mov
clc
mov
test
in
out
shlb
and
adc
stc
mov
add
ret
cmp
mov
test
jne
xchg
out
sub
arpl
imulb
in
int
dec
xchg
adc
ja
lock
sahf
arpl
cltd
push
mov
sbb
pop
add
sub
sub
ficoms
int3
push
inc
std
pop
mov
ljmp
push
lods
movsb
int3
jo
test
inc
call
mov
add
sub
fs
fcmovb
fwait
push
mov
cmpsb
push
mov
cltd
ret
shll
negb
icebp
push
jmp
ds
mov
inc
cmp
pavgw
dec
sbbl
dec
pushf
mov
lahf
js
and
or
mov
fldl2t
or
loopne
or
ljmp
xor
das
rorl
mov
or
fs
orb
xlat
stc
pop
push
xor
lret
pop
insb
scas
inc
mov
adc
xchg
mov
mov
ljmp
inc
jne
xor
out
push
jp
jo
ret
cmpb
aam
scas
int
pusha
jo
out
arpl
pop
xchg
rorl
sbb
popa
sti
xor
insl
jecxz
or
push
fwait
adc
push
jmp
arpl
sbb
nop
push
dec
mov
jg
loope
mov
cli
add
ljmp
jg
clc
mov
loope
or
and
inc
inc
nop
sbb
xor
in
jecxz
clc
ljmp
ret
xchg
out
xchg
add
sub
sarb
js
mov
mov
inc
data16
sub
in
sbbl
pop
nop
rolb
scas
iret
and
pop
daa
adc
stos
bound
or
jge
pop
test
int3
jne
movsb
xchg
dec
sti
xchg
or
sub
add
sub
inc
aaa
andb
pop
push
mov
push
xor
inc
movsl
xchg
cmp
sbb
mov
int3
mov
xor
cld
push
push
imul
jb
jno
fdivr
cs
out
dec
mov
jmp
or
jne
repz
shr
inc
outsl
fisttps
js
mov
and
or
fstl
clts
sbb
inc
insl
or
mov
inc
mov
stos
push
push
cmc
cwtl
jecxz
packuswb
dec
jb
sbb
imul
fisttpll
inc
pop
or
rorb
mov
popl
js
js
sti
call
in
jo
and
cltd
mov
xchg
xchg
jecxz
jp
lds
jecxz
pushf
addl
mov
push
inc
repnz
dec
adc
popf
lds
ret
lahf
pop
cltd
mov
jmp
outsb
cwtl
xchg
test
adc
inc
xchg
aam
dec
xchg
inc
jnp
icebp
lret
sbbb
push
sbb
jg
mov
or
push
out
int3
into
dec
pusha
shl
lds
aam
mov
and
push
dec
lds
daa
adc
int3
pop
push
dec
ror
and
std
pop
pop
fdivl
cmp
addl
or
ficompl
jg
adc
add
pop
pusha
inc
fmull
aas
or
sti
lret
pop
jno
inc
jecxz
push
in
add
or
pop
and
mov
dec
call
push
adc
rorl
in
sbbb
js
mov
outsl
lock
xchg
mov
das
pop
call
cmpsl
int
cmp
pop
mov
jmp
jno
sbb
fninit
sub
sbb
addb
movsl
mov
repnz
mov
enter
movsb
cmc
fiaddl
in
adc
xchg
xchg
or
insb
into
lods
push
sbb
mov
and
mul
les
pusha
int3
loop
mov
arpl
ret
xchg
mov
and
mov
mov
cmp
adc
xchg
push
xor
std
lock
mov
pop
filds
sub
insl
inc
mov
cmp
movsb
xor
fcmovu
push
inc
gs
js
mov
inc
sub
ret
xchg
aam
ja
js
inc
push
gs
xchg
jmp
outsb
mov
clc
lahf
ds
je
jbe
cmp
aas
insb
outsb
jnp
scas
lods
inc
sti
aaa
xchg
loop
jmp
jo
fs
xchg
cmc
mov
cmpsb
cmp
es
test
lea
testl
or
and
and
push
adc
out
js
xor
stos
push
notl
out
mov
jbe
jbe
ret
mov
mov
pop
or
fisttpl
mov
mov
in
nop
stos
sti
ficoml
jmp
movsl
mov
inc
push
cmp
inc
dec
mov
add
fsubrs
xchg
out
or
xor
loope
mov
ljmp
and
push
sbb
xchg
sti
incl
lret
add
repnz
jle
mov
xchg
pop
out
jb
xchg
enter
jg
sbb
pop
sbb
popf
or
test
imul
inc
test
mov
sub
inc
sbb
insl
push
inc
addl
daa
mov
mov
xor
mov
lods
ss
cmpb
inc
push
dec
call
pop
bound
push
test
mov
hlt
xor
push
je
mov
sub
mov
mov
fisttpl
lcall
mov
cmp
add
and
mov
clc
push
inc
dec
sahf
jbe
in
mov
ret
cmp
popf
cmovne
pop
xchg
xor
and
jne
lods
lret
push
in
int
dec
nop
sbb
xor
sub
cmp
popf
and
sub
xchg
iret
popa
dec
ss
add
das
sub
fs
clc
arpl
dec
orl
rolb
or
add
enter
mov
and
cmpb
push
icebp
pop
dec
xor
push
mov
pusha
add
cmp
orl
pop
and
adc
enter
in
inc
nop
xchg
sbb
test
mov
push
dec
inc
in
push
mov
or
or
mov
pushf
pop
ljmp
rcrl
daa
push
sub
das
pop
sub
pop
frstor
es
jne
xchg
fxch
push
xchg
ret
add
dec
lods
popl
pop
sbb
imulb
xchg
sti
and
scas
jb
lcall
adc
test
fwait
rcll
mov
push
out
fwait
jo
inc
and
sbb
pop
xor
dec
fsubs
mov
mov
adc
insl
enter
mov
cmp
jbe
pop
test
xchg
push
test
iret
das
clc
jb
in
sub
or
arpl
lds
dec
xlat
stc
enter
xchg
icebp
repz
pusha
and
enter
pop
ss
clc
daa
mov
sub
arpl
jg
fsubl
dec
cmp
outsl
fwait
or
in
loope
adc
mov
lret
stos
cmp
aaa
push
push
roll
inc
jle
out
jle
jp
sahf
aam
clc
gs
add
mov
test
jnp
sub
mov
sub
push
imul
cld
pop
pop
and
mov
movsb
fdivrl
and
cmp
popf
clc
mov
loop
jl
mov
sbb
add
cmp
pop
in
jecxz
adc
hlt
xchg
lods
inc
js
ret
fucomi
call
mov
out
ret
lea
mov
aam
js
or
dec
sbbl
pop
push
fdivrp
out
ret
in
sbb
les
imul
mov
lods
int
mov
test
std
repz
rcll
jne
add
in
jne
xchg
rolb
jns
push
pop
push
stos
ja
jge
pusha
mov
pop
mov
inc
mov
inc
ret
dec
sarl
sbb
xlat
xchg
cmp
les
cmpsb
inc
mov
pop
jno
pushf
into
leave
xor
jecxz
dec
push
dec
lahf
sub
push
ret
and
adc
xor
mov
sbb
testb
shr
jmp
data16
sbb
pop
mov
sub
in
or
sub
jg
or
dec
jae
aaa
adc
movsb
ja
mov
out
imul
test
not
add
outsb
inc
pushf
movsl
add
fstps
test
adc
dec
jnp
sub
sbb
iret
in
or
scas
lahf
lea
cwtl
inc
push
dec
add
mov
lret
cmp
and
imul
fwait
stc
int
addr16
pop
mov
jmp
stos
inc
repz
mov
rorl
jo
adcb
loopne
fs
mov
ret
xor
ss
sbb
pop
neg
mov
iret
cmp
sub
xchg
mov
add
sbb
or
sub
int3
out
mov
cmp
xor
test
imul
or
push
sahf
add
add
pop
xchg
repz
fwait
mov
sahf
pop
js
jo
mov
pop
jmp
sbb
out
cmpsl
xor
xchg
jge
cwtl
mov
jae
cmp
daa
je
pop
cmc
mov
mulb
mov
jg
push
jae
cmp
cmpl
pop
jb
daa
cmc
pop
mov
push
or
in
mov
out
dec
xchg
lahf
iret
pop
mov
or
mov
mov
cmp
pop
ret
call
mov
and
imul
call
xchg
xor
inc
stc
push
aas
fs
ja
inc
push
cli
and
repnz
xor
into
jmp
movsl
xor
movsl
push
into
cmp
fucom
cmp
neg
mov
adc
mov
insl
push
mov
mov
mov
push
daa
cmp
mulb
jmp
xchg
popa
pop
and
mov
pop
xlat
ljmp
es
or
xlat
cs
add
sub
pop
xor
jecxz
add
mov
insb
pushaw
sub
adc
mov
fcmovnbe
loop
cmp
or
ljmp
aad
test
cs
stc
pop
hlt
and
sub
cmp
push
xor
xchg
insb
cmpsb
imul
testb
subb
cmpb
in
fcomp
data16
jmp
mov
inc
and
add
add
jl
sub
aas
rclb
ret
and
mov
out
test
pop
test
xor
adc
repnz
imul
mov
pop
mov
pop
lods
xor
pop
cwtl
push
lods
mov
gs
jnp
imul
and
nop
xchg
aam
sbb
pop
pop
ret
fwait
xor
ret
ja
ljmp
stos
pop
insl
mov
ljmp
lods
aad
push
dec
push
lret
mov
cmpsl
sbbb
clc
aam
imul
push
into
cli
divb
in
test
mov
es
sarl
adc
push
inc
in
adc
push
mov
jecxz
and
adc
inc
jno
mov
push
inc
test
dec
mov
ret
push
out
daa
fcoms
cmp
jo
push
movsl
cmp
test
incb
rcrb
jbe
mov
icebp
xchg
dec
test
mov
mov
js
jns
pusha
je
mov
stos
in
and
scas
movsb
mov
loop
xor
jbe
bnd
cmp
lcall
mov
sarb
les
sub
adc
push
cmp
pop
test
movsb
out
mov
call
dec
outsl
adc
lock
in
sub
pop
popa
xchg
jle
lret
inc
lock
loopne
daa
jge
lds
mov
add
xlat
sub
xor
jns
inc
popa
or
aaa
adc
cli
and
cmp
adc
sub
loope
pop
xorl
cwtl
call
sub
inc
out
mov
mov
pop
xor
outsb
insl
jp
mov
mov
pop
stc
je
sahf
adc
out
jl
jge
xor
aas
mov
push
inc
cmp
push
mov
mov
push
cmp
mov
out
pop
cs
int3
xchg
cmpsl
test
in
push
xor
scas
sbbb
push
test
ja
xchg
push
push
pop
aam
pushf
pop
xchg
jge
sub
pop
xlat
mov
dec
cmp
cmc
or
jp
jo
cmp
cmp
and
fists
fiadds
subl
fisttps
stos
repnz
popf
xchg
shrl
pop
lods
jae
sbb
xor
push
inc
xchg
lods
dec
ficomps
sub
ds
lods
mov
cltd
lds
xchg
sbb
addl
insb
popa
and
xor
enter
lea
mov
fdivs
inc
das
out
mov
and
cmpsl
data16
xchg
or
push
addr16
pop
shrl
imul
xchg
out
add
sub
dec
or
lahf
and
loop
nop
outsl
test
mov
jns
cwtl
ret
mov
icebp
pop
jl
cmp
insl
xchg
xor
loop,pt
inc
dec
push
loope
in
lods
sub
fdivl
rolb
test
jb
fcmove
jmp
bound
divb
loop
int
adc
test
mov
sub
jp
stos
pop
or
imul
mov
and
fldenv
add
sarl
loopne
push
in
lret
jno
pop
jmp
orl
test
loopne
mov
lds
xchg
jae
and
ja
outsl
xor
mov
not
in
add
jbe
and
lods
jo
sub
fisubrl
cmpsb
es
cltd
test
adc
jl
mov
scas
or
xor
inc
adc
insl
in
push
jae
fmull
sub
or
xor
cld
add
xchg
repz
pop
int
out
sbb
fcoms
lds
xchg
fstpl
mov
in
add
push
dec
jle
cmp
jle
loop
sub
mov
aad
sbb
lcall
lods
mov
rorl
push
sub
iret
arpl
mov
and
ret
ret
hlt
insl
int
mov
data16
jae
push
xlat
inc
aad
lret
pop
mov
cltd
add
cmc
sbb
repz
imul
mov
test
lret
nop
out
repnz
aad
adc
ret
outsl
add
jg
mov
aas
xchg
scas
jnp
adc
lcall
jb
jbe
push
dec
ret
nop
cmp
in
mov
cmp
cwtl
stos
pop
xchg
push
pushf
sbb
in
mov
imul
xorl
andl
jg
loopne
lods
xor
and
push
and
pop
mov
sbb
xor
sub
pop
iret
mov
jl
mov
mov
in
push
mov
adc
je
push
xor
gs
bound
repnz
ficompl
add
in
icebp
into
mov
mov
sarl
lds
jecxz
mov
xchg
adc
fbstp
aad
push
pusha
cmpb
cmp
mov
iret
mov
push
pop
xor
or
incb
fcos
or
lea
ss
xor
mov
or
pop
ds
or
addb
mov
loop
cmp
mov
pop
jg
dec
test
sbb
cmp
push
cmp
sub
std
cmpsl
and
ljmp
jmp
je
cmp
mov
jo
popa
adc
shrl
sub
mov
pop
sbb
out
aad
stos
fildll
and
fs
adc
aad
sub
xor
scas
mov
lahf
cmp
ljmp
inc
jge
mov
dec
in
mov
and
xchg
adc
addr16
pop
cli
roll
cs
lret
mov
xor
add
mov
jecxz
js
mov
sbb
dec
pop
mov
rolb
xchg
cmp
adc
and
mov
pop
pop
dec
sbb
add
arpl
mov
pop
adc
sub
lcall
inc
sub
gs
mov
ret
in
andb
dec
test
push
jp
fdiv
data16
stc
call
sub
push
ds
loopne
out
fwait
aaa
push
fwait
or
xor
stos
popa
cmp
ss
jnp
inc
out
jae
adc
mov
sahf
pop
lods
repz
aad
adc
mov
or
pop
imul
and
push
pop
dec
popf
lcall
push
scas
mov
enter
xor
stc
rcrb
add
faddp
xor
popa
out
insb
pop
jnp
mov
scas
mov
inc
pop
pop
or
pop
aad
mov
jb
outsl
lea
xor
lahf
sbb
sarl
and
test
jge
and
pop
cmp
pop
and
or
xchg
dec
pop
aad
imul
stc
mov
xchg
cwtl
movsb
mov
pushf
push
jne
cli
mov
popf
xchg
testl
sub
sbb
sbb
adc
addr16
jl
adc
pop
repnz
jb
dec
push
sbb
cmp
call
clc
cmp
iret
repz
mov
icebp
icebp
icebp
repz
add
rcrb
mov
jb
dec
xchg
inc
sbb
lret
mov
dec
mov
sbb
nop
pop
and
fmull
fbstp
xchg
in
lahf
icebp
repnz
clc
out
mov
scas
sbb
movhps
ret
cmp
test
out
gs
cmp
mov
jb
and
sub
xorb
dec
aam
lret
xchg
sahf
idivl
jg
int
cmp
cs
scas
mov
pop
addr16
mov
pop
cmpsl
cmp
xor
mov
cmpsb
inc
test
orb
inc
outsb
adc
lcall
outsl
sub
dec
cs
add
push
leave
fwait
push
cmp
sub
sbb
add
adc
xchg
out
fisubrs
int3
adc
int
scas
mov
mov
or
das
sub
mov
scas
enter
mov
out
mov
mov
inc
xchg
shll
inc
shl
lock
adc
inc
mov
add
push
gs
ljmp
add
enter
je
outsb
pop
sub
push
pop
xchg
mov
jnp
arpl
cltd
das
adc
jecxz
mov
in
pop
adc
xor
jno
stc
aad
add
negl
mov
cmc
mov
pop
imul
push
mov
sarl
sahf
cmp
mov
fsubl
mov
push
mov
mov
adc
testl
mov
push
inc
loope
sbb
loop
inc
sub
push
mov
lods
jbe
cli
xor
repnz
pop
add
test
shlb
test
cmp
fs
mov
js
daa
lahf
push
imul
sti
xchg
and
pop
or
pop
xor
dec
call
sbb
int3
das
adc
aaa
movsl
jae
push
xchg
leavew
rclb
mov
lock
inc
and
or
in
int3
and
adc
insb
xor
inc
push
push
roll
push
adc
ret
insl
std
jle
int3
pusha
xor
roll
pusha
add
push
shlb
lret
sbb
ja
pop
adc
mov
std
out
icebp
xchg
lahf
add
insl
jns
je
outsb
imul
cmp
pop
les
and
dec
sbb
adcb
pop
rcrb
scas
fwait
mull
dec
lcall
xchg
out
mov
cmp
repnz
or
and
es
cmpsb
ret
in
push
sub
pusha
or
adc
push
pop
clc
mov
je
push
in
jne
cli
repnz
xchg
xchg
inc
call
pop
test
outsb
movsl
lods
cmp
insl
in
rsm
cmpb
and
lea
jecxz
cmpsl
xor
ret
lret
xor
push
xor
rcrb
dec
imul
cmc
inc
pop
xchg
jns
push
sub
pop
dec
xor
mov
gs
add
cmp
jecxz
mov
aam
ljmp
call
fnstsw
popa
cs
andl
idivl
add
ljmp
je
sarl
imul
cld
pop
in
xchg
mov
xor
bound
dec
jge
ds
cmpsl
cmpsb
pop
addl
push
xor
mov
mov
pusha
fldl2e
test
push
add
xchg
dec
ror
mov
js
loop
mov
xchg
jnp
or
lret
mov
push
pop
ret
rolb
mov
or
pop
testb
lret
js
mov
data16
jbe
add
scas
adc
pop
outsb
in
inc
nop
test
sbb
shll
imul
out
jge
sarl
outsl
arpl
pop
movl
add
sbb
cmpsb
into
jae
in
arpl
sub
aad
ljmp
test
pushf
ret
cmp
rorb
cmp
sbb
popf
sub
adc
mov
cltd
addb
pop
mov
std
sbb
cmpsb
mov
jae
inc
test
mov
daa
sub
push
add
lea
adc
and
lock
inc
mov
or
cmp
mov
mov
loope
sub
push
aad
cwtl
out
lea
dec
sbb
rorl
icebp
sti
cmpl
xchg
pop
cmpsb
fcomps
int3
pushf
lahf
repz
mov
test
mov
stos
dec
jb
xchg
push
insl
mov
xchg
rcr
push
mov
dec
jge
mov
int3
pop
repnz
subl
std
lcall
pop
mov
ret
push
rcl
rcrl
cli
fimuls
mov
sbb
stos
xor
insb
sub
and
sarb
pop
test
and
add
mov
mov
sbb
sti
and
lea
jb
fsubrp
lods
and
add
jns
jg
std
sahf
adc
lds
mov
jne
sub
xor
in
add
call
insb
xchg
add
fs
hlt
lods
das
jmp
cmp
int
mov
push
test
popa
xor
pop
cwtl
in
shrl
jp
cmp
mov
lcall
jmp
gs
ja
sub
mov
adc
dec
sbb
cli
mov
xchg
ret
aam
clc
adc
je
rcrl
jo
adc
pop
push
mov
cmp
loopne
aad
sub
mov
adc
lahf
dec
dec
testl
pusha
push
or
pop
jmp
xchg
xor
pop
mov
je
sbb
sbb
insl
push
cmpsl
push
mov
mov
or
popa
add
push
sbb
adc
stos
or
mov
add
add
arpl
pop
or
fcomps
stos
jle
xor
sbb
mov
xchg
pop
aad
cltd
out
repz
pushw
arpl
inc
xchg
mov
jge,pn
adc
dec
cmpsl
cmp
adc
mov
in
ret
subl
push
arpl
add
jle
mov
fmull
jo
sbb
insb
imul
rcr
jnp
jne
ud1
mov
push
fiadds
dec
iret
loopne
hlt
scas
fwait
or
jne
inc
loop
sbb
imul
mov
insl
xlat
scas
out
inc
mov
fdivl
sbb
jbe
xorb
mov
bound
fdivr
imul
or
fnstsw
lcall
sbb
fwait
les
into
stc
pusha
jbe
push
mov
push
rcll
dec
rclb
enter
dec
xchg
rcl
mov
pusha
mov
mov
les
mov
stc
adc
add
xorl
lods
dec
xor
test
add
out
out
mov
jo
dec
int
or
jg
pushf
pop
jle
movsl
push
lcall
loope
pop
int
rcrl
sbb
jle
mov
pop
jl
xchg
and
js
push
and
ret
xchg
cwtl
out
xchg
add
outsb
fisttps
mov
mov
test
lods
lods
cmpl
pop
mov
mov
rcll
jnp
adc
shr
xorb
lock
push
fldlg2
inc
shll
or
into
outsl
lret
cmp
test
inc
mov
cld
in
icebp
mov
mov
shr
pop
rclb
sahf
out
mov
aam
sarl
or
in
jnp
push
mov
lea
nop
in
fs
adc
nop
inc
adc
mov
xchg
fwait
sbb
or
jecxz
cmp
iret
lea
dec
lcall
cmp
jae
adc
lret
fcmovbe
ror
in
lods
call
mov
into
fsubl
in
shrb
adc
dec
mov
mov
in
push
cmp
push
mov
cwtl
iret
popf
test
and
sub
inc
sbbb
jns
hlt
dec
aaa
push
xchg
mov
xchg
or
inc
rcrl
dec
dec
lock
mov
sub
push
and
mov
les
inc
mov
jnp
push
insl
les
jnp
xlat
dec
adc
cmp
dec
cmpsb
jg
data16
sub
sub
mov
fs
mov
mov
cmp
mov
jp
data16
xor
ljmp
sub
fadds
int3
and
cmp
sub
pop
movsl
dec
lret
sbb
in
mov
mov
pop
adc
outsb
and
dec
lcall
fnstcw
je
movsl
insb
xor
sub
aam
jmp
sbb
jae
test
int
je
or
jl
test
mov
rcll
ret
out
xchg
and
sub
rclb
out
iret
sti
cltd
lret
scas
or
dec
push
mov
ljmp
lds
fidivrs
imul
adc
jne
inc
xor
scas
push
xor
jae
les
pop
pop
leave
jns
or
push
gs
dec
clc
jo
pop
inc
xorl
in
repnz
les
sbb
fnstcw
pusha
leave
inc
in
leave
lods
push
mov
xchg
add
andb
xchg
sub
mov
sbb
mov
push
add
mov
cmp
popf
ljmp
icebp
mov
out
xlat
mov
push
and
pop
aas
xor
xchg
repz
or
loope
mov
push
pop
push
inc
outsl
and
popa
mov
push
inc
ja
sbb
es
stos
jge
das
test
inc
jmp
dec
insl
push
push
mov
xchg
mov
inc
pop
test
inc
andb
enter
add
mov
mov
xor
cli
cwtl
sbb
sarl
bound
popa
mov
mov
cmp
pusha
repnz
mov
xorl
dec
push
test
sti
shrl
push
pop
lret
inc
pop
std
xchg
stc
xchg
jnp
jo
pop
jns
pushf
dec
adcb
cwtl
add
sub
inc
cmpb
pop
fcoml
out
ja
xchg
and
xchg
aas
dec
mov
jmp
sbb
adc
rclb
mov
negb
push
mov
add
mov
add
mov
add
cli
pop
and
push
inc
mov
fisttpll
repnz
pop
adc
je,pt
fscale
cld
adc
fisttpll
xor
test
inc
xchg
mov
out
data16
lods
cwtl
jg
push
pop
dec
repz
cltd
add
mov
into
jl
sub
scas
cmp
aaa
bound
sub
dec
loope
imull
push
mov
mov
daa
out
fcmovnb
pop
gs
pop
add
fstpt
add
add
mov
jne
adc
xor
std
inc
loope
push
fmull
mov
and
scas
into
cmp
dec
fldcw
inc
test
enter
pop
push
lret
ljmp
xchg
gs
inc
lcall
cltd
test
cwtl
cwtl
insb
mov
stc
idivb
cmp
rep
test
and
lret
mov
push
sbb
inc
incl
lods
lcall
sub
call
add
stc
mov
imul
hlt
out
loope
aas
int3
data16
lock
mov
out
mov
add
mov
std
mov
out
pop
pop
fwait
and
push
rcl
dec
unpckhps
bound
xlat
ret
sbb
push
rcll
xlat
idivb
sub
sahf
add
fadds
xor
inc
xchg
lahf
xchg
lcall
dec
addl
mov
leave
in
adc
inc
adc
dec
cld
bound
inc
cwtl
out
pushf
sub
fstpt
jle
xor
imul
push
sbb
test
xor
bound
xor
xchg
stos
notl
adc
ret
lea
xchg
out
mov
pop
fs
clc
sti
pusha
add
add
push
dec
test
mov
js
mov
mov
jg
dec
je
jg
push
sbb
pop
ja
mov
testl
sub
pop
movsl
data16
mov
dec
jl
jnp
cmp
mov
int3
stc
imul
adc
sbbb
mov
ret
mov
mov
rol
repnz
les
push
pop
xor
jnp
adc
jle
mov
aaa
mov
mov
adc
ret
add
test
lret
rcrl
ret
xlat
and
xchg
mov
cmpb
jo
xchg
jp
aaa
mov
inc
pop
pop
or
xor
fimuls
test
and
ret
mov
sti
cld
xchg
repnz
cmpsb
aaa
xor
and
and
outsl
loope
ja
inc
movsb
and
or
pop
imul
std
shlb
mov
xor
push
repnz
sti
ficomps
popf
push
pop
popa
xchg
push
jle
pushl
xchg
sbb
mov
mov
enter
nop
jne
fwait
jo
repz
in
daa
fstpl
jnp
jns
cmp
dec
stos
fmull
daa
push
jno
mov
mov
mul
fnsave
inc
imul
jbe
out
mov
adc
xor
push
jae
jns
pop
jl
push
in
pop
dec
mov
mov
fbstp
cmpsb
loop
mov
xor
or
mov
ret
aad
popf
fs
and
dec
xor
js
inc
loop
orb
lcall
dec
pop
aaa
adc
psllq
out
into
imul
pop
popf
sahf
lcall
inc
aas
into
imul
dec
mov
mov
add
add
cmp
pop
sti
add
adc
sub
shl
xchg
repnz
jg
or
test
insb
dec
mov
inc
inc
lods
mov
in
cmp
lcall
jo
pop
adc
ret
and
rorb
mov
ja
inc
outsl
fwait
jno
mov
mov
test
addr16
jo
mov
and
enter
or
loope
rolb
stos
inc
cmp
mov
push
xchg
add
js
cli
add
mov
ja
mov
sub
push
iret
and
mov
addr16
sahf
in
loop
dec
clc
cmpsb
xor
cs
xor
sbb
add
mov
push
inc
mov
add
dec
inc
test
inc
push
cmp
inc
cs
das
leave
jae
pop
cvtdq2ps
adc
bound
in
popf
das
arpl
adc
rorl
out
inc
in
jns
jmp
cmc
inc
inc
pop
xor
sbb
push
push
ja
and
mov
push
mov
add
or
mov
xor
imul
pusha
push
lahf
inc
shrb
lods
test
daa
aad
push
in
fwait
adc
sti
hlt
es
mov
or
popa
in
sbb
mov
out
fst
mov
push
movsb
or
loope
sbb
mov
lret
cld
xchg
popa
into
cmp
ret
andl
repnz
mov
out
jp
pop
enter
xchg
iret
pop
sub
mov
jle
sbb
shrl
nop
cmp
mov
dec
pushf
mov
add
mov
cltd
sub
xchg
daa
dec
into
scas
loopne
push
dec
sub
mov
cmpsl
adc
ret
pop
and
cmp
dec
daa
test
cs
into
cmp
jp
data16
gs
xchg
loopne
popa
xchg
icebp
xor
or
or
mov
sub
cmpsl
add
push
in
cmp
aad
or
mov
jg
clts
mov
mov
mov
shlb
loop
nop
int3
and
jp
mov
in
adc
cmpsb
jmp
jns
cld
or
and
jp
inc
mov
in
lret
ja
mov
lret
pop
or
loope
inc
jns
dec
sbb
rcll
jp
jge
ljmp
stos
in
mov
or
adc
xor
mov
cmp
adcb
jns
pushf
pop
movl
ss
pushf
andl
pushf
inc
int3
or
sbb
lock
out
add
pop
or
mov
aaa
xchg
ljmp
mov
xor
pop
cmp
enter
xor
shl
enter
push
push
cmpsb
pop
mov
out
xor
adc
cld
mov
pop
xor
aas
pop
mov
fnstsw
cmp
not
bound
xchg
shr
jbe
sbb
pop
in
dec
xor
pop
mov
jns
lahf
and
pop
leave
stos
in
ret
cmp
lret
or
add
push
orl
or
sub
faddp
js
fdivrp
je
hlt
adc
pop
pusha
sub
scas
xchg
fcmovbe
push
xchg
lods
jne
cmp
ja
cmp
xor
mov
jo
stc
and
or
sahf
es
adc
mov
out
fidivl
ret
mov
cmpsl
bound
call
movsl
pop
scas
dec
inc
ja
std
xchg
mov
push
and
sbb
ja
out
in
leave
cmp
or
mov
and
mov
sbb
push
scas
dec
sub
mov
out
mov
fdivs
mov
pop
xchg
or
or
out
add
faddp
mov
adc
js
jb
cmp
sbb
xor
sarl
push
cmc
gs
mov
gs
aaa
repz
xchg
fcompp
lcall
push
out
dec
movsl
dec
and
bound
cmp
scas
jns
cli
jne
aaa
push
lahf
sbb
lret
dec
add
mov
imulb
scas
xor
xchg
lods
xor
gs
mov
adc
jecxz
add
push
or
fdiv
in
subl
divb
sub
jbe
dec
cmpsl
fldl
into
xor
sub
mov
out
js
and
jle
aam
and
incl
pop
pop
mov
in
outsb
addr16
shlb
jmp
aam
dec
icebp
and
in
inc
push
mov
in
mov
mov
inc
or
les
push
scas
insb
mov
push
mov
jmp
sub
sub
shr
jns,pn
jae
xor
xor
stos
mov
fnstcw
test
lods
cwtl
push
dec
scas
xor
test
pop
testl
pushf
sbb
sub
mov
out
das
nop
enter
call
ret
and
enter
mov
sbb
rcrb
mov
jnp
clc
cmpsl
out
pop
inc
daa
sub
iret
in
cmovnp
les
lret
mov
sub
lods
mov
dec
lds
mov
testb
lock
iret
push
mov
pop
jp
mov
push
push
dec
ret
es
lods
imul
fistps
inc
inc
mov
in
popa
cs
mov
aad
add
imul
ja
aam
sbb
pushf
nop
mov
pop
add
ljmp
mov
lods
mov
mov
leave
mov
scas
ret
jle
je
dec
adc
insb
jecxz
jle
pop
xor
adc
and
xor
ja
inc
xor
mov
bound
dec
repnz
movl
fisubs
imul
aaa
mov
push
dec
bound
push
arpl
cmp
repz
pusha
add
xchg
imul
cld
das
push
aad
dec
pop
xlat
cmp
jecxz
push
in
insl
mov
sti
lea
sub
cmpsb
stc
lret
data16
cmpsb
dec
sbb
ret
sub
divl
sbb
sub
mov
sahf
and
lds
cmp
cmp
add
and
xchg
add
adc
or
es
sbb
push
mov
sti
in
and
jge
xorl
push
outsb
in
addb
jmp
pushf
sbb
insl
test
xor
sub
iret
popa
in
xor
addr16
cmc
mov
faddl
data16
and
stos
cld
cwtl
push
xor
mov
jns
repnz
xor
sub
pusha
mov
push
scas
pop
icebp
popa
bound
cmp
xor
fcompl
pop
xabort
scas
jb
cmpsb
rclb
adc
das
mov
xchg
loopne
movsb
outsl
jg
mov
xchg
cli
push
adc
mov
ljmp
xor
jmp
cmpsl
jmp
sub
sub
mov
cmp
or
imulb
cmp
lahf
dec
or
div
xchg
stos
jb
mov
pop
xchg
stos
inc
ja
aas
push
fdivr
push
pop
icebp
imul
out
cmc
adc
mov
stos
aas
dec
sarl
jle
cs
mov
icebp
push
push
sahf
add
pop
pushf
int3
xchg
lret
mov
add
push
iret
push
push
push
es
push
cmp
adc
lea
mov
cltd
mov
stc
rorb
pop
adc
clc
int
and
test
jae
call
arpl
lods
fidivs
lcall
inc
data16
jbe
sub
mov
mov
mov
push
outsl
mov
mov
in
push
and
and
ss
jg
cmp
mov
lock
pop
mov
pop
mov
int
xchg
push
scas
cmp
adc
cmp
mov
ljmp
stos
pusha
repz
sbb
arpl
mov
fildl
imul
add
push
dec
clc
sbb
adc
mov
aaa
cmp
sub
push
mov
pop
nop
mov
test
imulb
stc
cld
sub
cmp
ficoms
repnz
push
or
les
mov
movsl
push
cli
cmp
push
lahf
inc
movsb
sarb
inc
pop
cmpsl
fwait
popf
rcrb
rcll
adc
cmpsl
and
in
enter
mov
mov
mov
push
jp
xchg
into
lock
ficomps
jg
mov
jp
cmp
jnp
xchg
push
pop
and
push
xor
pop
fmul
rcll
dec
cmc
lods
leave
fsubp
add
into
pop
lods
in
mov
push
cld
and
inc
xchg
xor
xor
jp
ds
cld
sbb
cld
rclb
mov
out
outsb
pop
inc
dec
lds
lea
and
jmp
mov
ds
and
sbb
in
adc
pop
fstpt
and
adc
cmc
lods
pop
scas
test
sub
popa
cli
das
cld
dec
jae
orb
fs
mov
push
or
mov
mov
sub
push
test
mov
mov
dec
push
out
mov
pusha
insl
jns
pop
js
mov
and
xchg
sbbb
iret
cmp
icebp
stos
cmp
dec
shl
cmp
lds
xor
mov
int
push
out
dec
add
mov
stc
ffreep
inc
jmp
int
rcrb
out
lcall
sub
inc
pop
dec
test
cmp
scas
lea
mov
mov
lret
mov
es
inc
push
fs
lods
test
lret
or
dec
push
push
dec
sti
lahf
mov
nop
fisubs
adc
pop
outsb
xchg
or
push
dec
jp
and
in
cmp
nop
xlat
repnz
push
clc
and
sbb
add
stos
insl
xchg
lret
sub
idivl
push
dec
xchg
into
mov
imul
mov
cmp
test
out
test
cmc
lods
scas
out
into
test
scas
addl
inc
mov
aas
mov
or
rclb
mov
lods
in
jbe
pop
sarl
out
imul
xlat
and
push
and
sub
stc
inc
dec
call
rcl
arpl
mov
xchg
out
jae
outsl
ja
pop
cmpsb
jns
mov
xchg
out
sahf
in
push
lahf
sti
xor
cmp
enter
push
xchg
in
xchg
jnp
test
inc
push
gs
popf
xor
sbb
adc
mov
mov
mov
lcall
pop
into
scas
icebp
lds
fidivrs
mov
adc
pop
inc
mov
in
nop
scas
repnz
clc
es
cli
jns
pusha
cltd
push
pop
add
stc
jle
xor
or
pop
repnz
cs
or
aam
fdivrl
and
sbb
pusha
mov
push
mov
rcl
mov
lcall
jns
mov
fsubrl
pop
out
loopne
dec
call
cmp
divl
out
fnstenv
cld
sbb
lret
xor
int
mov
fwait
sbbl
sub
repz
lcall
sbb
out
pop
dec
sbb
xor
mov
push
mov
repnz
fwait
decl
imulb
mov
roll
test
jmp
cmp
mov
cmpsb
push
mov
loop
xchg
mov
pushf
sub
shll
lret
xchg
shll
pop
sbb
pop
adc
add
loop
cwtl
pop
arpl
out
cmc
insl
add
das
js
cli
ret
jecxz
mov
mov
or
xchg
mov
mov
lcallw
stos
jp
sub
inc
fidivl
jns
scas
test
jecxz
push
mov
dec
sub
cmpsb
cmpsb
out
inc
mov
pop
jp
dec
mull
das
int
aas
add
sub
cld
loope
xchg
scas
les
mov
rorl
cmp
mov
addr16
std
repnz
cmp
aad
loopne
xchg
mov
ret
movsb
jle
or
fwait
imul
mov
sbb
xorb
int3
adc
shrb
ljmp
dec
xor
pop
cmp
pop
add
fmul
je
xchg
push
fdivr
hlt
xchg
jo
pushw
jno
ret
fwait
cmp
add
add
lods
adc
addr16
lcall
js
xchg
ret
jbe
inc
and
jnp
cmc
add
mov
dec
loop
rol
pop
loop
aas
movsl
jb
nop
jle
cld
dec
mov
testl
in
shr
out
push
pop
cmp
mov
lods
mov
pop
push
imul
insb
jg
jae
or
repz
and
jmp
cmp
rorb
inc
lea
movsl
loop
cmp
xchg
adcl
testl
pushf
xchg
enter
lods
test
xchg
fs
faddp
adc
xchg
sub
loope
lret
xor
xchg
test
stc
mov
adc
pushf
data16
adc
dec
adc
jae,pt
or
cvtps2pd
mov
pop
pop
repnz
and
mov
adc
lods
cmp
sub
daa
andl
mov
mov
cmp
in
jo
jmp
movsl
push
mov
addr16
jmp
aam
pop
rcrb
dec
and
fimull
lea
mov
test
out
into
lock
out
scas
mov
jecxz
test
rol
out
push
stos
cmp
popf
xchg
push
js
mov
jp
sbb
into
jmp
push
gs
xchg
mov
cs
bound
adc
mov
push
js
mov
pop
ds
std
mov
lods
subl
out
sbb
xchg
xchg
mov
es
iret
jnp
sbb
daa
xchg
mov
mulps
cmp
std
arpl
push
nop
shr
sub
inc
test
ret
bound
add
jecxz
sahf
mov
mov
inc
adc
jmp
orb
adc
xlat
lret
inc
mov
bound
outsl
mov
vpsllq
add
cltd
sbb
mov
jle
sbb
adc
adc
mov
call
mov
lret
decb
mov
enter
sbb
push
and
pusha
imul
test
xlat
jno
scas
dec
inc
mov
je
sbb
cmp
cmp
fldt
cmp
jne
lods
dec
xor
je
cld
xor
sub
enter
push
das
sbbb
mov
popa
or
ret
das
sbb
push
je
mov
dec
cmpb
inc
xor
in
mov
mov
nop
pop
aas
insl
push
lods
sbb
sub
jecxz
pop
cmpsl
jl
insb
push
push
fwait
mov
ret
dec
in
and
in
dec
jecxz
xchg
pop
call
or
or
mov
loope
cmp
push
out
das
not
aas
mov
mov
or
testl
xor
andb
lods
cmc
jb
fwait
iret
cmp
inc
push
push
fsubs
pop
sub
xchg
pop
sti
push
push
cmpsl
jnp
out
insl
fldt
vlddqu
outsl
dec
cmp
cmp
loopne
leave
imul
and
push
roll
fisttps
sub
dec
push
inc
xchg
sbb
sbb
inc
mov
fbld
aad
or
cmpsb
dec
mul
lea
xchg
sti
popa
mov
xchg
xchg
dec
dec
in
xorb
into
out
xchg
out
repnz
jg
cmp
xchg
dec
jmp
pop
cmp
add
jle
ret
into
loop
stos
clc
loop
imul
fsub
dec
add
mov
pop
dec
mov
jecxz
aas
sbb
ss
js
repz
and
and
pop
or
mov
push
das
es
and
andl
ficoml
ss
sbb
sbb
jno
pop
enter
jl
sbb
and
bnd
cmp
mov
loop
popa
test
jl
pushf
popa
test
dec
std
mov
and
add
pop
movsl
mov
in
mov
repnz
data16
mov
cltd
dec
add
push
jno
pushf
out
push
pop
xchg
jle
xor
inc
ljmp
repnz
call
cmp
in
stc
sub
fwait
push
int3
mov
lods
mov
std
test
fcompl
mov
xchg
sbb
or
and
push
jle
sbb
cld
lahf
pop
adc
lods
push
xchg
lret
and
mov
mov
popf
sti
dec
xor
adc
inc
and
xchg
and
out
in
icebp
inc
inc
je
dec
inc
mov
and
aam
out
mov
inc
add
insb
pop
xor
mov
dec
stc
outsl
pop
mov
mov
mov
ja
iret
mov
fisubrl
daa
xor
in
pop
fstl
test
imul
cwtl
and
stos
aam
repz
xor
push
notb
xor
fwait
add
push
jecxz
push
fsubrs
mov
ret
lds
adc
push
movsb
aam
fmuls
add
mov
and
in
cmc
enter
daa
hlt
out
lahf
insb
dec
pop
dec
dec
stos
dec
icebp
pop
sbb
sbb
popf
pop
shrb
add
clc
cmp
scas
out
loopne
aam
iret
in
loope
mov
rcll
sbb
mov
aas
cwtl
out
lcall
hlt
lods
je
and
jne
mov
mov
cmp
aad
mov
jp
sbb
outsb
jo
inc
stc
cmp
lds
push
mov
sub
inc
xor
imul
xchg
cmpsl
testb
icebp
fcmovbe
push
mov
sub
pop
lods
add
stos
loop
sbb
aam
pop
jecxz
and
out
imull
mov
add
into
stos
add
pop
iret
inc
sbb
dec
fidivs
cs
imul
mov
mov
xor
inc
ret
std
push
out
xchg
xor
xor
repz
mov
int3
hlt
xchg
sub
mov
stc
adc
movsb
test
sub
out
arpl
xchg
sbb
cltd
mov
sti
jmp
xlat
aad
or
adcb
test
xchg
mov
cmp
push
andb
xchg
aad
insl
mov
lcall
jp
loop
xchg
push
popa
hlt
lret
xchg
adc
or
xchg
xchg
aaa
push
icebp
nop
sbb
lds
mov
xlat
dec
rcll
sbb
inc
insb
stos
xor
sub
jg
in
push
push
mov
iret
sbb
loope
mov
fadd
jo
sbb
movsl
das
scas
jecxz
jecxz
inc
stc
mov
inc
jne
int3
add
cmp
mov
sub
and
dec
loopne
ret
roll
enter
lcall
pushl
ret
fcompl
pop
out
in
cmp
dec
test
mov
jg
cwtl
pop
push
das
dec
js
inc
pop
jbe
xchg
push
mov
leave
fistps
jecxz
pop
pop
sub
cmpsb
add
mov
mov
outsl
and
sarb
fcmovne
sbb
dec
or
int
mov
ffreep
xchg
loope
lret
add
pop
sbb
mov
dec
and
je
cmp
mov
xchg
rcrb
dec
psubsb
mov
xchg
inc
subb
bound
inc
cld
inc
ret
xchg
mov
or
add
inc
adc
cmp
sbb
call
lds
inc
outsl
and
pop
js
ret
loop
xor
notb
inc
aas
jl
add
int
cmp
cs
clc
je
in
mov
inc
and
push
rolb
fcomps
xchg
popf
xchg
lcall
xchg
add
xor
fcompp
push
mov
cmp
aad
mov
pop
ds
out
xor
cmpsb
sbb
pop
cmc
adc
fwait
push
and
pop
cmpl
cmp
cmp
sbb
pop
jo
jns
jp
inc
inc
daa
xchg
sbb
mov
adc
inc
js
test
out
pop
inc
fimull
xchg
fstpl
push
jp
xor
xor
vcvtpd2psy
imul
jl
sbb
jno
outsl
ljmp
rcll
sbb
test
jecxz
stc
xor
outsb
clc
xor
negl
sbb
fwait
cmp
sarb
enter
mov
dec
scas
jne
jp
xorl
jo
shlb
adc
stc
sub
jbe
pop
int3
int
inc
mov
inc
mov
mov
roll
xchg
repnz
xchg
adc
jp
ss
movsb
sbb
sub
push
rclb
inc
scas
pop
mov
int
dec
in
sub
or
pop
jae
lods
jns
add
cmp
icebp
push
adc
add
imul
ljmp
jmp
or
out
mov
mov
push
cmpsb
sti
aad
dec
aam
hlt
inc
sub
lahf
sbb
inc
pop
iret
int3
inc
cmp
inc
and
jp
jg
adc
in
pop
jb
inc
sub
mov
or
ja
loopne
popf
adc
scas
out
mov
in
rorb
xlat
aas
mov
not
scas
mov
jns
mov
aad
scas
mov
pop
xor
ret
mov
fidivrl
pop
mov
ljmp
cmc
dec
mov
popa
insl
leave
sbb
orb
xchg
in
fstpt
arpl
std
sbb
xchg
pop
xor
xchg
lods
std
cmp
jmp
aam
push
je
sub
push
insl
xchg
dec
loope
cmp
dec
dec
fstpt
or
repnz
pop
cmp
sbbl
mov
sub
fmul
mov
clc
cld
ja
fwait
mov
jmp
test
pop
or
pop
mov
lret
out
mov
sub
xchg
xchg
loop
xor
mov
subb
xlat
loope
sub
mov
xchg
dec
or
push
cmp
xor
xchg
icebp
das
and
int3
mov
rcrl
jnp
jg
cmp
aad
or
jbe
inc
inc
or
scas
inc
cmpl
mov
stos
movsb
pusha
pop
aad
test
add
lods
dec
lods
push
fstpt
cmp
add
push
inc
test
adc
lods
cmp
xchg
adc
or
inc
js
mov
in
pop
jge
loopne
popa
je
ljmp
lea
inc
mov
fsub
pop
pop
fcmovne
gs
mov
sub
mov
pop
add
jecxz
dec
insb
mov
mov
gs
movsl
jle
or
aaa
stc
cmpsb
add
push
out
sbb
mov
sbb
xchg
and
push
imul
int
pop
xchg
mov
in
xchg
das
outsb
push
insb
pushf
arpl
xchg
mov
cmp
arpl
fstps
sbb
and
xchg
cmpsl
std
lret
xchg
jl
inc
pop
pop
inc
cmp
or
les
insl
dec
sbb
mov
in
mov
lahf
mov
loopne
les
ret
mov
popa
sub
nop
test
sbb
dec
aam
adc
push
call
sub
mov
dec
xchg
je
jo
push
xchg
jns
dec
leave
fisubs
mov
aas
sbb
repnz
and
scas
add
add
and
ds
xchg
xchg
insl
cmp
adc
addr16
sbb
jge
push
lods
movsl
cld
jmp
xchg
push
fisttpll
push
jne
add
sahf
loopne
dec
aaa
mov
and
pushf
cmp
shrl
cmp
xor
xor
mov
out
and
and
insl
xor
push
add
lea
test
fadd
mov
mov
jmp
loope
mov
pop
add
inc
sti
insl
dec
and
pusha
lret
pusha
lods
dec
and
cmpsb
lods
dec
movsb
in
xchg
je
and
push
mov
dec
add
movsl
adc
sub
pushf
icebp
jno
cmp
jne
xchg
mov
xchg
ret
cmpl
push
or
lahf
lcall
in
scas
mov
cmpsl
adc
pop
cmp
popf
inc
mov
jmp
popa
cwtl
adc
xor
or
mov
div
cltd
cs
test
sub
mov
sub
mov
ljmp
sbb
mov
sbb
adc
mov
jbe
pushf
pop
and
out
inc
int3
shll
mov
fnstcw
sub
and
pop
inc
jg
in
xor
jmp
push
sbb
imul
dec
mov
inc
shlb
jecxz
hlt
fwait
aaa
xchg
inc
stc
xor
adc
cli
imull
sub
adc
je
mov
ds
outsb
daa
mov
dec
jo
fmull
notb
ficoms
cwtl
inc
jge
popw
xchg
mov
pop
mov
mov
pop
mov
movsb
xlat
in
mov
cltd
sti
jle
add
xchg
cmp
rclb
sbb
mov
hlt
iret
push
clc
mov
jo,pt
lods
dec
test
mov
pusha
xchg
push
das
and
mov
mov
dec
jnp
sub
aas
push
mov
push
mov
jl
xchg
sbb
mov
mov
adc
pop
sub
int3
out
inc
subb
mov
jbe
outsb
and
or
stos
cmp
pop
xchg
outsb
add
cmp
in
cmp
push
pop
jne
push
lea
xchg
popl
xchg
push
addr16
int
pop
pop
aam
fmul
leave
int3
pop
insl
push
xchg
mov
or
lea
mov
aad
sbb
stc
test
xchg
sbb
fidivrs
stc
insl
test
mov
push
sahf
test
add
cmpsb
push
push
adc
mov
mov
push
mov
sub
mov
sbbb
ror
movsl
fnstenv
loop
into
cmp
sahf
jg
fmuls
addb
mov
out
enter
cmp
inc
cmpsb
mov
mov
dec
inc
push
xchg
into
mov
mov
fcompl
out
cmp
xlat
stos
icebp
imul
outsl
mov
push
inc
aas
insb
xor
xchg
jge
jmp
mov
int3
in
jp
jmp
test
or
inc
je
insb
and
mov
inc
call
mov
mov
and
fwait
jmp
movsl
and
out
es
addr16
fisubl
loopne
mov
mov
mov
leave
cmpl
push
pavgb
adc
pop
lret
testb
xor
dec
jp
push
sub
sti
add
ljmp
fldt
ficomps
sbb
adc
mov
mov
loope
add
outsl
xor
cltd
icebp
sbb
je
mov
ja
add
in
lods
push
pop
and
pop
or
addl
punpckhdq
and
shlb
push
idivl
mov
inc
jl
or
cmp
push
cmp
jne
ljmp
in
out
test
mov
mov
clc
adc
mov
push
xchg
ficomps
dec
xor
cmpsl
pop
xchg
aad
out
add
inc
mov
pusha
push
loopne
cmpsl
mov
mov
push
std
fs
and
inc
int3
pop
or
push
pop
add
ficomps
repnz
cmp
cmp
pop
xor
fmulp
les
and
push
dec
cmp
fiaddl
add
xchg
lret
adc
push
and
pop
popa
mov
cmpsb
scas
stc
lods
fldt
fwait
ret
lcall
fstpt
insl
das
test
xchg
imul
jae
push
sahf
inc
jo
inc
dec
fsubr
jmp
pop
enter
mov
sub
or
imul
push
cmp
cmp
cmpsl
inc
mov
or
cwtl
jl
popf
lea
pop
adc
xchg
dec
mov
ja
sbb
imul
imull
clc
sti
das
push
jl
sub
pushf
sti
mov
lret
mov
or
and
movl
push
or
ds
pop
icebp
xor
sub
ljmp
icebp
test
subl
shrl
sarl
xchg
adc
std
inc
inc
xor
cmpl
and
and
je
mov
sahf
or
jg
and
mov
cmpsl
xor
jle
sub
dec
cmpsb
call
leave
cld
adc
mov
rclb
sub
int
lds
mov
dec
mov
popf
jmp
dec
mov
push
hlt
xor
stos
cmpsl
and
dec
xor
or
cmp
xor
stos
dec
adc
adc
dec
sbb
out
mov
negl
inc
out
mov
jl,pt
inc
std
les
cmp
lea
ss
incl
push
cmp
jecxz
inc
cs
das
pusha
add
loopne
inc
out
fadds
lock
cmp
ja
incl
push
std
call
stos
or
shll
movsl
mov
inc
add
aad
int
jp
pusha
jnp
xchg
jb
sbb
loope
ret
mov
xlat
jne
aas
xor
call
dec
outsl
jb
mov
jnp
mov
in
orb
pop
cmpl
dec
and
and
adc
add
dec
sub
stc
xchg
pop
adc
fisttps
xchg
out
fwait
les
repnz
adc
adc
adc
lods
arpl
int3
fsubr
nop
jo
insb
mov
xor
into
add
and
mov
repnz
sbb
or
sub
adc
es
mov
xchg
leave
mov
rcr
data16
sbb
push
divl
pop
ret
movsb
aas
lret
pop
mov
shr
mov
mov
fildl
loop
and
aas
call
jo
push
mov
fisubrs
inc
mov
xchg
das
xor
cs
push
dec
xchg
mov
and
movsb
mov
adc
jb
or
lret
pop
dec
ret
add
jmp
cmpsb
and
das
sarb
mov
or
pmaxsw
xor
or
dec
adc
adc
mov
mov
pop
jle
xchg
je
repz
adcl
bound
rol
mov
add
cmpsl
in
std
clc
pop
inc
shlb
fstpl
aas
loopne
push
jae
decb
sbb
sbb
adc
addr16
push
fcmovb
bound
cltd
inc
addl
xchg
es
cmp
adc
xchg
dec
mov
test
inc
mov
fildll
aaa
out
hlt
test
xorb
push
or
cmc
aad
out
pop
pushf
push
jno
inc
test
xchg
xchg
jg
es
add
pusha
jle
dec
cmpsl
cwtl
ret
addr16
and
jl
xorb
push
cwtl
xchg
pop
and
sbb
dec
stos
xor
cmc
sti
dec
pop
jecxz
enter
jno
mov
mov
sub
out
mov
ficomps
scas
arpl
push
adc
and
inc
shrb
in
dec
pushf
xor
add
mov
subl
jae
and
dec
pop
js
rclb
xor
pop
lock
daa
gs
insb
cmp
jnp
adc
stos
pop
jp
aad
cli
insl
jecxz
les
mov
fs
hlt
add
aaa
stos
push
and
cmp
lcall
mov
mov
push
into
lock
dec
jg
sbb
stos
xchg
pop
jne
icebp
ja
jge
ljmp
mov
test
push
testb
jo
shl
mov
repz
mov
pop
jge
data16
pop
insl
xor
jle
into
fsubs
dec
iret
movsb
jb
mul
adc
push
xchg
hlt
gs
insb
fnstenv
aad
ds
loop
adc
add
ds
or
or
in
shl
out
mov
sub
int3
clc
les
mov
adc
xchg
shlb
call
mov
or
jno
int3
pushf
lret
mov
add
fwait
out
fdivl
cmp
dec
mov
push
dec
or
sbb
adc
scas
xchg
into
mov
push
cmp
jmp
cmp
cmp
xor
jle
add
movsb
jnp
pop
je
mov
clc
add
aas
xor
cmc
dec
sahf
mov
iret
and
and
loop
and
add
and
or
outsb
inc
fs
mov
mov
rorl
daa
and
sti
or
js
push
dec
xchg
ret
dec
sbb
lea
mov
imul
jb
inc
sbb
inc
add
stos
pushf
dec
sub
mov
push
sub
nop
mov
mov
inc
xchg
mov
out
xchg
jmp
xrelease
and
xor
addr16
inc
bound
loop
ja
pusha
js
xor
cmp
mov
jl
push
and
popf
aam
xor
gs
pop
fildll
pushf
mov
mov
jae
pop
mov
xchg
je
pop
xlat
mull
xchg
inc
idivl
mov
push
fimuls
test
shll
in
inc
mov
add
lds
rcrl
xor
mov
sub
push
or
out
movsl
cmp
out
fwait
mov
lock
sbb
fs
jg
cmp
jle
pop
aad
pusha
dec
stos
push
fs
mov
adc
loope
loop
push
pop
mov
push
lcall
xchg
loop
or
mov
or
in
imul
popa
pop
cmpb
int3
rcl
mov
mov
pop
out
sub
mov
or
roll
sbb
cmp
cltd
imul
repz
push
xor
cmp
push
outsb
out
pop
mov
jmp
mov
ret
xorl
aam
movsb
inc
push
add
arpl
mov
movsb
mov
mov
xchg
add
clc
xor
sbb
pop
and
sbb
gs
lock
jne
mov
or
cmp
mov
ss
or
sbb
adc
std
jb
or
jb
inc
push
sub
sahf
xchg
sub
hlt
jmp
fcmovu
lods
shlb
xlat
sbb
cmp
push
mov
outsb
mov
mov
dec
push
insl
insl
cwtl
jno
icebp
insb
in
outsb
pop
cmp
movsb
jae
xor
enter
cmpb
pop
iret
inc
lds
push
pop
add
and
loop
sarb
push
xchg
xor
stos
xchg
mov
rorb
jp
lods
pop
push
test
ja
loopne
data16
xlat
movsb
pop
and
arpl
inc
push
dec
aad
xchg
mov
lea
xor
cmp
or
adc
mov
stos
sub
outsb
mov
sub
jge
insl
and
push
sub
mov
shl
fnstcw
mov
push
inc
sub
inc
lods
fisttpl
and
fnsave
pop
outsl
jecxz
add
ror
insl
int3
adc
sbbb
js
hlt
fstpt
add
pop
in
les
sub
sbb
roll
pop
pop
lahf
sub
add
mov
int
cmp
mov
fwait
mov
push
outsl
mov
push
push
push
pop
dec
or
clc
mov
lahf
sbbl
leave
jnp
in
push
lret
xor
nop
cltd
lea
leave
xchg
ljmp
seto
ds
je
pop
cmc
xchg
mov
jb
add
or
mull
js
pop
add
adc
jns
mov
js
xchg
mov
inc
mov
mov
dec
loop
pop
cmc
jle
out
mov
sbb
scas
push
push
dec
nop
jae
push
ss
fprem
das
xor
push
xor
sub
push
add
sbb
sub
mov
cmpsl
mov
mov
ror
xchg
pop
xor
push
stc
daa
test
ss
pop
scas
cmp
adc
xor
std
inc
gs
mov
and
mov
and
or
xorl
repz
mov
pop
xchg
cmp
inc
aad
cmp
jno
push
sbb
ljmp
xor
push
cmpsl
push
jle
jbe
jnp
ret
insb
push
cltd
in
stc
sub
sbb
mov
jo
and
cmp
push
cmp
lock
push
mov
pop
stos
and
cli
mov
pop
pop
notl
jns
xor
adc
out
push
jl
mov
in
dec
jb
mov
jnp
insl
jmp
enter
out
jp
fmuls
and
jb
imul
out
cmp
cltd
mov
mov
sti
ds
jae
stc
mov
xchg
scas
gs
xor
lds
loop
pop
test
cs
jmp
add
lods
add
mov
stos
mov
and
ja
dec
repnz
inc
pop
ljmp
or
leave
xchg
inc
sub
adc
xchg
xor
lds
and
int
inc
sub
stos
imul
mov
push
insb
test
jbe
pop
jns
sbb
out
lea
pop
sub
push
out
cmpsl
dec
das
mov
xor
sbb
test
push
pop
dec
mov
not
sahf
add
xchg
rolb
push
sub
dec
fildl
cmp
jnp
xor
add
jecxz
and
std
mov
push
mov
mov
in
jg
test
std
and
pop
sahf
mov
mov
add
stos
xchg
adc
into
or
push
push
mov
fmull
out
pop
lods
sahf
fsubrl
jl
loope
ret
mov
test
imul
popf
popa
hlt
jbe
or
movb
lcall
inc
rorl
mov
out
jl
fadd
popf
hlt
cmp
mov
mov
cltd
inc
sbb
xlat
int
pushl
push
in
sbb
lret
test
push
jmp
and
mov
insl
dec
adc
out
jae
iret
imul
daa
popf
hlt
imul
lcall
jnp
lcall
xchg
xchg
mov
decl
or
aas
xchg
push
loopne
cmp
add
sahf
mov
data16
enter
push
xchg
push
pop
mov
or
lods
repz
adc
jns
lods
scas
inc
sbb
mov
xchg
int3
clc
fs
jbe
jbe
jb
insb
sub
push
dec
adc
cmp
sub
mov
imul
sub
push
lea
adc
test
test
mul
jns
cld
imul
jae
xchg
gs
xchg
pop
sbb
cld
push
xchg
adc
and
sub
shr
mov
popa
xchg
jg
jle
add
pop
int3
mov
in
dec
mov
arpl
fdiv
push
ja,pt
pop
fisubrs
adc
add
ds
and
jmp
lock
pop
inc
jb
paddusb
bound
arpl
popf
gs
enter
sar
es
pushl
fcoms
xchg
rcll
sub
jb
jnp
or
push
ret
add
mov
mov
arpl
and
repz
jbe,pt
adc
lock
stc
dec
cmpsl
cwtl
adc
into
cmp
mov
sbb
xchg
xor
add
leave
vfrczps
jno
mov
cmp
shll
fsubp
fldt
lret
push
jb
mov
in
nop
mov
mov
in
fwait
cmp
lea
inc
and
shll
mov
and
xchg
push
in
mov
cmc
je
fnstsw
rcll
sub
aaa
outsl
add
bound
adc
dec
mov
sbb
ds
or
push
jae
divb
insl
cltd
xchg
jmp
movnti
jp
in
fwait
xchg
fxch
cltd
inc
in
iret
jno
faddl
and
adc
and
and
sbb
insb
out
shlb
jl
test
repz
jb
or
pushf
aad
pop
into
orb
pop
ljmp
and
popf
add
inc
stc
ljmp
add
insl
sbb
sbb
cmp
vunpcklpd
scas
push
es
pop
lock
xchg
cmp
cs
jno
jmp
and
push
cmp
jne
mov
mov
adc
mov
mov
ror
or
popa
dec
vfrczsd
inc
xchg
call
add
xchg
shlb
jns
mov
or
sub
scas
fldt
inc
dec
int
sub
ljmp
mov
lods
inc
xlat
movsl
pop
fisttpl
sbb
sahf
scas
cmp
xor
sbb
repz
repz
inc
mov
mov
shll
adc
jns
or
xor
mov
mov
repnz
pop
das
adc
dec
movl
outsl
das
mov
inc
lret
jo
lea
int3
in
or
add
insl
xchg
xchg
add
jp
stos
adc
call
xchg
xchg
mov
and
push
xor
gs
scas
mov
xor
add
pop
pushf
inc
and
sbb
jne
inc
lret
mov
lock
pop
lret
xor
lds
daa
outsb
aas
mov
sar
push
movsb
push
add
push
add
in
cwtl
cld
lahf
pop
hlt
push
lock
adc
scas
fdivrs
iret
notb
fbld
xchg
dec
pop
jmp
daa
sbbl
je
pop
xor
mov
jl
mov
xchg
lds
mov
xchg
xchg
nop
adc
mov
out
or
aad
and
dec
fimuls
fmull
sar
flds
mov
sbb
movsb
je
jns
jmp
mov
sub
or
cmp
jmp
xorl
adc
test
icebp
jp
mov
add
divl
sub
add
out
xor
shrb
int3
sbb
adc
out
mov
aad
dec
push
mov
test
and
sub
lds
cwtl
lea
pop
pop
pop
es
push
or
test
inc
sbb
xchg
jge
mov
leave
sbb
in
xchg
idivb
inc
nop
out
xor
sub
and
lock
cwtl
stos
js
push
cmp
pop
mov
xchg
sub
inc
int
add
mov
repz
jp
jno
fsubrs
add
fstps
aaa
aam
jmp
mov
mov
add
ss
inc
mov
dec
mov
ret
sub
sub
cmp
daa
std
cmc
arpl
pop
outsl
xor
adc
add
cmpsl
sbb
lret
imul
xor
cmp
imul
and
lcall
outsl
add
fistpll
into
jg
xor
imul
call
test
mov
add
pop
cmpsl
test
add
pop
shrl
mov
cs
fdivl
jbe
mov
hlt
cmp
lret
mov
jge
inc
jg
cmc
int3
in
jg
mov
and
outsb
fiadds
cmp
xlat
xor
testl
aaa
out
sahf
inc
add
aaa
pop
call
xor
cmp
dec
and
fsubrp
push
addl
mov
cld
or
sub
popl
push
sub
add
lcall
mov
insb
loopne
insb
leave
sub
adc
out
xchg
loopne
mov
mov
lds
ret
adc
mov
jo
cmp
or
jmp
push
out
and
inc
dec
xor
out
mov
mov
clc
movsl
popf
mov
and
repnz
push
or
rorb
aad
loope
inc
push
push
lds
rcll
inc
xor
xchg
mov
sbb
lret
mov
jbe
lea
sbb
mov
loope
scas
cmpsl
test
sbb
push
cwtl
pop
xchg
adc
mov
or
inc
ret
pop
or
dec
xchg
mov
or
pop
test
aas
gs
scas
xchg
push
sti
or
jno
ljmp
cmp
iret
adc
and
notl
and
fstpl
clc
and
and
add
adc
and
mov
shrl
dec
mov
mov
jnp
clc
je
pop
adc
in
and
loopne
xor
mov
int
or
push
in
cli
push
sahf
imul
fildll
lods
cmc
xchg
dec
mov
mov
inc
cmp
xchg
ja
ret
inc
jl
cmpsl
in
stc
cmp
aam
adc
jg
int3
mov
push
xlat
or
aaa
popf
fiaddl
rorb
add
fdivrl
arpl
popf
push
sbb
out
mov
add
mov
test
cwtl
fwait
jno
cwtl
sbb
popa
pop
fdivs
lahf
xchg
dec
jae
cmp
jns
cmp
xchg
loope
lret
mov
call
dec
test
les
ret
dec
cmpsb
xchg
stos
rclb
jecxz
adcl
push
pop
andl
int
jp
mov
hlt
ljmp
sbb
in
sbb
dec
adc
jbe
cld
xor
jb
or
scas
repz
push
lea
or
leave
fucomip
pusha
xor
jmp
mov
jge
mov
repnz
pop
xor
fsubrl
pop
cmp
rcll
out
in
dec
loope
stos
ret
pop
xor
sbb
sahf
in
adc
adc
jge
xchg
xchg
popl
lahf
add
icebp
add
push
xor
sbb
testb
cmp
jl
int3
and
outsb
in
sbb
pop
or
add
and
pop
sti
jl
and
test
dec
es
inc
lods
jo
pop
addr16
push
mov
mov
cmc
xor
in
mov
mov
jmp
call
sub
rorl
daa
mull
into
jb
pop
ficomps
dec
shrl
xlat
mov
dec
jge
fsubs
jb
xor
andl
fcmovnbe
mov
rol
js
xchg
mov
add
jno
xchg
orb
fdivrs
popa
in
push
mov
icebp
int
xchg
test
or
add
lcall
fidivl
inc
inc
and
pop
mov
dec
mov
pop
mov
pop
sbb
mov
fstl
dec
dec
sub
jnp
jo
jge
push
loopne
cltd
ud2
push
push
mov
pop
xor
xchg
push
addr16
cmp
jmp
or
mov
lock
and
xchg
cld
lret
and
imul
jp
adc
out
mov
push
or
pop
push
bound
cmp
sub
lret
roll
icebp
inc
mov
mov
mov
mov
subb
mov
scas
nop
inc
test
sub
ja
mov
jo
inc
mov
mov
cmpb
sub
dec
or
push
dec
and
xchg
daa
gs
inc
push
dec
aad
movsl
sbb
adc
inc
xor
das
add
fildll
ss
ljmp
pop
dec
test
inc
cwtl
xchg
sbb
sahf
sbb
mov
sub
adc
fcmovne
add
add
xor
xor
nop
ja
sub
in
jno
jecxz
or
pop
mov
inc
ret
xor
fmuls
mulb
js
rorb
outsl
fisubl
jbe
inc
add
les
dec
lret
mov
push
xlat
data16
aam
mov
jne
jbe
mov
push
fsub
dec
sbb
push
push
gs
push
and
jge
pop
lret
inc
pusha
sbb
movsb
call
addb
cmp
sub
dec
movsl
stc
mov
mov
fmul
pop
jno
rcr
jle
jbe
cmpsb
sti
fmulp
cwtl
xchg
inc
fidivrl
cld
inc
lds
sbb
dec
push
js
scas
fstl
lock
lret
loopne
push
jmp
or
sub
pop
xchg
les
xor
fistps
movsl
mov
test
and
adc
repz
stos
mov
pop
rclb
or
dec
jg
adc
movsb
dec
add
cmpsl
add
jnp
out
lahf
jns
ret
imul
mov
mov
repz
mov
inc
lock
test
mov
xchg
cli
lods
enter
hlt
jp
sub
inc
iret
gs
push
shrb
sbb
xor
addl
in
jmp
js
loopne
leave
mov
and
sbb
ljmp
in
rorl
sbb
jmp
mov
jne
and
inc
lock
movsl
dec
pop
add
sbb
pop
add
push
push
int3
and
hlt
adc
repz
push
adc
dec
sbb
pop
gs
shlb
xor
cs
les
sub
stc
and
cmp
aas
add
xchg
xor
jns
cmp
sbb
sbb
jge
inc
fwait
xchg
mov
lock
divb
dec
jmp
test
sbb
jae
scas
mov
aaa
test
add
cmp
mov
repnz
fsubrs
test
push
cmp
xlat
popf
and
pop
fs
fwait
pushf
mov
cmp
aad
add
addr16
add
dec
dec
test
adc
mov
aad
fs
gs
rcr
inc
lods
pop
cltd
cmp
loope
xlat
jo
push
loopne
jecxz
pop
mov
push
cwtl
dec
dec
dec
popa
adc
call
sub
or
push
clc
cmp
scas
ja
jns
xor
ret
mov
add
cwtl
lea
dec
jmp
xchg
and
sbb
pop
rclb
int
xchg
xorb
pushf
pop
mov
inc
mov
add
xchg
pop
cmp
sbb
aam
insb
inc
das
mov
sbb
adc
xor
mull
lock
add
and
mov
and
mov
lock
or
inc
push
mov
push
js
pusha
pop
lahf
pop
mov
ret
mov
push
mov
pop
adc
orb
les
mov
outsb
jae
cwtl
popf
push
scas
cmp
test
repnz
loopne
int3
adc
push
scas
in
inc
sub
mov
push
adc
push
imul
pop
jb
out
out
test
or
lea
shl
cmpsl
in
add
add
pop
cwtl
mov
xchg
sub
jmp
adc
adc
jmp
in
mov
mov
aas
sub
imul
iret
arpl
pop
ret
xchg
rcrl
dec
je
jne
and
jno
lahf
xor
mov
xlat
mov
cmc
stc
add
in
xor
mov
repnz
repnz
cmp
test
jo
aam
xchg
stos
gs
call
test
add
or
adc
out
jle
pop
das
inc
adcl
aam
inc
out
push
and
insb
jo
dec
push
and
jmp
bound
sub
sar
mov
cmp
inc
mov
imul
mov
test
pop
mov
cmp
inc
movsl
pop
call
and
leave
lret
in
cmp
xchg
int
or
jb
pop
pop
notb
cli
jmp
fadd
das
cwtl
inc
jmp
mov
mov
mov
into
adc
add
lahf
je
pop
mov
mov
loop
or
xor
sbb
aam
pop
mov
push
inc
mov
fs
into
mov
and
jbe
mov
dec
je
je
ret
add
jmp
divb
dec
cwtl
mov
jae
fistpl
pusha
sub
popf
ficomps
mov
cmp
fsts
jns
adc
shll
repz
mov
adc
nop
outsb
mov
roll
adc
push
mov
jg
pop
adc
fadds
inc
xchg
push
pushf
and
cmpsb
jno
adc
mov
inc
add
pushf
mov
jmp
and
pop
repnz
mov
ret
mov
std
loopne
inc
dec
adc
mov
std
push
jl
scas
mov
fmull
out
ds
and
data16
jecxz
iret
xor
aaa
daa
inc
push
and
ret
lss
insb
cltd
inc
scas
ljmp
popa
das
call
xlat
rcll
xor
ror
call
mov
pop
lds
int
stos
les
test
rol
xor
xchg
inc
call
scas
pushf
loop
push
xchg
mov
cld
shrb
je
inc
jecxz
lea
jae
push
adc
les
inc
add
mov
addr16
aad
fs
cmp
pushl
fwait
cmp
loope
in
add
jecxz
sbb
pop
nop
sbb
cmc
cmc
mov
iret
frstor
movsb
test
sbb
inc
mov
inc
or
mov
inc
xchg
lods
dec
push
mov
mov
push
jo
in
mov
sbb
mov
cmp
mov
in
pop
rclb
fimull
push
rol
cwtl
std
cmp
xchg
pop
pusha
scas
cmp
cmp
cmp
fsubrp
mov
and
add
loope
jbe
in
or
cmovb
in
je
je
mov
push
mov
jmp
cmp
testb
jb
sub
cmp
cltd
jns
pop
or
fistl
leave
out
push
lahf
xchg
ja
sub
or
cli
xchg
xor
ja
adc
ficoml
les
cmp
test
sub
dec
cmpsl
lret
out
hlt
sbbl
mov
or
and
seto
push
xlat
cltd
pop
aam
push
fiaddl
inc
xor
movsb
xlat
insb
hlt
pop
mov
pop
fsubr
push
cmc
add
mov
add
pop
mov
out
test
inc
cmp
add
sbb
cmp
notb
lods
data16
xlat
sbb
xor
js
adc
jnp
sahf
inc
xchg
fidivl
ficoml
jp
xor
xchg
out
jmp
imul
scas
push
shr
adc
das
sub
insb
mov
or
dec
sbb
adc
imul
mov
jbe
mov
mov
push
mov
jnp
scas
mov
mov
fidivl
or
sahf
ret
loop
rdpmc
iret
cmp
popf
cld
mov
fadds
shrl
fiadds
das
movsb
cmc
cmp
test
and
mov
adc
pop
je
test
daa
mov
mov
fs
jne
in
sub
bound
in
inc
hlt
sub
adc
mov
jo
bound
jb
cwtl
popf
nop
jns
mov
pop
out
jno
xor
lcall
push
mov
mov
jae
inc
jecxz
js
adc
jns
in
pop
stos
add
mov
clc
mov
ds
cwtl
in
aad
sbb
mov
or
cmp
cmc
fstl
xor
pop
add
hlt
pop
dec
jbe
aaa
sub
xor
mov
sub
sub
dec
test
and
fsubrs
mov
push
cmpsb
xor
push
scas
mov
push
xor
sbb
pop
mov
lds
movb
mov
lahf
scas
xor
mov
and
popa
repnz
jns
fcoml
lods
add
mov
stos
bound
movsb
movsb
lds
cmp
arpl
inc
mov
sub
out
addr16
out
push
push
jmp
and
sub
push
inc
lahf
cmp
pushf
push
jp
jns
lahf
mov
adc
ljmp
jl
adc
sub
inc
fstps
push
ret
cltd
mov
cwtl
dec
xchg
lock
sub
jmp
xor
neg
or
lret
sbb
xchg
jo
je
movsl
mov
ret
mov
mov
push
insb
stc
inc
mov
sub
ja
and
insl
mov
loopne
push
stc
std
adc
cwtl
pop
cmp
imulb
sub
or
cmp
icebp
sub
adc
stc
xchg
sahf
xchg
push
inc
pop
leave
cmpsb
ljmp
xchg
imul
test
xchg
mov
mov
idivb
inc
lock
mov
xchg
not
sahf
sbb
xor
dec
ret
push
adc
iret
xchg
repnz
xchg
cwtl
jge
pushf
dec
jmp
popa
loop
in
dec
addr16
pop
test
inc
lods
ljmp
pop
shl
xor
push
arpl
mov
and
or
sub
mov
mov
mov
adc
mov
adc
mov
out
sahf
int
mov
aad
lahf
jp
add
rep
gs
lahf
lea
mov
cmp
loopne
inc
pusha
mov
push
repz
mov
pop
mov
fistpll
mov
bswap
fs
inc
sub
push
add
cld
in
addr16
shll
dec
mov
and
dec
jecxz
jbe
jecxz
pop
xchg
pop
push
das
mov
xor
bound
pop
cmp
fbstp
pop
dec
enter
jb
push
xor
xchg
insb
xchg
push
mov
fwait
and
sbb
jae
mov
fwait
test
ljmp
xor
cmp
jg
imul
loopne
mov
testb
jbe
push
pop
aam
loopne
lods
sub
pop
iret
pop
fcmovbe
push
xor
cmpsl
mov
out
shrb
inc
xor
inc
fldl
xor
jb
dec
pop
int3
jb
dec
mov
pop
pop
lret
in
sarb
scas
or
mov
or
sub
push
pop
mov
push
lahf
xchg
movsl
adcl
inc
and
sbb
inc
aad
insl
dec
xchg
out
pop
scas
or
fnstenv
mov
cmp
data16
xchg
loopne
dec
pop
add
push
xchg
and
xlat
sbb
dec
shrb
xchg
mov
pop
dec
push
lea
xchg
aad
jbe
mov
ljmp
add
dec
pop
and
test
mov
lret
adc
repnz
xchg
test
pop
and
outsb
test
movsl
push
mov
mov
aas
sbb
jo
xchg
pop
adc
jno
mov
jmp
stc
mov
into
ljmp
es
xchg
push
xchg
clc
mov
inc
mov
aaa
testl
xchg
nop
xor
imul
rcrb
and
fwait
cmp
mov
call
jb
decl
jae
movsl
mov
arpl
popf
rorb
test
pop
into
dec
jno
xchg
xor
or
dec
into
fimull
das
aad
sbb
add
push
pop
push
addr16
fisttpl
cmp
pop
mov
sti
and
sar
jno
loope
int3
aas
xchg
dec
stos
cli
test
jns
ljmp
or
push
cmp
pop
dec
jne
ficompl
inc
imul
or
fisttpll
pusha
dec
or
push
aaa
iret
push
push
das
add
test
lahf
xlat
or
dec
imul
push
and
sbb
or
add
daa
int
add
fistl
cli
sub
loope
out
mov
aaa
arpl
lret
and
mov
mov
lea
lcall
pop
mov
loopne
jp
mov
loopne
fdiv
mov
add
loope
mov
adc
pop
and
int3
insl
push
pop
push
push
das
hlt
cli
lahf
loopne
mov
movsl
xchg
shlb
jns
adc
mov
cmp
lahf
call
popf
pop
pop
sub
sti
fistpll
push
mov
pop
testl
adcl
dec
pop
mov
leave
addb
xor
movsl
out
xorl
js
call
xchg
push
xor
dec
xor
mov
bound
mov
je
loop
jbe
imul
pop
imul
andb
gs
and
aad
ds
into
jns
sub
sti
popa
jbe
mov
lahf
loopne
mov
adc
mov
sub
movsb
test
cmpsb
jae
pop
rcrl
sbb
pusha
addl
fsubr
jns
pop
xor
stc
fstp
nop
jns
shlb
les
xor
mov
clc
daa
push
outsb
push
imul
pop
jnp
mov
pusha
mov
ljmp
mov
pop
in
insb
push
scas
xor
jg
jecxz
stos
ror
scas
movsb
sub
pop
faddp
sbb
fwait
xchg
mov
cmp
lcall
jo
ss
enter
push
vpaddd
jae
movsl
scas
in
push
pop
inc
jle
inc
loop
xor
lcall
in
arpl
js
mov
jge
je
stos
adc
sub
repnz
or
cmpsl
in
repnz
jmp
clc
das
sub
jl
cwtl
push
fmul
fwait
push
sub
out
xchg
pop
and
aaa
sbb
pop
test
dec
pop
fidivrs
push
mov
mov
mov
les
xor
rdmsr
jle
sar
mov
icebp
cmc
call
push
sbbl
push
cmp
jmp
or
pop
jno
add
cmp
ds
jo
cwtl
bound
jo
call
rclb
popa
inc
popf
xor
std
sbb
xor
aas
mov
sbb
mov
cmp
pop
std
in
cld
mov
cwtl
xchg
fwait
arpl
pushf
pop
push
push
and
dec
into
gs
leave
jo
int
jno
pop
push
sbb
mov
lods
daa
mov
push
dec
sarb
cmpsb
add
push
inc
inc
test
push
icebp
mov
ja
xchg
jecxz
lret
sti
mov
xchg
jg
pusha
loopne
jb
fidivs
pushl
adc
add
lret
xchg
and
loope
sub
ret
leave
arpl
push
andb
jmp
mov
jne
into
nop
pop
icebp
jo
mov
repnz
scas
lds
xor
sub
add
jb
mov
and
cltd
iret
xchg
xchg
les
xor
mov
and
dec
mov
dec
imul
lds
in
lahf
inc
xchg
xor
inc
pop
xor
int
stc
int3
data16
add
xchg
rcrb
test
fnstcw
push
clc
hlt
xchg
add
test
loopne
inc
out
ss
sbb
je
push
adc
push
arpl
cld
xor
in
ds
in
sbb
or
mov
test
cmp
dec
icebp
call
jae
insl
xchg
or
push
lods
add
cmp
fwait
pop
cmp
and
cmp
jbe
adc
add
push
mov
cs
or
aad
stos
cmp
out
mov
fcoms
or
sub
scas
aam
xor
out
xor
jecxz
aad
inc
push
cmp
push
gs
lods
sahf
cmp
mov
mov
inc
mov
cmp
mov
cmp
jno,pt
cmp
mov
call
stc
lret
xor
cld
push
push
push
xchg
pop
dec
idivl
into
mov
dec
cmpsl
imul
pop
aaa
sub
mov
pusha
cmpsl
test
mov
cmp
pop
add
push
sbb
push
dec
rcll
test
repnz
cmp
sbb
xchg
xor
loopne
into
cmp
xlat
push
sub
sbb
jae
inc
loop
stos
gs
aas
sti
loope
rorb
inc
packsswb
jbe
outsb
aaa
and
xchg
jns
fwait
std
mov
ja
mov
dec
and
inc
les
insb
lock
xchg
jae
pusha
mov
push
xchg
sbb
inc
sub
add
sub
aad
notl
inc
out
mov
add
or
test
dec
gs
inc
in
add
sbb
mov
fildl
mov
mov
movsb
pushf
xchg
cmp
adc
mov
adc
cmp
insl
shr
fdivs
lret
mov
pushw
cmc
std
hlt
mov
lret
insl
mov
adc
scas
inc
stc
fiadds
mov
mov
xlat
aam
sub
imul
scas
std
add
dec
rcl
pop
rolb
mov
inc
jo
dec
pop
fidivrs
push
popf
mov
in
pop
add
icebp
rorb
xchg
push
dec
fisubs
mov
insb
dec
cmp
in
add
arpl
or
aas
rorl
stos
add
sbb
icebp
fs
pop
pop
push
sbb
dec
frstor
mov
call
pop
fdivs
jl
adc
pop
in
sbb
xor
mov
lds
imul
mov
outsb
cmp
aas
or
out
fnstenv
pop
les
shll
or
stos
xlat
mov
sub
ds
testl
push
sub
sbb
add
add
idiv
stos
jno
mov
insb
sub
cmc
or
xchg
inc
loopne
pop
sbb
sbb
divb
push
or
repnz
sbb
xchg
cmp
mov
andb
sbb
cld
loope
jno
cmp
stos
dec
sub
xor
in
pop
sahf
repz
add
lret
jne
dec
lret
push
inc
push
pop
int3
pop
push
push
out
sub
iret
add
and
mov
int
mov
sub
xchg
cmc
cmp
and
lods
fiaddl
mov
mov
pop
roll
mov
popf
adc
pop
inc
push
cmp
inc
adc
jle
arpl
pushf
mov
test
gs
int3
insl
dec
inc
inc
cli
test
mov
loop
fs
sub
fwait
pushf
mov
cli
adc
or
or
adc
inc
rorl
mov
cmp
fwait
xchg
int3
mov
lea
out
pop
cli
into
lret
fcmovnbe
call
push
cmp
sbb
xchg
scas
or
pop
push
rorb
cmp
out
mov
cmp
jno
mov
push
cmp
sub
xchg
inc
sahf
mov
test
and
mov
or
imulb
addb
rol
pop
inc
aad
adc
addl
jge
addr16
lret
push
std
mov
cmpsb
jbe
mov
mov
push
aam
sbb
xchg
outsl
int3
dec
xchg
pop
in
xchg
dec
xor
jle
dec
repz
call
pop
scas
ds
mov
mov
push
ret
neg
mov
push
mov
out
cmpsl
rcl
ljmp
pop
mov
shrb
jo
lods
pop
loopne
nop
mov
je
test
cwtl
dec
add
pop
hlt
lret
roll
sub
mov
cmp
ds
mov
in
mov
mov
push
iret
mov
mov
cmp
dec
xor
sbb
lods
in
jo
stos
std
sub
xchg
movsb
cmp
add
xor
push
mov
and
pusha
sub
or
scas
addr16
xor
push
inc
add
cwtl
mov
notb
mov
mov
je
push
daa
sbb
sti
jecxz
adc
jne
arpl
push
daa
adc
imul
sbb
arpl
fisubs
mov
movsb
faddl
jns
clc
aad
or
sub
ss
xchg
call
and
xlat
pop
sub
jae
subl
xchg
or
lahf
lcall
call
rolb
xchg
sti
mov
stos
xor
int
ja
aam
jmp
shlb
jae
adc
inc
add
in
mov
mov
les
add
mov
scas
movsl
pop
lahf
and
sbb
movsb
dec
cli
cmp
lods
xor
repz
call
dec
mov
fcmovne
fs
lods
popa
in
jo
es
jle
cmp
xlat
ja
cmpsl
or
cmp
cmc
incb
dec
pop
dec
or
mov
and
aaa
cmc
js
je
test
daa
adc
aas
pusha
call
scas
jp
cli
mov
mov
sub
cmpsl
adc
inc
aaa
lret
lods
mov
xor
jp
jecxz
sub
cmp
dec
and
mov
inc
nop
outsb
cmpsl
lret
enter
iret
js
ja
js
lds
popf
push
lds
int3
jne
mov
leave
cli
inc
in
sbb
iret
and
xor
jnp
pop
mov
mov
sub
add
or
pushf
xor
daa
jbe
sub
gs
imul
or
sti
mov
jle
arpl
jno
cmp
cmp
sub
andl
inc
pushf
or
xchg
mov
mov
sbb
sub
and
push
xchg
push
dec
negl
cli
cmp
xchg
sub
sbb
mov
in
xor
inc
sub
lock
jb
aam
ljmp
imul
fsubs
and
insb
aaa
adcb
inc
and
xor
cmp
sbb
fisttpl
inc
jmp
jne
add
pop
das
mov
fimull
sub
mov
repz
add
int3
mov
pop
enter
jnp
nop
push
lret
or
push
push
pop
sbb
xchg
pop
xor
push
add
loop
aas
aaa
jecxz
daa
cmpsb
and
arpl
test
lods
push
iret
adc
xchg
aas
nop
lods
push
xchg
xor
mov
in
adc
out
icebp
daa
fidivl
cld
or
or
negb
mov
push
pop
shlb
push
inc
cmp
subl
stc
mov
scas
sub
out
lods
mov
or
mov
add
in
lds
loop
and
inc
and
xor
jns
fisubl
jl
jg
imul
dec
xchg
jmp
jbe
inc
arpl
insb
jnp
aas
in
stc
mov
mov
sahf
pop
aaa
clc
mov
xchg
call
jnp
fwait
repnz
cmc
push
iret
add
pop
jmp
sarl
jg
outsb
in
stc
jnp
test
xor
int
pop
das
or
jo
rcl
mov
mov
aaa
sti
jne
insl
xchg
pop
xchg
jmp
mov
cli
movsb
stos
mov
std
sub
sub
loope
adcb
fisubs
movsl
movsl
pop
and
sub
xor
cltd
lret
jae
fs
mov
fdivrs
pop
fidivs
mul
lea
movsb
pop
scas
mov
outsl
xchg
mov
xor
push
arpl
inc
scas
out
daa
and
or
addr16
cltd
jno
jl
stc
pusha
xor
fnstcw
int
leave
mov
sub
pushf
test
inc
xor
inc
push
jl
iret
pushf
aaa
test
jnp
lret
in
data16
cmpsl
cmp
mov
fucomip
movsl
dec
pop
jle
cmp
mov
sahf
lods
subb
jge
daa
leave
in
fs
mov
ja
jg
mov
xchg
int
es
ljmp
or
ret
mov
mov
xorb
ficompl
and
dec
bound
or
sbb
cmc
out
inc
inc
pusha
les
mov
xor
sbb
push
cli
repz
adc
out
pop
jle
loopne
jnp
xor
inc
dec
mov
mov
dec
pop
inc
dec
ljmp
jp
inc
repnz
outsb
jb
push
xchg
shlb
add
addb
cli
cmpsb
stc
arpl
adc
mov
push
mov
push
lcall
rolb
adc
stos
pop
cmpsl
icebp
imul
les
icebp
in
inc
sahf
imul
sub
in
or
nop
rol
push
cltd
popl
out
and
daa
cs
fnstsw
xchg
mov
insl
in
dec
dec
cmc
icebp
fs
outsl
pusha
mov
sub
idivb
mov
and
out
popf
xor
nop
out
adc
pushf
sbb
push
aas
cld
xlat
jmp
shl
mov
cmp
popf
aaa
out
std
dec
inc
fwait
ljmp
adc
dec
out
pop
mov
hlt
mov
jo
or
clc
inc
cwtl
das
and
pop
mov
sahf
and
inc
mov
aam
inc
popf
test
inc
data16
and
dec
mov
clc
out
mov
jecxz
std
add
rol
cli
fs
cmp
xchg
jecxz
std
push
and
test
mov
mov
mov
mov
and
shl
in
mov
mov
leave
pop
xor
sub
repnz
and
pop
loop
test
into
dec
pushf
js
mov
push
cmpb
fmuls
out
cmp
addr16
inc
dec
dec
xor
pusha
xor
sub
outsb
pop
rclb
imul
int
inc
int3
sub
orl
loopne
and
mov
mov
or
pop
repnz
call
xchg
in
test
jg
add
fs
jo,pn
push
sub
push
shrb
xchg
mov
leave
mov
jmp
sbb
fsubrs
sti
mov
mov
xchg
mov
fstpt
mov
jp
insb
andb
in
cmp
test
aaa
movsb
push
pop
xchg
icebp
cmp
inc
stc
in
jmp
mov
std
cld
scas
iret
loop
and
and
cmpsb
test
mov
xor
xor
cmpsb
push
sub
and
and
mov
cmp
iret
repnz
pop
add
mov
fs
fildl
xchg
stos
jae
dec
dec
ds
jo
ja
push
fcmovnbe
jae
jb
mov
xor
stos
push
hlt
sbb
shl
les
or
outsb
pop
jbe
push
fdivs
mov
sub
pop
sbb
mov
push
sub
pop
and
bound
out
pop
sbb
push
sub
add
pop
adc
dec
popa
fmul
mov
jmp
std
xor
sub
daa
test
mov
aaa
jg
or
xchg
lcall
sbb
mov
cmp
adc
xchg
mov
sub
xor
ds
dec
mov
in
popf
mov
mov
mov
scas
daa
push
jmp
adc
inc
fcmovne
xchg
dec
mov
jmp
dec
lods
fcoml
stos
jno
cltd
mov
pop
xchg
sahf
loopne
push
test
mov
test
aam
pop
jne
and
fnsave
enter
popa
inc
or
cmp
pop
in
pop
jle
xchg
lock
arpl
xchg
ss
rclb
je
sub
in
scas
arpl
add
lods
std
ficompl
pop
sub
lods
lcall
dec
sub
mov
insb
fisubl
mov
in
icebp
testb
cmp
loop
xchg
adc
push
lods
mov
out
fadd
loopne
mov
sub
xor
mov
mov
jns
fdivrp
pop
cmp
fldl
sbb
pop
xor
lret
mov
and
test
cwtl
aad
stos
xor
jnp
mov
sbb
loope
out
sbb
jmp
sahf
out
sbb
cmove
inc
or
scas
mov
xlat
imul
inc
mov
cmp
xor
rorb
pop
idivb
ret
dec
mov
negl
xchg
pop
dec
aaa
mov
mov
icebp
xor
mov
and
jne
cld
mov
and
aaa
sbb
fcmovne
mov
xor
mov
mov
movsb
xor
cltd
xchg
push
mov
or
incb
mov
insl
mov
sub
push
test
stos
in
lret
test
mov
ljmp
lret
cmp
mov
lds
mov
jb
jo
and
sub
mov
imul
pop
in
not
ja
out
pop
sbb
popf
dec
adc
xchg
xchg
cmp
sbb
lea
leave
inc
in
enter
addr16
mov
or
loop
jo
inc
test
push
jmp
popf
cmpsb
mov
mov
int
popf
cmp
xor
sub
adc
sbb
pop
cs
icebp
clc
jp
and
xchg
xchg
xchg
mov
jae
jg
jmp
and
lret
popa
add
les
loopne
push
inc
ret
lea
xchg
or
jbe
pop
insb
mov
sub
cmp
jl
dec
push
jno
into
pusha
stos
add
fimull
test
and
jo
pop
jle
incl
aad
sub
mov
les
mov
inc
sbb
leave
dec
mov
stos
std
test
lods
xor
test
call
ret
fnstenv
push
cmc
fistpll
jmp
lahf
icebp
jnp
daa
pop
dec
add
inc
ret
or
fbld
in
xchg
or
mov
inc
and
cmpsb
negl
mov
dec
dec
enter
icebp
popf
sbb
cmpsb
cmp
arpl
loopne
adc
mull
push
mov
repnz
cmpsl
pop
and
cmpsb
fwait
mov
mov
cmc
mov
add
sti
mov
jne
in
icebp
xor
and
jle
fdivrs
xchg
add
je
inc
xor
xor
loopne
mov
cmp
rcl
xor
adc
shlb
roll
ds
xchg
inc
adc
lret
sbb
xchg
inc
mov
fisubs
pop
outsl
mov
xor
int3
and
cmp
dec
hlt
and
sbb
cmpl
xchg
and
xor
xchg
mov
add
push
jbe
test
insl
pop
add
sub
inc
jo
test
loop
loopne
adc
gs
sub
mov
aam
aas
mov
lock
js
jb
dec
popa
xor
fsub
flds
pop
mov
add
testl
mov
mov
sbb
loopne
loope
mov
pop
sub
aam
shll
mov
int
xchg
imul
outsb
cmp
je
test
add
adc
lods
mov
fwait
sbb
scas
pop
imul
jns
sbb
mov
cmp
xchg
sbb
icebp
sub
cli
ficompl
mov
xor
movsl
xchg
and
push
sbb
xor
cmpsb
mov
mov
jmp
jp
je
sub
rorl
lcall
scas
mov
add
pop
pop
xchg
sbb
sbb
aam
sub
xchg
push
xchg
jl
xchg
cmp
ss
call
cmp
sti
ss
xchg
or
push
push
dec
nop
insb
data16
divb
or
mov
adc
mov
jp
cs
test
cld
clc
xor
imul
in
xor
and
mov
aam
fsubrs
pop
mov
sbb
jno
inc
adc
mov
cmpsb
lret
popl
push
push
js
xchg
push
push
and
addr16
decb
fcompl
aaa
xchg
dec
mov
fsubrl
mov
popf
or
cltd
popf
cmp
subb
mov
push
outsl
test
flds
pop
jl
mov
rorl
or
cs
add
iret
sub
lret
lret
orb
mov
fdivl
push
sbb
data16
call
or
mov
daa
jge
fsubrp
and
aam
js
jmp
andb
sub
push
sbb
jecxz
out
test
scas
call
push
mov
fldcw
inc
sahf
lea
sub
fwait
addr16
fnsave
mov
mov
loopne
pop
and
xor
xor
call
setno
mov
lods
mov
fsubrl
inc
push
in
jne
pop
xchg
xchg
jb
sbb
mov
mov
pop
cmc
popa
test
dec
push
mov
mov
mov
mov
fs
movl
pop
aaa
ljmp
xor
rorl
lods
ss
in
ss
xchg
sarb
scas
pop
js
fsubl
pop
testl
aad
jne
rcr
pusha
adc
push
add
cli
dec
ss
cwtl
mov
jne
test
and
push
subb
adc
mov
inc
push
lahf
jg
jp,pn
ljmp
imul
xor
inc
adc
arpl
out
mov
jae
test
inc
imul
sahf
cmp
fs
inc
rolb
fcompl
std
mov
inc
inc
cmp
mov
mov
paddusw
pop
scas
pop
ljmp
sti
push
and
mov
lea
mov
mov
xchg
sub
aas
out
fsubrl
mov
jp
xor
dec
inc
jb
mov
mov
or
mov
and
movsb
lret
sub
xchg
xchg
cmpsb
dec
popa
inc
js
jae
enter
jmp
sub
mov
fnsave
xor
jecxz
sub
lahf
dec
xchg
mov
scas
int
sti
out
mov
sub
test
nop
jp
cmpsb
loope
xchg
ljmp
lcall
mov
loop
lods
mov
out
inc
je
mov
pop
inc
mov
scas
xchg
lods
js
push
adcl
mov
ss
xor
nop
pushl
ret
lret
push
je
lock
fcmovne
pop
das
push
hlt
ljmp
dec
xor
xlat
jmp
dec
cli
push
sub
daa
pop
in
or
pushf
pop
pop
push
dec
mov
inc
jmp
and
hlt
les
stos
hlt
dec
cmpl
rep
push
in
jo
mull
inc
insl
std
enter
dec
push
sub
add
mov
imul
in
add
dec
mov
mov
lahf
inc
jb
cs
xchg
xchg
pop
shlb
and
add
jge
jb
repnz
stos
mov
dec
pop
pop
stc
shrl
test
movsl
lea
or
cmp
ljmp
jbe
jno
nop
rcll
call
rclb
sub
in
and
inc
pop
into
sub
xchg
pop
call
pop
cltd
add
loop
fsqrt
adc
lret
jae
test
ret
dec
mov
mov
xlat
and
mov
jne
les
sarb
cmc
or
lods
insb
add
sbb
pop
jns
stc
mov
imul
movb
jp
push
jge
hlt
fnstcw
inc
add
cwtl
adc
pop
je
addr16
lcall
imulb
sbb
mov
cmp
gs
xchg
lods
subl
pop
nop
js
mov
push
jne
inc
mov
call
push
add
stos
mov
xlat
in
loopne
xor
pop
pusha
pushf
jle
test
clc
push
ljmp
mov
sub
ror
mov
jl
dec
movsl
idivl
das
and
mov
je
out
popf
sub
scas
sbb
jp
sbb
repnz
pop
pop
sbb
or
lret
mov
jns
outsb
fdivrl
jmp
mov
out
dec
lds
stos
or
xchg
and
add
adc
mov
jecxz
jo
neg
xchg
js
xchg
int
cli
popf
ss
mov
adc
push
mov
scas
cmp
add
pop
mov
andb
fcompl
jle
and
xor
sub
fists
subl
iret
xchg
cmp
fbld
or
mov
aad
popf
loopne
jo
mov
pop
jo
inc
js
inc
pop
pushl
xor
xor
push
lret
dec
pop
das
inc
mov
adc
jnp
xchg
cmpsb
dec
pop
xor
out
xchg
sub
sti
push
int
mov
gs
pop
dec
mov
adc
bnd
out
xlat
inc
aam
pushf
xlat
cli
cmp
mov
xor
in
cld
and
jns
xor
or
jno
fwait
pop
pop
sub
push
sbb
flds
nop
shlb
dec
jp
pop
and
xchg
arpl
iret
rorb
adc
test
shlb
cs
mov
scas
push
into
jmp
sub
setns
sub
daa
pop
cmpl
stos
ljmp
xor
imul
cli
and
lcall
jns
add
insl
mov
test
mov
pusha
sub
fisttpll
mov
fiaddl
or
adcb
fadds
jle
bts
aaa
sub
sbb
pop
in
jns
pop
loopne
in
jnp
sub
and
sub
adc
insl
outsl
cli
inc
sub
mov
sahf
loopw
sub
cmp
scas
or
xlat
aad
sub
mov
enter
inc
test
add
mov
dec
test
mov
push
les
sub
add
sub
mov
jae
push
pusha
lret
add
movsb
fldl
fists
int3
push
mov
std
sbb
and
dec
adc
pop
xchg
mov
insb
aas
mov
inc
sub
xor
mov
sahf
push
js
rcr
inc
inc
js
cld
and
sub
and
sub
pop
add
jnp
sbb
test
les
negb
xchg
mov
adc
incl
add
aaa
mov
sbb
loop
jge
ret
xchg
mov
sbb
fs
lods
nop
cltd
mov
sub
adc
xor
jbe
addb
inc
in
pop
loope
mov
mov
jns
mov
xor
int
jb
xchg
outsb
rcll
cmpsl
popf
pop
sbb
mov
fcmovnbe
dec
out
clc
xor
inc
insl
movsb
je
rorl
enter
in
scas
pop
ja
cmp
or
aad
insl
add
adc
mov
jnp
or
mov
lods
nop
jl
cmp
cmp
mov
loopne
popf
jb
fisubs
adc
fwait
jl
sub
lock
int
or
or
lods
jno
pop
sub
or
movsl
repnz
sub
pop
in
sub
fnstcw
dec
imul
push
pop
repnz
jb
and
jecxz
out
push
outsb
clc
xor
addr16
push
or
jg
mov
dec
mov
test
sarb
in
cltd
sub
notl
lds
cmp
dec
cmp
xchg
out
jns
inc
ss
fwait
insb
jno
flds
cld
mov
push
out
sub
nop
mov
adc
xchg
pop
lds
or
out
cld
lods
xor
shl
mov
data16
add
sub
out
jae
xor
add
jne
fwait
mov
mov
les
fwait
notl
scas
test
shlb
jmp
jecxz
pop
pop
push
mov
pop
cmp
push
pop
mov
push
call
movsl
jno
mov
leave
add
ds
es
imul
push
inc
add
push
mov
or
and
add
je
push
mov
and
lahf
xchg
sub
xor
dec
xlat
xlat
mov
inc
int
rorb
or
jae
sub
popf
scas
inc
sub
add
dec
data16
fnstsw
dec
mov
stos
jno
add
arpl
subl
stc
push
dec
mov
xchg
arpl
add
lcall
pop
sub
add
les
int
cli
aam
lahf
loop
mov
mov
enter
movsl
cmpsb
sub
or
adc
into
and
jae
lret
ljmp
adc
out
jae
pop
or
mov
fdiv
cmp
iret
jge
or
gs
pop
sub
adc
fsubs
mov
in
iret
or
mov
andl
clc
rcr
adc
clc
cmp
mov
aaa
test
jns
xchg
dec
aaa
sbb
pop
dec
pop
loope
lret
popa
js
add
and
call
mov
jmp
sub
add
sbb
ds
outsb
or
mov
in
loop
scas
insl
out
lock
or
push
jno
aad
movsl
enter
jmp
pop
jae
inc
sub
and
lcall
xchg
aad
jg
jge
test
sti
fwait
sub
adc
push
cli
inc
cli
jmp
mov
lods
mov
push
or
ror
lret
or
stos
sub
rolb
or
push
cmpsl
dec
push
mov
jle
lret
and
cs
bound
repnz
rorb
jge
shlb
aad
inc
or
pop
imul
test
scas
pop
sbb
mov
test
fs
lods
cmc
rorl
fcoml
xchg
sub
push
outsb
jae
rolb
ret
cmp
inc
cmc
in
insl
pop
dec
sbb
out
in
push
adc
and
xchg
dec
xchg
sbb
sub
add
adc
mov
les
push
mov
cmp
stc
sbb
add
popf
pop
test
leave
arpl
jmp
iret
jb
fs
xchg
inc
mov
lret
cmp
dec
jae
xchg
adc
fwait
mov
test
testb
loope
outsl
mov
add
mov
ficomps
fisttps
je
fucomi
bound
loope
lahf
movsb
das
push
mov
fucomp
mov
mov
sub
out
lock
sbb
and
cmp
mov
mov
aaa
push
push
cld
lea
aad
stc
das
sub
jge
lahf
fcmove
clts
fcompl
iret
mov
jno
lock
mov
and
cmp
mov
adc
mov
cmp
addr16
ret
int
seto
cmc
push
pop
mov
shrb
pusha
fucom
je
cmpsl
or
int3
mov
fsub
pushf
mov
popa
jmp
je
or
xor
xchg
cmpsb
movsb
pushl
lea
jbe
lret
scas
jns
out
sarb
pop
int3
cltd
test
mov
xchg
cmp
push
out
adc
div
mov
push
jb
jns
clc
sbb
pop
push
and
mov
add
dec
mov
sbb
push
cmp
cmp
mov
mov
std
push
lock
bound
in
test
add
dec
jo
xor
cmpsb
pop
sar
loope
mov
shlb
mov
test
stos
sbb
pushf
lcall
sub
sbb
out
es
loopne
jbe
add
cltd
jmp
xor
xor
enter
mov
push
or
sub
in
jg
lcall
or
imul
call
push
xor
push
or
jno
sub
mov
and
test
or
iret
cld
adc
loope
or
adc
insl
call
inc
xchg
cmp
jne
in
xor
adc
mov
mov
push
or
xchg
icebp
jne
arpl
inc
mov
jnp
sub
jb
jns
sahf
xchg
sarb
shll
or
push
and
fildl
mov
aas
lcall
adc
mov
sub
jl
cwtl
pop
pop
scas
je
push
fisttpl
es
jp
adc
sub
mov
cld
dec
mov
ss
call
cmovbe
bound
pop
lret
mov
sub
negb
or
sub
xchg
inc
ret
pop
addr16
dec
test
subl
mov
lds
mov
mov
ror
cmp
push
xorl
cmp
ss
mov
test
add
aaa
arpl
aam
outsl
jbe
or
dec
sahf
or
lds
out
inc
xor
outsb
push
addr16
pop
dec
cmp
fidivl
enter
aam
xor
cli
in
add
push
movsb
cltd
dec
mov
add
cmc
or
ds
sub
out
pop
sbb
repnz
inc
mov
or
jbe
cli
dec
add
mov
inc
pop
outsl
inc
imul
mov
mov
mov
and
pop
jno
inc
fcmovnb
shrl
or
sub
stc
inc
dec
sbb
cmp
iret
daa
mov
movsb
dec
setle
int
cmp
jl
rcl
push
sbb
test
outsl
outsl
mov
int
jle
dec
lock
sahf
fs
push
xor
in
add
push
push
mov
daa
lea
out
leave
xchg
bound
push
jl
inc
push
mov
sahf
mov
xchg
mov
pop
xor
repnz
loopne
repnz
dec
pop
test
cmp
xor
pusha
out
jecxz
xor
clc
push
popa
gs
loopne
pop
cmp
mov
aam
cwtl
movsb
xlat
mov
sub
pop
mov
mov
pusha
movl
push
push
push
pop
ja
fsubrl
push
pop
cmp
fwait
push
stos
mov
cmpsb
mov
mov
push
mov
dec
fiadds
push
insb
dec
enter
shr
sub
adc
sbb
and
cmp
pop
add
inc
xchg
or
insl
mov
and
xor
xchg
mov
push
add
mov
add
inc
sti
sbb
adc
sbb
adc
fs
xor
je
cmpsb
repnz
in
leave
push
sbb
jnp
cli
pop
jae
sub
xchg
mov
adc
pop
and
mov
iret
mov
leave
jp
js
dec
sbb
mov
mov
ja
add
fimuls
iret
daa
movb
push
pop
sub
and
inc
outsl
push
imul
popa
jecxz
xchg
fsts
outsl
fisubrl
add
and
push
repz
idivb
sbbl
divb
mov
inc
stos
lods
push
out
adc
inc
aad
repz
rorl
mov
push
jnp
pop
jg
push
lret
std
add
out
inc
mov
aam
mov
add
xor
push
std
xor
xor
leave
rclb
mov
insb
stos
orb
aam
mov
gs
push
jne
push
loope
int
bsf
fstp
into
cmc
movsb
in
cld
adc
daa
pushl
leave
ret
scas
insb
mov
fwait
xchg
cmp
lods
subb
cmp
push
sti
aas
inc
add
andl
je
pop
ss
enter
aam
insl
inc
xor
pop
mov
jecxz
cs
mov
sub
jg
dec
and
ss
push
cmp
das
flds
cmp
pushf
rolb
clc
adc
std
bound
rcll
xchg
clc
inc
and
jl
je
adc
push
bound
lcall
push
dec
xlat
jno
push
adc
fildl
mov
and
sarl
mov
inc
int3
cmpsb
lahf
jbe
xor
scas
shll
or
sbb
cmp
dec
dec
lahf
adc
mov
cmp
mov
mov
sub
push
iret
scas
test
out
mov
fwait
into
adc
orb
ja
xchg
or
xchg
xor
mov
jp
sub
cmp
in
pop
dec
adc
push
or
jmp
inc
mov
int3
sub
jmp
xchg
inc
std
pop
sbb
inc
sub
cmp
ret
jle
insl
add
cmp
in
jecxz
sahf
pop
inc
jmp
pusha
aas
cmpsl
xlat
fistps
pop
or
push
pushf
ss
xchg
stos
faddp
dec
jbe
push
cmc
dec
mov
shrb
add
cmpsb
jo
addps
push
or
scas
inc
mov
jnp
and
cmp
mov
outsb
icebp
mov
loopne
addr16
adc
in
push
cli
idivb
jbe
or
sub
shrb
aam
das
push
popf
movsb
mov
call
shll
jg
gs
dec
mov
out
xchg
outsl
cmp
xchg
sub
mov
push
sti
cwtl
je
outsl
in
scas
jp
imul
jg
sub
add
adc
pop
fists
inc
loop
mov
aas
sbbl
mov
xor
push
jl
in
dec
out
sbb
mov
cmp
inc
jnp
fwait
jl
scas
add
sbb
jl
ss
and
sub
add
stos
fists
push
adc
fldl
sar
sbb
mov
cmp
rclb
push
mov
xchg
andb
ljmp
test
cltd
add
rcr
add
jbe
mov
push
sbb
mov
sbb
jmp
push
inc
mov
or
and
dec
in
xchg
int3
lret
or
and
in
daa
mov
xchg
js
adc
mov
cmp
push
int3
pusha
in
mov
dec
add
scas
data16
jno
add
leave
mov
jno
decl
inc
pushf
inc
andb
sbb
fisubs
popa
popf
add
add
mov
loop
outsb
out
test
iret
sub
in
mov
adc
call
jb
sahf
lds
push
ret
mov
push
dec
fstps
lcall
icebp
mov
es
in
imul
mov
lahf
xor
pop
lods
dec
repz
fiaddl
jns
imul
je
sbb
nop
lods
pop
xor
pop
jo
inc
in
and
loopne
pop
int
push
aad
xchg
ret
lcall
jns
es
mov
mov
cmp
dec
push
xlat
add
jmp
jp
adc
push
dec
outsl
cmp
lods
movsl
data16
and
mov
push
test
insb
adc
arpl
add
stc
sbb
and
pushl
adc
xchg
or
jo
jle
dec
enter
push
push
gs
arpl
aas
shlb
sbb
cmpsl
xor
lock
xor
push
ret
and
es
test
dec
cmp
test
xor
xor
dec
adc
lea
push
dec
sti
mov
push
nop
decb
test
lret
call
negl
pop
icebp
fcoms
lods
mov
sahf
outsb
out
mov
lret
mov
movsb
xor
sub
sub
ja
inc
mov
stc
dec
cmc
pop
push
aad
and
push
push
loopne
pushl
loopnew
inc
mov
jge
mov
sbb
fwait
xchg
sbb
ljmp
and
imul
dec
push
cmp
mov
scas
and
jmp
icebp
add
sub
cltd
or
or
inc
imul
adc
pop
outsl
dec
mov
pop
adc
cmp
mov
push
mov
pop
insb
inc
xchg
sbb
icebp
lcall
rcr
data16
or
adc
cli
mov
leave
pop
xchg
pop
int3
fidivs
inc
xchg
daa
or
test
jp
inc
xchg
imul
jne
xchg
dec
inc
fpatan
imul
xchg
mov
lds
sub
mov
and
mov
xor
mov
mov
adc
jae
sahf
rcrl
subb
inc
dec
sbb
jp
jo
mov
lds
outsb
repz
pusha
mov
push
dec
mov
xchg
outsl
jp
pop
int3
add
and
sbb
jp
das
pop
xchg
mov
out
or
inc
xchg
daa
arpl
insl
mov
and
xor
imul
cld
sahf
cltd
mov
fcomps
jl
ret
shlb
and
ds
ss
push
aaa
sbb
push
ja
adc
stos
mov
mov
imul
ret
fldl
dec
ficomps
push
cmpsl
ljmp
fadd
inc
or
scas
mov
les
lea
jl
push
pop
mov
fcomps
push
pop
jmp
inc
dec
adc
pushf
ret
push
jge
cmp
and
adc
push
adc
sub
movsl
mov
ficoml
adc
inc
dec
les
enter
lock
sbb
in
lcall
data16
das
push
mov
xor
and
and
je
sbb
inc
xchg
dec
cwtl
sbb
or
fidivrs
xchg
sub
sahf
mov
pop
push
xorl
je
cld
rcll
inc
cmc
ss
icebp
hlt
xor
mov
cwtl
adc
ss
into
fldt
fists
xor
insb
out
add
mov
enter
icebp
dec
test
or
mov
xor
jo
sub
mov
mov
pop
add
push
and
sti
stc
gs
sahf
inc
test
mov
xor
sub
nop
popf
scas
mov
cli
pushf
lret
out
and
inc
jno
pop
cmp
inc
out
movl
jne
add
adc
sbb
sbb
pop
scas
mov
and
loopne
bound
mov
lcall
mov
fidivrl
cltd
xlat
out
je
xchg
jmp
fs
pop
pop
pop
push
sbb
inc
pop
pmaxub
jp
cltd
or
inc
dec
cmp
fisttps
je
mov
mov
int
ret
cmpsb
test
jge
cmpsb
fwait
cltd
jbe
nop
dec
stos
cmp
repnz
pusha
std
push
mov
loop
std
les
sbb
aam
ljmp
sub
add
push
aas
negb
clc
push
jmp
icebp
mulb
cmp
sbb
test
pop
push
mov
cs
mov
das
push
out
or
xor
and
in
jecxz
cmp
pop
add
pop
das
dec
int3
mov
jecxz
jnp
pop
push
lea
xchg
or
jp
stos
ds
cld
xor
in
push
pop
xchg
push
jmp
sbbb
cmp
sbb
loop
jne
test
fbstp
pop
cmp
lahf
adc
sub
ljmp
push
cli
jno
jns
and
xchg
popa
mov
filds
in
std
add
and
leave
mov
xor
jbe
int3
adc
and
in
es
insb
cld
ds
xlat
dec
clc
das
scas
addr16
push
or
cmpsb
mov
jp
jle
inc
shlb
push
jo
jo
or
push
fisttpl
dec
test
mov
outsb
inc
mov
leave
arpl
ret
cld
insl
mov
mov
fisubrs
out
fdivs
xchg
lds
inc
outsl
sub
repnz
xchg
cmp
js
imul
add
add
imul
int
shlb
dec
repnz
sti
das
pop
sarb
adc
adc
mov
movsbl
cs
cmp
aam
xor
in
pop
jno
icebp
cmp
xchg
dec
stos
jns
mov
pxor
in
mov
xor
shr
push
push
jmp
test
dec
shlb
dec
xor
pop
cmp
pop
jmp
mov
rorl
add
sbbb
dec
adc
nop
mov
insl
mov
mov
ret
fsts
add
sbb
outsb
pop
pop
sub
cmp
push
sub
push
sbb
cld
or
sar
cld
jge
and
or
mov
mov
or
js
arpl
orl
cmc
pop
stc
fwait
mov
imulb
inc
xchg
add
and
mov
rcrb
adc
dec
test
add
fs
and
lret
fildl
test
cmp
mov
movsl
ficoms
cmpsl
lret
out
paddb
insb
fsubrl
icebp
sti
push
mov
cld
ss
adc
fcmovne
es
cmp
pop
icebp
daa
aas
or
data16
sub
xchg
or
lods
arpl
incb
aas
xorb
subb
mov
fistpll
sbb
dec
cmp
insl
icebp
lods
sbbb
fnstcw
mov
mov
jae
ljmp
repz
mov
aam
cmp
mov
test
sub
iret
jnp
add
mov
in
sub
cmc
mov
fisttps
aam
and
mov
dec
aam
xchg
dec
and
sarl
dec
adc
mov
xor
mov
jno
inc
jno
cmp
fcompl
clc
pusha
xor
adc
int3
scas
icebp
psubb
sbbl
xchg
test
jo
push
inc
cmp
dec
cwtl
out
jmp
adc
pop
mov
add
rcl
ss
out
daa
add
loop
mov
jp
xchg
mov
push
movsb
mov
insl
push
cld
push
jb
fidivl
cmp
test
das
loope
jo
xor
int
jge
xlat
std
push
dec
notb
add
or
lahf
cmp
das
push
and
push
and
aaa
dec
int3
jp
mov
rorb
fsincos
dec
aas
add
jge
mov
add
das
mov
ss
leave
pop
fmulp
push
and
inc
or
andl
inc
ja
pop
xor
pusha
or
sbb
outsb
add
mov
mov
xor
mov
jle
icebp
and
rol
pop
jecxz
cld
add
xchg
xchg
popf
cmpsl
adcl
or
push
pop
cwtl
and
dec
sbb
scas
jge
daa
shlb
dec
mov
cmp
jo
or
pop
inc
fbstp
sbb
imulb
ret
out
rol
movsb
into
imul
mov
or
mov
cli
jge
pop
cmc
in
xchg
enter
mov
sbb
push
lds
pmulhuw
mov
xchg
or
lds
fiadds
jecxz
jp
shr
fistl
cmp
mov
jle
orb
xor
mov
lds
mov
sbb
cmpsl
fstps
sub
cld
push
test
frstor
int
cmp
clc
lods
jns
push
add
stos
mov
outsl
out
mov
mov
sbb
pop
sti
or
dec
cmc
mov
xchg
push
cmp
mov
or
sbb
xchg
in
pushf
add
ss
clc
rclb
inc
push
repz
jnp
jl
adc
out
shlb
cmp
sub
xor
mov
xor
imul
lea
and
or
push
movsl
pop
dec
push
movsb
stc
das
lret
add
fisttpll
movsb
aas
ret
std
mov
cmp
cmpsl
or
and
and
xchg
aaa
stc
push
enter
pop
subl
or
in
lcall
movsb
xor
mov
test
in
pushf
inc
cmp
cmp
xchg
pop
cli
ds
aaa
mov
inc
add
adc
addr16
add
pop
mov
lahf
and
enter
or
inc
stc
lret
rcll
push
xor
je
faddp
mov
inc
xchg
sub
push
push
icebp
scas
xchg
in
into
and
clc
mov
push
int
xchg
pop
add
into
ljmp
pop
fisttps
jg
push
imul
mov
mov
add
popa
adc
adc
inc
lea
or
cmpsb
cli
jle
sub
push
sbb
cmp
fwait
dec
test
adc
push
xchg
call
std
xor
mov
add
in
pop
or
out
and
out
adc
dec
test
shl
gs
push
sahf
std
add
popa
jg
lock
inc
push
push
mov
push
je
fildl
movsb
aad
adc
push
xor
iret
add
fdivs
stos
mov
sub
fwait
jmp
jp
in
and
mov
push
push
mov
mov
lock
loop
mov
xor
push
adc
jge
push
popf
pop
lahf
jecxz
std
ja
push
fldt
sbb
sbb
jns
mov
and
int
outsl
scas
xor
add
xor
mov
add
addr16
jle
inc
cmp
jns
mov
mov
call
cmc
jb
mov
dec
out
sti
ds
lcall
lret
jmp
push
add
out
or
test
push
push
jo
or
aam
scas
xor
incl
loope
mov
xor
cmc
ss
sbb
jne
cmp
jle
aad
shlb
rcr
add
out
test
adcb
pop
cwtl
push
mov
xchg
xchg
filds
push
call
mov
cwtl
add
sub
mov
cmp
or
push
xchg
xchg
fwait
in
mov
mov
push
dec
test
stos
lods
lret
clc
mov
and
add
adc
mov
fadd
lea
mov
std
gs
pop
aas
and
daa
enter
je
insl
into
fdivl
cltd
push
pop
loope
roll
ja
ret
dec
imul
xlat
cs
mov
cmp
xor
je
pop
xchg
call
dec
xor
andl
jae
aaa
add
lret
pop
push
clc
movsb
mov
out
mov
mov
in
cmp
repz
popa
aaa
dec
and
insb
loop
cmpsb
mov
cmp
lods
loop
stos
adc
or
das
std
fsubs
add
bound
cltd
mov
add
jb
xlat
and
leave
xor
scas
scas
push
in
push
lea
mov
fadds
loope
xchg
dec
fcomp
pusha
cmp
mov
clc
das
lds
aad
mov
mov
outsb
xor
mov
inc
jle
add
dec
mov
popa
and
lods
popf
or
mov
mov
es
mov
lods
mov
and
push
enter
mov
stos
in
and
scas
mov
outsl
outsb
mov
data16
mov
or
inc
push
dec
stos
xor
mov
push
dec
jg
push
fs
inc
dec
stos
pop
push
or
std
into
fs
push
mov
fwait
outsl
ret
sub
xlat
or
movsb
dec
leave
hlt
push
repnz
shll
xor
sub
aad
fprem1
inc
dec
sbb
das
inc
std
cmc
push
mov
push
and
jno
jg
sub
in
adc
push
popf
push
scas
and
fsub
mov
pop
pop
push
jae
out
ret
mov
pushf
mov
ljmp
les
jb
fnstcw
cmpsl
mov
mov
psubusw
adc
mov
jmp
sub
xchg
popf
decb
repnz
jnp
push
cmp
mov
jl
aaa
sub
inc
cltd
fs
cmp
inc
jbe
cmpsb
mov
shlb
psubd
stc
dec
fxam
xor
dec
icebp
lock
xchg
cmp
mov
outsb
sahf
push
xchg
inc
inc
push
or
lahf
cmp
iret
fistpl
jb
repnz
add
dec
dec
test
push
daa
sbb
pop
and
iret
push
movsl
pushf
les
dec
dec
sub
push
das
sarb
insl
insl
xchg
enter
inc
dec
add
mov
lret
mov
xor
orl
dec
das
repz
mov
outsl
stc
mov
adc
std
inc
in
add
pop
adc
scas
sbb
test
ja
jecxz
cltd
icebp
insb
adc
push
test
cmp
insb
mov
add
lods
pop
es
addr16
add
aam
push
stos
idivl
out
and
pusha
call
pop
mov
cmpsb
dec
pusha
sub
push
add
pop
push
add
mov
mov
fwait
xor
mov
jnp
sub
sbb
dec
loope
sbb
lods
es
and
out
loop
xchg
stos
ja
xchg
xor
jg
or
in
fwait
scas
add
xchg
imul
sub
test
call
xchg
jmp
mov
xor
push
cmp
push
stc
icebp
xlat
add
cltd
scas
pop
push
push
push
push
add
imul
push
dec
ljmp
gs
js
mov
jl
pop
test
fdivrl
sub
dec
xchg
lahf
sti
xchg
push
adc
mov
add
out
sbb
movsl
pusha
int3
jo
jmp
mov
gs
jge
testb
jns
dec
repnz
cld
mov
adc
pop
mov
jae
jbe
rclb
jno
js
push
and
ja
or
xchg
cmpsl
shl
mov
inc
cmpsl
shlb
enter
and
inc
push
imul
in
jp
outsl
xchg
fs
jae
rcll
in
xlat
mov
mov
test
rcll
jne
jmp
lret
addb
adc
int
leave
fdivrs
dec
cmpsb
push
cli
repnz
mov
jg
jnp
inc
in
outsl
jno
jmp
jg
call
test
fstl
imul
or
jnp
stos
aam
movsl
shlb
insl
or
lcall
mov
lods
aad
test
out
into
sub
clc
andb
pop
repnz
push
or
add
dec
add
inc
in
mov
sbb
int
adc
daa
xchg
test
and
add
jb
lcall
movsl
movsl
cmpsb
or
loop
jnp
xchg
mov
sbbb
lahf
aad
dec
adc
push
mov
call
ret
dec
pop
data16
mov
xor
and
add
test
jp
andb
test
add
sub
leave
and
push
push
insl
adc
jecxz
adc
out
lock
clc
inc
test
in
in
push
add
dec
lahf
adc
adc
mov
sbb
in
stc
mov
sets
inc
jo
stc
sub
and
add
aad
pop
ja
inc
jb
jmp
dec
imul
push
push
mov
dec
push
sub
rcrl
jecxz
push
aam
mov
das
in
into
cmp
les
push
movsl
popf
fdivrs
pop
fmuls
fisttps
imul
sahf
jb,pt
movsb
cmp
dec
popa
das
es
xlat
hlt
mov
fwait
sbb
mov
adc
aad
mov
jl
insb
mul
dec
loop
call
in
lcall
into
movaps
inc
adc
add
fdivs
pop
adc
mov
push
and
add
jae
jmp
ljmp
mov
ds
data16
int
jmp
outsl
dec
or
int3
test
push
xor
es
gs
jp
mov
mov
pop
mov
addr16
and
lea
dec
xor
mov
xchg
sbb
inc
fadds
test
sbb
push
rorb
mov
ficomps
enter
xor
adcl
into
out
aaa
mov
cmp
sbb
mov
or
int3
cltd
test
adc
adc
pop
mov
add
jl
es
ja
test
adc
mov
not
push
stos
dec
fadds
test
int3
stc
mov
cltd
bound
push
ret
cmp
jg
xor
ja
call
push
mov
hlt
push
push
or
in
cld
lahf
outsl
add
adc
cld
ret
jge
cli
dec
adc
cmp
lock
mov
sbb
nop
fdiv
xchg
stos
sub
in
jnp
cwtl
cli
ficoms
lods
out
and
scas
sub
inc
clc
std
je
fldenv
lret
adc
aas
das
scas
in
or
test
mov
add
rcrl
ss
xchg
mov
fisubs
imul
sub
pop
test
ljmp
shlb
popf
xchg
push
or
dec
add
add
fcmovb
xorb
sub
jo
mov
pop
push
aas
and
fwait
inc
sbb
push
pop
ljmp
or
in
xchg
add
call
shlb
and
cli
clc
inc
cmpsl
cs
sbb
xor
addb
insb
lahf
mov
xchg
sbb
pop
jge
in
js
inc
out
inc
or
jg
xor
dec
loop
pop
ss
shrb
cmc
cli
out
pop
fwait
sub
into
inc
cmpsb
mov
outsb
ljmp
outsl
aam
stc
pminsw
jae
sbb
add
pop
inc
add
stos
ss
test
inc
mov
sbb
lcall
dec
aaa
in
cmp
sbb
popa
lock
aad
lahf
adc
dec
adc
cmp
mov
jle
ljmp
jl
mov
adc
lret
sub
flds
cmp
jno
sbb
push
lock
mov
sbb
lock
sub
sub
pop
lods
leave
ret
mov
movsb
loopne
xor
dec
ja
mov
sub
mov
repz
xchg
or
mov
xchg
int3
sbb
add
push
arpl
add
mov
test
iret
sub
fnstsw
fidivl
push
cmpsl
sub
mov
aam
or
xor
cmp
sub
mov
aaa
push
stc
adc
push
adc
inc
mov
jecxz
imul
sbb
daa
jns
xchg
mov
test
popa
cmpb
adc
test
das
jb
cmc
pop
mov
inc
shlb
sub
rolb
dec
nop
rorb
jbe
stos
jbe
fistpl
push
aas
xor
nop
lds
or
push
cwtl
xchg
js
aad
pop
imul
cmpsb
stos
frstor
and
cld
xor
xor
pushf
push
test
sub
jae
mov
ret
outsl
gs
daa
jge
mov
mov
jae
and
loopne
cmpsl
push
in
pop
sub
test
fs
rcrb
test
xchg
das
adc
lock
or
test
mov
scas
inc
addb
ret
inc
mov
lds
mov
dec
pop
dec
outsb
pop
mov
xlat
into
jns
or
jge
cmpsb
mov
or
mov
xchg
in
fcoms
mov
push
cli
cltd
fisttpll
push
xchg
mov
cmpsb
enter
cmp
pop
mov
cltd
add
repz
mov
cmpsb
cmpl
xor
jle
in
adcl
movsl
adc
xor
jae
dec
adc
repz
jns
jo
addb
mov
dec
jns
pop
lcall
lret
add
inc
inc
inc
dec
inc
insl
fidivrs
outsl
fcmovnu
and
and
les
push
movnti
sarb
mov
and
int3
outsl
and
xchg
fnstcw
inc
clc
std
mov
andl
jbe
xchg
mov
sub
ljmp
add
lea
adc
movsb
jb
sub
add
pusha
std
sbb
pop
cltd
xchg
pop
notb
xlat
rcrb
outsb
xor
add
or
mov
cmpsb
xchg
insb
push
dec
les
xchg
lock
js
dec
add
js
movsb
pushf
xor
mov
push
and
repz
mov
cmp
stos
dec
adc
and
clc
xorl
push
sbb
jb
fdivr
cmp
sahf
or
pop
lea
insl
cmp
sbb
or
xor
stos
sbb
and
push
pop
cld
les
in
xchg
mov
mov
mov
xchg
pop
jne
xchg
add
xor
jmp
out
je
clc
in
add
js
lahf
xor
pop
sub
xor
inc
mov
dec
mov
cltd
add
in
adc
fwait
roll
enter
clc
or
outsl
pop
enter
mov
ja
pop
push
cmc
mov
sbb
loop
cmpsl
pop
pop
mov
xor
sub
shl
dec
cmp
sbb
inc
fildll
sti
lods
push
jne
outsb
outsl
cwtl
lret
add
mov
jb
adc
xchg
dec
dec
jno
add
inc
in
movsb
hlt
dec
cmp
das
dec
ffree
cmp
clc
enter
sub
push
ret
cmpsl
xchg
cmp
pop
imul
xor
xchg
hlt
pop
arpl
mov
fmull
nop
insl
aam
sbb
ret
jns
cmp
rclb
call
out
or
sub
sarl
xorl
adc
adc
test
push
xor
in
repz
jmp
inc
hlt
repz
and
xor
mov
and
sub
cmp
add
add
xlat
test
fmull
sub
jp
sub
pop
xor
call
mov
mov
aad
rorb
jge
push
imul
fisttps
shll
jbe
mov
dec
addr16
adc
sbb
sbb
adc
out
adc
mov
push
movsb
mov
and
push
loop
scas
movsb
lcall
sbb
sub
adc
lods
lret
adc
mov
mov
sbb
daa
or
movb
inc
out
xchg
in
cmp
push
dec
xchg
adc
outsb
jp
pop
mov
enter
insb
xchg
nop
or
jp
aas
sti
insl
xor
aam
push
xchg
jae
push
lea
out
push
cmp
sarb
fidivs
inc
dec
dec
jmp
cmp
jmp
cmp
lods
pop
enter
adc
mov
dec
xchg
mov
lahf
add
out
or
jl
ret
inc
test
mov
xor
call
insl
jg
sahf
lret
cmp
popf
fsubp
add
lret
insb
mov
sbb
and
xor
sbb
mov
xchg
jb
shrb
int
mov
sbb
jnp
and
inc
in
dec
cltd
push
cwtl
jp
and
mov
sbb
mov
pop
jp
xchg
addb
dec
push
cmp
push
mov
mov
dec
sub
cmp
fs
bound
xchg
dec
aaa
mov
sarb
xchg
filds
cmp
mov
or
or
in
cltd
cld
lret
inc
fisubs
sbb
or
jne
aaa
cmpb
iret
out
add
inc
xor
loopne
sbb
dec
mov
jno
push
lret
imul
ficoml
adc
sub
outsl
enter
mov
push
lahf
xor
xor
pushf
aaa
leave
add
cli
stos
bound
xor
jne
fs
wbinvd
icebp
and
mov
and
jnp
enter
add
push
ret
pushf
test
sbb
and
std
fildll
movsb
cwtl
cmpsb
cmp
imul
stos
cmpsl
stos
and
inc
loopne
inc
movsb
or
inc
xor
daa
into
frstor
inc
cmp
mov
jle
stc
shrb
sbbl
cmpsb
sub
xchg
mov
inc
mov
ret
ja
mov
mov
mov
mov
sahf
and
std
out
jbe
into
xchg
mov
mov
sub
add
and
mov
out
dec
adc
cmpsb
movsb
push
add
cmpb
rolb
mov
cmpsl
incl
and
push
lods
and
xchg
pop
xor
push
mov
push
inc
lret
xor
pop
les
ret
lcall
inc
fstpl
movsb
mov
aaa
push
and
jmp
cltd
mov
movsb
in
jns
jg
loopne
push
test
mov
jp
sbb
jbe
cmpsb
sbb
mov
mov
pop
sub
test
sbb
push
pop
inc
xor
repz
into
fnstcw
xor
test
fldt
mov
mov
jl
mov
aam
mov
cmpl
loope
adc
ljmp
inc
mov
sbb
inc
ret
push
loope
cmp
loope
pop
subl
in
cmpsl
or
xchg
les
ljmp
data16
aam
js
roll
pop
bound
sub
or
sub
imul
pop
repnz
scas
cmp
scas
push
push
sbb
iret
fidivs
pop
xor
je
test
mov
dec
ja
into
mov
cltd
xchg
xchg
jne
iret
and
jbe
xchg
loop
aaa
fpatan
dec
das
rcll
push
daa
mov
shlb
inc
jmp
pop
jnp
daa
jmp
push
insl
divb
sbb
pop
loope
xor
add
pop
hlt
or
enter
xchg
push
dec
addr16
or
adc
sub
loope
gs
jbe
mov
faddl
in
arpl
and
mov
push
sti
cltd
test
lcall
fmuls
or
sarb
in
lods
fidivs
mov
aam
mov
repz
repz
or
imul
and
sbb
or
sub
xchg
cmp
in
or
shlb
or
xor
insl
mov
and
push
lret
ficoml
xchg
sahf
loop
cltd
in
sub
mov
jnp
addr16
lock
mov
jle
fs
cmp
mov
out
dec
and
mov
lods
or
enter
and
mov
repnz
sub
xor
xor
xlat
adc
fisttpll
xor
into
adc
icebp
xchg
mov
jp
insb
fwait
cmc
push
mov
mov
fstpl
std
loope
mov
inc
jp
dec
push
push
cmp
dec
or
and
or
cmp
arpl
cmp
sub
push
lds
imul
sahf
sbb
mov
in
or
outsb
fs
push
push
jnp
fwait
xchg
outsl
xchg
xchg
mov
mov
sbb
xchg
or
lret
clc
jae
xchg
pop
outsl
jno
push
jg
sti
jle
lahf
and
adc
fldcw
pop
xchg
and
cs
stos
mov
cli
lret
push
adc
sarl
add
cmp
adc
mov
arpl
shl
int
jp
aas
repz
imul
pop
mov
inc
adc
lods
test
in
and
ds
and
dec
push
pop
bound
repz
pop
inc
je
pop
cmpsb
out
jg
lret
xchg
and
nop
inc
inc
stos
add
cs
jns
pop
outsl
cwtl
pop
insl
shrl
push
jle
push
jl
pop
push
xor
add
pop
fcoms
or
xchg
shrb
pushf
mov
push
mov
mov
insl
or
sub
xchg
cwtl
aad
dec
xchg
xchg
or
jp
jmp
pop
int3
sbb
sub
adc
add
movsl
mov
popa
cwtl
cmp
mov
lahf
xchg
in
flds
sub
clc
in
mov
xor
insb
sbb
inc
adc
nop
or
add
out
std
cmpsl
aam
add
xchg
scas
sbbb
mov
push
push
iret
cld
xorl
std
ficomps
xchg
imull
jecxz
les
out
xlat
adc
addr16
mov
adc
mov
lods
aaa
pop
sbb
mov
dec
jb
inc
cmc
cmp
fists
inc
fcomi
mov
ds
add
jbe
jle
adc
sub
cli
ds
pop
jno
sub
cmp
outsb
inc
push
lcall
daa
xor
shrb
push
sarl
inc
arpl
xor
push
fwait
xchg
add
add
xchg
je
xor
cs
aas
lahf
jge
pop
clc
jmp
enter
push
cmp
pop
les
int
push
sahf
test
sub
sub
inc
movsb
inc
les
je
popf
mov
pop
jae
sub
int3
sub
lret
or
inc
pop
mov
pop
cmp
std
bound
in
arpl
inc
test
les
sub
or
cmp
mov
cwtl
mov
jnp
popa
xor
mov
lret
pusha
idiv
mov
pushf
add
pushf
lods
fisubl
or
push
dec
add
shrb
shlb
outsb
xor
adc
ljmp
in
inc
popf
loop
insb
adc
ja
sub
mov
arpl
inc
in
mov
xor
lret
outsl
jae
dec
add
add
sub
cmc
pop
stos
adc
mov
push
xor
mov
in
lret
dec
jb
xor
movsb
sahf
stos
lds
dec
rclb
shlb
insl
jae
fwait
scas
arpl
bound
in
lds
adc
push
scas
cmp
jno
mov
dec
cmpsl
mov
pop
sti
mov
sahf
jno
mov
and
pop
stos
pop
mov
test
out
stos
imul
jnp
mov
shll
repz
and
dec
mov
and
dec
outsb
sub
pop
mov
dec
fdivp
insb
adc
or
into
imul
scas
jne
mov
mov
lahf
push
adc
dec
mov
and
dec
sub
push
loope
aad
push
test
orb
aad
jno
es
std
shl
mov
xor
push
into
inc
mov
aaa
fdivrp
jns
shrb
jo
mov
push
loopne
stos
stos
rorb
or
push
inc
iret
ja
push
mov
test
add
orb
inc
jno
sbbl
lods
inc
out
fimuls
mov
movsb
ret
das
stos
pop
gs
add
mov
mov
mov
mov
addr16
lcall
mov
adc
jl
pop
dec
mov
mov
and
xchg
popa
and
cmp
cltd
push
mov
adc
dec
adc
gs
pop
inc
xor
sub
pop
mov
imulb
aam
xchg
mov
fbld
movsl
add
movsl
sub
lods
add
inc
dec
lock
xor
sub
adc
lock
imul
sbb
mull
jmp
enter
pop
lods
xchg
popw
repnz
scas
pop
or
inc
cvtps2pd
add
inc
mov
lret
jb
xchg
iret
into
push
aaa
aam
push
adc
push
mov
imull
fisubrs
mov
fwait
mov
shlb
pop
push
movsl
mov
mov
arpl
ljmp
repz
cmpsl
aad
scas
insb
inc
adc
int3
mov
icebp
imul
clc
and
mov
xor
clc
cld
into
xor
cmp
add
xchg
clc
sbb
push
and
mov
cltd
call
leave
mov
mov
iret
out
nop
sarb
jns
pusha
mulb
xchg
test
xchg
in
test
test
dec
daa
push
jp
adc
sbb
jle
aam
nop
jbe
scas
stos
jns
sub
hlt
push
mov
pop
scas
mov
sahf
pushf
addr16
and
jge
mov
stos
cmp
lret
fisttps
inc
add
and
imul
ret
out
push
add
jmp
mov
pop
pop
push
lahf
jg
pop
lahf
test
les
or
into
fcmovb
inc
inc
lahf
or
or
mov
xchg
clc
dec
sbb
cld
into
in
dec
cmp
xchg
jnp
out
data16
test
jp
xchg
fimuls
les
stc
icebp
cmp
mov
vphaddubd
sub
push
mov
xor
pop
inc
mov
imul
xchg
push
add
or
inc
jne
sti
push
pop
jge
mulb
push
test
lcall
cmp
and
outsb
push
xchg
jmp
inc
std
loop
fs
fisubrl
mov
or
test
xchg
lock
mov
dec
ljmp
popa
mov
and
je
pop
das
fidivrs
lret
dec
das
push
imul
xlat
repz
jbe
xor
stc
sbb
mov
adc
ret
push
xor
sub
repz
imul
nop
js
scas
and
rorl
push
loop
inc
and
loopne
pop
in
push
and
popf
fwait
xchg
iret
mov
lcall
dec
les
push
call
out
mov
pop
jo
lods
js
aam
and
cmp
dec
lret
or
and
cltd
mov
add
add
push
cmp
call
test
lods
jl
add
fmulp
cwtl
xchg
popl
sub
cmp
lods
mov
mov
adc
pcmpeqb
xor
ds
mov
scas
mov
push
ret
mov
mov
sub
adc
xchg
out
gs
push
pop
std
push
add
testb
fidivs
inc
inc
outsb
fisubrs
or
push
push
cld
jg
mov
jnp
aad
outsl
lods
adc
stc
fdivl
lds
mov
test
add
pop
loopne
outsb
push
out
cmp
sub
sahf
mov
icebp
jle
adc
outsl
call
sbb
jo
ds
ds
ljmp
cmp
sbb
push
out
and
push
cwtl
fbstp
and
jmp
xchg
pop
cmp
notb
sub
pop
incb
movsl
inc
and
cmc
jmp
cwtl
xlat
adc
lds
hlt
xor
aad
push
and
mov
shlb
push
cld
lds
cltd
cmpsl
mov
dec
mov
pop
ds
lock
cwtl
movsb
js
lahf
imul
push
stos
dec
js
fwait
cld
out
lret
sub
lods
mov
shr
aam
sub
movsl
mov
mov
xchg
inc
cwtl
mov
lea
mov
addb
pop
inc
mov
cmpsb
aaa
idivl
sub
lock
stc
mov
out
cmp
call
test
jg
mov
data16
rcll
mov
clc
fs
out
adc
sub
push
sub
push
rcl
mov
out
xor
das
cmp
mov
fmul
ljmp
shlb
cli
movsb
push
hlt
xchg
clc
sbb
scas
mov
fwait
pop
popf
test
loop
pop
cli
and
adc
aad
imul
das
adc
pushf
sahf
ret
push
stos
lcall
lods
cmp
stc
push
gs
xor
insl
fldcw
xchg
movsl
push
mov
test
lds
fcomp
icebp
test
popf
daa
sbb
push
dec
frstor
lcall
outsb
mov
mov
sub
cmp
aad
or
and
cmp
push
pop
movsb
loopne
add
or
into
insb
inc
adc
mov
or
sbb
cmc
mov
and
ss
jns
repnz
bound
or
daa
sub
sbb
fs
lret
cmp
adc
lret
sub
clc
rcrl
push
dec
pop
sahf
ja
data16
das
adc
stc
repnz
shl
mov
shll
or
jo
stc
fstpl
inc
cmp
aam
nop
dec
fimuls
jl
rcll
outsb
int
sbb
jl
in
dec
lahf
mov
jo
shl
imul
jno
psllq
pop
adc
in
pop
mov
addr16
aaa
mov
nop
pop
stos
fs
add
inc
popf
lock
jmp
sbb
ds
jno
jns
int
xchg
cmp
bound
test
sub
jecxz
pushf
addr16
lods
cmpsb
mov
mov
add
pop
int3
xchg
aam
pop
imul
xchg
sbb
mov
xchg
mov
add
or
fildl
xchg
outsl
jae
orb
mov
hlt
hlt
adcb
adc
adc
sti
mov
daa
sub
sbb
sarb
adc
xchg
cmpb
xchg
pop
movsl
ds
cli
jnp
int
mov
mov
jne
int
loop
and
dec
jmp
dec
out
test
mov
inc
test
insl
sbb
mov
pop
popf
jns
out
aas
jge
xchg
shll
call
test
or
fstl
jns
or
into
jecxz
xchg
push
mov
cld
pop
sub
ja
dec
pop
xacquire
sbb
iret
inc
pop
xchg
mov
test
or
addb
push
cmp
es
jne
push
add
xchg
addr16
call
in
jecxz
mov
sbb
out
pop
xchg
in
leave
and
jmp
pop
scas
lea
cmp
popa
test
jl
inc
nop
rorl
fs
xchg
clc
out
dec
stos
jno
stos
and
stos
pusha
xchg
add
adc
push
mov
cmp
lds
adc
cmp
in
add
adc
lea
aad
jno
mov
xor
sub
sbb
ljmp
xor
ret
mov
sbbl
jns
loopne
fidivrl
pop
sbb
addb
jl
xor
es
nop
cmpsl
fs
in
lahf
das
jno
dec
stos
das
inc
push
ds
sub
sbb
sub
fcmovbe
or
imul
mov
adc
inc
vmread
loope
enter
dec
jbe
mov
or
std
dec
pop
loope
fnop
movsl
mov
inc
push
and
push
add
xlat
mov
paddd
jp
push
add
cmp
arpl
aaa
and
lods
mov
mov
das
outsl
cltd
push
js
push
rcrb
push
sbb
bound
adc
add
sub
sarl
stc
cld
xorl
mov
outsb
mov
push
mov
push
jnp
sub
inc
div
popa
stc
popa
aam
stos
push
arpl
test
mov
adc
imull
sbb
hlt
arpl
in
ret
movsl
cmpsb
mov
mov
subb
movb
mov
add
push
push
jl
loopne
pushw
pop
push
pop
mov
sbb
mov
jp
call
xor
and
push
dec
pop
cmp
out
and
dec
stos
inc
push
pushf
into
lcall
repnz
es
test
cwtl
push
in
movsb
fistl
cld
jg
jecxz
int
or
mov
inc
cmp
int
or
int
int
mov
add
mov
imul
and
hlt
pop
out
aas
inc
jg
xor
std
jmp
lret
ljmp
dec
cltd
push
pop
pop
adc
adc
ret
inc
xchg
aad
outsb
jecxz
pop
fisubl
arpl
hlt
pushf
push
lods
dec
sbb
mov
or
shld
std
movsl
sti
mov
pop
jl
mov
dec
shl
pushf
aam
cs
cmpsl
dec
xor
test
fidivrl
cltd
lea
mov
cli
pushf
xchg
mov
in
mov
cmc
push
dec
mov
or
int
jae
repnz
pusha
mov
xchg
mov
aad
push
mov
push
pop
or
push
mov
fisubs
aam
lds
das
addb
faddl
mov
movsl
in
push
cmpsb
fwait
lret
cwtl
stc
in
stos
lds
xchg
mov
out
jno
call
mov
lods
int3
xchg
dec
adc
mov
bndstx
test
sub
sub
dec
mov
rorl
test
std
mov
iret
in
jnp
xor
insb
std
scas
pop
pop
in
cmc
mov
or
push
mov
jecxz
jnp
insb
sub
mov
push
and
aaa
xchg
xor
adc
jae
into
mov
sub
xchg
and
push
pop
scas
jo
xchg
or
ljmp
or
jecxz
lock
mov
and
testl
sub
dec
cmpsl
cmp
adc
pop
sbb
inc
dec
shrl
in
mov
fcoms
mov
stc
les
dec
push
push
sub
add
es
in
sub
mov
xor
sub
movsb
push
mov
pushf
cmp
mov
mov
jo
jl
sahf
xchg
mov
in
sarb
xor
das
or
mov
jecxz
mov
xchg
mov
insb
pop
loop
andl
popf
xlat
mov
cmp
mov
fcomps
jmp
lods
sbb
sbb
inc
stos
lahf
scas
dec
ja
out
stos
xor
or
cmp
or
out
std
cmp
scas
push
les
sbb
mov
mov
nop
in
out
rclb
xor
and
inc
or
test
cmp
iret
ljmp
lods
mov
add
and
hlt
pop
ljmp
jmp
mov
push
lcall
mov
test
ljmp
inc
sahf
push
xchg
nop
mov
or
xor
sub
push
xchg
jno
in
inc
mov
push
xchg
dec
inc
imul
popa
mov
mov
mov
outsb
mov
aam
fidivs
push
pop
ret
push
cli
sbb
sub
and
lock
jae
loopne
dec
shrb
out
mov
xor
dec
cmp
xchg
je
add
scas
xor
jp
roll
std
inc
rorb
and
jge
addr16
push
and
mov
jmp
lds
daa
mov
dec
push
sub
adcb
or
xor
in
xor
outsb
sbb
sti
mov
test
add
aas
add
xor
adc
cli
aam
jnp
test
out
cltd
outsb
mov
cld
pop
dec
decl
inc
lock
das
arpl
test
cmp
fdivr
push
test
sti
movb
mov
cmp
fistl
sbb
mov
xorb
sbb
xchg
sbb
scas
std
mov
add
fistps
xor
cmp
xchg
les
mov
ret
mov
push
cmp
mov
bound
push
fidivs
clc
repnz
popf
jb
popa
mov
pop
xor
std
pop
outsb
adc
sbb
lds
xchg
repnz
mov
daa
dec
mov
cmp
shll
ds
arpl
and
xor
inc
dec
pop
sti
sub
jecxz
add
call
inc
fsts
out
add
pop
sub
xchg
subl
inc
adc
imul
cmp
dec
pop
dec
test
mov
cli
mov
std
in
insl
push
add
loope
sbb
inc
push
ficoml
sti
xchg
sbb
ret
inc
mov
jb
mov
ja
ja
pop
out
outsb
fstp
or
cltd
scas
push
ja
mov
daa
cltd
rolb
insl
and
arpl
xchg
xor
pop
fnsave
outsl
push
subps
dec
sbb
sub
loop
jno
xchg
pop
sbb
mov
jo
dec
push
cmc
jo
push
dec
sub
pop
add
cmpsb
addb
test
popf
push
addr16
inc
dec
stc
test
jecxz
mov
cmp
mov
ret
popa
movsl
and
out
and
mov
push
paddusb
sbb
bound
xor
inc
push
dec
xchg
jl
int3
sbb
btc
dec
and
cmp
icebp
sbb
add
lods
fwait
and
jb
xchg
fistl
sub
pi2fd
out
sub
cltd
icebp
mov
dec
sarl
out
out
xchg
push
cltd
ret
inc
pusha
adc
cmp
push
adc
andl
inc
jne
xchg
aas
neg
clc
lock
inc
inc
pusha
xchg
clc
test
shlb
push
out
inc
leave
imul
sub
cli
sub
data16
sbb
rcrl
outsl
fdivp
cs
mov
movsb
jns
ret
sbb
int3
push
jbe
aad
mov
inc
jle
popf
repz
cmp
cmp
mov
cwtl
lcall
pop
stc
data16
fists
dec
enter
push
push
add
inc
inc
leave
dec
dec
test
mov
xor
mov
pushf
int3
xor
inc
mov
sub
sbb
push
pushl
fisttpll
or
fisubrl
mov
adc
xchg
mov
in
jno
cmp
mov
fimuls
repnz
cmp
adc
mov
mov
fwait
std
jae
mov
nop
ja
cmp
and
imul
mov
push
test
push
movsl
into
test
fwait
xor
and
nop
scas
loop
pop
jmp
sub
stos
idiv
call
adc
mov
repnz
hlt
outsb
ds
cmp
ret
pop
push
imul
jb
xor
gs
sbb
push
lcall
and
or
outsl
sub
mov
out
mov
xor
mov
adc
cwtl
inc
mov
lods
enter
sub
fs
pop
mov
addr16
sub
insl
ffree
inc
fucomp
inc
testb
jb
mov
sub
inc
imul
mov
and
pop
lret
lret
rol
mov
mov
stos
push
insb
mov
pushf
int
cli
mov
lock
xchg
xlat
sahf
stc
cmp
lahf
push
outsl
adc
pop
outsb
mov
cmp
movsb
sub
jmp
add
fwait
mov
mov
aas
xchg
add
int3
pop
movsl
mov
decl
push
jp
insb
jg
movsl
add
mov
and
call
pop
enter
fldz
test
ljmp
xchg
and
sub
dec
jecxz
inc
roll
orb
xor
mov
mov
decl
push
sahf
or
movsl
lds
repnz
jns
ja
xor
dec
add
fisubrs
cmp
push
or
movlps
adc
xchg
sub
mov
cmp
sbb
sub
cmp
sbb
insb
fmul
add
lods
dec
outsl
mov
lret
in
add
in
lods
jle
lret
pop
int3
and
ficomps
je
js
pop
inc
push
dec
xchg
push
jne
repnz
or
aaa
incl
push
pushf
cwtl
hlt
pop
inc
xlat
cmpsb
pop
in
inc
cs
inc
addl
jne
jmp
imul
adc
jle
and
adc
into
hlt
inc
std
das
lea
leave
subl
rorl
jecxz
push
cwtl
sbb
sub
stos
cmpsb
call
or
mov
push
scas
int3
ja
notb
or
es
sub
mov
outsb
call
stos
popf
js
cmp
and
xchg
xor
subb
push
insb
jle
js
sub
gs
xlat
push
jp
mov
scas
adc
jp
inc
cmp
add
shlb
mov
mov
call
push
jb
push
cmpsl
mov
loopne
lods
test
jne
dec
mov
in
cltd
popa
mov
test
pop
mov
xlat
jp
sub
cmp
pushf
dec
push
add
int3
scas
jl
lahf
xlat
enter
push
std
out
xor
das
mov
clc
lds
pop
mov
push
sub
adc
shlb
icebp
mov
les
pop
xor
jno
movsl
insl
mov
push
sbb
enter
loop
push
movsl
cmc
add
adcl
aas
pop
ds
mov
aaa
jmp
and
hlt
mov
push
add
clc
adc
out
mov
mov
cmpsb
out
inc
push
mov
addr16
in
stos
imul
ja
andl
add
testl
popf
mov
pop
scas
mov
mov
mov
pop
andl
mov
cmpsb
enter
push
idivb
and
movsb
add
loop
ja
xor
and
icebp
lret
pop
and
sub
js
and
xchg
xchg
add
dec
adc
hlt
pop
out
lods
xchg
push
jno
jge
popf
clc
xor
jp
xchg
inc
fwait
test
pusha
xchg
hlt
mov
ffree
cmp
nop
dec
pop
jne
inc
mov
aas
cmp
cld
fs
test
leave
movsl
push
fiadds
scas
sub
sarb
cmpsb
negl
testl
outsl
std
push
stc
out
daa
xor
rcrb
jl
lock
pop
subb
roll
dec
sub
or
imul
jnp
cwtl
cmp
lock
push
xor
mov
mov
dec
daa
stos
fs
fs
incb
je
jg
dec
pop
loop
mov
daa
xorl
jge
out
enter
mov
sbb
and
jle
push
shlb
lods
mov
cmp
cmpsl
sbb
mov
xchg
or
cmp
ljmp
movsl
sbb
fxtract
dec
push
jnp
inc
sbb
cmp
addr16
sub
or
sub
inc
mov
sub
arpl
imul
add
mov
dec
cmpsb
sub
or
cmp
dec
scas
out
movl
adc
push
movsb
andl
push
adc
adc
scas
popf
jnp,pn
pop
aas
lods
fbstp
add
js
popa
adcl
xor
cld
ss
jne
fiadds
pop
xor
outsb
push
das
test
repz
lea
loope
faddp
rcl
icebp
sub
push
sub
jge
cmp
jmp
sbb
mov
jl
cmp
inc
dec
popf
xchg
jno
and
adc
mov
fstl
stos
and
xor
or
pusha
sbb
xor
mov
jo
out
rorb
js
aad
lea
add
cmovl
insb
xchg
push
sub
ja
ss
cmp
cmpsb
inc
adc
andl
pop
fisubl
mov
mov
xor
loope
into
dec
add
out
jge
lods
into
sarb
lahf
out
lock
aad
aad
or
jp
je
jne
pop
pop
or
mov
aaa
jbe
test
push
xchg
mov
repnz
mov
popa
sbb
in
sub
cmpsl
call
xorb
out
dec
dec
insl
dec
cli
lea
dec
adc
adc
lods
fisubl
stos
inc
movsw
jle
jmp
xchg
lahf
pop
cmp
jo
lea
push
fistps
push
std
dec
cmp
jge
push
cmp
push
cmpsb
test
and
xchg
loopne
in
xor
mov
outsb
mov
das
and
hlt
in
ds
sahf
outsl
dec
fildl
or
mov
div
sbb
add
or
pop
pushf
jae
inc
call
push
push
jg
push
push
hlt
cmp
daa
adc
sub
movsb
adc
insb
sub
test
mov
and
cmc
xor
pusha
push
cmp
pusha
jnp
mov
ficoms
and
fwait
jmp
stc
xchg
add
cltd
imul
dec
rorl
and
or
idivl
inc
add
inc
cli
cwtl
addl
imul
xchg
std
mov
lea
nop
ret
orb
lcall
add
jae
sub
pusha
int
ret
add
mov
adc
push
jb
mov
adc
cmpsb
adc
dec
push
mov
nop
push
movsl
movl
mov
mov
cmpsb
test
sarb
fistpl
inc
ret
pop
stos
call
pop
xchg
jbe
pop
pop
clc
popf
lahf
aas
push
xor
sti
sub
jle
mov
add
push
fdiv
sbb
loop
sub
jo
inc
imul
out
push
push
inc
or
jmp
pop
mov
data16
cmp
adc
xchg
mov
dec
orb
loope
xchg
sub
xchg
sbb
out
outsb
aaa
sbb
ja
repz
push
cmp
ficoms
mov
xchg
xchg
mov
testl
xchg
sbb
xlat
insl
sub
fsubrs
cmp
orb
mov
testb
lret
jae
stos
jb
lret
mov
loopne
fdivp
subb
repnz
mov
mov
and
push
inc
sahf
mov
push
xchg
push
add
jae
addr16
dec
fwait
cmp
divl
scas
add
out
lods
sbb
jae
mov
cs
add
mov
int3
push
das
mov
addr16
int3
lcall
mov
mov
adc
mov
push
sub
outsl
inc
mov
cmp
inc
jbe
sbb
jb
jge
pushf
ja
xor
fwait
inc
sub
mov
in
mov
sar
xchg
dec
or
pop
and
and
imul
pop
rorb
jmp
xor
inc
loopne
xor
mov
mov
lahf
mov
jbe
lret
jmp
insl
xchg
cli
popa
mov
cmpsb
out
bound
neg
xchg
cmp
icebp
and
aad
mov
out
fnsave
loop
ljmp
mov
gs
mov
in
sub
or
inc
jmp
xor
movsb
cmpsl
xor
lcall
lahf
mov
cmp
or
xchg
sub
pushl
jne
dec
pusha
in
adc
jnp
sbb
lret
orl
sbb
add
dec
jae
in
andb
pop
push
icebp
sbb
mov
inc
mov
xor
xor
cmc
outsl
lret
sub
mov
add
mov
mov
repz
jmp
pop
shlw
xorb
ljmp
mov
sbb
push
adc
ds
cwtl
pop
mov
stos
jge
jle
cli
cld
pop
stc
pop
xor
and
enter
pop
mov
add
mov
jbe
cmpsb
bound
ljmp
pusha
pop
mov
mov
loopne
jo
mov
stc
xor
fidivl
leave
ficompl
push
call
jb
xchg
xor
fsubl
adc
incl
test
push
shlb
outsb
jno
add
lods
push
or
pop
dec
jg
test
or
rorb
insl
sub
xchg
push
inc
cld
sahf
je
cmpsl
mov
test
jae
inc
insb
pop
loopne
xor
ret
iret
mov
pop
sub
loop
or
adc
jb
hlt
mov
clc
dec
into
out
jmp
in
push
fwait
jo
cli
enter
enter
movsl
cld
and
mov
mov
mov
mov
nop
fildl
mov
bound
or
call
test
mov
movsl
pusha
push
mov
insl
push
cmp
mov
inc
mov
mov
ret
mov
fimuls
ffree
ficompl
xor
xor
aam
jb
popf
data16
jne
mov
jg
inc
popf
shll
xchg
inc
mov
out
jecxz
dec
mov
pop
push
pop
push
jns
jno
pop
mov
push
cmc
insb
and
mov
or
fs
scas
call
das
pop
xchg
xor
insb
mov
fisttps
jb
push
ret
movl
lahf
lcall
mov
fstl
filds
pop
cs
call
and
xchg
xchg
fisttpl
test
lods
mov
fistl
mov
mov
rol
test
scas
dec
mov
mov
loope
imul
lcall
decl
fs
mov
pop
clc
ret
mov
loop
sbb
shll
js
mov
cltd
mov
push
and
jecxz
int3
dec
int
xchg
jge
jno
xchg
mov
outsb
iret
or
ljmp
data16
dec
ljmp
arpl
add
cld
lods
fidivrs
stos
sub
xchg
cld
fisubs
jo
lcall
add
bnd
xchg
enter
add
popf
and
pop
xchg
pop
inc
ret
lret
iret
cli
mov
aaa
jnp
cmpsl
push
sbb
psraw
outsl
cmpsl
xor
push
push
xor
lcall
lcall
pop
cli
mul
addr16
adc
xor
fcoml
stos
jge
popf
xchg
addr16
jle
popf
aaa
push
cli
cwtl
jmp
ss
lret
int
rolb
loop
xchg
loope
shll
lods
repnz
mov
add
scas
and
adc
xchg
rorl
jl
or
hlt
lock
pop
inc
shr
les
leave
sti
sbb
add
push
inc
aam
out
cmp
cmc
popf
mov
movsb
pop
jo
mov
xchg
int3
fs
sbb
or
aas
arpl
jecxz
lahf
adc
jmp
outsl
jmp
das
sub
fldcw
mov
scas
fisubrs
sub
repz
mov
inc
arpl
jae
inc
dec
jge
imul
xor
push
inc
mov
pop
xor
sahf
add
int
fbstp
pop
stos
mov
les
push
or
cmc
sbb
loopne
shl
or
mov
mull
cmp
loopne
andl
lcall
sti
adc
roll
addl
mov
cvtps2pd
outsl
dec
mov
mov
push
inc
ret
push
mov
arpl
faddp
addr16
fbld
ljmp
push
ret
xchg
mov
jg
ljmp
sbb
imul
fdivrp
push
or
sbb
movsl
push
push
push
jb
adc
xchg
dec
and
movsb
or
jo
adc
ja
push
add
out
sub
cmpl
cmp
pop
je
clc
test
mov
mov
mov
jecxz
cwtl
fmull
shrb
dec
mov
mov
into
nop
aaa
test
es
pop
lock
sbb
out
out
aas
dec
idiv
cmpsl
adc
inc
pop
and
test
xor
jb
sbb
jmp
inc
sbb
jnp
cli
mov
mov
aam
sbb
ljmp
ja
popa
add
push
inc
addb
sub
jb
rol
movsb
lret
or
ss
pop
jle
inc
test
sub
es
mov
lods
fst
aaa
fdivl
dec
fs
xor
inc
dec
shl
fdivr
pushl
xchg
push
mov
aas
mov
ds
sub
push
aaa
mul
pop
das
pop
xorl
gs
inc
pop
sbb
cmp
je
addl
decl
dec
push
adc
jo
pop
jmp
sbb
divb
pop
fld1
sbb
sbb
imul
adc
lcall
push
xchg
xchg
popf
pushf
inc
xchg
popa
jno
sbb
inc
test
iret
sbb
dec
or
lds
movsb
add
das
or
push
push
jnp
add
mov
daa
xchg
adc
in
or
and
ret
subl
push
sti
xchg
imul
or
pusha
scas
push
adc
mov
sbb
mov
cmp
imul
cmp
lret
push
pop
cli
adc
lods
mov
jae
or
mov
insb
mov
pushf
leave
int
or
jl
pop
and
mov
jg
testl
aaa
outsb
int
aad
sub
hlt
and
mov
mov
and
leave
add
cmc
loopne
cmpsl
add
sti
inc
or
repz
push
loop
sub
pop
arpl
mov
add
in
and
push
jnp
cltd
cmp
mov
jns
xchg
jmp
inc
mov
or
xchg
xor
adc
xlat
dec
jb
and
xor
mov
mov
loope
repz
jb
aaa
popf
mov
sbb
jns
or
adc
pop
mov
jo
sub
std
cmpl
fnsave
push
test
inc
dec
popf
xor
in
lahf
and
out
ja
mov
lods
and
lcall
test
adc
add
aas
mov
adc
movzwl
xor
add
dec
xor
push
add
lret
dec
daa
lods
mov
stos
mov
stc
scas
mov
out
sbb
push
loope
mov
fnsave
ljmp
add
rorl
sbb
pop
xchg
and
ret
inc
push
xor
loopne
push
mov
data16
inc
lods
mov
pop
aam
inc
sub
int3
cltd
fstpt
pop
or
aam
sbb
adc
push
in
inc
in
mov
cmp
add
add
adc
dec
ret
jnp
cwtl
test
dec
out
dec
inc
in
aam
in
rcll
das
pop
jle
rcrl
cmpsl
mov
cwtl
scas
add
ficoms
fadds
aas
fildl
leave
and
xchg
leave
fstl
loope
dec
fstpl
inc
aaa
pop
xchg
notl
js
mov
lds
rcrb
rcrl
int3
lret
hlt
jg
imul
pop
js
lahf
add
addb
sub
test
pop
or
sub
mov
fmul
or
shll
int3
pushf
arpl
jbe
jbe
cmp
xor
lds
push
adc
shlb
push
les
scas
shlb
imull
repz
xchg
icebp
stos
out
jl
add
sti
clc
ljmp
pop
xor
xchg
popa
sub
enterw
out
jbe
cmp
andb
adc
jmp
mov
push
lahf
lods
jge
popa
and
lret
das
pop
jae
push
sub
popl
xchg
popa
scas
jg
mov
pop
mov
test
and
popa
pop
sbbb
lds
cmp
bound
dec
cmp
mov
fists
add
or
xchg
jns
mov
or
scas
dec
repz
inc
xor
sub
cmp
test
add
int
xchg
lret
popa
out
addb
int3
xor
or
enter
jbe
mov
insl
or
mov
add
sbb
jbe
imul
adc
int3
pop
test
or
cwtl
ret
push
sbb
xor
mov
inc
lea
push
cltd
mov
dec
or
jecxz
jle
cwtl
les
sti
loope
sahf
roll
cmpsb
out
in
add
push
push
fcmovnb
pop
out
adc
jne
insl
push
sbb
lret
dec
inc
xchg
mov
mov
ss
orl
jge
dec
jmp
push
and
popa
fs
mov
dec
mov
inc
fs
popl
movsb
cmp
mov
pushf
orb
shlb
push
cmp
push
jb
xchg
cmpsb
ds
push
jecxz
jg
and
jo
or
loopne
arpl
cmpsb
dec
or
mov
sbb
imul
jns
adc
cmp
inc
mov
xchg
mov
into
mov
out
mov
add
mov
and
dec
data16
jo
adc
push
dec
fimull
inc
add
sar
scas
add
pop
mov
mov
aaa
cmp
cli
sbb
inc
lcall
dec
cwtl
or
fistpll
or
sbb
in
pop
ret
int
mov
imul
pop
sahf
pusha
and
push
fdiv
sti
jns
xor
mov
jae
mov
nop
adc
adcl
fisubs
divl
fbld
xchg
test
nop
xor
push
push
add
pop
xchg
fdivrl
push
out
cwtl
out
push
sti
mov
hlt
and
fs
xor
and
pop
icebp
sub
sti
les
sbb
test
jae
movsb
nop
push
sub
mov
loope
test
ret
push
in
lods
and
repnz
pop
hlt
jbe
repz
outsl
mov
into
mov
jg
xchg
inc
pusha
or
sub
nop
addr16
sarl
out
imul
mov
lret
mov
or
mov
dec
rorb
je
inc
imul
xchg
add
clc
cmpsb
shlb
and
xchg
xchg
mov
cmp
rolb
arpl
xchg
jb
adc
or
sbb
std
sbb
dec
stc
mov
push
mov
movsb
mov
adc
pop
lods
jmp
jge
sbb
out
sub
mov
addr16
pop
insl
adc
or
cmp
cmp
enter
jne,pt
into
lret
jecxz
or
xor
pop
mov
iret
ja
push
xchg
sahf
out
xlat
sbb
mov
lock
cmp
cld
inc
sti
or
lret
les
mov
inc
adc
enter
push
scas
es
jne
mov
xor
and
in
adc
inc
mov
jno
inc
jge
test
jp
push
mov
or
jl
dec
aas
cmp
rorl
dec
dec
jge
into
push
adc
arpl
adc
xchg
loop
nop
sbb
sarb
test
jge
push
in
aam
xor
jl
xor
jmp
push
je
adc
std
cmp
mov
stos
enter
lahf
cmpsl
ja
mov
pop
mov
cmp
sub
lea
nop
pop
add
test
shlb
cmp
inc
sbb
enter
test
sub
popa
stc
xchg
enter
loop
push
push
rcrb
jmp
dec
jmp
clc
dec
jo
dec
outsl
movsl
icebp
jnp
ds
call
stc
in
test
dec
popa
cmpsb
mov
sti
mov
cwtl
sbb
loope
movsl
sbb
xchg
aam
xchg
test
jge
test
and
sub
out
cmp
dec
aas
add
ret
mov
push
test
mov
jl
pop
jge
add
stos
adc
clc
and
push
mov
aad
sti
jge
imul
pop
shlb
dec
push
jp
or
les
mov
or
pusha
jecxz
mov
outsb
adc
pop
cltd
movl
mov
jae
lret
call
cmpsl
jae
mov
mov
pop
cltd
iret
xor
dec
sti
mov
and
aam
mov
mov
xlat
and
adc
pop
shrb
pop
mov
mov
imul
dec
lds
ljmp
mov
push
or
les
or
push
cld
std
int3
sub
add
push
test
xor
and
sbb
stos
or
lock
insl
dec
sti
in
or
push
aad
popf
xchg
jbe
lret
idivb
mov
xlat
inc
jae
shll
lods
adc
shlb
cmp
sbb
mov
fsubs
outsl
lahf
out
and
xlat
mov
sbb
das
out
pop
lret
xor
sbb
inc
cmp
cwtl
or
aad
push
aaa
jecxz
and
and
lock
jmp
sub
addr16
push
test
sub
std
pop
cmp
mov
mov
sub
cmpsb
out
lret
daa
and
xor
sbb
pop
shrb
js
test
test
test
jle
cmp
test
fnstcw
jo
fs
xchg
adc
push
and
cli
cmpsl
test
ljmp
jl
mov
jo
and
in
mov
adc
xor
rclb
mov
or
push
sbb
icebp
add
add
popf
dec
nop
lock
and
cmpsb
pop
sbb
inc
inc
test
int
xchg
jecxz
popf
lret
das
rcl
cmp
or
or
adc
arpl
iret
cmpsb
adc
addr16
sub
and
cmp
insl
fnstenv
xchg
dec
shll
add
jbe
ficomps
js
sub
fstpt
pop
cld
push
and
mov
addr16
xchg
pop
fistps
dec
or
icebp
pop
mov
mov
or
jecxz
pop
cmpb
mov
push
add
call
jp
js
adc
add
lret
push
test
shll
dec
sbb
fcomps
ljmp
scas
sbb
jle
xor
repz
push
mov
imul
jbe
add
aam
movsl
mov
xchg
popa
inc
aad
sbb
stos
xor
and
call
inc
adc
jb
pop
mov
and
xchg
xchg
in
push
pop
movsl
insl
sub
adc
les
xlat
sub
adc
in
mov
imul
repz
pop
gs
adc
stos
push
pop
popf
fs
sbb
fildl
lcall
ror
push
es
jg
out
pop
mov
adc
adc
mov
cmp
movsl
add
jmp
sbb
jae
cmpsl
lock
rcll
xchg
fs
mov
adc
ds
icebp
jp
not
cmp
push
or
sbb
xchg
or
dec
push
inc
xorb
adc
and
pop
mov
jecxz
mov
loopne
add
xchg
mov
push
sbb
jns
hlt
lret
jg
mov
jb
les
pop
mov
call
aaa
dec
sub
in
std
scas
movsl
xlat
cltd
xchg
or
inc
mov
inc
and
sub
pop
mov
and
mov
jge
jo
sbb
std
sub
in
mov
mov
mov
movsb
icebp
andl
mov
push
dec
jns
sti
xor
iret
imul
jecxz
sub
cmp
mov
sub
out
repnz
outsb
lcall
nop
stos
xchg
fistpl
push
pop
dec
movsl
sub
out
xor
addl
cmp
lret
dec
xchg
leave
mov
ret
pop
lret
mov
push
cmp
push
aaa
jno
in
gs
xchg
inc
mov
pop
outsl
inc
movsb
mov
add
scas
ja
sbb
pop
jae
lods
pop
stos
mov
mov
mov
stos
sbb
adc
xchg
sub
pop
xchg
mov
fmul
and
iret
add
out
loop
jp
enter
cmc
xor
or
push
cli
sub
aad
cmp
push
cmp
sub
cmp
dec
push
pop
test
lret
subb
mov
mov
lods
push
adc
loopew
pop
aad
in
xchg
loop
cmp
fxch
inc
mov
mov
xchg
and
cmpsl
dec
pop
les
stos
xchg
clc
add
lods
mov
dec
enter
xor
idivb
mov
cmpsl
fcmovu
cld
sub
push
or
xchg
push
adc
repz
sub
iret
lahf
cmp
push
inc
jg
push
and
movsb
hlt
inc
loope
jecxz
dec
jmp
ret
fldt
jo
pop
out
sbb
dec
jae
outsl
adc
or
or
cmp
push
jmp
pop
add
gs
mov
das
clc
and
cmp
mov
dec
test
inc
xor
loop
and
cmp
cs
sbb
fdivs
inc
jmp
aas
xor
ljmp
inc
rcrb
sub
jl
push
mov
sbb
leave
inc
test
into
inc
mov
mov
aam
cltd
dec
cmp
cmpsl
pusha
and
cltd
cli
mov
jle
mov
divl
out
cltd
mov
sub
lds
aaa
cmpsl
ret
test
mulb
jb
lea
xor
or
mov
shll
add
lahf
cmp
mov
in
push
movsb
jl,pn
xor
adcl
ja
int
jo
loopne
jl
and
dec
das
and
push
mov
iret
add
pusha
cmp
sub
xchg
sarb
cmp
xor
add
mov
dec
hlt
dec
add
mov
xchg
nop
call
cltd
sub
fisubrl
xchg
add
rclb
or
jmp
ret
out
push
mov
int3
add
dec
mov
pushf
jne
call
mov
out
pusha
push
andb
sets
jl
dec
fldcw
jl
in
cmp
popa
fsub
mov
gs
vpaddusb
sub
pop
cltd
jmp
adc
sbb
out
xchg
shlb
push
xor
je
adc
in
subl
loop
out
xchg
ret
mov
xchg
aad
push
gs
mov
stc
testb
push
pushf
xchg
cmp
push
push
ds
shll
pop
out
push
addr16
adc
aam
and
ljmp
or
jb
jl
rol
jns
gs
xchg
mull
les
lods
inc
jno
mov
sbb
lods
test
fisubrs
not
daa
xchg
das
xor
and
sbb
xor
jle
mov
inc
iret
mov
sarl
cli
gs
adc
xor
test
loope
fistps
dec
pop
pop
adc
jbe
mov
incl
xchg
cmp
stc
pop
sub
shll
pusha
xor
lea
scas
sub
dec
cmp
repnz
pop
push
lcall
jbe
cmp
into
push
pop
mov
mov
leave
fdivl
adc
repz
xchg
aas
lock
xchg
mov
xchg
fldcw
fsts
jle
mov
ds
and
pop
insl
cli
jecxz
mov
dec
sub
sbb
or
sub
in
inc
pop
jb
xlat
cld
roll
pop
adc
push
sahf
mov
push
jae
dec
add
mov
nop
mov
mov
xchg
sbb
jle
cld
xchg
repnz
ljmp
shlb
xor
filds
fildl
jne
xchg
int
push
mov
pop
push
sbb
jnp
push
mov
xor
repnz
aad
xor
sub
jnp
add
cmp
push
sbbl
xor
nop
roll
xchg
sbb
scas
es
lret
or
insl
pushf
aad
mov
push
mov
mov
jecxz
or
inc
inc
sub
bound
call
stos
xlat
xchg
pushf
sbb
rcrl
pop
or
enter
fsubl
punpcklbw
sub
vmovq
movsb
jle
test
rcrb
jecxz
inc
idivb
adc
test
and
xor
pop
pusha
lret
cwtl
jno
pop
hlt
das
idivl
xor
inc
cmp
shll
iret
push
xchg
cmpsl
or
sbb
sub
or
xor
nop
push
mov
ja
sub
mov
jecxz
fucomp
incb
and
sbb
jbe
push
ds
shl
xchg
jb
sub
mov
push
mov
xchg
push
pop
pop
pop
cmp
mov
faddp
xchg
addr16
xor
loope
push
push
sti
aam
mov
les
cld
jo
sbb
sbb
outsb
leave
inc
cmpsb
movl
push
shr
lret
jecxz
pusha
pop
mov
and
rcll
ds
repnz
fsubs
pop
or
pop
cmp
jmp
mov
push
xchg
mov
or
mov
xlat
lods
fildll
mov
in
sti
cli
out
xor
sub
insl
bound
add
lods
adc
jae
leave
mov
jl
mov
outsl
push
loopne
mov
sbb
adc
mov
or
ds
fbstp
xchg
cmp
jae
mov
cwtl
pop
dec
sbb
movsb
pop
scas
push
cwtl
mov
enter
popf
or
lret
adc
shll
xchg
movsl
pusha
push
in
sub
dec
and
shrb
push
add
popa
rolb
sbb
js
inc
push
mov
dec
lahf
or
stos
dec
pop
lret
clc
push
in
xor
adc
dec
andl
insl
sub
outsb
sbb
notb
mov
jecxz
jle
call
mov
mov
mov
sub
jp
cmp
andl
cmp
test
int
es
xchg
movsb
sbb
xchg
sbb
xor
inc
fs
inc
mov
xor
mov
jae
mov
cmpsl
add
and
ret
jge
mov
fidivs
fistpll
and
out
pop
subl
cmp
int3
ds
jecxz
hlt
xor
dec
or
in
fidivs
repz
ss
jmp
mov
test
push
push
clc
cmp
icebp
ljmp
mov
shlb
addr16
je
inc
inc
hlt
jmp
std
fistpl
test
arpl
pop
jnp
mov
ret
shrb
dec
xor
adc
xor
push
aad
and
cmp
imul
add
dec
in
in
enter
pop
push
sbb
inc
xlat
int3
adc
cli
shlb
fwait
or
lret
jecxz
imul
cmpps
stos
aad
dec
pushf
into
bound
mov
adc
mov
jnp
add
add
mov
std
into
lahf
inc
inc
and
mov
in
push
rolb
xchg
mov
jle
dec
sub
aaa
mov
push
out
push
enter
pop
aaa
cmp
cli
stos
mov
sbb
fisttps
addb
addps
popa
outsb
aaa
fisttps
xchg
mov
addb
inc
add
fidivrl
jl
fiaddl
sahf
in
inc
xchg
sahf
incb
xor
iret
mov
adc
fcoms
jo
cmp
shr
cmp
mov
dec
sarb
xchg
lock
enter
fsubs
mov
shlb
fwait
adc
pop
xchg
test
mov
jnp
in
jg
popf
push
or
mov
mov
movsb
notb
arpl
in
mov
movb
pop
and
push
aas
sub
loop
js
add
inc
mov
in
cld
jecxz
pop
loope
sub
and
sbb
js
and
or
push
cmp
sub
packssdw
mov
in
test
mov
roll
mov
rorl
jp
sbb
repz
lods
test
inc
adc
xchg
sub
and
adc
sbb
sub
xor
fs
popf
jp
arpl
test
mov
nop
mov
sub
mov
lods
jmp
in
gs
pop
push
adc
mov
cmp
or
add
sbbb
fsub
xor
lahf
inc
or
gs
imul
adc
repnz
repz
jae
sub
iret
mov
push
arpl
mov
call
jmp
ljmp
xor
shl
data16
inc
iret
inc
cmp
sarl
divl
lret
leave
sbb
fists
push
adc
push
daa
xor
mov
cmp
push
mov
sbb
divb
xchg
int
or
stos
mov
pusha
xchg
dec
insb
xchg
mov
jnp
roll
imul
jp
pop
push
cmp
inc
int
popa
mov
jne
fs
ljmp
rorl
ss
push
or
jne
pop
add
mov
or
push
and
jbe
mov
or
insl
fwait
pusha
push
inc
push
fs
jns
add
adc
and
mov
sahf
push
xor
imul
pusha
loopne
mov
xor
ds
add
les
jmp
gs
hlt
std
lahf
js
mov
sub
push
cli
repnz
xchg
subl
xor
mov
adc
clc
xor
dec
je
fadds
mov
fisubl
mov
adc
imulb
mov
push
add
push
xor
dec
mov
int
pop
or
testb
push
iret
stc
add
rcl
call
and
inc
das
adc
pusha
adc
aam
out
mov
mov
jmp
cmpl
xlat
cmpsb
ja
mov
je
xor
or
mov
pop
fdivrl
adc
mov
dec
aas
cmp
cmc
fildll
aad
pop
bound
icebp
aam
push
in
mov
adc
xor
repz
cld
ljmp
push
loopne
jecxz
add
cli
in
add
roll
cmp
pop
cli
dec
movsl
pop
repz
das
out
mov
test
test
push
adc
ficoms
adc
ja
jecxz
movsl
popa
jg
xor
cmc
xchg
test
lahf
or
rcr
mov
repnz
dec
ret
cmp
xor
sub
lods
mov
jns
outsl
lret
inc
sub
inc
fwait
loopne
popf
pusha
pop
xchg
jp
add
lret
or
clc
mov
xchg
imul
push
and
and
popf
dec
push
push
ds
lds
push
inc
jmp
enter
add
xchg
fsts
mov
jmp
pop
leave
mov
cmp
mov
roll
fidivrs
lret
xchg
mov
enter
xor
inc
push
je
mov
out
pushf
dec
bound
push
cmp
push
int3
out
fmulp
xor
outsb
lcall
sub
mov
outsb
int3
jb
fdivrp
dec
xchg
mov
inc
add
sbb
js
andb
xor
cmpsb
popf
or
adc
out
inc
popa
jb
std
mov
mov
imulb
lahf
xchg
add
mov
xor
rorb
ror
sbb
dec
sub
movsb
js
mov
dec
cmp
idivl
push
cmp
test
and
add
cmc
mov
movsl
dec
aad
out
nop
add
or
outsl
hlt
ljmp
sub
xchg
jb
pop
xchg
out
mov
imul
adc
cmc
ja
pop
and
outsl
mov
outsb
inc
pop
dec
mov
outsb
mov
pop
cltd
dec
xorb
dec
mov
jne
mov
test
sbb
mov
daa
mov
mov
hlt
xor
mov
fnstsw
mov
jp
add
inc
xchg
imul
or
into
pop
mov
gs
cs
push
popf
pushf
mov
loopne
sub
movsl
jno
arpl
push
mov
mov
stos
mov
outsb
shr
mov
out
jns
int3
or
sub
sbb
rcll
int
sti
mov
and
inc
test
mov
cli
jnp
loope
out
je
inc
adc
inc
mov
enter
cmp
aas
xchg
ret
dec
xchg
xchg
sub
popa
cltd
pavgb
outsb
subl
or
push
sarb
in
mov
stc
lahf
iret
das
sub
sar
mov
insb
popa
outsl
adcb
add
mov
push
fisttpll
jo
loop
adc
f2xm1
imul
and
out
icebp
iret
fstp
int3
add
and
aaa
push
jg
and
xlat
fsubs
popa
ret
aaa
les
jo
addl
push
enter
mov
pusha
leave
adc
lret
sbb
push
insl
push
insl
movsb
daa
cmc
pop
ror
push
sahf
in
pusha
pop
xlat
in
fxch
clc
cld
mov
in
add
testl
mov
pop
into
mov
jbe
sti
cmp
leave
aas
pop
lods
idiv
dec
mov
imul
add
jecxz
cs
xor
lahf
cmp
ficomps
test
mov
lret
push
ret
and
pop
xchg
test
ljmp
out
xor
mov
mov
sub
aam
leave
pop
pop
sub
int3
push
jns
inc
mov
andb
inc
clc
outsl
or
ror
ror
cmp
and
test
dec
pop
xor
incb
push
xor
mov
test
int3
push
adc
dec
jnp
ja
ljmp
adcl
rcrl
mov
pop
insl
and
push
stos
popa
pop
xor
pop
ss
mov
mov
shr
pop
adc
pushf
cmpsl
repnz
pop
cmp
ds
arpl
cmpsl
jmp
ficoml
xchg
dec
incb
popf
and
ficompl
jns
adc
mov
mov
lods
push
loope
js
and
loop
xchg
jp
xchg
mov
and
push
lds
cmp
enter
out
and
mov
pop
push
enter
push
dec
data16
sub
xchg
dec
push
mov
test
sub
test
das
nop
arpl
push
repnz
decb
add
sbb
jb
mov
test
mov
sub
sub
addr16
dec
jge
rorl
xor
aas
adc
stos
mov
push
mov
daa
mov
jmp
sar
xor
mov
jge
pop
sub
das
into
das
pushf
adc
push
outsb
jns
into
dec
mov
xor
jno
les
jge
sub
pop
loopne
sbb
in
clc
push
or
mov
ret
add
lea
lcall
pop
pusha
aad
mov
xchg
bswap
in
test
lea
test
push
stos
test
jp
cmp
or
bound
and
or
ja
insl
stos
nop
addr16
rorb
xchg
inc
mov
push
call
xchg
aas
out
int
lock
gs
testl
mov
sub
or
mov
stc
jmp
mov
add
test
push
fidivrl
sub
push
ret
arpl
outsl
leave
shrl
push
cmp
je
jo
cmpsl
sti
cld
iret
adcl
dec
xor
nop
push
mov
dec
in
mov
or
xor
jns
shrb
in
add
dec
lcall
xchg
adc
jo
fbld
inc
leave
enter
dec
sub
lcall
mov
mov
jg
sub
je
icebp
lret
mov
repnz
sub
adc
arpl
and
xor
jo
sub
pop
push
inc
test
mov
pop
std
lea
pop
and
add
lret
mov
sahf
xor
insl
jge
movsl
pop
aaa
xor
dec
shlb
dec
inc
adcb
pop
sbb
pop
sub
test
xchg
add
jns
repz
sub
pop
in
pop
mov
push
outsl
int3
incb
pop
sbbl
add
push
sub
dec
cs
pop
movsb
testb
xchg
jg
mov
gs
imul
lods
les
dec
rol
out
icebp
notl
int3
push
repz
jnp
bound
lock
mov
test
xchg
jo
push
xor
cmp
popa
repz
cs
add
dec
subl
insl
lods
insl
push
dec
fisttpl
into
mov
mov
sbb
or
outsl
add
jb
jo
jle
enter
roll
test
mov
lahf
sbb
incl
daa
cmp
xor
cwtl
dec
sub
lret
mov
push
push
cmp
and
jle
dec
inc
jns
sbb
hlt
cmc
pop
mov
andl
aas
cmp
sbb
xchg
jecxz
into
sbb
lret
xchg
std
mov
out
lock
xor
jp
fistps
fdivs
inc
iret
stos
mov
js
mov
nop
test
iret
ret
sahf
inc
repz
sub
lds
pop
dec
mov
jge
aad
mov
xor
inc
data16
int3
xor
pop
cmc
push
fnstcw
mov
dec
rcll
jle
fdivs
mov
mov
lods
nop
fsts
xchg
stos
sbb
cmp
clc
and
std
push
lea
pop
add
scas
adc
sub
dec
sahf
mov
pushf
je
cmp
cmc
push
mov
adc
mov
xchg
mov
in
fldcw
mov
neg
inc
jp
into
test
lock
out
leave
enter
sub
add
and
scas
pop
jo
scas
loope
cmp
mov
jg
addb
idivl
sti
push
jo
adc
mov
movsb
add
fwait
dec
pop
jecxz
push
pop
inc
pop
mov
cmp
in
dec
cli
jle
inc
add
mov
movsb
addb
adc
sbb
dec
sar
sub
sbb
jnp
stos
aas
xor
lret
cmp
shll
push
fdivp
inc
icebp
sub
mov
and
loope
cmc
xchg
iret
sbb
mov
cltd
ljmpw
lds
mov
jecxz
nop
cmp
xor
fdivrs
daa
mov
cltd
call
hlt
mov
xchg
mov
mov
cld
cmp
int
out
push
enterw
filds
sbb
fsub
leave
insl
mov
subl
ja
js
jle
loope
into
push
iret
inc
push
data16
mov
in
mov
inc
push
and
movsb
fucom
das
or
lods
lea
mov
jecxz
jmp
cmc
push
dec
inc
pop
inc
or
mov
notl
pop
idiv
scas
std
stc
aad
push
int3
fwait
jmp
and
nop
dec
pop
lea
pop
sbb
mov
int
jne
jl
fldcw
jp
loope
mov
hlt
mov
push
pushf
sub
ss
cltd
rcrb
data16
mov
inc
push
dec
jbe
aad
mov
mov
dec
push
sbb
pushf
mov
mov
jnp
jl
lock
in
cld
out
fimull
cmp
mov
stc
push
dec
call
sbb
imul
inc
jmp
dec
xor
loope
addr16
loope
loopne
push
pusha
dec
xchg
insb
js
popa
add
aam
in
popf
stos
dec
push
inc
add
jnp
sar
xchg
mov
pop
lock
insb
cmpl
inc
sub
inc
nop
mov
fwait
ljmp
pusha
sub
imul
in
dec
xor
dec
enter
xor
mov
mov
out
les
adc
lret
and
sbb
push
xchg
mov
aaa
cmp
xchg
pop
nop
push
adc
dec
add
iret
push
je
cmpsl
sarl
mov
xor
sbb
lret
xchg
xchg
cld
jmp
ljmp
das
xlat
aam
jne
popa
push
clc
push
call
xchg
push
xchg
xchg
ja
or
mov
je
push
xor
xor
mov
lahf
stc
push
cmp
out
ja
repz
outsl
jp
dec
fimuls
mov
fdivrp
push
rclb
imul
dec
scas
loop
xor
aam
and
mov
cmpsl
loope,pt
jge,pn
add
fdivrp
jae
cli
jo
pop
or
lds
movsl
inc
sbb
mov
sbb
dec
add
xor
add
divl
fbstp
push
push
stc
lods
sbb
cltd
mov
das
faddl
push
mov
insl
dec
outsb
xchg
fnstcw
pop
xchg
lret
nop
inc
js
push
jmp
mov
ljmp
shlb
pushf
inc
popf
mov
into
jno
dec
scas
outsb
pop
rorl
test
pop
sahf
and
sub
je
in
les
add
mov
std
test
cmp
mov
sar
mov
mov
xlat
sbb
adc
sbb
and
into
or
cmc
mov
movsl
stc
push
add
push
sub
and
leave
nopl
sbb
in
mov
idivl
fistpl
lret
pop
movsl
pop
js
jl
fs
mov
mov
or
cwtl
scas
insl
lcall
addr16
gs
pushf
pop
lea
icebp
cmp
cmc
incb
lret
movsb
frstor
aas
or
cs
fwait
mov
popf
add
xor
inc
arpl
pop
xchg
bswap
std
push
add
sbb
xor
jno
mov
mov
lahf
sahf
pop
dec
mov
lcall
mov
and
cmp
pop
push
or
inc
fidivrs
jbe
fstps
popl
xchg
ss
hlt
imul
lods
mov
sub
int3
mov
push
andl
stc
mov
sahf
xorb
addr16
icebp
inc
push
xchg
repnz
mov
fwait
ss
mov
jns
mov
sbb
das
add
mov
push
xchg
inc
jg
xor
inc
insb
hlt
push
orb
repnz
icebp
test
pop
scas
dec
cltd
movl
lods
jmp
dec
xor
int
xor
sbb
test
jne
sbb
cmp
mov
fs
mov
pop
add
pop
dec
lcall
mov
mov
add
xor
pop
pop
mov
cmp
or
shlb
aam
in
stc
cmc
lds
push
mov
repnz
mov
jge
les
mov
xchg
ds
aam
and
xchg
dec
sbb
push
mov
in
mov
shll
jp
inc
push
lods
xor
hlt
jl
and
addr16
jmp
xor
imul
shr
pop
and
mov
int3
stos
or
pop
fwait
cwtl
pop
fisubl
sub
adcb
icebp
cmpsl
and
subl
int3
mov
xchg
inc
add
int
sub
test
pop
inc
inc
divb
fnstenv
pop
or
fisttpll
jmp
leave
sbb
scas
or
addr16
movsl
mov
ljmp
into
push
jp
cmp
xor
shr
cld
or
stos
loopne
cwtl
mov
popf
cltd
ljmp
test
pop
add
adc
nop
pop
out
icebp
insb
mov
pop
jno
adc
sbbb
mov
aaa
mov
lds
mov
repnz
and
adc
loop
push
aaa
into
pop
pop
clc
insl
mov
push
xlat
test
xchg
cli
mov
fistpll
hlt
repnz
or
and
jl
fs
sub
iret
inc
cli
mov
mov
push
cs
push
pop
push
sbb
movsb
ret
xchg
lock
pop
movb
push
mov
dec
sarl
xchg
insl
ljmp
data16
and
pop
sahf
add
and
cmc
mov
imul
in
add
ficoms
sbb
or
movsb
push
data16
lods
and
sarb
push
pop
ret
and
gs
or
out
pop
xor
mov
stc
fistpl
sbb
push
mov
les
cmp
imul
lods
xor
xor
lods
enter
mov
data16
adc
pop
nop
cmp
mov
mov
pop
or
jg
cmc
add
add
loopne
stos
inc
fimuls
fcomi
push
xchg
mov
push
out
jne
icebp
mov
sarb
push
js
sarl
xor
lcall
sti
cmc
xor
add
cmp
neg
mov
fcomip
adc
and
xchg
lea
xor
outsb
mov
push
sub
dec
adc
test
repnz
hlt
scas
add
imul
call
lcall
fnstcw
xor
mov
add
int
movsb
jb
cmp
dec
sbb
add
inc
iret
fucomp
les
addr16
mov
orb
adc
push
repnz
dec
arpl
cltd
movsl
fists
mov
mov
es
push
test
jg
fcoml
dec
jae
cmpsb
in
sub
and
jno
push
mov
mov
or
inc
repz
sub
fdivr
int
insb
loope
test
pop
pop
in
xchg
in
jmp
xor
mov
ja
fwait
and
cmc
gs
sbb
lcall
push
fcmove
mov
shrb
inc
mov
adc
les
and
or
data16
mov
mov
cmpsb
mov
rorl
cmp
and
in
pop
rcll
ja
push
cs
stos
add
and
sbb
aam
xor
mov
adcb
jle
enter
lods
pop
sbb
arpl
push
jg
mov
cmc
test
lahf
mov
aad
pop
std
sahf
dec
fnstsw
out
dec
stos
arpl
rcr
sbb
call
in
mov
sub
jp
je
std
pop
mov
iret
lods
cmp
or
adc
dec
sub
dec
xgetbv
test
mov
inc
cld
rcrl
jecxz
cmpsb
xorl
test
jl
cmpsl
xchg
xchg
or
jnp
fistl
add
cs
mov
ds
xchg
and
fucomip
sub
dec
xlat
xchg
in
mov
mov
dec
add
outsb
subb
test
and
stos
mov
and
negb
outsb
dec
lret
mov
aad
cld
pop
hlt
dec
xor
adc
dec
iret
loopne
jp
push
int
jg
cmpsb
sbbb
dec
ret
loope
aad
sbb
pop
cmp
jmp
aam
xchg
scas
mov
testb
ret
outsl
cmp
xor
and
dec
sub
pop
mov
xor
sar
cmovg
and
add
in
std
push
adc
cmp
mov
jecxz
xor
sbb
mov
mov
pop
push
jb
sub
cmp
pop
stc
scas
push
pusha
inc
test
xchg
dec
sub
dec
pop
pop
fs
daa
je
cltd
jnp
pop
or
xchg
mov
push
mov
sub
mov
test
pop
or
xor
insl
sbb
int
xor
nop
pop
stos
sub
xor
iret
fs
call
cmp
bound
pop
mov
xchg
dec
mov
js
sub
xchg
mov
push
jno
push
inc
mov
push
jne
popf
mov
cwtl
repz
dec
fiaddl
mov
in
xchg
adc
sub
cmp
cs
insb
sbb
pop
in
mov
imul
hlt
pusha
icebp
mov
cmp
mov
xor
cmc
or
rolb
push
cmc
sbb
test
aad
stos
and
popa
gs
clc
mov
lahf
adc
sbb
fadds
jmp
mov
lcall
aam
sbb
xchg
shrl
fmul
mov
aaa
roll
or
stc
add
xor
xchg
in
loopne
out
xor
aad
sub
scas
cltd
insb
jb
mov
bound
scas
lock
sub
inc
dec
jl
sub
mov
xchg
daa
fwait
int3
mov
mov
push
icebp
mov
jae
xchg
inc
jecxz
jecxz
mov
sub
inc
test
push
out
arpl
les
and
cmp
sbb
jmp
add
mov
or
lods
fiadds
xchg
dec
cld
cmpsb
dec
pop
and
jnp
mov
add
jnp
leave
cmpsb
out
jp
mov
imul
pop
push
orl
data16
dec
movsl
jno
or
fbstp
stc
pop
aam
inc
lds
fwait
jg
sahf
sti
cmp
add
sub
iret
push
rdtsc
movsb
mov
pop
lods
stos
ret
es
sub
lret
cmpsl
xchg
dec
pop
push
xor
pop
in
lods
ja
add
sub
out
adc
push
cmp
rep
fisubl
push
jmp
cmc
out
mov
jmp
and
lods
xor
push
and
shll
mov
jno
int3
xor
mov
jg
aam
mov
mov
dec
mov
dec
aam
mov
sub
dec
fimuls
inc
mov
sub
hlt
nop
jnp
aaa
sbb
mov
jae
pop
mov
into
and
shrb
int
or
in
call
pusha
cmp
jns
inc
mov
and
movsl
dec
and
mov
jecxz
std
mov
push
or
ret
cwtl
mov
dec
imul
fmuls
dec
negb
ss
into
xchg
jg
stos
cmp
out
sub
mov
fcoms
jl
jle
pop
in
nop
lret
int
iret
inc
jnp
data16
pop
stc
in
movsb
mov
test
add
xchg
fwait
cmpsl
pushf
dec
mov
arpl
fwait
sahf
dec
mov
adc
clc
into
mov
ret
xchg
xchg
pop
cwtl
fs
scas
jmp
fsubrs
ret
mov
mov
mov
dec
or
pop
mov
popa
jae
fisubrl
fstpl
test
add
ja
mov
fwait
ljmp
pop
test
mov
jge
call
dec
mov
mov
pop
push
ja
test
and
cmp
mov
pop
jg
in
xchg
loop
js
push
cmpsb
jle,pn
ret
and
xchg
mov
jno
mov
adc
inc
jns
pop
pushf
pop
arpl
test
into
xchg
das
cld
push
cltd
push
mov
add
xor
adc
enter
movsl
ja
xorb
sti
mov
and
and
rclb
ljmp
test
pop
lock
loop
test
mov
pusha
and
je
mov
sub
sbbb
mov
mov
sti
jmp
dec
or
or
push
mov
lods
gs
jns
sbb
inc
stc
int
in
pop
adc
imul
xchg
mov
cmpl
andb
mov
or
dec
mov
lock
rorb
es
jns
cwtl
xor
jne
pusha
stc
and
ror
in
mov
cli
mov
inc
jnp
movsb
jno
mov
test
fldcw
dec
mov
insb
pop
test
jb
sbb
lar
movl
pop
add
popa
movsl
jp
or
cmp
dec
mov
cli
in
jb
into
js
mov
aaa
roll
add
mov
pop
mov
adc
aad
arpl
add
jb
mov
mov
cmp
jae
out
dec
and
out
data16
les
jns
shr
cltd
lods
lea
add
rorl
movsb
mulb
out
pusha
xor
cltd
sbb
xor
pop
dec
jae
pushf
cwtl
dec
das
mov
mov
das
jo
mov
test
or
jo
push
mov
mov
dec
xor
mov
inc
mov
dec
sbb
or
sub
mov
and
xor
jnp
push
push
shr
pop
imul
cmpsl
repz
jno
mov
sar
mov
adc
pusha
add
jne
mov
insb
cmpsl
mov
jmp
lret
jno
dec
or
cmp
out
leave
jno
pop
jp
dec
outsb
out
repnz
push
stos
into
frstor
lret
js
xchg
or
adcl
adc
out
xchg
mov
shlb
mov
scas
lock
icebp
push
cmp
sbb
sbb
jnp
iret
pop
sub
cmc
xor
jo
sub
lods
jecxz
mov
pop
jbe
mov
lds
add
xchg
cmp
insb
jne
cmc
jb
stc
sti
xor
roll
daa
andl
inc
cli
push
pop
and
push
fiaddl
pop
push
pop
xchg
sub
sub
fisubrl
jne
sbb
stc
xchg
sub
test
cltd
aas
fisubrl
cmp
mov
xchg
gs
popa
out
flds
dec
leave
xchg
aas
mov
es
push
in
movsl
jne
das
xor
int
adc
mov
decl
xor
push
adc
cmc
iret
push
mov
or
xor
lock
insl
lods
add
mov
sub
sbb
je
and
pop
lret
xchg
pop
inc
mov
or
outsl
mov
jmp
stc
lock
mov
adc
sub
xor
or
adc
lods
sub
jo
mov
sub
pushf
mov
mov
test
out
arpl
jmp
jae
scas
fcmovnbe
lds
outsb
ljmp
mov
and
jmp
arpl
lcall
push
popa
adc
or
fimull
stc
jno
inc
jecxz
jbe
cmpsl
or
and
leave
insb
xchg
in
mov
xchg
and
jb
in
xor
pop
int
mov
ljmp
jno
xchg
jle
xchg
adc
dec
fcomp
push
push
movsb
xor
sahf
int
and
orl
bound
rcll
es
popa
or
imul
mov
sahf
mov
inc
add
push
cmp
dec
cmpsl
enter
xchg
lds
xor
mov
pop
lcall
minps
sub
lahf
bound
lds
xchg
mov
cmpsb
xchg
das
jl
pusha
out
lar
add
pop
outsb
mov
mov
sub
in
outsb
jae
nop
sar
out
jnp
ficompl
add
loope
sbb
mov
sub
fstpt
and
and
mov
incb
dec
mov
stos
jae
add
mov
xchg
jecxz
and
popf
sub
nop
lock
adc
lods
add
jmp
addr16
mov
xor
sbb
xchg
fstpt
adc
out
cltd
xor
gs
fistpll
int
scas
ja
mov
push
mov
cwtl
and
jmp
inc
shr
call
test
cmp
adc
or
xor
fisubrl
mov
pop
push
les
adc
das
xor
lahf
out
dec
decb
sub
loop
aas
fs
lcall
jecxz
and
adc
jne
sub
pop
mov
pop
mov
lods
ficomps
enter
stos
mov
add
sbbb
push
xor
dec
push
lods
aas
imul
test
cmpsb
mov
and
cmp
or
ret
inc
lret
imulb
or
adc
sub
mov
nop
push
push
arpl
mov
pavgb
adc
jle
push
adc
repnz
dec
sbb
je
rolb
dec
cwtl
pop
cmpb
dec
xchg
xor
adc
xchg
imul
fisttps
popl
jecxz
push
clc
es
mov
add
rcl
cmp
adc
mov
mov
mov
dec
xor
rorl
xor
cmpsb
mov
cmp
mov
insb
mov
ret
or
jns
adc
jg
push
stc
mov
sbb
cmp
sub
dec
sbb
and
fstps
out
into
outsb
jns
xchg
adc
outsl
ret
cmp
cli
sbb
movsb
push
push
dec
je
clc
push
xchg
cmp
mul
ljmp
stos
ret
cmp
cmp
scas
notl
mov
data16
dec
inc
filds
loope
cmpsb
cmp
mov
int
inc
or
cli
divb
out
jae
mov
decl
jae
push
add
pusha
int
xor
leave
pop
clc
mov
jl
xor
push
push
mov
mov
ss
cmp
stc
xchg
repz
inc
cmp
mov
aam
pop
test
ret
pusha
jl
shlb
ret
mov
mov
xor
inc
mov
fwait
dec
movsb
lods
and
sbb
test
or
adc
sbbl
jmp
sub
outsl
sub
and
test
cmp
mov
mov
enter
dec
pop
ret
pop
mov
repnz
push
and
jno
fmulp
lcall
pushw
mov
add
nop
fisttps
mov
mov
mov
add
xor
cmp
cmp
clc
xor
out
xchg
sbb
inc
add
inc
pop
push
inc
sub
test
imul
mov
xor
lahf
push
jb
lret
dec
cmp
sbb
sbb
das
mov
nop
and
push
adcb
push
in
and
xlat
add
sbb
loopne
es
dec
imul
jnp
adc
inc
jbe
dec
xchg
das
inc
push
mov
test
xchg
xor
mov
push
scas
in
aaa
xor
int3
mov
and
mov
test
lahf
daa
push
push
jne
mulb
sub
test
cwtl
es
out
not
outsl
or
pop
lds
add
sbb
push
sub
mov
xchg
jns
addps
pop
pop
les
jmp
inc
and
enter
xor
mov
and
out
xor
imul
inc
fs
adc
and
mov
mov
mov
ss
xchg
dec
data16
push
jo
iret
test
mov
faddp
sbb
xchg
arpl
add
jne
pop
ud2
xchg
pop
aad
insl
and
fisubrl
lods
out
xchg
sahf
aad
xchg
rcrb
clc
push
and
xchg
ds
js
push
pop
jno
push
je
roll
repz
and
stos
mov
clc
inc
cli
insb
out
mov
cmp
jg
cs
insb
sbb
lret
sahf
test
mov
ljmp
sahf
mov
sub
rorb
inc
in
in
lds
push
push
icebp
sbb
in
mov
mov
inc
sbb
sub
mov
adc
in
leave
fsubrs
mov
std
in
fwait
cmc
loopne
mov
lahf
push
push
xlat
jmp
and
add
insb
push
lcall
mov
test
pop
out
push
mov
gs
xchg
mov
xchg
imul
mov
out
lods
sti
dec
cli
negl
repnz
int3
in
adc
xor
mov
pop
mov
and
push
mov
xchg
lcall
jnp
mov
call
lcall
mov
andl
inc
jbe
cltd
aas
push
dec
movsb
push
bound
and
xor
sub
push
mov
in
int3
pusha
jp
and
int3
pop
les
in
mov
rcrb
scas
mov
ret
and
jbe
addl
hlt
mov
cltd
int3
mov
xor
sub
movsl
xchg
ja
and
cld
xchg
stc
and
sub
js
add
sar
repz
mov
push
icebp
dec
cmp
ss
adc
push
adc
stos
lea
test
xchg
je
aad
cmp
setae
xor
loop
cmc
push
movsb
mov
jle
das
leave
pop
push
mov
push
shlb
imul
lods
mov
mov
mov
fnsave
pusha
je
addl
lea
mov
ret
and
add
dec
jecxz
push
xor
cmp
scas
repz
add
inc
mov
test
xchg
leave
outsl
mov
add
jns
mov
lods
cmp
mov
sbb
xchg
mov
fs
aam
adc
cwtl
nop
cli
pop
push
lods
jg
fstl
mov
xor
out
fistl
mov
aam
ss
sbb
mov
sbbb
leave
mov
or
sbb
cmp
call
sub
add
out
sbb
pop
ja
js
ror
test
mov
dec
hlt
sbb
data16
jge
scas
popa
filds
addl
test
mov
enter
shrl
fnsave
pop
lock
lea
das
fs
int
aaa
jo
xor
ret
jb
rcll
outsb
lea
lret
inc
ret
jo
stos
pop
in
push
dec
xor
and
out
mov
xor
xlat
cmp
sahf
mov
mov
sbb
add
sbb
add
jno
mov
out
cmp
sbb
inc
int3
adc
mov
push
idivl
mov
mov
lods
mov
jae
and
xor
cli
inc
push
push
ljmp
and
outsl
xlat
sub
push
mov
mov
cmp
int
shll
jne
daa
cwtl
pop
outsb
lods
push
jle
jle
les
or
jne
xor
out
int3
out
dec
cmp
les
movsl
fildll
popa
movsl
inc
mov
scas
push
in
sahf
aas
xchg
push
inc
mov
sub
push
lcall
adc
scas
lock
xorb
mov
push
add
mov
mov
ja
lods
imul
sub
sub
lods
mov
push
insl
inc
loopne
or
mov
lods
add
cmp
push
icebp
lcall
das
push
mov
call
push
and
rcrb
stos
hlt
xchg
and
push
out
fsubrl
fs
jge
mov
negl
cmp
mov
int
mov
mov
mov
mov
mulb
mov
mov
push
sarb
inc
shll
cmc
or
pop
std
popf
xor
add
jnp
xchg
lea
push
dec
lea
xchg
jo
push
pop
leave
in
mov
repz
adc
xchg
or
jnp
std
cs
push
ret
mov
pusha
dec
or
jno
out
adc
jg
bound
mov
sti
mov
aaa
sbb
andl
or
std
and
jae
outsl
sbb
enter
add
pop
mov
dec
pop
jnp
fildl
xchg
xorb
xor
and
sub
dec
negl
lret
xchg
shrb
arpl
xor
mov
xor
call
and
push
lahf
mov
movsb
mov
pop
jnp
cmp
lods
pop
jg
pop
fildl
sub
lahf
rorl
mov
sti
xchg
mov
popf
insb
faddl
adc
mov
mul
adc
pop
mov
mov
add
pop
add
or
cli
scas
or
enter
stos
adc
stos
and
push
lock
mov
imul
into
mov
adc
fnstsw
adc
inc
jbe
jae
and
sub
mov
xchg
xlat
pop
sub
mov
dec
mov
inc
jnp
jbe
out
mov
mov
mov
inc
xchg
jge
inc
fstl
mov
lock
inc
in
loopne
adc
insl
inc
sub
mov
sarb
or
imul
iret
xor
lods
out
pop
aas
scas
sahf
push
xlat
cmpsl
push
inc
test
ret
ret
adc
add
mov
out
pusha
pop
inc
pop
out
add
push
jae
test
and
stc
push
push
stos
arpl
subl
xchg
es
sub
repz
push
push
mov
cmp
fucomip
fnstenv
sub
pop
scas
push
scas
repz
popf
pop
insl
or
lock
enter
push
add
pop
call
sbb
ljmp
iret
pop
or
pop
and
test
adc
jmp
xchg
loop
loopne
inc
leave
and
leave
fnstenv
cmp
outsb
jle
pop
scas
test
adc
sub
outsl
cmp
xor
aam
test
mov
stos
pop
mov
pop
loope
mov
inc
xchg
loop
shrl
out
cmc
xor
jno
ficoml
and
popl
sbb
dec
xor
repz
xchg
subl
adc
mov
popf
int3
inc
flds
rorb
add
ds
or
xchg
dec
gs
dec
xor
stc
pushf
adc
or
mov
jno
popa
rcrb
add
xor
inc
hlt
and
push
jecxz
pushl
sbb
lods
shrb
mov
and
aaa
cmp
pop
js
scas
ficoml
adc
and
inc
jbe
or
cmp
mov
mov
adc
pop
ljmp
mov
call
imul
and
cmp
divb
lret
pop
mov
inc
ret
out
or
stc
xchg
pop
pop
mov
sub
adc
je
sub
out
sub
cli
push
addps
push
xor
push
mov
lea
mov
mov
xchg
clc
add
in
aas
jne
xor
adc
cmp
cmc
sti
lea
push
lret
lret
mov
dec
cli
aas
lds
enter
xchg
jnp
hlt
loop
int3
add
cmp
icebp
and
pop
jg
in
mov
pop
push
fst
dec
fmuls
xchg
cmp
addr16
sub
jne
loopne
ret
inc
and
push
flds
mov
or
or
push
push
dec
aam
pop
or
ss
outsl
add
cli
add
xor
jge
cmc
sub
xchg
lds
push
mov
push
lock
cmp
inc
daa
dec
xchg
icebp
xor
cmp
mov
es
fistpl
lods
add
lods
xlat
add
dec
xchg
aad
mov
push
cmp
pop
outsl
dec
sbb
push
add
leave
push
push
inc
popf
les
popf
rorb
inc
mov
js
xchg
lret
xor
sti
sbb
call
in
pusha
mov
pop
push
sub
adc
cmpsb
mov
stos
mov
or
dec
or
push
mov
xor
lock
repnz
shll
ja
clc
lcall
sbb
inc
fdivrp
xor
aad
mov
or
scas
dec
stos
les
sbb
pop
jae
js
mov
dec
add
and
sbb
pop
mov
cmpsl
iret
push
xlat
xor
or
mov
add
cld
and
testl
shrl
xchg
mov
outsl
into
dec
test
shl
ficoml
stc
adc
stc
dec
xor
sbb
mov
mov
inc
mov
data16
fistpl
fdivl
repz
call
jbe
push
cmp
mov
or
inc
out
inc
fucomip
mov
mov
xor
int
shrb
push
fsubrs
gs
adc
xor
fdivrl
das
pop
outsl
insb
mov
mov
inc
xchg
or
jne
jae
int3
xor
xchg
mov
lds
test
lods
jmp
adc
jmp
scas
push
push
cld
addl
and
je
jb
callw
dec
repz
popf
mov
pop
push
xor
cld
fs
cmp
inc
pop
bound
test
mov
push
addr16
push
push
sub
loope
jbe
cmp
push
mov
dec
lods
push
fiaddl
fstps
xchg
mov
insl
cmp
inc
ret
push
jl
stc
mov
js
loope
test
outsb
test
je
repz
popa
lret
mov
cltd
fists
call
dec
and
jbe
movsl
enter
xchg
stos
in
mov
mov
lret
sbb
lock
pop
adc
and
jp
sub
pushl
sub
mov
rclb
xchg
loope
lds
in
call
push
test
mov
or
icebp
mov
sbb
insl
arpl
inc
ss
inc
imul
repnz
popf
sbb
repnz
mov
cs
and
cvtps2pd
call
jo
sub
xchg
mov
scas
jg
inc
loop
pop
lret
cmp
sub
pop
xor
or
je
fdiv
in
insb
pop
insb
push
jl
lret
jecxz
push
int
or
mov
daa
sub
sti
inc
lret
ja
scas
or
daa
lret
add
sub
mov
scas
mov
jp
movsb
cmp
or
add
and
add
jne
ljmp
dec
popf
mov
mov
jmp
add
clc
mov
bound
mov
insl
cmp
cmp
mov
mov
and
shlb
pushf
mov
mov
sbb
cmp
xlat
jl
mov
push
loop
jnp
test
cmp
mov
cs
cmp
cmove
cs
insb
icebp
orb
sbb
mov
mov
shl
in
inc
dec
sub
fildl
out
movsb
push
cltd
fwait
sub
jmp
scas
das
sub
lods
adc
lret
push
mov
jge
pop
lret
mov
repz
inc
imul
jecxz
cli
stc
jb
nop
fnstsw
dec
cltd
lahf
xor
adc
inc
adc
test
cmp
shrb
xchg
sar
jno
pushf
mov
adc
cmc
insl
inc
mov
es
ds
and
loop
ljmp
enter
and
xchg
inc
push
loopne
push
push
push
lock
xor
ficompl
rclb
jmp
outsb
jle
test
in
jg
push
es
mov
mov
leave
mov
pop
mov
sbb
push
out
iret
jp
outsl
cmp
xchg
insb
mov
dec
or
and
test
sub
movsl
lret
out
adc
lods
adc
sti
lea
cmpsb
fistps
and
out
pop
cmp
and
test
mov
pop
and
sub
nop
daa
xor
cltd
lcall
movsl
sub
addb
stc
ja
js
clc
inc
mov
test
cmp
arpl
fiadds
in
lcall
and
stos
fld
out
test
jno
jno
sbb
stos
and
fadds
into
mov
fsubrl
cmp
inc
outsl
pop
mov
pop
xchg
mov
inc
ret
or
mov
sub
and
mov
pop
insb
fnstcw
std
mov
sub
hlt
sub
sbb
aaa
add
mov
xor
out
stos
xchg
in
mov
mov
sbb
std
xor
test
inc
inc
jmp
fimull
mov
pop
pop
xor
xchg
xor
cmp
pop
fcoms
push
xchg
imul
pop
jo
mov
in
jl
incb
in
inc
icebp
lods
jmp
arpl
mov
test
push
push
push
or
mov
pop
movsl
cwtl
stos
arpl
and
test
sub
fcmovnbe
dec
mov
test
add
mull
popf
nop
fs
xor
aam
lcall
mov
xchg
arpl
js
ds
cmp
mov
xlat
dec
add
inc
enter
cmpsl
lea
pop
ret
repnz
push
imul
xchg
scas
adc
pop
pushf
jno
rcrb
loop
push
dec
into
clc
cli
mov
cld
cmp
inc
jnp
jmp
outsb
subb
scas
mov
es
xchg
vmulpd
jmp
or
sbb
cs
jecxz
popf
inc
or
ficoml
mov
and
adc
scas
jns
ljmp
cmp
movsl
cmp
jmp
lret
xchg
nop
mov
lret
popf
pop
clc
sbb
dec
cmp
push
mov
stos
cwtl
adc
pop
add
pop
xor
jge
aaa
xchg
adcl
popf
sub
push
mov
ret
popf
push
push
dec
cli
loopne
int
pop
and
push
repz
jp
lahf
mov
mov
enter
adc
test
out
xor
or
insl
dec
inc
xchg
lcall
insb
dec
nop
popf
scas
jo
adcl
pop
cmp
jg
shlb
outsb
mov
lds
adc
inc
rcll
jno
out
xor
add
adc
pop
in
pusha
lahf
sbb
pop
pop
stos
xchg
mov
in
iret
jae
push
ror
xchg
adc
cmp
mov
popa
ja
sbb
hlt
sub
push
cmp
or
mov
or
inc
or
andl
lea
rep
sbb
cmpl
decl
push
sub
or
pop
arpl
ljmp
lret
inc
out
mov
mov
push
popf
mov
xchg
sbb
repnz
jg
xor
stos
movsl
dec
xchg
pop
xchg
bound
icebp
push
xor
pop
mov
sbb
lock
xor
mull
test
mov
pop
lret
xchg
jno
test
sub
or
push
jl
add
dec
jo
jecxz
call
sub
roll
dec
cmp
dec
lahf
xchg
ss
adc
jmp
cmp
xchg
stos
dec
lea
xchg
sbb
push
out
es
jbe
cmp
sarb
push
cmp
or
in
xor
nop
bound
xchg
pop
stc
adc
inc
xchg
adc
pop
dec
xchg
lcall
lret
daa
xchg
pop
xchg
jmp
in
jnp
inc
cmpsb
dec
cld
sahf
push
sbb
and
pop
push
int3
les
lods
and
push
mov
cmp
jge
mov
and
test
out
rolb
fld
iret
add
dec
xchg
mov
movsb
pusha
subl
jno
and
and
mov
les
ret
xor
inc
ds
inc
sbb
lods
test
mov
or
sbb
in
aam
cmp
or
mov
dec
or
outsl
xchg
lcall
in
enter
or
das
xor
adc
cmp
mov
cmp
fs
jne
xor
insl
xchg
mov
cmp
ds
test
xchg
je
pop
or
jecxz
jg
inc
pushf
jl
pop
daa
fs
mov
sbb
fsubl
or
inc
aam
xchg
loopne
pop
mov
mov
sub
adc
jmp
inc
mov
ljmp
pop
popa
lret
dec
push
and
mov
push
ljmp
out
dec
sahf
pop
leave
mov
or
ret
cmc
clc
clc
mov
xor
jl
dec
out
mov
push
in
push
loop
jp
add
dec
mov
pop
push
or
je
test
dec
xchg
fldcw
in
or
lret
sub
jecxz
insb
xor
std
xor
ss
out
scas
les
jbe
mov
xor
push
sbb
or
clc
cvtdq2ps
pop
jae
je
xchg
hlt
lods
call
push
test
mov
push
push
nop
inc
xchg
mov
push
fsubr
and
pop
jle
xchg
pushf
mov
fwait
push
xchg
dec
jo
icebp
and
insb
aam
add
jnp
pushw
sar
add
aas
mov
or
ret
mov
rcrl
push
imul
dec
mov
pushf
andb
testl
test
sti
insb
dec
push
xor
call
mov
sbb
ljmp
test
pop
mov
subl
bound
sub
mov
cs
or
insl
mov
jb
or
xchg
jno
and
xchg
fildll
insb
fistl
jne
shl
mov
sahf
outsl
dec
mov
aad
xchg
addb
into
pop
cli
lods
inc
ficomps
arpl
pop
cmpsl
leave
fisubs
pusha
push
xor
fcmovnu
jl
lods
jnp
fcoms
aam
sbb
jl
cli
arpl
add
inc
push
stc
xchg
lcall
into
das
jbe
sahf
loopne
es
fnstenv
jb
call
lcall
orl
push
dec
test
jmp
pxor
cld
lret
repnz
movl
stos
test
and
push
enter
out
cs
jns
in
push
mov
iret
fisttpl
in
xchg
popf
push
push
dec
dec
out
jnp
jle
fisubs
sub
subb
out
sbb
inc
unpcklps
inc
or
fcoml
pop
push
adc
dec
and
outsl
mov
xchg
addr16
sar
lea
sbb
shll
stc
mov
jle
ss
data16
jmp
lods
mov
lret
jnp
lods
xchg
xchg
xchg
rcrb
add
dec
add
inc
cmp
adc
fwait
add
sarl
movsl
push
push
add
mov
and
sub
cmp
pop
jmp
or
dec
dec
mov
jmp
mov
lea
js
jl
repz
imul
xchg
mov
inc
lahf
sub
out
sbb
aam
loope
out
xchg
sub
shrl
shl
jnp
jns
or
ror
push
call
sub
insl
push
mov
icebp
stc
lea
or
inc
lret
insb
sar
nop
jl
cmpsl
sub
sub
lea
dec
sub
xchg
sub
lock
jns
xor
xor
jo
xchg
js
clc
mov
dec
mov
popa
sub
in
jno
xor
insl
ret
fsts
roll
mov
inc
inc
pop
dec
xor
mov
arpl
dec
scas
sbb
shlb
lahf
jo
jne
jnp
pop
dec
test
pop
xchg
ret
pop
cld
jle
mov
mov
imul
lret
sub
faddl
pop
dec
and
cwtl
jg
inc
inc
scas
repnz
xor
dec
dec
js
rolb
les
jle
lahf
stc
cwtl
dec
pop
rcl
out
xchg
dec
inc
push
or
sti
inc
and
cmc
and
pop
push
inc
sub
cli
daa
jns
int
out
fnstcw
or
push
dec
xchg
push
std
hlt
jb
adc
jl
mov
data16
inc
adc
xor
and
das
push
outsl
sbb
xor
popa
dec
shlb
dec
adc
push
sub
loope
mov
adc
and
dec
sbb
and
stos
shlb
insb
dec
push
ss
push
lods
nop
sub
mov
mov
mov
sbb
pop
or
insl
lds
loop
imul
adc
inc
cmpsb
out
sti
int3
fisubrs
andl
push
ret
jge
aas
popa
lock
rol
add
inc
fidivl
mov
mov
call
out
in
jno
push
icebp
or
inc
cwtl
inc
mov
ljmp
rclb
test
fucom
mov
hlt
sbb
cmp
sub
or
lods
push
sub
hlt
mov
fdivp
mov
sub
mov
xchg
nop
ljmp
pop
or
push
cmp
and
dec
sub
stc
adc
jecxz
and
mov
test
xchg
stos
xchg
adc
jnp
jle
rcll
lods
outsl
rorb
dec
addl
mov
sbb
jbe
jno
mov
cmpb
pop
loopne
cli
or
fdivl
xchg
loopne
mov
adc
adc
daa
pop
mov
mov
pop
vphaddwq
mov
sub
sbb
mov
punpckldq
inc
das
in
outsl
lods
xchg
in
popf
cltd
mov
sbb
pop
sarl
fsubs
mov
xchg
xchg
stc
inc
xchg
into
xchg
pop
jmp
xchg
xchg
jns
sbbb
lret
xchg
jns
popf
shl
jbe
stos
mov
out
int
add
stos
pop
xchg
loopne
mov
iret
jp
in
and
pop
pop
pop
push
pushf
xchg
sub
fwait
leave
aam
jp
lods
je
mov
push
lods
mov
pusha
ret
pop
pop
adc
mov
jmp
imul
dec
lret
fisubrl
cmpsl
sti
inc
sbb
sahf
mov
jmp
dec
jae
out
xchg
inc
xor
insl
or
and
add
mov
cmpsl
jg
stc
and
mov
jbe
xlat
icebp
popf
mov
sbb
adc
addr16
mov
adc
lret
mov
adc
das
adc
incb
pop
bound
test
mov
inc
add
daa
dec
push
mov
in
xor
outsb
mov
test
cmc
xchg
mov
or
in
mov
negl
stos
lock
pop
nop
imulb
pop
addr16
ja
cli
stos
mov
push
rol
add
addr16
leave
into
jbe
cmp
jge
dec
imul
ss
fs
mov
add
inc
loope
cmp
mov
jno
int
mov
dec
pop
enter
iret
loopne
sbb
sbbl
cmp
adc
pop
sti
jl
sti
or
repnz
pop
cli
orl
mov
testl
div
lods
dec
xchg
jns
gs
in
or
lods
jg
inc
pop
cmp
fwait
mov
enter
xchg
cli
fcomip
js
xchg
cmp
ret
movsl
lds
icebp
jae
jno
or
push
push
shr
lds
pop
inc
insb
mov
inc
ja
leave
fsubrs
jg
cmpsb
repz
je
xchg
dec
stc
adc
sbb
mov
mov
add
lock
jmp
fimuls
shrb
ret
aad
aas
loopne
fidivs
clc
cli
mov
test
mov
sbb
jl
jl
sbb
out
out
and
push
das
mov
loopne
sti
adc
std
lds
dec
xor
les
sbb
jno
mov
mov
jge
hlt
jo
into
add
in
js
inc
ret
mov
sbb
sbb
mov
ret
and
add
push
leave
stos
push
je
jmp
add
add
xor
add
out
addr16
pop
pop
insl
sbb
sub
test
cld
fs
fnsave
int
mov
xor
add
or
push
jae
ret
adc
adc
cmpsb
test
repnz
push
mov
push
cmp
insl
je
pop
popa
orl
jo
fs
mov
xor
fdiv
lock
stos
cmp
fisttps
icebp
cli
inc
cmp
push
add
scas
loope
pushf
leave
inc
xor
negl
fstp
dec
scas
xchg
pusha
cld
sti
adc
fisubs
adc
sbb
ficoms
scas
cmpsb
sti
leave
fxch
sub
gs
stos
xchg
pop
lods
dec
clc
mov
xchg
lds
mov
hlt
dec
ficompl
fistpll
inc
loop
cwtl
add
lcall
adc
or
xchg
inc
add
in
mov
enter
shll
xchg
aas
jg
push
seto
cmp
and
loope
mov
inc
faddp
cmpsb
in
pop
cmp
add
mov
fs
mov
adc
mov
je
cld
mov
sub
and
mov
js
adc
xchg
subl
xor
xlat
mov
pop
push
imul
add
cltd
flds
je
je
in
mov
jno
in
or
mov
adc
enter
ljmp
popa
jecxz
dec
stos
and
pop
int
cld
inc
aas
mov
or
mov
or
ret
xlat
fistpll
push
push
and
pop
xchg
test
ret
mov
sub
xor
rolb
pop
mov
cmp
out
daa
pop
seto
mov
push
lods
lret
xchg
mov
cltd
dec
or
sbb
cli
cltd
adc
jp
out
ljmp
jb
jnp
addr16
into
gs
popaw
xor
movb
or
xchg
pop
sarl
mov
cmpsl
test
addr16
dec
dec
push
std
sub
dec
outsb
push
xchg
add
lret
adc
or
sub
repz
xchg
jecxz
pop
fmull
movsb
cmp
repnz
inc
sbb
xchg
cmpsl
aaa
cld
test
add
mov
xchg
fistpl
fnstenv
aas
inc
test
adc
xor
xor
push
cmp
inc
pusha
lods
mov
arpl
push
in
imul
test
mov
imul
fs
dec
mov
sbb
aaa
mov
aas
pushf
mov
jmp
push
or
pushf
cmp
out
jmp
mull
xor
dec
dec
push
in
mov
mov
test
mov
nop
fldl
sub
insl
int
or
imull
mov
int3
fldt
movsb
pop
mov
jl
sti
lret
push
pop
imul
cltd
stc
lahf
lret
xchg
sub
js
ljmp
jp,pt
push
dec
or
cmp
or
jne
or
ss
and
xchg
inc
movl
scas
cmpsb
mov
lods
out
pop
bound
shll
add
gs
and
cs
mov
push
mov
lcall
mov
sub
jecxz
adc
dec
fcoml
inc
fidivrs
push
loop
jns
and
jae
inc
add
popa
xchg
std
mov
push
movsl
adc
rcll
mov
jno
in
and
xor
jl
mov
fs
sub
nop
add
das
adc
add
vpcmov
icebp
ret
mov
dec
aad
inc
push
mov
sbb
dec
sub
xor
in
mov
adc
mov
imul
xor
pop
xor
daa
out
clc
call
xchg
jl
jge
sub
lock
repz
push
and
inc
dec
mov
popf
sarb
sub
out
mov
in
pop
mov
fs
jge
mov
mov
pusha
xor
enter
sbbb
dec
add
cmpsb
or
sub
dec
loope
stc
push
inc
je
leave
imul
xchg
jmp
stos
pushf
push
push
je
jae
mov
and
es
and
or
sbb
inc
inc
mov
xchg
add
in
push
fcoms
enter
xchg
jne
repz
push
je
vunpckhps
dec
push
lock
ds
or
lods
dec
add
xchg
movsb
sub
jb
push
sbb
xlat
aam
dec
stos
ret
mov
and
icebp
hlt
inc
push
stc
add
push
xchg
pop
add
mov
test
mov
scas
xor
mov
repnz
mov
push
mov
lcall
stos
fsubrp
sbb
adc
jmp
rolb
jno
sub
cwtl
test
inc
lret
or
call
jecxz
cmovg
imul
dec
sbb
or
out
ret
cmp
stc
mov
dec
mov
lret
pop
sahf
imulb
ret
fs
repnz
sahf
data16
pop
shlb
jecxz
pop
loop
sub
cmp
push
cltd
ret
aaa
icebp
dec
paddsb
mov
xlat
jno
push
or
jge
lods
sti
jmp
ljmp
cmp
xchg
sbb
fdivrp
aas
imul
fldcw
lods
xchg
fdivr
pop
mov
aad
into
pop
mov
and
adc
or
and
add
add
and
pop
dec
lahf
loop
sbb
xor
mov
sub
lret
xchg
inc
mov
call
daa
repnz
or
xchg
dec
ss
xor
lea
inc
sub
pop
jne
not
ss
sub
fldenv
and
ret
push
ja
leave
lods
xor
inc
and
cmp
fdivr
loope
and
add
and
clc
les
je
mov
popa
pop
and
jb
jge
dec
loop
stc
jl
cmp
bound
clc
aas
out
push
lock
fildll
dec
cld
mov
outsb
mov
inc
mov
out
aad
pop
xchg
pop
dec
movsl
or
in
cmp
notb
ret
scas
ret
enter
outsl
fcmovne
cmp
rorb
fildll
inc
stc
stc
mov
jne
push
outsl
adc
in
es
stc
jle
fnsetpm(287
cmp
or
push
sarl
inc
pop
add
jae
leave
jbe
xor
jae
mov
pop
popf
inc
push
inc
pop
sbb
leave
xchg
mov
loop
inc
sub
fimuls
popa
mov
aaa
push
and
lret
cmpsl
mov
jnp
dec
bsf
sub
mov
or
das
shrl
mov
cltd
inc
inc
clc
or
dec
test
addb
add
int3
insb
mov
cli
and
pop
int3
push
clc
and
in
sub
out
fadd
lds
enter
fstps
jmp
xchg
adc
jae
lods
xchg
xor
dec
scas
hlt
pop
scas
jge
fiaddl
popf
jp
jne
mov
cmp
add
mov
mov
push
repz
jle
roll
test
inc
lds
xchg
out
mov
sub
cld
dec
in
cmpb
pop
mov
jecxz
cmp
repnz
xor
push
fldt
sub
es
push
xchg
ret
enter
test
imul
xchg
cmpsl
mov
in
scas
les
jle
xchg
lret
mov
lret
out
and
fisubrs
or
mov
cld
or
jb
dec
negb
out
push
jmp
adc
cmp
jmp
dec
loope
scas
int3
fs
loope
dec
inc
jl
ror
into
mov
mov
fbld
sub
test
mov
dec
ds
out
les
pop
js
lret
pop
loop
loopne
and
mov
sub
cmp
jge
testl
push
jge
cmp
xlat
or
cltd
imul
mov
mov
sbb
sub
cmp
push
dec
cld
cltd
addb
cmp
jge
xchg
mov
dec
xlat
push
aas
mov
mov
out
sbb
mov
sbb
push
lods
mov
imulb
sbb
cs
mov
dec
cmp
mov
jecxz
inc
loop
mov
fidivs
test
xor
jns
cmp
lea
testl
out
ret
xor
pushf
lds
fcompl
loopne
fucom
in
adc
fistpl
ja
cmpsb
mul
mov
aad
sbb
push
mov
dec
dec
mov
cld
pop
cmpsb
mov
pop
outsl
imul
ljmp
push
sbb
ljmp
mov
lret
mov
leave
mov
inc
fcoms
outsl
loope
shrl
sbb
fwait
out
leave
pop
jne
push
nop
or
mov
loopne
or
pushf
inc
fcoml
or
cmp
rclb
popf
adc
sbb
cs
fidivl
jb
lret
rcr
mov
cltd
mov
or
jbe
sahf
sub
subb
dec
and
xchg
ss
dec
add
adc
test
cmpsb
xlat
mov
pop
pop
leave
cs
imul
push
mov
xchg
jl
cld
dec
push
ds
shrl
mov
mov
add
lret
add
mov
xor
jae
fimuls
in
notb
and
dec
jle
les
movsl
call
xchg
sbb
lcall
cmc
repz
jne
fildl
mov
push
shr
stos
cmc
cmp
inc
fucom
dec
add
loop
adc
jno,pt
push
or
insl
pop
and
jp
sbb
movsl
fmuls
dec
cmp
lock
addr16
std
jl
xor
mov
and
test
pop
mov
stos
in
xlat
subb
pop
iret
fcomps
add
push
sbb
jecxz
dec
xchg
lahf
lahf
stc
cmp
dec
int
mov
sbb
or
push
xor
or
lret
pop
ret
cmpsl
and
out
fldlg2
mov
xchg
cmp
jg
xchg
imull
sbb
xchg
in
xchg
mov
ljmp
mov
inc
adc
mov
push
mov
fucomp
xchg
mov
es
shl
push
stos
stos
and
push
or
cmp
lods
push
mov
xchg
cmp
scas
imul
add
ds
push
das
ja
pop
xor
ds
orl
dec
xchg
js
and
cmpsb
mov
dec
adcl
rcrl
jno
stos
jno
pushf
test
xlat
xchg
dec
ds
xchg
std
dec
mov
jp
sbb
insl
mov
in
lret
arpl
jb
repz
inc
adc
and
xchg
test
out
and
leave
aaa
pop
mov
or
das
pop
inc
stos
mov
imul
enter
test
push
xchg
popa
push
in
adc
movsb
insl
js
mov
mov
in
push
movsb
push
xchg
fstl
jbe
es
inc
xor
mov
add
fstl
mov
mov
xchg
ja
push
dec
cmp
pop
stos
mov
add
inc
sub
int3
adc
fs
mov
sti
pop
pop
shlb
dec
jle
xchg
add
inc
cld
xor
mov
cmp
stos
fbstp
jo
in
addw
pop
daa
sub
cmpsb
es
repnz
rclb
scas
pop
add
je
lock
hlt
dec
movsl
fs
push
pop
sarl
cmp
adcb
pop
fiaddl
sbb
add
sbb
je
adc
je
out
imul
cwtl
sti
add
pusha
inc
pop
push
aas
and
jae
cld
fisttpl
cwtl
mov
call
add
mov
push
mov
je
aad
lret
jg
loope
in
fwait
adc
shrl
mov
mov
mov
sub
mov
shll
mov
xchg
or
xor
mov
out
cmpsb
adc
or
out
or
icebp
mov
mov
fiaddl
add
fcmovnu
iret
mov
pop
out
sub
es
xchg
push
test
dec
stos
test
pop
dec
emms
pop
fnstenv
lcall
jns
into
andl
pop
imul
xor
cmp
scas
test
dec
popf
mov
stos
addr16
xchg
lock
mov
add
sub
inc
and
ss
add
aas
dec
aad
add
aas
sub
and
lret
mov
insl
mov
shrb
cmp
cmpsb
adc
and
dec
xor
sub
jle
xchg
in
xchg
inc
icebp
inc
cmp
insl
pop
jl
add
add
rolb
sbb
imull
or
push
inc
outsb
cmpsl
mov
subl
loope
sti
inc
loop
or
shrl
xchg
pop
push
xchg
daa
pusha
fsubs
fisttps
pop
inc
push
popa
shr
push
mov
fcmovnb
shrb
jno
lret
sti
dec
dec
mov
mov
adc
hlt
xor
daa
mov
mov
dec
or
mov
xor
rcll
pop
pop
xor
mov
mov
xchg
cltd
lea
enter
enter
shll
test
subb
testb
inc
cmc
push
add
add
lahf
cmpsl
inc
sbb
push
pop
push
paddusb
inc
jns
push
dec
sbbb
lods
cmc
iret
push
and
fnstcw
ljmp
mov
cmpsb
or
in
dec
pop
lahf
adc
enter
mov
and
shll
rcll
loopne
push
jo
cmc
mov
jg
movl
dec
stos
push
cld
sbb
fsubrl
inc
and
fcmove
cmp
mov
fcompp
dec
dec
or
and
pushf
outsl
pop
jl
gs
jns
xchg
insb
jmp
mov
jg
dec
and
sbb
loopne
test
push
dec
rcl
mov
jnp
mov
cmp
mov
inc
not
fldenv
jg
nop
and
data16
sbb
pushf
out
fwait
add
je
icebp
add
pop
push
dec
xchg
pushf
imul
bound
push
inc
add
sbb
xchg
int
cmc
incl
or
sub
mov
cwtl
cltd
xor
aad
and
jg
inc
cld
fs
loope
stos
lret
xor
and
adc
outsb
incb
aam
and
cmp
shrb
je
frstor
loop
and
push
cli
cmp
xor
xor
inc
mov
fmull
std
xchg
movsl
xchg
notl
or
shrb
das
cmpsl
and
imul
cmp
fcomp
xchg
lret
adc
aas
idiv
call
sub
push
loopne
jl
mov
dec
scas
adc
jne
lcall
mov
cli
sbb
lret
stos
xor
mov
mov
mov
add
jb
out
movsl
pop
ljmp
push
sub
ficomps
sub
jbe
out
ja
add
in
nop
nop
dec
adc
mov
push
and
fadds
pushf
mov
sti
adc
inc
push
xor
out
shlb
pop
jne
iret
and
and
sub
popf
add
fs
or
adc
in
mov
jg
mov
inc
stos
jno
pop
xor
js
sub
lcall
fcomp
jmp
test
xor
mov
push
in
mov
mov
inc
sbb
ja
or
aaa
sbb
hlt
inc
or
and
xor
clc
push
sbb
xor
pop
aam
pop
push
jnp
cmp
lahf
std
loope
cmpsb
scas
sbbl
mov
les
lret
mov
sti
jg
xor
imul
xchg
hlt
xor
cmp
jmp
ljmp
sbb
jge
mov
jecxz
mov
pop
clc
push
rorb
mov
rcll
out
pop
fldenv
pushf
push
out
add
mov
out
cmp
jne
or
jo
mov
sbb
dec
into
sub
push
inc
ret
mov
push
jne
mov
in
outsb
sar
popa
push
pop
mov
stc
lods
xchg
add
and
xchg
int
ja
mov
inc
mov
mov
pop
fisubl
pop
cmp
push
pop
repnz
inc
push
xor
and
lret
push
cmc
in
lds
popa
nop
mov
dec
imul
fwait
dec
xor
mov
js
pop
popa
ds
call
pop
scas
mov
fnstcw
hlt
push
out
in
xchg
push
aad
movsl
pop
mov
insl
mov
sub
adc
mov
pusha
add
mov
xchg
push
and
mov
pop
sbb
rorl
cmc
scas
fisubl
jl
insb
mov
outsb
negl
push
add
movsb
jl
cli
mov
mov
inc
dec
insl
movsl
jns
and
add
in
mov
xchg
test
gs
sub
icebp
cmc
dec
jo
insb
movsl
xor
push
iret
mov
push
push
inc
inc
mov
mov
cmp
push
nop
mov
leave
ret
push
jne
orb
clc
jmp
dec
mov
inc
retw
lea
mov
push
xchg
pop
arpl
leave
sti
and
stos
cmc
movsl
fisubrl
test
in
inc
sbb
pop
mov
cmp
imul
xor
lods
sbb
dec
imul
mov
xchg
push
addr16
fdivr
lock
push
out
rol
sub
ss
mov
adc
and
adc
rcrl
xlat
push
aaa
pop
pusha
je
pop
cwtl
popf
js
pop
sbb
scas
in
push
xchg
popa
jno
dec
jg
adc
push
mov
adcl
inc
cmp
dec
ficomps
in
sbb
ror
mov
test
inc
mov
sub
or
mov
scas
mov
fs
jo
push
pushf
or
mov
sahf
js
xor
pop
cmpsb
roll
push
dec
sbb
sbb
cmp
imul
mov
or
pop
data16
push
call
test
stos
add
mov
sbb
scas
jp
dec
xrelease
testb
ds
mov
push
mov
jb
mulb
mov
leave
insl
add
test
mov
je
jo
into
mov
jl
mov
test
jb
scas
sub
cmpsl
and
jge
and
out
filds
jbe
add
mov
xor
fistpl
in
pop
out
leave
inc
or
cmp
push
test
xchg
cmpsl
pop
dec
pop
lea
nop
jg
mov
das
cld
sub
ret
sahf
pop
call
jnp
arpl
mov
imul
pusha
dec
sub
in
mov
mov
dec
mov
jl
test
jne
aas
popa
or
call
jne
int
fistpll
ss
jle
dec
sub
cmp
shrl
fdivl
mov
or
push
mov
jae
bound
jecxz
mov
push
push
sbb
test
stos
inc
mov
jge
bnd
fsubs
into
xor
inc
or
cmc
sbb
not
pop
out
or
jg
sbb
addw
adc
rcl
fistps
sbb
stc
sahf
mov
mull
cmp
xlat
lock
mov
or
xchg
cmpsb
pop
jo
xlat
lahf
pop
call
mov
f2xm1
pop
rorl
sbb
push
cmp
icebp
rclb
lds
rolb
pop
inc
push
not
loopne
lds
sub
jne
call
lock
mov
int3
cmp
cmp
cmpsl
jle
jne
dec
mov
data16
fdivr
xorl
mov
xchg
push
popf
outsl
or
int3
jmp
cmpsl
loopne
mov
repnz
mov
sub
push
inc
iret
bound
sarb
loope
hlt
in
stos
cwtl
mov
ss
push
outsb
pop
jbe
ret
bound
cmpsl
push
pop
test
inc
push
mov
ret
xchg
jp
pop
in
add
loopne
andl
mov
addr16
into
xlat
push
xchg
jp
mov
in
push
jb
pushf
and
jnp
imul
mov
out
hlt
in
cwtl
scas
mov
insb
jmp
leave
fcompl
cmp
jns
inc
pop
xchg
mov
je
adc
xchg
dec
xor
or
jp
inc
ficomps
push
xchg
jmpw
and
aam
push
jno
adc
sarl
leave
aaa
add
and
pushf
xorl
jg
sub
and
dec
loope
jmp
pop
addb
mov
insb
inc
les
adc
and
rcrl
stos
mov
cmpsb
jno
add
jecxz
jecxz
outsb
sbb
adc
lret
outsl
inc
adc
jbe
mov
mov
repnz
loop
push
cmpsl
xchg
push
fistpll
stos
roll
and
jns
cld
dec
in
adc
pop
jecxz
dec
push
ficompl
cmc
jbe
push
nop
push
pavgb
aaa
insl
sbb
mov
adc
movsl
mov
jae
popf
out
adc
pop
ret
lock
cmp
cmp
mov
in
lahf
dec
fstpl
xchg
aaa
cmp
leave
shl
xor
ret
int3
push
push
push
mov
cli
xchg
test
sahf
js
stc
das
mov
mov
dec
gs
fwait
jo
movsb
outsb
xchg
jo
inc
mov
mov
ret
rcr
les
psubusb
jae
imul
mov
fadds
pop
hlt
imul
fstps
or
mov
pop
jmp
lock
push
pop
sbbb
pop
sbb
imul
sar
inc
mov
lods
pop
test
sbb
xor
jp
xlat
adc
nop
xor
xchg
xchg
loope
jle
aas
pop
and
push
jg
jp
xchg
push
cwtl
movsl
das
lods
add
out
xchg
cmp
js
daa
push
push
fnstenv
mov
out
jb
lcall
clc
les
and
dec
fisubs
daa
xchg
sbb
cmp
mov
pop
cs
mov
std
cs
js
sar
mov
fdivrs
xlat
or
ss
outsl
in
lock
xor
shll
movsb
mov
inc
ja
and
shrb
jl
data16
out
std
sar
push
lcall
fisttpll
xlat
jl
enter
jmp
mov
push
mov
js
shll
lret
sub
cltd
outsb
sti
jl
xor
xchg
scas
or
jne
pop
mov
pop
cli
pop
jle
push
sub
faddl
daa
pop
pusha
cmpsb
lcall
rcll
imul
movsl
ret
mov
aam
lock
pop
imul
ljmp
dec
insl
call
jo
divl
sbb
add
scas
aad
xchg
enter
inc
test
icebp
dec
xor
or
pusha
adc
in
xchg
call
sbb
out
mov
rcrl
es
lahf
mov
ret
nop
subb
cmpsb
xlat
xchg
cld
into
mov
out
into
push
fimuls
cmc
inc
repnz
lods
xor
xchg
push
add
repz
adc
fldcw
sbb
sbb
and
mov
mov
cmp
xchg
push
dec
fs
loopne
adc
dec
cwtl
xor
sbb
std
xlat
and
jecxz
loope
pop
fnstsw
fst
and
mov
imul
add
inc
or
mov
nop
or
adc
cmpsl
scas
mov
idivb
das
cmp
insb
daa
rorl
cmp
dec
cltd
push
sub
pop
push
adc
cwtl
bound
jb
xchg
add
inc
hlt
add
dec
shl
test
xchg
push
pop
sahf
decb
push
das
dec
fstl
ja
cmp
sub
pop
sbb
sub
ds
psubw
cmp
inc
mov
mov
cmp
int
mov
inc
xchg
adc
jp
test
mov
repnz
orl
ss
aad
push
pop
loop
leave
sub
ret
or
add
fnsave
loop
inc
iret
and
rcr
enter
mov
fistps
out
fisubl
pusha
jb
popf
xchg
cs
cwtl
push
mov
adc
shlb
imul
flds
jae
pop
arpl
outsl
fwait
xor
push
cwtl
mov
stc
mov
mulb
inc
push
bound
jnp
sbb
and
les
push
fistpl
pop
xchg
int3
inc
lea
jne
xor
pop
mov
ret
mov
mulb
pop
test
lcall
pop
cmp
dec
pusha
gs
and
test
cli
decb
mov
cmpsl
cmp
add
out
sub
mov
das
push
mov
pop
pop
lods
mov
dec
popa
testl
push
pop
push
mov
adc
aas
and
jge
jno
rcrl
repz
adc
add
in
fmull
pop
iret
jbe
mov
insl
fcmovnb
cs
or
ret
sbb
lret
inc
adc
ret
shlb
cmpl
cwtl
dec
and
inc
loope
dec
inc
insb
mov
stos
test
sub
or
and
int3
les
scas
insl
and
aaa
sbb
imul
adc
aas
pop
and
pop
js
pop
or
lahf
call
and
rclb
out
jecxz
int3
iret
push
in
arpl
jle
out
sti
pop
push
and
pop
cmp
push
insl
xchg
or
mov
or
stc
test
push
sub
stos
pusha
js
lret
adc
in
adc
int3
lahf
lahf
ds
mov
sub
push
mov
das
lret
xor
shll
adc
pushf
cmp
mov
pop
mov
insl
shl
pop
push
xchg
nop
adc
mov
xor
imul
mov
pop
daa
jp
jb
pop
dec
lock
sti
xchg
add
mov
leave
mov
outsb
push
dec
popa
jo
lods
pop
lods
movb
or
add
andb
sub
jg
cmpsl
cwtl
pop
movsl
push
roll
call
push
xchg
daa
and
icebp
jecxz
in
ror
mov
pop
jl
pop
scas
and
sub
repnz
vpsubusw
pop
scas
sbb
push
add
mov
xchg
nop
mov
pop
mov
out
dec
dec
pop
jno
push
into
mov
sar
mov
xor
das
frstor
test
sbb
push
shlb
pop
pop
sarb
pop
shlb
imul
rol
lahf
test
mov
dec
out
data16
nop
icebp
sub
aad
pusha
xchg
out
adc
ss
sbb
aas
adc
sbb
mov
mov
mov
cmp
mov
inc
mov
jbe
lret
or
inc
push
adc
in
lret
pop
fsub
pop
subl
pop
adc
jbe
test
insl
loope
movsl
inc
pop
popa
cmp
pushf
jb
test
mov
sbb
fiadds
or
imul
mov
jns
mov
shlb
push
shll
stc
xlat
orb
cmp
ds
sbb
sub
adc
iret
push
or
popa
jle
adc
inc
inc
dec
test
sbbb
push
pop
and
pop
pop
mov
sub
test
movsb
stos
pop
jnp
jmp
daa
xchg
cs
repnz
xorl
xchg
cmp
test
into
pop
hlt
xchg
notl
cmp
adc
les
mov
xor
outsb
pop
popl
sub
cmp
xor
popa
mov
loop
lods
sbb
or
in
mov
sub
inc
pop
ljmp
sub
add
xlat
loope
jne
std
pop
add
jbe
jmp
cli
test
mov
sub
hlt
xchg
or
in
inc
mov
icebp
pop
sbb
pusha
ja
xchg
sub
sbb
sub
in
adc
push
pop
insl
mov
and
jecxz
dec
aaa
lcall
dec
mov
cmc
adc
sbb
aas
lcall
imul
xor
call
mov
daa
ror
or
pop
jge
cmp
xor
out
push
ljmp
movb
jo
sbb
cli
push
fisubrs
mov
stc
aaa
out
pop
pop
cmpb
dec
push
ds
lahf
adc
jb
fldt
mov
fst
mov
imul
and
in
subl
inc
out
and
mov
ds
mov
repnz
lods
push
push
jae
call
inc
outsb
inc
mov
pop
jp
mov
and
std
inc
nop
aam
adcl
pop
orb
xchg
arpl
jge
sbb
add
pushl
or
inc
push
sahf
data16
imul
hlt
ljmp
cld
test
and
in
pop
sbb
and
andb
sub
pop
dec
and
scas
shll
in
int
adc
pop
imul
cwtl
pusha
xchg
ja
or
xlat
xchg
pop
adc
mov
popa
xchg
dec
ret
xchg
fidivl
iret
jno
mov
je
dec
cmpsb
cmpsb
pop
dec
call
in
sbb
mov
sahf
decl
dec
mov
jp
dec
fstl
push
pop
gs
enter
inc
jnp
in
cmp
xor
outsl
cwtl
and
popf
cmp
or
in
jp,pt
lcall
int3
xchg
cwtl
inc
lret
das
ss
push
cmp
mov
mov
outsb
cmp
push
dec
lock
inc
test
js
or
dec
adcb
pop
scas
stos
jns
sbb
adc
mov
xchg
int3
and
cwtl
mov
mov
mov
inc
std
jmp
push
and
cmp
data16
push
out
cmpsl
mov
es
int3
sub
mov
jl
insb
jno
das
je
pop
xchg
and
jg
xor
stc
aad
xor
bound
and
lahf
jb
or
cmc
cs
and
sahf
stc
and
inc
sub
sbb
adc
jae
inc
test
ljmp
enter
shll
mov
repnz
mov
mov
or
jb
adc
lds
push
jno
cmpsb
shr
add
lds
scas
xchg
insl
adc
lret
inc
std
add
testl
and
and
dec
jo
sbb
fnstenv
jno
out
test
in
jae
jnp
sarl
scas
mov
mov
mov
mov
imul
pop
int3
mov
arpl
clc
repnz
iret
push
mov
mov
insb
popa
mov
xor
test
rol
icebp
loope
jmp
push
add
adc
arpl
sbb
xlat
in
pop
lea
bound
and
insl
jno
dec
cld
movsl
pop
jl
and
std
xchg
iret
xorb
aad
inc
mov
mov
enter
mov
popf
ds
out
mov
or
dec
in
imul
push
jle
out
jbe
dec
mov
mov
fisubs
int3
jp,pn
out
mov
pop
pop
dec
insl
repz
push
jmp
stc
mov
andl
cmp
push
lods
push
mov
out
mov
adcb
mov
cmp
sti
ret
sbb
fbld
cli
fcomi
cmpsl
sub
inc
icebp
jle
push
and
adc
fsubs
fdivl
jns
add
mov
lret
aam
jl
mov
jge
ret
xor
dec
fdiv
mov
dec
mov
ret
push
push
lea
push
inc
adc
cmp
hlt
xlat
mov
adc
ret
or
and
sub
xchg
cs
xchg
mov
enter
dec
shll
mov
stos
out
mov
jmp
push
repnz
dec
jg
mov
mov
cli
dec
jne
decl
int
jmp
lds
dec
mov
sbb
fadds
out
add
mov
ret
int3
movsl
dec
sahf
enter
mov
or
insl
dec
adc
fstl
pop
sub
dec
fildl
mov
aad
inc
rcl
popa
stos
pusha
adc
sub
repnz
pop
lahf
or
xor
in
hlt
mov
add
mov
sar
dec
jbe
xor
mov
mov
lods
daa
xor
jmp
testl
mov
cli
fildl
in
dec
in
jae
data16
or
push
jecxz
jg
lcall
mov
negl
insb
or
jne
cmp
xor
xchg
movb
int
movsb
mov
out
or
or
outsl
mov
fmuls
push
and
es
daa
rcl
xor
mov
into
mov
xor
pop
clc
jo
pop
add
add
dec
pop
mov
mov
inc
cmp
notb
sub
dec
lahf
mov
aas
cmp
iret
cmpsl
push
dec
mov
lahf
mov
cmpsb
adcb
sub
mov
xor
sbb
das
jmp
pop
insl
mov
imul
loopne
xor
rcrl
xchg
fs
inc
out
add
inc
mov
cmp
icebp
dec
add
dec
dec
std
jge
xor
iret
ss
loope
mov
outsl
and
jg
leave
or
pop
sub
aaa
cmp
dec
or
cmc
jl
xchg
sbb
test
inc
lret
adc
cs
popa
mov
inc
push
movsl
adc
xchg
ds
dec
repnz
nop
cmp
adc
loope
and
fwait
lret
insb
mov
jns
loopne
or
mov
loop
cld
stc
push
fs
sahf
rcrl
inc
jecxz
daa
xchg
mov
mov
sub
jge
pop
mov
into
clc
mov
jp
cmp
cltd
lds
rorl
jns
xchg
cmpl
add
and
mov
sbb
daa
sbb
pop
mov
xchg
pop
sub
test
fs
push
lods
xadd
hlt
mov
pop
test
jle
sar
jo
push
movsb
mov
inc
mov
mov
fwait
push
mov
test
in
jmp
cmpsb
cmpsb
loopne
cmpl
lods
mov
sahf
fsubp
dec
pushf
iret
pusha
pop
xchg
dec
inc
in
mov
fisttpl
lcall
sub
int
and
cmc
test
je
and
popa
xchg
pop
incb
push
pop
sub
pop
sti
mov
mov
jae
mov
das
dec
fs
aam
pop
repnz
inc
push
sbbl
fnstenv
mov
movsb
xchg
ss
pop
xchg
scas
sbb
cmp
or
mov
repz
roll
inc
mov
loopne
out
fldenv
push
lods
mov
pushf
jbe
popf
and
push
cmpsl
pop
sub
pushf
arpl
gs
fsts
shll
sbb
es
jae
jmp
sbb
hlt
mov
in
pop
and
idiv
jae
sbb
push
mov
push
test
add
and
jmp
xchg
fldcw
roll
test
ret
shrb
imul
dec
arpl
stc
sbb
inc
sbb
loopne
ret
mov
int3
push
ss
mov
es
xchg
cwtl
mov
push
cmc
mov
pop
imul
jnp
xchg
inc
lret
scas
in
jp
add
sbb
pushf
cmpsb
adc
xor
lret
and
aam
int
test
sub
pop
mov
lods
jo
and
fsts
pop
jne
xor
idivl
pop
cmc
out
add
repnz
imul
inc
dec
push
dec
dec
je
pop
adc
sub
push
xchg
cmp
es
iret
xor
jno
lods
or
adc
mov
repz
inc
pop
imul
cmp
pop
stos
frstor
subb
xchg
dec
mov
popa
scas
mov
jle
test
shll
mov
push
add
mov
cltd
andb
jbe
sarl
sti
add
inc
pop
imul
push
pop
gs
sub
enter
rorl
jl
lahf
arpl
push
mov
and
popa
fs
iret
sbb
nop
aad
push
shl
movsl
cmp
ret
mov
sahf
adc
fs
sbb
sbb
sbb
xchg
es
jle
cwtl
xor
mov
sub
mov
push
add
pusha
cld
outsl
add
daa
js
dec
clc
inc
mov
xor
shr
jae
icebp
ret
xchg
fisubrs
mov
nop
jae
adc
pop
jmp
shrb
pop
ret
pop
fsubrs
xchg
shll
nop
push
cld
inc
shll
pop
mov
dec
cmc
rcrl
sbbl
inc
adc
mov
imul
subl
mov
gs
push
mov
iret
int
clc
or
sub
sub
movl
fiaddl
les
mov
stos
xchg
jnp
aam
add
sbb
ret
sbb
jae
aad
add
mov
scas
out
aam
fistpl
fs
das
push
subb
lods
mov
fistl
add
sbb
shll
vpmacsww
mov
xlat
add
or
cmp
aaa
lcall
sti
inc
aad
jb
fsubrl
les
xor
sar
push
dec
adc
ds
push
pushf
iret
aaa
lods
lahf
xor
outsb
scas
jg
sbbb
dec
sahf
cmp
mov
xchg
ja
shlb
inc
fucomip
sbb
xchg
inc
push
lcall
and
lods
in
bound
mov
push
lods
in
sti
mov
add
and
mov
xor
js
and
cmc
es
mov
xchg
popa
arpl
sbb
es
test
add
cwtl
mov
sbb
and
jle
icebp
loop
pop
adc
push
dec
shlb
pop
movsb
in
xchg
call
enter
or
movsl
call
mov
cltd
inc
sbb
push
pusha
mov
sbb
mov
cs
in
or
pushf
shl
dec
lds
sbb
cli
shl
jg
sbb
jmp
subl
pushl
in
xor
mov
test
dec
fstps
xor
stos
jmp
outsl
sbb
sub
xchg
and
cmp
clc
shl
cwtl
mov
mov
adc
addl
jnp
push
and
fldt
push
test
jg
mov
mov
outsl
xor
push
je
repz
bound
mull
and
push
push
scas
into
dec
mov
or
jp
test
mov
xlat
pop
das
dec
add
cltd
jl
jge
xlat
pop
add
rorb
push
push
data16
scas
xchg
dec
mov
lods
repz
pop
pusha
test
adc
mov
insb
mov
and
pop
cmp
adc
in
ja
arpl
jo
push
mov
and
push
mov
js
andl
cmc
insb
jbe
pop
popf
ret
outsb
lcall
cmp
stos
pop
shrb
lahf
adc
pop
xor
push
sbb
sbb
mov
mov
mov
and
sarb
leave
cmpsb
fadd
xchg
sbb
lods
dec
addr16
jecxz
sbb
mov
inc
jb
pop
sti
mov
popa
mov
pop
fsubrl
add
pop
jbe
mov
jae
or
push
repnz
or
dec
jo
inc
add
insl
movaps
repnz
push
mov
xor
xchg
push
lds
cmpsb
sahf
dec
xor
mov
repz
js
imul
out
xlat
pop
faddp
ficompl
idivl
adc
add
adc
cld
jl
movsl
pop
xchg
fisttps
adc
int
test
jmp
fwait
das
push
inc
ret
inc
adc
cmpsb
sub
ja
lret
xchg
or
lahf
in
insb
fisubs
sbb
addb
sub
pop
mov
sbb
mulb
or
cld
das
xchg
xchg
sub
and
or
pop
mov
jo
inc
cltd
out
lcall
dec
push
dec
aad
push
shlb
sti
mov
mulb
sbb
mov
dec
daa
sbb
add
and
dec
bound
pop
cli
pop
pop
sbb
outsb
cmp
mov
das
push
mov
and
js
xchg
push
sub
mov
imul
repz
fwait
iret
push
clc
adc
les
repnz
mov
sub
call
dec
inc
dec
cmp
adc
ss
add
add
cmp
push
rcrb
fucomip
outsl
cmp
push
scas
pop
shlb
outsb
sub
loopne
out
fstpl
ret
sub
js
jge
pop
shr
fcoml
insb
insl
iret
ret
sti
test
push
mov
arpl
loop
aaa
out
mov
ljmp
jg
in
jecxz
pop
repnz
push
adc
adc
sahf
shr
xlat
sub
mov
aam
jns
fsub
lods
push
sbb
cmp
das
scas
or
add
pop
or
and
adc
fistps
out
repnz
enter
adc
pop
dec
mov
add
mov
sub
out
mov
clc
loopne
jns
stos
mov
jecxz
lods
lret
mov
fwait
mov
into
sbb
adc
mov
cld
in
sbb
inc
or
inc
lods
or
lock
and
jl
pop
movsl
inc
aaa
xchg
xor
mov
jo
adc
or
sbb
mov
and
aad
subb
pop
xchg
std
adc
dec
mov
clc
or
outsb
or
cmc
aad
xor
sub
mov
xchg
lock
mov
cs
imull
lret
pushf
and
sbb
mov
fisubs
outsl
dec
sub
mov
add
and
dec
dec
or
repz
jbe
add
sub
jb
cmpsb
mov
repz
imul
stos
pushf
dec
add
cli
std
data16
or
das
orl
xchg
sub
cs
fstp
enter
push
je
mov
lret
xchg
popa
or
fwait
or
xor
add
lret
orb
loop
jle
adcl
sub
inc
pop
scas
dec
test
cmpsl
xchg
fmul
pop
sbb
add
iret
ja
in
fimull
cli
dec
or
lret
cmp
pop
mov
rcrl
in
es
sti
inc
and
adc
out
nopl
mov
dec
xchg
cmp
leave
notb
outsl
or
mov
adc
fisttps
shrl
lods
mov
lock
and
or
mov
sbb
pop
jmp
sub
daa
add
fwait
es
jno
cwtl
mov
stos
das
sub
mov
movsl
push
icebp
aas
bound
pop
push
daa
fsubs
push
dec
jbe
fwait
aaa
fistps
push
scas
sub
mov
mov
push
mov
and
jp
push
stos
sbb
loop
leave
pushf
mov
pop
rorb
scas
setb
mov
adc
into
pop
and
ret
push
lods
dec
sub
jl
js
or
out
or
jns
popa
ret
in
jp
ja
push
rcr
and
push
mov
add
push
sub
mov
out
bound
sub
sub
xchg
jne
daa
mov
pop
call
cs
push
jp
xor
adc
fisttpl
sbb
in
insb
mov
leave
ret
jo
xor
sub
fiadds
fbstp
repz
js
ret
push
mov
popa
push
xchg
and
jecxz
ljmp
adc
cli
inc
fisttpl
sub
pop
xchg
sub
idivb
or
mov
or
mov
out
push
lods
mov
shrl
lods
sbb
outsl
mov
ret
pushf
in
xor
out
lea
sub
cmp
out
inc
mov
in
pop
or
pop
lock
bound
lahf
add
lock
dec
sub
ja
int
imul
mov
shlb
jmp
xchg
js
or
fmuls
shl
adc
mov
mov
xchg
pop
pusha
ljmp
push
sub
pop
fwait
scas
sub
mov
ja
fs
pop
test
mov
inc
dec
push
adcl
mov
ja
test
pop
adc
outsb
dec
cmp
add
mov
add
and
mov
les
test
fisttps
add
cmp
add
outsl
jle
mov
lret
imul
pop
dec
mov
lods
repz
inc
loop
mov
les
inc
divb
mov
jbe
int3
loope
rcrb
add
mov
ror
push
std
inc
aaa
dec
test
and
es
jge
shlb
xchg
jb
std
je
out
popf
mov
sub
xor
fdivrs
jo
sbb
loopne
pop
shlb
push
lret
testb
jae
and
ret
sbb
stos
adc
test
jp
jmp
stos
add
add
into
mov
test
push
dec
xchg
fcompl
mov
mov
fcompl
ret
inc
es
mov
adc
pop
inc
add
lods
jnp
lahf
sti
out
add
push
and
xchg
dec
pusha
nop
lcall
adc
orb
xchg
jg
adc
sbb
mov
inc
xor
test
and
mov
mov
sub
mov
pop
test
imull
or
mov
add
pop
inc
jecxz
add
sub
adcl
je
add
xchg
aam
int3
inc
sub
jne
rolb
lods
rep
mov
fnstsw
addb
rcrb
gs
nop
fwait
sbb
fisubrl
or
push
sbb
insb
addl
inc
xchg
loopne
stc
sbb
jb
push
mov
dec
cmp
inc
cli
push
bnd
xor
cmp
lret
xchg
and
lock
jp
sub
mov
outsb
xor
pop
into
xchg
mov
sahf
add
lret
add
or
jae
outsb
repz
daa
xchg
mov
mov
daa
das
jb
out
inc
add
or
pop
xor
fstl
pop
adc
data16
mov
sbb
push
ficompl
add
xor
lret
mov
ds
outsb
jno
loope
fiaddl
aad
lds
xor
fdivrl
ret
mov
push
xchg
outsb
inc
icebp
inc
jns
xchg
mov
iret
mov
cmp
adc
and
or
out
sti
push
jle
mov
cmp
stos
in
sar
lods
mov
mov
insl
dec
jb
xchg
outsb
bound
sbb
hlt
jg
dec
test
int3
mov
jo
aas
hlt
or
or
push
lcall
subl
sbb
inc
dec
xchg
jb
cmpsb
lds
add
jp
xchg
add
or
imul
mov
ljmp
push
dec
repz
jge
repz
jno
je,pt
call
insl
pusha
add
lahf
inc
out
dec
pop
test
mull
cld
inc
mov
push
xor
aad
sub
mov
sahf
inc
ja
pop
adc
orl
mov
dec
inc
imul
push
inc
mov
or
or
add
lds
mov
mov
rclb
xor
je
repnz
and
mov
pop
jl
mov
loope
int
fimuls
dec
sbb
inc
jo
test
mov
inc
mov
push
pop
mov
dec
xchg
xchg
dec
dec
andb
pop
sarl
mov
add
ds
and
jge
lods
sbb
mov
mov
fdecstp
mov
rol
ret
shlb
push
dec
push
das
sar
das
pop
mov
ljmp
pushf
xchg
mov
mov
es
pop
sbb
cmp
sub
js
test
cmpsb
xchg
loope
pop
pop
add
adc
sarl
int
sarl
sub
daa
mov
mov
pop
add
pop
ja
cwtl
or
jnp
hlt
fs
cs
stos
fisttpl
hlt
sub
sub
je
nop
sub
push
mov
push
mov
dec
mull
lcall
dec
mov
inc
imul
fwait
inc
push
add
cmp
arpl
ret
je
hlt
je
inc
or
imul
aas
test
jb
adc
fs
mov
or
sbb
mov
pop
jge
dec
dec
pop
lea
in
and
sti
jae
jnp
xor
shrl
inc
sbb
imul
pop
dec
dec
mov
lds
je
inc
push
push
std
jo
fisttpl
rclb
test
fcompl
ret
xchg
dec
sbb
inc
in
bound
fldl
icebp
push
dec
push
dec
lcall
daa
xor
adc
add
push
push
ds
imul
mov
iret
push
js
dec
pop
in
pop
scas
mov
roll
dec
aas
mov
inc
fwait
inc
lods
jecxz
lret
mov
jnp
fmull
mov
pop
xor
call
jmpw
jge
xchg
pop
stos
sub
es
inc
loopne
fwait
mov
cli
dec
into
movsl
mov
or
fidivrs
and
movsl
xor
xchg
xor
or
jne
inc
outsl
in
arpl
cli
lcall
mov
repz
and
mov
dec
mov
out
dec
sub
enter
fcmovnb
dec
fs
aaa
xchg
xchg
loopne
sbb
add
xchg
in
cmc
xchg
jmp
std
test
dec
mov
or
fsubrl
add
add
mov
sarb
cmp
mov
fldcw
xor
dec
cmp
lock
jmp
push
pop
xor
jmp
push
inc
and
mov
shr
adc
adc
xor
and
stos
movsl
push
push
out
or
aaa
aad
fsts
xchg
mov
rcrl
jns
jmp
ret
fistpll
test
imul
mov
jbe
and
jno
mov
sbb
iret
inc
es
sbb
iret
filds
movsl
stos
push
repnz
and
mov
icebp
loop
xchg
xlat
add
jnp
repz
mov
xchg
lods
push
fldcw
out
loop
add
xchg
test
stc
out
ret
mov
mov
cli
out
jbe
sti
pop
popa
mov
rcll
insb
mov
adc
xor
cmpl
dec
xchg
ret
pop
test
fldl
mov
int3
test
adc
xchg
insb
push
jp
loop
ret
aad
pop
outsb
into
sti
jle
in
inc
xchg
add
sbb
cmp
inc
dec
dec
int3
cwtl
lods
int3
cmp
lods
xchg
les
clc
test
repz
add
add
push
mov
lock
sbb
push
xchg
dec
test
in
adc
sub
and
in
out
jae
jp
fwait
xor
cli
mov
lea
mov
iret
stos
dec
or
pop
dec
in
fldcw
adc
shr
testl
push
push
xor
pusha
adc
sub
xchg
or
daa
out
jo
adc
out
mov
push
push
pop
movsb
popa
cmpsl
xor
mov
shlb
jnp
push
loop
or
or
jns
ss
sbb
std
fwait
sbb
and
xchg
mov
mov
mov
jmp
js
xchg
xchg
jne
scas
clc
loop
sub
cmp
cmc
push
gs
dec
and
xchg
aaa
dec
inc
adc
push
aaa
push
jo
xchg
xor
cwtl
lret
scas
loope
or
cmp
daa
jecxz
mov
jnp
iret
pushf
sub
or
sbb
aaa
outsb
pop
sbb
jl
mov
aam
xor
mov
sti
cwtl
mov
addr16
test
lods
sub
ja
rcrb
push
or
lods
cld
flds
cmp
mov
mov
xchg
dec
lcall
les
or
xchg
ljmp
cmc
call
ds
inc
shl
xchg
or
push
loop
lods
mov
insl
jns
mov
adc
fs
dec
cld
test
dec
jg
push
push
dec
lock
dec
scas
in
adc
lock
sbb
push
das
and
cmpsb
in
lea
ret
icebp
cmpsb
hlt
lods
sub
inc
add
fstps
jne
mov
leave
inc
adc
repz
popa
inc
or
sub
es
dec
push
repz
jmp
or
xchg
mov
dec
sbb
add
adc
add
xchg
push
sub
mov
and
jo
pop
or
mov
fcoml
das
enter
scas
xchg
pop
in
jbe
sub
sbb
enter
cmp
js
inc
sub
mov
xorb
sbb
mov
and
inc
ficomps
mov
scas
inc
push
cwtl
mov
out
es
pop
or
pushl
jns
out
cmp
xlat
mov
inc
push
dec
xlat
lea
jecxz
xlat
ljmp
lods
call
mov
and
mov
sub
dec
int
call
jbe
cmp
cli
jo
cwtl
jne
ret
and
and
outsb
stos
xchg
pop
push
out
mov
sti
in
adc
sub
mov
xchg
adc
in
or
sbb
arpl
mov
nop
jp
jg
mov
daa
add
movsl
aaa
mov
mov
addr16
or
imul
mov
fisttps
mov
sub
subl
push
sbb
jmp
mov
call
aam
mov
xchg
lds
jg
sub
or
clc
xor
dec
fiaddl
lret
add
and
loopne
sub
pmuludq
cmp
mov
bound
das
daa
testl
mov
out
push
fdivrs
ret
inc
xchg
mov
dec
xor
push
cmc
sub
sub
arpl
out
fdiv
rcll
push
movsb
pop
enter
cmp
sub
mov
lcall
sbb
jecxz
push
sub
push
xchg
or
lret
dec
popf
ljmp
fidivrl
jge
enter
outsb
lock
push
sbb
jecxz
jge
mov
pop
push
pop
insl
inc
xchg
lret
andb
cli
mov
mov
or
inc
xlat
cmp
inc
cmp
into
cmp
push
shll
or
andl
xchg
bnd
notb
and
jae
sbb
pop
cmp
pop
xor
push
imul
aam
lcall
or
ret
das
pop
xor
movsl
insl
mov
lods
aaa
dec
inc
mov
jns
xchg
or
dec
mov
test
xlat
jmp
fadds
cmp
lcall
xchg
loopne
cwtl
dec
xchg
mov
jle
sbb
popf
xor
mov
push
jle
lock
sub
xchg
dec
sub
pop
sbb
xor
loop
mov
addr16
in
int
sbb
pop
and
rclb
adc
imul
push
xchg
rcrb
sub
mov
outsb
sub
mov
pop
add
fsubr
scas
rcrl
mov
fidivrl
xchg
pop
inc
in
adc
jb
ljmp
movsl
mov
stc
arpl
mov
roll
in
cmp
lock
and
cwtl
mov
jno
std
push
sbb
insb
inc
sbb
data16
push
ds
dec
ja
adc
testl
xchg
inc
pop
sub
addr16
push
inc
mov
cli
es
ljmp
add
dec
pop
and
xor
xor
cmp
sbb
add
stos
inc
shlb
mov
xchg
jns
sub
adc
sbb
or
pushf
mulb
lcall
imul
push
inc
add
in
or
std
mov
push
xor
les
out
loopne
xor
iret
push
push
leave
aaa
jge
std
inc
ja
jmp
dec
inc
aas
fimull
xchg
stos
imul
xor
adc
jl
dec
xchg
jecxz
mov
leave
push
cmc
in
test
rcrl
cld
lcall
jae
sub
add
sahf
ds
adc
push
rcl
and
ret
jge
inc
pop
or
int3
mov
in
inc
inc
or
or
scas
push
push
sti
scas
inc
cmp
hlt
mov
std
test
je
jo
xchg
movsl
scas
xor
rclb
jae
push
imull
in
push
mov
inc
sti
cmp
negb
inc
mov
adc
push
mov
mov
movsl
js
push
mov
mov
push
add
mov
lcall
dec
mov
sub
out
arpl
jecxz
push
jno
movsb
fsin
mov
movsl
ss
daa
mov
push
out
pop
insb
ja
cld
jmp
xchg
lcall
sbb
popf
mov
adc
jecxz
cmp
lret
sar
icebp
xor
jno
lret
add
jp
lods
dec
lahf
and
add
adc
xor
mov
or
popf
data16
lds
leave
popf
in
jb
xchg
fst
add
xorl
into
xchg
pop
int
insl
xchg
cmp
imul
cli
or
dec
or
jl
les
hlt
and
xchg
jmp
dec
add
test
dec
jno
lret
sbb
push
cmpsb
fisubl
fsin
xchg
rolb
icebp
out
xor
add
lret
aam
ljmp
addr16
jp
push
std
or
xchg
shrb
out
lea
daa
fistpll
cmp
or
std
mov
jmp
sarb
xor
push
dec
arpl
jno
mov
pop
js
xchg
iret
jne
andl
lock
repz
xor
into
shl
mov
dec
and
add
jno
adc
mov
stos
jbe
mov
aas
xchg
sub
cmp
mov
dec
test
or
addr16
jne
xor
lcall
sbb
dec
loopne
sub
inc
xor
sti
aaa
popf
mov
jnp
jg
inc
sbb
xor
xchg
sub
mov
imul
adc
sbb
ds
xchg
adc
jbe
out
mov
cltd
and
mov
xchg
data16
push
sub
add
mov
xchg
dec
or
adc
mov
pop
inc
fimull
xor
and
scas
ljmp
rcr
mov
sub
push
lods
xor
nop
daa
test
cli
jl
push
mov
dec
push
push
add
or
jg
test
pop
pop
not
xor
test
rclb
rorl
xor
fstps
sub
out
push
cmp
addl
je
repnz
loop
add
or
pop
mov
xchg
ljmp
adc
outsl
cmp
mov
mov
inc
mov
shrl
push
cmp
sbb
and
iret
aam
add
jmp
push
dec
stos
adc
into
stc
ja
repz
movsb
cmpsb
mov
jg
dec
vshufps
cmpsl
jle
cmp
jmp
mov
or
sbb
sbb
dec
push
lods
in
addb
jl
or
lret
repnz
pop
dec
fldl
insb
dec
inc
fldenv
add
stos
push
aas
cmp
push
cmp
add
and
add
lds
sbb
orb
cmp
stos
dec
and
je
gs
clc
rcll
insl
stos
mov
pop
xchg
lea
jnp
push
test
pop
out
je
mov
les
add
mov
inc
mov
out
pop
sub
mov
psraw
xor
inc
int3
dec
pusha
and
push
pushf
pop
push
les
jle
repnz
out
mov
pop
lea
push
cmpsl
cmpsl
addl
pushf
or
fbstp
test
xor
test
cmp
out
fsubl
icebp
mov
andl
sub
stos
add
loop
popa
jo
push
cmp
cmp
addb
lcall
mov
dec
push
into
nop
mov
sbb
inc
mul
int3
mov
mov
and
inc
je
sub
inc
xchg
xchg
push
adc
mov
stos
fidivrs
adc
lds
fsubs
ret
xchg
lea
add
fdiv
ror
xlat
fbld
cmp
fbstp
mov
sbb
adc
inc
mov
jo
gs
mov
daa
dec
cmp
adc
scas
jo
add
in
xchg
stos
mov
xor
and
sti
fsubs
iret
jbe
pushf
aaa
mov
jns
addl
xor
dec
xchg
jg
imul
scas
cmp
pop
xchg
adc
mov
arpl
mov
or
sub
jne
test
and
pusha
idiv
fnstcw
leave
inc
mov
inc
outsb
inc
inc
subb
lods
and
mov
xchg
lock
mov
out
ret
insl
cmp
xor
cmp
add
dec
iret
inc
bound
pop
movsl
stc
adc
ret
out
adc
xchg
and
push
notb
cmp
lret
push
mov
scas
rol
mov
dec
inc
dec
push
orl
and
xlat
imul
xchg
mov
push
daa
push
push
sbb
inc
sub
int3
daa
pop
xchg
rclb
lods
jae
xor
xchg
fadd
andb
int3
push
xlat
pop
ss
mov
mov
mov
inc
lea
js
fs
lcall
es
out
mov
adc
pushf
jmp
push
movsl
mov
les
xchg
lcall
sti
and
cld
push
fs
add
loope
dec
pop
bound
or
imul
lods
nop
popa
and
out
imul
dec
test
es
mov
jle
lret
sbb
out
mov
xor
or
cmp
xchg
add
or
test
mov
mov
fidivs
imul
hlt
icebp
mov
adc
icebp
or
vmaxps
ret
push
inc
mov
cmp
in
cmp
enter
lcall
push
cmpsb
add
shrb
sbb
arpl
cmp
imul
cld
or
push
dec
int3
dec
hlt
pop
out
push
movsb
iret
jae
push
insl
pop
mov
mov
test
ret
sub
mov
adc
xchg
jle
lret
mov
lods
ror
sbb
sub
imul
testb
xor
daa
rcrl
loope
mov
lds
dec
push
iret
out
lret
daa
mov
test
scas
mov
cmpb
je
loope
pusha
lret
cmp
addr16
lcall
lods
xchg
pop
sti
and
push
cs
cwtl
cmp
pop
sbbb
xchg
sbb
dec
pop
dec
push
mov
xchg
cwtl
in
cmpsl
xor
cmp
mov
lods
cld
add
jae
aas
mov
sbb
sub
call
mov
and
shll
adcb
pmulhw
pop
imul
lcall
cmpsb
xchg
data16
xchg
pop
lret
sub
and
iret
mov
xchg
aam
in
dec
add
addr16
outsb
and
test
pushf
fstl
aaa
xchg
inc
pushf
popa
mov
adc
loop
lods
inc
lea
stos
jns
or
mov
inc
dec
or
push
stos
stos
xor
mov
inc
lea
lods
mov
mov
out
cld
fists
xchg
imul
inc
sbb
push
das
add
or
sub
mov
popf
xchg
addr16
mov
mov
add
mov
mov
and
in
sub
xchg
out
sub
adc
xor
add
out
xor
loop
loopne
jno
fwait
adcb
ret
mov
dec
movl
sub
xchg
loope
popa
mov
ret
fwait
cmp
mov
mov
sub
orb
inc
jne
jg
shlb
jp
fwait
cmpsl
sbb
mov
gs
bound
lcall
sbb
cmp
bound
shld
lahf
mov
sbb
ds
mov
sub
cmp
dec
aas
daa
subl
mov
aam
pop
out
add
int
pop
imul
mov
mov
int
jb
scas
int3
lods
test
les
cld
jmp
sub
jmp
ret
jns
inc
xor
das
rcl
loopne
or
mov
pop
jmp
inc
pushf
mov
cmp
jae
rcl
mov
and
shlb
ror
cmp
test
pop
out
sbb
enter
pusha
lea
gs
into
fsubrl
mov
popf
add
leave
jne
in
xor
imul
out
fildl
dec
inc
imul
popf
lods
les
mov
xor
loopne
cmp
mov
test
dec
push
mov
scas
mov
or
adc
dec
test
sub
cs
jns
repz
popf
mov
fsubrs
into
lock
test
scas
cmp
cmp
mov
cmpsl
push
jbe
and
leave
or
add
xchg
jl
jmp
push
fsubrl
stc
push
xor
lahf
fimull
cld
mov
push
jge
aam
inc
jge
idivb
and
push
fbld
in
inc
push
or
imul
outsl
inc
mov
push
cmpsb
jmp
fmull
pop
rcr
cmpsb
icebp
xchg
mov
insl
sub
addr16
mov
push
or
fldt
addr16
pop
movsl
mov
jmp
mov
pop
xor
in
les
pop
mov
lcall
repz
aas
pop
out
xlat
mov
daa
pop
mov
pushf
fwait
imul
inc
shll
sub
cmp
mov
test
and
popf
lcall
daa
pop
lock
xlat
inc
or
pop
mov
cs
add
cltd
fdivrl
jo
add
in
push
bound
popa
mov
sub
int
cmp
adc
lret
sub
cmc
imul
pop
adc
add
scas
das
push
inc
lcall
int
clc
sub
fildll
int
dec
xchg
inc
data16
push
hlt
clc
dec
aad
sar
mov
std
mov
adc
jle
fbld
inc
adc
test
dec
push
xchg
pop
dec
repz
dec
xor
mov
mov
fwait
lods
cmp
imul
mov
scas
test
pop
movsl
repz
sub
adc
jg
add
adc
stos
sbb
lret
add
jl
push
push
xor
in
subl
dec
sbb
fcmovnu
mulb
xor
rcrb
jmp
loopne
push
popl
shlb
cmp
and
sbb
dec
lcall
mov
leave
jmp
les
jle
mov
jl
clc
adc
cltd
jmp
imulb
pop
je
and
push
ja
out
xor
cmp
jp
inc
or
pop
std
stos
data16
mov
in
addr16
movsl
outsl
and
xorl
mov
clc
dec
mov
pushf
cld
jl
xor
std
stc
push
xorb
into
or
and
jmp
dec
inc
mov
push
pop
pop
mov
mov
test
aas
rol
fistpll
mov
pop
jns
lcall
xlat
jge
imul
inc
mov
test
xchg
xor
clc
push
or
lods
jecxz
mov
mov
movsl
pop
dec
xchg
test
xchg
scas
inc
and
mov
push
jnp
sarl
sub
inc
cmp
das
cmp
mov
jl
test
mov
adc
pop
sbb
adc
notl
dec
mov
mov
nop
test
popf
and
mov
leave
stc
sub
xchg
faddl
aam
xchg
test
xorb
mov
in
movsb
xchg
cltd
add
shll
jno
iret
mov
push
cmpsl
fwait
push
movsb
mov
push
cmpsb
popa
jns
add
aaa
outsb
xchg
test
fdivr
inc
bound
ret
cmpsb
das
pop
cmpsb
scas
scas
sub
lea
lcall
inc
cltd
jmp
rorb
mov
loop
imul
push
in
inc
mov
jno
ss
cmp
outsl
es
test
fnstenv
sbb
xor
sbb
int
sbb
mov
jnp
mov
loopne
inc
cwtl
push
cld
ret
cld
jno
xchg
mov
pop
in
mov
cltd
int3
testl
loope
mov
sbb
lret
mov
pop
and
popa
pop
push
pusha
testb
int
hlt
jge
mov
imul
inc
ret
shlb
into
test
pusha
adc
inc
inc
mov
jge
outsl
sbb
fwait
push
mov
sub
fistps
xor
mov
sti
out
mov
fdivrs
test
mov
sti
test
ffreep
pop
pop
int3
dec
jmp
mov
pushf
fsubrl
push
mov
icebp
jb
int
sbb
xor
lret
aam
movsl
ja
sub
jb
sbb
inc
rcrl
mov
lock
mov
inc
popa
adc
push
ret
inc
popf
es
es
sub
cmp
lods
popa
iret
incb
or
cltd
add
mov
xor
cmpsb
pushf
xchg
inc
divb
loop
loope
mov
mov
mov
xchg
or
les
dec
int
cli
inc
mov
mov
and
mov
nopl
sbb
inc
mov
mov
enter
fs
pop
nop
jb
cmp
add
addr16
fwait
sti
inc
mov
loopne
das
xor
loopne
test
xchg
xchg
pop
xchg
lea
fwait
mov
mov
push
cmp
iret
lea
leave
xchg
pushf
and
pop
ds
scas
push
fwait
fs
push
push
inc
pop
inc
adc
mov
jno
add
data16
jo
fcmovnbe
orl
add
jecxz
imul
sbb
add
jnp
mov
pusha
popf
adc
xor
inc
dec
movsb
mov
pushf
rcl
icebp
dec
or
loop
or
mov
dec
pop
sar
and
xlat
and
dec
ror
push
stc
ljmp
stos
or
lea
outsl
rorb
or
add
int3
mov
lahf
push
xor
add
add
inc
mov
and
roll
iret
or
aas
and
push
xchg
pop
in
adc
jp
sar
insb
xor
inc
xchg
mov
or
loope
lock
jg
in
dec
add
add
push
sbb
lods
xchg
mov
idivb
and
jbe
in
sbb
inc
hlt
hlt
sbb
mov
data16
cmp
adc
mov
inc
scas
imul
arpl
fwait
or
add
sbb
mov
out
mov
sbb
ljmp
lods
xchg
mov
push
test
fdivr
mov
push
and
add
mov
push
ss
xor
ret
push
lock
jbe
jg
pop
cmp
rcrl
mov
sbb
jmp
or
xor
cmp
sub
inc
repz
sub
daa
int
xlat
inc
jp
mov
adc
mov
sub
in
adc
fcomp
dec
dec
mov
ljmp
push
mulb
outsl
add
jl
mov
fwait
cwtl
xchg
push
lock
mov
jne
mov
add
mov
adc
sahf
das
and
popf
xlat
lods
or
cmpsb
call
adc
push
fidivrs
icebp
imul
bound
adc
jg
mov
inc
leave
mov
insb
lea
push
shll
inc
test
cmpsb
add
daa
mov
cmp
mull
aam
shlb
and
aas
nop
jg
dec
mov
fldcw
jle
fiadds
notb
push
sub
ficomps
mov
lock
iret
into
lret
popf
mov
pop
xchg
dec
stos
inc
test
xchg
movsl
sahf
scas
inc
fs
inc
jp
xchg
rcrl
orb
lcall
gs
imul
imul
nop
jge
and
adc
clc
aam
cmp
add
mov
add
cmp
sub
xchg
lods
stos
xchg
fadds
int3
cli
lret
dec
cmp
cmp
sbb
add
inc
decl
or
leave
cmp
mov
test
cmp
push
pop
int3
pop
sub
adc
pop
jns
loope
xlat
cmpsb
dec
sbb
sub
and
and
inc
push
test
cs
cmp
pop
data16
cmp
xchg
popa
ficoms
inc
mov
sbb
sti
jp
xor
mov
scas
mov
sub
push
rolb
dec
test
repz
js
cltd
or
push
inc
mov
mov
fstl
add
jecxz
push
xchg
mov
push
or
imul
addl
pusha
dec
movb
lods
sub
loop
xor
lds
inc
shl
enter
cld
pop
int3
mov
xchg
sbb
adc
bound
inc
xchg
adc
scas
dec
mov
loop
mov
xor
arpl
mov
jo
fs
movsl
inc
or
jmp
imul
dec
fldenv
shrb
std
cmpsb
mov
push
or
or
adc
dec
and
pop
lahf
mov
xchg
sbb
in
cld
and
iret
xor
int
cld
mov
lcall
jno
arpl
lret
ss
roll
pusha
mov
ficompl
test
scas
loop
es
cld
pop
inc
adc
and
sti
lds
fwait
scas
inc
cwtl
ljmp
ds
push
adc
xchg
pop
mov
popa
lods
fisubrs
dec
xchg
sbb
stc
pop
sbb
mov
xchg
lret
mov
adc
lods
or
imul
int
stc
cmp
cmp
arpl
insb
outsl
je
lea
jge
add
sbb
mov
cmp
xchg
mov
out
loope
sbb
xor
adc
sub
mov
inc
mov
jl
movsl
icebp
mov
out
in
dec
popa
mov
fwait
cmc
int
clc
int3
push
aad
stc
insb
push
inc
dec
mov
and
movsb
in
gs
push
fdivrs
bound
scas
ljmp
repnz
xor
push
push
or
out
nop
pop
jg
js
mov
cwtl
jg
fwait
mov
cmp
jne
sbb
roll
nop
test
fs
xchg
xchg
gs
add
cmp
dec
jne
call
xlat
inc
cwtl
sub
xchg
es
and
add
push
cmpsl
aaa
pusha
mov
shrb
sbb
test
mov
inc
sub
int
enter
or
int
push
rcr
mov
or
mov
pop
pop
in
lods
je
mov
dec
sbb
jne
or
jb
mov
pop
pop
cmp
push
jo
mov
pushf
inc
arpl
mov
clc
es
sbb
mov
lea
stos
xchg
movsb
sahf
and
cmp
mov
mov
in
outsb
addr16
and
or
add
shlb
stos
jae
arpl
les
enter
xchg
pop
push
xor
mov
sub
aam
std
inc
int3
lods
test
jbe
movsl
in
mov
push
je
and
es
xchg
andl
hlt
add
pop
cmp
cwtl
mov
ds
stos
std
lods
pop
js
mov
sbb
mov
mov
test
mov
es
rcrl
test
repz
jecxz
jne
xor
fstl
jno
sbb
push
call
bound
fisubrs
ljmp
inc
mov
outsb
cltd
adc
outsb
jmp
jne
fs
fdivrl
scas
sbb
cltd
mov
repnz
fstps
sbb
sbb
pop
loop
call
dec
jmp
sub
loopne
mov
jo
ljmp
sbb
mov
ss
or
or
xlat
dec
add
bound
sub
cmpsb
ret
push
test
mov
push
jmp
fstpl
les
decb
jne
inc
sbb
data16
mov
dec
jae
jge
sbb
xchg
es
mov
push
jb
test
sti
out
mov
loopne
enter
mov
mov
jo
out
loope
push
jno
das
pushf
rep
jle
push
jne
test
push
imul
fdivl
sbb
shrb
idivb
cmpsl
leave
rcll
jl
and
rclb
sbb
jp
fdivr
mov
lret
mull
jnp
sub
xchg
ret
and
inc
popf
xchg
inc
xchg
je
or
add
cmovno
imul
das
fbstp
addl
jmp
lret
and
inc
jne
xchg
es
rorb
insb
add
jecxz
fidivrs
cmc
stc
int3
orb
jp
mov
jo
mov
mov
mov
std
xorl
sahf
mov
das
daa
jp
fbstp
adc
arpl
cmpsb
jle
daa
mov
inc
lea
inc
jnp
xor
ljmp
sbb
push
cli
jns
xor
pop
in
insb
loopne
sub
scas
scas
xchg
ja
adc
or
xor
test
or
lret
iret
mov
fnstcw
xchg
roll
jecxz
jb
leave
adc
inc
push
fs
scas
pop
jecxz
sarb
mov
dec
add
mov
std
mov
xchg
mov
and
add
repz
mov
pushf
cmpsb
mov
flds
arpl
cmpsb
xor
lock
xchg
pop
inc
notl
mov
pop
outsl
mov
hlt
cmp
mov
js
cmp
sub
mov
sbb
xor
mov
in
mov
inc
adc
pushf
ljmp
fisttpl
jno
movsb
test
pop
lret
sbb
sahf
jl
mov
push
mov
push
insb
repnz
or
lahf
subl
push
outsl
mov
jne
cmp
adc
fcoms
add
imul
mov
es
xrelease
repnz
pop
ljmp
push
or
sarb
mov
cmpsb
mov
and
add
frstor
and
dec
inc
add
pop
and
enter
or
add
pusha
aas
sahf
jmp
and
pop
aas
int3
cwtl
addr16
js
iret
xchg
xchg
jo
mov
xchg
xchg
inc
cli
xor
scas
jne
push
js
out
add
mov
cmp
push
mov
pop
push
mov
scas
mov
pop
mov
jb
xchg
inc
push
jno
lods
xor
ds
rolb
fbstp
lea
mov
nop
push
cmpsl
pop
add
mov
add
jns
add
dec
pop
scas
dec
mov
push
cmp
or
sub
cmp
push
sbb
insb
xlat
shll
inc
arpl
dec
lret
jne
stos
gs
push
cwtl
gs
push
add
push
inc
popl
dec
fwait
shlb
pop
mov
push
sub
pcmpeqd
push
pop
sub
mov
test
cld
xorb
jmp
jno
test
inc
lock
mov
iret
mov
rolb
stc
mov
cmc
mov
aad
in
loop
fcomp
adc
adc
jecxz
push
test
jnp
lret
push
decl
sbb
cli
loope
xor
shll
test
in
dec
adcl
inc
iret
mov
dec
pop
mov
sbb
mov
xchg
sbb
mov
insb
jns
call
jp
scas
cmc
std
sbb
push
xchg
shrb
inc
out
mov
ja
loop
and
push
adc
push
push
mov
xchg
pop
mov
xchg
dec
cmp
jp
dec
jns
inc
movsb
in
pop
stc
mov
cmp
jns
xchg
ret
fld1
les
push
xor
movsl
in
ss
lods
xor
xor
aam
std
sbb
push
xchg
sbb
pop
push
or
fcomps
in
movsl
ret
dec
xchg
push
icebp
dec
pop
jle
mov
insl
xor
les
dec
xchg
adc
movsb
outsl
mov
cmpsb
rorl
les
adc
jg
adc
lods
cli
cmpsb
test
fsubrl
push
jno
lahf
sahf
xchg
cmp
mov
in
jl
jns
out
dec
movsl
push
xchg
push
in
adc
mov
lret
dec
sub
fnsave
xor
stos
imul
mov
cli
hlt
and
xchg
test
lcall
fdivrs
ss
aaa
jo
or
mov
stos
sbb
lret
dec
cmp
jnp
add
stos
sbb
inc
mov
cmp
aam
rolb
into
cltd
mull
jbe
lret
out
popf
rcl
jge
leave
ljmp
je
jecxz
inc
xor
xchg
ret
push
dec
sub
cmp
dec
mov
sub
sahf
fucomp
dec
mov
pop
add
cli
or
jp
cli
in
movb
inc
pop
fdivr
pusha
push
pop
push
inc
popa
rolb
jg
lea
cmp
cmpsb
sub
and
sub
pop
cltd
aam
test
jb
stc
rcrl
add
test
sub
dec
pop
movsb
cmp
ret
mov
cmp
or
into
shlb
jg
jmp
adc
outsb
int
pop
or
mov
int
xor
clc
mov
cmpsb
inc
mov
push
dec
pop
mov
sub
mov
inc
push
aad
and
je
mov
sbb
daa
data16
shr
or
in
stos
sbb
leave
jle
mov
popa
add
nop
pop
hlt
rolb
jge
lret
imul
mov
sub
movsb
je
test
loop
pop
mov
notl
adc
daa
movsb
addr16
mov
test
arpl
cmp
add
cmp
dec
mov
xchg
pop
das
sub
add
test
push
test
mov
in
ss
add
popf
ljmp
clc
jbe
add
mov
xchg
movsl
cmpl
pop
movsb
cli
or
insl
cmp
adc
test
lahf
adc
adc
fld
cli
sti
inc
push
push
inc
mov
or
adc
jp
pop
shrl
jo
push
cmp
pop
lods
inc
xlat
lret
das
scas
popa
in
xor
arpl
mov
clc
in
xor
adc
int
mov
out
int3
mov
pop
and
movsl
stos
push
push
pop
xor
or
push
pushf
scas
arpl
inc
cmp
pop
xor
sbb
in
pop
call
pop
adcl
into
pop
call
xchg
push
jge
jb
lods
ret
data16
lret
xor
push
pop
dec
out
cmpb
fnstsw
pop
and
inc
mov
xchg
mov
shl
cmp
jl
xchg
movsl
jae
notl
mull
inc
lret
adc
pop
push
int
pop
pop
push
lods
dec
push
mov
jg
mov
mov
sub
xor
jge
addr16
lahf
cmp
ficoms
cmp
fwait
or
jecxz
lock
and
jp
into
ja
ds
and
movsl
xor
ds
repz
ds
jp
mov
xor
jl
insl
jge
cwtl
sbb
mov
bound
push
movsb
int
and
test
push
cmp
inc
cmp
das
mov
faddl
cmp
js
mov
and
jne
mov
ds
sub
aam
lods
mov
sbb
jne
int3
xor
jbe
sub
lahf
sub
mov
cmpsb
cmpsb
push
fcompl
mov
movsl
add
call
xchg
pop
clc
lods
lods
mov
repz
pop
cmpl
pop
or
movsl
sbb
fists
gs
out
adc
lcall
gs
repnz
popf
stc
imul
adc
out
movsb
lcall
sbb
inc
pop
sbb
rclb
adc
cmc
aas
pusha
int3
jmp
and
mov
ljmpw
dec
pop
outsl
xchg
cmp
cmp
push
inc
mov
or
cmp
imul
jne
stc
loop
shlb
add
sbb
push
xor
mov
addr16
call
push
mov
xor
xchg
fsubs
outsb
cmp
cld
stos
cmp
jp,pn
clc
cld
icebp
sub
jb
test
and
and
mov
jge
mov
pop
jmp
dec
dec
stc
xchg
cs
pop
dec
mov
cmpsb
rcrl
inc
pop
mov
xchg
pop
fcmovu
sub
loope
pop
stc
and
add
xchg
aam
add
pushl
icebp
dec
jbe
xor
sub
fnstcw
sub
pop
pusha
push
cmp
and
fcomi
mov
dec
xlat
pop
xchg
and
leave
cmpsl
push
fisubrl
outsl
jae
std
fs
insb
mov
mov
sbb
es
cmp
jbe
pop
pop
pop
inc
push
icebp
mov
in
cmpsl
and
mov
gs
cs
sbb
add
repz
int3
jle
cmp
faddl
and
mov
xchg
stos
movsl
in
or
mov
imul
iret
inc
jbe
and
pop
cmp
and
out
push
add
mov
ja
dec
push
repnz
or
ja
imul
cmp
push
fs
cmp
xchg
inc
lahf
inc
sub
in
or
cmp
ficompl
pusha
insb
push
int3
inc
adcl
cmpsb
pop
and
addr16
scas
jmp
push
pop
inc
pop
cmpsb
scas
iret
ja
sub
clc
jmp
jge
rol
jo
xchg
out
cld
mov
stc
sub
adc
pop
push
sbbb
ret
cltd
ret
in
xor
pop
outsl
outsl
ret
fdivl
adc
dec
xor
enter
in
adc
mov
xor
lock
jp
mov
ss
mov
sti
sti
int
and
sets
pop
xor
push
adc
in
je
mov
push
in
out
xor
std
pop
test
addl
sbb
xor
enter
ficomps
loope
bound
popa
jno
inc
push
add
cmp
lahf
jecxz
test
out
xchg
ret
mov
ss
sbb
sub
inc
aaa
es
mov
jae
clc
sarl
cmpsb
xchg
add
lcall
call
ds
ror
mov
movsl
xor
loope
outsl
add
mov
scas
test
pushf
xor
sub
xlat
stc
jmp
dec
test
in
pop
xchg
sub
int3
subb
aas
aam
sub
fnstcw
pop
ret
pushf
jp
pop
es
notb
sub
out
lret
int
inc
lret
add
sbb
inc
or
sub
add
push
bound
push
push
shr
xor
arpl
sbbl
aas
ja
sub
aas
jns
sti
lods
test
jg
cmp
mov
cmp
insb
into
push
adc
inc
ss
mov
pop
or
ja
mov
in
mov
sub
sub
pop
into
dec
daa
bound
lret
lcall
ficoml
test
sbb
adc
mov
in
xor
sbb
clc
jle
add
jae
lods
nop
insb
sub
leave
js
mov
rcr
shr
lods
add
inc
cmp
mov
add
inc
xchg
pop
push
in
add
jl
repz
push
mov
in
fimull
sbb
push
add
mov
dec
mov
ljmp
and
nop
sub
mov
js
mov
call
pop
add
leave
lcall
mov
jb
fstl
gs
lds
cmp
push
dec
jb
ret
testl
repnz
rcrb
xor
ret
sbb
mov
ljmp
sub
idiv
mov
imul
dec
pop
cmp
mov
scas
sub
ret
sahf
jb
cs
dec
cmp
mov
cs
cmp
sbb
fidivs
push
aad
jae
add
sbb
xchg
sahf
cmp
push
nop
xchg
fisubrl
call
bound
jp
add
popa
mov
inc
inc
dec
push
sbb
cs
rcrl
ret
cltd
dec
jmp
cmpsl
popa
mov
push
out
push
pop
and
push
daa
pop
test
dec
fistpl
mov
or
jg
inc
mov
pop
cmpsb
andl
out
rolb
dec
mov
adc
or
adc
shll
dec
loopne
into
aaa
out
cli
inc
hlt
cmp
fisttpl
imul
or
and
pop
fildl
pop
cmpsl
lcall
xor
bound
add
addb
cli
xchg
add
mov
or
sub
rcll
scas
jmp
jle
nop
mov
xchg
push
stc
add
lock
xchg
jle
sub
push
cmp
rcll
call
or
and
cmpsl
cwtl
xor
adc
nop
push
repnz
mov
into
stos
inc
inc
inc
dec
gs
pop
fstps
jae
inc
addb
jmp
sahf
xchg
adc
lcall
sbb
scas
imul
and
addr16
jp
dec
daa
inc
mov
or
dec
xchg
add
jge
loopne
mov
dec
jae
push
pop
push
aas
out
and
push
adc
and
lahf
std
incl
xor
adc
mov
adcb
sbb
jns
fldt
or
dec
loop
push
mov
mov
pop
testl
aas
mov
pop
pop
scas
inc
dec
inc
jp
cmp
mov
push
jge
mov
inc
jno
fdivrs
lods
sub
push
orl
into
or
jae
cmp
cmp
pop
or
or
push
inc
mov
mov
cmp
imulb
pop
lret
pop
add
iret
movsb
inc
imul
cmpsb
dec
sbb
cmp
movb
mov
push
cmp
loopne
xor
xor
insb
bts
push
xchg
scas
rolb
mov
inc
imul
xor
pop
jle
test
pop
int
js
fsub
popf
es
cld
add
jge
jbe
arpl
push
mov
ljmp
cmp
or
dec
cs
adc
lahf
scas
hlt
arpl
lcall
and
cmpb
inc
imul
and
nop
lods
pusha
dec
or
daa
mov
sbb
sbb
fstps
cmp
ja
add
shll
push
fldcw
adc
shrl
jb
fisttpl
test
mov
mov
fimuls
jns
inc
jle
jecxz
mov
xor
sub
lcall
fistl
repnz
pop
jae
fdecstp
mov
pop
dec
pushf
sbb
out
pop
sub
jb
jp
mov
add
inc
fistl
sbb
add
dec
cmp
out
inc
pop
pusha
mov
sarb
xchg
cmpsl
xor
imul
push
xchg
push
xchg
jmp
mov
clc
lret
shrb
jl
jmp
sub
dec
mov
and
cmp
mov
xor
dec
sarb
dec
jg
les
rclb
daa
leave
lret
push
inc
sub
jmp
or
out
xlat
add
movsb
js
int
fsub
xchg
cltd
fildl
xchg
nop
rorl
pop
nop
aad
idivb
xchg
lds
dec
xchg
mov
xor
jno
cli
xchg
jp
cli
loopne
clc
dec
cmp
movl
cmc
dec
stos
push
push
test
jne
mov
fisttpl
fisubs
popf
movsb
push
sub
loope
fdivr
pop
xor
decl
lock
push
rcrl
test
movsl
push
test
lahf
sbb
nop
dec
jecxz
shrb
enter
pushf
filds
out
fcomps
rcrb
call
mov
pop
jae
sbb
stos
xchg
pop
and
das
sub
xchg
lahf
out
mov
lea
jp
mov
xchg
out
sub
or
dec
cmp
xchg
out
sub
sub
cmp
aad
push
orl
push
sbb
jno
cltd
cltd
inc
cmpsb
dec
lret
xor
xor
jecxz
jg
lock
stc
test
cmpsb
inc
je
subl
fistpll
test
mov
fimull
fs
add
cli
cmp
push
repnz
adc
decl
stos
sub
adc
stos
cmp
das
je
pushf
and
mov
or
and
push
sub
ja
lret
sub
std
ja
dec
into
cmpsl
xor
sahf
clc
data16
xchg
cmp
ss
xchg
into
jno
xchg
inc
cmp
int3
popf
das
jge
and
and
xor
adc
xchg
test
int3
lret
or
push
cld
movsb
and
outsl
movsb
push
fwait
mov
ret
push
insb
cmpsb
ret
lds
jo
xlat
pusha
ret
xor
sti
sbb
adcb
int
loop
out
pop
ret
xchg
xorb
or
rorb
xchg
xchg
loop
or
popf
test
repz
sub
cltd
icebp
das
rcrl
dec
scas
repnz
mov
out
lds
sarl
mov
sbbl
sub
ja
xchg
xchg
mov
push
dec
mov
imul
add
imulb
xchg
and
les
pop
daa
lods
mov
adc
out
fldl
loopne
iret
rorl
movsl
int
push
cmc
xchg
out
decl
test
pop
aam
mov
fadd
loope
les
add
into
dec
movsb
es
out
stos
decb
arpl
mov
hlt
insb
jecxz
aaa
or
nop
pop
es
push
jns
fistpll
test
lret
cmc
push
cmp
fwait
in
xor
enter
in
jae
test
xor
test
jmp
adcb
pusha
xor
sbb
fwait
mov
dec
movsb
cmp
sbb
add
scas
jb
sarb
adc
in
insb
imul
and
insl
rorb
scas
pop
rcr
xor
xor
test
enter
repz
in
aad
and
pusha
or
inc
hlt
test
mov
xchg
pop
mov
and
adc
add
outsl
push
je
cmp
cltd
adcb
stos
aas
lods
ljmp
fisubrl
ret
jo
test
arpl
or
je
sbb
subb
push
push
sarl
sahf
pop
pop
sbb
pusha
jo
aad
sti
aam
minps
es
jl
aaa
sbb
push
jb
mov
sbb
jno
inc
sub
dec
sub
loope
dec
xor
xchg
inc
hlt
jg
lret
dec
jo
fadds
adcb
xchg
mov
cmp
ds
xchg
adc
js
jecxz
jae
cli
clc
inc
movsb
add
jb
cwtl
sarl
xor
into
out
push
sub
arpl
push
push
lahf
pop
inc
inc
test
and
push
mov
xchg
push
xor
outsl
int3
lods
and
stc
pushf
lahf
dec
push
cmpsl
xor
cmp
xchg
ds
mov
hlt
das
rolb
sbb
cmpsb
rorb
cmp
cwtl
in
stos
incl
mov
das
outsl
adc
cmp
jne
fcompl
push
outsb
dec
or
jb
icebp
xchg
push
div
mov
push
sbb
repz
or
hlt
movsb
scas
ror
shll
xchg
mov
dec
mov
lods
mov
or
scas
push
out
rcrb
jnp
inc
sub
push
ficoms
sahf
mov
sub
cmp
mov
sub
aam
in
icebp
mov
leave
insl
es
or
cmp
inc
sbb
aad
fnstcw
test
subl
dec
mov
xor
fstpl
xchg
and
jle
clc
test
push
xorb
insb
sbb
mov
and
adc
adc
or
add
and
cmp
sub
addr16
inc
jmp
pop
addr16
icebp
test
and
out
pop
and
mov
lcall
movsb
pop
decb
cs
fildll
mov
sub
test
jmp
movb
push
jmp
fldcw
sarl
test
cmpsl
cmc
ret
ja
and
mov
push
inc
icebp
into
jge
incl
pop
ror
loop
stos
scas
fmul
xchg
push
fcomip
jp
fildll
mov
sub
hlt
test
movsl
aas
pop
mov
push
mov
out
std
jb
push
sub
mov
adc
pusha
mov
sbb
rcrl
mov
negb
or
xchg
mov
fsubrl
loopne
adc
movups
xchg
movsb
ret
insb
pop
xlat
mov
push
inc
pop
ss
push
es
ds
out
sbb
adc
xor
adc
add
lcall
push
fisubrs
push
mov
mov
sub
out
addr16
pusha
adc
fcoml
xor
imul
jp
addr16
enter
jnp
inc
lods
fldenv
mov
push
rcrb
lahf
mov
shl
insl
xchg
mov
js
std
mov
add
movaps
test
mov
dec
dec
xchg
xchg
push
dec
cmp
cmpsl
sub
loopne
xor
je
cld
pop
aam
jmp
mov
test
push
sub
addr16
jl
stc
inc
jmp
push
jge
xor
dec
leave
mov
push
mov
imul
add
jmp
jbe
xor
inc
and
shrb
mov
das
cld
dec
pop
mov
xchg
xor
out
add
cmpb
add
xchg
xchg
pushf
pop
shlb
xor
push
or
ja
push
push
or
pop
or
xchg
sbb
out
lret
inc
cmp
push
mov
or
add
rclb
into
ja
popa
cmp
or
xchg
mov
stc
cmp
cmpsl
rcl
stos
mov
fisubl
in
add
adc
mov
pop
mov
in
mov
mov
jg
dec
pop
and
cmp
roll
rolb
push
jp
int
decb
movsb
dec
xor
je
sub
fmull
popa
cmpsb
insb
sahf
or
jmp
push
sbb
hlt
popf
xchg
pop
fdivl
push
mov
cmp
mov
in
jg
and
cmp
mov
xor
and
int3
lret
mov
fwait
cmc
jp
popf
hlt
inc
jl
cmp
lock
inc
test
lahf
push
orb
mov
arpl
lods
adc
iret
jns
or
or
rcll
jbe
push
imul
pop
in
lods
shll
das
sbb
mov
jle
hlt
rcrl
hlt
sbb
and
mov
icebp
and
mov
xor
sub
cld
lods
pop
add
lret
mov
xchg
xchg
shl
movsb
inc
flds
and
mov
mov
jnp
dec
popa
pop
and
mov
add
imulb
shlb
jae
inc
jmp
pop
jae
je
enter
rclb
js
les
pop
cld
sub
push
sbb
jmp
gs
adc
out
das
push
push
and
mov
xor
pushf
mov
push
fsubp
outsl
aas
and
fadds
nop
aaa
fcomi
call
adc
sub
adc
cmpsb
loopne
out
lret
bound
xchg
sti
xchg
adc
shll
jecxz
xchg
lods
movsl
popa
lock
dec
mov
hlt
ljmp
add
loopne
adc
pop
mov
or
rcl
lahf
cmp
sub
dec
sbb
sti
sub
xor
popl
and
xor
mov
gs
jbe
jl
loopne
imul
sbb
sbbl
mov
call
xchg
mov
outsb
cmp
and
ds
pop
in
xchg
rcll
xor
mov
add
dec
mov
imul
pop
jl
in
and
push
jl
dec
das
pop
sbb
aam
add
pop
ljmp
cmpsb
mov
jb
test
outsb
adc
push
ror
sbb
sbb
fnstsw
cmc
jge
or
jns
adcb
fimuls
data16
add
sbb
das
test
sbb
push
mov
sahf
and
repz
inc
push
pop
mov
push
decb
jns
loop
sbb
int3
fucomi
mov
or
enter
lock
mov
pop
das
cmp
lock
nop
ljmp
pop
xchg
and
sub
add
fisttps
popf
sbb
ds
push
je
add
test
pop
insl
or
xor
pusha
dec
push
sub
xlat
out
jl
shll
adc
insb
add
clc
rclb
mov
dec
add
scas
xor
mov
sahf
add
dec
movsl
xchg
ss
std
sub
clc
fisubl
icebp
arpl
jg
mov
sahf
or
arpl
cli
divb
cmp
add
dec
sbbb
add
out
sub
incb
scas
clc
adc
aam
inc
mov
insb
sti
mov
mov
test
incb
push
pop
xor
dec
popa
xchg
test
scas
or
adc
in
dec
jnp
inc
mov
jecxz
pop
cmpsb
sub
lods
fadds
repz
andl
mov
ja
mov
scas
in
mov
xchg
dec
push
es
jnp
shr
mov
lock
iret
add
mov
jb
xchg
ljmp
xchg
addb
negb
mov
jne
rcll
mov
cmp
or
adc
cmpsl
sub
fisubrl
push
push
shr
inc
dec
adc
sub
fnstsw
mov
mov
imul
ror
call
xchg
dec
fcomp
les
push
outsl
inc
ficomps
idivb
subl
stos
ret
lea
nop
or
dec
out
xor
push
push
ss
pop
fs
adc
or
sub
sub
push
add
daa
mov
cmc
xchg
mov
cmp
sbb
mov
mov
mov
iret
aaa
shrl
stos
pop
js
sub
xchg
and
popa
mov
jne
clc
xchg
nop
dec
lds
mov
jne
popf
push
sahf
inc
mov
test
xlat
jno
sub
mov
and
mov
adc
in
jmp
pop
jne
pop
cmp
test
xor
pop
fdivl
dec
movb
loopne
adc
sub
je
cmp
lcall
fwait
sub
add
xchg
and
and
divb
sbb
dec
sbb
push
mov
inc
push
sbb
push
pusha
int3
mov
lahf
mov
test
jnp
out
shl
sbb
pop
jnp
pop
call
inc
fs
sbb
sbb
jecxz
jmp
push
add
orl
out
xchg
pop
aam
sub
pop
aas
inc
inc
xor
sub
out
push
cwtl
movsb
call
fmulp
shlb
in
cmc
imul
mov
je
push
jmp
cmp
cmp
enter
sbb
push
pop
jp
jno
out
push
xchg
cs
add
int3
pop
push
push
fdivrl
lods
mov
pop
and
call
in
adcl
cmpsb
xchg
mov
aam
sbb
shll
int3
jne
mov
xchg
adc
inc
test
out
jge
aaa
and
sub
add
sub
sub
xchg
mov
rcr
scas
ljmp
out
lods
xor
loop
mov
or
adc
sub
dec
hlt
jbe
sti
mov
repz
cmp
inc
sub
je
cmp
jns
xor
xchg
xor
xchg
sub
stc
sbb
aam
shl
fldenv
xor
daa
jmp
das
xsaves
rorl
adc
lcall
jns
jmp
xor
sbbb
push
test
popw
pushl
repnz
cmpsl
ljmp
add
jmp
xor
stos
mov
aad
inc
mov
jmp
sbb
sbb
pop
sti
adc
lock
jbe
sub
stc
cmp
jb
inc
mov
xlat
and
sbb
sahf
aad
das
cmp
in
mov
sar
jg
sahf
push
sub
rorb
sub
inc
add
mov
das
push
xor
or
rcl
adc
mov
bound
xchg
adc
lea
xor
jnp
cmp
mov
rolb
loop
pop
lea
add
in
rolb
pop
ljmp
cli
pop
push
into
or
lods
inc
or
popf
sub
xchg
jno
outsb
popf
mov
and
sbb
or
outsb
out
fbstp
add
in
push
pop
out
addr16
sbbl
stos
xchg
jne
xchg
out
test
adc
fists
dec
lds
outsl
mov
aas
sbb
jb
cltd
jp
mov
cli
fdivrs
jae
rorb
mov
aad
cmp
and
addr16
loopne
cmpsb
mov
mov
cld
jns
test
mov
mov
dec
decl
fistl
sbb
jg
cwtl
in
jge,pn
cmpsl
mov
or
xor
add
stos
mov
xchg
enter
shl
outsb
addr16
push
icebp
shll
pop
sbb
gs
ret
loop
cld
jmp
sbb
out
pop
aaa
xor
test
add
dec
das
dec
xchg
mov
cmp
aaa
push
cmp
mov
test
push
mov
jecxz
jnp
xor
nop
aas
cmp
iret
subl
mov
cmp
and
push
adc
roll
push
testb
aas
mov
in
adc
or
inc
dec
ss
mov
ffree
cmp
in
mov
or
cmp
clc
out
dec
sub
mov
std
jmp
lods
fwait
mov
sarl
xor
push
roll
out
mov
mov
push
push
jnp
das
push
push
in
mov
xor
push
std
mov
jge
loopne
jg
cmp
push
js
js
pop
sarb
inc
jbe
sbb
mov
push
aad
int
or
cmp
push
add
xlat
inc
add
and
pop
into
xchg
bswap
icebp
stos
fidivrs
movsl
dec
icebp
out
lcall
xchg
push
jne
test
sahf
jle
push
pop
mov
inc
push
arpl
mov
xchg
jo
xor
stos
loope
jnp
lds
fs
and
and
call
les
pop
mov
mov
jl
ror
scas
xlat
test
mov
jnp
sbb
mov
xor
leave
sub
cmp
pop
ja
xor
movl
sti
out
jge
add
sti
sbb
dec
xchg
lods
mov
mov
jmp
push
sub
out
and
ljmp
lret
dec
fnstcw
mov
pop
jp
insl
into
push
and
push
cmp
ljmp
stos
dec
jp
es
cmp
pop
mov
movsl
push
mov
mov
push
cltd
repnz
jbe
lret
and
xchg
divb
xor
loopne
ret
sahf
jae
xlat
in
inc
insl
xchg
or
das
lret
pushf
in
jns
or
popa
and
push
test
push
stc
popa
inc
and
dec
inc
aam
ret
loop
in
and
mov
jo
and
loopne
jecxz
dec
in
sbb
jns
jnp
fs
adc
loop
data16
in
clc
lcall
mov
out
call
or
push
nop
out
cmc
hlt
fwait
test
xchg
dec
scas
js
orl
push
pusha
ret
mov
inc
movl
push
sahf
cmp
dec
repz
and
sbb
cld
add
movsb
mov
jno
arpl
cmp
jge,pn
fcmovbe
adc
mov
outsb
xchg
es
scas
ja
push
push
call
inc
imul
mov
pushf
loope
mov
stos
push
mov
mov
shlb
fnsave
push
cltd
jecxz
jg
popf
xchg
or
jge
and
mov
imul
sbb
adc
mov
xchg
je
fdivrs
or
push
fildll
xor
cmp
pop
rdtsc
cli
test
mov
mulb
orl
adc
arpl
jmp
ljmp
std
mov
call
cs
iret
push
mov
setl
popa
adc
or
inc
cmp
push
mov
or
jle
xor
xor
cwtl
cmc
add
sub
dec
add
lds
sub
xchg
aaa
jo
mov
mov
outsl
jo
pop
enter
jb
pop
mov
addr16
test
pushf
cwtl
xor
sbb
or
stos
lods
fnstenv
ja
aas
mov
daa
addl
jbe
imul
mov
pop
fisttps
mov
cld
arpl
inc
mov
cli
xor
jmp
push
push
aad
cld
push
jmp
fdivr
mov
shl
cmpl
push
loopne
add
push
out
adc
dec
xor
cli
jno
add
cmp
cltd
pop
adc
pop
ljmp
jnp
gs
mov
or
lods
sub
adc
jnp
lcall
lahf
mov
shl
popf
popf
push
cmpsb
mov
fs
out
sbb
jo
clc
popa
stos
adcb
sbb
dec
pop
mov
jo
test
add
jmp
test
adc
lods
loop
and
push
andl
cmc
and
push
xor
dec
enter
jl
je
sahf
cmp
addr16
jo
push
mov
mov
adc
add
push
aas
and
fidivrl
lcall
push
xor
rorb
mov
sbb
cmc
inc
jecxz
cmp
mov
inc
mov
scas
xchg
xor
shl
addr16
sub
cs
add
popa
sub
mov
rcrl
push
adcb
lret
dec
xchg
leave
es
sbb
sub
pop
lahf
sbb
ljmp
cmp
pop
push
mov
xchg
push
packssdw
xor
mov
push
jo
adc
aaa
or
jae
push
and
inc
xor
cmp
or
mov
pop
loope
inc
pop
jle
cli
out
push
imul
mov
sub
mov
add
mov
lahf
mov
test
mov
cwtl
cmc
cwtl
cmp
or
mov
jecxz
iret
sti
ss
sub
fdivl
cld
stos
loope
clc
gs
xor
jle
mov
loop
or
sar
pop
jne
or
pusha
daa
fnstsw
mov
jp
push
push
add
xchg
sub
icebp
les
ds
sarl
sub
test
xchg
js
xchg
mov
loope
mov
cmc
jl
hlt
add
inc
jbe
add
loop
jmp
sub
gs
fmull
xor
xchg
mov
pop
fimuls
inc
sub
mov
xchg
mov
jbe
push
or
and
jl
cmc
push
cmp
mov
push
aas
das
push
call
push
mov
cwtl
adc
xchg
and
push
or
or
xchg
mov
gs
sub
lret
cmp
cmp
mov
jmp
mov
xor
sahf
fildll
cltd
pop
ret
adc
fs
out
or
mov
mov
fisubrs
and
push
cmp
dec
sar
and
inc
inc
jle
lods
lret
add
scas
xor
movsb
cmp
aad
mov
addl
test
cmp
stos
insl
cmpl
outsl
jb
xor
jmp
and
jno
mov
push
adc
decl
test
test
ds
gs
xor
and
cmp
and
aas
fcoms
adc
jne
ret
mov
mulb
hlt
stc
repnz
or
pop
lret
ret
lret
lea
into
fstps
adc
sbb
lods
dec
sbb
jae
mov
sbb
xor
popf
aam
mov
test
or
fldl
pxor
int
cmpl
mov
mov
mov
nop
pushf
scas
loopne
inc
add
mov
into
lahf
ljmp
lods
fstl
mov
mov
xchg
cmp
dec
lahf
or
pop
or
xlat
ja
pop
shl
mov
sbb
cwtl
ja
arpl
push
lahf
sahf
cmp
inc
sub
test
push
sbb
jge
gs
lods
mov
mov
sbb
push
jne
lret
hlt
adc
and
repnz
data16
mov
adc
xor
add
pop
pop
and
aas
jae
jmp
mov
xchg
ret
pop
faddp
repnz
cs
adcl
mov
stc
mov
xchg
nop
aad
and
shrb
inc
movsb
mov
leave
mov
out
fisubrl
jnp
loopne
xchg
ret
xchg
pop
mov
js
bound
leave
mov
mov
adc
mov
xchg
pusha
movsb
mov
das
jne
sbb
jb
push
cmp
pop
inc
push
pop
aaa
scas
scas
xor
xor
sub
daa
iret
inc
stc
stos
in
and
in
xor
scas
mov
xor
push
mov
inc
dec
sbb
mov
mov
decl
or
or
cmp
push
mov
cwtl
into
sbb
mov
dec
out
push
scas
data16
push
in
popf
mov
data16
xchg
bound
jb
add
push
int
loope
sbb
pop
cmpl
xchg
or
and
ret
mov
push
or
rcrl
xchg
hlt
xchg
pusha
adc
test
mov
es
mov
pop
inc
ror
xchg
sbb
xor
jle
add
mov
int3
ja
test
add
dec
test
sub
aaa
mov
das
add
dec
aad
rcrb
jno
leave
sar
dec
cld
mov
push
enter
rorb
xchg
dec
mov
insl
xchg
and
or
mov
mov
enter
call
fwait
maxps
xor
xchg
aam
fstpt
cmpb
xorb
mov
sarl
add
adc
scas
adc
mov
adc
hlt
or
or
xor
xchg
ds
aas
lea
out
dec
stos
shlb
or
ret
fdivrs
mov
jns
jae
sahf
push
xchg
fs
jmp
cmpb
pop
outsb
add
repz
mov
mov
test
rol
mov
dec
xchg
js
push
lods
sbb
mov
lret
mov
inc
adc
dec
nop
xorb
mov
pop
inc
dec
pop
out
mov
sub
nop
add
jmp
es
sub
lret
test
iret
fcomps
std
push
je
je
fdivrs
data16
sub
jae
dec
clc
adc
ret
push
and
add
jecxz
mov
dec
jo
xchg
ret
pop
scas
ss
mov
dec
scas
es
jmp
xchg
lret
cmp
pop
and
inc
hlt
dec
pop
sub
lcall
jb
xlat
pop
ljmpw
pop
or
icebp
lds
push
loope
pop
cmp
inc
xorb
xchg
int
ret
test
xchg
popa
lock
sbb
jecxz
or
cltd
test
gs
shlb
jno
loope
xor
sahf
push
or
push
mov
pop
sub
insb
aas
loope
jne
lock
lods
cld
inc
jp
scas
cwtl
ljmp
xchg
adc
jg
mov
mov
fucomi
loop
jbe
push
cs
and
sub
leave
cmp
xchg
adc
mov
inc
mov
negb
fisttps
mov
xor
icebp
or
es
mulb
pop
js
jns
mov
or
inc
stc
out
xlat
cmp
add
test
fcmovb
or
call
lock
mov
jg
clc
out
es
xor
xchg
pushf
and
push
sub
fmull
lahf
push
mov
fwait
sub
in
or
test
loopne
jecxz
pop
shlb
inc
jmp
inc
cltd
in
std
cmc
shll
mov
jecxz
ja
inc
add
xchg
mov
mov
movsl
orl
bound
negl
sti
pop
cmp
scas
xor
inc
cwtl
inc
xor
enter
fidivl
fdivs
ret
lds
sub
aam
pushf
in
rcrb
dec
add
lahf
cld
addr16
lea
xchg
fnstcw
sahf
les
das
shlb
jg
lret
pop
mov
and
fs
test
push
mov
popf
loope
cmc
push
fisttpll
aam
or
pop
rcr
push
movsl
negl
jbe
imul
lahf
xor
pushf
dec
test
pop
stos
ljmp
push
xchg
leave
mov
mov
subl
lret
orl
mov
ds
int
lods
fimull
icebp
or
decl
inc
cmp
icebp
jnp
ret
cli
data16
leave
push
xchg
fwait
pop
std
insb
add
data16
mov
push
mov
adc
out
inc
loop
outsl
ficoms
lcall
ds
int3
int3
addb
xor
xor
adc
fisttps
jge
push
xlat
ljmp
adcb
shll
push
adc
sub
adc
mov
mov
aad
mov
sti
aaa
loopne
xchg
pusha
and
movsb
ret
fmull
fsts
ret
scas
outsb
test
sbb
dec
rorb
mov
sub
push
push
ja
fildl
sbb
stos
adc
loopne
push
mov
fwait
arpl
cwtl
cmc
ds
mov
stos
jg
inc
adc
jle
mov
mov
or
out
xor
hlt
nop
cmp
or
cmp
push
stc
push
jmp
pop
jl
repz
cltd
sub
mov
in
mov
push
mov
shll
jl
push
leave
fwait
mov
les
xor
jle
adc
daa
pop
and
ljmp
test
jge
inc
push
jg
mov
pop
push
sub
int
xor
mov
lea
cmp
push
jo
bound
xchg
mov
popa
les
dec
xchg
scas
stos
inc
shll
mov
roll
lea
lock
mov
minps
pop
lcall
inc
filds
jne
add
push
stos
add
jae
xchg
fisttps
lods
ds
pop
loopne
cmpsb
fnstsw
jmp
xchg
dec
into
fisttpl
ss
testb
cmc
lret
ljmp
mov
mov
push
xchg
fcomps
inc
add
mov
sti
ret
lahf
out
xor
repnz
sub
shrl
outsl
dec
rcll
jecxz
popf
mov
mov
outsl
xchg
adc
jns
scas
adc
test
mov
in
cmp
or
or
or
loope
mov
cmp
addr16
iret
mov
in
or
shll
mov
or
in
push
mov
sbb
lret
or
pop
push
hlt
and
xor
or
adc
les
cmp
outsl
xor
mov
mov
in
aas
clc
ret
mov
add
and
call
pop
pop
dec
enter
mov
xchg
pushf
mov
iret
data16
mov
movsl
mov
and
or
dec
push
pop
cltd
jnp
adc
pop
addb
sbb
xor
xchg
mov
pusha
inc
loopne
sub
aaa
xor
lods
enter
nop
push
xchg
xor
mov
or
or
rcr
das
mov
clc
sbb
leave
imul
popa
pop
mov
jns
aad
insl
fsubrl
movntps
pop
push
arpl
das
inc
cmpsl
fs
js
push
cmp
ja
jnp
stos
lea
nop
mov
push
pop
test
push
popa
push
inc
lahf
test
ret
xor
ss
xchg
aam
dec
aas
ret
sbb
icebp
roll
movsb
mov
orl
or
mov
jae
cmp
movsl
loop
xchg
movsl
lea
jbe
in
clc
or
or
rcrl
enter
pushf
std
mov
out
shll
mov
mov
fdivs
cld
stos
push
in
mov
notb
mov
or
shrl
fists
pushf
mov
out
sub
xchg
mov
mov
pop
push
cmpsb
mov
mov
ret
jp
xor
into
in
cmc
out
or
enter
inc
into
push
sub
in
pop
and
jae
push
fsubs
sbbb
adc
xor
pop
pop
popf
sarb
addr16
andl
mov
pop
hlt
xchg
dec
enter
ljmp
pop
dec
xchg
lods
push
mov
sbb
mov
lcall
loop
mov
test
and
test
int3
cmp
fmull
adc
add
sbb
or
mov
mov
mov
inc
insl
lds
es
xlat
arpl
stc
push
and
mov
inc
ret
pop
cmp
mov
pop
or
push
dec
xchg
pop
lahf
sbb
adc
jge
mov
mov
add
xchg
insl
mov
popa
inc
cmpsl
cmp
push
inc
jb
loopne
stos
sub
fucomip
jge
inc
and
cli
push
cmp
les
xchg
hlt
aam
ficompl
imul
mov
add
fbld
sarl
sub
idivl
loop
roll
and
inc
cmp
aas
sarl
push
jns
or
sub
rorb
lahf
inc
icebp
js
push
xchg
push
ret
fcmovnb
cs
push
fs
mov
and
add
mov
jg
rorb
outsl
cmp
jb
cmc
mov
dec
movl
mov
out
mov
push
inc
fiaddl
jns
in
or
lret
sbb
adc
sahf
aam
mov
lcall
mov
jge
mov
dec
jo
fisttpll
sub
jmp
js
in
mov
sbb
jg
mov
mov
into
pop
mov
adc
jmp
mov
rcll
xor
movsb
in
rclb
insb
mov
lea
cs
std
in
imul
call
xchg
cmpsb
mov
scas
pop
mov
sbb
jne
and
in
sarb
js
pop
cmp
jmp
jl
push
jg
iret
jo
jno
out
loope
fs
call
jecxz
add
popf
sbb
or
js
xor
stos
cmp
dec
adc
push
fisttps
mov
in
pop
and
lcall
xor
loope
cld
enter
add
imul
scas
xor
pusha
aam
sarl
mov
hlt
repz
mov
cmp
out
jno
xchg
or
shrl
cmp
add
inc
jbe
mov
stos
rolb
xchg
or
sti
cld
fs
bound
shr
jp
cwtl
cmp
fcmovne
dec
jnp
mov
push
ds
sbb
rcrl
push
jb
mov
adc
sbb
inc
enter
cmp
je
movsb
cmpsb
inc
mov
mov
dec
hlt
xor
mov
push
xorb
outsb
mov
adc
ljmp
stos
jae
push
and
std
mov
cmp
outsb
lods
adc
pop
adc
xor
pop
pop
ss
adc
cmp
mov
mov
xchg
pop
add
das
dec
xlat
cwtl
divl
inc
push
sub
mov
inc
js
ljmp
or
jne
sub
sbb
test
mov
xlat
fnstcw
outsb
sahf
test
lret
fs
or
test
cmp
pushf
jecxz
lahf
cmc
mov
mov
mov
js
dec
cmpsl
rorl
insl
inc
call
mov
cld
xor
jmp
inc
dec
adc
fld
clts
push
jns
push
sub
sbb
pop
pop
ficoms
inc
rcl
lock
dec
insb
cmp
dec
sahf
lock
clc
or
inc
inc
cwtl
icebp
pop
adc
or
push
push
cmp
repnz
dec
xor
jbe
sub
jno
inc
jl
mov
shl
jge
xlat
in
mov
fs
ljmp
mov
imul
add
enter
hlt
xor
cli
fpatan
mov
mov
mov
lret
rorl
sub
xchg
mov
fists
xorl
mov
sbbb
ja
and
jb
and
push
or
loopne
adc
pop
pusha
sbb
sbb
jb
in
std
push
sbb
xchg
pop
je
ljmp
adc
iret
mov
push
test
adc
sar
push
dec
test
andb
in
scas
mov
pop
jne
dec
in
movsb
clc
bound
dec
cmc
in
divb
in
and
bound
dec
cmp
addl
jle
sarb
jno
in
mov
dec
je
adc
jb
mov
lea
bound
js
das
add
es
stos
ds
arpl
mov
pop
or
jle
or
dec
xor
cmp
mov
rclb
push
xor
xorb
ljmp
mov
ret
sub
bound
inc
adc
ds
or
dec
cli
loopne
pusha
imul
xchg
inc
stos
push
gs
in
xchg
lcall
out
sbb
xlat
mov
outsl
js
and
roll
or
push
pushf
clc
add
jnp
movsb
and
jnp
jp
shr
jecxz
adc
scas
pop
mov
jge
mov
mov
repnz
outsb
xor
cmp
fdivrl
sub
ds
jne
adcl
in
or
cs
dec
mov
pop
inc
mov
cmp
xor
mov
arpl
shl
fwait
insb
mov
inc
mov
add
dec
mov
lock
adc
sub
seto
mov
jp
add
xchg
push
xor
jnp
cmp
ja
xchg
int
sub
sbb
movsl
push
enter
inc
mov
mov
jl
lret
adc
fisttps
xchg
mov
repnz
or
mov
sub
imul
insl
push
jnp
mov
push
sub
adc
dec
mov
cmp
sub
stos
sbb
rcr
es
xor
sbbb
and
mov
mov
test
xchg
push
xchg
push
inc
cli
enter
lock
roll
pop
jns
pop
cltd
in
jmp
pmuludq
fsubrl
cwtl
push
mov
adc
mov
das
jnp
jne
inc
sbb
popf
and
cmp
pushf
mov
mov
imul
popf
imul
fwait
jnp
int3
call
jne
mov
sbb
fwait
mov
push
fistps
aam
inc
ret
int3
adc
cmpsb
adc
movsl
cmpb
std
add
call
mov
sti
lret
ret
xlat
xchg
out
inc
adc
push
pop
daa
pop
insl
or
mov
sahf
cmp
enter
mov
int
pop
cli
inc
popa
js
mov
cmp
scas
inc
xor
sarl
inc
cmp
stos
xor
inc
mov
push
push
sub
lret
mov
sub
int
outsl
incl
fdivrp
mov
sbb
push
fistl
or
enter
or
add
lcall
lods
insb
das
push
mov
jmp
inc
jae
enter
mov
cmp
lahf
fwait
aaa
sbb
jnp
sahf
aad
or
xchg
inc
fbld
lds
orl
insb
lcall
pop
xor
repnz
and
pop
popf
das
pushf
dec
adc
cmp
or
add
ss
lods
xchg
sbb
daa
jecxz
dec
adc
xchg
mov
cld
fiaddl
xlat
fistpll
pop
add
iret
add
mov
insl
out
je
negl
out
imul
in
rolb
mov
sub
insb
xchg
into
cli
pop
loopne
push
out
fmull
sbb
cmp
mov
push
test
aad
adcb
sbb
stos
xchg
mov
jmp
jl
in
shrl
xchg
orb
or
adc
call
pop
stc
sub
out
ljmp
xchg
fcmove
mov
push
out
mov
sbb
push
imul
adc
add
rcrb
mov
int3
mov
sbb
pop
inc
dec
movq
push
jmp
jmp
add
jno
inc
das
dec
xchg
jbe
dec
cmp
cld
xchg
faddl
cmp
sahf
mov
and
repz
call
dec
arpl
inc
sarb
aaa
fldenv
add
ja
clc
mov
test
xor
js
dec
fdiv
enter
loop
fs
popf
xchg
scas
or
xor
mov
inc
imul
test
dec
loope
mov
js
das
cmpl
aad
adc
ret
and
lret
add
jmp
rcr
pop
xchg
mov
cmp
mov
in
pop
test
stc
and
pop
call
loopne
stc
or
mov
mov
push
sarb
jle
cmp
mov
rcll
sbb
mov
in
add
mov
push
push
movsl
sbb
addl
in
push
xor
lds
out
jmp
jno
pop
sbb
and
rorl
lret
xor
push
cmp
je
test
mov
in
std
dec
ficoml
mov
nop
jo
in
nop
push
arpl
cs
xchg
xchg
cli
aas
fstpt
inc
iret
pop
cmpsb
mov
out
in
sahf
into
cmp
in
nop
stos
aad
into
lcall
aam
adc
dec
loop
int3
insl
notb
mov
dec
cmp
sub
add
outsl
mov
push
xor
push
adc
push
mov
jl
mov
shll
sub
inc
mov
pop
jo
mov
arpl
mov
pop
mov
push
pop
mov
arpl
xor
dec
arpl
jbe
out
mov
stos
inc
adc
xor
sbb
jmp
in
xchg
cs
push
pop
ficoml
dec
or
fistpll
dec
or
iret
pop
mov
add
out
xlat
pop
mov
ljmp
outsb
cmp
aaa
sahf
sbb
aad
movsl
and
adc
or
xchg
adc
mov
sub
push
or
ror
sbb
xorl
mov
push
pop
sub
mov
or
inc
cli
adc
fbstp
mov
loop
ja
add
sbb
or
xchg
adc
aas
add
dec
stos
lods
pop
pushf
mov
outsl
les
loope
in
rorb
scas
jae
dec
nop
push
add
lret
pop
repz
pop
leave
lret
adc
jae
test
lods
or
jns
add
sbb
push
cmpsl
pop
les
insl
push
out
and
xor
je
testb
xchg
jecxz
pop
shlb
jno
ret
mov
and
pusha
add
mov
push
inc
leave
iret
pop
popa
mov
arpl
sbb
ja
push
orl
in
mov
jmp
lds
enter
cmc
xchg
jno
lret
mov
adc
test
jnp
jae
out
mov
jl
xchg
xchg
enter
push
push
and
test
aaa
or
shr
jecxz
and
stc
movsb
mov
dec
pop
or
jl
lret
push
or
lock
and
scas
xchg
jmp
mov
mov
lods
fsts
gs
stos
or
not
jmp
jg
inc
jmp
adc
cmpsb
jmp
daa
repz
test
mov
mov
add
jbe
mov
movb
arpl
fwait
adc
and
xchg
push
sub
adc
cmp
fbld
inc
je
add
es
sub
fcoms
xchg
xor
je
dec
cld
aas
insl
pop
sahf
push
pxor
sub
jb
add
fwait
dec
jbe
pusha
push
mov
add
inc
loop
pop
mov
and
mov
mov
jge
adc
aas
cwtl
dec
fs
xlat
inc
jae
cmpsl
push
into
jmp
ljmp
push
stc
mov
data16
push
jmp
or
push
ds
mov
popa
ss
add
mov
ja
jecxz
mov
cmp
sub
inc
pop
pushf
sub
jns
pop
and
cltd
dec
and
aam
rolb
xchg
mov
test
sub
fwait
jge
or
sub
mov
ds
xor
xchg
repnz
sub
add
les
imul
sbb
adc
das
mov
mov
sbb
mov
jmp
adc
pop
addr16
jno
inc
adc
sub
mov
popa
addr16
ret
iret
pushf
fs
xchg
push
aaa
mov
ret
imul
xchg
dec
cmp
mov
cltd
adc
cli
aad
mov
push
mov
lret
xchg
fwait
outsb
in
fnstenv
outsb
test
sti
mov
sub
mov
jno
int
pop
test
or
stc
jmp
xchg
mov
xchg
sbb
xlat
std
or
push
sbb
gs
jno
jmp
lcall
jle
xor
sbb
cmp
mov
je
xor
cs
xor
dec
aad
mov
lret
dec
addr16
add
pushl
imul
call
dec
push
dec
iret
sub
dec
xchg
dec
jno
sbb
xchg
ret
jne
andb
dec
ja
sub
cmpsl
push
inc
addr16
cmc
cwtl
sbb
xor
loopne
aam
jns
push
stos
inc
sbb
dec
adc
out
sarl
je
jmp
mov
xor
iret
mov
data16
js
push
mov
ljmp
insb
xchg
fdecstp
cmp
cmpsl
adc
call
in
mov
inc
arpl
mov
or
add
cmpsb
and
shl
fwait
add
test
ja
jo
es
xchg
mov
push
xor
adc
lods
dec
sbb
repz
fistpll
int3
imul
sub
aaa
mov
jle
mov
rcrl
movsl
xchg
cmp
mov
jo
lret
jo
push
mov
mov
out
mov
scas
jbe
out
std
jp
cmpsb
sub
and
jmp
push
movsl
movsb
push
gs
cmp
jb
lahf
dec
sub
mov
adc
xor
stos
inc
mov
ja
xor
push
ss
aad
sti
imul
mov
xor
clc
divl
loopne
mov
mov
cld
sbb
movsb
pop
frstor
or
mov
xor
in
test
cmova
dec
loop
push
xor
ljmp
inc
cmp
fisubl
mov
rclb
push
adc
xchg
add
jp
pop
or
inc
ret
repz
fldl
xor
out
popf
stos
roll
insb
jae
sbb
push
jge
jnp
je
sub
xor
pop
push
jns
sbb
test
loopne
ret
in
testb
mov
test
mov
enter
sub
pop
fldt
mov
iret
loope
mov
pop
pop
cmp
mov
xchg
push
sar
xchg
cmp
cmp
push
ss
in
adcl
adc
mov
push
test
pop
sub
test
or
pusha
js
call
sbb
mov
sarl
inc
push
and
jbe
and
inc
xor
inc
push
loop
lret
add
incl
mov
sub
lea
psrlw
xlat
push
adc
aad
sarb
lret
xchg
aaa
ss
fldenv
and
mov
jmp
mov
adc
mov
in
and
mov
in
aam
jl
fsts
leave
paddsb
lds
insl
mov
not
sub
arpl
xor
scas
repz
mov
insl
jo
pop
mov
cmc
arpl
adc
outsl
roll
aam
loopne
inc
sub
jbe
jl
dec
mov
sub
pop
mov
cmp
add
mov
dec
jp
dec
addr16
testb
inc
arpl
xor
or
nop
mov
outsb
cmpsb
je
mov
pop
sub
insl
test
js
add
fdivrs
popa
daa
mov
xchg
mov
outsl
cmpsb
mov
out
aas
jns
lods
mov
lods
das
shlb
out
mov
wbinvd
lret
pop
rorl
mov
cmp
ret
test
xchg
ret
ss
lret
rorb
push
test
adc
add
inc
cmc
aaa
fwait
ja,pt
daa
mov
mov
cli
xchg
xchg
js
loop
test
daa
push
push
add
sbb
sub
aaa
lds
and
jle
sti
dec
sbb
aad
push
and
das
call
js
xchg
pop
pop
sbb
push
xor
sbb
aaa
mov
dec
fidivl
ds
sub
sub
addr16
lret
divb
test
pop
aas
loopne
fistps
iret
mov
jge
cmp
icebp
xor
fdiv
mov
push
jp
push
xor
lock
xchg
and
std
xor
xchg
mov
inc
sbb
xor
sub
mov
xchg
mov
call
and
and
ds
cmp
shl
repz
test
stc
dec
fmuls
mov
mov
dec
loopne
mov
and
cltd
jns
ficoml
testb
rcl
or
xor
int3
dec
pusha
addr16
fdivl
mov
xchg
sub
loope
mov
movsl
mov
cmp
jmp
movsl
out
call
andl
or
push
xor
adc
repnz
xor
push
call
cld
mov
adc
mov
add
dec
cmc
dec
in
pusha
loope
mov
push
test
fwait
mov
scas
pusha
jnp
je
xchg
adc
push
divb
sub
mov
pop
push
shr
fsts
pop
xor
nop
scas
pop
out
add
push
rcrb
pop
cmpb
jae
cmp
mov
stc
xchg
lahf
lea
dec
test
mov
and
and
sahf
adc
jnp
out
cmpsl
pusha
add
fidivrs
adc
cwtl
mov
in
rcll
jg
into
dec
dec
sub
xorps
lods
fcoml
sbb
dec
mov
rcrb
jno
ljmp
adc
pushf
arpl
cli
enter
call
mov
jb
cmp
sbb
inc
clc
jnp
sarb
mov
fbstp
mov
xor
lock
clc
lods
std
mov
testb
into
sbb
sub
popa
mov
subl
mov
int3
pushf
scas
cmc
divl
pop
mov
test
int
push
decb
mov
imulb
pop
cmp
jb
or
mov
fisubrl
add
aaa
shlb
inc
cmp
lock
mov
mov
sub
cltd
mov
imul
mov
js
sarl
xchg
jecxz
push
js
mov
inc
sub
mov
xchg
push
les
repnz
pop
aas
sub
addr16
fs
adc
sub
xor
sbb
sub
inc
mov
inc
mov
sbb
cli
in
push
dec
cmp
mov
stos
out
xlat
inc
cmp
insb
rol
pop
aam
gs
lock
test
and
pushf
icebp
mov
fnstenv
aas
insb
cmp
pop
mov
leave
fcmovnu
sub
out
or
ret
dec
sub
jl
test
fisubrs
cmp
fneni(8087
mov
clc
add
jno
and
insl
pop
xchg
pop
cwtl
icebp
push
sbb
dec
ret
out
call
push
mov
out
aas
xor
call
sub
imul
mov
push
adc
or
idivb
mov
adc
cmp
out
ss
std
dec
addr16
push
dec
mov
std
cmpsl
sbb
into
adc
jle
add
clc
arpl
test
mov
pop
mov
mov
adc
mov
arpl
icebp
dec
nop
enter
lea
dec
enter
fbld
fsubrs
jbe
sahf
adc
dec
repnz
nop
xor
xchg
jo
outsl
cli
out
dec
fmul
pusha
ds
inc
clc
lea
imul
xor
adc
movsl
jmp
loopne
into
dec
push
ss
fs
test
mov
xor
in
lea
dec
orb
jge
dec
loopne
cmp
fcmovbe
shrl
fisttps
pushf
leave
fnstenv
leave
cli
dec
ja
out
das
call
jns
push
rol
js
sahf
fwait
add
mov
dec
sbb
lods
push
xor
iret
int
clc
mov
adc
xlat
das
mov
ja
subps
fndisi(8087
loopne
sbb
jmp
adc
shlb
loopne
xchg
adc
dec
mov
xchg
mov
andb
pop
and
repz
ss
jb
ljmp
pushf
jne
outsl
imul
aam
fistl
insb
lods
push
test
and
jno
sbb
sahf
mov
cmp
ss
push
mov
out
cmp
or
arpl
inc
inc
fmuls
das
add
arpl
int3
fldcw
lahf
sub
scas
mov
daa
mov
xchg
in
scas
arpl
mov
fdivrl
mov
jno
data16
jbe
push
push
sti
add
pop
lret
jne
cltd
out
adc
cld
test
lock
mulb
xchg
sub
in
push
loop
pop
add
jnp
test
cmp
out
xor
xor
icebp
lcall
push
add
push
add
add
clc
and
push
adcl
cwtl
in
in
test
test
dec
xor
jb
and
pop
sbb
and
mov
sbb
aam
push
or
sar
push
mov
cmp
notl
roll
test
adc
roll
pop
mov
or
adc
and
stc
loop
sarb
bound
sub
stos
lods
add
add
xchg
dec
jg
in
xor
mov
jb
sahf
mov
inc
sub
pop
sbbb
ret
cmp
ss
push
pop
imul
loope
sahf
push
lahf
stc
iret
xchg
jns
and
mov
dec
jae
jmp
sarl
lcall
mov
push
sahf
cli
add
shrl
mov
icebp
and
push
xor
enter
xor
add
adc
and
add
push
out
add
pop
notl
out
sbb
adc
xor
idivl
pop
or
stos
enter
jbe
es
mov
jmp
jo
ret
mov
popf
cmp
mov
shlb
scas
scas
iret
pusha
and
jae
pushf
jae
ljmp
fisttpl
cmp
cld
or
in
cmp
mov
ret
cmp
adc
addr16
sbb
ror
ret
add
je
mov
addb
jecxz
and
out
mov
ljmp
ja
dec
pop
into
push
and
pop
bnd
inc
mov
nop
jbe
or
jle
xchg
loopne
xor
rcrl
pop
lods
bound
mov
cld
mov
dec
mov
insb
mov
push
dec
ljmp
insl
mov
jbe
mov
test
rorl
out
test
push
adcb
add
arpl
or
negb
out
pmaxub
call
enter
sarb
das
dec
xchg
and
push
pop
xor
jns
adc
arpl
add
xor
in
in
or
iret
jne
in
and
out
xchg
adc
bound
nop
in
stc
ss
xor
xchg
lret
pop
mov
pop
mov
mov
mov
add
push
fcoml
imul
xor
push
push
in
aas
xor
and
sbb
loopne
test
push
push
sarb
js
ds
shl
sbb
jg
sbb
imul
shll
repnz
shr
call
mov
out
and
mov
addr16
into
int3
xlat
xor
lret
pop
cmc
repz
push
ss
divl
ficoml
sbb
pop
fbld
xchg
test
push
xchg
cmp
push
mov
xchg
into
mov
cli
mov
and
sub
lods
mov
mov
add
lds
fucomip
pop
cmp
xchg
scas
daa
mov
adcl
pop
nop
jo
movsb
xchg
mov
pop
cmp
adc
and
ljmp
leave
sub
cmp
push
loopne
xor
fmuls
mov
rcrb
dec
ds
jnp
loopne
fisttps
out
inc
popf
jmp
lods
and
shl
cmp
sub
inc
sbb
push
jmp
out
fucompp
mov
sahf
lcall
mov
inc
or
adc
lock
xchg
jnp
loop
or
lock
out
add
mov
push
movl
sti
or
ret
jne
add
and
mov
cmp
sub
cmpsb
cmp
or
inc
adcb
pop
jno
add
dec
lea
and
ret
xchg
nop
inc
lds
sub
add
stc
cmp
mov
mov
jo
jmp
xchg
pusha
test
cmpsl
mov
adc
daa
and
das
jno
inc
sarl
xchg
fwait
dec
or
push
popa
xchg
or
inc
xchg
and
mov
mov
push
xchg
jns
inc
sub
xchg
dec
pop
adc
test
mov
lcall
push
cs
dec
fldl
xor
mov
cmpsl
push
negl
lods
negb
mov
pusha
imul
ds
frstpm(287
xor
sti
sbb
or
sub
sarb
es
insb
in
out
inc
into
das
pop
xor
inc
xor
push
inc
or
sub
push
adc
add
mov
xchg
dec
or
je
movsl
xorl
dec
outsl
xchg
mov
push
push
pop
inc
mov
sbb
test
adc
xchg
xlat
insl
aam
lods
aaa
adc
or
cmpsb
adc
mov
dec
scas
xchg
pop
push
push
sbb
pusha
aas
mov
cmp
xor
push
mov
loopne
daa
insb
aam
sub
xor
push
ljmp
cld
jmp
mov
or
add
adc
cltd
leave
push
adc
mov
cwtl
lds
pop
cmpsl
mov
mov
or
in
cmovb
push
push
mov
hlt
and
add
bound
sti
inc
movsb
sti
xchg
or
call
mov
or
jp
mov
push
icebp
add
mov
and
push
inc
add
mov
xor
stos
dec
push
xchg
mov
das
jbe
xor
fdivs
fbld
jecxz
inc
mov
xchg
mov
je
imul
xchg
leave
test
mov
jg
scas
jmp
cmp
add
lret
aam
imul
xchg
push
add
lock
pop
xor
movsb
dec
mov
xor
ret
mov
or
sub
add
scas
xchg
imul
cmp
mov
cmp
xchg
mov
fs
mov
push
push
loopne
and
sub
cmp
mov
das
inc
imul
sub
mov
cmp
and
adc
mov
fstpt
sbb
push
xchg
inc
pushw
out
xchg
icebp
setp
inc
xchg
sbb
mov
dec
xchg
rcrl
cli
in
jg
repz
jnp
dec
cmp
inc
out
outsb
jecxz
call
xchg
cli
test
cli
dec
sub
imul
push
and
sarl
xor
adc
cmp
ja
stos
test
cmp
mov
sahf
adc
repz
outsl
sub
jno
in
enter
sub
xor
mov
pop
std
mov
popa
xchg
inc
in
mov
orb
mov
lret
lea
ret
adcb
lds
bnd
jge
mov
and
pop
xor
in
movsb
jl
sub
inc
inc
out
add
aad
mov
add
push
ret
inc
push
cmp
adc
sub
or
xor
int
xchg
ret
mov
enter
mov
pop
jmp
fcoms
repz
test
jno
mov
mov
xchg
insl
and
out
fs
test
jmp
movsb
xor
cmp
xchg
into
stos
fistpl
outsb
lods
mov
pusha
aas
mov
cs
push
lret
repnz
add
push
ficomps
xor
dec
push
inc
push
dec
int
mov
sahf
loop
cld
out
jno
pop
inc
fistpl
orb
jecxz
sub
cld
lret
sbb
sbb
mov
dec
or
imul
adc
imul
lds
mov
xchg
out
add
rclb
ffreep
xor
cmp
pop
int
push
xorb
xor
cmp
mov
cs
ljmp
pop
add
aaa
or
cmpsl
sbb
inc
std
or
jb
iret
daa
jmp
cmpsl
fnstsw
mov
js
sti
push
inc
shl
sbb
ret
sbb
dec
xlat
push
jns
int3
int
jae
dec
jbe
icebp
jp
pop
cmp
cli
pushf
push
sub
ss
xchg
jge
push
cmpsl
add
push
pop
stc
int3
dec
mov
leave
mov
cmp
out
enter
aaa
fldl
loop
test
sub
pushf
jne
shrl
xchg
test
lret
jnp
cmp
jne
pop
inc
fstpl
push
leave
mov
sub
mov
jmp
xchg
insb
inc
out
cwtl
gs
pop
mov
mov
sarl
lods
les
sub
in
pop
scas
addr16
in
xor
in
addr16
or
fidivs
mov
addr16
pop
sbbb
sub
or
shl
jnp
arpl
into
jno
jns
push
xchg
mov
ds
jbe
mov
das
push
mov
int
jp
icebp
shrl
test
add
inc
pop
inc
xchg
pushf
jns
leave
out
test
arpl
out
push
xchg
sub
shlb
or
jnp
iret
mov
jne
jns
std
sbb
or
movsl
mov
pop
or
mov
mov
cltd
in
xor
jo
push
cmp
cs
mov
clc
or
jle
sbbl
cmp
mov
push
movsb
lods
bound
push
lods
inc
outsb
negl
gs
xor
aam
xlat
stc
add
pop
addl
movsl
loop
mov
cld
or
push
ret
xor
bnd
aad
jl
xchg
scas
ret
dec
mov
fst
mov
out
sbb
cmpb
dec
jnp
pushl
outsb
add
jnp
shlb
xchg
sbb
std
dec
jmp
jnp
push
add
movsb
inc
xor
jns
jns
lea
sub
inc
sbb
negb
or
pop
mov
push
rcrl
cmp
insl
xchg
sbb
pushf
cmp
vsqrtsd
cmp
les
jnp
cmpsl
daa
sbb
stos
push
jne
xchg
arpl
or
lret
mov
pop
cmp
cmp
xchg
testl
fs
stos
pop
flds
cmp
push
sbb
call
and
pop
mov
out
aaa
fisttpll
mull
sbb
jmp
pop
repnz
pop
leave
imulb
jge
stos
mov
adc
dec
and
insl
mov
insl
lret
push
ljmp
ds
cmp
stos
sbb
jno
push
mov
shr
test
xchg
jecxz
mov
add
xor
leave
inc
or
mov
out
dec
jle
mov
lcall
mov
sub
aad
fcoms
mov
enter
cwtl
adc
add
mov
inc
mov
ds
idivl
inc
jbe
cmp
int
pop
call
inc
push
cmp
aad
jae
add
shlb
jo
pop
add
jmp
ret
test
out
stc
and
loop
mov
cmp
aas
xchg
fimuls
jno
mov
int3
push
lea
xchg
mov
sbb
cmpsl
adc
aas
cs
sub
mov
push
into
imul
or
fidivrs
es
mov
subb
mov
fcomps
mov
mov
mov
jg
cmp
inc
and
and
add
ds
dec
int
popf
pop
nop
pop
sbb
mov
and
jge
ds
clc
pushf
lret
out
xchg
nop
rcl
mov
es
inc
jb
inc
and
int3
pop
jbe
or
lock
or
pop
and
xchg
jno
sub
mov
insb
shlb
or
in
leave
out
leave
mov
mov
das
add
cli
adc
out
pop
and
or
push
pusha
xchg
popa
bound
ja
scas
dec
inc
sub
adc
mov
sbb
in
jb
inc
inc
mov
cmp
frstor
push
outsb
scas
adc
mov
lcall
cmp
mov
cld
aaa
mov
adc
sub
pop
lods
loope
fimull
mov
jecxz
test
mov
pop
cltd
or
sub
pop
jae
inc
int
fsub
ficomps
movsb
fisubrl
xchg
mov
jp
dec
jae
test
push
cwtl
sbb
mov
cmp
dec
add
int
push
nop
jp
ret
enter
or
fisubrl
and
pop
stc
cmpsb
es
ds
or
and
bound
sub
insb
mov
ja
fidivl
pop
enter
popf
push
addr16
cld
jmp
mov
jbe
data16
xchg
jo
mov
mov
xor
adc
shlb
fimull
sbb
lret
sbb
ficomps
ficoms
and
dec
mov
lret
dec
pop
mov
clc
push
pop
pop
xor
cmpsb
xor
adc
xchg
cmp
jmp
push
loop
xchg
ljmp
and
xchg
ja
pop
mov
leave
and
call
adc
pop
out
cltd
xchg
cmc
cmp
jb
loopne
repz
daa
int
into
je
inc
cld
push
jo
outsl
xor
in
mov
fistl
and
cmc
int3
fs
cmpsl
iret
lret
in
lods
roll
xchg
test
add
decl
sbb
xor
mov
cmpsl
xchg
je
bnd
xchg
push
dec
out
icebp
push
inc
outsl
inc
stos
mov
test
imul
add
pop
and
ljmp
cmp
mov
test
jle
enter
or
imul
or
xchg
fbld
sub
mov
xchg
mov
jnp
nop
outsb
sub
repnz
inc
xchg
dec
cmpsl
xlat
dec
scas
lock
pop
int
push
inc
add
cmp
addr16
les
ret
mov
incl
add
or
mov
inc
ret
jo
cli
or
or
icebp
sbb
aam
in
xor
repz
sqrtps
fcmovnb
movsl
xor
mov
push
pop
dec
ss
sbb
je
sarl
sbb
mov
fidivrl
pop
mov
or
cmp
jg
mov
cld
and
ss
decb
push
mov
pop
jo
fdivr
hlt
mov
sbb
cmpsl
and
repz
sarl
and
jl
ror
cmp
adc
jecxz
add
mov
push
test
xchg
sub
inc
mov
xor
mov
addr16
repnz
cmpsb
xchg
arpl
xchg
cmp
inc
dec
out
cmpl
pop
lret
loop
bound
cltd
dec
in
jecxz
cmp
imul
je
sahf
adc
int
mov
outsb
je
add
fcmove
sahf
jb
ljmp
cmpsl
lret
testl
subb
sub
cmp
mov
test
loope
jge
cmpsb
mov
xor
add
fiadds
pop
mov
cs
dec
shrb
mov
pop
mov
mov
mov
xor
test
pop
xorb
sub
jmp
in
or
loope
imul
dec
push
in
shll
sub
jno
outsl
in
cs
push
mov
mov
std
leave
cmpsb
addr16
xchg
inc
mov
out
das
test
pop
aaa
aas
scas
nop
jmp
aam
mov
std
mov
dec
and
mov
into
mov
js
lret
fsubrp
imul
cmp
stos
sub
xor
pop
cmp
sbb
push
dec
dec
push
pop
aam
mov
xor
mov
addb
mov
add
pusha
lret
xchg
repnz
jg
scas
dec
sub
repz
cs
mov
test
inc
and
xchg
bound
shlb
mov
jmp
les
jmp
lock
ss
or
xchg
loopne
lea
data16
lods
cmp
cmp
sbb
inc
enter
ret
sbb
lcall
std
inc
and
sahf
dec
call
jno
mov
sbb
sbb
sti
adc
fsubrs
pop
data16
push
scas
or
pusha
in
ror
fidivrs
sar
test
cmp
dec
and
add
push
mov
icebp
out
jg
movsb
cwtl
jg
add
sub
fs
je
fsubr
cmpsl
xor
pushf
inc
lret
cltd
sbb
cmp
push
nop
or
cmp
call
imul
adc
pusha
xor
push
leave
loope
xorl
add
cmp
call
mov
cld
jns
es
adc
xchg
and
es
test
xchg
pop
sbb
iret
cmpsb
notb
aad
int
int3
lods
mov
gs
ret
lret
mov
xchg
out
pop
mov
push
sbb
repz
loop
shll
stos
cmpsb
cmp
pop
adc
sub
mov
in
push
xchg
outsb
push
insl
stos
push
jle
mov
jne
lds
add
incb
mov
cltd
or
sti
cli
pusha
or
adc
das
cmp
adcb
add
sub
sbb
das
xchg
test
adc
aas
xchg
fisttps
subb
cmp
push
xor
pop
mov
cmpsb
add
xor
sbb
dec
gs
inc
outsl
add
cmp
inc
repnz
mov
ret
push
inc
sub
jle
push
shll
jmp
decb
ljmp
pop
pop
pushf
add
daa
shrl
cmp
cmp
in
pop
dec
mov
ljmp
jno
push
pop
cmp
std
adc
insb
mov
loop
pop
aaa
cmp
add
mov
popa
adc
lahf
push
je
rolb
fsubrl
in
and
push
xor
adc
stc
jmp
inc
add
out
add
std
scas
rcll
test
test
xchg
push
jno
ret
lods
out
cmp
push
or
test
aas
mov
nop
push
xchg
inc
insl
sbb
icebp
stc
test
jl
xor
lds
insb
adc
jae
cmp
outsl
dec
cmp
add
in
ffreep
pop
loop
jecxz
cld
je
gs
movsb
fldt
jno
lods
lea
pop
add
into
cmpsl
mov
cmpl
bswap
mov
pop
addr16
into
mov
lock
mov
je
jge
adc
lock
sbb
jecxz
stos
jl
pop
mov
xchg
out
xchg
jnp
and
lret
in
rclb
push
cltd
sarb
fucomi
mov
lret
ret
test
pop
sub
or
sti
je
inc
repz
mov
stos
jg
or
shl
test
fcomp
xchg
xchg
dec
add
mov
cwtl
sub
push
stos
jecxz
mov
adc
and
shll
rclb
int
sahf
sub
push
and
mov
jb
call
in
push
dec
out
stos
and
add
enter
lds
nop
gs
push
sub
mov
and
mov
pop
fldcw
rcrb
out
ja
add
pop
mov
adc
xor
pusha
sti
mov
das
lods
scas
inc
push
test
cli
inc
mov
inc
negb
cmp
lods
cmpsl
cmp
or
cmp
rcrb
cmp
dec
pop
dec
ljmp
fs
push
mov
mov
add
out
cmp
dec
ja
cld
std
test
cld
cs
push
sub
lods
sub
mov
negl
fisubl
in
jmp
inc
mov
push
call
out
xchg
ja
sbb
imul
sti
xchg
push
fldpi
sub
jns
sbb
jnp
pop
jg
ss
xor
int3
sub
sbb
test
pusha
ficomps
cmp
scas
push
push
mov
mov
hlt
fldcw
scas
scas
push
dec
lock
fisttps
mov
jne
test
test
sbb
cltd
sub
push
and
mov
jge
and
fcompl
outsb
push
in
jo
arpl
inc
je
jo
into
jge
cmc
or
mov
and
or
cmpsb
sarl
cli
adc
dec
loop
repz
stos
stos
xor
hlt
dec
mov
shr
jle
fxch
data16
stos
ror
lock
jno
lods
insl
adc
sub
ret
into
dec
xchg
call
push
xchg
push
mov
cmp
fildl
popa
xor
sbb
cmp
dec
sub
dec
lcall
sar
mov
hlt
pop
aam
xchg
xor
data16
cli
push
sub
int3
mov
js
push
movsb
xchg
test
inc
push
xor
sti
sub
cmp
lahf
lods
and
loopne
push
push
ror
aad
jnp
jl
and
into
xchg
mov
repnz
enter
inc
sub
lea
mov
enter
cmp
xor
gs
repz
xchg
add
jne
sub
dec
jle
pop
xor
sbb
push
addr16
jbe
or
xchg
sti
das
je
pop
adc
xchg
in
sub
cmovb
xor
dec
add
pop
jnp
adc
hlt
mov
push
cmpb
fnstcw
mov
repnz
cmp
push
lods
cmp
pop
insl
lahf
sub
mov
in
xchg
pop
jge
mov
mov
cli
mov
cmc
mov
lret
dec
pop
sahf
pop
xchg
nop
push
enter
mov
jb
inc
in
outsb
xor
mov
pop
push
or
jnp
push
pop
sti
dec
sahf
dec
mov
cwtl
stos
mov
push
jb
addb
sahf
mov
nop
fadd
mov
aas
adc
es
mov
ljmp
fldln2
sub
movsl
add
sub
cmpsb
js
mov
and
cli
jae
mov
es
loop
xchg
es
xchg
mov
pop
int3
xor
inc
lret
mov
push
shr
add
out
addr16
dec
out
mov
clc
repnz
in
testb
cmpb
lahf
pop
add
shlb
out
mov
loop
mov
and
xor
push
les
or
inc
sbb
jne
loopne
movsb
mov
fwait
adc
stos
or
pop
iret
sub
push
repnz
std
sbb
pop
in
push
aas
jno
mov
jbe
iret
daa
repz
in
dec
sarb
add
outsl
ficomps
inc
inc
arpl
int3
pop
gs
cld
inc
fisttpl
mov
fs
fcoms
add
jns
int3
cmp
xchg
cs
and
xor
pushf
shl
pop
xchg
or
mov
adc
ret
mov
rorl
mov
stos
jl
stos
and
shll
and
dec
and
pushf
or
mov
pop
dec
pop
nop
int3
xchg
add
fs
inc
and
imul
test
imul
cltd
jl
adc
mov
xorb
imul
out
sbb
andl
jmp
dec
xchg
pop
lock
xchg
pop
mov
int
into
ljmp
mov
nop
repnz
cwtl
sbb
and
rolb
sbbb
lahf
nop
pop
inc
lret
aas
lret
jo
dec
scas
out
cmp
dec
lcall
out
jne
scas
and
and
mov
xlat
stos
div
scas
jns
jle
cmp
xchg
cmp
mov
mov
outsb
and
test
imul
dec
clc
xchg
enter
jmp
mov
pop
inc
pop
and
test
and
jp
add
and
dec
jge
popa
int3
arpl
test
mov
push
bound
push
sbb
fbld
enter
mov
enter
dec
iret
lods
xchg
mov
outsb
repz
sbb
ret
je
pop
mov
stos
push
jnp
adc
pusha
arpl
int3
jbe
dec
push
lret
xchg
inc
gs
mov
lahf
clc
in
add
addr16
das
push
or
cmpsb
imul
enter
ret
cmc
mov
jb
jbe
nop
xor
push
movsb
aad
insb
inc
dec
dec
fmulp
cmc
addb
shlb
jg
cmp
pop
mov
jo
ljmp
mov
inc
es
jp
pop
mov
and
pusha
popa
cltd
test
sti
dec
rcll
mov
rorb
inc
mov
xor
pop
stos
js
clc
push
stc
mov
add
lahf
push
mov
pop
movsb
xor
lahf
fstpl
mov
adc
ror
cmp
in
ss
inc
insl
jno
sbb
fistps
jl
inc
mov
mov
push
into
aam
ljmp
jbe
pushf
std
pop
or
loopne
pushfw
fsubr
daa
jmp
test
mov
jecxz
cmp
std
push
jb
addr16
aad
mov
in
call
int3
int3
cli
sub
mov
xor
sbb
popa
es
mov
popa
pop
xchg
inc
adc
pop
xchg
sub
sbb
lret
cli
sbb
pop
mov
cmpb
scas
xchg
call
add
and
push
jbe
pop
pop
xchg
and
lods
xor
movsl
jnp
xchg
mov
lcall
popa
mov
test
mov
decb
notl
and
and
aam
xlat
cs
ret
mov
and
sbb
mov
bnd
mov
push
xchg
mov
js
push
je
or
pop
mov
les
mov
mov
leave
popa
pop
mov
loopne
fsubr
jecxz
loopne,pt
ret
notb
stos
xchg
lods
jne
sahf
xchg
push
sub
popf
fistps
sti
fnstsw
cmpsb
add
sub
jge
out
sub
mov
sti
cmc
sarb
push
loopne
je
scas
outsl
sahf
or
imul
push
addr16
mov
jne
int
jo
sub
add
fiadds
jo
adc
push
or
addb
jg
jae
or
rolb
add
pop
push
add
xchg
add
push
setne
lods
add
push
sbb
push
fcoms
loop
add
stos
and
sbb
xchg
xchg
popf
xchg
adc
dec
push
aam
dec
push
adc
inc
sub
dec
cltd
lods
xchg
out
sub
pop
fldl
sbb
pop
daa
push
mov
int3
and
pop
push
insb
push
fld
push
jb
jecxz
fs
xchg
or
ss
mov
mov
jp
test
divb
into
xor
outsl
daa
dec
mov
push
adc
pop
add
lahf
lahf
inc
inc
cmpl
cmp
and
lret
out
mov
cmp
pop
movsl
jle
xchg
adc
or
push
pop
mov
scas
js
cmp
xchg
mov
xlat
jp
mov
inc
adc
jb
adc
lock
sbb
push
sbb
cmp
and
scas
dec
int
loop
icebp
aam
std
mov
out
es
xchg
jno
adc
sbb
les
movsb
jae
fldt
hlt
ds
push
call
test
push
pop
and
and
scas
push
ficomps
jecxz
cli
lret
push
or
add
xor
jne
push
sbb
jmp
loope
jb
push
jg
in
out
adc
cmc
and
sbb
bound
or
dec
inc
js
hlt
adc
daa
out
cmc
lret
sub
adc
or
mov
inc
insb
mov
sub
and
push
xchg
call
mov
fsubr
cmpsl
ja
cmpsl
pop
push
push
push
gs
lahf
xchg
dec
xchg
ss
rcrl
cld
pushf
fwait
xchg
aaa
pop
lret
jns
push
test
aas
in
mov
in
dec
mov
arpl
pop
je
iret
notb
daa
sbb
xor
xor
cmpsl
outsb
pusha
cmc
fstpt
and
scas
dec
adc
inc
xor
cmp
lods
push
mov
mov
mov
add
jg
mov
in
xchg
imul
jb
lds
out
fistl
fsub
cwtl
jbe
cmp
loope
adc
jg
js
mov
test
frstor
lods
jle
ljmp
or
xchg
or
mov
rcr
ret
sub
lods
cli
shrl
mov
jbe
cli
xchg
dec
imull
xchg
mov
jecxz
cmpsb
jecxz
push
mov
push
lret
gs
inc
ss
out
imul
cmp
hlt
jp
cmp
je
jno
fbld
xor
xchg
inc
mov
out
ret
ss
cmp
dec
push
hlt
xchg
sub
addr16
dec
cmpsl
xor
inc
lds
inc
fcoml
and
mov
mov
jbe,pt
je
fidivl
xor
jle
call
cmc
je
mov
cltd
cmpsb
out
jmp
push
jb
pop
mov
sub
in
aam
and
dec
and
mov
scas
les
push
mul
add
leave
mov
clc
xor
sbbl
xor
cmc
sahf
mov
push
mov
lret
pusha
cmp
mov
pop
iret
mov
inc
push
cmc
out
push
data16
cs
lds
mov
xchg
sbb
notb
adc
ret
inc
pushf
xchg
fstpt
xchg
mov
shrl
cmp
mov
mov
fistpl
rolb
sbb
inc
es
mov
and
scas
fisttpl
sahf
lea
pushf
pop
jbe
aam
xchg
add
jb
sahf
pop
lock
loope
xchg
pop
popa
lea
cmpsb
jp
mov
gs
mov
xor
mov
int3
sbb
cmp
mov
and
push
scas
jb
jl
inc
rorb
mov
xchg
rclb
and
or
dec
inc
jns
fldl
scas
cli
jmp
jo
ficoml
dec
inc
arpl
in
int3
jnp
push
insb
jmp
inc
ret
xor
or
cs
aas
and
sti
lds
push
imul
jne
cmpl
je
push
jno
aas
std
mov
ss
adc
dec
jp
mov
in
in
push
mov
xlat
addb
pop
rcl
mov
imul
xor
shrb
leave
call
in
out
xchg
mov
dec
inc
cmp
lret
iret
fwait
test
push
jo
orb
jecxz
push
mov
and
call
out
add
fildl
dec
push
aas
imul
out
sub
sub
jp
out
imul
inc
inc
in
fisttpll
and
jnp
push
pop
mov
xchg
out
mov
xchg
sti
mov
popf
cltd
xchg
out
or
inc
cmp
mov
push
mov
hlt
adc
subb
repnz
mov
imul
test
lods
shll
lods
adc
mov
sahf
shrb
sahf
jb
fidivl
outsb
push
in
call
loope
aad
mov
fsts
inc
jl
jmp
lcall
rcrb
adc
hlt
or
xor
jns
sub
in
jb
xchg
xchg
or
pop
jge
stos
sbb
outsb
or
clc
insl
movsb
add
movsl
push
push
jb
repz
in
jbe
pop
lods
ss
leave
lods
clc
dec
xor
xchg
xchg
popa
push
loop
push
or
xchg
pop
cmp
xchg
aam
imul
pop
cwtl
pop
fcmovnu
outsb
test
int3
sar
mov
jo
sbb
sbb
sub
jns
in
pop
ret
and
inc
adc
add
dec
pop
adc
push
inc
jmp
sub
xchg
repz
and
out
out
push
jne
or
lahf
rcll
ja
sub
xor
cs
pop
lret
in
cmpsl
enter
popa
popf
int
ljmp
push
sub
cmc
mov
cmp
or
clc
pop
add
sbb
inc
cmp
enter
xor
push
mov
dec
fiaddl
mov
ret
lods
dec
push
mov
pop
xlat
xchg
mov
xchg
pop
xor
hlt
movntq
out
sub
sub
xorb
push
inc
out
stc
ss
mov
ljmp
andl
add
pop
fs
mov
scas
cmp
daa
out
xlat
mov
mul
fstpt
aas
mov
pop
pop
fistpll
aas
cmp
pop
mov
inc
into
imul
adc
mov
adc
inc
or
out
mov
loopne
ret
mov
mov
insw
incl
shr
mov
mov
ja
push
mov
pop
dec
iret
or
je
int
xlat
push
push
lea
or
dec
lock
pop
data16
jge
cmp
out
cmpsl
push
xchg
sbb
push
cmpsb
test
xor
sub
lods
push
add
inc
in
jg
xlat
push
pop
dec
icebp
jb
loop
mov
pop
std
inc
push
xlat
or
je
cmc
test
test
mov
scas
dec
and
movsl
lret
push
push
lods
sahf
loope
fistpl
mov
xchg
jno
adc
rcll
into
jbe
cmp
std
sbb
fs
cmpsl
int
dec
cmp
outsb
push
xor
xchg
int3
cmp
mov
aam
out
outsl
lds
sbb
jnp
lret
xchg
sti
sti
imul
jmp
pop
mov
mov
jp
loope
cmpsb
out
aad
xor
add
clc
mov
dec
fnstcw
mov
dec
push
push
xor
push
loope
jmp
mov
std
dec
add
addb
push
push
out
cltd
sbb
push
or
je
mov
nop
stos
adc
sbb
adc
cld
push
cvttps2pi
cmp
jae
cmpsl
adc
scas
rorl
insb
and
xchg
add
push
xchg
scas
jo
dec
add
icebp
test
sbb
fs
push
or
icebp
sbb
pop
sbb
ret
jle
push
push
inc
xor
inc
pop
rcrl
mov
or
lods
add
test
in
jge
jno
in
out
mov
push
cli
adc
mov
push
dec
xchg
cmpsb
pop
pop
push
pop
aad
adc
incl
xchg
push
mov
mov
jnp
movsl
xor
dec
dec
push
into
mov
test
rcr
notl
mov
xchg
enter
ret
test
fwait
popf
sbb
mov
sbb
adc
or
inc
insl
pusha
mov
repnz
arpl
test
fcomip
jl
je
out
jp
cmpsl
frstor
xchg
bnd
mov
push
icebp
jecxz
push
dec
arpl
and
lods
jae
fwait
sub
sahf
push
in
sbb
adc
jae
cli
mov
jmp
jge
out
pop
jg
or
push
push
jecxz
ret
cs
jecxz
lock
ret
add
loop
and
sub
mov
mov
int
adc
push
dec
das
mov
and
mov
jne
clc
sbb
movsb
mov
lcall
push
loop
xor
leave
sbb
xor
int3
rorb
vcvtusi2sd
mov
xchg
icebp
sbb
mov
sarb
aam
jns
mov
jmp
cmp
ds
sbb
pop
or
iret
xchg
cmp
iret
fimuls
dec
arpl
cs
enter
pop
insl
add
xchg
fs
mov
xor
aam
push
add
enter
mov
movsl
repz
lcall
loopne
stc
sbb
sub
mov
enter
xchg
mov
insb
lods
jno
inc
pop
scas
xchg
mov
jp
push
sbb
call
cmpsl
mov
das
jnp
inc
loope
call
cmp
mov
cwtl
cmpsb
xor
icebp
push
ja
sti
imul
loop
inc
dec
mov
xchg
insb
cmp
aam
mov
adc
out
xchg
fisttps
pop
xor
push
fcomi
inc
call
add
in
test
sub
add
sub
jae
sbb
test
mov
ja
cmp
nop
pop
cld
xor
popf
adc
sbb
sbb
std
mov
stos
and
mov
mov
sub
mov
jns
scas
mov
cmpsb
je
push
cmc
pop
adc
neg
push
aaa
mov
aad
popa
pushf
call
add
stos
add
test
push
in
dec
in
mov
and
cmp
sub
enter
mov
fwait
addb
sub
jecxz
inc
test
scas
outsl
rorb
in
sbb
cmp
mov
xor
mov
rolb
xchg
fs
or
and
xor
jno
hlt
sbb
aas
mov
in
sahf
sahf
mov
es
mov
shrb
xor
and
outsb
push
mov
int3
bound
out
jno
or
sub
jne
push
inc
or
mov
fdivrl
jge
outsb
ror
insl
pop
push
mov
mov
push
mov
push
lods
fldl2e
cld
cwtl
fdivl
fsubrs
lea
int
adc
lock
and
pop
sub
mov
xorl
inc
jp
test
or
lea
in
sahf
cltd
pop
sbb
mov
mov
and
lea
dec
xor
ljmp
mov
outsb
mov
dec
sti
scas
pop
add
xchg
mov
mov
push
and
in
aam
lea
lods
mov
rep
jle
push
cs
addb
rcpps
pusha
call
rdmsr
jne
mov
jle
decb
fimuls
rclb
inc
dec
ret
js
push
popa
call
pop
sub
mov
or
add
ud2
popa
es
adc
mov
lret
lock
mov
stc
mov
dec
dec
xor
icebp
sarb
pop
inc
inc
ret
or
cmpsb
add
adc
scas
idivb
jg
shll
in
inc
aas
leave
imul
in
je,pn
ljmp
inc
mov
adc
ja
dec
push
mov
loopne
and
leave
cmc
inc
mov
dec
dec
dec
xchg
xchg
mov
mov
pop
bound
adcl
outsl
addr16
gs
subl
cs
and
jns
mov
cmpsb
push
daa
push
push
out
jle
xor
cmp
and
repz
or
lret
in
jns
push
add
sarl
sub
mov
mov
ud2
sub
cmp
inc
adc
je
nop
jge
and
jp
dec
pop
and
xor
pushf
dec
mov
sub
or
in
test
mov
jmp
push
jecxz
ja
cld
into
dec
inc
rcll
cmpl
hlt
jmp
pop
jp
pop
inc
jmp
icebp
sbb
insb
push
es
int3
je
lret
bound
adc
pop
das
jp
pop
outsl
rolb
js
or
mov
call
clc
inc
movsb
mov
or
dec
mov
fadds
xchg
into
loop
pop
out
xorb
inc
rorl
data16
xchg
inc
push
sbb
outsb
add
jmp
inc
mov
mov
sbb
jne
mov
ret
cmpsl
fstpl
movsl
push
push
adc
push
sub
add
mov
mov
lcall
popf
cmpsb
mov
inc
mov
jmp
pop
push
mov
jg
popl
mov
insb
fstpl
or
jb
loopne
xor
cwtl
dec
push
mov
jmp
popa
dec
popa
sar
adc
sub
dec
fildll
jne
je
int3
sar
test
sub
out
push
xchg
push
fcompp
mov
out
cmp
test
adc
push
jno
ret
lock
dec
pop
mov
mov
adc
or
cmc
icebp
lahf
inc
cmpsb
insb
inc
movsl
sbb
pop
cld
shrl
pop
test
cs
and
in
mov
pop
sar
jne
stos
pop
cmp
cld
frstor
mov
jo
ror
fwait
pop
jae
in
add
xchg
inc
in
addb
fwait
popf
sbb
push
fprem
pop
push
in
dec
sarl
rolb
iret
xchg
sbb
inc
mov
jle
sbbb
aas
jo
clc
and
inc
loop
pop
inc
test
or
arpl
push
jle
int
lods
dec
jne
mov
xchg
lods
xor
outsl
pop
popa
aaa
arpl
push
xchg
mov
xor
sub
push
jl
or
scas
fistl
ja
pop
rcrl
jno
sbb
cltd
pop
mov
adc
mov
fdivs
ret
push
pop
add
xor
add
sahf
cmpsl
xchg
iret
in
imul
push
xchg
sbb
movsl
jb
jecxz
mov
lahf
insb
aad
lea
pop
xor
mov
shrb
mov
cmp
fistl
adc
hlt
out
jl
xor
or
dec
jbe
cltd
push
int
push
dec
imul
cmp
cs
dec
fists
ja
mov
mov
aam
in
mov
pop
push
loopne
sbb
sarl
fsubrl
sub
and
std
add
hlt
cwtl
lods
gs
arpl
jb
xor
mov
xor
mov
nop
push
cmc
fs
mov
xchg
inc
mov
push
jp
adc
neg
and
jle
jp
shlb
pop
aam
jp
mov
mov
sbb
bnd
adc
clc
imul
jmp
les
shll
in
and
loope
inc
inc
adc
bound
popa
les
into
jb
xchg
push
xlat
mov
mov
std
add
jae
imulb
sub
cld
pop
decl
ljmp
mov
cmpsb
rcr
ja
daa
pop
push
dec
mov
pop
mov
outsl
ljmp
movsw
in
add
popl
hlt
test
mov
fs
sub
inc
mov
ss
jle
mov
and
cmp
sarb
lock
mov
and
jne
mov
cwtl
shlb
adc
pop
lds
loope
arpl
push
add
cmp
ds
cmp
jl
dec
int3
pop
push
add
clc
or
nop
mov
repnz
pop
mov
mov
js
sbb
leave
add
sub
inc
xchg
scas
lcall
push
jae
aas
clc
ss
fdivrp
pop
pop
daa
dec
jo
faddl
dec
pop
sub
jmp
mov
test
inc
loop
hlt
insl
dec
dec
cmpsb
addr16
or
pushf
jmp
mov
sbb
clc
lret
ret
jns
mov
enter
outsl
xor
add
jecxz
push
cmpsb
test
in
xor
imul
std
push
xchg
popf
push
xchg
jne,pn
sbbb
and
cwtl
cmp
xchg
sub
repnz
rorb
iret
lea
ja
mov
les
xor
pop
and
adc
lret
lock
cltd
scas
mov
xchg
loop
outsb
sbb
sbb
and
push
mov
cmpsb
cmp
loope
addr16
filds
in
mov
sub
xchg
test
repnz
fistl
add
mov
mov
mov
xchg
xchg
rcrl
mov
pushf
add
in
add
sub
out
lcall
mov
xchg
mov
lret
fmull
xchg
inc
arpl
repz
cmp
push
mov
sbbb
mov
scas
pop
pop
jecxz
in
lods
rorb
icebp
jne
jl
mov
jle
ds
or
dec
loop
ret
mov
movsb
jp
les
je
ret
xlat
daa
sahf
mov
cltd
pop
mov
push
jbe
in
sub
xchg
call
rclb
xchg
iret
mov
xchg
push
int
outsb
pop
ret
jmp
cmpsl
in
push
out
cltd
mov
mov
mov
test
add
pop
jl
fistl
sbb
cmp
push
sub
sbbb
lcall
es
lcall
std
iret
or
std
fldt
cs
cmp
gs
nop
xchg
xorb
lock
call
push
mov
pushf
test
test
mov
call
lret
gs
xor
cmp
dec
push
push
and
lock
fdivrl
out
negl
iret
inc
and
mov
int3
gs
mov
xorl
inc
daa
ret
fnstcw
jecxz
xor
xchg
xchg
subb
cli
fnstenv
sub
xor
dec
adc
mov
out
sarb
mov
mov
jno
mov
and
mov
add
ret
cs
shl
icebp
sahf
sub
push
xlat
mov
sub
jo
shrl
mov
clc
mov
push
ret
movsl
iret
aam
pop
jae
dec
mov
ficompl
mov
lock
sub
lcall
or
sbb
pushf
and
pop
mov
mov
out
enter
fstl
push
xchg
or
push
cmp
jbe
stc
test
dec
inc
xor
push
or
add
jge
lock
xor
jge
cmpsb
push
aad
and
or
add
stos
push
aad
push
jne
inc
jne
mov
jae
add
lea
data16
aad
dec
stos
and
xchg
xor
mov
out
push
movsb
popf
sub
add
scas
addl
push
cmpsl
push
movl
repz
inc
fiaddl
push
inc
enter
push
das
adc
in
push
xor
jge
xlat
cmc
fisubrl
lret
mov
push
cmpsb
lcall
imul
jge
jne
cmpsb
add
cmp
jle
jmp
pushf
add
out
aaa
sub
es
xchg
fst
sub
and
popa
mov
jbe
cmp
and
jb
mov
xchg
add
lods
inc
inc
jle
enter
push
test
sbb
in
cwtl
jae
in
push
or
add
sbb
pop
jmp
or
sahf
int3
pop
int
inc
pop
push
imul
push
mov
cmp
shll
or
jo
mov
cmp
fistps
jo
and
dec
sti
push
ds
adc
and
add
or
shll
jl
cli
syscall
fdivs
jns
punpckhbw
outsl
sub
mov
pop
in
out
bound
inc
jmp
in
sub
pop
daa
push
dec
outsb
sbb
repz
lods
inc
cli
or
ss
jmp
xchg
push
cwtl
mov
lret
mov
dec
add
daa
cmp
pop
les
push
stos
push
jmp
adc
mov
into
fidivl
fdivrl
addr16
cmp
push
push
jle
scas
mov
sahf
dec
out
ret
test
ror
lods
xchg
jl
jbe
jne
cmpl
cld
dec
cmp
fcom
jmp
andl
mov
sahf
inc
lds
pop
popa
sahf
lds
orb
dec
push
clc
ffree
push
jbe
sbb
insb
pop
nop
and
xor
mov
pop
mov
xchg
sarb
aad
sbb
pop
in
dec
loop
cmc
sub
addb
out
pop
insb
jmp
enter
outsb
insl
xchg
pushf
push
lods
test
lds
xor
and
pop
pusha
ljmp
inc
stos
mov
pushf
pop
xor
in
cmp
rolb
daa
and
push
rcrl
test
jmp
in
xchg
xchg
mov
push
icebp
in
int
xlat
in
stos
icebp
in
dec
mov
aad
das
orb
jns
clc
cs
in
push
push
cmpsl
fcomps
rol
cmp
sub
jl
ret
ds
dec
lock
imul
inc
dec
push
cld
mov
ret
push
iret
fisttps
dec
dec
sub
adc
in
fimull
mov
adc
idivb
dec
or
pop
ret
subl
xchg
aad
add
inc
xchg
mov
dec
jge
addr16
jmp
pop
enter
dec
fnstcw
xor
pop
fwait
jmp
lret
imul
fiadds
outsb
add
sbb
imul
fcompl
nop
mov
jecxz
push
sub
add
jl
mov
sbb
fwait
dec
xchg
xlat
add
lret
xor
test
inc
ja
add
sarb
push
and
jg
sbb
lock
mov
or
std
ljmp
add
mov
mov
fs
into
push
scas
mov
mov
imul
pop
pop
cmpsl
pop
movsb
mov
mov
push
push
pop
cmp
iret
jle
imul
lret
aam
ret
pop
and
leave
or
sahf
iret
pop
rcr
into
in
mov
mov
int
aaa
cmp
inc
test
sbb
push
testb
int
leave
push
lods
adc
pushl
mov
cmp
jge
stos
jno
cmpsb
push
dec
sbb
dec
push
stos
pushf
loopne
int
cmp
out
cmp
jno
push
out
pop
aad
cltd
mov
test
dec
sbb
fisttps
xor
ret
jbe
sahf
dec
shl
pop
lods
jno
mov
insl
or
scas
mov
push
xchg
fisubl
mov
and
mov
jo
repz
mov
xor
cmp
adc
dec
xchg
loop
int3
xor
xor
push
mov
cmp
std
fwait
jb
repz
imul
sbb
cmpsl
jge
mov
add
add
pop
scas
xor
sub
and
jmp
xor
fdivrl
mov
fsubrl
fiaddl
add
jnp
pop
and
stos
shl
gs
sub
mov
pop
mov
lret
cli
xchg
lret
fimuls
aad
xlat
sti
mov
in
and
lcall
cmp
add
fstl
icebp
and
jb
test
test
adc
aas
push
mov
jmp
out
lahf
or
push
js
fisttps
jne
out
xor
pop
test
loopne
inc
insb
adc
aad
movsb
push
cmpb
xchg
aas
cld
and
mov
jecxz
adc
es
push
mov
aaa
imul
cmp
mov
loop
adc
les
mov
xchg
pop
clc
adc
aam
gs
in
jl
stc
cmp
js
aas
lods
or
mov
mov
pop
ficompl
out
arpl
jp
and
adc
xchg
sbb
jne
sbb
sbb
and
mov
adc
lods
mov
cmp
test
bound
mov
je
cmpsl
fldcw
sti
movsl
leave
jle
mov
aas
leave
and
scas
xor
aam
aam
cmp
xchg
std
mov
lcall
xchg
test
cmp
fs
mov
xchg
jecxz
dec
negl
pushf
repz
insl
icebp
pop
pop
sbb
xor
jno
cmp
dec
jno
add
jg
fs
xor
data16
pop
int
dec
imul
or
sti
mov
aas
inc
jo
push
cmpsl
and
sarl
divl
adc
call
cmp
or
loope
push
adc
xlat
push
xchg
inc
add
pusha
push
cmp
fsubrs
pushf
xchg
adc
ljmp
cld
enter
lcall
pop
add
jp
fwait
cmp
pop
dec
mov
push
dec
add
dec
sub
inc
aad
movsl
mov
ficomps
lea
fcmovne
mov
xorl
popa
movsb
out
lock
mov
es
jnp
loope
negl
enter
mov
stos
xchg
clc
pop
jae
outsl
and
sbb
ja
lods
and
dec
push
outsb
or
test
test
jb
jbe
adc
dec
mov
jle
jns
cmpsb
lcall
mov
incb
pop
mov
shlb
popa
and
loop
sub
pop
call
lret
mov
sbb
push
repz
out
pop
push
das
add
es
js
push
jg
mov
push
in
out
cmpsl
inc
mov
andl
imul
andl
or
xchg
push
enter
inc
ret
les
xchg
jno
jb
ds
push
push
subl
dec
inc
bound
fsubr
hlt
cmpsl
xchg
scas
push
add
push
in
pusha
mov
add
jmp
mov
adc
jno
pusha
mov
int
leave
jne
hlt
mov
or
adc
pop
fcoms
daa
pop
sbb
fsubs
dec
sarb
fstl
jbe
das
inc
mov
xchg
das
outsl
jbe
push
mov
inc
pusha
and
sub
xor
aas
in
mov
inc
sub
fisubrl
push
into
in
xor
sbb
test
nop
out
add
pop
in
xor
xchg
aam
negb
frstor
mov
jns
sbb
repnz
popl
cmc
aas
push
jno
iret
cmova
call
cmp
loope
jae
xchg
lret
sub
push
xor
and
aam
fcomps
pop
dec
negl
add
out
sbb
mov
xchg
rcl
insl
xor
pop
cmp
sbb
jb
iret
mov
in
fisttps
inc
inc
mov
divl
pop
xchg
gs
push
gs
mov
mov
cmp
xchg
cmc
stc
inc
lock
inc
and
shrl
in
enter
or
inc
or
loop
icebp
lods
xor
lret
xchg
xchg
in
dec
mov
adc
xchg
add
push
sub
jnp
xchg
or
pop
inc
scas
or
popa
jo
sub
std
or
push
mov
cld
cli
hlt
or
pop
hlt
cmp
lret
andl
pop
mov
lret
adc
inc
out
aad
and
and
hlt
sbb
leave
shl
mov
enter
xchg
sub
call
fimull
insl
aad
jmp
jno
lret
out
sbb
cltd
push
dec
sbb
pushf
xor
and
xchg
push
adc
out
ja
out
push
inc
pop
insb
inc
fs
mov
fldpi
loop
dec
xchg
cli
inc
jge
mov
inc
mov
rorl
loop
dec
inc
push
pop
sub
movsb
loope
cmp
js
cmp
sti
add
fstpl
cmp
nop
daa
lods
sti
add
xchg
movsl
push
jb
xchg
sub
sahf
jmp
arpl
mov
and
cmp
push
testl
or
cld
sub
mov
cltd
pop
dec
or
das
mov
cmp
in
adc
jmp
push
xchg
adc
xlat
mov
mov
xor
dec
or
cld
pop
ds
mov
mov
pop
fnstsw
fnstenv
test
imul
adc
subb
pop
cmp
testl
dec
pop
test
mov
inc
addr16
xchg
xchg
jnp
out
jbe
add
adcb
mov
outsl
jae
stc
jg
cmp
lods
jmp
mov
dec
mov
test
mov
and
mov
fists
xor
add
js
jne
jno
int3
mov
cmp
mov
pop
cmp
adc
jle
adc
jge
dec
repnz
cwtl
idivl
stos
jge
movsb
outsl
adc
adc
aam
mov
adc
or
hlt
push
mov
dec
movsb
cli
in
add
inc
gs
lret
dec
in
insl
scas
popw
cmp
jne
mov
imul
mov
xor
xchg
or
movsb
xchg
cmp
push
dec
int3
movsl
lock
jl
fcmovnbe
aad
inc
dec
in
imul
dec
push
push
out
mov
xchg
stos
mov
cmp
jb
outsl
out
das
pop
jl
mov
or
dec
push
outsl
and
nop
sub
les
sub
cmp
fimuls
or
jl
jb
jnp
xlat
push
int3
sti
dec
arpl
stos
sub
insb
push
js
ss
in
cmp
hlt
in
gs
in
lock
push
fdivr
fs
cmpsl
mov
xchg
or
out
jo
cli
add
in
fidivrl
sub
lock
xchg
nop
iret
push
insb
sbb
addr16
push
and
mov
and
bound
inc
and
seto
jne
jae
popf
jl
aaa
jbe
cmc
mov
cmp
jnp
in
xchg
adcb
adc
or
dec
int3
outsl
or
add
push
mov
pop
push
inc
imul
xor
mov
or
dec
sub
sar
sub
add
lahf
mov
fstl
lods
adc
push
jo
int
mov
addr16
jmp
jb
xchg
xchg
ss
shrl
pop
cltd
pop
pop
and
xchg
xchg
popa
bound
pop
add
outsb
mov
rorb
mov
xchg
jae
jno
rolb
xchg
inc
xchg
ret
xchg
push
xchg
cli
fdivr
in
jb
sub
jbe
stos
mov
fidivl
and
pop
daa
loop
xchg
ret
movb
pop
inc
rolb
push
mov
pusha
jne
dec
and
inc
stc
mov
fistl
dec
dec
lcall
and
jg
out
imul
jno
int
mov
push
aam
clc
mov
dec
mov
and
decl
int
arpl
push
push
dec
in
popa
fwait
xor
cltd
jb
dec
jp
add
mov
mov
stos
lahf
sub
pop
sar
push
or
insb
pop
jmp
int3
adc
aas
shl
jae
arpl
jg
mov
lods
adc
pop
xor
xchg
stos
cmp
sub
sub
or
shl
stos
xchg
push
inc
adcb
fimull
xchg
push
xor
inc
cld
xor
aas
jo
orb
cmpsb
push
lret
push
imul
push
data16
mov
daa
std
pop
mov
bound
inc
and
mov
das
fcomi
add
in
pop
lret
lods
stc
and
and
stos
sub
sbb
or
cmpsl
je
push
cmp
aas
cwtl
pop
je
push
mov
bound
inc
xchg
std
jbe
les
fs
push
sbb
mov
sbb
and
jb
push
ja
and
dec
add
fidivl
or
lret
xchg
inc
jae
sbb
sub
shl
xchg
lcall
push
pop
or
xor
jae
jmp
xor
jl
enter
cli
imul
lahf
inc
lods
pop
jecxz
es
sbb
or
xchg
ss
mov
mov
into
cmpsb
push
out
cmp
xchg
das
out
inc
and
push
mov
push
call
mov
movsb
ss
mov
dec
or
mov
jne
sbb
adcb
popf
push
in
mov
cld
hlt
enter
repnz
daa
insb
jns
stos
mov
popa
or
jbe
mov
pop
adc
jno
jmp
rclb
rcl
cli
cmp
jnp
lods
mov
int3
jnp
push
ret
mov
fcompl
dec
sbb
mov
faddp
mov
test
imul
daa
cmp
unpckhps
jno
ret
std
iret
inc
mov
lods
dec
jg
sbb
xor
xchg
push
inc
jo
mov
into
addr16
sub
sub
mov
pop
mov
push
add
sub
mov
and
ret
popf
arpl
mov
movsb
dec
rorl
mov
dec
sbb
and
jge
push
test
push
ljmp
jge
and
inc
fldcw
jae
or
or
jnp
int3
xchg
ljmp
and
adc
xchg
sti
fs
add
sbb
and
push
out
fldenv
cs
push
fidivrl
lods
push
fldl
lret
dec
test
push
scas
in
shlb
mov
mov
adc
sti
or
push
or
pop
jne
outsb
aas
shll
sbb
cmp
mov
inc
jge
je
fs
inc
dec
pop
xlat
xrelease
stc
push
or
mov
orl
mov
pop
test
mov
push
out
cmp
push
sti
mov
mov
xor
push
iret
lds
mov
arpl
pop
mov
sbb
pop
call
clc
insb
jge
inc
nop
mov
push
js
pop
sub
cmp
cmp
dec
xchg
std
popf
pop
test
mov
cmp
bnd
test
lahf
addb
lcall
xchg
int3
inc
jp
cmp
adc
loope
sub
xchg
or
pusha
jbe
in
jle
mov
xchg
cmp
sub
push
cmpsl
pop
or
fisubs
sbb
xlat
popf
in
jo
lds
sti
mov
mov
cli
xchg
add
imul
loop
jge
pop
sbb
shr
loopne
jmp
sbb
out
adc
daa
and
sub
fbstp
data16
sbb
inc
pop
jnp
or
sbb
aas
pushf
adc
fs
cmpsl
push
cmp
add
jle
lock
addl
jns
dec
jmp
sahf
cs
mov
shl
pop
lock
and
adc
jmp
dec
mov
test
lock
repnz
and
scas
stos
cwtl
fildl
sbb
popa
cltd
outsl
xchg
lock
fidivl
mov
jnp
test
or
push
cmc
pusha
mov
dec
lds
test
xor
pop
in
jnp
and
add
cli
lods
pop
inc
inc
in
ja
pop
orl
std
aam
adc
dec
push
or
sbb
or
aas
jbe
repz
mov
push
stos
mov
push
mov
out
inc
and
ret
mov
cmc
xchg
push
mov
sub
scas
mov
in
fsubrp
adc
mulb
imul
dec
lods
pop
loopne
cmp
outsb
fmull
add
add
js
xchg
fsubl
xchg
adc
add
jle
mov
inc
ja
and
call
mov
push
aam
dec
mov
jp
nop
sbbl
jge
stc
cmpsl
movsl
jno
inc
push
ret
rcrl
inc
cmp
loop
hlt
in
mov
mov
cld
mov
pushf
xchg
and
xor
push
jmp
or
negl
xchg
adc
push
mov
push
icebp
mov
xor
lahf
aad
jnp
mov
sub
sub
test
push
dec
and
pop
and
call
fidivrs
jns
cmpb
and
jae
arpl
xchg
decl
dec
movswl
add
dec
and
push
mov
stos
gs
sub
js
bound
sahf
nop
mov
in
lods
fsubrs
jno
outsb
sub
out
dec
andl
clc
movsb
jae
cs
stos
sub
dec
mov
fsubr
adc
mov
push
into
and
loopne
add
push
insl
testb
or
push
loopne
and
ficoml
mov
lret
les
nop
nop
jns
call
inc
icebp
and
test
cltd
scas
push
clc
pusha
push
mov
arpl
rolb
stos
outsl
aad
dec
mov
and
cmpsb
add
jg
jle
inc
negl
push
int3
lret
adc
cltd
das
std
dec
mov
cld
pop
dec
mov
cld
in
cmp
cmp
jb
xchg
ljmp
pusha
fcoml
mov
outsb
or
push
jecxz
mov
dec
cmp
lock
sbb
mov
push
into
bound
push
cwtl
inc
out
push
subl
rorl
loope
rcrb
push
out
jae
in
xor
push
les
aad
loop
push
test
hlt
mov
adc
inc
pusha
lret
mov
pop
push
enter
clc
addl
xor
jnp
in
add
lods
cltd
shrl
push
mov
outsl
and
inc
mov
cltd
pop
stos
cmc
andl
outsl
imul
pop
test
jge
or
stc
insb
aad
and
ljmp
dec
shlb
pop
sub
fbld
fistpll
icebp
pop
adc
cwtl
loop
arpl
cmp
mov
int
popa
sbbl
mov
dec
cmp
out
scas
shll
shlb
cmc
and
mov
dec
mov
adc
inc
inc
clc
xor
mov
mov
popf
add
dec
lods
pop
fdivrs
lcall
jne
dec
lcall
pop
or
sbb
pop
loop
pop
rcll
jo
mov
clc
mov
movsl
filds
stc
cmp
test
dec
push
insl
mov
cs
jmp
js
lret
arpl
xor
dec
pop
aam
pop
xchg
adc
aaa
lods
sbb
jl
mov
push
mov
push
lret
cmpsl
mov
mov
fsts
movsl
or
lock
xchg
push
cmp
xchg
mov
adc
inc
push
hlt
fsts
adc
sub
dec
xchg
push
ja
add
mov
push
pop
idivl
leave
cmp
fs
cwtl
push
rcr
mull
xlat
jbe
push
popf
mov
dec
jge
mov
cmp
dec
gs
lods
pop
mov
jecxz
xor
mov
ss
pop
pop
push
jns
mov
or
inc
shll
and
lods
daa
push
sbb
ss
dec
inc
xchg
pusha
xor
enter
push
fsubrl
test
repz
cmp
aam
xchg
fistps
inc
dec
jmp
sti
dec
and
pop
jle
das
cmp
pop
push
add
call
mov
pop
add
jp
das
inc
add
sub
pop
lcall
xor
cmp
sbb
mov
enter
mov
ss
push
or
push
pop
icebp
cmpsl
outsb
jmp
scas
rcll
sahf
push
dec
out
xchg
push
inc
cmpsl
int3
pop
mov
dec
daa
pop
fcomip
and
mov
pop
sbb
ret
roll
fs
cmp
shlb
lock
test
mov
sbb
dec
clc
test
push
insb
mov
mov
aaa
aaa
push
lahf
mov
jg
or
ret
insb
stc
dec
and
pop
aaa
pop
push
mulb
fiaddl
rcrl
flds
push
fsubl
fs
jmp
inc
fmuls
fcoms
lcall
and
daa
inc
mov
push
lods
jl
inc
scas
mov
stos
and
sahf
loope
gs
or
bound
je
lret
mov
mov
xor
mov
or
jg
pop
push
mov
loop
lock
outsl
add
cmp
hlt
movsl
mov
cmp
and
rclb
xchg
jl
loopne
pop
inc
in
test
cmpl
xor
daa
aas
xchg
inc
lret
add
sub
xchg
lods
or
add
lock
and
sti
int3
adc
xchg
lods
ds
decb
cli
dec
jmp
std
ja
jae
xchg
inc
outsl
pop
shrl
pop
mov
aad
add
mov
cwtl
std
icebp
adc
repz
loope
mov
xor
mov
daa
add
jp
inc
je
data16
xchg
add
lret
cmp
aam
xchg
orb
jmp
mov
xchg
mov
mov
std
nop
cmpsb
cmp
sub
cltd
pop
xchg
xor
shl
sub
das
dec
lods
push
in
jg
or
mov
clc
jp
jge
push
in
aad
mov
push
cmp
popf
xchg
jmp
fsubrp
xor
pop
aaa
js
test
cwtl
dec
adc
jne
push
pop
jo
stos
cmp
sbb
xor
cmp
addr16
push
out
popf
lock
inc
sub
sahf
xchg
push
xor
mov
into
jge
mov
lret
adc
scas
clc
shlb
test
push
xor
push
push
dec
fdivr
xchg
sub
mov
mov
jle
pop
adc
jb
dec
rorl
arpl
fcoms
xchg
cltd
in
cmp
orb
or
enter
adc
cltd
lcall
jnp
ret
data16
dec
and
pop
mov
add
gs
inc
int
ja
cmove
aam
fisubl
cmpsl
testl
testb
shlb
jmp
or
dec
lods
pop
xchg
add
add
test
jecxz
xchg
clc
cmpsl
pop
jae
xor
xor
and
fmul
scas
rcrl
xchg
outsb
dec
clc
jo
push
dec
sub
lcall
jne
cmp
leave
jns
dec
repz
or
repz
cmp
sbb
dec
jp
or
aas
std
inc
test
mov
outsb
fdivl
cmp
fwait
and
std
push
pop
test
push
jbe
cmp
cmp
into
mov
in
jmp
xchg
xor
xchg
pop
mov
in
mov
icebp
or
mov
insl
sub
mov
and
jne
push
aas
mov
dec
dec
mov
cmpsl
sub
int3
add
nop
xor
xlat
insb
sub
dec
inc
outsl
adc
sub
sbb
popf
push
sub
inc
cld
out
negl
dec
shr
xchg
mov
mov
xor
jle
or
je
xor
jne
push
lock
xor
cwtl
sub
cmp
cld
or
mov
shll
sub
dec
adc
mov
sub
rcr
cmp
out
mov
adc
call
jno
sub
sbb
push
xchg
mov
fsub
gs
xchg
xor
mov
stos
out
add
sar
cmpsb
jno
push
subb
and
jmp
push
cwtl
push
insl
mov
std
inc
xchg
sar
xor
add
add
aaa
je
lods
lret
inc
jg
jp
mov
repnz
pop
fwait
ja
addl
pop
sahf
xchg
in
lret
into
xchg
daa
mov
and
xor
sub
jb
pcmpeqd
test
shrb
xchg
out
xchg
mov
cs
mov
insl
in
test
out
sbb
dec
xor
sti
cmp
cld
xorb
adc
int
pop
cmpsl
mov
jbe
mov
loope
sbb
add
add
je
mov
and
or
cmp
ljmp
push
mov
mov
add
shlb
call
decl
movsl
and
pcmpgtd
cmpsl
push
shl
shlb
sbb
fnstenv
cmp
dec
xchg
pop
xchg
xchg
scas
in
pop
int
dec
cmc
cli
push
mov
shr
fst
daa
ljmp
ret
out
cmp
and
or
jle
and
notb
ljmp
xor
scas
loopne
insb
pop
shlb
inc
mov
pop
fsubl
jle
test
out
mov
xchg
data16
adc
aaa
ljmp
daa
cli
cmp
push
jg
jecxz
ret
daa
and
jle
shr
sub
mov
test
xchg
or
sub
push
add
test
mov
maskmovq
testl
inc
sub
mov
pop
int3
mov
fs
dec
addr16
mov
mov
mov
fimull
jns
insl
jge
mov
add
jg
pushf
push
xor
pop
lods
scas
pop
fistpl
xor
pop
or
push
jnp
sbb
mov
and
cmpsb
jmp
mov
push
lret
test
scas
add
imul
and
in
scas
xchg
pusha
ljmp
inc
clc
and
outsl
mov
movsb
stos
bswap
adc
je
repnz
sub
mov
pop
mov
cmp
push
daa
adc
dec
fildl
stos
and
les
xchg
mov
aam
arpl
hlt
sbb
push
jnp
cmpsb
in
push
repnz
push
rcrb
sub
insl
in
and
shr
jecxz
or
shlb
clc
cmp
lcall
mov
push
out
push
aad
faddl
shlb
dec
mov
pop
jmp
push
jno,pt
pop
jg
or
je
sbb
xchg
pop
and
or
mov
les
xor
push
std
pop
sub
add
mov
out
ljmp
jno
cmp
jae
ss
add
pop
lahf
fistl
arpl
rcrb
sub
mov
test
dec
mov
mov
andb
pop
add
push
fcmovbe
clc
arpl
fistps
mov
mov
leave
movsb
imul
icebp
pop
mov
rclb
imul
dec
adc
ret
mov
cwtl
adc
sub
movsb
jbe
add
sub
cmp
sub
roll
push
cwtl
jmp
jno
pop
aad
enter
mov
jg
repz
push
imul
mov
mov
push
xor
pop
lret
jg
dec
fbld
scas
fs
cmp
push
and
cmp
mov
lods
add
sub
stos
jp
es
out
mov
addr16
scas
xchg
subb
into
adc
pop
sub
ss
iret
popa
ret
cmc
ret
rcr
insb
mov
dec
rol
pop
sbb
test
xchg
sbb
dec
jae
dec
iret
xchg
bnd
lcall
int
test
insb
mov
push
lock
nop
mov
insb
loopne
movsl
push
test
pusha
push
bsr
xlat
daa
nop
ficompl
mov
addr16
hlt
mov
push
and
fisttpl
sbb
das
daa
jecxz
out
mov
shrb
mov
xchg
cmp
dec
dec
xlat
cwtl
inc
dec
sub
fisttpll
adc
inc
insl
fcomi
inc
mov
mov
xchg
push
cld
es
stc
repnz
xor
cld
int
ficompl
pop
incl
add
adc
sbb
in
cmpsb
pop
ss
push
xor
cmpsl
out
test
jmp
cmp
mov
or
rorb
ss
mov
jnp
popf
and
mov
and
or
int
cmp
jnp
push
in
ret
bound
loope
jbe
jg
cld
add
ds
mov
daa
xor
inc
mov
inc
adc
adc
mov
sti
push
ss
mov
push
sub
sti
push
mov
mulb
mov
bound
or
subl
sub
mov
pop
lcall
mov
aaa
xchg
inc
lods
jns
jmp
push
add
insb
push
aam
les
push
xor
lret
jb
mov
icebp
sub
sbb
pushf
push
and
push
pop
ficompl
negb
mov
nopl
mov
jno
xchg
sub
test
scas
leave
sbb
xchg
mov
mov
adc
movsb
sti
adc
paddq
ja
add
adc
mov
dec
js
neg
push
stos
cs
enter
int
adc
cltd
sbb
sub
jecxz
adc
jg
mov
fs
les
push
les
cli
jecxz
mov
stc
sti
cmc
push
jg
inc
cmpl
js,pt
fsub
sti
pop
mov
mov
mov
mov
xor
dec
in
mov
inc
test
sub
clc
sub
dec
std
push
mov
fidivrs
dec
cmpsl
jbe
cmp
in
bound
mov
jecxz
aas
push
cmp
js
in
aad
movsl
cmp
inc
into
popf
sub
sub
or
icebp
or
daa
stos
or
sub
push
mov
out
add
divb
mov
inc
icebp
jnp
fdivl
mov
dec
stos
or
je
stos
or
and
gs
subl
dec
scas
inc
and
dec
and
dec
out
pop
lahf
push
xor
js
pop
mov
mov
and
cmp
aad
nop
or
imulb
push
inc
jmp
lret
in
xor
ja
inc
pop
pop
sub
xor
or
inc
out
aas
mov
aaa
gs
std
add
out
xchg
or
push
lock
repz
shl
cli
lea
fidivrl
mov
std
xchg
fisubs
leave
pop
in
in
xor
mov
shr
lea
sbb
ja
xor
js
rolb
cld
sbb
dec
mov
inc
fs
mov
mov
enter
xchg
jae
ja
mov
lds
fildl
mov
insb
jnp
pop
xorb
nop
push
lea
hlt
dec
inc
inc
pop
aas
jge
les
cmp
or
inc
jge
inc
adcb
out
js
xchg
jmp
push
in
in
lock
mov
cmp
in
jl
mov
adc
stc
out
mov
lret
jo
pusha
decb
inc
add
or
std
ret
daa
cld
cld
mov
jmp
push
pop
nop
scas
aaa
xchg
gs
and
mov
lea
fisttps
test
dec
jns
mov
dec
push
inc
enter
push
fisubrs
sahf
or
stc
mov
imul
dec
cmpsb
cli
sti
add
movsl
sbb
cmp
mov
sbb
je
int
sub
mov
adc
lcall
in
jo
push
enter
push
shr
and
mov
mov
pop
mov
outsl
add
and
loope
addr16
cmp
stos
fstpl
and
iret
repnz
sbb
fistl
push
insl
enter
js
pop
arpl
or
ror
mov
mov
mov
push
arpl
mov
cwtl
xchg
pop
and
sub
sbb
js
cld
pop
cwtl
loopne
aad
mov
pop
lock
je
fstps
push
cltd
mov
aad
test
test
jbe
loop
adc
fmuls
adc
loope
nop
dec
push
cmovae
movsb
mov
pop
add
lods
aam
inc
sahf
adc
jnp
sbb
sbb
xor
in
or
push
xor
jg
dec
sub
fnstenv
outsl
xchg
lret
dec
jmp
fbstp
mov
jo
in
push
ljmp
and
mov
cld
les
push
lret
outsl
sti
and
pop
js
cmp
ret
in
arpl
jbe
xor
push
les
pop
xchg
test
push
jmp
xchg
nop
sahf
fstl
xchg
mov
push
dec
insb
xor
std
scas
mov
cli
xchg
daa
and
fldt
lahf
pushf
roll
and
fs
pop
stc
pop
pop
int
jg
and
jnp
push
cmp
aad
movsb
cs
jmp
test
jb
add
mov
add
jl
mov
add
fdivr
jno
insl
cmp
stos
data16
inc
xchg
bound
mov
pop
pop
bound
jecxz
sbb
jmp
cmp
dec
lods
mull
mov
jno
test
jno
sub
call
adc
dec
jp
fwait
bound
pop
int3
rclb
xchg
lds
mov
cmp
fdivl
sbb
decb
movsl
leave
push
inc
addb
addr16
fs
dec
repnz
dec
out
cltd
inc
insb
rcll
stc
pushf
insb
ficoms
jb
aam
mov
sti
add
push
mov
les
aad
xchg
xor
xchg
data16
pushf
das
in
pop
jle
ret
ds
mov
imul
mov
or
pusha
andb
push
mov
cmpsl
xchg
lods
enter
idiv
mov
pusha
adc
ds
add
test
gs
les
dec
dec
lods
mov
fcoml
lret
push
mov
cld
or
pop
loopew
mov
mov
les
add
sub
xorl
jo
out
xchg
or
sub
xor
int
xor
pop
std
jecxz
ds
lods
clc
push
add
js
jae
inc
je
into
lods
pop
mov
or
addb
xchg
lret
in
pop
lahf
in
cmp
or
nop
mov
lcall
test
sbb
xchg
loopne
dec
pop
lcall
call
cmp
lods
adc
jno
pop
sbb
dec
or
sbb
jle
cmp
push
inc
xchg
scas
xor
mov
add
pusha
push
jmp
or
adc
dec
jbe
push
mov
ss
sbb
xchg
outsb
addr16
push
or
mov
decl
mov
lret
xchg
push
mov
movsb
push
jno
movsb
mov
xor
int
lcall
add
lock
out
lock
sub
out
aaa
insb
push
pop
scas
mov
adc
jb
jns
dec
lock
mov
and
mov
cwtl
sahf
dec
cmp
lods
jne
xchg
mov
aaa
mov
hlt
insl
sub
call
icebp
lods
stos
cmp
jecxz
sti
jg
out
pop
test
int3
xchg
xchg
movsl
inc
int3
icebp
inc
mov
adcb
es
sbb
int3
lahf
xor
xchg
aad
or
xchg
insb
mov
adc
mov
jmp
stc
push
shlb
push
test
popf
rcll
mov
xchg
aaa
and
clc
mov
push
fcom
and
xchg
adc
inc
add
cmpsb
dec
inc
add
jo
fisubs
mov
jno
inc
mov
dec
and
pop
push
mov
push
jl
mov
idivl
sti
popa
dec
xchg
cld
xor
stos
xor
scas
push
push
xorb
int
clc
out
stc
mov
or
xchg
push
mov
cmp
dec
jg
subl
xchg
cmp
mov
test
and
mov
inc
repnz
leave
std
out
mov
test
cmp
xor
push
push
inc
inc
shll
cmp
add
mov
add
jge
or
repz
cmc
shll
stos
out
mov
decl
adc
xchg
pop
add
mov
fbld
or
mov
inc
jge
jecxz
data16
mov
jle
stos
push
pop
cwtl
push
push
sbb
arpl
inc
sub
cmp
mov
je
addb
pop
sub
or
mov
mov
cmpsl
arpl
or
pop
push
fwait
jmp
lahf
dec
mov
xor
into
mov
repnz
add
ret
sbb
nop
jne
unpckhps
or
les
pop
shlb
bound
cs
fwait
aas
pop
cmp
cmpsl
rcll
es
mov
add
insb
push
cmp
dec
push
mov
jno
ret
gs
sub
es
pop
das
mov
frstor
pop
ss
lret
cmp
outsl
push
and
mov
das
add
dec
xlat
push
fmull
jb
cltd
rclb
movsb
mov
dec
ds
dec
xor
dec
mov
adcb
cwtl
test
out
xlat
xor
mov
push
mov
add
jmp
ret
mov
inc
pop
inc
cmp
in
sub
xlat
sbb
push
or
loopne
cmp
xchg
jnp
pop
lock
imul
int
sbb
mov
orb
jae
cmpsb
int3
sbb
xchg
or
inc
push
xorb
lea
or
gs
cmp
lret
icebp
ja
cmp
scas
jae
jo
adc
jecxz
fldt
hlt
add
lret
push
loopne
loope
sub
loope
mov
dec
add
and
cmpsb
cld
cld
or
scas
sub
inc
jno
mov
jmp
xor
and
mov
xchg
fwait
mov
mov
adc
jge
add
popf
movsb
cltd
ret
out
cmp
cmpsl
outsb
mov
and
shlb
aas
insl
xlat
movsb
cmpsl
divl
mov
mov
xor
pop
shl
mov
sub
aas
or
pop
and
std
aas
std
add
mov
cmp
xchg
stos
out
sub
rcr
sarl
jns
stc
cmp
hlt
sbb
es
leave
cmp
mov
jl
not
mov
shl
enter
add
fcomps
in
rcr
sbb
sub
dec
sbb
xchg
xor
data16
push
scas
ja
xchg
in
stos
adc
je
mov
std
or
mov
cmpsb
and
jne
sbb
into
testb
andb
and
mov
cmp
ret
cld
aas
inc
aam
mov
push
pop
mov
call
sti
dec
xchg
das
pop
mov
inc
aad
inc
data16
testl
fimull
cmp
hlt
loope
hlt
and
lahf
mov
sbb
andb
scas
rorl
lss
sub
mov
or
adcl
cmc
mov
insb
testl
scas
fdivl
xor
xchg
jl
scas
lds
adc
ja
pop
lret
sbb
adc
repz
jecxz
adc
scas
ss
adc
pop
es
call
xor
outsb
fmull
aaa
sbb
nop
je
fwait
jp
mov
ljmp
cmp
lcall
lret
push
mov
and
cmpl
jb
dec
xor
adc
sbbb
in
test
jl
int3
mov
mov
sub
dec
leave
mov
imulb
xor
jmp
cmovbe
mov
jne
imul
mov
mov
pop
repnz
pop
pop
add
ds
pop
jns
sbb
cltd
outsb
inc
loop
dec
pop
out
imul
xor
or
scas
inc
jle
xchg
lret
jge
cmp
mov
or
movl
and
jecxz
adc
sub
test
push
lcall
lret
xchg
lods
aaa
add
bound
cmp
lods
xor
aam
push
push
aaa
pop
jg
pushf
jbe
je
add
rcrb
cmp
xor
inc
jno
and
sub
shll
sbbb
std
push
repz
fsubl
jp
xchg
xchg
or
loop
adc
scas
js
scas
mov
test
sbb
adc
adc
out
arpl
lods
outsl
xchg
es
push
sbb
jp
mov
fisubl
cwtl
xchg
dec
fdivrl
lahf
in
gs
cmp
xor
mov
sbb
movsb
ss
mul
addb
sahf
mov
cmp
sub
cmpsl
shrb
dec
sub
and
ret
jmp
movsl
or
cwtl
jge
mov
dec
push
sbb
inc
jae
sub
inc
pop
push
aas
in
dec
int3
cmc
mov
and
xchg
aaa
cmp
das
out
stos
mov
xchg
pushw
iret
in
nop
fsts
xor
test
lock
sub
push
outsb
and
mov
movsl
fistl
jno
int3
pop
xchg
loopne
sbb
jmp
dec
repz
incb
add
sahf
jmp
jo
dec
xchg
adc
push
mov
cmp
inc
sub
loope
test
mov
xor
ret
aas
push
lahf
bound
test
mov
pop
push
es
push
cltd
pushf
jg
push
mov
jge
xor
out
ja
fisttpl
popl
cmp
add
lea
jge
mov
aas
imul
push
or
bound
ja
test
je
fildl
or
xorl
mov
push
push
fistpll
loop
scas
adc
ljmp
dec
stos
loop
mov
xchg
sbb
cld
mov
fs
mov
jnp
xchg
jecxz
fsubrs
scas
scas
outsl
xchg
mov
xchg
push
pop
in
jp
pop
or
adc
jns
rclb
mov
pop
icebp
cmp
cmpsl
sbb
out
dec
or
mov
popa
int
loope
rolb
and
inc
xor
mov
lods
xchg
popa
call
aas
xchg
mov
jge
out
les
in
xor
add
push
sub
pop
iret
cmpl
sbb
ja
and
addr16
je
push
push
push
das
pop
inc
push
inc
dec
cmp
cmp
in
mov
std
inc
sbb
ja
xor
je
ja
daa
pushf
push
das
or
adc
imul
mov
mov
adc
int
xchg
nopl
pop
xchg
pop
mov
enter
ds
jge
xor
inc
mov
into
mov
cmp
rol
imul
jnp
sbbl
fcoms
mov
cs
nop
jno
in
je
test
rolb
pushf
movsb
in
sbb
dec
xchg
je
push
jae
shrl
lret
ja
call
cmpsb
out
aam
jmp
inc
push
jmp
inc
pop
ficompl
and
inc
in
les
mov
and
cs
jecxz
bound
sub
icebp
loop
testl
bound
fmull
int3
pop
shll
push
add
pop
jns
fisttpl
imul
aam
outsl
inc
jne
sbb
xchg
cmp
mov
mov
nop
testl
lods
mov
sub
data16
dec
pusha
insl
inc
jo
aad
mov
fcoms
into
aas
nop
cmp
out
sbb
mov
mov
lds
fidivs
popf
repz
sub
aas
insl
aaa
ja
dec
or
jo
cmp
push
mov
pop
repnz
jbe
and
daa
repnz
mov
mov
jo
push
ret
xchg
sub
jno
test
mov
test
dec
dec
incl
and
mov
in
cmp
pushw
mov
add
lock
je
fsubr
lahf
hlt
sbb
push
in
flds
shl
xchg
fisubl
xchg
lret
push
test
push
pop
dec
adc
jp
mov
movsl
test
dec
xor
ljmp
mov
loop
adc
andl
fcmovne
arpl
adcb
hlt
shr
cmp
mov
cmpsl
mov
js
mov
bound
xlat
xchg
imul
add
xchg
pop
push
cmp
data16
into
dec
imul
jbe
mov
nop
dec
loope
inc
pop
cwtl
xor
inc
pop
outsb
mov
movb
mov
fldl
imulb
jns
pop
xor
stc
rclb
test
pop
js
sub
dec
xchg
call
mov
xor
mov
arpl
movsb
xchg
leave
cwtl
cmpsl
pop
test
call
mov
sub
pop
xchg
je
xchg
jle
mov
add
ret
jbe
mov
pop
rol
fcmovbe
cmp
xor
push
roll
mov
leave
pop
mov
hlt
inc
iret
xchg
sahf
loopne
cmp
push
jnp
mov
pop
jp
pop
push
lock
mov
mov
call
xor
ror
lods
ds
ja
add
sbb
mov
sbb
mov
rcll
mov
add
add
cld
in
mov
push
push
pop
das
and
or
outsb
in
pop
and
pop
or
loopne
mov
nop
cmp
stos
jmp
xchg
addl
aad
outsb
pop
xorl
inc
in
mov
sub
pushf
mov
dec
cmp
adc
shlb
mov
rcrl
jmp
xchg
mov
in
add
pop
shl
adc
scas
aam
xchg
dec
lea
in
es
sbb
lods
jno
mov
leave
mov
popf
shll
sbb
push
mov
inc
xor
ja
xchg
roll
mov
or
fucom
push
inc
jle
ret
daa
ret
cs
popa
sbb
mov
ficompl
pop
sbb
les
in
xchg
ljmp
cld
test
idiv
mov
int
cmp
addr16
xchg
mov
test
dec
aas
stos
pop
mov
ljmp
loope
fnsave
cli
and
xor
fistl
mov
adc
lock
rcll
ficomps
mov
jo
inc
insb
jl
dec
pop
lea
cmpsb
in
test
cmp
stos
lahf
mov
out
lahf
cmp
into
pop
mov
in
pop
mov
mov
in
inc
icebp
mov
mov
jp
adc
mov
cmp
adc
add
jnp
push
jg
sti
sarl
mov
ja
sub
sti
push
xchg
std
pop
ljmp
xchg
sub
mov
pusha
and
imul
jmp
inc
adc
cmp
ja
jmp
xor
pop
sti
call
ret
push
test
sbb
sub
pop
adc
cmp
fnstenv
inc
xchg
mov
hlt
adc
adc
mov
imul
xor
in
popf
pause
or
out
mov
jbe
stos
dec
aaa
add
fcmovnb
aam
stos
cmp
in
fidivl
imul
lds
pop
call
bound
mov
clc
insl
bound
std
dec
xchg
movsl
rcr
inc
adc
mov
push
xchg
or
lds
push
jg
addr16
int3
pop
adc
xchg
dec
dec
mov
rcrl
jnp
push
cmp
or
inc
sbb
subb
add
jae
xor
and
subb
jecxz
or
jno
es
xchg
pop
pop
or
jecxz
push
lret
sarl
pushf
xchg
mov
repz
test
pop
mov
in
pop
insb
cmp
lods
or
aas
repnz
inc
xchg
or
cmp
xchg
sar
and
icebp
clc
scas
add
lcall
cld
aad
push
and
adc
outsl
mov
mov
rolb
add
aaa
lcall
xor
cmpsl
repz
jg
cli
mulb
sarb
cmp
mov
adc
pop
and
mov
fimuls
mov
std
dec
sarl
out
sub
dec
dec
sahf
inc
rorl
movsb
sub
mov
sub
test
cmc
out
cwtl
mov
and
test
push
jecxz
dec
fistpll
jne
cmc
xor
in
jo
jb
mov
mov
idiv
lods
imull
mov
out
xor
fcomp
and
mov
sbb
mov
pop
xchg
ljmp
repnz
add
scas
add
scas
pop
add
bound
mov
jle
or
rcll
pop
test
push
sbb
jge
mov
dec
jge
inc
xchg
popf
or
xchg
jno
loopne
sbb
mov
xor
shr
pop
sub
and
imul
dec
xchg
mov
cmpsb
arpl
xchg
in
out
cmp
add
sbb
ret
mov
sub
sub
or
mov
add
sbbl
shrl
subps
pop
push
cmp
or
mov
mov
in
not
test
jno
bound
into
addr16
sbb
fstpl
add
ret
loope
into
inc
rcrb
ljmp
dec
inc
or
mov
hlt
push
aas
cs
es
push
scas
jnp
or
popl
decl
fdiv
addr16
roll
sub
in
mov
sub
lock
or
insl
xchg
xchg
inc
js
pop
sbb
sahf
jbe
and
xchg
xchg
out
mov
cmc
xor
xchg
fmull
lock
stos
pusha
mov
push
pop
aad
add
and
mulb
movsb
inc
push
xchg
popa
pop
sarb
mov
push
pop
xor
gs
sbb
test
test
sbb
inc
sahf
jmp
icebp
pop
fisubl
xchg
mov
jmp
cld
scas
ds
repnz
outsl
jmp
xchg
out
cmp
pop
sbb
sbb
repz
mov
hlt
loopne
fwait
pop
lret
xchg
aaa
data16
fwait
jle
dec
lods
out
ljmp
insl
arpl
add
xchg
hlt
add
mov
popf
dec
adc
sbb
and
cltd
icebp
jl
dec
sbb
das
cwtl
jno
jl
pop
fwait
jb
push
fsts
pusha
sbb
cmp
jae
arpl
outsb
xchg
les
add
test
or
out
jo
or
test
pop
lcall
cmpb
pop
pop
mov
popf
insb
push
repnz
lret
movsb
push
dec
int
insb
xlat
in
xlat
cmpsb
inc
push
sbb
mov
and
in
pop
mov
pop
outsb
xchg
sar
fcmovne
push
fldt
ja
test
xchg
lcall
adc
pop
pop
data16
or
push
sbb
in
mov
fstl
push
frstor
mov
jb
cmp
dec
mov
in
and
lret
call
cmp
or
outsl
lods
sahf
in
add
cmp
fsts
sub
sbb
or
lods
pop
repnz
fsub
lods
test
add
inc
ja
test
fmul
sbb
mov
in
ljmp
jle
inc
or
mov
push
loopne
jmp
lods
push
push
pop
dec
mov
and
lods
pop
push
aas
mov
pop
jg
xchg
inc
pusha
inc
loop
dec
cmp
fs
loop
aas
lock
cwtl
insb
int
jg
mov
and
jecxz
lods
test
int
sarb
ficoms
loope
pop
out
and
or
jo
fisubrs
loopne
orb
sbb
push
shrl
push
mov
insb
sub
dec
mov
sub
or
mov
test
pop
ss
mov
sub
repz
push
xchg
mov
in
aam
mov
fidivrl
inc
stc
pop
inc
mov
and
dec
pusha
add
jle
sbb
ret
rcrl
or
insl
xchg
fwait
xchg
arpl
xchg
sbb
jmp
jb
lods
pop
in
push
and
fcmovnu
lret
ds
pop
mov
mov
int
aas
lret
aas
lds
ret
lahf
pop
das
mov
xchg
iret
ljmp
es
andb
mov
cli
and
mov
addr16
adc
mov
scas
testl
bound
inc
jge
in
out
dec
dec
sahf
adc
test
push
inc
iret
ret
cmp
mov
jl
aas
mov
pop
cmpb
aaa
and
xor
jnp
repz
sub
jnp
fidivl
test
mov
adc
and
iret
sbb
jp
dec
sbb
adc
add
test
outsl
loopne
xchg
std
mov
mov
pop
cmp
loope
js
cmp
dec
pop
push
jnp
mov
push
cmp
gs
xchg
neg
dec
inc
sti
orb
imul
sbbl
sub
jg
mov
lcall
outsl
add
inc
fs
push
sub
jg
enter
scas
mov
mov
cmp
insl
and
cli
cld
sub
mov
mov
dec
lret
jno
and
fstpl
lcall
dec
mov
aas
in
lods
pop
clc
xor
movl
jg
cmpsl
push
out
shll
and
stos
xchg
fidivs
loop
push
or
push
cmpsb
into
pop
dec
ja
dec
add
rcrl
mov
jb
push
pop
ljmp
data16
in
outsl
pop
mov
ds
fiaddl
pop
adc
xor
and
jecxz
pushf
adc
sub
or
ffreep
je
stc
jp
mov
ficomps
ret
cmpsb
je
fidivs
je
add
mov
int
pop
arpl
fisubrs
sti
loop
inc
jne
cmpsl
lods
dec
pop
inc
mov
in
dec
xor
ficompl
sbb
jbe
popf
push
arpl
jae
imul
ss
sub
and
int3
push
repnz
dec
inc
push
fiadds
test
xchg
or
mov
lret
pop
jmp
pop
xchg
inc
sub
push
cli
inc
and
notb
xchg
es
insb
jecxz
xor
aas
dec
mov
xor
push
rcl
push
dec
aas
sbb
lret
push
fs
adc
add
mov
fsubrl
sub
sbb
xor
xor
inc
sti
push
cmp
xchg
fwait
sub
xchg
lods
pushf
outsl
leave
push
sub
int
ljmp
push
cli
push
es
movb
xor
popf
test
outsl
xorb
mov
out
bnd
leave
fnstcw
and
gs
dec
ror
jb
scas
pop
lea
lea
sub
mov
aad
aad
push
loop
imul
xor
push
aam
mov
xchg
addb
jmp
xchg
je
adc
imul
cmp
push
cmc
pop
mov
lret
inc
mov
lahf
inc
hlt
arpl
test
sub
pop
nop
cs
mov
in
add
xor
inc
sbb
jp
add
imul
inc
icebp
cmp
mov
jno
roll
mov
mov
mov
jns
insl
dec
mov
lret
pop
add
fimull
pop
jg
push
adc
push
sbb
enter
bound
cmpsl
push
aad
ljmp
rcll
in
jo
mov
loope
lahf
mov
mov
mov
jo
in
pop
pop
mov
mov
iret
lcall
je
inc
jno
inc
jbe
mov
and
mov
xor
cmp
mov
movsb
daa
pop
xlat
mov
sub
push
orl
cld
insb
aam
jo
and
add
call
punpcklwd
sbb
push
outsl
icebp
cmp
or
sbb
stos
mov
push
push
and
sarb
repz
lret
xrelease
adc
lock
hlt
stos
inc
adc
scas
aam
jmp
loope
pop
aam
jae
mov
pop
jno
xchg
or
xchg
sub
clc
stos
out
sbb
xor
fimull
push
sbb
push
mov
idivb
idivl
xchg
mov
adc
js
jne
pusha
mov
out
les
das
mov
jo
lret
scas
cmp
lock
stc
out
lret
ds
dec
lds
pop
xchg
inc
sub
sbb
jbe
int
mov
xchg
clc
xchg
add
dec
xchg
int
pop
cmp
or
outsl
jns
adc
int
jo
stos
inc
out
in
add
pop
ljmp
insb
cmp
adc
icebp
stos
idivl
adc
mov
inc
outsb
lret
sub
imul
daa
or
mov
adc
enter
inc
fucomip
jns
stc
cmp
pop
bound
popa
dec
mov
out
add
fwait
iret
push
or
jl
add
pop
outsl
or
movsl
outsb
xchg
dec
dec
lds
imul
xor
insl
dec
fwait
xlat
andb
iret
dec
mov
fdivl
outsl
cmc
and
sub
add
test
push
and
lock
sub
imul
push
dec
cmp
popa
sbb
mov
ret
sbb
addb
inc
push
mov
cld
in
jae
add
loop
and
loop
push
xchg
and
xchg
dec
xchg
push
out
lds
xchg
mov
sub
mov
jb
je
or
pop
xchg
xchg
cmp
add
jge
dec
jo
or
mov
mov
and
inc
push
adc
and
xor
lock
xor
cmc
imul
pop
iret
fldln2
and
in
stos
jecxz
fmuls
cwtl
movsl
mov
mov
jmp
mov
roll
enter
xchg
in
cmp
dec
xchg
jmp
cld
xor
popa
ffreep
pop
sub
fld
inc
push
rorl
sti
dec
stc
push
pop
jp
mov
add
cmp
pusha
or
test
test
inc
enter
dec
mov
scas
mov
movsb
push
jne
push
daa
xlat
idivb
stc
mov
add
mov
add
xchg
loop
xchg
fs
test
rorl
sbb
dec
dec
aad
js
cs
outsb
jmp
inc
sti
imul
cmpsb
js
lea
xor
dec
fs
je
test
lss
je
outsb
stc
mov
inc
jo
jo
xor
scas
add
xacquire
aad
pop
or
test
mov
pop
jp
test
mov
xchg
lea
sahf
sbb
jbe
ret
vcvttpd2dqx
hlt
sub
or
pop
add
push
and
jnp
push
shl
mov
mov
out
stos
push
imul
movsb
inc
aas
filds
xor
push
mov
push
movsl
jle
xor
test
mov
scas
stos
push
call
xor
dec
cmpsb
or
xlat
jle
inc
xchg
jecxz
xchg
sbb
movsb
sub
mov
lahf
push
mov
arpl
popf
jns
gs
jne
push
shr
stc
subb
testb
sti
sub
xchg
out
in
aaa
jnp
jnp
push
ds
sbb
addl
mov
inc
sub
mov
sbb
mov
add
je
addr16
push
leave
rolb
jle
mov
inc
es
sarl
fs
mov
orl
cmc
sti
push
cmp
mov
lds
stc
clc
xor
jge
sti
xchg
fsubrs
lea
pushf
aam
dec
mov
xchg
notb
stos
stos
scas
testb
sbb
mov
leave
lcall
stos
xchg
jp
pop
xor
in
cmp
push
mov
or
or
xchg
add
shrb
mov
enter
movsl
pop
sub
pop
iret
stc
arpl
lods
dec
jbe
sbb
xchg
fwait
mov
js
mov
outsb
popf
jae
pop
or
jnp
rorl
jp
pop
divb
xor
aad
xchg
mov
aaa
xchg
add
outsb
xor
mov
mov
popf
sbb
mov
ja
js
xchg
ss
jb
lret
cwtl
fisttpl
andb
popa
imul
add
mov
jp
mov
fidivl
mov
adc
pop
xchg
ds
out
fisubl
out
daa
jmp
mov
cs
add
loop
in
push
popa
es
mov
inc
push
hlt
lock
sahf
and
cmc
mov
aas
jne
jno
subl
lret
mov
or
sbb
jae
jecxz
scas
out
jge
cmpsb
push
aas
push
pop
sti
and
data16
add
cmp
cmp
scas
fsubrs
jnp
in
les
inc
sbb
add
dec
loopne
or
loopne
sub
mov
ret
mov
lds
int3
lret
xchg
mov
xchg
adc
inc
mov
mov
mov
aaa
iret
aam
lock
jne
mov
mov
pop
push
leave
and
cmp
into
add
insb
cld
insl
cs
jnp
lret
mov
fcoms
xor
push
push
fidivrl
adc
out
and
test
fs
jne
push
xor
cmp
pop
xor
mov
mov
xchg
xchg
fimull
cmpsb
das
pop
ret
sbb
adc
sti
fildll
cmpl
jne
lcall
fldcw
sub
dec
mov
xchg
xchg
mov
stos
shlb
xor
loope
into
shl
lahf
aaa
push
test
rcll
cmpsl
decl
mov
lea
inc
push
pushf
lret
clc
fstl
xor
and
add
or
ja
dec
push
jo
mov
xor
dec
dec
xchg
addr16
adc
push
dec
mov
sahf
adc
sarl
add
mov
sbb
test
je
dec
add
xor
mov
xor
mov
add
int3
sarb
out
jecxz
xchg
and
sti
dec
scas
xor
inc
mov
sbb
jecxz
outsl
int3
adc
xor
pop
jle
xorb
xor
and
call
jmp
rolb
fsub
xchg
in
or
fisttps
pushf
mov
lods
outsb
push
cmp
cmp
sbbl
cltd
int3
adc
push
popf
fidivs
xor
push
dec
int3
mov
mov
icebp
push
je
or
add
dec
js
jns
popa
and
arpl
jbe
aam
mov
outsb
jbe
xchg
sbb
setne
xchg
insb
jo
movsb
xchg
and
imul
dec
push
lcall
test
std
sbb
incb
mov
cmp
sbb
push
testb
jne
sub
push
cmpsb
icebp
fs
xor
shll
das
pop
call
dec
mov
sub
fisubl
lods
lea
test
daa
push
inc
fcmovb
roll
and
pushf
mov
repz
cmp
call
outsl
pushf
mov
dec
leave
xor
xchg
jo
and
pop
sub
mov
jecxz
movsb
shlb
xchg
les
loopne
sbb
add
jecxz
lret
rcrl
stc
lcall
fwait
imul
xchg
sub
ljmp
jb
pop
int3
movsl
dec
aad
mov
add
scas
stos
mov
mov
push
xchg
sub
sbb
xchg
sbb
lds
adc
pop
sbb
mov
rcr
push
es
and
jecxz
lods
inc
adc
test
and
mov
xchg
jb
out
inc
out
mov
int
pop
add
add
mov
mov
adc
aaa
in
scas
xlat
dec
popf
lret
or
mov
rorl
dec
push
sbb
jl
lods
ret
pop
dec
call
lds
cmp
push
pusha
sub
mov
xor
aas
scas
cli
pop
xchg
cwtl
inc
loop
ror
cmp
xchg
out
mov
dec
or
mov
cmp
mov
dec
lcall
stos
xor
jns
mov
mov
cli
je
mov
adc
or
mov
push
xchg
push
aad
nop
enter
sti
sub
stos
pop
jmp
outsb
xorl
mov
sub
subb
in
pusha
and
mov
cltd
loop
fldl
leave
inc
inc
cmp
fsubrl
mov
jmp
cmc
sahf
cmp
pop
cmc
loop
xchg
xchg
insl
icebp
jns
mov
xor
notb
arpl
mov
xor
mov
lods
pop
lahf
je,pn
gs
ss
mov
cmovnp
cltd
addr16
movsl
fs
sub
fimull
scas
xor
xchg
sbb
and
and
dec
cmp
jp
push
push
lock
loop
push
xchg
test
call
push
jnp
iret
out
push
test
push
mov
inc
add
jbe
mov
or
mov
and
mov
push
inc
dec
cmpl
mov
sub
movsl
popl
push
lret
dec
cs
aas
push
adc
add
cli
mov
xchg
dec
ljmp
adc
mov
dec
dec
pop
lahf
and
ficoml
xor
or
stc
out
mov
jno
sub
stos
push
ret
es
xchg
outsb
mov
gs
and
hlt
push
ja
fnsave
div
cmp
mulb
add
mov
stos
push
lods
cs
repnz
mov
stos
push
xorl
mov
dec
out
cmp
sbb
push
sbb
pop
aam
push
pop
push
fisubl
pop
lock
out
mov
xchg
clc
movsl
cwtl
dec
leave
jo,pn
xchg
and
xchg
jbe
lcall
push
sbb
pop
or
daa
stos
aaa
mov
inc
pop
jecxz
inc
fstpt
repnz
or
shll
push
fcmovnu
arpl
ficomps
rcll
jbe
mov
mov
lret
sbb
sub
sbb
or
repnz
orb
into
dec
hlt
mov
mov
cmpl
inc
xor
fwait
pushf
scas
leave
pop
fsubrs
adc
sub
cmp
sti
mov
lret
mov
scas
jl
pop
adc
mov
stos
sbb
jmp
es
inc
cli
mov
push
das
xchg
lahf
in
sti
mov
aam
aam
bound
dec
or
xchg
push
test
sub
xor
mov
add
in
jecxz
adc
pop
or
movsl
fnsave
adc
and
test
push
cmp
cmpsb
frstor
repz
jg
mov
test
leave
in
rcrl
xlat
xchg
into
loop
movsl
into
dec
call
jmp
mov
enter
adc
sub
es
scas
xor
dec
pop
lcall
xchg
and
scas
dec
pop
rclb
add
mov
in
mov
inc
push
leave
movsl
test
push
xchg
push
inc
adc
fldt
lahf
orb
icebp
in
loop
mov
icebp
je
sub
std
sub
jp
mov
cmp
mov
out
mov
xchg
loopne
mov
xchg
push
call
or
sub
and
mov
mov
jg
insl
or
nop
pop
push
xor
push
out
leave
add
icebp
sbb
fs
cmpsl
inc
jle
xor
sbb
mov
jg
nop
jnp
lods
and
sahf
loopne
adc
xor
bound
leave
scas
inc
int3
mov
pusha
nop
sbb
dec
adc
repz
add
out
xor
sub
sbb
loope
nop
pop
insl
pop
sub
cmc
ss
add
or
mov
cmpsl
adc
pop
add
inc
cli
leave
scas
xchg
sub
jecxz
sub
ret
xchg
inc
scas
lods
xor
mov
jp
in
pop
imul
stc
mov
cld
test
mov
das
std
lds
mov
lods
fcmovnbe
cli
clc
es
cltd
xor
jle
int3
mov
xor
test
sarl
add
jb
pop
dec
push
sub
jl
or
rolb
aas
xlat
dec
out
test
inc
fidivrl
cmp
mov
test
in
fwait
movsl
inc
jae
pusha
add
andb
jbe
inc
add
fsubr
inc
out
dec
popf
mov
fsubs
dec
mov
dec
pushf
clc
add
mov
add
fiaddl
mov
imul
push
fs
xchg
push
pop
and
mov
ret
das
filds
fwait
xchg
mov
and
dec
sub
orb
out
cmpsl
sub
nop
data16
icebp
sysexit
add
add
fisubl
and
scas
mov
out
repz
dec
fisubrs
sahf
rcl
mov
mov
pop
dec
mov
inc
dec
inc
ljmp
add
xor
push
jmp
cmpl
out
jp
idivl
repnz
xchg
aas
imulb
lahf
fucomip
flds
pusha
inc
sarl
fiaddl
pusha
fidivs
aaa
fimuls
subb
inc
mov
mov
std
loope
dec
adc
jle
xor
cmp
sbb
pop
jb
add
iret
mov
xchg
fisubs
dec
mov
add
hlt
rcrb
add
jns
lret
aam
mov
inc
and
adc
int3
or
popa
fnstenv
jno
push
add
cld
cltd
sbb
movsl
lea
leave
xlat
rcll
sbb
cli
aam
sbb
dec
in
stos
rcrl
push
cltd
fadds
add
jp
adc
gs
sub
xchg
and
test
cmc
push
pushf
inc
dec
jmp
add
jbe
and
cmp
movsl
mov
out
loope
cmp
je
ja
fisttpl
shrb
pop
pushf
scas
out
in
adc
sub
inc
jecxz
nop
mov
mov
dec
clc
lds
je
std
mov
sub
sub
jns
popa
ret
loope
xchg
push
push
jmp
jo
jo
xchg
ficoms
stc
jl
jb
push
lret
jl
dec
and
sub
sti
xor
test
mov
insb
mov
sub
mov
jl
push
inc
jns
sub
inc
add
repnz
or
xchg
aaa
fcoml
adc
ret
cmp
shll
mov
inc
aam
fnstcw
jl
stos
imul
call
or
outsl
out
icebp
imul
add
mov
insb
xor
in
jae
scas
sbb
jge
sarl
jo
jge
jecxz
out
xchg
lret
lea
xor
sbb
pop
inc
stc
dec
ret
imul
pop
rorb
leave
sub
push
inc
gs
shl
or
iret
jecxz
jl
shr
jmp
aaa
in
add
sub
sub
loop
cmpsb
lret
xchg
aaa
sbb
cmpsl
mov
dec
repz
dec
cltd
lock
push
dec
jns
mov
pop
in
sahf
xor
fsubrs
scas
test
mov
mov
sub
adc
jmp
xchg
push
lahf
fadd
inc
and
ds
dec
sub
inc
mov
popa
out
push
arpl
dec
sub
mov
je
sbb
les
xor
mov
icebp
jo
sbb
call
lret
lods
in
out
cltd
nop
jmp
dec
mov
loope
mov
pop
cmp
lds
push
out
cmpsb
lds
insl
addr16
outsl
movsl
nop
das
nop
mov
mov
fldl2t
fiaddl
adc
inc
rcrb
inc
xchg
add
mov
imul
add
repnz
or
fs
or
lea
insl
aad
das
stos
sbb
xor
data16
movsb
outsb
std
add
aas
cli
dec
dec
test
or
pusha
daa
xor
or
fnsave
pop
insb
xchg
push
ss
push
cltd
mov
xor
xchg
adc
fstl
lods
xchg
shl
dec
xor
xlat
mov
xor
jge
dec
es
xchg
pop
lea
sbb
jle
push
clc
insl
sbb
jns
idiv
rclb
jno
in
pminsw
lea
jp
adc
pop
gs
mov
xchg
mov
out
dec
daa
dec
pop
je
ja
jnp
xor
push
gs
test
mov
call
xor
outsl
sbb
xor
push
mov
cmc
imul
add
and
rcrl
les
mov
sbb
addl
rorl
int3
push
cmp
fisubl
or
jecxz
and
sbb
ja
xchg
push
cmp
fnstcw
push
mov
cwtl
push
orl
clc
push
out
cmp
mov
jmp
cmpsb
pop
mov
imul
sbb
repnz
stc
ret
dec
aas
mov
push
mov
pop
andb
mov
adc
insl
mov
push
cmp
shll
into
outsl
adc
mov
jmp
cmp
and
pushf
sbb
or
inc
sahf
mov
xchg
daa
pop
jae
jmp
pop
lcall
push
aad
imul
push
out
sti
jnp
ret
pop
filds
adc
into
rclb
jge
cs
push
ja
lahf
mov
jb
mov
inc
in
sti
aam
out
sti
orb
ret
insl
lahf
push
pop
repz
adc
mov
xlat
jb
mov
rorb
mov
sahf
fisubrl
inc
xor
loope
addr16
or
fcomp
es
ret
mov
jge
pop
push
faddp
cmpsl
outsb
or
daa
xor
lea
inc
nop
mov
or
push
les
aaa
or
shll
mov
xor
cmp
jne
sbb
int3
add
sbb
rcrb
repnz
popf
fwait
sub
and
por
cmc
adc
push
inc
dec
sbbl
movsb
cmpsl
rclb
pop
jb
repnz
mov
mov
adc
pop
stos
sahf
mov
sub
jl
psubsb
or
pop
lds
xchg
pop
and
mov
les
addr16
push
cmp
adc
out
adcb
lods
mov
add
pop
test
xorl
stc
mov
fwait
cmpb
lcall
dec
outsl
push
jp
rcrb
push
fcoml
mov
fisttpl
jbe
fsubrs
in
sbb
lea
insb
in
out
mov
ja
push
aad
mov
loopne
push
lods
jne
sbb
fstps
shl
cmp
pusha
xor
lock
mov
xor
jl
outsl
push
insl
ficomps
loope
in
sbb
jl
xor
pop
popf
or
add
mov
lods
and
sbb
test
aam
xchg
clc
loopw
mov
pop
ret
fmull
sub
add
sti
xorps
mov
cmc
xchg
mov
and
adc
xchg
into
mov
add
loope
ss
call
push
cld
mov
pusha
ljmp
inc
push
xchg
dec
cmpsl
cs
add
push
xor
shlb
xor
lea
pop
adc
mov
cmp
cwtl
sbb
dec
imul
fldl
mov
ss
repz
jp
mov
jmp
inc
lahf
jnp
mov
call
add
push
add
loope
adc
mov
test
jnp
or
test
sub
nop
pop
bnd
aaa
mull
movsb
std
sarb
inc
in
dec
pusha
int
push
push
mov
cltd
and
pop
sub
mov
fcoms
push
mov
dec
imul
imull
sub
je
jnp
ret
mov
mov
into
rcll
mov
push
loope
adc
cmp
dec
outsb
sub
adc
fs
mov
sub
or
call
hlt
rcl
mov
cmp
xchg
cmp
xlat
pop
mov
outsl
adc
call
fldenv
lods
xchg
adc
and
scas
jb
scas
jae
dec
imulb
xor
inc
loopne
lret
jp,pt
loop
jnp
dec
or
xchg
pop
push
or
push
jmp
mov
lock
pop
cmp
enter
or
test
imul
icebp
and
test
pop
sti
ret
pop
xchg
jne
popf
divl
pop
dec
dec
jae
sbb
pop
xchg
jno
sbb
scas
out
mov
adc
mov
xor
pop
or
cmc
jl
mov
xchg
dec
jb
movsb
and
sbb
xor
xor
sbb
lahf
mov
add
add
das
das
mov
sbb
imulb
ljmpw
sub
sub
mov
mov
mov
pop
rcrl
dec
sti
pop
xchg
sub
or
pop
aas
xorl
add
mov
stos
push
or
ret
inc
add
or
std
dec
mov
icebp
pusha
hlt
in
mov
xchg
lahf
lods
add
or
loop
inc
and
xchg
push
mull
jbe
insb
adcb
push
aad
xchg
adc
sbb
and
sub
hlt
scas
sbb
jle
jl
int3
push
inc
cld
push
fstpl
lahf
dec
sbb
mov
into
into
sbb
cmp
outsl
xor
mov
push
xor
mov
and
jge
cmpsl
push
mov
aaa
xchg
into
cmp
sti
mov
push
push
dec
xor
sub
sub
xchg
stc
lret
pop
push
aas
sub
and
pop
or
mov
cltd
jns
mov
mov
scas
imul
pop
pusha
shlb
fucomi
loopne
xchg
nop
inc
inc
sub
jecxz
imul
mov
rorb
lods
cwtl
shrb
dec
xchg
je
cmp
inc
repnz
insb
adc
inc
inc
test
or
sbb
xor
movb
push
mov
mov
es
aad
adc
rclb
inc
xchg
inc
or
jge
adc
inc
out
sarl
rorb
sub
ds
lock
push
lcall
push
cmp
xchg
pop
mov
jnp
and
mov
nop
pop
add
xchg
fwait
addr16
es
sbb
outsb
or
data16
out
jae
test
andb
xchg
test
cwtl
clc
jo
cli
pop
or
mov
dec
dec
sub
clc
negb
pop
outsl
xchg
and
jns
adc
scas
xor
aad
nop
dec
sbb
push
movsb
push
mov
and
mov
sbb
loop
mov
sbb
xchg
inc
ljmp
mov
xor
pop
push
outsb
iret
xchg
fldt
push
mov
lea
icebp
xchg
pushf
fcmovb
mov
dec
popf
and
dec
stos
pop
lock
leave
push
pop
sahf
adc
fildl
jno
ret
popa
lret
mov
loope
cmpsb
aad
stos
ja
push
mov
pop
cmp
jae
push
cmp
stos
push
push
push
and
add
xchg
scas
mov
or
sahf
lret
jl
push
les
xchg
int
push
push
mov
cld
push
and
mov
mov
sbb
gs
jmp
insb
hlt
xchg
dec
mov
adc
xorl
popa
add
mov
dec
stos
fs
dec
push
aam
adc
call
sbb
mov
sbb
insb
nop
out
in
call
cwtl
data16
sbb
sti
std
pop
shrb
xchg
cwtl
outsb
inc
bound
and
xor
hlt
sub
idivl
dec
inc
pop
mov
add
xor
imul
lea
inc
iret
aam
lods
insb
in
idivb
in
lock
in
sub
xchg
call
cmp
mov
and
test
call
mov
lcall
lahf
pop
inc
jecxz
mov
pop
push
arpl
or
xchg
out
dec
pop
cs
clc
sbb
push
lcall
adc
mov
push
xchg
clc
les
les
xor
xrelease
repz
cs
ja
jbe,pn
lock
repnz
aam
sahf
bound
or
cltd
or
imul
mov
movb
out
pusha
jbe
mov
sahf
fwait
sbb
repnz
jge
dec
push
testl
lods
jl
ja
data16
setp
mov
test
add
rcl
mov
adc
or
mov
stos
fisubl
cmp
repnz
in
lahf
call
adc
mov
movsb
or
negl
jno
into
insl
sbb
in
repnz
sub
aad
sbb
ret
lods
fwait
lds
push
cwtl
out
repz
enter
enter
out
cs
push
sub
ficoml
out
and
dec
jnp
inc
push
and
ljmp
add
cmpsb
aam
pop
adc
sarl
cld
loopne
mov
inc
pop
jmp
out
lret
mov
jp
test
mov
popa
push
or
inc
sarb
mov
cltd
addb
push
inc
ja
mov
sbb
insb
pop
lret
xor
push
es
sub
jo
enter
sti
fldt
fimull
fldcw
mov
xchg
or
xchg
add
sti
pop
cwtl
aam
cmp
ret
stos
jnp
xor
push
mov
iret
cmp
mov
dec
dec
lea
jp
pop
adcb
out
dec
cmpsl
aad
mov
add
lahf
bound
out
ja
jne
sub
pop
addr16
stos
cmp
outsl
ds
inc
pop
stc
fadds
and
mov
sub
xor
sbb
fdivrs
shll
mov
cmpsl
jl
add
data16
cld
xchg
xor
jg
mov
xor
cmpl
fsts
pushf
inc
faddl
push
stos
push
arpl
mov
mov
cmpb
dec
pop
push
test
inc
imulb
jmp
ret
xor
jbe
stos
cmp
pop
cmp
ret
movsb
sbb
addb
pop
repz
cmp
mov
cmpsl
mov
dec
imul
std
ds
sbb
pop
sti
aaa
gs
mov
leave
mov
std
pop
pushf
push
sub
iret
mov
xor
add
pop
out
int
pop
jo
mov
add
inc
stos
or
flds
je
mov
dec
xor
mov
inc
sti
dec
fiadds
inc
jp
cmpsl
repnz
repz
jge
and
inc
adc
dec
jnp
data16
jnp,pt
in
mov
sub
hlt
aad
aas
add
xchg
lcall
xchg
cmpsb
inc
mov
testl
push
mov
insb
stc
sahf
sbb
cs
xchg
inc
dec
pusha
out
mov
jge
popf
add
shll
mov
fcompl
dec
das
testb
jge
out
xchg
xchg
popf
test
aam
xor
jbe
loopne
xchg
sti
push
or
out
push
movsb
out
fisttps
sbb
inc
pushf
ss
cli
jno
movsl
add
push
xor
jge
jno
xchg
div
ss
in
mov
add
int
mov
aas
imul
xchg
jns
mov
mov
repnz
xchg
dec
scas
cmpsb
fimuls
cs
fadds
push
mov
sahf
clc
repz
sarl
cmc
xchg
xor
in
sub
sub
out
push
jg
clc
and
sub
lods
jecxz
and
push
repz
inc
push
sub
sbb
adc
or
pop
inc
test
add
mov
fildl
stc
and
std
mov
movsl
dec
out
sub
into
jg
xchg
pusha
rolb
add
push
adc
mov
jno
inc
enter
call
lods
dec
or
imul
movsb
aad
inc
pop
xor
shrb
jnp
leave
mov
xchg
jns
shll
leave
cld
add
lods
addr16
add
xchg
enter
push
jmp
jns
leave
fidivrs
dec
inc
in
push
cwtl
adc
jo
jle
es
fucomip
jbe
or
inc
insb
lea
test
jno
xor
dec
jnp
decb
outsl
out
adc
sbb
roll
aaa
dec
pop
stc
inc
jb
sar
insl
fnop
sbb
test
cmp
dec
xor
imull
xchg
mov
sbb
gs
xor
ficoms
jbe
add
push
push
mov
outsb
mov
repz
mov
addr16
lds
pop
test
xchg
or
mov
sub
xchg
jb
jp
mov
cmpb
push
push
sarl
mov
aam
inc
movsl
mov
push
jnp
sbb
dec
push
sti
jl
fnstcw
xor
mov
jp
adc
mov
xchg
push
cmp
push
fidivrs
jnp
pop
enter
or
lea
mov
xor
dec
jb
frstor
pop
pop
jbe
sarb
cmpsb
dec
cmpsl
add
xchg
in
shrb
xor
imul
jmp
sub
pop
mov
adc
adc
jge
mov
mov
add
push
push
add
cli
mov
xor
aaa
fwait
lret
mov
orb
je
bound
icebp
or
sbb
nop
and
jb
call
add
or
inc
arpl
std
les
mov
dec
or
mov
dec
cmp
pop
or
adc
push
fdivrs
filds
adc
clc
and
subl
cs
pushf
adcb
jno
shl
fdivl
cli
adc
pop
and
xlat
cmp
jmp
punpckhwd
cmp
dec
in
repz
mov
jae
fldenv
sar
pop
push
fwait
mov
adc
int
pusha
mov
pop
pusha
test
xor
andl
sbbb
push
and
pushf
jmp
mov
jmp
mov
pop
mov
jecxz
rcrb
pop
aas
lret
mov
push
and
fldenv
fwait
ja
xor
adc
out
movsb
in
or
and
inc
push
sub
and
mov
sub
cmp
mov
adc
test
jnp
addl
loopne
cmp
data16
shr
cmp
add
mov
push
push
xchg
or
in
sbb
or
mov
test
sbb
loope
push
in
xchg
fnstenv
add
call
testl
cmp
cmp
leave
aas
push
scas
xor
mov
pop
incl
sti
adcl
out
in
popf
inc
sbb
push
jmp
mov
addr16
cwtl
outsl
mov
repnz
lea
in
cmpsb
pop
ljmp
and
fwait
les
sbb
ss
xchg
dec
sbb
push
or
inc
rclb
cltd
int
jnp
dec
fistpl
push
int3
lea
out
aas
out
mov
mov
sbb
sbb
out
dec
dec
xor
push
jno
repz
cmp
or
add
cli
cmp
test
int3
or
dec
ficompl
shl
sbb
arpl
mov
mov
aaa
out
jge
jb
mov
mov
mov
clc
sti
arpl
cmp
lods
jbe
out
in
mov
lods
mov
cwtl
inc
mov
insb
sub
ljmp
inc
and
clc
mov
inc
andl
and
fs
mov
mov
xchg
add
int
push
push
hlt
xor
pop
test
popf
pusha
lcall
sub
xchg
adc
pop
cmpsb
mov
fildl
xchg
pop
push
loope
sub
dec
repz
and
inc
fisubs
out
sub
add
andl
or
mov
mov
jmp
xorb
sbb
ffree
outsl
outsl
inc
cmp
dec
pop
sbb
lret
xchg
lods
or
jnp
mov
imul
mov
pop
push
pushw
mov
mov
mov
stos
cmc
adc
test
stos
lea
cltd
insb
cld
test
xchg
push
mov
setae
sbb
inc
lods
pop
mov
jnp
add
xchg
bound
lods
lock
fs
jg
cmp
add
pop
xchg
pop
movsl
aam
lds
adc
int3
je
es
inc
xor
cmp
repnz
sub
sub
lds
jae
xchg
adc
and
loope
pusha
shrb
iret
pop
or
pusha
ss
pushf
mov
out
cld
mov
sbbl
enter
add
popa
sbb
or
mov
shll
loop
inc
pushf
cmpsl
rep
loopne
movsl
stos
fcmovnbe
loope
or
imul
push
push
sub
push
pop
push
push
adc
fldl
push
sub
lods
push
andl
push
cltd
lret
sub
dec
inc
ret
enter
jp
and
cltd
jb
int3
in
les
pop
fisttpl
out
mov
out
pop
pop
cmp
mov
jmp
lods
stc
fldenv
pop
xlat
test
stos
rol
addr16
mov
sbb
xor
ds
scas
add
mov
sbb
nop
dec
fcompl
adc
xchg
add
icebp
or
adc
mov
add
add
fistpl
pusha
and
lods
lea
dec
push
adc
lods
mov
adc
cld
jp
jecxz
repz
push
out
xchg
mov
add
fucomp
mov
ret
shrl
and
pop
pop
adc
dec
xor
push
ret
mov
outsl
leave
loope
push
pop
mov
push
nop
fisubrl
aad
shl
repz
not
sub
jo
cmpsb
mov
pop
mov
repnz
jb
insl
cmp
mov
jg
fidivrl
jae
movb
sub
lahf
movsl
jmp
sub
sub
imul
mov
fpatan
movsb
pop
outsb
jl
mov
sahf
movsl
adc
sub
outsl
and
pop
sbb
shrl
and
jns
fs
add
repnz
std
mov
mov
mov
stos
or
aaa
pop
test
mov
jo
inc
and
mov
popa
shll
mov
sub
mov
loope
dec
int
and
inc
dec
xorl
stos
pop
loopne
mov
dec
stos
inc
ret
dec
jae
loopne
sti
call
daa
push
push
js
and
jbe
xchg
push
aad
mov
mov
or
out
cli
ljmp
mov
imul
negb
pop
add
fidivrs
sbb
cmpb
xor
push
mov
mov
dec
sbbl
arpl
das
cwtl
rclb
push
pop
aam
push
pop
cmpsb
dec
sub
inc
sbb
andl
mov
pushf
in
fst
lret
push
stos
dec
push
jbe
loopne
cmc
dec
leave
sbb
test
mov
cltd
xor
cmp
cmp
mov
push
inc
test
dec
ja
dec
pop
xlat
cmp
push
popf
movb
std
mov
pushw
push
int
dec
or
mov
xchg
sub
mov
inc
repz
sub
rclb
pop
mov
ret
into
ja
bound
sub
movsb
lods
push
xchg
or
xchg
pop
dec
mov
imul
xor
data16
test
movq
and
test
popa
popa
lds
fmulp
out
out
les
mov
sbb
mov
stos
jp
adc
mov
or
cmp
inc
adc
ret
pop
xchg
pop
mov
push
mov
hlt
das
call
jle
sti
inc
inc
jbe
lods
scas
push
push
push
fsubs
sub
in
and
pop
int
mov
dec
sub
or
int3
stos
add
mov
insb
icebp
dec
int
test
push
scas
xchg
int
xchg
insl
lock
mov
lock
push
lcall
jecxz
int3
int3
bnd
xlat
sbb
insb
xor
arpl
sbb
movsl
jmp
cld
cmp
gs
mov
push
in
inc
ljmp
lret
push
faddl
jae
cwtl
call
xor
push
pop
ss
stc
in
test
decl
sti
xchg
cmc
push
push
sbb
ret
mov
pop
cld
cltd
mov
and
push
cwtl
dec
popf
scas
mov
mov
mov
int
adc
arpl
sub
push
out
dec
sti
mov
sub
jns
dec
loopne
sbb
mov
pop
hlt
movsb
adc
imul
shr
outsl
and
outsl
add
pop
or
cmp
in
imul
in
mov
outsb
cmc
pop
cs
cwtl
xchg
adc
ds
sbb
mov
xchg
mov
mov
lret
dec
movsl
lea
out
stos
movsl
iret
inc
lret
push
rcr
mov
in
push
sti
or
pop
out
pushf
mov
jns
xor
xchg
imul
adc
popf
sti
cli
dec
mov
inc
arpl
data16
add
jne
sub
cld
jne
inc
es
xchg
imul
dec
sbbl
mov
test
jmp
jnp,pt
inc
dec
stos
idivb
aas
or
mov
mov
adc
jne
mov
mov
or
xor
cmp
pusha
push
mov
testb
je
push
mov
sub
pop
jp
dec
adcl
dec
and
xchg
mov
mov
mull
mov
inc
aaa
std
cmp
adc
repnz
xor
sub
out
and
call
adc
push
cld
dec
sbb
cmp
aaa
xor
adc
orl
dec
mov
mov
dec
sbb
es
add
inc
xchg
and
sarb
iret
inc
mov
or
movl
mov
and
pop
mov
jmp
jno
movsl
or
jo
shlb
lods
jp
adcl
push
push
sarb
adc
push
push
lods
xchg
ljmp
fcoms
cltd
cmp
int3
inc
mov
cmp
push
adc
daa
outsb
add
cmpsb
out
arpl
xchg
jl
out
and
jne
jb
fisubrl
in
shrl
push
cmp
pop
fstpt
jne
mov
mov
sbb
xchg
push
mov
in
notb
inc
jmp
pop
into
jmp
mov
sub
sbb
je
jl
cmp
aad
and
jns
and
jle
sti
adc
sub
loope
lret
pop
rolb
push
fwait
mov
iret
push
faddl
insl
jae
jg
add
test
xchg
jge
cmp
dec
adc
and
cmp
iret
sub
mulb
inc
or
xchg
xchg
leave
add
mov
and
lock
mov
mov
lds
mov
jbe
das
sbb
mov
pop
out
pop
addr16
sub
call
jecxz
je
cmp
mov
inc
add
sub
hlt
call
div
dec
lds
fidivrs
lret
sbb
adc
pop
mull
push
js
cmp
sub
xchg
xor
loopne
stos
scas
push
and
cli
mov
out
jle
sbb
push
mov
aam
mov
add
push
jp
loopne
test
or
xor
js
xor
xor
iret
mov
cmp
loop
movsb
les
clc
xchg
jns
incl
hlt
mov
shrl
adc
adc
in
sbb
rcrl
mov
mov
jp
sub
push
push
fnsave
adc
fisttpll
daa
nop
cmpsl
repz
sbb
mov
add
pop
inc
xchg
mov
iret
fildl
outsl
dec
cmp
push
adc
ds
rclb
lret
das
xchg
xchg
pushf
daa
in
filds
int3
ror
sub
xchg
popf
pop
xor
dec
push
jne
es
movsb
and
arpl
mov
inc
fstpt
jmp
adc
mov
movsl
gs
shll
lods
inc
jbe
dec
std
mov
test
inc
mov
test
dec
filds
movsl
in
adc
sub
data16
push
xor
shl
outsb
mov
push
repnz
dec
idivb
inc
repz
lods
test
add
inc
mov
sbb
lret
and
lock
mov
jmp
incl
and
inc
mov
aam
stos
or
pop
clc
enter
adc
pusha
sbb
xchg
jnp
rorb
xor
fwait
xchg
and
jne
xchg
test
dec
and
fsubp
pusha
out
mov
xchg
test
daa
xor
stos
pop
out
leave
imul
adc
mov
dec
test
or
xchg
inc
lahf
mov
jno
iret
std
ljmp
leave
outsb
ret
jge
subl
add
sub
mov
nop
sarb
push
fldenv
int3
xlat
pop
xor
bound
mov
mov
test
movsb
cmp
pop
or
mov
int3
in
pop
sbb
cmp
pop
pop
adc
daa
in
adc
pop
bound
adc
popa
sar
dec
sbbl
repz
inc
pop
out
pop
insl
out
sub
jne
inc
inc
addr16
addl
enter
jno
js
sti
dec
inc
fstpl
mov
inc
cmp
mov
sub
arpl
std
ss
push
mov
dec
fcoms
fprem1
sbb
ficomps
mov
dec
mov
cmp
mov
movsb
jae
cli
xchg
sarl
add
cmp
jbe
xchg
dec
pop
xlat
inc
dec
faddl
aam
xchg
loope
out
mov
shlb
je
pop
cmc
aas
test
push
nop
push
in
in
mov
adc
or
jo
sbb
xchg
popa
cmp
pop
jne
jmp
xor
in
or
fadd
mov
sub
loope
push
aas
jl
aas
imul
leave
mov
add
orb
mov
mov
sti
daa
neg
imul
in
xchg
adc
addr16
cmp
xchg
push
and
or
into
jnp
int
js
mov
dec
xchg
outsl
divb
inc
xchg
push
mov
add
push
or
cmp
popa
jb
push
adc
and
test
jo
les
sbb
inc
xchg
pop
dec
or
push
sub
jne
xchg
pop
sbbb
mov
xchg
outsb
mov
push
lods
cmp
mov
cld
out
jbe
cmp
mov
mov
jae
push
addl
and
mov
ljmp
jnp
cwtl
mov
aas
ffreep
ficoml
xchg
dec
sub
fistpl
cmp
lods
xchg
out
addr16
aaa
inc
js
mov
popf
ja
mov
aaa
mov
lods
dec
iret
loope
sbb
xchg
fcompl
and
cmp
mov
mov
bound
aad
filds
push
inc
out
cmp
negl
call
rolb
mov
jae
cmp
mov
ficoms
lods
push
rol
sub
adc
mov
push
mov
sub
mov
fs
jp
mov
jecxz
test
jge
mov
repz
fadds
dec
frstor
xchg
cmp
cmp
out
jecxz
mov
aas
out
lcall
lock
andl
fiaddl
sbb
push
adc
pop
cmp
jl
sti
adc
nop
data16
sahf
test
imul
pop
xor
lret
enter
scas
add
lahf
jae
pop
repz
aas
repz
adc
mov
mov
pop
in
sub
xchg
sub
ret
xchg
dec
sbb
fadd
inc
or
add
repnz
jl
and
shr
jbe
push
add
jmp
fstps
test
cwtl
hlt
call
mov
jbe
mov
into
mov
push
or
push
out
push
lret
add
insl
dec
inc
sub
jns
clc
lds
mov
sub
sub
movl
sti
sahf
loop
sub
loopne
das
dec
mov
es
mov
in
cwtl
xor
lret
imul
ficoml
repz
std
mov
xrelease
and
addr16
rcll
imul
in
rcr
mov
ja
fmuls
stos
insb
out
and
or
mov
push
leave
add
in
cmpsl
test
inc
test
repz
xor
xorb
xchg
jg
cmpb
dec
insl
mov
lock
movsb
in
xchg
xchg
enter
pop
sarb
mov
sub
sidtl
movsb
push
repnz
push
inc
lret
sbb
test
scas
xchg
mov
mov
js
jge
sbbb
outsl
sbb
dec
enter
imul
push
fs
jbe
daa
xor
xlat
movsb
cli
xchg
popf
cs
fdivr
xchg
adc
imul
in
cmp
sti
icebp
vhsubps
xchg
cmp
popa
ffree
jmp
push
add
out
int3
mov
mov
fidivrl
sbb
ret
xchg
mov
mov
lds
xor
dec
mov
adc
ret
push
mov
xor
jae
les
cmp
lods
mov
cmc
sub
or
test
adc
dec
or
subl
dec
or
xchg
sub
xchg
xor
xor
out
sysexit
and
fmull
xchg
mov
shlb
dec
mov
loope
test
pushf
cmp
push
push
and
out
fwait
push
out
push
imul
mov
jge
out
outsb
in
out
out
pushf
and
fdivs
xlat
mov
inc
sub
jg
sbb
cs
jae
mov
push
inc
xchg
test
aad
std
dec
xchg
xchg
adc
jnp
addl
adc
or
jecxz
and
shlb
leave
pop
xchg
lds
jmp
pop
mov
sub
sbb
xor
push
daa
jnp
and
or
inc
adc
hlt
cmp
jae
and
clc
jbe
rcl
sbb
jne
dec
inc
xchg
sbb
stos
mov
test
push
jge
cwtl
les
push
repnz
addr16
cmp
loope
jns
and
sub
fidivrl
mov
test
das
xchg
out
lea
pushf
out
iret
inc
fdivrp
dec
sub
dec
pusha
xor
or
mov
mov
pop
mov
add
mov
sub
mov
in
lea
int
or
fwait
push
cmpb
bound
fdivrs
inc
clc
sub
out
xchg
neg
filds
jne
out
popa
pop
data16
ds
lock
add
nop
sub
sub
pop
nop
sbb
jp
pop
lret
add
je
fsubrl
dec
dec
mov
mov
test
inc
aas
xchg
loopne
push
test
lods
xchg
fucomp
add
iret
or
pop
dec
xchg
and
mov
mov
pop
mov
or
imul
mov
push
imul
cwtl
test
in
jnp
mov
mov
lods
notb
or
paddusw
jne
jle
lret
push
ret
mov
or
and
leave
popf
fists
in
or
out
xchg
stos
faddl
dec
mov
js
fisubl
jle
jecxz
repz
sbb
push
cmc
cltd
add
xor
xlat
mov
fmull
xor
jae
icebp
fs
pop
sbb
adc
sub
ficoms
mov
pop
jge
pop
movsb
dec
int
fsubrs
ficoms
sbb
btr
sub
sbb
in
jecxz
inc
cmp
jae
into
outsb
mov
push
add
movsl
dec
xchg
pop
mov
mov
cmpsl
sbb
fwait
mov
mov
cmp
pop
ss
cmpsl
mov
dec
and
call
inc
adc
enter
movsl
clc
cwtl
rcrl
leave
sbbb
js
fcom
out
push
sub
pop
jmp
pop
lahf
shlb
popa
or
int3
dec
insb
out
cmc
ljmp
mov
cltd
xchg
fidivrl
add
sub
mov
sbb
out
in
push
jp
addr16
adc
sub
addps
sbb
in
inc
rcr
lret
push
pop
jl
lret
in
adc
insb
mov
shrl
push
arpl
pop
xchg
sti
xchg
enter
xor
mov
int3
sub
push
push
testl
cmp
jge
mov
inc
out
arpl
inc
repnz
push
lea
or
int3
sbb
test
cli
es
je
lret
mov
gs
push
and
cld
adc
es
inc
xchg
cld
ds
mov
ja
push
inc
insb
inc
xchg
push
mov
fwait
loope
mov
jb
stc
bound
sbb
push
nop
push
dec
lret
scas
popf
cmp
jno
imul
outsw
or
mov
outsb
hlt
or
xchg
sub
xor
loope
mov
mov
xor
mov
pop
push
insl
mov
push
pop
jl
ljmp
ljmp
or
mov
pushf
into
mov
xchg
sahf
ss
and
inc
sarb
push
adc
imul
push
push
cmpsb
les
cltd
push
hlt
or
test
lock
out
lret
and
adc
mov
imul
test
mov
or
sub
fs
dec
xlat
jne
push
fmulp
fnstenv
cmpsb
pushw
cmpb
fucom
push
es
fs
cmp
shll
cltd
out
mov
jp
mov
out
dec
mov
sub
jno
inc
aad
icebp
mov
cwtl
fidivrl
repnz
lea
sub
jg
jg
scas
rcrl
je
cltd
loop
movsb
scas
in
stos
push
dec
and
in
xor
inc
jno
shll
fxtract
adc
flds
xchg
into
fsubl
mov
popl
mov
dec
cmp
mov
xor
push
push
or
popa
rcr
sub
add
inc
push
push
add
jae
movsb
lods
loop
and
xor
mov
cmp
mov
push
mov
cmp
lcall
xchg
sbb
adc
mov
jo
sbb
cld
pop
add
cli
inc
ss
iret
loopne
cmp
push
xchg
cmpsl
cmpsl
ret
je
cli
out
stos
and
insb
inc
mov
cli
sti
hlt
into
mov
jl
fidivrs
js
mov
mov
jae
mov
faddl
in
aam
cmp
inc
ret
insl
std
lahf
in
mov
das
movsl
adc
jo
pushf
push
inc
xchg
negl
subl
inc
xchg
cmp
fcomip
es
mov
movsb
rorb
and
lods
jg
cmp
cmpsl
nop
inc
pop
das
xor
test
movsb
mov
or
shrl
xchg
scas
icebp
lds
mov
adc
scas
je
std
jne
stc
cwtl
push
or
sbb
or
imull
pop
sti
xchg
cmp
xchg
out
pmaxub
cli
push
popa
repz
fwait
cmpsl
addr16
mov
adc
pop
outsb
ds
or
stos
inc
jg
mov
lock
insb
dec
jbe
or
xchg
xor
es
adc
lret
jecxz
nop
cmp
ret
into
mov
xlat
out
fiaddl
test
pop
pushf
mov
icebp
inc
sbb
scas
dec
mov
jge
jno
add
fiaddl
pop
fcomip
sub
cmp
out
pop
aaa
call
lods
cmp
repnz
adc
stc
pop
movsl
jecxz
mov
mov
sub
in
push
mov
push
daa
mov
cwtl
inc
sub
ja
lods
mov
lret
xchg
sub
call
lahf
ss
enter
jns
mov
xchg
test
daa
ds
insb
add
mov
sbb
inc
leave
shll
xor
enter
jb
imul
int
lahf
cltd
mov
inc
aaa
and
loopne
or
xchg
mov
mov
pop
js
add
mov
mov
imul
sbb
scas
xor
sahf
jecxz
ror
inc
push
and
roll
or
shlb
cld
mov
mov
out
aad
in
and
dec
lock
push
lret
lret
fnsave
mov
mov
outsl
fnstsw
mov
or
stc
scas
pop
sub
lahf
xchg
dec
and
pop
mov
push
std
stos
sub
mov
cmp
sbb
push
sti
mov
mov
xchg
push
push
repz
xchg
je
push
shlb
stos
jno
fistpl
and
xchg
cld
andb
adc
inc
xchg
dec
add
test
jg
adc
stc
adc
pop
scas
fldcw
cmp
cmpsl
mov
shrl
into
mov
xor
repnz
push
mov
xchg
das
rorl
xor
out
jmp
cs
pop
inc
adc
outsb
outsl
notl
sub
and
xor
in
rcrl
sbb
sbb
jp
aas
test
cmp
sahf
daa
rcrl
sbb
jne
or
push
add
jmp
aas
and
mov
fldl
imul
add
xor
mov
int3
xor
mov
mov
mov
es
in
mov
fstps
lock
pop
xor
push
out
add
mov
outsl
lahf
gs
outsl
dec
aaa
and
insb
insl
pop
bound
js
ljmp
test
mov
lahf
pop
dec
adc
fisttps
sub
fidivl
push
push
in
push
gs
lret
xchg
loopne
xor
dec
mov
outsl
fidivrl
xchg
fadd
xor
inc
and
mov
testb
xchg
nop
addps
or
ss
adc
xlat
dec
jg
andb
movsl
pop
push
out
push
push
aaa
scas
sub
mov
and
outsw
add
push
in
lret
mov
daa
jns
jo
outsl
data16
int
loope
ret
out
idivl
xchg
inc
pop
mov
xor
cwtl
lret
clc
scas
jge
pop
xchg
add
out
xchg
xchg
xchg
sbb
or
jo
cmp
movswl
cmp
dec
mov
fucomi
mov
xor
add
sbb
inc
sub
pop
fdivrp
adc
mov
inc
inc
ret
stos
cmp
xor
enter
push
test
pusha
pop
call
lret
flds
xor
int3
jb
movsl
scas
loopne
bound
gs
adc
insb
inc
adc
rolb
aad
bound
xor
insb
dec
pusha
fstl
inc
ds
es
inc
push
xlat
fneni(8087
jle
movsb
dec
add
pop
rcrl
pop
pop
mov
xor
roll
xor
imul
in
dec
in
enter
into
or
mov
cmp
xor
sbb
je
and
nop
dec
orb
sti
xor
mov
adc
and
sub
pusha
xor
xchg
push
lcall
push
lahf
test
mov
mov
scas
push
repz
cmpsl
inc
dec
xchg
aad
jbe
xor
test
imul
sbb
adc
mov
mov
push
pop
fstl
adc
pop
stos
sahf
mov
sti
fwait
int3
lret
fisubrl
out
mulb
loop
sbb
add
sbb
mov
in
push
xchg
dec
aaa
div
lcall
cwtl
iret
data16
cwtl
into
std
enter
adc
pop
sbb
mov
xchg
fs
imul
std
mov
mov
fcomps
cmp
rolb
push
dec
cld
xor
mov
loope
mov
lds
mov
pop
jne
lahf
pop
and
movsb
rcl
add
mov
mov
fcomi
jb
pop
loop
xchg
scas
enter
or
test
adcb
or
addl
fldenv
pusha
and
cmp
test
repz
aad
sub
sub
xor
clc
in
xor
and
mov
fbld
push
int
push
xor
pop
into
mov
in
stos
sub
cmp
lcall
enter
dec
inc
mov
imul
aad
xchg
or
testl
sbb
dec
xchg
notl
pop
lahf
and
add
push
and
loop
lret
cmp
stos
pop
sbb
sti
xor
lea
inc
xchg
jp
js
ret
sbb
jne
es
sahf
das
insb
cltd
inc
test
mov
mov
mov
cmp
in
aam
std
cmp
lds
out
push
loopne
repnz
mov
or
mov
or
pop
adc
ljmp
jns
fmul
xor
punpckhbw
lret
mov
jl
fnstsw
popl
out
push
cmp
into
pop
addr16
xchg
fs
popa
mov
lret
call
mov
aaa
leave
mov
or
inc
aam
out
mov
push
fistpll
outsl
lds
sbb
in
pop
push
in
sbb
jecxz
hlt
out
out
jecxz
loopne
mov
rcl
adc
mov
test
js
push
addb
or
xchg
dec
xchg
in
cmp
jnp,pn
push
inc
mov
in
sar
adc
in
xchg
dec
movsl
dec
add
out
cwtl
pushf
or
add
or
popf
in
stos
mov
adc
ficoms
or
out
sbb
or
lahf
xchg
bound
adc
sbb
or
movsl
jne
nop
cmp
push
subb
pop
adc
mov
mov
fnstcw
test
orb
lret
dec
mov
add
push
cs
loope
mov
add
outsb
mov
inc
add
mov
dec
stc
add
inc
mov
cmpb
lahf
push
imul
testl
lock
lret
pop
negl
jne
xor
push
jae
add
push
inc
lea
popf
test
pop
lods
mov
mov
ror
cmp
dec
repz
dec
sub
pop
mov
test
cmp
js
adc
in
jle
mov
mov
dec
xchg
pop
sbb
aad
pop
adcb
aaa
and
sbb
das
fs
negb
cmp
xchg
leave
ret
adc
mov
mov
pop
aad
int
dec
sbb
imull
dec
mov
push
xor
das
outsl
test
adc
out
adc
adc
xor
cmp
mov
mov
icebp
mov
dec
mov
inc
push
fsubrs
fadds
cwtl
popa
sbb
imul
in
mov
jecxz
data16
insl
push
ljmp
dec
inc
scas
fidivl
gs
imul
adc
inc
jmp
lea
outsb
xchg
movsl
shrb
je
ja
rclb
xor
int3
stos
lea
fwait
into
mov
pop
xchg
enter
pop
mov
cmp
cwtl
push
sub
mov
ret
jae
ficompl
jecxz
mov
sub
fsubs
or
pop
ds
dec
in
and
dec
ja
pop
loopne
clc
dec
pop
fld
insb
stc
nop
gs
jecxz
push
pop
addr16
loope
jge
scas
xchg
loop
fsubl
jle
add
out
mov
iret
adcb
push
mov
push
movsl
adc
inc
aas
jmp
fcmovne
jl
aaa
lret
mov
outsl
clc
xor
nop
jecxz
lcall
sar
sbb
movntq
pop
lock
out
scas
pop
stc
xchg
sbb
nop
fisttpl
aam
xchg
sub
cli
mov
cld
hlt
add
push
into
sub
roll
mov
popf
jle
lahf
xor
mov
in
cltd
push
stc
inc
loopne
out
sub
lcall
xchg
cld
and
imul
in
dec
cwtl
lahf
ljmp
jae
or
mov
xor
or
sub
mov
loopne
shlb
aam
sahf
ja
jbe
ret
pop
divb
in
push
iret
jne
mov
sub
aaa
sbb
xchg
inc
inc
pop
subl
jns
or
sti
mov
adc
aad
cmp
pusha
lods
lods
lea
jmp
imul
movsb
push
add
fwait
out
and
inc
mov
arpl
cs
push
inc
mov
xchg
jge
enter
fdivl
popf
mov
push
sub
lahf
push
cmpsb
mov
aad
daa
fdivrs
in
int
ret
in
int3
jge
xchg
shrl
clc
cmpsb
cmpb
stc
adc
cmp
xchg
xor
outsb
pop
clc
stc
and
inc
xor
popa
aas
mov
jge
les
hlt
xor
inc
rcll
sub
pop
inc
sub
mov
cmpsl
xor
mov
repz
mov
xchg
sahf
mov
pop
fimull
movsb
hlt
xchg
sub
mov
jmp
xlat
push
push
inc
dec
cmp
iret
xchg
jb
push
jne
adc
xchg
pop
iret
jo
mov
stos
imul
push
xor
cmp
pop
ret
jecxz
xchg
pop
add
or
insl
inc
mov
push
jo
int
push
push
bswap
and
jae
adc
loope
dec
and
or
dec
movsl
sarl
mov
xorl
aaa
jae,pn
aad
mov
cmp
icebp
cmp
dec
cwtl
in
push
aaa
fabs
pop
je
inc
xor
dec
jge
int
xchg
mov
jbe
pop
cs
cmp
aad
xor
cld
mov
mov
sbb
scas
out
int3
xchg
cmp
andl
cmp
jbe
cmpsl
das
or
in
shl
and
lods
add
cmc
jp
test
inc
ss
fsubrl
mov
mov
out
and
gs
pop
mov
jp
int
loopne
xor
or
mov
mov
jp
scas
mov
cmc
das
add
out
rcl
scas
mov
xchg
sbb
jo
sbb
outsb
dec
call
pop
jle
cltd
fdivs
nop
fdiv
jb
mov
dec
mov
andl
inc
jle
jle
imul
shll
repnz
adc
jp
push
mov
xor
test
jns
clc
into
rolb
add
xor
mov
bound
ret
sub
ja
js
sub
cmp
repz
jnp
dec
mov
incl
out
repnz
ja
lock
mov
dec
test
mov
out
adc
in
jl
sbb
jne
test
or
bound
lcall
push
mov
cltd
inc
jge
out
mov
fwait
add
jl
sbb
and
jb
jo
pop
sub
pop
xchg
mov
mov
or
test
lahf
or
push
ljmp
fadds
mov
fisubs
out
pop
fimull
mov
repz
je
repnz
std
clc
leave
sub
mov
cmp
xchg
fcmovnb
sbb
negb
adc
bound
insl
dec
xor
pop
or
aaa
ffree
ljmp
xor
test
xchg
push
sbb
data16
cmp
popa
push
mov
cmp
and
dec
pop
or
mov
lea
icebp
je
push
xchg
ljmp
fadd
and
xlat
movsb
std
pop
cmpsl
popl
or
subb
subl
enter
div
pop
push
push
xor
inc
aam
aad
add
fstps
mov
ficomps
aas
popa
inc
jecxz
xchg
pushf
cmovg
cmp
xadd
imul
jnp
in
iret
icebp
test
jmp
gs
lcall
or
pextrw
pusha
sub
or
add
adc
insl
arpl
std
push
mov
cli
fcompl
mov
lcall
or
cli
mov
push
test
popa
or
or
test
repnz
shrl
test
cmc
lret
mov
cld
ficompl
lret
aad
dec
fisttps
enter
stos
sub
xchg
loope
cmpsl
jbe
in
loop
fidivrl
cs
rcr
cli
adc
inc
push
jmp
mov
mul
and
sub
sbb
icebp
test
cld
mov
ja
dec
outsl
sahf
pop
into
arpl
sub
inc
add
divb
push
cli
xor
mov
mov
add
inc
dec
pop
sub
pop
in
cmp
cwtl
ja
ljmp
push
das
mov
aad
hlt
dec
mov
mov
nop
in
shrb
addr16
ss
pop
fisubs
jp
mov
pop
jns
je
mov
fs
pop
enter
leave
in
ss
jl
orl
fmul
inc
addr16
lret
mov
mov
mov
ret
xlat
push
pop
repz
clc
outsb
data16
xchg
fsubrp
es
aam
sbb
sub
jae
repz
lret
nop
add
mov
movl
addr16
pushf
aaa
jge
inc
push
daa
push
js
mov
pusha
decb
jmp
mov
adc
add
mulps
ret
jg
dec
mov
jl
gs
add
pop
out
stos
cmpsl
dec
rorl
lods
fsubs
int3
pop
in
aam
rcrl
fstps
and
xchg
adc
mov
xchg
jae
popa
sub
jns
cwtl
pushf
js
cwtl
lcall
enter
dec
mov
fs
ljmp
push
and
repnz
push
push
jns
and
adc
mov
mov
outsb
aaa
ds
or
mov
cmp
cmp
lret
lds
and
adc
mov
dec
adc
jmp
shll
cmpsl
rcrl
cld
bound
in
inc
sub
push
mov
inc
andl
jecxz
mov
fwait
repz
sbb
sbb
cmp
mov
jae
outsb
add
sbb
and
mov
pop
enter
bound
xor
sti
cmp
push
outsb
lret
jbe
arpl
div
adc
std
ljmp
xchg
xchg
lods
mov
in
jge
movsl
push
das
lods
adc
mov
mov
xor
push
lock
fistl
movsb
mov
xchg
fs
pusha
lcall
ja
xchg
test
aad
insb
clc
xor
lcall
loop
jb
out
dec
ss
mov
jecxz
lahf
push
rolb
jno
in
push
rclb
fst
xchg
gs
inc
enter
xor
push
pushf
fldt
js
lret
pop
push
and
pushf
std
ficoml
cmp
mov
fnstsw
inc
cmpsb
test
sbb
int
aaa
cli
add
mov
push
sar
insl
mov
out
sub
push
stc
add
jecxz
lahf
sbb
push
jbe
in
pop
ja
ds
adc
imull
ss
cmpsl
pusha
or
jg
callw
pop
into
loopne
fwait
hlt
and
dec
fistl
aam
cmp
pop
fdivrl
test
dec
push
cmp
cmp
sub
xor
iret
add
and
popf
pop
test
and
sbb
cmp
rorb
loopne
in
cs
clc
imulb
jge
jle
in
popa
leave
out
pushf
les
xchg
push
or
xor
pop
or
pop
push
or
xchg
cltd
push
adc
outsb
out
mov
xor
loope
lds
push
cmpsb
aad
aas
cmp
jbe
dec
mov
or
adc
repnz
clc
jmp
inc
insl
mov
addr16
js
lcall
push
sbb
clc
cmpsb
add
imul
std
neg
iret
xchg
adc
sbb
addr16
or
out
and
gs
daa
cltd
dec
jge
mov
ja
aaa
or
and
js
and
push
jle
push
jno
or
scas
lea
leave
jb
push
fdivrs
pop
pop
ffreep
pop
ja
pop
dec
or
in
shll
aad
push
adc
dec
jle
cmp
sub
mov
std
ror
mov
repz
divb
sbb
mov
dec
ljmp
xchg
cld
inc
adc
out
fmul
mov
fs
sti
mov
lcall
and
leave
in
fdivr
cmp
push
dec
adc
sub
dec
ss
repnz
xor
fidivrl
inc
push
mov
aad
stos
fldl
jne
pop
mov
repnz
and
sub
mov
fidivl
push
mov
mov
cwtl
sub
push
jmp
les
mov
add
ds
in
xlat
mov
ret
jne
scas
adc
pop
lea
add
jns
mov
add
test
and
push
fs
fsubr
sti
adc
xor
xchg
cmp
int
dec
mov
or
cmpsl
lea
into
fsubp
test
cltd
lods
and
mulps
or
lcall
mov
adc
dec
xor
fucomi
sub
adc
or
add
jne
loope
adc
mov
push
mov
xor
push
mov
push
push
or
sub
sbb
ficompl
insl
jnp
pop
pushl
adc
cmp
pop
push
std
mov
cltd
mov
sbb
cmp
lret
pop
mov
cld
ss
sbb
int
add
lock
pop
lahf
ljmp
mov
cld
and
lcall
dec
jle
push
cmp
pop
aad
pushf
addr16
xchg
push
jg
cmovbe
fsubrl
cmp
mov
lods
mov
pop
fists
adc
mov
mov
cs
fistl
sub
popf
test
mov
or
and
call
clc
dec
mov
out
add
movsb
push
imul
dec
sub
enter
dec
inc
dec
in
loopne
mov
pop
jmp
cld
push
mov
insb
test
inc
outsl
dec
arpl
pop
xchg
sbb
movsl
push
or
aam
stc
fcmovnu
in
push
add
jo
int
mov
inc
rolb
push
sahf
aam
sub
push
icebp
jge
lds
out
les
pushl
and
ret
xchg
sub
jne
pusha
xchg
sbb
mov
loopne
lret
cmp
push
adc
jns
movsl
rcrb
sbb
mov
pop
lret
dec
sti
out
rcr
and
hlt
mov
adc
je
jb
fsubrs
or
leave
xchg
mov
and
into
push
frstor
dec
rcll
ret
pop
es
aam
fsts
lea
sub
es
adc
add
or
adc
enter
and
mov
jge
idivb
sub
mov
inc
cwtl
and
jmp
insl
mov
push
dec
jo
push
insb
xchg
pop
iret
imul
std
inc
sarb
push
adc
jg
sub
mov
cld
sub
sbb
data16
xor
push
or
cmp
cmpsb
mov
pusha
fs
pop
out
dec
push
loopne
cmp
xchg
adc
adc
popa
fnstcw
cmpsw
or
cmp
cmp
ss
in
repnz
lods
add
dec
sbb
imul
pcmpeqb
sbbb
pushf
bound
sub
std
negw
push
popa
jp
pop
inc
outsb
adc
add
dec
mov
jae
aas
das
loopne
leave
jbe
stc
pop
inc
dec
xchg
aam
fwait
mov
jge
mov
lods
lds
cmp
pushf
popa
jle
jg
call
hlt
xchg
imul
jae
loopne
mov
insl
mov
sbb
pop
out
mov
cmp
add
int
dec
add
sbb
inc
jb
mov
mov
jmp
sti
pop
add
mov
and
movsl
push
out
mov
mov
cld
pushl
mov
jnp
or
mov
add
std
in
jecxz
mov
jmp
adc
and
pop
mov
dec
lret
rol
pop
insb
mov
dec
int3
xor
fldl
das
push
iret
scas
jecxz
inc
das
fstps
or
and
pop
lods
out
mov
pop
addr16
pop
or
pop
xlat
and
mov
xchg
ret
dec
mov
repnz
mov
pop
add
mov
pop
clc
cvtps2pd
sbb
popf
imul
xlat
clc
dec
sbb
vpcomub
aaa
sub
cwtl
or
push
push
push
insb
xor
sub
fwait
scas
mov
jge
mov
add
pop
pop
loopne
call
in
cmpsb
or
or
pop
sahf
dec
cmc
ljmp
cwtl
jmp
pop
adc
movl
das
add
imul
lods
movsl
inc
mov
push
xchg
mov
in
mov
adc
cltd
jbe
xchg
jg
mov
sarb
pushf
adc
jecxz
stc
sti
loop
cmp
aam
cmc
mov
dec
insl
push
inc
ficoml
xchg
jnp
je
sbb
push
sbb
aaa
testl
gs
aaa
out
icebp
nop
mov
sahf
xchg
push
jne
arpl
shr
sbb
and
cmpsl
stos
in
stc
inc
call
arpl
inc
adc
pop
mov
adc
into
cmp
pop
mov
mull
cmp
mov
xor
mov
jae
imulb
jae
and
aaa
and
stos
cmpsl
mov
insl
outsl
sbbb
addb
adc
cmp
fidivs
adc
xchg
mov
jb
mov
or
repz
jne
xlat
insb
cld
mov
sub
inc
pushf
insb
xchg
aas
push
add
nop
or
push
arpl
inc
ret
or
repnz
jl
popa
inc
pop
fchs
push
int
outsb
pop
push
and
xor
and
cs
add
push
push
out
lcall
fiaddl
aam
adcl
lods
andb
roll
pop
lock
addr16
out
push
or
cltd
jge
rorl
orl
bound
jae
push
jns
add
adc
sub
bound
in
sub
loop
in
dec
xor
arpl
or
pop
stos
xchg
sbb
adc
pxor
dec
pusha
mov
in
cmp
arpl
call
stc
cltd
sub
push
or
scas
leave
mov
push
mov
dec
adc
mov
bound
jne
sti
push
xor
jge
jecxz
sbb
xor
icebp
rorb
mov
sbb
push
cmp
inc
jecxz
lods
push
xor
fcomps
mov
fwait
nop
push
inc
scas
mov
out
sbb
sbb
xchg
xchg
xor
in
jb
loopne
aaa
inc
inc
pusha
outsl
push
mov
sub
and
shll
test
xchg
bound
xlat
insb
pop
repnz
adc
inc
aas
mov
in
test
dec
aaa
inc
popf
mov
add
add
and
jb
out
mov
mov
dec
sub
out
sub
ja
pop
push
lods
xchg
daa
or
jp
and
clc
cmp
addr16
xchg
cmp
fistps
xor
outsl
es
test
cld
rclb
inc
lds
adc
lock
jl
cmp
arpl
inc
dec
xlat
stos
pop
sub
xor
and
and
xchg
xor
adc
push
out
pop
pop
repz
rcll
cmp
cld
pusha
ljmp
arpl
cltd
test
out
mov
js
imul
or
or
aam
fmuls
jmp
and
adc
jb
jbe
add
lret
into
jp
hlt
jg
push
in
jnp
shlb
call
pusha
enter
int3
ja
pop
cmpsl
mov
scas
out
lods
sub
mov
and
and
test
jns
push
popa
fiaddl
inc
aas
cmp
inc
xchg
jo
jnp
lret
in
sub
lret
xorb
and
pushf
push
dec
leave
fcmove
mov
sbb
mov
mov
lcall
popa
sbb
rcrl
ret
sub
push
jbe
sbb
dec
call
pop
sub
adc
xchg
jmp
pop
mov
adc
sub
xor
xor
cmpsl
adc
sahf
dec
jb
lds
jmp
in
js
lret
pop
call
loope
aas
or
pop
dec
jp
pop
std
jo
inc
sarb
adc
push
pop
in
push
int3
fsubs
mov
dec
and
jp
out
in
shrb
lahf
sbb
icebp
in
inc
sbb
cmp
call
sub
add
add
adc
dec
arpl
cmc
jle
jae
lods
leave
pushf
nop
clc
and
cmp
faddl
sub
in
js
jae
sub
xchg
cli
jmp
mov
jae
addb
mov
mov
adc
testb
inc
mov
es
in
test
js
mov
cmc
adc
sub
shrl
xchg
movsl
stc
f2xm1
or
pop
mov
xchg
and
mov
insl
lock
popa
xor
mov
int3
adc
into
xor
outsb
repnz
mov
or
push
aas
sub
add
add
lcall
cltd
and
pusha
add
in
std
cmc
lods
scas
int
sbb
daa
faddl
jp
mov
cmp
ja
bnd
or
into
and
add
pop
mov
cmpsl
mov
xchg
sub
sbb
push
mov
jle
outsl
loop
jle
je
xchg
pop
outsb
in
scas
jg
or
lcall
jae
scas
movsb
xor
call
popa
cmp
cltd
mov
cmp
mov
inc
je
pop
lods
pushl
adc
or
in
addr16
imul
cs
je
je
lods
add
dec
fdivr
pop
cld
cmp
int3
ds
popf
aad
pop
xchg
insb
mov
fiaddl
cmp
jp
hlt
popf
mov
mov
mov
lods
cmp
ret
jle
jo
pop
mov
push
mov
popf
add
jle
mov
lds
int3
fiaddl
into
cmc
rorb
hlt
push
xor
lds
mov
add
cmp
sbb
cmp
hlt
into
adc
mov
ss
jae
add
gs
jns
or
mov
aaa
jmp
xor
stos
xor
lret
add
fcomip
or
push
je
cmp
adc
jns
mov
ljmp
daa
add
popf
mov
xchg
aaa
xor
aad
mov
xchg
dec
test
lods
mov
or
stos
scas
mov
fucom
fsubrs
shll
and
scas
or
jo
mov
push
cltd
mov
addr16
push
and
hlt
popf
xchg
add
and
push
test
dec
push
inc
dec
in
fistpll
andl
inc
inc
test
icebp
xorb
push
mov
sub
cmpsb
dec
inc
mov
dec
pop
testl
sti
or
fmul
aas
mov
outsb
mov
test
in
and
inc
and
and
pop
pop
mov
xchg
lahf
hlt
pushf
call
aad
sub
pop
xchg
mov
mov
scas
das
clc
adc
inc
xor
mov
ds
ja
inc
lock
lret
or
test
lcall
dec
adc
inc
imul
imul
aad
fdivp
enter
sbb
jnp
icebp
into
pop
je
arpl
mov
sbb
fildll
pop
repnz
mov
aaa
push
addr16
mov
es
dec
mov
pop
adc
push
shll
loop
cmp
push
push
rorl
sub
adc
or
fisubrl
sub
int
fsubs
cmpsb
ja
cmpb
xor
mov
dec
inc
jb
in
push
in
xchg
jbe
sub
and
push
pop
or
push
ret
rcr
push
and
xchg
nop
cmp
fbstp
iret
loope
movl
neg
fildll
icebp
mov
sub
aaa
sbb
std
bound
or
add
push
add
jbe
push
xchg
jg
adc
mov
xor
out
pop
pop
aas
xchg
fnstsw
or
lds
xchg
outsl
sub
insb
push
xchg
adc
stc
mov
xchg
lret
aam
sti
add
wbinvd
ja
fistps
xchg
xor
mov
dec
add
add
mov
mov
cmpsb
adc
adc
mov
push
pop
jle
sbb
sbb
fmull
jne
je
mov
or
and
and
cmp
dec
cmpsl
pop
push
cli
lea
mov
add
into
push
xor
ds
outsb
inc
xor
mov
scas
sub
int
adc
xlat
push
rcrl
call
push
scas
sub
add
movsb
mov
push
pop
movsl
shr
ficoms
ljmp
mov
das
inc
movsl
in
cmp
mov
cmp
shl
enter
sub
idivb
fldenv
loope
ret
in
mov
outsl
sbb
fisttpll
jl
and
add
outsb
push
ljmp
inc
call
clc
fs
outsb
jmp
clc
out
add
sbb
lea
xor
inc
sbb
xor
fwait
adc
push
sub
lds
xor
ja
sar
enter
mov
or
lcall
and
cmpsb
sahf
push
call
mov
xchg
mov
ficomps
in
push
or
lret
out
js
xchg
xchg
inc
or
sbb
shll
jl
inc
and
mov
lret
xchg
int
lods
xor
test
ss
add
pop
add
and
ds
mov
sub
mov
aad
enter
fisttpll
or
sub
call
jle
js
leave
hlt
push
fs
je
subb
push
ret
inc
stc
mov
mov
push
faddl
mov
add
les
jb
into
icebp
push
js
idiv
mov
add
mov
shl
adcb
xchg
sbb
cmp
das
push
push
push
add
mov
rorl
xlat
cmpsl
dec
clc
loope
push
addr16
jp
popf
stc
jno
dec
jge
std
fidivrs
xchg
ljmp
push
insb
cltd
inc
mov
xchg
icebp
jle
inc
and
mov
cmp
sub
sub
repz
ret
mov
test
fs
xchg
scas
dec
sbb
and
cld
notb
inc
es
mov
jbe
arpl
pop
sbb
out
sub
fnstcw
jns
sbb
mov
fcompl
mov
cmc
loop
clc
jp
in
scas
out
cmp
lds
insl
outsb
enter
aad
jbe
rcrb
and
out
xchg
or
sbb
or
or
pushf
push
les
or
pusha
imul
sub
or
xor
enter
leave
adc
testl
adc
xchg
imul
out
gs
sbb
inc
and
jnp
lret
addb
jmp
mov
sub
sub
pop
pusha
addr16
sbb
std
or
stos
movsl
sub
mov
jge
in
mov
cld
mov
mov
mov
mov
cwtl
rcrb
arpl
inc
xor
jne
fisubl
xchg
aad
lods
pusha
cmc
repz
pop
out
xchg
mov
outsl
and
popa
mov
fucomi
or
adc
mov
or
iret
sub
jne
jne
xor
les
pop
outsl
adc
cmpxchg
popa
data16
mov
aaa
test
mull
icebp
or
push
loope
push
add
cmpl
inc
stc
sub
enter
mov
push
mov
dec
loop
enter
sbb
mov
and
arpl
sbb
movsl
mov
imul
sub
stos
daa
push
gs
push
adc
adc
mov
sub
sahf
xchg
xchg
mov
add
mov
js
fucomp
cmpsl
movsl
stos
xchg
and
hlt
mov
push
inc
jae
xchg
or
dec
inc
dec
inc
xor
hlt
mov
mov
xchg
shll
les
push
shll
idiv
mov
test
pop
insl
arpl
out
ljmp
jae
cmp
mov
push
mov
mov
stos
or
bnd
push
and
add
out
cmp
cmp
test
dec
xchg
inc
xor
mov
mov
mov
dec
es
outsb
jg
scas
sbb
data16
cmp
loopne
adc
jo
lret
dec
stos
test
jmp
xchg
cmpsl
shrl
cmp
cs
add
cmp
pop
sahf
xor
aad
add
gs
sbb
mov
sub
repnz
enter
sti
cmp
or
push
add
lea
adc
shr
add
mov
ds
or
adc
cmp
fwait
sbb
das
jbe
inc
and
dec
mov
xchg
bound
ljmp
out
dec
imul
cs
jg
mov
into
add
cmp
mov
loop
sbb
xor
xchg
popf
jbe
ret
cmp
lcall
push
jmp
test
adc
or
outsl
stos
mov
mov
leave
and
insb
pop
dec
test
imul
repnz
push
or
add
fidivrs
out
dec
hlt
dec
jne
movsl
adc
xor
subl
or
inc
dec
push
cmp
jecxz
test
je
cmp
push
int3
pushf
js
lds
or
scas
popa
dec
adc
jne
aas
ja
shrl
mov
push
notb
xlat
sbb
cli
bound
jnp
shl
lret
jmp
xchg
mov
repnz
inc
hlt
mov
push
xchg
xor
and
popf
mov
lods
or
dec
push
pop
jge
push
dec
mov
rcr
shll
addr16
stc
arpl
fdivp
fdivs
mov
pushf
sbb
into
jl
jns
adc
leave
shr
mov
insl
pop
cmp
sbb
jne
data16
aam
cmpsb
movsl
and
cwtl
and
jns
dec
dec
daa
rclb
lea
and
mov
xlat
test
rcr
cs
sub
int
and
out
sbb
mov
das
dec
shrd
sub
xchg
fnstsw
rcrl
pushf
outsl
insb
add
outsb
test
incb
rclb
push
pop
outsl
cmp
mov
test
pusha
out
or
lret
ljmp
push
dec
mov
inc
cmp
sbb
push
bound
in
out
add
xor
lods
iret
lsl
xor
pop
mov
mov
js
cmp
or
xchg
and
sbb
int3
add
int
pop
sahf
pusha
es
push
sbb
jp
cli
sbb
ljmp
in
cwtl
icebp
dec
mov
push
lahf
and
mov
dec
push
lret
xlat
xchg
adc
imul
lcall
in
jbe
xor
push
or
fs
cmp
cmp
pusha
mov
push
and
ret
lahf
lock
cmp
stos
clc
cmpsb
out
jg
nop
mov
insl
inc
dec
xchg
push
shl
lret
mov
pop
add
pusha
test
cli
sti
and
mov
loope
mov
xchg
add
mov
mov
mov
mov
dec
mov
xor
sub
rorb
mov
insb
pop
sbb
xchg
push
sub
jmp
mov
xchg
lahf
jae
dec
xor
mov
fistl
mov
icebp
andb
andb
sub
xchg
mov
iret
lahf
jbe
and
shll
loop
xchg
lods
in
xchg
pop
pop
mov
test
lods
add
cmc
push
pusha
repnz
pop
repnz
hlt
lea
xchg
mov
push
add
fdivrl
and
mov
cmpsl
pop
daa
pushf
out
and
mov
pop
int
bound
or
jp
call
bound
lods
testl
shll
add
xor
jp
jmp
out
adcb
xchg
sub
jns
movb
loope
adc
insb
mov
sub
mov
test
add
mov
ret
stos
clc
fcmovnu
adc
cltd
mov
xchg
mov
movsb
fs
mov
cli
inc
rorl
ljmp
loopne
mov
into
sbb
shll
lea
imul
mov
iret
popf
pop
pop
cmp
cmpl
adc
ds
cli
mov
fidivl
adc
dec
aam
cmp
aam
repz
mov
or
xchg
xchg
ja
sub
sti
repz
or
push
lock
sub
addb
push
sub
popf
rclb
cmpb
pop
jae
jb
jno
test
popa
mov
xor
jne
arpl
daa
or
inc
jne
pop
shrl
mov
and
or
jg
sbb
push
mov
adc
push
cli
mov
add
stos
mov
icebp
loope
aam
sub
nop
lea
lds
leave
shl
lahf
pop
out
lcall
fildl
push
jge
adc
mov
stos
bound
sbb
call
push
and
xchg
xor
dec
sub
pop
dec
dec
inc
ds
out
int3
iret
mov
cltd
jb
pop
sbb
mov
inc
mov
gs
or
addl
xchg
lret
in
gs
sub
or
addb
dec
inc
mov
int
pop
cld
rcll
xchg
ja
test
pop
or
mov
clc
push
mov
jne
pop
pop
lret
ror
sub
les
pop
jle
cs
or
sub
stos
mov
jmp
pop
addr16
fidivs
rcl
mov
xor
inc
sti
mov
xchg
stos
insb
jne
xor
lret
mov
loope
add
movsb
push
push
xor
jmp
les
imul
jle
adc
adc
ret
jge
cmpsb
jl
dec
jo
mov
xlat
jno
lods
push
mov
jg
out
push
out
mov
xchg
out
add
and
jae
test
jl
pop
jo
fndisi(8087
cmp
pop
in
in
ffreep
adc
adcb
repz
xchg
ds
jb
cltd
test
push
adc
enter
stc
je
pop
aaa
mov
fdivrl
imul
cmp
out
cli
add
cwtl
fldt
xchg
aam
cmp
fdiv
je
push
ljmp
mov
aaa
pop
jno
cltd
adc
or
mov
xor
ds
sbb
or
sbb
and
loope
in
fbstp
xlat
jmp
push
insl
cmp
rcrl
jg
enter
loope
stc
dec
in
mov
repnz
pop
sahf
mov
adc
cmc
repz
in
push
movsb
gs
stc
std
push
not
loop
shrl
add
movsb
pop
out
ss
or
fdivrl
xchg
pop
imul
call
jnp
push
xchg
out
push
dec
mov
lahf
bound
repz
push
rorb
push
sub
ret
dec
lcall
push
and
add
push
push
push
adc
or
frstor
clc
pop
xor
ss
jbe
xor
pop
je
data16
stos
mov
xor
and
sbb
pop
in
sub
jmp
cmpb
in
and
mov
scas
cmp
arpl
mov
push
mov
add
sbb
mov
cwtl
stos
adc
xchg
sbbb
lret
fimull
dec
lds
inc
pop
imul
adc
inc
add
fwait
cli
sub
adc
cmp
cmp
pop
ja
adc
das
repz
out
xor
sub
shrl
mov
sti
sbb
in
pop
shll
cwtl
and
aam
dec
pushl
add
sbb
mov
rol
sbb
pop
das
adc
mov
mov
mov
out
sub
fildll
inc
insl
test
mov
out
pop
out
push
into
pop
mov
pop
add
mov
push
pushf
fprem1
xor
push
fxch
mov
test
jmp
sub
and
sbb
fstps
movsl
adc
sub
je
fdivrs
push
push
lock
aaa
nop
push
gs
mov
pop
pop
pushf
cmp
fists
lods
stos
mov
cmp
adc
lds
pop
icebp
inc
enter
mov
arpl
stos
dec
lahf
cmpsb
lea
inc
repz
xchg
xchg
mov
nop
cmc
repnz
adc
mov
mov
ljmp
rol
sarl
mov
arpl
sub
xchg
sub
mov
jl
leave
and
std
mov
push
fisubrs
mov
pushf
arpl
pop
mov
xchg
jno
add
fdivrp
popa
std
fimull
das
dec
add
inc
inc
adc
into
outsl
jge
push
mov
xchg
push
mov
hlt
scas
addr16
mov
out
inc
sbb
mov
push
mov
mull
mov
popa
leave
movsb
in
loop
loopne
inc
jb
test
jl
pop
fisubrs
jnp
out
pop
adc
dec
fsubrs
xor
les
add
inc
lret
test
mov
jge
push
pop
lret
pushf
in
aad
fmul
jmp
mov
aad
push
sub
out
inc
or
enter
mov
out
test
mov
cmc
hlt
mov
cmp
imul
sub
lcall
incb
dec
mov
in
or
jo
das
mov
xchg
xchg
cmc
hlt
add
adc
pop
mov
sti
pop
add
icebp
mov
sub
push
pop
stc
xchg
cmc
xor
lock
fists
mov
ljmp
fiadds
hlt
sbb
sub
cs
std
shlb
hlt
sub
sbb
xchg
roll
fdivp
jle
andl
xchg
fsubrs
or
pop
adc
xor
mov
mov
dec
inc
xor
leave
stos
push
lods
adc
adc
mov
ja
jnp
lea
popa
fbld
std
inc
std
sbb
das
cmp
addr16
cmpsw
inc
cmpsl
xchg
fcoms
or
adc
mov
cli
sbb
jg
imul
mov
mov
push
stos
data16
mov
lods
dec
lods
inc
imul
fs
or
xchg
pop
cmp
push
adc
lock
inc
inc
cmpsl
pushl
in
sbb
xorb
sahf
mov
sti
dec
lods
insl
inc
mov
lret
loop
pop
pop
xor
jl
dec
rorb
paddusw
rcl
daa
xor
sbb
scas
mov
push
test
lea
pop
scas
lret
pop
adc
mov
fnsave
sub
mov
sbb
jb
mov
shr
dec
aaa
lods
jmp
jmp
out
ljmp
mov
xchg
push
cmpsb
je
fcomip
lods
clc
out
aam
push
inc
jmp
enter
test
outsl
movsb
jp
dec
pop
imul
push
dec
inc
dec
xchg
xchg
push
add
leave
pop
cwtl
jbe
mov
jle
cld
cmp
movsb
xor
mov
cltd
rcrb
push
cmpsl
das
sti
xlat
sub
stos
and
adc
into
sbb
push
inc
mov
push
jmp
addr16
dec
cmp
mov
jae
inc
mov
and
inc
cwtl
lret
test
xor
movaps
stc
lcall
jl
sbb
add
pusha
sbb
push
sbb
xchg
pop
popf
nop
inc
aas
and
xchg
jg
pop
test
xchg
mov
ret
or
sbb
and
sub
int
fistpl
shll
out
or
int3
daa
mov
push
mov
addr16
rcll
or
jl
xlat
and
push
sbb
mov
push
sub
stc
cli
adc
jmp
push
cwtl
sbb
shll
pop
sti
pop
sbb
testb
repnz
sub
jns
shr
int3
js
jg
sarb
mov
fwait
ret
fsubr
clc
push
xchg
xlat
fcmovnb
xchg
sub
jne
arpl
inc
jmp
jmp
xchg
adc
movsl
push
dec
out
outsb
lcall
xlat
imul
jns
push
outsl
clc
pop
inc
jg
div
mov
stos
nop
stos
sbb
mov
cmpsl
jb
pop
dec
jg
mov
repnz
and
fistps
and
sbb
or
xchg
cmpsl
pop
in
mulb
aad
cmp
add
sub
rcrl
mov
adc
loop
fmul
nop
push
mov
loopw
jne
pop
imul
xlat
cmp
sarl
movsb
sbb
je
std
hlt
pop
insb
out
or
jge
jecxz
stos
pop
scas
test
data16
dec
adc
test
pop
cmp
sahf
mov
das
xchg
out
adc
pop
icebp
xlat
outsb
pop
lret
pop
jmp
xchg
scas
insl
jge
jmp
cs
mov
xchg
jg
mov
popf
mov
xchg
mov
data16
and
stos
mov
push
cmpsl
mov
loope
mov
xor
xchg
push
dec
inc
arpl
test
mov
mov
in
cmp
outsl
jge
aaa
mov
mov
fisttps
sbb
test
sub
mov
loopne
int3
pop
cmp
dec
in
jae
sub
and
push
movsb
sbb
mov
pop
add
test
je
lock
jp
mov
xor
inc
mov
stos
push
mov
sub
sti
ret
hlt
xor
push
push
mov
out
mov
lds
gs
orb
sub
and
add
sbb
mov
pop
jl
add
aas
ret
jne
lea
cli
fldcw
out
js
push
push
ljmp
js
imul
add
cmp
jge
add
pop
arpl
jns
or
jo
lods
dec
imul
fs
aam
ss
inc
pop
orb
sub
subl
adc
dec
pop
push
out
popa
inc
jbe
cmpsl
rolb
push
insb
iret
or
push
fildll
sbb
or
imull
out
aaa
xchg
pop
mov
mov
fimull
mov
das
out
adc
es
imul
rcl
mov
push
push
inc
jbe
cltd
dec
and
pop
cwtl
test
sar
mov
jne
or
inc
and
xor
lods
xchg
sub
test
pop
aaa
jno
sub
ret
cmp
jae
add
sub
andb
shl
mov
mov
dec
ljmp
shll
xchg
ret
lahf
movsb
cmp
sbb
jecxz
xor
out
xchg
lods
xchg
imulb
add
cld
mov
and
fbld
sbb
jl
push
ja
in
mov
lret
pop
popa
pop
dec
rcll
enter
out
ja
icebp
lea
pop
pop
cltd
test
mov
iret
or
xchg
sbb
iret
or
jge
mov
inc
popa
jg
add
mov
stos
loop
insl
stc
imul
sbb
shll
jns
pop
mov
and
push
fimuls
rcll
add
mov
push
and
add
inc
xor
cmp
or
pusha
cltd
and
jp
jae
fwait
or
bound
dec
jecxz
and
jl
rcrl
into
adc
xor
xchg
gs
push
movsb
clc
jo
jle,pt
xchg
gs
adc
mov
outsb
jmp
push
and
push
xor
dec
mov
mov
mov
movsl
cli
cmp
enter
jle
aam
gs
mov
and
and
gs
icebp
and
jnp
pusha
push
mov
bound
mov
add
mov
xchg
cmp
insl
ss
add
jo
jmp
jne
nop
fcmovu
cld
mov
clc
fwait
xchg
mov
pop
xchg
aaa
in
pop
mov
stos
dec
repz
clc
sub
aad
pop
sbbl
dec
jecxz
fwait
push
push
mov
push
adc
inc
sar
out
popf
inc
mov
jno
pushf
mov
lods
stc
xchg
cmp
shlb
pop
shlb
imul
mov
sbb
loop
std
ja
je
into
xor
adc
mov
call
push
into
cmp
mov
pusha
idivb
in
stos
adc
mov
and
cmp
or
and
out
push
pop
loop
lods
lods
and
mov
mov
fwait
or
sub
and
xchg
cld
sahf
lds
dec
fdivs
imul
shlb
fisubrl
inc
sarb
jmp
in
pop
mov
hlt
cld
fsubp
push
clc
das
push
test
pop
sbb
push
leave
mov
ljmp
xor
insl
pop
scas
pop
test
pop
add
mov
mov
xchg
dec
fistps
outsl
jmp
cmpsl
pop
cltd
nop
sbb
xchg
shr
sub
in
data16
lock
pop
mov
push
mov
clc
or
int3
pushf
dec
mov
test
in
stc
sub
and
add
cli
mov
arpl
in
sub
insb
or
xchg
fwait
cld
dec
rorl
and
adc
inc
mov
xor
cld
loopne
loopne
or
mov
imul
cmp
cmp
xor
xchg
enter
test
cmpb
xchg
lret
jae
das
sbb
cmpsb
out
mov
push
inc
outsl
movsb
imul
mov
sbb
sbb
add
and
mov
shll
adc
sti
push
cli
adc
dec
inc
or
pop
or
fsubrl
les
in
movsl
shll
addb
jnp
sub
jno
mov
mov
movsl
adc
repz
into
dec
or
orb
cmc
mov
sbb
in
xchg
or
sub
lods
push
dec
loope
lret
inc
jge
pop
pusha
mov
mov
es
mov
out
mov
std
and
mov
andl
repnz
cmp
pushf
jae
cmp
outsb
mov
pop
xchg
and
adc
mov
mov
test
mov
out
xchg
ficoms
sahf
mov
jg
ficomps
jle
push
push
cmc
inc
int
imul
arpl
daa
inc
enter
inc
and
push
popa
add
push
stos
sbb
leave
fsts
out
xor
sub
nop
adcl
out
push
loop
jo,pn
jle
test
sti
dec
outsl
push
enter
js
cmp
push
lods
xchg
sbb
sbbb
sbb
add
xchg
push
cmp
or
xchg
pop
stc
lahf
loopne
clc
imul
out
fildll
push
imul
push
popf
pushf
push
cmpsb
scas
add
cmpsl
mov
and
lret
sub
xchg
cld
lods
mov
xchg
add
mov
ja
es
jae
sub
mov
pop
fnstsw
sbb
pop
pop
mov
jg
add
inc
or
add
test
add
and
pop
adc
sub
pop
adc
cmpsb
cmp
gs
enter
inc
push
movb
ds
fiadds
lds
cmpsl
mov
xchg
add
push
je
imul
add
and
inc
inc
mov
xor
pop
or
rcrl
add
inc
add
jae
mov
push
sub
push
test
les
stos
sahf
jg
sub
outsl
push
lods
jb
inc
jl
std
int
test
pusha
sbb
adcb
pop
out
pop
rcll
xchg
jbe
sub
cli
jmp
sub
inc
adc
adc
jg
or
jne
sub
sti
mov
adc
fs
stc
test
push
inc
bound
out
xor
mov
dec
scas
movsb
repnz
sub
jle
scas
scas
add
fisubs
push
cmp
jne
cmp
push
add
inc
jmp
cmp
ljmp
pop
xchg
rolb
nop
fwait
mov
dec
pusha
shrb
mov
into
inc
mov
push
std
and
mov
mov
pushl
add
push
out
stc
xchg
cmp
sub
cwtl
dec
lret
pop
jg
bound
dec
inc
repnz
aas
cld
hlt
fsubr
lds
mov
adc
sahf
test
in
jecxz
mov
push
addr16
ficompl
enter
icebp
mov
or
cmp
daa
jl
sti
stc
jp
add
dec
jo
push
xchg
sbb
insb
push
addr16
sbb
cmp
arpl
inc
mov
xchg
cmpsl
movsb
cmpsl
lock
icebp
or
inc
xchg
lret
cli
add
fiadds
shll
insl
push
push
scas
xchg
adc
cltd
cmpsb
mov
pop
push
jae
rolb
scas
jo
xor
daa
sbb
sbb
inc
and
cmc
fstpl
sub
aad
jecxz
jbe
lock
push
pushl
lret
or
fiadds
push
dec
pop
adc
mov
jl
mov
xor
sbb
daa
out
rcrb
jge
stc
fsubs
or
mov
loop
pop
xchg
into
roll
mov
mov
sub
xor
jge
inc
jno
cmp
inc
fs
shl
in
aam
ja
mov
ficomps
dec
mov
out
fnsave
inc
and
mov
in
and
push
enter
jl
or
mov
and
push
push
test
mov
mov
mov
cmp
and
pop
adc
test
fnop
mov
sbb
add
nop
mov
and
shlb
pushw
dec
pop
xchg
cwtl
or
movsl
shlb
pop
stos
add
je
mov
cld
mov
add
clc
outsl
xchg
outsl
call
pop
cltd
or
push
or
insb
mov
xchg
stos
xchg
outsl
mov
jnp
pop
dec
lods
push
cmpl
sti
push
cmp
and
daa
and
cmp
push
mov
fcompl
les
shlb
std
jb
push
adc
inc
jnp
shll
inc
daa
int
and
pop
xor
test
xchg
xor
pop
dec
jg
fcomps
mov
test
cmp
jo
loope
pop
icebp
in
push
mov
xor
cmp
adc
mov
mov
loopne
lods
je
mov
movsl
movsl
push
aaa
out
test
mov
rcll
cwtl
xor
cmpsb
jge
jb
lds
dec
aad
insl
shlb
jecxz
and
inc
je
popa
lds
cmp
add
mov
push
push
in
add
lods
fisttpl
sub
in
fstpt
data16
sbb
mov
cs
lock
pop
push
xchg
ret
pop
xchg
out
inc
rorb
xrelease
in
push
ljmp
les
xor
sub
dec
dec
shll
or
xchg
pop
leave
mov
imul
jns
popf
loope
adcb
mov
push
sarl
movsb
cmc
push
and
sbb
lret
sbb
cs
xor
loopne
sub
dec
pusha
in
sbb
xchg
sti
fsubrl
das
idivl
xchg
cmp
sbb
aas
and
push
or
sbb
pop
sti
fstpt
outsl
addb
cvttps2pi
mov
push
aam
sbb
or
sbb
jo
xchg
test
jae
cmp
sbbl
pop
xorb
cli
cld
mov
fcomps
push
rorb
and
or
test
pop
leave
sbb
das
pop
xor
mov
mov
ss
scas
pop
sbb
sub
or
pop
mov
mov
rorb
xor
push
lret
mov
and
or
ja
inc
movsb
shll
sbb
add
test
and
inc
test
loope
stc
pop
fstpl
xor
and
popf
sbbb
mov
negb
adc
std
jmp
dec
mov
push
cmp
les
imul
mov
sub
int
mov
xor
lods
in
cmp
jmp
xchg
adc
sahf
mov
dec
push
out
push
jbe
stos
scas
lds
fdivrl
sub
and
push
out
push
cli
pop
adc
dec
arpl
leave
aam
pop
lds
xorb
lea
adc
jnp
push
xor
mov
cmpl
sbb
mov
mov
inc
pop
sub
pop
mov
mov
shlb
sub
add
shll
xlat
ljmp
lret
fiadds
cmp
fcomp
sbb
mov
hlt
dec
jne
push
rorl
and
cld
mov
outsb
and
push
mov
cld
xchg
mov
xor
in
push
ret
sub
adc
daa
dec
xchg
sahf
jmp
dec
push
push
std
lods
and
and
enter
icebp
push
dec
push
sub
pusha
cmp
data16
in
lret
cmpsb
cmp
mov
push
lahf
mov
jae
jbe
sub
fsubl
lret
aaa
lcall
mov
cmp
outsb
enter
adcl
mov
or
stos
xlat
sub
mov
fstl
jecxz
ja
push
int
push
fld
lea
inc
fisubs
fdivp
ja
xor
push
push
popa
out
jns
leave
sub
pop
lahf
test
out
xchg
mov
iret
sbb
lock
cmp
nop
adcl
outsb
ss
xor
fisubrl
mov
dec
mov
fisttps
pop
push
cwtl
dec
fwait
outsl
mov
gs
mov
stos
sub
in
mov
test
dec
xor
adc
cmp
xor
or
das
aad
jmp
fmul
stos
je
push
and
imul
mov
or
mov
scas
fwait
pop
inc
adc
ss
lcall
xor
pop
mov
pop
mov
lret
sub
out
cmpsl
ficompl
popa
pop
enter
jne
xchg
nop
xor
lock
daa
inc
pusha
aad
pop
sarl
push
ds
mov
insl
push
movsl
push
cmpsl
outsl
je
push
lock
push
jl
popa
sahf
mov
ja
and
sub
xor
push
mov
inc
faddl
fmuls
push
xor
sub
sbb
or
leave
stos
mov
repnz
cmp
mov
leave
ficomps
pop
cmpb
loope
xchg
out
ljmp
fadd
mov
mov
mov
jns
divps
dec
mov
mov
mov
and
mov
dec
jl
inc
jl
lcall
inc
xchg
mov
pop
ss
push
dec
fs
adc
xlat
xchg
test
shrb
jns
rcrb
nop
mov
push
xchg
add
mov
out
lcall
add
in
mov
imul
insl
dec
imul
jnp
inc
or
mov
pop
and
jae
icebp
and
inc
add
pushf
fcompl
add
popf
sub
loope
xor
lahf
fistpll
xchg
xchg
xor
inc
jg
in
dec
ret
cmpsb
xlat
scas
test
adc
jbe
test
faddl
mov
dec
jae
xchg
mov
jnp
idiv
testb
out
je
add
test
mov
pop
adc
push
mov
xchg
adc
push
sub
inc
adc
mov
shlb
add
dec
mov
fistps
mov
subb
fwait
dec
movsl
dec
ud1
pop
bound
imul
ds
idivb
jae
test
lods
jnp
sti
insl
in
xor
fdivs
insb
dec
getsec
repz
inc
xchg
pop
adc
sbbl
fadds
and
cmpsl
add
jp
jo
pop
inc
and
adc
lods
ss
fs
or
clc
sbb
jmp
hlt
dec
xchg
stos
fdivp
and
mov
sbb
shlb
das
or
push
ret
jbe
inc
add
jae
jge
mov
sub
fdivrs
add
rcrl
mov
xchg
or
out
inc
cli
pop
mov
mov
fsts
js
lods
xchg
js
pop
dec
inc
inc
loop
sub
popa
out
xchg
mov
adc
test
les
ss
in
push
out
stos
pop
and
push
xchg
jl
mov
movsl
test
dec
and
dec
es
cmp
insb
loopne
mov
pop
lds
sbb
ret
mov
pop
jmp
aaa
dec
fldt
or
nop
xor
outsl
push
aas
jbe
xor
sti
repnz
shufps
push
adc
je
add
mov
sub
icebp
push
loopne
cltd
int
mov
shll
orl
adc
sbb
pop
rcll
dec
jge
ret
leave
and
out
sbb
lea
mov
pop
jno
jecxz
ljmp
push
jge
dec
rorl
xchg
cmpl
fxch
sbb
mov
insb
iret
stc
mov
dec
adc
and
jns
daa
mov
lock
ret
mov
ret
mov
mov
pop
jecxz
inc
aad
xchg
xor
mov
mov
dec
sti
push
sbb
cs
cmp
cltd
in
cld
mov
mov
outsl
popf
fldl
test
int3
push
push
sarl
lods
std
sbb
dec
popa
inc
push
data16
sub
cmp
pop
pop
movsb
pop
ret
sub
mov
xor
mov
cmpsb
jge
out
xor
sub
fwait
iret
movsb
inc
push
dec
scas
xacquire
sub
rclb
jge
scas
mov
sbb
adc
into
jne
xor
jmp
lret
enter
jp
xchg
pop
mov
cmp
or
mul
imul
and
xor
in
scas
push
stos
pop
sbb
outsl
push
data16
jmp
dec
scas
in
sbb
jbe
sarl
xchg
push
fisubrl
pop
aaa
daa
jg
add
repz
aam
rcll
cmp
sbb
jge
cmp
test
and
and
test
mov
sbb
push
in
dec
add
pusha
or
shrb
fbstp
scas
sub
or
lea
sbb
stos
loope
outsl
and
and
fsubrs
xchg
rorb
shl
imul
add
ret
std
ret
mov
jecxz
dec
xchg
shrb
add
dec
gs
mov
and
dec
sub
test
cmpsl
sti
sarl
int
jle
mov
inc
pop
pop
cld
loope
adc
mov
ljmp
in
imul
add
mov
mov
sbb
jo
and
cmp
mov
lret
add
je
lea
xchg
jcxz
aas
mul
add
jae
mov
andb
sbb
shlb
inc
leave
pop
sbb
mov
mov
aad
push
push
lahf
adc
xchg
fcmovbe
cs
mov
rol
popa
or
pop
push
pop
nop
cmpsb
ret
dec
xchg
int
push
push
or
hlt
das
cmp
pop
inc
adc
add
sbbl
je
dec
sbb
stc
sub
cltd
es
lods
fistpll
nop
sbb
or
jns
sub
cltd
inc
aam
imul
push
outsb
jmp
cmp
mov
mov
es
inc
clc
jbe
scas
xor
ja
jg
and
sti
lock
iret
jns
add
pop
cltd
adc
dec
in
xchg
pusha
mov
xor
cmpsl
jo
addr16
sub
xor
or
jle
jo
ficoms
jnp
fdivrs
cmp
leave
sarl
ret
imull
test
stos
xchg
mov
mov
loop
inc
mov
xlat
test
mov
xor
lcall
rolb
cmp
popa
cmp
jg
loope
push
jl
icebp
push
add
mov
aaa
cwtl
mov
fsubrs
fldenv
sbb
daa
lods
jnp
idivl
test
popa
mov
sar
or
in
aad
adc
scas
mov
jmp
add
pushw
push
pop
inc
and
rcll
pop
xchg
xchg
sub
inc
jp
xchg
stos
out
cmp
cmp
daa
jp
insl
loop
in
inc
inc
loope
xchg
in
jp
inc
adcl
xchg
dec
cmp
pop
mov
add
xchg
or
imul
push
fcoms
cmc
inc
in
xlat
stos
mov
dec
in
pop
push
jns
movb
ret
sbbb
mov
push
test
shrl
xchg
inc
aad
movsb
shlb
cmc
dec
cmpsb
sub
xchg
fdiv
in
mov
xlat
xor
jecxz
arpl
int3
dec
push
int3
push
pop
outsb
js
cwtl
fcompl
jo
cli
mov
jns
leave
cmp
imul
ss
or
out
cmpl
leave
or
loope
dec
outsb
and
test
xchg
out
mov
push
ss
pop
mull
adc
shlb
or
jmp
movsb
xlat
out
dec
clc
dec
or
rcl
ficoml
test
popf
adc
xor
mov
and
cltd
inc
mov
cltd
ficomps
jae
test
or
shll
pop
xor
or
mov
mov
stc
pop
inc
mov
and
daa
add
sbb
sbb
lods
xchg
test
std
les
push
icebp
mov
test
add
jo
rorb
pop
fsubp
xchg
int
jbe
in
popf
out
and
scas
jp
add
inc
insl
mov
add
js
in
out
pop
insb
inc
xchg
lods
or
mov
je
sti
inc
es
out
dec
les
pop
ret
add
xchg
mov
ja
popa
xchg
or
lods
lods
push
rcrb
cmpsb
dec
ficoms
cmp
xchg
es
sbb
adc
mov
popf
jp
dec
addl
scas
mov
inc
push
test
es
dec
adc
dec
push
xchg
cmpl
sbb
push
inc
jmp
xchg
int3
xchg
icebp
xchg
std
pop
jmp
xchg
in
daa
adc
into
pop
lret
rclb
daa
mov
xor
sahf
cmpsb
jno
inc
test
movsl
das
xchg
inc
inc
push
xor
mov
jns
pop
xchg
add
mov
jbe
cmp
aaa
or
scas
movsl
mov
sub
push
xlat
out
sub
xor
jg
cs
loop
sbb
mov
inc
pop
push
push
xchg
iret
push
clc
inc
push
mov
arpl
jbe
push
fldl
xor
or
imul
idivl
mov
xchg
push
js
iret
in
cmp
out
cltd
in
jns
pop
imul
fwait
push
imul
repnz
sbb
jbe
sbb
mov
sahf
loopne
inc
out
adc
les
inc
lock
neg
jl
fwait
aam
push
dec
sarl
xchg
add
test
jno
xlat
xor
mov
mov
adcb
mov
add
adc
outsb
adc
mov
loopne
xchg
into
jge
adc
pop
cld
cwtl
mov
sub
fs
xchg
xchg
add
ficomps
shlb
aaa
inc
add
adc
ret
out
ret
adc
dec
dec
sbb
aaa
jae
sub
mov
inc
pop
inc
add
aas
test
add
jecxz
pop
idiv
cld
data16
insb
in
rclb
xor
xchg
dec
loop
cmpsb
sbb
arpl
aaa
adc
mov
jns
jmp
repz
xchg
cmp
cmp
daa
add
daa
xor
dec
stos
mov
rcrl
lretw
jae
cmpsb
int
in
mov
aaa
mov
mov
mov
sbb
jae
cmp
pop
enter
xorl
push
push
loopne
mov
fldln2
pop
stos
andb
das
dec
lock
xorb
mov
xchg
cmc
adc
add
sub
or
add
add
mov
pandn
std
or
mov
sbb
jno
mov
xchg
je
stc
mov
pushf
cmp
xlat
mov
aam
lcall
sub
in
rorb
adc
adc
push
neg
stc
mov
xchg
lcall
mov
subl
or
jbe
xor
pop
inc
test
dec
dec
sub
bound
cmp
jle
sahf
sbb
mov
jae
xchg
sbb
mov
fistl
or
or
xchg
repz
mov
ret
add
push
clc
or
mov
aam
push
mov
cwtl
xor
cli
xor
aas
fsubs
out
pop
mov
sahf
mov
pop
or
xchg
outsb
cmp
mov
je
sbb
daa
ja
out
lds
stos
xchg
popf
inc
in
hlt
das
repnz
dec
cmp
in
jbe
jb
rcrb
sub
or
lret
imul
cmp
add
lcall
push
stc
or
pop
add
insb
sub
rolb
fnsetpm(287
insb
sub
shr
in
movsl
xchg
mov
jae
shll
dec
jbe
pmaddwd
das
pop
adcb
jmp
pop
das
push
pop
int
fisubl
loop
mov
and
lret
fwait
sub
jno
test
fidivrs
das
push
outsl
sbb
fimuls
dec
cmp
xchg
mov
mov
jp
les
rolb
scas
movsb
pop
leave
je
pop
adcl
jb
xor
mov
push
loop
je
movsl
push
xor
addr16
je
out
sub
test
fs
aad
xlat
out
lcall
std
enter
xchg
xchg
insl
ret
push
add
mov
clc
pop
jecxz
ljmp
movsb
mov
push
arpl
aad
in
mov
and
mov
xlat
daa
js
mov
shrb
in
dec
sub
mov
xchg
jbe
cmp
adc
adc
inc
imul
or
bnd
inc
sbb
aas
cmpsl
mov
mov
dec
loope
inc
add
int3
out
push
cmp
enter
mov
aas
push
push
xlat
inc
ja
mov
push
and
push
jecxz
and
sbb
loopne
mov
insl
cmp
mov
test
pop
das
cwtl
cmc
push
mov
push
negb
mov
clc
or
int
jl
mov
adc
mov
xchg
mov
or
dec
or
out
inc
pop
int
jle
loop
or
sbb
mov
mov
mov
repz
sbb
fdiv
fs
sahf
jne
lods
sub
mov
xchg
jo
sub
std
cwtl
push
int
inc
and
jl
out
in
lds
mov
in
out
in
sbb
pop
nop
sub
ret
add
ds
mov
es
mov
mov
xchg
add
dec
sub
sbb
shlb
mov
outsb
movsb
jp
int3
fcmovbe
push
lods
hlt
cmp
test
mov
imul
sub
mov
xchg
dec
jle
ret
adc
stos
mov
popa
jp
jo
pusha
lret
ror
call
mov
pop
mov
aad
jnp
mov
data16
loope
addb
dec
cmpsb
cmp
push
inc
sub
push
icebp
adc
ja
sub
or
and
push
sub
dec
mov
stc
pop
inc
and
arpl
or
pop
mov
jecxz
pop
iret
insb
mov
movsl
ret
mov
cmp
push
jae
xor
jle
movsb
lea
mov
popf
inc
mov
and
mov
mov
aad
repnz
das
jns
and
inc
jmp
xchg
add
les
inc
dec
std
push
push
fistpl
xor
addr16
lahf
enter
addr16
xchg
into
inc
jae
lahf
mov
xor
jg
pop
imul
pusha
mov
out
dec
mov
mov
lea
adc
repnz
in
jg
js
out
test
int3
xchg
push
or
inc
movsl
cmp
enter
int3
xchg
mov
inc
dec
push
fsubrs
mov
rol
or
dec
fdivl
imul
adc
xchg
pop
cwtl
mov
xorl
pop
les
jns
in
cmp
mov
repnz
outsl
in
mov
cmp
lahf
inc
xchg
sbb
test
mov
mov
adc
repz
mov
pop
push
dec
fldt
and
pusha
jge
xlat
jno
cmp
xchg
mov
jnp
mov
aam
mov
mov
mov
insl
arpl
xor
inc
push
sub
sub
mov
icebp
xchg
pusha
cmp
loope
add
inc
jge
in
sub
xor
daa
iret
out
insl
pusha
cmp
mov
jbe
mov
lods
cmpsb
rcrb
cltd
cmp
pop
pop
push
scas
add
push
push
xlat
pop
enter
test
push
pop
add
popf
enter
or
pop
jno
dec
jle
into
sbb
mov
aaa
imul
dec
in
jno
fists
jnp
dec
mov
int
xchg
pop
pop
xchg
icebp
or
push
das
shlb
mov
jge
mov
jle
cs
stos
inc
flds
xor
hlt
mov
cmp
jae
dec
leave
imul
and
sar
scas
sbb
ret
repz
aaa
leave
jne
insb
xor
mov
scas
mov
adc
sub
mov
cmp
xchg
stos
and
mov
iret
cmc
js
fiadds
push
data16
mov
icebp
adc
pop
in
sub
in
inc
push
int3
test
fcoms
loop
push
inc
addr16
inc
mov
mov
mov
pop
push
int3
out
in
cli
mov
or
sbb
xchg
push
jp
ret
pusha
cmp
popf
dec
sbb
push
mov
mov
jae
pusha
mov
jne
cld
inc
jnp
int
repz
icebp
incl
add
push
orl
adc
loope
push
dec
adc
leave
cmp
push
ljmp
push
and
cmp
pop
mov
jecxz
mov
mov
popa
mov
sbb
pop
rcl
das
les
push
insb
nop
jmp
lods
jmp
das
scas
sub
lods
adc
stc
add
imul
daa
cmp
dec
xchg
mov
xchg
and
mov
mov
fucomi
shll
push
sbb
cwtl
adc
adc
xor
out
stc
sub
jae
testb
xchg
adc
leave
sbb
addr16
fwait
cld
stos
push
xor
cmp
cmp
push
push
and
fdivr
rolb
dec
fcoml
and
enter
rolb
add
mov
sub
mov
cmp
jbe
push
dec
stc
imulb
mov
rol
cmp
fwait
shlb
adc
pop
repnz
cmp
xorb
pop
lea
push
cld
or
push
inc
xchg
jb
ja
inc
mov
call
sub
mov
jnp
xor
pop
mov
mov
fadds
pop
bound
gs
inc
xchg
pop
or
out
xor
int3
lea
xor
lods
cli
push
xchg
pop
js
in
adc
test
add
pop
sbb
rclb
jmp
jle
lahf
pop
andnps
jbe
pushf
inc
mov
sbb
adc
jns
sub
imull
adc
daa
mov
sub
loopne
fwait
mov
push
mov
mov
add
addb
or
outsb
ja
push
pop
fs
jb
jne
fmull
shll
fistps
add
in
jo
xor
sbb
imulb
into
enter
insl
icebp
push
pop
repz
fwait
stc
push
rol
jle
mov
mov
leave
pop
iret
repz
rcrl
popf
aad
das
scas
push
push
inc
add
xchg
shll
icebp
or
push
repz
lds
sub
jecxz
sub
sti
xchg
sub
daa
or
mov
xor
subb
jae
cmc
pop
out
fdivr
aaa
and
jg
jle
mov
outsb
sbb
pop
arpl
jmp
xchg
add
pusha
sbb
sub
adc
in
subb
cs
nop
cmp
sbb
mov
loopne
cli
sbb
sahf
push
push
fs
xchg
imul
xor
enter
lahf
jle
inc
jmp
testb
fcmovb
jne
in
cmp
pop
and
sti
dec
cmpsb
mov
test
pop
cs
and
gs
repnz
sub
fisttpl
xchg
ret
push
pop
cmp
imul
xchg
jbe
xor
aad
jo
mov
and
pop
inc
popf
xchg
inc
sub
mov
loope
iret
imul
dec
or
adc
push
sub
movsb
or
mov
push
shll
aaa
loopne
inc
repz
test
out
xor
jb
mull
not
repz
and
sarb
loopne
or
out
in
in
ret
repz
ja
imul
in
xchg
jmp
dec
jl
push
xor
xchg
sbb
scas
inc
mov
or
pop
push
add
test
fistps
neg
jmp
jmp
jae
out
adc
mov
pop
cmp
xchg
mov
mov
add
mov
mov
adcb
inc
fstl
adcb
lahf
nop
movsl
data16
adc
clc
mov
cmp
mov
dec
ds
mov
aaa
mov
or
cmp
dec
dec
test
in
out
jns
or
iret
push
mov
into
pop
lods
mov
add
popa
cmp
test
inc
and
and
xlat
imul
dec
or
xchg
rclb
int
jae
les
outsl
mov
rolb
rclb
cmp
pop
aam
jne
frstor
adc
push
lods
hlt
add
dec
xorl
mov
add
es
in
jno
xor
aam
push
cmp
lcall
adc
arpl
enter
push
cmp
mov
inc
add
mov
jno
pop
inc
xor
cmp
or
mov
je
push
stos
test
lock
xor
mov
cmp
dec
push
cmpsl
loop
mov
inc
jnp
and
inc
mov
fisubs
stos
sbb
mov
lcall
dec
sbbl
mov
cmpsb
dec
cmpsl
sbb
std
imull
xchg
mov
mov
pushf
clc
lahf
cltd
aaa
enter
hlt
addl
test
mov
xor
dec
mov
mov
mov
pop
lods
add
pop
std
push
jg
bound
dec
inc
jnp
lahf
outsl
inc
jmp
add
ret
jl
mov
cs
shl
fimuls
scas
and
adc
std
mov
rcrb
add
mov
pop
icebp
pop
xchg
shrb
sti
movsb
dec
frstor
xchg
je
hlt
cmp
cmp
bound
test
not
dec
cmp
sarl
clc
dec
mov
or
add
ja
testb
pop
mov
popf
inc
jge
pop
cmp
pop
fldt
xchg
stos
xchg
stc
xchg
ds
xlat
sti
ss
dec
sbb
fldl
xchg
and
vaddsubps
insl
sub
push
ds
mov
mov
les
sbb
xor
xchg
add
call
scas
mul
xchg
mov
into
data16
jg
and
cmp
mov
mov
lock
mov
adc
push
in
xchg
xchg
imul
push
push
addr16
movsb
rorl
lahf
in
mov
outsb
mov
out
lret
sub
stos
ret
xchg
sbb
out
loopne
dec
mov
call
rclb
xlat
loopne
sbb
loop
loope
dec
jo
repnz
push
notb
lcall
fdivr
jecxz
pop
pop
or
adc
inc
jge
lds
mov
push
and
inc
sbb
or
inc
call
mov
cmc
xchg
into
fwait
xor
fidivs
cli
daa
sub
mov
sti
insl
lods
sbb
push
mov
push
and
mov
shll
pop
adcl
mov
dec
std
out
and
iret
sub
daa
or
and
int
and
pop
inc
pop
sub
loop
sbb
xor
sbb
push
jg
jle
and
fsubr
test
sahf
gs
sub
jg
push
aas
sub
ljmp
je
sub
or
sub
cwtl
add
adc
arpl
mov
lret
int
push
ds
pushf
xor
inc
iret
mov
jae
gs
adc
xor
pusha
loope
inc
dec
xor
dec
or
ret
or
xchg
sub
lock
mov
sub
ret
inc
xchg
cwtl
stos
ret
lods
mov
add
sub
add
jecxz
xor
cmp
cmc
stc
out
dec
addr16
mov
pop
je,pt
sbb
sub
mov
mov
incl
add
mov
mov
mov
push
xor
cs
icebp
pop
data16
inc
hlt
fistps
jge
pop
sbb
stos
jmp
inc
lret
cmpsl
push
dec
dec
test
dec
xlat
jge
mov
stc
loopne
lcall
push
or
out
xor
imul
lret
push
sub
pop
add
xor
xchg
dec
fcomp
lea
inc
fiadds
mov
mov
pop
mov
sti
inc
and
inc
roll
pop
std
jmp
in
dec
scas
mov
sbb
cli
fcmovb
sti
aas
jns
adc
sti
lods
and
lret
lret
ret
push
pop
adc
xchg
cmp
addl
insl
sbb
mov
iret
mov
in
push
sub
repnz
mov
int
in
inc
movsl
iret
cmc
jle
lret
imul
mov
loopne
repz
mov
and
jg
mov
pop
xchg
loopne
dec
rclb
push
jnp
pop
or
add
cmp
ret
insl
int
movsb
pop
mov
pop
test
mov
out
push
lds
jns
or
mov
mov
repnz
mov
fwait
pushf
dec
leave
adc
mov
addb
icebp
stos
in
jns
jo
in
aad
jb
int
test
sti
inc
and
xor
xchg
data16
mov
ret
xchg
arpl
aas
add
nop
jbe
in
fisubs
mov
xor
xchg
jge
push
pop
mov
jecxz
bound
or
mov
adc
sbb
repnz
push
aam
jne
add
xchg
aas
sub
jns
sub
cmp
idivl
mov
push
bound
mov
jo
cld
cmp
mov
subb
adc
fs
xorb
xor
negl
dec
mov
shll
mov
jnp
mov
pop
das
push
push
xor
pusha
sub
and
hlt
dec
jmp
stos
test
insl
mov
iret
cs
push
sbb
cltd
sub
pop
loope
and
test
lods
cmp
outsl
xchg
pusha
xor
add
dec
outsb
push
lea
pusha
push
mov
cmp
and
loop
test
pop
imul
push
mov
jo
push
sub
fbstp
and
gs
sub
scas
mov
pop
shl
dec
clc
es
jge
shrb
aaa
and
jno
lods
add
fistpll
lcall
dec
fiadds
cltd
loope
cli
testb
cmp
add
fstpt
mov
ror
test
jns
pop
rorb
sub
enter
addb
pop
jge
fadds
sbb
addr16
and
sti
pop
or
rorb
push
jb
iret
shll
aaa
add
insb
sub
fs
sub
cmp
xchg
xor
pop
addw
pop
mov
mov
sbb
xchg
add
add
outsb
cmpsb
insl
jbe
shll
ljmp
pop
xor
xchg
or
das
pushf
insl
sbb
inc
mov
fadds
push
mov
pop
scas
jp
xor
mov
mov
mov
outsl
push
stos
fsub
inc
and
pushw
sub
add
mul
shll
ds
faddp
mov
push
push
push
xchg
xchg
loopne
inc
mov
lret
lea
mov
sub
sahf
sbb
dec
enter
mov
sbb
jmp
xchg
dec
cmp
cmp
imul
lret
movsl
mov
lcall
les
aas
push
mov
lret
mov
mov
mov
mov
insb
lock
mov
push
jp
popf
push
xor
and
mov
add
mov
mov
sbb
shrb
lods
jmp
push
sbb
enter
mov
jo
push
sbb
out
and
loopne
xchg
or
movsl
cld
add
pusha
ljmp
mov
enter
push
pop
iret
dec
xchg
mov
mov
jae
and
xor
aaa
js
scas
fstps
not
cs
ds
xchg
int3
bswap
lock
xchg
roll
testl
movsl
dec
dec
insb
cmc
mov
pop
sahf
mov
jo
mov
mov
jecxz
cmp
ret
xchg
shrl
cmc
mov
mov
xchg
pusha
cmp
repnz
push
jmp
sbb
xor
cmp
or
das
inc
jg
push
fmuls
stc
jmp
push
fisubs
lahf
mov
in
mov
adcl
jno
pop
mov
dec
mov
lock
call
pushl
das
pop
lea
test
push
inc
xchg
hlt
popf
out
pop
push
jl
inc
cmpsb
pop
into
aaa
movsb
pusha
inc
mov
addr16
push
xor
mov
stos
insb
mov
sbb
in
idivl
outsb
push
push
or
mov
lret
jno
jge
add
rcrb
neg
stos
and
cld
adc
dec
or
pop
daa
loop
adc
xor
pop
pushf
sbb
cmp
cmpsl
outsl
sbb
mov
cmp
ja
pop
test
dec
aas
xchg
jno
in
xchg
dec
xlat
outsb
stos
xor
aaa
ret
jmp
and
mov
xor
lcall
add
jmp
sub
insl
dec
cmp
inc
pop
ljmp
in
popa
gs
xchg
out
cmp
pop
cltd
mov
mov
sbb
aaa
sbb
or
sahf
xor
shl
loope
outsl
cli
nop
out
pop
mov
fldl
cvttps2pi
or
cs
pop
sbb
test
cmp
into
movsb
xchg
outsb
ds
icebp
jge
mov
loopne
push
call
mov
mov
jno
into
jne
sbb
jg
xlat
and
je
mov
in
jb
sub
dec
adc
scas
in
push
cltd
rcl
xlat
in
addr16
add
inc
push
scas
jmp
fucomp
jle
push
mov
and
inc
shlb
inc
mov
repnz
imul
clc
outsl
sbb
subl
dec
in
rcrl
mov
jne
pop
std
pusha
adcb
jl
rcrl
iret
test
fucom
xchg
shl
inc
jne
mov
daa
mov
int3
and
jle
lods
lcall
pop
stc
or
dec
call
adc
sti
push
mov
shrl
mov
jo
push
sar
add
jnp
aas
mov
push
fisubrs
sbb
ja
fistl
xor
mov
xchg
pop
dec
cmpsl
pop
lea
iret
jmp
jno
rol
int3
jae
stos
xlat
dec
push
cmc
add
test
or
jne
sbb
push
xchg
xor
pop
popf
int3
mov
bound
mov
imul
mov
sarl
cmp
add
sub
mov
mov
popa
ret
lock
and
shrl
add
insb
xor
jg
je
jnp
dec
in
ffreep
ret
out
mov
rcrb
cmc
sarb
iret
inc
add
cmp
push
cmp
es
pop
pop
xchg
jnp
sbb
out
sarb
xchg
ds
rorl
repnz
mov
inc
ljmp
xchg
mov
mov
xchg
in
lods
push
inc
arpl
popf
add
iret
adc
scas
out
cmp
inc
lahf
dec
into
sbb
fldlg2
dec
push
dec
fwait
stos
lods
xchg
adcl
ret
push
mov
out
test
cmp
dec
fisubrl
and
roll
jnp
popa
xor
popa
gs
test
pop
xchg
lahf
cli
out
ss
cli
mov
ret
outsb
mov
nop
ds
mov
into
or
xchg
push
test
daa
das
xor
cmp
fiadds
pop
loope
jl,pt
xorl
adc
mov
loop,pn
mov
nop
pop
dec
aam
jns
bound
ja
dec
div
sub
pushf
rep
xchg
mov
pop
sub
pushf
idivl
fsincos
stc
jg
scas
int
sbb
sti
add
dec
push
stos
add
orb
addb
jno
cmp
mov
dec
vorpd
dec
aam
je
data16
mov
sar
sub
sbbl
sbb
pop
insl
pop
add
dec
das
fbld
and
frstor
sub
mov
push
lds
adc
mov
scas
out
sahf
push
jae
std
cmc
lods
sarl
fcom
mov
mov
out
push
notl
test
inc
out
out
testl
and
sbb
xorl
insb
mov
inc
cmp
and
push
xchg
std
jae
pop
mov
mov
and
scas
mov
scas
push
and
xor
outsl
orl
mov
test
aaa
add
popa
or
not
movsl
xchg
jl
outsb
stc
stos
and
aaa
shrl
and
fwait
mov
movsb
aaa
jae
dec
lahf
pop
les
ja
mov
or
and
xor
xor
jae
frstor
lcall
data16
inc
aad
dec
xor
dec
xchg
and
mov
mov
push
push
in
aam
out
mov
jg
dec
js
rcl
sub
jnp
pop
ret
adc
jo
xchg
gs
sbb
das
push
sbb
insl
fs
mov
add
repz
mov
ret
pop
enter
add
sub
fwait
daa
sub
movsb
repz
scas
stos
fwait
jns
sbb
mov
loope
in
push
mov
sbb
or
jmp
hlt
push
fwait
jge
ficomps
pop
dec
mov
pop
test
in
push
xor
cltd
aaa
cmpsb
pop
repnz
mov
ror
lods
cwtl
shlb
push
insl
imul
jg
repnz
sar
scas
add
iret
push
popa
push
arpl
jp
outsl
jecxz
fwait
jbe
dec
cmp
add
mov
cwtl
or
mov
lret
push
mov
adc
cmp
jae
les
dec
out
push
push
jae
inc
add
xchg
mov
clc
mov
in
lock
adc
and
sub
pop
sbb
jae
and
add
xor
mov
mov
insl
icebp
inc
leave
rcl
xchg
loop
movsb
sbb
push
jnp
ss
add
inc
jb
test
push
adcb
mov
pop
test
adc
and
xchg
cltd
scas
dec
jae
call
das
fcomip
fisubrl
mov
scas
repz
fst
iret
jno
xchg
rorb
fcoml
add
sub
dec
mov
mov
pop
mov
sbb
call
and
push
rcrb
int3
pop
jbe
outsl
sbb
cmp
loope
or
mov
aad
pop
or
xor
fimuls
ret
inc
ja
inc
in
mov
or
mov
sar
jl
and
popf
call
imul
dec
in
hlt
cmp
mov
lahf
dec
dec
inc
scas
stc
adc
or
rolb
jbe
retw
mov
incb
or
lret
fdivrl
hlt
in
pop
push
out
arpl
mov
mov
imul
scas
loopne
add
dec
mov
std
imul
mov
insl
push
adc
ja
cmp
jns
add
ret
in
push
les
lea
int3
icebp
push
enter
mov
iret
shr
or
fisubl
cltd
sbb
mov
xchg
mov
aaa
xor
loopne
rcll
into
xor
cld
jae
std
sbb
rcrl
leave
adc
pop
mov
jp
jbe
icebp
je
push
push
movsb
adc
ds
shlb
cmp
arpl
mov
pop
sbbl
divl
inc
pushf
pushf
stos
xchg
cltd
nop
cs
mov
xchg
imul
push
sub
cmp
lods
sahf
mov
in
decb
repz
mov
add
insl
jl
into
arpl
and
in
stc
fwait
adc
lea
cmc
int
pop
inc
addb
pop
push
push
mov
imul
cld
mov
adc
popf
push
dec
out
inc
mov
lcall
mov
sbb
out
shl
enter
sti
out
gs
xchg
xchg
jmp
pop
popf
jle
xor
es
xor
arpl
xchg
lcall
jmp
mov
lock
sbb
xchg
je
dec
lock
test
pop
adc
shll
test
loopne
in
insb
push
subb
or
pop
insb
xorb
mov
lock
hlt
rcll
push
rorb
sarl
add
outsb
cmp
fisttpl
xlat
mov
inc
or
std
je
stos
mov
sub
mov
and
or
mov
add
fwait
ja
fnstcw
jns
push
dec
or
lret
mov
les
jne
xor
fildl
dec
add
lods
sub
pop
adc
fstpl
cmpsb
xchg
mov
fimuls
enter
jb
negl
mov
xchg
xchg
mov
stos
lret
mov
fmull
push
sarl
int3
xchg
xor
cmc
jge
test
push
pop
pushl
xor
mov
xor
sahf
in
addr16
mov
mov
mov
adc
mov
jno
pop
jnp
into
mov
mov
xor
aas
aas
sti
xchg
testl
pusha
jecxz
mov
xorl
or
outsb
icebp
jae
mov
nop
test
push
lahf
sub
inc
push
mov
jmp
out
jge
mov
out
aad
jecxz
in
push
sbb
pop
divb
push
dec
xchg
jne
xchg
push
push
lods
stos
pop
mov
push
push
adc
mov
hlt
mov
fildll
ljmp
rorl
insb
ficoml
xchg
repz
cmp
fdivl
push
fdivr
sahf
sbb
or
adc
xchg
das
mov
inc
jmp
icebp
mov
out
lret
pop
xor
or
dec
sbbl
push
dec
mov
mov
cmpsl
push
mov
add
cmpsl
int
xchg
insb
les
roll
mov
jns
mov
and
dec
push
push
cmpsb
xchg
mov
fmul
sbb
xchg
push
hlt
repz
jne
ficoms
xchg
pusha
mov
sbb
or
adc
xchg
and
jo
sub
pop
lahf
adc
jmp
sub
sub
jnp
rclb
mov
stc
pop
push
mov
mov
add
lfs
or
dec
mov
pusha
stc
inc
pop
add
cmc
ret
jg
mov
xor
orb
sbb
add
and
ds
hlt
out
add
sub
cltd
mov
ss
mov
nop
out
rcll
cmpsb
aas
dec
mov
jecxz
or
and
cmp
inc
lcall
bnd
mov
pop
add
ja
aaa
movsl
sub
mov
mov
lods
sbb
mov
adc
push
sub
dec
and
ljmp
cli
les
add
fisubrl
jae
jnp
test
xor
mov
dec
adc
aam
fdivp
iret
jae
mov
rorl
push
mov
pop
mov
pop
or
scas
mov
incb
in
es
fimuls
lahf
lcall
jb
xchg
aaa
fs
sub
inc
pop
add
popf
push
mov
sub
cmp
fsin
mov
inc
lea
dec
addr16
push
mov
imul
iret
lods
mov
jle
jbe
cmc
repnz
movb
sbb
ficompl
je
jno
lds
mov
stos
pop
movsb
or
inc
aam
pop
ds
iret
out
ja
daa
inc
idivl
cmc
mov
stos
mov
push
or
popa
jne
insl
mov
stos
inc
imul
add
pop
outsl
jne
outsb
mul
cs
gs
add
sbb
hlt
or
adc
sub
inc
loope
std
xchg
jo
sbb
pop
fwait
mov
jg
arpl
jle
adc
xor
dec
lret
push
push
sbb
inc
shll
jge
or
filds
xchg
out
inc
and
adcb
clc
xchg
inc
xchg
cwtl
je
fadds
cltd
jecxz
mov
clc
dec
insb
xchg
les
xchg
sub
lds
mov
or
pop
mov
mov
dec
push
mov
lods
cwtl
dec
jp
jl
in
push
cmp
adcb
lea
inc
mov
adc
in
je
into
and
push
fiaddl
faddp
add
inc
in
into
fstps
imul
push
pop
shlb
mov
aad
mov
test
lea
movsb
int3
les
shrb
test
and
xchg
cltd
xor
cltd
or
xor
sub
xlat
lock
enter
push
out
fstps
push
stos
dec
movsb
inc
sub
das
hlt
pop
push
mov
stc
mov
or
jno
loopne
xchg
and
sub
andl
es
nop
jns
cli
popf
inc
xorb
xorl
cwtl
mov
test
ss
jge
sbb
xchg
jge
inc
mov
mov
movl
lock
arpl
adc
andnps
xor
mov
int
ja
xor
outsl
arpl
fwait
rorb
out
mov
outsl
dec
dec
lods
mov
pop
mov
push
out
clc
out
jg
xchg
fwait
mov
rep
iret
mov
pop
fwait
cli
out
lea
es
push
add
mov
xor
aad
sbb
cmpsl
push
mov
xchg
dec
mov
popf
in
addr16
add
sbb
lahf
int
call
cmpsl
push
mov
adc
aas
aas
pop
jb
movsl
aas
adc
xchg
push
pop
xchg
mov
out
mov
sbb
stos
mov
sbb
dec
lods
mov
jb
mov
test
xchg
xor
xchg
jns
or
je
js
mov
shr
cmpsl
cmp
dec
adcb
adcl
outsl
mov
mov
xor
or
jns
push
pop
xor
ljmp
cld
mov
mov
mov
add
inc
shll
sbb
dec
mov
dec
xor
inc
in
push
int3
jg
inc
addb
mov
hlt
enter
mov
ret
pop
dec
lock
mov
sub
ja
rcll
rorb
daa
pop
dec
cmp
xchg
cli
testl
imul
movsb
mov
loope
pusha
aam
push
jg
adc
jbe
mov
lret
cmp
xor
in
das
adc
ret
mov
int3
xchg
cld
mov
xchg
pop
fs
jb
incb
sbb
dec
jnp
jnp
jnp
push
jg
cmpsl
add
call
out
insb
lret
clc
pusha
ret
cmpsb
xchg
pop
out
xor
xchg
je
add
outsl
or
movsl
movsb
mov
dec
add
adc
dec
int
sbb
dec
push
sti
pop
fimuls
pop
stos
xchg
lea
pop
ficomps
push
or
iret
ljmp
insb
mov
inc
cltd
cmp
enter
pop
insb
flds
mov
jae
and
inc
or
push
push
xor
inc
dec
adc
out
test
push
xchg
out
bnd
adc
xchg
and
orl
fwait
bnd
or
push
mov
or
sub
gs
mov
jne
in
jns
clc
call
in
adc
push
sub
adc
cmp
push
push
jl
lds
and
mov
aas
push
jle
fcomp
inc
cmp
xorb
dec
jle
mov
cmpb
cmpsl
aas
xlat
xorl
and
mov
int3
int
in
mov
dec
push
mov
xlat
add
mov
in
imul
pop
mulps
and
fistl
ret
shrb
out
inc
xchg
push
inc
sub
cmp
aas
sbb
jne
mov
hlt
test
lods
icebp
jl
inc
jecxz
pop
adc
inc
test
daa
les
xchg
xorb
push
sbbl
mov
leave
lea
push
fdivrp
mov
sub
mov
mov
shrl
imul
jle
push
pop
pop
mov
popa
mov
push
mov
out
xlat
xor
lea
xor
popa
pusha
dec
sub
mov
cmpsl
mov
in
xchg
dec
pop
dec
add
loope
dec
jge
mov
mov
out
pop
jmp
xor
pop
lods
fcoml
sti
popa
pop
out
add
xor
inc
movsb
cmc
aad
sbb
cld
inc
push
pop
das
inc
cs
mov
jae
xor
fcomp
pop
xor
add
scas
cmp
out
imul
leave
sub
sbb
and
sub
sub
stos
cltd
lea
mov
loop
jle
mov
mov
pusha
shl
scas
sub
sbb
notb
scas
scas
mov
insl
jne
jg
sbb
cltd
int
dec
repnz
xchg
jns
push
and
mov
das
dec
fdivs
dec
std
sub
adc
aad
subl
jno
orl
rorb
jge
clc
add
pop
mov
mov
fwait
and
js
loope
subl
push
push
movsb
das
mov
les
repz
or
scas
pop
por
movsl
and
pusha
dec
sub
popa
incl
clc
out
lock
out
call
and
adcb
pop
dec
mov
aam
rclb
fwait
cs
insb
sbb
out
sub
xor
imul
sti
dec
mov
and
fnstenv
aas
in
stos
outsb
xchg
cmp
mov
ljmp
ret
repnz
popf
and
sahf
pop
stos
sbb
sub
ret
adc
push
jl
inc
adc
dec
pop
fisttpl
incb
cmpsl
add
push
int3
sahf
dec
xor
cmpb
pop
imul
stc
inc
or
ja
pop
bound
lds
jle
jp
call
dec
imul
xor
test
repz
dec
stos
cli
test
lock
inc
or
push
cmp
cmpsl
dec
xchg
dec
dec
mov
and
andl
dec
xchg
mov
pusha
mov
sub
push
insl
mov
xchg
pop
out
dec
stc
nop
paddusb
adc
aad
and
push
sbb
movsl
or
pop
sub
sbb
addr16
add
and
bound
data16
nop
cli
xor
xorl
ja
cmp
pop
sbb
sbb
adc
lea
imul
add
cmp
scas
dec
jl
pop
push
mov
xchg
mov
cmpl
fnstcw
add
push
xor
and
data16
sub
out
xchg
inc
jl
dec
cmc
mov
adc
xchg
or
insb
sbbl
ds
or
mov
jmp
mov
cld
outsb
or
mov
sti
lock
ljmp
lods
sub
adc
sbb
outsl
pop
popa
sub
mov
mov
mov
mov
in
lds
mov
push
lcall
arpl
das
sbb
pop
push
sahf
loope
popa
inc
sbb
and
js
shll
stc
popf
xor
cs
cli
xchg
jnp
leave
and
dec
cld
adc
and
stc
push
xor
scas
jp
jg
add
push
cltd
mov
push
rcrl
sbb
sub
mov
test
or
ror
and
jmp
sub
les
pop
loope
mov
mov
add
cmc
loope
jns
mov
scas
cmc
lock
and
scas
lret
and
cmp
mov
or
aaa
push
je
insl
shl
and
imul
mov
out
loopne
je,pt
jns
sub
xor
aas
mov
cmp
mov
xchg
or
sbb
mov
pop
in
es
sbb
or
jae
mov
jbe
shlb
jae
ffree
push
loopne
lods
cld
test
mov
sahf
and
and
pop
cmpsl
ror
cmp
xchg
in
addr16
jecxz
fwait
push
mov
cmp
nop
add
dec
mov
lcall
mov
inc
outsb
or
lds
sbb
mov
jmp
dec
add
xchg
dec
sub
mov
jbe
incl
mov
inc
mov
testl
daa
xor
into
pop
pop
xchg
outsb
aaa
rorl
stc
mov
cli
inc
jg
mov
xor
pusha
cmc
test
subl
push
nop
xchg
and
cwtl
sbb
xchg
icebp
inc
and
pop
sbb
cmp
jge
incl
scas
andl
sbb
pop
shlb
mov
mov
mov
test
aaa
dec
and
das
faddl
or
mov
mov
pushf
mov
sbb
fstps
cmp
repnz
dec
repnz
xor
xchg
dec
lret
sub
pop
popf
clc
sub
lea
and
mov
lods
mov
cmpb
cmp
std
inc
mov
test
jb
shll
orb
lret
scas
imul
std
mov
inc
stc
jns
test
insb
dec
lcall
stos
jae
ficoms
sub
push
mov
and
xlat
clc
inc
in
jne
or
mov
inc
push
popa
inc
ss
fildll
imul
mov
cltd
sti
sub
or
gs
enter
mov
stos
pop
xor
int
addb
add
or
dec
mov
stos
or
popf
jg
test
push
xor
xchg
push
mov
int3
cwtl
pushf
xor
mov
popa
pop
cmpsl
inc
jge
fisubl
sti
cmp
jge
sub
cmp
fwait
in
push
inc
js
lcall
bound
jno
xor
daa
outsb
outsb
push
mov
push
movsb
jbe
push
xor
aaa
icebp
cld
in
inc
adc
sub
sbb
ds
jl
mov
xchg
gs
jb
into
and
jg
test
ret
lret
pusha
hlt
add
mov
dec
mov
xor
leave
hlt
insb
and
inc
aaa
pop
jmp
xor
fdivrs
sub
shrb
xorb
test
sub
daa
aad
mov
mov
sub
dec
push
adc
lret
rol
test
ficoms
out
insb
inc
pop
imul
jmp
mov
lods
mov
es
lret
adc
jnp
rcrb
add
movsb
jns
jbe
adc
or
lcall
fdivp
xor
mov
dec
inc
mov
data16
and
add
rol
add
and
decl
jno
arpl
adc
addl
inc
pop
xchg
aaa
out
sahf
das
sub
dec
mov
mov
enter
mov
sar
jmp
xor
fmuls
jp
aaa
pop
cmp
sub
xor
lock
mov
mov
push
lcall
bound
roll
sbb
and
out
sub
ret
inc
sahf
jmp
push
outsb
enter
ljmp
lcall
pushf
sbb
insl
xor
mov
add
das
outsl
jnp
xchg
or
xlat
cmp
mov
aaa
pop
cmp
fwait
sti
and
test
xorl
push
pushf
dec
xchg
jae
ret
jl
daa
jns
gs
push
pop
sub
or
lea
cmp
xchg
xchg
lret
jo
push
xlat
jmp
repz
pop
push
cmc
stos
ror
cmp
jb
pop
push
push
xor
lret
jae
or
pop
add
sub
pop
popf
pop
testl
arpl
inc
bound
test
jmp
out
mov
sub
ljmp
cmp
adc
and
call
xchg
pop
mov
cmp
in
test
test
sbb
outsb
je
fcmovnbe
ja
sbb
xchg
mov
or
xchg
xor
xor
push
xchg
jne
pop
iret
mov
sbb
lds
jnp
insb
sbb
fistl
pop
ficoml
pop
stc
std
mov
xchg
jge
lock
jmp
pop
loope
xchg
dec
xchg
push
mov
bnd
push
pop
mov
xchg
mov
aas
into
lods
xor
mov
push
and
sub
inc
mov
cld
mov
pop
test
repz
cmpsl
and
mov
int
daa
push
andb
xor
mov
add
sar
xlat
stc
jp
int
or
aaa
xchg
pop
inc
out
std
movsl
xchg
jbe
subb
icebp
lahf
jmp
mov
mov
push
pop
or
sbb
mov
stos
in
mov
mov
adc
fs
addr16
cmp
aad
mov
pop
outsl
repnz
shll
and
pusha
sub
xlat
cmc
xor
and
test
xchg
push
xor
insl
jnp
pop
pop
jl
loopne
jle
cmpsl
mov
dec
repnz
jae
lock
je
push
cmp
loop
ret
sbb
pop
mov
icebp
push
out
mov
jae
mov
andb
xor
jg
mov
inc
incl
jb
outsb
pop
fsts
ja
push
test
xchg
je
movsb
scas
pusha
movsl
jle
pop
xor
aam
enter
sbb
fsubrl
or
sbb
sub
popa
in
outsb
xchg
add
pop
push
xor
xchg
mov
test
rcrl
adc
mov
or
fwait
pop
xor
int
in
cmp
mov
push
int3
xor
push
mov
aaa
sub
push
pop
nop
je
jae
adc
fnsave
or
mov
cmpsl
enter
mov
xchg
inc
roll
fsubs
fldcw
aam
aad
jp
popa
add
xchg
enter
push
dec
sub
cmp
repnz
xor
push
addr16
out
adc
sub
pop
inc
mov
add
xor
mov
push
in
sbb
ror
sbbb
jmp
push
pop
xor
and
fisttpl
sahf
js
mov
mov
dec
push
je
push
jne
iret
xchg
call
sub
into
push
add
loopne
adc
xor
pop
icebp
adcl
jge
in
in
cwtl
in
inc
iret
mov
dec
testl
jae
out
jns
sbb
test
bound
call
push
xor
roll
fdivrp
lea
cmp
sbb
xchg
sub
mov
or
jno
and
loope
sbb
loopne
lahf
xchg
movsb
sarl
xlat
pop
dec
roll
stc
mov
js
xlat
adc
imul
xchg
xor
insb
movsl
sub
fstps
lret
xor
leave
jmp
lea
gs
daa
xchg
aam
fs
ds
dec
test
pop
lea
xchg
aaa
jmp
hlt
rorb
and
sbb
div
mov
jns
mov
pop
xor
mov
and
ret
adc
dec
shrb
and
pop
popa
sub
jbe
aaa
test
hlt
in
das
push
sbb
mov
popf
jne
popf
mov
push
inc
jo
fcomps
in
inc
imul
int
mov
adc
push
inc
iret
test
xor
dec
dec
gs
divl
mov
imul
aas
out
xlat
inc
mov
lret
into
cmp
sbb
mov
in
sarb
movb
pop
lahf
sbb
mov
sbb
fcomi
lret
ret
push
lods
jmp
out
enter
xor
pop
das
pop
sub
sahf
xchg
out
leave
loopne
lret
in
repnz
sbb
mov
mov
je
fnsave
loope
mov
adc
jnp
fmuls
mov
cmc
repnz
jb
push
add
pop
jge
xor
xchg
jae
jge
out
mov
dec
mov
cwtl
mov
aas
dec
jg
adc
dec
xor
add
shlb
call
jb
fs
dec
mov
and
outsl
lock
sub
jecxz
pop
mov
int3
xchg
lahf
sbb
push
pop
jno
movsl
lcall
sub
cmpsb
outsl
adc
pop
imul
push
movsl
sbb
push
dec
int
dec
cmp
or
mov
or
jge
js
mov
xchg
cs
pop
scas
fistpll
ljmp
rolb
mov
addb
mov
pop
mov
loop
mov
inc
push
in
add
xchg
and
out
ja
ret
mov
cli
dec
int
in
push
out
inc
cwtl
cmc
xor
xchg
mov
push
mov
push
inc
sub
lods
sub
jne
addr16
push
push
xor
jmp
mov
and
or
pop
test
sub
shrb
dec
outsl
jb
sbb
push
pop
outsl
loop
push
mov
nop
jp
mov
sub
lahf
mov
popf
sbb
and
clc
test
repz
sahf
sarb
out
loop
jg
push
loopne
cmp
leave
shll
fildll
call
dec
clc
sti
cmp
or
inc
add
movsl
add
lds
jbe
jns
popa
dec
and
mov
pop
mov
cli
sbb
lcall
lcall
ds
fcmovbe
ret
dec
push
inc
fdivs
lods
lds
in
cmpsb
mov
xchg
pop
xor
push
jmp
std
aad
clc
sbb
push
ss
jecxz
repz
jae
nop
jmp
adc
jae
rcr
mov
mov
xlat
pop
sarl
cmp
and
mov
fucompp
das
cmp
sarb
xor
mov
repnz
lds
mov
addb
shll
ret
leave
mov
or
xchg
rcl
inc
inc
pop
call
insl
push
dec
aad
jbe
out
nop
cmp
rolb
pop
cmp
testl
adc
in
jle
pushf
adc
add
inc
jnp
sub
adc
aad
sbb
movsb
inc
xchg
jne
aaa
sub
dec
out
out
testb
daa
sub
cmpl
sub
bound
out
cmp
insb
sti
mov
cmp
add
jmp
or
adc
leave
and
int
push
fists
std
mov
cmp
popf
out
iret
call
ljmp
daa
ds
insb
sbb
sti
jae
sbb
cld
hlt
xchg
jne
mov
and
adc
push
cmp
dec
fdivr
pop
popf
andl
mov
popa
cmp
jmp
jo
jecxz
ds
cmp
jo
cmp
fisttps
lcall
cwtl
mov
jle
cld
ja
sbb
test
in
inc
stc
imul
inc
pop
pushf
dec
cmp
jne
push
adc
insl
repnz
fdivl
mov
inc
push
inc
jl
cs
cli
sub
mov
push
scas
cli
int
pushl
clc
cmpsb
out
js
cmp
das
xchg
les
mov
mov
sbb
push
cs
xchg
and
fstl
push
mov
jle
sti
mov
and
push
inc
test
mov
fstpl
add
pop
sbb
iret
ret
sub
loop
and
leave
xchg
sub
sbb
or
inc
and
adc
pop
fdivrl
xchg
sti
ret
rclb
popa
mov
or
pop
pop
and
cli
cmp
cmp
pop
sub
mov
fs
mov
and
mov
xchg
ret
sbb
jle
add
punpckldq
incb
test
cmp
popf
xor
cltd
push
xchg
outsb
lea
push
adc
fimuls
push
mov
imul
add
add
jle
adc
xchg
ja
or
loop
mov
xor
ja
nop
and
push
jle
sbbb
sub
orb
and
mov
xchg
fnstsw
adc
dec
xor
mov
adc
cmc
xchg
mov
imul
inc
xor
or
mov
cli
fidivrs
cmpb
ljmp
ret
lcall
arpl
out
insl
xchg
xchg
cmp
pop
jg
xor
mov
mov
or
adc
and
sarl
sbb
les
mov
ret
fidivrl
mov
enter
cmp
xlat
mov
sbb
outsb
adc
xchg
sub
fdiv
clc
mov
aaa
pop
cld
mov
lahf
test
sub
cmpb
mov
mov
or
add
push
mov
jg
lds
in
ja
add
pop
insl
lcall
add
jno
dec
mov
lds
cmp
cmpsb
add
in
stc
push
ret
cmp
inc
mov
jno
sub
stc
jno
lcall
pushf
xchg
or
movsl
sahf
push
loope
ds
loope
aad
out
aam
repz
insb
cmpsl
pop
fcom
pusha
mov
out
xor
adc
testl
out
sarb
mov
test
sub
jno
mov
and
dec
push
jnp
jmp
adc
aad
test
push
pop
xchg
leave
repz
jmp
das
xor
lds
mov
xchg
repnz
test
mov
les
loopne
shrb
add
in
jle
sub
test
mov
and
pushf
jae
fdiv
nop
or
repz
lahf
in
xchg
and
jnp
dec
mov
mov
rorl
xchg
lret
mov
iret
xchg
shll
loopne
sbb
cmpsb
sbbb
inc
pop
jl
fsubs
pop
inc
xchg
ret
out
push
ljmp
hlt
inc
push
jl
sub
iret
xchg
mov
or
stos
pop
lea
pusha
in
xchg
sub
xor
in
lds
clc
xchg
aaa
int
push
movsl
mov
mov
aam
push
adc
mov
cmpsb
inc
jbe
daa
add
xor
call
push
inc
jge
loop
jo
sbb
pop
pushf
dec
xchg
scas
fisubl
inc
xor
push
stos
adc
cwtl
inc
mov
adc
jecxz
push
icebp
pop
dec
jp
cltd
inc
decb
bound
subl
inc
into
pushaw
xchg
fnstsw
mov
push
shlb
push
sub
shrb
fcmove
cmp
loope
jp
fidivrl
dec
out
dec
mov
sbb
nop
roll
dec
into
and
xor
jmp
xchg
cs
ss
cmpsl
lds
xor
clc
or
push
andb
es
or
push
es
pusha
add
pop
xchg
shr
jnp
les
or
pop
cld
cmp
mov
out
mov
movsb
cmp
jecxz
xchg
or
call
mov
imul
movl
sub
popa
xchg
popa
or
test
sbb
ret
and
dec
push
std
loopne
jp
xchg
pop
push
cmpsl
pop
in
push
adc
insb
rcl
bound
data16
lods
lock
addr16
repz
xor
imul
es
inc
mov
leave
stos
repz
cli
out
les
push
aaa
sahf
dec
mov
xchg
adc
test
pop
int3
xchg
cmpsl
push
or
xor
iret
jge
push
inc
cmp
xchg
data16
stc
jmp
jbe
inc
pushf
out
in
test
jecxz
jle
sub
jne
pop
and
loopne
pop
ret
daa
mov
inc
jge
loopne
inc
ret
movsl
add
mov
pop
ss
mov
pushf
sub
sbb
lret
mov
mov
or
mov
mov
pop
mulb
xor
fadds
push
dec
mov
fs
incl
mov
fisttps
xor
xor
inc
addr16
aam
ret
shlb
test
sbb
adc
push
ret
fidivs
sbb
push
das
xchg
inc
xor
inc
imul
sbb
fcmovnb
push
mov
stos
aam
lods
rorl
jmp
mov
xlat
test
leave
or
push
add
xchg
rcll
sbb
out
mov
sub
mov
mov
addr16
stos
test
adc
jno
sti
mov
jp
push
push
push
sub
mov
inc
mov
insl
cmp
dec
in
aaa
arpl
mov
mov
aas
in
or
cmp
pop
and
jl
jmp
dec
xchg
pop
cs
sub
mov
pop
incl
or
call
fs
addr16
push
cmp
or
inc
je
inc
addr16
leave
rolb
fcomip
inc
sbb
xchg
mov
lods
dec
fmul
fcompl
sub
inc
mov
push
adc
jg
inc
sbb
xchg
je
dec
inc
sbb
lods
push
outsl
mov
xor
shl
dec
fsubrl
movsb
jecxz
adc
lods
orb
call
mov
es
add
testl
ds
mov
lods
lret
and
out
push
imul
shrb
out
or
xchg
pop
sbb
loopne
mov
cmp
outsl
dec
dec
mov
out
jecxz
jmp
mov
jno
pop
and
adc
in
cmpsl
inc
or
pop
mov
movsl
sub
push
and
mov
xchg
iret
sub
cmpsb
mov
mov
and
lds
xchg
test
and
jmp
push
out
mov
repz
loope
adc
lods
mov
xchg
cwtl
sub
xor
daa
fs
jge
orb
sub
movsl
mov
int
fiadds
rolb
js
mov
push
test
mov
mov
dec
mov
dec
mov
mov
sbb
lods
movsb
call
and
jp
push
fcmovb
xchg
out
mov
aaa
jno
mov
mov
pop
aam
jle
inc
fsts
fimuls
arpl
mov
add
rep
mov
cltd
xor
mov
sbb
inc
inc
mov
orl
test
orl
clc
and
jle
fxam
sbb
or
data16
mov
push
insl
jmp
xchg
mov
sahf
sahf
push
sub
and
and
rcr
nop
js
stos
sarb
sub
jnp
jg
sub
mov
pop
into
mov
or
jno
lods
fmull
into
lods
les
push
adc
xlat
arpl
movsl
popa
data16
cltd
pop
jmp
mov
sarb
push
aaa
sarl
stos
add
stc
rcrl
mov
or
jae
pop
fwait
stos
pop
adc
daa
jge
nop
cltd
psubsw
fwait
adc
sub
sub
out
shlb
out
mov
lea
xchg
and
outsb
push
push
shrb
in
je
fs
jmp
pop
out
ror
sbb
popf
outsl
lods
xor
or
xorb
loopne
sbb
mov
inc
sub
mov
iret
imul
add
sub
add
pushf
xchg
xchg
int3
cmp
mov
sub
sbb
daa
cmp
lcall
incl
xchg
xchg
repz
lock
mov
scas
dec
xchg
in
inc
stos
xor
filds
pushl
xchg
shlb
mov
jns
popa
scas
ret
js
dec
scas
insb
push
gs
outsl
ljmp
in
aad
cmpsb
data16
dec
mov
or
les
jae
out
ror
or
mov
sti
mov
cmp
or
or
push
adc
das
sar
or
out
push
xchg
push
mov
rorl
icebp
fmull
sti
andl
adc
aam
mov
daa
daa
popl
mov
daa
mov
stos
jecxz
les
jl
xor
sub
push
push
mov
das
loopne
arpl
int3
dec
xchg
repnz
mov
cmp
xchg
int
jecxz
jo
sti
xchg
sub
inc
sbb
movsl
cwtl
dec
jle
dec
fwait
hlt
and
lcall
sbb
mov
sbb
popa
jo
add
pop
inc
sti
jns
ss
sbb
pop
jnp
xor
sbb
test
clc
mov
rcll
mov
cmp
aaa
jp
or
add
dec
gs
pop
push
cli
add
fdivrp
js
dec
or
ja
and
mov
movsb
scas
add
pop
ds
ret
ljmp
in
sahf
daa
xchg
mov
ljmp
jle
shl
cmp
mov
pop
or
out
xor
pusha
sbb
fldcw
jb
je
push
daa
push
fs
pop
sti
loop
sub
jbe
push
popf
daa
cs
je
add
and
test
push
lea
cmova
ja
icebp
test
insl
inc
xorl
xchg
add
and
aaa
and
jo
xchg
movq
in
xchg
arpl
push
imul
sbb
or
adc
enter
stc
scas
daa
fdivrl
mov
inc
mov
jb
lds
add
std
mov
jne
push
cmp
in
lahf
out
xchg
mov
pushf
or
lea
add
jo
jnp
add
mov
cmp
mov
push
fmuls
jp
jns
arpl
add
cmpsb
in
mov
jno
jl
dec
jne
mov
mov
mov
jne
pop
mov
subl
aas
fistpl
xor
adc
inc
pop
mov
outsl
jmp
cmp
cmp
aad
mov
mov
shll
xchg
add
add
jnp
into
aas
push
insb
xchg
push
or
ficomps
sti
xor
xchg
fcoms
xchg
adc
push
div
add
pop
divl
rol
ret
mov
scas
leave
mov
inc
cli
push
std
outsb
inc
mov
flds
sub
fbld
mov
dec
ss
shl
inc
mov
or
pop
inc
loopne
and
or
sbb
int3
inc
mov
sub
pop
movsl
jp
pop
dec
xchg
xchg
and
and
ja
jae
xor
cmpsl
gs
mov
mov
mov
outsb
adc
out
lret
add
insb
cmp
mov
or
jae
mov
mov
jp
dec
pop
mov
xchg
push
sub
mov
loop
xchg
arpl
jae
cs
and
aad
rcll
dec
inc
stc
push
sub
sub
ds
je
lea
sti
enter
xor
std
imull
jecxz
cmp
and
out
cwtl
add
stc
inc
sar
loope
sub
mov
adc
cmp
shll
mov
mov
push
mov
push
jge
bound
mov
das
cli
les
sbb
xchg
push
dec
xlat
jns
xchg
sub
xor
xchg
mov
and
mov
in
mov
scas
inc
lock
mov
cmp
outsl
popa
nop
mov
lcall
scas
gs
fs
or
adc
lcall
or
test
jg
cmp
loope
xchg
push
in
pop
in
sub
addr16
aaa
pushf
pop
mov
pop
rorl
bound
fwait
mov
and
adc
xchg
test
push
jne
outsl
orl
mov
add
loop
loopne
sbb
adc
xor
rolb
ljmp
stc
aas
lods
xchg
fdivl
push
cmp
push
pop
out
and
mov
cmpsl
mov
aad
sub
aas
push
leave
neg
sbbb
xor
scas
mov
ss
aad
scas
push
insb
inc
and
dec
mov
lcall
or
mov
in
add
xor
lock
lds
push
frstor
out
xor
fbld
outsb
push
mov
lret
cmc
in
aad
loopne
add
xchg
insb
mov
add
jne
dec
shll
dec
push
incb
sti
es
adc
cmp
jle
in
adc
xor
xchg
sbb
shr
pop
mov
dec
js
add
dec
pop
shll
jbe
div
lock
pop
pushf
inc
inc
inc
es
je
cmp
sub
push
loope
sahf
pop
pop
mov
jnp
mov
add
imul
and
repz
adc
lahf
mov
mov
xor
int
pop
inc
fcomp
dec
movsl
mov
test
movsl
xor
stc
and
push
or
imul
jge
mov
and
or
xchg
and
xchg
in
push
mov
jae
rorl
jb
lods
shlb
mov
mov
ljmp
jmp
and
pop
iret
xor
and
call
aad
aam
mov
xchg
pop
test
mov
adc
and
dec
or
lods
adcb
jb
cmc
mov
mov
std
out
sub
push
les
push
jge
rcl
sbb
es
hlt
fisttpl
daa
mov
adc
push
inc
roll
repz
decb
lret
or
cld
mov
mov
movb
and
sbb
sbb
fiaddl
push
and
shr
fs
xchg
xchg
jbe
push
scas
sahf
adc
pop
mov
insb
inc
jmp
fstps
movsl
mov
xchg
imul
subl
insb
testl
popf
pop
rorl
insl
insb
popa
fwait
xlat
iret
pop
xchg
into
lret
ret
mov
sub
pushf
repz
xorps
ficompl
fisttpl
jb
enter
ret
mov
and
jns
loopne
mov
outsl
sbb
jl
test
andl
fldl
push
ret
repz
sub
fmulp
jecxz
xchg
pop
test
mov
stos
arpl
sbb
xor
repz
jge
dec
fwait
fs
ljmp
movsb
fiadds
cmp
push
and
or
dec
dec
rcll
clc
xor
or
loopne
cs
and
cmpsb
icebp
mov
and
push
popf
aam
xchg
pop
test
mov
lock
fs
sarb
mov
push
mov
xor
sub
dec
sub
inc
sub
dec
xor
or
mov
or
adc
cmp
mov
mov
sahf
inc
sub
mov
test
xor
adc
jo
fwait
imul
enter
mul
fs
rcll
cmp
clc
push
xchg
jns
push
dec
push
adc
push
pusha
ror
sub
inc
fdivs
and
mov
adc
jae
lcall
inc
test
jb
ret
pop
das
inc
and
xchg
push
in
aam
lods
aas
xchg
mov
in
imul
addl
jb
js
dec
xchg
xchg
ljmp
stc
das
shll
cmp
mov
adc
icebp
lret
or
arpl
lcall
shrl
imul
stos
rcrb
cmpsl
mov
xor
and
mulb
mov
mov
dec
mov
mov
sub
jl
pusha
cmc
aas
imul
dec
pusha
aad
xlat
int
mov
pop
lret
sub
subb
in
push
loop
js
lods
cmc
add
mov
pop
pop
dec
dec
xchg
fisubrl
and
pop
dec
pop
sub
inc
test
dec
out
daa
jns
and
cmp
sarb
sub
mov
sub
decb
fucomip
mov
sub
daa
and
dec
push
pop
jp
imul
xchg
imulb
or
rorl
mov
push
jle
cmp
adc
cmp
sbb
lods
lock
sahf
or
dec
sub
mov
xor
mov
movsb
dec
pop
xchg
orl
hlt
mov
enter
xor
nop
cmp
cmpsl
sti
cmpsl
push
jge
dec
leave
fldlg2
sti
arpl
dec
lods
fidivrl
or
outsb
add
cmp
and
in
push
xchg
jecxz
jecxz
pushf
arpl
clc
fs
and
xor
les
pop
icebp
xchg
leave
inc
mov
dec
test
mov
fs
or
lods
scas
ss
jne
clc
inc
fidivl
sub
mov
jmp
push
inc
loope
mov
movsb
pop
gs
xchg
inc
sbb
sub
xor
or
pop
and
imul
inc
mov
mov
in
inc
mov
mov
lea
mov
inc
into
cs
sti
aas
mov
xor
pop
add
addl
rcll
repz
mov
insl
iret
sbb
mov
lods
mov
sarb
dec
add
decb
iret
mov
xor
jmp
lods
pop
imul
add
push
xchg
inc
mov
mov
lret
sti
mov
lret
hlt
loopne
xchg
imul
jle
movsl
push
sub
loop
sub
mov
outsl
cmpl
dec
loopne
dec
mov
cld
xchg
cmpsl
cmpsl
cli
mov
insb
in
mov
jno
inc
lret
bound
cmpsl
mov
das
cld
fimuls
jbe
xor
xlat
jle
cltd
int
stc
mov
out
sub
pop
iret
xorb
mov
mov
sti
movsl
mov
ds
int3
jae
jl
add
xchg
and
iret
aaa
pop
test
stc
in
sub
xchg
test
sub
clc
idivb
mov
movsb
sub
test
inc
popa
test
xor
dec
shr
rcll
and
push
andb
cmp
push
pop
rsm
sbb
xchg
pop
mov
jg
cmpsl
xor
jmp
jb
in
push
add
xchg
ffree
mov
adc
dec
push
mov
fcoml
dec
add
pop
inc
and
test
sub
daa
rcrb
pop
push
sarl
mov
xchg
mov
add
mov
xchg
xchg
adc
orl
or
cmpsb
fwait
lcall
jne
pop
add
mov
mov
pop
mov
testb
jne
inc
test
sbb
insl
in
jmp
push
ret
add
fists
rcll
int3
in
add
cwtl
subl
sti
cld
inc
sbb
inc
shll
shrl
shrb
hlt
pop
pop
sub
and
and
dec
xchg
jl
or
pop
xchg
out
inc
in
push
js
mov
bound
jl
roll
adc
out
mov
mov
dec
dec
leave
ret
or
lock
in
pop
push
mov
adc
leave
inc
fst
outsb
test
sbb
imul
adc
pop
sub
mov
repnz
xchg
pop
xlat
cld
pop
lock
aad
and
pop
mov
xchg
dec
hlt
aaa
pop
add
and
dec
out
push
fmuls
repz
test
call
dec
adc
add
jbe
ret
gs
fbstp
or
imul
push
enter
je
lcall
push
xchg
mov
insb
pop
sub
int
mov
mov
pop
inc
fsubl
es
outsl
stc
mov
jl
int
push
adc
mov
push
ror
hlt
or
jecxz
jne
cs
push
mov
cmp
add
pop
shrl
push
mov
or
popa
out
adc
push
test
xor
inc
pop
fstpl
adc
push
sub
int3
mov
xchg
cld
or
iret
push
xchg
xchg
shll
je
inc
shlb
jmp
sub
cmpsl
leave
adc
push
pop
sub
shlb
cwtl
pop
shll
jecxz
xlat
out
mov
xor
cmp
subl
and
sar
push
push
jl
clc
sub
adc
xchg
pop
or
mov
sub
jnp
inc
jg
fnstcw
mov
sub
sbb
or
xchg
outsb
int3
int3
and
cli
inc
insb
out
stos
ret
pop
xor
cmp
insl
das
cltd
icebp
push
out
mov
movsl
cmpb
repz
sbb
pop
shll
fbstp
add
adc
mov
dec
sub
xor
mov
js
enter
push
mov
sbb
add
jne
sahf
push
scas
es
xor
push
pop
int
or
and
shrb
add
xor
xchg
cmpsb
cmpsl
sarb
and
aaa
sub
xor
adc
outsb
push
xchg
int
shll
popf
push
ljmp
fsubl
insb
insb
sub
mov
adc
out
push
cmp
out
mov
xchg
cwtl
mov
push
hlt
aaa
sub
dec
bnd
or
pop
cmp
lahf
sbb
xchg
mov
xchg
jecxz
xor
mov
xor
xchg
inc
int
fdivrl
jbe
xor
pop
inc
orl
dec
xchg
adc
hlt
or
or
xchg
lret
test
xchg
lret
add
cli
lret
pop
out
inc
inc
add
iret
shlb
je
scas
push
in
sarl
push
fidivl
dec
adc
inc
out
xor
sbb
lret
cmp
cmp
push
adc
or
xchg
loop
ror
fcmovb
pop
aaa
bound
xor
aaa
ret
mov
sub
adc
mov
iret
and
push
pop
xor
pop
cmc
or
mov
int3
aam
loop
fdivs
cmpb
pop
shlb
lods
jl
jmp
fisubl
push
xchg
bound
dec
leave
mov
lret
mull
and
fadds
sbb
mov
sbb
push
lea
and
sbb
ss
push
jle
push
xchg
test
shll
cmpsb
and
les
pushf
ret
sub
rcr
mov
testb
std
jecxz
sti
in
out
jmp
lret
mov
jae
mov
test
adcb
xchg
dec
ja
mov
inc
out
lds
out
test
mov
xchg
pop
lods
sbb
sbb
adcl
shlb
and
test
dec
xchg
stos
insl
sbb
adc
lret
sahf
insb
lahf
xchg
scas
pop
popa
fs
adc
stos
and
mov
mov
jl
mov
and
pop
divb
lret
fwait
sub
mov
dec
or
fimuls
dec
scas
sbbb
icebp
mov
pop
int
stos
adc
loopne
lock
mov
repz
sahf
ja
sub
jg
mov
fcoms
or
mov
mov
add
outsl
ficoml
lock
jp
stos
push
test
or
imul
sub
leave
mov
and
addb
and
mov
mov
cmpsb
enter
pop
cld
mov
dec
shr
fsubrl
addr16
adcl
cmpsl
rolb
and
inc
int
stos
imul
rol
in
and
nop
cltd
std
cli
pop
sub
das
xor
add
inc
ljmp
in
xor
mov
jle
insl
je
test
adc
out
loope
pushf
int
aam
sti
xchg
mov
mov
ds
xor
arpl
inc
xchg
stos
mov
mov
mov
add
insl
xor
gs
cmp
inc
insb
mov
jl
push
mov
push
int
sbb
mov
push
cltd
inc
sub
scas
xchg
jo
pop
mov
rclb
jg
fsubp
in
push
and
jmp
mov
ja
cld
loop
lahf
movsb
call
call
and
sub
mov
roll
jecxz
icebp
loope
lret
xchg
jb
addr16
js
lret
loop
mov
and
jns
push
cmp
popa
frstor
cli
add
push
add
aad
push
or
or
out
repnz
dec
sbb
inc
cmp
stc
ret
stos
ret
and
mov
mov
and
outsb
cmpsl
jp
cmp
test
into
xchg
loopne
pop
int
outsl
sub
dec
pop
cmp
jge
mov
mov
mov
notl
cmpsl
fistpl
das
sub
adc
cmp
sub
sbb
ret
fcmovnu
mov
jl
and
icebp
jb
pop
dec
ja
pop
mov
sahf
loope
mov
and
insb
lcall
ds
sarb
cmpsb
push
jle
ret
cmp
inc
repnz
pop
incl
cmp
fidivrl
jne
mov
mov
jae
loop
pop
sbb
xor
shll
aaa
sub
cwtl
call
lret
pop
jnp
loope
push
or
adc
lds
pop
mov
dec
mov
mov
rolb
mov
cmpsb
orl
mov
daa
in
or
imul
add
cmc
inc
dec
or
hlt
testb
jno
out
pop
loopne
insb
daa
pop
mov
xchg
andl
jo
fsubrs
sbb
adc
mov
xlat
fs
idivb
adc
cmp
data16
cld
loopne
jp
stos
dec
out
sub
stos
mov
mov
cltd
int3
pop
lock
xor
ret
out
mov
or
push
frstpm(287
pop
xchg
lcall
hlt
sbb
addr16
out
and
xor
les
xor
xchg
hlt
cmp
in
outsb
adc
mov
add
out
jle
jp
test
push
and
inc
xchg
setns
sub
shll
cmp
cmc
dec
sahf
mov
fists
sub
jge
fadds
popa
xchg
jne
xchg
xchg
mov
push
lcall
mov
sub
mov
int3
jl
push
inc
int
iret
test
dec
stos
xor
push
adc
pop
mov
mov
call
mov
push
inc
mov
test
lret
ss
push
cmc
les
inc
loopne
fmul
xchg
jne
lret
outsb
jl
or
ds
sbbl
add
arpl
in
mov
pushf
fsts
jbe
mov
dec
insb
int
push
aad
sub
mov
pop
lcall
int3
lods
mov
xchg
pop
rorb
adc
mov
adc
or
xchg
push
inc
mov
sbb
cmp
mov
adc
les
mov
or
stos
fwait
sub
jecxz
cmpl
xor
jl
fdiv
jns
or
mov
idivb
ljmp
js
outsb
cmp
test
arpl
xor
out
jp
adc
jae
stc
and
adc
jo
movsb
addb
mov
sbb
and
sbb
xlat
mov
out
imul
sbb
fs
aaa
pop
in
test
push
sub
and
inc
jnp
xor
ret
sub
lret
xor
adc
mov
mov
test
or
mov
and
ret
cmp
mov
pusha
adc
mov
inc
xor
sbb
mov
xchg
xchg
ja
cmpsb
movsb
into
and
andb
dec
xchg
sub
sub
dec
sarl
sahf
sub
and
popa
jns
int
cli
imul
xor
loope
xchg
sbb
xor
or
inc
inc
cmp
mov
and
push
incl
adc
sbb
pop
push
sbb
scas
test
and
xchg
shrb
pop
insl
mov
cmpsb
mov
mov
sbb
xor
xchg
fdivrs
test
in
ss
pop
push
lret
xchg
sbb
in
subl
int
ljmp
mov
cmc
stos
pop
and
push
sbb
ficoms
mov
pop
xor
ja
dec
fadds
or
cmp
addl
jl
adc
adc
dec
fidivs
inc
repz
or
sub
out
jnp
stos
and
cld
lea
push
push
mov
mov
jl
lret
popa
das
sub
jmp
or
mov
call
outsb
xrelease
rolb
cltd
dec
pop
icebp
popa
out
icebp
mov
adc
ds
adc
xor
imul
sub
adc
sub
dec
lret
jecxz
insl
mov
xchg
nop
mov
out
clc
sbb
jns,pt
mov
out
xor
punpcklbw
outsb
mov
dec
cmc
mov
pop
and
push
cmp
lahf
mov
sbb
cmp
pop
pop
in
mov
pop
inc
mov
lret
loopne
jle
xchg
push
loopne
push
bound
lock
pop
push
xchg
push
cmp
inc
ss
filds
cmp
jae
setbe
xchg
popf
jae
xchg
ret
add
cmp
ja
jecxz
jnp
cmpsb
cltd
inc
mov
sbb
leave
and
cmp
fnsave
loopne
pop
rclb
jno
call
bound
push
jp
push
bound
sbb
sbb
shrb
sub
mov
data16
cmpsb
popa
test
je
out
dec
das
pop
push
movsl
jl
push
add
ds
sub
mov
jecxz
je
stos
xor
dec
ljmp
and
es
adc
pop
ret
mov
fsub
jb
jle
add
or
lret
or
sti
push
adc
push
push
cmp
adc
test
sub
push
mov
mov
mov
add
mov
scas
sti
cmpsb
inc
aad
cmp
push
inc
je
loopne
repz
cld
xor
or
mov
lods
loopne
call
int
pop
pushf
idivl
out
xchg
inc
int3
add
test
mov
sbbb
adc
push
arpl
sbb
push
cmc
fs
xchg
mov
xor
aam
divb
xchg
add
adc
jns
push
arpl
andb
in
xchg
mov
xchg
imul
xchg
adc
xchg
movsl
loopne
daa
cmp
xchg
sbb
mov
pop
bsf
add
adc
cmp
dec
xchg
sub
aas
data16
mov
or
xchg
loope
fisttps
fisubrs
mov
std
pop
jae
push
jne
xor
cmp
adc
dec
int3
sahf
jns
adc
mov
xchg
daa
mov
jp
mov
add
xor
jge
jmp
pcmpeqw
setb
loope
xchg
loopne
int
cmp
je
cmp
rcr
mov
dec
pop
into
aad
inc
sti
pushf
and
flds
jnp
xchg
cmpb
mov
lcall
pusha
and
fs
imul
dec
icebp
sub
cmp
clc
mov
loopne
ljmp
sbb
add
ljmp
das
aad
testl
mov
in
mov
in
dec
js
popf
stos
out
inc
loope
mov
add
fbstp
aad
div
jl
cld
shll
push
lahf
mov
nop
pusha
fbstp
mov
mov
cmp
mov
and
shl
push
add
mov
or
pop
bound
xor
mov
mov
sbb
add
out
jl
int
lcall
lea
dec
outsl
sarl
cmp
imul
dec
dec
or
jge
pop
jb
xchg
xchg
and
into
mov
jae
lds
cmpsb
rcrl
cmc
enter
pushf
mov
sub
sbb
dec
xor
xchg
aaa
cmp
in
scas
ss
aas
fistpll
push
in
push
test
pushf
mov
sbbl
inc
jg
mov
and
stos
test
add
pop
pop
insb
in
orl
cwtl
leave
jae
xor
stos
sub
fidivrs
adc
cmp
stos
rcrb
jmp
out
xchg
into
jb
adc
mov
xor
clc
dec
push
lods
sbb
int3
cli
jb
or
insb
loope
xchg
arpl
sbbl
sbb
dec
dec
repz
push
lahf
out
sub
aaa
or
inc
xchg
or
jl
aaa
addr16
pop
xor
adc
mov
xchg
push
cmp
cmpsl
aaa
movsl
sub
rcr
std
adc
nop
fisubl
int
sub
lea
jge
and
ja
ja
out
cmp
pop
mov
int
mov
ljmp
filds
mov
inc
lods
or
cmp
loop
add
ret
ja
sarl
test
aaa
push
mov
xchg
adc
adc
mov
jle
scas
cmp
mov
scas
sub
daa
xchg
cwtl
cmp
icebp
dec
sub
xchg
xor
lds
icebp
into
or
xchg
jns
psubsw
popa
jnp
mov
add
test
scas
xchg
fwait
sub
rolb
jge
mov
add
aad
cmp
inc
mov
leave
fldenv
fimull
ja
stc
xor
push
jp
xor
insl
stos
rcr
out
jmp
mov
sbb
pop
fldenv
rorl
insl
jle
ss
inc
cmpsb
pop
dec
mov
inc
or
popf
mov
test
and
jo
add
insb
es
stos
dec
lods
dec
push
push
aam
int3
rorl
push
fwait
hlt
lcall
lods
les
shl
pop
lods
orl
push
shlb
imul
cltd
iret
pop
xor
mov
scas
out
les
icebp
clc
out
jle
sub
sbb
mov
jp
mov
nop
loop
sub
fs
aaa
jne
xchg
push
jg
mov
out
test
add
cmpsl
sub
in
iret
inc
out
sbb
jb
in
outsl
mov
inc
outsl
xchg
mov
inc
fcomi
lcall
test
mov
clc
addr16
loop
insl
clc
movsl
mov
outsb
movsl
add
sbb
sti
lret
and
inc
adcl
jnp
andl
xchg
mov
pop
cmp
and
or
lret
inc
ljmp
loop
mov
mov
sbb
or
add
test
in
je
hlt
shl
cmp
mov
sbb
dec
lret
adc
test
mov
adc
jecxz
push
lret
inc
sbb
jmp
test
fiadds
movsb
mov
xor
insl
jae
out
xor
push
fists
test
fsts
jmp
lock
imul
pop
or
push
leave
enter
stos
aad
out
cmp
into
js
popf
daa
sbb
cltd
hlt
or
mov
loopne
xchg
adc
lcall
loope
xchg
mov
ds
lret
insl
jns
add
inc
out
lcall
imul
mov
lret
cmp
sbb
sbb
xchg
loopne
mov
sbb
lods
adc
add
pop
mov
fists
mov
insl
sub
addb
sub
das
aam
leave
ror
and
pop
mov
scas
ds
mov
push
cmpsb
mov
imul
and
scas
orl
test
rcr
loope
mov
outsb
mov
jl
in
scas
inc
inc
out
lods
jp
cmp
pop
imul
and
popl
push
add
std
lock
cs
aad
sub
mov
and
ljmp
pop
mov
test
into
repnz
lcall
outsb
xor
xor
pop
adcl
and
sub
aad
cwtl
inc
dec
mov
lret
pop
mov
lods
sahf
jne
dec
pop
cmpsb
dec
cmp
push
cmpsb
jmp
push
inc
cli
lret
push
sbb
mov
jp
notl
mov
loop
cmpsb
jae
dec
sub
or
or
js
popa
outsb
sahf
and
repnz
in
xchg
dec
das
dec
push
movsb
or
repnz
inc
sbb
push
icebp
sbb
cmp
jno
xchg
sub
xor
das
mov
mov
stos
aad
in
imull
pushf
mov
inc
or
adc
fs
out
jns
frndint
push
test
cmp
cmc
sbb
loopne
leave
mov
pop
fwait
push
test
cmp
pop
mov
imul
ret
mov
pop
jmp
lret
adc
cmp
aas
aaa
push
insl
loope
out
stos
pop
ret
shr
jg
cmp
leave
cltd
leave
sub
dec
addr16
cmp
sbb
sbb
loop
ds
mov
pusha
jnp
adcb
or
sbb
mov
arpl
xchg
sarl
jb
clc
int
mov
or
stc
jle
xchg
lods
jns
dec
mov
mov
decb
aam
add
pop
xchg
dec
js
fisttpll
test
test
mov
inc
mov
ficomps
std
and
testb
stc
arpl
fdivr
mov
jb
and
add
cltd
cmp
es
jecxz
cmp
jns
sbb
jmp
sub
and
add
and
adc
sbb
daa
and
xor
lock
imul
test
inc
js
stos
int3
push
and
into
ja
xchg
testl
frstor
push
pop
sahf
inc
loopne
xchg
call
loopw
jnp
inc
jo
add
lock
mov
cli
sbb
sub
in
push
aad
notb
push
sub
ja
adc
inc
shl
and
xor
jns
push
mov
and
call
out
daa
xor
add
mov
mov
mov
shrl
xlat
mov
insl
jno
xchg
lods
inc
push
fucomp
pop
mov
add
cmp
jb
and
jo
out
rcr
cli
adc
jno
fimuls
cmp
fwait
popa
scas
mov
or
stos
test
hlt
xor
iret
mov
xchg
daa
stc
jnp
sbb
or
outsl
aam
lods
mov
xchg
xor
cmpsw
sbbl
lds
lea
push
xor
and
sbb
mov
or
xchg
dec
jmp
fisubl
cmp
adc
jne
sbb
jg
jg
adc
loopne
xlat
scas
cmpsl
ret
or
divps
mov
popf
movsb
mov
xor
push
loope
sub
nop
mov
cmp
jo
shlb
in
in
xchg
fldt
into
pop
cs
mov
lock
dec
xor
test
adc
cmp
dec
pop
xor
lods
push
and
fnstsw
loop
imul
insl
sbb
orl
jnp
ret
iret
mov
cltd
jbe
dec
inc
loope,pt
jnp
test
shlb
je
push
adc
sarb
int
push
mov
sub
jae
mov
out
push
jecxz
loopne
sub
in
ljmp
push
mov
call
dec
loope
sbb
lahf
cltd
inc
outsb
jmp
lahf
jp
data16
add
jno
mov
nop
adc
sub
jbe
leave
adc
popf
lret
ret
jge
xchg
sbb
and
lods
push
outsb
push
sub
pop
push
xchg
inc
dec
insl
jae
sub
lret
out
jg
sbb
aas
push
or
or
repnz
xchg
rcl
je
sub
push
xor
mov
jmp
pop
stos
xchg
adc
mov
gs
fiadds
popf
xchg
pop
and
mov
aaa
sub
mov
loope
pop
and
inc
out
cwtl
rolb
cli
subb
pop
inc
ds
fcomp
or
xor
mov
and
push
je
add
xchg
in
mov
je
call
rclb
pop
iret
daa
in
adc
mov
mov
rcl
imull
mov
pop
and
pop
mov
push
out
out
inc
push
leave
cmpsb
movsb
adc
jb
shlb
and
aam
pop
and
outsb
sahf
or
nop
jae
pop
or
and
gs
mov
stos
enter
outsb
sbb
fsubs
cmp
mov
cmpsb
mov
or
call
sbb
xlat
cmp
cmp
data16
movsl
loop
xor
push
jne
push
imul
mov
dec
xchg
in
out
mov
add
shlb
add
faddp
sub
sahf
xor
and
or
adc
ljmp
adc
insb
sahf
mov
push
outsl
test
outsb
sbb
std
lcall
jne
cmpl
add
testl
cmpl
insl
xchg
les
mov
mul
push
nop
pop
cmpb
stos
in
imul
imul
sbb
lea
repnz
ja
leave
aam
mov
sbb
sbb
adc
hlt
push
add
andl
mov
pop
ret
or
fistps
mov
mov
and
es
scas
fimuls
loopne
inc
adc
xchg
xor
aam
push
rcrb
loop
subb
dec
hlt
add
fwait
dec
inc
inc
sub
testl
inc
addr16
sbb
hlt
les
cld
push
xlat
mov
in
mov
inc
and
imul
daa
ja
enter
add
cmp
mov
daa
loopne
sub
jbe
dec
enter
repz
cmc
mov
in
adc
xchg
fs
jo
gs
std
add
lcall
lods
sti
pop
dec
xor
push
test
and
mov
sub
pop
pusha
inc
add
leave
push
sub
es
dec
stc
fisubrl
lret
jmp
fisubrl
daa
ffreep
cmp
stos
ljmp
adc
push
cwtl
imul
jmp
inc
push
add
cltd
test
push
xchg
xor
sub
jns
sub
mov
jmp
mov
das
jg
xor
insl
cmpsb
mov
mov
jns
mov
pop
and
in
js
pop
cld
mov
dec
jl
jnp
cmp
sub
iret
mov
outsb
repz
jp
adcb
ss
dec
icebp
fbstp
dec
dec
push
dec
add
xor
xlat
call
pop
sbb
sub
mov
dec
push
cwtl
push
clc
xchg
mov
pop
jge
arpl
mov
mov
ljmp
pop
fmuls
add
mov
daa
aaa
jecxz
mov
ljmp
mov
push
push
es
es
push
pop
fcoml
adc
das
lock
and
mov
push
gs
mov
ss
std
inc
cmp
add
mov
fldl
push
rorl
pop
fs
push
test
out
inc
pop
loopne
js
mov
mov
xor
jno
dec
mov
xor
xor
mov
cmp
idivl
dec
push
pop
and
lds
test
dec
popa
imul
decl
push
inc
subl
xchg
mov
rorl
push
add
mov
xorl
cltd
xchg
faddl
ret
push
nop
adc
imul
sub
test
out
push
and
rcrb
cmpb
jae
fwait
xorb
aad
jne
mov
fidivrs
dec
cmp
fcmovnbe
adc
xor
pushf
inc
outsb
ds
out
ss
es
jae
hlt
divl
in
ljmp
clc
sub
xor
mov
cmp
fnstsw
jns
fstps
and
push
sub
into
mov
test
fnstsw
cmp
loope
sbb
insb
dec
inc
cmp
and
flds
inc
or
jb
or
adc
fdivs
push
sub
xchg
and
adc
fstpl
dec
inc
or
add
das
in
sub
test
add
cmpsb
dec
pop
stos
or
jns
lcall
ss
cmp
mov
xor
in
mov
xchg
push
mov
push
fdiv
mov
imul
divb
xor
and
lods
pop
enter
dec
pop
daa
shrb
sub
rcr
push
dec
inc
nop
push
push
scas
xchg
inc
fstps
dec
lcall
das
mov
cs
jb
nop
pusha
push
xor
jns
imul
inc
icebp
mov
jle
in
mov
out
jne
pop
into
cmp
add
lcall
xchg
jno
inc
dec
insl
push
mov
pop
mov
repnz
and
mov
sbb
js
dec
mov
fnstenv
cli
imul
sti
jbe
hlt
test
cmp
dec
xor
pop
mov
or
mov
in
mov
imul
jnp
imul
aas
adc
fimull
ficoms
adc
in
aam
test
adc
jbe
xor
mov
adc
cli
in
mov
iret
sbb
out
ja
idivb
ja
mov
mov
xchg
push
dec
shrb
out
cwtl
push
stos
cmp
cmpsl
insb
mov
cmp
shlb
stos
and
inc
and
loopne
lahf
cmp
xor
mov
jae
ret
jae
ljmp
push
out
imul
push
fstpt
mov
sub
sbb
lds
cmp
lahf
imul
pop
mov
cltd
xor
ret
jno
fcoms
or
in
repz
pushf
and
inc
es
sub
lcall
add
jo
xlat
mov
nop
repz
xor
cmpsl
or
call
adc
lahf
rcrl
clc
pop
push
nop
xchg
add
iret
push
sbb
into
cwtl
add
std
or
sbb
sbb
lods
sub
je
xor
insb
or
fiadds
in
or
sub
xchg
inc
inc
pop
sbb
sub
adc
push
call
sbb
mov
into
jecxz
sub
cwtl
adc
cmp
xchg
inc
push
bound
in
jo
fsubl
in
and
mov
ss
mov
les
dec
and
cmc
add
in
test
mov
aaa
mov
inc
fs
cli
lea
lret
inc
lahf
mov
and
push
xchg
pop
scas
inc
jae
shrb
mov
test
idivb
aaa
pop
dec
lea
jle
sbb
fcmovnb
xor
mov
inc
jae
add
je
mov
jns
ret
xchg
add
xlat
out
cmp
lret
das
out
popa
aas
jnp
repz
mov
addb
call
mov
ret
mov
cmpsb
insb
inc
mov
scas
jns
push
loop
pop
movsb
cmc
scas
popa
pop
roll
movsb
test
ret
das
and
sbb
sub
out
xor
add
lahf
cltd
lahf
ffreep
popl
enter
mull
in
pop
insl
mov
push
std
pop
xchg
adc
sub
inc
sahf
push
dec
sbb
jge
clc
jb
and
outsl
lahf
sbb
fildll
or
lcall
inc
mov
out
cmpsl
movb
shrl
fidivs
push
cmc
adc
dec
push
js
mov
dec
out
cs
sub
and
xor
push
mov
cmp
sahf
pop
cmpsl
xchg
push
pop
clc
shl
divps
push
mov
in
and
scas
sahf
cmc
out
inc
imul
mov
out
sbb
pop
sub
dec
lret
in
fidivrs
outsl
test
inc
dec
ss
sbb
addr16
test
push
and
xor
std
mov
sti
in
outsl
dec
mov
bound
push
daa
aaa
xorb
xor
pop
in
mov
xchg
insl
sbb
and
and
clc
cltd
data16
mov
out
mov
call
sub
push
push
jg
sbb
insb
rcll
arpl
or
imul
cmp
xor
inc
outsb
fiaddl
or
ss
lretw
push
scas
jl
mov
cmc
or
jp
dec
popa
shlb
jecxz
movsb
jnp
sub
push
ja
fcmovb
mov
lret
out
test
or
pop
bound
adc
mov
jns
push
jmp
dec
pop
add
mov
in
call
jo
and
push
adc
and
mov
mov
mov
fisubrs
pushf
mov
fcompl
mov
pop
stos
movsb
fisttpll
sub
lods
pop
adc
adc
sbb
adc
jge
xorl
xchg
cmp
insl
icebp
or
mov
fistpl
frstor
ret
xchg
push
movsl
popa
add
std
or
push
xchg
fidivrs
and
push
aad
in
outsb
xchg
push
fs
enter
incb
mov
pushf
dec
inc
adc
add
out
pop
sub
and
in
add
enter
int3
idivl
leave
test
push
test
pop
outsl
inc
push
dec
mov
pop
sarl
or
jmp
fsubs
scas
xchg
loope
xchg
sbb
mov
fs
lods
test
int
mov
loop
inc
push
shll
popa
xchg
mov
fldt
pop
mov
imul
pop
jp
out
mov
call
fwait
loope
pop
jne
lahf
pop
inc
jge
xchg
sbb
cmp
pushf
push
xchg
rcl
mov
pusha
lods
ret
outsb
lea
orb
inc
mov
fidivl
inc
cwtl
lahf
or
dec
bound
jge
sbb
imul
cmp
jge
adc
int
pop
add
fbstp
data16
jbe
sti
and
jbe
rcll
push
sbb
mov
pushf
lods
movsl
xchg
push
jne
loope
in
iret
test
jae
push
mov
jmp
pushf
push
nop
loopne
loop
sub
or
xchg
int
sbb
pop
popf
cmp
jle
into
outsl
xor
jo
jne
setp
ret
xor
pop
call
js
movsb
imul
mov
adc
dec
imulb
imul
int3
cltd
jmp
lahf
jecxz
push
xchg
push
pop
xchg
mov
pop
fcmovu
sbb
lahf
push
cmp
add
fdivrl
dec
pop
sub
movsl
rclb
mov
dec
mov
int3
sbb
and
jb
mov
pusha
jl
imul
add
popa
imul
cmc
pop
add
jno
fwait
jecxz
mov
cli
out
add
notl
iret
mov
les
sar
rorb
and
sbb
mov
add
iret
lcall
les
push
inc
mov
popf
mov
test
leave
sub
dec
test
sub
fldl
xchg
call
pop
movsl
cmpsl
sub
mov
rolb
fadds
loop
imulb
jl
daa
insb
cmp
test
popa
cli
shrl
sub
idiv
mov
jbe
mov
lcall
arpl
pop
pushf
jmp
jnp
jp
lahf
push
push
sbb
sub
xor
sub
and
push
mov
out
sti
scas
xchg
fidivl
or
fisubrs
std
jp
mov
mov
jmp
insb
dec
add
fisttpll
adc
add
sarb
mov
ret
mov
and
lds
jbe
dec
data16
roll
ficompl
dec
cltd
and
out
stc
mov
insb
sub
and
shrl
cmp
inc
sub
icebp
adc
add
jecxz
inc
push
arpl
ds
fistps
mov
test
push
mov
mov
fidivrl
int
add
popa
xorl
pop
push
jae
inc
shl
jbe
push
dec
out
add
imulb
or
sub
out
jns
inc
mov
icebp
add
loope
dec
mov
xor
gs
sti
mov
or
dec
adc
push
stos
jb
pop
inc
daa
icebp
stos
rorl
or
adc
rolb
or
fcoms
mov
bnd
mov
inc
std
out
lret
add
fnstenv
and
int3
imul
push
scas
stc
icebp
mov
sub
sub
aaa
test
pop
inc
adc
xchg
das
loop
pop
lods
xchg
cmp
sar
mov
les
xchg
test
fbstp
pop
pop
fs
xorb
test
dec
int
je
aaa
xchg
fdivrp
daa
pavgw
add
scas
sub
rorl
cwtl
aaa
mov
cld
mov
mov
test
mov
aam
mov
aas
aad
mov
mov
psubq
xchg
push
fcoml
cltd
bnd
fstps
adc
xchg
clc
xor
pop
outsl
dec
fmul
mull
xchg
jl
sub
mov
pushf
mov
adc
lea
movl
adc
fwait
mov
and
push
test
xchg
nop
sbb
in
inc
cmp
mov
icebp
std
aas
in
xchg
mov
testl
dec
xor
rolb
jo
idivl
movsb
cmpb
xchg
mov
inc
jno
adc
dec
mov
pop
mov
mov
xor
mov
jae
sub
xchg
sub
sbb
pop
nop
cmc
in
insl
mov
rorb
lret
out
fists
dec
mov
popf
mov
fucompp
ret
adc
movsb
into
pop
in
test
enter
out
shrb
mov
aam
sub
ret
xchg
jns
out
mov
jne
sub
js
push
xor
xchg
stc
out
jmp
test
ljmp
outsb
inc
out
stc
test
sti
sbb
mov
pop
sti
mov
inc
mov
adc
mov
fs
jmp
sub
fsub
int
pop
aaa
mov
call
inc
jb
sbb
js
or
push
loopne
pop
pop
pop
stos
cmp
add
rorl
aaa
call
jg
adc
lods
das
out
ret
add
mov
add
pop
inc
mov
mov
scas
sar
jmp
ljmp
adc
adc
inc
andb
ss
jl
aaa
mov
adc
jns
and
dec
dec
mov
cmp
add
aas
int
add
cmp
xor
push
push
ret
mov
jo
inc
fldcw
setl
push
mov
repnz
adc
lahf
test
imul
push
inc
loop
mov
dec
daa
mov
je
add
icebp
mov
pop
in
add
xor
and
pop
fstpl
iret
lret
xadd
hlt
or
pop
push
stos
xor
jecxz
dec
inc
icebp
or
fstpl
cmp
jge
sbb
or
adc
xor
push
add
ljmp
sbb
or
je
xchg
pop
loopne
add
fidivrs
rolb
push
fdivrs
pop
std
adc
in
xor
pop
pop
shlb
jae
mov
cmp
or
mov
dec
dec
sbb
stos
inc
sbb
mov
or
xorb
jl
pushf
cmc
mov
pop
out
pop
mov
cmp
cmp
mov
mov
cwtl
push
adcl
fdivrp
lcall
or
ja
icebp
icebp
and
mov
cli
mov
jle
xor
hlt
outsb
aam
imul
and
xchg
push
add
arpl
mov
pop
es
mov
add
cmc
sub
fdivs
inc
test
cli
push
gs
sub
dec
xchg
fisubrs
popa
push
dec
dec
fwait
ds
or
fcomp
and
adc
jg
jg
fnstcw
mov
int
pop
and
arpl
cmp
mov
mov
sub
paddsw
dec
mov
arpl
xchg
popa
push
lret
jnp
int3
sbb
push
add
cs
icebp
lods
xchg
in
stos
imul
xchg
add
and
int3
pop
orl
xchg
stos
fs
push
fs
pop
cli
popf
es
loop
and
pushf
pop
out
jmp
lds
enter
mov
jns
in
les
mov
pop
bound
jnp
or
js
ja
shrl
pop
dec
xchg
in
movsl
ja
mov
mov
push
subb
loope
rcll
xchg
xor
lock
loopne
jb
mov
jp
jmp
xor
add
outsl
xchg
mov
push
les
test
clc
lcall
pop
int
mov
daa
xchg
dec
inc
jae
dec
jns
jge
inc
movsb
shll
sbb
inc
bswap
adc
outsl
popa
pop
add
sbb
and
jmp
out
mov
xchg
xchg
cmp
aam
or
iret
mov
les
outsb
lock
fs
sbb
add
sbb
jae
mov
push
movsb
repnz
mov
imul
xchg
enter
sub
out
mov
mov
ss
lock
jnp
pop
out
mov
sbb
sub
fdivl
pop
mov
pushf
pushf
in
pop
iret
lcall
outsb
insb
lahf
sub
lds
mov
sub
stos
mov
adc
add
lods
in
arpl
pop
cwtl
out
fcmovnu
sub
test
iret
jno
dec
xchg
xchg
data16
fs
iret
sbb
jge
fildll
adc
push
xor
push
cmp
out
faddp
push
mov
pop
sub
push
mov
add
ds
loope
add
roll
dec
add
pop
cltd
hlt
xchg
xchg
push
jnp
fstl
inc
les
stos
mov
inc
dec
lcall
mulb
lahf
addr16
mov
mov
dec
adc
insl
std
int
push
arpl
mov
cmp
movb
sbb
negl
mov
or
xchg
addr16
insb
dec
add
sbb
push
push
sub
adc
nop
push
jl
rcll
lds
es
or
pop
xchg
test
jmp
pop
movups
sbbl
in
inc
roll
imul
es
mov
mov
pop
adc
sub
ret
mov
push
dec
cwtl
cmp
add
out
data16
cmp
push
cltd
mov
jnp
and
dec
jae
scas
je
movsb
mov
ret
push
cmpsl
cmp
xchg
into
clc
jle
xchg
jp
mov
mov
fidivl
sbb
mov
mov
push
insl
in
daa
lret
arpl
fcomip
push
jo
or
pop
das
lods
fisttps
sahf
sub
mov
cld
push
test
xchg
pop
jge
mov
mov
xor
push
mov
das
jmp
cmp
add
xor
xchg
lods
push
notl
dec
mov
rorl
mov
or
rorb
jbe
ja
mov
out
insl
pop
subl
outsb
jp
std
cmpsl
push
adc
test
push
add
es
loope
mov
and
pop
cmp
lods
add
sbb
cltd
mov
xchg
push
shlb
psrad
adc
addr16
adc
mov
pusha
repnz
pop
dec
mov
fmulp
mov
mov
push
xchg
mov
mov
pop
leave
test
jle
cli
sub
cld
xor
add
pop
fadds
in
mov
sahf
mov
jge
addb
sbb
cmp
imul
mov
pushf
jnp
push
push
push
and
jno
rcrl
cmp
sbb
je
and
fsubrs
jp
inc
xchg
in
push
and
xor
mov
or
outsl
jae
mov
inc
mov
rol
and
repz
add
vmptrld
fucomi
jmp
int3
call
daa
leave
hlt
sub
sub
cmc
sbb
movsl
inc
or
scas
scas
cwtl
shrl
cmpsb
or
jg
scas
hlt
xor
insl
add
inc
add
int
lcall
fcoml
sbb
test
mov
ja
ret
jnp
std
shll
rcrl
mov
gs
scas
movsb
mov
mov
into
outsl
add
xchg
cmpsb
and
fcoml
jl
cmpsb
pusha
fs
dec
jp
sub
fistps
stos
rcr
xchg
repnz
xorl
cmp
scas
inc
outsl
or
sub
sti
dec
aad
loopne
jl
movsl
rcrb
test
stos
xchg
inc
jo
pop
fiadds
inc
stos
sbb
bnd
or
fmuls
das
push
cmp
lret
ret
sbb
stc
sar
daa
bound
mov
mov
xor
ficompl
dec
inc
or
push
and
xlat
jae
into
popa
mov
sbb
xchg
dec
mov
leave
lea
or
jecxz
push
shrl
iret
mov
call
jo
nop
nop
subl
cwtl
adc
fisttpl
sbb
in
cmp
dec
jne
aad
rcl
hlt
stos
add
fisttpl
sbb
inc
lcall
cld
inc
add
outsl
and
inc
adc
mov
jbe
mov
sub
and
sbb
and
xchg
je
sbb
xchg
push
inc
mov
inc
mov
pop
jne
stos
shr
mov
push
sub
insl
sub
mov
adc
cmp
mov
setle
inc
repnz
insl
test
pop
mov
xchg
rolb
fdivrl
cmp
xor
das
sahf
xchg
jnp
out
sbb
pop
jle
outsl
adc
push
push
dec
hlt
add
out
pop
fs
mov
and
je
std
mov
mov
cld
mov
jp
inc
sub
jnp
lret
sbb
jp
jp
sbb
inc
cmpsb
jmp
xor
and
pop
scas
adc
aam
inc
lock
stos
in
sbb
push
outsl
out
cs
in
repnz
cmp
es
das
pop
iret
cmp
mov
or
stos
lock
or
sbb
dec
jnp
inc
loop
inc
daa
mov
cmp
test
jae
dec
xchg
xchg
rolb
aaa
and
loopne
mov
rcl
stc
or
repnz
popa
mov
aas
movsl
outsb
lds
fisubs
flds
fldcw
mov
ja
push
cmp
push
and
decb
adc
call
jbe
test
adc
push
imul
sub
mov
in
xor
rcrb
xor
mov
push
je
dec
xchg
and
scas
sub
int
lahf
and
repnz
ja
iret
xchg
add
fdivs
nop
loope
xor
in
iret
sub
pushf
enter
insl
shl
mov
pop
into
add
and
fmull
mov
mov
arpl
pusha
pop
stos
jp
push
insb
mov
xchg
and
repnz
xchg
pop
jecxz
dec
jnp
push
xor
data16
xor
aaa
xchg
lods
mov
push
adc
cmp
scas
std
repnz
stc
bound
xchg
pop
jnp
jns
xor
orl
movsl
aaa
out
xchg
je
ds
add
dec
or
mov
jle
cli
mov
test
pop
dec
mov
aas
popa
gs
dec
aas
mov
mov
sub
and
out
out
pop
sub
pop
sbb
popa
cltd
add
lret
jmp
dec
mov
js
fidivs
cli
loope
mov
push
rolb
xchg
jae
bound
out
lcall
sarl
push
notb
mov
push
mov
dec
test
aam
pop
mov
inc
rcrb
iret
and
sub
fbld
das
cmp
push
inc
adc
in
xchg
scas
cmpsb
add
mov
mov
cmp
pop
push
pop
sub
lods
inc
repnz
hlt
push
jl
add
std
adc
xchg
adc
push
push
movhps
ret
adc
iret
xor
sbb
or
and
add
mov
stc
jecxz
add
fcoms
mov
jno
mov
jge
mov
leave
ficomps
or
pop
lahf
test
cmp
adc
scas
idivl
mov
clc
test
stos
xor
stos
je
hlt
aam
cmpl
mov
mov
ret
lahf
insb
jle
lds
hlt
add
mov
js
cmpsb
and
jge
fsubs
pop
adc
sub
js
xor
xchg
scas
xor
cli
mov
test
push
dec
cs
xchg
push
cmp
sub
shll
ret
in
mov
sub
mov
repz
adc
loop
xor
repnz
fcmovne
mov
xor
pop
std
sbbb
in
arpl
inc
imull
push
jns
rcrb
push
hlt
aam
into
sbb
in
push
aas
jecxz
jle
cmpsl
adc
and
nop
mov
cltd
test
rclb
scas
pop
fxch
gs
cwtl
inc
addr16
movsb
lods
mov
inc
mov
mov
and
cmpsl
std
mov
int3
add
pop
cmp
jnp
imul
lret
inc
ljmp
lahf
inc
in
loopne
aaa
outsb
loope
in
inc
cmp
sbb
pop
testb
and
mov
pop
mov
jbe
xlat
imul
fsts
inc
dec
or
jmp
sub
cltd
pop
adc
movsl
and
hlt
jmp
aaa
push
push
xor
ds
clc
push
pop
mov
bound
mov
xchg
rorl
push
testl
icebp
xchg
mov
mov
in
loope
lea
pop
adc
outsb
mov
push
fidivs
out
es
leave
int
cltd
in
xchg
addr16
sti
xchg
adc
in
ds
cli
sbb
in
mov
test
sahf
add
mov
jb
int
mov
adc
aas
in
lds
pushl
mov
xchg
xchg
sub
mov
in
sbb
jmp
xchg
push
dec
int
test
sbb
aad
or
inc
jne
fnsave
push
dec
push
dec
and
jbe
dec
ret
add
aaa
stos
scas
inc
pop
push
push
mov
daa
lcall
jl
jmp
xchg
and
dec
jo
es
add
or
cli
or
lds
mov
imul
jp
sbb
add
adc
push
clc
mov
xor
cmpsl
shrb
icebp
mov
les
dec
lahf
jmp
sbb
ds
mov
aad
mov
popa
inc
je
or
mov
push
or
mov
push
jne
mov
subb
mov
inc
add
mov
rcr
sbb
jge
cmpb
ss
and
inc
imul
mov
loop
mov
and
jns
ljmp
insl
and
lahf
lcall
mov
xchg
hlt
andb
outsb
test
cmpsb
mov
add
and
rol
cmp
and
xchg
aaa
jle
out
pop
aas
or
or
aaa
repnz
cmp
clc
xchg
dec
outsb
adc
lea
dec
sbb
pop
cmp
xor
mov
movsb
lea
adc
mov
and
sarb
movsb
test
stos
idivl
inc
and
add
adc
cli
add
cmp
orl
mov
adc
xchg
ds
xor
incb
cmpsb
jb
imul
xchg
mov
sub
mov
iret
andb
fs
scas
pusha
xorl
jge
dec
out
test
shrb
xchg
call
push
fwait
jg
lods
push
lock
mov
mov
pushl
nop
mov
nop
stos
push
xchg
das
sbb
fs
mov
fsubl
inc
test
je
jno
jg
js
aas
cmc
push
lret
xchg
hlt
lds
loope
sub
pusha
jb
addb
jnp
push
mov
cli
xchg
fwait
lods
pop
push
fwait
arpl
int3
andb
shll
out
or
sub
sbb
loop
arpl
sub
movsb
push
test
pop
cmp
mov
jge
je
je
mov
push
in
push
dec
pop
xchg
sbb
loopne
fadds
push
jp
pop
leave
call
mov
mov
mov
sahf
pop
aas
sbb
push
adc
push
xchg
rcrl
jmp
cmpsl
cmp
jg
mov
imulb
int3
inc
inc
fiaddl
outsl
or
or
mov
fsts
lock
or
imul
push
stos
scas
pop
ss
cltd
dec
mov
sub
stos
mov
mov
mov
into
inc
jns
sub
push
mov
push
in
cmpsb
lods
xor
imul
popa
push
fwait
hlt
std
call
jge
out
push
std
and
bound
jns
mov
ljmp
and
pusha
lret
pusha
repz
xchg
jmp
xor
scas
ret
addr16
daa
cwtl
mov
mov
sub
popa
xchg
test
inc
shrb
pushf
cwtl
mov
mov
fsts
pop
sbb
pop
jns
mov
out
cwtl
jp
push
rolb
xor
pop
fs
jmp
loopne
arpl
out
imul
daa
jp
in
fldcw
ljmp
pop
pop
testb
nop
iret
cmp
push
push
mov
dec
fidivrl
dec
sar
sbb
insl
mov
jno
mov
mov
adc
lret
sub
add
jp
push
adc
sub
xlat
js
loop
lods
inc
jge
mov
or
or
aam
pop
mov
push
imul
and
pop
mov
test
scas
outsl
mov
divb
imul
mov
lods
jae
mov
xorl
fistpll
mov
negl
stos
imul
pop
xor
mov
push
scas
out
mov
adc
and
lcall
fs
aam
out
lahf
testl
xchg
mov
jge
sbb
test
mov
dec
imul
fnstsw
loopne
in
test
mov
xchg
out
lods
lods
cld
mov
sub
daa
fwait
les
and
push
ret
push
lods
test
or
in
mov
jns
stc
inc
sbb
rolb
inc
ja
stos
xchg
mov
sbb
in
cmc
roll
push
nop
rolb
pmuludq
jno
push
sub
aam
lahf
in
jmp
xchg
and
jle
or
mov
inc
sahf
das
ficoms
call
fidivrs
xchg
dec
xchg
add
rcll
outsl
sti
mov
lahf
outsl
shrl
dec
or
add
imul
mov
adc
jnp
mov
pop
cmc
cmp
es
incl
mov
push
loopne
push
mov
test
sub
pop
hlt
movsb
mov
dec
mov
sbb
sbb
mov
xchg
mov
rcr
data16
lods
dec
into
pop
rol
pop
sahf
enter
fdivl
fsubr
lahf
nop
leave
inc
shrl
push
pandn
push
or
idiv
ror
mov
test
outsl
lret
lcall
adc
cmpsb
xchg
sahf
inc
xor
cld
hlt
pop
pop
lods
stos
fcomip
jnp
jecxz
and
jg
ss
sahf
std
push
adc
addr16
jb
cltd
ret
sbb
in
sub
xor
test
stos
test
mov
adcb
mov
movsl
jbe
adc
jle
js
pop
inc
test
testb
mov
inc
dec
mov
clc
pop
push
and
hlt
pop
inc
cmp
jns
rclb
fwait
mov
jo
imul
xchg
xchg
shrb
pop
mov
inc
sbb
dec
fs
jo
pop
xchg
adc
cmp
das
cmp
pusha
mov
jg
fisttps
lret
xchg
enter
popf
xor
jg
or
stos
negb
cmp
fadd
cmc
sarb
shlb
lcall
fldt
sahf
rcl
popa
sub
pop
jnp
lock
xchg
sub
or
add
rcrb
in
pop
icebp
mov
dec
subb
punpcklbw
sahf
int3
insl
adc
sti
jg
out
inc
mov
push
cmp
sub
mov
out
lock
stos
daa
xchg
and
push
sub
popf
mov
repnz
cli
pop
les
sti
int
mov
in
sub
es
cwtl
lods
pop
nop
outsb
inc
xor
jns
fisubrs
insl
sub
push
aad
lods
sbbb
mov
and
dec
test
push
insb
and
xor
mov
loopne
ret
jb
jle
mov
xor
cmpsl
mov
shlb
lds
mov
dec
cmp
int3
loope
iret
pop
pavgw
and
lods
fs
xchg
test
jge
sub
inc
sti
std
lds
pop
test
scas
sub
lods
pusha
mov
mov
adc
jae
in
or
xor
das
fdivrs
push
mov
enter
xchg
add
inc
roll
js
xlat
sub
jp
fimull
or
rclb
imul
clc
loop
shll
or
incl
out
aad
mov
cmpl
xor
ret
inc
nop
aad
adc
sub
pop
repz
mov
or
add
sbb
stos
jbe
lahf
ret
sahf
iret
mov
cwtl
mov
movsl
xchg
push
and
ret
xchg
sub
cwtl
movsl
pop
jmp
mov
sti
rep
sbb
sub
stc
push
mov
pop
fildl
mov
fs
jmp
outsb
fucomp
jle
fdivp
push
xorl
loop
or
leave
lea
gs
scas
adc
pushf
jp
enter
push
sbb
test
sbb
pop
add
aam
addr16
inc
and
shrl
fisubs
jl
fildl
add
jmp
inc
out
mov
aas
mov
cs
shll
shlb
mov
sbb
add
xchg
out
pop
add
and
push
int3
push
jb
push
inc
and
ja
fadd
es
lea
subb
repnz
lcall
or
push
push
xor
or
pushf
cltd
push
adc
or
inc
xor
xchg
fs
sbb
cmp
jno
jle
sbb
in
xlat
shrb
push
xchg
lods
movl
ss
mov
pop
jno
pop
sbb
cld
mov
push
es
dec
push
arpl
xchg
lea
or
sub
das
xchg
jmp
push
push
ret
ficompl
mov
mov
ret
and
imul
xor
or
pop
cmpsb
movsb
je
jl
sbb
aaa
enter
inc
imul
cwtl
fisttpll
insb
pop
hlt
and
in
sbb
leave
imul
dec
cmp
scas
arpl
or
xchg
gs
lret
lret
mov
ljmp
sarl
icebp
stc
les
jne
cmp
dec
xor
test
xchg
or
pop
cld
dec
mov
repnz
xchg
cltd
dec
subb
fstp
jecxz
push
mov
push
arpl
pop
fsub
cmp
pop
lret
cwtl
ret
xchg
mov
rorl
xchg
dec
xor
jge
cld
push
mov
adc
aaa
ljmp
stos
lret
inc
shlb
int3
and
mov
cmpsb
dec
jns
jbe
movb
xchg
fdivrp
imul
mov
inc
jo
add
push
pushf
sub
pusha
fs
jbe
sti
pop
fisubs
pop
cmp
push
mov
jle
cmc
jb
pop
imul
call
insb
mov
inc
fstl
imul
push
xchg
dec
or
push
shlb
sub
cmp
rcrb
fldcw
cwtl
subb
cmp
inc
pop
ret
test
cmpsb
sbb
or
lods
test
cmpsb
stc
mov
pop
sub
in
fs
dec
mull
es
icebp
mov
jne
sub
mov
adc
jns
push
clc
adc
in
xchg
out
ljmp
shl
in
sub
dec
das
int
out
cmpsb
mov
mov
inc
cmp
out
in
imul
loop
push
incl
pusha
pop
xchg
sbb
popf
mov
mov
sub
sbb
jo
faddl
jbe
add
pop
ret
mov
xor
add
push
mov
cwtl
lds
lret
rorb
inc
push
jbe
ret
je
repnz
je
daa
int
and
jp
lea
adc
aam
loopne
int3
arpl
fs
imul
repnz
mov
jle
push
test
mov
cmp
lods
add
out
cli
loope,pt
orl
negb
fbstp
inc
sbb
lea
push
stc
xchg
jno
call
out
xchg
ljmp
sub
jmp
cmpsl
lahf
sub
mov
lret
enter
adc
sub
leave
js
jge
and
pause
mov
cmp
lea
xchg
fs
xchg
insl
jnp
sbb
sub
mov
aaa
out
jnp
popa
dec
addr16
clc
ja
scas
ds
in
mov
insl
addb
jecxz
push
aam
call
pop
inc
outsb
scas
sub
push
in
jne
xchg
cmc
fld
dec
loop
loopne
in
push
enter
test
ljmp
pusha
jle
xor
addr16
fldenv
jnp
add
xor
lret
inc
add
and
jnp
and
data16
xchg
jg
mov
mov
imul
pop
lods
rclb
dec
mov
ret
fistpl
xor
push
inc
jp
jmp
add
pop
fisubrs
je
pop
pop
rolb
imul
data16
orl
jno
or
lcall
std
repnz
push
ret
xchg
cmp
pop
scas
jp
jmp
cld
aam
xor
andb
and
inc
add
lods
xchg
xchg
loop
es
stos
subl
sahf
iret
outsb
aaa
or
xchg
xchg
xor
fcom
sub
loop
inc
sbb
push
stos
lret
mov
or
shll
fs
ds
test
insl
mov
xchg
push
sti
xchg
insl
inc
add
pushf
sbb
out
ffreep
mov
les
inc
inc
mov
orl
fsubrl
out
mov
sbb
das
es
inc
jmp
push
jle
lahf
xchg
inc
imull
push
mov
out
jmp
lock
xor
ljmp
sub
js
pop
insl
aas
push
pop
add
dec
jo
fstl
mov
rcrl
shlb
ss
mov
bound
repz
or
mov
jg
and
in
or
or
ljmp
fs
fwait
lcall
fwait
test
cmp
or
lods
daa
adc
jg
push
and
pop
in
movsl
mov
sub
inc
lods
repz
mov
repnz
mov
cld
pushf
lock
push
incb
daa
push
push
out
push
pushf
mov
lea
jae
test
flds
xor
and
gs
adcb
jg
ret
cmp
push
outsb
add
sarb
ret
mov
pop
inc
fsts
lods
int
push
stos
out
hlt
imul
sbb
lods
dec
fcoml
cmp
cmp
clc
mov
test
nop
fsubrl
nop
sub
and
sub
call
adc
xlat
pop
push
jne
jns
pop
sbb
pop
fisttpll
enter
add
leave
adc
in
sub
and
sub
mov
add
inc
imul
pop
add
and
or
cmp
push
sbbl
pop
movsl
cmp
adcl
adc
jnp
mov
inc
popa
jp
jae,pn
ret
ljmp
add
cltd
adc
inc
jp
int
rolb
cltd
sub
stos
xchg
xchg
int
pusha
xor
into
test
and
mov
push
test
sbb
fistpl
push
test
imul
cmp
mov
loope
in
jb,pt
frstor
aas
dec
mov
movsb
test
daa
mov
xorb
sarl
inc
inc
mov
imul
jns
fcomp
test
ret
and
dec
or
and
out
gs
add
inc
scas
in
leave
movsb
mov
lret
jmp
outsb
push
lret
xchg
out
cwtl
aaa
and
pushf
or
hlt
jmp
push
sub
stc
inc
clc
cmc
sahf
mov
lods
sbb
loopne
pop
mov
cmc
sbb
push
inc
movsb
xchg
xadd
and
inc
js
cs
lea
push
das
call
arpl
mov
push
hlt
or
cld
scas
push
es
cmp
mov
dec
cmc
cmp
pop
shll
out
fsubl
adc
mov
hlt
enter
pop
shrb
adc
mov
ljmp
aam
cltd
add
scas
ja
leave
sub
pushf
sahf
je
je
ds
test
push
add
pop
pop
call
inc
rcll
add
dec
adc
insl
pop
inc
bswap
inc
mov
mov
in
push
jb
cmpsl
pop
lret
pop
and
es
inc
dec
iret
sbb
add
jno
jne
icebp
mov
cmpsb
sbb
push
rep
xlat
enter
jg
imul
adc
cmpb
outsl
inc
iret
push
inc
lock
xlat
jmp
out
jo
dec
mov
mov
aaa
sub
cmpsl
xor
jae
scas
cmpsb
or
push
out
mov
outsb
push
std
and
leave
pop
test
pusha
pushf
shll
mov
add
or
cmp
xchg
repz
xchg
add
stc
jg
aad
insl
enter
movsb
mov
jnp
mov
mov
add
ja
xor
out
sub
jmp
or
mov
out
in
pop
fmull
xor
mov
sbb
add
loope
in
cmp
inc
adc
dec
inc
je
push
loop
mov
out
xor
mov
fbld
inc
test
pop
fnstsw
out
outsb
push
push
scas
cltd
xchg
cmpsb
hlt
push
mov
inc
loopne
add
xor
mov
pop
inc
mov
mov
xor
inc
mov
lret
mov
in
orb
shr
addb
lret
inc
loopne
xor
stos
scas
pop
jp
mov
mov
inc
sbb
mov
adc
mov
rclb
insb
in
jecxz
sar
pop
xor
pushf
sarl
sbb
rorl
stc
push
sbb
dec
adc
outsb
add
jnp
pop
push
lcall
outsl
ret
mov
adc
sub
push
pop
test
and
outsl
jge
cmc
and
mov
cmp
xabort
mov
push
dec
and
xchg
mov
fbld
ljmp
icebp
and
les
loop
push
pop
loop
add
aad
sub
jne
jge
fnstenv
cs
rep
jbe
pop
clc
rolb
jp
cmp
push
jbe
mov
mov
in
pop
xchg
pushf
cmp
lret
leave
sbbb
adc
pusha
sbb
mov
and
nop
fs
das
pop
xor
jge
aaa
call
jecxz
call
in
adc
ss
pop
xor
push
outsb
test
aas
and
das
fsubr
push
cmp
cli
xor
testb
xchg
mulb
dec
es
jne
js
mov
lret
in
lcall
jge
es
loop
dec
cmc
mov
nop
sub
fimull
aam
pop
ja
cmp
mov
std
push
dec
mov
jle
test
jnp
lods
stos
xorb
popa
pop
push
gs
psraw
push
cmp
adc
mov
or
pop
xor
es
rcll
push
push
sbbb
push
shlb
xchg
inc
mov
jb
mov
push
push
lahf
das
cmp
mov
out
test
bnd
lds
fidivrs
test
sbb
loope
inc
push
push
rcll
js
dec
cwtl
fwait
jmp
out
push
into
fwait
cli
or
pop
sbb
sub
push
mov
xor
in
mov
sahf
clc
pop
daa
push
sub
dec
int3
push
nop
adc
fsubrl
dec
mov
sub
dec
jns
adc
mov
add
fdiv
mov
inc
outsb
imul
cmp
imul
xorb
mov
xor
cmp
scas
shr
sbb
push
iret
adc
lret
mov
je
les
test
push
mov
pop
insb
mov
mov
stos
sbb
out
rolb
icebp
dec
jb
outsb
pop
jecxz
sbb
xchg
inc
scas
enter
push
in
inc
lsl
icebp
in
sbb
imul
mov
and
lock
sub
ror
pushf
push
and
out
repnz
ret
jecxz
into
dec
fwait
add
rolb
das
mov
call
testb
cmc
fwait
out
fs
jmp
loope
ja
cmp
adc
xor
push
fidivrl
fcmovnbe
xor
iret
add
cwtl
fwait
mov
movsb
in
es
fdivl
jno
shrb
mov
push
xor
std
pop
add
lods
and
jbe
sar
stos
sahf
lods
push
and
push
xor
rcll
and
stc
lea
fsubrp
push
inc
fcomps
cmp
dec
nop
insl
push
and
sub
xor
mov
adc
out
aaa
jo
or
or
sbb
rolb
das
rorb
rorl
jns
push
and
mov
pusha
dec
push
push
mov
or
repnz
xchg
and
stos
mov
xor
aaa
cltd
lcall
fimull
and
xchg
data16
outsl
loopne
add
scas
mov
std
loopne
pop
in
pop
movsb
mov
pop
movsl
cmp
jg
fucom
insb
cmp
shrl
mov
ficomps
sbb
add
sbb
je
sti
loop
sbb
and
push
xor
push
sub
xor
or
fbld
sbb
shrl
inc
in
pushf
cmp
cmp
jmp
sub
andl
repz
fists
cltd
mov
subb
jg
je
or
fidivrs
cmp
lret
pop
mov
or
cmp
int
lahf
outsb
lods
lret
xor
mov
add
inc
sbbb
cmp
outsl
stos
test
add
vprotb
push
and
mov
inc
push
inc
xor
jae
leave
jmp
add
add
pop
xchg
fs
mov
cmp
lock
mov
xor
iret
mov
lea
idivb
js
movsb
arpl
mov
repnz
iret
enter
call
mov
cmp
cmpsl
sub
clc
mov
mov
and
adcl
aas
je
lea
icebp
jp
pushf
andl
xchg
cmp
cmp
sub
test
aas
ja
mov
call
adc
inc
insb
stos
test
xor
and
pop
in
cld
rcl
repnz
xor
pop
inc
fstps
sbb
popa
mov
fwait
mov
ja
add
jo
inc
repz
pushf
shrb
stos
jae
sub
bound
imul
mov
arpl
cltd
out
or
scas
das
ja
and
adc
mov
sbb
xchg
mov
aam
ret
mov
loop
idivl
sub
pop
ds
jle
push
lock
sbb
adc
mov
lret
loop
sub
outsb
loop
and
jae
or
pop
ss
fisttpl
fisttps
adc
ja
jmp
in
pop
mulb
cli
leave
cli
cltd
pop
into
imulb
inc
add
and
and
ret
xchg
sub
fisubrs
int
ss
lret
adc
and
rclb
mov
repnz
xlat
mov
dec
dec
inc
push
sti
cmp
fcomps
pop
pslld
test
rcrl
jp
stos
out
les
xor
add
or
sub
scas
repnz
leave
mov
lret
std
cmc
dec
lret
jb
or
mov
negb
popf
push
jge
mov
shl
lret
cmp
add
aaa
fdivs
adcl
aas
andb
scas
ljmp
push
ds
loop
push
sub
fstpl
push
shlb
pop
push
adc
sbb
mov
das
add
jmp
pop
loopne
enter
inc
jge
jge
sbb
add
les
xchg
and
mov
outsb
xchg
dec
sti
imul
loope
pop
add
mov
js
jno
lods
movsb
dec
add
push
sub
call
inc
mov
push
or
or
xor
cmp
dec
gs
mov
dec
mov
das
cwtl
popf
nop
or
in
sub
push
jae
shll
pop
int
addr16
inc
repz
inc
aaa
push
daa
pusha
cmpsb
pushf
dec
sahf
popf
inc
jl
jmp
fnstsw
hlt
xchg
fwait
mov
push
out
mov
mov
pushl
mov
mov
fldl
cmp
jb
and
or
in
lcall
mov
xchg
out
mov
divb
test
pusha
push
dec
clc
push
dec
cs
pop
mov
push
aad
or
ss
cvtps2pd
mov
jmp
fidivrl
dec
lahf
hlt
bound
jno
sti
pop
lahf
xchg
jp
clc
das
aam
adc
inc
insl
outsb
mov
add
in
shrb
add
in
stc
or
int3
and
jnp
mov
ljmp
jne
sbb
mov
inc
int
push
jno
mov
inc
je
lcall
and
cmp
cmp
clc
xchg
mul
or
js
and
scas
push
xchg
sub
mov
xor
outsb
mov
outsl
jbe
xchg
cs
jo
mov
shll
mov
arpl
inc
hlt
cmp
mov
pop
xchg
lret
and
rcrl
clc
lods
mov
adc
repz
data16
jp
ds
push
push
xor
ss
test
mov
mov
scas
jle
mov
adc
cmp
out
ret
add
jl
fnstenv
dec
lret
lcall
dec
scas
outsb
add
in
shl
cmpsb
call
int
mov
loope
aad
loopne,pt
aam
nop
lods
andl
xchg
xchg
cmp
rcr
rcrb
mov
dec
inc
adc
js
cmp
aas
sub
mov
dec
mov
xchg
mov
clc
fists
mov
movsl
cmp
sbb
int3
ss
lock
inc
mov
mov
jecxz
pop
aam
cmc
or
imul
dec
rol
mov
jae
jns
cli
adc
xchg
mov
xor
add
insb
fwait
mov
cmpsb
scas
clc
adc
xchg
inc
sub
mov
pop
pop
into
scas
sub
sub
mov
xchg
mov
imul
bnd
sub
cmp
repz
popf
inc
pop
rcll
sbbb
adc
adc
rcrl
outsl
les
xchg
lods
pop
fdivl
adc
jo
sbb
cmp
rcll
sbb
int3
adc
movsl
dec
loope
push
push
repnz
dec
add
out
xchg
clc
inc
lea
addr16
ret
inc
mov
sbb
sarb
rolb
sahf
pop
int
loope
xor
sbb
int
pusha
mov
jp
mov
ds
sbb
lea
pushf
es
sbb
in
sub
cmc
subl
subl
mov
out
popf
add
mov
cmpsb
cltd
hlt
jbe
scas
jle
xchg
pop
int
or
xchg
or
push
jo
cmpsl
lds
dec
outsl
add
jl
cmp
call
mov
inc
es
adc
outsb
outsl
xchg
jg
xchg
sarl
jg
pop
data16
mov
sahf
movsl
idivb
fadds
lds
or
repz
mov
jo
adc
jb
jbe
std
sbbl
jbe
addr16
sub
or
xor
pop
mov
les
mov
arpl
xchg
cmp
adc
cmc
mov
fisubl
mov
and
or
movsb
push
aaa
mov
sbbl
sub
hlt
adc
inc
inc
dec
mov
imul
out
push
pop
iret
repz
add
sub
dec
push
out
addr16
aad
mov
fsubs
mov
or
insb
pop
xchg
fmul
test
andl
insb
mov
mov
add
or
mov
lods
sbb
in
push
popa
mov
or
pop
rol
xor
pop
push
shll
aam
movsb
mov
je
das
rorb
int3
pusha
rorb
xor
xchg
stos
loope
maskmovq
negl
mov
jo
lock
sub
lahf
mov
xchg
xor
ret
std
mov
or
nop
jbe
pop
ret
gs
stc
test
mov
dec
cmc
ds
xchg
push
inc
vandps
mov
xchg
ds
jo
dec
jno
lea
pop
imul
std
lds
mov
popa
shll
frstor
jecxz
cmp
xchg
push
lock
sti
sub
ret
pop
jo
arpl
stc
stos
int
test
rolb
or
add
out
mov
pushf
out
fnstsw
push
xor
icebp
loop
jg
jae
lods
dec
pop
xchg
mov
cmpsl
into
jg
out
enter
fists
dec
ret
dec
pop
pop
fcomip
xchg
int
ret
mov
std
sub
push
xorl
inc
pop
adc
dec
stos
add
out
cmp
fsub
jmp
inc
mov
jl
mov
jle
or
push
sub
loope
shll
int3
fstp
xor
fidivs
pop
mov
push
out
jb
lret
mov
ss
pop
inc
push
stos
mov
les
test
movsb
pop
xchg
mov
fnstenv
roll
cmpsb
xlat
mov
jno
cmp
out
fwait
mov
hlt
mov
mov
cltd
cmpsb
aaa
jl
pop
or
xchg
std
cmp
stos
test
call
xor
push
insl
dec
jae
loope
call
mov
or
xor
xor
mov
xchg
out
int3
iret
cltd
icebp
test
push
out
and
xor
push
xchg
shll
jge
xchg
iret
rorb
mov
out
mov
push
lret
adc
and
jp
pop
rorl
data16
pop
cmp
pop
loope
mov
jecxz
movups
orl
pusha
pop
jge
daa
xchg
sti
fsts
inc
stos
xor
mov
je
repnz
dec
loope
int
sahf
jnp
add
pop
sarl
mov
lret
in
iret
xchg
dec
mov
mov
cmp
roll
icebp
cmc
inc
and
ljmp
das
lods
sbb
repz
shlb
and
mov
xchg
mov
data16
mov
push
mov
pop
ds
cmp
gs
pop
xlat
dec
rolb
negb
ljmp
arpl
das
dec
aad
fdivrl
fistpl
add
pop
push
ss
cs
sub
js
push
xor
call
mov
ljmp
arpl
sbb
mov
xchg
adc
adc
ljmp
dec
xchg
shrl
movsl
ja
push
push
xchg
mov
xchg
or
mov
bound
mov
into
mov
jecxz
lods
pop
fbstp
iret
xchg
inc
cmp
mov
in
jae
adc
jnp
fistl
push
cwtl
or
lods
in
aam
popf
fldenv
add
adc
sub
rclb
test
mov
icebp
js
sub
dec
ret
cmpsb
je
int3
lret
sub
aam
imul
xor
outsl
scas
fdivrs
mov
xchg
jge
fists
pop
fs
mov
pop
dec
pusha
shlb
sbb
jmp
cmp
loope
push
pop
pushf
xchg
or
xor
mov
mov
cmp
ljmp
pop
xor
jmp
pop
subl
jns
cmp
add
sub
cli
mov
xchg
jne
ljmp
mov
cmp
xchg
packuswb
jle
or
xchg
ss
push
repnz
add
jge
or
or
or
lahf
aaa
fists
js
cmp
push
int
cli
cmpsb
fldenv
jbe
pop
pop
pop
lock
adc
push
int
aad
mov
jbe
mov
cmp
lock
xor
cmpsl
add
or
jne
ret
clc
xchg
xchg
dec
mov
jle
add
push
out
push
loop
call
fcomps
adc
jl
jb
ljmp
pushf
jae
xor
xchg
repnz
or
xchg
test
sbb
lret
pop
stc
das
sbb
jnp
inc
xchg
pop
test
jg
push
aaa
cmp
test
mov
lret
imul
sbb
pushf
fildll
cmp
addr16
pushf
lods
mov
cmpsl
and
cmc
push
dec
mov
scas
add
or
add
push
popa
push
std
out
out
jecxz
imul
in
adc
lretw
cs
adc
xchg
or
int3
in
nop
iret
and
fstpl
out
pop
xchg
fdivl
movsl
sub
es
shll
mov
mov
cld
data16
mov
pop
out
xor
stos
xchg
mov
cmp
dec
cli
leave
mov
cmp
cwtl
mov
dec
jg
inc
or
push
ja
movsl
int3
add
outsb
jae
cmpsb
lret
es
push
pusha
mov
enter
xor
cmp
push
adc
loope
pop
push
cmp
filds
inc
lea
lods
jbe
mov
hlt
cld
insb
outsl
lcall
dec
movsl
out
jnp
cmp
add
xchg
and
scas
jle
leave
or
nop
and
add
jbe
mov
lods
mov
jl
fimull
imul
dec
js
pusha
in
xor
nop
adc
cltd
mov
out
jg
push
inc
pop
leave
mov
or
lret
mov
lods
jns
pop
and
stc
scas
mov
dec
mov
pop
cltd
xchg
cld
ret
out
loopne
lret
rorl
inc
push
decl
call
movsl
out
les
movsl
mov
mov
filds
outsb
cld
mov
sbb
arpl
sub
outsl
xor
test
negb
aas
xor
sbb
push
pop
xor
pushf
js
fadds
cmpsl
or
sub
cmc
das
add
jg
pusha
sub
pop
iret
mulb
nop
xor
jo
push
push
ss
lea
cwtl
ret
pushf
mov
xor
sbb
mov
cmpl
decl
sub
xchg
sub
jp
pop
add
movsb
and
arpl
cs
jge
mov
scas
mov
mov
pusha
adcb
jbe
mov
jbe
std
dec
xlat
lcall
xchg
pop
mov
mov
sub
sub
jl
out
movb
jne
adc
xchg
push
insb
mov
cmp
hlt
mov
pop
xchg
ret
xchg
and
out
dec
pop
pop
mov
xchg
and
cmc
dec
fimuls
sbb
sti
mov
adc
nop
sbb
add
adc
adc
mov
ss
jg
and
and
pop
and
xlat
cli
inc
loop
mov
mov
scas
ret
incl
or
mov
test
mov
and
xor
xchg
les
jo
sahf
mov
pop
inc
fstpl
loopne
pop
inc
sahf
scas
test
ds
xchg
xchg
inc
push
rol
cmp
push
adc
mov
adc
xchg
cmp
fimuls
push
fsubs
mov
dec
sarb
frstor
push
mov
cmc
adc
mov
testb
mov
std
shl
arpl
inc
insb
push
dec
fistpl
add
sbb
imul
movsb
jbe
fs
pop
push
mov
cltd
dec
daa
mov
mov
mov
cmc
arpl
cltd
addr16
das
sub
mov
inc
xchg
js
adcb
push
cmp
mov
adc
and
and
cmpsb
cli
in
inc
mov
pop
js
mov
mov
arpl
dec
jge,pn
xchg
daa
lahf
fistps
pop
xchg
out
push
sub
jns
jo
cmp
push
mov
outsl
sub
jecxz
in
fs
adc
push
mov
xor
pop
jb
push
movsl
fs
jne
jle
fisttps
hlt
inc
stos
cli
ja,pt
dec
shll
push
dec
mov
rorl
lea
divl
and
out
push
je
pop
add
je
and
pop
mov
add
loop
pop
sub
aaa
pop
pop
movsb
call
and
jecxz
ja
and
orb
sub
rcr
mov
subb
jbe
jmp
push
ret
xor
dec
imul
out
push
cmp
ret
and
inc
mov
in
lds
add
cli
das
and
jg
dec
repz
lods
push
out
pushf
ds
in
cmpsb
mov
pop
sbb
or
jno
cmpb
or
outsl
dec
or
push
icebp
fwait
inc
xchg
arpl
fwait
sub
mov
ja
lea
pop
ret
mov
push
rcll
test
ja
test
lods
repz
adc
sbbb
push
lods
xor
mov
dec
pop
or
sub
lcall
mov
data16
mov
mov
jge
sub
into
cmpsl
push
add
mov
xor
sbb
ret
xchg
jo
mov
std
fdivrl
outsl
sahf
inc
jl
add
mov
ja
testl
inc
loope
sbb
add
xor
sub
xchg
cmc
mov
es
mov
jle
or
jecxz
xchg
and
mov
pop
jo
aas
out
cmp
dec
jb
sti
js
rolb
fucom
pop
ds
inc
jnp
mov
push
jnp
sahf
mov
ja
js
std
xchg
ss
inc
je
es
fildll
mov
xchg
pop
imul
loopne
push
sbb
jmp
cmpsl
cmp
int
test
xor
cmp
cmp
les
or
mov
movsb
scas
or
push
pusha
adc
jns
mov
mov
adcl
dec
xchg
push
out
and
ds
mov
mov
lcall
sarl
lock
sbb
nop
fistl
scas
lods
bnd
push
or
daa
lret
push
or
js
scas
fmuls
adc
sbb
sbb
mov
aaa
mov
outsb
loopne
jns
inc
jns
or
dec
add
xchg
pop
jne
icebp
push
faddl
ret
jl
push
push
into
or
pop
iret
mov
cmp
shl
jns
mov
xchg
push
jb
xchg
icebp
lahf
movsb
repz
mov
test
cs
js
or
nop
je
push
pusha
adc
inc
loopne
movsl
push
adc
imul
rep
sbb
cli
stc
or
movsl
inc
movsl
push
cwtl
inc
mov
or
xor
sti
jno
fmuls
lahf
sarl
xor
add
pop
add
pop
and
fcoml
inc
ljmp
pop
sbb
aam
mov
movsb
mov
sbb
mov
shll
mov
pop
loope
pop
sub
ret
jbe
iret
xchg
adc
addl
gs
and
jmp
add
test
bound
les
sbb
cmpsl
iret
mov
jmp
inc
testw
mov
inc
lea
imul
xor
rcrl
xchg
lock
xchg
and
xor
inc
xchg
daa
stos
fnstsw
cmp
cwtl
push
shlb
popf
inc
ret
cmpsb
mov
movsl
in
inc
push
mov
mov
int3
pop
sub
cld
imul
into
pop
inc
push
fwait
mov
in
jae
shll
adc
inc
mov
cmp
insb
and
add
jg
push
pop
inc
push
addb
fldt
or
out
pop
out
out
push
lods
pop
cmc
mov
add
push
leave
inc
inc
mov
sbb
push
rcrb
xor
pop
popa
sbb
out
adc
movsb
pop
dec
ljmp
jb
mov
xchg
inc
jae
andl
add
sub
ret
fs
fdivs
cwtl
pop
in
aas
push
xor
push
mov
test
lds
ds
in
mov
aaa
add
sbb
cmpb
lock
mov
rol
jno
adc
dec
push
jg
imulb
xor
loopne
test
mov
shll
cltd
cmp
xchg
outsl
pop
mov
jl
arpl
mov
dec
inc
mov
ja
ja
sub
hlt
int3
xchg
mov
in
add
sbb
mov
int3
mulb
cmp
rorl
ficompl
mov
or
and
add
push
popa
das
jp
fcomip
out
scas
icebp
mov
dec
pop
push
inc
repz
push
lods
jae
mov
cwtl
mov
flds
je
imul
push
loop,pn
leave
pop
mov
icebp
stc
inc
xchg
out
mov
sbb
out
mov
xchg
push
subl
out
das
cmp
mov
cs
aas
push
lods
andl
cmp
push
cmp
les
popa
lods
cmp
out
sbb
mov
fs
dec
int3
sub
jle
repnz
push
cmp
pop
pop
jecxz
sahf
mov
or
push
mov
iret
and
xchg
out
mov
push
pop
sub
icebp
dec
pop
push
testl
inc
jbe
dec
add
xor
cmp
pop
xlat
push
xor
or
jp
push
dec
sbb
pop
mov
xor
mov
inc
pop
mov
vpcomb
test
outsb
cwtl
loope
addr16
cmc
cli
lcall
inc
adcl
mov
mov
mulb
in
adc
movsb
cmp
add
cmpsb
scas
fdivl
jg
xor
sbb
xchg
inc
cmpsl
mov
and
dec
pop
inc
cltd
cmp
cmp
js
cmpsb
retw
sub
sub
ud0
xchg
int
outsb
adc
xchg
mov
dec
adc
push
lret
cmp
pop
pop
insl
pop
cmp
inc
addl
imul
movsl
sbb
and
popa
or
inc
jbe
cmp
lahf
sub
clc
insb
xor
adc
pop
push
data16
jae
enter
icebp
xlat
in
and
jmp
fidivl
cs
stos
inc
clc
pop
sub
jecxz
jmp
subl
pop
cmp
and
sbb
daa
xchg
mov
sbb
out
movsb
push
sub
aaa
jbe
outsb
pop
mov
call
or
imull
xchg
sbb
ds
mov
push
test
popf
jge
mov
mov
inc
jno
jg
cs
mov
mov
jne
cmp
shr
adc
sti
mov
pop
cmpsl
test
adc
dec
xor
mov
pop
or
and
movsl
imul
out
stos
movsl
sahf
push
test
push
mov
adc
sbb
inc
add
fsubs
xor
pop
stc
push
loop
cmpsl
push
jle
sub
and
out
ja
add
imul
mov
in
jno
fst
or
into
icebp
jne
mov
leave
rcrb
stos
lods
adc
imul
mov
cli
fnstsw
cmc
int3
insl
cmp
dec
xchg
clc
lcall
push
mov
scas
push
aad
adc
cmp
and
xor
cmpsb
mov
ds
dec
js
and
insb
nop
cmp
and
loop
stos
daa
rcl
jne
cs
adc
sub
sahf
and
inc
pop
xchg
arpl
sti
fdivs
mov
add
cltd
push
test
cmp
scas
adc
push
mov
inc
testl
or
sub
sbb
inc
cmpsl
adc
and
js
inc
orl
xlat
mov
pop
in
addr16
mov
jnp
add
outsb
rolb
mov
or
adc
aad
fsubl
xor
push
fs
dec
and
fwait
lds
sbb
out
fmull
cmc
fistps
inc
xchg
inc
ds
or
sbb
shlb
mov
adc
and
sahf
pop
push
push
push
inc
xor
mov
jne
and
mov
fildl
cmpsl
aad
pop
mov
mov
sti
mov
cmp
xor
add
mov
mov
xor
int3
lods
inc
call
aad
mov
adc
pop
scas
jp
mov
loop
cmpsl
or
and
or
mov
fst
pop
add
lahf
jae
cmpxchg
out
add
mov
xchg
shrb
or
xor
lret
xor
sahf
mov
scas
xchg
nop
pop
adc
sbb
stos
sahf
das
repz
pop
cwtl
clc
icebp
cmpsb
mov
inc
mov
nop
mov
jp
xlat
shr
pusha
pop
pop
ss
push
push
sbb
test
jnp
cmp
lret
jne
ja
push
xlat
lods
add
lret
lcall
cld
jo
scas
mov
dec
fstpt
xor
and
or
add
insl
ja
adc
ds
xchg
cmp
push
mov
popa
mov
dec
xlat
aam
hlt
imul
loope
fwait
add
inc
mov
xchg
aam
jmp
in
mov
shl
cld
sti
fdivs
fsts
inc
movsl
xor
and
loope
mov
sub
scas
in
jmp
icebp
idivb
and
and
sub
stos
mov
leave
dec
push
dec
insl
pop
es
jmp
sub
lret
mov
dec
scas
int
cli
push
xor
and
or
mov
add
cmp
out
and
flds
scas
int3
insl
push
mov
pusha
add
lods
dec
jecxz
ljmp
adc
push
push
jecxz
and
shll
enter
push
enter
rolb
ds
mov
lods
jmp
inc
outsl
xor
mov
mov
mov
icebp
sbb
js
pop
adc
cmp
imul
cmp
rorl
in
fildl
jo
sahf
lea
cmpl
jp
out
xor
inc
mov
out
or
jecxz
sbb
rcrb
cmpsb
mov
daa
adc
cmp
add
cmp
cmpsl
mov
les
repnz
push
das
ljmp
daa
pop
movsl
sbb
outsb
shr
mov
sarl
sahf
dec
lds
mov
arpl
add
bound
scas
rcl
pop
xor
dec
add
or
add
add
leave
mov
testl
scas
ljmp
orl
repnz
push
cmp
cs
fistl
pop
cmp
push
fstpt
fs
out
insl
mov
scas
mov
jmp
mov
lahf
sbb
pushf
sbb
sahf
xor
pop
cmpsl
out
mov
into
daa
ret
pop
imul
fwait
pop
pop
dec
jno
mov
dec
fcompl
push
sbb
adcb
dec
or
cmc
cmp
lcall
inc
repnz
jg
jae
sub
in
jo
sub
cltd
xor
aam
rorl
cmp
sbb
lcall
pop
push
mov
pop
dec
imul
div
push
popf
faddp
sub
in
jp
leave
and
mov
fwait
xor
pop
or
imul
mov
xor
cld
clc
out
lds
mov
shrl
jp
push
ljmp
out
cltd
mov
jnp
fldl
push
mov
mov
xchg
testl
dec
push
xchg
jo
mov
jp
imul
cmp
adc
mov
jl
mov
or
dec
mov
fucomp
inc
adc
jns
dec
dec
xor
add
or
xor
roll
imul
inc
push
hlt
fucomp
sbb
adc
or
xchg
mov
ret
add
insl
push
jns
shl
push
inc
jmp
mov
aad
into
jb
add
enter
mov
fists
mov
vmovapd
or
or
xor
clc
adc
es
cltd
jge
xchg
je
pushf
outsb
add
pop
cmp
clc
adc
in
inc
div
mov
add
adc
scas
inc
sbb
leave
dec
cmp
dec
add
into
outsb
scas
inc
fimuls
insb
xor
mov
jecxz
jge
dec
insl
lods
xchg
sbb
add
aad
fists
mov
popa
jns
mov
add
mov
push
mov
inc
add
in
fwait
aam
dec
call
pop
lods
in
mov
jl
mov
stc
popa
sti
imul
mov
mov
xchg
out
imul
iret
pop
clc
imul
lods
ja
cmp
mov
cld
fisttpll
adc
icebp
ss
fcmovne
cmp
fdivrp
jmp
das
fwait
lcall
in
mov
add
stos
push
clc
sbb
xchg
sahf
dec
mov
inc
jo
pop
in
fsubp
out
mov
lret
fwait
mov
add
lods
push
pop
jb
lcall
add
jnp
aas
add
pop
sub
add
jle
mov
adc
nop
insb
loope
pop
out
cmp
adc
clc
add
and
jnp
insb
jl
sbb
push
lods
mov
sbb
xchg
and
inc
mov
or
roll
fstpl
imul
sbb
nop
inc
mov
sbb
in
outsb
ficoml
test
mov
imul
push
push
cmpl
daa
shl
in
daa
add
adc
test
or
adc
xchg
aad
jge
adc
decb
jecxz
std
fsubr
and
inc
lock
jecxz
jb
lds
jae
dec
jb
mov
ljmp
xchg
test
out
mov
push
push
cmc
sub
mov
cltd
pop
fisttpl
loopne
dec
and
adc
mov
or
addb
inc
jbe
out
les
js
repz
mov
mov
pop
fs
test
stos
ret
adc
xchg
shl
mov
xchg
movq
fwait
add
test
jle
ret
dec
dec
xchg
cli
xchg
imul
pop
cmp
mov
sub
divl
xor
in
out
adc
xor
imull
lds
jge
mov
es
add
add
test
or
dec
inc
pop
shrl
dec
mov
jmp
or
adc
jb
into
jle
lret
pushf
and
jle
cmp
and
cs
and
out
or
push
stos
inc
sub
bound
scas
repnz
xor
imul
add
pop
repz
cwtl
adc
push
xchg
jne
shlb
xor
cmp
cmp
scas
movsl
sub
cmc
and
scas
test
fdivrl
loopne
test
jbe
pop
cld
aaa
movl
in
dec
pop
pop
test
leave
pop
or
xor
pop
rcr
inc
imul
and
add
fisubrs
mov
jmp
in
jmp
out
add
cmp
pop
lock
ds
fsubl
fadds
mov
dec
adc
shl
push
pop
mov
jmp
xor
aad
pop
dec
ret
xor
mov
sub
nop
cli
sub
sbb
mov
imul
and
jbe
enter
data16
rorb
cmp
cmp
je
popf
xchg
pop
ljmp
cld
dec
add
stc
xor
mov
or
ss
mov
xorl
pop
xchg
xor
inc
stc
jae
pop
pop
addl
call
cltd
dec
add
test
cmp
cmpsb
popf
es
jae
enter
sahf
pop
addr16
fnstcw
pop
push
cmp
dec
pop
pop
cmp
xor
nop
lock
push
or
pop
and
aaa
lcall
push
mov
into
std
cltd
mov
lcall
or
popf
prefetcht1
icebp
xchg
cmpsl
xchg
add
stos
dec
sti
imul
daa
mul
imul
loopne
jno
cmp
in
in
aas
cmp
push
negl
adc
ret
fwait
push
mov
sbb
push
cmp
xor
jne
mov
in
mov
and
cmpl
out
mov
data16
mov
jmp
inc
aaa
ljmp
jl
or
sub
call
jmp
ret
pop
dec
int
subb
jecxz
sub
xor
ror
cmp
jo
push
dec
inc
sahf
mov
pop
std
mov
mov
mov
inc
jmp
or
aam
mov
je
sub
in
mov
add
cmpb
cld
push
or
mov
pop
test
mov
js
ja
scas
or
loop
fcmovnbe
rclb
test
mov
mov
stos
dec
jno
imul
xor
in
cmp
mov
mov
popf
adc
jge
test
enter
sub
pop
inc
mov
cmp
add
flds
and
push
xchg
xor
xchg
xchg
inc
sub
loopne
pop
in
mov
sub
sub
mov
push
pop
inc
jo
mov
mov
shlb
xor
mov
sub
add
out
push
in
jae
xchg
mov
dec
push
mov
jecxz
xor
popf
or
popa
cmp
push
xor
and
xor
and
test
dec
scas
jmp
mov
test
imulb
pop
cmp
inc
stos
fdiv
sbb
inc
mov
mov
jnp
push
ret
in
in
pop
mov
in
or
fwait
mov
adc
or
mov
push
add
cmc
push
mov
mov
popa
inc
movsl
or
in
loopne
mov
gs
mov
std
outsl
js
push
out
nop
movsl
mov
lret
adc
ljmp
xchg
push
movsl
int
sub
lea
pop
test
cmpsb
xchg
push
xchg
rcl
mov
hlt
idiv
les
inc
cmp
xchg
outsb
pop
les
jbe
xchg
hlt
fwait
pushf
test
outsb
lock
mov
in
mov
push
sub
js
xchg
ljmp
loopne
cld
iret
test
lods
mov
movsb
or
and
test
shrl
inc
adc
imulb
mov
daa
mov
xorl
dec
jnp
cwtl
push
sub
push
mov
iret
xor
loope
pop
xor
clc
iret
dec
scas
sahf
lret
pop
xchg
jne
xor
xchg
mov
xchg
es
push
inc
les
mov
mov
sbb
out
rcrl
push
push
scas
adc
or
stos
dec
sarb
xor
jae
push
pushf
xor
rol
cmp
lahf
aam
enter
fildll
mov
cli
xchg
les
adc
and
cltd
jle
inc
mov
idivl
push
fdivr
icebp
call
jecxz
push
hlt
xchg
xchg
push
pop
int
pop
push
jb
sbb
mov
dec
pop
lret
sub
into
mov
push
add
repz
push
pusha
dec
xor
mov
dec
add
fcmovb
cmp
stos
fisubl
dec
scas
loope
and
daa
push
push
sbb
mov
fs
jg
cwtl
dec
ret
add
data16
divl
mov
mov
add
and
arpl
dec
cmp
cmpsb
pop
pop
inc
mov
popf
fdivl
cmp
sub
into
sub
xchg
cmp
test
mov
dec
aad
push
fs
sbb
mov
sti
cltd
dec
mov
into
mov
out
sub
jmp
sbb
test
cmpsb
cmp
out
rcrl
push
js
fildl
adc
arpl
ljmp
fists
test
lods
jle
jl
inc
fdivrl
adc
mov
push
lock
pusha
insb
cmp
lcall
push
xlat
nop
out
fldt
mov
mov
xor
add
jp
mov
add
mov
dec
roll
pushf
fwait
in
xor
fmuls
inc
clc
sbb
inc
jecxz,pn
cwtl
push
inc
fdivr
imull
adc
adc
cmp
sbb
jne
xor
or
sbb
iret
xlat
push
jne
jnp
add
stc
sub
divb
sahf
push
mov
dec
cwtl
jo
cmpsb
jl
mov
mov
fs
mov
jge
jl
push
test
push
test
sbb
xchg
clc
enter
rorb
jae
pop
pop
stos
imul
mov
xchg
pop
mov
aaa
leave
lret
mov
in
lret
out
aaa
mull
nop
aam
pop
nop
shr
aam
jg
out
das
es
iret
ret
and
cmc
add
stc
sti
icebp
fst
and
lods
fwait
jb
mov
pop
xchg
xchg
xchg
sbb
je
std
xchg
fwait
mov
dec
mov
push
je
mov
sub
dec
xor
loop
stc
sub
jbe
sbb
lock
xchg
sarl
cmpsb
hlt
dec
fidivl
out
push
add
dec
mov
scas
mov
test
cmp
movsl
in
xor
lcall
push
fstl
push
push
out
mov
ss
jle
adc
fwait
mov
test
sub
gs
lds
cwtl
mov
dec
cld
jae
and
outsl
jae
incb
sbb
fidivrl
inc
arpl
mov
bound
std
xchg
push
inc
adc
mov
rol
xor
test
dec
add
and
dec
sbb
push
pop
add
and
mov
cmp
add
popf
jb
inc
cld
adc
les
das
sbb
cmp
popf
cmpsl
outsb
add
lcall
cmpsb
mov
test
std
shl
cwtl
jbe
add
jae
jne
mov
add
scas
les
cmp
mov
jg
test
or
push
xlat
movsb
in
push
mov
arpl
dec
lds
push
outsb
mov
sti
int
mov
orl
mov
in
data16
sub
inc
aad
jecxz
arpl
popf
inc
xor
xor
cmp
dec
pop
push
out
fucomi
es
mov
adc
push
fs
mov
pop
pop
cmp
test
scas
call
in
sub
dec
inc
fwait
lods
rcrl
inc
notl
in
add
mov
xchg
jo
inc
into
in
push
lock
scas
cmpsb
xchg
mov
popf
push
sbb
orb
out
pushf
cli
sbb
bound
je
mov
fldl
dec
cmp
inc
pop
sub
fsubrp
addr16
out
sar
es
fidivrs
sbbb
pop
dec
pop
lret
clc
adc
jbe
sub
xor
pop
mov
loopne
mov
ss
cmp
cmc
ss
and
add
xor
mov
xchg
ja
push
fstl
pop
orl
mov
jmp
push
push
lds
int3
in
std
adc
xchg
lahf
sub
lea
jp
dec
xchg
xchg
cmc
pop
dec
jmp
add
jecxz
and
xchg
inc
fdivr
test
and
sbbb
and
pushf
inc
inc
and
jle
in
sbb
xor
pushf
popf
lret
dec
leave
fs
mov
repnz
cmc
cmc
scas
xchg
dec
jmp
and
and
popa
xchg
jmp
cwtl
adc
movl
add
jb
xchg
jb
and
xchg
std
inc
fwait
test
push
push
push
jbe
pop
push
mov
mov
mov
add
das
in
or
loop
cmpsb
or
in
loopne
cmpl
inc
mov
arpl
pop
mov
stos
jp
hlt
mov
mov
dec
aas
xor
rorb
sub
pushf
xchg
mov
js
mov
dec
ss
xor
mov
xor
cmp
test
push
adc
mov
add
fisubrs
je
push
imul
pusha
xor
mov
adc
inc
xchg
or
xor
mov
aam
scas
cmp
sbb
out
inc
in
cmp
fwait
jne
sub
jge
repnz
out
push
fsubs
jae
mov
dec
fnstcw
mov
add
icebp
cltd
sbb
cmp
sbb
mov
std
stos
mov
cmpsb
sbb
and
jbe
gs
xchg
rolb
shl
dec
loopne
pop
pop
mov
cmp
fstl
shrl
xor
loope
out
cmp
das
jg
hlt
popa
dec
imul
and
or
ljmp
sldt
adc
adc
sub
xchg
push
stos
push
daa
pop
arpl
mov
sahf
icebp
stos
mov
adc
mov
sub
roll
rcll
sarl
scas
and
or
fists
xchg
fadds
pop
hlt
fcomps
xchg
mov
add
out
sarb
or
and
jg
int
cltd
repz
inc
sbb
pop
or
cmp
mov
mov
sbb
aas
out
or
jl
lods
call
rcrb
mov
sarl
push
inc
in
pop
scas
inc
es
or
bound
dec
les
and
cli
into
mov
cmpsl
push
cmp
inc
jmp
xchg
mov
popa
arpl
mov
xchg
pushf
push
sub
push
into
test
push
std
or
jg
sub
insl
xor
lea
js
shr
scas
lcall
add
subb
mov
push
dec
adc
jle
es
push
js
add
out
sub
inc
outsl
in
dec
repz
scas
int
and
push
int3
xchg
cmp
dec
ret
xchg
pop
mov
test
mov
mov
hlt
mov
lahf
sbb
sahf
pop
test
fnsave
sarb
subb
xor
ja
jmp
ss
stos
cltd
popf
inc
sti
xchg
mov
cmp
daa
and
mov
or
nop
std
xor
push
cmp
and
test
dec
fnsetpm(287
ljmp
push
sahf
mov
mov
mov
shll
mov
push
sub
imul
mov
lahf
push
and
test
mov
insb
hlt
xor
jo
xor
cmc
addl
jecxz
jbe
cs
xchg
mov
enter
mov
fstpl
xor
dec
dec
xorb
cmp
fldcw
push
sub
cs
pusha
les
sub
dec
jecxz
xchg
nop
xor
inc
and
add
ss
push
jnp
dec
jns
aad
lods
cwtl
loopne
xchg
mov
adc
xor
pop
xchg
push
test
mov
ds
repz
aad
and
dec
inc
xlat
mov
arpl
jl
xchg
or
mov
sub
mov
aad
xchg
popf
out
cmpsb
je
out
xchg
xchg
arpl
leave
inc
mov
test
fcmovnu
lods
mov
lahf
mov
mov
inc
lea
in
mov
push
add
mov
or
mov
jo
lds
mov
loopne
push
popf
movsb
aaa
xor
andl
and
xor
or
pop
es
out
jmp
jl
jbe
sub
mov
out
xchg
cmpsb
jmp
inc
or
aaa
loop
test
dec
ficomps
ljmp
mov
mov
loopne
lret
test
lods
subl
cld
add
les
add
push
arpl
jg
stos
jle
mov
icebp
xchg
pusha
rol
mov
test
or
out
mov
pop
mov
dec
sbb
rcl
push
sti
addr16
cwtl
decb
push
das
in
pop
in
arpl
ret
loop
das
pmaddwd
jno
mov
fldt
fildl
inc
dec
xor
cmp
xor
push
int3
mov
outsb
lret
stos
lcall
jp
sub
add
adc
add
int
xor
push
sbb
mov
imul
popf
movsl
sub
dec
inc
mov
rcrl
cmpsl
loop
inc
xchg
testb
ret
in
push
outsb
jno
imul
mov
lcall
cmpsl
dec
adc
in
testl
pusha
loop
stos
lea
mov
inc
cld
dec
pop
inc
mov
int
andl
dec
pop
sbb
imul
fistpl
cmp
sbb
adc
mov
and
mov
jno
or
outsl
daa
mov
xchg
push
loop
ss
scas
shll
fsubr
arpl
fsts
fiaddl
jbe
push
mov
mov
cmp
enter
and
xor
sbb
popf
inc
sarb
and
cli
sti
sub
mov
icebp
jbe
jmp
lret
mov
jae
pop
cmp
sub
daa
int3
jge
xchg
cs
scas
test
ds
jecxz
pop
jge
mov
jno
cld
and
das
dec
stos
nop
inc
cltd
xchg
sub
mov
ss
adc
and
and
test
lods
in
or
addb
lods
adc
sub
andb
push
aad
sbb
mov
popa
mov
fcomps
or
daa
in
insl
sbb
in
add
cmp
xchg
movsl
xor
ret
popf
mov
lret
jae
dec
and
push
pop
add
movsl
test
push
mov
cmp
iret
adc
out
sbb
sub
mov
dec
insl
mov
jmp
insl
pop
sbb
cld
out
jo
adc
out
or
pop
aad
gs
in
or
js
add
jbe
sbb
jle
mov
pop
popf
cmp
xlat
dec
dec
fcomps
test
push
pop
add
sbb
daa
ja
movsb
jge
rorb
fbld
gs
cmpsl
lods
sti
ss
scas
mov
mov
sti
adc
jae
xchg
sub
pushl
aaa
pop
push
sub
push
fidivs
push
cmp
dec
in
add
fsubr
je
jnp
add
outsl
mov
nop
aas
inc
push
aam
out
sub
iret
cmpsb
sub
pop
add
fsts
fwait
jge
mulb
shrl
mov
mov
sar
jne
cmp
ftst
adc
jl
ret
dec
repnz
imul
out
mov
mov
xchg
pop
jb
and
data16
stos
jle
sarb
xchg
mov
andl
cmp
add
xchg
mov
lods
lahf
pop
aam
cmc
int3
inc
cmp
pop
xor
sbb
cmp
sbb
movswl
jns
cltd
call
cmp
imul
pop
cmp
in
xchg
mov
movsb
pop
jne
mov
or
loope
and
rorl
xchg
push
scas
fcoms
sar
sub
out
subb
sub
mov
ljmp
jnp
icebp
inc
pop
aam
dec
out
std
sahf
out
xchg
cmp
out
xchg
fs
popf
dec
push
xor
rcr
dec
adc
daa
cld
mov
cltd
call
clc
popf
xchg
sbb
dec
in
or
fldcw
mov
push
addb
jne
outsl
daa
das
ret
loopne
jb
andl
cwtl
sub
pop
fcmovne
addb
xor
ficompl
adc
shll
dec
xchg
cmp
leave
xlat
pop
lret
pop
inc
imul
les
jecxz
notb
ror
adc
sub
in
cmp
jle
push
sub
lret
aam
cmpsl
xchg
cltd
lods
pop
scas
xchg
push
shlb
sub
mov
or
dec
cwtl
cmp
mov
inc
pop
cmp
push
xchg
push
fidivrl
mov
cmpsb
es
sbb
scas
pop
shrl
int3
fsubp
shrl
shrb
xor
lret
push
out
push
dec
pusha
sbb
adc
test
mov
and
out
insl
adc
and
bound
loopne
and
jle
mov
push
cli
push
das
and
inc
cmp
or
shrl
pop
mov
dec
mov
or
lods
ret
jle
and
add
jno
ror
sbb
xor
jp
inc
cld
sbb
into
mov
pushf
inc
mov
daa
mov
stos
jnp
cld
mov
pusha
dec
push
cmp
inc
out
bound
bound
cmpl
jne
add
xchg
dec
fs
xchg
loope
imul
mov
pop
mov
insl
aam
out
pop
out
dec
or
or
jne
nopl
jmp
out
sbb
mov
cmpsl
adc
xchg
inc
int
lea
pop
out
or
mov
push
xlat
cwtl
mov
scas
out
mov
enter
cmp
js
aas
mov
in
rcrl
into
push
data16
adc
adc
loopne
pop
push
push
mov
ja
dec
adc
jns
mov
pop
aad
jbe
xor
gs
adcb
dec
mov
aas
jo
flds
mov
stos
lahf
mov
test
daa
cs
jge
lock
jb
mov
or
mov
and
cs
fnstsw
push
popa
cmpsb
jmp
mov
sub
pop
dec
fwait
xchg
fwait
lcall
int
mov
test
or
push
push
sbb
jmp
sbb
cmp
sbb
dec
mov
pop
or
xor
icebp
mov
ucomiss
adc
mov
xchg
xchg
sub
iret
mov
adc
xor
cld
lahf
cli
loopne
test
mov
sbb
add
cmc
hlt
std
or
xor
in
lods
jo
out
inc
add
sbb
cmp
cmp
inc
orb
or
sti
out
sbb
dec
outsb
out
popf
mov
cmp
xor
and
addr16
cmp
or
mov
pop
inc
in
add
test
inc
int
into
std
gs
mov
xchg
cmp
and
xchg
popf
adc
bound
int
sahf
andb
sbb
add
sub
add
and
cmc
xor
into
or
adc
lock
icebp
lret
cltd
pop
sub
add
mov
pop
jo
cmpsl
add
jecxz
sbbb
mov
push
inc
mov
sub
shrl
sti
or
dec
xor
xchg
cmp
mov
jae
cmp
in
mov
icebp
push
leave
fdivrl
test
mov
dec
call
cmpsb
dec
wrmsr
pop
pop
jmp
gs
adc
inc
add
cld
call
pop
lock
push
lret
sub
and
mov
or
mov
loop
nop
into
mov
sti
and
insl
jmp
adc
cmpsb
inc
mov
mov
notl
xorb
in
add
adc
sbb
scas
lods
pop
push
mov
add
xorl
push
cli
ja
in
iret
lahf
je
adc
into
or
int
les
dec
outsb
and
sub
pop
repnz
pop
in
ss
mov
daa
mov
je
scas
xor
cld
pop
inc
lea
enter
shll
pop
adc
aam
pusha
mov
adc
inc
outsl
add
sbb
push
int3
imul
xorl
stos
stos
or
outsl
jo
dec
hlt
roll
mov
int
or
jae
icebp
jbe
stos
aaa
fdivrs
cli
sahf
jo
and
xor
out
outsl
mov
xlat
out
test
xchg
out
fdivrs
gs
mov
outsb
iret
push
adc
inc
icebp
out
push
jae
or
insl
outsb
in
mov
bound
xor
enter
jp
adc
inc
jns
cmp
or
cmp
xor
pusha
fs
jns
push
popa
jmp
roll
lock
int
cmp
mov
idiv
add
cmp
stc
stos
pop
movl
out
roll
fcomi
mov
adc
repz
fmulp
adc
xor
mov
mov
dec
es
and
add
wbinvd
out
rorb
lret
inc
xor
inc
arpl
dec
mov
xchg
jle
inc
pop
nop
xlat
loopne
xchg
mov
mov
jo
sub
adc
pop
mov
jle
sbb
arpl
mov
inc
popa
jp
pop
jne
icebp
loop
xchg
test
mov
mov
sub
mov
test
out
jo
aaa
push
mov
sbb
aad
je
mov
cmp
pop
mov
dec
lea
shr
loop
xor
hlt
dec
mov
subl
out
cmc
popf
push
jne
negl
insl
xor
cmpsb
ja
sbb
movsl
xchg
adc
sub
pop
sub
jle
jmp
add
lahf
jg
or
stos
pusha
mov
jge
jecxz
jbe
roll
and
cs
xchg
xor
xor
mov
add
lret
pop
bound
mov
decl
sub
push
cmp
pop
dec
mov
jo
fcoms
inc
pslld
repnz
in
std
push
loopne
mov
stc
push
xchg
mov
fdivrl
jns
cmp
out
cld
jbe
imul
lds
mov
daa
jno
add
out
mov
lods
data16
lsl
roll
jge
sbb
adc
xchg
push
and
and
test
adc
pop
sbb
jno
fmulp
movsl
faddl
xchg
shl
sbb
cmpl
cmp
movsl
adc
push
fwait
fs
sub
repnz
xchg
inc
pop
bound
inc
add
cmp
push
mov
adc
push
jo
jne
pusha
psadbw
in
xchg
inc
inc
jmp
adc
icebp
sbb
mov
add
xor
es
incb
inc
inc
enter
outsl
das
pop
sbb
push
cs
dec
repnz
sub
cld
mov
leave
dec
in
gs
idivl
pop
in
sbb
ss
mov
push
add
pop
add
inc
les
bound
cltd
inc
aad
mov
negl
outsl
dec
cli
jmp
mov
adc
or
cmp
mov
int
or
das
aad
pop
pop
pop
js
push
sbb
sbb
pop
or
lret
mov
scas
cmc
movsb
andl
scas
xchg
xchg
inc
test
cmpsl
ljmp
sbb
xchg
xorb
cli
enter
aad
pop
ds
insl
ljmp
xlat
jle
fnstenv
call
addr16
jno
cmp
es
add
sub
mov
inc
sbb
xchg
es
sbb
jbe
outsb
xor
fcomps
adc
enter
pop
rcll
stc
mov
xchg
jle
pop
les
pusha
or
xor
cmp
mov
pop
adc
jne
push
pop
outsb
mov
push
mov
ret
mov
pop
mov
cmp
sbb
push
pop
dec
and
jl
pop
sub
cli
fcmovnu
call
loop
clc
mov
jg
jg
jbe
sbb
add
push
arpl
lds
dec
inc
fisttpll
imul
mov
test
jbe
mov
popa
iret
add
shll
lret
cmp
stos
dec
xor
outsl
rcrl
insl
adc
flds
ljmp
flds
rolb
cs
or
mov
inc
lods
pop
mov
jbe
divb
cld
or
adc
cmc
dec
movsb
jno
sahf
enter
stc
dec
and
scas
cmp
jg
jno
mov
mov
sub
fxch
fnsave
mov
in
rcr
sub
cld
shll
clc
mov
out
cld
or
repnz
outsb
lcall
jmp
xchg
nop
scas
or
xchg
rep
jecxz
cli
and
leave
sub
fbld
jo
fdivrl
adc
rorb
push
mov
notl
std
xchg
out
jo
or
or
cld
xchg
stc
into
and
push
lock
dec
sbb
lods
mov
mov
mov
pop
inc
xor
xchg
xchg
add
sbb
adc
mov
jecxz
jns
xchg
xchg
push
andb
nop
mov
push
add
and
sub
repz
dec
std
and
cmp
cmp
mov
xchg
pop
clc
xchg
popf
dec
xchg
and
nop
les
adc
inc
or
xor
mov
mov
cmpb
out
je
mov
jmp
add
add
outsl
into
call
and
xor
outsl
ja
out
into
das
aas
mov
jmp
xchg
sub
mov
mov
pop
mov
or
fists
imul
inc
fwait
out
inc
decl
ljmp
aad
ss
xor
in
sbb
mov
int
dec
lods
popf
jbe
push
sahf
adc
clc
sub
xor
ret
insb
repnz
adc
pop
cmp
adc
sbb
in
fmuls
xchg
adc
adc
lods
pop
jb
lds
repnz
fdivr
cwtl
cmp
movsb
jae
sbb
das
sub
push
push
shlb
lds
cmp
scas
notb
adc
cmp
scas
dec
xchg
dec
jecxz
popf
dec
or
call
bound
mov
cmp
lock
hlt
imul
adc
in
cmp
ficomps
xor
arpl
das
rclb
aaa
clc
cmp
loop
mov
outsl
movsl
sarl
lahf
lret
push
enter
mov
push
shlb
test
ljmp
cmp
out
call
add
aas
lcall
divl
mov
into
clc
pusha
sbb
fcmove
ds
add
jmp
mov
jbe
xor
mov
xchg
pop
add
inc
lret
jle
movsb
jns
dec
mov
mov
dec
popf
dec
xor
test
or
insb
and
add
xchg
jl
sbb
sar
je
aam
or
insl
les
push
std
sti
push
dec
xchg
xchg
test
dec
xor
mov
mov
inc
pop
mov
sbb
in
cmp
outsb
sub
inc
dec
testl
cmpsb
cmc
push
cmp
adc
xchg
popf
fidivrl
mov
mov
pop
ds
rep
pop
hlt
and
and
push
dec
or
mov
stc
daa
pop
cld
outsl
aad
xchg
push
dec
imul
lods
cmp
mov
fwait
xor
mov
shll
sub
mov
mov
pop
push
dec
sbb
repnz
clc
fisttpl
add
in
sbb
stos
lahf
ja
gs
push
and
xchg
add
pop
sub
dec
and
cmc
sbb
out
pop
xchg
sub
xchg
jle
sbb
inc
hlt
data16
dec
mov
mov
fdiv
stc
js
adcl
loopne
jecxz
jp
lods
scas
filds
out
sub
adc
in
stc
insl
ficoml
cmpsb
xchg
mov
je
pop
addr16
push
cmc
pop
ret
dec
push
stc
scas
insl
xchg
cmp
arpl
mov
dec
cmp
mov
jmp
sub
cmc
jp
movsl
ret
cs
ljmp
xor
mov
and
out
es
jne
or
pop
add
ds
movsl
dec
push
sub
cwtl
lret
add
jp
aam
cli
xchg
push
jp
jp
mov
mov
roll
sub
mov
andb
call
sbb
fistpll
inc
out
std
movsb
fmull
mov
mov
sub
jg
dec
ss
and
dec
das
or
mov
mov
mov
fcmovnbe
cmp
xchg
mov
sbb
aam
adc
pop
add
push
adc
je
sahf
jl
jbe
adc
lock
jmp
dec
push
lods
cmpsl
and
addr16
inc
popa
ja
sub
cwtl
frstor
sbb
and
xor
test
dec
aad
inc
aam
ss
dec
and
fldt
fisttps
cmp
xchg
mov
adc
rcll
add
mov
fidivs
and
jl
daa
or
data16
add
dec
into
in
in
pop
or
sbb
jnp
adc
adc
jle
push
lret
cmp
jg
add
mov
mov
jmp
rcrl
mov
fcomps
pop
sub
push
in
sahf
sub
mov
aam
outsb
lock
and
push
stos
cmp
sbb
pop
fidivrs
shll
xchg
in
adc
add
sub
mov
push
andb
jns
sub
xchg
aam
cmp
mov
mov
cld
repz
int3
into
mov
inc
out
insl
inc
jbe
sti
popa
out
mov
mov
in
pop
or
xchg
in
jno
mov
shl
and
daa
insb
mov
mov
and
sub
inc
cwtl
and
je
daa
lcall
lret
ss
mov
movsl
in
icebp
or
or
test
mov
cmc
adc
insl
sbb
imul
out
adc
rcrb
jo
sbb
fcomps
push
cmp
pusha
pop
or
and
pusha
ljmp
sub
dec
cmpsl
inc
cli
rcrl
sub
jae,pt
xchg
jmp
mov
jne
fsubrl
cltd
mov
jle
pushl
add
lcall
mov
push
xchg
and
cmp
mov
cld
ror
sarl
xchg
push
pop
xor
mov
faddl
hlt
daa
push
mov
xchg
repz
cmp
aam
mov
fstpl
mull
cltd
dec
pusha
mov
jae
mov
icebp
inc
sub
jp
out
movsl
scas
xchg
mov
mov
cmpsl
mov
lret
mov
loope
xor
stos
cmp
std
adc
mov
cmp
and
pop
fmull
shlb
fcmovnbe
popf
pavgw
or
test
stos
loope
fs
push
ret
clc
xchg
xchg
sti
test
mov
clc
xchg
loopne
cmp
call
sti
lock
xor
inc
or
lods
xchg
jle
mov
push
or
mov
aas
and
jnp
cmp
arpl
add
popa
lcall
out
out
fcomi
into
or
cs
sbb
jp
scas
pusha
cmp
popf
mov
mov
pop
pop
cmc
push
pop
cmpb
or
or
xor
jno
pop
push
vmovaps
test
shlb
inc
outsb
insl
sbb
loope
mov
cltd
xor
pop
out
mov
or
pusha
leave
dec
inc
add
cmp
mov
ror
repz
lret
and
iret
lahf
addl
pushf
xor
sub
mov
fsubrs
pop
inc
push
shlb
inc
in
outsb
add
fisttpl
test
rcll
mov
pop
andl
or
sbbb
sbb
pop
int
test
sub
jae
jg
adc
lret
daa
arpl
push
jge
rorb
loopne
out
pop
dec
push
out
fwait
movsl
imul
testl
lods
add
in
lret
xor
imul
or
inc
insl
flds
push
and
test
arpl
mov
fildll
aas
js
notb
xor
pop
cwtl
test
repz
loop
leave
in
fcompl
add
std
fcomp
push
or
or
aas
adc
sbb
and
push
in
iret
sub
rorb
mov
and
je
mov
dec
jno
int
xchg
popf
stos
lock
inc
lret
cmp
out
in
xor
aam
aad
stos
loopne
fs
dec
sbb
push
jmp
sbb
add
xor
xor
nop
test
inc
sahf
and
mov
xchg
ficoml
jge
daa
push
ljmp
xchg
push
jp
jb
pop
inc
push
or
lret
scas
push
rolb
orl
lret
lahf
mov
mov
lock
mov
rorb
hlt
pop
xlat
adc
adc
cmpsb
xor
dec
or
adc
xor
int3
push
cmc
pop
imul
sub
jne
pop
repnz
add
ret
and
add
inc
inc
mov
shl
xlat
mul
inc
ljmp
loopne
iret
mov
hlt
fistl
cmp
push
call
dec
sbb
inc
and
scas
dec
adc
rclb
mov
cs
in
clc
fidivs
mov
push
and
pop
in
dec
lret
pop
out
popf
dec
imul
sub
roll
xchg
and
jecxz
movsb
ljmp
cmpsb
arpl
cmp
cmpb
mov
and
dec
push
je
aas
idivb
scas
popf
push
pop
inc
sti
pop
imul
ror
addr16
int3
fldt
cmpsl
xchg
cmp
lahf
or
in
test
lods
xor
cmpsb
sub
push
lods
lret
jl
aaa
cmp
add
or
cmp
and
mov
jecxz
stc
xchg
hlt
lock
sti
pusha
add
push
inc
aaa
sbb
push
loop
movsl
cmp
inc
push
test
imul
in
lret
adc
test
cmp
test
cwtl
cmp
cmp
out
pop
iret
bound
xor
mov
mov
jp
adc
lock
int
mov
sub
mov
loopne
lods
outsb
mov
fwait
hlt
inc
into
mov
jmp
push
ds
cmc
repz
rcll
ja
xor
call
cmpsl
pop
cmp
test
cld
sub
aaa
cli
add
mov
cs
fisubrs
mov
and
add
fists
aam
je
sub
and
punpcklbw
loope
cltd
mov
dec
imull
pop
hlt
pop
cmp
mov
pusha
imul
lock
out
cmp
rcl
jg
cmp
test
sahf
popf
jmp
add
sub
imul
ja
mull
jg
insb
or
in
sbb
push
sub
cs
xchg
enter
pop
iret
ret
cmp
sub
lods
jmp
bound
cltd
cld
lret
lret
xchg
pop
xorb
mov
sti
jle
shlb
and
into
jecxz
inc
adc
jecxz
and
jmp
jae
add
xchg
sbb
mov
orl
je
push
and
test
loop
mov
repz
jbe
and
inc
ja
scas
sub
mov
xor
adc
rcrb
pushf
aam
lea
cmp
pop
push
add
leave
mov
pop
dec
add
imul
push
xor
pop
add
insl
xchg
shll
ss
add
subb
and
repnz
insl
fsubrs
lret
push
mov
mov
cmp
jmp
cmp
rcrl
fidivrs
pop
xor
aad
jl
inc
jbe
push
or
addr16
mov
negl
movsb
shlb
stos
dec
adc
out
or
jne
adc
fadds
cmp
lds
lods
fwait
ret
jae
test
lret
leave
sub
push
out
mov
inc
lea
jno
sbb
jle
xchg
xchg
enter
aad
adc
into
test
int3
cld
fdivs
gs
xor
aam
jle
xchg
mov
dec
nop
movsl
cmp
or
sbb
or
cmc
jp
dec
psllw
add
cmpsb
iret
jmp
push
mov
cltd
cmp
xchg
andl
pop
dec
test
inc
cmp
jo
dec
mov
lret
dec
mov
cwtl
mov
jecxz
fwait
push
cld
cmp
test
lcall
out
fistpl
jle
cmc
divl
mov
mov
cli
je
pop
enter
scas
sarl
lock
add
and
jb
mov
and
mov
mov
xor
jo
push
stc
int
ljmp
add
mov
cmp
mov
fldenv
mov
push
cmp
xor
mov
pop
xchg
les
xchg
and
insl
and
mov
xor
sub
cmp
test
iret
jbe
into
cli
push
pop
mov
xchg
sbb
mov
lret
adc
jge
scas
lods
and
imul
addr16
mov
stc
fimuls
sbb
fwait
add
es
pop
push
aaa
stos
add
push
mov
xor
ds
pop
add
mov
fidivrl
insb
stos
mov
add
test
sbb
in
push
xor
adc
inc
or
ret
aas
mov
lds
daa
aam
jo
push
stc
out
pop
cmpsl
test
lods
or
clc
pop
cmp
lds
push
js
aaa
fsubrp
movsb
xchg
dec
inc
fisubs
mov
pop
in
fs
or
push
and
cmpsb
mov
rorb
cmpsl
xor
fs
jmp
lods
out
fcomi
pop
cmc
or
pop
int
mov
sarl
or
shll
mov
js
push
pop
jnp
out
jp
mov
pop
sbb
mov
jae
pop
bound
xor
fs
mov
js
adc
dec
jbe
add
sbb
pushf
repnz
mov
jno
cld
jge
or
push
shl
adc
mov
jae
sub
mov
fadd
jge
sub
adc
icebp
jge
and
fildl
fwait
jns
mov
sbb
fmull
jmp
mov
adc
cmp
xchg
xchg
push
xlat
inc
jmp
sti
xchg
test
pusha
sbb
mov
adc
mov
mov
cmpsb
lods
cmp
and
cmpsl
lods
or
xor
push
pop
xchg
mov
pop
ret
mov
mov
movsl
add
inc
sub
xlat
lcall
aas
enter
push
test
push
mov
dec
xchg
stos
and
shll
dec
das
push
scas
or
and
das
loop
pop
sub
mov
or
repnz
aam
gs
outsb
aaa
pop
lods
mov
dec
jnp
adc
adc
test
daa
sbb
repz
cli
repz
into
sub
mov
lahf
pop
sbb
daa
cmp
inc
xchg
mov
push
je
mov
sbb
mov
jg
mov
jge
ret
inc
lods
ret
sar
fldenv
inc
lcall
inc
fcoml
sub
inc
mov
or
lock
rorb
add
cmp
rolb
mov
fildll
sub
jae
sub
outsb
ja
sub
mov
inc
push
mov
and
das
cmpsb
jnp
jge
jae
in
mov
ret
cltd
or
sbb
or
inc
lret
inc
ret
ljmp
push
mov
mov
movsl
dec
inc
sbb
dec
test
xor
jb
or
cmp
mov
ljmp
jno
sub
mov
mov
or
movsb
sub
mov
mov
pop
addr16
loopne
nop
sahf
and
mov
push
je
orb
mov
lea
jg
scas
and
int
xor
insl
imul
shrb
dec
mov
jo
xchg
pop
xchg
pop
ja
xor
pop
aam
jp
aam
or
clc
fdivrs
lea
fwait
add
mov
sarb
lds
pop
pop
popf
fcmovnbe
add
outsb
aaa
popf
sbb
dec
fldenv
scas
popl
mov
add
dec
fisttpl
insl
sti
enter
push
ret
xor
add
outsb
cwtl
adc
push
lea
dec
xchg
jg
jno
movb
adc
push
lods
xchg
mov
dec
adc
jae
sbb
lcall
aad
popf
push
push
xor
hlt
stos
addl
lods
cmpsl
lods
cld
or
jnp
imul
out
ja
ja
xlat
rorl
and
scas
mov
sub
and
btr
xorl
jns
pop
add
mov
inc
repnz
jns
leave
adc
adc
aas
cld
push
hlt
adc
nop
cltd
sbb
mov
mov
dec
adcl
mov
pop
mov
pop
fisubs
sub
mov
dec
test
gs
xor
xchg
and
sti
push
adc
dec
fldenv
outsb
sub
mov
rcr
xor
dec
inc
pmuludq
jmp
notb
xor
out
mov
mov
xchg
dec
je
pop
mov
inc
push
fists
xchg
rcrb
xchg
jno
mov
fdivs
pop
pop
dec
cmp
call
mov
push
sub
add
incl
jbe
adc
bound
jnp
add
xor
loopne
lret
lret
mov
jb
dec
cli
sub
ss
mov
sbb
mov
cli
test
and
sbb
adc
mov
xchg
stos
xor
leave
push
loope
push
shrl
int
ret
ss
into
adc
fidivl
imul
inc
dec
adc
stos
test
and
and
jp
sbb
in
loope
inc
cmp
push
call
push
push
popa
push
ljmp
inc
xor
sub
pop
mov
xor
or
lods
dec
fwait
popa
sti
fucomp
jl
scas
pop
and
scas
jne
push
jo
hlt
inc
or
lods
fidivrl
push
xchg
adc
or
push
in
pushf
dec
stc
inc
xor
jno
ds
imul
gs
cmpsb
test
inc
cmp
scas
pop
sub
and
sub
fisttps
add
enter
loop
scas
jae
jne
mov
jns
add
outsl
pop
xor
and
enter
hlt
scas
clc
cwtl
lods
lock
clc
mov
xor
mov
adc
xor
clc
ret
mov
enter
jle
int
dec
cli
outsl
fstps
lret
or
enter
pop
insb
mov
cmp
mov
sub
inc
inc
fnsave
add
stc
xchg
fnstenv
add
sbb
ja
imul
je
sti
cmp
test
fidivrl
rol
mov
mov
cmp
test
repnz
rclb
mov
daa
rcr
mov
out
fmuls
xor
out
jne
outsb
subb
add
fadd
js
repz
xchg
xchg
xor
lea
cli
lret
out
out
push
mov
pop
pop
and
jbe
xor
mov
or
mov
addr16
cs
ret
test
jg
ds
mull
mov
out
call
std
mov
subl
sbb
mov
arpl
inc
or
xchg
sub
cmp
jg
testb
mov
sahf
ds
in
dec
test
loopne
test
adc
insb
das
test
mov
scas
mov
cmp
aam
pop
aaa
and
lahf
aaa
andb
fisubs
bound
sbb
push
mov
adc
mov
test
fwait
out
in
mov
xor
stc
daa
scas
mov
cmp
mov
je
loopne
sti
fwait
ljmp
or
adc
mov
xchg
pop
aad
push
dec
xor
mov
add
jecxz
in
das
outsl
sbb
lret
mov
pop
addb
or
hlt
icebp
xor
es
hlt
lods
int
sbb
xor
cmpsl
mov
cmp
inc
pop
xchg
shl
cmpsl
jmp
sub
jo
dec
push
xor
mov
cltd
adc
push
jp
inc
sarl
loop
aad
sub
adc
ss
sbb
and
test
push
lret
loopne
mov
push
js
pop
je
lret
jp
inc
call
pop
add
and
test
add
pop
push
icebp
lods
imul
shlb
dec
sub
jnp
mov
or
pop
pop
push
pop
test
jecxz
clc
xchg
lcall
out
sahf
test
jns
adc
push
pop
aaa
clc
push
xorb
movsl
inc
mov
mov
stos
popl
cs
mov
or
xor
lahf
or
jecxz
popa
insl
insb
or
ds
imul
jp
dec
add
mov
lea
and
and
push
mov
inc
mov
cltd
scas
test
aam
fbstp
repnz
shlb
jmp
pop
divl
test
cmp
cld
push
push
arpl
clc
jge
adc
push
dec
push
pop
jo
pop
lret
jle
dec
cmp
xor
out
pop
push
xor
and
sbb
push
cmpsb
jge
mov
sbb
or
cmp
adc
add
dec
mov
push
and
pop
xor
xor
outsb
insb
or
enter
push
dec
ja
subl
pop
das
rorl
test
aaa
dec
sbb
push
adc
addl
sti
mov
lods
outsl
cmp
testb
cmp
fwait
sar
xor
test
add
std
inc
inc
sub
or
jae
es
mov
int3
add
mov
xchg
xchg
or
mov
stc
or
mov
loopne
pop
pop
fwait
mov
pop
addb
mov
insb
inc
cs
adc
outsl
and
cwtl
push
mov
add
test
lods
mov
jp
fldcw
int
add
rorb
out
inc
rorl
jno
cmpsb
add
fwait
das
stc
xchg
inc
push
cmp
gs
xor
add
dec
mov
clc
mov
dec
std
fbstp
sbb
jge
rcll
mov
mov
sub
cmp
imul
sahf
lock
jb
mov
rcl
xlat
ret
icebp
outsl
ja
dec
aas
fldenv
adc
insl
les
out
gs
xchg
xor
hlt
cmp
incl
repnz
mov
inc
imul
loop
lcall
out
xchg
or
mov
sahf
popa
pop
xor
scas
mov
jne
cli
sub
shr
xchg
les
lock
sub
sbb
mov
adc
jmp
cmpsl
jno
pmullw
sub
lock
push
aam
push
pop
xchg
leave
loope
pop
icebp
jg
orb
mov
sub
outsb
inc
lods
sub
aad
dec
cld
pusha
fs
popf
mov
mov
fmull
add
lahf
pusha
inc
sub
mov
jae
fwait
xrelease
pushf
out
jmp
or
xchg
mov
repz
imul
in
stos
pop
pop
clc
xchg
out
mov
je
test
push
mov
mov
fdivrs
xor
and
add
loop
mov
sbb
xor
pop
push
mov
mov
inc
mov
cmp
cmp
sub
arpl
scas
sub
push
arpl
inc
lcall
sub
add
stc
push
add
hlt
sub
or
push
inc
or
movb
popa
mov
fisubl
xorb
sub
push
incb
or
lret
pop
imulb
inc
pop
jge
hlt
mul
pop
mov
push
xor
ljmp
int
pop
dec
add
stc
dec
out
cmpsb
xor
aad
jb
jb
jl
stos
dec
mov
popf
jmp
cmp
dec
lret
cmp
sbb
loopne
mov
das
dec
sub
daa
hlt
shll
sbb
test
addl
push
sarl
dec
insb
sbb
in
or
cmpsl
stos
nop
add
lcall
inc
cmp
std
les
imul
pop
sub
pop
sbb
sbb
jb
add
lods
ss
rcll
inc
xchg
and
in
fisubrl
adc
xor
xor
cmp
add
fsubp
cmovne
mov
daa
andb
mov
cmp
push
iret
jae
jno
mov
xlat
and
adc
scas
aad
lock
mov
mov
fidivl
fbld
in
inc
or
add
pop
cmp
aas
add
pop
push
or
mov
xor
fldenv
add
jl
jo
mov
xor
cli
es
pop
jle
add
adc
es
popf
add
data16
xchg
fcompl
int3
xor
inc
call
push
sti
std
sub
ret
out
xchg
pop
sbb
cmp
cld
call
or
pop
rcrb
sub
xor
bound
add
xor
xchg
imul
xor
out
mov
add
sbb
pmulhuw
cmp
push
inc
enter
xchg
int
or
or
movsb
test
ret
ds
ljmp
in
mov
dec
andb
lods
pop
and
push
leave
nop
xchg
pop
sbb
rorl
pop
call
sarl
mov
imul
dec
int3
int3
mov
jmp
xlat
std
push
dec
pop
into
cld
dec
test
sti
js
mov
jns
lods
pop
sbb
xchg
jne
jns
pop
fbstp
jb
cltd
lods
idivl
sub
xchg
aam
loope
xor
push
mov
mov
clc
adc
mov
inc
jno
or
sbb
div
hlt
or
fldl
cmp
arpl
loope
xor
leave
bnd
add
gs
lret
sbb
sbb
cmp
scas
sub
mov
je
add
mov
pop
mov
and
inc
lock
rorl
arpl
repnz
xchg
pop
cld
int
jae
into
test
adc
and
nop
je
cmp
movq
add
int3
pop
sbb
add
mov
inc
popa
aad
jmp
or
je
bound
into
popl
xor
push
std
xchg
iret
cwtl
add
cs
enter
mov
inc
mov
popf
push
lret
push
push
xor
xor
xchg
xor
std
inc
fadd
loope
aas
and
mov
cmpsl
nop
sub
push
shrb
int3
add
out
add
push
pop
lret
test
dec
call
push
repz
enter
dec
xor
fisubrl
outsb
insb
push
or
and
adc
popf
dec
in
pusha
or
mov
and
stos
mov
in
pop
jmp
dec
ret
jg
lods
ja
jecxz
ja
mov
mov
mov
xchg
call
test
pop
ljmp
push
jb
pushf
dec
cmp
xor
jl
fs
into
sub
jg
sub
jmp
xchg
mov
lods
out
fstpl
and
cmc
mov
stc
sti
js
cld
shl
jecxz
ret
notb
push
rcr
jo
mov
cmp
fdivl
add
sbb
inc
mov
xchg
mov
and
rep
iret
fisttpll
jge
in
cmpsl
lea
xor
sub
or
inc
pop
adc
jne
popf
xchg
test
xchg
sbb
cmp
push
dec
lahf
repz
imul
int
adc
stos
fisubs
push
xor
mov
into
shl
inc
and
push
aad
out
mov
adc
push
mulb
cltd
mov
mov
jne
add
inc
push
xor
loope
mov
les
xor
cwtl
sub
sbb
repz
in
fwait
pop
adc
popa
or
movsl
pop
subb
and
pop
push
std
jo
sub
mov
sbb
cmp
xor
jne
enter
sub
out
fs
add
adc
jae
jp
jge
inc
mov
lods
fistpl
rcll
or
or
cmp
xchg
daa
negb
in
inc
into
ljmp
shll
xchg
cmc
add
mov
sbb
call
xor
repz
addr16
popf
adc
out
lock
and
inc
push
mov
mov
cmp
or
mov
fnsave
or
jne
dec
in
test
popa
dec
insl
aas
inc
dec
repnz
jmp
mov
xchg
sbb
push
mov
cltd
out
es
sahf
xchg
inc
inc
fidivl
cmp
cmp
mov
fldcw
sub
loop
mov
xchg
mov
sets
data16
and
in
rclb
cmp
test
dec
in
scas
dec
cmpsl
adc
ss
test
xor
xlat
cmpsl
add
scas
movsb
push
inc
jl
lea
addr16
cmp
mov
fsubrs
sub
fnstcw
pop
fs
inc
daa
sub
nop
clc
pop
inc
dec
mov
ss
lea
popf
testl
jecxz
js
movsl
push
mov
je
dec
mov
inc
jg
stc
out
cmp
mov
mov
imul
data16
and
jne
mov
xchg
insb
pop
pop
hlt
mov
cmpl
cli
flds
mov
ljmp
dec
sbbl
mov
and
mov
add
sub
xor
xor
dec
lods
sbb
ljmp
aam
dec
ja
fstl
sub
xor
es
inc
or
cmp
adc
sub
leave
mov
int3
loopne
popa
cwtl
xchg
cs
inc
loop
mov
fldcw
popf
out
cmp
ljmp
rcrl
lret
push
jno
sub
inc
push
and
lret
outsl
mov
std
mov
pop
dec
pop
scas
xchg
adc
push
out
js
call
cmp
xchg
xchg
inc
jne
and
pop
jge
je
movq
out
xchg
mov
inc
push
les
icebp
sub
pop
pop
aad
sbb
pop
jmp
dec
cmp
cwtl
xchg
cli
inc
xor
in
inc
adc
movsb
flds
hlt
int
int3
nop
xchg
popa
dec
aam
jmp
sarb
jne
addr16
lahf
in
rorl
jmp
shll
push
adc
divb
pop
pop
and
fs
out
cs
sub
xchg
rcll
dec
and
jle
push
movsl
adc
xchg
add
jle
mov
and
pop
sub
sbb
adc
push
inc
ss
inc
cltd
xor
cld
jle
sbbb
ror
add
fld
fwait
inc
inc
ss
shll
xor
es
addl
nop
mov
jbe
jp
lea
sbb
sti
xchg
fcmovb
mov
jns
jns
test
mov
sbb
orb
cmc
jg
cmpsb
mov
jbe
jae
hlt
push
xchg
mov
rcr
mov
popa
mov
aad
popf
push
pop
or
insl
inc
cmp
cltd
jb
jbe
cmp
mov
mov
inc
shr
jnp
in
aaa
xchg
rcr
insb
cmpb
push
rorb
test
aas
or
cmp
push
scas
xlat
jno
daa
aam
sub
mov
pop
sub
out
jle
popa
shrl
mov
adc
lcall
sbbl
in
and
ds
daa
fimuls
sahf
popf
mov
lret
add
insl
push
stos
idivl
clc
pop
adc
push
and
ficomps
cmpsb
rol
mov
add
dec
gs
popa
rcll
xor
test
into
cwtl
mov
xchg
xor
jns
adc
jnp
sub
pusha
fwait
sub
addb
xor
dec
cltd
lock
cltd
shl
mov
xchg
mov
je
xor
movsb
inc
in
mov
out
test
adc
inc
mov
test
mov
outsb
jns
out
dec
aaa
hlt
xor
stc
enter
ljmp
sahf
xchg
aad
xchg
call
cmpsl
mov
jns
cld
mov
pusha
rcll
push
iret
dec
mov
mov
lds
add
leave
mov
jno
adc
xchg
add
out
xor
jmp
push
outsb
lret
cmpsl
in
out
mov
mov
es
adc
insb
nop
sub
xchg
push
mov
inc
popf
mov
mulb
sub
imul
into
inc
fwait
dec
jle
or
aaa
dec
sbbb
aas
dec
ret
into
inc
enter
mov
std
push
sbb
rcr
lahf
jecxz
cmp
lret
mov
sbb
stos
cmp
popl
and
repz
push
pop
repz
rcrb
test
lret
cli
inc
rolb
sub
movsl
add
pop
jmp
cmpsl
dec
mov
xchg
out
mov
fcmovb
jmp
pop
sub
lret
out
xor
push
pushf
push
in
int
xchg
pop
mov
dec
mov
mov
out
ja
push
mov
inc
mov
inc
mov
es
pop
sbb
add
jno
and
sub
inc
icebp
dec
fwait
cltd
fstl
mov
add
arpl
or
add
add
sbb
into
stos
cmp
mov
arpl
pop
cmp
cmp
mov
adc
and
mov
out
lea
repz
cmp
ds
ja
sti
push
fistps
push
lcall
and
sbb
and
xor
shrl
pop
imul
addr16
stos
pop
cs
adc
sbb
sbb
jge
out
add
fwait
mov
in
shl
add
aas
ret
outsb
mulb
daa
mov
call
adc
arpl
jae
sub
cwtl
lods
out
xor
enter
cmpsl
and
rolb
ljmp
outsb
popf
xchg
call
push
cli
test
loop
mov
cmp
aam
dec
pop
inc
leave
das
sbb
movsb
stc
push
pop
rol
adc
and
mov
call
fistl
dec
adc
sbb
iret
cmc
and
cwtl
add
clc
inc
std
das
leave
lods
cmpsb
subb
mov
pop
cmp
daa
xor
mov
test
push
repnz
mov
out
xchg
fwait
enter
scas
xchg
xor
mov
sub
loop
lds
push
dec
cmpsl
jns
push
rorb
loope,pt
jp
or
fdivr
sti
dec
lahf
adc
sbb
push
mov
add
adc
xor
inc
and
mov
hlt
mov
pop
push
sbb
dec
mov
ja
jnp
lcall
add
and
outsb
outsl
mov
mov
aam
jmp
jo
shll
and
jl
repz
jb
dec
int
cmpsb
test
gs
inc
and
xchg
lahf
mov
mov
sub
mov
daa
or
add
pop
iret
xor
jge
pushl
adc
clc
aad
in
push
into
jle
loop
add
mov
popf
fisttpl
xor
push
lret
and
jg
mov
loop
cwtl
addr16
repnz
loop
mov
roll
jae
fdivrs
orl
nop
mov
push
cmp
mov
mov
insb
pop
cltd
cmp
and
push
mov
mov
add
sub
sub
jne
inc
add
loop
push
mov
aas
cld
jns
adc
or
adc
jbe
dec
ljmp
mov
loopne
ret
lret
dec
jae
aad
pop
test
inc
into
add
jecxz
mov
pop
add
movsb
cmp
scas
stc
scas
jbe
lock
add
rcrl
lea
rcl
mov
mov
les
int
out
cmp
xorl
loopne
nop
cmpsl
mov
xlat
mov
cmp
mov
cmp
inc
test
repnz
sub
adc
das
xchg
xchg
mov
jb
mov
fidivrs
movsl
test
stos
in
and
dec
push
repz
cmp
loope
and
arpl
xchg
daa
pop
orb
push
dec
jge
cmpsb
sbb
cld
test
cmpsl
push
popa
dec
inc
loope
xchg
mov
loop
fadds
bound
push
stos
repz
mulb
movsl
push
ss
dec
mov
jnp
dec
jae
or
cltd
pop
jne
sbbl
adc
test
aad
hlt
push
cltd
dec
gs
jbe
out
add
push
mov
stc
mov
sub
push
xchg
aam
inc
and
sub
xor
cwtl
rcr
dec
jns
lret
nop
jns
jl
ljmp
js
mov
jl
jbe
xchg
add
add
and
push
and
or
insb
xchg
xchg
mov
imul
pushf
xchg
mov
stos
lock
cmp
inc
pop
lock
mov
push
xchg
inc
cmp
lcall
pusha
lea
pop
aad
daa
lahf
mov
outsl
adcl
push
int
cmp
inc
push
sbb
aam
jp
mov
ljmp
cmp
jg
push
xchg
test
das
xchg
mov
push
enter
lret
daa
mov
maskmovq
in
loopne
test
enter
fiadds
mov
mov
decb
fs
dec
sti
into
or
scas
or
les
subl
iret
fmulp
call
or
dec
shll
pop
int3
stos
sbb
push
pop
xor
xor
mov
sub
push
repz
xchg
ljmp
and
mov
mov
fildl
push
fcoml
xor
xor
add
pop
in
inc
mov
sub
jbe
fs
movsb
mov
lods
cmpsl
or
add
push
xchg
jle
xchg
ficompl
into
fidivs
dec
rcrb
cmp
mov
rolb
out
out
faddl
mov
pop
not
call
std
sahf
pop
test
dec
repz
scas
inc
into
lods
or
sbb
xor
xchg
test
pop
and
adc
sub
cmpsb
call
int3
cmp
punpckhwd
ljmp
pop
inc
xchg
mov
pop
cld
pop
add
xchg
lahf
cltd
fidivl
test
jb
out
push
or
movhps
rclb
inc
pop
cmp
dec
mov
push
cmpsl
pop
inc
mov
xchg
test
and
mov
push
cmpsb
loopne
push
nop
lret
add
push
and
data16
nop
movsb
imul
int
push
sbb
jecxz
lods
mov
jbe
sub
aad
pop
sub
sbb
sbb
loope
stos
test
xchg
xor
in
movl
pop
xor
and
mov
outsl
test
sub
rcr
jecxz
stos
push
int
adc
cmpsb
lods
rcr
cld
jb
pop
lret
sub
pop
or
jle
or
push
mov
test
dec
mov
in
enter
repnz
mov
fcmovnu
and
imul
and
das
dec
call
add
int3
gs
mov
sub
std
cmp
mov
add
xor
mov
incb
mov
push
inc
mov
imul
outsl
gs
pop
shrb
mov
loopne
push
cmp
cmpsl
xor
aad
les
pop
push
repnz
nop
cltd
inc
sbb
sbb
xchg
loopne
pop
cld
add
jno
lahf
sarl
jle
add
mov
sub
and
idiv
mov
jbe
inc
xchg
mov
insb
imul
cld
in
sub
xor
rcrb
imul
les
mov
mov
mov
or
jo
movb
and
sub
mov
lods
test
push
sub
xchg
cmovns
push
inc
adcb
ss
cli
cmpsb
xlat
imul
das
pop
mov
xchg
fs
mov
jecxz
decb
push
ror
or
pop
xor
imul
sbb
or
rcrl
inc
or
inc
mov
push
mov
push
movsl
xchg
dec
cmp
dec
je
insl
jge
xor
fdivs
call
movsb
mov
or
mov
inc
jg
lahf
or
fdivl
fwait
cli
cmpsb
xor
add
xor
mov
mov
iret
lods
xor
fucomip
cli
shrl
out
adc
pop
ss
je
push
sahf
mov
in
xchg
shlb
mov
movsl
xchg
fs
jns
cmp
stc
jns
xor
pop
xchg
es
and
xor
movsl
jns
aas
scas
roll
or
inc
loop
cwtl
ljmp
rorl
cmp
insb
xchg
adc
int
stos
sahf
pop
jb
aaa
pop
cmp
stos
imul
jbe
addl
movsb
inc
loopne
inc
mov
dec
sub
xchg
aaa
jnp
loop
cltd
xor
jbe
jmp
add
dec
and
or
xbegin
icebp
add
jl
popf
mov
cmp
jecxz
or
lret
dec
mov
lods
ja
faddl
pusha
movsl
lret
lock
push
clc
test
nop
je
xor
inc
cmp
jmp
and
test
jns
xchg
jo
push
imul
lods
leave
sti
xor
add
ret
scas
ljmp
mov
sbb
or
xor
dec
cli
dec
scas
mov
shll
dec
clc
pop
cmp
scas
lods
jbe
ss
fistps
mov
sarb
movsb
add
adc
mov
xchg
sbb
fmull
mov
data16
es
pop
lods
lods
mov
cmc
sahf
mov
iret
mull
lret
subb
div
push
sub
cmp
ficomps
clc
mov
push
mov
outsl
pop
lds
mov
test
cs
push
loop
sub
push
mov
arpl
lret
insl
push
enter
das
or
lret
jne
cmp
int3
out
imul
imul
sti
pushf
pop
sahf
xchg
and
mov
popa
add
inc
loope
cmpsl
repnz
in
mov
shrl
and
fsubl
cli
push
test
mov
and
lods
aam
orb
adc
lcall
ds
out
das
scas
mov
mov
mov
cmp
pop
fwait
sub
mov
pop
loopne
pslld
jl
cmc
fisttpl
sub
cmp
hlt
dec
pop
fisubs
jle
call
inc
jb
mov
cmpsl
adc
fidivrs
xor
fistps
mov
pop
repnz
adc
jae
out
add
stos
pop
push
daa
fistpl
repnz
pop
popa
xor
in
and
jb
push
xchg
dec
das
jp
xchg
push
imul
dec
daa
jnp
sub
or
jns
idivb
jnp
xchg
mov
add
inc
call
xor
sbbl
data16
out
mov
sbb
adc
hlt
call
lret
xor
movsb
inc
mov
inc
xchg
inc
adc
imul
loopne
inc
pop
xlat
insb
mov
mov
adc
or
lahf
pop
add
insb
jno
or
inc
clc
dec
or
outsl
fwait
aaa
inc
sahf
sbb
mov
inc
icebp
imul
jge
pusha
sbb
ds
push
vpmovsxwd
les
add
dec
pop
lahf
lea
jb
stos
sub
mov
pop
jl
pop
test
bound
loopne
gs
pop
leave
call
iret
and
daa
fsubrs
nop
enter
fdivs
and
fdivs
add
mov
adc
adc
enter
jno
pop
test
pop
push
data16
rcrl
addr16
lods
fs
loopne
enter
push
rcrb
shlb
lock
and
mov
sbb
mov
mov
push
mov
push
pop
xor
lock
ds
and
dec
fildl
push
jno
mov
xchg
je
jno
aaa
test
xchg
jle
jo
loop
and
test
aam
and
mov
lret
bound
xor
add
std
or
jmp
testb
dec
imul
cmp
sub
outsl
xor
dec
cwtl
scas
pop
push
movsb
testb
adc
pop
pop
pop
sbb
lds
scas
xchg
cmp
sti
pop
leave
sbb
jns
ja
aas
cmp
adc
lret
and
mov
scas
out
inc
xchg
shlb
sahf
sbb
sbb
insl
mov
add
pop
insb
cmp
mov
jnp
sbbb
mov
xor
xor
dec
in
popf
aas
cmp
pop
sahf
sub
and
iret
cli
mov
mov
subl
push
push
inc
popf
cmc
mov
jge
test
lahf
or
jne
pop
push
bound
pop
cmp
xchg
arpl
pop
inc
cmp
xor
test
push
dec
mov
dec
jb
xchg
xlat
push
mov
pop
or
lds
push
add
sub
loopne
in
adc
mov
dec
bound
loopne
dec
cmp
mov
or
or
and
sub
pushf
arpl
hlt
and
and
addl
jle
xchg
std
push
dec
xchg
inc
pop
push
jno
fistpll
das
dec
lea
test
sub
jg
mov
cmp
rcrb
aas
ds
cmp
dec
je
cmpsl
mov
cmp
ficoms
sbbb
jae
adc
xor
cmc
ror
ja
lods
in
jle
pushl
nop
test
lds
insb
jmp
dec
popf
pushf
mov
je
jmp
inc
jmp
adc
aaa
scas
sbb
aam
adc
in
xchg
aad
fld
out
jbe
insb
idivl
sub
mov
mov
xor
xor
into
inc
repz
cmpsb
jle
xchg
xor
pop
push
mov
cmpsb
xchg
bound
aas
inc
vmovdqu
into
inc
sub
mov
cmp
clc
xor
inc
clc
mov
addb
mov
push
sbb
or
je
cmp
lahf
arpl
pop
inc
cld
sahf
imul
mov
lahf
lds
pop
mov
cmpsl
dec
dec
insl
rcl
dec
out
call
in
inc
test
jb
mov
sbb
lds
int
dec
xchg
adc
pop
lahf
aaa
add
add
xor
push
fldl
mov
jg
mov
pop
fs
mov
mov
loopne
xor
xor
ds
nop
repz
in
push
mov
loope
pop
adc
repnz
jecxz
add
sub
add
add
cmp
xor
xor
lea
xchg
adc
rcrl
in
test
roll
and
loopne
fadd
fimull
stos
push
jns
jg
pushf
in
gs
lret
xchg
xor
insb
rorb
call
inc
jle
les
cmpsl
daa
ud2
pop
arpl
dec
mov
or
jae
and
popf
pop
inc
dec
ret
decl
sub
jnp
jle
mov
ss
adc
push
lock
fisttps
or
adc
add
das
add
xchg
ret
notl
cmpsb
cmc
popf
lret
pop
dec
ret
and
cmp
leave
add
adc
fldt
int3
sqrtps
jbe
dec
aaa
mov
dec
cltd
ja
insl
hlt
pop
sub
nop
call
mov
cmp
test
sbb
and
cli
test
clc
cmp
nop
into
mov
add
mov
rcrl
xchg
scas
lods
rcll
jns
insl
lods
jg
xchg
ret
je
repnz
xlat
aam
jp
in
push
or
test
outsb
call
jb
or
adc
pop
sub
cld
clc
mov
sbb
lock
push
push
adc
mov
mov
std
ret
shr
sub
je
imul
insb
testl
imul
into
fbstp
jle
and
jb
cmp
addl
fistps
xchg
jne
mov
test
add
mov
movsl
adc
push
icebp
popf
popf
test
pop
ret
adcb
cli
adcl
jno
sub
dec
jne
out
add
loop
xchg
outsb
psrlq
mov
lods
repz
outsb
call
call
stos
ds
jo
outsl
ja
into
mov
fnop
repnz
xchg
shll
in
das
repz
xor
sahf
push
nop
repnz
lock
push
xor
fdivrs
cmp
adc
add
mov
arpl
ror
sbb
jno
adc
out
call
xchg
in
in
ja
push
and
xor
iret
jg
rol
pop
jbe
xchg
rolb
push
push
mov
adc
jnp
repz
xor
into
mov
int3
adc
mov
lods
js
add
je
jg
xchg
jg
push
mov
push
int
sar
orb
jg
sbb
mov
inc
loope
and
inc
push
test
loop
pop
adc
testl
xchg
jno
jge
lods
inc
fmuls
stos
mov
hlt
cmc
pop
cmpsb
xchg
roll
push
cltd
sbb
outsb
stos
int
mov
sti
movsl
popa
add
stos
fsubrs
and
clc
xchg
popa
in
pop
inc
xor
int3
fmull
fldt
adc
neg
mov
mov
ja
jg
flds
sub
or
xchg
loope
pop
enter
pop
xor
shll
push
pop
jmp
fwait
add
movsl
mov
jle
push
push
cmc
dec
test
call
imul
xor
cwtl
out
cmp
and
xor
iret
sahf
cmp
or
mov
cmpsl
aaa
mov
sti
xchg
adc
or
pop
fidivs
sbb
pop
push
pop
sbbb
jmp
loope
pusha
pop
pop
fcomps
ja
dec
adc
lret
ficoms
jg
lods
xchg
mov
lods
fldcw
shl
dec
popa
div
or
pop
add
popf
cmp
push
clc
jp
sub
jle
add
popa
popf
cld
push
sbb
jl
cmc
or
aaa
test
add
test
push
shlb
das
pushw
les
aaa
adc
cmpsb
insb
sub
push
popf
mov
add
test
push
ret
mov
out
movsl
loopne
mov
mov
jo
jno
mov
xlat
add
rorb
out
loope
nop
mov
or
movsl
in
mov
cmp
jnp
sub
roll
dec
fnsave
sahf
or
ret
fwait
mov
enter
xor
lret
add
insl
xchg
and
xor
sub
mov
pop
rcrb
mov
cli
std
lcall
js
aas
fdivs
add
pop
idivl
mov
adc
ror
cmp
roll
sbb
dec
fistps
sarb
mov
pop
stc
test
es
pushf
rolb
pop
test
pop
popa
pop
shl
roll
push
mov
int
gs
sub
hlt
mov
std
add
xor
ss
push
fmul
test
ja
repz
daa
mov
lahf
cmpb
rcll
std
mov
js
cmp
or
add
ficoml
fiadds
mov
pop
jg
sub
inc
popa
jge
outsl
dec
inc
cld
mov
mov
adc
inc
inc
ret
andb
sub
pop
pop
fiadds
rorl
addr16
punpckhbw
clc
jnp
lock
pop
dec
jnp
movsb
mov
mov
loop
jbe
gs
mull
adc
xchg
in
pop
fdivrs
shl
mov
inc
lcall
stc
stc
sub
outsl
mov
repnz
jno
movb
pop
xchg
mov
adcb
mov
cld
hlt
add
jae
iret
cwtl
jb
sbb
clc
or
and
fists
push
jno
fimull
adcb
dec
movl
cmc
leave
bound
add
lcall
mov
mov
pop
stos
jns
std
outsl
and
push
clc
dec
xchg
mov
cmp
sbb
mov
xchg
clc
jmp
mov
dec
xchg
pushf
adc
or
in
in
pop
lret
sub
or
mov
daa
sbb
and
sbb
xor
iret
mov
adc
movsl
pop
bound
mov
dec
rclb
das
push
loop
cltd
mov
adc
aad
shlb
pop
ficomps
das
or
pop
imul
jbe
sbb
add
sbb
cmp
nop
add
push
enter
and
popa
test
push
sbb
mov
mov
push
sub
pop
cmpsb
mov
jmp
inc
cmpsb
jnp
add
outsl
lods
cmp
sbb
mov
imul
test
lcall
jp
popf
popf
xor
push
dec
icebp
adc
pop
aam
out
sub
adc
mov
push
adc
xlat
inc
cwtl
shlb
idiv
jmp
mov
cmpsb
insl
outsb
popa
jae
sub
xchg
add
mov
cltd
xchg
fcom
imul
dec
shrl
xor
cmp
mov
cld
dec
push
inc
popw
mov
xchg
mov
mov
pop
das
pop
stos
lcall
pop
insb
sbb
shl
cmp
adc
pop
cwtl
mov
cmp
nop
cmp
xlat
cld
xlat
jbe
push
lea
test
std
mov
mov
sub
dec
fwait
adc
scas
fsubs
sub
mov
stos
cmp
or
pushf
push
ret
xchg
fsubs
cltd
ret
imul
jmp
je
in
pop
push
loopne
dec
xchg
jne
fnstcw
lcall
adc
push
add
cmp
jl
call
mov
xchg
cmpsl
mov
inc
adc
arpl
inc
stc
pop
add
add
cmc
fnstenv
or
rclb
movsb
gs
filds
ficoml
pop
sbb
push
push
imul
push
mov
jo
in
cmp
xchg
sbb
adc
add
sbb
cli
jne
mov
call
int
cmp
xor
mov
pop
int
mov
leave
test
icebp
mov
sbb
loope
lock
in
mov
mov
jmp
adc
push
cwtl
dec
lea
add
std
lret
or
in
mov
sahf
adc
or
addl
lods
pusha
cli
and
lea
xor
repnz
clc
outsl
das
lds
mov
cmp
dec
loop
or
insb
pusha
xchg
dec
stos
add
xor
scas
add
shl
test
fs
loop
push
icebp
sbb
push
pop
cmp
in
test
add
jns
test
mov
mov
dec
enter
pop
out
pop
jp
testb
pop
imul
ja
js
push
xchg
jo
mov
and
jmp
pop
popa
imul
js
dec
or
jge
mov
mov
push
mov
ja
sahf
rcll
and
pop
jo,pn
cs
adc
mov
add
xor
dec
inc
mov
orl
imul
mov
or
mov
fcoml
push
mov
push
sub
adc
pop
ret
push
and
and
dec
xlat
xchg
mov
push
pop
mov
pop
cli
xchg
bnd
jo
test
test
je
mov
cltd
lahf
ss
rcll
dec
push
popa
jo
inc
stc
ds
jg
pop
mov
popa
xor
adc
gs
into
mov
pop
cs
push
mov
inc
or
outsl
mov
mov
loop
xchg
loop
xchg
mov
jb
ss
mov
out
std
push
mov
push
sarl
lea
inc
cltd
gs
rol
mov
mov
pop
js
scas
aam
pusha
add
aad
inc
lods
mov
xor
test
push
scas
jmp
pop
fwait
pushf
add
lods
mov
mov
lds
dec
cmp
pusha
jnp
loop
jmp
cs
rolb
add
fimull
loopne
mov
imul
sub
bound
xchg
hlt
push
lret
pusha
loopne
push
pop
push
xchg
cmp
aad
int
insb
mov
stc
insl
les
orl
mov
mov
nop
out
jl
mov
sub
outsb
test
das
cmp
fmull
jecxz
addl
push
cmpsl
jge
add
dec
sub
pop
pop
nop
sub
fwait
dec
clc
insl
into
jp
repz
iret
pop
xchg
pop
and
mov
xorb
xor
into
mov
cmp
xor
aam
cs
sbb
mov
pop
es
push
jecxz
cmc
adc
inc
pop
pop
lods
and
rorl
sub
cld
test
add
sti
stc
cmovl
jno
scas
movsb
jp
fnstenv
sub
mov
pop
pop
shrb
adc
repz
out
mov
ret
mov
pop
scas
mov
stos
mov
es
inc
in
lock
das
dec
data16
jg
hlt
shr
xchg
dec
lcall
clc
pop
arpl
fcomp
das
mov
push
enter
jmp
or
fildll
paddusb
arpl
xor
aas
subl
repz
sbb
bound
out
aaa
mov
sub
int3
and
push
mov
jne
push
sbb
stos
push
dec
loopne
outsl
ds
mov
adc
adc
fwait
orl
fcoms
mov
je
push
or
ficomps
jne
lock
fwait
push
dec
push
leave
out
push
xor
bound
inc
xchg
xchg
repz
ret
xchg
add
ljmp
fcoml
movsb
fdivrl
inc
and
cs
stc
lcall
xchg
mov
sbb
xchg
pop
aam
adc
into
jno
mov
pop
outsl
inc
int
test
push
mov
insb
adc
or
cmpl
fcoms
cs
nop
jge
scas
cmp
sub
js
push
es
push
cmpsl
dec
xor
mov
push
repnz
sbb
dec
ja
sub
mov
loop
xchg
mov
jb
add
mov
mov
in
mov
mov
mov
loop
push
int3
and
jae
xor
leave
iret
xor
arpl
mov
mov
adc
mov
fistpl
cmp
lret
or
mov
lods
rolb
mov
xchg
repz
xor
imul
ret
stos
or
shrb
jl
repz
push
scas
or
and
push
push
ss
scas
xlat
into
sti
js
mov
xor
lods
rorl
xchg
es
pop
lret
sub
mov
jno
into
enter
test
mov
popa
lret
imul
daa
sahf
repnz
push
lods
data16
add
into
aam
push
adc
fwait
outsb
jbe
adc
mov
mov
outsl
out
push
nop
inc
push
inc
sbbl
dec
outsl
cli
ds
dec
inc
pop
insl
popf
push
and
stc
mov
inc
aaa
loope
mov
addb
in
and
xlat
cli
cwtl
jge
fdivs
test
add
shrb
aad
add
es
icebp
jne
hlt
add
decb
xchg
fmuls
scas
pusha
js
mov
loopne
fdivrl
mov
jb
push
imull
sub
mov
js
pop
jne
and
xchg
sarl
pop
mov
inc
test
scas
xor
lods
push
fmul
mov
daa
xor
cmpsb
sbb
dec
pushf
and
frstor
adc
sbb
pop
add
jbe
mov
movsl
fwait
loop
pop
ljmp
bound
repnz
adc
cmp
mov
jmp
lods
pop
push
push
loope
mov
mov
fadds
cli
mov
fldenv
sbbl
js
mov
inc
push
scas
dec
movsb
cs
pop
mov
fcmovb
int3
dec
pushf
fbstp
xchg
or
sub
pop
imul
mov
mov
sub
push
scas
ret
sub
cmp
stos
pop
jecxz
pop
xchg
and
test
int
lcall
lcall
clc
imul
and
inc
push
fmulp
mov
or
sarl
nop
test
push
xchg
pop
filds
sahf
inc
or
lods
sub
sahf
push
mov
sub
sbb
movsb
fs
stos
not
nop
es
sbb
fwait
popa
shrb
xchg
mov
cmp
xchg
jo
test
add
push
jp
inc
xchg
mov
cltd
orb
xchg
es
or
rol
daa
xlat
outsl
add
sti
int
pop
push
inc
in
setb
and
adc
and
loopne
xchg
lods
xor
test
lahf
out
sub
mov
outsb
ljmpw
rorl
add
shll
mov
call
movsl
sbb
outsl
inc
cli
fcomps
pop
mov
inc
notb
and
push
cmp
aas
mov
sub
push
call
ret
mov
jno
sti
repnz
jle
add
insb
out
cmpsl
xor
mov
inc
xchg
test
push
pop
push
mov
insb
setl
dec
cmc
dec
push
out
xor
lods
js
sbb
rcl
outsb
ficoms
jns
inc
mov
cli
lds
xchg
sbb
pop
fdivrl
shl
cld
xchg
xchg
int
cmp
xor
dec
inc
push
mov
jb
xor
shl
sbb
fucomip
clc
or
int
xchg
mov
cmp
sub
add
aam
test
loopne
xchg
in
stc
mov
pop
mov
in
es
and
adc
dec
mov
adc
jnp
sbb
or
add
fwait
sbb
bound
lods
filds
add
loop
adc
mov
xor
cltd
cmpsb
popf
mov
jl
xchg
fcoms
jbe
ffree
popf
inc
xor
jne
push
icebp
cmp
add
xor
lods
sub
adc
adc
mov
mov
lea
sub
inc
aam
outsb
enter
lds
fsubrl
hlt
bound
push
xchg
mov
cwtl
lcall
sbb
inc
inc
sti
dec
mov
dec
in
adc
cltd
mov
mov
clc
push
mov
out
icebp
daa
imul
aas
bound
in
pusha
jge
jp
sti
adc
jne
popf
xchg
sbb
pop
push
outsl
je
in
pop
sbb
out
cld
jo
ljmp
sbb
sub
mov
fisttpl
or
test
push
adc
lods
ret
mov
outsb
enter
xor
cmp
mov
stc
push
xchg
loop
xor
out
std
bound
dec
movsb
sarl
sbb
mov
js
cs
mov
lret
rcll
call
cmp
cmpsl
enter
mov
jne
jnp
jge
pop
fldt
and
cmp
fisttpll
mov
das
dec
scas
push
mov
int3
push
push
ffreep
push
sub
dec
xchg
adc
lret
pop
cltd
xchg
sub
push
cmp
cmpsb
push
jb
sbb
inc
test
mov
aas
lret
inc
mov
iret
push
sub
sub
pusha
lahf
popa
push
dec
sbb
clc
push
mov
cmpsl
dec
fnstsw
flds
xchg
into
mov
cmp
mov
and
cltd
jnp
mov
sbbl
xchg
fdivrl
testl
sub
dec
inc
or
out
test
fucomp
popf
iret
cmpsl
fsubrp
push
add
adc
rcl
ds
std
mov
pushf
mov
cmpsl
outsl
xor
pop
sub
aad
stos
pop
gs
rclb
ljmp
das
sahf
xor
enter
adc
les
sahf
xchg
fcomps
outsl
pop
ljmp
push
data16
imul
pop
cld
cmpsb
adc
popf
loop
imul
in
xchg
fnstenv
mov
adc
add
sbb
mov
mov
inc
daa
xor
push
and
cli
vdivss
and
fsubs
mov
push
xchg
jmp
mov
pop
lock
xchg
sub
lret
pop
fwait
jle
mov
mov
in
jp
loope
xchg
add
mov
fisttpll
aam
out
sub
vmread
pop
sbb
pop
aam
jg
cwtl
inc
jb
xlat
fdivl
out
cmpsb
adc
mov
sub
in
sbb
cwtl
or
and
iret
movsl
aam
jb
mov
rol
in
and
dec
aad
cwtl
das
xor
xor
adc
enter
loop
dec
push
rcrl
fldcw
dec
out
push
jge
dec
push
mov
scas
incl
jle
inc
lods
mov
and
push
arpl
das
push
int3
lcall
cld
cltd
fnstenv
aaa
xor
ret
push
xor
fistpl
mov
andb
push
jo
test
sub
lret
imul
push
push
fdivrs
lret
rcr
jb
in
in
add
inc
mov
fdivs
mov
lahf
out
mov
pop
idivb
push
aas
push
push
rclb
iret
lea
das
movb
or
pushf
pop
sub
lcall
int3
pushf
int
ficoml
out
push
and
jnp
cmpsb
mov
jo
stos
dec
adc
jnp
xor
dec
jno
shrb
andb
adcl
test
and
orb
jns
lcall
sar
sub
add
icebp
dec
pop
ds
and
jo
cwtl
push
inc
push
cmp
leave
pop
mov
dec
aam
xor
add
movsb
insb
stos
dec
cs
jge
adc
in
xchg
push
test
lods
pop
das
inc
aam
and
mov
int
push
pop
leave
pop
aas
out
clc
rcrl
lds
push
daa
scas
pop
hlt
or
call
push
xor
or
push
sbb
sbb
mov
jecxz
repz
popa
or
xlat
jbe
out
testl
xor
pop
inc
leave
ds
sbb
pop
icebp
stos
sti
and
mov
mov
push
aam
rolb
jecxz
outsl
inc
xchg
push
aas
shlb
popa
scas
xchg
imulb
cld
mov
xchg
jns
test
subb
mov
lcall
xchg
into
cmp
in
add
stos
push
pop
insl
int3
sbb
repz
jnp
in
out
inc
imul
loop
inc
lret
mov
aaa
sbb
loopne
mov
shll
push
test
repnz
mov
add
fdivr
out
xlat
in
push
insl
out
inc
call
pop
lret
or
sub
jno
jno
push
clc
dec
jb
sbb
hlt
and
push
repz
inc
mov
ret
inc
sub
xor
adc
movsl
jl
sbb
xlat
cmp
in
dec
xchg
sub
fnstcw
roll
aam
out
adc
cmpsl
movsl
repz
subl
inc
lret
test
aaa
or
jo
test
adc
pop
rcr
cmp
js
in
push
stc
fnstenv
pop
addb
cmp
inc
mov
pop
mov
sub
mov
test
andl
movsl
aam
inc
dec
ljmp
in
in
scas
adc
repz
cmp
stos
adcb
shl
pop
out
xchg
cmp
flds
cmp
shll
std
mov
add
jle
popf
cmp
call
daa
xchg
cmpsl
sbb
addr16
rep
and
mov
pop
push
jne
int
xchg
lods
fsts
mov
sub
adc
inc
cmp
outsl
ret
fadd
xchg
push
sub
sahf
add
repz
clc
xchg
mov
and
or
or
je
nop
call
testl
adc
cli
cmp
loopne
aas
ficompl
push
add
sbb
in
fst
out
cmpsb
aam
xchg
not
cmp
hlt
sub
into
mov
and
movsb
cmp
rcrb
test
dec
nop
xchg
adc
xor
adc
xor
jmp
clc
jo
jecxz
mov
dec
test
lret
sub
sub
xchg
cmp
and
push
adc
ss
lods
orb
push
xor
xor
cs
jmp
repz
cmp
bound
inc
pop
es
out
add
enter
shrb
mov
mov
ret
bound
sub
aad
shlb
ss
int3
dec
sbb
cmp
mov
nop
outsl
xlat
imul
and
lds
jb
lock
adc
inc
int
push
pop
pop
dec
or
adc
mov
or
bound
dec
push
xlat
imul
in
aas
inc
xor
push
imul
fidivl
inc
or
ret
adc
cmp
ljmp
scas
jl
add
dec
insl
test
sbb
aas
ffree
out
aaa
leave
push
out
push
jno
jns
jne
xchg
xor
mov
in
xchg
adc
mov
or
les
das
cltd
mov
fbld
add
sub
loop
fstpt
push
push
data16
jne
hlt
cmc
mov
push
push
inc
sub
xor
push
fbld
ljmp
aam
scas
loop
and
and
negl
mov
mov
xlat
in
fists
daa
lahf
xchg
sbb
jl
xchg
std
fsubs
sub
or
fisttpl
call
cmp
fistl
jmp
mov
fisttpll
in
pop
inc
add
cs
imul
add
cmp
inc
xchg
xchg
nop
mov
cltd
mov
jl
mov
aad
fidivl
test
xchg
push
sub
fcmovne
xor
mov
mov
ret
pushf
and
jo
lahf
popa
pushf
shlb
outsl
scas
and
sahf
mov
aad
pop
pop
int
call
cmpb
imul
lds
lret
sarb
and
sbb
fcoml
and
std
xor
push
or
add
pop
aam
push
arpl
flds
mov
mov
pop
addr16
sub
add
xor
imul
mov
jo
pop
lods
jnp
nop
mov
fistpll
in
cmp
stc
das
or
clc
push
sbb
or
mov
movsb
in
mov
adc
add
scas
jnp
sub
push
sbb
jmp
inc
mov
sub
ret
xor
dec
add
stc
lahf
adcl
and
dec
icebp
insl
outsb
das
fwait
xchg
mov
sti
jmp
popf
mov
and
jo
lret
stos
dec
imul
pop
mov
lods
mov
test
xchg
cmp
mov
iret
ds
pop
mov
es
dec
mov
jmp
mov
jbe
mov
dec
cmp
sbb
cmpb
jo
adc
pop
mov
mov
or
jbe
and
lods
data16
add
push
icebp
lds
mov
shl
push
negb
outsb
mov
xor
aaa
mov
ds
fsts
dec
dec
fistps
sahf
hlt
movsl
pushf
dec
enter
in
pop
jae
push
mov
leave
sbb
add
fwait
xor
das
jo
inc
hlt
ss
in
sbbb
sub
inc
inc
xchg
icebp
mov
iret
mov
and
and
divl
les
mov
int
xchg
loopne
sbbb
lds
and
lods
roll
cmp
xchg
sbb
push
pop
push
dec
and
mov
pop
inc
pop
shl
sbb
repz
loop
hlt
mov
sti
push
mov
xor
sti
mov
ficoml
dec
mov
cmp
mov
jae
push
outsl
mov
sahf
fbld
nop
jmp
add
pop
and
lods
pop
pop
aas
cmp
xchg
incb
idivb
dec
lea
fistpll
pop
insb
or
lret
filds
adc
cmc
icebp
jecxz
scas
sub
jge
out
jne
xor
sub
rclb
jo
arpl
dec
xorb
or
rcrb
jmp
loop
dec
fwait
into
jnp
daa
insb
js
or
jl
fcom
rcr
mov
mov
shrb
inc
fstpt
or
ret
cltd
ret
decl
xchg
sti
xor
sbb
mov
sub
call
or
pop
scas
xlat
xor
push
cmpsl
xchg
add
jbe
sahf
adc
gs
sub
cmpsb
pop
dec
notl
ds
fcompp
ret
repnz
adc
cmp
je
xor
xchg
rorb
shlb
sbb
cmc
aam
mov
cmpsb
push
lea
aas
rcll
fstl
test
adc
push
jp
movsl
mov
inc
out
add
cmpsl
inc
loope
movsl
and
std
inc
sub
loopne
add
lods
in
sub
xchg
andps
lret
jg
adc
clc
fnsave
ds
outsl
pop
cmp
pop
cmp
jle
and
cmpsb
xorb
inc
pop
pop
jne
inc
cmp
daa
and
jne
cmpl
cmpsl
shlb
xchg
mov
in
xchg
push
pop
idiv
mov
je
cmp
loop
pop
mov
in
adc
or
aaa
into
nop
cli
xchg
movb
add
mov
popf
lock
inc
test
pusha
in
popa
push
icebp
mov
adc
cmp
cmpsb
cmpsb
inc
data16
cltd
iret
hlt
inc
mov
add
fdivrs
jns
adc
cmpsl
xor
sti
mov
rcll
clc
scas
jo
test
cmp
roll
aas
add
jo
xchg
and
in
imul
jae
loopne
sarb
scas
clc
notb
ds
lea
xor
pop
cmc
into
scas
les
pop
sbb
cltd
xlat
and
mov
lods
outsb
jb
mov
das
sbb
pop
mov
mov
daa
mov
scas
adc
add
or
jo,pn
or
mov
pop
cli
into
inc
dec
xor
idivb
push
cmp
add
inc
mov
adc
fldcw
dec
int
shrb
out
mov
dec
or
insl
push
and
fmul
push
xor
hlt
mov
insb
mov
adc
sub
sarl
out
fmul
mov
push
or
xor
sub
xchg
mov
test
ds
mov
inc
mov
in
push
or
lods
xchg
mov
inc
push
mov
jmp
lret
loopne
fwait
sti
or
push
xorl
loope
xchg
mov
xor
xor
push
sub
xlat
push
xor
out
cmp
fldt
jne
out
pop
test
bound
push
dec
lcall
dec
adc
call
and
lret
in
in
dec
scas
jl
fimuls
and
lcall
nop
rcll
cmp
iret
push
repnz
or
cmp
icebp
jle
sub
adc
push
pushf
in
sub
pop
inc
cmp
mov
and
gs
test
rcrl
inc
sub
outsl
ljmp
sbb
pop
mov
int3
jle
es
push
mov
sub
aad
mov
mov
fidivl
lods
andl
or
loop
sub
or
cltd
mov
or
jae
cmc
adc
sti
das
xor
cmp
inc
arpl
pop
dec
sub
and
xor
shrb
xchg
push
pop
sbb
xor
andb
addr16
popa
adc
mov
aaa
fiadds
or
push
mov
lds
shl
xchg
pop
movsb
ret
inc
and
xor
push
test
movsb
js
loope
orb
gs
mov
mov
cmpsb
mov
fisubs
push
dec
inc
fwait
mov
cmpsb
scas
xchg
mov
mov
enter
sahf
das
cwtl
dec
dec
lds
mov
mov
mov
sbb
inc
shrb
ljmp
test
mov
xor
sub
jb
mov
dec
and
sbb
pop
jne
fmull
or
sbb
aam
cmp
mov
xor
push
pop
rorl
lahf
rcr
adc
je
mov
movsb
mov
pop
inc
dec
mov
jne
xor
or
es
mov
xchg
push
mov
mov
mov
xchg
cld
jne
xchg
sub
jp
bound
mov
cmp
mov
jge
fisubl
push
pop
push
into
add
sub
dec
sub
push
cmpsb
hlt
in
jle
push
jg
aam
push
inc
adc
clc
scas
sub
pop
es
sub
mov
inc
inc
or
xor
xor
out
xchg
push
es
movsl
scas
dec
inc
std
sbb
inc
js
pop
push
xor
fsubrl
test
inc
mov
pusha
and
jb
fsubr
es
in
bound
les
mov
scas
shll
sbb
aaa
es
scas
in
addb
cmp
cmp
mov
test
push
lahf
outsl
fsts
sub
dec
aad
jnp
sbb
jmp
adc
mov
enter
fnstcw
loope
sub
or
stos
lret
cmc
mov
sti
and
mov
mov
out
test
mov
sbb
jns
imul
add
inc
or
inc
psadbw
xchg
add
mov
xor
lock
pop
ja
add
cmp
sbbl
push
cld
ret
push
dec
pushl
or
cmc
push
jo
lds
out
cmp
int3
scas
rcll
in
inc
xchg
ss
add
in
ss
movsl
in
stos
cmc
rolb
mov
dec
int3
and
pop
sub
adc
and
adc
add
lcall
aad
shl
pop
jo
mov
out
dec
adc
adc
or
mov
push
cmp
fs
cli
repz
insl
mov
test
pop
sbb
pop
sbb
lret
push
dec
and
outsl
pop
sbb
cmpsb
jne
xor
cmpsb
clc
loop
pop
xor
std
popa
std
sub
xchg
fimuls
mov
movsl
sahf
shrl
js
and
aaa
fiaddl
or
lahf
roll
or
stos
mov
cmp
cwtl
add
xchg
fsubr
jae
pop
pop
shrl
fwait
cmp
mov
test
call
loopne
mov
scas
fnsave
push
sub
int3
jg
pop
sub
cltd
mov
pop
jo
cmpsl
test
cld
mov
loope
dec
mov
dec
test
or
inc
mov
xor
dec
cmpb
std
outsb
fistl
stc
adc
or
fistl
test
or
cmp
fstps
pop
iret
pop
cltd
pop
pop
push
mov
dec
xchg
mov
dec
out
loope
bswap
bound
fldt
dec
mov
loope,pn
nop
mov
in
jns
lock
repnz
roll
iret
mov
sbb
addr16
daa
fcoml
es
pop
std
sub
fcoml
cld
test
push
jae
test
xchg
movsl
pop
iret
dec
lock
hlt
shrl
cld
cmpsl
xor
xor
xchg
rorl
xchg
inc
adc
ja
jae
out
adc
mov
sub
mov
pop
sbb
js
popa
idivl
ret
js
jmp
inc
cmp
call
shlb
fistpll
mov
clc
sbb
addl
pop
negb
dec
add
int3
lock
popf
adc
sti
push
inc
rcrb
nop
rclb
jbe
out
jle
push
push
mov
xor
adc
std
aad
push
xchg
inc
in
test
push
and
adc
jmp
xchg
cmc
addr16
outsb
repz
inc
push
lods
in
popa
ss
jnp
int
fldl
es
sub
decl
movsb
imul
jle
jae
clc
and
mov
shrl
jne
adc
sbb
xchg
adc
lahf
dec
xchg
jbe
rclb
mov
sub
dec
push
pop
stos
icebp
push
shl
and
pop
add
mov
xlat
cmp
fidivl
sbb
and
roll
cmp
xchg
inc
rcl
adc
pushf
xor
loopne
sbb
mov
rclb
cmp
fs
or
jnp
sbb
or
mov
pop
inc
es
into
pop
scas
xchg
das
xchg
enter
xchg
mov
pop
cwtl
dec
and
mov
repz
adc
pop
fldcw
insl
fidivrl
insl
mov
and
sti
adc
ja
cmp
aas
clc
mov
fbld
filds
mov
loopne
shrb
mov
and
jmp
outsb
jb
nop
pop
fs
cmp
xchg
jg
inc
scas
fnop
cwtl
cld
xchg
dec
cmc
cwtl
test
or
jo
dec
pop
filds
repnz
loop
inc
mov
ss
loopne
jmp
out
int3
pop
pusha
mov
or
pop
xchg
xchg
or
xor
aam
jns
aaa
adc
inc
lcall
and
or
add
rorl
jne
xor
ret
fsts
gs
xchg
dec
stc
loopne
popa
xor
mov
pop
mov
data16
lret
pusha
push
outsl
push
push
enter
or
pop
cmp
jle
mov
sub
clc
cld
xchg
lret
shrl
daa
mov
es
out
cmp
lds
sbb
ss
or
lcall
inc
cmp
pop
dec
pop
jl
dec
push
sub
aad
fcompl
lods
movsb
or
jl
mov
xchg
test
aam
mov
inc
push
loopne
pop
push
fisttps
movsb
push
pop
popa
or
and
mov
push
shr
ja
jecxz
sti
insb
mov
lcall
fsubrs
and
insl
mov
cmp
pop
pop
rolb
add
pusha
scas
xchg
dec
pop
mov
test
mov
mov
sbb
mov
fwait
lret
mov
adcb
aaa
icebp
sti
cmp
pop
insb
inc
dec
pop
mov
iret
push
arpl
cltd
jne
std
and
and
mov
out
cmp
jecxz
bound
push
mov
dec
push
addr16
inc
mov
push
ljmp
xor
mov
mov
out
lret
push
lods
pop
mov
scas
jecxz
inc
clc
fwait
in
lret
mov
cs
mov
inc
inc
and
adc
imul
sahf
mov
les
int
sbb
sbbl
ljmp
inc
jle
movsl
push
push
cmc
or
inc
mov
xor
test
cld
es
mov
mov
outsl
cwtl
lcall
in
mov
into
xchg
scas
pop
rcrl
xor
mov
das
daa
jmp
pop
movsl
and
push
insb
xor
andb
lret
pushf
imul
fdivs
repz
cmpsl
popa
imul
jle
xor
dec
pop
test
hlt
test
cmpsl
lods
je
lods
lret
out
mov
das
mov
push
mov
jp
shll
pop
notb
and
inc
popf
dec
aaa
imulw
fadds
xchg
lahf
in
mov
adc
lcall
xchg
cmc
ror
std
loopne
adc
insl
dec
dec
sbb
sbb
sbb
sub
dec
sbb
flds
rcl
sbb
dec
or
mov
jg
xchg
mov
jp
jno
push
or
or
je
mov
call
lcall
xchg
loope
fiaddl
mov
mov
mov
fs
sbb
mov
mov
sahf
test
test
fmuls
push
inc
mov
addb
add
in
pop
mov
mov
cmp
sub
jno
pop
xchg
sbb
outsb
and
or
push
inc
xlat
rcrb
idivl
idivl
arpl
ljmp
in
rcl
xchg
test
push
popa
or
dec
sub
and
or
push
pop
pop
pop
mov
daa
sub
add
in
xor
mov
xor
add
test
adc
outsl
pop
mov
sahf
insb
int
inc
add
cld
popf
out
icebp
scas
mov
cmp
mov
mov
test
divl
mov
dec
mull
jne
jo
fwait
adc
dec
cli
jl
push
sti
neg
test
and
ljmp
adc
dec
push
aaa
jg
xor
mov
add
iret
push
dec
pop
sbb
mov
call
push
adc
shlb
mov
jno
jb
rcrb
sub
repz
pop
loop
dec
xor
aaa
dec
pop
aaa
out
pop
pop
int
sbb
cs
gs
adc
aam
mov
jecxz
pop
ja
in
sub
out
ficoms
fmuls
popf
mov
mov
cld
mov
add
mov
pop
xor
xor
les
mov
out
fisubs
leave
mov
push
adc
xchg
popf
outsb
xchg
push
mov
cmp
sub
pushf
mov
xchg
xchg
mov
jbe
sbb
pop
xor
and
push
hlt
mov
out
jns
jno
cmc
scas
insb
bound
aad
inc
or
ror
mov
adc
pop
and
pop
push
push
cli
inc
push
dec
sbb
mov
push
repz
cmp
push
imul
or
mov
xchg
lahf
xchg
daa
mov
sbb
movsl
push
push
in
cmp
lock
push
insl
rolb
mov
xor
xor
notb
cmp
movb
jno
xchg
pop
xchg
orl
jnp
cmp
or
neg
dec
js
not
push
xchg
mov
adc
outsb
jge
out
popf
int
lcall
loope
and
arpl
push
push
shll
and
inc
mov
and
repz
pop
bound
rcll
lea
idiv
out
xor
int
sub
idivl
push
pop
and
inc
test
jl
cli
stos
imul
addl
pop
cwtl
sbb
cmpsl
sub
mov
mov
cmp
ret
pop
mov
lds
loopne
mov
mov
cmp
add
shll
mov
adc
mov
add
fmull
popa
jns
sub
xchg
shll
stos
imul
arpl
int
fmuls
int3
xchg
fwait
sbb
lods
sbb
cmp
dec
aam
dec
adc
dec
jb
sbb
xor
out
inc
gs
jecxz
sahf
and
mov
in
lret
adc
or
inc
jmp
stos
pop
or
push
addr16
push
lods
and
add
push
mov
push
add
jo
xchg
mov
cmp
jb
or
sahf
out
dec
or
xlat
shl
xlat
dec
sub
jle
add
in
jnp
aaa
add
pushf
dec
jno
jg
movsb
enter
add
dec
movsl
dec
dec
xor
addr16
dec
xchg
data16
push
addr16
sbb
sub
pop
mov
fsub
aad
ja
aam
dec
rcr
cmp
xchg
push
add
daa
arpl
repnz
pop
add
pop
and
stc
xchg
roll
xchg
addr16
ret
and
push
pop
daa
cmp
and
mov
and
in
out
test
out
outsl
fcmovbe
push
data16
or
lods
je
loopne
mov
jae
aam
icebp
pop
lock
jmp
dec
aam
mov
mov
jae
xor
ret
dec
mov
pusha
je
jns
mov
ret
aam
dec
lahf
mov
leave
aam
jae
pop
es
stc
call
pop
xchg
mov
or
adc
inc
or
push
add
stos
push
xchg
xor
xchg
mov
add
bound
jns
loope
lret
test
es
sbb
pop
jmp
iret
popf
cli
mulb
fwait
insl
fs
mov
jl
call
out
or
cmp
clc
pusha
xor
imul
push
mov
jl
cmp
mov
lds
pusha
adcb
push
gs
mov
jbe
inc
testl
sub
dec
movsl
cli
cltd
push
insl
vmwrite
xchg
push
mov
mov
mov
pop
imul
pop
xor
out
push
mov
push
adc
add
sub
insl
test
hlt
je
inc
int
std
jl
pop
xchg
xchg
lods
mov
notb
cmpsl
push
cmp
cmp
out
push
or
inc
sbb
xor
adc
pop
mov
and
and
jns
call
inc
ljmp
sti
in
ja
fists
mov
mov
xor
jg
frstor
mov
les
add
cld
insl
dec
xor
mov
push
pusha
push
push
in
lret
outsl
out
mov
dec
js
scas
jo
divl
andb
jle
jmp
out
fildl
fcmovnbe
sbb
sub
xor
imul
arpl
lock
mov
bnd
push
inc
enter
and
mov
fldcw
das
jp
cli
mov
push
ljmp
andl
mov
cmpsb
cmp
stos
scas
xor
cs
sub
mov
inc
sub
arpl
jae
mov
add
call
xchg
loopne
dec
in
mov
lods
sahf
sahf
out
pop
xlat
mov
aad
test
clc
mov
push
stos
loopne
sub
jns
add
into
pop
sub
pop
aam
std
xor
cs
mov
pop
andl
fisubrl
xchg
mov
pop
stos
pop
lock
insb
rclb
xor
sub
pop
cmp
xchg
std
iret
or
dec
loope
inc
xbegin
repz
add
cmp
fstpl
sahf
hlt
cld
fwait
or
mov
inc
and
inc
pop
xchg
fisttps
aam
xor
dec
push
gs
xchg
cmc
push
add
mov
test
andl
sbb
test
fcomps
loopne
insb
in
xchg
xchg
pushf
stc
or
jecxz
adc
fidivrs
in
push
sbb
fbld
dec
sub
rorw
mov
int
jb
ds
inc
xor
arpl
xor
popa
mov
sbb
add
dec
aas
inc
inc
jmp
xchg
ss
outsl
nop/reserved
dec
les
fdivrl
call
xchg
das
mov
lds
sahf
cwtl
dec
mov
push
adc
lahf
mov
mov
movsl
mov
subl
adc
mov
shrl
jne
fcmovbe
push
sub
mov
mov
ljmp
roll
sbb
rcll
inc
dec
dec
insb
adc
cmp
or
or
mov
inc
jmp
movsl
xchg
jno
gs
mov
leave
movsl
insb
sub
shrb
ja
xor
and
fistps
or
mov
push
dec
repz
or
dec
mov
scas
mov
ljmp
lret
xchg
add
roll
pop
and
xor
dec
int3
scas
int
fidivrl
int
cmp
mov
mov
out
sub
or
mov
cmp
cmp
subb
push
cli
xchg
jbe
or
sbbl
insb
jo
aad
out
lret
incb
rorb
mov
xor
out
in
fxch
cli
data16
jo
sub
mov
cmc
lods
xchg
jae
add
pop
das
inc
cwtl
push
out
cmp
jnp
xchg
call
ficoms
out
sub
out
sti
sub
or
push
lahf
jno
adc
jo
push
mov
in
fidivs
sub
bound
lahf
pop
repnz
mov
dec
mov
mov
xchg
adc
and
outsb
xor
hlt
xchg
pop
xchg
jmp
repnz
sub
push
sbb
cmp
mov
cmp
sbb
iret
cmp
pop
dec
mov
mov
in
or
push
ss
mov
js
mov
sbb
cmp
fimuls
icebp
flds
cmp
jp
out
and
sub
mov
pop
out
push
pusha
testb
lcall
mov
lret
cmp
out
iret
out
mov
cmp
out
stc
movsb
mov
cmp
mov
mov
push
xchg
and
dec
daa
inc
pusha
xor
xor
pusha
push
pop
sbbb
out
adc
loop
andb
mov
sbb
sub
sub
lret
adc
sbb
dec
inc
add
sbb
fildl
out
fbstp
lock
sbb
jge
insb
cmc
lahf
dec
mov
dec
push
mov
ficompl
cmc
dec
rol
sub
mov
push
daa
adc
je
mov
out
lcall
cmpsl
aas
out
inc
jae
and
xchg
cmpb
inc
mov
jl
sbb
xchg
mov
dec
mov
jge
sub
mov
bound
inc
push
dec
cmp
pop
push
jl
insl
cs
push
mov
nop
cmp
mov
lea
adc
jo
aaa
addr16
aam
push
mov
aad
mov
add
adc
cmp
jp
mov
fisttps
shrb
sbb
pop
mov
cltd
push
push
mulb
leave
add
jnp
sbb
jecxz
mov
loop
dec
adc
rcl
pop
cmp
stc
mov
fstl
xorl
add
testb
mov
sbb
ljmp
add
push
xor
nop
mov
lret
movsb
ficomps
mov
aas
sub
das
loopne
mov
dec
add
nop
mov
add
mov
movswl
add
pushf
add
test
sub
test
cld
sbb
dec
sbb
data16
mov
xchg
lcall
xchg
and
xor
subl
jo
ficoml
jno
pusha
jp
cmp
pop
mov
jbe
or
movsb
loop
loope
xchg
decl
pusha
popa
movsb
push
cli
scas
stos
mov
scas
imul
jmp
jo
lahf
pop
xchg
mov
sbb
insl
lcall
push
addl
cmp
sub
repz
sub
fwait
adc
pop
in
jae
imul
hlt
popa
cwtl
mov
or
in
mov
xor
mov
mov
shrl
cmp
jecxz
daa
mov
inc
ret
addr16
dec
sti
and
fsubrs
std
loop
cmp
loope
ja
add
pusha
enter
mov
dec
test
cmp
ljmp
iret
fs
and
inc
clc
jb
sbb
popa
cmp
ret
fs
popa
aam
xchg
stos
push
outsb
scas
inc
xchg
mov
sub
ss
cmc
repz
xor
mov
sti
adc
xchg
or
jl
rcrb
lods
dec
addr16
rorb
and
sbb
jns
mov
loope
imul
js
call
das
pushf
subl
push
and
mov
js
cmp
pop
in
aaa
cmp
mov
inc
in
xor
xor
xchg
mov
mov
out
adc
cli
and
mov
xor
sub
inc
dec
out
rcll
movsb
sub
xchg
daa
inc
xor
or
sub
inc
jg
and
pop
imul
aam
aam
jae
push
sti
stos
loope
andl
dec
xchg
insl
test
int
movsl
pop
inc
adc
lods
cmpsb
testl
adc
and
rclb
fcmovnb
jb
in
pop
lock
cmp
xchg
movsl
roll
push
push
mov
mov
outsl
sub
sub
nop
and
lahf
xor
aas
pop
dec
rorl
mov
push
inc
mov
sub
or
fdiv
inc
std
sahf
sub
shl
pusha
push
popf
punpcklbw
jo
cmp
mov
add
lock
pop
sti
pop
dec
xchg
cli
fidivs
xor
ss
push
push
xor
test
add
cs
sub
cmp
repz
and
xchg
out
out
test
ficomps
mov
inc
push
mov
scas
clc
cs
shlb
stos
pop
int
iret
test
mov
push
push
stc
lret
adc
inc
pop
lcall
inc
imul
pop
js
repnz
ror
mov
mov
adc
sar
data16
outsb
jmp
inc
jbe
sub
idivb
loopne
sbb
imul
push
cmp
scas
lahf
ljmp
bound
movsl
pop
loopne
imul
fnstsw
sub
jb
mov
enter
sbb
lret
mov
mov
adc
ds
stos
lret
jg
inc
sub
fsubr
push
mov
mov
and
rcll
aam
in
fwait
into
das
cli
lret
mov
lods
iret
or
es
jecxz
mov
mov
stos
movsw
outsb
add
data16
dec
jge
dec
pusha
xchg
filds
push
mov
orb
int
testl
jge
cmpsb
jnp
push
sub
add
fldl
sbb
push
mov
mov
or
cmp
sub
pop
lods
mov
jmp
movsb
push
out
cli
and
insl
testb
inc
jge
push
in
adc
push
xor
inc
jne
xor
stos
jmp
lret
int3
sbb
mov
and
pop
stos
test
in
sub
scas
js
stos
adc
int3
xlat
fidivs
xor
mov
mov
clc
jecxz
push
scas
into
test
mov
xchg
sub
push
xor
lret
push
fistpl
andl
ljmp
shll
cmp
xchg
loope
lret
les
test
xlat
popa
imul
aam
pop
lea
xchg
cmpsl
out
mov
cmp
cs
jp
jns
xor
es
lret
outsl
and
jg
enter
pop
cmp
push
inc
mov
loop
int
imul
gs
lds
ja
scas
rorl
xlat
cmpsl
dec
cmp
push
mov
push
adc
xchg
adc
sahf
sti
cli
pop
adc
mov
sbb
cmp
or
mov
push
dec
mov
and
xchg
mov
lcall
outsb
inc
lret
inc
or
ret
es
push
or
ljmp
movsb
daa
mov
data16
ret
xchg
arpl
lea
rol
stos
mov
lret
add
test
in
sahf
daa
outsl
outsb
lods
ret
sub
mov
mov
push
xchg
or
imul
lahf
in
add
addl
dec
inc
adc
fimuls
pop
lods
imul
dec
rcll
fimull
loopne
inc
icebp
faddl
inc
inc
cmpsb
and
fisubrs
lds
xlat
call
jle
into
lcall
lret
outsl
push
scas
inc
fsubrs
movsb
add
cmp
sbb
pop
mov
rdpmc
inc
outsl
imul
movsl
aas
test
out
sahf
lahf
roll
iret
pop
sub
mov
xlat
adc
iret
test
jb
inc
xor
mov
movsl
push
sub
mov
push
cmp
pop
or
out
inc
xor
bound
add
sbb
leave
mov
bound
xchg
test
sub
das
frstor
out
pop
jbe
loope
and
bound
cmp
stc
dec
repnz
and
cld
pop
mov
or
jb
mov
movaps
mov
pop
aaa
mov
jnp
inc
pop
dec
add
adc
insl
data16
adc
sbb
leave
pop
pop
pop
jb
pop
hlt
pop
sarb
leave
dec
xchg
neg
ds
or
inc
xor
mov
pop
pop
xchg
xchg
repz
xor
data16
and
in
fld
jge
fsubrs
jno
fcoms
daa
inc
jmp
shl
mov
xorb
ficomps
movsl
push
mov
dec
sub
aad
negb
test
inc
jns
lods
dec
das
sub
push
sbb
pop
xchg
lahf
push
cwtl
mov
ljmp
ret
xor
rcll
testl
mov
mov
mov
insl
negl
ret
rol
frstor
xchg
or
ret
decl
dec
inc
idivl
add
mov
dec
lcall
je
cmp
adc
and
lahf
sbb
adc
ret
lds
outsl
xchg
sub
or
mov
scas
jnp
int3
out
dec
cmp
adc
or
push
sbb
xorb
sahf
jl
mov
sub
sti
es
enter
cmpl
push
jb
xor
loope
mov
cmp
cli
mov
das
and
imul
mov
sbb
shrb
dec
sub
mov
je
mov
or
add
and
into
pop
stos
dec
pop
sub
scas
mov
lcall
repnz
jno
sub
test
mov
je
push
aam
fwait
xor
inc
test
lock
pop
push
mov
pop
out
adc
fistps
orb
fsubrs
pop
ret
pop
xchg
in
or
push
mov
cmpsl
lock
and
jmp
cs
sub
imul
rcr
cltd
ljmp
insb
cmpsb
add
sbb
movsb
xor
adc
cmc
ljmp
xchg
lahf
xchg
insl
arpl
call
inc
sub
test
sti
xor
aam
int
sub
out
pop
inc
out
push
out
pop
out
fcmovbe
adc
and
mov
enter
mov
lods
test
insb
xlat
dec
int3
ss
clc
xor
inc
mov
movsl
or
into
xchg
xor
daa
mov
int
popf
cmc
mov
dec
rorl
jo
outsb
call
push
mov
and
xlat
dec
cltd
jnp
inc
mov
cmp
add
or
jns
sub
adc
push
add
jae
popa
icebp
jbe
jo
push
lahf
ljmp
and
pop
into
xor
inc
pop
jo
lcall
pop
sub
out
or
aaa
repz
repnz
xor
fcmovb
push
dec
mov
mov
fcoms
mov
sub
lret
sar
xchg
add
lcall
dec
mov
push
divw
cs
fcmovnbe
sub
int3
lods
xchg
mov
faddp
push
add
shll
cltd
pushf
mov
mov
sti
mov
inc
push
mov
clc
mov
jnp
ljmp
cmc
or
fistps
js
mov
ret
pop
aam
cld
frstor
jge
shll
jo
data16
mov
lods
das
cmp
mov
inc
add
sub
vmaxpd
mov
jns
push
push
jae
mov
enter
aad
popf
cmp
pop
loopne
out
into
lods
mov
sub
incl
lea
mov
lcall
in
or
push
xchg
rcrb
push
es
mov
repnz
cmp
es
lock
pop
sbb
jb
loop
or
inc
and
jae
xchg
rorl
cmpl
push
adc
or
pop
pop
dec
dec
sbb
push
xor
sub
inc
fdivs
js
out
sub
cmp
adc
jo
pop
dec
cvtps2pd
ret
and
loopne
out
mov
popa
jnp
mov
jp
xor
jmp
loop
cmp
ljmp
xchg
cmp
loop
notb
setge
dec
sarb
xor
subl
xchg
fwait
mov
push
lcall
xor
scas
adc
mov
mov
clc
xabort
jbe
cmpsb
mov
in
jbe
mov
inc
lods
push
stos
sub
push
cmpsb
add
xor
pop
push
outsb
hlt
data16
mov
xor
lea
adc
lds
daa
sbb
lds
jg
pushf
fnstcw
mov
mov
loopne
lds
or
sbb
mov
dec
and
lret
xor
push
push
pop
stc
fisttpl
mov
out
je
pushf
pop
jo
enter
in
lods
fcompl
dec
pop
xchg
ljmp
lods
adc
jo
cmc
push
jle
cli
repz
out
in
jne
movaps
mov
adc
xchg
out
and
push
pop
les
test
mov
pusha
sbb
mov
adc
pop
std
mov
xchg
xor
cmpsl
dec
inc
sub
inc
dec
loope
fimuls
into
inc
cmp
xor
icebp
pop
cmp
adc
mov
jle
pop
jo
test
mov
jle
mov
jnp
sbb
push
cmp
dec
xchg
loopne
icebp
lods
aam
mov
sbb
js
jl
and
dec
aas
pop
inc
xchg
ret
fistps
jae
cmpsl
cmp
faddl
dec
sbb
inc
lahf
repz
sbb
and
mov
push
mov
xchg
fldcw
out
or
mov
mov
inc
out
popf
mov
dec
repz
test
sub
int3
lea
loopne
sbb
stos
mov
ss
push
leave
test
es
movsl
lret
ljmp
jl
and
add
push
xchg
and
adc
dec
dec
aas
push
sub
loopne
mov
add
dec
mul
popf
sub
pop
aad
test
add
int3
sbb
arpl
rorl
sbb
xrelease
or
add
enter
dec
xor
fs
fisubl
inc
adc
iret
dec
lret
fldenv
xchg
in
pushf
mov
clc
loopne
inc
or
cs
dec
dec
in
jno
dec
jnp
mov
jl
add
loope
mov
fldt
xor
mov
xchg
cmp
xor
mov
bound
mov
jns,pt
adc
test
dec
jl
sbb
les
test
push
ds
in
gs
pusha
inc
pusha
pop
out
add
pop
cwtl
jmp
ljmp
sub
and
fldcw
add
mov
sbb
loop
mov
es
dec
inc
push
mov
icebp
xchg
test
cmp
out
and
push
in
inc
ret
sahf
scas
lods
arpl
inc
dec
leave
jg
xor
mov
sarl
aad
iret
ss
shrl
bound
sti
pop
test
pop
or
fs
dec
or
iret
pusha
lret
aaa
fwait
out
xchg
aas
and
mov
lahf
xor
adc
call
into
jae
sahf
push
jne
leave
out
cli
dec
mov
sbb
add
in
sub
or
aaa
sbb
pop
jp
dec
or
lahf
cmp
mov
sar
xor
mov
and
mov
xchg
mov
negb
push
dec
popa
fdivs
in
test
aaa
cmpsl
mov
insb
aad
jo
push
inc
scas
add
cld
arpl
inc
enter
je
adc
fmull
mov
cmpsb
dec
je
sbb
movb
sub
das
ret
xchg
mov
push
xor
pop
es
jns
mov
imul
movsl
ljmp
push
scas
cltd
inc
loop
pop
movsb
sbb
xor
jae
outsb
ret
icebp
mov
rcll
leave
dec
das
loop
int
inc
pop
xchg
aad
sub
xor
push
test
ret
ds
pop
lahf
jbe
jnp
test
xor
pop
je
xor
mov
sub
cmpb
add
in
mov
rclb
rol
aaa
inc
leave
loope
adc
ja
add
in
push
xor
imul
xor
push
push
and
push
jg
lods
clc
outsb
cmp
mov
iret
lock
sti
leave
xchg
jp
inc
popa
sub
and
testl
test
aam
addl
adc
mov
adc
pop
test
mov
inc
repz
adc
les
or
into
lods
js
dec
add
add
std
and
push
jo
and
clc
cmpsb
fsubl
out
jecxz
je
xor
rcl
inc
inc
shl
iret
rorl
cmp
mov
pushf
call
dec
pushf
dec
stos
sub
scas
xor
cmp
test
sbb
xchg
or
push
cltd
adcb
aam
jo
mov
popf
lods
iret
js
jne
call
cs
cmp
sbb
mov
leave
lahf
mov
ds
dec
scas
arpl
sub
aaa
sbb
or
cwtl
ret
fldpi
call
fsts
fildl
xchg
movsb
push
lods
mov
stc
lret
int
pushf
jno
and
test
pop
cltd
cmp
push
movsl
fiaddl
rorb
push
rcrb
push
mov
arpl
dec
aam
in
decl
loope
pop
test
jnp
loop
lock
in
stos
push
cli
xor
clc
into
xchg
dec
mov
cs
add
cvtps2pi
push
jb
push
sti
cmpsl
fwait
cmc
xor
lock
shrl
dec
adc
sahf
lret
nop
pop
mov
adc
pop
hlt
into
jmp
adc
adc
ds
pushf
cmp
mov
and
popf
xor
jmp
sub
mov
jo
movsb
addr16
and
lahf
xor
test
sub
sahf
sbb
mov
or
clc
xor
repnz
lock
push
mov
sbb
mov
mov
ret
inc
stos
add
inc
or
cmpsl
xor
sub
lea
dec
arpl
push
pusha
pop
in
add
mov
dec
push
xchg
sbb
adc
jbe
insl
shlb
neg
pop
flds
jmp
orb
adc
inc
cs
push
xor
push
pop
inc
cltd
shll
sub
test
xchg
call
in
or
sub
shrb
mov
sub
push
in
cmpsl
das
add
mulb
xchg
mov
mov
or
ror
mov
mov
mov
in
push
mov
or
fsubrl
ret
outsb
xchg
outsl
iret
out
jge
xor
jmp
out
aas
jno
jne
out
cmp
xchg
adc
aam
lea
sbb
pop
lds
outsl
xchg
inc
push
jge
and
adc
pusha
adcb
in
jle
mov
mov
js
movsl
mov
mov
cmpsb
fadds
jns
pop
rep
cltd
fmuls
int3
sub
sub
cmpb
xor
sahf
daa
dec
sbb
cwtl
imull
jg
xchg
jbe
inc
jl
or
inc
clc
frstor
shlb
ret
leave
sub
xor
pop
pop
adc
inc
push
cld
ja
fiaddl
je
push
mov
push
fisttps
call
mov
js
pop
repnz
jmp
adc
neg
fsub
std
xchg
and
and
mov
repz
and
inc
and
sbb
and
and
into
mov
iret
xchg
dec
cwtl
aad
inc
repz
pop
xchg
cmc
mov
cld
mov
in
inc
jne
fwait
and
xlat
cmp
call
cmp
mov
sbb
fadd
and
loopne
push
pusha
in
lcall
gs
pop
push
sub
lea
cltd
dec
enter
xor
mov
inc
mov
sub
je
sbb
gs
ror
xchg
inc
mov
push
sbb
dec
sub
or
inc
scas
pop
and
add
popa
sbb
sbb
jg
outsl
movsl
xor
call
pop
andl
in
xchg
enter
scas
lds
cltd
rclb
sub
rolb
jno
jg
in
leave
push
and
mov
inc
mov
rcll
in
imul
loopne
and
adc
mov
mov
dec
fbld
pop
in
mov
leave
inc
fcoms
and
repz
arpl
ss
pop
inc
mov
pop
add
out
pop
inc
out
stc
mov
dec
sbb
jg
daa
dec
in
add
pop
outsb
xor
lcall
loopne
push
adc
les
inc
mov
cmpsl
pop
aaa
and
movsb
loope
push
jbe
mov
xchg
insb
cmpsb
dec
shll
mov
and
lods
adc
outsb
out
repnz
xor
es
pop
push
sub
ds
mov
jb
dec
outsb
out
mov
xchg
dec
cmp
std
insl
dec
lcall
mov
adc
call
out
push
fs
lret
shlb
adc
insb
mov
push
lds
cmp
sbb
xchg
mov
xchg
pop
sbb
scas
loope
repz
dec
loopne
loopne
xor
cmpsl
mov
xchg
and
movsb
data16
fmuls
cmp
xchg
fwait
lea
int3
movsb
aam
jns
hlt
inc
rorb
out
jb
cs
push
xchg
dec
mov
dec
fldt
es
pop
lahf
nop
xor
pop
mov
data16
add
fwait
cwtl
cli
pop
dec
stos
sarl
movsl
cs
fsubrl
dec
mov
mov
or
add
jge
dec
mov
sub
dec
xlat
mov
or
xor
adc
lock
mov
movsb
rcl
cltd
test
outsl
rcrl
pop
fcmovne
adc
shrb
cmp
push
shll
jne
jb
jns
addr16
adc
xlat
lds
out
add
xchg
scas
call
rcrb
inc
lods
mov
cwtl
xor
les
dec
push
lret
push
dec
out
jecxz
mov
enter
cmp
fwait
mov
xor
aas
xor
enter
or
sbb
shlb
add
divl
inc
sub
imul
sub
jle
sbb
imul
ficoms
mov
push
les
pop
inc
push
cli
xor
aas
int3
out
in
xchg
fwait
mov
fucomip
xchg
jae,pn
das
dec
int
scas
aaa
mov
je
adcb
ficompl
cltd
repz
dec
lods
adc
add
adc
fstpl
pop
mov
jle
jae
das
or
and
add
jp
sbb
es
push
lock
push
dec
cmp
add
xor
rolb
add
push
in
pop
sbb
add
xor
mov
inc
das
movups
test
in
adc
add
clc
dec
cmc
pop
in
icebp
inc
in
mov
gs
push
push
in
adc
cmp
jbe
lcall
ret
push
xchg
mov
cs
test
pusha
leave
mov
adc
or
jno
in
int3
popa
leave
in
cld
addb
sbbl
push
push
push
jno,pt
push
and
jno
xlat
in
xor
js
mov
adc
cmpsl
ss
iret
ficompl
push
bound
mov
add
pop
fldt
pop
into
sarl
clc
ss
push
push
adc
xlat
jl
mov
pop
mov
pop
mov
stos
add
hlt
scas
or
pop
cmp
mov
stos
mov
lret
mov
andb
scas
xchg
insl
cmp
idivl
jl
stc
or
enter
lahf
pop
stc
or
int3
dec
sahf
jns
pusha
mov
mov
fcomps
es
inc
push
jmp
or
test
mov
jp
pushf
ss
xchg
daa
stc
jae
inc
xchg
ss
lret
adcb
daa
out
hlt
mov
jbe
int
cwtl
pop
pop
pop
mov
mov
mov
imul
xchg
aad
sbb
xlat
inc
add
sub
out
xor
int3
inc
call
mov
ret
fisubl
stos
or
daa
test
call
xorl
dec
pop
pop
repz
std
bound
sub
xchg
leave
sub
sbbb
arpl
out
mov
pop
push
stc
cmp
and
std
mov
call
lods
push
out
lcall
rol
mov
loope
pop
push
pushf
nop
jae
testb
insl
cmp
and
movsl
lods
add
ljmp
orl
adc
jnp,pn
xor
mov
cmp
push
push
jl
or
lods
lods
cmp
xchg
lret
repnz
fstl
inc
mov
add
and
mov
adc
cld
adc
mov
jg
stos
in
push
enter
inc
mov
and
and
rolb
xchg
or
lods
nop
pop
mov
push
hlt
xor
cltd
popf
push
adc
fstps
insb
push
mov
pop
jle
cmc
dec
ja
xlat
add
xorb
call
ret
mov
mov
mov
mov
push
xchg
dec
pop
lret
or
fildl
jmp
ljmp
jno
popl
adc
jge
fisttpl
push
aaa
rcrb
mov
clc
push
sub
imull
inc
push
lock
pop
dec
lret
mov
insl
stc
test
rcrl
push
xor
testl
imul
mov
mov
mov
lahf
add
and
inc
es
insl
adc
popa
or
pop
call
mov
fwait
mov
and
insb
push
cld
aaa
and
fdivrs
enter
je
mov
dec
and
push
in
cmp
movsl
dec
mov
sbb
or
orb
mov
or
xchg
push
roll
mov
inc
in
inc
inc
or
cmc
jno
dec
fwait
jp
stc
icebp
scas
inc
stc
pop
enter
out
inc
and
cld
out
test
mov
sbb
fs
in
hlt
mov
cmp
xchg
cmp
jg
inc
add
xchg
lea
pop
clc
inc
test
xor
xchg
jns
in
and
adc
adc
lret
data16
xor
cwtl
jge
push
out
stc
aaa
jno
mov
pop
push
mov
lcall
push
std
inc
jne
adc
and
mov
mov
fimull
enter
dec
popf
sub
or
aas
in
pop
push
mov
push
inc
jmp
sub
or
pop
cltd
inc
movsb
hlt
or
stos
mov
push
fwait
movsl
test
mov
addr16
pop
cmp
daa
sub
mov
das
out
icebp
add
push
pop
loopne
aaa
pusha
dec
loope
mov
imul
mov
sbb
and
subb
adc
lods
push
xchg
pop
ret
xor
dec
rol
add
xchg
lret
pop
xchg
aas
mov
arpl
fidivrs
lods
out
sbb
notl
std
lret
sbb
add
jno
mov
xchg
jae
xchg
mov
js
dec
je
stos
popa
jno
mov
jns
pop
jge
movsb
add
jle
mov
pushl
and
fidivrs
popf
mov
into
inc
xor
add
iret
inc
or
sbb
cwtl
inc
jg
icebp
xor
pop
loope
pop
mull
mov
int
imul
push
imul
pop
aam
das
sbb
jge
adc
ret
cmpsl
or
jno
xor
daa
cmp
adc
jp
arpl
mov
jle
jp
fiadds
xchg
push
fs
push
xchg
dec
xor
test
or
sbb
inc
enter
xchg
or
cld
jnp
xchg
scas
mov
sahf
fstpl
mov
arpl
cmp
push
mov
inc
fcomps
hlt
mov
mov
test
lods
dec
dec
movsb
leave
mov
es
outsb
xchg
test
sar
shrb
sbb
xchg
or
xchg
push
imul
adc
jae
in
mov
je
jnp
out
fsubp
jl
xorb
test
xor
lahf
lcall
hlt
xchg
rep
mov
test
xchg
lods
dec
aaa
pop
push
imul
mov
pop
dec
popf
outsb
push
gs
cmpl
mov
inc
mov
cmpsl
daa
sahf
push
jle
stos
sub
sbb
lret
cmc
or
pop
loopne
pop
pop
or
push
sarb
push
pop
fistpl
pop
mov
fiadds
mov
fistps
xchg
xor
push
sbb
xchg
divl
pop
xchg
ret
pop
ds
and
xchg
lds
or
fsubrs
push
add
adc
mov
push
dec
inc
dec
push
sub
sub
or
cs
ljmp
jmp
inc
push
outsl
shrl
push
fimuls
stos
sub
ret
or
push
mov
adc
push
lahf
addr16
jae
ret
cmp
inc
add
addr16
insl
jbe
push
test
or
adc
rol
outsl
icebp
negl
jae
sarl
clc
sub
pop
mov
insl
fildll
js
int
push
and
nop
shl
in
sub
loopne
inc
data16
arpl
aas
loope
in
loopne
sahf
fnstsw
out
cwtl
inc
jo
test
push
movsb
outsb
xor
dec
pop
loopne
mov
addr16
in
and
arpl
pop
and
negb
les
xor
and
mov
nop
xchg
dec
mov
mov
mov
test
sbb
loop
or
push
sbb
iret
mov
loopne
xchg
loopne
rcll
adc
sbb
xchg
imul
cld
xlat
push
scas
pop
mov
mov
movsb
push
cwtl
fcomps
adc
orb
inc
cltd
xchg
nop
fidivrl
add
mov
insl
outsb
mov
mov
xchg
mov
cmp
addr16
cmp
test
fbstp
sahf
xchg
mov
arpl
cmp
mull
enter
scas
mov
test
cs
adc
sbbb
jno
xchg
xor
xor
jne
xchg
xchg
push
jbe
loopne
hlt
decb
pop
adc
cmp
shrl
dec
ja
popa
sahf
inc
xor
lds
sbb
enter
mov
sbb
cmc
push
mov
adc
adcb
xor
sbb
xor
inc
mov
pop
cmpb
xor
sbb
mov
lds
into
shl
fiadds
cmc
mov
movsb
mov
jl
mov
push
fisttpll
xorl
shr
cwtl
scas
or
enter
jmp
jb
sahf
mov
or
and
loop
clc
or
mov
add
out
daa
xor
mov
push
stos
fnsave
jo
inc
shlb
imul
insb
sbb
xor
mov
xchg
cld
mov
fsubl
leave
jmp
dec
push
cltd
in
jno
andb
pop
fcmovne
int
lods
gs
xchg
mov
pop
push
int3
call
cli
lds
outsl
ja
mov
and
cwtl
sbb
push
and
inc
pop
pop
shrb
or
and
imul
cmp
cmp
mov
test
jg
jb
adc
cmpsb
mov
push
xor
push
mov
sahf
iret
adc
iret
push
scas
adc
mov
mov
adc
jo
cld
movsb
loop
inc
push
add
inc
push
es
dec
pop
mov
cmp
loop
jle
add
neg
mov
push
sub
push
ja
mov
mov
je
jmp
xor
vcvtsd2ss
sbb
xchg
xor
sbb
cmp
bound
jns
sbb
xchg
scas
push
sub
sbb
jb
mov
mov
popa
add
push
jo
inc
stos
fs
xchg
jae
into
addb
mov
mov
inc
cwtl
in
sub
mov
push
jmp
mov
lock
hlt
cwtl
cmc
daa
sub
jns
test
inc
mov
jl
lock
jno
nop
add
mov
mov
rcrb
bound
test
sub
stc
mov
shr
in
rcrb
mov
aad
pusha
inc
test
rorb
sbb
sbb
out
push
fisubl
mov
shll
mov
xchg
sbb
ljmp
aam
call
dec
pop
mov
xlat
orl
fwait
jge
and
sub
mov
dec
arpl
jns
fdiv
and
dec
jno
popa
sbb
jb
and
push
mov
ret
fidivl
mov
daa
rorl
push
adc
iret
pop
popa
out
out
outsl
push
push
adc
jp
jno
mov
out
mov
fstpl
scas
pushf
mov
inc
jmp
lea
or
sbb
xor
xor
adc
dec
xchg
xchg
repnz
lret
push
cmp
ret
test
inc
mov
aas
sahf
dec
lret
fidivrs
movsl
xchg
adc
mov
mov
lcall
xchg
lods
pop
lcall
movsb
and
sbb
mov
imul
bound
pop
or
int
jo
out
mov
adcl
movsl
push
mov
pop
lcall
add
lcall
fstpl
in
xchg
or
push
movsb
pop
push
sub
lcall
ss
xor
mov
sbb
in
jb
lret
gs
fstpl
pusha
test
mov
fstl
dec
pop
mov
insb
test
pop
ljmp
clc
insl
push
stc
xchg
shll
cli
test
push
push
ret
fistpl
jb
insb
push
xor
mov
int3
mov
daa
sbb
mov
inc
add
enter
pop
bound
cwtl
cmp
daa
xchg
or
nop
cmp
shll
ret
out
cmp
pop
pop
out
aam
xlat
ja
adc
std
test
pop
shrl
inc
xor
stos
add
cmp
clc
cmp
fdivs
jle
jg
push
push
scas
std
xchg
adc
insb
test
jnp
inc
xchg
imul
mov
cmpl
das
or
lds
fisttps
ret
fsubrs
mov
push
sbb
mov
xchg
repz
mov
les
ljmp
xchg
das
sbb
movsb
add
and
pop
icebp
xor
xor
or
pop
mov
jb
mov
xor
sahf
jb
mov
fimull
mov
int3
lret
cmp
jp
outsl
jbe
cmp
repnz
push
or
lods
scas
inc
and
add
dec
call
dec
pop
mov
enter
out
jb
lea
movsb
leave
jl
aas
push
fs
and
dec
lea
push
cmpsb
sub
jnp
js
data16
push
testl
cmp
test
shrb
ds
pushf
mov
loop
int3
pxor
aas
sbb
and
das
mov
sub
imul
inc
dec
test
mov
push
jecxz
xchg
xor
cmp
fwait
div
in
mov
mov
inc
push
and
cmp
xchg
xorb
shl
imul
sbb
mov
push
outsl
push
cmpsb
xchg
jo
xchg
adc
jge
sub
les
jp
xor
push
mov
push
sub
enter
andl
push
divb
sbb
jecxz
mov
pop
push
jg
mov
les
xor
xor
sbb
clc
xchg
add
mov
mov
loope
jecxz
xor
xor
bound
sub
sub
test
jno
and
jg
loope
jge
xchg
jbe
sahf
lock
sti
dec
fdivl
jb
mov
divb
mov
pusha
push
push
push
or
mov
rcrl
pop
or
dec
insl
fsubrl
jb
aam
enter
cwtl
popa
arpl
mov
jle
test
inc
xchg
popa
push
sti
push
loop
sbb
stos
test
mov
dec
aaa
and
cmp
mov
cmpsl
pop
arpl
cmp
pop
add
gs
mov
int
cmpsl
jo
push
mov
xchg
push
and
ficoms
fld
inc
sub
in
rorb
out
jns
dec
pushf
fs
fwait
adc
ss
adc
inc
mov
je
add
scas
cmpsl
nop
xchg
ja
daa
jno
sub
ja
out
dec
and
pop
rclb
fsubl
mov
cmc
cmp
sub
lds
mov
std
sub
inc
mov
sbb
xor
xchg
mov
rolb
fisttpll
out
leave
int
mov
lea
adc
dec
shlb
into
mov
jbe
inc
imul
inc
dec
imulb
stos
add
pop
inc
and
mov
jge
hlt
jne
addb
repnz
loop
cltd
stos
lahf
imul
push
pusha
xchg
std
outsl
and
push
in
shl
ja
in
pop
add
sbb
push
ret
inc
mov
or
ljmp
pushf
ja
push
push
orb
pop
dec
pop
cs
andl
imul
push
sbb
fiaddl
stos
cmp
xor
add
sub
leave
and
fnstenv
out
and
je
jmp
loopne
icebp
mov
jl
test
adc
cmp
dec
fldcw
icebp
dec
enter
pop
pop
in
pusha
pusha
sub
push
pop
in
mov
aad
xlat
lods
rorl
cld
sbb
call
jno
and
aaa
jge
aaa
pop
sub
andb
xor
mov
cmp
mov
addr16
mov
scas
test
out
mov
inc
fiaddl
dec
inc
xchg
jg
out
mov
sub
in
into
fdivs
mov
js
pop
in
mov
das
jge
mov
in
mov
addr16
imul
repz
lock
jae
adc
sbb
iret
test
push
or
mov
pop
adc
scas
xorb
xchg
fwait
mov
es
or
out
mov
rolb
outsb
int3
fs
loop
add
lcall
cld
test
je
xlat
out
addr16
add
sbb
fcom
xchg
sub
or
mov
sub
ret
pop
insb
lret
fs
loopne
movsb
stos
test
into
call
aam
dec
js
dec
lahf
movsl
mov
push
pop
imul
and
xchg
out
push
in
mov
rolb
sbb
es
inc
cwtl
push
push
hlt
jecxz
push
xchg
mov
xor
aas
mov
lret
mov
pop
lret
mov
inc
scas
mov
lret
xchg
in
inc
cld
shl
inc
aam
pop
mov
mov
cmpb
mov
inc
popf
pop
filds
xor
sahf
and
pop
jmp
int3
in
popa
test
cltd
mov
idivl
inc
pop
jg
dec
cmpl
lock
sahf
adc
ret
ss
arpl
jne
popf
adc
push
lods
sbb
push
movsb
jecxz
sbb
or
test
inc
out
imul
popa
stos
adcb
add
xor
int
in
jno
mov
fcomps
aad
imul
mov
stos
add
movsb
sbb
cmp
cltd
call
stc
repnz
sub
lods
hlt
xchg
bound
ss
lods
or
sbb
ja
push
sarl
sbb
iret
test
pop
mov
sub
xchg
rorb
mov
shll
mov
ljmp
das
xor
push
icebp
jge
fidivrs
add
iret
enter
xlat
xchg
negb
or
xor
pop
int
or
imul
xor
movsb
dec
inc
addl
cmp
sub
sti
mov
test
or
push
adc
jno
gs
xchg
aas
mov
mov
jo
popf
or
dec
sub
or
pop
rcl
fmull
data16
aam
jge
ret
sbb
es
sahf
cltd
adc
mov
aas
rclb
rcll
push
mov
sbb
nop
xchg
xchg
les
mov
cmp
sbb
inc
inc
out
pop
rorl
dec
jnp
pop
and
movsb
sbb
sahf
cmp
push
scas
out
inc
aas
xchg
nop
lahf
iret
jmp
mov
mov
aam
adc
or
cmc
add
cmp
gs
mov
push
mov
cmpsb
mov
inc
sbb
xor
repnz
movsl
icebp
mov
aas
jbe
cmpl
cmp
or
std
inc
jne
mov
sti
jne
iret
push
mov
mov
xorb
sbb
dec
shrl
test
or
mov
stos
sbb
sub
pop
pop
cmpb
scas
cld
dec
sbb
jecxz
and
mov
test
sahf
cld
and
push
adc
xchg
idivb
or
xchg
out
cmc
lahf
scas
mov
mov
lds
out
and
and
or
shll
mov
lds
gs
sbb
sub
pop
fnstcw
pop
test
cld
scas
or
mov
mov
fwait
mov
stc
cmpsl
push
popa
aas
cmp
sbb
mov
sub
push
inc
aad
loope
jne
enter
in
js
xchg
ljmp
fidivs
popa
add
decb
divl
mov
adc
jno
mov
add
arpl
inc
sub
mov
xor
pcmpgtd
inc
add
push
cld
mov
mov
cld
dec
adc
jb
add
mov
addl
mov
mov
xchg
ss
rolb
jb
mov
adc
std
add
sbb
cmp
or
fsubr
movsl
pop
push
sub
push
push
cmp
mov
dec
sbb
shlb
inc
data16
shlb
pop
movsl
cli
cmc
jae
xor
lea
mov
ljmp
bound
aas
add
jo,pn
sahf
fstpl
push
jne
push
xchg
faddp
and
xchg
mov
push
cmp
ds
jge
pop
lret
dec
shlb
js
in
and
push
sbb
push
movsb
shrl
and
inc
cld
jbe
push
jge
jb
xorb
cwtl
inc
repnz
cmp
jno
shll
push
aaa
ret
cmp
jbe
pusha
cld
fisubl
std
ljmp
test
ret
dec
jo
scas
inc
inc
bound
std
xorb
xor
push
pop
pop
cmpl
lret
test
add
arpl
sbb
les
mov
lods
ficoml
push
or
push
push
lahf
cmp
hlt
sub
jno
imul
fisttpl
jnp
hlt
jae
sbbl
cmc
sub
sahf
scas
jbe
cmp
aas
cmp
cmp
in
xchg
jno
fstpt
jb
push
lods
std
adcb
and
pusha
lret
lock
inc
fs
xor
inc
mov
add
fs
jns
mov
mov
mov
add
mov
add
mov
sahf
mov
jl
mov
adc
add
aam
or
xor
fistpl
enter
sub
mov
call
or
jb
cmp
ja
jo
pop
jne
popf
ja
mov
mov
inc
xchg
ljmp
mulb
jecxz
pop
pop
cltd
inc
mov
popf
jno
data16
jbe
rcrl
cld
sub
cmp
jl
or
push
jae
jge
jl
outsb
idivb
adc
out
add
scas
push
pop
aas
adc
xchg
les
xor
push
cvtps2pd
push
stc
arpl
lea
loope
push
lock
sbb
in
fcmovu
clc
or
rol
aaa
loop
push
sbb
syscall
loope
mov
jle
mov
icebp
mov
dec
adc
loope
jae
add
lock
mul
and
jl
inc
data16
pop
int3
lods
lods
push
scas
lods
adc
idivl
test
ret
pop
push
jb
stos
or
lcall
push
adc
push
dec
xchg
cli
in
xchg
lock
loopne
inc
mov
fildll
push
mov
call
jno
sti
add
mov
mov
aad
cmp
movsb
jle
mov
mov
inc
das
dec
sub
cli
aaa
pop
mov
or
rcrb
outsb
jg
aas
popf
in
icebp
xor
mov
xlat
pop
ss
fnsave
sub
cmpsl
stos
cmova
sti
push
fdivrl
ret
lods
mov
dec
push
jecxz
stos
sub
jno
imul
cs
sbb
push
fldcw
mull
mov
mov
add
lret
sbb
xor
shll
jns
dec
xor
push
push
outsl
imul
ss
repnz
inc
test
add
out
hlt
and
fmul
inc
shrl
or
mov
push
mov
mov
pop
mull
sbb
or
sbbb
mov
cmpsb
xor
inc
pshufw
imul
loop
loopne
rcrl
push
push
lret
mov
out
mov
inc
scas
push
fiaddl
adc
jg
xchg
sub
pop
lods
cpuid
xchg
ja
lds
sahf
sbb
or
mov
dec
and
sub
movsl
or
mov
pop
pop
cmpsl
shl
dec
shl
mov
lods
cmp
pop
push
popa
ror
in
mov
dec
push
loope
setge
sub
call
inc
imul
mov
imul
mov
fsts
inc
ret
int3
jne
int
mov
and
sub
jne
pop
lcall
add
aaa
stos
pop
addl
fcmovnu
add
imul
in
mov
mov
das
inc
xchg
push
jge
jno
ficoml
nop
add
dec
and
add
mov
mov
mov
xor
mov
aad
in
pop
sbb
sbbb
xchg
pusha
mov
dec
jmp
movsl
int
pop
es
jbe
jle
or
movsb
out
into
mov
psubb
mov
add
stos
push
fisttps
test
shr
stos
ja
adc
addl
xchg
sarl
aad
jmp
cmc
frstor
push
jg
add
cmc
pop
pop
or
or
adc
dec
insl
xchg
push
dec
cmp
jp
add
inc
pop
inc
jg
dec
loop
adc
int
into
ja
sbb
jns
cs
mov
push
or
bound
loop
out
dec
sub
xchg
inc
jnp
in
xlat
inc
jo
add
cmp
testl
and
cmp
arpl
and
dec
or
xor
xchg
inc
pop
jge
add
mov
xor
xchg
jp
mov
lds
push
ja
pop
mov
xlat
dec
mov
cltd
out
xor
popa
popf
xor
mov
mulb
pushf
mov
jb
xchg
dec
clc
or
and
xchg
icebp
xchg
imul
arpl
add
jmp
fildll
imul
add
aas
gs
outsb
and
xchg
fildll
dec
dec
cwtl
dec
lods
xor
stos
subb
ss
insl
sub
scas
sub
in
and
popa
jno
jo
xchg
scas
xorb
mov
out
dec
dec
das
jo
pop
cmpsb
inc
xchg
cmp
inc
push
imul
daa
pushf
mov
dec
lret
adc
adc
bound
adc
cmp
shrb
and
aas
push
in
adc
popa
pop
jnp
popa
jg
arpl
xorb
test
jmp
jns
cmc
scas
daa
inc
test
lahf
jno
xchg
push
mov
out
and
cmp
lds
jb
add
out
pop
cwtl
filds
pop
mov
sub
push
std
in
xchg
dec
roll
push
shrl
push
sbb
dec
in
mov
xchg
lds
jmp
jecxz
aaa
loope
inc
push
loopne
inc
and
fistps
test
addb
push
ja
push
push
sub
fmuls
and
xchg
jo
out
jl
fisttpl
and
add
dec
lock
mov
insl
fdiv
rol
dec
mov
shlb
pop
or
adc
aas
jg
int
fisttpll
add
cmpl
inc
ss
aam
push
sarb
shrl
cmp
in
lods
iret
jecxz
cmp
popa
push
ja
mov
cmp
adc
xchg
push
into
inc
push
xchg
mov
sbb
lods
mov
jp
xchg
movd
mov
aas
scas
sbbb
lret
mov
inc
pushf
mov
add
xchg
xor
outsl
pop
insl
mov
ljmp
repz
add
mov
jl
in
sbb
push
inc
jp
lods
js,pn
and
ja
lds
or
sub
cmpsl
shrl
and
xchg
mov
aad
xchg
ja
fiadds
mov
mov
pushf
call
aas
mov
push
sub
fst
mov
cltd
incl
pusha
fs
pop
pop
pop
mov
pop
aas
mov
aas
in
mov
test
jmp
jo
hlt
sub
cld
enter
cltd
lahf
jno
xor
je
jmp
cmpsb
adc
push
dec
lods
or
lret
ljmp
jae
in
and
dec
mov
pop
inc
inc
xor
imul
add
sub
cmpsb
mov
or
das
addr16
lds
sub
cmp
in
leave
int
inc
add
test
test
mov
in
dec
adc
adc
mov
inc
out
test
es
imul
sub
mov
mov
adc
push
cld
cmp
push
mov
lods
into
adc
js
sbb
test
movsb
xchg
cmp
xchg
cmpsl
loop
psrlq
add
dec
test
out
cwtl
push
les
sbb
rclb
lds
adc
add
xchg
add
inc
pushf
mov
pusha
cmpsb
push
pop
add
inc
push
jle
js
rorl
fdivs
pop
cmpsl
int3
push
icebp
cmpsl
loop
aad
call
mov
mov
push
jne
test
out
notl
rolb
inc
xor
fidivrs
cld
lret
mov
imul
push
jbe,pn
lock
ds
push
lahf
cmp
and
pop
sbb
jbe
xchg
dec
or
sub
mov
pop
xchg
xor
cmp
adc
test
mov
cmp
pop
and
mov
jmp
fwait
in
cmp
mov
js
sub
in
xchg
or
lock
fmul
mov
es
sbb
in
cwtl
and
adc
rcll
je
roll
jge
jae
clc
test
ljmp
push
bound
lcall
cld
push
cmpsb
test
lds
pop
adc
call
stos
push
cmp
ss
pop
les
sbb
sbb
idiv
loopne
inc
iret
sub
js
ja
std
jae
out
les
mov
stos
mov
xor
mov
sub
subb
xchg
loopne
push
xor
inc
stc
fld
mov
mov
sbb
jecxz
fdivl
and
cmc
cmp
daa
adc
adc
notb
shlb
fmul
pop
jp
inc
cli
adc
test
and
fnsave
mov
pushf
addl
imul
fstpt
cmp
lahf
lods
jo
popf
bound
and
scas
movd
sbb
adcl
leave
xlat
or
push
outsl
outsb
aad
fisttpl
rol
lret
lcall
cwtl
pop
pop
mov
push
lret
sbb
test
outsl
pop
add
push
xorb
sar
sbb
push
fwait
inc
cld
add
push
sub
sub
out
push
test
fcmovnb
int
lcall
fldl
into
xchg
aad
and
pop
jmp
incl
notb
dec
repnz
jno
xor
mov
mov
lods
fnsave
and
stc
push
mov
cmpb
pop
ficompl
cs
out
xor
dec
imul
inc
cli
dec
je
or
stc
pop
cmp
xchg
push
mov
jecxz
and
call
mov
aas
mov
sbb
push
mov
mov
in
mov
int3
jle
rcl
xchg
sub
rep
push
cld
ljmp
fisttpl
clc
call
aam
test
or
push
imul
and
movsb
xlat
loop
mov
jae
imul
xor
inc
ds
inc
mov
mov
cwtl
mov
sbb
fldln2
xchg
repnz
imul
cmp
xchg
cmpsl
movsb
mov
rcrb
inc
cmp
xchg
lcall
rorl
aaa
xor
outsb
subl
scas
lea
sbb
mov
push
adc
fwait
icebp
adc
call
adc
stc
rclb
ds
loopne
in
sub
jecxz
mov
leave
rcll
jbe
shrb
loop
cmp
lods
add
fildl
imul
ret
fdivs
subl
push
inc
xchg
inc
push
and
call
in
adc
push
pop
xchg
and
fcompl
and
add
sub
adcl
dec
inc
inc
shlb
movsb
enter
mov
rclb
jns
pop
jns
nop
pop
icebp
ret
pop
mov
iret
das
leave
aam
mov
sbb
mov
xchg
lret
cmc
negb
mov
sbb
lock
repz
pop
or
dec
and
jne
xchg
cmp
test
push
jg
inc
mov
lock
rcr
add
push
and
in
das
gs
in
ror
bound
mov
outsl
adc
jno
out
xor
lods
inc
jg
mov
out
xor
aam
bound
int
or
jg
addr16
dec
out
in
sbb
push
adc
mov
inc
test
mov
xchg
in
push
xor
les
push
lret
xchg
xor
and
inc
cld
push
js
push
mov
int
adc
loop
sub
mov
insl
ds
push
push
insl
test
fldt
mov
outsl
ljmp
inc
sbb
push
or
das
mov
idivb
pop
push
cmp
call
jl
fdivr
xor
movsl
shl
jne
jge
es
pop
adc
sahf
push
jp
xor
inc
or
dec
ss
push
mov
jb
lea
sbb
call
cmp
icebp
and
test
mov
aad
mov
addl
popf
sbb
xchg
xchg
or
bound
les
mov
cmpsl
in
sub
je
adc
fisttpl
mov
sub
dec
pop
lret
cwtl
pushf
test
sub
es
int
sub
call
mov
mov
lret
cmc
sub
jo
jne
lcall
jl
scas
mov
push
cmp
xchg
dec
jo
nopl
jmp
stc
dec
push
bound
sahf
out
xchg
repz
inc
push
out
xor
cwtl
mov
ret
mov
jo
push
in
dec
je
faddl
nop
push
insb
xor
jl
test
daa
mov
and
xchg
jns
loope
pop
mov
or
mov
cld
out
lret
fcoms
pop
jge
sub
or
in
aad
pop
sub
mov
repz
dec
inc
dec
sub
sbb
xor
lret
cmpsb
sahf
cltd
movl
or
lret
jl
add
sub
mov
pop
push
lret
inc
ss
arpl
add
pop
cwtl
and
rcrb
xchg
cmc
mov
imul
movsl
sub
xchg
ret
inc
or
nop
and
fs
push
mov
jle
scas
cmp
nop
xor
or
jle
insb
push
cmpsl
dec
inc
mov
sbb
aas
pushf
cmpsl
cmpsl
and
dec
mov
or
cmovs
daa
ds
call
test
xchg
add
in
notb
repz
movd
inc
mov
popa
push
cs
xchg
mov
add
push
aaa
adc
lcall
rclb
cld
mov
setnp
test
aam
lea
movsl
in
fucomp
jl
jle
jge
mov
repz
in
mov
loope
pusha
add
add
out
xlat
cmpsb
mov
stos
dec
jnp
scas
stos
inc
mov
pop
jle
dec
imul
repnz
sbb
mov
arpl
jno
enter
jo
xor
jbe
out
inc
pushf
stc
xor
fcomip
imul
fldenv
fidivl
cmp
xchg
dec
xor
int3
ret
or
ret
pop
jb
mov
mov
call
aad
iret
xor
test
xchg
repnz
repnz
and
cmp
jmp
jmp
aaa
adc
mov
push
inc
sbb
lret
sbb
idiv
xor
jl
lds
test
inc
movsl
inc
mov
flds
pusha
xchg
xor
cmc
fwait
push
imul
in
fdivs
aam
fisttps
adc
or
fldt
cwtl
mov
movsb
fstps
jbe
inc
sub
adc
add
leave
test
jb
pop
pop
and
push
ds
pop
xor
dec
sub
movsb
sar
xlat
mov
cmp
outsl
mov
nop
xchg
mov
pop
mov
es
call
push
fwait
inc
test
in
and
daa
sbb
mov
pop
jl
ret
sarl
and
js
adc
out
mov
pop
shll
mov
loop
mov
adc
push
rorl
insb
out
insl
mov
repz
ss
dec
or
in
xor
or
sub
mov
outsb
sbb
dec
jbe
in
jb
aas
clc
jp
lcall
sub
sbb
push
arpl
mov
pop
adc
push
adcb
mov
mov
loope
add
mov
int3
stos
iret
iretw
adc
sbb
andb
loope
and
push
hlt
xchg
dec
add
sbb
stos
sahf
fidivrs
ret
fldcw
in
inc
sub
ret
push
popf
pusha
fwait
mov
sbbb
push
lahf
out
aam
fdivl
adc
mov
cli
ljmp
push
cli
sti
insb
insl
fisubs
mov
fbld
iret
xor
fcoms
cmp
inc
and
pop
jecxz
inc
cmp
dec
lds
outsb
outsb
push
call
fbstp
mov
mov
sub
mov
cltd
in
or
dec
mov
adc
cmc
pop
mov
and
lahf
addb
push
idivl
jmp
out
sub
cmpb
mov
je
push
cmp
mov
fisubl
mov
pop
ljmp
nop
jle
mov
iret
mov
js
or
out
iret
ja
pop
sub
jge
jl
and
lock
jp
push
adc
mov
mov
xor
mov
lret
mov
mov
es
js
sti
cmp
stc
rol
xchg
cmpsl
in
nop
sub
test
fdivr
sbb
popa
imul
mov
mov
movsb
mov
int3
inc
or
pop
or
imul
mov
cli
xor
rcrb
sub
scas
dec
add
mov
iret
hlt
test
jns
scas
or
pusha
inc
dec
sub
out
push
ficoms
sbb
and
push
add
test
fstpl
jg
and
popa
test
inc
imul
popl
pop
adc
iret
in
xchg
xor
roll
pop
js
xchg
add
ljmp
cwtl
xchg
dec
pxor
lods
hlt
in
ljmp
pushf
pop
shlb
in
cltd
scas
aam
mov
jp
pop
dec
pop
inc
add
imul
cmp
sub
cmpsb
aaa
shl
sbb
mov
mov
sub
ffreep
out
das
and
int3
push
xchg
cmp
test
cltd
lods
jge
std
dec
lcall
outsb
notl
in
push
ret
ds
iret
dec
jb
sub
outsl
add
gs
addr16
movsl
push
xor
push
lds
pop
mov
ds
gs
cmp
add
xor
xchg
mov
adc
ja
stc
pop
sbb
jmp
sbb
jg
lcall
imul
jecxz
loopne
jge
xchg
jmp
call
aas
das
enter
data16
lret
mov
mov
fwait
xchg
xlat
mov
dec
inc
jmp
or
cwtl
xchg
inc
and
add
push
sbb
xor
int
dec
and
jne
nop
sbb
or
and
shl
pop
add
pop
and
or
dec
cmp
pop
das
pop
das
pop
add
xchg
enter
adc
and
aad
outsl
lea
mov
pop
std
das
out
faddp
shrb
and
push
arpl
arpl
or
lods
ret
push
push
ret
lret
inc
jb
call
cs
sub
adc
mov
fadds
push
in
and
and
sahf
mov
mov
enter
inc
pusha
in
pop
sti
jge
mov
mov
inc
push
std
es
jo
jmp
jmp
sbb
fwait
popa
es
outsl
enter
add
std
rclb
mul
or
fdivl
movsb
in
fsubrl
add
movsb
cmpsb
jle
cs
fwait
pop
xchg
add
xor
xchg
insl
push
shrb
xchg
sub
lods
scas
fmuls
xchg
pop
push
cli
out
mov
adc
cmp
fs
sub
add
jle
jb
andl
dec
rcll
int3
adc
adc
lods
in
jnp
mov
out
test
mov
jle
fistl
jmp
inc
pop
inc
int3
and
stos
push
lret
xor
cmp
inc
dec
mov
cmp
fdivrl
aad
aam
repnz
jmp
clc
aaa
adc
dec
xchg
xor
xorl
lods
push
cltd
test
and
mov
pop
lret
mov
scas
inc
cmp
inc
pop
in
push
scas
enter
push
add
jle
cmp
aam
arpl
movsl
out
sti
in
movsl
popa
enter
cld
mov
mov
mov
jp
push
sbb
aam
push
pushf
jo
add
jecxz
test
sti
jbe
mov
nop
add
mov
icebp
pop
pop
out
lret
outsb
divb
and
jge
popa
dec
cs
and
outsl
cmp
mov
movsb
fiadds
push
mov
nop
push
sbb
pop
or
jl
dec
mov
in
in
mov
and
jb
mov
rorl
xchg
fdivrp
ja
mov
pop
or
jnp
jbe
pop
jns
repz
mov
xor
ja
add
xor
sub
stc
push
in
hlt
imul
insb
cmp
jmp
inc
pushf
xchg
mov
popf
lods
sbb
and
sub
inc
pop
or
fsubrs
insl
cmp
xchg
movb
in
mov
dec
out
cmp
ficoml
ret
or
test
imul
repnz
stc
adc
lret
xchg
call
adc
imul
push
sub
xchg
cmpsb
outsl
lahf
xchg
lret
push
fmull
pop
sahf
mov
repz
loope
cmpsl
ficompl
xchg
loope
pop
and
inc
ja
jno
lds
mov
push
cmpsb
out
sbb
inc
dec
sub
add
xchg
xchg
and
xchg
ss
aad
call
fnsave
jmp
inc
fcomi
hlt
sarb
sbb
stos
inc
sbb
mov
sub
xor
add
adc
inc
lret
mov
add
sbb
and
sub
push
mov
add
adc
xchg
les
xchg
cmp
lcall
into
or
aaa
stos
sbb
xchg
or
push
xor
xchg
je
stos
les
pop
pop
sub
mov
outsl
push
adc
xor
ja
inc
push
xor
test
xchg
stos
out
pop
dec
das
mov
repz
jl
fistl
nop
adc
adc
xchg
cwtl
push
aad
decl
sub
nop
outsb
daa
cli
mov
cwtl
fildll
mov
sub
movd
push
add
xor
test
outsw
leave
test
xor
push
loopne
push
lahf
mov
mov
stc
out
mov
sti
mov
aam
mov
gs
jl
inc
cmp
lock
test
and
and
lcallw
inc
inc
cld
or
nop
out
mov
mov
mov
dec
cmp
daa
jmp
mov
rorl
jle
std
jne
jb
inc
cmp
xchg
dec
out
fldt
cmp
mov
push
or
mov
dec
jne
iret
push
aam
add
aad
cmpsb
scas
fwait
inc
cli
jbe
cmpsb
lahf
fstpt
in
xlat
push
mov
and
leave
jbe
shrb
push
out
out
mov
mov
push
push
xor
pop
jae
jg
cltd
mov
or
lret
stos
pushf
push
push
in
and
dec
stos
lock
fs
in
les
jo
mov
push
shl
and
sbb
sbb
xchg
and
adc
mov
add
add
mov
sbb
push
mov
dec
out
insl
adc
or
daa
test
mov
test
inc
shlb
aaa
push
int
mov
push
addl
cmp
mov
rolb
mov
sub
jl
lods
int
sbb
pop
gs
inc
rclb
imul
pop
outsb
mov
mov
mov
mov
in
sti
cmp
aam
pop
cmpsl
lahf
push
dec
jne
cs
sub
push
ds
fsubrs
xor
sbb
jb
clc
push
sub
jle
fsubrs
cmp
ss
xor
push
xchg
lea
mov
inc
inc
pusha
sbb
fldcw
shll
xchg
cmp
lock
mov
and
inc
lods
xchg
mov
sub
lock
popf
aas
mov
or
clc
xor
adc
pop
sti
xchg
push
outsb
cmc
pop
out
push
cmp
sbb
popa
or
out
sti
rcrb
and
mov
gs
pushf
cmp
leave
cwtl
lahf
sub
jno
fwait
sar
xchg
xor
rcr
stos
arpl
pop
pop
jge
insb
dec
push
fs
dec
rcr
xchg
mov
and
or
xor
lods
push
push
mov
inc
pop
jns
cld
mov
or
cwtl
or
push
inc
fstpl
sbb
testb
adc
sub
enter
adc
popa
lea
push
jg
loop
add
dec
iret
imul
pop
pop
ja
adc
decb
je
lea
dec
mov
cmpsl
inc
adc
push
and
stc
sbb
sbb
lcall
mov
pusha
addl
int3
mov
bound
dec
pusha
cmc
out
xchg
mov
mov
iret
pop
mov
cmpsb
ds
rcrb
insl
outsl
xchg
in
notb
sti
iret
cmc
cmpsb
jle
addr16
fisubrs
cwtl
repz
icebp
ret
jle
pushf
sti
push
push
inc
pusha
fdivrl
mov
lahf
xchg
xor
mov
lcall
jl
movsl
add
push
lea
mov
xor
mov
popl
add
stos
fnstsw
pop
jp
shl
jge
and
push
push
pop
ljmp
fwait
jb
mov
jge
sub
and
xchg
and
mov
adc
js
cwtl
ss
pushf
mov
out
test
push
mov
jecxz
inc
int
sahf
dec
adc
xlat
push
and
jb
fisubl
adc
xor
cmc
adc
xchg
mov
loop
aad
or
inc
jno
iret
push
adc
adc
incl
lods
arpl
pop
aaa
inc
xor
pop
push
push
and
mov
mov
adc
adc
add
scas
push
jg
and
pushf
in
out
jecxz
mov
nop
insl
jle
insl
xor
jecxz
mov
adc
push
lret
push
imul
mov
sub
icebp
mov
inc
sub
imul
fisubl
push
jo
ret
jnp
cmp
test
pop
and
in
ret
sbb
mov
or
arpl
lret
test
add
cmp
xlat
jne
mov
cmpsl
push
and
add
push
sub
cmp
inc
jo
arpl
aam
sbb
sub
test
pop
sahf
mov
adc
shlb
addr16
sub
push
lock
inc
in
xchg
mov
stos
jmp
xchg
popl
mov
mov
push
pop
mov
xchg
push
pop
out
mov
jae
jp
mov
push
in
xchg
jns
scas
pop
inc
xor
movsl
insb
loopne
or
sarb
adc
pushf
sti
inc
mov
push
add
cmp
mov
mov
fsubs
inc
cli
mov
mov
sbb
stos
pushf
les
arpl
pop
clc
loope
bound
add
dec
out
loop
mov
sbb
cs
imul
mov
and
mov
fadd
sarl
test
in
add
adc
sub
gs
repz
cltd
mov
insb
shlb
push
imul
sbb
outsb
arpl
adc
mov
inc
push
mov
cmp
sbb
lods
inc
xchg
add
or
cltd
cld
movsb
dec
orb
xchg
imul
xchg
outsl
push
mov
jmp
cmp
arpl
das
stos
lock
sub
push
lock
push
shrl
popa
cmc
sti
decl
leave
test
ret
daa
jp
inc
and
cmpsl
and
sub
inc
fadds
lahf
sub
jne
addr16
dec
mov
call
mov
cltd
scas
stc
shr
mov
xchg
and
and
xor
mov
lret
cmp
pop
fdivl
lahf
jge
shl
jp
sub
repz
pop
mov
mov
fildll
inc
mov
adc
xlat
mov
add
xorb
fnstcw
mov
andb
test
loope
lea
hlt
push
pop
xchg
mov
jge
jge
push
flds
test
mov
leave
rorb
sub
lods
leave
lods
jb
mov
out
loope
add
orl
dec
mov
jg
imul
mov
jo
dec
mov
popa
scas
movsb
out
cmpsb
jg
pop
mov
mov
out
mov
mov
push
xorl
mov
aaa
aaa
push
add
xchg
dec
or
mov
jge
imul
sbbl
test
push
fnsave
sbb
jle
jns
jecxz
or
xchg
sub
std
in
jg
cs
xchg
test
xchg
pop
outsb
push
cmp
mov
push
ret
jo
test
adc
mov
into
cs
or
push
clc
and
sbb
in
sub
outsl
push
lds
fnsave
jns
ds
add
adcl
xor
cmp
sarl
ss
xchg
xchg
mov
aaa
stos
sub
xchg
sub
adc
push
cmp
mov
and
ret
fisubrs
xorb
and
mov
test
shrl
or
or
mov
mov
push
sub
std
cmc
in
cwtl
mov
adc
push
cmp
xor
scas
mov
rcrb
mov
into
push
pop
xor
int3
push
addl
les
outsl
sub
mov
and
cmp
mov
jp
movsl
lods
imul
push
imul
dec
cmp
ret
dec
cmp
pop
xor
test
aas
push
subl
push
mov
sub
lods
lcall
bound
lods
adc
popa
ds
std
xor
xchg
lret
fwait
dec
pop
mov
dec
inc
pop
or
test
psubsb
push
hlt
aaa
sbb
lahf
xchg
sbb
pop
xchg
movsb
cmp
push
push
xchg
mov
jb
pop
sbb
movsl
fsubr
xchg
je
mov
fidivrs
mov
inc
and
in
dec
dec
jnp
insb
mov
nop
lds
jl
mov
ret
xor
mov
xor
sub
pop
mov
sbb
js
ds
pop
test
pop
mov
daa
ljmp
fcoms
das
xor
push
lret
loopne
aam
in
sbb
mov
and
xchg
dec
lds
insl
shlb
and
dec
sbb
pcmpgtd
out
stos
mov
lods
sub
scas
push
out
test
jl
iret
outsl
pop
jae
lock
pop
test
lret
ss
shll
pushf
push
pop
and
cmp
xor
xor
pop
lock
dec
mov
into
inc
xor
rclb
jmp
cmp
call
pop
mov
jl
add
cltd
xor
pop
leave
ljmp
scas
ja
les
mov
cmp
fidivs
iret
movsl
pop
inc
mov
mov
push
jb
jmp
xchg
pusha
nop
test
add
push
and
xchg
and
fs
dec
daa
out
insb
mov
push
push
xchg
jno
push
adc
xor
faddl
jl
stos
mov
sub
aas
add
mov
cwtl
fwait
cmp
arpl
lret
xorl
mov
fsubs
outsb
mov
mov
sahf
in
sbb
outsb
jge
xor
sbb
push
xchg
inc
fwait
aaa
xchg
add
sub
push
or
pop
xchg
popf
jp
sti
cli
addl
add
sbb
add
sbb
inc
mov
push
adc
jo
dec
jecxz
or
xor
mov
mov
push
push
dec
xchg
xor
scas
rclb
pop
pushf
shrl
inc
adc
mov
jp
add
push
and
rorb
add
popa
icebp
js
pop
ja
sbb
sub
imul
enter
mov
fwait
clc
shrl
repz
imul
mov
dec
inc
add
out
mov
cltd
mov
adc
fdivs
push
inc
mov
movl
sub
popa
call
sbbb
fsubrl
ds
mov
pop
xor
and
repz
pop
loop
scas
fs
xor
inc
add
bswap
add
pop
insl
dec
jb
cmp
loop
jae
sbb
xlat
push
xlat
jno
mov
adc
sub
mov
stos
into
lret
into
rcr
loopne
cmc
jns
outsl
cmp
repz
out
fimuls
add
lahf
pop
cmpsl
jl
stos
into
hlt
adcl
sahf
ljmp
pop
push
mov
sbb
jns
fdivr
cli
int3
xor
jp
sub
sbb
and
in
push
mov
ja
dec
js
pop
stos
js
jge
xor
sub
mov
dec
outsb
lret
inc
lret
jo
pop
and
sbb
ds
sbb
into
add
or
imul
inc
repz
add
stc
hlt
insb
inc
pop
sbb
mov
lock
cmp
sarl
fdivl
jge
stc
roll
arpl
iret
sbb
sbb
arpl
inc
repnz
shrb
push
repnz
in
sarl
or
sbb
sub
cwtl
lret
and
ja
aad
or
xor
jbe
js
cld
hlt
test
fsubr
pop
incl
push
add
popl
icebp
int3
xor
add
rdmsr
cwtl
mov
xchg
imul
imul
inc
and
rcll
movsb
and
and
fwait
adc
pop
inc
ljmp
inc
dec
jle
mov
xchg
jle
clc
push
mov
mov
insl
lods
imul
push
lret
hlt
sarl
cmp
and
sub
fs
mov
cmpsb
lds
iret
call
jae
cmp
test
in
hlt
stc
imul
test
push
inc
xchg
push
inc
shrb
lea
int3
xor
in
jb
pusha
and
jbe
ljmp
aad
mov
notb
inc
push
ljmp
jecxz
mov
ret
shl
ljmp
sbb
jle
mov
rcrb
push
pop
cmp
lret
pushf
loop
cmp
dec
rclb
notl
cmpsb
or
pop
cmp
mov
jmp
addr16
cmpsb
aam
fnstcw
setbe
adc
mov
lods
outsl
add
mov
mov
inc
cmp
rcrl
cmp
jmp
xchg
xor
test
adc
rcll
push
push
xor
int3
dec
add
push
leave
fnsave
push
rorl
cwtl
pop
xor
mov
fs
popa
in
mov
push
sbb
addr16
cmp
lahf
adc
ror
mov
sub
js
xchg
fbstp
mov
mov
outsl
pop
out
icebp
ror
mul
imul
xchg
movsl
movsb
fwait
cmpb
addl
les
ja
pop
dec
sahf
cwtl
sub
xchg
lret
pop
loopne
sub
stos
mov
fsubrs
dec
loop
les
adc
ds
sbb
in
add
repz
insl
je
fldenv
out
sbb
int3
and
xor
test
pop
fucomp
mov
orl
aad
xchg
test
jmp
cmp
mov
push
adc
lret
push
lds
mov
push
les
adc
mov
in
and
lods
stc
in
cmc
out
xchg
push
inc
and
dec
ret
ja
xchg
mov
nop
sbbl
adc
add
dec
in
int
outsb
rcrl
fiaddl
or
push
dec
rorl
dec
popf
daa
inc
and
std
cs
xor
inc
pop
xor
sbb
push
ds
cltd
les
test
fwait
or
mov
ss
xor
sub
mov
in
xor
cld
jge
aam
xor
fdivl
dec
loopne
hlt
push
enter
mov
and
hlt
inc
into
mov
push
aam
jg
fists
aam
leave
outsl
pop
in
in
lds
pminub
push
pop
dec
aam
stc
jns
add
add
shlb
jns
mov
pusha
inc
mov
xchg
dec
and
add
fstl
push
rcrl
in
jno
lods
popf
out
adc
test
mov
popl
pop
lods
push
push
std
rolb
and
js
outsl
pop
lret
dec
mov
push
outsb
out
lds
jge
mov
xchg
sbb
int
aad
add
pop
mov
dec
stc
in
icebp
mov
les
sti
and
les
inc
fidivl
cld
xchg
ljmp
adc
jb
rcr
pushf
loop
jge
jmp
mov
sar
ds
add
xchg
pusha
push
insb
cmp
cmpsb
in
loopne
pop
shr
or
push
push
mov
adc
cmp
push
dec
je
lret
jb
inc
push
imul
addr16
test
aaa
push
js
ss
test
jle
inc
int
add
pop
jp
icebp
lret
insl
mov
inc
shll
bound
scas
pop
add
xor
and
cmpb
fildl
jle
les
xor
pop
test
adc
cmp
fs
pop
sti
xchg
ljmp
mov
xor
mov
mov
inc
lea
mov
iret
xor
jg
into
in
mov
loope
pop
xchg
xchg
call
fidivrl
int
dec
call
push
js
rcll
mov
clc
addb
sbb
jg
inc
mov
dec
push
xchg
sahf
pop
sbbl
scas
jle
push
cmpsb
jmp
jecxz
fs
dec
daa
cmp
push
test
mov
out
push
dec
pop
inc
imul
mov
add
jg
mov
adc
add
jns
add
dec
rcl
scas
aad
jbe
and
inc
dec
stos
push
jg
hlt
push
outsb
pusha
push
cmpl
movsb
push
mov
mov
dec
dec
cmc
dec
scas
aam
ss
jno
test
dec
mov
in
or
lods
mov
pop
enter
sub
sarl
frstor
icebp
loope
push
scas
inc
icebp
popf
fs
sbb
fsubl
add
rcrl
pop
addr16
sbb
push
mov
icebp
mov
sbb
popf
shrb
sbb
sti
ret
mov
sub
roll
push
aaa
fidivs
outsl
xchg
hlt
addb
ds
inc
and
rcl
push
and
push
pop
leave
ficomps
cmp
cltd
dec
mov
mov
or
int3
int
dec
sti
into
pop
adc
imul
rorb
paddusw
mov
add
rolb
jb
mov
sbb
inc
lret
ret
stc
mov
dec
push
sahf
ja
cmpsl
frstor
mov
iret
fidivrs
popf
sub
cmp
in
jno
dec
inc
popf
inc
xor
mov
iret
repz
fstp
push
stos
xchg
fwait
mov
cmp
stc
mov
jae
sti
xchg
shll
sub
push
das
or
lret
mov
repnz
add
fmul
iret
pusha
push
mov
fidivs
test
fsubs
roll
popa
mov
sarb
int3
mov
outsb
dec
out
mov
aaa
jge
fisubrs
push
cmpsl
sub
insl
fisttps
iret
cmp
mov
arpl
pop
nop
pop
insb
movsb
jae
fildll
pop
fs
mov
push
cmp
inc
loop
out
xchg
cmp
mov
fisubrl
mov
lret
xchg
sahf
movsl
pop
repz
jle
call
std
rcll
aad
or
push
push
xchg
ljmp
stc
out
je
mov
sbb
das
lds
push
sarb
xchg
retw
cmp
jnp
cmp
push
shll
jp
or
inc
stos
mov
into
jbe
xchg
mov
cmc
loopne
in
mov
mov
pusha
aad
out
push
rclb
rolb
dec
xchg
rorl
xchg
sub
mov
push
into
aam
jae
mov
jbe
mov
and
pop
inc
sete
adc
xorl
ja
inc
mov
test
ss
int3
add
sub
nop
pop
ret
adc
outsb
xor
bound
mov
push
inc
dec
mov
mov
mov
aad
loopne
xor
and
mov
and
sub
iret
xchg
xor
push
cmp
xchg
in
mov
mov
mov
mov
scas
sbb
test
pop
loope
inc
add
test
aaa
imul
push
hlt
jl
arpl
jp
sub
and
cld
push
pop
movsl
xchg
cli
fcos
aaa
xchg
cwtl
adc
push
push
mov
xorl
loope
icebp
mov
xlat
mov
rolb
mov
lret
cltd
jns
ja
xchg
mov
xchg
mov
inc
mov
pop
movsl
call
and
push
jmp
add
sub
or
lret
jl
mov
out
rolb
aaa
fisubl
fisttpll
pop
pop
pushf
test
negb
pushf
fstpt
into
pop
cld
or
xor
cmpl
data16
dec
iret
movsb
adcb
push
orl
je
xor
pop
adcl
dec
test
shll
cmp
mov
outsb
pop
adc
dec
rcr
or
addb
int3
and
mov
pop
jnp
and
jecxz
and
enter
scas
mov
mov
jo
push
xchg
adcl
mov
mov
mov
sbb
mov
or
inc
imul
xor
mov
or
push
sbb
lods
jle
into
popf
loopne
dec
cmc
hlt
xchg
adc
sub
mov
mov
or
mov
je
push
addr16
insl
orps
js
int3
pop
or
popf
lret
cmp
or
mov
jge
pusha
insb
fwait
mov
imull
sbbb
sbb
scas
fistl
cmp
mov
fldcw
repnz
jbe
mov
jne
dec
sbbb
mov
mov
shrl
mov
outsb
cmp
mov
and
mov
cwtl
mov
rcll
sbb
mov
mov
pop
and
sarl
nop
push
scas
test
iret
sub
push
inc
sahf
cltd
jb
mov
xor
pop
or
std
lock
aad
imul
lds
mov
dec
das
push
jg
ret
sbb
mov
in
xchg
sub
and
dec
cmc
mov
mov
mov
or
jbe
mov
push
cltd
movl
xchg
mov
mov
jmp
lea
mov
aam
mov
in
push
add
mov
adc
dec
mov
int
mov
push
inc
adc
push
pop
xor
call
leave
arpl
rolb
dec
jecxz
int
sbb
xchg
cmp
xchg
outsb
push
ja
sub
jnp
leave
or
aas
jnp
ja
popf
fnstcw
mov
sub
or
rorb
sbb
add
jo
pop
xchg
xchg
xor
loop
cltd
mov
or
loopne
pop
stc
int
jmp
minps
and
xchg
mov
xor
mov
stc
adc
cld
scas
shlb
xchg
call
pop
dec
mov
mov
mov
and
ss
test
stos
xchg
insl
mov
cmp
je
or
daa
cmpsl
cmp
imul
addr16
pop
xor
or
gs
in
inc
cwtl
push
ljmp
dec
cmpsl
pop
mov
pop
cli
xlat
inc
xor
cltd
icebp
ds
rorl
clc
int3
clc
popa
mov
jo
pop
lcall
adc
adc
shll
imul
adc
leave
je
stc
outsl
add
adc
shrl
jmp
inc
and
cmp
cli
pusha
gs
mov
test
adc
dec
mov
dec
clc
scas
loope
mov
add
mov
adc
add
adc
fidivs
popf
sub
enter
loope
mov
push
mov
aas
xor
ljmp
imul
dec
lret
mov
adc
std
icebp
mov
inc
aam
add
push
jne
sbb
pop
sub
in
and
repz
mov
sbb
sub
push
dec
int3
mov
cmp
in
xchg
adc
loope
mov
add
pop
sub
add
stos
xchg
into
rcll
mov
test
lea
xchg
and
in
mov
imul
jbe
jae
pop
out
lret
addr16
loope
add
cmp
jno
aas
icebp
push
xorl
test
inc
push
pop
mov
in
pop
sbb
lcall
sub
aam
or
mov
xchg
out
cwtl
sbb
xchg
fidivrl
jno
push
aam
or
test
loope
inc
mov
ficoml
pushf
aaa
out
push
je
lret
mov
jp
inc
push
out
mov
cli
push
ss
pop
xchg
and
mov
xlat
and
sbb
outsb
pop
cmp
scas
jle
addl
loopne
mov
lock
stc
xor
xchg
sbb
push
push
std
jnp
lret
rorb
fs
push
mov
imul
popa
xor
fiadds
lcall
jmp
pop
xchg
xchg
imul
cwtl
adc
xchg
jo
pop
iret
or
pop
rorl
lea
fbstp
push
cmpsl
arpl
test
gs
mov
frstor
add
xor
and
lret
push
cmp
scas
or
xchg
or
repz
adc
push
cmc
push
jge
add
jl
xchg
aaa
into
scas
lds
jb
pop
jae
das
push
xchg
sbb
and
inc
loop
inc
imul
fadd
xor
xor
rorb
data16
push
sub
lret
adc
fldenv
jae
les
rcrl
cmp
out
push
data16
test
push
push
stos
and
and
xchg
jno
mov
subb
and
aam
out
mov
lcall
fsubrl
pop
fs
xor
push
jae
or
je
push
dec
sbb
js
and
inc
dec
mov
fstps
xchg
imul
out
mov
push
repz
outsl
lds
inc
jne
mov
xor
clc
add
push
jae
sbb
jb
sub
adc
iret
hlt
movsb
aaa
dec
in
out
mov
mov
jno,pt
xor
or
cmp
mov
push
lods
das
and
or
lods
mov
mov
fldcw
adc
enter
lods
cli
incb
mov
and
cmpsl
push
push
sti
dec
fildl
popa
je
dec
out
shll
sbb
sbb
hlt
notl
cmpsb
mov
addr16
xchg
mov
lcall
add
mov
push
test
add
out
sub
xlat
arpl
sub
fwait
arpl
adc
stos
icebp
jbe
jnp
mov
mov
jp
divb
or
xor
sbb
sub
xor
inc
cld
dec
enter
push
push
and
cltd
mov
mov
scas
cld
out
pop
sbb
and
mov
outsl
scas
pop
xchg
and
pop
cli
and
add
and
jg
les
jle
les
movsl
cmp
das
adc
addl
out
dec
aaa
or
jl
enter
adc
jne
cmc
icebp
push
sbb
out
sub
cmpsb
mov
and
test
mov
pop
push
mov
or
cld
stc
lods
xchg
xor
mov
and
pop
xchg
and
lods
jg
mov
imul
mov
stos
cmpsb
rorl
aaa
mov
inc
sar
lcall
xlat
jo
sbbl
and
pop
fadd
icebp
mov
mov
mov
adc
pop
sub
out
push
mov
call
or
outsl
adc
scas
dec
inc
nop
test
lret
icebp
push
daa
lret
shr
and
add
outsb
test
call
fs
mov
insl
pop
cmp
iret
xchg
xor
xor
xor
dec
add
lahf
fmull
mov
mov
xlat
cmp
test
ret
outsb
jecxz
popa
dec
stc
int3
jo
std
jo
push
jnp
xor
push
inc
pop
fdivl
mov
push
fsubl
ds
cltd
jnp,pt
adc
add
pop
iret
popf
push
jno
out
dec
xchg
test
repnz
jecxz
pop
sti
je
pushf
xor
push
pop
lea
inc
pop
jbe
bound
int3
push
jo
cmpsb
mull
sbb
sbb
xor
mov
test
js
jecxz
pop
movsl
ret
jmp
out
lcall
dec
mov
mov
lahf
sub
cld
xorl
dec
or
sub
jae
push
push
push
jl
aaa
sub
inc
inc
clc
jns
sbb
adc
push
sub
out
leave
or
fwait
clc
pop
mov
sbb
outsb
jo
xchg
mov
mov
outsl
stos
or
flds
mov
aam
pop
loopne
jecxz
icebp
mov
int3
and
inc
in
dec
icebp
arpl
pop
cs
repnz
addb
xor
testl
fdivrl
outsl
shl
mov
xor
int3
or
add
mov
mov
call
fs
daa
iret
loop
mov
ljmp
fs
cmp
xchg
jp
xor
and
ja
lock
xchg
or
mov
out
adc
push
mov
cmp
sbb
sub
and
sbb
call
push
insl
push
add
mov
insb
aas
ds
ret
inc
lcall
mov
je
fisttpll
cmp
or
scas
dec
mov
xchg
dec
cld
imul
call
addr16
xchg
inc
xor
cwtl
sub
test
jmp
mov
push
lock
je
cltd
xchg
enter
cmpsl
inc
or
fists
or
push
mov
mov
jle
mov
lret
test
mov
sub
movsl
hlt
and
jle
jl
cli
test
and
cmp
mov
icebp
mov
mov
ja
push
pop
cmp
inc
or
cmp
jne
bound
or
andl
or
xlat
jae
pop
ret
popf
dec
stc
loop
jecxz
popl
es
arpl
in
rolb
jg
sub
add
or
push
imul
dec
jnp
add
mov
daa
in
pop
sar
xor
xor
mov
pop
lret
or
dec
and
pavgw
sub
fiaddl
or
stc
int
stos
cmp
mov
dec
dec
and
xor
andb
sub
mov
js
cmc
pop
loop
or
inc
xor
push
out
jbe
jbe
push
mov
je
out
mov
dec
xchg
dec
and
stos
inc
sbb
loop
cltd
jecxz
mov
fldenv
lock
dec
ja
int
xchg
cs
sahf
mov
sbb
cmc
mov
daa
sub
jae
mov
pop
add
sbb
cmp
ficompl
andl
adc
inc
ja
inc
mov
xor
lds
arpl
ss
inc
in
jle
pop
jmp
cli
popf
adc
and
pushf
outsl
or
and
push
icebp
mov
mov
xchg
pop
test
inc
push
inc
mov
dec
and
sub
sbb
adc
cmc
jge
repnz
and
into
mov
cs
jg
push
xchg
sbb
inc
adc
or
lret
jp
mov
jp
jle
aam
jae
jmp
popf
xor
fsubs
test
outsl
in
xor
push
ljmp
adc
jbe
adc
jle
cmp
adc
inc
inc
jle
out
aas
pop
aam
mul
sub
mov
leave
xchg
jne
repnz
jbe
je
movsl
pop
mov
insb
lcall
out
stos
add
nop
add
sbb
mov
mov
jmp
add
imul
pop
addr16
ds
push
push
test
outsb
js
rcrl
add
add
adc
ror
inc
fnstcw
push
add
xchg
loopne
mov
mov
inc
xchg
mov
popa
push
push
cmp
inc
or
insb
mov
enter
dec
xchg
cmp
sbb
pop
mov
subb
outsl
sar
out
sahf
or
lcall
or
pop
sbb
add
mov
add
or
test
lcall
inc
pop
push
dec
loopne
repz
insl
out
adc
movl
ror
push
push
xchg
jbe
cld
jp
dec
xor
sub
lret
ljmp
cli
lcall
addl
or
jl
mov
hlt
push
les
pop
sbb
incb
and
popa
adc
lods
adc
mov
dec
addb
popa
aas
mov
xchg
into
out
mov
std
mov
mov
in
movsl
and
mov
inc
jb
push
outsb
mov
adc
mul
stos
call
add
stos
repz
lret
lds
pop
add
inc
jle
int
rolb
xchg
cmpsb
dec
cmp
pop
fsubrl
pop
ja
cmp
sub
or
push
cltd
mov
jae
mov
es
mov
orb
mov
inc
sbb
mov
stc
movsb
fdivrs
mov
jg
movsb
dec
and
jnp
adc
daa
cwtl
jne
notl
stos
xor
out
loop
sbb
in
lods
add
aam
mov
ret
mov
test
fisubs
push
add
cmp
cmp
je
rcrb
inc
lret
sbb
aas
or
sbb
nop
add
dec
jecxz
mov
cwtl
xorb
pop
shlb
or
push
push
push
and
push
or
jbe
mov
sbb
fldt
jbe
ret
daa
loop
sbb
jmp
xchg
js
in
imul
pushf
aaa
out
and
mov
popf
fldcw
sbb
cld
sub
sbb
je
push
lods
iret
ss
push
xchg
loope
mov
cmp
add
es
enter
fcmovbe
push
iret
negl
mov
rorl
jno
cmp
fisubrl
sub
js
dec
outsb
das
lahf
adc
mov
aam
fdivl
insl
sub
fwait
jo
push
jbe
xchg
xchg
adc
pushf
movsl
jmp
enter
jae
iret
pop
out
jmp
out
mov
sbb
jbe
mov
imul
fbstp
dec
out
rep
insl
idiv
lock
das
cmp
xchg
mov
notb
pop
sbb
jmp
xchg
pop
inc
fisubrl
xor
fists
mov
pop
mov
outsb
or
sbb
push
mov
imul
xor
rcll
push
das
pop
ljmp
ljmp
insb
jmp
ret
mul
movsb
mov
jns
cld
cmc
adc
imul
sub
jg
mov
xchg
sbb
jnp
pop
push
outsb
dec
mov
sti
div
dec
test
jecxz
repz
add
lret
test
test
mov
adc
pop
inc
into
mov
mov
mov
jp
inc
xchg
fstpl
pop
movsl
push
pop
loopne
stos
loopne
xor
pop
scas
outsb
xor
in
stc
fisubrs
jo
inc
rolb
or
movsl
nop
jb
push
mov
loop
mov
fdivr
mov
mov
popf
push
sub
cmp
stc
addr16
lcall
adc
movsb
sbb
mov
imul
pop
or
pop
sub
mov
dec
mov
in
mov
pop
xchg
dec
push
outsl
adc
add
js
jmp
xchg
add
mov
repnz
pop
sub
jle
iret
enter
add
sub
jmp
cmpsb
xchg
sti
repz
shll
cmc
cwtl
jge
add
in
pop
js
mov
jnp
fs
and
mov
out
cmp
mov
xor
xchg
es
scas
subl
or
xchg
int
repnz
or
push
loope
clc
cli
sbb
inc
mov
pop
xchg
bound
add
sbbb
xchg
repnz
sti
mov
sti
jge
test
dec
rorb
shll
pop
daa
push
fadd
dec
inc
adc
mov
mov
pusha
pop
scas
mov
cs
adc
jne
jge
or
pop
sbb
sub
push
and
sbb
sahf
jo
xchg
jle
dec
add
sarb
fldcw
cltd
dec
repnz
in
mov
repz
xchg
roll
notl
xchg
sti
scas
adc
mov
push
lahf
sarl
aam
dec
test
mov
mov
push
mov
mov
mov
shll
scas
arpl
sub
cs
aas
dec
roll
scas
inc
adc
push
fldenv
xchg
push
loope
rsm
xchg
mov
out
sbb
mov
mov
jno
popa
call
mov
mov
jl
ret
loop
out
or
popf
out
inc
dec
test
jb
xor
rcll
sbb
iret
mov
add
inc
inc
mov
add
fistpll
cmp
and
pushf
ret
inc
mov
dec
push
test
xchg
das
mov
fisttpll
fnstsw
sub
adc
xchg
into
fs
fsubs
arpl
test
mov
mov
addr16
mov
fistpll
lahf
mov
pop
sub
imul
jnp
sbb
jnp
jmp
dec
mov
push
mov
sar
ror
mov
fildl
jmp
and
sbb
add
faddl
mov
pop
sbb
pusha
insl
ret
out
cltd
push
out
mov
sbb
and
gs
jno
fldcw
shll
filds
dec
or
in
rcrl
daa
or
in
fadd
in
sbbb
jge
cmp
xor
mov
xchg
lds
outsl
mov
xchg
cmp
push
nop
leave
fstpt
stc
aas
dec
arpl
mov
flds
xchg
push
mov
xor
iret
pop
jne
mov
xor
xchg
fistpl
test
gs
arpl
rcrl
mov
lahf
inc
xor
movsl
mov
sarb
mov
test
sbb
inc
fidivl
aas
pop
xchg
test
mov
cmp
addr16
mov
mov
xchg
sbb
jle
push
mov
xchg
shrd
pop
popa
and
out
dec
andb
push
mov
shr
or
mov
mov
or
mov
mov
cld
jbe
jmp
fucomip
push
push
mul
lods
popa
stos
icebp
xchg
movsl
inc
push
pop
aam
jecxz
add
cmpsl
pop
jmp
cltd
pop
push
ret
stos
in
pop
and
add
sbb
xor
inc
repnz
cwtl
testb
adc
fmull
daa
jns
mov
pop
rorl
add
test
sub
les
scas
dec
jne
adc
in
mov
test
pop
ficompl
mov
popa
mov
and
call
arpl
pop
push
jbe
lahf
test
addl
in
jne
stos
pop
adc
inc
cld
out
stos
push
movsb
mov
out
test
mov
sub
lret
fnstsw
mov
pop
rcl
push
mov
repz
dec
inc
and
outsl
cmp
imul
idivb
aas
call
pop
pop
imull
nop
nop
lods
in
jne
and
pop
mov
popa
repnz
aam
inc
mov
lcall
mov
push
mov
cld
neg
jbe
or
add
sub
sbb
mov
mov
push
fstl
repz
mov
pop
fwait
lods
stc
adc
ja
out
and
push
push
ds
mov
out
jge,pt
sub
jns
dec
xchg
jg
pop
sub
fldcw
scas
loope
test
mov
gs
xchg
insb
mov
push
inc
pop
repnz
outsl
mov
daa
clc
cmpsb
mov
cmp
in
mov
in
mov
scas
pop
and
xchg
jno
sub
flds
rol
std
pop
out
adc
enter
popa
pushf
stc
or
aad
push
dec
pusha
sub
fcomps
cwtl
jecxz
out
mov
sbb
loopne
sbbb
loope
test
adc
adc
and
and
leave
mov
and
add
cmc
add
mov
iret
inc
in
out
repz
mov
mov
cmp
fldl
jmp
lods
inc
loope
mov
fildll
mov
daa
mov
repz
es
xor
add
pushf
dec
cmp
fwait
jno
repnz
aad
mov
sbb
or
data16
das
hlt
mov
jno
mov
jmp
movsl
adc
insl
pusha
dec
clc
inc
imul
sbb
lods
pop
dec
iret
test
pop
sbb
int3
pop
inc
mov
in
out
imul
loopne
aam
push
inc
cmpl
int3
xor
inc
mov
sub
sbb
dec
or
mov
ficoml
jg
lds
dec
fldl
scas
dec
cltd
push
sbb
sub
imul
and
inc
mov
sub
jmp
mov
sbb
xchg
inc
out
jnp
mov
fldenv
or
hlt
xchg
fcomp
ja
loop
inc
popa
cmp
jb
push
push
ret
inc
dec
cltd
push
sbb
shll
rcll
dec
in
loop
out
js
pop
jb
xchg
push
and
xor
or
sbb
xchg
mov
mov
ret
testl
mov
fwait
out
testl
scas
mov
sbb
pusha
xchg
sub
sarb
scas
inc
dec
or
mov
insl
push
inc
mov
jno
pop
xchg
lods
cmpsb
js
mov
or
fstl
sbb
mov
mov
rcr
inc
stc
or
xchg
adc
pusha
pop
mov
xchg
jmp
jmp
ds
pop
sbb
js
xchg
fisttpl
clc
mov
dec
aas
xchg
or
inc
sbb
inc
pop
jns
mov
jae
shr
jmp
popa
dec
mov
push
xlat
lahf
mov
mov
xor
data16
push
xchg
arpl
mov
and
into
test
push
out
fdivl
fistpll
mov
out
jns
rorl
fstl
idiv
movsl
dec
mov
shrb
xlat
cmp
aaa
ljmp
repz
pusha
into
lock
xor
push
iret
incl
pushf
stc
stos
pop
sub
inc
sarl
add
popl
mov
in
pop
int
fwait
inc
xchg
push
mov
nop
adc
mov
and
xor
add
mov
sarl
mov
mov
test
pusha
cmp
lret
daa
fcoml
imul
ja
and
lahf
cmpsb
int3
jle
mov
test
jo
fmul
add
out
cmp
push
aas
pop
pop
adc
sub
sub
add
mov
cmp
push
ror
push
jne
repz
jecxz
gs
cltd
xor
or
pop
iret
into
pop
imul
add
jmp
mov
stos
add
popf
sbb
ja
sbb
xchg
cmp
divb
push
cmp
mov
xchg
rcrb
xorb
cmp
shrb
mov
push
repz
pop
insb
jmp
dec
scas
flds
test
data16
mov
xchg
mov
aad
pop
test
dec
mov
sub
xchg
sbb
add
add
inc
jo
adc
stc
daa
jno
imul
in
pop
nop
gs
add
aad
adcl
xchg
movsb
imul
cli
test
jbe
test
in
dec
mov
dec
or
jge
mov
inc
out
mov
adc
push
lds
out
add
icebp
std
call
sahf
adc
in
pop
stos
scas
addl
cmc
sbb
jne
jl
mov
sub
gs
push
fidivl
popa
cltd
sbb
xchg
push
xchg
dec
lahf
jno
jae
in
mov
push
and
push
stc
sbb
inc
xor
add
xor
es
cmp
push
es
inc
mov
mov
aas
mov
jb
mov
sub
sub
xchg
adc
ljmp
hlt
push
mov
test
pusha
rcl
xchg
push
movsb
fsubs
andl
mov
int
addl
gs
xlat
mov
mov
sbb
push
lahf
sub
pushf
call
aad
lods
and
mov
dec
pusha
repnz
out
xchg
insl
idivl
pushw
jmp
gs
and
fadds
pusha
les
dec
cmp
dec
movsb
xlat
and
push
loop
lods
pop
in
cmp
fwait
xchg
and
sbbl
repnz
inc
dec
cmc
mov
mov
pop
std
inc
and
push
movsl
das
dec
inc
xlat
lds
inc
mov
fwait
les
ss
mov
jo
push
rolb
daa
fimuls
out
push
cld
pop
scas
fcoml
out
mov
bound
pop
cwtl
rclb
in
test
sbb
in
add
stos
in
dec
dec
shrl
outsb
xlat
sub
xchg
hlt
mov
push
lods
mov
cli
jecxz
push
mov
xchg
je
lret
andb
lds
je
enter
lds
incl
leave
loop
add
icebp
mov
popf
inc
lock
sbb
pop
lds
notl
es
sub
inc
xchg
push
cmc
dec
or
movl
jg
pop
addl
hlt
jo
aam
std
jo
and
pop
lods
xor
mov
movsb
lcall
xchg
push
ret
aaa
jo
add
fld
daa
iret
nop
jo
mov
adc
addr16
xchg
js
pop
xchg
repz
jae
sbb
movsb
cld
ljmp
xor
shll
sbb
stc
adc
sub
mov
fmull
ror
into
fisubrl
or
pop
mov
and
pop
push
scas
popa
xor
jmp
loopne
loop
jno
push
popa
repnz
in
push
sub
mov
lahf
insl
ljmp
sbb
xchg
fmul
jne
pop
mov
pop
mov
pop
cmp
xor
into
fildll
insl
pop
stos
sti
addr16
pop
mov
and
ret
cmc
lea
lret
cmpl
insl
jl
cli
into
mov
aam
and
mov
and
xorl
add
rolb
shll
les
je
push
mov
sahf
and
xchg
aam
scas
ret
push
test
ficoml
jl
sbb
pusha
bound
sbb
lods
mov
jns
adc
repnz
sbb
inc
mov
fcmovnu
movsb
out
cmp
pop
in
out
sbbl
jo
cmpsl
fs
shr
add
add
sbb
cmp
adc
insl
iret
ret
mov
push
cs
sub
sbb
or
xor
rcrl
push
subl
adc
scas
out
aaa
cltd
add
mov
mov
dec
xlat
fnsave
cmpsl
fnstcw
cmp
push
sti
adc
add
sub
andl
movl
pop
add
cmp
mov
push
pop
jne
pop
or
or
mov
ficompl
dec
sub
ss
in
mov
xchg
ljmp
leave
loop
cld
dec
movl
add
mov
sub
jae
mov
ljmp
or
mov
ret
xor
fldt
dec
bound
imul
xchg
mov
test
push
lcall
xchg
cltd
xor
inc
jnp
adc
sahf
mov
cmp
adc
sub
or
adc
pop
addl
jg
mov
sbb
int
icebp
push
ljmp
cmpsb
add
outsb
loope
shlb
dec
mov
sbbl
and
push
cmp
jne
loop
dec
fildl
jno
dec
xchg
mov
xchg
scas
popf
add
imul
imul
dec
mov
daa
jns
call
aas
jp
push
fisttps
leave
test
notl
cmp
imul
or
cmp
mov
or
cmpsb
mov
and
mov
xchg
and
scas
fsubrl
pop
cwtl
mov
cld
sti
shll
fdiv
mov
out
mov
leave
add
daa
mov
and
popf
aam
pop
cmpsl
sbb
dec
xchg
cmp
cmp
stos
imul
mov
popa
out
cmpsb
sbb
sbb
sbb
fcoml
adc
push
pop
repz
jecxz
add
fsts
imul
cmp
adc
cs
test
pop
aaa
mov
xor
clc
das
jg
add
scas
sahf
mov
std
jnp
lods
mov
add
stos
rcrb
insl
pop
or
out
stc
push
popa
nop
lods
inc
test
fadds
xor
in
pop
adc
fmuls
xchg
loope
dec
mov
addl
mov
inc
cmc
and
add
add
mov
mov
or
push
dec
mov
pop
pop
shrl
push
jge
outsb
into
in
ret
pop
push
out
mov
in
mov
test
xchg
mov
sbb
adc
sub
in
cld
repz
add
xor
movsb
or
push
hlt
mov
xor
hlt
push
pusha
push
shrb
int3
add
pop
and
dec
sahf
fs
lods
lret
sub
lods
or
jbe
aas
sbb
xor
ds
add
aad
xchg
insl
test
bnd
mov
xchg
jecxz
lods
jb
fstps
xchg
jmp
push
enter
push
call
jb
repz
jle
imul
and
sbb
xchg
in
adc
pop
and
aam
fidivl
dec
or
add
push
out
lods
jg
sarl
jo
jmp
push
int3
push
or
pop
iret
cmp
mov
sub
cmc
iret
nop
in
xchg
push
xor
movsl
imul
nop
iret
ficoml
mov
pop
mov
out
in
xchg
mov
cmpsl
cmpsl
mov
cmpb
hlt
iret
dec
lcall
testb
mov
icebp
adc
mov
or
daa
push
sub
pushf
push
mov
adc
int3
dec
js
jle
movsl
inc
pushf
dec
dec
push
pop
xor
dec
insb
xchg
in
mov
cmpb
push
nop
fdivp
dec
and
sbb
in
clc
jno
cs
or
sbb
aas
cmp
iret
jge
mov
jg
js
sbb
ror
jno
test
cwtl
dec
or
shr
adcb
xchg
out
ret
fidivrs
inc
pop
push
shrl
sub
call
ljmp
vpcmpgtb
les
ja
scas
imul
push
test
int3
es
mov
mov
dec
push
or
adc
scas
mov
cli
lahf
sub
subb
fbstp
lds
sub
jno
or
mov
sub
test
xor
out
sahf
add
adc
fstpl
inc
pop
addb
in
jne
je
loope
dec
or
stc
sbb
shll
fs
ja
cmpsl
inc
lret
or
mov
leave
shl
ljmp
gs
leave
pop
cmp
rcrl
sbb
dec
mov
push
lds
outsl
push
fucomp
call
ffree
into
add
insl
cmpsb
or
ljmp
hlt
lds
movl
inc
fnstenv
and
stos
insb
cmp
or
lods
adc
insl
push
xor
and
inc
and
outsb
push
dec
in
popa
nop
sub
mov
out
es
repnz
sbb
loop
lret
jecxz
das
into
and
fwait
mov
mov
inc
jae
jb
adc
pop
icebp
or
add
fsubp
addr16
dec
adc
pop
mov
fldl
js
call
add
stc
repnz
jmp
std
pop
daa
sti
fdivs
jecxz
test
jnp
test
or
andnps
repnz
xchg
ja
cmpsb
rcl
into
jp
push
mov
out
mov
movb
mov
push
mov
mov
call
fnstsw
ret
cwtl
out
cmpsl
aam
lcall
jbe
ja
push
mov
jecxz
xor
cmp
cmp
push
sbb
fucom
decl
jbe
fwait
inc
daa
jo
popf
sbb
cs
icebp
iret
mov
push
xchg
lret
sub
ret
loope
adc
imul
inc
pop
or
aas
lds
cmpsb
flds
sbb
xor
dec
dec
popa
sbb
cmp
jb
sbb
pop
andl
push
ret
stc
roll
or
or
mov
leave
inc
in
mov
mov
adc
scas
push
test
mov
shr
pop
in
lock
enter
and
sbb
jg
sub
cmpsb
mov
jae
in
imul
loop
jnp
jae
pop
ret
and
inc
cs
shl
pushf
hlt
movsb
fadds
fcmove
fildl
inc
mov
pop
fsubl
sub
clc
cmpsb
sub
mov
ds
cmp
mov
add
arpl
add
arpl
in
cs
cmp
popa
es
jge
dec
push
in
cld
add
test
pusha
outsb
sbb
or
popa
ss
mov
inc
inc
xor
int
imul
mov
xchg
pop
jg
mov
xchg
pop
jnp
fstpl
inc
addr16
jl
sbb
push
mov
or
adc
mov
outsb
pop
in
xor
push
adc
push
test
push
pop
sbb
jp
imul
lcall
jo
jno
fdivrl
je
push
daa
jbe
mov
inc
xor
push
int
negb
jl
add
push
cmpsl
lods
gs
gs
jmp
pop
mov
mov
push
mov
imul
loop
jne
popf
mov
xchg
add
push
mov
cld
fwait
and
xor
sub
push
lds
xchg
lods
jmp
rcll
mov
push
jae
jecxz
mov
and
imul
lds
xor
and
add
jmp
sbb
inc
mov
or
sbb
mov
adc
mov
mov
cmp
ret
mov
incb
mov
sbb
adc
fcoml
loope
jp
cmp
pusha
and
push
push
bound
jl
xchg
leave
inc
cmpsb
stos
jp
sbb
loopne
cwtl
add
adc
cltd
stc
xchg
loope
rcl
xchg
jge
sbb
inc
stc
push
push
push
mov
gs
cmpsb
adc
daa
out
dec
iret
jge
dec
insl
fs
pop
arpl
jbe
loop
jge
add
inc
fsubs
fiaddl
pop
push
mov
push
std
or
pop
insl
cmp
xchg
scas
mov
insl
loop
int3
int
lds
jo
mov
scas
enter
sub
aad
inc
sub
add
shl
dec
xchg
test
rcl
cmpsl
jmp
lock
mov
sub
int3
addr16
aad
mov
jns
xor
movsb
aam
fdivl
pop
sub
lcall
adc
fcmove
xor
scas
jg
pop
adc
test
lock
xchg
popa
push
arpl
nop
insb
push
ds
rcrl
xchg
aaa
cli
rcl
cmp
ja
push
shll
mov
mov
cwtl
in
in
mov
inc
dec
lea
mov
mov
xchg
xorb
sbb
xchg
sub
icebp
xor
and
out
cmp
stc
je
pop
push
mov
popf
push
pop
mov
push
and
mov
pop
clc
stc
and
add
cmp
es
mov
xor
mov
xchg
cmpsl
movsl
inc
divb
jbe
scas
aaa
cmp
jo
lret
ud0
arpl
sub
pop
xor
mov
daa
sub
mov
push
in
dec
push
push
pop
add
lds
nop
xor
cmp
lcall
aaa
mov
rol
test
and
pop
ja
dec
sbb
jne
mov
dec
and
mov
adc
pop
orb
xchg
cmc
inc
cmp
loop
or
andl
iret
mov
popa
mov
jecxz
mov
icebp
push
add
pop
mov
fmull
jno
jae
cmp
push
scas
cmp
jns
add
cmpl
dec
add
daa
repnz
push
sub
pop
ror
add
cli
mov
or
into
mov
jns
xchg
mov
sub
pop
adc
dec
nop
cli
mov
outsb
arpl
mov
scas
lods
mov
imul
int
xor
jecxz
xchg
lea
loopne
loop
or
and
pusha
adc
inc
mov
lret
pop
les
int
in
cmp
jo
push
fiaddl
jl
movsb
cmp
movsl
inc
ds
inc
push
jo
jp
lret
aas
xor
pop
addb
xor
mov
push
and
push
shrb
cmc
mov
push
sub
ret
gs
scas
pop
lret
cmpsb
add
jno
call
icebp
xchg
sub
mov
mov
jno
in
into
sbb
shll
and
inc
call
or
subb
xchg
or
inc
icebp
dec
and
in
call
nop
ret
sub
mov
xchg
ljmp
push
adc
clc
ja
add
mov
pop
dec
add
popf
shl
cwtl
cld
mov
dec
inc
negb
gs
mov
fsubp
cmpsl
lret
jg
lahf
mov
add
adc
insl
adc
add
icebp
cli
xchg
adc
sbb
clc
pop
das
jno
into
xchg
repnz
add
push
loop
mov
mov
mov
fneni(8087
mov
rcll
or
xor
sbb
and
mov
push
fiadds
mov
xchg
pop
pushw
dec
mov
mov
ss
push
sub
sarl
xchg
and
and
or
and
mov
rcrl
sub
inc
push
fnstcw
shll
ljmp
mov
jb
or
stos
or
movlps
outsb
psubsb
adc
pop
mov
daa
test
bound
and
push
sbb
jge
lcall
mov
fsubrs
dec
pop
inc
insl
pop
and
mov
pop
cmp
repnz
add
jecxz
add
and
lcall
sahf
or
jp
pop
or
insl
hlt
pop
mov
int3
xchg
call
stc
mov
jle
mov
stos
dec
mov
mov
rcrl
repnz
in
push
les
add
es
imul
mov
popa
sbb
xor
stos
mov
test
lret
fildll
mov
inc
sbb
mov
nop
shlb
xchg
xor
or
or
sub
and
cmp
in
adc
test
or
sbb
xchg
and
or
xor
sub
lret
rorb
adc
ss
xchg
mov
pop
enter
lcall
out
cld
fiaddl
pop
mov
cmp
push
aad
push
add
sub
xchg
inc
and
sub
dec
inc
jge,pt
jmp
jo
inc
dec
mov
imul
cwtl
outsl
inc
mov
cld
arpl
pusha
push
inc
and
or
mov
nop
pop
mov
mov
es
mov
fwait
sbb
cmpsl
xchg
dec
mov
xor
dec
sub
mov
push
sbb
mov
cmp
aam
xor
loope
inc
jb
xlat
cmc
lcall
cwtl
mov
movsl
xchg
sub
fwait
sub
stc
loope
or
insb
popf
clc
xchg
xchg
stc
fnstenv
mov
xchg
rolb
lret
jp
lret
add
lea
sbb
inc
push
or
out
mov
out
ret
pop
enter
ret
lea
inc
xchg
inc
cs
sub
sub
push
stos
test
daa
add
cmp
push
int3
pop
cltd
out
pop
pop
xor
dec
js
test
adc
inc
stos
out
dec
push
nop
mov
das
mov
inc
pop
ljmp
xor
xlat
rcll
dec
movsl
jne
sarb
pop
pop
xchg
jne
mov
iret
push
fdivr
std
lea
das
sub
cld
mov
imul
fists
jl
cld
leave
cmpsl
call
mov
loopne
sti
out
cmp
mov
int
xchg
nop
shll
add
fisttpll
int
shll
mov
push
and
scas
cmp
icebp
lods
loopne
inc
in
jecxz
cli
call
cmpsb
cltd
jl
adcl
rol
scas
shlb
cld
lock
cmp
shll
xchg
cld
inc
hlt
xor
js
push
inc
into
lcall
stos
or
inc
cltd
bound
or
popa
dec
lret
mov
fistps
lods
hlt
sbb
mov
movsl
inc
mov
mov
adc
jnp
decb
jl
cmp
push
jle,pn
inc
idivb
sbb
cmp
rorb
push
adcl
test
ljmp
add
add
mov
push
jp
or
mov
jecxz
arpl
cmp
inc
enter
stos
icebp
nop
les
xchg
push
ret
das
andl
mov
pop
cmp
mov
cli
xorl
sbb
lret
std
pop
xchg
daa
or
arpl
test
xor
mov
and
out
and
dec
ja
fcomps
jne
pop
cmp
pop
fmulp
out
divl
lock
js
or
and
mov
adc
push
pop
sbb
sub
in
rcr
mov
test
call
adc
xchg
jb
jne
adcb
cmp
cltd
pop
push
inc
aam
add
mov
sbb
sbb
dec
push
in
pop
out
and
mov
sbb
pop
movsb
ljmp
test
inc
dec
ficompl
mov
fisttpll
dec
outsl
fiaddl
je
loopne
or
nop
add
sbb
lcall
mov
stc
out
sbb
sub
lahf
mov
cmp
mov
and
pop
sti
fcmove
cmp
insb
mov
and
loop
push
xchg
test
jbe
mov
fsubs
aam
and
push
call
or
add
push
clc
push
enter
notl
xor
sub
cmp
scas
out
loop
jbe
stos
jno
add
rorb
lods
stos
notl
enter
int3
mov
leave
mov
push
sbb
mov
and
cmpl
aad
mov
or
and
push
cld
pop
test
add
pop
pop
lret
fistpl
lods
popf
add
push
mov
cmp
and
imul
mov
mov
mov
xor
mov
sbb
out
sub
mov
cmp
mov
mov
loopne
mov
push
or
cmpsb
nop
mov
pop
jle
ror
das
fdivrl
stos
xor
fs
push
fstpl
shr
jae
xor
mov
sbb
xlat
sub
hlt
mov
mov
test
push
ret
fistpl
aas
lcall
ficoms
inc
jo
in
lock
stos
int
int
dec
or
inc
or
lods
test
mov
je
mov
add
xchg
testl
inc
out
pop
mov
daa
push
push
pop
lds
cmp
and
jnp
jecxz
call
mov
sbb
std
jmp
mov
dec
xchg
jle
mov
out
fmull
shrb
pop
daa
xor
into
push
jb
std
pop
inc
les
dec
cmp
xor
push
push
add
mov
mov
xchg
fstpt
test
adc
test
xlat
adc
dec
xor
ret
mov
and
sbb
push
ret
jp
push
repnz
pusha
testb
fdivl
mov
imul
push
mov
outsb
cmp
ljmp
lcall
scas
xor
insl
nop
jge
lds
nop
stos
scas
jne
or
inc
jae
xrelease
jbe
cmp
js
rorl
push
test
and
push
push
and
sti
push
sbb
aam
ljmp
fnsave
aad
mov
xchg
and
sti
scas
mov
inc
and
pop
mov
mov
rorl
lea
mov
add
mov
les
dec
fmull
and
mov
xchg
ds
sub
adc
int3
int
cmpsl
sysret
es
sub
fisttpl
mov
setg
mov
loop
into
ljmp
lock
cmp
mov
sbb
rcrb
and
xchg
js
shl
stos
enter
add
jb
icebp
repz
cmp
iret
mov
inc
shlb
fwait
sub
add
je
rcl
sub
cmp
sbb
arpl
sub
sub
aaa
jnp
mov
scas
xor
jg
adcb
dec
hlt
xor
cltd
out
pushl
push
pop
xor
test
sarl
lds
mov
mov
dec
mov
icebp
jmp
out
pushf
mov
outsb
orl
pusha
das
xor
mov
fs
push
filds
mov
xor
lds
push
push
mov
aam
or
sub
sbb
inc
mov
inc
cmc
xchg
movsl
iret
inc
std
or
push
incl
rolb
stc
test
fimuls
lret
and
cmp
enter
fmull
hlt
adc
push
out
js
inc
inc
cmp
mov
jb
jns
inc
sarl
sbbl
dec
mov
dec
push
popf
das
mov
inc
les
jb
decb
inc
or
sub
mov
aaa
ss
jns
jnp
jl
push
sahf
dec
and
lods
inc
ret
dec
sbb
mov
dec
mov
add
cmp
xchg
mov
data16
shll
push
dec
imul
push
loop
cmp
push
gs
stc
sub
dec
out
xchg
inc
out
xchg
xchg
add
sub
ljmp
enter
mov
ret
mov
add
dec
jno
incb
clc
in
out
cmpsl
fcomps
mov
stos
shld
and
dec
sub
cmp
mov
test
sbb
in
stos
and
movsb
add
mov
dec
sti
xchg
mov
cmp
pop
fwait
sti
xchg
js
dec
rorl
add
outsb
or
dec
and
mov
lods
cmp
dec
ljmp
shll
lret
pop
gs
and
push
mov
dec
roll
jnp
pop
and
imul
std
fwait
pop
pop
sub
pop
sti
popa
int
jl
lock
mov
ss
ljmp
scas
scas
out
mov
loop
pop
lahf
aam
dec
loope
out
mov
sahf
es
pop
and
cwtl
xchg
pop
jmp
mov
mov
insl
scas
sub
and
inc
mov
in
sub
or
mov
push
sub
xor
mov
push
jp
add
out
mov
imul
shlb
mov
cmp
ljmp
push
xchg
aaa
je
popa
imul
cmpl
inc
mov
cmp
adc
sbb
outsl
test
sub
aaa
cmp
std
in
repz
sub
pusha
push
cltd
aas
xchg
or
pop
add
push
cltd
ds
push
arpl
pop
jo
dec
int
sub
push
mov
mov
sbb
bound
jnp
dec
adc
sarb
jg
movsb
inc
pop
mov
mov
lret
fs
or
ja
jp
icebp
outsb
mov
xchg
push
jl
or
test
shlb
repnz
jge
cmp
repz
jnp
pushf
mov
sub
mov
outsb
and
rolb
out
leave
imul
movsb
cmp
sub
outsb
pop
sti
inc
gs
jns
ret
pop
sbb
push
mov
lods
pop
ja
test
mov
ret
es
xchg
add
repz
cmp
in
push
enter
pop
jg
notb
or
imul
je
sbb
repz
dec
sbb
cmpsl
xor
ficomps
popf
ja
stc
arpl
sbb
jno
pop
and
into
jp
in
mov
sub
jge
clc
fimull
jmp
push
mov
sub
inc
jmp
lret
loopne
jl
dec
int
ficompl
outsb
rorb
jl
jbe
xor
stos
jle
les
stos
lret
mov
xor
pop
nop
out
scas
das
ja
adc
divb
lds
mov
enter
adc
dec
inc
aaa
out
lods
imul
cmpsb
mov
ljmp
mov
mov
inc
add
repnz
mov
xor
mov
sbb
test
movb
pop
movsb
in
pop
inc
jbe
xor
les
addr16
ja
add
lahf
xor
test
arpl
loopne
int3
inc
xchg
cli
cld
mov
inc
push
in
cmpsl
xor
cld
inc
jecxz
ja
inc
jo
mov
xchg
sub
stos
xchg
mov
mov
jae
scas
dec
and
jbe
enter
dec
fnstsw
pop
das
insl
data16
cmp
mov
xchg
sub
flds
sbb
and
or
leave
bound
cltd
fcoms
add
nop
jge
stos
pusha
and
fnsave
push
push
fsubs
or
inc
jecxz
movsl
or
and
xor
xor
sub
imul
int3
addr16
cmpsl
into
clc
xor
scas
lds
popa
push
cmpsl
aaa
ret
mov
sub
jns
lret
fmuls
ljmp
xor
in
mov
rcr
xchg
lods
movsl
or
movsb
ja
mov
mov
movsl
out
hlt
test
int
dec
loopne
inc
sub
cli
popf
ficoml
xor
pop
leave
mov
push
mov
clc
ret
insb
fistps
mov
xor
stos
xor
xor
ficomps
lahf
mov
test
shll
loope
jecxz
cmp
out
bound
jno
into
int3
inc
push
ret
aas
mov
scas
popa
xor
cli
insl
cli
inc
sub
add
mov
cld
int
test
or
movsl
ret
iret
mov
imul
das
loopne
call
jnp
je
adcb
xchg
sbb
cmp
bound
cwtl
int3
pushf
mov
in
mov
mov
stc
test
inc
addr16
sub
std
add
cmpb
ss
mov
sub
cmpsl
push
pop
fstps
icebp
xor
add
jae
push
mov
imull
das
jae
jae
in
jge
or
fcompl
neg
sub
jns
addl
jmp
fwait
jge
les
jmp
js
pop
lock
cli
fwait
add
or
or
iret
movsl
add
or
pop
pop
mov
lcall
inc
sti
aas
mov
aad
mov
mov
jae
ret
lcall
call
rcrb
mov
cmpsl
pop
arpl
sbb
mov
xorl
cmp
sub
cmp
in
cmp
mov
fiadds
lahf
mov
cltd
cmpsb
xchg
test
mov
push
mov
rol
jno
sbb
fisubl
outsb
mov
pop
add
and
lcall
jle
cli
shll
cmpsl
push
mov
dec
mov
and
notb
sarb
xchg
lea
das
in
inc
dec
mov
adc
jae
mov
js
sbb
test
movsb
clc
push
idiv
sbb
add
cmp
push
leave
hlt
dec
daa
arpl
stos
xchg
jno
test
movsb
pop
shr
into
mov
push
lret
shll
sub
inc
into
adc
push
sbb
in
jmp
adc
add
adc
in
adc
adc
sub
arpl
in
cwtl
in
gs
lahf
rsm
pop
outsl
jbe
cmpsl
pop
sbb
shll
sub
movsl
dec
or
pop
push
push
mov
xchg
aam
cmp
mov
arpl
pop
mov
out
lret
or
insb
adc
lds
jbe
dec
loop
mov
adc
je
or
fdivl
push
jns
sar
les
mov
push
push
adc
push
pop
push
movsl
loop
outsb
sbb
in
icebp
jge
js
ja
xchg
xlat
add
sarb
push
sbb
push
or
cmp
jb
inc
jno
pop
ja
mov
or
imul
jae
jp
ret
jns
cmp
aas
es
xor
fidivl
daa
mov
xchg
pusha
aaa
fucomp
xchg
push
ficomps
mov
popa
leave
stos
gs
insb
les
sub
push
inc
or
in
jbe
mov
mov
cmc
pusha
and
and
or
js
push
inc
cmc
decl
sbb
mov
mov
int
push
pop
and
enter
sub
repz
movsb
mov
push
xor
sarl
das
insl
xchg
or
ja
stos
sbb
frstor
inc
push
sbb
push
mov
xor
lock
add
lods
sub
fsubrl
js
test
adcl
lcall
cmc
and
mov
push
push
adc
mov
bound
mov
mov
test
push
cmpsl
in
popf
insb
dec
cmpb
xor
js
adc
xor
sbb
sub
cmc
pop
addr16
push
lcall
icebp
lret
inc
loopne
fs
sub
sbb
dec
inc
push
mov
out
fdivs
cltd
pop
test
push
xchg
fmulp
jmp
pop
lods
mov
stos
dec
pop
or
icebp
cmp
fcoms
out
mov
sub
cmp
leave
shlb
std
aaa
jne
mov
xchg
jp
xor
jne
addr16
adc
mov
and
inc
das
xor
xchg
test
outsb
rclb
and
adc
sub
xor
and
xor
adc
inc
clc
or
gs
test
jne
add
or
imul
popa
imull
jbe
dec
adc
lret
pop
jo
insl
add
mov
jns
mov
add
dec
jnp
inc
jg
sbb
xor
xchg
int3
mov
inc
jno
rorl
test
xchg
sbb
mov
adc
or
sarb
pop
sbb
popa
pop
cmp
pop
cld
fs
clc
add
xor
loop
sbb
or
gs
or
or
xchg
adc
enter
rorl
jnp
dec
lahf
sbb
pusha
imul
inc
xor
pop
cmc
in
sbbl
mov
loop
out
jl
cmp
jl
outsl
in
repz
iret
jle
inc
mov
or
inc
aas
pushf
mov
dec
xor
mov
incb
std
cmp
repnz
sub
addr16
pavgw
int3
mov
inc
xor
cmpsb
cli
jno
pusha
loope
cmpsl
cmp
mov
andb
jg
call
leave
popa
push
mov
cmp
into
call
enter
inc
xlat
jnp
dec
jp
mov
mov
or
sbb
dec
negl
dec
pop
dec
jno
out
sub
aam
jbe
jecxz
aas
cmp
mov
cmp
mov
jmp
add
pusha
lret
cmpb
push
call
inc
addr16
in
xchg
lea
mov
and
sub
lock
jge
call
call
enter
or
lret
or
cmp
pop
fldenv
loopne
pop
jne
push
mov
fnsave
pop
push
jne
scas
sbb
pop
or
xchg
sbb
lahf
sbb
jne
pop
gs
loop
mov
sub
ljmp
push
or
ret
dec
push
cmp
test
mov
xor
bound
lods
scas
cltd
add
in
or
jge
test
sub
cmpsb
xchg
and
jmp
sahf
and
jo
pop
cmp
ret
sub
test
jne
into
push
aas
test
sar
mov
imull
movsb
mov
dec
mov
xchg
aam
xor
iret
test
or
inc
pop
cmp
mov
outsb
shll
push
movsb
enter
cmp
mov
dec
fisubrl
lret
add
test
dec
nop
add
jnp
dec
test
cli
pop
mov
fldl
jbe
fildl
data16
in
mov
pop
shrb
mov
jb
cld
out
mov
cmp
mov
lahf
push
call
jg
xor
inc
or
aam
add
xor
sarl
xchg
pop
lret
in
rolb
popf
mov
jmp
sahf
repz
sub
push
xor
pop
and
jb
gs
repnz
cmpsl
rol
xchg
xchg
jbe
jae
aas
sti
adc
sbb
fisttps
or
jae
loop
ret
orb
or
pop
xchg
sub
xchg
jbe
or
push
xor
lods
jge
repnz
lret
call
sahf
sbbb
test
arpl
push
addr16
jge
clc
sub
loopne
inc
jcxz
inc
mov
xor
mov
inc
bound
test
push
push
loop
daa
imull
pop
push
add
sub
or
ret
xchg
lret
inc
mov
js
out
enter
pop
test
xchg
sbb
ja
jno
add
or
or
xchg
jl
dec
iret
add
xor
sub
std
add
sbb
jne
roll
inc
jl
loopne
and
jle
fdivs
imul
mov
or
fmull
xchg
dec
jno
inc
push
cltd
loope
dec
cmp
xor
sub
xchg
mov
mov
cwtl
jne
lret
sub
imul
pop
or
pushf
push
and
cmc
shrb
mov
popf
add
cld
dec
mov
fisttpl
lock
js
fbstp
std
sbb
pop
popaw
dec
fsubrl
ds
leave
mov
jp
cltd
nop
mov
in
imulb
das
sbb
cld
sub
or
scas
xlat
adc
push
call
cltd
jb
or
cli
xor
mov
sbb
movsb
xchg
outsl
mov
cmp
shll
jge
add
je
or
mov
dec
arpl
sub
insb
imul
pop
push
rolb
inc
adc
or
js
jge,pn
imul
and
addr16
push
adc
push
popf
mov
negb
ret
jns
pop
xor
dec
insb
sub
mov
and
call
cmp
push
pop
repz
int3
lahf
pushf
mov
lcall
movsl
in
jmp
jbe
or
cmpsl
pop
testb
imul
clc
scas
rclb
xor
cs
ret
xchg
dec
sbb
shrb
add
pusha
add
out
and
stos
inc
xchg
jg
lods
ficompl
pop
jae
pop
outsb
pusha
stos
nop
lret
dec
loopne
add
push
rorb
in
pandn
adc
icebp
sahf
mov
fs
push
cmp
pop
stos
movsl
bound
mov
sahf
and
movsl
push
adc
repz
add
jp
cmp
jg
call
xor
repnz
repnz
cmc
xchg
pop
or
pop
or
mov
mov
mov
cmp
aaa
fldl
ja
imul
or
idivb
sar
sub
xor
cltd
or
cltd
cmp
jne
sbb
pop
sarb
cmpsl
in
mov
cmpsb
jmp
mov
cmpsl
mov
shrb
pop
xor
add
add
mov
hlt
inc
arpl
inc
sub
test
jae
mov
sbb
mov
adc
mov
pop
or
lcall
mov
loop
out
mov
cmpsb
mov
inc
inc
imul
sub
ljmp
int3
movsb
ret
mov
pop
or
pop
pop
sti
xor
jmp
popaw
sbb
push
in
aaa
sbb
aaa
jge
push
mov
add
cmp
in
cmp
lods
pop
xchg
aad
lcall
mov
fidivs
popa
jne
bound
lods
lods
xchg
cmp
cmp
mov
cmpl
shlb
out
popa
js
mov
inc
je
mov
adc
jns
add
ret
push
mov
push
mov
sbb
push
bound
test
sub
jae
enter
inc
loop
push
popa
xorl
xorb
sub
loop
pop
aad
stc
in
mov
mov
cmp
xchg
push
mov
and
push
into
push
sub
fimull
xor
sub
fldt
popf
shrb
iret
jg
inc
xor
push
arpl
out
dec
and
mov
std
pop
daa
fcompl
aaa
lret
inc
popf
cmc
lahf
aas
inc
int
jbe
xor
mov
jno
rol
pop
push
lret
aad
cmpsb
xchg
test
pop
or
leave
mov
mov
lds
enter
inc
aad
xchg
sbb
mov
jbe
pop
or
scas
pushf
xlat
pop
inc
sahf
ret
scas
into
orps
dec
out
inc
ljmp
mov
pop
adc
or
xor
mov
mov
sub
addr16
rclb
adc
in
fnstenv
mov
inc
scas
add
push
xchg
cmp
pop
inc
vmovdqu
and
mov
adc
dec
pop
pop
adc
int3
jb
lahf
bnd
outsb
pop
cmp
lret
nop
or
sti
sub
and
es
fstpl
call
push
pushf
cmp
sub
cmp
idivb
bound
push
jle
mov
pushf
addb
pmaxub
test
mov
mov
mov
xor
push
or
jecxz
aas
std
mov
sbb
and
xor
add
stc
jmp
loop
iret
outsl
adc
int3
and
and
iret
adc
add
das
mov
or
inc
lahf
push
add
cld
mov
movsb
push
dec
test
je
or
repnz
sbbb
loop
ja
into
jmp
rolb
ret
in
push
mov
jge
in
cli
mov
outsb
fs
outsb
cmc
mov
aas
jecxz
loope
cmp
inc
leave
mov
loopne
sti
out
test
push
mov
lret
lret
xor
mov
pop
add
test
cmpsb
dec
scas
xchg
adc
je
mov
fdiv
mov
xor
js
rcl
in
jmp
cli
outsb
add
jle
stos
lahf
inc
jbe
mov
mov
fwait
mov
out
sub
out
dec
out
iret
orl
lcall
inc
mov
sbbl
cmp
xchg
or
shr
and
hlt
leave
push
test
mov
and
test
push
mov
pop
nop
test
js
stos
add
push
adc
xor
adc
add
lock
loopne
testb
jg
imul
ljmp
das
or
ja
pop
fisttps
mov
pop
add
xchg
or
iret
imul
mov
cmp
mov
add
cmp
mov
in
sub
imul
xor
mov
adc
jae
into
and
push
and
pop
dec
add
pusha
jl
adc
mov
in
das
mov
mul
pop
leave
addr16
daa
ret
aaa
stos
loop
ret
fdivs
adc
imul
mov
push
push
push
fldt
jmp
mov
push
loop
or
shl
xor
aaa
push
push
out
daa
sbb
cmpsb
roll
cltd
imul
jmp
repz
test
pop
enter
mov
push
mov
ret
dec
push
cmp
adc
and
scas
iret
sub
xor
xchg
pop
sbb
sub
or
push
xchg
out
lret
dec
dec
cmp
jae
in
lods
ret
outsl
repz
stc
int3
dec
fisttpll
pop
push
pop
int
in
clc
ret
dec
add
sbb
fcomps
testl
lcall
cmp
mov
pop
push
into
mov
pusha
fdiv
or
outsl
popa
mov
jg
sarl
imul
lea
ds
mulb
sub
decb
test
jle
les
cmpsb
fsts
pushf
ds
fdivs
ficompl
xchg
mov
loopne
shrl
lret
xlat
in
pop
pop
lods
rcll
add
ljmp
call
jbe
adc
add
sub
insb
stc
cmpsb
cmc
mov
data16
pop
nop
cmp
stos
push
inc
pop
std
push
insl
fldl
int
inc
push
fisttpll
and
inc
add
adc
cmpsl
fcoms
mov
lahf
dec
ret
jle
mov
sub
lods
subb
sti
push
cs
rcl
divl
cmpsl
adc
cmp
dec
popl
dec
out
jmp
or
push
std
sub
std
pop
and
and
popf
mov
ss
cld
and
lret
stos
add
mov
fsubp
dec
stos
faddl
rcrl
inc
repnz
cmp
arpl
orb
test
aas
stos
js
jle
repnz
and
cmp
xchg
cli
lahf
repz
loopne
jnp
arpl
adc
clc
lahf
pop
and
xor
outsl
sub
int
or
movsl
xchg
pop
shll
pusha
aaa
sbb
rclb
lret
test
sub
stos
adc
push
pusha
ret
fwait
mov
ljmp
loope
nop
mov
scas
sbb
mov
xchg
sbb
jge
aad
icebp
outsl
xor
jo
test
push
inc
jo
cmpsl
popf
push
in
and
jb
push
es
out
inc
pop
or
sbb
fimuls
sbb
stos
fsubr
ljmp
pop
mov
mov
push
xchg
mov
mov
add
xlat
movsb
hlt
popa
xchg
mov
xor
cmp
mov
sbb
add
enter
pop
dec
lret
movsl
cwtl
idivl
in
movsb
or
outsl
pushf
cmp
scas
cltd
lea
lods
icebp
and
test
test
mov
pop
jb
xchg
mov
jno
add
das
shl
lret
popa
dec
ret
outsl
js
add
mov
jle
jmp
mov
sbb
out
jg
mov
cmovno
iret
or
sub
xor
push
mov
jb
std
adc
test
xor
std
lretw
xchg
ss
ja
fistpl
out
add
je
jge
mov
or
in
xor
lock
cs
xor
add
lea
push
push
xchg
mov
mov
xorb
xchg
es
adc
xchg
and
pop
sbb
and
mov
pop
mov
lods
gs
fisubrs
inc
pop
mov
nop
add
rcll
cli
xchg
mov
insl
fmull
inc
push
mov
sti
cmp
cmpsl
mov
rclb
add
dec
or
rol
in
add
mov
repz
testb
sbb
add
xor
cmp
shll
xor
lock
in
mov
idivl
adc
lret
cltd
push
sti
push
rorl
arpl
jb
rcll
les
xchg
mov
in
dec
cmp
call
cmp
fstl
int3
lret
pop
iret
dec
scas
push
test
inc
test
adc
out
mov
adc
inc
xchg
dec
mov
dec
fcoml
cli
test
es
add
frstor
mov
aas
je
addl
insb
sub
cmp
push
and
ja
adc
pop
movsb
pop
cmp
pop
xor
jl
lods
xchg
enter
dec
test
adc
mov
pop
mov
mov
pop
xor
daa
dec
fildll
dec
inc
std
loop
jb
stc
dec
fmuls
clc
mov
dec
cs
enter
repz
into
xor
cmp
stos
xor
cld
not
leave
jp
mov
jnp
and
xchg
xor
mov
int3
inc
out
popa
sbb
inc
mov
mov
insb
inc
in
scas
or
sbb
jge
mov
mov
arpl
clc
loopne
push
sar
fsubrl
jp
je
mov
add
mov
mov
inc
imul
jecxz
pop
aaa
shl
cli
mov
ds
int
das
sbb
adc
popf
cmp
loope
jae
mov
popl
lock
xchg
cmpsl
xchg
repnz
adc
mov
sbb
and
lods
je
inc
inc
cltd
inc
arpl
jns
daa
dec
int
fwait
mov
or
sbb
jmp
mov
cmp
das
pop
jge
add
mov
mov
adc
nop
pop
inc
push
test
jle
jo
xchg
cmc
in
pushf
mov
push
pushl
insb
xchg
ficomps
mov
adc
imul
in
clc
and
push
pop
outsl
mov
push
jb
cmp
cmc
push
dec
neg
rcll
jae
mov
leave
fmulp
ja
lds
xor
and
mov
or
cli
cmpl
adc
out
movsb
jbe
das
imul
enter
mov
or
xor
sbb
mov
int
iret
push
jmp
insb
inc
in
scas
dec
imul
repz
sti
std
loop
mov
or
xchg
push
xchg
push
add
xchg
cld
ljmp
jb
mov
add
xchg
push
adc
jecxz
rclb
jge
stc
or
add
xchg
ret
add
repnz
mov
ficoms
in
ds
dec
lret
iret
mov
cld
and
ror
iret
pop
adcb
or
mov
mov
inc
and
inc
lock
inc
test
adc
in
ja
int
imul
xor
icebp
and
outsb
ficoml
cli
lcall
sub
sub
es
mov
jge
cli
jb
add
outsb
mov
xor
loopne
and
mov
popf
in
in
xor
sti
jbe
mov
mov
movsl
movsl
sub
cmc
aad
out
pop
mov
dec
call
xchg
int3
shlb
fwait
push
nop
add
mov
das
mov
and
adc
stos
add
push
pop
mov
fists
mov
pusha
push
jg
adc
das
jg
push
pop
sahf
and
adc
jp
pop
cs
ret
out
mov
mov
sub
popf
aas
push
add
test
enter
push
lock
cli
out
fnclex
addr16
xor
rcrb
nop
or
or
mul
in
lret
ret
jbe
pusha
gs
sub
data16
sub
stos
fsts
xor
sub
test
push
cmp
ret
roll
push
int3
aad
inc
fwait
dec
test
or
mov
aad
mov
movsb
scas
cmp
push
mov
lods
add
pop
dec
sub
pusha
data16
lcall
sub
aaa
pop
outsl
cmp
stc
fdivrs
or
test
pop
push
inc
test
and
pop
xor
xchg
inc
arpl
cmpsl
add
dec
insb
cmpsb
push
test
sbb
lock
sub
pop
mov
pop
enter
outsl
pop
adc
cmpsl
test
pusha
mov
loope
inc
ret
pop
xor
sbb
dec
dec
push
sbb
scas
fwait
loop,pn
mov
lcall
push
lock
std
loope
mov
mov
pop
xor
shll
sti
in
hlt
sbb
clc
mov
mov
or
addr16
mov
ret
nop
mov
ja
loope
xchg
je
call
lods
xchg
cmpsl
js
loope
xchg
out
lret
js
sahf
out
xchg
add
pop
jns
cmp
inc
sub
movsb
and
call
push
test
cmp
pop
and
push
pop
inc
and
popa
in
das
mov
lahf
xchg
jg
fisubs
sarl
push
jge
mov
and
fnstsw
fs
xor
mov
mov
or
push
mov
sar
jb
arpl
pop
pop
jmp
call
fistl
inc
push
mov
lods
pop
xor
mov
xor
lods
xchg
leave
xchg
pop
xchg
xor
mov
bound
add
or
movsl
jbe
fidivrl
popa
in
adc
gs
cld
push
lods
dec
leave
mov
xorb
iret
pop
clc
jbe
in
or
test
and
cmc
jle
les
andl
nop
push
je
out
aad
xchg
int
mov
int
adc
mov
negl
and
stos
mov
inc
test
jg
enter
in
test
sub
push
xchg
js
ja
lds
in
cmp
or
inc
xchg
mov
push
lret
pop
seta
push
pop
sbbl
fidivrs
pop
adc
jge
movsl
stos
or
mov
jmp
rorl
jnp
mov
cmp
roll
adc
xor
inc
cmp
pop
out
movsb
cmp
add
rcrl
jl
fwait
aam
dec
mov
xor
pop
inc
add
popf
pop
jnp
je
jge
xchg
rcrl
in
xor
rcrb
mov
outsb
add
imul
push
or
adc
and
push
mov
push
jb
imul
mov
add
push
mov
ffreep
rolb
aas
cltd
push
push
subb
rcl
cli
xor
out
jl
les
cld
jge
ret
icebp
mov
out
mov
lock
or
mov
cmp
outsl
pop
cld
mov
xchg
and
adc
push
xchg
add
loopne
mov
dec
mov
fs
inc
ret
lcall
sbb
jle
dec
loop
enter
pop
xorb
movb
pop
mov
mov
out
sub
pop
icebp
mov
inc
aas
sub
or
cli
mov
lea
ljmp
daa
xor
cmpsb
dec
fwait
mov
inc
cmpsl
mov
xchg
std
pusha
cmp
mov
cwtl
mov
adc
sar
cli
test
dec
ja
jmp
pushf
sarl
lret
push
out
pop
xchg
push
and
add
or
in
mov
xchg
out
jbe
daa
out
cmp
data16
or
mov
xchg
nop
shlb
or
hlt
inc
loop
mov
scas
sbb
stc
mov
and
xchg
aaa
int3
out
ja
cmp
iret
push
pop
gs
negb
dec
mov
movsl
stc
sbb
in
sub
lret
rorb
pop
idiv
cmpb
bnd
jle
in
or
dec
sbb
enter
rcrb
stc
mov
xchg
repz
or
push
nop
jmp
ret
mov
lcall
test
cmp
jle
lods
push
xchg
xchg
mov
add
popa
xor
rcll
jne
filds
repnz
int3
or
jbe
test
pop
aaa
ljmp
fisttps
add
cmp
dec
push
decl
cmpsb
or
adc
imul
cs
bound
lret
xor
sbb
imul
and
std
std
pop
scas
ret
dec
xchg
aad
pop
pushf
mov
sub
data16
lret
sbb
push
movsb
jb
cmpsl
inc
leave
fstl
add
leave
fdivl
sub
jg
add
jb
lret
out
test
inc
cmp
stc
out
adc
sub
cld
cmp
sbb
dec
and
pop
leave
or
push
popf
push
mov
cmp
in
rclb
ret
pop
std
lret
xor
stc
ret
ss
jmp
xor
add
iret
insl
test
popf
xchg
push
cmc
insb
jmp
clc
ds
pop
popf
pop
cld
shll
mov
push
inc
out
sub
sti
in
into
loop
xchg
movsb
xor
sbb
jb
sub
addr16
xor
je
jo
loopne
and
xor
xchg
pop
repz
jno
push
add
movsb
out
xor
clc
shl
loope
adc
insb
ja
push
inc
movsb
pop
push
lahf
lret
out
sbb
dec
fisubs
xor
or
iret
popf
pop
cmp
sub
mov
les
mov
inc
lret
insb
or
mov
outsb
je
inc
jmp
push
fmull
pop
xchg
mov
push
iret
jecxz
mov
jp
push
enter
mov
mov
xchg
or
mull
jne
in
dec
bsf
mov
clc
push
or
or
enter
sahf
cli
bound
cmp
popf
pop
inc
inc
sti
push
orb
mov
dec
or
inc
and
xchg
bound
jl
push
dec
cmc
ret
add
push
mull
sub
ja
inc
fnstcw
xchg
xchg
cmp
xchg
push
mov
mov
pop
fyl2x
out
mov
xchg
push
andl
lods
dec
idivb
fidivrl
push
jmp
sbb
lret
mov
out
cmp
iret
or
dec
ja
inc
cwtl
mov
push
mov
test
and
mov
loop
sub
sbb
push
inc
mov
and
and
mov
scas
enter
insl
jge
mov
lret
and
jecxz
add
clc
test
mov
call
dec
jle
in
mov
and
push
imul
and
xor
push
addb
ljmp
pop
punpckhbw
push
ret
push
repnz
mov
mov
sahf
out
pop
xchg
sahf
dec
mov
lods
mov
or
dec
mov
add
inc
flds
inc
jmp
ret
fs
mov
mov
leave
pop
add
test
inc
and
and
vpshaq
dec
mov
mov
test
push
mov
negb
aas
jecxz
mov
xchg
adc
lea
xlat
or
xchg
lods
mov
and
adc
add
dec
out
int3
push
insl
jno
lcall
ds
roll
es
out
cmpl
adc
xor
dec
out
imul
cmp
xor
iret
push
adc
jb
jmp
xchg
xchg
xor
adc
popa
movsl
nop
fimull
sbb
out
lea
stc
pop
shr
cld
dec
in
imul
jae
xchg
lods
or
push
pop
lret
outsb
dec
loopne
hlt
adc
push
push
mov
mov
movsl
pop
pop
inc
xlat
jmp
mov
dec
mov
stos
mov
scas
add
cltd
notl
adc
pop
pop
shlb
jle
xor
or
jo
mov
jbe
dec
sub
test
xchg
add
stos
adc
sub
sub
dec
push
adc
cmp
js
out
repnz
mull
and
and
push
cwtl
shrb
bound
test
sarl
scas
or
sarl
xchg
gs
add
iret
inc
adc
dec
enter
in
mov
fs
push
and
mov
add
dec
add
addl
xor
mov
add
test
jne
iret
dec
lods
scas
inc
mov
mov
lock
cmp
jecxz
mov
mov
pop
jl
cld
mov
std
ficoml
and
fidivrs
fidivs
fldcw
add
xchg
inc
ds
and
jle
stos
jae
mov
pop
in
jo
dec
daa
pop
jmp
sbb
adc
hlt
xchg
xor
stc
arpl
xchg
sub
mov
ljmp
sbb
loopne
push
sub
mov
dec
xchg
cltd
push
scas
cmc
inc
xlat
xor
sub
push
sbb
cld
scas
cmpsb
insl
mov
mov
aaa
inc
nop
mov
inc
pop
fbld
sub
sbb
insb
repnz
pop
sahf
stos
dec
movb
lcall
sbb
dec
xor
int3
js
sbb
jg
or
loope
mov
push
push
xchg
or
dec
cmp
mov
xchg
jecxz
addr16
mov
push
xchg
jbe
dec
inc
pop
jl
cld
push
fistpl
pusha
or
cmpsl
or
mov
mov
xchg
sub
push
dec
lods
add
out
xchg
ja
jae
and
adc
cli
imul
and
popa
into
adc
stc
push
rolb
inc
add
push
adc
dec
fucomi
rolb
push
pop
pusha
aas
popa
data16
in
pusha
push
jp
xor
cmp
movsl
mov
push
je
inc
push
int
incb
loop
mov
dec
sbb
jnp
jno
cmc
xor
ds
pop
fistps
add
pusha
rorb
int
add
jne
pop
mov
xchg
ffreep
js
or
dec
pop
adc
sahf
mov
mov
push
mov
cbtw
mov
mov
sbb
and
xchg
arpl
cli
xchg
sub
int3
cmp
icebp
push
je
pop
scas
pop
push
add
xchg
insb
ljmp
mov
sub
cmp
or
dec
sub
push
negl
pushf
into
jmp
pushf
test
adc
add
jno
out
push
xchg
cwtl
xlat
jo
scas
xchg
xor
ret
dec
mov
movsl
iret
imul
jnp
and
popf
jle
xchg
fidivl
nop
jnp
add
loop
or
inc
adc
sub
or
jp
ss
mov
add
mov
and
jmp
jmp
cmp
or
les
cli
das
cmpl
and
insl
mov
sub
movsl
addps
in
daa
or
stos
push
sub
lock
pop
jp
inc
rorb
into
aas
mov
call
fidivs
xlat
cmp
int3
insl
sarl
imul
pop
ja
shlb
mov
add
sub
sahf
adc
imulb
pop
ljmp
and
add
popf
lods
xchg
mov
dec
icebp
out
lcall
and
mov
xchg
ljmp
mov
loopne
daa
mov
jge
popf
push
not
push
lcall
cmc
push
das
add
aad
xor
xchg
jge
in
dec
aad
ret
pfacc
xchg
mov
dec
sub
xor
and
icebp
lea
fcoml
addr16
pop
push
add
xor
mov
inc
jp
sbb
mov
mov
dec
daa
call
push
push
dec
dec
out
or
aas
jnp
test
shrb
cmp
adc
mov
push
mov
and
insb
aad
inc
outsb
jbe
push
add
mov
das
push
cmp
jnp
xchg
xchg
dec
inc
in
pop
imul
jae
jmp
cld
push
cld
mov
cmp
or
xchg
xor
iret
mov
adc
inc
cmp
mov
xchg
sti
outsl
sbb
aaa
pop
mov
jbe
add
lds
in
cwtl
mov
push
xor
push
adc
xor
mov
sti
mov
mov
push
dec
jo
aaa
pop
fmull
lods
jge
loopne
jge
lods
lods
and
ja
mov
movsb
add
mov
fiaddl
and
dec
mov
jne
sahf
fprem1
mov
cmp
and
mov
sub
or
imulb
jl
rol
fwait
nop
adc
push
jns
lea
roll
xor
push
cltd
hlt
jmp
xchg
mov
pop
lods
dec
inc
lret
lock
xchg
add
sbb
imul
push
ljmp
xor
loopne
popl
push
push
ftst
or
jnp
mov
addb
mov
sub
xor
sbb
lcall
data16
sub
jl
cmp
sbbl
jmp
add
fcmovnbe
jb
push
xchg
push
cwtl
stos
fwait
jb
push
aas
dec
cmp
xchg
lock
mov
jle
enter
push
shl
dec
adc
jb
cmc
mov
inc
ret
aaa
lea
cs
xor
jno
out
inc
lcall
mov
out
xor
xor
pop
dec
inc
loop
int3
mov
or
inc
mov
out
in
test
cltd
mov
aaa
aam
rcrl
mov
inc
pop
cmp
xchg
int3
jp
mov
jo
fcoml
faddl
jp
cmpsl
add
sub
and
repnz
test
jbe
lcall
dec
cmp
stos
enter
dec
add
mov
mov
out
js
pop
aad
dec
inc
push
sbb
hlt
xchg
sbb
mov
mov
adc
divl
jle
xchg
jbe
adc
dec
jmp
test
sbb
stos
pop
std
jmp
inc
jno
daa
mov
dec
test
shlb
into
fstps
lods
cmp
bound
cmc
and
loope
in
inc
jo
push
cmpsb
xchg
orl
sbb
hlt
fiaddl
xor
ljmp
mov
out
add
mov
neg
add
xchg
les
ss
and
push
sbb
orb
xor
jno
pusha
fnstenv
rep
jecxz
fs
sub
insl
lahf
filds
insl
incl
notl
insl
or
and
or
push
aaa
inc
hlt
clc
xorb
sahf
cs
ds
ret
lea
mov
mov
test
loope
sub
cs
pop
out
shr
mov
imulb
xchg
push
insb
adc
dec
popf
xor
insb
stos
or
cwtl
sub
aam
add
pop
add
push
movsl
jg
sbb
gs
add
mov
mov
push
xchg
mov
mov
inc
pop
sub
pusha
fs
lods
xchg
sub
cwtl
in
les
add
or
push
lock
js
cmp
shrl
jb
xchg
cmp
out
imul
test
mov
into
pop
cmpsb
push
into
mov
cld
out
fld
ja
aad
adc
or
mov
mov
sub
push
sarl
mov
push
out
pop
imul
arpl
sub
cmp
xchg
xchg
int
pop
pop
shl
lahf
inc
mov
cmp
lods
imul
repnz
mov
cmp
pop
lods
fisubs
arpl
insb
push
jle
jns
ss
dec
fldt
fisubrs
sbb
idivl
xor
je
jl
test
or
lods
xor
test
mov
xor
sarb
lods
stos
mov
adc
adc
xor
jb
push
cmc
cmp
mov
pop
mov
cltd
mov
and
adc
dec
push
loope
mov
mov
add
adc
push
fidivrl
bound
lret
mov
mov
cmpsl
movsb
fs
shlb
mov
inc
push
bnd
test
rolb
neg
pop
rol
mov
jp
in
jecxz
out
fwait
imul
fwait
mov
ret
gs
shl
cmc
addr16
xchg
sbb
mov
aam
sbbl
jmp
adc
je
enter
jne
and
mov
js
add
aas
pop
and
jo
adc
sub
shrb
loop
mov
fidivrl
inc
mulb
sbb
mov
ja
ret
add
push
pop
stos
xor
push
xchg
push
mov
sub
add
testb
push
dec
and
in
or
fdivrs
out
jecxz
mov
mov
das
push
xor
mov
rcrl
movl
xlat
sti
gs
pop
outsb
pop
je
and
orb
or
jb,pt
sub
test
clc
das
mov
jae
daa
dec
jae
out
mov
cli
and
rorl
mov
out
pop
cmpsb
pushf
movsb
popaw
mov
lds
xchg
push
sbb
addr16
enter
xor
repnz
add
lcall
repnz
xchg
cmp
push
imul
pop
push
push
mov
or
icebp
sbb
xchg
test
cmp
dec
mov
cmp
inc
xchg
fisubl
inc
addl
jge
adc
scas
test
push
dec
hlt
jne
jmp
dec
jne
fs
sub
and
cmp
pop
fs
jae
test
popa
jmp
push
aam
nop
push
fildll
repnz
cmp
divl
jecxz
xlat
mov
jo
stc
lock
lds
popf
roll
cmpsb
jge
popf
cmp
cmp
add
inc
xchg
xor
dec
bound
aad
push
icebp
mov
pushf
clc
aam
xor
sbb
pop
push
insl
clc
hlt
cli
add
aas
test
push
addr16
clc
push
mov
inc
dec
dec
mov
nop
fnstsw
and
mov
jns
and
inc
mov
ljmp
adc
inc
cmp
inc
insb
or
into
add
ds
je
call
dec
scas
add
push
adc
mov
cmp
mov
js
jl
rorb
cmpsl
jno
loop
aad
cmc
cwtl
push
mov
outsb
jecxz
dec
cmpsl
imul
jmp
cmp
out
sbb
nop
jns
push
cmp
inc
in
addr16
jmp
cmp
inc
icebp
add
xor
mov
mov
adcb
xor
mov
insb
iret
sbb
fcom
stos
pop
cmp
xor
sarb
popf
hlt
cmp
daa
mov
inc
nop
add
lock
test
cwtl
mov
jmp
lret
es
out
cmp
and
xchg
jnp
jmp
rcll
mov
pop
cmc
sub
and
jo
movsl
ret
out
inc
pop
pop
popf
sbb
mov
test
xchg
sbb
jbe
push
fwait
ss
lcall
lds
adc
add
scas
pop
mov
push
fcmovb
daa
and
xchg
mov
sub
shll
add
inc
or
push
lds
popf
add
ret
jmp
jecxz
pop
lock
int3
inc
add
pop
mov
lcall
pop
push
pusha
sbb
and
sub
fld
jmp
into
fnsave
jb
pop
fnstenv
xchg
data16
push
into
jbe
pusha
dec
js
xchg
in
adc
adc
mov
movsb
lock
sbb
xor
sbb
test
jl,pt
adc
mov
mov
push
adc
and
mov
xlat
mov
fisubl
ljmp
push
sbb
icebp
inc
push
pusha
adc
testb
mov
sbb
les
xchg
clc
pop
adc
out
ja
cli
inc
lods
out
and
lods
call
loop
mov
xor
pushf
insl
mov
addl
and
scas
and
or
out
int
aad
pop
ja
sbb
jle
mov
shl
sti
or
xor
testb
xor
scas
shll
and
cltd
inc
mov
aaa
cs
fildl
sbb
sbb
ret
xchg
xchg
outsb
jl
sbb
aas
cmp
or
push
push
imul
outsl
mov
out
push
push
push
fisubrl
movsb
rorl
and
insb
mov
cmp
movsb
repnz
inc
outsl
mov
adc
sub
inc
mov
push
push
rcr
repnz
pop
cmp
cmpb
movsb
test
jle
in
sar
fsubr
mov
adc
jp
jb
leave
cmpl
xchg
add
hlt
xor
xor
cmp
sub
jle
daa
clc
out
lds
mov
clc
mov
add
movsl
inc
orb
dec
mov
cmp
je
mov
arpl
int3
push
sub
cmpsb
push
xchg
lds
ret
jecxz
ret
push
hlt
sbb
sub
hlt
sub
mov
fbstp
ds
and
jmp
mov
out
mov
out
rcrl
insb
mov
mov
test
fxch
and
jl
gs
mov
push
jmp
je
cli
inc
andnps
stc
mov
das
cltd
adc
insl
adc
sar
jge
mov
fiadds
mov
pop
pusha
dec
fiadds
iretw
lcall
nop
mov
aad
loop
mov
rcl
shrb
out
or
sub
sub
mov
pop
lods
push
pop
or
or
dec
shr
push
stos
jge
daa
in
mov
idivl
insb
in
push
jb
bound
ss
in
xlat
push
sbb
pusha
mov
sti
imul
scas
inc
push
cmp
mov
sub
imul
scas
lcall
adc
insl
pop
or
mov
sbb
or
xchg
and
sbb
inc
mov
bswap
adc
cltd
repnz
jecxz
shlb
inc
jge
insl
jno
movb
xchg
call
shll
push
mov
into
sbb
fisttpl
fwait
ret
out
jg
mov
cmp
jns
mull
inc
pop
adcl
and
out
pop
xchg
hlt
xchg
pushf
xor
xor
insb
jno
sbbb
subl
push
xchg
negl
jnp
push
sbb
bound
push
fsubl
popf
lret
pop
orb
arpl
shll
push
jl
in
jmp
movsb
outsl
sbb
jne
fwait
push
not
mov
mov
repz
push
pop
pop
fisttps
adc
rcrb
jno
dec
iret
inc
mov
idivl
imul
sbbl
fnstenv
ljmp
mov
in
mov
aam
sbb
adc
call
inc
popl
pop
mov
and
shrl
fwait
into
or
mov
pop
jp
loopne
sub
and
sub
int
out
loop
sarl
in
call
push
repz
insl
jo
cmp
dec
orb
mov
xlat
movsb
pushf
adc
xchg
mov
jae
hlt
popa
cmpsl
inc
adc
js
fnsave
in
loop
xlat
je
fwait
adc
pop
jno
and
filds
pop
pop
sbb
ret
xor
adc
test
cltd
je
clc
push
inc
popl
addr16
cmpsl
fdivrs
mov
pushf
jb
ja
fidivl
inc
push
iret
gs
push
jb
jnp
jbe
scas
cltd
jecxz
movb
push
jg
test
loop
dec
ret
xchg
jb
xchg
fmuls
cli
mov
xlat
or
sbb
push
xchg
out
outsl
pusha
sub
mov
mov
push
xchg
popf
xchg
xchg
dec
insl
std
insb
jae
jno
adc
mov
stos
mov
mov
daa
pop
movsl
add
mov
ror
or
dec
fldenv
inc
jnp
scas
loope
in
push
or
lock
push
or
push
mov
insb
lock
rcpps
mov
or
bound
push
push
mov
xor
int
or
ja
xor
xchg
add
or
out
std
js
xchg
push
loop
mov
lcall
push
push
sbb
sbb
cmp
cmp
push
stos
inc
xchg
loopne
xchg
or
out
ljmp
sub
add
in
in
and
dec
loop
pop
inc
jmp
addb
push
dec
cmp
out
mov
repnz
push
adc
pop
ret
ja
loop
sbb
cli
stos
icebp
call
sbb
loope
loop
xchg
xor
imull
inc
xchg
clc
in
jl
sub
push
xchg
fisttps
pop
repnz
inc
cmpsb
psrlw
or
arpl
insl
orl
aaa
into
pop
popa
popa
test
jbe
insb
push
daa
or
popa
push
fmul
jno
pop
sbb
pop
pop
inc
sarb
cmc
into
sti
cwtl
shl
xchg
pop
clc
enter
dec
mov
orl
je
lret
xor
cld
xor
flds
dec
mov
inc
js
stc
leave
mov
imull
pop
xchg
mov
icebp
lods
lock
leave
int
aas
negl
add
int3
lea
les
ljmp
ret
ja
shrb
incl
mov
pop
lods
pop
lret
push
mov
add
push
xor
xorl
jmp
dec
out
addb
jne
pop
jno
push
inc
mov
mov
inc
cvtps2pi
inc
stos
sti
mov
jmp
xlat
or
push
jb
pop
shll
sub
ds
mov
lahf
fistpl
loopne
or
shll
sti
and
cmp
cmpsl
outsb
dec
sub
mov
cmp
push
adc
or
movsb
dec
outsb
sub
cs
push
pusha
jg
stos
loopne
das
push
out
and
or
adc
xor
adc
xor
and
lods
jns
jb
es
xchg
int
loopne
fyl2xp1
test
sub
push
fidivrl
xchg
mov
mov
dec
fdivrs
daa
rolb
mov
imul
fisttps
and
cmpsb
out
pop
jnp
mov
sbbb
icebp
popf
mov
pushf
cmp
aas
xor
inc
or
xor
out
leave
shl
js
jnp
movsb
imul
pop
repz
lret
stos
jg
jmp
push
push
push
int3
mov
pop
fwait
jg
lds
repz
add
cmc
mov
mov
xlat
lods
sar
js
cmpsb
mov
nop
pop
out
or
xchg
adc
pop
out
fsts
dec
add
in
cmp
push
pop
jb
ss
jns
or
fnstcw
pop
mov
fs
in
pop
dec
and
out
cmp
push
cmp
xor
icebp
cmpsb
xor
clc
add
sti
arpl
in
cltd
mov
int
xchg
fisubs
ficoml
mov
test
cmp
adc
clc
sar
ret
cmpsl
mov
leave
sahf
je
shll
leave
and
inc
repnz
jb
mov
and
cmp
xchg
mov
aad
inc
mov
mov
and
into
add
pop
or
sub
sbb
ret
insl
sbb
jb
xlat
fldcw
lea
lcall
shlb
and
inc
jo
leave
ds
lcall
adc
jns
xor
pop
mov
aas
sbb
ss
repz
xchg
sbbb
xor
push
in
mov
sub
fcompl
xchg
ljmp
dec
aas
cwtl
aad
xchg
pop
add
jne
xor
mov
dec
arpl
push
sar
mov
push
fs
aad
mov
in
fwait
nop
pop
int
rorb
sub
lahf
push
repz
inc
movsl
xlat
cmpsb
jle
pop
push
push
jno
jne
out
mov
lods
mov
dec
sbb
fs
flds
es
sbb
shrl
loope
jnp
xor
gs
add
ret
mov
lds
rclb
ret
loop
push
inc
mov
shl
mov
insl
das
stos
pop
test
hlt
mov
fs
andb
in
inc
sub
mov
outsl
cmc
daa
xor
cmp
test
or
xorl
xchg
rcrl
sub
hlt
and
loopne
ret
mov
jb
cmp
or
aas
dec
pop
call
xor
and
inc
cltd
mov
jne
inc
or
negl
stos
jne
mov
inc
sbb
cmpsb
mov
cmp
jno
popa
lds
cs
test
lea
mov
mov
lea
mov
xchg
cmp
push
pop
outsb
or
xor
xchg
sti
popa
xchg
xor
mov
aas
fsubrp
stos
mov
jmp
ret
adc
scas
push
cli
pop
sbb
insl
and
shlb
jle
mov
or
inc
or
mov
sub
and
mov
xchg
jmp
js,pt
ret
imul
sub
sbbb
std
stos
jge
out
push
xchg
cmp
mull
mov
lock
pop
inc
push
xor
in
les
lods
cld
sub
call
mov
sub
inc
and
push
xor
and
inc
push
dec
pop
jbe
inc
adc
cld
xor
mov
sub
cld
into
loop
scas
mov
mov
sbbl
mov
lret
rorb
andb
je
ljmp
push
sbb
add
movsl
pop
sbb
sti
fwait
movsb
xlat
outsl
mov
sbb
jns
lea
jg
repnz
mov
or
out
cwtl
fcomp
fwait
js
sbb
mov
cmpsb
pushf
sarb
mov
rcr
sub
cld
out
adc
int3
mov
aam
xor
mov
mov
imul
cwtl
push
cmp
test
mov
out
outsb
movsl
lret
add
jnp
repnz
mov
jg
mov
andb
testb
inc
aad
sub
ja
pop
push
cmpsl
pop
cmpsb
mov
xor
stos
out
adc
fsubrs
sub
int3
out
xor
jbe
xlat
adc
adc
cwtl
nop
std
lret
cmp
rorb
les
addr16
loopne
mov
aas
sbb
imul
cmp
xchg
nop
and
insb
mov
dec
stos
add
je
fiaddl
push
inc
gs
inc
mov
mov
cmpsb
rol
sub
xchg
jns
out
add
ds
pop
lock
arpl
xchg
xor
sbb
dec
mov
mov
dec
sub
and
int
loope
call
arpl
or
cli
shll
pop
adc
sub
adc
dec
inc
aaa
sarb
xchg
loope
lods
mov
out
push
sub
mov
and
mov
pop
orb
test
in
dec
ret
int3
ja
fldenv
lret
test
add
aaa
push
push
and
loopne
sarl
mov
adc
add
or
dec
pop
data16
push
mov
ja
push
comiss
or
xor
test
inc
mov
dec
jle
data16
add
mov
mov
dec
sub
xchg
push
mov
pushf
iret
jp
or
add
lea
aaa
adc
cmp
xchg
mov
jecxz
push
scas
mov
push
orb
xchg
int
in
mov
xchg
les
icebp
cmp
mov
jecxz
ret
push
dec
dec
iret
lods
in
pop
jg
enter
fidivrs
jno
insl
and
xchg
out
mov
push
enter
mov
loopne
call
notb
movsb
mov
lahf
ficompl
popf
popl
je
add
sbb
sub
jmp
movsb
mov
fs
les
xchg
mov
add
sub
aam
and
pop
popf
mov
or
mov
aam
pop
orl
ror
pop
push
sub
nop
xor
jg
pop
gs
mov
sub
pop
je
push
push
xchg
xor
push
cmp
add
jno
mov
mov
sub
push
fdivp
jecxz
add
xchg
lods
inc
js
or
outsl
inc
sbb
inc
or
int
fcompl
pop
dec
xchg
add
inc
adc
inc
push
test
cmp
cli
xor
mov
mov
xchg
pavgw
divb
imulb
icebp
mov
popa
mov
leave
aad
enter
jecxz
inc
popf
decl
jmp
jecxz
bound
pushf
out
std
fwait
popf
mov
out
daa
aas
or
std
mov
cmp
xor
cs
dec
xor
aaa
cmpsl
fs
repz
adc
pop
add
gs
aam
jl
inc
fcmovu
incl
mov
fsubrs
hlt
xor
in
xchg
mov
int3
pop
lea
sbb
xchg
pop
lea
insl
push
mov
xchg
inc
dec
push
pushl
sbb
ret
mov
jno
inc
xor
shl
xor
dec
nop
cli
xchg
arpl
push
int3
into
cmp
push
add
mov
movsl
mov
test
or
aad
sbb
pusha
add
cli
jge
jg
dec
push
les
loopne
in
pop
lods
pop
inc
fcoms
ror
test
mov
cmc
cmc
fcmovu
push
mov
ret
dec
mov
xchg
std
pop
push
daa
xor
fimull
lds
in
jmp
shrl
mov
xchg
push
addr16
jl
pop
clc
cmp
std
jl
jns
into
sbb
or
push
sbb
pop
pop
dec
mov
mov
sbb
pop
inc
jg
add
inc
lock
inc
pusha
hlt
sbb
jge
mov
inc
movsl
ljmp
dec
add
shr
xchg
mov
icebp
cmp
mov
adc
xor
hlt
jbe
es
mov
lahf
in
adc
mov
sbb
repz
lret
cmp
mov
cmp
jno
dec
push
jae
fdivrs
lods
jae
add
push
cmp
push
or
pusha
lret
sub
dec
push
jb
push
movsb
test
in
cmp
xor
jg
cmp
jnp
mov
lods
enter
out
inc
sbb
enter
test
call
addr16
sub
or
mov
int3
pop
pop
jns
and
sub
mov
shl
test
movsl
in
arpl
gs
cmp
out
loopne
add
ss
adc
xchg
ja
or
sbbl
dec
mov
mov
in
dec
shll
cmp
push
enter
cmp
adc
pop
push
mov
addr16
ja
xor
lock
pusha
sub
fdivp
jne
adc
adc
xor
ljmp
gs
cli
mov
mov
sahf
pop
mov
ret
xor
pop
pop
xchg
nop
pop
into
push
jge
add
pop
mov
es
lret
mov
cmpsb
jp
gs
cmc
leave
arpl
push
xchg
test
cwtl
pop
inc
dec
xlat
push
stos
arpl
fisubs
mov
xor
or
std
pop
and
cmc
sbb
sub
xchg
sub
mov
xor
loope
xchg
inc
push
inc
movsl
mov
push
shl
xchg
sub
pop
xchg
xor
cld
push
push
push
shrb
mov
imulb
cmp
nop
ja
cmp
scas
lret
dec
xchg
xchg
lcall
and
imul
push
popf
scas
or
into
mov
mov
and
mov
ds
and
pop
mov
xlat
ljmp
xor
push
adc
xchg
dec
jno
xchg
aam
jp
pop
mov
pop
adc
jae
dec
call
jmp
xchg
jne
imul
mov
dec
dec
mov
mov
pop
and
jp
decb
xor
ret
repz
call
add
es
addr16
mov
xor
jg
popa
dec
or
mov
ljmp
jne
aad
mov
notb
fadds
push
lahf
sahf
fldl
dec
add
or
loope
sbb
insl
inc
push
mov
call
add
gs
rcr
pop
dec
mov
pusha
es
mov
outsb
cmpsb
sbb
dec
fistps
iret
rcrl
ret
inc
ret
sub
cwtl
pop
movsl
lock
insb
jg
std
mov
test
push
inc
sub
scas
cmp
xchg
sahf
dec
xchg
mov
sub
pop
rorb
jne
in
sahf
lock
adc
add
and
out
adc
in
test
sub
inc
and
sub
xorb
pop
dec
lahf
jns
stos
adc
lret
sbb
mov
mov
rorl
inc
inc
cmc
mov
cmp
jge
out
into
sbb
mov
test
inc
xchg
sti
add
add
subb
mov
mov
inc
lahf
dec
mov
ja
leave
imul
pand
jmp
sub
enter
movb
jecxz
jo
in
pushf
popf
nop
orl
leave
sbb
shr
sub
mov
xchg
xchg
dec
xchg
imulb
je
mov
inc
in
rorb
mov
push
sub
ret
adcb
repnz
rclb
push
xchg
data16
scas
cmp
sarb
push
out
outsb
icebp
xlat
int
push
adc
add
mov
jns
sbb
xchg
lret
lods
add
mov
shrd
sub
sbb
pusha
test
filds
cmp
mov
arpl
jo
mov
loop
cmpsb
daa
rcll
ret
aas
sub
negl
jbe
pop
daa
dec
notl
mov
pushf
test
mov
jle
jns
pusha
jle
sbb
pop
lock
push
pop
das
xor
push
push
jp
test
out
pop
xchg
pop
adc
fimull
cmp
push
cmp
add
sub
inc
sti
sub
fldenv
shlb
lods
aam
adc
dec
and
ljmp
sbb
pushf
mov
pushf
sbb
jno
lret
imul
mov
and
and
adc
and
int3
je
pop
push
jbe
ds
pop
call
cmp
cmp
and
sub
or
stos
das
jnp
dec
mov
dec
loop
andb
mov
inc
clc
sbb
call
notb
cli
jp
xchg
sbb
setp
add
jecxz
ret
add
jno
fcoms
push
sub
dec
jle
sbb
imul
in
int
sbb
iret
cmc
inc
std
aad
lock
pop
lahf
sahf
adc
popf
pop
inc
movsl
jnp
ret
les
sbb
incl
outsl
sbb
jl
pop
test
push
and
das
lock
mov
or
xor
addr16
inc
popl
and
adc
dec
push
in
pop
shll
adc
shll
mov
push
push
jns
push
call
shlb
fnstenv
sub
out
or
pop
das
inc
imul
pop
mov
cmp
aam
shr
sbb
fs
pop
inc
rcl
sbb
cmp
mov
mov
xchg
sub
sbb
mov
add
add
pop
out
je
hlt
jg
pop
out
jmp
mov
mov
cmc
shll
out
cmpsb
cld
lret
xchg
xchg
lret
pop
lods
insb
test
mov
loop
xor
ds
inc
dec
and
cmp
and
fpatan
push
sub
jb
jecxz
jb
lods
outsl
mov
sbb
jmp
pop
call
jb
mov
sahf
sub
imul
sub
push
iret
adcl
outsl
aaa
and
mov
sub
into
pop
call
je,pn
stos
arpl
add
sbb
adc
mov
je
mov
sub
outsb
aam
add
or
popa
in
shl
outsl
push
mov
aas
or
popf
xchg
popa
pop
jl
rolb
or
and
es
jle
clc
aas
adc
jns
stos
xlat
mov
dec
shrl
frstor
mov
xchg
repz
cwtl
add
or
iret
test
stos
cmp
sub
jge
cmp
inc
cli
cwtl
into
mov
mov
and
aaa
mov
xlat
push
xchg
rcr
fcoml
leave
pop
cmp
aad
sub
and
inc
pusha
xor
and
inc
cmp
or
push
add
inc
mov
pop
xchg
lcall
insb
cmp
lock
sub
or
push
inc
outsb
xor
inc
bound
lahf
std
loopne
inc
je
hlt
inc
pop
dec
jmp
mov
mov
pop
dec
mov
inc
enter
xor
popf
mov
fimuls
cmp
jo
call
fsubrs
sbb
push
jno
hlt
into
adc
clc
cmp
xchg
iret
and
decl
test
add
repnz
stc
mov
adc
pop
movsl
incl
js
inc
mov
add
es
push
jmp
mov
jae
into
cmp
shll
xchg
punpcklbw
pusha
popa
pusha
in
pushf
push
mov
dec
xor
lea
adc
and
and
into
pop
idivl
daa
pop
out
inc
adc
fistps
adc
pop
xchg
pop
mov
imul
adc
jne
into
sbb
lahf
jg
mov
jecxz
in
xor
mov
gs
cltd
mov
dec
pusha
out
shrb
lea
popa
mov
icebp
and
inc
sbbb
jae
mov
dec
mov
jb
test
xor
dec
call
inc
push
pusha
mov
int3
pop
pop
fnsave
xchg
out
pop
mov
and
mov
or
and
rcll
xchg
mov
and
sbb
iret
out
and
xchg
incl
inc
mov
fiadds
test
je
pop
pop
or
lret
jne
je
sbb
sub
lahf
out
add
cmp
imul
fucomip
cmp
mov
mov
dec
adc
lea
mov
jmp
movsl
lods
push
pushf
add
repnz
in
adc
sub
inc
nop
sahf
or
mov
jle
xchg
lret
mov
push
or
jns
sub
sbb
fiadds
in
aaa
mov
inc
and
jecxz
adc
pusha
add
sbb
inc
mov
arpl
pop
clc
cmp
scas
frstor
and
cmpsb
sti
fmuls
ret
stos
cmc
movsb
add
xchg
add
inc
sub
leave
int3
xchg
clc
dec
mov
loop
xchg
lcall
aad
add
jae
push
jae
imul
inc
sbb
rorl
sub
fisubs
popf
leave
stos
and
inc
jecxz
add
and
cmc
mov
pop
push
xchg
in
stos
fsts
fcmovne
pop
shlb
mov
mov
jns
push
sub
pop
sar
xchg
adc
sti
enter
mov
inc
mov
dec
cld
repnz
adc
pop
je
jnp
mov
jbe
xchg
mov
iret
xor
sahf
sub
mov
cli
popf
dec
mov
fcompl
push
push
mov
mov
loop
gs
mov
add
fstp
fildl
xchg
test
loopne
loopne
dec
and
test
es
adc
aad
dec
pop
inc
dec
or
push
pop
test
pop
dec
xchg
adc
out
dec
xor
lock
ds
cmpsb
add
in
subl
shl
jb
ljmp
in
inc
aad
mov
popa
xor
dec
mov
dec
popf
pop
leave
test
sbb
stos
icebp
out
jb
add
push
scas
mov
xchg
mov
inc
push
xchg
jo
pop
pop
push
cmp
and
dec
cld
es
inc
stos
xchg
mov
psllw
adcb
and
dec
cwtl
mov
ja
movsl
cltd
or
or
in
das
pop
sub
adc
ja
xor
xor
ret
or
push
negb
ret
cmp
and
dec
popf
adc
pop
dec
popf
push
jns
std
adc
roll
les
mov
mov
push
flds
jnp
outsl
fisttpll
adc
jecxz
repnz
add
or
push
xor
stc
stc
or
adc
test
jns
jnp
mov
fcoml
dec
das
mov
sub
jno
loope
fwait
push
ds
shrl
push
sbb
ret
sub
or
dec
out
icebp
lock
int
call
push
jp
in
inc
inc
cmp
ficoml
sahf
popf
add
insb
loope
shll
outsl
enter
push
mov
jmp
pop
gs
or
cmp
push
push
pop
jg
lahf
es
addl
or
jno
mov
std
ds
lcall
out
xor
pusha
ret
les
push
filds
dec
lret
sarl
mov
mov
out
stc
aas
subl
shrl
cmc
repz
data16
imul
jg
ds
push
sub
xchg
sub
stc
das
add
in
xchg
shrb
cmpsl
adcb
pop
push
adc
adc
xor
dec
fs
icebp
jae
xchg
push
aam
mov
and
dec
mov
popf
cmp
push
gs
es
push
or
xchg
mov
rcl
mov
adcl
andb
sbb
idivb
adc
test
mov
lea
cli
adc
jne
lea
in
mov
adc
xchg
lds
jb
jg
pop
cli
mov
jns
fcmovb
jae
pusha
adc
ljmp
pop
or
jg
out
mov
cmpsl
shll
jmp
pop
aaa
test
fs
pusha
gs
mov
ret
jecxz
ja
or
test
xchg
fistps
adc
cmp
xor
mov
xchg
cld
sbb
or
out
xor
clc
mov
mov
int3
push
dec
jmp
push
or
fwait
pop
in
sub
cmp
addr16
adc
les
pop
sbb
lret
movsb
push
cmp
arpl
cmp
push
mov
in
sti
sbb
sarb
fwait
mov
hlt
test
pusha
mov
pop
add
lock
or
stos
addr16
xchg
fstp
add
mov
test
sarl
test
addr16
insl
sbb
dec
scas
fcmovnu
xor
arpl
nop
ror
mov
cld
inc
addr16
adc
and
adc
push
loop
mov
dec
popf
fs
add
andps
jno
inc
pop
cmp
ljmp
bound
jae
insl
adcb
jne
rorb
rcl
mov
jno
mov
call
movsb
and
mov
jmp
jbe
lahf
fadds
jecxz
push
xchg
xchg
test
pop
fcomi
pop
int
fucom
fbstp
in
cmp
pushf
xor
out
jns
sarb
push
xor
ds
test
add
fxch
jecxz
sti
aam
imul
sub
and
sarl
adc
push
leave
icebp
dec
icebp
xchg
repz
jmp
xchg
sub
mov
clc
mov
subb
and
add
loop
rcl
xchg
add
pop
fdivrl
or
stc
jl
mov
pop
das
aas
es
and
scas
mov
leave
fldln2
mov
lea
or
adc
mov
jp
pop
stos
pop
push
xchg
adc
xchg
nop
outsb
lods
data16
adc
xor
dec
jo
mov
leave
dec
test
nop
enter
jno
das
inc
les
xchg
scas
xlat
add
sahf
adc
fisttps
mov
loop
sbb
cmpsb
mov
mov
insb
lahf
add
pop
sbbl
pop
sub
mov
push
push
or
lds
sbb
clc
test
sti
cmp
dec
mov
push
xchg
dec
in
sub
in
xor
cld
mov
inc
fists
push
fistl
scas
cmp
movsl
jbe
jo
pop
push
pusha
or
adcl
xchg
mov
sbb
sub
fisttps
or
or
or
xlat
cmp
add
mov
mov
in
push
call
movsb
movsl
fwait
sti
in
outsl
inc
int3
xlat
sbb
mov
pop
xchg
pop
jge
in
dec
mov
into
sahf
and
fdivrs
pop
inc
xor
add
xor
and
xchg
bound
out
push
adc
insb
and
xchg
or
cmp
pop
sub
mov
imul
movsl
and
notb
cld
cmpsl
mov
xor
lahf
push
dec
cmpsb
test
ret
mov
sub
adc
adc
dec
scas
dec
push
cwtl
inc
sbb
jg
dec
jae
in
into
push
dec
pushf
xor
imul
inc
jmp
mov
mov
into
out
and
cmp
push
and
roll
push
pop
insb
popa
out
and
bound
fiadds
pop
rcll
shl
into
push
mov
jmp
cmp
repz
gs
jg
mov
daa
ret
mov
out
out
repz
mov
es
imul
mov
mov
pop
dec
jg
test
mov
lcall
mov
andl
pop
mov
dec
repz
out
push
and
fstl
addr16
scas
pop
push
out
xchg
imul
daa
loop
jo
std
aaa
in
pop
out
jmp
loopne
fdivl
stos
popf
pusha
cmp
in
test
es
inc
sbb
loop
pop
inc
std
xchg
xchg
es
xchg
xchg
mov
mov
popa
dec
ss
lret
pop
mov
adc
outsb
imul
mov
inc
int
dec
xor
pusha
adc
xchg
mov
in
fxch
addb
pop
int
mov
arpl
je
sub
adc
xor
adc
jne
pop
adc
mov
dec
xchg
xchg
into
xchg
push
mov
push
pushf
jmp
out
lock
pop
adc
xlat
pop
xchg
mov
clc
nop
neg
enter
xorb
and
jecxz
jae
fmuls
popf
push
dec
imul
mov
in
mov
mov
mov
test
mov
mov
push
cltd
mov
xchg
fldt
out
jge
inc
insb
and
loope
lds
test
out
cmp
and
xlat
sbb
push
orb
imul
das
mov
mov
and
sbb
pop
xchg
adc
sbb
mov
cmpsb
xor
jb
in
jl
pop
dec
imul
lods
pusha
scas
add
push
push
aaa
ror
loopne
xchg
mov
jae
xchg
pop
mov
inc
cmpb
aam
sbb
jb
mov
xor
pusha
mov
imul
stc
add
dec
jno
adc
test
and
idivb
xor
flds
jne
add
aas
add
mov
and
adc
dec
or
mov
insb
xchg
nop
cmpsl
lea
mov
ja
stc
or
cmpsl
mov
or
loope
icebp
pop
mov
leave
xchg
pop
fildll
jno
xchg
iret
mov
sahf
adc
mov
mov
fcmovne
pop
lahf
sbb
push
lds
sub
mov
lcall
scas
pop
insb
sti
xchg
mov
bound
div
xchg
push
mov
dec
xor
imull
pop
lret
out
mov
inc
scas
push
mov
in
fs
sti
mov
dec
dec
scas
jl
lret
imul
push
inc
inc
mov
mov
fldcw
into
jp
or
data16
sub
scas
test
rcrl
pusha
fadds
addl
sbb
popa
or
insl
rolb
xor
les
pop
cmp
sbb
xchg
adc
adc
inc
gs
sbb
scas
adc
pop
outsb
adc
test
mov
sbb
test
add
aaa
mov
shl
lods
dec
sahf
mov
fisttpll
imul
push
jge
cld
outsb
inc
xchg
lret
fildl
inc
les
shrl
xchg
leave
mov
fdivs
arpl
fists
jbe
push
rcrl
xchg
rorb
out
push
ror
sbb
cld
jne
push
andb
in
rorb
movsb
hlt
idiv
mov
jae
pop
or
mov
lret
mov
add
mov
scas
and
shrb
in
cmp
or
inc
inc
out
mov
xor
adc
into
outsb
add
fistpl
sub
lea
and
and
jp
adc
ret
adc
mov
icebp
add
mov
lea
imul
pop
in
pop
jbe
sahf
fldt
xlat
in
clc
fs
shll
jl
outsl
and
subb
push
pop
cmp
add
inc
loop
xchg
jl
cmpsl
or
and
or
jge
in
loope
popa
or
sbbb
xor
mov
test
xor
dec
add
in
iret
outsb
mov
fcompl
pop
cmpsb
leave
stos
rolb
dec
out
sub
lods
fcmovu
ret
xchg
pop
adc
fsubr
out
mov
outsl
hlt
aaa
loop
sub
loop
cmc
sub
ljmp
push
jl
jle
shl
xor
lea
xchg
inc
dec
sub
cld
sbb
and
dec
test
and
sti
push
popa
and
in
ret
sub
jl
popf
data16
push
aaa
jbe
pop
adc
jmp
mov
add
adc
inc
shrb
pop
leave
test
add
jne
enter
in
pushf
mov
sub
mov
daa
push
lods
adc
adc
lret
inc
xor
dec
cmpb
push
lds
shrb
mov
inc
mov
dec
aad
fsubrp
das
stos
fidivrs
data16
je,pt
adc
mov
and
inc
insl
insl
fsubrl
sbb
outsl
cmp
push
add
sub
rcrl
js
out
aaa
pop
sbb
std
pop
add
sub
insb
cmp
dec
jle
aaa
aaa
or
push
jecxz
sub
mov
ja
sahf
insl
sbb
inc
ret
push
adc
fdivl
cmp
mov
push
enter
cmp
xor
dec
jmp
add
jnp
stos
jbe
je
xchg
pop
xchg
pop
dec
sub
xchg
lahf
outsl
jae
mov
mov
xor
cmp
xor
roll
mov
mov
jl
sub
dec
dec
mov
insl
and
inc
adc
mov
in
mull
dec
xor
or
out
cmc
and
lcall
aad
mov
nop
cld
cwtl
xchg
mov
stc
jno
enter
enter
pop
sqrtps
pushf
popa
subl
sub
pushf
cli
push
push
and
cltd
dec
mov
mov
ds
repz
jns
or
or
call
mov
stos
pop
sbb
jecxz
sub
lahf
inc
mov
stos
mov
test
adc
stos
lret
jg
pop
sar
adc
out
inc
cmc
mov
outsl
ret
jb
outsb
add
inc
fcompl
jns
dec
mov
cld
push
dec
mov
int3
mov
or
push
nop
mov
sbb
mov
sub
sub
hlt
in
or
sti
lods
sbb
xor
xor
fs
cmp
je
fwait
mov
ret
add
leave
sbb
ret
mov
and
sbb
push
sub
dec
sub
or
rorl
les
inc
cmp
pop
ss
jmp
aam
push
insl
and
loope
push
mov
shll
inc
and
push
add
push
xchg
cmp
out
test
fwait
sbb
loop
push
or
mov
cmp
hlt
mov
and
addr16
mov
stc
pushw
mov
adc
popf
jp
fstpl
lahf
push
ss
ds
jge
rorl
or
sub
dec
or
jno
or
imul
les
lahf
xchg
sahf
sbb
mov
iret
cmp
xor
enter
mov
mov
xor
mov
pop
mov
sbb
scas
repz
ljmp
pop
pushf
jb
iret
bnd
lock
lcall
ret
inc
addl
mov
or
cmp
mov
xor
mov
aaa
and
ret
les
jp
dec
cmp
pusha
mov
xor
inc
push
adc
enter
jmp
cmp
jnp
mov
test
mov
push
ret
leave
inc
stos
hlt
xor
sub
pop
lock
aas
mov
fildl
push
clc
test
sub
mov
or
pop
shlb
mov
in
fnstsw
insl
xchg
popa
shlb
xchg
das
loope
sbb
testb
push
xchg
test
add
imul
aaa
inc
add
ror
add
in
fidivs
push
xchg
sti
xorl
cmp
popa
bound
imul
inc
out
mov
add
xchg
xor
rcr
xor
or
movsl
cmpsl
lock
jnp
es
add
mov
lds
mov
and
xor
out
lcall
cwtl
lea
ret
rorb
repz
and
xchg
sub
lret
aad
jb
cmp
mov
dec
test
jns
jle
and
data16
jnp
cli
inc
lahf
roll
and
addr16
inc
xchg
push
andl
aas
pusha
test
xor
mov
in
xor
stc
insb
or
pushf
cmc
mov
fwait
js
dec
jle
pushf
in
mov
popa
subb
stos
inc
adc
scas
mov
mov
push
pop
dec
lret
push
dec
push
aaa
cmp
rcll
and
insl
dec
pop
jge
mov
jae
icebp
ja
push
and
pop
scas
or
and
clc
into
cmp
inc
jnp
fs
faddp
loopne
dec
jp
in
fwait
and
movsl
fbld
aam
out
cli
inc
xchg
mov
mov
mov
push
pop
out
faddp
inc
imull
xor
fwait
and
adc
jbe
cmp
dec
xchg
pop
orb
fdivrp
mov
cmc
call
lods
push
mov
stos
pusha
add
je
mov
xchg
mov
scas
mov
mov
fsubp
aas
mov
nop
in
cmp
and
outsb
or
xchg
pop
xor
int
in
fistpll
inc
pop
sub
rorl
sbb
loopne
sbbl
xor
je
sbb
fadd
dec
or
nop
jmp
sbb
pop
ret
dec
loop
in
lds
push
mov
mov
mov
cmpsb
or
pop
dec
dec
add
jmp
mov
mov
lds
out
repnz
pusha
jbe
stos
adc
mov
jbe
mov
test
aad
xor
test
ja
mov
adc
and
cld
mov
pop
push
lret
xor
addr16
mov
adc
loop
sub
push
roll
dec
sbb
sarl
jl
push
jnp
test
nopl
jne
adc
bound
push
sbb
xor
jne
insb
mov
test
fldcw
and
lds
mov
mov
aaa
pop
sub
pop
repz
negb
roll
mov
sti
pop
imul
ljmp
movsl
inc
outsb
or
out
mov
inc
xchg
xor
nop
and
sahf
movsl
mov
fldcw
or
jge
mov
lret
cmp
sub
cmp
inc
push
stos
cmp
in
mov
mov
push
sbb
mov
push
jnp
mov
jbe
pop
adc
push
jb
popa
fiadds
cs
and
outsb
lret
shlb
rolb
jns
sub
lods
sti
decl
add
add
cwtl
test
cmp
xorb
dec
push
stc
hlt
lods
inc
sub
shlb
dec
pusha
cmc
add
int
sarb
mov
xor
mov
sub
pop
mov
or
loopne
cli
push
xchg
jns
adc
sbb
sbb
or
xor
pop
push
pop
mov
int
adc
int
xchg
jnp
cmc
and
pop
cmpsb
cmpsl
or
xchg
movsb
pop
out
dec
fistl
jbe
leave
cmp
sbb
add
mov
pusha
test
out
fadd
sbb
jmp
std
or
das
shlb
ss
push
mov
xchg
lds
lret
pop
repz
stc
inc
adc
cs
sub
jp
mov
loope
pop
into
jnp
std
xchg
into
mov
loope
in
and
and
insl
mov
inc
mov
call
int3
insl
mov
icebp
sub
sti
adc
push
add
imul
add
fidivs
scas
push
icebp
mov
inc
test
or
stos
sub
jecxz
or
test
das
les
fwait
push
hlt
inc
dec
sub
jp
xchg
xchg
or
scas
testl
lahf
or
ret
in
in
xor
cmp
loope
je
pop
xchg
test
add
es
repz
test
sub
push
call
dec
mov
push
dec
out
addr16
movsl
pop
movb
push
push
mov
stc
xchg
dec
push
or
pushf
sbb
movsb
mov
shll
pop
and
or
lock
add
ds
inc
cmp
cmp
jg
push
pop
jle
fistl
dec
dec
dec
sbb
dec
jmp
loope
xchg
fistl
and
jmp
jns
aaa
test
in
cmp
into
jge
mov
insl
fucomi
fcomps
rorl
dec
lods
in
fnstsw
jecxz
mov
add
or
ror
cmc
jp
in
mov
xor
mov
or
pop
and
ret
add
sti
out
addr16
and
daa
aam
pop
subl
xlat
sarl
gs
add
cld
fistps
ret
dec
mull
xor
cmp
sub
js
jge
das
popa
fwait
pop
cmp
call
jmp
sahf
mov
mov
cmp
mov
in
mov
int
mov
push
inc
xchg
insb
lea
or
adc
daa
out
dec
mov
cwtl
sub
jg
lret
add
sub
cli
xchg
pop
mov
jbe
cmp
or
sbb
jno
out
fisubs
sbb
fisubl
outsb
insl
and
xchg
sbb
lds
pop
sbb
in
jb
mov
mov
bound
cltd
popf
adc
xchg
cmp
push
cwtl
sbb
cwtl
push
loope
repz
mov
fstl
xchg
enter
dec
shl
lcall
xor
mov
push
negb
mov
pushl
std
sub
cmp
pop
into
push
insb
lods
xchg
xor
and
outsb
shll
dec
cwtl
out
adc
lods
sbb
push
adc
les
scas
xor
cmp
insb
test
js
or
sbb
in
push
xchg
lods
push
mov
outsb
rcl
jp
ds
bound
pop
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
push
or
js
push
clc
in
xchg
loope
outsl
ret
imul
pushf
nop
sbb
in
stc
push
sbb
xchg
mov
inc
dec
xlat
sahf
jno
jb
loopne
add
enter
and
ja
xchg
sbbl
int3
push
mov
inc
dec
adc
or
popa
xor
sub
inc
insb
xor
out
cmp
cmpsl
xor
clc
pcmpeqw
out
hlt
in
sub
test
xor
cld
mov
or
jge
push
cwtl
int3
xchg
dec
in
rorb
mov
lahf
sub
dec
xchg
jno
lods
xchg
mov
jecxz
pop
jmp
icebp
fiadds
mov
divl
mov
pop
jp
pop
cs
ret
outsl
lds
mov
ss
push
adc
daa
mov
xor
and
pop
pop
jecxz
loop
pop
pop
xchg
mov
push
push
mov
add
pop
mov
ljmp
adc
fsubl
pop
dec
xchg
dec
stos
bound
inc
insb
mov
lea
jmp
in
lcall
pop
fisubrl
lret
push
cli
js
mov
aam
sbb
push
popf
add
add
push
sub
arpl
xchg
jbe
sbb
xor
cli
scas
aaa
cmc
mov
and
push
dec
test
xchg
call
pop
inc
and
stos
xor
mov
or
mov
mov
rcrb
jae
lahf
std
les
sub
nop
mov
sbb
mov
jnp
sarb
insb
xchg
inc
test
push
add
sub
or
sbb
jne
or
loopne
cmpsb
ficoms
loope
jb
out
jle
ss
fimuls
cmp
or
es
pop
popa
popa
adc
xchg
push
fmulp
inc
jbe
xchg
dec
faddl
popl
dec
in
fnstsw
pop
mov
dec
test
sbb
dec
iret
xchg
aaa
stos
mov
pop
out
popf
outsb
mov
ss
add
adcb
mov
out
jmp
inc
cltd
adc
xchg
push
cmp
icebp
cli
shl
cs
cmp
sbb
sar
ret
sub
xor
adc
add
mov
xchg
mov
movsl
inc
into
and
cmc
adc
std
inc
and
jno
sahf
or
sbbb
fmuls
jns
bound
mov
cmp
clc
dec
push
loopne
imul
jns
fdivl
ret
add
xchg
pop
xor
arpl
inc
adc
add
fisubrs
mov
add
orl
ret
or
sti
rorl
mov
push
xchg
push
mov
subl
jns
fcoml
ljmp
cli
cli
ret
mov
sbb
aas
jnp
in
and
fildl
pop
mov
sbb
aaa
jle
pop
adc
fstps
lahf
push
ljmp
out
lods
in
sub
mov
mov
push
mov
cmpsb
sahf
mov
les
cmp
inc
cmp
icebp
sbb
dec
cmp
leave
mov
aas
sbb
dec
mov
std
mov
sbb
pushf
icebp
imul
lahf
jae
jg
add
add
aas
pusha
push
orb
jb
jnp
outsl
in
push
cmp
push
xor
insl
xchg
out
fnsave
mov
and
lahf
fsubs
push
loop
push
lods
bnd
fdiv
mov
mov
mov
push
stos
inc
mov
push
lcall
cmp
aam
pushf
sti
ja
cmp
and
subb
notb
cltd
stc
push
jo
ljmp
adc
adc
fwait
jl
pop
stos
lahf
xor
into
xor
dec
jecxz
loopne
cmpsl
into
inc
push
push
mov
or
jle
sbb
add
aaa
repz
rol
cmc
shl
adc
push
in
les
decl
aas
mov
pop
and
mov
repz
inc
movsb
in
nop
out
leave
testl
cmp
div
push
arpl
sbb
pusha
mov
and
sub
cmc
into
mov
add
jl
inc
and
jecxz
jae
mov
pushf
sbb
adc
inc
imul
add
fnsave
sub
loope
mov
pop
pop
jb
push
sbb
nop
mov
insl
shll
orl
jmp
xor
lcall
mov
lcall
inc
insl
pop
pop
mov
out
cmpb
fmull
adc
lret
cld
in
mov
lock
call
ljmp
jmp
add
fldt
adcl
sbb
inc
aad
push
mov
mov
pop
add
movsl
adc
mov
lcall
pop
pop
lock
lea
pop
pop
cld
push
loopne
iret
adc
lock
pop
adc
shr
jmp
jmp
inc
mov
insl
ss
mov
fmulp
cmpsb
leave
adc
rcrl
int3
push
insb
push
cs
and
mov
mov
rclb
jae
push
mov
arpl
ds
mov
dec
repnz
mov
in
fstpt
pop
dec
push
pop
pop
sub
sub
aad
xchg
dec
enter
dec
lret
xchg
push
cli
sub
fmul
sub
and
std
mov
je
rcr
stos
stos
push
xchg
fiaddl
dec
and
mov
push
add
arpl
mov
or
push
add
mov
cmp
movsb
pop
sbb
mov
das
repnz
xchg
pop
scas
dec
sti
sub
mov
or
ret
cmp
xchg
jb
loope
aad
das
pop
arpl
aad
ret
mov
mov
lods
mov
sbb
ret
cs
push
cmp
mov
jo
xor
jl
divl
sarb
lcall
pushf
and
or
pop
out
ficompl
sbb
clc
notb
js
push
pusha
hlt
mov
pop
or
mov
shll
mov
loopne
push
jge
sbb
xor
daa
clc
mov
fisubrs
insb
cmp
out
mov
or
and
dec
cli
add
push
cli
dec
popf
jg
adc
lds
and
imul
add
cmp
sbb
xlat
call
mov
mov
ja
push
lret
cld
and
fsubrs
cmp
jp
decb
mov
adc
aam
cmpsl
xchg
push
or
fldl
cmp
mov
xchg
out
aam
add
fsubrs
dec
dec
or
xchg
bnd
lods
pop
dec
jmp
outsl
dec
adc
cmp
jle
pusha
leave
popa
xor
mov
add
popa
push
gs
push
push
lahf
inc
fldenv
push
mov
imulb
add
sub
ds
enter
aas
sbb
inc
imul
pop
jns
test
jb
add
cmp
push
fwait
xor
ret
sbb
rcrl
fiaddl
pop
dec
or
cltd
add
repz
stos
filds
ret
nop
pop
xchg
jecxz
aad
mov
adc
mov
sbb
pop
enter
jae
inc
mov
lods
pop
dec
lret
xchg
xchg
mov
call
jo
or
test
pop
jne
shr
lret
pop
sbb
insb
mov
sbb
fs
test
inc
in
stos
xchg
imul
popa
daa
dec
cmp
adc
push
rclb
pop
lcall
decb
xchg
add
int
je
roll
push
pop
push
cmpsb
cltd
inc
mov
lret
test
enter
mov
cltd
inc
dec
outsb
enter
and
sahf
adc
jle
jle
adc
xchg
xor
cmc
jg
inc
xchg
arpl
inc
push
int
xor
pop
int
pop
sub
cli
pop
push
jae
xor
or
pop
mov
add
jbe
jae
js
or
or
xchg
mov
dec
and
pop
lods
adc
mov
cmpsb
add
icebp
xchg
in
imul
cmc
mov
mov
cmc
pop
pop
cli
stos
add
mov
and
fistpll
dec
xchg
pop
in
mov
pop
mov
or
aad
or
ja
add
or
fcmovb
add
mov
jecxz
imul
sbb
mov
push
jne
movsl
insl
out
adc
ss
push
jbe
lret
sbb
sub
and
lret
and
cwtl
stos
xor
repz
movsb
mov
sbb
loop
shlb
mov
fimuls
mov
scas
add
adc
loope
mov
dec
sbb
ss
fistl
jmp
cmp
cwtl
out
mov
jnp
or
cmp
dec
pop
or
jmp
cwtl
jns
xchg
imul
sub
adc
ja
add
clc
jno
cmp
jge
movsl
jb
dec
add
call
xchg
ret
sub
insb
adc
sub
loope
mov
jne
jbe
push
popf
mov
pop
icebp
adc
mov
hlt
lcall
xchg
sub
iret
cli
push
cmc
roll
inc
daa
add
incl
imul
add
dec
lds
or
dec
sbb
lret
lret
push
dec
js
stos
adc
mov
in
push
test
push
pop
sbb
mov
ret
into
pop
repz
cltd
loope
mov
xchg
outsl
ss
xchg
outsl
jg
test
cld
aas
xlat
in
sbb
cld
ret
imul
gs
inc
sti
or
rcl
xor
mov
xor
cltd
das
dec
pushf
shll
movlps
mov
adcl
xchg
jle
lret
loopne
mov
test
jecxz
stos
lcall
loop
adc
jle
or
cltd
jle
cmp
xchg
test
fidivs
inc
jge
addr16
dec
push
add
fsts
pop
faddl
pop
or
cmc
pop
push
rcl
sbb
out
and
lret
lock
push
xchg
pop
lret
sbb
aad
sub
sub
cltd
dec
incl
lods
and
xchg
pop
jno
std
jge
leave
aas
xchg
ret
dec
xchg
mov
cmc
adc
sbbb
fsubrl
test
adc
sub
sbb
jmp
sub
mov
jmp
dec
jo
sarb
sub
inc
inc
cli
movsb
adc
fimuls
lcall
and
sbb
dec
xchg
sbb
jbe
pop
push
cmc
repnz
cmpsb
cltd
or
clc
fistpl
scas
fildl
test
aaa
or
cmp
ss
loopne
mov
add
adc
adc
mov
sub
cmp
loop
dec
out
inc
add
add
dec
sbb
mov
out
pop
and
add
push
je
nop
jl
dec
mov
dec
popa
sub
hlt
dec
cwtl
pavgw
xchg
loopne
dec
push
test
sub
xchg
pop
scas
pop
nop
ret
push
adc
inc
xchg
cmpsb
jecxz
cmc
jbe
out
jae
mov
ret
inc
mov
mov
xor
dec
pop
aas
ret
jp
fstpl
inc
mov
mov
loopne
cmp
adc
cmp
jp
xor
and
repz
inc
push
call
vpavgb
repnz
aam
dec
bnd
push
push
jbe
sub
or
cs
xor
adc
push
inc
or
mov
lret
mov
movsb
inc
add
mov
nop
loopne
xchg
inc
push
aam
or
in
js
add
sub
or
xchg
jle
repnz
movsl
les
push
roll
sti
test
mov
jns
jnp
adc
jno
inc
inc
hlt
or
fwait
pop
cs
lahf
loop
mov
add
rcl
movsl
jnp
and
movsb
mov
lret
pushf
xchg
inc
or
lret
je
mov
cmp
shrl
ret
stc
cmp
mov
lret
loopne
pusha
stos
pop
imulb
leave
mov
into
bound
das
out
dec
cmpsb
imul
arpl
inc
lock
or
leave
out
and
out
mov
clc
sbb
sub
lods
xor
enter
inc
repnz
aaa
ljmp
nop
sahf
jo
mov
lcall
in
outsb
jns
push
fwait
push
mov
sbb
decl
cmc
jae
mov
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
adc
add
insl
