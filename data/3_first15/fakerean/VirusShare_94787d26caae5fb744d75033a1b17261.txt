push
mov
push
push
andl
andl
lea
push
call
sub
neg
sbb
inc
leave
ret
push
mov
push
push
mov
xor
sub
mov
and
cmp
mov
jne
sub
jmp
xor
roll
inc
mov
inc
cmp
jb
xor
pop
inc
pop
pop
ret
push
mov
push
lea
call
test
je
call
jmp
xor
pop
pop
ret
push
mov
sub
movl
mov
imul
mov
mov
mov
pushl
call
mov
leave
ret
push
mov
sub
push
push
push
call
mov
push
push
push
push
push
call
add
cmp
jne
mov
mov
movl
jmp
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
push
mov
mov
call
pop
cmp
je
mov
mov
or
mov
mov
mov
jmp
lea
push
push
push
pushl
call
lea
push
pushl
call
mov
mov
xor
mov
div
mov
mov
add
mov
cmpl
jne
mov
mov
mov
add
mov
call
push
push
call
pop
pop
xor
jmp
push
push
call
xor
inc
pop
leave
ret
int3
in
push
push
int3
int3
int3
int3
int3
inc
dec
and
ficomps
mov
jb
mov
or
dec
imul
scas
imul
sbb
es
in
push
cmpsl
mov
pop
jnp
shll
cld
lret
aaa
int
cmp
xchg
callw
adc
sub
jb
test
inc
std
int3
je
js
inc
aad
mov
xor
inc
fwait
stc
cmpl
pop
test
jo
push
mov
adc
xchg
push
inc
es
cmp
xchg
xor
or
sub
fiadds
adc
pop
addr16
das
push
and
lods
test
jnp,pt
test
pop
xchg
inc
add
mov
lea
stos
mov
imul
fwait
imul
idivb
pop
mov
or
bound
mov
mov
and
dec
addr16
sub
std
dec
cmp
decl
aaa
fsubr
xchg
pop
cmp
push
iret
mov
imull
xchg
jmp
lds
lcall
xor
in
mov
shlb
imul
loope
or
clc
or
jnp
xchg
mov
mov
das
rol
push
mov
xchg
lret
mov
xchg
stc
stos
lcall
mov
add
cmp
mov
mov
lret
jmp
sar
leave
inc
pusha
imul
test
mov
mov
pop
dec
push
test
repnz
xor
sar
mov
add
sti
mov
mov
in
cld
cs
sti
rcll
ficoml
mov
notb
hlt
mov
mov
imul
cmpsl
inc
mov
std
fnstcw
mov
inc
gs
push
xor
pop
scas
jb
gs
cmp
adc
les
or
jne
repz
mov
addr16
mov
in
push
xchg
add
cmp
sbb
xchg
sbb
mov
stos
gs
mov
xchg
pop
outsl
xchg
lret
mov
inc
adc
and
pusha
mov
sub
notb
or
cwtl
mov
lods
cmpsb
jbe
pop
add
mov
mov
dec
push
cmc
pusha
jae
xor
iret
sarb
ds
xchg
loopne
dec
scas
cwtl
dec
xchg
mov
xchg
mov
or
sbb
ljmp
pop
push
sbb
jne
lods
adcl
imul
mov
popf
mov
std
sub
adc
jge
xor
mov
aas
or
es
lret
hlt
out
xlat
pop
sahf
mov
push
sbb
fcmovb
mov
pop
mov
push
mov
mov
dec
xchg
mov
pusha
in
push
in
jecxz
sahf
push
xor
aas
inc
mov
mov
adcl
pop
mov
loope
mov
in
cmp
or
adc
sarl
mov
inc
pop
lock
ror
iret
sti
mov
mov
lahf
mov
lret
rolb
loop
inc
mov
add
pop
cmp
inc
xorps
xor
push
fxch
lea
arpl
sbb
test
xchg
test
daa
add
fucomp
mov
mov
add
repz
lahf
xor
mov
ljmp
mov
sub
popa
push
push
xchg
fsubs
stos
sub
les
loop
add
fwait
cmp
inc
xchg
jg
jo
ljmp
xor
sbb
mov
sub
cmpsb
mov
xchg
cli
xchg
jae
adc
mov
lret
jb
adc
cltd
xor
int3
test
push
cmpsb
jl
in
dec
adcl
fwait
push
test
xor
int3
pop
xchg
pop
jge
cwtl
data16
xor
movsl
xchg
int
repnz
in
mov
xor
out
pusha
ret
je
ret
pop
int
xchg
sub
xchg
push
push
test
and
mov
adc
lret
pushl
sahf
pop
push
mov
testl
cmpsb
mov
pushf
xchg
mov
xchg
jmp
add
sub
pusha
mov
scas
pop
ljmp
enter
pop
xchg
inc
addl
movsl
mov
lock
cmp
and
mov
dec
lcall
cmpsb
sub
fs
jl
rcrb
cmpl
imul
inc
mov
rclb
inc
lahf
repz
cmc
pushf
mov
cmp
mov
jb
pop
iret
int3
ret
jg
pop
arpl
mov
outsb
fldt
mov
leave
and
mov
dec
mov
repnz
and
adc
scas
xor
insl
dec
push
mov
hlt
lock
sub
xchg
test
imul
call
out
in
cmp
lods
cmc
mov
mov
testb
push
imul
xchg
movsb
stos
movsl
scas
mov
adc
jecxz
test
pop
popa
xchg
test
inc
mov
inc
stc
inc
adc
lock
dec
je
sub
mov
xor
jbe
rcrb
ret
in
shll
leave
pop
xorl
aam
xchg
lds
inc
xchg
pop
mov
incl
das
gs
addr16
adc
add
push
or
push
mov
ds
cli
std
iret
add
mov
mov
lods
xor
mov
sbb
mov
push
jge
test
cmc
fsubrs
mov
adc
cld
xor
adc
xchg
lahf
and
test
stos
and
dec
adc
adc
mov
or
mov
fstps
lret
xor
push
mov
inc
push
xor
add
adc
aaa
fprem
and
sub
rcl
push
sub
inc
outsb
out
testl
adcb
scas
test
mov
mov
iret
int
dec
cmp
seta
xchg
sub
adc
inc
cmpl
rolb
cli
addr16
xchg
fsub
les
stos
dec
cld
or
rcrl
xchg
jmp
or
movsb
mov
repnz
mov
outsl
aad
push
add
popa
mov
insb
das
in
mov
pop
mov
sub
mov
and
inc
jno
in
out
cltd
mulb
dec
cmp
pop
jbe
pusha
mov
or
add
mov
fisubrl
or
add
dec
xchg
and
xchg
insb
mov
pop
fisubrs
sahf
inc
adc
xor
cmp
jnp
movsl
adc
hlt
stos
fcoms
je
dec
mov
xor
shrl
mov
std
and
xor
fsubl
fwait
jns
enter
or
jmp
out
sub
ret
sub
and
cs
xor
add
mov
fldenv
xchg
pushf
ret
or
mov
ret
fsubrl
aaa
jae
xor
dec
jl
cwtl
outsb
mov
insb
aam
mov
repnz
movsb
insl
mov
mov
fcmovu
mov
sbb
mov
in
push
sahf
loopne
xlat
xchg
xchg
ret
into
pop
push
shl
fs
gs
mov
fmuls
out
inc
loopne
or
aas
repnz
xchg
dec
dec
inc
fistpl
icebp
dec
mov
pop
pop
xlat
dec
and
lock
dec
mov
outsl
push
outsl
sbb
xor
rcll
or
sbb
int
adc
movsl
jae
rorb
test
out
or
mov
cmp
add
loop
fs
add
imul
and
add
push
popf
cmpl
mov
lcall
scas
sti
ret
repz
jb
dec
mov
loopne
push
cmp
ds
or
ss
and
daa
sbb
sub
adc
mull
pop
mov
or
fcompl
lock
mov
mov
inc
mov
cld
fidivrl
mov
push
loopne
mov
aam
dec
sar
mov
inc
out
das
dec
rclb
ret
xor
test
mov
dec
loope
xor
cmc
mov
pop
xlat
pop
rclb
fmull
fsubl
test
lds
rclb
jo
stos
adc
stos
stos
mov
jmp
test
movsb
or
cmc
lods
lock
sbb
inc
xor
enter
mov
push
add
push
xor
insl
xchg
or
ljmp
mov
jecxz
subl
test
loopne
jb
andb
adc
mov
lea
xchg
movsb
add
jbe
jp
sub
lods
sub
sub
sbb
xchg
add
notl
cs
rorl
cmp
xchg
ss
push
loopne
inc
jnp
jnp
jge
or
lock
fcoms
xchg
hlt
adc
inc
push
push
es
out
pop
fsubl
mov
cs
cmp
mov
mov
mov
roll
inc
xchg
push
aas
jns
dec
ficompl
loope
sub
shlb
mov
shll
xchg
test
fsubl
ret
hlt
inc
pop
lahf
cwtl
pop
popa
std
inc
jle
movsb
mov
inc
jbe
mov
fcompl
sahf
enter
inc
adc
scas
rcrl
mov
loope
testb
idivb
xlat
inc
scas
push
mov
push
xor
es
es
sahf
mov
mov
aas
pop
inc
mov
shl
sub
in
mov
out
or
dec
mov
push
lret
xchg
cli
inc
out
js
jl
aaa
push
mov
cmc
ljmp
xor
xor
ljmp
fs
sbb
lret
rolb
push
inc
xor
mov
in
adc
lfs
movsl
dec
nop
sub
fistl
mov
and
xor
repz
jae
push
pop
xor
es
faddl
sub
shl
and
mov
fists
jmp
testb
test
push
sbb
and
aas
stc
dec
lahf
call
bound
cmc
repz
cs
jno
or
sbb
lds
daa
add
sbb
enter
aad
jecxz,pn
cmp
bound
mov
xor
and
push
dec
lahf
dec
cs
push
mov
lret
dec
mov
mov
jno
push
and
fs
sti
imulb
sub
scas
lcall
imul
and
test
imul
gs
mov
pusha
push
fbld
repz
repnz
mov
fwait
imul
test
call
popf
adcb
push
test
push
cmp
inc
sub
jb
in
cmc
adc
xchg
jge
add
icebp
dec
xchg
or
push
jle
lds
jno
inc
js
and
xor
xlat
push
pop
aam
mov
and
insl
les
ja
sub
push
cmp
cmpsb
jo
roll
lcall
imul
inc
sub
cmc
int3
daa
add
ljmp
repnz
and
sub
adc
hlt
cmp
sub
push
dec
ret
out
add
movsl
cmc
xor
call
jge,pt
pop
popa
or
xor
xor
xchg
loopne
cmp
mov
sub
mov
daa
inc
leave
lcall
inc
insl
jmp
idivl
sbb
idivl
movsl
negb
xchg
inc
mov
jns
sbb
pop
sub
sub
mov
enter
push
jmp
jb
rol
and
or
mov
and
mov
gs
mov
test
sub
push
cmp
sbb
data16
das
xchg
mov
fsubs
lcall
sbb
rcll
mov
testl
leave
fstl
cmp
fdivrl
adc
dec
add
adc
mov
sbb
repnz
int3
pop
cmp
fs
or
add
frstor
push
jo
adc
xchg
dec
push
sti
adc
mov
idivl
mov
pushf
sub
jmp
dec
testb
ror
imul
mov
jo
adc
movsb
dec
jmp
lods
hlt
loop
xor
shrb
inc
loope
inc
loope
mov
cmpsl
std
ja
push
outsl
pusha
out
xchg
adc
aas
hlt
sub
fmuls
pop
and
mov
fistpll
pop
cwtl
and
lock
inc
ss
cmp
daa
or
aaa
popl
daa
sahf
mov
add
sub
loop
mov
ret
iret
iret
gs
stos
xor
int
push
ret
jmp
xchg
push
sbb
imul
test
ds
rorb
xchg
imul
je,pt
dec
out
xchg
mov
fwait
int
mov
cwtl
sub
push
aas
pop
gs
mov
std
jo
jbe
loopne
cld
arpl
mov
dec
pop
loope
ficoms
xor
pop
movsl
dec
mov
fsubl
in
arpl
out
push
outsb
push
rcrb
mov
orb
ret
add
sub
jmp
push
bound
dec
or
cmp
xchg
xchg
test
inc
mov
mov
sub
insb
or
xchg
rcl
xlat
mov
adc
mov
or
mov
psraw
pop
adc
mov
jnp
cli
lock
jle
hlt
js
mov
pop
pop
addl
out
out
int
pop
add
xor
mov
nop
inc
divl
je
test
mov
ja
test
jns
stc
and
testl
insb
aad
adc
push
sti
add
pop
push
enter
aam
out
dec
adc
mov
rol
repnz
popf
imul
shll
imul
cli
movsl
lods
mov
insb
imul
lret
loop
incb
sbb
cld
dec
cmp
cmp
sti
aaa
push
mov
jno
js
aas
adcb
sbb
rcl
out
scas
or
mov
inc
cmp
push
movsl
inc
xchg
ds
in
adc
shlb
ds
les
sbbl
and
cltd
lock
ds
bound
imul
clc
dec
ret
imul
push
sbb
mov
frstor
jns
loop
xchg
mov
daa
cltd
jge
pop
ss
lods
aad
push
mov
sub
mov
movsb
arpl
dec
inc
dec
loopne
push
jo
popf
inc
cli
xlat
sub
sbb
stos
rclb
dec
sub
xchg
call
or
fwait
icebp
outsl
ljmp
lret
or
sbb
aaa
sub
push
leave
mov
movsl
xchg
xor
mov
in
ret
push
cmp
xor
or
movsb
dec
iret
add
shlb
jecxz
ficoml
icebp
lahf
cmp
cmp
pop
nop
ds
cld
push
arpl
and
mov
lods
push
pop
imul
and
outsb
sbb
jne
pop
leave
and
shll
jns
add
jnp
fcompl
xor
mov
jo
insl
hlt
leave
xorl
sbb
mov
mov
and
jo
inc
add
jp
or
xorl
mov
insb
test
pop
or
mov
adc
lret
rorl
sarl
mov
loope
les
jne
lds
ljmp
push
ljmp
xlat
enter
mov
jns
test
push
in
test
sbb
mov
js
lret
jle
loope
jge
adc
shll
mov
outsb
mov
ljmp
push
ss
fcompl
stc
xchg
rol
sub
insb
hlt
sbb
dec
ss
pop
aaa
mov
pushf
jo
call
int3
sahf
daa
sbb
leave
mov
xchg
xchg
fdivl
sub
pop
lret
push
mov
scas
clc
ret
int
pop
jae
and
hlt
hlt
xor
gs
addr16
xchg
mov
arpl
aad
add
jo
daa
out
scas
jg
sub
push
mov
jge
push
pop
mov
shlb
jecxz
lds
decb
jno
outsl
jo
pushf
mov
test
or
add
stos
ja
pand
push
pushf
cs
sbb
push
test
pop
pop
lret
fsubs
adc
mov
adc
fldl2e
jl
xchg
pop
inc
fimuls
rorl
add
mov
popa
push
clc
jecxz
adc
and
pushf
xchg
insb
cltd
jns
push
nop
nop
jae
xchg
fdivp
cmpsb
mov
adc
mov
outsl
sub
cli
test
pop
and
icebp
repz
sbb
out
mov
fsts
mov
add
movsb
movsb
into
scas
add
adc
mov
js
out
pop
sti
push
mov
cs
out
mov
cltd
stos
fisttps
in
xchg
orl
adc
mov
aaa
lods
loop
inc
xlat
push
popf
ret
inc
sub
pop
shrb
or
xchg
mov
shlb
shl
mov
xor
cmp
mov
jne
or
inc
push
popf
and
aaa
inc
repnz
pushf
adc
mov
movsl
mov
jbe
jne
pop
in
js
mov
jns
pop
shrb
sub
js
sub
lea
mov
adc
scas
mov
leave
dec
push
pop
sub
add
insb
add
mov
add
movsl
dec
sub
inc
je
cmp
lret
pop
pop
into
pop
adc
insb
loope
fcompl
and
or
cmp
pushf
pop
push
push
lods
push
insl
fnsave
push
imul
cld
push
push
pop
mov
jmp
aas
aam
shlb
cli
stc
mov
jnp
mov
push
loope
ds
inc
mov
fcmovnb
icebp
push
or
sbb
push
mov
mov
lods
dec
xlat
bound
jg
xchg
int3
aaa
jg
cld
cltd
add
pusha
xchg
imul
test
push
orb
enter
push
leave
cwtl
bound
and
cli
mov
sub
push
je
test
add
leave
add
xor
sti
xchg
leave
cli
add
mov
and
inc
les
adc
imul
pushf
aad
cmp
rcll
xchg
push
shrb
xchg
cmpsl
or
ljmp
call
push
dec
and
inc
mov
cmp
int
sbb
sbb
decb
jo
mov
es
xchg
push
inc
test
imulb
adc
mov
in
mov
ret
ljmp
sbb
add
int
cmp
bound
xchg
arpl
mov
nop
pop
mov
xlat
imul
or
jbe
xor
fmull
nop
ss
push
jo
push
lods
inc
inc
jmp
flds
sti
loopne
pop
push
xor
cmp
xchg
xor
andb
mull
xchg
imull
test
cli
push
push
stos
and
mov
cwtl
add
stc
push
and
pop
ja
popa
in
ret
pop
xor
iret
or
addb
lds
out
bound
sbb
icebp
shl
repnz
loope
xor
aam
adc
adc
test
hlt
sbb
and
int3
fdivs
fdivl
mov
imul
outsl
imul
cmc
aad
xchg
push
lcall
in
jp
imul
sbb
cmp
in
ffreep
js
inc
inc
lods
popf
sbb
adc
push
dec
push
ficomps
jl
mov
cmp
sbb
loopne
xchg
jns
push
mov
lret
add
mov
push
cmpsl
test
test
mov
loope
adc
mov
shrb
cwtl
fs
push
add
cltd
or
sbb
sub
sub
andb
sbb
push
and
rep
push
pop
sub
sub
rolb
lods
xor
int
mov
ljmp
cwtl
scas
outsl
mov
push
aas
pop
mov
jmp
shrb
sub
pop
adc
out
dec
pop
lods
mov
push
xchg
scas
js
inc
fwait
mov
jno
pop
add
lods
enter
repnz
xor
xchg
mov
cmc
loopne
lcall
neg
stos
cmpsb
push
rclb
iret
shl
insl
imul
inc
dec
daa
mov
scas
pop
or
out
cmp
jnp
mov
int
popf
insb
mov
dec
mov
and
out
in
mov
mov
js
rcll
cmc
pop
pusha
mov
pop
pop
jg
pop
xchg
sahf
pop
jl
in
cmp
xchg
in
movsl
in
addr16
in
hlt
mov
iret
std
out
mov
xchg
jl
sub
fucompp
test
fstpl
pop
pusha
test
out
clc
xchg
jecxz
fistps
mov
stc
aaa
sbb
stc
insl
insl
data16
mov
out
xchg
push
pushl
cli
lret
and
outsb
idivl
xchg
jns
loop
andb
or
icebp
fsubl
ret
out
fdiv
push
add
push
insb
jge
ftst
std
jecxz
jns
cli
les
mov
incb
adc
mov
inc
adc
outsl
pop
out
call
mov
xchg
mov
outsl
cmp
push
mov
shrb
xor
jae
cwtl
out
lret
lock
sub
mov
mov
mov
inc
or
pop
pop
pop
xor
sbb
rol
mov
shrl
nop
mov
cmc
jmp
cwtl
mov
mov
out
mov
sub
call
dec
xchg
dec
and
pop
pop
sbb
and
sbb
inc
sbb
pop
inc
ss
aam
mov
jne
sub
scas
dec
inc
inc
int3
mov
lret
gs
sbb
xchg
movsb
sub
testl
sub
push
pop
inc
or
rolb
mov
push
mov
lods
dec
add
sub
cmp
push
dec
cmpsl
adc
gs
sub
test
mov
mov
ss
fwait
push
push
xchg
popf
sarb
pop
outsb
pop
inc
shrb
inc
arpl
jl
fimuls
sbb
enter
pop
cmc
lcall
mov
adc
pop
dec
imul
pushf
nop
out
sbb
push
mul
lods
push
add
sbbl
and
orl
mov
dec
ret
test
daa
or
aas
stos
je
shlb
outsl
arpl
mov
es
std
cltd
ficompl
add
imul
lahf
aaa
pop
fcompl
lock
jl
test
adc
js
xor
and
jae
pop
pop
add
fistpl
lcall
pop
mov
mov
xor
mov
loope
fwait
adc
inc
nopl
scas
mov
sbb
push
gs
inc
outsl
fcomi
push
imul
mov
and
add
adc
dec
mov
add
jp
push
adc
adc
aam
shlb
pop
fnstenv
movsb
xchg
es
sub
addr16
pop
add
inc
and
jns
shrl
xor
sub
fsubrl
movsl
imul
lods
cmp
sub
enter
pop
jbe
mov
inc
pop
push
jl
outsw
imul
mov
lea
mov
and
pushf
push
xchg
and
pop
mov
lods
popf
sbb
hlt
inc
jne
pop
mov
repnz
adc
sub
jg
add
xor
cmpsb
out
aas
jmp
sbb
dec
subb
neg
cld
xchg
in
repnz
stos
jl
inc
gs
jne
jge
inc
jecxz
push
ret
dec
cmpsl
fwait
arpl
jmp
aam
push
rolb
andb
inc
ljmp
je
mov
lods
xchg
loop
jne
add
xchg
cmp
push
mov
push
sbb
les
pop
nop
stos
dec
jmp
sbb
in
sahf
dec
call
xor
push
mov
fiadds
mov
ss
or
fwait
push
lret
pusha
pusha
lds
mov
or
mov
popfw
sti
jmp
repnz
mov
or
mov
mov
jns
bound
cmpsl
xor
jge
xlat
dec
cmp
ja
mov
rcr
or
das
andb
cltd
jle
pop
loope
testb
adc
pop
call
sbb
add
sbb
int
ljmp
loop
mov
mov
lret
cmp
jno
xor
adc
fs
scas
sbb
adcl
xchg
std
shrd
mov
and
rsm
js
dec
mov
ret
stc
dec
les
mov
je
ds
mov
mov
rorl
xchg
out
in
push
dec
xor
xchg
adc
cwtl
pop
inc
pop
hlt
inc
popf
xchg
clc
cwtl
xchg
and
mov
je
push
pop
jecxz
clc
pop
aas
fwait
pop
mov
jecxz
repnz
sub
sti
add
mov
out
mov
add
xor
int
add
push
sbb
sub
mov
jnp
enter
inc
add
jecxz
sub
test
inc
sbb
lcall
test
inc
or
add
stos
ret
and
test
jb
cwtl
repnz
push
mov
loope
lahf
mov
inc
mov
addb
jmp
mov
repnz
jbe
jae
sbb
lea
sbb
inc
sbb
or
xchg
jp
out
push
mov
lret
pop
sub
jne
imull
aam
addr16
lds
js
add
cltd
jg
xchg
xchg
ret
out
cmc
pop
icebp
arpl
lahf
lahf
xchg
andb
out
inc
stc
shrb
xor
outsb
mov
add
sbb
pop
jmp
out
mov
test
pop
pop
adc
scas
or
roll
rolb
outsl
pop
xchg
idivl
mov
cmp
imul
mov
adc
or
sub
xchg
stc
cmp
jp
jo
sbb
pminub
mov
ss
adc
std
ret
movsl
cld
sti
jecxz
mov
cmp
in
xor
ss
iret
add
in
bound
dec
int
cmp
popa
incl
aad
scas
ljmp
mov
and
inc
int
popf
mov
ja
xchg
pop
or
add
inc
adc
push
cwtl
dec
adc
mov
shll
and
insl
dec
cwtl
pop
notb
jae
lcall
nop
rcll
adcl
mov
jne
xchg
scas
sub
push
mov
fisttps
add
arpl
sbb
adc
inc
loopne
sbb
xchg
ds
push
dec
outsb
xor
xchg
xchg
lahf
sub
push
fisubl
sub
pop
mov
ret
push
cmp
sbb
xchg
inc
xor
jge
xor
out
fmuls
mov
filds
push
sub
outsb
enter
push
xchg
or
icebp
inc
and
mov
into
in
push
rolb
sti
fdivrs
mov
test
jp
cmp
sbb
dec
mov
sbb
pushf
iret
lods
stc
andb
mov
js
xchg
mov
aad
inc
mov
rorb
push
dec
mov
pop
mov
mov
and
idivl
cmc
stos
sti
pusha
inc
lahf
dec
sub
xchg
pop
adc
pop
or
cmc
push
pop
loopne
jno
dec
push
xchg
mov
popa
cld
lcall
mov
out
adc
arpl
in
int3
shrl
cmp
fmuls
sub
sub
xchg
idivb
stos
les
mov
sarb
and
push
mov
mov
test
movsl
fmull
mov
xor
test
mov
mov
mov
fmuls
mov
jp
fdivrl
push
or
fisubs
rclb
ret
rcrl
xor
fstpl
pushf
sti
pop
mov
into
rcll
mov
fcmovnb
int3
shll
arpl
mov
xor
inc
mov
rcl
jge
sbb
insl
in
test
dec
into
int
in
dec
ljmp
jno
adc
bound
dec
or
xor
int
lds
loopne
jecxz
sbb
sar
jmp
jp
mov
pushf
sub
sub
mov
fsubrl
es
jne
lods
adc
jl
xchg
xchg
sahf
push
and
and
out
into
and
push
movswl
cmp
mov
and
je
ja
jmp
stos
inc
loop
push
mov
sahf
aaa
aas
cmp
insl
shlb
mov
and
aad
mov
je
fst
xchg
mov
je
and
jmp
dec
ret
adc
in
and
push
dec
pusha
arpl
dec
int
pop
out
out
cmp
jmp
je
out
cld
lea
mov
aad
inc
icebp
hlt
repnz
fisttpl
stc
cmp
rorl
push
addb
push
pop
ficoml
push
adc
pusha
popf
push
adc
data16
xchg
push
ret
scas
bound
push
enter
mov
push
pop
in
shlb
fdiv
fimuls
pop
mov
test
ret
pop
jnp
and
push
or
aaa
pusha
xorl
adc
adc
notb
lret
pushf
bound
lods
push
add
repz
enter
mov
cld
sbb
pop
push
adc
cltd
insb
mull
inc
lods
and
mov
add
adc
push
pop
shll
in
popa
adc
fsubrl
fdivrp
fdivs
fbstp
mov
mulb
movsb
ss
push
jl
dec
mov
inc
out
mov
adc
ja
dec
mov
pop
inc
xlat
hlt
xorb
cmpsb
adc
pop
sbb
lock
dec
mov
test
shrl
push
push
mov
adc
stos
lret
or
arpl
arpl
mov
cmp
push
fwait
or
lcall
push
movsb
sub
xchg
adc
mov
loop
ljmp
sbbl
loopne
aas
pop
cmp
add
inc
mov
cmp
pop
movsl
inc
xor
in
sub
aaa
add
fdecstp
sahf
and
push
dec
outsb
imul
lods
inc
dec
pop
cmp
aam
imul
push
inc
add
jg
inc
jne
cs
adc
inc
cmp
mov
and
shrb
inc
test
jg
inc
in
push
adc
lea
and
sub
and
ss
repnz
sbb
xchg
pop
mov
popf
jno
mov
fwait
ss
xor
int3
xor
xor
jp
jns
pop
int3
lret
jne
in
xchg
addb
adc
dec
add
mov
push
cmpsl
sbb
xor
jl
imul
mov
pop
adc
push
arpl
dec
shll
and
cmc
inc
ja
shlb
mov
xchg
lret
nop
push
lret
das
xor
and
sbb
in
aaa
mov
dec
mov
push
cmc
sub
into
sub
add
call
dec
jmp
cmp
ja
insb
cmp
lods
xor
lea
dec
fstl
add
popf
add
xchg
fwait
repz
jb
cltd
add
xchg
enter
fs
std
pop
ss
mov
faddp
cmpl
ds
mov
shl
loop
dec
int3
imul
jle
adc
fsubr
fs
test
leave
jnp
xchg
sbb
int3
xor
mulb
push
loope
add
iret
jbe
gs
or
and
sbb
sbbb
xor
dec
inc
add
scas
cmp
sbb
and
add
std
icebp
push
mov
pop
loopne
adc
imul
cmpsl
jmp
jo
mov
jne
and
bnd
andb
and
and
loopne
aaa
or
push
test
mov
in
aam
mov
or
mov
lahf
filds
loope
aam
mov
push
dec
jnp
cwtl
mov
test
repz
pop
imul
or
movsl
push
cmc
scas
arpl
pop
jl
jnp
loop
out
push
xchg
push
sahf
cltd
add
cmp
jnp
movsb
mov
sbb
and
cltd
sub
jmp
imul
sub
or
mov
mov
sub
stc
jecxz
jb
mov
cmpsb
adc
out
xor
iret
cltd
and
dec
aaa
cs
cli
add
add
std
inc
dec
mov
mov
loope
out
jmp
mov
sbb
or
sub
into
sbb
xchg
or
jp
jl
push
jae
mov
mov
repz
inc
popa
and
adc
and
mov
mov
sbb
fildl
cmp
mov
jb
xor
pop
or
pop
nop
xchg
scas
inc
jl
xchg
inc
cmp
out
aaa
and
test
in
lods
mov
inc
sub
jle
icebp
pop
cli
mov
push
push
lahf
xlat
push
mov
adc
cmc
add
push
add
cmp
pop
mov
and
fcompl
and
or
sbb
jmp
pop
or
cmp
push
push
rcl
lods
add
out
cmpl
in
or
movsb
repnz
pop
imul
popf
cmpsl
push
jecxz
stos
lea
mov
inc
scas
loope
popa
sub
push
out
jne
negl
cmp
dec
icebp
mov
shll
dec
inc
push
mov
lcall
in
add
call
test
jg
pushf
arpl
xchg
shll
pop
loop
movsl
lcall
movsl
cmpsl
pop
pop
add
cs
xor
adc
add
inc
hlt
test
pop
es
dec
push
inc
or
pop
inc
push
test
xchg
dec
or
cld
lret
cmc
es
flds
pop
rol
xchg
sub
xchg
rorl
stos
sub
sub
lods
jns
scas
leave
enter
push
add
shr
fistl
push
mov
cld
scas
pushl
mov
xchg
inc
adc
test
lcall
loope
insb
test
sbb
mov
std
popf
inc
aam
and
mov
mov
and
push
enter
fidivs
adc
popa
loopne
push
cmp
mov
cmpsl
xchg
lahf
cmp
adc
mov
jo
daa
shrl
call
nop
mov
movsl
repnz
mov
je
mov
push
lret
sbb
mov
xorl
fcmovnu
test
adc
lcall
repz
lods
jo
mov
pop
or
pop
add
or
repz
and
xor
pusha
push
mov
fnstcw
int3
sbb
xor
vcmppd
dec
cmp
test
fisubs
test
es
pop
mov
jo
xchg
movsl
lahf
pusha
fstpl
xchg
cmp
push
into
jne
jmp
xchg
xor
or
or
inc
mov
inc
jp
scas
in
xor
xor
and
inc
popa
adcb
icebp
aas
xchg
inc
cmp
mov
repz
scas
pushf
push
out
andb
lret
je
call
out
jns
dec
out
ss
std
and
lcall
adc
and
fadds
sbb
push
fsubr
dec
cmp
adc
leave
push
inc
mov
out
xor
push
dec
lret
rolb
pop
clc
mov
in
int
cltd
dec
or
into
cld
sti
cmpsl
mov
jb
cmp
cmp
fs
outsl
adc
or
xchg
pop
push
inc
lds
add
mov
inc
jp
fisubl
sbbl
clc
pop
adc
in
jo
xchg
dec
js
xchg
pop
mov
add
or
movsb
fisubrs
mov
int
imul
bound
inc
jp
fldl
inc
xor
add
jmp
rcll
rcll
aas
imul
fs
lret
push
xchg
mov
insl
cwtl
jbe
daa
xchg
leave
std
mov
xchg
add
pop
ret
aad
push
cli
push
aam
pop
fistl
cmp
mov
stos
test
data16
sbb
gs
and
out
xchg
mov
dec
cmpsl
jns
sar
mov
mov
cmp
lods
in
movl
mov
inc
mov
xchg
cmpsb
mov
jecxz
cmpsl
jmp
cwtl
inc
xor
inc
jle
and
xor
sub
nop
ljmp
mov
and
out
arpl
fsubr
lods
or
roll
or
sbb
repz
ds
shll
cs
adc
gs
adc
adc
aam
jo
pop
dec
mov
jg
sti
jmp
mov
call
scas
xor
and
fbld
scas
je
test
cmp
mov
xchg
pop
adc
adc
mov
mov
clc
jmp
xchg
clc
imul
mov
cmp
aam
jmp
outsb
push
jg
pop
xchg
cmpl
xchg
and
aas
fdivl
sbb
in
lahf
gs
or
insl
clc
mov
inc
push
stc
dec
inc
mov
shrb
lock
shll
ja
adc
cmp
mov
jb
mov
inc
adc
and
std
sbb
aam
adc
push
add
pop
or
adc
sbb
dec
cmpsl
scas
cmp
inc
jl
imul
inc
outsl
xor
pop
daa
mov
sbb
out
jnp
int3
mov
ds
popa
lahf
push
lcall
ret
je
ret
loop
scas
cmc
mov
mov
pop
pop
or
call
cli
je
mov
push
and
loop
sub
decl
stos
or
pusha
repnz
sub
divb
lock
fs
repnz
jle
sub
pop
mov
movswl
pop
rolb
push
rcrb
stos
test
sub
enter
jb
xor
dec
enter
and
es
xchg
in
inc
push
test
jnp
in
mov
gs
sub
inc
pop
iret
popf
mov
repz
lret
xchg
push
lea
aaa
cs
or
inc
or
cmp
inc
mov
je
mov
and
pusha
lret
sub
sbb
jle
pop
pop
mov
imul
pusha
push
rcl
cwtl
imul
jae
stc
xchg
loopne
or
xchg
and
and
fwait
sahf
lods
and
xchg
lahf
push
cmovle
pop
xor
push
imul
jbe
dec
pop
lss
outsl
or
aas
xchg
adc
rcll
push
sub
ljmp
cmc
nop
jmp
stos
and
ret
in
test
movsl
dec
test
shll
push
repz
ds
xor
mov
leave
test
push
lret
mov
cpuid
inc
sub
add
es
adc
popf
sub
scas
sbb
ret
mov
cmp
in
lds
push
add
cmp
iret
lods
out
xchg
std
xchg
scas
add
and
cmc
push
sbb
mov
jne
bound
add
pop
cmp
mov
int
mov
or
inc
sub
int3
xor
sbb
ja
mov
push
mov
dec
les
xor
pop
rorl
cmp
inc
imul
adc
add
in
fucomip
xlat
inc
and
aas
or
or
lret
cmpsl
xchg
mov
testb
mov
insb
lods
sbb
jbe
rcrb
into
adc
xor
xor
es
xchg
sub
xor
in
cli
mov
push
fs
fistl
xor
inc
setb
aas
xor
and
orb
xchg
inc
mov
jbe
rclb
lret
jbe
rcrb
idiv
dec
int3
push
fildl
iret
cmpsb
sahf
push
pop
mov
popf
mov
xchg
ret
pop
clc
xlat
jmp
movsl
imull
in
cwtl
movsb
lods
je
pop
pop
sub
add
xor
xchg
loop
dec
in
frstor
movsb
xor
push
ljmp
xchg
jnp
xor
imul
xchg
inc
inc
jb
push
lahf
sbb
fisubrl
or
inc
mov
ds
ja
movsb
sbb
std
imul
test
sbb
push
pop
stc
flds
loope
mov
inc
dec
mov
push
fwait
mov
mov
mov
sbb
fwait
lret
sub
popf
sbb
adc
inc
les
test
push
or
aad
mov
mov
jge
lret
inc
add
jo
in
lods
lea
loopne
pop
enter
shrl
inc
mov
mov
out
or
mov
stos
xlat
in
and
sub
inc
or
pushf
xchg
pop
pop
pop
cld
repz
bound
lock
lret
arpl
add
jbe
test
push
push
rclb
jbe
cld
adc
aad
lods
pop
pop
push
out
mov
rcr
mov
clc
fisubrs
nop
filds
outsl
les
cmp
loop
lods
in
cli
jbe
data16
cmp
cli
adc
cmpsb
xchg
cmp
inc
xchg
sbb
insl
hlt
testl
mov
add
adc
xor
sbb
mov
cmp
xlat
cltd
loopne
in
inc
cmp
cmp
cs
outsb
inc
mov
mov
jbe
call
lret
cmp
in
mov
popa
push
dec
inc
jge
cmc
pop
xor
das
or
subl
lods
lret
jl
lds
pushfw
lods
mov
ret
push
push
push
int3
push
ja
mov
adc
rcl
mov
out
out
bound
imul
loopne
add
stc
adc
inc
jmp
ret
cli
sbb
test
xlat
xor
push
inc
inc
xchg
push
pop
inc
fnsave
enter
and
shll
mov
pop
sbb
in
lock
ss
insl
in
jmp
add
in
mov
mov
xor
inc
xchg
add
push
and
inc
loope
mov
sub
and
sub
jl
xor
dec
cs
push
mov
loopne
or
mov
push
out
cmp
lock
xor
clc
scas
insb
divl
mov
int3
mov
mov
daa
or
pop
bound
dec
push
movb
or
push
fcmovne
cwtl
xor
add
vxorpd
loope
insl
pop
sub
adc
mov
mov
push
enter
inc
fldl
xor
mov
out
push
push
movsl
xor
or
xor
test
mov
push
out
test
loop
mov
mov
pop
and
into
sub
outsb
ja
pop
sti
push
fisttps
mov
jne
or
movsl
cmp
inc
pop
inc
test
sub
inc
cltd
pop
xor
mov
popf
clc
movsb
xchg
das
mov
in
xchg
xchg
adc
enter
in
jle
pushf
pusha
mov
push
pusha
fistps
sub
enter
push
in
sbb
test
jnp
push
or
test
adc
out
xchg
xchg
icebp
xchg
imul
bound
loopne
xor
and
mov
out
std
cmp
lcall
imul
icebp
popf
xorl
xor
add
and
data16
repnz
outsl
adc
lock
xchg
test
aas
js
xchg
clc
mov
sbb
ja
xor
jns
pop
inc
cmpsl
enter
das
cmpsl
or
aaa
ds
dec
ja
aaa
aaa
cwtl
or
imul
imul
mov
sbb
aas
xor
add
jecxz
ret
mov
in
cmp
into
mov
out
mov
sub
popf
xor
hlt
repz
jo
mov
addr16
roll
mov
mov
mov
stc
lea
sbb
sub
xchg
mov
xor
sub
cmp
adc
fs
push
mov
sub
leave
xchg
test
sbb
pop
fwait
cmp
push
test
pop
in
negb
ret
add
neg
fstpt
pop
int
out
arpl
gs
dec
mov
add
shrl
xor
inc
movl
sahf
inc
pop
inc
xchg
hlt
bound
push
push
sbb
rcr
push
stos
sbb
or
or
or
and
push
xchg
lahf
sub
and
out
es
jecxz
insb
out
push
fiaddl
bound
sbb
notb
jmp
cmpsl
les
mov
dec
xchg
lahf
aaa
sbb
jecxz
and
imul
xor
mov
jns
lret
clc
mov
sbb
cmp
xor
in
or
cmp
scas
in
mov
pop
das
and
xor
mov
cs
lahf
xchg
sub
add
sub
lods
jecxz
aam
cmc
test
fdiv
orl
xchg
cmp
push
xchg
aaa
ficoml
add
ss
lods
mov
jae
cmc
repz
imul
ficoms
cmp
mov
mov
push
mov
orb
das
xchg
decb
xor
or
data16
sub
mov
bound
faddl
pop
lret
mov
ljmp
daa
out
cmpsl
jmp
mov
lret
outsl
cmpb
cltd
sbb
out
std
sti
add
fcmovnb
pop
loop
in
or
sbb
inc
out
mov
cmp
fsubrl
in
jg
sub
mov
jp
adc
inc
outsb
das
fisttpll
imul
inc
pop
mov
sbb
inc
iret
jl
std
cmpb
jae
insl
cmp
int3
fistl
or
xor
fsub
inc
and
test
sub
xchg
fcomi
push
loope
cmp
cmp
out
test
xchg
test
out
adc
aas
add
mov
inc
popa
rclb
mov
in
mov
or
lds
addr16
adc
jl
xlat
xor
mov
ja
aas
out
jae
in
pusha
pop
pop
and
mov
pop
push
dec
mov
sub
inc
les
in
xchg
pop
out
push
das
cld
cmp
dec
clc
pushf
stos
daa
mov
stos
mov
pop
ja
sub
fs
jns
test
rcrb
es
adc
xchg
ret
xchg
loopne
mov
call
and
loopne
iret
cli
push
push
jns
dec
jnp
pop
jecxz
mov
fcmovne
inc
lret
xchg
aad
ja
int
sub
in
xorl
adc
fst
repz
ja
push
xor
jl
setae
int
in
and
push
mov
xchg
or
ljmp
filds
cmpsb
cmpsb
leave
lods
jno
inc
insb
nop
jl
xchg
loop
or
in
push
mov
push
aaa
ljmp
cs
movsb
sub
adc
xchg
insb
cld
aam
adc
or
gs
adc
out
mov
out
mov
cs
negb
mov
aas
inc
push
aad
frstor
jno
stos
in
mov
xor
pusha
jl
and
lret
or
inc
jb
out
xchg
inc
js
mov
lea
lea
mov
cmpsb
test
inc
push
lret
push
inc
jae
test
and
jb
daa
inc
add
sbb
jmp
mov
and
icebp
mov
and
sub
into
and
mov
call
call
jmp
xor
adc
nop
add
fisttps
loop
inc
xor
out
jp
mov
and
nop
data16
lods
in
add
mov
hlt
mov
mov
stos
adc
sub
testb
fcomps
sub
ds
sbb
fldcw
sti
inc
pop
mov
icebp
sbb
pop
dec
frstor
and
sbb
movlps
mov
xlat
call
xchg
fs
popa
stos
jle
lret
and
icebp
inc
push
jb
sbb
mov
enter
shll
add
stc
mov
insl
xchg
xor
pop
dec
lds
jno
jbe
lahf
mov
inc
mov
idivl
cmp
data16
repz
fdivr
inc
in
lea
call
xor
xor
inc
xrelease
loope
add
sub
adc
mov
pushf
jno
ficompl
jp
lds
push
jns
add
mov
lods
mov
ja
repz
mov
pop
outsb
dec
call
xchg
pop
leave
fdivr
push
lret
lock
mov
push
mov
push
add
punpckhdq
sbb
jg
mov
sub
gs
cmc
dec
pop
cmp
push
sub
pop
cmp
pop
negb
push
jae
sbb
mov
clc
inc
push
mov
add
and
sub
and
mov
idivl
sbb
sub
mov
insb
dec
addr16
cmp
xchg
in
sbb
xchg
pop
xor
arpl
sub
add
mov
or
mov
or
scas
jp
push
push
push
mov
xchg
inc
mov
ret
mov
lock
adc
out
movsl
fmul
insl
mov
rorb
scas
pushl
js
mov
or
or
jp
test
aad
inc
mov
insl
enter
je
and
xchg
in
jmp
fwait
inc
test
jns
aas
push
fstl
imul
xor
aaa
xor
lock
testb
adc
mov
xchg
hlt
and
mov
and
icebp
ja
mov
movsb
rorb
sbb
jne
dec
inc
cmp
push
popa
lock
mov
test
stc
jmp
push
inc
add
js
lcall
pop
mov
imul
loop
push
insb
std
fucomi
lds
cltd
sbb
in
mov
mov
ljmp
pushf
add
cmpsl
iret
aaa
mov
int3
mov
pop
and
xlat
push
sbb
in
popa
lcall
push
mov
pop
mov
data16
xor
call
mull
pop
into
lret
leave
sub
out
out
or
ja
test
imul
cltd
mov
pop
cld
sub
add
inc
sbb
aaa
xor
lcall
pushf
lcall
ds
lock
popa
xor
repz
mov
or
in
and
vcvtps2dq
nop
mov
mov
les
lods
imul
mov
mov
cmp
push
stos
and
outsl
add
or
pop
enter
cs
mov
and
popa
cmp
mov
pop
or
push
pushf
cmp
pop
or
cwtl
or
inc
shl
stos
push
loop
push
and
shll
dec
lods
push
in
test
enter
mull
pop
in
ljmp
imul
mov
inc
xchg
stos
sahf
mov
lock
insl
jns
rorl
fldenv
and
inc
fs
mov
icebp
testl
cmpsl
outsl
sbb
mov
jg
out
in
lods
sub
dec
xor
and
inc
out
jb
inc
fldcw
outsb
sbb
jl
das
mov
cmp
mov
sub
ud1
adc
push
ss
enter
ficoml
pop
lret
jg
jl
mov
test
mov
mov
xlat
nop
test
rclb
or
popa
icebp
sub
mov
xchg
mov
jle
lods
and
shrl
pusha
and
out
mov
push
fwait
mov
rcll
ss
jle
loop
cmpsb
rcrl
test
nop
inc
lahf
mov
pop
cli
cs
jg
gs
add
dec
clc
imul
fdivl
inc
mov
jno
icebp
mov
mov
dec
lods
ljmp
imulb
pop
iret
cmp
xchg
xchg
gs
sub
pop
loopne
int
outsb
aaa
pop
lea
sub
xchg
dec
orb
xlat
jecxz,pn
stc
enter
mov
sub
or
pop
out
add
dec
scas
sbb
sbbb
mull
fistpll
stc
and
popf
mov
or
adc
cmc
fs
dec
aad
dec
sahf
dec
push
std
in
mov
cwtl
push
or
mov
and
leave
cwtl
sbb
xchg
movsb
pop
inc
fcmovu
insl
stc
gs
jne
enter
not
dec
out
lret
mov
negb
je
popa
mov
hlt
cmp
ljmp
jge
xchg
add
test
popa
mov
mov
xchg
mov
push
movsb
sub
outsl
aam
stos
fcmovbe
insl
xchg
push
or
daa
xor
jle
mov
test
mov
sub
lods
pop
rcll
xor
in
in
inc
je
out
cmpb
sti
dec
nop
data16
jno
fistpl
mov
cwtl
push
std
fwait
jne
dec
mov
cmp
push
loop
push
stos
mov
sarl
sub
scas
stos
inc
push
mov
xor
sub
sahf
mov
jp
insl
jg
inc
xchg
xlat
sub
jae
xchg
ds
dec
sbb
mov
and
movsb
mov
sbb
rclb
jl
lahf
test
xor
ja
or
fildll
xchg
and
mov
lods
dec
out
cmp
xchg
addr16
push
push
gs
das
popa
mov
mov
mov
add
cmp
mov
xor
test
xor
push
and
adc
fs
mov
mov
pushf
cmp
xchg
mov
lcall
cmpsl
out
sahf
ror
lock
fidivrs
mov
aam
fdivr
test
jg
inc
jecxz
jge
or
add
insb
shll
sub
push
push
mov
ljmp
pop
inc
jle
gs
int3
sbb
sbb
in
add
ficomps
sbb
pop
jp
pop
xchg
sub
adc
pop
xchg
xchg
jp
imul
roll
xor
imul
or
in
inc
mov
xorb
dec
mov
xchg
iret
jmp
ret
sarl
cltd
sbb
mov
pop
adc
mov
mov
call
test
filds
bound
dec
fs
mov
mov
or
sub
pop
stos
mov
push
arpl
add
lea
ds
or
fwait
mov
lret
mov
loope
ljmp
pop
sbb
pop
xchg
push
pop
push
xor
inc
or
shrl
daa
ljmp
adc
arpl
lret
fstp
fimuls
dec
sub
pop
jno
or
mov
jne
mov
or
jne
in
lea
nop
push
test
test
inc
mov
jns
dec
imul
pop
cmp
test
lret
dec
mov
push
aad
ret
aas
mov
push
loopne
push
idivb
xchg
emms
sbb
aas
in
mov
insl
xor
sub
mov
movsl
shlb
fistl
loope
les
push
mov
in
inc
fwait
pop
inc
add
sub
scas
dec
cld
mov
pop
adc
xchg
mov
inc
in
nop
jge
lock
cmpsl
cmp
jmp
scas
mov
rcl
cld
sub
test
pop
jo
push
push
fs
adc
push
and
aam
or
stc
jmp
out
push
add
xor
jmp
pop
ds
inc
data16
and
out
xor
fisubl
jp
and
jo
mov
insb
jo
outsl
sub
addps
dec
pop
jle
test
mov
int
fwait
bound
cli
inc
inc
jg
pop
out
dec
jb
adc
cmpsb
lods
rol
lods
pop
xchg
adc
int3
lret
jge
jecxz
jnp
or
add
cmp
and
cmp
jg
add
cld
mov
movsb
mov
in
push
lods
push
lds
jae
ja
dec
aas
pop
jle
test
or
mov
pop
in
inc
jns
clc
mov
dec
out
mov
jmp
sti
push
adc
mov
xor
les
dec
inc
cmp
inc
ret
orl
adc
add
push
cmp
imul
adc
ret
outsb
clc
movsb
jnp
dec
test
js
imul
push
stos
jo
xchg
dec
mov
pop
inc
inc
or
xor
cmc
xchg
and
scas
cmpsb
xchg
xchg
or
fisttps
xlat
mov
in
in
sbb
sub
xor
jle
push
data16
and
movb
mov
mov
test
mov
sti
lods
lods
stc
mov
xchg
push
int
sub
mov
je
pushf
movsl
loop
pop
mov
fs
xchg
outsl
dec
push
sbb
sar
xor
push
scas
sub
sub
dec
xchg
ret
into
sbb
shlb
adc
orb
imul
and
pop
jle
xor
fwait
hlt
lock
out
xlat
dec
pop
xor
test
rol
into
pusha
jecxz,pt
addr16
jecxz
pop
addb
push
pop
stc
adc
shrb
adc
xchg
cmp
sahf
test
mov
lods
jp
mov
jns,pt
stos
cmc
hlt
lahf
imul
adc
loope
roll
int3
test
pop
cmp
jne
std
and
fsubl
sti
xchg
in
jo
mov
mov
pop
imul
sbb
cmp
push
add
add
adc
adc
xor
bound
jno
mov
push
movsb
cltd
int
dec
push
or
xor
jno
pop
xchg
and
sti
mov
inc
frstor
inc
xchg
mov
outsb
sbb
sub
jne
scas
adc
adc
icebp
imul
xorl
pop
pop
xor
scas
inc
jb
push
jle
inc
pop
jae
es
dec
rclb
mov
or
out
loop
xorb
jp
call
cmp
fwait
push
jno
cmp
jp
jle
push
mov
sub
push
adc
jbe
and
dec
cmp
mov
cld
hlt
cld
imul
jnp
movsl
pop
mov
lcall
sbb
stc
jmp
fnstcw
or
xor
dec
mov
sub
mov
mov
add
mov
xchg
enter
dec
or
dec
sahf
or
inc
das
fldl
icebp
mov
sub
sub
insb
leave
sub
sahf
xchg
add
dec
lcall
sbb
mov
pop
jae
lcall
inc
mov
in
std
xor
jmp
pop
scas
gs
adc
xchg
xchg
divl
ret
sbb
mov
fldcw
flds
imul
jp
mov
insl
movsl
mov
in
mov
movsl
cltd
movl
rorl
ja
mov
xor
xor
xchg
xchg
fs
test
aad
jp
std
mov
addl
rcl
fsubp
enter
das
sbb
pop
and
mov
push
pop
push
add
dec
push
push
aam
xchg
fimuls
sub
data16
call
aam
sub
stc
aas
or
test
sbb
pop
lea
jb
dec
aad
xor
xchg
xchg
cmp
xchg
and
and
shl
pop
fcmovnb
cmpsl
in
lods
add
push
adc
jb
js
add
daa
and
adc
shr
testb
nop
out
or
mov
dec
or
add
cmp
jno
add
hlt
imull
ljmp
and
dec
inc
loopne
add
sub
lds
adc
push
pop
adc
sub
cmc
cmp
mov
or
xor
dec
insb
iret
fistps
push
out
push
dec
lahf
repz
ljmp
jmp
adc
cld
in
sbbb
les
push
jg
or
pop
dec
lea
dec
dec
ss
imul
sti
xor
mov
pop
adc
aaa
sahf
sub
pop
xor
jl
cmpsl
call
repnz
push
push
test
ret
jns
dec
in
nop
sbb
aad
das
repnz
inc
orl
and
adc
addr16
push
push
xlat
xchg
xchg
cmpb
push
mov
inc
mov
cmp
mov
inc
movsb
add
shl
fwait
sbb
pop
inc
insb
ss
push
scas
dec
push
into
xor
pop
shl
xor
inc
push
jg
sbb
mov
inc
mov
ficoml
mov
xchg
sahf
push
aaa
sub
jne
movsb
shlb
fimuls
and
ficompl
xor
mov
jb
jecxz
shrb
cmp
mov
inc
leave
mov
cmp
inc
int
and
xor
xchg
inc
cwtl
js
insl
fisttpll
scas
into
imul
aam
add
dec
dec
int3
inc
xchg
or
fbld
add
mov
add
repz
mov
mov
lock
nop
pop
loope
push
stos
int
mov
andl
mov
jne
imul
popa
insb
dec
in
aam
mov
mov
iret
push
mov
push
in
and
in
and
and
jo
icebp
fmuls
push
adc
push
mov
pop
std
pusha
push
pop
cmp
xor
loop
dec
push
inc
dec
lds
mov
fsts
addr16
add
adc
fs
mov
test
mov
js
pop
adc
push
call
into
dec
test
ficomps
scas
rclb
icebp
jmp
sbb
jns
push
mov
mov
lcall
stos
push
loop
and
adc
pop
pop
sub
lahf
jg
daa
in
lods
pop
mov
popf
mov
dec
sahf
adc
jge
aad
dec
mov
dec
pop
and
inc
mov
fisubs
in
mov
sub
iret
rcr
stos
mov
jg
lods
push
in
xchg
or
fucomp
pop
and
pop
cli
xchg
xor
call
repnz
ret
adc
mov
pop
mov
mov
jno
xchg
push
cmp
jbe
jae
inc
std
push
and
test
add
pop
mov
dec
mov
cmp
jmp
jecxz
pop
dec
insl
add
ss
mov
rcll
xor
sbb
sbb
cwtl
stos
push
sti
lea
mov
xor
or
inc
jb
shrb
outsl
adc
or
hlt
adcb
lock
fwait
pop
dec
shll
xchg
in
stc
js
int3
xor
xchg
mov
mov
stos
mov
or
or
xor
mov
xrelease
mov
mov
add
pop
cmc
jne
sarl
je
mov
xchg
incb
repnz
ljmp
and
shrb
cmp
cmc
shlb
xlat
pushf
pop
or
test
mov
in
sub
pop
jmp
inc
xchg
test
inc
push
xchg
out
cli
shrb
fs
in
pop
call
sbb
ret
push
xor
out
aad
lods
in
loop
test
ret
mov
sbb
sbb
sbb
es
idiv
xchg
dec
fs
and
xor
pop
mov
jle
or
dec
mov
and
daa
dec
add
mov
std
or
stos
jp
jecxz
shll
hlt
jne
nop
jl
aaa
dec
mov
pinsrw
loope
enter
fstl
cmpsb
arpl
loop
sub
loop
push
out
fwait
jp
or
or
add
ret
data16
sub
dec
fcoml
mov
jle
dec
mov
add
pop
sbb
cmp
shrb
adc
fwait
mov
test
movsb
add
scas
nop
addb
in
xorl
dec
and
pop
sub
cs
mov
mov
ljmp
in
push
loopne
ret
inc
and
jbe
test
pusha
jnp
mov
inc
fimuls
cs
movl
cmp
and
imul
xchg
mov
cli
fs
cmc
lods
es
cltd
sub
or
mov
and
bsf
mov
push
les
cmp
dec
adc
pusha
sbb
je
jb
dec
cltd
into
js
scas
and
jbe
pop
outsl
jb
ret
imul
or
pop
stos
sub
xor
push
sbb
movsl
push
comiss
dec
push
aas
fsubrl
test
xor
push
or
roll
fadds
out
loopne
movsl
adc
or
pop
push
rcr
jb
push
jp
inc
fcmovnu
inc
mov
xor
fsts
push
add
mov
subb
icebp
test
or
pop
rcr
cmp
cmp
rorb
stc
fwait
or
cmp
flds
fnstenv
cld
inc
les
scas
popf
mov
shrl
jl
mov
fidivl
insl
clc
xchg
ret
mov
lret
cmpsl
mov
push
sbb
or
lea
push
push
or
repnz
cmp
subb
cmp
popa
sub
sub
cmp
cwtl
loope
cli
mov
iret
and
push
mov
in
test
hlt
push
in
pushf
ja
mov
lahf
pop
cld
sub
sbb
out
decb
inc
fsubr
xchg
scas
mov
xchg
test
fdivl
sbb
or
outsl
sar
rclb
pop
mov
adc
and
cwtl
mov
or
jmp
decl
cmp
xlat
enter
sub
lods
xor
rolb
loope
mov
mov
jnp
jmp
btc
adc
jp
es
inc
mov
negb
stos
loopne
mov
call
jo
sub
sub
es
test
cli
xchg
orb
popf
imul
add
gs
jmp
cli
mov
and
inc
mov
fyl2xp1
xchg
dec
fcompl
testl
int3
fdiv
lock
sbb
sbb
fwait
pmullw
xor
inc
or
cmp
jmp
cld
lods
mov
outsl
ret
leave
je
data16
cwtl
dec
mov
jb
xchg
sub
pop
cmp
jge
outsb
push
in
es
mov
sbb
sub
xor
cmp
popf
cmpsl
cmpsl
cmp
adc
cltd
xchg
out
sahf
sub
xchg
jno
aam
mov
cmp
cmpsl
inc
push
loopne
sub
fisubrs
rcll
push
movsb
test
icebp
push
iret
mov
outsb
xchg
clc
or
adc
sbb
enter
mov
shr
mov
jp
push
push
or
mov
jmp
pop
jns
mov
xchg
insb
push
fistpll
xchg
xchg
fwait
cmp
or
jg
test
mov
jp
jns
pcmpgtb
test
fsub
test
sti
mov
fs
jp
lods
mov
shrl
js
and
or
ret
cmp
mov
push
jne
sahf
adc
jns,pt
pop
xor
lcall
repz
pushf
aaa
push
or
xlat
ret
cmp
std
xchg
orl
push
lds
aas
adc
mov
icebp
xchg
sub
subb
or
mov
js
pop
adc
dec
pop
push
sub
out
jb
mov
cwtl
xchg
jno
pop
sbb
aam
adc
bound
lcall
pop
fstpl
xor
adc
in
sti
push
sbb
hlt
sub
xchg
push
test
push
rcrl
cmp
test
popf
shll
dec
addb
dec
cmpsb
cmp
inc
xor
jnp
clc
add
addb
ja
cmc
or
cmp
in
in
shlb
jle
mov
pop
jge,pn
imul
adc
push
jo
jmp
inc
push
mov
sahf
lcall
sbb
fimuls
mov
fnstsw
sar
in
pop
inc
cmp
push
fdivrs
inc
mov
inc
ret
loope
or
gs
outsl
fsin
mov
ljmp
and
sahf
add
inc
jne
int
fucomi
pop
testl
push
imul
es
lret
mov
test
sub
add
pop
cmp
insl
lret
cmp
stos
pop
mov
imul
fistl
xor
adc
pop
mov
sub
test
push
add
add
sti
loope
fldt
cmpsb
rolb
dec
pop
shr
mov
add
int3
stos
cmpsl
loop
outsl
or
std
mov
sub
cmpsl
cmp
sub
jbe
and
push
outsl
into
jno
test
call
pmuludq
addb
ret
jge
and
outsb
ss
lret
push
or
loopne
out
sub
sub
movsb
orl
shlb
jb
mov
or
cli
stos
push
jmp
adc
push
xchg
stc
add
fiaddl
push
inc
scas
mov
mov
mov
bound
mull
outsb
cmpsb
cmp
fcomps
cwtl
dec
xchg
scas
or
sub
xchg
popf
stos
inc
adc
inc
add
pop
filds
mov
sbb
ficoml
and
or
sub
jno
adc
das
mov
mov
push
mov
dec
adc
sbb
fildl
add
filds
lods
clc
ret
dec
jg
outsb
lea
dec
inc
pop
jae
and
xchg
xor
push
push
loop
js
dec
into
mov
lcall
xor
popa
xor
outsl
fwait
mov
push
push
aaa
fnstsw
jle
popf
mov
cmp
or
jnp
inc
inc
out
jbe
mov
jg
adc
mov
inc
inc
mov
mov
mov
enter
dec
fisubrs
adc
xchg
lds
xchg
cmp
cmpsl
push
sub
cmp
cs
mov
mov
mov
xor
roll
jmp
mov
fsubp
sbb
inc
aam
icebp
pop
pop
arpl
fcomps
adc
or
mov
lahf
dec
pop
mov
jg
push
fcomi
xorl
pusha
les
sub
add
sub
inc
mov
inc
lock
outsl
pusha
xchg
jge
mov
add
mov
pop
inc
sbb
popa
mov
loop
jae
jne
pop
sti
mov
int3
dec
or
sub
cmpsl
bound
leave
jmp
dec
jne
hlt
fs
std
jbe
mov
repnz
pop
out
es
jnp
lea
fsubrs
or
inc
inc
push
sbb
pop
jae
push
push
mov
jmp
mov
and
jp
sti
push
mov
divl
mov
in
mov
jo
mov
cmp
adc
cmpsb
lahf
sub
mov
sbb
jno
aas
mov
out
dec
push
enter
pop
shll
dec
call
and
ret
cmpsb
xor
mov
dec
xor
out
push
into
sahf
icebp
insb
in
movsl
sbb
inc
aas
lock
sub
add
addl
pop
aaa
outsl
out
ds
mov
dec
cld
cli
into
rorb
add
adc
rolb
jge
pop
iret
outsl
aas
imul
lds
xor
sub
inc
jo
xor
les
shll
scas
jmp
test
dec
add
or
lock
decl
iret
mov
iret
mov
enter
lret
xchg
cmp
ret
icebp
addr16
push
and
cmp
adc
add
xor
and
or
jp
cmpsb
dec
pushf
sub
bound
test
push
mov
sbb
cmp
sub
ss
push
fcompl
xchg
nop
lds
push
push
push
or
push
shl
inc
jo
cld
mov
shl
pop
subb
jl
call
jmp
std
scas
mov
or
xchg
push
inc
push
add
cmp
lods
js
arpl
add
or
add
xchg
mov
push
dec
jb
addb
ljmp
test
imul
sub
lahf
cmp
and
rcll
add
cmp
popa
jmp
call
or
add
lret
pop
shr
and
aad
mov
or
xchg
stc
movsb
pop
and
addr16
ss
mov
mov
push
sti
jnp
jecxz
xchg
jmp
pop
shl
adc
mov
rcrb
dec
lods
dec
add
sub
imul
adc
pop
loopne
mov
stos
mov
repz
mov
jne
mov
inc
adc
ret
repnz
sbb
fisubs
loop
shl
scas
lods
popa
and
jecxz
adc
dec
dec
das
gs
pop
rcrb
mov
adc
inc
or
sub
pop
cmp
adc
out
push
repnz
js
pop
inc
mov
jae
loopne
xchg
mov
int
or
ret
mov
nop
and
jg
aaa
mov
or
shll
mov
xor
pop
movsw
add
data16
inc
js
mov
aad
fstps
repnz
mov
mov
xor
inc
sar
xor
aaa
mov
int3
dec
rcrb
scas
test
inc
mov
pop
mov
jno
jnp
and
fs
pop
xchg
add
mov
int
jmp
adc
outsl
and
jecxz
lret
sub
sub
push
push
adc
and
and
mov
add
sahf
insl
cmc
testb
inc
pop
dec
shlb
xchg
adc
sbb
xchg
adc
dec
push
pop
sub
iret
sub
mov
nop
cltd
das
adc
cmp
lods
push
fmull
ror
mov
cmp
roll
mov
and
mov
mov
rol
cld
cmp
out
lds
mov
out
inc
cmpl
add
int3
ret
jbe
pusha
bswap
negl
pop
loope
lret
dec
lret
push
inc
rolb
imul
xchg
or
jl
out
fcompl
es
insl
sarb
push
mov
jmp
int3
pusha
test
jnp
mov
rcr
add
lods
scas
add
add
popa
dec
adc
or
mov
loop
mov
xchg
ljmp
add
pop
or
xor
xorb
rdmsr
mov
inc
jge
sub
cmp
dec
mov
decb
mov
sarl
and
les
andl
fstl
in
add
movsb
mov
sbb
inc
subl
mov
xlat
in
xchg
imul
loop
dec
fcmovbe
cmpsl
jbe
dec
xor
fadds
inc
add
ret
pushf
ss
int3
xor
mov
or
outsb
xchg
pop
imul
cltd
stc
dec
and
pushl
incb
or
push
cmp
adc
cmpsb
mov
aad
dec
and
repnz
clc
pop
pop
mov
ljmp
xor
pop
cltd
xor
mov
pop
repnz
push
inc
cmp
inc
or
xlat
mov
pop
sub
popa
loope
fidivrs
mov
jb
pop
cmp
repz
jne
aam
jecxz
mov
and
popf
je
fldenv
xor
icebp
push
popa
inc
xchg
addb
ljmp
cld
out
and
push
xor
ret
push
push
pop
mov
mov
or
std
cmp
dec
lds
add
stc
in
lahf
add
cmp
xchg
out
rcrb
fmull
pop
pop
jmp
andb
jns
jecxz
jno
xlat
loope
mov
loope
test
aam
fs
aad
ffree
out
rorl
jecxz
xor
cmpsl
jle
xor
jmp
push
pop
test
add
test
sbb
pop
push
jmp
lods
lret
push
insb
call
sbb
andl
and
fildl
add
sub
jp
call
adc
test
ror
imul
mov
lahf
and
sar
pop
jecxz
add
fs
movsl
dec
cs
cmp
adc
xor
or
xor
and
fimuls
or
orb
icebp
in
iret
scas
idivl
mov
insl
mov
lods
cmp
enter
and
pop
push
fsubl
cmpsl
xor
jb
xor
mov
sbb
ljmp
mov
adc
ja
ss
out
test
jle
mov
dec
in
fs
xor
gs
pop
xchg
stos
das
push
popa
xor
fisttpl
out
outsb
les
push
test
sbb
test
sbb
orb
or
out
xchg
push
nop
cmp
je
jb
and
sub
dec
inc
lahf
cli
repnz
dec
push
jno
es
mov
movsl
xchg
pushf
outsb
jmp
add
hlt
cmp
aam
iret
subl
lahf
stos
adc
jl
mov
or
jo
mov
imul
lahf
push
jg
sub
ffree
cld
movsl
and
push
cmp
and
mov
mov
xchg
push
dec
push
fadds
sub
lahf
mov
inc
pop
adc
sbbb
adc
mov
dec
rcrb
outsl
test
push
pop
inc
bound
mov
mov
test
pop
pop
cmp
mov
jbe
jno
ds
popf
test
fdivrs
jecxz
in
pusha
fadds
push
pushf
popa
arpl
aam
or
or
dec
fwait
jo
addr16
dec
adc
xor
add
outsb
adc
jle
add
sarb
push
mov
pop
jb
pop
mov
or
mov
loope
movsl
or
push
jo
xchg
in
fs
add
ret
aaa
iret
mov
mov
pop
repnz
mov
rolb
xor
cld
push
clc
jbe
stos
ret
fnstcw
ret
fcmovnbe
xchg
sti
fcomp
aas
fwait
pop
adc
xlat
in
push
dec
and
repz
decl
movsb
iret
add
adc
rcrb
bound
lahf
or
pop
insb
mov
cld
cs
aam
cli
lods
push
pop
jp
loope
mov
mov
pop
std
jle
sbb
scas
jne
inc
adc
movsl
mov
xchg
ret
pop
sub
in
sar
mov
xor
pop
lret
nop
sbb
jmp
pop
add
inc
roll
mov
cmpsl
dec
movsl
cmc
das
leave
imul
add
push
cmp
sub
repnz
jp
inc
mov
adc
and
repz
movsl
adc
dec
fwait
inc
jae
jg
scas
pop
std
mull
jle
inc
fsub
std
xchg
fistps
pop
imul
inc
test
es
fsubrl
push
insl
and
cltd
scas
ss
ljmp
xlat
pusha
out
dec
pushf
jle
fstps
jns
je
daa
fadds
jne
mov
mov
and
pop
scas
sub
and
insl
lea
pop
push
je
dec
mov
and
clc
push
sbb
fucomp
mov
lea
cmp
mov
and
outsb
pop
insl
jp
insb
aad
or
pop
push
mov
mov
add
or
js
add
loop
dec
lcall
popf
jo
int3
and
loop
sub
mov
or
push
xchg
dec
sub
test
adc
ljmp
mov
inc
sub
insl
jbe
lods
shrl
fcomip
mov
mov
inc
clc
mov
out
pop
hlt
roll
lahf
jmp
aam
aad
push
pop
mov
sbb
cld
cs
and
aaa
pop
mov
push
cmp
dec
jmp
lret
cs
mov
repz
jmp
inc
nop
lea
pop
loope
mov
pop
add
and
loope
stc
cmp
add
jge
ja
push
lret
insl
pop
aaa
pushf
lret
iret
pop
lret
subb
mov
iret
fwait
popaw
sub
in
push
fldenv
out
cs
mov
out
push
lods
jae
or
cltd
xchg
jnp
aam
ret
repz
test
jne
xchg
sbb
bound
fdiv
jl
lock
jmp
cmpsb
push
shl
push
jl
xlat
in
ja,pt
idivl
cmp
loop
xchg
xchg
testb
mov
test
jbe
xchg
pushf
xchg
dec
imul
enter
jl
mov
rcr
js
jle
and
mov
sbb
push
and
lahf
xchg
cs
inc
inc
add
push
mov
mov
movsl
sbb
and
ror
jle
or
lods
mov
mov
push
aaa
fld
lock
push
fisttpll
inc
mov
movl
xchg
inc
jl
mov
jns
aam
loope
adc
pop
enter
loopne
in
scas
push
aam
push
popa
inc
pushf
mov
fucom
cmp
ret
aam
pop
cmp
das
push
dec
sahf
sbb
push
push
inc
add
xor
test
cmp
lret
scas
insl
mov
push
mov
push
mov
adc
outsb
push
iret
mov
xlat
jmp
int3
incl
rcrb
ds
imul
mov
jb
xor
pop
push
sbb
repnz
add
inc
scas
cmpsl
sub
testl
xchg
jecxz
mov
js
cmpsb
jl
loop
ja
lods
pushf
jmp
sbb
mov
mov
int3
adc
out
and
xchg
or
inc
dec
fwait
test
addr16
and
mov
int
dec
shr
std
pop
xchg
and
sarb
or
enter
sub
jb
lds
push
jp
jge
or
mov
nop
lcall
mov
and
add
cmpsl
dec
dec
dec
fwait
cmp
outsb
jb
loop
cli
cli
sti
loopne
dec
aaa
pop
inc
pop
xor
jbe
xor
xlat
mov
dec
mov
and
push
sbb
lds
cmp
mov
stos
js
pusha
lock
mov
cld
fists
fs
ret
xor
xor
mov
pusha
adc
mov
push
pop
and
ret
inc
aaa
lret
pop
test
imul
mov
imul
bsr
jbe
testb
and
sub
fwait
push
int3
cmp
hlt
outsl
pop
bound
jg
xchg
inc
push
xor
pop
push
lods
stos
cmp
mov
cmp
add
xchg
rcrl
fsin
mov
mov
test
push
not
jo
orl
sub
mov
mov
aaa
loopne
xchg
xchg
clc
lcall
add
pop
lret
xor
stos
jnp
sub
cltd
subb
out
inc
mov
lods
rolb
jae
jae
mov
cmp
adc
pop
mov
into
push
ret
lds
jne
or
dec
push
push
pop
push
or
fwait
pop
xchg
adc
push
sub
push
sbb
ret
inc
jo
test
fadd
jp
lcall
sbb
inc
std
and
sub
in
fimull
add
lea
push
jmp
xor
loope
mov
mov
mov
out
mov
cmp
fisttps
cmp
mov
inc
jp
iret
mov
outsb
lret
divb
popa
daa
mov
push
test
add
and
jnp
gs
or
inc
mov
add
xchg
je
es
hlt
jge
xchg
das
enter
pop
cli
xchg
jl
mov
pop
sti
test
push
cmp
pop
and
loopne
decl
cld
push
int
sub
mov
pushf
jns
jle
ljmp
sahf
adcl
inc
cmp
or
inc
scas
shrl
push
repnz
gs
insb
xchg
push
cmpsb
aas
loop
pop
nop
mov
call
jmp
loope
roll
add
loopne
mov
mov
pop
sbb
mov
inc
mov
mov
imulb
mov
dec
add
cmpsl
jge
imul
cmp
dec
jae
aas
fprem1
mov
into
ss
sbb
jae
das
jns
or
mov
sbb
pop
bound
pop
out
shlb
mov
movsb
mov
mov
fwait
xor
sbb
push
dec
dec
sub
jmp
xor
inc
fcomp
sub
cld
push
jo
sbb
dec
fsts
inc
jbe
mov
outsb
cltd
push
add
sub
shl
jne
cltd
jb
add
mov
aaa
clc
lods
and
mov
dec
jl
insl
adcb
imul
int3
arpl
xchg
movntq
arpl
or
inc
push
jb
test
mov
out
jnp
and
mov
mov
pop
mov
clc
test
pop
add
insl
aas
test
dec
add
fnsave
xchg
pop
rcrl
adc
cmp
call
sub
mov
mov
out
pop
rorb
repz
mov
xchg
aaa
inc
inc
sbb
cmpsl
gs
sbb
sti
test
in
fwait
sub
sti
into
inc
ret
inc
or
sbb
lods
adc
sub
push
les
flds
mov
sbb
popf
lods
insb
add
out
dec
cmp
testb
mov
shlb
mov
fisttpl
shll
jmp
push
inc
add
movsb
or
jno
pop
jns
push
inc
sbb
and
add
sub
je
je
jmp
aad
cli
lahf
fldenv
cltd
adcb
add
mov
fwait
pop
add
xchg
fdivl
sbb
dec
mov
ret
cmp
push
lret
cli
mov
imul
cli
mov
xchg
inc
mov
movsb
and
scas
gs
or
shlb
jmp
xor
aaa
leave
or
imul
jl
sahf
rcrl
mov
cs
dec
push
fbld
and
xchg
adcl
mov
pop
fstpl
outsb
testl
cmpsb
mov
int3
repnz
mov
popa
jl
mov
out
xchg
lret
fs
mov
push
repz
aam
hlt
std
push
jne
into
mov
fiaddl
fwait
jge
pop
and
lret
cwtl
imul
fildl
int3
scas
scas
std
push
mov
jno
fs
cmp
push
or
sub
inc
rdpmc
in
popl
sub
insl
push
int
adc
insl
jg
aam
push
adc
sbb
xor
test
enter
int3
mov
or
aad
cltd
inc
adc
sti
int3
fwait
movsb
fsubr
sub
sarb
inc
cmp
outsl
out
aas
lcall
mov
push
xor
pushf
popa
adc
adc
mov
pop
sbb
pop
ror
lret
adcl
stos
push
xor
mov
scas
js
inc
dec
hlt
orl
jp
pop
out
leave
cltd
pop
and
loope
pop
push
fimull
jns
sub
sbb
cmp
ret
push
or
mov
mov
cmp
sti
rolb
push
fldenv
imul
test
das
aas
test
inc
ds
sbb
jne
jecxz
mov
and
andl
adc
or
or
cld
mov
bound
push
outsb
push
inc
lret
sbb
int
mov
mov
add
lahf
sti
lock
inc
dec
shrb
aas
xchg
cmpsl
mov
lret
mov
pop
pusha
lcall
imul
scas
enter
push
pusha
dec
aam
dec
or
jecxz
imul
push
cmp
fildl
push
hlt
push
jae
add
ret
insl
jno
mov
mov
xor
sub
mov
xor
xchg
cmpsl
aaa
bound
xchg
ror
push
stc
xchg
cmp
mov
adc
add
mov
fidivrs
outsb
ret
clc
mov
inc
idivl
mov
insb
xor
sub
idivb
mov
int3
jno
leave
mov
sub
sub
jl
mov
cmp
push
inc
cmpb
cmp
nop
pop
pop
mov
in
cmp
adcl
adcl
jl
test
mov
fwait
stos
cli
fsubr
push
nop
in
xchg
push
mov
mov
inc
jo
sbb
dec
ret
es
lahf
sbb
xor
and
xlat
or
inc
pop
imull
push
shll
outsl
out
dec
sbb
cmp
ljmp
jmp
pop
pop
mov
loope
jno
out
pop
pop
push
sahf
jns
lds
rorl
fidivs
or
jg
fsincos
cmp
fsubr
sub
ret
add
ret
cmp
cmpsb
pop
out
mov
jge
dec
daa
lret
lea
cmp
push
jo
mov
aam
jle
loop
int
xor
dec
pop
push
jb
imull
sbb
cwtl
test
leave
icebp
das
adc
inc
and
add
ja
sbb
inc
push
addb
icebp
nop
adcb
mov
outsl
ljmp
insl
stos
mov
fucomi
sti
pop
adc
cmp
xor
loope
dec
dec
test
out
in
xor
jge
stos
stc
incl
arpl
loop
add
xchg
mov
dec
lock
push
jmp
popf
inc
or
xchg
mov
mov
sahf
jbe
daa
rorb
adc
dec
mov
sbb
jo
mov
sub
jmp
cmpsl
in
sbb
loop
scas
mov
push
inc
fsub
test
aad
test
gs
enter
les
mov
in
mov
inc
jmp
adc
lret
cmp
insb
adc
test
jmp
arpl
scas
add
sbb
pop
jnp
dec
lods
sbbb
push
inc
xchg
loopne
cmp
mov
jno
jne
adc
mov
leave
mov
roll
adc
andb
mov
inc
cmp
flds
push
je
xchg
in
sub
movsb
nop
add
in
or
ja
inc
mov
movl
movsl
scas
inc
lock
sub
test
in
dec
inc
lock
cli
mov
out
cmp
jle
ret
shll
or
daa
lret
inc
dec
push
xchg
pop
and
push
jns
jg
dec
jmp
fucomi
sbb
in
jno
fcom
icebp
mov
outsl
mov
dec
jl
or
iret
stos
fs
stos
mov
mov
mov
ljmp
push
jne
int3
cwtl
ljmp
cs
test
lods
rorb
jne
mov
mov
push
add
inc
lret
incl
insl
nop
in
fsubrl
fcmovnb
or
xor
mov
lret
mov
adc
cmp
dec
and
inc
jb
clc
pop
inc
fisttpl
shlb
push
xchg
and
push
jmp
or
cmc
xchg
mov
dec
out
xor
xchg
or
adc
jmp
xchg
repnz
aad
ljmp
jb
cmc
mov
nop
xor
popa
fwait
and
and
jns
dec
jb
cwtl
test
jmp
dec
inc
iret
jecxz
sbb
or
cmp
or
mov
xchg
xor
dec
call
in
pop
jb
adc
js
push
add
mov
scas
fstpt
aaa
das
cld
mov
and
xor
in
sub
mov
ficoms
movsl
xchg
cs
into
shll
xlat
mov
or
cmp
adc
adc
sbb
xor
dec
pop
fistl
and
cld
dec
jno
lcall
or
aad
lahf
ret
mov
adc
adc
push
call
jno
dec
decl
in
push
lods
mov
pop
jae
sbb
or
in
inc
xlat
mov
cmp
add
call
xor
inc
mov
ss
dec
push
inc
jecxz
pop
outsb
adc
repnz
mov
adc
jmp
into
in
ret
cltd
and
ret
insb
imul
cmp
cmp
mov
addr16
and
fiaddl
sub
cmpsl
cs
adc
mull
test
jo
xlat
aad
dec
xlat
add
insb
sarl
cwtl
xor
nop
pusha
outsb
pop
or
ja
jne
fldt
mov
sbb
imul
shl
out
xchg
pop
icebp
test
ret
insl
sub
pop
mov
xchg
xlat
lret
pop
pop
add
aad
sbb
jmp
pushf
fdivs
leave
dec
fs
pop
pop
inc
pop
add
cmp
subl
dec
push
aam
push
adc
mov
mov
fbstp
jno
js
in
and
les
inc
popa
stos
add
pop
mov
fcoms
out
ret
rclb
hlt
sub
js
das
into
cmc
mov
pop
repnz
cmp
inc
test
mov
xchg
push
xchg
in
sbb
bound
xchg
inc
push
xlat
jbe
sub
cmp
imul
sbb
inc
lcall
arpl
lea
push
test
in
sbb
inc
ss
pop
inc
or
mov
cmp
cmp
lcall
mov
sub
roll
pop
arpl
and
cmp
inc
pop
xor
out
lods
mov
dec
pop
lcall
ret
sbb
cltd
iret
inc
pop
mov
enter
out
adc
mov
cmc
xchg
popa
mov
nop
loope
aaa
psllw
shl
and
cmc
jns
push
push
mov
xchg
xor
mov
mov
or
sbb
adc
xchg
push
movsl
adc
jecxz
addr16
cmp
stc
pushf
add
insl
or
sbb
or
dec
jo
and
xlat
fisttpl
add
shr
addr16
and
xchg
mov
mov
mov
xor
mov
pop
mov
bound
inc
pop
pop
adc
test
das
xchg
out
mov
xor
push
xchg
adc
cmp
leave
sarl
icebp
add
movsb
inc
pop
setge
inc
xchg
lret
inc
int
imul
cmpsl
enter
in
xor
enter
bound
fldenv
icebp
loope
cwtl
int3
enter
orl
rorb
cmp
xchg
and
js
out
leave
repz
js
cmp
lods
sub
mov
or
add
in
rcll
xchg
jecxz
push
shl
enter
sub
in
icebp
push
rorl
pop
fsubr
stos
sub
lods
add
loop
sbb
adc
into
mov
fmuls
xchg
mov
push
dec
or
ja
sti
mov
movsb
pop
ret
pushf
dec
ss
mov
fildl
sbb
cmp
xchg
roll
sbb
xchg
sub
mov
insb
ds
fs
sub
dec
es
stos
and
dec
incl
leave
cmpsl
sub
test
cmpsb
sub
je
ss
mov
fistl
aas
les
or
pop
movsl
sbb
lcall
push
dec
mov
add
sbb
cmp
ror
sbb
loopne
fwait
jae
stos
adc
push
stos
or
fidivs
mov
inc
lret
jae
shlb
das
dec
mov
ljmp
sub
in
mov
mov
sub
test
out
insl
mov
adc
and
jmp
filds
stos
aaa
std
outsb
xchg
hlt
jge
js
in
popa
lock
fcomp
sbbb
xchg
mov
rcrb
leave
mov
and
xlat
stos
sub
add
mov
sbb
xor
xchg
sub
mov
clc
mov
xchg
hlt
test
fnstsw
push
les
mov
add
ficoml
push
pop
aas
je
repz
fwait
into
sub
ss
movsl
or
xor
stc
shlb
test
ret
dec
arpl
xor
das
aad
and
lods
adc
mov
lcall
mov
aas
dec
xor
mov
pop
stos
push
stos
arpl
cmp
lahf
cltd
mul
or
lahf
or
repnz
nop
cmpsl
or
orb
adc
sbb
inc
adc
test
push
out
sub
neg
aam
mov
js
mov
add
mov
sub
popa
mov
stc
xchg
stos
fstps
or
lret
insb
sub
bound
jg
xor
or
add
dec
fstl
xchg
push
xchg
mov
push
sub
cmp
jp
fwait
xchg
sub
mov
loope
adc
mov
inc
dec
stc
jb
ret
and
cmp
repnz
enter
adc
push
lret
sbb
jns
incl
mov
lds
add
ds
popl
rcrl
fs
sub
faddl
popf
push
xlat
cld
arpl
or
ja
mov
mov
mov
cli
xchg
ljmp
sub
jl
or
lea
int
out
jns
bnd
test
and
xchg
fwait
cmp
sbb
or
cmp
jno
sbb
call
xchg
cmp
mov
or
fdivrl
js
xchg
push
and
sarl
xor
push
mov
aad
mov
xchg
push
sbb
filds
and
fwait
cwtl
icebp
stos
aad
rcrl
jae
stos
sarb
cmp
pop
push
aas
pop
pusha
enter
pop
out
mov
push
jecxz
xor
jmp
dec
rcll
jbe
les
cltd
dec
dec
pop
popl
lret
arpl
jg
mov
mov
jbe
sbb
or
xchg
cmc
sub
into
xchg
stos
movsb
xor
sbb
sub
push
sbb
aas
sahf
cmp
jp
insb
or
inc
arpl
add
xchg
mov
inc
dec
pusha
call
inc
pop
outsb
sbb
mov
pusha
inc
cmp
push
cmpsb
je
dec
ds
rcll
jp,pn
rcrl
pop
test
es
lods
mov
insl
repnz
rcll
or
mov
popa
push
gs
inc
inc
sbb
int
or
fildll
js
sbb
and
xchg
arpl
arpl
les
mov
popw
push
cmp
aam
ja
cmpsb
sbb
das
xor
je
mov
and
pop
inc
mov
int3
ret
mov
or
mov
xor
mov
aaa
inc
outsl
loopne
pop
xchg
mov
in
jns
dec
and
in
pop
and
inc
jnp
mov
scas
data16
xlat
nop
mov
fwait
sbb
jle
fdiv
or
aaa
cs
clc
pop
inc
fildl
push
das
in
repz
outsb
adc
adc
mov
push
cmp
mov
push
call
mov
ret
repz
rclb
sub
add
mov
in
lcall
xor
stos
sub
ror
push
fistpl
and
shlb
into
divb
lahf
push
out
add
mov
in
and
pop
pop
xchg
pop
lds
and
mov
push
icebp
push
cmp
rolb
cltd
imul
cmpsb
push
lcall
xchg
jmp
push
int3
popf
pop
cli
lds
ljmp
outsb
mov
aas
outsl
adc
shlb
and
pop
jl
lahf
fadds
popf
cbtw
arpl
dec
scas
daa
frstor
call
xor
mov
sub
mov
mov
jbe
or
push
mov
pop
dec
das
repz
fwait
push
test
inc
movsb
mov
test
sar
xchg
jecxz
aas
dec
push
bswap
cltd
out
iret
xor
out
push
jmp
sub
mov
mov
jnp
leave
or
sub
xor
negl
xchg
jmp
aam
mov
lret
mov
es
sbb
mov
lods
mov
mov
mov
push
scas
pop
std
dec
les
mov
test
adc
sahf
sub
push
dec
sub
js
ja
das
imul
inc
cwtl
mov
stos
scas
in
leave
xchg
leave
cmp
xor
mov
out
mov
xchg
sbb
mov
out
mov
enter
pop
lods
ja
fdivs
sbb
inc
jae
test
push
dec
jle
jmp
les
inc
popa
mov
fs
or
pop
rcrl
rol
xchg
lahf
xor
aad
nop
daa
je
mov
pop
xor
popf
xchg
sti
xor
pop
es
pusha
mov
fcomps
orl
mov
push
cltd
mov
jns
fdivrs
dec
mov
dec
push
jl
rclb
mov
inc
fidivl
jp
push
out
sbb
pop
mov
in
push
arpl
xor
dec
pop
in
rclb
xor
cltd
mov
leave
into
jmp
push
cltd
mov
mov
call
cwtl
es
nop
mov
pop
mov
push
test
movsb
addl
iret
push
out
out
push
and
loop
xor
pop
xlat
mov
stos
xor
dec
xor
repz
mov
xor
mov
stos
mov
repz
mov
pop
cld
add
shrl
push
int
xchg
adc
pop
mov
mov
inc
test
mov
roll
xlat
enter
xor
mov
in
shlb
and
in
popa
dec
enter
mov
pop
cmp
cmpsb
mov
mov
out
sbb
cltd
fnstcw
or
stos
lock
stos
sbb
frstor
pop
daa
inc
mov
cmc
mov
jge
out
mov
xlat
fucomp
mov
mov
mov
scas
nop
repnz
cmp
test
lea
cmp
jnp
ljmp
xchg
aad
xchg
cmp
out
mov
push
ds
inc
pop
fmuls
movsb
in
pop
xor
movsb
mov
push
sbb
adc
jl
push
mov
js
sbb
mov
js
movsb
mov
scas
cmp
mov
sbb
mov
call
fistps
aas
imul
scas
stos
push
fldt
or
adc
push
xor
inc
test
sbb
femms
call
leave
mov
mov
push
inc
sbb
jno
clc
mov
bnd
pusha
mov
lds
flds
mov
nop
inc
pop
nop
sub
in
inc
mov
sub
mov
adc
mov
test
leave
xor
mov
mov
fsubl
fldenv
fmuls
popl
jle
xchg
rol
push
mov
and
xor
mov
pop
cwtl
sbb
or
cmp
fisubrs
mov
lcall
cmp
je
inc
imul
inc
push
lret
dec
lretw
add
lret
dec
push
insb
in
aaa
mov
push
pop
hlt
add
jns
xor
dec
pop
sbb
int
push
ss
push
mov
std
ret
dec
pop
dec
jae
mov
ja
adc
inc
push
lahf
fimull
scas
lods
mov
rolb
repnz
cmpb
ret
mov
js
imul
pop
outsl
pop
fs
xchg
mov
mov
fsubrs
add
jge
sub
xchg
pop
dec
or
stos
xor
enter
mov
mov
call
ror
popa
mov
movsl
dec
aam
repz
pushf
xchg
push
sbb
xor
bnd
add
add
leave
movsb
mov
ror
fildll
jecxz
sub
xor
adcb
sti
cli
test
sbb
mov
push
sar
pop
aam
xchg
adc
and
xchg
push
pushf
pop
cmp
dec
dec
xor
dec
cmpsl
add
test
addr16
insb
inc
xchg
adcb
inc
jmp
jg,pn
test
cs
push
aas
add
loop
loope
mov
out
mov
dec
xor
movsl
movsb
pop
pop
mov
fbld
sub
jne,pn
fsub
jae
mov
aas
add
cmp
sbb
fisubl
roll
pop
sbb
sbb
add
stos
pusha
mov
in
cmpsb
xchg
mov
stc
mov
pop
xor
push
lahf
xchg
jecxz
mov
andb
xchg
ret
scas
xchg
cld
lods
lea
jmp
push
icebp
shrb
roll
lods
in
daa
sbb
dec
add
xchg
mov
loope
inc
cmpsl
mov
sbb
mov
idivl
jno
iret
adc
stc
insb
movsl
push
lock
xor
pushl
les
out
xchg
dec
jb
mov
enter
mov
xchg
int
xor
mov
mov
aam
pop
mov
cltd
cld
mov
mov
ljmp
sub
jmp
cltd
outsb
or
mov
xchg
inc
xchg
jo
mov
and
adc
push
sub
insl
notl
mov
sbb
xchg
mov
adc
push
aam
cmp
sbb
adc
out
inc
ror
pop
stc
add
loop
mov
sbb
lock
dec
add
mov
lds
add
scas
pop
pop
shl
dec
push
ds
cmp
cld
push
mov
int3
mov
add
mov
xchg
mov
insl
jmp
pushf
adc
mov
inc
inc
imul
mov
adc
and
xor
cmp
int3
movsl
add
mov
or
test
xor
int3
mov
cwtl
inc
popa
sahf
push
fldcw
jnp
pop
in
jp
arpl
mov
dec
sub
lds
cli
push
push
pop
mov
xchg
mov
leave
scas
jmp
les
imul
jl
pop
jno
add
js
push
lahf
jmp
aaa
push
xor
push
movups
addb
test
leave
mov
mov
xchg
cmpsl
pop
jo
add
push
popa
call
push
jno
push
testb
in
inc
shl
push
ss
mov
xchg
jnp
mov
cmc
cs
popa
in
jb
add
inc
in
cs
lahf
enter
sbb
sbb
mov
mov
push
xchg
repz
test
nop
jo
loope
mov
fldl
lea
adcl
xchg
xor
pop
jle
scas
or
outsb
inc
xchg
jae
sub
cld
mov
insb
sub
pop
sub
cmp
push
dec
sub
cli
jp
cmp
dec
stos
mov
andl
mov
and
fs
shr
cltd
push
sbb
mov
push
push
sub
enter
mov
ds
mov
pushf
movsb
mov
push
xchg
mov
adc
dec
mov
cmp
imull
idivb
test
or
or
push
cs
adc
xchg
push
es
sbb
mov
adc
out
scas
mov
push
lock
fbstp
movsb
mov
push
mov
jae
fstps
jecxz
iret
xor
cmpsl
lods
and
les
es
cmp
shr
inc
iret
jne
stos
xor
adc
popa
jle
arpl
xchg
inc
and
jo
add
sub
ss
stc
push
dec
or
pushf
aaa
push
roll
fists
scas
inc
mov
inc
inc
insb
negb
mov
test
pushf
subb
dec
sarb
mov
stc
cld
shrb
pop
faddp
imul
dec
push
loope
lea
arpl
fisubl
cmpsb
mov
pop
loop
data16
js
dec
outsb
xchg
test
mov
sub
je
outsl
scas
xor
add
ja
daa
cltd
int3
aas
bound
insl
adc
push
in
out
lds
cwtl
mov
xchg
shll
loopne
call
lea
inc
mov
fs
mov
test
lret
pop
insb
unpcklps
jns
lcall
push
jne
int3
jno
jne
sti
arpl
fwait
ljmp
or
xor
sub
fisttpll
jnp
mov
xchg
jnp
mov
add
mov
mulb
scas
imul
and
popa
push
mov
push
and
xchg
gs
mov
dec
mov
jl
fsin
testl
adc
call
das
jl
mov
jge
jae
dec
sbb
aaa
push
dec
push
movsb
mov
into
psubusw
push
or
jne,pn
adc
in
jnp
sub
in
pop
jns,pn
xchg
sbb
xchg
mov
movsl
pop
clc
add
and
cli
cmp
cmp
das
pop
pop
fildl
sbb
sub
js
pop
gs
mov
mov
stc
xor
pushf
push
inc
movsl
lret
das
and
pop
or
dec
bswap
dec
cmc
add
enter
outsb
mov
cmp
jge
mov
mov
fistpl
mov
fwait
dec
imul
pop
es
adcb
sbb
push
mov
push
pusha
sbbl
jge
mov
mov
mov
mov
mov
and
cmpxchg
ljmp
les
mov
pop
sbb
out
lcall
scas
inc
dec
mov
popa
jge
jno
xchg
lret
push
push
and
dec
lock
push
fcompl
dec
mov
and
pop
push
shll
push
test
adc
or
imul
test
and
repz
icebp
addr16
cmpsb
jnp
cltd
dec
jge
pop
inc
cmc
xchg
xor
jle
aad
dec
sbb
dec
sbb
jg
movsb
icebp
adc
xchg
js
divl
dec
into
mov
das
jg
push
sub
pop
notl
movsl
jg
mov
adc
cmp
add
out
addl
mov
fidivrs
ja
mov
data16
lcall
sub
fidivrl
jb
push
das
xor
sbb
push
repz
sbb
ljmp
dec
jl,pt
xor
pop
pop
shl
pop
divb
test
xor
cmc
bound
xchg
xchg
icebp
xor
sub
std
dec
sub
lahf
fucomi
aaa
and
scas
pushf
jnp
aaa
mov
lods
icebp
fistpl
js
psubq
in
divb
push
fcomps
adc
or
int3
outsb
rcrl
lea
in
or
fdivl
test
jmp
sbbl
aam
lahf
loop
movswl
movsl
aaa
shl
mov
push
ljmp
push
test
xchg
icebp
cmp
movsl
or
push
and
mov
push
movsb
xor
imul
imulb
mov
ret
or
pop
dec
or
repnz
jp
pop
mov
pusha
jmp
adc
push
cmp
jae
jge
add
xchg
sbb
push
jno
mov
mov
negb
aaa
dec
or
popf
push
add
add
frstor
je
negb
rcrb
out
sub
cmp
mov
dec
shll
mov
fwait
pushf
push
sub
enter
lret
jle
and
imul
xor
sbb
mov
cs
sbb
jmp
mov
fidivl
stc
mov
lods
pop
jl
fildl
ja
mov
fadds
mov
dec
sbb
add
or
mov
enter
mov
mov
cmc
push
jl
fisttpll
gs
push
testb
cmc
sti
ret
fwait
imul
cs
sub
jno
daa
inc
push
lods
repz
mov
stos
mov
mov
push
aas
idiv
cltd
dec
pushf
pushf
rcll
inc
mov
mov
dec
shrl
jmp
out
subb
cltd
pop
inc
jno
jns
rorb
sub
add
mov
daa
fs
xor
fbld
mov
fidivrl
fcoms
ss
mov
inc
movsl
xchg
psllq
adc
outsl
inc
andl
jl
mov
stos
faddl
fwait
test
rorl
sbb
jmp
ds
cltd
xor
pop
push
push
or
pop
lods
push
sti
push
bound
push
jne
test
pop
sti
dec
sbb
cmp
scas
pop
pop
jecxz
xor
push
mov
nop
push
add
dec
lods
jle
aam
ret
push
inc
jo
mov
jae
aam
push
out
ljmp
adc
mov
or
sti
xchg
and
pop
shll
jge
cltd
mov
dec
jl
pop
cmp
fiaddl
jae
mov
jae
pusha
test
jns
adc
int
and
inc
cmc
loopne
sub
adc
pop
out
mov
dec
fnstsw
call
shlb
push
js
sub
sub
out
popf
stos
push
mov
lcall
adc
je
js
loop
xor
in
in
fs
nop
lock
pop
adc
jg
inc
cmc
icebp
xchg
add
orb
jae
inc
sarl
mov
rolb
add
dec
fmuls
mov
xchg
mov
mov
dec
dec
adc
mov
or
xor
fidivl
cli
mov
xlat
push
add
mov
jo
outsb
dec
and
jle
cli
mov
xchg
jae
addr16
and
push
ret
jns
shlb
xchg
clc
or
inc
pusha
push
iret
fldl2e
push
or
in
mull
nop
fldcw
inc
inc
loopne
orl
and
lea
mov
pop
jg
nop
das
jg
pop
jmp
pop
mov
dec
sbb
das
mov
nop
pushf
mov
xor
pop
cmpsb
test
loope
fistpll
loopne
dec
or
inc
inc
in
int3
sti
xor
in
mov
ret
sub
dec
subl
es
xchg
jmp
pop
cmp
sbb
push
fwait
subl
mov
jno
call
push
aaa
mov
xor
jg
nop
xchg
jbe
rorb
fcmove
ds
cmpsl
sub
cmp
adc
sarb
in
loopne
fidivs
cmc
mov
or
inc
jle
adc
movsl
jnp
aaa
xor
imul
clc
mov
test
or
lods
in
jns
jo
pop
rcl
mov
jmp
jno
in
iret
ljmp
sub
arpl
cltd
and
cmp
sti
pop
jbe
lods
mov
push
in
mov
getsec
inc
sbb
jns
adc
and
jmp
mov
mov
adc
xchg
push
inc
subb
xchg
dec
xchg
mov
mov
ljmp
adc
daa
test
into
sub
in
mov
and
loope
jb
sbb
sti
shll
cmp
movb
shlb
and
inc
aam
inc
lret
pop
mov
add
jb
aas
fldl
and
dec
pop
mov
push
xor
out
xchg
mov
ret
les
loop
dec
mov
add
mov
gs
imul
ds
cmp
dec
aad
cmp
add
mov
mov
hlt
std
lods
inc
sbb
jmp
inc
dec
push
in
ds
aas
add
cld
push
inc
cmp
or
mov
lock
in
xlat
sbb
lahf
out
cld
ds
enter
testb
aas
cmp
out
mov
mov
cmc
movl
int
mov
ret
test
xchg
jmp
lods
adc
cld
xor
repz
aaa
cli
popf
ret
fs
pop
int
jns
pop
xchg
push
and
fldcw
iret
out
cmp
mov
jo
scas
fs
push
mov
xchg
icebp
fcmovnu
lahf
pop
cs
sub
mov
pop
pop
mov
or
sbb
adc
addb
in
shll
push
movsl
cmpsl
notb
sbb
mov
and
mov
aas
adc
call
je
jno
or
fists
jp
or
test
repz
cmp
push
in
mov
push
or
fsubl
enter
aas
xor
lds
sub
cmp
jl
adc
push
out
xchg
pop
jbe
jo
jno
xor
lret
lods
mov
cmp
aaa
js
pop
arpl
inc
xor
fdivl
dec
xchg
stos
imull
ror
xchg
inc
lret
test
insb
pop
mov
or
sti
in
out
xchg
sub
ret
xor
and
sti
mov
fcompl
fcoms
and
leave
test
push
sbb
insl
int
fsubr
push
fs
insb
mov
push
insb
cmp
repnz
push
cmp
nop
pop
xchg
jmp
divl
out
lcall
push
pop
ds
jnp
ror
enter
cmc
rcr
and
test
lcall
mov
sbb
push
arpl
sub
cmc
aam
ja
xchg
push
roll
jle
adc
or
in
lods
out
inc
fsubrl
pop
aas
je
add
jno
fucomi
cmp
movsb
sahf
jnp
mov
stc
ss
fnstenv
mov
inc
jb
enter
rclb
das
dec
imul
push
dec
lea
fisttpll
rorb
mov
ret
je
mov
cld
dec
stos
mov
divb
push
sub
gs
sbb
inc
inc
cmp
out
nop
push
push
sbb
or
imul
or
jbe
dec
cmp
jecxz
inc
inc
push
sub
jl
xor
shlb
out
fdivr
pop
fistpll
in
sahf
ljmp
mov
mov
std
xlat
pop
dec
inc
dec
xchg
adc
jle
insb
mov
mov
dec
mov
outsl
push
mov
in
ss
mov
hlt
inc
dec
jno
mov
add
leave
cmpsl
pop
ds
syscall
scas
jmp
mov
sub
adc
ret
test
movsl
mov
jmp
and
daa
xor
repz
pop
fimuls
movsl
shl
ret
inc
iret
dec
sbb
cmp
and
data16
mov
jecxz
arpl
cs
pop
pop
insb
sub
push
adc
pop
sub
inc
pop
in
adcb
dec
mov
add
add
shll
jno
inc
sbb
icebp
bound
repnz
mov
mov
sbb
insl
and
insl
jbe
dec
mov
jb
sub
jmp
xor
add
xchg
adc
mov
mov
jge
jle
jne
and
xor
inc
push
loop
or
scas
jg
push
popa
xlat
repnz
test
pop
xor
leave
add
mov
loope
adc
add
mov
or
mov
mov
stos
add
aad
mov
out
pop
in
ss
test
inc
adc
lcall
test
pop
mov
out
or
or
rolb
leave
xor
mov
adc
xchg
push
fs
and
hlt
sub
cmp
out
xchg
mov
imul
ret
jg
les
call
push
mov
mov
orb
pop
fidivl
xchg
jno
addr16
mov
xlat
or
or
fstpl
mov
jmp
mov
lea
outsb
flds
roll
cmc
jnp
inc
xor
jge
lods
outsl
cmp
mulb
gs
xor
test
sub
xor
jl
xchg
setbe
or
inc
sbb
push
mov
dec
xor
sbbb
ja
stc
inc
cmpsl
movsl
and
push
cmp
pop
push
fcmovnbe
adc
and
mov
and
adc
xchg
cmpsl
add
rol
sbb
mov
popf
xor
jp
aad
pop
sub
mov
sahf
add
je
ja
or
push
sub
ficoml
dec
out
cmpsl
inc
sbb
pop
test
fmull
cmp
mov
mov
jp
outsb
sar
mov
movb
stos
repnz
add
add
adc
pusha
aaa
lcall
mov
push
test
xchg
cmp
pop
mov
xchg
pushf
xchg
enter
push
imul
mov
out
mov
push
adc
imul
or
push
xchg
divl
or
mov
mov
push
push
andl
dec
xor
cmp
dec
add
xlat
cmp
test
loop
lahf
sub
fisubrl
mov
sahf
sbb
in
xchg
int
xchg
das
out
mov
add
cli
dec
pop
popa
test
mov
aam
and
pusha
xor
ss
cmp
sar
jae
jbe
dec
mov
and
push
in
sbb
mov
or
adc
xchg
loope
imul
jbe
hlt
sar
xor
cwtl
test
aad
cltd
and
mov
jb
les
inc
push
out
outsb
cld
call
mov
mov
adc
and
and
lea
cmp
lock
outsb
adc
fstps
into
icebp
cli
fucomp
inc
dec
sub
dec
adc
test
dec
sub
jo
lods
jo
lret
or
or
repz
notb
and
mov
loope
xlat
pop
xchg
sub
in
call
cmp
jae
dec
ja
dec
inc
dec
push
pushf
daa
in
int3
idiv
jb
pop
push
pop
inc
iret
iret
pop
add
mov
pop
mov
hlt
lahf
sub
sub
stc
sbb
adc
data16
lahf
jne
sub
je
mov
and
jge
ss
jg
cli
pop
jnp
mov
mov
xchg
inc
xlat
mov
inc
fbstp
and
push
xor
insb
jns
je
ffree
adc
gs
movsb
inc
push
in
stos
icebp
pop
jns
mov
js
pop
push
mov
in
mov
jmp
xor
loop
das
call
push
cld
inc
add
jns
xor
push
in
mov
dec
mov
add
fnstenv
cmp
and
adc
stos
adc
cmp
sbb
nop
test
sub
mov
mov
cli
add
xchg
push
subl
push
repz
in
pop
repnz
push
push
mov
cmpl
xchg
es
ljmp
xchg
sbb
sbb
and
xchg
fs
ljmp
xor
mov
into
jge
out
jge
cmp
push
int
sub
or
xlat
jnp
mov
lahf
xor
mov
inc
popf
add
repnz
sub
or
inc
cmc
fs
jno
push
add
jg
jecxz
sahf
mov
fwait
and
xor
nop
add
adc
andl
and
sbb
cld
mov
fsubr
in
aaa
push
daa
adc
repnz
lcall
dec
int
out
ret
scas
out
push
xchg
shrl
cltd
dec
xchg
bound
jne
dec
or
ds
fwait
daa
fs
fst
pop
jb
insl
lsl
mov
lods
jb
movsb
xchg
mov
std
cmp
mov
popa
push
xor
fwait
xchg
mov
test
insb
mov
mov
jle
mov
cmp
xchg
movsb
lods
sub
add
or
fldt
adc
repnz
das
stc
push
sub
rcll
lods
xchg
mov
mull
sub
mov
mov
xor
sbb
pop
and
jno
addr16
leave
lods
adc
movsb
xchg
pop
jl
adc
cwtl
mov
sti
andb
dec
imul
inc
mov
psrlw
popa
cmc
mov
pop
push
jno
icebp
or
insb
xchg
cmpsl
adc
cmp
mov
jo
nop
mov
cmpsl
and
cmp
insl
inc
in
pop
mov
lods
shl
divl
pop
lret
and
leave
ret
xor
pop
pop
js
addr16
xchg
push
iret
inc
inc
jmp
test
dec
inc
ds
movzbl
mov
cmp
jbe
pop
popa
cli
fdivr
aas
or
or
mov
inc
lcall
mov
adc
call
fldenv
mov
test
orb
cwtl
pop
push
xchg
jp
mov
sbb
popa
add
movsl
xor
jno
jp
sub
andl
add
shlb
je
adc
dec
xchg
or
pusha
test
ret
out
in
add
sub
stos
sub
mov
push
movsl
ja
push
pop
jbe
fmull
pop
xchg
mov
cmpsl
dec
das
pop
xor
in
das
movsb
lcall
jb
dec
test
sub
call
adc
add
movsl
lahf
mov
insl
xor
lock
imul
mov
jg
bound
leave
push
outsb
je
dec
sub
andb
addb
xor
sti
das
mov
ucomiss
int
pop
icebp
bound
jns
cwtl
and
jne
xchg
fs
das
outsl
jg
sarl
inc
movsl
popa
inc
jb
mov
fists
push
hlt
icebp
jmp
test
nop
jg
fiadds
sbb
test
dec
sub
out
pop
sahf
cmp
and
mov
pusha
cltd
and
add
mov
pop
jmp
sbb
out
repz
shll
cmp
test
enter
cmp
jnp
in
pop
leave
add
push
enter
add
jae
cmp
push
adc
test
sbb
or
or
push
mov
push
idivb
cmp
pop
test
add
rcl
cmpsb
stos
sub
gs
sbb
mull
jbe
dec
mov
jnp
jp
adc
pop
xlat
fistl
das
lahf
ret
fcmovnb
outsl
mov
sbb
pop
in
sub
cmpl
jmp
imul
mov
test
loopne
and
inc
int3
push
xor
fistpll
js
test
push
push
sbbl
inc
sbb
mov
push
pop
fwait
es
adc
push
ja,pn
push
cmp
pop
cmp
fwait
movsb
cmp
rorb
enter
mov
jo
outsl
addps
mov
cmp
jnp
stc
lods
fabs
int3
cwtl
loope
xchg
adc
pop
imulb
dec
xor
rorl
mov
cmp
xor
cmpl
jp
fisttpll
sbb
mov
sbb
xchg
test
in
out
adc
push
pop
rcrl
out
dec
sbb
cld
sub
aas
jne
push
repnz
jmp
mov
push
aam
paddb
div
xchg
cwtl
mov
xor
mov
mov
dec
lods
xchg
jp
dec
push
loop
xor
call
mov
outsl
pushf
jg
jae
fcoml
jne
add
push
xor
nop
jle
test
sbb
or
lret
out
pop
jno
inc
roll
stos
xchg
hlt
in
shrb
push
mov
mov
or
and
xchg
sbb
insb
dec
xchg
adc
xlat
fwait
mov
xor
inc
mov
add
bound
sub
psubd
inc
cmpps
pop
int3
pop
mov
sub
sarb
inc
in
and
adc
add
sarb
cmp
mov
cld
cmp
sbb
xchg
loope
stos
mov
push
adc
mov
clc
mov
ss
lret
dec
pop
inc
xchg
stos
repz
inc
call
mov
xlat
bound
or
pop
imul
mov
or
inc
xchg
pop
cltd
loope
cs
sub
inc
iret
sbb
test
sahf
jg
imul
mov
mov
arpl
fbstp
mov
aas
enter
push
out
fiaddl
dec
sarb
rcrb
mov
cmp
inc
mov
insb
imul
mov
testl
push
stos
out
xchg
fcoms
mov
or
mov
cli
inc
pop
pop
cmp
cmp
and
js
mov
ljmp
xchg
inc
daa
add
sbb
cmp
sbb
jne
or
mov
mov
xlat
lods
cmc
iret
xchg
add
aad
xor
mov
jp
pop
or
movsb
cmp
lods
daa
sbb
and
inc
roll
push
outsl
std
inc
sub
aad
arpl
inc
cld
cmpsb
outsb
xchg
xchg
test
mov
cmp
rorl
bound
inc
inc
mov
push
mov
mov
ud0
mov
jmp
insl
gs
cwtl
push
vpmulhw
dec
push
push
xor
shl
xchg
jae
pop
lahf
jb
fdivrs
test
cmp
fistpl
sub
and
das
xchg
aad
jle
inc
lods
ret
or
xchg
xchg
hlt
xchg
mov
xor
iret
push
add
add
jge
adc
inc
popw
jecxz
push
cmp
sbb
cmp
imul
jno
outsl
xchg
subl
das
mov
sbbl
loope
outsl
mov
lahf
in
mov
jle
mov
movsb
cltd
and
ret
push
int3
fcoms
cmp
push
loop
push
in
push
stos
and
cmpl
daa
into
pop
stc
mov
aas
pop
sub
bound
push
mov
in
das
add
psubusb
and
clc
inc
push
call
icebp
aad
in
xlat
pop
ljmp
outsl
fadds
nop
aad
jbe
popa
into
je
pop
cmc
scas
adc
stos
loope
inc
gs
sbb
xor
xchg
pushf
inc
or
mov
xchg
and
inc
adc
shl
jae
mov
outsl
mov
pop
fwait
dec
test
pop
loopne
jne
xchg
lea
and
ss
gs
mov
or
push
adc
daa
je
adcl
jo
mov
cs
push
cmp
sub
xor
jmp
cmp
out
jbe
outsl
hlt
das
leave
mov
bound
xlat
jecxz
push
add
xlat
xchg
xchg
rcll
jmp
xlat
inc
sbb
push
xrelease
cld
cmp
mov
loopne
cmp
sub
add
enter
pop
mov
inc
aas
push
movsb
inc
loope
cs
addr16
shlb
arpl
pop
scas
sti
jmp
rcr
mov
iret
and
cli
insb
pop
stc
mov
jecxz
js
mov
cmc
mov
bound
mov
fcmovnb
sarl
in
sub
stos
or
jl
adc
std
mov
in
lcall
xor
cli
scas
mov
cmc
or
dec
in
or
lcall
into
and
jecxz
lea
inc
push
popl
scas
pop
hlt
sbb
iret
loopne
stos
mov
call
ret
xchg
pop
out
mov
dec
into
out
lods
out
mov
push
mov
ret
and
ret
cmp
hlt
dec
loop
sahf
mov
repnz
mov
adc
enter
or
gs
xchg
lock
icebp
inc
mov
xchg
xchg
dec
mov
or
mov
test
test
dec
mov
push
leave
sub
sub
lds
stos
xchg
mov
mov
lea
pop
sub
icebp
les
add
test
rep
jnp
mov
fbld
cmp
adc
inc
add
push
sbb
jl
imul
push
jns
icebp
rolb
lea
inc
addr16
mov
jne
mov
pop
push
mov
cld
sub
stos
sbb
shll
xor
dec
pop
lret
or
in
mov
mov
movsb
mov
jo
clc
jae
adc
jmp
out
xchg
clc
xor
dec
pop
sbb
mov
sbb
jg
aad
incb
pop
push
jae
cmp
mov
std
in
pop
icebp
orb
sub
sub
jno
subb
into
sbb
mov
jns
mov
dec
stc
insl
pop
shlb
insb
or
aas
ffree
xchg
xchg
in
mov
loop
arpl
shr
pop
xlat
xchg
inc
decl
add
sub
mov
push
mov
mov
jno
rorb
int
adc
push
ret
lds
push
fisttps
adc
lea
dec
aad
daa
clc
mov
repz
jl
enter
int3
mov
popf
out
movsb
xlat
sbb
dec
jbe
dec
lock
cwtl
hlt
sub
cmp
pop
outsb
jae
divl
push
ljmp
mov
mov
outsl
out
or
scas
xor
xchg
adc
ljmp
adc
cwtl
add
jmp
les
sub
adc
fistpl
sub
mov
aas
inc
mov
sbb
sbb
aaa
cmpsl
push
dec
iret
shll
sub
inc
cmc
pop
xor
es
xchg
js
xor
and
jg
popf
aam
or
clc
jae
cwtl
cmp
aam
repz
mov
test
dec
xchg
lret
das
bound
mov
adc
movsb
lods
cwtl
hlt
or
lahf
mov
dec
jns
js
mov
push
cmpsl
pop
cltd
or
dec
push
inc
mov
jo
dec
stos
fbld
pop
fildl
xor
pop
mov
stos
sub
mov
mov
and
adc
das
mov
jnp
dec
mov
xchg
dec
adc
push
rcrb
movsl
enter
add
sbb
imul
aam
ds
test
cltd
jnp
xchg
and
adc
jae
xchg
mov
xor
movsl
dec
jecxz
hlt
pop
out
repnz
out
and
cmp
dec
mov
add
inc
dec
data16
dec
dec
xor
lahf
xor
push
nop
push
lret
int
push
sti
push
add
int3
cltd
xchg
ret
pushf
das
pushf
mov
ret
mov
lcall
mov
sti
mov
loopne
stos
inc
mov
sbb
inc
insl
add
push
cwtl
xchg
lahf
mov
repnz
mov
sbb
in
sbb
imul
sbb
out
push
dec
shr
push
mov
push
cmp
int3
adcb
push
xchg
mov
xorl
sarl
xor
movl
jo
jns
icebp
and
loope
sahf
insb
dec
aam
mov
xchg
int
leave
jecxz
pop
pop
cmp
rolb
adc
sub
cmp
adc
mov
mov
sub
ret
gs
ds
and
arpl
and
in
lods
sbb
rclb
or
std
test
ret
imul
jg
dec
shll
jnp
mov
sbb
shlb
jle
cmp
or
mov
jno
mov
lret
fildl
repnz
inc
iret
insl
loopne
xchg
aaa
cmp
pop
seta
jle
mov
add
xor
test
popf
mov
sti
mov
xchg
jg
icebp
push
mov
lahf
loopne
test
js
leave
pusha
mov
mov
aam
push
cli
mov
xlat
cli
pop
jbe
jnp
push
and
int
leave
adc
je
movb
jb
pushf
sub
mov
stos
aam
pop
ljmp
adc
or
cltd
es
int3
les
je
das
mov
xchg
mov
scas
sbb
jne
in
adc
addl
std
mov
loopne
push
inc
mov
sub
cs
sbb
mov
inc
aas
ss
inc
mov
insb
out
in
out
pusha
mov
pop
nopl
sub
iret
pushf
orl
das
sbb
cmp
or
mov
mov
subb
mov
ljmp
nop
out
loop
pop
dec
cmp
cmc
mov
xchg
push
push
stc
xchg
inc
adc
movswl
outsb
test
adc
xchg
push
lret
inc
out
repnz
cmp
xchg
pop
sarb
int3
push
push
jne
inc
stos
jno
dec
ret
fidivrs
mov
jbe
out
mov
mov
pusha
shl
cmp
mov
jg
dec
mov
into
int
ss
push
lods
mov
imul
or
jp
adc
add
stos
nop
shl
sub
dec
pop
adc
aaa
push
vshufpd
mov
rol
in
xlat
mov
pop
push
push
pop
shrl
dec
jno
scas
push
jne
int
push
xchg
rorl
mov
sbb
xchg
lahf
outsl
fldt
fs
and
jle
repnz
cltd
movsb
cmpsb
jg
jl
mov
lret
stc
mov
lock
cltd
jl
aaa
fsts
inc
orl
sub
insl
push
outsl
mov
mov
adcb
cli
xor
fnstsw
xlat
test
mov
loop
jno
lea
mov
adc
jmp
mov
repz
mov
clc
repnz
cmp
pop
mov
hlt
fucomp
in
stos
and
jp
push
inc
in
push
xor
jno
mov
dec
sbbb
xor
cmpsl
pop
mov
lret
test
out
hlt
and
dec
mov
ljmp
les
push
pop
testb
out
and
clc
ret
inc
xor
xchg
push
repz
cmp
push
das
insl
jecxz
push
movsb
mov
jbe
fstpt
in
push
pop
push
gs
mov
add
in
divb
pop
cmpsb
and
pop
lcall
call
pushf
clc
cld
popf
mov
push
sbb
cmp
aam
roll
lods
pop
loope
push
add
jb
arpl
xchg
jp
pop
jmp
enter
mov
inc
jge
sbb
push
cli
sub
inc
cmc
test
out
loope
das
ficompl
mov
sub
cmp
pop
out
jge
cmp
inc
xchg
jno
hlt
pop
mov
add
pusha
jb,pt
lea
jns
mov
sub
lahf
imul
and
sbb
decl
or
mov
jno
add
mov
fnstenv
inc
inc
push
and
lea
or
dec
push
fwait
data16
pop
and
pop
mov
cmp
faddl
popa
cmc
ret
repnz
rorl
mov
sahf
sti
fucomi
imul
jnp
and
mulb
shrb
fisttpll
jo
aam
mov
mov
cmpb
mov
push
adc
call
cmp
fstl
mov
int3
arpl
inc
cmp
lea
pop
scas
es
sbb
inc
pop
push
stos
sbb
push
jl
stos
out
xor
push
push
sarl
aaa
hlt
sbb
pushf
leave
pop
mov
or
lds
je
insb
jo
in
mov
idivb
xor
out
sub
xchg
sub
ljmp
icebp
cld
loope
cmp
xchg
ljmp
push
insl
imul
ljmp
pslld
pusha
in
cmp
out
jae
cmpsl
cmp
jnp
add
imul
clc
lret
fiaddl
xor
push
mov
xor
test
adc
out
and
jmp
pop
mov
or
into
adc
jno
push
clc
nop
xor
cmp
jne
push
xor
adc
fildll
xchg
adc
cwtl
ja
jne
push
arpl
inc
xchg
popa
rcrb
pop
out
cwtl
dec
roll
push
cld
mov
mov
enter
fucom
xlat
aam
adc
cmp
sbb
fdiv
ss
ds
lods
hlt
ret
pop
rolb
les
dec
lds
and
sbb
ret
cs
cmp
stos
aam
and
mov
dec
pop
jle
int3
or
sub
xchg
test
outsb
cmp
sub
push
es
rcrb
cltd
push
and
std
dec
loope
mov
fdivrl
mov
add
clc
xlat
test
call
incl
cmc
jl
pop
clc
add
test
and
xchg
fldcw
lods
jle
or
mov
aaa
push
call
inc
adc
decl
fcomps
push
int3
pop
mov
and
sbb
jae
mov
push
out
mov
outsl
lods
lcall
test
mul
roll
jnp
adc
pop
pop
cmpsl
fidivs
and
scas
enter
xor
bsr
dec
cli
outsb
dec
mov
addl
add
mov
pop
inc
sbb
popa
enter
mov
insl
shll
sbb
in
add
add
mov
push
lret
jno
xchg
addr16
mov
xchg
aam
sub
xchg
loopne
mov
mov
inc
divl
adc
loop
mov
jne
inc
jle
mov
inc
mov
jl
or
dec
rcrl
inc
lahf
mov
mov
icebp
loop
sub
cltd
icebp
xor
push
frstor
aam
fdivr
xchg
cmpsl
xchg
jmp
xchg
pop
adc
call
inc
add
xor
fwait
hlt
clc
xor
sub
pop
xor
ja
int
test
lret
js
jb
or
pusha
pop
xchg
jne
or
lea
test
add
adc
repnz
mov
sbb
push
mov
push
push
adc
mov
mov
mov
cmp
lret
enter
jo
aam
js
js
repnz
cmp
mov
sti
addl
xchg
outsb
int3
outsl
rcrl
rep
jo
pop
lahf
xchg
cmp
addl
es
dec
and
lea
cltd
sub
inc
adc
jp
rol
out
xchg
inc
or
inc
mov
cmp
push
xchg
or
push
std
lock
int3
movsb
pop
into
std
aas
test
pop
les
add
dec
lds
aaa
adc
add
mov
push
cmc
sbb
mov
fcompl
xlat
pop
sbb
in
aad
inc
aaa
out
leave
adc
cwtl
out
and
test
ss
cmpl
adc
pop
popf
in
add
jp
add
jp
into
jecxz
repnz
mov
imulb
dec
inc
mov
std
enter
clc
iret
and
or
inc
inc
push
push
inc
stos
xchg
mov
stos
lret
fs
test
and
xchg
jns
inc
leave
js
mov
mov
and
shlb
je
mov
out
xor
adc
add
fs
xchg
pop
adc
js
arpl
lahf
dec
stc
pop
dec
mov
push
aaa
sub
cmc
cmp
jge
pushf
mov
sub
inc
testl
lret
pop
jl
gs
test
add
dec
pushf
cs
xor
mov
jl
xchg
fmuls
xor
dec
adc
adc
insb
repnz
adc
and
jb
mov
xchg
imul
movsl
jge
pop
mov
ret
add
in
mov
roll
cmpsl
mov
dec
lds
push
cmp
dec
sbb
cli
xor
cmpsl
fisubrl
movsl
fistl
sbb
insb
orb
cltd
clc
pusha
fcmovbe
test
popf
sub
pop
lcall
push
xchg
mov
mov
daa
out
jo
mov
imul
loope
cmp
repnz
cmpsl
mov
dec
mov
inc
adc
jne
push
cltd
or
aaa
jge
dec
cltd
push
sbb
and
push
lahf
ss
jmp
push
inc
add
lahf
pop
cmpsl
or
mov
hlt
jmp
push
test
xchg
jno
sbb
mov
daa
pop
xchg
out
push
rcll
pusha
js
stos
addr16
rcrl
xchg
mov
push
fidivl
cld
mov
inc
pop
jo
xor
xchg
jns
sub
je
cmp
mov
dec
dec
aad
loop
nop
roll
mov
lea
leave
or
mov
add
js
and
lcall
outsl
fisubrs
dec
idivb
sahf
filds
adc
pop
xlat
shlb
test
xor
outsl
mov
mov
fmuls
sub
nop
and
pop
mov
icebp
bound
mov
jmp
pushf
jp
addr16
scas
repnz
js
cmp
ljmp
cmp
shll
in
cwtl
aas
add
mov
cltd
xchg
inc
rep
xchg
mov
mov
out
aaa
xor
icebp
sub
pause
pop
shll
dec
jge
mov
push
pop
jne
das
and
popf
pop
outsl
xchg
aas
inc
jge
pop
mov
xchg
jg
add
pop
push
xchg
pop
add
push
jb
xchg
pushf
iret
fadd
or
in
lds
dec
jnp
test
jnp
mov
ljmp
arpl
inc
rcl
pop
add
mov
sub
lods
inc
lock
add
loop
mov
ja
inc
mov
pop
jle
xchg
pop
and
or
push
mov
mov
jmp
mov
inc
mov
aaa
jae
add
es
lock
and
aaa
xor
xchg
xchg
dec
fstl
add
fsubs
out
pop
add
iret
mov
dec
jg
hlt
repz
into
jns
fisubrl
dec
in
mov
sub
pop
xchg
cmpsl
adc
mov
lahf
pusha
mov
lea
mov
fwait
mov
xchg
scas
mov
mov
repnz
cwtl
add
xor
push
addr16
push
lcall
push
shl
dec
pushf
add
int3
adc
fimuls
dec
int
inc
fnsave
inc
ficoms
xor
sbb
scas
int3
mov
adc
mov
pop
in
out
stos
pop
dec
lods
das
cmp
sbb
mov
pop
pop
mov
ja
jns
cmc
add
fidivl
shrl
push
xor
fwait
dec
lret
dec
jbe
mov
mov
xchg
cltd
mov
roll
rcr
popl
jecxz
push
mov
sarb
mov
mov
movb
jle
jnp
jne
movsb
pop
xchg
xor
sbb
adc
outsb
adc
push
inc
adc
xchg
aas
dec
and
aas
sbb
jg
push
mov
mov
adc
sbb
mov
das
leave
jle
lss
pop
ja
js
push
and
sub
dec
std
scas
in
iret
imul
xor
loopne
jno
into
ficoml
imul
pop
cld
sar
pop
inc
add
cmpsb
pushf
dec
aad
in
xor
inc
or
jecxz
movsl
bound
lock
cmp
sub
icebp
mov
bound
outsl
mov
cmpsb
mov
add
inc
mov
and
adc
out
and
push
fldt
xchg
cld
adcb
sbb
aad
jns
ret
push
sti
cmp
pushf
adc
in
jmp
jno
into
xor
sti
dec
sub
data16
pop
push
ret
into
test
repnz
enter
scas
imul
pop
mov
xchg
insl
in
movsl
and
mov
enter
out
cmpsl
sbb
sub
rclb
lret
and
lret
in
adc
subb
aad
int
xor
leave
jmp
pop
cwtl
mov
ret
icebp
jl
cmp
jmp
adc
adc
in
scas
inc
sub
std
hlt
push
mov
inc
cmp
adc
inc
cmpsb
js
stos
pop
pop
mov
pop
out
mov
sub
and
repz
dec
mov
int
fists
dec
ljmp
inc
mov
adc
mov
cli
cmp
popa
jp
push
add
pop
lods
sbb
lcall
nop
cmp
mulw
pop
cmpsl
dec
jo
into
add
xchg
mov
jae
dec
pop
gs
mov
fadds
out
repnz
shlb
jns
in
mov
incb
xchg
and
shll
adcl
pop
out
mov
mov
loope
lahf
mov
mov
ds
dec
call
je
repz
adc
pop
xor
les
pop
stos
push
xor
lcall
nop
addr16
sbb
xchg
inc
data16
cmp
sbb
inc
sub
stos
cwtl
stc
jge
cs
mov
xchg
xchg
fwait
mov
adc
insb
popa
push
dec
mov
or
sub
jmp
insl
xor
jge
js
jne
aas
aaa
jb
inc
sub
push
aam
mov
xor
sub
test
lods
ja
ror
push
cmpsl
add
scas
enter
stos
jbe
and
push
jg
lret
aam
test
cmp
mov
decl
cmp
imul
and
sbb
imul
mov
and
pop
sbb
jnp
or
orl
fdivrl
imul
adc
xor
adc
jb
dec
jle
dec
rcrl
jne
mov
mov
addr16
adc
aam
adc
xchg
pop
jnp
and
xorl
lock
mov
adc
mov
cmpsb
push
xchg
clc
mov
or
push
lock
push
mov
sub
test
xchg
pop
push
addl
mov
hlt
imul
push
daa
mov
jg
xchg
push
test
test
jl,pn
mov
or
xchg
mov
popf
sub
mov
loope
mov
push
cmp
xchg
sub
xor
out
outsl
pop
mov
out
jno
sahf
fcoml
lods
jno
call
jb
pop
mov
into
shr
dec
dec
mov
punpckhwd
ljmp
mov
in
and
add
fs
aaa
ljmp
sub
cmp
clc
jns
adc
dec
out
aaa
inc
and
add
and
pop
add
adc
cmp
or
pop
cmp
mov
adc
fistps
pop
adc
mov
arpl
xor
int
stc
lahf
ror
push
clc
sbb
mov
mov
adc
and
sar
mov
mov
das
lret
add
mov
gs
xor
fcomps
in
mov
ja
aad
jno
adcl
rolb
ret
mov
fucomi
or
ss
pushf
popa
es
jo
out
jmp
mov
aam
arpl
inc
inc
jl
sbb
cmp
nop
push
ljmp
xlat
pop
sar
or
push
das
inc
dec
jo
add
pop
mov
push
lea
jno
out
pop
pop
xchg
in
scas
push
mov
cmp
push
gs
ljmp
mov
mov
faddl
nop
mov
sahf
xchg
jle
mov
cmp
inc
pusha
lock
and
sbb
mov
fsts
sti
adc
ret
mov
inc
xor
shrb
inc
gs
mov
in
call
jne
pop
sub
xor
fstl
mov
ret
sahf
call
adc
and
mov
mov
xor
ljmp
xlat
std
pop
movsl
cmp
and
loope
pop
inc
lea
xor
inc
pop
ja
leave
adc
roll
in
cmp
sbb
fsubrl
fdiv
adc
sub
into
les
mov
das
nop
push
out
rcrl
jno
shlb
outsb
mov
loope
push
aas
data16
dec
sbb
rcl
mov
mov
sub
mov
xchg
insb
jo
stos
jne
xchg
rolb
hlt
or
rol
clc
dec
cld
int3
and
lock
xchg
push
xchg
ljmp
insb
jle
jp
pop
mov
inc
jmp
subb
adc
pop
pop
xor
xchg
cwtl
push
ja
scas
dec
push
paddusw
lcall
and
jmp
mov
shll
aas
xchg
dec
mov
hlt
add
ret
icebp
cmp
dec
ja
adc
enter
addl
cld
bound
add
test
js
sub
adc
fcmove
mov
bound
pop
xor
mov
std
lret
inc
mov
sub
pop
and
int3
int3
mov
jmp
mov
push
adcl
enter
or
mov
jnp
ja
andl
mulb
xor
incl
imul
push
out
and
rolb
xor
adc
mov
aas
xchg
inc
sub
jns
push
fcoms
aas
mov
xor
enter
pusha
cmp
fcmovnu
outsb
hlt
andb
pop
bound
add
das
gs
in
xchg
add
negl
fdivr
adc
mov
rorb
imul
stos
dec
dec
add
test
jmp
adc
scas
sbb
insb
popa
aam
fiaddl
das
outsb
mov
sub
and
js
cltd
popf
repz
add
orb
adc
iret
mov
adcl
pop
imul
divl
dec
pop
or
adc
mov
js
aad
mov
mov
sahf
cmpsb
std
sub
fnstsw
loopne
mov
inc
push
jae
lahf
std
loop
mov
mov
and
mov
sub
cwtl
out
lret
mov
in
rorb
ret
mov
cmp
push
adc
lcall
jecxz
sub
xchg
jl
push
sar
pop
mov
push
loop
iret
arpl
enter
jns
iret
mov
lods
push
jns
in
and
or
mov
fimuls
push
xchg
add
out
dec
push
push
daa
int3
mov
imul
dec
test
xor
rcrl
add
test
cld
sbb
clc
dec
mov
out
pop
mov
and
clc
fadd
xlat
adcb
mov
in
out
adc
push
push
jae
xchg
stos
idivl
inc
jns
cmp
outsl
ret
pop
mov
lret
gs
cwtl
pop
bound
pop
lret
mov
cmp
pop
mov
inc
jo
scas
jb
sub
lcall
addl
jmp
outsb
out
mov
and
pop
jns
push
fs
or
ret
pop
aad
ret
movsl
adc
loop
loop
repz
cmp
aaa
gs
and
or
addr16
std
rorl
and
fiaddl
sub
xchg
jno
jnp
in
sbb
aas
add
addb
cmpl
clc
lret
mov
push
add
cwtl
mov
and
cmpsl
xor
push
xor
xchg
or
jge
jae
filds
jnp
pop
popa
ja
loop
je
push
ss
pop
push
jmp
mov
xorb
push
pop
fwait
imulb
xchg
push
adc
pop
sti
jb
inc
int
xchg
mov
push
fmulp
inc
addr16
lds
mov
ja
outsl
mov
sub
inc
pusha
mov
push
icebp
sub
sbb
mov
push
jnp
mov
xchg
jbe
jl
xchg
and
aaa
inc
mov
pop
mov
xchg
push
insl
jmp
dec
mov
jmp
das
sub
stos
mov
push
out
cvtps2pi
mov
cmp
fdiv
das
mov
aas
ret
or
or
mov
or
inc
and
jbe
xlat
movsl
daa
mov
andb
xchg
xchg
cmp
sti
gs
rolb
jecxz
xchg
fisttpl
stos
ficoms
notb
or
rcrb
mov
xchg
push
into
jno
xchg
mov
xchg
lods
out
inc
lcall
loopne
jno
adc
sub
inc
adc
sub
jmp
repz
lods
mov
mov
cwtl
mov
dec
cmc
sti
xchg
jge
repz
sub
lods
insb
iret
das
add
push
xor
std
aad
mov
pop
add
inc
adc
js
sarl
mov
push
fadd
jo
push
add
je
insb
add
imul
rcr
adc
out
fwait
mov
aaa
and
mov
adc
mov
cli
std
les
mov
stos
std
dec
or
lock
fdivs
into
outsl
mov
aad
notl
pop
fmuls
dec
inc
fsub
in
aaa
pop
jnp
cmp
das
sbb
daa
sbb
pop
std
pop
add
adc
inc
pop
popa
insl
jmp
sub
loop
adc
fistps
mov
mov
pop
cld
cwtl
or
and
xchg
sahf
xor
xchg
pusha
or
mov
aaa
mov
loope
sbb
or
mov
add
icebp
in
clc
cmp
daa
rcll
inc
call
dec
mov
xchg
sbb
push
jno
popa
pop
adc
ret
and
lods
out
add
out
out
add
or
fstpt
mov
mov
lcall
jge
xor
js
inc
loop
icebp
or
mov
cltd
loopne
out
insl
sub
xchg
enter
xor
fadd
in
xchg
ds
sbb
mov
sarb
rorb
add
xchg
jnp
xchg
fxtract
lods
lret
mull
add
jbe
cmp
rclb
incb
or
in
bound
adcb
mov
es
sub
mov
cwtl
clc
dec
mov
adcl
cmc
sbbb
cli
movsl
and
loopne
sub
mov
jae
push
stos
sbb
or
push
mov
xchg
jne
push
dec
mov
push
shl
mov
adc
mov
test
fsubrs
fstpl
push
je
jb
mov
insb
call
jl
imul
push
or
lods
stc
test
sbbb
push
push
dec
insl
test
add
cltd
mov
mov
je
in
xchg
jae
adc
dec
add
mov
mov
cmc
sub
inc
nop
pop
popf
aas
cmc
inc
xchg
lcall
ss
cmc
dec
jl
pop
fimull
mov
dec
or
add
fnstenv
test
cmp
jnp
pop
xchg
mov
and
pop
lods
shrb
addr16
mov
std
test
shrb
test
push
cmp
or
test
call
cwtl
pop
mov
cmp
jns
add
rcrb
mov
push
fs
loope
test
arpl
lahf
movsl
sub
out
pop
inc
lock
jne
outsb
outsb
mov
lahf
jae
popa
jge
clc
or
mov
adc
dec
sbb
je
pop
push
inc
xchg
std
push
jecxz
pop
add
jne
sti
addl
xor
loop
add
aaa
mov
push
xor
xchg
push
jmp
xor
jb
das
bound
fs
jne
mov
movsb
ljmp
enter
dec
xchg
shlb
cld
xchg
test
and
cli
jecxz
cld
scas
pop
cld
les
outsb
fistpl
or
mov
sbbl
punpcklwd
sbb
adc
mov
cmc
out
test
and
aam
movsl
sub
paddsw
mov
xor
pop
and
cmp
ja
or
fidivrl
push
xchg
push
outsb
mov
inc
xor
leave
mov
mov
in
jmp
mov
add
rcll
int
movsl
inc
fwait
pushf
sbb
mov
jecxz,pn
jmp
test
addl
xchg
add
fldcw
pop
enter
shll
in
int
mov
and
mov
arpl
daa
push
es
mov
movsl
sub
insb
push
inc
xor
stos
lea
and
adc
xchg
dec
inc
loope
or
sbb
push
rcll
xchg
xorb
push
fistps
dec
inc
mov
xor
addl
rcrl
out
cmpsb
leave
aaa
xor
daa
jg
push
xlat
out
push
pop
xor
lcall
clc
dec
pushf
sub
aas
in
sub
sub
test
mov
jbe
add
push
dec
mov
lds
lds
sub
imul
add
inc
test
out
sbb
inc
xchg
inc
insl
ss
adc
cwtl
aam
repnz
xor
clc
cmpsb
test
pop
mov
std
fldcw
mov
pushf
pop
xor
push
pop
pop
insl
inc
xchg
mov
adc
mov
orl
out
cmp
add
lret
push
jge
inc
push
incl
jl
je
mov
mov
mov
push
and
cmp
cmp
jmp
addl
adc
push
out
aas
sbb
pop
push
sbb
cli
test
pop
lcall
dec
out
sub
ficomps
lret
filds
sti
add
dec
jmp
or
push
stc
xchg
sub
sti
push
and
out
and
inc
stos
iret
mov
or
in
xor
aad
xchg
mov
or
push
cmp
pop
movsl
and
int3
inc
mov
mov
fimuls
adc
or
arpl
push
push
sbb
addl
push
jo
arpl
je
xor
ret
add
je
cld
insl
loope
mov
push
inc
int3
ret
jbe
adc
es
mov
sub
movsl
int3
lods
and
xchg
adc
loopne
lcall
sub
test
sbb
jmp
ljmp
xor
aam
cmp
jno
loop
mov
jnp
xlat
lret
add
scas
push
lahf
repnz
jno
repnz
data16
or
cltd
mov
es
mov
mov
dec
push
mov
enter
out
pop
fnstsw
stos
pop
out
aas
lret
add
xor
sub
rcrb
fstpt
arpl
mov
imull
leave
sarb
jb
popa
pop
aad
sub
cwtl
fldl
add
or
aam
rep
ja
sahf
adc
dec
inc
rcr
sub
sbb
aaa
pushf
jae
jl
andb
das
jle
popa
xchg
stos
pop
mov
dec
rcrb
rol
in
cmp
xchg
fiadds
sbb
aam
lea
movsb
ficompl
push
dec
xchg
lds
xor
and
fcomps
ja
ror
movsb
dec
pop
xchg
outsb
or
orb
test
mov
push
seto
mov
stos
stos
bound
iret
pop
pop
and
adc
std
shlb
cmp
cmpsl
sub
test
test
notb
lods
inc
cmc
jbe
std
mov
jnp
inc
pop
or
xor
jle
inc
jle
sub
pop
sbb
dec
xchg
mov
pop
imul
jp
gs
jno
rcll
sub
stc
incl
fcoms
mov
or
pop
mov
inc
scas
loopne
xchg
jle
mov
lret
ja
pop
mov
mov
xor
aam
mov
repnz
jbe
push
aaa
movsb
sbb
mov
adc
mov
rcrb
cmp
fcoml
lahf
inc
in
nop
dec
aam
in
jecxz
lds
das
mov
mov
push
roll
xor
and
mov
mov
jecxz
test
cmpsl
addl
js
iret
lcall
mov
nop
test
repz
rcll
scas
or
inc
push
xchg
push
jge
bound
out
lcall
cmpsl
les
imul
push
scas
shrl
rcll
adc
movsb
mov
inc
or
ljmp
iret
pushf
push
lods
in
addr16
and
pop
call
pop
push
or
xlat
add
lods
adcb
fwait
push
movsb
xlat
dec
fdivrs
addr16
outsb
ljmp
ljmp
push
sub
int
mov
jle
insl
push
jmp
adc
mov
cmp
xchg
loop
push
pop
pusha
lods
sub
jp
or
rorb
insl
inc
sahf
lahf
adc
adc
mov
fdivs
test
test
mov
and
leave
jns
cmp
stc
and
mov
jo
fsubrl
jo
andl
or
stos
sti
cmp
push
pusha
mov
mov
ja
sbb
jp
enter
xchg
rcll
push
or
out
dec
and
jbe
sbb
sahf
setno
jo
stos
pop
sbb
push
out
cmp
pop
push
mov
cmc
pop
fcmove
mov
inc
out
jecxz
xor
pop
lcall
xchg
ja
or
es
inc
cmpsl
and
in
filds
mov
icebp
pop
mul
jo
sub
push
push
and
xchg
cld
loop
shld
dec
in
in
lahf
dec
imul
add
sbb
mov
jp
rorl
leave
mov
movsb
movsb
mov
xchg
cs
nopl
ret
inc
add
xchg
ds
dec
mov
mov
daa
xchg
xchg
lods
or
mov
aas
ret
lcall
cmp
jp
xchg
test
jnp
js,pn
cmc
sub
sub
sub
mov
sbb
out
dec
xchg
sti
pop
cmc
sahf
daa
lods
fnstenv
test
repz
sub
hlt
sahf
inc
or
and
push
invd
sarb
xor
mov
mov
pop
or
int3
mov
add
inc
dec
cld
aas
fisttpl
mov
mov
popa
mov
stc
mov
mov
stc
shlb
jge
mov
push
push
stos
or
sbb
out
add
insb
outsl
insb
jbe
data16
jns
sahf
mov
and
sbb
cmp
cmpsb
addr16
or
out
jl
and
movsl
insb
repz
fldt
or
add
in
fs
insl
popa
loope
dec
sbb
adc
xchg
leave
bnd
pop
push
into
imul
sub
lods
inc
js
jns
rorl
cmp
or
push
or
ret
inc
mov
rorb
inc
or
xor
or
in
mov
decl
xorb
orb
pop
mov
push
push
xchg
test
arpl
inc
pop
add
push
push
inc
cmp
mov
jle
imul
daa
leave
clc
int3
roll
je
sti
js
jns,pt
push
pop
add
das
lret
inc
adc
add
out
push
jp
fnstenv
dec
test
dec
xlat
pop
popa
or
mov
sub
and
push
mov
nop
les
aas
jne
cmc
sbb
jg
add
out
lds
shll
cmp
dec
mov
test
jae
mov
and
insl
xchg
pop
insb
es
and
rol
jno
imul
mov
mov
or
lods
shrb
jp
rcrb
in
and
or
jecxz
inc
mov
das
lcall
jmp
icebp
ds
mov
mov
sbb
divb
xor
repz
pusha
dec
enter
das
push
push
xor
and
into
lret
outsl
loope
cli
pop
movntps
rcll
out
into
jno
fnstenv
mov
stos
addr16
shll
ljmp
dec
xchg
cmpsb
xchg
js
jp
adc
mov
sbb
sub
push
adc
xorl
jns
dec
adc
ja
lcall
mull
fcomip
mov
sbb
leave
aas
aad
testl
inc
pop
lods
cmpsl
or
mov
cmpsl
jne
add
and
add
shrl
je
or
scas
xchg
sbb
inc
sub
xchg
mov
or
sub
jecxz
int3
xor
push
xchg
jge
rorl
fdivrl
mov
sbb
add
xchg
bound
scas
cmp
or
and
sub
jne
pushf
fcom
ret
test
cld
sub
enter
mov
cltd
xor
xchg
push
popa
or
rolb
sub
mov
jecxz
cmpsb
pop
out
jg
or
mov
push
imul
sahf
pop
jne
inc
ret
cmc
xchg
and
popa
inc
paddb
lods
mov
lcall
rolb
push
negl
mov
push
test
dec
clc
push
sub
inc
in
jne
sbbb
or
inc
ret
sti
fucom
test
mov
lcall
stos
push
and
jg
test
cld
jae
imul
jne
mov
movsb
movsl
ret
inc
jo
mov
cmpsl
xor
sub
add
dec
mov
cmc
add
mov
sub
fld
negb
or
mov
jns
mov
xor
insb
insl
mov
xchg
into
aam
dec
cmp
sbb
js
das
add
add
enter
jl
push
flds
shll
jb
cli
mov
or
cwtl
sub
andb
and
test
jb
inc
mov
adc
orl
ljmp
ss
inc
pop
sti
and
dec
jle
sbb
loopne
xor
mov
inc
fistl
mov
pop
add
cmpsb
jp
mov
mov
xor
mov
nop
and
ljmp
or
dec
xchg
mov
fs
jecxz
stos
fldcw
jge
fisubrs
rcll
jecxz
cmp
and
inc
cmpsl
imul
cmp
mov
push
ror
ds
cmpsl
filds
xchg
dec
cmpsl
xor
lods
push
dec
repz
mov
pushl
sbb
shlb
std
cld
mov
dec
mov
xor
xchg
cmc
adc
mov
mov
xchg
mov
pop
shl
mov
push
pop
cwtl
cmp
and
xor
mov
aam
call
and
jo
movsl
cmp
mov
dec
pusha
ds
push
mov
cltd
and
sub
hlt
or
jl
push
in
test
les
repnz
shrl
dec
scas
pop
imul
pop
xor
xor
stos
data16
cld
inc
sub
adc
scas
xchg
xor
cmpsb
xchg
mov
inc
lcall
jmp
iret
xor
or
fistpl
pusha
pop
and
imul
inc
les
mov
xor
nop
inc
xchg
imul
stc
pop
fldcw
xor
rcll
lret
jg
rorb
sti
sub
rcl
cmc
push
jecxz
imul
std
inc
popf
cmp
pop
subl
out
mov
or
stc
lahf
arpl
xor
add
lret
push
das
inc
xor
push
movsb
jg
pop
mov
in
and
xchg
and
xchg
sbb
mov
lea
nop
push
push
int
xor
roll
mov
rorl
sub
daa
cmc
js
pop
bound
mov
int
and
into
jnp
dec
ret
inc
mov
push
lods
dec
jg
mov
bound
xchg
fildll
orl
cs
mov
sbbb
orl
and
jae
stos
xor
mov
push
cmp
dec
push
pop
cli
adc
push
cwtl
sub
int
xchg
pop
divb
xchg
aaa
mov
lret
ret
or
in
cmp
mov
fs
or
pop
fs
mov
cmc
les
stc
push
lret
sar
outsb
adcb
jg
adc
inc
push
outsl
repz
in
xchg
or
inc
jb
enter
stc
adcb
mov
test
pop
lds
in
inc
cmp
jmp
aam
and
push
or
aad
in
xchg
or
add
inc
fcmovnbe
push
lods
scas
std
fstpl
daa
xchg
pusha
les
xor
jae
mov
add
sub
ffree
xlat
sbbl
sub
or
or
xchg
add
in
mov
push
mov
pop
jno
add
out
mov
jle
inc
mov
sub
cmp
clc
into
pusha
arpl
neg
je
and
aam
xchg
insb
adc
sub
inc
hlt
lods
cmc
push
iret
aad
sbbl
jbe
jecxz
test
mov
lea
sbb
and
cld
out
sub
or
dec
pop
adc
insl
testb
pop
sub
adc
je
jnp
push
xchg
repnz
mov
or
test
push
imul
int3
lods
push
rcl
or
pushf
push
adcl
fisubrl
mov
mov
add
cmpsb
in
jg
sub
sbb
popa
pop
cmp
or
inc
mov
hlt
lcall
repnz
lock
lods
jmp
adc
repnz
lock
sbbl
mov
lods
and
out
insl
loopne
imul
add
cmp
inc
mov
mov
fadd
cld
out
inc
jae
hlt
pop
test
or
test
cmp
adc
mov
and
mov
inc
mov
loope
loope
lock
jae
ss
adc
add
test
mov
sbbl
loopne
dec
sbb
loope
into
dec
pop
ja
jl
xchg
ja
inc
sbb
loopne
sbb
add
push
cmp
jg
sbb
cmpsl
int3
dec
cmp
ret
aaa
or
in
sub
jbe
fsub
test
lock
dec
push
call
jmp
dec
outsl
xor
jmp
test
add
push
bnd
ja
popf
adc
and
jecxz
std
and
test
mov
mov
and
das
packuswb
dec
insl
scas
cmp
push
xchg
pop
mov
ret
in
les
mov
lds
insl
sbb
dec
cmp
inc
jle
cli
mov
cmpl
lret
mov
mov
scas
xor
insl
data16
xlat
shlb
lahf
jle
xchg
sti
les
adc
xor
cmpsb
loopne
sub
jecxz
jne
daa
xor
dec
into
and
cltd
pop
mov
out
mov
lods
pop
cmp
mov
xlat
jbe
sbbb
and
addb
push
mov
outsl
aad
mov
cmp
inc
sub
sti
xorl
xor
jno
inc
cmp
pop
ljmp
or
sarl
xchg
movsb
push
test
jo
xor
mov
es
jae
jne
mov
insl
outsl
imull
scas
mov
push
outsb
adcb
out
je
jne
arpl
clc
cmp
sbb
adc
scas
pop
jg
out
sbb
jne
icebp
loopne
mov
push
fsubr
addr16
cmp
jno
or
leave
xchg
lret
in
add
aam
test
incl
xchg
imul
insl
call
dec
lea
bswap
mov
mov
mov
out
and
xorl
jne,pn
in
pop
ret
mov
xor
xor
inc
or
daa
sbb
mov
pushf
xchg
jl
ja
leave
adc
fimull
inc
hlt
add
pop
orb
fidivrl
fsubs
lcall
cmp
mov
cli
in
jo
psubusw
dec
and
cltd
outsb
pop
mov
test
mov
call
jno
cmp
adc
js
push
popf
mov
push
clc
les
inc
ds
popl
ja
icebp
pop
cmp
mov
lcall
mov
roll
and
daa
repnz
addr16
fistl
popa
or
addr16
in
push
loope
adc
add
xor
fmuls
dec
dec
aam
ret
je
add
scas
loopne
adc
inc
in
lret
push
or
gs
adc
in
cld
inc
jmp
add
mov
xor
shll
iret
push
xor
ret
jp
stos
cmp
and
pop
clc
scas
push
das
push
out
cmpsl
cmp
arpl
fisubrl
mov
or
jo
or
inc
mov
daa
adc
xor
xor
jmp
mov
rcrl
add
shlb
sbb
inc
cli
jbe
loop
sub
xor
dec
inc
enter
dec
and
dec
or
sti
mov
inc
mov
dec
jne
cmove
adc
xchg
mov
xchg
inc
cmpsl
xchg
xor
adc
movsl
xor
std
push
and
cs
repz
dec
push
sbb
adc
popa
sahf
arpl
jp
or
cmpsl
add
test
hlt
testb
push
adc
lret
add
xchg
add
mov
xchg
xor
or
sahf
stc
cmp
fwait
pusha
andl
imul
or
dec
imul
mov
pop
vucomiss
jae
pop
mov
jecxz
lret
negb
fwait
sbb
xor
pop
sbb
inc
xor
mov
inc
pop
mov
mov
push
and
xorl
cmpsl
or
inc
iret
pop
push
dec
and
fisubrs
inc
aad
jno
mov
loope
int
jecxz
ret
aaa
or
xchg
pop
int3
pop
cmp
or
repnz
mov
adc
ficompl
mov
bswap
jnp
rolb
push
movsb
mov
pop
lods
pop
ds
or
xor
jae
cli
pop
cmp
ss
shrl
mov
into
jno
out
pushf
mov
sbb
leave
ljmp
aas
hlt
int
mov
sbb
mov
inc
repnz
in
mov
cltd
scas
lods
pop
rolb
xor
push
cmp
mov
lcall
dec
cmpsl
jmp
push
cmp
xchg
lea
aad
sbb
fwait
push
or
rolb
mov
cmp
movsl
ss
mov
mov
jbe
push
cld
inc
cld
fcmovne
dec
iret
or
cmp
scas
aaa
pop
pop
mov
filds
sti
bound
and
icebp
ja
or
inc
pop
dec
es
loopne
inc
jge
cmc
jmp
inc
or
test
mov
pop
sub
fstl
aas
add
test
int
dec
cmp
push
sub
inc
adcb
in
and
xor
mov
jmp
repnz
movsl
jmp
sub
mov
pushf
ja
or
jae
dec
je
js
mov
adc
lret
mov
out
int
cmpsl
mov
repz
les
repz
and
icebp
cmpsb
lock
mov
frstor
fnstenv
jge
cmpsl
cmp
mov
scas
cmp
rorl
stc
notb
icebp
in
sti
cmc
imul
pop
repnz
mov
pop
icebp
dec
xchg
test
ret
mov
faddl
iret
push
sbb
xchg
jno
pop
in
xor
jmp
jno
dec
cmpl
aaa
dec
mov
xchg
fdivl
add
jnp
mov
inc
loop
mov
pop
fstp
into
js
ret
lds
mov
push
jecxz
mov
mov
sbb
mov
or
sbb
mov
decb
inc
cld
int3
lds
mov
outsb
test
orl
aaa
sarl
jle
xor
mov
adc
adc
or
sbbb
dec
jmp
fldcw
cli
insl
sbb
inc
cmpsl
sub
outsl
sbb
xor
push
cmp
push
adc
sti
fnstsw
jae
or
push
xchg
mov
adc
jnp
in
das
cltd
sub
ret
sahf
ja
into
or
ss
popa
fldcw
xchg
xor
push
sub
cwtl
and
js
mov
fildl
fs
mov
and
mov
rcrl
lea
and
imul
std
sahf
popa
mov
sub
rcll
sahf
mov
rcll
lret
sbb
loop
push
and
sbbl
cmpsl
xchg
pushf
addb
sub
cli
imul
in
mov
sahf
sbb
loopne
xchg
stos
lcall
push
cmp
aad
inc
daa
aas
xchg
jg
outsl
pop
inc
xor
ret
leave
mov
pop
mov
out
ret
pushf
loopne
adc
mov
xchg
cmp
xor
test
sub
fwait
lods
les
inc
ja
adc
inc
sbb
pushl
cwtl
je
mov
fistpl
push
dec
adc
gs
iret
push
insb
inc
cmpsl
dec
scas
andl
push
mov
xor
jmp
dec
knotw
fisubrs
cwtl
pusha
jle
popa
pusha
fistps
xorb
out
popl
add
mov
int3
or
pushf
jmp
not
lds
js
or
pop
sbb
push
cmp
shrb
mov
pop
dec
je
stc
push
sbb
insb
inc
mov
arpl
in
pop
test
lcall
push
ja
test
out
mov
inc
aad
pop
pusha
idivl
pop
cmpsb
andb
jne
pop
sbb
out
jl
and
inc
out
push
mov
movq
pushf
xchg
outsb
repz
les
fs
leave
jle
jle
pop
scas
in
fiadds
popa
js
bound
ret
sbb
movsl
and
insb
jge,pn
jge
test
cmp
sbb
sbb
pop
sti
sbb
loop
cmpsl
popa
data16
movsb
sbb
sub
popf
pop
std
jge
fiaddl
ss
sub
mov
inc
enter
clc
stos
jo
add
enter
cmp
mov
ja
test
pop
inc
das
out
mov
lds
jnp
dec
xor
xchg
mov
ljmp
push
enter
iret
xlat
enter
xlat
xlat
int
inc
nop
lock
adc
jle
enter
repz
inc
aad
xor
cmp
mov
movsl
lods
cli
lods
stos
sbb
dec
add
loop
jecxz
mov
jmp
insl
and
stc
cmc
das
mov
cmc
sub
jmp
xlat
xorb
js
lcall
leave
or
or
es
cs
mov
xorl
pop
sbb
push
bnd
xchg
sbb
mov
lock
xor
xchg
mov
mov
add
sti
imul
push
push
inc
pcmpgtd
jno
iret
pop
mov
xor
pusha
sub
mov
in
sub
stc
arpl
sub
push
push
lahf
and
xor
sarl
movsl
jo
dec
push
test
shll
fnstcw
arpl
in
push
xor
mov
xchg
stc
cmp
jecxz
es
sbb
in
xchg
push
lods
arpl
and
adc
fsts
rorl
stc
loop
pop
outsl
jmp
clc
fadd
gs
xor
cmp
inc
cs
hlt
jb
iret
pushf
jae
out
xor
or
mov
test
push
std
add
mov
cmpsb
insl
xor
add
xor
xor
inc
rorl
and
jbe
loop
loopne
in
mov
out
xchg
dec
jp
out
es
cmp
test
inc
mov
lahf
cli
ret
aas
sub
or
adc
in
dec
mov
and
rol
xor
ja
fwait
cmp
ret
sub
mov
ss
adc
add
xchg
sbb
mov
xchg
jp
sbb
pop
movsl
sbb
loop
popf
cmp
shr
jae
shll
add
fidivs
out
lret
mov
mov
adc
fs
hlt
inc
sub
push
and
movl
inc
shlb
outsl
cmp
xchg
jb
mov
cltd
cmp
rcll
mov
clc
lods
movb
sahf
mov
repz
shrl
mov
lock
sbb
mov
imul
cmp
add
push
sbb
cwtl
lret
or
rcrb
outsl
jge
push
in
pop
jecxz
out
xchg
push
ljmp
bound
fldenv
movsb
int
sub
cmp
and
cmp
mov
je
js
and
lea
pop
fiaddl
mov
jp
enter
xor
pop
icebp
clc
adc
das
icebp
jmp
popf
std
test
or
in
cmpsl
pushf
mov
adc
lods
aam
adc
iret
cmp
mov
leave
add
mov
and
adc
addr16
rorl
jle
lods
xchg
addr16
in
les
je
stos
lds
jae
mulb
ja
cmc
mov
xor
add
fwait
jmp
push
jp
mov
std
sahf
mov
mov
icebp
jg
fnsave
outsb
sub
adc
lret
ds
test
ret
sub
pop
inc
aaa
push
out
or
aas
fmuls
mov
fstpl
hlt
dec
inc
imul
mov
xor
mov
in
int
xor
daa
adc
loopne
ret
push
ror
and
push
push
xchg
call
dec
lret
rcrl
sub
xchg
mov
mov
adc
shll
mov
pop
push
adc
pop
sbb
in
fdiv
lods
cmp
xor
push
and
or
dec
inc
jg
mov
mov
xchg
cmp
xor
inc
movb
movsb
rcll
mov
sub
mov
cmp
imul
fsubs
or
sub
repz
sbb
test
dec
fisubl
xor
xchg
cmp
daa
cmp
out
ret
dec
pop
adc
insb
pop
jno
add
mov
jg
sbb
mov
inc
daa
dec
pop
movsl
in
notb
push
add
cli
sarb
push
stc
xlat
sbb
jp
fisubrl
leave
and
pop
lock
jns
or
push
js
in
and
fmuls
cs
test
lea
lcall
arpl
test
and
loopne
inc
pop
jae
jnp
xchg
adc
ja
cwtl
popf
or
loope
mov
outsl
nop
xchg
jle
or
adc
adc
das
jnp
stc
jp
pop
outsb
adc
repz
les
adc
std
adc
xchg
adc
imul
sbb
inc
push
push
or
inc
adc
pop
mov
push
mov
lds
in
ss
imul
or
addr16
rcl
inc
or
imul
mov
jno
or
iret
lods
mov
jb
sub
dec
enter
push
outsl
dec
inc
roll
mov
out
arpl
test
mov
or
stc
jns
push
mov
push
adc
repz
cwtl
sti
fildll
sbb
cmp
cmp
in
push
or
mov
dec
movsl
xchg
in
outsb
cmc
addb
push
mov
sbb
or
cmp
lock
outsl
cmp
sub
cmpsl
cmpsl
or
add
sbb
idiv
addr16
pop
inc
sub
sbb
mov
jl,pn
mov
add
dec
cli
xchg
inc
xlat
and
aaa
push
jae
or
inc
sub
cmp
insb
inc
and
pop
cmp
xchg
sahf
aam
lret
pop
ret
inc
adcb
jae
mov
pop
neg
loopne
xchg
mov
add
xcrypt-ofb
cmpsl
outsl
mov
push
xorb
mov
stos
arpl
sub
and
or
mov
mov
adc
sbb
pop
sti
fmuls
xchg
push
jbe
pop
std
sub
dec
jle
mov
callw
sbb
and
mov
cltd
imul
add
mov
dec
fs
loope
xor
repnz
jp
jo
sbb
jle
jle
fcmovnb
jp
adc
jg
fistpll
push
mov
stos
lret
das
aas
xchg
or
leave
loope
loop
outsl
cmc
cs
clc
mov
pop
mov
jbe
lcall
push
push
fidivl
xor
int3
or
or
stc
rcr
les
cli
popa
cwtl
mov
fldenv
xchg
enter
and
or
push
mov
outsb
loop
adcl
cmpsl
add
dec
jnp
in
std
sub
pop
adc
jp
js
jns
inc
fs
mov
sbb
and
outsb
xorb
mov
scas
mov
cmp
jno
inc
outsb
lods
int
lock
xchg
jno
push
xchg
mov
lods
test
inc
pusha
clc
fstpt
jnp
cs
lods
hlt
xorl
out
dec
xchg
inc
push
fiadds
mov
dec
repnz
or
push
stos
jno
xchg
push
mov
movb
dec
and
inc
adc
pusha
mov
sbb
out
rclb
enter
mov
inc
inc
scas
mov
andb
imul
mov
dec
pop
fsubrs
subl
pop
jp
ja
das
xor
jo
lcall
cli
mov
loopne
loope
xchg
mov
xchg
enter
in
rcll
nop
xchg
push
cmpsl
push
inc
loope
test
insb
sub
or
cwtl
pop
stos
mov
jmp
and
and
cmp
and
sbb
sub
jp
xor
jp
sahf
call
loop
decb
pop
repz
fcoms
stos
lcall
aad
inc
stc
push
and
push
xchg
and
mov
fstps
adc
sti
lea
xor
or
lea
jp
or
out
mov
es
call
push
dec
hlt
sub
add
repz
mov
fsubs
adc
inc
xor
fs
dec
jbe
stos
adc
rcl
cltd
dec
adcb
subl
ljmp
testl
shrb
push
fsubs
repz
loop
cwtl
dec
test
pop
xor
sbb
and
push
pop
and
mov
popf
and
sub
pop
inc
cmp
movsl
dec
or
in
loope
dec
adc
hlt
sub
sbb
fs
lcall
add
push
jno
dec
xor
add
dec
imul
jb
sub
xchg
es
and
pop
add
sbb
adc
xchg
lret
mov
mov
js
push
sub
pop
or
inc
add
ss
icebp
loopne
dec
jp
push
insl
pop
in
push
lahf
lcall
mov
adc
sbb
aad
cmpsl
xchg
out
inc
leave
push
das
sbb
cmp
adc
jg
fsubrs
test
add
test
js
push
outsb
xor
inc
adc
movsb
clc
popa
dec
jo
mov
or
pop
fcomip
sub
mov
dec
add
test
dec
pusha
sbb
add
xor
push
mov
aam
pop
shlb
xor
ljmp
dec
jp
inc
pop
adc
cmp
addr16
bound
xchg
ss
testl
cmp
pop
jbe
clc
repnz
in
ljmp
inc
mov
xor
test
lods
enter
cli
push
dec
mov
outsl
push
and
rcr
push
es
add
push
out
cli
push
add
add
push
sti
mov
jns
daa
js
pop
jnp
andnps
jmp
xlat
xchg
adc
push
sub
outsb
sub
jo
scas
and
pop
add
xor
pop
lahf
in
les
out
xor
cli
sarl
jmp
in
xchg
push
aam
push
movsb
gs
jmp
jmp
pop
in
mov
fldenv
pushf
fstpl
xchg
sub
pusha
inc
add
xlat
dec
sub
test
adc
xlat
aam
ret
pushf
scas
daa
adc
loope
faddp
dec
cmp
int
ret
xor
add
hlt
lret
push
jp
adc
lret
lret
in
leave
and
jb
jge
stc
jno
bound
fwait
das
scas
repz
ret
hlt
inc
adcb
mov
nop
jne,pn
adc
in
jnp
xor
xchg
push
fwait
inc
jl
aad
push
imul
mov
xor
idivl
iret
imul
ficoms
loop
std
dec
and
jge
outsl
cs
fnsetpm(287
lods
xchg
adcb
movsl
pop
xor
sub
jno
into
sub
push
dec
aas
popa
sarb
jae
das
shll
jno
in
sarb
mov
and
ds
mov
testl
fcom
and
xchg
lods
in
movsb
and
leave
cs
jno
mov
sub
daa
out
repnz
test
and
jo
sbb
xchg
add
test
and
incb
xchg
xchg
in
xchg
xor
das
pushf
cmp
adc
dec
lcall
jns
mov
xchg
push
jb
sbb
push
pop
sbb
jne
subb
lock
push
jl
cmpsb
bound
cli
push
pushf
jbe
push
orb
sub
dec
dec
or
sbb
loop
movsl
lock
push
jecxz
xchg
pusha
mov
pop
jb
out
adc
bound
cmpsb
adc
jae
pop
jbe
and
xor
xor
test
sbb
shlb
daa
out
xor
ja
mov
or
loope
or
aas
outsl
sti
cli
lods
inc
outsb
or
adc
sub
fxch
jns
mov
dec
jecxz
pop
pop
lods
add
and
pop
sar
mov
inc
cmp
pop
xchg
inc
inc
or
arpl
xchg
maskmovq
notl
dec
test
pop
sub
hlt
add
daa
and
inc
jg
shll
or
adc
adc
leave
les
js
stc
cmp
cmc
inc
pop
mov
mov
jne
mov
fidivs
adc
mov
lods
fisubl
insl
rcr
sub
faddl
in
jne
mov
adcb
jp,pt
xchg
test
lock
jp
push
test
fimuls
imul
sbb
fdivp
xchg
mov
lea
jbe
les
dec
out
leave
shlb
mov
shlb
fmuls
add
adc
push
mov
jne
ljmp
sbb
xor
push
aam
je
ret
jb
stos
ficoms
sub
ret
in
pushf
inc
popf
cmc
mov
out
and
dec
into
push
xor
ljmp
mov
mov
ljmp
ja
pop
mov
dec
in
out
mov
fisttpll
shl
push
daa
inc
mov
cmp
xlat
sti
andl
cmp
mov
mov
jbe
fsub
repnz
pop
in
adc
xor
shrl
dec
movsb
pushf
mov
rorb
jbe
icebp
xchg
sub
xorb
inc
mov
int3
add
cmp
push
add
jl
xchg
add
cmc
dec
pushl
push
in
add
inc
jbe
pushf
in
imull
test
xor
popf
arpl
ret
ds
xor
addl
in
ja
cltd
xchg
inc
icebp
inc
push
arpl
push
cltd
dec
sti
or
imul
push
fidivrl
xor
push
popf
cmp
jnp
xchg
lock
dec
mov
bound
sbb
rcrl
adc
xchg
out
cltd
out
cmp
fisubs
mov
inc
cs
fnstenv
xchg
mov
data16
stos
mov
or
cmp
mov
adcb
movsb
sbbl
pop
imul
push
pushl
sbb
lahf
mov
fildll
dec
jbe
addr16
xchg
divl
dec
push
mov
xchg
and
lret
mov
jmp
add
mov
dec
in
int3
sub
pop
fldl
sti
mov
adc
xchg
shll
sbb
xor
mov
mov
mov
sbb
fnstcw
add
inc
cmp
popf
mov
or
andb
xchg
adc
pop
add
lahf
ds
insl
out
arpl
and
test
mov
jbe
or
pop
xor
mov
fisubs
das
jae
jno
cltd
lods
push
stc
int
aas
cli
pop
cmpsb
and
repz
outsl
jns
sbb
das
inc
dec
mov
jp
dec
cli
adc
enter
imul
jo
mov
cmc
into
adc
out
lret
insl
mov
mov
adc
mov
fnsave
mov
jp
dec
pop
dec
dec
sbb
roll
stos
les
dec
push
clc
outsb
push
testb
out
sbb
imul
cli
and
je
pushf
xor
shl
pop
nop
scas
aaa
fisubrl
popf
insb
mov
pusha
sbb
dec
mov
xchg
int3
iret
sbb
push
jmp
call
sub
add
dec
jae
in
js
mov
sub
fidivrs
mov
sub
rcrb
rol
mov
fwait
dec
mov
loopne
pop
insb
pop
movl
dec
sbb
test
sbb
sub
adcl
push
sahf
scas
or
imul
insl
movsl
xchg
xchg
jmp
and
or
or
int3
jae
fs
jmp
out
cmp
jg
test
aam
mov
insl
mov
sahf
jno
cmp
push
popa
jge
aam
test
inc
sbb
xor
pop
push
cltd
andb
ljmp
mov
arpl
popf
dec
cld
mov
insb
into
jns
sbb
sub
dec
jle
daa
popa
in
sub
mov
xchg
test
sti
xchg
nop
xor
inc
sbbb
dec
xchg
adc
aas
in
imul
aaa
popf
lock
sub
test
in
lds
mov
pop
scas
pop
cmpsl
or
fs
sub
stos
add
lret
cmp
xchg
es
fsubl
lret
adc
arpl
popa
and
jns
jp
fnstcw
insb
aam
bound
push
pop
jge
cmp
inc
sub
loopne
pop
sub
cmp
test
mov
ja
sahf
mov
aam
mov
and
pop
pop
sti
lret
insb
push
push
xor
daa
das
not
jle
jae
movsb
cld
jno
mov
fsubs
xorl
jae
frstor
out
sbb
cmp
add
mov
aaa
lret
lcall
mov
out
inc
fidivs
mov
ds
aad
jg
or
ss
fcom
bound
push
push
dec
cmp
pop
cmpsb
addb
rcrl
cmp
sarb
add
xor
push
arpl
or
into
sub
mov
pop
stos
or
jl
pop
cltd
mov
lahf
aaa
shll
mov
int
pushf
in
jne
sub
outsl
aas
or
sbb
mov
pop
cmp
jno
inc
fsubrs
cld
insb
popa
jle
xor
push
pushf
dec
loopne
cmpsl
in
shlb
push
sbb
jnp
push
rorb
dec
xorl
mov
inc
sarb
mov
inc
repz
lock
sahf
outsl
cmc
je
fsubs
xlat
test
movsb
sub
xor
pop
jecxz
cmpb
outsb
jmp
mov
nop
hlt
pop
ficomps
lods
dec
sbb
push
dec
mov
js
enter
mov
sbb
and
cmp
imul
sbb
or
jecxz
or
sbb
jbe
sub
adc
out
push
mov
fadd
testl
push
out
mov
adc
inc
and
dec
rcrb
inc
inc
stos
test
stc
pushf
jo
pusha
or
fxch
xor
ljmp
in
push
scas
inc
lret
mov
lret
jl
hlt
cmp
push
gs
mull
mov
in
mov
xlat
aad
and
ret
or
or
sbb
aas
aaa
roll
cmpsb
fxtract
jb
adc
repz
jp
lret
jg
and
shrb
pop
lods
in
ss
ja
sbb
fs
into
pop
lahf
mov
and
xchg
mov
mov
push
or
cmp
scas
rclb
test
cld
mov
dec
out
mov
int
in
shl
push
outsl
out
jp
jp
aaa
sbb
mov
mov
or
add
add
idivl
inc
in
adc
and
icebp
cs
flds
orb
sahf
jbe
mov
push
insb
sbb
or
movsl
lods
dec
jle
pop
clc
aaa
pop
aas
loopne
add
jne
add
fdivrl
cs
outsl
pop
shll
jae
sub
loopne
xchg
aam
push
mov
push
xchg
pop
scas
xor
cmp
loope
xor
lea
lods
adc
stc
f2xm1
push
xchg
insl
lcall
aam
mov
sbb
clc
mov
dec
out
fldenv
fsubl
mov
adc
imulb
in
jo
scas
pusha
sub
cmc
js
aad
ljmp
pop
out
inc
mov
sbb
and
imulb
push
xchg
test
andb
scas
bound
xchg
xor
inc
inc
mov
mov
dec
test
adc
xchg
cltd
ret
mov
jmp
jne
xchg
jl
lods
jo
mov
out
sarl
lret
and
scas
call
pop
sti
xor
mov
mov
cltd
leave
icebp
mov
lds
add
pop
add
push
mov
fildll
pop
fsts
jae
push
pushf
sti
mov
sbb
out
fs
mov
xor
sbb
adc
jmp
add
outsl
shll
scas
outsb
and
or
mov
fs
sahf
lret
movsl
xchg
mov
add
mov
rorl
shrl
fcomps
imul
jnp
sti
hlt
cwtl
inc
xchg
lea
mov
inc
or
xchg
cmpsl
push
push
loop,pt
add
sub
jno
lret
sbb
xor
pop
or
aas
enter
subl
cwtl
ja
lods
xor
mov
test
push
mov
cmp
mov
sbb
and
into
mov
outsl
mov
test
mov
inc
les
imul
mov
cmp
nop
mov
orb
jl
in
adc
xchg
xchg
mov
mov
cli
insl
sub
lcall
repz
cmpsl
je
push
xchg
jo
insl
lret
insb
out
jl
xchg
and
sub
ret
lahf
andl
call
mov
mov
test
xchg
imul
dec
addr16
in
mov
mov
xchg
mov
insl
xlat
bound
cmpsb
xchg
sbb
push
cmpsl
sbb
mov
adc
mov
mov
sbb
cli
outsl
in
int3
push
pushf
and
xchg
mov
add
rcl
imul
pop
imul
xchg
mov
out
adc
adc
cmp
mov
jne
lret
sub
jno
pushf
test
or
fnsave
dec
add
mov
out
push
push
pop
enter
mov
jp
mov
fnstcw
push
jne
sbb
rorl
pop
insl
xchg
sahf
pop
dec
mov
dec
jecxz
or
sbb
mov
popf
js
fsubrl
clc
sbb
mov
xor
pop
cmpsb
ffree
adc
and
cmp
loope
xchg
mov
fstps
outsl
ja
insb
pop
dec
sub
push
jnp
ljmp
mov
push
lds
orb
sub
inc
loope
inc
orl
sbb
or
lods
mov
cmp
out
sbb
js
pop
repnz
mov
mov
and
xor
inc
ret
xlat
or
aad
xchg
repnz
popa
sarl
aam
add
xlat
push
jae
mov
push
mov
mov
dec
into
outsb
dec
lock
jo
inc
mov
jl
fs
fldcw
outsl
mov
fimuls
es
adc
popl
lods
cmp
xchg
aaa
filds
stos
test
imull
movsl
ficoms
popl
in
pop
xorb
adc
push
xor
add
sbb
ror
jbe
mov
cmp
cmp
inc
outsl
xchg
fisubrl
arpl
or
and
pushf
mov
xchg
cmpb
stos
out
mov
jl
pop
pop
mov
sub
and
dec
popa
inc
mov
test
xor
stos
jo
push
xlat
jb
adc
imull
mov
adc
insb
sub
or
daa
rolb
or
sub
inc
cmp
xchg
neg
adc
adc
outsl
pop
add
imul
mov
out
outsl
push
aas
daa
fldenv
add
icebp
mov
data16
or
mov
roll
pop
test
das
out
insl
mov
fsubrs
push
push
mov
orb
push
aam
xchg
mov
pop
repz
jl
xlat
test
pop
cmp
ret
pop
cmp
ds
xor
aaa
or
outsl
add
fadds
mov
je
pop
aaa
and
pop
fdivr
xlat
pop
leave
and
out
adc
xor
cmp
shl
push
or
xchg
inc
lret
inc
inc
push
iret
out
int
dec
ljmp
in
lock
test
jno
jecxz
cmc
cmp
leave
int3
mov
out
cld
adc
je
push
es
inc
cli
cmc
imul
clc
xor
dec
shlb
mov
fsubrl
call
inc
cmc
cwtl
test
daa
xchg
dec
cmp
int
cmpsb
outsl
divl
jb
jae
sub
scas
daa
gs
aam
cmp
fwait
mov
cmp
lahf
push
stos
pop
cld
dec
mov
insl
jmp
gs
sti
call
lret
das
xor
and
push
xor
les
out
in
xchg
mov
dec
push
loop
inc
stos
rclb
sub
int3
loopne
bound
pop
inc
cli
jg
in
and
cmp
outsl
stc
movsl
imul
adc
inc
ja
lahf
clc
or
clc
iret
and
inc
push
stos
fimull
push
add
cltd
xchg
sbb
lock
call
scas
sahf
call
add
jge
sbb
adc
sbb
and
nop
rol
mov
and
in
lds
call
das
aad
cmp
ret
leave
gs
and
cwtl
pop
add
xchg
push
push
pop
push
or
fcom
xchg
mov
adc
jne,pn
and
xchg
js
and
lods
in
jp
inc
loope
xchg
mov
xor
shll
hlt
xor
mov
repnz
popa
lret
mov
call
loopne
mov
insb
pop
sub
sbb
push
jp
pop
jge
lods
or
inc
jle
aad
sub
testb
push
outsl
mov
inc
dec
js
adc
fst
jno
outsb
adcb
mov
sti
jp
jnp
in
ljmp
or
cld
stos
adc
jp
test
imul
push
loopne
add
repz
aad
jns
mov
arpl
rcrb
push
outsl
mov
data16
or
adc
pop
call
inc
jge
xchg
push
and
out
subb
mov
mov
sarb
hlt
fsts
push
iret
mov
and
pop
imul
add
scas
sub
iret
cmp
hlt
out
fcoms
sub
add
xchg
mov
inc
test
jns
mov
pop
mov
popa
rolb
xchg
mov
dec
push
stc
inc
push
lret
jecxz
repz
inc
push
das
sub
or
adc
add
test
cwtl
dec
stos
pop
add
mov
sbbl
fwait
aaa
or
mov
pop
pop
call
mov
sbb
repnz
mov
mov
mov
jmp
add
mov
add
hlt
lods
bound
mov
xchg
nop
repz
sbb
sub
daa
jbe
fildl
pop
inc
jnp
int
jnp
jne
daa
test
leave
clc
jns
out
stc
hlt
int
rorl
jecxz
jb
and
out
mov
sbb
and
lock
fsubrl
mov
jge,pn
add
hlt
cli
aaa
xchg
inc
cmp
jnp
xchg
mov
mov
jbe
lret
sbb
jnp
orl
icebp
loopne
cmp
cmpsb
lret
cmp
push
jmp
fimull
addr16
test
mov
pop
pop
jne
add
and
mov
mov
or
mov
push
bound
pop
movsb
adc
cltd
aad
adc
insl
add
int
xor
addr16
pop
xor
mov
xchg
lea
or
add
mov
outsb
loopne
fwait
push
xchg
es
xor
sti
xchg
popf
aas
sbb
cmp
cli
xchg
inc
cmp
divb
es
xchg
gs
ljmp
shlb
scas
rol
les
pop
mov
gs
jp
and
aaa
lahf
add
adc
jns
inc
lcall
xchg
and
mov
mov
iret
ja
inc
rorb
imul
xchg
cmp
push
xchg
xor
pop
and
mov
sbb
mulb
loop
add
out
bound
adc
call
sbb
mov
scas
adc
aas
xor
rclb
js
movsl
fstps
imul
add
sub
fdivl
nop
or
clc
push
out
push
fwait
jle
xor
into
xchg
inc
ss
shll
xchg
inc
test
lock
fwait
lock
iret
aas
xor
adc
jb
imul
cld
icebp
push
or
push
jl
sbb
push
out
mov
cmp
sub
lret
pop
push
mov
ds
mov
or
fcomp
add
adc
fs
iret
fstpt
push
adc
fiadds
fisttps
sbb
fwait
mov
repz
cmp
mov
sbb
repz
fcoml
pop
sub
out
addr16
mov
jmp
mov
mov
and
iret
out
sbb
inc
aam
iret
pop
adc
andl
adc
test
or
sbb
outsl
xchg
dec
negb
cmp
int
stc
adc
enter
xor
fistpl
or
add
add
mov
or
mov
xor
aad
repnz
in
pop
adc
stos
sbb
or
mov
jmp
and
outsb
leave
bnd
cmp
fisttps
xor
mov
inc
ficoml
sub
xlat
cmp
xchg
mov
insb
mov
cmp
aad
mov
iret
push
jmp
or
jb
sub
pop
xchg
mov
imul
test
sub
xlat
mov
shll
out
into
mov
nop
or
and
imulb
imul
jmp
mov
adc
pop
xor
daa
ret
fcmovnb
sbb
add
dec
xor
and
scas
aas
in
mov
add
movsl
mov
sub
hlt
dec
fstpl
inc
cmp
lcall
lods
imul
push
jbe
xchg
xor
mov
push
pop
mov
into
test
clc
sub
in
emms
mov
sbb
or
sbb
mov
mov
push
push
dec
xchg
pop
jbe
lds
leave
fwait
mov
jg
xchg
xor
pop
cmp
aaa
adc
mov
sti
aas
orl
mov
das
movsb
push
dec
push
mov
inc
out
insl
sbb
jbe
cmp
or
pop
outsl
mov
mov
iret
shlb
pop
jge
ja
shll
mov
sbb
in
sbb
aaa
adc
push
out
mov
mov
push
out
ss
out
jg
add
nop
sub
pop
or
leave
jl
jnp
out
and
jno
aas
dec
xchg
outsl
lods
add
mov
dec
xchg
mov
bound
stos
sbb
scas
jge
mov
cld
xchg
push
push
pop
mov
inc
mov
mov
inc
ja
xchg
sub
popf
or
mov
mov
je
fcmovnb
andl
cmpsl
mov
jp
ret
inc
xchg
lds
les
pop
sub
jno
xlat
fbld
mov
pop
jmp
mov
fstps
stc
jb
aas
outsl
adc
cmpsl
sbb
dec
jne
insl
int3
iret
stc
jbe
mov
mov
push
jne
sbb
lcall
sarl
dec
cli
pop
test
mov
pop
cmpsl
xchg
add
test
jno
rcll
mov
in
inc
sahf
pop
imul
mov
leave
lods
and
and
push
rcrl
popf
gs
mov
andl
jne
ret
jbe
jnp
pop
inc
sbb
xchg
and
cltd
sub
sub
enter
inc
hlt
cmpb
test
sub
pop
xor
fwait
unpckhps
push
je
add
shrb
sar
mov
fsub
popa
ret
ja
insb
sbb
std
lock
pop
adc
fsubs
and
adcb
mov
xchg
jbe
mov
push
inc
adc
fdivrl
inc
aam
hlt
sahf
cmp
jle
xor
decl
pop
and
inc
push
jb
jae
arpl
fstl
mov
scas
and
fsts
jl
cltd
js
ret
ud0
test
in
mov
sbb
xchg
aam
insl
in
and
sti
ss
movsb
sbb
pushf
xchg
mov
jp
scas
leave
add
sbb
mov
push
pop
xchg
cld
js
jmp
int3
adc
pop
pop
dec
cmp
movsb
mov
fnsave
mov
dec
fs
mov
imul
sub
ja
xchg
mov
add
orb
and
and
pop
xchg
int
pop
push
stos
in
mov
loopne
aam
pop
es
inc
jno
into
pusha
cmp
outsl
and
xchg
popa
lea
adc
inc
stos
dec
mov
adc
sub
cmp
insl
xchg
xchg
insl
xorb
test
loope
jmp
bound
pop
pushf
dec
cmp
jbe
addr16
pop
xor
sub
xchg
lods
lds
adc
cmp
jge
dec
subb
xlat
push
lret
add
jge
shll
popf
aad
out
lcall
outsb
push
fwait
popa
sarl
cwtl
out
in
cmpb
jno
out
sbb
mov
mov
jae
into
dec
and
mov
mov
repz
ss
sub
fsubrs
mov
xchg
in
jae,pn
nop
sub
sbb
test
and
and
int3
or
mov
xchg
jg
or
arpl
rorb
adc
lret
js
in
push
sti
jno
mov
mov
lods
mov
xorb
and
loope
sti
repz
inc
movsl
lds
mov
fimuls
test
add
dec
dec
mov
push
test
iret
add
jge
xchg
jmp
sub
jnp
lock
pop
fdivr
enter
leave
les
xor
jle
sub
mov
push
sub
stc
sbb
sbb
inc
jmp
xchg
ljmp
test
or
lcall
dec
push
xchg
pop
outsl
cmc
pop
push
xor
and
sbb
cwtl
jge
jnp
inc
out
sub
insl
and
movsb
adc
mov
push
push
daa
addb
xchg
sbb
sti
sbb
xchg
push
ss
into
pop
push
mov
pop
cmp
cwtl
mov
dec
pop
dec
xchg
jmp
mov
jmp
js
rcll
jno
push
aad
mov
add
xchg
outsl
mov
sub
jp
dec
loop
mov
popa
inc
test
sub
jnp
sub
mov
push
mov
addb
scas
in
jg
loopne
insb
cmpsb
fldcw
mov
sbb
addb
xor
push
jle
fwait
cmp
pop
stc
aaa
mov
mov
jns
jns
mov
xor
sub
mov
lock
xor
out
lods
insb
or
roll
in
loop
xchg
sbb
pop
in
test
cmpsb
repnz
sub
push
cmpsl
pop
xchg
data16
pop
sarb
pop
cmp
cmpsb
pop
jbe
aad
subb
rcl
scas
in
jge
out
sti
push
rcl
adc
decb
inc
popa
sbb
loop
cld
decl
xchg
stos
outsb
cmpb
fdivl
cmp
imul
cwtl
fbstp
push
push
sbb
jb
ss
mov
sub
out
gs
lods
out
fidivs
outsb
pop
popa
ret
push
adc
and
adc
lds
ja
or
pop
or
rcl
mov
lcall
push
xor
mov
fwait
dec
ret
xor
inc
mov
sbb
and
mov
and
jne
scas
dec
cmp
push
mov
jl
stos
xchg
fwait
decb
adc
imul
incb
fiaddl
mov
mov
stc
ss
jns
inc
push
flds
rorl
push
inc
jle
mov
aas
inc
cmp
sti
inc
aam
cld
mov
scas
test
je
dec
mov
inc
sub
lods
cmp
or
cmpsb
xchg
ljmp
jb
push
out
or
jae
cmp
sti
sub
sti
cltd
into
cmp
sub
subb
and
std
in
mov
mov
dec
mov
lods
nop
fnstsw
mov
inc
cltd
loopne
sbb
aas
mov
rcrl
cs
mov
fcompl
loop
jmp
arpl
push
jmp
sarl
sbb
jno
lcall
test
sahf
add
stc
rcr
dec
std
cli
push
mov
int
lret
iret
in
or
shr
negl
pop
cmp
shlb
xchg
mov
sbb
shlb
add
pushf
inc
cmpsl
shll
dec
ss
cli
ja
shl
mov
or
xor
adc
sti
stos
push
adc
xor
inc
inc
inc
push
stos
inc
testb
fmuls
xor
testl
scas
shll
xlat
addr16
in
fdivl
cmp
into
adc
xor
clc
xchg
rcrl
sbb
nop
pop
inc
dec
nop
dec
clc
cmpsb
testb
pop
sub
shrl
stos
pusha
push
xchg
and
sbb
les
orl
mov
xorb
xchg
rcll
jo
jne
push
mov
icebp
fcomi
xlat
popf
pop
xchg
cs
jmp
jl
stos
mov
or
leave
add
int3
nop
ud1
sbb
jp
je
fcompl
cmp
test
push
insl
jge
mov
push
mov
jb,pn
into
sahf
call
sbb
add
jl
fs
adc
sub
dec
inc
dec
xchg
mov
outsb
xchg
outsl
xor
jge
mov
mov
adc
ja
mov
stos
rcr
adc
popa
and
inc
pop
scas
add
xchg
sub
sbb
scas
xchg
hlt
mov
adc
push
movsb
outsl
adc
repz
inc
jns
xor
mov
stc
adc
test
nop
sbb
outsb
cmp
mov
inc
aad
mov
jp
adcl
dec
mov
popa
daa
aas
pop
pusha
adc
and
repz
inc
jne
out
lret
les
and
pusha
xchg
lock
sbb
mov
jmp
outsl
lcall
cli
shll
lcall
pop
xchg
sbb
insl
ljmp
je
int3
out
xchg
add
sbb
popf
aad
sbb
push
sbb
aam
idivb
push
arpl
loopne
clc
not
push
cmp
outsl
lods
test
mov
movsb
shlb
ret
shll
ret
out
cwtl
loope
adc
stc
mov
lea
out
test
cmp
push
pop
out
pop
pop
mov
nop
stos
inc
ss
jno
add
stos
cmp
gs
ret
inc
or
cmp
mov
or
inc
dec
int3
gs
in
pop
cld
dec
aas
or
xor
cmpsb
call
push
les
add
jg
push
push
outsl
mov
xor
insb
es
or
mov
repz
push
int
xor
leave
xchg
dec
and
je
ds
cmp
test
scas
adc
addr16
cmp
test
xor
sbb
dec
je
in
and
pop
shlb
int
sub
push
fisubrl
shlb
aaa
adc
int
insl
add
je
je
imulb
iret
sbb
std
push
mov
incb
mov
ja
data16
lock
outsl
fadds
test
int
nop
jo
bound
pop
cmp
mov
push
cmpsb
and
call
out
repnz
pop
aaa
jp
and
xor
push
fidivrl
addr16
xor
roll
cld
int
ljmp
inc
jmp
jl
jbe
fdivrl
jae
ja
inc
jle
sbb
adc
out
or
xchg
sub
repz
insb
and
pop
mov
jp
cmp
das
cmp
mov
sub
add
jb
adc
mov
jnp
cmp
ja
jmp
fst
or
out
test
mov
pop
lds
mov
mov
fs
outsb
iret
jno
ds
pop
js
add
into
imulb
fistpll
dec
sub
ljmp
iret
sahf
fstp
adc
push
jge
pop
xrelease
lcall
orl
mov
imul
inc
mov
or
test
inc
sub
mov
mov
and
nop
gs
add
repnz
int
pop
sbbl
cs
inc
sub
and
stos
jmp
jb
daa
jae,pt
push
leave
inc
in
pop
or
das
dec
lods
inc
ss
mov
int
push
insl
add
fstps
int
leave
jp
pushl
and
bound
xor
call
mov
and
rcl
imull
push
mov
sbb
sbb
adc
dec
fs
jne
daa
push
dec
scas
push
inc
xlat
rcr
pop
mov
lock
call
pop
jbe
ss
push
shl
adc
jmp
out
out
sbb
add
mov
and
jge
dec
jle
mov
aad
test
pop
or
mov
xlat
or
rcr
push
inc
das
sbb
mov
push
jae
add
mov
shl
ss
imul
ss
dec
mov
cmpsb
cmpsb
adc
push
decl
jo
xchg
push
jmp
out
mov
mov
pop
push
jl
test
inc
push
xchg
addr16
lcall
pop
std
add
jg
pop
clc
mov
push
fistpl
aas
outsl
jmpw
pop
imul
lret
xorb
js
pop
ret
ret
xor
mov
adc
popf
jp
iret
dec
mov
mov
jno
cmpsl
fldenv
add
je
dec
or
not
inc
mov
sbb
popa
xchg
cmc
cmp
jg
out
gs
cmp
test
movsb
mov
out
inc
mov
or
sbb
push
andl
in
and
addr16
sub
cmp
leave
dec
add
sbb
sti
lods
fadds
xchg
orl
je
in
test
or
lock
and
idivb
movsl
push
dec
adc
cmp
call
adc
pop
jae
shl
imul
cmp
scas
stc
leave
add
ljmp
aam
loopne
jp
enter
or
aam
sub
call
in
push
int3
jg
dec
leave
js
dec
call
lods
out
mov
filds
scas
scas
cmpsl
fcmovnu
scas
lret
jecxz
cmp
lahf
pushl
mov
mov
adc
repnz
or
mov
into
test
int
les
stos
rclb
mov
fnstsw
or
push
scas
scas
push
repz
pop
cmpl
inc
ret
add
or
push
mov
insb
int3
out
sub
popa
loope
pop
cmp
sub
mov
stc
repnz
ret
mov
int3
inc
ss
jle
adc
dec
xor
insb
stc
jo
mov
loope
mov
shlb
sbb
adc
bound
push
mov
mov
cwtl
jge
adc
push
or
enter
insl
dec
add
movsl
fwait
addl
lods
jno
xor
faddl
in
mov
test
xor
loopne
sbbb
stos
addl
sbb
sub
mov
or
add
add
out
jecxz
adcl
and
xchg
dec
lea
mov
sbb
stc
mov
icebp
jbe
into
ss
test
in
je
lds
lret
popa
push
sub
lahf
cltd
in
xchg
dec
jmp
outsb
push
jg
aaa
sub
stos
mov
call
inc
popa
movsl
push
sub
mov
aam
mov
test
test
push
daa
mov
mov
lret
out
sub
jle
sub
or
enter
jno
idivl
push
hlt
mov
cmp
testl
dec
js
xchg
xchg
jl
loop
inc
mov
xlat
hlt
pop
or
lcall
adc
or
and
jno
mov
js
xor
lahf
nopl
lods
loope
bound
jl
test
inc
pushf
or
movsl
orb
data16
mov
ret
aaa
push
inc
ret
call
or
xlat
mov
inc
sarl
int3
or
jecxz
inc
jecxz
mov
pop
jmp
gs
dec
mov
mov
xor
es
stos
inc
cmc
cmpsl
outsb
out
fstl
sti
xor
mov
cmp
mov
scas
and
movsl
cmpsw
pop
pop
fs
lcall
in
clc
jno
pop
jge
negb
cmc
cmpl
lea
lcall
add
push
xchg
push
test
leave
shlb
cld
loopw
push
pop
shrl
mov
push
scas
xchg
jae
sahf
push
pop
jmp
dec
iret
ret
add
stc
jb
or
push
out
jb
mov
shrb
adc
fwait
jo
pop
add
lods
addr16
mov
aaa
dec
jl
and
shl
sub
sbb
inc
or
sub
push
mov
inc
pop
cmp
xchg
lods
jae
push
in
mov
dec
es
mov
in
test
sahf
loop
aas
enter
inc
inc
add
mov
sti
pop
aam
or
dec
cld
sbb
icebp
mov
in
test
mov
inc
jp
adc
mov
adc
insl
addr16
in
sub
je
lock
imul
cmp
pslld
xchg
pop
in
or
xchg
popf
sbb
mov
lahf
xchg
in
xor
orl
movb
call
add
adc
movsb
sub
call
pop
mov
jecxz
push
cmc
adc
jecxz
loopne
mov
ret
sub
imulb
push
sub
daa
pop
add
mov
notb
pop
lahf
out
rclb
dec
test
jno
pop
dec
cmp
cmp
ljmp
into
int3
out
popf
dec
xlat
mov
popf
in
aad
lods
into
push
adc
mov
mov
insb
les
enter
inc
popa
cmp
and
mov
loopne
aas
aaa
mov
sti
fs
and
mov
shrl
mov
inc
lcall
and
sbb
cltd
mov
add
pop
pop
jnp
inc
mov
push
aad
sbb
aam
xor
push
inc
fmul
fldl
decl
out
push
add
dec
jne
ret
mov
repnz
mov
pushf
pusha
mov
dec
sbb
test
rcll
mov
lahf
in
movsl
cmc
lds
cmpsb
cmp
push
ret
jecxz
xor
mov
ror
js
sbb
mov
mov
arpl
insb
dec
setge
std
stos
cld
push
mov
das
jecxz,pt
int
xlat
pop
rclb
mov
or
adc
gs
adc
xor
stos
aas
fld
cmp
or
scas
jge
ljmp
std
nop
xor
mov
inc
pop
adc
sub
les
aas
push
pop
icebp
jg
enter
mov
mov
xchg
xchg
outsl
adc
out
mov
pusha
lds
gs
sub
aaa
sti
cltd
xchg
or
and
sub
xor
mov
ss
lcall
scas
repnz
int3
fxtract
outsl
icebp
push
mov
std
fadds
or
pusha
fldl
scas
pushf
pop
jmp
mov
jg,pn
xchg
loope
insl
mov
mov
gs
mov
and
xchg
mov
xor
lds
mov
jnp
or
lods
movb
scas
movsb
xchg
test
popf
movsb
into
sub
lcall
jl
clc
bound
inc
push
aad
mov
cmp
or
mov
pop
adc
mov
mov
mov
dec
gs
lds
mov
mov
jb
dec
push
das
dec
xor
push
fisubs
outsl
daa
push
loope
or
xor
push
andb
push
popa
aas
ficompl
xchg
ror
push
addr16
dec
aam
ja
ss
popf
test
xchg
mov
mov
rorb
or
das
out
push
clc
lret
mov
fcoms
mov
add
jle
cmp
outsl
mov
hlt
mov
or
jp
hlt
mov
adc
xchg
sub
jmp
jecxz
push
pop
daa
cmp
lods
xor
movl
cmc
lock
sarl
and
loope
fwait
in
sbb
pop
inc
lock
push
hlt
ja
push
add
sar
lahf
testl
and
add
sbb
mov
mov
mov
sbbb
dec
inc
lods
mov
push
and
and
repz
ds
fldenv
dec
stc
fsts
outsl
sub
jmp
cmp
inc
mov
ja
push
cmpl
mov
rcl
push
js
push
mov
ja
mov
sub
pop
push
clc
repz
adc
insl
adc
xchg
mov
rorb
inc
inc
jg
rcrb
or
lods
sub
cmc
dec
movsb
and
popf
lcall
es
jecxz
addr16
sti
loop
or
adc
pusha
xchg
add
rcrb
jle
pop
pop
scas
lea
xchg
mov
gs
or
orb
push
mov
dec
fs
sbb
xor
pop
into
add
cmp
xor
xchg
leave
imul
cld
xchg
in
movsl
fnsave
sbb
pop
sbb
xor
and
sub
sbb
sub
out
dec
jo
test
xchg
mov
popf
out
into
pop
sbb
push
sahf
out
loope
imul
lret
std
sbb
mov
scas
cmpsb
mov
enter
sub
add
lock
fs
pop
adc
xchg
push
and
pop
fnstsw
adc
gs
inc
andb
rclb
push
sub
shll
test
push
add
sub
pop
push
xchg
mov
xor
cmp
and
xchg
in
icebp
fsts
pop
cmpl
fmul
lods
lods
push
jmp
icebp
jno
in
sbb
in
lahf
repnz
sbb
xor
mov
std
dec
es
out
push
push
or
and
xlat
in
mov
leave
pop
ret
enter
xchg
das
sbb
ds
rcll
or
pop
mov
cmp
scas
dec
xchg
sbb
sbb
mov
cs
cmp
sbb
push
pop
mov
sub
pop
mov
pusha
and
pop
and
ds
push
sbb
push
into
loopne
fildll
xchg
std
call
inc
sub
add
in
or
pop
lahf
cmp
movsl
xchg
in
mov
adc
pusha
and
mov
lods
mov
mov
pop
cmp
sahf
outsb
leave
mov
sbb
mov
cmpb
cmpsb
xchg
mov
dec
xchg
push
iret
lahf
sbb
outsl
popf
add
inc
das
in
dec
xchg
mov
sbb
sbb
xor
and
out
cmp
outsb
cmpl
in
adc
repnz
jmp
cmpsb
jnp
in
adc
in
cmp
dec
ret
loop
jb
stos
outsl
dec
push
mov
movsl
aaa
decl
dec
add
out
das
dec
insb
jae
pop
les
inc
mov
sub
and
mov
cmp
call
loopne,pt
inc
jbe
insb
pop
in
sub
xchg
mov
or
mov
ret
sbbl
push
mov
dec
add
cltd
or
sbb
jbe
mov
sub
lock
cmp
out
inc
jno
sub
aaa
mov
mov
pop
mov
add
jnp
ja
xchg
add
aam
notb
imulb
clc
lret
lret
pop
sub
xchg
xor
sbb
inc
out
xchg
sbb
in
jnp
mov
xchg
pushf
outsb
test
and
das
add
cmpsb
je
ja
icebp
inc
pop
sbb
flds
movsb
inc
jns
mov
aad
mov
lods
jg
imul
push
movsl
insl
pop
bnd
adc
mov
pop
sub
or
shlb
test
lea
call
xchg
pop
stos
sbb
addr16
push
cmp
aad
mov
push
ja
jg
ror
es
rcll
inc
xchg
push
cmpl
cwtl
dec
sbb
out
or
adc
or
dec
jo
loope
sbb
jbe
out
pop
jb
or
cmpsl
mov
icebp
pop
push
sbb
subb
inc
aam
adc
fwait
imul
sub
ret
hlt
fmuls
popa
inc
mov
ret
dec
into
lahf
punpcklwd
dec
mov
pushf
add
arpl
in
fiadds
stos
repz
in
pop
inc
xlat
xlat
insb
cmp
decl
std
pop
jb
clc
dec
movsl
hlt
gs
rcll
dec
dec
or
scas
xchg
push
sub
xchg
popa
xchg
push
or
mov
dec
movsb
add
sbb
pop
mov
push
outsb
int3
mov
fadds
cmovg
add
test
mov
dec
sub
xchg
data16
adc
and
mov
in
or
dec
ss
rclb
pop
lock
out
inc
mov
scas
cli
xchg
inc
mov
cld
mov
add
mov
lods
enter
addr16
fsubl
inc
cmp
iret
xor
mov
mov
aam
mov
push
scas
std
jns
push
and
mov
sub
loop
pop
fistpll
dec
jbe
jg
xchg
mov
ss
jge
jno
jmp
push
data16
cmp
sub
xor
pop
xor
test
int3
inc
pop
movsl
sbbl
mov
xchg
js
cmp
int3
enter
imul
or
xchg
mov
fcomi
jmp
mov
addr16
addr16
hlt
subl
enter
or
shll
test
inc
xchg
jp
mov
push
mov
mov
fs
mull
fcomps
xlat
test
pop
sbb
sub
dec
lods
insb
dec
ss
clc
jp
pop
out
lods
jnp
rorl
sub
lods
notl
mov
ret
xchg
push
push
lret
pusha
or
fmull
mov
jle
mov
fdivl
inc
adc
in
cmp
mov
pop
iret
pusha
jmp
and
aas
or
mov
leave
leave
push
outsl
sbb
pop
das
jl
and
inc
add
cmp
xchg
add
out
push
cli
cwtl
out
pop
mul
shrb
xchg
cmp
mov
sahf
scas
jne
js,pn
in
adc
mov
cmpsb
jne
out
sbb
cmp
xchg
push
xor
neg
cld
xchg
sub
idivl
aas
sub
popf
push
fsub
inc
dec
mov
pop
sarl
jmp
xlat
mov
mov
js
inc
lods
or
mov
push
lock
pop
mov
inc
cmp
jmp
fmul
test
jl
jmp
rcrb
stc
mov
adc
inc
mov
into
mov
jns,pn
jg
fsubr
and
jns
cmc
mov
stc
test
jno
and
add
sub
test
imulb
dec
mov
js
xor
das
lock
mov
pop
xor
sbb
xchg
lea
xchg
lahf
ret
lret
lods
icebp
stos
mov
and
dec
mov
mov
and
dec
or
dec
jne
push
call
dec
push
call
mov
stos
pop
sub
mov
xchg
push
and
mov
std
lea
gs
clc
int
fisubs
mov
sbb
mov
lfs
add
lock
cmpsl
aaa
xchg
pop
cwtl
mov
nop
inc
xlat
mov
sbb
push
inc
ja
ss
adc
adc
push
push
mov
adc
jne
clc
adc
out
adc
dec
cmp
push
push
or
cmp
and
jle
jl
mov
popa
mov
push
push
cmp
adc
adc
filds
add
loope
bswap
sub
sbb
mov
pushl
es
mov
dec
mov
je
mov
insb
shl
jmp
pop
daa
push
sahf
sbb
xor
dec
cmpsb
sub
add
or
gs
jnp
andb
cld
wbinvd
push
mov
jle
push
xchg
test
or
adc
aas
xchg
sti
cmp
lahf
fwait
std
in
pushf
fildl
mov
push
cli
cli
inc
dec
rolb
inc
sub
fs
aas
add
jb
enter
xor
mov
sti
inc
bound
sbb
mov
pop
stos
sbb
subb
inc
fdivrp
cmpsb
stos
xchg
cmp
pusha
push
lock
sub
fistpll
frstor
pop
hlt
jnp
pop
imul
mulb
ret
bound
mov
or
outsb
dec
push
ret
mov
sub
cmc
test
pop
gs
inc
mov
sti
movsl
xchg
sbb
test
push
jae
sbb
and
push
lahf
test
int3
inc
xlat
ds
add
aad
mov
sub
sahf
mov
or
sbb
and
add
out
inc
mov
stos
es
fisttps
fiadds
rclb
fwait
sub
out
dec
or
aaa
and
fists
sahf
push
js
gs
scas
repz
into
sbb
iret
aad
rcll
lds
repnz
sbbb
inc
mov
or
mov
xor
cmp
cmp
pop
test
mov
inc
add
push
fisttpll
sbb
es
inc
mov
sbb
sub
cmp
test
inc
mov
jne
inc
xchg
pop
xchg
mov
ret
inc
sub
cli
mov
pusha
cmpsb
fmul
and
jecxz
scas
sbb
xchg
xchg
pop
lods
xlat
jne
adc
sbb
inc
cmc
iret
jge
popa
cli
dec
outsb
add
mov
rol
fadds
loopne
xor
mov
sbb
dec
in
add
insl
cmpsl
dec
push
repz
xchg
xor
testb
jns
call
xchg
test
pop
lods
fsts
mov
push
add
xchg
scas
push
mov
adc
out
or
fstpt
fldcw
std
sbb
test
fisubl
push
stos
push
repnz
add
stc
out
out
movsb
xor
fists
shlb
sub
lods
push
aad
mov
xor
xor
leave
adc
push
xchg
call
stos
ds
leave
pop
mov
xchg
add
cmp
push
aad
mov
adc
mov
cmpsl
das
arpl
mov
jl
jo
incb
cmp
xchg
jnp
cmpl
hlt
jnp
int
xchg
add
inc
mov
je
repz
es
in
add
pop
mov
repz
dec
les
push
and
aad
in
cs
aam
mov
mov
dec
pop
je
adc
aam
mov
lods
mov
adc
enter
pop
sti
scas
repz
rclb
adc
lods
push
bound
mov
imul
in
mov
mov
jnp
or
loop
pop
xor
popa
jae
jmp
mov
cmp
sbb
add
jae
call
xchg
icebp
cmp
rcrb
inc
aam
and
cmp
and
rorb
push
ror
sub
sbb
sbb
shlb
xlat
pop
and
pop
ljmp
push
mov
ss
clc
add
jl
xchg
dec
ss
inc
push
popa
xor
outsl
lods
sar
shlb
lock
mov
pop
add
test
sub
lods
inc
gs
add
sub
aam
cmp
aam
xor
mov
jbe
xor
into
out
fsubrl
mov
jge
stos
jo
cmp
sbb
lcall
fmull
sbb
into
jb,pt
es
lret
sub
mov
xchg
jns
popf
das
jne
and
out
xchg
sbb
mov
xchg
ror
lahf
jp
dec
add
into
push
or
adc
test
mov
ret
ds
popf
or
push
fmul
mov
lret
into
add
xchg
insl
test
fs
xor
scas
mov
xor
lock
or
lahf
adc
lea
mov
xchg
jl
mov
stos
pop
lods
jle
xchg
loope
pop
sarl
aad
jns
les
or
out
lods
enter
cltd
js
out
xchg
pop
push
aam
clc
sar
out
inc
loopne
repz
daa
push
loop
icebp
sub
xlat
xor
data16
push
cld
pop
addl
sar
add
cmp
arpl
xor
mov
pop
xor
pop
repz
test
sbb
imul
in
in
xchg
push
or
inc
sbb
iret
dec
adc
ja
xchg
cltd
repnz
je
sbb
adc
pop
cmpsl
popa
cmp
mov
flds
or
mov
hlt
jnp
mov
push
mov
sub
das
scas
sbb
push
test
adc
sub
das
decb
push
out
adc
outsl
repnz
xor
xor
mov
or
cmc
xchg
push
test
and
insl
or
sub
imul
loopne
push
fcompl
dec
notb
xchg
xchg
test
rclb
loope
jae
add
mov
inc
push
int3
xlat
out
cmp
push
out
pop
fwait
adc
jl
cmp
mov
lds
sbb
add
mov
lcall
mov
out
jge
mov
out
add
clc
movsl
cli
dec
fisttps
dec
jp
popf
loopne
push
mov
dec
sahf
je
and
bound
add
ds
adc
xor
xlat
pop
mul
push
sbb
mov
add
sub
adc
scas
aad
or
std
or
dec
pop
adc
lods
idivb
mov
push
or
fs
jg
mov
adcl
push
sbb
loopne
push
out
push
cmp
enter
adc
dec
pop
cs
xchg
std
inc
add
insl
rcrb
dec
adc
push
mov
mov
add
adc
in
loop
stos
push
push
addr16
sbb
in
bound
mov
stos
aas
std
sbb
aas
es
movsb
gs
mov
es
jl
pop
movsb
out
in
mov
mov
pushf
push
pop
jg
or
xor
jo
push
xchg
inc
mulb
insl
mov
push
adcb
mov
insl
sarl
dec
xlat
or
dec
sbb
das
inc
call
sarb
arpl
rclb
inc
xlat
sbb
xchg
add
jo
andb
adcl
insl
pop
and
rcrb
lret
dec
lods
jns
sub
xchg
adc
add
xchg
testl
cmpsb
lret
jle
inc
and
lcall
iret
mov
std
inc
popaw
fstl
mov
repz
repz
scas
pop
aad
push
inc
lret
fwait
xchg
and
add
and
jge
cmp
daa
add
into
lock
jo
jae
pop
adc
stos
sub
mov
dec
cmp
jmp
mov
cwtl
arpl
in
sub
ret
pop
imul
mov
or
aas
or
mov
and
jno
push
imul
push
sahf
jmp
cmp
or
inc
push
popf
fsubr
pop
in
add
xorb
dec
or
cmpb
add
test
je
sbb
pop
fs
push
imull
fistpl
xchg
scas
mov
mov
jae
mov
jns
inc
xchg
jb
ss
xor
mov
scas
inc
xor
mov
fcmovnbe
jecxz
clc
scas
cmpsl
pushl
sub
or
out
inc
sbb
pop
mov
pop
mov
mov
mov
pop
mov
dec
xor
xchg
lret
cmpsl
adc
icebp
adc
push
iret
cmp
fists
inc
popf
cmp
xor
popf
or
fucom
cs
movsl
ret
ret
dec
cmpsl
loope
pusha
rcrb
dec
mov
imulb
or
lea
jns
push
fsubs
adc
xor
cmp
add
add
inc
jge
fidivl
lahf
cs
jne
loope
loope
mov
in
addb
aas
stc
dec
in
mov
lods
shlb
insl
imulb
and
out
outsl
les
or
jmp
lea
mov
aas
incl
pop
cli
xchg
rorb
push
scas
mov
into
add
scas
repz
call
in
ret
cmp
jae
rcr
or
fstpl
shlb
cmp
and
in
cli
nop
jp
out
ret
dec
in
pop
sbb
push
or
mov
mov
jg
arpl
jmp
lret
repnz
pop
clc
mov
or
aam
adc
idivl
jmp
push
mov
jnp
jo
add
push
arpl
hlt
pushf
movsl
test
push
push
mov
sub
jmp
push
add
jbe
jbe
scas
and
in
xor
sub
sbb
mov
jae
mov
call
mov
mov
jl
mov
popf
divps
fcoms
icebp
jne
inc
push
test
mov
insl
jmp
insb
in
andl
ret
popa
lret
pushf
call
insl
aas
int
sbb
mov
jne
jne
sbbl
insb
dec
fidivl
pop
stos
sbb
adc
call
mov
out
adcb
sub
pop
pop
scas
mov
in
nopl
mov
mov
push
je
int3
pop
out
shlb
lret
pop
test
mov
push
adc
shll
popa
add
mov
sub
lods
pop
sub
mov
mov
jb
cli
sbb
add
adc
xor
sub
push
mov
pop
inc
mulb
repnz
out
push
sbb
push
sbb
dec
imul
sub
popa
cmp
push
push
stos
add
mov
jg
pop
in
or
cmovno
aas
imul
clc
adc
mov
sub
push
dec
lret
lods
cmp
mov
mov
imul
sub
dec
pop
or
mov
or
or
and
pop
fmull
jbe
push
inc
adc
jmp
imul
int3
rcl
movsl
or
mov
xor
mov
push
add
mov
les
shlb
or
inc
mov
dec
stos
pop
fimuls
inc
and
aas
fldl
jp
add
or
xchg
push
jb
sarl
jo
cmp
ss
or
ds
dec
xlat
popf
daa
stos
xchg
shlb
jb
adc
stos
xchg
xchg
xor
xchg
sub
push
dec
addl
xor
jb
les
out
adc
sub
xchg
ds
jge
sbb
ret
pop
xchg
lock
sub
jge
push
jae
shll
or
pop
in
cs
shrl
xchg
fildl
hlt
lcall
jne
sub
xor
add
fldenv
xor
es
outsl
jecxz
jge
push
push
lret
and
xchg
shll
ljmp
leave
subb
and
outsl
mov
add
lcall
aad
pop
jp
mov
add
pop
mov
popf
rcll
test
orl
xor
pop
mov
repnz
fcmovb
mov
aaa
out
fdivr
arpl
lea
bound
in
mov
mov
xor
sub
mov
sbb
nop
xor
fsts
mov
aas
or
fildl
enter
hlt
push
dec
cwtl
cmp
pop
icebp
mov
ss
clc
mov
fmull
add
cmc
xor
lea
and
fwait
pop
lea
int
pop
dec
idiv
add
arpl
mov
inc
ljmp
sub
dec
xchg
test
jecxz
pushf
out
cmp
dec
loopne
ss
xor
sub
cmp
sub
clc
mov
imul
ficomps
mov
or
test
inc
mov
xchg
mov
xchg
aad
jo
xchg
imulb
andb
push
add
enter
xor
mov
pop
push
test
add
adc
subl
or
pop
aaa
inc
push
cmp
fnstenv
pop
sub
cmp
jnp
ja
aaa
fisubrl
pop
xor
stc
inc
in
nop
add
lods
pushf
push
icebp
mov
cli
loop
lods
push
and
inc
jge
xor
movsb
xchg
sub
cmp
mov
xchg
js
das
ss
cmc
cmp
leave
cmp
stos
sub
mov
fwait
xor
push
xchg
pushf
mov
or
popf
mov
lds
sahf
and
int3
out
pushf
std
sbb
inc
addr16
xchg
cmp
inc
mov
adc
in
mov
sbb
ds
in
jno
sub
xor
mov
xorb
jns
repnz
jge
shr
iret
adc
out
mov
int
xchg
pop
repnz
or
ret
data16
dec
fs
hlt
aad
das
dec
ficoms
cltd
add
out
push
ret
mov
ret
gs
jmp
sub
cmpsb
in
xchg
incl
jecxz
pop
xor
inc
loopne
pop
std
movsl
mov
or
mov
lods
jno
jo
jmp
rclb
popf
scas
cmpsb
inc
stos
mov
repz
push
push
mov
push
push
sbb
fcomp
xor
stos
push
stc
arpl
sbb
scas
xor
or
add
test
jge
lcall
inc
xchg
push
jo
cmp
clc
hlt
mov
hlt
xor
cmp
xchg
imul
push
mov
lea
cmc
xchg
jno
loope
fisubrl
loope
dec
inc
in
je
add
iret
sbb
mov
fs
dec
push
insb
push
push
fdiv
ss
cmp
pop
rolb
dec
jg
call
rcr
fisubrs
test
push
mov
jne
and
mov
sbb
inc
pop
insb
xor
pop
les
lods
sub
pop
enter
add
add
sbb
fcomps
inc
jecxz
or
adc
jbe
jmp
test
cli
cmpb
dec
movsl
movsl
mov
scas
and
pop
mov
sarb
sahf
xlat
stos
scas
xor
sbb
add
jp
test
pop
or
test
pop
mov
and
std
push
das
loopne
mov
cmp
loopne
shrl
inc
jns
mov
add
or
test
mov
xchg
movsb
rorl
dec
outsb
sbb
add
push
xchg
or
adc
pop
sbb
xchg
mov
and
notb
stc
dec
pop
jb
stos
adc
pop
bound
frstor
adc
aad
adc
fdivl
sbb
or
mov
scas
cld
mov
mov
cmpsl
adc
fisubl
aaa
test
and
in
inc
mov
pusha
adc
sub
popa
scas
pop
pop
mov
test
dec
adc
gs
add
and
xor
shr
dec
std
lret
fimull
sarl
xchg
mov
push
jne
gs
stc
add
and
pushl
pop
into
mov
es
jl
push
xchg
jmp
fs
mov
or
imul
jo
mov
int3
aas
add
xor
lret
xchg
and
jp
outsl
fnstsw
mov
sbb
jbe
mov
data16
add
add
mov
push
mov
jns
sbbb
pop
adc
jnp
mov
fdiv
stc
mov
arpl
xchg
jae
test
jbe
scas
pop
add
sub
pusha
lea
ja
xchg
sbb
or
les
jne
enter
push
sub
inc
sub
popa
add
pop
inc
imul
iret
cs
in
daa
sub
or
xchg
jb
sti
pop
push
inc
dec
or
ficoml
xor
jle
cmp
insl
in
mov
in
popf
aam
adc
cmpl
lds
pop
sbb
outsl
pop
push
dec
mov
mov
imul
inc
add
and
dec
outsl
adc
and
fmuls
push
aad
fs
int3
cld
pusha
xor
push
and
cmp
loopne
push
lock
mov
or
or
loopne
in
aam
mov
ret
sub
push
aas
int3
mov
fcoml
aam
sti
mov
movsl
mov
in
into
sbb
push
jo
xchg
dec
jns
push
in
mov
aam
pop
mov
inc
or
punpckhdq
cmp
clc
and
pusha
mov
mov
cmp
xchg
inc
pop
xor
ret
sub
or
lret
sti
pop
enter
sbb
fmuls
cltd
divb
mov
movsl
lahf
jp
imul
int
pop
mov
cli
stc
dec
out
insl
cmp
loopne
jp
in
stos
adc
mov
xor
mov
ret
jae
mov
mov
movsl
inc
repnz
jno
push
loopne
sti
add
scas
pushf
scas
jle
inc
xchg
sub
movsb
push
dec
mov
push
js
das
sub
mov
jae
fmull
loopne
imul
cmp
push
test
mov
lods
in
repnz
jnp
xor
mov
jnp
mov
shrl
movsb
sbb
push
cmpsl
mov
mov
jbe
mov
gs
jecxz
je
push
sub
push
lods
out
cwtl
push
xchg
xchg
psubsw
aas
mov
or
xor
sub
aad
call
ret
jnp
mov
ljmp
or
int3
xor
sub
enter
jecxz
pop
xchg
fwait
hlt
leave
sub
sbb
js
mov
jb
jns
mov
into
xor
loope
outsl
jecxz
inc
bound
dec
in
sub
push
aad
push
nop
enter
in
mov
int3
xchg
lret
outsl
inc
xor
gs
shll
test
fucom
cli
hlt
addb
dec
sub
imul
sbb
fnstsw
xor
inc
xchg
jmp
add
adc
sbb
cltd
lret
push
inc
dec
adc
and
lock
xchg
pop
xchg
xchg
adc
cltd
push
in
fucomip
lods
out
rcrb
jge
mov
aaa
loope
in
mov
icebp
mov
xor
mov
sbb
cmp
mov
repnz
mov
bound
mov
xor
mov
mov
scas
and
sub
cli
jno
jo
mov
clc
cwtl
andl
push
hlt
lret
xchg
mov
rcll
push
lret
test
test
lret
cmpsb
ljmp
inc
fwait
lret
push
xor
xor
inc
insl
rcl
add
mov
sbb
sbb
cmc
sbb
add
adc
adc
xor
cmpsb
xchg
test
nop
or
cmpsb
ss
pop
inc
mov
xchg
push
adc
hlt
jg
pop
sub
clc
push
cs
push
das
xor
mov
pop
sub
add
mov
ja
inc
mov
push
loop
mov
out
fisubl
dec
enter
or
or
mov
jns
mov
int3
cmpsl
js
jg
push
das
mov
sbb
mov
lods
sahf
sbb
scas
lcall
roll
in
scas
ja
stc
push
or
iret
sbb
sbb
mov
cmp
aas
sub
and
stos
sti
or
int
imul
out
cmp
add
outsl
pop
aas
adc
andl
in
mov
iret
lcall
std
pop
pushf
inc
xchg
adc
pop
jne
pop
mov
cmp
pop
mov
dec
shr
sub
jl
lret
lea
mov
pop
or
lock
jnp
cmp
mov
mov
pop
mov
xchg
movsl
lret
in
mov
pop
pop
sub
adc
int3
add
fwait
lods
stos
xchg
adcb
jl
mov
or
or
sub
mov
pop
add
pop
div
cli
xor
mov
xchg
add
lods
lds
inc
jo
loop
ss
insb
xlat
sub
popa
mov
xchg
and
lret
jg
add
idivb
jg
stc
stos
jb
stc
sub
mov
mov
loop
xor
fwait
inc
ret
adc
shll
movsl
dec
mov
in
add
sbb
cmp
mov
xchg
cmpl
push
jle
aas
dec
orb
daa
outsl
xor
sbb
sar
int
arpl
add
pop
icebp
fldl
and
dec
mov
js
lods
out
pusha
cs
pop
mov
push
xchg
sbb
mov
aas
cmp
ljmp
lret
xor
xchg
mov
imul
add
mov
popf
lock
jnp
fisttpl
cmp
lea
lcall
idivb
lret
push
mov
mov
insb
repnz
add
xlat
xchg
cmpsb
ljmp
pop
adc
enter
xchg
push
aas
cwtl
mov
shr
pop
sub
mov
and
xor
sub
lds
mov
cmp
fnstsw
xlat
imul
leave
sahf
in
mov
fcoml
inc
rcll
mov
jecxz
outsb
push
push
js
mov
or
jp
push
cli
pop
mov
mov
mov
stos
cmpsl
ljmp
std
push
push
aam
pusha
push
adc
fstpl
jge
out
jb
es
outsw
jnp
ljmp
xor
cli
or
les
loop
mov
dec
sub
jbe
adc
adc
call
inc
fisttps
sbb
fnstcw
bound
cli
insb
cmp
dec
pop
shll
adc
in
sti
push
inc
adc
das
lea
lods
jmp
add
xor
test
fiaddl
xchg
mov
sti
test
lods
pop
fdiv
sti
push
push
pop
adc
popf
in
dec
jne
ret
dec
sbb
cmp
or
xchg
ljmp
push
ret
cmp
jge
mov
ficomps
imul
ja
aaa
xchg
and
and
xchg
inc
rclb
and
cmp
ja
xchg
insl
in
gs
xchg
push
or
adc
loope
cltd
rorb
push
out
add
insb
pop
fcomps
pop
xlat
cld
sahf
add
or
imul
lods
imul
ds
in
je
xor
fimuls
dec
mov
std
add
in
imul
es
loopne
push
add
cmpsb
jge
pop
sub
lods
shr
xchg
in
push
out
xchg
mov
mov
sbb
bound
out
dec
pop
sbb
aad
jbe
das
jns
inc
sub
inc
pop
bswap
test
es
push
jl
stos
xor
mov
dec
sub
pop
in
xchg
push
stos
call
iret
imul
or
rcll
or
rcrl
xchg
xor
imul
int3
inc
int3
ret
xchg
push
xchg
fs
mov
mov
cli
push
adc
push
pop
out
imul
cmp
or
mov
add
or
insb
xchg
sub
push
add
pop
jecxz
jae
or
in
xor
adc
and
lea
aas
dec
repz
fwait
cmp
inc
add
dec
mov
aam
sub
or
pop
push
je
xchg
mov
push
enter
dec
dec
cmp
cld
inc
stc
inc
dec
inc
ret
rorl
pusha
push
xchg
orb
insl
pop
push
arpl
data16
out
mov
fisttpll
sub
test
stc
sbb
ljmp
add
mov
fs
push
push
mov
sbb
or
enter
out
aas
popf
push
fisttpll
jg
add
rorb
jb
movsl
pop
iret
subb
xchg
xorb
aam
ljmp
insl
rolb
es
mov
ljmp
mov
sub
in
cmpsb
add
sub
rcll
repz
xchg
pop
pushf
in
cld
hlt
jae
ss
daa
mov
sub
xchg
mov
les
shll
add
in
test
std
fldcw
fwait
jg
out
inc
mov
xchg
xchg
out
fnstenv
shl
cltd
mov
mov
inc
and
adc
arpl
jno
xlat
pop
daa
das
popa
mov
cs
mov
sbb
mov
fld
lods
xchg
mov
add
sbb
pop
pop
jne
mov
dec
aas
cld
mov
pushl
jmp
in
xchg
cmp
mov
cmp
mov
inc
mov
add
fs
or
daa
or
mov
inc
fs
inc
push
stos
gs
dec
add
pop
xorl
xlat
negl
xchg
repz
aam
nop
lock
dec
aad
jns
push
dec
or
leave
jecxz
mov
les
push
mov
data16
sar
add
mov
push
add
lods
mov
pop
insb
push
nop
mov
aam
stc
cmp
jg
aaa
mov
jns
out
push
imul
adc
adc
cs
mov
shrb
fisubl
pushf
popa
rclb
stos
fwait
pusha
rcr
pushf
aam
popa
and
xor
push
dec
insb
inc
cmp
push
push
ljmp
into
movsl
notl
loopne
adc
jle
ss
scas
lret
sti
xchg
in
dec
xorb
mov
inc
cwtl
xchg
pop
push
jge
jle
ljmp
jo
nop
pop
xchg
and
aaa
rcrb
movsl
sub
jb
mov
jne
and
imul
jb
rcl
addr16
jg
jle
push
jl
outsb
call
stc
repnz
mov
fsts
pop
mov
jecxz
lret
dec
orb
push
fcompl
repz
cmpsl
rcrb
iret
outsb
and
dec
js
aad
aaa
sub
adc
mov
testl
pop
sub
cli
pop
xchg
repz
sbb
aad
jmp
fisttpll
sub
jmp
or
insb
inc
sbb
jae
add
fcompl
repnz
test
mov
jbe
cmp
fiaddl
push
fwait
sbb
cld
jg
jmp
adc
and
mov
mov
push
mov
sub
mov
push
frstor
ret
into
icebp
daa
fstpt
jle
aam
rcr
rclb
div
sbb
in
push
xchg
call
inc
sub
push
ja
or
pop
rorl
or
fldl
ret
dec
shl
dec
shrl
dec
mov
add
jecxz
ljmp
rorb
jle
inc
jb
and
mov
iret
fistps
cld
data16
xor
mov
mov
inc
inc
jae
adc
inc
push
push
aas
mov
or
mov
push
fwait
mov
adc
jnp
cmp
sub
pop
mov
jecxz
shl
sub
in
bound
test
fidivrs
dec
test
push
lods
mov
int
lea
mov
mov
jns
out
mov
fsts
push
xor
movb
mov
sbb
cli
mov
xorl
rcl
aam
jns
fdivs
decb
mov
dec
ds
xchg
jb
clc
sbb
sbb
mov
lcall
dec
mov
mov
stos
xchg
jno
mov
cld
sahf
ja
imul
lret
setge
arpl
lahf
pop
xor
out
repnz
and
or
cld
ret
xchg
adc
pushf
loop
sbb
add
jne
in
jg
cmp
fnsave
in
rolb
or
stos
push
scas
rorb
inc
sub
and
int3
jecxz
sub
push
dec
pusha
add
cmp
insb
inc
in
jge
test
fwait
xchg
push
fimull
popa
jmp
inc
iret
sbb
jmp
jle
push
cmp
push
ljmp
in
icebp
int
in
mov
nop
jae
fsubrs
inc
fwait
js
lret
mov
cmp
pop
mov
jae
push
call
xor
pop
or
fiadds
sti
push
cs
mov
aas
addb
fcoms
adc
sub
xchg
inc
je
jbe
adc
daa
dec
sbb
add
mov
fcmove
sarl
mov
fucompp
lret
sbb
or
imul
sarb
rcl
addr16
mov
jns
dec
dec
ljmp
cmp
xchg
push
pop
sub
test
mov
int
jbe
std
xchg
call
xchg
xchg
out
jmp
pop
aad
pop
call
ja
and
dec
fdivs
je
sbb
pop
cwtl
je
cwtl
outsb
popa
xchg
popa
test
fidivrs
imul
imul
or
pusha
icebp
lds
lahf
lods
stc
mov
cli
jg
mov
xor
int3
popa
in
pop
add
test
and
nop
loopne
adc
mov
pop
fmulp
outsb
add
test
adc
repz
jne
fs
mov
lock
xchg
push
in
xchg
add
addr16
cwtl
or
mulb
outsb
inc
aad
add
mov
cld
lcall
inc
int
addl
and
dec
rcrb
xchg
testb
and
out
mov
pop
push
inc
or
addl
pusha
pushf
lret
pop
ret
cld
int3
stos
sbb
xchg
pushl
es
lea
pop
je
mov
lock
in
xchg
jnp
popf
imulb
xorl
movsl
pop
mov
decl
pop
jnp
inc
gs
out
lret
insl
mov
inc
push
jnp
mov
pop
mov
jo
xchg
mov
mov
cmp
adc
or
addr16
or
lods
stos
das
pop
pop
ja
pop
cmp
mov
push
cs
adc
jmp
call
pushf
mov
pop
jl
push
scas
sbb
aad
incl
sahf
xchg
mov
mov
test
push
push
xorb
and
lds
bound
mov
inc
cs
fisubrs
xchg
ror
fbstp
mov
out
pop
fnstenv
jnp
arpl
xlat
and
add
xchg
test
cs
sub
fwait
hlt
popa
pop
xchg
pop
pop
into
fnstenv
or
aam
stos
cmp
sti
jmp
aad
dec
mov
xor
push
or
jge
ss
cmpsl
push
pop
and
shl
lcall
aas
mov
ret
call
out
push
xchg
add
fs
insl
jbe
jo
pusha
test
mov
pop
ret
lock
and
xchg
imul
cld
icebp
add
aaa
mov
sti
dec
sbb
adc
nop
inc
data16
popf
loop
popl
push
insl
cmpsb
inc
cli
stos
pushf
push
cltd
jl
and
int
lods
scas
mov
sub
je
faddl
mov
cmp
jp,pt
inc
xor
or
dec
sbb
cld
js
add
or
jmp
adc
cmpsb
dec
int
mov
movsl
and
sbb
scas
shl
push
pushf
push
in
int3
push
cmpsb
jnp
mov
lret
push
push
push
out
icebp
mov
fwait
xor
push
std
cmp
jmp
mov
sub
pop
xchg
std
mov
push
add
imulb
mov
fisubrl
and
add
cmp
popf
das
add
ret
sbb
ror
cli
nop
or
mov
adc
subb
arpl
xchg
and
push
xor
sub
or
roll
sbb
lcall
loope
fisttpl
ret
and
daa
jbe
inc
mov
xchg
std
xor
pusha
rep
cmp
stos
data16
insl
or
or
mov
scas
in
mov
gs
lds
mov
sbb
push
push
and
pushf
or
xchg
xor
fdivrl
repnz
jne
nop
dec
push
mov
xchg
and
movsl
imul
and
mov
pop
loop
lods
push
cli
enter
pusha
mov
mov
movsl
push
and
test
adc
sub
fwait
pop
dec
add
push
loopne
shl
imul
jp
in
pop
push
jle
popa
add
xchg
fs
outsb
cmp
fsts
gs
lret
jecxz
test
add
enter
jne
inc
mov
iret
push
push
dec
push
gs
inc
ja
aaa
pop
mov
mov
lret
fstl
push
inc
cld
stos
add
stos
push
rcrl
jmp
loope
xor
cwtl
mov
xor
aad
das
fisubl
gs
push
psrlw
std
jge
cltd
notb
imul
mov
rorb
rcll
js
sub
xchg
jae
sbb
jecxz
scas
sub
mull
pop
movsl
or
add
or
fdiv
sbb
sub
imul
stc
lds
dec
or
push
mov
mov
inc
in
mov
lods
pop
jb
jle
test
and
pop
hlt
or
pop
ljmp
in
in
dec
enter
inc
dec
mov
or
push
daa
dec
mov
push
into
into
xchg
jg
js
inc
sub
sub
mov
fsubs
inc
xlat
icebp
push
dec
test
mov
xchg
adc
mov
gs
dec
icebp
inc
fstpl
lret
mov
dec
cmp
aaa
dec
insl
out
jge
loopne
mov
test
mov
ret
xor
ds
mov
fwait
inc
out
sahf
cmp
sub
and
outsb
es
mov
inc
xchg
sbb
push
adc
insb
or
xchg
push
sub
xor
fwait
and
push
movsb
cmp
lea
xchg
push
ret
loopne
movsb
imul
push
push
dec
sti
lret
push
xchg
rcrb
push
inc
mov
mov
xchg
sub
jne
jno
push
shrl
pusha
add
repnz
mov
mov
gs
call
xchg
cmp
mov
jg
fldt
fildl
sahf
outsb
shl
movsb
inc
cmp
dec
or
pop
xchg
cmp
inc
ss
pmaddwd
test
insb
push
sbb
lcall
xchg
shl
sbb
test
movb
in
dec
lcall
fldenv
movsl
repnz
sbb
jle
loopne
cmp
lods
adc
mov
frstor
frstor
inc
and
subl
cmpl
adc
jns
fdivs
mov
repnz
pop
out
aad
shll
push
stos
lret
outsl
and
ljmp
sbb
sub
fstpl
mov
daa
pop
mov
fstl
adc
push
stos
push
adc
inc
int
push
sti
aad
push
mov
xor
add
clc
add
sub
mov
dec
js
sbb
xor
cli
stos
data16
cltd
mov
or
movsl
push
mov
jge
mov
xchg
mov
outsl
push
adc
fistpl
xchg
inc
xchg
push
xor
je
xchg
scas
adc
fwait
and
adc
icebp
mov
adc
sti
or
call
jle
xchg
xor
daa
pushf
repnz
fbstp
cmpsl
xchg
decl
lret
jno
pop
or
inc
jo
jl
pop
mov
ljmp
cmp
jg
jle
push
push
xchg
xor
adc
rclb
cli
pop
mov
adc
push
lahf
imul
scas
iret
es
std
xchg
cmpsb
jmp
fldenv
or
iret
js
fs
push
cmpsb
xchg
push
push
andl
inc
add
and
clc
iret
repz
enter
dec
out
fimuls
mov
fs
push
stc
fs
dec
sahf
jle
pop
or
stos
push
mov
jge
inc
sub
jge
mov
pop
cmpsl
lds
loop
mov
lock
inc
xor
das
xchg
inc
mov
add
aad
adc
push
sub
loop
cmp
loopne
insb
jb
xchg
sbb
shlb
movsl
mov
loopne
jecxz
or
adc
rclb
xor
xchg
fldenv
and
pop
xchg
inc
sahf
rorb
fldl
dec
adc
imulb
arpl
sub
push
outsl
xchg
mov
imul
ds
jge
dec
ret
pop
fwait
cltd
ljmp
or
fbld
loope
add
into
jmp
in
pop
out
push
cli
push
ds
lds
test
gs
push
pushf
gs
into
cmc
jp
mov
aas
add
out
mov
cmpl
adc
mov
or
nopl
movl
mov
bound
mov
rorl
shlb
mov
mov
cmp
mov
push
push
test
cli
pop
cmp
add
roll
pop
cmpsl
mov
lods
push
xor
jmp
push
hlt
or
jns
sbb
push
mov
jg
xchg
mov
sub
sbb
std
add
adc
pushf
orl
roll
cmpsb
adc
add
lret
scas
ret
insl
dec
sub
fwait
jbe
xchg
mov
xchg
outsb
subb
inc
subl
adc
mov
push
jp
insl
or
add
and
inc
ret
jns
out
test
xchg
je
leave
stos
scas
sub
pop
xchg
aad
cmp
lock
jns
fcompl
jns
adc
fisttps
ret
jl
pop
push
cmpsb
or
and
int
pop
mov
aad
and
push
cmp
inc
mov
jl
fcmovnu
jmp
fildll
inc
add
mov
test
dec
aam
jg
cmpsl
jle
test
and
out
lock
not
or
jb
push
call
and
and
mov
test
js
lds
imul
gs
into
pop
fcoml
inc
jne
lods
jl
adc
outsb
repz
shll
call
pop
iret
enter
xorl
and
fistpl
dec
cmp
fidivl
xor
mov
pop
les
cwtl
icebp
out
outsb
cmp
jecxz
fdivrp
sbb
repnz
out
and
xchg
cmovge
fisttps
mov
in
stos
mov
add
dec
popa
jae
xlat
fs
negb
xor
xchg
jae
mov
int
push
mov
cmpb
out
add
or
and
cmpsb
mov
aas
sub
jle
mov
pop
ss
pop
xor
mov
shrb
push
in
dec
jle
jecxz
push
fimull
daa
add
cli
les
cwtl
mov
mov
fwait
jp
movb
adc
lods
incb
enter
sub
xor
mov
dec
das
xchg
fsubrl
or
lret
icebp
mov
sbb
adc
mov
jmp
les
insb
pushf
dec
aad
test
jnp
lcall
xor
call
sbb
mov
ds
adc
popf
sbb
mov
mov
test
push
into
addl
cs
std
mov
loop
out
and
imul
repz
int
inc
sti
arpl
stc
pop
pop
pop
jmp
rcll
ljmp
dec
jp
fadd
insl
lods
sub
lret
adc
shll
shrl
and
jge
insl
adc
and
jbe
fxch
stos
pop
cmc
arpl
jp
or
push
add
test
adc
sbb
shr
xchg
es
ret
dec
into
fs
push
js
js
adc
fmuls
and
add
fwait
adc
sti
pop
jl
cltd
and
pop
je
mov
ljmp
dec
nop
movb
jg
xchg
xchg
sbb
add
lods
jp
inc
in
mov
cwtl
out
mov
cltd
cli
mov
lock
popa
add
std
pop
pop
ret
lea
add
lods
imul
dec
mov
push
mov
call
sbb
mov
dec
sahf
and
cwtl
add
scas
fs
mov
and
pop
xlat
mov
xchg
subb
popf
adc
repnz
cmpb
je
rol
into
aas
addb
mov
cmp
je
inc
mov
jmp
add
pop
cwtl
add
jbe
lahf
ret
mov
aam
or
or
sub
adc
xor
xchg
jns
mov
add
test
jl
loop
es
dec
imul
loope
sbb
xchg
cmp
out
scas
cs
std
cmp
pop
andl
js
mov
aaa
rcrl
cmp
pop
fstp
nop
std
xor
imul
mov
sub
rcll
les
jmp
push
jb
rcr
jg
inc
mov
cld
inc
outsl
add
push
add
shll
dec
in
cmpsb
out
flds
dec
movsl
jp
ss
in
add
or
out
hlt
dec
popf
out
lret
add
js
jg
cmp
jmp
or
imul
test
add
pushf
or
mov
pop
adc
jns
mov
xchg
adc
push
imul
dec
cltd
lods
mov
sbb
jmp
sbb
add
addr16
or
cmp
cmp
add
lods
sbb
out
mov
cmp
pop
xchg
mov
sahf
jl
and
test
push
ficoms
or
jne
cltd
pushf
dec
xchg
pop
mov
push
andb
popa
jo
xlat
inc
loope
unpcklps
mov
repz
sub
pop
add
push
aas
push
mov
test
std
jge
stos
pop
test
push
mov
iret
icebp
mov
inc
push
test
pop
lret
int3
add
arpl
mov
xor
mov
subb
cmpsb
xchg
arpl
enter
xchg
push
daa
mov
jne
mov
rorb
sahf
cmp
adc
sbb
xchg
cltd
shrl
cli
push
nop
cmp
in
mov
sub
rcrb
mov
leave
inc
jne
cli
mov
cld
cmp
imul
mov
int
cmp
jo
mov
sub
xor
or
subl
pop
out
push
or
jmp
movsb
mov
or
fdivl
hlt
call
loopne
inc
int3
push
das
test
pop
iret
lods
or
loopne
imul
pop
mov
mov
leave
pop
pop
bound
cmp
repnz
cmc
push
cmp
push
ret
cmp
dec
mov
stc
adc
repnz
frstor
mov
push
rol
in
dec
in
mov
outsb
imul
popf
sub
and
dec
jp
outsl
cmp
mov
je
pop
add
pop
jg
stos
popf
lock
pop
nop
stos
or
or
out
shlb
or
test
stos
pusha
add
mov
fcmovb
pop
out
pop
clc
push
jl
test
or
cmpsb
jmp
enter
mov
pop
and
ljmp
aas
data16
xchg
xlat
pusha
xor
rclb
movsl
mov
jmp
cmp
ficomps
sbb
sbb
test
xchg
mov
or
in
mov
and
jns
mov
jge
arpl
add
pop
mov
inc
outsl
push
test
jns
mov
loope
popf
pop
xchg
mov
sub
jo
sbb
jae
inc
mov
and
mov
xchg
cmpsl
shlb
adc
jbe
push
sbb
ds
pop
mov
aam
sub
dec
in
or
pop
cmp
fidivs
push
into
loop
xchg
mov
mov
gs
test
xchg
shl
or
rorb
or
ljmp
mov
mov
dec
lret
mov
pop
xchg
popf
xor
sub
mov
dec
out
lret
int
sub
jo
xchg
xchg
fimull
fcmovbe
cmc
aam
jnp
pop
sbb
lods
pop
insb
jp
stc
cmp
and
loop
dec
imul
dec
sbb
and
rcl
test
xor
add
das
or
sub
mov
cmp
sti
loope
outsl
shll
jno
dec
add
pop
jle
push
je
cs
lret
adc
adc
gs
xchg
notb
sbb
loope
pop
dec
rcrl
mov
push
sti
into
mov
fnstsw
xchg
cmp
sbb
dec
cwtl
inc
mov
rcrb
pop
cmc
scas
pop
and
popa
xor
lcall
pop
ret
fcom
pusha
addl
call
adcb
mov
aaa
xchg
loopne
lods
and
mov
pushf
test
sbb
or
jp
bound
pop
mov
mov
dec
add
jbe
sub
scas
arpl
xor
mov
inc
and
popf
jle
xor
mov
pop
das
jo
fs
cs
push
cs
xchg
pop
loope
out
inc
hlt
mov
shrb
mov
pop
sub
fwait
mov
or
pop
add
bound
and
jecxz
cwtl
xchg
ljmp
mov
in
shrl
mov
pop
add
mov
outsb
mov
sti
out
mov
insl
jae
sbb
insl
std
sub
xor
jp
add
mov
push
out
or
jbe
lret
inc
and
jmp
repnz
push
pop
mov
shrb
test
jb
rcrl
add
add
sbb
movsl
repnz
leave
sbb
and
sbb
mov
leave
cmp
jmp
call
cmp
jle
fsubrl
out
unpcklps
adc
fmuls
gs
test
and
insl
mov
xchg
icebp
push
sub
push
adc
fdivrs
in
cmpsb
cmp
pop
shll
and
jns
or
call
add
pop
mov
int3
cmp
sbb
in
js
iret
test
cmpsb
and
imul
push
mov
jno
cwtl
dec
xor
xchg
fs
jno
ror
loop
dec
lods
scas
xchg
mov
add
jae
pop
je
xlat
mov
cmp
mov
fwait
mov
stos
or
jne,pn
shrl
aas
dec
in
call
insl
outsb
xchg
cli
and
jmp
enter
and
mov
and
and
rcrl
ret
in
xor
arpl
es
and
xor
pop
add
inc
dec
mov
lea
das
mov
loopne
hlt
xchg
packuswb
sbbl
jo
mov
xlat
mov
in
xchg
enter
push
sbbl
hlt
std
imul
jmp
out
jo
shll
cmc
sub
xchg
and
ret
mov
xor
sbb
psrad
sbb
inc
xchg
jecxz
in
sbb
sub
xchg
jo
dec
imul
lock
or
imul
movsb
aam
jns
popf
icebp
aad
cmp
shrb
dec
loope
mov
es
xchg
xor
sysexit
cmpsb
pop
mov
frstpm(287
sbbl
mulb
int
mov
jnp
lret
scas
jbe
dec
enter
rcll
add
push
hlt
push
push
pop
hlt
jmp
mov
sbb
dec
test
dec
dec
push
xlat
fdivr
fnstsw
les
mov
push
popa
push
inc
jmp
push
rcl
mov
inc
sarb
into
pop
push
hlt
mov
insb
dec
call
mov
int
inc
inc
bound
push
cli
rclb
jmp
mov
mov
lea
stos
jno
pop
lea
stos
xor
jb
pop
dec
dec
cli
mulb
add
hlt
shlb
mov
pop
jecxz
lcall
dec
dec
cltd
enter
scas
cli
xchg
dec
push
test
loope
mov
pop
ret
pop
test
push
sub
fldcw
xchg
mov
std
inc
test
mov
pop
cmp
loope
imul
pop
insb
lahf
pushf
jl
mov
xchg
out
fincstp
call
xchg
mov
test
xchg
clc
adcl
jecxz
sbbl
nop
ss
lock
fnstcw
add
cmpsb
lea
push
addl
clc
movsl
add
gs
dec
xchg
xor
mov
add
jmp
or
loopne
stc
mov
dec
icebp
cli
xor
cmpsl
push
xchg
icebp
xor
inc
mov
mov
adcb
mov
or
push
popf
movsb
or
decb
adc
jnp
fsubl
inc
ds
cmp
push
xchg
add
negb
scas
mov
cmpsl
fisubrl
pop
ret
push
inc
loop
sub
and
mov
cwtl
jb
pop
jge
popf
push
jo
iret
ret
and
cld
hlt
les
xlat
push
rclb
sti
jne
mov
mov
xchg
xor
hlt
and
jno
adc
xchg
dec
jno
jae
xchg
nop
movsl
roll
inc
in
push
cmp
leave
mov
jmp
leave
pusha
or
sub
bound
pop
or
xor
jns
fbstp
mov
push
aam
lret
mov
push
fistps
mov
clc
jp
aad
negl
scas
sbb
sub
inc
aam
adc
fimuls
mov
and
jbe
inc
imul
push
adc
jp
xchg
pushf
adc
rorl
jno
out
pop
mov
xor
mov
leave
orl
rorb
mov
add
jb
cmpsb
lcall
inc
ficomps
add
adc
sbb
shrl
dec
dec
pop
lods
sbb
rcl
sahf
or
adc
lods
pusha
and
sbb
push
mov
les
adc
ret
call
mov
mov
cmp
jp
aaa
pop
jl
mov
scas
xor
cmp
xor
push
scas
out
mov
fldenv
cmp
jae
pop
add
pop
jns
mov
or
mov
jb
jnp
or
sub
xchg
lods
inc
fs
cmp
fucomp
lcall
xchg
sbb
aam
stos
scas
or
xor
daa
int
lock
pushf
inc
cli
inc
mov
dec
push
out
cmp
das
mov
stos
aaa
mov
or
mov
cmp
std
mov
mov
fwait
hlt
sub
mov
pop
test
repnz
test
sub
ffree
push
fists
fists
add
mov
and
movsb
mov
rclb
jg
in
fcomps
mov
or
loopne
cmc
daa
mov
mov
jmp
movsl
lds
push
loopne
fsubrs
test
js
dec
lcall
shl
inc
popa
adc
and
iret
sahf
mov
and
icebp
fcoms
cld
dec
in
cmp
jg
xchg
cmc
iret
cmp
and
ja
cltd
imul
subl
orl
mov
sbb
push
imul
push
ficomps
add
incb
xchg
adc
mov
push
arpl
fildll
stos
and
xor
jge
add
mov
push
jbe
jp
pop
cwtl
popf
lea
mov
cmp
sbb
addb
or
test
or
mov
pop
push
inc
ja
inc
ret
lahf
inc
or
cli
or
sbb
inc
pop
loope
mov
xor
pop
mov
or
mov
cmc
aas
pop
xor
in
loopne
jnp
push
mov
inc
jmp
ljmp
rcr
mov
push
cmp
loop
out
aam
adc
mov
jae
lret
aas
cmp
sbb
jb
sub
lret
cwtl
sbb
mov
mov
lds
movsb
dec
xor
mulb
sbb
pushf
mov
and
and
mov
mov
pop
enter
fwait
sbb
sbb
orl
fs
js
mov
mov
loopne
xchg
xor
gs
lcall
cmpb
fnstenv
cmp
push
fcomi
je
mov
inc
push
add
aaa
add
in
add
jmp
lea
movl
in
ret
mov
sub
mov
dec
sahf
sbb
mov
lahf
jmp
xchg
xchg
sbb
sbb
jmp
test
or
iret
push
mov
jp
fimuls
sti
in
xchg
jge
mov
jecxz
add
leave
dec
stc
rcrl
and
mov
lret
xchg
cld
out
rcrl
xor
adc
in
fs
mov
enter
push
lea
das
and
adc
loope
xor
mov
js
aas
xchg
int3
push
xorl
mov
lea
stc
xchg
shlb
mov
insl
sarl
sti
add
xchg
clc
in
movsb
add
out
inc
inc
add
xor
jae
insb
sbb
inc
dec
stos
jge
out
movsl
leave
cmp
arpl
or
pop
inc
popf
add
jno
jns
hlt
in
add
cmpsb
mov
sbb
lea
mov
repz
push
mov
test
inc
xchg
lahf
add
mov
push
inc
stos
jg
outsb
xor
mov
lret
cmpsb
adc
imul
or
clc
fnstenv
sub
mov
add
mov
sbb
das
push
pushf
cmc
push
and
hlt
roll
inc
scas
sahf
insl
xchg
pop
sub
add
shl
dec
sub
into
cwtl
sahf
sub
mov
lods
dec
insb
sti
mov
addr16
mov
jecxz
aas
push
add
je
cs
stos
pop
cmp
ror
sbb
inc
dec
sahf
imulb
fdivp
pop
mov
inc
xchg
outsb
std
je
call
xor
bound
rcl
add
xor
jnp
addr16
dec
dec
mov
pop
xchg
xor
mov
or
int
leave
jns
decb
pop
xchg
mov
xchg
test
mov
sub
sbb
je
outsl
lahf
test
aam
mov
test
xchg
je
jo
xor
inc
enter
arpl
mov
ds
add
cmovb
jb
mov
dec
int
sbb
addr16
xchg
push
in
aas
lods
ds
leave
mov
inc
test
push
pop
pop
xchg
mov
and
push
shrb
xchg
dec
and
movsl
dec
xchg
and
insl
jl
add
pop
cmp
stc
fmul
dec
or
and
inc
inc
push
out
cmp
jl
pop
mov
ror
es
fs
mov
push
push
inc
ljmp
bound
xchg
popf
mov
lods
loope
xor
or
mov
mov
daa
lcall
sar
sub
or
jbe
outsl
sbb
push
test
mov
mov
xchg
sub
sub
iret
les
cmpsb
xchg
idivb
out
repz
fcomps
push
xchg
lods
jecxz
inc
mov
pop
push
dec
inc
test
inc
push
out
sub
aas
xor
cmp
push
sub
stc
outsb
aaa
in
inc
push
das
jecxz
or
hlt
test
xchg
jg
add
xchg
push
xor
fidivrl
loope
repz
insl
das
dec
aam
addl
sub
cs
pop
ret
jg
sti
pop
js
addr16
outsb
std
mov
sbb
in
dec
lcall
ljmp
cmpsb
lods
shll
sub
pop
push
jne
add
repz
jp
cltd
push
cli
inc
hlt
fdivr
aad
add
dec
pop
ret
ja
push
mov
loopne
jge
int
mov
cmp
dec
std
adc
loop
clc
inc
icebp
aad
mov
cmp
test
mov
lahf
mov
addl
les
das
pop
jecxz
or
push
ja
xor
or
sbb
daa
out
popa
pop
jmp
cmpsl
cmp
cmp
aam
pop
mov
cmp
adc
pop
stos
inc
pusha
je
fisubl
or
jne
fmull
imul
cld
cli
fists
fbstp
std
cmp
shll
insl
in
stc
add
adc
mov
jnp
call
inc
push
hlt
ja
lahf
pop
or
cmp
mov
sarl
mov
sbb
or
xor
fwait
push
inc
cmp
aad
or
adc
pop
mov
arpl
or
mov
fbld
push
jo
into
xchg
xlat
push
and
jnp
cs
aaa
aas
xchg
mov
popa
mov
jmp
sbb
ret
sub
add
cmp
inc
and
pop
pmaddwd
addl
andb
fisubs
sub
mov
sub
addb
xor
das
das
ljmp
iret
dec
sahf
mov
sub
pushf
sbb
or
out
dec
js
imul
sbb
pop
mov
push
loope
mov
idivb
jo
xchg
rorl
mov
fimuls
inc
push
fistl
subl
popf
lret
mov
shl
add
jns
cwtl
xlat
dec
push
cwtl
leave
jne
cs
adc
add
push
clc
testb
scas
inc
dec
imul
in
mov
lahf
lcall
ss
sub
data16
sub
push
inc
sub
adc
and
sti
adc
mov
mov
shll
sub
sahf
cli
inc
lret
lds
loop
les
push
rolb
data16
rorb
ret
sub
adc
daa
or
stos
mov
sbb
xor
mov
icebp
adc
repnz
mov
mov
jp
push
sbbb
and
aam
adc
adc
enter
filds
ja
add
sbb
xchg
mov
sub
arpl
repnz
xlat
adc
cmp
inc
jge
jp
mov
pop
sbb
push
cmp
and
or
sti
sub
jo
icebp
inc
pusha
cmpsl
adc
inc
and
push
addr16
and
dec
enter
mov
ljmp
cmpsb
mov
test
jg
fnsave
mov
les
je
outsl
inc
adc
push
cmpsb
add
jbe
enter
xchg
lahf
out
test
inc
in
and
jge
fldl
std
pop
lds
cmp
add
sub
and
les
pop
push
outsb
jp
popa
mov
fstps
inc
inc
mov
movd
xchg
int
lods
fimull
hlt
es
inc
aaa
mov
push
pushf
add
inc
jecxz
cld
sub
mov
cld
cmp
test
in
int3
enter
jecxz
sarb
test
mov
scas
div
and
adc
inc
pop
xor
sbb
lcall
adc
cltd
test
jl
stc
jl
and
cmp
mov
or
sbbl
ss
xor
mov
adc
icebp
js
inc
jbe
lret
push
sub
lcall
pusha
int3
push
into
sbb
sti
or
nop
mov
add
mov
movsb
jno
jl
testl
push
jbe
out
cmc
jg
notb
push
cli
pop
shlb
ds
ficompl
aad
add
test
outsl
fsub
ja
jb
mov
std
mov
mov
and
cwtl
je
and
loope
aam
lahf
sub
ja
loop
sbb
icebp
add
shr
xchg
pop
nop
pop
cmpsl
adc
data16
push
add
and
jmp
outsl
ficomps
cmp
pop
out
clc
or
scas
inc
sub
dec
mov
pop
fmulp
dec
inc
mov
jl
jl
xor
pop
filds
out
push
mov
add
xchg
ret
adc
dec
jmp
adc
iret
ficoms
fcmovu
sar
xchg
push
sub
ja
xor
pop
xor
shll
mov
dec
or
js
adc
lahf
adc
push
negl
icebp
xlat
mull
xor
adc
mov
push
and
push
jle
adc
pushf
push
or
shlb
dec
int
xchg
jmp
pop
sub
mov
cltd
cmp
push
jo
and
push
inc
add
mov
and
in
jp
test
mov
movsb
movsl
dec
movsl
loope
dec
mov
aam
mov
inc
xchg
cmp
lret
dec
popa
adc
cmp
outsl
jge
and
int3
add
xchg
inc
in
inc
dec
imul
pop
shll
rclb
lret
adc
pop
loopne
aam
inc
cmpsl
push
push
test
inc
add
stos
das
jmp
inc
sub
call
inc
ds
scas
daa
cli
adc
in
popf
arpl
aam
or
gs
push
das
add
insb
jno
fsubs
mov
push
push
mov
pop
mov
aas
inc
scas
or
repz
loop
inc
push
cmovae
movsb
aas
add
jae
pop
outsl
sub
or
mov
cwtl
js
cwtd
pop
pop
push
push
sbb
push
in
into
mov
dec
movsb
les
or
or
and
rcr
cmc
in
push
and
cmp
ret
adc
add
daa
add
pop
movsl
push
push
mov
addr16
xchg
xor
cmp
sub
out
dec
and
jp
fbstp
adc
inc
sub
or
pop
loop
stc
pop
push
ss
bound
mov
pop
dec
loop
aas
or
jmp
je
and
cmc
lods
test
add
aas
mov
outsl
pop
cli
pusha
psubq
jmp
pop
and
into
jno
lret
movsb
mov
andl
or
xlat
cmpl
hlt
imul
fcomip
cmpsl
xchg
mov
aaa
int
ficoml
xor
pop
adc
ljmp
es
push
sbb
imul
mov
incl
inc
xchg
adc
adc
or
pop
mov
test
in
pop
cli
cmp
sbb
rcrb
or
cwtl
cmp
pushf
in
or
mov
iret
das
pop
imulb
xchg
lods
mov
lock
mov
mov
lcall
adc
and
jp
xchg
arpl
pop
cmp
xor
mov
mull
rcll
xchg
or
mov
push
aaa
mov
push
test
push
push
pop
mov
std
push
aam
jl
movsb
rcrb
ss
mov
and
loopne
repnz
inc
cmpsl
cmc
jecxz
ljmp
xchg
push
push
pop
fwait
lcall
mov
inc
mov
jae
cmp
dec
shll
sbb
out
test
iret
mov
dec
inc
jp
cmp
clc
fs
sarb
adc
push
in
popf
push
cmp
out
cmpsl
mov
scas
push
and
dec
ja
dec
loope
outsb
and
in
lcall
and
mov
push
in
dec
mov
repz
sahf
lds
xor
shl
pop
ret
shrl
int3
pop
lcall
in
fisttpl
outsl
pusha
mov
imul
sahf
dec
fs
in
or
addr16
mov
jae
lret
sub
repnz
xor
lahf
dec
sbb
das
jg
cld
das
xor
gs
das
jp
and
cmc
jb
or
adc
xor
xor
and
push
icebp
fistl
sarl
hlt
and
movsl
lcall
enter
sbb
in
imul
mov
lahf
jp
jmp
int
dec
nop
xchg
fs
and
jns
add
jge
sub
push
ret
jae
sub
push
add
mov
lea
mov
aaa
push
sub
and
fxtract
test
pop
mov
movsb
sbb
sar
lahf
or
insb
inc
xlat
stc
jmp
daa
add
add
pop
lods
out
pop
push
nop
in
inc
fildl
stos
dec
out
les
or
je
sbb
jne
xor
stos
mov
imul
pop
add
fwait
dec
leave
xchg
jp
int
out
sub
cld
or
imul
mov
mov
fbstp
adc
push
add
fcomip
adc
fidivs
and
sub
mov
outsb
push
es
dec
push
pop
xor
ja
cmp
clc
ret
loope
cmp
sub
mov
mov
cmp
sti
add
outsl
pop
in
lret
pop
push
ss
les
int3
jne
jo
add
lcall
xlat
xchg
lcall
loopne
leave
adc
fcoml
push
les
jbe
adc
je
call
pop
mov
dec
and
out
sbb
pop
or
mov
mov
insl
outsl
bound
jno
add
in
push
xor
xor
adc
fildll
pop
sbb
repz
push
rolb
mov
cmc
mov
js
jb
scas
clc
enter
jge
pand
stc
add
mov
mov
adcb
cmp
fmulp
mov
inc
adc
mov
lock
mov
xchg
test
je
cmp
jb
lods
mov
sti
or
sbb
mov
mov
ret
rol
jle
pusha
xor
fbstp
sbb
shl
and
push
ja
jmp
fwait
sub
shrb
cmp
outsl
jg
cmp
js
xchg
enter
xor
pushf
iret
shrl
movsb
push
mov
mov
insl
addr16
faddl
mov
push
cld
loop
sbb
roll
imul
dec
lret
cmpsl
jno
orl
das
je
push
pop
aad
pop
fisttps
xchg
insl
xor
imul
jecxz
jmp
jle
out
inc
mov
sbb
outsb
imul
cld
cmp
or
mov
cmc
cmp
or
inc
mov
loop
jae
adc
popa
dec
std
hlt
in
out
popa
cld
insb
xlat
mov
xchg
movsl
ret
in
jmp
xlat
xor
dec
aas
jbe
in
push
or
mov
es
insb
movsl
xor
pop
lahf
add
and
sbb
fildl
dec
push
add
pop
gs
jno
xor
stos
sub
mov
outsb
push
es
orb
pop
push
int
lock
jp
mov
jnp
bound
stos
arpl
mov
icebp
pushl
sbb
sub
rolb
sbbb
aad
sub
jge
mov
push
cmp
pop
pop
xor
loop
fwait
imul
outsb
divb
mul
jp
mov
lahf
add
sbb
xchg
enter
out
pop
outsb
mov
aaa
into
inc
jno
dec
jmp
mov
jns
inc
imul
out
out
push
repnz
dec
sub
inc
and
movsl
sub
enter
notl
lret
pusha
fidivs
dec
enter
clc
imul
std
fldl
loopne
sbb
aaa
pop
add
cmc
cmpsb
cmp
bound
push
pop
insb
push
sbb
shl
cmp
rclb
inc
inc
pop
cmp
test
sbb
mov
add
ljmp
cmp
mov
sahf
xchg
shrl
imul
test
jl
or
dec
sbb
inc
lock
sbb
xchg
mov
xchg
sub
test
jecxz
shl
jbe
add
push
push
sbb
sbb
ja
das
mov
cmp
pop
hlt
sub
mov
jnp
or
test
pop
fcmovbe
adc
or
outsb
sahf
repnz
lret
or
xchg
push
es
ret
mul
ret
fcmove
adc
dec
pop
xchg
movsb
dec
ss
fcomps
mov
sbb
mov
in
std
pop
nop
imul
push
push
inc
cmc
out
ret
into
fistl
seto
out
push
push
mov
jge
pop
inc
mov
sub
mov
fldl
daa
mov
mov
in
arpl
sbb
and
in
pushl
inc
cmp
cwtl
stc
inc
or
mov
xchg
mov
punpckhwd
es
mov
lcall
fistps
faddp
sub
xchg
das
idiv
add
push
repnz
add
test
popa
insl
add
jl
popa
dec
out
inc
xchg
pop
mov
mov
mov
rcll
inc
mov
inc
inc
sbb
add
jge
loope
ret
push
das
loop
lea
or
cmp
pop
cmp
pmulhuw
lret
jnp
sbb
stos
or
jmp
fildll
fmuls
stos
nop
inc
out
rcr
lods
mov
popa
xchg
jb
jle
iret
mov
lods
aas
dec
adc
jo
xor
cmc
ljmp
bound
outsb
lods
add
jb
sub
cltd
aam
adc
push
mov
xchg
pop
shlb
cltd
add
mov
jbe
or
in
lea
and
fnstsw
sub
imul
add
ret
sub
cmp
cmp
enter
sar
lods
sarb
pop
cli
adcl
imul
sub
pop
out
push
dec
mov
jecxz
or
add
mov
xchg
pop
sub
and
inc
stos
adc
mov
ljmp
arpl
pop
das
data16
mov
fsubp
sbb
pop
or
fnsave
sar
lods
testb
aas
push
jno
cmp
sub
xor
sbb
mov
sbb
jge
dec
push
cmp
mov
stos
sub
mov
out
loope
lahf
lods
lret
xor
call
jecxz
out
leave
dec
pop
jae
data16
int3
mov
mov
adc
aaa
outsl
into
test
mov
outsb
insl
call
dec
jg
push
mov
sub
xchg
fs
shr
push
ret
inc
insl
cmpsb
mov
sahf
jl
push
push
das
icebp
pop
imul
in
shll
ljmp
std
movsl
insl
sub
loop
push
or
dec
add
xchg
popa
aaa
js
insl
data16
inc
and
fwait
aad
orl
test
pop
mov
mov
mov
lods
pop
xchg
sub
pop
mov
std
dec
adc
jmp
jge
pop
sub
cmp
pop
or
push
jbe
mov
mov
test
mov
cmc
stos
xor
aaa
fistpll
cmp
hlt
cli
push
popf
outsl
sbb
mov
mov
outsl
stos
and
and
mov
rcr
dec
into
add
cmc
dec
fwait
addr16
push
dec
pop
shll
arpl
and
push
in
push
mov
gs
xchg
adc
aad
or
mov
mov
repnz
mov
clc
in
lret
push
ja
xchg
jmp
rcrb
inc
in
mov
jle
mov
outsb
pop
imul
lea
jge
sbbb
emms
jne
incl
jmp
xchg
cmpsl
inc
xor
arpl
out
xor
pop
arpl
push
pop
incl
dec
pop
outsb
rclb
mov
into
loopne
fdivrs
jp
mov
std
mov
jmp
outsb
pusha
nop
push
pop
repnz
roll
push
jae
jp
les
rol
iret
jmp
pop
push
in
ficompl
out
mov
push
inc
mov
popa
sarb
aaa
std
jp
dec
sub
mov
int
ja
mov
frstor
cmp
mov
push
imul
jg
sti
cmc
and
and
iret
faddl
scas
sub
push
mov
or
mov
and
xlat
mov
in
adc
bound
faddl
mov
and
iret
insb
jl
xlat
pop
scas
lret
add
pop
push
push
divb
fstps
fwait
xchg
pop
cld
jno
dec
test
andb
pusha
jl
cli
movq
bound
mov
sbb
pop
push
add
mov
ss
stos
cmp
jne
shll
sub
fwait
jbe
call
into
cmpsb
sbb
push
insl
mov
push
imul
test
adc
frstor
xchg
cmp
push
outsl
decl
mov
ret
lods
icebp
rcr
insb
mov
jle
aam
and
insl
xchg
and
fistpl
mov
dec
mov
rcrb
leave
je
vdivsd
daa
mov
sti
sarl
cmp
pop
mov
add
popf
fwait
repz
inc
jne
test
ljmp
adc
xor
lret
inc
repz
jns
testl
enter
shll
cmp
cmp
loop
push
sub
pop
data16
mov
fwait
adc
push
and
cltd
jmp
cmp
xor
mov
mov
lret
pushf
popf
fiadds
inc
xchg
mov
inc
dec
mov
cmp
pop
sbbl
or
pusha
cmp
inc
push
out
push
mov
cltd
mov
add
mov
xchg
movsb
ja
repz
jnp
shll
orl
ss
add
or
push
fisubrs
sub
in
rorl
hlt
push
cmpsl
inc
fcomip
pop
xor
push
popa
in
or
pushf
cmc
xchg
pop
jmp
sub
xchg
push
xchg
scas
inc
pop
mull
cs
or
je
iret
xorb
adc
sub
cmp
and
addl
adcb
cmpsl
hlt
loopne
ds
xchg
jbe
aas
sub
lcall
xor
dec
dec
test
in
xchg
xchg
out
pop
lcall
mov
outsb
aas
add
cmp
out
scas
mov
stc
repnz
int3
aaa
pop
sub
xor
inc
jae
mov
pop
fmuls
in
clc
ss
dec
mov
adc
mov
fcmovbe
xchg
inc
nop
clc
sub
mov
mov
repnz
addl
sub
jg
sub
add
push
xor
popf
xor
shr
adc
jecxz
jg
add
ret
popa
sub
das
or
push
add
pop
mov
out
js
je
je
jnp
lods
xchg
fcoms
add
pushl
xchg
inc
or
or
mov
mov
pop
push
xor
pop
or
and
pop
lea
inc
subl
sbb
pop
test
inc
cmp
push
movsb
aaa
lret
cmp
scas
dec
push
movl
shll
mov
xchg
cmp
xchg
in
mov
xchg
lahf
aad
push
pop
insl
mov
fdivrl
ja
xchg
hlt
sbb
ret
push
mov
shll
xchg
add
sbb
ja
and
push
lret
cmc
shrl
fildll
mov
mov
pop
inc
loopne
dec
aad
ret
aam
loopne
popf
xchg
loopne
call
je
adc
in
cmp
mov
mov
lret
pop
aaa
ds
mov
push
mov
ficoms
cmp
in
jns
cmp
sbb
out
mov
imul
stos
mov
mov
outsb
xchg
nop
ret
adc
popa
sub
loope
xchg
test
fisubl
xor
into
mov
push
push
in
cmp
jmp
sti
or
lcall
cmp
sub
sub
rolb
ja
pop
lea
fnsave
cld
pop
xor
push
mov
aaa
in
sub
lcall
sub
repnz
sub
or
stc
jnp
in
sub
sbb
or
iret
out
push
movsb
mov
mov
cltd
clc
lods
aaa
aam
xlat
into
push
dec
fisttps
add
jnp
or
xchg
cmp
in
mov
adc
cmp
int3
add
jo
add
insb
adc
adc
jns
add
push
dec
mov
push
sahf
test
cltd
xchg
pop
sub
jecxz
mov
jl
in
shlb
cwtl
pop
push
mov
outsl
xchg
ja
mov
repz
cmp
jbe,pt
or
or
cmpsb
popl
minps
daa
xor
jl
in
add
push
jns
lret
cmpsb
push
dec
jne
popa
stos
jo
or
mov
dec
test
push
ret
dec
mov
ret
and
jnp
movsb
in
out
movsl
add
fildll
daa
jg
shll
sti
jg
aas
cld
xchg
jge
jnp
xchg
sbb
sub
dec
mov
xor
int3
xchg
lock
loope
scas
xchg
fildll
sub
push
sub
enter
loopne
les
fidivs
pop
frstor
sbb
pop
sub
jge
call
in
int
mov
jb
xchg
jp
icebp
sub
xchg
mov
sbb
shrb
pop
repnz
fdiv
inc
lret
inc
sbb
adc
xchg
aas
push
loopne
push
mov
inc
dec
lods
imulb
mov
push
sahf
std
adc
jnp
jmp
xchg
sbb
adc
cmp
je
fisubl
inc
xchg
loopne
mov
repnz
repnz
movsl
jns
aaa
cmpsl
mov
mov
lret
mov
pop
adc
int3
std
mov
sbb
lahf
imul
xchg
fdivrl
inc
mov
pop
xor
push
in
xchg
push
cmp
or
sbb
xchg
in
pop
subb
xchg
adc
rorb
fldl
cltd
mov
je
repz
pusha
dec
arpl
inc
jo
fcmovnb
pop
cld
push
stos
aam
mov
popl
xor
xor
mov
in
popf
mov
xlat
inc
loope
pop
pop
in
sbb
jne
adc
repnz
ret
cmc
cmp
loopne
and
jae
jmp
bound
pop
lods
mov
mov
shlb
jge
pop
stos
push
mov
fistl
ret
aad
lods
xor
push
ljmp
aas
shr
fwait
es
out
push
mov
test
leave
and
aam
mov
sarl
dec
mov
jle
loopne
orl
notl
add
pop
pop
or
inc
xor
pop
addl
mov
xorb
sti
pop
mov
push
mov
popa
test
int
mov
lcall
js
std
push
nop
mov
frstor
aad
and
mov
lock
mov
int
jae
mov
andb
push
jp
push
arpl
xchg
push
inc
add
in
stc
cmp
xor
fisubs
mov
negl
jg
stos
cs
xor
stos
divl
jl
or
imul
cmpsl
add
push
fcoms
cmpsl
dec
sub
jns
ljmp
daa
pop
in
mov
sbb
jno
sub
mov
fwait
into
jne
hlt
jae
push
mov
inc
xor
arpl
movsl
xchg
rclb
icebp
add
sbb
je
mov
jg
push
ds
adc
repz
inc
sub
dec
ljmp
imull
mov
stos
xchg
mov
rorb
bound
inc
adc
jae
pop
orl
in
xchg
popa
outsl
decb
sbb
xchg
mov
jb
aam
fistpll
into
ficoml
sti
imul
test
or
je
lcall
in
or
pop
sub
pop
hlt
jne
lock
prefetchw
jne
mov
lods
pop
adc
dec
add
cmc
xchg
out
popf
fnstcw
cmp
add
add
popf
call
and
loopne
loope
loopne
scas
cmp
jl
fs
mov
pop
push
sub
adc
jl
lea
fisubl
nop
xchg
mov
xchg
mov
pop
sahf
mov
or
sub
rcl
xor
mov
xor
xchg
sbb
repnz
mov
xchg
jmp
mov
mov
push
or
xor
jbe
aam
push
mov
xor
sbbb
js
push
mov
outsb
jo
mov
cmp
test
sbb
xor
xchg
into
fisubl
jnp
jns
mov
dec
and
add
xchg
mov
in
jae
inc
test
cmpsl
mov
mov
and
cmp
push
imul
cmp
add
push
jnp
push
imul
out
fwait
pop
rcrl
call
aam
in
movb
and
xchg
mov
add
pop
xchg
add
mov
push
and
mov
rorl
xor
add
cltd
jl
mov
lahf
pop
adc
mov
lods
lds
pop
push
cltd
daa
mov
dec
imul
in
andb
or
mov
push
je
adc
cmc
imul
pop
dec
mov
out
jp
in
mov
push
dec
xchg
jg
add
add
jle
jnp
push
stos
nop
sbb
int3
in
pop
push
ja
outsl
or
arpl
pop
adc
rcrb
stos
mov
push
je
push
sbb
pop
push
mov
out
mov
mov
or
stos
xchg
movsl
xchg
pop
mov
add
adc
jecxz
xor
push
sub
mov
fld
add
push
mov
repz
ss
mov
push
push
nop
mov
sub
mov
pop
mov
mov
push
movsl
pop
sbb
rcrb
push
push
or
repz
push
test
mov
cli
xchg
cmp
push
loopne
sub
inc
adcb
pop
call
inc
or
in
inc
pop
mov
or
xchg
ret
xor
mov
arpl
sbb
xor
ja
sub
fidivs
test
xchg
inc
aas
cmp
mov
cli
repz
sbb
mov
xor
pop
sub
movq
or
mov
rolb
dec
pop
inc
push
jne
mov
out
test
xor
pop
xlat
and
add
sbb
jmp
xchg
je
adc
test
lds
mov
and
xchg
inc
and
mov
sbb
sub
divb
cs
mov
push
and
push
mov
or
pushl
jno
mov
addl
test
movsb
cmpsb
jbe
out
fsubl
jne
mov
jne
fiadds
dec
sbb
push
testl
loope
out
add
mov
in
sub
fstl
xchg
addr16
xor
int
pop
movsb
add
movsb
lock
sub
cli
enter
push
push
jp
mov
sti
push
mov
repz
stos
sub
repz
dec
sub
cmpsb
jnp
xchg
and
ja
sbb
lret
mov
adc
test
mov
sbb
imul
jge
arpl
pop
dec
fstps
dec
mov
push
pop
sarb
call
mov
cmpl
and
lret
andl
sub
ret
jge
jno
int
xchg
cmp
and
jnp
mov
sbb
rolb
les
sub
and
dec
cmp
dec
mov
sbb
sub
cmp
mov
cmc
dec
sarb
aas
lods
inc
lds
adc
stos
std
or
sbb
out
push
xchg
out
inc
ror
into
outsl
push
and
cmp
mov
dec
cmp
xchg
daa
movsb
jmp
push
outsl
jb
shrb
adc
int
jmp
mov
pushf
aaa
adc
mov
jp
add
jmp
and
mov
adc
mov
mov
sahf
test
scas
jmp
stos
lock
mov
stc
enter
sbb
dec
nop
ret
pop
pop
nop
xlat
adc
sahf
into
cmp
cmpsb
push
or
lahf
lods
testl
push
test
adc
xchg
add
sahf
cmp
mov
jae
dec
idivl
adc
dec
xor
mov
enter
in
xor
roll
cli
jno
pop
or
ret
lea
aas
jnp
arpl
aas
dec
outsl
ds
repz
in
inc
rep
les
sub
repz
or
and
pop
xor
in
rclb
mov
xchg
int
jno
lea
sbb
mov
cltd
xchg
dec
js
and
sub
mov
push
mov
out
leave
xor
push
jl
rolb
in
mov
mov
movsl
pop
pop
mov
int3
icebp
or
cltd
mov
cmpsb
or
cs
dec
into
es
lods
sub
iret
ss
mov
and
call
movsb
cmc
mov
mov
popa
ljmp
repnz
leave
fldcw
cwtl
lea
jo
cmp
push
add
add
inc
xchg
ljmp
test
add
dec
pop
bound
test
inc
sbb
dec
lock
cmp
ljmp
or
jmp
mov
xlat
or
je
pop
adc
lcall
pusha
movsb
aas
mov
leave
data16
enter
sarb
mov
jbe
inc
pushf
sub
and
push
inc
ficoms
sbb
push
jecxz
ret
and
pop
adc
cmp
push
sub
push
pop
sarl
jne
lcall
sbb
test
or
outsb
jmp
ja,pn
inc
arpl
popf
cli
in
enter
xor
push
sbb
rcrb
repnz
dec
xorb
testl
test
xchg
aad
fs
imul
push
cwtl
mov
jge
sub
inc
enter
dec
jnp
push
push
nop
xchg
mov
lahf
xchg
test
jl
enter
pop
mov
insb
sbb
mov
loopne
test
pop
mov
into
adc
std
mov
pop
insl
sbb
sub
addr16
or
enterw
push
std
dec
xchg
or
xor
add
xchg
aam
ret
leave
xchg
adc
frstor
out
jb
dec
call
sbb
dec
pop
sbb
xchg
inc
pop
mov
xchg
mov
xchg
xchg
jb
mov
scas
jnp
push
pop
neg
push
inc
mov
cmc
fsubrs
in
add
test
mov
out
stos
or
mov
fdivrs
mov
jns
xchg
les
rsm
jnp
lods
sbb
movsb
jge
or
mov
sub
pusha
pop
and
dec
jge
cmp
push
lods
add
repz
xchg
push
lret
mull
loope
mov
pop
scas
insl
sub
stos
inc
or
push
arpl
jo
inc
xchg
add
lods
cmpsb
stos
push
inc
fstpt
xor
lcall
inc
aas
bound
out
push
xlat
rcrl
mov
ror
loope
loopne
inc
jmp
rol
pop
mov
cmp
xchg
pushf
dec
pop
mov
and
mov
sbb
shll
xor
mov
or
mov
scas
lret
lret
sub
xlat
push
lcall
xor
sbb
test
loopne
pop
inc
shrb
out
daa
sub
push
jo
mov
rolb
loopne
push
sahf
iret
jg
repz
loop
sub
popa
mov
popa
pop
jecxz
add
push
or
loope
xchg
pop
or
xor
cwtl
lock
push
int3
test
xlat
bound
or
mov
add
insl
leave
dec
ljmp
imulb
sub
sub
fwait
dec
sbb
or
or
shll
push
push
xchg
js
test
sbbl
jmp
ror
lret
ret
mov
inc
and
xorb
or
in
mov
add
and
push
out
scas
jl
in
mov
xor
inc
adc
add
cmpsl
xor
stos
icebp
inc
test
push
dec
data16
pop
lea
sub
ja
xor
sbb
dec
loopne
sbb
pop
and
bound
aas
imul
push
sub
add
mov
inc
dec
xor
xlat
dec
leave
pop
shlb
loope
sub
insb
shrl
xchg
ret
pop
push
push
pop
push
xchg
inc
ret
mov
popf
mov
loope
lds
filds
aaa
es
mov
pop
ret
xor
lods
cltd
jb
dec
fidivl
xor
push
data16
mov
orb
jb
pop
scas
pushf
cmp
push
mov
gs
fbld
addr16
arpl
ds
cmp
mov
pop
mov
rclb
jmp
fidivrl
and
popf
scas
jo
fcoml
inc
mov
pop
imul
pop
push
lret
inc
mov
cmp
sub
lods
std
and
jl
mov
rcll
add
icebp
adc
fsubs
loop
repnz
fs
lea
test
repz
add
leave
repnz
mov
nop
sbbl
push
jnp
movsl
jne
pop
dec
int
lods
dec
arpl
rsm
cli
lcall
ficoml
roll
loope
or
std
sbb
inc
loopne
subb
mov
add
les
stos
mov
push
stos
mov
push
or
and
clc
fstpl
sbb
cltd
jge
mov
fbld
cli
xchg
push
outsl
inc
sbb
adc
iret
shr
int
jmp
leave
push
xchg
pop
fcmovnb
mov
xchg
and
jae
and
test
cmp
and
clc
inc
jp
mov
loope
in
lcall
mov
mov
pop
or
push
enter
dec
popf
dec
adc
lods
test
pushf
mov
outsb
pop
lcall
cmp
sbb
pop
cwtl
adc
mov
mov
xor
fstps
push
push
xchg
dec
insb
mov
rcrl
or
mov
insb
nop
mov
mov
jno
out
dec
cld
arpl
xchg
pop
add
fidivl
mov
mov
stos
dec
add
mov
rcll
popl
dec
pop
imul
push
pop
sar
pop
repnz
inc
xor
sbb
cltd
and
mov
fldt
mov
mov
repnz
pop
pop
aad
xor
xchg
dec
loope
sbb
push
cmp
dec
repnz
mov
mov
dec
ftst
inc
mov
sahf
mov
aas
arpl
scas
xlat
jl
ss
popf
xor
adc
nop
scas
bound
xchg
fwait
xor
lods
sbb
gs
test
dec
scas
inc
outsl
sub
mov
mov
jmp
fwait
jmp
mov
mov
stos
cmpsl
movsb
ret
ds
fwait
and
jne
popw
sarl
cmp
cmp
insb
mov
xor
outsl
das
mov
lods
test
and
cwtl
xchg
fs
push
fsts
iret
test
hlt
jno
sub
cli
xor
mov
mov
subb
mov
xchg
jge
incl
lahf
pop
jo
push
sbb
ss
sbb
sub
xor
and
test
test
ds
shrb
dec
negl
and
test
adc
test
mov
sub
or
jbe
dec
mov
out
add
sub
enter
adcb
addr16
shlb
xor
pop
mov
jo
out
sbbb
cmpsl
insb
insl
pop
mov
dec
mov
jne
mov
rcrl
mov
notl
mov
jnp
cwtl
insb
std
sbb
popa
pop
ljmp
jnp
push
ret
mov
rcrb
bound
xadd
jo
xchg
pusha
mov
out
add
cmp
popf
arpl
sbb
in
imul
sub
sub
lret
stos
mov
pop
repz
xchg
stos
and
adc
loop
add
testl
pop
sub
mov
mov
xchg
push
frstor
sar
cmpsb
mov
repz
mov
mov
add
fstp
sarl
dec
xchg
lcall
faddl
sbb
adc
hlt
xchg
jno
mov
sub
divb
rcll
icebp
jl
lds
fs
dec
jl
dec
ss
test
rorl
adc
sbb
loope
add
sub
adc
test
icebp
push
int3
jo
mulb
jl
pop
insb
jg
xor
repz
fcmove
sti
push
lahf
or
test
mov
arpl
push
pop
cmp
mov
and
clc
and
mov
pop
push
cmp
adc
testb
add
in
inc
lods
rorb
mov
into
mov
fidivs
jo
addr16
aam
test
sti
jns
mov
push
fabs
imul
xchg
sti
repnz
push
inc
adc
lret
and
push
cmpb
out
into
lods
stos
lcall
lcall
jo
out
mov
mov
bound
inc
loope
mov
dec
aam
jle
adc
fimuls
xor
cmp
repnz
jmp
mov
movsl
mov
decb
hlt
jo
inc
int
mov
pop
and
int3
mov
mov
sbb
repnz
xchg
inc
jb
adc
xchg
ja
xchg
pop
mov
xchg
fdivrl
lcall
sbb
sahf
sbb
cmpsl
cmc
test
pop
mov
nop
out
out
in
lock
hlt
leave
jbe
xor
mov
add
sub
stc
and
mov
js
sub
fimuls
int
xchg
decl
mov
xor
shrb
in
fcoms
pop
sbb
outsb
sbb
daa
sub
rcll
testb
jo
pop
or
push
cmc
call
fdivs
push
dec
mov
or
sub
sti
out
sbb
sti
mov
xchg
xchg
pushf
les
loopne
imul
xchg
dec
popf
int
push
data16
arpl
mov
popf
xchg
repz
and
add
jnp
xchg
cmp
inc
pop
sbb
cltd
ret
es
jg
roll
pop
mov
out
dec
int
aaa
inc
pop
pop
out
xchg
dec
inc
lret
inc
fwait
add
push
bound
sbb
int3
in
mov
ret
push
lods
xchg
jno
mov
adc
gs
and
mov
loopne
cmp
loopne
dec
jae
clc
lahf
fisttpl
call
enter
jns
inc
mov
test
xchg
mov
jp
cmp
adc
jb
xchg
repz
xchg
lods
xchg
rcr
dec
push
shl
add
push
divb
and
adc
pusha
jl
cmpsb
lret
push
stos
jecxz
mov
mov
adc
push
in
push
xchg
and
ljmp
sbb
shrb
pop
fwait
xchg
sbb
push
jns
cmp
iret
jbe
fsubrl
push
mov
frstor
loopne
loop
jo
and
mov
jmp
or
inc
jno
dec
pop
call
scas
iret
out
inc
movsl
push
cmp
outsb
repz
xchg
push
xchg
inc
mov
in
test
sub
cs
xchg
nop
ret
mov
aas
sub
sub
push
ret
mov
ficoml
mov
enter
push
cmp
adcb
add
bound
jge
sub
imul
leave
fldl2t
push
xchg
pop
push
test
insl
mov
dec
shrb
int
push
outsb
pop
faddl
push
in
out
lret
add
mov
pusha
jl
pop
jecxz
imul
jns
iret
or
add
inc
faddl
push
inc
fimuls
in
rol
sahf
push
xor
int
out
push
mov
jb
les
mov
cs
rcr
adc
dec
add
fcomip
sbb
lcall
stos
jge
xor
mov
test
sub
cmp
or
hlt
xchg
out
lock
mov
shlb
lock
mov
aas
scas
push
je
in
int3
or
pop
xchg
push
pushw
fisttpll
ret
aam
mov
xchg
lea
cmp
inc
add
ret
adc
push
push
mov
pop
sbb
dec
ds
mov
mov
aam
xchg
mov
xchg
int
imul
jmp
add
sub
mov
movl
pop
push
test
sbbl
lods
jno
ret
fdivrs
int
mov
ror
outsb
notl
and
push
scas
and
pop
insl
pop
lret
fs
mov
sbb
inc
fists
std
mov
std
pop
out
repnz
xchg
cltd
scas
pop
jmp
cmp
lret
nopl
mov
xchg
out
xchg
mov
or
sbb
lret
out
dec
jl
ret
pop
xchg
pusha
insl
inc
pop
andb
movsb
mov
adc
out
addl
jne
cmp
das
mov
ljmp
jne
icebp
pop
jg
test
xchg
mov
aad
cmp
sub
jecxz
add
mov
xchg
cmp
add
aad
dec
mov
loopne
jo
jbe
adc
in
sub
xor
xchg
test
cwtl
clc
repz
jmp
ja
icebp
lret
adc
xchg
aaa
mov
fistl
daa
mov
jo
fs
push
aam
cmp
mov
inc
leave
hlt
jno
in
jg
mov
dec
jb
cmp
inc
dec
xor
sar
inc
and
add
jae
fcmovnb
xchg
rcl
push
pop
cli
sbb
xchg
xchg
outsl
jl
jo
insb
nop
dec
push
xor
inc
lahf
mov
mov
sub
ficomps
add
adc
xor
lds
test
mov
outsl
xor
dec
lahf
in
mov
popf
mov
xchg
movl
jno
and
notb
lods
mulb
pop
out
pop
dec
push
add
roll
push
setp
xor
mov
ja
xor
xor
nop
int
movsl
jo
mov
push
es
jbe
add
in
out
mov
mov
sbb
xor
push
mov
add
jne
mov
daa
mov
xor
addr16
cltd
inc
cli
lahf
in
mov
mov
xchg
fs
mov
negl
lock
mov
frstor
lea
or
jg
loopne
movq
mov
test
shl
sbbl
arpl
pop
jle
stc
dec
push
rolb
jnp
subb
out
stos
push
xchg
stos
push
push
fcompl
and
jo
gs
and
insb
and
sub
mov
mov
push
inc
push
push
jbe
inc
pop
jns
and
sub
sub
dec
ret
inc
mov
inc
imul
pop
in
fs
mov
sub
inc
push
sub
aas
lret
push
aas
popa
sub
aaa
lods
aad
cmpsl
imul
pop
xchg
mov
jae
andb
cmpsl
test
popa
add
out
ficoms
enter
test
movsb
fisttpl
jecxz
stos
xchg
push
aas
push
xchg
js
lock
sub
dec
add
xchg
iret
xor
testb
xchg
out
sub
mov
sbb
lahf
in
fidivrl
das
xchg
adc
inc
pop
je
fidivrl
mov
push
mov
pop
pop
cmp
inc
imul
xchg
mov
mov
ret
orb
xchg
mov
movsl
sub
outsl
test
gs
int
mov
jns
and
xchg
fsubr
dec
mov
pusha
sbb
popa
xor
fcmovu
add
dec
lods
or
scas
repz
pop
int3
cmp
sbb
lret
adc
imul
or
cmp
mov
xchg
jp
les
leave
fcomps
inc
mov
mov
gs
sub
dec
adc
outsl
jecxz
out
pop
scas
xlat
hlt
ds
pop
pop
add
sarl
cmc
jge
fistpll
mov
adc
lds
pushf
jle
sbb
add
mov
fiaddl
das
pop
in
adc
loopne
dec
push
repz
ret
roll
mov
and
dec
push
push
dec
imul
xchg
adc
cmp
xchg
mov
inc
push
daa
jno
jno
test
int3
cmpsl
stc
mov
in
mov
add
inc
xchg
push
mov
pop
mov
call
je
jg
sub
sahf
jecxz
popf
add
pusha
stos
mov
cwtl
mov
in
ror
push
scas
pop
mov
shrb
pop
outsl
adc
dec
out
in
xor
enter
push
mov
movsl
inc
insb
add
mov
jo
add
insl
jnp
xchg
fldcw
sbb
add
or
mov
add
fbld
jmp
test
cli
and
xchg
jb
pop
mul
or
cwtl
add
xchg
je
ss
je
lods
xchg
leave
stc
out
pop
repnz
mov
pop
gs
push
aas
pop
or
into
xor
lods
adc
pop
aad
inc
xchg
sbbl
clc
jecxz
xor
in
add
and
push
shrb
or
add
lods
mov
repz
loopne
rclb
push
mov
cmp
pop
repz
pop
cwtl
mov
int3
inc
xchg
ffree
nop
sub
pop
adc
and
push
pushf
dec
aad
sbb
cltd
lcall
ds
adc
shlb
mov
pushf
je
fistpl
hlt
push
repnz
jnp
leave
in
and
aaa
and
and
adc
pop
jl
sub
mov
jg
mov
inc
xor
into
pop
ja
sbb
adcl
cmp
xchg
sub
out
pmullw
dec
push
scas
dec
fistpl
out
jbe
fldcw
outsl
gs
aaa
xchg
rclb
mov
fcomip
cs
push
dec
and
inc
push
test
pop
mov
lods
pop
adc
cmp
xchg
andl
ljmp
mov
in
lods
pop
gs
scas
xor
test
scas
jl
add
pop
ljmp
mov
xchg
mov
rolb
add
dec
aam
inc
mov
add
mov
or
or
dec
add
or
mov
ljmp
cli
sbb
aas
push
mov
ljmp
insb
ljmp
lea
andb
add
mov
cltd
cmp
movsl
sub
sub
and
sbb
cmp
push
outsb
dec
fimull
or
ret
ja
scas
lock
sbb
sub
repnz
adc
add
shll
test
ret
mull
aas
out
ja
pop
gs
sahf
mov
jo
jns
cmc
decb
out
pop
xlat
mul
test
push
shl
pop
bound
push
xorb
loop
pop
sub
sub
push
ljmp
testl
inc
daa
fidivrl
daa
jo
rorl
stos
shll
in
xor
add
in
stos
shll
xor
mov
jnp
inc
or
icebp
lahf
stc
xchg
push
mov
or
cmc
push
adc
mov
call
and
nop
movsb
cmp
lret
add
cmp
imul
stos
movsl
push
xlat
add
loope
movsb
mov
jmp
aaa
mov
adc
push
pop
sub
sub
adc
cmc
jbe
jo
jl
das
stos
shlb
ljmp
insl
in
scas
enter
adc
addr16
repz
or
rcrb
test
sti
std
cmc
dec
fdiv
xor
mov
mov
dec
pop
pop
jns
aaa
sbb
popa
into
sbb
arpl
popf
xchg
fsubs
cmp
dec
scas
sub
gs
push
xor
dec
les
int
sbb
mov
sbb
jne
mov
stos
mov
push
test
les
negb
outsl
call
push
mov
movsb
jb
popa
xlat
outsb
jmp
add
mov
mov
out
push
jl
int3
xor
xchg
push
push
lods
mov
bound
push
cmp
sbb
mov
loopne
sub
mov
jno
test
daa
bound
mov
sahf
cmpb
or
dec
pop
jne
adc
cmp
xchg
cmp
and
mov
cmpb
inc
jecxz
push
xor
dec
inc
mov
jbe
out
adc
pop
imul
xchg
rcl
mov
test
jo
das
stos
jbe
pop
dec
pop
lcall
xchg
pop
ror
out
jb
aaa
mov
mov
int
mov
adc
lock
mov
xorb
cmp
sahf
xor
ficomps
jg
sbb
into
cmp
add
fildl
dec
movsb
int
mov
daa
xchg
pop
divl
outsb
cmp
inc
test
or
in
mov
in
test
pop
xor
int3
inc
jl
insb
mov
and
push
dec
rcrl
pop
adc
pop
push
outsb
mov
or
test
jb
xchg
pop
push
pop
imul
shll
inc
lret
mov
xor
rclb
hlt
fwait
push
and
test
sbbl
fistpll
fwait
push
mov
aaa
in
invd
add
movsb
call
add
scas
movsb
in
or
rcl
cmp
jge
push
pop
lea
fidivrl
lds
mov
pop
jbe
xchg
mov
test
lret
loope
add
dec
sub
ds
in
mov
lock
roll
dec
in
je
adc
aam
xlat
jae
cli
fs
pop
arpl
addl
and
stc
lock
pushf
push
daa
cmp
sbb
aas
les
in
or
loopne
insb
inc
insb
call
andb
dec
imul
cs
stc
mov
inc
loop
adc
in
test
cmp
and
into
call
rorl
xchg
test
xor
cli
imul
jns
push
and
mov
ljmp
sub
add
setb
add
mov
fildll
pop
sbb
in
fildll
xchg
arpl
xchg
lret
cmp
cli
push
in
adc
xchg
repz
or
jl
iret
aam
ror
mov
push
addl
gs
daa
insb
jg
pop
xchg
cmp
xchg
mov
inc
pop
and
mov
andb
mov
test
iret
shlb
popf
xchg
roll
ss
adc
xor
add
push
lods
jmp
cmp
xor
jle
aaa
ds
push
mov
mov
sub
sbb
fistpl
into
inc
sahf
sbb
daa
and
cmc
cmp
loop
jno
mov
popf
adc
shl
add
mov
aam
add
or
stc
inc
clc
das
lahf
out
xor
mov
imul
int3
push
mov
aaa
popf
test
mov
dec
sub
pop
imul
out
mov
pop
aad
jns
mov
dec
pop
mov
lods
insl
out
mov
push
push
mov
xlat
sbb
xchg
mov
leave
pop
xorl
adc
mov
popa
dec
xchg
mov
ds
sub
int3
shlb
mov
out
mov
rclb
lret
xlat
adc
ret
push
add
mov
mov
icebp
adc
negb
mov
mov
testl
dec
dec
mov
das
jns
mov
add
js
ficompl
imul
aad
pusha
aam
pop
dec
dec
pushf
std
pop
jns
pushl
or
xchg
gs
loop
mov
divb
ja
add
lcall
adc
movb
pop
int
sub
stos
sub
inc
into
jns
push
nop
movsl
outsb
fildl
cli
mov
push
lcall
and
aad
mov
mov
dec
xor
xchg
jbe
jg
mov
push
sub
imul
push
jle
sub
push
add
add
dec
xchg
pop
rcl
mov
int3
sbb
out
push
inc
add
in
enter
clc
fisubrl
push
je
mov
movsl
test
movsl
out
clc
das
mov
and
sbb
inc
jns
shl
xor
jmp
bound
cmp
cld
mov
movsb
fidivl
sbbl
mov
hlt
xlat
mov
mov
jg
sbb
arpl
dec
shlb
in
stc
and
mov
shlb
fwait
and
bound
dec
xor
scas
in
iret
push
sbb
popf
daa
xchg
sub
call
pop
adcl
inc
mov
sub
pop
rcll
lock
js
rorl
ja
sub
cli
sahf
mov
or
adcl
enter
mov
mov
xor
mov
pop
daa
int3
mov
pop
repz
dec
test
lds
add
jns
mov
jb
sub
in
rcrl
hlt
daa
or
jp
int3
lahf
dec
loopne
jb
jne
xor
out
adc
lahf
inc
fisubl
inc
cmpsb
pushf
call
pop
push
xorb
push
das
or
mov
rclb
adc
adc
les
xchg
in
xor
dec
jmp
stos
adc
mov
ret
dec
jae
loopne
lret
rclb
mov
xchg
inc
xor
push
jae
repz
repz
out
jecxz
jno
jmp
dec
out
cmp
test
sbb
repnz
or
add
mov
jge
adc
sbb
cmp
inc
push
imul
jl
sbb
in
jbe
test
or
out
mov
addr16
lahf
push
or
bound
out
push
add
sub
ss
mov
test
imul
pop
movsl
out
dec
and
scas
mov
and
mov
push
xor
outsl
mov
loopne
popa
out
int
daa
mov
ss
pop
sahf
jae
lea
jg
je
pop
incl
lahf
mov
sub
sahf
jns
xchg
xchg
push
and
ficompl
push
push
sbb
sub
adc
lods
cli
and
sahf
fnstenv
outsl
addb
nop
and
xchg
lea
cld
test
jl
mov
pop
dec
jb
xlat
xchg
je
xchg
stos
add
loope
hlt
jns
dec
inc
aam
stos
mov
scas
mov
aas
mov
shlb
xor
push
or
inc
cmpb
xchg
in
push
mov
clc
jne
cltd
push
inc
mov
mov
arpl
imul
sbb
sbb
push
sahf
cmpsl
mov
cmp
imul
in
rcll
int
imull
inc
aaa
cmp
sbb
in
cmp
inc
movsl
mov
sub
mov
popf
sbb
gs
adc
mov
adcl
mov
int
inc
fidivrl
enter
sahf
fwait
in
ds
out
pop
cmp
in
test
cmp
sub
inc
push
mov
mov
shl
mov
cmp
dec
jl
loop
out
out
xor
mov
and
push
leave
cmp
sub
inc
hlt
stos
arpl
xlat
lea
xor
ret
cld
push
in
imul
cli
mov
and
jle
nop
xor
lcall
mov
repz
cmp
cmpsb
push
loope
adc
xchg
mov
int
push
dec
inc
mov
daa
push
dec
and
adcl
add
mov
icebp
flds
enter
dec
mov
fisttpll
rclb
mov
incl
aaa
rolb
mov
inc
idiv
sbb
pop
in
push
sbbb
xchg
xor
jle
fstpt
fwait
xchg
scas
subl
or
push
xor
aam
mov
jno
je
xor
stc
repnz
cmpsb
movsl
sbb
daa
daa
dec
test
lahf
push
sti
pop
cli
add
jns
popa
push
fsts
or
cmc
xchg
jb
mov
mov
das
pop
xor
sbb
cmc
aad
xchg
nop
and
sbb
mov
scas
in
dec
add
mov
mov
sbb
push
mov
dec
pop
cmp
add
addr16
lret
mov
lods
sbb
jg
jp
cs
mov
mov
int
push
pushf
mov
insl
inc
push
movsb
jl
and
jo
xlat
dec
out
jl
dec
pop
sahf
and
or
jns
rcll
insb
jns
in
mov
jmp
sub
add
out
jl
cs
int
scas
cmp
fldt
sbb
in
int
mov
popl
fstps
dec
ret
push
enter
xchg
inc
and
arpl
fisubs
sbb
ja
and
and
out
in
leave
jecxz
test
cld
incl
add
lahf
test
fstpl
dec
push
mov
mull
sbbb
and
fcompl
mov
aam
out
jns
test
loopne
pop
ja
mov
sbb
or
mov
outsl
mov
adc
mov
das
in
lss
push
bnd
sbb
push
orl
inc
xchg
aad
scas
jmp
mov
in
jg
push
push
push
jl
push
jae
inc
test
or
es
sbb
mov
sub
jbe
negl
mov
xor
clc
pop
shrl
mov
mov
in
mov
shl
ja
mov
js
mov
sub
std
mov
push
cld
jg
xchg
iret
loop
aam
inc
lods
add
mov
sbb
lahf
cld
xchg
fadds
cmc
cs
mov
lods
add
cli
sub
jnp
push
ds
jne
pop
jmp
mov
fwait
push
setg
xchg
aas
adc
mov
jg
insb
and
mov
mov
pusha
and
cmpsl
dec
pop
mov
adc
mov
jbe
fildll
shlw
push
xchg
push
pusha
cmp
ja
fxch
ss
jl
cmc
sbb
xor
mov
lss
fs
jno
imul
in
ret
decl
jae
fcoms
pop
jl
jmp
icebp
jno
push
in
mov
ret
loope
bound
test
mov
rorb
push
and
jae
cmp
add
dec
outsl
dec
sbb
fsubrl
in
cli
pop
sub
leave
mov
push
mov
xor
popa
mov
sbb
test
inc
or
sbb
cmpsl
popf
scas
jmp
sub
inc
mov
pop
mov
push
mov
mov
push
psadbw
dec
stc
fs
pop
add
in
lcall
fwait
inc
add
mov
mov
js
push
adc
xchg
inc
cmp
out
mov
or
jns
mov
pop
fnstsw
mulb
push
push
bswap
xchg
or
fmul
cwtl
insl
lock
xchg
xor
fisttpl
in
and
mov
fistpll
pop
mov
pop
jecxz
jle
imull
jno
and
aam
push
bnd
xor
add
adc
lods
and
lods
js
pop
sub
and
sub
jno
pop
sti
lret
ljmp
xor
adc
mov
push
dec
inc
pop
dec
arpl
sub
xchg
xor
mov
adc
push
xchg
xchg
and
fiadds
cltd
filds
xor
fidivrs
das
xor
std
add
sub
test
mov
mov
mov
icebp
aam
mov
pop
loop
lods
cmc
xor
subl
sbb
jns
ror
std
ficomps
cmp
adc
mov
mov
insb
add
pop
gs
pop
dec
sbb
notl
nop
and
test
push
xor
jge
mov
jmp
shll
daa
stc
jns
fidivl
sbb
xor
jae
xchg
push
dec
push
lret
and
jle
pop
int
pop
hlt
jnp
rol
sub
cmp
mov
jo
fildl
rcrb
xchg
dec
or
in
iret
push
push
out
mov
adc
cld
into
shll
add
loope
pusha
iret
adc
inc
jne
fstl
xor
insl
dec
mov
hlt
in
mov
xchg
lock
jl
aad
lret
mov
ja
sbb
cmp
hlt
jmp
xor
cli
pop
mov
add
jp
jmp
loope
cmc
gs
test
out
dec
imul
mov
jo
mov
adc
nop
sub
in
aaa
jg
mov
dec
ja
push
or
pop
testl
cmpsb
mov
jno
lock
pop
test
pushf
inc
push
mov
add
in
cs
or
les
xor
pusha
in
mov
jle
wrmsr
outsb
daa
dec
fcoml
scas
mov
pop
jmp
adc
lea
mov
jne
mov
in
or
in
adc
popf
inc
dec
xor
fdivl
mov
jb
and
into
aam
sbb
pop
nop
xor
add
fistpl
sub
mov
inc
pusha
cmp
shll
ljmp
jp
jg
ja
imul
jo
stc
lahf
ja
test
lcall
dec
xor
jge
cmp
fstpl
aas
pop
inc
fistps
push
xchg
mov
movsb
or
add
cmpb
iret
mov
ss
out
fcomps
daa
fdivs
and
stc
sbb
mov
adc
jae
repnz
inc
mov
pop
outsl
mov
leave
into
and
sti
scas
fdivrl
pop
dec
mov
daa
in
aad
ret
daa
adc
inc
insb
add
pushf
and
dec
rcr
bound
push
ret
or
fistps
shrb
mov
xorb
cwtl
jle
or
lret
sub
aam
xchg
sub
inc
mov
pop
sbb
dec
roll
insl
mov
and
sub
fstp
mov
pop
in
cmp
pusha
cmp
movsl
lret
fwait
pop
cmc
or
cs
jmp
sbb
jmp
xor
lock
nop
loop
push
push
popf
or
or
addr16
fnstsw
xor
pop
loopne
stos
dec
inc
inc
icebp
popf
jg
scas
mov
jecxz
sbb
mov
mov
gs
sarb
inc
dec
sbb
sbb
lock
ret
mov
mov
cltd
lods
aaa
dec
mov
push
cmpl
lds
and
adc
push
aas
in
jmp
inc
popa
cmp
in
out
xlat
push
inc
imul
cmp
push
jne
mov
fs
inc
in
adc
pushf
hlt
movsb
xor
hlt
orl
jmp
shrl
push
jg
push
mov
test
xor
repz
and
push
xlat
push
sahf
dec
mov
xlat
push
cmpsl
push
mov
push
mov
xorl
cmc
mov
aad
adc
mov
mov
stc
inc
lds
and
scas
or
adc
jge
sbb
lds
int3
jns
aaa
mov
jo
cmp
adc
sbb
test
test
sbb
jmp
into
lret
xor
inc
cwtl
sarb
jo
xchg
andb
jl
push
pop
sub
mov
ljmp
xor
arpl
movsb
data16
insl
dec
or
pop
cmpsb
int
faddl
adc
jp
mov
and
jnp
fwait
cltd
xor
mov
test
adc
loopne
out
movl
sub
clc
ficomps
rorl
push
test
jmp
jns
leave
cmpsb
je
mov
mov
out
or
aas
mov
mov
int3
inc
mov
pop
ljmp
sbb
pushf
adc
movl
leave
in
mov
fsubrl
pop
lret
roll
mov
je
movaps
mov
jb
xlat
bound
mov
mov
loope
mov
mov
mov
jle
fisubrs
cmpsl
add
mov
inc
and
push
cmpsb
dec
jl
and
adc
mov
dec
push
adc
push
lods
mov
mov
fidivl
dec
int
mov
popf
insl
lock
jae
aaa
inc
dec
dec
shlb
iret
aam
or
dec
mov
adcl
daa
in
jecxz
xchg
or
repz
mov
push
jmp
dec
xlat
sub
loopne
inc
xchg
adc
mov
and
pop
mov
ficoml
mov
adc
addr16
push
imul
jp
cmp
mov
sbb
pushf
nop
push
ja
fmul
ja
js
daa
pop
or
les
out
pop
sub
push
ds
push
mov
mov
dec
mov
cmpsb
sbb
cwtl
sub
mov
inc
adc
pushf
inc
loop
push
push
xchg
das
hlt
xchg
cmp
cld
es
cmpsb
jmp
cvtpi2ps
cmc
cmp
roll
jmp
ret
xlat
pop
iret
subps
ret
mov
push
clc
dec
push
push
aad
xchg
adc
inc
fstpt
sub
pop
ljmp
aaa
inc
inc
cmp
or
add
out
mov
and
pushf
mov
sub
fwait
mov
mov
incb
and
aas
xchg
call
sbb
cmp
nop
les
stos
xlat
out
push
jg
std
lcall
lds
mov
popf
fbstp
subb
inc
jnp
dec
mov
xchg
cmp
adc
pusha
ljmp
jmp
call
xlat
dec
in
ljmp
dec
sbb
aad
popf
and
cli
mov
xor
dec
insb
frstor
roll
icebp
and
xchg
adc
dec
loope
pop
mov
pop
fwait
push
dec
scas
jl
loop
outsb
pop
ret
jl
and
out
add
inc
sub
inc
call
test
je
adc
hlt
loopne
fistpll
cmp
outsl
mov
inc
iret
aaa
std
daa
mov
push
xchg
lcall
pop
hlt
cwtl
hlt
loop
and
insb
pop
faddl
stos
arpl
cli
adc
mov
pop
insb
mov
addl
jecxz
sbb
stos
sahf
fmull
pop
jl
daa
jnp
bound
lahf
in
sub
in
cmpsl
subb
movsl
lahf
and
dec
add
test
xchg
test
das
or
and
je
fwait
xor
adc
icebp
sub
or
outsl
xchg
les
add
and
sub
mov
cltd
or
inc
inc
loopne
imul
xchg
inc
pop
into
stos
insb
add
add
lcall
cs
jbe
push
out
repz
rolb
push
cli
add
adc
in
ljmp
jnp
xorw
je
push
cmp
addl
inc
sub
das
aas
xchg
imul
push
push
and
push
stos
out
nop
fwait
adc
ror
adc
and
cli
push
or
lret
cmpsl
loop
subb
xor
test
leave
ret
push
xchg
in
dec
stc
mov
insb
or
sti
test
or
popf
cltd
cmp
sbb
fucom
lods
movsb
aad
dec
out
xchg
insl
fidivrl
les
push
dec
ret
mov
mov
sbb
dec
mov
mov
loopne
cmc
sub
scas
inc
jg
repnz
fstps
rolb
xor
shr
pop
push
shlb
push
push
inc
adc
imul
rcrl
cld
lret
cwtl
hlt
in
leave
jno
add
lcall
addr16
cmp
scas
test
cmp
movsl
aaa
mov
sub
and
cwtl
jg
mov
add
out
or
or
addb
out
push
xchg
jmp
inc
mov
xchg
mov
mov
adc
cwtl
mov
push
ret
mov
movsb
jae
outsb
xor
in
sub
sbb
fstpl
sbb
cmp
add
mov
pop
dec
or
sub
inc
cmc
inc
adc
cli
lds
pop
sbb
cld
pop
iret
lret
pop
jne
movsl
pop
ret
fwait
xchg
jl
lods
push
roll
xor
clc
and
push
icebp
sbb
pop
sti
push
test
jbe
push
test
addr16
insb
sbb
leave
shll
cmp
dec
in
mov
incb
or
lahf
movsb
and
mov
out
xor
loop
hlt
fdiv
ficompl
xchg
nop
lods
sbb
ljmp
daa
adc
pushf
push
dec
inc
repnz
pop
jl
scas
cli
add
jg
lds
sbb
mov
in
jne
loop
cmovbe
mov
leave
sub
aaa
sbb
stos
aaa
xchg
outsl
cmc
into
test
push
jecxz
sub
dec
dec
xor
jae
sub
lahf
inc
push
negb
xchg
push
pushf
rcrb
push
jne
test
adc
jge
decb
jp
addb
push
sbb
aaa
hlt
add
mov
mov
arpl
push
repnz
add
mov
das
pop
mov
fdivr
jp
jmp
cld
test
xor
je
jmp
pop
jl
out
in
hlt
out
mov
fidivrs
xchg
jmp
mov
or
insl
daa
imul
mov
outsl
sbb
adc
das
jns
push
lahf
add
xchg
ja
inc
js
shll
jecxz
xchg
mov
push
mov
inc
xchg
popf
jecxz
mov
xlat
push
sbb
outsb
inc
loopne
inc
pushf
mov
inc
notb
jbe
loop
dec
mov
fisubrl
jno
and
adc
add
push
mov
mov
push
push
iret
push
cmpsb
or
scas
dec
iret
scas
loop
sti
push
cmc
cmpl
xchg
test
pop
push
scas
adc
jb
inc
rep
jns
scas
push
sbb
push
dec
xchg
add
lods
xchg
sbb
les
nop
loopne
mov
filds
cmpsl
jns
push
in
and
xchg
scas
sbb
sbb
jnp
and
repz
sub
push
subb
mov
popa
fcoml
or
push
adc
mov
out
dec
add
sub
cmp
mov
lahf
xlat
pop
cltd
or
pushf
xchg
push
cwtl
das
aaa
mov
insl
cmpsb
sub
push
arpl
dec
mov
fistps
adc
lods
scas
inc
pop
or
aaa
jecxz
inc
cmc
pop
xlat
jnp
mov
shrl
mov
mov
fstl
adc
adc
and
push
and
push
sbb
mov
cmp
jbe
cmp
jmp
mov
cwtl
scas
cmpsl
sbb
data16
jo
sub
in
insl
xor
repz
in
out
aaa
pop
lea
lret
add
aaa
popf
ja
or
pop
repnz
lcallw
rol
sub
mov
loop
ja
icebp
fcmove
lea
adc
daa
out
jno
lock
push
xor
jmp
imul
mov
leave
mov
ret
xchg
push
jmp
lods
loope
ja
inc
stos
pop
cmp
out
mov
jle
jp
adc
mov
cmp
or
std
jmp
mov
cli
mov
iret
lret
cmp
test
ss
arpl
mov
or
addr16
in
mov
fmull
cmp
sub
icebp
gs
in
fsubrl
lea
xor
repnz
sbb
sbb
dec
fwait
or
rorl
rcrl
xor
adc
jle
sub
fstl
mov
and
adcl
pusha
ss
mov
insb
cli
insb
loopne
pusha
mov
mov
or
ret
adc
lcall
or
jl
out
pop
xor
out
mov
insb
lock
mov
lods
or
data16
push
sti
push
add
stos
fidivrs
adc
jmp
popf
out
push
jne
mov
xor
jo
ret
lds
cli
push
into
xor
test
or
in
mov
rclb
std
xchg
inc
add
lods
mov
cld
xchg
sub
pop
fildll
clc
out
pop
lret
stos
push
bound
es
sbb
sti
dec
sbb
test
jns
scas
das
cs
push
cmp
out
xor
rorb
pop
outsl
dec
or
pop
xchg
ret
cwtl
sar
mov
push
lret
loopne
fwait
mov
dec
je
lock
or
push
bound
je
adc
mov
and
dec
dec
cmp
mov
mov
add
mov
cmp
outsl
imul
push
adc
push
dec
sub
mov
frstor
mov
insl
aam
jae
loope
leave
pop
xor
inc
push
mov
fwait
sub
shl
aas
lea
repnz
mov
or
fiadds
xchg
sub
ret
outsb
sub
call
orb
das
lret
or
push
lds
inc
iret
fimuls
xor
dec
lahf
ret
inc
loope
call
mov
inc
sbb
mov
adc
dec
push
scas
mov
fisubl
fldt
jo
lea
sarb
fcmovne
daa
sbb
je
cmp
add
clc
int
jp
pop
mov
cltd
and
xchg
add
sub
push
out
xor
int3
inc
mul
inc
sbb
add
test
clc
mov
add
jnp
cmp
mov
and
out
stc
jl
jae
lret
outsb
fisubl
and
loopne
push
dec
mov
sub
mov
cld
mov
pop
xor
xor
dec
das
das
movsb
xor
out
cmovb
dec
mov
mov
repnz
outsl
cmp
xor
or
sti
outsl
mov
xchg
cmp
lea
int
movsl
rcl
movups
rorl
in
sbb
sub
adc
xor
or
jmp
add
jl
scas
jne
ljmp
arpl
les
es
mov
lret
xchg
js
sarb
xchg
out
sahf
push
push
dec
push
and
add
ret
pop
fcompp
inc
mov
in
sub
adc
scas
js
popf
mov
pop
nop
push
ror
adc
jbe
rcrl
pop
fs
notb
test
stos
pshufw
add
dec
lods
cmp
push
push
mov
dec
in
pop
out
pusha
mov
rolb
stc
and
std
in
nop
jg
jbe
and
push
inc
loopne
movsb
out
jne
sahf
mov
popl
adc
lods
mov
movsb
mov
mov
jb
dec
sbb
mov
dec
outsb
sub
adc
sarl
pop
add
inc
cmovle
jp
int3
hlt
cli
pop
cmp
sbb
push
sar
push
je
sub
cmp
nop
js
xchg
add
pop
outsb
jno
in
cmp
shlb
in
push
mov
pop
nop
push
sbb
push
out
int3
dec
out
in
arpl
rcl
mov
sub
pop
data16
test
jg
addr16
cmc
inc
xlat
dec
hlt
sub
or
adc
pusha
cli
insb
rcrb
mov
shrb
mov
adc
jb
icebp
sub
ret
mov
and
adc
inc
addb
popf
lret
adc
cmp
mov
sbb
pushf
cmp
lea
gs
jecxz
pop
lret
insb
jo
imul
xor
mov
call
lods
arpl
aad
sbb
cmp
stos
mov
xchg
in
xchg
xchg
scas
add
inc
shl
jge
out
ret
adc
pop
xchg
inc
nop
sub
or
andl
xchg
clc
cltd
xchg
xor
jns
mov
push
xchg
mov
pop
out
rorl
std
repz
mov
dec
push
inc
emms
js
jo
rcrl
mov
pop
add
push
imul
pop
jg
inc
xchg
mov
jmp
rorb
inc
mov
xor
aad
in
clc
adc
mov
dec
sbb
nop
popf
popf
mulb
inc
lahf
xchg
mov
xor
enter
gs
sahf
insb
lods
in
repz
arpl
fidivs
fdivr
mov
pop
fnsave
mov
sbb
je
insb
add
push
cs
test
mov
xchg
or
cmp
out
rorl
mov
hlt
shr
pop
push
daa
inc
test
xlat
or
dec
add
sahf
push
sti
ret
mov
xchg
data16
mov
jle
xor
jle
or
xchg
pop
insb
les
jno
jl
and
mov
xor
movb
fidivl
adc
test
jp
scas
dec
sub
jne
es
or
cli
int
fisttps
mov
dec
leave
xchg
cld
add
xchg
cmp
lods
leave
jae
ret
jbe
mov
inc
test
jg
mov
cmpsb
mov
adc
mov
mov
lods
scas
xor
imul
sahf
push
inc
mov
outsl
or
mov
pushf
cmp
xor
andb
test
loope
imul
data16
cli
ficompl
or
xor
movsb
cmp
sub
out
fists
push
inc
xchg
lods
fldcw
mov
dec
leave
xor
in
icebp
insl
mov
mov
outsl
ret
xor
pop
mov
dec
bswap
pop
add
mov
jmp
imulb
sbbb
lret
cmp
fsubrs
js
pusha
ss
xchg
call
lret
pop
and
mov
sub
mov
lods
add
pop
push
shll
insl
in
dec
fsubl
pop
adc
xor
pop
jge
loope
int3
stos
ja
jae
loope
in
adc
add
and
xor
movsl
jnp
rcrl
push
in
fdivrl
rorb
jg
add
jmp
daa
push
movsl
mov
xchg
jmp
mov
adc
pusha
xor
add
xor
fistpl
les
movsl
sub
enter
out
ja
push
shll
jns
popa
pand
push
adc
push
mov
addr16
ret
call
push
fs
sbb
cmpsb
iret
pop
js
ljmp
inc
dec
shlb
test
jp
leave
mov
mov
mov
movsb
call
jns
xchg
and
test
dec
mov
aaa
pusha
mov
jmp
icebp
dec
dec
imull
lods
dec
fcoms
bound
cmpsb
fbld
cmp
cmp
push
mov
cmp
sti
daa
xchg
add
loop
push
or
add
mov
jo
cmp
fildl
js
push
ss
cmp
mov
fdivl
jne
or
int3
add
xchg
push
mov
cmp
fs
mov
scas
xor
imul
cmpsb
rorl
dec
and
andb
or
and
add
inc
inc
fs
int3
gs
daa
inc
jp
lods
add
mov
adc
xchg
nop
inc
mov
into
cmpb
push
test
inc
lods
cli
mov
mov
or
jle
dec
cwtl
out
and
dec
stc
and
pop
shll
xor
lods
or
xchg
mov
inc
add
mov
dec
or
lea
fwait
mov
xchg
aaa
push
cltd
int
pusha
jg
int3
inc
and
sub
jl
imul
xchg
mov
lds
cmp
out
fmul
jbe
pop
pop
imul
cmp
dec
add
sub
xlat
or
movsl
clc
subb
pushf
sarl
repnz
dec
push
sahf
mov
mov
pop
pop
nop
sbb
ja
idivb
imul
and
into
or
int3
daa
aad
aas
cli
movb
loop
mov
jl
push
pusha
push
adc
pop
adc
sub
sbb
and
mov
and
add
cwtl
sub
jge
cwtl
mov
jnp
lds
stos
push
andb
mov
aas
fs
es
mov
mov
into
and
mov
shl
dec
jg
adc
add
ja
mov
nop
pop
lret
pop
xchg
pop
mov
cmpsl
or
pop
lret
inc
dec
pop
cld
push
in
xor
cmpb
fucomp
shrb
rorl
xorl
test
sub
xchg
add
sub
popf
imul
loopne
les
pushf
jecxz
lods
mov
mov
sti
pop
push
std
int3
dec
fcmovnbe
cld
adc
mov
xchg
dec
inc
xor
push
mov
and
sub
sahf
or
push
cmpb
fiadds
sub
fwait
repnz
or
repnz
in
fmuls
cmp
jmp
sub
cmp
xchg
ret
xor
dec
mov
xchg
daa
lcall
mov
imul
xor
xchg
pop
out
insb
fbld
pop
pop
xor
cltd
mov
mov
sub
int3
movsb
sbb
xchg
mov
bnd
jecxz
push
out
ja
jno
mov
sub
xor
and
sub
adc
into
jne
inc
das
fs
out
int
mov
stos
pop
cmp
test
jbe
sahf
add
push
inc
sbb
dec
dec
hlt
pushf
inc
mov
scas
rcll
add
pop
gs
pop
inc
inc
push
xlat
add
imul
roll
flds
mov
sbb
jge
xchg
mov
push
lock
mov
mov
cmc
push
xor
add
mov
cs
adcl
xchg
adc
inc
sbb
sub
pop
stos
addb
cli
fiadds
jnp
adc
adc
cs
loopne
xor
xor
sbb
and
pushf
lods
adc
imull
and
adc
mov
push
pop
pop
pushf
jl
iret
mov
inc
sahf
pop
or
lret
adc
test
pop
cmp
dec
push
sbb
shr
shll
movsb
push
addr16
pop
loopne
cmp
lret
jmp
dec
fcomps
add
xchg
push
stos
mov
push
subl
xor
jae
fs
pop
sub
pop
ret
cmp
jbe
sub
jo
xor
sahf
jno
in
mov
cmp
dec
jmp
push
insl
sub
in
xchg
jle
test
lods
and
fcoml
xor
adc
lea
pop
push
mov
cmp
fildl
shr
sbb
lods
movsl
xchg
test
vpsrld
popa
xchg
add
mov
lea
jge
push
xlat
ds
test
movsb
sbb
pop
cmp
in
sub
lcall
and
ja
and
pop
or
shr
inc
stos
cmpsl
mov
jl
adc
in
aas
pop
sbb
sahf
daa
ret
mov
clc
dec
lahf
dec
inc
fmuls
popf
nop
mov
adc
ljmp
scas
lods
sub
xchg
pop
outsl
jmp
pop
insl
jno
or
jnp
dec
pop
xor
push
aam
or
cmp
stos
jmp
outsl
push
inc
gs
pop
sub
pop
or
sti
add
test
sbb
outsb
rep
mov
mov
nop
int
inc
sbb
cs
xchg
push
xor
mov
mov
daa
push
lret
out
cmp
mov
pushf
xchg
jne
and
xor
or
jl
dec
das
test
jmp
push
gs
xlat
data16
xlat
inc
leave
xchg
push
inc
mov
xchg
sbb
movsb
mov
pop
pop
sbb
fwait
arpl
pop
add
popa
sub
jb
adc
xor
test
out
mov
add
xchg
or
mov
popa
cmp
mov
call
into
jge
sub
push
xor
push
gs
scas
mov
cmp
adc
sar
fistl
pop
add
idivl
aaa
bound
aas
test
add
cmpsl
aas
and
sbb
sbb
pop
int
sbb
loop
adc
and
dec
orb
jns
out
lods
lret
push
or
shlb
scas
jo
lcall
adc
or
popf
lahf
sbb
mov
subl
cli
ret
nop
outsb
mov
aas
movsb
jl
in
dec
outsl
test
rol
cmpsl
das
imul
lods
and
add
mov
dec
and
dec
push
xchg
or
ror
into
dec
jmp
push
xchg
or
int3
adc
in
ror
jle
test
inc
frstor
lcall
xor
and
mov
roll
movsb
adc
jle
and
out
mov
in
pop
fnstsw
xor
into
mov
movsl
jp
or
pop
fcomi
push
mov
and
popf
mov
jle
mov
dec
jg
and
push
cltd
lahf
mov
into
rcll
push
and
dec
outsl
stos
rcr
xchg
cmp
push
fucomip
aad
clc
insb
mov
pop
push
adc
jmp
adc
fiaddl
std
adc
jb
aam
vpminsw
mov
fld
iret
sbb
xchg
je
addr16
mov
cmp
mov
pushl
xchg
rclb
pop
or
and
add
sub
leave
clc
stos
pop
sub
inc
jle
popf
imul
negb
lahf
lods
into
push
mov
cmpsl
cmc
xorb
ffreep
lods
ljmp
cli
leave
cmp
testb
adc
icebp
fdivr
dec
adc
mov
popa
leave
jg
test
push
push
outsl
mov
cltd
lret
mov
fidivl
pusha
jecxz
xchg
sbb
ret
bound
addr16
sbb
and
jne
out
jge
loopne
mov
cmp
cmp
lods
in
les
fs
adc
repnz
arpl
add
jnp
pop
dec
subb
fisttps
pusha
je
sub
dec
adc
rcl
loope
xorb
mov
jbe
mov
and
stc
sbb
out
movsb
add
adc
mov
xor
std
xor
xor
mov
pop
dec
push
popf
dec
add
adc
push
repnz
not
sti
js
gs
adc
sbb
ret
inc
cmpsl
mov
jbe
lcall
push
sub
fistpl
mov
mov
push
jo
jne
movsb
leave
lcall
stos
jo
xchg
lahf
or
adc
xchg
repnz
inc
dec
xor
add
pop
mov
popf
add
xchg
cmp
dec
add
jae
and
aad
out
rcr
mov
lret
out
jle
xlat
mov
xchg
out
pushf
mov
dec
in
and
sub
lods
cmp
mov
imul
das
adcl
js
movsb
sahf
testb
pop
pop
cmc
xor
ja
fwait
test
pop
dec
lret
ret
cli
jmp
and
in
test
dec
stos
pop
xor
mov
fimuls
aas
fstpl
icebp
mov
stos
out
icebp
push
bound
push
icebp
mov
jae
shll
rclb
fistps
rcll
push
jl
or
cmp
lds
mov
inc
mov
adc
push
frstor
and
cs
mov
es
cltd
or
dec
push
mov
int3
enter
loop
sub
or
ljmp
sbb
arpl
test
mov
push
fsubr
fabs
mov
dec
out
push
in
shll
xlat
adc
out
mov
jp
jae
jae
in
xor
lret
ds
sahf
mov
cmp
adc
and
movsl
jns
and
mov
cmpsl
cli
push
aad
xor
adc
nop
std
insb
mov
pop
jp
js
fistpll
cmp
jl
imul
je
push
test
jg
sbb
jno
lods
hlt
daa
mov
xor
pop
mov
rcrl
aaa
inc
stc
shl
ja
xchg
jmp
and
fs
test
ss
or
rclb
in
rcr
repnz
pop
scas
sub
dec
sub
adc
int
das
mov
pop
cmp
mov
push
filds
dec
fldcw
mov
dec
fs
in
test
ja
xlat
aas
sahf
popa
push
mov
jecxz
cmp
inc
movsl
mov
xchg
jecxz
aam
jne
mov
mov
adc
jmp
ret
imul
movsl
pop
int3
fsts
pop
mov
sti
int
dec
movsl
and
std
das
psubsw
and
fsts
data16
adc
sub
cmp
and
call
arpl
sub
pop
into
in
stc
das
js
dec
lods
jbe
addb
addr16
and
mov
and
xor
and
ret
jmp
mov
movsl
and
iret
adc
scas
add
loope
dec
stos
cmp
lcall
cltd
fxch
rcll
idivl
mov
jmp
jmp
mov
adc
dec
inc
pop
cmpsb
mov
repz
cwtl
pop
xlat
jne
jge
hlt
inc
adc
sub
mov
jp
mov
jg
adc
ret
imul
push
roll
xchg
fwait
cmp
jns
and
scas
xor
cld
repz
ss
aad
dec
mov
imul
dec
scas
push
insb
xor
sbb
pop
mov
inc
lods
pop
jle
jg
mov
cmp
push
xor
pop
dec
outsb
movsl
pushf
push
or
pop
cld
test
lods
xchg
cltd
outsl
push
arpl
jmp
gs
repz
ret
pop
outsl
insl
cli
lods
movsl
js
shlb
pusha
push
icebp
dec
cmp
push
sarb
add
mov
jb
cmp
cmp
and
das
dec
movsl
mov
jbe
mov
add
out
xor
add
jo
pop
into
mov
movsb
adc
and
lods
addr16
inc
shlb
fldcw
xchg
aad
into
movsb
xchg
jge
pop
sub
rorl
fdivr
inc
clc
outsb
int
jno
cmpsb
pop
xchg
push
sbb
in
add
jb
lods
aaa
adc
pop
outsb
push
pop
pusha
enter
lea
nop
lds
cmp
pop
shl
movsl
aam
push
xor
divb
shrl
ljmp
pusha
cmp
pop
sarl
outsl
jbe
mov
push
sbb
add
test
fistl
xor
or
int
xchg
push
inc
in
iret
movsl
fsubr
scas
bnd
pop
jne
in
in
lahf
xor
shl
dec
dec
out
lods
or
push
push
adc
and
pusha
xchg
sub
frstor
cmp
add
push
mov
and
aad
jns
in
and
and
pop
sbb
xor
add
lcall
mov
pop
and
inc
mov
push
movsl
dec
fs
push
adc
dec
jge
jmp
and
fidivs
dec
jmp
push
cltd
ljmp
stc
inc
mov
rcr
inc
lea
fdivp
pushf
pop
ss
push
pop
sbb
xchg
sub
push
data16
add
test
inc
aad
movsl
mov
cld
pop
mov
shll
jo
push
pop
inc
fdiv
mov
cli
sbb
cltd
subb
xchg
rolb
icebp
stos
add
fcoml
jae
mov
cltd
insl
cld
in
shr
stos
rcrl
mov
imul
and
ja
loopne
andl
push
jo
adcb
jl
sub
rclb
aaa
xchg
ja
aam
aaa
sbb
call
lds
push
mov
addr16
mov
inc
push
sbb
and
and
push
daa
shlb
pop
ljmp
xchg
orb
xchg
pushl
push
pop
mov
dec
inc
cmpsb
jb
xor
sub
pop
xchg
rcrb
sbb
pop
imul
and
pop
mov
push
pop
dec
mov
jo
stos
jne
aam
lahf
pop
mov
subb
in
cmpb
cmp
cmc
mov
adc
push
sub
mov
popa
and
sbb
je
mov
push
dec
jbe
push
sbb
add
jmp
sub
lahf
clc
dec
mov
pop
das
and
or
mov
mov
frstor
mov
mov
pushf
pushf
pop
lods
outsb
daa
sub
out
lahf
scas
popa
fdivrs
push
jne
sbb
scas
mov
rorb
cwtl
enter
add
outsl
fidivrl
or
jle
sub
sbbb
repz
mov
mov
cltd
xchg
test
leave
ficoml
enter
int3
pop
outsl
xrelease
in
inc
aas
adc
sti
insl
cmpsl
mov
fildll
and
gs
mov
mov
ss
fstpl
xchg
insb
or
and
pop
mov
pop
jnp
xor
adc
les
or
int3
mov
push
jl
and
jae
test
push
xchg
sub
push
jne
cld
cmpsl
mov
jge
mov
jo
movsb
xchg
testl
pop
xlat
adc
xchg
icebp
jnp
and
das
pop
orb
aaa
inc
nop
mov
lahf
repnz
mov
sub
jmp
adc
xor
add
add
push
cltd
xchg
idivl
popl
jg
cmp
mov
ljmp
jle
mov
push
shl
jl
shlb
inc
push
addr16
adc
aad
sub
xor
rclb
mov
add
sbb
push
bswap
jmp
fidivrl
daa
push
xlat
es
dec
cs
pop
jnp
mov
cltd
call
fs
jbe
sar
in
stos
lahf
jo
loopne
or
int3
out
and
in
popa
jo
mov
inc
push
mov
scas
testb
movb
fstpt
adc
faddl
sub
ljmp
xchg
aad
loope
outsl
xor
sub
out
cmpsb
aam
adc
mov
and
ss
into
mov
sub
fmull
in
icebp
mov
mov
std
jb
adc
pop
xor
or
aas
test
sar
push
xor
add
aam
or
jne
scas
loop
mov
cmp
xchg
pop
or
jp
repz
mov
outsb
mov
adc
push
push
dec
mov
mov
adc
pop
push
ret
fisttpll
xchg
stc
mov
rcll
mov
jbe
sbb
lret
add
push
outsb
sbb
and
dec
mov
dec
xor
mov
std
pop
test
div
clc
dec
in
ss
add
repz
jmp
mov
pushf
adc
getsec
dec
jecxz
das
sbb
jns
cmp
dec
mov
std
stos
jo
ja
int3
push
mov
jb
jne
lock
adc
mov
rorl
xchg
testl
in
add
adc
lahf
and
cmp
dec
pop
xchg
dec
jp
insl
and
sub
das
aam
xorl
bound
adc
fstp
cmp
or
nop/reserved
loopne
cmp
js
or
insl
and
xlat
shlb
adc
daa
cld
arpl
cwtl
nop
das
mov
pop
loope
sti
xchg
mov
int
int3
pop
xchg
in
insb
fimuls
outsb
cmpsb
pop
popa
push
cmp
fmull
data16
pop
clc
mov
sbb
xor
adc
inc
test
lock
shrb
pop
sub
and
sti
addb
mov
sbb
cwtl
hlt
pop
xchg
and
add
dec
pushf
jle
lret
fwait
dec
dec
lcall
push
ficoms
inc
adc
clc
les
mov
orl
psubusb
pop
pusha
fildl
jp
push
ljmp
rcl
dec
cltd
rcrl
pop
mov
jb
ficoms
movsb
and
mov
mov
cmp
test
ds
jecxz
imul
notl
icebp
sub
fldt
fwait
mov
and
pop
jns
fisubrl
ja
jge
sub
mov
xlat
in
nop
call
jg
cltd
loope
arpl
inc
iret
cltd
or
add
xor
inc
int
mov
testl
lock
sahf
aaa
les
and
call
mov
loope
test
ja
lock
loopne
mov
mulb
ss
xchg
jge
cmpsb
fistpl
subl
out
popa
dec
pop
add
movsl
pop
mov
or
andl
adc
test
adc
hlt
jb
nop
cli
in
push
mov
mov
addr16
jmp
sub
sub
xor
or
push
andb
lods
inc
sbb
xchg
in
out
and
add
stos
mov
push
inc
xlat
add
inc
mov
sbb
dec
push
push
mov
and
sub
dec
sbb
xor
mov
cmp
cli
mov
repnz
imulb
stc
test
mov
out
jge
push
fisttps
pop
fsts
pushl
sbb
sub
aam
in
outsb
sbb
pop
pushf
dec
mulb
mov
and
popf
mov
je
dec
ja
jae
pop
aam
or
push
push
dec
es
jb
ret
dec
les
testb
add
cmpl
dec
pop
and
mov
sbb
bound
jl
mov
cmc
cmpsl
jb
repz
and
in
scas
inc
or
cmpsl
cmc
cwtl
dec
xorb
cmp
push
arpl
imul
sbb
std
sarb
jo
inc
out
inc
xchg
mov
fiaddl
dec
mov
in
icebp
pop
cmp
xchg
andnps
test
xchg
roll
pop
es
fldenv
test
ret
das
imul
mov
fisttpll
pop
jns
pop
push
add
and
int3
in
push
stos
movsb
dec
sahf
fisttps
adc
cmpsb
mov
pop
popf
dec
mov
dec
pop
inc
dec
pop
inc
movsl
mov
fildll
push
push
sbb
or
repz
jb
push
outsl
xchg
call
push
sahf
jnp
cmp
fstpt
sbb
xor
cmp
pop
add
out
test
lret
das
aas
fildl
push
inc
pop
or
lods
in
pusha
into
mov
push
out
or
or
inc
shufps
inc
icebp
jns
rorb
lret
daa
or
fcomip
and
inc
inc
cli
dec
data16
mov
stos
mov
int
push
movb
mov
iret
jmp
xor
or
mov
hlt
test
cmp
rcll
push
inc
mov
inc
pop
popf
pop
loop
testb
jne
pusha
outsl
sbb
aad
decb
repz
pop
xor
fcompl
sbb
in
fwait
sbb
xor
ficoml
out
cmp
push
push
xchg
loopne
xchg
dec
or
call
mov
mov
hlt
jl
mov
cmpsl
inc
mov
call
das
mov
mov
shll
and
sub
cmp
test
lcall
inc
aaa
outsl
cmp
in
xrelease
pushf
adc
sub
negl
sahf
rol
inc
fisubl
pop
mov
das
xchg
or
lret
test
pop
mov
push
outsb
xchg
out
cmp
outsl
mov
inc
jno
mov
pushf
addb
lcall
fwait
push
cmp
in
cmp
push
xlat
sar
cmp
ja
sti
addr16
mov
jbe
je
icebp
not
mov
pop
stc
jae
scas
call
mov
lahf
in
int3
mov
lds
cmp
pop
adc
lcall
int3
js
sbbb
dec
pop
aaa
xor
loop
inc
lods
outsl
dec
and
mov
fistps
push
sarb
aad
inc
mov
incb
mov
outsb
stos
mov
cmc
adcl
xor
lcall
and
dec
rcrb
and
scas
add
or
xor
shlb
mov
xchg
cld
jp
sub
or
ficomps
jge
mov
add
and
cmp
bound
repnz
addr16
or
push
roll
or
outsl
cmc
mov
jmp
das
ljmp
outsb
xchg
stos
or
in
mov
push
lret
fcmovnu
fsub
sub
push
and
lahf
pop
out
fnstenv
repnz
jbe
add
shl
inc
jbe
movsl
in
pop
adc
cs
mov
jecxz
lahf
and
mov
into
or
jmp
cmpsl
add
mov
imul
test
rorl
sub
call
ss
testb
loop
mov
repz
inc
pop
orl
sub
sub
mov
rcll
lds
out
jp
fidivrs
lret
sbb
pop
cmc
or
movl
repnz
or
mov
jge
jnp
cmp
xor
scas
inc
pop
call
xor
ljmp
outsl
pushf
aas
and
pusha
xchg
lock
shrb
push
lods
cmpb
and
mov
inc
popf
mov
cwtl
scas
les
fs
fstpl
aas
pop
pop
pop
xchg
pop
pop
and
cli
inc
pop
sbb
mov
aaa
and
insb
iret
sbb
push
out
xchg
jb
lock
pop
mov
imul
ficomps
frstor
mov
mov
mov
xor
jns
adc
pop
adc
add
repz
insb
mov
adc
sub
push
mov
outsl
push
push
fstpt
cmp
out
inc
sarb
cli
repnz
mov
mov
jns
out
cmp
pop
mov
in
fdivr
lret
xchg
sub
sub
lea
mov
les
xlat
cmpsl
jae
dec
out
push
dec
leave
fists
xor
mov
iret
pop
stc
push
mov
mov
dec
stos
jecxz
out
in
ja
out
lods
cmp
pop
aam
cmp
add
pop
test
push
add
mov
dec
into
dec
jg
cmpl
aas
mov
cmpl
xorl
sbb
shr
into
daa
shrl
inc
sbb
dec
push
xor
sub
sbb
jl
daa
pop
sahf
pop
xchg
faddp
in
in
jo
dec
hlt
scas
imul
mov
sub
mov
and
add
int
sbb
push
inc
xor
ret
inc
into
fsubrs
cmp
clc
mov
sbb
test
dec
cmp
pop
push
mov
js
ficomps
mov
rorb
repnz
inc
xorl
cmp
repz
push
jns
iret
mov
lea
dec
xchg
mov
xchg
or
js
movsl
jle
rcll
cmp
push
sbb
pop
ds
or
adc
fistpl
pop
lcall
addr16
pushf
mov
cmp
push
mov
sub
add
out
pop
movsl
sbb
mov
push
rol
arpl
shrb
xor
fcompl
lods
pushf
cmp
dec
lcall
rolb
fisubrs
mov
ficomps
xor
and
shl
mov
insb
inc
sub
push
mov
and
dec
xchg
mov
inc
pushf
cmp
jns
ret
add
xchg
lds
xor
in
loope
test
rorb
aas
or
gs
xor
lods
ficomps
mov
dec
stc
jp
add
pop
outsl
in
loop
pop
rcl
sarb
push
sbb
insl
inc
subb
cmp
mov
jmp
mov
jge
int
add
dec
dec
sbb
mov
out
test
jb
xchg
adc
or
pop
mov
push
xchg
call
and
push
addl
push
mov
sub
movsl
sahf
out
xor
mov
sbb
push
dec
xchg
inc
and
jge
cli
insb
out
xchg
mov
inc
in
sti
cwtl
icebp
sub
fsubrl
and
mov
gs
int3
add
das
rol
ret
movsb
shlb
call
inc
mov
mov
inc
es
fstpl
aam
imul
orb
into
addr16
arpl
icebp
xchg
clc
ffree
pop
mov
dec
ss
xor
sub
mov
movsl
sub
pushf
fdivrs
inc
pop
adc
fstl
hlt
out
inc
sbb
or
movsl
jle
test
cltd
adc
jnp
mov
lods
js
push
jb
or
pop
je
popf
in
xchg
arpl
dec
xchg
cmp
mov
insb
cmp
lods
insl
or
mov
loop
mov
jmp
pop
mov
movsb
pop
cmp
pop
mov
test
mov
lds
inc
int3
in
mov
fisubrs
mov
adc
sbb
jecxz
lods
pop
stos
test
and
sbb
jg
das
mov
scas
cmp
fldenv
lock
or
sbb
cmpl
jmp
in
stos
mov
sti
adc
jmp
addb
xchg
cmp
sbb
adc
mov
adc
xchg
sahf
dec
mov
mov
mov
ljmp
lret
aam
and
push
jns
cmp
xlat
filds
iret
enter
push
divb
add
fstp
mov
fs
lret
lret
aam
fimull
int3
lods
test
pop
scas
add
xchg
pop
sub
jl
ljmp
leave
mov
dec
inc
insb
push
sub
jle
call
cmp
push
call
popa
repz
pop
sbb
jmp
add
ret
cli
push
bound
mul
adc
ljmp
jecxz
jp
cmp
mov
jge
fimuls
negl
add
mov
cld
movsb
test
jno
inc
test
jns
setl
push
jmp
test
push
mov
or
sub
mov
ljmp
sub
push
dec
imul
or
mov
jecxz
cmp
sub
pop
xor
cmp
aam
in
cmp
mov
mov
cmp
jno
lods
cmp
push
fimuls
call
lods
push
push
mov
mov
sbb
jbe
cs
mov
repz
subb
outsl
cwtl
fiadds
xchg
loop
into
sahf
ss
mov
rclb
jnp
push
insl
lret
xor
out
je
mov
popa
cmp
sbb
fildll
daa
leave
ret
movl
sbb
imul
adc
and
mov
cmp
push
test
jae
dec
ljmp
add
test
shrl
dec
and
jns
adc
lods
xchg
iret
push
mull
popa
xlat
or
mov
add
movsl
imulb
jbe
inc
out
mov
or
jmp
cmc
cmpsb
push
lea
icebp
fsts
xchg
cmc
notl
dec
test
fdivr
pop
jbe
fs
sub
daa
push
pop
inc
imul
in
cmpsl
pop
ret
nop
jmp
mov
sub
inc
hlt
std
lock
cmp
jl
mov
cli
and
pushf
mov
in
loop
lods
lea
sahf
sbb
mov
sbb
jmp
into
pop
insb
xor
aad
movsb
jne
test
cmp
cmp
shrl
movsb
movsl
push
out
mov
push
fucomp
cltd
jno
mov
add
clc
xor
nop
cmpsb
mov
out
scas
int3
ljmp
mov
cltd
pop
out
xchg
mov
add
push
jle
and
fisubrl
daa
movsl
mov
or
cmp
ret
movsl
add
mov
add
popf
pop
lcall
leave
push
and
mov
pop
arpl
pop
out
sbb
and
xchg
int3
fnstenv
fs
jl
lret
scas
xor
jne
or
sbb
push
lds
mov
mov
outsl
lcall
and
aaa
mov
lock
and
and
dec
out
rorb
mov
aaa
data16
cli
and
imul
sub
hlt
jbe
shlb
std
push
push
fmul
faddp
cmp
or
pop
pop
mov
dec
fxch
adc
nop
dec
test
xor
inc
mov
ror
sbb
xchg
fcmove
mov
add
or
les
mov
xchg
dec
mov
repnz
xorl
mov
xor
out
or
arpl
in
in
div
sub
jb
jmp
xor
and
mov
or
test
mov
mov
sub
cmpsb
and
add
cmp
push
push
out
xlat
insb
cwtl
loopne
clc
xchg
push
push
icebp
adc
ret
add
xor
mov
pop
adc
mov
shlb
int3
lods
mov
xchg
jnp
call
push
push
cmp
jp
pop
pop
mov
movsb
jbe
imul
nop
data16
rol
clc
ret
pop
push
push
or
jmp
movsl
int3
outsl
push
mov
int3
and
adc
test
std
or
leave
xor
inc
push
jo
or
movsl
fs
mov
mov
sbb
add
xor
xlat
loope
in
cmpb
sub
jb
stos
mov
jbe
enter
stos
lea
sub
pop
pop
cmp
pusha
sbb
rorb
jge
push
rcl
idivl
mov
xchg
mov
in
movsl
ljmp
out
fsubs
mov
push
add
jno
in
or
int
dec
mov
lahf
and
fmull
pop
or
xchg
jae
lahf
fcomps
fimull
xchg
cmp
cld
repnz
cmp
ljmp
dec
jp
mov
push
lods
mov
enter
or
iret
jns
test
xchg
adc
or
int3
fdivrl
push
push
cmpsb
cwtl
add
inc
inc
inc
fcmovne
mov
cltd
push
xchg
test
lods
adc
inc
out
sbb
mov
mov
xor
jo
cmc
clc
ss
dec
and
cmc
nop
push
sub
mov
ret
movsl
in
mov
lds
insl
shr
pop
mov
dec
test
es
popf
push
movsb
push
sub
mov
mov
inc
in
sbb
and
test
mov
sbb
dec
cmp
in
xchg
scas
pop
mov
cld
add
cli
and
test
sub
push
and
mov
addl
repz
dec
add
cmp
dec
add
sbb
hlt
mov
ljmp
lea
imul
mov
jae
cs
fs
push
test
stos
insb
in
lds
sub
mov
or
pushf
mov
push
fs
out
inc
adc
ret
mov
xchg
mov
sub
mov
sbb
mov
shlb
lret
repz
loope
cmpsl
sti
or
repnz
push
lcall
cmp
iret
mov
int
jns
dec
gs
pop
push
and
push
pop
rolb
addr16
ret
jne
pop
jge
andb
cmc
dec
lahf
fbld
sbb
popa
ret
js
aas
outsb
test
cld
mov
sub
cmpsl
stos
lcall
testl
cmp
shlb
lea
dec
push
cmp
icebp
lcall
not
mov
fsubrs
cmp
shlb
arpl
or
enter
add
sub
hlt
mov
inc
xchg
push
mov
pop
pop
gs
jmp
mov
mov
sbb
mov
cmp
jl
xchg
ret
pop
push
push
jbe
xlat
push
push
adc
fidivs
lcall
pop
call
add
cli
xlat
loop
mov
cwtl
mov
stos
test
mov
pop
cmp
dec
repnz
enter
nop
mov
jge
sub
sub
push
fimull
inc
inc
in
push
dec
outsl
mov
inc
cmp
add
mov
sahf
bound
stos
dec
in
outsb
adc
fistps
adc
jge
stos
pop
pushf
ja
xchg
add
pop
call
xchg
sub
and
push
lcall
inc
add
pop
mov
sub
xchg
dec
push
stc
xchg
pushf
xchg
popa
fimuls
sbb
jle
cs
lcall
in
pop
fbstp
call
sub
xchg
lahf
mov
adc
data16
sbb
sbb
ljmp
dec
popf
xlat
negl
imul
push
xchg
sbb
je
aam
stos
int3
shll
push
pop
fwait
mov
pusha
das
test
pop
out
outsl
mov
jns
les
outsl
aad
das
xchg
out
data16
and
jns
fistl
or
pop
jg
xchg
mov
negl
pop
rolb
iret
andb
sbb
sub
daa
imul
add
cmp
jecxz
dec
in
in
jg
repz
mov
shrb
rorb
add
ja
dec
scas
add
cmpsb
add
out
sub
sub
cmp
popf
add
or
mov
mul
sub
fstpl
add
and
loop
mov
pusha
sti
js
mov
hlt
xchg
add
sub
add
mov
aaa
in
outsb
ret
push
pop
pop
jno
or
mov
rcrl
and
or
ljmp
sub
popa
inc
cmpsb
pushf
iret
popa
das
push
push
aas
into
mov
ret
xorl
scas
fwait
shll
sub
and
mov
shr
das
adc
lret
pop
cmp
lret
imul
cmp
or
aad
push
sub
lea
popf
or
inc
adc
inc
xchg
push
out
lods
xor
jecxz
xor
jmp
or
adc
or
imull
out
in
push
inc
sbb
popa
in
xchg
subb
inc
or
lea
loop
jg
addr16
add
hlt
arpl
lods
jge
in
test
cmp
push
lea
mov
sbb
movsb
dec
fildll
xor
add
js
daa
and
cltd
sbb
push
adc
scas
mov
iret
lods
cld
cmpsl
sbbb
test
inc
dec
sarl
bound
aas
test
fidivl
das
out
in
inc
xor
xchg
addr16
rdpmc
cwtl
cs
jg
imul
push
clc
ror
je
ss
insb
hlt
jge
stc
mov
andw
inc
xchg
xchg
inc
in
adc
aas
cmp
jno
cmp
fnstcw
pop
mov
in
and
lcall
popl
cmp
inc
test
shll
pushf
insl
inc
int
mov
cmpl
inc
xchg
sbbl
pop
xchg
or
dec
loope
adc
rcl
pop
push
mov
xor
and
pop
cs
or
mov
movsl
jg
icebp
add
xor
mov
push
lock
sti
mov
test
or
sbb
mov
xchg
adc
lods
add
test
pop
mov
cmpl
loopne
dec
leave
dec
and
mov
mov
xchg
or
roll
mov
sub
push
fdivs
rcll
sbb
popa
and
int3
pushf
hlt
xlat
nop
or
or
sub
inc
cs
add
add
pusha
rolb
outsl
mov
ret
sub
imul
rcrb
lds
cwtl
or
jne
lea
movsl
or
mov
jo
cld
push
js
frstor
out
xor
xor
loope
and
or
or
mov
dec
in
jns
adc
cmp
lret
hlt
mov
jne
mov
jl
mov
sub
rorb
xchg
push
in
pop
mov
ljmp
subl
hlt
fidivrs
fcmovnbe
mov
jb
or
push
imul
das
in
jne
out
jae
or
xlat
mov
loopne
inc
or
pop
fdivrl
divl
push
lods
outsl
imul
or
jg
lahf
jb
out
scas
jle
popa
imul
pusha
cli
mov
fwait
into
push
push
flds
daa
test
adc
shll
push
idivl
jp
int
in
or
dec
dec
mov
push
push
je
add
cmpsl
or
cwtl
loop
rolb
aad
xor
and
jo
cli
mov
mov
mov
imul
or
in
mov
fmull
pop
mov
dec
jns
and
das
jg
mov
jne
sub
push
mov
addr16
outsb
addr16
mov
movsb
aas
sbb
movl
or
push
pop
mov
sbb
xor
push
in
xorb
push
pop
jg
mov
cmp
test
jo
fcoms
mov
mov
nop
add
pop
sbb
sbb
lds
repnz
shlb
fdivrl
or
mov
rcrl
and
and
cmc
fistpll
add
ljmp
mov
jno
lds
push
jmp
jno
or
jmp
adc
mov
mov
outsb
jns
int
lea
fisttpll
call
not
mov
sbb
or
jne
in
adc
mov
ds
test
push
jge
mov
shlb
mov
inc
xchg
ret
push
jge
ljmp
mov
xlat
mov
dec
mov
jne
pop
dec
inc
loopne
add
icebp
mov
sub
repnz
insl
and
jnp
aam
fst
sub
arpl
inc
sbb
dec
inc
loopne
adc
addr16
adc
js
jo
pop
mov
xchg
lahf
in
mov
inc
int3
or
or
jno
loopne
into
sbb
fwait
add
mov
inc
mov
jo
mov
pop
xor
and
cmovo
jbe
mov
ds
mov
dec
lea
aas
hlt
imul
lods
daa
push
jle
fwait
mov
shrl
loopne
cmpsb
xor
mov
repz
or
sub
aas
enter
out
andl
js
xchg
dec
ret
push
in
adc
mov
mov
inc
and
js
out
mov
test
sbb
aad
mov
in
jge
pop
adcl
inc
mov
and
adc
cmpsb
pop
aam
ret
jmp
ss
pushf
in
jg
mov
dec
lret
dec
ja
sbb
enter
mov
pop
in
and
xlat
mov
mov
sub
lret
cmp
or
xchg
and
or
jecxz
icebp
popf
test
sub
hlt
je
xor
xor
push
sub
std
ss
lock
sub
jp
popa
xchg
mov
mov
int
stc
leave
idivb
scas
pushaw
push
lret
sub
add
shlb
cmpsb
pop
jl
data16
pop
jg
in
in
or
cmpsl
inc
icebp
add
sbb
or
push
sub
push
jle
icebp
shlb
in
adcl
movaps
dec
gs
shlb
xchg
mov
in
jb
paddusb
inc
pop
fadd
lods
in
jns
sahf
push
jb
in
xchg
scas
jb
in
sti
and
cmpsl
hlt
jl
pop
call
add
adc
or
inc
mov
jno
jge
jbe
add
test
mov
aas
cmp
xchg
mov
jmp
jle
pop
or
push
adc
or
add
das
push
pop
leave
and
mov
adc
fcmove
inc
aas
sbb
sub
fstps
and
xchg
out
mov
ljmp
pop
xchg
in
xor
call
xor
and
lea
dec
mov
adc
popf
mov
jo
cs
jne
mov
push
mov
ffreep
popf
mov
xor
mov
in
fcomip
mov
dec
or
or
mov
cs
es
jbe
xchg
pusha
jnp
rdtsc
dec
mov
jb
scas
aas
imul
int3
ret
div
daa
cwtl
sarl
push
mov
sub
pusha
or
jbe
movsl
sub
jecxz
jmp
insl
or
std
test
add
lods
jle
cmpsl
dec
mov
hlt
lret
sub
jae
jns
mov
loopne
into
fs
jg
jmp
in
sbb
popa
mov
inc
inc
std
jg
mov
fidivs
stos
inc
adc
cmc
fstl
push
cmc
push
add
add
out
insb
test
sbb
nop
pop
cmp
sub
aaa
cs
aad
mov
inc
inc
jb
jnp
fcomip
inc
cld
in
test
jno
mov
sub
push
jg,pn
in
in
jnp
xor
in
mov
mov
shrl
rcll
adc
addr16
dec
stos
je
xor
xchg
mov
mov
das
lret
idivl
mov
push
test
loope
les
xchg
in
cld
pop
sbb
add
jb
cmpb
cld
xor
mov
adc
jo
rolb
sbb
data16
jne
out
std
fisttpl
sbb
stos
xor
movsb
push
adc
mov
loope
stos
push
arpl
add
repz
inc
ja
pop
xchg
fidivl
rol
sbbl
sub
enter
cmp
mov
pop
inc
mov
out
cmp
sbb
or
sub
jmp
and
test
xchg
sub
and
out
data16
rcl
mov
out
sbbb
dec
or
lahf
arpl
or
cmp
xchg
cwtl
rcrl
lea
je
mov
leave
dec
sbb
add
or
ja
sbb
and
mov
cvttps2pi
aas
fdivrl
sbb
jbe
push
or
das
mov
mov
pop
lds
in
mov
in
mov
test
out
mov
ret
mov
jmp
xchg
icebp
popa
push
pop
mov
je
mov
shl
mull
xchg
and
add
xchg
adc
jbe
adc
mov
les
arpl
jge
in
loop
popa
mov
jge
adc
or
push
in
jne
dec
sub
ja
mov
mov
and
cmpsl
test
mov
add
push
mov
cmp
in
add
cwtl
inc
fdiv
std
movsb
lea
pop
xlat
push
addr16
pop
fisubs
dec
xchg
xchg
jge
jmp
dec
jle
push
rcl
pop
dec
fisttpll
adc
int3
pop
push
rorl
mov
mov
xor
pop
adc
mov
xchg
sbb
insl
leave
stos
sub
adc
dec
int3
pop
inc
and
push
sbb
or
ret
xchg
mov
test
sahf
or
xchg
popa
adc
adc
aas
ljmp
and
or
add
mov
out
ljmp
inc
pop
pop
mov
dec
ljmp
cwtl
xor
popa
sub
sbb
in
daa
add
mov
test
sti
push
pushf
aaa
cmc
push
or
dec
and
xchg
push
aam
cmp
xlat
jmp
lock
sub
add
loop
mov
decb
inc
fcompl
lret
jp
mov
inc
push
sub
outsl
in
incl
add
dec
imul
xor
outsl
stc
lea
lea
jnp
insw
or
push
dec
data16
fldenv
out
add
mov
xlat
into
xchg
dec
cs
xlat
ret
daa
imul
out
mov
mov
inc
cmp
repz
jmp
dec
sub
mov
mov
adc
mov
int3
scas
and
mov
mov
pusha
fsubrl
jg
and
or
movsb
and
add
daa
mulb
clc
out
pop
mov
out
scas
insb
and
push
shl
or
mov
dec
xchg
hlt
add
aam
jp
sub
gs
mov
movsl
dec
out
dec
lcall
dec
push
lahf
and
pushf
adc
test
lahf
addr16
push
iret
cld
xchg
or
dec
jbe
mov
and
cld
pop
adc
push
push
sbb
movsb
push
int
add
or
clc
xchg
add
mov
dec
in
insb
je
pop
push
cli
push
and
loopne
add
inc
xchg
sbb
pop
adc
or
das
sbbb
insb
mov
push
mov
or
lcall
sbbl
jl
test
xorl
test
add
mov
test
jg
fstpl
or
xchg
ret
jge
repz
movsb
pusha
fldenv
test
and
out
push
sbb
rcll
lret
sarl
repnz
dec
xchg
outsb
test
inc
xor
dec
outsb
loopne
sbb
xchg
adc
scas
dec
pop
dec
mov
xchg
jne
lahf
jmp
add
cmp
mov
insl
dec
xchg
jnp
and
cmp
lret
xorb
or
push
mov
lods
sbb
mov
sbb
mov
mov
movsb
or
mov
fidivrl
dec
sbb
mov
pop
xchg
adc
cmp
rorl
add
fwait
leave
mov
lcall
out
shlb
cs
sbb
negl
mov
sar
sbb
jbe
ja
pop
cmpsb
or
mov
cmpsb
cld
loopne
mov
out
or
loope
jmp
sti
and
std
add
inc
jle
mul
testl
aad
inc
js
inc
mov
test
imul
mov
mov
les
stc
je
xchg
call
xor
icebp
jnp
mov
sbb
mov
and
in
pop
pop
sbb
popa
dec
and
test
nop
sbb
cmc
and
adc
mov
out
dec
stos
fldl
jno
dec
mov
push
es
mov
bound
stos
jne
hlt
bound
add
idivb
jne
cmp
test
add
dec
cmpsb
imul
pop
popf
movsl
lcall
ficoms
out
and
int
push
fnstcw
dec
loope
nop
jle
in
inc
sti
sti
xchg
enter
add
jbe
dec
mov
pop
rclb
test
pop
cld
inc
or
pop
ja
call
mov
lock
fistl
mov
mov
jp
push
push
sarb
or
mov
sbb
pop
cmpsl
mov
gs
dec
inc
push
pop
adc
jp
xchg
push
test
jno
adcl
jp
ja
stc
mov
fs
add
ret
sbbl
cld
data16
and
push
popa
int3
adc
mov
cmp
shll
xchg
dec
popa
and
or
pop
aad
sub
rorb
mulb
fndisi(8087
or
cli
jl
sbbl
movsb
test
mov
add
jno
mov
insb
insb
jbe
scas
cltd
sti
lahf
push
cltd
add
int
popf
or
pop
or
lret
daa
pop
mov
sub
xchg
pop
ljmp
push
adc
xchg
stc
or
pushf
jl,pn
jl
scas
cmpb
pop
xchg
aam
icebp
rcr
sarb
xor
xchg
ss
je
dec
shlb
lods
inc
adc
lea
adc
pop
xor
xor
mov
mov
fimull
and
lahf
lods
movsl
mov
and
push
ficoms
xlat
xor
xor
push
dec
jbe
sahf
adc
push
adc
inc
mov
mov
sbb
sbb
xchg
cld
es
cltd
je
in
jae
sub
jae
xor
jns
or
fnstcw
es
inc
popf
loopne
push
in
mov
jl
mov
inc
dec
push
in
pusha
ljmp
mov
outsl
mov
dec
sub
insb
xchg
and
lret
psubb
std
movd
fwait
mov
mov
cmp
adc
and
adc
ret
sti
gs
lahf
dec
adc
pcmpgtb
dec
ficompl
ljmp
xchg
mov
outsb
mov
inc
inc
addb
sti
mov
jmp
xchg
add
or
fs
sbb
dec
lea
sbb
mov
jmp
sarl
inc
rclb
dec
sahf
jle
push
mov
push
fsubl
push
pop
xchg
mov
roll
jmp
movsb
in
mov
rolb
test
clc
scas
stc
jg
insl
sarl
mov
jle
adc
int
or
adcl
add
stos
loope
int
rcr
ret
test
push
ret
pusha
xorb
out
cli
push
je
dec
mov
orl
pop
mov
push
daa
xchg
jg
outsb
cmp
fs
dec
fsubs
push
mov
pop
mov
push
sbb
das
sbb
inc
lret
mov
mov
roll
std
out
push
hlt
lods
int3
pop
outsl
xlat
and
sbb
and
jne
xchg
sub
ror
or
lcall
mov
cmp
xorl
push
lods
xchg
stos
test
mov
scas
cmpsl
sbb
add
or
gs
mov
mov
scas
clc
dec
dec
mov
cmp
jns
mov
icebp
inc
dec
out
xchg
xchg
sti
ja
clc
in
lods
inc
pop
ja
gs
repz
mov
add
mov
into
pusha
xchg
mov
iret
mov
hlt
adc
inc
push
inc
ja
inc
add
push
xchg
adc
lods
push
sti
dec
or
aam
push
add
adc
stos
adc
test
rcl
sbb
jne
stos
or
pop
jg
imul
out
jl
xlat
js
sahf
fcom
sti
mov
out
xchg
dec
mov
xchg
decl
mov
daa
dec
adc
mov
je
icebp
cmp
xor
inc
shlb
mov
cmc
iret
in
push
add
test
sbb
inc
mov
inc
adc
into
sbb
mov
insb
push
mov
push
adc
in
add
xrelease
mov
ja
dec
xchg
hlt
xchg
dec
inc
repz
loopne
inc
dec
sub
xor
popf
sub
out
mov
xor
jnp
dec
mov
lret
jns
push
and
js
notl
push
out
loope
lea
mov
cmpsb
je
outsl
outsb
mov
std
jp
and
push
mov
inc
cmp
movl
dec
shlb
es
jns
pop
add
addr16
xor
cli
sub
in
cmp
fcoml
movsb
cmp
xchg
xchg
mov
dec
shrl
mov
dec
iret
out
rorb
pop
andb
fiadds
adc
addl
lcall
jg,pt
je
les
imull
out
push
notb
pop
into
icebp
add
in
aam
pop
push
jge
mov
loopne
repz
insl
dec
rcrb
test
add
out
push
stos
rcrl
movsb
xchg
cmpsb
lret
and
fdivl
adc
ljmp
adc
xchg
orb
push
out
cmpsl
out
out
mov
sbb
std
ljmp
sub
jge
jno
rcrl
mov
ljmp
cmp
inc
aam
cmc
fsubp
loopne
iret
jle
mov
mov
cmpsl
int3
leavew
cmc
sbb
push
in
js
push
jnp
mov
in
xor
loope
cld
dec
cli
das
xchg
sub
sbb
ja
push
imul
pushf
dec
fsubl
call
dec
in
add
shlb
pop
subl
in
sub
in
mov
xor
lods
jne
push
cmp
jne
push
pushf
mov
sub
push
or
data16
cmp
das
adc
mov
mov
push
cmp
jno
adc
xlat
out
mov
inc
cli
data16
lcall
jge
fcompl
out
sub
fnstcw
daa
pop
sub
sbb
ja
and
imul
shlb
cld
lret
pop
scas
cmpb
aam
cwtl
xchg
mov
xor
fdiv
or
imul
add
mov
or
es
loopne
push
adc
and
stos
sbb
lock
scas
shll
jmp
push
fimull
insb
repz
xor
and
test
ror
rcrb
insl
fs
mov
pop
add
ss
aam
stos
shlb
sub
mov
fcmovnu
mov
mov
fsub
aam
pop
cli
mov
inc
fisubs
subb
fdivs
stc
rolb
loope
jg
pop
lds
sub
ljmp
cmp
adc
mov
lcall
push
outsl
xor
andl
lcall
ret
inc
testl
add
test
fsubl
iret
and
icebp
call
or
rcrl
les
push
fs
clc
rcrb
xor
or
nop
add
push
stos
ljmp
jb
push
xlat
xchg
insl
mov
sbb
arpl
push
sar
add
inc
mov
and
js
lcall
std
jmp
inc
es
lahf
or
dec
jbe
cmp
pop
out
xlat
jne
iret
into
or
test
mov
shrl
jmp
add
pop
and
xchg
or
dec
cmpsl
rcr
stos
lock
dec
pop
adcb
dec
stc
decl
pushf
addr16
mov
jle
jmp
stos
and
xlat
mov
imul
imul
push
dec
sarb
mov
lcall
imul
mov
pusha
adc
or
xchg
pop
mov
jnp
xchg
mov
ret
ds
mov
sti
std
fsubs
xchg
sub
dec
sahf
scas
fists
ret
adc
pop
push
fdivrl
mov
loopne
mov
cwtl
fcompl
jb
adc
jg
cli
sti
ss
or
fimuls
jl
dec
dec
sub
sbb
add
enter
jb
cmp
ja
es
mov
cld
mov
enter
or
cmc
ds
dec
inc
insl
jnp
pop
xor
cmpsb
xor
test
sub
ret
jl
iret
sbb
push
mov
jg
mov
mov
outsl
inc
nop
xor
daa
std
lock
leave
inc
push
mov
or
dec
inc
ds
incb
pop
in
dec
sbb
jne
xor
cmpb
xchg
or
add
add
movsl
loope
loop
es
pop
pop
pop
out
stos
insl
je
cmp
lcall
sbb
jmp
aam
xchg
mov
mov
in
data16
mov
rolb
arpl
jb
fmull
inc
test
cmpsl
or
add
sbbl
lret
mov
xchg
mov
jle
jecxz
adc
nop
inc
adc
or
movsb
popf
jmp
stc
cltd
mov
jmp
loope
jge
push
test
iret
or
sarl
loopne
cmc
add
ret
push
cmpb
out
xor
ds
imul
xor
ret
xchg
fimull
pop
mov
mov
fnstsw
dec
and
aaa
dec
pop
loopne,pn
jne
push
shlb
inc
int
loop
cmp
jne
sub
mov
test
or
std
lea
repnz
test
call
test
push
daa
popf
mov
cmpsb
mull
sbb
inc
notb
call
or
cmp
gs
add
mov
fdivrs
pop
sbb
rcl
cmp
shl
sbbl
cmp
inc
lret
addb
jmp
insl
or
sarb
leave
daa
sub
js
inc
ffree
cmp
icebp
pusha
xchg
pop
test
jmp
mov
mov
stos
std
add
mov
pop
fstl
inc
mov
push
out
push
jae
cli
inc
cld
jo
lcall
stos
jae
dec
ss
insl
cmpsb
jle
inc
inc
mov
jo
xchg
test
jo
cmpsl
cwtl
push
je
adc
xor
jecxz
fsubrs
mov
sub
aaa
sbb
inc
repnz
and
insb
negl
mov
xchg
sub
jg
sbb
loop
push
arpl
lods
in
out
sbb
pop
sbb
xor
inc
xor
mov
popa
lds
jmp
adc
movsb
pop
mov
mov
inc
cmc
cwtl
das
sbb
xor
dec
outsl
imul
dec
sub
bnd
stos
jmp
int
mov
rcr
xchg
daa
pop
sbb
fdivs
jecxz
jno
dec
lahf
xor
push
or
cltd
out
push
pushf
jg
dec
jecxz
lods
incl
pop
mov
sahf
ret
xchg
xchg
stc
jbe
popa
add
jnp
sub
arpl
and
pcmpeqd
fidivrl
call
daa
test
xchg
xor
sbb
and
ds
jae
push
xchg
xchg
sahf
mov
and
and
or
out
xor
divl
sub
nop
push
dec
push
pop
in
xchg
data16
fwait
jnp
dec
inc
push
aas
mov
leave
orb
sub
fnsave
mov
and
push
rorb
inc
cs
mov
in
xchg
mov
xchg
shl
stc
adc
mov
test
xor
movl
jmp
outsl
ja
cltd
sub
xchg
pushl
scas
mov
cli
jle
add
adc
movb
fs
or
and
or
xchg
rolb
imul
mov
mov
xchg
cmpsb
mov
xor
cmp
loope
sub
or
add
repnz
or
repz
inc
movsl
pushf
push
lcall
xchg
pop
dec
xchg
xchg
movsl
ja
call
and
movsb
push
retw
aas
in
movsl
inc
shl
and
adc
dec
sub
lcall
lahf
sub
and
jne
lea
leave
out
push
cmp
mov
rcrl
push
xor
mov
mov
sub
dec
mov
cmp
je
andb
mov
fimull
stos
dec
hlt
pop
cmpsl
fnstsw
mov
int
xchg
test
je
mov
dec
ss
add
jno
cmp
mov
leave
outsb
and
cwtl
sbb
aam
pop
or
mov
test
adc
rorl
outsl
xor
jb
sub
movsl
adc
lret
mov
inc
pop
cmp
leave
rcrl
or
add
fnstenv
aaa
out
cld
aaa
cmc
mov
sbb
data16
pusha
or
ficompl
dec
push
sbb
out
inc
nop
daa
jle
lret
out
repz
add
xchg
scas
inc
cmp
lds
rorl
enter
mov
push
mov
push
cltd
ffree
inc
mov
inc
in
pop
pusha
xchg
mov
dec
pop
jl
inc
xor
push
dec
aaa
lods
jo
in
icebp
or
and
sub
cs
dec
cmp
cmp
ja
mov
ret
dec
sbb
adc
fidivs
sti
add
push
or
shrb
sbb
xchg
ret
mov
and
xchg
in
aaa
or
je
enter
xchg
sbb
out
pop
push
mov
lahf
insl
cmpl
pop
cmp
push
scas
mov
stos
pop
xchg
idivb
in
cmpsl
inc
and
push
xor
mov
dec
xchg
vcvtss2si
and
mov
xlat
push
lea
pop
pop
sarl
dec
movsb
mov
add
pop
cmp
fcoml
pop
adc
subl
call
xlat
in
jae
jae
add
insb
sbb
xorl
pushf
mov
aad
aam
dec
add
pushf
mov
sub
push
cld
push
jg
sbb
shlb
dec
in
jecxz
sub
and
push
adcl
pushf
adc
mov
aas
in
imul
xor
sub
les
nop
xchg
fnstsw
out
mov
or
scas
ljmp
xchg
scas
xchg
push
loopne
inc
jno
sub
pop
icebp
push
movsb
out
push
test
jecxz
andb
cwtl
fldl
fwait
aas
push
xlat
scas
pushf
add
imul
jnp
adc
add
fcmovne
cmc
sar
das
fsts
nop
ja
stc
adc
je
mull
sub
loope
js
cmp
hlt
pop
mov
jo
mov
out
sbb
dec
cmp
sbb
mov
mov
mov
xchg
jl
ret
iret
pusha
cmp
js
pushf
or
mov
fcmovnu
inc
fisttpll
into
xchg
sub
rol
or
xchg
push
cmp
arpl
cmpsl
sub
test
push
addr16
sbb
xchg
cli
je
fists
fists
cwtl
insl
adc
or
push
mov
pop
mov
in
mov
cld
mov
sub
outsl
nop
cmpsb
cmpsl
stos
pop
out
dec
sbb
lea
jo
lret
xchg
add
mov
fsubrl
addl
rcll
mov
aaa
lock
push
add
jno
loopne
push
jp
mov
nop
pop
roll
out
and
add
sub
push
xchg
dec
dec
mov
lods
xchg
push
lock
inc
pusha
ss
lret
mov
mov
cltd
jne
into
push
xlat
loop
push
or
ret
lcall
icebp
push
adc
sbb
xor
arpl
repnz
inc
push
aas
hlt
xchg
into
es
pop
add
hlt
idiv
in
call
addr16
xchg
xchg
sarl
stos
xor
pop
and
adc
out
fs
cmp
rorl
fcoml
sbb
adc
mov
push
xor
inc
int3
out
jae
cmp
shl
jge
dec
out
add
cmp
adc
and
cmp
push
and
test
fnsave
lods
stos
ret
or
popf
gs
out
pushf
mov
je
mov
cmp
outsl
in
int3
stos
adcl
mov
mov
ret
jae
cmpsb
pusha
fidivl
bound
jmp
nop
adc
inc
jmp
xchg
push
pop
inc
rcl
xchg
repz
repnz
xor
mov
inc
test
inc
add
cmp
into
sub
cwtl
aad
movsb
rorb
adc
adc
sbb
mov
push
into
mov
mov
dec
cmp
movsl
or
aam
mov
dec
and
pop
stos
fistps
jl,pt
imul
ds
repz
sbbb
sbb
mov
and
inc
loop
mov
mov
imul
and
loope
rcll
lds
xor
push
mov
xchg
push
cmp
into
mov
xor
sbb
dec
sub
cmp
and
jmp
xchg
push
clc
jnp
lds
xor
cwtl
dec
sub
imul
sub
pushf
mov
sbb
addps
fiaddl
and
and
and
repz
imul
mov
sbb
push
dec
xor
lea
mov
mov
xor
ja
mov
push
aas
fdivrs
test
dec
mov
ret
shr
bound
jmp
cmpsl
xchg
fs
or
fnsave
sub
dec
fs
push
ja
sub
mov
adc
sbb
bound
push
rcll
ret
dec
inc
loopne
jbe
sbb
adc
repnz
lods
inc
test
sbb
inc
pop
cli
and
jo
clc
es
sbb
sbb
divb
popf
popf
rclb
jmp
test
mov
xchg
mov
lcall
mov
mov
xor
into
fwait
pop
mov
xchg
adc
mov
pop
pop
test
or
jmp
mov
sub
ficompl
sub
push
pop
bound
and
scas
psrlq
repz
cmp
xchg
push
add
fsubrp
push
cmp
iret
dec
aam
in
or
stos
jae
ret
mov
cmpsl
pop
mov
mov
sti
test
pop
push
mov
jecxz
adc
mov
pop
dec
sub
mov
pop
mov
popf
call
jbe
jmp
xchg
sub
jmp
popf
addr16
xor
int
cmpsl
add
ds
lea
xchg
or
inc
push
pusha
test
mov
xor
push
pop
lcall
xor
jg
sub
pusha
lcall
stc
pop
push
inc
cmpsb
stc
ja
cltd
adc
mov
xchg
push
and
test
aam
out
pusha
in
xchg
loop
or
xor
push
adc
das
pop
xlat
mov
cmpsb
xor
cmpl
sub
inc
mov
out
mov
testl
dec
dec
icebp
negl
stos
push
js
mov
test
adc
inc
cmp
push
mov
push
cmp
pusha
cltd
fwait
xchg
xor
and
and
dec
sub
ret
xchg
sub
out
pop
insb
pop
std
cmpsl
bound
pop
call
and
rcr
mov
mov
push
shrl
inc
ret
loop
pop
shrl
add
fsubl
aad
mov
shlb
adc
or
mov
jns
mov
in
jno
adc
mov
nop
stc
mov
mov
leave
adc
xor
pop
neg
push
ljmp
fsubs
out
mov
pop
mov
jns
cmp
nop
jle
xsaves
dec
inc
fs
adc
add
scas
pop
mull
mov
add
popa
int
pop
icebp
ficoml
rclb
xchg
push
or
orl
inc
jno
add
pushf
sbb
xor
ret
mov
mov
add
lods
arpl
popf
decb
push
inc
dec
dec
rol
cmp
iret
out
xor
push
ss
mov
sahf
inc
lods
mov
adc
inc
inc
add
ja
pushf
out
loopne
aaa
jnp
cltd
inc
push
sub
rep
push
mov
ffreep
push
xchg
mov
aaa
sub
je
inc
sub
push
and
popa
dec
or
mov
mov
test
cmp
adc
xchg
inc
push
mov
test
mov
sbb
icebp
into
adcb
pop
mov
mov
sbb
ja
adc
adc
loopne
jg
in
bound
stos
shll
inc
aas
js
mov
call
mov
cvtdq2ps
sub
dec
jne
jge
arpl
mov
popf
bnd
add
outsb
sub
pop
fwait
adc
in
mov
fidivrs
scas
inc
push
xor
pusha
dec
movsl
pop
push
xchg
sahf
shll
pushf
movsb
dec
cli
notb
adc
xchg
jecxz
xchg
sub
mov
sbb
pop
push
cld
sub
cltd
inc
jl
xor
cli
push
fdivr
jg
out
fnop
in
les
sbb
add
xchg
sbb
adcl
mov
das
cmp
or
mov
test
jns
add
pop
sbb
repnz
les
mov
sub
lods
xor
out
test
aas
cmp
mov
and
lds
inc
mov
js
addr16
movsl
es
stos
orl
push
aam
xor
push
popf
pop
inc
movsb
call
sbb
fstp
jmp
sub
call
lret
dec
pop
push
and
mov
jge
fildll
add
fimull
and
cmp
cmp
add
mov
ja
fdivl
rclb
add
repnz
pcmpeqw
cmovl
mov
test
int
add
or
cmpb
cli
or
out
pop
cmpsl
daa
fs
pop
jns
fsubs
repnz
sbb
lret
xor
repnz
repnz
lcall
mov
mov
imul
adc
fistpll
mov
in
mov
pop
sbb
imul
hlt
cli
jp
daa
sbb
out
negb
insb
cmp
pop
cmp
sbb
ror
pushf
lock
cmpsb
pop
sub
test
rcr
pop
fstl
enter
mov
xchg
icebp
jb
cmp
shl
xlat
movsb
test
adc
add
lock
shll
and
mov
mov
adc
js
in
adc
ror
scas
loope
sbbl
dec
fistl
shll
dec
out
sub
jge
push
push
cmp
and
xchg
jb
xor
mov
jge
jo
pop
inc
xor
sub
mov
cmp
pop
mov
loop
ret
or
mov
jmp
cmp
xchg
push
iret
arpl
or
push
cmp
cmpsl
mov
loope
test
in
push
sub
test
iret
sti
or
cmp
xor
cmpsl
pop
mov
fs
cmc
stos
adc
inc
test
scas
mov
mov
mov
aad
pop
sub
pop
ret
or
int
sub
xor
loopne
xor
or
out
clc
ret
xor
fbstp
xchg
ret
xchg
fs
push
pop
or
fsqrt
sbb
stos
cwtl
jae
lods
pop
push
xlat
and
dec
and
push
enter
insb
scas
inc
stos
out
dec
jae
lcall
mov
add
mov
aam
adc
mov
mov
pop
mov
outsl
and
sub
mov
cwtl
xor
cmp
pop
pop
int
jbe
popf
push
mov
sbb
sti
rorl
movsb
mov
clc
push
mov
sub
push
int3
cmp
insl
addr16
ss
cmc
jae
mov
lret
mov
iret
fwait
jne
mulb
xor
or
stos
jns
test
mov
in
fstps
dec
enter
mov
mov
out
xchg
aad
jge
outsl
repnz
cwtl
and
inc
push
icebp
scas
hlt
jge
lods
mov
xor
adc
lock
and
sbb
mov
popf
dec
push
iret
pop
dec
sbb
gs
sbb
enter
jb
pushf
dec
sahf
adc
xchg
sub
dec
xchg
iret
cld
mul
into
push
xchg
push
mov
lea
push
nop
int
cltd
mov
scas
sahf
sbb
jecxz
lcall
outsb
xchg
repz
stc
stc
movsl
and
and
fcmove
cmp
mov
addr16
sub
je
cwtl
mov
cmpl
stc
idivb
push
jns
daa
cmpl
gs
sub
sbb
mov
mov
loop
movsl
jo
gs
out
mov
sbb
rcll
push
push
ffreep
iret
test
fisttps
and
movsl
mov
mov
stos
mov
sub
mov
inc
xchg
stos
je,pn
and
mov
and
cmp
dec
in
pop
shrl
inc
dec
into
pop
ljmp
jne
lret
in
adc
sbb
xchg
adc
insb
add
add
inc
mov
push
outsb
cld
je
xor
pusha
jns
mov
pop
cltd
cmpsl
ss
jmp
addl
lods
mov
fisttps
inc
mov
imul
lret
nop
fmuls
mov
jge
cli
lret
xchg
insb
mov
popf
mov
xchg
inc
not
movsb
mov
inc
das
dec
shlb
sub
lcall
mov
xor
ds
inc
mov
push
xorl
shll
fs
ret
into
test
les
sbb
mov
cmpsl
scas
std
push
fildll
push
aaa
sub
xor
stos
mov
adc
fsin
shll
fsubrp
pop
mov
jmp
loope
aad
in
fbstp
adc
mov
dec
push
lods
push
cltd
sbbl
dec
mov
sahf
dec
lahf
xor
adc
mov
cmp
ret
mov
sbb
outsl
dec
cmp
mov
jb
push
out
pusha
lret
add
xor
ja
inc
jne
js
aam
sarb
test
jns
lds
shlb
rolb
sbb
arpl
cmp
testb
scas
sbb
sbb
call
mov
xlat
xchg
fs
movl
call
or
jl
or
inc
subl
mov
das
into
push
xor
test
dec
and
push
inc
jno
mov
jae
outsb
lods
imul
adc
loope
and
in
mov
xor
testl
or
repnz
xor
ret
add
lods
popf
rorl
cmp
cltd
enter
and
or
push
scas
mov
aaa
xor
lods
adc
pop
mov
idiv
cmpl
and
cmc
sbb
js
sub
scas
dec
push
cld
cmp
xor
mov
das
mov
arpl
mov
push
test
cmpsl
dec
sbb
outsb
cmpsb
dec
orb
xchg
xor
push
cli
test
inc
cld
fwait
push
push
xchg
inc
imull
jge
xor
pop
push
push
xor
int3
lahf
scas
push
sub
cltd
jp
sub
xor
test
cmp
imul
xchg
enter
mov
ja
rcl
insb
fcoms
scas
sbb
xchg
push
lea
call
cmp
std
loopne
add
jle
xchg
fdivrl
movsb
xor
push
xor
std
imul
aam
push
lret
stos
and
lahf
and
inc
adc
push
inc
popf
repnz
lods
add
jmp
test
jns
jb
rcll
icebp
sbb
clc
and
pop
and
pop
loope
dec
pminsw
pusha
ss
pop
push
mov
add
outsb
cmp
ss
aam
fcmovnb
leave
push
out
call
out
jae
loope
dec
popa
hlt
pusha
or
xor
lea
scas
xchg
push
xorl
out
dec
gs
addr16
add
mov
mov
sbb
fstl
dec
pop
adc
push
push
add
stos
sbb
mov
mov
add
mov
pop
ja
lds
les
roll
inc
icebp
ret
cmp
xchg
mov
imul
or
inc
mov
dec
and
loope
testb
aaa
xchg
mov
imul
divl
xorb
mov
popa
mov
ljmp
idivl
repz
xor
in
pop
xor
lcall
jle
push
cltd
gs
xchg
mov
out
cmpsl
pop
mov
pop
mov
sub
outsb
sub
mov
ja
pushf
cmc
pushf
pushf
push
pop
push
daa
hlt
xchg
sbb
xchg
cmp
out
mov
data16
jg
ljmp
test
gs
push
mov
gs
inc
ret
sti
push
outsb
lret
adc
jmp
mov
mov
inc
mov
xchg
push
inc
xchg
cmpsl
jae
jno
add
xchg
mov
pop
shlb
sub
sub
mov
mov
xlat
enter
insl
sahf
shll
xor
int
mov
jp
lods
imul
shlb
jae
lret
push
xor
gs
fnstsw
push
imul
xor
xor
mov
mulb
mov
xor
xor
loope
mov
fnstenv
ds
push
push
push
mov
push
jnp
mov
out
cmpsl
xchg
lods
push
inc
gs
fs
and
frstor
divb
shll
nop
data16
iret
out
pushf
jg
sbb
stos
lds
inc
cmpsl
int3
lds
cltd
icebp
lock
popa
jg
sub
jne
xor
icebp
in
lds
cli
imul
pop
iret
fwait
jl
andb
fsub
divl
mov
sbb
sbb
inc
daa
push
notl
jo
dec
xor
dec
test
fisubs
nop
sbbl
sbb
cmp
pop
ja
daa
insl
jbe
sbb
js
scas
xlat
and
test
shlb
inc
lods
jns
or
sbb
xor
xchg
xor
push
adc
icebp
dec
inc
push
inc
icebp
int3
es
sbb
dec
fstpt
dec
ss
or
and
mulb
xor
mov
arpl
loope
fiaddl
test
dec
push
fwait
and
push
es
mov
cmpsl
jnp
stc
mov
les
in
ror
call
sbb
or
cmp
cmp
out
stos
mov
add
xor
pop
sarl
lret
inc
lea
out
xchg
sub
cmp
fcmovbe
xchg
or
lods
out
lret
xor
movsl
imul
loopne
inc
jecxz
jecxz
and
jmp
fdivp
rorl
out
iret
es
push
int3
pop
sub
cs
xchg
jg
xor
inc
adc
xchg
lods
inc
test
xchg
push
cmp
xlat
jae
pusha
mov
adc
xor
or
cs
gs
jp
into
test
jne
data16
daa
es
out
mov
les
inc
mov
enter
xor
aam
jae
jbe
cmp
jo
mov
or
mov
dec
fnsave
jb
js,pn
jb
stc
adc
fsubs
cmp
in
cmc
jbe
mov
mov
cmp
mov
mov
fistps
shlb
pop
sahf
sti
xchg
xchg
dec
mov
loop
jo
or
shll
ret
lds
outsl
shlb
push
dec
imul
jg
into
daa
add
sahf
outsl
xor
xor
call
cmc
test
pop
dec
push
xchg
dec
and
jae
iret
pop
mov
sbbl
fisubs
mov
cmpsb
repz
inc
inc
out
sbb
cmp
pop
mov
pop
int3
mov
sbb
cmpsl
fs
fs
sti
adc
mull
xor
mov
mov
jae
out
shlb
insl
out
lahf
dec
cmpsl
imul
xchg
aas
adc
cltd
push
mov
iret
fsubrs
es
sub
dec
dec
dec
pusha
call
inc
pop
cs
lahf
xchg
iret
xchg
dec
add
outsl
sbb
xor
dec
sub
adc
dec
adc
inc
mov
scas
sbb
mov
enter
stos
or
mov
insb
push
loopne
mov
leave
pop
xor
into
push
je
mov
dec
pop
pushf
mov
in
add
push
inc
dec
xchg
mov
pop
mov
dec
out
test
scas
enter
mov
adc
lret
add
je
lods
scas
sub
push
insl
aaa
mov
aas
into
mov
lods
outsl
notl
dec
xor
inc
gs
sub
push
leave
cs
adc
popa
inc
hlt
xor
pop
mov
sbb
scas
adc
lock
cli
popa
sbb
cmp
inc
stos
movsl
outsb
mov
loope
aas
cmpsl
push
add
cmp
dec
cmp
subb
dec
lret
insb
sar
in
cmp
cs
adc
iret
xlat
sbbl
les
subl
movsl
sub
cs
ja
test
xor
stc
jge
push
stos
jno
jae
loopne
and
std
push
out
add
call
push
stc
inc
fstpl
fcom
bound
out
js
sahf
push
in
jge
mov
mov
js
dec
inc
mov
addb
adcb
into
jne
adc
mov
cmc
sub
lea
sub
cmp
sbb
arpl
cmp
push
sub
xor
shlb
mov
insl
repnz
mov
mov
push
add
mov
dec
cmp
jle
jp
sub
mov
push
pop
pop
cmpsl
jge
int3
xor
xor
xchg
lods
pop
xchg
aaa
idivl
mov
mov
xchg
packuswb
js
loopne
repz
adc
cmp
fdivl
or
orl
imul
sub
test
lds
sbb
or
pop
jo
mov
or
addr16
into
inc
test
mov
repnz
jb
push
std
out
test
pop
push
iret
xchg
pop
xchg
xor
pop
mov
cmpsb
cli
adc
pop
mov
int
lea
mov
out
nop
imul
popa
jne
jns
lock
lock
mov
push
add
mov
mov
lcall
pop
roll
xchg
cli
mov
lret
xchg
lret
in
js
mov
push
lea
mov
xchg
mov
or
mov
lahf
mov
inc
xor
jge
xchg
mov
mov
jbe
add
inc
jl
pop
daa
ret
pop
pop
lahf
xor
data16
inc
data16
inc
enter
arpl
sub
sbb
xchg
fldt
popa
in
dec
rclb
add
dec
incl
sbb
rcrl
sbb
imul
stc
addr16
out
push
inc
fadd
out
stc
cli
leave
das
js
cmp
imul
xchg
loope
test
shl
das
imul
mov
add
jnp
cmp
not
or
lds
adc
add
popf
cltd
mov
and
jo
mov
call
pusha
sbb
mov
jp
cmpl
or
pop
jmp
xchg
js
aas
cwtl
push
xchg
inc
gs
push
pop
js
push
mov
sub
cmp
pop
leave
sbb
fucomi
add
mov
add
jg
enter
mov
addr16
dec
in
or
push
sbb
lds
std
cli
cmp
popa
or
cmp
out
outsb
xchg
cs
mov
imul
data16
or
pop
jb
mov
and
or
lock
jmp
testb
xchg
addb
loop
ds
ss
pushl
fcmovnbe
jle
and
sbb
test
sbb
mov
jp
stos
mov
aaa
mov
add
mov
mov
pop
and
lahf
nop
fcomps
iret
fadd
mov
repz
xadd
mov
adc
dec
mov
add
mov
xchg
mov
imul
add
cld
jb
jmp
jne
scas
mov
outsl
adc
sub
imul
inc
mov
jbe
js
movsb
divb
outsb
je
sub
pushf
adcb
insl
sub
ljmp
mov
jp
test
adc
idivl
mov
ret
push
out
stos
orb
inc
xchg
dec
les
push
inc
insb
loopne
or
jbe
mov
shlb
popf
jnp
add
pop
dec
and
fbld
or
aam
jmp
xchg
sub
idivl
inc
insb
daa
dec
fists
pop
fimull
jo
sub
xchg
sub
fidivl
fcoml
inc
pushf
div
jo
inc
dec
fldl
mov
xor
add
mov
mov
pop
std
fdivr
ret
leave
hlt
sub
jg
subb
jmp
mov
or
add
mov
push
iret
test
leave
sbb
add
arpl
out
or
and
pop
movsl
cwtl
xchg
fyl2xp1
cmp
clc
cld
sarb
outsl
xlat
ljmp
adc
pop
out
add
adc
xchg
call
xchg
es
adc
add
movsb
fisttpll
mov
mov
jecxz
jae
imul
xchg
addb
push
sti
mov
mov
adc
sbbl
sbb
push
pop
iret
ds
push
ljmp
nop
sub
sbb
cmc
mov
popf
aas
rorb
mov
fwait
xor
cmp
cwtl
adc
dec
push
xor
mov
jo
cmc
shll
fcompl
sub
mov
sbb
fisubs
cli
popa
call
sahf
stc
repz
stos
repz
sub
and
inc
pop
dec
push
jge
adc
call
inc
int
insb
dec
sbb
aad
push
lods
insb
fstl
bound
jl
out
pop
add
fwait
into
cmp
in
pop
add
outsb
fdivr
loop
xor
sub
sbb
popa
shrl
inc
fsubrl
push
mov
lock
inc
cmp
xor
mov
inc
cmc
test
test
mov
mov
pop
and
out
lret
push
scas
cs
pop
cmc
pop
lods
insb
loope
sub
ds
out
adc
sub
addb
xchg
andl
les
xor
lret
sbb
lea
cmpsl
jae
jle
repz
jnp
or
shl
xchg
and
ss
xor
icebp
cmp
mov
subb
push
mov
xchg
je
sbb
sbb
jmp
sbb
sti
mov
sub
test
fcoml
iret
cli
aas
jg
mov
fs
test
mov
in
fnstenv
mov
inc
stos
adc
fiaddl
loope
sub
and
test
and
ss
push
incl
lcall
seto
stos
pop
ja
fstl
test
sti
sub
xchg
xor
out
js
aas
stos
popa
shr
hlt
sbb
lods
mov
ds
gs
fmull
mov
pop
jae
in
loop
jbe
inc
or
aam
push
xchg
popf
mov
pop
dec
mov
and
adc
ret
dec
sbb
clc
outsl
dec
in
xchg
mov
lret
enter
xchg
mov
pop
xor
jno
add
jg
push
repnz
dec
pop
fdiv
push
int3
push
mov
ror
jo
icebp
iret
pop
sbb
sub
cs
jo
idivb
in
jg
lods
incb
mov
bound
outsb
outsl
dec
xor
mov
movsb
decb
xor
icebp
in
cltd
loop
pop
sahf
out
jle
pop
call
inc
scas
pop
mov
pop
sub
pop
insl
iret
icebp
sbb
pop
sub
outsl
in
push
push
aas
orb
xlat
mov
xor
and
dec
push
lcall
out
stos
ret
jno
decb
mov
or
das
repz
inc
nop
or
xor
lods
cmpsb
push
and
inc
add
stc
pop
orb
or
out
test
inc
or
dec
add
mov
mov
ret
out
dec
and
pushf
iret
insb
repz
xchg
das
sub
dec
clc
pop
xchg
ficoml
dec
push
add
mov
scas
cli
xchg
mov
jo
out
cmpsb
cmp
popa
leave
decl
cld
lahf
fdivl
xor
fmuls
jne
rol
fadds
jo
pop
cli
mov
adc
cwtl
nop
xchg
mov
and
scas
xchg
dec
pop
mov
pusha
inc
enter
cmp
mov
outsl
adc
into
icebp
ljmp
sbb
sbb
inc
inc
daa
pusha
lahf
pop
je
mov
imul
push
not
icebp
pop
lock
in
iret
inc
adc
inc
mov
icebp
clc
sub
ja
mov
repz
add
adc
mov
inc
imul
xchg
cltd
xchg
repnz
shll
dec
dec
fimuls
cmpsl
or
rolb
ja
sbb
pop
in
mov
adc
mov
mov
mov
xor
ret
push
mov
sti
js
pop
jno
test
push
das
repnz
sbb
cmpl
into
lds
mov
pop
mov
mov
and
jge
dec
xor
lret
pop
rcll
fistl
cmp
int3
popa
jns
jg
xchg
cmp
test
dec
and
pop
scas
pop
testb
shll
xchg
pop
shrb
je
insl
pop
movsl
out
adc
cs
mov
stc
aad
ljmp
push
sbb
add
popf
gs
lcall
clc
dec
aaa
loop
lcall
cwtl
add
fisubrl
mov
pop
rcrb
pop
lock
shrb
pop
pop
je
pop
jle
jp
mov
mov
or
inc
inc
into
pcmpeqd
testb
mov
xchg
adc
insl
xchg
out
add
popf
sti
loope
movl
xchg
jle
lock
push
lret
movsb
inc
shl
pop
sub
push
xor
into
xor
lret
xor
pop
jb
ljmp
cltd
xor
and
ret
cmp
dec
int
dec
shrb
mov
sbbb
push
cmp
stc
xlat
adc
arpl
mov
insl
mov
jns
push
add
push
lods
add
mov
je
jmp
addr16
icebp
mov
insb
add
stc
or
and
lds
dec
js
mov
loope
adc
push
dec
loop
xchg
out
inc
mov
cmp
or
mov
mov
add
push
xor
pop
aaa
mov
add
fisttpll
cmc
add
cmpsb
xchg
xor
mov
mov
xchg
dec
or
cmp
jmp
jcxz
fisttpll
mov
inc
add
shrl
imul
xlat
xor
popf
ror
pop
push
and
sub
addr16
popa
and
shl
inc
jmp
dec
xchg
mov
xor
cli
popf
mov
addr16
cmp
test
cmpsl
cltd
and
mov
sub
mov
outsl
scas
sti
mov
mov
inc
cli
stos
adc
pop
pusha
rcr
rcrl
int3
imul
inc
lock
in
fs
add
mov
sti
aad
pop
ror
into
xchg
out
bound
out
in
dec
mov
and
push
stc
add
mov
in
or
das
push
imul
fstl
dec
mov
inc
lea
loopne
data16
lods
mov
mov
aam
dec
scas
sbb
xorb
mov
or
lret
loopne
inc
test
jb
adc
cmpsl
push
aas
push
sbb
xor
xchg
fnstsw
test
aas
loope
and
inc
mov
insb
mov
scas
adc
mov
ret
iret
loopne
std
mov
movsb
roll
ja
jl
repz
pusha
jge
dec
jge
mov
out
loopne
push
cmpsl
ror
outsl
popa
rorb
aad
mov
and
dec
add
dec
push
jg
jl
rcll
lods
xchg
push
out
mov
in
ficomps
xor
mov
cmpsl
push
adc
cmp
push
lds
mov
or
dec
ficompl
es
loop
stos
and
lods
or
add
xor
testl
outsl
lods
push
leave
push
popa
rorb
adc
mov
jae
jp
pop
jo
fsubl
ljmp
hlt
mov
push
fwait
mov
into
adcb
inc
adc
push
xchg
cmp
mov
pushf
xchg
pop
push
gs
sti
cmp
fstp
jbe
sub
movsl
sbb
mov
icebp
pop
push
sbb
dec
fiaddl
movsb
sbb
xchg
test
fwait
jp,pn
jo
jns
fmuls
jg
mov
mov
jne
jecxz
les
push
icebp
int3
nop
jp
in
xchg
pop
out
sbb
xchg
mov
dec
push
notl
scas
popf
mulb
fbstp
ljmp
push
loope
add
iret
in
out
cs
rcl
add
scas
and
nop
jp
aam
int3
mov
xlat
ja
ljmp
movsb
push
out
jle
leave
scas
push
jge
movsb
jmp
ja
pop
mov
outsb
jbe
and
es
mov
cmpl
and
sahf
fbstp
rorl
lcall
add
cmpsl
xchg
loopne
into
jmp
add
repnz
pusha
arpl
data16
mov
es
adc
jb
adc
dec
je
jecxz
dec
outsl
lret
lds
and
outsl
xor
cmc
fistl
out
shrb
es
sbb
les
cmp
jno
outsl
insb
roll
mov
or
sbb
dec
sbb
jbe
gs
or
mov
call
stos
ss
test
cs
dec
pop
jle
rolb
push
loop
mov
imul
jg
pcmpeqb
popa
adc
mov
jae
into
je
cmp
hlt
movsl
pop
xchg
out
adc
add
js
xchg
mov
stc
clc
inc
outsl
aad
sub
dec
and
fdivr
clc
pop
shr
es
adc
inc
ret
jge
push
mov
loop
mov
out
add
xlat
int
insb
push
jmp
pusha
xor
incl
mov
push
sbb
cmovo
outsb
mov
iret
js
call
sub
xor
push
mov
xor
xor
xor
pop
cmp
sub
nop
ss
xchg
cmp
mov
movsl
inc
push
lcall
push
gs
push
in
jae
or
addr16
add
ret
jns
jno
stos
lods
mov
outsb
or
xchg
fistpl
and
inc
stos
add
das
test
lock
xchg
or
push
insl
and
push
jecxz
cld
rclb
jnp
mov
sbb
fwait
dec
test
shr
inc
push
out
fs
cmp
sub
dec
repnz
sbb
add
push
pop
sbb
icebp
cli
or
loopne
jl
add
dec
or
pop
xor
cmp
and
sbb
cmpl
int3
xchg
jecxz
inc
xchg
ljmp
pop
pop
and
mov
mov
push
adc
xor
jne
sub
xor
push
cmp
add
push
fnsave
cmpsl
fisttps
mov
insl
test
sub
sbb
xor
inc
jno
cmpsl
xor
pop
push
jb
mov
pop
addl
aaa
clc
pusha
loop
icebp
pop
popf
sbb
pop
mov
stos
icebp
sbb
insl
pop
clc
pop
mov
push
nop
les
xchg
jg
sub
incb
out
mov
pop
dec
cmp
rorl
cmp
xchg
outsl
inc
cmp
insl
cmc
orb
dec
dec
clc
cwtl
enter
daa
nopl
sub
nop
addr16
pop
jb
les
lret
xor
fcomps
jp
shr
sub
in
fdivrl
ficoml
js
lods
cmpsb
and
scas
dec
cmpsb
lahf
test
sbb
adc
xchg
dec
rolb
stc
call
sub
cmc
andb
inc
push
fs
shrb
sbb
and
test
dec
pop
jp
sub
lret
loop
jo
repnz
gs
xor
push
xor
sbb
movsb
or
sub
mov
outsb
rol
lret
and
stos
push
imul
add
ja
gs
gs
xor
nop
in
movsb
lods
inc
jmp
dec
jns
loopne
cmc
loope
jno
xlat
pop
pop
in
push
rol
mov
clc
loopne
push
es
or
sarb
cmc
ja
dec
ds
mov
subb
fadds
lods
outsb
inc
xor
pop
dec
add
imul
xlat
inc
rcrb
push
xor
push
negl
lods
ret
jge
cli
hlt
clc
insb
jmp
lahf
and
lret
and
xchg
scas
lret
mov
aam
into
sti
and
lods
stos
sti
imul
xchg
movsl
xor
inc
add
mov
out
jae
fbstp
out
cwtl
movsl
lret
xor
xor
lret
push
shll
outsl
out
pop
add
adc
dec
shrl
xchg
or
subb
insb
dec
push
rolb
cmp
fmull
lds
dec
push
rcll
dec
mov
push
xor
jbe
aas
out
out
adc
add
repnz
test
lcall
cltd
or
pop
pop
push
xchg
mov
out
hlt
jbe
cmp
mov
inc
jle
push
hlt
cs
lahf
jns
mov
add
push
jecxz
std
push
xchg
jle
mov
jbe
xchg
jno
sahf
mull
cmp
pop
cwtl
add
xchg
lds
test
xorl
sbb
icebp
push
icebp
dec
jge
pop
js
dec
sbb
and
push
xor
outsb
add
or
stos
cmp
pop
addr16
imul
loop
out
dec
test
inc
adc
enter
ficoms
fstps
inc
in
mov
in
call
sub
imul
jb
pop
and
cmp
int3
lock
ret
ficoml
je
mov
sbb
ret
adc
lods
mov
fwait
test
repz
js
mov
and
and
movsl
mov
and
pop
lcall
in
mov
push
push
icebp
je
mov
and
orb
sbb
pop
rolb
std
repz
lret
jge
pusha
pushf
adc
rorl
jb
mov
sbb
repz
push
sahf
xlat
xor
cmp
sahf
dec
addl
dec
mov
insb
dec
stos
sahf
jg
cmp
add
lahf
add
sbb
mov
adc
fwait
cmpsl
mov
inc
fstl
fnstenv
icebp
cmp
push
sbb
dec
push
cmp
xor
sbbb
jmp
shlb
xor
or
pop
mov
pop
jns
dec
clc
lods
insb
jae
xlat
fisubl
add
popa
mov
inc
sbb
test
add
enter
test
push
inc
add
xor
repz
leave
inc
pushf
xchg
fsubl
fsubrl
int
jns
jg
int
inc
inc
xor
cmpsl
movsb
xchg
and
mov
stos
and
adc
pop
imul
shlb
pop
scas
aad
pusha
hlt
inc
cmp
dec
hlt
mov
inc
inc
test
repnz
lret
adcl
push
fnstsw
rcr
imul
pop
jno
incl
adc
in
xor
movsl
aas
idivb
dec
icebp
adc
lret
rclb
or
mov
insb
mov
jg
xchg
das
xlat
xor
mov
jmp
or
setae
push
repnz
mov
jmp
push
dec
push
pop
adc
mov
or
ftst
stos
mov
push
lret
icebp
xor
and
call
rorb
loop
jle
push
shll
lods
mov
stos
sub
xor
out
adc
sbb
and
adc
data16
xorl
test
xchg
subb
mov
cmovge
or
mov
or
mov
outsb
fimull
jge
lods
pop
pop
push
jbe
mov
mov
jp
insl
sbb
mov
adc
repz
inc
pop
std
std
pop
jecxz
ret
aas
push
call
push
out
push
iret
cltd
cmp
dec
fwait
and
out
out
inc
gs
pop
cmpsl
cmp
in
out
xor
xchg
dec
and
xor
aaa
mov
sbb
lahf
nop
in
fs
jbe
in
or
outsl
and
pop
out
and
fmuls
jb
insl
dec
mov
arpl
xchg
jmp
inc
xchg
dec
xchg
cmp
pop
addl
pop
mov
mov
ds
enter
lcall
sqrtps
and
dec
into
ficoms
push
sbb
daa
pushf
popaw
cmc
add
xchg
in
movzwl
neg
and
jno
push
push
popl
mov
jb
mov
fst
pop
xor
mov
sub
xchg
inc
push
mov
psadbw
fptan
repz
adc
rolb
xor
ljmp
stos
push
cmp
xlat
jne
loop
push
xchg
jle
xor
sahf
imul
xchg
push
and
pop
xchg
sbb
and
test
inc
int
pop
mov
cli
xchg
korb
jmp
and
ds
enter
outsl
jb
cmp
and
or
inc
and
mov
mov
fwait
sbb
push
jne
pop
cmpsb
or
fnsave
dec
xchg
adc
xor
ljmp
testb
sbb
inc
sar
and
cmpsb
outsl
inc
cmpsl
outsl
in
cli
push
mov
pop
pop
pop
xor
pop
dec
mov
mov
movsb
sub
loope
test
jp
fwait
push
loope
add
mov
add
in
push
add
dec
pop
lcall
jecxz
sub
test
lods
sbb
test
aaa
dec
sub
aam
test
out
add
adc
fstps
in
xor
mov
insl
int3
scas
xchg
test
insb
fisubrs
inc
scas
ss
dec
stos
fistpll
dec
repz
mov
lods
xchg
lcall
in
test
dec
pop
jl
jb
mov
mov
adc
xchg
dec
inc
sar
pop
adc
shlb
jae
mov
push
pop
loop
jns
xor
iret
shlb
cmp
xor
dec
cmp
rolb
ja
fiaddl
into
data16
lock
push
aam
inc
and
std
std
sbb
jne
pop
dec
xor
out
ss
pop
ss
popf
jne
out
pop
sbbl
xlat
sbb
dec
jbe
inc
bound
dec
das
cmp
cltd
testl
lds
jbe
xchg
pop
sbb
iret
out
movsl
dec
sub
mov
rol
fwait
adc
imul
fsubl
inc
pop
adc
jo
inc
js
ficomps
pop
adc
rolb
and
out
inc
insl
jle
idivb
lock
adc
jnp
sub
push
cmp
mov
lods
in
xchg
pop
in
sub
inc
ljmp
inc
sub
aad
fsubrl
pop
cmpsb
insl
shlb
popf
cmp
xchg
mov
push
inc
mov
cmp
pop
scas
add
icebp
mov
popa
je
jbe
mov
and
or
fidivrl
xchg
mulb
mov
adc
out
fadd
ja
cmc
add
cmp
in
mov
lods
mov
push
out
es
xor
add
sbb
jae
in
mov
negb
xor
mov
pop
popf
xchg
out
push
and
sub
cltd
push
gs
stc
aaa
mov
aas
idivl
pop
repz
cmpsb
in
jne
hlt
fwait
gs
inc
ficoml
pop
pushf
and
fstl
jp
adc
fldcw
aad
push
adc
movsl
into
scas
rcrl
cmp
ret
add
xor
xchg
imul
xchg
les
or
push
gs
inc
inc
int3
ljmp
sbb
jmp
aam
shl
adc
int
or
pop
adc
jl
cmp
adc
jo
cwtl
mov
scas
mov
out
jno
pop
mov
pop
or
sbb
inc
jbe
xor
cmp
or
cmpsb
pop
adc
mov
je
cld
pushf
nop
push
roll
mov
xchg
jp
or
hlt
inc
sahf
jmp
pop
sbb
jmp
xchg
ret
jecxz
ss
xchg
xor
popf
loop
pop
jecxz
adc
fwait
mov
jo
aas
mov
add
movsl
xchg
arpl
add
sub
and
jmp
xchg
insl
les
mov
and
fwait
pop
stos
add
jl
xchg
inc
sti
pushf
xchg
mov
xor
int
jno
lret
pop
mov
mov
pop
aaa
adc
push
cmc
lds
ss
popa
jae
inc
ja
adc
jecxz
mov
cmovbe
sub
loope
negl
fcmovb
push
in
sbb
mov
dec
and
pop
pop
jmp
dec
fsubs
cmp
sbb
sbb
idivb
rorb
dec
std
nop
dec
sbb
out
pop
inc
jne
rorl
imul
fs
clc
and
movsb
inc
dec
mov
xchg
xchg
cmc
jnp
mov
mov
push
pushf
push
cmp
add
loopne
adc
shll
mov
sbb
and
mov
jle
and
shrl
xor
mov
xchg
mulb
sbb
push
inc
pop
loop
sbb
xor
cmc
xor
adc
cmp
xchg
xchg
fsubl
daa
int
cmpsb
clc
mov
sub
lahf
shlb
sahf
dec
push
mov
push
mov
mov
icebp
and
mov
test
ss
and
int
orl
xorb
dec
daa
vphaddwq
inc
dec
cmp
js
imul
adc
jo
outsb
push
mov
sub
lods
pop
rorl
cmp
adc
cltd
mov
push
mov
fldt
arpl
ret
scas
jecxz
sar
and
aaa
rorl
xchg
jae
mov
aas
in
jle
xchg
jmp
mov
je
mov
repnz
add
fstpl
xchg
out
or
xchg
dec
das
dec
pushl
loope
pop
pusha
sti
clc
or
into
into
decb
pop
je
shll
or
imul
and
in
mov
dec
clc
stos
sbb
stc
push
sub
cld
fcoml
repnz
loop
push
dec
sbb
lret
xsave
inc
fcoml
daa
mov
clc
in
lcall
sub
mov
inc
adc
push
xorl
inc
xor
push
mov
out
in
pop
xor
int
adc
xchg
movsl
jecxz
mov
xchg
lds
xchg
pop
mov
scas
je
stos
scas
push
pop
lret
int3
inc
jo
xor
sahf
outsb
adc
push
mov
xor
mov
mov
movsb
inc
xlat
fcomps
aam
enter
popa
sub
imul
out
rol
sub
xchg
shrl
cltd
mov
and
adc
sub
pop
or
inc
mov
xchg
mov
mov
hlt
sar
cli
mov
mov
fsts
les
ret
rcr
or
aam
outsl
push
xor
mov
outsl
imul
repnz
shlb
pop
mov
fldt
aaa
push
push
les
dec
lock
inc
add
pop
add
cs
lock
mov
mov
xor
aas
add
rolb
sub
flds
out
aad
les
inc
bound
jbe
dec
out
inc
icebp
jbe
cwtl
add
arpl
pop
fbld
or
xchg
mov
arpl
mov
mov
cmpsb
pop
hlt
inc
jp
and
das
cli
popa
dec
or
repz
iret
adc
and
test
inc
mov
jmp
out
push
sti
xchg
ret
xor
frstor
jnp
loope
jmp
adc
inc
scas
push
mov
mov
xor
xor
aaa
mov
add
or
push
or
adc
pop
insb
dec
mov
jl
xor
jns
xchg
loope
scas
rcr
sbb
sbb
mov
jns
push
call
sbb
js
dec
je
in
movsb
pop
std
pop
push
lods
cmp
incl
mov
inc
or
ficoms
popl
mov
mov
lea
ja
enter
or
lcall
out
push
loope
shll
outsl
bound
scas
rclb
imul
xlat
xor
adc
jl
or
test
into
ljmp
dec
cmp
push
push
adc
jb
rorb
notl
push
add
aaa
inc
cmp
pop
dec
hlt
ret
stos
daa
outsb
pop
ret
xchg
rclb
bound
jecxz
or
les
adcl
rorb
imul
test
push
mov
fidivrl
adc
cmp
scas
dec
out
push
daa
fucomip
lret
es
adcb
rorl
cwtl
mov
jae
jge
hlt
sub
mov
push
ja
popa
jne
rcl
shrl
fadd
lret
test
popa
sub
addr16
int3
adc
push
dec
push
add
push
mov
lods
jne
jmp
push
add
ror
push
pop
cmpsl
dec
gs
or
ja
xchg
push
and
add
iret
xor
mov
es
ret
adc
push
fdivrl
mov
cmp
xchg
sub
imul
mov
push
div
xlat
jo
int
bound
xchg
mov
lret
pushf
add
std
inc
inc
sarb
push
and
dec
adc
pop
mov
addr16
rcrb
jge
aas
loopne
inc
ds
add
fwait
pop
xchg
adc
out
inc
mov
cmp
cwtl
adc
mov
ljmp
sub
imul
in
jns
dec
push
push
adc
shlb
sbb
xchg
push
push
lcall
loop
push
insb
jnp
push
jbe
movsb
mov
push
data16
add
mov
rorb
cmp
lret
mov
popa
jae
inc
lret
stos
rorl
push
adc
inc
aam
outsl
rorl
mov
cmc
and
or
outsl
lods
imul
cmp
pop
rcrb
and
in
ss
or
rol
mov
cli
lds
clc
loop
xchg
pop
xor
and
fdiv
cmp
jmp
js
xorb
adc
in
ret
ds
add
ss
addb
jmp
popa
aam
mov
xchg
cmp
ret
xchg
sub
jnp
inc
outsb
sahf
ret
lret
sub
dec
jge
push
or
call
ret
inc
sbb
nop
cmp
das
xor
cld
mov
mov
mov
cmpsl
push
add
fsub
sub
daa
inc
aaa
out
and
shlb
mov
push
ljmp
xchg
into
fcompl
push
loope
stc
popa
sub
leave
dec
fiaddl
mov
mov
add
cmp
push
inc
jl
pop
cmc
movsl
mov
mov
or
jns
pop
cmc
lcall
es
into
adc
sub
or
leave
mov
jle
mov
mov
int3
lods
and
cwtl
popa
fs
dec
fdivp
rorb
push
leave
loopne
mov
mov
aaa
and
jge
and
loop
test
stos
sbb
or
lds
imul
inc
out
fwait
aam
pop
aad
push
cli
add
loopne
lcall
ret
in
cmp
inc
rclb
das
rcrb
xchg
inc
sarb
xor
loop
icebp
jae
adc
jbe
push
inc
insl
pop
xchg
stc
outsb
mov
mov
xchg
test
test
jp
ss
fsubrs
lods
add
cs
out
into
xchg
out
cs
xchg
adc
push
outsl
sbb
dec
call
xchg
xor
scas
std
adc
mov
push
xlat
sbb
repz
stos
imul
shll
cmpsb
rcr
imul
or
ljmp
mov
sub
mov
das
push
jmp
rcr
addb
mov
xchg
call
ret
mov
adc
shrl
adc
or
insl
lret
outsb
xor
mov
stos
sub
add
xor
fs
jnp
inc
incl
push
and
bound
and
mulb
ret
outsl
jecxz
push
sub
mov
cmpsl
ljmp
test
les
xchg
outsl
inc
aaa
xchg
pop
les
leave
push
jl
cmc
gs
bound
ud2
aas
inc
jmp
fmull
jecxz
out
inc
daa
xor
lret
fisttps
and
inc
movl
sbb
pop
add
ja
aam
pop
or
xchg
adcb
rcl
adc
paddw
inc
add
andb
lret
cmpb
xor
cld
xor
xor
push
stos
repz
mov
jmp
cs
in
or
jmp
outsb
dec
dec
test
mov
lds
push
lcall
jmp
aad
outsb
int3
xchg
pop
push
xor
xchg
xlat
rcrl
jge
mov
lds
sbb
cld
pop
and
aam
push
ja
sub
scas
push
lock
rep
cmp
mov
add
lods
dec
std
dec
pop
jecxz
outsb
insl
lods
mov
inc
mov
clc
mov
gs
fldl
dec
push
ss
fwait
out
lcall
cltd
cs
xchg
dec
add
and
fiadds
jmp
jmp
adc
sbb
sub
xchg
in
cmp
lret
fs
std
das
mov
loopne
cmp
decl
loope
mov
mov
mov
imul
movsb
dec
xor
dec
and
sub
sbb
adc
jl
lret
test
enter
aam
or
sti
sbb
pop
rorl
mov
dec
inc
iret
sbb
inc
cmp
cli
jne
jmp
pushf
es
int3
cmp
jle
push
add
dec
dec
jg
arpl
jns
das
inc
lods
inc
push
sbb
cmp
add
sbb
addr16
mov
cmpsl
insb
ret
aas
cmpsb
hlt
in
les
jb
and
mov
jge
cli
dec
inc
and
sbb
adc
mov
sbb
and
insb
jle
js
pop
ss
notb
adc
out
ja
jle
fwait
and
inc
aam
xchg
fmull
xchg
push
add
fildll
lds
subl
xor
jae
mov
loope
jle
xchg
outsl
inc
lock
lea
out
ja
shll
sub
mov
stos
or
ret
aad
adc
adc
sbb
pop
mov
out
aas
xchg
xor
andl
dec
jo
mov
mov
in
sub
lods
pop
mov
and
inc
fstps
fnstsw
lahf
and
roll
aas
sarl
sbb
lock
cmp
jns
lods
out
or
shll
loope
xlat
jle
push
cmpsl
or
xorb
mov
imul
pop
and
insl
sarb
subb
outsb
in
testb
mov
jecxz
xchg
inc
clc
inc
out
je
cmpl
sbb
pop
sbb
adc
lret
enter
fcoms
push
ja
lcall
inc
sub
dec
loope
out
lods
jns
pop
out
es
or
xchg
insl
daa
movsb
rclb
sbb
mov
dec
iret
cmpsl
repz
cmc
push
cmp
push
rorb
in
or
icebp
pop
idivl
push
daa
lods
sahf
lock
into
in
dec
add
fstpl
inc
xchg
inc
and
addr16
test
lahf
arpl
sbb
dec
scas
popf
int
mov
cltd
pop
outsb
imul
notl
enter
lret
cmp
pmaddwd
xchg
stos
push
xor
lock
shrl
ficompl
in
inc
pushf
dec
fstl
popa
xor
or
rolb
jg
jmp
bound
cmp
xor
pop
dec
rcl
mov
push
in
mov
push
in
sbb
xor
in
fiadds
loopne
cwtl
scas
sbb
jmp
mov
cld
or
dec
leave
cli
push
out
shlb
cmp
out
icebp
or
leave
sub
push
mov
push
push
add
fwait
repz
je
repz
mov
sub
inc
adc
or
pop
mov
dec
clc
scas
pop
adc
inc
outsl
and
jno
adc
rclb
jb
sub
adc
fwait
push
shr
adc
sbb
push
dec
push
popf
mov
int3
in
out
ds
cld
add
daa
cmp
sbb
ret
dec
jge
ljmp
jno
mov
sub
in
loope
cmp
jp
pop
outsl
aas
and
sti
in
cmp
or
sub
jmp
xchg
nop
pop
push
mov
mov
mov
mov
loop
mov
lret
sbb
arpl
cwtl
test
loope
inc
mov
push
iret
lods
push
sub
mov
adc
into
scas
add
or
or
cmp
jo
cli
insl
jp
outsb
in
cmp
popa
sbb
sbb
xor
add
enter
mov
test
xchg
push
push
cld
aam
dec
shlb
call
pop
pop
push
mov
data16
fisubl
cs
cmpsl
inc
ror
or
movsb
push
mov
add
dec
nop
jge
cmp
inc
pop
iret
jbe
push
dec
add
movsl
addr16
aaa
xchg
fldt
scas
sbb
cmp
add
mov
adc
imul
or
sbb
aas
inc
leave
lock
fdivr
ds
jl
push
sahf
mov
popf
fs
pop
dec
push
mov
shll
pop
xchg
jo
mov
stos
insb
enter
jge
loope
jb
push
movsl
push
std
je
int3
inc
xchg
popf
or
mov
pop
mov
stos
sbb
je
imul
divl
test
inc
data16
div
outsb
outsb
std
mov
push
jle
fisubl
dec
test
sti
or
hlt
fcompl
pushw
mov
mov
xchg
mov
sub
jp
or
jbe
ret
shrl
mov
dec
outsb
cmovb
shll
cs
cltd
into
jbe
lea
inc
push
mov
jae
dec
jg
dec
mov
jl
addr16
sub
mov
movswl
mov
xor
sub
daa
int
pop
or
scas
jne
insb
fistps
inc
or
pop
jnp
push
xchg
loope
mov
pop
arpl
or
sub
das
and
xor
sub
out
outsl
dec
xchg
or
adc
add
dec
addb
sbb
jge
cmpsb
cmp
xchg
aad
dec
int3
mov
ret
cmp
or
gs
mov
jmp
push
adc
fildl
dec
outsb
out
adc
mov
push
inc
fsubs
leave
mov
cmp
push
sub
xchg
es
push
mov
push
inc
add
mov
mov
add
mov
jle
aam
mov
mov
pop
cmp
lods
insl
inc
sub
pop
inc
aas
adc
push
xchg
jp
mov
cmc
dec
shll
jns
sbb
lds
add
sbb
loopne
cli
dec
out
mov
jb
adc
and
cmpsl
das
or
cmp
mov
xor
mov
pop
mov
push
out
dec
lahf
mov
cmp
loopne
hlt
out
shl
jno
cmp
scas
adc
fstpt
fisubl
or
mov
mov
mov
rcrb
cmp
jle
daa
mov
push
call
or
mov
shl
pop
jnp
mov
sti
lds
cmpsb
das
clc
popa
jl
cmc
ret
das
jmp
daa
sbb
xor
add
sub
inc
ss
jnp
sbb
add
jg
jae
adc
es
nop
push
psllw
sub
add
sub
sub
std
xchg
cmp
test
or
xchg
xchg
es
mov
or
push
jbe
jle
pop
or
cmp
xchg
inc
and
push
aas
cli
pop
cmpsb
arpl
leave
hlt
cltd
popf
mov
nop
push
jnp
cmc
in
lock
dec
stos
stos
jp
insb
or
aaa
add
and
cmp
imul
mov
std
cmpsb
dec
popf
daa
push
pushf
in
ljmp
pop
adc
jmp
sar
lods
int
arpl
cs
rcll
andb
cli
mov
jle
xchg
shr
push
cmpsb
jbe
cwtl
stos
or
pop
push
xlat
sbb
ja
cld
xor
mov
sub
inc
mov
rcll
sub
es
pop
mov
dec
negl
pmaxub
jo
lock
dec
sub
jecxz
movsb
jle
inc
sub
out
je
mov
push
popf
xor
push
adc
mov
dec
xchg
and
adc
push
adc
xchg
movsb
cmp
xor
mov
jo
pop
sti
or
insb
imul
rcrb
inc
sbb
xchg
int3
lcall
aam
insb
stos
daa
movsl
outsb
add
push
mov
stos
inc
pop
pop
ds
fiaddl
cmc
shrb
enter
add
stos
add
icebp
dec
ret
dec
xchg
jb
lock
cmc
mov
add
cmp
mov
add
or
dec
test
into
push
ds
lret
fildl
mov
es
sbb
in
xor
push
pop
pop
cwtl
mov
enter
arpl
mov
stos
fistps
fsubrl
xchg
inc
or
xchg
pop
call
pop
aaa
dec
mov
and
mov
mov
mov
sbb
sub
inc
rcrb
adc
mov
mov
ret
push
les
lret
out
loopne
cs
cmpsb
fsqrt
jnp
sti
insb
cli
or
lret
adc
int3
dec
and
js
jnp
mov
push
jp
pushf
pop
add
cld
in
inc
aad
or
dec
imull
mov
loope
aad
jne
inc
sbb
mov
fisttpll
in
pop
lea
cmp
test
loopne
or
inc
push
es
mov
lea
insl
and
mov
sti
jmp
mov
dec
jmp
push
imul
mov
jns
jg
pop
cwtl
add
test
in
mov
pop
rorb
insl
cmp
ss
lret
out
nop
dec
xchg
inc
ret
iret
fidivrl
mov
and
xor
icebp
and
inc
icebp
rorl
and
jns
arpl
adc
sbb
sub
cmp
shrl
ds
mov
imul
pop
add
shlb
mov
push
notb
xchg
mov
push
or
mov
pusha
std
push
jge
sahf
movsl
cmp
daa
aam
pop
sub
in
in
outsl
xor
dec
lretw
lock
orl
pop
mov
sti
shlb
xchg
and
add
dec
adc
jne
push
addr16
inc
cltd
ja
loopne
gs
pop
lret
bsr
mov
pop
push
mov
cwtl
mov
repnz
rorb
sbb
add
insl
repnz
subb
sti
cs
jg
and
dec
inc
add
or
or
add
inc
and
stc
inc
aam
in
xchg
sbb
and
popf
stc
mov
icebp
and
push
pop
add
sbb
xor
bnd
call
mov
in
jnp
pushf
jecxz
xchg
jo
gs
scas
pusha
jno
jle
xchg
adc
mov
sbb
in
rorb
in
cmp
repz
fnsave
test
in
popa
cltd
mov
add
test
or
mov
xchg
aam
jae
xlat
shrl
out
lods
mov
cmp
xchg
lods
jae
shl
or
psubd
das
xlat
adcb
xchg
shrl
mov
inc
inc
lret
jo
cmpl
popf
push
loop
mov
cmc
mov
in
addr16
mov
push
dec
jmp
sub
mov
and
das
fbld
cwtl
jecxz
jo
pushf
cmpsb
xchg
fldt
xor
mov
push
mov
jno
pop
add
pop
cmc
lret
rcl
cmpsb
mov
mov
cmpsl
pop
inc
das
sub
or
out
lods
jnp,pn
test
cmc
lcall
insb
mov
stos
add
cmp
lea
sbb
push
das
popa
cmp
sbb
mov
daa
popf
xor
push
cmpsl
or
push
sbb
xor
pop
dec
push
pushf
adc
aad
rcrl
sbb
adc
push
adc
shlb
add
xlat
dec
xchg
add
outsb
into
aad
addr16
stc
jns,pn
fnsave
and
jo
sub
shr
fdivrl
mov
scas
aam
cmp
pop
add
loopne
push
mov
call
cmp
fldl
xor
mov
dec
mov
imul
mov
dec
inc
xchg
divl
addb
cli
adc
dec
xchg
jb
imul
dec
test
push
mov
rcrb
lods
inc
sbb
dec
xchg
lcall
js
ret
je
test
int3
lret
es
insl
jl
dec
mov
push
cmp
sarb
jb
outsl
lds
inc
shlb
adc
loop
dec
int3
and
and
mov
sti
cmp
mov
lcall
jbe
pop
pop
mov
std
add
mov
out
jns
dec
popa
scas
out
subl
fcomps
push
adc
lret
fadds
and
mov
lods
rcl
mov
mov
push
es
fisubs
add
cmp
ss
cld
push
les
fcoml
fistpl
clc
into
jo
sbb
dec
xlat
inc
dec
leave
xchg
ss
sbb
pop
jl
pop
mov
push
push
js
fstps
and
fmull
nop
call
mov
mov
mov
xchg
push
scas
dec
push
out
out
inc
lds
xchg
shll
cltd
pop
fcompl
cmp
inc
dec
push
fldenv
frstor
pop
xchg
outsl
sub
lods
mov
and
rcrl
mov
dec
lods
adc
pushf
mov
lahf
sbb
ss
xor
fdivrl
mov
or
mov
aaa
jl
mov
ds
je
inc
push
insb
lret
dec
mov
cmp
rorb
cmpsl
dec
sbbb
mov
push
push
sti
loopne
pop
mov
jp
mov
cmp
mov
bound
mov
add
or
bound
inc
or
pop
cmp
mov
icebp
sub
and
sbb
xor
scas
loope
pop
popf
and
inc
mov
stos
adcl
std
or
jmp
repz
out
movsb
rol
jle
mov
inc
inc
cs
iret
scas
adc
inc
cmpsl
adc
out
pop
push
sarl
jne
push
popa
fidivrl
and
dec
mov
in
lret
mov
or
je
push
sub
pusha
jno
add
or
add
dec
jg
and
or
insl
mov
les
popa
nop
repnz
sbb
std
int3
loopne
test
fimull
jb
test
push
into
fisubrs
daa
xchg
cmpsl
fadds
xlat
cli
fsubrl
dec
xchg
cmp
imul
mov
push
in
es
or
fucomi
lock
outsl
jae
adc
inc
ds
leave
lock
test
sbbb
dec
imul
and
rcrb
xor
inc
test
add
push
mov
push
jle
mov
int
inc
push
pop
repz
sbb
cmp
adc
sbb
out
push
sub
pop
mov
cmpsl
or
out
xchg
stos
and
dec
test
jns
mov
add
lret
or
or
sar
cmp
out
push
hlt
aaa
and
cmp
jecxz
push
mov
cmpl
addr16
mov
xor
cld
popa
mov
lods
lea
jae
adc
add
cmp
mov
in
and
jbe
ret
cmp
dec
push
call
fnstcw
imul
stc
shlb
cmc
loopne
jae
push
fcmovu
adc
and
xchg
pop
jns
fwait
int
mov
cmc
sti
mov
xor
loopne
outsl
out
movl
pop
jmp
jg
mov
shrb
in
lods
and
sub
mov
imul
xor
gs
test
mov
sbb
sub
out
ret
dec
pop
outsb
xchg
xor
cmp
jb
xchg
pop
mov
adc
bound
mov
mov
fcmove
in
ds
repnz
divl
add
and
or
or
ret
push
dec
dec
xor
pop
rol
xchg
mov
sub
add
aaa
jecxz
jg
nopl
out
xor
pop
push
pop
pop
push
aas
and
inc
cmpsb
pop
fdivl
clc
xorl
lods
rclb
les
loope
into
aad
sahf
daa
add
shll
jg
divb
popa
mov
xor
jno
sbb
cmp
inc
shll
or
clc
adc
sbb
jecxz
jp
je
adcb
pusha
mov
jnp
stc
loopne
pop
pop
or
negb
push
fwait
ljmp
mov
jae
push
adc
fs
repnz
inc
inc
push
and
or
or
ja
mov
decl
xor
es
and
das
cmc
lret
xor
push
inc
add
mov
arpl
sbb
mov
pop
xchg
jne
xor
fnstsw
int3
mov
pop
sarl
cmpsl
sbb
mov
add
and
mov
scas
je
jg
rolb
stos
inc
ds
stos
js
or
add
push
pop
inc
insb
cli
jb
mov
jp
int
lods
sub
xchg
daa
sub
add
cmp
subl
push
and
cmp
mov
call
cmp
push
adc
jmp
jnp
mov
pusha
jmp
aas
add
mov
pop
fnstsw
lret
adc
xor
jne
leave
jmp
push
cltd
sub
rol
das
test
mov
or
mov
xchg
std
sub
jo
sbb
push
push
jg
sub
adc
inc
push
rolb
repnz
inc
cmp
pop
in
sbb
xchg
sbb
fnstsw
sub
loopne
jle
insl
or
out
push
ja
ljmp
cmp
dec
dec
xlat
sub
repz
fldt
scas
push
repz
add
xchg
xor
inc
fwait
push
movsb
mov
cmpsb
xchg
pop
inc
lods
pop
fmul
dec
leave
mov
mov
test
inc
dec
std
mov
xorb
mov
push
shlb
or
stos
xchg
sub
rcr
fxch
mov
inc
pop
cmp
lods
mov
dec
mov
scas
adc
dec
test
int3
mov
xchg
cwtl
jge
sub
dec
xor
out
jo
icebp
enter
sti
and
mov
inc
pop
adc
sbbl
aam
mov
rcrb
dec
add
lea
mov
rorl
jno
sbb
jge
dec
or
push
test
push
xchg
pusha
lret
pop
repz
jl
divl
dec
cmp
inc
sbb
cmc
imulb
push
cltd
test
pop
mov
cld
das
or
clc
sbb
push
push
sbb
pop
aas
mov
or
mov
inc
hlt
add
insb
outsl
fxch
and
fs
popa
or
xchg
es
mov
adc
lods
mov
add
fcoml
iret
sbb
adc
jp
les
pop
jecxz
or
je
js
push
mov
mov
push
xor
imul
std
and
rol
mov
dec
int
push
or
mov
sub
jp
fimuls
jno
lods
jmp
push
stc
scas
pop
mov
or
lea
dec
movsl
cmp
sbb
test
call
es
lahf
clc
gs
imul
pop
insb
sub
outsb
outsl
in
cltd
pusha
mov
fsubs
or
aam
ljmp
mov
cmp
jb
sarl
bound
push
scas
int3
adc
sub
rorl
leave
sub
fbld
idivl
xlat
jb
adc
xor
outsb
xchg
lret
inc
push
inc
push
mov
adc
aam
call
hlt
or
push
xchg
rcl
cmp
mov
lock
rcrl
shlb
arpl
ljmp
mov
sbb
inc
xchg
mov
in
sarb
xchg
dec
out
lret
lahf
aas
ja
push
bound
jg
add
jl
mov
inc
cmp
sub
pop
sbb
fldpi
aas
mov
xchg
popf
add
xchg
cmp
inc
shl
jg
dec
ljmp
bound
mov
test
mov
lods
push
adc
int3
mov
sbb
and
lcall
lea
lods
mov
addr16
fistpll
push
pop
xor
xchg
cmp
push
lods
xchg
aad
pop
fsts
mov
pop
lods
ljmp
jne
push
cmp
cmp
sarl
enter
decl
cmp
gs
fmuls
mov
lods
push
mov
sub
adc
pop
inc
out
or
and
inc
cli
push
and
repnz
cmpsb
pop
sub
in
popa
into
cmc
push
inc
in
add
push
loopne
jno
jmp
dec
outsb
xchg
iret
mov
push
and
iret
sbb
dec
and
test
pop
xchg
test
lods
mov
jnp
dec
out
js
xchg
xchg
or
fldcw
popa
xor
xor
mov
ror
pop
lea
orl
dec
jmp
ja
divps
stos
addr16
int3
add
nop
pop
and
movsl
lcall
push
lret
mov
int3
cltd
cmpsb
outsl
jno
stc
push
je
mov
roll
fldl
cld
fstpt
lods
xlat
subb
jnp
jp
jbe
aas
inc
dec
cld
xor
and
ds
ret
dec
add
mov
pop
xchg
jae
mov
inc
add
xchg
jle
and
push
mov
popf
add
mov
adc
cmc
out
xchg
xchg
mov
cmc
sbb
dec
dec
int
and
fisttpl
mov
je
sahf
lahf
sub
mov
imul
inc
loope
aas
sbb
fsubr
cltd
mov
mov
vaddss
pushf
push
test
inc
repz
movsl
loope
enter
cmpl
in
data16
scas
divb
jns
addl
fbld
xlat
pop
leave
cmp
test
jae
sbb
jp
clc
data16
lods
xchg
cmp
pop
pop
lods
jl
je
add
ret
insl
test
imul
fldenv
sbb
scas
das
mov
fs
push
or
sbb
dec
subb
and
fldl
push
push
sar
outsb
dec
fwait
cli
dec
cwtl
pop
push
sub
mov
push
and
imul
add
sbb
cmpsl
add
add
mov
repnz
sbb
loope
mov
and
scas
mov
scas
sub
daa
pusha
xchg
sub
push
fisubrl
inc
stos
movsb
ja
iret
in
orb
in
out
call
fwait
push
dec
clc
push
jne
adc
test
jno
roll
mov
sahf
add
fsubrl
or
bound
cs
pop
lret
sahf
and
mov
js
cmp
adc
fdivrl
push
xor
and
push
pushf
pop
or
mov
scas
arpl
adc
aaa
aam
add
xchg
pop
and
add
in
jbe
pop
and
std
mov
push
test
lret
mov
xchg
dec
push
in
adc
and
push
push
dec
cld
fisubs
lcall
outsb
lods
push
in
je
and
gs
mov
scas
add
pop
je
andl
cmp
arpl
xor
push
jo
scas
inc
gs
and
inc
negb
pop
pop
lret
pop
shlb
je
movsl
sbb
mov
xor
cmp
mov
push
es
paddsb
push
incw
popa
ret
jb
and
push
sti
lea
push
inc
sbb
stos
sbb
nop
add
cmc
bound
stos
mov
aam
jno
mov
insb
xchg
mov
mov
mov
adc
mov
std
divb
lret
mov
push
in
lock
sar
push
inc
cs
cmp
imul
fldt
es
outsb
jno
loopne
gs
out
stos
mov
ror
add
repz
fcompl
sub
iret
lods
inc
xchg
test
test
rcrl
cli
mov
pop
mov
aam
test
jmp
lret
jg
pop
lret
sbb
push
ss
xor
rclb
stos
cmpsb
pop
dec
mov
aas
gs
push
dec
mov
mov
sbb
xor
pop
xor
repnz
sar
jb
filds
xchg
stc
sub
data16
pop
hlt
loope
dec
in
popa
mov
and
aad
push
outsb
fwait
jl
xlat
push
andb
bound
mov
movsl
sub
cmp
addr16
and
hlt
adc
xchg
xchg
scas
cwtl
bswap
shlb
pop
sbb
pusha
in
push
xchg
sbb
inc
jle
and
cmp
push
imul
aad
mov
xchg
mov
ja
popa
mov
mov
test
dec
es
xor
push
sbb
xchg
ret
fimuls
rol
aad
dec
fstpt
jecxz
das
mov
lods
sbb
cld
fsubl
icebp
cmpsl
lods
xor
pop
push
leave
sbb
outsb
leave
mov
push
insb
inc
or
sti
mov
pusha
fcmovnb
cmpsb
inc
and
adc
pop
rclb
mov
add
cwtl
ljmp
in
test
or
pop
in
cmpsl
sbb
cmpsl
test
dec
mov
idivl
aam
fidivrl
sbb
int3
cmp
aam
stos
ret
mov
pushf
push
loopne
mov
dec
testb
jle
mov
pushf
call
aas
lahf
pop
sahf
hlt
out
out
mov
jmp
pop
test
mov
test
jae
adc
in
dec
testb
icebp
pop
and
sarb
cmp
icebp
cmpsb
jle
outsl
in
pop
add
lock
push
data16
mov
das
xchg
loop
cli
cli
mov
adc
add
xor
xchg
mov
cmp
inc
sbb
jmp
stos
mov
xlat
sbb
push
inc
jno
and
pop
int3
or
aam
and
mov
clc
pop
jg
lahf
jecxz
fdivr
mov
std
and
adc
ss
jne
mov
aas
push
movsl
cmc
or
xchg
xlat
hlt
stos
adc
sbb
movsl
push
mov
ficoml
mov
ffree
das
lret
lea
inc
pusha
jne
popa
lds
add
mov
adc
xchg
dec
mov
dec
dec
add
push
pop
lods
or
add
out
inc
or
popa
xlat
cli
sbb
mov
addr16
loop
dec
negl
imul
or
inc
sub
jns
mov
mov
sbb
inc
in
sub
sti
jp
fs
sbb
and
add
daa
cmp
and
test
int3
ret
sub
sub
scas
dec
lock
popa
test
imul
push
je
and
test
insb
dec
movsl
gs
and
push
adc
mov
xchg
testl
pop
inc
sub
pop
push
sarb
sub
dec
push
aad
lods
add
inc
outsb
fbstp
jae
xlat
das
sti
into
mov
mov
cmc
rcrl
vandps
in
sbbl
neg
out
inc
test
jle
fsub
mov
xchg
mov
inc
xor
test
lret
jmp
cmp
std
sarl
xchg
jae
xor
daa
xlat
and
jno
pusha
mov
sub
pop
popa
int3
xchg
insb
xchg
les
pop
mov
cmp
mov
mov
in
into
cltd
nop
sbb
daa
scas
mov
orb
pop
fucomip
inc
pop
js
test
pusha
ficompl
cmp
sbb
sti
outsl
das
ja
sub
andb
push
jnp
movsl
mov
inc
mov
testl
pop
lods
ficompl
mov
cmp
notb
scas
mov
pop
lods
repnz
sbb
call
jno
inc
enter
addb
les
nop
or
sbb
mov
cli
or
sbbb
add
mov
rorb
scas
push
xchg
push
cs
aas
cmc
mov
add
je
push
push
test
lahf
dec
cld
fbstp
cmp
xor
in
data16
add
addr16
or
add
xchg
push
icebp
sub
fwait
aas
xchg
xlat
xchg
shll
pushf
and
outsl
fldenv
lds
fdivs
repnz
dec
jo
or
dec
dec
scas
sti
jmp
cmp
arpl
pop
push
pusha
cmp
iret
adc
mov
imul
pop
gs
jmp
out
pop
xorl
sti
arpl
sub
cltd
ja
shll
enter
cmp
pop
xor
add
push
fiadds
shl
repz
push
add
mov
stos
adcl
mov
pop
outsl
sbbb
pushf
mov
fwait
xor
insb
out
cmp
sub
icebp
je
lret
lods
or
xor
popf
pushf
shl
xor
xchg
mov
mov
out
loopne
or
add
jbe
or
test
xchg
inc
scas
jmp
movsb
cmp
xchg
cld
mov
adc
sub
push
sbb
cmpsb
lcall
mov
mov
adc
cwtl
js
sub
jg
shrb
out
mov
xor
scas
inc
fucomip
cld
inc
adc
fcoml
stos
pop
xchg
pop
or
dec
xchg
cmp
jnp
sub
or
cmp
sbb
adc
push
xchg
loop
cmp
and
mov
clc
dec
enter
jo
repnz
adc
jo
leave
je
and
jne
jl
push
push
pop
push
fisubrs
pop
test
fwait
popa
in
sub
test
mov
or
shl
fsubl
inc
cmp
sbb
mov
jle
scas
negl
repnz
adc
and
and
dec
adc
pusha
push
push
out
mov
dec
cli
leave
sub
popa
push
insl
pop
mov
stc
je
and
cmp
mov
repnz
fwait
shlb
sbb
in
icebp
add
fcmovnu
in
lret
aaa
ret
add
icebp
jnp
cli
and
and
cmp
pop
push
popf
and
nop
movsb
rcrl
jl
mov
mov
cli
cmp
sub
shll
xor
out
ret
int3
int3
push
aaa
push
repz
sub
mov
mov
pushl
mov
pushf
pop
lock
adc
dec
cwtl
mov
lret
dec
inc
imul
add
xlat
mov
push
xchg
push
les
stos
jmp
cmp
sbb
sbb
aam
or
js
cmp
cmp
cmc
jbe
jge
out
sub
out
push
movsb
ja
lods
jae
jl
mov
mov
xor
cmp
mov
sub
loopne
jb
jo
jb
push
pushf
arpl
cli
imul
jle
pop
int3
cmc
pop
out
xchg
ret
inc
ss
lods
sahf
mov
int
adc
adc
leave
mov
add
pop
mov
jne
pop
mov
pop
pop
sub
or
jg
mov
inc
call
cmc
clc
movsb
pop
loopne
inc
sbb
inc
lret
xor
je
xor
jp
add
pusha
mov
cld
dec
js
mov
cmp
cmp
xchg
pop
imul
ret
in
shl
cmpsl
jecxz
jb
pop
add
fidivs
pushf
js
mov
or
fstps
fdivrl
ljmp
jle
inc
or
mov
hlt
jbe
or
jns
fwait
aam
and
and
lds
adc
aad
inc
or
pop
jl
jb
test
dec
test
decl
push
jno
adc
pop
and
mov
fstp
xlat
loopne
in
imul
pop
xlat
or
movsl
pop
imul
out
sub
inc
xor
dec
pop
test
int3
jno
mov
adc
or
sub
or
fs
mov
imul
scas
push
xchg
xchg
inc
mov
int3
jecxz
movsl
imul
int3
jle
xor
or
or
mov
in
dec
andl
or
cmp
jb
rol
repnz
cmp
aam
pop
push
fidivrs
sbb
push
mov
mov
jge
push
pop
mov
rorb
jecxz
aad
out
xor
mov
or
aaa
int
pop
call
leave
jnp
and
call
push
jns
hlt
adc
cmp
fcompl
aaa
test
dec
dec
imul
sub
xor
lods
test
adc
jl
repz
in
xchg
out
sbb
mov
aad
pusha
xchg
fwait
sbb
out
filds
lock
jnp
pop
xor
mov
and
fstps
pop
push
repz
dec
sahf
pop
mov
cli
aad
mov
or
mov
lret
ret
lods
iret
sahf
add
or
inc
add
pushf
mov
cltd
mov
loope
jns
shlb
pop
mov
shll
mov
push
mov
cmpb
or
je
outsl
and
xlat
and
loopne
xlat
daa
int
lds
add
mov
mov
push
xchg
lret
ss
ja
xchg
push
mov
insb
xor
xchg
pop
add
nop
push
test
popa
imul
addr16
push
loopne
imul
pop
sbb
in
inc
or
les
and
pop
xor
ret
popa
cmp
mov
add
scas
jmp
or
fcomps
repnz
xchg
jp
and
add
xchg
push
mov
fsubs
mov
push
inc
ss
rcrl
andl
mov
xor
push
arpl
xor
pusha
shlb
sbb
mul
sbb
or
xor
jbe
js
mov
mov
rcrb
imul
in
dec
int
jle
movsl
xor
repnz
push
inc
fdivrs
or
xchg
pop
and
sub
in
xor
insl
mov
push
xor
xor
pop
mov
movsb
jp
inc
cltd
mov
mov
stos
mov
pop
mov
adc
mov
out
add
ja
sub
cmc
mov
lret
nop
push
push
xchg
sysret
pop
lea
xor
or
or
dec
sbb
jecxz
mov
dec
xchg
mov
xchg
ss
pop
loop
jbe
jbe
scas
xchg
xchg
mov
popf
test
xlat
pusha
fwait
sbb
and
add
cmp
push
xchg
fcoml
out
das
mov
rcrb
mov
jno
cmp
push
jb
xchg
sbb
les
cmp
mov
imul
outsl
pop
and
or
dec
bound
fstl
jno
loopne
cmpsl
stos
and
push
dec
mov
mov
xlat
inc
leave
loopne
les
mov
jp
push
add
sub
pop
mov
push
nop
or
jns
ds
push
mov
push
push
cmc
sbb
stc
lcall
add
cmc
out
outsb
xchg
mov
and
jg
mov
cmpsb
ds
adc
add
int
stos
or
mov
and
fistpl
addr16
pop
push
or
gs
cmp
xor
insl
dec
lds
mov
out
push
xor
movsb
sub
pop
rcll
push
pusha
inc
sar
test
or
aam
or
push
js
cmp
jbe
push
sti
and
pop
mov
jae
daa
lahf
xchg
inc
mov
or
push
add
xor
push
ss
and
outsb
pop
mov
jb
sbb
mov
call
into
daa
pushf
insb
aas
mov
push
mov
push
fdivrs
out
je,pt
push
fstpl
push
fs
stos
scas
push
mov
adc
mov
cs
sub
ljmp
dec
addl
add
push
sbb
scas
push
xchg
jle
mov
lcall
xor
adc
mov
subl
mov
cmp
btc
sarl
addr16
pusha
mov
mov
mov
mov
lcall
and
xchg
pop
imulb
ja
in
cmp
ss
mov
hlt
xor
lds
xor
orl
push
test
ljmp
sahf
and
icebp
mov
outsb
adc
stc
out
jno
jl
push
jl
stos
jl
push
lret
jecxz
mov
push
outsb
mov
aad
dec
adcl
icebp
lcall
sbb
jns
sub
pop
inc
dec
adc
fwait
jg
ret
mov
call
mov
test
lds
push
and
stos
mov
pop
nop
sbb
out
add
test
fdivs
and
incb
sub
lret
rcl
pop
mov
xor
mov
out
nop
xchg
mov
xchg
js
adcl
mov
mov
in
iret
xor
sbb
dec
andl
idivl
push
cmp
mov
sub
push
cmp
je
popf
fstps
cmp
fs
call
mov
vmovaps
jb
dec
int3
pop
dec
ret
fsub
pop
rolb
arpl
and
mov
repnz
fisttpl
icebp
and
stos
lds
rorb
and
sbb
out
push
popf
je
mov
aam
cmp
sub
int3
je
lcall
movsb
insb
lods
jne
gs
fwait
insl
inc
insb
arpl
xor
xlat
mov
and
lods
cmp
hlt
js
mov
inc
and
push
jmp
loop
xchg
sub
enter
cmpsb
js
mov
mov
aas
cwtl
dec
xor
rcll
lock
inc
and
jo
mov
scas
xor
loop
pushf
jge
rclb
enter
cld
cwtl
outsb
mov
stos
sbb
ffree
mov
jo
pop
repz
push
jmp
push
clc
push
lcall
cli
int3
out
and
push
fiaddl
into
psubsb
ret
mov
sub
arpl
fisttpll
cmp
lock
data16
sub
jae
inc
lret
adc
xchg
jae
outsl
mov
dec
cs
ljmp
fistpl
shll
pop
jne
adc
mov
test
movsb
ret
cli
cmp
movsb
adc
sub
inc
jle
sahf
nop
in
fwait
testl
cmp
out
fs
add
ss
sbb
dec
test
imul
xor
ficoms
mov
clc
stos
rcll
sbb
mov
adc
imul
sahf
cmp
mov
mov
mov
pop
les
adc
mov
rcll
or
out
sub
dec
pushf
pop
sbb
sti
aas
iret
inc
mov
inc
stos
xchg
mov
jl
imul
test
push
clc
and
sti
add
xchg
ficomps
sbb
jbe
pushf
push
fnsave
xor
inc
gs
aaa
in
cld
insl
into
xchg
and
mov
rorb
aad
outsb
cltd
sbbb
xchg
call
enter
fs
in
cli
out
cli
stos
into
lret
mov
add
inc
popa
xchg
xor
int
incl
jae
jp,pn
arpl
xor
adc
insl
jne
stc
std
sub
mov
cmp
out
xor
imul
pop
sbb
in
cs
es
xor
cli
cltd
nop
sbb
stos
mov
xchg
int
outsl
xchg
mov
xor
icebp
jmp
bound
lahf
cli
push
fstpl
adc
dec
loopne
sbb
ret
cli
dec
movl
cld
lea
mov
jmp
inc
mov
outsl
mov
mov
fs
loop
test
ret
or
push
mov
ficoml
es
or
arpl
or
xor
sub
and
std
push
or
fnstcw
jle
fsubl
mov
xlat
js
jno
and
xchg
bound
xchg
jl
shrb
xor
mov
add
mov
mov
or
push
inc
out
xchg
pushf
aaa
xchg
test
sbb
mov
add
lret
jb
fdivs
pop
pop
xchg
sarl
lea
int3
out
pop
scas
int3
out
jb
dec
aas
dec
add
mov
push
push
mov
fsts
or
stos
mov
roll
push
pop
int3
mov
loop
ja
xchg
mov
sub
and
bound
popa
and
jmp
add
inc
mov
sub
arpl
call
mov
pop
aad
xor
negb
mov
mov
iret
clc
and
ja
lods
pop
pop
mov
fbstp
xchg
jae
inc
repz
mov
inc
loop
and
mov
dec
es
pop
mov
sbb
loop
shlb
mov
sbb
fnstenv
push
cld
mov
repz
ss
repnz
test
add
cltd
pop
pop
lds
jle
mov
je
fldcw
lret
cmp
cwtl
iret
mov
pop
pop
or
xor
adc
out
mov
mov
lahf
mov
dec
daa
test
adc
or
and
mov
pop
icebp
ja
mov
movsb
inc
sbb
adc
pop
roll
inc
push
shrb
andb
cwtl
pop
push
sarb
cli
dec
mov
and
mov
pushf
or
shrb
add
imulb
pop
dec
inc
jbe
push
mov
subb
mov
or
cmpb
push
push
or
idiv
push
ret
popa
mov
or
lret
test
and
and
jle
pusha
insl
adc
loope
lret
xchg
or
sbb
jecxz
inc
icebp
shrb
enter
adc
lods
xor
imul
adc
add
js
int3
flds
data16
mov
adc
mov
push
pushl
insl
jp
sarl
xor
xlat
push
mov
push
push
pop
lret
addb
lret
cmp
push
xchg
xor
push
out
out
or
and
mov
cmpsl
addl
cs
gs
int
inc
fmuls
add
dec
push
fldcw
rorb
pop
dec
add
inc
in
inc
repnz
add
mov
inc
js
sbb
cwtl
dec
movsl
dec
sbb
sbb
jp
xchg
jp
je
lret
imul
movb
dec
stc
out
jae
xor
mov
test
jo
dec
mov
push
dec
inc
mov
jmp
adc
cmp
inc
mov
idivl
jo
loope
aas
sbb
pop
adc
movsl
add
pop
xor
cmpl
pop
lret
js
dec
lahf
cmp
fs
arpl
shrl
or
xor
push
mov
xchg
sbb
and
insl
aas
mov
jecxz
or
add
xor
cs
mov
ror
xchg
lods
sbb
leave
mov
sti
mov
idivl
jl
scas
push
aas
aas
sub
mov
ret
push
ret
push
or
data16
das
fimuls
and
add
outsl
mov
popf
xor
lret
aas
add
cmc
xor
pop
add
in
sarb
in
mov
cmp
cmpsl
or
sub
leave
das
sub
xlat
movsl
inc
pop
mov
sbb
sbb
jp
sarb
inc
dec
mov
xchg
mov
mov
jecxz
push
std
loopne
jo
pushf
decl
and
fwait
mov
jle
pop
rcrl
call
lret
lea
mov
xchg
mov
loopnew
shll
lahf
xor
push
xor
mov
cltd
jp
xchg
jae
test
inc
sub
out
fsts
sbbb
or
cmc
andl
ss
xchg
inc
or
loope
pop
sbbl
loop
cmp
imul
cmp
test
cmp
push
push
mov
rcrb
je
inc
pop
push
outsl
push
jmp
in
leave
popf
subb
dec
pushf
aas
jae
lods
lods
xor
dec
push
leave
jae
sub
sub
add
mov
mov
sbb
div
cmp
test
bound
jmp
xchg
sub
hlt
or
cmp
push
inc
jle
sbb
std
inc
mov
in
call
jecxz
test
cmp
aam
ficomps
mov
pop
xor
adc
push
jb
adc
add
std
and
andl
cmpsl
inc
xor
aad
jne
mov
clc
mov
sar
xor
lret
mov
dec
enter
ja
lods
cmp
lods
insl
test
shll
mov
cmp
sbb
test
je
ljmp
leave
stc
xchg
outsb
or
fwait
mov
scas
data16
add
dec
lods
cmc
ficomps
add
fcomps
push
xor
int
rcl
enter
lret
add
int
out
push
pop
push
mov
jo
jmp
xchg
or
stos
lods
inc
hlt
xlat
or
add
in
add
mov
mov
add
xor
or
test
mov
insb
mov
adc
arpl
push
push
push
inc
stos
bound
out
outsb
mov
pop
jmp
mov
pop
and
xchg
lahf
inc
fs
mov
xor
mov
std
dec
xor
sbb
arpl
das
test
int3
scas
mov
fmuls
popf
push
adc
js
lods
mov
dec
xor
arpl
mov
jmp
sahf
pop
icebp
and
test
hlt
or
lock
and
pop
inc
sahf
sbbb
or
xor
fistl
lahf
pop
xor
add
aam
cld
hlt
ret
xlat
jb
mov
ret
cmp
xchg
mov
jb
inc
inc
out
pushf
cmp
inc
jb
rcll
fistpl
mov
mov
jbe
and
and
pop
xor
mov
adc
inc
xchg
mov
jecxz
inc
std
into
inc
add
lret
sub
mov
sahf
enter
push
aam
xor
sbb
or
int3
mov
sti
inc
cli
or
push
mov
frstor
popa
ss
pop
dec
jae
xchg
es
fdivs
inc
pop
gs
and
shr
dec
pop
or
inc
pop
push
lds
push
push
hlt
in
jnp
pusha
mov
mov
repnz
rcrb
dec
mov
mov
jbe
jg
insl
pop
lea
dec
sub
sbb
xchg
in
mov
addb
cwtl
cmpsl
add
dec
lds
jbe
pop
lret
out
cmpsl
pop
insl
scas
movsb
repnz
insl
sarb
iret
add
arpl
es
iret
push
je
pop
fs
cmp
pusha
stos
mov
dec
pushf
inc
pop
dec
cmpsl
mov
popf
bound
and
aam
out
mov
imul
xchg
insb
call
pushf
in
xor
mov
push
sbb
stos
mov
push
dec
sub
add
mov
and
adc
push
es
xor
js
dec
divb
jns
inc
imul
xor
lea
mov
pushf
out
nop
hlt
inc
mov
mov
pop
pop
jp
mov
imul
shrb
cmp
int3
adc
in
push
push
jg
cs
testb
les
lock
jns
jle
dec
stos
cmp
frstor
or
test
pop
mov
jp
inc
ja
int
int
loope
jge
lods
jae
movsl
xchg
shlb
and
sbbb
out
lods
sti
mov
addr16
mov
sbb
andl
mov
orb
push
lds
sahf
bound
clc
gs
fsubrp
mov
jns
jno
fadds
movsl
in
cmpsl
dec
push
jmp
mov
mov
nop
jg
add
nop
xchg
mov
add
arpl
push
je
push
je
popf
fs
test
push
jns
pop
pushf
adc
xchg
cmp
cmpsl
fisubs
rclb
cmp
add
popf
pop
pop
leave
mov
scas
pop
push
out
nop
decl
sub
shl
cmp
cmpsl
stos
aad
jne
out
jno
and
fucom
shlb
jmp
test
or
jge
insb
sub
pusha
push
test
mov
pop
scas
in
scas
pop
vmread
dec
sbb
and
sahf
andb
cltd
out
pop
sbb
loop
into
xlat
cli
pop
and
pop
into
push
repz
call
scas
mov
cltd
out
pop
add
jb
sub
inc
out
sbb
call
push
loope
cmp
sbb
ret
lods
imul
out
cmc
repz
xchg
jbe
jmp
pop
mov
leave
clc
rorl
add
ljmp
add
mov
xchg
lahf
jle
sbb
xchg
popa
jo
add
fimull
mov
test
js
add
sub
jle
jnp
sbbl
add
mov
ficoml
loopne
subb
xor
ljmp
insl
inc
cmp
lock
out
sub
adc
and
dec
movsl
pop
push
loop
popf
andb
notl
fdivr
iret
cmpsb
cmp
sub
add
ss
addr16
inc
add
movsl
cs
shr
and
int
lahf
fdivrl
gs
lods
mov
jns
lods
xor
sbb
adc
jecxz
push
bound
pop
cli
fmulp
sub
cmp
cmpsb
or
stos
or
xorl
mov
xor
adc
sub
test
cmp
jle
aas
fmuls
mov
dec
add
pop
in
push
popl
aam
daa
mov
add
or
mov
repnz
jno
test
sub
add
lea
add
fiaddl
pop
dec
sub
cli
jle
xchg
cmp
rcll
xlat
cmpb
test
sahf
loop
ror
int
insl
mov
dec
inc
push
sub
mov
jl
push
popa
jno
xchg
inc
ret
lock
mov
xor
cmp
fisubrs
std
mov
or
clc
je
icebp
repz
pop
push
cmc
imul
pop
rolb
ret
add
mov
mov
in
xor
push
outsl
mov
mov
pop
xchg
fcomps
icebp
jl
jp
or
cwtl
in
sbb
insb
push
pop
aam
int
mov
mov
pop
gs
testb
or
rcl
adc
adc
jns
ds
adc
mov
fcompl
int
dec
push
push
xchg
inc
data16
ja
mov
cmp
xchg
push
mov
ja
test
cmpsl
inc
fnstsw
fidivl
pop
daa
cmp
pop
outsb
dec
mov
inc
push
adc
js
jb
negl
mov
cmpsl
arpl
lock
sub
push
mov
add
popa
add
push
pushf
imul
lock
test
xor
sbb
pop
repnz
cmp
sub
imul
xor
rcr
dec
fldcw
dec
shrb
bswap
inc
mov
lock
int
xchg
negb
xchg
inc
mov
and
pop
repz
aad
loop
xchg
pop
mov
sbb
push
mov
sub
fmull
pop
xlat
shll
jne
das
popf
sub
pop
and
imul
jo
ficoms
jns
popf
mov
inc
adc
fldenv
repz
sbb
or
inc
loopne
jno
push
sbb
data16
mov
push
sahf
adc
dec
pop
adc
jl
mov
xchg
gs
gs
lahf
shlb
xor
dec
mov
dec
mov
sub
adc
sub
mov
mov
mov
lods
andl
mov
stos
sti
es
mov
les
fiadds
loop
or
lea
pop
int
cmpsb
popf
and
lret
sub
stos
test
test
cli
jg
pop
mov
pop
punpcklwd
aaa
cmp
mov
out
rcrl
mov
fs
inc
inc
ret
mov
push
xchg
mov
add
xchg
cmp
mov
int3
lock
jmp
jg
movsl
xor
xchg
add
pop
outsb
loop
lock
addb
jg
lret
push
inc
dec
xchg
movsb
pop
cmp
sbb
or
mov
xchg
mov
je
mov
jecxz
mov
pop
inc
pop
and
sub
dec
adc
jge
pop
mov
xchg
divb
daa
pop
ds
jbe
add
inc
inc
scas
add
sbb
inc
imul
ret
mov
int3
js
mov
dec
jl
push
test
pop
in
cli
int
and
cmp
push
loope
jno
mov
imul
push
ret
mov
fstps
jo
inc
push
addr16
adc
jns
je
sub
aaa
nop
xor
push
lcall
or
inc
out
jmp
cmpsb
adc
sbb
sbb
loope
xchg
jl
mov
add
push
pop
outsl
lcall
xor
sub
and
aam
mov
jg
sti
aad
fidivs
js
add
mov
push
sub
aas
or
bnd
nop
cwtl
stos
sbb
int3
adc
push
lcall
leave
inc
pop
jmp
lahf
dec
jns
mov
in
xor
add
mov
xchg
sbb
lcall
jl
dec
add
sub
or
bound
loope
push
xor
outsb
js
aaa
mov
fs
adc
shlb
adc
push
pushf
lds
xchg
pop
pop
mov
insb
mov
mov
inc
iret
fcoms
fistl
dec
xor
xorl
lahf
cld
xor
jmp
lock
mov
imull
xchg
cmp
fs
push
inc
inc
dec
dec
cmp
push
cmc
stos
movsl
jb
subb
lods
shlb
pusha
push
shl
sub
mov
cs
sbb
jl
in
jb
jge
inc
arpl
dec
gs
ret
cmc
insl
adc
mov
add
lock
adc
mov
mov
or
jbe
xchg
and
jge
push
pop
xor
dec
sti
sbb
jmp
call
add
pop
ret
lcall
popa
daa
xchg
push
ret
out
xor
hlt
and
loop
lret
insl
sub
xchg
fld
push
test
lret
orl
dec
sbb
bound
sub
and
ja
mov
and
out
imul
loopne
or
jmp
and
inc
lods
int
xor
imul
leave
jae
add
adc
sahf
je
sbb
inc
repnz
and
lcall
jp
cmp
aas
cmc
loope
shrl
lods
xor
sbb
pop
lods
out
pushf
repnz
mov
rcrb
or
or
push
mov
mov
pusha
push
jno
add
sbb
jecxz
xor
movsb
lea
mov
push
cmp
push
push
out
stos
pop
sbbb
aaa
in
stos
sbb
ret
pop
sub
data16
xor
outsb
call
adcb
fldcw
add
xchg
ret
sub
mov
inc
sbbl
lret
arpl
and
cwtl
push
cmp
cwtd
call
pop
cmp
ljmp
pop
cmp
dec
es
es
and
addr16
outsb
xor
sbb
jmp
inc
hlt
icebp
inc
jmp
data16
pop
xchg
jmp
mov
jmp
xor
mov
mov
movsb
popa
clc
xor
es
out
outsl
addr16
or
jnp
adc
or
xor
mov
into
adc
push
adcb
notl
xor
fxch
jle
psubsb
repnz
mov
clc
inc
push
ja
sub
mov
jp
bound
push
jmp
bound
pop
ret
jge
cmova
gs
sub
popf
ljmp
mov
stos
shr
push
adc
cltd
jo
sub
sub
cmp
jmp
cmp
sub
mov
jmp
cltd
adc
cli
xchg
insl
fdivrp
mov
ss
pop
repnz
imul
mov
inc
pop
aad
mov
aad
mov
cmpsb
add
sahf
inc
and
fcom
dec
sbb
lcall
push
lods
scas
arpl
arpl
mov
test
xchg
jnp
and
adc
shll
push
repz
pop
mov
cmp
lahf
sub
fs
data16
stc
pop
or
xchg
sub
pop
imul
jbe
sbbl
sub
rolb
call
in
xchg
sub
ret
add
shl
sbb
push
sahf
jge
sarl
mov
flds
push
mov
hlt
jo
pop
cmp
adc
filds
push
xchg
push
jl
lods
inc
out
ljmp
sub
xchg
rcrl
inc
loope
xchg
test
subl
and
mov
rcrl
adc
cmp
sub
es
or
sbb
xchg
mov
ljmp
clc
test
sub
stos
sbb
jmp
sbb
ficomps
je
mov
dec
sub
dec
rclb
jecxz
sahf
pop
sbb
je
jmp
adc
in
or
xor
lret
cmpsb
sbb
pop
movsb
jo
movsl
rol
lea
and
mov
mov
adc
sbb
pop
adc
jle
jge
popl
xchg
cld
add
int3
fstpl
xor
cs
out
push
fwait
xor
mov
pop
in
in
and
mov
mov
iret
jo
andb
movsl
inc
cmp
iret
push
daa
adc
mov
test
test
push
push
cmpsl
pop
add
add
add
popw
adc
jp
insb
sub
ret
inc
mov
sbbl
jle
add
add
jg
orb
mov
insb
mov
add
dec
rcrb
adc
into
sti
sbb
in
lock
push
push
mov
orb
dec
lcall
out
mov
addr16
aam
push
int3
fldl
pop
mov
sub
sbb
push
loop
jl
mov
jl
cmp
lcall
cmp
pop
aam
or
stos
lods
xchg
sbb
dec
xor
in
add
dec
mov
ret
adc
jns
dec
decb
lahf
flds
cmpsb
push
scas
pop
insl
dec
jno
cmp
xor
loop
les
lea
sahf
addr16
add
lods
lods
aam
rcr
pop
aad
xchg
push
xlat
js
xlat
scas
lods
fisttpll
mov
mov
imul
pop
into
pminub
cmpsl
or
jmp
adc
sbb
enter
mov
ret
push
xor
sbb
es
addr16
and
jecxz
scas
lcall
sbb
das
in
push
iret
sub
xchg
mov
fcmove
xchg
jp
sahf
dec
sahf
sbb
leave
sub
xchg
hlt
pop
std
pop
mov
shll
repz
sarb
out
cmp
mov
lods
mov
dec
push
daa
jnp
push
pop
pop
lcall
aas
sti
lcall
cmp
fidivl
mov
jl
add
mov
aas
bound
xor
xchg
push
or
push
loope
push
push
and
push
mov
movsb
cmpl
fidivrl
sub
adc
ja
push
ja
movsl
fnsave
mov
jmp
pop
lcall
jbe
dec
add
lret
mov
fwait
jns
outsb
push
inc
mov
jbe
xor
sub
xchg
js
lret
xor
aad
mov
insb
xchg
mov
add
jno
add
xchg
sti
jo
lods
ret
mov
cld
out
and
adc
add
fwait
pop
into
add
sbb
cwtl
mov
lods
sbb
frstor
ja
mov
scas
sub
icebp
mov
cmpsl
cmp
dec
xchg
mov
adc
mov
inc
xor
jnp
sbb
jo
jg
sti
mov
lods
cmp
inc
push
xchg
pop
sub
popf
xchg
js
sarb
push
mov
add
ret
subl
cmp
mov
mov
scas
fstpt
lahf
pop
sub
pop
jecxz
movsl
push
push
inc
mov
mov
jp
shrl
xchg
aam
add
cmp
mov
xchg
cwtl
and
cmp
jge
movsl
sub
add
rorb
jmp
push
mov
mov
jnp
filds
mov
sbb
cmpsl
lar
xlat
int
outsl
nop
scas
sar
and
pop
adc
mov
cli
in
or
daa
in
xchg
aad
cltd
data16
bound
popf
imul
jmp
dec
test
je
adc
dec
sbb
cmp
inc
dec
repnz
mov
xchg
mulb
shll
in
push
rclb
jne
push
shrb
and
out
movsb
jnp
mov
jns
mov
idivl
inc
rorb
xlat
mul
and
pop
movsl
lahf
push
pushf
or
lret
fidivs
jb
jns
aam
lea
or
adc
sbb
cmp
pop
push
outsb
leave
sub
inc
and
jno
fsts
xlat
mov
cwtl
jmp
add
push
mov
ror
xlat
iret
nop
pop
fsubs
mov
sarb
add
mov
mov
cmpb
aam
mov
push
pop
movsb
dec
enter
repnz
clc
or
adc
inc
sub
cltd
or
sub
cmp
cwtl
inc
std
push
cmp
sub
xor
jg
pop
pop
sbb
jbe
in
and
sbbb
fnstcw
mov
scas
sbb
das
adc
mov
sbb
test
fisttpll
inc
stc
jmp
sub
adc
je
filds
pop
cli
inc
dec
xor
cmp
push
sbb
mov
ret
call
cmc
jb
and
mov
xchg
lock
jmp
push
popa
xlat
xor
jns
in
inc
adc
cmpsl
shr
loop
pusha
movsl
push
mov
cld
nop
xchg
push
xchg
imul
lcall
imul
xchg
ficomps
ljmp
outsl
lock
cs
idiv
mov
dec
popa
push
xor
rcr
sub
call
mov
fwait
dec
add
enter
jne
stos
loopne
mov
inc
test
mov
cwtl
outsl
iret
or
inc
pop
or
mov
jb
jnp
or
fucom
sbb
adc
jo
or
xlat
cmp
loope
outsb
cmp
subl
lds
sub
mov
outsl
mov
test
push
testb
stc
outsl
pop
add
and
nop
dec
bound
jmp
mov
xchg
mov
inc
in
xchg
lahf
call
mov
or
sbb
jnp
mov
or
filds
loopne
out
xor
dec
mov
test
push
rolb
cmc
test
arpl
add
jl
dec
adc
out
lret
in
pop
pop
js
xchg
sub
pop
insl
add
mov
ja
dec
enter
clc
mov
sti
sub
mov
push
push
aad
into
cwtl
mov
adc
bound
inc
pop
loopne
jns
jne
and
push
mov
test
fistpll
shrl
les
popa
push
imul
mov
cli
cwtl
push
adc
pushf
push
pop
test
cmp
xor
cs
mov
ror
leave
push
mov
shlb
add
xchg
inc
xchg
daa
xor
inc
pop
push
jmp
cmp
cli
mov
call
into
add
aaa
inc
stc
test
ds
mov
daa
or
add
fadds
cli
mov
lret
mov
pop
aam
inc
pop
mov
pusha
outsl
setns
adc
fs
cmpsb
fistpl
test
ss
pop
mov
pop
std
clc
movsl
jno
mov
and
xor
and
outsl
dec
sub
push
imul
leave
arpl
ret
ljmp
and
add
je
stos
lcall
ret
cmp
sub
mov
mov
rorb
ljmp
pop
or
insl
xor
add
xlat
pop
shrb
and
sub
das
cmp
or
insb
jecxz
push
and
ss
adc
mov
push
or
mov
push
dec
into
xlat
jl
add
shrl
out
addr16
mov
mov
insl
lret
mov
mul
mov
jbe
mov
mov
lea
jl
movsb
mov
pop
es
fsubrs
in
lea
aad
adc
mov
and
ljmpw
int
scas
das
mov
jo
push
hlt
push
pop
mov
lods
mov
mov
into
test
adc
xchg
mov
mov
and
adc
dec
pop
mov
push
inc
or
adcb
jge
add
xor
and
aaa
inc
je
sbb
faddl
push
push
adc
push
or
mov
mov
and
int3
testl
mov
mov
out
dec
inc
fadds
enter
out
rcrb
ret
pop
sbb
dec
iret
cmp
test
mov
stos
shlb
in
pop
mov
int
pusha
cld
lret
jo
addr16
mov
add
clc
mov
and
mov
ret
insb
jmp
aas
mov
xor
mov
xchg
addr16
data16
repnz
sub
dec
cmp
jbe
fnsave
cmpsb
adc
jmp
add
or
mov
lea
or
data16
inc
dec
xchg
imul
pop
xchg
lea
jg
lahf
fsubrs
sub
mov
sub
pop
ljmp
ffree
or
mov
fbld
xchg
notb
mov
int3
push
push
in
es
push
movsl
mov
sub
movsb
clc
jae
jge
jmp
lea
sbb
mov
jae
mov
add
or
aam
mov
adc
ds
les
add
and
push
in
and
movsb
stos
dec
jecxz
cs
fisttpl
and
aas
popf
jl
cmp
inc
xchg
enter
movsl
xor
xor
xchg
loopne
fcmovbe
imul
sbb
inc
mov
and
mov
stc
int3
sti
jb
jne
pusha
and
les
mov
shlb
inc
loop
jae
pusha
clc
sbb
xor
ret
and
cmp
and
and
lret
jle
dec
sub
jno
movsl
push
lret
add
xor
lret
or
stc
clc
sbb
scas
pop
xchg
push
lahf
jp
and
mov
or
push
icebp
adc
dec
sbb
pop
pop
pop
shl
cmp
scas
adc
xor
mov
divl
ds
mov
sbb
bndldx
cli
fs
cld
mov
push
xor
push
leave
movsb
fadd
xchg
mov
pop
add
insl
popf
inc
in
mov
lods
in
test
adc
fiadds
or
or
arpl
jmp
test
push
pop
paddw
mov
insl
push
cmpsl
xchg
in
stc
loopne
inc
add
bound
ret
xor
pop
fisttps
xchg
cmc
jb
es
mov
orb
inc
arpl
or
fbstp
mov
out
push
sbb
push
add
addr16
test
out
stos
rcrb
mov
repnz
push
frstor
test
outsl
out
rcrl
repnz
pop
int
inc
cmp
mov
ret
clc
call
or
shlb
push
xor
addb
pop
ret
in
pop
dec
in
stos
pop
dec
cmp
pop
mov
ss
xchg
std
mov
pop
rclb
pop
xchg
andl
test
ficompl
adc
mov
adc
or
loop
push
icebp
add
and
out
mov
ds
or
xchg
rdmsr
rcr
jmp
imul
mov
pop
inc
mov
jle
lock
and
jbe
dec
mov
je
inc
imul
ret
and
adc
pop
out
xchg
mov
lret
xchg
adc
sbb
sahf
fnstsw
es
notb
lea
inc
into
imul
loope
mov
in
cli
es
scas
mov
adc
addr16
std
add
and
and
and
pop
xchg
xor
pop
push
adc
jle
and
rcll
or
lock
and
lret
pop
adc
mov
mov
adc
rcrl
pop
sub
outsl
das
cs
ds
adc
leave
adc
xchg
imul
adc
push
sysret
in
xor
sbb
test
mov
lret
push
mulb
push
repz
imul
je
testb
imul
push
lea
cmp
loopne
es
outsb
jle
lret
add
mov
jo
pop
loope
test
cmp
jmp
lret
xor
lods
test
mov
xlat
or
jb
sub
add
cmpl
sbb
and
out
rep
out
mov
push
jbe
and
and
lods
movsb
sub
pushf
sbb
ror
int
imul
lahf
mov
push
adc
movsb
xchg
out
fcompl
xor
sbb
push
cld
mov
arpl
divb
dec
jns
cmpsb
push
cmp
sti
mulb
lods
mov
mov
loope
cmpl
aas
lock
cmpsl
mov
jbe
es
movsl
ficoms
xchg
in
inc
fadds
loopne
push
cli
insl
sub
mov
jb
ret
mov
aad
test
iret
xchg
mov
lods
cmova
and
mov
je
sbb
ficoms
xchg
icebp
pop
mov
out
mov
call
ds
cwtl
in
lea
pop
lods
shrl
js
js
xchg
pushf
add
xchg
ljmp
jae
cltd
mov
repz
xor
xor
into
mov
ficomps
cmpsl
cmp
jg
mov
lcall
lea
cmc
xchg
mov
push
ret
in
test
aas
mov
cmp
mov
inc
lds
iret
stos
xor
cmp
fadds
jo
or
lahf
add
xor
in
sub
pop
rcrb
pushf
jecxz
test
movsb
dec
push
cwtl
movsl
in
rorb
jp
iret
sti
rol
sub
cmp
imul
daa
aas
subb
imul
or
mov
fstp
or
dec
xor
cld
mov
daa
lods
pop
mov
add
xor
and
rorl
cwtl
sbb
mov
inc
cli
decb
clc
mov
mov
lahf
pop
jg
repnz
push
in
jmp
sub
xchg
out
adc
insl
out
pop
rolb
enter
sub
and
jle
stos
insl
cmp
xchg
xchg
lods
outsb
sbb
pop
je
push
jne
neg
fcoml
sub
int3
cmp
push
mov
adc
push
std
int
xor
nop
nop
inc
jge
and
cmp
popf
sahf
daa
push
xchg
in
jle
fdivl
push
adcb
pop
xor
cwtl
jg
mov
dec
and
stc
fs
int3
push
rcll
psrad
mov
mov
dec
inc
jecxz
decb
sti
or
jmp
ds
movsl
leave
xchg
xchg
into
stos
dec
xchg
dec
mov
xor
movsl
iret
dec
xchg
ja
aas
pop
ret
fadds
nop
mov
movsb
jecxz
mov
inc
icebp
testb
es
or
into
inc
xor
and
imul
stos
mov
add
ficomps
cmp
pop
inc
sub
lods
mov
push
mov
insb
shlb
pminsw
jb
add
lods
test
mov
cmpsb
enter
subw
or
jl
adc
mov
sbb
xchg
into
movsb
outsl
aad
scas
je
loopne
sub
push
fildll
mov
mov
dec
sbb
lea
and
xchg
push
xchg
jg
jp
scas
repnz
xor
add
inc
inc
mov
int3
jae
add
or
shll
test
mov
movsl
or
ss
loope
hlt
cld
movsl
mov
das
jl
adc
in
in
inc
pop
push
outsl
outsl
cmp
out
es
nop
mov
dec
hlt
adc
insl
pop
fcomp
sub
jecxz
sbb
xchg
sbb
gs
sub
out
lock
int
cmpsl
push
daa
jecxz
push
fwait
dec
jle
mov
movsl
mov
mov
out
in
jmp
cmp
add
shlb
movlps
addl
lret
ficomps
stos
jnp
inc
sub
mov
cmpl
xor
mov
and
lahf
sub
and
cltd
nop
dec
inc
or
push
dec
nop
in
sarl
hlt
jle
mov
push
jae
lods
incb
lds
push
int3
nop
xlat
lea
shll
stos
xchg
and
mov
xchg
fadd
or
andb
hlt
ret
pop
fnsave
push
jge
pop
xchg
jb
imul
rorl
jbe
loope
aaa
mov
fcompl
cmp
xor
push
sbb
lret
pop
lret
sahf
jge
inc
inc
push
hlt
sahf
arpl
xchg
xchg
push
aaa
test
sbb
cmp
fnstenv
lods
fadd
and
enter
stos
daa
mov
xor
cli
mov
in
movsb
shl
faddl
mov
std
pop
fs
push
cwtl
jbe
arpl
mov
fs
sub
mov
cmp
inc
and
adc
cwtl
aad
mov
fmuls
leave
call
jecxz
fwait
inc
aam
in
xchg
or
hlt
nop
xchg
pop
adc
jbe
in
jmp
or
jmp
dec
ljmp
jb
xor
jmp
inc
sub
shl
jno
insl
lahf
sbb
xor
jmp
adc
mov
in
pop
lret
dec
ljmp
shrb
push
mov
jg
xchg
sub
mov
les
sbb
push
mov
mov
adc
xlat
stos
inc
jbe
ffree
cmp
jno
ss
and
mov
adc
xchg
int
inc
pop
bound
push
ljmp
shlb
jmp
fmulp
cmp
ret
jbe
mov
gs
add
cmp
call
jno
push
imul
out
pop
push
loopne
sub
mov
fmul
pushf
adc
inc
popf
and
rorb
cwtl
jg
push
and
add
leave
nop
inc
mov
iret
cmp
adcb
test
ljmp
test
push
push
and
sbb
add
aaa
scas
add
adc
lock
frndint
add
stos
jns
outsl
or
mov
push
leave
inc
and
sbb
sbb
adc
shll
xor
scas
cmp
cmpl
adcb
out
scas
dec
cmp
in
scas
sarl
jbe
mov
push
xchg
xor
fildl
or
dec
mov
idivl
xchg
mov
sub
mov
push
add
pop
adc
fs
sbb
bound
addr16
inc
into
and
outsl
repnz
push
fwait
je
daa
dec
mov
xchg
mov
xor
shl
and
sahf
xor
gs
mov
cld
lret
in
leave
xchg
fwait
imul
push
xchg
testl
xchg
stc
nop
in
and
mov
dec
iret
mov
hlt
addr16
test
xlat
sarl
or
pop
dec
repz
xchg
sbb
data16
sub
add
outsb
sbb
and
and
scas
enter
jno
out
sub
jg
mov
add
jmp
out
mov
scas
adc
dec
mov
sub
jae
and
test
sub
scas
jae
sub
sbb
rcrb
test
outsl
nop
mov
in
cmc
rcr
cld
das
sbb
popa
mov
movsb
addb
jl
jno
add
ja
arpl
out
loope
xchg
mov
mov
mov
lcall
jno
jge
ds
pop
lcall
adc
adc
fdivl
push
push
test
mov
mov
xchg
xlat
clc
imul
mov
jae
mov
cmpsl
rcrl
fld
sbb
mull
and
jo
add
add
mov
pop
lods
js
test
dec
cld
adc
inc
in
xchg
inc
jg
lds
fisttps
cltd
xchg
sarl
push
pop
pop
sub
notb
test
sarb
cwtl
sbb
scas
imulb
xor
sarl
add
xchg
mov
sbb
rorb
jae
mov
sbb
xorw
cmp
int
fimull
jo
fisttps
adc
mov
fsubr
inc
jg
in
xchg
ret
nop
xor
lcall
mov
inc
loop
test
xor
loope
xchg
lods
fld
test
loopne
cli
cmp
sbb
outsb
je
mov
addr16
push
stos
ret
adc
imul
fisubrs
pop
mov
inc
pop
fidivl
out
icebp
std
mov
and
arpl
aaa
int3
cwtl
imul
pop
mov
adc
sub
inc
fdivrs
insb
into
push
add
ja
imul
stos
pop
xlat
cmp
fcoms
inc
repnz
xorb
sbbb
push
cmc
push
push
popa
testb
jne
mov
loopne
push
mov
jle
fiaddl
sub
add
lds
pop
mov
xchg
mov
aad
movsl
xchg
mov
frstor
fcomi
movsb
jle
aas
mulb
dec
dec
mov
enter
dec
aaa
loopne
mov
mov
stc
mov
add
mov
inc
aam
xchg
add
fsubr
inc
pop
lcall
and
mov
out
loope
ret
rorb
out
inc
sbb
fnstsw
sbb
out
adc
out
fisubrs
test
add
popa
mov
lea
add
adc
mov
cmp
sahf
pop
jns
inc
mov
mov
jge
adcl
cmpsl
inc
movsb
repnz
stos
ds
mov
pop
iret
jmp
gs
adc
jno
data16
mov
sub
call
ss
pop
adc
and
lds
in
dec
das
sti
push
ljmp
into
addr16
inc
sub
ja
adc
pop
or
xchg
push
and
ljmp
sub
add
cli
mov
jmp
data16
jecxz
ret
xchg
inc
mov
sub
push
fistpll
pop
xor
cmp
test
mov
jae
mov
sub
out
xchg
pop
or
loope
mov
fs
sub
imul
sbb
test
and
in
lret
aad
lea
jmp
mov
cmp
pushf
repz
xchg
sarl
mov
jge
les
test
xor
mov
mov
addl
lret
mov
pusha
fcmovbe
test
and
xor
xchg
mov
imul
sub
ret
into
cltd
fwait
mov
push
or
sub
cmpb
inc
js
into
inc
push
test
jl
xchg
stos
push
insb
ss
repz
jle
out
repz
pusha
and
lock
push
loopne
pop
or
jae
cmc
jg
daa
jecxz
cmp
jne
arpl
mov
outsb
mov
push
inc
add
pop
imul
mov
xchg
outsb
scas
sub
adc
sbb
xchg
push
test
mov
xor
cli
mov
push
pop
cmpsb
push
ja
popf
push
inc
cwtl
hlt
mov
sub
cs
and
pop
in
cld
out
and
mov
imull
sbb
jp
and
ret
jne
push
pop
jmp
stos
mov
mov
ss
xor
xor
movsb
push
cld
jb
sbb
xchg
mov
sub
leave
fnstsw
je
push
xchg
mov
in
xchg
aaa
push
sub
scas
push
addl
dec
xlat
out
adc
sahf
fldenv
fldt
inc
fwait
test
call
int3
sub
xlat
outsb
pop
inc
mov
es
cmp
daa
jae
jmp
test
adc
nop
jo
pushf
xlat
subb
rcll
jb
jae
mov
fdivrp
jnp
push
outsl
mov
inc
and
movsl
fcompl
dec
jno
out
xchg
call
push
dec
or
jbe
jmp
jbe
xor
icebp
test
clc
out
in
jbe
jge
push
or
mov
add
jmp
dec
xlat
dec
ds
mov
cli
lret
roll
incl
adc
lds
fdiv
repz
sbb
mov
jecxz
inc
arpl
scas
jae
mov
imul
notl
xchg
inc
inc
aaa
dec
push
mov
add
mov
and
push
faddp
jl
inc
mov
mov
addb
mov
sahf
sbb
je
or
push
fst
test
arpl
or
mov
jmp
push
cld
or
xchg
shll
xlat
cmp
addr16
push
ljmp
rclb
dec
incl
rcrl
inc
pushf
push
sahf
mov
pop
daa
jns
mov
xchg
pop
mov
mov
mov
movsb
xadd
mov
movsw
mov
lahf
ret
pop
dec
fisttps
rclb
or
test
push
test
and
push
sbb
inc
add
add
push
popa
std
mov
repnz
jp
aam
stc
sbb
arpl
inc
inc
in
mov
mov
mov
or
rcll
mov
fimull
sbb
nop
lock
mov
mov
fadds
decl
lcall
sbb
aad
in
sbb
adc
mov
cli
push
xor
or
jno
xchg
scas
in
xor
mov
dec
mov
dec
jecxz
bswap
pop
add
add
xchg
insb
pop
imul
fsub
movsl
loopne
stos
repnz
hlt
into
jo
ja
sti
movsl
or
sub
test
xchg
jecxz
sbb
mov
mov
sahf
jg
mov
lods
pusha
mov
fbstp
fs
push
icebp
lahf
sti
adc
cmpsl
xchg
xchg
imul
ret
xor
xchg
repnz
adc
xor
cli
cmp
xchg
xchg
inc
mov
mov
scas
repz
cld
xchg
dec
jno
cmp
or
stos
lcall
jnp
or
test
or
xchg
or
or
pushf
cli
push
ret
inc
dec
mov
mull
cmp
fs
sub
pop
mov
xlat
pop
loopne
push
divb
add
inc
dec
push
dec
hlt
jb
lods
mov
popa
movb
jge
je
xchg
pop
out
rclb
jnp
movsl
out
les
dec
mov
and
jae
sub
mov
xchg
icebp
sti
xor
loopne
xor
cmp
sub
xchg
icebp
test
enter
lods
stos
aaa
mov
xchg
movsb
pop
jp
cmp
in
fstl
scas
into
push
lea
jmp
call
add
pop
aaa
daa
popa
xchg
addr16
push
dec
int3
ret
cmp
rol
pop
movsl
or
arpl
outsb
call
xchg
gs
add
into
std
jne
loop
ficoms
sbb
shll
fs
xor
push
pop
push
xchg
and
clc
jo
xchg
mov
sub
xchg
adcl
xor
pusha
jo
lods
scas
sbb
dec
ljmp
or
andl
stos
pop
or
mov
mov
cli
lret
cmp
lahf
or
stos
ficoml
xor
jno
ds
icebp
jmp
mov
jbe
mov
je
fadds
push
mov
hlt
fldt
repz
ja
adcl
xor
mov
mov
in
add
or
adc
adc
and
xor
orl
scas
cmp
push
mov
cmc
cmpsl
test
popf
fst
dec
jb
mov
jge
sarb
mov
push
nop
inc
es
dec
xchg
or
cltd
inc
mov
and
shlb
sub
and
xor
xchg
fisubs
nop
pop
scas
push
leave
mov
sbb
xor
imul
xor
pop
mov
iret
push
iret
test
adc
and
imul
mov
scas
ljmp
outsl
enter
xlat
pusha
or
in
dec
inc
jp
stos
mov
movsb
and
fldcw
stc
jp
popa
pop
hlt
xor
and
sbb
push
cmp
jo
sbb
push
xchg
int3
ja
sti
and
data16
xlat
mov
stos
andl
sub
pusha
add
add
movsb
jmp
les
xor
inc
mov
cmpsb
out
clc
js
test
jae
fs
nop
mov
idivl
push
jmp
ret
stc
jb
repnz
loop
mov
inc
inc
sahf
cs
add
imul
inc
popl
movsl
xor
inc
xor
arpl
xlat
test
mov
cmp
fdiv
stos
idiv
add
xchg
loope
adc
xchg
adc
mulb
aam
movsl
cmp
ja
ss
mov
push
fisubs
test
lock
repz
mov
in
push
in
mov
xchg
cltd
mov
mov
cmp
cmc
inc
clc
add
imul
add
out
or
mov
inc
cmp
loopne
mov
ret
fisubrl
adc
dec
pop
inc
add
sbb
addr16
cld
xor
push
xchg
mov
inc
nop
test
xor
stc
test
push
je
mov
iret
xor
js
insl
mov
and
into
xchg
mov
sbb
fnstsw
shr
out
mov
xchg
sub
jg
subb
pop
jle
jl
iret
inc
insl
outsb
push
cmc
lods
xor
ret
lret
jecxz
adc
dec
inc
es
sbb
cld
popf
push
xchg
cmpsl
xor
and
lret
mov
lods
stc
pop
xor
xchg
fcmovne
dec
mov
sub
scas
jp
fnstenv
cwtl
sbb
daa
cmc
fsubr
cmp
mov
test
and
jo
or
xorl
xchg
xchg
xchg
push
loop
cltd
or
mov
pop
test
mov
jo
adc
rolb
lret
repz
rcll
push
cmp
stos
add
mov
sub
xchg
aad
jns
movsb
sbb
movsl
cmp
insl
mov
aam
shrb
data16
sti
sbb
call
and
cmp
xchg
mov
jae
leave
repz
lods
dec
jmp
mov
jnp
mov
pop
jg
push
jbe
and
data16
lods
repnz
mov
pop
lock
push
push
mov
mov
das
or
mov
pop
push
push
xor
lds
rcl
inc
lock
lock
inc
add
mov
out
repnz
icebp
lea
aas
add
sbb
xchg
mov
adc
mov
out
orl
cmp
cli
jne
xchg
dec
test
loopne
shll
cli
int3
jnp
mov
xchg
sti
sbb
iret
pop
stc
ljmp
and
xchg
mov
addr16
leave
xor
fucomp
xchg
jge
jne
xchg
or
xor
jmp
push
mov
pop
mov
or
jmp
jnp
je
dec
clc
imul
pop
mov
sub
sub
jge
and
dec
sbb
and
and
mov
lock
popf
mov
rcrb
rolb
inc
dec
mov
in
and
sub
push
jbe
sub
dec
push
call
inc
jmp
fstpt
cmp
or
mov
adc
fsubp
adc
hlt
mov
es
mov
sub
dec
out
movsb
xchg
dec
ss
mov
sbb
inc
std
clc
scas
les
das
mov
inc
pop
xor
setae
add
and
rorb
push
dec
cmp
int3
mov
cmpsl
jmp
xchg
and
mov
mov
and
pushf
fcomi
inc
mov
pop
fisubs
adc
das
outsl
add
or
sub
push
cs
lret
pop
push
ljmp
cmc
lods
mov
rolb
mov
movsb
arpl
pusha
clc
std
iret
cmp
mov
ret
sub
fildll
imul
xor
add
xor
inc
daa
push
dec
cmpsb
cmp
repz
loop
mov
movsl
testl
in
decb
cmp
ljmp
loop
xor
adc
scas
js,pn
cmpsb
inc
aas
les
jnp
cmpsb
add
pop
jno
jns
popa
imul
adc
add
sub
mov
mov
cmp
dec
outsb
dec
inc
ret
jle
push
nop
xchg
pop
xchg
mov
enter
xchg
mov
mov
push
pop
bound
loop
mov
cmp
xchg
cld
fbstp
push
push
imul
sbb
loop
push
imull
scas
outsb
bswap
mov
fildl
js
xor
xlat
xchg
fwait
mov
sti
mov
jb
aad
movsl
add
fdivs
jno
dec
cmp
mov
dec
out
mov
dec
mov
idivl
fwait
aaa
fsts
pop
inc
jo
outsb
jbe
and
test
or
mov
daa
push
pop
cld
test
mov
pop
lahf
icebp
xor
dec
imul
sub
std
lock
into
out
hlt
inc
scas
dec
mov
nop
mov
ja
and
adc
mov
and
mov
dec
and
sbb
jl
sub
mov
dec
in
inc
sbb
clc
dec
scas
mov
fldcw
jge
loop
or
lret
cmp
mov
sub
mov
sbbb
aas
xlat
fmull
lahf
sarl
clc
sbb
fwait
adc
cmp
icebp
jns
push
mov
lret
enter
lret
inc
aaa
and
mov
orb
out
push
and
call
adc
or
xchg
shl
ds
out
sbb
inc
repnz
addb
lods
ss
movsb
push
sbb
addr16
mov
pop
xchg
lret
fistpl
int3
dec
shrl
test
and
cmp
adc
in
jb
fadds
jg
mov
lret
call
sahf
ljmp
or
stc
mov
mov
xchg
ret
insb
idiv
outsb
enter
sub
fwait
xchg
scas
adc
cmp
xchg
add
iret
out
out
adc
inc
es
cmp
sahf
jmp
cld
decb
repnz
lods
jae
adc
stc
insb
adc
pop
dec
rcll
adc
add
ret
add
mov
xlat
inc
mov
jecxz
and
pop
nop
jne
fstp
inc
dec
fwait
lret
jno
add
jns
sub
push
inc
mov
and
push
sub
mov
inc
subps
dec
inc
sbb
or
fadds
mov
and
lods
rorb
xchg
lret
loopne
cwtl
gs
in
inc
test
jmp
sub
dec
loope
and
stc
out
je
movsl
sub
cld
andb
sbb
push
pop
lret
jecxz
int
push
and
lock
idivl
out
and
pop
arpl
mov
jae
push
mov
jbe
aam
cmp
pop
push
mov
subl
xchg
fsubl
and
mov
movsl
jnp
push
aas
sbb
rcll
jl
shlb
icebp
dec
or
pop
adc
sbbb
negb
gs
adc
cmp
adc
cwtl
in
sarl
cmp
push
jne
je
shll
push
xor
lret
or
pop
and
addr16
mov
mov
add
and
sbb
imul
dec
mov
stos
ljmp
aaa
cmp
push
lahf
js
pop
in
test
adc
sbb
mov
sbb
inc
jns
and
xchg
imull
sti
cmp
outsb
or
dec
je
out
jle
cli
les
mov
lock
dec
in
loope
pop
jbe
and
mov
mov
lds
sub
popf
xor
insl
or
dec
int3
pop
mov
addb
insl
mov
mov
push
stos
fidivs
mov
dec
xorb
inc
xchg
sti
fmul
jbe
adc
dec
shll
pop
movsl
add
jnp
inc
push
lahf
push
icebp
sub
std
add
repz
jle
dec
pop
mov
jbe
std
adc
lock
ret
negb
ret
sbb
xor
je
sub
call
push
lahf
mov
nop
cld
call
cs
jns
ja
push
ds
bound
push
pop
jmp
clc
mov
inc
xlat
inc
leave
ds
mov
xor
dec
sbb
lret
ret
dec
lock
pop
mov
mov
mov
or
movsl
xchg
fwait
xchg
cmp
and
imul
in
les
out
xchg
xor
inc
stc
mov
mov
inc
and
push
sub
lods
inc
add
shrb
sarl
pusha
fistpl
sub
hlt
sbb
ret
pop
outsl
lcall
mov
insb
inc
push
cmpsb
jbe
scas
jmp
aaa
stos
mov
das
push
pop
sbb
pop
fchs
arpl
icebp
sbb
icebp
int
and
sub
adc
xchg
out
add
jle
push
aas
arpl
mov
jg
test
inc
hlt
outsl
pop
dec
dec
leave
mov
mov
pop
mov
or
testb
jnp
dec
or
push
js
dec
sub
xchg
ja
push
cli
sub
push
xchg
aaa
ja
cltd
mov
add
fistps
pushf
xchg
scas
jbe
cmp
push
or
lock
rcr
daa
mov
std
adc
mov
xor
adcl
pop
daa
sbb
stc
roll
cmp
jnp
mov
hlt
cli
outsl
sub
icebp
mov
jle
arpl
adc
dec
xchg
lods
rolb
add
outsb
bswap
cmp
outsl
movsb
cmp
jns
popf
jge
out
rcll
out
aad
pusha
pop
push
mov
jb
xchg
jae
cli
ret
inc
or
je
inc
dec
sub
shlb
jg
xchg
or
push
cs
xchg
xor
xchg
outsb
mov
inc
jnp
mov
cmc
jecxz
ret
gs
test
cmp
out
xchg
aam
mov
push
xchg
sub
mov
repnz
jle
gs
mov
js
pusha
push
cmpsb
mov
movsl
lahf
sbb
call
mov
xchg
pop
mov
insb
xor
push
xchg
lds
sbb
mov
into
lods
cmp
pop
shlb
dec
push
in
out
push
cmp
mov
cltd
mov
and
arpl
mov
and
les
xchg
daa
movsb
pop
mov
xor
sub
xchg
cmc
pop
jecxz
jnp
push
and
sbb
daa
es
nop
push
jmp
mov
arpl
adc
jno
lahf
add
ret
aad
pop
sahf
inc
out
nop
push
mov
cmp
std
hlt
sub
loopne
adc
jbe
xor
mov
push
mov
add
jmp
lea
cmp
cmp
and
enter
repnz
jae
loopne
clc
mov
xor
ljmp
or
cmp
sar
dec
pop
push
mov
fs
adc
scas
shl
repz
jmp
dec
add
dec
mov
sarb
push
sbb
adc
jg
jl
aaa
test
daa
inc
ja
das
pop
inc
in
jg
adc
jnp
leave
int3
dec
in
dec
push
es
orl
xchg
xchg
arpl
lods
mov
fisubrs
mov
bound
push
xchg
fisttpll
inc
cmp
push
or
ficoms
inc
or
add
cmp
popa
ret
or
loope
jne
ss
popa
jmp
sbb
stc
lret
lods
cmp
mov
pop
push
xchg
mov
jl
movnti
push
mov
xor
ret
pop
mov
mov
and
jno
or
mov
mov
cltd
movsl
lds
loope
ffree
sbbb
stos
iret
mov
jb
sbb
add
gs
inc
or
lea
int
push
rolb
mov
les
lahf
sub
aam
add
cmp
std
jb
sub
lods
gs
pop
int
loop
mov
in
push
repz
pop
adc
popf
mov
and
cmp
mov
leave
or
xchg
mov
andl
jge
lret
sbb
rcll
and
pop
mov
cli
adc
cmp
test
dec
jbe
and
jnp
out
ret
inc
sbb
mov
into
xor
jb
cmp
add
leave
mov
add
sub
fs
je
sbb
lods
aad
push
ret
out
jg
pushf
test
mov
adc
imul
in
cli
iret
mov
fsub
xor
adc
xchg
cli
repz
xchg
jbe
mov
mov
push
ret
xchg
or
dec
fists
jae
movsb
in
stc
jb
jecxz
ja
inc
movsb
fisttpl
rclb
dec
jp
mov
jge
loope
xchg
dec
sti
mov
dec
sub
push
xor
mov
jne
xor
dec
push
cmpsl
sub
pop
sbb
xorb
mov
mov
lods
sti
add
loopne
xchg
aas
les
lds
or
aad
jae
int3
mov
js
ja
and
jo
rolb
or
in
xchg
adc
mov
adc
sub
push
or
fisttps
mov
lret
jge
push
pop
xchg
xchg
shll
repz
gs
mov
push
mov
fsubrs
mov
pop
xor
mov
ficoms
popa
or
aas
cmp
ljmp
aaa
pushw
outsb
adc
xchg
and
out
in
cmp
jne
jg
in
cld
pop
lock
push
mov
test
out
loop
push
scas
les
out
xor
jmp
sbb
mov
jae
pop
ljmp
leave
and
xor
das
push
mov
enter
imul
pop
aad
cmp
adc
cmpsl
lods
inc
cwtl
or
outsb
loopne
mov
cmp
scas
mov
std
aad
lahf
popa
push
insb
push
jg
pop
jp
outsb
sub
pusha
stos
int3
adc
inc
mov
sbb
cs
filds
and
repnz
jo
cmpsl
fdivl
dec
orl
mov
mov
push
frstor
fs
repnz
dec
scas
cmpsl
xor
jmp
xlat
sbb
inc
inc
pop
fisttps
aaa
adc
ficoms
ja
cmp
adc
sbb
sbb
jmp
jns
imul
fbld
fmulp
sbb
fdivrs
and
pop
mov
sbb
mov
in
add
arpl
xchg
dec
push
fld
leave
shlb
dec
sub
daa
lock
and
pop
neg
lds
or
and
adc
xor
ss
das
iret
loopne
or
and
jmp
leave
pop
adc
pop
cmpsl
or
pop
shlb
fcoms
jecxz
ret
pop
movsb
adc
les
add
stos
icebp
cmp
lds
pop
adc
add
and
xor
icebp
xor
decb
arpl
jo
popf
mov
cli
sub
dec
jp
xchg
add
or
xchg
cmp
or
data16
or
fucomi
lcall
into
mov
mov
aaa
adc
sub
add
sub
mov
pop
int
push
daa
pop
inc
sti
fbstp
pusha
cs
dec
xor
and
nop
fdivrl
sbb
stos
and
clc
push
xchg
xchg
ret
dec
roll
mov
xor
xchg
loopne
nop
inc
iret
lea
sub
hlt
clc
xchg
jmp
jmp
adc
popa
iret
mov
push
mov
lret
sbb
aad
arpl
push
mov
stos
xor
push
add
jle
sub
lods
fdivrl
lods
lods
out
push
lcall
pusha
mov
ja
adcb
ja
stos
cmpsb
inc
push
fcompl
push
pop
test
inc
mov
js
xlat
cmp
cmp
loop
sbbl
adc
int3
out
popl
xchg
dec
xchg
into
lods
pop
add
dec
dec
sarb
int
scas
sahf
sbb
popa
in
call
mov
mov
dec
adc
inc
shlb
jp
das
not
out
aaa
dec
mov
aaa
cmpsl
ss
or
jne
scas
add
call
add
mov
jb
push
lds
mov
hlt
es
add
mov
daa
int
loopne
mov
fstpt
das
xor
xchg
fxtract
sbb
fsubp
jb
insb
adc
mov
shr
int
in
push
fisubrs
test
into
dec
mov
adc
iret
and
mov
or
push
ja
inc
cwtl
cwtl
mov
imul
xor
loope
push
das
jae
cmp
xor
inc
xchg
in
lcall
bound
cli
call
stc
mov
lcall
mov
sbb
data16
sub
or
xchg
mov
adc
outsb
xchg
inc
leave
mov
out
neg
leave
sub
js
insl
sub
repnz
jne
loopne
sbb
jb
scas
mov
inc
lods
stos
dec
adc
xor
push
imul
aas
ret
out
stc
rol
pop
inc
cmp
testl
mov
mov
dec
daa
loopne
ljmp
fwait
and
fwait
jg
dec
lods
sub
pusha
push
clc
test
stos
pop
cmp
dec
xchg
and
lea
push
or
pusha
xchg
int3
hlt
adc
out
hlt
push
leave
fucom
pop
cmp
aas
cld
jmp
xor
jmp
push
xchg
mov
pop
sub
xchg
fsubrp
fidivl
cmp
cmpsb
mov
xor
js
lods
xor
in
dec
add
outsl
xchg
mov
bound
jae
in
lret
pop
sub
dec
shl
sbb
popl
cmc
lret
xor
fadd
dec
xchg
filds
mov
push
cmpb
dec
inc
icebp
je
or
pop
aad
xchg
cmovle
daa
cmp
rolb
pop
mov
xor
sbb
lods
int
pop
sub
call
push
les
sar
push
arpl
aas
xor
sub
lcall
lcall
in
data16
jo
stc
xor
stos
aaa
jmp
clc
push
cmp
sub
cs
dec
mov
movsb
mov
cmp
not
in
jle
pop
mov
and
push
adc
inc
lret
loop
adc
pushf
push
or
mov
mov
cmp
lds
jns
jnp
fldpi
cmp
pop
insl
or
aas
mov
pop
mov
add
cli
xlat
mov
ret
ljmp
dec
hlt
jge
aam
fwait
adc
out
dec
lods
mov
test
jno
push
sub
lret
ffree
jl
dec
andb
and
hlt
pusha
stc
xchg
fwait
das
ret
icebp
mov
test
cmp
push
push
aam
rorb
std
cmp
jb
add
cmc
mov
jmp
sub
lret
stos
pop
ds
or
pop
add
aam
out
sub
lret
inc
add
mov
pop
loope
sub
enter
mov
out
lcall
push
jne
jl
inc
enter
jbe
adc
mov
loopne
and
xchg
pop
mov
mov
cltd
andb
daa
cmp
mov
jnp
and
mov
in
push
adc
popa
sub
dec
xchg
fnstsw
cmp
gs
or
out
mov
sbb
push
push
mov
or
loopne
pop
jl
orb
sbb
hlt
push
jbe
insb
sub
xor
xor
mov
dec
shrb
scas
cmp
sbb
test
mov
mov
adc
dec
and
clc
push
pop
fldl
push
fs
andb
inc
ret
push
out
xor
inc
jne
int
testl
shll
ja
popfw
and
mov
pop
mov
les
rolb
inc
fisubs
in
mov
sbbl
sbb
adc
mov
adc
aaa
dec
movsb
js
jmp
xchg
test
jge
in
into
jnp
adc
jg
xor
dec
call
repnz
mov
add
test
xlat
push
xchg
data16
inc
fcomps
cs
mov
insb
inc
adc
adc
dec
jl
cmpsl
sbb
mov
xor
jns
cld
or
sub
mov
scas
cmpsl
stc
movsl
cmp
mov
xchg
cmovl
fcmovu
decb
dec
mov
and
adc
sbb
aas
mov
and
jo
or
mov
cmp
or
stc
mov
frstor
fisttpl
rcrb
test
lret
outsl
mov
out
jnp
ljmp
lahf
das
inc
xlat
jb
pop
jo
mov
push
xchg
cmp
and
and
faddp
outsb
mov
cmpsb
pop
daa
js
in
daa
movaps
les
dec
cmp
sub
inc
mov
fnstsw
sub
dec
pop
icebp
sbb
cmpsb
xchg
xchg
ljmp
sbb
repnz
pop
xor
imul
into
decl
xchg
call
mov
mov
and
or
shll
fdiv
xor
aaa
add
xchg
mov
cmp
jp
ja
dec
pop
cmpsb
popf
pop
pop
cltd
push
adc
dec
cmc
arpl
rolb
pusha
sbb
push
in
cs
fcomps
mov
mov
mov
pop
ss
jae
outsl
cs
jmp
rorb
enter
in
testb
xor
popf
push
enter
dec
sub
sarb
loope
pop
out
jmp
mov
mov
dec
adc
imul
ja
sbb
mov
inc
mov
and
imul
xor
inc
or
rclb
iret
sbb
xor
cmp
cli
add
outsb
hlt
dec
and
faddl
repnz
lea
das
pop
mov
push
bound
das
sub
popa
add
fsubrl
aam
sub
hlt
mov
mov
pop
fwait
jbe
add
outsl
pop
popa
clc
je
arpl
or
fs
por
xchg
xchg
in
cs
add
jnp
pop
outsb
ror
mov
fmull
out
ficoml
xchg
retw
daa
sbb
popf
sbb
int3
adc
sub
lahf
ja
fmulp
mov
and
les
test
mov
xchg
jp
inc
push
and
ja
cwtl
outsl
insl
ds
xor
add
and
jp
lea
inc
outsb
popf
loop
mov
ljmp
mov
jnp
int3
ss
push
cmpsb
shl
or
xchg
xchg
ret
sbb
jg
adc
lahf
aaa
jae
int3
push
mov
and
pop
jne
scas
mov
fistl
mov
sub
push
add
xchg
xchg
push
push
mov
mov
ret
mov
insl
lods
adc
cltd
cmp
and
js
int
lock
es
jno
push
xchg
out
rcll
clc
jno
pop
out
mov
mov
dec
jns
test
jbe
test
roll
decl
adc
push
or
pushf
paddd
ja
subl
mov
ss
xor
add
add
mov
je
stos
jecxz
subb
pushf
cmp
lods
aaa
scas
mov
insl
fisttps
inc
flds
das
push
stos
add
push
fidivrl
push
outsb
movsb
adcl
stos
pop
sbb
inc
dec
aad
and
sub
add
filds
ret
sbb
insl
dec
mov
pusha
enter
xchg
push
dec
dec
int
lods
test
push
rol
or
and
xorb
loop
pop
xor
rol
loop
aad
sbb
cs
sub
jg
inc
fdivs
jle
lock
jmp
fiaddl
or
call
insb
xchg
xor
js
out
outsb
cld
scas
push
in
faddp
push
pop
mov
sub
add
jae
lock
sbb
xchg
sbb
xlat
mov
mov
imul
inc
daa
and
dec
cli
aaa
pusha
loopne
xor
xchg
jge
sub
call
xor
pop
int
sahf
or
xor
mov
or
mov
and
mov
lcall
loop
cld
jne
gs
xchg
jne
idivb
or
add
mov
sub
int
push
add
test
pop
std
jae
inc
jg
fbld
push
or
push
xchg
xor
pop
into
rorl
stc
cmc
dec
pop
cmp
repz
push
out
fwait
mov
mov
mov
push
sti
cmp
cltd
mov
or
dec
arpl
xchg
mov
cmpsb
pushf
js
mov
cs
cld
stc
imul
outsb
mov
repz
iret
xchg
shrb
aam
out
mov
jb
cwtl
leave
push
pop
pop
pop
cli
mov
cld
call
pusha
and
dec
int
inc
cltd
adc
push
loope
dec
cmpb
sbb
jg
ret
enter
mov
outsb
shll
pop
insb
jp
lret
jbe
jae
mov
loope
aam
imul
in
sti
sbb
bnd
inc
shll
pop
insb
sub
rorl
mov
lahf
addr16
hlt
std
fisttpl
add
push
sub
sbb
mov
push
sub
enter
jo
xor
stos
xor
mov
cmp
negb
inc
and
and
inc
xor
and
lret
xchg
add
sbb
addb
pop
data16
mov
and
dec
lods
movsb
insl
out
sbb
xor
inc
les
sub
in
mov
imull
movsb
cli
mov
add
mov
repz
stos
sbb
orb
xchg
jecxz
fdivp
dec
icebp
outsb
shl
jl
mov
lcall
push
lods
mov
jg,pn
sbb
push
orl
stc
cmp
hlt
aad
out
sbb
mov
add
pushl
pushf
jp
adc
pushf
test
imull
mov
and
jne
les
mov
sbb
jl
dec
xchg
mov
repz
jl
mov
lcall
clc
aaa
sbb
lock
push
adc
fnsave
dec
jbe
or
push
repnz
xor
subl
add
imul
out
into
daa
push
add
mov
fwait
push
jge
aam
mov
dec
mov
imul
push
sub
bound
aaa
and
xchg
mov
arpl
stos
rcr
jbe
clc
lret
lods
push
enter
cmc
outsb
leave
lret
imul
xchg
inc
mov
sbbl
out
dec
or
cli
sbb
sub
push
jg
mov
stc
scas
fsubrl
mov
push
pop
adc
into
pushf
pop
jns
pop
in
mov
sti
mov
mov
or
adc
in
sub
in
mov
in
jmp
jne
andb
push
mov
pop
jg
sub
mov
or
push
mov
call
lcall
cmp
add
out
ror
les
mov
inc
add
call
into
push
lea
sub
pop
popa
andb
xor
sbb
test
sub
lock
mov
and
sbb
popa
adc
test
xor
adc
push
pop
jp
pusha
pop
xchg
rcr
les
mov
pusha
dec
imul
clc
push
mov
and
fstl
xchg
pop
repz
lods
cmp
jnp
pop
or
leave
or
pop
cmp
les
shrl
push
mov
gs
ficoml
inc
sub
sub
adc
outsl
sbb
arpl
in
les
pusha
pop
iret
aad
adc
cs
pop
lahf
cmp
mov
imul
sti
lds
dec
insb
inc
cmpsb
test
into
ss
mov
mov
loopne
lds
cmp
mov
xor
add
lret
push
dec
cmpsl
cmp
adc
shll
inc
push
mov
pop
out
clc
in
xchg
dec
addr16
and
xor
repz
xor
out
sbb
adc
push
scas
stc
stos
push
test
stos
mov
add
gs
mov
sub
stc
je
sub
jp
mov
sub
dec
jo
inc
push
pusha
or
mov
adc
cli
cli
loope
push
xchg
stos
or
ljmp
imul
inc
push
dec
mov
into
out
jp
cs
pop
xlat
xchg
loopne
cmpsb
mov
fwait
sub
mov
and
xchg
popa
cld
jae
rorb
or
popa
push
insb
jns
xor
fidivrs
out
pop
pop
sahf
push
add
dec
xchg
mov
lret
pop
lret
imul
test
popa
xor
or
out
pop
int3
and
push
adc
jne
xlat
mull
rorb
push
pop
jge
fimuls
xor
mov
cld
inc
push
push
mov
cmp
xor
repz
ljmp
ljmp
cmp
add
dec
jg
cwtl
out
mov
mov
mov
jmp
dec
dec
ror
and
cltd
jp
nop
out
fcmovnbe
outsl
xlat
imul
fbld
jo
pop
dec
xor
popf
hlt
inc
or
test
test
inc
xor
stc
or
repnz
mov
pushf
aad
xor
roll
mov
add
mov
mov
call
pop
and
aad
enter
nopl
mov
mov
lods
adc
cmp
icebp
push
dec
shrl
test
cmpsl
ffree
mov
cmpsl
add
mov
subb
dec
push
push
ret
push
mov
stos
arpl
push
enter
subl
fisttpl
out
dec
xor
stos
push
and
sub
in
int
mov
pushf
push
mov
inc
jl
lods
cs
and
mov
or
mov
loope
add
push
cs
dec
decl
stc
or
mov
test
adc
iret
lahf
mov
iret
sbb
mov
insl
aam
lea
insb
add
hlt
shl
mov
stos
mov
jecxz
mov
and
lret
cltd
or
jne
add
test
push
mov
xchg
out
movsl
inc
push
loop
or
loope
ljmp
xchg
jo
loop
add
add
sbb
or
js
into
jo
cmpsl
cmp
in
dec
in
cmpsb
inc
pop
loopne
inc
adc
inc
adc
cmp
add
jge
fistps
scas
push
sub
mov
mov
pop
dec
jmp
add
xor
lods
fwait
int
roll
sub
repz
in
add
pop
in
repnz
sahf
mov
inc
fisubs
shlb
insb
jns
pop
dec
mov
lret
mov
cmpsl
pop
cmpb
or
push
clc
add
mov
notb
jg
mov
jge
popa
loope
xchg
cmp
mov
sub
imul
test
mov
int3
bound
mov
sbb
ret
cmp
mov
adc
jo
out
or
push
ds
xor
lods
fldl
xor
aaa
in
lock
push
push
int
or
add
mov
lret
jle
pop
push
sti
cmpsl
mov
dec
mov
jbe
pushl
sti
pop
push
sti
jp
or
xor
decl
sahf
outsl
dec
mov
adc
cwtl
push
inc
ljmp
je
pop
test
test
fnstcw
xor
mov
imull
icebp
pop
add
lods
xor
aad
fimull
out
push
test
test
ja
jbe
xor
sub
fistps
lods
insb
rorb
cli
aas
push
dec
cmpsl
mov
jnp
lds
sbb
mov
pop
inc
cmp
popf
std
icebp
cmp
popf
fdivs
xchg
cmpsl
pop
xchg
movsb
aad
adc
mov
sbb
jo
inc
in
lods
loop
pop
stos
iret
push
mov
dec
sub
popa
cmp
sbb
adc
cmp
outsb
fsubl
dec
mov
cwtl
movsl
mov
loope
or
daa
pop
xchg
pop
int
pop
mov
jmp
pop
and
repz
shrl
sahf
push
in
xorl
jb
dec
shll
mov
fstpl
push
cmp
stc
mov
mov
int3
imul
int
mov
or
icebp
imul
cltd
mov
add
clc
aam
arpl
or
sub
insb
fs
or
xchg
imul
ds
jbe
out
out
movsb
and
push
push
aam
push
cwtl
test
add
es
out
aaa
or
int
lcall
push
imul
out
sbb
in
lret
mov
cmp
add
js
inc
mov
cmpsb
mov
and
arpl
mov
ret
fwait
add
inc
xchg
stos
test
orb
fwait
dec
jmp
in
cmp
loop
mov
lods
cwtl
push
fldl
fs
dec
es
add
fildll
cltd
fxtract
popa
jns
cmp
add
mov
fldenv
out
lahf
shr
jle
and
pop
ret
shrw
xchg
push
iret
mov
sub
mov
cmp
mov
notb
idivl
hlt
push
in
outsl
xlat
adc
in
aam
mov
es
adc
cmp
test
add
xor
icebp
or
push
fnsave
lcall
sbb
add
adc
lret
out
out
nop
sbbl
notl
xchg
fnsave
rcr
out
aam
imul
sub
bts
or
xchg
push
fstpl
movsl
mov
scas
call
inc
xchg
push
insb
mov
sub
movb
push
jl
scas
mov
mov
loope
cmp
and
xchg
rcl
dec
mov
lock
dec
adc
mov
scas
fdivrl
ret
mov
pop
sub
movsb
mov
push
lods
iret
sbb
jp
cmp
das
mov
pop
mov
outsl
sub
jecxz
test
aad
rclb
rolb
xor
cmp
imul
out
jg
inc
mov
rcrb
imul
pop
sbb
enter
out
mov
in
out
nop
xchg
cmp
daa
in
pop
mov
mov
mov
xchg
mov
xor
adc
incb
xchg
xchg
insb
add
nop
ss
notb
xor
int
mov
push
ss
aam
pushf
xlat
in
fstpl
syscall
enter
push
sub
or
mov
mov
dec
sub
pop
clc
push
ss
mov
mov
sbbb
push
jbe
cmp
rcr
inc
jmp
divb
xor
and
movsl
adc
push
mov
test
lock
jg
loope
add
mov
fsub
jbe
movsl
xchg
mov
cmpsl
rcrb
sbb
int3
sbb
inc
into
inc
push
jl
mov
cmpsl
pop
loope
jnp
icebp
and
xchg
outsl
mov
push
call
dec
jmp
or
mov
in
fistpl
aas
pop
inc
push
popf
icebp
mov
loopne
mov
xchg
push
shlb
inc
es
imul
insb
jg
add
cmp
ret
adc
scas
cltd
adc
cs
or
sahf
stos
es
sub
mov
int3
pop
cs
xor
gs
lret
adc
jmp
in
out
sbb
cmp
sahf
push
add
pop
loop
cmpl
bound
sahf
aaa
mov
cmpsb
scas
pushf
mov
mov
je
sbb
out
test
sbb
jne
es
inc
stos
fsub
xchg
add
sbb
adc
pop
push
js
in
addl
xchg
dec
orl
jbe
adc
roll
xchg
shrl
inc
ds
lock
xchg
or
or
rorb
cmp
stos
inc
xor
or
ffree
repnz
enter
add
pop
fstpl
lret
lock
ja
jl
dec
adc
aad
dec
inc
cmpsb
or
in
ja
lret
push
or
cmpsb
loopne
push
jbe
sahf
loopne
or
icebp
out
test
and
das
jne
test
lahf
sub
nop
inc
mov
ret
sti
xor
hlt
jl
int
cmc
ds
fstps
or
xchg
mov
fistl
insb
mov
clc
mov
xor
push
jno
dec
jge
pop
sub
mov
ret
push
push
out
pop
clc
dec
lret
out
fistps
adc
testb
clc
shll
mov
lock
adc
aad
mov
mov
mov
lea
int
push
test
mov
lods
mov
cld
mov
cmp
push
int
sbb
nop
adc
adc
cwtl
loop
in
fdivl
es
out
sub
push
mov
mov
aam
movsb
push
dec
out
cmpsl
call
scas
inc
rcl
lds
xor
addr16
ficompl
lcall
icebp
aas
cwtl
lds
add
push
mov
mov
adcl
mov
cmpsb
sahf
xchg
repz
rcll
push
fs
jp
push
pop
xchg
pop
fbld
fisttpll
cmp
pop
lods
mov
mov
mov
stos
inc
jbe
andl
lret
sub
std
nop
movsbl
xchg
int
cltd
xor
pop
xor
adc
xor
push
adc
shrb
adc
in
das
sbb
sahf
pop
mull
or
stc
fbstp
pop
inc
jmp
popa
addb
xor
cli
mov
pop
rcrb
pop
repnz
sahf
mov
cmp
sub
cmpsb
icebp
popa
jne
insl
dec
nop
stos
cmp
and
pop
leave
jp
fsubl
sbb
fldenv
sub
mov
repnz
and
ret
or
jo
mov
je
mov
lahf
push
rorb
adc
ja
adc
adc
cmc
push
sub
cmpsl
mov
mov
jnp
cmc
ffreep
jo
push
aas
dec
notl
arpl
mov
xchg
out
mov
clc
ret
icebp
jg
jmp
mov
aad
outsb
jb
pop
jbe
loope
outsl
push
dec
popf
out
jns
inc
push
negb
scas
imulb
scas
and
sbb
xchg
mov
fmuls
arpl
in
repz
dec
pop
adc
stos
test
int3
push
cs
stc
pop
jge
fistps
loop
fs
aas
aaa
inc
jg
sbb
je
and
arpl
ficoml
inc
popf
lret
mov
inc
js
push
or
test
fsubp
loopne
cmc
hlt
dec
ficoml
jmp
in
xor
out
orb
jbe
adc
insb
push
sub
bound
test
dec
cmp
inc
sub
xor
lods
lock
xlat
jnp
dec
dec
mov
cmp
mov
lret
sub
mov
lret
inc
sub
xor
addb
out
inc
add
dec
push
movsb
pop
mov
inc
nop
sbbl
mov
movsb
sub
push
scas
in
sbbl
addl
jle
insb
mov
lock
loope
jns
outsl
mov
adc
out
lret
lods
mov
lahf
push
rcrl
aas
xor
jb
xchg
dec
popa
mov
popa
test
insb
clc
icebp
out
add
out
rolb
in
lahf
or
rclb
pop
cmpl
int3
xchg
std
sarb
inc
jne
sbb
int
mov
mov
inc
out
mov
cmpsb
jb
dec
ljmp
mov
inc
jno
sub
cltd
mov
jge
push
inc
cmpl
cmp
dec
mov
pop
stc
add
bswap
mov
outsl
nop
adc
lods
aas
xchg
mov
test
and
cli
inc
fwait
andl
ljmp
lea
cmpsb
pop
gs
pusha
jae
jns
jmp
fbstp
bswap
shl
in
dec
xchg
stos
inc
lcall
sub
arpl
or
or
xchg
pushf
mov
mov
insb
or
test
inc
cmp
imul
pop
mov
idivl
arpl
jp
and
add
rorb
in
cwtl
sbb
testl
pop
and
xchg
rorl
in
add
fsubl
adc
xchg
inc
in
jle
pop
push
cwtl
loop
dec
stc
ret
pop
add
xchg
lcall
popa
scas
mov
pushf
inc
inc
jne
push
mov
shlb
xchg
incb
arpl
sub
jae
mov
loopne
push
test
xchg
and
mov
and
movsb
add
cwtl
test
jg
sbb
ljmp
loope
pop
adcb
gs
pusha
je
sub
out
int
push
push
sub
jae
sbb
ret
fwait
cmpl
lret
fidivrl
movsb
pop
xchg
push
cld
and
pop
fwait
adc
adc
push
out
jle
adc
cld
sti
movsb
lret
push
idivl
sbb
adc
test
mov
sbb
int
sbbb
rcl
sbb
out
cltd
aas
pop
mov
add
mov
jno
lahf
aaa
sbb
pop
movsb
pop
jnp
cmp
pop
mov
lret
cli
imul
sahf
ljmp
iret
leave
dec
js
rolb
mov
push
ja
into
push
cmp
push
sbb
les
jl
clc
fistl
xor
pop
inc
popa
stos
sub
rolb
outsb
push
leave
or
call
jo
shll
lock
sbb
movsl
inc
lods
inc
stc
cli
arpl
jge
pop
mov
xchg
movsl
push
jl
add
mov
add
mov
adc
mov
push
xchg
push
add
push
sbb
inc
sbb
xor
popa
adc
loope
std
sbb
inc
out
sarb
push
cwtl
imul
xchg
sub
jg
mov
and
push
or
jb
sub
add
test
out
cmp
adc
jno
aad
leave
dec
mov
inc
in
into
xchg
fisubrl
or
icebp
sub
mov
or
shl
mov
decl
xor
sub
das
pop
jg
sub
pop
add
cmp
js
mov
jae
out
add
test
or
loope
jle
and
inc
outsb
add
mov
and
pop
dec
in
jne
or
sub
lret
imul
sbb
dec
fnop
pop
jae
test
int
es
call
dec
push
cmp
xchg
and
enter
aaa
in
pusha
or
insb
push
pop
negl
ret
test
xchg
mov
movb
sbb
test
cwtl
clc
cs
xchg
notl
xchg
mov
mov
getsec
imul
xchg
es
pop
int
push
loope
mov
pusha
jb
out
je
xorb
sbb
adc
mov
ficoms
inc
pop
mov
aaa
sub
loope
jae
xor
adc
jo
ret
aas
and
js
test
or
jge
push
mov
mov
pop
pop
sbb
insl
sub
je
jecxz
or
jle
imul
push
sbb
or
mov
push
loop
xchg
mov
or
stc
shlb
mov
or
loopne
jnp
outsb
adc
jbe
in
xor
add
popa
fincstp
jnp
mov
loop
lret
mov
push
sub
pop
jns
daa
out
mov
cmp
ds
out
lret
idivl
scas
xchg
xor
or
sbb
fidivrs
inc
test
jmp
sub
xor
adc
lahf
lods
fucomip
jmp
mov
or
pop
push
stc
test
outsl
fsubrs
xchg
dec
jmp
xlat
pop
inc
push
mov
dec
mov
not
mov
jge
outsl
xchg
leave
xlat
mov
shll
mov
fwait
sbb
mov
ret
or
outsb
pop
das
inc
and
inc
and
mov
rcl
int3
xor
cmp
mov
pop
sub
mov
lcall
nop
pop
bound
jp
xor
and
jle
dec
icebp
pop
into
scas
idivl
hlt
repnz
jbe
jl
ljmp
push
mov
xchg
mov
mov
cmp
push
xor
nop
int3
xchg
push
fdivrs
fidivrl
sarb
adcb
out
xor
loope
mov
fs
je
jo
dec
inc
push
xor
ret
dec
lret
into
xchg
pop
mov
mov
in
dec
add
pop
fwait
ljmp
leave
out
push
add
mov
pop
lcall
xchg
shl
jae
out
ret
cwtl
pop
xor
fstl
sbb
js
test
mov
dec
shlb
cmp
sbb
dec
dec
sbb
jp
xchg
sti
test
fwait
daa
jl
popa
shl
mov
xchg
mov
pop
push
mov
pop
sub
inc
fs
fwait
sub
pop
pop
add
outsl
cs
fwait
push
jae
insb
ss
fs
fildll
and
cmp
xchg
das
inc
aas
shrl
outsl
sbbl
mov
sahf
jno
gs
loop
cli
ret
repz
adc
or
int
test
jne
mov
stc
pusha
addr16
aas
push
cmp
enter
fdiv
push
jl
xlat
push
das
and
fisttps
arpl
test
mov
xor
insl
push
mov
sub
pusha
mov
xchg
ret
pop
cmp
or
mov
lea
cld
pop
dec
orl
pop
pop
fmul
ret
pop
sbb
mov
jp
mov
jbe
mov
stos
stos
fistpll
or
add
push
add
ss
xadd
xchg
sti
int3
mov
sbb
in
jp
push
dec
sti
pop
and
push
jb
idivl
push
mov
cmpsl
or
push
lret
sti
ja
inc
pop
jns
sahf
movb
push
jp
add
and
fisttpl
bound
sbb
je
sub
sbb
push
inc
fwait
inc
hlt
insl
add
sbb
sub
pop
xor
lret
nop
jb
mov
roll
mov
push
enter
push
cs
push
inc
inc
repz
mov
rolb
arpl
cli
clc
or
or
mov
adc
push
hlt
xchg
mov
pop
push
sbb
dec
pop
pop
xchg
imul
jmp
cmp
push
pop
pop
pop
je
push
fisubrs
mov
push
pop
push
dec
les
sub
adcb
mov
xchg
cmp
imul
out
push
insb
adc
iret
iret
mov
add
data16
dec
outsl
pop
adc
popa
aad
jmp
int3
mov
ljmp
mov
leave
sbb
cwtl
or
ljmp
and
pop
jle
test
leave
mov
popl
add
dec
add
ret
or
imul
mov
pop
jno
sarl
pop
call
sub
pop
fiaddl
cmp
test
pop
and
sbb
hlt
sub
mov
push
and
mov
mov
inc
test
lods
sub
push
sbb
push
dec
stos
mov
mov
push
out
aam
mov
or
in
sbb
data16
pop
cmp
icebp
into
adc
mov
insl
mov
cmpsl
jno
lock
in
inc
fcoms
adc
jnp
mov
dec
cli
xor
jo
cmp
stc
inc
inc
jo
dec
ret
ror
cmp
dec
test
int3
andl
cs
aam
cltd
negl
jge
scas
inc
pop
pop
mov
dec
jo
clc
mov
mov
mov
pushf
jmp
adc
sbb
sub
divb
mov
mov
push
ret
mov
pop
or
fsubr
add
pop
or
ss
fistpl
sbb
das
add
pop
lret
xor
xchg
aas
arpl
sbb
divb
popl
pop
stos
pop
addl
cmp
mov
fnstenv
rcll
jbe
xchg
mov
sub
out
stc
pop
pop
cmp
inc
pushf
lds
repnz
add
add
sub
mov
leave
popa
xor
pusha
fdivs
or
xchg
fisubrl
pop
aas
adc
cmp
inc
in
sub
cmp
sti
mov
out
in
sub
xor
fcoml
push
or
fcmovbe
cld
movsl
icebp
je
mov
int
inc
add
out
loop
loope
fsubl
insl
rolb
cmc
add
mull
add
mov
in
cmc
sbb
ss
cmpsl
xor
lock
mov
lea
stc
mov
sbb
cmp
xchg
cmc
dec
xchg
mov
or
je
mov
push
adc
or
or
jmp
jl
sbb
push
push
scas
test
lock
aam
xchg
rcr
mov
pusha
mov
les
stc
jnp
pop
add
push
push
jne
pop
inc
mov
int
negl
inc
sub
dec
out
incl
adc
push
aaa
aam
pop
mov
adc
dec
test
call
lret
movsb
rcrb
jne
mov
jns
popa
mov
inc
pop
sbb
mov
popf
outsl
or
xchg
negb
adc
inc
jbe
cld
dec
jb
cmpsb
outsb
add
imul
lahf
xor
adc
xor
ret
cs
mov
add
fcmove
pop
add
pop
leave
arpl
arpl
jp
sti
xor
jbe
sbb
mov
popf
popa
insb
and
shl
push
shlb
mov
ret
push
xchg
fadd
ljmp
popa
out
insb
jae
cs
and
insl
mov
icebp
addr16
adc
movl
pop
xorb
mov
pop
sbb
add
test
xchg
mov
test
add
mov
push
xchg
lcall
pop
cmp
sbb
rolb
inc
shrl
dec
mov
xor
fsubs
aaa
mov
lret
das
subl
fstpl
mov
adc
pop
xchg
sub
out
mov
mov
or
jns
inc
or
mov
rorl
dec
in
or
notb
daa
jge
lret
inc
in
es
xchg
mov
sub
mov
mov
mov
test
mov
pop
mov
add
ljmp
xor
mov
in
aaa
cmpb
mov
jns
cmp
mov
jle
pop
les
aaa
add
mov
insb
test
jge
or
jb
cmp
arpl
sbb
decl
imul
cmpsb
mov
mov
in
xor
dec
dec
push
lds
mov
pop
sub
inc
xor
mov
leave
cltd
stos
ds
pop
xchg
sbb
sbb
push
shll
xor
xchg
add
mov
jge
lods
sub
stc
push
lahf
js
arpl
les
mov
std
mov
cmp
pusha
cmp
outsl
or
int
or
xor
mov
jb
outsb
insl
lods
xor
imul
mov
testb
mov
gs
jge
push
lret
imul
jecxz
scas
and
out
rcr
mov
xor
cmpsb
aad
mov
in
mov
mov
pop
xor
xor
daa
mov
or
push
add
cmp
dec
xchg
sbb
jb
lret
push
xlat
sbb
and
movsl
imul
xchg
or
sbb
xor
xchg
out
mov
das
mov
xor
dec
mov
or
and
cli
dec
push
fwait
cltd
pop
lret
cmp
adc
mov
int3
test
fwait
daa
popa
mov
lods
or
cmp
popa
out
inc
cmp
mov
test
sub
mov
int
and
sbb
mov
pop
enter
shrb
test
push
rcrl
int3
jb
cld
mov
test
cmp
sub
mov
rclb
mov
sub
jmp
in
cmpsb
mov
sbb
loope
push
jl
or
mov
pop
xor
inc
frstor
stos
xchg
daa
cli
ss
or
xchg
inc
or
pushf
cmp
push
inc
pop
sbbb
iret
sarb
mov
inc
pop
dec
mov
nop
pop
sub
nop
jae
pop
in
cmp
push
iret
jmp
ror
daa
xor
adc
lret
jl
jge
sub
test
adcl
or
sbb
cli
push
shll
jp
loopne
xchg
leave
push
inc
jl
int3
iret
inc
ja
fidivs
sbb
push
sub
dec
idivb
sti
jns
inc
push
scas
jl
insl
pop
aas
cmp
psllq
dec
mov
gs
bound
xor
xchg
sbb
loop
mov
and
sti
cmp
int
cmpsb
sbb
mov
fisubl
loopne
pop
or
leave
xor
mov
mov
je
stos
dec
dec
pop
aad
movsl
aaa
mov
in
or
in
and
add
mov
cmp
mov
jp
jno
mov
cmp
stos
mov
jno
mov
mov
loopne
add
jle
movsl
adc
in
cmpsb
mov
xchg
fs
bound
test
sbb
outsl
jno
gs
adc
add
jnp
push
cld
sbb
sarb
push
sub
call
mov
dec
jo
mov
push
jge
mov
xchg
add
xor
mov
cmpsl
sub
and
cmp
lret
int3
movsb
mov
and
and
xchg
push
gs
repz
adc
adc
movsl
and
dec
cs
out
lods
xor
and
cmp
cmc
iret
adcl
movsb
mov
xabort
lret
push
icebp
push
jge
sbb
mov
fidivrs
adc
sbb
aad
inc
mov
hlt
nop
lds
jns
cltd
sti
push
enter
dec
cmp
push
mov
xorb
adc
inc
pop
into
xchg
mov
sub
xor
mov
add
adc
pop
push
stos
hlt
or
inc
mov
mov
lods
lds
sub
iret
adc
xorb
outsl
jae
mov
adc
cmp
pop
shl
mov
outsl
fucomip
add
sbb
pushf
sbbb
les
inc
jo
xchg
subb
push
outsb
or
or
out
inc
pop
paddq
lret
jb
ljmp
rcrl
addb
adc
push
push
cmp
add
addr16
ljmp
loopne
repz
sahf
jns
mov
xor
js
mov
xchg
xlat
jg
js
mov
std
pop
jnp
mov
xor
jg
out
push
mov
jle
and
mov
or
jg
xchg
lea
inc
clc
cmp
outsl
sarb
lret
test
fwait
and
adc
stc
xchg
or
pop
and
xchg
and
add
in
mov
int3
into
xlat
pop
xor
mov
aaa
pop
jnp
mov
movsl
sub
xor
stos
insb
xor
test
enter
lods
scas
js
loopne
ret
cli
inc
push
xchg
cmc
sub
out
ja
or
jns
fidivs
pop
imul
int3
iret
mov
and
jp
push
push
push
mov
inc
mov
lcall
xchg
jbe
xchg
pop
mov
lahf
hlt
stos
adc
pop
xchg
daa
repnz
imulb
int3
sbb
out
in
loop
push
addr16
pop
push
xchg
iret
fstps
cmp
notl
xchg
pop
and
fstps
jl
imull
punpckhdq
sub
pop
popf
jl
pop
shll
je
jl
cmpsl
sti
scas
sbb
orl
imul
xchg
sub
mov
jecxz
mov
jg
decb
push
aad
outsl
xor
notb
pop
jge
loop
call
sbb
mov
popa
or
pop
xchg
mov
scas
hlt
pop
cmpsb
aas
lret
mov
lret
je
jge
mov
and
jnp
xor
sbb
jg
push
push
or
mov
cmp
daa
mov
cli
fstpl
push
push
jp
and
daa
jae
sbb
push
add
xchg
xchg
ljmp
inc
xchg
inc
sbb
repnz
andl
cs
ficoml
cltd
and
roll
lcall
mov
test
dec
clc
icebp
cltd
in
lds
pushf
pop
push
scas
into
aaa
popf
cld
enter
jmp
pop
or
insb
inc
mov
pop
out
dec
js
imul
jns
out
cltd
pop
scas
xor
push
and
inc
inc
int
xlat
push
ja
add
or
push
jecxz
sbb
push
pop
and
call
sarl
dec
int3
test
les
dec
shlb
push
xor
pop
popf
movsl
mov
fwait
dec
jns
cmp
mov
pop
jmp
jecxz
push
enter
lea
test
lcall
xchg
push
jnp
xor
jecxz
pushf
cmpb
test
mov
xchg
ljmp
adc
aad
inc
mov
das
inc
adc
and
clc
mov
ljmp
in
push
push
popf
es
adc
pop
push
popa
out
jecxz
jno
fsubrs
stc
dec
sti
adc
outsb
adc
fisubrl
test
test
lret
jmp
rorl
mov
sbb
pop
inc
movsl
jne
pop
movsl
aad
push
jge
lcall
jle
dec
outsl
in
push
iret
push
aaa
std
or
sub
ss
jb
fcmovu
ficoml
mov
ds
scas
xchg
xor
test
nop
inc
mov
mov
imul
aaa
sub
popf
mov
pop
and
inc
mov
pop
ja
sbb
popa
add
test
stos
cmp
mov
dec
inc
pop
mov
adc
ljmp
inc
cmp
mov
aaa
in
cltd
and
loopne
push
pop
scas
mov
xor
ret
xor
loop
pusha
pushf
fnstenv
lahf
push
mov
inc
push
shrl
aad
adc
pop
lahf
sub
pop
xor
call
ja
lret
movl
mov
ficoml
add
push
jae
mov
xor
je
push
xlat
ja,pn
test
inc
popf
sub
imul
cwtl
push
cmpsb
mov
sbb
inc
pop
inc
dec
xchg
in
int3
loop
lock
mov
fdivl
add
insb
adc
dec
ret
rcl
dec
inc
stos
shl
pop
pop
push
lcall
xchg
outsb
jo
xlat
xor
mov
mov
sub
cmpsb
insb
or
stos
stos
jnp
dec
aad
xchg
adc
sub
xlat
jmp
or
in
in
and
sbb
xor
test
jnp
dec
xor
or
jle
in
loopne
mov
dec
movsl
movsb
mov
in
adc
push
jge
sbb
addb
mov
xor
out
xorb
adc
inc
subl
sub
jecxz
add
data16
dec
inc
sbbb
js
fstl
call
jmp
sbb
jne
std
ds
dec
stos
inc
xchg
xchg
pop
das
mov
mov
mov
ffreep
imul
mov
cs
js
out
xor
mov
ss
add
xchg
lahf
xlat
popa
dec
or
mov
or
mov
fisttpll
sub
repz
lcall
add
in
into
les
and
and
frstor
ja
dec
dec
das
lahf
int3
mov
inc
jp
inc
test
shrl
mov
dec
mov
xorl
into
jno
mov
mov
dec
inc
fcom
aam
add
xchg
iret
test
clc
cmp
insl
cmp
les
ss
test
sbb
mov
into
xchg
iret
loopne
outsb
mov
dec
inc
sub
jb
push
or
jne
push
lret
call
aad
cs
pop
ret
push
call
adc
ja
push
push
push
or
dec
jb
cmpsl
icebp
mov
cwtl
in
lods
pop
in
cmpsl
sbb
in
inc
sub
out
stos
sbb
push
mov
and
xchg
outsl
or
mov
out
adc
stos
jne
les
roll
clc
mov
jne
int3
pop
ret
xorb
sahf
push
test
xchg
loop
aaa
add
or
sbb
enter
cmp
add
jnp
jae
pop
jno
repnz
inc
cmp
rcrb
mov
xchg
cwtl
cmpb
test
dec
addl
and
dec
xchg
mov
pop
out
lahf
mov
jne
inc
sbb
leave
dec
out
ret
lcall
xchg
das
int
jmp
add
xor
arpl
aad
ficomps
mov
sbb
test
or
stos
cld
add
insb
aam
ret
or
aad
xchg
pop
bound
rcl
jno
lods
push
xchg
shrl
jp
jb
sbb
sbb
emms
add
sub
test
adc
jb
ficoms
and
jbe
pop
sti
mov
mov
inc
jecxz
pop
xchg
inc
sti
cmp
dec
mov
jle
jno
mov
cmpsl
stos
push
and
repnz
fmuls
aad
add
xchg
test
adc
fisubl
lds
repnz
les
aam
lahf
xchg
dec
inc
outsb
in
dec
xlat
aas
jle
xor
and
xor
jl
xchg
in
pushf
jne
cmp
sbb
push
sbb
adc
cmc
ja
adc
fcoms
sbb
push
cmpl
adc
or
push
rorl
ficoml
inc
jb
mov
push
jl
leave
stos
sub
cmp
lret
sbb
bound
loopne
out
mov
in
mov
sub
jg
sub
scas
inc
test
faddl
js
and
jne
pop
push
daa
fsubrs
cmpsb
mov
and
sub
dec
call
push
xchg
imul
iret
orb
jl
pop
pop
jno
cmc
cwtl
stos
fnstenv
fwait
cmp
call
dec
ds
mov
jb
jmp
int
into
out
data16
pusha
cmc
into
cmp
movsl
gs
aas
nop
loope
xor
repnz
pop
es
in
clc
pop
xchg
and
cmp
test
xor
aam
sbb
add
or
into
aas
push
test
and
mov
mov
cli
pushl
test
adc
shll
movsl
mov
in
popa
pop
pop
out
xor
sub
ljmp
imull
jge
stos
ja
test
pop
ds
filds
cmp
js
push
mov
xchg
ret
insb
ffreep
fidivrl
or
jb
arpl
insl
inc
rorl
dec
or
insl
add
lea
push
pop
mov
test
inc
sbb
push
push
repnz
std
pop
xchg
add
cmpsl
push
hlt
in
push
xor
and
push
out
test
test
movsl
into
filds
nop
or
int3
lahf
jmp
xchg
shlb
mov
or
cmp
sbb
sahf
mov
scas
sbb
adc
adc
sub
inc
add
movsl
imul
and
mov
xchg
xchg
mov
or
test
outsb
arpl
loopne
cli
add
inc
fwait
aaa
jns
jno
js
sub
arpl
mov
add
add
lcall
jle
push
mov
add
cld
clc
pusha
mov
in
sti
loopne
popf
push
in
jae
cmp
jecxz
mov
out
mov
dec
add
lds
cmp
pop
inc
and
lds
incl
mov
pop
mov
xor
test
push
pop
loope
mov
add
mov
inc
push
outsl
or
cmp
pop
or
mov
enter
fs
dec
xlat
jo
repz
jl
xor
mov
sub
jp
mov
icebp
repz
cld
mov
add
pop
or
popa
inc
add
cmp
test
push
xchg
mov
popa
inc
and
or
fimull
sti
sub
sbb
inc
lods
fucomi
imul
inc
or
inc
cli
mov
cmovb
daa
or
xchg
pop
cmp
jmp
rcl
push
out
shrl
fcomi
negl
rol
push
mov
sub
sbb
mov
xor
push
inc
jle
shll
pop
sub
insl
js
addr16
mov
mov
sahf
outsl
xor
repnz
sbb
lret
pusha
cmp
add
jae
sbb
xor
xchg
jns
mov
xor
mov
jb
jge
mov
sahf
loopne
loopne
arpl
es
push
mov
push
inc
imul
int
rclb
jno
aad
bound
push
adc
repz
bsr
dec
add
push
nop
cmpsb
dec
push
ja
xchg
sbb
loop
stos
out
mov
arpl
mov
inc
insl
aas
cmp
in
xchg
and
in
xchg
inc
mov
xchg
int
pop
fsts
aad
sbb
push
pop
mov
fidivs
lahf
add
add
int
lods
mov
fcmovbe
mov
xchg
xchg
dec
lcall
push
fimuls
leave
loop
sub
inc
xor
ja
push
loopne
pop
xchg
fcoml
je
xchg
fisubl
xor
scas
ret
jae
lds
sbb
push
xchg
sti
leave
into
mov
in
pop
stos
mov
dec
fcmovnu
adcl
xor
shlb
inc
icebp
mov
ss
xor
push
mov
sbb
jns
aam
lahf
js
push
push
mov
add
aad
mov
or
xor
mov
lret
ja
movb
mov
or
push
push
add
xor
or
sbb
call
mov
out
out
inc
push
icebp
mov
and
arpl
inc
test
fiaddl
cld
adc
andb
rcll
mov
sub
mov
ljmp
clc
jno
mov
mov
outsb
xchg
jae
push
pop
stos
mov
sbb
iret
mov
addr16
xor
clc
mov
push
sbb
aas
andb
enter
cmp
fnsave
repz
arpl
movsl
cmpsl
adc
out
jbe
or
stos
add
mov
rclb
lret
jmp
push
lods
jmp
xchg
sbb
xor
cmp
sub
loop
aad
mov
outsb
test
push
jmp
in
mov
mov
pop
cmp
mov
lcall
and
add
mov
mov
push
adc
mov
pop
or
mov
adc
pop
ja,pt
adc
or
or
jb
jge
push
pop
fildl
repz
sbb
mov
inc
cmp
pop
insb
adc
out
or
mov
lahf
mov
lods
jle
mov
pushf
std
test
testb
cmp
mov
mul
subb
shll
jp
mov
das
addr16
pop
cmp
pop
shrb
or
cwtl
cmp
and
ret
jae
inc
ffree
outsb
lret
jle
js
dec
lcall
ss
aam
pushf
out
enter
push
movsb
inc
inc
mov
leave
inc
add
mov
ret
sbbb
dec
jo
rcrl
popf
fdivrs
add
sub
add
xchg
xchg
mov
loop
mov
hlt
arpl
sub
lcall
sub
or
arpl
rclb
push
jl
daa
aam
push
scas
xchg
adc
imul
stc
or
in
outsl
jle
data16
mov
sbb
push
fucomp
aaa
andb
fdivl
sub
call
iret
int
lods
adc
lret
int3
add
jne
hlt
jge
out
jle
leave
mov
jo
mov
dec
and
scas
dec
in
and
daa
stc
inc
adc
sbb
sbb
xchg
in
inc
mov
pop
fstps
stos
rol
jge
stos
fld1
pop
inc
cmpsb
push
aad
push
aas
mov
rolb
rep
bound
and
lret
aad
imul
jge
mov
xchg
or
adc
call
jge
mov
xchg
sub
aaa
mov
and
inc
imul
or
pop
orl
sbb
push
push
fsubs
mov
jns
dec
ds
adc
ss
loop
inc
or
cmpsl
mov
sub
push
mov
adc
mov
or
pop
or
icebp
mov
push
cs
add
pop
test
cli
jle
xchg
dec
dec
outsl
mov
int
inc
xchg
mov
inc
inc
jp
cmp
icebp
imul
ds
mov
outsl
mov
dec
sub
mov
leave
imul
adc
xchg
push
pop
add
fistps
loop
xor
aam
enter
xor
sarb
movsb
iret
and
flds
pusha
fsubs
and
insb
mov
jb
mov
rcl
add
lret
cmc
das
out
lret
inc
je
nop
push
ja
ss
imul
xor
pop
out
xor
jo
mov
and
in
fwait
aad
inc
xor
pop
push
push
inc
lea
andl
pop
add
cmp
pusha
xor
sbb
pop
sbb
add
push
pop
aam
cwtl
lods
xchg
inc
and
adc
cmp
cmpsl
xor
push
push
xchg
out
lcall
je
jae
sub
and
cmp
cmp
enter
cmpsl
imull
jne
imul
pop
in
orl
jmp
add
dec
out
es
sbb
and
fwait
pop
cwtl
ret
bound
jbe
mov
dec
cmp
imul
repz
adc
in
or
mov
dec
sub
loope
fdivl
lcall
jmp
dec
insl
rcrb
mov
pop
orb
adc
ret
pop
js
data16
jecxz
jl
imulb
mov
xor
scas
negb
mov
jg
aaa
mov
sbb
pop
cwtl
push
jne
xchg
out
push
mov
xlat
cltd
outsl
dec
or
pop
fcoms
dec
stc
xor
jge,pt
outsl
push
sbb
icebp
push
mov
lock
mov
fsts
iret
aad
xor
xchg
in
and
add
push
or
pushf
inc
pop
dec
fdivl
pop
sbb
popf
xor
fwait
shll
lds
mov
or
mov
fnstsw
jmp
jmp
jns
mov
sub
sbb
sub
adcl
xchg
mulb
mov
cmc
out
cmp
icebp
mov
daa
ja
or
dec
add
jae
ret
mov
loopne
inc
xor
stos
inc
push
insl
inc
lds
mull
jmp
fisttps
pop
ljmp
or
test
sar
movsb
cmp
mov
outsb
jge
mov
sahf
mov
and
insl
xchg
add
mov
jb
nop
test
and
scas
ret
sub
in
test
mov
jle
cmp
fwait
mov
test
loope
dec
loop
mov
dec
negb
xchg
dec
sub
add
data16
cmpsl
cs
xorb
mov
inc
or
insb
fadd
inc
pop
mov
inc
sub
add
push
xchg
mov
ss
jno
jb
shlb
push
in
adc
xlat
sbb
lds
aad
subl
fisttpll
int3
xorl
xchg
es
test
add
scas
cmp
push
or
hlt
out
movsl
ss
lods
mov
or
pop
sub
adc
stc
jp
addr16
cmpsw
mov
aad
mov
xchg
ret
adc
sub
cmpsl
rorb
xor
pop
push
mov
sbbl
mov
sub
jge
stc
leave
pop
cmp
adc
mov
sbb
jbe
lods
push
mov
sbb
xor
xor
xchg
mov
test
imul
inc
sub
ror
stos
es
jecxz
cmp
sti
pop
mov
mov
bound
fisubs
sub
fists
add
aas
xlat
loopne
add
mov
roll
adc
fs
xor
jp
bound
loop
faddl
roll
add
outsl
test
imul
dec
and
out
sahf
test
loopne
mov
inc
push
hlt
stos
add
aaa
rcll
in
jnp
test
test
push
inc
jl
xlat
js
push
xchg
xchg
xor
adc
cmp
add
push
sub
addr16
test
repnz
add
xchg
and
add
fisttps
push
test
add
imul
rol
sarl
test
push
pop
ja
pushf
lret
jne
cmp
mov
cltd
cltd
iret
mov
mov
iret
cs
orb
enter
pop
aaa
clc
mov
jl
mov
lock
mov
dec
ss
cli
pusha
call
jno
std
pop
fcoml
xchg
std
stos
movsl
mov
mov
push
ret
fcomp
lock
mov
cmp
out
popl
cwtl
push
cmp
mov
cld
sbb
mov
arpl
pushf
dec
xchg
cmp
mov
insl
mov
and
pop
jle
ja
or
or
inc
pushl
outsb
xchg
mov
xchg
xor
nop
bnd
sub
addr16
sahf
push
jp
or
out
popa
fwait
cmp
add
xor
cmp
in
add
push
mov
into
rol
pop
pop
fldcw
call
jns
lret
mov
sub
cs
pop
and
das
lahf
ror
xchg
jecxz
push
cmc
sahf
les
mov
xor
mov
inc
adc
cld
mov
push
mov
sbb
mov
and
inc
fdivrp
aad
out
dec
add
ljmp
movsb
pop
inc
lods
or
into
in
xor
rcrl
xchg
js
jmp
cmp
xchg
mov
xchg
imul
fcmovb
test
int3
pop
fistl
iret
pop
dec
lahf
sub
or
lahf
mov
mov
xlat
pushf
dec
cli
inc
out
je
adcb
dec
faddl
pop
imul
pop
dec
lods
sub
sub
xor
dec
mov
ret
cmp
fs
inc
filds
sub
adc
pusha
cmp
inc
add
lods
adc
mov
mov
daa
inc
sub
and
push
negb
insb
popf
lock
dec
or
dec
movb
lcall
mov
push
xor
pop
inc
cmpsl
lcall
and
aad
stos
repz
pop
lds
lret
rep
add
int
or
or
addl
test
and
sub
inc
insb
and
sbb
repnz
mov
adc
out
ss
mov
mov
cmpsl
ja
sbb
push
or
adc
push
icebp
jb
push
adc
xchg
add
mov
leave
mov
push
ds
aam
mov
rolb
push
add
cs
cld
lret
pop
xchg
jp
sbb
cwtl
aad
or
pop
insb
cmp
arpl
mov
mov
aaa
adc
mov
aam
mov
dec
mov
arpl
out
jne
dec
inc
lock
test
and
cmpsl
lcall
ljmp
getsec
lods
push
or
ja
jg
cli
mov
push
add
lret
add
bound
pop
mov
mov
sbb
jmp
je
mov
sbb
add
sbb
sbb
push
or
push
aas
jbe
sbb
push
xor
test
dec
mov
mov
mov
leave
es
inc
mov
ds
xor
ret
jmp
fstpt
setnp
call
pop
ficomps
fdivrp
cmp
and
add
mov
cmp
jge
or
jmp
pop
inc
fwait
add
add
loope
lret
clc
ret
call
adc
inc
lods
pop
shlb
test
xlat
fstps
jb
call
imul
add
push
pusha
mov
ja
fnstcw
push
nop
or
mov
lock
xlat
pop
loop
push
dec
adc
lret
xchg
xor
mov
or
je
stc
pusha
cltd
lret
mov
push
xchg
mov
sbb
sub
call
call
lea
dec
xchg
xchg
xchg
test
mov
ret
cmp
nop
jmp
adc
inc
mov
movsb
test
out
jle
cmp
std
jne
in
pop
loop
arpl
jge
aam
xchg
xchg
cwtl
and
mov
adcl
dec
push
inc
xor
fidivs
fdivrs
jp
xchg
xchg
cmp
sbb
jae
nop
fisubl
add
jp
mov
sbb
jbe
fsubrl
fbstp
push
js
lahf
out
sub
ja
dec
inc
inc
mov
xchg
addr16
arpl
test
fsqrt
std
xor
push
mulb
xor
scas
adcl
push
int3
dec
mov
cmp
cmp
mov
jo
mov
stos
sub
aad
ljmp
sub
xor
scas
mov
cmpsl
ss
cmp
lret
scas
cs
mov
negl
push
sbb
adc
stc
test
push
cltd
mov
cmc
sub
jnp
inc
xlat
mov
mov
psubusb
jbe
xor
addl
xchg
xchg
movsb
push
jb
js
in
insl
call
fcoml
jmp
dec
inc
add
pop
push
idivb
aas
pop
movsl
aam
outsl
sbb
xor
add
mov
pop
lret
repz
movsl
movsb
in
stc
das
xor
insb
enter
dec
xchg
call
mov
or
std
je
add
movsb
movsb
push
cmp
mov
data16
lret
test
cmp
or
mov
fbstp
sub
jmp
pop
fcom
xor
xchg
mov
mov
mov
or
ds
jns
insb
ljmp
outsb
pop
pop
js
add
aad
add
mov
dec
fwait
xchg
repnz
adc
daa
or
sub
pop
in
xchg
pop
jo
push
out
in
data16
je
push
mov
jp
mov
xchg
lea
adc
pusha
mov
push
pop
fsubs
adc
mov
es
loope,pt
sub
in
lods
push
addr16
sbb
es
fsubs
fadds
movsb
adc
lret
sbb
cltd
adc
mov
sahf
into
ss
sub
xor
jae
mov
repnz
xchg
imul
mov
mov
xor
and
dec
cmp
roll
and
inc
addr16
ss
cmp
mov
jne
lods
push
mov
ret
in
jo
mov
fbld
xchg
jmp
mov
xor
sti
xor
inc
xor
lds
jno
xchg
sbb
mov
mov
sub
cmpb
mov
stos
into
das
xchg
ja
lds
and
inc
in
push
aam
imul
jmp
xchg
xchg
push
push
jecxz
cltd
test
pop
repz
add
jnp
dec
decb
enter
mov
in
loopne
cli
mov
sbb
outsl
shr
mov
ja
sbb
xchg
inc
push
imul
in
jo,pt
test
or
sarb
sbb
aaa
shr
cmp
sarl
fisttps
jle
test
fcoml
push
mov
pop
xchg
pop
add
call
xor
cmp
push
mov
lds
cmpsl
fisubrs
xchg
xsaveopt
cmp
lds
or
fwait
insl
mov
repnz
cmp
sar
jne
cli
sbbl
pop
sub
in
adc
mov
jae
adc
fucomp
jb
push
add
icebp
daa
dec
pop
pop
cmpl
aaa
cmp
mov
sbb
push
mov
pusha
fwait
popa
xchg
or
sbb
xor
xchg
push
shrb
mov
push
push
xchg
lea
lret
nop
jbe
adc
add
xchg
mov
xor
cmpb
repnz
into
fistps
jo
xchg
fwait
sbb
jnp
mov
in
mov
mov
mov
imul
sub
xchg
mov
int
adc
xchg
out
sub
xchg
int
test
scas
movsb
mov
pop
jge
inc
sub
ds
lock
ljmp
fmull
push
pop
sbb
push
xchg
pop
xchg
xchg
jl
inc
shr
dec
sub
inc
push
or
sub
insl
xor
test
lret
push
cmp
and
adc
inc
loop
fcoml
lret
mov
in
add
inc
int3
cld
mov
or
xor
dec
inc
mov
mov
imul
jle
es
add
and
sbbb
nop
int3
jb
or
jne
loop
fdivrs
inc
and
jb
inc
inc
dec
stc
cmpsl
xor
cwtl
repnz
jle,pt
dec
sub
pop
or
ss
ja
sbb
push
dec
adc
sbb
popf
add
and
jp
mov
jge
cwtl
jo
push
fistps
fsts
leave
sbb
push
jge
dec
lret
cmp
push
test
pop
add
mov
xor
inc
or
les
mov
cmp
mov
cs
inc
test
sub
add
mov
pop
cmp
inc
add
cmp
xor
sub
lahf
call
mov
sub
push
sub
fcompl
fbld
jo
xchg
aas
ret
mov
mov
xor
cmp
hlt
mov
or
sbb
jge
mov
cmc
aaa
test
pusha
test
jb
sub
add
jb
inc
jno
push
outsl
pushf
scas
lods
inc
fs
jle
sahf
cmp
jbe
and
shll
push
inc
popa
lahf
pop
mov
or
pop
and
clc
push
lods
addr16
pop
pop
nop
out
adc
adc
and
fcmovnb
jne
mov
ljmp
outsl
xchg
pop
sbb
jl
xor
inc
fldl
pop
jb
adc
shl
negb
fadds
push
and
clc
sub
mov
dec
mov
ss
dec
shlb
subl
cmp
cld
push
pop
arpl
pop
xor
arpl
enter
int3
adc
xor
xor
dec
and
jne
push
pop
inc
pop
push
mov
sahf
inc
mov
jl
mov
insb
cmp
stos
mov
out
jg
clc
adc
sub
outsl
call
pop
and
outsb
add
test
cmp
dec
sti
call
xor
lret
ljmp
hlt
fmuls
mov
dec
xchg
sbb
mov
xchg
popf
and
insl
xor
push
lds
cmp
loope
cmp
mov
testl
movsb
lret
adc
add
out
repz
lcall
das
scas
mov
ret
mov
fisubrl
in
lea
fildl
xchg
scas
jge
pop
xlat
or
push
out
pushf
fwait
push
pop
jg
popa
leave
in
pop
call
and
cmp
jmp
jl
sub
clc
movsb
lock
xor
adc
scas
cs
sub
add
or
ja
pop
outsl
xlat
push
xlat
insl
mov
pop
ds
lea
rcrb
dec
ret
gs
adc
adc
inc
push
popa
ret
test
pop
add
arpl
and
addr16
dec
out
aas
mov
adc
adc
push
gs
xor
mov
pop
mov
xor
mov
and
loopne
cmpsl
loop
dec
testl
inc
imul
pusha
mov
mov
jo
pop
xchg
movsl
in
and
cmpl
push
int
lods
add
cmp
jne
mov
jecxz
in
pushf
mov
jnp
les
adc
xor
lcall
pop
adc
xchg
int3
cwtl
xor
adc
mov
idivl
sbb
and
mov
pop
ret
inc
dec
fdivs
loop
mov
push
ljmp
cltd
loopne
mov
and
pushf
fwait
push
stos
cmpsb
pop
int3
sti
cltd
push
and
xor
push
rorb
jmp
xor
enter
int3
cltd
out
pushl
inc
sub
dec
test
cmpsb
into
ret
xlat
and
jne
in
cli
movsb
stc
and
adc
pop
movsl
xorb
lods
pop
fdivrl
icebp
push
mov
stos
push
div
sahf
jb
loope
shl
mov
sti
push
lds
and
mov
cmp
scas
inc
popa
and
lahf
outsb
ds
xchg
inc
pop
insb
ds
dec
loope
dec
movl
sub
addr16
and
adc
lret
pop
push
push
adc
fdivs
sti
mov
cmp
data16
xchg
sub
and
jno
outsb
push
mov
pop
ror
hlt
enter
push
pop
xchg
lods
or
loope
mov
ja
in
xor
and
mov
les
sbb
incb
lock
adc
fcmovnu
push
pusha
mov
sub
mov
add
cmp
xlat
fs
or
sub
aad
dec
insl
leave
add
ret
or
inc
insb
cltd
mov
fsts
and
out
mov
inc
and
hlt
in
sub
mov
daa
xlat
aas
in
add
fwait
xor
pop
add
jnp
arpl
jg
mov
mov
scas
mov
out
js
mov
cmp
fcmovnu
stc
mov
push
ljmp
or
negb
fs
push
pop
inc
xor
lea
adc
imul
sbb
cmpsb
or
and
adc
loopne
push
gs
sbb
cld
loopne
adc
push
aad
idiv
dec
xchg
aas
sarl
jge
insl
insl
rolb
iret
shrl
aad
dec
pop
mov
fstl
aas
pop
jno
xchg
gs
popf
pop
add
mov
jne
add
jns
sbb
ja
lods
addb
or
sbb
rorb
rolb
add
inc
cmp
jb
jp
or
inc
imul
imul
movzwl
add
xchg
and
dec
test
add
add
popa
pop
push
sub
mov
add
inc
ret
mov
addb
call
ret
inc
outsl
sbb
test
mov
and
cltd
frstor
cltd
pop
daa
jmp
lret
movl
jae
dec
jns
mov
imul
mov
icebp
sub
push
pop
jae
outsl
lret
push
hlt
mov
mov
mov
adc
aas
loope
jno
daa
mov
lea
repz
fmull
jns
sub
loop
dec
inc
push
xor
aam
xchg
aas
sub
imul
xor
adcb
cmpsl
cmpsb
sbb
scas
pop
lods
inc
popa
sub
sbb
push
mov
adc
dec
fucomp
jo
push
fs
sahf
xlat
pop
inc
icebp
add
mov
arpl
push
lock
mov
pop
inc
pop
and
pop
cmpsl
adc
dec
cmpsb
fsubrs
movsb
mov
cmc
hlt
addl
cmpsl
inc
cli
in
lods
or
fsubs
rorl
inc
and
inc
mov
push
jmp
add
xchg
pop
test
mov
notb
xor
aad
cmp
jl
dec
iret
inc
push
into
sbb
sbb
jle
in
rorl
pop
xor
int3
cs
movsl
pop
cmp
fwait
adc
inc
out
mov
xchg
dec
jmp
mov
xchg
pop
aad
jb
sbb
in
mov
popf
in
mov
lods
outsb
mov
lods
adc
xchg
hlt
xchg
push
xchg
jp
cmc
push
sub
jbe
mov
cmp
int3
std
cmpsl
pushfw
adc
fmul
cli
inc
in
lods
lret
or
das
mov
sbb
je
gs
mov
lods
adc
mov
fidivrs
mov
jns
push
loop
pop
push
icebp
out
add
jp
ffreep
int
ja
sub
ds
pop
in
bound
cld
dec
in
mov
scas
outsl
pop
aad
mov
inc
clc
lcall
clc
xor
lods
pop
mov
push
sub
imul
jo
in
enter
add
sbb
gs
xchg
scas
mov
out
ret
inc
dec
jl
in
add
sub
pop
or
andnps
shll
mov
pop
mov
cltd
into
sar
mov
add
mov
ret
jno
xchg
jmp
xchg
sub
mov
mov
jbe
pop
mov
lret
xchg
cmovl
xchg
movsb
jne,pt
and
mov
mov
xor
jno
mov
pop
jl
cli
sub
or
rclb
sahf
cmp
js
das
xor
out
pop
mov
out
push
lods
mov
jno
mov
std
pop
fidivrl
in
hlt
in
cld
inc
cmp
aaa
lcall
lcall
dec
lods
addr16
pop
mov
sbb
popw
mov
scas
mov
cmp
out
div
test
mov
cld
dec
push
test
test
aas
das
adc
jge
ss
ret
dec
insb
or
and
fstl
shlb
lea
xor
idiv
jg
mov
orb
add
nop
div
enter
ret
add
sub
cmpsb
test
pop
test
outsb
cli
sub
into
in
jbe
jp,pn
cmp
in
dec
fstps
inc
dec
cs
pop
push
popa
mov
pop
stc
js
ret
xchg
cwtl
ss
jne
shrl
sbb
jae
pop
jno
jp
popf
xor
mov
push
mov
out
jnp
data16
push
xchg
sbb
cli
sub
pushf
lcall
bound
add
test
jle
lods
aaa
es
mov
fmull
adc
cmp
pop
dec
popa
mov
pusha
imul
outsb
mov
lret
insl
mov
mov
pop
dec
jae
xchg
iret
and
xor
cmpsl
insb
sbb
xchg
and
mov
stos
cli
xor
repnz
mov
dec
jns
clc
jmp
mov
iret
add
and
push
or
rorl
push
jge
push
int
push
int3
or
into
sub
lret
into
sub
stos
cmp
and
sbb
mov
mov
scas
xor
data16
popf
filds
jmp
fwait
icebp
xor
sub
out
out
mov
adc
mov
jno
push
adcl
push
int3
pcmpeqb
push
js
inc
jmp
push
lcall
std
jnp
in
xor
and
xlat
mov
pop
xorb
push
mov
and
pop
stos
push
or
mov
lods
hlt
hlt
fstpl
fildl
mov
push
out
shr
dec
out
mov
jne
mov
push
loopne
jmp
jecxz
pushf
ret
sub
push
xchg
shl
cmpb
decl
mov
adc
mov
add
jnp
pusha
jbe
pop
outsl
mov
jecxz
rcll
aad
push
cmp
in
imul
negl
dec
daa
sarl
and
xchg
jb
xchg
mov
rcr
icebp
lods
dec
ljmp
cmpsl
mov
jg
rclb
xor
adc
cltd
xchg
jmp
shll
in
mov
inc
xchg
push
mov
jae
xor
stos
dec
xchg
movsl
pop
xchg
push
out
mov
in
ljmp
fcmovb
mov
cmc
loope
add
jp
stos
and
mov
push
outsb
stos
push
pop
add
adc
lea
mov
sbb
arpl
or
bound
jns
sub
orl
ret
cmp
rcrl
jp
adc
cmpsb
xchg
adc
sub
les
icebp
test
inc
add
xchg
bnd
rcll
aam
loope
sbb
pop
es
jmp
inc
jge
dec
xor
cmpsl
stc
mov
pop
dec
mov
sbb
add
xchg
nop
pusha
and
fcoms
or
imulb
aas
sub
mov
push
ss
xor
les
leave
les
jo
push
add
mov
repz
pop
xor
jno
fisttpl
cwtl
or
int
jnp
rorl
icebp
and
inc
fs
test
or
bound
adc
rolb
cmpsb
in
lock
aam
out
pop
mov
jno
notl
lea
jae
nop
add
nop
push
pusha
in
inc
lahf
js
sub
outsb
repnz
fmuls
pushf
push
sahf
aam
mov
jecxz
mov
jno
fstpt
jmp
lods
int3
adc
mov
stc
push
cmp
sbb
pop
pop
ret
fs
sub
push
test
es
vcvtpd2dqy
sub
aas
jae
cld
int
adc
mov
dec
outsl
or
sti
mov
stc
loopne
fstpl
adc
rcrb
out
xor
mov
push
out
pop
add
in
adc
mov
test
je
iret
xchg
pop
and
xchg
cmp
lahf
rorb
gs
pop
in
into
mov
inc
mov
loopne
adc
lcall
ljmp
jge
movsb
jl
das
in
pusha
dec
mov
sub
add
lcall
fucomp
fdivrl
int3
dec
nop
movsl
scas
imul
stc
and
or
mov
shl
shl
inc
aam
xor
insb
in
or
fwait
mov
in
push
mov
add
push
or
jnp
xchg
lahf
jl
dec
outsl
cmpsb
push
jno
pop
jo
or
mov
lds
mov
add
jne
sbb
ret
cmpsl
movl
inc
adc
ja
scas
pop
movsl
mov
inc
push
and
enter
imul
loope
stos
xchg
adc
mov
hlt
aam
adc
fsts
lret
push
cmp
movsb
jb
cmp
push
int3
inc
std
nop
mov
dec
mov
outsl
insl
test
sub
jmp
clc
out
cmp
mov
mov
fwait
xchg
loopne
scas
inc
cmpsl
xchg
and
adc
adc
lahf
faddl
sub
xor
adc
lock
rol
pop
jmp
lods
sub
imul
xchg
jo
rsm
adc
mull
stc
lock
nop
pop
jae
push
or
mov
xor
inc
andl
push
xor
out
mov
jb
test
aas
cmp
mov
and
or
xchg
icebp
cmp
or
in
lret
jbe
int3
mov
cwtl
cmc
cltd
sbb
dec
fsubs
pusha
mov
mov
and
out
sahf
cwtl
cmp
inc
icebp
mov
pop
xor
cli
mov
jo
addr16
dec
test
data16
sub
mov
pop
jno
and
jmp
push
fnclex
sub
xor
jb
dec
mov
jno
aad
inc
ja
dec
cmp
sbb
imul
mov
mov
test
or
clc
lret
add
xchg
popf
frstor
cmp
adc
mov
push
adc
push
sub
adc
call
pusha
leave
repz
cmp
shr
test
cmp
cwtl
push
mov
inc
imul
scas
cmp
cs
jo
popf
fadds
stos
mov
push
push
jle
push
lods
aas
push
int3
inc
mov
pop
lret
pop
loope
outsl
and
dec
repz
push
dec
push
mov
in
fiaddl
pop
aad
mov
sbb
push
sub
dec
sbb
mov
stc
aas
adc
and
cmpsb
and
push
stc
push
add
lahf
pop
sub
ljmp
mov
or
es
jecxz
idivl
xchg
push
ds
maskmovq
mull
add
out
adc
xlat
mov
mov
lods
jnp
mov
int3
inc
lock
xchg
add
insl
and
dec
mov
popf
jbe
lods
push
ja
xchg
je
xchg
fsubr
jne
xchg
push
mov
inc
inc
inc
jmp
pushf
sahf
stos
aas
bound
popa
sbb
sbb
sub
xchg
loopne
dec
xchg
push
scas
cmp
or
jnp
mov
or
lods
frstor
icebp
test
out
and
fisubrs
nop
js
jle
stos
xor
movsb
out
pop
aaa
mov
add
cmp
push
test
jmp
inc
jmp
pop
mov
ficompl
fidivrl
adc
inc
sbb
call
adc
or
sahf
push
jns
adc
cmp
outsb
inc
lcall
xor
popa
or
in
mov
sbb
sub
into
insb
push
scas
or
mov
pop
push
xor
push
test
ja
stos
scas
push
adc
or
mov
push
add
or
inc
sbb
sbb
mov
or
lret
lret
ret
lret
cmp
adc
push
fldt
int
clc
movsb
and
adc
mov
dec
sbb
cmp
cmp
xor
pextrw
push
jl
cs
cld
bound
mov
adc
inc
xor
dec
imul
stos
inc
dec
adc
inc
pop
and
push
ljmp
in
push
sub
repnz
popa
mov
inc
add
pop
or
orb
les
jmp
subb
loope
cmp
jg
rclb
repz
sub
out
je
add
sub
adc
aas
or
cld
mov
scas
sub
pop
pop
add
lcall
add
rolb
push
mov
outsl
xchg
call
repz
out
js
cs
mov
stos
nop
xchg
mov
cmp
scas
fwait
xchg
fisubs
pop
pusha
lea
cmp
sub
ljmp
sarb
mov
pop
and
je
mov
mov
xchg
lods
fmulp
pop
lods
sbb
adc
push
add
in
pop
int
je
xlat
lods
or
and
inc
push
dec
rolb
fists
insb
ljmp
insl
xchg
es
push
mov
loop
imul
int
and
int
rcl
xor
mov
ficoml
cmc
mov
lret
ret
push
cmp
lods
out
push
pop
pop
mov
xor
movsl
add
or
jecxz
scas
out
jle
outsb
mov
xor
call
mov
ret
push
add
xor
lods
js
pop
jmp
xchg
mov
cwtl
rol
ja
out
xor
jp
js
sub
jle
jno
ja
cmp
adc
les
out
into
xchg
jnp
pop
in
adc
jl
rcll
aam
scas
ja
sub
push
or
in
es
out
xor
shrd
shlb
jb
mov
test
cmp
mov
mov
pop
pop
cmc
or
lds
dec
hlt
xchg
xor
nop
testb
sub
mov
sub
in
cld
std
mov
xchg
xor
lcall
xchg
push
sub
pop
dec
xor
xchg
xchg
enter
dec
xchg
jne
in
sbb
mov
aad
pop
xor
push
mov
clc
and
in
cmp
cmpsl
mov
mov
ds
sub
jl
inc
mov
clc
cld
test
jno
mov
mov
dec
push
fistpl
cmpb
pop
push
push
out
adcb
inc
mov
nop
aaa
sub
outsb
cwtl
dec
test
stos
sbb
or
imul
leave
in
add
in
add
inc
pop
insb
daa
daa
enter
push
orb
cs
aad
in
andl
pop
lret
jnp
mov
test
sbb
xor
stos
cmp
jbe
add
push
or
ret
mov
jo
repz
jno
insb
and
cmp
out
pop
push
out
aas
rep
hlt
mov
mov
sbb
and
insb
jnp
xchg
dec
ret
gs
stc
push
and
add
sub
cmp
imul
xchg
inc
push
stos
loope
scas
sahf
rcrl
decb
testb
sarl
inc
mov
mov
arpl
xchg
testb
cmpsb
jl
ss
push
repnz
mov
xchg
xchg
sub
pop
xchg
mov
xchg
enter
or
rcll
sub
fmuls
call
and
mov
sbb
adc
and
dec
adc
push
sbb
mov
das
dec
add
insb
nop
pop
dec
push
stc
repz
test
movsb
cld
xchg
jno
rcrl
insb
icebp
shr
inc
push
push
in
das
ret
xchg
icebp
adc
and
mov
sub
loope
test
stos
jb
aaa
inc
lea
out
jbe
jno
xchg
and
xchg
repnz
mov
into
pop
sub
mov
lea
lcall
cmp
mov
push
call
adc
test
dec
rcll
mov
dec
add
jae
aas
icebp
int3
loop
ss
jg
add
cmpsl
add
repz
and
rcrl
cmp
inc
add
inc
repnz
add
icebp
and
inc
nop
add
jnp
lret
mov
das
nop
dec
inc
mov
lcall
mov
data16
je
cmc
adc
pop
fcmovnbe
int3
xlat
sbb
mov
mov
imul
push
push
stc
push
add
push
sbb
bound
test
sbbl
xor
dec
inc
and
pop
push
stc
pop
xchg
leave
shrl
jno
mov
push
inc
data16
xor
and
imul
push
jecxz
push
sub
xor
lret
call
push
aam
jge
aas
insb
jle
or
push
rorb
add
add
dec
test
stos
mov
sub
adcb
subl
cmp
dec
xor
loopne
xchg
testb
lea
inc
cmc
in
sbbb
xchg
icebp
lea
push
mov
in
dec
repnz
cmp
dec
inc
mov
into
cli
cmp
aaa
int3
inc
mov
mov
cmpsl
xor
cli
test
ja
mov
arpl
add
sub
call
adc
lods
sub
mov
mov
sub
cli
xor
inc
adc
mov
dec
shll
ffree
pop
aad
call
add
lods
xchg
arpl
pop
pop
push
sti
lret
jo
xor
mov
mov
hlt
incl
lea
std
xchg
inc
pop
cmp
sbb
stos
jl
and
cs
mov
mov
adc
push
push
sbb
jmp
mov
in
mov
xchg
and
and
int
insl
pop
iret
popf
cmp
fdivl
adc
or
ret
sbb
fcoml
sti
clc
mov
enter
push
push
cmpsl
pop
add
jnp
fimull
lea
lahf
repnz
pop
cltd
imul
and
xchg
dec
add
mov
bound
sub
mov
icebp
js
jp
add
and
pop
rorb
mov
add
add
jmp
setp
xchg
sub
jo
incl
xlat
enter
lock
mov
and
pop
sbb
arpl
or
push
orl
xchg
ja
mov
or
xchg
das
out
out
fs
or
inc
jl
adc
fsubl
xor
cmp
test
aaa
ret
ret
jbe
xchg
sub
fcomps
adc
cmp
sahf
mov
loope
jmp
sahf
leave
dec
dec
cltd
xchg
xlat
test
or
into
outsb
sti
fwait
iret
push
or
test
add
and
popf
pop
popf
sub
js
jno
cmpsl
cmp
mov
xlat
mov
inc
jns
insb
sub
and
mov
lods
sbb
ljmp
orl
jmp
sbb
fnstsw
ja
push
mov
cmovle
sub
dec
movaps
stos
fnstsw
adc
mov
cmp
mov
xlat
jecxz
jp
and
jmp
xor
jl
in
jle
xchg
inc
cltd
into
into
lret
fs
xor
xchg
out
rcll
test
sub
add
aam
sub
mov
inc
mov
xchg
rcr
lods
xor
pop
in
mov
push
out
lods
jno
shrl
test
mov
movsb
dec
ret
mov
add
std
lods
cwtl
fstpt
pop
aam
push
dec
pusha
xchg
fstl
sti
dec
xchg
int3
or
push
gs
adc
imul
mov
or
fwait
jns
ja
aas
cmp
clc
insb
movsl
cmc
jl
dec
pop
repnz
lds
loopne
fwait
adc
adc
mov
cmp
aaa
push
inc
sub
popf
fcmove
scas
rcll
jnp
insb
ret
pop
dec
das
in
xor
popa
andl
sub
rclb
cmp
push
std
jnp
mov
mov
cli
jns
xchg
in
sbb
lret
mov
ja
gs
mov
addr16
icebp
mov
or
in
adc
and
fwait
stos
les
cmp
std
les
ds
sbb
stc
mov
sub
insl
rcll
xchg
sub
scas
sub
and
adc
rcrl
jp
dec
sub
jmp
in
lret
pop
xchg
dec
mov
jge
out
cmpsb
inc
push
add
mov
aam
rolb
data16
pusha
stos
cmpsl
push
in
dec
or
jge
mov
fwait
mov
leave
jmp
dec
loop
or
mov
sbb
sbb
mov
mov
int3
lahf
dec
movsb
sbb
or
sub
movsb
sub
out
push
enter
cmp
popf
inc
pop
jne
sub
xchg
push
mov
popf
mov
pop
popf
stc
fldpi
mov
mov
out
pop
je
clc
jo
ret
insb
mov
orl
leave
mov
xchg
xchg
call
mov
xor
test
loope
scas
xchg
dec
dec
ret
in
ds
xlat
lret
arpl
stos
jmp
ds
and
scas
dec
lret
fs
cmp
in
inc
jbe
and
repnz
xor
test
mov
notl
dec
inc
sbb
xchg
jp
lahf
pop
sbb
mov
push
mull
lds
movsl
mov
ret
or
nop
cmovnp
shll
aam
inc
icebp
pop
jp
ret
and
and
or
loop
mov
lods
pop
gs
test
test
xor
mov
in
call
lock
fwait
mov
lods
xor
xor
dec
xchg
xchg
fdivrs
mov
fnstsw
xchg
adc
flds
int
mov
jle
rolb
gs
test
xchg
adc
and
mov
ja
dec
push
cmovp
xchg
dec
scas
pmaxub
mov
mov
aad
or
stos
cmc
jp
cmp
cmc
repnz
pop
add
lcall
cs
icebp
stos
cltd
inc
cmp
push
mov
lret
mov
out
add
lret
or
sub
adc
inc
enter
fisubrs
je
pop
repz
dec
lods
sahf
sub
jbe
test
push
jecxz
xor
ficoms
add
xor
call
cs
dec
add
lea
es
pop
sbb
lds
cmp
sbb
lcall
pop
add
mov
mov
test
pushf
sub
sti
lret
adc
scas
orb
sub
fistpl
jo
mull
pop
int
or
adc
add
ret
xchg
std
sbbb
xchg
ljmp
sahf
dec
cmp
cmpb
mov
movsb
js
fs
mov
jecxz
sub
push
adc
mov
mov
aad
mov
inc
mov
xchg
fstpl
sub
mov
ret
mul
pop
inc
adc
insb
mov
bound
shlb
dec
or
mov
andl
dec
in
mov
ret
in
mov
rcr
adc
pop
or
std
mov
bound
or
adc
jns
fisubs
ja
jg
mov
mov
mov
lds
dec
or
mov
lret
mov
cmp
popf
orl
fwait
repnz
lods
enter
mov
in
push
dec
mov
inc
into
push
pop
sub
mov
mov
popa
test
jb
lahf
mov
sub
jbe
jmp
jae
add
ljmp
dec
lods
lcall
and
shl
adc
sarl
adc
dec
sbb
and
shrb
scas
daa
add
pop
mov
dec
add
ret
cmp
mov
cmc
in
in
and
or
test
mov
jb
rcll
push
pop
xor
icebp
sub
pop
dec
stos
mov
shl
pop
add
jle
xchg
adc
adc
mov
add
xor
push
push
test
je
cmp
inc
in
dec
mov
adc
jae
js
mov
test
fistpll
addr16
sbb
loopne
test
inc
sti
dec
test
inc
sbb
dec
nop
or
add
dec
aaa
cmp
fyl2x
flds
sbb
jne
mov
scas
sti
lret
and
pop
cmp
sti
mov
inc
cmp
cmpb
jmp
dec
dec
xchg
mov
into
pop
lods
and
mov
pop
or
int3
cmpl
sbb
rorb
inc
cmp
and
int
mov
jmp
push
imul
or
shl
inc
cmc
pop
sub
dec
jl
popa
cmpsb
insb
jns
jge
dec
ss
push
pushf
movsb
push
cltd
fnsave
rorl
jp
mov
dec
sets
xchg
cwtl
pop
imul
mov
push
mov
push
pop
insb
mov
jb
in
add
arpl
inc
add
sbb
sbbb
and
pop
xchg
stos
mov
jne
dec
lcall
ror
loop
sub
imul
ds
out
sub
insb
mov
cmc
or
push
mov
rcr
push
stos
jp
cmp
int
cwtl
fwait
add
xor
or
gs
mov
or
jo
lret
and
add
fnstenv
and
push
mov
sbb
push
scas
inc
movsb
std
jge
inc
mov
push
xchg
inc
sub
in
or
push
ja
jo
push
imul
jbe
sub
pop
mov
stos
js
lret
rclb
addr16
scas
shlb
xor
dec
fxch
jno
push
mov
xchg
pusha
aad
ds
or
jno
xor
lds
pop
ja
fs
rcll
cmc
shlb
ss
xor
jp
inc
push
push
test
cmc
int3
push
jmp
out
inc
ja
sti
add
xchg
add
cwtl
and
dec
mov
inc
or
cmp
loope
insb
jo
mov
jno
stc
or
fidivrs
int3
pop
inc
cltd
jmp
xlat
es
mov
fsts
ret
pushf
or
ljmp
xor
mov
shl
call
data16
outsl
lea
std
inc
lahf
daa
add
xchg
cmc
test
inc
mov
aam
push
fs
xor
test
mov
pop
dec
addr16
and
lret
fists
ljmp
ljmp
ja
pop
inc
inc
jp
fnstcw
jb
jno
cmp
jns
xchg
out
cmp
std
jmp
andl
jbe
and
cltd
mov
lock
shr
fsubs
jle
clc
adc
xchg
adc
pop
xchg
xchg
fs
aas
in
jne
sub
pop
lock
sbbb
or
aad
cmp
add
shlb
xchg
imul
imul
hlt
test
fbld
dec
or
ja
pushf
add
iret
push
test
pop
mov
inc
loop
aad
shr
sbb
xchg
cmp
xchg
xchg
fcom
xchg
dec
addl
jp
dec
test
lret
pusha
aam
xor
push
ja
aaa
mov
hlt
out
mov
mov
mov
sub
xlat
js
aaa
push
int
mov
add
inc
sbb
or
into
and
mov
cmpsl
mov
ljmp
fxch
or
pop
push
xchg
mov
and
repnz
stos
mov
xchg
int3
scas
add
jp
add
jl
mov
mov
popl
cli
imul
mov
push
stos
push
je
cmpsl
inc
push
sub
push
xchg
inc
mov
imul
add
mov
add
xchg
pop
jmp
push
cli
push
jg
mov
adc
lahf
mov
pop
clc
sbb
xor
cmp
and
fmul
dec
push
std
mov
out
loopne
xor
loop
std
adc
xor
mov
loop
out
and
fisttpll
enter
shrl
cmp
adc
xor
push
jmp
lret
jno
sub
ja
adc
imul
sub
xor
xorl
lret
int
popf
mov
into
xor
lcall
dec
mov
loopne
cs
cld
xchg
jge
ds
jg
mov
adc
enter
lods
push
loop
daa
mov
das
cs
sti
mov
faddp
xlat
lahf
pop
adc
sti
fwait
sub
push
jne
stos
adc
lock
adc
dec
shl
push
or
lret
popf
and
mov
mov
push
mov
js
pop
push
ret
inc
jg
in
mov
test
mov
mov
shl
mov
sbb
adc
dec
xlat
iret
mov
xor
lock
rorl
out
mov
jo
and
or
ljmpw
and
cmp
out
loop
cmc
jecxz
push
vpxor
inc
dec
push
adc
out
lret
loope
push
xor
jbe
lds
enter
nop
gs
pop
lahf
jo
fs
sub
jl
pop
idiv
mov
cmpl
mov
into
xchg
mov
call
popf
fsubl
adc
and
adcl
add
sub
cmp
lods
fisubrl
shr
sbbl
push
and
push
call
jnp
outsb
mov
and
or
pop
xchg
cmpb
adc
xlat
push
outsb
arpl
xchg
mov
std
inc
arpl
fs
inc
jmp
dec
shlb
jl
mov
lcall
hlt
fcmovb
adc
xchg
inc
cmp
pop
inc
inc
scas
cwtl
imul
sbbl
adcl
mov
push
mul
push
xchg
push
shll
pusha
aam
xchg
xchg
lcall
jbe
in
ficomps
mov
in
inc
push
dec
mov
scas
push
xor
sub
lds
leave
ficoml
cwtl
sbb
stc
or
mov
jl
cmp
in
inc
lods
enter
fcompl
add
dec
aam
ljmp
and
inc
inc
mov
fiadds
rclb
dec
mov
pop
mov
add
rcl
jb,pn
fwait
and
dec
in
mov
cmp
and
in
cmp
pop
push
movsl
aas
mov
pop
cmp
sub
cmp
mov
and
stos
shll
repz
adcb
fcoml
cmpsb
jns
add
leave
int3
addr16
push
aas
ljmp
jns
adc
test
cwtl
jo
mov
sbb
mov
aam
dec
xchg
push
ss
or
gs
sbb
lock
sub
int
push
and
mov
mov
andl
dec
sub
lahf
shrb
mov
inc
notl
jo
iret
push
lret
jb
pop
sbb
inc
xchg
mov
test
inc
decb
ds
sbb
xchg
aaa
mov
push
test
jle
sahf
or
int
xchg
jmp
push
fwait
mov
adcb
jmp
mov
jno
in
movsl
movsb
push
cli
or
cmpsb
jmp
or
je
js
cs
adc
xchg
push
test
add
loope
lods
add
ret
sub
xor
push
out
mov
pusha
sarb
int
mov
cs
cmc
mov
lcall
aad
sbb
in
push
aas
jle
add
ret
inc
es
xchg
fnstcw
fldt
hlt
cmp
ds
or
xchg
bound
mov
mov
xchg
rcrl
mov
mov
pop
sahf
aaa
mov
decb
jae
xor
fwait
xor
pop
xchg
mov
jns
adc
jp
int3
xor
in
adc
jnp
je
insl
pop
and
adcl
in
test
in
push
push
lods
sarb
dec
add
inc
pop
je
adc
lea
cmpsl
push
aaa
imul
aaa
xor
lds
mov
mov
iret
loopne
mov
ljmp
in
and
scas
mov
unpckhps
inc
in
inc
lea
pop
xor
xchg
movsb
mov
in
inc
lods
cmpsl
push
jnp
lods
imul
pop
adc
cmp
xchg
cs
mov
imul
jecxz
sbb
fisttpl
inc
loope
and
ret
popa
push
stos
stc
lds
loope
shll
xor
pop
iret
dec
lret
mov
lods
mov
sub
scas
notb
cli
aaa
and
cmp
lds
push
inc
scas
add
outsb
test
adc
andl
fyl2xp1
jb
sbbl
xor
dec
mov
ds
test
lret
test
mov
push
cs
push
push
add
scas
shll
cmpsl
sbb
cli
or
inc
pop
push
mov
fnsave
lahf
jl
rclb
pop
cwtd
pop
add
loop
pop
cmp
mov
adc
adc
mov
sbb
mov
jb
push
ret
xlat
jge
xlat
adcl
mov
std
adc
insb
int
jno
movsl
or
lret
pop
push
sub
mov
aaa
popa
outsb
xor
daa
jnp
stos
xchg
mov
mov
daa
insl
mov
imul
xor
push
ja
scas
cwtl
aam
jne
xor
aaa
sti
mov
xor
ret
out
hlt
adc
outsb
sub
jbe
jb
stc
popf
testl
xor
jle
cwtl
imul
pop
sahf
sar
sub
test
fdivl
jge
or
mov
sbbb
out
xor
xor
subb
lret
pushf
push
add
inc
push
mov
into
mov
negl
mov
movsb
pop
ds
adc
and
invd
mov
xchg
insb
jns
hlt
or
add
mov
insb
inc
out
les
or
adc
lods
cmc
fwait
xor
popw
jae
adc
arpl
dec
mov
roll
ss
je
push
call
sbb
negl
mov
repz
cmp
stc
out
outsl
daa
sbb
rcll
enter
iret
ja
gs
mov
xchg
xor
mov
xlat
pop
cmp
in
push
sbb
cmpsb
mov
adc
dec
clc
popa
mov
or
cs
test
les
mov
test
aaa
test
and
pop
das
out
push
inc
insl
mov
adc
cwtl
call
notrack
in
pop
aas
fidivl
pop
and
xchg
ret
mov
jb
es
jno
mov
inc
insb
dec
inc
dec
cmp
mov
mov
mov
pop
add
loopne
sub
in
fsts
sbb
pop
mov
dec
imul
ud0
je
push
lret
nop
mov
ss
mov
inc
sbb
lcall
outsl
sahf
inc
imul
cmp
pop
in
jecxz
jg
scas
xchg
lock
repz
movsb
sbb
arpl
mov
or
dec
lahf
fsts
aaa
sub
inc
cli
push
das
ja
mov
add
and
fcomi
jno
in
iret
stos
inc
pushf
adc
mov
xlat
xchg
repz
dec
jmp
dec
push
mov
sub
push
jae
in
test
add
sbb
jecxz
data16
and
lea
cmp
popa
push
loop
pop
mov
sti
sbb
sarb
cltd
inc
inc
xchg
pop
jne
xchg
mov
pop
sbbb
jnp
mov
lods
xor
pop
inc
test
lods
imul
decb
or
mov
int
pop
ffree
pop
or
and
jg
adc
push
inc
mov
mov
mov
mov
sub
lds
daa
pusha
fcom
xchg
dec
mov
int
cmc
jnp
mov
or
jmp
scas
adc
shrb
sti
xacquire
int
insl
das
sbb
mov
in
jle
into
mov
roll
sbb
adc
and
sarb
pushf
clc
xlat
jle
loop
or
fidivrs
insb
xchg
test
lahf
je
inc
decl
mov
testl
fisttps
ret
xchg
sahf
data16
cld
dec
pop
es
pop
bound
call
out
add
test
faddl
lea
and
cmp
fdivrs
mov
and
push
and
lret
int3
lods
adc
xor
sbb
xchg
mov
add
test
out
xchg
dec
in
xor
cmp
adc
push
adc
data16
popf
jmp
jecxz
mov
js
or
mov
inc
stos
in
leave
mov
and
mov
cmp
mov
xchg
mov
and
pop
sbb
fwait
aaa
sub
pop
pusha
test
lods
jns
or
out
fldenv
stos
add
leave
lods
pop
aas
cs
int3
cmpsb
sub
mov
dec
adc
in
dec
inc
xchg
xor
aas
in
xchg
xchg
or
mov
adc
aas
je
jge
shrb
lcall
adc
cltd
loope
dec
into
ret
jg
loopne
inc
mov
fs
pop
push
call
xlat
mov
jb
shlb
fnstcw
pop
int3
leave
mov
cmp
add
pusha
or
adc
cld
inc
sahf
out
sbb
outsb
dec
mov
loopne
add
imul
mov
sti
popa
xchg
shrb
adc
pop
leave
push
mov
fwait
sbb
test
bswap
cmp
aas
popf
jg
mov
xchg
push
lahf
pop
jge
dec
and
ret
lods
sub
jo
jno
mov
iret
inc
mov
pop
sub
jb
inc
fsub
adc
and
mov
push
inc
imul
add
adc
fs
bound
andb
movsl
push
xchg
inc
jno
inc
or
dec
lea
fdivp
hlt
push
mov
test
call
sub
outsl
lds
xchg
das
cltd
int
ret
mov
imul
pusha
imul
shr
andl
mov
jo
add
jnp
push
inc
fucomip
dec
xchg
sbb
jbe
iret
jae
push
dec
pop
xor
adcb
cmp
push
lds
and
jb
mov
push
adc
mov
xlat
xchg
or
push
shrl
fiaddl
insb
jp
out
xor
ret
aad
or
fwait
arpl
popa
push
xor
cmpsb
repnz
roll
rcr
pop
add
inc
scas
fistpll
fists
sbb
in
jo
pop
pop
mov
sbb
add
les
inc
adc
insb
xchg
imul
std
pop
mov
xlat
sbb
hlt
dec
or
test
mov
pop
lret
out
add
cmp
bound
out
cli
push
sub
push
sbb
pop
nop
pushf
ss
shrl
dec
or
mov
inc
out
mov
xlat
lds
inc
and
dec
pop
rclb
enter
lds
add
sahf
in
je
in
arpl
add
add
mov
xchg
xchg
sbb
repnz
push
cmp
mov
je
int
mov
sbb
mov
out
stc
subl
inc
int3
in
cld
ds
mov
xor
mov
sahf
jle
cmp
movsl
dec
negb
mov
out
cmp
jl
int3
and
sti
js
and
mov
das
cli
mov
sti
push
or
inc
out
sbb
mov
movsl
push
enter
fildl
outsb
insl
xchg
es
adc
mov
pop
imul
mov
jl
hlt
xchg
xorb
xor
push
adc
jp
clc
call
insb
repnz
andl
xchg
dec
lret
mov
xor
xor
lods
mov
inc
call
push
xchg
jae
or
repnz
and
push
lret
mov
bound
lret
xor
and
fistpll
or
incb
cmp
sbb
jb
push
jne
mov
pop
mov
push
xchg
repnz
jb
add
divl
dec
loope
lods
insl
jl
shll
mov
dec
add
adc
cmp
in
adc
push
or
adc
push
lcall
das
inc
arpl
das
and
jle
nop
scas
xchg
cmp
push
or
fwait
adc
jmp
lock
inc
pop
pusha
dec
mov
mov
icebp
clc
scas
movsb
in
sub
bound
dec
dec
subl
out
mov
cmp
push
cmp
movl
outsl
lock
cmp
shll
out
pop
fidivrl
adc
cmpb
std
push
jle
sub
cs
push
loopne
leave
into
fnsave
popf
mov
or
in
outsb
int3
add
push
es
cmp
fs
pop
into
leave
sub
mov
or
xchg
sbb
xchg
sbb
jl
int3
fimuls
or
into
aas
mov
stos
and
dec
cmp
je
mov
negl
decl
xchg
je
inc
mov
iret
mov
xchg
xor
test
push
test
sti
mov
mov
adc
sbb
cmpb
or
mov
jl
mov
in
stc
xchg
cld
xlat
aaa
dec
pop
test
add
sub
jle
rolb
pop
xchg
adc
rorl
popf
pop
lods
or
xchg
gs
sub
mov
pop
int3
add
xlat
ret
sub
int3
cwtl
mov
ss
into
sub
repnz
jmp
xchg
outsb
movsb
cmp
imul
lret
mov
lds
pop
xchg
push
dec
imul
sub
mov
push
fwait
push
stc
ret
test
outsl
in
scas
xchg
pop
std
xchg
jp
sti
push
push
aaa
clc
xchg
sub
fdivrl
mov
sub
test
lods
fildl
xlat
ljmp
jno
jbe
dec
xor
xchg
ds
mov
dec
mov
jno
push
jno
cmc
add
out
add
cmp
mov
jo
dec
test
pop
mov
push
lods
in
jp
addb
popf
iret
sbb
cmp
test
mov
jne
movsb
sbbb
clc
ret
mov
push
sti
out
dec
mov
outsb
push
and
aam
lods
or
ss
aad
nop
push
dec
mov
sbb
test
add
out
mov
nop
jb
xchg
mov
push
jnp
and
push
std
or
sahf
test
push
loopne
sti
xchg
mov
decl
sub
jae
loopne
shl
adc
subl
fsts
gs
sti
in
or
jb
lret
fwait
arpl
clc
int3
and
add
mov
adc
xchg
or
test
in
mov
mov
or
push
sbb
jge
mov
push
and
pop
cld
scas
xlat
in
std
aad
out
xchg
sahf
sub
or
aaa
mov
push
out
movsl
sbbl
cmp
fs
rorb
fwait
sti
aad
xchg
xchg
les
cmp
cmp
jnp
out
xchg
or
and
test
jle
mov
mov
loop
xlat
cmp
call
cli
jmp
hlt
mov
inc
jecxz
or
cli
stos
fldl
test
cmpsl
jne
xor
sbb
loope
lret
cwtl
ds
pop
mov
lds
lret
inc
xor
inc
outsb
gs
leave
inc
xchg
sub
subb
sub
or
dec
insl
inc
call
ret
fistpl
jo
and
data16
ret
mov
ficompl
push
cs
shr
add
mov
movsb
pusha
sub
inc
cs
inc
cmpsb
sbb
bound
ja
daa
icebp
push
shrl
in
cmp
pop
mov
and
hlt
testl
jnp
fwait
aam
xchg
pusha
xor
sti
iret
mov
sahf
pop
nop
or
sub
cmpsb
add
add
xchg
add
jb
repz
jg
leave
mov
xor
xchg
sbb
or
ljmp
fdivrp
outsl
hlt
movsl
xor
pop
add
insb
inc
das
xor
add
loop
inc
in
scas
and
adc
insl
or
mov
mov
or
add
add
nop
cmc
jbe
sub
mov
aam
fcomip
pop
cmp
aam
xchg
jg
xchg
xchg
sar
mov
fstpt
imul
data16
test
add
and
lahf
call
xchg
and
adc
jg
je
mov
in
fsubrs
test
dec
sub
sub
les
das
jecxz
bound
out
ret
aas
or
xor
mov
cld
or
popa
adc
sub
inc
mov
sub
push
push
jo
jge
and
lock
movsl
pop
fdecstp
pushf
data16
popf
mov
rolb
data16
insl
add
push
dec
jg
test
mov
shll
mov
push
test
ficoms
push
jecxz
testb
ret
aas
mov
pop
pop
dec
pop
lea
xchg
lret
shrl
inc
or
cmp
cld
hlt
cmp
mov
mov
sub
lea
inc
cmp
in
outsb
mov
xchg
mov
sub
lea
xchg
fidivl
mov
ljmp
sub
jge
push
cmpsb
mov
out
ret
jbe
mov
sbb
subl
cmp
xor
inc
inc
sbb
inc
iret
dec
pop
call
insl
cmp
mov
idivb
js
inc
mov
lea
xor
std
jmp
fsubrl
jmp
cs
adc
les
mov
pop
xor
pushf
subl
cwtl
push
mov
and
mov
push
push
sub
jecxz
shlb
out
xchg
lock
fcompl
cwtl
imul
dec
or
mov
and
ret
xor
jns
push
pop
mov
dec
pop
or
stos
xor
scas
pop
inc
test
nop
cmp
sbb
fstl
cmp
cmp
inc
insb
out
push
sub
xor
testl
fcomp
xchg
and
js
bound
mov
pop
pop
iret
pop
cld
push
xor
test
mov
adc
clc
pop
xor
jmp
les
aad
les
fwait
or
insb
loop
subb
pusha
sti
out
cmpsl
or
mov
stc
sbb
das
cld
es
mov
sbb
jno
add
xor
out
dec
std
xor
pop
jge
push
xchg
fbstp
aaa
ljmp
out
loope
ficompl
in
cmp
xor
push
or
jmp
aas
test
fstpl
mov
pop
push
sbb
imul
and
sub
mov
in
test
rcrl
test
es
loopne
daa
push
xchg
enter
cs
loop
mov
leave
sub
push
push
int3
mov
ja
sbb
clc
test
dec
mov
fcomps
bound
jbe,pn
mov
sub
xchg
dec
mov
cli
std
cli
loopne
xchg
shlb
jg
dec
lods
outsb
inc
adc
mov
loopne
jnp
push
cmp
lds
jne
shrb
inc
in
pop
mov
add
shll
adc
jb
loop
ret
push
cmp
dec
mov
inc
iret
mov
imul
adcb
mov
subl
stos
inc
mov
xchg
inc
lret
xor
das
adc
mov
xor
sbb
push
loopne
jl
dec
xor
out
bound
pop
sbb
xor
fwait
in
jno
mov
push
pop
jge
mov
adc
add
mov
cmp
pusha
std
bound
push
fmuls
push
cwtl
pusha
insl
lods
mov
and
iret
cmp
test
cwtl
test
dec
outsb
fsts
mov
or
lcall
fimull
push
icebp
xchg
outsw
nop
sbb
cmp
enter
dec
add
daa
out
in
pop
sbb
dec
je
mov
icebp
xor
add
push
mov
push
testb
xor
pop
mov
cltd
xchg
or
lret
jno
pop
push
cmp
push
sbb
daa
push
pcmpeqw
int3
dec
sbb
ljmp
mov
in
xchg
ja
cmp
cmpsl
rclb
mov
mov
sar
dec
inc
pushf
adc
dec
jns
xchg
in
sti
jo
and
jnp
fstpl
adc
sub
daa
hlt
jg
fnstsw
aas
xor
in
xchg
xor
inc
aas
shl
or
pop
push
imul
nop
sti
mov
dec
sbb
dec
jne
xor
or
mov
int3
loope
gs
shl
xchg
repz
mov
popf
iret
xchg
pusha
scas
add
mov
inc
gs
add
pop
jmp
pop
dec
movsb
aam
xor
jno
jno
cmpl
int
clc
sbb
push
scas
adc
shrl
rcl
loopne
xchg
inc
movsb
or
mov
or
jae
cmc
add
sub
cs
xchg
pop
sbb
jecxz
add
mov
mov
fidivl
arpl
adc
fcompl
ja
push
mov
push
and
lock
fiaddl
mov
loope
shl
mov
xchg
ja
pop
ret
cltd
rclw
outsl
add
outsb
jmp
mov
inc
mov
dec
jne
aaa
popf
xchg
fisttpll
movsb
fs
loopne
pusha
jecxz
dec
nop
mov
dec
mov
mov
dec
inc
lds
in
loope
aas
xor
mov
fdivl
repz
mov
adc
lods
xchg
lea
push
sub
cmpsl
push
cmp
js
push
scas
lcall
adc
cmp
loope
xchg
lods
xlat
jg
xchg
jno
add
push
mov
sub
aaa
or
xchg
rcrb
icebp
insl
sbb
in
xchg
dec
data16
fiadds
xchg
loop
jge
inc
jmp
mov
jno
jecxz
in
int
loopne
mov
cld
lods
fsubr
sub
and
mov
adc
mov
push
jmp
adc
lods
out
sbb
mov
xchg
or
adcl
mov
in
cld
push
jg
cmp
mov
add
daa
fcmove
inc
aaa
clc
inc
adc
aam
ret
in
je
cmp
aaa
mov
fwait
shrl
xchg
les
lods
xchg
and
sub
out
xchg
cltd
fsub
xlat
push
js
sbb
or
sti
ja
test
imul
loop
dec
ds
cmc
sub
xor
mov
xor
pop
pop
outsb
out
lea
jo
insl
sahf
sahf
pop
or
pushf
loopne
mov
or
repnz
imul
ret
jecxz
sbb
and
cli
loop
push
sbb
mov
ds
idivb
fld
pop
mov
cmp
imul
or
jae
push
add
mov
adcb
mov
inc
stc
jg
and
add
ds
insb
cwtl
xchg
lahf
push
inc
out
ja
xchg
les
subl
mov
ss
lods
mov
add
popf
faddp
xchg
test
add
add
pop
push
int3
fbld
popa
and
shl
leave
js
loopne
mov
and
sbb
cmp
mov
andl
leave
pop
pop
inc
jecxz
mov
xchg
push
ja
dec
dec
orb
jnp
mov
mov
loopne
sub
mov
pop
loope
pop
jae
int3
push
sbb
iret
out
pop
outsl
sub
pop
mov
push
ja
es
test
in
cwtl
gs
push
and
repnz
add
cmp
je
stc
aas
lea
xchg
dec
mov
ja
std
mul
or
xchg
fsub
das
mov
sub
shr
lods
sarl
ret
add
nop
xchg
sbb
pusha
xlat
pop
clc
rolb
xlat
and
subl
pop
mov
das
ja
test
or
xchg
mov
mov
xlat
push
dec
int
jb
fadds
lods
dec
mov
pusha
push
mov
test
sti
sbb
cmp
xor
adc
pop
movl
fs
sbb
jb
and
daa
repnz
mov
lahf
fs
cmp
cli
ds
cld
pop
add
test
sub
dec
sub
cltd
mov
call
outsb
jno
sbb
shl
in
in
gs
sub
insb
mov
cld
popf
fwait
pop
dec
inc
clc
add
push
cmpsl
cwtl
fistpll
and
cltd
mov
arpl
ja
mov
or
lods
scas
push
sti
jo
in
adcb
ds
mov
mov
imul
add
mov
std
sti
push
repz
and
dec
ljmp
aad
lods
xor
xchg
mov
or
sub
mov
iret
push
push
jo
jecxz
sub
sbb
addr16
sbb
jae
push
cli
lods
sahf
cmp
rcll
frstor
loope
daa
cmpsl
cmp
dec
leave
movsb
or
mov
jnp,pn
pop
add
popa
dec
push
sti
cmpsb
cld
fistpl
xchg
adc
fucom
jg
push
mov
cmpsl
mov
xor
push
sar
adc
out
add
pushf
aad
xchg
push
mov
mov
nop
adc
cwtl
loope
push
mov
mov
mov
xchg
xchg
mov
jae
call
sub
lcall
mov
cmp
push
ret
cmp
cli
pusha
mov
mov
inc
bound
sub
outsl
cltd
inc
cmp
in
or
repnz
pushf
out
pop
mov
jo
ds
sar
test
enter
sub
xchg
pop
aas
or
jecxz
mov
xchg
popf
jb
dec
inc
lret
js
rcrl
adc
sbb
stos
adc
sub
push
dec
sbbb
jmp
pop
mov
inc
lcall
xchg
dec
test
insl
or
sub
add
and
sbb
and
rclb
clc
test
and
sub
pop
jo
mov
sub
xor
lds
pop
addr16
mov
test
mov
mov
cmp
pop
xchg
jp
sub
cmp
shrl
inc
aas
cmp
call
push
inc
fisttps
sbb
and
std
xor
lret
xchg
insb
or
push
lcall
cmp
jbe
repz
jmp
ret
jbe
adc
aas
dec
rorl
lret
add
pop
mov
push
incl
xchg
dec
push
test
and
sbb
sub
xchg
lods
pop
add
jno
mov
aas
push
in
sbb
out
adc
inc
lea
je
pop
sbb
mov
repz
xor
out
cmp
sarb
xor
out
xor
push
pop
jno
xchg
push
aad
dec
cmp
ss
int3
dec
mov
imul
xchg
js
cmp
and
inc
or
cmp
das
xchg
shrl
push
inc
xchg
xchg
dec
imul
js
test
lds
xchg
xchg
fiaddl
ret
mov
ret
imul
sub
bound
sti
mov
cltd
sub
mov
fs
cmpsl
mov
out
xor
dec
aad
or
and
test
xlat
pop
cmp
jns
sbb
test
es
daa
cmp
test
imul
jae
xor
jno
outsl
push
push
nop
mov
fists
mov
add
aas
push
test
or
pop
jge
mov
in
xor
push
sub
mov
enter
fsts
xchg
out
nop
inc
fists
popa
push
adc
dec
je
inc
cltd
outsl
mov
movsl
mov
pop
mov
iret
mov
mov
sarb
xchg
sar
mov
lcall
jmp
les
iret
nopl
outsb
aas
fs
xchg
addr16
outsb
xor
pop
jne
inc
aas
inc
gs
mov
mov
fwait
jne
loop
fnstenv
add
mov
xchg
lahf
mov
out
scas
sbb
mov
jnp
mov
nop
mov
rorb
ja
incl
mul
xchg
cmp
push
push
sbb
add
popf
aam
mov
sbb
or
xor
mov
insb
mov
xchg
mov
cmp
lods
psrad
cltd
mov
sbb
out
xor
inc
pop
ds
movsl
push
movsb
xlat
mov
cmp
mov
xor
bound
mov
mov
dec
imul
nop
fstpl
sahf
neg
cld
and
out
je
jne
push
or
out
test
mov
in
cmp
lods
lods
cld
scas
and
xchg
xor
in
repz
imul
dec
addr16
repnz
aas
call
sub
clts
jne
and
jae
mov
lock
add
sbb
call
inc
dec
mov
inc
push
and
cs
test
in
sub
xor
cmp
sub
push
sbb
jecxz
shlb
inc
js
push
rcrb
push
dec
out
hlt
dec
imul
enter
xor
xchg
xchg
adc
xor
outsl
mov
cmc
pop
mov
inc
mov
insl
loope
vmread
scas
fcomi
enter
push
je
xor
fldcw
and
mov
addr16
test
xchg
lcall
jbe
ljmp
and
jle
mov
jmp
mov
ficoml
jg
and
shrb
out
scas
jg
push
cmp
pop
or
es
sub
mov
imul
jne,pt
add
xchg
loopne
jge
mov
and
or
and
dec
dec
int
pop
stos
push
mov
pop
jmp
aad
push
sahf
jns
aas
ficomps
xchg
adc
mov
lret
pop
gs
cli
push
scas
jmp
sbb
ds
cmp
sbb
pop
lock
sub
jg
movb
jg
shlb
loopne
stos
sbb
scas
or
dec
mov
cltd
aas
shlb
add
push
ret
xchg
lds
lods
inc
stos
jle
stc
hlt
test
mov
and
xor
inc
mov
notl
mov
inc
mov
jp
es
or
and
xlat
out
mov
or
repnz
out
push
leave
sti
idivb
movsb
adc
xchg
mov
and
cmp
outsb
xor
xor
shll
std
scas
mov
mov
adc
mov
das
sti
jle
popa
xor
or
jp
mov
pop
pop
fidivl
mov
jbe
cmp
cmp
sbb
cs
inc
std
je
sbb
xor
and
mov
pop
dec
push
addl
cmp
rcpps
pop
cmp
sub
xchg
out
jne
and
inc
and
dec
pop
cs
pop
data16
add
fdivrs
jecxz
int3
fcompl
add
adc
into
aas
inc
lods
movsl
xorl
jecxz
xchg
andl
mov
into
and
shl
mov
insb
push
dec
leave
insb
leave
repnz
add
test
sub
iret
dec
mov
pop
mov
pop
cwtl
fcmovb
popa
cmp
mov
mov
cmpsb
xchg
movsl
addr16
pushf
jo
xlat
mov
aad
cli
or
mov
hlt
rolb
dec
and
jp
mov
and
or
in
mov
push
mov
mov
or
addb
enterw
pop
mov
popf
add
cltd
bound
icebp
std
adc
push
ret
in
flds
test
cmp
imul
sub
inc
imul
mov
mov
or
lock
sub
xchg
inc
push
clc
pop
pop
xchg
inc
mov
imul
cmp
jl
cwtl
cmp
movsl
dec
add
mov
rcrb
frstor
addr16
inc
shrb
or
cmp
cwtl
jg
cmp
cmp
xorb
jae
add
stos
enter
das
popf
in
cld
rcll
and
dec
and
sbb
or
testb
ret
or
mov
fs
int3
fldenv
fists
xor
data16
imul
std
xchg
jno
mov
orb
lcall
pusha
pop
icebp
testb
and
dec
pop
insb
push
jge
cmpb
xlat
jae
lods
mov
fwait
leave
imul
sbb
loop
call
inc
jecxz
jo
test
push
adc
jne
jns
cltd
nop
xchg
push
insl
icebp
sbb
push
and
xor
jbe
push
ja
xlat
jg
or
lods
adc
cmc
mov
std
loopne
sbb
mov
adc
dec
pusha
les
insl
cld
into
data16
loope
test
ljmp
mov
daa
cmpsb
sub
push
aaa
popf
sbb
and
dec
int3
jbe
pop
sbb
mov
jp
mov
lods
cmpl
nop
pushf
adc
rcr
inc
cmpsl
cmp
aas
jns
or
es
push
lods
fidivs
test
jo
fwait
lahf
inc
in
dec
push
in
je
outsl
cmc
mov
fsubl
lret
not
mov
test
inc
imul
loop
out
in
fstpl
jmp
fisubs
cmp
xchg
sub
outsl
sub
adc
mov
mov
movq
cld
or
adc
and
out
dec
je
pop
pop
cmp
repnz
dec
pop
mov
std
fneni(8087
mov
loop
xchg
jb
aas
pop
or
cmp
adc
push
xchg
sti
xchg
dec
imul
lahf
adc
mov
dec
pop
shl
out
mov
leave
or
ljmp
add
cmpsl
jg
jg,pn
adc
movsb
adc
enter
jns
or
dec
sub
jbe
cvtdq2ps
push
out
or
push
jo
iret
mov
les
lret
push
test
mov
faddp
or
inc
cli
jmp
mov
mov
out
xor
mov
test
dec
in
or
push
js
push
lds
cli
dec
jge
icebp
popf
pop
pop
test
dec
sbb
mov
and
bound
jno
mov
jl
loopne
pop
push
in
out
or
mov
sti
fmuls
push
xor
xchg
dec
mov
dec
decl
fmull
pushf
add
icebp
xchg
shr
pop
mov
and
fwait
xchg
xchg
mov
fldt
mov
das
int
jbe
popf
mov
cs
cs
push
cmp
mov
mov
popf
pushf
sub
test
fs
ja
sub
xor
cltd
xchg
clc
int3
or
js
jg
jb
dec
xchg
inc
andl
or
and
jg
cld
and
rorb
pop
rorb
dec
lea
pushf
jmp
add
add
jmp
xchg
scas
cltd
xchg
std
repz
imulb
adc
mov
stc
xchg
add
ss
or
imul
mov
xchg
xchg
das
or
add
xor
jg
int
sub
test
cld
ss
xlat
test
fbld
aam
fwait
ja
inc
sub
js
pop
cmpsl
pop
stos
mov
sti
push
jns
js
sub
and
or
push
and
pop
out
in
cmp
stos
scas
insb
cmp
into
cs
push
sub
cmc
pop
add
nop
jns
mov
xchg
add
incb
int
ljmp
js
enter
sahf
mov
inc
mov
jl
ret
cmp
ss
cmc
dec
nop
push
fiaddl
add
pushf
pushf
dec
push
xlat
movsl
push
mov
fbstp
mov
hlt
aas
mov
jmp
loop
mov
jp
mov
jae
movsl
popa
rcr
mov
cmpsb
cs
sub
pusha
jb
or
mov
divb
in
jge
in
xchg
aas
cmp
mov
fbstp
lcall
es
push
xor
mov
fsubs
or
lock
fidivrl
icebp
or
pop
sub
or
mov
add
aam
sbb
pop
pop
test
pop
sub
mov
arpl
ss
jle
jmp
push
daa
rorl
add
scas
sbb
fbld
fs
mov
sub
movl
or
call
dec
outsl
inc
or
fbld
mov
stos
mov
insl
xchg
out
mov
fwait
ljmp
addr16
sub
xor
cmpsl
xchg
in
jns
sbb
push
loope
lcall
gs
shld
xor
mov
push
push
adcl
outsb
cmpsb
pusha
jno
insb
mov
push
inc
push
mov
add
fsts
sub
dec
adc
sbb
les
daa
adc
jge
cs
packssdw
stos
inc
adc
mov
sbb
pop
repz
and
mov
and
push
pop
jmp
dec
int3
mov
xor
sbb
jae
add
scas
xchg
iret
bound
inc
mov
cmpsl
fdivrs
and
inc
popf
pop
test
insb
outsl
inc
jb
leave
enter
adc
out
ds
add
sub
test
pop
push
movb
sahf
mov
out
and
fimull
pushf
dec
std
inc
sarb
out
imul
cmp
rorl
cmp
pushf
loope
sub
xor
jle
mov
ljmp
nop
bound
cmp
dec
mov
fucomp
in
pop
lahf
and
sti
dec
pop
xor
dec
imulb
push
push
mov
pop
test
mov
mov
inc
daa
jbe
stc
jno
adc
inc
stos
aad
pop
lea
xchg
fldl2e
add
fcoms
sbb
cmp
push
mov
outsl
sbb
mov
fcomi
shl
jbe
fiadds
and
add
xor
and
push
add
xorb
pushf
lods
and
rol
sub
push
adc
cltd
and
sub
shr
lea
notl
scas
add
int3
fmul
and
sarb
mov
and
movl
jnp
mov
push
ss
loopne
mov
je
popa
jae
les
lcall
sub
pop
pop
mov
sbb
sbb
stos
mov
push
mov
movsl
fisttpl
sbb
xor
and
jno
push
arpl
aam
dec
sbb
shr
arpl
xchg
imulb
cld
pop
mov
and
test
imul
daa
imul
outsl
push
imul
lods
repz
outsb
std
out
loopne
pop
sbb
mov
pop
into
jbe
mov
ja
jmp
xor
cwtl
das
inc
das
add
aaa
scas
cwtl
xor
xchg
nop
neg
nop
jmp
sub
push
loop
dec
rcrl
lock
imul
bnd
out
add
inc
fstpl
push
inc
divl
mov
test
pop
roll
adc
dec
ret
repz
ret
add
pushl
fwait
mov
nop
and
jne
idivl
int
cld
xchg
sub
aam
movsl
xor
sbbb
into
jecxz
mov
movsb
inc
inc
push
out
pop
sub
test
shr
out
mov
aaa
add
sub
mov
inc
sbbl
mov
aaa
dec
lods
inc
clc
nop
cmp
aam
cmp
sbb
repz
cmpsb
and
fnstsw
je
add
lds
mov
push
dec
stc
movsl
cltd
outsl
loop
je
jb
add
ds
test
xchg
mov
pop
add
dec
mov
das
adc
fs
add
subb
scas
jmp
add
push
fwait
outsl
pushl
push
push
div
pop
push
aam
ljmp
leave
mov
jp
arpl
sub
addb
popf
mov
lods
mov
and
sti
jo
flds
and
xor
push
outsb
mov
rorl
mov
inc
cmp
scas
push
fadd
lcall
pop
pop
lret
popa
out
enter
sub
xchg
sarb
outsb
jns
addr16
test
mov
lods
mov
mov
mov
add
cwtl
dec
dec
sub
pop
and
aas
ja
push
pop
scas
js
mov
int
mov
sti
imul
push
ficomps
push
lea
fcompl
and
arpl
xchg
dec
sbb
add
adc
pop
repnz
daa
popf
cmc
pop
sub
adc
add
pop
sub
fs
fs
test
mov
sub
xchg
lea
dec
pop
cli
jmp
pusha
stos
cs
int3
lds
movsl
mov
mov
iret
enter
scas
stos
mov
mov
clc
inc
loope
into
scas
jb
or
push
push
dec
jmp
jne
ljmp
push
stc
aas
data16
fstps
sbb
int3
sbb
fbld
xor
mov
andb
mov
inc
sahf
shl
jae
iret
and
imul
xchg
popf
lahf
mov
inc
xchg
lcall
cmp
inc
cmpsb
inc
push
push
cmp
push
daa
adc
ja
cmpsl
je
push
pusha
shlb
out
in
movsl
jmp
xchg
mov
push
mov
xchg
loopne
sub
out
push
push
movsl
imul
dec
dec
popf
ret
jae
adc
test
ljmp
stc
mov
adcl
mov
in
and
and
sub
push
dec
mov
lcall
sub
mov
xchg
jo
shrl
lcall
stos
icebp
das
pushf
int3
lds
leave
jle
outsb
lahf
push
mov
cli
fldcw
mov
mov
pop
adc
sub
mov
sub
jae
lret
mov
jnp
in
and
rcrl
xchg
cld
add
sub
lods
mov
dec
rorb
add
into
fadds
notl
or
scas
xor
pop
mov
cmp
in
xchg
ret
out
jbe
loop
jecxz
inc
cmp
scas
mov
mov
sbbb
sar
cmp
jno
sahf
mov
xchg
push
outsl
mov
loope
cld
or
pop
mov
or
mov
movsl
push
and
mov
popf
xor
sbb
xchg
mov
loope
pop
icebp
mov
mov
jae
in
mov
leave
scas
xchg
push
pop
xchg
out
into
and
xor
xorb
rorb
pop
scas
pop
inc
push
pop
test
push
adc
movsb
adc
xor
jne
push
jle
pusha
testl
ficompl
xchg
and
and
movsl
lret
dec
int3
cmpsl
mov
pop
nop
pop
and
in
out
movsl
jecxz
inc
sbbl
xchg
insb
or
in
loopne
lcall
pop
xchg
gs
pop
add
xchg
pusha
add
dec
jp
fsubl
push
idivb
xor
rorl
sub
and
outsb
fmull
pop
lock
hlt
cs
into
imul
sub
inc
pop
xchg
rcrb
jae
mov
mov
xchg
and
xor
loopne
sub
xor
int
aas
fiadds
enter
cmp
inc
pop
les
push
inc
sbb
sarb
cli
mov
adc
sti
shll
lret
xor
cmp
pop
outsl
mov
pusha
and
aas
push
ja
mov
xchg
andl
aam
rcrb
xor
and
mov
fucomp
dec
push
mov
test
insb
mov
add
notb
fisttpll
cmp
xchg
pop
cmc
pop
push
hlt
add
daa
inc
pop
scas
aas
sub
mov
jbe
ljmp
pop
xchg
fdiv
lret
mov
je
add
out
xchg
ret
into
add
cmp
add
mov
shrb
cmp
js
add
adc
fistpll
test
cld
clc
arpl
insl
or
dec
jmp
popf
xor
fwait
or
push
popf
mov
divb
in
sbb
sub
imull
xchg
cltd
jg
inc
aaa
cmp
lock
stos
loope
mov
icebp
cs
roll
ror
ljmp
or
pop
inc
mov
movsl
push
daa
pop
iret
lods
cltd
jb
jg
sbb
in
outsl
xchg
cmp
push
jnp
mov
dec
mov
jae
fneni(8087
mov
mov
adc
xchg
imul
movb
iret
loop
das
push
sub
imul
pop
jl
loop
popa
dec
dec
add
xor
push
aad
cmp
or
hlt
sub
sbb
insl
nop
daa
mov
mov
mov
sbb
xor
loope
icebp
fwait
out
mov
loopne
mov
outsl
lea
fs
sub
and
test
sbb
dec
sub
mov
add
sarb
mov
pop
xor
xor
cli
cmpsb
pop
push
push
sub
sar
outsl
mov
inc
mov
jo
js
icebp
outsb
aad
aas
sub
in
ret
cwtl
je
sahf
das
clc
ss
inc
push
arpl
mov
jg
mov
loop
push
call
and
mov
push
lea
jge
sub
orb
cld
cld
cmp
sarl
movsl
lods
dec
cmp
inc
mov
jb
addr16
dec
add
dec
and
xchg
mov
cltd
xlat
xchg
aam
ja
test
xchg
es
mov
push
sti
mov
cmp
and
push
mov
inc
lcall
loopne
nop
xor
and
in
pop
jl
jmp
repnz
test
and
shrb
inc
cmp
aam
xchg
push
popa
out
lret
push
xchg
cmp
xchg
mov
mov
test
inc
mov
fmulp
cltd
ds
sub
sub
or
test
fsubl
adc
adc
add
pop
in
push
lods
sti
ss
or
xchg
call
iret
inc
xchg
out
sahf
cld
cmp
call
aad
pop
sbb
popf
fadds
wbinvd
int3
mov
mov
enter
loopne
orb
mov
jmp
adc
jg
outsb
inc
shl
mov
stos
cmp
fsubrl
aam
repnz
leave
inc
cmp
jo
adc
mov
popf
cmpsb
std
pop
fdivl
sub
rcr
jg
push
cmpsl
cmp
or
add
movsl
dec
stos
shrl
stc
sub
fucom
fstps
pusha
jne
test
and
addr16
cmp
mov
shl
int3
jbe
xchg
dec
pop
stc
fucomip
outsl
push
sub
sbb
daa
dec
sub
test
subb
mov
jno
stc
testb
and
push
mov
inc
stc
pop
pop
xchg
outsl
insb
push
jmp
pop
fyl2xp1
lcall
inc
cltd
mov
fsubr
adc
repnz
mov
lret
aam
push
scas
cmp
mov
mov
fs
mov
pop
hlt
je
add
fsubrl
in
inc
sbb
add
pusha
xchg
insl
push
lahf
mov
jae
sbb
and
sub
sub
dec
push
fs
and
or
jp
aas
inc
xchg
les
pop
xchg
dec
xchg
pushf
xor
outsb
movsl
js
add
outsl
dec
shlb
js
add
push
jb
bnd
repnz
aam
inc
lret
scas
clc
add
loopne
fisubs
int3
dec
push
mov
imul
fisubl
repnz
dec
iret
or
fwait
add
lret
adc
push
and
jae
loopne
add
mov
sub
shlb
or
sub
nop
or
out
and
es
mov
bound
in
in
or
orl
jno
pop
mov
enter
or
ja
add
bound
mov
inc
mov
test
dec
in
fcoml
add
pop
adc
mov
add
push
aaa
imul
mov
pushf
push
mov
add
pop
fidivs
fstpl
xchg
aad
test
in
out
sarl
and
in
pop
pop
ss
add
and
jne
out
pop
loop
mov
jge
mov
and
cmpsb
pop
jecxz
jge
ret
or
and
popa
enter
inc
push
xchg
adc
push
pop
ss
mov
pop
out
jne
xchg
in
xor
cmc
lods
addr16
popf
xor
insb
hlt
xchg
mov
push
in
icebp
jno
pop
rcrl
cs
pop
lcall
test
aaa
mov
or
inc
pop
aam
sub
sub
jo
loop
xchg
mov
addr16
sbb
push
sti
adc
adc
aam
sbb
push
icebp
or
pop
push
inc
mov
idiv
and
jge
pop
test
inc
adcb
cmpsl
stc
out
mov
dec
test
call
xchg
xor
sub
add
lcall
popa
loopne
test
lock
jns
movsl
xchg
fcomi
mov
outsb
cmp
popf
adc
xchg
or
test
lods
pusha
in
adc
inc
sub
lret
xor
push
fisubrl
pop
out
in
fisubs
jge
push
data16
rcrb
adc
test
cmp
mov
iret
ret
outsb
in
movsb
fnstcw
and
add
and
mov
out
rcr
add
clc
xchg
push
inc
fstpl
test
hlt
rcrb
sbb
clc
xlat
adc
dec
lcall
dec
in
sahf
xor
inc
jnp
ror
sbbb
jnp
movsb
xchg
mov
in
out
add
lret
insl
adc
xor
fdivs
and
es
mov
sbb
addl
dec
jl
mov
pop
sub
icebp
adc
enter
mov
xor
pop
pop
push
push
inc
pop
sbb
mov
iret
pop
jl
in
lods
es
and
loop
cmp
dec
int3
psrlw
mov
cmp
add
sub
movl
xchg
out
cmp
leave
dec
sub
xor
fisttpll
ds
ja
or
ficompl
imul
mov
adc
mov
push
or
test
rorb
xchg
cmp
cld
mov
rolb
push
cmp
jge
sbbl
dec
push
sbb
cmp
or
rclb
popl
ret
cs
fidivl
add
or
jae
pop
repnz
out
adc
push
add
bswap
push
ljmp
pop
loopew
mov
add
cld
and
insb
lea
in
push
jb
call
mov
ja
shlb
lret
lcall
test
es
mov
lds
imul
imul
rcrl
jnp
dec
out
and
andb
lret
dec
push
fistpl
sub
xor
aaa
shlb
ds
stos
es
add
mov
mov
aad
cmp
test
sbb
cmp
xor
test
pop
in
xor
test
sbb
push
daa
jnp
fsubrl
sti
popf
xchg
imul
or
pop
mov
adc
pop
add
jmp
icebp
cs
pop
cmpxchg
cmp
pushl
je
push
lar
mov
or
pusha
xor
sub
fistpl
mov
outsl
inc
je
mov
icebp
sub
xor
daa
test
mov
orb
mov
sub
dec
push
cli
cltd
daa
mov
xor
or
fimull
xor
movsl
inc
roll
fldl
ret
insb
outsl
mov
cli
push
sbb
cwtl
lcall
push
dec
insb
cwtl
mov
mov
mov
xchg
pop
push
or
sbb
inc
dec
ret
xor
pushf
outsb
sub
mov
sbb
push
scas
pop
dec
insl
movsb
adc
popa
shl
aad
dec
test
movaps
jo
mov
mov
in
mov
mov
sbb
xchg
sbb
push
adc
sub
mov
dec
jl
cmp
in
or
jmp
push
pop
test
and
sbb
cwtl
or
push
ja
sub
xchg
inc
sbb
push
mov
out
xlat
mov
rorl
sub
ss
pushl
mov
add
insb
fs
test
xor
lret
push
ret
leave
fisubs
xchg
bound
lock
dec
lds
and
mov
sbb
fsub
xor
divb
inc
ljmp
inc
sub
xchg
inc
clc
and
test
ljmp
int3
sbb
popf
iret
add
or
movsb
repz
push
fwait
nop
sub
subb
ret
loop
xchg
repnz
add
push
shll
cmc
jecxz
or
sarl
or
and
and
xchg
push
outsb
and
out
fcmovnb
adc
cmp
stos
xor
mov
dec
pop
mov
idiv
rolb
pop
push
sub
xchg
es
sbb
jnp
inc
fsts
inc
loop
aam
and
xor
push
jl
adc
loope
test
xor
lcall
adc
lock
push
xor
pmulhuw
sti
jmp
jns
adc
mov
xor
mov
cmpsb
pop
cltd
lock
ljmp
mov
lods
ljmp
lods
mul
mov
xchg
mov
je
mov
push
xchg
adc
pop
loopne
xchg
std
add
sbb
les
jno
in
adc
imul
das
sbb
xor
pop
mov
je
mov
xor
mov
pop
in
jle
lahf
pusha
xchg
movsl
iret
popa
out
cmp
mov
daa
or
lock
add
and
push
push
mov
int3
lock
aaa
mov
movsb
fwait
syscall
js
shll
jmp
clc
pop
lock
sub
jne
ds
sub
addr16
dec
nop
cwtl
js
pop
std
inc
lock
ret
inc
ret
test
pop
int3
and
sub
repnz
push
pop
or
repz
movsl
xchg
cmpl
xchg
push
adc
repnz
or
mov
les
lods
call
loope
push
dec
lea
outsb
outsb
mov
inc
lea
test
out
mov
push
clc
lret
pusha
icebp
jo
lock
insl
insb
jmp
inc
jecxz
or
in
push
jle
out
xor
scas
in
mov
mov
xchg
sub
test
lret
jge
jae
mov
lret
and
imul
pusha
hlt
aas
out
into
frstor
jnp
shll
pop
out
sbb
dec
int
xchg
pop
rcrb
jp
inc
test
int3
mov
jno
fnsave
popa
cmpsb
addl
insl
push
xchg
push
ljmp
push
push
lahf
lea
dec
sub
push
out
add
mov
mov
or
sub
sbb
clc
sub
jo
out
jae
out
sub
jb
bound
div
sahf
imul
xor
or
ficomps
cmpsb
loopne
mov
and
and
sbb
ss
sti
mov
mov
out
add
daa
push
fwait
xchg
push
and
pinsrw
mov
push
lods
push
mov
es
dec
out
and
rsm
ja
jg
or
clc
sbb
ja
fsubrp
add
cmp
outsb
push
push
sbb
test
outsb
adc
andb
push
adc
je
jae
inc
fildl
sarb
lods
mov
std
cmc
repnz
mov
inc
lcall
aad
adc
es
das
clc
sbb
and
and
cmp
sbb
sarl
and
mov
adc
mov
xchg
adcl
arpl
add
fisttpll
jbe
sbb
shlb
fs
mov
mov
in
divb
test
ret
inc
jb
dec
jl
ss
jmp
ret
adc
push
testl
xchg
pop
pop
out
push
popf
jnp
mov
idivl
push
cvtps2pd
leave
mov
xchg
push
sbbb
mov
push
subl
inc
fwait
jbe
rcrl
xor
adc
adc
aas
and
push
loope,pn
sub
or
inc
test
cmp
lods
fiaddl
adc
jmp
and
jb
push
dec
scas
subb
pushf
lahf
scas
inc
add
dec
jno
add
dec
jb
pop
inc
sub
loopne
ds
daa
aas
sarl
iret
test
orb
das
gs
or
ds
lods
bound
lahf
lret
ss
xchg
pop
and
inc
mov
scas
stc
enter
pusha
into
mov
xchg
in
stos
jle
ds
jge
rorl
xchg
cmpsb
mov
or
out
out
cmp
jne
jo
sub
gs
adc
xor
arpl
push
scas
dec
xor
sub
insl
fsts
jae
popf
icebp
jmp
mov
stos
inc
inc
addr16
cs
clc
mov
fcompl
cmp
xor
or
scas
daa
pop
jge
mov
ja
xchg
test
xchg
aam
aaa
fnclex
push
ds
sbb
sbb
xchg
adc
dec
subb
sti
out
dec
mov
xchg
cmp
clc
lods
ds
mov
and
sbb
nop
cmp
dec
push
aas
push
xor
je
sahf
pushf
daa
mov
jno
out
scas
push
jnp
jge
addr16
xchg
das
cmp
push
sub
cld
push
adcb
popf
mov
mov
fucomip
hlt
enter
int3
or
mov
adc
cmpsl
sti
in
enter
daa
insb
insb
or
mov
test
adc
cmpsb
stos
xchg
mov
sahf
or
sub
testl
scas
loope
dec
or
js
push
add
enter
jge
push
insl
mov
es
sub
pop
sbb
mov
mov
aaa
test
xor
add
push
jge
cmp
mov
add
xor
lcall
push
sarb
adc
aaa
or
in
or
hlt
cmpsl
fwait
push
fidivrs
adc
inc
push
mov
pop
in
mov
inc
and
pusha
ss
pop
int
decl
outsb
jmp
test
or
xchg
out
dec
cwtl
jmp
shll
sahf
and
pop
xlat
mov
or
push
ss
cltd
dec
sub
test
inc
or
test
mov
jnp
fisubl
mov
sub
jno
mov
cmp
jae
lods
mov
mov
hlt
lret
and
aas
xchg
fildl
les
dec
push
mov
dec
mov
fdiv
ds
test
repnz
jge
das
and
push
inc
hlt
out
fmuls
push
hlt
cli
push
sbb
ja
push
in
sarb
jmp
dec
hlt
xor
mov
and
dec
dec
pop
rcll
subb
movsb
cmp
sbb
movsb
subl
or
mov
mov
jmp
xor
shl
ljmp
push
shrb
pop
sbb
add
dec
push
push
dec
fs
push
jae
jno
mov
sub
dec
mov
lods
pusha
cmp
dec
pop
outsb
adc
std
shl
pop
adc
test
mov
push
xor
mov
insb
loop
dec
out
and
jne
mov
cli
scas
insl
add
adc
dec
jl
adc
inc
es
xchg
fldenv
stos
and
sub
ret
mov
or
movsb
sub
hlt
mov
push
cmp
repz
xchg
ficomps
iret
daa
cmp
pop
repz
sahf
add
sbb
push
inc
push
sbbl
subb
adc
rclb
xor
add
xchg
call
dec
mov
or
pushl
pop
xor
outsl
mov
cmpsb
sbb
sbb
stc
cltd
and
test
cmp
pusha
jo
mov
inc
fmuls
or
lret
mov
and
jmp
pop
add
insl
loopne
lods
imul
lock
mov
popa
push
xchg
inc
push
adc
mov
or
push
sub
jbe
xor
icebp
and
stos
pop
dec
add
cs
aad
testb
ret
nop
popf
insb
inc
in
ret
mov
lods
xchg
rcll
jae
jae
add
and
add
mov
mov
mov
cmc
inc
pop
mov
sarb
push
push
mov
movb
notl
sbb
or
ja
jl
cwtl
cli
jae
cli
cmp
jmp
jns
or
test
test
add
outsl
cmp
inc
cmpsb
or
stc
es
dec
cli
adc
shlb
jl
or
mov
cld
outsl
mov
push
sub
cmc
daa
pop
sbb
popa
sub
push
sbb
in
data16
mov
cmp
adc
loopne
in
push
sbb
mov
pop
xchg
sbb
jmp
xchg
mov
mov
fildl
push
xlat
cwtl
aam
call
sub
andl
mov
xchg
popf
loop
sub
fsubrl
scas
adcl
and
add
std
data16
xchg
inc
fimuls
xor
cmpsb
jne
or
push
out
or
sub
cmp
cmp
jbe
mov
mov
rcr
lret
inc
and
pop
pop
fildll
daa
jge
jo
and
cmp
test
sbb
sbb
pop
jne
mov
pop
inc
icebp
jae
testb
fidivl
pop
mov
in
outsb
call
and
sub
mov
stc
sbb
cmp
rep
jp
cmp
into
fidivrl
mov
inc
popf
sub
or
jle
cmc
inc
das
xchg
imul
ret
push
call
cmp
outsb
lods
shll
cmpsb
mov
fsubrl
push
inc
jbe
inc
pop
add
cmpb
pop
sbb
mov
or
xor
test
cmpl
jno
and
xchg
push
insl
ret
out
xchg
out
andb
les
js
mov
inc
bound
pop
cli
pop
mov
scas
xor
sub
mov
aad
mov
je
ljmp
test
addl
mov
lret
mov
push
dec
push
mov
das
mov
and
and
in
adc
xchg
enter
into
in
mov
adc
imul
scas
out
xchg
mov
clc
leave
adc
adc
and
int
and
xchg
dec
pop
push
dec
push
shll
push
mov
mov
lret
add
push
fldenv
enter
and
out
mov
call
inc
push
lcall
popf
lea
push
cmp
push
xchg
push
xchg
imul
jne
cli
nop
popf
adc
loopne
push
nop
sbb
add
push
fistl
or
add
cmovno
negl
inc
xchg
stc
in
jge
pop
dec
pop
mov
adc
fnstcw
inc
jbe
jb
in
xchg
scas
loopne
lea
inc
push
pop
cmp
or
inc
mov
xor
mov
cmp
loope
lahf
jge
inc
sbb
xchg
jbe
cmp
dec
inc
jmp
mov
lds
mov
push
push
jle
loop
and
adc
leave
bound
ljmp
scas
popa
mov
in
cmp
insb
iret
ss
ss
lcall
mov
push
and
mull
mov
mov
jns
sub
gs
hlt
xchg
shrb
inc
push
mov
je
pusha
sub
push
push
jb
xor
xchg
xor
nop
outsl
test
inc
mov
push
jg
fneni(8087
jmp
popa
loope
sahf
clc
scas
cwtl
dec
dec
in
jmp
adc
fcoms
xchg
iret
xor
mov
insl
pop
cmp
mov
arpl
cltd
out
lcall
pop
push
adc
or
std
mov
push
pop
das
cmp
adc
jne
jno
add
sarb
push
or
aam
cmpsb
pop
xor
push
jmp
pop
out
push
jmp
addr16
orl
lea
push
adc
and
jne
scas
movsl
arpl
xchg
xor
xchg
and
sub
jbe
inc
cmp
push
or
jns
aaa
aad
mov
lcall
cmp
pop
mov
xchg
jp
pop
ljmp
test
xchg
imul
into
xchg
scas
cwtl
xchg
jmp
imul
jno
cmpsl
jno
les
dec
pop
into
shlb
test
into
sbb
mov
fistpll
data16
cwtl
push
or
push
das
add
in
jno
sub
aad
fyl2x
xchg
outsb
adc
outsl
or
mov
dec
push
add
push
mov
rol
sbb
dec
inc
cmp
push
and
jne
leave
subl
call
dec
add
jb
cli
xchg
xchg
addr16
test
pop
test
xchg
jge
iret
shll
cltd
sahf
pop
sbb
int
mov
cltd
pop
jmp
push
pop
int
pop
loop
pop
mov
iret
rorl
dec
idiv
mov
filds
xchg
mov
in
adcb
into
icebp
or
cld
in
hlt
xor
call
pushf
push
divb
lods
jmp
out
mov
ss
inc
sub
int3
in
and
mov
inc
mov
daa
cs
adc
imul
mov
stos
and
sbb
mov
fs
jne
lcall
cmp
push
sbb
aad
loop
inc
popf
mov
xor
and
mov
ja
add
and
or
mov
mov
or
les
loopne
addb
fbld
or
les
cmpsl
jg
nop
mov
mov
push
sub
lret
test
mov
xchg
insb
fbstp
push
mov
pop
mov
sbb
jb
hlt
mov
fucom
sub
testl
test
mov
sbb
inc
cltd
jecxz
dec
pop
sbb
jmp
jns
jnp
dec
dec
adc
icebp
pop
add
push
mov
dec
push
pop
sahf
jae
adc
and
cwtl
or
pushf
cmp
cmpsl
dec
jb
mov
fcomps
hlt
lods
das
repnz
dec
loop
shrl
sbb
push
mov
ret
and
lahf
jg
mov
or
pop
mov
cmp
lock
pop
lods
int3
xor
push
imul
adc
inc
adcl
int
inc
cld
xchg
pushf
jnp
test
scas
cwtl
push
mov
and
jb
dec
mov
test
pop
es
xor
sub
sbb
pop
jne
or
repz
popf
xchg
in
xlat
inc
bound
inc
cmp
xchg
sbb
add
mov
mov
mov
roll
lret
push
jb
push
push
and
and
fldt
cmp
call
mov
icebp
jno
daa
mov
movsl
in
push
cmp
popa
cmpsl
lods
imul
popf
sbb
lret
stos
bound
lret
int
daa
push
pop
in
mov
dec
xchg
adc
cli
lods
in
divb
push
icebp
aam
fsub
xchg
jo
and
imul
sub
pop
je
in
outsb
cld
xchg
xchg
pop
pushf
stos
jmp
mov
js
xor
frstor
and
jecxz
imul
out
adcb
pop
pop
shl
sub
and
andb
fistpll
out
adc
dec
mov
cmp
push
xchg
movb
push
dec
mov
mov
shrb
pop
lcall
sub
mov
mov
ljmp
loopne
xlat
jmp
dec
push
jecxz
xor
fisubs
les
dec
test
mov
pusha
mov
sbb
popa
push
iret
sub
repnz
je
and
in
push
mov
adc
mov
mov
mov
imul
adc
nop
xchg
add
sub
cli
dec
dec
mov
and
push
ss
xor
jecxz
mov
mov
out
jno
pop
add
xor
aaa
arpl
push
xchg
nop
jae
sub
or
sub
pop
dec
fstps
fbstp
mov
icebp
inc
gs
stos
nop
fdivl
ss
xor
sahf
es
push
rcl
mov
fdivl
std
mov
mov
cli
pop
adc
adc
push
pop
cld
iret
push
pop
ja
insl
insb
stos
test
fistps
jecxz,pn
out
pop
xor
ret
and
jo
sbb
mov
inc
sbb
sub
xchg
and
dec
xor
and
daa
xchg
lret
imul
xchg
in
mov
data16
aaa
iret
mov
xor
in
int
mov
lods
shll
cli
xor
pop
mov
and
scas
adc
adc
add
addb
cwtl
pop
cld
mov
inc
and
incl
push
xchg
out
adc
js
imul
push
mov
mov
outsl
std
jmp
xlat
test
pop
and
jae
stos
ret
or
lds
cmp
aad
xchg
mul
les
pushf
fistpl
out
cmc
test
fiadds
fs
test
xchg
popa
adc
fldenv
ret
jle
pushf
dec
mov
scas
sub
aam
int
push
mov
push
mov
and
and
sbb
gs
fdivrs
mov
imul
push
push
mov
pop
push
push
xor
mov
sub
fidivs
adc
and
mov
mov
ljmp
inc
fbld
mov
inc
xor
das
popl
add
or
mov
mov
xor
mov
lods
jmp
mov
cmp
stos
stos
mov
push
xor
push
mov
scas
ficoms
shrl
mov
in
xchg
vmwrite
dec
stc
cmp
pop
scas
mov
xor
jle
hlt
ljmp
inc
in
xor
xchg
fdivr
or
push
mov
sub
lea
js
data16
cmp
and
repnz
repnz
les
jecxz
fistpl
push
pop
fdivs
push
cmc
loopne
mov
mov
subb
jb
push
add
out
out
xchg
mov
outsb
loope
xchg
insb
enter
jecxz
adc
fsubrl
jb
pop
or
negl
push
icebp
and
sbb
dec
push
test
cmp
mov
stos
je
sti
sbbb
cs
stos
pop
mov
das
dec
stos
imul
movb
and
sarl
ss
ret
pop
add
pand
test
movsb
mov
push
ds
ds
and
arpl
ret
mov
pop
subb
mov
sub
cmc
jmp
out
lcall
jp
je
addr16
mov
and
pusha
jae
dec
pop
call
push
push
push
mov
fucomi
pusha
jecxz
bsf
xor
ja
mov
push
jmp
dec
pusha
push
bound
cld
subb
fwait
call
repz
fdivr
xor
ret
and
int
ljmp
gs
shrl
mov
outsl
arpl
clc
adc
mov
daa
and
adc
fcompl
pop
imul
movsl
sbb
jnp
mov
adc
inc
pop
dec
ja
push
orl
sub
mov
xor
sbb
jge
cwtl
dec
jge
xlat
mov
jl
jnp
mov
mov
sahf
and
nop
and
and
xchg
xor
pop
stos
cld
add
jbe
int3
cmpl
jle
xchg
mov
pop
adc
cmp
cmc
mov
popf
jl
push
mov
cmp
inc
push
leave
jne
out
aaa
pop
imull
sarl
cmp
inc
xlat
loop
gs
popf
sub
or
cmpsl
int3
cwtl
push
xchg
ret
mov
sbbl
inc
push
aas
pop
sbb
inc
dec
repnz
clc
stos
mov
sahf
cmp
mov
jbe
cmpsl
sti
sub
in
lahf
ret
pop
mov
mov
xor
scas
mov
dec
fsts
ret
push
and
add
imul
and
shll
xchg
pop
lock
ljmp
cmp
lds
inc
xchg
leave
mov
fwait
in
xlat
mov
loop
pop
inc
inc
and
jae
sarb
hlt
mov
push
inc
push
lcall
mov
xor
les
xor
je
sbb
xchg
pop
jmp
bound
lret
test
jae
cmpsb
jnp
jl
les
out
aad
ds
int3
cmpsb
mov
push
cmp
cld
inc
xchg
stos
sub
jg
pushf
aam
mov
pop
rolb
fistps
icebp
leave
ljmp
mov
dec
das
pop
adc
or
add
pop
mov
xchg
inc
push
mov
sub
dec
dec
inc
fsub
mov
jo
xor
mov
leavew
in
sbb
pop
loope
xchg
roll
and
push
inc
sbb
mov
xor
jns
xor
lock
sub
lcall
push
lcall
push
rol
movsb
pop
push
pushf
mov
cmp
inc
adc
mov
pop
inc
mov
negb
lods
out
scas
out
push
sub
sub
roll
pop
jge
test
jnp
daa
or
rorb
aam
insb
in
stc
mov
mov
mov
stos
xchg
inc
scas
cld
shlb
dec
and
push
add
dec
insl
adc
pop
aam
inc
aad
popf
push
ss
cmp
sbb
sub
or
xorb
pop
es
mov
in
rcrl
movsl
dec
in
sbb
aas
call
mov
aam
xor
fists
mov
das
add
add
sub
mov
pop
pop
pop
and
cltd
std
jge
adc
ds
fdivrs
pop
and
mov
fimuls
xchg
inc
ss
sub
cmc
jmp
inc
push
ja
out
xor
add
xchg
cmp
cmp
lret
jb
cmpsl
push
adc
ds
jmp
pop
and
mov
mov
int3
test
mov
push
dec
xor
dec
jne
push
push
test
inc
or
nop
pop
mov
test
out
ret
lods
and
test
sti
movsl
push
mov
mov
push
pop
cmp
test
pop
mov
fnsave
or
cmp
sahf
shl
cmpb
mov
aam
jecxz
sahf
lods
divb
pop
rolb
xor
jle
aas
mov
lds
xchg
xor
xchg
dec
xchg
movsb
cmpsl
inc
mov
sbb
push
into
sbb
sbbl
cmp
sbb
mov
addl
ss
in
or
mov
je
test
mov
cmpsl
and
adc
dec
mov
aam
xor
add
loopne
mov
pop
hlt
pusha
push
mov
push
shlb
icebp
ret
cmp
sub
mov
push
test
sbb
dec
pop
xlat
dec
mov
xchg
je,pn
xchg
add
jle
out
pop
xor
cmp
dec
jg
je
insb
out
imul
pusha
inc
mov
jl
pop
dec
lds
xor
inc
add
jns
pop
mov
enter
minps
push
mov
movl
xchg
adc
mov
stos
inc
shll
mov
cmp
ss
cltd
and
aaa
sub
cmpb
scas
mov
sub
xlat
dec
fistl
add
sub
and
jg
pop
cmp
cmc
mov
outsb
js
divl
pop
pop
lcall
fcompl
out
mov
aas
jnp
dec
out
in
sub
test
sbb
roll
pop
testb
push
adc
jne
fwait
stos
fsubr
movsb
cmp
rorb
push
cmc
scas
cld
ja
pop
push
addr16
jo
jbe
xor
mov
xor
lods
in
dec
nop
addr16
pushf
lods
imul
lret
pop
call
cli
or
jne
mov
pop
clc
gs
loopne
or
push
inc
popa
insb
cs
in
push
ret
pop
xor
mov
test
push
jle
inc
sub
shlb
sbb
cli
je
ds
fisubl
mov
lock
inc
push
jbe
and
jmp
push
mov
addr16
dec
inc
and
jmp
ljmp
dec
mov
mov
pop
gs
sbb
mov
add
mov
add
cld
test
and
dec
jmp
outsb
push
mov
xchg
test
push
xchg
inc
imul
sti
fcmovnu
imul
add
cs
pop
ror
into
sub
aas
mov
jae
inc
and
daa
dec
add
add
and
imul
inc
push
jns
daa
divl
insb
or
es
mov
enter
out
or
adc
jl
adc
push
sbb
or
and
add
jbe
popa
data16
add
add
stc
in
das
sbb
dec
out
stos
mov
rorl
push
stc
mov
pop
enter
or
mov
jecxz
das
xchg
xchg
in
rcrl
into
push
inc
lods
arpl
sub
pop
add
jg
adc
pushf
mov
fwait
stos
xor
xchg
mov
loop
mov
cwtl
stos
adc
ds
fcomps
inc
and
loopne
mov
add
pop
adc
stos
les
and
jns
push
dec
jp
adc
std
dec
mov
pushf
filds
in
out
sti
cmp
lods
push
insb
mov
push
mov
lods
cmp
repz
inc
in
cmpl
jmp
lods
or
pop
inc
aas
outsl
lods
sbb
aas
pop
adc
mov
scas
add
xchg
xchg
leave
mov
pushf
dec
add
pushf
or
fistpll
xchg
nop
test
std
outsb
bnd
mov
loopew
test
out
icebp
and
push
mov
shlb
movsb
sub
ja
mov
push
pop
adc
into
aad
cmp
shlb
std
sub
lret
or
pop
mov
testl
enter
int3
pop
pop
adc
inc
pushf
shll
addr16
dec
outsb
mov
cld
out
cmpsb
ss
outsb
mov
lret
or
jae
idivl
outsb
cmp
adc
xor
test
lret
inc
int3
stc
jecxz
mov
lods
lahf
cld
out
inc
scas
ret
xchg
in
sub
aas
dec
jmp
push
repnz
fs
stos
je
fcmovb
clc
dec
out
test
stos
sbb
push
cs
dec
cmc
rcll
dec
aas
hlt
push
fnstenv
mov
and
mov
cs
mov
movsl
loop
sub
les
insl
stc
or
dec
cmp
daa
sbb
in
outsb
test
push
jmp
test
jmp
loope
adc
mov
sbb
movsb
imul
fstpt
mov
dec
mov
cmp
jnp
mov
inc
ficoml
or
in
into
loop
mov
xor
push
jbe
iret
sub
lret
sub
bound
mov
mov
out
cmp
jae
mov
mov
mov
sbb
and
dec
nop
icebp
push
pop
lcall
fdiv
mov
lret
sub
stos
hlt
or
lea
push
sub
adc
inc
hlt
mov
cmp
outsl
mov
sarb
in
mov
jae
push
test
pop
or
inc
adc
sub
push
inc
sbb
int
aas
popf
pop
push
out
push
push
and
mov
push
fs
push
outsb
out
notb
lds
sub
adc
ljmp
pop
addr16
adc
sub
sub
lcall
out
jle
popf
scas
iret
or
sub
push
jg
add
or
shrl
pop
inc
mov
dec
sbb
mov
sub
dec
cwtl
mov
add
test
push
xchg
jecxz
push
adc
adc
push
unpcklps
mov
jmp
out
lahf
mov
mov
sub
loopne
cld
add
pushf
dec
cwtl
in
jb
push
subb
scas
jp
or
cld
inc
fstpl
gs
dec
ficoml
add
xor
leave
push
mov
mov
jmp
enter
and
xchg
sbb
scas
bound
sub
jne
jp
cs
jb
loope
xchg
repnz
in
or
xchg
pop
lods
test
leave
ja
and
push
sbb
mov
push
sbb
hlt
inc
jno
cmp
mov
jno
and
push
outsl
int3
testl
xchg
lods
sub
sti
mov
xchg
mov
dec
jge
or
movsl
jbe
and
xor
insb
addr16
insl
push
iret
inc
cwtl
add
vmovntps
outsb
popa
iret
mov
addr16
shll
shl
pop
push
xor
popa
pop
pop
jae
mov
mov
test
arpl
sbb
xchg
adc
dec
mov
std
xchg
pop
in
xchg
scas
mov
repnz
cltd
repz
loopne
fsubrs
dec
mov
pop
mov
mov
stos
clc
pop
mov
cmpsb
inc
jnp
pop
ljmp
js
shr
fcomip
and
and
jg
push
mov
scas
mov
sub
inc
sbb
xor
mov
in
mov
jns
adcl
iret
mov
aaa
jle
rorw
movsb
pop
inc
jns
push
xchg
outsl
jl
cld
das
jp
stc
insb
jp
xchg
fnstenv
pop
cmp
in
add
repz
sbb
or
into
das
loop
adc
dec
add
sub
movsl
mov
hlt
fucomp
stos
mov
xchg
jne
insb
push
mov
sbb
cmp
unpcklps
scas
subl
dec
sti
pop
into
lcall
xchg
jg
jge
fimuls
std
mov
pop
mov
fwait
bound
adc
xor
add
popa
mov
unpckhps
icebp
dec
pop
sbb
sub
mov
fsubrl
jp
out
lods
or
inc
cmpsb
cmp
sub
and
ffree
inc
mov
neg
cmpsl
loope
jmp
sub
sti
pop
inc
push
ljmp
mov
movsl
ror
es
stos
scas
outsb
xor
fsub
inc
push
test
mov
sbb
or
in
gs
add
ljmp
cmp
fnsave
adc
gs
inc
mov
adc
inc
cmp
push
call
pop
pop
pop
lea
xchg
inc
ret
push
insl
shlb
push
shrl
dec
fnstcw
jmp
pushl
sahf
jl
push
mov
sahf
add
into
out
mov
and
hlt
pop
nop
popf
push
rorl
sub
sub
mov
or
hlt
repnz
jge
sub
pop
mov
clc
lods
call
push
movb
push
lahf
pop
add
sbb
pusha
push
imul
sub
and
mov
xchg
pop
mov
xor
rorl
xchg
stos
sub
pop
in
inc
push
jno
ljmp
jmp
inc
shll
mov
or
loop
cmp
ss
mov
cli
stos
push
sarb
loope
sub
sub
jo
cmpsl
push
cmp
dec
sub
ds
inc
push
add
cmc
sub
mov
push
mov
cmp
or
adc
lods
das
mov
pop
jg
imul
fsub
and
inc
insl
test
aaa
aam
dec
cmpsb
scas
adc
push
mov
in
inc
imul
in
dec
call
lahf
jnp
cwtl
pop
xchg
xor
icebp
clc
mov
inc
jge
nop
jmp
xchg
cmp
arpl
add
pusha
dec
leave
sbb
shlb
or
scas
ljmp
scas
movsb
sub
cmpsl
add
subb
lds
test
inc
bound
aad
cmp
xchg
xchg
push
adc
jae
stos
dec
popa
pop
adc
shrl
mov
negb
lret
call
xchg
jg
shl
rcrl
in
pop
imul
lods
popa
stos
or
cmp
stos
ret
mov
jae
cmp
arpl
aam
inc
inc
xor
cmpsb
cmpsb
out
scas
mov
sbb
adc
push
inc
xchg
clc
jno
xlat
ja
sub
mov
sahf
jmp
ds
popl
xchg
dec
pop
icebp
add
arpl
sbb
ljmp
nop
fcomps
mov
jo
dec
cltd
jbe
ja
faddp
jns
shrb
xor
test
cmpsb
popf
test
push
xor
or
or
adc
push
sbb
and
mov
dec
daa
adc
into
push
and
stos
inc
mov
fisubl
insb
pop
jb
lea
mov
cmp
xchg
imul
xchg
push
shl
in
xlat
rep
test
xor
adc
sbb
scas
push
out
add
add
cmp
scas
leave
jbe
cwtl
mov
popf
pop
mov
xchg
jmp
imul
jecxz
mov
inc
push
cli
mov
sbb
aas
sahf
sub
xor
roll
test
pop
xor
test
add
cmp
and
pop
mov
popf
mov
mov
dec
sub
into
nop
adc
dec
rcl
enter
mov
lods
xchg
movb
adc
pop
xchg
cmc
in
imul
xor
sti
pop
test
out
push
dec
shrb
aaa
test
jmp
add
jns
or
mov
pop
pop
dec
lcall
aam
inc
pop
mov
adc
sub
das
and
xorl
sbb
add
loope
pop
andb
jae
ret
inc
or
mov
pop
pusha
popa
fdivrl
jae
jge
and
push
and
adcb
mov
mov
test
xorb
cmp
dec
scas
jae
clc
movl
xchg
dec
imul
cmpb
loopne
jp
arpl
into
pop
shrl
out
or
cmp
sarb
push
repz
jne
xchg
loopne
fs
xor
aad
inc
sbb
mov
pop
sub
jl
sahf
arpl
and
sub
sub
outsl
lods
and
or
sbb
xor
dec
pushf
mov
push
cmp
or
stos
scas
lcall
addr16
pop
cwtl
xchg
and
ja
in
xor
cmpsb
sti
and
je
test
cli
aad
outsb
jno,pt
xchg
ret
stos
or
out
jae
mov
cmp
push
jno
mov
imul
lds
add
popf
loopne
push
xchg
sbb
fdivr
stos
sbb
sahf
cmp
daa
adc
cmpb
notb
aas
xor
rolb
mov
stc
sarb
loope
es
adc
sub
lods
cmp
sbb
scas
pop
and
sbb
std
shll
mov
mov
jl
stc
xchg
loope
sub
push
xlat
sub
rcll
aad
out
sbb
into
push
clc
testb
and
cmpsl
aad
fwait
pusha
sbb
enter
ljmp
arpl
ds
jne
sahf
das
cwtl
clc
outsl
lret
out
mov
mov
pop
in
call
adc
mov
insb
push
cmp
add
stc
clc
mov
test
sub
pop
push
test
icebp
xchg
mov
pop
add
frstor
push
pop
and
sub
cltd
sbb
jg
dec
ja
sub
scas
mov
mov
bound
mov
outsl
insb
or
push
add
ret
inc
nop
imul
rorl
in
imul
cli
add
xlat
ds
mov
sub
xor
cwtl
fsts
repnz
nop
test
iret
insl
jnp
sub
push
xchg
add
dec
dec
cld
mov
xchg
inc
mov
inc
rcll
es
loopne
ret
xchg
dec
loope
mov
sub
mov
xchg
dec
rcll
out
xchg
test
mov
dec
ficomps
loopne
inc
mov
cltd
jbe
imul
jo
lock
dec
stc
and
fincstp
ret
cmp
jnp
lock
lahf
adc
out
movsl
xchg
sub
and
es
aaa
cltd
jns
jb
xor
ds
es
jbe
push
lret
loopne
or
or
lods
push
popa
retw
mov
jp
mov
cmc
shrl
jg
movsb
cs
xor
adc
pusha
pop
daa
jp
pop
insl
clc
rcrl
ret
mov
fidivs
jp
jno
adc
dec
push
lods
xchg
and
mov
mov
xor
adc
inc
or
jns
repnz
cmp
arpl
jmp
jp
aad
sahf
dec
cmp
and
inc
sti
jno
orb
jmp
jp
movsb
fsts
jae
sub
sub
mov
jb
insb
data16
test
xchg
xor
jb
sbb
sar
dec
fucomip
stos
sub
pusha
outsb
inc
out
push
nop
stos
mov
aad
xchg
mov
into
mov
xchg
pushf
dec
call
lock
movsb
bnd
sub
mov
mov
cmp
sbb
ds
cmpb
push
or
jmp
enter
mov
add
jae
mov
hlt
xor
pop
lods
or
loope
sub
pop
push
mov
sub
or
sahf
or
pop
xchg
enter
inc
push
xor
and
fwait
jno
and
sbb
dec
js
push
mov
add
imul
sub
jb
dec
loope
int3
or
xchg
sub
sarl
popf
in
cmp
xchg
lock
test
lahf
xlat
call
adc
xchg
mov
mov
loopne
leave
mov
aad
push
mov
inc
xchg
mov
fs
movsl
enter
je
mov
fs
mov
jns
outsb
fs
dec
push
xor
sbb
call
xchg
mov
adc
clc
fmull
repz
mov
js
cwtl
fstp
jle
incl
cmp
pop
push
xchg
rol
mov
mov
push
add
sub
dec
and
xchg
je
orl
int
and
xchg
das
test
cmp
pop
out
rcrl
les
mov
jo
push
dec
mov
pushf
mov
popf
es
push
mov
out
in
jg
sbb
and
cmpb
add
add
mov
pushf
jno
sbb
sbb
xlat
cmp
dec
inc
xchg
dec
movsl
addr16
rorb
add
adc
mov
insb
push
inc
mov
mov
add
inc
xchg
pop
push
xchg
mov
int3
pop
fdecstp
pop
ret
push
stos
out
nop
arpl
sbb
add
fadds
or
imul
mov
jmp
jbe
out
or
and
lret
and
nop
mov
fimuls
sub
imul
xchg
es
mov
mov
stos
and
inc
jp
sub
leave
mov
cmc
pop
loope
xchg
and
out
out
jecxz
hlt
xchg
xorb
mov
push
dec
daa
in
push
lods
insb
mov
lods
mov
sub
cmp
sbb
mov
int3
mov
shll
cmp
jnp
mov
pop
lds
inc
movsl
int3
jge
jbe
addl
sti
xorps
xchg
push
cld
xchg
inc
xchg
add
stos
or
popf
test
mov
dec
pop
loopne
dec
out
shll
adc
shlb
mov
cmp
cmp
ds
push
cld
cmpsl
sahf
dec
push
add
out
cmc
rcr
sbb
mov
xor
or
iret
enter
mov
mov
mov
sbb
fdivrl
mov
negl
adc
jb
loopne
data16
xor
adcl
add
testl
and
les
popa
les
cli
popa
addr16
jbe
adc
jmp
into
xchg
pusha
sbb
jecxz
jnp
ds
and
xor
adc
and
lahf
mov
pop
dec
mov
sti
sbb
push
cmc
sbb
out
leave
push
mov
ds
sbb
inc
cmpsb
stc
enter
add
dec
clc
in
xchg
xchg
mov
sbb
sahf
sub
push
ds
shlb
xchg
jae
mov
xor
cld
dec
cmp
xor
popa
pop
in
dec
mov
cmc
xchg
xchg
dec
push
rorl
lods
mov
call
dec
mov
and
cwtl
jle
les
add
stos
add
sbb
jb
icebp
jno
mov
iret
loopne
push
in
mov
add
pushf
adc
je
adc
es
and
jge
insb
xor
inc
fidivrs
sub
dec
cmp
jle
fsubrp
shrl
jp
sbb
pop
xchg
lds
mov
pop
add
lcall
cmpl
jno
mov
cmp
loop
test
xchg
jb
mov
gs
inc
fldcw
xchg
jae
aam
pop
sbb
in
ror
inc
pop
xor
fildll
mov
iret
int3
mov
cmp
loope
inc
add
mov
push
mov
inc
inc
xlat
das
mov
lods
add
out
cmp
inc
mov
xor
inc
cld
into
or
jb
add
test
pop
divb
je
jge
sub
xorl
rorb
aas
jb
int3
and
mov
cmp
loope
nop
mov
fs
add
lock
rorb
xchg
pusha
dec
cmp
push
pop
sbb
dec
in
fsts
jecxz
mov
outsb
scas
sbb
hlt
cmp
jb
sub
mov
imul
push
and
or
mov
push
xchg
or
iret
das
adc
sarl
xchg
and
jnp
test
fimull
ja
mov
pop
jno
pushf
test
int
cmpsl
dec
in
dec
mov
sbb
jne
push
inc
sahf
and
into
push
push
scas
fisubrs
or
mov
lock
mov
cmp
jl
stos
dec
xchg
xlat
sar
xlat
sub
cmc
outsb
bound
shlb
movsl
push
test
and
xchg
and
inc
or
insl
cmp
or
std
pop
lods
adc
xor
or
ret
filds
inc
cld
add
mov
or
dec
mov
xor
push
stos
mov
jecxz
mov
call
nop
mov
stos
xchg
mov
test
lock
gs
lret
rcll
lret
xchg
imul
ja
fprem1
or
mov
xchg
cmp
lods
lods
mov
sbbl
mov
popa
sub
fs
rol
sbb
add
iret
add
mov
int
cld
subl
or
pop
and
mov
in
iret
and
shlb
fsub
xor
fcoms
xlat
and
sbb
sbb
cmp
sti
dec
inc
ljmp
inc
push
repnz
inc
enter
nop
nop
push
and
mov
pop
jecxz
mov
fisubrs
out
lret
lds
and
flds
rcrl
ficomps
icebp
cmpsb
scas
ss
sub
push
rorl
jae
or
cmp
mov
orl
stos
aad
jecxz
cmp
les
fistps
mov
pop
daa
cmc
pop
ret
lahf
push
jbe
push
mov
jmp
xor
fcoms
dec
pop
jle
ljmp
scas
xchg
xchg
cmp
js
jge
in
in
cmpsl
stos
fwait
out
sbb
adc
pop
push
nop
stos
arpl
xchg
rolb
out
mov
pop
movsb
push
in
shll
dec
es
sub
push
xor
jo
adc
pop
clc
test
adc
andl
add
sub
jbe
mov
bound
shr
cmp
xchg
sti
inc
cmp
stos
push
jp
leave
jg
push
les
into
ja
mov
fisttpl
inc
movsb
dec
or
mov
shr
fsubrl
ss
cwtl
inc
dec
es
mov
icebp
out
mov
and
outsl
pop
shlb
mov
sbb
adc
mov
int3
inc
lock
push
mov
inc
imul
mov
push
mov
cwtl
test
cmc
or
pop
and
sub
cmp
xor
js
int
int3
pop
lods
das
pop
push
icebp
jae
enter
jmp
and
adc
loope
xor
jecxz
stc
mov
movl
jae
jg
sub
sahf
adc
lahf
shrl
and
dec
mov
ds
mov
jl
xchg
xor
pop
sbbl
mov
les
or
xorb
mov
pop
das
stos
xor
inc
dec
lahf
mov
mov
sti
or
xchg
sarb
sbb
xor
and
lret
jno
sub
test
add
xchg
sub
xor
fstpl
test
mov
iret
mov
xchg
addr16
xor
inc
push
jecxz
jg
into
fidivrl
enter
push
mov
icebp
cmp
pop
sbb
scas
shll
xor
shlb
cmp
or
xchg
push
jg
int3
sub
lods
test
jbe
inc
inc
ljmp
loope
fistpl
cld
scas
sub
js
xchg
mov
inc
outsl
cwtl
gs
test
mov
jns
mov
mov
xor
xorb
imul
inc
mov
pop
jmp
mov
inc
mov
in
mov
jmp
xor
loopne
lret
lods
jae
lret
shlb
sbb
loop
pop
mov
xor
push
add
lds
xor
movsb
and
xor
mov
push
lret
pop
test
inc
gs
movsb
or
decb
sbb
xor
cwtl
icebp
adc
push
and
sbb
dec
jecxz
jns
das
xlat
fadd
xchg
cmc
mov
add
loopne
iret
test
adc
adc
insb
test
out
les
fdivs
stos
inc
xchg
and
sub
stos
call
cmp
dec
dec
sbb
stos
ficoms
loop
push
shlb
push
xor
mov
iret
and
cmpsb
pop
imul
or
xor
or
xor
inc
adc
adc
pop
outsl
jmp
pop
jmp
push
cs
cmp
daa
stos
aaa
inc
lret
or
jp
and
lods
outsb
mov
stos
mov
cld
gs
lret
ja
pop
nop
inc
in
push
out
dec
mov
arpl
mov
or
out
push
in
mov
in
in
sbb
mov
in
test
stos
or
ljmp
push
sbb
cmp
in
jnp
mov
mov
vpmulld
fucom
or
mov
dec
ficomps
dec
jne
cmpsl
outsb
push
leave
inc
mov
jns
inc
movsl
fstpl
and
adc
or
or
std
xchg
add
lret
daa
xor
cmc
xor
push
sbb
xchg
jns
test
aas
pop
stos
sbb
dec
mov
out
daa
mov
jmp
inc
in
into
xchg
rorl
or
out
xchg
cld
fs
dec
mov
sbb
inc
aam
jmp
and
repnz
cmp
adc
inc
test
sub
dec
ss
shll
cmpsl
cld
mov
fidivl
daa
in
das
mov
enter
mov
sbb
inc
in
xor
cmp
xor
out
dec
test
mov
aas
ljmp
lret
mov
scas
mov
dec
xchg
sub
mov
dec
sub
fwait
aad
and
ja
mov
and
das
out
adcb
cmpsb
leave
xchg
stc
xchg
xchg
xchg
or
mov
pop
cmp
loopne
add
adc
clc
out
ret
fcomps
push
rolb
lods
int3
sahf
jb
fadds
mov
push
stc
out
lret
sub
sbb
adc
cs
jns
mov
mov
cs
xor
mov
ffreep
aad
shll
sbb
mov
fadds
out
and
sbb
push
int3
and
cwtl
mov
dec
shll
shll
repz
xorb
mov
pop
push
cmpsl
lods
icebp
jg
cmp
lcall
out
jb
in
sbb
dec
add
outsl
xchg
dec
dec
stos
xor
cmova
and
or
pop
cs
mov
test
ret
push
arpl
or
gs
jno
push
les
mov
pop
jno
jp
or
fincstp
in
icebp
ja
ret
adc
lea
test
adc
push
xor
jno
adc
rol
fadd
add
xlat
mov
mov
add
int
dec
repz
inc
outsl
xor
pusha
loope
push
addr16
or
call
movb
outsl
jg
jecxz
dec
popa
cmpsb
and
repz
call
enter
dec
dec
xchg
or
lret
xchg
pop
fwait
adc
andl
sbb
pop
sub
push
jns
int
test
push
push
ret
insb
daa
add
iret
mov
inc
sub
fistps
jbe
mulw
dec
sahf
dec
insb
push
dec
movsl
movsl
cmc
sub
es
dec
dec
lea
xor
jae
adcl
lds
xchg
mov
pop
shr
push
sub
and
adc
jle
je
mov
das
jnp
xor
pop
mov
jo
ja
stos
in
dec
mov
scas
mov
inc
mov
mov
mov
dec
rep
aad
adc
xor
jno
scas
cld
adc
pushf
pop
pop
in
cmp
aas
jnp
sbb
ja
into
addr16
add
mov
fidivs
dec
jne
sahf
int
and
nop
inc
les
adc
jnp
sbb
or
cli
icebp
adc
and
pop
ljmp
insb
xchg
jbe
cmp
ret
cmpsl
xor
fs
sub
add
mov
sqrtps
jns
push
pop
mov
in
mov
cs
stos
adc
aaa
inc
sbb
aaa
and
push
insb
pop
clc
pop
mov
clc
and
add
lock
or
lods
sti
jae
lcall
mov
out
js
in
aad
popf
push
loop
cld
adc
sbb
movsb
add
sub
fs
cmpxchg
scas
dec
stos
cmp
sub
fdiv
mov
rorb
and
push
cmpsb
sub
and
jg
scas
xor
fwait
lock
repz
sbbb
gs
mov
cs
arpl
xchg
push
aaa
jge
add
pop
mov
push
and
out
outsb
or
or
xor
mov
cmpsl
insb
adc
mov
out
inc
push
jo
insl
lret
mov
es
les
insb
mov
sbb
shll
dec
popf
jecxz
into
repnz
fwait
cli
fistpl
mov
aas
jbe
pop
sbb
or
push
sbb
ret
dec
loope
sub
js
push
addr16
mov
mov
addr16
or
enter
add
sbb
mov
div
xchg
call
imul
hlt
mov
cltd
cmpsl
inc
jmp
push
adc
lea
or
push
shl
shlb
xchg
mov
je
sub
pop
bound
and
test
and
sbb
imul
mov
mov
ret
leavew
movsb
ret
popf
pop
mov
ret
lcall
mov
addr16
mov
cli
push
daa
cmp
pusha
or
loop
dec
xchg
int3
cmpsl
adc
popf
fld
mul
es
dec
inc
sbbl
and
mov
sti
in
and
fcom
push
inc
xchg
push
ljmp
jo
test
push
repnz
mov
mov
or
inc
mov
div
and
call
xor
fwait
dec
sbb
roll
inc
aaa
push
cltd
nop
lods
mov
testl
push
or
xor
push
push
or
sahf
out
arpl
xorl
cli
or
jns
clc
inc
test
add
push
aas
mov
inc
jle
jp
xchg
push
aaa
in
loope
bound
cli
jb
jle
adc
sti
mov
enter
mov
sbb
mov
push
push
lods
jmp
push
jmp
je
pop
pop
arpl
or
pop
aad
loop
adc
insb
pop
repnz
jge
pop
push
xor
jmp
sahf
gs
push
in
inc
jo
xor
jge
loope
xor
out
and
iret
sarb
add
mov
sbb
je
ret
xor
call
xchg
nop
add
fs
test
clc
imul
xchg
mov
ret
mov
cmpsl
pop
push
xor
arpl
mov
shll
or
cmp
or
cltd
xchg
push
insb
inc
rcrb
sarb
cli
add
pop
and
mov
or
fs
add
fsubp
xchg
fsubrp
xor
sbb
call
stc
adc
adc
dec
rorb
mov
pop
sbb
test
mov
shl
xor
lret
jne
jmp
xor
push
test
aas
xor
add
inc
and
jmp
aas
pop
sub
lret
fwait
into
push
xor
in
rcr
push
adc
push
pop
in
movsl
pusha
jne
xor
xchg
inc
sbb
mov
stc
xlat
in
rclb
mov
jne
lea
imul
inc
dec
pop
lcall
ror
xchg
xchg
push
push
rorb
push
dec
fbld
sbb
mov
shl
dec
sbb
mov
jno
jo
sub
mov
inc
mov
push
mov
sub
sub
inc
outsl
leave
repnz
in
sub
xchg
xor
enter
cmp
push
rolb
fwait
xchg
mov
repnz
pop
cmp
jbe
mov
ret
sarb
pop
jae
loopne
push
and
xor
or
inc
aas
dec
insb
inc
addr16
loopne
jne
dec
leave
out
xchg
add
mov
cmpsb
cmc
fildll
cmp
push
pushf
imul
sbb
sbb
mov
inc
test
cmp
leave
pop
cmpsb
pop
sub
cmp
int
pop
mov
jmp
and
adcb
mov
adc
cld
in
xor
lret
js
lret
je
cmpl
aaa
inc
fsin
cmp
mov
outsb
cmp
in
inc
popa
jge
hlt
rol
or
aad
inc
xchg
bound
push
fidivrs
mov
mov
bnd
or
dec
int3
mul
cmp
sbb
push
add
push
fimull
insb
call
sub
pop
rcrb
loopne
loope
stos
int
mov
cmp
pop
mov
addl
ret
inc
sbb
in
jae
push
xchg
je
or
popf
cmp
hlt
lcall
mov
bound
sbb
lods
sbb
mov
pop
jb
jno
popa
call
cli
leave
add
out
mov
sbb
cmp
lock
mov
add
lock
push
testl
std
mov
cli
loopne
pop
cmp
push
mov
sub
xchg
pop
out
hlt
aas
in
arpl
pop
or
sub
push
mov
mov
insb
and
cmp
add
ja
fisttps
add
lock
sub
push
lods
jno
outsb
movsl
xlat
lret
leave
ja
fwait
xchg
jbe
daa
hlt
sub
rcr
lahf
gs
jbe
jae
dec
adc
mov
xchg
lds
jmp
out
sub
mov
jp
call
add
fs
cli
lahf
sbb
xor
inc
mov
sub
inc
mov
negb
sub
loopne
aad
outsl
mov
mov
jle
fwait
push
or
sbb
stc
add
fcmovnb
ss
mov
cmpsl
jns
in
loop
ljmp
jge
mov
lret
xlat
insb
jecxz
aad
mov
ret
push
mov
add
xor
and
arpl
or
into
xchg
lock
std
xchg
daa
dec
test
sub
in
mov
pop
push
adc
cmp
xor
shrl
xchg
cmpsl
and
cmp
sti
lahf
inc
mov
jo
mov
pop
sub
shll
lds
xchg
sub
xchg
ljmp
das
stos
jns
push
cwtl
add
movsb
mov
adc
pop
dec
dec
adc
xor
in
addr16
in
pop
outsb
jl
cwtl
sbb
add
sbb
push
imul
cmp
lahf
loop
out
stos
sbb
and
adc
movsb
mov
add
bndldx
and
lods
mov
orl
dec
shrl
leave
and
dec
pop
cwtl
xor
pop
xlat
nop
pushf
fistpll
pushf
pop
insb
push
lock
push
insb
notl
adc
insl
jb
sub
jmp
add
test
or
push
in
cmp
inc
inc
xchg
data16
testl
sbbl
cmp
aas
xchg
dec
inc
clc
cmpsb
cs
aam
push
cmp
out
sub
and
cmpl
sbb
push
decl
mov
xchg
int3
sbb
outsl
or
out
xchg
in
iret
cmp
sbb
mov
mov
jo
mov
and
mov
or
jns
pushf
cmp
xchg
add
idivb
fisttpl
jae
mov
test
fdivrs
out
enter
mov
fbld
nop
mov
mov
jns
sbb
lret
jb
cmp
cld
xchg
push
mov
addr16
cmpsl
push
out
add
fwait
and
out
iret
pop
scas
lods
mov
aas
sbb
js
add
lods
and
fdivrs
lcall
jb
bound
insb
int
xchg
mov
or
jb
int3
cmp
and
faddl
lcall
cmpsb
or
out
dec
pop
mov
test
xchg
ret
divl
pop
fistpl
in
cli
inc
dec
dec
mov
and
add
iret
pushf
into
fs
adc
and
fmull
rep
pop
inc
push
movsl
jb
hlt
mov
push
push
rorb
and
in
dec
addb
adc
and
pop
pop
lahf
out
es
lds
adc
jecxz
cmc
insl
push
ret
dec
add
sar
fs
or
push
mov
push
icebp
aad
loope
out
out
imul
sbb
daa
insl
xlat
add
jl
push
add
inc
mov
and
lahf
pop
out
cmpsl
add
imul
fwait
lcall
xor
mov
adc
lcall
loop
dec
inc
lds
pop
out
fists
int
pushf
and
sbb
repnz
paddsb
pop
jne
dec
out
mov
jnp
addl
cwtl
roll
adc
int
js
jp
fldl
jb
les
mov
das
outsb
jae
jmp
fadd
sub
loope
neg
movsl
xchg
testl
int3
xchg
dec
mov
es
sub
loopne
out
cmp
add
push
and
sbb
test
add
sti
cmp
sub
fs
push
jbe
scas
in
push
fildll
jns
test
adc
lahf
dec
fldenv
cld
mov
mov
push
dec
arpl
cwtl
mov
xchg
shlb
push
std
adc
or
pop
sahf
cld
push
sbb
icebp
sub
stos
pop
mov
das
js
sub
pop
insl
push
lahf
pop
dec
fwait
sub
inc
fiaddl
mov
imul
aam
sbb
xor
clc
sbb
dec
sbb
js
ret
lahf
jo
dec
pop
aaa
rcll
fidivrs
xchg
aaa
inc
fwait
sbb
je
daa
sub
or
loope
shll
mov
jns
dec
adc
pusha
test
outsl
jno
jle
insb
pop
xchg
je
stos
inc
ss
add
cs
mov
lods
push
inc
gs
out
iret
cmp
mov
insl
sub
insl
mov
cmp
fisubs
push
jnp
loop
ja
fildl
pushf
push
jg
movsl
imul
shll
mov
mov
xchg
ret
sub
inc
dec
sbb
inc
call
and
fisttpll
sbbl
and
stos
orl
sub
pop
shlb
mov
fisubs
lods
in
pop
cmpsl
push
cmp
pop
add
int
daa
in
jp
into
sub
fbstp
ret
mov
cmpb
pop
rclb
mov
push
xchg
cld
ss
popf
push
jae
push
push
mov
fcmovne
je
sub
in
or
call
jne
xor
call
dec
mov
mov
and
repnz
mov
sbbb
sbb
dec
test
loop
fisubrl
gs
sub
loopne
dec
and
xchg
or
int
movsb
xchg
jle
sahf
pop
push
stc
push
lcall
arpl
or
adc
ds
mov
sahf
jl
mov
loopne
sbb
cmp
xchg
fistpll
out
rol
notb
mov
mov
add
and
je
xor
andb
pop
jns
mov
adc
and
xchg
js
je
test
lcall
loopne
movsl
movsl
scas
push
and
pusha
cmp
sahf
mov
int3
movsl
mov
sub
mov
or
and
jae
xor
in
mov
jl
icebp
adc
mov
cmpl
stos
inc
int
jne
mov
xor
cmp
imul
pop
cltd
jns
push
insb
shlb
lods
mov
inc
sbb
sti
push
push
rol
xor
loop
in
das
pop
cs
ss
cmp
dec
lahf
shrb
xor
xchg
scas
test
imul
es
stos
fisttpl
sti
cli
in
jmp
push
sahf
mov
and
aam
xchg
inc
lds
add
leave
es
enter
imul
mov
movsl
fstpt
int
int
sbb
mov
sbb
fwait
dec
or
cld
scas
or
mov
test
sbb
lods
rcr
ret
sbb
cli
mov
lcall
ret
out
jg
mov
push
ja
and
hlt
test
mov
dec
or
lret
lock
push
icebp
sub
int3
insl
sar
hlt
sti
repz
jle
adc
jg
push
out
cmp
adc
and
in
adcb
push
scas
pop
mov
gs
lock
xor
mov
pop
lahf
and
shrl
pop
xor
mov
sub
inc
push
call
rcrl
movsl
push
dec
inc
fldcw
sahf
ja
push
push
mov
xor
movsb
sbb
cmp
in
sbb
push
mul
mov
jbe
cli
xor
bound
mov
scas
lahf
adc
xor
mov
ljmp
lret
mov
scas
add
sti
ljmp
inc
shlb
jo
fisubs
dec
jnp
insb
outsb
jg
adc
sub
xor
stos
stos
loope
leave
mov
daa
adc
mov
es
imull
jg
sti
inc
sbb
sub
xlat
and
sbb
mov
push
jns
sub
icebp
int
mov
xor
adc
sub
mov
adc
mov
rcll
pop
and
mov
scas
push
subl
mov
js
addb
addr16
adc
je
jnp
lret
test
call
jmp
shll
push
vpminsw
jge,pt
sbb
push
sbbb
insb
push
xchg
pop
imul
and
cli
jne
jl
cmp
cmp
pop
mov
pop
sbb
mov
mov
or
cld
fmuls
mov
and
hlt
mov
add
test
inc
in
dec
lock
loope
adc
lea
call
lea
xor
fistpll
mov
jge
mov
push
popf
fsubp
arpl
sbb
int
int
loope
pop
jp
faddp
jbe
xor
mov
jae
enter
aaa
mov
aad
mov
std
or
pop
jp
pop
orl
pop
add
test
add
scas
leave
idivb
sbb
push
mov
repnz
mov
outsb
cmp
testb
xlat
movsl
adc
pop
in
pop
ret
or
push
aas
adc
push
jle
adc
push
jmp
mov
mov
xchg
fiaddl
out
nop
push
jo
sub
fnstenv
and
fcmovnb
pop
dec
imul
mov
loope
movsl
ret
repz
jno
daa
sbb
mov
pop
cltd
lods
sub
pop
adc
cmc
add
jno
jge
sbb
jb
mov
sbb
push
jo
xchg
cmp
mov
ss
pop
cmp
dec
das
lods
sbb
jb
pop
jne
lahf
decb
jge
jbe
aas
arpl
inc
and
pop
inc
cmpb
sub
fsubrp
mov
fiaddl
and
and
xchg
mov
cmp
adcb
lock
mov
pop
shl
jle
dec
and
nop
lea
sub
push
aad
mov
das
mov
sbb
jge
push
mov
sbb
dec
sarb
jge
dec
sti
dec
jns
in
inc
in
mov
out
sub
inc
push
sub
jo
xor
mov
sbb
push
mov
push
jle
dec
loop
sahf
clc
cmp
gs
mov
shlb
jae
sbb
cld
mov
pop
jo
pop
pusha
mov
push
add
xor
xchg
test
dec
enter
inc
cmp
mov
fdivrs
xchg
push
ret
jnp
mov
cmp
jg
lcall
mov
xchg
jecxz
addr16
xor
push
fwait
stos
setp
int3
mov
popf
ret
push
push
iret
ja
sbb
fs
movsb
push
inc
push
clc
addr16
jecxz
xchg
std
mov
sahf
mov
jp
imul
lock
mov
ljmp
push
je
imul
ret
mov
lea
push
stos
dec
test
push
lds
ret
pushl
xor
stos
leave
cmp
dec
pop
lock
cs
in
sub
lock
lcall
xchg
push
dec
lea
mov
pop
and
bound
mov
push
imul
outsl
push
and
test
fcoml
imul
xchg
add
dec
cmp
mov
fldcw
push
mov
or
dec
gs
imul
sahf
into
pop
jl
popf
sbb
fst
sbb
out
test
arpl
aam
jae
mov
ret
pop
jo
cmp
je
repnz
repz
outsb
mov
lods
inc
nop
in
fwait
xchg
jge
xor
jne
jge
xchg
loop
pop
sbb
stos
outsl
xchg
stos
mov
lock
push
ret
inc
rcrl
dec
faddp
mov
cli
sub
xchg
mov
rcl
negl
das
sub
or
jl
inc
mov
lahf
lods
xchg
jle
imul
xchg
mov
cs
pop
sarb
xlat
push
fldenv
scas
pushf
mov
mov
xchg
push
mov
mov
rclb
pop
aam
jecxz
and
imul
and
mov
sub
rcrb
fildll
pop
rcrl
rol
out
mov
jmp
int
mulps
and
cmp
daa
fldenv
std
push
push
adc
bound
scas
aad
sbb
push
out
mov
mov
les
jg
ja
fldcw
outsb
pop
push
js
add
cmp
daa
shll
scas
add
mov
scas
xor
and
jge
pop
add
pusha
pop
dec
xchg
xchg
test
sbb
cmpb
sarb
in
loop
add
fstl
and
xor
pushf
in
out
repnz
add
aad
mov
xchg
sar
sbb
xchg
sub
inc
sub
jl
dec
pop
jo
loope
sub
bound
sbb
jmp
adc
inc
push
call
dec
push
sub
xchg
mov
mov
mov
jge
mov
je
mov
inc
inc
adc
addr16
in
jg
in
and
scas
divb
addr16
xor
jp
jmp
clc
fucom
das
out
js
or
push
mov
cmp
leave
jb
sahf
xchg
lret
ret
jb
divl
jl
stos
jl
sahf
lock
inc
push
pop
fcmovbe
hlt
xor
stos
xchg
xor
mov
testb
in
mov
scas
cmpsb
stc
lret
add
subl
xor
repz
out
mov
mov
aaa
push
je
inc
repz
mov
aas
push
adc
lahf
lds
jg
addr16
adc
fwait
std
movsb
fdivl
in
add
hlt
sub
insb
loop
xchg
jmp
jle
out
imul
jecxz
sub
ficompl
and
xor
push
cmpsl
jg
in
call
das
in
cmpsb
int
out
sub
gs
mov
mov
lods
icebp
fcoms
ja
push
and
jns
orl
fldcw
and
fdivrl
aam
and
andl
sarb
bound
or
push
mov
loope
dec
or
sub
test
hlt
pusha
pop
jg
cmp
sahf
and
fstps
cmp
inc
xlat
pop
out
push
ja
push
in
lcall
repnz
sub
fcomps
xchg
add
rolb
dec
rcll
imul
dec
sbb
movsl
dec
out
add
pop
packsswb
inc
push
aad
sub
push
mov
mov
popa
fstps
icebp
or
into
jmp
inc
gs
xchg
out
cwtl
sbb
mov
hlt
or
mov
sbb
call
xor
int3
data16
or
repnz
inc
pop
movsl
sbb
mov
adc
and
icebp
adc
mov
loopne
pop
in
ljmp
fcmovbe
and
jmp
push
std
jge
in
add
jnp
cmp
xchg
imul
cmpsl
mov
fstpl
and
fiaddl
xchg
adc
mov
or
adc
fisubrl
dec
jnp
call
mov
mov
mov
mov
mov
sbb
loop
lods
push
ja
in
cmp
mov
cmp
cmpsl
aas
cmc
push
pop
int
cmp
jl
in
loope
add
mov
pop
jge
lcall
sbbl
pop
out
inc
sub
xchg
add
or
and
xlat
cmpsl
sub
pop
lea
stos
icebp
icebp
xor
dec
clc
mov
or
cwtl
cmp
lea
outsb
pusha
cmpsl
imul
gs
sub
hlt
data16
icebp
leave
mov
fidivl
dec
add
arpl
push
push
daa
das
je
dec
cs
pop
ja
cmp
lcall
iret
jne
notl
sub
cmova
jge
pop
test
or
bound
add
dec
mov
cmpsb
adc
insb
ljmp
jno
aad
sarb
push
lods
aam
sti
sub
sbb
addr16
cltd
dec
hlt
lods
dec
inc
mov
push
cmp
cmp
and
inc
pop
cld
mov
inc
inc
ret
movsl
jb
pop
sbb
mov
sub
or
push
std
jns
sub
push
int
cs
or
xchg
add
sarb
pop
inc
adc
aas
sbb
jmp
lahf
push
in
ret
mov
lds
pop
cli
cmp
test
imul
add
jmp
fstps
mov
sahf
lret
xchg
aad
cmp
and
out
shll
adc
cltd
and
nop
lea
push
sub
sub
cmp
xlat
and
dec
and
lret
pop
out
dec
imul
add
xchg
ljmp
jp
arpl
mov
jne
test
movsb
mov
dec
rorl
sbbb
rcrb
pop
sti
scas
mov
pop
test
fs
hlt
movl
pusha
testb
ss
dec
push
popf
cmpsb
mov
jne
or
cmp
sbb
sub
fs
shrl
test
mov
lods
push
sub
mov
xchg
mov
add
or
inc
dec
inc
in
inc
xor
fs
pop
dec
adc
insb
adc
cmp
notl
pop
andb
sbb
push
mov
aam
mov
push
mov
jae
dec
xchg
and
rclb
loope
cltd
hlt
lods
cmp
divl
fdivl
mov
sar
jmp
fcmovb
xor
pop
jnp
xor
or
xchg
push
xor
iret
scas
jmp
daa
pop
ret
push
ljmp
sahf
jmp
std
aam
mov
ljmp
adc
lds
addl
adc
cmp
pop
push
test
inc
push
outsl
fisttpll
std
call
jbe
movl
jne
sbbb
aam
jnp
add
add
xchg
in
daa
ss
je
push
sbb
ljmp
push
imul
jle
cmp
jp
add
sub
adc
out
sub
sbb
pop
jns
mov
jno
or
xor
mov
push
jle
imul
xchg
mov
fnstsw
jg
jb
push
loopne
fistl
das
aas
push
test
jnp
or
fidivrl
mov
movsl
push
enter
add
rcll
jnp
sub
add
in
xchg
add
push
jnp
cvtps2pd
or
or
clc
cmp
inc
jbe
lods
fists
pop
cmp
movb
out
sub
les
jecxz
and
lds
in
dec
clc
hlt
mov
testl
incb
mov
pop
cld
cli
xlat
cmpsb
nop
xorl
into
mov
scas
mov
dec
pushf
xchg
into
je
movsl
jo
xor
bound
push
dec
ljmp
fmuls
lods
imul
out
sub
sub
add
pop
filds
aas
leave
or
out
clc
lret
inc
sti
ja
sahf
mov
push
jg
mov
or
mov
xchg
into
and
xchg
ljmp
cmp
mov
mov
inc
jp
sbb
jecxz,pt
dec
es
sub
cltd
dec
cwtl
inc
cmp
sub
fstpt
inc
mov
sub
mov
js
leave
sbb
jno
xor
aad
nop
mov
pop
add
inc
mov
scas
movsb
mov
mov
add
popf
cwtl
cmp
mov
sti
mov
mov
aas
dec
pop
fsubr
pop
mov
pop
popa
pushf
divl
sbb
lret
lret
mov
mov
adc
in
int3
mov
mov
hlt
push
add
lods
insb
loopne
test
fisubrl
jge
cmp
inc
orl
insl
sbb
in
lock
fsts
aas
inc
std
in
xor
fbld
cmp
call
cmp
mov
jne
push
pop
add
popa
pop
or
or
ds
jae
faddp
cltd
sbb
mov
movsl
jg
mov
jbe
jecxz
push
loop
mov
popf
clc
sub
test
xchg
mov
cmp
add
inc
sub
push
lahf
in
mov
es
pop
dec
cmp
cmp
dec
pop
cmp
or
jmp
in
enter
mov
in
push
pop
cmp
adc
rcr
stos
or
jmp
push
push
sbb
push
xor
pop
cmpsb
stos
pop
pop
mov
cmpsl
test
push
imul
and
dec
jns
adc
repz
mov
mov
pop
xlat
dec
add
xchg
dec
cwtl
fidivl
push
sub
lods
mov
xor
cmc
add
iret
cvttps2pi
test
pop
es
ds
clc
mov
sbb
or
cmp
cmp
insb
sub
les
loope
mov
stc
sub
xchg
jae
in
in
mov
mov
iret
push
or
add
mov
mov
ficoml
jle
push
sti
and
sub
test
adc
jle
push
and
sub
psubsb
jbe
inc
test
icebp
and
inc
testb
mov
mov
push
cld
xchg
pop
pop
dec
pop
bound
addr16
fidivl
int3
inc
gs
sbb
dec
inc
adc
shl
movsl
aad
and
xchg
cmp
orl
pop
dec
test
xchg
add
fcomi
cmp
int
mov
xor
out
mov
shlb
inc
jl
scas
xchg
test
push
adc
es
lcall
ret
hlt
vdivpd
mov
inc
mov
cmc
mov
fildll
ficoms
sub
incl
test
cmpsl
mov
mov
jmp
daa
push
pusha
or
mov
mov
jno
push
adc
sti
cli
shl
addr16
sbb
mov
mov
lock
sbb
fists
cld
scas
or
jg
and
test
dec
iret
sbb
lret
jmp
icebp
mov
andl
mov
mov
mov
cwtl
xor
enter
mov
add
add
ss
iret
je
aam
jbe
push
cmp
jnp
int3
jb
jns
or
mov
imul
mov
push
inc
mov
add
jnp
mov
xchg
gs
pop
mov
jecxz
mov
adc
xchg
gs
sarb
and
push
mov
xchg
inc
rorl
das
adc
jo
std
mulb
aad
sub
sub
outsb
adc
bound
push
sbb
loopne
adc
popf
xchg
bound
rcl
mov
pop
aaa
xchg
xor
lret
loope
fldl
jo
or
mov
rcr
daa
loopne
data16
jns
mov
ds
iret
movsb
lahf
mov
dec
sbb
jbe
fmuls
adc
jnp
inc
mov
cmpsb
pop
mov
icebp
aaa
cmp
mov
fs
fisubrl
aas
ret
pushl
push
xchg
push
in
and
nop
movsb
jnp
mov
xchg
je
jb
jecxz
jmp
push
inc
pop
negb
lods
xor
add
aaa
imul
dec
adc
fcomps
adc
sbb
sub
jno
cltd
xlat
adc
jno
cwtl
pusha
insl
xlat
xor
mov
daa
mov
sub
test
std
jnp
insb
dec
add
add
cmp
add
cmp
loop
lds
rclb
lock
dec
mov
and
xchg
jp
sbb
jmp
mov
icebp
arpl
repz
rolb
fmulp
add
fidivrs
xchg
adc
inc
je
icebp
or
inc
test
fcoms
xchg
movsl
pop
dec
sbb
add
cmp
out
movsl
data16
je
imul
les
fdivs
outsl
adc
into
xchg
out
or
pop
xor
cmp
mov
dec
hlt
adc
add
fs
subl
inc
pusha
aad
pushf
rcl
icebp
xor
xlat
sub
and
adc
mov
ja
xchg
adc
in
jae
imul
jbe
mov
mov
out
lret
sti
hlt
adc
idivl
sbb
insb
lcall
loope
in
cld
jl
sbb
movsl
adc
jbe
push
jle
mov
adc
mov
pop
cmp
cwtl
adc
xor
insl
pop
push
fbld
ja
movsb
pop
jle
jbe
and
jae
mov
xlat
lea
pop
xchg
clc
repz
cli
testl
inc
or
mov
out
adc
lret
test
jmp
xchg
pop
aam
rolb
xor
sbb
sbb
outsl
inc
aam
add
dec
mov
filds
push
loope
add
std
mov
or
imul
cmp
push
jle
cmp
pop
pop
xchg
add
mov
cmp
mov
fs
popa
jmp
cmc
add
sahf
jp
sub
sbb
popa
jnp
scas
mov
add
dec
lods
jle
inc
cmp
dec
mov
pop
add
sbb
xchg
or
ds
fs
in
push
dec
lret
add
push
mov
or
cmp
mov
test
push
sahf
daa
loopne
loop
dec
xchg
push
jns
gs
mov
loop
enter
pop
adc
dec
jle,pt
and
and
cs
sahf
scas
mov
cmp
out
repnz
dec
push
xchg
movsl
jmp
push
imul
jne
dec
dec
shlb
inc
mov
and
mov
add
dec
insl
out
lahf
into
dec
fldenv
ljmp
mov
fisubrl
push
lock
mov
jle
jle
out
fldln2
outsb
push
or
mov
jl
pop
add
cmp
cmp
fisubl
aas
test
cmpsb
js
dec
add
mov
loop
es
fnstenv
jp
sbb
imul
dec
dec
dec
mov
pop
mov
or
inc
hlt
lods
adc
mov
ja
mov
push
pop
movsb
pop
es
jb
jnp
lea
mov
cli
data16
mov
fbstp
adc
imul
insl
xor
xchg
int
inc
inc
out
push
mov
pop
and
pop
into
mov
outsb
push
fisttpll
je
push
in
mov
inc
mov
jo
xor
pop
std
mov
sti
jno
in
insl
push
and
inc
and
add
mov
nop
stc
mov
and
fnsave
mov
cs
icebp
and
inc
xchg
dec
rorb
xchg
jnp
sub
cmpsl
and
jbe
push
testb
das
les
scas
and
xor
sub
test
enter
dec
dec
in
adc
mov
cmp
inc
dec
enter
aad
insb
cmpb
mov
cmc
jae
cmp
wbinvd
out
add
sbb
dec
cli
js
and
shll
pop
cmp
pusha
sbb
and
push
mov
imul
and
mov
jbe
flds
jmp
pushf
clc
mov
bound
nop
and
cmp
test
xchg
or
fidivrs
mov
rcl
or
arpl
cli
movsb
inc
out
lds
fiaddl
stc
adc
insb
iret
outsl
dec
imul
mov
decb
in
add
xchg
out
shll
loop
jmp
icebp
stos
xchg
mov
add
movsl
jns
xchg
imul
fs
popa
pop
mov
into
jnp
sub
jp
das
daa
add
aas
pop
leave
insb
dec
popl
xchg
sub
cli
and
mov
mov
add
dec
gs
insb
pop
clc
imul
cld
scas
push
mov
push
pop
sub
mov
dec
mov
aaa
lods
mov
sub
cmpsb
cmpsb
and
sbb
jecxz
scas
bound
push
pusha
arpl
in
mov
mov
xor
daa
adc
cmp
push
lods
fnsave
and
inc
jge
loopne
lret
movsb
inc
mov
adc
out
or
xchg
pop
leave
test
in
jmp
mov
popf
lock
sub
and
push
and
cwtl
mov
xorb
notb
dec
cmpsb
fmull
insb
mov
mov
and
push
jp
insb
rcll
sbb
xor
sbb
clc
or
leave
stos
adc
imul
add
aaa
push
scas
sub
jno
cld
ja
lods
sub
dec
into
mov
sbb
sub
insl
ljmp
dec
aad
dec
dec
orl
movsl
cli
sti
mull
lcall
xor
call
pop
jge
pop
and
test
data16
adc
cmpsl
add
and
scas
cmp
int
sub
or
scas
divl
mov
adc
mov
pop
mov
addr16
jae
pushf
pop
adc
or
cmp
ss
cmp
aaa
xor
jmp
xor
push
aas
and
dec
les
xchg
popa
push
lahf
sti
sbb
into
in
fisubs
cld
push
xchg
cs
sbb
sub
jg
in
cmp
jnp
fcmove
push
push
mov
sbb
fidivl
mov
nop
pop
inc
dec
icebp
ja
aas
leave
jge
cltd
jle
mov
jl
cmp
pop
mov
adc
lock
adc
cmp
into
shrd
test
std
inc
and
jmp
push
insb
mov
mov
adc
pop
into
jns
dec
sbb
bts
scas
xor
adc
negb
stos
mov
xchg
dec
lret
mov
cmp
pop
lcall
inc
and
movsb
outsl
fidivrl
and
stos
mov
dec
sbb
aad
add
cmp
sahf
roll
scas
pop
cmpsb
fadds
cmp
inc
xchg
add
cmp
jge
or
es
jge
jb
std
pop
int3
stc
xlat
rcll
inc
repz
jle
ds
hlt
iret
scas
and
and
ss
adc
popf
mov
sbb
loopne
cmp
inc
mov
pop
xchg
sarb
jge
mov
cmpsb
mov
in
daa
add
xor
sbb
cwtl
lods
push
mov
xor
push
jp
xchg
lea
fwait
lret
and
aam
mov
mov
jecxz
jl
mov
sbb
push
mov
jle
jbe
xchg
xor
outsl
xor
outsb
pusha
jb
stos
es
lret
mov
adc
dec
xor
mov
mov
loope
adc
sub
push
fcomi
push
sbb
and
pusha
or
shrl
insb
add
dec
insb
dec
and
dec
in
push
insl
adc
fidivl
jae
fcoml
push
test
pop
jmp
push
int
inc
mov
push
or
ret
scas
xlat
mov
ret
insb
mov
cmp
and
add
and
and
push
adc
fnstcw
and
xor
andl
aam
push
shrl
add
push
inc
in
imull
add
mov
ja
lahf
sbb
xor
inc
jne
mov
add
jecxz
sub
outsl
dec
pop
mov
xor
fimuls
movsb
pop
loopne
sub
popa
popf
xor
xlat
lock
push
popf
add
inc
and
scas
aam
jecxz
call
mov
pop
dec
in
fs
add
or
cmp
mov
dec
push
adc
jne
jecxz
stos
int3
mov
ficompl
add
subl
jp
in
inc
addr16
push
fs
and
icebp
loopne
mov
lcall
cmp
mov
icebp
mov
js
aam
fmull
lret
adc
lcall
and
push
dec
mov
sub
sub
dec
dec
pop
sub
nop
stos
jg
adc
out
add
enter
outsl
mov
push
mov
mov
adc
stc
sbb
or
xchg
mov
shlb
xchg
inc
mov
fists
fistpl
lret
fsubl
lea
add
sbbl
mov
aaa
cmp
je
les
sub
repnz
adc
shrl
mov
xchg
gs
sbb
sub
or
js
and
pop
xchg
addr16
adc
in
leave
test
cli
in
in
cs
xchg
loop
dec
stc
jb
push
add
lods
movsl
xor
xchg
dec
push
inc
push
imull
adc
fwait
jp
sahf
pop
out
add
inc
push
adc
aaa
sti
dec
out
rclb
xchg
lret
dec
lahf
mov
mov
mov
pop
ja
insl
lcall
gs
adc
sub
aaa
fnstenv
jmp
std
enter
inc
lcall
push
aam
cmpl
cmpb
jmp
fldt
lods
pop
inc
shlb
sbb
jp
and
xchg
ljmp
imul
mov
dec
sti
push
int
cmpsl
xor
xor
add
out
mov
jecxz
out
in
cltd
jge
xor
aaa
fs
mov
pop
lret
fwait
lahf
cbtw
push
push
xor
mov
movsl
scas
iret
mov
sarb
icebp
cmp
subl
insb
repnz
pop
add
adc
and
addr16
lds
sbb
pop
pop
add
and
fadd
jo
pop
cmp
dec
and
jns
fbstp
inc
mov
mov
fimull
lahf
aas
aaa
fsts
fsts
mov
push
fisubrs
pop
xor
mov
dec
ficoms
mov
stc
fs
jo
pop
mov
jp
sub
loopne
sbb
loope
lcall
insl
sbb
jmp
xor
jnp
push
test
push
sub
repz
sub
cwtl
mov
and
push
push
inc
ror
fmull
push
jmp
insb
data16
or
insl
adcb
cmpsl
cs
fisubs
cmp
or
jl
aas
or
in
mov
adc
pop
rolb
mov
sbb
adc
rorl
sbb
sbb
mov
lahf
xchg
xchg
adcb
or
rol
xchg
xor
pop
dec
lcall
or
das
mov
lods
fs
call
adc
pop
in
mov
pop
flds
xor
inc
dec
or
dec
dec
lret
push
iret
addb
add
push
inc
icebp
ljmp
sub
jns
dec
and
sbb
test
mov
sbb
cmp
xchg
in
mov
test
sbb
movsb
gs
stos
sbb
fldcw
push
icebp
mov
cs
sub
pop
dec
ret
xchg
in
mov
adc
jg
push
pop
loopne
add
hlt
lds
add
fcmovne
je
roll
bound
cltd
push
xchg
xor
fs
pop
jnp
stos
in
pop
loope
mov
stc
ss
lock
hlt
lock
jns
adc
push
imull
incl
roll
mov
lods
ja
dec
inc
pop
push
sbbb
or
adc
js
out
or
daa
jae
popa
mov
mov
in
inc
jg
std
and
adc
in
push
mov
cs
mov
jnp
xchg
lcall
shlb
push
test
lcall
push
xchg
aaa
push
lret
mov
ljmp
cmpsl
and
mov
enter
cmc
mov
addl
out
dec
outsl
dec
js
adc
nop
push
mov
push
pushl
enter
clc
lret
pop
ss
adc
and
test
sub
movsl
pop
stc
pushl
pop
xor
mov
jge
and
adc
jp
mov
ficoml
mov
ret
sbb
mov
xchg
mov
add
cmp
adc
sub
jns
aas
dec
in
in
xor
mov
mov
or
aam
jle
jns
mov
add
scas
ljmp
push
jg
pop
lds
out
sub
mov
cs
add
dec
sbb
cltd
dec
and
mov
cli
xor
out
xchg
lods
or
fwait
adc
out
or
pop
xchg
les
daa
cli
and
loopne
outsb
mov
rcll
cltd
push
sub
repnz
push
loop
push
cld
mov
js
imul
xchg
insb
mov
push
cmp
adc
and
shll
mov
mov
fisttpll
testl
push
imul
lret
xor
pop
mov
repz
pop
sbb
insb
xor
mov
xor
mov
xchg
es
sbb
data16
mov
pushf
mov
shrl
clc
fidivrs
jns
mov
cmp
and
jl
mov
lcall
das
ret
mov
fsubs
jl
mov
test
sbb
sbb
sbb
jne
push
mov
test
sbb
sbb
pop
push
pop
sub
ret
push
xlat
rcrl
fcmovnu
daa
out
jo
push
int3
movsb
mov
mov
outsb
jl
imul
and
push
sbbl
push
icebp
cli
cmp
push
jo
loopne
es
dec
movsb
dec
ja
aas
and
divb
pushf
mov
sbb
rol
jmp
cmp
stos
std
mov
out
xor
mov
loopne
in
xchg
or
in
or
sub
or
cmp
xchg
mov
dec
push
mov
mov
fcmovb
data16
pop
mov
in
cmpsb
outsb
dec
ss
stc
or
cmp
jmp
out
test
rolb
clc
push
add
cmc
rcrl
out
sub
lods
lods
es
mov
mov
add
xor
adc
insb
xchg
push
lret
push
mov
cmc
mov
andb
in
mov
add
outsl
and
mov
imul
mov
push
js
mov
and
pushf
es
fimuls
jp
das
dec
or
pop
xchg
add
out
lods
mov
sarb
scas
push
shlb
or
call
sbbl
pop
jbe
fs
xchg
sbb
xchg
pop
nop
in
rcrl
lret
add
mov
loopne
cmp
sub
mov
loop
loopne
push
mov
pop
icebp
cmpl
ljmp
inc
or
pop
add
leave
pop
cli
arpl
in
ficomps
orb
pop
loopne
pop
int3
adc
imul
leave
lea
cld
popf
cmp
outsb
inc
loop
out
inc
mov
lock
jecxz
int3
out
pop
ss
mov
sti
fnstenv
shll
gs
xor
adc
mov
and
lods
cwtl
jbe
add
rorb
ror
hlt
sti
push
cmp
mov
xor
mov
jge
xchg
shld
std
aaa
inc
lea
lods
mov
or
dec
mov
cmp
fcom
pop
jbe
xchg
xor
mov
cli
cld
push
adc
xchg
rorb
andb
scas
daa
jp
add
shl
fiaddl
add
jns
inc
arpl
bsr
hlt
fmuls
push
mov
rclb
sub
jmp
jp
dec
pusha
dec
hlt
lea
lods
hlt
jl
fwait
adc
subb
dec
stos
jmp
pop
fdivrs
lcall
fldt
xchg
inc
sbbl
loope
ja
push
bound
add
arpl
push
ret
out
mov
dec
and
cs
pop
hlt
mov
sbb
in
imul
mov
mov
jl
in
test
sbb
int3
jae
xor
cmp
mov
int3
jmp
xor
add
sub
and
fidivs
and
aaa
xchg
leave
mov
cmp
test
shr
and
in
inc
gs
jle
mov
mov
ja
cmp
rcll
or
add
cmp
hlt
stc
ret
pop
out
push
jae
addr16
cmpsb
xor
add
cmpsl
cmp
bound
mov
shr
das
xchg
mov
dec
adc
sub
in
dec
filds
inc
jmp
cmp
imul
cmp
push
mov
pop
test
sarb
xchg
add
leave
push
repz
mov
fldcw
jge
mov
loope
and
jl
das
mov
push
js,pt
bndldx
ret
sbb
lret
aaa
pop
imul
mov
ficomps
adcl
xchg
sub
mov
adc
cs
inc
gs
scas
sub
fistpll
loope
xchg
cmp
enter
cmp
pop
imul
ja
testl
scas
std
and
jnp
mov
push
loope
int3
arpl
stos
and
sahf
pop
jecxz
inc
mov
fwait
shrl
cmpl
push
mov
aam
or
gs
adc
add
sbb
mov
pop
mov
cmp
jp
hlt
adc
stos
jo
mov
adc
sub
sbb
cltd
cld
imul
leave
test
fsubs
or
insl
mov
cmpsb
mov
hlt
push
mov
test
pop
fdivp
inc
mov
and
push
insb
mov
cbtw
inc
adcb
push
or
mov
mov
xchg
ja
cmc
lret
popf
push
aaa
mov
ds
sahf
push
push
pop
push
neg
inc
pusha
sahf
cmp
lret
push
repnz
mov
mov
xchg
test
mov
dec
cmp
sbb
mov
mov
sbb
or
cwtl
or
cmp
xchg
cwtl
aas
lods
test
mov
push
popf
cmp
dec
mov
adc
in
inc
fnstcw
into
insl
pop
imul
leave
dec
lahf
std
jmp
shl
lahf
sbb
int3
push
jmp
adc
aaa
push
xchg
fdiv
into
aad
fldenv
mov
mov
adc
and
sub
sbb
push
jnp
push
fimull
adc
xchg
dec
in
in
inc
popa
jo
out
icebp
lds
inc
sub
adc
loope
hlt
mov
fstl
scas
ljmp
add
xor
xchg
mov
cwtl
xchg
jle
adc
add
call
daa
or
and
shrb
sbb
mov
mov
les
adc
sarb
xchg
bound
icebp
jge
pop
mov
jo
jmp
mov
add
jge
xchg
sub
xor
hlt
and
mov
insl
push
iret
lods
dec
push
aam
push
pop
pop
or
fstl
aam
xchg
cld
dec
cmp
scas
stos
jbe
iret
aam
mov
in
in
in
xchg
pusha
and
pcmpeqb
push
add
mov
pop
mov
subl
cmpsb
push
mov
push
scas
stos
cmp
mov
cld
addr16
mov
in
mov
mov
add
mov
testl
mov
mov
push
pop
jo
push
fnstcw
jae
aas
dec
loopne
in
stos
rcrb
mov
test
pop
adc
enter
inc
add
and
inc
push
in
cmp
cmp
pop
adc
lret
jo
jmp
std
outsl
test
add
sbb
mov
outsl
inc
shr
scas
dec
loopne
pop
sub
sbb
icebp
jo
or
pop
xor
stc
mov
test
leave
mov
pop
cltd
jb
jge
clc
push
and
adc
ret
sub
aas
xchg
das
cltd
adc
mov
shlb
aas
xor
inc
sti
push
daa
insb
sub
cwtl
daa
xor
test
icebp
pop
mov
jb
testl
adc
mov
gs
cmp
xchg
sahf
scas
stos
push
cmp
pop
arpl
test
adc
lock
mov
int3
push
adc
jae
add
scas
sub
daa
xchg
stc
test
imul
cmp
mov
sbb
push
or
fisubrs
mov
pop
ljmp
out
fisubs
out
dec
sub
jl
cld
push
jnp
xor
andb
clc
pusha
xchg
xchg
dec
push
test
or
and
repnz
ja
sub
mov
inc
roll
into
iret
pop
ret
sbb
dec
int3
pop
aad
xor
fnstcw
out
push
or
sub
adc
add
imul
test
push
popf
imul
push
ficomps
ljmp
cmp
dec
leave
pop
xor
inc
aas
out
or
enter
sub
or
inc
adc
sub
shll
mov
out
aas
xor
pop
addr16
lods
fisubrs
mov
adc
in
or
sbb
push
and
fsubs
cs
push
xchg
sarb
push
test
add
add
sti
adc
and
pop
mov
lock
sub
push
sbb
movsl
dec
icebp
movsl
push
loop
into
out
fsubl
mov
cltd
adc
mov
sub
insb
cmp
jl
cli
mov
cmp
sub
xor
sbb
hlt
inc
mov
out
idivl
jl
nop
xchg
imul
push
pushf
xchg
enter
es
addr16
lret
jae
mov
cmp
es
add
mov
cmp
sub
mov
lock
loop
loope
ds
mov
add
mov
push
bound
sbb
mov
mov
sub
cmp
fwait
in
mov
xchg
dec
sub
movsl
adcl
add
mov
xor
repnz
loop
lock
sbb
in
xor
xchg
mull
and
xor
sub
inc
sbb
and
dec
loopne
stc
ret
in
xor
psubd
or
jecxz
pusha
mov
gs
pop
in
jbe
jle
jl
mov
fbld
jo
mov
sahf
lret
dec
leave
repz
out
in
and
sub
movsb
and
jno
push
stc
ss
cmp
lock
cmp
push
out
rcrl
bound
or
int
mov
mov
inc
lret
ja
dec
inc
xchg
adc
add
xchg
leave
adc
inc
cli
decb
mov
mov
dec
rolb
bound
jp
nop
pop
movsl
loopne
inc
mov
cmp
jne
xor
mov
sub
sti
adc
sub
aam
addr16
mov
mov
loop
and
cmpsl
mov
in
cli
dec
ss
and
sarb
xorl
cmc
dec
fs
mov
data16
pop
outsb
jl
dec
out
pop
faddl
lret
das
dec
mov
stos
imul
jns
js
shrb
and
adc
mov
lods
scas
add
mov
ja
cs
divb
imul
int
lods
pop
inc
and
dec
pop
xor
stos
pop
clc
fucom
and
je
dec
sbb
ret
dec
lcall
dec
scas
jno
push
mov
imul
call
ljmp
jns
repz
test
cmp
aaa
out
cli
cmpsl
jge
popa
xchg
scas
out
push
int
xor
dec
ja
xchg
jne
pushf
iret
adcl
or
mov
and
adc
cs
dec
insl
data16
sti
mov
aaa
idivb
loopne
std
pop
inc
inc
call
stos
iret
leave
sub
nop
leave
ficoms
and
xor
xor
movsb
das
pop
xchg
andl
pop
inc
xchg
sar
lahf
mov
dec
dec
xor
enter
pusha
ljmp
pop
sti
xlat
jle
xor
dec
dec
rcrl
ds
add
jmp
pop
mov
xor
xchg
mov
cmp
xor
jmp
lret
pusha
sub
xor
outsb
movsb
call
jno
inc
mov
mov
push
xchg
cmc
icebp
mov
in
jp
xor
mov
gs
test
ret
in
sarl
dec
and
xlat
stc
into
aaa
rclb
out
js
sti
adc
mov
arpl
pop
subl
sarb
lret
ret
cvtps2pd
push
mov
lcall
adc
jb
js
add
bound
sub
sahf
mov
outsl
fwait
shl
rorb
jb
lea
hlt
outsl
mov
pop
jbe
ror
cmp
cmp
imul
push
jno
in
mov
jecxz
and
jbe
push
adc
mov
xor
loope
or
daa
or
bound
pop
cmp
adc
jl
xchg
notb
sub
mov
loope
lahf
imul
sub
xlat
jmp
les
jnp
mov
add
jl
stc
test
or
jbe
call
mov
add
in
mov
shll
adc
push
pop
sub
orb
sahf
mov
pop
jp
testl
sbb
bswap
adc
rcr
iret
add
push
pop
test
fstpt
push
and
loopne
cmp
adc
sbbb
xchg
add
xchg
xor
lcall
fisubrs
out
jo
mov
jg
mov
rolb
je
dec
mov
pop
mov
push
xchg
insl
outsb
es
pop
sbb
insb
je
out
sub
jns
jae
rcrb
mov
mov
adc
xchg
aam
inc
jmp
dec
roll
jmp
push
cmp
sti
sbb
pop
pushf
inc
lods
add
mov
jge
mov
scas
mov
sahf
mov
out
loopne
test
mov
std
icebp
ds
test
and
jge
mov
push
or
inc
cs
xor
movsb
mov
cmp
lret
sub
or
jg
and
cmp
cmpsb
icebp
fiadds
mov
les
dec
push
imul
fdivl
add
pop
mov
jecxz
cmp
jns
mov
mov
sahf
lcall
and
pop
and
jmp
loop
ss
sub
mov
mov
jno
add
int3
icebp
mov
mov
shll
imul
cmpsb
mov
sahf
xchg
cmpsl
nop
push
mov
ficompl
mov
loop
mov
or
sahf
xor
idivb
stos
xor
sti
test
push
fldcw
out
das
repz
xchg
std
loope
ret
mov
push
and
lret
sbb
pop
push
pop
imul
and
adc
jmp
or
mov
adc
pop
jnp
fcompl
jbe
jns
fcomps
push
push
pop
and
xchg
cltd
sbb
adc
insb
daa
inc
jle
cmp
lahf
clc
push
out
sbb
or
movsl
cmpsb
push
hlt
and
sub
es
push
mov
xchg
cmp
shlb
xchg
mov
lahf
lret
negl
sub
pop
inc
mov
lea
ljmp
pushl
pcmpeqb
or
pop
cmpsl
dec
pop
dec
xor
inc
and
inc
rorb
jp
popa
les
mov
and
nop
mov
xchg
shlb
push
xor
sbb
pop
lsl
lds
mov
dec
les
add
mov
push
test
pop
sub
fs
xchg
cli
inc
rcl
xchg
push
pop
scas
fwait
mov
lea
ja
cmp
sub
pusha
cli
xchg
imul
inc
push
imul
icebp
xor
dec
mov
xlat
push
mov
es
prefetch
aad
push
testb
jg
stc
js
inc
cmpsb
scas
jg
aam
add
outsb
call
inc
push
or
jo
addl
xchg
out
addr16
mov
push
insl
ja
push
sbb
js
fmuls
mov
xchg
dec
and
cmp
and
push
mov
pop
iret
es
adc
push
mov
dec
or
jno
mov
mov
loop
in
add
fisubrs
push
sub
popa
mov
inc
adcb
adc
sbb
jne
adc
mov
rolb
std
adc
mov
adc
push
adc
mov
push
push
int3
and
ss
dec
inc
dec
out
dec
jnp
push
mov
insb
jecxz
andl
addl
dec
fs
jp
ljmp
loop
fisttpll
xlat
fdivrs
lds
call
xor
movsl
jmp
mov
mov
dec
loop
imul
push
dec
xchg
inc
cmp
pop
outsl
cmp
cmp
int
push
jp
push
push
rorb
fcmovnb
adc
outsl
lcall
push
mov
dec
test
mov
sbb
add
inc
aad
mov
out
adc
push
inc
ret
or
paddusb
inc
inc
inc
push
jl
pop
xchg
xor
jnp
cmpsb
jb
jecxz
adc
ret
orb
push
cmp
or
xchg
pop
inc
adc
add
lret
mov
adc
daa
add
dec
iret
lcall
cli
jmp
mov
insl
dec
xchg
and
dec
popa
jmp
or
jecxz
stc
mov
ja
sbb
in
aaa
out
mov
sbb
pop
fbstp
ret
fcmovbe
or
push
cld
cmpsl
cmp
xchg
sbb
cmp
inc
push
ss
push
xchg
mov
pushf
jno
or
xchg
pop
jns
adc
ds
arpl
mov
outsl
jo
push
es
adc
sbb
jne
add
insl
int
pop
mov
ss
lock
jmp
iret
mov
pop
jmp
xor
mov
call
xchg
push
imul
lods
mov
or
adc
int3
push
pop
mov
adc
ja
adc
jb
jl
cmp
mov
pop
cmpsl
loopne
icebp
lcall
cwtl
nop
test
jo
lods
repnz
enter
lock
mov
mov
mov
rol
jle
push
adc
fbstp
mov
jge
js
cmp
inc
imul
mov
shrl
xchg
je
popa
insl
cmpsb
fs
xor
xor
mov
loope
adc
insl
rorl
or
sub
lcall
stos
movsl
inc
fst
insl
sub
movsb
add
mov
adc
mov
mov
or
push
cmp
xchg
push
mov
jnp
inc
jge
push
mov
pushf
mov
cmp
lods
sub
mov
jno
in
add
out
test
addr16
daa
sub
sbb
cmpsl
pop
xchg
jae
xlat
test
outsl
ret
in
xor
add
test
lods
hlt
mov
fidivs
mov
xchg
dec
add
js
jg
xchg
lahf
lea
stc
xor
mov
lret
dec
mov
mov
add
sbb
inc
jge
jl
call
push
pop
sti
push
mov
sub
jmp
adc
std
popa
push
or
xchg
shlb
std
aaa
and
lock
lock
dec
or
cltd
in
jmp
and
mov
aam
dec
dec
sub
add
fmuls
iret
adc
dec
mov
pop
sub
in
cmp
push
sahf
dec
sbb
lret
stos
int
fldcw
adc
jp
leave
dec
aas
mov
dec
flds
out
push
push
es
lret
std
std
jmp
xchg
cs
or
shll
xor
sub
inc
xchg
cmpsb
roll
sub
imul
mov
xchg
and
pop
push
and
xchg
jbe
sub
jecxz
cltd
insb
ja
test
inc
icebp
stos
pop
sub
cmp
push
cmc
in
sub
xchg
jnp
or
xor
mov
mov
mov
pop
dec
aaa
notl
in
ds
insb
cmp
jecxz
pop
lret
icebp
and
or
mov
repnz
into
push
jns
mov
and
cmp
cltd
add
sub
adc
push
dec
push
jo
es
shl
or
imull
std
inc
dec
inc
dec
xchg
cmp
xchg
push
loope
or
enter
mov
daa
inc
xchg
push
insl
mov
scas
scas
pop
inc
sbb
in
mov
mov
mov
jne
pusha
mov
pop
lahf
dec
inc
xchg
call
jbe
jne
out
stos
push
aam
jbe
dec
fmull
hlt
mov
xchg
add
jl
add
jl
dec
pop
dec
testl
fidivrl
add
jl
inc
test
popf
adc
push
dec
rolb
cltd
imul
into
push
xor
push
dec
jl
sbb
mov
jae
push
jae
add
out
mov
loop
sti
cmp
mov
xor
js
mov
test
fs
adc
mov
inc
push
icebp
pop
ficompl
data16
scas
adc
lret
mov
or
insb
dec
sti
xchg
loope
das
andl
fsts
jmp
add
jg
and
push
jmp
lahf
movsb
xchg
fbld
cmp
aaa
je
inc
popa
pop
cmpb
pop
notl
pop
cmp
mov
enter
je
mov
fidivs
sbb
dec
popl
lret
mov
out
jnp
pop
jbe
mov
cltd
xor
call
gs
cmp
dec
aaa
test
sti
push
ljmp
xor
pop
push
inc
pop
mov
inc
mov
ljmp
stos
lret
fwait
inc
sbb
lcall
icebp
pushf
aam
arpl
add
lods
dec
push
cld
shlb
aam
mov
cmc
xchg
ficompl
pop
jge
jae
cli
cmc
sbb
xchg
mov
arpl
pushf
enter
jnp
xchg
and
flds
insb
das
mov
and
pop
mov
jbe
movsb
aam
int3
add
fsubrs
data16
cli
or
pushl
xchg
rorl
imul
lock
add
mov
call
jno
popf
mov
aas
loope
call
add
jo
mov
mov
and
jl
jo
push
mov
sub
test
add
xor
pop
out
mov
out
shl
cld
mov
mov
shlb
test
shl
push
or
or
pop
or
in
div
into
xor
add
jo
xchg
mov
push
cmp
xchg
sub
mov
pop
mov
or
adc
out
rolb
jg
dec
popf
xor
test
rorl
xor
inc
shlb
jb
jns
or
cli
cmp
or
loope
dec
jge
pop
dec
dec
xor
jbe
mov
notl
out
insl
xchg
add
call
xor
lods
xchg
movsb
std
xchg
pop
mov
scas
aad
aas
add
push
adc
add
or
stc
pusha
pop
lods
call
scas
fwait
jmp
lahf
cmp
ret
fsubrs
loop
iret
xor
inc
ror
loope
scas
stos
mov
dec
add
aaa
gs
lcall
push
dec
or
test
out
fwait
push
lcall
push
lods
and
dec
add
cli
mov
call
xchg
sub
movsl
or
mov
out
sub
mov
cmc
fwait
dec
shl
test
xchg
cld
adc
mov
push
rclb
movsl
and
mov
ret
xor
lret
jp
lods
sub
mov
mov
sbb
add
lods
ret
stos
mov
fmulp
mov
dec
lea
mov
stos
lahf
xor
push
sub
das
xor
adc
mov
rclb
mov
test
out
cmp
jo
xor
dec
dec
dec
mov
sbb
std
sub
ffreep
push
xchg
pushf
jne
push
jne
jo
sbb
dec
jg
cld
rcl
jmp
fisttpll
mov
jae
and
cmc
mov
xor
imulb
jns,pn
or
ja
inc
mov
sbb
xchg
jl
pop
cmp
push
shll
addb
mov
pop
pop
xchg
scas
mov
add
stc
add
shll
add
inc
jp
inc
mov
lds
adc
xor
cmc
pop
or
push
xor
or
nop
cs
leave
xor
dec
out
or
hlt
push
jg
incl
shll
xchg
pusha
inc
sbb
adc
jo
ja
sub
cmp
sti
aad
lahf
adc
sbb
push
sbb
or
in
insb
xor
inc
addr16
pushf
popf
mov
andl
in
sbb
pop
ds
in
lcall
inc
es
lods
dec
or
pusha
xchg
enter
mov
and
lods
imul
or
test
add
xor
mov
xlat
aam
adc
pop
fisubrs
inc
pop
icebp
sbb
adc
or
shll
cmp
xor
push
pop
jno
out
mov
push
push
shlb
xor
push
cmp
sbb
inc
xchg
cmp
push
dec
pushf
jl
lds
mov
mov
inc
xor
pop
jg
hlt
std
or
lock
and
push
mov
mov
cli
dec
pusha
mov
xor
sbb
mov
mov
xor
jmp
xchg
xor
out
repz
adc
inc
sub
pop
jae
decb
or
pop
jle
scas
addr16
push
dec
fdivr
out
mov
fidivrl
cmp
dec
int
mov
sbb
cmp
cmpsl
testb
addl
dec
xchg
imul
and
enter
sbb
mov
insb
xchg
in
les
mov
jnp
dec
test
jb
out
lcall
pop
xor
add
repnz
lock
test
fs
pop
adc
jecxz
fs
stos
jmp
xchg
int3
add
iret
je
jbe
inc
cwtl
out
mov
sub
inc
xor
scas
or
addr16
stc
jb
in
cwtl
push
pop
ja
xor
insb
js
and
fsubrp
or
in
sub
addr16
pushf
imul
mov
xor
ja
es
lret
repz
std
jp
ret
daa
mov
lds
in
sub
inc
roll
or
filds
dec
mov
test
inc
ds
fwait
in
xchg
adc
and
jp
add
jno
push
enter
jg
das
jp
jo
call
fstpl
lret
fucomi
cmp
subl
sub
mov
je
into
sti
loop
arpl
inc
add
icebp
aam
add
mov
or
mov
addr16
je
mov
nop
repz
push
test
inc
mov
push
imul
imull
in
imul
movsb
mov
insl
mov
dec
popf
push
sub
movsb
xlat
addr16
cmc
sbb
mulb
pop
lret
adc
movsb
cmp
aaa
rol
mov
test
lock
push
inc
sbb
loopne
out
lock
or
mov
mov
mov
sahf
dec
xchg
dec
xchg
std
fists
xchg
roll
or
dec
adc
adc
mov
hlt
push
mov
jo
or
and
bound
les
mov
std
fmulp
xorb
ljmp
sbb
sbbb
mov
mov
and
ljmp
lret
scas
cmp
pop
icebp
idivl
in
xchg
idivl
mov
pop
mov
lods
push
dec
inc
scas
mov
stc
push
int
repnz
sbb
lahf
sub
sbb
cmp
and
jl
and
mov
shlb
out
cmp
mov
ja
mov
pop
adc
jbe
dec
pop
dec
push
ret
test
int3
push
daa
lret
mov
sub
or
cmc
adc
aam
lret
outsb
call
mov
or
push
lds
dec
movsb
sub
mov
pop
pop
mov
jae
pop
xchg
js
or
incl
js
in
ss
mov
pop
push
pop
flds
or
adc
popf
cmp
mov
jns
jl
pop
add
out
mov
ss
ret
and
es
cmpsl
std
cmp
rolb
ja
and
sub
pushf
and
xchg
xchg
xrelease
inc
cmp
mov
cwtl
jns
shl
imul
push
les
mull
inc
dec
inc
or
push
cld
add
stos
std
arpl
stos
jne
lds
xlat
shll
lret
add
jp
scas
mov
inc
push
repnz
arpl
pop
cmp
out
in
sub
dec
xor
sbb
sub
sub
filds
add
in
or
ds
mov
push
jp
push
mov
mull
dec
sbb
xchg
add
mov
repz
sub
xchg
imul
mov
xor
mov
mov
test
and
lret
shrl
pop
mov
push
les
mov
mov
xor
js
sbb
dec
pop
cwtl
adc
dec
lahf
dec
dec
cmp
stos
nop
pop
pop
mov
add
fldt
ljmp
out
xchg
or
xchg
push
xchg
jns
mov
ja
lret
pusha
je
in
mov
cmp
mov
add
xchg
adc
in
mov
cmp
pop
into
jns
xor
mov
rcrl
js
adc
mov
inc
test
imul
and
lret
add
pextrw
xor
adc
xchg
js
aaa
nopl
fwait
test
adc
add
pop
cmpsl
enter
pop
push
adc
pop
or
jmp
jmp
es
push
push
xchg
mov
roll
mov
push
sbb
pop
mov
xchg
andl
xor
stos
mov
lahf
scas
mov
jne
arpl
ret
xchg
lods
mov
xchg
pop
lock
push
pop
sub
xchg
cwtl
pop
ss
mov
aas
push
pop
push
xchg
push
pop
xor
xchg
clc
lds
test
xlat
jne
push
shlb
lock
push
xor
faddl
cmpsb
divb
dec
dec
cmp
mov
push
aam
xor
icebp
dec
and
bound
add
pop
jp
std
dec
out
cmpsb
xchg
clc
mov
cmp
sarb
jmp
es
in
sub
sub
dec
fnstcw
lea
in
dec
xchg
push
lcall
in
lods
insb
push
mov
jnp
insl
jne
mov
mov
outsl
mov
movsb
scas
and
push
stos
pop
and
fistps
ret
inc
dec
gs
jg
std
fstl
lds
cwtl
mov
cmp
stc
sub
fs
push
push
orb
lret
mov
mov
mov
divl
loope
fxch
fists
iret
jo
pop
mov
push
push
mov
sarl
aaa
fcmovnu
into
jno
and
sbb
mov
xchg
mov
nop
mov
cmp
dec
test
jmp
out
sar
sbb
shll
imulb
lods
test
mov
ds
lods
dec
ljmp
mov
mov
mov
pop
leave
add
adc
and
add
pop
mov
call
mov
js
fiaddl
dec
and
push
and
shll
arpl
fsubl
or
out
lea
jl
xor
imul
loop
jecxz
mov
cltd
push
sub
pop
cmp
jne
mov
icebp
pop
int
xorl
icebp
xor
pop
into
test
fdivl
inc
rcll
mov
into
xchg
fwait
sbb
fidivrl
sub
std
sahf
inc
fsubrs
int
cli
jg
jne
and
mov
push
mov
ljmp
clc
iret
push
pop
test
mov
sarl
jno
mov
shl
sub
jo
movsl
nop
ljmp
adc
out
add
std
dec
and
shlb
xchg
mov
scas
hlt
loop
dec
push
popf
adc
imul
mov
mov
cmp
jo
sub
adc
insl
fistl
fcmovb
pop
aas
aad
divl
and
dec
pop
ret
orb
cs
dec
pushf
mov
in
cltd
mov
cltd
inc
and
mov
insb
jns
fstpl
aaa
push
mov
xchg
fcoms
scas
pcmpeqd
cmp
lock
repz
inc
lods
mov
inc
clc
and
mov
xor
sub
popf
ja
fisttpl
inc
push
sarb
ret
cmpsl
sub
stos
cmp
sahf
pop
inc
dec
sbbb
movsb
mov
xlat
mov
sbb
adc
es
sarl
loopne
das
adc
jg
pop
je
fcompl
imul
stos
mov
ret
sub
cld
loop
push
mov
jnp
push
test
or
test
adc
jb
cltd
mov
sub
fbstp
mov
lock
push
iret
lcall
fcoml
ret
les
xor
sub
stc
enter
iret
inc
pop
pop
cltd
mov
sbb
js
cmpl
mov
sbb
arpl
inc
mov
rcrb
pop
cmp
lahf
jae
in
dec
sub
mov
shll
xor
gs
push
lea
dec
shll
sbb
add
mov
jge
or
add
lret
pop
mov
jae
aas
dec
push
jns
sbb
arpl
in
mov
scas
jp
stc
nop
loope
cli
data16
lcall
movsb
dec
push
push
sbb
call
fadds
inc
call
pop
ret
push
xlat
lods
push
and
loopne
and
mov
and
jnp
movsb
cs
jne
insl
sbbb
push
push
jno
mov
push
adc
das
add
ret
adc
cmp
pop
negb
jge
inc
push
nop
push
sub
ret
xchg
push
stos
lret
mov
cwtl
shll
and
andl
lret
jne
lods
out
and
es
push
adcb
into
dec
mov
shl
pop
adc
outsb
sbb
shl
pop
add
cmp
repnz
jmp
pop
cli
ss
xorb
jg
loopne
rclb
dec
cmpsb
mov
jae
mov
jne
mov
test
shl
jg
pop
loopne
out
adc
xor
xchg
push
movsl
xor
or
outsb
out
std
sbb
sbb
push
push
orl
push
or
test
and
repnz
fists
sti
xlat
push
outsl
dec
cltd
std
lret
dec
and
push
and
mov
ja
push
dec
popf
ret
inc
xor
jne
lods
idiv
insl
push
jno
das
daa
repz
dec
push
xor
pop
cwtl
inc
push
ficomps
sbb
stos
ja
sbb
inc
fstl
test
scas
call
xor
dec
ljmp
lahf
jl
add
rcrl
mov
sub
pop
addr16
lret
pop
out
adc
pop
mov
insl
pop
lahf
sbb
pop
aas
out
fdivrs
leave
pop
rcll
xor
dec
mov
fldenv
and
and
pop
fwait
adc
inc
repz
mov
adc
fcoml
mov
lahf
les
iret
cmp
sbb
aam
cmp
movsb
insl
lock
pop
pop
dec
sub
loope
jl
push
push
clc
stc
xchg
ljmp
and
addr16
jp
fsubrl
inc
jbe
cmp
sbb
movsl
lock
fadd
push
push
jge
add
pop
sahf
cli
lret
and
cmp
mov
jae
cmp
pop
int3
clc
and
sbb
icebp
dec
imul
lock
add
test
shlb
cltd
mov
xchg
data16
aam
jnp
sahf
and
fisubrs
fisubrl
daa
or
fwait
xorb
es
scas
das
out
add
xchg
mov
xchg
push
xchg
xchg
lds
xchg
push
or
mov
insb
cmp
in
jmp
dec
out
repz
pop
fisttps
das
pop
xor
add
or
xchg
inc
xor
or
repz
adc
push
fnsave
rorb
xor
fldt
sub
mov
stc
jns
bound
xchg
inc
push
adc
daa
test
mov
mov
pop
inc
or
sbb
mov
add
pusha
in
pop
arpl
pop
rorb
xchg
sub
or
xor
iret
stos
mov
sub
rcll
inc
das
mov
dec
lock
mov
mov
cmp
or
insl
fisttps
jge
dec
das
in
push
pop
mov
leave
sub
out
fs
push
lock
out
and
dec
fldcw
mov
adc
sbb
out
push
fdivrl
xor
mov
sub
mov
xor
lcall
xchg
mov
testl
repnz
stos
lret
sbb
out
mov
sbb
js
cmp
ja
jae
cs
jno
mov
inc
xor
xchg
adc
xchg
cmpsl
xor
dec
inc
scas
and
adc
rolb
negb
out
push
out
sub
inc
sbb
lret
xchg
in
pusha
lret
mov
cmc
enter
xor
cs
lcall
pushf
stos
loopne
inc
dec
insl
push
push
repnz
ds
je
std
cmp
fwait
xchg
fstsw
push
mov
mov
loop
gs
push
push
mov
shlb
les
into
cmp
nop
push
adc
mov
movsb
lods
mov
clc
mov
cmp
ret
ljmp
dec
mov
fdivl
and
mov
out
mov
hlt
sar
adc
jmp
pop
out
pop
pop
std
or
sbb
jge
dec
jae
cli
xor
sub
bound
push
mov
inc
dec
xchg
mov
fwait
sbb
adc
cmpsl
out
arpl
mov
xlat
pop
pop
sti
ret
iret
inc
mov
lcall
addl
push
cmpsl
pop
xchg
mov
lahf
scas
aas
pop
dec
mov
mov
mov
shll
test
lods
dec
lahf
cmpsb
pop
and
pop
xchg
fiadds
imull
cmp
push
lods
mov
outsl
and
rorb
push
rol
push
popa
lea
sahf
inc
insb
or
fidivrl
scas
xor
or
ss
jecxz
push
adc
jecxz
pop
ret
clc
lea
dec
push
jge
shr
test
lock
popf
mov
enter
addr16
xchg
or
pop
lods
bound
sub
movntps
sub
aas
lcall
into
fs
inc
add
test
ds
in
js
in
mov
orl
repz
fs
xchg
add
cwtl
repnz
loop
xchg
repnz
inc
add
fdivs
movsb
dec
mov
xchg
mov
lods
sahf
rolb
pop
and
rolb
enter
mov
sti
jno
pop
lea
mov
push
mov
insb
jbe
out
xchg
mov
popf
and
xchg
lret
repz
adc
jb
lret
inc
aad
dec
stos
and
out
dec
xchg
pop
pop
add
dec
add
test
outsb
add
sub
scas
je
push
mov
bound
sub
out
pushf
dec
and
sbb
ss
pop
dec
inc
mov
int3
cmp
xchg
mov
fldt
inc
data16
mov
iret
shlb
adc
mov
out
adc
cwtl
mov
add
cmp
adc
push
xchg
fwait
xchg
ds
cmp
and
add
and
adc
mov
popf
cwtl
test
jno
mov
sbb
xchg
fucomp
cwtl
dec
jge
repnz
dec
and
sub
pushf
out
add
loopne
pushf
jns
stos
sarb
in
fwait
cmp
repz
cmpsb
movsl
fisttpll
inc
addr16
out
push
jmp
insb
push
test
test
cmp
aam
xchg
daa
into
adc
mov
js
das
mov
es
jg
popf
cmp
lret
je
in
ja
pop
pop
decb
sarl
outsl
test
cmp
lods
test
and
data16
jmp
popf
xor
inc
lahf
mov
ficoml
xchg
outsb
in
jecxz
inc
loope
mov
mov
add
sbbl
insb
shll
mov
scas
sub
sub
jp
jmp
jb
mov
or
inc
aam
or
or
mov
loop
out
nop
in
mov
fs
loop
or
das
les
mov
lahf
mov
js
hlt
ds
ret
lock
sbb
out
cmp
pop
pop
sbb
mov
gs
sub
test
pop
and
ret
std
mov
sub
and
dec
js
inc
test
jb,pn
push
lds
pop
dec
xor
jae
je
ret
jg
lahf
iret
mov
or
lcall
mov
dec
jecxz
add
mov
push
rcll
roll
testb
jbe
pop
push
js
test
push
aad
xor
mov
lret
mov
push
dec
push
outsl
fbstp
jb
adc
mov
in
sub
mov
inc
or
fistl
sub
dec
outsb
push
jnp
mov
clc
pop
pop
xor
lods
je
mov
adc
mov
ja
sbb
iret
push
ljmp
out
jnp
lret
inc
pop
push
push
movsb
cmp
lcall
push
mov
jecxz
je
adc
xor
cli
insl
jp
xor
decl
lret
hlt
dec
push
mov
cs
or
push
sub
xor
xchg
stos
fists
push
sub
cld
aaa
and
cmp
jge
cltd
jmp
popf
mov
push
sbb
dec
imul
out
jne
rcrl
inc
stc
pop
xchg
mov
test
xor
jno
mov
in
test
test
inc
inc
cmp
lock
stos
xchg
stc
mov
add
pushf
pop
add
dec
pop
sbb
lahf
scas
lcall
and
cld
fs
shrl
and
nop
or
pusha
lahf
cmp
add
rcrl
repz
ret
adc
pop
mov
inc
jle
pop
pop
repz
adc
jno
jmp
push
loope
and
add
inc
dec
jno
push
and
xor
mov
pop
aam
xor
push
ror
push
lds
cmpb
pop
mov
mov
push
testl
mov
dec
adc
movsl
cwtl
and
sub
daa
loop
jne
dec
daa
dec
fcomi
arpl
inc
dec
aam
adc
push
movsb
into
add
sbb
mov
pop
sbb
jnp
xor
mov
cmp
test
cltd
inc
sti
jle
lcall
jecxz
pop
fsubs
cmp
and
mov
cwtl
mov
std
cmc
push
ret
mov
push
xor
xor
out
push
inc
testl
mov
cs
sub
cs
xchg
jmp
xor
pop
jnp
adc
stos
dec
mov
rol
sbb
imul
cwtl
jecxz
dec
mov
pusha
pusha
jecxz
int
fs
lahf
int3
sub
mov
or
ret
std
outsl
push
aad
clc
jge
mov
jns
or
gs
mov
ss
push
push
lea
rorb
fdivl
sar
sub
cmpsb
xlat
mov
iret
inc
fdivr
loop
and
dec
add
or
or
push
dec
imul
mov
and
cld
sbb
mov
sub
xor
int3
push
xor
scas
push
jge
xchg
sbb
sarb
ret
adc
sbb
xchg
and
xchg
mov
xor
sahf
fisubs
xchg
ljmp
xchg
sahf
imul
pop
cmp
iret
outsb
cmpsl
ss
or
sbb
mov
mov
out
mov
push
inc
fmull
outsl
shll
call
inc
mov
xor
pop
add
inc
xchg
mov
nop
xchg
lock
mov
adc
pop
and
lret
jle
scas
flds
shlb
and
xor
xchg
cmc
add
and
add
gs
ds
pop
xor
pop
mov
sti
pop
inc
scas
and
push
out
push
sub
fwait
pop
push
push
out
outsb
xchg
inc
filds
add
dec
rorl
fnsave
pushf
repz
frstor
sbbb
xchg
inc
xor
mov
xchg
int
fs
pop
pop
rcll
adc
mov
ljmp
cmpsb
sti
mov
jge
sbb
insb
xor
cmp
loopne
mov
hlt
mov
insb
xlat
mov
rorl
and
cmp
je
adc
dec
sbb
add
xchg
dec
stc
and
adc
jo
pop
sahf
inc
gs
add
mov
repz
mov
insl
add
mov
push
ds
mov
lret
mov
pushf
aad
imul
sub
mov
or
js
out
dec
inc
cmc
js
sub
xchg
pop
xchg
push
dec
push
jge
int
jge
adc
mov
push
mov
sbb
or
mov
mov
mov
pop
cmp
and
jp
cld
pop
out
mov
leave
lds
jnp
mov
sbb
addr16
cltd
inc
push
sub
mov
push
insb
jge
mov
xchg
sbb
fstps
int3
or
enter
in
mov
shrb
pop
sbb
mov
or
and
movsb
fisttpll
loope
cld
add
into
pop
pop
hlt
fs
sbbb
sahf
ret
daa
or
in
or
mov
pop
jl
jl,pn
cmp
jle
adcl
shll
aad
sub
pop
cli
push
jle
sbb
jmp
jb
aaa
mov
test
mov
sub
sbb
das
aas
or
out
xlat
pop
xchg
fisubrl
jbe
pop
data16
cmpsl
stos
iret
jne
xchg
sub
push
mov
mov
jno
pop
and
cmp
adc
xor
cmp
popa
or
add
inc
and
sbb
mov
xchg
dec
in
pusha
aad
sbb
test
jns
cmp
test
insb
add
rorl
or
leave
push
inc
pop
popa
fmuls
iret
lahf
mov
arpl
push
imul
xchg
jnp
push
mov
sub
or
dec
stos
xchg
ja
movsl
pop
pop
mov
cmp
insb
sub
xor
addr16
stos
mov
pop
add
dec
xchg
cli
lea
into
movsbl
push
jp
push
push
push
in
cmc
mov
xlat
cmp
call
mov
test
xorl
imul
mov
mov
pop
inc
sbb
adc
sub
inc
sbb
cmp
push
scas
out
mov
lods
ds
sub
add
jl
jg
cld
arpl
sahf
add
dec
popa
push
fmull
insb
leave
daa
mov
mov
push
sarl
xchg
enter
and
jg
scas
fst
pusha
out
aas
jb
and
sarb
je
inc
out
mov
mov
or
cwtl
out
xchg
insb
xor
jge
push
xor
movsl
pop
or
pop
outsl
int3
and
fisttps
pop
ret
insl
jb
lea
or
push
leave
sub
in
scas
or
movsb
enter
mov
xor
lret
ficompl
xorb
sbb
cld
push
xchg
int
sub
inc
xlat
scas
cmc
push
lods
mov
ror
cmp
out
or
pop
cmp
repz
mov
stc
getsec
cmp
ljmp
leave
gs
cmp
jb
mov
xor
insl
ficoms
les
jns
mov
mov
fcmovu
xchg
and
outsb
test
lret
aas
outsb
cmp
fistl
push
dec
fidivrs
imul
mov
mov
daa
cli
inc
ja
iret
mov
lret
movsl
ss
xor
clc
jmp
mov
jne
inc
mov
add
inc
stos
inc
xor
pop
sbbl
enter
movsb
shr
cmp
fs
and
enter
test
inc
xchg
loopne
push
and
call
mov
sarb
push
test
sbb
enter
xor
or
in
jns
pop
xor
popa
ljmp
sahf
push
sub
dec
outsb
scas
repz
pop
ret
adc
dec
sbb
push
stc
jmp
push
pop
fcomp
call
xchg
movsl
xorl
xchg
xor
mov
inc
add
into
cs
aad
cmp
mov
dec
jl
inc
das
jae
cmpsb
cmp
push
inc
jno
test
and
mov
sub
push
jnp
ret
stos
sub
lcall
icebp
xor
or
xchg
or
sbb
push
mov
xor
xchg
daa
sub
xor
push
dec
push
fcmovu
push
xchg
xchg
jnp
loopne
stc
popa
pop
addb
daa
and
outsb
pop
xor
xor
out
dec
dec
imull
loopne
xchg
mov
fistpl
jne
mov
iret
mov
lea
inc
inc
icebp
inc
int
add
out
dec
xchg
popa
leave
aam
nop
sub
repz
stc
jge
into
adc
sub
lds
dec
loopne
cmp
test
xchg
cmp
lock
mov
xor
test
scas
hlt
xchg
push
push
imul
push
daa
or
inc
fs
jge
mov
push
add
inc
cli
push
mov
stc
pop
or
std
test
push
cli
cmp
lret
movsl
inc
ss
or
adc
mov
and
xchg
xor
sub
in
mov
xor
inc
sti
and
and
adcl
jmp
mov
mov
cmpsb
cmpsl
cmp
pop
jg
mov
test
and
push
pop
stos
and
test
pop
jmp
or
mov
js
pop
dec
inc
xchg
std
andl
lret
ret
in
jnp
cmpsl
inc
loopne
cmc
loopne
cmp
fwait
aad
mov
and
and
mov
inc
mov
xor
inc
incl
call
mov
xchg
out
movsl
xor
ljmp
fsubl
sbb
dec
jae
xor
cmp
enter
sbb
adc
push
lahf
pop
subb
adc
cs
adc
or
xor
into
fwait
int3
push
push
fwait
cmpsb
cmp
xchg
mov
sbb
subb
imul
inc
inc
mov
add
ja
jo
or
test
aaa
rolb
and
pop
adc
testl
lock
rcl
enter
repz
jp
shll
mov
xor
pop
pop
xchg
repz
inc
pop
outsl
leave
xchg
sbb
negl
mov
xchg
and
mov
sbb
repz
ljmp
add
jecxz
dec
stos
sarl
inc
inc
push
sbbl
out
xchg
cmp
push
adc
xchg
cmp
sahf
popa
mov
cmpsl
stos
jg
lods
dec
inc
clc
loop
mov
inc
add
outsb
lret
add
daa
lods
cmp
mov
sbb
inc
push
xchg
dec
mov
cmp
mov
xchg
xchg
int
push
loopne
es
add
movsb
add
adc
iret
jp
lahf
loope
xor
jle
loope
jbe
fidivs
cld
test
testb
stc
xchg
push
cmp
mov
mov
sarl
daa
dec
push
cmp
arpl
push
push
sub
aas
shll
sbb
inc
pop
fldt
leave
push
and
mov
jb
lar
fadds
lret
sbb
lock
pop
outsb
idivl
mov
xchg
pop
sbb
cmp
mov
sub
xor
fistps
scas
imul
hlt
cmp
lds
ljmp
fwait
jnp
in
ss
dec
ret
gs
and
push
cmp
out
push
pop
daa
test
adc
test
outsl
and
mov
adc
xchg
mov
or
mov
add
test
xor
mov
sbb
xchg
rol
cmpb
test
dec
pop
push
repz
or
mov
fcmovb
fsubrl
scas
daa
cmp
pop
enter
pop
stos
fimull
int
sub
inc
mov
mov
lea
push
push
and
dec
fisttpl
jns
mov
inc
fiadds
mov
fidivl
cmp
cmp
xor
das
lods
jmp
and
int3
jl
pop
ljmp
adc
mov
enter
mov
call
mov
mov
leave
mov
mov
ror
dec
mov
je
dec
rcrl
rcrl
jbe
jb
mov
xor
pop
imul
decl
fdivrp
jecxz
stos
roll
cltd
add
mov
xchg
mov
loop
sbb
and
xor
push
mov
pop
pop
out
xchg
xchg
push
rcl
or
add
jbe
in
mov
fs
fsubrl
in
stc
or
pop
inc
sti
mov
ficompl
stos
sbb
ret
pop
push
icebp
pop
and
stos
aas
fs
call
shll
fs
sbb
xchg
cmpsb
cmp
or
cmp
cld
sub
push
jmp
mov
xchg
pop
imul
push
decb
mov
fwait
subl
leave
das
popf
pushf
addr16
xchg
fistpl
mov
test
sub
cwtl
pop
data16
cmp
add
pushf
sub
or
mov
mov
push
sbb
sbb
or
mov
mov
push
add
mov
out
rcrl
adc
push
jbe
mov
push
sub
cmc
jno
mov
push
jl
subb
test
movsl
test
repnz
into
lods
int3
int
mov
ljmp
gs
pop
test
lret
and
in
stos
mov
pop
loope
xchg
sti
sarb
sbb
sub
in
loop
loope
xchg
xor
sub
adc
and
dec
in
popf
sub
dec
cld
pushaw
fistps
mov
jo
dec
and
cmp
jle
sbb
push
into
push
xchg
shlb
jne
ss
mov
jge
push
adc
pop
roll
jne
lods
adcl
jne
jmp
call
mov
or
pusha
loopne
imul
lock
mov
out
fildl
add
lods
xchg
aad
cmp
fildl
jo
mov
into
jg
mov
std
add
mov
jge
push
rcl
mov
nop
shl
xor
jbe
jg
mov
orb
adc
std
cs
xor
jb
jne
rol
inc
adc
fisubs
push
pusha
and
shlb
sahf
xor
movsb
jle
jb
xor
in
sub
mov
jle
pop
sti
shlb
loop
sbbl
dec
or
dec
in
lea
inc
in
push
dec
cwtl
hlt
lret
jb
lock
xor
adc
loop
xor
inc
popf
popf
adc
clc
mov
jg
xor
jae
xchg
push
imul
adc
movsl
pop
mov
xchg
pop
or
add
mov
cs
sbb
mov
mov
pushf
jno
out
jl
cmp
in
add
cmpsl
mov
dec
mov
ret
out
iret
push
jne
sbb
outsl
ss
stos
int3
test
xchg
ja
mov
mov
jb
sbb
imulb
cmc
shl
mov
orl
push
dec
inc
lea
loope
xchg
mov
lds
fisubrl
imul
lea
out
or
iret
or
dec
call
das
in
xor
jne
mov
mov
jl
sub
push
cmp
es
cli
mov
repnz
cld
cmc
add
enter
dec
push
adc
aam
xchg
enter
dec
xor
aad
xorb
mov
lds
gs
or
std
fbld
inc
adc
xchg
push
xchg
lret
mov
push
or
inc
jecxz
stc
int3
inc
scas
sahf
lods
xor
pushf
rcrb
popa
xor
lods
icebp
dec
shll
insb
mov
in
js
sub
and
ficomps
xor
xchg
sub
xchg
mov
int3
lret
dec
jbe
xchg
je
and
sbb
jmp
jno
cmp
inc
sahf
mov
mov
xor
shrl
dec
xchg
aad
aaa
or
xchg
xchg
add
inc
leave
in
sti
faddl
aas
xor
iret
mov
out
or
mov
xor
and
cli
outsl
mov
jle
fcoml
and
jl
andl
jg
cld
sub
mov
lock
pop
dec
out
ljmp
adc
lock
cmpb
cmp
sti
jecxz
addr16
std
lret
mov
lcall
cmc
push
bnd
push
xchg
pop
jne
push
sbb
mov
insb
jge
pushf
or
out
daa
mov
jl
jmp
sub
dec
icebp
inc
mov
out
and
call
mov
call
sahf
inc
inc
shl
aam
imul
xor
cmpsb
add
jl
sbb
test
dec
add
lods
push
sar
jno
mov
fcoml
dec
cltd
and
outsl
adc
adc
sub
xchg
mov
sbb
aam
and
adc
sub
xchg
inc
mov
test
pop
jo
jecxz
dec
xchg
aaa
pop
mov
and
movsb
aad
lahf
lret
aaa
dec
in
movsl
lds
fwait
mov
aad
leave
cmp
jb
sbb
clc
mov
arpl
mov
icebp
adc
cwtl
das
mov
inc
je
jmp
push
popf
test
push
idivl
mov
int
add
nop
pop
xchg
test
lahf
cmp
fs
pusha
movsb
gs
jns
pusha
pop
lods
in
cmpb
inc
pop
mov
add
arpl
scas
push
xlat
push
outsl
ret
push
xchg
dec
lcall
dec
imul
pop
push
in
dec
sub
or
mov
xorl
push
xlat
aas
bound
out
ja
and
fstl
mov
hlt
push
les
mov
lea
inc
mov
mov
fldt
repnz
cmp
lahf
sub
adc
mov
cmp
push
xor
arpl
out
jmp
mov
push
cmp
das
dec
lock
push
and
dec
adc
inc
addr16
lahf
xchg
cmp
mov
or
push
test
jbe
pop
adc
lock
rclb
aaa
fcomi
das
or
jg
stos
jne
sbb
or
in
add
popf
cmc
jnp
push
pop
aad
xchg
aad
fwait
inc
cmp
aaa
push
or
push
and
gs
sub
lret
loopne
mov
xor
filds
xchg
cld
pop
jbe,pt
bound
out
mov
mov
mov
or
hlt
repz
out
push
pop
jg
fdivs
iret
cmp
hlt
call
mov
iret
add
dec
cwtl
cmp
mov
pop
outsb
mov
out
adc
dec
std
movsl
and
loope
mov
pop
data16
loop
cmp
subb
jo
push
xor
push
int
inc
cmp
fmull
fs
lret
push
lods
in
cmp
fwait
inc
adc
cmpsb
popa
xchg
push
pop
inc
in
jno
lret
jle
mov
push
imul
call
out
movsl
mov
jb
inc
movb
jbe
mov
mov
ss
sbb
inc
ret
gs
sub
sbb
jmp
scas
dec
push
jmp
cld
push
push
push
or
and
fdivrl
mov
fdivp
sub
daa
fwait
mov
cmpsl
call
fistpll
fwait
stos
sub
into
add
not
and
mov
adc
sbb
mov
mov
hlt
fisttpll
jge
test
pushf
sub
xor
rorb
add
sbb
sbb
in
loope
and
orb
test
push
idivb
adc
int3
jmp
daa
inc
fsubrl
ds
sbb
jmp
push
mov
xor
jne
jnp
inc
test
hlt
add
test
mov
dec
test
orl
xchg
negl
inc
into
ret
push
sbb
es
jbe
imul
add
or
stos
cmp
xchg
jmp
mov
cli
shlb
or
fcom
roll
out
xchg
push
xlat
cmc
and
add
xor
add
call
sbb
push
mov
out
popf
mov
or
icebp
sarl
or
adc
andb
push
shl
fcmovnb
mov
pop
mov
mov
mov
jl
cmp
shl
and
dec
mov
xchg
sub
aaa
pop
adc
test
rcrb
push
push
cltd
repz
imul
push
cld
movsb
add
orb
movsb
mov
mov
add
out
lahf
and
jle
jo
inc
in
notl
mov
sub
jp
in
pushf
iret
rcrl
push
fisubrs
sti
cmc
add
sahf
xor
inc
xchg
inc
xlat
cmp
pop
pop
cld
insb
rol
cwtl
xor
nop
enter
out
adc
inc
add
pop
and
jnp
xchg
repz
sbb
push
and
xchg
sbb
sti
jae
inc
push
adc
shr
sbb
mov
xchg
sbb
sbb
sbb
imul
mov
divl
xor
lea
jo
js
mov
in
jno
add
fildl
push
cmc
jb
lret
testl
xor
test
ret
inc
xchg
xchg
xchg
movsb
jle
and
push
adc
call
pop
inc
cmp
sbb
xor
mov
cmp
jbe
sbb
sbb
imul
mov
test
lret
mov
ljmp
inc
pop
arpl
mov
xor
jp
sbb
mov
jns
xor
sbb
lea
pop
xchg
ds
push
sbb
js
insl
sti
pusha
pop
movsb
cltd
divb
cmpsb
aas
test
loope
or
lret
add
inc
lds
cmp
lods
mov
jmp
enter
pop
xchg
dec
in
add
mov
mov
mov
ret
ret
mov
cmpsl
xchg
mov
adc
cmc
pop
inc
sti
pop
fcoms
adc
fldl
pop
inc
push
sbb
add
dec
shll
pop
test
in
and
js
enter
pop
les
insl
fs
scas
jmp
out
popa
aas
fildll
mov
cmp
jle
lods
dec
or
jg
scas
sub
adc
js
addb
lods
lods
jl
nop
pop
push
in
mov
outsl
sbb
mov
in
aas
out
js
call
cmc
shr
add
inc
xchg
jno
mov
mov
stc
add
cmpsb
dec
insb
and
decb
pusha
and
pop
lock
xchg
xor
mov
dec
push
mov
mov
cmpsb
insl
into
dec
aad
popa
pop
xor
lcall
mov
push
sarb
scas
sbb
shrl
pusha
mov
jbe
dec
cmc
repz
sub
mov
sub
fstl
ljmp
or
lea
push
or
das
sub
dec
out
insl
sub
insl
jle
and
fistps
push
add
sub
hlt
mov
and
lds
enter
sub
dec
movsl
mov
fucomip
jp
daa
stc
dec
out
xor
xor
cmc
mov
leave
adc
fcomps
out
push
jp
pop
or
addl
fnstsw
mov
lahf
add
in
mov
inc
dec
inc
std
loopne
jns
cmp
and
je
ja
dec
dec
jmp
aad
cmp
aas
push
mull
xor
adc
mov
enter
lcall
adc
pop
mov
js
clc
aaa
aam
pop
dec
mov
and
cmp
ret
test
in
xor
lret
mov
mov
push
cmp
insb
jle
call
pop
sub
fildl
bound
cld
dec
mov
cld
jae
xor
xchg
lea
das
mov
aam
mov
mull
mov
fimuls
fisubl
xor
test
add
pusha
movsl
sub
test
inc
out
mov
lret
sbb
add
adc
ds
xchg
pusha
into
mov
mov
icebp
pop
stc
stc
enter
add
sub
test
fs
lea
xchg
jle
fsubrs
sub
mov
jmp
ret
mov
mov
xchg
in
in
repnz
push
mov
jmp
xorl
sahf
dec
rep
jo
adc
mov
and
daa
pop
ss
dec
mov
cmpsb
into
lods
mov
jle
or
fstpt
push
mov
jae
jbe
lods
sub
dec
ds
les
mov
data16
mov
stos
add
arpl
cld
cmp
adc
push
aas
test
aas
test
xchg
arpl
iret
push
data16
or
mov
aas
icebp
jp
bound
inc
dec
mov
xchg
subl
cmp
pusha
nop
xor
inc
pop
mov
mov
mov
movsl
cmpxchg
enter
outsl
cmc
jle
lea
adc
mov
xchg
inc
mov
insl
jmp
orb
in
sbb
and
test
mov
data16
sub
insl
add
sub
orl
pop
aad
dec
pop
xchg
sub
xchg
into
pop
cmpsb
sbb
add
adc
dec
xchg
sub
cmpsb
lock
aam
adcl
xchg
testl
inc
sbb
adc
gs
or
cld
ss
in
mov
lcall
xchg
dec
out
cwtl
and
xchg
mov
aaa
xor
push
mov
push
jmp
inc
mov
and
lds
cmp
push
push
daa
jle
mov
push
movsb
xchg
std
pop
push
mov
cmp
sahf
pop
test
pop
pop
inc
cltd
xor
test
mov
sbb
mov
add
mov
add
sbb
stos
xchg
mov
push
mov
push
jl
sub
sub
js
gs
mov
push
cmpsl
test
mov
jae
adc
adcl
mov
pop
pop
inc
adc
add
xor
jnp
outsl
sbb
mov
lret
fsubrs
adcl
inc
shll
and
adc
push
dec
stos
adc
push
ljmp
aad
hlt
dec
ucomiss
sub
nop
dec
sub
negb
jb
dec
jo
sbb
arpl
inc
xchg
inc
stc
xchg
sbb
nop
dec
pop
mov
data16
test
fst
xchg
aaa
aas
mov
addr16
iret
jmp
or
xchg
jbe
xchg
mov
sbbb
mov
mov
insl
popa
push
fxtract
sbb
icebp
adc
cmp
loop
popa
push
adc
jae
cwtl
in
adc
mov
or
cmp
subb
dec
cmp
int3
cmp
cmp
movsl
cltd
mov
stc
xor
cmpsb
dec
push
sbb
xor
pop
fstpt
dec
dec
inc
xchg
enter
mov
sbb
lahf
pusha
lock
std
push
sbb
lods
testb
sbb
mov
mov
pop
insb
sbb
dec
sbb
je
pop
jno
rcrb
add
ja
mov
shrb
xchg
add
cs
mov
movsb
in
pop
push
mov
add
or
push
daa
mov
and
add
hlt
aas
lcall
clc
sub
dec
jge
and
nop
inc
arpl
and
outsb
idivb
xor
mov
in
idivl
inc
arpl
lret
dec
pop
iret
clc
and
rcrl
hlt
inc
roll
push
mov
stos
sub
imul
sub
popf
add
dec
dec
push
shll
inc
sarb
imul
pop
pop
test
aas
lea
xor
cltd
shr
mov
mov
add
pusha
and
ficoms
push
out
repnz
dec
add
cmp
push
mov
push
in
mov
mov
push
mov
add
into
testl
pop
fcmovnb
cmp
clc
cwtl
in
sbb
scas
jp
scas
andb
lahf
nop
xchg
dec
inc
sub
pushl
cmovo
ss
notb
sahf
loopne
roll
adc
mov
inc
inc
gs
mov
mov
xor
cs
popf
loopne
ds
pop
iret
mov
sbb
aad
stos
jne
jg
lcall
sti
jecxz
icebp
pusha
adcb
jae
rclb
sub
sub
pop
loope
cli
movsb
nop
enter
pop
pop
icebp
leave
pushf
clc
fs
pop
clc
movsb
or
idivl
aam
imul
ret
sbb
mov
cmp
in
cmp
sub
add
push
in
or
fistpll
xchg
sbb
ss
imul
adc
outsb
out
aad
or
mov
js
fld
out
into
and
push
cld
cmpsb
mov
mov
fcompl
and
imulb
add
pop
pop
std
shlb
inc
cmp
sbb
sti
fwait
repz
test
inc
inc
jmp
hlt
test
mov
shrl
jge
shll
movsl
adc
int
cmp
push
inc
mov
jl
imul
sbb
mov
enter
jmp
xchg
movsl
lahf
jbe
mov
dec
mov
mov
push
jo
sub
and
jg
push
pushf
adc
cwtl
aad
les
add
addr16
adc
push
pop
sbb
in
pop
rcll
inc
fcom
and
mov
xchg
enter
jge
inc
mov
jne
fcoms
inc
xor
mov
mov
aad
cmp
sub
stc
in
arpl
out
ljmp
mov
adc
add
addr16
and
dec
addb
cld
and
mov
arpl
leave
ret
pop
repz
mov
sbb
mov
ret
push
cld
or
ret
out
stc
aas
cs
jge
das
sar
adc
data16
or
test
push
xor
or
dec
les
push
std
andb
jb
fwait
lods
mov
aam
fwait
popf
sbb
stos
lret
xchg
stos
xchg
mov
pusha
mov
jne
shll
fisttpll
loope
lea
xchg
xchg
jp
hlt
insb
sub
fcoml
je
push
sub
sub
test
aad
pop
mov
movl
push
cmp
mov
or
lods
dec
je
xchg
xor
in
mov
jb
loopne
push
das
cmp
clc
lods
mov
mov
lds
jno
jge
dec
fbld
jp
add
std
xchg
aad
mov
test
xor
dec
xchg
xor
popa
cwtl
jno
and
push
xchg
insl
add
clc
cwtl
je
xor
add
aam
xor
rcll
test
popa
xor
paddsw
sbb
cmc
outsb
add
push
mov
pushf
xor
outsb
push
stos
imul
cmp
pop
mov
fldl
mov
sarl
data16
push
stos
jo
push
aad
mov
addr16
adcb
testl
jb
push
pop
pop
insb
mov
pop
add
lods
neg
or
in
mov
andb
sub
mov
adc
je
sahf
fisubl
xor
add
and
rcll
mov
sub
mov
cmp
aaa
popa
cli
popa
enter
add
pop
fsub
insb
lahf
or
sbb
outsb
dec
imull
mov
push
adc
stos
add
add
cmp
pop
in
or
fcmovnbe
sahf
imul
sti
xchg
pop
pop
rcrl
push
js
iret
or
inc
pop
mov
into
out
sub
sbb
xchg
aas
icebp
pop
lods
lcall
in
das
add
pmullw
test
mull
es
ret
xchg
cmpsl
scas
jb
inc
push
xchg
cli
ss
push
dec
lret
pop
repz
lock
fcoml
dec
sub
xor
dec
and
sar
fldl
dec
or
pop
aam
pop
add
and
xor
lcall
fimull
push
xchg
out
mull
scas
rolb
sub
insl
pusha
push
push
mov
in
repz
aam
mov
lahf
adcb
outsb
int3
mov
inc
push
pusha
push
cmp
pop
push
cmpl
add
movsb
loope
les
je
into
push
test
xchg
cmpl
iret
pop
out
xor
sbb
int
mov
or
arpl
jge
cmp
or
out
in
cmpsb
loop
jg
ret
pop
stos
test
outsb
rorl
xchg
and
jle
mov
pop
test
scas
testl
in
lret
cwtl
cwtl
ret
fbstp
pop
loopne
int3
inc
push
lock
add
adc
rorl
mov
or
shl
pop
jo
or
fs
mov
fists
inc
add
pusha
inc
lea
pusha
jmp
icebp
mov
inc
cmp
sub
stc
pop
sbb
cmpsl
and
out
insb
jp
mov
aas
cmp
pop
loope
mov
mov
pushf
cmpb
fldenv
fisubrs
xor
cmp
jl
loop
mov
push
adc
ljmp
inc
push
inc
shlb
subl
xor
shl
or
inc
xchg
mov
pop
xchg
lods
push
enter
dec
mov
repz
jbe
sbb
aad
mov
insl
jno
imul
push
cmp
sbb
xchg
push
and
adc
aam
cmp
xor
sbb
pop
sbb
dec
inc
sbb
push
aam
movsb
mov
xlat
push
xchg
lretw
test
push
insl
test
xchg
ljmp
outsl
fcomps
lea
sbb
push
push
mov
or
inc
sbb
or
ficompl
sub
xor
test
repnz
push
and
in
cmp
dec
out
cmp
test
push
rorb
push
in
adc
dec
cwtl
mov
jns
mov
sbb
mov
imul
pop
add
mov
aaa
loop
inc
dec
outsb
inc
aas
pusha
enter
mov
and
pop
jecxz
movsb
es
ss
insl
pop
push
test
paddw
cs
add
mov
lods
inc
nop
into
mov
loope
sub
adc
js
imul
mov
repnz
ret
xor
outsl
pop
xorl
and
ljmp
mov
xor
pop
mov
and
mov
das
into
cmpsl
mov
and
dec
xchg
test
push
imul
jae
lret
or
sub
repz
les
lods
lahf
sub
jle
mov
cli
inc
mov
lret
xchg
imul
sbb
pop
loopne
jg
cmpsl
jns
out
lods
addl
adc
insl
xlat
and
push
call
ftst
imul
outsb
scas
aas
xchg
sahf
push
push
enter
mov
xchg
mov
aam
push
shll
mov
adc
sbb
stos
xor
sub
xor
jle
mov
jl
std
mov
push
rcrb
jne
fldt
or
sbb
mov
lcall
jo
fs
cmp
push
sti
les
fcompl
sub
xor
push
or
test
iret
lds
and
and
out
idivl
seta
call
fidivs
sub
jmp
add
mov
push
sub
and
mov
xorb
fdivl
imulb
jmp
mov
pop
inc
pop
inc
fs
pop
add
lock
pop
cmpsl
jmp
cmp
adc
jge
das
jno
sbb
push
lret
lods
jae
mov
idivl
and
bnd
out
inc
in
fdivrl
in
out
orl
xor
pop
lahf
mov
shlb
xor
mov
rorl
rcrb
xor
xchg
push
push
ss
cli
inc
adc
sub
and
adc
xchg
push
xor
ja
aad
popa
cmp
add
aam
inc
jne
jge
arpl
sub
mov
push
mov
mov
cmc
mov
add
sbb
adc
xchg
roll
aaa
cmp
mov
sub
test
call
addr16
add
repnz
mov
loopne
cmp
fcomps
cmp
jbe
mov
adc
rol
stos
stc
call
mov
int3
out
and
and
stc
and
clc
adc
fdiv
test
stc
mov
dec
aam
mov
sbb
jo
dec
mov
xor
cmp
rcll
nop
push
cmpsl
fiadds
dec
mov
rcrb
mov
or
cltd
pushf
subl
cmp
or
adc
mov
push
shlb
lds
test
or
in
lret
adc
rep
sub
mov
sbb
inc
sub
xor
pop
mov
mov
es
pop
jl
mov
orb
cmpsb
jns
out
in
lock
xchg
jbe
mov
test
sub
xor
hlt
dec
outsl
inc
or
push
push
pop
mov
fdivp
daa
add
sbb
cltd
inc
dec
xor
xchg
and
cld
imul
dec
lret
push
scas
popf
out
add
xor
hlt
or
mov
push
mov
mov
mov
arpl
pop
scas
repz
jb
call
push
xor
mov
popf
into
aas
push
dec
in
xor
mov
pushf
icebp
outsl
mov
fistl
mov
push
jb
clc
call
or
es
je
sti
pop
push
addr16
xor
je
xor
sbb
mov
add
sub
sahf
pop
xorl
rclb
cmpsl
mov
stos
mov
sbb
mov
fcomi
mov
movsl
sbb
mov
test
push
mov
rcll
inc
addr16
xor
dec
push
mov
and
cld
test
aaa
daa
loopne
xchg
push
gs
adc
data16
pop
cltd
nop
int3
fnsave
xor
xor
sbb
pop
call
adcl
das
ret
movsb
popf
xchg
dec
data16
fcom
in
cli
mov
xrelease
xchg
push
mov
out
aas
out
adc
or
mov
or
stc
cmp
call
cltd
cmpsl
gs
cltd
dec
out
xchg
dec
inc
inc
jl
sbb
or
push
pop
loop
sbb
mov
into
das
out
ja
jne
insl
sub
ds
cmp
stos
xchg
xor
iret
cld
pop
cmp
inc
cmpsl
pop
sub
dec
dec
loopne
es
xchg
cmpsl
mov
xor
jle
mov
lahf
push
bound
xor
adc
pop
mov
btr
sarl
repnz
mov
mov
loop
push
iret
mov
pusha
dec
add
popa
outsb
and
push
push
mov
cltd
out
xor
mov
sub
xchg
jecxz
rclb
lret
je
sbb
rcl
ret
mov
pop
pop
rcrl
xchg
rorl
inc
inc
cmp
lret
rcrl
cmp
les
cwtl
inc
mov
mov
mov
dec
lcall
rcll
or
mov
push
pop
insb
mov
adc
jecxz
sbb
pop
cmp
mov
int3
fs
inc
mov
fistps
dec
fstpt
adc
xor
lock
add
in
xchg
sub
stos
ret
xchg
test
pop
arpl
clc
fprem
cmp
loopne
sbb
fstps
mov
movsl
bnd
mov
shlb
call
cmpsb
xor
adc
adc
popa
or
fimuls
loope
mov
mov
inc
lock
fildl
and
add
or
shl
jl
pop
jge
out
sub
out
sbb
mov
imul
and
lds
fbld
and
pop
clc
pusha
out
mov
mov
test
mov
xor
inc
jl
push
mov
jo
pop
icebp
push
aad
xor
aaa
repnz
mov
jno
cmpsl
mov
pop
arpl
shll
dec
mov
jl
inc
clc
sub
pop
in
lock
pop
ret
lock
mov
sbb
fistpll
subb
or
and
outsb
sub
add
push
popf
pop
cmp
xor
and
je
mov
in
insb
cmp
out
push
mov
or
jecxz
push
xlat
paddd
imulb
mov
and
aaa
adc
mov
test
scas
je
push
pop
lret
push
inc
sbb
push
add
jecxz
xor
cmp
cs
or
mov
push
jbe
rorl
adc
mov
mov
dec
ret
lods
mul
clc
adc
or
outsb
inc
subl
nop
adc
cmp
xchg
cwtl
data16
dec
stc
negb
std
clc
ds
dec
cmc
movsb
nop
popf
outsl
sub
shr
and
mov
pop
xor
pop
in
cmp
sbb
cmp
xor
enter
outsb
in
xor
out
jo
push
stos
out
jnp
inc
mov
pushf
sub
push
dec
fidivrs
into
xor
add
daa
sbb
ja
test
jp
cwtl
dec
sbb
aad
add
sbb
lcall
testb
loopne
add
mov
xor
and
mov
add
sbb
push
jl
popf
adc
pop
negl
push
mov
movb
sub
xchg
es
mov
je
xor
inc
xchg
lret
cltd
inc
mov
and
inc
cmpsl
sub
scas
ror
mov
dec
fisubl
test
sarb
adc
jne
std
jo
mov
jno
and
xor
addr16
icebp
jno
into
sar
lcall
push
ficoms
popa
xchg
xchg
push
dec
stc
add
xor
cmpsl
pop
inc
or
pop
out
inc
pop
in
xchg
shll
push
pop
sbb
jae
into
mov
or
test
cmp
rorb
bound
int3
mov
in
out
enter
xor
in
jl
or
addr16
mov
shlb
jp
dec
test
add
add
fs
sbb
fbld
adc
or
fmuls
mov
xchg
imul
xor
pop
xchg
xor
inc
inc
dec
xchg
int
push
leave
jns
sub
xor
add
mov
data16
xchg
inc
loop
lret
xor
test
xor
rcll
out
sub
push
mov
and
xor
test
xchg
inc
and
push
lea
or
xlat
pop
int
outsb
cmp
or
dec
mov
mov
add
not
je
pop
sbb
fs
xchg
andl
sub
inc
push
adc
into
or
add
or
outsl
pop
and
xlat
pop
enter
dec
pop
add
std
icebp
ror
sbb
xor
add
aad
or
addr16
push
add
movsb
sbb
les
leave
lea
mov
dec
and
jae
xor
xchg
mov
aas
test
out
pop
pop
cwtl
cmp
cltd
add
lea
loope
lds
cmp
push
loop
test
jge
xor
adcb
sahf
ret
in
xchg
pop
addr16
scas
sar
mov
ja
cltd
jo
aaa
test
jns
in
sbb
lea
jge
and
pop
lods
hlt
cmp
dec
sub
cltd
sbbb
hlt
test
sti
ja
sahf
dec
dec
movsb
mov
subb
jle
pop
mov
mov
jp
icebp
cmp
repz
xor
push
outsb
loope
jl
das
pop
dec
call
sti
cmpsb
and
rorl
sahf
jp
nop
adc
ficoml
or
mov
mov
sub
push
mov
cmpsb
iret
cmp
fabs
pop
fbstp
cmp
insl
clc
bound
xor
xor
ss
movsl
cmp
mov
test
xchg
pop
icebp
arpl
movsb
or
in
fisttps
shlb
or
lock
ljmp
pusha
icebp
stos
and
mov
hlt
ss
lds
jge
testb
ja
ss
push
sti
lds
popa
xchg
daa
sub
dec
jecxz
jmp
pop
ss
mov
nop
int
add
int3
lods
sub
lahf
dec
push
jmp
scas
mov
out
das
mov
cmpsl
aam
iret
or
jns
shlb
xchg
or
mov
mov
jmp
in
and
stos
sbb
jne
in
fldcw
sahf
mov
adc
mov
push
mov
clc
mov
in
lcall
lcall
pop
movsb
movsl
js
pop
mov
mov
shll
pop
test
movsb
or
sub
sub
jecxz
scas
imul
jbe
ret
inc
xor
or
in
popa
dec
out
or
es
mov
das
aas
adc
and
cli
pushf
mov
sbb
stc
mov
cmp
mov
lahf
je
push
or
mov
sub
mov
cmc
jmp
sub
sbb
adc
add
xor
xchg
cli
mov
popf
js
mov
and
and
add
in
xchg
sub
push
cmp
clc
inc
insb
rcrb
mov
stc
push
push
pop
mov
fdivrl
clc
xor
mov
lods
inc
mov
stos
outsl
lea
stos
sahf
inc
mov
push
js
adc
scas
inc
add
push
cmp
adc
cmp
shrl
xor
mov
cmp
add
adc
adc
in
mov
push
in
adc
in
xchg
mov
sbb
mov
hlt
lcall
sub
mov
loope
fnstcw
mov
adc
inc
ret
mov
cld
lret
xor
pop
pop
test
push
movsb
push
int3
arpl
lahf
lret
pusha
leave
mov
shl
ds
sbb
fisubrs
imul
pop
xor
xor
sbbl
fistps
mov
movsb
dec
mov
dec
xor
dec
adc
addr16
scas
push
cs
jg
pop
pop
mov
jg
loopne
fs
cmp
in
cmp
enter
test
jp
data16
data16
out
lods
and
push
mov
mov
xchg
in
int
push
jg
push
and
loope
push
aad
sbb
int3
cltd
xchg
fistps
mov
mov
jnp
es
inc
and
mov
int
xlat
subl
pop
aaa
push
mov
add
push
subl
je
sbb
ud0
test
andb
ss
or
pushl
into
add
jmp
mov
or
into
fsubrs
jmp
pop
and
mov
pop
push
cmp
rorb
jne
sahf
sbb
lcall
jb
aaa
inc
inc
xor
call
push
and
fisttpl
cmp
push
add
jecxz
mov
adc
mov
jno
cld
sti
mov
mov
in
pop
fists
sbb
in
test
dec
adc
pop
xchg
je
pop
in
push
outsl
push
loopne
mov
mov
fistpl
cmp
out
xor
iret
jl
mov
pushf
add
pop
iret
pop
sbb
mov
cmp
and
jno
sbb
sbb
cmp
and
push
jge
and
pop
mov
push
out
in
test
mov
loopne
sub
sbb
out
pop
add
jbe
outsb
pop
leave
push
mov
das
push
divl
xchg
int3
sti
es
loopne
aam
rcrl
hlt
or
data16
xorb
sbb
scas
or
sahf
pop
adc
lcall
ret
mov
jbe
outsb
push
jg
testl
lods
mov
leave
shll
outsl
cmc
into
adc
push
dec
aas
mov
push
aaa
aas
inc
shrl
mov
fdivs
cmpb
aaa
ret
shll
pop
mov
insl
std
sub
push
enter
cmp
js
sbb
es
mov
lcall
mov
ja
push
push
lods
pop
scas
mov
mov
dec
lock
mov
cld
dec
data16
mov
jl
gs
movsl
icebp
sbb
sbb
xchg
in
adc
notb
lcall
roll
imul
xchg
and
xchg
push
push
cmpl
push
lods
cli
lcall
add
jb
test
insl
adc
iret
fucomi
js
clc
mov
fbstp
jae
mov
or
jl
sub
xchg
sbb
push
inc
jl
or
fsubr
sti
das
adc
movsb
push
fmulp
out
repnz
daa
aaa
and
shrb
adc
pop
loopne
pop
daa
xchg
push
icebp
inc
and
jo
test
or
pop
xor
jp
in
ss
mull
lods
into
pop
shl
aas
adc
mov
fistl
jo
mov
test
xlat
jg
in
add
add
fisttps
insb
adc
repz
outsl
fincstp
lret
inc
scas
cmc
or
jl
sti
addr16
stos
repz
add
adc
bound
and
notl
sub
sarb
add
insb
pop
rcrl
dec
into
scas
lods
cmpl
cmpl
mov
xchg
in
adc
enter
movsb
dec
add
add
jb
cmp
inc
andb
frstor
shlb
lcall
and
xchg
mov
adc
add
xor
lahf
je
les
rcrl
and
and
pushf
add
sub
xchg
mov
aas
push
mov
adc
int3
testl
jnp
pop
and
pop
fldcw
cmpsl
xchg
iret
sbb
adc
ret
mov
cltd
push
jno
jecxz
ds
outsb
push
pop
pop
mov
sub
jno
inc
jae
dec
push
dec
add
mov
jle
cmc
test
fs
test
and
adc
stos
ret
mov
sbb
call
insl
mov
lcall
cmp
or
xchg
mov
cmp
push
mov
ss
flds
pop
xchg
out
xor
sbb
push
imul
in
mov
mov
dec
lret
imul
out
sbb
movsl
ds
aam
das
aas
clc
jbe
arpl
popf
sub
out
push
sub
add
shll
std
fs
shrl
push
lret
add
les
mov
mov
lock
adc
pop
adc
into
imul
out
sbbb
rorl
jae
pop
call
out
xor
mov
pop
lret
add
bound
movsl
add
pop
pop
loope
push
mov
roll
and
mov
insb
sahf
popf
out
cs
cmpsb
xchg
mov
shlb
shrb
les
and
or
inc
push
mov
add
inc
mov
movsb
subl
mov
jb
mov
in
sbb
push
insb
lret
stos
call
or
or
mov
mov
arpl
xchg
pop
pop
sub
ljmp
sub
aad
sub
cmp
push
in
sub
call
das
add
mov
cmp
std
push
in
fistl
ja
cmp
arpl
shll
out
jge
js
mov
ficoms
cmc
repz
cmp
fnsave
ret
sbb
cmp
push
jge
addr16
xchg
imul
test
decb
xchg
sub
pop
loop
sub
into
out
adc
mov
xchg
xchg
data16
pop
popf
lods
fidivs
or
movsl
pop
mov
fdivl
lret
addr16
and
push
xchg
xor
nop
arpl
xlat
pop
addr16
and
out
and
jl
xchg
rolb
lahf
cltd
in
xor
mov
das
or
mov
cmpsb
mov
xor
mov
pop
stos
jl
es
scas
xor
mov
lods
add
jp
sub
xor
xchg
add
testl
iret
rsqrtps
mov
call
fcmovne
mov
test
fsts
bndcl
cmp
cwtl
je
sub
mov
jl
xchg
scas
fildll
cmpb
into
jmp
test
int3
imul
fbld
gs
cld
movsl
xchg
sarb
lock
push
fwait
or
jg
into
daa
lock
inc
xor
arpl
dec
cmp
push
ja
nop
repz
inc
xor
xor
dec
adcl
push
pushf
in
and
pop
flds
mov
dec
outsb
adc
jle
and
enter
cmp
roll
stc
add
stos
test
orb
test
push
mov
std
or
ds
dec
xor
ss
es
out
dec
es
daa
mov
push
stc
cmc
pop
sub
ljmp
mov
push
push
lock
mov
mov
dec
je
lahf
pop
popa
std
sub
jb
xor
inc
ja
fsubrl
cmp
call
jg
inc
sub
addr16
mov
push
pop
rorl
and
stc
jns
xor
inc
xor
cmp
rcll
or
push
ljmp
push
in
dec
add
and
cmp
xchg
push
sbb
push
daa
std
adc
fdivl
daa
cmp
push
je
sbb
mov
cmc
gs
adc
repnz
pop
pop
test
std
adc
inc
push
dec
adc
push
popa
sub
push
push
lods
loopne
shlb
fstpl
stos
inc
mov
inc
pop
xchg
and
loopne
xchg
mov
aam
mov
icebp
test
icebp
adc
lods
sub
fisttpl
das
adc
lock
mov
sub
jnp
stos
movsl
jl
adc
adc
jnp
push
dec
fwait
call
mov
sub
rolb
scas
addb
daa
jno,pn
pop
stos
sub
xor
popa
int3
jmp
or
mov
xchg
inc
add
in
sahf
sti
enter
ret
mov
flds
cmp
push
pop
dec
push
fucomip
adcl
jnp
mov
ljmp
adc
or
insb
push
mov
push
lods
popa
out
sub
insb
into
aaa
xchg
pusha
fs
fcomp
add
aad
in
fs
mov
daa
inc
or
mov
cmp
fistl
sbb
gs
pop
cmp
push
or
jno
bnd
ljmp
xchg
jge
push
sub
ja
es
inc
mov
xchg
rolb
pusha
imul
aad
aad
out
adc
fists
mov
add
jle
ret
mulb
push
xchg
sbb
icebp
push
fistpll
jge
ja
iret
lock
mov
mov
cwtl
ds
mov
lret
fbld
test
pop
std
jno
pop
jo
jl
cmp
insl
xor
add
mov
imul
test
sbb
out
std
xchg
or
aad
ror
push
fidivrs
jmp
jae
jl
push
sub
dec
mov
aas
loopne
cmp
xchg
repnz
insb
push
dec
add
push
and
adc
call
push
cs
or
add
fistps
inc
rcrb
insb
xchg
adc
and
in
scas
loope
int
ljmp
push
addb
lods
add
pop
cwtl
arpl
int
add
or
pop
movsb
popf
mov
add
xchg
sbb
fstl
imul
fistpl
jne
sub
pop
mov
push
into
xchg
or
and
mov
push
sahf
push
add
mov
fsubs
scas
loop
sar
sub
int3
sbb
mov
aas
in
lds
sub
xchg
xor
and
out
insb
jbe
arpl
ja
fists
jmp
jae
sbb
push
push
xchg
mov
add
arpl
sbb
push
add
or
jl
out
jbe
es
sbb
icebp
inc
mov
mov
adc
sub
cmp
xorl
push
cmp
adc
shl
add
mov
stos
lahf
xor
imul
icebp
xor
bnd
ljmp
insl
or
xchg
or
mov
jl
repnz
shrl
cmpsl
icebp
lret
rolb
add
ja
aas
sub
pop
daa
add
mov
jecxz
xlat
mov
mov
pop
mov
or
and
in
fsubs
fdivs
addr16
fwait
inc
cmpsl
xchg
rolb
pop
cmp
add
push
bnd
das
insb
mov
xchg
ljmp
or
xchg
push
jp
xchg
cld
mov
arpl
ds
into
xchg
cs
push
add
jl
add
gs
jle
hlt
xor
mov
sti
push
inc
push
add
sbb
repz
leave
or
fdivp
mov
mov
dec
dec
mov
xor
mov
in
xchg
scas
push
xlat
pop
or
pop
dec
or
lcall
pop
cli
push
in
add
xchg
sbb
ret
mov
mov
int
lods
adc
inc
cwtl
xadd
out
mov
dec
movswl
pop
fisttps
mov
test
ret
add
sub
rcll
inc
pusha
adc
cmp
sub
add
xlat
out
jb
js
or
rolb
dec
add
mov
sub
std
ds
inc
mov
cmpsl
lea
sahf
mov
incl
mov
xor
lds
xchg
shlb
test
dec
inc
loop
or
cltd
in
bound
mov
adc
rcll
icebp
idivb
pop
or
shll
pop
pop
cmp
sbb
inc
pop
popa
icebp
adc
pop
or
daa
mov
xchg
aad
cs
sub
testb
ds
push
dec
cli
imul
imul
fimuls
jp
jae
xchg
xchg
push
dec
movsb
shl
cwtl
imul
dec
pop
imul
icebp
mov
mov
movsl
mov
leave
mov
jbe
or
pop
inc
mov
mov
fisubrl
mov
pop
xor
sbb
pop
dec
scas
jae
shlb
dec
repnz
lods
out
loopne
sbb
jae
sub
inc
in
scas
out
fsubrp
ds
mov
jb
popa
test
fs
inc
nop
dec
addr16
aam
inc
sahf
sbb
sar
mull
lds
je
pop
pushl
scas
pop
cli
or
dec
add
dec
dec
mov
fsubl
add
scas
xchg
jne
jmp
mov
bound
mov
stos
dec
pushf
in
mov
ficompl
inc
out
push
dec
int3
inc
xor
and
in
stc
stos
je
sbb
adc
in
add
pop
mov
sbb
adc
and
mov
das
sub
jmp
cld
inc
inc
std
mov
das
pop
mov
and
fistps
repz
xlat
popf
mov
rcrb
std
cmp
pushf
mov
sub
repz
mov
or
test
sahf
iret
xchg
fisubrl
sbb
add
lret
stos
and
adc
mov
push
sub
cmpsb
insl
pop
add
dec
xchg
in
push
arpl
pusha
insb
adc
xlat
sbb
xchg
scas
out
leave
mull
pop
add
stc
jo
inc
ret
popf
jne
sbb
or
xchg
out
dec
inc
lret
add
cwtl
fnstenv
jne
add
push
mov
push
xor
sti
mov
push
sub
xchg
dec
mov
adc
out
imul
ret
rclb
or
mov
dec
push
adc
mov
mov
mov
inc
mov
push
adc
pusha
jle
add
icebp
frstor
aas
dec
movsl
cltd
dec
std
mov
arpl
pop
ret
daa
pop
inc
jnp
pop
mull
nopl
add
cmpsb
insb
in
xchg
jge
repz
hlt
mov
and
mov
inc
lods
clc
lds
cmp
mov
cmp
aas
or
stos
into
aas
inc
jbe
filds
cmpsl
push
je
jnp
or
jne
lods
mov
iret
mov
push
cmp
aam
gs
push
insl
hlt
mov
loop
sbb
mov
xchg
mov
or
mov
lods
cmpb
fwait
sbb
dec
test
and
stc
xor
mov
or
push
mov
ret
add
mov
xchg
or
fbstp
loopne
jge
fcmovnbe
push
sbb
lcall
xor
ror
inc
add
jg
mov
dec
xchg
testl
out
sahf
es
test
sub
fs
push
pop
andb
outsl
pop
popf
shr
cld
orl
jns
adc
xor
mov
xchg
inc
cmp
mov
sub
cmpsb
popf
in
pop
cmpb
cli
roll
mov
dec
push
arpl
mov
add
lods
mov
aas
je
mov
and
stc
xor
add
mov
mov
cs
insl
and
dec
stos
iret
mov
xor
aam
pusha
sub
dec
sahf
fsubr
add
adcb
pop
aas
cmp
cli
movsl
xchg
aam
in
ljmp
mov
outsl
sbbl
or
inc
push
or
sbb
xchg
inc
scas
rorb
jae
pop
outsl
push
pop
andb
push
notl
or
or
push
stos
dec
sub
lret
xor
push
jb
mov
mov
dec
mov
stos
mov
add
pop
or
push
cmp
cmpsl
test
fmulp
xchg
jo
mov
sbb
dec
repnz
dec
mov
mov
aaa
out
add
xlat
pop
test
clc
out
mov
push
ret
sub
pusha
mov
pushl
les
stos
sti
cld
xchg
add
adc
cld
jne
int3
mov
sbb
rcr
xchg
movsb
mov
into
xchg
icebp
imul
xchg
cmp
xchg
lods
rolb
inc
jns
frstor
push
mov
and
clc
inc
fsubrs
and
and
mov
enter
dec
loope
jecxz
or
jge
or
add
call
aam
insl
push
push
fcmovb
cltd
sub
jg
iret
je
pushf
pop
icebp
add
cmp
pop
dec
pusha
sbb
int
jg
outsb
add
adc
mov
out
cli
xchg
xchg
mov
dec
sarb
loope
jmp
popa
xchg
fidivrl
sub
les
adc
lds
outsb
clc
in
lds
pop
repz
jns
cli
dec
mov
xchg
mov
sbb
in
in
jno
and
sub
push
push
lods
insb
inc
cmp
push
add
dec
leave
add
int
shlb
das
out
inc
es
mov
popa
leave
inc
dec
cmp
repnz
sub
xor
icebp
mov
insb
add
pop
rcll
xchg
mov
jne
mov
cmp
push
lcall
sbb
lret
cmpb
andl
inc
repz
dec
cmp
or
jbe
mov
mov
ficoms
jmp
in
sub
mov
pop
adc
cmp
clc
adc
jne
stos
jne
cmc
xlat
insl
sub
mov
push
lea
and
mov
xchg
aad
cwtl
jmp
into
jecxz
fscale
mov
ds
push
repnz
dec
jb
xchg
inc
lret
add
push
sbb
and
sbb
or
cmp
dec
das
rcll
xor
dec
xor
and
cmpsl
xlat
movsb
mov
mov
in
int3
cmp
xlat
or
pop
scas
or
pushf
push
dec
xchg
std
mov
sbb
fldl
or
adc
movsb
js
rcr
push
clc
jae
subb
mov
incl
pop
xchg
and
xchg
je
inc
mov
push
fwait
imul
outsb
or
test
lret
xchg
jmp
test
mov
xchg
lock
fwait
arpl
ret
or
jae
cmp
fdivs
loopne
or
mov
addb
push
xchg
nop
das
push
es
and
out
outsl
sbb
clc
cmc
add
int3
imul
or
push
push
les
rolb
js
dec
jg
or
ljmp
adc
and
shrb
mov
out
mov
inc
adc
and
mov
jb
pushf
aam
mov
mov
in
push
ja
jle
mov
lods
dec
es
les
std
fwait
jns
mov
add
rclb
mov
or
jo
call
loopne
dec
add
jmp
in
mov
in
sahf
mov
mov
mov
mov
ds
cmpsl
jb
movsl
cli
call
push
cmp
sbbl
adc
or
sub
sbb
pop
cld
xchg
pop
popf
cmp
fwait
lods
filds
cmp
xchg
call
mov
xor
adc
xor
dec
sub
ret
xor
lret
mov
or
imul
adc
stos
mov
adc
xchg
mov
pop
stc
mov
fcoml
imul
add
loopne
bound
inc
adc
and
imulb
xor
pop
pusha
fcmovu
fists
inc
fdivrs
push
jae
int3
or
jbe
lahf
and
dec
or
sub
call
cmp
les
mov
jp
in
jne
adc
inc
adc
dec
jne
and
push
mov
pop
gs
pcmpgtd
mov
in
sbb
lret
hlt
lods
popa
jmp
or
fsubrs
filds
cmp
into
push
dec
pop
fimuls
inc
pop
xchg
mov
cli
push
push
testb
loop
arpl
jb
lock
aaa
enter
mov
sbb
aad
push
int
test
or
mov
std
cwtl
xor
pop
jno
cmp
fistpl
jecxz
push
test
shl
pop
iret
sti
sahf
fbld
and
mov
or
bound
cmpb
scas
cli
pusha
pop
popa
aad
xchg
mov
jbe
clc
insb
mov
loopne
call
pop
mov
push
inc
mov
pusha
push
in
enter
or
fsubl
in
xor
and
cmp
pop
mov
push
inc
mov
dec
cmp
pop
jnp
jg
mov
imul
leave
or
pop
mov
inc
pop
mov
scas
inc
popf
divb
cltd
jnp
out
pop
jb
outsl
xchg
inc
in
test
mov
jmp
stos
das
mov
mov
jg
mov
bound
fsubr
mov
rcrl
lret
push
mov
ja
mov
sti
inc
inc
sub
stos
stos
pop
lea
fidivrs
inc
push
dec
fimull
jns
cmp
push
dec
movsb
outsb
mov
movsl
mov
cmp
push
and
dec
iret
add
xchg
mov
ret
mov
dec
cmpl
and
xlat
cmc
xor
xchg
push
and
hlt
movsl
sar
sbb
cmp
or
mov
sub
fsubrl
aam
push
stos
in
inc
in
pop
fs
jl
pusha
mov
andl
xchg
sahf
iret
push
push
push
inc
jge
in
push
xchg
jl
xor
mov
les
and
les
pop
hlt
push
aad
xchg
jne
cld
movsb
leave
insl
add
mov
xchg
cmc
mov
adc
mov
adcl
cmp
aad
xchg
push
imul
orl
rcr
loop
subl
xor
cmpl
mov
or
nop
sbb
aas
stos
pop
sub
or
mov
pop
in
add
lahf
popf
cld
mov
inc
or
xor
aaa
cmc
mov
fcmovb
adc
loopne
cmc
sub
jge
ja
arpl
pop
lods
in
mov
and
arpl
popa
test
mov
shlb
cmp
subl
dec
cwtl
sbb
inc
xchg
push
jbe
pop
inc
push
sub
lods
lcall
shl
add
xchg
mov
mov
and
fucom
mov
data16
loopne
push
xor
xor
push
pop
out
sti
fwait
inc
or
mov
aam
aas
or
pop
ficomps
ljmp
sbb
cltd
in
adc
lods
mov
into
mov
push
mov
adc
icebp
in
jle
bound
jns
push
scas
xor
xor
push
fnstenv
jle
pop
and
or
dec
dec
leave
or
mov
push
xor
das
fnsave
jg
shll
push
lahf
loop
data16
cmp
or
jnp
push
mov
jl
push
sub
add
xchg
push
cmpsb
and
add
ljmp
sub
out
xchg
sub
sahf
cwtl
pop
mov
sti
fnstcw
lods
cwtl
test
dec
adc
enter
xchg
dec
dec
movsl
xchg
and
fwait
mov
shrl
imull
jp
pop
test
cmpsl
and
or
dec
xor
pop
ja
xchg
add
or
icebp
adc
je
cmp
test
sbb
pop
dec
aad
rol
scas
push
mov
dec
jns
cltd
dec
es
pop
jl
mov
pop
in
adc
fld
cli
stos
jmp
das
xchg
adc
iret
mov
fisubs
lods
subb
aam
mov
lret
xor
lds
push
iret
movsb
mov
bound
mov
clc
lds
call
inc
push
lret
push
outsl
pop
rcll
movsb
mov
or
or
pop
imul
stos
mov
mov
jae
popa
push
daa
jb
add
lea
inc
sub
xor
xchg
mov
lock
add
jb
lods
fmull
mov
scas
cmp
add
sub
inc
xor
push
cmp
jbe
cmpsb
jb
leave
jo
xorl
jle
push
add
movsl
or
adc
add
pop
repz
xor
dec
cmp
jnp
repz
add
ficoms
cs
pop
cmp
outsb
xchg
dec
int3
push
rcrl
pusha
push
adc
call
mov
cld
xlat
dec
mov
scas
test
sbbl
stos
sub
adc
mov
jmp
aam
rcrl
sbb
aaa
jle
cmp
cmp
xchg
mov
test
jae
rcll
mov
xor
repz
sub
mov
fidivrs
mov
xor
jae
loop
pop
icebp
jg
jo
fistl
inc
repnz
pop
xchg
movsl
out
stos
mov
ds
lods
daa
lods
xor
xchg
cmp
iret
dec
dec
pop
sbb
mov
mov
mov
fdivr
push
fincstp
data16
jnp
hlt
fcomp
dec
pop
push
adc
not
cmp
cmpsl
pop
pop
pop
fstps
jmp
jo
shl
dec
sbb
out
and
and
movsl
cs
jb
mov
add
scas
sub
cmpsb
mov
and
mov
pop
dec
xor
stos
pop
mov
xor
jge
lret
std
popf
add
mov
ret
push
mov
ds
enter
dec
daa
jne
cli
xchg
jnp
pop
xor
mov
mov
cmp
or
call
das
mov
mov
insl
in
out
call
loopne
sbb
mov
aad
cwtl
mov
sbbl
icebp
jns
xor
sbb
cld
mov
mov
cmpsb
xchg
popf
push
jno
cmpsb
jbe
cmp
daa
and
stc
sbbb
dec
push
sbb
mov
jnp
jne
inc
push
mov
shll
test
cs
sarb
scas
lahf
jne
and
xor
jmp
mov
or
xchg
adc
pop
mov
sub
adc
add
data16
jp
xor
sub
xlat
push
arpl
jle
jno
fildll
add
jno
xchg
mov
or
push
dec
ljmp
jbe
sub
fs
stc
mull
jnp
bound
or
mov
lahf
push
mov
sbb
dec
cli
pushf
mov
dec
jno
mov
dec
mov
sub
ss
ljmp
jno
je
stc
and
and
fdivrs
add
pushf
ret
sbb
jo
fcmovne
or
add
mov
sbb
aad
jns
mov
mov
dec
and
sbb
mov
xor
cmp
xor
push
insl
outsl
movsb
imulb
pushf
out
repz
out
or
outsb
sti
mul
or
cmc
dec
inc
jmp
sti
incl
mov
sbb
clc
mov
pushf
notb
das
mov
bound
push
xor
testl
clc
sbb
mov
insl
prefetch
xchg
je
cwtl
sub
xorb
stos
mov
imul
mov
jl
dec
test
cmp
xor
adc
dec
sbb
insl
jmp
push
sub
cmc
mov
mov
push
mov
movsl
sub
and
xor
data16
mov
push
movsl
xlat
pop
fisubrs
rcr
push
jb
sbbl
inc
out
jo
out
jl
xor
pusha
cmp
test
inc
dec
imul
add
cmp
lock
hlt
mov
mov
stos
mov
int3
cld
in
jns
ret
shrl
add
test
mov
add
lods
ja
mov
aad
mov
in
lods
sub
sub
cwtl
ljmp
add
inc
testl
popa
insb
fildl
scas
sub
out
adc
outsb
clc
dec
les
sbb
sub
push
inc
mov
sbb
mov
outsb
adc
gs
sti
jmp
jb
sub
pop
and
jns
popf
adc
cld
test
pop
jmp
cs
xor
subb
cmp
pop
adc
sti
sar
fwait
movsl
fsubl
mov
mov
cli
cmp
mov
pop
sahf
or
add
inc
mov
jg
lret
fsts
add
sbb
mov
mov
addr16
shr
loope
pop
pop
xchg
or
xchg
cld
push
test
xor
imulb
in
scas
mov
cmp
rol
imul
adc
pop
and
dec
mov
scas
and
insl
jnp
test
xchg
imul
cmpsl
jb
xchg
mov
add
add
jbe
jmp
repz
cltd
xor
out
je
call
dec
and
into
cs
add
movsb
jnp
adc
inc
jbe
test
push
xor
test
fnstcw
ljmp
test
pop
cmc
incl
mov
cmp
pop
dec
xchg
loop
movb
clc
int3
sahf
mov
out
sub
sbb
outsl
sub
adc
data16
repnz
mov
push
sub
fwait
das
test
call
fs
cld
jne
push
mov
pop
inc
mov
xorb
loope
shl
pop
imul
cli
mov
into
mov
pop
cli
lret
sub
stos
mov
xchg
popa
notb
sub
mov
or
scas
mov
out
iret
stos
adcb
jmp
push
pop
xor
sbb
or
mov
shrb
push
or
in
dec
push
stos
sti
pop
cmp
push
ja
repz
push
push
lods
mov
fisubl
negl
cwtl
push
jle
gs
movsl
sub
fistpl
jbe
jle
pop
jbe
xor
xchg
push
aad
jl
fldl
rcrb
popf
imull
ficompl
pushf
dec
cs
sbbl
xchg
xchg
lds
pop
push
movsb
mov
pop
sahf
pop
cmc
push
add
fwait
or
aaa
add
mov
sbb
pop
mov
mov
xchg
xchg
ss
or
mov
or
xor
xor
mov
xchg
lds
dec
push
loop
jbe
ror
jge
push
loop
out
jge
mov
xchg
imul
mov
jg
pop
mov
jb
stos
fadds
mov
mov
add
xchg
loope
mov
repz
push
lock
inc
jge
add
mov
add
je
xor
jae
pop
push
xchg
daa
fidivrl
sahf
adc
addb
dec
movsl
sub
jae
and
ret
and
jp
pushf
pop
adc
hlt
push
inc
add
add
int3
call
sahf
sub
ret
addr16
jle
push
add
insb
arpl
jns
aaa
nop
mov
cmp
sarb
shll
xor
aad
xchg
popl
cmp
push
mov
jne
pop
lcall
andb
jno
clc
call
iret
mov
inc
rcll
aas
mov
and
mov
stc
mov
mov
and
test
lds
mov
push
cmpsl
lds
fisttpll
test
hlt
loopne
sbb
pop
jne
iret
les
xor
imul
inc
rep
lock
aas
cmp
xor
xor
mov
xor
stos
xlat
stos
mov
arpl
stc
fs
xchg
push
sub
insb
adc
or
pop
push
lods
stos
xchg
sbb
jb
jl
inc
sti
xchg
cmp
enter
fs
add
test
imul
insl
cmpsl
rcrb
jne
js
xor
mov
ret
jg
mov
out
jmp
push
and
mov
nop
iret
sub
xchg
pop
aad
aad
mov
cmpsl
mov
idivl
cwtl
mov
sbb
pop
adc
and
pop
mov
jp
gs
in
jge
mov
pusha
ds
hlt
adc
clc
mov
mov
je
mov
test
sbb
bound
and
add
rcrb
imul
xchg
mov
jg
sbb
xchg
lfs
push
pop
mov
push
mov
jne
iret
iret
mov
test
push
out
jns
mov
imul
ss
pop
mov
int3
jns
cli
rcll
cwtl
call
mov
jp
out
outsb
mov
stc
push
hlt
test
inc
mov
lret
aam
enter
les
inc
or
push
cmp
push
ss
sbb
inc
cwtl
pop
fsubp
movb
pop
dec
sbb
pop
jg
sub
das
mov
mov
andb
pop
je
fadds
mov
add
dec
nop
in
xchg
pop
daa
ror
dec
test
mov
push
ds
dec
or
out
clc
enter
orb
and
jo
repz
xor
arpl
ss
and
orb
shr
inc
sbb
mov
and
mov
test
lea
push
in
adc
xlat
or
dec
test
pop
fnstenv
dec
mov
inc
dec
mov
xchg
sbb
pop
lret
in
sbb
in
popa
leave
pop
cmp
out
cmp
mov
cltd
aas
inc
inc
cmc
lods
in
loope
adcl
push
xor
imul
jns
rol
pop
in
movsl
adcb
decb
cmp
gs
aas
cld
nop
or
push
insl
out
push
push
fldenv
add
or
je
pop
insb
test
into
inc
call
xor
mov
xchg
shl
sbb
xchg
sub
and
xlat
cs
mov
sbb
je
loope
or
xchg
jae
mov
push
loopne
jo
add
add
jb
cmp
sub
sbb
addb
sub
ficoml
mov
stos
push
xadd
je
fbld
sahf
pop
push
popf
mov
ljmp
aaa
test
nop
dec
icebp
dec
add
ds
imul
mov
inc
call
enter
push
jmp
aaa
iret
ja
scas
xchg
push
adc
fadds
repnz
test
daa
or
test
testb
push
call
fxch
push
bound
pushf
pop
adc
add
pop
jmp
lea
xchg
pop
loope
inc
into
mov
push
hlt
daa
push
xchg
push
mov
shl
fwait
addl
jo
ss
push
pop
out
js
test
ret
clc
sti
cmp
insl
roll
pmaddwd
push
xchg
jo
clc
sub
pusha
push
push
shlb
xchg
push
xchg
les
in
test
stc
das
shl
lds
loopne
out
in
fimuls
push
and
test
mov
int
xor
lods
cmp
out
lds
mov
cmp
int3
and
xchg
test
out
fnstenv
imul
inc
movsl
and
xor
shll
in
pop
push
sub
mov
sbb
jg
mov
mov
adc
lea
in
mov
loop
jo
mov
cltd
sub
andl
ficoms
or
sub
in
lahf
push
dec
mov
mov
and
sbb
cwtl
push
pop
out
jno
les
insb
xor
push
xchg
push
xchg
ret
cmp
lret
pcmpeqb
lods
jmp
lods
xchg
je
inc
sub
subb
fcom
dec
xor
ja
sub
lods
dec
jmp
mov
lods
repz
sbb
adc
insl
stos
fists
loop
push
push
add
jmp
daa
shlb
dec
lds
lods
adc
test
lret
gs
mov
adc
mov
aas
test
or
cltd
je
aad
add
iret
pop
mov
testb
loop
push
loop
imul
push
xacquire
mov
jnp
lea
scas
cmpsb
cmpsb
dec
dec
test
jl
out
xchg
mov
cli
in
cmc
jp
shlb
inc
loop
punpckhdq
mov
inc
fldenv
ss
sub
jmp
push
cld
mov
fistpl
and
scas
pop
xchg
push
mov
cmp
out
aaa
std
loop
mov
mov
dec
mov
mov
repnz
jle
ja
xchg
fmul
jne
pop
and
and
ficompl
gs
pop
mov
jae,pt
std
add
test
inc
mul
lods
add
sbb
je
icebp
pop
cmpsb
int
ret
std
push
icebp
arpl
call
imul
fdivl
popa
xor
and
fst
adc
sbb
inc
mov
aas
cmp
arpl
nop
mov
jecxz
jg
pop
lods
pop
adc
cmp
dec
in
fisubl
jmp
inc
sub
mov
pop
fsts
shll
pop
dec
inc
insb
cwtl
sarl
and
mov
or
popa
add
ret
mov
dec
inc
xchg
call
inc
mov
mov
mov
lret
sub
xchg
stos
test
hlt
cmpsb
sbb
xchg
xor
add
cmp
or
nop
pop
and
jae
stc
jle,pn
fwait
sbb
pop
cmpl
mov
or
aam
enter
aaa
sbb
sub
sub
jae
loope
in
pop
pop
push
fwait
sub
cmpsl
daa
stos
daa
cmc
sub
cmp
push
xor
gs
add
mov
pop
rep
adcb
dec
rclb
mov
fdivl
jno
dec
lock
cli
outsl
clc
sbb
xor
xor
insl
mov
pop
pop
xchg
cmp
xchg
sub
mov
mov
and
sub
testb
scas
sbb
pop
fwait
inc
arpl
push
test
outsl
xchg
mov
out
xchg
inc
push
xchg
imul
pop
xlat
cmp
xchg
outsb
and
hlt
outsb
push
ljmp
gs
mov
sub
mov
stos
xor
popa
push
pop
and
sub
sub
xor
popf
mov
out
call
and
test
jl
js
xor
mov
aas
fmuls
dec
std
in
dec
hlt
std
shlb
cltd
jl
mov
fimuls
cmc
ret
add
dec
mov
push
out
sbb
xchg
movsb
out
clc
imul
mov
in
int
pop
repnz
rorb
movsb
or
mov
push
push
mov
xor
sbb
mov
lcall
adc
dec
sub
cwtl
dec
cmp
adc
loopne
enter
into
pop
add
cwtl
scas
mov
mov
lcall
in
test
add
mov
pop
stc
into
outsl
and
rol
incl
gs
in
addr16
pop
test
cltd
sbb
adc
int
push
mov
mov
mov
aam
std
adc
mov
gs
dec
stc
sbb
sbb
js
jl
mov
cmp
mov
jnp
add
bound
das
repz
cli
mov
incl
ret
dec
icebp
popf
lahf
mov
aam
mov
ds
add
dec
test
pop
pop
dec
scas
push
cmpsb
push
cltd
cmp
pop
inc
loop
ja
cmpsl
inc
lea
push
and
jmp
mov
cmp
dec
lods
mov
cltd
sub
add
ljmp
mov
pop
cmc
jns
mov
rolb
mov
sub
int
mov
sar
ret
jb
mov
hlt
xchg
mov
sub
push
pop
loopne
mov
cmovl
and
mov
mov
lods
rclb
or
lock
pop
shll
test
stos
leave
mov
jbe
aas
nop
insl
dec
jp
or
jnp
arpl
jl
mov
mov
inc
xor
sub
daa
add
inc
stos
inc
shlb
adc
adc
clc
adc
jg
in
cli
push
jmp
idivl
mov
xchg
sub
jo
bound
pop
jecxz
sub
add
pop
push
insb
mov
mov
xchg
push
das
shl
cmp
cmp
daa
ja
mov
cmp
adcl
mov
sbb
xor
pop
sub
mov
loop
cmc
rclb
lea
jb
jg
rol
xor
xorl
in
in
dec
push
pop
cmp
ss
packsswb
or
mov
call
scas
push
mov
add
sub
sub
add
jmp
aam
imul
jmp
xchg
xlat
mov
add
mov
repz
mov
mulb
sub
int
sbb
fs
cmp
aam
jae
dec
scas
gs
and
xchg
pop
mov
fidivrs
lcall
pop
and
imul
mov
jp
mov
in
jecxz
add
arpl
adc
leave
lods
push
inc
jp
shr
add
mov
mov
stos
lock
pushf
mov
pop
xchg
mov
jle
ds
mov
jp
iret
sbb
mov
inc
or
adc
daa
inc
sti
arpl
addr16
hlt
into
test
in
jo
add
xchg
xchg
jbe
fcmovbe
int
sbb
xchg
ss
insl
cmpsb
jbe
or
pushf
cltd
sbb
dec
mov
mov
and
dec
pop
pop
lret
and
pop
pop
pop
push
loopne
push
ficomps
or
call
test
and
xchg
xchg
pop
adc
aas
arpl
adc
xchg
in
sub
imul
jmp
insl
subl
adc
cmp
in
pop
pop
orb
sbb
popa
mov
mov
cld
cmp
inc
sub
xor
mov
and
cmp
ja
dec
xchg
push
fcompl
cli
push
ss
cmpsl
ja
push
cli
aaa
sbb
xor
sub
and
lock
mov
mov
out
jae
jbe
fisubrs
jl
or
cmp
je
cmc
mov
scas
jnp
fabs
sub
mov
mov
out
pop
mov
mov
inc
std
jns
out
out
jno
and
push
in
mov
jae
jp
outsb
into
add
xchg
mov
sub
stc
add
test
cld
add
fstp
test
sub
lods
mov
xor
xchg
adc
sub
sub
icebp
test
and
inc
les
push
pushf
in
jg
jp
lods
jne
outsl
adc
mov
push
aam
out
and
xor
and
mov
sbb
repz
cmp
stc
jle
mov
repnz
enter
mov
aam
shl
dec
pusha
lret
xchg
lea
lahf
push
cs
jne
jg
test
cltd
cmp
movsl
sbb
fcmovne
ret
inc
test
mov
pushf
repz
xor
xchg
gs
ss
add
outsl
push
xchg
xchg
sbb
in
shld
or
pop
cltd
push
fistps
inc
or
daa
sub
outsl
push
dec
mov
into
in
jmp
mov
pop
xchg
mov
push
add
daa
mov
xchg
lods
lret
ljmp
dec
adc
fwait
jns
cmp
loop
sub
sub
jg
es
push
jl
out
lods
lcall
outsb
add
jmp
lret
pop
push
repnz
jno
pop
out
or
dec
jne
mov
scas
mov
sub
ss
push
mov
pop
pop
mov
sbb
cmpsl
loopne
inc
cltd
push
dec
mov
pop
xor
add
xor
xchg
outsb
cltd
out
out
pop
lds
xchg
addl
xor
out
leave
dec
sub
jge
cmp
cwtl
repnz
rolb
and
lods
add
add
jp
aas
jl
inc
insl
mov
xlat
mov
sub
sub
lods
out
adc
out
dec
rorl
cmpsb
xor
cltd
outsb
dec
inc
or
dec
imul
jl
inc
adc
lods
imul
jnp
and
xchg
icebp
scas
mov
std
jle
gs
mov
cmp
mov
push
mov
dec
or
fadd
pop
cwtl
cmp
cmp
lret
mov
inc
fcom
mov
add
lods
data16
mov
ds
add
lock
nopl
shlb
mov
mov
sbb
mov
mov
loop
loope,pt
cltd
adc
aas
and
xor
fstpl
push
push
js
pusha
sub
push
inc
sub
lods
dec
ds
sarl
dec
dec
inc
dec
scas
xchg
mov
xchg
cmpsl
orb
js
test
mov
in
lcall
addr16
and
mov
gs
fimull
pop
je
sbb
outsb
xchg
inc
arpl
xchg
out
xchg
out
xor
div
xchg
cmp
cmpsl
stos
imul
lahf
mov
sbb
dec
pop
icebp
and
jle
and
cmpsl
filds
push
inc
nop
mov
sub
sahf
das
xchg
add
mov
clc
dec
xchg
xor
aam
test
lret
repnz
bound
loopne
inc
insb
mov
mov
push
test
inc
icebp
imul
fcomps
jb
push
nop
out
push
or
jo
ror
cli
cwtl
out
scas
lahf
pop
jo
jle
xor
cltd
and
cmp
cmp
dec
test
jns
in
sbb
mov
ds
subb
out
pop
hlt
rcrb
dec
push
divl
aas
pop
push
or
dec
rcll
pop
sbb
pop
push
jbe
nop
pop
outsl
in
sarl
call
or
sub
cmp
clc
inc
andb
mov
in
lea
lock
inc
pop
stos
jp
push
mov
jle
ret
icebp
xor
xor
js
popl
cmpsb
ss
enter
and
xor
sbb
insb
bound
ja
shrb
cli
xchg
cmpsb
sub
xchg
scas
je
loope
sbb
or
dec
sbb
mov
shlb
int
cmpsl
dec
xchg
mov
sbb
popa
and
lcall
mov
or
adc
stos
std
adc
stos
incb
add
fldlg2
or
xchg
lods
lcall
cmp
jp
lock
cmp
mov
mov
stos
or
inc
mov
jg
ucomiss
xor
cmp
jno
dec
icebp
jecxz
pop
stos
lods
sub
mov
aas
xor
cltd
cltd
std
data16
sti
repz
jecxz
pop
inc
dec
mov
int3
jmp
inc
dec
sbb
push
xor
jl
inc
mov
es
pop
fdivrl
inc
pop
adc
cmp
mov
inc
test
mov
cmp
incb
fs
cmc
cmpsl
lods
icebp
pop
lcall
sub
enter
repnz
nop
lods
sub
loop
add
mov
rorl
pop
push
mov
mov
fdivs
cmp
add
mov
fistpll
jnp
loopne
es
icebp
inc
xor
rorb
rclb
sbb
sbb
add
adc
dec
ficoml
inc
inc
into
mov
jle
jnp
pop
ljmp
mov
push
pop
sar
lea
scas
loopne
xchg
aas
push
fmuls
insb
fdivl
jmp
clc
mov
mov
ss
inc
adc
sbb
jb
inc
cmc
and
orb
jbe
adc
and
adc
sub
pop
ss
lea
movsb
and
sub
lahf
movsl
cmp
mov
bound
add
adc
push
mov
stos
popf
imul
adc
jno
in
insb
cmp
lock
fwait
movsb
daa
es
out
mov
xchg
aaa
fistpll
sub
cmp
fiadds
mov
push
pop
filds
xchg
sub
lock
out
shr
xchg
push
dec
out
and
mov
das
jne
out
sbb
sbb
aam
push
jcxz
in
aam
mov
mov
adc
pop
jo
or
shrb
cmp
test
xchg
test
adc
cli
cld
inc
sbb
cli
dec
jb
add
pop
int3
les
repnz
iret
pop
mov
or
cmp
dec
scas
pop
lods
stos
std
lahf
or
add
pop
push
mov
dec
mov
call
je
bound
jo
insb
out
adc
add
daa
mov
sbb
sbb
pop
adc
adc
mov
in
dec
lahf
adcb
push
cmp
vsubsd
pop
jmp
loop
and
les
xchg
imul
add
xlat
dec
cltd
adc
aaa
std
jmp
jae
shr
cwtl
cmpsl
xchg
nop
sub
xlat
loope
jp
and
js
fmull
mov
cwtl
or
inc
jge
jecxz
ss
imul
jp
jae
dec
pop
xchg
ret
cmpb
mov
mov
add
jae
xchg
je
inc
addr16
sub
mov
or
cmp
mov
js
scas
lds
out
add
cmp
outsl
and
dec
lcall
int3
cmpsb
cmp
insl
jne
sub
es
jbe
sbb
les
dec
ss
mul
lret
sub
xchg
xchg
fsubr
inc
mov
mov
fwait
cmp
mov
cmp
imul
fmuls
scas
test
pop
loope
imul
lcall
je
outsl
das
leave
repz
cltd
pop
iret
int3
pushf
lea
enter
cld
movsb
cmp
std
fildll
push
add
enter
rcll
sbb
pop
jbe
fadds
cwtl
bound
adcl
cmp
mov
je
mov
sbb
cmp
mov
add
inc
add
mov
jo
pop
in
out
or
xor
filds
lods
pop
jne
flds
jns
shll
adc
jg
movl
andb
push
xchg
add
jmp
dec
repnz
jge
jbe
xchg
jp
jle
imul
cmp
push
adc
xor
aas
icebp
push
mov
add
or
pop
mov
and
cs
xchg
icebp
push
notb
cwtl
imul
jle
ret
ret
or
or
xchg
stc
jnp
insl
pop
in
or
push
sbb
sti
and
jmp
sub
lods
mov
rcrb
push
loopne
cltd
test
lcall
adc
jnp
cmpsb
jno
ds
sbb
jp
je
test
xor
in
stos
sub
daa
gs
outsb
xor
push
rcrb
push
add
movl
mov
mov
pop
movsb
sub
xchg
add
aas
sub
mov
xlat
shrb
pop
movsl
push
jp
dec
jnp
dec
xchg
xchg
sbb
cmp
push
call
pop
adc
or
js
outsb
sbb
sbb
scas
call
in
sub
repz
and
jg
enter
adc
loope
jnp
and
xchg
xchg
jmp
xchg
inc
fcompl
or
pop
push
call
in
std
inc
cs
popf
inc
jnp
sbb
sti
outsl
ds
jmp
movsb
push
inc
push
test
xchg
stos
pop
pushf
mov
imul
pop
xor
out
dec
loopne
test
lock
push
rorl
nop
fbld
mov
pop
add
add
mov
ret
xchg
xchg
dec
lahf
loope
lahf
imul
je
gs
pop
cmp
xor
pop
leave
fsubl
scas
jge
aas
cs
xchg
xor
mov
out
cltd
pop
xor
aam
mov
cmp
cli
lods
adc
cwtl
or
or
enter
mov
pop
das
and
cmp
sub
mov
scas
dec
xor
cmp
push
ljmp
dec
in
xor
lods
imul
mov
mov
dec
adc
push
dec
movups
popf
mov
adc
leave
cmpsb
push
dec
pop
jmp
sbb
mov
inc
insl
mov
and
sub
loop
dec
mov
dec
mov
mov
lock
mov
nop
pop
lret
aad
jl
inc
jmp
pop
jns
cmc
or
in
inc
ret
mov
dec
sbb
lock
fwait
mov
shrb
lods
and
or
xchg
pop
jge
push
jge
js
and
int3
pusha
movsb
sub
gs
pop
imul
mov
xchg
mov
fwait
lret
push
or
daa
pop
arpl
aad
xchg
jl
mov
jne
ss
mov
and
and
mov
mov
stc
cmp
shlb
mov
cmp
jle
and
cld
hlt
sub
mov
ret
call
scas
inc
dec
jmp
dec
test
push
mov
or
fwait
mov
test
outsl
jnp
pop
jno
mov
loop
pop
push
sub
pop
movsb
jge
mov
popf
adc
jmp
mov
add
mov
das
pop
into
int
push
out
mov
out
push
ds
and
pop
sbb
mov
push
or
fildl
xchg
std
mov
sub
test
call
ret
dec
sbb
mov
add
pop
scas
jg
test
dec
sub
imul
sbb
pop
jge
cmp
imul
adc
and
cmpsb
push
dec
adc
push
xor
adc
push
lods
and
adc
cwtl
sti
lret
push
in
mov
and
inc
in
and
pop
das
cmp
lods
int
xlat
push
mov
or
lea
cmpsl
loop
sub
inc
pop
jo
ret
repnz
adc
aad
xorb
mov
add
cltd
fmull
pop
xor
pop
add
mov
hlt
pusha
sub
scas
cmpsb
ss
push
sar
xor
je
rcrb
inc
pop
inc
inc
arpl
mov
hlt
jae
mov
mov
pop
out
clc
push
and
cli
push
pop
cli
jmp
mov
mov
jae
lahf
loop
pushf
movsb
data16
pop
jmp
stos
fwait
enter
aad
dec
mov
push
pop
sbb
adc
in
xchg
sbb
jmp
aad
xchg
push
xchg
or
dec
dec
push
mov
mov
je
lods
movsb
xchg
cmp
cmpb
push
mov
or
lcall
cmp
push
and
sub
repz
subps
sbb
xchg
jno
or
scas
add
mov
dec
movsb
jge
test
filds
cmp
fucomi
testl
mov
test
movsb
aam
sub
dec
push
adc
out
push
aas
in
divb
adc
test
and
mov
mov
cmp
leave
adc
dec
inc
stos
push
outsb
call
in
hlt
xchg
hlt
data16
test
pop
or
outsl
lahf
push
cmpl
add
repz
fs
shr
lods
out
data16
xchg
std
sahf
je
test
sti
xor
adc
dec
mov
mov
xor
push
push
sahf
je
stos
shl
jl
adc
scas
pop
repnz
shl
xor
loop
jbe
cwtl
movb
clc
rorb
testl
scas
subps
es
inc
pop
sub
and
insl
mov
ret
xchg
fsub
sbb
mov
mov
add
ficoml
repnz
cltd
mov
repz
imul
shll
add
push
push
or
getsec
xor
test
out
xor
in
jge
mov
mov
test
stos
movsb
sbb
repnz
repz
movsb
sub
xlat
cmp
fwait
mov
pusha
jbe
enter
mov
cli
mov
xchg
ret
dec
mov
fmull
int
shll
xchg
add
aad
and
add
sub
test
notl
es
or
fidivs
jo
mov
test
div
leave
mov
les
ret
mov
xchg
cmp
xchg
shrl
and
lea
sbb
xor
jmp
pop
mulb
daa
repz
xchg
mov
push
xor
cmp
pop
js
das
cmp
loope
rol
scas
mov
popf
xchg
pop
dec
push
and
into
pushl
icebp
jecxz
push
pop
idivl
push
int3
stos
push
sbb
fcomps
jnp
movsb
push
insl
ds
flds
inc
dec
lds
push
sbb
addr16
add
mov
jno
jl
jmp
inc
push
lea
fs
fisubs
push
dec
push
inc
mov
in
aam
lea
arpl
pusha
lods
sub
pop
mov
pop
dec
jg
push
inc
inc
xor
jae
pop
out
testb
cld
mov
sbb
int
es
insl
negl
stos
das
push
aam
cmp
sahf
fcmovnbe
ret
gs
and
push
pop
dec
lds
and
idiv
and
sbb
sbb
lods
xchg
mov
jle
sub
test
mov
xchg
clc
fld
lods
adc
ret
sarb
push
xchg
xchg
xor
push
out
adc
add
daa
inc
repnz
pop
jns
lock
xchg
aas
pop
lods
pop
sub
pushf
mov
jnp
push
push
jne
push
sbb
inc
mov
cmp
test
jnp
imul
add
sub
jo
lahf
dec
dec
popl
inc
mov
cmc
cmp
dec
repz
sti
cs
fidivl
sahf
test
add
cmp
push
sbb
imul
stos
or
adc
imul
or
rorl
pop
xchg
pop
sarb
sbbl
aaa
pop
pop
xor
sbb
in
inc
lahf
cli
adc
jo
add
cmp
inc
jge
repz
aad
js
out
scas
xlat
sbb
ljmp
push
gs
ja
add
xchg
add
xor
sub
jne
repnz
push
cwtl
and
ret
je
mov
int3
sahf
rcrl
scas
lcall
and
mov
xchg
inc
mov
cmc
pop
clc
mov
mov
inc
adc
bound
push
xor
jnp
shrl
bound
xlat
adc
xor
dec
mov
mov
xor
in
sahf
hlt
repnz
push
xchg
in
imul
mov
fsubl
dec
jecxz
shll
test
mov
cmpsb
jge
push
stos
scas
or
push
or
xlat
adc
nop
push
mov
insb
push
mov
inc
popa
sti
push
rcr
push
mov
daa
push
or
cmp
push
push
imul
mov
inc
mov
and
pop
add
sub
mov
das
push
push
pop
push
lods
jl
sub
pop
stos
ja
sbb
lock
adc
push
das
mov
fs
pop
cld
int3
pop
fidivrl
mov
out
inc
sbb
mov
hlt
loopne
arpl
jns
xchg
dec
mov
mov
incb
and
xchg
aad
ljmp
mov
mov
push
adc
push
push
push
mov
jbe
and
lret
xchg
and
xor
jle
pop
mov
test
aaa
add
in
jbe
imul
cmp
mov
push
fs
push
fldt
dec
xor
mov
rcr
es
call
scas
push
push
add
ror
fxch
popf
cmp
push
fnstenv
clc
adc
test
cmp
push
stc
cmc
cmp
and
push
into
ss
jge
cmp
imul
mov
pop
push
ds
pushf
addr16
adc
add
pop
adc
push
dec
fildll
cmp
sti
imulb
ja
pop
or
fdivs
cwtl
fsubrp
outsb
call
cmp
push
imul
fidivrl
xchg
bound
fistpl
and
iret
jp
stos
repnz
outsl
das
pop
outsb
sbb
cmp
fdivr
push
lahf
mov
mov
repz
cmc
mov
sub
jecxz
mov
sbb
push
pushf
arpl
dec
add
inc
out
xor
xchg
je
dec
cmpsb
mov
dec
or
inc
jl
jns
pop
jge
in
repnz
mov
xchg
jns
add
cmpsb
and
push
push
loopne
inc
adc
mov
mov
mulb
icebp
add
mov
mov
testb
fnsave
sti
je
data16
dec
dec
arpl
dec
mov
jl
or
inc
or
cwtl
aad
xor
inc
lock
inc
rorl
pop
or
lea
aam
push
jb
test
inc
xorb
iret
dec
or
mov
fdivrl
fnstsw
pop
jle
mov
mov
cmp
test
push
push
mov
xchg
adc
aas
push
sub
into
inc
push
mov
mov
movsl
nop
lods
push
mov
mov
fsubrs
popf
cmpsb
xlat
mulb
ret
lret
outsl
aaa
rolb
add
mov
mov
pop
mov
jbe
insl
cmpsb
out
mov
daa
push
into
cmpsl
popa
insb
mov
sahf
mov
hlt
fwait
out
push
mov
cmp
loope
ret
mov
or
xor
cwtl
call
xor
in
push
xchg
fnstsw
outsb
add
mov
out
mov
pop
sbb
pop
mov
inc
pop
test
in
mov
or
outsb
jmp
fndisi(8087
stos
sbb
mov
or
dec
dec
mov
jmp
jle
test
cmp
add
mov
clc
mov
adc
xchg
adc
lock
jmp
pop
imul
cmp
mov
jg
scas
out
jnp
daa
fs
das
lods
jns
cmc
adcl
mov
aam
adcb
pop
jb
jmp
int3
push
sub
and
lahf
mov
adc
scas
xchg
pop
xor
dec
dec
in
out
push
jl
mov
add
hlt
inc
push
pop
mov
pop
fstpl
fsubr
adc
dec
cs
aas
fstp
jae
insl
jmp
std
je
pop
adc
xor
out
inc
aaa
cltd
mov
sub
push
ficoms
xchg
xchg
jmp
push
push
mov
sbb
call
test
xor
cmp
push
pop
into
mov
mov
jns
out
fistpl
mov
and
jecxz
xchg
xchg
into
and
inc
sbb
inc
push
or
stc
mov
cs
mov
loope
notb
pushf
push
fisubs
cmp
bound
push
outsl
dec
fwait
add
jo
push
testb
enter
lea
and
imul
testl
pop
fisttpll
add
in
cld
repz
sbb
les
or
xchg
xor
jne
lahf
shl
xchg
cmpsl
mov
xchg
enter
lahf
rorb
xor
mov
sbb
fldl
in
sbb
pop
and
cmpsb
mov
dec
sbb
xchg
mov
mov
pop
inc
rorl
or
cltd
jns
rcr
mov
add
pop
divl
dec
scas
aad
mov
xchg
scas
adc
jp
fdivs
jl
push
pop
cmp
divb
sbb
xor
jb
fstpl
test
repnz
and
cwtl
xor
pop
cmp
mov
mov
jns
inc
sar
mov
jmp
jb
mov
enter
push
insl
or
and
dec
dec
sbb
and
xor
jbe
setne
or
push
or
mov
rcr
cmpsb
andb
sub
push
test
lcall
sub
dec
push
rclb
gs
push
hlt
jle
gs
out
xor
add
rcll
jl
aad
jg
sbb
enter
pop
in
popf
rcrb
and
adc
loop
cmp
sub
nop
push
sub
inc
aad
int
xchg
sbbb
stc
sub
sbb
push
pop
xor
addr16
push
or
cmc
mov
inc
out
or
dec
insb
inc
push
movsl
shr
xchg
int
xor
arpl
ret
sub
ficompl
pop
push
or
sbb
das
repnz
mov
cwtl
js
xchg
sbb
pop
call
xchg
fistl
cmpl
shll
xor
sub
push
xchg
dec
rcr
and
or
push
jb
mov
push
and
das
sahf
enter
cmp
lahf
shll
mov
pop
loope
lock
in
sbb
pop
and
xchg
push
jp
lcall
pop
xor
sbb
xchg
sub
sub
das
jne
jbe
pusha
pop
cli
mov
push
jne
cmp
mov
inc
xchg
test
or
adcl
mov
cmp
iret
aam
ja
xor
jecxz
dec
cmp
pusha
je
inc
lods
pop
mov
inc
or
js
movsl
loopne
xor
adc
lea
pop
dec
pop
sbb
and
gs
push
jbe
shrl
dec
sub
adc
mov
stos
and
or
cmpsb
jnp
rclb
lret
ljmp
mov
enter
imul
dec
jno
insb
ficoms
jp
call
out
movsb
sbb
lahf
lahf
mov
stos
out
or
jb
mov
push
or
fnstcw
test
or
adc
sub
cli
jecxz
clc
stos
cmpsb
popf
lcall
push
pop
ljmp
scas
mov
repnz
test
pop
hlt
pop
fidivrl
or
inc
in
xchg
xchg
das
inc
sarl
xor
mov
iret
popa
ror
into
mov
push
mov
aad
pusha
push
sbb
or
int3
or
push
and
in
mov
sbb
popa
mov
mov
int
xchg
and
and
insl
mov
and
mov
inc
imul
xchg
mov
cld
mov
insb
xchg
xlat
pusha
mov
mov
in
out
fsts
sub
mov
adc
xor
sbb
mov
adc
test
xor
mov
xlat
test
lods
mov
scas
push
inc
insb
mov
jecxz
shr
sub
inc
add
xor
sub
pop
jb
inc
fwait
mov
imull
movsl
mov
das
inc
loop
dec
out
repz
or
gs
lods
ss
push
out
mov
nop
mov
fs
xor
out
push
sub
ret
sbb
stc
sub
sub
sbb
jle,pn
ret
fwait
test
dec
mov
xorb
out
fiadds
mov
adc
fdivl
daa
loope
jg
sarb
idivl
sub
xchg
add
and
mov
stc
out
mov
in
js
repz
int3
pop
jmp
mov
addl
jnp
sub
xchg
lret
pop
mov
fisttpll
ja
mov
scas
mov
sbb
inc
aas
dec
cmpsl
xor
pop
and
ds
jae,pt
inc
sub
movsl
lods
fistpl
sbb
js
fdivs
pop
adc
js
cmp
inc
mov
jl
sub
push
movsb
sahf
jne
xor
jae
or
jecxz
ret
cmp
rorl
dec
ja
mov
push
sbb
cmp
pushf
js
cmp
and
mov
adc
gs
ja
xlat
add
xor
inc
aad
ljmp
out
flds
lahf
flds
jecxz
mov
push
fnsave
or
stc
out
inc
dec
test
rcrb
xchg
xor
mov
xchg
shr
orl
cmp
jmp
clc
adc
adc
inc
sti
dec
enter
sub
out
xor
bound
add
lods
gs
dec
cmpsb
mov
sub
test
adc
dec
sbb
xchg
arpl
xor
or
sahf
test
and
loopne
movsb
stos
lods
cmc
faddl
adc
cs
out
hlt
xor
mov
outsl
dec
int3
and
push
xchg
add
imull
jno
enter
mov
ret
jmp
das
xlat
lds
test
adc
xchg
in
scas
scas
stc
sub
insl
in
cmp
ljmp
testb
scas
xchg
lcall
xor
jo
movsb
mov
dec
ret
push
and
push
imul
xor
stos
pop
ds
lret
shll
dec
pop
inc
call
sub
push
dec
pop
outsb
insl
fisubrs
mov
jbe
pop
jecxz
mov
push
icebp
push
cmpsl
das
mov
scas
cmpsl
adc
repz
pusha
add
inc
and
out
jle
sub
imul
dec
dec
inc
sub
pop
xor
sbb
or
jmp
or
neg
insb
push
cmp
sub
hlt
mov
lods
mov
or
push
lods
int3
xchg
test
mov
popf
cld
xchg
popa
loop
test
cmove
aad
pushf
or
pop
out
clc
test
fidivs
dec
inc
push
fstpt
or
dec
shrl
movsl
out
cld
inc
add
add
and
xchg
xor
xchg
pop
jno
push
cmpsb
add
cmp
addr16
daa
adc
pop
and
pop
mov
pop
sub
add
jle
pop
push
ret
in
mov
or
push
out
data16
lea
ret
push
pusha
sbb
insl
clc
cmp
mov
dec
shlb
ljmp
addr16
cmp
push
sbb
xor
adc
scas
push
sbb
das
sub
add
mov
out
ljmp
mov
push
frstor
cld
mov
push
arpl
cmp
pop
ljmp
push
and
push
in
cmp
mov
test
adc
insl
xor
push
lods
movsl
ja
or
jbe
aas
sbb
lahf
sbb
push
repz
mov
push
sbb
sub
sbb
test
inc
mov
or
shll
jns
hlt
cltd
inc
cli
loopne
repz
pop
rorl
out
repz
nop
lahf
pusha
push
call
push
jae
push
xchg
cmp
inc
jle
lret
into
sbb
fimull
adc
pop
sbb
cmp
pop
shlb
push
loop
jle
adc
cltd
mov
mov
push
xchg
fisubl
fsubs
mov
mov
rol
pop
inc
je
pop
enter
lods
mov
inc
ret
xor
fists
cmc
test
rorb
jg
jecxz
dec
jp
dec
adc
hlt
mov
and
sub
scas
or
leave
mov
ljmp
imul
mov
adc
mov
scas
xor
adc
or
jb
rclb
sbb
ret
push
lret
or
inc
xor
adc
and
leave
xchg
leave
pop
pop
push
push
cmp
in
cs
sti
out
cmp
adc
idivb
xor
aad
fstps
outsl
mov
cwtl
fdivrs
stc
jns
push
mov
cmp
or
xchg
jno
bound
testb
mov
dec
sbb
movsl
jns
jb
lea
xor
js
push
aad
lret
mov
sbb
jmp
ret
xor
xchg
sbb
dec
xor
test
mov
int3
sbb
pop
daa
pushf
test
lea
inc
adc
mov
movsb
sub
mov
sbbl
test
pop
in
fcomip
add
add
popa
dec
cmp
mov
xor
mov
idiv
mov
or
lock
xchg
lods
es
xor
fistpll
je
in
xor
lahf
adc
inc
arpl
pop
cmp
ror
ljmp
ret
xchg
mov
xchg
cmpsl
aam
inc
or
or
sbb
xchg
mov
xchg
pop
jp
or
adc
addr16
lods
nop
mov
hlt
mov
sbb
dec
cwtl
inc
xchg
push
push
and
or
push
jge
test
lea
xor
xchg
inc
int3
mov
sbb
repnz
inc
add
pushl
hlt
sbb
sub
push
adcl
push
cmp
pop
adc
sub
fimull
call
fidivl
icebp
repz
movsl
rcrb
scas
xchg
ljmp
repz
jnp
jnp
test
jne
mov
aas
adc
popa
jns
ret
addr16
push
rclb
mov
arpl
jb
xor
pop
xchg
add
sub
insl
rcr
insl
stos
mov
ret
mov
push
push
push
push
jb
fldt
jbe
bound
pop
das
stos
mov
sahf
mov
mov
cmp
cmpsl
sub
aas
ret
adc
mov
pop
aam
aas
add
xchg
mov
das
push
out
push
pop
xor
dec
clc
xor
and
pop
mov
adc
int
cmpsl
cmpsl
andb
adc
stos
and
imul
loopne
pop
out
xor
in
jmp
ljmp
xor
push
jg
mov
adc
arpl
adc
inc
dec
dec
dec
or
mov
pop
cwtl
mov
int
fldcw
lock
add
cmp
push
nop
xchg
dec
aaa
enter
dec
jmp
psubusb
xchg
mov
mov
push
inc
shrl
and
fistpll
mov
fidivl
das
popa
fcoms
mov
inc
ficoml
xor
push
movsb
outsb
imul
setp
adc
sbb
add
inc
dec
and
mov
and
dec
sbb
inc
fldl
arpl
sbb
imul
insb
das
mov
cld
lods
and
pop
push
xchg
ret
mov
movsl
fwait
adc
inc
insl
iret
stos
sti
rolb
jl
or
mov
popl
ss
xchg
mov
sbb
and
pop
lea
sti
xlat
push
rcrb
dec
push
or
scas
test
adc
mov
stos
sub
pop
mov
jg
pop
cld
loop
out
gs
into
test
mov
imul
xchg
and
mov
mov
pop
sbb
out
jbe
xchg
pop
aam
sbb
sbb
andl
mov
or
and
add
dec
enter
push
inc
mov
aaa
shr
std
xor
inc
lret
jecxz
mov
cld
inc
mov
jno
ja
sub
imul
push
dec
push
mov
ljmp
neg
mov
adc
cs
push
dec
test
jmp
imul
push
push
loopne
adc
or
sbb
pop
pop
sahf
imul
push
xor
cmp
sbb
push
inc
test
or
loop
daa
in
dec
dec
sbb
jp
mov
add
cmp
test
mov
pushl
mov
jecxz
inc
les
mov
mov
nop
aas
ljmp
or
mov
scas
or
mov
and
dec
or
jp
inc
imul
lea
clc
stos
mov
jnp
pop
int
jnp
mov
mov
push
mov
or
popa
lret
jle
inc
ret
into
dec
add
add
adcb
ret
jno
lods
cmp
xor
sub
push
cwtl
js
cwtl
mov
lds
or
or
out
dec
inc
int
mov
int
les
repz
adc
mov
dec
add
test
or
shrl
sub
dec
lret
mov
hlt
dec
addl
aas
mov
shll
jb
cwtl
fsubl
sub
cmovne
or
inc
sub
stos
test
shll
imul
xchg
repz
adc
xchg
aas
pushf
lcall
inc
xorl
dec
in
rorb
xchg
push
rcll
aaa
and
mov
jg
jp
mov
mov
lods
sub
sbb
popf
pop
mov
inc
adc
bound
test
addr16
ljmp
ss
imull
lods
mov
lret
adc
dec
es
pop
ret
gs
imul
xchg
sub
inc
lock
jecxz
push
inc
push
mov
xor
dec
cmp
fstpl
or
icebp
jl
or
xchg
xor
and
mov
leave
sti
cli
cltd
dec
sub
xchg
jno
imull
mov
aad
push
pop
es
idivl
cmp
adc
into
lock
fcompl
push
inc
pop
inc
jge
leave
out
sbb
cltd
fwait
mov
mov
push
mov
insl
popf
push
lods
jns
jno
test
into
push
and
rolb
and
mov
std
icebp
sub
push
mov
mov
xor
shlb
shlb
je
jecxz
rorb
imul
pop
mov
es
rclb
fdivl
push
les
fistl
xchg
insb
mov
sti
test
ret
shlb
cs
enter
dec
cld
les
jae
ljmp
add
xlat
jg
sub
mov
adc
stc
cmp
enter
lcall
ss
adc
mov
or
pop
loopne
sbb
sbb
mov
imul
orl
mov
mov
inc
jnp
add
mov
xchg
sub
in
mov
outsl
adcb
addr16
xor
push
push
andb
scas
lods
test
ret
add
inc
in
xchg
ja
pop
cwtl
push
add
mov
or
mov
xchg
pop
sub
dec
aam
mov
dec
inc
shl
push
stos
lea
fwait
mov
arpl
aas
push
pop
mov
pop
pop
xchg
or
scas
stos
jmp
loopne
inc
leave
pop
inc
mov
loope
adcl
lcall
fists
xlat
sub
and
add
cmpsb
xchg
testl
pop
icebp
in
inc
jge
mov
ja
inc
popa
outsl
fdivr
dec
and
iret
add
in
xchg
sub
popa
lcall
mov
push
adcb
xor
outsb
xor
inc
lahf
sbb
xchg
mov
std
decb
bound
rcll
add
gs
sub
leave
jp
daa
ja
jae
jb
xor
fisttps
lods
roll
cwtl
dec
jne
adc
notl
lcall
and
push
lock
scas
mov
loop
cmpsb
cmp
outsb
lret
pop
mov
clc
sbb
inc
mov
inc
lcall
mov
dec
stos
stos
fs
sub
aas
lahf
add
mov
adc
test
lods
lcall
ret
inc
sub
cmpsl
call
jo
gs
repz
sub
es
xchg
mov
or
ljmp
xchg
int
mov
or
jmp
popf
ljmp
icebp
add
fmull
jb
sar
xchg
push
or
test
cwtl
fidivrs
dec
xor
xchg
mov
push
sbb
mov
sbb
xchg
push
push
cmp
cmpb
mov
in
xor
test
add
sub
test
jbe
ja
mov
lret
jl
inc
shl
sub
or
loop
daa
stos
jbe
or
insb
lds
mov
jg
icebp
rclb
cmp
dec
mov
mov
lahf
and
lret
ja
test
mov
call
in
xor
cmpsl
cld
xchg
xchg
test
leave
cmp
icebp
popf
jp
xchg
mov
jo
sub
cmpsb
lret
cli
mov
or
mov
es
fiadds
pushl
cmp
xchg
int3
cltd
int3
jnp
lock
dec
pusha
sub
add
jno
clc
gs
push
add
xchg
dec
jno
movsb
dec
mov
jmp
movsb
xchg
int3
dec
dec
and
test
stc
sub
jge
scas
dec
test
or
xchg
movsb
test
addr16
push
imul
xor
add
push
and
rcrb
dec
scas
pusha
or
xchg
adc
push
mov
test
repnz
push
je
test
jns
rclb
in
lcall
mov
xchg
adcb
or
and
cmpsl
stos
and
aaa
sbb
cmpsb
test
fsubl
cmp
pop
stos
es
inc
stc
push
out
mov
popa
push
std
xchg
and
xor
xor
cmc
addr16
loopne
push
inc
jg
into
xchg
gs
mov
lahf
xchg
sub
mov
sub
sub
insb
dec
mov
cmc
and
jmp
pop
aas
in
hlt
jecxz
std
xchg
das
scas
xchg
jbe
stc
pop
mov
into
je
aam
fstl
or
mov
mov
cltd
xor
lcall
mov
xchg
dec
leave
gs
sub
movsb
sub
scas
nop
sarl
jge
adc
in
ds
mul
xchg
sub
dec
inc
xchg
popf
fwait
and
adc
adc
js
push
jge
std
in
pop
or
sbbl
push
sti
daa
mov
push
sbb
pop
adc
pusha
dec
jnp
and
mov
inc
sarb
insl
adc
or
jl
push
mov
shlb
stos
fcomps
or
mov
loopne
push
mov
lods
and
into
pop
push
jne
mov
fincstp
sbb
xchg
daa
push
jae
or
xor
or
xor
bound
and
mov
pushl
push
mov
insb
or
add
test
fistpl
inc
ret
shll
mov
cmp
add
push
adc
andb
shr
ja
fisttpll
mov
scas
xchg
outsb
clc
dec
cmp
insb
mov
jo
mov
add
in
mov
xchg
push
adc
out
sbb
pop
insb
movsl
mov
cmp
sbb
sub
fstps
fadds
out
jle
sbb
mov
pop
mov
dec
or
jnp
pop
test
std
sub
inc
xchg
mov
and
ja
sub
or
stos
push
inc
sbb
outsl
xchg
lahf
xchg
test
cmp
add
xlat
hlt
mov
xor
jae
mov
iret
aad
sbb
adc
dec
shr
mov
loopne
fnstcw
arpl
pop
repnz
out
in
filds
in
mov
jo
stc
push
ret
jge
cmp
mov
inc
push
inc
or
gs
push
scas
mov
mov
leave
sub
mov
insb
sub
mov
sti
adc
cwtl
mov
xor
out
das
pop
add
scas
and
sub
pop
mov
aaa
hlt
lods
fldl
push
movsb
movsb
icebp
add
or
or
enter
bound
fsts
push
adc
add
shll
add
mov
rolb
xor
les
clc
ljmp
stos
adc
jge
push
subl
fstpt
or
lret
lcall
mov
int
push
xor
mov
xor
inc
xchg
imul
pop
ficomps
loope
loope
pop
sbb
mov
iret
mov
sbb
xor
add
push
mov
ja
pop
lcall
inc
insb
cwtl
aad
adc
loop
das
jae
ljmp
mov
cli
jo
jmp
dec
rorb
mov
lea
push
push
loopne
add
pop
dec
push
int3
nop
sbb
jp
push
les
nop
loopne
stos
sahf
jno
daa
std
add
or
push
orl
mov
stos
int3
outsb
fcoml
push
shlb
mov
mov
lcall
adc
jmp
movb
inc
mov
push
mov
and
cwtl
cmpsb
pop
xchg
out
dec
movsb
loope
ljmp
cmpsl
jbe
aas
hlt
inc
test
es
mov
mov
jnp
int3
int3
fnstenv
inc
mov
fadds
shlb
lea
pop
ja
aam
js
or
xchg
mov
movsb
imul
fs
xchg
les
jno
lret
loopne
scas
and
xchg
add
fidivrs
int
insl
xchg
rorb
std
push
push
inc
shl
or
mov
mov
in
and
in
and
jbe
xchg
jmp
jnp
or
push
xor
push
pop
cmpsb
ret
push
cmp
pop
jecxz
xor
or
icebp
or
orb
dec
jbe
push
ret
xchg
push
sbb
adc
stos
inc
sbb
loopne
sub
inc
dec
orb
loope
mov
jbe
cmp
insl
out
mov
jl
int3
leave
es
ficompl
add
xor
dec
xor
mov
or
push
movsl
fidivl
xchg
dec
out
adc
lcall
repz
jae
ss
or
out
mov
dec
lahf
bound
mov
fcompl
sarb
in
daa
adc
sbb
out
pop
ja
adc
stos
mov
xor
pop
sbb
es
mov
mov
leave
add
fmul
xlat
loope
pop
sbb
push
add
test
sub
scas
mov
xor
jmp
mov
mov
lods
fisubrs
sub
stos
scas
test
fldcw
sub
add
mov
lret
dec
mov
stos
mov
jae
mov
into
push
lret
sub
loope
outsl
pop
pop
subl
cmpxchg
mov
pop
int
bound
shrl
mov
pop
int3
stos
fs
jp
dec
pusha
and
clc
jne
push
sbb
jbe
lods
cld
add
sti
daa
and
mov
shr
xchg
add
and
or
jb
inc
pop
sub
cld
add
mov
lahf
mov
mov
jmp
mov
adc
mov
mov
adc
jle
andb
movsb
jmp
xor
loopne
sub
out
jmp
dec
jo
pop
idivb
in
jne
int3
out
mov
sub
aam
cmpb
stos
rcrb
inc
add
test
mov
cld
jne
mov
dec
jecxz
xchg
cld
shll
dec
cmpsb
xchg
mov
pop
sub
xchg
outsl
xchg
in
ljmp
sbb
movsb
pop
xor
dec
pop
stos
sub
inc
mov
and
xor
add
add
dec
aad
push
mov
push
dec
cmp
xchg
fmuls
jecxz
ss
add
jae
jle
scas
mov
cmp
data16
arpl
sbb
out
je
lahf
adcb
enter
mov
push
and
sbb
xchg
pop
movsl
popw
scas
add
lods
push
lods
gs
or
jl
test
addr16
fdivr
pop
test
adcb
mov
out
int
lods
mov
adcb
cmp
add
mov
leave
test
lahf
aad
nop
out
cwtl
xor
xor
popf
mov
mov
lret
clc
cmp
inc
imul
mov
movsb
xchg
mov
in
sub
push
faddp
lret
loop
in
data16
in
subl
sbb
cld
insb
aam
mov
add
xor
inc
cmp
lock
mov
sbb
out
ljmp
push
hlt
out
mov
loopne
imul
shlb
push
test
mov
test
add
js
xchg
cmp
cs
movsb
mov
xor
ss
js
cmpsb
mov
pop
cmp
cmpsb
sbb
aaa
sbb
cmp
loopne
sub
ljmp
dec
lret
xchg
pop
jge
fcmovnb
adc
popw
mov
sub
dec
xor
push
fwait
mov
push
mov
loop
stc
enter
xchg
inc
jp
add
and
js
filds
dec
add
sub
scas
call
adc
fiaddl
in
mov
sahf
mov
xchg
int
test
dec
add
inc
loope
aam
inc
lret
stc
lahf
jo
stos
jp
and
iret
ret
inc
add
inc
jns
push
fnstcw
sub
aam
mov
pop
andl
xor
jmp
insl
loopne
xchg
push
enter
movsl
mov
sarb
int
pop
mov
pop
aad
ja
xor
inc
mov
xchg
sbb
adc
in
cmp
dec
rorb
xchg
ljmp
jmp
cltd
pop
sbb
out
dec
cmp
mov
das
and
dec
sub
in
fwait
inc
hlt
in
aaa
lock
inc
loopne
jecxz
mov
imul
mov
sbb
push
shll
jp
aam
sub
mov
pop
cltd
push
jo
fcoms
fbstp
cmpsl
adc
add
es
jmp
test
mov
lahf
pop
mov
xchg
cmp
or
popf
dec
cmp
loop
sub
pop
sbb
fsubrs
jae
popa
rcr
cltd
call
xor
dec
pop
aaa
lcall
cmp
repnz
imul
popa
xor
push
arpl
sub
stc
scas
lcall
lea
movsb
push
jmp
pop
aas
cmp
sub
add
xchg
add
scas
lods
negl
test
xchg
sub
lods
cmp
dec
mov
cmp
push
pop
add
fmuls
jecxz
inc
sub
add
adc
aam
test
pop
filds
xchg
divl
sub
or
sbb
and
mov
pop
adcb
aam
jecxz
stos
pop
fmull
and
scas
inc
in
dec
ss
mov
mov
int3
and
mov
inc
pop
and
lea
pop
push
lods
mov
push
cmp
push
pcmpgtw
fsts
mov
cmpsb
adc
cmc
imul
lock
jno
cmp
sub
cwtl
std
or
in
dec
or
pop
pop
push
jl
mov
push
stc
inc
adc
call
out
paddd
loopne
js
jp
cli
mov
jno
mov
mov
cld
pusha
ss
mov
add
lods
fistpl
cmp
cmp
sub
leave
cmpsb
scas
in
in
int3
rclb
std
ret
jnp
cmpb
notl
cmpsb
or
fwait
icebp
adc
mov
mov
cmp
and
jb
imul
nop
xorb
xor
mov
mov
iret
dec
insb
popf
jbe
xor
jno
stc
test
push
ja
xor
dec
imul
sbb
xchg
dec
lahf
jmp
mov
mov
sbb
mov
or
inc
pop
rclb
lods
dec
xor
adc
ds
pop
sub
dec
jecxz
lret
ret
out
stc
xchg
mov
push
loope
inc
sub
pop
mov
hlt
out
sbb
mov
addr16
adc
loopne
jmp
inc
popa
jno
negl
jnp
sub
push
and
inc
ljmp
adc
adc
ret
mov
add
adc
mov
leave
stc
aas
mov
mov
call
mov
in
lret
push
loopne
jb
sub
pop
sbbb
pusha
shl
into
jecxz
mov
mov
xor
and
mov
lods
scas
int
xor
lock
jge
and
jmp
gs
stc
sbb
pop
sahf
hlt
and
pop
stos
xor
rorb
add
clc
cltd
mov
jecxz
jecxz
nop
fists
std
outsl
mov
dec
or
inc
inc
test
push
or
inc
sub
push
loopne
jle
mov
push
sub
andb
mov
adcb
mov
jo
sti
repz
mov
sub
ljmp
cmpsb
shlb
negl
insl
adc
call
xchg
inc
sub
testb
mov
cli
fisttpl
jge
add
ret
and
jns
cmp
bound
dec
fcmovnb
outsb
xor
jo
nop
cwtl
cmc
jmp
adc
jl
pop
mov
nop
cmp
aas
dec
cwtl
leave
mov
inc
xchg
pop
aaa
xor
mov
pusha
jle
outsl
sahf
mov
enter
loopne
dec
or
xor
imul
push
or
xchg
jno
xor
mov
adc
cmp
gs
iret
clc
mov
leave
cmc
dec
cltd
xchg
mov
in
outsb
jmp
sbb
data16
xchg
cld
or
cli
inc
inc
and
mov
inc
jns
into
out
push
push
subl
nop
pop
fstp
mov
fadds
int3
or
mov
mov
insb
mov
sbb
cli
cmpl
jnp
dec
sbb
adc
icebp
std
and
into
mov
cmp
inc
pop
sub
sub
daa
cmc
inc
jmp
rcrl
les
mov
mov
pop
xorb
and
jl
stos
pop
iret
cld
jno
jg
outsb
fstl
cmp
and
loope
xlat
jae
inc
push
addr16
aad
jae
fstp
adc
and
inc
es
adc
push
xor
test
inc
cmp
mov
mov
jae
and
jo
insl
mov
pushf
and
mov
sar
lock
inc
xor
test
cwtl
pop
adc
inc
sbb
jecxz
repnz
pop
add
cli
leave
or
mov
jbe
outsb
cmp
lret
inc
mov
mov
add
imul
mov
loop
cmc
push
xchg
das
mov
mov
jmp
je
pop
push
mov
sub
jo
stc
sub
imul
mov
and
jecxz
sub
gs
lods
test
lods
shrb
jno
ret
test
sub
adc
pusha
jecxz
dec
adc
push
jmp
es
call
loope
mov
xor
push
icebp
or
aaa
nop
ret
push
lret
dec
pushf
pop
xor
mov
mov
push
dec
and
mov
popf
cli
adc
inc
jae
push
add
jns
pop
fisubrs
sub
arpl
jmp
stc
adc
push
andb
test
pop
idivb
push
xchg
and
and
movsl
les
dec
pop
push
dec
or
rorb
lea
add
jmp
jns
mov
dec
imul
jl
inc
mov
popf
rdmsr
pop
adc
iret
and
in
xor
dec
aas
mov
addl
push
jp
adc
subb
xchg
push
xor
das
test
xor
mov
sbb
jle
scas
lds
xchg
xchg
and
mov
jp
and
icebp
jns
adc
mov
in
adc
push
pop
or
out
mov
fdivrl
enter
push
adc
jmp
inc
jb
jl
mov
push
sbb
lea
xor
imul
cmp
out
mov
xchg
sbb
mov
inc
ds
in
repnz
and
dec
rolb
das
pop
test
push
inc
add
cmc
repz
je
data16
jne
pushf
mov
sarl
sahf
push
rolb
rcrb
out
dec
bound
mov
dec
mov
mov
sahf
adc
test
notb
sti
test
jmp
js
dec
frstor
inc
dec
add
dec
pop
outsb
mov
sbb
call
cwtl
lods
sarl
xchg
icebp
sti
dec
bound
and
mov
cmp
mov
dec
xchg
push
stc
insl
add
add
mov
mov
lret
inc
sub
push
cmp
mov
jecxz
sbb
sbb
push
pop
out
call
scas
cmp
imul
outsb
daa
in
push
mov
rcrb
mov
ret
adc
cmp
fidivs
dec
movsb
mov
mov
cld
lock
rorl
jnp
adc
shr
sbb
cs
mov
es
mov
out
fisubl
dec
loop
mov
cmp
xor
pop
ret
inc
ror
iret
pushf
fwait
push
mov
gs
push
lods
xor
lret
ss
shr
andb
inc
jns
arpl
out
and
and
xchg
ror
push
mov
xor
sbb
les
scas
outsl
sahf
into
inc
xchg
mov
sub
dec
xorb
in
or
jmp
insb
in
mov
inc
pop
push
adc
jp
lods
sbb
aad
das
les
test
pop
mov
adc
dec
movsl
xor
adc
inc
int3
mov
or
jns
daa
and
adc
out
push
sbb
and
popa
clc
lahf
pop
neg
cmp
rorb
ljmp
arpl
addr16
mov
inc
jmp
mov
pop
lahf
imul
mov
popa
mov
adc
int
dec
ja
dec
sbb
fsts
fistps
das
push
xchg
aas
sbb
rcr
stos
fcmovne
lds
inc
hlt
andb
xor
xor
bound
enter
jl
ret
xchg
push
dec
xor
and
push
xchg
xchg
ds
mov
inc
inc
dec
aaa
pop
cli
xlat
outsb
jnp
xchg
lock
inc
push
add
fisubrs
mov
mov
movsl
push
lret
mov
jge
cmp
push
andb
cltd
stc
xor
test
mov
ret
stos
in
test
push
adc
push
pop
or
mov
lret
cli
jmp
cmp
pop
aam
inc
repz
pop
mov
jg
xchg
sbb
mov
mov
lahf
cmp
fisttpll
fstpl
jns
js
fbstp
jle
fst
push
xchg
mov
mov
loop
dec
fdiv
fwait
inc
cld
lret
sbb
and
xchg
inc
sub
roll
gs
mov
subb
lock
and
adc
adc
mov
push
xchg
cmc
hlt
adc
sbb
sahf
scas
fs
rorb
jbe
femms
or
mov
xchg
sti
scas
sub
nop
sahf
bound
data16
mov
mov
jg
mov
mov
test
mov
push
cwtl
outsb
jmp
addb
addr16
daa
cmpb
stos
xchg
dec
andl
or
push
mov
pusha
pop
fldenv
dec
jl
dec
cmp
nop
dec
ljmp
adc
imul
mov
or
dec
pop
les
imul
orl
stc
mov
stc
int3
add
movsb
push
adc
pop
fwait
mov
xlat
mov
xchg
fistl
mov
icebp
and
push
or
out
mov
pop
adc
push
push
mov
push
in
jo
leave
mov
push
popl
adc
insb
data16
push
mov
push
sbb
aad
shll
mov
xchg
adc
loop
jb
mov
aam
repnz
test
shll
shrb
mov
sbb
es
inc
stos
out
jecxz
ss
inc
orl
mov
into
jmp
sub
clc
andb
dec
in
les
outsb
push
inc
adc
adc
add
decb
clc
add
cmp
dec
mov
pop
push
cmpsl
daa
jecxz
push
sbb
mov
cwtl
bound
fsubr
xchg
scas
push
das
jmp
testl
jno
shrb
hlt
insl
rolb
in
xor
xchg
out
mov
jns
and
lahf
loope
out
mov
xchg
dec
pop
xlat
repz
cwtl
xlat
lock
mov
sti
adc
iret
rolb
pop
ss
mov
sub
idivb
pop
cmp
push
imul
cmovae
dec
push
push
xchg
fcmovbe
push
or
dec
add
in
popa
iret
jg
insb
fs
sbb
mov
sbb
mov
in
mov
xchg
or
sbb
ja
adc
adc
das
fdivl
xchg
cmp
call
fsubp
lahf
pusha
out
rcrb
push
or
pop
je
adc
into
std
sub
add
push
mov
fiaddl
into
and
jne
cmpb
mov
ret
and
shrl
add
loope,pn
add
push
cs
cli
push
testl
cmp
or
inc
jns
adc
cmpsl
xchg
and
mov
in
jns
inc
inc
mov
cld
push
bound
sub
mov
sub
data16
repnz
xor
stos
inc
aad
pop
pop
and
shl
pop
sti
adc
cmp
cmpsl
insb
jae
xchg
push
leave
pop
lods
iret
mov
lods
jno
mov
sarl
jno
jne
lret
add
mov
aaa
imul
stos
cmp
lret
dec
xchg
les
enter
cltd
fidivl
pop
ja
or
xor
mov
jmp
loopne
jno
jae
xchg
hlt
adc
inc
out
call
sbb
and
ret
xchg
loope
test
leave
ret
push
subl
jbe
sti
test
daa
outsl
push
mov
or
vmovlpd
or
pop
aam
cs
xor
xchg
jmp
lock
movsb
mov
sbb
fyl2xp1
mov
xchg
pushl
pop
es
xchg
mov
icebp
insb
push
mov
jecxz
popa
ror
cmp
jle
mov
pop
jp
dec
ja
icebp
jecxz
mov
lret
or
pusha
pop
or
sub
stos
adc
push
cmp
xchg
pop
xlat
cmp
cmp
inc
fcomip
popf
test
sbb
pusha
adc
add
stos
dec
mov
and
in
ljmp
adc
sub
dec
cmp
incb
ja
cmp
rolb
outsl
mov
inc
stc
loop
xchg
and
dec
or
xor
xchg
cmp
mov
add
mov
out
pop
xor
xchg
rclb
jae
out
dec
xchg
add
int
mov
mov
int
int3
sub
fcmovne
adc
and
je
pop
add
jb
add
pop
jge
outsl
pop
mov
fisubl
movsl
ds
jne
mov
inc
push
mov
xlat
inc
test
movsb
addr16
jecxz
push
sbb
inc
push
arpl
pop
lds
bound
mov
mov
int
ficoms
adc
aaa
int3
pushf
jno
push
lcall
bound
adc
call
cmc
lret
jl
dec
imul
inc
sub
mov
ficompl
mov
pop
movsb
not
add
sbb
cltd
cmp
fsub
mul
lahf
out
imul
pop
xchg
push
ljmp
mov
xchg
leave
or
jp
in
mov
aad
loope
aad
mov
mov
adc
out
xor
cmp
sub
subb
sbb
push
mov
mov
fisttpll
ljmp
daa
iret
add
or
push
ffree
mov
into
movsb
xchg
aam
mov
inc
jl
jbe
stos
xor
leave
pushfw
shlb
pop
out
cmp
sub
adc
orl
sbb
dec
lcall
pop
xchg
pop
pushf
ss
xlat
sub
dec
aam
pop
repz
aad
test
add
push
dec
cmpb
adc
popf
outsl
jno
cmc
mov
jl
out
cmpsl
scas
sub
dec
cltd
enter
adc
or
mov
sub
iret
mov
std
xchg
xor
imul
cs
test
stos
ja
xor
push
add
adc
jne
and
pop
add
imul
daa
mov
jne
pop
mov
sbb
or
adc
call
jmp
mov
or
cwtl
ror
and
stos
mov
jne
rsqrtps
mov
cmp
and
and
dec
cwtl
rcll
adcl
mov
pop
fcmovnu
inc
adc
div
pop
push
rol
popa
jl
gs
jno
test
repz
mov
lcall
push
popa
sub
dec
cs
std
loopne
loopne
inc
sbb
cmp
cmp
jg
leave
sub
mov
out
sar
mov
lock
inc
jbe
data16
push
push
pop
ret
das
les
jmp
mov
movsb
adc
inc
fwait
mov
stos
lea
rorl
sar
adc
cs
inc
mov
pop
orb
push
popa
and
jb
aas
rorl
cmpsb
push
push
loope
mov
pusha
mov
sub
add
add
sub
in
dec
outsl
mov
repnz
dec
add
or
stos
int
std
jne
test
xor
mov
stos
add
pusha
das
xchg
in
test
call
fwait
aas
pushf
mov
in
cli
add
aam
sbb
call
scas
addr16
adc
les
inc
mov
sub
lods
dec
xlat
in
mov
mov
xlat
sub
add
lcall
ds
pop
inc
popf
push
cmp
add
xor
sub
dec
push
push
xor
fisttps
int
dec
jae
out
call
dec
inc
int3
stc
lods
adc
sti
sti
or
pop
popf
xor
mov
mov
pop
adcl
loopne
dec
or
ds
rcrb
sub
pop
shll
arpl
xchg
sbb
addr16
push
shrb
out
push
mov
sub
add
in
xor
aad
push
push
cmp
inc
out
push
and
mov
out
mov
push
pop
pop
adc
cmp
jecxz
add
ficompl
bound
xor
test
outsl
cmp
ret
mov
pusha
sbb
aam
add
sub
bound
inc
pop
mov
push
xchg
and
jl
and
jp
adc
repz
mov
loop
jo
in
out
or
daa
icebp
mov
push
iret
test
pop
fwait
rorl
dec
mov
ret
mov
jmp
cmp
insl
or
dec
in
sbb
and
mov
add
mov
lahf
or
jbe
rclb
sahf
stos
pop
stos
add
cwtl
ficompl
mov
cmpsl
aaa
adc
or
pop
ds
fwait
xor
std
int
adc
mov
lcall
mov
ja
jge
or
imulb
mov
and
jno
in
inc
inc
xchg
mov
mov
aam
push
aas
cli
lahf
xchg
xor
xchg
stos
inc
fstpt
scas
fndisi(8087
sub
or
sbb
loop
mov
mov
inc
test
jle
std
sbbb
jbe
dec
popf
insl
loopne
push
sub
jg
movsb
ds
and
jecxz
scas
insb
add
mov
xchg
push
adc
xchg
sti
lods
mov
fildl
push
dec
pop
adc
xlat
lret
in
push
lea
mov
jae
out
mov
mov
scas
mov
jg
loopne
rcrb
adc
jg
push
lods
dec
add
mov
test
aas
mov
inc
ficoml
bound
ffree
xabort
mov
popa
test
cs
push
mov
mov
mov
sub
out
loop
inc
jmp
ljmp
adc
pop
clc
iret
jb
inc
lock
pop
fsubl
add
in
cmp
pop
lcall
mov
cltd
mov
imul
popf
fsubl
pop
inc
xchg
pop
shrd
loope
xchg
fwait
lret
cli
add
xor
loopne
xchg
jecxz
in
mov
push
and
and
negb
xor
cmpsb
pop
or
pop
ret
and
cli
mov
cmpsl
cmp
mov
mov
adc
movsl
mov
pop
pop
clc
or
test
lods
inc
add
cwtl
ret
jno
sahf
cmp
lret
mulb
test
jmp
sub
into
fiadds
jns
or
pop
mov
int
gs
xchg
add
jo
gs
int3
sub
mov
jb
jnp
push
cmp
mov
lods
repnz
into
fistps
mov
mov
and
loopne
mov
aam
insl
cmp
popa
jp
inc
or
cmp
dec
push
mov
add
stos
xor
jb
lea
dec
jb
cld
inc
mulb
out
fldt
pop
das
xchg
pop
mov
cmp
adc
xchg
cmp
push
adc
cmpsl
mov
add
std
fwait
xchg
divl
js,pt
and
adc
push
adc
js
inc
scas
loope
jns
dec
sti
mov
shlb
mov
sarb
pop
push
adc
and
jl
insl
or
std
cltd
mov
xchg
scas
je
mov
xor
mov
or
jbe
popa
les
pop
jae
mov
xchg
ret
fldt
mov
jae
out
aad
loopne
insb
jbe
in
cmp
test
movsl
gs
sbb
shrl
loope
arpl
pop
aas
and
jecxz
fwait
inc
mov
loopne
sub
ja
loopne
mov
cmp
nop
cmp
xchg
je
mov
sub
jns
and
nop
sub
mov
ret
lods
aam
and
int3
ss
xchg
shl
aaa
sub
leave
xor
in
cs
sarl
adc
in
data16
scas
test
test
outsl
mul
inc
or
daa
jle
loope
sti
imul
add
mov
mov
push
pop
bound
int3
xchg
or
cltd
js
test
sub
lock
loope
test
inc
xchg
insb
int
cwtl
pop
enter
sbb
pop
mov
and
pop
lods
xor
pushf
sbb
rcrl
push
push
adc
hlt
loope
cmp
sub
add
or
aam
dec
inc
pusha
test
or
cmpsb
jmp
xchg
aam
mov
adc
xchg
lahf
fdivl
imul
ss
pop
int
in
mov
fldl
xchg
movsl
cmpsl
adc
rol
sti
cmp
mov
push
mov
ret
shll
loop
sbbb
or
aas
inc
jmp
sub
or
sahf
xchg
sbb
mov
outsl
cltd
sbb
cmp
cwtl
icebp
push
sbb
dec
in
and
stos
mov
mov
enter
scas
push
pop
inc
push
icebp
inc
movsl
es
nop
mov
int
js
fbstp
jle
lret
xlat
pop
arpl
xor
xor
arpl
rcl
add
gs
adc
mov
stc
movsl
push
and
jbe
hlt
test
lock
out
mov
inc
mov
cld
dec
fdivl
idivl
pop
xchg
sub
lret
sub
loopne
and
jmp
lea
rorl
insb
lock
dec
mov
dec
sar
push
adc
shll
fistpl
cmp
push
push
add
nop
xchg
sub
fdivr
xchg
mov
lds
fwait
imul
sbb
adc
ret
push
lock
or
loop
cmp
lcall
les
push
sbb
cmc
rclb
repnz
dec
dec
xor
mov
addr16
xchg
inc
or
stos
mull
test
stc
inc
cmpsl
sub
inc
cmp
dec
dec
mov
into
imul
aam
cltd
loop
xor
add
pop
pop
addr16
pop
sti
mov
movsb
nop
leave
pop
dec
adc
sbb
push
mov
push
pop
jmp
arpl
loope
sbb
mov
leave
sub
jnp
sbb
dec
and
jo
sub
mov
or
pop
jl
loope
lods
popf
ret
mov
xor
dec
rcrb
pusha
cmp
xchg
cmp
les
insl
cwtl
fdivl
loopnew
stc
out
jae
das
add
movsl
rorb
rolb
dec
jg
aam
rorl
mov
data16
decl
xor
pop
pop
xchg
cltd
out
xor
xchg
jge
rcl
xlat
je
fnsave
shlb
fsubrs
jbe
mov
or
gs
sahf
rcrl
repz
adc
xor
jecxz
es
xchg
pop
rcr
outsb
ja
jge
std
loope
jns
pop
mov
mov
and
lret
adc
inc
sbb
xor
jnp
hlt
std
outsl
shrl
dec
aad
jb
sub
dec
lods
rcl
add
bound
je
fisubrs
sub
cmp
mov
pop
inc
iret
mov
pmuludq
add
out
cs
divl
test
sbb
add
jnp
jns
sub
test
pop
sbb
stc
fcmove
sub
loope
inc
gs
enter
aad
das
gs
imul
push
outsl
dec
hlt
shrb
lods
pop
call
mov
shrb
cwtl
dec
in
test
fprem
mov
fiaddl
adc
ret
out
dec
or
or
adcl
push
and
movd
pop
dec
in
xchg
cs
imull
sub
idivb
sbb
inc
xchg
lret
mov
and
sub
stos
mov
xchg
dec
pushl
jo
pop
int3
js
or
gs
out
dec
pop
movsl
mov
sbb
test
push
loope
out
hlt
aad
mov
aaa
push
neg
pop
mov
repnz
push
lods
dec
movsl
adc
test
mov
cmp
pop
xchg
pop
sbb
mov
jge
inc
sub
cltd
sbb
cmpsb
cmpsb
adc
jns
enter
add
lods
popa
push
push
inc
fcomps
aam
cmp
lea
ljmp
mov
xor
or
lods
mov
ret
cmp
popa
sub
jne
lods
outsl
mov
mov
out
mov
mov
icebp
sti
xor
hlt
push
aaa
xor
repz
outsl
rolb
ret
adc
arpl
mov
push
aam
push
mov
cmpb
mov
mov
in
jp
cld
aam
int3
leave
and
jb
lret
in
or
jg
cmp
popf
pop
xchg
int
sbb
or
cwtl
and
mov
mov
negl
in
lcall
inc
stos
icebp
push
pusha
mov
push
pop
jb
push
fiadds
out
xor
add
lods
dec
jg
fidivl
sub
loop
inc
cmp
mov
call
mov
int3
sub
pop
mov
or
jns
mov
mov
or
cmp
dec
lods
or
lods
jl
jmp
movsl
mov
pop
lret
outsb
inc
aam
pop
pusha
and
dec
sub
cmc
flds
xor
std
or
push
push
pop
inc
aaa
aad
cmp
rcrl
aas
fiaddl
or
adc
push
lds
sarb
js
add
enterw
cmc
loope
divl
sub
je
sbb
mov
jns
cltd
xchg
xchg
enter
insb
push
mov
data16
cmp
and
stc
sub
xchg
ss
add
adcb
dec
ja
das
or
addr16
add
push
xor
mov
cmp
loopne
pop
pop
mov
stos
orb
pushl
pop
add
adc
dec
push
mov
mov
pop
sub
jns
mov
mov
fcmovnbe
inc
aad
cs
in
fsubp
and
nop
scas
push
xchg
push
or
ds
sbb
push
mov
or
push
jmp
add
jnp
add
cmpsl
pop
jp
pop
dec
insl
add
in
cmc
or
out
addr16
enter
or
gs
ficompl
dec
push
pop
jecxz
jge
mov
mov
cwtl
push
xor
sbb
push
xorb
movsl
push
jp
insb
or
sub
outsl
call
arpl
jg
xchg
ss
repnz
add
outsb
outsl
inc
mov
call
mov
inc
or
mov
data16
sbb
mov
pop
int
push
jne
sub
add
fs
pop
sub
jl
mov
xor
loope
fiaddl
and
jb
inc
or
repnz
pusha
jne
dec
xchg
stos
movsl
imul
arpl
lret
faddl
lods
xor
push
imul
aad
icebp
jp
xchg
in
dec
mov
fstpt
data16
cld
cli
lods
stos
xchg
sub
inc
decb
test
daa
sbb
xor
out
mov
push
mov
cmpsl
mov
testl
sbb
push
push
push
jne
vmovd
dec
mov
test
int
leave
rcrb
mov
jecxz
ds
sub
pushf
xor
orb
or
insb
repz
mov
mov
add
xchg
cmpsl
sarl
sub
testl
or
divl
mov
cmc
loopne
shl
sbb
sub
mov
hlt
jne
pop
sub
cmp
pop
fisttps
bsf
in
mov
in
loope
push
bound
mov
jp
mov
xlat
jnp
or
arpl
mov
pop
rorl
fstl
pop
xchg
push
mov
xchg
frstor
and
or
push
fisttps
xchg
in
lods
sbb
test
xchg
ljmp
cmp
in
add
push
out
shr
mov
or
pop
or
sbb
adc
jns
mov
push
test
pop
lret
push
mov
add
mov
sti
cmp
nop
orb
test
xchg
pop
lret
and
pushf
pop
mov
aam
push
insl
stc
mov
jbe
sbb
pop
shl
fisubrl
leave
inc
inc
cmp
pop
mov
arpl
mov
push
adc
loope
push
cmpsb
sahf
xchg
mov
in
mov
inc
cltd
mov
incl
cmpsl
sbb
js
fcmovnb
jns
icebp
xchg
je
ret
testb
ds
inc
loopne
mov
leave
dec
sub
pop
mov
mov
loop
add
pop
inc
stc
addr16
pop
inc
mov
dec
enter
jmp
cwtl
or
lahf
leave
aaa
dec
lea
pop
loope
lods
and
mov
cmpsl
jnp
test
out
data16
shl
lock
es
xchg
sbb
sbb
lds
push
ja
xchg
adc
mov
mov
cmp
cmp
jecxz
push
cmc
repz
mov
call
xor
movsb
arpl
out
cwtl
inc
add
fnstcw
xor
xchg
pusha
add
aaa
xor
pop
jae
sti
and
dec
xor
mov
add
mov
fs
test
adc
dec
push
insl
sbb
dec
movsb
mov
dec
mov
xor
aad
and
cmpl
jo
jnp
sbb
pop
ds
shrl
add
and
stos
push
in
push
decb
cmpsb
pop
sbb
setae
pushf
push
leave
test
add
and
dec
jecxz
out
test
lahf
sbb
test
jno
aad
pop
inc
and
out
mov
pop
mov
inc
sub
js
stos
push
pop
out
pop
push
or
dec
add
mov
xor
cmpsl
jo
inc
pop
mov
inc
daa
popf
push
aas
fldl
dec
lea
std
and
loopne
adc
cmpl
out
stos
push
rolb
cmp
sub
frstor
dec
fcoml
pop
mov
xor
xchg
leave
xor
dec
decl
inc
push
aad
add
adc
lea
inc
jp
adc
imul
inc
lret
clc
adc
xchg
int3
fstps
xchg
icebp
xchg
and
aam
mov
insl
lds
xchg
insl
inc
pushf
testl
ret
sti
fiadds
rorl
sub
in
push
loop
test
xor
push
add
add
jl
pop
mov
add
and
add
sbb
cli
stos
add
shrb
daa
and
cmp
push
xor
jne
mov
xor
sub
addr16
data16
aam
push
enter
mov
xchg
cmpsl
ret
mov
sbb
sub
pop
jle
cld
xchg
push
fldenv
loop
lcall
add
je
xor
pop
outsb
and
data16
cmp
repz
movsb
pop
xor
sar
adc
pop
jle
ja
cmpb
aad
rcrl
mov
dec
and
lods
rorl
cltd
xlat
imul
cwtl
jae
in
fcmovnb
or
dec
sbb
lret
sbb
cmp
test
dec
xor
icebp
stos
popf
sbb
push
stos
inc
push
outsl
mov
ret
lea
and
xor
lods
lret
ret
rol
js
jge
call
jmp
push
push
jb
data16
dec
addl
sub
cmp
enter
lods
push
in
loop
inc
jbe
sbb
call
dec
jb
inc
ficoml
loopne
call
xchg
outsb
dec
mov
out
cli
test
jle
and
push
adc
adc
mov
inc
xchg
out
mov
push
ja
xor
push
sbb
jg
dec
jmp
out
and
mov
sbb
add
sbb
std
xchg
xchg
cs
xor
jnp
inc
ret
fwait
dec
sbb
mov
jno
testl
jle
dec
nop
mov
jnp
adc
call
add
or
adc
cmp
outsl
lret
stos
mov
mov
ljmp
lret
xor
pop
add
mov
lock
mov
aas
lret
enter
mov
inc
and
lea
jle
push
fdiv
lds
jne
pop
xor
push
and
gs
sub
mov
fs
or
sarb
adc
imul
lods
push
insl
pop
xor
push
xchg
push
pop
outsb
and
leave
pop
sub
push
das
sub
mov
mov
lcall
push
ret
sub
dec
sbb
lcall
or
push
and
in
sub
xchg
jb
cmp
xchg
pop
xor
scas
stos
adc
pop
imul
jmp
aas
jb
ja
sub
jbe
pop
push
add
int
arpl
leave
pop
into
movsl
lods
cli
sti
shl
jle
adc
cmc
xchg
loopne
dec
mov
pop
xchg
subl
in
fs
adc
and
fmul
mov
int
ret
sbbl
mov
dec
cmc
xchg
mov
stos
push
dec
nop
test
outsl
adc
xchg
cmp
jp
fnstcw
sarb
xor
out
jge
je
vmovd
pop
sbb
mov
mov
cmp
fdivs
jp
xchg
stos
jp
icebp
iret
fcomps
inc
lock
mov
push
call
daa
dec
xor
testb
lcall
xchg
sbb
insl
in
fdivs
fstps
inc
shrl
push
mov
adc
or
or
negl
test
jnp
xchg
sbbl
jno
nop
jo
jmp
pushf
push
movsl
in
repnz
xchg
push
call
out
xchg
jecxz
lock
sbb
xor
subb
aas
sbb
addr16
mov
sub
push
out
insl
dec
xor
stc
daa
fiadds
fidivs
jmp
rcrb
sub
cmp
mov
fidivrs
je
pop
add
xchg
pushf
test
pop
inc
push
mov
or
mov
in
pop
lods
jnp
insl
inc
xchg
cmpsb
xchg
cmp
testl
dec
lods
das
push
popf
mov
mov
push
cmc
mov
cltd
and
fistps
roll
pusha
and
add
mov
push
ficomps
imul
repz
sub
push
cmpsl
movsb
icebp
cli
pop
mov
in
mov
jl
mov
push
sbb
add
cltd
dec
addr16
mov
loope
add
cmp
ds
and
dec
push
std
mov
out
stos
sbb
ds
lock
push
adc
add
lret
sbb
mov
mov
mov
inc
fwait
dec
mov
in
stos
jbe
xor
pop
icebp
add
daa
iret
push
jg
inc
or
repnz
sub
aad
pop
jecxz
sbbb
sub
icebp
xor
data16
arpl
fsubrl
lock
aaa
call
xchg
dec
push
xor
sub
ja
cmpsb
scas
ret
add
mov
xchg
adc
xchg
lods
or
mov
movsb
add
mov
sub
shll
fstp
rorl
mov
cmp
mulb
loopne
stos
or
cmpsb
lcall
and
mov
lock
ss
lock
jp
inc
lret
cli
jmp
or
xchg
lcall
push
xchg
repnz
cmp
or
jg
in
dec
mov
lret
sti
shrb
stos
pop
ret
mov
ret
cmp
pop
daa
dec
lret
out
ss
cmp
das
cmp
mov
icebp
outsl
repz
loop
orb
test
movsb
inc
lcall
cmp
xchg
xchg
mov
cwtl
ja
out
sub
or
idivb
mov
inc
mov
adc
xorl
out
mov
jp
negl
pop
sub
es
cs
jo
jno
outsb
faddp
das
scas
jns
push
dec
pop
ja
shll
imul
stos
mov
sbb
mov
scas
jno
adc
fdivrp
ss
or
sbb
test
xchg
lret
mov
je
in
jnp
xchg
enter
dec
xchg
nop
in
add
pop
out
adc
pop
dec
xor
in
js
xchg
enter
divl
xor
enter
mov
or
addr16
jne
add
popf
imul
add
scas
rolb
sbb
bound
insl
dec
sub
push
add
add
jecxz
xchg
aaa
imul
dec
mov
mov
stc
adc
sbb
cmp
dec
push
test
fwait
sbbb
cmp
out
ret
es
test
shlb
sahf
shrl
outsb
rorb
cmp
mov
xchg
ja
push
push
rep
lock
add
rclb
and
mov
xor
nop
dec
push
out
mov
fdivrs
xchg
outsb
mov
mov
pop
out
adc
insb
hlt
and
inc
mov
mov
ret
and
inc
loopne
xchg
jb
in
ja
cmp
orl
xor
add
push
mov
addr16
jo
repz
cmpb
and
leave
dec
nop
xorl
ret
adc
add
mov
inc
dec
out
cmp
sbb
mov
call
mov
add
addr16
pop
dec
jno
add
sub
scas
push
mov
scas
in
enter
push
in
cmpsl
out
dec
outsl
int
stos
xchg
dec
or
xor
and
rclb
insl
xor
outsb
xor
add
enter
xor
test
repnz
mov
testb
sbb
enter
fcomip
push
mov
pop
mov
ja
iret
mov
fidivl
sbb
je
inc
mov
mov
jp
aas
sahf
loop
ja
popa
iret
in
jmp
movsl
cmp
xchg
jle
inc
push
sub
out
hlt
incb
push
pop
mov
pop
jl
mov
sar
or
dec
push
dec
cli
jno
fdivr
and
jmp
sahf
or
mov
jo
cmpsl
cmp
repnz
or
shl
xor
dec
rorb
fiaddl
mov
xchg
sub
fsubr
jbe
sub
mov
jle
pop
inc
mov
jb
xor
adc
rclb
sti
inc
data16
sub
into
xor
lods
mov
int3
xor
pop
shlb
dec
push
sub
push
inc
jb
mov
hlt
sbb
imul
sub
mov
fisttpll
dec
push
jle
js
push
mov
iret
orb
sub
loope
pop
inc
sbb
sbb
icebp
xchg
push
jle
adc
sub
and
adc
out
fucom
loope
or
pop
push
and
pop
js
test
test
and
clc
sarb
movl
int3
sbb
cld
lds
push
sub
jecxz
sbb
outsb
cs
sub
and
ss
loop
mov
mov
mov
cmpsb
add
scas
inc
cmpsb
mov
sbb
xlat
lea
fcoml
test
fcoml
or
clc
imul
xor
jne
sub
add
ja
cmp
sahf
jns
jae
stos
ret
add
das
jo
mov
cwtl
mov
mov
or
incl
pop
jmp
mov
xchg
mov
scas
add
das
push
imul
inc
inc
adc
stos
inc
inc
cmp
movsl
int3
xchg
inc
lcall
push
ja
adc
ret
dec
jbe
stc
mov
fcoms
out
fildll
repz
xchg
scas
sbb
in
ret
fsubrl
jne
jl
data16
lds
aam
or
fs
in
xlat
inc
jbe
hlt
in
andb
add
xlat
fisttps
ret
cli
dec
add
xchg
xor
inc
jae
push
lea
das
enter
cmp
lcall
xor
bound
jno
xor
sub
popa
data16
sub
jne
pop
cmp
or
scas
mov
push
push
das
cmp
mov
xchg
xlat
push
movsb
fwait
iret
les
andb
and
aad
ja
in
push
jmp
bound
pop
cmc
xchg
pop
lds
rcrb
xchg
or
sbb
mov
lcall
loopne
bound
mov
sbb
or
sbb
ret
xchg
xor
shlb
inc
loopne
cld
add
or
cmp
add
cltd
pop
or
sbbb
lea
mov
adcl
bound
in
push
test
mov
and
lods
mov
ret
mov
dec
test
jmp
cld
mov
ret
sub
fistps
push
fs
pop
ss
sub
movl
aam
loope
rolb
shrl
add
add
sahf
ljmp
or
fldcw
pushf
cltd
aas
dec
sti
outsb
xchg
jge
mov
push
push
aaa
out
sbb
mov
pop
cmovle
sub
lcall
aas
mov
dec
orb
and
xchg
out
fisubrs
push
mov
sahf
xchg
mov
ret
loope
pop
loopne
cmc
aam
popf
xorl
push
mov
add
jmp
fs
insb
in
jmp
pop
lahf
lcall
sub
aam
xor
push
sbb
cmpb
fstp
mov
shll
jo
std
xor
in
xor
call
fs
adc
push
mov
stc
ds
jecxz
adc
sub
in
xor
xchg
daa
mov
rcll
aaa
mov
adc
mov
mov
cmpsl
ret
and
and
lods
pop
mov
aam
cmpsl
add
cmp
inc
cltd
mov
mov
out
push
movsl
hlt
enter
imul
or
mov
push
test
jne
pushf
inc
fbld
sub
mov
cs
lahf
ss
push
movsb
cltd
aam
fsubrs
testb
loopne
mov
adc
xchg
lock
loop
sub
outsl
push
cmp
mov
xchg
lret
mov
jns
lods
dec
repz
ja
mov
mov
and
fsubrs
mov
adc
adc
mov
outsl
outsb
inc
inc
xor
inc
sbb
pop
bound
inc
lock
inc
mov
mov
lock
push
xchg
sbb
pop
pop
lret
sub
jge
dec
decl
shll
inc
or
cmp
add
je
xor
ss
repz
inc
sub
mov
mov
push
or
rclb
inc
loop
xorb
ss
data16
cmp
rcrl
shrb
andb
repnz
movsb
or
mov
sbb
xchg
cwtl
ret
enter
cs
adc
jns
jbe
loopne
jp
sbb
sub
in
rclb
inc
pop
je
jo
mov
pop
movsb
std
xchg
ljmp
adc
inc
and
test
lock
jne
mov
fsubrp
inc
sub
addb
dec
adc
mov
push
adc
inc
repnz
or
jno
lcall
mov
insl
into
sarl
and
call
jle
or
sub
insl
orb
aaa
jne
into
int3
bound
push
jg
jle
rclb
shll
js
jg
cmc
mov
or
lret
sub
or
lcall
ljmp
inc
movsb
push
pop
test
push
popf
mov
cmpsb
out
jp
sub
popa
scas
jae
mov
movsl
adc
jb
scas
bound
movsb
or
or
push
mov
pop
jg
sub
jg
inc
aaa
jo
sub
or
imul
mov
push
pop
and
mov
cwtl
mov
mov
pop
pushf
nop
loopne
testb
sub
dec
sbb
jmp
dec
push
jo
xchg
cmc
ret
sub
pop
inc
js
pushf
cmc
insl
and
popf
fs
xor
jge
clc
sub
aad
sbb
sahf
shll
push
push
xlat
push
mov
out
imul
xchg
hlt
out
mov
dec
and
out
andl
sub
test
sbb
push
ja
add
shrb
es
or
iret
sub
sbb
cli
mov
sbb
add
cmp
xchg
jae
cltd
test
pop
lea
in
sarl
arpl
push
sub
pop
in
loop
xchg
and
repnz
std
je
out
cmp
pop
sub
sub
test
mov
icebp
in
cmp
into
and
cwtl
ja
add
lock
jo
rol
inc
pop
shll
sub
das
aas
sbb
add
ret
mov
pushf
pushf
lahf
cltd
jnp
in
std
mov
lcall
xlat
fiadds
add
sub
or
mov
push
hlt
jmp
mov
mov
ss
aaa
sbb
out
stc
mov
mov
fsubl
lahf
data16
int3
or
inc
push
push
pop
and
je
push
mov
mov
inc
xadd
lret
clc
hlt
fs
stos
mov
in
adc
lea
lret
inc
adc
stos
test
je
pop
sbb
push
xchg
hlt
in
mov
test
jns
push
in
sbb
jmp
xor
add
xlat
lock
in
xchg
es
loopne
cltd
imul
xchg
mov
xchg
inc
into
lcall
pusha
pop
mov
gs
jg
fldl
in
test
or
test
das
sahf
mov
mov
and
lds
clc
repz
adc
xchg
orl
cld
movsb
cmc
outsl
in
xchg
xor
enter
jle
inc
sbb
mov
pop
xor
push
mov
imull
jbe
xchg
cmp
mov
lods
inc
jo
mov
stc
add
lods
call
cmp
ss
cltd
xor
lods
dec
mov
cltd
mov
pop
ficoml
sbb
push
shr
scas
lods
imul
mov
add
mov
fisubrs
cmp
sbb
mov
cltd
out
mov
cmp
nop
add
sahf
in
stc
or
mov
sub
push
cmc
fldcw
xor
loop
nop
stos
mov
test
fdivl
jb
sarb
fmulp
push
jp
xchg
ss
mov
pop
add
imul
pop
repnz
movsl
idivl
cmp
imul
push
mov
jmp
dec
fsubs
add
jp
les
add
or
mov
adc
lock
js
loope
mov
dec
test
in
jae
cmp
or
mov
mov
out
imul
mov
inc
xor
push
and
inc
jns
mov
cmp
lea
shll
aam
fwait
test
mov
out
jb
add
mov
shll
pop
inc
or
add
lods
jp
inc
pop
pop
sahf
mov
xchg
mov
adc
ja
mov
mov
in
data16
mov
add
movsl
mov
jp
xchg
fs
cli
outsb
aaa
jge
pop
test
inc
out
out
test
das
xlat
mov
add
fnstenv
stos
mov
out
divb
and
ret
lds
nop
mov
jno
in
xchg
mov
testl
loop
xor
jge
test
pop
inc
ret
xchg
xchg
outsl
pop
lea
sub
into
push
nop
xchg
js
push
pop
arpl
in
sbb
inc
add
daa
sbb
pop
out
mov
sti
es
das
test
inc
cmpl
xor
js
shll
lods
jge
testb
scas
xchg
inc
loop,pt
add
add
mov
pop
pop
lret
js
push
in
sbb
mov
or
xlat
mov
aaa
adc
dec
jge,pn
dec
cmpsb
mov
mov
int3
mov
rorl
pusha
mov
xchg
xchg
mov
xor
fdivl
mov
mov
das
xchg
test
nop
sub
add
out
repz
jo
dec
je
cmp
dec
data16
push
push
fsub
sbb
jecxz
ja
inc
cwtl
sub
jne
mov
mov
push
cld
cltd
add
adc
xchg
mov
mov
out
aaa
mov
xor
into
and
lret
das
frstor
adc
cs
lock
mov
push
popa
fidivl
out
sbb
mov
call
jns
pop
rclb
jmp
push
std
lahf
cmp
and
in
fcompl
jl
sbb
subl
or
mov
sti
mov
into
out
push
inc
and
mov
push
lods
popa
dec
scas
xor
push
cmp
roll
jg
push
sbb
adc
mov
data16
add
fnsave
jb
dec
int3
jmp
inc
and
lods
insl
imul
pop
add
cmc
fs
push
and
dec
cmp
push
cld
cmp
push
idivl
or
sbb
call
ds
xchg
leave
inc
aas
ja
fwait
icebp
jnp
pop
sub
clc
mov
dec
mov
xor
test
pop
sub
push
jmp
fsubr
bnd
in
or
xlat
sub
xchg
sbb
push
or
repz
daa
mov
dec
or
in
inc
fcoml
addb
jmp
dec
lds
mov
cmp
jns
or
leave
xchg
scas
add
je
je
aaa
and
and
xor
notl
mov
push
testb
fiadds
loop,pt
xor
and
sub
sub
push
push
icebp
sbb
and
dec
loopne
lods
out
out
or
add
aam
cwtl
push
mov
xor
jne
call
scas
cs
mov
testb
int3
vcvttpd2dqx
adc
aas
and
cmpsb
les
xor
nop
fistpll
rolb
jb
daa
xchg
aad
mov
cmp
add
sub
movsb
pushf
mov
mov
ret
loopne
setp
fsubrl
test
or
bound
aam
or
push
ret
js
push
mov
pop
jo
cmp
test
sub
push
divl
insl
int
mov
pop
testb
and
pop
jge
mov
int
inc
dec
flds
pusha
out
cli
incb
pop
mov
xchg
mov
ja
pop
lods
sub
xor
int3
test
inc
pop
xchg
daa
cmp
cmp
mov
mov
add
xor
xor
add
je
cmpsl
sti
fldcw
pop
inc
cmp
ss
xchg
or
je
test
jb
popf
jae
and
out
jge
dec
cmp
idivl
arpl
mov
mov
pushf
mov
cli
push
dec
xchg
and
xor
lea
dec
ret
mov
std
xor
pop
pop
xor
int
cmpsb
jns
mov
push
movntq
mov
jecxz
jb
inc
jmp
xchg
in
pop
push
cmpsb
push
and
fisubrs
sbb
cmc
sbb
stc
sbb
out
add
push
inc
vmread
dec
xchg
outsb
mov
push
and
xor
jb
rol
xor
mov
js
stc
outsb
testb
jns
sub
lret
or
jecxz
sub
jmp
mov
add
outsb
and
cltd
cmp
out
shll
arpl
test
enter
and
in
std
pushf
cmpl
jge
loope
pop
out
mov
jle
mov
insl
sbb
das
mov
mov
pop
jo
sbb
adc
dec
mov
inc
lcall
daa
mov
lcall
sbbl
inc
daa
lea
loop
mov
call
xor
lahf
add
add
adc
pop
mov
test
and
or
mov
stos
push
test
push
lret
inc
enter
ds
cmp
je
xchg
jmp
lea
hlt
or
fmuls
sub
mov
rolb
bound
xchg
adc
out
mov
fisttpll
pushf
cmp
inc
mov
cs
scas
rcll
mov
push
call
xor
add
lahf
and
pop
sub
push
fs
repz
es
sub
push
fmull
add
pushfw
in
cs
gs
and
adc
imul
cmp
xchg
aad
pop
sub
jle
jmp
mov
xchg
pop
xor
sbbb
jmp
and
cmp
incl
test
cmc
jns
dec
and
pop
jg
lret
gs
test
out
cmp
jb
orb
addb
test
push
jno
ficoml
ret
insb
cmp
or
push
daa
cmp
or
mov
jne
adc
pop
adc
imul
inc
aaa
push
or
xlat
push
not
pop
mov
pop
addb
lret
inc
push
push
sbb
cs
jne
push
cmpsb
jp
xlat
pop
sbb
clc
js
in
ss
out
pushf
pop
decb
push
stc
ret
pop
inc
sbb
lcall
outsb
cmp
mov
adc
jno
and
int3
push
mov
in
mov
push
in
or
xchg
pop
push
cmp
test
loopne
push
test
shrl
mov
push
gs
jno
mov
movb
mov
test
jnp
insb
jns
repnz
cmp
stos
pusha
adc
dec
push
jne
pop
leave
xlat
fs
repz
and
test
mov
es
cmpsl
outsl
scas
and
subb
mull
jecxz
mov
mov
imul
xchg
out
adc
shlb
mov
mov
lcall
jne
jmp
inc
cmc
sub
fistl
out
popf
sub
xchg
mov
cmp
push
sahf
jbe
sahf
addr16
mov
lahf
aam
shlb
aam
aaa
movsl
movsb
push
inc
dec
xor
aaa
jno
add
mov
inc
push
push
or
out
sbb
jno
cmp
enter
xor
insb
stc
out
lds
jae
loop
dec
cmp
fnsave
jne
leave
outsl
cmp
out
call
cmp
repz
lock
fiadds
lcall
subl
lock
jl
xor
jo
or
mov
and
test
ljmp
jge
imul
lods
pushf
pusha
aaa
iret
cli
or
mov
and
mov
lea
movsl
push
test
pop
jae
rclb
stos
mov
or
pop
in
rol
ret
mov
arpl
rolb
loop
repnz
std
pop
sti
lds
cmp
jl
cmpsb
dec
inc
adc
cmp
dec
mov
inc
or
popf
add
push
xorb
dec
sbb
xchg
insb
jmp
movsb
cmp
cmpsb
out
and
loop
mov
inc
popa
insl
shr
mov
lea
pop
or
jge
or
mov
arpl
mov
add
stos
xor
jge
aam
push
and
mov
fnstcw
mov
pop
xchg
sbb
mov
imul
mov
lret
fists
cmp
cmp
push
loope
pop
out
cwtl
push
out
cmp
stos
xchg
add
cmpsl
mov
adc
xchg
aas
xchg
jo
loope
or
pusha
in
test
xor
bound
push
sbb
dec
xor
rorl
outsl
mov
lods
iret
adc
adc
mov
push
repnz
movsl
test
cmp
xor
pop
nop
mov
mov
xchg
xor
test
add
jne
jg
scas
test
jmp
jp
mov
push
add
push
les
movd
add
mov
adc
jmp
test
rcll
dec
sub
rorb
or
pop
mov
add
ret
jne
pop
pop
dec
mov
popl
ret
xchg
mov
int
mov
ss
and
pushf
dec
jnp
sub
xlat
xor
or
sti
scas
cmp
sarl
imul
push
int3
or
filds
mov
sbb
xchg
pop
adc
or
lahf
stos
dec
pop
sbb
out
jno
cmp
out
mov
in
jl
mov
adc
or
insb
xor
or
test
and
loopne
repnz
notb
xor
pop
ljmp
pop
xchg
pop
popa
lods
cwtl
xor
outsb
loop
arpl
push
xchg
mov
mov
lds
lods
jp
pop
cmp
shll
insb
mov
inc
loop
mov
out
sbb
ds
lock
in
mov
test
fs
dec
popa
cltd
push
mov
into
sub
jge
lcall
add
cmp
mov
xchg
inc
add
lds
rcr
mov
fldcw
adc
sbb
xchg
in
mov
or
fs
pop
imul
mov
subl
repz
pop
sbb
push
adc
stc
xchg
inc
outsl
cli
loop
scas
jo
push
divl
hlt
add
xchg
jg
mov
movsl
test
aaa
dec
xor
cmp
lcall
xchg
and
cmpsb
hlt
sub
nop
mov
jge
repnz
adc
lahf
imul
mov
mov
adc
or
clc
sub
pop
test
mov
decl
jnp
aam
or
hlt
aam
mov
sub
push
mov
cld
push
outsb
jns
push
mov
and
mov
jle
gs
rorb
inc
cmp
lret
sahf
xchg
add
jecxz
inc
out
mov
pop
shrb
repnz
adcb
cs
aad
mov
rcr
sbb
xor
mull
cmp
aaa
test
jge
mov
gs
imul
push
xchg
mov
sti
add
stc
adc
xchg
mov
mov
imul
test
xchg
and
enter
sbb
pop
shlb
dec
or
ja
out
mov
sub
dec
lcall
mov
mov
mov
mov
loope
mov
les
or
negl
cmp
fldl
xchg
xchg
stc
cs
pop
pcmpeqb
cmp
xlat
out
sub
enter
adc
icebp
sbb
mov
sbb
push
pushf
sti
mov
mov
push
shll
nop
xchg
jmp
ficoms
out
leave
pminsw
pop
inc
add
mov
inc
pop
jecxz
mov
mov
insl
dec
fcoml
enter
or
sbb
inc
shl
jns
orb
pop
daa
and
pop
and
mov
shl
dec
fwait
mov
roll
dec
mov
mov
sub
cmp
push
pop
bound
nop
mov
je
and
sub
mov
mov
add
pop
sbb
xchg
outsl
mov
push
fwait
imul
xchg
mov
pop
mov
dec
or
xchg
cld
das
cltd
cmp
sub
jge
sub
and
pop
lcall
inc
leave
or
cmp
xor
xchg
or
arpl
cmp
dec
out
daa
and
les
mov
push
inc
icebp
pop
cli
rcl
call
inc
jmp
dec
mov
adc
cltd
push
dec
adc
and
loop
imul
xchg
fsubrs
mov
inc
mov
out
or
xchg
adc
movsb
and
popa
pop
sub
sbb
xor
xor
je
ja
out
xor
in
xor
fistpll
testl
int3
mov
cmp
dec
fbld
xor
jnp
pop
cmpsl
pop
insb
lret
jmp
jns
push
mov
sarl
adc
mov
scas
adc
xchg
sarb
pop
inc
xchg
inc
fidivs
aam
pop
std
inc
xchg
push
sbb
push
loope
rclb
xchg
jp
cmp
jg
out
roll
sahf
pop
push
aam
jb
lds
xor
xor
jns
or
cmp
mov
inc
and
nop
aaa
icebp
lret
mov
jno
into
or
push
sbbb
cmp
ja
cltd
pop
lods
xor
inc
cmp
repnz
adc
fadd
xor
pop
mov
icebp
lock
arpl
or
cmp
pop
sarb
cld
or
pusha
mov
movsb
pop
les
dec
stos
scas
in
dec
cmp
add
xchg
test
fs
div
repnz
inc
lret
mov
call
mov
lahf
dec
inc
xchg
in
or
out
data16
negl
push
mov
out
inc
xchg
imul
cmp
sub
insl
gs
dec
hlt
mov
cmp
pop
fiadds
dec
insl
xchg
call
jl
sbb
cmc
push
pusha
popf
sbb
push
push
xlat
mov
scas
sti
add
stos
jle
pop
add
fmull
xchg
sub
pusha
pop
jnp
dec
icebp
test
cmp
xchg
and
les
sbb
fidivl
test
stc
inc
add
aaa
cmc
test
sbb
xchg
mov
aam
insl
leave
shll
inc
pop
out
fnstsw
mov
pop
aaa
sbbb
movsl
loope
and
addb
mov
arpl
mov
js
std
jmp
xor
push
jb
inc
dec
daa
inc
push
in
imul
pop
push
mov
leave
dec
pop
loopne
adc
pop
in
test
movsb
ret
dec
mov
out
ret
mov
sbb
fildl
add
jl
call
adc
cmp
push
or
roll
dec
xor
lods
or
in
daa
jl
add
sbb
imul
pushf
mov
jecxz
jnp
outsb
sub
dec
and
xchg
sbb
test
shll
add
jne
mov
pop
and
or
xchg
fcomp
stos
add
inc
cmc
cmpsl
pop
mov
pop
mulb
mov
and
add
or
out
mov
js
mov
loopne
push
mov
int
mov
cmp
sbb
or
add
pushf
out
hlt
imull
cmp
ja
and
jmp
mov
scas
fistps
mov
pop
or
in
mov
out
in
add
insb
fwait
xor
and
dec
fwait
mov
and
insl
rcll
repnz
cmp
outsl
adc
mov
or
mov
mov
fs
mov
dec
scas
or
push
add
cmp
add
lds
fwait
inc
enter
loopne
cmp
stos
mov
shrb
jbe
pop
inc
inc
lods
add
jmp
outsl
inc
or
lahf
notb
insl
cmp
ret
push
or
ja
jg
and
int3
aad
test
int
push
inc
std
mov
insb
add
icebp
iret
loop
fsubl
fsubrl
pop
and
mov
cld
xchg
push
and
pop
mov
adc
xchg
nop
mov
xchg
imul
jae
std
pop
mov
mov
punpckhdq
imul
in
sub
es
jb
sbb
loope
sbb
sub
nop
pop
and
cmc
jno
scas
adc
add
or
sub
call
jns
nop
dec
mov
push
push
add
push
stos
sbb
mov
jae
dec
nop
pop
gs
in
test
aad
add
xor
xor
jmp
rclb
and
dec
pop
push
sbb
lret
inc
lahf
dec
mov
mov
mov
or
inc
bound
outsb
dec
popf
gs
and
leave
sbb
insb
add
pop
pop
repz
aad
or
lea
pop
test
xor
sub
and
mov
movsb
cmp
mov
sarl
and
mov
sbbl
jecxz
add
mov
addr16
mov
enter
stos
inc
mov
sbb
popf
sub
jo
and
cmp
adc
pop
push
adc
mov
sub
pop
push
nop
dec
mov
fs
fwait
je
mov
adc
ret
mul
fistps
and
addl
jle
aas
or
dec
pusha
cmpb
popa
and
cmc
push
sahf
inc
mov
mov
test
cld
dec
mov
pusha
xor
clc
or
sub
repnz
jmp
xchg
shll
lret
lahf
lret
icebp
mov
aad
lcall
enter
dec
lret
inc
fnstcw
mov
loopne
jae
sarb
loopne
jbe
pop
cmpsb
mov
pop
lods
repz
pop
xor
xchg
in
cltd
pusha
dec
push
insl
sub
jbe
pop
pusha
shrl
icebp
addr16
jp
dec
int3
test
sub
and
repnz
imul
push
jmp
adc
nop
add
push
mov
jmp
jne
lcall
push
fbld
dec
jge
mov
cmpsl
cmp
iret
in
mov
xchg
xchg
cltd
rorb
jb
lret
push
sbb
aaa
mov
dec
pop
lea
lods
and
outsl
out
repz
and
sbbb
push
out
adcl
arpl
mov
std
cltd
insl
add
add
xor
jecxz
add
or
aad
or
mov
js
and
in
add
pop
push
in
imul
mov
andl
movsl
int
test
pop
adc
xchg
lock
jecxz
mov
popa
stos
inc
imul
mov
das
call
pop
pop
mov
shlb
dec
stos
xchg
cmpb
stos
lods
xchg
add
mov
jbe
dec
dec
inc
sub
cmpl
dec
je
cmp
popl
scas
jge
shlb
inc
sub
ss
fcomi
xchg
sti
lret
dec
mov
cmpsl
cmpsb
lahf
lret
xchg
cmpsb
adc
ljmp
xor
lahf
addr16
loop
subl
mov
bound
dec
jae
pop
inc
roll
in
aam
adc
push
icebp
mov
xor
lea
pushl
aam
push
lret
mov
mov
movsb
xchg
fcomp
push
sbb
test
and
test
je
adc
fildl
mov
push
mov
lods
jns
cmp
and
sbb
fstl
xchg
je
stos
es
pushf
mov
loope
mov
mov
decb
mov
or
adc
xor
bound
or
sub
daa
lea
dec
adc
sti
sub
xchg
jle
hlt
xor
data16
or
sbb
jge
mov
aas
pushl
adc
cwtl
daa
lock
pop
std
mov
in
cmp
mov
outsb
pop
testl
pop
shl
repnz
repz
xchg
dec
push
movsb
les
jo
adc
daa
notl
fidivs
inc
call
inc
mov
stos
in
shll
mov
xchg
out
test
out
out
mov
inc
lds
shl
mov
ss
stos
lods
incl
mov
mov
jae
mov
into
in
mov
sahf
or
xchg
iret
xchg
sbb
xor
hlt
pop
in
cmp
xor
repz
mov
xor
sbb
sarl
pusha
pop
rorl
push
aaa
mov
int3
xchg
sbb
xor
mov
pop
inc
dec
mov
jmp
sti
lea
mov
enter
or
mov
or
pop
scas
mov
js
aas
pop
rcll
cli
pop
xchg
lods
sbb
mov
pop
sub
mov
jno
fisubrs
jo
aas
xor
or
stos
sub
or
jp
fistl
ljmp
mov
cmpsb
add
add
adc
push
int3
xor
cltd
add
es
pop
mov
xchg
mov
pop
lcall
out
fwait
jl
test
cmp
xchg
mov
scas
ljmp
cmp
imul
insl
dec
lcall
adcb
xor
xchg
stc
jg
adc
ljmp
cmpsb
outsb
fs
sahf
add
push
fisubrl
lret
lea
adc
add
and
mov
push
push
sub
push
lods
popl
ret
ss
mov
pop
dec
test
push
xchg
shlb
loop
mov
insl
adc
push
repz
fdivrp
out
dec
fsub
pop
pop
sub
lods
out
js
push
mov
mov
stc
mov
faddl
mov
mov
aaa
xchg
push
push
cli
cmp
decl
pop
cld
xchg
imul
cmc
mov
out
jge
rclb
ret
dec
stos
mulb
dec
ljmp
out
adc
xor
sbbb
enter
ljmp
dec
mov
test
in
mov
xchg
dec
pushf
lret
dec
or
fs
pop
pop
fwait
sahf
lret
push
sbb
cmp
pop
jo
push
fsubl
push
inc
dec
repnz
inc
dec
inc
jge
dec
mov
pop
cmp
jmp
jo
mov
sahf
jmp
lret
mov
or
repnz
ss
inc
cwtl
cmp
and
adc
testb
cwtl
ja
mov
mov
dec
push
mov
sub
mov
mov
repnz
int3
or
test
in
loop
cmovge
adc
xchg
rorl
repnz
or
add
std
iret
pop
in
pop
adc
push
jbe
push
dec
loopne
test
pusha
sbb
mov
decb
test
movsl
or
push
sbb
imulb
jb
in
jbe
test
addb
sar
inc
sub
dec
pop
mov
push
sbb
imul
adc
lds
icebp
mov
or
imull
xchg
mov
sub
arpl
das
cmp
inc
inc
nop
pop
movb
pop
ret
aad
add
out
xchg
pushf
sub
adc
orl
popa
mov
xlat
xchg
jp
dec
shlb
xchg
icebp
loop
and
mov
call
mov
popf
and
lods
push
sahf
test
mov
pop
pop
outsb
push
mov
aam
pusha
loopne
fisttps
mov
adc
insl
mov
and
dec
addr16
outsb
sub
adc
dec
mov
xchg
out
xchg
inc
dec
in
dec
fstps
add
inc
outsb
cmp
push
test
push
xchg
mov
nop
imul
lret
jmp
test
mov
pop
sub
inc
filds
adc
or
cmp
imul
jbe
add
mov
cmp
mov
dec
sar
jae
sub
mov
int
inc
adc
jle
push
sbb
push
clc
scas
push
jl
push
mulb
shll
in
mov
inc
icebp
fs
lods
sub
cmp
mov
pop
push
mov
gs
inc
divl
or
jg
cmpsb
cwtl
push
addr16
sarb
cwtl
jmp
ljmp
sbb
ffree
push
jo,pt
mov
xchg
mov
or
mov
ja
mov
and
ret
pop
inc
iret
out
jns
lahf
xchg
test
xchg
fst
movsl
addr16
xchg
jb
daa
fucomip
cmp
shr
push
mov
shlb
cmpsl
in
jae
out
in
xchg
lcall
and
cmp
clc
and
sub
ret
roll
testl
mov
add
pop
mov
push
dec
in
nop
cwtl
jecxz
mov
and
jge
jp
popf
mov
push
dec
jmp
cld
mov
xor
stc
movsb
outsb
cld
mov
jo
in
cmc
add
adc
jno
shll
fidivrl
aad
cmp
fldcw
dec
das
pop
inc
jbe
mov
mov
mov
aaa
outsl
aaa
mov
and
jnp
imul
cmc
out
mov
dec
push
mov
cwtl
pop
jno
push
rcrb
mov
xchg
jb
jle
cmp
repz
mov
xchg
push
xchg
loope
pop
movsb
pop
adc
sub
push
xor
movups
lods
fisttpll
addr16
int3
jb
dec
mov
push
xchg
jle
adc
stos
pop
mov
jmp
out
add
rolb
add
mov
loop
and
cmp
and
push
cwtl
into
dec
add
fmull
xchg
push
sti
mov
sbb
mov
jge
mov
push
push
and
xchg
pushf
hlt
sti
push
scas
cmc
xchg
mov
cltd
mov
pusha
jmp
jno
xchg
rorl
sub
adc
push
jmp
mov
loopne
ljmp
out
aas
repnz
test
dec
stc
mov
pop
sahf
push
ret
idivl
jg
jecxz
xor
jne
test
xor
or
inc
out
jo
inc
loopne
mov
outsl
jmp
mov
pop
push
jnp
adcb
fistl
mov
jne
mov
imul
jns
jecxz
cmpsb
out
roll
push
stc
inc
sbb
mov
cs
sub
or
xchg
out
xor
sti
push
push
cmp
sarl
mov
stos
js
sub
jle
aad
outsb
mov
lret
sahf
jns
xchg
punpckhwd
push
nop
push
mov
sbbb
jnp
mov
pop
ds
ret
inc
subl
lods
dec
lret
out
inc
lock
mov
sub
int
stos
icebp
or
xchg
das
xchg
orl
scas
jno
mov
jnp
jne
mov
jecxz
sbb
ret
lods
xor
adc
orl
scas
push
std
inc
adc
shll
inc
mov
push
aad
add
addl
xor
imull
lods
bound
shlb
lcall
pop
mov
stc
xor
add
cmc
in
pop
out
lret
jmp
loopne
nop
mov
push
rorl
jbe
cmpsl
mov
mov
insl
cli
aaa
dec
imul
cmpsl
adc
xor
pop
data16
inc
mov
into
jp
mov
mov
jbe
mov
pop
fucomi
adc
mov
mov
cmp
push
shl
inc
inc
jp
call
inc
cmp
data16
mov
lret
divl
add
push
testl
or
ljmp
adc
cmp
daa
pushf
addr16
in
pushf
test
push
insb
xor
shrb
fs
mov
pop
mov
notl
mov
mov
add
mov
movsl
add
out
inc
dec
aaa
mov
xor
flds
popf
adc
lock
mov
lock
fs
cmp
out
cmp
pop
add
lahf
push
ret
fildl
mov
subl
inc
sbb
pop
sbb
push
push
fwait
movsl
pop
pop
dec
mov
ret
ret
stc
sub
xor
adc
or
out
dec
mov
inc
mov
insb
add
shrl
jmp
call
jl
cmp
stos
push
fs
or
cmp
xor
dec
iret
adc
dec
fisubrl
je
pop
test
inc
push
or
loopne
aam
mov
dec
jle
push
sbb
insb
pushf
sub
dec
inc
jno
push
adc
les
push
mov
adc
inc
pop
lods
jns
and
or
and
adc
iret
test
lods
test
popf
shll
lret
aad
mov
pop
adc
lcall
lea
fchs
popl
mov
mov
cmp
sarb
fnstenv
pusha
ss
fisubl
lods
push
inc
mov
cmp
xchg
in
mov
push
stc
dec
sbb
dec
out
inc
insl
movsb
and
and
mov
mov
push
xor
or
icebp
testb
movsl
adc
das
inc
daa
jbe,pn
ss
movsl
pop
xchg
and
dec
push
or
shll
push
cmpsb
lock
or
adc
je
push
and
push
sbb
pop
fcompl
lret
or
mov
dec
scas
and
or
jno
ficoml
fisubrs
rcrl
lds
dec
cli
enter
ret
sub
xor
stc
xchg
leave
pop
pop
cmp
das
imul
pop
xchg
jmp
pop
sub
dec
pop
mov
iret
test
mov
jo
cmovb
sbb
mull
push
push
leave
xchg
enter
lock
jb
xchg
jnp
sub
cmp
sbb
ljmp
stos
daa
xor
push
mov
dec
aas
mov
popa
push
arpl
push
popf
pop
and
xor
rcl
jo
or
lds
icebp
and
or
je
or
and
es
sub
rcrl
sub
mov
lahf
mov
fisubs
jge
push
fldl
addl
loopne
pop
adc
push
dec
xchg
add
cwtl
aad
mov
push
in
sub
out
and
push
pop
jecxz
jno
fwait
or
jo
mov
cli
or
inc
or
cmp
repz
loope
ret
aas
jecxz
jns
adc
and
xchg
test
mov
fwait
dec
pop
incb
mov
repz
mov
mov
pop
sub
push
and
jp
mov
pop
mov
xor
mov
mov
pop
scas
iret
pop
mov
pop
cmp
mov
cmp
das
jne
pushf
or
repz
ret
arpl
fcomi
jo
out
mov
fdivl
cltd
sbb
and
push
int
in
je
add
mov
push
mov
mov
jno
or
mov
test
jbe
and
imul
adc
dec
aam
fnstsw
xchg
es
and
push
std
clc
add
pushf
ljmp
jns
insl
outsb
sbb
cmp
adc
jecxz
add
sbb
dec
lret
pop
sar
jae
dec
imul
xchg
jne
stc
mov
lock
fisubrs
out
mov
push
mov
mov
and
add
dec
dec
mov
pusha
pop
sub
push
jge
cmp
sbb
enter
sub
mov
jns
int
push
orb
mov
shll
out
lret
lret
insb
insb
cmp
stos
test
pop
popf
adcl
cs
std
add
mov
mov
inc
ret
enter
es
ret
xchg
fwait
mov
sub
test
imul
lock
punpckldq
testl
iret
ljmp
inc
in
sbb
cmp
pop
mov
xchg
cmp
inc
negb
pusha
cmp
xor
push
insl
scas
in
xchg
and
lock
xor
je
pop
lcall
cmpsl
dec
repz
nop
lret
sub
insl
or
mov
inc
cmp
dec
or
stos
sbbl
outsl
shrb
xorl
xchg
outsl
sub
aam
mov
aam
out
cmp
mov
push
push
lret
xchg
popa
add
push
push
mov
scas
jle
lods
xor
daa
xchg
adcl
lcall
jae
push
test
pusha
movsb
outsb
scas
outsl
test
gs
inc
lock
jnp
push
jp
or
jo
push
imul
add
pop
pop
nop
mov
cmp
pop
jg
jl
adc
and
loope
push
ret
adc
cli
pop
adc
es
jle
int3
movsb
dec
add
ss
pop
inc
pop
loop
out
rolb
iret
jg
fwait
mov
cld
mov
adc
sahf
pop
add
push
dec
stc
in
int3
mov
jge
cmp
cltd
or
jae
or
fwait
jnp
call
push
popf
or
testb
scas
loope
jmp
cwtl
vcmpsd
jge
push
and
lds
adc
dec
pusha
test
or
loop
test
adc
jne
addr16
xchg
sahf
sub
lahf
scas
push
js
test
lahf
je
insb
test
xchg
jae
add
sahf
insl
lds
mov
xchg
push
mov
addr16
in
ret
pop
mov
inc
leave
stos
les
and
lds
stos
push
pop
movsb
xchg
sbb
in
jl
div
mov
arpl
xor
jbe
jg
bound
mov
push
insl
insb
in
mov
mov
cmp
adc
xlat
cli
dec
xor
std
mov
add
push
aas
repz
mov
rcll
arpl
push
xchg
cmpsl
inc
inc
jge
mov
fwait
mov
bnd
jl
push
pop
fcmovbe
cmp
pop
test
rol
sahf
dec
aad
mov
movsl
out
jmp
lret
mov
loop
in
mov
ljmp
xchg
and
int
popa
movq
inc
mov
rclb
xchg
inc
test
out
rorb
pop
add
push
andb
cwtl
loope
sub
hlt
xlat
cmp
les
mov
xor
sub
jl
jge
push
mov
rclb
or
stc
es
cwtl
and
push
clc
xor
out
push
daa
pop
inc
mov
outsl
and
scas
push
push
lahf
into
cwtl
sbb
cmp
xchg
pop
mov
cmp
push
push
mov
add
flds
lcall
adc
pop
rolb
orb
test
dec
jle
dec
ror
mov
clc
xor
in
sub
ret
jle
insb
push
les
ret
imul
xor
test
xchg
je
int
stos
cmp
cmp
add
mov
je
fxam
inc
aaa
pop
inc
xchg
pop
inc
test
jne
xchg
sahf
lcall
fimull
ret
inc
fdivs
mov
push
mov
jno
imul
push
or
sub
push
bound
or
dec
insb
daa
xchg
scas
testl
std
cmp
orl
test
dec
sbb
xor
jmp
leave
sub
lahf
outsb
fwait
pop
pusha
popf
insl
xchg
loope
imul
orl
dec
ret
mov
lret
addr16
adc
movsl
mov
inc
mov
xor
jg
adc
mov
sarb
popa
dec
pop
jae
sbb
nop
leave
sub
int
inc
loop
in
cmp
inc
xchg
lds
out
mov
callw
in
les
fsubr
ja
pop
dec
lret
push
mov
xchg
push
xorps
scas
jg
sub
sub
cmp
mov
push
dec
push
mov
das
inc
mov
mov
movsb
xchg
mov
out
xchg
imul
rcr
push
cmp
int3
cltd
daa
lret
mov
push
shlb
mov
and
cwtl
mov
stc
int3
mov
mov
inc
add
rcl
out
cmp
mov
push
lea
or
pop
ficoms
rcll
pop
xlat
pop
pop
mov
mov
popf
jmp
mov
add
jne
jb
mov
shr
or
add
lods
mov
lock
add
stos
xor
add
inc
ss
inc
lcall
jb
fmuls
xchg
add
jl
cmc
inc
in
gs
ss
mov
jb
push
xlat
mov
xchg
dec
repz
cmp
inc
shll
insb
mov
sub
sbb
add
fdivr
pop
and
sbb
mov
call
cmpsb
push
pusha
mov
cmp
push
xchg
sbb
cmp
jne
je
stc
inc
insb
add
popa
cmp
pop
cmp
imul
inc
sub
fbstp
sub
roll
ss
cld
mov
dec
gs
xor
bound
inc
arpl
mov
aaa
jmp
jo
out
add
pop
cwtl
scas
fmull
and
shrl
jg
mov
enter
push
leave
cmpsl
jecxz
mov
insl
shrl
cmp
mov
stos
push
push
or
cwtl
mov
imul
xchg
test
mov
inc
mov
mov
shll
test
inc
cli
mov
xchg
mov
cld
pop
iret
lods
push
mov
andb
dec
mov
and
or
clc
dec
ss
repz
popf
jle
push
jb
lcall
xchg
mov
push
movsb
sub
or
mov
xor
gs
cwtl
mov
sar
xor
fidivl
or
mov
and
out
sarl
jns
test
aas
pop
ja
mov
jb
fstpt
xchg
scas
je
pop
stos
mov
not
outsl
cmc
inc
es
shrb
mov
ljmp
testb
cwtl
xchg
cwtl
inc
aad
jae
xor
shrl
in
cmp
sbb
ja
lcall
adcl
int
scas
in
test
pop
mov
ljmp
jb
push
outsl
stos
adc
fsubs
or
xchg
sbb
div
pop
cmp
aam
cmpsb
push
jbe
pop
daa
push
cs
xor
sub
lds
into
scas
and
iret
imul
fisubrs
test
call
sarb
inc
sub
mov
movsb
pop
mov
mov
mov
jle
loopne
js,pn
sbb
add
mov
pop
inc
lods
sbb
aas
hlt
insl
inc
push
popa
test
paddsb
mov
add
cmp
pushf
in
mov
out
add
or
iret
add
dec
push
ja
pop
mov
xlat
cs
setnp
xchg
push
data16
sbb
hlt
jmp
sbb
pop
xchg
xchg
jae
xor
cmpsb
cmc
shlb
pushf
push
mov
fwait
js
and
test
sub
mov
mov
aas
cmp
aam
jp
addb
cmc
subl
xchg
sbb
mov
pop
jl
fs
jnp
mov
xchg
fsts
sbb
pop
shrb
mov
xchg
insb
fwait
pop
and
out
paddb
loop
sbb
cmp
test
ljmp
lods
outsb
pushf
add
lods
or
push
xchg
nop
xor
das
imul
mov
ja
imul
or
out
dec
pop
or
fucomi
aas
pop
sbb
add
into
mov
push
cmpsl
cmp
in
test
leave
push
shlb
test
ljmp
out
or
xchg
out
sbb
test
fdivs
aas
jmp
fdivrs
sub
int3
lcall
push
jle
mov
popf
push
xchg
bound
ret
mov
jle
push
or
adc
popa
lds
ljmp
popf
xchg
inc
xchg
and
mov
add
mov
pop
and
adc
aam
fstp
adc
xor
icebp
iret
movb
ss
sbb
mov
mov
jg
das
inc
leave
jl
xchg
lret
push
movb
adc
mov
repnz
bound
sub
or
cmpsl
push
mov
sub
sbb
cmp
jp
mov
nop
xchg
xchg
pop
jmp
div
ret
dec
lcall
mov
push
inc
cmpsl
jg
call
sub
rcrl
mov
mov
xchg
leave
adc
mov
pusha
dec
inc
xor
imul
aad
negb
dec
push
add
xor
sub
xchg
arpl
inc
jl
int3
dec
insl
loope
enter
xor
dec
xchg
dec
into
dec
lea
xlat
mov
call
js
or
push
adc
imulb
jg
loopne
subl
daa
add
aaa
mov
enter
sbb
and
fdivp
lods
jecxz
test
mov
and
dec
out
andb
mov
mov
mov
fadds
lahf
or
jbe
fcoml
mov
push
fisubs
sub
jmp
mov
imul
mov
es
ja
mov
push
outsb
and
ret
and
fidivs
test
out
je
push
pop
xchg
pop
mov
pop
roll
jp
ljmp
xor
sub
push
mov
dec
adc
push
add
stc
movsl
enter
and
mov
fbstp
mov
add
and
mov
pushf
sahf
dec
mov
cmpsb
push
xchg
jmp
add
jae
mov
outsl
or
jmp
sbb
outsb
fwait
movb
pushf
mov
add
xor
cltd
and
sub
lds
and
jb
sub
jmp
adc
cmpsb
idivb
add
push
mov
jle
out
cmpsb
mov
ja
pop
mov
dec
mov
das
movsl
sbb
mov
push
or
in
push
cmp
hlt
lea
mov
movsb
xchg
add
imul
fisubs
dec
in
inc
not
sbb
dec
sub
lods
jo
js
mov
pop
sbb
dec
xchg
dec
in
in
mov
inc
inc
test
xchg
cmp
mov
dec
sub
fsubl
outsb
inc
dec
push
xor
xor
jecxz
call
cmp
sbb
jnp
sbb
cltd
pop
mov
mov
adc
cmp
sub
fnstsw
aad
lret
sub
xchg
scas
nop
sbb
lcall
cwtl
popa
inc
ret
popf
fadds
into
stos
aas
pusha
sbb
or
ja
mov
fcomps
mov
shll
push
popa
push
jmp
xchg
mov
push
add
cwtl
push
pause
push
std
pop
xor
cmp
sub
cmp
rorl
xchg
adc
cli
daa
sub
xor
mov
push
cwtl
hlt
or
cmpsb
test
imul
outsl
pop
dec
ja
lods
sti
clc
and
xchg
cli
push
and
push
mov
out
arpl
mov
or
add
fstpt
insl
inc
movsb
add
mov
adc
xor
jge
iret
loope
out
fprem
pusha
sahf
std
stos
jmp
pop
xchg
and
arpl
push
pusha
das
inc
jnp
cmpsl
mov
idiv
xchg
aas
data16
or
fwait
gs
push
fdivrl
push
xchg
push
xor
sbb
lods
dec
dec
aaa
sub
into
jne
sub
ds
push
cmp
or
mov
sti
push
test
xor
movsl
jg
mov
jmp
push
lret
int3
jmp
dec
daa
push
loopne
dec
mov
sub
and
sbbl
mov
sbb
dec
mov
add
jne
es
jl
pop
and
and
jg
xchg
notb
sub
loop
lds
xor
xchg
cwtl
mov
movsb
in
rol
mov
xchg
mulb
lock
push
xor
pop
mov
lea
lods
andb
inc
inc
or
lcall
cld
jno
push
jg
xchg
cmp
dec
es
sahf
jmp
push
fs
lea
dec
std
ljmp
jno
das
inc
and
jecxz
push
or
movsb
test
hlt
stos
shrb
lods
and
dec
add
daa
add
out
pop
test
lret
jmp
jl
sbb
add
jb
lret
xchg
repz
mov
add
fcmovu
pop
repz
imul
mov
cmp
inc
cmp
xlat
insl
or
popa
inc
cmpl
jo
lock
mov
dec
dec
lods
dec
inc
pop
test
mov
mov
cmp
jp
or
cmpsb
and
push
sbb
mov
mov
jge
hlt
sahf
mov
ret
adc
mov
mov
nop
call
test
xor
daa
mov
cmp
sbb
leave
loope
cmc
popf
xor
mov
fistps
sarb
xchg
adc
das
outsb
or
xor
lock
adc
insl
inc
ds
sti
aas
mov
popf
stos
push
outsb
jp
scas
mov
push
adc
inc
mov
sbb
loop,pn
lock
pop
mov
dec
cmp
sbb
ds
mov
iret
jmp
out
add
sbb
push
fcomip
jle
negb
shrb
sub
dec
pop
inc
jns
sbb
fldcw
outsl
mov
adc
pop
jmp
mov
xor
cwtl
sbb
movsl
mov
xchg
adc
jae
in
jmp
xchg
sbb
fs
inc
xchg
jne
dec
aas
adc
xchg
aaa
stos
shr
adcl
xor
cmpsb
sub
xchg
addb
jmp
xchg
xchg
outsl
sub
mov
ljmp
xor
jle
and
inc
into
sub
xor
xor
in
jo
bound
pop
mov
mov
or
add
jl
push
out
call
adc
scas
cmp
popf
fwait
call
jp
jle
test
jo,pn
adc
push
mov
cmp
pop
adc
lock
pop
and
std
ljmp
adc
adc
sub
insb
xor
sbb
sbb
mov
add
cmc
pusha
call
xchg
int3
ja
aam
jp
adc
mov
imul
adc
push
inc
fistpll
les
fistpl
jb
push
cmp
pop
in
sbb
test
and
jle
daa
out
pop
push
sahf
into
lds
xor
scas
test
pusha
xchg
adc
jp
nop
rcrl
sbb
pop
push
loop
aas
mov
jno
jne
jl
inc
clc
ds
fisubl
mov
hlt
xlat
icebp
popf
sti
jg
test
and
or
std
mov
testb
stos
xchg
out
xor
fwait
lods
add
pop
decb
mov
movsb
inc
jle
adc
xchg
jle
mov
leave
pop
std
sub
aaa
sub
std
mov
or
pop
pop
loop
inc
and
dec
mov
xchg
mov
mov
mov
lcall
into
shl
fistpll
imul
jbe
ss
shlb
stos
sahf
mov
in
mov
sbb
sub
hlt
or
and
mov
clc
adc
mov
mov
or
sar
xchg
ja
or
lock
cmp
pusha
fsub
adc
aad
rcl
loop
or
push
jp
inc
ja
inc
fldcw
xchg
push
int
jo
or
push
push
pop
sbbl
sub
pop
push
and
ret
ja
adc
xchg
call
fwait
mov
ficoml
cmp
rcrb
xchg
inc
fisttpl
ret
sub
cmp
xbegin
push
cmc
enter
fsubrl
jmp
mov
cmp
test
addr16
js
int3
fdivs
lcall
xor
sbbl
lret
jae
pop
jmp
xor
sti
test
es
jno
jne
mov
sbb
pushf
out
jmp
jb
lahf
ror
cld
sti
xorl
push
ficoms
test
cmp
cmp
outsb
mov
sbb
mov
lcall
xor
mov
aas
mov
lea
or
cli
and
insl
iret
fnstenv
out
lock
lods
push
mov
sbb
xlat
pusha
adc
pusha
pop
cmpb
in
cmp
xstore-rng
cmpsl
inc
test
push
ds
nop
add
out
mov
sbb
inc
adc
mov
mov
pop
pop
push
push
je
rclb
pop
daa
test
sbb
inc
and
in
mov
add
loope
mov
call
jp
outsb
fsubl
aas
dec
mov
push
xor
and
jb
jecxz
jp
xchg
xchg
xor
rcr
cmpsl
push
sub
push
adc
fcomi
xchg
pop
pop
stc
shll
cmp
inc
jecxz,pt
push
fisubs
fistpl
add
mov
pop
mov
jne
dec
adc
push
xor
stos
and
sbb
push
cmpsl
loope
popa
fnstsw
jne
jl
xchg
add
mov
cmp
add
inc
iret
outsl
cwtl
push
and
inc
out
push
mov
adc
js
fwait
mov
mov
add
jl
sub
jp
push
aaa
xchg
cmpsb
or
push
and
jl
lahf
add
sbb
and
lea
pop
int
sbb
jae
inc
jo
xor
es
movsl
push
cmp
mov
and
rdtsc
mov
roll
sbb
dec
rcl
pop
popf
sbb
sub
sbb
scas
pushf
test
je
sub
leave
lcall
xor
fs
inc
inc
inc
icebp
iret
xchg
cmp
inc
jbe
mov
mov
pop
push
rcl
repnz
data16
sbbb
aas
nop
pop
test
mov
loopne
sbb
imul
xor
mov
cwtl
and
lcallw
jge
cmp
lahf
jecxz
pop
mov
stos
faddl
pop
push
dec
bound
repnz
stos
fstpl
loopne
lret
push
rcrb
hlt
repnz
jno
add
xchg
push
mov
xchg
aad
negl
pop
loope
dec
lret
inc
mov
push
nop
and
push
roll
pop
jne
lds
stc
out
sbb
lea
jbe
mov
adc
add
or
loop
je
lea
cmp
aad
lock
loop
lcall
subl
les
pusha
and
push
cmp
xchg
lcall
shll
insb
in
sbb
clc
js
sub
cwtl
ss
ja
repnz
mov
jp
pushf
notl
dec
outsb
add
add
in
mov
stc
sub
pop
aaa
mov
inc
push
testb
mov
sbb
cmp
jmp
rolb
sub
mov
enter
enter
jecxz
or
leave
aas
aad
subb
fisttps
dec
ja
loope
aas
nop
nop
loopne
decb
idivl
inc
adc
pop
call
push
sahf
push
dec
push
cltd
mov
push
mov
fcoms
divb
es
aaa
mov
fsubl
das
mov
outsb
or
xchg
sbb
jns
push
xor
in
mov
aam
xchg
mov
xchg
mov
pop
pop
popa
insb
out
mov
mov
ja
imul
pop
sub
das
push
sub
cwtl
out
add
push
xchg
dec
stos
pushf
cld
clc
dec
jmp
pop
lret
xor
xor
adcl
negb
cmp
add
scas
push
xchg
mov
movsb
orb
lcall
out
pop
test
inc
mov
std
movsb
rcr
push
test
jg
mov
loop
rorb
lea
xor
sbb
jle
add
xchg
daa
scas
mov
jmp
cld
inc
lea
xor
jg
xchg
imul
or
jns
test
insl
fcoms
push
jecxz
hlt
stc
movsb
pop
pop
out
push
push
out
push
xchg
pop
icebp
mov
adc
sub
sub
and
inc
mov
xor
cmp
inc
xchg
sub
push
call
call
push
lock
dec
ret
cmp
add
test
push
push
das
nop
push
fs
ljmp
in
ret
out
data16
mov
mov
fstpt
lds
add
xor
mov
cmp
adc
ret
ljmp
out
jmp
mov
or
subps
mov
and
pop
adc
mov
mov
pop
jecxz
shlb
jg
jbe
mov
outsb
mov
test
xchg
leave
sarb
xchg
sub
fimuls
aad
ja
dec
cmp
inc
mov
inc
sarl
xor
outsl
decb
and
sbb
ret
push
cwtl
mov
sti
pop
fucom
pop
cmp
lods
std
inc
lahf
add
xor
and
mov
xchg
clc
and
data16
jmp
pop
fwait
sbb
mov
cmp
daa
sub
lods
das
lret
pop
aaa
pop
sbb
mov
mov
xlat
js
cmp
loope
push
cld
in
push
movl
xor
push
jnp
mov
repnz
ret
dec
fs
fmull
into
mov
sub
mov
jno
or
cmpsl
cli
mov
xorl
les
lea
push
mov
xchg
subb
out
mov
loope
test
add
and
movsb
push
and
scas
xchg
sbb
lret
popa
mov
movd
xchg
pop
adcl
lret
mov
xchg
imul
pop
test
xchg
add
loop
mov
mov
subb
cltd
insl
addl
pop
mov
sarl
xchg
push
movsl
roll
add
jmp
cmp
xchg
mov
mov
add
and
outsb
push
sub
xor
xchg
xchg
mov
pusha
inc
mov
pop
std
adcb
cmpsb
dec
mov
popf
pop
decl
mov
leave
inc
xchg
ret
shrl
sub
iret
or
pushf
in
mov
dec
das
ret
mov
xchg
mov
jp
fwait
xor
mov
or
push
xor
loope
add
add
mov
push
add
cmp
lcall
inc
and
xor
mov
scas
sbb
dec
out
inc
lods
mov
cmp
mov
roll
xor
jle
xchg
jl
sub
mov
test
test
data16
test
jnp
into
movsl
out
aam
dec
pmaxsw
pushf
aad
add
push
insl
cmpl
pop
xor
cli
mov
push
push
xor
xchg
dec
mov
imul
test
repz
pusha
inc
leave
cwtl
xchg
mov
ds
mov
mull
sub
or
jb
sbb
pop
xor
sub
xor
testb
push
dec
mov
pop
out
inc
jl
and
ljmp
and
inc
lods
das
psllw
icebp
test
fstpt
fstpt
outsb
shlb
inc
push
pushf
xor
jl
dec
lea
mov
repnz
or
inc
aam
mov
pop
inc
das
mov
jnp
std
push
movsl
addb
cs
in
xor
pop
push
sarl
arpl
dec
pop
jb
and
out
dec
cmpsl
int3
popf
xchg
mov
jecxz
and
sub
inc
jecxz
lahf
js
cmc
dec
out
mov
mov
push
rclb
mov
cwtl
fisubs
test
mov
push
dec
testb
outsb
shr
sahf
xchg
inc
or
movsb
push
subb
sub
lahf
aaa
sbb
mov
nop
mov
push
dec
je
mov
popf
test
jne
js
fdivrl
mov
pop
fstpt
push
loopne
mov
mov
mov
jmp
ja
mov
shll
lret
in
push
movsb
in
lods
pusha
cmp
push
adc
es
jae
rcll
out
jmp
lods
imul
sbb
inc
sbb
sbb
hlt
cwtl
pop
cli
ret
loop
jge
and
fldenv
mov
insb
inc
sub
fsubrl
mov
adcb
test
cwtl
jecxz
fmull
aas
test
jns
aam
and
inc
pop
in
xor
adc
nop
outsl
mov
cmp
xrelease
push
shll
mov
lds
dec
adc
mov
mov
or
imull
cmpsb
push
mov
out
dec
lea
incb
cmp
jg
sub
xor
dec
out
hlt
les
push
lock
mov
jne
cmpsl
adc
rcrl
sbb
enter
and
mov
mov
and
mov
mov
xchg
out
add
mov
sub
data16
xor
mov
add
or
inc
loope
cmpsl
pop
adc
scas
fidivrs
mov
pusha
ret
test
xchg
movsl
sbb
sbb
dec
enter
cmp
xor
jmp
cmp
inc
shl
fs
out
das
sub
push
mov
imul
adc
mov
and
and
push
shl
ss
cmpsl
inc
push
xchg
add
inc
lods
cmpsl
addr16
in
inc
fiaddl
mov
cld
mov
mov
pop
ret
hlt
imul
pop
movsl
jns
mov
mov
push
adc
jo
in
std
mov
pop
test
sbb
pop
jge
mov
leave
adc
jmp
push
imul
jg
push
push
stos
pop
flds
clc
scas
jg
iret
stc
push
aaa
inc
push
or
inc
fcmovbe
jno
daa
cwtl
and
xchg
lods
xchg
mov
dec
and
mov
inc
pop
in
idivb
js
cmp
mov
test
inc
mov
cltd
fstps
add
hlt
xchg
lods
pop
pop
dec
aaa
adc
mov
jns
jl
mov
movsl
mov
scas
xchg
pop
and
test
popa
lods
adc
or
inc
es
les
or
int3
adc
cli
mov
xchg
push
mov
mov
sub
jo
leave
mov
daa
jecxz
push
fimuls
lods
sahf
insb
mov
imul
mov
cmpsl
daa
and
daa
fadd
pusha
sti
mov
jae
stos
and
mov
sub
adc
mov
jge
movsl
add
mov
movsb
sbb
pop
insb
xchg
inc
popf
push
gs
roll
mov
aad
scas
xchg
or
arpl
jno
inc
sbb
mov
hlt
enter
clc
pushf
jnp
xor
into
sahf
pop
push
sbb
sub
gs
arpl
mov
scas
lcall
dec
mov
adc
pop
xchg
and
movsl
jns
ficompl
add
fmuls
adc
out
and
jns
fidivs
syscall
not
jmp
out
add
mov
cmp
iret
pop
ret
popa
fdiv
ficomps
stos
int3
cmp
push
and
or
test
xchg
lods
ja
pop
ret
pushf
leave
sub
push
les
xor
rorb
cli
out
jns
int3
push
out
fnsave
lock
clc
jmp
ss
jb
lahf
adc
ds
fwait
dec
sti
add
sbb
mov
scas
push
lods
mov
add
pop
xor
cmpsb
mov
add
push
mov
and
stos
movsb
push
js
std
push
cli
jb
popa
adc
jmp
into
repz
dec
lds
out
or
mov
lea
int3
iret
push
pop
rclb
pop
aam
movsb
stc
push
js
jns
mov
cmp
jecxz
mov
std
push
popa
xchg
push
dec
movsl
clc
pop
cmpsl
insl
mov
test
push
mov
jp
movsb
idivb
xchg
andl
in
les
push
mov
lret
addr16
push
ret
pop
adc
out
scas
and
mov
add
xchg
aad
cmc
aaa
imul
cmpsb
pop
xchg
out
ljmp
cwtl
outsl
aad
lds
in
adc
pop
jne
repz
sbb
xchg
jnp
and
loop
icebp
cltd
adc
adc
out
shl
stos
gs
fisubrl
sbb
mov
test
lret
jge
sti
ljmp
xlat
addl
jp
mov
xor
push
mov
jnp
or
push
cmpsb
sub
add
fwait
lret
nop
and
push
dec
inc
scas
cmp
loop
or
dec
ret
bound
cld
movsb
inc
outsb
xor
fsts
in
mov
nop
sbb
cmpsb
cmp
pop
mov
enter
inc
push
mov
dec
popf
sbb
dec
mov
mov
push
pop
std
cld
mov
notl
andb
sarl
enter
and
stc
movsl
lahf
mov
pop
cmp
ret
adcl
insl
mov
xchg
or
enter
lock
pop
mov
inc
les
lea
adc
pop
insb
adc
out
adcl
xor
jne
mov
cmpsb
sbb
in
adc
ret
mov
push
cmpsl
daa
xlat
mov
dec
andb
test
cld
outsl
insb
int3
dec
and
nop
dec
mov
jle
test
lods
mov
push
cmp
test
mov
xor
shlb
xchg
adc
sub
or
pop
into
inc
das
mov
mov
adc
nop
cld
pop
daa
lahf
ss
inc
shrl
add
inc
dec
jnp
dec
mov
fwait
inc
ss
cmc
divl
mov
in
dec
or
repz
mov
movsb
mov
sbb
mov
leave
notb
xlat
test
sub
stc
out
add
sub
pop
inc
adc
test
mov
repz
out
dec
inc
movsl
outsb
stc
push
ds
xor
arpl
int3
iret
sbb
insl
adc
adc
add
rcl
mov
mov
shr
aad
popf
clc
mov
pop
not
dec
push
aaa
cmpsl
xchg
add
sub
and
pusha
stos
push
or
inc
hlt
sbb
xchg
xor
jle
mov
ss
sub
adc
or
mov
enter
mov
fbld
add
movsb
add
adc
movsl
aas
cmp
pop
dec
mov
push
js
pop
scas
and
mov
out
sti
dec
jnp
push
cli
nop
lea
cwtl
mov
inc
add
subl
in
pop
stos
loopne
add
dec
stc
mov
sub
outsb
scas
sub
enter
sub
fsubr
jnp
xor
test
repz
and
js
fucomip
stc
mov
push
lea
popa
or
lock
mov
pushf
rorb
or
cmc
pusha
sbb
mov
mov
imul
in
stc
popa
dec
push
fimull
leave
mov
dec
add
mov
outsl
or
push
aad
rorb
ja
cmpsl
cld
test
enter
cld
xchg
xchg
mov
jbe
loope
ja
dec
jmp
xor
cltd
sub
ljmp
push
repnz
addl
into
push
xor
mov
or
repz
imul
xchg
fwait
lock
mov
cmp
cmpsb
mov
sahf
ficoml
stos
sarb
das
adc
mov
cmp
movsl
stos
xchg
sub
scas
in
outsb
mov
in
xor
mov
cmpsb
pop
mov
fistpll
xor
fs
or
dec
faddp
sbbb
pop
rcrb
sub
adc
jl
mov
inc
js
cmp
popf
mov
outsl
jmp
pop
xor
insb
push
mov
orb
cmpsb
cmp
add
push
lods
sbb
cmp
or
sbb
loope
out
not
fcoms
inc
xor
das
ja
and
rcrl
sub
mov
ret
jb
aas
push
sbbl
icebp
inc
popa
adc
out
cli
andb
adc
fidivs
push
mov
insl
das
sbbb
test
aaa
mov
ffreep
inc
mov
fs
and
aad
lahf
cmpsl
dec
xor
fstpt
lds
mov
das
sub
add
mov
adc
add
cld
fmull
cs
lock
jmp
mov
sbb
inc
xor
jb
fidivrs
xchg
dec
jl
xor
lahf
test
inc
out
xchg
sahf
movsb
stos
xor
shlb
lods
fsubrl
push
fstpt
or
push
out
adc
sahf
repz
inc
jno
push
dec
imul
dec
popa
pop
push
cs
fs
shlb
cmp
cmp
jo
cmp
jae
and
xchg
lahf
and
sub
dec
xor
lcall
loop
stos
shlb
loope
xchg
inc
negb
icebp
xor
mov
mov
jmp
sub
stc
scas
test
push
mov
pop
divb
push
add
pop
ss
pop
imul
stos
pop
add
mov
or
jg
jb
mov
or
scas
stc
int
rorb
test
mulb
cli
mov
je
fisubs
push
jg
in
in
dec
or
test
jno
pusha
scas
stos
adc
lret
mov
or
les
fadds
je
xchg
pop
inc
in
aad
sbb
loop
les
lods
pop
ljmp
aam
scas
xor
dec
mov
cmp
out
pusha
int
xchg
xchg
ret
adc
push
rorl
sbb
dec
out
data16
cmp
push
sbb
sbb
mov
and
mov
dec
lret
loop
cwtl
pop
es
aam
inc
cmp
cwtl
loope
inc
fstl
pop
inc
add
jnp
sbb
jae
mov
inc
cltd
or
shrl
or
add
scas
loopne
push
pop
push
loopne
js
cmp
xchg
js
mov
daa
pop
popfw
test
sbb
push
insb
jmp
int3
inc
int
and
pop
arpl
xor
insl
push
push
xchg
adc
dec
ret
mov
jae
out
loopne
outsb
insb
mov
enter
test
daa
aam
inc
xchg
push
xchg
lret
pop
and
sbb
xchg
jo
jne
pop
arpl
xchg
addr16
rclb
insl
ss
and
movsb
sbb
gs
pop
jnp
aam
push
cmovge
xor
cmp
icebp
in
adc
push
movsb
arpl
movsl
mov
mov
das
mov
xor
jne
dec
sub
xchg
jl
inc
daa
popa
push
gs
out
daa
out
in
std
icebp
inc
cmp
inc
stos
mov
add
in
cmp
xchg
sbb
hlt
dec
dec
pop
dec
xor
mov
sbb
fisubs
rcl
insl
mov
std
fldcw
push
inc
xor
hlt
sbb
xchg
lahf
mov
jp
pop
ljmp
mov
xor
lods
and
sub
xchg
ret
repnz
insb
mov
into
adc
jne
icebp
lret
les
pop
cmpsl
in
push
aad
and
fstp
mov
jl
cltd
into
scas
sbb
or
push
mov
mov
fcoms
cmpl
xchg
subl
dec
cmp
ds
push
pop
popa
insl
stos
out
and
lahf
jnp
mov
bound
pop
push
aaa
push
fcmove
jo
pop
inc
xor
or
pop
pop
dec
pop
mov
ljmp
push
js
adc
sbb
xchg
xchg
out
xor
rorb
test
loopne
inc
dec
test
aad
popf
in
push
mov
jle
shlb
sub
lahf
lahf
and
mov
cwtl
jmp
mov
pop
cmpsl
out
inc
and
lret
ret
adc
std
and
xor
jno
rclb
and
mov
adcb
xchg
data16
sahf
insb
loop
stos
outsl
enter
mov
rorb
popl
cmp
ds
flds
cmp
or
mov
notl
mov
cmovbe
insb
inc
bound
dec
pushf
in
imul
daa
cmp
rcrl
out
js
je
loopne
test
jo
stos
std
pop
test
test
mov
cmp
mov
bound
jo
mov
adc
pop
add
cmp
je
icebp
add
dec
xchg
shl
adc
imul
or
das
push
and
imul
shr
dec
les
lea
cld
sbb
shll
adc
add
sub
outsl
adc
or
sub
sti
xchg
aaa
cvtpi2ps
js
mov
mov
fimuls
cmp
inc
scas
cmp
addr16
push
ret
jnp
xchg
pop
aam
add
dec
fnstenv
pop
insb
inc
scas
aam
push
clc
mov
mov
pop
pop
inc
dec
and
loope
sub
mov
jae
lock
sbb
adc
jns
adc
shlb
sbb
scas
lahf
into
arpl
push
sub
addr16
mov
jns
dec
rclb
fildll
or
add
hlt
pop
ficomps
out
jnp
xchg
mov
xchg
arpl
or
icebp
jnp
bound
arpl
mov
das
std
call
repnz
push
and
cmpsb
daa
int3
loopne
popl
jae
mov
jg
mov
cmp
xor
sub
jne
mov
adc
scas
dec
outsb
inc
shrl
fwait
xchg
aaa
out
fstl
pop
cmpb
push
mov
add
pusha
xchg
fbstp
push
mov
adc
loopne
mov
mov
lods
cltd
adc
pushf
add
test
push
sbb
shll
dec
lret
push
int3
mov
bound
loopne
fsubrs
data16
popf
lea
mov
inc
or
int
ss
sbb
pushf
inc
or
jmp
or
imul
xchg
mov
int3
dec
call
out
xor
adc
add
xchg
fiadds
iret
mov
out
outsb
and
push
lahf
fsubrl
sbb
or
jp
into
inc
loop
outsb
dec
daa
mov
lahf
movsl
movsb
addr16
pusha
arpl
imul
movsb
repz
lcall
outsl
sub
mov
inc
out
test
into
push
fwait
inc
xchg
mov
inc
xchg
mov
movsb
jl
mull
xor
int
mov
out
jne
jge
sbb
jle
scas
nop
add
loope
jp
xor
inc
mov
lcall
add
push
pop
lret
ds
mov
xchg
mov
push
and
adc
insl
imul
jg
mov
dec
int3
or
push
sbb
jne
add
push
loope
jl
mov
mov
sub
in
js
lret
movsb
push
pop
fisttpll
push
fwait
pop
mov
in
mov
lret
lret
xor
fucomi
pop
pop
push
aas
rcrl
sub
lock
hlt
and
cmp
sar
test
cmpb
call
scas
ja
cmp
push
mov
pushf
adc
dec
ja
cmp
call
sub
mov
cwtl
clc
sub
and
xor
fnstenv
pop
xor
sbb
push
mov
rol
pop
dec
mov
lret
mov
push
add
jp
andl
stos
adc
iret
popf
out
lock
cs
test
jnp
and
fcomps
mov
xchg
push
movsl
adcb
test
aas
inc
popf
push
sbb
mov
xlat
mov
dec
inc
adc
insl
test
push
test
add
cmpsl
push
jge
iret
push
sub
add
hlt
sub
dec
cmp
lret
pusha
mov
data16
mov
add
cmpsl
and
arpl
int
loop
pop
pop
push
mov
je
es
aas
mov
repnz
mov
cmp
adc
aaa
insb
adc
lret
jne
xor
xor
es
iret
test
cmc
jo
clts
sub
add
jnp
dec
leave
into
in
push
mov
inc
andl
imul
insb
jecxz
jb
aaa
call
stos
scas
fucomi
mov
add
mov
add
add
xor
pop
inc
adc
mov
jo
push
movsb
out
xchg
shl
jns
rorb
test
cmp
scas
rcrl
sub
xor
mov
fadd
mov
les
dec
mov
add
add
jp
movsb
cmp
lods
jg
or
ret
push
test
mov
push
fcoml
dec
ret
test
data16
pop
sbbb
data16
jne
ret
add
ja
push
jge
popa
xchg
adc
inc
rorb
cmp
xor
aas
mov
das
mov
sbb
adc
arpl
leave
lret
mov
lahf
dec
idivb
lret
stos
mov
jl
xorl
aas
sbb
jmp
popa
lret
push
sub
xor
dec
loopne
or
mov
je
mov
pop
cmp
cmp
xchg
pop
add
test
lahf
dec
dec
pop
stos
popa
cltd
das
lock
push
loop
daa
add
and
and
arpl
lods
aam
inc
out
push
jecxz
mov
lods
sti
aad
int3
and
aas
xchg
xor
push
lahf
lock
fisubs
lods
insb
test
imul
test
sub
repz
jbe
lods
lahf
mov
dec
ja
leave
xor
cmp
adc
lds
call
inc
xor
inc
rcrl
stos
dec
imul
cmp
in
jnp
inc
rorl
adc
into
push
pop
mov
dec
push
lds
sbb
cltd
push
push
das
mov
ret
jbe
icebp
or
clc
das
lret
pop
jecxz
adc
mov
inc
dec
cmp
stc
or
adcb
pusha
js
adc
es
and
pop
pop
mov
or
push
dec
pop
clc
adc
lahf
mov
pop
loope
push
and
pushf
cwtl
adc
fwait
nop
aam
xchg
ret
sub
enter
pop
mov
xchg
ljmp
cld
lods
add
dec
push
pop
pop
andb
push
fwait
add
push
out
lods
dec
pop
mov
lret
mov
fsubrl
cli
and
dec
jnp
jae
pop
xchg
adc
mov
sbb
jbe
push
cs
cmpsb
popf
lret
int
push
in
sub
int
jle
inc
and
push
iret
jo
sub
jp
fcmovnb
xchg
push
das
jae
xor
in
sti
pop
ds
into
clc
stos
mov
inc
pushf
mov
jge
repnz
mov
pop
sub
mov
in
jae
xorb
lahf
lgs
and
testb
idiv
jo
sahf
fstl
fldenv
iret
and
mov
test
sbb
enter
ljmp
mov
jb
repz
sbb
pushf
adc
ror
ds
lods
mov
and
pushf
add
aad
jl
xchg
xlat
sub
jno
repnz
sub
in
and
jae
push
in
xchg
stc
in
ror
pusha
pushf
sub
jne
frstor
push
jno
push
jnp
sarl
add
les
xchg
jl
mov
mov
mov
fadds
out
inc
nop
loop
stos
out
xlat
add
aad
xor
sbb
sub
jl
sub
and
cmp
cmp
clc
sub
push
xor
popf
test
add
repnz
pop
xchg
aad
out
lret
mov
mov
fwait
dec
mov
in
mov
add
insb
js
scas
and
push
je
addl
jg
vmwrite
mov
clc
test
mov
sti
js
pop
mov
es
mov
rorb
add
and
dec
rcr
fistl
jbe
lds
and
mov
int
or
jbe
outsb
pop
xor
leave
dec
mov
or
ljmp
jmp
and
inc
lea
cmp
dec
lock
cmp
cmp
jbe
cmpsl
mov
call
xor
sub
jl
mov
mov
adc
pop
icebp
lds
push
jbe
cmc
xchg
out
scas
dec
sti
arpl
mov
ret
repnz
imul
movsb
add
mov
incl
sahf
mov
mov
fsub
lock
pushf
xor
icebp
pop
cmp
jge
and
cli
dec
js
ret
inc
jp
jmp
cmp
xlat
rolb
jnp
pop
jg
sub
stos
test
pop
or
movsb
nop
inc
inc
mov
mov
mov
in
arpl
push
imulb
xchg
sbb
loopne
jns
cmpsb
int3
or
adc
out
call
sbb
sbb
mov
rcll
pusha
lock
std
xchg
stos
pop
pop
mov
addr16
fcompl
lea
pushl
jno
mov
scas
mov
mov
xorl
repnz
nop
in
xchg
subb
mov
fisubrs
lret
jo
arpl
scas
mov
or
jmp
or
jae
in
jbe
and
fwait
scas
xchg
lcall
aaa
addb
dec
xchg
cmp
xor
sbb
sbb
dec
sbb
push
fisubrs
jp
imul
jmp
repz
xor
scas
lret
push
xor
adc
call
inc
fstl
push
pop
ljmp
ss
movl
dec
add
mov
outsb
fildl
mov
divb
cmpsb
insl
xchg
add
lret
and
maxps
xor
dec
in
popa
push
dec
or
jp
icebp
pop
xlat
vmovddup
dec
jmp
sbb
ds
and
ds
mov
and
bound
mov
mov
lock
in
mov
scas
adc
inc
test
inc
pop
sub
mov
push
mov
mov
gs
jae
lods
push
cmc
arpl
inc
out
popa
sbb
pop
cli
int3
xor
or
jp
scas
sbb
dec
adc
mov
push
lret
cmp
fsave
push
ljmp
stos
icebp
add
imul
or
fists
adc
mov
int
sbb
cmc
out
cmp
addr16
and
sbb
inc
adc
push
pushf
jbe
push
and
sbb
lds
stc
mov
dec
outsb
in
dec
adcb
nop
jo
mov
fsts
pop
jl
add
sahf
push
or
sarb
scas
leave
insb
push
cmp
arpl
inc
inc
dec
iret
or
lcall
lcall
mov
xor
test
test
cmp
sbbb
scas
sub
xor
sbb
dec
mov
or
sbb
insl
sahf
popa
xchg
call
rorb
mov
jne
mov
adc
dec
pusha
inc
ljmp
in
jo
stos
pop
test
in
and
cmp
add
in
push
addr16
test
repz
xor
cmp
mov
icebp
push
aaa
and
lods
push
pop
int3
repnz
icebp
adc
jae
shll
out
push
and
stos
jne
stos
dec
or
out
cmp
clc
jno
cmp
or
inc
sti
outsb
loop
xchg
mov
daa
dec
movsl
lock
addr16
xor
adc
cmpsb
scas
dec
arpl
lret
stos
lcall
mov
and
adc
push
pusha
ficoms
arpl
dec
lds
fs
imul
mov
movsl
mov
aam
dec
inc
fwait
jecxz
leave
stc
cmpl
out
daa
lea
xchg
add
inc
test
sub
jge
sahf
and
jb
pop
mov
int3
les
insb
xor
and
sbbb
or
cmpsl
fistpll
cmpsl
data16
shlb
mov
rorb
insl
push
mov
js
andl
ret
or
int
sbb
pop
push
imul
mov
iret
dec
inc
popf
decb
inc
adc
enter
push
call
mov
cld
stos
or
xor
sbb
ss
push
cmpsl
cmpsb
jge
lds
cmc
popf
jnp
and
shrl
pop
mov
push
dec
loop
or
xor
xchg
sbb
xorb
das
lret
rcrl
ficoml
adc
mov
push
sarb
add
js
adc
enter
push
addr16
lock
dec
mov
jne
push
jb
les
jae
push
pop
pop
xor
fs
cwtl
sub
sti
shlb
or
or
rcrl
mov
icebp
loopne
aaa
mov
add
fs
pop
mov
lock
je
in
pop
mov
bswap
xlat
ds
imul
and
sub
pusha
xchg
scas
scas
rep
mov
sbb
adc
mov
pop
or
scas
adc
add
and
or
xchg
mov
or
scas
inc
hlt
shlb
push
aas
loop
out
int3
push
add
fiaddl
pop
lods
xor
fidivs
and
pop
sahf
in
repnz
das
push
push
xor
fcomi
cmpsl
push
repz
mov
movl
dec
pop
aaa
or
cmp
insb
stc
jg
pop
sbb
filds
insl
cmp
insl
ss
and
out
pop
mov
cli
xchg
mov
rcrl
xchg
lods
mov
xchg
pop
sub
or
loopne
sub
daa
fildl
or
lea
mov
or
adc
shl
popa
sub
sub
adc
sarb
cwtl
xor
push
push
xchg
sub
enter
cmpsb
das
xor
pop
in
insl
enter
jnp
cmp
lea
fdivl
xchg
jnp
push
xchg
les
add
dec
push
inc
movsb
push
idivl
cmp
xchg
cs
xor
scas
fistpll
scas
cld
test
push
xchg
hlt
lcall
imul
inc
push
add
dec
into
cmp
mov
pop
mov
mov
ljmp
lods
daa
inc
mov
jmp
mov
lea
xchg
aas
dec
push
dec
mov
fisttps
xorl
iret
clc
cli
ret
jmp
shlb
or
pop
in
adc
sub
popf
outsl
addl
ds
lahf
xchg
sbb
push
mov
pop
test
idivl
push
arpl
inc
jg
inc
jmp
in
imul
cmpsb
cmp
pop
pop
pop
jg
imul
lahf
sbb
aad
sbb
sub
imul
mov
mov
jae
sarb
mov
pop
mov
ret
stc
jmp
jno
mov
xor
push
pop
cmp
pop
in
mulb
mov
lret
stos
add
and
jge
aas
push
sbb
outsb
jge
rorb
fisubrs
js
and
notl
adc
fidivl
arpl
leave
test
cwtl
test
inc
lret
inc
std
push
cmp
and
inc
lea
xchg
push
xchg
inc
xchg
adc
jnp
enter
notl
push
jo
subl
roll
lidtl
inc
pop
fisubs
adc
hlt
cmp
lahf
inc
add
icebp
mov
adc
popf
sub
pop
mov
mov
lods
fdivl
mov
dec
rolb
nop
jge
or
xor
push
mov
imul
jns
adc
sar
loop
xchg
cmp
lret
daa
sbb
lods
pop
jle
sbb
enter
sbb
mov
pusha
je
out
aad
xchg
icebp
push
adc
aam
das
fldenv
add
decl
mov
sub
pop
popf
sahf
loope
leave
push
mov
or
lahf
jno
scas
sub
scas
mov
xor
mov
test
xchg
push
xchg
mov
in
xchg
add
jb
stos
sbb
repz
das
mov
jp
out
repz
push
aam
sub
inc
add
or
push
xlat
sub
mov
mov
sub
pop
or
xchg
imul
imul
ljmp
xor
or
cltd
je
pushf
xlat
xor
pusha
lcall
movsl
add
fldl
mov
mov
test
xlat
movsb
testl
mov
pop
lahf
sbb
xchg
int3
hlt
mov
cwtl
bound
sbb
mov
jle
repz
cmp
movsl
inc
sub
xor
ffree
ljmp
scas
sub
ss
aaa
or
fldt
mov
cmpsb
movsl
fiadds
jne
daa
icebp
cmp
iret
xor
dec
int3
and
push
cwtl
aas
test
jae
xor
andl
in
in
cld
gs
in
sbb
push
or
hlt
imul
or
mov
jae
aad
or
push
rcr
pop
fiadds
push
dec
jmp
js
sbb
dec
cmpb
out
fisubs
pop
xchg
xchg
addb
fiaddl
sarw
adc
es
jge
addr16
push
andl
sbb
cwtl
fnsave
xchg
mov
fildl
fidivrl
jle
jmp
mov
sbb
pusha
ja
or
repnz
xlat
push
int
movsl
pop
push
adc
or
dec
lds
loope
lock
or
add
popl
rcrb
jl
jb
cltd
aaa
in
out
cmp
jg
mov
sub
js
imulb
sub
fs
fcmovnbe
shrl
jmp
aad
sarb
fwait
adc
mov
fbstp
cwtl
jns
lds
jl
inc
add
in
add
fisubrs
pop
hlt
mov
mov
bound
adc
inc
adc
mov
out
jbe
pop
loop
dec
mov
xor
mov
pop
les
lret
jo
cltd
scas
and
mov
idivb
pop
shlb
pop
push
shrl
gs
add
mov
in
pop
inc
adc
lods
cmp
insl
adc
mov
push
out
call
sub
leave
sti
pop
adc
xchg
fistpl
je
dec
jno,pn
jb
sub
xchg
test
inc
push
add
arpl
sti
popf
ret
push
push
dec
xorb
fs
sbb
adc
adc
inc
mov
push
and
ficoml
cmp
push
dec
fs
test
mov
jo
les
mov
inc
jae
jns
cmp
sbb
fsub
fidivl
fidivrs
divl
dec
mov
dec
leave
mov
xor
and
jle
cmpsb
test
push
or
jg
cmpsb
pop
fdivl
divb
mov
mov
in
orb
mov
pop
cmpsb
mov
lret
mov
inc
popa
inc
cli
xor
pop
xchg
std
mull
cmp
cli
shlb
loop
mov
xor
mov
jge
aam
jnp
js
mov
out
pop
add
fisttps
or
xor
adc
adc
fbld
mov
and
cwtl
push
jae
cmpb
xchg
lods
bound
jecxz
stc
jo
pop
or
mull
repz
imul
and
clc
add
ljmp
aam
cltd
xchg
inc
cmpsl
push
ret
test
inc
std
and
mov
push
cli
inc
std
inc
lret
mov
push
repnz
push
stc
orl
gs
add
adc
pusha
or
cwtl
cmp
daa
sbb
sub
fidivs
in
aam
mov
insb
outsl
push
xchg
and
js
mov
stc
loope
clc
push
mov
push
call
inc
iret
pop
je
mov
lcall
and
out
ret
xchg
xor
stos
push
xor
pop
pop
jnp
pop
pop
mov
dec
gs
out
idivb
cli
aam
cmp
xchg
cmp
aaa
push
xor
dec
push
in
repnz
jecxz
sub
push
popa
mov
pushf
cmp
mov
xchg
push
dec
pop
sub
lahf
push
cwtl
rclb
out
sub
js
jae
pop
jnp
lods
adc
jns
enter
sahf
sub
jle
mov
lcall
lret
decb
insl
dec
jnp
mov
ljmp
lret
testl
jge
jo
ljmp
out
jo
fucomip
sub
pop
mov
addr16
lods
sbb
scas
xor
mov
addr16
sbb
mov
adc
or
jbe
mov
hlt
mull
push
add
fiadds
insl
add
pusha
in
data16
cmp
sbb
scas
mov
fnstsw
sbb
add
test
adc
aas
mov
decb
mov
jnp
loopne
sbb
or
aas
data16
prefetcht0
movsl
std
jp
movl
pop
dec
scas
mov
xlat
mov
mov
cmp
fisubs
je
xor
ret
pusha
mov
mov
popf
push
addl
fidivl
mov
lods
mov
loop
fisubl
xchg
or
gs
adc
mov
cmc
inc
call
cmp
into
cmpsb
sahf
fsubrs
imul
push
push
jp
inc
int3
mov
sub
ja
cmp
out
incl
inc
popa
mov
xchg
fwait
mov
fcomi
lods
push
pop
jp
out
fcomps
jp
insl
pop
lahf
int3
mov
into
test
or
adc
shlb
inc
inc
rclb
dec
add
lret
fcmove
insl
push
arpl
aas
hlt
insb
sbbl
jbe
sbb
lret
push
shl
jne
dec
aad
imul
sbb
dec
adc
fcmovbe
and
mov
or
sbb
xor
pushf
cli
or
xor
mov
xlat
dec
in
cmp
xor
enter
dec
fs
outsb
int3
sub
loope
call
lcall
dec
jge
pop
and
psubw
cs
inc
rcll
lds
push
pop
inc
sbb
push
xchg
hlt
out
xchg
jnp
add
xchg
filds
aaa
ret
movsl
fldt
xlat
push
push
stos
sub
notl
sahf
adc
ja
shl
js
mov
lods
lds
or
push
imul
xor
inc
sbb
repz
ret
adc
mov
xor
cmc
outsb
push
add
leave
insb
push
test
mov
lcall
xor
mov
repnz
arpl
mov
mov
mov
sub
lahf
testb
loop
cmp
call
call
jge
pop
mov
inc
jge
sub
xchg
add
test
mov
mov
rcll
jb
cld
add
stos
push
push
sbb
pop
lods
jg
or
mov
inc
or
or
push
dec
ret
xlat
jp
mull
add
dec
or
ret
cmp
pushf
xor
das
repz
mov
jg
repnz
cmp
mov
inc
movsl
sbb
gs
repz
mov
rcl
in
ret
call
fwait
divb
dec
push
imul
lods
cs
lret
sub
scas
test
stos
andb
pmovmskb
mov
cmp
std
xchg
rcll
dec
popf
and
jecxz
jle
xchg
adc
lahf
clc
adc
cwtl
cmp
sub
push
stos
sbb
lahf
push
xchg
jmp
push
aam
or
cltd
jg
es
jmp
sub
jbe
call
add
pop
sahf
add
dec
mov
sbb
mov
jl
ss
fsubs
inc
cmp
test
jmp
adc
test
or
push
pop
xor
lret
jbe
xchg
pop
sbb
les
shrl
adc
jbe
mov
inc
mov
iret
adc
xchg
in
ror
lods
xchg
lods
push
pop
push
adc
fldt
es
mov
xchg
jbe
xlat
in
outsb
pop
mov
inc
fnsave
sahf
mov
pop
jmp
inc
xchg
cmp
in
out
sti
fsubs
addr16
gs
jno
scas
xchg
nop
roll
and
out
xor
inc
mov
mov
pop
cmpsb
movb
fsubs
mov
loop
dec
jl
loop
faddl
repz
xchg
sbbb
xor
in
mov
xor
cmp
push
push
psubd
xor
shrl
mov
or
addb
sub
rorb
iret
jecxz
sub
push
add
clc
enter
lds
loop
mov
aaa
imul
stos
xor
stos
in
pop
ss
push
xchg
cmpsb
jp
and
stos
mov
jae
imul
aam
lcall
jns
orb
rcr
cmp
sub
js
xor
dec
adc
fcompp
in
mov
cwtl
sbb
call
pop
or
outsl
mov
add
mov
xchg
or
loope
incb
adc
jae
cmp
and
and
push
xor
imul
jo
js
push
cmp
cmpsb
shl
cmpsb
lahf
pop
aad
aaa
and
pop
outsl
mov
fwait
dec
ret
or
and
xor
push
iret
add
popf
or
push
fs
scas
pop
les
fnsave
jo
fdivrl
add
mov
jb
push
test
add
sbb
add
xchg
or
leave
orb
pop
cmp
cmc
mov
movsbl
das
mov
cmp
or
or
push
mov
iret
xor
inc
sbb
jp
adc
jb
imul
test
fistl
pop
out
pop
mov
jge
xchg
adc
cs
cmp
lods
pop
gs
rol
scas
mov
add
mov
sbb
outsb
xchg
mov
xchg
fs
in
outsl
adc
popf
xor
fbstp
push
popf
inc
fnstsw
xor
arpl
push
scas
aaa
and
addl
jno
dec
mov
jge
loope
jns
daa
cwtl
aaa
fadd
mov
movsl
lea
add
iret
or
pop
inc
mov
mov
mov
add
test
loope
push
xchg
loope
cwtl
mov
or
cld
xchg
pop
dec
jo
jl
cmp
add
cmp
mov
and
test
adc
es
add
scas
push
push
and
and
ret
xchg
pop
or
fistpll
les
cwtl
pusha
outsb
sub
js
jecxz
test
repnz
cmp
imul
ret
scas
cmpsl
js
push
pop
gs
aam
das
mov
femms
lock
addr16
aaa
icebp
xchg
adc
inc
cmpsl
sub
shrl
imul
mov
adc
call
push
pop
aas
mov
xor
xchg
les
push
sbb
insl
outsb
add
outsl
bound
ror
arpl
inc
bound
movsb
dec
xchg
fwait
dec
xor
push
test
ficompl
aas
enter
sub
push
mov
dec
jecxz
add
xor
icebp
cmp
popf
ss
insb
mov
or
sub
je
inc
lahf
xchg
movsl
sbbb
mov
rcl
dec
mov
mov
bound
adc
cmc
pushf
lock
cmpb
jl
fs
mov
mov
cld
aad
fstpt
xchg
adc
mov
enter
xchg
enter
out
shlb
inc
mov
aad
out
call
arpl
mov
bound
in
inc
sub
fsubrs
sub
cmp
scas
stos
dec
and
bound
jl
sub
xchg
push
jp
pop
adc
adc
add
pop
add
sub
jmp
pop
aaa
jp
mov
xchg
pop
lcall
or
shr
std
popa
xchg
mov
test
dec
cmp
push
dec
sub
shlb
adc
cli
lret
out
cmp
push
leave
hlt
enter
shll
push
add
jb
je
lcall
dec
xlat
pushf
call
cld
in
pop
sbb
jns
xchg
dec
push
xchg
fnstenv
mov
xchg
inc
jne
roll
cmc
inc
rcl
and
sarl
jno
xchg
movsl
adc
movb
sub
mov
push
ret
or
inc
aas
pop
sahf
push
sti
pop
and
or
cli
adc
and
daa
lcall
cmp
inc
repz
jmp
pop
mov
in
or
cmpsl
xchg
xchg
cmp
or
mov
pushf
aam
or
xchg
mov
jbe
cltd
mov
andb
fidivrl
js
mov
cltd
mov
shll
in
add
mov
mov
xor
filds
or
dec
cmp
jbe
lock
ds
inc
sub
push
shll
stos
lcall
addr16
and
mov
cs
add
inc
jo
iret
add
inc
jg
cmp
stos
ficompl
lcall
mov
mov
push
stos
das
xor
lea
fsubrp
cmp
dec
or
push
out
cpuid
sbb
imul
jecxz
fs
stos
movsb
pop
and
cmp
inc
das
cmp
cmp
jae
ficoms
jb
daa
imul
mov
xchg
mov
loopne
xor
nop
xchg
jbe
repz
shlb
push
pop
jl
cmp
jle
xchg
imul
fs
ret
insl
lea
cltd
out
loop
pop
mov
fwait
push
fstl
inc
dec
mov
daa
fdivs
out
pop
cmp
add
push
push
std
xor
dec
mov
mov
mov
push
pop
or
dec
mov
jae
sti
xlat
loop
iret
clc
lock
xor
mov
mov
jnp
dec
arpl
xchg
push
and
xchg
cmpsb
and
aaa
lret
push
pop
das
in
fs
rclb
cmpsb
mov
mov
dec
sbb
cmp
sub
push
pusha
inc
nop
mov
dec
pop
mov
jle
add
imul
or
test
cmp
xor
lahf
jno
aam
sbb
addl
jg
mov
mov
and
sub
dec
stc
lds
or
in
out
gs
mov
js
lods
sub
inc
lock
add
mov
insb
xor
pushf
cmpsl
bound
repz
xchg
inc
repz
mov
int3
mov
test
jp
adc
dec
inc
addr16
cwtl
xchg
das
js
push
push
sub
ss
sub
fsubl
js
pop
cmpsl
and
pusha
or
out
aas
shrl
je
popa
jp
pushf
sbb
xchg
insb
add
push
or
cmpsb
pop
add
das
push
jmp
into
jmp
imul
pop
jmp
xchg
mov
dec
mov
stos
sub
hlt
mov
clc
cmc
ja
pop
cmp
movsl
pop
loopne
popf
or
aas
out
or
jbe
stos
dec
test
outsb
adc
sub
mov
jne
xor
adc
adc
and
jp
movsb
mov
iret
cmpl
xchg
ror
xor
push
popf
andl
pop
rorl
ret
jle
jp
mov
aam
dec
inc
push
inc
sbb
mov
aad
clc
push
imul
out
int3
sub
mov
outsb
cmp
mov
dec
aam
inc
testl
cmc
mov
repnz
xchg
cmp
rolb
dec
call
xor
test
fs
xor
aaa
cltd
ret
dec
mov
and
mov
lcall
cmp
ds
lahf
fiaddl
and
sar
rolb
push
cld
aad
in
cmpsb
dec
xor
roll
push
js
sbb
xor
fld
mov
pushf
jb
mov
xchg
cltd
aad
add
jns
dec
mov
dec
test
dec
jns
add
nop
and
mov
xchg
lcall
or
sbb
stc
roll
fisubrl
int
sub
scas
daa
fistps
stos
push
pop
leave
insb
loop
nop
test
push
outsb
fdivr
int
jecxz
leave
adc
inc
pushf
xchg
addr16
or
push
jno
pushf
push
sbb
mov
data16
into
mov
imul
jecxz
mov
outsl
xchg
out
mov
mov
pop
xchg
mov
adc
add
popl
sub
fcom
cwtl
ret
daa
push
mov
in
push
adc
sub
ljmp
cmp
js
xor
xor
xor
adc
and
std
jne
push
ffreep
ret
mov
sarl
in
lahf
imul
xchg
push
or
mov
xor
xchg
sbb
adc
fwait
iret
xchg
lods
imul
add
aaa
adc
lcall
jbe
inc
sub
in
mov
dec
mov
jge
push
jno
frstor
add
cmp
out
inc
pop
faddl
lret
roll
mov
mov
mov
jne
lock
dec
sbb
and
fadds
mov
mov
and
int
xor
fadd
shrl
pop
popf
loopne
sub
inc
lods
push
adc
push
xchg
and
scas
add
aas
push
test
icebp
fmuls
pop
shlb
mov
sub
mov
push
insb
xchg
cwtl
repz
adc
js
xlat
jae
call
ss
mov
int3
data16
movsb
lock
mov
or
xlat
jmp
daa
xor
jo
or
std
scas
or
jnp
gs
mov
cs
mov
cmp
test
rolb
aaa
dec
icebp
pusha
dec
xchg
push
arpl
cmp
push
sub
loopne
lret
cmp
xor
sbb
adc
stc
cmc
and
or
xor
fs
jae
icebp
das
adc
out
push
dec
pop
mov
push
es
and
and
dec
sub
mov
out
je
jo
push
icebp
jno
lock
jbe
adc
xchg
push
enter
mov
loope
iret
and
cltd
ret
shl
addr16
nop
pop
rolb
and
add
in
ds
pop
cmp
lret
xor
add
and
popf
test
pop
jecxz
les
xor
jp
mov
sbb
lods
jge
or
push
xchg
fcomip
loopne
xchg
mov
mov
popl
xchg
cmp
jl
jbe
mov
das
mov
orl
imul
sti
movsl
inc
sarb
xchg
or
jno
mov
cmp
push
add
call
push
cmc
jmp
cld
adc
shlb
xchg
add
lcall
pop
push
adc
mov
xor
mov
mov
adc
adc
iret
scas
lahf
xchg
push
mov
xchg
fs
jle
adc
push
in
aam
cmp
sub
lea
push
aad
clc
xor
inc
sub
loop
lret
mov
or
and
mov
push
lods
adcb
fwait
cli
sbb
inc
fs
orl
and
push
js
shll
jle
add
xchg
stos
pushf
repnz
orl
loopne
decb
mov
add
mov
xchg
roll
sub
cmpsl
xor
test
xor
jns
cmp
jbe
idiv
push
xor
scas
push
lret
push
int3
xchg
sub
jp
fs
push
mov
add
inc
cmp
out
cwtl
insb
fists
push
dec
call
xchg
in
mov
xor
das
pop
mov
push
cmp
notb
stos
shlb
rolb
cmp
push
xchg
jp
sbb
jmp
or
es
loopne
adc
out
jl
mov
test
lock
pop
repnz
es
pop
jl
xchg
fwait
pusha
into
dec
adc
cli
add
sub
jnp
outsl
or
imul
xor
jbe
pop
addb
sub
xor
test
fiadds
loope
pop
jp
adc
lret
push
shlb
lret
bound
push
xchg
fistl
sbb
jp
adc
sbb
or
sbb
test
mov
xchg
mov
jnp
xchg
push
xchg
out
jle
lret
popa
cltd
mov
hlt
jg
and
mov
inc
mov
in
cmp
pop
in
outsl
sahf
mov
mov
dec
xchg
sbb
pop
mov
add
jno
shrl
xchg
push
xchg
inc
lods
xlat
mov
scas
inc
cmp
lret
jno
pop
push
loop
xchg
lcall
push
mov
mov
and
and
adc
add
push
dec
xchg
rolb
lcall
jnp
and
int
mov
xlat
sbb
aas
in
mov
inc
sbb
inc
hlt
jecxz
mov
test
test
xchg
clc
or
push
pop
push
fwait
jb
jne
ret
xor
push
repnz
lock
and
push
sub
les
inc
mov
rcrl
popa
mov
adc
adc
ror
push
fisubs
push
mov
sahf
lock
mov
pop
fwait
mov
cmp
sub
dec
and
jno
add
fwait
dec
aas
push
in
enter
mov
adc
addr16
stos
jecxz
push
sbb
repnz
fsubrl
jne
sahf
mov
ret
scas
jle
das
cmpsl
jne
sbb
and
std
jmp
adc
scas
sub
icebp
pop
sahf
and
and
inc
in
mov
or
es
mov
in
cli
hlt
scas
inc
repz
pop
data16
push
rol
inc
cwtl
lods
push
mov
scas
mov
insb
push
out
dec
jecxz
ret
cmp
and
outsb
stos
lea
into
jecxz
push
addr16
jne
adcl
subl
mov
or
lods
pop
dec
jg
xchg
lea
adc
icebp
es
mov
push
lea
push
imul
js
cmp
pop
leave
or
inc
mov
rcll
popa
shr
dec
push
pop
js
iret
popa
leave
jp
loop
inc
das
add
rclb
cmp
sbb
pop
pop
adc
push
inc
dec
fbstp
sti
mov
lea
sub
xor
sbb
sbb
adc
xchg
xchg
test
test
fildl
sbb
inc
sbb
or
clc
lods
pop
dec
scas
pop
hlt
xor
inc
xor
in
ljmp
cmpsl
push
out
mov
mov
sbb
stos
sahf
inc
or
movsb
js
add
xor
out
push
notl
ljmp
pop
inc
cmp
sub
loope
or
int3
fsubs
or
pop
pop
and
mov
xchg
mov
addr16
fwait
pop
sbb
push
inc
lret
das
xor
jmp
stc
shlb
ja
shrb
pushf
xchg
aas
adc
shl
mov
dec
jle
mov
in
test
or
inc
mov
push
cmpsb
cwtl
cmpsl
and
in
jmp
adc
sti
es
xor
mov
aad
cmp
ljmp
aas
insb
jb
cli
or
std
mov
sub
sub
shrb
adc
jp
mov
xchg
xchg
cmp
cmc
xchg
sub
in
imull
ss
imul
sub
mov
dec
inc
stos
jmp
xchg
insb
test
fucomi
aas
mov
aas
and
xchg
sbbl
aaa
popa
dec
or
pop
xchg
inc
and
decl
cmpb
pop
jg
es
pusha
aas
movsb
mov
jno
push
inc
pop
andl
xor
jmp
adc
xchg
nop
shl
subb
push
in
sub
inc
cld
notl
fcoms
cmc
cltd
incb
gs
mov
popa
adc
lahf
fcompp
in
dec
ret
aam
add
data16
inc
cmpsb
data16
into
jmp
icebp
sbb
mov
shll
mov
adc
and
add
dec
and
or
sarb
sbb
jbe
fwait
mov
fisubrl
rcr
adc
inc
ffreep
aad
mov
xorb
pop
popa
cltd
mov
in
aas
loope
pop
sbb
fmull
cs
mov
jge
sahf
dec
or
mov
sbb
adc
adc
sysret
dec
dec
mov
test
jle
pop
sbb
into
std
xchg
addl
popa
mov
add
push
std
test
mov
xor
xchg
mov
jb
xchg
iret
jmp
sti
mov
mov
cli
and
lods
or
std
sti
lea
cmpsb
xchg
add
es
or
cmp
cmc
sub
bound
sub
sub
mov
xor
popf
mov
das
inc
cmpsb
mov
cs
mov
idiv
inc
repz
add
shrl
icebp
mov
sub
nop
mov
xor
adc
push
dec
inc
cmpb
mov
add
mov
inc
pushl
imul
icebp
call
jo
out
xor
out
xor
adc
sub
xchg
push
pop
loop
faddp
leave
movsl
ret
or
push
push
cld
pop
or
xchg
mov
and
push
sub
adc
sbb
xorl
fiaddl
or
add
jge
push
sub
cmp
mov
in
loop
jl
xchg
jl
stc
je
fisubl
add
test
scas
mov
punpcklwd
push
sub
add
sbb
mov
outsl
cmp
lock
dec
jbe
pop
jl
lcall
stos
xor
inc
push
and
xchg
stos
inc
cmp
and
test
push
mov
in
clc
iret
xchg
cmp
cmc
adc
or
int3
jle
shll
test
ret
data16
fs
rcll
imul
inc
movsl
lret
aas
mov
push
mov
aad
jo
stc
fcmovbe
popf
popa
sti
pop
add
mov
loop
cmp
mov
mov
pushf
add
and
loop
pop
xchg
push
sub
int
add
pop
sbb
gs
sbb
jo
pop
mov
cmp
xor
outsl
dec
cmp
leave
test
mov
xchg
jns
adc
je
sbb
inc
repz
push
xor
xchg
aad
jne
pop
mov
and
dec
xor
pop
pop
popa
stc
sub
out
imulb
xor
pop
add
imul
add
lret
and
or
add
and
jnp
mov
or
cld
mov
xlat
addb
cmp
test
mov
lds
mov
add
lods
insl
mov
sbb
cltd
adc
jb
outsl
icebp
dec
adc
stos
inc
loop
dec
cltd
movsl
xchg
out
aad
sbb
arpl
cmpsl
in
lock
push
sbbl
adc
aas
mov
icebp
es
aaa
dec
adc
fisubrl
dec
xor
mov
xlat
pop
push
mov
mov
out
adc
adcb
jmp
pop
insb
cli
xchg
sti
mov
js
mov
les
mov
sub
mov
mov
arpl
or
fbld
push
xchg
test
int3
in
xor
pmulhuw
push
push
pop
mov
in
push
dec
test
stos
imul
add
and
dec
movsl
pop
cmp
aaa
js
testl
test
jno
int
incb
xchg
test
push
repz
xorl
decl
pop
scas
pusha
jmp
ljmp
xchg
cld
xchg
insl
pop
jle
into
xor
gs
in
mov
or
cltd
mov
repnz
in
ds
into
int3
inc
adc
rcll
sbb
push
or
lcall
je
jnp
mov
and
shlb
mov
jb
aad
call
add
testl
imul
mov
faddl
enter
adc
enter
add
mov
loope
loop
mov
inc
mov
aad
test
repnz
sbb
or
std
jl
addb
jg
int
fstl
mov
bnd
dec
shrl
fwait
jge
icebp
test
fmul
call
aam
push
mov
movsl
jnp
out
add
dec
xchg
sub
jmp
push
or
lock
das
nop
adc
test
mov
cmp
push
insb
ficoms
push
jg
cmp
mov
lea
cmp
mov
iret
or
add
rorb
mov
push
lea
dec
mov
mov
jo
popa
mov
adc
test
mov
and
sbb
lock
outsb
mov
inc
pop
cmpsl
push
data16
test
and
push
cmp
pusha
xchg
mov
xor
jne
imul
pop
loopne
pop
add
xchg
dec
into
stos
jns
test
pop
or
xor
mov
pop
xchg
cltd
mov
stos
mov
cmp
sahf
jmp
add
mov
pop
or
xor
dec
mov
or
ret
xor
adc
fdivr
cmp
pop
xchg
jb
jno
xchg
or
aad
andl
fsubrl
scas
cmp
ss
cmp
cltd
xor
fwait
or
icebp
push
mov
frstor
mov
out
int3
leave
pop
imul
sti
dec
mov
sub
enter
mov
ljmp
or
jecxz
xor
xchg
and
repnz
arpl
insl
and
mov
adc
sub
outsb
mov
adc
sub
enter
mov
mov
inc
aad
sahf
cmp
inc
test
ret
fldt
add
ja
lods
sub
cmp
jns
jmp
pop
ret
inc
cmc
enter
adc
or
inc
or
cmc
pinsrw
lret
fwait
addb
mov
adc
mov
xor
mov
sahf
adc
add
pop
int
or
enter
add
pop
and
dec
jno
scas
cmpsl
mov
push
mov
sub
adc
es
rorl
push
in
popw
movsl
dec
dec
iret
bound
xchg
or
outsl
xor
push
dec
test
cmp
xchg
pop
sarb
lahf
sub
adc
xchg
jo,pn
mov
leave
add
rcll
in
outsb
mov
lcall
sbb
push
adc
dec
push
mov
sbb
push
dec
mov
jnp
insb
scas
pop
inc
mov
js
or
subb
xchg
in
xor
push
lahf
mov
in
or
dec
xor
andl
sbb
dec
imul
js
mov
in
inc
adc
lcall
xor
pop
fadds
add
xor
add
jne
test
cmp
fdivrl
jno
loopne
sub
aam
bound
mov
inc
cmp
jge
and
inc
jnp
sub
pop
sti
mov
mov
inc
cmp
or
mov
sbb
ljmp
or
push
ret
pop
sbb
jp
ss
mov
movsb
mov
xor
xor
in
sbbl
stc
mov
cmp
or
je
popa
mov
xchg
mov
add
enter
push
dec
repz
popf
cltd
lret
xchg
test
das
ljmp
mov
imul
xchg
cmp
sahf
or
popa
aas
jecxz
dec
in
cld
mov
or
sahf
fcomp
je
aaa
jmp
mov
cld
xchg
test
xchg
add
cs
xchg
jge
test
fwait
movsb
sbb
cli
or
pop
loop
comiss
hlt
dec
testl
notl
leave
nop
xbegin
mov
enter
add
cmp
mov
cmovo
data16
or
test
and
in
inc
cli
mov
jecxz
xor
andl
mov
daa
sub
mov
aaa
or
movsb
sbb
inc
cli
jge
mov
adc
bound
fucomip
ljmp
ret
inc
jecxz
sbbl
sti
lret
mov
sub
pop
push
dec
testl
jge
dec
aad
inc
lea
mov
sarl
add
into
pop
xchg
cs
xchg
sub
adc
iret
cld
sbb
pop
mov
sbb
adc
and
mov
and
xor
out
mov
lock
sub
push
mov
jae
cmpsb
js
aad
inc
es
add
jbe
xchg
xchg
mov
jmp
pcmpgtb
inc
shl
lock
jno
daa
adc
scas
bound
sbb
jnp
icebp
xchg
in
rep
lcall
arpl
fisubrs
outsl
not
mov
insl
fs
adc
or
push
icebp
pop
xchg
add
pop
cmpsb
mov
call
cmpsb
push
mov
jno
call
mov
in
adc
xor
mov
jne
inc
es
mov
adcl
adc
add
icebp
sar
sub
test
ret
cwtl
pop
or
cmp
xor
ss
leave
push
adc
imul
pop
scas
mov
xchg
push
ficompl
movsl
aad
inc
jl
jmp
dec
daa
int
lret
pop
and
inc
and
add
xchg
sub
arpl
inc
fdivp
lods
jno
pop
in
cmp
xchg
lods
lods
inc
in
mov
jno
cwtl
add
in
jmp
inc
sbb
adc
or
xchg
mov
sub
jp
ds
mov
inc
sbb
aaa
and
dec
pop
and
cmp
imul
mov
clc
fidivrl
sub
in
aam
cmp
mov
aas
das
push
into
aad
push
xchg
jnp
add
push
xor
shlb
and
add
bound
jns
jp
xor
ljmp
or
daa
jmp
and
pop
scas
inc
movsb
inc
inc
push
je
cmc
insb
cmc
jne
xlat
sahf
fxch
mov
xor
pushf
imul
pop
dec
addl
nop
ljmp
imul
pop
inc
fdivl
scas
xchg
aam
jl
in
popf
jb
cmp
sbb
roll
js
cmc
mov
int
mov
jmp
negb
inc
and
das
scas
repz
nop
push
push
loope
cmpsb
push
xor
gs
or
pop
aaa
popf
inc
pop
scas
pop
dec
xor
rcr
jno
mov
xchg
imul
or
inc
repz
mov
push
js
sbb
mov
sbb
xor
xchg
mov
in
sti
inc
jp
adc
push
mov
ja
mov
fsubrs
iret
mov
pop
add
add
lret
rcrl
aam
hlt
sti
mov
cltd
xor
pop
mov
xchg
shll
inc
popa
inc
and
test
ljmp
xor
es
mov
test
movsl
pop
inc
mov
lahf
push
rorb
in
out
and
xlat
xor
ja
xor
push
xor
scas
test
dec
roll
mov
mov
cmp
mov
stc
out
push
sub
sub
mov
cmc
xchg
xor
decb
inc
mov
mov
add
ret
xchg
cmp
sbb
lods
mov
adc
cmp
or
sbb
cmp
push
push
aas
jnp
add
pusha
cmpsb
push
add
hlt
xor
sbb
sbb
cmp
clc
roll
or
mov
jmp
stos
pop
push
xchg
fnstsw
and
loope
mov
stos
or
lahf
sbbb
test
pop
jg
out
aas
bound
in
push
mov
and
lahf
xor
sub
pop
out
ret
lods
rcl
sub
fmuls
sbb
cli
push
jae
dec
movsb
jl
cmp
xor
and
pop
in
nop
je
xchg
cwtl
xor
loop
ds
jae
imul
int
in
outsb
aam
frstor
test
nop
push
pop
sub
cmc
jmp
cs
or
push
xchg
jg
sbb
dec
out
leave
push
sbb
xchg
pmulhuw
mov
subl
addr16
adc
rcr
add
mov
xchg
pop
pusha
scas
push
test
xor
mov
sbb
test
int
push
mov
add
jnp
sub
inc
negb
loope
push
push
inc
pop
das
out
in
xlat
addl
loopne
inc
sbb
mov
cltd
mov
pushf
xor
dec
dec
js
dec
jnp
imul
xchg
sbb
fs
stos
aam
leave
lock
dec
enter
stos
xchg
shll
push
int
and
push
cmp
xor
push
popa
call
out
pop
pop
hlt
inc
test
in
fbld
lds
dec
jbe
fisubrs
leave
dec
je
rorl
leave
cmpsl
or
fdivrp
fcmove
push
or
mov
and
mov
push
icebp
adc
dec
fdivl
cmp
shlb
and
sbb
cld
mov
cmp
and
cmp
mov
je
int3
loopne
mov
loope
add
les
xor
jno
out
xchg
fldl
mov
mov
sub
push
sbb
push
jae
int
in
sarl
mov
xor
inc
mov
data16
pop
xor
cmovne
and
xor
mov
popf
out
out
jg
scas
pop
sub
dec
sub
mull
mov
jg
pop
jnp
mov
mov
mov
ret
lds
out
loop
cltd
mov
xor
mov
in
cmp
lods
pop
bound
push
pop
sarb
cmp
push
aaa
sbb
call
mov
jg
js
jmp
rclb
sbb
lock
fnop
loopne
imul
dec
xor
hlt
fcompl
cli
sub
ljmp
sti
adc
roll
fstps
sahf
lret
sar
sbb
outsl
lahf
pop
test
dec
mov
pop
movsb
inc
jp
stc
shlb
pop
mov
addl
cmpsl
mov
lret
cmp
mov
call
setb
fsubrs
xchg
inc
xchg
sub
clc
cmp
fildl
sub
jp
popa
call
lock
dec
add
jns
jmp
test
add
pop
mov
cmpsl
arpl
stos
xor
out
pop
aad
dec
mov
pop
cld
adc
fidivl
mov
stos
xor
es
sbb
aaa
clc
insl
add
or
lock
sbb
pushf
inc
or
ret
fbstp
lds
and
aas
stos
push
pop
adc
jl
aad
in
lahf
stos
mov
cld
and
mov
popa
fstpt
es
ret
scas
cmp
adc
cltd
imull
jns
sub
xchg
call
mov
negb
shl
sbb
mov
push
mov
mov
mov
mov
mov
ret
pop
scas
inc
push
insl
jb
cwtl
arpl
cmpl
aaa
popf
jno
lret
mov
imul
inc
adc
lret
add
push
fucomp
sbb
loop
in
pop
cli
pop
xchg
mov
imul
imul
dec
lods
imulb
mov
mov
mov
or
lds
push
xor
in
sub
icebp
xor
sub
mov
mov
cmp
aaa
push
dec
or
xchg
ja
ret
mov
inc
insb
rorl
xchg
mov
fisttps
dec
jb
xor
mov
and
cmpsl
adc
add
or
jl
daa
mov
inc
cmpsb
jae
nop
adc
sbb
sbb
fsubr
mov
push
cmp
test
dec
pusha
andl
jl
push
out
mov
dec
jmp
cmpb
mov
adc
popa
imul
xchg
jno
sbb
pop
mov
inc
jns
xlat
daa
mov
arpl
lock
add
or
or
xchg
xor
push
stc
pusha
dec
inc
mov
loope
dec
and
lcall
and
dec
add
adc
mov
test
lret
int
jmp
pusha
xchg
adc
adc
adc
mov
mov
fistpl
mov
fistps
adc
or
inc
repnz
or
mov
mov
addb
jb
mov
ret
adc
xor
adc
mov
cmp
jne
cwtl
adc
sarl
int
jp
jne
jg
rorb
mov
fisubs
ss
mov
mov
inc
aam
push
or
fwait
adc
cmp
clc
mov
adc
incb
addr16
and
inc
lock
mov
dec
sbb
inc
push
js
jb
sub
dec
mov
das
adc
fdivp
or
outsl
cmp
icebp
popf
push
lods
cmpsb
sahf
fcoml
jmp
xor
xchg
out
jno
and
movsb
fisttpl
aam
jae
scas
mov
xchg
mov
push
pusha
pop
mov
rolb
pop
mov
adc
cmp
inc
jb
test
sub
insb
leave
movsb
lret
in
xchg
outsb
inc
and
add
pop
cwtl
ret
aad
push
mov
iret
dec
adcb
dec
es
fwait
dec
aaa
into
mov
cmpsb
in
mov
cmp
orl
push
push
arpl
cwtl
je
jo
dec
lcall
xor
sub
es
adc
arpl
jne
pop
in
mov
push
sub
js
mov
or
xor
pop
push
lds
jmp
iret
sar
jge
and
mov
sarl
push
das
lods
fucom
lea
pusha
push
adc
cmpsl
push
inc
add
or
mov
je
lods
or
ret
or
jns
jmp
outsb
sti
fsubrl
dec
jb
xor
push
cs
shll
lds
cs
mov
xchg
sub
sbb
cmp
xchg
enter
out
mov
jno
inc
sbb
stos
cmpsb
scas
mov
shll
sbb
int
jns
jmp
pop
cwtl
lea
add
jnp
out
mov
jmp
dec
mov
shl
cmp
imul
push
mov
rcrb
js
xchg
ret
xchg
addr16
push
jle
hlt
mov
jo
mov
adc
lods
jg
push
xchg
lods
imul
sbb
bound
pop
lds
scas
push
lods
or
add
fadds
fistpl
sbb
and
fwait
nop
add
leave
fsub
adc
movsb
xor
adc
mov
loopne
add
nop
inc
enter
mov
sbb
scas
stos
fldl
sti
fidivs
aas
into
sub
cmp
cmc
ss
add
cwtl
shl
sbb
fwait
out
adc
xorb
sub
add
pop
dec
fsub
jecxz
pop
imul
lret
test
cmp
cmp
mov
sbb
jg
gs
xchg
push
jo
pop
mov
pushf
ljmp
hlt
outsl
adc
mov
test
adc
cmpb
mov
xchg
pop
sub
ss
test
mov
or
clc
push
push
lret
repnz
add
or
stos
bound
mov
or
insb
mov
mov
scas
cmc
pop
hlt
adc
sub
outsb
or
lock
or
scas
inc
jbe
outsl
lret
cmp
inc
push
loopne
aaa
and
xchg
push
mov
pop
xchg
or
cmp
aas
xlat
xlat
dec
shrb
add
sub
into
or
pop
loopne
je
jmp
notb
mov
push
mov
outsb
push
mov
push
xor
into
in
sbb
fwait
nop
aad
lods
or
into
add
mov
push
fcoms
int
fadds
adc
mov
pop
and
test
sbb
mov
xor
mov
mov
mov
cmp
out
push
dec
mov
add
pop
xchg
sub
mov
repnz
int
sub
inc
pop
lds
jnp
xor
lds
shlb
idivl
sub
mov
mov
xchg
cs
testl
adc
cltd
nop
mov
mov
dec
mul
xchg
add
daa
icebp
jle
pop
in
push
pop
mov
mov
jmp
scas
xchg
or
cmp
sub
out
mov
insb
ljmp
iret
add
rorb
mov
cmc
jmp
or
pop
lcall
leave
mov
jge
adc
pop
xchg
rorl
insb
xchg
jo
xor
cmpsb
xlat
rorl
pop
sub
subl
xor
xchg
push
cmp
addl
out
jl
xor
mov
add
push
rorl
and
adc
xor
popa
push
pushf
divb
sbb
lahf
adc
add
enter
mov
lods
cmp
dec
xor
jno
cmp
insb
in
into
jge
stc
add
enter
fs
jb
add
push
inc
ljmp
cmc
shl
ljmp
add
xor
fdivl
inc
pop
dec
sub
mov
out
or
negl
mov
aas
dec
lods
xorb
out
xlat
hlt
shrb
dec
cmc
cld
sti
lret
push
mov
cmp
adc
popa
mov
cmp
out
jmp
mov
xchg
sbb
pop
in
sbb
push
lods
xchg
leave
cltd
fnstsw
rolb
adc
ret
andl
test
lock
sbb
lods
inc
loop
sub
jns
stc
dec
lods
hlt
pop
sub
out
mov
in
pusha
outsb
mov
sub
cmc
inc
dec
push
pop
js
add
pop
jge
lahf
mov
inc
lahf
xor
ret
lock
loopne
mov
repz
cmpsl
insb
fisubs
xchg
and
push
add
sbb
shrl
inc
js
insb
lret
jb
scas
or
subb
lds
fbld
adc
aad
or
mov
xchg
mov
cli
jno
loop
pop
sbb
or
jns
clc
xchg
sahf
lret
sbb
or
mov
mov
movsb
fcmovnb
insb
repz
ret
aaa
test
adc
pop
push
cli
inc
or
out
mov
shrl
cmp
or
dec
movsl
mov
adc
and
push
mov
xor
mov
inc
lahf
inc
sbb
jmp
popf
test
cmpsb
notb
and
push
jge
popf
ss
pop
adc
ljmp
adc
mov
pop
ret
xchg
enter
jb
shll
idiv
xchg
or
xchg
test
push
xchg
aam
lea
fldt
jbe
cmc
mov
push
sub
inc
cmpsb
jle
xchg
aas
xchg
add
cwtl
push
jno
inc
imul
enter
pusha
stc
lret
sbb
cmp
pushf
xor
xchg
pop
dec
stos
iret
add
das
lds
in
jb
add
or
popf
scas
data16
dec
push
orb
mul
into
pop
dec
sbb
dec
out
xorb
xor
xor
movsb
lcall
pop
imul
sti
push
ret
mov
cmpsb
testb
jmp
dec
inc
loope
push
xchg
push
sub
fnsave
lcall
daa
push
lods
push
sub
xchg
inc
jle
push
rorl
je
adc
lods
fmuls
xor
fildll
call
adc
mov
xor
divb
fdivrl
sub
mov
add
and
loopne
add
xchg
int3
dec
mov
fisttps
iret
repz
and
add
test
jno
sbb
fcomps
inc
lods
sub
inc
fbld
sub
in
dec
rcll
mov
test
rorb
xchg
sub
push
mov
shll
dec
filds
and
scas
and
and
lret
adc
xchg
ja
cmp
insl
pop
xchg
push
push
das
or
stc
push
lahf
ret
or
dec
and
jp
in
mov
pop
jp
stos
addr16
and
mov
xchg
mov
and
fbstp
imul
lret
pop
jle
pop
icebp
adc
dec
stos
lods
cli
fwait
cltd
inc
pop
xchg
sbb
cld
jmp
int
xchg
mov
jb
jns
mov
cmp
out
mov
shrb
push
dec
cmpsl
pop
shr
jne
push
jbe
mov
pushf
sbb
jns
mov
xor
jnp
pop
ret
xchg
adc
mov
sbb
int3
lods
mov
arpl
push
fnstenv
in
sub
out
aad
shr
call
mov
fisubl
imul
mulb
das
cmc
insl
aad
int
jge
dec
popa
dec
jg
jb
mov
ljmp
jae
sbb
shrd
pusha
lea
sbb
mov
mov
cld
xchg
orl
inc
adc
pop
xor
jl
into
cwtl
ljmp
adc
imul
repz
push
inc
lahf
aam
and
fxch
fidivs
sub
leave
ficompl
pop
mov
or
jno
notb
add
sub
add
fildl
ja
outsl
js
data16
jecxz
pop
out
in
pop
xorl
cltd
out
repz
pusha
ficomps
pop
mov
mov
je
sahf
insb
daa
push
jle
pusha
ds
mov
sub
cmpsl
xor
lret
add
pushf
scas
inc
cmp
jbe
pop
push
pop
mov
shlb
or
cmc
sbb
dec
jne
sbb
and
and
cmpb
test
cmp
movsl
cld
add
stc
pusha
lods
les
jne
inc
mov
mov
ret
lock
xchg
data16
in
fcoml
xor
add
test
mov
fcomps
ljmp
jge
repz
mov
aas
es
imul
pop
dec
jge
repz
jp
add
outsb
sahf
push
out
and
pop
dec
push
out
movsb
add
xchg
pop
and
add
f2xm1
jo
int
jbe
fisubrs
or
aas
out
or
inc
cmc
lods
sarl
push
xchg
arpl
pop
push
gs
xchg
inc
jl
aaa
pop
icebp
push
ret
cmp
gs
push
sbb
cwtl
les
pop
subb
adcl
mov
arpl
and
pusha
xor
imul
sbb
fwait
loop
xor
sub
push
cltd
in
imul
clc
mov
aas
cltd
jae
or
and
ret
iret
shll
jmp
sbb
mov
sub
std
test
imull
lret
gs
imul
dec
jns
es
sbb
push
pop
push
xor
lahf
cld
cmc
jg
sub
jmp
sub
mov
add
cwtl
daa
mov
call
inc
dec
mov
lret
pop
scas
loop
push
xlat
cwtl
and
add
jl
xlat
xlat
or
repz
sarl
jl
loope
cmp
mov
jo
or
jge
xor
xchg
cltd
push
cltd
pop
repz
into
ret
bound
push
dec
jbe
add
add
mov
jecxz
sbb
jb
int3
mov
in
daa
loope
scas
push
cwtl
movsb
jne
enter
jb
mov
mov
add
add
js
in
lea
lcall
test
push
jmp
lret
jl
dec
out
jbe
push
pop
pop
xchg
shrb
jo
out
negb
fcmovnbe
add
xchg
jnp
cmp
loop
xor
or
inc
lahf
rcl
nop
add
dec
mov
rcl
js
loopne
out
xchg
arpl
inc
xor
and
xchg
adc
lock
dec
inc
stos
shrl
cmp
shl
enter
insb
xchg
mov
ljmp
add
lret
adc
scas
mov
mov
insl
pop
inc
push
or
xorl
aas
xlat
inc
or
lahf
test
iret
imul
push
mov
xchg
rolb
sbb
adc
mov
inc
cltd
dec
fildl
or
iret
les
nop
push
rclb
sahf
loope
push
and
stc
xor
daa
outsl
jp
mov
scas
cli
ja
ljmp
mull
cmpsl
andb
add
out
adc
cmp
cmp
inc
in
xchg
sbb
xchg
dec
and
jo
pop
fs
scas
adc
push
sub
sub
mov
pop
xchg
outsb
xchg
mov
ja
pop
push
mov
mov
dec
mov
in
je
adc
popa
scas
pop
sti
dec
add
push
or
xor
lret
sahf
out
scas
push
bound
ss
xchg
aam
or
popf
sti
cmp
in
add
andl
jbe
pop
mov
inc
jne
cmp
cli
and
xor
jo
frstor
sbb
loopne
mov
repnz
repz
popa
and
inc
ss
cmp
jp
mov
sbb
and
insb
stos
dec
cld
rep
in
scas
je
mov
mov
ficompl
xchg
sub
pop
dec
add
mov
adc
xor
or
and
jno
or
jb
mov
scas
push
fs
aaa
add
icebp
inc
out
mov
push
and
rcrl
add
push
jle
cmp
mov
ret
mov
pop
aad
xor
test
imul
mov
stc
jo
mov
addr16
cmp
loopne
stos
cwtl
movsl
adc
push
out
fucom
shrl
imul
call
push
pop
imul
jmp
data16
lods
les
mov
and
push
inc
mov
add
mov
loop
fs
add
dec
mov
xlat
shlb
push
xor
inc
cmpsb
or
fists
mov
mov
and
gs
sbb
test
xor
pop
in
lock
out
cmp
xor
movsb
jno
mov
cmp
pop
and
rol
mov
dec
inc
sub
movsb
test
adc
movsb
stc
adc
mov
push
insb
div
mov
in
dec
in
es
rorb
xor
popa
lock
into
aam
push
dec
lahf
adc
ljmp
cmpsb
or
jae
ja
and
add
add
sahf
outsl
or
xchg
enter
fwait
stos
jne
jle
ljmp
roll
ret
rorl
clc
mov
inc
jns
fisttpl
mov
sub
mov
into
insb
xlat
mov
jnp
cmp
push
popa
mov
push
rcll
adcl
inc
pop
addps
movsb
jecxz
jg
push
adcl
ret
shl
scas
popa
repz
shll
or
cmpl
dec
mov
fucomip
mov
cwtl
xchg
xor
push
aas
mov
out
inc
rorb
test
rcl
and
stc
and
ss
iret
dec
pop
or
adc
pop
xchg
leave
pop
jno
xchg
dec
shll
mov
jmp
mov
mov
sbb
push
jno
in
xor
cmp
popa
xchg
mov
std
stos
sub
cwtl
movl
xchg
test
dec
cld
sub
jno
mov
mov
jbe
inc
js
and
movsb
cmp
push
movsb
popf
xchg
adc
arpl
ds
or
sbb
call
jno
mov
repnz
and
outsl
jbe
insb
and
testl
sbb
ss
sbb
pop
stos
adc
sbb
sar
orps
xor
xor
cmc
inc
mov
test
xor
mov
jmp
sbb
out
mov
or
repz
jg
in
push
sub
xchg
mov
and
sub
cmp
cmpl
push
sar
xchg
add
fadds
inc
cmpsl
sarl
scas
inc
loop
jb
xchg
mov
je,pn
inc
hlt
int3
or
out
adc
push
xchg
jp
add
into
aam
fadd
lock
push
or
pop
int
in
push
out
push
push
leave
pop
mov
aas
pop
iret
mov
insb
add
push
pushf
fisubrs
mov
je
iret
xchg
xor
adc
inc
push
sub
mov
xchg
xor
in
cmp
dec
loope
fcomps
mov
xor
test
ret
push
fdivr
jle
mov
popa
cld
push
dec
jns
mulps
mov
mov
or
xchg
pop
jmp
lahf
out
pop
xor
adc
cmp
repnz
int3
lods
cwtl
or
cmp
clc
mov
jge
shll
push
pop
aas
loopne
mov
bound
dec
mov
hlt
and
pop
lret
ficoml
mov
jnp
mov
jmp
loopnew
cmp
dec
mov
popf
jo
dec
jle
ss
jne,pt
rclb
and
arpl
add
loope
les
pusha
aad
mov
and
sub
testb
rcrl
mov
stc
rclb
ret
repz
int
cmpsl
enter
fcompl
in
pop
mov
dec
xor
adc
mov
mov
sub
loope
popf
fldl
gs
mov
push
jmp
cmp
sbb
xor
gs
xor
xchg
mov
mov
pop
pushf
enter
mov
push
mov
fists
jge
inc
mov
xor
pop
je
or
dec
jae
jns
inc
mov
int
cs
push
jg
aad
xchg
sbb
sbb
xchg
ds
test
add
iret
mov
aad
shl
ficomps
lret
enter
daa
jge
into
pop
movsb
call
popf
sarb
cmp
or
lds
cmp
int
inc
lret
mov
add
sub
jne
mov
adc
lret
sbb
xchg
ret
in
xor
xor
insb
mov
es
cmpsb
push
mov
jae
lods
cltd
cmp
lock
pusha
je
lret
loope
stc
push
xlat
xorb
iret
sub
into
jo
add
je
jbe
adc
imul
clc
mov
cmp
stc
divb
cmp
xor
mov
jb
loopne
sbb
add
pop
push
pusha
int
pop
lcall
and
adc
xchg
mov
jecxz
push
xor
addr16
push
adc
pushf
inc
sbb
adc
lret
jmp
popa
sbb
jnp
popa
scas
iret
out
cmp
int3
cmp
sti
jae
pushl
pop
mov
mov
and
loop
shr
cltd
xor
lcall
jl
add
je
aaa
xor
mov
sti
ss
xchg
sbb
ja
or
jle
in
std
mov
sahf
lcall
fwait
xor
mov
mov
je
mov
lds
xchg
insb
sbbl
dec
dec
testb
sbb
shrl
add
or
test
cs
fs
call
dec
xor
in
pop
rcrb
add
call
push
gs
pop
stos
out
sbb
fnstsw
mov
imul
pop
jno
sbb
jmp
xor
repz
mov
hlt
negb
push
and
jbe
pop
lret
pop
jae
push
pop
sub
mov
inc
adc
das
in
jl
mov
call
sub
mov
jb
sarb
andl
mov
outsb
mov
sbb
and
test
mov
and
rclb
or
adc
pop
adc
aad
push
pushf
ss
sti
or
push
test
data16
adc
filds
jmp
mov
pop
scas
inc
dec
pop
aaa
dec
cs
mov
lret
int
cmp
fisubs
fmull
repnz
add
ret
jo
out
or
in
leave
mov
xchg
cli
inc
stos
mov
mov
push
fildll
sbb
daa
xchg
pop
xor
pushf
rcr
test
adc
mov
pop
int3
enter
rcrb
inc
mov
sbb
xor
fcoms
sbb
xchg
mov
punpckhbw
xor
xlat
test
add
pop
jbe
cmp
inc
push
jne
mov
dec
sub
cmp
cmpsl
aad
sbb
xchg
hlt
cwtl
adc
xor
jge
aam
xchg
sbb
mov
out
in
rolb
and
push
loop
arpl
push
mov
pop
das
jo
inc
add
add
push
daa
ss
rcll
mov
push
mov
dec
jle
pusha
mov
jbe
xor
push
mov
pushf
push
add
fisubl
cmpsl
cmpsb
loope
dec
into
idivl
push
pusha
aam
int3
fcoms
lcall
pop
cmp
int
lahf
mov
mov
inc
iret
jl
xor
mov
add
jae
pop
imul
xor
mov
adc
les
lock
fildll
aam
inc
aam
cmp
iret
ljmp
and
jmp
inc
roll
pop
sbb
push
jne
mov
xor
add
pop
movsl
cmp
mov
xchg
fisubs
int3
mov
sub
xlat
push
inc
push
push
popa
nop
fcomps
cmp
das
and
lahf
mov
cs
clc
mov
jg
mov
cmp
sbb
mov
lods
sar
sub
clc
inc
add
inc
cmpsl
jns
sbb
add
dec
ret
inc
shll
leave
inc
cmp
pop
and
xchg
stos
xor
push
pop
flds
xchg
aaa
sub
mov
inc
mov
pop
xor
je
ret
dec
push
jns
sub
mov
aad
ljmp
dec
in
mov
xor
mov
cli
mov
jbe
dec
neg
jle
jae
push
push
insl
pusha
iret
stos
fwait
das
mov
mul
mov
or
push
aam
aam
jne
loop
xor
pop
mov
in
adc
popf
xchg
xor
cmpsb
aad
into
pusha
xor
xor
mov
insb
mov
les
clc
popa
inc
mov
fbstp
mov
ret
adc
sbb
push
xchg
mov
jnp
jb
insl
insb
and
ja
pop
mov
sbb
mov
jne
loope
cmp
loopne
pop
imul
sub
mov
mov
out
psrld
pop
lea
cwtl
stc
add
xchg
xor
sub
mov
movsl
fldcw
push
or
xchg
dec
es
xchg
loopne
popf
dec
shlb
xchg
inc
jne
imul
sbb
inc
xor
xchg
mov
pop
ret
or
cmc
xchg
clc
imul
mov
cmp
jae
pop
push
xchg
inc
mov
dec
lds
pop
sub
aad
sub
push
cmpsl
mov
xchg
or
dec
dec
xchg
test
pop
jecxz
adc
stos
lret
adc
or
inc
sub
mov
lret
mov
mov
fiaddl
xchg
test
pop
pusha
aam
mov
imul
jbe
mov
nop
mov
sub
pop
sub
push
test
and
sub
sti
ret
outsb
xchg
imul
push
and
sahf
ret
cmp
sbb
xchg
loop
out
and
jne
call
or
adc
push
pop
adc
ja,pt
lret
push
push
loope
dec
or
lods
lahf
inc
fwait
cwtl
jb
mov
pop
xor
sub
or
shll
xchg
rcll
xchg
jae
ss
iret
ficoml
adc
lds
inc
ret
jb
dec
push
fidivrl
push
adc
pop
or
inc
cmp
mov
xor
push
into
sbb
movsl
sti
lahf
jae
sbb
mov
xchg
sub
aaa
sahf
loopne
aam
hlt
adc
or
outsb
pop
add
xor
xchg
mov
loop
lahf
jmp
dec
mov
ds
dec
dec
pop
in
mov
pop
inc
adc
lcall
or
ret
jg
jo
push
cmp
int
sbb
cwtl
and
adc
mov
jo
add
or
add
xchg
fistps
jne
mov
add
mov
and
je
movsb
dec
push
cmp
jp
push
sub
test
push
data16
cs
adc
xchg
xchg
lahf
pop
popf
push
lea
aam
inc
cmp
sbb
fcomip
push
adc
lods
and
pcmpeqd
fs
or
jae
xchg
adc
and
push
and
call
in
inc
xchg
pop
pop
cmpsb
scas
xchg
out
insb
sbb
fsubl
scas
dec
mov
mov
jns
outsl
arpl
mov
int
js
dec
inc
sub
dec
push
mov
lret
add
rcrb
mov
xchg
and
sbb
mov
ret
pop
movsl
xchg
jno
loope
clc
pop
mov
mov
cmp
push
add
aad
mov
outsb
invd
insb
das
lahf
xchg
and
add
sbb
jno
push
jo
cltd
mov
mov
std
and
cli
gs
push
jg
test
xor
lret
push
cmp
xor
movsb
jp
xchg
rol
insb
mov
or
out
sbb
daa
xor
ja
mov
pusha
and
push
js
cmc
popa
pop
nop
or
mov
sub
lea
mov
dec
pop
xchg
cmp
mov
jp
cli
xchg
imul
ss
dec
inc
push
out
or
enter
xchg
sbb
lods
pop
mov
fwait
jle
xor
pop
mov
add
imul
pop
pop
fimuls
sahf
fdivp
mov
ret
push
int
jns
mov
xchg
pop
sub
jo
pop
sub
push
mov
and
xor
stos
dec
cli
ret
xor
xlat
enter
pop
mov
jns
and
enter
xor
cmpsb
rcl
aam
int
mov
dec
dec
out
add
xchg
insb
pop
sahf
lods
cmp
cmc
sbb
mov
lock
pop
push
cmp
dec
cmp
outsb
pushf
jns
mov
imul
clc
xorb
scas
mov
jmp
js
test
ret
push
iret
inc
add
imul
scas
loope
mov
push
jne
ror
jl
test
or
popf
clc
repz
mov
inc
sbb
lret
cmp
daa
into
mov
dec
pop
mov
push
sbb
jp
mov
jne
call
dec
jmp
jo
sar
mov
dec
pushf
aad
mov
mov
ljmp
xchg
jne
add
mov
and
addr16
addl
jge
leave
cmp
inc
push
ds
scas
in
pop
addr16
inc
inc
sub
push
sti
call
jno
mov
jl
jae
mov
xchg
mov
aaa
loope
xchg
xchg
jbe
add
dec
inc
arpl
push
in
sbb
aad
stc
lods
movsb
shll
lea
sub
cmp
sub
mov
cwtl
lcall
xor
lea
inc
sbb
xlat
xor
pop
jb
incb
lock
js
and
sbb
push
cld
jge
rcrl
mov
test
call
shrb
or
repz
sbb
out
popf
or
pop
push
sbb
mov
outsl
fistpl
dec
mov
dec
lods
pop
in
mov
out
jne
movsb
adc
add
aaa
sub
stc
xor
jle
mov
fwait
jge
in
in
repnz
push
push
add
jnp
or
or
pushf
dec
adc
out
fstl
es
xchg
mov
push
out
jg
fcmovbe
dec
enter
xor
mov
jae
xor
call
in
loop
notl
mov
lcall
add
pusha
test
insb
xlat
and
xor
ds
dec
push
or
aas
bound
stc
xchg
jae
aam
xchg
shlb
repnz
xor
fwait
push
xchg
fcmovnu
mov
test
clc
jecxz
dec
andb
mov
aad
xchg
xchg
or
loop
fsub
sbb
mov
out
xor
or
xchg
push
add
xor
or
pop
mov
pop
aad
pop
or
or
icebp
iret
cmp
or
cmp
sub
xchg
sub
inc
test
jle
aaa
jp
in
jno
daa
das
mov
mov
cs
shl
enter
inc
cmp
ret
stos
push
out
daa
das
in
xor
cmp
xor
xlat
mov
cmp
jge
xor
add
add
jle
add
out
sub
dec
mov
cmpl
mov
jg
fs
xor
mov
sahf
sbb
test
lret
ds
test
push
sbb
out
dec
adc
int
cmp
pop
mov
mov
fildl
dec
mov
push
imul
out
jne
dec
icebp
mov
out
adc
mov
cwtl
movsb
xchg
loope
cltd
adc
dec
das
jp
out
cmp
nop
xor
push
push
mov
fldcw
xor
jbe
bound
pop
mov
lahf
xchg
and
and
dec
mov
sub
adc
sbb
dec
push
add
bnd
lods
mov
in
add
cmc
xor
or
outsb
out
mov
fidivrs
mov
fnstsw
sub
sub
addr16
pop
jmp
adc
push
shll
pop
or
lret
mov
out
xchg
mov
xor
adc
jne
mov
je
bound
pop
in
lsl
sub
mov
out
and
xchg
mov
push
test
cltd
sub
xor
insl
das
ret
mov
cmp
fcoms
in
int3
and
xchg
xchg
out
jmp
outsb
movsl
mov
mov
pusha
add
mov
lock
dec
mov
fmull
push
lcall
xchg
incb
add
cmp
mov
cmpb
cs
cmp
pop
imul
and
push
dec
adc
rclb
subb
xor
fldcw
popf
sbb
rcrb
pusha
push
xchg
xchg
pop
fbld
cmpsb
insb
div
ja
cmp
aas
clc
mov
add
mov
mov
daa
jnp
or
icebp
pop
loope
mov
leave
inc
pop
cmp
and
mov
mov
repnz
in
dec
push
dec
jns
push
leave
out
xor
sbb
add
inc
push
xchg
jb
push
lret
shll
lock
jl
cmp
clc
xchg
fsts
xchg
jle
lock
xchg
clc
jl
icebp
outsb
mov
xlat
and
sub
icebp
insb
outsl
xchg
outsb
outsl
mov
shlb
jo
jnp
xor
mov
lock
xor
xor
lds
xchg
insb
inc
je
mov
ljmp
outsb
cmpsl
cwtl
mov
xchg
lahf
jo
scas
lds
xor
mov
sbb
jecxz
xchg
iret
repz
fwait
and
imul
jle
pop
aam
mov
mov
sub
sbb
adc
icebp
inc
xchg
add
orl
add
aad
fmuls
lret
pushf
fxch
stos
cld
loopne
loop
out
push
pop
pop
sbb
bound
outsl
push
outsb
cmp
scas
ss
pop
xchg
fisttpl
out
popf
push
xor
push
cwtl
pop
out
cmp
sub
pop
stos
xchg
ret
out
movsb
or
and
pop
repz
sete
ret
sbb
pop
aaa
xor
lock
inc
mov
insb
sbb
addr16
xchg
sahf
shrb
lods
aaa
cmc
test
shl
fsubrl
push
cmp
nop
push
jl
pop
cmp
dec
or
push
inc
or
mov
mov
pop
popf
subl
adc
jecxz
fistpl
fcmovnbe
pop
shrl
push
fdivrp
out
sbb
sbb
push
cwtl
xorl
inc
dec
pop
es
xchg
adc
add
adc
rorl
mov
mov
xlat
js
and
jo
dec
sti
pusha
xchg
or
mov
cmp
or
stc
pop
add
mov
or
or
pop
mov
sub
js
mov
jle
or
sub
cmp
sub
push
sub
mov
mov
mov
addr16
jo
mov
dec
ret
pop
icebp
in
pop
dec
add
fxch
jnp
jmp
mov
cmp
cli
pop
ds
jns
xor
and
add
inc
std
xor
and
xchg
popl
xor
adc
cmp
scas
ret
les
sarb
in
lock
jns
imul
cmp
jbe
stc
test
pop
mov
xlat
ja
xor
adc
addl
push
push
into
jno
cmp
jae
dec
lds
outsl
out
add
mov
or
cmpl
stos
xor
cmp
shl
xchg
orl
or
xchg
push
mov
fnsave
addb
jo
jp
rsm
jo
jg
jae
ss
push
cmp
movzbl
fimull
out
sub
fsubl
xchg
es
enter
or
movsb
stos
stos
imul
in
add
mov
sbb
mov
or
roll
pop
dec
scas
cwtl
call
test
cmpsl
xchg
push
insl
and
sub
lods
dec
outsl
arpl
push
sarb
inc
hlt
pop
add
lock
xchg
dec
and
push
push
into
dec
repz
and
sahf
sub
cmp
aaa
pop
test
xlat
adc
jle
imul
add
stc
into
pop
das
mov
xor
mov
jg
lahf
int
and
and
ja
ss
mov
sbb
jno
std
dec
cmp
out
cmp
or
inc
lahf
jne
pop
and
das
add
push
fsts
movsb
fisttpl
rclb
xchg
mov
rorl
xorb
aaa
sub
fisubrl
pushf
jecxz
mov
fsubrs
cmp
pop
and
inc
jecxz
mov
gs
mov
push
xor
imul
ss
mov
sub
pop
cld
mov
mov
jp
and
xchg
add
daa
adc
xor
mov
push
cmpsb
ljmp
cmp
imul
cmp
sbb
mov
xorb
addr16
bound
or
out
mul
sti
pop
pop
adc
cmp
pusha
push
clc
lret
daa
pop
js
pop
fwait
cwtl
cmc
and
and
or
int
pop
xchg
xor
cmp
aaa
xor
popf
dec
push
pop
sbb
sbb
popa
insb
sbb
gs
out
mov
lret
leave
idiv
dec
mul
test
fsubl
sbb
push
cs
and
mov
mov
lock
jno
jns
loopne
cmp
stos
mov
pop
movsb
js
int
pop
pop
int
cs
pop
cmp
repz
insl
scas
in
cmp
repnz
dec
sub
rorl
dec
mov
xor
outsl
mov
das
xor
jnp
dec
cs
add
or
mov
add
into
jge
jecxz
test
add
bound
cmp
shlb
jae
mov
cmp
sbb
roll
sahf
xchg
test
cmp
adc
popf
fdivrs
adc
stc
or
hlt
or
mov
rcll
xor
lret
mov
add
inc
imul
movb
mov
and
jmp
and
imul
in
mov
sub
pop
pop
sub
daa
pushw
inc
inc
jae
das
xorl
sub
xchg
xchg
outsb
test
iret
mov
in
pop
pop
pop
and
lret
je
stc
int
cmp
fisubl
out
xor
or
dec
mov
lods
aas
mov
ret
out
neg
das
scas
mov
fwait
xor
stos
nop
and
add
adc
ljmp
xor
std
rorb
ja
lret
rcrl
fstl
jae
jae
ja
out
and
sub
inc
add
xorb
aas
clc
lods
fnsetpm(287
mov
xor
fidivl
add
pusha
xchg
fistl
repz
jmp
mov
mov
cmp
repnz
ret
ss
out
jl
sarl
out
xlat
sub
rcrb
inc
mov
adc
je
int3
lds
cmc
fdivrl
dec
push
scas
pop
pop
mov
int
sbb
push
aaa
mov
dec
js
insl
lods
mov
lds
in
xchg
aas
cld
cmp
loop
inc
fmulp
ficoms
ret
sbb
cmp
mov
adc
xchg
loop
push
testb
adcb
cmpsl
test
insb
popa
dec
nop
mov
lea
mov
xor
inc
popf
or
adc
outsl
shll
leave
pop
xor
cld
cli
ja
daa
bswap
movsb
icebp
inc
in
fnsave
fwait
daa
and
lret
and
jp
jbe
and
mov
push
sub
push
add
ss
inc
push
scas
out
jmp
addr16
test
es
sub
push
sub
aad
sarb
in
mov
or
xorb
pop
xor
test
dec
cltd
jae
sub
mov
lods
mov
lods
xor
lea
dec
push
in
dec
pop
mov
push
pop
cmp
test
faddp
sub
sbb
fwait
scas
popf
movsb
jns
jge
pop
cli
jo
and
xor
add
mov
sub
pop
mov
iret
rorb
dec
sbb
mov
test
out
pop
rorb
lcall
lret
pop
fsub
add
shll
mov
push
mov
enter
stc
add
fcompl
cs
out
inc
loop
and
les
pop
push
jmp
pop
test
mov
mov
popa
mov
movsl
cmp
loopne
pop
cwtl
call
leave
rclb
xchg
jge
out
push
dec
jnp
sahf
or
dec
and
push
or
mov
lds
data16
iret
and
push
stos
in
cltd
lahf
mov
push
cltd
cmp
jecxz
mov
pop
pop
mov
fldl
je
inc
inc
mov
dec
int3
or
pop
sbb
daa
jne
neg
repz
xlat
pop
fdivl
mov
push
mov
mov
scas
mov
fistps
out
lret
mov
inc
je
icebp
daa
pop
inc
sub
adc
iret
pop
adc
lret
mov
outsb
mov
les
or
cmc
dec
in
loop
fsubr
pop
cmpsb
ja
cwtl
test
nop
pop
fwait
xchg
or
sarb
jae
dec
out
gs
or
test
mov
add
repz
pop
imulb
inc
adc
xchg
dec
pop
cli
sub
hlt
stc
stc
push
fisttpll
cmp
jp
mov
inc
mov
leave
mulb
adc
push
imul
adc
pop
sahf
inc
pop
movsb
push
in
ss
addr16
aaa
imul
mov
out
sub
inc
inc
xor
aaa
popf
les
and
fsubrs
aad
lahf
inc
inc
icebp
icebp
sahf
push
or
pusha
fistpll
jno
retw
gs
add
push
xor
fcompp
cmpsl
out
mov
push
arpl
add
add
sbb
insl
scas
rclb
cmp
in
pop
xor
inc
rorl
add
adc
pop
cld
push
pusha
fidivrs
addl
mov
sbb
xor
shll
add
xchg
shlb
stos
or
stos
shl
mov
lret
movsb
mov
push
movsb
push
jle
or
mov
push
inc
repnz
int3
add
int
xor
push
push
or
push
jbe
jnp
xchg
fwait
mov
inc
xchg
xchg
jmp
das
out
cltd
xchg
xor
cmp
xchg
ds
jp
enter
add
pop
nop
outsb
jo
lret
das
inc
imul
fistps
outsl
and
jge
bound
aad
mov
mov
divb
je
aas
pcmpeqw
rol
inc
fwait
hlt
and
rclb
xcrypt-ctr
cmpsl
push
arpl
mov
add
inc
jg
xchg
xchg
movsl
mov
fnstenv
cltd
or
js
movsb
jmp
xchg
fistps
xchg
scas
adc
mov
fs
into
inc
daa
xchg
outsb
push
add
inc
xchg
pop
ret
adc
pop
cwtl
and
inc
mov
xchg
rorb
dec
xchg
jbe
inc
aad
pop
fscale
inc
jl
inc
shr
mov
mov
lods
inc
mov
jmp
xor
das
into
and
iret
cmp
or
fistl
decl
repz
push
lret
data16
inc
and
cmp
xchg
mov
pop
aad
dec
adc
push
test
mov
aaa
mov
inc
pop
pop
mov
mov
jp
or
mov
xor
fiadds
scas
push
jno
xchg
ret
push
push
lret
pushl
sahf
dec
xchg
int
push
push
loopne
jnp
loop
jbe
xor
scas
leave
fs
enter
imul
xchg
and
mov
outsl
mov
sti
pusha
lret
enter
daa
addr16
in
sub
pop
icebp
dec
adc
add
out
out
mov
mov
scas
es
add
add
sub
xchg
sub
das
in
add
cltd
cmpsl
or
fcmovnbe
hlt
mov
sbb
push
popa
mov
mov
adc
das
stc
stc
nop
in
push
and
dec
das
je
and
sbb
inc
imul
sbb
xchg
inc
push
sbb
pusha
sbb
inc
je
mov
into
movsl
ljmp
or
pop
inc
mov
frstor
or
insl
fdivl
arpl
sbb
sub
repz
sbb
fisttps
loopne
mov
pop
mov
mov
mov
xchg
es
add
cli
cmp
sbb
stos
jo
adc
pop
pop
sbb
je
xor
cmp
jge,pn
cmpsl
xchg
lret
add
lods
jbe
ds
in
sub
sbbb
iret
jmp
push
fidivrl
pop
imul
ret
xchg
sub
push
ja
lea
jbe
movsb
in
or
pop
pop
stos
icebp
push
outsl
add
jnp
or
adc
cmp
dec
pushf
fs
psubsw
mov
adc
pop
add
inc
ljmp
fsubl
add
addr16
inc
mov
cmp
mov
cmp
aad
arpl
mov
mov
ss
mov
out
movsb
fwait
ss
dec
and
cmp
into
inc
and
pop
mov
out
arpl
sub
scas
ret
push
mov
cmp
mov
cmp
jo
mov
xchg
addb
push
mov
cmpsb
into
dec
sbb
or
xor
das
lea
mov
or
jle
aas
cltd
xchg
pusha
popw
add
jecxz
hlt
xor
cmc
sbb
scas
pushf
call
lock
inc
and
mull
dec
mov
pop
pop
iret
sbb
sti
in
push
mov
xchg
sbb
rolb
pop
shll
inc
test
int
es
xor
xchg
inc
cmpsb
and
xchg
test
imul
sub
jno
and
and
je
jo
sar
ds
dec
dec
push
mov
inc
into
es
mov
lahf
xor
in
mov
stc
outsb
out
mov
push
xchg
es
das
jnp
xchg
and
and
lds
xchg
icebp
push
mov
push
jb
lds
jge
inc
dec
rcl
cmc
pop
cmpsb
mov
add
int
pop
cltd
mov
inc
into
xchg
inc
sbb
mov
addr16
xchg
fsubl
out
inc
test
pop
fnstsw
or
test
xor
push
push
sub
lock
cmp
jg
lods
mov
imull
ljmp
sub
jae
cmp
test
xchg
outsl
pop
loop
insl
jbe
mov
xchg
pop
sahf
push
fildl
test
pop
xor
pavgb
fistpll
jge
cld
xor
stos
popa
mov
cmpsl
or
stc
mov
push
dec
enter
pop
ljmpw
in
jl
out
pushf
insl
icebp
out
sbb
xor
pusha
push
stos
add
fwait
in
pop
push
pop
xchg
in
mov
xchg
add
ja
or
scas
aaa
sub
in
fidivrl
movsb
lret
imul
xchg
aas
inc
les
jp
or
movsl
and
pop
rcr
test
in
mov
faddl
push
ja
sub
xor
xchg
fimuls
dec
popf
cmpb
add
fisubrs
loop
clc
inc
in
mov
dec
je
out
dec
outsb
cmp
pop
scas
cmp
jecxz
add
push
mov
jmp
add
sub
xchg
repz
loopne
sub
sbb
loopne
jae
loop
jo
cmc
inc
cmp
mov
dec
mov
ss
cmpsb
cli
xor
jbe
lea
adc
idivl
jb
mov
imul
jnp,pn
test
xchg
cmpb
mov
pop
jnp
std
in
sbb
dec
enter
test
cld
jg
jg
and
test
xchg
dec
adc
jmp
lahf
shlb
int
jbe
jo
aas
shlb
ljmp
andl
daa
dec
sub
pop
sbb
adc
adc
sub
lock
mov
movsb
scas
shll
lea
cmp
mov
xor
loope
or
pop
mov
jbe
out
sbb
cld
mov
pushl
adc
adcb
lea
inc
mov
inc
jp
push
std
jns
mov
stos
xor
test
mov
out
and
test
mov
ljmp
aam
cmpsb
mov
inc
pop
dec
xor
stc
daa
inc
fidivs
xchg
xor
fwait
int
push
fisubs
pop
popf
jns
cli
loopne
negl
outsb
loopne
mov
xchg
mov
notb
sbb
push
mov
push
icebp
mov
mov
ret
lahf
mov
jne
jno
pushf
mov
mov
pop
neg
mov
mov
dec
or
lahf
popf
xor
inc
cmpsb
add
mov
movsb
lahf
xchg
sbbb
xlat
test
xlat
outsl
fcmove
pop
mov
lods
insl
jl
js
loop
call
mov
iret
ret
xchg
dec
xchg
pshufw
les
pop
or
sub
mov
mov
fldenv
mov
ja
fstpt
pushf
adc
adc
shll
pop
aas
inc
lret
popf
dec
dec
bound
ficoml
jmp
push
sbb
push
adc
loopne
sub
movsb
jecxz
mov
or
int3
push
lret
xlat
je
fsubrs
mull
jae
lret
sarb
dec
in
wrmsr
or
inc
mov
das
lcall
movswl
mov
lock
mov
dec
push
pop
stos
xor
popl
pop
lahf
jb
xchg
adc
popa
sbb
jecxz
jl
xchg
mov
cmp
jns
pusha
insb
addr16
mov
xchg
lret
std
mov
xlat
daa
rcl
inc
pop
mov
or
sbb
lret
enter
push
or
ss
mov
stos
aad
dec
in
lock
mov
sub
repnz
loopne
and
loop
je
in
loope
jo
mov
dec
in
mov
push
and
xor
mov
icebp
mov
pop
aas
test
dec
movsl
xchg
stc
decl
xchg
aaa
data16
fildl
jp
mov
push
jp
into
rcrl
add
mov
sti
push
lahf
sti
jge
and
out
aad
jnp
dec
enter
sar
cwtl
popa
jo
xor
mov
xchg
jg
sub
mov
addr16
adc
xchg
scas
ret
js
inc
int3
in
mov
and
insb
mov
inc
in
and
and
cs
scas
fiaddl
out
add
mov
sbb
shlb
rorb
sbb
adc
lods
xor
jg
push
lcall
insb
xor
icebp
and
aad
loopne
cmp
sbb
divb
mov
add
adc
icebp
or
cltd
jecxz
cmc
mov
cmpl
repz
adc
push
push
scas
pop
or
and
movsb
cmp
sbb
add
cld
scas
mov
mov
shl
stc
or
subl
pop
cmpsl
pusha
pop
push
pop
in
test
cmp
dec
out
jmp
jne
into
lds
mov
fsubs
sarl
sbb
enter
xchg
pop
sbb
mov
lahf
nop
jmp
cmp
xor
xchg
inc
cmp
pop
xchg
lea
and
jl
inc
adc
movsb
dec
inc
outsl
xlat
dec
hlt
adc
faddp
jl
test
and
push
push
addr16
dec
inc
daa
jge
xor
lods
adc
sbb
push
mov
sub
inc
fsts
fiadds
repnz
sbb
fisttpll
sbb
cmp
sbb
andl
in
popf
push
das
sub
xor
pop
jg
and
es
outsb
dec
or
in
ret
sbb
xchg
jb
in
aam
out
in
std
popa
push
repnz
jne
and
ret
cwtl
pop
data16
adc
nopl
or
dec
jle
ds
adc
ja
push
pusha
mov
sarb
pop
mov
sbb
jge
out
mov
nop
pushf
push
aad
sbbl
rcl
fsubl
pop
push
add
int3
jge
pop
fdivp
pop
jo
sbb
push
sub
mov
icebp
lret
call
cmp
fisubrs
mov
lea
rol
out
call
sub
testl
mov
fimuls
mov
cwtl
add
dec
jge
outsl
gs
xchg
adc
push
adc
xor
sbb
jmp
xchg
pop
cmpsb
lea
loopne
outsb
loopne
cli
outsl
mov
frstor
cwtl
dec
sbb
rcrb
sbb
add
mov
inc
lahf
frstor
xor
push
push
xorb
mov
xchg
test
inc
push
cmpsl
mov
sbb
hlt
outsb
xor
sbb
add
xor
cmp
rol
test
dec
ficoms
leave
dec
ret
fidivs
lods
ljmpw
add
mov
mov
jbe
arpl
pop
sbb
test
das
inc
adc
sti
test
in
xchg
inc
sbb
int
adc
shlb
sub
cmp
out
xor
inc
lahf
ror
jecxz
mov
shr
icebp
lret
lds
mov
sbb
dec
sarb
les
cmp
add
xor
icebp
out
arpl
cs
ror
stos
fwait
subb
stos
mov
mov
dec
xor
push
nop
mov
cmp
mov
inc
push
clc
xchg
data16
or
push
and
push
jle
and
bound
cld
and
dec
mov
ds
rorl
sbb
popf
adc
test
loopne
inc
js
fs
mov
sarb
daa
adc
xor
ret
jge
mov
lds
rcr
sbb
and
sub
mov
push
gs
dec
nop
cltd
and
dec
pop
xor
cmp
aaa
ret
sub
and
pop
xchg
nop
jecxz
popf
pop
out
dec
stos
std
in
xchg
sub
cmp
lock
sbb
je
xlat
fucom
shll
push
and
ja
dec
cmpsl
mov
loopne
add
cmp
cmc
hlt
pusha
scas
hlt
arpl
aam
int3
cwtl
addb
aas
loop
movsb
xchg
ffreep
sbb
mov
cld
cmp
sahf
daa
movsl
movsb
loopne
int
and
aad
movb
in
dec
ljmp
mov
push
and
or
dec
cmp
xor
adc
xor
mov
arpl
jb
push
dec
inc
pushf
mov
push
test
mov
and
sbb
jno
hlt
enter
and
in
std
nop
mov
lcall
cli
mov
sub
xor
push
test
xchg
cmp
cld
pop
mov
jg
fsubrl
jbe
aas
fcompl
pop
xchg
mov
xorb
loope
in
mov
mov
mov
lods
dec
icebp
cmpl
sahf
push
movsb
inc
push
add
and
ljmp
jg
xor
mov
ja
repnz
ds
lods
outsb
aas
fstps
cmpsb
pop
test
aad
jno
xor
inc
cmp
cmc
mov
cmpsl
out
push
mov
lock
and
sarl
fmuls
sbb
ds
or
xchg
jbe
imul
cmp
push
xor
aam
ja
mov
ds
push
stos
sub
jns
test
test
rcll
std
int3
push
ja
iret
mov
fwait
aaa
scas
aaa
dec
push
testl
gs
inc
stos
mov
xor
iret
mov
jae
in
inc
and
out
vhaddpd
xchg
sbb
mov
fbstp
push
cmp
out
je
lahf
push
xchg
insb
push
xor
inc
jl
or
mov
stc
popa
lret
push
pop
popf
fdivl
sub
pop
sbb
pop
aaa
test
pop
adc
dec
test
pushf
sub
enter
hlt
test
or
cmp
cmpsl
in
mov
push
push
mov
adc
or
mov
cmp
or
mov
pop
and
pusha
xor
sar
enter
push
push
mov
imulb
mov
cmp
repnz
xor
sbb
xor
iret
cmc
inc
daa
ja
push
ss
jns
fdivr
inc
push
inc
fidivrs
inc
insb
loop
xor
fdiv
out
repnz
mov
in
sub
lods
or
xlat
outsl
mov
arpl
xor
push
xor
sub
mov
dec
sub
mov
outsb
enter
sbb
mov
mov
cmp
fistpll
std
stos
movups
hlt
cmp
scas
and
push
stc
stc
lea
xchg
cmp
cmp
mov
aam
inc
in
or
or
jbe
mov
mov
fbstp
cld
mov
jge
faddl
andb
arpl
fnstenv
out
test
cmp
and
mov
fists
cmc
add
add
cltd
aad
cmovg
aam
les
cmp
sarb
insl
jle
xor
jno
add
cmp
js
stos
dec
push
in
lret
sbb
or
mov
pop
inc
mov
push
xchg
inc
aaa
mov
sbb
xor
in
adc
jmp
mov
test
add
decb
out
jns
data16
imul
sarb
mov
pop
adc
push
inc
lea
mov
std
mov
add
sbb
jnp
adcl
and
add
test
and
mov
rolb
out
ffree
xchg
ss
mov
js
gs
inc
cmc
and
and
bound
cmp
xchg
or
daa
cli
mov
jle
inc
push
cld
pop
jmp
mov
fmuls
popa
push
in
negl
adc
notl
inc
clc
scas
imul
xor
mov
and
xchg
push
iret
dec
test
adc
dec
mov
movsb
rorl
mov
mov
adc
jo
mov
cmp
sub
mov
hlt
adc
add
dec
mov
stc
gs
or
adc
js
data16
jnp
scas
lea
cmp
pop
cmp
fsubrs
hlt
xorl
mov
sti
inc
out
shrb
movsb
shlb
and
sahf
subl
jb
cmpsl
mov
mov
bound
xor
sub
mov
mov
js
jle
aam
cmp
or
lods
test
pusha
fstl
xor
add
ja
pop
sub
mov
lods
jae
daa
int
movsb
fmuls
xlat
fimuls
jmp
imulb
jg
bound
xor
int3
jle
daa
adc
std
adc
push
repz
dec
dec
add
or
arpl
mov
in
aad
sub
ficoms
test
push
into
adc
adc
pusha
or
js
call
xchg
jle
push
jb
lret
mov
or
test
ficoml
inc
jp
xchg
sbb
filds
xchg
dec
rolb
xchg
notb
cmp
xchg
gs
enter
cmp
or
cmp
push
or
int
mov
jmp
stos
sub
ds
xchg
jb
rolb
std
dec
jns
imul
jp
aaa
mov
call
and
inc
mov
jge
cwtl
loopne
je
xor
stos
outsl
add
fstl
pop
nop
xor
lea
movsb
jnp
mov
scas
dec
ljmp
arpl
lods
call
scas
sub
cmp
fiaddl
addr16
not
jnp
jmp
jno
and
rclb
loope
mov
mov
in
ret
sbb
jp
mov
addl
in
xchg
mov
jecxz
xor
testb
enter
push
insb
aam
cmp
loope
aad
jnp
in
jno
aaa
movsb
outsb
stc
pop
aas
adc
lret
inc
insl
pop
gs
out
mov
in
xor
mov
lret
mov
xlat
pop
into
dec
add
notb
cwtl
arpl
lock
adc
xchg
jnp
add
and
mov
pop
loope
xor
mov
sub
lea
cmp
nop
iret
xorb
mov
mov
inc
hlt
cmp
popa
pushf
jge
jae
add
ss
push
push
or
or
insl
out
fldl
push
mov
cwtl
push
pop
fwait
mov
clc
push
mov
out
iret
lcall
out
sar
pop
dec
inc
jne
sbb
aas
int
mov
pop
dec
test
sub
popf
and
nop
call
les
cmp
pop
por
popa
cmp
sub
ret
jle
insb
cli
cmp
xor
mov
inc
lcall
scas
adc
out
or
or
mov
mov
pop
icebp
lds
test
aas
adc
dec
insl
sub
pop
jns
push
ja
shll
xor
add
adc
jo
ja
inc
push
mov
xchg
out
mov
pop
xchg
and
cmp
out
xchg
xchg
sbb
mov
idivb
lahf
fmul
clc
sbb
jb
ret
sti
les
and
lret
fs
mov
add
sbb
xchg
pusha
adc
movsl
xor
and
lock
or
pusha
pop
add
mov
lahf
popa
insl
jbe
loopne
jbe
xor
fldl
dec
ss
mov
std
sub
fwait
inc
jno
test
loopne
pop
fs
loop
test
lret
mov
test
xor
test
clc
push
insb
push
repnz
pop
dec
sbb
or
ss
and
and
xor
leave
call
das
popf
mov
push
mov
repnz
jno
insl
test
aam
pop
mov
lret
lret
add
cwtl
cmp
inc
dec
sahf
jo
dec
lea
ss
stos
stos
add
sbb
in
divl
dec
lock
mov
fsincos
mov
std
jbe
cli
sub
sar
inc
loopne
pushf
clc
into
adc
jmp
divb
shrb
pushf
aas
leave
dec
js
cmp
cmp
sbb
cwtl
enter
sub
sbb
aam
xor
and
fucomp
xor
mov
shl
add
pop
push
cwtl
cmp
sbb
fldt
test
data16
in
loope
pop
pop
or
mov
and
xchg
fsubl
jno
outsb
jl
jge
test
lcall
adc
push
lcall
lods
inc
adc
fimull
mov
push
cmpl
push
push
xchg
fyl2xp1
mov
not
inc
jb
pop
outsb
sbb
sub
pop
call
fidivrl
jb
fsubrl
mov
rcrb
imul
sti
pop
lock
cmc
fs
jmp
aas
pusha
sahf
in
imulb
pop
jb
adc
lods
loopne
leave
movsl
cwtl
or
or
out
or
loope
sub
insl
in
mov
scas
mov
xchg
fisttpl
je
add
mov
dec
mov
inc
out
xor
sahf
int3
xchg
ljmp
stos
add
xlat
cmp
mov
enter
rorb
in
pop
pop
push
push
mov
insb
inc
popf
sub
ljmp
xor
push
stos
adc
or
pop
xchg
jns
int
mov
lahf
mov
push
mov
hlt
fstpt
xlat
push
jnp
enter
push
jno
inc
mov
ja
mov
jno
or
jnp
xchg
pop
loope
pop
xchg
int3
shlb
xchg
jae
mov
fisttps
test
mov
push
inc
adc
cmp
sbb
les
pop
cmpsl
push
mov
sbb
shll
inc
loop
or
sbb
clc
jecxz
int
in
cmc
inc
scas
add
dec
movsl
pop
out
cmp
jae
lods
aas
mov
rorb
jmp
adc
roll
aaa
ret
xchg
clc
mov
js
mov
orb
in
mov
clc
push
or
stos
xor
mov
inc
clc
push
jb
loopne
xchg
aam
fldenv
dec
in
jle
pop
daa
sbb
loopne
adc
dec
icebp
jno
popf
stos
clc
arpl
xor
push
sbb
fisubl
ss
push
xlat
sbb
mov
push
add
xor
cmc
lea
fs
ret
push
dec
lock
dec
jp
push
into
mov
cmpl
sbb
mov
and
xchg
push
arpl
mov
outsb
nop
loope
add
leave
push
leave
in
mov
add
sar
fsts
cld
jns
mov
add
cmp
and
mov
arpl
leave
mov
adc
dec
test
mov
icebp
loop
test
arpl
jg
push
add
xchg
popf
cli
xchg
outsl
negl
push
insb
adc
adc
or
push
dec
out
xor
dec
je
jle
out
mov
mov
pop
jb
push
fistl
decb
cmp
mov
inc
push
cmc
sub
ret
clc
aam
push
lea
aas
daa
dec
xchg
test
and
lds
cmp
and
dec
xor
mov
and
push
pop
fucom
sub
clc
bound
and
jecxz
shrl
or
mov
mov
gs
sub
jmp
pop
or
sbb
mov
mov
jo
cltd
aas
aaa
cmpsl
lea
inc
or
rorl
fs
mov
in
jg
adc
addr16
sbb
lods
fisubl
dec
sub
add
add
in
pushf
test
push
jbe
cmp
pop
out
lods
jo
push
popa
movl
pop
nop
ja
dec
enter
mov
adc
cld
out
in
mov
add
mov
sub
sub
pop
aaa
orl
pushf
ss
xor
mov
sbbb
adc
mov
xchg
mov
sti
push
xchg
bswap
mov
dec
sub
cmp
cmp
loope
fnstcw
add
ljmp
lret
and
xor
jmp
push
pop
mov
cld
pop
gs
stc
fsubl
xor
movsl
fwait
psrad
stos
xchg
mov
iret
shll
jbe
mov
mov
and
call
stos
dec
inc
dec
mov
xchg
leave
shrb
and
aas
ljmp
enter
push
insb
xchg
inc
lock
rcr
outsl
add
mov
inc
cld
push
test
cmp
dec
jns
jne
ret
out
cmp
pop
add
adc
xor
in
test
stos
bound
mov
lock
pop
cmp
cli
adc
add
or
imul
adc
repz
lcall
push
pop
jecxz
mov
cmp
es
test
add
jbe
xchg
cltd
pop
sub
aad
popf
mov
or
xor
outsb
les
mov
fistpl
fildl
jle
test
ljmp
fcoms
cld
das
fdivl
outsl
and
mov
add
inc
leave
xchg
imulb
mov
stc
fs
xchg
addl
mov
jns
imul
lea
lods
enter
push
or
fs
mov
lods
sbb
push
int3
cmpsb
add
mov
push
pop
or
nop
xchg
lret
scas
int3
push
mov
ss
repz
mov
sub
jecxz
mov
sub
adc
pusha
sbb
inc
xor
jae
bound
aad
popf
or
adc
sahf
jnp
add
sub
dec
mov
push
mov
pop
movsb
adc
jo
adc
int
xchg
pop
bnd
push
add
mov
sbb
test
in
test
pop
adc
dec
sbb
lcall
out
insl
or
out
rorl
stos
cmp
sub
cmp
push
mov
jp
cmc
ds
divl
scas
push
lea
imul
aaa
xor
and
dec
inc
sub
fidivl
lods
loop
lods
mov
cmp
sub
xchg
sti
xchg
fisttps
stos
repz
repnz
pushf
xor
dec
jne
std
outsb
fs
out
repnz
mov
fsts
jp
jno
pop
nop
mov
mov
loop
es
ficoms
jns
outsl
out
pushf
loop
in
xchg
cmp
mov
outsb
mov
xor
test
aaa
test
mov
inc
dec
mov
or
dec
jp
mov
stc
dec
pop
adc
prefetch
or
pop
mov
movsb
mov
cmp
xchg
daa
xor
xchg
mov
pop
ljmp
std
and
es
pushf
fabs
mov
dec
jge
stos
dec
sti
movsb
dec
bnd
mov
xlat
cli
pop
jae
add
cmpsl
or
fwait
jae
js
push
or
aaa
pushf
dec
ficoms
jae
mov
add
xchg
mov
lret
popf
jecxz
pop
xor
fdivs
test
mov
dec
mov
imul
insl
cmp
int
sub
cmpsl
mov
xor
dec
push
lods
fldenv
dec
add
arpl
mov
jle
test
repz
adc
jge
xchg
jge
mov
call
out
xchg
lock
adc
outsl
pop
xchg
stos
inc
fcmovnb
lcall
jo
and
mov
push
dec
mov
fnstcw
jne
shlb
jge
jnp
push
jae
fmull
dec
in
fimuls
or
add
mov
lods
lods
mov
xor
cs
mov
outsl
cmpsl
pusha
jbe
sbb
dec
lock
fdivrs
aas
aaa
negb
xchg
push
or
ds
mov
adcb
sbb
rolb
mov
mov
pop
xor
mov
push
xchg
mov
and
cmp
or
push
pop
lds
inc
xchg
daa
cmpsl
lds
inc
adc
mov
push
xchg
icebp
lods
into
and
fs
cmp
jnp
js
mov
inc
cmp
pop
lods
dec
int3
shlb
ss
fistl
andb
lret
ljmp
inc
adc
push
fdivl
or
div
mov
cmc
loop
sbb
push
mov
test
sbb
sti
jle
dec
mov
pop
movsl
push
pop
add
and
test
mov
push
js
insb
out
fdivrs
or
sub
push
rcrl
arpl
mov
lds
sub
cmpsb
int3
xchg
mov
test
pop
jp
and
xchg
mov
mov
divl
sub
in
repz
pop
pop
xchg
cmpsl
fnsave
push
push
mov
or
ret
mov
arpl
pop
int3
mov
divl
mov
mov
or
xchg
cltd
lret
or
pop
outsl
outsl
inc
mov
cmp
adc
es
lret
push
mov
or
in
adc
push
insb
xor
push
lods
ret
nop
ret
mov
mov
ret
lods
mov
mov
xchg
mov
pop
sbb
sbb
push
jl
jecxz
inc
mov
or
push
es
arpl
adc
test
cmpsl
insb
aaa
jge
mov
cmp
mov
shlb
jb
inc
add
addr16
fistl
mov
add
or
mov
mov
shll
ss
movsb
pop
fiadds
pop
push
call
mov
loopne
inc
mov
xchg
pop
nop
dec
dec
sbb
xchg
out
dec
mov
add
dec
idivb
into
add
xor
add
sti
mov
ja
movsl
push
cmp
push
std
jne
push
icebp
sub
jecxz
cli
mov
jne
pop
pop
xchg
cmp
mov
mov
divb
push
or
lahf
shl
xchg
jnp
adc
xchg
test
pop
jl
pop
adc
cmp
pop
movzwl
mov
stc
fistpll
sbb
or
test
push
test
inc
mov
jo
rorl
or
ljmp
out
and
xor
leave
in
and
call
xchg
scas
nop
nop
and
and
sbb
loopne
ss
popf
pop
aam
pop
pop
inc
xchg
xor
sbb
pusha
jns
std
pop
testl
xchg
pop
aas
cmc
adc
sub
jne
or
mov
xchg
fstpt
push
jno
xchg
mov
mov
aam
jne
jl
dec
cmp
jbe
movsl
sahf
and
and
lret
pop
ja
pop
rcrb
loopne
rcrb
cmp
aas
scas
push
and
adc
inc
mov
add
dec
sbb
bound
lret
add
add
dec
push
cmc
add
ds
xchg
push
mov
xchg
push
hlt
or
pop
jg
inc
sub
pop
xchg
adc
fwait
and
sbb
cmc
mov
xor
xchg
mov
cltd
dec
dec
inc
and
popl
inc
lock
popf
sarl
mov
les
decl
sub
inc
out
popf
int
and
inc
push
push
sub
ds
je
mov
jno
mov
cmpsb
js
fs
ljmp
jne
mov
dec
jecxz
pop
jno
leave
inc
and
bound
push
lods
mul
movsl
mov
xchg
jnp
pop
mov
rorl
loopne
push
mov
cmpsb
ret
lahf
push
inc
mov
fsubrs
push
test
cmpsl
push
add
and
xor
stos
mov
xor
xchg
lea
in
mov
cmpsl
xor
mov
dec
loope
add
jecxz
cli
test
pop
xchg
out
fisubs
fcomps
adc
pushf
mov
mov
inc
nop
dec
add
popf
inc
clc
lds
inc
xchg
out
xlat
adc
dec
divl
arpl
sub
push
idivb
into
shrb
repz
jns
cmp
jg
mov
pop
outsb
pop
inc
flds
or
and
push
andb
insb
out
jo
sub
xchg
cwtl
sti
jne
dec
xor
out
cmp
dec
mov
mov
and
out
iret
jne
and
jecxz
lds
xchg
cmpb
push
outsl
or
aaa
flds
mov
adc
xor
push
shlb
jge
ljmpw
iret
or
or
xchg
jnp
push
mov
lods
sbb
dec
ret
iret
push
daa
xchg
adc
sbb
imul
cld
or
daa
adc
lret
jno
jae
or
cwtl
popf
pop
pushf
mov
out
cmp
adc
mov
lahf
arpl
outsb
out
movsl
pop
clc
xor
ss
cmp
jmp
fldt
jge
cltd
jge
jmp
aas
add
hlt
push
jnp
cltd
dec
addr16
repz
data16
mov
xor
sbb
sbb
jmp
sub
clc
cmpsb
fwait
jb
idivb
js
xchg
xor
cld
jl
mov
pop
inc
stos
enter
outsl
add
out
cmp
sub
adc
iret
test
mov
cmpb
pop
jne
addr16
inc
add
stc
mov
pushf
and
fisubrs
pop
push
pop
sahf
jae
fwait
lods
cltd
data16
imul
sbb
data16
cmp
scas
das
jbe
dec
push
scas
mov
xor
adc
xor
das
int
out
lret
sbb
js
ficompl
test
jg
xor
rcrb
imul
push
rcll
pop
dec
mov
cmp
or
pop
int3
call
jmp
ficompl
inc
cmp
sahf
insl
sbb
add
sbb
add
outsl
loop
inc
push
push
es
mov
cltd
push
push
repnz
in
leave
rcr
fildll
cmp
sub
mov
divl
pop
sbb
inc
cltd
sbb
xor
push
jno
add
add
and
ret
mov
cmp
or
in
dec
cmpb
mov
sarl
add
mov
mov
mov
sti
add
rcrl
nop
mov
ret
and
call
pop
push
xchg
out
addr16
xorl
test
out
push
imull
popw
insl
and
mov
mov
sub
push
push
jo
sub
repz
hlt
lods
loopne
jo
mov
addr16
daa
xor
sarl
xor
mov
push
mov
fwait
jecxz
mov
mov
lret
clc
bound
mov
cwtl
insl
pop
inc
cmpsb
adc
sbb
push
lods
cltd
fists
jno
mov
es
xchg
shlb
movsl
popf
jp
sub
sub
rolb
fs
sub
cmp
jb
sub
mov
or
xor
ja
dec
mov
inc
adc
out
cmp
in
xor
popa
mov
and
jno
xchg
dec
pop
out
add
loopne
xor
jns
mov
in
rolb
add
into
mov
cltd
sbb
mov
in
add
rol
js
push
cmp
fs
inc
mov
mov
or
fisttpll
popa
sub
arpl
add
add
mov
sub
xorb
pop
loope
adc
pop
jp
xadd
jge
xchg
stos
cwtl
or
fildll
in
adc
gs
add
rcrb
mov
jb
mov
and
push
sbb
add
mov
notb
dec
pop
aas
in
add
mov
push
mov
aad
rorb
addr16
std
dec
mov
sbb
jno
pop
add
jns
sbb
pop
sbb
mov
lcall
outsb
jmp
or
jle
int
add
jae
cld
sub
jg
shrl
dec
cmp
inc
into
fldt
iret
pop
inc
sub
jle
add
sbb
fcomp
cmpsl
lock
jns
jne
out
cmpsl
mov
xor
mov
cmp
jg
enter
sbb
mov
jle
js
pushf
out
and
scas
xor
les
add
loop
cltd
mulb
daa
push
js
xor
pop
shlb
pushf
sub
aas
test
subl
adcl
push
push
fiaddl
dec
sub
or
and
movsb
pushf
shl
xchg
mov
shr
cmp
leave
sbb
xchg
inc
les
cmpsb
fcomps
rclb
mov
dec
scas
xor
or
sbb
stos
mov
cmp
cmpsb
pop
leave
pop
xlat
xorl
mov
inc
dec
pop
and
sbb
or
sub
andb
mov
push
js
loope
jg
outsl
insl
xchg
lret
sarl
dec
and
andb
into
jae
sub
dec
or
xchg
and
insl
lcall
adc
fwait
clc
dec
mov
lods
aas
cld
in
jp
inc
push
jecxz
insl
push
popa
or
ljmp
bound
xor
add
jne
or
jge
jo
inc
out
jge
jne
dec
pusha
std
or
in
cmp
jb
scas
ss
add
push
enter
negb
cmp
fnstenv
sub
insb
scas
ljmp
inc
cmp
adc
test
pop
push
jecxz
xchg
push
jmp
cmp
pop
or
xlat
mov
imul
inc
and
faddp
icebp
jo
jnp
inc
mov
mov
or
dec
in
mov
in
add
cmp
negb
inc
popf
dec
inc
rclb
adc
xor
mov
stos
adc
mov
mov
or
hlt
jl
dec
jl
cmp
movsl
adc
ret
pop
mov
hlt
push
iret
aam
loopne
pop
xchg
sbb
daa
xchg
pop
jne
int
sub
repz
push
mov
stc
int
push
inc
ret
adc
fidivrl
or
lret
mov
mov
dec
jnp
adc
movl
loope
clc
mov
and
cmc
cli
xchg
sti
scas
rclb
sarl
insb
push
xor
add
sbb
xor
mov
mov
ret
jle
xchg
lret
test
mov
inc
repz
in
mov
les
mov
ljmp
jnp
int
mov
dec
sub
push
xor
iret
je
dec
dec
fcmovnbe
dec
mov
mov
pop
out
or
shll
orl
shl
ljmp
jge
insb
add
xor
jne
clc
out
and
inc
mov
outsb
mov
mov
movsl
push
lods
mov
mov
hlt
outsb
ds
push
shlb
out
fbld
adc
nop
sahf
pop
or
push
imul
add
adc
ffree
jns
nop
xlat
imul
ret
cmp
adc
andl
pop
pop
jno
jne
cltd
adc
add
dec
cmpsl
pop
cmpl
pop
jl
cld
mov
popa
or
xor
nop
lea
scas
outsb
sub
std
push
xchg
int
dec
imul
icebp
add
inc
lret
xchg
lret
bound
fsubs
mov
loopne
sbb
rcll
push
cmpsb
sub
xchg
add
por
add
inc
sti
xor
or
sbb
test
sarb
sahf
scas
lret
je
rorl
inc
out
outsl
mov
jecxz
sub
sub
cmpsl
adc
mov
inc
and
push
shl
pop
loop
and
ror
jle
hlt
mov
testb
fcomp
push
pop
or
sbb
mov
popa
scas
pusha
jo
dec
ja
adc
jns
mov
sahf
aad
or
les
fwait
inc
push
add
jo
or
sbb
adc
dec
mov
daa
fstpl
aas
fdivs
sub
pop
out
pop
cs
cld
sbb
call
xchg
loope
or
xchg
lcall
fdivrp
inc
jae
inc
add
mov
push
ja
sub
scas
es
jbe
lret
int3
lret
add
jne
lds
jge
dec
dec
les
cld
inc
sub
xchg
jb
mov
jb
int
std
mov
aaa
fisttpll
sub
mov
pop
nop
xchg
sbb
or
fldt
subl
fistl
mov
adc
call
fmulp
jno
icebp
inc
push
jbe
mov
daa
loop
add
sub
jecxz
sub
cmp
mov
mov
incl
lock
cld
mov
movsb
icebp
push
adc
mov
push
cwtl
and
lcall
cli
pop
fildl
in
fwait
loopne
data16
leave
enter
mov
push
test
outsl
and
cwtl
jno
push
adc
sub
fsubr
outsl
stos
repnz
or
movsb
das
dec
lret
das
das
inc
scas
cmp
xor
sub
repz
xchg
outsb
lcall
nop
mov
out
cmp
divl
fiaddl
lret
dec
into
sbb
scas
movl
jge
xor
mov
xchg
cwtl
mov
mov
popf
dec
pop
ljmp
mov
pop
jge
adc
mov
mov
adc
push
daa
dec
je
out
mov
cmp
js
ret
cmpsb
push
scas
lods
mov
inc
stos
mov
mulb
out
pop
pop
mov
pop
popf
divb
pop
dec
jno
or
aam
adc
cmp
push
inc
push
inc
dec
sub
int3
in
insl
jmp
dec
fimull
hlt
lret
rorb
loopne
add
test
clc
ret
push
adc
outsb
mov
or
dec
fnstenv
lea
cmp
push
lods
inc
lds
add
fisttpll
sbb
jl
mov
jae
adc
int
adc
cmc
dec
push
sti
mov
mov
test
dec
jge
pop
sahf
dec
push
out
and
xor
jp
sub
loop
and
lea
xlat
mov
mov
push
les
inc
call
scas
jg
out
mulb
test
sub
insb
addl
mov
lret
cmp
mov
repnz
lahf
inc
fdiv
inc
je
data16
gs
or
xor
push
push
je
mov
movsb
dec
or
jo
jmp
pop
subb
sbb
and
dec
cwtl
xchg
test
test
and
mov
mov
in
dec
mov
adc
pop
cmp
push
jl
cmp
inc
int
push
pop
sbb
cld
add
test
in
jmp
arpl
push
insl
out
mov
push
fistps
and
push
add
mov
lret
dec
jge
into
adc
inc
sbb
or
test
mov
inc
leave
adc
lahf
xorl
fwait
addb
cli
jne
pop
cld
fidivrs
pop
push
and
jecxz
shl
and
sbb
jne
sub
std
mov
std
ljmp
or
frstor
jno
mov
lahf
jp
pusha
insb
ret
insb
pop
inc
std
lods
leave
cmc
adc
xchg
push
ljmp
test
daa
xor
push
xor
lret
inc
out
jmp
arpl
adc
mov
jmp
dec
sub
dec
sub
dec
sbb
push
xlat
or
add
sarl
fists
sbb
xor
inc
cmovns
test
jo
cli
pop
dec
jg
push
mov
movsb
cmp
sti
movsl
arpl
mov
xor
xor
sahf
lock
int
pop
hlt
inc
pop
subb
scas
loopne
adc
xorl
cwtl
pop
inc
repnz
push
jmp
adc
jp
mov
inc
das
in
pop
sbb
loope
repnz
jg
and
in
pop
sti
test
and
fmull
dec
loopne
adc
ficoms
cmpl
cld
mov
repnz
xlat
clc
adc
iret
mov
mov
lcall
outsb
jecxz
push
mov
bound
mov
add
jns
movsb
arpl
mov
aam
fsts
pushf
ret
cmpsb
and
fldenv
mov
imul
lods
xlat
mov
add
jge
sub
imul
sbb
jge
or
rcrb
pusha
sub
test
decb
sbb
fstl
mov
sbb
int
jl
cli
inc
fisubrs
inc
test
add
repnz
or
push
mov
and
dec
lock
into
hlt
sub
push
xchg
fisubs
xor
imul
adc
sbb
aad
shrl
scas
jb
mov
fmull
repnz
mov
fstpt
add
imul
adc
jmp
dec
sahf
fs
fwait
jb
ret
in
adc
les
sbb
jecxz
or
dec
sub
xor
in
jb
jp
clc
inc
add
pop
cmp
push
lods
lods
mov
andb
mov
int3
add
pop
dec
jecxz
fistps
scas
hlt
cmp
popa
pop
add
push
pop
jbe
or
adc
cmpsb
movsl
mov
push
repz
jl
lcall
popa
xchg
push
jne
fcmovnbe
adc
fcomp
dec
push
sahf
xchg
pop
jne
in
mov
xchg
shlb
lret
and
cwtl
callw
mov
push
ret
inc
xor
clc
or
or
sub
ret
sub
mov
dec
pop
pop
int
in
push
add
inc
jbe
add
ja
inc
or
ds
push
mov
mov
sub
or
insl
ss
mov
test
jp
cltd
in
sub
aam
inc
push
scas
inc
pop
inc
adc
cmpb
into
mov
jle
jb
cmpb
inc
and
and
add
xor
and
and
and
sub
lods
mov
movsl
jnp
arpl
test
icebp
sbb
testl
jp
dec
ljmp
or
jbe
adc
faddl
sbb
or
push
mov
ret
sbb
push
and
xchg
dec
and
icebp
fxch
push
mov
sbb
push
insl
mov
daa
mov
popf
add
xchg
push
cmpsl
lods
shlb
js
dec
sahf
and
mov
arpl
mov
sbb
sbb
jmp
adc
add
dec
inc
pop
fmull
cmpsb
jl
xchg
in
xchg
xchg
cltd
adc
outsb
lcall
add
daa
lcall
push
mov
out
in
ficoml
sbb
lahf
ds
jne
lret
test
push
pop
and
arpl
addr16
sub
sbb
ja
fsts
fmulp
push
enter
mov
mov
push
lock
or
pop
inc
mov
lret
sti
mov
or
add
push
push
push
fsts
aaa
mov
push
sbb
jnp
mov
and
imul
call
daa
lcall
and
fwait
int3
xor
ds
test
cld
aad
push
decb
addr16
enter
mov
loopne
sbbl
ret
push
inc
cli
and
dec
pop
sbb
push
cmp
movsl
repnz
adc
loope
or
mov
mov
inc
push
fldenv
mov
inc
sbb
xor
cmp
sub
bound
or
pushf
fldl
scas
xor
jno
idivl
add
dec
push
ds
pop
outsl
jns
jns
push
loopne
lret
cmp
hlt
fimull
movsb
push
lea
adc
inc
mov
mov
jbe
lea
push
es
and
mov
xchg
push
add
xchg
add
mov
mov
mov
andb
or
je
inc
fwait
push
shlb
cmp
cmpsb
cmp
ds
dec
mov
enter
bound
iret
popa
or
push
adc
mov
jbe
xchg
es
repz
push
cmp
xor
inc
mov
movsb
sahf
pop
iret
lret
xchg
lea
mov
push
stos
lds
decl
dec
jne
cmc
add
xor
xchg
mov
add
add
sti
popf
imul
push
call
icebp
and
xor
addb
inc
push
vprotq
add
xor
jge
or
cltd
or
jmp
add
jle
data16
shl
xchg
jne
dec
xchg
sbb
jns
repz
sbb
mov
cld
mov
lcall
and
outsl
xor
sbb
ficomps
test
into
scas
pop
adc
pop
xchg
push
xor
aas
js
outsl
out
aaa
outsb
imull
sbb
mov
push
jnp
es
pop
test
rcrb
insb
push
cmpsb
pop
aad
mov
mov
jmp
je
add
mov
xor
clc
xchg
stos
sbb
into
xlat
mov
pop
aaa
dec
scas
stos
clc
jbe
mov
les
mov
mov
jmp
sbb
cli
sti
fstpl
xchg
mov
scas
in
in
jnp
out
sbb
call
push
out
out
push
inc
lds
cmp
nop
mov
imul
xchg
and
orb
push
stos
jge
pop
subl
jo
push
and
sub
test
je
shrl
xchg
bnd
mov
js
lahf
mov
sbb
pop
xchg
inc
jb
inc
adc
jo
fiaddl
and
or
sbb
adc
xchg
in
push
sti
call
fwait
push
inc
out
pusha
es
int
popf
lret
mov
data16
popa
adc
es
pushf
rcrb
fisubrs
push
int
hlt
xchg
dec
inc
cltd
cmpsl
in
testb
mov
test
jae
in
cltd
test
hlt
push
jae
les
sahf
mov
jno
push
sub
scas
inc
dec
xor
scas
or
imul
xchg
sti
rcrl
lcall
lods
stc
sahf
jnp
sbb
sahf
insl
xorl
test
addr16
cmc
add
cli
fldcw
arpl
mov
mov
fs
loopne
movb
cmp
pop
fsubs
sbb
or
cwtl
or
sbb
dec
xchg
push
pop
pop
fldt
add
es
cmpsb
repnz
xor
ds
inc
xor
nop
cmp
mov
inc
cmp
mov
mov
push
xchg
stos
xchg
and
push
shl
sar
pushf
cli
int
jl
dec
mov
pop
or
test
stos
in
cs
dec
dec
add
js
xchg
jmp
mov
lret
adc
fists
dec
sub
je
xchg
cmp
ss
sbb
and
inc
jp
mov
sub
xchg
loope
jno
dec
xlat
in
in
mov
and
pop
ljmp
push
orl
mov
das
xor
mov
clc
mov
es
adc
ret
cltd
nop
jmp
push
popf
add
mov
mov
je
orb
push
repnz
stos
mov
pop
mov
adc
daa
cmp
sti
shrl
rcrb
aad
sbb
inc
fnstsw
pushf
imul
andl
mov
mov
jnp
dec
or
cmc
scas
clc
cmp
add
ds
inc
call
shrl
jmp
rolb
jno
cwtl
je
lds
std
sub
cmp
icebp
mov
sub
scas
cmp
aad
lods
xor
push
add
aam
jb
cli
enter
outsl
aad
jo
loop
xor
mov
push
outsb
lcall
dec
inc
mov
jmp
mov
int
dec
fisttpll
mov
xcrypt-ofb
cmpsl
sub
scas
cmp
les
lret
and
xor
push
adc
lahf
sbb
sub
cmp
and
xor
push
data16
fnsave
lcall
jg
into
add
gs
mov
push
xor
in
or
xchg
push
cmp
pop
jmp
repz
dec
scas
insl
mov
mov
sub
andb
adc
aam
push
ljmp
xor
test
mov
jp
sub
fidivs
mov
xchg
lret
push
mov
jle
lock
int3
cmp
ja
jnp
in
fsubs
xor
pushf
bnd
mov
stc
and
dec
or
or
mov
es
push
mov
xor
nopl
cmp
js
push
lahf
and
fucomip
sub
ds
cli
cmc
cs
mov
jb
push
mov
idivl
xchg
inc
push
or
mov
test
dec
jne
cmp
push
or
mov
sub
fildll
xor
adc
test
push
cmp
sbb
mov
pushf
jle
dec
pop
cmp
cmp
sub
xchg
and
push
imulb
lret
push
xor
imul
in
jmp
or
xchg
mov
mov
or
cmp
rcrl
sub
int
jle
and
dec
cmp
xchg
lods
sbb
subb
je
sbb
mulb
arpl
sbb
jo
pop
sbb
jne
loope
ljmp
push
sbb
enter
in
mov
add
imul
jp
ficoms
push
or
and
add
movsl
cwtl
jl
fidivs
js
cmp
stos
addr16
add
push
mov
in
loope
and
fildll
in
mov
jne
inc
int3
sbb
push
pop
test
cmp
ss
je
xchg
lret
lods
sar
adc
das
cmp
mov
cli
in
addb
inc
adc
insb
push
mov
jnp
test
add
or
lret
mov
push
adc
dec
xchg
call
scas
subb
cmp
nop
inc
les
mov
in
cmpsl
je
cmp
sub
repnz
je
mov
shll
jne
pop
jo
clc
xchg
outsl
rcr
test
push
fdivr
stos
pop
loope
cmpl
out
cmp
add
mov
fnsave
xchg
ror
cmp
dec
sbb
jl
popf
xchg
pop
xchg
ja
bound
cli
xchg
mov
jle
lahf
mov
ss
fwait
and
mov
cmc
jnp
push
testb
adc
jbe
ja
je
mov
dec
xorb
cli
popa
pop
dec
test
lock
shlb
sub
adc
shrb
push
lods
mov
mulb
imul
hlt
pop
mov
mov
mov
cmc
data16
inc
dec
insb
cmp
ud2
mov
mull
popl
mov
mov
adc
jecxz
or
dec
iret
or
hlt
ja
xchg
and
xchg
ds
mov
push
shrb
fsubs
ret
std
sub
or
bound
sub
mov
sbb
je
popa
mul
xchg
mov
push
sahf
scas
jg
push
lea
inc
inc
pushf
testb
jno
or
lods
cmovs
rclb
icebp
aad
clc
sub
ljmp
push
in
sahf
sub
pop
fidivs
roll
cwtl
arpl
int3
jg
jne
std
sti
imul
add
imul
in
adc
in
mov
sbb
xor
int3
shl
add
fstpt
scas
daa
sub
or
outsl
insb
pop
cmpsb
iret
pop
and
ficompl
and
cmp
pop
dec
mov
das
xlat
outsl
or
lret
xchg
jo
xor
sub
pop
sub
mov
mov
jl
and
inc
mov
push
xchg
mov
push
sbb
icebp
out
out
arpl
xor
nop
pusha
push
pop
rcrb
sub
in
or
test
mov
mov
ffree
notl
add
push
mov
out
cmp
dec
popf
push
mov
lock
push
or
lods
dec
sub
dec
loopne
cli
xchg
add
shlb
shlb
xor
cld
nop
sbb
fistpl
cmp
insb
and
int3
stos
xchg
adc
add
inc
les
in
cs
and
jo
cs
dec
push
test
xchg
sub
mov
jle
inc
cmp
sbb
xor
fs
xchg
adc
stos
pop
jge
test
pop
in
and
orl
dec
sub
xchg
ds
fimull
loop
negl
shrb
cmovs
ficoms
push
and
pop
push
inc
fcoms
stos
mov
add
sbb
sub
test
test
sbb
popf
push
inc
add
pop
fidivs
jno
add
popa
repz
test
dec
div
sbb
dec
cmp
add
jnp
pop
dec
sub
ficoms
pop
ret
aam
sbb
jmp
mov
xor
das
adcl
aaa
addr16
push
pop
xor
andl
neg
pop
add
jp
dec
int3
outsl
test
sahf
cmpsl
rorb
out
sbb
lret
adc
xchg
imul
outsb
mov
add
cmp
or
ret
es
mov
movsl
pop
nop
aad
arpl
subb
dec
outsb
adc
lds
mov
test
mov
inc
mov
adc
mov
fsubrs
ror
scas
mov
jmp
shll
js
add
out
imul
jle
jge
loop
outsb
call
and
inc
repz
das
sahf
ja
xor
inc
jnp
inc
jecxz
dec
add
sbb
push
pop
imull
fnstsw
push
cmp
das
imul
cmovnp
pushf
out
lret
dec
dec
pop
and
repnz
ds
xchg
mov
negb
xchg
push
or
push
mov
pop
lds
jl
cmp
daa
mov
popa
loop
dec
cwtl
fisubl
jno
dec
dec
sbb
xchg
mov
loope
mov
rcl
arpl
mov
inc
inc
and
cmp
xor
push
pusha
xchg
insl
mov
xor
cmp
jecxz
iret
sbb
pop
fcmovu
nop
cmp
sub
jne
cltd
gs
ror
push
mov
aad
cwtl
subb
mov
std
xchg
repz
push
outsl
pop
sub
jg
enter
test
in
lcall
lods
icebp
ficoml
sahf
out
test
in
aas
sub
aas
adc
test
or
cltd
lea
push
adc
dec
out
shlb
add
je
out
inc
inc
adc
imul
mov
sub
lea
pusha
pop
mov
clc
cmpsl
cmp
mov
in
pop
mov
add
fcmove
test
dec
fisubl
push
aam
call
inc
add
mov
push
mov
call
add
mov
repnz
into
das
mov
xor
add
xchg
data16
pushf
icebp
int
test
mov
adc
pop
out
or
aas
add
inc
cltd
sub
jl
ss
pop
insl
adc
xor
mov
sub
cmp
test
fstpt
iret
mov
push
pop
or
std
and
dec
mov
and
jmp
push
sub
inc
out
fcoml
sub
cwtl
aas
push
std
nop
sub
xchg
clc
shrl
adc
fsubs
nop
cmp
adc
cmpsb
mov
jae
adc
mov
sbbb
jge
fldl
or
aam
aam
aas
rorb
lcall
push
inc
mov
sahf
adc
aas
cltd
repz
xor
sbb
push
push
adc
pushf
or
stos
ds
pop
stos
and
sbb
stc
add
dec
jno
dec
and
subl
mov
mov
iret
rcrl
iret
ljmp
jle
pop
jmp
mov
mov
popl
lods
pop
push
mov
or
lcall
push
xor
jns
test
sub
push
lods
mov
nop
ret
lahf
push
bnd
lock
std
fistpl
imul
aad
jl
enter
lods
test
push
in
pop
dec
pop
jnp
leave
es
loope
dec
sahf
add
lret
aam
inc
pop
std
cwtl
or
mov
clc
or
outsb
stos
cld
mov
xchg
pop
inc
ljmp
xor
out
mov
xlat
mov
test
xor
xor
add
inc
outsb
stos
test
pop
insl
loope
aam
mov
xchg
dec
push
fnstsw
inc
dec
mov
pop
ret
xchg
lock
ret
lahf
jmp
scas
loop
lret
inc
xchg
scas
fldenv
imul
xchg
in
jmp
push
je
std
loop
clc
cmp
dec
and
jl
mov
cltd
mov
mov
and
pusha
pop
dec
adc
movsb
aam
pop
xor
push
out
sub
fwait
add
pusha
mov
sarl
inc
push
fs
mov
adc
sub
add
cwtl
pop
and
sbb
icebp
movsb
or
fildl
rcrb
pop
test
stos
cld
mov
dec
sbb
lret
in
xor
push
hlt
dec
out
push
dec
imul
mov
cmp
add
call
add
xor
movsl
dec
popa
arpl
les
aas
push
push
sahf
in
push
test
lahf
mov
fldt
jp
ds
ss
jne
push
cmp
lahf
hlt
test
sub
outsl
insl
inc
xchg
pop
inc
and
insl
mov
inc
lea
pop
cld
std
mov
cli
dec
insl
gs
fucomi
movsl
dec
int3
hlt
out
sub
mov
out
add
push
aas
inc
mov
rorl
xchg
and
dec
push
jo
call
adcb
sub
inc
or
add
mov
or
mov
movsb
mov
cli
insl
sahf
roll
lret
or
rorb
cld
bound
sbb
pop
test
inc
jae
mov
xlat
int
adcb
sub
mulb
adc
dec
std
lds
ja
dec
lahf
sbb
mov
pop
jb
add
add
insl
mov
imul
mov
scas
jno
sbb
xchg
mov
dec
cmp
xchg
std
mov
cmc
lret
mov
inc
sub
sarb
dec
sti
xlat
mov
jae
dec
jnp
in
mov
inc
mov
add
xor
test
jle
imul
inc
mov
xor
neg
inc
add
mov
out
cltd
test
push
pop
jl
idivb
xor
loope
call
adc
add
popa
out
ret
or
aas
pop
in
inc
adc
popa
and
cmpxchg
and
xchg
andb
xlat
push
mov
test
add
xor
loop
lret
gs
in
jae
mov
inc
and
sbb
and
test
sbb
shr
and
or
add
ficoml
aad
adc
jl
sub
insl
jb
dec
fldl2e
orb
xchg
sbb
fldt
sbb
mov
cs
popa
push
or
mov
int3
mov
enter
jae
adc
sti
jle
xlat
or
out
jle
jno
imul
pop
xor
add
movsl
daa
enter
xchg
in
repz
and
in
dec
adcl
and
aas
pushf
cmp
adc
push
cltd
movsl
rcrb
push
mov
jno
out
xchg
sub
out
push
mov
pushf
lret
dec
mov
mov
stos
dec
inc
pop
adc
shlb
xor
icebp
and
popf
mov
xor
ret
fstp
out
repnz
and
aaa
sbb
in
cmp
inc
push
das
ret
inc
enter
jo
sahf
xchg
pop
jl
xor
and
inc
mov
es
mov
push
or
das
shrb
sub
aam
cmpsl
repnz
aam
or
test
ss
xor
jo
mov
and
lods
sbb
fwait
rorl
inc
jnp
jl
fnsave
out
and
lds
add
aaa
leave
mov
mov
out
rorl
mov
pop
add
mov
cmp
sti
mov
stc
sbb
adc
cmp
sbb
jb
shr
cmp
fsubl
cmpl
fdivl
fwait
mov
stc
dec
rorl
fs
fwait
jp
sub
jo
and
fmulp
push
ds
ss
divb
imul
aas
int3
lods
mov
pusha
cmp
mov
mul
push
pop
pushf
out
push
sub
repz
ljmp
or
inc
xchg
shrl
lcall
pop
dec
scas
adc
pop
in
out
jle
cmp
sti
cmpl
mov
adc
jbe
and
adc
repz
xor
lods
sti
jo
arpl
push
das
aad
mov
hlt
sbb
fcmovnbe
rol
icebp
add
dec
push
mov
fcoml
mov
dec
xor
dec
in
inc
pop
push
repnz
jns
cmp
lds
jno
jnp
add
call
sub
clc
stos
out
sti
loopne
push
mov
rclb
mov
dec
stos
cmpsb
nop
aam
daa
aam
inc
dec
jle
in
mov
cld
mov
scas
push
jns
mov
daa
sub
lock
nop
pop
loope
push
nop
adc
or
mov
sbb
es
pop
aad
sub
orl
bound
scas
ljmp
lds
jb
cmp
lds
pop
ds
push
pop
sti
jmp
cli
mov
mov
fldl
mov
dec
mov
js
and
adc
mov
push
aas
inc
in
cmp
jnp
sbb
xor
sbb
aad
jbe
dec
pushf
inc
enter
rclb
loope
jmp
xchg
leave
leave
test
xor
sub
sbb
add
loope
in
mov
cmp
sbb
enter
mov
add
and
nop
xchg
inc
std
dec
pop
cs
shll
ss
nop/reserved
ror
insl
xor
cmpsb
je
mov
mov
out
lods
pop
and
mov
xchg
xchg
and
bound
pop
and
adc
cmpsl
xchg
add
dec
mov
lods
ljmp
or
movsb
push
xor
lret
test
mov
imul
push
ret
jo
pop
and
and
test
cwtl
add
lods
daa
mov
sbb
stos
mov
int3
mov
in
or
and
mov
pop
insb
in
mov
adc
and
mull
dec
rorl
pop
stos
push
daa
ror
sar
daa
int3
sbb
ds
push
xor
pushf
subl
or
mov
and
icebp
dec
lock
xor
xorl
popl
insl
mov
rcll
out
stos
jbe
loop
lret
hlt
popf
dec
add
je
xchg
mov
xor
jecxz
lods
mov
sar
aas
push
dec
dec
lea
fmull
jp
stos
arpl
cli
aas
icebp
push
add
xlat
mov
sbb
dec
iret
sbb
and
push
sbb
push
test
stc
dec
bound
push
dec
cmp
sub
arpl
inc
mov
add
or
lods
add
xchg
in
cld
jb
movsb
and
outsl
out
imul
ljmp
mov
ds
stos
or
mov
stos
fimuls
mov
outsl
xor
insl
or
popa
pop
inc
movsl
xchg
inc
ret
lahf
das
sbb
pop
mov
jecxz
in
ffree
pop
notl
test
mov
in
lods
mov
and
in
xlat
add
adc
outsl
pop
fisubl
dec
push
cmp
in
je
sbb
sbb
cmp
cmpl
pop
daa
mov
jle
dec
inc
imul
dec
les
add
pop
sarl
sub
push
adc
ret
and
xchg
add
mov
bound
jg
mov
push
push
mov
cmp
test
sahf
rclb
dec
cmp
pusha
and
fildl
stos
inc
xor
jae
bnd
in
cmp
push
xor
push
cmp
clc
pushf
push
lock
xor
mov
aad
test
cmp
lods
add
lret
aaa
jnp
out
sub
jp
mov
xchg
jbe
mov
xchg
pop
mov
xchg
mov
pop
punpcklwd
test
in
out
sbb
xchg
das
aad
test
aam
push
dec
cmp
or
nop
loopne
or
pop
hlt
mov
hlt
sbb
pop
mov
stos
pushf
inc
cmpsb
and
shl
mov
jns
imul
xor
cmp
mov
fbld
cmp
and
push
or
popf
loopne
pop
addr16
out
cmp
out
mov
movaps
sub
gs
sub
or
pop
push
push
sti
in
cltd
dec
jbe
dec
sbb
stos
inc
adc
rcr
loopne
jno
push
in
mov
std
or
sbb
insb
lock
mov
call
push
sub
into
dec
into
test
and
outsl
mov
fisubrl
sub
dec
sub
cmp
dec
imul
mov
inc
cmp
cmp
lcall
and
sub
pop
mov
mov
mov
pop
repnz
mov
dec
fs
pop
add
mov
out
ffree
jp
les
pop
dec
fldl
dec
insl
std
cwtl
or
call
xchg
fwait
xchg
mov
stc
mov
jmp
hlt
jp
or
rorl
jo
and
cli
inc
leave
insl
add
sub
or
roll
adc
or
in
shlb
mov
adc
push
lcall
mov
xor
xor
pop
sub
or
outsb
scas
cmp
gs
lds
lea
jnp
subl
cs
pop
into
wbinvd
int3
mov
jb
popf
in
outsl
jg
pop
sarl
xchg
cmp
lahf
cmp
aad
cltd
mov
or
lock
jb
arpl
jbe
mov
mov
push
iret
cs
mov
cltd
out
xor
jne
rclb
dec
into
hlt
mov
adc
je
mov
ret
pop
mov
inc
dec
dec
adc
test
pop
int
cmp
adc
lret
loop
repnz
jae
pushf
sarl
int
xor
clc
clc
xor
out
into
xchg
push
sbb
incl
lret
inc
mov
jp
je
insb
ret
push
mov
stc
fstpt
clc
sub
mov
inc
and
lcall
push
in
dec
stos
xor
sub
push
shl
imul
dec
xchg
sub
push
outsb
sbbl
pop
push
in
add
mul
xor
xchg
icebp
push
mov
aaa
jae
sbb
rcll
xchg
ss
jp
stos
xor
cmp
lcall
in
roll
arpl
or
out
push
mov
dec
test
pushf
test
pop
rcr
inc
xorb
pop
jle
dec
mov
dec
loop
jp
loop
out
push
jmp
movsb
push
sbb
dec
lods
dec
daa
mov
sbb
test
mov
push
mov
rcll
popa
mov
test
mov
push
mov
pop
ds
fnstsw
jns
jecxz
cmc
sub
ret
clc
add
mov
jecxz
dec
movsl
data16
nop
push
or
mov
inc
dec
movsb
lock
loop
mov
or
pop
or
add
fcmovnu
sub
and
pop
xchg
inc
inc
xchg
mov
jge
mov
ja
push
and
dec
jge
sbb
jg
xor
subl
out
cli
stos
or
pop
jge
shlb
outsb
mov
add
fimuls
ret
js
mov
iret
int
repnz
push
sub
jnp
mov
leave
mov
loope
testb
jle
insb
jb
push
push
inc
sbbb
dec
pusha
je
call
jae
cmpsb
test
jg
cmp
addl
push
out
cmp
pop
lea
cmp
cwtl
cli
std
aad
pop
lods
jne
clc
pop
sarb
mov
jp
push
jbe
imul
les
inc
lret
jae,pn
test
mov
popa
mov
xchg
jmp
pop
mov
mov
scas
mov
push
out
push
push
ret
fmuls
inc
ljmp
adc
ffreep
adc
stc
fwait
xor
jae
sbb
outsb
fistpl
mov
std
cld
testb
mov
addb
filds
mov
push
jbe
or
stc
mov
dec
mov
pop
sbb
cld
push
xor
out
xchg
xchg
shrb
mov
aaa
loope
aam
int3
sbbb
sbb
inc
test
pop
push
pop
jecxz
mov
mov
ds
adc
stos
adc
mov
out
jb
int3
mov
insl
mov
push
in
gs
mov
int3
iret
scas
mov
inc
xchg
lods
sub
jae
insb
inc
push
inc
push
add
mov
xchg
jecxz
push
jp
les
jne
loope
mov
cmp
loope
cmpsl
icebp
lods
pop
xor
imul
jo
lods
addr16
xor
sub
das
je
pushf
ds
mov
adc
mov
fbstp
dec
dec
mov
inc
push
call
mov
into
lret
xor
loop
test
sbb
xor
mov
test
xchg
in
mov
imul
std
dec
adc
cmpsb
push
dec
data16
sub
pop
repz
pmaxub
and
sub
ss
dec
mov
push
into
mov
sbb
jmp
xchg
dec
shlb
sbb
repnz
lds
test
leave
jo
loop
out
repnz
mov
icebp
nop
cmc
lret
or
jno
mov
push
push
test
es
mov
adc
mov
int
aaa
jl
fidivl
lret
pop
outsb
inc
test
mov
dec
jp
das
jne
pusha
adc
fstps
adc
add
fnstcw
adc
cs
push
mov
push
dec
stc
mov
sbb
sbb
fcmovbe
int3
scas
pop
aas
scas
arpl
mov
push
int
push
out
adc
lret
sub
mov
or
test
mov
das
push
out
in
sub
lret
adcb
cmp
mov
pop
pop
add
sti
inc
dec
pop
ds
and
imul
outsl
inc
imulb
sub
or
fsubrs
inc
pop
xchg
repz
mov
mov
shrl
mov
cmc
push
pop
shrl
dec
into
inc
loope
pop
fstpl
test
dec
clc
jne,pt
lahf
xlat
ljmp
adc
movsl
rorl
sbb
mov
mov
ret
mov
mov
push
shlb
mov
dec
mov
loope
notb
nop
jp
sbb
scas
add
imul
jl
rcl
jle
jp
jmp
mov
rorl
xlat
shlb
out
lds
stc
and
fdivrl
jo
xchg
jmp
fisttps
dec
push
ret
cwtl
bound
dec
imul
imul
or
mov
fsubs
push
daa
das
or
jnp
xlat
shlb
mov
addr16
mov
pop
sub
pushf
and
cld
ret
sbb
xor
mov
je
jb
outsb
rclb
add
pop
insl
fsubrs
lcall
scas
push
xchg
mov
lock
jmp
test
push
ficoml
loop
mov
inc
mov
cltd
mov
call
popf
xlat
mov
mov
sub
dec
mov
push
mov
xchg
out
cli
pushf
cmp
loope
imul
xchg
sbb
outsb
iret
enter
ficoml
les
out
pop
jno
dec
push
dec
push
cmp
shr
push
jne
add
das
pop
sbb
bound
push
inc
dec
mov
push
jno
in
sub
hlt
jne
pop
mov
pop
out
mov
or
repz
nop
or
jge
mov
inc
repnz
ss
and
ss
imul
testl
cmp
pop
mov
push
popa
inc
stos
nop
fwait
pop
das
lret
cmp
loope
jl
add
mov
fbstp
mov
ljmp
push
cmp
xchg
iret
loop
psraw
mov
sbb
pop
shrl
xchg
push
dec
test
ljmp
loope
add
fstl
mov
and
cmpsb
bound
mov
cmp
inc
jmp
int
sti
lcall
jo
in
xchg
mov
jl,pt
mov
aas
push
ret
mov
imul
loop
xchg
leave
mov
inc
test
pushl
xchg
popf
inc
scas
add
mov
add
sbb
or
push
iret
adc
mov
or
rorb
fldl
sti
sub
insl
out
cmpsb
lahf
sbbb
in
int3
jp
adc
repz
shlb
ljmp
imul
fisttps
fmull
inc
insb
negb
dec
dec
mov
mov
mov
adc
popf
iret
jecxz
mov
lea
fcmovb
movsl
shll
cmp
insb
add
mov
mov
mov
xor
push
inc
test
loopne
lcall
jns
lods
push
out
sub
bound
loopne
lds
push
arpl
inc
psubd
hlt
dec
pusha
test
aaa
mov
js
inc
pop
int
xchg
sub
ss
rcl
mov
pusha
mov
jle
sti
es
or
clc
mov
movsb
and
jge
cmpsb
shll
jg
mov
jno
mov
in
adcl
inc
addr16
jo
std
cmp
fwait
cmp
jb
sarl
mov
nop
fidivrl
rcl
xor
into
mov
jne
push
jb
stc
add
mov
scas
iret
sub
sub
mov
stos
fsubs
jl
adc
dec
jnp
adc
or
sub
pop
stos
xchg
jmp
mov
iret
pop
dec
stos
cltd
dec
mov
ljmp
pop
mov
jne
ja
mov
sbb
inc
popf
rclb
in
aam
lock
xor
sti
jae
add
xlat
xor
andb
add
imul
adc
pop
xor
lahf
mov
es
and
stc
mov
and
mov
aaa
cld
mov
lret
lret
or
cmpsb
stc
out
das
int3
fisubs
call
inc
push
out
rcll
adc
xchg
out
add
mov
adc
gs
movsb
gs
push
pushf
mov
xor
push
hlt
pop
jae
popa
cmpsb
cmp
mov
int
lret
adc
dec
imul
mov
aaa
mov
sbb
cld
mov
std
sub
pop
xchg
cld
jl
jmp
adc
loopne
mov
push
popf
sbb
mov
lods
pop
pop
cmp
imul
out
movsl
sbb
imul
and
push
push
sbb
xchg
add
test
and
xchg
adc
xchg
lret
out
xor
cmpsl
jmp
jne
inc
mov
cmpsl
jge
pop
inc
decb
pop
cmp
or
cs
jl
popa
cmp
sarl
les
aas
sarb
sbb
shl
les
push
fbld
aad
test
ds
shll
loopne
push
adc
cli
lahf
mov
jbe
xchg
fmuls
ljmp
sbb
mov
sbb
ror
mov
cli
stc
dec
faddp
fmulp
pop
popa
jbe
mov
test
dec
push
xchg
add
pop
mov
sbb
aam
mov
popf
sub
mov
jno
jle
bound
aad
jg
push
mov
cmp
movsb
sub
push
lds
add
rolb
xor
jp
mov
cli
inc
rcl
jmp
dec
jae
ret
sub
dec
push
and
add
fisubl
and
pop
and
cmpsl
or
movl
outsb
jl
into
fldcw
in
cld
pop
lahf
aas
sti
mov
and
cmp
insl
sbb
shrl
std
addb
mov
sbb
cld
inc
push
xchg
jmp
sub
sub
push
inc
fwait
lahf
loope
gs
pop
adc
or
push
cld
imul
rorb
testb
or
sarl
data16
fsubrp
addr16
out
cmpsb
aad
adc
or
inc
fisttps
jne
inc
and
test
mov
gs
and
js
pop
and
test
pop
cmp
jmp
leave
cmc
xlat
dec
mov
pop
jp
xchg
popf
jnp
adc
mov
sub
mov
xor
mov
pop
dec
mov
mov
loope
dec
or
out
mov
pusha
call
aaa
mul
pop
flds
cmp
adc
xlat
cmp
push
inc
icebp
lret
jno
es
sub
test
popa
dec
loopne
mov
les
int3
mov
mov
adc
cs
jns
movl
fsubs
repnz
add
jp
pop
addl
cmp
push
fistpll
and
add
mov
and
xchg
scas
add
mov
cmp
sub
add
add
bnd
test
push
movsl
xchg
cmc
popf
cmp
ret
and
mov
or
cmpsl
fbstp
imul
popw
mov
inc
clc
stc
dec
test
lods
or
scas
popf
mov
push
cmp
shrd
lods
mov
ljmp
or
xor
mov
in
jle
mov
or
sub
mov
loope
mov
sub
jge
aam
sti
mov
mov
stc
sbb
call
imul
out
in
push
push
dec
xchg
cmp
sbbb
sbb
out
imul
xchg
xchg
setno
xlat
push
xchg
in
imul
test
sub
inc
out
mov
cmpb
push
xor
sbb
dec
scas
mov
aaa
add
add
or
cltd
rcr
push
rcrl
or
sahf
xchg
daa
mov
orl
lcall
in
inc
fcmovnbe
mov
add
mov
push
stc
sub
sahf
cli
sub
addr16
pop
shll
in
adc
movsb
cld
xchg
repz
cmp
lea
mov
mov
inc
fwait
aam
lret
sti
xor
aas
pushf
dec
and
mov
std
aad
and
into
cmp
sub
add
inc
leave
aad
je
sbb
jnp
lea
movsb
dec
pop
aas
mov
test
adc
testl
dec
mov
ror
mov
cmp
loopne
pop
and
and
xor
popa
imul
dec
add
stos
loopne
adc
cmp
dec
icebp
mov
repz
jmp
sar
push
ja
pop
fstps
jnp
in
daa
cmp
dec
cli
adc
out
push
xchg
fsubs
inc
cmpsl
xlat
lock
mov
stos
loopne
outsb
mov
cmp
sub
sbb
jg
clc
mov
lret
out
out
add
adc
mov
lock
adc
mov
loope
cltd
dec
sahf
xchg
and
lret
cli
cmp
pop
push
mov
cmp
rcrb
mov
push
mov
sbb
sbbb
addr16
stc
mov
clc
adc
pop
or
adc
ds
cmp
adc
jl
mov
xor
data16
sbb
dec
jns
pushf
push
lods
mov
subb
sub
jae
jnp
jne
mov
cs
jg
mov
cmp
lea
arpl
fdivs
xor
sbb
and
mov
adc
mov
aas
fbstp
sbb
test
mov
testb
xchg
inc
xor
xlat
or
orl
pop
push
mov
frstor
and
xor
cmp
std
stos
push
mov
mov
sbb
es
pop
out
cwtl
testb
sub
pop
lea
mov
inc
dec
or
loopne
inc
nop
stos
cmp
jmp
fs
sub
inc
int3
stc
fidivs
lea
loopne
insb
sbb
dec
or
and
shrb
rcll
push
push
push
ljmp
mov
dec
fimull
lods
cmpsb
mov
or
sbb
out
mov
push
fstpl
sub
pop
push
mov
push
pop
adc
cmp
mov
cmpsb
mov
cmpsl
sub
bound
das
mov
stos
push
dec
sbb
add
arpl
repz
mov
xchg
jl
mov
scas
mov
ss
cmpsb
lds
lret
fwait
jne
push
icebp
idiv
rorb
dec
call
and
sbb
ret
jg
adc
ljmp
adc
in
das
pop
mov
or
cmp
out
xchg
loope
std
adc
in
scas
jmp
dec
and
dec
xchg
mov
sub
fildl
jmp
cli
in
ljmp
loopne
sbb
stc
popa
iret
lea
xchg
rcll
mov
jle
cmp
add
pop
rol
lods
data16
stos
in
adc
ljmp
fprem1
rorl
sti
sbb
jae
push
push
cmpsb
in
out
outsb
faddl
cs
fildll
jl
addl
ds
push
faddl
and
push
xchg
dec
lds
pop
push
pop
mov
pop
das
into
jno
cmp
cmp
jbe
push
lahf
iret
adc
dec
mov
mov
push
in
jns
loopne
xchg
add
pop
jns
or
scas
sbb
push
push
inc
rcl
fiaddl
roll
cwtl
inc
push
inc
cmp
fidivl
in
lds
fistpl
jecxz
jae
mov
mov
or
sub
aas
test
or
jecxz
andb
jl
fsubrs
jo
std
jmp
inc
loope
enter
inc
dec
rclb
stos
std
pop
lcall
add
push
sub
inc
inc
in
sbb
mov
leave
add
inc
xor
add
fisttpl
cmp
cmc
mov
and
loope
dec
cs
lock
pop
test
lock
dec
lds
icebp
add
or
inc
and
mov
mov
subps
insb
cmp
lcall
mov
repz
jnp
ret
xor
mov
jno
lods
icebp
mov
jmp
bound
adc
cmp
add
fs
lock
inc
pop
push
and
sub
cwtl
in
pop
enter
xchg
cld
addr16
jne
cld
cmp
cwtl
clc
add
dec
lahf
inc
test
sti
mov
or
lods
xchg
push
arpl
rorb
stc
les
dec
sbb
xlat
add
enter
verw
lods
outsl
sarl
test
xor
inc
lods
and
push
push
ret
sub
xchg
mov
adc
jns
mov
ret
cmpsb
mov
mov
pop
jno
or
mov
lea
test
mov
mov
adcl
pop
mov
movsb
ss
or
cwtl
sbb
add
fisttpl
lcall
mov
imul
mov
inc
push
andl
cmpsb
divb
and
and
pop
push
addr16
pop
sbb
das
in
xchg
mov
xor
popf
adc
jecxz
mov
inc
sbb
jge
adc
fstl
sbb
lock
push
into
or
pushf
mov
or
lods
pushl
cwtl
sbb
fwait
dec
daa
mov
pop
jb
sbb
sub
shlb
cli
mov
pusha
lahf
sahf
xor
out
pause
mov
in
pop
stc
sbb
pop
pop
add
mov
mov
pop
mov
add
std
dec
out
jns
std
mov
js
push
pop
jbe
ret
cmpsb
sbb
jp
push
jnp
movsb
test
xchg
pushf
addb
pop
mov
and
adc
pop
push
jmp
mov
push
fidivs
sbb
pop
pop
stos
mov
adc
lcall
fwait
jmp
in
xlat
bound
and
pushf
fdivrl
aad
xchg
pop
repz
adc
jmp
mov
fcmovbe
loope
push
dec
imul
es
gs
push
xor
adc
cmpsl
mov
mov
xor
or
ret
rcrl
leave
pop
addb
loop
test
cltd
incb
pop
inc
inc
jmp
inc
movsl
mov
sub
cmpsb
in
ret
scas
fcomip
mov
gs
xor
sub
fwait
jge
mov
fdivrs
dec
mov
mov
xchg
mov
icebp
sbb
in
insl
orl
add
adc
cmp
push
mov
adc
rol
icebp
mov
les
jae
mov
fisttpll
mov
stos
dec
aam
pushf
mov
pop
insl
sub
out
xor
ljmp
mov
dec
outsb
add
shlb
aam
xchg
add
nop
jb
push
stos
mov
dec
mov
pop
or
pop
push
mov
ret
add
in
in
bnd
shl
and
loope
in
pop
clc
stos
and
inc
addl
lods
push
push
mov
xchg
jns
or
pop
sub
popf
jb
push
fdivrs
cmp
popa
gs
inc
cmpsb
movsb
add
iret
dec
pop
stc
mov
iret
outsl
pop
sub
cmp
mov
jns
fstpl
loope
in
mov
imull
ljmp
addr16
mov
xchg
push
and
aad
add
leave
sub
push
in
popf
into
sub
ljmp
lods
push
add
dec
outsb
outsb
or
push
mov
push
divb
andl
sbb
adc
jge
dec
jno
bound
add
lods
cmp
add
pop
fcompl
push
sti
jo
sub
add
cmpsl
xchg
mov
pusha
pop
mov
shrb
mov
add
mov
and
and
jmp
and
lret
push
lods
cmpsb
repz
or
popf
or
push
aad
shlb
mov
push
inc
test
rcrb
shll
mov
and
sarb
lods
das
pop
mov
rcll
cmpsl
mov
xchg
pop
call
adc
jbe
cltd
js
das
es
mov
ret
fcompl
inc
mov
mov
cmpsb
adc
add
jb
inc
mov
mov
mov
jmp
imul
lret
jo
pop
lods
sbb
sbb
out
andl
or
jecxz
stc
lods
pop
fsts
nop
pop
sti
xor
in
xor
scas
jl
imul
mov
fcmovb
jae
arpl
cmp
adc
imul
dec
and
pop
pop
inc
test
sti
ds
mull
repz
dec
pop
cltd
jg
enter
dec
cwtl
sub
pop
lods
dec
leave
fcmovu
clc
sub
sub
push
jne
xchg
sub
mov
lret
andl
mov
fsubs
cmpsb
mov
push
mov
cmp
cltd
cs
sbb
mov
xchg
lea
cmp
inc
sbb
mov
adc
test
aad
jle
ljmp
in
inc
sub
js
cmp
pushf
pmulhw
sbb
movsb
cmp
sbb
dec
cmp
stc
shlb
cld
mov
in
adc
cmp
push
addr16
jns
inc
stos
add
lret
push
aaa
dec
mov
pop
mov
sub
inc
xchg
in
lds
xchg
and
cmp
test
iret
test
pop
pop
lcall
jecxz
aas
pop
test
mov
jae
repz
enter
mov
inc
repz
addr16
jne
hlt
jmp
inc
fxch
jo
stc
push
sbb
adc
mov
or
aaa
cmpsl
mulb
and
test
dec
pushf
lock
push
push
sub
mov
xchg
test
and
call
mov
popa
or
movsl
or
lahf
or
nop
das
data16
add
lods
iret
sbb
cmp
add
dec
les
jmp
cmp
scas
sbb
mov
pop
push
std
mov
jne
xor
subl
sti
fadd
out
jl
jne
lret
adc
cmpsl
cli
lret
ja
pop
out
mov
push
xlat
out
add
mov
sub
jmp
pop
xlat
jo
xchg
lret
push
pop
xor
inc
popf
stos
push
cltd
push
or
push
push
hlt
push
outsb
je
pop
fucomi
and
dec
sbb
xchg
repz
push
out
add
dec
cs
xchg
outsb
popf
cli
stos
cmpsb
dec
fldt
inc
or
cmpsl
lret
sbb
lods
js
daa
mov
jecxz
pop
pop
pop
sti
psraw
cwtl
call
sub
ss
loope
cmp
or
push
cwtl
inc
pop
pop
cmpsl
call
icebp
dec
xor
xor
jo
cltd
addr16
and
xlat
sbb
subl
or
jg
sbb
movsb
pop
jo
dec
testb
add
mov
ret
icebp
insb
lcall
in
loop
shl
je
test
dec
xchg
sbb
icebp
mov
ret
fdivrp
push
xchg
shlb
mov
ds
es
daa
outsl
jmp
stos
xor
lds
jb
in
lea
xchg
pop
shlb
nop
in
push
nop
adc
aaa
jno
aaa
add
adc
inc
ret
sbb
mov
cmp
cmp
int3
cmp
movsb
ret
ljmp
es
push
fistps
ljmp
iret
push
adc
xchg
mov
cmpsl
mov
xor
adc
xchg
sbb
or
orl
mov
sub
ss
pop
mov
lods
sub
ja
adc
pop
aad
mov
mov
sub
in
push
sbb
push
xor
loopne
call
xchg
into
push
xor
inc
pop
mov
push
aas
jle
push
jecxz
push
mov
pusha
push
lock
dec
aam
adc
lods
icebp
lret
les
mov
jge
xchg
gs
or
mov
push
xor
iret
and
dec
outsl
test
lods
mov
aam
and
jno
pop
aam
mov
and
stc
out
mov
mov
adc
lods
std
lahf
dec
or
add
push
sub
fdivrp
into
pop
enter
mov
decl
mov
and
cmpsl
mov
and
imul
enter
fcmove
xchg
into
rorb
inc
fbld
cwtl
mov
cmp
mov
sub
lea
scas
mov
jne
ret
out
lret
cmp
adc
out
test
adc
bound
pop
mov
idivl
lret
icebp
cmp
dec
push
mov
fcoml
cltd
andl
cmp
or
xchg
fcomi
cmp
or
jl
leave
push
xchg
scas
sbb
mov
mov
pop
cmp
jmp
repz
sub
ja
or
or
lock
mov
xor
iret
js
cltd
mov
scas
dec
aad
fwait
or
std
lods
push
lea
jp
xlat
insb
pop
or
gs
cmp
int
inc
and
pop
cld
mov
scas
adc
cwtl
xchg
cwtl
inc
dec
hlt
aad
mov
imul
rcrl
lahf
and
mov
sbb
mov
inc
insb
inc
inc
add
or
insb
push
xchg
xchg
push
pop
cld
pop
lcall
jge
push
dec
fists
mov
push
and
ljmp
jns
jge
xchg
adc
or
mov
in
adc
aaa
ss
jmp
dec
jne
sub
pusha
mov
and
in
addr16
pusha
in
push
adc
data16
scas
dec
dec
scas
lods
xchg
and
scas
mov
out
rorb
jb
fwait
ja
cs
imul
scas
subb
dec
mov
int3
or
cmpsl
sub
or
xor
push
lcall
mov
or
add
fldcw
je
xchg
lods
pusha
icebp
add
fisubrs
rcll
inc
stos
or
jne
imul
je
mov
ds
or
inc
cmp
push
dec
inc
mov
shlb
lret
popf
std
insb
xor
mov
cmpl
hlt
in
jae
idiv
jge
loope
push
scas
pushf
push
jns
mov
test
iret
out
pop
into
scas
sahf
sub
and
andl
jnp
mov
sbb
jnp
push
inc
outsl
or
cwtl
lahf
jb
xor
cltd
jmp
jnp
nop
or
movsb
inc
je
mov
inc
daa
mov
stos
cs
lods
or
stos
or
cmp
into
add
data16
jp,pn
clc
lods
and
sarl
cmp
adc
lahf
add
xor
sbb
and
mov
repz
inc
lds
out
movsb
sbb
xchg
cli
loop
out
repz
mov
popf
in
test
dec
insl
pop
push
ret
imul
jmp
mov
shll
lret
mov
sub
mov
cmpsl
add
xchg
mov
popf
lcall
das
push
test
aas
add
sbb
or
int
mov
in
gs
iret
popf
mov
push
push
mov
xchg
stc
ss
pusha
sub
ret
adc
adcb
inc
aaa
sub
scas
cmp
lock
mov
leave
jge
inc
jne
loop
popa
inc
sbb
iret
imul
gs
pusha
pushf
mov
sbb
mov
loope
ljmp
cmpsb
pop
ret
cmpb
push
or
je
lds
out
pop
add
sub
mov
or
mov
mov
and
sbb
lret
pop
stos
gs
in
jmp
mov
add
loopne
test
sarb
cli
test
pop
jnp
divl
adc
cwtl
xor
mov
into
es
cwtl
std
flds
adc
in
addr16
adc
mov
dec
mov
in
xlat
mov
pushw
dec
jge
pop
mov
rolb
pusha
in
adcb
and
out
clc
adc
push
cmpsb
mov
push
insl
or
xacquire
sahf
aam
call
add
dec
negb
dec
jne
ljmp
inc
lret
insb
rcrb
repnz
enter
addr16
call
xor
insl
lahf
push
ds
sbb
or
sbb
fimull
xor
adc
pop
mov
or
nop
push
pop
cmp
fcoml
pop
xor
push
add
mov
sarb
int3
xor
add
dec
or
fs
xor
inc
aad
jecxz
sti
cmc
fwait
lret
push
in
adc
sub
or
pop
pop
int3
pushf
stc
mov
dec
fcomip
add
mov
xchg
mov
add
push
add
jb
gs
cmp
sti
and
nop
addb
dec
jns
xchg
js
cltd
cmp
popa
sahf
dec
ret
jnp
imul
mov
push
lea
sbb
mov
inc
dec
lahf
adc
mov
repz
fbld
out
fdivs
jl
std
pop
int
pop
fdivr
inc
dec
das
push
add
cmp
lock
call
hlt
jb
add
insl
aam
imul
int
push
pop
lods
add
mov
test
or
iret
or
lods
adc
outsl
je
push
sbb
pop
rclb
cmpsl
and
jne
xchg
js
pop
mov
pop
sub
mov
xchg
or
hlt
mov
sbb
mov
stc
push
dec
popa
jmp
cmp
sub
out
mov
and
call
push
adc
add
sub
jne
sbb
adc
xor
jno
and
loope
clc
inc
les
sub
adc
push
mov
add
ret
cmpsb
out
js
sub
add
scas
stos
mov
or
aad
imul
dec
sbb
xchg
inc
mov
insl
mov
jmp
pop
stos
mov
cmpsl
sub
test
cmp
fdivrl
jae
lods
out
mov
cli
dec
sbb
xor
insl
aad
pop
aas
jo
test
lcall
and
test
xor
loopne
popf
mov
xchg
adc
cli
sti
or
sub
xchg
int
loop
mov
xchg
push
jecxz
sbb
jne
shrl
ficompl
hlt
outsl
test
fs
popf
xor
dec
movsb
daa
xchg
add
lret
xor
sti
or
adc
adc
mov
xchg
mov
cli
sbb
fistpll
jno
daa
xchg
mov
sbb
mov
or
sbb
mov
and
call
and
and
xchg
mov
sti
dec
cmp
xor
jb
push
pop
cmp
mov
and
push
adc
cmp
inc
jns
iret
mov
insl
lds
shrl
mov
stc
cltd
lcall
insl
inc
and
pop
inc
aas
mov
dec
sbb
push
xchg
sti
mov
lret
scas
jge
movq
jmp
cmp
ljmp
icebp
jno
xchg
inc
push
outsb
inc
pop
jnp
or
leave
sbb
pop
stc
xor
adc
sbb
lahf
cmp
or
xchg
mov
sub
sub
out
lcall
cltd
fstpl
xlat
pop
adc
ret
add
mov
push
dec
mov
push
jmp
mov
ret
mov
and
in
sarl
adc
cs
mov
mov
xlat
jo
cs
xor
sub
lea
sbb
mov
push
jne
mov
xor
mov
pop
add
or
je
jge
lahf
xchg
enter
and
pushl
cmp
mov
mov
jns
pushf
fldcw
or
je
lret
setb
dec
mov
insl
ret
lods
movsl
mov
xchg
aam
push
jecxz
rolb
ret
out
xor
pop
cmp
pushf
int3
xor
lret
mov
adc
mov
mov
pop
xchg
test
cltd
test
in
inc
mov
pop
and
xchg
aad
inc
push
adc
stc
repnz
add
addr16
mov
jno
ficoml
jecxz
mov
repz
jno
sbb
xchg
cmp
ljmp
pop
pop
push
push
cmc
inc
sub
push
push
push
je
lret
cli
sahf
xor
fdivr
ds
jge
movsb
mov
adc
xor
and
adc
inc
and
loopne
inc
insl
jmp
or
icebp
into
gs
std
mov
cmpsl
pop
daa
testl
pop
mov
fisubrl
push
rcrb
dec
lret
ficompl
incb
imulb
inc
push
jl
fmull
xchg
pushf
lods
in
out
adc
aad
xor
gs
and
call
fimull
push
pop
pop
jge
sub
in
jle
popf
mov
repnz
aad
jno
orl
or
push
je
repnz
imul
inc
push
fistpll
adc
faddl
imul
mov
pop
and
adc
sbb
js
daa
push
decb
je
jns
rorl
cld
mov
sti
addr16
ret
pop
sbb
insl
or
fdivl
xchg
push
mov
inc
inc
inc
bnd
mov
sti
or
mull
inc
xchg
int3
xchg
fucompp
adc
inc
inc
jl
scas
inc
movsb
xchg
jb
adcb
or
test
sub
jb
mov
or
cmc
dec
cmp
sbbl
stos
push
enter
dec
push
dec
negl
push
xchg
xor
sbb
js
mov
push
mov
sbb
ret
sbb
lcall
xchg
pushf
inc
popa
ret
mov
in
in
cmp
and
sub
mov
mov
pop
xchg
dec
rolb
fstl
lods
int
loopne
imul
lret
fcoms
mov
add
mov
shlb
xchg
pop
stc
pop
cmp
outsl
in
pop
adc
cmp
jg
setb
mov
jae
mov
sbb
sub
or
jp
cmp
out
cmpsl
sub
sub
mov
or
inc
cmp
mov
and
lods
fs
shll
jns
out
push
repnz
popa
rcll
int3
loop
mov
push
mov
and
mov
or
pop
jg
in
pop
mov
jge
stos
lds
sbb
bound
mov
scas
xchg
mov
bswap
aad
andl
xchg
leave
scas
mov
push
aas
jp
jmp
js
test
cmp
mov
or
or
aas
sahf
aas
lods
aas
popf
dec
mov
or
pusha
add
push
lahf
insl
andb
adc
pop
xchg
adc
aaa
arpl
inc
icebp
adc
sbb
inc
lret
xor
out
inc
fstl
jae
test
mov
add
lods
in
stos
gs
gs
pop
inc
in
xchg
outsl
adc
lahf
push
xchg
outsl
fcmovnb
mov
sbb
lock
and
dec
sbb
rcr
repz
cmp
imul
add
sbb
outsl
adc
call
and
xchg
divb
jl
mov
lcall
addr16
in
imul
in
inc
addl
inc
ljmp
mov
inc
ljmp
test
scas
lods
push
inc
pop
jcxz
sbb
aaa
movsb
pop
ss
les
insl
push
jg,pn
dec
mov
ss
sub
sarl
mov
jbe
ret
jl
mov
mov
xor
cmc
repz
mov
add
fdivs
enter
lods
mov
sbb
das
inc
mov
mov
xchg
fidivs
ss
sahf
shrb
add
xor
pop
or
inc
pop
inc
mov
cmp
lea
cmp
inc
imul
and
jbe
gs
pop
and
cmpsb
xor
stc
cmp
lods
cmp
lret
lahf
mov
mov
or
push
test
es
xor
lcall
fists
fs
rcll
fwait
or
int
add
jg
jecxz
movd
xchg
add
push
ss
inc
push
imul
fld
cmp
enter
pop
pushl
mov
lea
scas
mov
dec
xchg
dec
and
sti
lret
jns
test
aas
in
pop
in
pop
push
jnp
inc
mov
inc
add
dec
and
test
pop
and
fwait
cmp
mov
loope
mov
lret
sahf
fwait
cwtl
jl
inc
pop
shlb
push
outsb
dec
out
push
mov
in
stc
jp
and
pop
and
xchg
shlb
int3
lcall
mov
jnp
stos
add
gs
aaa
fsubl
lods
stc
pop
popf
mov
mov
mov
adc
xor
les
sub
pop
push
jle
cmpsl
in
or
mov
aad
scas
pusha
sub
push
cltd
aaa
shrl
lret
inc
adc
xor
adc
push
sub
ret
dec
lcall
stc
ja
fdivl
ljmp
jmp
xchg
mov
insl
add
push
loop
push
jmp
jg
xlat
je
mov
notl
repz
aaa
xor
je
and
sbb
cld
js
xchg
ja
push
and
bound
dec
dec
jo
inc
bound
add
outsl
out
adc
mov
movsl
flds
lods
fwait
push
pop
jo
ljmp
or
dec
lods
mov
mov
mul
das
mov
xorl
cmp
dec
and
pop
fdivs
fldl
test
es
lcall
push
inc
mov
lods
xlat
pop
stc
jb
das
jne
xchg
pop
or
out
push
bound
pop
inc
dec
leave
mov
testb
fsubrp
xchg
lea
inc
xchg
jmp
insb
and
mov
scas
mov
lret
int3
shrb
push
xor
loopne
les
lds
iret
cs
dec
fldt
or
xlat
mov
push
add
mov
mov
mov
add
ja
cmp
cld
pop
xor
pop
jp
mov
repz
out
test
mov
pop
mov
sub
fldcw
lea
ret
cmpl
or
pop
mov
pop
adc
fwait
enter
mov
out
arpl
popa
push
push
mov
loope
sub
pop
adc
cltd
and
lds
jae
lahf
call
fwait
imul
int3
sub
or
xchg
stos
jo
sub
ljmp
sub
iret
push
mov
push
test
pop
sub
subl
sbb
and
push
gs
mov
push
nop
test
mov
push
sbb
fmull
mov
jl
or
and
aad
cmpsb
jecxz
aaa
test
out
rcll
xlat
lahf
enter
cmp
enter
sub
push
fidivrs
popa
test
mov
cmp
inc
popa
sub
mov
out
aam
lock
nop
pop
xor
sahf
and
cmpsl
add
pop
xlat
sub
mov
fmulp
cli
dec
ja
inc
dec
rcll
leave
jge
scas
negb
jno
push
aad
add
repnz
lret
add
mov
out
or
and
out
stos
mov
push
std
les
lcall
jb
adc
cmpsb
loopne
xor
add
mov
jne
dec
and
mov
mov
cmp
in
outsl
pushf
or
cwtl
sarl
inc
call
mov
out
or
data16
pop
test
jp
sahf
adc
cltd
or
fcomps
mov
push
sbb
int
xchg
mov
iret
or
push
fsub
add
mov
fstl
add
xor
data16
inc
out
xor
ljmpw
jb
shl
aam
jecxz
fldcw
push
dec
mov
mov
adc
mov
out
cli
aas
nop
mov
or
outsb
sbb
cmp
pusha
dec
rcll
add
xchg
and
mov
pop
and
lock
fdivl
sahf
sbb
pop
mov
pop
cmpsb
aam
lods
lcall
xchg
or
dec
outsb
pop
shlb
dec
sbb
leave
xchg
mov
or
dec
adc
xchg
lods
jno
sub
xchg
add
dec
fwait
sbb
xor
cmp
push
je
or
imul
mov
pop
aam
jbe
call
cs
shll
sbb
adc
add
pushf
add
shrb
xchg
xchg
mov
sub
stc
jns
or
fdiv
push
sbb
pop
test
adc
ljmp
outsb
dec
add
pop
mov
mov
test
jmp
icebp
adc
push
rcrl
push
fcomp
cmpsb
fistps
dec
adc
push
mov
aaa
jge
mov
rclb
dec
and
data16
xor
pop
mov
faddl
outsb
jb
in
or
mov
cmpl
out
ficomps
repz
insl
popf
addr16
call
jae
xor
mov
mov
mov
pop
test
adc
stc
int
addr16
add
stc
mov
incl
add
in
jae
jle
mov
je
xlat
inc
or
pop
flds
push
test
push
mov
pop
dec
in
xor
aaa
jae
test
shll
arpl
into
mov
ficompl
sti
js
and
and
adc
mov
inc
popf
sbb
jle
rsm
leave
xor
test
pop
call
inc
xlat
jge
mov
adc
dec
data16
pop
sahf
inc
xchg
sbb
mov
add
inc
cmc
jle
int
ss
leave
addr16
cmp
cmpsb
mov
gs
out
adc
lods
sbb
sahf
cwtl
imul
mov
lret
sarb
mov
jp
inc
pop
sahf
and
and
mov
ret
sbb
jg
cld
xor
es
aam
mov
mov
ret
mov
test
int3
insl
jmp
out
fistpll
scas
in
cmp
rcrl
adc
icebp
outsb
jae
js
hlt
mov
push
loopne
xor
std
xchg
mov
cmp
lcall
out
clc
lock
cmp
cmp
mov
jmp
cmp
xchg
xchg
or
and
sahf
xor
hlt
mov
xor
mov
out
icebp
clc
repz
pop
xchg
mov
outsl
jmp
loope
adc
ja
clc
insl
fwait
mov
out
push
jmp
cs
jae
mov
cmp
sub
jle
mov
cmp
jl
add
inc
mov
jbe
in
mov
sbb
dec
mov
fadd
hlt
mov
ds
pop
shlb
pop
rcrl
int3
mov
xchg
jge
subb
mov
es
pop
jle
mov
stos
mov
xor
and
scas
and
fcomp
inc
notl
xor
fsubrp
and
cwtl
mov
iret
lock
or
sub
sub
adc
lock
push
sbbl
inc
test
dec
dec
cltd
xor
mov
sti
out
aas
aaa
pop
dec
call
xorb
imul
xchg
roll
xchg
cmpsl
xor
ret
pop
pop
in
subb
int3
or
and
call
sbb
das
pop
sbb
std
push
outsl
popf
lock
subb
paddsw
inc
cld
out
pop
imul
ret
scas
pop
ljmp
jbe
dec
gs
pop
push
mov
mov
xchg
std
hlt
ror
int
rcll
xchg
pop
mov
xchg
jnp
out
adc
sub
mov
pop
push
scas
fsub
dec
insb
or
pushf
sub
addr16
add
jecxz
mov
imul
ljmp
add
mov
sub
movsb
out
push
std
push
lret
jno
lret
pop
popf
push
gs
jae
test
sub
aam
xchg
adc
pop
arpl
cs
mov
push
mov
xor
fwait
mov
nop
or
sbb
ljmp
pop
cmc
sbb
cmp
xchg
sub
xchg
push
jmp
mov
call
sub
sti
fldt
sbb
and
nop
shll
pop
inc
fisubs
adc
pop
or
push
lods
lahf
and
mov
push
xor
jp
leave
test
push
jl
mov
mov
xchg
adc
add
xchg
xchg
jge
cmc
pushf
xchg
adc
adc
inc
push
cwtl
add
in
push
daa
stos
mov
outsl
push
dec
ds
adc
mov
insl
insb
pop
mov
xlat
cmp
pop
fildl
iret
inc
mov
sarl
mov
inc
enter
pop
lret
sbb
adc
xchg
add
or
sub
push
ret
ret
les
mov
xorl
add
sbb
jo
push
test
and
subb
je
das
cmpsl
dec
push
xorl
cld
cli
xor
dec
mov
aaa
sbb
push
sub
icebp
xor
cmc
scas
inc
daa
cmp
mov
sahf
lds
inc
lea
jecxz
dec
xor
mov
hlt
cli
pop
push
mov
cmc
mov
mov
daa
sbb
and
icebp
sub
sub
and
mov
dec
out
adcl
mov
add
iret
jmp
rol
mov
mulb
xor
sbb
or
dec
das
fwait
insl
sub
jae
outsl
notb
bound
mov
stos
add
cmpsl
test
fstp
sbbl
inc
insb
cs
and
mov
cltd
jo
xor
shrl
add
inc
xor
dec
and
inc
xor
push
pop
imul
inc
dec
inc
or
int3
sti
stos
push
into
movsb
mov
fildl
sub
push
dec
int3
arpl
inc
pushf
dec
testl
ja
adc
sub
rcrl
cmp
inc
xlat
adc
das
outsb
fisubl
sub
cltd
jle
inc
sub
pop
cmpsb
and
xor
push
lods
xlat
mov
rcll
in
pop
push
fistpll
icebp
jp
mov
jle
ljmp
ror
mov
mov
cmc
enter
punpcklbw
pop
add
leave
das
ljmp
sub
lock
mov
pop
jo
cmpsl
scas
orps
pop
adc
fsts
inc
cmp
and
fsubr
sub
xlat
dec
sbb
dec
pop
lock
mov
ret
xchg
mov
gs
out
and
bound
mov
aas
xchg
rorb
outsl
mov
mov
inc
mov
add
push
aam
das
outsl
outsl
xchg
idivb
jnp
or
jl
imul
leave
sbb
into
mov
lcall
and
adc
xchg
jg
mov
sbb
mov
repz
movsl
jle
lret
cmpsl
jns
imul
jge
sub
xchg
frstor
inc
sbb
inc
inc
push
lret
inc
sbbl
inc
sub
push
flds
jmp
or
inc
jl
daa
test
xchg
clc
mov
mov
stc
out
jl
xchg
lods
jns
sub
hlt
cli
and
mov
push
xor
push
ret
fwait
jo
jns
in
xchg
sti
jmp
mov
push
sub
pop
inc
xchg
outsb
or
cmp
fwait
shlb
sub
push
sti
call
mov
xchg
out
mov
sub
jbe
std
and
xchg
fadds
outsl
out
rcl
cmp
mov
jb
dec
out
and
mov
jnp
fnstcw
lret
xchg
cmpsb
ss
aas
adc
outsb
lods
sbb
mov
sahf
test
stos
das
sbb
mov
pop
orl
int
mov
pop
loop
xlat
mov
loopne
push
cmp
lds
dec
test
lea
xor
lcall
inc
add
sahf
mov
add
mov
sahf
cmc
mov
xlat
sbb
push
cmp
cmpsl
cmp
aaa
sbb
sub
dec
jl
subl
clc
xchg
lds
pop
xor
sbbl
mov
or
inc
fwait
sahf
hlt
out
jnp
cwtl
inc
xchg
in
dec
addr16
sbb
pop
ret
jle
lcall
and
add
jle
sbb
jg
mov
adcb
cmp
sub
rolb
movsl
push
mov
insl
sbb
addr16
xchg
and
adc
and
push
fldt
pop
insl
es
and
ret
adc
out
mov
js
popa
add
push
push
pop
sub
test
sarl
cld
sub
lods
dec
repz
push
int
cmc
xlat
adc
out
das
mov
pop
movsw
filds
aas
xchg
sbb
mov
and
add
cmp
fisubl
mov
loope
lea
adc
dec
iret
insl
loope
outsb
cld
sub
fwait
cmp
sbb
movsl
adc
imul
inc
push
je
mov
mov
pop
in
cld
cs
std
and
add
mov
rcl
dec
xchg
jge
fists
sbb
cld
add
test
adc
daa
adc
fimuls
pop
std
jg
imul
inc
bound
add
mov
insb
jp
cmp
pop
jo
punpckldq
push
jne
xchg
mov
mov
inc
mov
test
outsl
add
mov
aad
adc
fst
push
sahf
in
or
aad
jae
test
dec
scas
int3
mov
adc
je
mov
test
mov
notl
push
cmp
inc
sub
or
iret
mov
cmp
jb
test
push
fwait
push
dec
sarl
jle
jae
in
movsl
pop
dec
pop
jb
outsb
movsl
or
insl
in
sbb
inc
push
fwait
repz
push
inc
mov
mov
xor
sar
stos
in
pop
xor
imul
lret
cmpsb
sbb
push
mov
mov
je
lret
dec
sub
rorb
and
mov
lods
and
dec
gs
push
mov
fdivs
fmuls
and
adc
in
cmpl
mov
mov
add
imul
and
aad
int3
and
lcall
idivb
jb
loopne
or
aas
inc
sbb
movsl
sbb
dec
cmp
test
testb
iret
sbb
pusha
outsb
scas
imul
mov
enter
mov
sti
mov
jno
jl
sub
mov
push
dec
shrl
into
clc
cmc
lock
outsb
mov
lods
lods
sub
sbb
addr16
push
pop
sbb
push
addr16
into
loope
insl
test
push
lret
mov
pop
jnp
in
dec
in
cltd
imul
push
add
push
fwait
mov
mov
subl
or
bound
hlt
sub
ds
mov
push
test
and
jno
jno
sti
adc
pop
mov
in
outsl
data16
insl
push
fistpll
xchg
cmp
lahf
and
or
fucom
das
dec
pop
js
int3
adc
push
rcrb
push
or
clc
cwtl
xor
jecxz
sbb
sub
mov
aaa
cli
iret
jae
mov
push
lcall
push
sar
scas
cmpl
xchg
xchg
fstps
mov
mov
iret
inc
mov
mov
xor
or
icebp
xchg
push
insb
cmp
faddl
inc
inc
add
mov
lods
xchg
lret
std
push
cmc
inc
or
jnp
pop
inc
enter
fistpll
orb
mov
cwtl
mov
xlat
rcr
imul
rcr
adc
mov
jge
xor
jnp
cmp
push
pusha
aaa
dec
push
fistpll
aas
jne
push
inc
pop
cmp
xor
dec
mov
jge
imul
mov
xchg
arpl
bnd
test
xchg
pop
fsub
pusha
fstpt
imul
pop
lods
or
adc
imul
lcall
or
lods
fwait
enter
sahf
jnp
jnp
mov
mov
sbb
inc
pop
popf
rclb
nop
mov
mov
xor
push
xor
lods
and
imul
dec
test
pop
mov
pop
fstl
std
dec
sahf
jbe
ljmp
fildl
sti
push
sub
mov
inc
or
enter
mov
aad
cli
jbe
arpl
loope
push
popl
inc
adcl
and
arpl
push
push
pop
mov
pop
xchg
mov
pop
jg
mov
xor
in
rorb
mov
arpl
cld
repnz
mov
pop
inc
jp
push
ljmp
imul
int3
add
bound
add
orb
jnp
or
xor
inc
sbb
ret
cwtl
call
xchg
inc
fadd
xchg
mov
pop
inc
stos
lods
shl
pop
pop
xor
arpl
pop
mov
sarl
inc
add
xor
push
aas
fstp
push
add
fstl
mov
shll
scas
cld
pushf
bound
and
add
fbstp
sub
xor
test
xchg
outsl
mov
dec
push
movsl
inc
imul
ja
roll
faddl
dec
bound
pop
pop
js
jnp
leave
adc
mov
adc
mov
mov
cltd
out
jge
inc
dec
fdivs
mov
cmp
push
mov
inc
mov
cmp
xor
cmp
xchg
loop
jmp
adc
sbb
mov
xchg
outsl
and
cmp
adc
dec
leave
call
addr16
jb
test
iret
ret
ret
mov
adc
mov
or
insb
loopne
push
shll
push
sub
inc
ds
and
dec
lret
xchg
mov
or
mov
mov
pop
push
dec
add
jmp
cli
push
fnstenv
pop
shr
sub
cltd
mov
into
arpl
cltd
push
push
stos
push
fucomi
mov
out
aam
notb
int
xor
in
imul
test
dec
and
xor
mov
mov
push
and
adc
xchg
repz
les
mov
mov
hlt
ja
jl
pop
movb
int
inc
mov
and
cmp
push
bound
add
xchg
sbb
sarl
mov
lock
push
mov
or
lock
pop
xchg
es
adc
cmp
xchg
pop
in
mov
xor
pop
pop
lret
cmc
xor
fisttps
cmpsb
pusha
aad
push
dec
inc
notl
aas
jno
pop
gs
mov
jnp
pop
mov
ljmp
fcmovnu
ret
inc
push
jecxz
mov
cmp
adc
test
gs
xor
rol
mov
pop
xchg
xchg
icebp
mov
xchg
movsl
pop
mov
mov
ja
mov
lea
insl
je
and
adc
popa
repnz
dec
mov
stos
fldt
es
mov
das
lcall
fldenv
imul
jecxz
jle
fwait
mov
push
orb
nop
adc
mov
fidivs
jge
es
lcall
inc
xchg
inc
mov
adc
ret
mov
cmpsl
cld
loope
test
into
xchg
sub
dec
push
stos
cmpsl
leave
and
push
pop
jno
das
dec
mov
cltd
aaa
xchg
sbb
pop
loope
or
pop
mov
sbb
loopne
int3
adc
cltd
add
cmc
js
push
add
call
xchg
mov
loop
xor
icebp
dec
out
cli
fwait
mov
mov
in
dec
sub
add
lea
fstpt
push
push
mov
mov
jecxz
inc
jae
push
xchg
sub
jb
ds
pop
out
rcr
jns
push
repnz
scas
mov
mov
jg
add
pop
push
or
and
dec
add
push
jne,pn
outsb
pop
cmpl
negl
int3
mov
shll
and
push
sub
mov
push
adc
jecxz
shll
cli
jnp
fisttpll
jl
sbb
pop
xchg
std
pop
xchg
sbb
test
dec
mov
pop
mov
js
or
dec
sbb
daa
pop
test
les
je
jb
rorb
pop
aam
shl
cmp
push
fdivrl
xchg
dec
add
insl
ret
std
out
or
les
xchg
xchg
loopne
in
sub
outsb
mov
subb
push
sub
or
inc
xchg
idivb
push
in
in
mov
enter
adc
cmp
pop
adc
mov
adc
arpl
into
sbb
or
dec
dec
sarb
jb
mov
and
aad
out
sub
nop
inc
or
sbb
int3
xchg
mov
pop
jmp
icebp
inc
add
inc
xor
mov
inc
int3
mov
xchg
je
sbb
lcall
mov
les
rcr
lcall
mov
adc
xor
data16
fnsave
inc
mov
inc
push
cli
add
add
adcb
mov
aas
mov
mov
scas
or
in
repz
out
jns
mov
mov
mov
inc
sbb
adcb
shlb
cli
mov
cmc
sub
insl
out
iret
adc
nop
inc
arpl
cmp
pop
fiaddl
lock
loopne
adcb
ds
mull
scas
outsb
fnstcw
push
mov
jae
and
push
ds
xchg
dec
dec
cmp
je
mov
addr16
mov
push
and
mov
or
or
cld
push
loope
leave
mov
mov
test
loopne
in
sub
jno
loopne
adc
loopne
xor
or
loope
call
cmp
mov
out
outsl
pop
xor
cltd
xchg
sub
jmp
sub
push
push
adc
push
addl
sarl
fs
popa
negl
lahf
sti
dec
movsb
jnp
bnd
jmp
push
add
mov
dec
aaa
int3
xchg
insb
rorl
sub
pop
ror
divl
push
scas
mov
xor
push
sbb
or
or
stos
mov
out
loopne
daa
ds
mov
cwtl
jnp
xchg
add
lds
xchg
iret
mov
dec
mov
aas
sub
lret
add
pushf
mov
pop
mov
aam
xchg
lds
lcall
mov
dec
bound
aam
pushf
cmc
xchg
jno
lret
sub
and
mov
dec
movsb
jg
lret
repz
or
cld
push
je
test
pop
xor
xor
insl
inc
mov
or
xchg
pop
xor
sbb
mov
sub
or
jge
pop
call
sarl
xchg
bound
test
push
adc
add
inc
es
bound
pop
leave
or
mov
xchg
test
add
repnz
xor
or
xchg
jne
shl
repnz
js
js
out
mov
sti
ja
jg
test
mov
mov
test
jo
mov
addb
sbb
or
mov
mov
leave
scas
stos
push
das
arpl
mov
xchg
dec
popf
push
and
pop
dec
filds
sbb
imul
sub
jmp
sub
out
mov
or
cmp
stc
ffree
jo
js
addb
adc
cli
jnp
pop
imul
dec
adc
cmpsb
sahf
movsl
insb
lret
xor
jge
fcmovnb
insl
negb
mov
sbb
fcompl
inc
ja
or
mov
js
sahf
insl
mov
shrl
mov
out
out
sbb
pop
pop
sub
stos
out
mov
sti
outsb
adc
pop
cli
addr16
int
repz
out
mov
xor
ret
loop
repz
lock
mov
adc
jns
push
insl
jb
sbb
cmp
dec
push
or
lret
or
push
inc
pop
jae
sbb
sbb
sar
mov
ret
add
mov
nop
or
int3
mov
pop
xchg
xor
rclb
out
cwtl
sti
in
pushf
int3
inc
mov
test
rcr
testb
push
cmp
cmpsl
jnp
mov
into
stc
inc
iret
pusha
add
inc
out
fsubl
or
pop
inc
mov
xor
xchg
gs
in
cmp
xor
out
shl
pcmpgtb
sbb
jns
rep
cmp
ja
push
mov
dec
and
leave
ja
insb
mov
and
pop
jmp
pop
push
push
imul
call
arpl
cwtl
daa
jo
test
or
adc
sub
mov
sarb
mov
out
lahf
xchg
xchg
dec
rorb
incl
inc
xchg
push
jne
lahf
xor
mov
lods
outsl
sbb
xchg
aad
push
test
sti
loope
mov
loopne
sbb
xor
hlt
pop
aam
scas
into
push
js
mov
pop
cwtl
push
rcrl
jg
sub
and
add
lods
push
push
sbb
ss
ljmp
rclb
arpl
xchg
out
sbb
adc
cld
in
mov
xorb
stos
sub
cmp
aas
cli
fadd
jmp
jle
sbb
cmc
inc
mov
pop
cmpl
cmc
pop
lods
add
ret
cmp
or
mov
jge
fistps
jno
jge
sub
out
push
push
jg
xlat
push
cmpsl
adc
lcall
cmp
je
dec
inc
popa
xor
push
loopne
add
jnp
ret
cld
pop
cmp
outsb
cmc
dec
dec
daa
lret
jle
je
adc
lcall
ret
inc
adc
sbb
lret
fwait
nop
testl
mov
push
mov
repnz
fstpt
ja
sbb
test
xor
ret
and
mov
iret
stos
push
fwait
push
xor
pop
mov
dec
mov
clc
pop
dec
ror
dec
lods
out
in
fidivs
inc
add
inc
pop
sub
fyl2xp1
pop
enter
out
imull
inc
mov
in
clc
xor
add
pusha
pop
pop
mov
dec
push
jle
mov
xor
stc
sub
fsub
mov
inc
xchg
push
leave
jle
dec
pop
pusha
mov
sbb
pop
das
cmp
sahf
dec
fwait
je
and
mov
xchg
dec
mov
out
mov
inc
dec
roll
sbb
or
and
cmpsl
push
lret
inc
xor
sbb
fucomip
fwait
dec
sbb
scas
xor
xchg
mov
and
pushf
fwait
rcrb
xchg
enter
aaa
push
lods
loope
imul
xchg
jl
imul
lret
jo
mov
je
xchg
add
outsb
xlat
fidivrl
insl
push
shll
jae
fistl
sub
out
scas
out
mov
add
andl
adc
movl
push
sub
jns
out
jns
xchg
dec
int3
mov
push
and
orl
test
aas
push
sub
jbe
loopne
int
ficompl
in
pop
jns
fldl
or
push
jae
cmc
xchg
data16
test
arpl
mov
lret
mov
sahf
add
repnz
sarl
fcoml
adc
sub
inc
push
mov
outsl
push
mov
mov
fsubl
dec
shlb
adc
je
cmpb
mov
push
mov
insb
xor
out
pop
dec
add
or
xchg
test
pop
lret
inc
in
cmp
add
inc
shll
lods
mov
cmp
adc
out
mov
push
out
jno
xor
jle
pushf
je
jge
fcompl
push
mov
dec
mov
lret
mov
sub
adc
sbb
pop
mov
jae
sbb
add
pop
out
dec
cmp
lds
leave
aaa
push
hlt
subl
adc
add
pushf
cmc
mov
lods
jmp
xor
jns
cli
cmp
divl
push
dec
inc
fnstenv
inc
jge
mov
mov
jp
or
scas
pop
and
addr16
movsb
cmpl
imul
fs
or
mov
popf
data16
inc
jg
insl
repz
or
outsb
mov
mov
mov
popa
push
fnstenv
daa
pop
push
add
mulb
xchg
lods
mov
xor
or
sub
jne
psubusb
mov
xchg
daa
mov
cmc
xchg
xchg
mov
popl
sbb
popf
pop
imul
sub
or
in
or
repz
push
jno
in
enter
insb
inc
mov
pop
scas
sbb
jp
lret
inc
gs
ljmp
sbb
in
gs
pop
enter
mov
rcl
push
std
mov
mov
movb
push
scas
mov
cmc
jne
push
bsf
out
leave
jge
shrb
insb
add
pop
mov
fsts
or
mov
test
jne
adc
aaa
pop
cmp
in
int3
inc
sub
mov
loopne
stos
subl
fnsave
pop
cmp
arpl
mov
push
push
push
in
jo
popa
cmp
adc
xlat
mov
mov
adc
shlb
jnp
lret
sub
xchg
pop
adc
mov
insb
pop
mov
xchg
in
xor
push
push
es
aad
push
mov
jp
mov
sub
call
sahf
pop
lret
push
ljmp
inc
xchg
cmc
lcall
rcrl
sbb
mov
daa
add
dec
invd
cld
push
add
fiadds
mov
pop
repnz
pop
mov
outsb
xchg
insb
inc
stos
push
jne
aas
aaa
add
or
pop
ja
push
push
sbb
movsl
push
xchg
adc
inc
xor
mov
sub
add
sbb
inc
hlt
add
sbb
aas
mov
jae
push
int
incl
popa
cwtl
imul
mov
lods
push
push
aaa
vsubpd
faddl
xor
int
pop
idivl
into
in
fnsetpm(287
imul
iret
dec
loope
add
sbb
sarl
sub
mov
sbb
rcll
int3
or
jb
lcall
cli
adc
xchg
xor
jmp
rcr
cmp
adc
push
jl,pn
adc
les
stos
mov
scas
pop
jecxz
clc
lock
pop
stos
cld
out
adc
lds
xor
repz
imul
mov
cmc
jo
and
jne
cmp
inc
mov
xchg
push
inc
lret
cs
or
pushf
addr16
xchg
sahf
test
dec
dec
rorl
cmp
cmpsb
lods
rcll
sbb
ficoml
xor
or
gs
adc
aam
lret
adc
pop
outsl
jo
scas
pcmpgtb
ror
movsl
clc
pop
fisubrs
nop
cmp
add
mov
aaa
mov
push
lret
insb
jnp
mov
aaa
or
pop
out
ja,pn
add
stos
inc
out
cmp
cmc
loope
out
sub
subl
je
lahf
orb
dec
add
jle
jge
dec
sahf
or
pop
dec
hlt
clc
jecxz
mov
cltd
sbb
xor
mov
inc
test
inc
sbb
nop
lods
sub
dec
test
xchg
add
arpl
test
test
bnd
mov
or
push
cmpsl
jne
sub
int
cmc
ss
pop
lods
mov
push
loope
sub
out
add
adc
xor
xlat
mov
xor
hlt
sbb
popa
sub
gs
inc
sarl
lods
and
or
enter
or
inc
and
loopne
aam
inc
icebp
jl
xchg
scas
xchg
shl
seto
push
mov
mov
adc
pop
scas
test
lock
out
pusha
fldl
stos
imull
cld
js
cmc
xchg
aad
sub
cmp
jae
push
pushf
clc
sbb
xchg
cmpb
ljmp
hlt
push
les
dec
cmpsl
stos
dec
dec
inc
pop
pop
xor
mov
cltd
xor
cmpsb
xchg
insb
bound
dec
and
sbb
lret
mov
xchg
shrl
aam
mov
mov
mov
xchg
lahf
fwait
inc
addr16
xchg
bound
rolb
mov
icebp
jmp
jae
jne
xchg
adc
jae
fimull
or
imul
lcall
jmp
jns
pop
mov
dec
popf
mov
pop
test
adc
lock
scas
jl
das
lcall
xchg
or
lock
or
mov
jae
mov
xor
push
fimuls
enter
ss
in
sbb
push
jne
gs
outsb
jmp
aad
adc
jbe
xor
or
les
data16
dec
lods
popa
aas
adc
mov
test
mov
mov
inc
out
les
into
mov
jle
dec
and
adc
je
in
adc
xlat
jl
or
inc
lods
jo
pop
and
mov
sbb
mov
bound
xchg
ret
add
inc
loopne
rcrl
xchg
adc
dec
addr16
out
fs
add
add
mov
xor
push
jo
shl
push
pushf
cmp
jns,pt
lret
repz
in
decl
movsb
inc
pop
or
out
sahf
add
ret
mov
pusha
and
mov
cld
lahf
in
mov
sbb
push
or
pop
xlat
dec
cld
movsl
adc
dec
sbb
stos
sub
push
jl
cmpsl
gs
inc
dec
sbb
pusha
xor
xchg
rol
add
in
inc
lret
push
test
jl
ret
js
lods
test
out
shl
dec
mov
lcall
lods
cwtl
iret
sbb
xchg
lret
cld
pop
push
or
cli
je
adc
cmp
aam
or
es
adc
stc
mov
bnd
inc
fbld
mov
rcl
repz
mov
inc
sbb
imul
mov
push
pop
and
dec
push
sub
mov
mov
cmp
inc
ds
xlat
mov
sbb
sbb
lods
or
loop
cli
push
jle
pusha
inc
cmp
push
aaa
and
pop
pop
lret
adc
test
adc
cmp
out
push
out
pushf
call
mov
and
push
jl
push
mov
cmpb
idivb
rcrl
pop
data16
add
mov
ficomps
out
rorl
pop
xor
rcrb
shll
jb
pop
arpl
int3
outsb
adcl
clc
aad
cmp
mov
fs
cmp
enter
pop
inc
sarl
cmp
addr16
bts
test
mov
js
dec
sbb
mov
loop,pn
xor
leave
aas
out
adc
lret
cld
mov
es
adcb
icebp
bound
inc
ja
shlb
pop
push
inc
lcall
cli
out
xchg
pop
add
add
test
pop
fmull
pop
sub
and
push
xchg
movsl
jecxz
stos
fildll
sbb
mov
mov
lcall
cmp
inc
add
mov
movsb
and
inc
jl
cwtl
gs
mov
sub
xchg
andb
sarb
push
scas
rcll
ljmp
movsb
jmp
call
push
aam
xorb
cmpsl
outsl
enter
mov
sbb
sub
jp
dec
cld
enter
in
fcmovne
ficomps
dec
xor
aad
aam
loope
bound
sub
sbb
mov
mov
pop
into
add
divb
jno
mov
jmp
fistps
bnd
lods
hlt
fcmove
jo
sbb
pop
movsb
dec
ss
out
dec
mov
subb
sbb
popf
lret
cmp
and
clc
into
sub
out
std
aad
es
leave
mov
test
in
jecxz
aad
mov
loope
jo
mov
imul
ret
fsubs
push
add
inc
daa
mov
cltd
imul
nop
fmulp
pop
ds
mov
out
in
mov
mov
xchg
xor
pop
stc
jge
repz
push
out
movsb
mov
adc
fisubs
mov
sub
mov
inc
lods
jg
aas
add
add
pop
out
xchg
adc
inc
or
stos
pop
push
inc
add
loope
xchg
imul
push
inc
ret
hlt
adc
jno
fsub
lods
pop
dec
and
xor
mov
fdivrp
cmpps
sub
scas
aas
rcl
xor
adc
adc
es
pop
popa
je
mov
insl
loop
sub
out
jmp
pop
add
out
fidivs
fidivrs
cmp
dec
inc
mov
mov
or
je
dec
xchg
add
jecxz
push
addr16
mov
dec
jl
push
dec
lret
jo
cmpsb
xor
mov
out
out
push
test
addr16
fldl
loop
cmp
cmp
mov
mov
test
lea
out
jnp
addr16
mov
arpl
sbb
xor
jno
xor
aaa
or
xor
dec
add
lahf
push
add
bt
out
test
push
inc
call
cld
push
sub
pusha
test
and
mov
test
xor
sub
or
int3
imul
ljmp
movsl
mov
ljmp
jnp
push
mov
arpl
sbb
leave
pop
xchg
icebp
test
loopne
lods
imul
mov
add
aam
scas
inc
sub
std
push
leave
cmp
daa
dec
cmp
xlat
xchg
test
jb
push
jl
pop
mov
test
mov
sub
mov
cmpsl
xor
aad
jp
cwtl
xorb
fmull
push
sbb
fst
sbbl
andl
shlb
je
aam
test
pop
xchg
cld
cmp
push
fistps
jns
scas
rclb
aaa
les
sbb
mov
scas
jno
mov
mov
add
inc
das
and
pop
adc
shlb
loope
mov
test
mov
cmpsl
gs
lods
mov
repz
mov
ret
sub
add
sub
jno
mov
imull
leave
pop
xchg
add
aad
push
jne
mov
je
in
add
mov
sti
sbb
bound
testl
rorb
xchg
jg
xchg
stos
push
mov
xor
test
mov
inc
loop
sbb
inc
lea
mov
cmpsl
icebp
mov
or
and
mov
jbe
cwtl
push
fstpl
pop
sbb
addl
mov
pop
das
cmp
xchg
adc
sbb
push
lods
and
in
adc
lahf
les
adc
push
nop
xor
loopne
sbb
cltd
cmpsb
sbb
test
dec
lcall
adc
cmp
fcmovnb
lock
push
push
cmp
nop
nop
test
dec
pop
add
jbe
cld
mov
aas
adc
xor
shll
aaa
jbe
pop
aam
pop
add
popa
into
repz
rolb
stos
loop
adc
mov
pop
pslld
cli
ficoml
sub
mov
add
lods
stos
fld
xchg
sub
shrb
fisubl
jno
and
sub
cmpsl
jge
loope,pt
xchg
fiadds
pop
add
imul
cmp
add
and
xchg
in
mov
iret
mov
out
int
xchg
jno
sbb
xor
xor
mov
rcr
dec
or
rcl
push
sahf
cmp
int3
lret
mov
int3
out
lahf
add
push
xchg
in
add
out
pop
pop
shrb
xor
push
xchg
sbb
popa
jns
adc
inc
jnp
ljmp
jg
imul
mov
sub
gs
hlt
mov
jbe
adc
loop
adc
push
pop
loop
fs
imul
out
sub
js
lahf
push
insl
jge
push
mov
xor
cmc
popf
out
pop
dec
ds
xchg
sbb
inc
out
mov
kmovw
lcall
fwait
pop
fs
stos
sbb
je
hlt
cmpsb
mov
mov
aam
arpl
rcrb
aam
scas
dec
or
jecxz
xlat
mov
sti
mov
inc
jo
or
xchg
mov
int
rorb
fistps
icebp
xchg
lods
cwtl
je
ljmp
sbb
cmpsb
outsb
dec
out
dec
aam
or
out
sbb
or
sbb
mov
jbe
or
xor
fisttpl
mov
in
setge
adc
dec
test
push
aam
inc
add
jno
mov
or
mov
inc
stc
or
test
add
xor
mov
or
les
lahf
leave
mov
ljmp
test
int
push
sub
ja
cmp
adc
jg
mov
insb
xlat
dec
rorl
push
rorb
inc
pop
imul
fistl
icebp
pop
imul
mov
dec
and
xlat
out
shlb
hlt
push
sbb
lret
cmpsb
movsl
into
xchg
aaa
ficoml
loop
and
xor
addr16
sub
sbb
dec
adc
sbb
mov
push
mov
cmpsl
inc
xchg
jecxz
lcall
inc
pushf
jge
test
xchg
into
orb
add
mov
dec
xor
lret
insb
mov
popa
adc
and
orl
and
inc
push
mov
ds
mov
adc
xor
xchg
scas
ficoms
movsb
and
out
inc
lret
jne
mov
call
jae
adc
push
fwait
push
mov
out
dec
inc
jnp
inc
jle
dec
mov
mov
cmp
add
push
in
dec
mov
or
call
jge
in
rcrb
fmull
addr16
sbb
or
cltd
jno
or
stos
mov
or
fbstp
lahf
pop
mov
out
outsb
jae
les
mov
cmp
lcall
in
je
and
stc
and
sbb
xor
mov
push
jmp
pop
push
cmp
push
xchg
out
pop
cmp
jnp
std
cld
test
and
sbb
mov
gs
mov
sbb
and
xchg
daa
adc
dec
aam
out
iret
jg
pop
push
ret
or
mov
mov
push
lock
shrb
int3
mov
sbb
in
bsf
sub
jl
push
mov
lret
outsb
pop
pop
jg
in
mov
dec
inc
jmp
inc
sub
lret
rcrb
xchg
mov
cmpsl
lret
push
fldcw
in
sbb
inc
inc
imul
fnstsw
ror
push
inc
sub
imul
sbb
cmpsl
lahf
and
cmp
cmp
mov
lcall
imul
imul
fbstp
iret
and
outsl
cmp
adc
test
mov
pop
adc
scas
hlt
rolb
icebp
sub
cmp
or
pop
cmp
in
inc
cmp
lahf
aad
adc
inc
mov
adc
jns
icebp
lock
xchg
clc
cmpsb
stos
and
fldl
insb
fistpll
std
mov
jno
test
sub
fmul
js
pop
xorb
mov
xchg
pop
dec
xor
xchg
bound
fisubl
and
sub
in
xchg
sub
add
out
xchg
jg
push
jmp
xor
add
shrb
data16
push
in
mov
jbe
adc
adc
test
mov
jnp
subb
cmp
jne
test
ss
and
rorb
jno
pop
aad
int
out
bound
data16
scas
xlat
pop
dec
sub
pop
cltd
and
cmpsl
or
pop
lcall
push
aas
add
xchg
stc
cmp
inc
inc
fstpl
std
pop
test
dec
mov
ss
jle
mov
cs
adc
xchg
adc
xchg
dec
lahf
push
loopne
vmovups
mov
sub
lds
out
adc
aad
jecxz
pop
imul
daa
fmulp
aam
jmp
out
in
inc
mov
inc
movsl
or
aam
sub
mov
pop
xchg
adc
cmpsb
adc
sbb
adc
out
cmpsl
mov
sbbl
pop
mov
dec
addr16
fcmovbe
pop
into
dec
add
xor
sbb
pop
push
into
fimuls
cli
fwait
jns
cwtl
mov
sub
add
loopne
mov
std
imul
sar
pop
in
xor
xchg
push
and
arpl
xor
pop
outsl
mov
xor
mov
jle
push
pop
mov
adcb
xchg
jbe
jle
pmullw
adc
mov
push
shrl
mov
jne
mov
push
out
or
imull
jmp
scas
lahf
pop
test
aaa
out
ds
popf
mov
push
insl
movsb
imul
mov
bound
inc
push
pop
aam
inc
out
mov
pusha
dec
rcrl
insb
repnz
pop
iret
xor
daa
shlb
push
lret
mov
push
cwtl
insb
andb
bound
mov
fwait
shrl
movsb
ds
arpl
ror
mov
enter
sbb
imul
fnclex
inc
dec
mov
jmp
cltd
or
jne
adc
pop
push
push
pop
cmp
sbb
mov
or
inc
adc
xchg
in
repz
rorl
inc
lret
test
and
out
aaa
push
push
ret
cli
pop
adc
mov
shrl
jnp
pop
lods
and
outsl
cld
mov
das
mov
and
cmp
mov
in
xchg
mov
divb
loope
ds
ret
adc
adc
mov
sbb
dec
adc
xchg
sub
jge
out
fildll
xor
sbb
inc
shll
sbb
mov
dec
lret
add
insb
repnz
into
cmp
test
cmp
jge
or
jecxz
cltd
insb
test
nop
fdivr
ret
push
cmpsl
dec
mov
rcrl
adc
push
in
fistl
jno
pop
jp
fs
arpl
scas
shlb
or
clc
xchg
push
mov
loopne
adc
data16
scas
xchg
inc
icebp
bound
repz
movsl
jno
pop
lahf
dec
pushf
push
hlt
push
negl
cmp
movsb
dec
sub
outsb
subl
addr16
mov
test
scas
aas
cmp
cmp
jecxz
addr16
test
push
pusha
ljmp
repnz
jp
jno
mov
cmp
adc
mov
adc
idivl
movsl
aad
pop
push
adc
sbb
jg
andl
sub
addr16
outsl
jmp
pop
ror
pop
fisttpll
bound
or
scas
dec
mov
in
arpl
cltd
fildl
fs
push
or
inc
aas
xor
cmp
pushf
push
imulb
les
adc
data16
mov
dec
movsl
push
mov
loop
mov
adc
xor
fcomp
cmp
mov
cltd
mov
dec
lret
push
lret
xor
cmp
aam
sub
cmp
outsb
pop
dec
sbb
adc
iret
adc
lds
and
mov
add
pop
pop
das
inc
mov
push
loopne
adc
test
cmp
mov
jp
push
fldenv
jmp
iret
mov
add
es
shrl
adc
jge
out
inc
out
fs
ss
cmp
dec
and
cld
repz
mov
and
inc
sbb
and
ret
push
lock
in
or
jp
mov
mov
inc
arpl
sub
test
jb
dec
xor
leave
out
lcall
sub
cmp
or
mov
inc
sbbl
inc
fs
jg
push
outsl
lahf
add
xchg
add
xlat
mov
lods
js
int3
cmc
mov
jecxz
cmpsb
clc
xchg
ret
pop
not
sbb
mov
or
jns
dec
cmp
lods
mov
push
outsl
mov
cmc
outsb
mov
mov
add
fisubs
ja
leave
sti
or
mov
add
mov
push
cmp
fmull
xchg
loop
jmp
cwtl
fsincos
in
icebp
jl
jl
add
lea
push
sar
ds
popf
pop
fs
dec
xor
cmp
fcompl
cmp
aam
cmp
pop
jge
add
mov
dec
push
mov
xchg
jmp
test
cmp
pushf
mov
jp
test
push
rcll
lock
jecxz
xor
out
lret
sub
mov
mov
loop
outsb
enter
scas
dec
push
data16
mov
mov
out
scas
stos
xor
andl
pusha
xlat
sbb
sbb
jns
inc
jnp
mov
push
scas
pop
mov
xor
mov
in
dec
roll
jne
cli
dec
xlat
inc
adc
jmp
inc
adc
mov
adc
in
cmpsl
xchg
pop
adc
cmc
sbb
add
or
pop
mov
loope
in
jne
cmc
imull
negl
das
xchg
dec
jl
sbb
xchg
mov
es
loope
lcall
sbb
stos
jbe
lds
int
mov
adc
shl
repz
or
insl
hlt
add
insb
inc
int3
ja
add
shl
movsl
fisttps
mov
sbb
or
pushf
ds
ds
lock
hlt
mov
ret
sub
pop
jno
testl
call
in
dec
dec
jg
cli
test
adc
sub
and
repz
mov
add
das
cmp
inc
mov
sub
prefetch
inc
jmp
xchg
xlat
movsb
repz
xchg
iret
jge
pushf
or
mov
jl
inc
mov
dec
lock
push
loope
js
addl
pop
mov
inc
popf
test
add
xchg
push
cld
jo
call
in
insb
jmp
pushf
in
adc
dec
cmp
adc
stos
cmp
dec
sub
inc
push
jo
sbb
jae
mov
sahf
push
jo
int
sbb
setl
sub
add
cltd
rol
dec
xor
push
jbe
test
jnp
or
dec
in
pop
loope
jbe
push
call
add
pop
lcall
or
adc
dec
movb
sbb
pop
sarl
les
pop
xor
leave
xor
jecxz
xorl
dec
sbb
decl
sbb
insb
or
and
repz
mov
lods
popa
adcl
daa
push
aas
jns
nop
cmp
ds
fadds
push
mov
imul
dec
xor
push
mov
add
xor
or
xor
sub
incb
mov
push
test
mov
in
and
dec
movsl
repnz
dec
adc
xor
cli
inc
adc
jae
jns
stos
lahf
sub
push
cmp
es
xor
outsl
xor
pop
data16
dec
adc
ss
pop
jb
ret
gs
push
cmpsl
adc
mov
les
sub
das
xchg
cmp
mov
adc
xchg
xor
pop
pop
jg
imul
mov
mov
mov
inc
in
inc
xor
fs
fimull
mov
sbb
add
rclb
sub
jecxz
xchg
mov
dec
cmpl
pop
rclb
pop
aas
mov
mov
push
aaa
cli
ss
xchg
out
stc
dec
push
loope
add
push
jge
inc
adc
out
mov
cmp
lds
or
mov
scas
aam
hlt
push
ficompl
fs
pop
movsb
fisttpll
mov
fbld
mov
mov
ret
aaa
jl
sub
sti
sbb
lea
test
sub
xorl
adc
xchg
clc
inc
cmp
xchg
mov
pop
jle
mov
rep
insl
mov
lcall
mov
mov
pop
pop
enter
inc
push
in
jmp
pop
insb
das
sbb
dec
inc
fisubrs
int3
jmp
outsb
or
cmpsb
cmp
sub
call
stos
jnp
loope
pop
xchg
lea
xor
add
mov
mov
sub
cli
mov
mov
rolb
lret
sub
mov
fdivrs
out
sbb
xchg
adc
push
mov
idivl
jno
shlb
add
fisubl
shl
mov
stc
mov
ds
out
into
cli
ds
jg
mov
add
push
mov
ss
loop
and
das
mov
mov
adc
cmc
sarb
mov
jbe
and
mov
aad
ds
outsb
std
and
push
popf
sti
jl
xor
inc
xchg
fsts
push
pusha
dec
loope
sbb
sbb
sub
test
xor
sub
into
sub
dec
jmp
cwtl
mov
ret
cmp
test
jmp
insb
mov
mov
dec
mov
insb
or
push
xor
sub
push
adc
xchg
dec
stos
pop
push
sub
movb
loope
xchg
inc
call
call
xor
ror
or
bnd
mov
jmp
sbb
dec
roll
test
lret
mov
cmp
pop
jg
jae
mov
mov
sub
inc
sub
das
lods
push
or
int
icebp
je
pop
mov
imul
pop
or
cmpsl
dec
aam
inc
adc
movsb
pop
mov
std
popa
mov
pop
ds
xchg
lret
mov
and
jge
and
lret
insl
fwait
lret
cmpb
sbb
popf
add
fwait
mov
pushf
bound
adc
add
cmp
add
jl
add
sub
repz
jmp
loope
testb
aas
inc
sbb
jae
cwtl
and
jne
bnd
xor
push
cmp
pop
or
aas
arpl
es
jbe
loope
sub
sti
lods
arpl
dec
outsl
add
aas
or
mov
mov
push
sbb
cltd
sub
data16
fdivl
jp
xchg
dec
jo
pop
lahf
cmpxchg8b
iret
xchg
scas
dec
ljmp
mov
or
xchg
scas
scas
xor
pop
cltd
cmp
bound
adc
xor
xor
lret
pop
sbb
fsts
xorb
daa
cmpsb
aad
sbb
mov
imul
movaps
cmp
adc
jle
js
adc
das
xor
gs
test
dec
pop
cmpsl
xor
pop
and
mov
lods
xor
jmp
jne
push
mov
insb
mov
shrl
mov
cmp
std
data16
mov
xchg
gs
sar
jmp
sub
aaa
fwait
mov
sub
iret
jne
mov
loop
ret
pop
lods
inc
mov
or
push
adc
lret
pusha
dec
cmp
pop
cli
mov
pusha
pop
jecxz
xchg
iret
cmpsb
sub
inc
or
xchg
loope
dec
and
iret
orl
inc
aam
cmp
xor
mov
pop
push
fstpt
add
dec
xor
rolb
cltd
addr16
adc
inc
decl
adc
lea
pusha
xchg
push
cmc
fadds
cltd
xor
mov
daa
fdiv
dec
in
inc
jmp
ja
fbstp
mov
sbb
push
mov
les
pusha
mov
out
xor
in
cli
xor
cmp
push
mov
les
jg
jp
ror
sub
add
jno
int
into
lods
dec
dec
pop
mov
xor
jecxz
in
insb
adcl
sbb
xor
xor
or
sbb
ds
xchg
bound
cli
or
xor
xchg
cmpl
xchg
data16
addb
das
add
insb
in
pop
ret
out
mov
push
sahf
xor
mov
loopne
fwait
not
addr16
addr16
mov
aas
mov
or
xlat
scas
sbb
mov
pop
push
sbb
leave
lret
mov
scas
cmpl
sbb
cmpsl
sub
hlt
test
adcb
pop
dec
cwtl
push
in
fstps
sub
xchg
mov
lods
lds
mov
mov
mov
testb
sbb
mov
cmp
shlb
aam
mov
push
dec
cmp
fcompl
movsl
ret
mov
outsl
cmp
pop
push
mov
lea
xchg
aas
rcll
cmpsl
xchg
sbb
sub
and
imul
push
cmpsb
xchg
scas
and
xchg
cwtl
out
je
mov
cld
jle
mov
aad
dec
outsl
in
repz
popf
inc
sub
add
fimull
sbb
test
and
cs
or
pop
ja
mov
jle
mov
xchg
out
pop
ds
mov
jo
push
or
xchg
shll
mov
iret
xlat
and
mov
in
add
test
test
sub
sub
lahf
push
and
jns
andb
mov
pop
mov
lods
jo
test
test
lods
xchg
cmc
gs
push
adc
sbb
data16
pop
xchg
push
pop
hlt
mov
and
xchg
jbe
jo
rorl
xchg
jne
mov
dec
fmull
leave
xor
in
negl
or
daa
setnp
test
inc
test
jae
inc
dec
int
mov
or
addr16
repnz
gs
xchg
push
addl
shl
inc
es
push
pushf
jae
add
cmp
jmp
loop
cmpsb
mov
mov
or
and
fcompl
xlat
lds
nop
mov
push
addl
adc
iret
xchg
gs
sarl
ss
jmp
mov
call
ret
leave
or
sahf
mov
test
cmpsb
mov
loope
adc
adc
mov
xchg
sub
jmp
xchg
stc
sub
addr16
lret
mov
jmp
xchg
sub
mov
in
movsb
sbb
mov
jo
sub
jns
fwait
test
mov
lds
incb
icebp
shlb
mov
call
cltd
mov
xchg
out
dec
outsb
add
mov
hlt
test
sub
repnz
movsb
push
shr
sbb
fldl
mov
push
aaa
mov
dec
in
clc
pop
xchg
jne
lcall
and
pop
adc
push
pop
ret
filds
mov
movsl
je
mov
in
and
dec
fwait
push
fwait
shlb
pop
mul
sub
jbe
sbb
aad
push
cwtl
leave
xor
nop
and
xor
mov
add
inc
add
xchg
pop
movsb
dec
movsb
lahf
jp
imul
or
push
insb
pop
or
test
sbb
in
or
aas
lea
push
cld
fs
mov
jmp
clc
sub
test
into
rcl
mov
jno
sbbl
stos
ficompl
xchg
js
add
mov
mov
jmp
loop
or
call
ljmp
js
ljmp
mov
ret
cmp
inc
daa
cli
jb
loopne
lods
pop
negb
ljmp
jl
loope
outsl
jns
sub
addr16
add
cltd
sbb
in
or
cmpsl
movsb
xor
push
pop
es
out
sub
adc
mov
pop
outsb
cs
mov
sub
enter
and
ds
mov
cmp
lock
outsl
sbb
repnz
push
mov
sbb
xchg
fwait
in
inc
jne
insl
aas
clc
mov
push
jge
xchg
push
out
mov
jae
cld
cltd
dec
cmp
cmc
push
nop
push
sub
mov
pop
add
lods
mov
lcall
push
gs
or
out
push
sbb
jle
stos
add
or
dec
cli
sti
insl
pop
pop
xchg
fsubrs
clc
sarl
mov
nop
shrl
fnstcw
mov
xchg
ret
sbb
cmp
xchg
pop
mov
in
jb
xor
adc
nop
int3
inc
arpl
lcall
lods
subb
outsl
xchg
cmpsl
xchg
xchg
xor
jae
ret
sarl
shl
or
add
adc
repnz
popa
sbb
insl
jne
push
maxps
lahf
shll
push
ljmp
or
movsl
adc
fmuls
xchg
mov
inc
or
pop
mov
xchg
fbld
pop
inc
sbb
mov
ds
cld
mov
jns
out
push
cli
adc
cmp
out
mov
mov
out
xchg
add
push
popa
fisubrl
xor
leave
xorl
daa
mov
outsb
pop
roll
cmpsl
lcall
push
ss
dec
and
dec
mov
jg
insb
fstpt
mov
cli
sbb
inc
jmp
loop
shl
mov
jnp
adc
test
mov
fxtract
test
pop
out
inc
fcoml
sbb
mov
adc
flds
testl
xor
xchg
ja
mov
div
stc
adc
movsb
sub
or
ss
dec
push
fsub
dec
test
inc
stos
jge
popf
mov
aam
mov
inc
inc
mov
xor
jnp
mov
bound
insb
icebp
xor
outsb
xchg
pushf
dec
loope
in
jbe
outsb
outsl
popf
shl
dec
push
and
dec
xor
xlat
mov
out
repnz
mov
xchg
cmp
or
mov
test
push
mov
jne
movsb
push
es
and
ds
or
xlat
jle
adc
dec
hlt
mov
call
rcrl
inc
xor
sub
jae
pop
and
orl
inc
add
mov
pop
or
adc
jl
jns
mov
ret
sbb
lds
in
in
lret
mov
popa
cmpsb
pop
aas
mov
inc
outsb
and
ret
xor
and
cmc
pushf
int3
fiaddl
add
jb
pop
movb
repnz
push
adc
xor
lock
jl
xchg
out
stos
xchg
jle
xchg
or
mov
fs
cmpsl
stos
loope
int
add
jp
sbb
cwtl
push
jl
push
stos
popf
dec
or
test
xchg
push
js
jle
shll
or
mov
cmp
scas
jge,pt
cmp
rolb
lcall
ds
mov
jnp
or
sub
ret
in
pop
popa
sub
and
dec
cwtl
add
inc
pop
sti
loope
cli
sub
les
loope
or
fdiv
jb
xchg
loop
jp
pusha
pop
cmp
cli
cmp
mov
and
sbb
lahf
mov
cltd
push
leave
pop
mov
rcll
in
xor
mov
cmpsl
mov
jg
mov
cmpsb
out
mov
imul
in
xor
mov
mov
push
gs
mov
lcall
jae
adc
into
pop
ds
jl
inc
in
push
push
cld
push
dec
loopew
lcall
pop
push
pop
mov
sbb
pop
stc
mov
push
push
mov
hlt
outsl
pop
add
insb
mov
repz
jmp
add
mov
inc
push
pop
ljmp
shr
je
mov
push
sbb
inc
decl
and
scas
call
js
andb
aam
shrb
sbb
into
les
dec
xor
lret
scas
fimuls
jmp
fs
movb
stos
xor
cmp
shlb
cmpsl
pop
push
es
jno
int
pop
jno
rorl
ljmp
or
mov
test
or
std
cld
mov
dec
out
sbb
cmpsb
ret
jl
mov
mov
std
ljmp
sbb
in
movsl
inc
sub
out
cmp
mov
mov
cmpsb
fs
mov
jno
daa
out
lcall
inc
out
pop
pushf
mov
mov
pop
ljmp
mov
in
inc
movl
and
sub
xor
mov
popa
pop
jp
pop
dec
jmp
test
inc
insb
sub
xchg
inc
aad
loop
xchg
adc
mov
xor
pop
dec
push
dec
or
popf
daa
mov
dec
jl
in
and
rclb
test
das
or
lcall
add
adc
push
xor
ret
in
fists
aad
dec
fdiv
clc
nop
add
popf
adc
xor
imul
inc
inc
xor
repnz
ljmp
pop
mov
mov
lock
push
sub
adc
jl
mov
cwtl
cli
mov
or
jb
cmp
andl
mov
dec
push
dec
xchg
movl
ds
pop
sbb
inc
xlat
push
ja
dec
imul
loopne,pn
je
xchg
adc
cs
sbb
inc
push
in
movsb
push
inc
sbb
movsb
sahf
jae
jecxz
push
pop
mov
pusha
mov
std
pop
icebp
adc
mov
lds
ret
test
mov
sub
mov
bnd
in
insl
out
cmp
stos
mov
out
jne
dec
cmovnp
mov
inc
adcl
cmp
cmpsl
mov
inc
mov
push
mov
inc
jo
lock
adc
pop
xor
aaa
sysret
negb
sbb
push
push
xor
pusha
xor
mov
movsb
mov
fadds
out
mov
jbe
add
int3
mov
stc
cmp
push
shll
sahf
sbb
adc
cmc
jecxz
clc
fbld
jg
jbe
mov
divl
ja
cltd
and
popa
mov
xchg
dec
fs
mov
mov
pushf
push
jb
loopne
add
inc
leave
inc
sbb
mov
xchg
adc
aaa
or
aaa
sub
outsb
bound
aas
test
push
push
andps
scas
inc
jno
sub
int
and
push
imul
lea
shlb
cmp
cmpsb
xchg
scas
xchg
imul
icebp
stos
mov
pop
sub
pop
ljmp
adc
arpl
cmc
and
lea
push
shlb
jecxz
mov
ret
xlat
out
rcrl
icebp
inc
mov
mov
xor
shrl
cmp
cmp
inc
test
insl
in
and
dec
add
inc
dec
out
pusha
icebp
orl
lods
idivl
lock
movsl
sbb
pushf
std
add
fnstenv
es
aaa
ficoms
inc
adc
mov
iret
lret
mov
dec
push
and
and
daa
inc
push
xor
jne
dec
pop
add
jg
mov
mov
pusha
sub
leave
xchg
leave
push
mov
lock
or
push
jnp
fisttps
loop
pop
out
mov
add
js
popf
lods
lock
lret
inc
lods
aaa
sti
repnz
outsb
push
aad
into
cmp
hlt
out
dec
cld
test
das
sub
and
fiaddl
cmp
jb
lret
sbb
jns
jb
xor
movsb
inc
dec
jg
lret
ficomps
cmp
sbb
xchg
sbbl
add
and
add
and
and
and
cmp
test
and
mov
push
ja
xchg
jns
loope
stos
xchg
xor
mov
call
lcall
mov
in
push
lahf
inc
dec
mov
imul
pop
push
jle
mov
or
in
mov
inc
or
ds
push
adc
scas
pop
mov
inc
xchg
xor
add
imul
jl
dec
sbb
int3
hlt
cmp
test
rcll
scas
mov
xlat
outsl
imull
cmp
movsb
or
mov
mov
shrb
fcompl
popf
fwait
and
sbb
mov
aam
or
add
pushf
or
add
sbb
sub
pusha
sarl
lods
aas
sti
fwait
dec
and
pop
dec
loopne
jge
das
sbb
movsl
cs
mov
cmp
scas
loopne
hlt
loopne
mov
xchg
jge
test
test
mov
lods
xor
sub
lret
test
and
jns
push
leave
aad
and
sub
mov
xor
popa
sub
mov
mov
xor
stos
mov
shl
ret
nop
rcll
inc
jge
add
add
aam
das
aam
das
ss
mov
aaa
or
popf
fwait
or
lret
jmp
sbb
dec
outsb
dec
popf
loop
sbb
mov
dec
je
sub
nop
push
add
mov
loop
outsb
inc
mov
loopne
fcmovbe
pop
cli
sbb
xchg
push
jae
rolb
sbb
scas
mov
nop
xchg
outsb
icebp
mov
jle
mov
push
jl
gs
fimull
hlt
sbb
aaa
cmpsl
mov
into
aaa
sbb
scas
cwtl
xorb
dec
mov
add
xchg
xchg
shl
jle
and
mov
dec
movsl
adc
das
pop
out
clc
lret
mov
jno
push
mov
push
mov
in
mov
sete
and
lods
xchg
and
hlt
insb
push
mov
and
mov
jge
imull
xchg
popa
fcompl
add
pusha
mov
sub
inc
shll
nop
adc
mov
xchg
loopne
cmp
cli
mov
daa
cli
lods
out
mov
mov
in
ficoml
inc
adc
xlat
push
or
dec
push
leave
dec
mov
repz
cmpsl
xor
sub
cmpsl
stos
adc
pop
lods
xchg
pop
pushf
push
imul
push
push
or
repz
iret
inc
das
xor
fwait
pop
lea
and
xor
cld
sub
pop
loop
dec
pop
mov
es
push
fs
pop
clc
mov
cmp
sub
pop
xor
scas
adc
or
sbbl
fcom
pop
js
xor
loopne
mov
cmp
sbb
sbb
inc
std
fistl
jbe
das
pop
inc
jmp
loopne
pop
sbb
bound
sahf
into
cmc
or
call
mov
movsb
push
rcrb
xchg
into
cmp
in
xchg
sub
dec
lods
mov
out
in
and
xor
inc
outsb
addl
xchg
lret
jns
movsl
push
sub
mov
mov
jnp
sub
mov
nop
dec
enter
mov
hlt
lcall
lret
mov
lret
mov
xor
shll
or
jp
daa
jmp
dec
cmpsb
mov
xlat
mov
xchg
sti
in
out
mov
push
xchg
push
mov
jnp
aas
rcll
push
mov
push
cmp
sub
and
jmp
pop
int
int3
shlb
add
sbbb
cli
jg
popa
jns
aad
shl
imul
add
adc
ljmp
or
jl
push
in
mov
mov
sbb
or
imul
cmp
popf
sub
mov
jns
es
cwtl
outsl
adc
repnz
xchg
dec
pop
xor
test
stos
mov
repz
data16
xor
add
scas
fldl
int
das
loope
add
jg
ret
push
push
mov
iret
out
testb
out
jmp
inc
jns
ss
in
sub
mov
pop
outsb
outsb
out
dec
loope
aas
xlat
movsb
mov
shl
call
push
inc
xor
add
push
gs
incb
cmpb
sbb
cltd
xchg
sbb
sahf
std
cmp
outsl
outsl
add
cmpsl
nop
imull
sub
outsb
sub
mov
xchg
addb
xchg
add
adc
hlt
iret
dec
jg
mov
push
out
adc
fmuls
hlt
dec
sbb
cmp
xor
xor
and
jb
cmp
dec
adc
ss
sub
aas
shl
dec
cmpsb
sti
mov
and
loopne
xchg
stc
cmpsb
andl
mov
shlb
push
mov
dec
es
mov
jb
xor
push
mov
fiaddl
pop
addr16
jg
test
pop
pop
cld
mov
outsb
out
or
xchg
addr16
sbb
sbb
jl
xor
stc
in
movb
mov
mov
xor
and
ret
pop
pop
mov
jmp
fcoml
cmp
out
arpl
or
je
inc
popa
je
shll
iret
xor
sub
out
and
out
sbb
add
push
push
in
loop
cmc
daa
jg
adc
addl
push
dec
xchg
dec
pop
adc
cli
fists
cltd
rorb
add
cmpsl
lret
mov
cmp
mov
insl
add
stos
iret
sbb
hlt
xor
xchg
in
jae
or
out
pop
mov
mov
inc
ljmp
jae
pop
repnz
out
xlat
mov
dec
jecxz
aas
inc
xchg
xchg
push
and
shll
mov
test
cwtl
aaa
pop
pop
add
ljmp
ret
mov
add
sbb
sub
and
push
popa
icebp
rolb
mov
adc
sahf
mov
arpl
daa
rol
sbb
mov
adc
ltr
push
and
sti
and
insb
dec
sub
push
push
movsl
das
push
xchg
mov
jo
or
inc
sbb
fistpll
push
push
or
sbb
xchg
mov
ror
pop
xor
add
ficompl
mov
cwtl
pop
xor
dec
mov
mov
out
fmulp
mov
ljmp
xchg
notb
call
mov
adc
mov
push
mov
jne
lock
mov
mov
push
lret
mov
jle
dec
sub
push
daa
pop
dec
dec
movsl
clc
cs
mov
inc
js
cli
daa
cs
arpl
push
xor
std
adc
push
mov
out
sub
lea
sahf
mov
fiadds
dec
enter
ret
mov
xchg
inc
mov
movb
sbbb
mov
mov
xlat
ds
push
test
stos
add
fwait
push
push
imul
push
cmp
gs
jecxz
jno
cmp
test
lods
xor
mov
cli
sbb
xor
in
mov
and
add
sahf
ret
stos
lods
movsl
cmp
pop
xchg
cmp
sub
ret
and
xor
inc
sub
pop
xchg
xchg
cmpsb
in
adc
mov
inc
test
scas
jl
into
or
repnz
inc
pop
push
push
push
out
ret
xchg
inc
mov
stos
or
leave
out
dec
inc
mov
out
mov
adc
arpl
les
pop
enter
pop
pop
andl
or
cmp
push
inc
adc
jl
push
sub
mov
lea
cmp
inc
mov
pop
repz
push
outsb
or
and
movsl
stos
rclb
dec
leave
adc
in
mov
cmpsl
loopne
adc
orb
ljmp
xchg
cmp
fldenvs
sbb
adc
stos
add
or
cwtl
sbb
inc
insb
push
inc
add
daa
fimull
sub
mov
pop
mov
pop
adc
repnz
test
dec
push
jbe
mov
loopne
cmpsl
outsb
ret
jge
addr16
mov
sbb
adc
mov
xchg
test
inc
sub
xor
xchg
insb
cmpl
cmpsb
insb
jg
sbb
cmc
movsb
test
and
sti
inc
pop
add
in
loop
cltd
int3
xor
sbb
sub
pop
sbb
xchg
fwait
daa
push
or
mov
cltd
mov
cmp
mov
ficomps
outsl
fiaddl
lret
pop
orl
je
int3
sbb
or
fisttps
push
out
push
loopne
xor
inc
jne
jo
jnp
jbe
movsl
idiv
adc
push
xor
push
leave
das
inc
imul
lea
xchg
dec
jle
test
jae
imul
jle
gs
mov
imul
or
add
ljmp
sub
cmpsb
jo
pop
xchg
in
sbbl
add
test
push
clc
mov
jo
mov
rcrl
gs
jecxz
scas
sub
out
testl
in
or
dec
rclb
nop
sub
test
sbb
pop
cmp
xor
xchg
mov
jo
inc
aad
mov
jp
adc
out
shl
popf
dec
mov
adc
adc
ret
mov
hlt
adc
push
mov
dec
pusha
ljmp
mov
rcl
cltd
inc
fdivs
cmp
push
orb
lds
hlt
ret
cmpsl
xor
idiv
movsb
mov
mov
lret
inc
sub
adc
mov
push
scas
pop
arpl
mov
and
mov
xchg
sub
sub
out
loop
shrb
adc
pop
inc
push
gs
mov
decb
sarb
push
add
sub
push
fcompl
mov
out
mov
add
in
lods
fstl
mov
cmp
or
pop
inc
mov
xchg
or
mov
or
mov
outsl
or
inc
dec
dec
addr16
mov
test
add
mov
into
adc
dec
or
pop
std
push
mull
call
mov
sub
shld
popf
sbb
cld
gs
pusha
fwait
movsb
jl
nop
test
xchg
mov
mov
jp
sbb
imul
add
sbbb
lods
testb
movsl
sub
lds
sub
or
push
xor
enter
jl
aad
in
mov
pop
jno
in
cmp
jae
dec
cmpsl
xchg
les
push
fwait
dec
imul
xchg
dec
inc
cltd
mov
inc
dec
fmul
clc
sbb
dec
iret
loop
sbb
fmul
mov
mov
inc
cs
out
dec
shlb
arpl
sarl
xor
ljmp
adc
test
and
fidivl
sahf
testb
inc
cmpsb
orb
repnz
push
adc
pop
sarl
jno
pop
add
fiadds
mov
cmp
pop
ret
cli
sub
lock
xchg
outsb
ret
inc
test
pop
test
cmp
dec
adc
cmp
and
xchg
mov
aam
or
xchg
add
aam
inc
stos
dec
icebp
add
shrl
clc
mov
lds
lahf
jno
mov
in
stc
scas
shrl
pop
pop
cltd
mov
mov
mov
test
lret
ljmp
jnp
bound
jb
mov
jp
lret
scas
pop
pop
or
clc
mov
arpl
arpl
lahf
scas
dec
stc
test
aas
lahf
pop
out
mov
mov
ret
jb
or
std
out
sbb
inc
mov
mov
cmp
push
imul
inc
jge
mov
imul
xchg
scas
cmp
imulb
dec
add
fsts
mov
inc
decb
jnp
loopne
mov
jl
in
daa
jl
or
ja
pop
push
mov
enter
dec
das
fnstenv
xchg
jle
mov
mov
das
xor
in
aad
mov
sahf
out
nop
shrl
push
std
call
scas
shlb
daa
inc
xor
mov
lret
outsl
dec
bound
stos
mov
pop
std
cmp
push
xchg
loope
stos
movsb
cmp
in
jbe
pop
xchg
inc
jne
sub
ss
or
int
mov
inc
push
pusha
inc
je
xchg
pop
adc
test
ja
shl
sub
test
ja
orl
into
daa
das
out
pop
fidivrl
adc
out
dec
push
cwtl
xor
lods
sbbb
test
or
pusha
jmp
shll
pop
pop
aam
and
mov
cmc
ret
xchg
adc
dec
repz
push
sbb
es
push
lds
inc
add
sarb
test
arpl
mov
sub
and
xor
fld
mov
adc
in
and
mov
mov
scas
jmp
pop
jo
ret
and
loop
fstl
insl
notl
add
push
add
cmp
mov
pop
ja
call
pushf
pop
fisubrl
pop
cmpsb
or
jbe
test
cmp
stos
pushf
cmp
subl
xchg
dec
bound
dec
mov
or
xor
incb
dec
mov
push
inc
loop
jg
jp
sbb
add
andb
js
std
mov
scas
sahf
xor
xlat
test
mov
xor
sbb
pop
bound
add
pop
or
les
cmp
adc
xor
jmp
jecxz
int3
sub
bnd
nop
gs
enter
dec
fidivrl
repnz
pop
popa
xlat
lds
in
and
dec
cltd
popa
loope
out
jg
sbb
pushf
lods
adc
les
scas
mov
inc
mov
negl
rorb
sub
fmulp
rorl
lods
push
inc
fimuls
cmc
jne
sub
sarb
adc
pop
cmp
adc
int
xchg
cmp
shrb
and
push
jge
int
mov
daa
sub
ficompl
pusha
inc
xlat
out
mov
lds
xor
lret
cli
test
outsb
mov
push
mov
or
jne
mov
test
xorb
mov
movsl
std
xchg
repz
adc
pop
divl
out
imul
mov
mov
and
movsl
loop
cmp
imul
adc
daa
imul
sbb
mov
adc
dec
in
jno
stos
in
sbb
daa
ret
jnp
ja
adc
xchg
push
pop
popw
lea
movsl
pop
scas
pop
jbe
sbbb
xchg
mov
lea
push
sub
rclb
fcoms
xor
pop
bound
int3
mov
fwait
xor
cld
and
popa
sub
add
js
adc
shlb
or
jbe
or
xlat
push
mov
mov
sbb
jnp
mov
xlat
fs
jnp
in
sub
mov
and
or
xor
push
jne
inc
jne
jbe
push
mov
push
imul
lahf
scas
xor
jnp
mov
js
jne
test
mov
mov
push
stc
sahf
cmc
inc
jl
fwait
mov
push
std
dec
cmp
push
pextrw
sub
popl
adc
into
jo
adc
es
mov
enter
xchg
inc
lods
jle
rorl
insb
rcr
pop
or
cltd
push
inc
push
nop
dec
inc
fwait
aaa
lret
and
mov
pop
fidivl
xchg
adc
incb
cltd
lret
sahf
nop
stc
pop
lods
call
xchg
mov
inc
xchg
xchg
cwtl
cli
cmc
notb
out
ja
aaa
stos
pop
push
lcall
fstps
mov
movsl
mov
sub
adc
cli
fcoms
movsl
jns
and
dec
jmp
inc
das
aam
test
mov
or
movsb
ja
rorb
out
dec
pop
insl
inc
mov
mov
jp
and
mov
push
xchg
sub
cmpsl
pushl
cmp
rcll
dec
xchg
ss
xchg
sbb
sub
js
and
jecxz
add
imul
jle
and
shrl
mov
jmp
adc
mov
mov
stos
xchg
or
repz
ljmp
rorb
mov
fwait
stos
test
sbb
cli
and
int
dec
jne
jl
addr16
inc
sbb
or
std
mov
pop
pop
pop
ret
and
sub
mov
pop
xor
jne
imul
jno
pop
call
aaa
dec
add
in
sbb
xor
sbb
cmp
loop
stc
call
in
mov
mov
dec
rclb
lea
dec
mov
jg
mov
cwtl
jbe
xchg
dec
enter
mov
arpl
lret
xchg
push
rolb
sbb
push
icebp
push
mov
nop
aaa
stos
test
jno
lahf
xchg
fs
push
pop
cli
rcr
bound
gs
mov
mov
das
cmpsb
xorl
loopne
push
jns
mov
ss
xchg
enter
push
pushf
dec
in
jbe
lahf
mov
sub
cmpl
mov
push
push
insl
xchg
rorb
insb
mov
xor
sbb
loopne
cmp
std
pusha
push
add
pop
lods
and
cmp
fndisi(8087
cmp
xchg
dec
push
test
mov
sub
aad
mov
rorl
pop
stos
arpl
or
or
add
pop
dec
jae
iret
leave
test
jecxz
dec
std
loope
rcrb
or
arpl
xor
lea
movsb
lock
lea
cmp
lds
pop
jbe
xor
cmp
sub
fcompl
aas
cmp
mov
scas
add
pop
test
mov
mov
inc
sbb
ss
sbb
add
jnp
insb
sub
push
pop
inc
xlat
mov
push
or
test
mov
je
cmp
add
jp
mov
jge
nop
xor
dec
jns
jnp
jae
or
cld
addr16
adc
fidivrs
mov
out
out
sub
test
stc
clc
add
nop
fcomps
fadds
cmp
loope
fildll
enter
or
outsl
mov
lds
mov
or
lods
call
inc
mov
sbb
mov
mov
inc
and
sbb
jno
mov
nop
int
pop
fdivp
pop
ret
jl
in
sub
lret
mov
imul
add
cmp
sti
addr16
imulb
je
sub
jge
test
mov
movsl
jns
arpl
mov
mov
stos
es
mov
jecxz
pop
add
mov
test
cld
imul
jle
push
sbb
sub
dec
mov
adc
and
in
cmpsb
sub
adc
movsb
inc
out
popa
jnp
loopne
xacquire
mov
cli
test
dec
out
ds
jl
call
mov
dec
xchg
nop
push
mov
adc
stos
or
repnz
stos
and
mov
outsl
mov
push
cmp
popf
ret
jae
dec
mov
add
inc
jae
iret
fwait
add
pop
mov
adc
and
sbb
jns
test
xchg
mov
mov
cmc
and
mov
ljmp
aad
ljmp
jp
and
xchg
lock
inc
hlt
xorb
les
dec
add
sbb
jbe
sarl
jle
push
mov
push
scas
flds
lods
push
push
or
push
mov
xchg
cmp
push
stos
add
subb
xchg
lahf
or
fnsave
xchg
sbb
mov
shlb
cmp
xlat
loope
stos
data16
fidivl
shrl
int
xchg
mov
aad
pop
cli
or
xchg
xor
inc
out
sbb
add
pusha
pusha
iret
iret
add
mov
in
loop
cmp
mov
mov
aas
push
jmp
fdivr
lds
dec
pop
cwtl
xchg
pop
jae
into
pushf
lea
push
lret
notl
gs
push
lahf
outsl
inc
inc
daa
mov
jecxz
fstpl
and
and
mov
mov
mov
mov
push
insb
ljmp
pop
inc
jae
outsl
rcll
pusha
or
sub
out
roll
cmp
loopne
fdivl
je
mov
inc
das
mov
lds
lret
mov
rcrb
or
testb
cmp
gs
xor
and
lods
pop
roll
ror
mov
inc
scas
inc
outsb
mov
inc
cmp
cmc
in
sbb
cmp
cmpsb
xor
jnp
jl
movsb
xor
loopne
jb
inc
sub
mov
adc
jno
test
fsubrl
aas
mov
mov
lds
lea
repnz
imul
mov
cmp
jl
fcompl
les
dec
and
and
fsubr
jp
rcl
xor
data16
lcall
pop
inc
sbb
jae
mov
or
loope
push
outsl
or
sar
or
xor
jp
push
mov
lea
mov
cmp
ljmp
push
pop
popa
shl
push
xchg
lahf
dec
aad
ret
mov
cwtl
std
ss
cmp
cvtps2pi
cli
xor
icebp
dec
gs
push
mov
xor
lock
jg
movsl
lods
mov
sbb
pushf
outsl
jo
dec
mov
mov
aaa
dec
nop
pop
out
lret
inc
fstpl
push
xchg
sub
xor
fidivs
sbbb
loop
in
les
gs
addr16
outsb
leave
and
and
xor
rcrb
ss
leave
jmp
outsb
mov
out
jmp
imul
int
lahf
sbb
mov
mov
das
inc
lret
pop
idivb
int3
addr16
xabort
jg
sub
add
dec
push
sbb
in
fnsave
cmpsb
bsf
jne
jp
outsl
cmp
pop
loope
xchg
mov
jnp
rol
xchg
sbb
mov
pmaddwd
gs
push
stc
push
dec
into
jmp
mov
loopne
jmp
iret
cmp
out
sbb
std
dec
sti
xchg
mov
dec
les
mov
dec
jl
lods
sub
inc
push
add
mov
insl
aam
xor
push
pushf
sbb
je
mov
sahf
dec
into
mov
add
xor
sbb
mov
inc
icebp
sub
xsaveopt
rorb
cmp
jg
xorl
sahf
cli
push
mov
sbb
or
mov
addl
fwait
in
pusha
jno
sbb
hlt
or
and
cld
test
insb
pop
icebp
mov
mov
xchg
push
or
mov
int
fldt
xlat
mov
cmp
mov
sub
ret
and
lods
adc
cmc
test
xor
ss
cmp
ror
or
in
sbb
or
sub
in
movsb
or
mov
lahf
clc
sbb
js
sar
xchg
fnstenv
mov
add
mov
adcl
cmp
cmc
mov
out
rcl
pop
fstps
jnp
mov
movsl
push
stc
push
aas
scas
test
fmull
loopne
ljmp
push
int3
adc
xor
sub
mov
test
cld
je
add
loop
and
push
movsl
sbb
scas
mov
xchg
mov
mov
mov
lods
test
setns
xor
jle
cwtl
adc
scas
jmp
lcall
jmp
cmpsl
adc
push
dec
ja
leave
inc
rorl
jecxz
lret
imul
jae
push
xlat
mov
es
jnp
les
lret
imul
int3
out
inc
mov
in
push
scas
scas
mov
push
inc
lea
push
add
xlat
push
testl
cmpsb
pop
bound
mov
pop
data16
cld
mov
clc
cmp
push
and
pop
sub
adc
xor
rorb
dec
mov
cmpsb
xor
adc
aad
mov
pop
and
push
jnp
aad
pop
jge
hlt
dec
mov
fisubs
or
dec
inc
mov
cmp
push
inc
jg
xor
incl
arpl
sub
idivb
lahf
hlt
fcmovnb
fs
mov
pusha
adc
adc
loopne
xor
add
and
mov
xchg
fdiv
push
dec
loopne
dec
aam
into
lds
xor
sbb
push
sub
pop
cld
fcoms
fimuls
adc
push
je
push
andb
jbe
test
cmc
mov
andb
ret
sarb
lcallw
js
push
mov
add
fwait
push
dec
add
fs
icebp
out
pop
imul
xchg
test
fbld
adc
mov
sub
and
jp
cmp
mov
push
mov
adc
mov
insb
jle
int
loop
jnp
fcmovu
push
inc
adc
or
mov
bound
push
mov
daa
fldl
sub
repz
add
inc
mov
mov
pop
je
nop
xorl
dec
aas
popa
dec
pop
push
push
xor
mov
xor
into
push
fcoml
dec
mov
sarb
cmc
in
and
stc
inc
cs
out
adc
iret
jae
push
mov
clc
test
jno
cmp
cli
mov
xchg
cmp
xor
aam
jbe
or
je
cli
xchg
xor
push
push
sahf
cmp
sbb
cmpsl
and
adc
in
cmc
xlat
xor
shrl
fwait
ret
rcl
xor
push
dec
iret
xchg
arpl
xor
and
push
shll
jmp
and
and
test
jge
aam
jl
or
jmp
jb,pn
pusha
iret
jae
push
hlt
cmpsl
push
mov
inc
dec
testl
shrb
and
or
dec
cmpl
add
in
xor
stos
mov
push
adc
loop
adc
push
fldenv
mov
mov
ret
cmp
jb
mov
daa
sti
in
adc
or
cld
push
decl
leave
xor
pop
push
lcall
jmp
push
inc
mov
xor
jmp
cmp
sbb
pop
inc
fistpl
xor
add
test
xorb
in
pop
out
mov
pop
xchg
jmp
ret
mov
repnz
ja
xchg
mov
cmpl
lea
mov
jo
inc
mov
mov
scas
fsubl
imul
or
popa
popf
into
push
mov
jl
adc
les
insb
inc
scas
mov
cld
dec
dec
mov
xor
push
add
xor
add
pop
mov
push
lods
xchg
lahf
inc
push
mov
jl
sbb
test
fildll
movsl
xchg
cmp
je
mov
and
test
xor
hlt
sbb
sub
ljmp
push
js
cs
subl
pushf
mov
inc
fsubr
or
lahf
push
push
jo
pop
adc
aam
fbld
out
xchg
pushf
xor
icebp
hlt
mov
cltd
outsl
loope
shlb
pushf
out
xchg
cmp
and
or
pop
test
jno
shll
sbb
mov
lret
inc
jmp
sbb
ds
enter
jno
stos
shrb
aaa
lock
add
out
enter
xor
pop
scas
xchg
mov
jle
push
cmp
cmp
push
and
stc
inc
test
mov
adc
xlat
pop
dec
jns
js
cmp
xor
xor
mov
repnz
sub
sub
pop
das
repz
cmp
push
aad
loopne
jp
js
imul
jle
mov
int3
xor
mov
and
xor
bound
xor
inc
jge
shrb
pushf
lahf
int
xor
sti
cmp
addr16
das
pushf
cwtl
mov
mov
xchg
js
dec
sub
cmpsl
pop
shl
xchg
scas
lock
test
loopne
inc
pusha
xchg
add
loop
out
aad
addr16
inc
nop
mov
testl
icebp
inc
sbb
cmp
jo
xchg
movsb
fidivrl
mov
sub
pop
mov
insb
rorl
push
mov
jle
call
fadds
dec
adc
sahf
pushf
sub
daa
jbe
lods
sbb
ficoml
cmp
test
lods
das
xor
adc
inc
sbb
outsl
mov
push
mov
inc
pop
div
ret
ja
sub
ficomps
mov
aaa
ds
cmp
mov
xor
aas
jno
adc
loopne
rclb
daa
add
lods
daa
cmp
mov
lcall
jne
jg
pop
loopne
mov
pop
sub
in
lds
mov
and
or
and
pop
movsb
adc
outsl
add
or
push
jecxz
shll
pusha
cs
pop
adc
int
fwait
jbe
and
lea
arpl
inc
and
loopne
pop
iret
xchg
stos
sbb
mov
dec
ret
outsl
xor
jge
dec
test
push
inc
iret
sarb
pop
ret
idivl
inc
shl
out
repz
sbb
nop
or
data16
out
je
inc
jmp
insb
ret
jnp
mov
lock
cmpsl
jbe
fidivs
inc
jae
popa
mov
arpl
mov
lea
mov
or
test
sbb
sbb
mov
filds
and
pop
pushf
or
jne
scas
ja
imul
mov
add
xor
int
outsl
mov
sub
mov
xor
adc
mov
outsb
cmpsl
sub
pop
jnp
sub
into
ret
das
sub
inc
pop
xchg
hlt
xchg
sub
cwtl
jp
pop
pop
lret
pop
mov
test
mov
or
mov
adc
push
outsl
clc
mov
sbb
cmpsb
sbb
test
pop
cmp
test
dec
ret
out
adc
mov
mov
dec
les
fdiv
or
cmc
sbb
repz
pop
dec
ja
ljmp
mov
jecxz
jp
out
adc
pop
bound
push
sbb
mov
push
imul
sbb
jecxz
mov
int
call
ret
addb
cmp
popa
lea
pop
xchg
subl
push
mov
rcll
std
popf
cltd
cmp
stos
xchg
fs
roll
cwtl
push
jmp
adc
xchg
mov
pop
mov
dec
jns,pn
xor
ljmp
frstor
enter
punpckldq
and
aam
mov
mov
subl
fisttpl
arpl
mov
insl
outsl
pop
fwait
xor
xlat
sbb
mov
sbb
mov
jecxz
and
int3
es
xor
imul
shr
pushf
lock
pop
fildl
ret
in
dec
rcrl
mov
pop
push
gs
cmpsl
add
pop
js
jl
push
xchg
mov
mov
mov
and
cmp
mov
xchg
test
es
repz
sbb
xor
in
jge
dec
leave
mov
inc
pmulhuw
mov
push
push
jns
mov
fnsave
mov
mov
imul
call
dec
pmullw
addr16
push
cmp
es
lock
fidivs
push
xchg
mov
adc
push
leave
cmp
cli
filds
fists
pop
lret
cmp
push
sbb
hlt
fimull
je
inc
mov
and
sbbl
sbb
sbbl
scas
push
or
lock
xor
or
test
pop
data16
xchg
imull
fidivrl
pop
and
stos
dec
adc
add
repnz
loop
andb
in
adc
adc
xchg
aaa
or
leave
ljmp
mov
lock
icebp
in
aad
lds
lret
cld
leave
sbb
in
ret
xor
data16
loop
jle
stos
push
gs
cmp
in
adc
xlat
mov
stc
fnstenvs
xlat
sub
fmull
pop
iret
clc
popf
push
sti
imul
imul
or
mov
arpl
add
dec
cmp
dec
cmp
adc
sbb
sub
xor
repnz
lret
shrb
dec
fnsave
pop
jecxz
std
or
dec
dec
in
mulb
sbb
insb
cmpsl
ljmp
pop
push
add
rcr
jge
mov
mov
out
mov
dec
xchg
bound
push
push
clc
stos
pop
fbstp
add
jmp
xchg
test
jle
mov
lret
or
pop
cmp
cmp
add
jge
jmp
loopne
cmp
mov
xchg
jbe
loope
xor
pop
push
mov
mov
jge
mov
sub
inc
mov
jne
sub
dec
mov
sub
sbb
cmpsw
mov
lock
dec
repnz
adcl
shll
jns
ja
aas
aas
push
mov
mov
insl
pop
iret
scas
push
xchg
ret
pop
xchg
inc
outsb
ds
inc
xorb
pusha
mov
adc
mov
push
lret
push
dec
xlat
popf
loopne
inc
aas
or
pushf
aam
jmp
ss
or
mov
insb
aas
cmc
and
mov
mov
into
mov
out
call
push
js
jl
sbb
sub
mov
in
enter
xor
shll
iret
out
inc
dec
cmpsl
mov
fdivl
in
dec
jge
in
rol
push
pop
fs
sarl
xor
aad
test
push
lock
test
lds
cs
xorb
in
loope
das
push
xchg
call
add
shll
arpl
mov
mov
inc
mov
addr16
adc
ss
movsl
clc
fsubs
lock
stos
sbbb
insl
sub
out
test
dec
and
out
inc
insb
and
insb
adc
mov
lahf
pop
clc
cltd
mov
fistpl
nop
int
cmp
out
rcl
popa
inc
les
outsl
cmpsb
loope
xchg
pxor
icebp
jb
pop
cmp
jmp
les
int3
mov
adc
lret
xchg
inc
inc
mov
cmpsb
dec
out
push
xchg
xchg
rcrl
push
shrb
adc
iret
stos
sub
jge
into
stos
fistl
mov
movsb
jno
xchg
aaa
push
aaa
fmul
mov
cmp
into
mov
shlb
xor
leave
gs
inc
fs
cmp
pop
mov
clc
lods
bndldx
cmp
jbe
add
lds
popa
gs
cmp
sbb
mov
call
adc
push
int3
adc
and
jns
out
fisubrl
lods
stos
xlat
pop
js
cld
cli
ror
cmp
cwtl
ret
jmp
movsb
movsb
mov
cld
sti
out
lods
cmp
cmp
xor
cmc
adc
mov
cs
fbstp
pop
add
aad
and
pop
fildl
mov
ljmp
lea
mov
push
out
scas
jbe
cmpsl
xchg
mov
bound
fstp
xchg
jae
test
mov
and
insl
dec
jg
aaa
data16
cmp
dec
xor
add
cmpsl
mov
xor
scas
sbb
dec
jmp
mov
cmp
dec
lcall
pop
mov
dec
jae
out
mov
cmp
divl
dec
mov
cld
outsb
xor
outsb
movsb
jo
jae
push
sub
out
push
sti
adc
xor
fcmovb
test
dec
out
jns
data16
inc
repz
jle
xor
pushf
add
test
stos
pop
mov
add
fidivs
sbb
cld
adc
aad
out
xor
adc
cmp
inc
jl
in
sarb
adc
sbb
loope
xchg
movsb
popw
xchg
mov
decb
add
shll
pushf
pop
mov
shlb
pop
sbb
outsl
inc
jbe
add
add
mov
test
xchg
mov
push
jns
push
or
lea
clc
inc
push
addr16
cmp
sbb
dec
dec
mov
sbb
or
pop
fmuls
inc
int
push
mov
jns
movsb
ret
pop
or
lahf
ret
adc
addr16
xchg
mov
and
or
rclb
rorl
pop
in
mov
xchg
mov
das
pop
mov
sub
sahf
adc
pusha
in
cli
and
xchg
jns
pushl
or
jo
inc
out
push
push
push
or
inc
aad
das
dec
fldl
push
jns
fadds
xor
inc
cmp
cwtl
out
jp
jae
shll
inc
lcall
shll
add
sub
rolb
pop
in
sahf
or
sbb
aas
push
dec
pop
pop
xchg
pop
xchg
mov
adc
and
out
xor
xor
aam
xbegin
int
pop
cwtl
inc
dec
testb
lahf
repz
rcrl
or
daa
mov
xor
mov
xor
lods
cmp
adc
mov
dec
inc
fwait
pop
dec
fs
fwait
or
jns
rclb
push
pop
in
xchg
out
dec
mov
imul
out
cmpsl
push
mov
push
sbbb
mov
dec
and
mov
pop
cli
stos
adc
xchg
jae
cli
js
push
gs
ds
jmp
pushf
pop
push
sbbl
lret
inc
cmpsb
cmp
and
mov
ret
aad
outsb
xchg
mov
orl
cmc
inc
loop
sub
adc
mov
inc
mov
pop
jl
shl
shlb
sbbb
out
jb
xchg
fcomps
xchg
cwtl
push
add
sti
dec
xlat
std
xchg
scas
iret
out
lret
popf
mov
lea
and
cmp
xor
imul
cld
add
shl
mov
popf
xor
and
in
in
or
jecxz
lds
sub
pop
jbe
pop
xchg
push
push
jae
inc
lea
push
mov
adc
sbbl
or
lds
jnp
sub
pop
push
adc
adc
aaa
imul
and
mov
dec
xchg
dec
les
jbe
mov
addr16
roll
xorl
lret
movsb
aad
repz
cmp
ret
popa
add
cmpsl
push
adc
sub
push
inc
cld
divl
movl
mov
loop
or
add
mov
pop
scas
fcom
add
sbb
push
icebp
negb
pop
cmpsl
movsl
mov
scas
pop
lock
aas
jp
jmp
jns
jmp
sti
shlb
cmpsb
sahf
xchg
mov
movsb
daa
out
outsl
push
addl
shlb
add
leave
xchg
cmp
shll
lods
inc
pop
fildll
out
pop
cltd
push
inc
xchg
cmp
hlt
and
enter
sbb
ret
hlt
xchg
and
out
jns
mov
push
add
out
push
pop
mov
std
xor
push
sbb
pop
fisubl
sub
lods
popf
icebp
lea
cmp
adc
xchg
mov
sbb
mov
mov
pop
out
adc
test
push
int3
xchg
mov
add
xchg
push
inc
fimuls
ret
pop
movsl
ret
inc
jno
mov
je
shlb
scas
sub
inc
cmp
mov
enter
shrb
dec
adc
hlt
repz
stos
int3
sbb
xor
sub
sub
ss
fldcw
aam
loopnew
lahf
stos
fwait
int
test
imul
sbb
xchg
ret
in
xchg
rcll
outsl
add
cmpsl
lods
js
dec
mov
adc
or
xor
pop
jb
shr
mov
cmc
fidivrl
movl
cltd
aas
lods
pop
dec
xchg
xor
mov
xor
and
adc
xchg
adc
and
pop
jo
xchg
sbb
scas
call
jge
push
sub
mov
sub
js
pop
mov
jmp
mov
jle
push
mov
mov
or
xchg
dec
cwtl
push
fldcw
lcall
js
imul
jb
xchg
adc
loop
jbe
xor
sub
insb
dec
or
jnp
cli
pop
mov
mov
ja
pop
pop
andl
movsl
pmaxsw
push
cmp
fscale
lret
push
jb
sub
jb
dec
and
insl
daa
or
call
ret
imul
mov
cmc
popf
xlat
cltd
nop
and
or
sub
int
mov
mov
clc
fidivrs
pop
cli
idivb
or
mov
adc
mov
push
in
mov
inc
sbb
push
roll
sbb
lret
clc
and
in
aas
add
sub
daa
cmpsb
dec
push
fldl
dec
pop
xchg
xor
cmp
popf
mov
push
xor
hlt
sbb
in
shrl
dec
out
jle
mov
lret
test
mov
call
dec
fcmovnb
out
xor
mov
push
inc
mov
loope
mov
adc
cmp
clc
dec
jo
push
xor
mov
and
lods
lret
cmp
adc
insb
sbb
cs
jns
adc
punpckhbw
mov
add
mov
out
or
xor
adc
xor
test
mull
sbb
lcall
shll
mov
push
in
mov
or
jne
mov
insl
xchg
adc
cltd
popf
sarl
test
cmpsb
imul
mov
mov
inc
xchg
mov
lcall
or
add
scas
ja
mov
pop
xchg
mov
rorl
jl
sarb
pop
xor
xchg
jecxz
cmp
lea
data16
in
and
stos
shl
fisttpl
and
inc
sbb
and
sub
or
out
mov
mov
sbb
stos
jne
xchg
xchg
test
push
nop
inc
lds
push
arpl
arpl
lret
enter
mov
fnstsw
jbe
mov
adc
lods
jge
lcall
into
mov
int
int3
and
add
hlt
rcrb
and
cmp
mov
pop
insb
cmp
lods
pop
or
out
testl
jg
add
outsl
fldcw
pop
mov
sbb
or
shrb
add
popf
popa
push
mov
mov
sar
adc
std
bound
clc
or
in
jmp
hlt
push
in
leave
sub
loope
pop
adc
cmp
dec
enter
xor
addr16
xor
loopne
cmp
pop
test
loopne
push
movsl
inc
and
lea
movb
xor
mov
mov
dec
add
or
jae
ljmp
mov
call
jmp
mov
daa
outsl
cli
in
icebp
nop
loop
sub
push
test
mov
dec
adc
inc
mov
jnp
mul
mov
pop
and
jp
mov
inc
sahf
sub
dec
push
pop
mov
inc
dec
jmp
add
subb
gs
pop
rcr
test
push
inc
mov
cli
mov
sbb
pop
lahf
ljmp
in
xlat
jecxz
xor
out
pushl
movsb
popa
xchg
outsl
mov
out
jl
jp
loope
mov
jg
sub
arpl
mov
jge
in
movsl
mov
ljmp
add
loop
les
outsb
mov
fcomps
ret
sbb
jno
lds
jae
test
dec
or
out
push
mov
dec
and
jmp
loope
jle
int3
pop
add
pop
lret
xchg
int
fs
xor
shl
xchg
notb
cld
andb
ret
test
mov
imul
adc
mov
test
iret
inc
inc
pop
sub
jge
ficomps
push
mov
mov
imul
and
jne
out
loope
loop
ja
jae
leave
les
add
call
daa
sbb
pop
lret
lret
insl
jb
cmc
loop
cmp
lret
test
into
in
ror
jge
jnp
xchg
mov
jae
lret
pop
scas
addl
sahf
dec
ficoms
ds
stos
rclb
arpl
lret
sbb
repnz
je
or
out
pop
call
lock
je
ljmp
jo
ret
mov
xor
jmp
movsb
into
adc
push
jp
mov
ds
pop
mov
out
cmpsl
or
xlat
clc
inc
and
mov
lock
add
mov
push
movsb
fidivrs
and
xchg
push
inc
jo
add
mov
xor
cwtl
scas
pop
pop
jecxz
jecxz
pop
loopne
pop
cmp
xchg
push
xor
fnstsw
adc
cmp
leave
xchg
loop
pop
sub
into
imulb
adc
inc
jnp
lods
jecxz
jns
pushf
daa
es
mov
stos
jae
pusha
lods
insl
hlt
jbe
mov
xor
ja
test
ret
mov
mov
and
or
xlat
push
aad
jbe
adc
dec
xorl
cmc
ljmp
ficomps
imul
rep
sti
inc
pop
sbb
xchg
in
lods
dec
loopne
in
fucomi
or
pop
lcall
mov
rcll
dec
notl
cltd
jl
jb
xchg
sub
leave
rcl
mov
mov
jno
jge
pop
push
cwtl
jecxz
fwait
sbb
fwait
mov
cmp
outsl
iret
pop
dec
pop
roll
pop
mov
pop
aam
dec
stc
test
ret
cltd
xchg
cmp
push
in
jp
pop
lods
inc
jmp
ds
imul
inc
push
sahf
iret
stc
sbb
adc
shll
int3
insb
test
mov
add
jo
dec
jge
cmp
lea
and
push
jmp
inc
dec
jp
mov
out
pop
ja
jne
fisubl
mov
pop
dec
jl
lret
xchg
jns
iret
jne
push
jp
lret
sub
or
outsb
xor
pop
pop
loope
into
leave
and
sbb
inc
test
mov
out
dec
add
repz
jle
enter
lods
cmpb
addl
das
mov
fadds
out
adc
shl
mov
std
sbb
adc
and
sti
add
xchg
and
cmove
dec
testb
leave
adc
pop
sub
add
pop
fadds
mov
js
sub
sub
xor
cmp
inc
mov
mov
test
test
adc
ja
insl
fistps
cmpsl
pusha
gs
mov
dec
jecxz
lods
jno
test
dec
mov
stos
loop
enter
cmp
dec
ds
inc
lahf
xor
popf
aaa
sar
iret
mov
push
int3
sbb
mov
fwait
into
movsl
loope
test
sbb
repnz
jb
rol
adc
shlb
fs
and
jg
dec
not
add
mov
and
lahf
xchg
cli
aam
ret
cmp
out
push
push
js
lea
pop
lahf
imul
jge
xchg
adc
cmp
into
jge
push
sub
lods
andb
pop
dec
ret
sub
push
inc
add
push
or
xchg
cmp
outsb
int3
std
mov
shr
lret
test
out
ret
ljmp
dec
cmpsl
push
fbld
daa
xchg
insl
enter
mov
test
mov
in
mov
cld
mov
or
clc
imul
pop
fwait
or
roll
pop
pop
xchg
sub
test
xchg
outsl
fsubrl
sub
pusha
adc
dec
mov
fwait
sub
dec
mov
jmp
xchg
fmull
sbb
mov
int
je
jne
xchg
mov
std
faddl
jecxz
dec
fildl
pusha
push
push
decl
sbb
adc
mov
push
int3
imul
daa
xor
inc
sub
mov
jmp
jb
pop
sub
lods
test
call
cld
lret
jg
cli
hlt
sti
ja
cmpsl
mov
and
sub
inc
andw
mov
push
dec
aaa
stc
int
cld
dec
fdivs
cmp
mov
cmp
mov
pop
cmp
jge
xchg
jl
mov
add
movsb
xchg
aad
lds
int3
adc
cld
xchg
adc
outsl
outsl
lea
cmp
cld
ljmp
inc
sti
push
sub
mov
fists
jb
mov
es
ret
sarb
ret
in
mov
aas
mov
mov
pop
daa
push
fimuls
movzwl
in
in
imul
jno
dec
mov
mov
pushf
jmp
movsb
cmp
push
push
cmpsl
clc
fdivp
sub
adc
rcrl
dec
ret
pop
aad
andl
lret
pusha
loope
add
les
ljmp
or
xchg
es
add
lcall
mov
sbb
mov
dec
in
mov
pop
mov
jno
cmpsl
es
lea
mov
loope
push
sbb
pop
pusha
lods
mov
rolb
jmp
addr16
cmp
ss
inc
mov
lods
mov
jb
aaa
mov
mov
ret
std
jge,pt
push
loope
sub
movsb
popw
add
xchg
hlt
out
add
inc
push
call
int
push
jle
jl
mov
or
stc
jg
dec
sub
ficompl
bound
inc
repz
pop
xorl
push
aas
ljmp
and
stos
cld
ret
push
xlat
leave
gs
or
jmp
scas
js
popa
orps
jg
add
ror
add
inc
xor
stc
sbb
push
add
out
jne
mov
into
test
inc
inc
pop
loope
adc
mov
imul
add
cmp
cmp
jg
mov
adc
imul
mov
js
enter
loope
dec
inc
push
jno
xor
jecxz
sbb
cmp
xchg
sbb
nop
add
lea
lds
push
aad
loop
icebp
enter
movsb
adc
imul
add
pop
insl
dec
cmc
mov
xorb
lods
shlb
jecxz
dec
mov
sahf
or
sbbb
jmp
sub
xchg
or
push
xchg
push
jg
es
pop
fs
add
jb
mov
popa
sbb
inc
and
mov
in
or
lea
xor
in
push
jp
lock
or
in
pop
int3
loop
mov
in
add
and
in
movsl
push
dec
cmp
push
cmp
out
add
or
xor
mov
imul
mov
sub
repnz
mov
shrl
out
test
pop
mov
cwtl
outsl
jmp
pop
sti
test
fbld
repnz
push
mov
mov
dec
subb
mov
inc
xchg
stc
adc
sbb
lahf
aad
aaa
ja
movsl
or
daa
dec
repz
mov
test
cs
dec
push
mov
negl
ja
iret
pop
rcr
xor
push
sbb
add
mov
lock
mov
adc
ds
xor
outsl
in
cli
jns
ret
fdivrl
pushf
and
adc
fists
arpl
inc
cmpl
mov
jb
js
lret
mov
mov
add
je
rcr
adc
push
push
cmp
jmp
sarb
aam
add
or
fadds
or
push
dec
std
aad
testl
nop
rcll
imul
fldenv
mov
jbe
addb
and
movsb
push
out
mov
stos
sbb
out
popa
inc
mov
arpl
inc
scas
dec
lcall
into
add
xchg
mov
sub
stos
imul
call
inc
in
loopne
mov
fsubrs
mov
mov
hlt
lock
mov
stos
lea
xor
jecxz
fisubs
adc
les
scas
rclb
popf
jo
jns
addr16
loop
mov
insl
sub
in
fnstcw
sbb
sbb
xor
fdivs
sbb
ljmp
jp
in
out
cmp
jae
dec
push
sub
stc
xchg
test
xchg
scas
cltd
aaa
aad
in
or
je
addr16
sub
ja
loope
push
sub
dec
add
xchg
sub
jg
mov
popa
pop
jb
mov
pop
ret
jae
push
pop
pop
imul
or
je
decb
repz
aad
jo
dec
in
jmp
stos
mov
xchg
cmp
hlt
pop
or
mov
jmp
repz
test
addr16
xorb
jmp
sub
xchg
out
ret
inc
mov
sti
push
mov
add
xchg
lock
out
mov
and
lcall
sti
pusha
das
iret
cvtps2pi
adc
xlat
sbb
dec
and
or
sub
xor
cwtl
inc
stc
sbb
jns
in
pop
inc
call
neg
lock
addr16
push
aad
cmp
nop
pop
bound
push
fucomi
pop
sti
lahf
jae
push
sbb
and
call
out
mov
or
jnp
lods
push
cwtl
sub
fsubr
pop
sub
dec
lods
outsb
fnstcw
add
push
mov
xor
push
outsl
mov
adc
lock
lret
mov
mov
lock
inc
aad
dec
test
inc
sti
fwait
xor
in
xor
outsl
rcl
sub
popf
mov
sbb
push
aam
int
push
insb
sarl
and
cmp
lea
out
loopne
jb
int3
sahf
subl
push
pop
aad
xlat
ret
roll
rol
aad
or
inc
dec
add
mov
jle
in
stos
cmp
out
jecxz
cmpsb
cmpsb
fldenv
xchg
mov
icebp
jge
xor
push
push
leave
inc
scas
pop
ficoml
add
iret
lea
adc
mov
jecxz
cmp
or
aas
mov
cld
and
in
sbb
jo
mul
out
pop
pushf
push
sbb
cmp
ljmp
arpl
mov
inc
les
xor
in
sbb
inc
mov
jecxz
jbe
pushf
cmp
push
sub
push
mov
fsubl
cmp
cmp
sahf
mov
sbb
imul
fdivr
push
pop
js
mov
cwtl
into
pushf
aam
sub
mov
push
nop
rclb
shlb
pop
shr
push
mov
jb
xchg
jecxz
cmpsl
fs
cmpl
add
insb
ja
imul
std
mov
cwtl
xchg
xchg
inc
dec
test
cmp
daa
cmp
dec
inc
inc
or
cmc
adc
sti
mov
enter
mov
sub
out
dec
push
test
aad
cmp
jnp
js
insl
jecxz
jge
rorl
adc
pop
xchg
mov
pop
rcll
jb
mov
std
pop
pop
push
mov
push
adc
imul
jae
std
mov
ja
mov
mov
adc
dec
bound
xchg
jmp
stos
xor
push
push
je
jns
pop
test
mov
test
lcall
scas
cwtl
cmp
daa
imul
sbb
jae
mov
fs
xor
xchg
mov
or
ret
dec
xchg
xlat
mov
leave
cmp
dec
mov
mov
mov
and
cmp
cmp
cbtw
adc
and
mov
jnp
xor
cld
add
popl
add
arpl
mov
in
fs
ret
fisttpll
jecxz
sbb
clc
cmpsb
mov
sbb
shll
cli
cmp
mov
ret
mov
jb
jns
rolb
pushf
adc
pop
lds
incl
push
mov
out
add
std
into
mov
fsts
inc
decl
fsubl
xchg
mov
call
leave
xor
lea
cmp
inc
xorl
and
imul
jecxz
out
lock
loopne
lret
inc
lcall
ja
inc
stos
mov
mov
xor
dec
or
jbe
mov
notb
mov
inc
ljmp
push
loop
in
xor
je
dec
sahf
je
adc
xchg
mov
lret
push
subb
mov
loop
lods
mov
jmp
pop
mov
pop
mov
ds
jnp
dec
inc
rcl
xor
and
and
xchg
inc
test
cltd
andb
and
push
adcb
sbb
pushf
test
enter
and
push
push
popf
pop
mov
aam
std
inc
jecxz
sbbl
sete
mov
push
mov
mov
pop
mov
outsl
ljmp
fstl
mov
inc
and
imul
cmp
xor
aad
mov
insb
sbb
push
mov
sbb
test
ds
xchg
test
push
and
inc
mov
cmp
andb
push
ret
mov
lret
or
push
mov
xchg
inc
fsub
adc
xor
fwait
pushf
rorb
into
in
mov
and
rcrb
ret
pop
jne
das
movsb
mov
jb
iret
inc
ret
jge
pop
rcrb
fs
stos
push
xchg
inc
or
dec
lcall
test
lea
outsl
ljmp
push
jo
xor
sub
push
popf
xchg
lods
es
inc
adcl
hlt
push
mov
jge
cmpsl
stc
mov
or
rcrl
cmp
adc
shl
jno
pusha
ret
mov
fcmovnu
mov
lcallw
push
lods
push
jmp
push
sub
shlb
or
fimuls
shlb
outsb
outsb
fs
jle
ror
pusha
test
data16
push
jae
push
ret
fisubs
add
cs
addr16
cs
cmp
sbb
mov
push
mov
inc
push
xchg
cmpsl
sub
popf
sub
ljmp
push
inc
scas
or
pop
pop
pop
add
adc
and
ljmp
cs
hlt
inc
pop
sub
lock
inc
mov
sub
add
orb
outsb
call
pop
adc
clc
cmc
xor
xor
xorl
adc
int3
mov
push
pusha
xlat
inc
and
xlat
mov
test
jae
pushf
adc
pusha
in
sub
test
lods
and
dec
repz
loopne
prefetcht0
gs
nop
jne
xchg
xchg
mov
sub
jne
xchg
mov
cmpsb
cmp
jae
aaa
sub
push
jbe
add
xorb
xchg
pop
mov
adc
loopne
xchg
adc
out
flds
xor
lods
insl
push
mov
insl
fs
pop
out
cld
jge
imulb
dec
pop
ret
out
mov
sbb
divb
bound
xor
jb
xchg
aad
xchg
lret
mov
loopne
arpl
push
out
popf
hlt
xor
push
inc
out
fcmovne
das
mov
mov
jge
clc
cmc
inc
push
ja
or
into
test
xchg
lea
xor
out
sarb
cmpl
mov
xchg
mov
cmp
aam
mov
and
inc
adc
push
mov
ss
sub
jmp
gs
mov
mov
jne
icebp
pop
mov
mov
inc
flds
out
nop
jmp
push
cmpsl
pop
pop
mov
ds
loopne
test
push
rcrl
pop
add
push
and
and
inc
pop
fldt
enter
sahf
jecxz
test
push
orb
pop
scas
scas
aad
and
in
pop
pop
movsb
push
outsl
pop
push
xor
mov
repz
aas
and
fcomps
pop
shll
pop
bound
pushf
movsl
inc
inc
jmp
rcr
leave
xchg
pop
in
data16
enter
xchg
rorl
imul
pop
jg
jmp
subb
ds
dec
les
pusha
inc
movsl
in
cmp
mov
xor
inc
icebp
xor
inc
xchg
das
and
jno
fs
fcom
jle
adc
pop
sub
lock
popa
jmp
pop
and
mov
imul
cs
gs
push
push
inc
jmp
mov
or
pop
inc
pop
sbbl
mov
xchg
into
movsb
adc
ret
daa
lods
iret
and
push
mov
lret
xchg
xor
ret
jmp
sbb
movsb
ljmp
sub
mov
sbb
or
cs
mov
sbb
popl
int3
jg
aaa
mov
xchg
push
and
adc
test
insl
cmpsl
lea
mov
sbb
cmp
scas
gs
adc
pop
pop
dec
std
lret
mov
mov
mov
test
shrb
movsl
stc
dec
stos
inc
cmp
int3
inc
mov
in
repz
dec
pop
repnz
jno
sub
scas
push
fwait
mov
test
scas
xor
sub
pop
in
in
mov
fisttps
add
ret
mov
stc
sub
pop
mov
enter
ds
jmp
idiv
mov
pop
into
cli
popa
sub
push
xchg
gs
cmpsb
shrl
out
xchg
pop
fwait
xor
adc
gs
or
jns
fsubrp
aad
gs
lods
mov
dec
shlb
loope
pop
mov
mov
hlt
mov
sbb
js
call
leave
push
cmpsl
in
in
push
lret
stos
xor
cmp
push
in
in
push
notb
jno
cmp
test
fwait
test
ret
in
out
mov
jmp
push
xor
sar
mov
aam
rol
pop
adc
shlb
jle
or
fisttpll
cli
testb
xchg
pop
rol
xchg
std
dec
lcall
dec
mov
mov
pop
mov
xor
jbe
mov
hlt
lret
rolb
dec
cltd
cmc
jno
subl
push
int3
insl
adc
popa
lret
inc
mov
stos
sbb
sbb
adc
xor
adc
out
lcall
sub
stc
pop
fdivr
paddw
arpl
lret
lret
fidivrs
mov
inc
dec
sbb
jmp
imul
jnp
rolb
sub
and
push
sub
orl
imul
lret
in
adc
inc
clc
push
push
rorb
cmp
enter
shrb
jmp
dec
xchg
add
daa
arpl
cmp
dec
pop
jmp
add
cmp
lahf
pop
dec
out
aaa
xchg
and
xchg
aad
pusha
decl
adc
in
jbe
jle
jnp
scas
hlt
lods
bound
mov
pop
cld
pop
mov
inc
movsb
popa
les
int3
xchg
xor
cmp
and
pop
jmp
and
ds
or
clc
mov
imul
and
rolb
pop
push
or
daa
mov
xor
je
loopne
cmp
out
jae
xor
daa
inc
inc
adc
aaa
bound
movsb
add
xor
or
scas
xor
call
ret
gs
push
cmp
aas
mov
gs
inc
cltd
pop
xor
pop
push
setno
mov
cwtl
addl
js
push
std
test
and
sarl
addr16
arpl
adc
loop
aas
fcoms
scas
dec
test
out
mov
mov
pusha
fstpt
aad
and
addb
ljmp
addr16
xchg
xchg
sahf
bound
popa
xchg
push
add
mov
mov
call
or
jnp
and
mov
test
inc
mov
mov
mov
sar
les
pop
jl
cmp
xor
imul
xchg
pop
inc
ret
sbb
subl
sub
and
popa
aam
daa
adc
ja
repz
inc
ret
add
inc
mov
add
cwtl
mov
lea
pop
scas
data16
clc
mov
sbb
push
and
out
lea
cmp
ss
pop
arpl
xchg
xor
jns
cmpsl
lcall
add
out
sti
lock
xor
push
ficomps
hlt
cmp
andb
cmp
lret
jg
cmc
mov
lods
ss
lds
leave
mov
inc
lahf
in
ss
das
out
rcrl
cmp
xchg
sbb
mov
dec
xor
addl
jo
sbb
jge
in
stc
sbb
adc
les
movsbl
mov
dec
outsl
aad
std
test
fstps
mov
fidivrl
arpl
pop
inc
nop
adc
mov
hlt
test
pop
nop
jg
and
ss
or
movsl
xor
xor
xor
jecxz
sbb
mov
mov
push
xchg
xor
and
or
test
jnp
push
sahf
lods
scas
in
or
pop
rol
mov
std
add
cmp
iret
ficoml
mov
adc
pusha
decl
mov
dec
movsl
bound
lret
fldenv
mov
pop
adc
test
in
jnp
push
and
sub
mov
adc
mov
dec
cmp
das
loop
idivb
jp
sbb
xor
pop
dec
ljmp
ljmp
mov
sarb
sbb
roll
push
push
lret
out
xor
call
ja
or
fistl
inc
ret
jae
and
cs
push
dec
je
jb
dec
adcb
and
fildll
add
aam
cmpsl
popf
mov
mov
cmpsl
jge
shlb
xchg
jno
fstps
lods
mov
ret
dec
insb
rcrb
cmpsb
or
sbb
xor
pusha
outsb
ret
ss
xor
jl
dec
call
cmp
mov
fldcw
out
out
pushw
int3
jmp
lods
dec
jle
sbb
mov
sbb
cltd
ja
inc
dec
fld
ss
pop
cmpsl
jno
sub
cld
add
out
cltd
dec
sub
push
sar
sub
cmpsb
inc
fs
push
push
dec
xchg
imul
pushf
sbb
out
jns
es
inc
movsl
es
or
insb
mov
std
xchg
inc
pop
push
push
mov
jno
adc
ja
cmp
add
aaa
dec
xchg
stos
inc
stos
test
cmp
pop
mov
cli
jecxz
outsb
cwtl
repnz
pop
out
jns
frstor
call
mov
in
xor
popl
or
rcll
mov
mov
sbb
mov
scas
inc
leave
mov
fists
mov
mull
xchg
jge
cmp
daa
xor
loopne
push
popf
jg
sub
pop
test
dec
ret
cwtl
push
dec
pop
push
fimull
mov
pop
and
adc
in
inc
shrb
adc
arpl
lret
cld
or
adc
sbb
movsl
mov
mov
dec
lds
test
mov
pop
adc
ret
call
fstpl
sti
cmp
cmp
mov
or
or
adc
add
dec
pusha
push
stos
roll
mov
push
pop
jo
mov
lcall
xor
lods
or
push
rcrl
pop
sub
aaa
jbe
and
cmp
ja
lods
dec
xor
ret
mov
loop
mov
push
xchg
inc
loopne
xor
cli
lock
nop
icebp
cli
and
push
jmp
sti
adc
pop
fidivrl
lret
call
insb
add
sarl
or
iret
fcompl
test
xor
mov
cmp
lcall
sbb
divl
or
xor
inc
mov
mov
inc
pop
ds
mov
shlb
pop
push
inc
dec
or
mov
sub
or
push
sub
cltd
movsb
xchg
icebp
pop
push
bound
enter
inc
sbb
add
sti
aaa
cmp
ss
sarl
mov
mov
pushf
pop
mov
popf
inc
notl
jne
sub
je
pop
sbb
dec
out
lret
sub
jle
mov
sub
jg
xlat
lock
fisubs
jb
ja
add
rcrl
jge
sbb
fldt
test
out
fldt
mov
mov
outsb
shrb
repz
call
mov
mov
stos
mov
fidivrl
mov
cwtl
rol
pop
add
adc
mov
shlb
lods
mov
cmp
out
popa
mov
rclb
daa
out
mov
and
mov
mov
test
or
out
cmp
popf
mov
fistpl
cmp
jae
push
outsl
dec
sarb
data16
outsl
cmc
testl
rolb
inc
loop
cltd
cmp
orl
and
jmp
fists
les
mov
popa
push
mov
in
xchg
dec
adc
adc
pop
lret
out
sbb
movsb
inc
sbb
subb
jg
lret
cs
hlt
add
add
sahf
mov
xchg
jl
fwait
cld
mov
repz
add
nop
add
jns
adc
sbb
or
test
js
xor
xor
mov
je
sub
das
stos
and
lods
xchg
xchg
push
xchg
xchg
lods
adc
and
cltd
cmp
sbb
outsb
inc
mov
sub
loop
cmp
lods
out
sub
xor
cmp
add
jo
xchg
jg
imul
mov
cmp
data16
dec
xchg
jo
pop
out
daa
mov
in
pop
test
pop
ret
rclb
in
shl
mov
pop
cwtl
dec
es
lret
pop
repz
mov
dec
mov
int
adc
stos
cltd
and
in
push
pop
adc
fisttpll
shrb
stc
repnz
xor
push
mov
rorl
adc
xchg
lea
push
jp
sub
pop
lahf
in
lds
loope
push
mov
mov
mov
ja
imul
mov
push
std
pop
inc
dec
lock
mov
cmc
popf
lret
jns
adc
jb
int
fwait
sub
or
push
xchg
sbb
cmp
addl
or
movsb
shlb
pop
addb
lret
sbb
sub
add
aad
sarb
mov
or
adc
pop
ds
pop
dec
cmp
adc
mov
je
sbb
rolb
and
xor
push
popf
mov
out
mov
pop
cld
cwtl
xlat
lahf
int
sub
push
aaa
sub
lcall
pop
xchg
pushl
xchg
inc
sub
dec
stos
fucomip
test
xchg
xor
aaa
jno
fstpl
xor
stos
rcl
push
leave
int3
popa
test
mov
pop
fs
xorb
mov
xorb
addr16
sbb
cmpsl
mov
or
jle
popf
pop
in
ds
movsb
jbe
lods
sub
mov
jg
push
jle
jle
sub
fmull
shll
inc
add
out
adc
cmc
pusha
cltd
cmc
fmulp
mov
lret
jno
xchg
xchg
cmc
rcrb
jo
cli
jl
icebp
fcmovu
xchg
loope
adc
leave
jg
fcomps
into
adc
sbb
xor
jo
adc
leave
scas
sbb
adc
into
cmp
movsb
add
mov
jp
xchg
inc
arpl
adc
in
daa
dec
push
mov
int
mov
push
xlat
ss
call
jno
lahf
insb
push
mov
jb
and
inc
fstpt
mov
aaa
jg
jnp
pop
shl
int3
popl
sbb
inc
bound
loop
popa
inc
inc
outsb
call
jg
and
repz
icebp
test
xlat
pusha
adc
das
dec
int
imul
add
fwait
sbb
xor
dec
xchg
ret
ror
pop
pop
sbb
je
in
push
adc
aam
daa
in
fmuls
test
test
adc
stos
inc
push
ret
mov
jne
dec
lock
fwait
aaa
pushf
imul
add
je
add
inc
xor
addr16
pusha
or
push
mov
push
pop
sti
jno
fdivs
dec
push
cli
mov
cmpsl
jo
sub
push
inc
push
and
jp
dec
pushf
out
inc
add
pop
fcoml
add
fisubl
les
in
jle
sbb
jg
pop
xchg
ficompl
push
xchg
pusha
lods
push
fwait
test
mov
stos
repnz
pop
mulb
mov
cmp
xlat
cmpb
xchg
fs
ret
loop
add
es
gs
repz
mov
cmp
add
add
incb
rcll
sbb
int3
sahf
add
pop
pop
shl
cmc
popf
jl
scas
hlt
cmp
cmp
cmp
aad
inc
adc
in
rep
orb
aam
mov
test
sbb
mov
insl
jo
aad
pushf
or
adc
push
jmp
das
dec
xchg
cmc
mov
popf
xlat
mov
out
scas
fistpll
adc
cwtl
fdiv
xchg
rcrb
sbbl
jno
outsl
mov
lret
fs
mov
into
xchg
xchg
ret
cwtl
mov
mov
xchg
sub
jp
cmc
insl
add
imul
adc
rorl
leave
sbb
std
scas
or
jmp
rcll
les
mov
cmp
dec
mov
inc
movsl
mov
xchg
mov
pop
pop
stos
xchg
idivb
test
push
int
shll
int
xchg
xor
aad
test
dec
inc
in
pop
xchg
ror
mov
lock
inc
movb
popa
pop
xlat
dec
fstpl
in
insb
and
jmp
fs
scas
xchg
push
jae
test
sbb
push
fmull
sbb
jl
shlb
stos
cld
subl
fwait
mov
adc
inc
scas
adc
mov
cmp
outsl
xchg
or
rorl
inc
mov
andl
xchg
jo
ret
push
mov
push
jle
cs
je
and
cli
add
jb
aaa
outsl
push
fcoms
push
or
lret
cmp
repz
and
fcoms
out
ja
jae
dec
adc
pop
xchg
lea
mov
xor
jl
mov
and
sub
mov
mov
insl
pop
dec
mov
jecxz
loope
aaa
bound
cmc
mov
jg
jno
fstps
xchg
jge
ret
xor
loopne
mov
mov
xor
push
iret
jmp
pop
fistpll
lock
xor
lea
dec
jmp
jnp
dec
and
or
inc
out
call
and
data16
iret
mov
nop
add
clc
cmp
dec
pop
movsb
in
loop
pushw
adc
pop
inc
lods
in
inc
sbb
in
scas
imull
push
lea
cmp
aaa
adc
insb
sbb
mov
or
cli
sub
or
adc
outsb
sbb
lds
sbb
ds
scas
test
push
and
insl
mov
jle
loope
jno
and
cmp
adc
sub
sti
addr16
dec
loopne
aad
add
fnsave
fdivr
adc
aad
mov
dec
mov
emms
aam
insb
mov
cmp
cs
scas
jo
out
push
mov
jmp
cmp
cmpsb
je
loope
xor
aas
insb
aad
push
jnp
add
pop
mov
inc
sub
jns
ds
jmp
add
and
adc
and
in
adc
pop
sti
mov
pop
push
les
sbb
jle
int3
insb
pop
and
cmc
mov
mov
loop
xchg
es
leave
fisttpl
sahf
aas
cmp
inc
dec
adc
or
sbb
mov
nop
cmp
data16
stc
popa
fldcw
xchg
or
push
lods
loop
pop
add
loop
shl
pop
sub
in
in
mov
mov
out
sub
sbb
xchg
test
in
cli
dec
rorb
bound
insb
imul
sub
cmp
aas
out
mov
pop
xchg
insb
sbb
inc
dec
and
fiaddl
fsubs
mov
popa
das
scas
fsubr
jbe
inc
fcoms
mov
ds
pop
dec
xchg
pop
fdivrl
or
sbb
cmpsl
ds
aam
sub
xor
lcall
loop
test
popf
xchg
fidivrs
divl
inc
and
mov
cmpsl
cwtl
jge
and
popa
jmp
daa
push
sub
out
out
cmp
fmuls
daa
cltd
mov
mov
pushf
shll
pop
sub
outsl
and
mov
xor
adc
add
and
jle
je
aaa
leave
or
rorl
push
push
test
lea
adcl
mov
ja
xor
and
mov
inc
dec
jne
lea
lds
arpl
mov
lds
cmp
inc
push
mov
push
arpl
and
pop
loopne
gs
xchg
dec
pop
dec
mov
cmp
js
in
ja
movsb
mov
push
das
or
or
aas
lcall
pushf
mov
dec
mov
in
jp
jl
aas
dec
scas
ljmp
inc
cmp
adc
add
push
in
or
sar
mov
test
adc
jg
jo
or
dec
xchg
inc
push
test
push
scas
popf
aaa
sub
outsb
shlb
fdiv
mov
imul
loope
cli
pop
js
cli
lods
sub
out
or
rcrl
outsb
inc
xchg
mov
and
and
mov
pusha
rcll
dec
sahf
test
push
sub
pop
mov
mov
inc
cmpsl
mov
outsl
xor
cmpsl
push
jbe
jnp
pop
xchg
jecxz
es
xchg
push
jmp
inc
mov
and
clc
fbstp
lock
push
cmp
sbb
insl
push
inc
jb
pop
xchg
cltd
stos
out
inc
fsubrs
out
iret
dec
push
leave
inc
aad
popl
cmp
add
dec
sub
xor
mov
fstpt
ljmp
adc
inc
cpuid
pop
push
nop
push
inc
out
fnstsw
rolb
pop
push
push
arpl
xchg
repz
jp
out
sbb
fwait
dec
xchg
das
lret
fisubl
in
dec
mov
insb
out
jbe
sbb
dec
rclb
subb
aam
ljmp
sbb
nop
ja
cmp
stos
push
sbb
lods
sub
jmp
stos
out
add
inc
mov
enter
bound
mov
xor
adc
pop
iret
aad
hlt
lret
sbb
add
xchg
iret
daa
movsl
xchg
sbb
stos
mov
pop
add
repz
cmp
loop
add
sbb
int
pop
arpl
push
cmp
test
ljmp
push
mov
cmc
movsb
ret
push
or
vpshlw
fdivs
fldt
pusha
les
ja
es
and
shlb
sbb
mov
ljmp
mov
pop
and
adc
or
movsb
loope
mov
cs
pusha
dec
lds
out
cli
pop
fdivp
mov
inc
jl
std
inc
nop
and
mov
mov
jmp
jl
inc
mov
or
aas
ret
inc
in
les
int
inc
movsl
movsl
stos
mov
rcrl
cltd
stc
in
sbb
xchg
xor
shrb
or
and
in
cmpsl
loopne
mov
mov
xor
outsb
ficompl
and
call
insb
daa
sahf
call
sarl
cmp
je
cltd
cmpl
cs
jno,pn
enter
inc
or
push
outsb
popf
mov
lock
jg
gs
int
pushf
pop
sti
jmp
pop
sahf
jl
dec
std
pxor
setae
mov
mov
jmp
stos
inc
inc
movsl
sahf
dec
xor
stos
clc
std
cmp
mov
push
sti
xlat
outsl
or
popf
popf
ret
insb
pop
test
mov
std
mov
sub
lret
aam
stc
add
testb
imul
pop
dec
popf
ret
or
aam
mov
imul
pusha
out
loop
mov
lea
or
sbb
inc
adc
bt
inc
aad
xor
sbb
xchg
mov
dec
ljmp
test
out
mov
repz
mov
dec
adc
and
push
and
into
enter
jns
push
dec
pop
push
sbbb
lods
xchg
jb
lret
pushl
mov
into
cs
imul
xor
dec
adc
cs
push
jl
ss
js
cwtl
and
int3
and
mov
inc
xchg
jecxz
mov
cmpsb
cltd
ret
and
mov
mov
hlt
push
stos
and
xchg
jmp
mov
xor
bound
nop
xchg
negb
cwtl
jno
mov
mov
iret
pop
clc
jns
and
jl
cmp
push
mov
and
sbb
add
xorb
cmp
pop
call
sahf
dec
mov
jp
in
adc
in
fistl
notl
stos
andl
cs
sti
cmp
aas
das
ret
std
lea
sahf
xchg
inc
jno
loope
push
pop
inc
mov
frstor
gs
sbbb
pop
imul
dec
add
lds
sarb
mov
clc
movsl
popa
nop
mov
rclb
push
pop
sub
pusha
xor
jmp
xchg
dec
out
cmc
lods
in
jmp
cmp
dec
mov
fwait
out
cmp
mov
cmp
or
fwait
aam
insl
filds
hlt
aaa
subl
repz
dec
sub
jno
sbb
xorb
fdivs
add
xor
fisttpl
mov
movsb
cs
adc
or
negb
jp
leave
icebp
imul
xor
or
fstpl
jmp
push
fldl
mov
lock
bound
lock
addl
sbb
push
xor
stc
sub
jo
xchg
xchg
sub
gs
loope
push
add
daa
push
dec
xchg
inc
add
and
push
mov
bound
and
dec
dec
jecxz
loope
test
mov
xchg
ja
or
nop
in
test
push
fdivrl
adc
orl
cmpsb
scas
pusha
mov
jl
insb
icebp
sub
inc
vpgatherdq
rcll
outsb
sub
sbb
sbb
test
cli
aad
mov
inc
pop
mov
xchg
lret
dec
mov
inc
mov
push
pusha
ror
sub
nop
test
aas
mov
int3
add
inc
push
push
test
ret
jne
jns
or
lahf
sbb
add
mov
dec
push
sbbb
jmp
xor
mov
pop
mov
sbb
hlt
jl
cmp
imul
xchg
mov
xchg
jbe
or
inc
sub
and
pop
ja
push
cmc
das
xchg
js
int3
mov
out
out
scas
pusha
loopne
and
outsb
jmp
jmp
inc
inc
xchg
clc
clc
cwtl
ds
dec
xchg
mull
cmp
movsl
add
mov
dec
fldenv
push
bound
gs
xor
push
lock
cmp
test
aam
sub
inc
aad
stos
fnsave
jecxz
repnz
cmpsb
push
fwait
cld
jp
xor
lock
pushf
sbb
mov
cmp
or
mov
cli
lods
ja,pt
pop
jo
mov
lods
dec
popa
mov
mov
push
into
loope
mov
inc
fmuls
cwtl
jecxz
and
insb
push
add
jmp
out
out
imul
not
and
adc
jg
jnp
dec
cmp
xor
jge
jp
mov
lea
ret
sub
test
pop
imulb
mov
mov
or
cmp
sbb
bound
dec
add
cmpsb
loopne
sub
dec
leave
mov
jb
repz
dec
sar
test
clc
and
lds
xor
scas
pop
arpl
jbe
mov
xor
je
fs
mov
in
cld
js
xchg
imul
mov
aas
scas
sahf
into
adcl
sbb
lock
push
pop
mov
jge
mov
in
add
call
xor
cmp
mov
inc
sub
xor
cmp
mov
push
xchg
dec
sub
rol
out
xchg
jmp
dec
add
rolb
or
mov
pop
mov
shlb
lahf
xor
rcll
and
adc
movsl
lea
and
push
rorl
test
daa
lods
dec
testb
mov
bound
mov
daa
idivl
or
xor
xor
inc
cmp
xchg
lock
out
fldl
leave
lret
cmp
lretw
cmp
mov
mov
pushf
pop
movsb
daa
jg
stc
adc
sbb
inc
adc
rcrl
mov
mov
ljmp
jmp
add
pusha
lcall
add
es
xor
sbb
stos
test
and
mov
pop
mov
xchg
cmp
mov
repnz
pop
push
push
aad
fbstp
icebp
dec
loope
ja
pushf
sub
mull
je
pop
add
pop
mov
cmc
scas
adc
push
enter
cld
in
mov
add
push
cmp
int
cli
inc
jg
pop
je
mov
cli
aad
std
pop
sub
sbb
imul
jle
xor
jmp
jo
xchg
pop
inc
pushf
sahf
fdivrs
popa
dec
mov
les
mov
pusha
pop
lods
les
ljmp
sbb
pop
sbb
mov
js
pop
mov
out
ss
sbb
faddp
sub
ret
xlat
aas
dec
leave
sub
cmp
stc
add
and
out
nop
bound
pop
outsb
pop
dec
sarb
outsl
aam
ret
xchg
xchg
scas
sbb
add
and
xchg
cmp
int3
scas
sbb
dec
add
push
and
stos
add
jnp
ljmp
outsb
rcrl
aam
dec
out
add
scas
int3
rcl
cmpsb
aam
fistpl
mov
cmp
push
jns
aas
xor
mov
jbe
fildl
lods
sahf
sub
pop
sub
shlb
add
pop
fs
jg
pop
sub
mov
cmp
stos
adc
cmp
es
sub
dec
sbb
jle
or
xor
roll
push
xchg
sub
xor
push
push
jmp
sub
bound
nop
mov
enter
outsl
lods
mov
fldl
lret
das
mov
and
add
fwait
mov
push
lret
add
sarb
or
cmpb
xchg
fcomps
cmpsl
cmp
test
or
int
jecxz
fidivl
mov
out
mov
in
ja
dec
xchg
out
mov
repz
mov
out
push
mov
iret
sbb
ret
jg
mov
repnz
aaa
aaa
out
inc
test
sarl
dec
jmp
adc
movsb
sbb
movsb
repnz
and
lahf
push
mov
gs
jge
aas
mulb
outsl
decl
or
jns
xchg
mov
arpl
xchg
fsqrt
pop
cwtl
incl
imul
fildl
xchg
dec
pushfw
ja
dec
adc
orl
cmc
adc
repnz
xchg
adc
subl
ja
lret
inc
dec
dec
fnstcw
mov
xchg
ret
dec
testb
mov
out
es
ds
lret
call
cmpb
jnp
testb
test
fstpl
pop
pop
cltd
shrb
int
add
push
sub
bnd
shll
out
sbb
jnp
pop
or
adc
imul
hlt
andnps
iret
xchg
xchg
lret
insl
mov
inc
out
sti
ret
data16
out
dec
pop
sbb
popf
mov
push
daa
push
call
call
mov
mov
test
dec
jp
jns
dec
mov
scas
xchg
addr16
push
mov
cmp
dec
outsl
jmp
and
mov
mov
adc
scas
call
gs
addr16
gs
dec
popa
cs
pop
push
leave
inc
in
insb
imul
xlat
sbb
pop
jae
addb
push
insb
iret
xor
imul
je
add
cmp
cld
mov
ficomps
xor
cmp
loopne
rcrb
dec
in
cmp
arpl
pop
jle
cmp
mov
cmp
mov
sub
cmp
pushf
insl
fs
or
in
sub
push
cli
or
sub
cld
add
add
xor
lea
or
lret
ljmp
xlat
in
xchg
pop
adc
aam
mov
test
cld
adc
add
and
inc
outsl
sub
out
stc
jecxz
ret
cwtl
jle
sbb
add
nop
insb
enter
mov
sbbl
or
scas
les
inc
xchg
add
sbb
inc
stos
aas
or
sub
in
movmskps
loope
iret
mov
mov
das
add
fsts
in
les
pop
pusha
lahf
in
and
icebp
rclb
pop
cmp
sub
dec
push
and
push
cmp
push
pop
loope
push
scas
popf
jbe
hlt
jmp
pop
sbb
jge
pop
cmp
popa
mov
xor
xor
push
loope
loope
adc
movups
lahf
jno
mov
xchg
cmc
xchg
pop
mov
jecxz
add
fldt
out
jp
xor
inc
or
pop
push
int3
mov
add
lret
mov
lret
xor
add
mov
fisubl
mov
mov
ja
jle
sub
mov
mov
xchg
or
jge
jg
sub
xchg
dec
add
dec
pusha
fidivl
mov
lds
xchg
sub
iret
sub
sarb
mov
sub
pop
pop
movsl
rep
mov
pop
add
xchg
xor
in
mov
xchg
xchg
int
out
mov
cmpsl
insb
std
xor
inc
push
and
movsl
and
rcll
xor
and
cmc
out
lods
push
push
inc
mov
mov
lret
stc
add
scas
jg
jmp
adc
xchg
add
jbe
mov
ja
fidivrs
mov
jge
mov
push
dec
sub
xchg
and
mov
out
scas
imul
xchg
jb
adc
sbb
lcall
int3
inc
push
and
nop
ret
lods
outsb
and
ds
cltd
mov
ljmp
out
pop
push
sbb
mov
inc
lock
ljmp
mov
sbb
and
popl
push
movsl
cmp
mov
mov
mov
test
xchg
pop
jecxz
std
lock
dec
nop
jb
cld
fwait
push
jne
sub
cmpsb
sub
out
negb
aad
ss
je
aas
jb
clc
jbe
sub
inc
jle
aas
mov
xor
int
cmpsl
mov
mov
test
cmp
mul
fwait
lods
and
adc
sbb
imul
mul
add
cmp
movsb
or
test
orl
ds
pop
mov
out
in
mov
add
push
mov
mov
xchg
lods
xchg
jne
sub
add
xchg
insb
xrelease
and
popl
mov
jnp
dec
mov
mov
push
repz
sti
cli
test
leave
dec
pop
nop
fs
jp
sbb
sub
and
pop
fcoms
gs
cmp
in
inc
enter
pop
subb
cmp
loopne
pushf
pop
out
mov
push
orb
lret
xchg
andl
or
cmp
scas
js
aaa
add
inc
scas
icebp
push
mov
imul
and
sub
adc
xchg
int3
lock
movsl
or
pop
and
fcomip
icebp
leave
xchg
add
das
lods
cltd
xor
inc
jnp
ror
in
cmp
mov
fists
shrl
ret
aas
fcoms
mov
lret
jbe
imul
sub
lahf
scas
sarl
pop
inc
out
jg
add
fisttps
loope
adc
mov
or
jno
jge
test
ja
adc
dec
rorl
dec
test
filds
or
xor
cmpl
jns
xchg
popf
scas
imul
shrl
fwait
xlat
pop
adc
jb
jmp
imul
cmp
cs
inc
mov
and
inc
lret
cmp
stc
and
sbb
leave
mov
mov
je
jle
out
adc
or
mov
arpl
xor
xchg
jno
in
jp
ret
mov
xchg
mov
mov
cld
sub
jb
cmp
cmp
or
dec
lahf
xchg
lret
daa
out
jbe
sub
test
imul
push
sbb
imul
icebp
stos
sarb
cld
mov
sub
lahf
sbb
pop
xchg
xchg
mov
dec
mov
out
popa
xor
cmc
fidivl
call
xchg
mov
add
out
mov
xorl
pop
sbb
je
pop
or
and
fs
pcmpeqb
lcall
xchg
popa
movsl
push
and
add
xchg
les
dec
addb
pop
jmp
or
mov
xor
cltd
repnz
in
clc
clc
pushf
pop
iret
xor
arpl
sub
sub
and
lods
mov
imul
xchg
jmp
cmc
scas
jns
xor
push
imull
xchg
push
ds
call
and
jne
insb
inc
cmpsl
pop
sub
xchg
mov
adcl
xchg
ss
add
xchg
imul
addl
add
pop
rcrl
ret
stos
ficompl
or
pop
sub
xchg
jns
sbb
jecxz
in
mov
imull
or
jmp
mov
iret
out
cmp
pushf
cli
std
pop
xchg
ljmp
scas
insl
bound
dec
xchg
adc
jmp
mov
lea
pop
dec
outsb
inc
fldcw
sbb
pop
icebp
in
iret
andb
stos
mov
jno
mov
mov
test
mov
aam
mov
mov
sbb
adc
mov
dec
sbb
cmp
and
hlt
and
rcrl
cmc
jge
sti
loop
push
adc
scas
dec
mov
rcrl
loope
out
daa
lods
stc
xchg
adc
jmp
or
and
dec
and
pop
jl
ljmp
repz
mov
pop
lods
adc
jp
dec
jo
xor
loop
cmpsl
push
add
in
jb
testb
jb
adc
inc
in
cmp
cwtl
stos
sti
into
xchg
inc
out
iret
mov
cmp
icebp
stc
jnp
mov
xlat
aas
xor
jmp
ret
adc
add
flds
cmp
push
ljmp
xchg
sbb
xor
sbb
outsb
push
mov
dec
push
mov
jg
ret
and
sbb
ret
repz
pop
add
or
movsl
dec
and
iret
test
inc
fldcw
sub
arpl
stos
jge
aam
jno
add
hlt
insl
imull
push
and
mov
push
xor
adc
dec
xchg
mov
mov
fxch
sahf
rcll
sahf
and
adc
test
mov
push
jno
xor
cli
mov
incl
mov
mov
enter
adc
push
das
repz
lods
leave
xchg
fsubr
jbe
mov
ret
ss
dec
inc
lret
sub
stos
mov
cltd
push
aaa
in
in
ss
sub
mov
test
in
cwtl
push
mov
arpl
inc
jb
scas
dec
or
and
pop
sbb
daa
sbb
mov
mov
xor
test
lcall
int3
rcll
dec
sbb
cmp
negl
cmp
jb
mov
sub
mov
cmp
aaa
sub
add
sub
cltd
ljmp
jae
lahf
push
pop
mov
push
ds
cld
mov
pop
sbb
push
jp
or
pop
adc
lock
out
adc
adc
push
xor
ds
cmp
jle
in
in
hlt
jecxz
sbb
ja
push
adc
leave
xchg
repz
jle
xor
nop
xor
adc
cmc
je
clc
orl
sbb
cmp
jle
sub
pop
inc
sub
pop
lock
mov
pushf
adc
loopne
sbb
aaa
mov
dec
rorb
or
dec
and
test
mov
sub
arpl
cmpl
jno
imulb
or
mov
lock
adc
outsb
cli
loop
mov
pop
lret
inc
xchg
in
sub
push
sub
mov
addb
pop
mov
shlb
add
stos
shrb
mov
jge
out
mov
pop
inc
cmpsb
pop
clc
mov
pushf
shr
rolb
mov
and
adcl
mov
les
jne
push
outsb
and
or
mov
movsb
bound
pop
mov
sahf
pushf
aaa
bound
xchg
or
aam
aas
outsb
nop
adc
fidivs
xchg
push
push
push
sbb
enter
jp
xor
fildll
int3
sbb
cwtl
fcmovnu
test
fiaddl
xor
sar
dec
aaa
add
shll
mov
aam
loop
notb
imul
fwait
shlb
inc
subl
lods
outsb
push
dec
js
sub
lcall
mov
loopne
ret
inc
pop
scas
xor
xor
leave
or
push
jb
mov
aam
shll
dec
scas
test
and
insl
ficoms
sub
shrd
and
sbbb
mov
lcall
inc
hlt
std
and
cmc
loopne
arpl
jmp
pop
in
sahf
lock
push
add
xor
mov
add
vpsrad
mov
adc
and
cmp
push
jecxz
push
mov
in
test
inc
flds
xchg
jb
in
repnz
into
xor
mov
out
fldl
stos
push
mov
xor
xchg
jne
push
jo
repz
mov
out
pop
lods
xchg
or
lods
popfw
shrd
lods
jle
lret
jae
push
hlt
arpl
adc
pushf
xchg
mov
lods
adc
mov
mov
cs
fcomps
ret
cmp
icebp
or
adc
jbe
push
fiaddl
sahf
xor
jno
les
sub
das
push
aad
sbb
inc
mov
stos
rclb
bnd
push
cmpsb
movsb
or
pop
dec
in
sub
fnstenv
test
cli
or
add
enter
fstpt
out
stc
data16
sbb
or
adc
loope
pop
pop
lret
or
jp
scas
out
jge
and
into
sbb
je
in
repz
mov
push
ss
sub
or
xchg
in
cmp
repnz
enter
mov
mov
shll
mov
call
ljmp
push
mov
sub
mov
fsubrl
or
push
push
cmc
pop
iret
loope
ss
xchg
sub
lods
cs
jo
fnsave
inc
enter
lds
pushl
add
mov
inc
adc
in
mov
adc
xchg
adc
out
outsb
fldl
and
mov
cmp
cmpsb
loope
dec
jbe
insl
jno
and
fwait
dec
ss
pushf
push
gs
mov
push
adc
lret
jbe
jo
xchg
roll
subb
jecxz
or
dec
iret
adcb
mov
xchg
aas
jb
stos
test
push
decl
addr16
repz
jg
adc
in
mov
lcall
jne
adc
idivl
inc
rclb
sbb
fcmovnu
mov
ljmp
mov
pop
inc
adc
rep
cltd
rcll
lahf
lcall
test
mov
mov
push
or
pop
pop
pop
push
push
add
and
psubd
jns
data16
cltd
inc
mov
or
into
sub
pop
aad
clc
scas
jecxz
mov
dec
add
lods
scas
mov
stos
and
mov
xor
xor
mov
hlt
inc
xor
addr16
push
cmpsb
mov
lods
mov
add
mov
or
push
mov
stos
sub
or
in
out
adc
jl
sbb
add
lods
out
nop
scas
out
dec
cmp
mov
sbb
out
sahf
push
mov
jge
jbe
mov
out
fdivs
mov
cmp
add
or
or
xchg
js
mov
lret
xor
mov
insb
jl
mov
and
or
std
test
jmp
mov
fbstp
mov
fldcw
je
addr16
mov
xchg
push
jge
add
insb
pop
jo
cmpsb
into
enter
call
and
test
mov
jle
sbb
decl
and
pop
add
sub
add
mov
fs
test
push
inc
test
push
out
lods
je
dec
jg
sub
jae
push
lcall
lea
cmp
cmp
push
scas
dec
xchg
mov
mov
div
sub
xor
mov
jne
jg
sbb
or
jbe
frstor
dec
xorl
cmp
dec
mov
push
lret
cmp
xchg
mov
pop
pop
out
cmp
loopne
cmpsl
outsl
mov
dec
xchg
mov
jge
sub
ss
mov
add
xchg
cmp
push
jecxz
int
cli
jb
lods
lcall
sbb
push
pop
pop
mov
rcll
mov
imul
inc
jno
xchg
es
lea
pop
pop
pop
and
data16
addl
insb
sbb
mov
lea
movsl
test
jae
mov
or
leave
dec
call
rclb
or
push
ds
dec
inc
cs
ficoms
or
roll
dec
xchg
fistl
and
pop
sbbb
xor
stos
mov
pop
stc
xor
dec
dec
push
jecxz
jo
aaa
mov
js
imul
pop
push
mov
lret
loopne
dec
xor
sub
insl
fwait
loopne
test
psubusw
cmp
lahf
mov
mov
lods
sub
cld
adc
cmc
sbb
dec
or
pop
ljmp
loopne
mov
lds
gs
repnz
mov
andl
cld
push
aaa
push
pusha
push
jl
sub
cmp
or
pop
xchg
jnp
addr16
sub
imul
add
xor
loope
addr16
mov
mov
jbe
mov
or
fwait
mov
mov
jbe
xchg
fsubrl
out
mov
jo
sub
enter
cld
fldcw
es
sub
adc
aad
in
in
jecxz
imul
adc
aas
popa
dec
dec
mov
push
mov
aad
movb
xor
lahf
push
pushf
andl
leave
sub
pop
rcr
in
stos
clc
sub
jo
data16
sbb
pop
out
dec
mov
pop
pop
repz
mov
loopne
sbb
and
fistl
loope
mov
decb
loopne
sub
xor
or
insl
xchg
aad
fnstsw
lret
push
sub
aam
or
ds
rcrb
out
and
or
jmp
mov
mov
and
pop
in
orb
movsb
ljmp
xchg
outsl
in
sub
xor
je
push
or
push
or
imul
xchg
cmpsl
lds
adc
out
aaa
jnp
lret
insl
cmc
xchg
adc
call
mov
add
inc
mov
dec
dec
xor
out
mov
push
mov
dec
fsubp
inc
je
push
lret
push
mov
scas
data16
or
mov
pop
add
mov
cmp
xor
adc
jmp
xchg
es
lahf
jl
loope
adc
push
lahf
sbb
lahf
adc
xor
out
nop
fsubrs
int
fwait
movsl
pop
std
add
sahf
mov
repz
and
loop
stc
mov
fwait
dec
mov
ficoml
jbe
jno
int3
ret
pushf
fwait
cli
push
int
xchg
dec
test
les
ljmp
outsb
adc
sbb
sub
xor
or
movsb
lock
fstps
xchg
gs
enter
add
pop
nop
jmp
jne
roll
inc
mov
mov
pop
sti
and
jle
out
loope
adcl
push
js
xchg
lea
jnp
lahf
mov
push
xchg
mov
into
or
mov
iret
aad
daa
push
and
mov
out
movsl
jp
mulb
dec
ja
leave
sub
shr
xchg
sub
inc
fmull
nop
sub
inc
ss
rcrb
pop
push
repz
repnz
pop
or
sbb
sbb
sbb
cmp
or
sbb
aas
aas
lods
roll
movsl
adc
xchg
out
xchg
cmp
and
adc
out
sbb
loope
push
mov
out
push
sbbb
adc
shll
xchg
xchg
bound
andl
ret
mov
mov
pop
and
inc
rcr
push
fidivrs
aas
jae
pop
jnp
pop
push
shll
xchg
push
call
push
ffreep
loop
popa
and
out
repnz
pushf
push
je
repnz
xor
clc
into
inc
mov
push
adc
adc
and
jae
neg
dec
scas
test
fidivrs
bound
mov
xchg
pop
gs
push
or
in
inc
ljmp
std
fmull
les
aaa
sub
cmpsb
jp
push
jno
fstps
adc
adc
mov
mov
data16
mov
das
sahf
sub
xchg
aad
loopne
add
pop
mov
aas
push
aam
fdivs
pop
lcall
lods
and
scas
arpl
push
sti
jl
aam
lock
not
and
and
pop
std
addl
pop
push
loope
cmp
mov
sub
xor
jle
fstl
jmp
enter
outsb
lret
push
ljmp
fists
lds
clc
xor
ret
mov
jecxz
mov
cmpsb
imull
mov
loop
and
insl
cmc
sub
adc
pop
push
mov
dec
mov
xor
adc
loop
dec
jb
popf
mov
int3
out
ds
pop
sbb
push
push
add
sub
push
stos
jne
inc
aad
aad
cmp
push
push
push
das
fmull
int3
sahf
jne
and
clc
cmp
mov
test
sbb
xor
lods
or
cmp
scas
insl
fs
cwtl
xchg
lea
jnp
cmp
xchg
imul
shlb
push
xorb
or
jbe
sub
out
rcrb
mov
or
sarb
outsl
xor
daa
cmp
cmp
je
mov
fs
mov
daa
xchg
cmpsb
jle
mov
loopne
cld
and
call
dec
outsl
clc
es
fldz
mov
jnp
xchg
push
xchg
xor
or
mov
mov
inc
or
ret
mov
dec
xor
mov
sbbb
pop
testb
lods
lcall
stos
mov
mov
outsb
jle
fildl
inc
divb
sub
cmp
loopne
into
adc
lods
add
jb
out
sti
sub
push
jp
mov
sub
jg
dec
cmp
cmp
cltd
in
inc
scas
jmp
cmp
fsubp
push
stc
mov
les
popf
jp
mov
push
loopne
sub
push
into
sbb
push
mov
jge
xor
and
xor
adc
push
aaa
mov
sbb
repz
aad
fsubrl
cmpsl
sbbb
test
xchg
jae
inc
xor
push
rclb
out
imul
pusha
popf
or
lods
dec
sti
xchg
insb
ficoml
jecxz
popa
add
fisttps
cmc
xor
mov
push
sub
or
out
shlb
sub
push
into
push
xchg
mov
aaa
fwait
sbb
incb
dec
mov
xchg
mov
test
or
pop
sbb
cltd
add
fldcw
fwait
dec
ret
test
add
in
das
popa
popf
cmp
out
cwtl
inc
cmpsl
pop
push
ss
mov
jl
hlt
push
or
fsubp
sarb
out
pushf
adc
mov
lret
lds
in
jmp
imul
repz
xchg
xor
ljmp
inc
mov
pop
outsl
push
ficomps
jmp
and
jmp
outsl
dec
fcoms
arpl
ficomps
iret
in
jns
and
sti
daa
adc
ljmp
flds
cmp
popa
sbb
xchg
adc
or
pop
and
imul
push
daa
cmp
push
xor
jo
arpl
fsubp
push
out
mov
mov
pop
mov
pop
inc
xor
jae
or
xchg
cmp
xor
int3
dec
rclb
inc
popa
xchg
insl
and
stos
cmpsb
sbb
cmp
xchg
lea
iret
mov
mov
aam
dec
fucom
loop
outsb
inc
jp
icebp
push
mov
movsl
repnz
mov
ss
scas
fdivrl
mov
mov
or
movsl
cmp
and
xchg
cld
dec
cmp
mov
gs
inc
testb
movsl
add
mov
fwait
outsb
lcall
testl
xchg
mov
mov
push
and
inc
insl
test
outsl
aad
test
mov
outsl
mov
insb
xchg
stos
mov
pop
stc
mov
ficompl
cmp
mov
inc
jae
out
push
mov
popf
popa
inc
dec
pop
jge
sbb
outsl
movsl
and
enter
pop
and
cmpsl
in
jge
jno
mov
cmp
xchg
inc
aad
jne
out
sub
popa
mov
imul
adc
test
rcll
mov
or
adc
cmpsl
mov
and
andb
and
fidivs
mov
mov
scas
add
and
sbb
xchg
stos
lods
jno
popf
pop
mov
in
outsl
rcl
lcall
jnp
dec
addr16
xlat
imul
sbbb
arpl
mov
dec
push
pop
leave
daa
fdivrl
in
dec
add
jbe
mov
cld
movb
lahf
lea
mov
movsl
movsl
dec
and
call
in
cmp
xchg
adc
adc
cld
dec
pop
pop
mov
aas
out
ljmp
outsb
xchg
js
dec
pusha
cld
mov
xor
xchg
sbb
stos
in
int
cmp
cmc
sub
push
sahf
pop
not
mov
or
or
mov
pop
dec
lahf
mov
shrl
imul
jb
pop
std
rol
mov
test
mov
dec
mov
lahf
pusha
pop
xor
pop
xor
add
inc
cmp
dec
into
cmp
pcmpgtw
xorb
dec
push
adc
cmp
out
sub
and
or
xor
and
repz
ucomiss
push
fdivl
pushf
xchg
and
push
in
stos
dec
stos
lea
mov
jle
ja
inc
out
sbb
xor
inc
fsubrp
xchg
add
and
xchg
xor
sbb
mov
cwtl
jp
adc
dec
dec
pop
lret
add
loop
mov
mov
ret
and
xor
int
jmp
pop
addr16
mov
add
add
adc
mov
repz
xchg
mov
and
pop
test
clc
jo
ljmp
in
cmp
shll
jb
jae
cmpsb
xchg
mov
fcomps
jnp
out
xor
or
jb
jb
insl
jg
enter
shr
or
sub
cmp
dec
xlat
cs
imul
std
or
popa
insl
arpl
out
pop
pop
or
daa
lds
cmp
fisttpl
vmwrite
pop
call
jns
xchg
push
icebp
dec
aas
mov
mov
mov
sub
and
cs
mov
cmp
rcr
aam
add
test
in
fiaddl
mov
jne
jo
and
sbb
psrad
divb
fstps
push
push
xor
push
jno
and
insb
hlt
insb
jno
ljmp
fsubrl
ret
test
je
xchg
push
and
loopne
pop
imul
inc
nop
aad
data16
cmp
dec
lahf
outsl
sar
push
mov
and
sub
mov
and
out
testb
lods
xchg
fs
pushf
rolb
sbb
xchg
jge
fbld
in
call
sub
xchg
addl
test
dec
jb
lret
lret
inc
sar
mov
popf
inc
mov
push
sub
popa
lret
xchg
mov
xchg
daa
mov
sbb
stc
xchg
fwait
sbb
call
pop
cld
cmp
loop
lahf
rcll
ret
push
out
rcll
mov
mov
xor
pop
mov
imulb
sub
cmp
push
xlat
jecxz
and
or
add
and
and
inc
mull
ficoms
sbb
xchg
inc
xchg
cli
jle
enter
out
mov
in
inc
loopne
mov
adc
fwait
in
dec
in
dec
add
mov
dec
xchg
mov
jns
mov
rclb
je
adc
mov
or
mov
mov
inc
leave
mov
jae
int3
adc
lcall
push
xor
ficoms
pop
jne
mov
jg
inc
and
movsl
push
std
cmp
repnz
les
rolb
xchg
mov
lcall
loop
cld
sbbl
push
test
dec
mov
mov
repz
jbe
inc
out
sub
push
pop
mov
inc
sahf
jecxz
rolb
cmp
jns
es
mov
cld
inc
rcl
scas
push
push
sbb
inc
xor
pusha
push
mov
negb
jns
test
loope
dec
inc
adc
int
push
out
dec
mov
dec
adc
ja
div
cmp
cmpsb
mov
add
push
xchg
rcr
clc
and
or
andl
pushf
ret
sbb
lods
stos
cwtl
sti
xor
cmc
insl
dec
es
aam
mov
xchg
push
lret
or
and
addr16
imul
out
fnstenv
sbb
lcall
jne
test
xchg
cmp
or
adc
in
xchg
lods
mov
iret
mov
xor
outsl
and
into
add
cltd
fnstsw
sbb
je
testb
mov
js
aaa
push
mov
jmp
cs
jmp
shrl
fdiv
lret
jns
jnp
adc
flds
add
cmpsb
mov
pop
leave
cmpsl
aas
mov
push
sti
stos
mov
push
mov
lret
loop
sti
leave
out
and
and
jae
sbb
push
mov
xchg
shll
mov
mov
push
jecxz
inc
fsubl
in
iret
mov
cld
push
sbb
inc
int
adc
cltd
lret
and
jl
icebp
xchg
and
fistps
and
stos
mov
add
sbb
sbb
dec
nop
stc
std
or
or
mov
inc
push
adc
jmp
push
lea
out
sub
repnz
cmpxchg
ss
xor
dec
dec
adcb
lea
pop
pop
aas
mov
or
movsl
push
jnp
int3
icebp
and
pop
out
scas
shlb
cli
test
nop
fdivl
inc
inc
popf
cwtl
sbb
sub
cmp
ja
test
cmp
mov
dec
jne
xchg
and
add
icebp
xchg
imul
adc
or
dec
and
inc
adc
xchg
rol
xchg
add
jbe
and
push
das
repz
push
add
mov
testb
xchg
in
cs
pop
nop
testb
mov
lds
test
flds
hlt
fs
nop
sbb
iret
xchg
les
mov
pop
fidivrl
pop
imul
mov
fnstsw
mov
clc
pop
sbb
sbb
add
mov
mov
push
fsubrs
xchg
push
aas
aas
nop
sub
cmp
ja
sahf
pusha
or
repnz
in
sub
mov
jnp
loope
jge
dec
ja
pop
push
or
push
inc
pop
push
lds
je
test
xchg
pop
aam
sub
mov
add
insb
ds
lcall
adc
mov
fsubp
mov
andl
xchg
jns
shr
mov
add
mov
cltd
lods
dec
mov
mov
andb
addr16
call
dec
push
pop
pop
push
sub
fsubr
mov
outsl
rcr
xchg
pop
push
mov
sbb
mov
xchg
outsl
test
movsl
dec
ss
sbb
mov
lea
pop
mov
jle
out
into
mov
inc
jp
imul
or
pop
and
scas
out
sub
fwait
scas
hlt
daa
negl
dec
push
xchg
test
jmp
out
sti
int
push
fildll
rorl
mov
gs
mov
jecxz
je
ret
cmpsb
sub
jno
xor
xor
or
test
sbb
adc
mov
popf
dec
jne
mov
ficompl
lret
das
enter
adc
adc
xchg
insb
dec
ficomps
sub
mov
lret
rolb
lret
hlt
jb
and
push
out
mov
rol
mov
xor
sub
mov
xchg
push
xchg
sub
pop
push
lds
insb
lock
lods
mov
inc
mov
or
test
jae
mov
paddw
out
fisubrs
xor
adc
sub
stos
fiaddl
jne
mov
add
jne
fildl
pop
mov
adc
mov
sub
jb
push
lea
mov
outsl
cwtl
shrb
and
in
or
mov
loopne
ficomps
mov
je
lcall
lock
test
dec
push
xor
js
cli
pop
and
int
aam
sti
mov
pop
pusha
cmc
sub
pushf
imulb
stos
add
lods
inc
sub
jbe
pop
subb
enter
ljmp
mov
add
fadds
sbb
push
sub
add
mov
pop
cld
sbb
out
cltd
sub
mov
ja
scas
fldenv
cwtl
mov
cmp
push
and
dec
fidivl
sbb
add
push
mov
cwtl
popf
cmc
cmp
sub
icebp
and
or
cmc
pop
pop
out
inc
adc
negb
int3
push
popf
adc
ljmp
mov
sbb
in
lcall
sbb
movsl
es
jmp
faddl
add
in
cltd
orb
inc
mov
pop
or
lcall
mov
int
inc
lret
xchg
adc
repz
pop
movsb
aas
test
sub
inc
push
push
cwtl
adc
ret
jnp
mov
push
cmpb
or
jbe
aaa
daa
aas
lea
iret
fs
jmp
rol
pushf
add
xor
int3
bound
ret
repnz
repz
jle
mov
jg
sbb
jge
int3
inc
xor
inc
roll
out
sub
add
push
imul
mov
xchg
mov
push
imul
popa
jae
mov
dec
sarl
or
rcrb
mov
or
jnp
je
shrl
adc
out
scas
pop
data16
add
pushf
and
xchg
sbbb
push
dec
popa
js
mov
js
jbe
idivl
aam
insb
enter
cld
ss
push
xchg
fdivrs
clc
mov
adc
sbb
orb
imulb
sub
sbb
iret
iret
lret
out
repz
lock
mov
push
out
sbb
xchg
or
sub
in
jmp
call
aad
fwait
out
ficoms
in
cltd
aaa
pop
pop
cmpb
in
movsb
shll
and
lahf
and
leave
pop
mov
jns
stc
push
sub
bound
mov
mov
adc
outsb
movsb
cli
ss
mov
imul
js
mov
sbb
lcall
cld
inc
loopne
push
xchg
mov
inc
jae
pop
repz
push
stos
stos
xor
cmp
andb
lret
pop
mov
pinsrw
aaa
or
out
xor
rolb
cmpsl
orl
cmp
and
inc
test
inc
jbe
add
mov
icebp
in
push
cs
add
jl
lods
testb
lret
rcll
jge,pt
out
sahf
iret
sub
mov
cwtl
in
jae
pop
mov
inc
inc
lock
sub
rorb
pop
pop
imul
xchg
inc
cld
aas
pop
std
xor
pop
notb
or
mov
or
add
stos
inc
xor
cmpsl
pop
lret
jp
cli
fmull
push
push
bound
cld
or
inc
sub
sahf
inc
fmull
dec
push
push
inc
cmp
insl
movsb
aas
mov
sbb
pop
mov
mov
add
adc
out
push
jno
ja
pusha
mov
popf
shll
out
pop
shrl
es
cltd
das
orb
lods
fldenv
sbb
and
mov
test
adc
orl
jbe
rorb
sub
push
cltd
or
sub
inc
outsb
lea
lock
pop
jb
test
dec
pusha
jg
mov
aaa
or
ss
scas
xor
dec
mov
leave
xchg
mov
fsubl
jno
loopne
push
sub
jmp
repnz
add
aaa
and
or
push
xor
sti
subb
hlt
cmp
repz
popa
dec
addb
dec
fcmovnb
mull
stos
xchg
lea
jb
pop
adc
or
ds
xchg
jae
and
mov
lret
mov
pop
inc
mov
sbb
mov
lret
dec
repnz
call
fisubrs
xor
sbb
or
pop
popa
out
mov
ffree
push
hlt
jecxz
test
shll
aas
jae
or
aaa
repz
inc
addr16
adcb
mov
xor
xchg
cmpsb
sbb
mov
adc
insb
ffreep
mov
cmp
push
push
mov
dec
sahf
xor
inc
add
fucomp
into
jns
nop
ds
mov
inc
adc
mov
xor
jb
fstps
out
and
mov
ljmp
pop
pop
aaa
scas
xchg
fs
jle
test
ret
aas
sti
rolb
mov
mov
xchg
cltd
xor
jecxz
or
mov
cmp
sub
mov
cwtl
sbb
sbb
aaa
repz
cmpsl
mull
and
out
dec
sub
dec
loop
into
js
loope
les
lahf
push
xchg
mov
loope
inc
les
shlb
mov
mov
sti
sub
mov
mov
insl
stos
add
mov
rep
cwtl
adc
clc
stos
clc
test
cmp
sbb
mov
scas
cmc
xor
push
insl
push
fwait
mov
push
xchg
shrb
js
sub
pop
lea
pop
js
ret
sarl
adc
clc
out
xchg
adc
nop
jnp
into
pop
lea
out
shr
adc
mov
jbe
aam
iret
mov
sbb
lret
je
lcall
int
xchg
sub
iret
adc
nop
sub
negb
adcb
jge
aam
inc
fs
jge
test
ss
jnp
push
dec
pop
add
cld
fsubrp
idivb
pop
pop
gs
sub
mov
nop
daa
test
movsb
mov
mov
or
adc
test
inc
daa
in
jo
adc
jge
addb
jnp
mov
inc
inc
cld
xor
addl
mov
bound
push
jecxz
iret
xor
push
imul
movsl
sbb
mov
or
andl
ret
mov
mov
frstor
test
jae
movsb
int
outsb
sbbb
add
clc
push
sub
or
fstpl
popaw
mov
lea
mov
lea
scas
lods
sbb
inc
mov
rorl
mov
cmc
adc
adc
in
pop
testb
inc
mov
pop
movb
orl
inc
arpl
push
negb
mov
sub
loop
sbb
push
inc
pop
call
aas
mov
or
in
push
pop
lods
add
loop
mov
jg
xchg
jmp
fsubrs
xor
pop
icebp
jbe
pop
or
xchg
mov
sbb
dec
repnz
xlat
mov
fdivs
inc
mov
mov
xchg
mov
bound
repz
adc
test
enter
xor
sbb
sbb
jno
jb
xor
ret
dec
push
or
rorl
mov
inc
rcrw
insb
inc
dec
and
lock
jns
in
jle
fnstenv
jb
pop
xchg
insl
mov
cmp
xlat
mov
inc
in
scas
imul
pminub
fisubrl
push
xchg
test
aaa
loopne
and
repz
dec
or
aas
xor
jne
mov
xchg
in
stos
cltd
movsb
lds
sub
daa
ficompl
push
pop
cmpsb
sub
inc
or
inc
or
push
mov
inc
add
xchg
inc
pop
pop
out
roll
rcrl
mov
push
pop
mov
jne
sub
mov
push
aad
cld
shr
mov
out
pushf
arpl
push
sbb
flds
push
xor
jbe
push
adc
int3
sbb
cltd
xor
jb
mov
test
xchg
push
jecxz
jge
shlb
push
lret
fldlg2
xchg
mov
inc
fiadds
adc
data16
push
adc
push
xorl
cltd
jmp
push
jno
dec
aas
inc
daa
dec
jno
push
pop
sub
stos
dec
push
lock
test
mov
inc
movsl
jmp
enter
fcomps
and
xor
or
mov
mov
mov
ret
mov
in
arpl
repnz
hlt
inc
aad
enter
xor
pop
data16
shr
push
stos
sub
pop
scas
inc
lds
mov
daa
fnstcw
pop
adc
add
adc
ljmp
push
jno
inc
sub
popf
rolb
iret
lcall
aam
lret
mov
mov
cmpsb
and
pop
sbb
jmp
stos
add
stc
ljmp
adc
shlb
in
jo
inc
xchg
xor
pop
fisttpll
test
idivl
pop
std
push
jmp
jnp
fidivs
mov
ss
cmpsl
stc
movd
data16
aas
fxch
ja
adc
xlat
add
push
and
aaa
mov
add
out
mov
cmp
add
lods
mov
clc
lret
aad
popw
fnstcw
sub
xchg
and
idiv
fbstp
push
in
rcrl
mov
ficomps
or
dec
xor
dec
imul
inc
sarb
fistpl
repz
jbe
scas
in
sub
push
sti
into
shrl
pop
in
pop
mov
xor
and
pushf
jmp
jmp
pop
out
stc
mov
in
dec
popf
subl
xor
dec
lods
dec
enter
pop
push
fwait
aad
mov
push
sbb
cmpsb
stos
push
outsb
push
mov
mov
lcall
mov
enter
add
mov
xor
mov
add
outsl
or
mov
pop
cmp
and
dec
filds
or
fdivr
adc
push
push
push
clc
or
xchg
ds
divb
sbb
int
adc
hlt
std
xor
neg
je
sub
xchg
mov
test
mov
or
pop
imul
stc
movsl
mov
sbb
or
test
add
jb
jb
cmpsb
fildll
mov
gs
xor
sbb
mov
stos
pop
mov
adc
add
push
incl
and
sub
fldl
je
imul
loope
dec
jnp
test
dec
dec
fiaddl
int
push
jecxz
xor
dec
push
mov
adc
in
test
and
adc
xor
sbb
in
pushf
mov
divb
pop
sti
jmp
outsl
sbb
dec
pusha
loope
dec
repnz
icebp
sub
xchg
testb
fs
jmp
add
and
pop
into
cmpsl
loop
add
aad
mov
mov
xor
lods
adc
xchg
out
fdivl
jmp
dec
mov
popa
imul
adc
xchg
pop
leave
sub
inc
dec
sub
lcall
cs
jns
push
dec
sbb
jge
push
fwait
cmp
out
cmp
sub
jae
fildl
sub
cs
in
popf
push
scas
shlb
cmp
cmp
out
mov
in
jo
lods
mulb
inc
iret
mov
mov
shlb
push
mov
mov
adcb
xor
or
and
clc
mov
imulb
dec
mov
call
enter
adc
lods
inc
mov
sbb
popa
rol
into
cli
fs
scas
sti
sub
loop
adc
adc
push
or
inc
jg
sbb
jl
cltd
pop
push
pop
cli
ret
inc
and
dec
repnz
mov
shlb
test
cmpsb
lods
loope
stos
xor
xchg
cmpsb
jle
ret
test
fistl
hlt
mov
and
lods
mov
notb
fcmovnbe
inc
xor
mov
xor
push
das
aad
pusha
jp
pop
es
adc
scas
xchg
mov
jnp
int3
outsb
inc
sbb
push
inc
sbb
mov
loope
mov
daa
aam
lret
idivl
stos
pop
sbb
jge
fiaddl
outsb
xchg
mov
pop
jg
rcll
pop
mov
xor
jno
dec
sbb
jno
pop
faddl
adcb
inc
sbb
cmpsl
cmp
and
mov
xchg
push
enter
push
icebp
mov
hlt
fisttpll
sti
scas
push
add
cmp
ror
test
aam
testb
pusha
addb
cs
adc
scas
add
sbb
mov
adc
rolb
in
pusha
sbb
pop
cmp
xchg
sbb
inc
sub
rcl
inc
fcomps
aam
xor
test
xor
or
jle
xchg
outsl
inc
mov
push
jge
ret
lret
clc
push
in
xchg
adc
pop
and
and
mov
dec
or
inc
jle
push
inc
ja
aas
mov
leave
addr16
and
xchg
dec
clc
inc
jmp
push
inc
scas
or
xchg
jno
jmp
test
and
pop
xchg
inc
sbb
popa
insb
cmp
sbb
xchg
loopne
mov
push
pop
xchg
sbb
xchg
loop
add
and
and
xchg
mov
aam
sbb
inc
mov
in
out
cmp
or
adc
int
fdivrl
add
out
pop
or
xor
adc
inc
adc
ljmp
add
add
dec
lods
in
adc
idiv
addr16
out
in
xchg
adc
int
sub
shrb
leave
sub
add
and
dec
push
in
repz
xor
fdivr
jo
mov
dec
sub
push
dec
aam
pop
fwait
push
aaa
and
aas
cmp
mov
jecxz
mov
lahf
mov
mov
add
sbb
xor
or
inc
cmp
adc
or
jge
mov
cmpb
mov
aas
dec
jle
mov
clc
mov
popf
bound
pop
sahf
mov
pop
ret
add
or
hlt
lds
mov
outsb
cmpsl
orl
push
sti
stos
xor
mov
cli
pushf
imul
fwait
lcall
shrb
push
add
push
sbb
dec
cmpsl
test
lods
in
xor
mov
int
into
cwtl
js
fldt
das
test
sbb
push
inc
loop
dec
je
iret
enter
push
mov
cmp
fwait
xchg
out
aas
movb
ja
mov
cli
and
lcall
out
pop
cltd
lret
scas
cmp
jl
js
faddl
fnstcw
xchg
pop
jmp
or
fistpl
inc
test
add
mov
inc
xchg
dec
cmp
dec
mov
push
bound
test
sub
mov
pushf
lods
adc
xchg
or
into
das
sbb
xchg
fmul
into
ret
jge
adc
xor
sti
adc
xchg
jno
cli
xor
xchg
xlat
lcall
jb
aam
jbe
xor
sbb
mov
das
pop
ret
xor
sub
cmc
sub
sbb
mov
dec
jne
push
xchg
ds
cmc
aas
xchg
adc
arpl
pushf
mov
fdivr
jp
sub
mov
and
add
call
adc
jns
and
mov
sbb
jne
inc
loopne
jle
push
inc
das
jp
fisttpll
push
les
popa
insb
and
lods
mov
xchg
jp
sbb
rcrl
add
popf
mov
ret
xor
jl
stos
cmpsl
mov
mov
out
lods
loop
outsl
mov
and
add
stc
out
pusha
dec
stos
xchg
test
sar
stos
cmp
fists
cmp
cli
push
mov
cmp
js
loop
mov
and
roll
jmp
ja
mov
adc
cmp
outsl
repz
pop
inc
inc
pop
loop
sbb
mov
adc
insl
loope
add
js
popa
orl
outsl
in
inc
mov
fs
pop
add
mov
sub
cltd
iret
and
lahf
xor
mov
jp
xchg
fdivl
aaa
jne
rol
in
andl
pushf
mov
test
pushf
push
ds
mov
mov
sub
mov
lret
std
les
dec
mov
mov
adc
push
test
cmp
mov
mov
add
jle
pop
ret
push
inc
jecxz
iret
xchg
outsb
es
scas
into
jmp
push
cmpb
clc
sbb
pop
jg
xchg
pop
or
rol
aad
bound
or
jle
test
inc
inc
clc
mov
out
lret
lret
popf
lea
pusha
sti
sbb
jo
fidivrl
push
xchg
mov
pop
insl
orl
mov
inc
inc
stc
push
ja
and
cmpsb
movsb
dec
lods
stos
fs
jle
imul
cmp
fnstcw
pushf
xchg
jae
and
or
ljmp
sbbb
and
sbb
pop
out
cmp
ljmp
xchg
mov
inc
or
sub
push
xorb
sahf
daa
push
xchg
xor
mov
repnz
imulb
movsl
je
sub
inc
aaa
adc
xor
xor
call
mov
inc
xchg
push
inc
fcomip
inc
loope
cs
testb
imulb
dec
and
pop
pop
hlt
add
fs
inc
gs
xor
pop
das
les
cmpsl
xor
hlt
fcoml
xchg
test
nop
add
repz
or
rcl
ljmp
pop
shlb
pop
dec
push
inc
mov
arpl
ret
aas
and
mov
lahf
add
cmpsb
rcrl
aad
andb
mov
int3
fs
test
movsl
and
sub
xchg
mov
es
inc
mov
les
or
sub
pop
jmp
add
cli
mov
fisttpll
insl
lods
repnz
loop
cmpl
pop
ljmp
mov
call
dec
divb
cmpl
sbb
dec
and
pop
xchg
fists
dec
xchg
jle
dec
pusha
out
dec
jp
divl
dec
mov
or
ds
cs
dec
insl
fwait
aad
jbe
mov
jbe
sti
add
mov
push
hlt
fnstenv
xor
mov
bound
testl
jnp
mov
inc
fstpt
pop
xor
fwait
mov
pushw
sbb
mov
mov
stc
mov
cmpsb
icebp
xchg
mov
std
imul
test
dec
sbb
scas
inc
popl
daa
mov
lret
shrb
mov
add
jp
pop
out
insl
jbe
nop
js
int
cli
dec
repz
aas
lds
aaa
pusha
pop
jno
jle
nop
jp
pop
adc
adc
push
test
mov
test
ret
pop
cld
push
cmp
stos
in
aas
xchg
enter
repnz
enter
lea
pop
pop
xor
ds
movsb
shlb
in
inc
fbld
push
cld
add
inc
insb
xor
inc
rcll
gs
js
pop
lahf
dec
test
cmp
push
xchg
jne
rcl
jne
stos
popf
ret
and
pop
inc
mov
xlat
addb
jo
mov
imul
jmp
sbb
shrl
inc
test
mov
div
jle
test
add
dec
je
or
fldenv
mov
pop
pushf
sbb
cmp
ja
push
lret
mov
pop
add
lcall
cmp
mov
xchg
stos
cs
push
mov
lret
insb
inc
xchg
adc
jecxz
xchg
mov
call
dec
neg
pushf
inc
or
rclb
fldcw
ljmp
orl
push
fsubl
sub
jne
inc
xor
or
dec
xchg
fistl
pop
or
or
div
push
pop
je
out
xchg
dec
xchg
in
sub
fnstsw
sbb
fcoml
in
pop
imul
xchg
jns
inc
xchg
dec
pop
mov
adc
dec
fbstp
dec
xchg
fisubl
cmpsl
push
xchg
rorb
pop
popf
pop
dec
mov
fstenv
jno
jmp
fbstp
mulb
bound
xchg
or
mov
sbb
mov
sbb
leave
cmc
das
push
in
js
add
imull
sbb
and
mov
jecxz
cmpsl
inc
xchg
lea
lock
fidivs
xchg
jne
popa
xchg
in
push
stc
jle
fs
inc
add
aam
fsubrl
sbb
cli
pop
xchg
sbb
or
and
scas
mov
notl
cmpsl
add
pop
ljmp
ljmp
inc
adc
sti
push
negl
adc
daa
imul
lea
inc
mov
imul
repnz
das
movsl
hlt
cmp
leave
fcoml
xchg
push
jge
insl
aas
aad
rcrb
sahf
in
aam
andl
inc
jae
or
enter
dec
xor
scas
idivb
or
dec
add
insl
daa
jns
mov
xchg
mov
push
lods
mov
jp
not
lret
or
jle
outsb
aaa
fldenv
mov
sub
push
pop
jns
ret
jne
loop
inc
insl
sub
in
mov
or
ja
push
imul
cmc
or
mov
pop
adc
pop
and
out
sub
mov
adc
rorb
mov
mov
xchg
pop
jo
jns
mov
dec
sahf
mov
arpl
lock
fstl
int3
jl
add
xchg
shl
scas
sbb
pop
push
jmp
dec
lds
dec
cli
pop
fdivrl
nop
adc
adc
or
lret
imul
xor
mov
xor
push
addr16
xor
adc
dec
xchg
popa
jo
bound
or
xchg
in
jo
and
ret
sbb
jle
inc
leave
sub
adc
mov
xor
cmp
enter
mov
aam
out
jbe
xchg
ljmp
xchg
push
jo
mov
sbb
and
xchg
xchg
cmp
data16
incb
mov
andl
jbe
movl
out
cwtl
or
jmp
add
mov
xor
addr16
xlat
mov
xchg
enter
fwait
pop
jbe
int3
cmpsb
out
fdivl
xor
sbb
sbb
inc
mov
loopne
int
mov
jl
imul
mov
and
loop
sbb
adc
std
inc
aad
mov
pop
lret
ret
inc
add
xor
mov
test
jmp
adc
lcall
push
pop
mov
sbb
dec
loopne
mov
movsb
movsl
out
ficomps
add
leave
xchg
fisubrs
pusha
add
mov
testb
divb
jmp
lahf
stos
cltd
adc
mov
neg
pop
cmp
imul
cmpsl
pop
jb
mov
mov
cmpsb
lods
lret
push
push
inc
and
enter
sbb
cmp
dec
add
pop
ds
sub
dec
incb
shl
mov
icebp
insl
adc
mov
ss
mov
hlt
ds
in
mov
data16
cmpsb
add
test
aad
stos
daa
and
popa
fwait
xor
stos
fisubs
leave
sub
addr16
ret
pop
xchg
call
clc
test
in
rcrl
rclw
or
jmp
das
pop
lahf
xchg
push
push
or
sbb
lock
sub
mov
mov
scas
or
sub
jmp
lods
pop
stos
inc
popa
mov
jecxz
repz
out
xor
test
fidivrl
loopne
stos
add
and
rcll
jl
ret
jecxz
mov
leave
hlt
stos
or
popa
testb
push
sbb
ret
std
and
in
pop
scas
xchg
decl
pop
jl
rcl
ret
lock
retw
imul
icebp
pushf
das
pushf
pop
fcomps
dec
xchg
pop
xchg
mov
stos
std
insb
ljmp
xor
sbb
hlt
push
mov
dec
in
push
xor
dec
jno
mov
stos
push
mov
and
sbbb
int
add
std
push
test
popf
lahf
mov
outsb
mov
notb
or
jecxz
inc
ljmp
xor
adc
fs
or
addr16
or
add
nop
sub
lahf
mov
mov
mov
pop
dec
xchg
sub
insl
lea
xchg
xchg
adc
jae
mov
clc
xchg
inc
pop
mov
dec
outsl
insl
sub
or
push
divl
punpckhwd
fsubrs
ss
aaa
mov
pusha
or
rolb
mov
sub
rcrb
into
pop
inc
cli
mov
or
insl
lds
test
add
cmp
lahf
js
dec
dec
rcrb
push
inc
data16
inc
mov
rclb
cmp
aaa
mov
push
mov
test
mov
adc
dec
out
mov
adc
pop
or
xlat
shl
cmp
cmp
scas
mov
sub
mov
sub
xor
testl
fbld
add
or
data16
enter
enter
or
aam
sbb
adc
dec
stos
cmp
mov
into
insl
inc
push
mov
xor
jo
jp
mov
cmc
popf
dec
shll
mov
imul
cmp
cmpsl
cltd
cmp
stos
int3
lret
mov
or
scas
dec
cmp
cmc
ret
cmp
popa
nop
sbb
pop
pop
cwtl
out
add
inc
sub
push
pop
nop
mov
pusha
mov
cmp
pop
repz
mov
pop
hlt
sbb
js
mov
out
adc
jnp
pop
push
push
push
pop
outsb
pop
or
jbe
pusha
xchg
scas
mov
stos
jg
sub
inc
pop
xchg
lret
xchg
std
aas
lahf
and
sub
fcompp
push
ja
adc
mov
mov
out
push
gs
pop
bound
push
mov
mov
insl
dec
sbb
data16
jae
je
mov
mov
jle
adc
je
test
pop
adc
ret
int
sub
lods
idivb
in
ss
outsb
repnz
das
adc
ret
ss
xchg
jo
cmp
add
dec
outsl
sbbb
loopne
fsubrs
lds
fs
das
outsb
adc
push
nop
mov
sbb
bswap
mov
sbb
mov
pop
pop
fwait
jp
insb
out
call
lea
lods
ja,pt
jno
sbb
xchg
dec
insb
push
mov
test
push
dec
in
call
mov
pop
jg
js
shrl
lret
dec
out
jmp
inc
and
xor
repz
xor
lret
or
faddl
or
push
out
imul
lods
movb
add
sbb
icebp
jle
out
dec
roll
pop
aad
das
and
out
lahf
sub
xchg
ss
xor
dec
mov
inc
mov
adc
adc
in
inc
iret
imul
rcrl
insb
push
je
mov
cmpsb
lcall
fildl
insl
jo
push
pop
push
push
flds
pusha
loop
ljmp
dec
adc
push
and
dec
addl
mov
imul
mov
xor
mov
xor
fimull
push
aaa
movsb
xor
insb
sbb
inc
adc
cmp
stos
jo
cwtl
in
adc
movsl
out
fidivrl
roll
aam
shlb
faddp
and
pop
push
xchg
lcall
fimull
sub
mov
push
mov
fstpl
pushf
adc
mov
or
sub
test
pop
sbb
in
test
call
mov
sub
cmp
and
in
sbb
dec
xchg
pop
jge
mov
xchg
imul
fbld
xor
into
fldenv
notl
mov
insl
sub
lret
les
outsb
je
movsl
enter
jns
loope
or
mov
bound
and
dec
sbb
ljmp
push
jbe
lods
or
scas
mov
int
jmp
aaa
mov
adc
mov
pop
jno
inc
dec
push
xchg
mov
loope
inc
jo
adc
out
sub
mov
aam
cld
in
mov
and
push
adc
imulb
fdivl
icebp
shrl
xchg
jo
jle
lods
push
pop
or
push
and
pop
cli
clc
or
outsb
enter
push
mov
mov
jmp
pushf
jmp
scas
adc
sbb
cmp
in
xor
sahf
pop
mov
scas
push
cmp
fstpl
cmp
push
lret
and
inc
scas
or
mov
mov
mov
test
ja
sub
lcall
int3
dec
ret
xchg
sbb
adc
enter
mov
cs
or
push
sub
mov
insl
sahf
sub
add
inc
or
sbb
pop
or
lcall
fisttpl
jmp
rolb
push
xchg
mov
mov
loop
mov
icebp
dec
insl
sub
popa
aas
mov
sbb
push
lock
mov
fistl
mov
mov
jnp
adc
in
enter
in
jo
add
lret
cmp
xor
and
jno
stos
std
in
in
mov
dec
or
fdiv
pop
jmp
test
stos
or
mov
jno
into
cmp
in
call
jne
cld
dec
out
and
roll
nop
jle
pop
and
clc
dec
lahf
mov
sbb
cmp
cld
mov
lcall
push
add
mov
adc
adc
mov
jecxz
fwait
idivb
push
jecxz
int3
jmp
dec
leave
mov
inc
mov
cmp
sbbb
jl
pop
add
shlb
cmp
arpl
popf
sub
aam
sub
popa
cmp
loopne
fwait
mov
jmp
lods
jbe
repz
ljmp
jp
cmp
mov
out
andb
fstps
add
xor
lock
mov
cli
jns
adc
sub
call
jae
into
fnstenv
hlt
bnd
push
lcall
fmul
push
xchg
rsqrtps
or
sahf
test
cs
mov
scas
push
daa
ds
mov
data16
xchg
aam
push
in
das
dec
fiadds
and
movsl
jbe
cmp
cmp
stos
call
sbb
js
add
outsb
mov
in
push
sub
call
fcoml
xchg
mov
push
insl
loopne
dec
or
sbb
data16
pop
inc
xchg
fimull
mov
ds
mov
loope
loop
or
sub
fildl
repnz
fimuls
pop
add
sub
mov
aam
in
adc
jno
sub
js
addl
lods
pusha
in
cmp
stos
push
pop
loope
cmp
or
adc
lcall
stos
out
adc
jae
and
and
mov
in
pusha
push
in
xchg
xchg
push
mov
inc
ret
call
pop
mov
scas
push
push
fnstenv
or
dec
das
jge
in
outsb
mov
sub
push
jae
sti
cmpsb
or
jns
cwtl
dec
pop
fcomps
loopne
lock
icebp
hlt
push
cmp
test
jbe
lret
pop
and
adc
fnstcw
mov
sbb
sub
pop
sub
push
jbe
ja
mov
xor
scas
insb
adc
pop
jnp
xchg
popf
and
sub
xchg
mov
inc
cmpsl
push
mov
and
mov
mov
pop
les
xor
dec
push
push
sti
jmp
push
push
data16
loopne
push
js
pusha
fistpll
mov
inc
push
das
jmp
cwtl
aaa
cli
add
add
sub
ss
popf
or
cmpsl
push
lret
xchg
and
inc
popa
xor
mov
cmpsl
adc
arpl
push
stc
sub
fwait
pop
mov
mov
lret
inc
cmc
cld
les
mov
cmp
or
dec
dec
test
shll
lods
int3
nop
call
jo
jmp
xor
fs
cwtl
aam
dec
push
xchg
xchg
call
or
xchg
enter
ljmp
les
sub
ret
adc
inc
or
out
xor
ret
dec
adc
cmp
push
test
cwtl
xchg
xlat
adc
mov
stc
loopne
xchg
imul
push
in
jae
pusha
repz
push
sbb
movsl
push
nop
dec
cmp
push
mov
stos
or
testl
fs
jle
add
cmc
or
cmp
mov
call
cltd
sbb
addl
aaa
repnz
xchg
sar
shrl
addr16
push
addl
mov
jb
pmaxsw
sbb
xor
xor
fdivl
xchg
jae
rorl
mov
inc
aam
push
repz
ret
adc
cmp
push
out
cli
in
pop
push
cmp
pop
out
ljmp
negb
das
andb
mov
js
mov
sub
mov
jnp
loope
mov
in
sti
jnp
sarl
push
popa
in
mov
out
push
adcl
popl
out
addr16
xchg
adc
push
jecxz
mov
pop
push
jns
sub
jle
ret
pop
jge
dec
insb
jbe
das
add
popa
mov
jl
rcrb
and
dec
sbb
bnd
outsl
or
cli
inc
imul
iret
pop
addb
sbb
xchg
bound
hlt
hlt
push
and
adc
cli
xor
cmp
mov
adc
cli
inc
mov
test
push
dec
arpl
outsb
mov
jno
xchg
lds
out
dec
push
out
xlat
dec
adc
shll
push
dec
and
jae
popl
popf
inc
cmpsl
pop
test
sbb
push
sub
mov
out
ret
jmp
add
jmp
int
mov
sarl
mov
in
clc
mov
pop
popa
aaa
jae
and
rorb
jne
adc
mov
xchg
mov
test
push
jb
cld
cmc
sahf
jp
inc
mov
imul
and
push
inc
in
lock
pop
lcall
cmpsl
jl
xor
cmp
pop
push
scas
mov
pop
push
stc
xchg
lret
pop
lret
xor
cs
sahf
roll
sti
xchg
les
jbe
pusha
data16
sbb
push
lret
xor
cmc
hlt
call
pop
jecxz
fs
in
cmpsb
in
call
mov
aam
cmp
add
shlb
xchg
and
inc
out
dec
add
adc
dec
push
jl
leave
dec
ret
andb
mov
xor
push
call
jae
push
popa
sub
jg
ljmp
adcb
andb
lea
or
lock
pushf
jbe
push
push
dec
adc
cmp
adcl
cwtl
cmpsl
push
sbb
dec
push
mov
aas
test
fisttps
pop
sarb
mov
cmp
jl
pop
subb
push
dec
imul
xchg
push
mov
gs
add
mov
xchg
mov
adc
fs
into
jae
adc
xor
inc
shlb
movl
pop
jle
shr
jecxz
std
dec
or
sub
pop
cltd
mov
inc
sbb
jmp
std
popf
xor
xchg
aaa
xchg
lcall
or
push
out
cld
adc
adc
mov
xchg
cmp
mov
sbb
bsf
jg
sbb
int3
mov
adc
imul
sbb
cmp
jno
mov
js
pop
jle
lea
adc
es
popf
add
cmp
mov
sbb
inc
scas
or
popf
popa
ds
mov
pop
xlat
fwait
dec
pop
cmp
mov
stos
dec
mov
aam
inc
mov
cwtl
sbb
mov
rorb
push
adc
fadds
jae
in
loope
mov
cmp
stc
je
cmc
in
xor
pop
fsubr
sbb
cvtps2pi
leave
inc
mov
dec
cmp
or
xchg
aaa
dec
scas
jmp
xor
adc
popf
call
dec
xor
xor
rolb
insl
adc
jp
mov
and
adc
push
loopne
adc
adc
fdivp
lcall
fldcw
cmp
repz
movsb
jmp
mov
cmc
add
cld
imul
lods
cmp
jg
add
dec
xchg
rcll
dec
roll
outsb
xor
xchg
ret
cmp
push
mov
ds
pop
add
xchg
sub
add
mov
push
and
lea
pop
push
daa
mov
push
ds
sbb
add
fs
fcmovnb
icebp
and
fnstsw
arpl
sub
xchg
lcall
mov
lods
mov
pop
fisubrs
outsb
mov
fnstenv
mov
jne
mov
pop
addl
pop
pop
xchg
imull
xor
cltd
sbb
adc
sub
inc
imul
lock
jne
cwtl
rcrl
push
outsb
mov
inc
aam
pop
lds
add
out
inc
lds
adc
je
inc
mov
and
mov
jl
pop
gs
stos
je
push
ret
ds
mov
ret
loopne
rcpps
fs
bound
jp
or
push
dec
push
rcrb
push
das
jnp
cmp
and
jp
dec
pop
add
jg
scas
mov
jp
mov
mov
shll
cmc
movl
repz
push
mov
xchg
push
stc
orb
rcrw
sub
mov
fcos
sub
pop
pop
mov
cmp
and
repnz
ret
insl
inc
imul
roll
mov
or
push
mov
test
call
lret
loop
cld
push
cld
sbb
mov
mov
iret
scas
inc
js
inc
shrb
or
pushf
xchg
and
outsl
pop
mov
mov
fsubs
rcl
add
ss
imul
es
aam
gs
sahf
pop
jnp
lods
cmp
rorl
sub
popa
aaa
dec
testl
mov
in
push
aas
mov
loope
loope
rcll
jge
or
aad
imul
cmp
leave
cli
sub
xlat
and
scas
cmp
repz
sbb
mov
jmp
stos
lods
inc
test
cmc
sbb
mov
loop
andb
jl
lds
inc
mov
xchg
iret
pop
arpl
push
hlt
rolb
gs
cs
es
sub
bound
dec
mov
add
lods
xor
sbb
sbb
scas
test
jle
stos
mov
pop
out
sbb
fnstenv
pushl
fwait
jp
add
push
mov
add
cmp
push
inc
jle
adc
ja
testb
lcall
outsl
test
pop
lahf
clc
imul
in
or
es
jp
xlat
xlat
in
lcall
aad
mov
mov
sbb
mov
or
out
rcll
cmovns
repnz
pop
pusha
xlat
sbb
push
push
sbb
icebp
das
scas
and
push
mov
add
adc
xchg
fwait
dec
jo
pusha
shll
xor
jbe
jbe
jp
mov
insl
jge
adcl
xchg
insb
ljmp
ljmp
stc
add
into
jb
movsb
sbb
xchg
jne
popf
cmp
mov
insb
push
jp
ror
pop
mov
aam
mov
push
dec
jp
lret
sahf
xlat
daa
ret
push
cld
nop
test
sub
xor
jmp
outsl
js
pop
rorl
mov
stos
jl
ja
sub
mov
ret
nop
lea
ljmp
adc
arpl
sbb
insb
std
push
inc
xor
cmp
fdivrl
cli
roll
pop
scas
dec
mov
rclb
loopne
dec
int
jmp
cmpsl
xchg
fistpll
mov
mov
xchg
les
jle
push
mov
push
push
fidivs
inc
push
aad
inc
jne
pushf
mov
arpl
and
pop
lret
enter
jbe
sub
xlat
pop
pushf
ljmp
inc
and
sbb
adc
pop
outsb
test
mov
jbe
mov
aad
add
mov
mov
add
lods
sbb
mov
or
repnz
loopne
inc
scas
or
sub
sub
adc
cmp
psubw
lcall
ljmp
jg
and
pop
daa
cs
or
addb
pop
mov
mov
aad
test
sub
imul
xchg
sti
pop
xchg
mov
inc
cmpsl
fadd
scas
jae
insb
inc
cmp
or
repz
add
ds
test
push
rclb
fs
jb
push
cld
pop
jns
and
sbb
jmp
je
popf
mov
clc
idivl
je
mov
aad
scas
mov
mov
loopne
popf
clc
daa
xchg
testl
jae
push
imul
sahf
adc
add
jp
push
int
xchg
rcll
cmpsl
fdivrp
adc
push
ds
jns
decb
clc
enter
jne
mov
push
mov
inc
jb
icebp
addr16
test
lock
mov
add
add
outsl
in
mov
leave
test
dec
ret
js
icebp
adc
ffreep
fcomp
lcall
inc
inc
cmp
push
mov
push
add
es
pop
xor
stos
dec
bound
in
fldt
dec
adc
sub
popf
or
xlat
rol
mov
cmp
lds
dec
sbb
cmp
mov
xorl
pop
aad
mov
cs
inc
cmpsb
mov
jl
jb
pop
and
sub
dec
shlb
bound
inc
shl
and
sbbb
aaa
xor
and
or
sbb
popa
mov
push
cmp
lret
fcomi
mov
xor
data16
mov
pop
int3
push
cmp
push
add
shlb
cld
jo
adc
add
pusha
inc
sbb
xor
or
dec
push
sbb
fs
rcl
or
clc
daa
mov
push
daa
mov
or
jns
push
mov
stc
sarb
data16
sbbb
rcr
sbb
push
cmp
fstp
xlat
pusha
jb
ljmp
jne
incl
std
mov
sub
xlat
addr16
movsl
insb
fimuls
sahf
or
loop
adc
pop
xor
mov
xchg
cmp
mov
mov
sarl
mov
xchg
repnz
dec
mov
in
mov
push
pop
pop
dec
pushf
pop
mov
sbb
sub
aad
dec
imul
push
dec
dec
sbb
ret
hlt
pop
inc
add
xor
jo
subl
scas
and
int3
imul
roll
or
push
cltd
ret
adc
cmp
dec
ds
push
out
dec
cltd
shlb
lahf
fistl
pop
jg
xchg
xor
nop
leave
ss
outsb
cmpsb
pop
sbb
push
loope
push
mov
sbb
mov
xchg
lahf
and
adc
inc
hlt
jne
sub
arpl
jne
test
imul
adc
cmp
loop
mov
pop
push
ds
pop
dec
loop
imul
aas
out
arpl
sbb
inc
fwait
mov
xlat
or
sbb
insb
outsb
stos
dec
cwtl
addr16
jl
mov
lret
daa
test
push
sbb
in
arpl
xor
sbb
cld
arpl
xchg
xchg
add
xchg
dec
loope
lods
jg
dec
lock
or
sub
jg
stc
add
xor
shll
movsl
xor
shr
or
cli
adc
jge
test
xor
repnz
mov
inc
mov
mov
push
push
arpl
or
xchg
cmp
sub
adc
clc
popa
dec
or
mov
add
insb
mov
mov
mov
shlb
fs
in
pop
mov
sbb
jnp
cmc
fdiv
pop
xchg
mov
mov
lahf
inc
stos
loopne
or
push
daa
into
rorb
cmp
push
push
xchg
jo
popa
js
loope
fs
aaa
loop
pop
imul
lods
pop
cltd
imul
jnp
mov
cld
out
xchg
xor
pop
bound
outsb
stc
sbb
add
lock
push
and
xchg
xchg
mov
sbb
in
xchg
repz
das
xchg
mov
xchg
add
mov
add
or
mov
mov
jnp
jmp
push
mov
push
sbb
fwait
aaa
mov
je
or
lds
into
jb
leave
pop
mov
js
mov
pop
decl
jg
test
or
push
mov
sub
shr
daa
stos
add
fnstcw
jne
fisttps
out
cmpb
sub
lahf
adc
mov
out
pop
repnz
push
je
andl
icebp
mov
bound
dec
imulb
jno
push
jle
pop
adc
lahf
addb
sbb
addr16
adc
nop
ret
aam
fldl
fldt
cmp
shrl
and
or
aaa
cmpsb
pop
int
int
dec
push
push
xor
pusha
jmp
dec
push
sub
out
or
or
popl
fstpl
aaa
xchg
clc
nop
ffree
xor
outsb
xor
pop
nop
mov
xchg
mov
out
in
shrl
push
push
sbb
sub
fwait
mov
in
ss
lds
les
orb
in
mov
mov
adc
and
sub
ja
mov
sub
cmp
adc
mov
mov
jp
xor
sbb
jae
das
xchg
add
pop
push
cmp
cmp
inc
test
dec
lock
add
cld
dec
lods
rorl
mov
ret
lcall
ja
lds
sti
mov
dec
mov
jo
push
mov
paddusw
arpl
sti
leave
dec
mov
dec
lds
outsb
pop
fldcw
mov
test
gs
mov
pop
cld
or
add
lea
pop
add
xchg
sti
sbb
lds
jmp
sub
cli
fldcw
cltd
in
scas
cmpb
fstpt
cmpl
sub
cmpsb
cmp
loopne
movsb
ds
inc
or
push
insb
cmp
fadds
jb
lds
sub
xor
jg
mov
push
jge
test
fdivrl
mov
jnp
jp
xchg
xchg
sub
call
je
shl
scas
pop
cld
jb
movsl
mov
xor
mov
pop
jns
pop
leave
sub
in
cmp
xor
out
lret
mov
adc
ret
push
dec
push
inc
mov
jno
lods
sar
fadds
std
or
pop
icebp
adc
shll
pop
jnp
mov
cli
outsb
addb
lods
pop
sbb
pop
push
xor
jo
xor
dec
xchg
rorb
dec
adc
nop
stc
nop
adcb
pop
out
add
cmp
inc
sti
inc
cmp
mov
add
into
iret
in
or
cmp
cmp
mov
jnp
or
ret
push
ja
fadds
mov
inc
jb
jb
adc
mov
andb
push
adc
push
pop
xchg
mov
jns
mov
cmpsl
movsb
cwtl
insb
adc
xor
push
enter
dec
dec
mov
and
or
outsl
pop
sti
inc
mov
imul
inc
inc
shll
sbb
xor
cltd
lret
adc
mov
cmpsl
in
dec
stc
mov
mov
ficoml
push
mov
and
idivb
sarb
rcr
mov
mov
and
lahf
pop
mov
shl
or
enter
ss
pop
popa
and
ret
add
movsl
push
cmp
xchg
xchg
xor
pop
jmp
push
rol
pop
test
aad
xchg
rcrb
data16
daa
pop
jmp
jge
mov
bound
in
mov
jl
mov
fmuls
cmp
fcmovne
shlb
and
lret
dec
hlt
push
xlat
sbb
inc
push
sub
hlt
in
push
fs
mov
cli
inc
or
lds
cwtl
in
sub
push
push
shlb
xchg
movsb
xor
in
jmp
mov
push
pop
lods
lret
je
jns
adc
addr16
mov
mov
out
or
mov
xor
pop
mov
cltd
push
js
cltd
mov
xchg
daa
cmc
xchg
jo
jnp
int
jp
adc
movsb
cmp
pop
xor
push
xor
fsubrl
test
pushf
pop
xlat
jle
and
dec
push
sarb
mov
stos
test
pop
pop
aaa
dec
ret
sub
scas
dec
jbe
inc
repz
adc
addr16
mov
subb
hlt
cltd
pop
dec
iret
in
cld
and
sbbl
mov
stos
dec
xor
jmp
or
push
iret
lret
gs
ja
stos
cmp
in
mov
mov
and
loop
mov
push
out
shrb
mov
pop
rol
pop
sbbl
and
loopne
addl
add
mov
sub
and
in
jbe
leave
adc
pop
mov
jae
test
sbb
lahf
xor
dec
adc
shll
mov
adc
push
imul
int3
leave
fistl
rcrb
pop
fcmovu
popa
lea
push
jmp
sub
sbbb
xorl
arpl
leave
shlb
push
out
jbe
pop
inc
cltd
clc
push
pop
add
mov
mov
xchg
mov
add
mov
adc
sahf
adc
jae
inc
shrl
enter
imul
cmc
or
add
scas
iret
clc
push
dec
fmuls
inc
cmp
jnp
test
mov
cmp
cmp
push
push
mov
or
out
icebp
xor
aam
js
sbb
or
int3
in
pop
cmc
int3
sarl
jg
mov
sub
pop
std
xor
ja
ficompl
lret
push
bound
cmp
ret
aas
jmp
xor
movl
pop
jg
mov
mov
loope
inc
hlt
inc
cmp
push
pop
push
push
and
xchg
push
scas
mov
xchg
mov
xor
pop
notb
sbb
mov
sub
imul
decb
or
insl
test
hlt
mov
jl
movsb
inc
push
xor
sub
add
sub
std
inc
mov
mov
adc
push
inc
pop
lahf
daa
mov
add
or
sbb
enter
mov
sub
js
xor
pop
or
ss
jnp
jo
mov
or
adc
call
xchg
adc
das
movsb
out
rorl
dec
mov
insl
or
or
fsts
dec
xchg
inc
icebp
cmp
push
lretw
popa
dec
mulb
pop
hlt
jne
jge
and
xor
pop
ja
stc
sbb
mov
daa
test
fsubl
or
push
jne
sub
movsb
dec
stos
shlb
das
fidivrl
xchg
into
movsl
jle
push
push
jb
sahf
inc
fisttps
in
mull
int3
stos
test
pushf
push
push
jp
xchg
sahf
sbb
adc
lods
xor
rcll
mov
gs
mov
push
adc
pop
xchg
jb
mov
and
inc
sub
cmp
enter
lret
cmp
mov
cmpxchg
sti
aaa
out
daa
sbb
inc
pop
enter
sarb
mov
or
fmuls
push
test
mov
loopne
in
cmp
sub
out
or
insl
ss
jmp
mov
movsb
xchg
in
jl
push
iret
xchg
fidivrs
out
fsts
cmpl
imul
popf
inc
addr16
push
xlat
pop
je
rcll
ret
je
je
ljmp
xor
inc
jae
push
rorb
aad
or
xchg
fdiv
rorl
sarb
lret
mov
pop
fadd
dec
sti
lods
or
bound
sbb
sahf
dec
xor
test
js
push
adc
push
sbb
xchg
ja
cmc
push
inc
cmp
outsb
and
xchg
or
adc
jmp
pushf
cli
cli
pop
hlt
lret
lret
and
scas
je
int3
xchg
aad
pop
insl
ret
adc
movsl
push
popa
mov
or
dec
fdivr
push
push
test
test
or
cmp
or
ficompl
mov
rcrl
dec
inc
inc
or
cmpsb
lcall
or
in
lahf
pushf
mov
pop
cmp
xchg
fwait
cmp
mov
gs
fwait
fwait
pop
es
roll
push
mov
mov
out
xor
xchg
into
mov
or
mov
dec
fistps
mov
int
pop
fisttpll
inc
pop
xor
jle
push
xchg
leave
out
jmp
dec
pop
aad
and
js
adc
cld
test
sbb
pop
out
arpl
aam
addr16
into
ljmp
adc
inc
popf
mov
mov
in
int
rclb
rclb
ret
mov
xor
rolb
adc
popa
mov
jp
in
aad
ret
jo
shrl
mov
loopne
loopne
push
xchg
stc
fiaddl
ret
push
mov
mov
add
mov
test
hlt
test
mov
inc
imul
push
shl
fisubrl
cwtl
loop
std
testb
ret
adc
inc
mov
jns
out
adc
cli
xchg
psubusw
subb
adc
and
pushf
imul
out
gs
mov
inc
cmp
sti
mov
in
testl
call
jecxz
das
jl
sub
adc
data16
cmp
inc
and
insb
or
sub
and
out
jl
dec
lahf
sub
jecxz
fidivrs
xchg
push
shll
sbb
or
js
ret
sub
popf
xor
int
fnsave
test
mov
and
pop
pop
or
iret
cs
mov
sarb
shl
cmp
push
xchg
mov
aam
mov
mov
add
jbe
es
push
pop
fwait
mov
and
cs
out
loopne,pn
cli
and
sahf
je
sahf
jle
test
mov
out
mov
jno
iret
data16
cmp
stos
cmp
mov
clc
mov
jne
cmp
jmp
mulb
out
es
aas
into
jno
fcmovne
add
das
inc
pop
xchg
aam
dec
inc
std
fbstp
mov
in
push
jo
clc
jnp
mov
std
xor
cli
mov
xchg
jecxz
inc
into
arpl
mov
mov
pop
mov
outsl
je
cltd
jb
sub
jecxz
jmp
data16
mov
adc
lcall
aas
push
or
add
cs
les
insl
pop
movsl
shr
insb
in
mov
sub
add
out
lcall
jne
mov
cmp
or
xchg
das
insl
arpl
mov
inc
cmp
fadds
popl
dec
movsb
mov
mov
and
or
rcr
adc
mov
ja
jg
inc
data16
xchg
pop
push
cmpsl
pop
lods
xchg
incb
adc
push
push
mov
lods
shlb
outsl
ficompl
mov
push
mov
repz
inc
dec
cld
imul
lahf
cmp
cmp
out
inc
sbb
add
lahf
addr16
xchg
pop
jg
ret
in
mov
lret
dec
icebp
loopne
push
mov
dec
and
sub
inc
arpl
cld
mov
aas
pop
ret
sub
popf
pop
add
add
jns
or
ficoms
mov
pop
inc
xlat
nop
inc
mov
gs
jle
ja
addr16
adc
xor
les
adc
dec
cmpl
mov
mov
inc
fwait
std
jne
iret
cmpsb
lds
fldt
dec
dec
and
cwtl
and
adcb
ret
outsl
lahf
dec
add
push
in
scas
mov
aad
cmpsb
add
push
sub
mov
xchg
and
lret
stos
dec
xor
mov
insl
jbe
add
push
loopne,pt
and
mov
fs
mov
push
test
es
fwait
push
das
pusha
jns
sbb
das
adc
aad
or
mov
sub
jp
mov
call
int3
add
cmp
in
sbb
les
aad
cltd
bound
xchg
lea
push
dec
push
mov
pop
stos
mov
cmp
sub
mov
addr16
aaa
sbb
lea
ret
xor
adc
add
inc
loop
pop
aas
cwtl
inc
call
loop
lds
adc
jp
and
popf
movsl
dec
lret
mov
fldenv
pop
xchg
xchg
mov
cltd
xor
repz
mov
rolb
pop
adc
xor
xchg
xchg
fs
cs
int
sbb
leave
fucomi
sub
loop
int3
mov
inc
jno
ja
je
fldt
nop
add
lcall
sbb
push
cmp
push
inc
jbe
or
cmpsl
push
shlb
cmpsb
sbb
xor
int
fstpt
add
and
cld
addl
imul
outsl
adc
icebp
push
add
lret
push
jno
mov
sub
mov
add
xor
jnp
cld
in
lds
in
inc
repz
fdivl
ljmp
mov
xor
jmp
int3
es
add
jae
cltd
jns
sahf
xor
mov
cld
outsl
xchg
pop
push
outsb
and
sbb
das
dec
test
addr16
add
add
add
lahf
hlt
xchg
and
lcall
inc
shlb
ljmp
out
outsl
cmp
cmp
mov
and
mov
sti
pop
shl
outsl
adc
push
sbb
pop
jno
movsb
cli
inc
dec
cli
and
hlt
les
sub
std
jbe
or
lret
dec
lock
sahf
leave
sbb
or
aam
push
call
mov
icebp
sti
int
push
out
data16
push
iret
jae
push
shlb
aas
aas
adc
push
rclb
xor
lret
cltd
and
jecxz
stos
cmp
dec
negb
push
outsl
mov
mov
aad
xor
movsb
repz
dec
push
xor
mov
fdivs
cmpsl
cltd
call
fldenv
repnz
push
push
test
sub
cld
cwtl
test
test
mov
add
jns
rol
pusha
add
popa
mov
jl
or
xchg
nop
dec
outsl
jbe
sbb
shll
add
dec
insl
jb
push
mov
xor
aaa
sarb
sub
inc
hlt
arpl
inc
cmp
imul
insb
insb
mov
mov
idiv
cmp
jo
adc
xor
push
xchg
aad
icebp
clc
into
cmpsb
cmp
enter
and
outsb
xchg
gs
cmpsb
jp
inc
add
dec
je
xlat
test
xor
movsb
mov
call
pop
ljmp
fcmovb
sub
and
outsb
pop
popf
out
inc
xchg
into
mov
mov
pusha
gs
gs
inc
xorb
jnp
jae
dec
cld
stos
dec
sbbb
cmp
das
add
dec
imul
outsl
pop
ds
sub
in
inc
dec
add
shrl
sbb
loop
dec
sub
jl
adc
test
push
sbb
and
popf
enter
mov
call
int3
mov
aam
cmp
xchg
xchg
rolb
add
cmp
xchg
xor
inc
sahf
scas
repz
mov
sub
xor
mov
xchg
repz
and
lds
rcl
fmul
mov
mov
pop
cmc
mov
out
cld
mov
cmpsl
inc
daa
push
jnp
lods
adc
pop
rcl
inc
pop
daa
xor
mov
cmpsl
sub
ret
scas
popa
rclb
dec
or
mov
jbe
adc
cmpsl
xlat
push
mov
push
push
inc
lahf
sbb
pop
imul
dec
int3
loop
cs
call
mov
ret
push
les
je
cld
push
push
or
or
inc
pop
push
cmovne
test
xchg
jmp
dec
pop
dec
cmp
cmpsl
push
insb
mov
jp
cmpsl
fdivrl
add
das
dec
push
xlat
jecxz
lds
leave
mov
imul
mov
sub
and
sar
and
imul
adc
sub
imul
movl
adc
add
inc
xchg
dec
test
clc
add
call
pop
inc
jne
push
movsb
cmp
xlat
pop
mov
xchg
dec
dec
lea
dec
cmc
fst
scas
xchg
notb
sti
gs
sbb
add
scas
insb
jl
xor
xchg
xchg
pop
mov
or
sbb
push
in
inc
mov
fs
cmp
scas
sub
loop
push
fimull
lret
fwait
insl
adc
xchg
fnstcw
imul
cld
iret
mov
jmp
int
mov
mov
mov
mov
test
decb
je
sub
inc
xchg
rcll
and
je
jmpw
imul
mov
inc
nop
int3
hlt
sahf
add
sbb
les
cmpsl
xchg
test
mov
push
xchg
or
sub
xor
inc
lcall
pop
iret
mov
sbb
iret
bound
in
mov
jmp
sbb
insb
inc
ss
imul
aad
adc
push
negb
es
jns
jbe
push
bound
pop
mov
pop
imul
adc
scas
test
jns
mov
adc
imull
sbb
mov
dec
cmp
pop
push
cmp
loope
jg
push
rol
mov
test
or
test
pop
fwait
push
jns
pop
orb
jbe
mov
arpl
es
les
push
adc
mov
push
adc
imul
fs
aas
psrlq
mov
outsl
jb
mov
enter
mov
inc
dec
xorb
mov
lock
push
sub
cmp
xchg
in
idiv
repz
fcompl
test
arpl
loopne
mov
push
addl
test
cmp
jp
scas
out
not
adc
pop
ret
cmpb
mov
scas
inc
outsl
push
mov
inc
mov
in
push
dec
adc
push
cmpl
shr
or
loope
lods
push
arpl
add
jecxz
cmp
fstl
fwait
js
jle
xlat
cmp
xor
aas
pop
sbb
xor
subb
lds
lock
mov
icebp
push
mov
inc
jmp
in
jne
mov
or
cli
mov
xchg
mov
rcrb
add
xchg
lahf
shll
xor
dec
push
xchg
mov
dec
out
icebp
mov
or
push
addb
or
sti
fcompl
or
xorb
push
cmp
repz
hlt
push
pop
stos
lods
outsl
and
jbe
lock
xlat
jno
shr
out
ja
cmc
lret
lea
movsb
xchg
add
js
dec
mov
enter
cltd
dec
push
adc
stc
or
out
mov
scas
rclb
sub
stos
fisttpl
xorl
inc
sbb
lds
or
ds
and
mov
scas
lret
inc
push
imul
hlt
inc
fwait
jge
and
xchg
lahf
sbb
subl
sub
call
jmp
xchg
jmp
fidivs
cmp
lret
insl
xor
test
das
fwait
dec
fwait
dec
sub
cld
fdiv
xor
inc
adc
dec
pop
fdivrs
sbb
movsb
mov
jge
orl
mov
mov
cmpsl
sbb
fwait
dec
mov
int
gs
aam
rcrl
xchg
mov
fdivrs
add
xchg
xor
out
cli
xchg
xchg
xor
leave
mov
pop
add
push
pop
xchg
dec
int3
gs
shll
shrb
leave
mov
mov
push
out
insl
sub
push
mov
sarl
sahf
loope
add
add
push
push
loop
je
xchg
mov
repz
call
clc
lods
or
sbb
pop
sbb
mov
imul
enter
enter
in
cmp
lea
movntq
sbb
fdivs
mov
add
arpl
xchg
fcoms
int
mov
and
aam
inc
pop
add
lret
cmpsl
hlt
pop
fmul
mov
cli
sbb
cmc
call
mov
insb
jmp
add
jmp
mov
xchg
nop
inc
out
dec
iret
icebp
add
faddl
ljmp
aam
rorb
push
in
add
shrl
push
test
mov
enter
imulb
test
ss
mov
enter
cli
fwait
outsl
lods
daa
test
lret
ds
push
jmp
bound
push
mov
jbe
cmpsb
subb
outsb
xchg
shll
lret
jbe
mov
sub
ret
add
xor
or
decb
mov
aaa
cmp
jno
mov
mov
pop
lock
fs
mov
or
add
outsb
movsb
enter
aad
das
imul
pop
std
std
test
jns
test
fimuls
push
pop
inc
out
andb
adc
lods
xchg
sbb
sahf
mov
inc
mov
pop
shlb
sub
pop
out
jmp
mov
add
mov
mov
scas
adcl
in
mov
jmp
lahf
jns
xchg
inc
sarb
call
add
jne
mov
insl
mov
or
iret
jb
add
aad
mov
loopne
sub
push
scas
repnz
adc
pop
repz
test
mov
lret
outsb
dec
mov
fxch
jns
inc
shlb
mov
mov
add
dec
jge
sbb
dec
pop
shll
push
mov
push
mov
sub
pop
sbb
fs
cmp
jno
cltd
mov
sbb
scas
into
dec
sarl
loopne
aad
sub
mov
icebp
pop
imul
lods
stc
dec
jne
dec
push
or
jnp
cs
in
push
sub
stc
sub
sub
sbb
inc
jne
stos
negb
ficoml
xor
mov
in
xchg
data16
dec
mov
and
sti
add
out
imul
cmp
in
xchg
cmp
jge
and
xchg
xchg
adc
mov
repnz
push
push
cmpsl
out
jno
or
daa
sub
jns
cmpsl
mov
leave
pushl
mov
leave
rolb
sbb
ljmp
mov
push
lock
mov
shrb
lods
pop
pop
adc
fidivs
into
bound
pop
and
cmp
lea
test
mov
xor
movsb
mov
mov
cmpb
adc
shll
fadds
sbb
cmp
outsb
push
sti
addr16
out
pop
add
adc
test
xchg
testb
cmc
int3
pop
dec
sbb
add
xor
lahf
sub
fs
mov
pop
jo
rcrl
adc
sti
mov
cmpsl
fdivrs
repnz
pusha
mov
orb
out
fwait
mov
in
lret
insl
pop
jae
fstpt
add
push
test
pop
leave
out
pusha
add
stos
pop
xchg
xchg
scas
pop
es
jmp
xor
mov
fists
push
xchg
cmp
dec
push
mov
iret
jnp
frndint
into
mov
jg
fdivp
and
loop
ja
test
sarb
jbe
movsl
xchg
sbb
sar
sbb
xchg
loopne
faddl
fwait
dec
pusha
mov
insb
scas
cwtl
insl
add
cltd
loope
mov
dec
nop
addr16
jb
dec
pop
shlb
mov
adc
add
sar
int
sbbl
xor
push
xchg
out
pop
inc
push
xor
int
xlat
xchg
and
pusha
jmp
loop
dec
cmp
or
rcl
into
push
jle
stos
cwtl
push
mov
inc
push
jbe
push
test
mov
movsl
mov
sub
and
mov
xlat
repnz
fincstp
lock
jnp
repnz
mov
adc
pusha
repnz
lods
mov
xchg
push
xorl
mov
mov
ss
push
jl
cmpl
test
and
test
es
test
addr16
xchg
and
jo
ret
test
imul
negl
add
int
ret
pop
dec
popf
mov
in
std
fwait
cmpl
sub
sub
test
xor
cmovg
xchg
js
icebp
push
mov
aaa
add
mov
dec
mov
inc
daa
push
dec
sbb
insb
insl
mov
adc
jae
xchg
sub
adc
add
js
xorl
fstpt
jnp
sbb
xchg
cmpsb
pusha
jno
xor
mov
aas
adc
push
pop
int
test
mov
imul
mov
popf
xorl
sub
xlat
xchg
inc
lods
stos
lret
jl
aad
adc
xchg
rcrl
or
mov
lods
cmp
loopne
test
dec
jnp
lock
ret
icebp
mov
cmpsl
sbb
cmp
imul
lods
cmpsb
in
cs
cmp
cmp
push
inc
push
in
sarl
adc
mov
ret
and
mov
paddsw
jbe
scas
mov
pop
sarl
aas
sti
inc
mov
inc
andl
push
lds
adc
lds
mov
cmpsb
and
sbb
lcall
inc
js
adc
adc
pop
andl
loope
lret
ja
das
sub
mov
daa
bound
dec
jge
clc
cmpl
cld
ja
and
jne
sub
popl
inc
add
add
mov
les
adc
imul
adc
xchg
jne
lahf
sbb
data16
jne
cmp
daa
sahf
aad
movsb
push
mov
jecxz
mov
iret
dec
jae
mov
dec
pop
cli
push
lea
sub
dec
mov
sub
sarl
sub
adc
jbe
jl
sbb
jp
mov
push
mov
popa
in
lock
jg
or
rcl
stos
lret
mov
xchg
xor
mov
sub
or
adc
inc
pop
inc
in
adc
cmp
sub
mov
sbb
push
mov
dec
push
xor
and
mov
out
outsl
xor
insb
mov
mov
inc
cltd
hlt
or
jg
dec
pop
push
adc
fidivs
cld
add
xchg
adc
test
lods
cmp
out
imul
mov
sbb
ja
mov
repnz
dec
sub
jmp
xchg
inc
push
push
mov
cld
push
std
pop
mov
daa
repnz
pop
sub
imul
fidivl
dec
jp
fsubrs
das
inc
mov
loopne
imul
pop
push
sub
pushf
bound
pusha
or
inc
test
dec
xor
gs
rolb
lods
std
jo
movsb
pop
adc
jns
in
mov
cltd
mov
jb
push
jle
mov
jp
or
pop
sub
add
outsb
insl
mov
hlt
call
and
cs
pop
or
dec
bound
xor
push
jb
xchg
bound
out
pusha
push
hlt
bound
popa
fbstp
idivl
insb
xor
sti
out
adc
test
mov
mov
mov
popf
cmp
hlt
sub
mov
loop
inc
cmc
mulb
jb
enter
jno
shlb
ror
pusha
scas
cmpsb
cs
mov
pop
pop
sbb
in
xor
mov
bound
nop
and
leave
ds
xchg
mov
cwtl
loope
ss
mov
cltd
push
ljmp
stc
xor
popa
xchg
cmpsl
ja
mov
dec
dec
sbb
push
cmp
jnp
popf
cmp
mov
aad
pushf
cs
sbb
lds
cmpsl
add
pop
sbbb
pop
push
scas
cmp
mov
push
and
out
popaw
fdivr
dec
jns
mov
shll
and
jge
xor
mov
fadds
xchg
mov
push
push
add
mov
es
mov
push
lods
lahf
xchg
or
push
fs
xor
in
jecxz
es
add
enter
jg
aas
clc
in
add
js
mov
adc
xor
dec
inc
loope
fwait
sahf
sub
jmp
mov
leave
dec
mov
sub
and
push
and
jl
or
insl
pop
call
lods
or
dec
arpl
repz
imul
jo
and
sub
std
xor
sbb
in
jno
push
push
jle
ljmp
vfrczsd
cmp
fcomps
mov
mov
fiaddl
push
or
add
add
push
shlb
out
pop
data16
fldl
jno
sub
je
arpl
dec
fmull
insb
scas
movsl
nop
data16
cmp
xlat
inc
sbb
mov
imul
pop
cwtl
pop
je
mov
loopne
pop
sub
jb
aam
addr16
push
xlat
scas
cmpsb
out
pop
shlb
pop
xor
pop
dec
add
jae
add
fsubrp
cmp
jmp
inc
adc
cmp
inc
mov
dec
inc
xlat
and
out
sub
pop
mov
sub
ret
push
orb
xor
mov
out
push
xor
push
adc
js
dec
push
les
sbb
and
fcoml
aaa
inc
mov
outsl
in
sbb
xchg
int
fstl
mov
rcll
pushf
add
stc
int
add
mov
mov
mov
push
lods
xor
repz
repz
sbb
push
mov
popf
xchg
push
out
cmpsl
sub
push
add
test
fisttps
in
cltd
sub
repz
fcmovu
lret
aad
je
shrb
nop
imul
dec
and
lock
mov
jmp
jne
mov
push
push
cmc
cmp
dec
jge
add
cmp
movl
sbb
andl
std
repz
xchg
and
jmp
mov
cltd
jle
std
test
add
push
gs
dec
or
call
enter
testl
sub
lea
int3
addl
loope
add
xor
loop
adc
push
clc
bswap
push
sub
hlt
insb
mov
mov
add
addr16
push
add
addr16
cs
push
mov
add
pop
js
mov
leave
xchg
repz
mov
sub
out
dec
mov
inc
or
fbld
xchg
adc
sbb
jmp
or
dec
sbb
mov
pusha
cmc
ljmp
leave
jmp
inc
cwtl
dec
outsl
jae
pop
fbstp
and
jbe
inc
loop
cwtl
subl
mov
inc
les
into
xchg
sbb
std
push
fmull
dec
jle
mov
and
push
shlb
adc
lahf
mov
jnp
rcrb
pop
aad
dec
xlat
stos
jb
xchg
inc
into
xchg
shl
aaa
jo
mov
cli
cltd
mov
mov
outsl
cmp
lods
push
lods
int3
lds
aad
or
sbb
lcall
or
ljmp
sbb
pusha
fwait
dec
push
mov
enter
adc
scas
jns
inc
jae
mov
jg
cmp
cmp
ficoms
mov
mov
call
orb
into
mov
data16
pusha
xor
and
push
repz
mov
adc
test
xchg
pop
sarb
and
push
js
mov
rorl
xor
int3
in
lcall
xchg
fwait
mov
pop
dec
jne
xchg
cwtl
in
sub
xor
icebp
jb
cld
stos
sub
cmp
in
push
dec
xchg
lahf
lods
and
loopne
xchg
in
cmp
arpl
inc
or
pop
mov
std
adc
mov
pop
sbb
adc
push
adc
jg
je
and
outsl
pmulhw
xlat
mov
inc
fdivl
push
mov
mov
sub
repz
je
adc
jo
push
inc
rcll
lock
push
mov
dec
stc
call
pop
adc
aam
cs
fbstp
js
mov
outsb
xor
stos
mov
push
fstp
andb
or
mov
jp
arpl
xchg
rorl
enter
fistl
inc
pop
and
in
jno
or
out
jg
data16
push
js
das
fbld
cmp
lret
cli
inc
pop
xor
sarb
fistpll
popf
mov
rcl
jp
adc
and
scas
mov
xchg
push
jae
imul
add
mov
nop
mov
gs
pop
imul
lret
dec
mov
insb
fnstsw
or
xchg
cltd
dec
test
mov
in
sub
dec
insb
sub
mov
mov
cltd
fisubrs
fstp
movsl
ficompl
and
sbb
jle
xchg
adc
jp
or
outsb
addl
push
outsb
outsb
outsl
push
outsb
sub
adc
lahf
push
push
mov
push
pop
xchg
sbb
fsubp
stos
fnstsw
xchg
pusha
mov
addr16
xchg
stos
insb
xlat
and
push
pop
aas
js
sub
fmuls
adc
push
mov
dec
subb
stc
cli
add
mov
sbb
test
loopne
push
xor
test
lret
popf
int3
icebp
idivl
es
sbb
leave
mov
hlt
insb
iret
nop
inc
push
popl
int
loop
testb
out
repnz
loope
rcrl
push
dec
or
mov
dec
leave
aad
aaa
dec
mov
sub
mov
pop
pop
std
bound
adc
test
or
movsb
sub
or
xchg
scas
lret
adc
jl
pusha
addr16
cmp
int
sbb
mov
out
arpl
in
mov
arpl
fnstcw
cmpsl
xor
fs
stos
outsl
jecxz
add
loope
xchg
out
ja
ret
jnp
xor
icebp
test
mov
dec
cmp
lea
arpl
ss
fdivrs
andps
data16
test
mov
mov
loop
inc
jmp
and
cli
test
sbb
mov
and
cmp
das
aad
and
pop
ja
mov
cmpsl
cltd
cmpsb
ja
dec
roll
jno
pushf
xlat
sarb
inc
leave
jne
sbb
rcl
hlt
dec
scas
pop
cmp
shl
stc
mov
lret
rorb
and
cli
xchg
movsl
or
fdivrp
loop
mov
add
leave
push
in
push
fisttpl
arpl
xorb
and
insb
jnp
dec
out
cmp
cmp
cli
mov
dec
mov
sub
iret
ljmp
mov
or
jmp
xor
pop
cs
add
dec
fsubs
inc
push
leave
rcrb
pop
outsl
jle
popa
push
jne
sbb
pop
add
pop
adc
repnz
add
aad
dec
jg
out
dec
xchg
insl
dec
jns
sarb
dec
mov
xor
push
outsb
lock
jno
mov
jg
aaa
mov
call
add
inc
aaa
adc
pop
mov
cld
inc
daa
mov
nop
sub
in
mov
sub
adc
inc
xlat
mov
mov
sub
repz
jnp
xor
cmpsb
pusha
cmpsl
pop
xor
and
test
addr16
fwait
jns
mov
dec
les
xchg
and
inc
lea
dec
and
pushf
sub
fs
pop
mov
sahf
pushf
inc
int3
sbb
fmuls
fsubrs
lds
outsl
jecxz
rcll
es
hlt
jae
out
xor
pop
aam
and
mov
inc
fildll
sbb
xchg
or
add
mov
clc
mov
adc
stc
mov
ret
notl
test
push
sti
in
jle
test
in
das
mov
imul
es
cmpsl
dec
adc
mov
pop
ret
and
inc
lcall
pushw
popa
ficoml
loopne
sub
decl
gs
into
xlat
aaa
jmp
xor
sbb
push
scas
push
add
inc
aaa
sbb
xor
int3
addr16
pop
adcb
popa
inc
add
jb
inc
mov
xchg
cmp
push
js
push
outsl
or
int3
and
sbb
jecxz
test
adc
and
lods
std
fwait
lds
mov
push
push
pop
lods
fs
or
pop
call
push
lods
out
inc
fwait
xor
xor
aas
and
sub
sbb
add
jne
adc
cmc
adcl
mov
push
sbb
and
add
mov
int3
mov
shll
loope
jg
jecxz,pt
jmp
pop
sbb
push
popf
sbb
pop
cmp
std
out
or
adc
sbb
dec
out
jb
in
mov
sub
sti
imul
insb
dec
loop
cltd
pop
jb
jmp
mov
testl
jmp
cmpsl
or
inc
ret
mov
sti
stos
test
gs
leave
add
push
jno
int3
addr16
cmp
mov
dec
repz
jbe
dec
add
loopne
stc
pop
mov
jle
xadd
mov
mov
xchg
push
xchg
sarb
push
ds
ret
and
daa
lcall
jo
mov
inc
rorl
inc
insl
jnp
xchg
ret
push
aas
fiaddl
adc
push
test
jmp
cmp
pop
int
xor
aas
sahf
push
stos
cltd
jge
add
push
mov
lock
or
jp
dec
xor
fisttps
sahf
ret
bound
cmpsl
js
dec
aam
sub
cmc
cmp
insb
or
fsubrl
out
mov
sarl
add
ret
inc
fsubr
xor
cmpsb
pop
and
cmp
dec
inc
and
out
test
push
ret
dec
fimuls
js
jns
daa
mov
insb
ds
xchg
imul
and
jno
ljmp
fstpt
sub
iret
jmp
or
xchg
rcrl
lcall
stos
pusha
nop
sub
jecxz
call
mov
or
ja
add
mov
mov
shrl
daa
pop
mov
inc
rcrb
add
pop
repnz
ljmp
es
fists
lret
xchg
sub
jg
xchg
lea
inc
repnz
push
ficoml
mov
mov
xor
cld
xchg
fimuls
repz
push
pop
and
mov
and
lcall
inc
xlat
bound
jne
fnstcw
loop
fs
shl
sbb
dec
in
sbb
scas
add
fcmove
rcrb
out
jne
cmp
mov
shl
or
test
aad
push
sbb
outsb
jmp
sbb
filds
fidivl
mov
xchg
shlb
loopne
cwtl
inc
rclb
ja
ret
addr16
test
jecxz
xor
popf
adc
test
push
out
negb
dec
add
push
xlat
xchg
or
jmp
mov
pop
shrl
dec
or
repnz
jns
push
daa
repnz
ljmp
mov
push
out
dec
mov
fdivrl
xor
ja
ret
mov
xor
sti
stc
es
jno
jae
call
hlt
rcrb
fstpt
mov
sbb
mov
adc
and
out
addb
lahf
fmul
pop
jne
xor
int3
ljmp
push
sbb
sub
aad
call
scas
aam
out
pushf
scas
fwait
aaa
mov
sbb
mov
aam
push
inc
les
mov
inc
and
adc
dec
bound
mov
xor
mov
out
fildll
mov
add
outsb
mov
scas
mov
dec
gs
cmpsl
xchg
lock
pop
and
sbb
insl
mov
xchg
adc
push
test
xchg
lods
cwtl
imul
add
dec
insl
sbb
cwtl
std
xor
aad
mov
pusha
mov
movsb
shrb
xor
imul
sbb
scas
sbbb
sbb
sbb
ss
fs
sbbb
mov
rcl
sbb
mov
push
xchg
xchg
mov
rcl
mov
out
test
fs
pop
cmp
and
daa
lcall
stos
lea
sbb
add
mov
and
cmp
jecxz
mov
pop
adcl
or
in
adc
decl
mov
mov
pop
cmpsb
adc
fnstsw
sub
loopne
arpl
mov
in
sub
jg
pop
stos
test
xor
test
push
mov
cs
push
xlat
push
sbb
cmp
pop
xchg
jo
dec
out
push
fiaddl
leave
test
outsb
xchg
shl
icebp
fldcw
dec
ljmp
sub
shrl
in
aas
xlat
test
add
rorl
xchg
stos
jno
add
push
lret
jg
mov
mov
ds
out
gs
in
mov
rol
inc
add
or
mov
stos
dec
jae
les
out
lds
pop
scas
cmp
cs
cmp
insb
js
shl
mov
out
leave
std
cmpsl
cmpsl
fcomip
mov
mov
inc
pop
xchg
cmp
jnp
xchg
and
stos
or
adc
adc
loope
in
in
push
mov
mov
cmpsl
mov
jp
pop
pop
or
pop
push
andb
mov
xchg
mov
jge
shl
add
aaa
je
nop
hlt
js
xchg
xor
popa
loop
aaa
or
push
sbb
nop
push
sbb
adc
sahf
jge
pop
fcmovne
inc
mov
mov
lea
dec
imul
dec
pop
push
push
sub
test
ljmp
dec
jecxz
mov
mov
test
js
ror
test
mov
sbb
sarl
push
cli
fdiv
ffreep
or
mov
jp
sbb
mov
add
lret
mov
sbb
fs
sub
lock
cmpsl
pop
mov
adc
out
cmp
lahf
sbb
aas
fs
add
add
cli
cs
adc
dec
push
jle
mov
xor
sub
mov
adc
jnp
or
mov
xor
lcall
fnsave
pop
add
cmp
sbb
jl
enter
adc
iret
arpl
fmull
or
and
icebp
aam
cld
stc
adc
mov
ret
add
jl
and
push
dec
les
into
pop
ret
sub
loopne
insb
cmp
and
adc
stc
and
orl
out
adc
jp
xchg
jge
iret
pop
dec
call
and
icebp
addr16
es
and
push
add
mov
mov
sbb
test
faddl
std
mov
xchg
cwtl
in
aad
mov
imul
add
and
into
int3
testb
ficoml
repnz
jne
add
dec
inc
mov
sbb
jno
mov
cltd
adc
es
add
hlt
xor
or
imulb
cld
and
lods
push
in
in
add
mov
cmpsl
fidivrl
cmc
loop
ror
mov
in
inc
lods
add
je
pop
inc
fdivl
push
cmp
jns
cmp
int3
dec
dec
fadds
jl
dec
aas
sahf
jo
jne
xchg
into
shlb
cmpsl
outsb
je
cwtl
pop
je
shrb
add
aas
out
push
and
or
inc
sub
jno
mov
mov
xor
stc
leave
imul
outsb
mov
add
add
and
js
jne
mov
jbe
out
jnp
lods
xchg
jnp
dec
lds
xor
pusha
jle
pop
dec
and
icebp
push
or
mov
pushf
sub
sbb
push
mov
xor
and
fs
sub
outsb
icebp
xor
stos
ret
mov
dec
cmpsl
test
pop
lds
xchg
lret
jecxz
cmp
jge
testb
or
dec
cmp
data16
or
lret
shl
fidivrs
mov
jl
sub
test
mov
in
lds
xchg
xchg
in
std
movb
stc
out
jo
adcl
ja
mov
lock
mov
in
leave
jecxz
movsb
sub
pop
jg
nop
mov
std
aaa
cmp
lret
pop
jns
inc
jp
xchg
push
cwtl
outsl
xchg
dec
out
je
cmpsl
adc
loop
movsl
xor
rcll
jnp
pushf
lahf
sbb
and
in
stos
lds
lods
test
imul
pop
xor
pop
xor
push
faddl
and
add
ljmp
pop
clc
jp
pop
cmp
loop
jmp
dec
frstor
insl
push
cmp
mov
inc
sub
sub
pop
in
ret
push
call
mov
pop
sub
outsl
lds
inc
out
push
inc
bound
and
ficompl
aas
mov
jmp
aaa
xchg
jl
or
pop
cmpsl
or
rorb
aaa
sbb
stos
mov
dec
mov
push
sbb
inc
dec
mov
sub
cs
adc
inc
out
addr16
pop
arpl
stos
or
or
cltd
xchg
test
push
fmulp
sub
xchg
pop
mov
xchg
xchg
xor
call
push
and
outsb
imul
mov
insl
pusha
jmp
test
scas
sub
test
repnz
insl
fbstp
arpl
test
push
mov
cltd
notl
gs
ret
les
cmp
mov
out
mov
cmp
shrb
call
mov
xchg
or
inc
pop
or
bound
sbb
test
aam
stos
add
fimuls
lahf
inc
int3
push
out
push
xchg
mov
add
push
mov
inc
mov
mov
repz
push
jno
add
xor
mov
and
sub
or
and
or
push
sub
mov
mov
js
or
or
cmc
fdivrs
inc
jno
cmp
mov
sbb
xchg
push
mov
call
pop
mov
cmp
stos
mov
xor
or
add
jne
repz
fildl
dec
jge
add
inc
pop
fcmovu
insl
in
and
addr16
xor
xchg
xlat
adc
push
stos
xchg
cmpsb
in
movsl
cmp
and
jno
out
sti
das
sti
jbe
ljmp
mov
sbbb
adc
dec
fimuls
pop
test
adc
add
icebp
daa
or
stos
jne
mov
inc
mov
aad
loop
xor
rorb
aaa
dec
inc
cwtl
mov
andl
movl
cmp
stos
cmp
scas
jle
call
push
out
mov
scas
ret
push
inc
clc
aaa
call
cld
jp
fwait
jl
arpl
pop
add
ds
rcrl
lcall
cli
mov
mov
or
add
adc
lret
cmc
push
mulb
mov
mov
lret
push
scas
inc
clc
add
cwtl
add
pushf
jnp
call
inc
sub
daa
outsl
or
sbb
iret
iret
mov
int3
cmp
sub
shlb
sub
cltd
lods
out
jae
stos
nop
xor
mov
pop
bnd
inc
sub
push
lods
jp
mov
clc
pop
xor
test
sub
clc
cmp
sbb
movsb
xor
mov
loop
push
mov
adc
push
ds
mov
cli
cmp
aam
js
cmp
stos
mov
jecxz
add
fs
shl
sbb
cmpsl
cmpsl
push
push
ds
lods
mov
jnp
and
test
or
hlt
or
cmp
in
push
mov
mov
dec
adc
sub
mov
xor
inc
out
push
cld
in
test
lds
xchg
jl
jmp
jns
out
aam
pop
and
push
sub
xchg
mov
jge
sarl
inc
dec
ja
aad
cli
sub
ds
cmpb
ja
or
int
dec
pop
pushf
jge
insb
push
lcall
aas
cmc
out
ret
mov
filds
lret
pop
mov
mov
test
out
xlat
or
mov
inc
push
insb
pop
push
ret
loop
and
push
mov
jb
leave
xor
mov
fildl
mov
push
or
push
in
rorb
dec
or
sub
xor
jl
mov
jecxz
test
mov
jl
lods
push
loope
pop
inc
lea
push
mov
jne
adc
leave
loop
lret
movsl
adc
int
out
lcall
ret
rorl
mov
out
adcl
pusha
clc
add
xor
lock
add
pop
xchg
cld
in
sub
push
rclb
mov
ljmp
cli
cmpsl
mov
lods
lds
push
jecxz
mov
push
test
scas
in
inc
xchg
fmull
pusha
push
or
pop
popl
xor
mov
iret
mov
addr16
rcrb
lcall
leave
cltd
add
hlt
and
clc
pop
lods
push
pop
push
ja
roll
movsb
pop
idivb
or
icebp
cli
stos
hlt
xchg
sbb
in
inc
movsl
outsb
mov
pop
mov
ljmp
or
int
adc
push
mull
and
cwtl
rorb
dec
sub
sbb
mov
movb
adc
add
dec
fs
lret
flds
test
mov
mov
sub
bound
ja
rcll
ss
adc
mov
ret
iret
pop
dec
cmp
pop
andl
jp
sub
leave
popa
jae
pop
xchg
mov
incb
push
mov
out
mov
pushf
adc
test
mov
cmc
int
inc
clc
jb
in
leave
add
adc
mov
push
pop
icebp
sub
iret
lock
add
cmp
arpl
popf
cmp
sub
dec
int3
out
xchg
add
enter
pop
xchg
flds
loop
add
int3
xchg
lods
fcmovnb
adc
mov
test
stc
pop
shlb
test
push
imul
cs
pop
icebp
sbb
mov
cmpsl
mov
xchg
mov
jo
or
xchg
xor
xor
test
ljmp
or
fcmovbe
nop
cmp
jb
sub
push
jl
iret
call
aaa
lret
push
call
lahf
hlt
sbb
cmp
scas
lea
mov
bound
jno
and
mov
popa
jle
pop
inc
fisubrl
mov
mov
ds
mull
shlb
mov
lea
das
xor
xchg
gs
sub
icebp
scas
jbe
outsb
sbb
fstl
add
imul
and
pop
imul
popa
adc
sbb
and
xchg
xchg
in
int3
enter
out
fcomip
xchg
insb
cs
dec
mov
out
cli
repnz
test
int3
pop
sbb
out
or
sub
lcall
ret
pop
jle
pop
stc
cld
pop
pop
mov
cmc
repz
iret
pusha
outsl
scas
cmc
aad
int3
sbb
xor
or
scas
push
xchg
insb
push
jnp
mov
and
push
test
rol
sbbl
jns
adc
into
hlt
stos
xor
inc
xchg
nop
or
mov
iret
int3
fdivrs
mov
xor
aad
in
repnz
and
cwtl
ds
dec
add
into
inc
inc
aas
xorb
adc
subb
das
cmp
adc
rclb
lods
mov
je
push
mov
sbb
sub
les
mov
mov
aas
xor
in
mov
loop
fsubrl
mov
rcrb
adc
push
xor
loopne
inc
lret
ss
mov
je
fsubl
icebp
xchg
mov
or
jg
add
nop
dec
xchg
adc
add
cmp
or
lret
test
add
stc
or
and
rol
ja
mov
cmp
sbbb
jns
dec
repnz
sbbb
xchg
jge
pop
loop
push
cmp
loopne
cs
dec
je
jne
decb
sbb
add
pop
fisttpll
xchg
stos
xlat
or
cmp
fwait
mov
mov
and
cmp
cmp
pop
out
lcall
jl
adc
fs
and
leave
les
mov
mov
mov
xchg
iret
movsl
outsl
js
push
mov
loope
and
fstpt
aam
iret
inc
sub
xor
ficoms
cmpsl
xchg
inc
xchg
push
sub
sbb
pop
jp
rcl
adc
out
mov
cwtl
push
out
and
in
std
movsb
and
or
pop
dec
mov
mov
test
orb
dec
pusha
jmp
add
xor
push
out
jmp
movsl
out
inc
cmp
popa
lret
lods
pop
push
out
mov
andb
add
xchg
cmp
cld
pop
aaa
cmpsb
lret
stc
test
stos
mov
dec
outsb
enter
adc
mov
lods
cltd
add
sbb
cmp
psubusw
or
cmc
cmpsb
loope
jl
adc
popf
xchg
push
sbb
sub
mov
push
pop
dec
loop
ret
cltd
pop
jmp
andb
sbb
ds
xchg
stc
mov
in
test
mov
outsb
cld
dec
inc
xchg
lcall
xchg
call
or
sub
jno
enter
cli
jle
inc
add
jg
push
fcompl
iret
xor
jne
jge
cmpsl
inc
sbb
insl
add
outsb
push
cld
sbb
out
dec
jle
push
xor
ss
jle
sbb
mov
push
push
lcall
ljmp
shlb
sbb
std
arpl
ret
jl
adc
out
imul
sbb
jno
fimuls
pop
movsb
stos
sahf
nop
out
shlb
adc
js
outsb
lea
cltd
jle
or
cmc
lahf
cli
inc
scas
por
pop
and
pusha
ret
and
rorl
dec
clc
push
lds
sbb
xchg
mov
lds
cmp
dec
in
inc
inc
pusha
icebp
jnp
inc
lea
cmp
jecxz
rolb
push
and
mov
sarb
or
cmpsl
fcompl
add
mov
and
lahf
cltd
lret
lods
and
push
jae
push
inc
testl
and
or
icebp
add
mov
xor
dec
cli
mov
test
adc
pop
pop
xchg
jno
adc
fiadds
mov
cmp
sub
add
imul
lock
mov
pop
jecxz
inc
inc
mov
inc
push
fldenv
divb
or
xor
jns
xchg
xchg
sahf
add
movsb
sbb
mov
xlat
jge
jnp
lcall
sub
cmpsb
sti
repnz
cmpsb
push
pop
in
pop
push
shlb
or
sbb
insl
mov
jbe
stos
push
mov
leave
lds
frstor
or
clc
inc
mov
les
and
mov
or
mov
sbb
jbe
mov
jae
out
std
dec
pop
repnz
xchg
cld
and
loopne
mov
imul
aam
xchg
fisubl
push
inc
xchg
mov
insl
adc
xchg
mov
add
mov
loopne
dec
cmp
hlt
sbb
not
lds
sub
mov
mov
popf
test
loop
andb
pop
js
shl
jbe
push
fcmovbe
mov
and
jnp
push
jnp
dec
out
xchg
test
pop
inc
icebp
ja,pt
fidivrs
loope
imul
inc
aam
insb
mov
xor
clc
inc
jnp
fstpt
xor
dec
mov
jle
repz
cwtl
stc
cmpsl
je
sbb
dec
cmp
stos
mov
cmp
jl
and
outsl
test
fisubs
je
int3
icebp
into
ret
and
and
mov
push
add
clc
inc
or
lods
cld
sbb
cmp
in
xchg
add
fcmovb
pop
stos
mov
mov
int
test
sub
jle
and
call
lret
lock
sarl
decl
jmp
sbb
icebp
mov
cmp
movsl
cmp
popa
push
jns
sub
jns
cmp
pushf
xchg
cli
imul
inc
and
gs
xor
int3
and
cmpsb
sbb
cmp
enter
mov
cs
rolb
int
std
jne
enter
aad
inc
xor
pop
ss
or
and
mov
cmp
inc
push
pop
mov
sbb
jle
sub
mov
lcall
jge
xchg
call
into
push
push
mov
test
push
pop
std
xchg
jno
jmp
outsb
or
mov
mov
ds
sbb
cmp
aas
out
mov
ja
inc
mov
push
sbb
repz
or
pushl
enter
lahf
xchg
bound
movsb
mov
xor
push
xor
repnz
je
cmc
xorl
xor
adc
jae
cmc
loop
stc
dec
fstpl
add
and
push
xchg
inc
jecxz
xor
or
ds
sbb
out
dec
mov
jg
jbe
out
out
js
rcrl
mov
loopne
dec
and
mov
push
test
dec
jmp
mov
testl
int
out
andb
add
jae
push
or
push
andl
call
mov
xchg
inc
adc
push
xchg
mov
push
inc
xchg
lret
in
mov
popf
pop
sbb
or
scas
inc
push
fnstsw
lea
push
jp
mov
test
cmpsl
je
je
and
cmc
mov
sti
adc
in
push
add
mov
mov
insb
xor
gs
mov
inc
and
cmp
sti
loopne
jnp
xchg
cmpxchg
or
xchg
test
push
sub
ss
push
movsl
lret
stos
lods
jnp
push
push
clc
pop
daa
sub
cmp
cmp
xchg
leave
lret
ja
sbb
pop
push
pop
popf
pop
jns
mov
jo
setnp
add
and
xchg
mov
pop
out
aam
cmp
dec
test
aaa
int
insl
pushf
fwait
inc
add
xchg
jle
push
mov
hlt
negb
mov
push
push
jg
pop
sti
inc
jmp
or
mov
add
dec
movsl
test
mov
insl
ret
movsb
jnp
nop
sub
imul
push
stos
pushf
call
inc
cmpb
ds
xchg
xlat
cmpsb
sub
test
xchg
sub
sub
pop
add
jae
fdivp
loop
xor
and
rclb
aad
mov
jbe
ja
movsb
hlt
stos
setp
or
jne
sub
sub
testb
xor
stos
cs
andl
cltd
mov
cmp
pop
fidivrs
sbb
push
aam
push
sbb
xchg
shl
jnp
popf
cld
mov
sub
outsb
clc
and
addr16
add
mov
cmpsl
push
sbb
in
xchg
mov
dec
xor
leave
test
aam
mov
xor
and
push
scas
sub
jae
into
test
inc
inc
pop
jo
adc
daa
orl
sbb
jbe
dec
add
in
adc
jne
push
leave
jno
pop
dec
fdiv
xchg
lods
mov
inc
push
out
in
loopne
push
pop
xchg
dec
jne
addl
xchg
notl
sarl
subl
std
jae
arpl
inc
addr16
sub
lret
mov
mov
cmp
icebp
fbstp
sbb
sub
shrl
adc
fwait
rclb
test
lret
das
sub
loope
scas
shrb
arpl
mov
jnp
cmc
aas
mov
xor
add
lds
test
mov
mov
pop
movsl
push
lcall
pop
scas
xchg
cli
sbb
push
cmp
arpl
jle
push
cmc
das
and
iret
adcb
fists
fldcw
rclb
add
popa
repnz
dec
jecxz
jne
std
push
add
sbb
add
jp
cli
fisubl
sbb
xchg
rclb
or
ror
mov
popa
push
add
add
inc
sti
clc
faddl
aas
repz
daa
inc
mov
vcvttpd2dqy
dec
orb
or
lods
inc
les
insl
std
sbb
orl
jg
dec
aaa
pop
pop
cltd
mov
fistpll
mov
mov
adc
pop
or
push
cmp
icebp
loop
call
mov
aad
xchg
dec
es
outsl
jno
ljmp
sbbb
addr16
sarb
mov
mov
int
arpl
push
or
pop
rorb
insl
xchg
shll
test
cmp
or
imul
xorb
dec
mov
inc
pop
es
xchg
clc
cli
leave
loopne
cmp
into
arpl
pop
mov
jmp
xor
call
idivb
or
pop
in
xor
xor
negb
jbe
xchg
call
inc
cmp
mov
mov
int
ja
aas
or
or
add
lock
pop
stos
mov
xor
fidivl
jnp
out
mov
in
mov
outsb
dec
repnz
out
cli
and
cld
lock
push
ret
shl
into
test
xchg
mov
in
push
dec
push
sub
mov
inc
ja
in
bound
lret
dec
push
lahf
mov
adc
mov
cmpsl
lock
or
xor
inc
daa
and
outsl
push
addl
outsb
add
jecxz
add
pop
jge
arpl
mov
jnp
inc
mov
test
mov
dec
inc
jmp
push
pop
push
lods
inc
test
jmp
rcr
and
rcr
ret
int
mov
or
inc
ds
xor
jae
leave
pop
add
lret
scas
icebp
jbe
in
stos
push
jp
mov
sti
sbb
out
stos
stc
cmc
xchg
faddl
pop
addr16
sub
test
test
sbb
inc
popa
incl
sub
jmp
xor
mov
lods
mov
addr16
mov
or
addr16
mov
pop
cltd
scas
mov
ja
mov
mov
mov
jl
dec
ret
das
mov
mov
mov
mov
loope
and
mov
out
enter
mov
xor
jl
test
jo
push
outsb
or
lods
pop
cmc
js
inc
jae
and
mov
sbb
jnp
mov
fsub
fcompl
and
mov
cmpsl
imul
mov
pop
fwait
cmp
pusha
mov
sub
sti
pop
adc
scas
aaa
inc
bound
icebp
clc
sbb
fidivs
cmc
xchg
sbb
push
int
jae
push
pushf
jnp
in
rclb
sbb
ljmp
sbb
or
stos
enter
lret
pop
pmaxsw
mov
out
mov
in
ret
daa
mov
inc
jae
push
add
std
sub
mov
mov
sub
pop
ret
movb
pop
test
or
out
jle
adc
imul
es
fwait
cmc
and
imul
xchg
push
adc
adc
or
add
loopne
jo
and
or
push
xchg
jbe
sbb
mov
dec
shrl
pop
or
ret
loope
ret
ret
mov
add
mov
pop
mov
add
and
addb
xor
xchg
outsl
cmp
sbb
push
repnz
out
add
das
stos
mov
loope
sbb
fisttpl
outsl
jecxz
push
fsubp
sbb
gs
ljmp
xchg
xchg
rcl
rcl
outsb
push
jae
add
ret
sbb
or
das
jbe
inc
sahf
mov
call
dec
xchg
or
mov
aam
adc
out
imul
cmp
cli
je
cmp
mov
xchg
repz
test
pop
rol
andl
cli
repnz
insb
bound
ds
jg
out
ljmp
stos
lods
cmpsl
inc
jnp
sbb
ljmp
cld
stos
fiaddl
push
xchg
pusha
inc
notl
in
sti
sahf
negb
movl
lret
lcall
cmp
outsl
sub
fldl
mov
jmp
cltd
rorl
pop
fwait
std
cmp
shll
mov
int3
and
xchg
filds
cmp
jl
push
mov
jne
pop
inc
adc
or
push
and
xchg
stc
adc
adc
rdmsr
mov
xchg
adc
xor
and
push
push
jns
fisubrs
sub
inc
test
push
mov
mov
xchg
mov
and
push
mov
push
movsl
mov
out
stc
stos
movsb
xchg
pop
mov
pop
insl
mov
push
mov
xlat
inc
frstor
pop
xchg
es
sbb
jg
mov
cmp
add
ljmp
or
jle
test
sub
push
iret
int3
pushf
mov
dec
sbb
lods
mov
dec
dec
push
pop
mov
lods
inc
je
xchg
loopne
sub
mov
test
in
popf
xchg
shl
push
xchg
sub
test
sarl
or
pop
cs
cld
mov
push
das
dec
lods
test
mov
pop
out
sub
int
and
xchg
jae
add
xor
scas
in
sub
or
icebp
fidivl
aaa
sbb
mov
jge
shll
call
cltd
mov
adc
lods
icebp
or
insb
push
pop
add
mov
dec
pusha
and
and
sbb
sbb
out
es
je
aad
push
iret
inc
xor
incl
addr16
ret
scas
mov
je
fsts
pusha
ret
test
mov
jge
ss
or
fmuls
sub
subl
sbb
rcl
xor
sbb
mov
insb
cmpsl
push
push
adc
lret
insb
adc
mov
push
cli
mov
jbe
repnz
mov
insl
cwtl
dec
pop
sub
mov
fisttpl
cmp
jns
mov
rorb
sub
mov
push
sbb
shlb
mov
stos
cmc
inc
out
pop
add
mov
in
mov
pop
and
cmp
fs
mov
cmp
cmp
fldcw
inc
xchg
inc
subb
adc
movsl
iret
testl
mov
jne
popa
and
and
cmp
push
jecxz
mov
sub
out
aaa
ss
loopne
in
pop
popa
jbe
leave
pusha
push
or
lock
loop
or
mov
jbe
adc
jmp
sbb
push
cmp
pop
in
jbe
jle
sub
test
push
roll
scas
xor
inc
popf
mov
out
fidivrl
aam
sahf
mov
sbb
into
push
cmpsb
pop
mov
cmpsl
repz
sbb
outsb
movl
adc
mov
jge
xorb
js
jae
push
lods
fstl
testb
sbb
in
ja
xor
clc
xlat
arpl
into
add
aad
iret
scas
xchg
add
outsl
jo
and
mov
adc
xchg
jb
jo
push
push
lret
pop
fimull
fnsave
addr16
add
out
and
std
dec
adc
repnz
sbb
mov
out
hlt
push
das
inc
pop
popf
push
mov
or
xor
cmp
fisttpl
and
lcall
scas
inc
rclb
movsl
sub
repz
cwtl
mov
sti
test
mov
outsl
and
mov
sbb
cli
cmp
jge
int
insl
push
iret
pop
aas
push
lret
cld
das
pop
ja
pop
dec
xor
xor
or
lods
mov
mov
inc
punpcklwd
cld
jo
sahf
ja
inc
scas
mov
ret
xor
es
sbbl
test
pop
jg
out
scas
mov
adc
inc
rorb
push
push
loopne
cmc
dec
jbe
in
shr
add
dec
lret
inc
mov
scas
push
push
ret
cmc
inc
cmpsb
sarl
idiv
mov
adc
push
orl
pop
mov
rcrl
mov
push
mov
xchg
outsb
mov
mov
xor
jecxz
hlt
test
mov
popf
mov
jge
icebp
xchg
icebp
fdivl
es
mov
sbb
push
stc
dec
dec
cmp
stos
pusha
cmp
mul
add
sub
xchg
lahf
push
les
mov
sub
add
or
lcall
xchg
scas
xor
cwtl
imul
xchg
or
sbb
adc
fildll
out
and
andl
pop
inc
cli
leave
cs
or
xorb
sbb
test
mov
pop
loopne
mov
and
bound
test
comiss
pop
lcall
xchg
insb
sub
dec
leave
fdivs
nop
or
and
sub
sarl
push
jmp
lea
dec
imul
lcall
push
sub
cltd
cmovp
pop
add
xchg
or
clc
cli
movsb
shll
mov
or
loop
sbb
repnz
cltd
cwtl
add
out
repz
push
fidivs
rcll
lods
cmp
lea
jo
push
dec
scas
int
or
jl
push
mov
add
lret
cmp
inc
in
sbb
mov
nop
pop
fldcw
fsubs
jno
fs
mov
movsb
push
mov
jge
testl
ret
adc
addr16
insl
mov
int3
xor
clc
int3
mov
sbb
push
idivl
xchg
les
test
mov
ljmp
sub
aaa
pop
jo
sbb
jnp
aad
xchg
stos
and
sarb
xchg
inc
lock
scas
adc
lock
dec
push
and
enter
mov
xchg
dec
stc
dec
popa
loope,pn
loopne
and
sub
clc
pop
mov
out
movsl
aas
xchg
push
jp
stos
or
int
scas
dec
call
mov
fdivrl
dec
mov
fiadds
mov
lahf
cli
mov
fwait
sbb
hlt
sbb
leave
test
sub
pop
mov
mov
xor
xchg
mov
mov
dec
dec
jge
xor
xor
mov
mov
adc
and
pop
inc
mov
int
or
aam
pop
lods
fs
xchg
lods
clc
sub
iret
cltd
fstpt
xor
shrl
add
shll
jmp
mov
adc
lods
jl
sarl
mov
cld
add
jecxz
test
stos
inc
jne
dec
insl
jge
sbb
out
dec
nop
mov
cmpsb
mov
sub
xchg
pop
push
inc
sub
test
lods
xlat
cmp
jo
and
mov
cmp
test
add
imul
push
add
negb
rorb
jns
movsb
mov
jno
jl
push
cld
loopne
mov
dec
pushf
imul
fiaddl
cmpsl
or
fisttps
repz
push
dec
xchg
push
add
popf
or
loope
imul
add
cld
int3
jecxz
lea
jle
inc
shlb
jp
jl
and
movl
shlb
push
or
sbb
xchg
add
sbb
lret
lea
xchg
out
and
sbb
and
enter
loope
ja
cmpb
mov
loope
cld
xchg
in
imul
add
xchg
into
idiv
pop
fwait
test
hlt
mov
loopne
mov
inc
ja
fildll
movhps
imul
adc
arpl
cmp
fistpll
sbb
ss
inc
rcll
popl
xor
sub
pop
xorb
jbe
iret
pop
add
mov
push
sahf
dec
xchg
in
frstor
xchg
addr16
insl
mov
push
sbb
sahf
push
push
lahf
inc
mov
movntps
iret
dec
inc
jmp
lahf
insb
outsb
dec
das
add
sarb
xor
adc
lret
inc
sbb
lock
repz
push
cmp
lret
jmp
mov
mov
xchg
jno
mov
jae
sbb
sarb
cld
ja
fwait
add
loopne
jne
sub
cli
pop
insb
in
mov
jg
cmpsb
movsl
xor
sbbb
sarl
popf
xchg
ss
cs
xor
mov
pusha
adc
cmc
imul
sbb
and
mov
add
push
int3
jge
cmp
sti
shll
jns
mov
ret
push
push
add
enter
imul
cmp
ror
mov
cltd
fistpl
push
clc
sub
adcl
loop
das
fldcw
add
fimull
push
outsb
es
std
mov
bound
aam
arpl
test
mov
add
shll
xchg
xchg
shrb
cmpsl
pop
dec
mov
sarl
inc
fs
fnsave
loope
insl
mov
mov
aad
jge
addr16
mov
stc
sbb
dec
push
ds
and
sbb
and
mov
js
jle
std
or
in
sbb
push
xchg
cli
push
and
fstl
lret
cs
pop
lret
je
bnd
inc
xchg
lea
roll
sahf
sbbw
xlat
pop
pop
xchg
pop
sbb
inc
dec
lods
insb
add
sub
jae
and
or
fnstenv
dec
sub
and
jne
fcoms
cmp
test
pop
or
add
iret
jle
stos
inc
into
les
add
in
je
inc
icebp
mov
out
nop
mov
sub
push
cs
xchg
push
push
call
out
int3
jnp
lcall
aaa
jle
adc
mov
nop
mov
jge
in
test
repz
mov
sbbl
shr
sub
insb
out
es
divl
les
and
pop
outsb
subl
cmpsl
mov
jo
jnp
push
push
pop
test
add
lock
push
or
outsl
lahf
jl
or
daa
mov
out
das
psrad
callw
int3
repnz
sub
sbb
push
dec
daa
les
adc
dec
dec
jmp
into
movsb
fisubrl
fwait
jne
jmp
sahf
dec
mov
ret
xchg
subl
sub
xlat
sub
insb
jge
and
fcmovb
mov
adc
pop
pop
sub
mov
ds
sahf
jnp
out
dec
inc
lea
mov
ljmp
imul
sub
push
sub
mov
out
add
adc
shrb
sti
mov
and
pop
icebp
ss
mov
add
xor
xor
int
lretw
cmc
jbe
rorl
insb
xor
add
in
test
inc
cmp
xchg
adc
jb
xor
nop
pop
mov
adc
push
imul
enter
sub
insb
xchg
pop
push
inc
in
mov
sub
lds
and
ljmp
cmp
lea
es
rcrb
xchg
push
xchg
lods
clc
or
sbb
daa
adcl
ret
rorl
filds
inc
in
cwtl
or
fsub
in
into
jl
std
push
int3
scas
and
enter
pop
pop
pusha
jp
movsb
push
pop
faddl
call
mov
movsl
rol
jb
insl
ret
mov
mov
pop
dec
das
lret
in
icebp
adc
clc
mov
inc
popa
mov
jmp
jp
mov
push
mov
mov
pop
in
lahf
cs
inc
pop
pusha
xor
ss
and
cld
sbb
sub
sbb
or
daa
sbb
call
stc
sub
addr16
inc
stos
jns
popf
mov
loope
xorb
xor
out
cmp
or
in
imul
scas
xor
mov
mov
loop
xor
and
xchg
sbb
test
dec
fistps
inc
xchg
aaa
add
stos
pop
loopne
loop
testl
and
dec
mov
aam
movsl
dec
xchg
daa
shrb
in
sbb
loop
cli
cwtl
inc
into
inc
fidivl
or
xor
sbb
stos
mov
sub
push
out
hlt
add
daa
and
js
lods
inc
fstps
out
inc
mov
mov
adc
pop
pop
dec
xchg
das
inc
push
out
xchg
inc
add
je
sub
insb
aas
xor
adc
cmp
dec
aaa
insb
mov
mov
xor
jo
adcb
sub
repnz
ss
leave
or
sbb
ds
lret
xchg
int3
mov
inc
sbb
sub
fidivs
std
mov
mov
sub
cmp
and
lea
test
push
dec
dec
into
jbe
repnz
pop
push
or
push
xchg
scas
adc
inc
mov
pop
push
sub
or
insb
pop
and
pusha
int
or
shrb
xchg
cltd
xor
or
xchg
jbe
inc
popf
jl
xchg
sbb
pusha
xlat
xchg
ljmp
xchg
dec
gs
test
js
mov
popf
sub
jbe
int
insb
add
fldlg2
fwait
fwait
je,pn
sbbl
push
mov
ss
fwait
pop
push
pop
fisubrs
push
in
pop
rcrb
jno
mov
es
stos
xor
sub
ljmp
jnp
mov
shl
mov
ret
cmp
mov
test
fmul
mov
cmpsb
or
rcrb
mov
lds
pop
es
push
add
adc
sbb
adc
and
push
ja
imul
mov
divl
and
mov
bound
cmp
cmc
negb
jns
push
adc
clc
inc
aas
and
xchg
pop
pop
mov
movl
lods
and
pusha
into
push
and
sbb
call
or
pop
cs
pop
sub
adc
jno
dec
nop
mov
fwait
mov
sub
dec
sarl
inc
xor
xor
stc
repz
or
arpl
mov
mov
ret
mov
jge
cwtl
cmc
popf
push
movsl
insl
mov
in
sbb
and
mov
mov
cmp
push
push
add
out
das
inc
daa
fldt
cmpsl
mov
mov
or
sub
aad
imull
jmp
ja
in
mov
mov
sbb
test
jnp
dec
mov
stos
orl
test
mov
sbb
or
lods
xor
call
mov
add
shl
cmp
sbb
repz
fstpt
fnstenv
cs
mov
stos
iret
push
mov
cmp
adc
sub
movsl
sti
adc
loopne
shrl
outsb
fs
sub
mov
ljmp
pop
int3
dec
lods
stos
mov
and
mov
sarl
mov
inc
cwtl
push
sbbb
cmpsl
jae
test
mov
cmp
push
jno
aas
insb
or
orl
sbb
add
sub
addb
add
jne
xchg
xchg
cltd
inc
add
jno
adc
adcl
xor
sbb
test
orb
xchg
cmp
sub
lods
jo
loop
mov
ret
ljmp
jae
repnz
repz
fnsave
sbb
leave
insb
popf
pop
scas
xchg
adc
popa
pop
sahf
cmp
jae
mov
push
icebp
shr
or
cmp
mov
imul
jmp
pop
repnz
pusha
loope
aad
dec
sub
fsubrl
lds
cmp
dec
mov
pop
adc
subb
xor
fmull
mov
push
scas
mov
push
xchg
mov
push
xchg
aam
add
add
cmp
mov
paddusb
cmp
dec
ja
out
sbb
repnz
add
aas
jns
pop
mov
mov
mov
add
mov
rorb
jae
xor
ret
fwait
cmc
fdecstp
adc
jp
mov
pop
xor
xor
xlat
mov
mov
inc
mov
jnp
jl
mov
orb
pop
shrl
mov
lods
jecxz
pop
pop
xchg
lock
pop
sub
stos
xchg
imul
sahf
cs
inc
add
clc
xor
lcall
xchg
pusha
adc
cmpl
lods
mov
scas
outsb
push
sbb
pop
push
cmp
inc
in
push
or
push
xchg
movsb
cmp
mov
xchg
in
add
out
add
lds
rclb
or
mov
loope
adc
mov
ret
mov
push
jmp
pop
cld
mov
lock
dec
loop
dec
inc
decl
aaa
jg
clc
ljmp
jecxz
push
das
cmp
jae
sbb
xor
insl
fs
pop
push
mov
inc
daa
nop
daa
jmp
out
xor
add
sub
ret
loope
int
pop
je
ficomps
lcall
jp
ljmp
cmp
repnz
test
repnz
xor
popf
dec
imul
out
jp
cwtl
adc
pop
mov
stc
mov
enter
in
ljmp
xchg
jecxz
daa
repnz
cmp
mov
cmp
cmp
sub
mov
sbb
sti
mov
pop
sbb
sub
test
cmp
loop
push
mov
jle
aad
inc
xchg
lret
jmp
adc
push
xor
movsl
xchg
fsubl
sub
add
and
sbb
fmuls
addb
dec
mov
lret
mov
push
fnsave
xor
fsubrp
mov
adc
stos
xchg
in
test
andb
xor
cmp
lret
jle
bound
mov
add
leave
clc
cmpsb
fimull
in
ss
inc
loopne
cmp
xor
loopne
cmp
leave
push
mov
outsl
jae
or
xchg
xor
mov
sbb
test
jbe
lds
push
mov
clc
aad
or
mov
push
xchg
out
divl
mov
cmp
mov
stc
addb
sarb
js
out
dec
nop
mov
iret
or
push
mov
push
adc
maxps
fwait
in
xor
movsb
addb
inc
pop
push
cs
inc
bswap
daa
cmpsb
pop
xchg
aad
pop
je
sub
aad
pop
lods
orl
mov
fstl
in
push
data16
mov
gs
ficoms
jmp
addb
dec
cmp
clc
push
sub
bound
cmp
ljmp
fdivrs
jae
push
mov
xor
lock
int
mov
mov
xor
scas
mov
xor
int3
leave
outsb
jg
icebp
adc
pop
sub
insl
and
lock
imul
test
cmc
pop
mov
adc
test
fs
dec
mov
test
lds
clc
pop
adc
push
cmp
icebp
clc
inc
push
push
mov
addl
mov
divl
test
leave
xor
rcll
xchg
cs
je
jle
test
cmp
cmp
imul
mov
test
fs
ds
insl
aaa
adc
imul
out
in
pushf
outsb
rcrl
jl
pop
dec
hlt
mov
scas
out
fcomps
sar
loopne
sub
mov
jg
ficoml
loopne
aas
pop
insb
inc
cmp
mov
add
mov
in
inc
inc
minps
push
xor
pop
push
aaa
shlb
push
addr16
xchg
push
adc
mov
movsb
stos
mov
push
cwtl
and
mov
stos
mov
out
inc
rcrl
nop
xor
stos
lods
scas
adc
xor
scas
mov
lret
jnp
fldenv
not
arpl
push
leave
sub
and
rclb
jmp
test
lret
imul
mov
add
lods
bound
push
pusha
dec
push
lods
mov
lds
dec
xchg
mov
and
daa
lret
inc
and
and
pop
fildl
fsubl
sbb
add
rclb
add
or
outsl
mov
cmpsb
aam
stc
and
mov
cmpsb
or
xor
ja
rcll
push
inc
leave
and
mov
repz
cmpsb
lods
sub
inc
sti
ja
sub
not
xor
xor
adc
cmpsl
inc
adc
sub
cmpsl
out
pop
insl
push
sub
lcall
lea
popf
insb
push
fsubrl
mov
clc
popf
sub
lds
add
xlat
xor
xor
or
xchg
in
stc
cmpb
nop
add
bound
adc
push
outsb
xchg
test
lds
jge
pop
sbb
adc
adc
mov
mov
lcall
sbb
repz
adc
jno
push
dec
inc
mov
rolb
imul
sbb
add
cmc
add
aam
sbb
pop
jns
mov
pushf
lahf
ja
push
add
push
jmp
sub
xor
cwtl
sbb
roll
xchg
pusha
cli
fidivrs
and
dec
inc
cmp
dec
dec
ftst
in
cli
xor
arpl
popa
add
adc
pop
add
stc
dec
sub
pop
cli
out
mov
ljmp
adc
ret
push
sub
jbe
adc
push
xchg
and
filds
and
jmp
cs
or
push
insb
nop
mov
mov
addr16
xor
repz
add
pop
push
mov
cwtl
sbb
cmpsl
jl
inc
scas
xor
fmull
mov
outsb
sub
fsubr
mov
mov
add
sub
add
call
addl
fdivrs
xchg
cltd
dec
fmuls
paddq
pop
rol
fdivrl
mov
mov
lods
push
loopne
jge
mov
sub
or
push
cmc
and
add
push
lcall
mov
pop
fldl
dec
push
jns
mov
xor
inc
sub
mov
clc
icebp
sti
ljmp
or
jp
pop
lcall
push
jle
dec
pop
mov
sbb
rcrl
xchg
sub
mov
popl
ds
sbb
imul
test
cmp
outsl
ret
repz
jne
sub
pop
add
aad
int3
xchg
and
push
test
cmpsl
mov
std
mov
add
lods
push
xchg
cmp
jno
inc
sbb
xchg
mov
loopne
xor
push
dec
not
test
clc
mov
gs
sub
aas
cld
mov
xchg
inc
scas
push
shll
push
adcb
jb
and
jmp
aad
push
fisttpll
leave
xchg
jo
dec
subb
cmp
mov
add
repnz
xchg
adc
sbb
or
xchg
test
cmp
adc
sub
das
and
and
fiadds
nop
sarb
push
test
push
or
dec
dec
mov
ds
sbb
mov
mov
xlat
rolb
aas
jnp
cmp
push
fdivrp
xchg
lods
mov
jbe
shlb
xor
fcom
dec
or
and
lods
xchg
enter
lea
push
and
fs
testl
rcl
mul
push
popf
jp
inc
xchg
lret
stos
out
inc
cmp
test
cmpsb
add
cmpsb
xchg
jns
mov
mov
mov
sbb
in
cli
sbbb
xchg
sbb
in
mov
int3
scas
or
and
inc
arpl
mov
add
les
imul
adc
jns
jne
pop
push
fsts
out
xor
pop
fistps
sti
stos
push
rcrl
cmc
pop
leave
and
mov
jge
xor
pusha
subb
xchg
or
stc
mov
pop
jbe
enter
jnp
pop
mov
inc
test
jecxz
jnp
jl
pusha
call
pop
jno
mov
hlt
out
adc
lahf
or
ret
mov
cld
xchg
push
lahf
mov
das
sar
sub
mov
js
mov
cmp
fimuls
mov
pop
lods
arpl
cs
popa
add
iret
test
sub
leave
or
jg
inc
jmp
xchg
ret
push
lret
xchg
mov
pop
cmpsb
jne
and
adc
or
ljmp
xchg
push
pop
jo
nop
and
adc
outsl
sub
adc
dec
imul
and
leave
outsb
sub
jle
xchg
std
jge
imul
push
leave
in
jp
pop
inc
sub
xlat
pop
adc
movsl
sub
test
dec
sbb
das
inc
insl
push
jb
jecxz
cmp
dec
cmp
mov
pop
push
icebp
inc
jmp
adc
jp
cmp
pusha
push
scas
mov
jne
push
push
clc
aad
xor
icebp
loopne
inc
outsb
inc
movsb
push
xor
or
popf
cmpsb
sti
mov
test
push
fadd
fst
pop
pop
iret
xchg
into
cmc
popa
mov
std
mov
xor
push
cs
jnp
mov
sub
fwait
sbb
clc
push
jne
add
out
xchg
mov
xchg
iret
jns
aas
cli
xor
aam
pop
mov
jo
jg
and
in
mov
add
xor
push
test
sub
sar
mov
std
xchg
adc
lret
scas
jo
push
sub
sbb
lock
mov
cmp
and
dec
jbe
addr16
push
lret
cmp
add
xchg
pop
lahf
stc
mov
xor
je
inc
mov
subb
inc
divl
xor
push
xchg
mov
dec
clc
cld
push
int3
scas
test
sub
add
or
mov
mov
or
aam
dec
lock
cmp
sti
xchg
adc
jb
sub
mov
cmp
lret
cmp
push
repnz
jno
stos
pop
mov
sti
call
mull
jns
data16
dec
out
rorl
jo
push
cmp
dec
sbb
xor
fmull
fistps
mov
incl
stos
adc
pop
cmp
pusha
fcoml
sbb
adc
mov
jle
push
aam
add
das
and
jae
test
adc
ja
dec
out
out
mov
repz
mov
xlat
pop
and
pop
pop
ret
jb
xor
movsl
push
imul
push
push
mov
sbb
jmp
in
sarb
shll
inc
int3
pop
popa
xor
ja
mov
sbb
add
or
cmp
jne
in
push
dec
xchg
bound
xor
sub
sbb
pop
lods
push
or
out
dec
cwtl
test
shlb
push
push
sbb
lea
mov
dec
cwtl
movsbl
subl
ljmp
push
xlat
and
push
gs
dec
mov
mov
lret
cli
xor
pop
les
and
ficompl
xchg
bound
jno
fldt
cmp
dec
inc
mov
or
jne
sub
push
inc
loop
inc
shlb
scas
dec
cs
addl
and
mov
andl
sub
inc
inc
scas
xor
mov
bound
xlat
inc
js
divb
mov
xchg
shrl
loop
iret
repz
orb
lcall
jno
idivb
pop
aaa
ss
dec
lods
mov
js
xor
and
daa
add
push
push
push
inc
xchg
jp
sbb
push
or
sub
cmp
popa
inc
mov
jg
bound
and
push
xchg
aas
push
jo
xor
loop
xor
xor
cs
or
sbb
sub
daa
std
push
inc
stos
adc
mov
inc
dec
pop
lahf
aam
rorl
jne
sti
cmp
call
pop
pop
lret
add
add
lds
and
dec
adc
push
and
daa
pop
pop
int
adc
pop
pop
ss
out
stos
sub
dec
lcall
das
fmul
jns
mov
pusha
iret
jge
pop
dec
mull
mov
stos
lahf
ror
notb
mov
movsb
popa
xchg
pop
iret
inc
js
rorb
psllq
mov
in
lods
or
jecxz
fstl
adc
cltd
enter
push
pop
xorb
movsb
ss
leave
push
loope
in
mov
mov
loopne
xchg
push
xchg
xor
stos
xchg
sub
xchg
mov
aad
nop
fcmovne
and
sub
mov
mov
ds
add
leave
pop
sbb
dec
filds
mov
bound
fs
sbb
inc
adc
xor
fisubrl
sahf
push
jg
ja
pop
xchg
mov
icebp
fsubl
je
inc
add
add
in
lahf
outsb
jns
mov
dec
pop
jno
int
loop
pusha
jbe
int3
ss
push
lods
jmp
xchg
sahf
mov
int3
mov
call
sbb
and
cmp
shlb
jne
mov
jae
sub
inc
mov
and
call
mov
sahf
int
lret
xor
rcll
xor
cmp
xchg
dec
mov
xor
jbe
or
pushw
pop
jae
mov
fwait
push
or
call
lock
push
lods
mov
pusha
repz
cs
push
das
ja
addb
dec
xchg
std
cmp
fs
mov
jmp
pusha
jecxz
pop
inc
inc
pushf
xor
jae
adc
or
cld
test
outsl
pop
push
aam
mov
xchg
imulb
sub
jae
movsl
out
test
xchg
jp
or
jns
mov
les
shl
add
call
jecxz
cltd
jmp
push
aam
popa
sbb
addb
mov
call
out
and
xor
dec
or
pop
das
fidivl
leave
mov
bound
mov
fsubl
dec
pop
imul
mov
mov
or
adc
dec
push
xchg
mov
ret
scas
or
popf
xor
nop
jne
sahf
in
dec
xchg
mov
fs
fstpl
adc
mov
sbb
imul
pushf
stos
mov
push
insl
inc
dec
pop
lock
mov
add
cmp
aaa
add
cs
cs
inc
ficompl
cmp
adc
jl
jecxz
mov
lret
outsb
mov
bound
arpl
test
in
addb
imul
shll
adc
orb
dec
push
cli
dec
and
enter
xchg
shlb
sbb
aad
int
fistl
pop
rclb
int
pop
cmc
data16
mov
xchg
pusha
dec
mov
and
hlt
je
in
mov
xor
mov
inc
mov
cwtl
cmpsl
aaa
loopne
sbb
jbe
outsb
jnp
or
push
jae
dec
ret
mov
mov
rcll
fcoml
xor
xor
xor
jg
mov
mov
mov
cmpsl
fstl
jp
out
mov
cli
sbb
xor
call
dec
or
popf
neg
adc
pop
push
inc
fidivrs
mov
mov
pushl
lret
adcb
push
cmp
and
movsb
jbe
jecxz
das
push
push
inc
add
cli
push
test
sahf
cmp
cs
outsb
mov
fmull
negb
mov
mov
jecxz
sahf
mov
add
mov
push
xchg
or
outsb
les
int3
sbb
or
sti
push
lcall
sbbb
xchg
push
push
cmc
daa
ja
fistpll
mov
add
dec
push
mov
lods
flds
xor
xor
out
out
stos
outsl
fldt
stos
mov
repnz
mov
ss
fsubl
lods
push
js
pushf
jnp
pause
lds
int3
fisubrl
lahf
xor
sub
add
xchg
add
push
rep
ds
jle
fistpll
xor
mov
dec
sub
jne
inc
xchg
idiv
movsl
icebp
jne
xchg
inc
push
ret
and
xchg
push
roll
cmp
outsl
cmpsl
lods
ret
test
outsl
ret
mov
and
inc
mov
fstpt
insb
lods
inc
dec
bound
jle
cltd
mov
push
sub
insb
enter
in
ret
or
lea
es
pop
jbe,pt
test
mov
das
push
inc
pop
dec
mov
cmp
jnp
mov
clc
sub
stos
pop
or
shll
fdivrs
iret
sub
and
popa
insl
nop
aad
lods
in
les
dec
jns
xchg
faddl
cmp
or
cld
sbb
sbb
sbb
sub
pop
push
adc
fcompl
sbbb
push
xchg
push
sub
xorl
or
ficomps
inc
xchg
inc
in
cmp
insb
mov
lds
xchg
dec
clc
push
mov
repnz
add
xor
cld
mov
lret
cmp
andl
sbb
sub
mov
lods
mov
mov
adc
mov
addr16
loopne
mov
mov
or
inc
aas
adc
clc
mov
jno
sub
or
nop
arpl
lret
scas
popa
out
mov
mov
inc
testl
lahf
rcrb
push
xor
sub
scas
push
cli
or
jp
out
adc
in
xchg
out
or
cmp
mov
sbb
fnstsw
xor
adc
in
pop
dec
cmpb
fs
test
insb
push
ret
inc
rclb
faddp
arpl
insb
in
imul
or
jl
pop
add
ret
pop
dec
icebp
sub
fstps
xor
push
pop
ficompl
hlt
sbb
iret
mov
out
add
cmp
and
daa
fimull
jns
lret
rcl
xchg
xor
mov
dec
pop
jo
fisubrl
pop
mov
hlt
lods
call
test
adcl
hlt
sub
aad
jbe
loope
sarl
and
dec
push
iret
pop
aaa
pop
pop
fisubl
test
fnstenv
ds
test
jno
xor
push
mov
cmp
jns
sub
stc
xor
adc
mov
jg
adc
inc
stos
xlat
fmull
sarb
test
add
cltd
push
xchg
ds
cmp
xchg
popa
clc
adc
pop
jno,pt
cmp
outsb
es
enter
jb
pop
scas
push
stos
mov
sbb
popf
inc
adc
iret
pop
mov
lds
sarl
jb
xchg
cmpsl
add
int
or
ss
fstps
jmp
sbb
push
pop
lods
xor
icebp
push
cld
test
hlt
pop
cmp
ficomps
vpsubq
aaa
mov
xor
sbb
lret
fs
mov
out
lahf
and
inc
and
cs
sbb
jnp
mov
dec
pop
push
xor
fwait
mov
push
mov
cmp
sbb
rorb
roll
xchg
jecxz
dec
xor
out
xchg
inc
insb
jge
cmp
mov
cmp
push
pop
jae
fidivrs
or
cld
push
jnp
adc
xor
sti
mov
mov
fildl
fcomi
jl
jbe
mov
inc
imul
pop
dec
aad
xor
and
sbb
pop
in
mov
aam
push
push
arpl
xchg
lea
inc
mov
xor
pop
inc
jge
roll
sub
lret
dec
mov
lret
inc
pop
xor
insb
hlt
pop
rorl
push
popa
cmc
test
nop
test
jns
imul
and
pop
sar
aaa
mov
cmp
inc
lret
jmp
push
push
test
aaa
xor
arpl
sahf
sahf
dec
sahf
fildll
or
and
in
test
dec
pop
and
imul
sbb
push
loopne
sub
ja
sub
add
sbb
cmp
xchg
pop
lods
push
or
dec
sub
insb
xor
rcr
insl
mov
ret
mov
jp
adc
leave
xor
lock
pop
hlt
mov
xor
sbb
cmp
icebp
lds
imul
pusha
cmp
out
jae
fldt
or
stc
add
push
mov
test
testl
add
fdivs
faddl
adc
and
aas
add
mov
dec
sub
rcll
mov
inc
adc
inc
aam
sbb
mov
xor
inc
dec
pop
mov
mov
insl
mov
push
push
adc
sar
pop
inc
mov
arpl
dec
rol
fsubl
repnz
jle
fdivrl
add
xor
aas
jnp
lods
mov
sbb
mov
mov
xor
push
mov
cld
xor
adc
iret
mov
mov
jl
mov
mov
fprem1
and
mov
cmp
aaa
aaa
pop
lds
dec
mov
sub
mov
fsubl
je
inc
shrl
sub
push
gs
and
ss
fisttpl
xchg
mov
outsl
push
or
and
jecxz
ss
popf
shll
mov
jle
xor
cmpsb
fstps
add
pop
roll
jns
cmpsl
sar
cmp
sbb
add
pop
xor
or
adc
pop
daa
popf
mov
lret
mov
jge
jae
fcmovbe
xor
lds
iret
mov
cmpsb
cmp
sbb
sbb
enter
adc
add
inc
pop
sti
sahf
shrl
fbld
xor
icebp
rep
mov
lcall
insb
adc
sub
adc
outsl
push
roll
sbb
pushf
orl
mov
negl
jno
xor
mov
loopne
popa
vpcomq
rolb
pop
add
out
xchg
jne
lret
mov
add
inc
lock
subl
orb
enter
rclb
jmp
arpl
das
cmp
fildl
sbb
shll
jmp
in
pop
ja
jnp
lods
sub
inc
call
xchg
cs
dec
dec
sub
cld
mov
mov
outsb
adc
xor
cmp
out
icebp
jnp
jbe
inc
and
cmovo
sar
cltd
stos
inc
imul
xor
mov
sbb
push
push
cmpsl
cmp
jl
loop
imul
add
jns
xor
inc
push
ret
pushf
push
std
sub
mov
mov
mov
jl
rclb
xchg
jmp
stos
roll
sub
jg
adc
lret
add
jbe
mull
add
inc
push
lahf
fildl
sub
cmpsb
push
cmp
hlt
inc
sub
les
aad
add
jnp
mov
cli
cmp
dec
pop
sahf
gs
dec
pop
mov
cmp
mov
dec
scas
fldt
lods
xor
xor
pop
dec
jecxz
sbb
in
dec
cmpl
inc
or
movsl
push
shl
popf
sub
push
idivb
bound
dec
dec
jno
dec
fiaddl
cmp
xorl
jecxz
icebp
shlb
cmp
pop
and
dec
gs
mov
mov
popa
icebp
inc
and
ss
rcll
lock
repnz
std
out
loope
in
es
xor
jno
inc
xlat
imul
clc
je
push
mov
jecxz
xchg
push
cmp
notl
inc
hlt
mov
jge
test
insl
loopne
jg
pop
in
pop
dec
mov
mul
jmp
fs
inc
mov
mov
jne
sbb
dec
add
decb
push
push
fidivl
push
cmpsb
std
outsb
push
mov
add
adc
popa
into
xlat
in
or
sub
popa
mov
mov
ja
das
mov
sub
inc
jl
das
rclb
pop
xor
sub
int3
enter
mov
lods
imul
punpckldq
ds
rcl
push
dec
out
sub
int3
push
clc
idivl
mov
jb
inc
mov
fcomps
jb
cmp
scas
pop
xchg
and
jnp
mov
cmp
sbb
push
add
out
jmp
cmp
imul
xchg
dec
testb
dec
mov
cmpsb
fiaddl
pop
arpl
into
cmc
lcall
cmp
in
shrl
sub
arpl
imul
fldl
bound
cld
scas
pop
and
cmp
cmc
sub
inc
and
add
fsts
mov
dec
mov
lahf
loopne
pop
sub
cs
jno
cmp
shrb
gs
call
dec
aaa
push
mov
push
gs
outsl
xlat
out
orl
mov
lods
mov
shll
mov
inc
fwait
sub
pop
out
cs
xor
sahf
rcrb
pushf
insl
fsubp
test
test
rolb
dec
in
lock
popa
repnz
mov
lahf
out
mov
dec
hlt
adc
xor
pop
std
addr16
leave
push
lcall
lea
and
lret
ds
in
lods
push
lcall
and
inc
lods
and
sub
jnp
scas
adc
jmp
mov
ss
into
xchg
dec
jne
scas
sbbb
in
xchg
xchg
pop
out
xlat
aaa
xchg
cmp
inc
lea
out
cmp
jmp
shrb
fcoml
out
and
enter
cld
push
aad
xchg
pop
push
pop
and
ficompl
jae
lcall
fwait
and
inc
cmp
or
sub
and
pop
bndstx
lds
pusha
xor
and
cmpsb
or
mov
sbb
cwtl
or
ds
or
dec
fnstenv
sarb
andl
xchg
jb
pop
dec
mov
mov
mov
test
cmpl
or
xchg
mov
mov
fs
mov
dec
mov
sub
pop
jbe
and
push
add
mov
pop
sub
sbb
adc
cli
daa
mov
dec
std
pop
adc
popa
test
sub
mov
stos
mov
pop
daa
iret
fcoml
jne
mov
push
mov
pop
loop
test
lret
dec
aas
inc
jl
je
and
push
cmp
cmp
mov
es
dec
lret
rcrb
jne
in
mov
dec
add
addr16
cmp
jle
in
dec
xchg
push
adc
mov
cmp
aas
jge
aad
sahf
stos
loop
lahf
mov
imul
xchg
test
ja
cs
imul
out
sub
fprem1
call
leave
adc
aam
pop
loop
and
insl
pop
push
gs
lods
push
jno
sbb
cli
dec
rolb
aaa
in
in
xor
add
jns
fnstenv
xchg
mov
sarb
xchg
in
test
addb
sahf
int
out
int
dec
in
jl
sub
cli
sbb
push
sbb
mov
mov
pop
mulb
inc
mov
lods
bound
cmpsl
push
add
es
jne
adc
test
add
movsb
lock
cmp
push
jae
cmc
arpl
jp
pushf
mov
lret
out
scas
cmc
mov
jecxz
daa
add
fdivrl
scas
inc
add
pop
clc
std
fiaddl
and
xor
jge
sbbb
push
inc
cmp
pop
jbe
dec
pop
jmp
sarl
imul
xchg
and
add
rorl
test
adc
jmp
jne
stc
js
sbb
cmp
and
lds
jmp
aad
sbb
push
dec
pop
ja
pop
or
push
cmpb
mov
movsb
dec
ds
mov
es
rol
fbstp
xor
out
and
adc
addb
popf
lea
xchg
mov
inc
iret
popa
rcll
mov
out
pop
inc
loope
or
outsl
dec
sub
pop
hlt
pushf
sub
sbb
sahf
aad
pop
xchg
sub
and
push
and
and
mov
xor
push
xor
pop
aas
xchg
call
ja
fcoms
dec
imul
test
xor
shlb
sub
pop
mov
ret
in
ret
jp
aam
add
mov
mov
push
lds
dec
int
inc
aas
mov
mov
adc
adc
mulb
stos
push
call
push
mov
or
nop
pop
sub
sub
in
jge
inc
je
inc
pushf
popf
cmp
and
jmp
dec
popa
xchg
into
adc
dec
inc
int
dec
push
aad
icebp
iret
in
sahf
jmp
movsl
dec
mov
mov
jnp
cli
shrb
sbbb
jne
scas
xchg
mov
xchg
cmp
scas
xchg
aad
fwait
leave
xchg
jl
xchg
jmp
inc
mov
mov
push
push
adc
inc
mov
rolb
xchg
mov
lods
out
adc
xorl
add
je
imul
pop
pop
sbb
aaa
and
outsb
mov
fcoml
cmp
ds
mov
xchg
and
sbb
add
pop
test
call
mov
stos
popa
inc
incl
out
arpl
jno
adc
inc
cmp
hlt
jbe
sbb
pushf
pop
pmulhw
pop
or
cmpl
adc
inc
inc
pop
jo
mov
ss
test
dec
mov
call
xchg
xor
ja
jmp
mov
mov
test
pop
and
or
pop
inc
out
fists
add
iret
dec
por
loopne
mov
inc
cmc
pushf
adc
inc
jmp
shlb
push
xor
cmp
or
or
mov
hlt
jp
push
add
jmp
lea
or
push
push
xlat
pop
push
jne
xor
push
sahf
in
fwait
xor
nop
fs
inc
out
inc
cmp
add
cmpsl
leave
add
add
sub
call
aad
int3
ret
or
jg
mov
call
push
mov
cld
fmul
xchg
loopne
mov
cld
in
js
mov
mov
xchg
outsl
paddd
mov
xchg
ret
pop
cmpsl
test
cmpsl
push
ret
negb
mov
xor
stos
inc
pop
rorb
jbe
xorl
je
and
fadd
negl
insb
xchg
mov
sbb
out
cli
xor
repz
sahf
jo
adc
and
xchg
and
ss
bound
xchg
rorb
xchg
popf
lock
mov
add
jnp
arpl
pop
ret
dec
or
inc
fs
push
xchg
aad
cmc
mov
sub
cmp
aaa
xlat
push
inc
aaa
mov
pop
clc
addr16
test
adc
insb
mov
lret
add
shrl
out
shll
push
movd
arpl
repz
loope
cmc
cmp
inc
fnstsw
sbb
push
mov
pop
mov
mov
cmp
push
dec
and
mov
inc
lret
mov
test
dec
jg
orl
fcompl
cmc
je
jne
rcrl
sbb
adc
test
mov
inc
xchg
jns
jp
push
add
sub
cmp
rcll
dec
mov
fadds
enter
jl
xchg
dec
adc
jns
inc
or
sbb
or
hlt
xor
cmpb
loopne
xor
mov
aad
xchg
iret
out
jg
inc
imul
dec
xchg
jg
loopne
xchg
les
push
xchg
mov
or
lcall
dec
movsl
mov
and
push
jle
les
leave
pop
dec
jle
idivl
mov
pop
shr
sbb
add
nop
gs
jnp
movsb
dec
jmp
jmp
test
push
stc
and
neg
jl
das
stos
sarb
cmp
cmp
in
daa
mov
push
pop
push
insl
push
fwait
rorb
cld
cmpb
out
mov
adc
loopne
repnz
push
pop
sbb
dec
mov
add
sti
mov
popf
in
aam
lahf
ljmp
movsb
pop
cmpsb
les
sbb
imul
dec
xor
stos
add
mov
shlb
adc
lods
add
push
test
clc
xor
xchg
pop
arpl
fistl
in
in
sub
cmp
in
repnz
jnp
jo
mov
pop
xchg
add
or
push
mov
fbld
int3
out
jbe
loopne
push
test
cmp
mov
insl
cmp
pop
mov
push
div
mov
inc
add
in
pop
or
mov
mov
push
sub
aad
cmpsl
rclb
push
cli
push
sbb
xchg
stos
pop
xchg
push
shl
fcompl
push
orb
sbb
mov
leave
dec
mov
movsb
sbb
sub
xchg
lret
jae
xor
jnp
fbld
mov
lods
jecxz
or
jae
aas
and
mov
sub
jmp
fwait
aas
or
dec
sbb
dec
insb
jge
hlt
sub
xchg
in
inc
out
inc
mov
lret
push
fnstcw
sti
int3
mov
sarb
lahf
or
sarb
into
sti
pop
mov
dec
xchg
mov
jge
sbb
mov
add
or
push
add
add
addb
add
adc
add
add
call
add
adc
add
add
add
.byte
cmp
add
or
add
add
and
xchg
arpl
pusha
pop
add
add
and
add
add
or
adc
add
add
add
add
add
add
addb
pop
add
and
add
add
add
mov
pop
add
add
add
or
add
add
and
add
add
and
add
adc
push
ret
dec
ja
cmpsl
mov
sahf
xor
cltd
jbe
cld
or
xchg
mov
lahf
loopne
sbb
mov
inc
dec
lods
pop
push
adc
clc
pop
loope
mov
enter
je
xor
pusha
pop
lahf
cmp
lahf
fidivrs
xchg
xchg
stos
pop
fcomps
sub
test
xchg
pop
cld
rcll
scas
jne
sbb
enter
mov
cmc
xor
sub
neg
push
mov
lds
pop
cmp
and
enter
rorb
jns
and
inc
std
jb
mov
xor
add
std
pop
mov
out
pop
or
jl
sahf
inc
pop
xor
jno
cmp
xchg
icebp
data16
sub
xchg
lock
dec
jne
aaa
or
lcall
xchg
push
mov
aas
stc
mov
int3
mov
jae
sbb
jne
iret
and
sub
imul
pop
fimull
jo
loopne
dec
nop
bound
xlat
push
adc
cmp
jbe
mov
rolb
stos
add
cmc
in
and
stos
addr16
cmp
pop
mov
jp
dec
xchg
out
dec
lcall
scas
lahf
mov
das
dec
pop
xchg
ret
imul
imul
xor
push
stc
call
push
fsubs
xchg
iret
or
out
inc
mov
or
jl
mov
xchg
iret
xor
in
cmp
pop
and
neg
scas
adc
jne
dec
inc
mov
sbb
xor
push
leave
insl
jo
call
push
shl
ja
iret
ret
inc
mov
imul
jg
push
aad
test
pop
sti
inc
mov
lods
inc
mov
xor
rorl
pop
push
pop
cltd
pop
mov
hlt
lds
bound
cmpb
xchg
add
jg
lcall
inc
jecxz
lods
test
xor
jmp
mov
push
jecxz
add
lret
pop
insl
xchg
mov
movsl
mov
sbb
push
fwait
test
lods
stos
inc
xchg
inc
js
clc
or
jbe
sbb
cmpsl
scas
test
and
dec
mov
mov
dec
push
add
push
jne
jmp
out
cmp
sahf
pop
mov
push
mov
xchg
sub
and
leave
mov
int
jnp
ds
aas
pop
jecxz
mov
insl
or
ss
xchg
mov
dec
push
sub
sub
pop
add
and
jecxz
ds
pop
add
ljmp
dec
loopne
or
add
or
or
nop
jp,pt
pop
sbb
or
mov
pop
insl
gs
jge
fucom
js
ljmp
xacquire
lahf
mov
pop
mov
ficomps
pop
add
mov
mov
and
aas
add
fmuls
leave
push
adc
mov
mov
mov
pop
fildl
out
mov
cmpl
sbb
xchg
xchg
sub
mov
mov
or
js
arpl
pop
pop
mov
out
mov
adc
xchg
pop
pop
idivb
add
stos
mov
mov
repnz
in
add
push
jge
pushf
mov
lods
dec
push
push
dec
aam
push
jne
xchg
push
rsqrtps
xchg
shll
notl
pop
xor
clc
jg
pusha
nop
enter
in
pop
icebp
adc
scas
cmp
pop
stos
and
jne
in
or
push
xor
xlat
sub
cld
les
scas
cmc
push
mov
push
daa
cmp
cmp
loopne
xchg
fs
xlat
sti
pop
cli
jb
mov
addr16
add
roll
mov
push
and
into
loopne
xchg
daa
shl
dec
clc
add
cmp
mov
dec
mov
push
push
jno
mov
ja
cmp
fisubrl
nop
es
movsb
les
or
ret
push
out
test
div
inc
je
mov
inc
mov
add
sub
cmpsb
dec
imul
dec
test
notb
jnp
jae
xchg
mov
sub
movsl
dec
adc
cmp
mov
and
orl
push
mov
sub
pop
shll
dec
fisubrl
add
aaa
imul
cmpsl
pop
loopne
sub
jo
loopne
cmc
cli
add
inc
inc
inc
mov
and
mov
pop
inc
sub
je
jno
in
in
sbb
inc
mov
fbstp
cwtl
mov
dec
cltd
sub
negl
lcall
fdivl
fstpl
pop
cmp
xor
clc
and
dec
cmp
lock
xchg
mov
lret
jno
scas
scas
push
test
push
xchg
dec
sub
adc
or
popf
ja
movsl
xchg
loopne
popa
pop
adc
mov
out
pop
inc
fdivrp
fdivr
lds
mov
push
in
fs
pop
lcall
cmp
arpl
ficoms
lock
scas
mov
xorl
fwait
lahf
sbb
jmp
push
popf
xchg
test
adc
std
scas
add
in
mov
and
inc
shlb
outsl
lahf
out
sub
sti
fldt
push
sub
sbb
lods
lock
filds
pop
xor
add
or
sub
int
ret
or
ss
fnsave
mov
xor
imul
fidivrl
or
push
arpl
lea
xor
mov
std
push
scas
movsb
out
inc
lret
lods
pop
sub
adc
popf
mov
xchg
lea
popf
or
xchg
ja
dec
imul
fwait
lock
int
push
inc
pop
mov
lds
cld
aaa
sahf
js
jns
mov
loop
repnz
inc
into
les
gs
stos
add
test
add
mov
hlt
ja
imul
push
je
or
sub
call
sub
xor
mov
xor
jae
sub
adc
leave
pushf
movb
push
mov
add
xlat
mov
sysret
pop
fisttpl
jg
repnz
and
cmp
in
es
stos
mov
ret
cwtl
stos
jns
fcoms
int3
jb
jne
push
addr16
sbb
mov
jnp
js
jbe
arpl
neg
adc
pop
add
js
and
or
loope
test
mov
fsubrl
xor
cwtl
das
repnz
mov
push
lods
repnz
cmpsb
xor
movsb
inc
dec
mov
popa
mov
scas
out
inc
addr16
cmp
and
mov
cmp
jle
lahf
jne
insb
call
ljmp
xchg
push
jno
iret
push
or
dec
testl
daa
mov
xchg
in
lods
dec
hlt
xchg
pop
dec
pop
dec
xchg
pop
mull
and
inc
dec
arpl
push
jno
and
fdivs
aam
insl
sbb
push
jmp
loop
rcrl
add
pop
js
pop
pop
cmc
mov
mov
notl
xchg
inc
jecxz
ret
mov
cmp
jns
rolb
icebp
and
push
mov
or
mov
mov
and
dec
sti
js
mov
cs
dec
inc
ret
mov
js
pusha
xlat
pushf
xchg
leave
lea
imul
jo
sub
mov
dec
jns
imul
lods
loope
outsb
insb
adc
push
jl
xchg
add
dec
sbb
mov
es
lret
dec
cltd
jle
fisubrs
jg
ljmp
into
xchg
push
jle
loop
add
or
inc
cmp
add
push
add
jo
xchg
push
mov
hlt
add
mov
mov
test
insl
sar
stos
leave
jbe
ss
inc
fisttpll
pusha
repnz
rcrl
shlb
nop
cmpsl
sti
jmp
xchg
jne
ds
jb
mov
pop
pop
xchg
movsb
sub
movsb
fbld
imul
sbb
fistl
das
push
icebp
jecxz
faddl
add
or
int3
ds
xlat
push
mov
pop
roll
push
dec
mov
fisttpll
jg
sbb
mov
addb
or
lods
lods
out
xchg
mov
insb
mov
cmp
mov
jecxz
int3
pop
psubb
push
repnz
jne
mov
push
jmp
jl
das
pusha
cmp
mov
push
jle
mov
filds
fsubr
sub
xor
xor
mov
inc
xor
and
inc
sbb
dec
pushf
add
mov
sbb
sbb
inc
mov
jns
ret
daa
in
xchg
cmp
into
js
pop
pop
rol
shlb
pushf
fstpl
inc
shlb
iret
xchg
pop
mov
add
and
push
lods
pop
ss
divps
js
xchg
jmp
push
sub
clc
shr
das
sahf
mov
jecxz
int3
mov
push
xchg
insb
jnp
jg
sbb
leave
cmp
jne
cmp
fdivs
push
hlt
ljmp
mov
aam
outsl
lret
popa
xchg
push
jae
jno
dec
das
or
inc
test
mov
cmp
xchg
adc
or
or
cmp
sbb
xchg
leave
out
push
cmp
les
daa
cli
mov
mov
mov
nop
inc
pop
dec
aad
clc
dec
jg
push
mov
sub
in
jns
daa
psrld
push
movsl
movsb
subl
leavew
js
cld
test
mov
dec
mov
jne
in
mov
mov
lea
jnp
shl
inc
das
and
xor
insb
shrl
imul
add
push
aam
mov
and
push
je
mulb
ds
loope
or
fisubrl
iret
and
xchg
adc
fidivs
mov
xchg
into
int3
pop
jne
mov
mov
mov
mov
mov
repnz
adc
dec
xor
xchg
daa
ret
add
mov
push
pop
mov
or
sub
add
cmp
mov
mov
call
fldenv
sbbb
dec
mov
mov
cwtl
mov
mov
addl
mov
in
jnp
sbb
aam
fwait
inc
pop
pushf
aas
xlat
xchg
pop
ret
shlb
lods
arpl
loop
mov
fsubr
mov
cltd
std
scas
dec
sbb
clc
inc
adc
or
mov
out
inc
sbb
in
out
cltd
mov
subb
jmp
mov
pop
cmc
sub
into
jg
xchg
jo
push
sbb
inc
sbb
jp
hlt
cmp
sahf
dec
jmp
push
fwait
sub
into
sbb
inc
ja
pop
lods
nop
pushf
imul
lods
leave
push
push
xor
pop
nop
aam
lahf
int
xor
push
mov
mov
cli
lret
add
rcrl
insl
add
or
add
sub
mov
call
adc
stos
ret
inc
int3
xchg
les
jmp
xchg
out
xor
ficompl
inc
mov
int3
adc
daa
mov
cmp
add
add
test
push
out
mov
pop
mov
movl
pusha
sbbb
es
clc
in
scas
mov
in
add
dec
ret
test
divb
jg
lods
jae
xorb
mov
dec
enter
pop
fdivl
sbb
arpl
and
or
stos
aas
andb
add
cs
or
ds
arpl
negb
jecxz
xchg
xchg
or
iret
cmp
sub
mov
scas
mov
ss
and
sahf
mov
repz
dec
xor
xchg
sbb
call
mov
inc
push
lret
inc
add
jns
sub
sub
fadd
bound
sahf
test
cltd
addr16
mov
push
xlat
inc
ds
insl
aaa
mov
std
imul
jl
push
inc
xor
sub
fwait
fs
test
sbb
scas
inc
mov
xor
pop
cmp
jb
movl
cmpsl
mov
pop
mov
mov
pop
testl
data16
cmp
inc
xchg
icebp
dec
inc
sahf
xor
movsl
sbb
icebp
pop
filds
adc
pop
movsb
jle
mov
lcall
mov
pusha
adc
sahf
lret
adc
mov
test
out
loop
ret
jg
sbb
imul
orl
call
jg
xor
sar
mov
jle
fdivr
mov
cmovge
mov
pusha
aaa
mov
inc
or
cmp
xchg
sarl
int3
repnz
insl
js
add
popf
jge
pushfw
or
dec
adc
adcb
or
sahf
jno
cmp
push
mov
or
pop
iret
mov
push
dec
das
dec
icebp
outsl
sbbb
xchg
into
pushf
in
iret
sti
cs
sub
push
sub
jbe
ljmp
aas
pop
je
dec
pop
mov
add
push
push
mov
addr16
test
push
push
out
dec
xchg
cmp
cmp
insb
sub
jno
das
adc
dec
iret
sbb
out
pop
xchg
dec
mov
lret
mov
sbb
clc
mov
push
adc
loope
push
add
and
jg
inc
loop
sub
mov
std
inc
inc
call
mov
adc
pop
lods
js
jg
aad
mov
dec
xchg
aas
mov
mov
loop
and
decb
dec
mov
jno
loope
mov
shll
clc
dec
pop
nop
lret
mov
scas
loope
mov
adc
xor
loopne
jnp
sbb
mov
sub
lcall
stos
jno
xor
cltd
push
int3
stc
loop
cmpsl
mov
pop
add
imul
pop
fwait
xor
arpl
add
xor
lods
pop
gs
pushf
je
popf
jg
lret
mov
stc
add
xchg
ffree
sub
test
call
fildll
aas
int
fcmovb
inc
or
aam
std
in
clc
icebp
out
hlt
pop
addr16
cmp
scas
movups
mov
xor
stos
jmp
std
pop
fbstp
xor
cld
icebp
mov
data16
insl
mov
xchg
cmp
add
popa
out
out
ljmp
mov
in
inc
mov
fcmovb
xchg
mov
jmp
xor
add
enter
cmpsl
jle
xor
dec
mov
dec
push
cltd
decb
mov
fildll
mov
in
cs
add
jae
and
cmp
push
sbb
mov
arpl
mov
mov
sbb
sub
pop
jno
insb
ret
pop
fs
add
or
lahf
cltd
movsl
rorb
in
push
hlt
mov
dec
inc
jno
push
mov
lds
pop
xor
aad
gs
push
mov
test
call
lea
sub
mov
dec
inc
icebp
cltd
int3
cmp
jno
in
ficompl
jg
aas
dec
xchg
cmp
clc
dec
sub
mov
mov
iret
jg
ficompl
orb
fdivr
ror
aam
mov
test
pusha
lcall
cmpsl
scas
mov
xchg
in
xchg
jae
cwtl
adc
adc
xor
mov
inc
dec
cltd
cli
pushf
pop
loop
push
insb
popa
clc
inc
scas
pop
mov
mov
outsb
push
cmp
lock
add
bound
mov
out
pusha
inc
push
jae
push
loope
xchg
pop
ds
mov
mov
cmp
xchg
cmp
orl
rcrl
aad
sbb
and
les
jne
stos
aad
inc
into
xor
cwtl
mov
rorb
orb
push
jge
xchg
sub
mov
mov
aaa
inc
sub
icebp
pop
into
push
sbb
sub
in
lcall
cltd
leave
fidivrl
lcall
sub
icebp
and
in
push
lods
push
mov
or
push
sub
sti
cmpsb
add
outsb
fmuls
mov
pop
or
push
fnstsw
push
int3
stc
mov
mov
inc
lds
pmaddwd
loop
sbb
jg
push
idivb
mov
add
xchg
leave
sbb
imul
ds
int3
inc
sub
clc
cli
repnz
pop
inc
cld
stos
mov
cmpsb
pop
cs
pop
inc
cmp
rolb
ffree
mov
cmp
sub
out
jg
int3
imul
cmpsl
int3
pop
popf
cmpsl
into
xchg
mov
or
push
add
xchg
outsl
push
pushf
in
fcomp
arpl
stc
in
ja
ret
fsubrl
ret
cmc
stos
push
jp
xor
lret
adc
sahf
add
repz
mov
add
mov
pop
movsb
inc
push
xor
xchg
lahf
mov
cwtl
jo
add
cmc
mov
dec
jecxz
into
add
mul
inc
mov
lock
lret
mov
cmp
std
inc
xchg
push
mov
mov
dec
jbe
les
adc
and
and
addr16
sub
push
sahf
jb
fs
push
pop
pop
mov
mov
mov
out
lods
sahf
aaa
fldcw
iret
jle
int
repz
sbb
mov
cwtl
shrb
sbb
pcmpeqb
jnp
xchg
nop
lcall
dec
lret
sahf
lcall
push
fstpt
xor
and
mov
or
jg
mov
fld
and
mov
outsl
faddl
lcall
jno
bound
push
shll
inc
in
mov
sub
shr
xchg
stc
sub
xchg
or
std
cmp
push
scas
sub
jle
inc
jns
es
mov
lret
aaa
loop
lds
mov
cli
addr16
js
cmp
and
lahf
rorl
cs
xchg
hlt
inc
inc
or
test
xor
jmp
add
shrl
sub
sbb
lods
mov
push
fnstsw
cwtl
sub
or
shll
test
mov
mov
and
test
jae
xchg
add
lods
sti
mov
out
or
cmp
out
jae
fsub
das
cmp
ret
adc
js
cli
decb
mov
cmp
arpl
nop
adc
rol
iret
cwtd
test
gs
xchg
inc
insl
adc
xchg
mov
xchg
fs
add
mov
iret
sub
mov
int3
sub
sub
inc
mov
inc
das
add
fwait
add
or
stos
adcl
fsubl
push
bound
lock
and
aad
xor
add
clc
mov
push
out
popa
pop
lret
in
lahf
js
ds
jno
xchg
mov
jmp
xchg
movsb
xor
mov
xor
mov
es
or
adc
out
inc
mov
jb
int
sbb
fidivs
adc
dec
lcall
mov
jbe
inc
fadd
repnz
mov
fcomi
in
ss
mov
dec
xchg
inc
pop
cmp
inc
mov
and
loope
gs
add
and
gs
mov
sbb
test
mov
roll
xor
push
out
xchg
pusha
imul
sarl
push
xchg
xor
lcall
mov
leave
mov
into
ja
mov
in
dec
iret
outsl
mov
mov
mov
lahf
loope
leave
daa
or
push
jno
xchg
out
imul
ljmp
cmpsl
xor
divl
or
ds
sahf
jno
jle
in
cmp
xchg
add
push
into
es
call
mov
in
jmp
push
mov
add
pop
push
pop
xchg
aaa
dec
loopne
mov
stos
sbb
mov
movsb
rcl
loopne
mov
xor
lods
iret
pop
mov
ljmp
adc
or
lods
push
in
mov
ds
or
repnz
cmp
xchg
outsb
sub
orb
push
mov
adc
js
xor
sub
adc
ret
inc
into
mov
jmp
jne
mov
adc
cltd
iret
xchg
xor
jg
aad
cmp
inc
jns
xor
nop
and
data16
dec
pop
repz
mov
cs
mov
inc
call
push
dec
adc
std
jg
call
clc
mov
inc
mov
loope
mov
jle
ret
repz
cs
mov
imul
cmp
mov
add
pop
jge
addl
add
dec
inc
mov
mov
mov
arpl
mov
or
leave
mov
jne
popf
ljmp
outsb
js
mov
data16
push
cs
sub
lods
inc
cwtl
in
mov
out
test
push
lds
mov
add
hlt
jp
frstor
int
jo
outsl
inc
jl
cmc
pop
pop
pause
sub
cmp
ret
mov
mov
xchg
cmc
mov
xor
cmpsb
sub
mov
xchg
cmovg
dec
fbld
lods
pushf
dec
les
subb
mov
call
adc
test
push
data16
pop
push
sti
mov
add
movsl
movsb
mov
out
imul
xchg
jecxz
imul
scas
xchg
mov
sbb
or
mov
jle
push
inc
inc
imulb
jnp
mov
adc
xchg
jbe
shl
add
cmp
push
pop
pop
pop
cmp
xchg
loop
pop
les
sbbb
mov
xor
sbb
xchg
xor
xor
pusha
lret
cmp
mov
ret
mov
or
arpl
dec
aaa
gs
add
aad
mov
nop
in
call
mov
cmpl
adc
and
and
cmp
xor
inc
shrb
arpl
pop
pushl
inc
add
inc
adc
cmp
or
push
icebp
daa
shrb
dec
pop
push
cmc
sti
pusha
cmp
sub
and
dec
cmp
cmc
xor
fadd
incl
adc
inc
or
sub
rcl
out
loope
push
andl
outsb
cmp
xor
addr16
repz
and
mov
sbb
rep
sti
pop
psrlq
out
hlt
push
fstpl
mov
mov
xor
adc
cmp
xchg
jne
jne
les
and
cmp
sbb
jne
popa
lahf
mov
pop
mov
cmc
daa
mov
dec
ret
shlb
fs
mov
pop
jae
mov
or
imul
sti
andb
pop
mov
lahf
lods
inc
xchg
add
jnp
ss
jnp
data16
mov
inc
mov
xor
mov
sub
pushf
adc
call
xchg
prefetch
pop
cmc
add
jle
adc
mov
sub
arpl
pop
or
lock
fidivrl
idivb
inc
push
fisttpll
setge
popf
lock
fwait
mov
cmp
daa
es
push
out
clc
sub
test
adcl
lret
push
mov
pusha
lods
mov
push
arpl
test
xlat
enter
imul
push
mov
shufps
cmc
jmp
push
in
ret
inc
jmp
and
dec
in
sub
pop
int
adc
stc
sbb
cli
and
insl
cvtpi2ps
ds
mov
push
mov
movsb
nop
imull
ret
dec
push
lock
es
dec
jns
fcoml
addr16
repnz
std
loopne
fiaddl
int3
jge
cmp
xorb
nop
fwait
dec
ljmp
push
stos
cltd
pop
call
std
cmp
lret
jmp
push
sbb
imul
sub
inc
loopne
inc
test
sbb
mov
test
call
mov
sbb
jmp
jns
outsl
frstor
sub
out
jmp
jl
mov
mov
pop
adc
sbb
push
lret
out
imul
jns
scas
pop
inc
scas
jbe
jns
imul
out
test
in
push
mov
xor
rcrl
add
arpl
insl
dec
xchg
ds
mov
mov
push
rclb
jns
pop
out
mov
ret
call
nop
jns
loope
push
icebp
pop
mov
push
hlt
jbe
sbb
add
iret
fdivrs
mov
adc
dec
push
sbb
lods
sub
mov
xchg
loop
and
mov
jp
mov
pop
ljmp
js
lods
inc
mov
cmp
jmp
vpackuswb
loopne
pop
jp
jge
lret
shll
adc
lea
add
pop
in
std
les
lods
or
mov
aas
pop
mov
call
sahf
jb
jecxz
ss
imulb
jg
ljmp
cmp
aaa
in
inc
sti
mov
dec
dec
into
sbb
xor
cmp
fstpl
bound
scas
jns
fs
pop
lcall
mov
jmp
jo
pusha
pop
aas
cmp
xchg
push
xor
pushf
add
cmpsb
xchg
xor
and
pop
into
jmp
insl
jae
mov
sbb
popf
or
add
push
adc
stc
ds
adc
add
lret
inc
imull
inc
adc
fildll
or
stos
std
sbb
repnz
sub
push
adc
movl
decl
inc
push
outsl
xor
xchg
jnp
scas
xchg
adc
lock
test
unpcklps
outsb
xlat
andl
xchg
aam
add
mov
xchg
enter
inc
add
je
test
sti
shrb
jecxz
mov
inc
icebp
jae
xor
mov
pop
test
std
int
xchg
or
push
jmp
push
jmp
loope
or
into
xchg
or
push
mov
pushf
cltd
nop
sub
push
outsb
jae
int
or
clc
ficomps
jb
cli
xchg
sahf
mov
jo
push
pushf
pop
stos
add
in
popa
fsubs
ret
push
and
cmp
sub
lods
fnsave
pop
fsts
lret
jo
std
and
pop
ret
jmp
jmp
sbb
push
xchg
sub
xchg
sbb
out
add
imul
push
std
xchg
daa
fists
jecxz
xor
les
lret
cltd
dec
or
jle
int3
aam
int
out
cltd
pop
adc
outsb
push
cmp
dec
gs
mov
mov
jo
out
loopne
js
ljmp
pop
jne
adc
fnstcw
jle
mov
pop
push
sub
dec
sub
in
pop
jno
sub
cltd
cmp
testl
push
sub
lock
ret
hlt
fwait
sbb
or
xor
mov
jae
test
leave
in
inc
push
jp
dec
hlt
cmp
out
int
dec
int
sub
mulb
movsb
adc
adc
outsl
mov
mov
ss
js
inc
cwtl
aas
scas
push
fwait
dec
ficomps
lret
inc
pop
int3
mov
shlb
int3
inc
adc
negb
xor
lret
int
mov
xchg
xchg
push
jl
lret
cwtl
cmp
pop
in
sbb
sbb
fisubs
ja
ret
inc
outsb
and
xor
xchg
sub
dec
cld
js
pop
cmp
push
mov
movsb
in
stc
xchg
nop
cld
ror
mov
aam
out
aas
pop
pop
sar
dec
push
push
cli
cmc
sahf
les
andb
pop
sub
data16
pop
lock
call
add
jecxz
xchg
stc
xchg
inc
push
in
jne
jmp
icebp
cmp
cmp
ret
cmc
dec
cmp
pop
xchg
jbe
lock
add
data16
mov
cmp
mov
or
cmp
or
mov
insl
andl
mov
fldt
loope
lds
out
sub
or
cmp
das
das
xchg
mov
and
sub
fs
mov
jl
xor
xor
sub
hlt
jp
sbb
gs
lret
je
stc
push
hlt
in
das
and
and
mov
repnz
dec
orb
mov
shr
mov
sbb
js
push
cmp
imul
mov
dec
lea
or
xorl
aam
adc
ja
add
fsubrs
aaa
cmp
inc
mov
mov
mov
mov
cmpsl
dec
push
inc
aam
dec
loopne
xor
bound
dec
pushf
push
daa
pop
jne
dec
xchg
and
bound
xchg
scas
or
push
lret
mov
mov
inc
scas
xchg
stos
icebp
daa
pop
stc
pop
pop
mov
or
jge
aaa
in
pusha
mov
pop
cmpsb
xlat
ja
aam
push
mov
pusha
rcll
jl
pop
jb
out
shlb
pop
or
aad
enter
ds
pop
int3
xchg
cmp
sub
or
xor
iret
movsb
add
xlat
ret
pop
mov
and
mov
cmp
lcall
stos
mov
push
movsb
shll
adc
push
data16
dec
mov
cmp
lret
sahf
out
add
scas
test
insb
jnp
inc
add
cmp
pop
out
incb
fwait
lret
repnz
xor
inc
mov
jl
adcl
imul
push
xchg
dec
loopne
lds
jno
adc
cli
mov
fnsave
mov
dec
or
sub
imul
add
pop
cmp
lret
aaa
clc
mov
inc
adc
in
cld
inc
cltd
add
lods
xchg
faddl
shlb
call
jns
mov
shll
ljmp
push
inc
dec
dec
jbe
mov
sub
int3
pusha
cmp
push
sub
inc
xchg
push
lcall
repnz
clc
je
adc
mov
fcomps
cmp
pop
push
inc
pop
push
mov
add
and
sub
cmp
scas
adc
jbe
int
xor
xchg
pop
sbbl
test
int3
das
repz
call
enter
flds
movb
push
daa
sbb
inc
imul
lock
insl
ja
xchg
xchg
mov
add
mov
stos
and
xchg
add
cmp
iret
xchg
test
enter
call
sbb
adc
mov
lea
adc
pop
jns
divb
sti
add
ds
jnp
leave
push
arpl
cmp
out
dec
lea
test
mov
scas
dec
push
cmp
xor
movsl
xchg
gs
les
or
cmpsb
and
outsl
movsb
in
in
pop
test
sub
or
xchg
and
ret
leave
pop
or
sub
pop
daa
ja
add
pop
scas
and
xchg
sub
jle
pop
mov
lods
fwait
adc
ljmp
inc
mov
imul
gs
mov
mov
xchg
xchg
incl
add
inc
push
pop
xorl
lock
xor
cmp
jge
repz
mov
xlat
jne
sub
mov
mov
dec
dec
out
xor
lds
mov
int3
push
dec
divb
cmp
data16
outsb
mov
pusha
int3
sbb
jno
xchg
sub
inc
repnz
jnp
movsb
sub
mov
dec
adc
pop
dec
clc
and
popf
pop
mov
arpl
movsb
aas
cmpsb
jle
xchg
dec
inc
out
jns
sub
lock
push
mov
push
inc
push
cmc
aaa
mov
xor
repz
ljmp
call
mov
addr16
repz
js
pop
pop
and
jae
shl
adc
int3
mov
mov
xchg
insb
sub
in
std
test
sbb
sbb
gs
adc
movsb
hlt
subl
out
insb
jo
movsb
jg
mov
push
andl
cmp
fisttps
aaa
cmc
test
fnstcw
mov
mov
std
stos
push
push
jl
mov
cs
jne
in
jl
pop
sub
adc
or
es
pop
jnp
fwait
cli
cmp
fdivrs
adc
les
aam
inc
int
shll
repz
and
lea
ret
jl
adc
lcall
aad
inc
add
pop
and
xchg
xchg
xlat
andl
aam
cld
and
mov
icebp
mov
test
xchg
popf
rcrb
int
adc
push
push
and
hlt
mov
jo
cmp
fmul
in
xchg
xor
dec
push
mov
add
pushf
popf
dec
sbb
lds
mov
out
lock
and
sub
leave
les
mov
cmp
fmull
sbb
mov
cwtl
jecxz
mov
popf
and
addl
data16
mov
xchg
pop
cmp
sub
in
push
pop
loopne
outsl
into
mov
pop
inc
sbb
add
into
shrb
xchg
inc
inc
imul
dec
jno
xlat
ljmp
jo
adc
sbb
ja
ret
stc
jb
or
and
cli
stc
or
add
lret
leave
outsl
xlat
subb
cmp
outsb
push
adc
or
adc
mov
leave
xchg
jg
sub
cmc
fwait
push
aas
subb
mov
ret
lret
jl
rorb
xchg
imul
test
lret
stc
push
lods
mov
ret
call
pushw
insb
icebp
add
hlt
gs
inc
data16
and
cmp
hlt
sub
sarl
test
lea
testb
mov
dec
xor
cmp
push
outsl
add
push
fisubs
mov
subl
leave
push
jns
adc
and
out
and
js
stos
mov
add
mov
addb
insb
adc
addr16
loopne
int3
xor
cli
stc
sahf
mov
xchg
lods
jp
popf
iret
adc
pushf
outsb
sbb
rcrl
je
mov
jle
bound
jl
out
pusha
lods
lret
xor
lods
aas
mov
jge
mov
and
mov
ja
pop
cmp
movsl
jbe
pop
sub
xor
jae
cmc
int
outsl
inc
movsl
jns
sub
cmp
lcall
and
outsb
xor
int3
pop
mov
lds
mov
iret
mov
pop
mov
inc
dec
cmp
testb
icebp
inc
pop
insl
clc
stc
icebp
xor
add
lret
ds
lds
xchg
push
negl
sub
push
insb
jbe
add
and
scas
adc
and
mov
or
in
mov
mov
fmull
cmp
jns,pn
out
fwait
xor
sub
je
std
mov
cmp
in
loopne
hlt
adc
arpl
sub
sbb
cmp
dec
jmp
adc
in
jb
call
cmp
pop
xchg
ret
dec
pop
in
dec
outsb
push
pop
inc
lock
stc
fdivrl
adc
adc
sahf
cmp
xorl
pop
adc
xor
rolb
xchg
outsl
push
flds
insl
xor
scas
dec
cmp
jge
sarb
in
mov
mov
bound
mov
movsb
addb
dec
stc
and
insb
push
sarb
cmpl
addb
mov
fcompl
pushfw
pop
fldcw
pop
not
dec
jle
adc
push
push
dec
xor
imul
xor
inc
stos
adc
push
dec
in
pop
lea
mov
pop
lea
jecxz
sbb
aad
lods
sbbb
xor
adc
sbb
inc
outsb
dec
addr16
mov
adc
sub
popa
push
je
jmp
cli
mov
decb
ja
pushf
nop
shll
test
clc
mov
mov
in
out
movsb
mov
or
fcomps
adc
das
test
in
jb
outsb
in
sbb
or
push
out
outsl
fucomp
pop
leave
cli
push
cmc
sbbl
and
mov
ds
lock
mov
imul
push
mov
test
in
xchg
mov
ret
mov
std
loop
xchg
cli
lods
pushf
test
in
outsl
cmc
je
push
cmp
sti
fidivrs
sbb
cs
push
mov
outsl
lret
arpl
stc
and
push
sbb
dec
outsb
pop
insl
sub
jecxz
sbb
loop
out
ret
loop
sub
outsb
mov
pop
mov
push
shrl
clc
fmull
in
dec
add
or
test
lcall
sub
or
jae
sbb
jmp
add
sub
lret
or
fldl
sub
fs
popa
cmpsb
or
stos
ljmp
test
push
in
icebp
sahf
imul
pop
stc
jnp
shll
bound
lea
leave
cld
xchg
adc
test
cwtl
subb
xor
aad
add
adc
in
test
and
loopne
xlat
clc
pop
daa
mov
xor
ffreep
movsb
mov
imul
cmpsb
and
movsl
xorb
jle
push
pop
fdivrs
cltd
leave
mov
xchg
xor
mov
aad
addb
stos
mov
xchg
mov
sub
pop
and
nop
push
xor
xor
adc
arpl
xchg
outsb
add
ja
in
mov
jb
mov
insl
popa
test
sbb
cld
pop
test
jo
jnp
scas
stos
add
push
jb
add
jae
inc
outsl
dec
or
js
aas
dec
jns
gs
push
mov
sarl
xor
dec
sub
adc
mov
out
and
and
adc
enter
repz
jle
sub
mov
mov
push
sbb
cltd
mov
pusha
dec
bswap
mov
cs
add
inc
mov
lds
je
fidivs
mov
pop
pop
fs
insb
sahf
add
push
ja
shr
sbb
mov
arpl
mov
mov
int
sub
test
pushf
or
sbb
ljmp
adc
mov
mov
inc
xchg
xlat
jl
jne
or
push
outsl
adc
std
movsb
cmp
hlt
add
dec
lea
popa
jb
pop
inc
shl
cmp
cmc
sub
stos
xchg
pop
bound
adc
bound
cmp
adc
mov
repz
in
jecxz
sub
das
mov
into
mov
ljmp
lea
xchg
testl
scas
das
idivb
ret
push
jne
pop
jno
mov
fdiv
ret
or
les
inc
imul
out
fld
idivl
pop
and
test
imul
orb
mov
mov
add
xor
jg
cmp
mov
pop
mov
push
mov
dec
pop
int
out
cmpl
push
daa
test
mov
loop
in
add
mov
xor
xor
outsl
add
xor
mov
je
cltd
xchg
xchg
mov
sub
out
ss
push
adc
fisttps
out
adc
pop
dec
xchg
xor
movsl
aam
fbld
ja
imul
and
fsubrl
push
jecxz
dec
movsb
cltd
or
add
mov
shr
jle
jle
rorb
popf
cmpsl
ja
aas
mov
add
cmpsl
lea
cs
jae
ja
and
dec
pop
sti
jb
jmp
mov
fwait
sub
mov
pop
lea
cwtl
pop
dec
aaa
fwait
add
sub
test
jecxz
loope
lods
cmpsb
in
shlb
xchg
clc
lea
stos
dec
push
fildl
fcom
lret
lret
pop
sti
movsb
cmp
aaa
nop
mov
sbb
mov
jl
cmp
push
aas
aaa
stos
xlat
sub
out
repnz
mov
rolb
nopl
mov
pop
aaa
icebp
adc
inc
cmp
adc
ss
rcrl
call
mov
int3
push
lcall
cwtl
fisubl
or
pop
jne
inc
lret
adc
mov
xchg
leave
ss
jmp
jnp
xchg
mov
dec
inc
mov
and
mov
jne
mov
mov
mov
sbb
push
lret
orl
lret
hlt
ds
test
ds
mov
dec
xchg
mov
pop
lahf
imul
or
mov
push
adc
adc
fucomi
dec
std
dec
xchg
out
hlt
jns
mov
dec
movsl
mov
cmpxchg
mov
cmpxchg
sti
push
lret
and
call
outsb
add
in
js
test
iret
mov
push
pop
repnz
cmp
and
shlb
push
cmpb
rcr
push
loop
inc
outsb
mov
cmp
repnz
pop
or
push
in
mov
mov
pop
jg
pushf
sub
mov
mov
cld
movsb
scas
pop
int
push
dec
ret
call
mov
ret
loope
ret
mov
push
xor
sub
mov
jge
dec
adc
fcmovne
add
sbb
adc
in
fstpt
cmp
std
repz
imul
dec
sub
cltd
frstor
xchg
hlt
loopne
jo
dec
cmpl
adc
dec
adc
addr16
out
sbb
xor
mov
or
xchg
inc
or
cli
dec
jl
push
repz
add
jbe
mov
nop
mov
jns
lods
pop
sbb
cmp
jl
lcall
shl
and
imul
xchg
mov
inc
loope
fsubl
cli
mov
xchg
jnp
jge
iret
jnp
mov
stc
addr16
jecxz
xchg
mov
fwait
or
xlat
int
adc
add
insb
cmp
hlt
lcall
xchg
sahf
cmpsl
xor
adcb
sbbb
mov
cmp
mul
mov
sbb
cltd
adc
sub
xor
dec
mov
ret
jno
cmp
dec
iret
ja
adc
leave
or
sub
push
adc
ja
jne
dec
dec
popa
sbb
daa
mov
fsubrs
jg
pop
test
out
push
jnp
pop
xor
jmp
mov
push
adcb
dec
xor
inc
lods
xchg
and
lahf
loope
ds
and
xchg
call
testl
pop
enter
out
fs
jae
cmpsl
scas
repz
in
int3
scas
call
sbb
mov
jg
aad
fs
mov
cmovne
int
xchg
mov
stos
lret
pusha
jno
jnp
or
cmp
push
cwtl
clc
cltd
loop
out
xor
aad
mov
std
cld
rolb
cmpsb
add
test
xchg
xor
in
push
xorl
cmpb
lcall
inc
mov
push
stos
push
jmp
mov
add
pop
leave
subl
into
call
dec
aam
jecxz
int
xor
xchg
sti
and
dec
mov
mov
sub
pop
aam
shlb
loopne
inc
test
inc
sub
jae,pt
enter
aaa
aad
cmc
jg
jns
out
jp
outsl
jb
pop
test
fsts
test
inc
out
mov
pop
mov
xor
pop
nop
arpl
jp
ret
and
add
pop
mov
data16
pop
xchg
cltd
loope
data16
cltd
xor
xchg
cmpsl
lea
rclb
push
pop
in
lds
xchg
lret
ds
jmp
popa
jbe
mov
fisttps
mov
sub
loop
pop
xor
sahf
pusha
jbe
pusha
cld
add
fmuls
lea
fdiv
mov
and
xchg
sub
insl
sarb
xor
dec
sub
add
pop
into
or
xor
pop
xchg
test
and
fimuls
rcrl
or
rorb
js
mov
mov
xlat
mov
sbbl
push
stc
pop
in
mov
mov
adc
xor
das
aad
sub
xchg
cmpsl
pop
adc
ds
mov
popf
mov
xlat
jge
es
dec
xlat
push
pop
inc
jns
adc
outsb
add
into
movsb
xlat
cmp
mov
ss
push
push
mov
mov
shrb
mov
dec
repz
mov
into
into
push
fsts
movsl
pop
xchg
cs
xchg
or
stos
jnp
pop
daa
daa
pop
enter
lea
jbe
pop
mov
mov
adc
mov
shlb
add
add
jmp
xor
cmpsb
push
inc
push
frstor
ja
dec
mov
mov
mov
insb
mov
dec
sub
dec
cmp
add
jne
aad
mov
pop
mov
lods
adc
scas
pop
sahf
orb
fsubr
int
icebp
push
sbb
sub
push
call
jmp
icebp
sub
into
adc
mov
xchg
bound
outsl
or
arpl
pop
push
xor
mov
mov
mov
sub
sbb
int
int3
adc
aad
call
push
sbb
test
pop
gs
jae
xchg
stos
xchg
jno
xor
js
push
xlat
mov
pop
or
xor
inc
ja
push
inc
jae
pusha
cmp
outsl
add
push
in
pop
jae
and
insl
sti
xlat
xchg
push
mov
test
arpl
mov
cmpsl
ret
cli
mov
lds
imul
jb
insb
popa
xchg
mov
or
lds
xchg
clc
mov
fs
push
push
cmc
add
arpl
ljmp
sub
push
xchg
insl
or
jno
mov
les
or
mov
sbb
push
sub
fidivrs
dec
stos
mov
xor
fwait
inc
push
test
and
xor
pop
cs
scas
mov
test
call
push
clc
pop
and
in
dec
or
mov
mov
enter
aad
insl
shlb
inc
neg
mov
dec
jmp
xor
ret
push
inc
fildl
dec
adc
pop
cmp
lea
fnstcw
add
inc
in
js
fdivrs
sbb
hlt
add
dec
mov
dec
shrl
adc
and
push
sub
jnp
orl
sub
mov
or
cmpb
xchg
popa
arpl
mov
in
xor
or
fisubrl
inc
hlt
mov
push
xor
xchg
andb
mov
imul
ljmp
jb
test
popl
int
mov
scas
push
bound
test
mov
adc
jmp
fldt
lods
xor
les
push
lods
push
jb
jnp
ret
adc
test
ret
and
aam
xlat
lods
dec
rorl
inc
mov
aaa
in
push
inc
in
cmp
add
mov
in
lret
imul
mov
fsub
mov
add
jnp
cld
repz
adc
mov
xchg
daa
jecxz
adc
movaps
or
or
jne
push
movsb
outsl
mov
mov
cmp
pushf
sbb
mov
sub
orl
or
pop
rol
faddp
add
repz
lret
test
leave
add
push
dec
push
in
jae
cs
cmp
les
adc
nop
push
push
mov
je
arpl
loopne
jo
movsb
push
cmpsb
inc
xlat
loopne
pusha
call
and
mov
inc
jo
pop
and
leave
scas
sahf
mov
icebp
insl
push
push
ja
aas
out
fcmove
cmp
mov
cwtl
int3
jmp
jno
jnp
ja
sahf
bound
mov
mov
sbb
jl
or
lock
das
int3
out
fisttpl
shll
and
and
xchg
loope
ljmp
ja
roll
push
out
inc
adc
mov
into
xchg
sbb
lcall
pop
das
in
cwtl
outsl
push
out
int3
sahf
xor
ds
nop
nop
pusha
xchg
sub
sub
mov
inc
cmp
dec
mov
sub
and
pop
int3
bound
movsb
sub
das
add
jbe
stc
aas
rol
cmpsb
cmp
add
popl
mov
add
lock
sub
mov
int
and
aad
stos
mov
mov
jmp
push
push
int
lock
push
aaa
dec
mov
push
mov
xchg
push
outsl
jmp
cs
imul
call
or
push
jp
fcoms
cmp
pop
aam
jp
or
cmp
movsl
and
push
in
in
mov
dec
cmp
sbb
mov
cmp
not
movsb
je
xchg
test
outsb
and
fildll
add
cmp
and
add
frstor
out
push
stos
adc
pop
push
sub
dec
lds
mov
sub
xchg
jg
adc
iret
ds
aaa
rcll
lret
cmp
sahf
dec
outsb
sbb
and
xchg
jb
push
hlt
div
aaa
sub
or
jo
dec
pop
lea
cmp
dec
jp
pop
pusha
xchg
and
xchg
lret
sub
sti
rcll
movsb
lods
sti
add
test
sbb
call
push
iret
sti
das
inc
cli
lahf
les
sub
dec
mov
inc
jnp
mov
stos
ds
mov
outsb
xchg
jo
shll
inc
pop
push
std
xchg
mov
jnp
lret
adc
rorl
xor
pop
cmpsb
fildll
popa
sarb
mov
ss
mov
aam
or
int
mov
repnz
lcall
add
xchg
cmp
fs
cltd
mov
lods
arpl
sbb
jl
inc
inc
and
gs
mov
je
push
lret
dec
fadds
incl
xchg
push
dec
and
aad
or
pop
iret
loopne
lret
ljmp
bound
mov
insl
aas
xor
sub
movsb
call
pop
cmp
mov
dec
lds
daa
cmp
aam
xor
test
fists
lock
mov
sti
xlat
scas
adc
insl
outsb
fwait
pop
outsb
arpl
sub
or
mov
sbb
adc
pop
out
push
xlat
clc
adc
push
add
lea
int
mov
or
push
cmp
or
not
pusha
mov
mov
sbbl
jl
ja
mov
add
adc
add
stos
cwtl
and
and
cld
mov
insl
mov
sarb
inc
push
das
mov
adc
sahf
push
ljmp
mov
out
stos
add
aam
cmp
xlat
mov
das
xchg
shl
cmp
ror
call
push
ficompl
into
xor
scas
pop
imul
mov
xor
mov
jmp
cli
test
xchg
cmp
sbbl
mov
lcall
cmpsl
mov
add
into
sbbb
pop
mov
loopne
mov
movsb
scas
ja
sarl
adc
sbb
adc
fisubs
fwait
mov
iret
je
add
in
fwait
gs
nop
aam
xchg
jecxz
add
in
mov
mov
adc
lds
sub
sub
adcb
insb
ds
outsb
mov
mov
lret
lods
leave
jno
call
xchg
jbe
add
mov
lods
les
dec
in
xchg
sub
add
lcall
int3
cli
adc
cmpsl
mulb
cli
es
leave
and
or
inc
jnp
xor
lock
ja
or
test
gs
aam
int
movsl
add
fistps
fsubrp
mov
sub
lret
and
test
lea
mov
inc
pop
fnstsw
jl
mov
mov
jns
icebp
mov
sbb
push
add
dec
sbb
mov
add
rcrl
mov
or
out
roll
xor
dec
cmpsl
in
mov
add
jl
push
les
pop
arpl
pusha
les
ss
dec
mov
arpl
roll
jns
jmp
sbb
pop
outsb
imul
in
lods
pop
pop
pop
and
mov
call
sub
add
sub
pusha
jno
or
adcl
and
int3
je
cmpsb
mov
aad
adc
das
push
add
pop
je
sub
es
mov
imul
pop
ljmp
pop
aaa
data16
repnz
pop
xlat
popf
subl
sbbl
push
xor
jmp
sub
je
insl
ja
pop
jle
inc
hlt
cltd
rep
add
pop
sbb
or
fldl2e
mov
cwtl
mov
cmpsb
inc
sub
fmul
mov
xchg
push
lahf
mov
pop
sub
jp
adc
sarl
or
fdivrs
lahf
sti
or
insl
sbb
mov
stc
test
pusha
outsb
clc
iret
add
clc
or
inc
movsb
sbb
jg
in
push
cmpps
call
js
jl
hlt
xor
or
inc
push
dec
pop
aam
sbb
or
jl
shll
cmpsl
out
test
cld
pushf
mov
sarb
push
jle
movsl
inc
mov
hlt
aad
inc
stos
cmpl
xor
stc
xor
pop
pop
and
je
loope
jp
daa
inc
outsl
xchg
dec
in
xchg
adc
mov
mov
popa
inc
mov
jno
js
or
xor
out
or
sbb
lahf
ds
ret
sbb
cld
into
pushf
mov
push
shrb
fisubl
dec
gs
cmc
jp
cltd
mov
notb
callw
push
fidivrl
nop
and
inc
pop
negl
pusha
adc
jge
mov
cwtl
push
mov
adc
lcall
movsl
pusha
pop
mov
js
xchg
dec
xchg
mov
push
xchg
adc
mov
out
xor
dec
int
add
push
sub
setno
ret
sub
push
mov
or
sbb
mov
and
mov
xchg
cmp
lock
add
add
dec
sub
dec
pop
dec
popa
clc
mov
in
sub
repnz
pop
aaa
pop
arpl
push
xchg
clc
flds
push
lret
int
mov
push
inc
pop
xchg
sub
adc
pop
out
push
ljmp
in
xor
rclw
adc
dec
or
push
out
xchg
rolb
mov
ljmp
mov
mov
mov
xchg
xor
and
inc
rorb
lods
mov
mov
push
mov
mull
shlb
pop
ret
popa
push
inc
shlb
xor
and
fldcw
in
rol
rorl
inc
int3
cmp
sti
mov
pop
push
popa
add
jmp
leave
je
or
mov
or
popf
mov
mov
sbb
int
or
ret
loope
aas
inc
mov
xlat
pop
xlat
xchg
stos
pop
push
lret
cld
les
pop
sbb
and
mov
sub
adc
inc
mov
jne
push
cmpsb
xor
data16
rclb
sarb
mov
push
xchg
and
fwait
push
iret
cs
scas
testb
jns
mov
jle
ja
mov
lret
andb
jns
xor
xor
std
jl
hlt
mov
cmpsb
mov
xchg
out
sub
and
scas
push
sub
pop
xlat
sbb
lods
loope
push
test
xchg
ljmp
sbb
cmp
pop
call
mov
test
cmpsb
repnz
jge
rcl
inc
jl
pop
push
shll
or
mov
ljmp
push
mov
lcall
ret
enter
insb
xchg
mov
add
xor
xchg
mov
fs
xchg
jl
outsb
pop
fnstenv
cmpsb
cmpsl
pop
lret
inc
and
cmp
rclb
int3
fwait
in
enter
ret
enter
pop
pop
fsubrl
push
push
pop
xchg
pop
movsb
sbb
mov
and
pop
cs
and
or
inc
jmp
pop
jle
ss
adc
into
mov
jb
rcrb
xchg
jb
test
movsl
pop
xor
adc
inc
push
cli
imul
imul
add
jbe
inc
adc
sbb
shll
add
dec
sub
hlt
sti
jnp
iret
push
dec
out
sub
in
in
fidivl
das
out
mov
decb
jl
xchg
adc
mov
mov
out
cmp
cmp
cmp
and
mov
test
adc
xor
mov
sbb
mov
clc
addr16
push
mov
dec
xchg
bnd
jmp
test
daa
fdivrp
cli
ss
imul
mov
imul
fsubrl
add
mov
stos
and
inc
pop
inc
xor
jns
dec
or
push
outsl
and
mov
add
sbb
aam
jae
and
add
xor
pusha
inc
and
ret
pushf
mov
or
divl
sbb
sar
lcall
rclb
cmp
mov
sbb
mov
jecxz
jmp
pop
aaa
and
jge
hlt
pop
cmp
and
adc
lods
pop
addr16
scas
add
out
mov
push
hlt
loopne
lods
xchg
add
flds
jb
xchg
xchg
mov
into
popa
bswap
push
loopne
icebp
inc
push
xchg
out
inc
mov
ds
out
and
add
rcll
mov
jbe
adc
fsts
jns
mov
popl
iret
sub
in
cwtl
sbb
pusha
jmp
mov
adc
jecxz
in
leave
cmp
mov
cmp
sbb
fistpll
add
push
push
fmull
inc
mov
and
add
xchg
dec
jmp
xchg
push
and
jae
mov
sub
cmp
lds
and
icebp
adc
pop
cmp
push
leave
scas
movsl
mov
jns
pop
jno
inc
out
push
and
out
cld
xchg
inc
inc
icebp
sbb
test
dec
leave
lods
test
clc
push
mov
fwait
dec
inc
enter
jg
movsb
pop
jnp
ja
insb
mov
test
fwait
add
ljmp
into
mov
call
inc
push
xchg
mov
cmp
inc
adc
adc
dec
xchg
pop
dec
test
call
add
xor
rorb
pop
fidivrl
sub
sbb
clc
jns
out
push
gs
loop
mov
mov
cmc
out
jecxz
dec
cmpsl
push
scas
push
xchg
insl
rorb
sbb
je
jle
test
jecxz
xor
in
or
cs
sar
ret
mov
jne
test
fldt
cmpsb
stos
pop
mov
cmpsb
push
fcmovne
xor
mov
mov
incl
inc
popa
mov
mov
sbb
xor
in
pop
stc
inc
mov
bnd
lret
int3
insl
xchg
inc
addb
dec
lods
push
jge
in
call
xor
andl
jns
xor
rcr
jno
add
shll
sub
cmp
lahf
dec
movsb
mov
test
jae
cmc
iret
dec
push
cltd
push
test
mov
lret
pop
dec
jne
cmp
add
adc
into
xlat
sbb
nop
pop
and
mov
jb
aam
push
fldl
cwtl
xchg
mov
fcmovu
push
jb
adc
daa
and
or
leave
std
inc
js
xchg
dec
stc
fwait
popa
sti
fcom
mov
mov
jge
shl
loope
inc
filds
sbb
lret
jae
lret
int3
insl
sub
mov
mov
popa
enter
dec
testl
push
pushf
popf
dec
xchg
js
pop
sbb
addr16
add
lock
push
lcall
cld
mov
sbb
add
or
mov
sbb
icebp
cmp
mov
popf
and
roll
mov
dec
sbb
mov
fsubl
loopne
cmpb
inc
cmpsl
xchg
xchg
pusha
sub
sahf
sbb
lahf
in
cmp
cmc
mov
xchg
and
out
cmp
inc
shlb
ret
clc
rcrl
pop
mulb
cmpsl
mov
es
je
sub
jbe
cmp
mov
push
lret
js
lret
mov
sahf
sub
pop
popf
or
xlat
cmpl
cld
call
ficoml
pmaxsw
lock
jnp
push
es
add
or
outsl
test
cwtl
rcr
sub
xor
pop
add
mov
pop
shrb
stos
bound
fimuls
sbb
add
xchg
scas
shll
lcall
cli
inc
jns
loope
jae
imul
pop
movsl
pop
rcll
or
cmp
pop
cltd
sbb
push
adc
and
movsb
dec
pop
test
xchg
imul
jmp
aam
int
daa
mov
stc
shrb
sub
xchg
inc
or
cmp
mov
pop
mov
in
and
subb
popf
xchg
jae
divb
push
pop
in
insb
cwtl
pop
jae
dec
stos
adc
aam
sbb
rorl
adc
sub
aas
jbe
sub
push
std
aad
in
push
test
pop
pop
dec
dec
mov
ja
sbb
daa
loope
mov
cmp
push
xchg
pop
out
aad
push
sbb
sti
js
inc
outsl
in
lds
loope
dec
test
div
and
mov
ret
adc
gs
out
je
lret
nop
mov
scas
lock
lods
pop
fwait
aaa
mov
mov
xchg
sbb
lock
xchg
lret
pop
lods
pop
adcl
mov
popf
fists
push
imul
sub
xchg
lahf
enter
es
pop
cmp
lock
xchg
mov
rorb
push
lcall
mov
repz
or
sti
outsl
push
sbbb
sbb
repnz
aaa
ja
jp
repnz
fnstsw
out
int3
jecxz
or
inc
or
push
and
and
sub
pusha
pop
fstps
mov
fstp
mov
xor
mov
xchg
dec
pop
xor
fbld
xchg
in
mov
sbb
mov
sti
in
fsubrl
mov
sarl
aas
xor
into
fsubrl
sub
cmp
jne
jp
push
mov
xor
push
ja
shrb
pop
xor
dec
xor
ret
paddw
stos
jl
es
mov
mov
inc
daa
inc
jg
in
sbb
cmp
mov
mov
push
mov
out
cmc
imul
or
pop
mov
inc
popa
dec
andl
sub
shl
aaa
push
jno
mov
jp
adcl
push
jo
popa
sub
cs
lods
pop
add
mov
aam
fcomps
addb
or
push
inc
add
daa
mov
rorl
mov
call
mov
fucom
scas
in
lea
stos
dec
lcall
int3
jb
dec
adcb
ljmp
sub
lahf
pop
lods
in
vmwrite
inc
inc
cmpsl
dec
xor
pop
iret
mov
jge
cmp
sub
pop
cld
xchg
out
pop
jle
out
adc
outsl
test
sbb
arpl
cs
icebp
pop
imul
push
xor
pop
icebp
imul
in
adc
dec
data16
imul
push
add
mov
lods
jmp
outsl
lea
mov
inc
pop
pusha
pop
cmp
mov
sarl
push
cmc
push
je
dec
sub
mov
adc
das
in
jnp
and
or
fmuls
into
cltd
sahf
ret
cmp
and
mov
dec
cwtl
add
xchg
pop
mov
sbbb
sub
inc
mov
stos
pop
test
sbb
pop
aam
pop
jle
in
jp
loop
iret
stos
add
aas
incb
xor
mov
inc
fsubs
clc
mov
out
movsl
add
scas
inc
test
imul
pop
mov
sub
je
cmp
adc
adc
sbb
scas
in
xorb
enter
xchg
test
adc
icebp
cltd
mov
dec
push
movsb
jecxz
mov
xchg
lods
push
out
cmp
mov
scas
pop
xchg
outsl
push
adc
mov
adc
pop
ficoms
cmpsb
test
dec
inc
lcall
mov
je
js
jmp
xor
pop
or
lods
jmp
pushf
cmc
hlt
inc
lock
dec
test
jle
or
cmp
jbe
push
pop
shl
xor
inc
jno
push
add
std
cwtl
dec
divb
aas
fdivl
pop
fwait
pop
scas
call
push
mov
pop
popl
cs
and
mov
xor
orb
sub
mov
stos
aas
mov
stos
dec
and
outsl
rorb
aad
inc
aas
cmp
inc
bound
mov
xchg
push
fwait
mov
push
inc
mov
aad
cmp
lea
dec
push
jo
sub
cs
mov
shll
popf
loop
into
mov
mov
mov
dec
inc
mov
mov
das
ret
xorl
xlat
cmp
pop
dec
and
inc
fisubrs
mov
or
xchg
ss
ret
fwait
call
leave
and
js
shr
mov
jno
sti
xor
xchg
aad
or
mov
repnz
cmp
andl
stc
scas
mov
jl
pop
dec
jne
les
sub
inc
addr16
daa
daa
clc
ret
push
arpl
loopne
cmp
test
pop
popf
or
int
testb
sub
repnz
pushf
or
notb
shrb
cltd
cli
cmpsb
sub
xor
movsb
mov
cld
sbb
mov
mov
sub
adc
pop
imul
jle
xor
cmp
and
push
xor
and
push
xchg
inc
loope
fisttps
push
inc
xchg
push
mov
add
sar
jno
sbb
pop
xor
fptan
cmp
pop
inc
mov
cmpsb
pop
insb
sub
fldenv
dec
in
sarb
dec
add
xor
daa
lret
push
std
sbb
and
add
sahf
dec
push
add
aas
jmp
popf
in
shlb
add
dec
popa
jb
cmp
cmp
out
shlb
mov
mov
push
fs
adc
mov
in
cmp
out
stos
mov
push
call
jg
inc
movsb
test
into
pop
inc
fwait
xchg
xchg
loope
hlt
and
fstpt
fs
js
mov
mul
cmpsl
lret
mov
enter
xlat
aas
xchg
adc
les
xchg
call
stos
mov
into
push
and
fistpl
mov
inc
jg
in
push
sub
clc
mov
popa
jns
sbb
fdivp
cmp
xchg
fdivrp
loopne
xchg
iret
adc
add
pop
in
popf
push
adc
push
push
movsl
adc
shrb
pushf
into
jae
mov
pop
cmc
xchg
add
cli
cmpsb
sub
int3
mov
pop
push
jg
xor
add
or
ds
jae
fwait
pop
pusha
push
stc
mov
dec
dec
int
out
jns
jne
gs
call
hlt
sub
sbb
cmpsl
adc
ret
subb
jle
aam
dec
outsl
adc
cmp
jmp
out
cs
push
rol
fldt
xor
jo
ret
push
ljmp
mov
inc
aas
ja
cmp
inc
pop
mov
sahf
in
subl
xchg
jmp
pop
push
cltd
mov
dec
sub
mov
jbe
cmp
icebp
call
loopne
decb
inc
mov
ret
push
int
xchg
inc
dec
int3
je
popw
mov
xchg
or
push
mov
arpl
shl
or
dec
cmp
mov
int3
daa
out
xchg
mov
pushf
repz
push
pop
sbb
bound
lcall
test
and
addb
out
mov
movsl
inc
cmp
icebp
test
sub
add
or
mov
and
insl
stos
lds
lods
mov
loope
insl
out
pushf
aam
rcrl
mov
sahf
mov
dec
adc
mov
daa
out
xor
inc
mov
sub
repz
xor
sub
add
arpl
mov
jmp
jmp
stos
jge
jl
dec
sub
fdivp
sahf
pushf
dec
sub
mov
pmaxsw
mov
daa
sub
push
test
outsl
loopne
xchg
pop
lahf
cmp
aaa
movsl
adc
test
add
andb
inc
addl
sbb
adc
push
mov
pop
add
mov
fistpl
sub
cmc
xchg
bound
imul
fucompp
outsl
add
mov
std
rorb
pop
xchg
add
pop
sti
repz
adc
sub
out
out
mov
ret
enter
daa
into
jge
dec
clc
aad
aaa
mov
ud1
js
xchg
popa
js
sbb
sbb
xchg
cs
and
ja
sbb
ss
jg
int3
xchg
popf
mov
sub
mov
outsl
leave
jecxz
push
jmp
iret
jmp
repnz
sbb
adc
daa
dec
out
fwait
inc
jg
stos
adc
popa
xor
sbb
jl
es
mov
mov
pop
mov
push
in
push
rorl
mov
popf
sbb
insl
pop
loope
dec
sbb
in
cs
iret
pop
sarl
dec
mov
jo
fisttpl
lds
pop
lret
mov
int
int3
stos
pop
mov
push
fwait
lock
mov
icebp
int3
nop
cmpsb
cmp
mov
mov
sahf
das
add
cmpsb
adc
xor
jnp
imul
lret
ljmp
ja
pop
fadds
dec
js
and
cmp
call
inc
xchg
push
fs
faddp
cmp
jge
iret
rep
and
test
imul
sub
sbb
xchg
fwait
ror
add
cltd
xchg
or
loope
ss
jmp
or
addr16
cmp
inc
js
scas
mov
xor
flds
scas
test
add
add
jle
pop
fstps
fmul
fwait
mov
dec
test
sbb
mov
sub
adc
xchg
mov
hlt
repnz
pushw
mov
dec
mov
jae
aad
jns
lds
lock
sarl
idiv
sub
jge
adc
adc
dec
dec
cmp
sbb
adc
lods
mov
inc
cmc
mov
cmc
gs
imul
lret
cmpsb
pcmpgtd
dec
mov
or
cli
nop
mov
dec
jmp
jp
cmpsl
push
outsl
mov
xchg
sbb
mov
gs
push
bound
adc
inc
jo
scas
sbb
xlat
negl
loope
icebp
mov
int
dec
ficoml
imul
hlt
adc
cmp
fnsave
push
or
mov
cmpsb
mov
iret
adc
repnz
push
dec
test
hlt
push
in
mov
ljmp
aaa
jge
decb
xor
or
shll
or
pop
out
pop
inc
lahf
lds
mov
and
jae
xor
jno
jg
pop
inc
mov
inc
popaw
mov
mov
push
pusha
jae
stos
sub
push
mov
bound
pop
sbb
xorb
test
popf
cli
jg
arpl
pop
pop
mov
add
std
dec
sub
mov
cmpsb
rcr
fstpt
pop
ljmp
push
enter
lds
sbb
repnz
and
imul
es
lock
test
mov
in
cmp
cmpsl
or
xchg
adc
ret
push
mov
jb
addr16
into
or
addr16
leave
or
pop
sbb
xor
push
ds
add
loop
sub
cmpsb
dec
daa
mov
stos
jl
sub
testl
scas
push
pop
lods
pop
mov
adcb
outsl
sub
mov
jne
xchg
and
jp
repz
adc
aaa
test
ret
adc
dec
mov
mov
mov
pop
jp
imul
out
ret
int
inc
dec
jmp
and
loop
sbb
lret
xor
iret
xor
outsb
mov
mov
jo
fdivrs
addr16
push
rclb
mov
xchg
aaa
push
in
dec
and
mov
insl
or
imul
nopl
sub
jns
enter
test
pop
sub
test
ljmp
pop
test
mov
inc
ss
lock
push
push
cmp
loopne
pop
push
repnz
mov
dec
mov
ds
or
add
sub
mov
repnz
mov
add
mov
adc
adc
sbb
mov
fwait
push
ror
jb
add
stc
fwait
out
fwait
push
fidivrl
fidivs
push
xchg
gs
dec
dec
dec
mov
clc
cwtl
lods
not
xchg
hlt
mov
cmpb
repnz
ja
add
repnz
sti
xchg
fsubl
add
repz
daa
push
test
fsubrl
push
adcb
sbb
mov
xor
jmp
xor
in
in
dec
inc
mov
cli
push
mov
or
xor
push
repnz
push
pop
int3
push
fldenv
loop
divb
sbb
test
addl
jecxz
dec
mov
movsl
pushf
or
mov
frstor
mov
sahf
push
jmp
out
pop
aad
cmc
clc
scas
fmuls
lds
or
inc
rclb
addr16
inc
fnstcw
cltd
loope
inc
xchg
in
or
stos
or
jle
packuswb
mov
sub
xchg
xor
out
lods
and
adc
sub
sub
ret
nop
outsl
fs
add
inc
mov
xor
jle
adc
pop
loopne
push
jle
sbb
mov
loopne
enter
inc
or
xor
mov
and
iret
jns
add
push
shlb
dec
popaw
push
push
test
or
imul
xor
push
dec
and
cld
jge
xchg
mov
js
inc
pop
loopne
and
fisubrs
sbb
jp
out
xchg
orb
mov
cmp
inc
push
orb
xchg
cmp
sub
cmp
aas
adc
sub
jno
mov
negl
xchg
pop
insl
dec
lock
roll
dec
and
add
inc
ret
push
cmp
insl
sahf
icebp
fmuls
jp
jmp
es
mov
inc
fmull
push
call
icebp
test
stos
aad
addr16
int3
push
repz
mov
out
and
mov
cli
shrl
scas
cld
mov
lock
sub
mov
inc
mov
out
cmp
test
sub
hlt
rolb
xor
out
xchg
xchg
mov
mov
rclb
int
sub
out
jnp
push
cmpsl
es
fsts
mov
in
jae
out
andb
pushf
rcrl
jne
lods
sub
jbe
in
cmc
pop
ffreep
lock
and
out
mov
ja
out
stos
push
xorb
xor
mov
bound
loop
lret
xor
push
lds
adc
xlat
shl
add
popf
pop
fcomps
cwtl
add
push
inc
imul
push
lret
cli
sbb
mov
xchg
pushl
sti
pop
and
sbb
fcomps
testb
push
jle
gs
add
fisubl
or
into
inc
sbb
xor
out
mov
xor
pop
sub
cmp
push
dec
xchg
or
jecxz
add
mov
fsubr
sub
add
dec
stos
xchg
nop
mov
jns
sbb
inc
in
loope
mov
jmp
addr16
repnz
add
mov
andb
xchg
xchg
popf
mov
cmpsl
cmp
mov
pusha
inc
or
in
inc
scas
lret
xchg
mov
pop
and
mov
xchg
sub
sub
add
sub
and
mov
test
dec
jmp
mov
adc
dec
out
mov
pop
xor
push
push
dec
loope
shlb
out
xchg
mov
or
fldcw
pop
jmp
mov
clc
out
decb
repz
pop
loope
in
sub
cmp
repz
adc
jl
ret
push
ja
and
xchg
ja
jns
test
icebp
cltd
jmp
pop
sbb
scas
stos
xor
sbb
add
in
push
mov
lods
jle
jge
andps
and
lretw
dec
inc
xor
popa
adc
fidivs
dec
sbb
shr
in
cs
xor
sbb
or
cmp
cmpsl
sub
outsb
gs
movsl
mov
jp
fsub
jno
fwait
add
fisubrl
add
fisttps
xchg
sbb
loopne
lret
flds
inc
insl
rcll
gs
push
stc
in
push
sub
sbb
add
out
scas
in
or
dec
dec
add
gs
shll
repnz
inc
sbb
das
pop
xchg
pusha
push
add
xchg
sub
aad
sub
rorb
loopne
xchg
cmp
push
pop
mov
sub
lcall
shrl
mull
lahf
cmpsb
mov
mov
nop
inc
aad
add
lds
jnp
mov
arpl
ljmp
testb
fcomps
stos
je
or
mov
stos
das
lea
dec
push
xor
movsb
mov
push
push
lret
jmp
mov
mov
and
jae
pop
bound
ja
loope
cltd
popa
out
out
into
mov
inc
pop
mov
mov
mov
mov
cli
or
fwait
mov
test
jbe
xor
dec
xchg
mov
sub
sub
push
add
mov
pop
les
addr16
aas
sub
hlt
rorb
and
test
and
sbb
adc
aam
cltd
jl
movsl
daa
cmp
gs
cmp
xchg
out
lds
fimuls
je
jno
cltd
pop
and
push
or
sbb
cmp
int3
in
jge
popf
add
or
cmp
xor
rcrb
aaa
jge
es
mov
pop
jle
adc
cli
popf
mov
rorl
and
mov
imul
icebp
out
sbb
push
xchg
data16
inc
mov
andb
movsb
sbb
jno
filds
jge
stos
ljmp
pop
mov
mov
imul
ds
sbb
push
dec
add
shll
les
out
mov
rclb
insb
jns
or
out
les
dec
fwait
mov
add
adc
jns
fiadds
testl
sbb
cmp
mov
dec
adc
aaa
mov
ror
jp
ljmp
ja
mov
add
pop
les
jo
dec
push
jne
stos
out
iret
in
mov
push
cld
sub
lret
jle
loope
mov
mov
inc
inc
mov
movsl
mov
or
mov
jno
jno
push
sarl
sbb
dec
inc
stos
fldenv
leave
lods
mov
jb
add
adc
mov
js
fwait
dec
stc
xor
and
dec
push
popf
popf
in
shrl
add
push
sti
or
cmp
adc
outsl
imul
int3
in
stos
scas
insb
inc
and
add
sub
dec
add
and
insl
out
jo
mov
pop
mov
pop
push
push
xor
ret
sub
cmp
les
cli
xorb
test
sub
icebp
dec
dec
mov
xchg
push
inc
popf
sbb
mov
outsb
ds
jg
sub
sti
sub
inc
in
leave
lds
mov
rclb
cwtl
xchg
aas
xchg
sub
popa
cs
dec
dec
xor
jmp
fistps
lret
cwtl
adc
cmpsb
xchg
lods
sbb
aad
test
in
aam
jg
mov
es
push
fdivp
xchg
sbb
jg
sbb
xchg
in
sarb
pop
scas
dec
mov
push
add
ficoml
dec
lock
pop
ret
lahf
loop
xchg
mov
shlb
add
pop
add
les
scas
sarb
fdivrl
test
mov
sarl
icebp
stos
aam
or
lds
into
mov
fidivl
mov
fstl
xor
lret
cltd
or
jle
jo
jnp
daa
jno
lret
ja
or
push
push
sbb
fimull
jb
adc
push
mov
jl
mov
add
les
push
pop
jae
jmp
jg
mov
sub
pop
jge
fs
pusha
stos
movsl
enter
push
lcallw
fsts
js
scas
xchg
mov
cld
jecxz
xor
mov
mov
test
fcoms
fadd
jecxz
mov
xchg
xor
and
sbb
mov
bound
sbb
xchg
pop
inc
xchg
adc
shrb
sbb
mov
mov
icebp
cmpsl
ja
cmpsl
cmp
mov
lret
das
icebp
lret
sub
iret
pop
cmc
mov
adc
or
add
ret
lret
scas
or
mov
rorl
mov
popf
cmp
shlb
and
inc
and
call
lods
sub
fwait
cmp
push
mov
push
jnp
push
sbb
dec
add
xchg
xchg
add
addr16
test
repnz
mov
decl
push
ret
adc
cmp
aas
jg
push
lods
iret
jl
stos
jne
dec
and
mov
mov
mov
int
ljmp
push
jle
cmc
addr16
adc
mov
jno
ja
imul
stos
push
dec
stos
lock
movsl
addr16
std
adc
loope
lods
loop
shll
adc
cld
pushl
fprem
dec
dec
push
sahf
mov
das
lret
cmp
and
push
push
imul
idivb
cltd
out
xchg
add
repnz
aad
pop
sbb
mov
stos
xchg
inc
pop
rcrb
jmp
sbb
mov
dec
test
push
lahf
insl
mov
std
add
clc
or
inc
jne
repz
in
cmp
pop
sbb
mov
mov
xchg
mov
jle
das
dec
or
or
mov
mov
sbb
mov
dec
jmp
mov
mov
cmc
add
cltd
rcrl
mov
cmp
testb
out
aaa
adcb
rorl
jmp
xchg
shll
mov
cmpsl
cmp
aam
add
sbb
adc
push
nop
out
jle
mov
jge
sti
pop
sub
pop
xlat
lock
dec
add
fstpl
arpl
dec
or
jge
fistl
mov
adc
lods
call
jae
cmpb
push
movsl
sub
pop
int
cwtl
add
jne
pop
lret
add
push
jmp
dec
pop
jns
fsubs
stc
hlt
leave
or
adc
lds
idiv
pop
cmp
or
nop
and
cmp
inc
shll
pusha
xchg
and
jnp
aaa
sbb
fs
lret
or
pop
imul
cmc
mov
mov
pop
adc
pop
jecxz
aam
into
xchg
test
aas
jno
lods
mov
into
test
jg
lea
xor
iret
ffreep
sub
push
mov
adc
mov
dec
inc
xlat
jecxz
mov
pop
aas
lods
daa
leave
pop
lret
into
mov
mov
fwait
shrl
add
iret
bound
xchg
and
cli
fiadds
mov
add
aam
mov
sbb
outsb
aad
ja
sarl
pop
lahf
test
jl
insb
clc
mov
insl
sbb
add
pop
faddp
mov
sub
inc
fistpl
fcomps
inc
ds
popf
loopne
jns
dec
jecxz
int3
cmp
mov
test
mov
jnp
push
jnp
cmc
push
jnp
sahf
pop
cld
inc
nop
enter
fwait
icebp
not
jne
xor
cmp
fsubl
or
and
push
insb
fcoms
rcr
sub
out
int
rorl
mov
push
jp
int
dec
or
imul
icebp
mov
mov
or
push
xchg
xor
cmp
cmc
in
and
test
fistpll
mov
mov
sbb
jo
sub
mov
push
aaa
insl
or
mov
in
int3
hlt
lock
mov
aam
xor
cmp
aam
cs
push
lds
sub
push
pop
scas
xor
and
cmc
cld
inc
push
movsb
push
hlt
sbb
push
rcr
sbbb
mov
negb
xchg
add
int
shrb
inc
mov
add
int3
test
xor
lahf
loopne
mov
mov
fists
gs
push
cmp
or
jo
stc
inc
jb
jo
repnz
push
pop
divl
xchg
stos
mov
push
dec
mov
sti
and
in
inc
dec
pop
arpl
sti
fld
rcrb
jnp
jecxz
inc
insb
cwtl
sahf
aaa
fsubl
pop
jl
ss
pusha
in
frstor
mov
call
das
add
cmp
insb
pop
mov
xchg
fstl
sbb
cmp
cmp
stos
in
mov
sti
push
in
lahf
inc
add
lret
sub
mov
mov
daa
sahf
xorl
stos
dec
cld
dec
jl
cmp
mov
dec
mov
push
mov
mov
push
cmpsb
or
data16
and
pop
sti
mov
je
rcll
xor
sub
xchg
fsubs
and
dec
sub
nop
mov
test
jle
and
xor
clc
sbb
pushf
jnp
sub
and
outsl
cli
pusha
sub
fwait
or
pop
and
pop
pop
test
dec
push
inc
sub
stos
mov
adc
jne
sub
pop
daa
test
scas
mov
aam
lock
cmp
push
jmp
adc
cmp
fsubrl
inc
mov
add
movsl
into
push
push
push
or
or
fistpl
jle
jae
insl
or
repz
cld
mov
div
cs
dec
mov
adc
push
lret
cmp
inc
dec
adc
pop
std
mov
cmpsb
out
inc
test
dec
jp
mov
int
roll
mov
mov
fisubrs
das
mov
stos
fld
cmp
jns
stc
jmp
call
sti
jle
int3
mov
inc
mov
clc
pop
and
cmp
test
jbe
jge
sbb
xchg
shrl
push
lret
ret
insb
clc
and
mov
scas
dec
out
jl
pop
mov
pop
dec
stos
cltd
insb
hlt
sub
fisubrl
lds
fsubl
mov
leave
loopne
dec
popl
push
sub
clc
jae
push
add
add
fcmovnbe
out
test
call
or
push
add
dec
inc
mov
int
mov
mov
into
sahf
pop
pop
xor
sbb
and
add
fistpl
xor
sbb
inc
rcrl
sti
jmp
pop
shlb
and
leave
shl
out
fsubl
jnp
push
jecxz
inc
sti
mov
jbe
xchg
and
xchg
stc
mov
fcom
jl
xor
std
mov
fsubrs
scas
or
ljmp
push
insl
mov
inc
je
jo
lahf
movsl
jo
std
xor
ret
pop
mov
push
insl
push
fisttps
imul
push
mov
push
ja
movsl
adc
xlat
imul
adc
xor
or
or
or
or
ficomps
cltd
sbb
xor
inc
and
or
ret
inc
jmp
pop
fcompl
stc
jg
out
add
nop
fbstp
or
or
cmpsb
je
daa
lahf
cmpsl
bound
xlat
mov
insl
and
or
shrl
push
dec
loope
jle
imul
popa
mov
rorl
jmp
xorb
jb
adc
pop
sub
sti
and
pop
push
and
sub
mov
call
test
xchg
in
dec
into
cmp
loopne
mov
mov
mov
fwait
arpl
jb
pop
sbb
jae
dec
mov
add
movsl
iret
cld
jo
or
fs
lods
int3
repnz
jno
int
push
cmp
pop
cmp
push
dec
js
cmc
movsb
insl
scas
jns
cmp
push
in
xchg
pop
fadds
gs
add
mov
adc
dec
jmp
and
jle
dec
idivl
and
daa
leave
aaa
jg
xchg
stos
movsb
test
add
pop
insl
inc
out
dec
mov
subl
sub
pop
loopne
pop
pop
sub
popf
sub
cmp
inc
mov
testl
push
mov
inc
cwtl
out
or
insl
iret
jecxz
ss
mov
iret
cmpl
inc
enter
mov
mov
push
lret
loop
lods
aad
in
push
jo
imul
xlat
inc
imul
sub
arpl
inc
jns
sub
filds
test
push
in
orl
xor
add
adc
push
sbb
jg
out
add
sub
je
jp
addr16
dec
mov
fwait
adc
cmp
ret
lret
stos
arpl
out
pop
mov
pop
stc
cmc
push
je
dec
je
pavgw
xchg
fldenv
movl
aad
push
push
adc
clc
jecxz
scas
mov
hlt
mov
daa
icebp
repz
popa
outsl
testl
mov
mov
pop
cmpsl
aas
and
push
xchg
repnz
mov
mov
gs
mov
fs
sar
dec
mov
and
lcall
mov
dec
in
cltd
ja
inc
sbb
push
pushf
jnp
push
mov
cs
mulb
into
aas
into
xchg
push
jge
xor
stos
sbb
outsl
fstl
stos
jo
sbb
inc
inc
imul
sub
xchg
lods
pop
rorb
sbb
out
fistl
mov
sub
icebp
pop
pop
mov
lock
xor
cltd
clc
jb
insl
pop
outsb
in
sub
mov
inc
idivb
or
das
push
xor
stc
test
add
push
mov
sbb
dec
xchg
xor
sbb
andb
out
and
leave
jge
mov
jl
insb
pop
loope
adc
es
jnp
adc
bound
jmp
xchg
fldenv
dec
mov
jns
add
outsb
pushf
mov
cmpsl
fisubs
int
adc
push
int
ror
and
ror
jb
cmp
insb
adc
mov
and
insb
lret
hlt
mov
xor
cmp
push
sub
adc
cwtl
mov
jl
add
xchg
sub
rorb
jns
sub
mov
xchg
push
insb
jbe
sub
bound
das
mov
je
enter
jnp
mov
imul
insl
insb
pop
mov
lods
and
add
push
outsb
fsub
not
das
jl
clc
sbb
adc
sbb
mov
mov
sbb
or
call
dec
fcoms
fistps
ja
jnp
inc
lods
aaa
xor
or
int3
outsb
enter
bound
inc
and
aam
rorl
and
push
je
stc
popa
cmp
push
sub
insb
fmull
ret
imul
jne
xor
and
jnp
push
xlat
les
ret
lea
std
cld
fwait
es
mov
outsb
and
stos
pop
sti
mov
pusha
pop
daa
hlt
outsb
and
les
outsl
pop
ljmp
test
dec
xchg
pop
jmp
in
xor
jo
push
sti
loop
notb
fsubrs
inc
sti
lret
ret
andb
pop
mov
fdivrl
mov
lods
test
aaa
imul
adc
push
xchg
dec
cld
fadd
cli
roll
popf
sub
ret
test
insl
bound
aad
leave
fcomps
xchg
stc
pop
add
and
lods
in
aam
inc
jb
mov
bound
or
cmc
pop
shll
lds
out
mov
jns
push
fidivrs
imul
xor
dec
mov
addr16
inc
int3
pop
mov
xchg
pop
push
mov
jb
rorl
fs
in
mov
mov
test
lods
out
in
scas
cmp
xchg
lret
scas
ja
mov
sub
fcoml
out
push
jne
mov
arpl
rol
xor
pop
sub
push
dec
cmpsb
inc
movsb
push
jo
clc
add
xchg
sub
adc
push
stos
je
rcrb
pushl
xchg
add
lahf
daa
rol
push
data16
repz
cs
pop
adc
xchg
les
add
or
add
out
out
cmpsl
mov
jb
icebp
stos
mov
stos
cmp
jg
sub
lea
push
xchg
cltd
cmp
and
dec
sub
jo
cs
loopne
fisubrs
sub
xchg
loope
or
cmp
aas
movsb
rolb
and
jb
imul
popf
cmp
pop
lahf
sahf
dec
pop
jno
in
push
sub
out
mov
and
sbb
xchg
pop
jmp
jns
dec
fmull
lods
outsb
shl
xchg
insl
mov
pop
sahf
cmp
sbb
add
adc
xor
mov
mov
mov
xlat
stc
inc
fwait
inc
jg
mov
and
movsl
jns
ret
jle
or
shl
mov
pop
inc
mov
hlt
sbb
add
xchg
jmp
sub
xchg
or
dec
push
sub
pop
push
das
mov
and
sub
cmp
dec
imulb
shr
enter
mov
push
dec
in
push
sbb
fs
mov
inc
mov
xchg
enter
out
inc
inc
test
xchg
xchg
xchg
mov
pop
mov
and
mov
push
mov
cmpsl
dec
xor
jecxz
jl
leave
daa
sub
cmp
frstor
in
out
lret
or
and
pop
or
ret
cmp
test
out
or
popf
loop
pop
lea
lods
xchg
jle
int3
nop
pop
add
and
mov
sub
sti
add
in
mov
jae
aad
rclb
sbb
adc
iret
leave
or
pop
int3
loope
and
or
and
movsl
mov
cmp
xor
and
shl
bound
out
mov
fidivs
ljmp
sub
inc
aas
inc
gs
rol
aaa
sbb
mov
add
xor
sub
in
dec
addr16
int3
dec
or
popa
aad
dec
xchg
mov
add
dec
add
nop
jl
cld
xchg
pop
sbb
call
sbb
movsl
lret
adc
in
test
mov
imul
add
mov
mov
lret
aaa
addl
pusha
out
mov
inc
pusha
push
or
mov
dec
or
pop
aas
fwait
repz
scas
out
ljmp
in
gs
loop
out
out
mov
mov
add
in
mov
xor
outsl
mov
out
inc
xchg
mov
out
sub
dec
mov
sbb
jge
int
inc
mov
xchg
insl
ret
ffreep
in
add
ja
rep
sbb
cmp
fsub
adc
test
insl
xor
out
xchg
and
cmp
pop
cmp
cld
sbb
pop
xchg
daa
hlt
or
or
shll
data16
sub
sti
and
cld
mov
xchg
pushf
movsb
fisubl
sbb
or
mov
or
imul
out
xlat
inc
mov
adc
psubsw
jmp
mov
add
rcrb
xor
ret
mov
adc
fsubrp
pop
cmpsb
or
mov
push
jl
mov
xor
mov
xchg
mov
xlat
cmp
test
stos
jle
push
rorl
or
cmp
jle
jb
push
mov
mov
arpl
mov
inc
cld
lcall
sbb
add
jne
dec
pop
cmpsl
mov
dec
popf
mov
cmpsl
inc
pop
fstpl
repz
push
out
dec
inc
int
lret
mov
jnp
sbb
adc
lds
or
xor
jp
or
aaa
mov
xchg
out
scas
or
stos
icebp
dec
in
movsb
mov
dec
sti
sbb
jp
mov
mov
js
jae
and
xor
ror
xorb
pop
mov
ret
sbb
lods
es
jl
pop
push
iret
inc
pushf
outsb
sub
faddp
push
inc
lret
in
pop
ss
fsubl
pop
cld
das
fbld
jo
sbb
cmp
out
std
jnp
mov
pop
inc
sub
call
pop
addl
pop
sbb
es
mov
pop
push
mov
sub
jae
lds
jno
aad
mov
stos
xor
nop
mov
rclb
aam
sahf
pop
fwait
cmp
sbb
pop
in
mov
jp
adcl
jnp
in
outsb
shrl
loope
add
mov
cltd
fimull
hlt
xchg
inc
fdivrs
sbb
out
popa
pop
lds
fidivrl
sarl
addb
inc
sbb
cltd
lea
icebp
pop
je
pop
push
ror
andl
cmpsb
and
data16
cltd
out
dec
shlb
xchg
xchg
lahf
adc
test
jecxz
jmp
cli
in
ss
loop
adc
stos
enter
add
adc
sub
jmp
fisubl
cs
cmpsb
push
mov
lea
les
insl
inc
jp
xor
leave
aaa
inc
inc
cld
scas
and
xchg
jg
add
int3
sub
cmp
push
mov
dec
xor
movsl
lea
mov
test
lret
add
lret
in
mov
ljmp
aam
iret
inc
out
xchg
mov
sahf
cmc
lret
mov
adc
jmp
in
xchg
adc
add
jg
add
cmp
stos
into
dec
mov
inc
sub
xor
aaa
cmp
lahf
inc
mov
inc
int3
lcall
mov
or
sub
xchg
cmc
mov
sahf
push
outsb
mov
sar
and
jne
pop
or
push
mov
mov
sub
add
jg
dec
inc
sbb
mov
test
lahf
lcall
sti
jge
sub
lcall
stos
das
mov
add
es
inc
icebp
in
fs
xchg
pop
cwtl
and
ljmp
sub
inc
ljmp
jg
adc
sbb
mov
lods
sub
push
xorb
jb
and
pop
push
ss
pop
xor
loope
imul
mov
push
adc
jno
inc
mov
inc
mov
or
adc
pop
sub
add
call
lahf
push
fstl
lods
add
fistpl
push
test
xor
xchg
and
sub
jmp
sbb
xchg
push
das
mov
xchg
jle
push
ficoms
test
or
mov
sbb
scas
mov
enter
adc
jmp
push
push
out
xlat
mov
adc
test
call
lret
jge
std
fucomp
lcall
xor
pop
inc
outsb
fucomip
fidivrs
movsl
leave
xchg
and
sub
xor
push
sbb
mov
stc
push
cld
pushf
cmp
jae
imul
dec
loopne
enter
popf
inc
mov
cmp
add
and
pop
popa
fisttpl
xchg
and
cwtl
xchg
push
ljmp
mov
js
add
shld
add
les
pop
es
jae
lods
aad
test
add
aas
outsl
fsubp
dec
adc
jae
pusha
pop
pushf
sahf
popa
shrb
out
test
sub
xchg
test
sbb
cmp
sbb
inc
jecxz
jg
cmp
nop
in
popf
stos
add
xor
mov
idivb
jle
aad
mov
adc
ret
cld
jmp
mov
ljmp
fistps
mov
cmp
push
icebp
loopne
sbb
pop
lds
pop
mov
pushf
adc
dec
jae
mov
jbe
lds
insl
mov
ja
jle,pt
pop
xchg
out
insb
lea
jne
std
sbb
add
stc
cmpsl
adc
xorb
mov
xor
popa
cmc
clc
mov
mov
mov
and
xlat
push
lahf
out
je
pop
daa
pop
shl
nop
outsb
mov
xor
pop
xor
push
repz
js
and
cmpsb
into
cmpsb
filds
or
jo
loope
jg
push
andl
sbb
loope
jbe
fistpll
xlat
lcall
mov
dec
sbb
pop
sbb
jmp
inc
ss
and
push
out
repz
mov
ljmp
cltd
xchg
cmpsb
cmp
add
add
divl
sarl
push
cmp
clc
addr16
cmp
adc
lock
lods
dec
push
mov
pop
cli
sbb
or
scas
xor
dec
repz
inc
sub
cmpsb
lods
cld
pusha
pusha
mov
arpl
fidivrl
stos
or
incb
insl
mov
push
pop
push
rorl
ja
pop
xchg
and
mov
lock
ljmp
int
gs
aam
in
mov
and
imulb
hlt
pop
xor
outsb
subb
cmpsl
es
ds
rol
loope
mov
adc
hlt
xchg
frstor
mov
negb
imul
lahf
jae
mov
out
sub
addl
popa
mov
mov
push
mov
fadd
repz
in
xchg
call
repnz
pop
push
imul
dec
or
mov
jb
mov
bound
xor
inc
inc
ljmp
shl
rcrb
mov
es
sub
or
out
dec
pushf
cld
sti
mov
frstor
mov
js
pop
push
ja
cmpxchg
pop
sub
out
inc
mov
xor
pop
loop
movsb
es
inc
je
es
and
add
cmp
jb
pop
mov
and
outsb
push
pop
in
shll
pop
cmpsb
fists
out
cmp
push
lods
loop
scas
sbb
jne
mov
stc
stos
mov
and
fwait
cmc
insl
jmp
ret
push
jmp
in
lods
sub
sahf
stos
push
xchg
and
add
pop
or
pop
mov
and
pop
dec
fsts
sub
xor
xor
push
sub
enter
repnz
sbb
enter
stc
cmc
push
mov
lret
insl
add
or
jns
cltd
adc
pusha
sub
adc
enter
jne
xchg
ljmp
mov
test
adc
or
xchg
std
popf
scas
pop
shl
inc
shrl
out
jae
dec
jb
cmpsb
dec
dec
adc
xor
mov
mov
xchg
push
cwtl
in
inc
lret
xchg
pop
add
mov
cs
mov
jae
mov
popf
mov
pop
test
clc
or
adc
jb
and
arpl
fnstenv
mov
mov
dec
popa
outsb
jno
pop
dec
je
loop
cmc
loop
mov
mov
xor
outsl
xchg
inc
outsl
stos
out
cs
mov
xchg
imul
push
orl
cmpsl
and
aam
int
test
sti
pop
push
lcall
in
popf
inc
pop
dec
pop
push
mov
filds
mov
shrl
ret
mov
into
push
iret
out
or
push
inc
fnstsw
xor
call
xchg
fstl
mov
lock
mull
jno
icebp
dec
ss
cs
mov
sbbl
push
xchg
into
out
mov
in
aam
xchg
scas
cltd
cltd
ja
mov
imul
rcll
or
jno
xor
or
cmpsl
popf
mov
pop
lret
and
push
enter
faddp
jne
cmp
daa
rol
mov
lods
lret
movsb
xchg
pop
or
add
and
dec
push
sub
jge
int3
movsl
mov
dec
mov
loop,pn
xchg
xchg
mov
mov
mov
test
pop
push
out
pop
rcrl
cld
cmp
push
cmpsl
mov
and
std
adc
imul
out
in
in
jp
scas
jge
pop
cmpb
cmp
shll
and
add
rorl
dec
inc
add
jns
faddl
mov
cmpsl
fnstcw
insb
movsl
out
dec
or
imul
adc
fs
inc
xchg
inc
pushf
mov
pop
pop
pop
repnz
dec
incb
sbb
out
adc
sbb
cltd
loop
aad
xchg
mov
jne
les
lret
incb
add
cmpb
cmp
inc
fcomip
in
mov
add
adc
add
hlt
pop
cmpsl
fsubrl
lods
dec
push
lahf
mov
mov
xor
fnstsw
mov
test
push
in
push
mov
xchg
dec
test
mov
or
jle
cmp
sarl
scas
out
jge
pop
inc
push
pop
adc
mov
aas
out
mov
xor
xorb
push
fxch
push
je
enter
sub
cmp
std
sbb
add
pop
inc
jo
clc
mul
jns
pop
cmc
adc
jle
rcrb
pop
insb
scas
sbb
ret
jnp
cmp
pop
mov
jb
sbb
lcall
aaa
add
jecxz
insl
outsl
xchg
mov
cmp
out
scas
inc
mov
sub
lret
outsl
in
shr
data16
mov
popl
lret
inc
je
sub
sbbb
test
fwait
jecxz
mov
mov
inc
into
dec
negl
xchg
sahf
loopne
jle
adc
xor
int3
faddl
scas
pop
dec
and
jg
dec
scas
xchg
sub
mov
iret
cmp
mov
imul
daa
out
adc
mov
mull
and
jo
adc
and
jbe
jo
sbbb
lahf
jnp
imul
jg
pop
xchg
xchg
push
mov
push
lds
add
shl
sahf
test
fdivp
xchg
adc
dec
xchg
ja
pop
push
movsl
iret
das
push
lahf
aam
xchg
or
ljmp
mov
nop
ja
popfw
jae
addr16
jbe
fldl
daa
sbb
stos
call
push
sbbl
ficoml
xchg
jmp
mov
je
sti
jmp
sbb
mov
out
aas
sarl
push
dec
push
mov
icebp
cmp
cli
adc
cmp
movsl
movl
js
aam
outsb
cmp
addb
aam
gs
add
dec
jns
sub
xchg
xchg
lock
rcrl
jg
adc
fisubrs
fsubs
fstps
lahf
enter
pop
jne
ja
lods
mov
mov
xchg
ret
cmp
mov
mov
movsl
bound
cmp
das
mov
scas
inc
add
jmp
popf
dec
sbbl
enter
and
lods
inc
lret
adc
lahf
xlat
push
add
cltd
xchg
cmpsb
sub
fldcw
or
stc
or
pop
arpl
jge
out
mull
ror
jl
ja
xor
mov
xor
xlat
ret
fadds
fbld
sbb
roll
xchg
mov
dec
dec
movsl
push
push
add
inc
and
arpl
outsb
xor
pop
stos
sbb
imul
ret
sbb
pop
ja
int3
gs
sti
cwtl
jl
or
lods
outsb
mov
push
mov
mov
in
jge
jge
aaa
jle
in
int
ds
faddl
std
mov
mov
decl
arpl
add
adc
cwtl
inc
cs
pushf
fmuls
inc
and
xchg
iret
jecxz
shlb
jp
pop
xchg
jl
stos
pop
pusha
cmpsl
movsl
loope
iret
loope
or
shl
scas
sbb
subb
pusha
int
adc
test
xchg
cmp
or
rolb
mov
pop
mov
jge
dec
data16
addl
xchg
push
ljmp
ljmp
cs
lock
lahf
lock
lea
xorb
bound
push
cmpl
stc
push
and
in
cmp
xchg
push
add
lret
adc
sub
inc
dec
xchg
jno
push
sbbb
and
imul
int
xchg
add
sti
je
push
fsts
xor
sbb
add
movsl
mov
xor
addr16
xchg
mov
xchg
and
mov
jg
loope
fistps
std
xchg
scas
mov
mov
sub
ss
mov
or
out
mov
sub
adc
out
ljmp
fcompl
xchg
cmp
sti
jno
push
sahf
mov
cmp
dec
idivl
mov
xchg
push
imul
mov
ds
rcl
imul
clc
jns
data16
mov
shll
xchg
adc
cs
std
push
push
loope
imul
sub
mov
xchg
mov
movsl
loope
insl
negl
pop
fs
pop
add
mov
xor
or
inc
mov
and
inc
mov
mov
cmp
or
pop
add
xor
imul
je
cwtl
inc
mov
pop
xor
cwtl
roll
add
and
or
pop
out
xchg
inc
xor
cli
sarl
insb
mov
inc
inc
cmp
mov
xor
std
into
ficompl
rorb
imul
xor
cmpsl
mov
or
cmpsb
xor
imul
pop
cmp
jb
insb
lea
or
sbb
push
sahf
adcl
xor
fs
je
xchg
ret
inc
jle
sub
js
je
push
or
jno
mov
int3
sbb
imul
jl
fldcw
jb
aas
pop
sbb
in
fs
dec
cmpsl
mov
jecxz
inc
push
mov
cmpsl
mov
xchg
cld
push
andb
pushf
adc
data16
and
and
pop
fs
and
inc
mov
mov
ret
fldcw
sub
out
arpl
aam
mov
dec
lret
lea
lods
jb
mov
pop
sub
jmp
push
sarb
or
mov
pop
or
push
xchg
jmp
jbe
and
sbb
ja
bound
insb
inc
mov
movsl
in
leave
jnp
pop
imul
push
fwait
adc
xchg
mov
iret
pop
pop
cmp
mov
mov
movsl
pusha
mov
sbb
std
loope
in
test
pop
xchg
jmp
pusha
mov
mov
sub
in
sbb
or
jo
pop
mov
into
push
adc
or
lahf
add
jge
test
lret
clc
repnz
test
loope
and
and
in
xor
sub
int
jge
dec
iret
and
or
inc
xchg
adc
test
dec
stos
mov
jl
mov
movsb
das
sti
xchg
sub
sarl
jae
jbe
inc
int
popa
push
jmp
push
pop
lock
xor
setns
ljmp
lret
out
cld
out
popa
and
loope
jmp
test
push
dec
lock
addr16
test
pop
and
or
push
cwtl
neg
cmp
mov
xchg
mov
call
pop
mov
int
push
fcmovnu
scas
and
add
pushf
cmpb
into
cmp
mov
fs
cmpsb
cmc
ds
cli
mov
mov
fadds
dec
fcomps
sub
std
dec
addr16
mov
pop
sbb
sbb
lods
ljmp
out
negb
jbe
inc
or
add
mov
mov
out
int
ja
and
jl
data16
outsl
jge
test
lods
and
push
test
push
and
pusha
dec
jnp
cwtl
test
jb
lods
xchg
adc
popa
stos
lock
lret
mov
shl
lds
clts
mov
repz
mov
into
subb
lret
dec
jmp
lods
repz
or
pop
or
loopne
cmp
dec
sti
les
repnz
mov
sbb
and
push
xor
pop
cmp
jg
mov
outsb
incl
xor
dec
fs
mov
add
or
outsl
les
lods
outsl
out
sub
shl
test
out
xor
adc
or
or
pop
xchg
dec
push
aas
ret
and
orl
in
hlt
mov
or
mov
insl
dec
lret
pop
mov
cmpsb
pop
rcl
lods
bswap
jae
repnz
pop
cmp
mov
in
loopne
push
dec
push
mov
add
dec
push
sbb
or
shlb
imul
push
pop
cmp
lock
mov
cmpl
xor
shlb
mov
iret
ret
xor
into
jnp
or
mov
mov
hlt
stc
mov
pop
or
or
adc
fwait
mov
enter
das
or
es
and
push
shlb
idiv
test
scas
and
cltd
and
push
jbe
adc
push
sahf
mov
xlat
and
out
aas
add
and
add
sarl
push
insl
inc
movsb
nop
mov
add
aaa
fildll
test
orb
inc
cmpsl
addr16
outsb
inc
mov
or
ljmp
push
push
sub
mov
cmp
das
xor
sbb
push
lods
add
ss
jo
and
aaa
ljmp
jo
loopne
imul
mov
jg
mov
loopne
adcl
pop
aad
push
dec
or
mov
pop
iret
scas
aad
in
test
add
daa
mov
mov
jb
lcall
test
icebp
mov
int
or
fstpt
mull
pop
daa
sbb
test
sub
adc
repz
leave
int
mov
shll
inc
pop
and
in
add
in
repz
dec
and
test
mov
mov
js
pop
pop
xchg
xor
xor
aam
cwtl
data16
aas
xor
jns
push
dec
stc
sbb
push
sahf
xlat
cltd
imull
xchg
imul
pop
inc
rcrl
add
push
sub
mov
lds
loope
lcall
cltd
push
out
hlt
push
mov
xchg
popa
mov
lcall
adc
out
and
out
cmpsl
ret
hlt
cltd
fdiv
test
push
imul
lret
cmp
pop
shrb
and
sarb
push
dec
scas
adc
ret
add
repz
sahf
les
mov
stos
xlat
sub
sub
dec
adc
clc
ja
mov
push
out
push
jle
shll
jmp
mov
or
js
mov
ljmp
fistpl
pop
add
es
popa
fsubrl
mov
mov
ret
lcall
stos
or
rclb
test
jg
pop
jp
arpl
mov
cld
xchg
dec
push
ret
cmp
mov
sbb
mov
pop
fwait
arpl
pop
add
shlb
add
dec
cmp
cltd
jle
dec
aaa
jo
or
fdivrs
inc
repnz
retw
fsubrl
in
jl
pop
jae
xor
test
sbb
aas
hlt
sbb
and
pushf
cmp
cltd
sub
fmuls
int3
mov
mov
cmp
adc
stc
inc
dec
xchg
lds
push
stos
not
mov
fcmovbe
jbe
cmp
pop
adc
mov
push
pop
pop
and
pop
add
jb
shll
xchg
lds
sarb
xchg
cmp
sarl
jecxz
jmp
mov
or
mov
mov
mov
ja
jecxz
das
sahf
cld
jb
mov
adc
mov
cs
insb
xchg
push
mov
mov
sub
mov
mov
push
shll
ja
xorb
xor
xchg
cmpsl
out
rorl
adc
into
sbb
add
sub
push
cmp
movsl
dec
mov
xchg
push
dec
fdivs
adc
scas
sarl
cmpsl
int
mov
push
in
fmull
adc
push
in
xchg
jp
scas
pop
cli
ljmp
adc
repz
insb
mov
jg
cltd
add
fcomps
fsts
jge
sub
xchg
or
imul
inc
dec
outsl
jae
lods
ja
test
dec
cmc
jb
inc
arpl
cwtl
shlb
jno
pop
or
jo
xor
adc
gs
dec
loop
push
out
xchg
jl
add
popa
or
rolb
pusha
or
daa
rolb
ja
aam
fnsave
push
jle
or
mov
jg
inc
jo
sti
nop
cmp
aam
loope
loope
jg
cmp
pop
imul
mov
jp
movsb
in
xor
xchg
in
mov
cmpsl
xchg
xchg
push
out
dec
pop
sahf
lahf
fistps
insb
scas
push
sahf
movsl
xor
leave
addr16
mov
and
pop
adc
mov
inc
add
fidivrs
call
cmc
mov
dec
test
adc
lret
sbb
adc
mov
roll
push
xchg
cltd
jg
push
ja
push
mov
or
pop
jnp
fildl
jb
lea
jg
mov
adc
repnz
jl
lret
es
mov
mov
lcall
xor
add
shrb
fnstsw
push
das
hlt
fbstp
mov
push
push
int
aam
imul
lods
into
ret
sarb
add
fisubs
push
nop
rcl
mov
repz
aad
mov
iret
dec
sbbb
jae
divb
xor
cmpsl
mov
data16
mov
into
insb
dec
and
movzbl
and
jmp
pop
push
dec
mov
dec
test
mov
jae
inc
xchg
push
hlt
iret
js
lss
icebp
xor
xor
push
jns
out
out
jg
mov
stos
xor
or
and
sbb
shll
and
rcl
inc
jne
xor
xchg
mov
mov
mov
test
mov
fldl
dec
add
loope
addr16
mov
mov
sub
jo
jl
adc
sbbl
jmp
push
adc
cli
push
add
xchg
cmp
and
adc
hlt
test
mov
dec
add
cmp
int
outsl
js
jno
outsb
xchg
mov
je
scas
and
push
sbb
pop
fs
orb
sbb
out
lods
sahf
addr16
mov
cmc
xor
iret
dec
lds
sub
inc
add
les
pop
iret
inc
xchg
mov
fidivl
mov
mov
iret
sbb
jno
push
cmpsl
mov
jmp
ja
inc
movsb
add
mov
xchg
xchg
pop
pop
push
sbb
outsl
add
jp
adc
mov
out
clc
loope
bound
mov
push
js
mov
nop
enter
sub
das
mov
bound
rcl
lcall
or
mov
in
scas
push
and
mov
xchg
jns
ja
pushf
icebp
jl
xor
imul
pop
in
addb
jmp
and
push
inc
enter
mov
pop
and
dec
xchg
in
and
push
jle
pop
inc
pop
rolb
push
pop
cld
cmp
jae
jb
add
pusha
je
cmc
add
mov
push
test
push
adc
mov
fistl
pop
and
add
hlt
and
add
dec
ds
outsl
mov
pop
mull
mov
push
sub
dec
push
and
jle
fiaddl
mov
mov
inc
xchg
inc
cmp
imul
stos
mov
movsl
dec
shl
pop
xchg
roll
sub
mov
xor
jecxz
jg
mov
fisttps
jmp
add
add
mov
pushf
repz
fbstp
xchg
jne
dec
or
aaa
movsb
call
scas
add
cmp
or
mull
xchg
pop
stos
pmullw
mov
xor
pop
sub
in
sti
adcb
shll
and
xchg
mov
mov
out
imul
push
gs
ret
out
xchg
std
aad
dec
ljmp
jg
mov
mov
cld
cmp
lods
inc
jb
adc
xor
out
xchg
pop
int
cmp
out
sub
fstpt
xchg
dec
inc
mov
outsl
insl
idivl
cmp
or
xor
jmp
sbbb
add
jmp
xchg
or
addb
pop
mov
inc
andl
or
pop
mov
dec
test
adc
in
pop
mov
fwait
mov
inc
popf
jns
fucomi
fnsave
inc
aas
jge
cli
sub
cld
xlat
xor
xchg
data16
rorb
inc
sarb
dec
addr16
dec
push
dec
mov
lds
into
pop
or
sub
shl
push
add
mov
inc
cmp
test
nop
inc
insb
dec
daa
and
dec
pop
add
leave
sahf
cmc
faddl
sub
lock
xor
movsl
lds
in
push
aas
je
fstpl
fadds
dec
mov
or
cmp
push
mov
adc
inc
sub
jecxz
cmp
loopne
test
stc
fsubrs
jmp
mov
rcll
fcompl
jne
in
dec
pmullw
daa
out
int3
ficoms
dec
lds
data16
fimuls
add
dec
loopne
mov
jns
fildl
cmp
mov
adc
out
movsb
xor
sub
jae
loop
lret
aad
mov
and
out
daa
xor
in
jle
in
cmp
sbbb
enter
arpl
adcl
jle
shrl
fnstcw
mov
scas
push
jmp
rolb
insl
les
cmp
inc
inc
xchg
mov
cli
sti
jge
pop
xor
mov
add
or
lea
fisubrl
mov
xlat
into
xchg
lods
sbb
lods
inc
out
push
divl
mov
and
lret
es
pop
jp
pop
movsb
notl
jl
pop
mov
push
inc
into
adc
int3
pop
sub
adc
adc
or
mov
push
mov
pushf
enter
inc
mov
mov
cmp
mov
addr16
inc
call
jbe
xchg
fisubs
push
jae
add
cmc
imul
pminsw
scas
arpl
jb
inc
sub
mov
add
mov
leave
push
out
mov
ret
mov
ret
pop
push
and
nop
std
sub
mov
mov
push
pop
lcall
mov
jmp
test
mov
outsb
xchg
sahf
mov
shll
adc
stos
sbb
insb
xor
lret
fiadds
scas
es
push
dec
push
out
inc
push
add
test
lret
shll
mov
mov
movsl
mov
dec
movsb
mov
mov
pop
mov
mov
gs
pusha
rcrb
mov
ja
sbb
and
sbb
and
sarb
das
int
rcll
push
inc
sub
xor
in
cvtpi2ps
and
jo
mov
inc
std
push
setge
xor
js
xorb
cmp
or
das
stc
mov
mov
sarb
ret
lods
sub
test
push
aas
jnp
cmpsb
movsl
sub
out
cmpsb
sbb
push
repz
les
pusha
inc
xchg
add
sub
push
pushw
mov
incl
add
jno
mov
pop
push
outsl
je
add
lahf
push
call
pop
pop
add
cmp
movsb
mov
imul
stc
pop
nop
fs
or
roll
push
outsl
push
pop
insb
in
jnp
ret
add
clc
nop
jmp
mov
pop
das
imul
add
xchg
jl
push
in
add
lock
cmpl
iret
arpl
inc
lret
pop
fldl
pop
fistpl
in
lea
xchg
ret
push
pop
mov
sbb
inc
sarb
fistpll
sbb
sub
dec
push
jl
jbe
push
pop
int3
ja
hlt
fdivs
mov
negl
jns
and
pop
scas
mov
gs
jge
adcb
jbe
aam
into
and
sub
adc
mov
pop
mov
sub
or
and
loopne
mov
push
test
xlat
push
daa
imul
aam
scas
xchg
rolb
mov
jg
fidivs
push
jmp
ja
adc
cmp
cmp
mov
out
adc
mov
mov
shr
out
pop
aaa
dec
dec
faddl
popa
stos
xor
mov
xor
push
sub
mov
das
dec
cmp
cmpsl
sbb
add
fwait
aam
xor
add
dec
dec
cmc
insb
loopne
inc
repz
dec
addb
pop
lds
stc
test
mov
push
sarl
mov
dec
test
xor
add
jb
and
jo
ret
mov
sahf
bound
stos
cs
adc
enter
movsl
orb
in
mov
in
fimull
sub
test
and
jnp
mov
mov
xorl
enter
int3
cmp
dec
incb
fmuls
push
mov
lret
xchg
jne
inc
xchg
push
push
cmp
andb
xorb
xchg
dec
xchg
call
xchg
imul
or
inc
sti
ret
cmp
fistpl
scas
jne
mov
pop
cmpsb
dec
shr
and
test
ja
sbb
dec
cli
jnp
popa
xchg
or
or
repnz
pop
lret
push
fsts
xchg
sub
data16
jle
jmp
sbb
or
lahf
lods
adcl
cmovae
pusha
aas
jg
test
and
mov
test
in
add
movntps
or
mov
rol
test
sub
int
lcall
jmp
push
shlb
xor
pushf
lahf
sub
andl
bound
mov
fsts
cmpsl
rcrl
shlb
fcomip
in
out
xchg
xor
add
and
add
fdivrs
iret
popf
pop
mov
fcmovbe
popf
or
aaa
sbb
jmp
xchg
xor
in
aam
insb
dec
push
push
inc
mov
inc
cmp
mov
idivl
mov
aad
add
fcomps
or
hlt
in
pop
in
cltd
jle
lods
hlt
push
movsb
int
lahf
xchg
cmpsl
lea
ds
sbb
sub
mov
mov
test
shll
or
fistpl
divl
lahf
stos
fisubrl
mov
cmp
xor
xchg
popa
lret
pop
repz
mov
pop
fdivrs
decb
inc
out
incl
add
sahf
xchg
cwtl
bound
dec
enter
subb
adc
xor
cmp
loop
aad
push
cld
out
repz
adc
jbe
mov
push
jge
dec
jb
jb
in
push
mov
inc
leave
xchg
jmp
and
iret
ss
aam
adc
out
leave
sbb
scas
cmp
sub
stos
cmpsb
mov
inc
jns
mov
mov
popf
xchg
lcall
insb
rcr
lahf
aas
inc
push
in
in
and
and
ret
arpl
xor
jo
lods
mov
outsb
daa
xchg
sti
sbbl
jge
in
fwait
push
push
daa
pop
inc
push
lahf
and
les
lods
xchg
push
cmc
bound
pop
inc
and
insb
and
out
jns
fimuls
dec
sti
dec
xchg
inc
out
ret
push
add
shl
ja
movsb
iret
push
in
js
setg
jecxz
ret
push
test
pop
cmc
in
cmp
inc
dec
lret
in
xor
out
lods
push
inc
jmp
push
mov
int
shll
mov
cld
pop
xchg
mov
xor
pop
sti
sub
setbe
in
xchg
rcll
fistpll
sti
sahf
jecxz
hlt
xchg
je
imul
fistl
fsts
mov
add
fwait
pop
lods
jle,pt
dec
fcos
push
ja
mov
push
mov
jns
cltd
pop
repz
dec
pop
xor
mov
outsb
lock
aad
dec
inc
dec
movb
cmc
sbb
sarb
push
xchg
pop
sub
mov
push
dec
loop
mov
sub
cmovge
inc
jl
or
jge
mov
push
or
push
sub
xlat
cmp
imul
cli
inc
cltd
adc
hlt
dec
add
lret
inc
mov
outsb
sub
jno
lcall
inc
addr16
adc
out
push
test
cmp
adc
mov
adc
inc
je
sarb
pusha
xlat
out
movsl
xchg
js
mov
pop
mov
dec
inc
cwtl
jo
inc
xor
adc
xor
into
lods
in
cmp
lock
lods
pop
adc
sub
pop
jg
sbb
mov
mov
sub
xor
jne
push
pop
mov
adc
xchg
jmp
xchg
imul
movl
adc
jo
clc
push
mov
xlat
mov
mov
xchg
ja
cmc
cmpsl
mulb
sub
xchg
cmp
loop
sahf
scas
push
cli
sub
daa
jecxz
and
insb
ja
cld
push
adc
pop
sub
xchg
inc
and
pop
mov
jbe
lods
adc
pop
xor
pop
mov
or
xchg
push
dec
fdivr
jecxz
or
push
je
loopne
cld
dec
mov
call
outsl
inc
imul
push
test
jge
pop
mov
test
mov
jbe
test
sbb
insb
jns
xor
pop
cmp
lods
outsl
movsl
sbb
insb
inc
aam
movl
fs
rcrb
nop
jbe
sbb
lret
addr16
mov
cs
jecxz
insb
xchg
cmp
add
xchg
popa
in
cmc
repz
jno
or
dec
je
xchg
pop
ror
sub
xor
jo
popa
test
lret
lods
outsb
mov
dec
or
and
loope
nop
leave
leave
cmp
mulb
sbb
sub
cs
hlt
or
mov
int
ss
and
test
push
iret
mov
jae
inc
inc
dec
mov
sbb
test
lret
pusha
and
subb
mov
jb
mov
repnz
shlb
mov
mov
mov
stos
ret
sti
outsl
or
mov
jno
pushf
mov
shrb
lahf
cs
dec
addr16
jge
mov
out
stos
call
xchg
add
cwtl
ss
add
jae
std
jle
pop
and
and
and
inc
and
lock
es
out
lea
sti
decb
xor
sbb
test
and
mov
and
sti
mov
xlat
cmp
add
popa
xchg
push
jle
fwait
icebp
in
stos
jnp
add
lea
cmp
jg
mov
inc
cmpl
push
in
inc
out
cmp
or
push
arpl
adc
and
xchg
dec
sbb
xchg
into
sub
mov
setno
test
push
dec
cli
sub
mov
xchg
inc
aad
mov
xor
sbb
inc
cltd
push
cmovg
mov
xorb
int3
jbe
cmp
mov
addr16
dec
xchg
mov
in
rorb
iret
arpl
inc
out
icebp
sub
rcrb
pushw
mov
mov
sub
jnp
mov
lret
jno
lods
addr16
cmp
jge
jp
fcom
push
fistpll
shll
fdivr
sbb
sbb
dec
sub
stos
and
sub
push
pop
fbld
imul
aam
mov
xchg
shlb
hlt
cmpsl
arpl
xchg
cmpb
pop
in
aad
push
clc
pop
lea
mov
fcmovne
lcall
cmp
stos
pop
push
pop
mov
push
jo
inc
sbb
jae
jg
sbbb
mov
insb
pop
fstpl
jp
inc
pop
out
sub
aas
mov
dec
and
jecxz
jle
mov
sub
push
mov
xchg
lock
cmp
inc
push
sbb
jo
nop
cmp
cmp
and
loope
adc
faddl
cmp
mov
lods
sbb
push
inc
and
push
jno
dec
pop
sbb
xchg
je
insb
pop
push
mov
mov
pop
xchg
enter
xchg
xlat
or
out
sbb
push
ljmp
pop
ja
out
ljmp
dec
xchg
and
dec
or
mov
movsb
add
inc
push
in
mov
insl
mov
in
sbb
andl
xchg
lock
out
and
and
enter
and
and
xchg
inc
cltd
test
fwait
and
cmp
mov
adc
cltd
addr16
and
push
fcmove
xchg
dec
clc
cltd
dec
hlt
pop
push
mov
jg
cmp
push
out
nop
inc
lret
jmp
jmp
add
add
push
mov
mov
xchg
pop
lea
test
pop
xchg
in
movsb
repz
adc
test
or
stc
fistpl
aaa
mov
bswap
daa
jg
sub
adc
dec
aas
adc
out
jg
icebp
cmp
cmpsl
ds
es
sahf
and
pop
lock
mov
fistl
push
jbe
idivb
stos
sbb
clc
repnz
dec
mov
mov
pusha
sub
xor
das
xchg
mov
and
adc
pop
mov
and
and
push
out
mov
int3
inc
xchg
mov
inc
mul
loopne
les
repz
int3
ret
jbe
mov
jae
outsb
in
adc
cmp
fisttps
or
sahf
pop
sub
mov
lret
inc
pop
adc
mov
add
jecxz
jge
mov
or
jmp
sub
in
inc
lret
out
inc
cmpsb
lret
cltd
mov
das
arpl
mov
mov
inc
pop
in
mov
pop
or
dec
mov
jl
sbb
aaa
mov
mov
pop
outsb
cmp
adc
mov
aaa
lcall
jge
push
jo
lcall
dec
pop
jnp
data16
cmpsl
xchg
cli
cltd
jge
fucom
icebp
mov
mov
push
push
jnp
mov
loop
sub
jp
lret
out
adc
lahf
adc
cmc
mov
sbb
add
in
orb
mov
out
xor
icebp
sbb
rcll
xor
mov
aad
sbb
aad
aaa
or
jns
cld
cltd
cwtl
xchg
fistpll
pop
sahf
clc
cmp
pop
mov
rcl
mov
xlat
add
ljmp
push
enter
jae
sbb
sbb
jle
test
and
xlat
xchg
xchg
xor
jmp
arpl
jmp
fcompl
fisubl
mov
stos
rcrl
call
mov
inc
dec
call
pop
insb
lods
or
cmpsl
popf
fsubrs
mov
lods
dec
test
loop
stos
xor
mov
stos
sub
mov
loope
sahf
xchg
test
test
les
or
vcvtps2pd
add
jno
insl
inc
pop
sti
flds
cmpsb
ss
ret
lea
insl
cld
pop
aam
sub
xchg
scas
mov
mov
clc
jae
jnp
orl
scas
pusha
aaa
inc
jno
or
mov
mov
dec
push
pop
inc
adc
lea
pop
rcll
or
and
arpl
addr16
push
jg,pt
in
aaa
jnp
les
shll
in
cmp
stos
and
sbb
mov
add
fisttps
adc
cltd
pop
pop
popf
jnp
add
insb
aam
xor
xchg
inc
mov
lahf
loope
les
adc
mov
ret
xchg
xchg
add
xchg
xor
movsb
cmp
mov
dec
dec
adc
andb
mov
mov
xchg
and
add
push
mov
push
push
pop
dec
sub
jo
sub
jmp
aaa
cwtl
loope
adc
mov
movhps
adc
or
std
jmp
mov
clc
aad
loope
mov
mov
push
or
pusha
mov
pop
inc
add
int
mov
lds
pop
enter
data16
out
outsl
jp
sbb
stos
out
adc
outsb
lahf
push
ljmp
mov
pop
insb
cmp
cmp
inc
enter
arpl
aas
jb
hlt
mov
cmp
adc
cmp
jae
sbbl
int3
jle
xor
ret
push
xchg
int
popf
aas
add
or
out
lds
ss
mov
mov
insl
fcmovb
fisubl
je
fwait
mov
gs
daa
pop
mov
leave
mov
stc
jmp
mov
jbe
in
inc
nop
ror
out
sub
imul
push
jmp
movsb
sub
sub
pop
aaa
push
int3
ljmp
sbb
into
adc
arpl
rcl
hlt
adc
dec
das
mov
out
mov
jns
scas
fisubs
fldcw
cmp
push
fstl
jne
dec
fidivrs
int
jbe
sub
xor
subb
xor
cmp
inc
js
es
sbb
mov
je
mov
leave
mov
add
pop
shl
or
fcomps
call
je
test
mov
outsl
inc
leave
popf
sbb
mov
movsb
jmp
mov
test
xchg
repz
stc
mov
cmp
fneni(8087
mov
xor
je
mov
pop
push
sub
outsb
mov
je
cmp
add
xor
dec
adc
mov
add
xor
mov
cmp
dec
icebp
hlt
lock
mov
lahf
dec
add
js
subl
shlb
inc
or
xor
jb
clc
adc
mov
arpl
clc
gs
ljmp
mov
mov
sbb
stc
popl
jmp
cs
repz
jne
and
jmp
mov
push
sahf
mov
shrl
xor
push
fistpl
in
sarl
pop
aam
les
pop
test
cmp
xchg
aas
push
cmp
mov
mov
mov
pop
mov
sbb
loop
adc
or
inc
fwait
cmc
mov
stos
pusha
loop
jp
scas
in
xlat
in
push
psllq
xchg
fildl
mov
in
test
push
jbe
cs
jg
inc
inc
xor
sub
push
lods
jnp
push
push
loope
jecxz
and
clc
lods
jb
adc
xchg
sub
adc
adc
jnp
je
xchg
rorl
out
pop
jle
lea
jo
add
insb
pushf
sub
mov
out
push
mov
loop
mov
jo
sub
call
rolb
ljmp
addr16
push
out
ja
push
push
sub
xor
movsl
adc
nop
dec
addb
dec
and
insl
cwtl
mov
ror
xor
pop
push
pop
xchg
hlt
jl
add
gs
dec
push
scas
fsubrl
push
lock
out
and
and
je
add
mov
lea
cmp
enter
jl
dec
add
or
sahf
scas
fistl
dec
in
jbe
mov
inc
dec
loopne
jns
inc
xor
mov
inc
sbb
lahf
inc
mov
pop
ds
dec
mov
jmp
repz
mov
mov
cmp
push
test
mov
aad
mov
and
test
adc
fdivrs
testl
or
cmc
sbb
pop
lea
pop
lea
push
mov
pop
push
scas
jb
lcall
jnp
pushf
je
lods
and
loopne
or
stos
mov
cld
cmpsb
sbb
outsb
cwtl
jb
jg
jmp
test
pop
cmp
xchg
xor
xchg
mov
mov
shrb
inc
xor
push
into
aaa
pop
incl
sbb
jle
adcl
int3
pop
sahf
fstpt
test
mov
popf
mov
leave
lock
mov
and
sbb
ret
sub
adc
or
movsl
out
jmp
or
cmp
push
mov
je
or
xchg
cmpsl
in
in
ret
mov
movsl
xchg
ja
shl
aad
sub
addb
cmc
int
jecxz
lret
jo
adc
les
mov
lock
repz
cmp
pop
push
jbe
sbb
scas
addr16
sbb
repnz
fucomp
insb
mov
jecxz
sbb
add
gs
adc
mov
iret
nop
adc
push
xchg
push
inc
test
sub
test
pop
test
inc
ss
add
mov
adc
mov
fiadds
pop
add
cmpsl
mul
out
insb
and
fildl
jne
iret
pusha
sbb
lods
mov
dec
jb
xorl
xchg
push
clc
mov
scas
jno
mov
insl
inc
and
xor
pop
das
cmp
and
clc
arpl
add
xchg
ja
dec
call
or
mov
sub
cmc
sub
jp
std
negl
fisubrs
cmp
cmpxchg
adc
push
adc
pop
in
call
xchg
mulb
fistl
shll
and
in
push
roll
movsl
pop
cld
and
xorl
imul
xchg
das
add
das
xor
arpl
add
repnz
cmp
jp
mov
xor
jmp
mov
inc
xchg
or
popa
stos
inc
icebp
dec
xchg
in
adc
jge
add
inc
sbb
jno
add
cmpb
mov
gs
pop
in
xchg
andb
mov
mov
shlb
adc
fimull
lds
add
lahf
jmp
arpl
cld
dec
pop
jl
jns
adc
popa
popf
icebp
sub
fadd
jno
xor
push
sbb
push
add
and
xor
sbb
divl
scas
sbb
iret
mov
and
cli
adc
cwtl
mov
inc
test
outsl
lahf
fdivrl
adc
add
jle
jmp
notl
jns
mov
sub
jle
dec
mov
jg
add
negl
ret
dec
test
test
xor
push
mov
fadds
movsb
xchg
cmp
mov
inc
in
insb
push
loop
add
mov
mov
push
add
sbb
inc
scas
mov
jae
xorb
and
xchg
lock
inc
insb
mov
sbb
xchg
stos
pop
lcall
rcr
fmul
icebp
xchg
pop
fistl
or
jecxz
mov
mov
xchg
iret
nop
leave
add
notl
sub
addr16
jle
add
add
leave
mov
mov
out
fldl
fwait
aaa
inc
repz
dec
fcmovnu
lods
lods
repz
vucomisd
lods
mov
ret
in
add
sub
adc
cld
lods
add
jnp
outsl
inc
cmc
ljmp
inc
or
test
lahf
ret
je
dec
insb
rol
inc
scas
mov
inc
sti
cmp
push
mov
xor
add
push
enter
mov
pop
push
push
lret
push
push
xor
add
test
mov
cmp
cs
hlt
push
repz
in
jle
imul
shll
xor
sarl
lea
jns
fwait
inc
rcr
lock
or
push
xchg
ljmp
push
add
pop
push
sub
xorb
loope
subb
and
das
scas
sub
mull
pop
sarb
mov
cmp
mov
cmp
popa
sbb
mov
imul
cmp
aam
xor
addl
cmpsl
dec
scas
lods
in
mov
pop
dec
inc
loope
pop
xchg
mov
jns
shr
inc
insb
cmpsl
xchg
mov
push
xchg
pop
ss
sbbl
mov
mov
clc
mov
lds
aaa
mov
push
negl
push
faddl
adc
add
add
adcb
repnz
imul
addr16
not
mov
push
das
lret
mov
insl
adc
xchg
icebp
jecxz
shll
mov
mov
pop
inc
mov
pop
or
shl
push
sbb
push
mov
sbb
lcall
std
sub
or
insb
fldenv
shrb
ret
inc
pop
jg
push
push
pop
xchg
mov
lock
mov
mov
wbinvd
mov
push
mov
and
push
int
adcb
mov
in
mov
out
dec
jle
cmc
jg
cmpsl
or
push
mov
xor
fimull
mov
xchg
outsb
out
movsl
out
call
data16
je
adc
jl
jne
repz
xor
fmull
push
pop
adc
mov
enter
lret
cli
icebp
push
mull
repz
mov
inc
aam
data16
sbb
punpcklwd
jno
gs
add
mov
in
loopne
or
shll
imul
outsl
push
repz
stos
sub
scas
inc
lcall
inc
or
and
cld
push
jne
fdiv
enter
popf
in
dec
mov
add
dec
sub
mov
or
and
je
jl
sub
sbb
lds
cmp
sahf
sub
movsb
in
imulb
mov
push
push
sbb
cmp
dec
mov
dec
loope
loop
push
pusha
movsl
test
inc
ficomps
rorl
jecxz
mov
ret
aam
push
stos
pop
jne
imull
cmc
xchg
pop
xor
mov
mov
out
sarb
push
imul
mov
mov
imul
in
dec
stc
sub
sbb
push
movsl
lds
and
stc
outsb
mov
sbb
rcr
sarl
adcb
cwtl
leave
push
int3
mov
cmpsb
sbb
in
ss
push
mov
stos
in
adc
xchg
js
xor
daa
push
ffree
sub
stc
mov
pop
aas
mov
dec
and
leave
movsb
aam
lahf
insl
add
jge
pusha
lcall
mov
jp
int
int3
sbbw
cs
xchg
scas
jge
outsb
adc
jne
or
insb
fadd
std
aas
shufps
dec
fisttpl
aaa
mov
repnz
mov
sub
and
mov
mov
inc
mov
test
xor
xchg
daa
int3
shl
adc
mov
adc
cmp
dec
mov
pop
or
lds
sbb
das
and
not
test
ret
jnp
mov
shll
fstl
cs
mov
push
jmp
rclb
pop
fs
bound
jo
rol
stc
or
cwtl
mov
pop
lods
push
int
inc
pop
stos
shrd
mov
inc
jl
imul
cmpsb
ficompl
pop
les
mov
mov
push
dec
add
out
jnp
dec
in
push
mov
inc
add
inc
adc
les
pop
dec
sub
call
loope
ljmp
xchg
lret
lods
ljmp
fstpt
imul
inc
cmc
jmp
mov
ret
mov
fmulp
rclb
lret
xchg
icebp
mov
das
enter
fcomps
dec
pushf
sbb
addl
mov
test
jecxz
inc
std
sub
adc
or
sahf
inc
mov
mov
mov
inc
xchg
add
int3
cld
int
rcrl
insl
aas
adc
mov
nop
aas
push
ljmp
subb
popa
gs
push
test
es
gs
mov
push
mulb
pop
jb,pn
mov
enter
sbbb
push
int
sbb
ds
add
dec
lods
push
in
leave
pusha
or
cltd
dec
pop
pop
cld
push
cltd
or
pop
and
cmp
inc
dec
or
jae
dec
aad
lods
xor
sbb
xchg
cltd
loop
and
adc
roll
out
jnp
out
xchg
cmp
sahf
call
push
sub
xchg
pop
mov
cmp
stos
bound
add
arpl
mov
jl
fisubrs
shll
dec
call
fwait
dec
jg
cld
out
mov
push
pop
scas
pmulhuw
or
xor
hlt
and
rcr
std
and
sub
adc
into
repnz
out
or
push
leave
mov
nop
leave
adc
mov
pushf
mov
les
xchg
js
pusha
in
imul
push
mov
jmp
or
in
cmc
xchg
push
arpl
in
mov
pushf
or
es
ja
scas
add
xor
push
int3
pop
lods
and
dec
xor
shll
fwait
push
push
int
and
ret
loop
out
sub
ds
add
lods
xchg
mov
imul
add
xchg
stos
push
test
xor
xchg
fists
mov
gs
push
sub
jo
js
sbb
sbb
mov
lret
pop
jl
cmp
mov
jecxz
in
aam
jecxz
mov
xor
lret
test
test
sbb
add
fwait
mov
out
sub
mov
add
cmp
sbb
jb
mov
adc
dec
xchg
sti
jno
adc
mov
push
outsl
lret
jmp
pop
rclb
adc
mov
add
or
jg
or
test
dec
push
xor
adcl
fbld
xchg
add
loopne
mov
in
fstl
out
stos
jmp
fwait
or
pop
or
test
pop
jae
inc
lcall
ret
jmp
mov
push
push
push
adc
inc
mov
inc
mov
inc
lret
and
cmpsl
push
cmpsb
test
movsl
xor
pop
mov
in
push
add
cmp
movsb
dec
divl
fbld
cmpsl
add
cmp
or
sahf
push
jb
mov
dec
pusha
mov
xchg
cmc
mov
and
inc
dec
add
stc
mov
iret
xchg
imul
sarl
mov
mov
movb
stc
test
cmp
lahf
dec
mov
pop
pop
test
sub
xchg
push
add
std
pusha
cmp
popf
inc
mov
add
fldcw
leave
rolb
mulb
fisttpll
cmp
test
xor
mov
in
ss
ret
mov
out
xor
pusha
test
or
aad
mov
shl
jp
cmp
decl
push
fistpl
test
mov
and
aam
ja
data16
xchg
cmp
push
ljmp
lret
xchg
dec
dec
adc
and
jmp
cmp
sbb
das
xchg
and
enter
insb
mov
imul
xlat
movsb
push
add
jbe
or
push
shrb
sbb
mov
dec
bound
inc
fs
cmpsl
or
shrl
loop
pusha
in
stos
and
or
xchg
loope
adc
inc
push
push
vmwrite
into
iret
jb
or
icebp
cmp
loope
addr16
cmp
fildll
shlb
add
mov
mov
movsl
or
inc
jbe
aas
push
mov
test
mov
add
push
ret
dec
pop
inc
pop
cmp
xlat
je
lock
mov
sbb
xor
jae
mov
mov
sbb
or
add
addl
cmp
in
mov
outsb
outsl
dec
bound
add
mov
sahf
popf
xor
adc
jle
or
sub
push
lcall
repnz
lock
xchg
dec
mov
jg
mov
in
out
mov
stos
in
les
jle
nop
mov
aad
iret
sub
push
mov
cmpsb
outsl
xchg
out
pop
jle
push
test
lret
pop
mov
pop
mulb
mov
jl
shll
testl
mov
repnz
dec
and
lods
test
adc
and
xchg
cld
std
mov
das
sbb
lock
dec
jb
mov
mov
push
xchg
mov
mov
mov
cmc
lea
dec
xchg
fmul
sub
adc
data16
out
hlt
faddl
lcall
cs
and
inc
cmp
in
adc
rcll
addr16
adc
add
into
outsl
inc
xor
scas
or
fcom
xor
mov
push
test
pusha
bswap
xchg
fnstenv
sub
mov
cmp
jno
or
jno
dec
loop
imull
pop
dec
cs
repnz
repz
cld
cltd
mov
in
test
pop
leave
es
aaa
pop
sub
adc
cmp
inc
push
pop
fcmovb
push
loopne
int3
jp
out
outsb
mov
inc
das
popa
aam
in
jns
xchg
movl
outsl
repnz
movsb
pop
inc
mov
mov
cmp
mov
repz
in
adc
vpsubw
or
in
and
lcall
xorb
jns
mov
aaa
sbb
dec
add
rorl
mov
jle
cwtl
xchg
mov
jmp
or
into
or
mov
add
les
insl
push
cwtl
lods
repnz
xor
jb
and
cmp
fsubs
pop
cmc
jmp
mov
adc
mov
sbb
xor
cmp
or
repnz
int3
inc
mov
testl
cld
rcll
push
insb
lods
jb
xchg
sti
iret
sub
and
jge
movsb
icebp
lret
lret
jae
mov
add
jg
add
clc
mov
adcb
mov
ss
in
mov
in
rolb
hlt
mov
xchg
mov
mov
inc
sbb
fsubrs
icebp
imul
fcompl
cmc
push
xchg
push
jbe
cli
jle
repz
call
dec
movsb
movnti
push
insb
pop
insb
es
cwtl
sbb
sub
int
jne
pushf
mov
adcb
xchg
adc
pop
ficoml
mov
pop
aaa
mov
dec
or
lods
cld
push
iret
lea
push
test
out
inc
mov
stc
sbb
add
xor
adc
xlat
sbb
push
mov
xor
jmp
scas
fildl
lds
xchg
push
rcl
pop
mov
push
aas
lods
sbb
fcoml
mov
ljmp
aam
pop
add
push
les
xor
lea
lahf
cmp
jno
mov
mov
dec
in
jmp
iret
sbb
pusha
test
pop
dec
xchg
dec
adc
lahf
call
sub
jle
aam
in
cld
sahf
adc
and
add
movsl
add
lods
lret
inc
imul
inc
jl
out
mov
pop
in
adc
nop
repnz
nop
sub
jae
out
fadd
test
into
movsb
jg
aaa
js
lahf
mov
mov
inc
push
inc
mov
cmp
mov
inc
cmc
imul
in
mov
and
subl
sbb
sub
mov
orb
xlat
aas
loopne
mov
aam
jns
push
push
inc
cmp
adc
jle
outsl
ror
mov
popf
add
js
data16
daa
pop
push
or
mul
jns
adcl
cmpsb
mov
sub
push
in
dec
dec
fiaddl
push
ljmp
adc
popf
pop
in
iret
imul
sub
movsb
pop
inc
test
and
sub
in
test
push
rol
popf
cmp
cmpsl
mov
mov
push
adc
adcb
daa
mov
lcall
faddp
push
dec
push
inc
mov
mov
lds
pushf
jbe
mov
pop
cmovge
cmpsb
sbb
jae
ljmp
dec
pop
rorl
pop
xchg
dec
js
mov
orb
sub
sub
fadds
xchg
addr16
ret
push
int3
sahf
add
imul
nop
int3
push
into
push
cli
call
imul
lret
adc
notl
pop
int3
out
nop
sahf
pop
out
popa
sub
jb
std
insl
lahf
into
xchg
adc
aad
call
ret
mov
and
enter
or
dec
mov
daa
fs
pop
mov
in
inc
mov
adc
sbb
mov
sbb
mov
out
dec
mov
push
adc
stc
pop
incl
sub
popa
fadds
and
mov
push
test
test
mov
fs
push
and
pop
pushf
or
out
sub
and
mov
sahf
push
jae
sbb
fucomip
jo
icebp
mov
jmp
mov
repz
dec
mov
sahf
adc
pop
jno
cli
mov
mov
jecxz
insl
inc
jle
lea
aam
int3
int3
mov
pop
cmp
push
xor
inc
mov
fnstenv
outsb
mov
ret
iret
repz
inc
stc
lahf
or
dec
ja
cmp
and
test
jmp
dec
sbb
sbb
cs
xor
xor
into
addr16
rol
dec
cmp
repz
xchg
movsl
sar
fs
sub
loopne
icebp
cmc
xchg
jmp
fdiv
adc
pushf
jno
xchg
pop
cmp
cmp
xchg
stc
call
or
mov
ds
stos
pop
mov
rorl
and
push
or
cmp
or
cld
orb
pop
nop
jle
sbbb
cmp
pop
inc
mov
dec
cmp
mov
jbe
jbe
leave
mov
jnp
push
mov
mov
sub
pop
mov
cmpsl
push
mov
lret
cli
xor
or
or
sub
sub
out
cmpsb
inc
fwait
inc
rorb
cmpsb
cwtl
test
aas
mov
outsl
sbb
ja
push
mov
lcall
cmpsb
repnz
rcrl
addr16
fbstp
cmc
filds
mov
mov
mov
stos
out
jne
in
orb
sbb
jns
push
stos
bound
imul
fldl
hlt
sarl
jge
mov
jne
addr16
shrl
dec
shll
in
lock
push
jnp
popf
das
push
and
adc
cmp
adc
stos
dec
push
mov
mov
iret
add
loopne
mov
inc
jns
xchg
add
cmpsl
dec
inc
test
dec
sub
pusha
fadds
inc
jge
cmp
fldcw
jmp
pop
pushf
pop
js
movsl
ds
popa
push
fcomip
xor
mov
out
inc
icebp
mov
xlat
mov
mov
xchg
in
sub
pop
jne
mov
stos
shlb
pop
xchg
and
jns
stos
cltd
ljmp
add
cmp
flds
push
and
cmpsb
out
mov
ds
or
push
popf
mov
outsb
sub
and
arpl
sub
xchg
ljmp
push
addr16
leave
aaa
test
aas
pop
ja
mov
data16
mov
insl
fstpl
pop
mov
add
in
test
in
insl
lods
aaa
add
push
dec
jns
clc
or
xchg
fsubr
rcrl
in
or
jecxz
inc
ret
inc
clc
xchg
add
cmp
sbb
inc
jmp
xlat
mov
xchg
in
dec
stos
test
adc
xor
adc
hlt
add
or
sar
js
xor
mov
data16
repnz
and
pop
or
fldl
dec
inc
inc
aad
and
repnz
lock
cmp
repz
sub
in
mov
jo
cmp
sub
mov
jb
movb
jns
add
xchg
sbb
std
mov
jge
jo
jle
cmp
ja
fnsetpm(287
stos
fdiv
int
in
pop
stos
ds
dec
loope
add
dec
jo
xchg
dec
in
push
push
push
popf
push
cmp
mov
gs
lock
adc
or
int3
mov
jecxz
fdivl
cmc
push
adc
cmpsl
sysret
in
popa
xor
imul
fwait
add
pop
rclb
add
movsl
adc
orb
out
jo
pop
pusha
xor
int
scas
lret
outsl
mov
inc
dec
xchg
dec
jo
and
js
sub
cmp
ja
clc
push
inc
sub
xchg
pop
mov
out
imul
popa
leave
push
inc
outsb
xor
cmp
ljmp
xor
dec
fstl
repz
pusha
cld
jns
iret
out
test
clc
push
add
dec
jae
mov
jne
add
mov
push
jbe
ja
jns
int3
mov
mov
lea
xlat
clc
mov
rcrb
add
and
pop
leave
jns
dec
mov
outsl
pop
in
adc
xchg
sub
and
clc
push
dec
and
inc
sbb
or
xor
dec
mov
or
loopne
cmpsl
push
jge
lods
ss
adc
das
sahf
stc
or
in
movsl
pop
sbb
xchg
mov
jp
test
cmp
cli
out
cmp
jle
mov
or
faddl
cmp
icebp
ds
adc
or
sbb
xor
xchg
dec
test
insb
stc
inc
ud0
fcompl
pop
std
movsl
orl
ud2
lret
or
cmp
jnp
dec
cmpb
int3
imull
fdivp
int
mov
jge
ss
test
dec
leave
addl
mov
xor
movsb
xchg
pop
std
ja
lds
shr
or
mov
pop
and
outsl
jae
icebp
scas
and
pop
mov
xor
lods
adc
out
ficoms
addb
add
pop
loopne
fwait
adc
popa
and
or
call
scas
pop
int
mov
mov
xor
adc
pop
xchg
push
add
or
sub
loop
cmpl
pop
orl
movsb
les
lret
stc
sub
adc
ret
or
sub
data16
lds
test
shlb
add
sub
pop
mov
add
mov
dec
call
cmp
mov
sub
mov
sbb
inc
mov
lret
jnp
jne
mov
mov
xor
cmp
cwtl
cmp
xchg
inc
ljmp
sub
lea
push
cmp
add
xchg
sbb
xchg
inc
fnstsw
cmpsl
frstor
test
repnz
hlt
xor
hlt
mov
push
nop
pop
out
pushf
mov
cld
pop
push
mov
jb
addr16
mov
stc
sbb
mov
outsb
clc
sub
mov
inc
cmp
push
xchg
cmpsb
scas
push
inc
push
loope
fdivs
outsl
sti
addl
adc
test
dec
jb
push
nop
dec
into
lret
fbstp
int3
xchg
dec
push
fists
repz
push
leave
mov
jb
mov
pushl
push
pop
incb
cltd
mov
add
mov
or
lret
dec
outsb
shlb
rorl
outsl
pushf
lahf
mov
adc
pop
rcrl
push
mov
jne
or
sbb
shrl
ret
cmpsb
pop
imul
lret
iret
push
incb
mov
sub
xchg
loope
inc
xchg
mov
mov
sbb
imul
inc
sarl
jg
pop
loopne
stos
enter
push
sbbb
xchg
xchg
jae
push
jns
je
xor
outsb
call
and
fisttpl
xchg
or
push
push
lock
mov
loopne
pusha
daa
pop
xor
outsb
jae
mov
mov
add
mov
jo
addr16
stc
adc
jo
arpl
or
sub
lret
int3
adc
jae
jbe
addb
xchg
lcall
insl
mov
mov
fwait
sub
mov
mov
or
pop
enter
xchg
nop
sub
pop
and
adc
push
adcb
adc
rcll
clc
xor
inc
mov
aam
mov
mov
rorb
pop
push
les
inc
cmp
pop
mov
loope
push
in
hlt
mov
or
fucomi
add
adc
push
sub
xchg
sub
lcall
or
sub
jp
daa
mov
hlt
add
dec
inc
adc
xor
sbb
aad
mov
mov
xchg
out
dec
stos
pop
test
xor
xor
mov
mov
add
loope
shlb
cmp
cmp
mul
stc
cmp
jg
add
mov
movsl
dec
pusha
neg
es
jg
mov
dec
sub
push
jno
pushf
jbe
sub
mov
cmp
dec
adc
scas
dec
inc
push
sbb
dec
sahf
mov
sbb
or
adc
inc
shl
ret
xor
hlt
les
cmc
sbb
or
cmc
mov
cwtl
push
sahf
imul
cld
out
pop
xchg
xchg
imul
test
dec
mov
and
int
xor
push
jae
push
ljmp
pop
leave
fwait
push
test
mov
inc
push
dec
outsl
inc
movsl
cmp
or
adc
push
cmp
lods
xor
pop
lcall
iret
faddl
mov
out
adc
mov
ss
leave
xchg
xchg
mov
cmp
jnp
repz
cmpsb
dec
xchg
sti
add
vmovmskps
xchg
sbb
lea
xchg
mov
sub
nop
mov
leave
sub
lods
jbe
mov
jne
sahf
mov
xorb
jle
jmp
rcr
in
subl
pop
mov
push
mov
mov
orb
cmp
jns
and
test
mov
mov
cltd
push
std
mov
negb
sti
fmuls
out
inc
adc
iret
orl
adc
add
std
imul
lcall
in
cli
shrb
lock
pop
enter
orb
mov
andb
and
xchg
inc
or
aaa
movsb
mov
xchg
push
mov
loopne
dec
mulb
fcoms
int3
mov
movsb
cli
stc
and
dec
and
movsl
pop
sub
cli
lahf
lock
in
mov
out
rolb
xchg
xlat
lahf
push
bound
pop
lahf
pushf
sbb
pop
cmp
ficomps
mov
repz
xchg
add
rol
pop
dec
pop
subl
inc
xchg
pop
in
lds
dec
in
imul
or
dec
xor
lea
push
mov
inc
shrb
lret
in
gs
call
sub
xchg
cmp
xor
jo
mov
mov
sbb
xchg
lods
add
push
pop
push
orb
xchg
mov
add
pop
movsl
xchg
adc
mov
jmp
push
cld
adc
cli
lcall
bound
sbb
out
push
sub
sti
push
cld
xchg
mov
jno
jl
loope
adc
sub
ds
adc
mov
repnz
rol
xchg
push
add
mov
cmpsb
sbb
fs
loop
rcr
mov
insb
fxtract
and
fdivp
pushaw
xchg
orl
xchg
sub
jecxz
gs
mull
push
js
loope
addr16
daa
test
shrb
xchg
push
in
mov
xchg
cli
or
insb
adcl
cmp
dec
ret
decl
pop
pusha
or
xchg
flds
divb
sbb
cmp
mov
test
das
stos
mov
ret
out
inc
or
inc
into
pushf
xor
out
mov
and
push
inc
xchg
lds
xchg
insl
mov
fdivrl
mov
push
sbbl
imul
lds
scas
xchg
pop
stos
out
or
push
data16
shlb
sbb
and
adc
dec
jo
sahf
xchg
mov
dec
fidivs
jmp
rorl
daa
dec
stos
or
sub
ss
aaa
and
jg
xor
and
sub
and
mov
fdivr
jge
aam
xchg
pop
or
mov
es
nop
pushl
cli
xchg
ret
imul
mov
xchg
cmp
mov
adc
push
or
sub
outsl
jbe
out
cltd
mov
sahf
aad
add
add
pop
repnz
outsb
enter
outsl
jo
daa
repz
cmc
or
or
sahf
sbb
dec
cmp
add
in
jle
movsb
lret
sti
test
mov
xor
das
xchg
popf
sub
in
cmp
test
rol
loop
insb
push
out
lret
daa
jg
aam
xor
out
pop
enter
sub
inc
pop
xor
push
jl
je
xchg
adc
stos
xchg
jge
lock
cmp
popa
popf
add
stos
inc
push
clc
mov
lds
sbb
lods
and
test
insb
pop
imul
aaa
push
sbb
inc
mov
stos
and
jb
or
out
ja
shlb
push
xchg
rclb
daa
sbb
push
pop
adc
gs
sub
loope
lret
shrl
mov
jno
mov
insl
addr16
in
mov
mov
loope
fldl
addb
mov
bound
jno
sub
stos
filds
aaa
je
cli
jne
loop
jb
int3
add
loopne
jmp
and
cmp
sar
iret
cmp
or
es
mov
inc
xchg
xchg
inc
not
sti
jbe
inc
mov
mov
mov
xor
icebp
movsl
xchg
dec
xor
cmp
push
inc
addb
lret
jns
push
sub
in
and
cmp
sbb
lock
push
mov
sbb
popf
fstl
add
sub
nop
in
xor
push
gs
cmpsb
cltd
sahf
ffreep
mov
sbb
stos
sub
jbe
sub
or
imul
jg
jns
jg
jle
jmp
inc
hlt
out
push
xchg
adc
jle
add
adc
cmpsl
sahf
nop
jnp
push
lret
ret
dec
xchg
push
inc
repnz
loop
lret
es
or
cmpsb
aas
jmp
test
stc
fildll
mov
pop
mov
cmc
movsb
lds
add
inc
mov
adcb
arpl
adc
push
popf
pop
cltd
les
pop
into
mov
push
jo
mov
jnp
jle
xchg
pop
les
lcall
imul
test
push
int3
out
adc
mov
testl
call
mov
mov
add
rorb
pop
or
jmp
xchg
out
in
movsb
xchg
pop
or
cmp
dec
pop
addr16
imul
ret
dec
mov
jnp
clc
xchg
ror
xlat
add
addr16
xchg
xchg
push
push
gs
push
xor
jge
mov
movsb
lret
das
push
mov
inc
sub
in
jnp
sti
insl
pop
daa
inc
rcll
adc
nop
in
mov
fcoms
cld
in
loop
mov
mov
subl
in
mov
sarl
les
push
pop
shrl
sarb
sbb
sub
lahf
insl
mov
jp
sbb
in
pop
xorl
stos
repz
lahf
or
xlat
cld
add
repnz
call
mov
out
mul
pushf
sarl
and
mov
and
in
fwait
jge
sbb
sub
and
enter
pop
mov
repz
cmpsl
cltd
push
mov
sahf
cmp
xchg
push
or
push
fmuls
cmp
lea
or
dec
add
lods
in
dec
inc
cmp
repz
cmp
or
inc
inc
mov
movsl
adc
push
test
in
mov
testb
pop
push
repnz
int3
push
mov
out
mov
nop
nop
jp
test
mov
aam
ss
mov
jbe
stc
test
test
out
arpl
shlb
das
mov
pop
sbb
inc
mov
jno
pop
shll
lret
movsb
fsubl
mov
xchg
mov
sub
jl
mov
in
stos
addr16
jnp
cli
inc
scas
iret
dec
out
rcl
dec
dec
pop
pop
mov
sub
test
mov
fwait
shrl
or
mov
loop
adc
hlt
push
mov
int3
sub
or
inc
cmpsb
pop
lods
push
pusha
dec
pop
out
and
inc
stc
in
xchg
xor
lret
dec
xor
or
aas
out
inc
incl
jns
stos
add
push
ss
mov
xor
cs
sub
imul
dec
xor
pop
xchg
pop
in
dec
aad
insl
xor
mov
or
xchg
les
mov
sub
mov
dec
clc
inc
or
sahf
imul
shl
aam
pushf
lds
enter
hlt
cmp
mov
pop
ret
inc
jl
push
push
loopne
xchg
jno
cmpb
clc
mov
stos
in
mov
inc
pop
js,pt
push
loop
and
outsb
fiaddl
adc
sti
lret
dec
pop
dec
mov
xorb
mov
or
push
enter
push
pop
fsubl
mov
ja
mov
loope
roll
mov
cmp
lock
cli
int3
bound
or
sub
ja
inc
and
mov
dec
add
dec
cmp
dec
push
xor
xchg
sti
sub
arpl
mov
in
sti
push
andl
push
iret
jle
or
lahf
inc
aaa
ss
out
dec
ja
inc
jno
dec
std
push
ljmp
lret
mov
es
out
lahf
movsb
fldt
adc
test
jp
lods
cmp
xorb
jge
push
in
add
jg
and
out
cmp
popa
jp
imul
out
sbb
mov
hlt
dec
lock
jmp
jne
movsb
lea
sbb
pop
xchg
jo
popf
loopne
scas
or
sbb
fs
jo
dec
ror
pushf
orb
mov
xor
cld
lods
pop
or
sbb
and
sub
and
pop
ljmp
lcall
pop
je
adc
negb
jnp
push
fbld
mov
enter
out
mov
push
ret
lret
push
pusha
xchg
push
push
nop
daa
or
inc
outsb
insl
fwait
inc
and
icebp
pop
sbb
xchg
hlt
dec
testl
outsl
rolb
stos
fsubrs
movaps
push
pop
add
adc
lock
mov
stos
mov
pop
in
or
stc
into
arpl
lods
push
pop
jmp
fisubrs
cwtl
and
lds
xor
hlt
and
ja
jp
sti
sahf
inc
in
dec
mov
sub
decl
mov
or
or
addr16
mov
cwtl
test
push
mov
cmpsb
and
scas
jecxz
xor
pop
and
mov
iret
stc
ds
sub
ret
cmc
inc
jl
pushf
ja
push
or
xchg
or
mov
or
scas
fcmove
push
cmp
add
pusha
loopne
cli
fnstcw
jl
fildl
test
inc
fmulp
rclb
inc
test
icebp
mov
adc
pop
sbbb
and
push
call
pop
orb
cltd
sbb
nop
push
lods
sarb
or
pop
or
les
es
aam
cmpsb
jl
and
outsb
stos
scas
ss
pop
jae
scas
in
sbb
mov
outsb
xchg
or
cmp
inc
mov
pop
mov
iret
dec
cmp
mov
and
pop
push
push
arpl
xchg
mov
xchg
or
push
inc
call
fcmovne
jnp
jns
rolb
movsl
cld
push
mov
je
sub
xchg
xchg
mov
popf
test
out
call
sub
xchg
jecxz
jmp
jge
filds
cmc
cmp
test
add
dec
dec
outsb
add
aad
xor
cltd
imul
add
sbb
pop
and
out
and
sub
mov
add
mov
push
adc
dec
ficoml
daa
filds
daa
test
cmp
mov
xchg
sub
xor
faddl
js
mov
inc
into
sub
jb
mov
iret
push
pop
in
mov
xor
dec
in
popf
inc
fwait
daa
lea
ss
inc
clc
adc
subb
int3
int3
inc
stc
sub
in
push
add
xor
rcrb
fists
cmc
mov
dec
mov
xor
shll
loopne
lret
test
pop
sbb
and
jecxz
lds
clc
outsb
les
lret
inc
xor
mov
or
mov
xchg
outsb
jns
inc
adcl
popa
mov
fwait
mov
add
jl
ret
sub
jo
mov
ss
popa
mov
fisttpl
mov
cmc
mov
or
cmc
or
xchg
sub
mov
jle
mov
mov
add
push
xor
cwtl
sbb
sahf
xor
push
test
scas
xor
sub
add
loop
push
shlb
cli
pushf
pop
jae
sbb
mov
push
adc
stos
mov
and
pop
jmp
jb
sti
bound
add
push
mov
pop
pop
mov
lret
in
push
lods
inc
mov
mov
lds
push
std
ret
pop
fisttps
jle
out
push
and
push
mov
lea
shlb
xor
dec
ljmp
xchg
jb
out
out
push
sub
add
cld
cmc
out
rclb
sahf
aaa
fnsave
mov
adc
push
or
and
cmpl
cs
subl
dec
iret
push
xchg
pop
ficoml
pop
dec
jnp
pop
ljmp
jb
cmp
cmpsb
hlt
test
sahf
sbb
in
push
cmc
fs
mov
mov
bound
pop
mov
pop
mov
lahf
pop
daa
les
call
dec
imulb
pop
mov
mov
lea
and
rclb
push
clc
xchg
inc
test
movsb
cld
mov
pop
cmp
and
mov
add
stc
icebp
popf
jne
pop
loope
jno
or
bound
in
addr16
mov
xchg
xchg
mov
loopne
es
dec
push
sti
mov
add
dec
fnsave
xor
adc
fwait
xchg
ret
sub
xorb
jns
mov
xchg
fisubrs
int3
mov
imul
mov
or
jo
insb
add
test
out
xchg
jl
mov
or
pop
dec
xchg
add
add
dec
xor
clc
jl
jnp
test
adc
jmp
imul
jo
repz
stos
jae
bound
mov
outsb
test
add
fdivl
xchg
push
inc
pusha
pop
sub
push
xchg
fs
mov
in
jne
insl
test
push
faddl
out
add
jg
sbb
cmp
and
aas
cltd
add
insb
pop
outsb
cli
jnp
mov
lahf
aaa
xor
mov
ss
call
shr
sub
fcmovbe
insb
inc
dec
lea
add
inc
cmp
popf
inc
mov
add
sub
xchg
loope
mov
arpl
loope
add
aam
subl
cmp
enter
inc
aaa
sti
mov
out
je
adc
pop
lods
dec
mull
jno
lcall
mov
test
lods
dec
add
pop
mov
clc
pop
jb
mov
stos
cmp
cmpsl
fs
in
shll
out
lds
lahf
push
fcompl
lock
sbb
pop
mov
cmpsb
nop
ret
mov
aaa
cmp
mov
loopne
call
iret
xchg
jecxz
adc
cmpsb
add
inc
and
mov
ret
sbb
sub
xchg
lods
fadds
cmp
aas
int
aaa
aam
insl
xlat
cmpsl
cmp
xor
and
stc
mov
and
into
aaa
xor
pop
dec
xchg
leave
push
lods
sub
cmp
xchg
or
mov
fidivl
mov
adc
filds
or
mov
dec
call
test
outsb
mov
insl
stc
pop
iret
les
inc
or
ja
xchg
int3
popf
movsl
pop
pop
push
loop
jl
mov
lock
push
sub
cmp
add
mov
mov
pop
adc
lods
fdivrs
ficompl
mov
sbb
iret
movsl
inc
test
sarb
pop
dec
mov
scas
push
insb
mov
js
mov
ret
fcompl
push
inc
lret
adc
js
sbb
iret
arpl
stos
popa
popa
mov
repnz
add
sub
push
hlt
lahf
fisubrl
push
mov
mov
jb
inc
test
pop
cmp
cmpps
cmp
sbb
inc
inc
add
push
pop
lods
sub
sub
test
push
push
aas
arpl
xchg
pop
mov
ds
cmp
in
lahf
dec
mov
jo
pmulhw
xor
loopne
shl
mov
call
pop
adc
lods
mov
inc
inc
test
inc
mov
pop
jnp
iret
jg
mov
insl
inc
adc
ret
sub
cwtl
arpl
js
stos
pop
sbb
jge
lods
roll
pop
ss
fldt
jno
es
push
jle
jae
dec
test
add
adc
xchg
mov
fdivl
test
lods
add
mov
stos
call
aam
leave
dec
mov
lret
pop
jmp
mov
pusha
sbb
fsubs
ljmp
es
mov
cmp
rorl
mov
cmp
and
mov
adc
cmc
cli
mov
daa
sub
xor
in
fcoms
repz
psrld
aad
and
outsb
repz
ss
mov
add
cmp
subb
inc
jle
clc
cmp
xchg
pop
or
pop
fldcw
cmp
in
inc
or
outsl
jmp
add
int
sbb
test
ret
sahf
xor
lods
fistps
lcall
push
rcrl
lcall
jmp
xor
xlat
xchg
push
or
and
mov
xchg
lcall
and
into
fs
imul
pop
out
adc
fnstsw
stc
and
or
dec
push
outsb
shl
mov
dec
into
sbb
jb
adc
popa
xchg
sbb
mov
jp
mov
sbbb
adc
xchg
jmp
dec
in
es
pop
cmp
mov
repz
mov
sbb
jo
andb
stc
dec
push
call
pusha
gs
xchg
xor
sbb
ret
mov
pop
test
in
mov
pop
pop
or
sbb
outsl
pusha
dec
mov
inc
sbb
push
pop
aad
adc
fnsave
adc
jns
xchg
mov
mov
xchg
dec
movsb
popf
pushf
mov
pop
arpl
stos
stos
and
scas
test
movsl
ret
inc
push
jno
pop
jp
aas
jmp
sub
mov
rcll
stc
sbb
je
test
out
ss
mov
and
push
cs
aam
jl
push
xchg
lods
decb
icebp
push
call
and
scas
push
inc
int
jmp
inc
in
dec
sbb
fldenv
jae
das
pop
jb
mov
dec
sbb
dec
testl
jle
xor
jbe
sub
xchg
in
sbbb
daa
mov
and
inc
mov
out
push
repz
into
test
lcall
adc
js
xchg
leave
and
and
cmp
negl
mov
lock
jmp
push
push
adc
cld
cmp
repnz
daa
enter
fsubl
inc
scas
aam
xchg
imul
inc
scas
scas
push
cwtl
mov
enter
push
js
dec
fidivrs
pop
out
lods
ja
xor
push
stos
mov
shr
mov
sub
mov
sbb
adc
mov
jb
push
pop
sub
je
int
dec
jbe
outsl
iret
mov
ja
fisubl
mov
lock
dec
das
mov
jns
or
mov
pusha
scas
popf
mov
inc
arpl
adc
jle
dec
push
int
and
out
mov
dec
sti
mov
sahf
pop
in
nop
sbb
in
fnstsw
add
cmpsl
mov
aas
pushf
xchg
add
xchg
push
loopne
test
loop
cmp
or
add
sub
dec
sbb
add
and
idivb
loope
out
adc
jmp
jp
pop
pop
out
dec
sub
scas
cmp
xchg
mov
ret
pop
sub
loop
adc
out
enter
test
in
mov
sbb
fldenv
push
mov
movsl
mov
in
sbb
push
lcall
mull
mov
cmpsl
leave
xor
cmp
lods
and
pop
mov
xrelease
xchg
loopne
mov
and
and
mov
iret
pop
add
iret
fmull
mov
inc
lahf
nop
sti
pop
lret
das
mov
cli
lods
push
cs
push
add
pusha
jle
or
jns
outsb
repnz
adc
mov
pop
jg
push
jo
fs
pop
in
mov
pop
into
dec
mov
mov
xchg
out
add
mov
sbb
sub
push
lret
std
jge
mov
dec
cwtl
loope
iret
mov
loope
push
je
jo
fisubrl
mov
xor
pushf
sub
xorb
bound
sub
scas
cmp
data16
leave
outsl
pop
mov
xor
pop
push
fwait
adc
popa
or
adcb
sub
pop
mov
sub
mov
sbb
inc
loope
outsb
dec
lea
test
pushf
sti
sbb
sti
cmp
ja
mov
cmp
mov
ret
push
jae
xchg
mov
pop
pop
jg
sbb
test
out
inc
leave
aas
repnz
fnstenv
lods
sahf
sub
test
or
loop
jmp
jno
mov
or
js
mov
jb
mov
mov
lds
dec
pop
inc
mov
dec
push
add
cwtl
push
and
xchg
or
pop
test
insb
subb
push
jp
bnd
xor
test
imul
clc
into
inc
adc
fisttps
cmpb
cmp
fs
call
andl
pop
xchg
pop
lret
js
orb
lods
sub
daa
pop
mov
push
mov
mov
mov
sbb
and
xchg
or
jae
mov
xchg
popf
popf
aam
pop
dec
ja
jp
add
pop
fwait
pushf
out
sbb
dec
cwtl
add
cmp
pop
dec
gs
and
inc
add
inc
lds
and
xchg
dec
movsb
icebp
cltd
cmp
lock
lock
or
dec
addr16
js
shrb
hlt
adc
or
jb
pop
dec
mov
mov
pop
cmp
cmpsl
fisttps
push
jp
mov
jecxz
push
pop
aaa
es
sub
sti
pop
into
repz
sbb
dec
adc
inc
or
lock
dec
push
xchg
mov
js
in
clc
and
lods
mov
fbld
cwtl
test
dec
pop
xor
or
fldenv
test
out
data16
cs
arpl
dec
int3
inc
adc
repnz
pop
xchg
ret
cmp
popa
jecxz,pn
push
jne
lods
or
adc
mov
in
mov
mov
jne
cmp
and
or
sbb
add
xchg
js
bound
mov
ljmp
inc
jl
fbstp
pop
add
and
jl
adc
sub
sbb
sbb
stos
add
test
jp
mov
xchg
rclb
dec
adc
sbb
adc
mov
push
daa
mov
cltd
mov
fcompl
pop
jns
xchg
rorb
cmp
out
andl
mov
in
mov
and
cmp
xchg
xor
or
mov
jbe
pop
dec
les
into
daa
jno
add
mov
call
add
fs
sbb
and
mov
sub
pop
inc
lcall
mov
mov
pop
pop
inc
call
aaa
iret
adcb
jo
lret
repnz
or
and
push
adc
jecxz
mov
xchg
xor
pop
lret
dec
inc
scas
sub
notb
push
sahf
aad
icebp
xor
jmp
popf
and
dec
sub
adc
ds
push
aaa
pop
outsl
cmpsl
testb
loope
dec
movsl
out
mulb
pop
ror
xlat
js
lds
movsb
pop
movsl
dec
icebp
movsl
pop
and
stos
push
pop
inc
shrb
iret
jecxz
inc
add
lret
popf
and
or
inc
stc
and
mov
ds
adc
push
add
lret
test
mov
mov
or
pop
push
scas
mov
dec
mov
fstl
icebp
loop
xor
lahf
mov
cmpsb
inc
test
scas
mov
ret
mov
dec
in
or
rclb
mov
adc
jmp
dec
ret
repnz
into
popa
mov
adc
jae
leave
inc
push
call
push
fldt
popf
dec
lea
sub
mov
xor
add
cli
inc
fs
call
sub
int3
inc
cmp
adc
andb
movsl
adc
dec
mov
push
out
dec
add
lods
mov
sub
movsb
imul
psrlw
sub
arpl
cvtps2pi
jp
jl
push
orb
adc
jo
shl
cwtl
mov
jp
push
test
jmp
lock
adc
int
jmp
jns,pn
inc
fucomi
jb
mov
cld
mov
push
push
scas
lahf
sahf
rorl
js
or
subl
je
repnz
adc
call
mov
pushf
push
hlt
test
mov
inc
outsl
cmpb
dec
insl
sbbb
push
nop
lods
scas
dec
inc
mov
jne
mov
ds
mov
lock
mov
leave
mov
inc
mov
inc
and
add
jecxz
mov
stos
mov
mov
xor
aaa
jnp
ljmp
sub
shll
mov
or
bound
push
add
aam
cwtl
pop
add
addr16
insl
popf
rclb
xchg
data16
outsl
in
jne
cwtl
push
add
mov
sti
and
xor
dec
pop
aam
adc
ja
xchg
ret
dec
icebp
push
xchg
xchg
inc
push
cmpsb
mov
negl
mov
xor
rcll
and
ljmp
aad
jb
nop
fs
sbb
mov
inc
sub
pop
add
sub
and
mov
dec
inc
into
mov
jle
cld
lds
mov
fwait
sbb
xlat
andb
xchg
fdivrp
cmp
out
inc
rol
and
fwait
sub
pop
jbe
jno
mov
out
push
or
sarl
cs
mov
jae
xor
mov
rol
in
aad
push
xchg
sub
jmp
mov
sbb
mov
ret
arpl
and
inc
or
inc
ja
jp
test
rorl
cltd
or
dec
push
mov
and
pop
cli
jne
out
shlb
mov
push
add
hlt
je
dec
xchg
dec
mov
popa
cmp
fistpl
pop
shll
mov
mov
xlat
push
push
xchg
sbb
cmp
stos
sub
sbb
stc
leave
andb
xor
adc
fwait
xor
xchg
int
rcrb
out
sub
popa
pop
mov
xor
push
lret
lea
mov
divl
ljmp
in
cmp
cld
dec
dec
adc
lret
popf
sbb
nop
iret
push
cvttps2pi
xchg
jo
and
sub
xchg
push
mov
sub
xchg
xchg
mov
ret
je
jmp
repnz
ffree
lahf
sbb
shlb
xchg
mov
jo
in
leave
and
sbb
adc
lret
in
and
nop
push
inc
popf
push
xchg
xchg
es
nop
bound
movsl
frstor
xchg
mov
inc
aam
push
stc
push
test
mov
push
cmp
xor
pushf
xor
shrl
xlat
dec
xorl
mov
les
int3
cmpsl
jp
jge
out
or
xchg
dec
mov
add
nop
stos
ret
dec
sbb
jg
in
popf
jbe
hlt
hlt
mov
pop
fistpl
and
in
stos
pushf
jne
into
sub
test
mov
sbb
add
mov
iret
jnp
fisttpl
jge
sub
adc
push
scas
push
xor
pop
xor
jle
add
fdivr
xchg
cld
mov
pusha
xchg
je
and
jbe
dec
mov
mov
sti
push
fisttpll
cmc
dec
outsb
sbb
jmp
lahf
mov
dec
push
adc
inc
dec
or
jg
outsl
adc
cmc
pop
sbb
or
xchg
mov
mov
das
ljmp
and
cmpsb
xchg
jno
test
push
push
mov
loop
mov
inc
shlb
pop
xchg
lahf
sbb
mov
lret
pop
mov
cld
jle
add
adc
inc
popa
lret
leave
inc
xchg
dec
fisubs
inc
cld
stos
mov
mov
insb
aas
sub
and
fwait
or
nop
gs
iret
outsl
jecxz
cmp
pusha
ds
xchg
scas
xchg
in
dec
adcb
test
outsl
xor
cmpsb
push
in
pop
and
mov
cmc
icebp
jnp
sub
xchg
aas
xchg
push
mov
stos
movsl
nop
xor
sub
pop
xor
hlt
push
mov
push
and
mov
pushf
mov
stos
scas
mov
jecxz
test
fucomp
push
pop
sub
push
sub
addl
cmp
push
inc
jns
pop
mov
and
cmp
fisttpl
xor
inc
call
jge
popa
and
lahf
mov
jmp
fcompp
jne
pop
fcompl
rep
js
imul
pop
cmc
adc
adc
ss
les
ret
ret
leave
xchg
pop
sub
leave
ja
shll
push
jge
add
cmpsl
push
xchg
xor
push
sub
loope
push
add
adc
mov
xchg
pop
pop
rorb
inc
dec
pop
sub
dec
je
cmp
incl
cmc
in
repnz
push
push
mov
mov
mov
test
test
adc
mov
sbb
jecxz
and
push
fcomi
or
dec
mov
mov
jmp
mov
cmp
mov
lcall
jno
jbe
sub
and
aad
xor
push
cmp
loope
jmp
mov
sub
lcall
cld
js
mull
and
jmp
and
mov
test
aas
test
lock
adc
pop
loop
pop
pop
inc
mov
pusha
adc
jne
movsb
dec
in
push
cmc
test
inc
fstpl
arpl
pop
sbb
and
roll
jle
sahf
cmp
lahf
fcomip
icebp
jle
add
pop
push
loop
call
shl
xor
mov
xchg
pusha
mov
pop
aas
inc
push
cmp
push
int3
adc
stos
in
shrl
fimuls
pop
fdivrs
lods
rorl
aaa
in
inc
sbbb
xor
icebp
inc
fcoms
sarb
add
stos
cmp
mov
sbb
add
cmp
cmpsl
std
sub
xor
lret
pop
dec
mov
mov
add
mov
scas
dec
int
push
cld
and
jns
push
stos
pop
xchg
js
mov
or
mov
jnp
jo
push
mov
movsl
add
or
imul
cli
xor
into
pop
enter
sbb
adc
sub
xor
mov
cmp
jns
out
dec
inc
repz
cmp
or
or
fdiv
aaa
pop
push
pop
mov
cmp
gs
sub
lock
pop
repz
imul
arpl
push
repz
mov
sahf
stos
lds
ljmp
loopne
cmp
jae
shrb
call
insb
icebp
fwait
arpl
sub
push
pop
rcr
arpl
mov
in
push
push
imul
dec
cmp
mov
sbb
subl
rolb
inc
lods
pop
push
inc
mov
fcoml
sub
movsb
cld
ja
mov
sbb
adc
pop
cmpsb
sbb
adcl
arpl
mull
int
call
jns
mov
rcl
xor
fidivrs
xchg
movsb
mov
int
repz
and
jo
pop
repnz
lods
mov
scas
mov
cmp
jge
mov
lret
mov
lock
cmc
mov
ret
repnz
mov
sub
cmp
out
xchg
filds
push
ljmp
mov
clc
and
lcall
mov
mov
cmpsl
in
jge
mov
adc
jecxz
adc
iret
mov
xchg
xchg
cld
xor
cmpb
aaa
das
jno
fwait
dec
test
dec
xor
mov
leave
jae
xor
xor
mov
out
xchg
dec
and
into
repnz
lods
subb
mov
sti
mov
inc
nop
push
cmpb
lret
ficompl
mov
sub
and
inc
inc
lods
adc
inc
rcrb
xchg
pop
arpl
xor
test
rclb
test
or
call
lret
xchg
out
add
negb
mov
fnstcw
jo
cli
leave
icebp
mov
sti
stos
xor
imul
out
scas
add
outsl
fildl
loop
jl
cmp
lds
mov
mov
rolb
xchg
mov
iret
test
imul
sub
enter
nop
jmp
popf
xchg
inc
dec
jle
cmpsl
jmp
mov
mov
cmpsl
pusha
push
dec
or
push
js
lea
mov
enter
scas
pop
add
inc
inc
das
in
arpl
mov
jl
int
dec
mov
inc
sub
daa
fsubl
jg
cli
arpl
add
int3
xlat
negb
push
jbe
fstpl
stos
scas
jnp
arpl
movsb
loope
push
sbb
push
leave
lock
xchg
orb
jmp
mov
pusha
sbb
xor
es
call
ds
mov
mov
add
xchg
mov
stos
sub
lea
loope
and
repnz
aad
dec
ret
mov
int
rol
add
pop
es
xor
mov
mov
iret
jb
rcrb
dec
sbb
xchg
jnp
fs
ds
loopne
add
inc
loope
scas
bound
and
addr16
fnstsw
dec
sbb
outsl
ret
xchg
icebp
xor
icebp
adc
inc
xor
mov
out
mov
pop
ret
cmp
lock
adc
outsl
ja
int
jae
sahf
add
jecxz
cmp
inc
or
or
popa
mov
cmpsl
jp
pop
xchg
jp
xlat
out
and
adc
out
enter
test
jo
push
lret
fldcw
or
adc
xchg
pop
push
mov
icebp
mov
mov
dec
dec
ss
lcall
mov
shll
add
icebp
or
push
jo
in
fidivrl
test
inc
enter
mov
iret
xchg
fs
push
shr
mov
push
test
xchg
inc
push
mov
mov
jnp
pop
push
pop
push
xor
and
stos
pop
mov
outsl
sbb
out
add
adc
jb
xchg
sti
xor
pop
mov
inc
repz
mov
nop
add
jg
lods
shll
je
popa
xchg
gs
inc
jno
add
mov
arpl
mov
mov
lds
pop
repnz
outsb
incb
jbe
lcall
loopne
iret
or
nop
pop
push
loopne
aas
fildl
icebp
mov
ljmp
jp
mov
inc
divl
hlt
popa
pop
cmc
jge
clc
add
stc
xor
and
cmp
aam
pop
rclb
add
sbb
popa
xlat
xor
fs
lock
imul
cltd
imul
xchg
jge
dec
outsb
push
test
push
test
inc
dec
and
push
xchg
pushf
sub
lods
rcr
mov
ret
add
out
aam
lret
std
fdiv
imul
mov
pop
test
outsl
inc
loope
inc
cld
add
mov
mov
inc
sti
sahf
xorb
sub
mov
and
pop
rolb
lret
xchg
lret
mov
fdivp
adc
xchg
cmp
into
shrb
dec
call
mov
lret
adc
cld
adc
mov
sahf
lods
addr16
btr
jno
dec
popa
imul
in
aaa
outsb
mov
into
sbb
inc
jecxz
int
sahf
push
xor
ficompl
mov
mov
aam
adc
xor
inc
push
repz
shll
pop
mov
sti
dec
stc
js
xor
adc
pushf
sahf
inc
sbb
in
xor
lret
lahf
sub
add
sbb
and
test
xchg
in
push
and
xor
push
call
repz
add
mov
sbb
das
xor
jmp
or
xchg
add
test
xor
sti
aam
jo
add
jno
into
je
dec
iret
or
pop
aad
sbb
sahf
jbe
jns
add
movsb
test
les
xchg
cmp
mov
stos
mov
lahf
orb
cmp
xchg
cmp
jne
pop
or
add
addl
cltd
addps
mov
pop
or
jb
inc
mul
movsl
mov
xlat
loopne
push
push
mov
and
loopne
or
call
call
fwait
aad
mov
cmp
cld
inc
clc
in
lods
jns
daa
xlat
add
mov
nop
inc
mull
mov
les
lcall
mov
rol
mov
mov
in
ss
mov
cmpsb
push
ret
ret
leave
mov
cwtl
test
mov
cmp
ret
xchg
arpl
int
fs
je
decb
fists
jl
in
adc
xchg
daa
mov
mov
or
sbb
daa
arpl
dec
jg
or
stos
je
cmp
adc
hlt
mov
push
cmp
rcll
lret
xchg
xchg
xor
lds
stos
fstps
popf
mov
push
pop
fdivl
push
jl
in
test
shrl
jbe
sub
scas
jp
jns
and
neg
sbb
jg
in
jo
mov
cmp
inc
dec
sbb
pop
and
icebp
stos
mov
test
popa
xor
cmp
mov
fimull
cld
cmp
or
push
mov
or
cs
leave
cmc
or
xor
adc
sub
in
mov
mov
and
inc
cwtl
jp
in
push
test
pop
int
outsb
mov
cmpsl
push
cmc
xchg
mov
or
mov
test
stos
push
pop
add
mov
mov
scas
pop
fwait
lahf
mov
mov
sbb
lret
lret
daa
cwtl
stos
aam
cmp
movsb
outsl
and
push
dec
inc
out
negl
ljmp
ja
or
sbb
and
dec
push
adc
mov
es
sbb
movsb
aad
out
pop
adc
cmp
adc
gs
ret
daa
and
push
fcom
lahf
aad
adcl
fists
fs
arpl
and
pop
add
dec
insb
xchg
sub
arpl
loopne
mov
inc
std
and
icebp
cltd
ret
ss
fs
es
add
push
pop
movsb
in
subl
xor
adc
add
cld
push
shrb
mov
in
repnz
xchg
jnp
test
repz
mov
sbb
negl
xchg
add
xchg
das
test
jmp
hlt
in
add
mov
loope
jl
sbb
sahf
sbb
fimull
lods
subb
sbb
aam
xchg
xor
lock
rclb
xchg
sub
sbb
add
xchg
es
stc
inc
adc
bound
in
mov
inc
add
lds
repz
pop
inc
and
adcb
cmpsb
push
mov
cwtl
xchg
sti
arpl
add
pop
xchg
ja
sbb
xchg
jmp
cmp
mov
fcmovnb
flds
arpl
je
popl
pop
cltd
xchg
jle
mov
and
loop
int3
sbb
lahf
cmovo
incl
mov
or
and
adc
sub
shll
pop
fimuls
adc
mov
mov
stos
push
xchg
push
mov
xorb
test
inc
lock
and
pushf
xchg
js
ficoms
hlt
sbb
aad
ds
jbe
inc
mov
lret
popa
jo
and
push
aas
out
rcr
sbb
jns
cmp
cmp
loope
or
sbb
rcrb
mov
mov
pop
add
jp
scas
divb
inc
ja
sub
jg
cs
or
jns
mov
jl
inc
gs
mov
stos
movsl
fs
data16
push
sbb
xchg
pop
mov
pop
hlt
dec
pop
mov
sti
clc
pop
cld
pop
jmp
cli
arpl
jbe
movsl
mov
pop
jb
out
and
nop
popf
cmc
fsub
dec
imul
pushf
cli
inc
fdivrl
mov
out
mov
dec
insl
std
pop
pop
call
jnp
mov
jecxz
mov
cltd
pop
jae
push
stc
pop
movsb
mov
adc
mov
icebp
mov
adc
shlb
jne
mov
into
cmc
fs
add
xor
rcrl
fistpll
add
jle
fdiv
cvtpi2ps
loope
mov
rclb
mov
dec
sbb
inc
sbb
icebp
daa
cld
xor
das
xchg
and
push
les
xor
jp
rorl
mov
lods
jnp
mov
sahf
mov
scas
cmp
movsl
jmp
push
test
lock
xchg
jne
adc
cmp
mov
push
cmp
imul
mov
jns
out
sbb
lcall
dec
cmpsb
aaa
dec
fldenv
mov
mov
cltd
mov
add
adc
inc
dec
xorl
adc
cli
mov
jmp
popf
cmp
lods
imul
test
sub
or
jecxz
dec
xchg
fldcw
dec
push
sbb
jg
jmp
fwait
xor
jnp
xor
xor
push
or
loope
pop
imul
faddl
in
cmpsb
jg
mov
dec
cmc
test
push
enter
imul
roll
aad
call
sbbl
push
das
sbb
lcall
test
mov
into
xchg
cltd
mov
dec
add
adc
xor
jb
mov
mov
fcoml
outsb
add
cmc
outsb
mov
add
scas
out
loope
cmp
xor
cs
push
push
shll
inc
push
cmp
rcrb
sahf
pop
sbb
mov
add
addr16
xchg
into
push
stos
dec
mov
jle
mov
loop
mov
pop
mov
push
sbb
aad
cwtl
lds
jmp
ret
or
inc
jbe
pop
cmpsb
jnp
or
jne
xchg
cs
int
mov
mov
je
in
cmc
fwait
adc
dec
iret
adc
rolb
and
pop
lods
jnp,pt
xor
mov
push
xor
add
repnz
cmpl
ret
dec
mov
loop
mov
push
rcrl
and
cmp
call
push
dec
inc
jp
repnz
in
push
push
cmpsl
and
xchg
rcrl
es
adc
or
ret
xor
jno
cwtl
xchg
push
cmpsb
inc
movsb
pop
or
push
mov
and
pop
mov
shrl
int3
outsl
pop
dec
cmc
pop
fcomps
cmp
std
repz
mov
mov
cmp
mov
inc
sub
inc
xchg
pop
pop
fs
sbb
dec
xchg
fmulp
pop
arpl
jo
push
leave
scas
and
add
das
sub
lcall
frstor
test
mov
mov
sti
lods
jl
cmp
aad
cmp
pop
mov
mov
cmc
lcall
insb
push
fisttpl
ret
and
es
xor
pop
pop
jne
cld
rcrb
dec
or
das
jl
aam
inc
rorl
lods
push
fs
out
inc
fisttps
inc
arpl
and
aad
mov
xlat
andl
add
ret
push
clc
xchg
aad
ljmp
sbb
push
sbb
jo
mov
mov
ja
sbb
scas
jne
jns
ds
js
outsb
ljmp
clc
sub
cmp
loope
or
out
out
gs
jp
sti
push
call
adc
daa
push
sbb
cmp
adc
js
pop
dec
pop
fadds
xor
test
sub
test
fistpll
bound
lahf
addr16
jecxz
push
popa
mov
pop
cmc
insb
xchg
cmp
pushf
popf
fldl
shlb
popa
xorb
adc
cmp
sbb
mov
call
aaa
dec
jmp
das
push
mov
rcll
sbb
out
ret
adc
int
ja
add
jne
mov
adc
xchg
mov
ds
lahf
xor
pop
stc
sbbb
movsb
shl
mov
ljmp
cmc
mov
insl
sar
neg
xchg
jns
mov
adcb
repnz
xor
out
sti
test
lock
dec
movsb
nop
imul
pop
push
mov
pop
mov
fs
outsb
mov
add
pop
rcll
push
arpl
in
xchg
add
sarl
aas
pop
in
sub
call
fwait
sbb
int
hlt
jnp
inc
xchg
stc
loope
pop
xchg
dec
scas
loopne
cmp
in
std
cmp
ljmp
or
pop
fidivs
ret
sub
data16
je
jl
pushf
xchg
add
mov
lahf
dec
pop
pop
fdivrs
into
mov
lea
jne
les
insb
sub
repnz
lret
sbb
xchg
jmp
je
lock
or
repnz
cltd
loop
mov
popf
and
push
sub
cld
cli
rcll
shrl
xchg
cmp
mov
arpl
push
mov
cmp
inc
xor
jl
ficomps
lret
mov
fldl
roll
mov
and
cmp
xchg
or
push
and
imul
ficoms
mov
jg
pand
pop
sub
aad
mov
push
faddl
mov
pop
mov
xorb
dec
sbb
leave
ret
movsb
and
or
pop
jne
sbb
orl
cmp
js
out
aam
clc
and
cwtl
les
xchg
lods
pop
fscale
stos
gs
cmp
shll
sub
ret
test
inc
cs
stos
arpl
outsl
inc
sahf
ljmp
sbb
jnp
jbe
xor
mov
rorb
inc
ja
cmp
ret
mov
lea
sbb
sbb
lret
loope
push
push
icebp
sbb
add
out
lods
pop
fildl
push
mov
or
out
out
lea
shlb
insb
or
sbb
or
mov
and
stc
jle
xor
push
xor
js
and
push
sub
jmp
popl
fists
xchg
xchg
jnp
mov
lods
out
stos
xchg
lock
dec
adc
jle
or
and
test
adc
push
xchg
jmp
fisubrs
jno
cs
xchg
call
jmp
ror
mov
fstps
les
dec
imul
cltd
mov
add
mov
mov
mov
adc
shlb
mull
lds
jb
mov
fnstenv
test
xchg
jnp
mov
mov
pop
xchg
add
scas
push
lock
int3
mov
push
int
lahf
ret
or
mov
sub
jle
pop
add
adc
test
adc
fsubrl
mov
fdivr
loope
mov
jo
or
ret
xor
test
cmp
xor
mov
and
ds
cmp
xchg
cmp
sub
xchg
out
popa
int3
es
jo
lcall
shl
ljmp
jb
imul
in
int3
add
mov
outsl
cld
flds
adc
scas
repnz
pop
xor
cwtl
xchg
or
inc
add
xor
jo
mov
js
push
cmp
cmp
lds
clc
xor
cmp
dec
call
jnp
mov
dec
or
push
mov
xor
pop
enter
and
cmp
xchg
loopne
mov
int
cmc
pusha
add
imul
cmpsl
mov
adcl
jne
fisttpll
daa
pop
mov
pusha
dec
iret
popf
push
in
jge
rcrl
sub
je
das
roll
adc
daa
enter
dec
jbe
sub
mov
imul
inc
pop
and
mov
mov
pushf
mov
xorb
dec
mov
jle
sbb
iret
cmpsl
pop
and
push
mov
fwait
pop
mov
sbb
mov
dec
mov
bound
dec
dec
mov
mov
ficomps
ja
js
in
out
xorl
out
rclb
cmpsb
es
shll
xor
cmp
cld
test
call
adc
cmc
pop
lret
fdivrs
push
push
jno
into
setae
inc
aas
mov
cmp
adc
outsl
pop
and
sub
push
cmp
mov
xchg
lret
inc
shr
pusha
push
mov
mov
idiv
jl
xchg
adc
mov
cmp
out
lea
xor
xor
shll
add
movsb
stc
cmp
or
sub
xor
push
les
pop
mov
adc
fisubrl
subl
mov
mov
sarb
enter
or
mov
gs
pop
jg
push
fists
mov
repnz
scas
imul
nop
push
or
sub
imul
in
mov
cmpsl
lock
inc
sbb
jnp
cs
jmp
cmpsl
cmpsl
rcrl
inc
xchg
rorl
nop
test
enter
or
mov
push
mov
fsub
adc
mov
pop
cli
dec
lret
movsl
cmpsl
push
mov
push
fcom
sahf
inc
push
cs
cmp
jge
jmp
lcall
inc
inc
xor
lcall
dec
jne
lret
lock
les
daa
ljmp
mov
cltd
out
insb
int
pop
jae
rorl
jo
cltd
cmp
xor
ljmp
push
and
and
inc
dec
hlt
cwtl
out
test
and
aaa
pop
xlat
fld
fstps
sarb
arpl
js
loopne
inc
popa
and
mov
shll
aas
cld
pop
jbe
call
fcoms
scas
fdivrl
pop
adc
push
fisubl
xorl
cli
fcoml
jecxz
arpl
xchg
fimull
cmp
cmpsb
addr16
push
mov
adc
in
rcr
dec
js
adcl
mov
les
lds
add
int3
es
fdivs
inc
mov
mov
jmp
or
sub
dec
push
ret
shrb
adc
xchg
insl
cmc
pop
jmp
xchg
inc
cs
mov
cld
mov
pusha
gs
enter
jnp
sub
or
stos
inc
push
pop
sub
push
dec
mov
jp
mov
lcall
stos
enter
mov
xor
stos
js
and
jno
imul
dec
jns
cmp
add
das
dec
scas
popa
pop
mov
mov
rcll
sbb
xchg
mov
sub
or
fisubrl
or
leave
cmp
cltd
stos
xchg
outsb
jnp
mov
jmp
pushf
sbb
mov
cmp
ja
cli
call
xchg
mov
icebp
imul
xor
sub
cmp
stc
outsb
out
dec
xor
outsl
xchg
pop
jb
pop
leave
dec
lea
adc
adc
out
xchg
lret
cmpl
and
xor
push
mov
inc
pop
lods
in
imul
jnp
fwait
jbe
add
pop
mov
testl
mov
cld
pop
push
inc
push
sbb
jl
aam
test
jmp
ljmp
xor
loop
mov
jo
fdivrl
in
mov
lods
mov
cmpsl
lahf
jae
pushf
or
rorl
cmp
fisttpll
dec
xchg
xchg
fs
add
mov
outsb
leave
mov
dec
xlat
shll
push
cwtl
les
jne
insb
les
adc
pop
cmp
lds
mov
xchg
out
pop
mov
ja
mov
sub
add
movsl
push
rorb
jb
pop
aam
pop
addb
xchg
dec
and
pop
shrl
mov
and
xor
nop
and
push
sub
jne
push
rolb
fwait
out
push
jb
adc
shll
nop
fimuls
seto
imul
popa
pop
fsubrs
jp
jmp
inc
dec
add
mov
jno
pusha
hlt
and
adc
and
pusha
popa
data16
sub
push
inc
ficoml
dec
adc
movsl
add
call
das
inc
push
mov
jne
in
ror
push
cltd
adc
in
jecxz
and
out
xor
mov
adc
xchg
fs
mov
xchg
out
jns
xchg
cmp
nop
xor
arpl
cwtl
sbb
pop
sahf
dec
pusha
nop
ret
incb
popl
xor
call
pusha
adc
stc
pop
arpl
fmuls
or
mov
into
mov
xchg
js
lds
and
rol
insb
dec
add
adc
adc
sbb
xchg
pusha
out
xlat
mov
sbb
lock
or
mov
xchg
mov
xchg
add
data16
call
pop
inc
mov
in
je
jge
dec
pop
ds
and
hlt
loope
mov
adc
gs
mov
sarb
mov
out
cmc
loop
cmpb
mov
sub
popf
mov
dec
mov
inc
xchg
xchg
push
mov
das
dec
daa
and
rcrl
out
xorb
sub
dec
sub
pusha
jg
js
mov
outsb
fmul
rcr
add
popf
and
jo
inc
sub
insl
ror
mov
xor
mov
jl
or
loopne
mov
inc
hlt
insl
rclb
jmp
fcmovu
inc
shlb
pushf
mov
jge
in
scas
lea
sub
fdivrl
popf
ss
jl
imul
daa
js
sub
cld
adc
lods
push
adc
daa
stos
cmp
aam
mov
mov
loope
or
adc
mov
xchg
mov
pop
das
or
xor
add
lods
mov
in
sbb
aas
add
ret
dec
pop
xchg
out
mov
dec
jmp
hlt
pop
aad
test
mov
xchg
out
lods
fucom
xchg
or
mov
xor
fdivl
lds
sbb
add
cmc
lret
in
sub
std
outsl
cmp
push
pop
cmp
jl
cltd
fimuls
xor
push
enter
das
mov
leave
ljmp
les
nop
es
inc
ljmp
sarl
mov
push
les
push
ret
in
jbe
ja
pop
or
enter
rorb
shlb
add
test
data16
sbb
fisubl
jmp
test
add
sbb
cld
mov
or
xor
fsubrp
lahf
sub
cmp
ja
mov
xchg
ret
std
push
scas
pop
pop
je
cmp
outsl
insb
fwait
xor
or
sbb
xor
jmp
scas
mov
mov
xorb
sbb
or
loopne
push
dec
mov
enter
insl
mov
aas
jmp
movsb
ret
xchg
fcoms
inc
cltd
sbb
jge
sysret
jo
ljmp
push
add
jmp
in
adc
int
dec
sub
mov
int
cmpb
mov
bound
icebp
lcall
pop
lods
dec
or
cmp
mov
push
aas
jo
mov
and
stc
dec
mov
fistps
mov
xchg
popf
ja
data16
xor
cltd
flds
pop
lcall
in
rcrb
lret
add
dec
mov
movsl
sub
mov
push
mov
or
pop
iret
mov
mov
in
jnp
repnz
mov
xor
lcall
jp
cmp
and
pop
sahf
cmp
sub
arpl
mov
loope
mov
xor
mov
mov
push
sbb
lahf
rol
fldenv
hlt
xchg
rolb
ljmp
xchg
jp
push
mov
xchg
jmp
pop
iret
mov
jns
add
mov
push
pop
fcomi
les
or
lds
ja
mov
mov
jns
pop
arpl
out
and
les
lcall
popa
data16
movsl
hlt
jle
pushf
movsb
jbe
shlb
jl
inc
push
cltd
lock
and
jo
cld
nop
mov
pop
inc
inc
insl
imul
aaa
sbb
ficoms
fs
inc
pop
xor
adcb
sbb
adc
ret
push
cmpsl
dec
mov
pop
mov
dec
loopne
leave
add
test
popa
nop
xor
scas
add
js
push
adc
insl
pop
push
daa
push
xorb
cltd
daa
xor
adc
notl
aas
lret
mov
mov
mov
loopne
xor
clc
enter
arpl
or
pop
in
sbb
cs
jmp
xchg
sbb
jno
jns
pop
imul
cmp
jnp
sub
stc
push
push
inc
rcll
pusha
pop
loope
jbe
popf
aam
subb
jmp
mov
adc
lods
lcall
jb
dec
mov
js
dec
mov
in
cmp
es
jns
arpl
xchg
punpckldq
jecxz
stos
out
mov
cmpsl
pop
stos
in
jmp
and
shrl
hlt
aad
and
push
push
rcrb
std
push
lock
imul
jecxz
xchg
std
enter
icebp
dec
pushf
movl
push
fdivl
add
lock
test
push
sti
inc
xor
in
xchg
jno
scas
scas
mov
xchg
jecxz
dec
jg
mov
push
push
pop
fisttps
mov
ficoms
pop
jb
mov
loop
stc
xor
shlb
into
and
clc
mov
push
add
fiaddl
frstor
iret
sub
loop
add
jg
pop
xor
add
cmp
fwait
int3
ret
or
setp
adcb
cmp
push
xor
bound
push
adc
mov
sarb
xor
incb
inc
enter
loop
insl
xchg
pusha
mov
xchg
pop
push
mov
arpl
and
adc
pop
mov
sbb
cmp
in
cmc
add
mov
sub
popa
repnz
pop
mov
lahf
jge
lcall
loope
pop
leave
jp
sbb
add
lods
hlt
sub
adc
mov
jp
mov
xchg
xlat
jge
js
push
ss
pop
shl
sbb
cmpsb
xor
add
pop
rcr
imull
and
icebp
inc
dec
dec
mov
add
adc
shl
out
int
inc
xchg
icebp
sub
into
sub
pusha
notl
sub
outsl
push
fsubp
sub
mov
cli
fsubp
sbb
sub
jb
test
jl
mov
movsb
outsl
enter
lods
sbb
pop
xchg
push
imul
ss
mov
mov
dec
add
rol
mov
ret
mov
out
ret
sahf
fxch
pop
cmp
mov
int3
sahf
jnp
loopw
pop
ret
loope
daa
pop
mov
js
mov
lock
push
cwtl
mov
mov
cld
inc
mov
mov
push
loop
insl
cmpsl
sbb
mov
mov
pop
mov
mov
dec
stos
dec
loopne
jg
repz
mov
gs
mov
inc
or
test
adc
add
scas
push
sbb
repz
push
sbb
lock
jno
mull
test
mov
int
aas
shll
mov
dec
roll
push
cmp
push
inc
and
xor
fnsave
jae
jbe
rorb
adc
sub
sbbl
jnp
mov
cwtl
and
adc
cwtl
je
int
dec
fisubs
xchg
xlat
push
pop
addr16
rclb
xlat
sub
in
or
fsubs
fwait
or
dec
push
pushl
daa
imull
xchg
adc
xchg
add
xchg
cwtl
aad
fdivs
inc
push
sub
mov
push
xchg
icebp
mov
mov
popf
or
push
fcompl
fs
fsubl
mov
jle
or
mov
inc
xchg
stos
add
push
inc
sub
jle
push
push
shlb
outsl
pop
xor
xor
push
jl
mov
andb
int3
jl
stc
mov
mov
mov
jb
rclb
sub
fmuls
or
jmp
cwtl
test
pop
add
je
js
push
cltd
scas
xor
add
xchg
fiaddl
sbb
cmp
notl
das
pushf
in
pushf
fdivp
jns
mov
sti
mov
cmp
mov
add
imul
into
out
adc
int3
out
xlat
cmc
or
adc
push
xor
push
mov
mov
lcall
mov
or
cwtl
push
loopne
aam
push
jl
cmpsl
leave
test
scas
pop
jno
movsl
jge
loope
mov
push
inc
pop
prefetch
les
sbb
sbb
ss
lods
jge
jno
enter
cmp
pop
push
ja
mov
push
pop
lcall
ds
cmpsl
ror
cmp
rorl
fcomps
cli
cld
ret
dec
jg
cli
jbe
sbb
sbb
mov
adc
aaa
pusha
mov
xchg
int
mov
push
fidivrl
add
lods
fwait
or
mov
les
xor
pop
cmpsb
lds
cmp
and
mov
hlt
pop
sbb
xchg
mov
adc
dec
cmp
jmp
gs
bound
mov
mov
std
mov
in
inc
out
dec
pushf
push
cli
fdivrl
call
bound
inc
daa
pop
xchg
movsb
cmp
mov
mov
dec
jnp
sub
stc
dec
xchg
adc
bnd
loope
cmpb
scas
mov
sar
inc
lods
mov
xchg
pop
aad
scas
cmpsl
push
mov
cli
fnstcw
movsb
xor
mov
xor
mov
je
jo
xchg
lock
xchg
sti
jns
xchg
jbe
pop
insl
push
mov
xchg
or
mov
add
pop
push
or
shrb
sbb
packuswb
dec
inc
pop
sub
cmp
in
stos
in
std
or
sub
sub
call
stos
and
sub
lods
mov
inc
lds
dec
out
arpl
mov
push
mov
aam
repz
inc
and
add
xor
dec
pop
clc
pop
inc
or
jne
cmc
imul
adc
mov
aam
jb
sub
mov
out
mov
mov
call
mov
dec
cltd
mov
jge
insb
mov
es
sbb
mov
test
xor
dec
xlat
sbb
flds
nop
idivb
addr16
xor
and
lcall
ds
call
jg
pop
cli
push
lock
push
fnstsw
cltd
xchg
jnp
cs
cmp
mov
mov
lods
test
int
add
out
sbb
inc
fcmovnu
push
cmp
push
lds
subl
in
sahf
or
aaa
fcmovnbe
enter
xor
lock
or
xlat
aad
fbstp
adc
out
cs
mov
and
jge
outsb
test
aaa
inc
dec
movsb
xchg
adc
shrb
inc
andb
dec
call
pop
fldl
hlt
nop
push
loop
push
sbb
sub
pop
mov
jl
shrl
mov
push
inc
sti
mov
sbb
mov
data16
xchg
bound
pop
jmp
in
sbb
test
ja
out
imul
in
test
sbb
xchg
sahf
cmp
or
mov
repz
adc
cmp
or
test
xchg
add
jns
daa
icebp
and
push
push
shlb
in
mov
push
push
cmpsl
xor
shrl
sbb
lahf
sub
addr16
sbb
das
cmp
out
outsb
xchg
cmp
inc
lock
adc
imul
inc
pop
ret
pop
jae
xchg
mov
xchg
test
mov
repz
mov
aam
movsl
lods
cltd
jp
leave
jge
mov
mov
cwtl
data16
js
xor
psadbw
xchg
lret
lods
jle
dec
xlat
mov
aaa
pop
jae
mov
adc
popa
jo
inc
xchg
ds
popf
stos
jmp
ljmp
inc
xlat
add
and
sbb
ds
das
jno
xchg
lock
flds
pop
div
leave
adc
sahf
jl
dec
mov
divl
jle
data16
repnz
sbb
or
adc
jecxz
inc
add
sbb
outsb
push
repz
hlt
pop
movb
add
notb
jno
in
sti
push
sub
mov
jo
jl
sbb
aaa
enter
out
gs
faddl
jb
mov
sbb
imul
cmp
insl
lahf
adc
add
xchg
inc
xchg
dec
inc
lock
jl
insl
mov
mov
mov
icebp
out
imul
push
mov
lret
push
out
jmp
in
mov
mov
leave
hlt
test
stos
jns
repz
and
cld
outsb
pop
push
out
mov
gs
push
stos
mov
sti
iret
test
sbb
mov
push
ret
jne
sub
jns
mov
fisttps
in
jmp
lds
aaa
cmpsb
inc
push
and
mov
sub
out
data16
popa
cmp
inc
mov
rcrb
testl
inc
int
adc
cmp
xor
std
push
cmpsb
mov
popa
fyl2xp1
fidivl
test
das
xchg
sub
stos
rcrb
dec
cmp
rclb
adc
pop
cmpsl
int
push
stos
iret
mov
ljmp
or
shrl
push
dec
fisttpl
andb
js
sbb
outsb
jae
int3
xor
add
arpl
cmp
and
jbe
sub
sbb
stos
outsl
xor
movsl
scas
les
xor
mov
dec
in
popf
and
ret
push
stos
mov
xchg
xlat
jb,pn
mov
mov
loop
gs
cli
cld
cmp
jbe
popa
mov
fisubl
jecxz
cs
and
test
xchg
cmp
xchg
lods
insl
jecxz
add
mov
movsb
nop
repz
xchg
jb
fimull
xchg
out
cmp
add
pusha
aaa
push
push
push
stc
pop
sub
mov
xchg
dec
inc
data16
aad
je
hlt
or
orl
xor
jge
jns
mov
push
cmp
pusha
mov
dec
addr16
add
cmc
cwtl
cmpsb
stc
add
cmp
jge
out
dec
ja
and
insl
or
outsb
push
das
inc
xchg
rol
mov
jl
add
lds
sub
lcall
push
ja
enter
fcompl
xchg
scas
push
cli
push
add
pusha
mov
ljmp
and
pop
imul
inc
lock
data16
aaa
aam
adc
fwait
scas
rclb
dec
or
imul
dec
push
cmp
outsb
jo
outsl
push
fcomi
lahf
leave
xchg
in
imul
jmp
int
push
inc
cli
pop
in
jp
and
roll
jmp
mov
sub
mov
and
loopne
repnz
dec
hlt
ret
push
mov
movl
ret
mov
push
test
mov
lahf
or
loope
test
or
inc
sub
and
and
hlt
ljmp
push
shrb
lods
and
inc
popa
xacquire
fstp
add
jmp
popa
push
addr16
sub
mov
or
scas
xchg
add
movsl
ret
cwtl
inc
fsubrs
shl
mov
popf
push
jb
int
sbb
push
test
cld
push
jno
int
or
and
adc
jecxz
popa
sbb
std
bound
push
stos
add
das
mov
or
jne
cmp
js
jmp
inc
notb
shlb
pop
je
push
sbb
pushf
aad
jmp
xchg
ljmp
add
loopne
data16
mov
and
add
mov
rolb
and
lock
pop
jbe
ja
std
mov
in
or
and
push
mov
pop
mov
jo
aaa
mov
daa
leave
ljmp
in
subb
and
movsl
mov
jmp
in
xor
imul
movsl
cmp
in
cwtl
movsb
jg
imul
inc
push
adc
mov
push
jnp
aam
lock
dec
dec
xchg
lock
mov
push
xor
loope
insb
sub
adc
jnp
scas
mov
sub
pushf
fabs
xor
dec
scas
out
pop
aas
xchg
fildl
xor
loopne
jecxz
stos
push
pop
push
xchg
pop
imul
sub
mov
add
jg
push
clc
push
mov
adc
es
daa
push
mov
addr16
add
dec
call
xchg
jbe
out
mul
test
fstpt
inc
pop
lods
xchg
mov
sub
dec
ljmp
mov
adc
test
push
mov
loopne
mov
decb
sbb
iret
jae
and
int3
pop
dec
cs
clc
sub
adc
scas
shl
sti
jmp
adc
sti
and
rcrb
cwtl
jo
pop
iret
hlt
jg
dec
dec
pop
bswap
xchg
cmp
fbld
xchg
pop
lcall
pop
out
shlb
arpl
int
lods
dec
out
mov
inc
jae
jno
les
pop
mov
jp
xor
sbbb
xlat
mov
flds
sar
jbe
and
lea
inc
ftst
add
js
mull
cwtl
pop
clc
icebp
mov
sbb
pop
fcmovb
loope
call
popa
shll
jbe
lahf
and
cmc
hlt
sub
aad
jg
dec
xchg
outsb
adc
mov
cmp
or
out
sbb
jae
sub
mov
dec
push
cmp
repz
dec
jno
xchg
enter
fisubrl
push
mov
ja
ficomps
xchg
inc
fistps
mov
lahf
cmp
dec
test
loop
loope
dec
push
mov
fdivrl
mov
iret
mov
add
sbbb
xchg
insb
loop
leave
jns
xchg
push
sbb
add
das
mov
push
jo
xor
cmc
jge
sub
mov
pop
lret
out
cmpsb
xchg
ret
xchg
or
mov
lock
mov
mov
cmp
gs
push
mov
lock
xchg
push
sti
add
jp
scas
and
lock
cmp
mov
data16
dec
fistps
xor
and
fwait
ljmp
xchg
push
pop
sti
fsubrl
and
jge
sbb
jp
mov
push
inc
mov
jmp
ficomps
mov
jne
fsubl
pop
pop
addr16
pop
imul
in
rorl
sub
push
mov
repnz
mulb
add
cltd
push
pop
push
fiaddl
enter
dec
inc
mov
mov
out
mov
push
outsl
pop
das
lods
scas
lock
sti
rorb
dec
push
jp
sub
call
test
aaa
push
xchg
ficomps
aad
sub
mov
mov
sbb
add
and
aad
mov
inc
cld
fstpt
or
sti
jecxz
ds
frstor
sbb
mov
add
mov
cmpsl
in
push
mov
loop
iret
mov
lret
or
jbe
lcall
mov
and
mov
or
inc
or
fmuls
mov
cltd
ret
jbe
cmpsl
test
lahf
subl
mov
iret
insl
pop
imul
mov
cmp
fsub
stos
sbb
cli
pusha
test
pop
imul
mov
lcall
jne
mov
jnp
mov
and
out
fs
mov
pushf
std
push
ret
cmpl
push
sbb
pop
divb
orb
sbb
es
in
push
aaa
dec
out
clc
cltd
mov
aad
outsb
cmp
rcr
lock
mov
in
test
mov
insb
mov
jno
mov
push
xchg
mov
cmp
lcall
add
cs
in
jb
nop
add
fadd
fadds
pop
lret
mov
dec
xchg
cmp
in
in
dec
sahf
adc
andl
inc
jbe
and
push
pop
sub
pop
adc
cwtl
test
mov
pop
bnd
es
pushf
clc
and
jnp
push
into
arpl
movsb
jp
shll
fidivrs
in
push
mov
pop
add
sbb
lcall
addl
mov
inc
cmp
dec
inc
sti
or
jp
sarl
test
or
xchg
inc
pop
adc
ljmp
add
int
xor
and
mov
push
jnp
aad
add
mov
xchg
xor
xor
mov
dec
sub
mov
mov
ljmp
xchg
push
mov
fs
clc
divl
inc
cmp
xchg
shll
pusha
out
scas
adc
add
xchg
adc
dec
add
call
dec
in
loope
sbb
loop
pusha
push
icebp
and
xchg
adc
rcl
mov
jecxz
dec
sahf
sbb
cmp
out
cltd
outsb
inc
inc
cmpsl
add
jbe
pusha
fisttpll
shrl
mov
adc
pop
pop
cltd
push
out
sbb
pop
and
lret
inc
mov
fdivr
push
in
ss
test
pop
sahf
mov
stos
xchg
int3
rcpps
mov
repz
xlat
pop
outsl
imul
das
xchg
pop
testb
jnp
pop
mov
jmp
push
mov
shll
and
fldl
xchg
lods
leave
out
jle
mov
imulb
repnz
movsl
or
mov
movsb
adc
pop
imul
mov
and
cmp
xor
adc
push
fildl
dec
addl
mov
mov
mov
sub
testl
lret
mov
aad
pushf
mov
ja
jb
and
rcrb
aaa
push
mov
xor
and
andl
sahf
jg
xchg
outsb
push
and
inc
mov
ret
addl
cs
push
fadds
sbb
mov
call
stc
push
or
ja
lret
cmp
cmp
lods
popf
stos
ror
je
xorl
jno
cwtl
or
scas
nop
outsl
xor
ds
and
or
cmpsb
mov
mov
lcall
fwait
or
dec
aad
xor
lds
cltd
arpl
cltd
cltd
icebp
mov
jp
call
mov
lock
flds
sub
inc
cld
cmpsb
pop
lcall
ror
jmp
bound
sub
lret
arpl
mov
xchg
lods
sar
jne
fwait
cs
and
mov
shlb
inc
loop
add
fadds
pusha
and
insl
jb
mov
lods
pusha
adc
cmpsb
pop
jecxz
stc
adc
mov
adc
pop
xchg
xlat
inc
shlb
arpl
jbe
sbb
cmpsb
js
add
sub
xchg
mov
cmp
call
mov
push
adc
decl
push
xor
cmpl
pop
testl
or
shrl
push
xchg
repz
les
sti
imul
shll
out
adc
and
jno
repz
push
ret
inc
dec
repnz
xchg
add
jno
arpl
cld
stos
fucomip
les
ret
mov
cmp
cltd
inc
hlt
insl
insl
mov
mov
dec
sub
jb
sub
ljmp
adcb
adc
lods
sub
or
test
inc
inc
jg
mov
in
lods
sub
mov
andb
push
sbb
sub
sar
adc
test
dec
jle
cmp
out
push
movsb
add
std
xor
inc
push
int3
lahf
aad
pcmpgtw
sub
outsb
sarl
push
inc
push
sti
stos
xchg
arpl
mov
pop
hlt
xchg
xchg
lods
test
test
mov
fldt
cmp
call
out
ficoms
push
in
test
sti
push
lds
or
sbb
pushw
sub
stos
test
popa
rcrb
fstl
xchg
or
ret
mov
adc
and
push
mov
cmp
cmpsl
cld
fists
sbb
loope
dec
loope
mov
mov
cltd
aas
insl
hlt
cmp
jecxz
es
outsl
mov
mov
test
scas
out
pop
loop
xchg
pop
push
mov
push
dec
call
sub
or
es
punpckhdq
dec
push
cld
bound
cmpb
jmp
leave
xlat
add
in
mov
jne
and
aad
dec
adc
dec
and
fistpl
xchg
icebp
adc
movsb
rorl
ret
out
xchg
out
and
jno
dec
fnstcw
or
aam
addr16
rolb
jecxz
dec
pop
hlt
mov
jp
ljmp
sbb
in
dec
and
cltd
mov
dec
rorl
pop
mov
enter
mulb
dec
add
outsb
ds
psubusb
fdivl
into
stos
dec
mov
out
jnp
shll
jne
push
jp
mov
out
xor
inc
insl
adc
lret
sub
leave
pop
mov
ret
jbe
gs
and
cwtl
inc
mov
sbb
mov
lods
and
xor
lds
aaa
mov
pop
outsb
mov
addr16
mov
sahf
xchg
fmull
loope
test
lret
dec
jno
daa
jg
bswap
inc
into
dec
or
out
xchg
stos
xor
sub
shrb
movsb
jl
xchg
and
lahf
jne
pop
mov
dec
or
add
mov
sbb
pop
pop
mov
push
mov
jno
add
adc
jle
sub
dec
lods
loope
jno
xchg
mov
jne
xor
xchg
repz
cmpsb
ds
cltd
int3
aam
mov
adc
push
mov
jnp
testb
in
orl
dec
xchg
mov
jl
ret
into
imul
dec
inc
jae
xchg
jns
lea
sub
and
mov
pop
stos
cli
stc
mov
sbb
add
sub
sbb
xchg
cmp
jg
or
sub
test
cmp
std
pop
loopne
jns
xchg
data16
js
mov
and
and
push
sbb
jbe
ss
mov
sbb
cmc
mov
cmp
das
sahf
insb
mov
sbb
mov
xchg
fisttps
pop
std
pop
sbb
lods
cmp
sub
bound
xor
in
les
pop
repz
push
fsts
dec
mov
jg
jmp
cwtl
pop
xchg
loope
push
cltd
jno
lods
les
mov
jle
ret
stc
call
shll
scas
cmc
aam
loopnew
add
dec
mov
dec
or
shlb
add
pop
push
pusha
ss
divl
mov
movsb
out
xor
pop
mul
cld
xchg
ljmp
dec
shlb
ret
imul
jmp
fcompl
mov
dec
dec
in
call
xchg
call
ja
pop
sub
cmp
sub
lret
dec
jae
fnstsw
xchg
mov
xchg
inc
leave
fstp
xchg
fimull
rclb
sub
pop
xchg
pop
push
pop
cvtdq2ps
lret
pop
cmp
pop
pushfw
mov
movsb
mov
fs
in
stos
sub
cmpl
sarb
sbb
fldt
fistps
cmp
jp
popf
cmp
ret
inc
mov
sbb
mov
nopl
insb
int3
pusha
xchg
add
jp
daa
and
stc
add
mov
push
mov
cmovo
pop
and
xor
outsb
cmpl
pop
imul
jle
push
aaa
fldcw
lock
in
or
cmpl
or
sahf
sbb
dec
aad
lds
sahf
test
into
out
pop
ret
lcall
arpl
popa
and
dec
jmp
fmul
jb
daa
enter
mov
cs
ret
lock
lret
jp
sbb
addr16
out
push
inc
in
pop
adc
mov
jmp
mov
out
push
xchg
jecxz
adc
xor
push
jle
aad
dec
mov
mull
ds
mov
data16
mov
jb
scas
les
and
pop
scas
mov
arpl
pop
and
xor
fnstcw
adc
dec
mov
inc
call
mov
xchg
pop
xor
in
sahf
ljmp
bound
cmp
sbb
out
outsb
pop
test
add
in
adc
in
inc
pop
and
mov
sbb
pop
out
enter
out
push
inc
adcl
rolb
test
mov
mov
xchg
adc
int
and
lahf
mov
cmp
adc
push
mov
lret
data16
inc
repz
orb
dec
sub
mov
lahf
dec
mov
ret
nop
mov
dec
stc
jo
cmp
cmpsl
pop
mov
adc
inc
sbb
cmc
sub
mov
lods
jne
mov
call
imul
scas
icebp
iret
mov
into
sbb
outsl
fcmovb
arpl
mov
inc
rcr
sub
sti
imul
sti
das
xor
pop
mov
pop
sub
add
jmp
loope
out
mov
ret
xchg
test
ljmp
iret
ret
or
xor
lock
jae
ss
jns
pusha
mov
jge
push
stc
daa
pop
and
push
xchg
jp
cmp
add
test
add
xchg
aas
mov
jle
sahf
push
and
xchg
pop
ja
leave
cmp
jno
movsb
or
rorb
jl
test
sbb
out
out
lock
in
mov
push
inc
bound
ret
imul
or
pop
fs
jne
dec
pop
jl
add
jle
out
cltd
push
scas
es
mov
cs
shrb
repnz
movsb
xchg
mov
adc
leave
inc
push
loopne
jle
push
insl
jmp
push
lret
xor
sbb
pop
xchg
dec
ja
pop
and
add
out
fs
mov
mov
cmp
cmpsb
sahf
scas
mov
test
scas
sbb
mov
outsb
push
psrlq
bound
loop
sbb
fildll
jmp
imul
xchg
sbb
mov
pop
sbb
repz
mov
push
cmp
hlt
sub
out
sahf
out
pop
add
shr
rclb
ror
popa
cmp
pop
fistpl
xchg
sub
push
lea
je
inc
and
loope
popf
pushf
or
mov
enter
push
clc
push
addr16
int
or
popf
movsl
ret
mov
in
ljmp
fsts
in
pop
ljmp
stos
mov
add
cmp
mov
jb
lods
pop
test
lods
test
xor
lret
leave
sub
fcomi
roll
inc
ljmp
stos
cmp
aas
dec
sbb
push
gs
xor
subl
add
dec
xchg
ret
out
add
imulb
or
sub
or
cmpsb
mov
loope
push
pushf
hlt
ja
roll
and
nop
or
stc
test
lcall
xchg
dec
xchg
loopne
lret
mov
inc
mov
jne
sbb
cltd
jns
movsl
xchg
xor
mov
hlt
gs
sti
cmp
add
stos
add
lahf
push
sub
cmc
cmc
cmp
mov
xchg
push
outsb
jns
dec
insb
mov
mov
mov
add
jnp
jno
xchg
push
sti
fs
ljmp
les
int
and
lods
and
das
mov
jae
sub
adc
int3
fldl
xchg
in
mov
sub
xchg
cli
mov
pop
dec
mov
cld
ret
sub
daa
notl
inc
xchg
jb
test
add
sbb
sti
push
xchg
sub
jg
shll
add
loope
les
mov
and
std
jnp
mov
cmpsl
jg
xor
xor
std
cmp
fwait
xor
sub
mov
rcrl
sbb
adc
xlat
or
ljmp
imul
xchg
aas
stos
mov
in
insb
adc
pop
pop
adc
add
and
cs
cli
lods
pop
mov
and
or
xchg
mov
insl
push
dec
aam
jne
ds
push
sbb
pop
adc
arpl
lock
hlt
das
and
mov
lock
fdivrs
int3
mov
addr16
mov
sti
ficoml
jae
mov
mov
pop
in
pop
int3
dec
jl
push
sub
mov
addr16
mov
sub
cmpb
cld
test
sub
inc
jl
std
jl
jg
loope
andl
icebp
sub
inc
push
lret
dec
cmc
mov
xchg
ss
std
gs
mov
sbb
cmp
daa
adc
push
lea
push
mov
fiadds
shll
jle
adc
jp
popa
pop
and
or
mov
popa
aaa
loopne
push
jns
dec
cltd
push
call
sub
pushf
push
cmp
or
std
inc
xor
mov
push
sub
sub
sbbl
daa
in
lods
xor
pop
mov
loopne
dec
sub
popa
or
push
add
subl
das
jg
mov
pusha
adc
js
push
sbb
mov
sbb
lcall
bnd
fisubs
sub
sbb
fsubl
push
and
movsl
push
andb
pop
repz
lret
popl
push
mov
clc
dec
and
ror
cli
hlt
or
pusha
or
loop
imul
call
sub
leave
dec
jl
lret
movb
pusha
loopne
scas
mov
adc
iret
xor
adc
sbb
sub
ss
mov
xor
ret
daa
int
test
sub
jb
dec
xchg
aam
jmp
add
add
insb
in
add
outsb
pminub
fidivrl
fcmovbe
shrl
or
sub
dec
loopne
inc
inc
testl
sbb
data16
test
jbe
cmpsb
iret
jne
daa
xchg
aaa
aaa
and
add
out
sbb
lds
nop
sbb
jo
or
fiadds
or
popa
sbb
rcrb
xor
fcompl
mov
mov
dec
int3
mov
sub
call
sahf
enter
out
dec
or
ret
sub
ficoml
popa
loopne
fmuls
stos
dec
lahf
outsl
add
mov
mov
outsb
inc
mov
sbb
push
pop
cmpsb
inc
or
ret
aas
std
sbbl
add
popa
cmpsl
lock
xchg
mov
xchg
mov
xchg
cmpsb
dec
adc
loop
int
sahf
sbb
jge
pop
bound
in
sub
das
jp
xchg
cltd
cmp
cmc
jl
jmp
loope
shl
rcrb
sub
adcb
sub
adc
xchg
mov
jne
inc
lods
mov
scas
lods
roll
jnp
xor
test
leave
ret
mov
insb
xchg
inc
dec
test
js
dec
ror
inc
aad
sub
stos
sbb
mov
clc
inc
pop
sub
fdivl
pop
sub
push
stos
pop
dec
cmpsl
pop
leave
dec
mov
pop
mov
pop
out
fdivrp
push
bnd
loopne
xor
jnp
fstpl
loopne
jle
sbb
imulb
cmc
mov
aas
repnz
dec
lcall
nop
imul
test
fisubs
lret
inc
inc
jmp
faddl
mov
cmpsb
sub
subl
jp
add
cmp
cmp
inc
and
jge
sub
cs
aam
xchg
jbe
std
imul
pop
sahf
jno
pop
mov
xor
push
sub
nop
inc
xchg
add
sbb
cmp
ss
jmp
push
add
add
xorb
rol
jge
mov
cwtl
ret
xchg
sbbl
add
mov
addr16
and
cmp
dec
lret
sbb
clc
loop
adc
cmp
lcall
jecxz
mov
out
adc
je
or
popa
add
in
sarl
int3
addl
sub
addl
mov
cmp
mov
pusha
mov
loopne
push
mov
int3
and
jbe
aas
stc
aam
imul
das
mov
scas
popa
hlt
fnstenv
adc
out
sbb
clc
mov
dec
jnp
ss
adc
rcrb
ret
sbb
pop
lods
jne
ljmp
pop
pop
and
mov
cmpsb
dec
movsl
out
add
lret
sbb
into
mov
and
rorb
cmp
mov
aad
pop
mov
scas
push
ja
sbb
cmpsb
sub
arpl
cwtl
sbb
and
mov
push
jge
imul
cmpsb
xchg
jecxz
mov
mov
lcall
cmp
jp
outsl
adc
mov
leave
outsl
and
mov
sbbb
hlt
js
mov
sbb
test
pop
sbb
push
push
dec
mov
dec
cmp
push
aad
fistl
inc
mov
push
pop
icebp
mov
jbe
push
addr16
xlat
mov
aas
int
sub
cs
rorl
in
cmc
mov
fdivs
ret
int
aaa
push
and
scas
fnstenv
ljmp
nopl
jne
scas
and
inc
cmp
fadd
loopne
sub
xor
sbb
mov
rorl
jb
je
cli
repz
sub
icebp
aas
push
pop
push
xor
ss
and
fistl
jl
jns
movsl
xchg
cmp
rolb
ret
or
inc
or
stos
loopne
mov
mov
add
iret
cltd
lcall
pop
shll
out
jmp
sub
repnz
pusha
js
jno
inc
push
xor
addr16
cmp
add
das
sbb
dec
or
outsl
sbb
push
out
pop
pop
pusha
adc
or
dec
outsl
iret
ja
dec
mov
mov
pop
cld
fwait
mov
shr
xchg
jmp
insl
cmp
stos
enter
mov
jb
pop
test
fisttpl
leave
incb
loope
filds
test
andl
sbb
pop
fsts
insl
js
cmovb
cmp
and
shll
add
mov
xchg
roll
shll
leave
jb
jle
inc
jp
mov
xchg
bound
mov
mov
add
mov
test
hlt
addr16
mov
xchg
push
je
dec
icebp
cli
inc
xchg
adc
flds
stc
or
mov
nop
xor
sbb
rclb
cmpl
xor
cmp
idivb
lret
add
xchg
shlb
sbb
xor
hlt
add
or
mov
jmp
pop
pop
fs
inc
xor
rolb
pop
jns
lret
mov
sub
dec
or
xor
xor
inc
ret
xchg
inc
pop
pusha
or
jns
mov
mov
inc
lds
in
cmpsb
into
rorb
mov
fwait
jns
push
lock
xor
sub
les
inc
popa
sbb
mov
fdivs
pop
or
ror
jecxz
insl
cmpsb
jae
pop
pushf
es
imul
fsubrl
sub
xor
roll
mov
mov
add
mov
lds
push
mov
pusha
je
jg
fidivl
adc
jnp
cmc
in
dec
into
int3
out
ss
call
imul
add
mov
arpl
cmpsb
dec
mov
pop
lods
stos
leave
sahf
jg
mov
gs
jg
rorb
in
movsl
cs
sbb
pop
inc
mov
jae
mov
call
and
mov
xor
cli
add
imul
xor
xchg
sbb
cltd
js
sarl
jae
sahf
pop
jne
movsl
outsl
push
mov
fimull
cmp
sbb
ret
jb
xor
movsb
or
outsb
sti
test
inc
mov
sti
push
movsb
mov
clc
or
in
mov
loop
mov
and
loope
jle
inc
add
xchg
jmp
out
xchg
push
loopne
push
pop
push
int
fdivrl
adc
into
popf
mov
xchg
dec
lods
push
add
pop
cli
data16
scas
imul
loopne
jg
lea
xor
mov
adc
xchg
test
adc
loope
in
sti
lods
lahf
inc
push
and
xor
in
mov
fisttpl
inc
xchg
mov
outsb
cltd
es
and
lods
push
sbb
aas
inc
imul
insl
push
aam
pop
imulb
testb
bound
xchg
mov
cmc
xorl
push
xor
mov
xor
fdiv
add
cmp
add
mov
xchg
sarb
xor
lods
or
ret
test
xchg
sbb
cmc
lea
and
xor
xor
cmpb
dec
pop
repz
iret
stc
xchg
push
test
add
xlat
xchg
data16
mov
mov
in
jle
inc
in
mov
pop
daa
mov
jnp
out
mov
aad
add
fwait
and
xor
mov
push
pop
subb
notb
mov
out
fcompl
ret
xchg
lret
stos
jp
pop
lods
lret
sbb
sbb
jo
out
push
lods
or
aas
pop
mov
aas
and
jb
cmpsb
aam
push
add
data16
cmp
jge
aaa
jnp
dec
mov
aad
imul
int3
cs
test
mov
xchg
adc
bound
lds
pop
push
xor
aam
cli
inc
in
push
add
sahf
inc
mov
xchg
clc
fwait
and
icebp
adc
cmp
add
into
adcb
adc
int
in
sub
xor
rcl
fisttps
or
lret
sarl
aam
int
xchg
dec
pop
pop
pop
push
mov
int3
xor
or
stc
mov
xchg
fsubl
jle
mov
mov
fdivp
test
scas
and
mov
xchg
rcrl
loop
add
push
cmp
pusha
cmpsb
mov
test
push
loop
and
ret
mov
stos
pushaw
data16
loop
inc
mov
and
test
test
dec
movsb
mov
inc
fstpt
and
mov
movsb
mov
and
xchg
pop
pop
mov
inc
dec
sub
je
aaa
dec
and
mov
fwait
jbe
cmp
fildll
dec
and
cld
xchg
lock
sbb
pop
add
and
pop
popa
dec
imulb
xor
and
dec
fmull
imul
clc
xor
icebp
mov
lea
sbb
es
dec
or
idiv
out
mov
jecxz
push
xor
jecxz
fisubrl
in
or
mov
add
and
dec
lock
inc
jl
pop
movsl
ds
scas
adc
imul
es
mov
out
loope
cmp
test
clc
add
jae
in
jle
sbb
mov
jbe
or
adc
fmuls
mov
mov
add
pop
mov
cmp
scas
outsb
mov
dec
jb
fs
jne
movb
outsl
test
mov
clc
inc
pop
lock
or
xor
scas
or
push
xor
lret
mov
xor
push
iret
xchg
iret
push
push
sub
mov
sbb
push
sbb
jno
adc
pusha
sbb
xchg
add
cmc
or
add
stos
fidivrl
pusha
cmpsl
hlt
rcrl
sub
mov
cltd
jns
inc
mov
push
lret
push
shrb
test
clc
push
ja
int
leave
dec
frstor
je
pusha
std
ljmp
jp
adc
cmpsl
std
pop
sbb
pop
mov
jp
pop
push
push
mov
pop
jbe
data16
add
pop
or
push
mov
push
dec
add
sbb
inc
test
outsl
pop
fisubl
or
cmp
xor
xchg
add
ret
jmp
xchg
popl
decl
pop
mov
pop
xorb
ret
adc
sti
fstpt
test
cmp
data16
adc
cmc
sub
cmp
rorl
adc
sbbb
lock
mov
imul
sahf
jg
out
push
and
and
or
negl
loopne
push
test
jns
mov
fwait
xchg
filds
rol
outsb
cwtl
dec
jns
mov
imul
xchg
and
inc
or
jmp
adc
jle
push
and
in
js
jge
push
sub
xor
stos
mov
in
decb
bound
dec
sub
or
jecxz
sbb
aad
js
stc
add
mov
iret
jmp
ljmp
mov
das
lahf
ljmp
loopne
movsb
dec
mov
mov
add
shl
push
and
frstor
adc
aaa
loopne
fists
mov
ja
dec
in
and
xchg
push
out
sarl
cmpsl
in
mov
cmp
adc
scas
push
mov
inc
adc
imul
adc
xchg
testb
ds
shr
add
jbe
cmp
mov
in
popf
test
jne
add
sub
xor
mov
iret
fcompp
xor
mov
push
cmpsl
dec
arpl
and
ret
repnz
loopne
push
cs
pushfw
sub
ret
scas
fwait
call
push
cmp
outsb
pop
jp
lret
mov
outsl
sbb
sbb
mov
iret
push
int
sahf
out
mov
xchg
sahf
push
sub
imul
dec
test
lcall
popa
orl
mov
and
and
insl
mov
jmp
pop
xchg
ss
std
shll
lock
in
mov
cmp
pop
cmp
cmpsl
mov
xchg
mov
pop
and
fisttpll
sbb
cmovb
lds
cmc
adc
lahf
mov
sbb
call
fbld
cmp
movsb
fs
mov
scas
add
lret
push
es
mov
hlt
bound
negb
pop
push
or
mov
mov
clc
jmp
and
mov
xchg
ss
int3
or
xlat
in
push
pop
or
and
xor
data16
xchg
lds
sti
jge
fldenv
add
jge
pusha
pusha
lahf
adc
scas
popa
push
insl
cltd
mov
fildl
or
mov
and
rcrl
ss
cmp
sub
mov
fdivs
jp
out
push
jb
repnz
lcall
pop
cmp
into
outsb
repz
jl
dec
imul
adc
add
and
jns
cmp
outsl
inc
ja
jmp
iret
test
cmpsb
mov
repnz
or
loope
mov
add
mov
addr16
push
adc
scas
rorl
out
nop
ret
sbb
mov
test
jnp
lcall
fld
adc
test
fs
insb
imul
jbe
cmp
ss
repnz
out
movsl
out
int
or
in
jecxz
pmaxsw
add
xor
sub
add
jg
pop
scas
mov
mov
imul
aaa
push
sbb
xadd
push
xor
sbb
icebp
ljmp
xchg
inc
inc
arpl
daa
mov
jae
sbb
loope
and
out
outsb
scas
and
popa
add
stos
fwait
or
jp
repnz
push
xorl
repnz
sbb
lds
cmp
mov
test
mov
ja
xor
push
jnp
lahf
mov
mov
shrb
stos
outsl
xchg
sahf
iret
pop
ret
pop
or
lret
xchg
dec
cmpsb
cli
clc
int
pop
xchg
ret
add
aaa
fnstenv
test
call
test
jbe
das
or
xchg
mov
xor
or
cmp
ljmp
pop
cmp
pushf
jg
mov
cmp
jge
jle
mov
fwait
add
jecxz
fildll
push
in
inc
xor
daa
movsl
lcall
mov
cmp
lret
jmp
and
les
incl
and
lods
insl
scas
xor
icebp
adc
das
xor
jmp
push
cmpsl
mov
inc
pushf
xor
push
ror
xor
adc
xchg
xchg
jno
push
jns
imul
fidivrl
add
faddp
jle
shl
out
mov
pop
xchg
cwtl
repnz
cltd
sbb
inc
push
lods
mov
out
fadds
out
subb
cmp
push
daa
sub
dec
jns
dec
ret
cld
inc
call
orl
hlt
pop
jmp
xlat
sbb
lock
jmp
lret
lock
dec
shlb
cmpsb
jo
pop
mov
jge
or
inc
out
mov
adc
daa
pusha
lret
outsl
arpl
sbb
stos
aam
cli
jle
adcl
dec
loop
jo
scas
jno
cmp
imul
lods
jge
pop
inc
popf
fnsave
pop
imul
sub
movsl
xchg
add
or
jns
cmpsl
ret
inc
dec
pop
lods
xchg
dec
push
aas
imull
js
push
dec
mov
test
cs
cmp
push
jbe
cwtl
call
fisubs
mov
hlt
loope,pn
mov
mov
or
push
out
mov
xor
jle
jle
cmc
jo
int
out
dec
cld
movsb
in
push
add
fdivrl
aaa
push
out
int3
outsl
mov
xor
xor
stc
jle
mov
sub
sub
cmpl
jg
mov
xor
push
mov
mov
gs
lea
fwait
or
out
in
imul
xchg
out
out
fistps
imul
test
adc
pop
mov
int
pop
cmpsb
xchg
scas
stos
jns
int3
or
ret
mov
pop
or
xlat
fisttps
les
inc
lret
cmpsb
movl
push
out
loopne
and
jae
lahf
cmc
pop
orl
call
mov
out
mov
or
cmp
outsl
call
std
push
push
cs
add
add
push
sub
or
lock
out
jb
imul
out
aaa
cmp
insb
ret
jp
pop
lock
test
push
mov
lock
mov
jo
loope
negl
jo
jg
stos
mov
inc
shll
pushf
fcomps
shll
mov
sbb
push
mov
push
jo
pop
ds
pushf
cld
mov
mov
push
pop
testl
push
or
jns
mov
cmc
mov
ljmp
dec
ds
test
ja
aaa
cwtl
cmc
add
pop
shlb
in
cs
inc
adc
cli
in
lret
jg
adc
lds
jge
std
outsl
sbb
lods
sbb
pop
cmpb
mov
dec
fisubrl
or
movsl
clc
push
lahf
out
lret
in
jmp
mov
cli
mov
xchg
pop
inc
sbb
mov
lods
js
mov
pop
test
mov
jg
xchg
mov
and
jmp
add
shll
lea
dec
and
cmp
add
sub
mov
cltd
outsb
test
movb
clc
enter
xorl
pusha
mov
inc
mov
inc
call
xor
xchg
add
cmp
pop
add
in
cwtl
cmp
nop
push
bound
push
dec
mov
mov
adc
scas
cli
aam
fs
lea
jnp
lret
clc
sbb
jecxz
push
loopne
push
pop
jl
push
inc
xor
sub
sub
dec
dec
mov
mov
cmc
fisubrs
sbb
iret
add
fmull
pushf
sub
push
in
pop
addb
pop
sbb
pop
ficoml
xor
outsb
lods
fmulp
mov
leave
decl
dec
mov
dec
scas
stc
and
ss
xchg
enter
mov
dec
xchg
sub
and
rol
xchg
or
loopne
shrl
cmp
lret
scas
dec
rol
sbb
test
add
lds
stos
jmp
xchg
or
stc
mov
sbbl
out
inc
adc
push
vorps
push
hlt
int
test
xlat
dec
je
scas
jecxz
test
jmp
iret
fidivrl
mov
mov
push
shll
pop
shlb
daa
push
add
push
pop
fmul
push
stos
cmp
gs
insb
pop
lcall
xchg
inc
add
or
out
mov
popa
inc
insb
ret
sbb
mov
jg
mov
push
push
dec
pop
shlb
shll
mov
fwait
test
shlb
fisttps
dec
adc
dec
xor
outsb
inc
call
push
pop
add
arpl
stos
adc
outsb
mov
out
sbb
inc
lock
cli
xor
jnp
xchg
fistps
inc
test
mov
inc
dec
pop
cmc
and
mov
pop
ljmp
into
mov
mov
pop
jl
andb
fdivr
add
cli
shlb
aaa
aaa
icebp
inc
movsl
fmul
inc
lods
test
data16
bt
inc
bound
in
negb
mov
mov
lret
jns
pop
push
jb
imul
xor
iret
xchg
ja
mov
out
loope
and
sub
add
dec
push
int
or
jbe
xchg
jg
arpl
addb
daa
les
adc
or
jno
jb
es
jne
jle
int3
sti
jp
mov
fists
mov
inc
xlat
in
dec
in
adc
mov
and
aaa
sbb
inc
mov
lret
aad
les
js
daa
or
pop
daa
push
mov
cmpl
or
fnsave
mov
in
into
mov
or
negb
xchg
adc
push
aad
and
cs
dec
mov
mov
xchg
test
cmpb
dec
jecxz
sbb
cmp
fcompp
dec
add
mov
bound
adc
and
add
out
repnz
pop
dec
lds
xor
popa
movsb
scas
xchg
daa
cmp
out
push
loopne
xor
imul
inc
inc
pop
adc
fsubrs
xchg
jo
cmp
call
sbb
dec
sti
scas
mov
iret
mov
or
scas
mov
push
mov
jae
adcl
pop
pop
add
rcrl
add
pop
lock
mov
push
sub
xor
jno
pop
inc
mov
call
and
mov
into
cmp
aas
xchg
cmpsl
pop
aaa
insl
cwtl
pop
pop
mov
push
test
lock
lea
clc
cld
push
rol
push
cld
pop
xchg
test
inc
and
mov
js
pop
lret
mov
jne
jl
addb
push
cmpsb
push
add
inc
jmp
mov
ret
call
dec
mov
cmp
je
xchg
dec
inc
bound
sbb
shl
sub
xchg
sub
push
in
inc
sarl
ds
test
mov
das
test
mov
add
dec
or
xchg
adc
xchg
subb
leave
pop
popf
dec
jecxz
int3
data16
cmpl
subl
js
push
mov
mov
sub
inc
movsb
dec
cmp
xchg
dec
xchg
and
cmp
pop
xor
cwtl
xchg
inc
push
inc
mov
pop
dec
mov
xchg
imul
add
cmp
lds
cmp
xor
mov
xor
pop
xchg
into
leave
ds
pop
push
fists
imul
nop
pop
mov
jne
xchg
cld
inc
dec
jp
repz
popa
mov
adc
jbe
lea
int
sub
int
xchg
bound
pusha
push
movsb
lock
sbb
cwtl
sbb
mov
jge
sarb
xchg
xchg
push
cmp
push
les
out
enter
aas
mov
ret
dec
cmp
dec
cld
jns
gs
cmpsl
aad
dec
jmp
mov
lock
jno
mov
mov
imull
dec
jge
push
ja
jo
lret
data16
outsl
clc
icebp
bound
dec
add
movsb
jg
sbbb
jg
lcall
hlt
cli
movsl
and
xor
mov
and
push
dec
dec
arpl
jp
lea
jp
xor
cwtl
decb
es
add
pusha
imul
std
jecxz
loopne
pop
dec
xor
sub
movsb
push
pop
xchg
outsl
rorb
dec
xor
fsts
add
fdivr
lods
sbb
cltd
sbb
dec
mov
fcoml
inc
xorb
insl
stc
std
add
cld
fnsave
inc
xor
and
loop
push
or
add
addl
pop
and
sub
cmp
sbb
dec
jbe
dec
xor
add
mov
push
fistpll
popl
fiadds
cmp
xor
jg
sti
loop
pop
mov
lret
dec
out
lahf
outsl
les
pusha
nopl
stos
add
mov
cmp
push
or
sub
loope
hlt
bound
stc
repz
clc
std
jne
pop
out
jbe
jno
cmc
ds
xchg
mov
inc
movsl
loopne
sub
gs
dec
xchg
inc
outsl
inc
xchg
inc
mov
roll
xor
or
movsb
xor
add
dec
and
xor
and
adc
lds
scas
inc
mov
aas
xchg
jecxz
sbb
mov
lahf
sar
stos
mov
popf
sbb
mov
cmp
mov
adc
mov
dec
jge
adc
dec
out
or
rorb
add
addr16
jg
sbb
mov
mov
sub
jbe
or
test
mov
ds
sub
dec
push
inc
mov
es
jo
add
adc
xor
xchg
test
fdivr
pop
aas
add
enter
test
dec
lret
jno
mov
push
mov
bound
es
jnp
push
clc
cmp
fisttpll
lahf
or
pop
push
inc
jl
push
or
fwait
cmp
push
arpl
aad
mov
test
push
mov
imulb
pop
cmp
xor
jns
imul
repnz
iret
popa
adcb
inc
mov
aaa
rcr
mov
add
xorl
shlb
ret
or
aas
cmp
es
add
push
js
ret
pop
lret
ret
add
or
mov
inc
insb
cmp
push
add
jno,pt
js
adc
rorl
push
mov
inc
pop
xchg
lock
adc
xlat
repnz
ret
mov
stos
mov
stos
fld1
call
sub
sbb
dec
ret
fs
mov
shlb
lds
mov
xchg
mov
xor
xchg
sahf
sbb
rcrl
mov
fimull
cmc
sbb
fcmovbe
pop
or
inc
imul
sub
lcall
lods
movsl
jl
sbb
jp
sub
icebp
ficompl
push
ss
dec
das
outsl
add
mov
or
imul
hlt
mov
mov
add
out
or
xchg
js
mov
xor
fmul
inc
mov
pop
cmp
push
fldcw
std
push
jp
and
mov
movl
cmp
stc
fildll
fisttpll
das
adc
enter
daa
gs
sbb
ret
roll
inc
arpl
ja
rorb
mov
outsl
testl
or
test
sahf
pop
mov
aas
jge
jge
sub
and
outsl
in
adc
loopne
out
xchg
mov
mov
cmp
jnp
rclb
in
shll
and
loope
adc
adc
mov
jo
sub
pop
in
or
mov
out
lods
dec
lcall
pusha
mov
ror
pop
jo
push
push
and
mov
dec
push
mov
inc
gs
push
rorl
stos
daa
xchg
add
jno
lret
xchg
jno
movsl
sbb
pusha
sub
out
shlb
inc
cmp
inc
scas
fdivs
ljmp
push
lock
repnz
call
test
lcall
mov
pop
jl
dec
push
mov
and
mov
or
xor
das
push
data16
xchg
rolb
pop
mov
xlat
test
hlt
mov
cmp
jne
push
or
testb
jmp
das
jns
lahf
imul
test
mov
movsl
fdivl
pop
add
and
fldl
cmp
or
adc
or
mov
repnz
movsl
loop
outsb
inc
add
push
push
push
stos
sbb
and
in
or
loope
sahf
scas
iret
in
xor
shll
xchg
out
hlt
mov
ja
je
mov
add
ficompl
mov
fsubs
xor
test
xchg
inc
cld
lcall
xor
jo
mov
mov
mov
jbe
or
pusha
xchg
ret
add
lock
pop
iret
icebp
add
mov
call
pop
ljmp
push
jae
push
jb
les
les
jb
push
push
fsubr
and
mov
in
testb
movl
jge
mov
pop
fs
mov
xor
shlb
push
push
or
and
mov
inc
push
inc
jp
stos
cwtl
imul
aas
sub
out
mov
pop
out
mov
sub
rcll
pop
and
xor
loope
je
repz
mov
mov
popf
and
imull
in
psrad
add
inc
fs
movsl
push
mov
stos
lock
sub
adc
bound
mov
out
or
sbb
addr16
icebp
mov
pop
xchg
dec
call
stc
dec
jg
mov
gs
pusha
sbb
in
es
hlt
add
incb
mov
sub
hlt
dec
push
ljmp
xchg
xchg
cld
imul
jmp
mov
pop
mov
xchg
mov
add
add
insl
mov
xchg
call
ret
xor
and
xchg
adc
lea
enter
ja
xchg
pop
adc
jge
out
es
dec
sbb
add
jb
popf
adc
repz
jle
test
scas
push
ficoml
addr16
stos
xchg
mov
mov
xor
inc
adc
int
and
dec
jae
dec
and
sti
cmp
mov
aam
mov
and
jae
push
mov
jnp
push
push
or
fmul
int3
adc
mov
bswap
loop
js
out
fsubrl
and
dec
mov
out
mov
ret
mov
repnz
push
cs
in
jmp
test
add
mov
out
xchg
and
out
sbb
popf
sub
adc
loope
sbb
add
repnz
jbe
add
adc
xchg
test
mov
and
stos
das
mov
aam
mov
mov
cmp
jno
sub
mov
rolb
adc
jge
and
add
push
leave
push
sbb
mov
dec
fsubrp
iret
xor
sbb
imul
jg
lock
insl
sbb
dec
nop
xor
cmpsl
lods
mov
sub
cmp
mov
test
jbe
mov
mov
loopne
push
sub
inc
sbb
in
sub
ret
lds
inc
mov
jg
mov
rorb
inc
adc
adc
mov
sbb
aaa
cld
dec
push
xor
push
lret
inc
push
iret
iret
sarl
xchg
sub
dec
sub
inc
xor
jmp
fdivs
sbb
mov
imul
repz
daa
scas
test
jae
and
ja
fldcw
jge
cmp
push
xor
outsb
loopne
mov
pop
call
aaa
and
je
pop
sbb
cld
mov
shlb
adc
fcmovnbe
jl
cmpsb
jg
and
outsl
xchg
inc
cmpsb
mov
pop
fbstp
dec
sub
movshdup
mov
sbb
jo
cmpsb
mov
or
orl
addl
je
add
mov
addr16
push
lahf
xchg
mov
data16
pop
sets
xchg
and
pop
bts
xor
in
cli
nop
imul
mov
jne
inc
pop
jg
arpl
xchg
mov
or
lret
jecxz
push
fdivs
lret
je
mov
mov
adc
inc
sbb
leave
pop
out
mov
jb
ja
inc
pop
or
add
mov
mov
cmp
mov
std
pop
insl
adc
sub
dec
in
test
stc
cld
repz
in
sub
aaa
add
push
jae
sub
push
xor
aaa
xchg
das
jmp
xor
test
rorl
xchg
add
push
into
push
sbb
xchg
inc
hlt
xor
jle
jbe
jbe
push
jb
orl
xor
daa
dec
pop
ljmp
aad
stos
mov
inc
adc
sub
inc
test
in
inc
mov
lds
push
arpl
cld
jns
shr
addr16
loop
sub
cltd
sahf
and
xor
sub
mov
or
cmp
in
pop
add
add
out
xor
sub
and
mov
xor
mov
fsubrl
call
xchg
push
push
xchg
movsl
das
loope
data16
or
cltd
ret
leave
ds
mov
mov
or
in
jne
sbb
and
adc
lock
push
int
or
xor
movsl
dec
pop
dec
inc
adc
repz
rolb
mov
sti
sbb
xor
inc
lret
je
push
jmp
sahf
lret
stc
xchg
ss
in
je
shl
sbb
pop
sar
inc
pop
in
test
scas
mov
fwait
std
pop
and
adc
sti
movsl
and
add
sbb
xor
dec
mov
push
popa
shrb
inc
call
dec
enter
or
enter
cs
je
push
mov
jb
pop
stos
ljmp
mov
pop
jnp
les
xchg
mov
inc
inc
xchg
icebp
dec
and
repnz
into
mov
scas
stos
inc
ds
jl
inc
stc
adc
inc
pop
sub
cltd
push
add
xor
ss
dec
fadd
mov
mov
pop
dec
out
sahf
jmp
popf
movb
mov
push
and
fisttpll
ret
push
or
or
add
xchg
fistl
dec
stos
or
in
out
ficompl
mov
pop
jne
mov
dec
jl
add
adc
es
jge
pop
add
pop
xchg
sub
into
xchg
addl
cmp
imul
push
xor
mov
stos
testb
test
jmp
mov
pop
stc
inc
lret
adc
stos
pop
mov
sbb
sub
sbb
mov
add
popa
les
sbbl
pop
cmpsb
pop
dec
or
aam
stos
imul
inc
das
test
mov
jle
xchg
outsb
inc
pushf
inc
inc
ja,pn
xor
push
and
mov
mov
sbb
ret
sbb
pop
in
gs
fs
shrl
call
or
loope
dec
xor
lcall
adc
add
mov
pop
fisttpll
addr16
int3
cmpsl
mov
and
push
and
fildl
or
stc
fcompl
pushf
mov
imul
mov
jns
rorl
adc
rcrl
xchg
mov
add
ljmp
mov
std
mov
pop
ljmp
push
arpl
jo
push
sub
hlt
in
cmp
jns
jne
test
popf
daa
xchg
sbb
lods
or
adc
call
fcmovbe
push
aaa
sti
shrb
or
push
dec
mov
or
mov
pop
xor
jg
daa
aas
adc
xchg
out
nop
nop
hlt
movsb
fdivs
push
xor
pop
repnz
fwait
push
jnp
xlat
cli
jg
jne
jle
add
jle
mov
pop
mov
hlt
sbb
cmp
jecxz
arpl
scas
xchg
jns
lcall
iret
imul
mov
cmp
add
test
imul
and
xchg
aas
jb
xchg
mov
add
xchg
push
pop
cmp
in
mov
and
jns
jbe
dec
push
pop
ror
out
pop
ss
addr16
adc
stos
inc
test
cmpl
cmp
add
pop
shll
lock
sbb
inc
xchg
fs
cltd
pop
sti
or
mov
pop
add
inc
fs
ss
cmp
and
add
cmp
call
je
in
pop
mov
lea
push
mov
popa
mov
ljmp
jge
xchg
mov
dec
push
mov
jg
jae
cmp
push
lret
adc
sub
sbb
jecxz
pusha
sbb
mov
repz
and
cmpsb
pop
pop
lahf
sarb
testb
lret
sub
cmp
fistpll
jle
imul
pop
out
push
and
cld
and
rorb
ds
push
fucompp
addr16
rcll
faddl
sub
add
cltd
or
cmpsb
imul
out
push
xlat
andl
rorl
iret
mov
leave
cltd
scas
lcall
int3
add
pop
int
dec
orl
xchg
mov
push
fimull
jge
push
dec
shrb
dec
in
iret
dec
lock
dec
aad
ljmp
adc
daa
xchg
pop
jle
mov
dec
into
inc
cmp
push
mov
xor
out
jmp
pop
cltd
jp
adc
xor
pop
adc
or
cmpl
jle
ret
stc
and
clc
insl
cmp
dec
popa
fistpl
jge
shrl
mov
xor
in
mov
jle
xchg
rorl
out
xchg
xchg
adc
movsb
lret
hlt
cmpsl
insl
and
loope
icebp
push
popf
test
sub
data16
adc
xlat
mov
clc
pop
aas
lcall
loop
add
mov
aas
mov
mov
das
nop
into
lods
and
mov
sub
add
cmp
cmp
loop
dec
stos
adc
lahf
sub
in
inc
repnz
lret
mov
or
mov
mov
sbb
out
gs
add
mov
xchg
data16
int3
mov
xor
test
stos
pop
repz
push
push
cmpsl
jbe
int
xchg
or
pop
jg
sbb
push
mov
scas
icebp
leave
pushf
sbb
ret
gs
jle
jb
sub
gs
fisubrs
mov
mov
cmp
arpl
push
mov
sbb
add
pop
cld
repz
adc
hlt
jg
lret
mov
xor
push
lret
sti
stos
lds
in
xchg
ror
or
pop
mov
mov
pushf
push
adc
shr
call
cmp
rclb
xor
jp
mov
inc
dec
cmp
aad
cmpsl
jns
lcall
xchg
inc
int3
test
dec
cwtl
stos
ret
loope
push
hlt
inc
leave
sbb
mov
mov
popa
xchg
paddw
orl
stos
xchg
nop
icebp
cmp
insb
test
gs
sbb
xchg
arpl
cmpb
stos
jb
bnd
mov
jg
dec
fcomip
jne
cmp
cmp
sbb
into
je
repz
or
loop
pop
adc
fisubrs
jnp
pop
cmpsl
adc
sti
ds
mov
ds
fwait
mov
jo
push
or
or
adc
pushf
adc
and
dec
lock
mov
and
pop
jp
outsl
stos
out
lcall
jno
fldcw
das
adc
xchg
out
js
neg
arpl
ret
ror
inc
int
call
add
jle
pusha
movl
push
add
scas
sbb
out
ds
add
movsl
cli
int
aam
push
std
push
push
je
xchg
or
jnp
jne
sub
mov
cli
adc
sbb
push
push
popa
or
xchg
hlt
dec
mov
xchg
fisubrs
out
data16
lret
adc
dec
in
loop
sti
fildl
cs
outsl
es
stc
jae
stc
jle
lahf
inc
jns
mov
xchg
cmp
cmc
shll
std
out
jnp
sbb
mov
push
ss
fnsave
test
or
or
gs
adc
ret
sbb
pop
add
je
in
loope
fcmovnb
sbb
pop
into
test
mov
jg
popa
pop
aas
pop
lods
addr16
fdiv
mov
rol
mov
lods
push
bound
in
jne
imul
pop
movsl
mov
xchg
and
sbb
nop
ds
fnstenv
daa
sarl
roll
push
pop
outsl
out
mov
xchg
mov
std
or
ss
scas
xchg
addb
scas
xor
cltd
ja
pop
inc
xchg
aad
sbb
mov
push
add
xor
sub
pop
daa
ljmp
sarl
add
sbb
push
jmp
adc
inc
jl
ss
ja
sub
cmc
push
add
imul
lcall
arpl
mov
movb
popa
js
repz
xchg
pop
xchg
dec
mov
push
mov
es
clc
add
xor
leave
popa
mov
xor
jl
stos
stos
pop
mov
xchg
push
pop
jg
jae
push
in
xchg
addr16
mov
pop
push
mov
in
dec
and
mov
pop
mov
dec
stos
jnp
push
inc
pop
ds
shll
mov
or
arpl
inc
ja
sub
sbb
mov
mov
sarl
ljmp
xor
mov
je
cmp
clc
mov
rcrb
xor
jb
pop
dec
scas
jno
adc
enter
mov
jecxz
lahf
neg
mov
cmp
mov
push
or
adc
jo
xlat
cld
cmp
sub
scas
in
les
shll
push
sbb
outsl
ds
js
xlat
mov
cld
pop
xchg
mov
xchg
repnz
push
ds
xchg
pop
je
sub
sub
cmp
pop
mov
push
pop
jmp
sub
dec
jnp
sub
mov
pusha
repnz
stos
outsb
mov
cltd
lods
rolb
mov
sahf
inc
out
pop
xchg
cmc
ficoms
imul
or
cltd
leave
mov
mov
adc
popf
jnp
std
add
jb
test
out
sub
adc
push
sbb
xchg
addb
loope
mov
cmpb
gs
sub
int3
pop
fcmovnbe
xchg
inc
jle
mov
jl
pop
mov
xchg
test
popa
add
and
int
je
pusha
sbb
dec
mov
iret
mov
loop
add
je
ret
shrb
sbb
sti
lret
fs
rcrb
mov
dec
je
xor
cmp
or
push
movsb
inc
mov
outsb
bound
fildll
shl
out
inc
jg
cmp
mov
mov
ret
pop
add
cmp
or
insl
imul
cmpsb
cmp
mov
add
iret
test
addr16
jecxz
loopne
rorb
aaa
enter
xchg
pop
orl
mov
dec
sub
into
or
cmp
call
or
jl
pop
in
sub
ss
cwtl
cmp
sarl
mov
hlt
dec
push
jge
enter
add
sub
cmp
mov
sbbl
cltd
lret
mov
pusha
mov
ss
in
xchg
or
mov
aam
adc
outsl
addr16
cld
mov
cmp
lcall
cli
xchg
push
dec
cmp
lea
mov
xor
xchg
inc
or
int
add
and
mov
push
scas
js
dec
xor
sbb
pop
mov
cltd
push
stos
xor
jg
fldcw
adc
lcall
movsl
data16
xchg
enter
xor
cmp
ficompl
popf
mov
hlt
push
xchg
jge
cs
fisubl
scas
inc
cmp
aam
and
jne
or
cltd
lods
cmpsl
push
mov
push
mov
aam
jmp
mov
mov
nop
and
mov
dec
jo
push
lods
ficompl
idivb
into
nop
fcompl
icebp
jae
cmp
xor
xor
fs
jmp
jle
andb
ds
push
test
mov
clc
xchg
notb
xchg
daa
add
dec
xor
adc
dec
fwait
dec
add
cmp
aam
xor
jne
push
or
shl
bnd
cld
fs
mov
xchg
clc
xchg
sbb
std
shlb
lahf
push
movsl
pop
pusha
daa
push
aaa
test
inc
es
pop
xchg
ret
test
adc
jnp
inc
jnp
pop
std
shl
push
push
xchg
xchg
lret
lods
gs
sbb
push
xchg
mov
insb
arpl
in
mov
add
cmp
and
addr16
icebp
sub
and
pusha
adcb
sbb
lcall
mov
adc
xor
jp
xchg
testb
mov
out
ret
andb
mov
jmp
jecxz
scas
roll
std
les
xor
add
setns
pushf
repnz
mov
xchg
cltd
mov
in
fldcw
fadd
test
push
mov
in
inc
test
fistpl
adc
and
lret
insb
aas
test
ljmp
xchg
aaa
cmp
loope
lock
mov
stos
mov
and
insl
ret
push
sbb
xor
fwait
aaa
jns
xchg
mov
ljmp
push
jge
ds
add
jae
stos
in
xchg
aam
imul
in
pop
loop
fnstsw
add
fstpt
test
adc
mov
aas
jbe
push
icebp
mov
outsl
push
icebp
inc
jnp
adc
sbb
add
fildl
iret
cmpsb
jecxz
lods
test
add
loop
shlb
lcall
shl
jge
outsb
jp
aad
jmp
adc
enter
inc
divl
fidivrl
cli
adc
es
lock
xchg
filds
jne
in
push
std
mov
mov
in
jp
jp
fadds
xor
mull
fimuls
jbe
nop
adc
jecxz
std
adc
xchg
push
lahf
jecxz
cmc
stos
jo
xchg
jl
data16
inc
fdiv
add
jo
pop
test
and
pusha
notl
sti
aam
clc
xchg
mov
push
mov
push
mov
icebp
lret
pop
mov
add
mov
int
stc
mov
dec
gs
loopne
xlat
add
push
xchg
lahf
sub
mov
mov
and
push
aas
cmc
and
mov
mov
outsb
fldcw
jge
mov
jbe
sub
push
jp
imulb
fldl
inc
pop
ss
fnsave
lret
repz
mov
rcrb
imul
adc
adc
push
and
sub
imul
jno
rcr
sub
or
js
sbb
or
int
push
fwait
dec
cmpsb
out
jbe
add
je
shlb
js
adc
aam
pop
scas
inc
jl
mov
cmc
sub
fwait
in
addr16
popf
ds
sbb
xchg
jmp
inc
sbb
sti
cmpsb
idivb
pop
sbbl
dec
lahf
popf
mov
xlat
dec
xor
aaa
xchg
jns
aam
sub
sub
nop
mov
mov
xchg
adc
out
lods
pop
and
repz
mov
pop
cli
inc
xorb
xor
add
std
mov
and
mov
mov
movsl
lds
jae
shl
mov
mov
into
les
insl
pop
xchg
cwtl
and
cs
push
mov
rorl
into
sbb
outsl
clc
xor
sub
inc
ret
xor
scas
xor
sahf
sbb
adc
test
int3
add
xor
add
nopl
lock
inc
sbb
and
rcl
push
xchg
pop
cmpsb
ffree
mov
and
shlb
in
mov
ljmp
orb
out
dec
xchg
mov
aad
mov
xchg
mov
rorb
jno
ss
out
sub
add
jp
jecxz
and
movsl
cli
mov
cwtl
sarl
lock
push
ja
scas
mov
dec
jns
icebp
hlt
sbbl
insl
ljmp
adc
mov
sbb
jmp
mov
xchg
add
pop
xchg
int3
dec
shrl
pop
mov
in
mov
popf
jne
lods
jnp
dec
sti
sub
adc
test
mov
xchg
pushf
jae
rcrl
ret
mov
adc
in
mov
xchg
add
rol
mov
iret
xor
adc
mov
push
sbb
xchg
shrb
mov
mov
lahf
pop
subl
dec
sub
inc
bnd
faddl
pop
jecxz
ret
jl
enter
cmc
sete
test
add
adc
leave
cwtl
xchg
pop
mov
push
rol
dec
lahf
testl
pop
xor
daa
int
aad
jns
rclb
or
imul
lcall
dec
fwait
cmp
popa
adc
out
inc
mov
jmp
lea
ss
jne
insb
cmp
scas
mov
ja
cmp
inc
xor
or
push
add
gs
sub
jp
lret
not
sub
into
dec
arpl
mov
inc
fisttpl
mov
fs
jp
lea
and
xor
dec
aam
ret
dec
rorl
rolb
mov
cmc
pusha
in
sbb
xor
mov
mov
push
pop
adc
scas
and
ret
scas
or
shll
mov
cmp
adc
xchg
mov
imul
cmpsb
sbb
insb
fisttps
lret
in
iret
stos
pop
jg
jg
mov
xor
ss
cwtl
in
imul
and
stos
cmp
fldenv
cs
lods
std
sahf
in
out
push
mov
pop
fucomip
adc
inc
push
scas
xchg
jbe
push
int3
cltd
mov
xchg
mov
scas
sbb
movsl
push
jo
test
sbb
dec
cli
and
fcmovbe
jb
inc
dec
dec
mov
cs
fists
add
jo
sahf
pusha
jg
dec
outsl
inc
lods
imul
or
out
dec
loopne
stos
and
cld
xchg
enter
jle
lret
cmp
push
fiadds
and
pop
nop
sbb
inc
push
sub
cmp
stos
lcall
add
mul
dec
dec
fsubrs
sbb
add
push
shlb
sub
icebp
outsb
icebp
jns
cmp
cli
xchg
mov
int
pop
stos
jl
adc
sbb
xchg
fs
jns
adc
call
ds
loopne
jecxz
sub
cld
es
sbb
sbb
fildl
cmpsl
jle
mov
push
cmp
and
xchg
pop
ror
popf
sbb
in
or
ret
rorb
fistpl
jg
cwtl
jmp
cmp
inc
lods
ljmp
loopne
cld
testl
les
mov
lcall
popf
icebp
insb
das
jno
test
xlat
push
in
pop
clc
and
out
sub
leave
aam
and
aaa
je
gs
pop
leave
and
cmp
scas
mov
dec
cmp
lret
arpl
push
xor
pop
lea
cltd
jl
fidivrs
lock
mov
movsl
inc
popa
arpl
outsb
lret
enter
adc
inc
stc
mov
adc
or
popa
pop
shr
mov
in
je
fsts
sbb
pusha
test
fisttpl
adc
xchg
or
mov
nop
lret
scas
call
scas
xchg
sub
stos
stos
mov
movsl
outsl
pop
mov
fstpl
cmp
xchg
hlt
adc
lods
dec
pop
cmc
cmp
fidivs
lret
cmp
mov
adc
dec
push
add
fucom
cmp
push
jp
or
push
idivl
les
jecxz
jb
jb
out
enter
sbb
cli
cmpsb
or
je
push
sub
xor
mov
es
adc
inc
mov
outsl
lds
jae
rcrl
jp
cmc
addr16
cld
xchg
inc
stos
push
jno
test
in
int3
lcall
pop
push
adc
sarb
iret
mov
cmpsl
xchg
xchg
in
fstl
nop
pop
push
dec
pop
arpl
sub
jp
mov
aaa
cmp
fcoms
pushf
or
repz
jno
mov
out
mov
arpl
xor
inc
push
js
daa
movsl
enter
or
push
enter
dec
enter
push
xchg
repnz
push
sbb
mov
jp
js
pop
mov
loop
xor
inc
loope
aad
clc
or
jmp
in
dec
and
sub
sub
fbstp
cmp
jno
push
std
pop
jle
cmp
adc
std
lds
cmpl
out
mov
mov
cmp
jle
mov
inc
inc
mov
add
sti
and
add
inc
dec
jo
dec
fisttps
dec
int
in
outsb
imul
roll
cs
push
push
movsb
lcall
push
lock
call
ret
lods
mov
inc
dec
or
add
pop
dec
clc
and
pop
adc
jg
fstpl
insl
push
roll
jne
sub
das
mov
cmp
notl
stc
xchg
lret
lret
outsb
sub
jae
pop
inc
ret
ret
cmp
xchg
and
je
pavgb
or
cmp
pop
popa
loope
sbb
fcmovnu
fimull
dec
dec
push
xor
movsl
xor
mov
xchg
sbb
push
xchg
jecxz
shll
shrl
cmp
fiadds
je
jbe
mov
add
int3
outsb
cli
mov
pop
pop
add
pop
call
mov
or
dec
mov
push
inc
aas
xchg
xor
mov
mov
jmp
xor
jmp
stc
jae
andb
jbe
leave
outsl
imul
sarb
jp
xor
push
aam
pop
pop
xor
jnp
sbb
xorb
mov
jo
inc
cmp
call
pop
roll
adc
in
push
sbb
cmp
jmp
push
fwait
loope
lret
sub
popf
inc
ret
push
push
pop
pop
lret
dec
mov
and
mov
popa
loop
sbb
inc
push
adc
test
in
add
aas
xchg
jg
jb
adc
test
movsb
jbe
imul
mov
jp
mov
movl
sbb
fs
or
mov
mov
mov
mov
adc
mov
jmp
cmp
xor
test
popl
orb
imul
pop
ljmp
adcb
das
addl
ljmp
jmp
in
lret
mov
fbld
push
mov
test
sbb
jo
out
les
xchg
sbb
adc
andps
mov
sub
mov
dec
xor
cmp
and
xchg
rolb
xchg
mov
in
cmc
daa
ja
cwtl
fwait
sbb
inc
mov
jo
lods
pop
push
mov
jmp
dec
xor
sub
test
adc
cmpsl
ds
inc
in
pop
and
mov
cs
adc
push
insb
pusha
sbb
ljmp
mov
mov
push
lods
out
xor
xlat
sbb
jno
xchg
mov
aaa
cmp
push
cmc
ljmp
jnp
nop
add
in
dec
mov
and
cmp
cmp
dec
pop
pop
push
and
fwait
pop
lret
mov
gs
or
adc
test
cmp
cmp
stc
icebp
sub
xchg
mov
pop
sti
out
lahf
jle
mov
adc
mov
roll
mov
aam
adc
test
outsl
xchg
and
scas
cmpsl
int3
and
xorb
out
pushf
iret
movl
inc
out
adc
pusha
cs
imul
push
or
sub
stos
or
and
pop
xchg
add
cmp
cli
sbb
jmp
aad
imul
sbb
xchg
inc
add
pop
jnp
je
mov
movsl
cmp
push
sbb
dec
jp
clc
int3
call
out
jmp
mov
sub
xchg
or
jb
jbe
cmp
inc
sub
push
mov
pop
xchg
xchg
mov
ja
jne
inc
xor
stc
mov
mov
jg
sub
lret
push
cs
adc
pop
cmp
ss
mov
or
inc
insb
addb
adc
push
xor
int
dec
add
adc
jb
sbb
xor
mov
daa
xchg
int
mov
mov
iret
pop
mov
push
cmpsb
fwait
loopne
out
lock
xor
inc
mov
or
mov
jnp
xchg
inc
mov
out
sub
cmpsb
pusha
inc
or
xchg
pop
addr16
xchg
mov
arpl
outsb
jle
std
aam
test
xor
std
clc
inc
inc
adc
mov
pop
iret
aam
icebp
cmc
dec
stos
bound
pop
cmpsb
sbb
std
adc
xchg
push
jmp
aam
and
lret
or
mov
lds
lock
sub
push
cmp
stos
xchg
xchg
push
dec
addr16
adc
ss
pop
pop
fnstsw
cmpsl
push
xchg
xor
loope
pop
lret
jle
ljmp
clc
jbe
push
mov
lods
mov
arpl
gs
sbbb
inc
sbb
lock
nop
shlb
sub
mov
in
addr16
jns
or
cmpsb
mov
xchg
sub
das
call
jmp
shrb
mov
call
icebp
mov
push
fcoml
cmp
ret
or
xor
test
lea
mulb
iret
cmp
sbb
hlt
fs
outsl
inc
dec
jge
pop
adc
or
ljmp
mov
ljmp
xchg
pusha
sbb
in
out
cmp
popa
mov
pop
fs
loope
xor
jp
inc
mov
out
mov
xor
stc
pusha
sbb
push
rcll
imul
repz
add
js
fsubl
xchg
call
imul
jbe
inc
movsb
sahf
lahf
testl
rol
pop
or
loop
cmp
ficoml
js
xor
daa
jl
in
add
movb
outsb
add
dec
sahf
aam
ja
std
js
pusha
test
add
or
clc
cmpl
cmp
pop
pop
cld
mov
cmp
scas
std
jno
mov
lods
xor
mov
cmp
jno
popf
loope
ljmp
and
int3
cmp
fmul
dec
xor
add
cmpsb
shll
inc
xchg
addr16
cmp
scas
pusha
jge
mov
dec
push
jo
data16
add
aad
and
std
xchg
outsl
push
popf
pop
aad
adc
sbb
mov
push
call
push
mov
out
inc
mov
cmpsb
mov
xlat
jmp
dec
cmc
lock
lock
jnp
std
or
aas
mov
mov
mov
mov
cmc
pop
stos
xchg
or
sub
xchg
sbb
pop
ret
pop
popaw
iret
test
cmpsb
and
loop
jne
js
ljmp
popf
mov
lds
scas
mov
decb
xor
and
pop
xchg
xchg
cli
fdivrs
cld
ret
lret
mov
punpckhwd
dec
addr16
pop
lret
loope
loop
mov
sahf
ljmp
cmc
ret
pop
arpl
inc
test
push
adc
aam
sbb
sub
iret
mov
jae
das
outsb
inc
clc
fcomps
lret
sub
ss
ficomps
rorl
je
rolb
lock
fstpl
repnz
xchg
imul
and
adc
mov
leave
fldt
mov
lds
das
in
ja
xor
popa
out
call
cmp
idivb
mov
sbb
add
cmpsl
push
cmpsl
push
cli
xor
ss
jl
mov
es
out
repnz
adc
jno
loopne
mov
lahf
inc
mov
scas
xchg
clc
es
pop
and
push
sbb
sbb
mov
inc
mov
add
ret
xor
pusha
cmpsl
push
jb
out
pop
sbb
ficompl
lret
rcrb
mov
mov
pop
cmp
addr16
and
mov
push
loop
lret
fwait
outsl
jmp
pop
pop
ret
push
sub
inc
sbb
test
pop
adc
scas
cld
fsubl
xchg
inc
inc
sbb
and
xor
imul
jmp
sub
add
lods
cli
push
aaa
daa
xchg
das
fs
outsl
dec
sub
pusha
imulb
daa
movsb
adc
jno
jg
loopne
sbb
stc
cmp
lret
in
jne
cmp
lods
jl
rorb
test
mov
inc
add
xor
adc
les
clc
dec
xchg
sub
xchg
mov
mov
push
ss
adc
mov
lods
add
push
outsl
pop
jb
out
addr16
test
pop
sub
fs
xchg
pop
and
int3
inc
sbb
or
divb
jns
jne
movsl
mov
add
mov
jns
adcb
pop
mov
cs
jb
add
mov
mov
mov
loopne
pop
insb
shrl
dec
mov
add
movsb
jp
pop
in
ret
dec
jle
xchg
sub
lret
cwtl
jecxz
daa
cwtl
out
sbb
stos
jne
add
sbb
outsb
cmpsl
test
adc
repnz
lea
sbb
lcall
adc
adc
cli
rorb
sub
inc
inc
shll
repz
mov
incb
push
push
sbb
lds
lret
cmc
inc
dec
mov
push
lret
mov
jns
xchg
mov
cli
ljmp
xchg
movsb
cmc
lret
les
inc
push
enter
sbb
cmp
rcrb
jo
jno
cmp
dec
sub
mov
ljmp
add
and
dec
xchg
decl
into
aas
popf
iret
pop
jns
ljmp
pop
fdivrp
push
push
push
mov
add
pushf
push
push
mov
xchg
jne
in
cwtl
adc
fidivrs
sbb
ds
inc
aam
jnp
arpl
dec
inc
cmp
testb
fnsave
cli
and
repz
inc
lret
addr16
shrl
cmpsl
push
shl
je
or
xchg
mov
push
xchg
pop
aad
enter
mov
stos
pop
xchg
xor
xchg
negb
lods
mov
daa
repnz
lods
es
jb
repz
test
js
ljmp
mov
cmpsb
ret
out
ss
je
mov
sbbl
nop
mov
add
xor
cmpsb
xchg
addr16
jo
xor
jb
sbb
mov
rorb
scas
sbb
and
or
push
outsl
repz
es
lods
inc
cmp
enter
lret
add
popa
call
in
push
std
jmp
test
push
shl
inc
xor
rcrb
in
enter
cmovb
dec
cltd
inc
mov
into
mov
and
int3
push
push
sbb
cmp
loope
into
mov
out
aas
shrb
mov
imul
inc
mov
imulb
lods
xor
pop
xchg
pop
dec
xchg
jl
cmp
rorl
inc
cmp
loope
inc
push
mov
and
sub
mov
xor
addr16
push
xlat
jno
stos
inc
sbb
cltd
xchg
mov
adc
loop
lret
ss
sbb
inc
sarw
mov
ret
jecxz
pop
ret
rcrb
xchg
stos
pusha
adc
xchg
rclb
jmp
add
movsb
fdivs
mov
xor
push
sub
sub
push
push
mov
jnp
repnz
bnd
mov
pop
pop
add
mov
and
hlt
lcall
insb
repz
cmp
int3
xchg
lods
aaa
mov
push
lret
or
clc
inc
rorl
pop
orl
or
xor
xchg
mov
xor
jmp
xchg
sahf
scas
imul
mov
aas
mov
and
lods
jne
cli
mov
xchg
inc
bound
mov
mov
dec
hlt
sbb
xchg
in
ss
hlt
adc
mov
stos
push
bound
fidivrs
xchg
sub
jno
ljmp
fcmovne
nop
cmp
repz
push
cmp
dec
scas
addr16
mov
adc
dec
jo
stos
lret
aas
mov
push
fwait
popa
in
fmull
leave
dec
lea
sti
aad
aam
cmp
dec
mov
pop
sub
mov
add
imul
inc
dec
and
mov
repnz
jg
cs
ljmp
mov
xchg
lds
test
sub
pop
xchg
ja
les
add
cmp
insl
hlt
std
sub
and
adc
popa
lea
mov
enter
mov
sbb
or
lret
sub
mov
jle
cmp
insb
lods
shll
rcrb
pop
cmp
andb
add
mov
movsl
ret
mov
mov
scas
int
std
pop
pusha
mov
shr
sti
lea
inc
add
pop
divb
in
cmp
push
in
enter
and
lea
mov
lret
or
dec
nop
xchg
mov
cmp
pop
pop
nop
jae
stc
inc
cmc
pop
loop
shll
jge
xor
into
ljmp
mov
ss
aas
es
add
enter
movsl
cltd
paddw
ss
lds
mov
gs
cmp
jl
push
jmp
test
pop
pop
sub
orl
js
inc
cmp
cmp
xchg
dec
cmp
add
cltd
push
aam
jg
imulb
xor
or
xchg
push
test
ljmp
clc
mov
repnz
pop
sub
ss
stos
pop
mov
clc
rcl
aas
adc
movsb
mov
sbb
test
or
xchg
dec
sub
sub
roll
adc
nop
loop
dec
ds
pop
faddl
xor
gs
push
mov
push
xchg
fldcw
or
into
and
dec
int3
repz
pop
in
push
pusha
ja
in
add
sbb
cli
dec
aaa
adc
loopew,pn
lahf
fadds
mov
pop
rorl
sbb
lods
fcompl
xchg
inc
dec
aam
cmc
jle
cmpsl
push
outsb
call
xlat
nop
mov
xor
out
fdivrl
out
push
mov
push
mov
outsb
test
mov
sbb
or
jmp
jnp
lock
xchg
fcmovnb
addl
pop
pop
out
xchg
xchg
sbb
in
mov
arpl
jbe
mov
add
daa
jo
int3
sbb
push
and
in
scas
repnz
stos
xchg
add
sub
fiaddl
xor
lds
icebp
inc
neg
add
mov
jns
push
adc
mov
jbe
push
adcb
add
xchg
shll
mov
pop
mov
xor
pop
rcrl
mov
inc
fbld
leave
rcll
cmp
fisubrl
mov
imul
jae
or
hlt
enter
leave
push
icebp
or
xor
dec
jp
push
clc
push
cld
fwait
mov
mov
sarl
cmp
gs
add
mov
scas
push
xchg
or
cmp
mov
ljmp
mov
pop
imul
and
sarl
inc
push
out
cmp
mov
xchg
mov
or
hlt
mov
aaa
xor
lret
outsb
pop
xchg
mull
mov
xlat
ss
adc
and
add
push
es
pop
movsb
inc
rcl
jg
shrb
fmull
lods
xor
add
out
jecxz
lcall
push
lcall
inc
js
jp
sarb
aad
sar
add
add
xchg
dec
fucomip
inc
xchg
adc
shrl
fstl
lds
and
mov
ffreep
jg
mov
aad
xor
cld
push
pop
jb
pop
sub
xor
shll
push
dec
loop
inc
sbb
jg
mov
mov
or
dec
xchg
jmp
push
fstl
mov
xor
push
rol
test
and
mov
das
or
sbb
lds
mov
pop
push
cmc
repnz
jb
inc
sti
jle
pop
ljmp
ljmp
cmp
cmp
mov
gs
sbb
jno
addb
push
fnstenv
push
and
cmp
movsl
sbb
andb
cld
inc
neg
jle
sub
icebp
loopne
test
cmp
inc
and
test
mov
jnp
std
in
fisubrs
cltd
bound
fstpt
sbb
into
out
pusha
imul
xor
fisubs
andb
outsl
add
inc
jecxz
push
add
add
fcmovnb
sub
imul
jns
xor
pop
test
mov
shrl
pop
negl
pusha
adc
ret
pop
sub
fstpt
in
xor
aam
es
or
repnz
xchg
loopew
mov
xor
or
sub
inc
ficompl
pop
sub
loope
jecxz
push
icebp
push
jo
inc
xor
sbb
jl
mov
add
lock
pushf
repnz
push
adc
xor
cmp
dec
and
addr16
ja
stos
xchg
push
mov
sbbb
xchg
push
mov
std
pusha
xchg
int
movsb
inc
or
daa
aaa
loope
add
addr16
dec
jecxz
jne
rorl
aam
hlt
test
std
lds
outsl
int
mov
sub
pop
loopne
cmpsl
hlt
pushl
inc
sti
or
adc
jns
fld
test
inc
pop
cmpsl
rolb
enter
sub
lret
mov
xchg
push
and
sub
addb
enter
dec
scas
je
int3
add
mov
dec
push
mov
cltd
mov
aas
jnp
push
mov
mov
fwait
mov
popl
jecxz
ret
pop
into
cltd
jge
sahf
movsl
xor
insb
jns
mov
or
xchg
or
mov
xor
fistpl
std
push
test
pop
and
ret
sar
cmpb
dec
xchg
sarl
rcll
pop
into
test
pop
push
adc
test
cs
adc
out
sbb
mov
shll
mov
cs
mov
out
sbb
movsl
sarb
xlat
popa
jb
lcall
dec
test
cli
pop
cwtl
pop
mov
cmp
cmp
mov
out
or
loopne
icebp
push
jne
adc
adc
sbb
in
ficomps
dec
shlb
add
fdivl
sti
mov
pop
test
cmp
divb
push
scas
js
movsb
cltd
addl
stos
mov
out
sub
mov
int3
dec
paddd
push
xor
negb
stos
repz
inc
lock
outsb
sbb
cltd
inc
mov
iret
inc
lds
jl
xlat
mov
adc
es
test
or
or
shr
mov
and
out
arpl
push
add
js
mov
gs
stos
mov
sarb
nop
gs
mov
push
mov
mov
xorl
dec
cmp
movsb
out
sbb
mov
xor
rolb
test
add
cmpxchg
fidivs
aad
fwait
dec
fwait
mov
xor
jno
jl
imul
fwait
mov
addr16
inc
or
xor
stc
xchg
jmp
cmp
or
notl
inc
push
jne
push
pop
xor
inc
xchg
in
adc
lahf
repnz
bound
push
or
shr
sub
int
pop
sbb
out
or
daa
int
pushf
ds
clc
dec
xor
ret
xor
mov
cmp
fsubrl
int
ds
dec
mov
mov
and
mov
loop
testl
idivl
xor
test
mov
dec
sub
inc
stos
loope
cld
fildll
movsl
addr16
jno
int
cld
push
dec
pop
dec
fstps
cmp
ret
dec
mov
or
enter
cs
dec
dec
or
out
aam
push
dec
inc
add
push
or
mov
es
ret
push
xor
push
jge
lock
or
inc
pop
out
out
mov
out
stos
add
jmp
mov
lret
test
pop
mov
adc
outsl
stos
cmp
test
and
push
pop
and
lahf
lods
fldl
jge
jmp
mov
sbb
inc
and
cs
std
sbb
mov
xor
or
mov
andl
mov
jbe
xor
ja
addr16
decl
mov
fbld
cmpsl
inc
in
leave
xchg
jo
xchg
dec
sbb
sub
and
add
lock
mov
loope
in
arpl
mov
pop
inc
loopne
xchg
imul
ret
es
js
popa
or
in
adc
inc
popf
xchg
cmp
in
out
aaa
enter
or
jp
call
es
jle
xchg
rolb
pop
insb
inc
insb
stc
fwait
mov
rcll
adc
sar
inc
pop
pop
dec
test
imul
aam
xchg
imul
into
cld
out
loope
std
dec
stos
int3
popa
and
jns
mov
clc
fnstsw
cmp
inc
loopne
jmp
inc
pop
es
lahf
jb
jg
or
jge
mov
inc
imul
mov
add
into
fisttps
jp
add
movsl
push
out
cltd
cmp
loopne
mov
mov
testb
jmp
jmp
lret
xor
cmp
or
xor
push
mov
push
push
enter
aad
pop
pop
mov
sbb
sahf
push
gs
shrl
push
js
mov
shlb
xor
mov
sub
fiadds
int3
cmpsl
loop
cmp
pusha
add
repz
lret
dec
inc
loope
lods
sbb
or
sub
adc
lods
mov
pxor
mov
jo
mov
lcall
shr
mov
fsubrl
jg
pop
jno
adc
xchg
in
sbb
inc
push
jo
rorb
gs
jp
outsl
imul
mov
das
mov
mov
mov
and
push
nop
test
ficompl
mov
sti
jo
pop
aad
push
add
xchg
inc
scas
in
dec
or
cmp
sub
in
pop
insb
sub
lret
scas
fnstcw
mov
addr16
mov
pop
mov
insl
pop
jp
sarb
add
insl
sub
paddusb
mov
sub
fsubs
mov
or
mov
xchg
dec
scas
cmp
fmuls
dec
mov
adc
sub
mov
add
lret
inc
fbstp
imulb
sbb
cmp
push
pop
cld
test
mov
mov
add
scas
cmp
xchg
aaa
sub
pop
test
or
mov
rolb
pop
cmp
stos
mov
lcall
jnp
xor
repz
cmp
mov
fcmovnu
cmpsb
and
pop
mov
push
cmp
sub
add
out
test
add
xchg
xor
inc
pop
aaa
jge
daa
insl
add
into
pop
ficoml
pop
inc
fistps
add
sbb
fs
pop
and
jno
test
mov
jae
jp
into
sub
or
into
loopne
push
inc
call
fiaddl
mov
cmp
mov
lret
jmp
mov
cmp
inc
push
xor
push
cmpsl
xchg
add
repz
adc
icebp
addr16
lret
leave
addl
dec
sub
insb
pop
add
push
insb
push
xor
jp
or
or
enter
xor
movsl
add
ja
push
cmpsb
movsb
test
outsl
push
les
push
mov
mov
mov
pop
pop
xchg
lds
cs
jbe
fidivrs
jl
gs
cmp
ss
mov
out
pop
cwtl
pop
pusha
iret
adcb
xchg
inc
scas
mov
clc
je
push
push
aad
cld
mov
sbbl
pushf
adcl
stos
jo
mov
adc
int3
mov
fnsave
push
push
pop
in
not
ljmp
fstp
xchg
sub
push
pop
das
jl
imul
push
and
fsubp
lret
cwtl
shll
les
or
bound
sbb
cmpsb
inc
test
jne
stos
lock
pop
in
cmp
add
jg
cwtl
cli
inc
adc
fdivp
mov
daa
fsubrl
nop
mov
ffreep
scas
shll
out
cmp
push
addl
je
add
test
mov
xor
lea
jge
dec
add
mov
test
cwtl
ljmp
sub
fdivrs
or
xorl
pop
pushf
sbb
out
ret
leave
out
mov
out
ljmp
loopne
lods
add
xchg
adc
mov
clc
bound
ret
push
aaa
mov
xor
insl
and
pop
rorl
pop
scas
pop
pusha
sub
divl
sti
cmpsb
sub
out
xor
repnz
inc
je
xor
inc
cmp
jle
outsb
jecxz
mov
test
lods
jg
pop
andl
outsb
push
push
pop
sahf
mov
push
mov
xchg
or
popf
mov
aam
sub
imul
fbstp
das
jbe
movsl
call
mov
out
cmp
push
mov
jo
mov
ss
in
sbb
or
bound
in
dec
pusha
and
pop
lods
xor
imul
and
adc
fisubrl
mov
pushf
xor
sahf
pushf
mov
jmp
rcll
sbb
popf
in
pop
dec
pusha
cmp
movsb
mov
xchg
gs
mov
mov
out
dec
lea
mov
inc
adc
cmc
push
mov
or
xchg
inc
mov
sbb
stos
push
mov
sbb
scas
mov
xchg
decl
dec
pop
push
sub
cmp
ja
sti
cmp
cmpsb
je
enter
jmp
and
pop
divl
mov
in
nop
lods
popa
or
mov
jl
add
lods
clc
xchg
arpl
push
addr16
dec
push
cmp
sahf
mov
xchg
inc
stc
es
push
add
shl
out
mov
pop
add
testb
cltd
sbb
movb
push
xlat
popf
pop
cmpsl
shrl
adc
sarl
mov
lods
orl
push
insb
mov
and
iret
jb
fdivrl
push
out
mov
les
jg
addr16
cltd
adc
aaa
outsb
sbb
jnp
mov
mov
ret
jne
xchg
cltd
ret
pop
jg
xor
jno
pop
sub
xor
aaa
inc
push
sbb
aaa
inc
inc
sbb
clc
xchg
movsl
data16
add
loope
and
xchg
xchg
insl
mov
scas
in
pop
pop
and
cmc
jl
call
sbbl
in
jge
cltd
push
dec
mov
subl
jle
gs
aaa
es
mov
ja
fs
in
mov
lds
add
std
xlat
es
push
dec
or
lods
clc
dec
xchg
push
jl
and
jno
hlt
in
add
xchg
popa
test
xchg
cmp
imul
or
cmc
dec
and
lods
into
pop
cmc
in
mov
add
xor
bound
inc
push
inc
cmp
adc
stos
inc
pop
xchg
fisttpl
das
xor
jns
dec
cmpsb
jo
xor
inc
dec
jb
mov
mov
std
dec
gs
sub
push
push
loop
xor
orl
mov
or
mov
mov
cmp
shl
jbe
ja
popf
mov
mov
sub
fsubrs
cmpsb
in
cmp
fcoml
mov
xchg
xor
mov
xor
andl
pop
pop
sbb
or
pop
popf
es
inc
cmpl
repz
das
push
and
cmpsb
insb
push
and
pop
mov
bound
nop
icebp
pop
mov
mov
jb
loopne
addb
mov
fbld
jecxz
pop
rcll
in
scas
fistl
jo
jg
repz
in
sub
es
aaa
dec
add
stc
add
pusha
out
idivb
xor
sbb
cmpsl
repz
adc
aad
test
int3
int3
dec
push
int3
movsl
adc
bound
sub
repz
jmp
ljmp
or
dec
push
mov
fildl
xchg
adc
int
sti
pop
sub
sbb
mov
jmp
jns
hlt
add
insb
dec
dec
push
dec
les
cmp
divb
mov
aaa
add
cltd
fs
les
sti
hlt
arpl
xchg
push
push
sub
notb
pop
xchg
aad
out
mov
fistps
sub
cmp
roll
aas
addb
pandn
jbe
dec
testb
cld
pop
dec
cmp
cmp
or
mov
sbb
push
adc
rclb
les
dec
push
or
bound
add
cmpl
or
add
cs
mov
loope
mov
scas
jg
mov
adc
mov
int3
and
addr16
fnstsw
cmp
cmp
pop
rolb
dec
pop
cmpsb
test
fxch
insb
sbb
mov
pop
push
in
rcll
negb
in
mull
insl
mov
dec
mov
mov
bound
addr16
adc
mov
inc
push
test
test
adc
pop
jnp
jg,pn
nop
and
je
sbb
aad
pop
push
cmp
inc
add
sub
insl
jge
sbb
sbb
jno
movsb
jge
mov
pop
fs
in
add
push
pop
sub
add
shll
sahf
inc
inc
mov
out
sbb
in
jo
jae,pt
andl
push
movsb
sbb
cmp
mov
mov
pop
or
jle
add
insb
xor
and
adc
adc
dec
cld
ja
out
or
repz
mov
jecxz
pop
mov
sub
jg
cld
lcall
jmp
sti
push
je
clc
mov
xlat
cmp
xchg
jno
inc
les
sub
sbb
add
fdiv
fwait
gs
jne
popa
loop
xchg
add
inc
test
imul
mov
int
iret
sahf
stos
rolb
push
mov
arpl
push
jg
cmpsb
stos
out
mov
sti
aam
out
rcl
cld
mov
shl
push
pusha
mov
mov
mov
jnp
pop
pop
pop
jmp
fs
adc
sub
stos
mov
adc
xchg
ret
lahf
loop
add
push
xchg
xchg
cmpl
push
pop
pop
dec
mov
inc
xor
pop
cmpsl
icebp
jl
insl
inc
jne
pushf
popf
js
std
in
pop
mov
push
jb
sbb
and
dec
xor
xchg
mov
jmp
mov
jno
jle
movsb
pop
dec
pop
icebp
jg
cmp
pusha
fstl
pop
es
add
into
cld
fiaddl
outsb
sub
xchg
lret
cmc
fwait
aas
push
fildl
into
into
cmpsl
jbe
pushf
xchg
xchg
movsl
test
es
xchg
jg
xor
enter
or
data16
jp
outsl
xchg
outsb
jmp
ss
pop
pop
and
ret
aam
push
xchg
nop
loopne
insb
sti
insb
xlat
xchg
xor
mov
adcb
out
mov
rcll
or
jmp
fs
cltd
mov
insb
out
inc
in
cmpsl
mov
repnz
into
cmpsl
adc
sbb
mov
test
lea
add
loop
shlb
in
test
out
out
dec
addr16
and
cwtl
sbb
les
les
mov
fnstcw
inc
test
mov
add
ret
jo
add
mov
jge
fs
fidivrl
lret
xor
or
add
jle
fstpt
mov
loopne
ds
and
mov
dec
ret
pop
mov
pop
test
repnz
adc
mov
ja
rorb
push
sbb
lret
mov
or
xor
adc
and
lahf
push
cmc
sub
shll
cmp
sbb
in
pop
xchg
pushf
xor
xor
xor
inc
imul
xchg
pop
mov
test
sbb
jle
daa
shrl
dec
leave
add
mov
loope
jns
jl
in
mov
pop
or
cmpb
add
clc
loopne
dec
inc
jb
dec
fsubrs
mov
mov
aas
xor
mov
sub
xor
movsb
mov
inc
in
dec
clc
xorl
or
je
or
aad
jae
std
lock
mov
cmc
jge
or
ret
mov
dec
pop
push
int
rcrb
loopne
and
repz
xor
lret
xor
push
xchg
int3
and
inc
testl
mov
inc
stos
daa
js
push
mov
push
ret
sub
mov
push
mov
insl
adc
mov
dec
aam
add
leave
jbe
movsl
jmp
dec
outsl
inc
add
push
mov
stc
ss
jae
push
xchg
rorb
add
negb
jecxz
sub
cltd
and
movsl
std
push
or
jne
std
jmp
push
dec
dec
xchg
js
rcr
xchg
ror
gs
shr
dec
add
mov
push
and
sub
and
int3
mov
cmc
inc
push
jmp
loop
mov
push
repnz
xlat
xchg
dec
pop
lret
hlt
xchg
lret
jno
jno
add
jge
negb
sarb
inc
and
mov
aad
jecxz
icebp
movsb
cwtl
movsl
xchg
lods
clc
mov
in
jl
add
lods
jle
ss
arpl
mov
xor
adc
dec
dec
daa
repnz
sbb
dec
icebp
xor
fbld
adc
daa
imul
pop
bound
push
mov
inc
in
xor
sub
ret
mov
shll
push
std
fcmovb
cmc
sub
inc
dec
push
out
mov
in
or
int3
and
push
inc
loop
jle
cwtl
and
jns
cmp
cld
mov
rorl
sarb
or
dec
js
xchg
mov
cltd
inc
or
mov
repnz
loope
cltd
push
push
mov
int3
mov
xor
mov
pop
xchg
lods
outsb
mov
dec
sub
xor
ficompl
in
lods
inc
into
xor
push
aaa
pop
add
addr16
inc
iret
addb
cmp
outsl
or
loope
cmpl
pop
scas
sbb
ss
pop
repz
sub
lods
mov
shr
xor
outsb
jmp
ret
cmpsl
and
or
repnz
and
movsl
xor
das
mov
mov
inc
loop
aad
jb
rclb
push
sti
adc
paddw
arpl
lcall
insb
lahf
inc
inc
aas
fdivp
test
or
mov
add
cmp
and
mov
lock
cwtl
mov
xchg
popf
adc
jecxz
add
js
mov
and
xchg
cltd
add
mov
daa
xchg
or
add
push
scas
xor
and
dec
test
cmpsb
mov
jb
loop
cmp
ds
jno
das
dec
test
jbe
icebp
movl
push
or
inc
mov
in
fsubrl
adc
dec
dec
popf
mov
add
mov
aaa
loope
lahf
push
subb
xchg
mov
inc
lds
push
hlt
inc
into
xor
dec
mov
scas
out
push
leave
jne
ficoms
repnz
js
dec
ss
xlat
or
andl
es
in
push
in
mov
lods
pop
loop
into
cmp
cwtl
adc
inc
push
fcom
jg
adc
add
pop
inc
lock
jae
jo
test
mov
adc
das
push
clc
decl
xchg
cmp
jno
aaa
loopne
push
aad
fisttpll
lret
or
or
cmpsb
das
ja
adc
cmpsl
jmp
sahf
and
test
je
pop
sub
mov
cmpsl
gs
in
divb
js
insl
mov
testb
cmp
or
dec
jo
std
or
xor
fs
pop
dec
add
in
cltd
popa
push
addr16
cmp
mov
mov
in
mov
xor
jle
int
xchg
pop
rorb
pop
jnp
daa
mov
mov
adc
lcall
lcall
mov
imul
mov
inc
cld
outsb
popf
and
cltd
dec
mov
ss
cmp
xor
inc
sti
ja
mov
test
pushw
pop
cmp
or
jle
push
mov
jmp
jle
and
aaa
jge
lods
adc
sti
scas
pusha
mov
xchg
mov
test
or
and
lret
mov
pop
mov
jl
sbb
sub
push
fstps
cmc
shrb
cmpsb
dec
subl
es
push
fcom
sub
mov
mov
inc
sub
or
pop
inc
xor
pop
addr16
mov
push
sub
sbb
scas
or
rolb
sbb
sti
mov
test
outsb
in
hlt
sub
jae
mov
int3
sub
sbbb
and
pop
or
out
imul
ret
sub
mov
les
in
add
cwtl
call
movsb
mov
out
out
xchg
fwait
iret
sbbb
aas
xchg
xor
flds
daa
popf
and
mov
pop
sub
inc
push
js
mov
test
arpl
test
pop
pop
dec
mov
lahf
cltd
mov
and
jge
outsb
sub
mov
ds
xchg
jge
inc
pop
out
ja
or
pop
sbb
xchg
cld
in
mov
fisttps
cltd
mov
jmp
fdivrl
ds
std
stos
dec
ljmp
inc
insl
and
jmp
pop
rcr
jge
jb
add
faddl
sbb
xchg
pop
dec
inc
rorb
inc
enter
popa
divb
cmp
adc
dec
addps
test
inc
imulb
sub
xchg
popa
lret
das
mov
ss
in
mov
cmpsb
jbe
mov
in
mov
cmpsl
jg
negl
lahf
ficompl
and
dec
adc
cli
in
or
push
xchg
dec
adc
jle
xor
mov
loopne
cmp
mov
das
fwait
in
xchg
les
lret
sbb
aam
insb
mov
incl
cmp
add
cmp
jp
ja
inc
or
ja
mov
push
xchg
dec
popf
popf
inc
stc
jnp
cwtl
dec
sbb
js
push
dec
repz
fs
pusha
mov
mov
cli
and
movsl
mov
sbb
jle
pusha
fcompl
cmp
ror
pop
add
rcl
xor
jae
ret
lret
mov
int3
daa
mov
cmp
mov
pop
add
mov
in
mov
mov
aam
cwtl
cmp
repnz
jp
test
in
xchg
pop
xchg
xorl
pop
fcmove
rcrb
hlt
and
add
add
mov
test
jg
fdivl
clc
rcll
push
mov
xchg
adc
inc
jb
pop
sbb
add
ret
outsl
fs
or
fisttps
je
lret
lcall
stos
mov
rclb
cmp
out
sahf
xorl
dec
xor
push
inc
sti
out
test
cmp
icebp
fldcw
into
in
sbbl
cmpl
mov
stos
js
in
call
jnp
fstps
jne
jne
push
daa
fldcw
push
shll
sarl
inc
inc
xchg
mov
ds
into
sub
push
adc
mov
sub
sub
les
mov
sbb
jp
aaa
insl
inc
mov
icebp
cmovne
push
out
mov
nop
pop
mov
lret
cmp
cmp
lods
cmp
cmp
adc
inc
cs
lods
loop
xchg
sbb
loope
or
mov
inc
or
and
inc
out
lret
inc
fcmovnb
push
pop
data16
popa
ret
out
jecxz
push
cld
loop
repz
into
inc
ret
out
std
das
aas
pop
leave
aam
and
nop
leave
inc
imul
or
and
popf
pop
cmp
je
aam
xlat
rcl
sbb
push
jns
xchg
dec
test
mov
dec
ficompl
enter
aam
sti
test
aam
jl
insb
jecxz
sbb
fbstp
add
cltd
dec
mov
gs
xor
jmp
xchg
loopne
call
xor
mov
dec
push
sbb
out
xor
fs
jl
adc
insl
inc
loop
lcall
inc
dec
fwait
inc
sub
mov
shlb
mov
dec
enter
pop
cmp
mov
loop
imul
mov
fs
jne
mov
bound
test
mov
xchg
lock
xor
outsb
dec
fidivl
inc
mov
add
fiadds
lahf
push
lock
push
rcll
cltd
lods
pop
jg
imul
cmp
xorb
repnz
adc
dec
xchg
adc
adc
divb
inc
imul
sbb
mov
sub
sbb
jecxz
inc
push
in
or
add
push
pop
hlt
into
stc
or
xor
fsts
xchg
push
push
or
cmp
mov
test
aam
add
pop
pop
mov
movb
loopne
orb
add
or
and
cmp
fs
cmp
cltd
insb
outsl
push
sub
aaa
xor
sarb
paddsw
sub
sbb
dec
sbb
xchg
xchg
jp
push
lods
lahf
sbb
scas
jmp
in
test
je
xor
pop
sarl
dec
xchg
sbb
cmp
or
popa
xchg
jbe
lret
jns
pop
in
mov
stos
jecxz
daa
or
mov
fwait
xorl
shrb
stc
xor
imulb
mov
xchg
mov
fdivs
push
arpl
adc
es
lcall
cmpsb
xchg
in
aam
ret
cmpsl
cli
ljmp
fbld
mov
movsl
ss
dec
fst
xlat
xor
stos
cs
gs
lea
loop
add
and
aam
repz
mov
fwait
aas
stos
jae
movsl
mov
push
push
shll
outsl
jae
rorl
or
push
stos
std
and
addb
push
out
push
gs
cltd
fistl
push
sarb
ljmp
inc
push
add
ja
inc
dec
icebp
dec
push
and
pop
jmp
pop
and
adc
fdivl
xchg
fs
fsubrl
movb
xor
aaa
sub
movsl
pop
leave
xor
or
fld
int
imul
push
cwtl
xor
or
xchg
les
cmp
test
ds
mov
push
lock
cs
adc
and
int3
jl
mov
xchg
push
inc
mov
movsl
aad
push
xor
daa
inc
mov
lcall
sbb
and
xor
ret
outsb
clc
test
dec
add
mov
pop
idivb
xlat
repnz
cmp
cmp
bound
lcall
je
dec
loop
daa
mov
leave
das
ja
jnp
sub
cs
sbbb
fisttps
sahf
repnz
or
out
orb
xchg
pop
shrl
xchg
jmp
mov
cmc
push
pop
add
dec
arpl
inc
cmp
add
test
cltd
lods
lds
jae
push
mov
fdivrs
sbb
rcr
mov
cwtl
pop
sub
sub
mulb
cmpsb
jge
sahf
fdiv
out
cltd
into
sbb
jnp
cmp
mov
push
xor
xor
roll
push
pop
test
lahf
sub
aaa
rcrb
and
loopnew
push
sub
and
add
orb
repnz
xchg
adc
fs
inc
cmp
mov
xchg
iret
sub
inc
xor
out
es
leave
shrl
sub
aas
sbb
sbb
int3
sbb
imul
mull
iret
sbb
mov
inc
or
or
clc
mov
jae
in
enter
into
imul
scas
leave
pop
insl
inc
test
dec
inc
push
mov
fbstp
mov
jnp
jmp
clc
loopne
pushf
xchg
jns
sub
dec
ffree
ljmp
jecxz
dec
push
mov
adc
dec
jno
sub
or
cmp
lcall
mov
xlat
cmp
out
movsb
inc
pop
dec
push
pop
gs
dec
insb
dec
sbb
scas
aad
scas
jp
cmpb
mov
test
cmpsl
mov
mov
insl
sbb
mov
cltd
jnp
fwait
imul
push
enter
fildll
out
sub
xor
jo
mov
sbb
cmpsl
and
cmpsl
in
mov
xchg
cmp
cmp
jbe
outsl
pop
leave
test
mov
xchg
js
cmp
adc
fcmove
aad
xchg
adc
mov
cmc
decl
test
aaa
xchg
cmp
in
adc
push
push
je
xchg
out
or
xchg
push
or
in
add
adc
inc
jo
pop
or
rorb
xor
movsb
fisubl
int3
push
je
sti
int3
gs
rcll
lock
call
xor
push
fst
add
shlb
xor
sbb
xchg
iret
xchg
int3
std
inc
psrlw
fs
jle
xor
movsb
ret
pop
xor
cld
sbb
mov
stc
mov
or
cmp
xchg
fwait
xor
dec
cmc
add
cmp
and
mov
rcrb
mov
mov
sbb
test
in
leave
jns
fdivl
shll
push
inc
insb
cmp
lahf
and
xor
movsb
leave
in
xchg
mov
loop
push
jae
pop
in
cmpsb
jmp
push
iret
data16
popa
and
push
psubsw
mov
shrl
mov
cmp
outsl
xchg
std
pop
nop
mov
cmp
sub
je
jns
cmc
fidivl
mov
fdivr
out
nop
adc
lods
push
int3
xor
pop
notl
test
rclb
stos
shrl
lret
pop
fnstsw
pop
outsl
cmc
movsl
test
dec
dec
mov
pop
inc
or
push
mov
adc
pop
cmpb
popa
aaa
jmp
enter
adc
in
push
sbb
ja
jb
adc
fdivrl
fisttps
sahf
fdivrl
clc
push
mov
iret
daa
fisttpl
les
jl
and
cmc
mov
sub
xlat
inc
mov
repnz
adc
xor
ja
mov
mov
lcall
and
loop
mov
cmpsb
dec
jns
pop
rcrl
lret
pop
jnp
sbb
ret
loopne
insb
xchg
out
call
rcrb
insl
pop
aam
fsubrs
or
icebp
mov
push
jns
jo
xchg
lods
jecxz
xlat
add
adc
cli
lock
add
push
test
jnp
cmp
jno
mov
fsubrs
jo
jmp
nop
add
loopne
cmpsb
pushf
inc
insl
sbb
iret
mov
stc
lock
cmpb
jbe
and
and
inc
push
movsb
mov
call
call
inc
mov
stos
outsl
int
cmc
aas
mov
fstpt
testb
jecxz
int
gs
cmp
scas
or
pop
stc
out
mov
push
cs
cmc
adc
mov
scas
iret
pop
mov
dec
aad
mov
adcb
jnp
and
mov
mov
or
cs
in
pop
push
icebp
or
rorb
jp
or
push
dec
cmp
push
cmc
mov
adc
fwait
lods
ret
xchg
or
adc
mov
adc
or
daa
adc
lods
repnz
inc
push
add
xchg
mov
jg
mov
pop
fwait
imul
imul
enter
rcl
pop
jle
jp
pop
xchg
mov
fsubrp
xchg
lahf
pmuludq
or
mov
scas
in
or
push
popa
insb
mov
aas
add
jo
mov
fdivs
lds
inc
cmp
jp
idivb
sub
jl
pop
sbb
int
push
push
js
das
pop
lcall
out
daa
and
and
inc
dec
cmp
mov
ss
popa
sbb
fimull
and
push
add
adc
xor
lods
shl
sub
lret
std
dec
adc
jnp
xlat
adc
and
push
sbb
scas
jg
shl
adc
clc
add
and
jne
jp
and
push
js
pop
push
and
cmp
cmpsb
fists
push
jnp
add
mov
aad
shll
xor
add
mov
inc
push
mov
outsl
leave
fwait
shrl
sub
mov
mov
movb
jb
mov
add
insl
test
dec
xchg
fistl
jnp
aas
fldcw
jns
inc
cmp
aas
mov
push
gs
loope
cmp
jns
mov
add
mov
jge
add
mov
mov
push
or
arpl
pop
mov
arpl
cs
sbb
data16
scas
xor
aaa
jo
ss
movsl
les
ficomps
and
push
jo
sbbb
push
test
mov
bound
push
out
mov
or
fidivrl
aaa
scas
mov
subl
fmul
mov
sub
test
mov
cwtl
add
in
and
test
push
sti
push
adc
aam
sub
xchg
and
xor
mov
cmc
insb
push
push
in
sbb
mov
shlb
push
jmp
fstps
test
jno
xorl
mov
stos
lret
std
in
jne
shlb
or
sbb
popf
mov
mov
mov
loopne
mov
mov
inc
sti
shr
stos
hlt
mov
sbb
mov
mov
call
dec
outsl
add
mov
les
stos
mov
push
gs
fstps
repz
sahf
les
iret
into
test
subb
xchg
pop
outsb
pop
inc
test
andb
mov
lcall
cmp
adc
pop
int
test
xor
push
lds
jae
sbb
pop
pushf
sub
mov
std
je
sub
cmpsl
nop
cwtl
js
mov
imul
add
icebp
js
dec
add
pop
push
mov
adc
or
push
icebp
push
xchg
je
pop
fisubrl
xchg
stos
test
mov
and
xchg
mov
and
iret
insb
repz
and
call
sbb
imull
pop
adc
pop
pop
ljmp
popa
std
cmc
or
inc
pop
repnz
and
jno
add
xor
mov
dec
outsb
jg
popa
jp
push
clc
cmp
aaa
cmp
add
xchg
sbb
mov
adc
xlat
mov
iret
int
ret
add
push
cmp
add
lock
xchg
mov
movsl
xor
sbb
sub
addr16
jmp
mov
notl
adc
outsb
sbb
mov
adc
lcall
popf
in
adc
repnz
lea
xchg
jbe
and
pop
sub
mov
push
aaa
add
sbb
push
add
jecxz
or
xchg
dec
out
mov
mov
es
pop
test
stos
and
mov
fldlg2
push
clc
adc
inc
add
leave
sub
jb
mov
pop
icebp
jnp
lods
add
adc
cld
ljmp
xchg
incb
xlat
in
shrl
add
aad
repnz
and
mov
push
jne
int3
pop
pop
push
push
inc
out
popf
mov
pop
movsb
lret
cmp
pop
addr16
push
fldl
pop
mov
mov
push
stos
push
arpl
int3
clc
sub
adc
dec
dec
xor
cmc
mov
popa
mov
aaa
mov
mov
mov
xor
stc
pop
icebp
and
das
cld
jb
fistps
mov
and
inc
jp
mov
and
inc
scas
test
jl
mov
inc
or
nop
daa
push
mov
int
sub
pop
in
lahf
xchg
cmp
adc
outsl
inc
xor
xor
mov
jno
nop
adc
stc
sbb
div
pusha
xchg
dec
test
sbb
divps
into
cmpsl
and
lahf
push
rorb
sub
cmp
sti
jb
stos
ficomps
push
sub
adc
lds
es
stc
je
mov
adc
mov
mov
and
mov
pop
xor
sti
fadd
pop
loop
idiv
dec
xchg
cmp
or
enter
out
push
data16
cli
shl
inc
push
pushl
pop
sbb
jp
xchg
add
gs
mov
rclb
jp
mov
mov
mov
jecxz
test
mov
scas
jp
shl
push
jg
mov
jecxz
cmp
aaa
cld
je
push
mov
rcrl
les
jecxz
shlb
outsb
jmp
stos
testl
fdivrp
and
jne
inc
dec
dec
xor
xchg
imul
insb
mov
adc
call
ss
cmpsl
std
mov
adc
lods
mov
sbb
push
add
adc
insl
aas
lock
les
jmp
out
jg
push
inc
fldt
push
jnp
and
cld
xchg
cmp
inc
cmp
test
jmp
das
pop
adc
pusha
aaa
push
js
idivl
or
enter
inc
shlb
jnp
mov
adc
sub
dec
cld
dec
inc
xchg
jno
ss
jle
xchg
inc
nop
nop
rorl
xchg
adc
inc
pop
push
out
in
inc
movsb
fstpt
adc
mov
push
divl
mov
jp
sub
aaa
sub
outsl
cmpsl
adc
mov
or
jnp
pop
rorb
mov
sbb
insb
jne
js
adc
dec
fiadds
bound
inc
and
and
cld
orb
mov
int
lret
outsl
lds
rolb
insl
loope
subb
negb
push
cltd
mov
or
call
pop
arpl
bound
das
cmp
xchg
in
lret
xrelease
push
imul
sbb
sub
das
adc
and
dec
mov
lret
add
sub
mov
out
stos
repnz
and
sbb
pop
inc
dec
insb
enter
stc
pop
stos
lock
cmp
les
adc
movsb
pusha
shlb
adc
icebp
adc
sbbb
jae
adc
xor
pusha
sub
insl
repnz
test
cmp
and
sub
cli
adc
jo
outsl
push
mov
pop
mov
adc
add
sbb
jl
cmc
inc
xchg
sub
lock
pop
add
imul
jecxz
dec
xor
jnp
call
in
addr16
pop
mov
rcl
or
xor
inc
outsb
dec
xlat
aas
mov
in
je
cltd
xchg
fcmovb
lods
ret
jmp
cmpsb
add
movsl
loopne
mov
cmpsl
je
in
push
aam
lret
fucom
cmp
push
or
fldt
pushf
mov
mov
pop
xor
nop
push
stos
xor
in
mov
xchg
pop
in
ret
test
das
dec
sub
in
lds
push
xchg
xchg
hlt
adc
jno
les
pushf
int
lds
clc
in
repnz
sbb
rcll
jne
dec
aad
add
xchg
fwait
inc
sti
insl
aaa
out
out
pop
mov
inc
mov
sti
sbb
push
push
jp
jns
cmp
cli
pop
xor
icebp
arpl
movl
aad
clc
adc
mov
push
aad
xchg
leave
stos
and
repnz
stc
push
pushl
sbb
je
jbe
into
sbb
sub
add
push
mov
mov
idivb
mov
popf
xchg
add
lret
xor
loop
sti
cmp
xchg
adcl
fidivrs
push
addr16
push
mov
xchg
aas
inc
mov
sub
pop
imul
xchg
repz
adc
jb
xor
push
out
movsl
cld
aas
pop
mov
inc
popf
shrl
neg
jo
adc
lea
int3
cmpsl
test
sub
mov
mov
data16
xor
xchg
out
ret
inc
iret
lahf
inc
push
or
mov
add
xchg
adc
jbe
jne
test
lret
mov
fidivs
fadds
out
mov
inc
cmc
fdivl
xor
push
sub
shrb
aad
xchg
int
and
int
ficompl
loopne
pop
sbb
inc
popa
dec
jg
aam
or
stos
mov
pop
pop
fildll
jno
sbb
ss
lret
pop
or
push
mov
nop
in
mov
out
adc
lods
rolb
lods
xor
push
jle
out
ja
jbe
movb
pop
xor
jb
push
loope
inc
cs
xor
mov
arpl
mov
or
push
in
pop
sbb
mov
pop
rcrb
icebp
out
cmp
fmuls
mov
pop
loope
sub
mov
add
loop
icebp
mov
mov
xor
fwait
and
fmuls
fstpl
push
lock
cwtl
scas
loopne
jnp
sub
push
dec
xchg
test
sarb
fs
inc
sbb
repz
mov
push
outsl
dec
adc
out
adc
lcall
cmp
fdivr
cmp
mov
mov
das
sub
jle
movsl
rol
hlt
adc
adc
xor
lahf
negb
mov
push
repnz
das
inc
cmp
popa
adc
in
insb
es
call
pop
xchg
mov
in
aas
push
mov
lahf
sub
subb
or
mov
xchg
insl
mov
pop
sub
push
ljmp
pushf
pushf
jo
arpl
sub
fisttpll
inc
testl
jg
out
jae
xor
push
mov
std
lea
cmp
es
outsb
sub
enter
jg
repnz
mov
inc
xchg
mov
divl
ja
test
sub
adc
dec
and
pop
pop
adc
inc
add
stc
testb
mov
in
loopne
loop
fsubp
and
push
icebp
lahf
loopne
stos
inc
add
cmp
inc
add
push
sbb
push
out
cld
or
sbb
aad
cmpl
imul
fbld
pop
inc
mov
lahf
adc
pop
lds
out
cltd
dec
icebp
jecxz
stos
add
daa
cmp
mov
push
arpl
loope
xlat
mov
pop
add
push
or
je
cmp
cs
jg
xchg
adc
jl
adc
int
in
dec
sti
and
pop
test
and
dec
ljmp
cmp
and
mov
lds
inc
pushf
out
pusha
xchg
addr16
mov
push
pusha
push
and
inc
fs
shll
imul
adc
ret
fldt
mov
std
xor
jno
xor
push
loope
mov
rcrl
fbld
subl
mov
xor
mov
data16
mov
push
mov
push
sbb
jp
cwtl
xor
pushf
mov
xor
push
cld
adc
rcr
movsb
inc
mov
dec
jp
pop
mov
mov
jnp
inc
sbb
cmp
shll
ljmp
scas
fistps
rclb
xchg
les
push
stc
leave
loope
fnsave
xorl
sbb
sbb
or
add
int3
mov
push
xor
push
add
or
xor
loop
xchg
loopne
data16
pop
mov
loopne
rol
out
sti
and
sahf
lcall
and
add
lods
push
fdivp
sbb
xor
and
xchg
xchg
push
jp
inc
push
pop
sti
out
sbb
mov
mov
adc
test
push
lods
pop
push
ds
cmp
add
push
lea
jno
lea
cmp
xor
mov
jno
xor
sti
icebp
jae
and
inc
gs
data16
shll
clc
fnstenv
dec
mov
or
jae
jmp
jecxz
cli
jbe
int
lea
pushf
mov
repz
xchg
stc
cmp
lret
mov
ljmp
popf
dec
leave
mov
test
orb
int3
and
shl
jns
mov
jg
sbb
adc
mov
jnp
hlt
lock
mov
outsb
loopne
jmp
ljmp
in
mov
leave
mov
xor
push
sub
jg
mov
hlt
mov
fwait
scas
adc
cmp
cltd
fisubl
adc
jo
and
icebp
mov
dec
cwtl
jae
adc
test
and
in
in
sub
lahf
icebp
enter
fs
mov
sbb
pop
hlt
fnsave
aam
femms
leave
ret
stos
jbe
jnp
sub
push
dec
je
dec
dec
cmp
aas
and
and
fiaddl
jo
adc
aam
adc
sub
sahf
mov
mov
pop
jecxz
pop
adcl
data16
cmp
rorl
xchg
mov
xlat
inc
mov
dec
add
insl
leave
loopne
cmpsb
pop
subb
das
fnstcw
add
jo
dec
pop
fidivs
mov
outsl
clc
lock
into
ja
shr
fisttpl
into
ret
pop
aas
mov
or
mov
mov
xchg
test
mov
and
sbb
outsl
test
mov
daa
mov
xchg
imul
jno
shlb
lea
movsl
scas
lea
popa
stc
adc
and
sbb
stos
mov
cmp
hlt
das
repnz
mov
repz
cs
add
mov
cmp
sbb
inc
or
cmp
cmp
outsl
add
pusha
jo
xchg
ret
lock
js
cmpb
lret
pop
aaa
sub
out
data16
lea
cmp
fildll
xchg
fmull
jo
jns
dec
insb
or
push
subl
test
cli
push
sub
incb
sbb
sub
out
stos
in
data16
mov
mov
xor
into
mov
daa
ja
out
mov
push
aaa
mov
lcall
repz
scas
xor
dec
lods
push
pop
jge
sbbl
jbe
jbe
orb
sbb
popa
pop
or
xor
enter
jno
cmpsb
dec
and
data16
dec
lcall
outsl
ss
iret
push
lcall
in
inc
test
xchg
sub
mov
test
push
inc
push
data16
lret
aam
mov
push
adcl
xlat
in
xor
cmp
mov
pusha
xchg
cmp
add
repz
insb
push
fiadds
icebp
repnz
push
mov
lret
aad
sub
lret
pop
shll
sbb
lods
shll
ret
jecxz
adc
xor
jne
loop
lock
sub
fwait
push
push
fbld
pop
enter
or
bound
je
push
or
into
pop
jne
leave
or
sbb
aaa
scas
mov
mov
mov
cmp
adc
fiaddl
or
lret
mov
cwtl
loope
cmp
mov
inc
or
mov
mov
mov
mov
mov
aas
pop
adcl
test
repz
inc
mov
inc
or
xor
add
add
dec
mov
push
cli
out
mov
xchg
add
out
cli
adc
inc
scas
pop
divb
sub
lds
nop
lret
rcr
xor
jae
adc
jl
aas
inc
xchg
cwtl
mov
xor
out
mov
and
and
mov
pop
push
popa
fidivrl
sbb
xchg
pop
loopne
call
xchg
int3
push
je
push
xchg
in
jae
pop
mov
xor
sbb
jg
lcall
xor
or
push
ja
scas
push
fstps
aad
push
xchg
mov
sub
ds
arpl
or
data16
cwtl
jno
jo
roll
inc
daa
rclb
int3
jmp
mov
jmp
adc
and
shll
iret
loope
or
and
mov
jns
test
aad
imul
mov
and
int3
aaa
mov
mov
test
sbb
addr16
aad
jge
aas
sub
adc
iret
leave
add
or
sub
lea
mov
fucom
mov
push
idivb
pusha
mov
sbb
repz
iret
jo
rorb
pop
mov
dec
dec
test
xor
out
jp
fildl
stos
jmp
add
enter
pushw
pop
mov
xor
sbb
pop
xchg
aas
push
icebp
sbb
adc
cltd
mov
repnz
dec
jl
inc
mov
lcall
sahf
push
rol
notl
ret
push
mov
cmp
lods
arpl
hlt
pop
jb
loopne
pop
sbb
sti
sub
es
add
scas
cmp
aam
inc
testl
mov
inc
out
cmp
mov
pushf
and
xchg
sbb
rorb
xor
insb
add
cmp
jl
aam
pop
cli
outsb
jno
jp
ret
and
add
test
xchg
frstor
inc
jecxz
leave
cli
xchg
adc
sbb
add
and
ljmp
mov
repnz
mov
cmpsb
daa
xor
arpl
in
sub
hlt
push
mov
sub
popa
jne
push
push
movsl
enter
adc
cmp
sahf
adc
mov
in
cwtl
or
shlb
pop
mov
mov
lea
notl
push
sbb
cmp
inc
mov
cmp
pop
les
lret
mov
sbb
xchg
cltd
push
inc
sub
das
std
mov
mov
jecxz
movsl
xchg
add
hlt
dec
lods
fs
inc
int
ret
mov
dec
lods
mov
mov
sub
push
push
cli
or
sbb
pop
xchg
lds
sub
mov
mov
daa
aaa
pop
jo
insb
adc
push
xor
push
add
nop
pop
xchg
and
popf
mov
mov
pushf
add
or
sti
lods
pop
les
pop
idivb
push
pushf
incb
dec
ljmp
or
stos
test
cld
xchg
mov
rcrb
in
mov
sti
mov
mov
out
push
cmp
cli
cmp
hlt
fildll
mov
cwtl
outsl
jecxz
outsl
mov
dec
mov
inc
mov
cmp
dec
out
mov
xchg
xor
pop
loopne
inc
dec
mov
loope
movsb
cltd
loop
lock
xchg
xor
add
call
mov
or
push
dec
push
xchg
fdivrl
cmc
mov
or
pop
call
inc
call
sub
mov
inc
int3
cmp
and
mov
cmp
mov
frstor
sbb
push
xlat
sub
popf
fwait
jbe
jnp
mov
ret
js
insl
stos
sub
rcrb
fwait
xlat
lcall
xchg
fsubrl
mov
jns
xchg
jnp
iret
or
imul
insb
sahf
dec
rorl
rclb
je
inc
sbb
lds
testl
dec
fwait
inc
add
shl
and
or
fst
jp
add
cmp
and
mov
or
mov
mov
loope
shl
stos
sub
cmc
cmpsl
cmp
lea
push
out
xchg
pop
mov
dec
imul
add
ljmp
test
cmpsb
stc
addr16
adc
shlb
loop
xchg
dec
movsl
and
mov
sbb
test
or
cwtl
dec
fistps
jle
stc
lods
jne
loope
mov
mov
mov
mov
or
insb
or
jle
add
push
inc
pop
cmp
sbb
cmpsb
scas
mov
rclb
imul
mov
sti
sub
daa
adc
mov
pop
lret
push
cli
mov
lock
inc
xchg
xchg
and
inc
stc
insb
push
push
adc
adc
test
cmovbe
dec
lock
push
loop
push
dec
sysret
inc
in
aas
fidivrl
insl
hlt
mov
lock
dec
iret
aaa
pop
xlat
and
rorb
movsl
cmp
adc
sub
out
cli
in
mov
scas
in
and
ljmp
aaa
pop
adc
and
cmovns
or
into
dec
jae
lret
ljmp
push
cld
xlat
pop
mov
shlb
dec
jge
rorb
rcrl
ret
cmp
test
iret
and
mov
dec
mov
inc
jl
enter
rclb
pop
das
mov
sarb
ja
imull
filds
jne
stos
and
enter
lret
xchg
xchg
xor
push
xchg
add
stc
xor
pop
xor
mov
inc
pop
sbb
ret
sbb
cmpsl
ret
lret
inc
ss
out
jbe
out
dec
fwait
xor
test
push
and
fimull
add
sub
dec
fsubrl
test
jmp
movsl
xor
ret
mov
ss
sbb
or
inc
fbld
sbb
repnz
iret
popf
rol
add
xor
push
mov
adc
push
fs
adc
dec
and
mov
repnz
jmp
imul
dec
jne
push
mov
jns
mov
jge
das
ficomps
repz
mov
popa
push
dec
out
inc
push
aad
lock
fisttpll
push
mov
jno
pop
push
add
xor
sub
repz
ret
adc
mov
jg
loopne
pop
inc
inc
rcll
repnz
stos
cmp
mov
sub
mov
and
inc
pop
push
mov
cmpb
adcb
jecxz
xor
test
lods
fdivrl
fmuls
jno
jns
addr16
lods
pop
mov
push
cmpb
ret
sub
sahf
lcall
sub
movsl
push
push
mov
fistps
mov
jbe
or
xor
jnp
fmull
add
dec
adc
xlat
enter
mov
sbb
inc
in
and
sbb
fdivrs
jne
int3
jne
jbe
pop
ljmp
ds
add
mov
sti
xchg
and
cmp
shll
add
int3
fcomps
sub
jecxz
jo
dec
ljmp
adc
xor
mov
jecxz
push
jns
pop
addr16
inc
push
icebp
loop
adc
push
lods
ljmp
lahf
in
push
test
imul
lock
fldt
add
pop
xlat
imul
gs
xchg
or
xchg
push
sahf
je
daa
sub
add
cmpb
dec
inc
cmpsb
fwait
and
icebp
int
mov
and
adcb
test
inc
or
aaa
addb
es
inc
lods
push
mov
lret
pop
or
xchg
mov
mov
mov
dec
push
jne
or
aad
and
push
icebp
adc
sti
std
xlat
jp
xchg
mov
xchg
cld
cmp
fnstenv
leave
in
mov
cld
jno
mov
adc
xchg
popl
int3
rcll
adc
cmp
test
aas
xor
and
bsf
cmp
clc
pop
push
jns
and
arpl
les
cmp
out
enter
jne
or
out
and
insb
cmp
mov
cli
jmp
sbb
pop
test
lahf
je
mov
jl
and
nop
notl
imul
mov
ret
pusha
fmul
cmp
ljmp
and
sbb
xchg
int
dec
mov
dec
insb
adc
rorb
aad
scas
in
loope
pop
psubw
sahf
xor
into
push
jne
pop
loopne
xchg
fstpl
inc
xchg
xor
sub
pop
fs
dec
pop
mov
jo
mov
aas
or
and
inc
xor
jnp
dec
inc
rcl
inc
xchg
cmp
or
fidivrs
into
adc
rorb
cwtl
aaa
mov
cmc
lds
mov
add
sub
shl
out
orl
popa
js
cwtl
orl
out
cmp
call
shlb
and
cmpsl
cli
dec
iret
fsts
aam
or
roll
fwait
or
fcomp
xor
pop
mov
xchg
pop
mov
fiaddl
adc
or
xchg
mov
gs
je
outsb
jo
lock
dec
bound
and
pop
mov
movsl
sub
xor
pop
pop
mov
push
jmp
adc
inc
push
addb
and
pop
mov
push
sub
enter
mov
jp
daa
xchg
cmpsb
aam
pop
or
fwait
repz
inc
xchg
push
mov
subb
iret
fcomps
inc
xorb
test
mov
or
stos
or
adc
loop
dec
jb
add
lahf
mov
mov
inc
push
and
push
inc
cmp
and
enter
dec
or
int3
jg
cmp
int3
or
les
push
stos
cmp
pusha
cwtl
adc
orb
or
je
push
mov
ret
jle
push
roll
or
aas
jnp
xchg
and
add
int
jb
fists
and
rcll
mov
dec
das
or
subl
outsl
jl
push
push
add
xor
std
dec
lds
addb
lods
add
sub
imul
mov
pop
movsb
sub
gs
jno
ljmp
inc
xchg
pop
out
push
andb
aam
je
xor
jmp
adc
cli
add
imul
and
lcall
sbbl
mov
pop
sti
into
push
shr
testl
stos
mov
pop
test
repnz
and
mov
rorl
pop
je
push
fisubrl
in
xchg
sarb
sub
xchg
mov
pop
cmpsl
cmp
jo
adc
iret
movsl
sysret
test
imul
and
dec
call
pop
jns
lods
lea
push
and
imul
push
lods
push
lret
jmp
push
dec
sub
and
int3
or
lahf
adc
cmpsb
cmc
outsb
cwtl
sahf
push
jne
mov
jno
mov
push
notb
fsubp
xor
mov
insl
out
mov
jno
xchg
fldl
or
daa
pop
cmp
imul
adc
dec
sub
outsl
cwtl
xor
push
or
fstpt
movsb
outsl
daa
cmpsl
pop
add
inc
push
mov
add
rcl
mov
dec
sub
mulb
outsb
mov
nop
ljmp
push
shrb
mov
iret
lea
idivl
or
in
jmp
sub
xchg
or
hlt
xchg
je
cld
mov
iret
push
adc
add
push
pusha
lret
or
lods
cltd
outsb
insb
xor
xchg
int
mov
cmp
jnp
iret
inc
mov
out
mov
arpl
in
popa
dec
lcall
adc
imul
iret
lahf
cmc
sti
push
jo
mov
mov
cs
and
lock
push
mov
jle
lock
aam
imul
rcl
push
dec
add
xor
std
cmp
cmpsb
mov
xchg
jae
add
xor
add
rorl
shll
fdivrs
shrb
loop
cltd
in
cmp
adc
testl
xchg
mov
jecxz
test
dec
dec
clc
sub
or
sbb
je
push
test
add
ret
andb
cmp
inc
sub
int
cmp
inc
pop
outsl
inc
cwtl
sqrtps
cmp
cmp
mov
jbe
push
outsl
xchg
jle
aas
mov
or
xchg
enter
jmp
jmp
repz
out
sbb
cmp
aam
sub
fs
jl
lret
repnz
mov
dec
lods
adc
cmpsb
push
lock
xor
push
xchg
add
mov
subb
mov
sarb
jmp
test
xor
cltd
sbb
popf
stos
or
cmp
adc
inc
mov
int
rcl
out
lahf
orl
inc
mov
popa
out
jb
sbb
adc
popa
push
cmpsl
hlt
fwait
jnp
xchg
jle
push
sub
xor
icebp
jne
and
sbb
fisubrs
loope
stos
push
push
xchg
addl
testb
decl
imul
mov
jb
add
push
cwtl
mov
xor
in
pop
pop
ret
jecxz
repnz
enter
ret
and
inc
popf
iret
out
outsb
push
je
fsubrp
push
ds
fidivrl
xchg
ds
int
out
outsl
adc
xchg
or
cmp
sub
cmp
cwtl
cmp
scas
or
xchg
or
test
jg
out
inc
ja
inc
inc
sub
mov
dec
or
mov
fsts
xor
lcall
es
mov
mov
jno
sbb
xchg
rcl
lds
dec
loopne
cmp
push
push
arpl
dec
mov
xchg
mov
pop
sub
push
repz
sub
stos
sbb
inc
xchg
xchg
or
pop
jle
test
les
mov
mov
movsb
cld
hlt
push
push
mov
mov
incl
roll
aam
jnp
cmp
dec
mov
repz
sub
jae
ljmp
fcmovnu
out
stc
test
xchg
lahf
ds
sahf
mov
mov
mov
pop
dec
adc
ja
or
add
sahf
shrb
jne
loope
jb
pop
sbb
inc
stos
add
push
fildll
sbb
jecxz
data16
sbb
xchg
adc
add
mov
ror
mov
lahf
sahf
clc
aas
insl
xor
xor
dec
fdivl
mov
or
pop
jmp
adc
ret
fnstsw
pop
aas
or
leave
enter
xchg
or
scas
pop
sbb
xor
cmc
clc
cmp
mov
cmpsl
call
leave
lcall
jnp
or
inc
mov
push
fldl
push
lods
les
xchg
fwait
popa
jae
cmpsl
incb
into
aad
lret
mov
mov
dec
call
jp
cltd
stc
sbb
aad
clc
sub
cld
test
stc
ja,pn
repnz
jns
test
int3
cwtl
inc
xor
and
std
xchg
in
rcl
add
cs
leave
dec
les
shlb
into
fnsave
rcrl
mov
adc
int3
push
inc
xchg
mov
lods
imul
clc
shlb
inc
jle
mov
jle
ret
mov
mov
xor
xor
xchg
jo
mov
in
xor
lret
pop
jp
in
mov
jmp
je
pop
mov
daa
cmc
mov
fucomi
mov
pop
cmp
in
cmpsb
push
dec
or
mov
mov
mov
iret
mov
cmp
cmp
inc
add
mov
xchg
jns
mov
in
mov
fidivrs
sub
repz
jo
jmp
into
dec
gs
mov
adc
movsl
push
pusha
inc
mov
divl
iret
aad
mov
mov
push
rorb
lahf
ss
loope
push
ret
sbb
js
ret
stc
push
leave
sub
in
roll
ss
clc
pop
outsb
aad
xor
jnp
xlat
cld
sahf
jl
loop
mov
add
inc
push
push
inc
daa
mov
or
push
mov
or
dec
mov
sti
xchg
loop
mov
adc
xor
in
xor
mov
sbb
cld
jp
inc
sbb
push
stos
call
hlt
out
mov
add
jo
mov
push
int
jecxz
xchg
pop
lock
xorl
mov
je
imul
lahf
mov
mov
sub
lret
in
aam
and
ja
xchg
rcl
xchg
lea
dec
fimuls
lahf
and
push
fnstsw
cli
pushl
push
fdivrs
inc
adc
popa
sahf
adc
jns
mov
and
sbb
rorl
add
pop
and
xor
loop
dec
decl
xor
pop
fstps
out
outsl
test
pop
pop
jae
push
pop
or
bnd
mov
imul
dec
hlt
inc
jns
jge
xor
aad
cmp
cmp
jle
aas
mov
adc
jmp
xlat
cmp
addr16
cmp
mov
repz
lret
je
dec
les
pushf
call
arpl
stc
xchg
push
pop
jge
adc
out
incb
into
in
in
mov
loop
call
fstpl
cmp
out
inc
mov
loope
sbb
cmpsl
lods
add
insb
lods
inc
mov
mov
jo
addb
and
push
fwait
aas
and
mov
mov
cmp
in
mov
cmp
sub
dec
jle
push
lods
cli
xor
shrb
fsubrl
mov
cmpb
arpl
cld
sbb
lret
cld
sbb
xchg
xor
or
mov
jp
mov
jge
inc
dec
inc
adc
das
mov
cmpb
frstor
popf
sarb
add
mov
push
sbb
das
xor
add
es
and
stc
inc
jp
imul
addb
stc
push
enter
out
jmp
xorl
out
dec
das
out
or
inc
dec
mov
cmpsb
dec
in
jns
pop
pop
ss
lret
dec
das
in
inc
push
fldl
pushf
clc
mov
jecxz
xchg
jbe
sbb
decl
popa
push
int3
inc
cmc
popa
fdivrl
roll
scas
xchg
and
and
popa
sbb
icebp
test
cmp
shr
push
in
xchg
test
insl
xchg
sub
or
pushf
or
jno
fcoms
xchg
jae
das
in
rcrb
push
sub
mov
call
jp
ja
push
ja
cmp
inc
out
push
inc
mov
fldl
jl
add
sub
movsl
inc
popa
bnd
cmp
mov
lcall
cmp
insb
cltd
cmc
xchg
incb
pop
add
mov
jae
ret
or
mov
xchg
jg
imul
push
aaa
mov
fs
xor
xor
pop
sbb
es
stc
fstpt
loop
jg
ss
sub
pop
mov
lds
mov
cmpb
jp
mov
cli
mov
dec
shr
imul
ret
xchg
dec
int3
repnz
repz
dec
enter
test
outsl
xchg
into
push
repnz
mov
or
mull
sbb
into
shrb
sbb
xchg
sbb
adc
push
stc
or
daa
fidivs
xchg
fnstenv
xor
bound
push
leave
inc
or
cmp
loop
es
mov
in
push
sbb
std
hlt
loop
sub
pop
popa
or
add
lods
jb
or
sub
in
dec
mov
or
adc
imul
mov
mul
lret
fsubrs
adc
xchg
or
orl
jns
lock
cmp
outsb
lea
stos
jle
mov
sti
mov
andl
adc
fisubl
push
cltd
xor
or
or
adc
xchg
jns
lret
push
mov
std
xchg
out
out
into
dec
int3
sahf
inc
addr16
cmpsl
mov
daa
jb
loopne
popf
clc
inc
out
or
lods
cmp
mov
jg
fistpll
adc
out
cltd
adc
mov
popf
push
pinsrw
mov
mov
imul
mov
mov
adc
arpl
and
jno
stos
fwait
es
pop
das
xchg
pop
dec
sbb
mov
sub
jae
mov
in
push
jp
or
fnstcw
mov
adc
bound
outsb
jbe
mov
lcall
adc
jno
lods
shlb
or
pop
mov
or
sti
fisttpll
and
cld
adc
lods
insb
dec
mov
mov
add
icebp
in
jnp
iret
loop
mov
jg
es
std
sbb
jecxz
jmp
or
ret
sbb
cmp
inc
and
inc
dec
mov
loop
lcall
adc
mov
cmp
jns
mov
xor
aaa
repnz
fsubrs
cmp
ljmp
xchg
adc
loope
jmp
mov
dec
and
and
mov
sti
shlb
sti
fs
mov
andb
js
cmp
mov
call
jnp
add
push
rol
test
jg
lcall
addb
gs
test
int
adc
movsb
gs
int
sub
dec
mov
dec
imul
into
inc
mov
adc
adc
jg
fs
cmp
sar
jns
sub
dec
cli
fiadds
test
stos
mov
ja
lock
loopne
dec
cmp
jno
adc
lods
je
mov
movsl
lcall
rorl
mov
inc
out
dec
dec
mov
cs
xchg
int
sbb
push
popa
sbb
popf
in
push
fldenv
jg
inc
xchg
pop
pop
lcall
data16
mov
mov
xchg
xchg
aam
cmp
and
add
shll
cmpsl
aam
xchg
dec
or
xor
xorl
jns
sub
dec
inc
and
leave
test
js
sub
jns
fists
mov
icebp
sarl
out
pop
in
inc
and
lahf
mov
fisttpl
sub
in
adc
jnp
dec
add
xor
xchg
mov
xchg
cltd
aas
mov
mov
call
cmp
adc
add
pop
adc
push
out
ljmp
shlb
mov
add
pop
movsl
mov
test
sti
inc
stos
ds
sahf
dec
adcl
lds
xchg
imul
mov
shlb
lcall
cli
arpl
frstor
and
mov
dec
fsts
pop
je
mov
dec
mov
hlt
sub
sub
hlt
pop
pop
cwtl
popa
pop
pop
mov
cmp
pop
and
add
loope
js
mov
lds
subl
pop
mov
je
arpl
iret
inc
cmp
aad
mov
inc
in
xsha1
cmpsb
dec
cltd
adc
jno
sbb
mov
cmpsl
in
les
ss
outsl
imul
enter
fs
ljmp
call
loop
in
ficompl
sbb
and
jnp
inc
dec
add
or
jmp
mov
add
xor
in
repz
push
imul
fadd
test
out
insl
lods
adc
xchg
test
push
rcl
jno
sub
lea
cmp
movsl
add
pop
cmpsb
pop
out
test
xor
outsl
lea
push
and
in
fstpt
push
mov
pop
lock
cmp
pusha
jnp
xchg
cmp
or
ficoms
xchg
loopne
les
xchg
mov
sbb
repz
push
mov
cmpsb
sbb
test
mov
pop
call
sub
je
push
push
sub
mov
fs
jo
cmp
jecxz
jne
test
xchg
pop
jmp
xchg
sbb
mov
pop
dec
inc
mov
cmpsl
inc
cmp
popf
push
daa
lcall
je
inc
insb
mov
push
add
roll
enter
dec
add
sub
push
test
inc
subb
jecxz
cmp
adc
jae
inc
xchg
jmp
les
xor
out
iret
pop
cwtl
andl
ds
xor
sti
pop
movsl
out
cmpsl
push
sbb
pop
aad
xchg
mov
push
jl
or
cmpsb
jge
mov
adc
rcll
stos
pushl
lret
stos
push
aam
cmp
cmp
notb
pop
dec
inc
mov
xor
ds
fadds
add
cs
arpl
inc
sbb
test
xchg
xchg
or
adc
aas
xchg
push
stos
sub
std
in
xchg
adc
jb
insb
lea
rep
push
jae
clc
aam
lea
push
insl
loopne
mov
mov
mov
repz
mov
das
add
sti
jge
add
loop
mov
adc
cmp
push
je
nop
inc
push
jne
cmpsl
lea
push
jmp
fs
call
sub
ret
sub
sub
and
mov
addr16
dec
mov
dec
sbb
sarl
add
inc
sbb
out
aad
lret
sti
mov
rol
and
mov
movsb
jecxz
dec
testl
arpl
clc
jecxz
out
push
xchg
mov
mov
movsl
pop
mov
push
inc
mov
xlat
mov
inc
mov
cmovne
out
out
les
cmp
ret
std
xchg
cs
aam
xor
xlat
pop
dec
mov
pop
jmp
jl
in
stc
dec
test
dec
xlat
out
sbb
insl
xor
mov
insb
into
jl
cmp
call
xchg
aad
out
ret
jo
lds
rcr
pop
sbb
test
cli
stc
pop
mov
or
cmp
arpl
dec
outsl
jo
adc
cmpsb
pop
add
fcomp
mov
dec
bnd
xor
lea
ja
idivl
pop
idivb
mov
sbb
mov
push
mov
fists
decb
xchg
int3
push
dec
fldcw
stc
and
out
inc
push
gs
adc
das
mov
and
or
incb
push
cli
mov
pushf
dec
incb
xchg
pop
cmp
mov
cwtl
cmp
add
addl
clc
and
sub
or
sbb
ret
mov
pop
lcall
in
cmp
gs
adc
aad
inc
and
daa
ror
out
fcmovbe
push
cmp
test
xchg
xchg
adc
test
loopne
inc
call
adc
outsl
adc
cmp
jbe
repz
bound
inc
or
loop
push
popf
sub
out
mov
negb
test
adc
jl
ljmp
xor
loop
data16
je
cmp
adc
mov
push
xchg
cmp
and
adc
hlt
add
xchg
mov
add
mov
xor
rcll
and
push
test
fdivr
dec
jb
dec
jno
shrb
xchg
scas
lds
add
add
and
aad
xor
sub
andb
adc
insb
stos
push
jnp
into
stos
inc
dec
mov
fidivl
scas
movsb
and
xchg
cli
and
pushf
xor
cwtl
mov
and
mov
mov
pop
inc
mov
xchg
ljmp
out
mov
mov
mov
neg
mov
xor
leave
mov
cmpxchg
sbb
push
scas
push
sbb
pop
pop
adc
dec
lahf
lea
push
or
es
jecxz
rcl
cmp
sub
mov
add
push
lret
and
stc
aad
cld
push
movsb
imul
jmp
aad
sarb
mov
in
fwait
cmc
fsubp
mov
jae
push
push
lret
pushf
inc
mov
repz
adc
jmp
xor
push
stos
inc
out
jno
pusha
cmp
cmpsb
dec
pop
add
int3
iret
out
pop
je
mov
into
mov
pop
outsl
rcrl
or
movsl
in
push
push
dec
sub
fwait
mov
sahf
jb
dec
iret
lock
inc
sub
call
jmp
dec
aam
pop
or
repnz
or
mov
xchg
hlt
xchg
mov
adc
sbb
mov
pop
push
mov
sbb
jmp
xchg
push
jmp
roll
daa
mov
out
scas
leave
std
dec
dec
je
mov
std
adc
push
xchg
adc
add
and
xor
in
insb
xchg
and
inc
mov
test
adc
xor
test
mov
sub
add
enter
sub
test
sbb
push
jo
xor
mov
lock
lahf
movsl
xchg
mov
jg
jle
pop
lret
xchg
lret
sbb
adc
fidivrs
mov
dec
inc
mov
pop
lods
push
outsl
ficompl
sub
push
out
pop
push
ret
sbb
mov
xor
jne
addr16
jne
mov
add
scas
mov
and
cli
push
lret
sbb
movsl
mov
mov
xor
and
dec
sarl
into
shlb
and
jns
mov
mov
pop
movsb
or
mov
mov
push
sbb
push
pop
rolb
fcmove
sahf
scas
insl
or
cs
xlat
das
imul
loopne
cwtl
rcl
add
scas
int3
push
div
fiadds
in
inc
or
and
lcall
popa
enter
and
fisttpl
adc
insb
stc
and
push
js
stc
in
cmc
cwtl
mov
cwtl
jle
mov
icebp
ljmp
sub
cmp
or
add
call
cs
mov
cmp
cmpsl
fsubr
and
and
loopne
pop
or
jge
sub
pushf
arpl
pop
jl
or
sti
inc
icebp
mov
sub
jb
mov
inc
inc
mov
xor
sbb
adc
adc
jb,pn
subps
das
add
mov
pop
jge
in
inc
jmpw
sbb
out
ret
mov
arpl
pusha
xor
out
sbb
dec
push
aad
pop
cmp
mov
push
sub
pop
aad
test
lcall
arpl
sbb
adc
inc
adc
gs
ret
xchg
jns
push
xor
xchg
shrb
out
mov
popl
or
ss
sbb
push
xchg
orl
or
ja
add
ljmp
movb
dec
mov
and
mov
cld
sbb
pop
pop
sbb
in
fcompl
or
je
mov
and
incb
aad
adc
sar
xchg
dec
mov
imul
xchg
test
sbb
pop
xchg
jge
add
cmc
dec
push
enter
mov
test
pop
xchg
cmc
mov
add
pop
sbb
jae
mov
ja
or
and
and
jns
add
sbb
and
dec
test
pop
inc
imul
hlt
leave
icebp
inc
std
mov
dec
mov
inc
pushl
cwtl
nop
nop
xlat
cmpsb
jae
icebp
cmpsb
fdiv
ret
lds
ja
lods
mov
jne
adc
shl
add
or
xor
and
cmc
add
jne
jmp
in
add
outsl
lret
adc
xchg
clc
add
sbb
mov
xor
notl
inc
popa
push
pop
lcall
pushf
xchg
jb
jge
dec
cmp
inc
ret
loopne
movsl
jl
adc
add
jg
sbb
rorb
imull
push
xor
ljmp
pop
ljmp
push
pop
stos
stc
rcll
and
cmp
add
xchg
cmp
enter
add
sub
sbb
xchg
popa
int3
dec
mov
xor
xchg
adcl
daa
iret
xchg
and
xchg
call
cmovle
arpl
adcl
dec
cmp
adc
mov
mov
mov
jecxz
leave
push
loop
pop
loop
jl
dec
out
mov
sbb
ss
scas
arpl
add
mov
pop
gs
push
imul
sub
jo
flds
xor
sbb
or
inc
cmpsl
sahf
js
push
inc
cmp
cmpsl
bound
sub
ds
aad
icebp
dec
push
test
mov
xchg
fnsave
adc
sub
stc
sub
push
jg
enter
dec
aad
movsl
fcmovnbe
imul
adc
maxps
sub
invd
negl
jae
in
clc
mov
pop
popa
testb
push
push
pusha
popf
int3
mov
pop
cmp
movsl
test
repz
xor
movsl
add
sub
icebp
clc
lds
cmp
stos
lock
pushl
and
repnz
daa
inc
xchg
or
mov
sysret
add
mov
cmp
nop
inc
pop
les
test
out
adc
push
mov
sbbb
xor
or
pop
sti
std
popf
jb
and
negb
push
pop
je
and
dec
sub
jp
ja
stos
in
adc
scas
push
pop
cltd
popa
add
dec
and
dec
sub
fnsave
int
push
mov
das
xor
jmp
out
jecxz
cmp
test
add
sbb
je
movsl
into
int
sbb
jne
mov
js
mov
mov
cmp
push
jnp
arpl
and
cmpl
je
and
push
dec
adc
scas
lcall
je
notb
jg
xchg
stc
rorl
dec
sub
dec
pushl
movb
flds
push
shlb
outsb
popa
pop
mov
and
pop
dec
dec
jo
sub
vpcmov
lahf
orb
iret
cmpsl
pop
adc
test
jo
xlat
adc
ret
and
inc
dec
sahf
xor
insb
ds
or
pop
test
push
and
movq
rclb
aas
rolb
xchg
shlb
hlt
imul
daa
xchg
shl
pop
ja
xor
mov
xchg
fistpll
js
xor
jae
lar
pop
push
test
inc
or
dec
repnz
pop
jne
xchg
int
in
pop
xchg
sbb
or
mov
or
test
es
shl
add
push
insl
lcall
or
and
scas
jae
mov
lahf
popf
jle
pop
test
mov
ret
sarb
mov
jecxz
push
movsb
jmp
sti
lods
adc
inc
xor
pop
aaa
fsubrs
cmp
aam
mov
cmp
mov
or
add
les
xchg
dec
push
mov
fidivs
icebp
or
sarl
stos
adc
add
scas
inc
jg
and
rcrl
rolb
adc
jmp
pushf
dec
pop
cmpsb
loope
xor
mov
xchg
dec
mov
fsubr
ret
xchg
andb
dec
lds
setl
lea
inc
mov
pusha
mov
lahf
ret
pop
mov
inc
pop
xstore-rng
cmpsl
inc
out
cs
rcr
std
push
add
ss
xor
or
pushf
push
or
push
push
and
lock
mov
lret
inc
mov
mov
sbbb
xchg
out
dec
out
jp
stos
xor
addb
or
ds
xor
cmp
cli
dec
push
or
jmp
cmp
and
xchg
inc
sarb
jle
pop
stos
or
loop
mov
shll
popf
mov
dec
mov
pop
push
jl
jnp
cmp
mov
aad
mov
ja
mov
icebp
sub
and
xchg
shl
ud0
add
out
dec
popa
pop
aam
pop
test
mov
sub
cwtl
sbb
dec
lcall
dec
xchg
mov
sub
repnz
dec
loop
nop
add
add
xchg
cmp
bound
inc
outsb
add
mov
rcrb
cmc
testl
fbstp
in
mov
scas
mov
mov
outsb
ljmp
movsb
mov
push
xor
in
adc
mov
add
pop
cmp
inc
or
js
pop
and
loopne
jle
jne
fldcw
mov
es
and
push
inc
jmp
and
sbb
mov
movsl
popa
cmc
mov
insl
pop
sbb
push
sbb
xor
fsubr
rclb
popa
sti
ss
adc
mov
daa
and
add
dec
mov
cwtl
call
stos
sub
aas
and
imul
pop
out
mov
push
sub
push
push
cli
rcrl
insb
push
mov
pop
pop
push
mov
cs
cmp
mov
stos
mov
xchg
xor
adc
cld
dec
dec
dec
and
js
hlt
jno
dec
out
push
cmp
lods
shrl
sub
push
pop
jnp
sbb
addl
dec
cmp
bound
movsl
push
fiadds
pop
pop
out
inc
in
lds
sar
push
cmp
mov
add
rcrb
lods
sub
cmp
and
sub
and
movsl
sub
jae
dec
push
fcomps
pop
push
subb
shll
sbb
add
in
or
lcall
inc
sub
xchg
cmp
or
lock
adc
mov
fildll
xchg
adc
rclb
sbb
mov
mov
insl
lods
push
aaa
push
pop
xchg
test
mov
stos
pop
mov
aas
push
pop
adc
dec
mov
push
xor
ja
in
sbb
andb
dec
lahf
inc
cmp
sub
xchg
mov
ret
lds
lcall
test
adc
or
inc
insl
sbb
scas
pop
arpl
jo
mov
sbb
jae
push
addr16
fidivs
mov
add
push
out
jae
fcoms
push
adcl
inc
adc
cmp
pop
push
movsb
roll
in
dec
cmp
push
xchg
in
addb
sub
add
lret
sbb
lret
ljmp
gs
aad
aaa
aad
or
call
out
pop
aam
or
stc
push
mov
add
pop
push
test
push
lea
nop
icebp
inc
or
inc
xchg
push
out
je
das
dec
push
enter
aas
repnz
inc
add
iret
sub
adc
jnp
lcall
pop
push
int
add
pop
adc
rol
and
inc
sub
add
and
jno
movsl
mov
out
mov
push
mov
mov
movsb
popa
push
lods
cli
jno
mov
and
inc
cli
sub
sbb
lods
dec
outsb
push
lahf
push
daa
fwait
mov
cli
xchg
rcll
jo
shll
popa
add
dec
pop
shr
xchg
sahf
inc
push
mov
lahf
inc
shll
dec
and
cmpsb
arpl
rcrb
mov
and
dec
iret
cmp
xchg
movsb
mov
xlat
add
mov
mov
clc
outsl
sbb
arpl
jl
les
xchg
sbb
dec
iret
add
loopne
lcall
loop
mov
and
std
adc
push
add
mov
sub
gs
das
pop
dec
add
push
sbb
aam
push
fistl
bswap
fldl
sub
out
insl
pop
or
add
testl
dec
mov
leave
mov
xor
lahf
ret
push
popf
loop
cmpsl
cmpsb
imul
push
scas
dec
pop
in
sbbl
rorl
popf
push
mov
aam
imul
inc
adc
jmp
fwait
mov
fcomps
leave
jns
clc
cmp
scas
repnz
sbb
js
in
dec
addr16
in
outsb
xchg
movsb
lret
cltd
sti
mov
ds
jns
mov
loope
dec
sub
pop
xchg
mov
mov
into
jmp
xor
das
out
inc
cmpsb
stc
push
sbb
and
inc
repz
or
mov
xor
sub
lea
push
mov
movsb
mov
sub
dec
in
clc
mov
in
mov
sub
sbb
in
filds
add
jne
pop
jns
xchg
lcall
or
es
pop
sub
push
stos
ss
outsl
add
push
sub
into
ret
jg
jge
xchg
or
scas
push
mov
cld
jno
clc
aad
mov
popf
stc
js
add
popa
and
in
addr16
push
add
lcall
stos
je
pop
jp
xchg
arpl
and
test
jno
mov
sbb
or
xorb
movsl
imul
adc
xchg
lcall
outsl
adc
xchg
fwait
ljmp
add
rolb
data16
pusha
jnp
orb
neg
out
fimuls
mov
mov
hlt
out
ficomps
adc
cmpsl
cli
push
repnz
sahf
popa
rcrl
stos
stc
jae
push
lret
sbb
pop
mov
xchg
sub
fldt
test
cwtl
outsl
insb
ja
hlt
repnz
call
jp
leave
adc
out
or
mov
dec
rolb
mov
xchg
pop
push
push
outsb
fwait
addr16
push
add
sbb
inc
pop
hlt
mov
sub
data16
xlat
dec
roll
nopl
xor
sbb
mov
jae
inc
int3
repz
push
push
leave
inc
cltd
mov
repz
pop
int3
mov
jae
stos
mov
pop
xor
xor
jecxz
std
in
insb
or
sbb
lret
cwtl
or
pop
inc
xchg
mov
push
clc
mulb
aas
xchg
sub
jmp
lcall
rorl
or
pusha
inc
sub
filds
mov
js
cmp
idivb
mov
sti
and
arpl
std
push
sti
or
daa
or
xor
fistpl
pop
jbe
lea
xchg
stos
call
xchg
sbb
das
enter
pusha
sarb
sub
loop
dec
cmp
add
sti
scas
mov
lret
jnp
mov
adc
in
stc
lcall
ret
lahf
mov
and
add
mov
sub
jb
cli
lret
enter
mov
jp
push
push
in
and
fs
ljmp
loopne
mov
enter
adc
xor
jle
leave
jle
xchg
add
cmpsb
pop
sti
xchg
sub
repnz
in
mov
aas
push
mov
shlb
push
inc
outsb
pop
subl
cmp
test
es
ja
jle
dec
test
imul
add
movsb
lods
ret
sbb
aad
sahf
mov
clc
mov
mul
shlb
xchg
jb
jb
bswap
push
sti
dec
out
cmp
mov
into
fs
dec
mov
push
rolb
pop
shlb
ja
ret
adc
mov
jns
jno
and
adc
lods
aaa
rclb
into
cmp
jecxz
push
lret
lahf
mov
mov
xchg
mov
lcall
out
mov
fcoml
test
mov
icebp
arpl
testb
push
mov
repz
nop
adc
jg
scas
inc
out
ja
ss
mov
aaa
ret
das
jo
test
fistl
jl
cmp
lahf
mov
xor
shl
dec
jecxz
divl
orb
push
sub
and
pushf
jecxz
test
mov
dec
aam
sahf
mov
mov
test
in
into
addr16
je
jl
cmp
jne
jns
mov
sub
xchg
mov
mov
pop
mov
sbb
mov
data16
pop
aaa
cltd
adc
cmp
inc
jp
xor
push
jmp
inc
jle
dec
fsubrl
js
ss
jno
imul
and
mov
xchg
aad
dec
in
push
mov
popa
icebp
fimuls
rcll
sub
jae
movsl
int3
mov
ds
cmp
dec
jb,pt
rol
sub
xor
cmp
cwtl
mov
lret
mov
jb
xor
jle
or
in
cli
push
cltd
mov
inc
aas
rclb
mov
jle
xor
sahf
scas
out
fildll
lods
cmp
push
sub
enter
mov
repz
lcall
testl
pop
push
pop
daa
xchg
lret
cwtl
jge
ljmp
push
mov
cmp
jb
pop
mov
shl
test
add
mov
push
xchg
sarb
push
add
and
fstpl
fdivrs
fildll
adc
clc
inc
cmc
call
pop
and
roll
aaa
and
scas
cld
push
int3
add
nop
icebp
adc
jbe
cmp
mov
or
cmpl
or
cmp
or
lods
fcomps
lret
cmp
mov
pop
jb
jae
or
pop
inc
imul
popa
sbb
lret
out
scas
dec
push
cmpsl
shr
push
mov
rcrl
mov
pop
and
and
jnp
push
mov
pusha
ljmp
or
fmull
pop
addr16
fcmovnbe
xor
scas
jbe
int3
daa
scas
scas
orb
into
jbe
dec
ljmp
lret
pop
jle
ret
xchg
dec
dec
sarl
sarb
hlt
xor
mov
dec
sbb
push
jp
jecxz
popa
xchg
add
dec
xchg
push
sar
push
pop
mov
pop
lds
mov
ret
push
repz
sub
std
nop
mov
insl
cmp
fcompl
in
push
mov
adc
into
xchg
mov
push
dec
sbb
xor
mov
in
pushf
jg
mov
lahf
cwtl
sbb
fdivrs
mov
stos
scas
push
andl
add
ret
mov
push
fstl
lods
pop
add
lods
iret
inc
pop
test
mov
mov
out
es
mov
push
sbb
punpcklbw
iret
sbb
mov
adc
dec
push
ret
loop
fwait
ljmp
arpl
jae
pop
push
jp
shlb
into
push
cmc
inc
pminub
daa
cmp
js
flds
xchg
nop
sub
add
pop
mov
shlb
into
inc
inc
sar
out
pusha
push
outsl
aam
aad
les
cmp
sbb
bound
pop
jae
cmp
pusha
xlat
push
inc
dec
stc
dec
xchg
jnp
stc
aad
sub
xor
and
jbe
xchg
ja
lret
loopne
add
pop
arpl
aad
rol
stos
xor
and
cmp
js
popa
jl
scas
xchg
jo
xchg
push
andl
dec
inc
mov
idiv
adc
nop
das
movsl
push
pop
mov
sub
call
adc
and
movsl
popf
ljmp
push
scas
lods
push
rol
pop
fldenv
dec
ret
sbb
add
lods
loop
nop
jns
sbb
mov
xchg
dec
mov
sbb
mov
mov
or
sti
cs
cmpsl
jge
es
sub
mov
inc
lahf
adc
cli
mov
jmp
clc
test
push
cmp
sub
gs
pop
in
adc
cmpb
std
std
int
mov
std
inc
fadds
cmpsb
and
push
call
fwait
pushf
dec
test
push
xor
mov
xchg
xor
dec
icebp
dec
negl
push
aam
pop
popa
push
mov
mov
js
or
add
push
cmp
jo
sub
stos
xchg
mov
int3
mov
jp
outsl
push
mov
sbb
xchg
sub
jb
test
mov
insb
daa
mov
shll
es
or
cli
push
aas
fsts
test
daa
in
sbb
sbb
push
mov
jo
push
lea
repnz
jle
in
push
lahf
jle
idivl
inc
mov
cs
ss
out
lret
mov
xor
push
cmpsb
dec
dec
or
ss
test
dec
mov
xor
jo
nop
mov
mov
bound
dec
nop
insl
iret
xchg
clc
adc
mov
aaa
push
jecxz
push
hlt
in
repz
sub
mov
sbb
pop
sbb
ret
lods
ret
cld
mov
cmp
cwtl
decb
sbb
imull
push
loopne
ljmp
xor
add
xor
pop
gs
sar
rorb
xchg
data16
mov
movsl
inc
dec
aaa
push
ret
fiadds
orb
scas
and
int3
cmpsb
jno
inc
addb
aaa
mov
xor
xor
mov
pop
outsl
mov
cmp
cmc
mov
imul
cmpsl
fdivl
in
jo,pn
pop
adcl
pop
enter
inc
sbb
mov
lahf
pop
adc
int
jno
fsub
nop
shll
fcoms
pop
enter
push
jnp
mov
push
adc
ljmp
shrl
insb
cmpsl
mov
fdivr
add
repz
sbb
mov
mov
das
orl
or
mov
mov
cmp
daa
sbb
popf
mulb
ljmp
xor
jmp
cmp
mov
dec
les
sarl
and
mov
stos
pop
jmp
sbb
add
sub
in
dec
push
pop
jp
fwait
cltd
mov
imull
add
sub
inc
xor
push
dec
and
fsubrs
or
aas
inc
push
je,pn
mov
ljmp
rorb
or
and
cmp
dec
std
prefetch
jge
enter
pop
in
add
xor
xchg
mov
sbb
notl
dec
add
in
sbb
adc
sarb
mull
int3
in
out
arpl
lret
and
or
leave
ficoml
dec
cmp
rcll
xchg
push
push
inc
insl
mov
mov
call
dec
jnp
test
loopne
call
dec
loope
mov
sahf
mov
mov
mov
and
xchg
dec
cmovs
jl
inc
inc
xor
ret
mov
dec
in
gs
mov
pushf
pop
inc
push
stos
sub
aam
shrb
adc
adc
mov
mov
jp
add
jl
jne
pop
cmc
vcmpps
sbb
mov
rorb
inc
lret
aam
jbe
pop
inc
in
jno
dec
lods
ja
sbb
jle
push
cmp
cmp
cltd
addb
add
out
push
sub
lcall
clc
xchg
or
rorl
bound
adc
loopne
rolb
popf
notb
inc
jp
pusha
out
cmp
lds
movl
subl
xchg
cld
fsts
pop
xchg
mov
add
push
add
xor
daa
rorl
dec
lret
mov
gs
lret
daa
movsb
cmp
mov
lret
into
cmpsl
cmpsl
dec
mov
mov
mov
mov
bound
lcall
jb
mov
or
cs
fisttpl
aad
negb
lods
dec
es
test
adc
mov
fstl
mov
xor
pop
pop
push
mov
pop
test
mov
mov
out
adc
jns
xor
inc
xchg
hlt
hlt
jo
inc
insb
out
cs
out
sbb
out
ret
push
jae
ljmp
or
cmp
cmp
mov
push
popw
xchg
and
das
ljmp
imul
outsb
popa
sbb
jmp
repz
xlat
or
sub
pop
ret
mov
aad
or
jecxz
and
in
adc
add
nop
fistl
adc
dec
xlat
in
outsl
or
enter
xchg
lret
jno
rorl
xor
mov
imul
push
xchg
enter
add
lods
jo
or
in
inc
ja
data16
sbb
jbe
push
cmp
mov
sub
cs
scas
xorb
fimuls
push
add
sub
push
add
test
pop
addb
sub
orb
sub
dec
test
subb
imul
insb
les
je
xchg
fistpll
daa
mov
mov
movsb
sub
pop
adc
cmpsb
adcb
push
sub
lods
pop
sub
dec
rcl
in
dec
and
mov
ja
addl
orl
in
out
loope
aas
push
adcb
repnz
and
push
lret
push
out
push
std
roll
add
repz
or
sbb
cwtl
inc
gs
xor
fxch
dec
icebp
ret
nop
imul
lods
repz
mov
jle
jmp
xor
pop
fwait
or
jmp
xor
pop
bnd
pop
bound
mov
fsubr
bound
mov
adc
sub
addl
sub
jno
aas
iret
jge
adc
sbb
mov
aaa
addr16
inc
xor
lods
sub
mov
addr16
xlat
ret
mov
add
mov
shll
cmpsl
sub
shll
mov
sub
orl
xlat
repz
and
jle
xor
sbb
out
cs
adc
rcl
cmpxchg
fisubrl
mov
xchg
push
xchg
js
cmp
mov
into
test
jnp
lret
stc
andl
push
movsb
cmp
push
xchg
ljmp
and
dec
mov
mov
dec
sahf
shll
add
mov
mov
push
jbe
es
jg
push
add
dec
aas
xchg
lods
add
push
dec
xor
lods
adc
aad
push
hlt
ss
or
fs
js
dec
pop
jp
adc
mov
dec
xor
decb
pop
push
pop
popa
inc
or
repz
push
jg
mov
add
inc
lods
dec
stos
aam
incl
cld
int3
sub
dec
popf
clc
sbb
cli
add
in
std
imul
and
std
into
insl
jge
mov
movsb
jbe
inc
mov
and
inc
std
dec
in
movsb
mov
push
fisubs
xchg
mov
out
sahf
lock
fdivrl
xchg
test
cmp
xchg
enter
xor
inc
mov
jnp
pop
and
stos
rcrb
dec
lds
aaa
mov
sbb
loop
test
push
jmp
dec
push
push
or
cmp
sbb
dec
aad
pop
je
xor
push
adc
ljmp
arpl
push
cwtl
xor
mov
jmp
cld
ret
cmp
enter
out
xchg
ret
aaa
clc
adcl
addb
mov
std
imul
pop
push
in
dec
adc
lods
push
dec
nop
add
in
pcmpgtd
std
push
ja
pop
insl
test
ret
xor
daa
out
pop
lret
lods
stc
lcall
popf
test
cmc
xor
repnz
je
cli
inc
push
aad
mov
stos
out
into
in
cltd
test
cmpsl
icebp
pop
or
xchg
cmp
or
xor
loopne
pop
test
mov
shl
push
jno
cmp
sub
sti
bound
xchg
mov
rol
jb
bound
mov
sub
inc
mov
mov
push
or
repz
xchg
dec
pop
xchg
shrl
dec
addb
cmc
push
xor
xchg
test
ror
jg
adc
cltd
push
push
xor
mov
je
push
pushf
popf
scas
scas
arpl
jb
movsl
in
mov
ja
setge
and
sub
mov
or
cmpsb
pop
pop
jle
negl
jnp
mov
test
ja
pop
pop
lahf
push
pusha
rol
cltd
sub
pop
cmp
add
cmp
jg
enter
lods
jne
jl
in
pushf
lret
lock
pop
fidivl
xchg
mov
add
ss
jb,pn
xchg
in
or
repnz
jmp
ficoms
loope
aas
ljmp
xor
fisttpll
sti
cmp
jnp
xchg
push
shlb
mov
jnp
out
inc
push
mov
xor
mov
test
xor
lret
cmc
add
dec
push
and
sahf
pop
lret
mov
lods
inc
cmpsl
push
imul
notl
mov
and
stos
pop
add
xchg
jbe
push
in
outsl
stos
loope
sbb
shl
push
ret
int
andl
loope
pop
or
pushf
ljmp
push
jbe
roll
sub
jbe
iret
in
push
fwait
pop
iret
stc
push
ja
mov
sub
add
mov
inc
outsl
jns
mov
fwait
mov
ljmp
push
jns
xchg
mov
fsubrp
dec
xor
data16
into
fld1
mull
xor
jbe
stos
or
cltd
fstl
ja
add
data16
addr16
inc
pop
mov
out
jno
lock
outsb
xchg
insb
stos
xchg
movsl
popa
icebp
dec
test
sbb
hlt
dec
flds
adc
push
out
out
cld
mov
aas
dec
lods
rorl
pop
add
and
mov
inc
sub
cmp
mov
andl
aad
pusha
dec
mov
sub
rcll
insl
mov
ja
shll
sbb
cmp
mov
inc
inc
mov
jb
mov
inc
mov
and
mov
dec
repnz
in
mov
mov
xor
test
mov
icebp
sub
lock
mov
pop
outsb
adc
stos
dec
push
mov
fisubl
sarb
push
lret
adc
xor
xor
sbb
xor
ficoms
fldenv
mov
imul
sbb
xor
int
sub
getsec
mov
out
nop
dec
les
movl
xor
stos
cmp
jle
movsl
loope
add
sub
out
jecxz
add
dec
shr
sub
movsl
and
popf
movsb
imul
adc
pop
push
xchg
sbb
push
rclb
fnstenv
and
lds
jl
faddl
dec
sarl
lret
cmp
shl
ja
mov
mov
push
test
pushf
stos
push
jge
enter
testb
test
dec
sbb
inc
test
mov
imul
iret
mov
or
popa
std
sbb
xor
xor
mov
mov
aam
jb
aam
sahf
pop
adc
fcoml
jae
iret
sub
or
cmp
sub
sar
xchg
xor
and
sbb
push
or
int3
stc
add
or
cld
lds
testb
js
xchg
xchg
fdivr
jnp
jmp
sti
inc
fisttpll
mov
pushf
imul
pop
inc
xchg
push
inc
pop
lods
sti
sbb
mov
sbb
add
jmp
orl
sub
or
cltd
out
fistl
jns
mov
xchg
fldcw
pop
push
mov
int
dec
lock
movsl
cmpb
nop
popa
inc
dec
jecxz
ds
adc
lods
xor
jl
sub
fnstenv
das
jle
jns
inc
jbe
mov
popa
mov
add
jbe
inc
stos
or
std
dec
fs
cld
mov
inc
add
les
pushf
sub
and
les
imull
ljmp
inc
lahf
out
pop
xor
jmp
dec
or
jle
frstor
leave
pop
cmpb
push
stc
add
cmp
ret
pop
pop
adc
orb
or
xchg
sbb
or
call
adc
das
cmp
sbb
xchg
stos
adc
xchg
push
std
jecxz
jae
daa
mov
adc
sbb
xchg
xchg
sub
inc
mov
jb
and
xor
lods
hlt
insl
clc
mov
jne
lods
sub
push
add
cld
mov
xchg
pop
ljmp
rcrb
insb
and
out
xchg
mov
loop
sbb
mov
push
dec
out
in
icebp
lcall
sub
outsl
adc
in
fisttps
mov
dec
pushf
stc
and
lret
gs
ror
sti
mov
xchg
mov
hlt
imul
mov
push
ljmp
scas
or
jbe
stos
push
and
pop
xchg
xchg
leave
insb
sub
jle
roll
sahf
sub
outsb
mov
or
notl
pop
inc
jmp
sbb
sbb
sub
cwtl
adc
adc
push
popf
fidivs
in
nop
addl
mov
fwait
cs
test
sub
dec
sbb
xchg
sbb
sbb
jmp
sti
mov
mov
stc
cmc
fbld
mov
je
rorl
leave
mov
mov
inc
pop
jle
xor
jecxz
stos
roll
cwtl
sub
lret
data16
mov
adc
int3
pop
outsl
ds
jmp
mov
push
fwait
xlat
test
mov
and
mov
in
fbld
xchg
mov
sbb
inc
pop
pmulhw
addr16
mov
ret
ds
dec
testb
and
mov
mov
fcoml
orb
sub
cmp
js
pop
push
int3
es
fidivrl
jp
mov
mov
push
out
add
push
sub
push
jbe
xor
jp
lods
daa
mov
flds
xor
inc
imulb
mov
xor
ret
pop
lret
adc
sahf
jmp
enter
cltd
and
xor
mov
cld
pop
fdivl
insl
ja
pop
scas
fbld
sti
out
lahf
push
popa
in
nop
push
dec
ret
jmp
adc
cmp
mov
jns
mov
ret
dec
loop
iret
xchg
jns
adc
xchg
pop
mov
inc
push
dec
adc
movsb
sub
push
jb
mov
rorl
iret
dec
pop
or
inc
sbbb
xchg
pop
stos
cwtl
adc
xor
inc
push
dec
cld
and
icebp
mov
jo
mov
xor
stc
sub
push
cltd
adc
inc
pop
rorl
cmp
inc
or
xor
mov
pop
ret
jne
movsb
mov
xor
jge
clc
mov
push
scas
cwtl
fstpt
push
inc
out
repnz
dec
and
loopne
fwait
lcall
mov
les
fisttpl
pop
lcall
shrl
ss
xchg
shlb
andb
mov
cltd
pushf
sub
outsl
mov
mov
xor
xchg
adc
push
add
fistl
sbb
sub
jo
inc
push
dec
inc
fsubrl
lea
out
mov
stos
cmc
daa
sarl
data16
jb
jecxz
outsl
roll
out
fadd
xor
movsb
fwait
mov
lcall
sub
icebp
push
push
cli
xlat
lds
inc
std
gs
je
or
rcll
outsb
mov
jne
pop
push
movlps
je
sbb
cmc
sbb
stos
jecxz
test
xor
mov
nopl
adc
adcl
inc
inc
xchg
leave
push
icebp
pop
xor
pushf
jg
xor
hlt
mov
in
mov
sar
add
jno
lret
adc
and
mov
enter
dec
push
pop
xchg
pusha
jno
sbb
stos
mov
fnstenv
jl
fmull
lods
rorb
adc
mov
cmp
mov
mov
imul
cmc
cmc
sbb
cmp
shll
xor
and
inc
mov
xor
lret
adc
jb
lcall
stos
fcoms
push
mov
mov
pop
sbb
movsb
imul
push
mov
mov
jno
nop
or
dec
dec
neg
stc
insb
pop
cmp
mov
xorl
push
add
inc
jae
sti
sbbl
mov
out
jmp
xor
and
pop
out
and
ret
imul
scas
int
cmp
jnp
lods
xchg
add
ret
sbb
ret
push
add
mov
and
aam
xor
imul
xor
ljmp
mov
mov
pop
in
repnz
loope
gs
bnd
sbb
mov
outsl
xchg
mov
cltd
loop
and
test
inc
mov
fidivl
pop
iret
add
adc
cmc
xorb
mov
lea
xor
pop
jns
xchg
cmc
dec
je
and
push
shld
es
xchg
push
mov
test
xor
push
dec
loop
jle
push
int
xchg
jb
dec
jmp
or
ret
jb
and
subb
out
ficoms
mov
imulb
sti
lea
adc
iret
push
cmc
xor
bound
popf
mov
sub
mov
mov
pushf
sub
mov
mov
hlt
leave
jo
test
inc
loope
add
jecxz
inc
incb
add
push
lods
xlat
or
jbe
mov
mov
jp
inc
and
outsb
dec
jecxz
xor
pusha
pushw
xor
pop
cli
jg
daa
pop
icebp
iret
cmpsb
cmp
jb
push
push
repnz
jl
xchg
mov
sub
nop
fidivrs
shr
mov
rol
cli
xor
push
mov
mov
jnp
scas
loop
mov
dec
lock
sub
add
xchg
xchg
xchg
add
lret
mov
dec
jecxz
jge
and
out
lock
andl
mov
mov
jne
in
jg
add
test
mov
sbbl
sub
sbb
fs
out
into
testl
lret
movsb
mov
jne
out
or
rcrl
ja
xlat
xor
out
jb
push
arpl
mov
scas
mov
adc
aaa
cmp
popa
test
pop
loop
jnp
lea
jns
ja
cmp
in
mov
imul
sbb
or
adc
or
push
jo
insb
mov
cli
push
nop
lret
ljmp
negl
pop
je
adc
jmp
jmp
jne
sbb
pop
fistps
shlb
add
mov
clc
jbe
int3
fistpll
lock
lret
xchg
adc
aaa
mov
test
push
adc
pop
xchg
stos
int
cmovl
pop
rorl
mov
xorb
push
xchg
repnz
pop
dec
imul
lock
mov
push
mov
es
cli
fimuls
outsb
push
loop
pop
jne
pop
popf
jl
testl
popf
cmpsb
pusha
out
or
cwtl
cld
out
fwait
xor
aam
aas
jge
mov
mov
adc
sub
roll
stc
xor
adc
mov
jle
or
jmp
cs
adc
mov
pop
sahf
jmp
xor
pop
push
imul
push
mov
jmp
inc
pop
int
fadds
adc
pop
jb
jno
fiaddl
int3
stos
jbe
mov
test
insl
adc
or
pop
jb
cld
sub
into
outsl
jo
mov
repnz
movsl
je
xor
sbb
adc
das
and
jl
loope
nop
bnd
inc
lcall
test
and
cmp
pusha
pop
dec
sub
or
mov
dec
fwait
xor
add
gs
xchg
and
pop
dec
std
xchg
pop
dec
mov
lea
je
out
inc
mov
cmpsb
push
js
sbb
xor
outsb
outsb
sbb
pop
pop
test
xchg
mov
push
test
rorl
add
push
sbb
sarb
fadd
rorl
inc
pop
dec
loope
mov
and
sbb
lret
push
mov
scas
push
arpl
inc
jne
pminsw
jae
fidivl
push
push
cmpb
mov
fld
fchs
add
or
ds
test
xchg
or
into
sbb
mov
xrelease
inc
push
filds
cltd
jo
and
xchg
out
push
inc
mov
push
mov
stc
inc
js
shll
inc
les
mov
in
jb
or
xchg
or
mov
ss
pop
dec
in
jmp
gs
fcmovu
nop
popa
jp
pop
mov
out
push
add
dec
add
mov
fistpll
into
out
sub
lcall
adcl
pusha
shlb
pop
stc
dec
sub
out
pop
xchg
out
mov
mov
jbe
sbb
orb
icebp
outsl
push
int
pop
mov
arpl
roll
jg
cmp
aad
jge
xchg
stos
xor
push
or
pop
pop
stos
test
pop
mov
out
sbb
sbb
cltd
adc
movsl
xchg
jmp
aam
dec
sbb
adc
adcl
in
sub
pop
ret
or
nop
mov
test
dec
adc
cmp
stos
pop
mov
insb
fistpl
outsl
jg
lcall
xor
nop
mov
inc
call
rdtsc
int
inc
jno
popf
inc
adc
das
mov
jp
adc
outsb
jecxz
inc
ret
sbb
cltd
add
dec
incb
popa
nop
dec
mov
pop
jne
rcll
addr16
add
sahf
mov
lock
push
mov
loop
lret
xor
dec
cwtl
sub
shll
pop
lret
das
into
rorb
cli
mov
sarb
adcl
inc
xchg
sub
rcrb
xor
gs
and
pop
xchg
fs
lods
or
lods
std
out
aad
lods
int3
adc
jmp
jbe
xor
adc
adc
and
andb
dec
orb
repz
lock
loopne
jl
sbb
fs
je
leave
or
sbb
xor
mov
cmp
lock
repnz
xchg
cmp
sarb
movsl
outsl
rcll
jecxz
orl
adc
rcrl
mov
inc
inc
push
cli
add
sub
imul
inc
testl
lcall
lock
add
pop
punpcklbw
sbb
ds
pushf
in
clc
jge
std
xchg
or
pop
roll
mov
mov
lret
pop
repnz
jg
xor
push
lds
sbb
cmpsl
jns
in
ss
mov
adc
sub
or
repz
andl
adc
sahf
scas
xchg
jb
pop
mov
inc
daa
cmp
cld
adc
pop
xorl
mov
ret
xchg
add
jns
mov
ret
mov
in
pop
or
cmc
jmp
call
jle
imull
cmp
mov
jne
into
ss
imul
sub
scas
push
test
fstl
xchg
pop
jl
enter
popf
ss
sbb
icebp
cmp
les
addr16
xlat
adc
repz
pop
xchg
mov
mov
repnz
div
loopne
push
push
mov
jne
inc
subb
repz
inc
sub
ljmp
jo
cmp
lahf
mov
mov
jno
inc
mov
imul
mov
and
test
fsubrs
jl
push
test
push
out
in
cmp
mov
aaa
xchg
jo
incb
adc
sub
dec
mov
jecxz
popa
pop
inc
aas
ja
cld
fadds
stc
pushf
fdivrs
in
in
dec
lds
sub
mov
push
jg
xchg
pop
jg
fs
mov
inc
stos
push
fdivrs
pop
mov
das
mov
mov
aad
clc
adc
inc
mov
out
insl
mov
dec
mov
push
inc
inc
sarb
test
xor
lret
xor
xchg
repz
ja
xor
xchg
push
test
jg
shll
aas
jge
fstpt
xor
sti
jp
inc
add
push
bound
and
cmp
push
mov
test
and
or
adc
mov
jae
in
adc
popa
sub
pop
jl
dec
push
cmp
fwait
add
test
sbb
sub
scas
cli
imul
push
push
loop
xchg
mov
lea
jge
sbb
dec
mov
sub
loope
outsb
hlt
adc
mov
pop
enter
sbb
lahf
push
sarl
addr16
shl
ret
loope
push
cmp
lret
roll
inc
xchg
aad
jp
adc
pop
pop
and
add
dec
loopne
add
pusha
cmp
pop
pushf
rcll
pusha
in
jmp
push
and
movsl
out
jo
add
adc
dec
dec
adc
sbb
and
data16
xchg
jg
rclb
cld
push
pcmpeqb
es
xchg
mov
sub
fnstcw
pop
cltd
clc
add
add
loop
lock
movsb
sbb
jp
notl
lods
push
ja
shlb
cmp
mov
jbe
xchg
dec
jne
pop
int
and
in
je
mov
mov
jl
ds
cmp
sub
subl
jmp
inc
and
mov
mov
inc
inc
and
in
out
mov
jmp
mov
cmpsl
pushf
push
lahf
xlat
sbb
mov
sub
mov
and
imul
and
arpl
fists
dec
mov
pop
cmc
shll
mov
int
dec
cmc
cmp
ret
insb
dec
pop
xor
dec
rorb
in
iret
pop
cmp
gs
leave
cmp
jge
cmp
xor
add
jns
fwait
xlat
sahf
nop
or
daa
test
sbb
test
lcall
sub
fdiv
adc
jp
scas
into
xchg
adc
ret
pop
cmp
mov
nop
leavew
scas
add
lahf
sub
mov
dec
jmp
and
lret
xor
aaa
push
cmp
lods
scas
shll
cmp
aam
pop
jb
mov
dec
aaa
repnz
pop
out
dec
mov
push
or
adc
sbb
out
fld
sub
std
dec
rolb
xchg
ror
rcrb
mov
stc
fisttps
sbb
pushf
dec
jg
sbb
push
outsb
in
negb
or
cltd
mov
dec
int3
sub
lods
jmp
add
je
imul
in
pop
jno
ret
push
stos
lock
shlb
inc
cmc
xchg
sub
ret
imul
xchg
adc
jns
push
leave
xor
cmpsl
mov
mov
rorl
in
jb
pop
int
jbe
jge
lcall
mov
into
iret
xchg
jp
push
and
and
adc
pop
xchg
push
test
mov
js
and
test
cmp
test
shll
scas
xchg
cs
dec
lret
dec
or
mov
jns
in
dec
dec
repz
add
sub
daa
test
dec
mov
popa
mov
and
push
cmp
mov
sbb
sbb
lock
shrb
mov
pop
lret
mov
mov
hlt
pop
jle
pop
aas
and
test
lret
dec
push
or
std
out
mov
and
ds
mov
mov
das
das
cmp
xlat
ja
mov
or
mov
sub
cmp
outsb
pusha
lsl
gs
call
jb
dec
dec
mov
jl
stos
mov
ja
in
in
or
add
aas
sub
lods
adc
or
and
xor
test
je
fisubs
popf
mov
and
inc
ror
push
mov
push
sbb
pop
xchg
jae
movsb
push
adc
jne
out
out
imul
xchg
push
mov
and
and
incl
fbstp
fldl2e
jmp
xchg
mov
cmp
scas
dec
add
sub
lea
imul
or
mov
push
push
jns
push
int
popf
scas
mov
cmpsl
pop
cmp
cmp
cmp
inc
add
es
inc
popa
adc
into
xor
adc
outsl
pop
loope
mov
lods
xor
frstor
stos
mov
in
sbb
pop
pushf
jnp,pt
adc
lahf
in
stos
mov
outsb
ds
lret
mov
out
aam
cmp
add
popa
jmp
cmp
mov
testl
ret
or
aas
mov
mov
nop
mov
sub
out
jnp
popl
jp
into
aad
call
push
xchg
paddusw
jmp
jns
and
repz
fs
push
ds
shrl
xorl
iret
sahf
mov
cs
and
pop
xor
fisubrl
push
lods
iret
cmp
es
out
loopne
pop
inc
stc
add
mov
in
dec
pop
std
mov
stc
or
lcall
ss
cmp
pop
xchg
aaa
dec
pop
cld
popf
sbb
fwait
dec
pop
std
lret
adc
lahf
lea
push
pop
icebp
xlat
add
rorl
and
add
mov
jecxz
arpl
outsl
in
mov
mov
xchg
xchg
mov
andl
jns
mov
xchg
push
push
xor
das
pop
stc
mov
mov
mov
scas
fdivr
pop
add
jge
and
fistpll
or
ret
adc
subl
aam
inc
out
or
out
out
lcall
adc
adc
rcrl
nop
nop
and
mov
mov
pop
adc
push
imul
mov
nop
dec
xor
les
icebp
sbb
scas
ss
stc
sbb
inc
outsb
scas
aam
dec
or
jp
or
cmc
xchg
push
loopne
sbb
insl
jmp
inc
movaps
sbb
bound
cmp
and
ja
xlat
dec
imul
and
movsb
add
popa
jecxz
shll
push
pop
mov
insl
dec
jno
jns
mov
iret
ficoms
inc
shlb
addl
pop
xor
mov
orl
in
sti
out
loop
cs
xchg
rclb
jecxz
stc
adc
out
jae
jb
push
pop
xchg
les
mov
pop
mov
push
aaa
xchg
sbb
loopne
pop
test
mov
jmp
add
js
push
xlat
xor
and
jnp
gs
adc
icebp
lods
test
adc
sub
sub
out
inc
push
divl
ss
rolb
xor
mov
insb
lock
and
lds
call
out
into
jnp
jmp
imul
or
or
test
std
into
lods
and
mov
fisubs
push
roll
int
mov
mov
sbb
aad
fwait
stos
lret
lea
cmp
jle
push
lods
arpl
jbe
in
adc
or
pop
dec
dec
jno
or
dec
scas
xchg
push
cmp
push
dec
fwait
rorl
xor
pop
mov
adc
clc
aad
and
popf
repz
adc
fldl
xchg
mov
dec
cmp
sub
in
rcr
repz
mov
mov
test
mov
mov
lds
movl
dec
xor
pop
dec
enter
pop
pusha
xchg
xchg
jo
insb
aam
in
cs
inc
add
xchg
push
mov
arpl
ja
jne
push
inc
movsb
jg
dec
jne
push
push
push
fdivrl
xchg
ds
aaa
data16
mov
mov
cltd
push
addr16
rorl
xor
insl
add
ja
rcrl
and
push
push
xchg
imul
push
sub
dec
mov
shrl
fistpll
orb
aam
xorb
hlt
fdivrs
movsl
pop
xchg
in
in
jne
pop
push
pop
aad
sub
mov
sbb
dec
mov
sbb
in
jo
leave
push
fbstp
movsl
jge
fistl
lret
xchg
pop
jbe
sub
and
jp
aam
and
mov
sbb
mov
xchg
xor
inc
adc
arpl
mov
clc
jmp
repnz
js
xor
pop
repnz
jg
xchg
push
xchg
mov
add
testb
mov
call
das
call
add
movsl
jg
lea
add
loope
popa
adc
std
cwtl
dec
jmp
insl
into
leave
mov
jae
jmp
inc
sbb
xor
add
xor
mov
cmp
mov
mov
data16
lds
addr16
inc
sbb
popa
pusha
imul
mov
add
popa
push
sub
jnp
mov
push
dec
fldcw
xor
pusha
fiadds
lahf
or
cmc
or
or
mov
dec
inc
pop
push
push
cmp
mov
pop
inc
push
ja
mov
stos
loop
xchg
and
repnz
mov
stos
dec
push
cmp
loop
iret
fnstsw
cmp
into
fs
rcrl
aam
inc
adc
aam
in
mov
lret
hlt
cmc
insb
add
sbb
dec
rcrl
cmp
das
inc
add
outsl
popa
pushf
mov
inc
aad
int
adc
xchg
out
cmp
and
mov
mov
cli
inc
adc
lcall
ret
inc
movsb
rclb
sbb
sub
sub
sarb
loop
aad
jnp
jmp
aaa
mov
mov
ja
icebp
mov
aam
xor
mov
mov
push
pop
aad
sbb
gs
into
out
mov
nop
pop
mov
mov
into
mov
push
jl
mov
adc
mov
mov
xlat
push
lea
ja
mov
divb
mov
mov
cmpb
push
int
es
and
cmp
mov
cmp
mov
or
dec
lods
mov
pop
pop
adc
mov
sub
mov
and
cmp
dec
lock
inc
mov
push
sbb
ficompl
dec
pop
iret
fsub
in
push
lret
mov
repz
imul
mov
ficomps
mov
lahf
stos
ds
faddl
mov
sbb
mov
shlb
out
rcr
push
or
jecxz
into
scas
ja
push
mov
shl
push
mov
pop
xchg
cwtl
fdivrl
imul
xchg
in
cli
xchg
repz
lcall
mov
js
in
sub
dec
xor
test
data16
popf
xorb
pop
adc
aas
mov
shll
scas
icebp
cmp
cltd
xchg
test
nop
sbb
mov
xor
pop
nopl
xchg
mov
js
mov
mov
push
cmp
iret
xchg
repz
xchg
mov
cmp
ret
mov
jle
mov
dec
inc
xchg
cmp
lods
mov
outsb
mov
lock
push
out
and
mov
test
mov
adc
bound
data16
clc
pop
jne
mov
lcall
adc
enter
jmp
ror
repz
push
out
lds
rcll
stos
outsb
lea
iret
mov
fnstsw
in
sub
cwtl
or
lret
mov
stc
rclb
pop
insb
in
sahf
ret
fistps
icebp
jp
mov
ficoml
mov
push
test
push
movsl
xor
leave
sti
mov
inc
and
pop
popf
pop
jo
cwtl
xor
call
test
cmpsl
jle
out
or
in
or
and
fnstsw
fimuls
nop
jnp
sbb
les
pusha
lods
jge
lock
sbb
xchg
stc
in
mov
sahf
jnp
fsubs
dec
mulb
and
push
arpl
cmp
dec
add
push
ja
sahf
xchg
movsl
mov
add
imulb
or
aaa
jb
ds
cmpsb
int3
xor
dec
sti
mov
dec
sti
rorb
jbe
out
out
stos
popa
pop
mov
and
jnp
inc
add
imul
daa
bnd
mov
insl
mov
lods
mov
outsl
cmc
lds
outsl
adc
lahf
call
popf
dec
movl
or
bound
push
ds
lahf
daa
ret
ret
iret
dec
xchg
call
xchg
out
cltd
lahf
lret
mov
icebp
repnz
movhlps
je
jb
xchg
pop
aas
sub
sbb
mov
mov
jbe
clc
inc
xchg
pusha
addl
stos
jbe
cmp
inc
pop
std
fucomp
bound
adc
pop
dec
outsb
lds
gs
rep
adc
dec
and
cmp
std
sbb
clc
outsb
sti
rcrb
fidivs
cmpsb
mov
inc
or
hlt
or
dec
pop
outsl
cmpsb
lret
pop
jecxz
push
mov
push
iret
rol
mov
xor
orb
inc
adcb
or
sbb
std
ss
pop
mov
cld
pop
mov
data16
cmp
sub
scas
ja
and
in
adc
pushf
aas
mov
jg
jno
add
mov
les
add
sub
mov
nop
adc
fmul
add
das
aam
mov
leave
cli
push
mov
push
dec
sarl
icebp
dec
xchg
mov
xor
shr
or
inc
pop
test
js
xchg
xor
push
in
inc
cmc
out
mov
lea
call
sbb
scas
cmp
in
dec
and
ja
jbe
or
pop
or
sub
addr16
aad
or
push
or
push
ficompl
sbb
jg
sbb
or
rcll
or
iret
imul
jle
inc
cmp
mov
lahf
mov
and
pop
dec
enter
mov
xor
push
mov
movsl
lret
mov
sbb
into
or
mov
sub
cmc
repz
rcr
inc
lods
orb
mov
nop
dec
fsts
cltd
pop
push
mov
popf
adc
imul
or
adc
orb
sub
or
test
out
inc
test
dec
sub
push
sub
cs
imul
xchg
jg
fwait
movsb
jmp
or
push
mov
je
jnp
cmp
mov
rcll
push
int
jae
insb
shl
gs
or
out
repnz
arpl
test
gs
xchg
cmp
mov
jmp
cld
and
addr16
aaa
mov
mov
rcr
addr16
in
and
popa
pop
sar
push
jg
sbb
dec
scas
gs
xorl
faddl
mov
sub
add
sti
fistl
add
jae
faddl
inc
inc
in
outsl
lahf
push
test
jns
imul
inc
mov
stos
mov
int
or
aaa
lea
pop
fcomp
in
shll
xor
xchg
lcall
mov
push
cmp
das
pop
jb
push
xchg
pop
mov
add
das
or
xor
sub
dec
jne
cli
test
mov
scas
dec
mov
clc
sub
shlb
shl
repz
cmp
mov
cwtl
stos
xor
daa
jle
sarl
xor
hlt
lods
mov
mov
scas
test
xchg
in
test
add
dec
sbb
push
ss
pop
aad
es
outsl
incl
inc
ss
push
leave
dec
and
adc
lret
pop
movb
mov
fcom
xor
lods
ret
and
cmp
fisubrs
mov
orl
int3
cld
pusha
add
mov
dec
mov
pop
inc
xchg
ret
sub
jl
sub
cmpl
dec
loopne
out
mov
jno
sbb
test
sub
sahf
hlt
push
jno
xchg
pop
mov
xchg
divb
fldl
ds
cmp
test
cmp
fwait
std
add
dec
js
iret
cmp
add
mov
xchg
jmp
mov
pop
cmp
mov
pop
popf
sbb
dec
inc
lea
xchg
add
les
jnp
js
pop
xchg
fiaddl
mov
icebp
std
cmp
cmpsb
testb
scas
ficompl
xor
jecxz
loop
mov
movsl
add
enter
pushf
cmp
mov
clc
sbb
das
ja
jecxz
pop
mov
ljmp
dec
mov
pop
sbb
dec
sbb
rorb
inc
shrl
sub
inc
sbb
inc
les
mov
xchg
add
dec
test
cmc
inc
push
in
inc
dec
sti
xor
loop
pop
bound
stos
dec
adc
int3
inc
cmpsl
lds
pop
dec
sti
cmp
sti
mov
xor
orps
jbe
out
lahf
push
lock
repnz
ror
mov
dec
roll
inc
inc
and
inc
nop
in
push
insb
pop
xor
mov
mov
sti
or
sbb
push
cmpsl
pop
movsb
mov
sbb
pop
cmpsb
pop
insl
adc
push
rcrl
jmp
movsl
add
dec
sahf
push
push
ret
adc
pop
subb
or
ret
add
ss
imul
imul
push
cmpb
cmc
pop
xor
iret
pop
mov
xchg
mov
push
pop
sbb
imul
push
scas
pop
or
cmp
and
mov
and
jno
nop
mov
add
adc
pop
cmp
xor
ret
mov
mov
push
addb
jp
rorb
inc
cli
jle
test
sbb
cmc
imul
xlat
cli
jb
xchg
jp
lcall
ja
pusha
mov
ljmp
negl
insb
in
mov
jmp
push
aaa
and
nop
mov
cli
and
mov
out
pop
mov
aad
push
sub
pop
push
js
imul
test
rep
xchg
mov
xchg
push
and
push
popf
insb
bound
movsb
popf
jbe
rcll
into
sub
inc
addr16
adc
dec
jl
aas
adc
or
jmp
ret
xor
ret
add
or
mov
ja
jmp
mov
sbb
xchg
pop
repz
dec
sub
sbb
test
adc
int3
mov
jg
sbbb
in
jle
lods
dec
push
pop
push
mov
sub
outsl
xorb
aad
sbb
daa
fwait
fs
and
shr
or
ss
clc
outsl
dec
hlt
mov
and
and
adc
push
inc
es
cmpsl
cmp
pop
mov
push
arpl
repz
imul
cmpsb
data16
adc
lcall
les
movsl
mov
add
and
adc
mov
sbbl
dec
push
aas
xchg
loope
addb
sbb
movsb
ret
vpcmpgtw
or
mov
push
dec
repnz
add
cli
popf
scas
push
dec
jmp
mov
push
cmp
test
lock
xchg
cmp
pop
mov
cmp
lds
negb
sub
and
add
inc
in
xlat
lret
xchg
jmp
mov
movsb
jmp
shl
jl
insl
inc
pusha
lret
xlat
daa
out
mov
mov
fwait
dec
xchg
rcr
lret
cs
popa
lret
mov
dec
cmp
aad
cmp
and
pop
test
push
cltd
dec
cmp
dec
outsb
in
repnz
pop
pushf
or
mov
add
repnz
enter
add
sbb
xor
push
lods
daa
enter
stos
add
xchg
imul
mov
lods
andb
cs
aaa
xchg
dec
sti
sub
cmp
sbb
enter
or
push
push
jno
in
jle
repz
jns
adc
mov
jnp
shll
cltd
dec
pop
int
bound
dec
aaa
aad
cmpl
dec
and
icebp
cmp
inc
push
pusha
jbe
sbb
cli
aam
add
nop
jmp
cmpb
dec
and
mov
das
rorb
add
leave
mov
fprem1
insl
sbb
pop
inc
jl
shrb
or
ss
pop
in
push
aaa
aad
mov
addr16
js
stc
sti
mov
mov
testb
jnp
jae
xor
inc
xchg
push
cltd
cmp
leave
and
add
ret
xchg
outsl
xor
jp
aas
js
out
xor
ret
scas
push
test
and
cmp
dec
out
cmpsl
jo
dec
add
mov
mov
add
inc
push
mov
dec
push
xchg
inc
fs
or
add
test
popa
mov
xor
fisubrl
mov
and
test
and
js
cmp
and
fsubrl
jp
test
push
mov
push
pop
data16
or
dec
outsb
mov
sbb
add
sub
sub
mov
insb
pop
lock
mov
pop
inc
fs
cs
fists
pop
jp
mov
outsl
jne
xor
lcall
aad
mov
icebp
xor
les
and
mov
out
pop
ss
xchg
nop
loope
mov
mov
cmc
fdivrl
jl
add
push
sbb
ja
stos
push
or
push
inc
aam
mov
lea
jno
andb
cmp
dec
dec
adc
fs
inc
sbb
mov
in
xchg
xor
and
lods
imul
mov
jbe
cltd
mov
sbb
adc
push
add
cmpsb
cmp
inc
mov
mov
dec
cmp
insb
xor
cmp
inc
dec
sbb
and
sbb
imul
mov
imul
fucomi
adc
mov
adc
adc
xchg
les
mov
push
stc
mov
xchg
xor
cltd
movsb
sbb
lods
sub
adc
ret
cmp
stos
mov
jg
hlt
push
dec
jmp
or
hlt
or
add
imull
lock
insl
and
dec
arpl
adc
repz
call
mov
mov
ja
in
mov
rcrb
int
add
pop
lret
add
leave
jae
sbb
in
in
dec
pop
sub
cmp
movsl
fisubrl
in
mov
test
dec
je
imull
mov
fisubrs
adc
and
or
cs
pushf
and
jnp
and
ss
mov
shlb
jno
int3
call
mov
mov
sbb
jns
repnz
pop
mov
cmp
mov
fs
pop
andl
in
xor
fldenv
add
lock
cmpsl
inc
cld
inc
mov
pop
or
aam
mov
add
dec
add
mov
xchg
and
mov
and
push
stos
pop
aam
fistps
jns
add
dec
xor
pop
xor
insl
es
mov
cmp
loopne
popf
jmp
sub
fstl
sahf
sti
mov
fbld
adc
jg
in
sbb
lock
cmpsb
iret
leave
mov
es
add
add
test
movsb
ja
mov
out
pop
scas
xor
xor
sbb
mov
pop
stos
or
test
pop
or
and
mov
xor
mov
test
cwtl
lods
sarb
inc
jnp
lea
movsl
and
push
idivb
push
test
push
adc
jecxz
adc
sub
out
test
mov
lods
sub
out
aas
sub
xor
cwtl
adc
pop
out
mov
adc
and
xchg
sti
scas
push
das
mov
xor
adc
cmc
xchg
adc
mov
std
inc
mov
mov
cmp
inc
pop
fsts
out
cmp
dec
mov
lds
cmp
pusha
xor
pop
inc
adc
cmp
inc
movsb
jo
jbe
cmp
nop
outsl
outsb
sbb
cmpsb
int3
mov
loope
push
add
sarl
sub
mov
insl
addr16
inc
push
sar
lock
add
mov
mov
ss
fcom
xchg
pop
jae
ret
and
scas
daa
push
loopne
dec
fisttpll
cs
iret
pop
mov
and
insb
rorb
scas
faddl
dec
sub
push
test
cmp
cltd
mov
int
lea
xchg
jne
mov
jle
cwtl
sbb
nop
push
out
leave
aas
scas
mov
lds
mov
aaa
cmpsl
pop
and
out
jb
jb
lock
clc
dec
jmp
add
cmpsl
les
aam
jmp
mov
movsb
into
or
stos
ficoml
imul
into
jns
jmp
mov
add
in
ja
ljmp
cmp
and
jmp
rcl
mov
or
in
movb
xchg
adc
decb
mov
push
mov
out
dec
in
mov
stos
jmp
and
push
ljmp
loope
dec
mov
ret
xchg
and
hlt
mov
into
ss
cltd
mov
data16
adcb
jecxz
rcrl
bound
into
aad
imul
sbb
ror
gs
jns
out
cmc
jle
mov
ljmp
orl
enter
iret
mov
pop
shrl
data16
daa
xchg
mov
xchg
out
xchg
loopne
cld
out
nop
outsl
xchg
fistl
cmp
xchg
and
rcl
cmp
cmpsb
add
add
adcl
or
pop
jb
popa
rep
fstps
stos
imul
jne
mov
inc
loopne
push
adc
jle
cmpsb
mov
xchg
cmp
rcrb
cmpsb
or
std
pop
outsl
mov
fdivr
sbb
pop
stos
roll
mov
add
and
repnz
dec
nop
ret
mov
sub
in
adc
stos
fsubrs
addr16
sub
loop
xchg
fildl
cmp
adc
mov
push
adc
mov
data16
leave
adc
add
test
jae
fwait
adc
dec
inc
popf
sahf
push
repz
mov
mov
nop
mov
push
dec
mov
lods
mov
arpl
stc
or
pop
xchg
mov
mul
xchg
sub
cmp
push
sub
jo
aad
aaa
inc
rcrl
pop
pop
mov
pop
jg
scas
pushf
adc
rcll
pop
pop
pop
push
cmp
push
out
sub
out
test
xchg
mov
xor
rcrl
dec
add
iret
fwait
jae
sahf
pop
inc
fmull
lock
dec
push
cs
mov
add
xchg
sub
xor
mov
fs
inc
aad
push
pop
cmp
testb
or
ss
jo
lds
sub
sbb
dec
adc
jg
mov
mov
mov
pushf
xchg
or
push
cld
jg
add
push
or
push
cs
pop
jmp
cwtl
int
and
jg
lods
shl
xchg
jp
fidivs
cmp
hlt
icebp
fsubr
lods
divb
mov
aam
cmp
outsb
fildll
sub
repz
add
xchg
dec
pop
sub
xchg
icebp
popf
fsubrs
sar
loop
popf
cmp
fpatan
xor
or
aam
dec
ss
insl
xlat
cld
xchg
push
dec
inc
mov
cmp
pop
arpl
cmp
sub
inc
mov
es
fmuls
js
push
adc
ds
icebp
xchg
and
cmp
pop
gs
mov
xor
sbb
sbb
xor
sbb
fs
jmp
xor
gs
aam
sub
and
std
out
adc
scas
ret
mov
loopne
jmp
in
std
outsb
adc
sbb
mov
stos
ret
movsl
adc
sub
sti
push
jmp
xor
iret
sub
push
repnz
inc
mov
stc
mov
and
mov
sbb
jae
push
jns
in
minps
mov
loop
loop
xor
rcll
mov
mov
insl
pop
push
out
and
pop
sub
cmpsl
sbb
sub
xor
loop
out
out
in
pop
daa
fstpl
nop
xchg
jmp
jnp
out
and
popa
pop
popa
cmp
push
sub
ret
shrl
sub
fiadds
mov
sbb
jecxz
fsub
fwait
lret
or
pop
testl
dec
sahf
jge
mov
inc
insb
cmp
imul
rorb
lea
fs
int
dec
in
filds
dec
mov
subl
ljmp
cmp
cmpsl
mov
scas
pusha
adc
xlat
mov
cmp
in
sbb
pop
or
adc
lods
and
adc
mov
jbe
pop
mov
in
scas
and
jnp
or
imul
push
repnz
ret
fst
aas
fdivrs
jmp
bound
pop
jp
cld
sub
mov
lea
cmc
clc
jmp
cmp
xor
pop
jecxz
pop
mov
scas
jmp
scas
frstor
fwait
sub
in
and
xor
rolb
inc
outsl
lea
fisubrl
mov
adc
pusha
gs
push
out
cwtl
psubsb
jp
xchg
lods
fdivrs
jp
loope
adc
pop
stos
dec
mov
js
xor
inc
xchg
rorl
adc
inc
bound
inc
test
movsb
dec
inc
adc
int3
push
cmp
mov
or
cmp
shrb
inc
xor
mov
jb
imul
dec
cmpsl
loope
lds
jecxz
mov
push
sbb
xor
adc
cmc
xchg
into
lds
inc
mov
pop
sub
test
mov
in
pop
fnstcw
add
xchg
adc
into
insb
test
jnp
cmpsl
ja
loop
pop
adc
scas
mov
mov
hlt
xor
jmp
sbb
lds
rclb
ja
sub
ret
cmpsl
jnp
inc
dec
pop
cwtl
dec
cmp
xchg
icebp
pop
jns,pt
clc
xor
inc
repz
test
sti
lods
imul
jae
cmp
cmp
jecxz
sahf
add
push
inc
test
enter
dec
fucomp
or
jnp,pn
adc
mov
aam
inc
push
out
inc
js
iret
and
or
mov
inc
imul
pop
sub
cwtl
cs
dec
mov
repz
fsts
orb
mov
pop
or
sbb
cmp
xchg
mov
pop
notl
add
loope
gs
leave
mov
mov
andb
ja
adc
test
int3
std
mov
jb
cmp
xor
or
push
inc
push
jno
rolb
push
fbstp
das
sub
cli
addr16
mov
push
push
fwait
mov
aad
es
leave
lea
xchg
mov
xchg
out
push
daa
cmp
iret
sbb
in
dec
push
jo
mov
popf
cmp
xor
in
push
pop
in
xchg
mov
pop
cmp
stos
int
mov
dec
or
aam
and
out
xor
repz
push
mov
mov
mov
jne
loop
mov
popf
add
push
mov
push
jle
pop
pop
mov
lds
xchg
cs
insb
jo
ret
repz
and
sbb
sbb
mov
pop
in
and
xchg
shlb
testl
das
mov
ja
rcl
test
out
adcb
inc
stos
dec
es
jecxz
dec
mov
repnz
add
iret
and
icebp
fs
notb
mov
or
push
xchg
push
mov
lods
inc
ja
les
loope
mov
jmp
sbb
cmpsb
pop
mov
fdivp
clc
adc
jmp
or
mov
mov
cmp
int
es
add
inc
stos
push
int3
sbb
jo
jle
enter
xlat
xchg
sbb
nop
and
or
mov
rcl
xchg
cmp
andl
je
in
int3
mov
lods
loopne
inc
mov
xchg
pop
lret
jnp
mov
leave
leave
mov
popf
scas
sub
mov
aad
cmc
dec
les
nop
xor
fsubrs
lods
sbb
or
test
xchg
mov
gs
gs
dec
mov
mull
sbb
out
bound
dec
cmpb
ret
mov
stos
cltd
mov
sbb
repz
push
aaa
adc
sbb
mov
add
lahf
aas
aaa
shlb
cmp
aad
pop
sub
pop
push
cmp
ds
testl
jnp
pop
lret
sub
push
lods
mov
bound
push
sub
test
call
cmp
into
pushf
sbb
jo
jne
insb
pusha
cmc
mov
popa
and
out
leave
push
sbb
imul
push
sbb
mov
xchg
push
std
add
dec
mov
lods
insl
push
cmp
lock
hlt
std
lea
add
dec
dec
cmp
push
mov
sbb
ljmp
shlb
mov
dec
scas
and
add
jo
imul
dec
cmp
or
pop
inc
pop
aas
lret
inc
loope
sub
push
cmp
add
mov
lock
cmp
popf
adc
fcom
pop
mov
xchg
mov
jns
push
push
loopne
inc
cld
xor
cmp
jge
in
pop
push
cmp
mov
mov
add
xor
cmpsl
sub
xchg
sarl
sub
mov
cwtl
mov
xchg
iret
push
test
ljmp
cs
sbb
or
fsts
cmp
into
insb
pop
arpl
push
adc
test
ja
adc
sub
xchg
ror
jns
lahf
cli
sarl
sbb
or
push
les
pop
int
adc
lock
lahf
movlps
ss
mov
sbb
jp
mov
movl
dec
jp
mov
adc
arpl
jb
sahf
pop
aad
loopne
dec
test
inc
mov
xchg
gs
or
sbb
shr
lods
arpl
lret
jb
push
pop
pushf
jns
add
inc
mov
enter
push
je,pn
add
lcall
fisubrs
daa
lods
popf
inc
dec
cmpsl
inc
sahf
call
add
sar
add
cmp
jns
js
cmp
dec
xchg
inc
pop
mov
and
cmp
and
sbb
xor
fisttpll
mov
xchg
push
jae
arpl
push
xor
inc
ret
xchg
and
sbb
inc
mov
pop
adc
fiadds
push
dec
outsb
or
and
sub
ljmp
lret
add
push
sub
push
pop
rol
out
inc
lods
push
push
ss
mov
or
cs
cmpsb
popf
mov
mov
jle
push
pop
xor
hlt
jo
out
mov
sub
adc
rolb
cs
sahf
sti
jbe
push
xchg
loopne
jnp
cli
scas
inc
idivb
and
mov
stos
mov
xor
lds
lods
jmp
jle
clc
icebp
inc
mov
aad
scas
insb
mov
stos
inc
pop
pop
cltd
repnz
jge
lret
aas
xor
jge
mov
in
out
repz
loop
out
cmpsl
jmp
fldenv
lcall
repz
xchg
mov
ljmp
or
dec
xor
icebp
mov
xor
or
outsb
imul
in
test
dec
jp
push
hlt
and
negl
ljmp
sarb
scas
inc
lahf
push
test
outsb
dec
sahf
sub
jle
insl
shlb
fsubl
jnp
rolb
stos
imul
cs
dec
jmp
stos
icebp
jbe
xchg
sbb
xchg
xor
popa
add
data16
mov
fstl
data16
xorl
loope
cmc
in
inc
movsl
add
mov
outsl
jbe
daa
ret
movsb
sbb
pop
insb
cmp
bound
ss
shrl
dec
shrb
sub
mov
imul
cltd
scas
jne
scas
cmp
fs
andb
aas
cmp
mov
testb
mov
push
bound
sub
cmove
push
iret
loopne
loop
cwtl
sub
addb
sahf
mov
mov
xor
test
cltd
jno
aas
jl
push
xchg
mov
xchg
xchg
hlt
push
or
test
push
ds
stos
daa
jne
incl
loopne
dec
nop
sbb
test
cmpsb
fistps
push
sub
and
out
out
mov
add
out
in
and
inc
or
or
es
cli
rolb
mov
jae
mov
ficomps
or
mov
notl
mov
call
jns
add
inc
dec
loopne
mov
lods
rcrl
pop
mov
stc
or
pop
add
jle
cmp
iret
dec
xchg
push
mov
das
out
mov
mov
add
dec
sub
inc
ret
pop
aad
push
leave
int3
add
mov
add
sub
sub
jns
in
roll
arpl
lcall
sahf
lods
in
and
ret
mov
in
pop
in
ret
inc
push
xchg
adc
mov
mov
pop
or
gs
cwtl
mov
movsl
xor
in
gs
mov
jno
mov
sub
dec
mov
adc
sub
cmp
push
je
fnstenv
bound
or
call
xchg
fcomi
sbb
jns
test
pop
fs
push
imul
jge
ja
ja
imull
xchg
aam
repz
mov
aaa
insl
push
cmp
xor
pop
mov
dec
movsb
enter
inc
mov
xor
mov
sbbb
mov
push
xchg
arpl
mov
notb
mov
pop
xor
jle
out
xchg
pusha
push
out
sbb
xchg
lods
and
addl
fdivl
cmp
lea
jnp
fs
call
scas
dec
jno
shll
mov
push
adc
adc
mov
call
mov
pop
mov
pushf
or
fsubs
iret
fwait
or
lds
outsb
fs
and
repz
pop
fwait
push
scas
add
xorl
cmc
fisttpll
pop
sub
fidivrs
notl
popf
push
mov
sub
sahf
push
push
push
in
aaa
movsl
sbbb
rcll
test
repz
jne
jb
movsb
or
mov
mov
call
or
stos
jl
adcb
jne
mov
add
sarl
pop
repnz
dec
inc
sub
lret
mov
aaa
pop
cltd
rclb
pop
adc
jg
insb
jo
mov
insl
jle
add
ljmp
addb
into
idiv
push
mov
xchg
sub
mov
inc
push
sub
clc
inc
push
les
and
in
cs
arpl
movsl
xor
hlt
inc
lds
ret
pop
ljmp
jmp
sub
and
pop
clc
leave
insb
pop
dec
sbb
push
pop
xor
repz
lret
add
or
mov
sub
push
inc
daa
cld
cmp
sbb
scas
bound
mov
mov
mov
cmc
sub
mov
cli
stc
das
mov
adc
push
imul
sbb
xor
push
test
mov
int
ret
repnz
bound
sbb
fldt
ds
or
les
mov
xchg
inc
pop
pop
aaa
shlb
inc
or
out
insl
xchg
test
pop
jo
inc
popf
push
pop
mov
push
cltd
stc
push
in
lock
movsb
aam
mov
adc
arpl
mov
jle
sbb
sub
push
inc
cmp
rclb
add
bound
or
adc
and
jno
mov
das
mov
xchg
out
xor
dec
jmp
mov
lods
mov
test
bound
mov
mov
call
cmp
sbb
sti
js
xor
xchg
cwtl
nop
and
push
and
in
inc
ja
jo
inc
xor
jmp
bound
cmp
jge
fwait
cmp
leave
cmp
mov
shr
adc
and
jbe
jg
push
ficoms
jns
jo
lahf
stos
ja
fs
jne
stos
jecxz
sahf
or
addb
cwtl
mull
enter
in
mov
loope
pop
sbb
push
xchg
daa
jge
mov
movl
mov
cmc
xor
sarb
pop
push
xlat
gs
sbb
leave
mov
jg
cmp
shr
es
iret
push
or
fldl
mov
and
orb
push
dec
sub
push
jnp
cltd
sub
jb
add
jo
push
sub
pop
dec
popa
inc
push
or
mov
push
std
rcr
mov
sub
mov
cmp
pop
xor
ljmp
rcrb
sbb
fisttpl
sub
fldl
rcl
jecxz
jle
mov
lds
out
pop
jne
fildll
bound
add
sub
sbb
cli
hlt
push
scas
xor
mov
clc
cwtl
mov
out
xlat
jl
popa
mov
push
mov
imul
imul
xor
lods
add
sbb
imul
fldl
inc
bound
scas
dec
sub
or
push
xor
or
pop
test
push
mov
xchg
push
cltd
xchg
and
xor
pusha
adc
xor
mov
xchg
outsb
jl
xchg
adc
incl
arpl
inc
daa
push
fadds
xchg
sub
mov
fcoms
jae
mov
call
adc
fsts
lret
mov
jo
xchg
pop
test
clc
outsl
sbb
ficompl
sub
aas
dec
mov
mov
repz
aas
xchg
inc
sub
ret
addr16
sub
dec
mov
and
adc
or
jmp
out
cli
ljmp
add
imul
shrb
pop
push
std
pop
jg
pop
jl
push
xor
mov
into
xchg
mov
test
lea
addr16
cs
sub
jmp
pushf
push
movsb
sub
xlat
mov
xchg
inc
paddd
sub
adc
lods
inc
arpl
sti
pop
or
and
mov
and
mov
pop
sbb
movl
test
aaa
mov
add
push
loop
roll
mov
cmp
test
sbb
jle
ljmp
ficoml
stc
sub
jp
js
dec
jne
jecxz
add
rol
jnp
test
sbb
mov
divb
mov
pop
adc
inc
scas
lods
xor
xchg
mov
imul
aas
in
subb
cmp
ficompl
xchg
or
add
pop
int
pop
out
icebp
pop
inc
xchg
sub
lods
jp
lret
iret
cld
addb
xchg
pop
jmp
arpl
add
mov
lcall
jbe
xchg
dec
jg
pushf
outsb
mov
mov
sbb
sub
int
mov
repnz
icebp
jp
lahf
sub
stc
xorb
negl
mov
movsl
sbb
jne
xor
push
into
jecxz
inc
fisttps
sub
sbb
in
jle
mov
inc
sti
out
xor
mov
imul
push
add
sbb
in
insb
cmp
mov
fdivrs
mov
es
in
repnz
xchg
jae
loope
es
ja
cs
mov
adc
stos
test
or
nop
test
je
je
pusha
sub
xor
test
sub
aad
add
jl
insl
mov
xchg
dec
fdivl
mov
pop
lret
sbb
add
push
jp
or
bound
in
xchg
movsb
jnp
rorl
iret
ss
call
mov
and
insl
dec
fildl
pop
xchg
lcall
sbb
adc
iret
inc
fistl
nop
push
push
push
fst
inc
adc
loop
xor
shrb
inc
popf
sbb
push
insl
stos
stc
hlt
insl
jbe
sbb
fidivl
and
inc
out
inc
shlb
push
and
pslld
inc
aas
mov
into
fdivr
sub
adc
cmpsb
mov
cmp
push
divl
sub
pop
push
push
orl
mov
hlt
xor
out
mov
xlat
or
leave
mov
mov
outsl
jne
pop
pop
popa
jno
insb
xchg
pusha
imul
data16
addr16
adc
pop
rep
ret
pop
stos
adc
test
scas
dec
pop
testb
shlb
jl
jp
pop
add
addr16
and
dec
jae
in
pusha
out
mov
cmp
jecxz,pn
sbb
cmp
jle
mov
test
mov
pop
push
push
data16
mov
xor
pop
or
in
addr16
jmp
xchg
sbb
mov
inc
hlt
pop
jno
data16
cs
lock
or
inc
add
jp
xchg
dec
jle
mov
pop
mov
pop
test
lods
test
aas
repnz
pop
imulb
mov
push
pop
test
and
popa
es
xorb
cltd
mov
imul
ss
stc
sub
sbb
xor
mov
lret
xchg
sub
out
lcall
mov
lahf
in
addr16
stos
pop
sub
aas
mov
sbb
pop
lock
cmc
cld
out
or
lods
out
jns
jmp
std
sub
mov
xlat
xchg
xchg
fwait
add
lds
insl
inc
and
sti
pop
movsl
fwait
cmpsb
pop
mov
cwtl
int
inc
xor
cmc
push
ficoml
bound
jg
cmc
movb
cmpsb
xchg
lods
clc
fidivrs
xor
lea
lret
les
sahf
scas
mov
lods
mov
sbb
cltd
mov
pop
shlb
add
lods
adc
movsl
mov
lret
cltd
xchg
ret
inc
sub
out
imul
movsl
test
pop
int3
jno
insb
mov
mov
lret
jne
inc
rcl
insb
outsb
ss
repnz
pop
add
mov
mov
mov
mov
add
and
clc
outsb
jnp
test
push
jge
dec
add
jne
maskmovq
imull
xchg
sbb
scas
push
ss
jo
js
or
into
cmp
out
xor
jmp
push
aam
push
dec
mull
and
jae
push
dec
dec
dec
jle
inc
test
mov
xchg
mov
adc
push
enter
xchg
test
orl
pusha
pop
mov
lahf
fnstenv
sub
ss
push
cmp
cmp
xchg
cmpsl
sbb
popf
jmp
and
cmp
push
and
xchg
mov
adc
call
aaa
cwtl
mov
rclb
lcall
sbb
leave
daa
adc
enter
xor
std
popa
dec
sbb
dec
mov
lahf
xchg
add
xchg
inc
xchg
sub
ror
sub
sbb
xor
cmp
adc
stc
psrlw
inc
lret
mov
data16
repz
mov
add
push
mov
adc
inc
nop
sbb
push
sbbl
iret
into
fdiv
inc
popf
out
in
enter
in
inc
aas
lret
and
fldt
xchg
mov
aas
push
scas
hlt
into
out
sbb
test
adc
pop
in
mov
jg
fscale
js
call
lods
xchg
xor
and
test
leave
lds
enter
sub
repz
ja
xchg
pusha
mov
push
adc
mov
imul
pop
and
dec
and
in
mov
inc
xchg
adc
xchg
ret
sbb
test
test
stos
pop
xchg
and
jbe
mov
and
std
lods
mov
std
add
mov
mov
cli
xchg
out
inc
test
push
add
pop
ljmp
mov
in
cwtl
jp
icebp
mov
xrelease
pusha
fnsave
jecxz
adc
fwait
out
fiadds
xor
aas
testb
cmp
hlt
cmp
test
das
outsb
add
lods
ficompl
push
inc
int3
pushf
cmp
mov
pop
add
lcall
mov
jg
xchg
xchg
arpl
cmp
pop
inc
cs
cmp
testb
push
and
dec
dec
imul
add
add
into
inc
cwtl
lods
lds
mov
mov
mov
sbbl
test
mov
xchg
pop
dec
sbb
test
movsl
push
imul
and
sub
mov
inc
shll
dec
jle
xchg
stos
arpl
sub
out
sub
stc
aam
cmp
enter
data16
add
xor
movsb
sti
xchg
out
loop
aad
and
push
sbb
mov
adc
fstpt
rcrl
mov
sbb
cmpsl
push
jbe
test
popf
int3
iret
push
je
cmp
data16
das
sti
pop
sbb
sbb
jmp
add
test
shrb
stc
imul
lds
add
repz
add
lods
and
jecxz
mov
das
sub
inc
adc
pusha
ja
movsl
das
popf
push
cmc
nop
and
bound
jbe
fs
mov
mov
fwait
out
xor
dec
push
inc
outsl
mov
cli
xor
insb
add
insb
cmp
out
popf
xchg
sar
out
mov
dec
fstl
xchg
push
ret
outsb
mov
data16
daa
outsl
pop
mov
into
ss
mov
add
pop
xchg
scas
adc
not
mov
dec
push
sub
ret
sti
das
test
es
imul
ss
push
push
lods
mov
fidivrl
inc
cmc
xor
adc
xchg
popl
jg
mov
xor
jl
mov
repz
lea
ds
arpl
push
les
pop
fwait
adc
gs
push
push
sbb
mov
stos
pop
pavgb
in
jmp
mov
in
popf
loop
mov
in
aaa
pop
jb
fucomp
lcall
cli
dec
sub
lret
ficoms
pop
mov
cmp
es
mov
sarb
mov
jns
negl
out
cmc
mov
jmp
jnp
sub
dec
arpl
out
push
inc
ret
scas
pop
push
dec
fcmovnbe
inc
add
push
out
or
push
xor
out
incl
sub
sbb
mov
push
or
movsl
imul
mov
jmp
gs
inc
sub
or
test
push
std
mov
or
mov
mov
cld
xchg
test
mov
inc
xor
push
fistpl
add
ds
out
ss
sub
cmp
inc
xchg
aas
idivl
push
mov
aad
jle
pusha
dec
jle
test
js
add
push
out
pop
add
mov
jmp
and
addr16
xchg
xor
icebp
or
clc
dec
aas
push
mov
cmp
stos
ret
mov
jnp
leave
leave
mov
sbb
mov
push
adc
jae
cmp
inc
fidivl
and
leave
test
lds
data16
sub
mov
add
pop
int3
pop
das
dec
dec
je
aad
push
iret
sub
hlt
lret
mov
fwait
jl
ja
fsubr
mov
push
and
or
in
imul
sbb
in
lods
mov
enter
insb
pop
loopne
pop
xlat
fisubs
jmp
stc
mov
in
sbb
shlb
sbb
ror
es
nop
in
lret
push
mov
sub
inc
inc
mov
loopne
rclb
sub
test
jle
lock
jl
scas
push
adc
push
inc
mov
jb
mov
loope
pop
popf
sbb
push
mov
out
bnd
insb
or
es
dec
das
scas
fisubrs
jmp
insl
jge
add
add
fcmovnu
lcall
pop
xor
pop
add
pop
fsubrl
arpl
mov
push
sbb
push
iret
inc
sahf
sti
adc
addb
pop
mov
lahf
sbbb
mov
jg
ja
ret
inc
push
sub
jbe
jb
sbb
cwtl
xor
mov
mov
std
adc
xor
mov
sub
and
test
jno
mov
push
mov
pop
or
mov
gs
mov
loope
sbb
dec
inc
cmp
lock
xor
imul
insb
inc
pop
fsts
testb
push
in
pop
gs
call
mov
dec
and
pop
aad
outsb
fidivl
mov
cwtl
in
negb
cmp
sub
test
repz
ds
fwait
push
dec
in
push
jne
cld
pop
mov
pushf
into
add
in
std
fstl
mov
adc
sbb
mov
mov
xchg
xor
xchg
lret
push
xor
xchg
xchg
lods
dec
pop
hlt
sbb
mov
mov
mov
and
scas
xchg
mov
imul
push
cmpsl
cld
jg
sbb
and
lcall
movsl
xor
mov
push
push
add
mov
pop
cmpsl
mov
imulb
ret
push
adc
or
inc
clc
xlat
aam
cld
test
mov
mov
xorl
xchg
inc
push
adc
loope
push
add
xchg
sbb
cmp
cmp
enter
cld
ljmp
inc
xchg
shr
in
ja
push
int
lahf
mull
icebp
iret
subl
into
dec
cmp
cmp
jno
lfs
push
bswap
test
and
rcrb
push
dec
mov
jg
popa
mov
inc
stc
pop
repnz
movsl
ffree
add
mov
fisubrs
loope
out
push
push
stc
mov
or
cmpl
sub
clc
cmc
shlb
bound
adc
mov
mov
push
cmp
xchg
mov
pop
mov
mov
scas
mov
inc
pop
add
mov
push
repz
lret
adc
adc
addr16
loopne
jae
mov
push
mov
dec
xchg
loop
push
in
ljmp
jnp
dec
adc
push
aas
aam
cld
sbb
movsb
mov
rorb
es
retw
inc
xor
cld
test
sub
outsl
xor
mov
jp
inc
shrb
pop
dec
push
xor
test
cltd
lret
push
inc
lds
cs
push
jmp
jno
and
popa
xor
out
out
pop
push
add
stc
push
sub
dec
loop
fcomip
arpl
icebp
add
mov
jno
dec
iret
andb
ret
aas
xchg
clc
orl
cs
repnz
cmc
add
aam
mov
out
push
rclb
push
mov
xchg
test
xor
ret
scas
mov
lcall
add
cmc
lods
les
jge
push
inc
and
mov
pop
addr16
mov
nop
imul
imul
push
mov
jo
or
cwtl
push
mov
adc
in
pop
rcrb
roll
jl
mov
out
sahf
cmp
and
std
loop
vpperm
pop
mov
test
mov
movsb
xchg
fsubs
add
adc
scas
xchg
cs
push
jp
xchg
out
dec
aad
les
out
inc
mov
lahf
push
sarb
add
xor
and
and
enter
mov
shlb
fmulp
sbb
sbb
aaa
clc
mov
sub
mov
nop
and
aaa
push
jp
test
leave
and
mov
sub
mov
sbbl
pop
lods
and
les
shlb
sub
fwait
movsl
dec
add
xor
xor
cmc
insb
pop
shrl
jge
ja
movsb
dec
mov
sbb
dec
imul
jle
out
xlat
lods
jne
jmp
or
sub
xor
mov
add
jae
inc
cs
cmpsl
or
ljmp
fisttpll
stc
mov
inc
adc
repz
sbb
sahf
mov
mov
adcl
jl
cmc
and
sti
sbb
test
adc
push
aad
pop
push
test
mov
mov
jns
jp
call
les
jl
xor
out
mov
jnp
mov
pop
add
daa
jl
pop
push
clc
push
lcall
cs
mov
xor
lock
ljmp
pop
test
xor
or
cli
in
std
into
cs
stos
and
cmc
mov
jg
inc
iret
test
push
push
cmp
add
adc
fcoml
pushl
and
or
dec
or
je
lret
push
and
stos
out
lods
negb
jmp
dec
movsl
cmp
cmpsl
loope
add
pop
lahf
rolb
cmp
pcmpeqd
dec
and
xchg
cmp
dec
and
adc
xor
jp
jno
xchg
fwait
push
sbb
mov
cltd
pop
lods
pushf
rcrl
ljmp
jnp
mov
push
cmp
push
aam
pop
arpl
lret
mov
roll
lock
out
sub
subl
rcrb
xbegin
or
cmp
leave
adcl
jno
mov
adc
push
inc
add
in
pop
nop
xorb
push
std
or
bound
movsb
into
mov
xchg
sub
mov
add
test
in
adcl
adc
scas
test
or
mov
dec
ja
and
add
imul
stos
cld
les
enter
mov
subb
lcall
xor
inc
rclb
sbb
jmp
xchg
lret
fisubrl
sahf
enter
test
inc
adc
test
cmp
sbb
jb
in
mov
inc
loop
xor
divb
inc
adc
sub
or
mov
nop
lret
cmp
mov
out
adc
das
add
loop
cmp
das
add
dec
daa
sti
adc
sbb
nop
call
sub
mov
into
inc
push
and
ljmp
or
xchg
das
stos
gs
packuswb
lret
add
adc
sub
push
xchg
cs
pop
mov
and
mov
inc
lahf
inc
or
loop
mov
jp
xor
xchg
aaa
mov
mov
stc
xchg
jle
stc
aaa
pushf
add
cmp
insb
setns
jmp
mov
pushl
aas
test
test
mov
pop
cltd
jb
fwait
pop
dec
mov
or
inc
dec
enter
mov
js
cwtl
adc
in
fwait
lcall
xchg
jl
out
inc
adc
pop
lods
add
aas
out
popf
mov
pop
cmpsb
imul
popa
inc
std
imulb
aad
pusha
data16
sti
xor
stc
inc
lock
repz
push
jnp,pt
icebp
fimull
int3
mov
testb
inc
rcrb
pop
add
inc
leave
insl
xor
subb
punpcklwd
jno
test
inc
fldt
cld
and
xor
loope
popf
hlt
icebp
aam
sub
shll
mov
ss
and
lret
mov
sub
leave
jo
mov
mov
fidivrl
sub
pop
into
fidivrs
jne
andb
mov
jb
xchg
aaa
pop
sub
push
mov
push
xor
pop
aas
lods
cmp
mov
or
dec
ret
and
addl
inc
iret
mov
xchg
shrb
mov
es
mov
fiaddl
pop
xchg
repnz
mov
negl
rcrb
ja
dec
in
ja
std
cmp
aas
iret
je
jno
paddb
push
cli
inc
cmc
ja
push
fistpll
lcall
push
out
popa
adc
shl
adc
shlb
nop
addr16
cld
push
leave
adc
test
jmp
pop
cmp
push
pop
sub
int
sbb
and
nop
in
popf
or
mov
push
jl
int
jp
fidivrs
mov
jb
inc
or
mov
xchg
push
mov
fisttpll
jbe
stc
adc
out
mov
xorl
leave
in
dec
ja
fimuls
xor
js
pop
daa
sbb
push
mov
subl
mov
mov
leave
jb
ret
jle
pop
int
out
mov
aas
fnstenv
stos
fmuls
mov
mov
xor
fimuls
mov
cmp
sub
pop
subps
loop
arpl
lahf
loopne
mov
sub
push
outsb
icebp
xchg
mov
add
pop
test
push
xchg
testb
add
js
jmp
testl
fisubs
inc
cmp
push
pusha
movsl
xlat
inc
fcoms
adc
repnz
and
mov
arpl
xchg
cmpl
inc
js
or
add
popf
push
jl
ret
mov
and
loope
sub
test
push
sbb
and
or
add
mov
fwait
ret
inc
popa
les
scas
push
fcoml
jbe
aaa
jbe
jmp
pop
and
adc
popl
jmp
shlb
jecxz
fs
add
dec
daa
adc
mov
loopne
mov
push
sbb
xlat
cmpsl
int
mov
in
or
jl
out
sub
mov
push
movb
push
mov
lods
loop
lds
adc
int3
pop
dec
xchg
sub
das
iret
fiadds
mov
pop
xor
mov
cmp
das
out
push
xlat
jb
xor
and
test
sbb
sbb
adc
aas
call
mov
mov
pop
mov
addr16
pop
add
loop
mov
cmp
add
std
lret
sbb
ss
dec
stos
pop
push
xor
mov
sub
pop
xchg
xor
js
sub
jge
dec
mov
inc
cld
and
add
dec
and
ret
xlat
sahf
and
lahf
icebp
daa
adc
bnd
sub
pushf
subb
addr16
or
sbb
sahf
adc
adc
sbb
push
mov
hlt
sarl
xchg
push
pushf
inc
mov
sub
js
lods
and
mov
push
adc
loope
mov
mov
pop
orl
sbb
add
or
negb
lock
mov
xor
mov
and
inc
mov
lcall
lods
mov
sbb
ficoml
imulb
pop
pop
test
mov
fsub
cmp
and
idiv
push
cmp
dec
cmp
data16
adc
stc
lea
jl
mov
call
mov
pop
test
sarb
in
dec
stc
or
lret
stc
lods
mov
inc
mov
scas
flds
andb
xchg
adc
mov
dec
ja
mov
notl
ja
repnz
jmp
xor
movsl
and
push
movsb
fiaddl
ja
mov
mov
into
ret
inc
loopne
mov
pop
cmp
pop
or
popa
test
push
test
dec
icebp
mov
pop
lret
out
arpl
cmp
xchg
out
clc
adc
shrb
jo
loop
mov
mov
sbb
mov
loop
fstp
in
xchg
cld
or
sub
sti
lods
test
mov
xchg
adc
fdiv
fsts
stos
fldl
jp
faddp
mov
js
mov
cmc
loop
aaa
push
inc
je
fisttps
lret
and
leave
dec
popl
inc
or
mov
mov
mov
push
cwtl
mov
or
pop
imul
add
mov
aam
outsl
inc
mov
sub
or
pop
or
jecxz
int
rolb
hlt
jae
repz
imul
stc
and
sub
insb
mov
cmp
jns
insb
cmp
out
in
roll
inc
jne
cs
mov
jmp
in
call
sbb
arpl
jmp
xchg
imul
jle
popf
sub
jg
mov
and
mov
dec
jnp
movsb
out
or
sbb
sahf
jne
cmp
cmp
mov
rcrb
push
popa
or
cwtl
and
cmp
sbb
jecxz
fdivl
pop
adc
divb
sti
mov
push
or
dec
or
adc
insl
jb
push
lods
aas
inc
repnz
outsl
fildl
test
ret
dec
sub
fnsave
xor
loope
xor
xchg
add
pop
cmp
and
add
imul
push
jmp
mov
out
cli
or
add
cmp
iret
cmp
jge
mov
push
mov
pushf
cli
xchg
push
repnz
clc
loope
or
cltd
cmp
rcrl
popa
gs
sub
cli
push
cli
rorl
insl
cmc
in
pushf
sub
gs
push
imul
and
adc
inc
pushf
or
xor
loopne
outsl
adc
test
and
xchg
mov
ss
pop
arpl
push
pop
ret
popl
rorl
daa
mov
mov
mov
aad
jmp
pushf
rcl
mov
xor
in
cmpsl
lods
cmp
cltd
xor
adc
mov
sub
pushf
sbb
imul
ret
and
lret
das
je
mov
pop
outsb
xor
jl
js
aad
pop
int
aaa
fidivrl
cs
pop
shrl
test
mov
daa
pop
gs
push
mov
push
dec
mov
iret
outsl
sbb
bound
inc
movsb
shl
sub
pop
jne
leave
mov
sbb
sbb
sub
imul
jg
cmc
sub
cs
lret
testl
in
xchg
out
jge
mov
fldlg2
mov
rcrb
mov
cmp
mov
add
sbb
or
pop
sub
add
arpl
lcall
in
push
push
orl
mov
rol
popa
sbb
leave
xchg
sub
sub
in
fildll
push
out
cmp
int3
sbb
call
cltd
sarb
mov
xchg
jae
xchg
out
mov
xor
scas
inc
iret
dec
cwtl
into
mov
cli
or
sbb
out
stc
pop
adc
lret
mov
inc
sbb
stc
dec
adc
aas
xchg
pop
fisubrl
ret
push
push
add
std
ljmp
or
mov
dec
dec
xchg
dec
mov
push
sbb
mov
lret
enter
fldl
xchg
pusha
jmp
mov
leave
int
mov
and
sti
sti
mov
pop
std
xor
aam
push
popa
push
loopne
sahf
in
in
pop
cmp
mov
aas
lods
mov
leave
jmp
es
pop
adc
loope
test
sub
or
jle
adc
mov
inc
push
push
ficoml
sar
sub
pop
arpl
cmpsl
xchg
pop
sub
sbb
cs
add
enter
jb
and
mov
movsb
adc
jp
fiaddl
cmp
and
js
mov
enter
sub
test
aas
xchg
mov
pushf
inc
mov
or
mov
bound
ja
and
inc
test
xchg
add
inc
mov
shrb
adc
insb
push
rolb
jmp
push
dec
inc
xchg
jnp
out
jle
out
sbb
or
mov
movsl
xlat
push
shll
pop
lods
mov
in
sbbb
in
inc
pop
mov
dec
xchg
xchg
fdivl
test
jge
das
inc
hlt
dec
jmp
xor
or
int
sbb
rclb
shld
cli
int3
outsb
bound
pop
mov
cmp
dec
push
push
xchg
xchg
cld
add
cld
test
inc
add
out
mov
sarb
loopne
ds
out
push
push
mov
pop
bound
mov
pop
or
movsl
inc
adc
inc
mov
gs
jns
push
out
mov
lock
and
scas
xor
mov
leave
loope
xchg
cmp
mov
popf
jno
jno
and
pop
cmp
or
jnp
jne
scas
and
fisttpll
fstl
cmpsl
test
push
hlt
fidivl
in
lea
or
xchg
cltd
and
push
bnd
negl
dec
add
shlb
dec
mov
gs
gs
loope
stos
shr
arpl
mov
mov
mov
loop
xchg
adc
scas
test
pop
or
cwtl
int
ret
fisttps
jbe
enter
adc
aaa
mov
aad
xchg
inc
mov
dec
addr16
or
das
push
xchg
out
xor
jns
int
mov
mov
enter
mov
mov
push
inc
lds
pusha
outsb
rolb
rolb
mov
shrl
inc
sbb
int3
or
or
arpl
leave
fs
or
gs
cmp
add
rcl
fcoml
or
xorl
lea
pop
add
add
cmp
push
push
mov
mov
out
pop
xchg
clc
inc
iret
add
sti
dec
rorb
ljmp
clc
dec
lea
and
lcall
jecxz
ja
push
sub
adc
mov
xlat
inc
push
test
movsb
jp
dec
adc
sarb
fnstcw
adc
ljmp
or
and
sbb
inc
pusha
xor
pop
lods
cmp
call
xchg
or
fdivrp
imulb
out
lret
stos
push
mov
jne
inc
xchg
sbb
mov
xor
cmp
inc
xorl
insl
rcr
jg
pop
and
mov
pusha
adc
cwtl
cmpsb
add
fisttpll
popa
push
movsb
rcrl
mov
sub
rorl
daa
fisttpl
ret
insl
iret
or
xor
xchg
cmp
ret
add
addr16
push
fidivrl
mov
leave
jle
dec
int3
lahf
mov
mov
pop
repnz
mov
or
mov
mov
or
loopne
dec
arpl
mov
xchg
sub
in
pop
fdivrl
pop
lods
sti
push
sub
jbe
clc
cmc
dec
outsl
cmp
pop
leave
push
addr16
sbb
fwait
mov
push
cld
lahf
cmp
xor
cmpsl
mov
mov
testl
pop
xor
and
pop
add
dec
add
test
xchg
int3
aas
or
shll
cli
push
xlat
mov
push
pop
pusha
xchg
cmpsb
test
push
xchg
mov
subb
dec
nop
pop
fimuls
movsb
iret
adc
cs
add
pushf
push
clc
rcll
adc
and
iret
mov
mov
push
lods
ja
pusha
xor
lahf
push
xchg
and
int3
cmp
test
pop
ret
and
inc
stos
lahf
jbe
sbb
nop
ss
out
call
movsb
mov
cmp
jl
mov
mov
cmp
call
jns
jne
scas
fwait
test
int
add
xor
add
cmp
cmp
out
sbb
mov
repz
out
pop
jns
dec
xchg
outsl
andl
xchg
in
imul
lock
and
push
addb
into
pop
sub
nop
and
and
or
fucom
negb
pop
repz
out
lea
cmpsb
fists
sbbl
pop
imul
or
cmpsb
dec
dec
sbb
dec
add
je
mov
fildl
cmpsl
cmp
int3
mov
popf
sbbb
xchg
jp
stc
push
fadds
xchg
add
gs
in
testl
add
cmp
out
fcmovbe
mov
lcall
imul
sub
negl
decb
xchg
push
sub
xor
xor
pop
jl
mov
addr16
aam
gs
xchg
loope
in
push
rclb
loop
adc
dec
xlat
bound
sbb
or
mov
mov
inc
inc
xchg
sbb
mov
jne
fcmovne
popa
arpl
jmp
sbb
sahf
sub
mov
xlat
gs
fldl
dec
data16
test
stos
xor
pop
sarb
pop
orl
or
mov
adc
jmp
xor
ss
sub
adc
data16
leave
push
sbb
push
andl
add
pop
mov
movsb
cmp
ret
test
sbb
out
push
jecxz
bound
imull
in
and
jl
into
lcall
call
mov
adc
loope
adc
sub
cmp
nop
dec
pop
mov
das
mov
lcall
insb
mov
ss
cmp
lds
pusha
mov
popa
rcrb
xor
stc
insl
jmp
icebp
fidivrs
mov
xlat
jae
lcall
aas
dec
mov
cli
and
pop
dec
clts
adc
or
fwait
sub
popf
aam
insb
adcl
pushf
mov
pop
xchg
mov
lock
pop
mov
and
mov
ret
pavgw
test
das
iret
lds
cmp
ljmp
xor
sti
mov
ss
push
add
or
xchg
in
dec
hlt
sub
pop
jmp
push
lods
rorl
pop
xchg
jp
in
in
sbb
push
xchg
xchg
jo
pop
in
mov
jmp
inc
xchg
dec
std
cmp
dec
pop
jo
fidivrs
adc
push
mov
nop
pop
push
mov
add
sbb
dec
cmp
mov
or
cmpsl
sbb
pop
cltd
stos
xor
ds
adc
scas
jno
pop
in
dec
enter
xchg
jo
popf
xchg
lds
dec
out
or
cmp
subl
les
pushf
sbb
lret
jecxz
fidivs
fcoml
mov
adc
push
cmpsl
cwtl
mov
data16
sbb
xor
sbb
test
sbbl
mov
inc
pop
movsl
adc
xor
or
pop
jecxz
xchg
lock
dec
mul
pop
jle
push
popa
data16
cmp
mov
fisubs
test
popa
dec
adc
fwait
cltd
ds
mov
mov
leave
cwtl
cmp
add
cli
inc
stos
mov
das
mov
shrb
sub
mov
sub
pop
in
shr
push
dec
test
inc
mov
scas
sub
rolb
mov
add
in
pop
ja
mov
cs
adc
jne
int3
push
aaa
out
in
mov
inc
out
jl
xor
and
aas
push
stos
dec
addr16
enter
sbb
and
sbb
lea
les
xchg
icebp
jo
sbb
shlb
sub
inc
testl
push
cmpsl
adc
xor
test
push
clc
dec
scas
jae
push
xchg
popf
out
out
insb
jns
push
mov
jbe
lock
in
fstl
roll
cli
jno
jge
mov
mov
imul
lock
jo
fprem
mov
jp
mov
mov
dec
add
mov
inc
jnp
cltd
dec
fucomi
cmpsl
ficompl
jne
xchg
leave
das
cltd
scas
outsb
jecxz
mov
cmp
orb
ret
jle
pop
mov
fistpll
insb
loope
nop
out
sbb
xlat
cwtl
ljmp
inc
int
pop
lock
sarb
inc
xchg
xor
pushf
stos
test
or
and
push
stos
es
outsl
inc
jns
insl
jge
scas
jno
les
stc
fldcw
cmp
out
popf
jg
outsb
fs
or
mov
incl
stos
cli
pop
mov
mov
iret
call
jle
jmp
cmc
cmc
push
inc
les
jmp
insb
adc
js
in
mov
dec
jbe
jns
mov
mov
repz
inc
push
lock
stc
aas
testb
xor
outsl
add
int3
cmc
push
lds
shll
sub
leave
cltd
fwait
gs
sbb
aam
xor
xor
ret
sub
pop
shll
dec
jecxz
mov
jecxz
ja
push
cmp
test
mov
add
sbb
cmc
daa
adc
sbb
test
icebp
ds
out
sub
mov
pop
aam
dec
aaa
mov
cld
xchg
sahf
imulb
xchg
into
adc
push
jne
jns
lcall
pop
dec
fldl2e
pop
mov
in
stos
add
sbb
out
fists
add
ljmp
pop
and
dec
je
js
lea
daa
push
mov
sbb
fiaddl
sbb
mov
popa
sub
mov
pop
xor
faddl
repnz
sub
mov
ss
scas
mov
push
cmp
add
push
test
fcmovne
fwait
insb
out
mov
add
in
jge
popf
arpl
sbb
mov
jae
adc
clc
js
les
enter
test
and
sub
jle
lret
jmp
xor
jno
rorb
out
shll
inc
inc
loop
addr16
je
xor
cmp
ss
add
push
test
and
and
lods
sarl
mov
xchg
bound
mov
lahf
loopne
push
subb
sub
lcall
sbb
lods
aas
mov
sub
popa
ret
ja
sbb
rorb
scas
mov
aaa
ret
push
lret
inc
xor
out
jle
jl
push
sub
and
scas
sub
inc
jle
xor
bound
aam
lock
or
and
ficomps
insb
imul
mov
cmp
mov
icebp
mov
in
fnstcw
cmc
fcomi
push
xchg
imul
dec
je
not
popa
lret
bound
aam
pop
pop
adc
jne
or
je
cli
xor
xor
pop
fstpt
add
notb
fistps
div
cmp
jge
enter
jg
in
push
sbb
das
stc
cmp
test
xor
xchg
bound
mov
fs
xor
pop
and
stc
jge
aas
jno
lea
jb
mov
mov
sbb
aaa
fnstsw
sahf
iret
sbb
jo
mov
adcl
int3
pop
jb
stos
pushf
mov
mov
add
subb
add
jle
lcall
daa
push
lret
in
sahf
aam
xor
dec
jno
adc
sbb
aaa
push
std
enter
cmp
stc
jo
fwait
cmp
adc
iret
insl
xchg
arpl
aam
cltd
mov
lock
pop
inc
test
mov
add
int3
popa
outsl
fstpl
jne
arpl
mov
int3
ja
cmp
dec
xor
aas
int
xchg
subl
mov
enter
out
sbb
sub
and
mov
ret
movsb
jl
add
cld
sbb
mov
test
repz
and
pushf
jle
and
push
mov
pop
cmc
scas
test
stos
jecxz
outsl
daa
xchg
adc
pop
dec
xchg
dec
add
push
lcall
sbb
push
or
xor
and
dec
insl
adc
or
lea
bound
xchg
push
sbb
mov
cmp
push
sar
dec
mov
mov
movl
hlt
pushl
inc
mov
pushf
sub
jmp
add
aad
dec
pop
addr16
ljmp
sbb
xchg
or
loop
cltd
jg
jecxz
inc
sti
mov
xchg
cmpsb
gs
inc
fsubrl
add
shlb
add
ljmp
or
mov
bound
test
mov
das
sub
daa
cmp
sbb
insl
cmpsb
les
jno
fwait
xor
adc
pop
ret
iret
movsl
imul
popa
push
clc
xchg
insl
xor
add
inc
adc
adc
or
mov
sub
stos
and
mov
mov
push
xor
fnsave
sbb
out
pop
fistps
sbb
dec
lds
mov
ret
pusha
cmpsl
adc
test
pop
ss
pop
daa
add
add
mov
out
xchg
das
mov
imul
mov
cmpb
mov
pop
jbe
insb
inc
xchg
xchg
jl
sub
fldl
aad
sahf
inc
adc
decb
pop
xor
cmpsl
xchg
enter
mov
sbb
orl
jns
adc
lds
lock
aas
jle
addr16
scas
or
dec
adc
push
jo
xor
pop
xor
popf
andl
ljmp
push
sbb
daa
xchg
bound
scas
push
movsl
bound
dec
jae
push
sbb
sbb
ret
ja
push
dec
mov
aaa
xor
subl
dec
stc
push
push
lcall
lods
pop
adc
stos
add
xchg
movsl
xchg
gs
fwait
inc
add
and
ljmp
adc
pop
xor
dec
cmp
push
rcrl
insl
pushl
push
mov
jg
dec
xor
into
mov
aaa
out
cwtl
in
pop
jae
xchg
clc
cmp
dec
xchg
jge
pushl
inc
dec
ljmp
or
nop
xchg
push
pop
xor
cmc
in
push
scas
rcrl
dec
dec
jne
fiaddl
dec
cwtl
stos
pop
pusha
push
sbb
pushf
scas
inc
add
jbe
mov
loopne
and
jb
mov
cwtl
andb
test
test
jmp
gs
mov
and
iret
out
or
inc
jno
and
or
stos
mov
jmp
and
lds
aaa
daa
fisubrs
push
push
aad
add
add
ss
jae
iret
or
push
pop
add
mov
push
xchg
pushf
xchg
lcall
or
mov
mov
sarl
jno
push
fiadds
jle
mov
jmp
popa
fisubrl
lea
push
out
and
xlat
outsb
push
sbb
int
pop
sub
pop
inc
mov
pop
dec
sarb
push
repz
mov
mulb
dec
pop
fsubr
sbb
cmpsb
fidivl
add
add
shll
ss
lret
add
adc
in
ljmp
test
roll
sub
pop
push
popf
movsl
sbb
and
nop
push
inc
xchg
leave
addb
sub
xor
aaa
out
lods
cmp
call
andl
repnz
inc
insl
in
movsl
mov
sub
and
popa
push
inc
inc
push
mov
push
ret
xchg
push
or
enter
sti
fdiv
sbb
pushf
pop
pop
jo
imul
hlt
push
lret
mov
dec
mov
or
jmp
iret
ss
mov
insb
inc
xor
scas
fmul
adc
jge
cmpsb
out
xor
jecxz
mov
mov
add
jae
and
sahf
mov
idiv
fwait
sub
push
nop
pop
push
mov
cwtl
rclb
sub
stos
popa
mov
loopne
int3
aas
xchg
jg
pop
gs
lods
in
loop
out
cmp
xlat
adc
adc
out
xchg
test
xor
push
lods
or
and
sbb
push
push
jge
inc
js
dec
cs
inc
add
dec
xor
mov
fucomp
push
or
ja
cmp
add
xlat
ret
mov
and
mov
dec
xor
int3
xchg
sbb
cmp
mov
inc
sahf
xchg
push
lock
pop
add
mov
dec
sub
jb
xor
push
add
imul
into
mov
or
sbb
aam
sbb
mov
jp
jbe
gs
mov
shrl
pop
inc
fs
cli
add
mov
cmpsb
adcb
aaa
sbb
fimuls
loope
mov
mov
jnp
sub
jge
loop
adc
addl
shrb
jmp
in
aam
adc
sar
insl
movsl
stos
push
ss
cmp
ds
jge
mov
push
xor
sbb
cli
lock
cmp
imul
mov
push
fidivrs
fnstenv
stos
icebp
cmp
mov
xchg
adc
loope
addb
ss
mov
add
imul
mov
dec
test
outsb
aaa
lock
shll
mov
orb
jle
leave
lds
sub
insl
iret
push
mov
jge
xchg
or
je,pt
jl
sub
pushl
cmp
out
jecxz
in
in
repz
jle
es
dec
mov
mov
popf
fmull
shlb
jnp
sbb
inc
cli
jne
pop
loope
pop
sub
dec
lret
inc
jb
call
dec
and
jns
lret
xor
pop
push
idivb
xor
rol
icebp
jnp
in
pop
rcl
in
push
mov
push
mov
sub
fsub
subl
pop
cmp
or
xor
jb
mov
inc
cmp
pop
inc
out
andl
mov
pop
cmp
lods
aad
and
cs
cltd
icebp
ja
repz
inc
adc
sub
lcall
xlat
lods
hlt
pop
pop
stos
and
int3
in
ret
or
cmp
ret
push
cmpsb
stc
mov
mov
aas
pop
mov
ret
xor
pop
shr
paddd
xchg
and
jno
hlt
out
or
cmp
int3
sbb
icebp
add
enter
xchg
and
mov
pusha
repnz
fwait
inc
hlt
sbb
push
mov
test
mov
fxch
sub
inc
adcb
cmpsl
ret
or
in
lahf
jecxz
movsb
mov
push
dec
iret
es
rcll
xchg
mov
clc
and
cld
mov
push
in
ljmp
mov
adc
mov
or
addl
ja
pop
push
rcrl
pop
pop
testb
push
lea
push
push
mul
xor
imul
inc
jbe
pop
push
sub
sbb
pop
push
sbb
outsb
dec
outsl
dec
mov
or
loopne
push
shrb
jmp
popl
cmp
shll
iret
lret
sbb
jno
loop
mov
fidivrs
add
hlt
pop
call
mov
xchg
jns
out
mov
dec
movsl
bnd
xor
arpl
bound
lcall
jg
jnp
dec
xor
xor
mov
dec
cmp
mov
and
pop
mov
jne
xchg
xor
xchg
rcrl
inc
cmp
xchg
mov
push
or
or
fstps
jmp
or
mov
mov
add
bound
cmpsb
lock
mov
jb
and
add
mov
pop
mov
pop
nop
mov
cli
aad
mov
and
inc
sub
push
outsb
stos
pop
sub
xchg
seta
dec
test
cmp
jo
jae
dec
and
jg
sbb
pusha
mov
sahf
lret
fisubrs
push
jg
loop
dec
jo
lock
adc
out
pop
addr16
jb
jne
pusha
mov
loop
imul
sub
cmpsb
leave
shlb
loop
lret
fs
dec
inc
jp
xchg
adc
ficoml
sarb
insl
loope
dec
enter
add
fsts
add
cmp
insb
sarb
cmp
xchg
sub
xchg
push
mov
andl
insl
mov
push
xlat
inc
les
xchg
js
ss
mov
lods
inc
pop
lock
dec
dec
pop
sub
add
pushf
jmp
shlb
dec
xor
inc
mov
stos
out
packssdw
daa
and
repz
imul
xchg
into
test
add
pushl
mov
pop
shll
sub
xchg
leave
mov
push
mov
sub
xor
inc
shlw
mov
daa
enter
inc
test
pop
bound
dec
mov
jg
mov
enter
xor
adc
or
cmp
out
je
fimull
idivb
popa
inc
into
inc
mov
pop
in
daa
mov
sub
adc
cli
leave
push
orl
aad
shlb
adc
xor
idivl
pop
fisubrl
imulb
int3
sub
insb
push
scas
into
scas
xor
pusha
sub
xchg
int3
xchg
stos
cli
dec
inc
adc
cmp
jg
xchg
inc
testl
push
pop
add
das
push
outsb
mov
inc
movsl
dec
nop
cmpsb
in
stos
lods
mov
imul
cmp
jge
loop
lods
inc
add
jno
and
mov
loope
and
call
sub
hlt
push
mov
nop
outsl
push
mov
arpl
ror
jns
pop
adc
sub
scas
clc
insl
cpuid
xor
int3
fistpll
xor
pushf
sbb
shlb
xor
push
dec
rep
inc
ret
call
rcll
dec
fdivrs
mov
test
mov
jg
mov
sbb
push
out
cmp
xor
pop
adc
and
sub
xchg
les
shll
xor
fldenv
icebp
jns
sub
sub
mov
adc
movsl
push
shll
adc
and
popf
sbb
neg
call
dec
cmpsl
adc
mov
sub
add
mov
jns
lock
mov
lret
popa
insb
popf
mov
push
dec
and
pop
jnp
in
cmp
jmp
test
gs
icebp
cmp
xchg
gs
int3
andb
add
in
pop
mov
shl
insl
xchg
sbb
jg
adc
push
fwait
hlt
mov
enter
mov
cs
shll
popf
xor
outsb
push
aad
imul
mov
mov
adc
cmp
cmp
mov
ficoms
nop
ljmp
arpl
aam
xor
mov
push
cmc
jmp
xchg
cmp
jno
cmp
sbb
push
repz
push
mov
les
jg
test
cmc
aam
js
rorb
xor
insb
jnp
in
fidivs
pop
mov
mov
xchg
fdivrs
add
mov
insb
cwtl
sbb
push
sti
pop
jbe
adc
push
iret
push
mov
jmp
dec
mov
imul
lret
cli
sahf
addb
lret
in
mov
test
mov
insl
movsl
ss
or
leave
xor
push
dec
cmp
popl
mov
iret
sti
gs
push
mov
dec
addr16
mov
mov
push
adc
bound
loope
cmp
sti
pop
jae
or
mov
xchg
sarb
xor
movsb
xor
xor
mov
sti
or
outsb
out
xchg
or
cmp
cmpsb
aam
int3
mov
push
pop
dec
popa
xchg
adc
rdtsc
xchg
mov
adc
movsl
and
dec
jae
adc
cltd
ljmp
cmp
dec
pop
mov
jmp
sbb
pushf
mov
lcall
clc
loope
pop
sbb
lds
or
shr
jl
inc
fimuls
mov
int3
add
add
mov
jne
in
fs
dec
dec
test
add
test
ret
jbe
fs
pop
mov
push
pop
cld
dec
mov
jns
push
fidivl
out
xchg
cli
mov
or
mov
test
jl
jge
daa
aas
mov
xor
sub
push
inc
scas
hlt
mov
orb
sub
in
xchg
lds
arpl
in
dec
or
xchg
outsl
outsb
hlt
ds
mov
mov
into
mov
fcompl
sbb
jbe
jmp
mov
shlb
inc
pop
loope
leave
out
xor
jp
lock
je
ja
push
inc
cmp
repnz
pushf
es
fucom
pop
in
nop
out
pop
add
dec
push
sbb
add
add
out
adc
mov
jl
cs
mov
stc
clc
jg
test
sbb
jne
lods
xchg
js
mov
in
mov
dec
dec
test
dec
dec
jbe
fs
ss
xchg
movsb
add
mov
cs
push
inc
mov
or
push
cmp
mov
outsb
add
into
add
push
sti
testl
popf
push
std
xchg
pop
dec
mov
call
dec
inc
fisubs
test
inc
sbb
inc
mov
ljmp
jp
loope
shlb
xchg
sbb
dec
mov
jno
pushf
or
sbb
sub
fisubs
cltd
stc
mov
adc
push
test
andl
and
and
and
aam
jle
mov
cmovle
and
iret
test
cmp
cmp
cmpb
push
fs
insl
dec
mov
lods
xlat
mov
or
in
dec
pop
popf
in
repnz
mov
fadds
aaa
adcb
cmpb
aaa
mov
pop
gs
shll
stos
out
xor
xchg
fmuls
mov
jbe
std
fistpll
cmp
push
xchg
call
lret
repnz
adc
xor
sub
ljmp
scas
adc
and
cmpsb
jb
jbe
stc
subl
xor
dec
xchg
loop
std
add
iret
sbbb
stc
lock
ret
cmp
cmp
js
xorl
xchg
xchg
rcl
mov
ror
lods
add
sub
adc
in
lahf
jbe
stos
cs
or
sub
xchg
mov
pop
stos
pop
data16
mov
in
pop
ss
adc
cmp
mov
mov
scas
pop
inc
inc
jae
cmpsl
dec
pop
pop
push
mov
xchg
jg
mov
and
xchg
les
ja
xchg
std
rorb
sbb
call
fsubrs
jp
in
orl
and
in
enter
cmp
enter
inc
andb
adc
test
cmc
mov
dec
out
mov
negl
dec
push
mov
dec
stc
pop
shll
adc
aas
cmp
shlb
mov
add
push
daa
lock
push
loop
add
cmp
xor
jno
test
pop
mov
dec
jg
rorb
adc
cmp
ja
inc
fdivrl
pushf
sahf
mov
push
in
pop
sub
cmpsb
addr16
dec
mov
dec
sti
xchg
int
sar
add
push
dec
aam
push
or
pop
test
nop
test
insl
jmp
mov
aaa
add
and
stc
addr16
mov
mov
inc
dec
sti
mov
clc
pushf
jbe
cmp
mov
in
aad
fs
lret
xor
cmp
shrl
and
in
cld
xchg
xor
dec
mov
mov
pop
stos
dec
scas
mov
vfmsubadd213ps
test
ja,pt
push
addr16
scas
xchg
dec
xchg
xor
aas
mov
lret
xchg
xchg
daa
jecxz
pop
daa
fs
and
push
lods
mov
xchg
movsl
or
pop
repnz
rorl
pop
fs
xchg
jno
mov
subl
jge
movsl
jno
mov
jnp
movsb
push
mov
in
dec
bound
adc
sti
pusha
push
ss
les
cs
mov
inc
punpckldq
mov
punpckhdq
mov
fstpl
sbb
adc
sbb
xchg
test
jecxz
sti
test
or
cmc
mov
xchg
cmpsb
adc
imul
xchg
into
fadds
call
and
cmp
in
adc
jnp
push
xchg
pusha
ja
dec
leave
jne
push
in
xchg
or
ret
mov
push
push
gs
ficoms
jmp
cmp
dec
int3
adc
or
notl
adc
aam
jae
sub
lahf
mov
stc
pushf
xor
inc
xlat
leave
es
dec
dec
mov
xor
rol
adc
add
lds
or
dec
xor
add
in
test
notb
or
out
in
rcll
daa
mov
fnstsw
xor
dec
insl
push
hlt
push
jne
mov
push
arpl
sbb
cld
jb
add
scas
sbb
push
hlt
arpl
xlat
shl
lret
bndstx
xor
bound
stc
or
test
xor
push
cmc
loope
xor
add
mov
cmp
les
inc
popa
cmp
les
pop
add
loopne
subb
mov
inc
jge
mov
lds
mov
jns
or
imul
popl
push
lock
and
lock
xchg
sbb
out
adcb
dec
add
fcmovnb
leave
jbe
jb
mov
ret
sbb
sbbb
jl
xor
cld
xor
mov
mov
xchg
ja
push
push
pusha
ss
xor
out
addr16
call
push
fs
dec
repnz
insl
fnsave
fildll
mov
into
dec
and
bound
sbb
fsubr
cmp
fimull
push
mov
mov
stos
shl
outsb
pop
mov
rorb
ds
xchg
or
jp
pop
insb
daa
xchg
cs
sbbl
popf
out
and
out
lret
inc
daa
inc
jle
mov
in
cli
mov
mov
mov
xor
movsb
rorb
cmp
out
mov
ret
mov
test
add
add
sbb
or
inc
xor
sub
insb
or
jecxz
clc
int
leave
lret
add
lea
cmp
jmp
ret
adc
pop
mov
push
je
insl
movsl
lcall
clc
xchg
mov
lcall
pusha
xchg
leave
dec
push
sbb
add
retw
mov
jne
jb
inc
shll
cmpsb
xchg
sbb
lds
iret
mov
or
inc
adc
xchg
mov
loop
cmpsl
cwtl
not
jge
dec
scas
pop
push
popf
lods
hlt
sub
jb
add
jecxz
fs
cmp
dec
lods
les
and
ficompl
sub
popf
sarl
aas
das
pop
inc
push
js
in
lods
pop
sbb
dec
imul
jae
push
dec
cltd
outsb
ret
outsl
out
add
sbb
mov
out
imul
xor
repnz
loope
sub
je
ljmp
into
ja
pop
mov
sbb
xchg
inc
ret
imull
xor
jecxz
stc
gs
sub
cmp
pop
leave
pop
ds
xchg
outsl
mov
sub
dec
inc
push
push
xchg
mov
loope
arpl
add
lahf
out
jecxz
mov
and
loopne
or
in
push
outsl
ljmp
add
dec
lds
dec
shr
iret
cmpsb
xor
push
mov
xor
les
inc
sub
or
jge
stos
daa
sar
imul
inc
inc
xchg
lock
xor
fwait
jo
xor
jb
rol
fstpl
call
jae
lcall
sub
push
pop
dec
aam
push
mov
mov
sub
scas
jae
enter
mov
inc
loop
aaa
and
rol
les
nop
cmp
inc
pushf
repz
das
bound
sub
ja
imul
xorb
out
add
scas
popa
mov
pop
in
mov
jecxz
icebp
aas
jg
pop
jge
outsl
push
mov
test
jg
lock
int3
mov
mov
dec
jecxz
jle
pop
int3
xorb
movsl
sbb
or
mulb
cmp
mov
and
xchg
lret
lds
inc
mov
cld
test
popa
cltd
adc
xor
push
push
and
bound
sbb
scas
adc
jbe
or
ljmp
lds
jns
sahf
test
add
push
mov
xchg
xor
fldcw
pop
pop
fidivrl
loopne
mov
lods
adc
rclb
les
repnz
or
ja
enter
mov
pop
call
mov
mov
jecxz
inc
scas
xlat
jae
daa
or
cmp
mov
adc
lret
jge
mov
jecxz
push
ret
sbb
leave
or
ds
fldl
cmp
imul
cmp
dec
rcrl
stos
mov
cmp
es
movsl
into
int
adc
inc
aad
popf
mov
inc
add
lods
jle
dec
pop
mov
and
sbb
pop
cmp
or
cs
cmp
loopne
std
jmp
enter
cmpsl
movsb
mov
aad
fcmovbe
scas
imull
or
xchg
and
scas
pop
out
dec
dec
ss
aas
nop
jmp
sub
mov
in
in
adc
int3
pop
inc
push
fisubl
pop
jecxz
lahf
out
fsubrl
or
sar
ret
popf
js
andl
mov
xor
int
or
mov
and
lods
divl
mov
daa
popf
cmp
imul
scas
push
pop
or
cmc
adc
push
sti
mov
out
std
or
ljmp
arpl
xchg
sub
jnp
jge
xchg
ret
jns
sbb
pop
loope
jl
xor
fisttpll
test
or
out
mov
repnz
or
pop
xor
mov
dec
movsl
xor
add
xchg
loope
mov
and
dec
pop
movb
pop
add
es
inc
push
mov
mov
cmpsb
mov
jns
push
ret
lods
std
xlat
mov
xchg
test
loope
adc
mov
jne
and
xor
mov
or
cmp
gs
movsb
sub
ficomps
or
mov
sub
sbb
cltd
jp
ficoml
mov
jae
loopne
fdivl
popf
lcall
sub
fnstcw
inc
jnp
dec
stc
sti
pop
test
adc
out
fldl
rcll
iret
lret
stos
outsl
cmp
cmpsb
lods
xchg
xchg
pop
into
xor
xchg
into
fcoms
cli
leave
xor
jb
mov
mov
fistps
mov
cmp
imull
stos
or
ja
cwtl
or
jbe
scas
mov
mov
jne
je
jmp
bnd
int
xchg
or
xchg
sbb
sbb
push
adc
imul
xlat
mov
lods
dec
loope
mov
dec
fs
sti
mov
cmp
lods
mov
push
outsb
pop
pop
repnz
or
mov
push
inc
sub
add
push
mov
and
lcall
repz
adc
pop
or
pusha
inc
outsb
jnp
inc
mov
xor
adc
or
call
adc
push
lret
shlb
lret
or
mov
mov
mov
test
xchg
xchg
sub
rcll
std
aaa
es
stos
int3
fstpl
ret
add
mov
dec
in
repnz
popf
pop
clc
add
gs
xchg
xor
test
daa
cld
xorb
mov
lret
aam
sub
inc
fildll
loop
aam
adc
out
push
les
out
mov
loop
push
pop
movsl
dec
pop
cltd
inc
in
leave
in
ret
or
adc
adcl
lea
sub
leave
cmpsl
xor
ss
fiadds
cmc
jae
push
sets
jnp
test
mov
testl
movsb
arpl
aaa
inc
push
jl
popa
cs
sub
add
or
push
insb
dec
dec
lock
and
inc
inc
jbe
hlt
movsl
xchg
mov
pusha
adc
pop
sar
add
push
jae
mov
xchg
mov
sti
and
push
int
xchg
jecxz
push
shl
mov
popf
out
mov
scas
adc
dec
pop
push
cmc
fldt
arpl
fbstp
jmp
cmp
jl
iret
add
shl
mov
mov
xchg
adc
and
adcl
outsb
mov
psubd
lds
cmpsl
mov
jno
sbb
cmovo
daa
imul
add
popa
cmp
or
cld
xchg
and
xchg
insl
mov
xchg
pop
pop
enter
rolb
and
imul
in
xchg
xchg
push
mov
lret
xlat
inc
jge
ss
inc
aad
jg
mov
add
mov
scas
aam
mov
mov
mov
cwtl
lds
mov
mov
fistpll
mov
mov
add
mov
dec
repnz
pop
sti
aaa
push
mov
inc
lea
inc
mov
nop
mov
xor
xchg
arpl
rcrl
and
popa
adc
jge
lock
popf
idivl
sbb
movsb
insb
movsl
adc
mov
mov
and
jns
pop
popf
test
push
je
push
leave
or
sbb
mov
push
subb
add
in
repz
sub
or
and
clc
popf
sbb
repnz
clc
mov
inc
sahf
test
imul
pop
fsubl
ja
ds
inc
adc
sbb
mov
pop
fnstcw
push
mov
mov
mov
jbe
ss
sti
and
sub
sbb
insb
bound
popf
sbb
loope
xchg
enter
leave
push
and
jp
daa
or
out
xorl
iret
inc
repz
das
test
push
or
clc
rorb
rcrb
lcall
cmp
stos
outsl
push
jle
mov
sbb
xchg
xchg
jbe
out
jno
in
fwait
cmp
mov
pop
sub
pop
or
dec
repz
sbbb
pop
out
push
or
mov
rcrl
mov
cltd
add
mov
inc
xchg
mov
add
mov
sub
sahf
mov
add
lods
adc
iret
rcrl
movsl
push
cmpl
cs
inc
and
push
adc
lret
xchg
aam
xor
stos
aaa
cmpsb
test
cmp
mov
jg
sub
mov
rcr
or
mov
dec
push
daa
xchg
mov
data16
movsb
roll
mov
rcrl
adc
mov
dec
rcll
mov
push
icebp
and
lret
or
mul
push
xchg
push
and
hlt
ja
mov
mov
pop
sahf
in
pop
mov
mov
adc
hlt
sbbb
es
add
add
cmp
push
fidivl
mov
push
sbb
xor
sbb
les
xchg
out
xor
jle
xor
aad
xchg
shr
xchg
mov
call
pop
push
jns
add
test
loop
imul
mov
lret
xor
or
mov
loop
mov
sti
aas
gs
ss
and
ja
and
jbe
adc
pop
jo
mov
hlt
xor
mov
mov
xlat
pop
dec
iret
nop
push
xchg
fidivs
lret
mov
mov
dec
js
rcll
test
insb
rorl
out
or
mov
psubsw
stos
or
sbb
aam
add
addr16
adcl
cmpsb
inc
jnp
add
lret
inc
adc
or
cmpsb
jge
test
sarb
xor
cmpsb
fst
cmpb
cmp
lods
mov
jae
mov
inc
lret
mov
imul
jmp
adc
push
dec
mov
fucom
shlb
xchg
sbb
outsb
and
and
call
push
mov
adc
mov
je
repz
and
and
decl
add
or
jp
js
cmpsl
mov
xor
add
aam
mov
idivb
add
mov
xor
sbb
je
jge
mov
jae
lods
or
icebp
push
js
rcrb
stc
loope
rorb
movsl
push
mov
pop
loope
or
arpl
or
ljmp
rolb
in
cmc
jp
and
int3
lods
add
jle
test
xchg
movsb
inc
push
or
lea
ljmp
movsb
adc
out
add
cmp
adc
inc
nop
lock
inc
aas
cmp
push
shlb
out
cmp
xchg
outsl
push
jno
inc
mov
enter
es
mov
ss
and
pop
xor
pop
cld
or
shlb
cmc
out
in
sub
add
mov
dec
rcrl
mov
cmp
mov
inc
out
sbb
out
jnp
call
sbb
add
xchg
pop
mov
movhps
shll
jo
push
test
xor
xchg
jns
add
clc
pusha
push
jnp
sbb
jns
xor
add
mov
sbb
fmulp
mov
icebp
xor
insb
cmc
inc
mov
je
jae
pop
push
pop
cld
or
test
xchg
pop
push
rclb
inc
dec
iret
sbbb
sub
sub
cmp
repz
arpl
push
icebp
xchg
psubusb
movsl
stos
mov
ljmp
cmp
js
inc
loope
aam
cmpl
mov
mov
ja
cmc
and
sahf
insl
push
lahf
jmp
outsl
mov
cmp
pop
bound
pusha
dec
mov
cld
scas
inc
cmp
inc
jno
out
aaa
sub
jb
mov
mov
cmp
xchg
repnz
int
aas
mov
mov
aas
push
mov
popf
testb
xchg
mov
ja
hlt
insb
mov
mov
push
loope
negl
hlt
pop
sbb
lret
mov
mov
dec
xchg
jno
adc
jge
ljmp
sahf
and
divb
int3
push
mov
ss
jns
mov
cmp
mov
or
cmpsb
xchg
lea
jo
xchg
push
sti
push
push
imul
daa
iret
jns
adc
sbb
push
ret
out
andl
sub
dec
es
mov
push
int3
lods
mov
lcall
test
aaa
das
fcoml
push
ljmp
adc
xchg
sar
or
push
les
mov
cmc
dec
loop
pusha
jne
jbe
pop
test
mov
sub
mov
out
dec
sub
pop
popa
rorl
lea
orl
sub
addr16
or
out
daa
mov
add
mov
and
push
pop
insl
psubw
aaa
sbb
dec
push
mov
push
hlt
fs
lcall
inc
xchg
add
mov
push
dec
outsb
pop
push
mov
es
insl
rclb
mov
cmp
das
jbe
push
push
repnz
loopne
lcall
inc
inc
fs
inc
jle
in
cmp
ljmp
mov
pop
fmull
and
pop
imul
popa
in
ret
mov
xchg
sub
sub
nop
push
cld
inc
cmp
adc
test
mov
out
mov
inc
movsl
bound
mov
mov
lahf
dec
lahf
mov
out
mov
xchg
inc
call
das
aam
mov
xor
dec
and
pop
push
lahf
sti
mov
ficompl
roll
pop
ja
sti
out
sbb
out
pop
arpl
adc
fnstsw
cmpsl
mov
push
cmp
into
stc
cwtl
mov
outsb
sbb
cmp
addr16
adc
xchg
insb
js
int3
cmp
loop
imul
pop
and
insl
jecxz
aaa
inc
aam
add
into
pop
pop
in
movsb
jbe
js
cmp
ret
pop
jae
cmp
ljmp
adc
pop
add
daa
lret
pusha
and
jb
jge
sub
mov
hlt
fstpl
inc
or
mov
mov
pop
ljmp
add
xor
sub
lahf
outsl
in
stos
fistps
cs
int3
inc
ret
push
daa
rorl
in
out
lcall
inc
mov
mov
xlat
movsb
mov
xchg
sub
rcrb
loopne
push
push
cld
pusha
sbb
mov
sub
jl
push
push
outsl
enter
insl
mov
scas
cmp
in
mov
aaa
push
cmp
cltd
cltd
divl
sahf
out
lods
popf
mov
ret
pop
add
test
sub
pusha
mov
jae
leave
or
cmpsl
mov
scas
push
fwait
repz
imul
aad
or
sub
mov
mov
rclb
xor
mov
fisubs
mov
sbb
test
inc
pop
add
loop
pop
sbb
mulb
call
inc
inc
mov
dec
insb
add
je
jne
pop
mov
fisttps
enter
sti
adc
xchg
inc
bound
stos
push
mov
cltd
pop
pop
mov
fwait
test
jg
and
dec
aad
or
popf
movsl
cmp
arpl
out
jno
sbb
inc
adc
imul
xor
dec
data16
inc
nop
jnp
cwtl
dec
dec
jle
or
aas
mov
out
push
and
sub
in
je
pop
inc
sub
adc
pop
insl
cwtl
jbe
outsl
mov
pop
jg
addr16
pop
mov
in
jo
mov
adc
pop
mov
and
pusha
lods
lret
jnp
js
sub
cmp
das
imul
fisttpl
mov
adc
or
js
aas
in
xchg
dec
push
les
scas
movsb
mov
xchg
ds
sti
mov
push
mov
dec
mov
sahf
int
inc
adc
sbb
mov
sbb
jbe
daa
and
pop
dec
jno
mul
jb
jle
pop
inc
jo
jae
insb
pop
out
out
loop
in
add
or
pop
bound
emms
inc
cmp
out
jne
add
loope
push
xchg
mov
push
inc
popa
mov
xchg
lret
ljmp
mov
adc
arpl
adc
pop
xchg
bnd
in
add
jle
ljmp
out
jmp
das
dec
mov
dec
mov
add
sbb
ret
push
xchg
pop
xor
or
add
sub
testb
pop
ss
mov
mov
test
shll
add
pushf
fistps
push
bound
test
add
outsb
adc
or
push
mov
loop
mov
std
add
repnz
mov
xrelease
and
ficoms
or
jae
jg
das
ret
pop
ljmp
adc
and
incb
or
mov
sti
jnp
outsl
fs
xor
mov
adcl
scas
mov
mov
adc
dec
mov
sub
dec
add
jo
adc
dec
fst
enter
loopne
scas
sub
aaa
pop
inc
cmp
addr16
inc
lods
cld
aam
mov
or
inc
imul
push
xor
sbb
in
jecxz
cld
fwait
popf
mov
or
and
xchg
push
fs
pop
imul
mov
fnstcw
bound
xchg
sub
cmp
cmp
cmc
fwait
nop
fildll
lret
adc
mov
sub
mov
setg
or
mov
dec
mov
loop
dec
sbb
push
inc
cmp
lret
out
int
and
test
inc
cmpsl
ret
aam
and
aaa
ss
loope
hlt
jle
jp
sub
adc
rorl
out
rcrl
ja
add
outsl
mov
xchg
mov
fstpl
or
fmuls
or
leave
inc
push
jno
xchg
jge
outsl
adc
stos
mov
sub
push
add
push
ret
in
sbb
mov
mov
and
sbb
adc
clc
xchg
push
inc
xchg
push
jmp
push
sub
mov
loope
dec
ss
lods
daa
loopne
in
push
adc
mov
les
jne
sub
dec
xchg
xchg
je
sub
cmp
loop,pt
push
dec
pusha
hlt
xor
pop
aas
xchg
lahf
shl
pushl
pop
fsubrl
cmp
mov
mov
mulb
jnp
mov
sub
mov
inc
mov
inc
adc
cmp
mov
or
xchg
sbb
in
insl
int3
pop
fwait
dec
xchg
pop
inc
test
fs
test
shll
lcall
sahf
push
out
popf
xor
adc
movsb
hlt
or
sbb
jg
fcmove
add
cmc
cmpsb
cmp
cmpsb
adc
xor
rol
into
les
or
leave
mov
dec
outsb
mov
leave
dec
dec
push
sub
imul
mov
xchg
out
and
and
push
and
jge
cmc
mov
mov
out
out
or
push
mov
dec
int
fnstcw
in
mov
push
push
cwtl
aaa
sub
mov
sub
pushf
sarl
jg
cli
fildll
push
xor
scas
or
je
cmp
loopne
sbbl
je
shlb
addr16
out
xchg
mov
and
pop
mov
test
repz
adc
in
xor
mov
sbb
lahf
adc
adc
sbb
jno
mov
mov
fstl
and
adc
sbb
push
sub
pop
dec
jno
pop
dec
loopne
in
scas
xor
pop
inc
bound
dec
or
cmpsb
out
stos
mov
sub
sbbb
sbb
imul
inc
roll
sbb
sbb
cmpsl
push
sbb
push
cld
jno
sbbb
and
inc
lret
dec
adc
jnp
mov
sub
sub
popa
arpl
pop
xchg
sub
stos
data16
out
jb
and
cwtl
sbb
fdivrl
mov
mov
loop
mov
insb
adc
cmp
test
sbb
or
xor
lret
inc
add
xor
mov
inc
sarl
popa
add
mov
out
cli
icebp
push
adc
push
sar
cmp
cmpsb
cmpsl
fdivr
stc
pop
outsb
test
aad
or
outsb
dec
dec
push
or
and
xchg
in
sub
xor
dec
jae
sub
dec
popf
cmp
in
jg
mov
mov
sub
test
mov
ret
cli
test
test
pop
rcrb
aad
aam
ret
push
xor
loope
dec
inc
mov
cs
sbb
xor
lods
xchg
test
inc
das
cmp
or
fwait
outsl
cmp
into
loop
dec
mov
jnp
mov
iret
insb
xor
mov
mov
cmp
cli
pop
xor
inc
fcmove
mov
sub
and
daa
dec
dec
outsb
and
mov
mov
jae
mov
mov
cmp
cmpl
xchg
sub
xchg
cld
adc
xchg
inc
dec
adc
jecxz
es
jecxz
pushf
popa
sbb
pushf
cmp
outsb
mov
inc
je
addr16
push
push
dec
xor
push
pushf
xchg
test
xor
mov
lahf
dec
push
xchg
inc
cmc
lods
cmpsl
inc
sub
cmpsl
sub
lods
js
push
dec
data16
sbb
in
mov
pop
mov
sbb
jl
cmp
decl
add
sbb
mov
jge
sbb
mov
mov
test
test
add
fs
inc
sbb
inc
testl
out
scas
inc
jle
mov
fsubl
pop
sub
hlt
rcrb
aam
js
imul
mov
mov
add
fcmovnbe
xor
pop
icebp
and
cs
lods
and
mov
ret
out
popf
out
mov
pop
sti
es
mov
aam
mov
jo
jmp
add
mov
leave
lock
fnsave
repnz
xchg
mov
mov
out
ret
clc
imulw
movsl
mull
add
out
xlat
and
inc
sub
push
cs
xor
jb
fs
mov
push
iret
add
mov
inc
push
sub
popf
or
add
cmp
sbb
cmpb
fstpl
mov
inc
pop
mov
and
cli
mov
insl
loopne
xor
cmp
scas
popf
shlb
mulb
dec
sub
dec
cmpsl
mov
xlat
adc
push
pop
push
stc
out
adc
and
and
inc
mov
sbb
sbb
test
xor
xor
jecxz
js
push
call
ret
push
sbb
pop
adc
dec
push
out
cmc
in
insb
dec
push
push
mov
and
and
push
call
scas
and
cmp
push
pop
leave
negl
lahf
mov
jo
das
cs
lods
or
add
cmp
pop
jp
into
jbe
mov
cmpsb
xchg
stos
and
imul
jge
jne
fstps
jp
add
pop
loop
and
inc
add
lahf
leave
mov
test
sbb
not
ss
or
pop
cmc
pop
jbe
or
mov
inc
mov
ljmp
enter
adc
pop
cmp
ljmp
lahf
push
test
repz
mov
jbe
inc
cld
inc
sti
aas
rclb
and
mov
dec
scas
arpl
aam
leave
sahf
mov
out
adc
push
or
mov
out
stos
dec
mov
xor
lret
push
in
imul
inc
sti
mov
aam
mov
cli
or
push
pop
xchg
fadds
pop
push
test
out
or
int3
sbb
dec
lea
rclb
andl
dec
int
pand
lock
into
into
and
inc
adc
mov
mov
sub
mov
and
push
sbb
int3
subl
pop
xchg
shll
add
add
and
cmp
or
fnsave
jne
lods
out
dec
mov
dec
int3
in
dec
mov
push
sbbb
fwait
int3
adcb
sub
inc
leave
shll
pop
and
out
mov
adc
insb
inc
addr16
hlt
in
enter
xchg
sbb
into
xor
into
outsl
fidivrl
out
mov
es
jo
cs
xchg
cmc
leave
cmp
add
adcl
mov
aas
leave
mov
pop
loope
adc
push
pop
add
icebp
mov
psubusb
jae
jecxz
mov
sub
mov
xchg
mov
xor
data16
outsl
les
test
shl
pushf
inc
xor
add
aam
dec
cwtl
call
pop
jge
push
aaa
les
dec
cmp
xor
negb
sbb
mov
rorb
pop
mov
xor
in
inc
push
sub
pop
sbb
adc
aas
pop
push
cltd
add
mov
pop
stc
mov
add
aad
inc
pop
inc
dec
lods
push
test
repz
pop
and
xchg
and
hlt
jecxz
pushf
jno
add
cmp
daa
push
fistps
jbe
pushf
mov
inc
sub
aaa
aas
data16
xchg
jno
push
pop
pusha
call
pop
xchg
inc
mov
enter
lret
stos
imul
movsb
push
adc
dec
sarl
sub
fstp
lret
adc
mov
fistps
jns
lock
sbb
and
inc
test
sbb
imul
sub
or
xlat
wrmsr
enter
fcoml
adc
xchg
clc
lret
xorb
cmp
sbb
pop
xchg
lret
sub
fs
xchg
call
sbb
mov
mov
cwtl
leave
inc
je
sbb
cwtl
or
icebp
jle
mov
mov
dec
fcomps
pop
rol
idivb
insl
divl
add
xchg
pop
dec
mov
push
cvtps2pi
rorb
sub
das
sbbl
and
inc
fisttpll
or
loopne
es
fnsave
lods
andb
mov
pop
push
repz
add
push
shlb
mov
add
inc
fs
mov
gs
sub
loop
pusha
push
data16
and
pop
addr16
cmpsb
ja
lods
or
ret
test
into
test
or
lahf
nop
sub
test
inc
and
mov
and
adc
aas
jg
push
stc
int3
xchg
pop
shl
pop
vmovdqa
aam
gs
lock
xchg
jg
dec
imul
add
cmpsb
xchg
scas
dec
xor
xchg
scas
test
or
lock
adc
mov
push
cmp
movsl
adcb
repnz
aas
pop
enter
rolb
out
cmp
xchg
inc
out
inc
lcall
jbe,pn
or
xor
fadd
gs
je
mov
sahf
inc
cmp
movsb
sub
sti
mov
add
jp
shlb
push
out
mov
call
cmp
fistpl
out
and
xor
push
in
add
test
jne
xchg
dec
mov
mov
mov
sahf
or
jae
mov
xchg
pusha
fdivrp
adc
mov
and
inc
xchg
xchg
and
xchg
mov
lods
int
jbe
pop
loope
xchg
xor
push
add
push
mov
addr16
std
outsl
jp
xchg
adc
nop
ja
sarl
pop
test
push
mov
inc
test
ss
mov
cmc
fidivrl
lods
cmp
add
push
out
sbb
call
outsl
mov
enter
addr16
incl
in
lea
push
cmp
and
stos
dec
cmc
sbb
out
in
cmpb
mov
fsubrs
push
loopne
fcoms
faddl
ja
sub
daa
not
cmc
adc
push
pop
pop
mov
dec
popf
je
cld
sub
pop
or
loopne
cmp
mov
packsswb
scas
xlat
mov
mov
push
ret
cmpsl
push
or
addr16
call
sub
sub
lea
xchg
dec
fiaddl
xchg
sbb
movsl
jecxz
pop
or
popf
shrb
fcmovne
mov
sbb
add
xor
xor
in
rclb
pop
cli
pop
outsl
stos
sbb
cmp
mov
cld
push
push
jg
out
cli
add
mov
adc
mov
filds
and
sar
or
in
je
ss
cmp
in
cmp
sub
pop
mov
jg
adc
adc
adc
arpl
jmp
add
sti
insb
jno
push
inc
xchg
cmpsl
and
adc
lret
fs
push
fdivrl
gs
lret
std
out
insb
mov
idivl
jae
mov
cmp
add
lret
lods
popa
mov
push
push
push
add
sbb
icebp
push
aas
xchg
jle
adc
xorb
mov
test
inc
xchg
add
dec
dec
shll
lea
xchg
arpl
xor
inc
and
jg
mov
xor
insb
dec
test
iret
inc
adc
cmp
orl
mov
mov
bound
lods
fldcw
in
sub
adc
loopne
lock
push
stos
push
jmp
cli
imul
hlt
mov
cs
pop
xchg
add
add
adc
pop
push
les
dec
sti
sbb
nop
lahf
or
inc
cmp
push
xlat
jno
cmp
lcall
pop
loope
das
cmpsb
jo
xchg
lods
jmp
push
mov
call
adc
mov
push
dec
aad
add
mov
std
sbbl
xchg
test
jae
dec
cld
mov
out
shl
push
lods
sub
jecxz
ja
popf
push
rcrb
lods
test
cmpsb
dec
icebp
mov
jb
ficoml
xchg
fdivrs
xor
imul
jns
aam
mov
sub
fistps
les
sub
enter
fwait
mov
into
icebp
lcall
imul
mov
sbb
or
xchg
jo
or
pop
loope
adc
int3
xchg
lock
jmp
aad
sub
js
push
pop
or
jp
gs
loopne
out
das
into
sub
mov
mov
es
addr16
sub
mov
popf
loop
and
push
sti
out
bound
inc
out
jo
dec
adcb
inc
inc
cmp
es
out
int3
jno
dec
dec
shrb
aaa
lods
int3
insl
cmp
push
jbe
subb
lods
je
mov
push
mov
push
and
mov
leave
mov
push
arpl
sub
lcall
out
adc
or
dec
enter
mov
rcr
xchg
and
cmc
cld
mov
sub
test
sbb
or
pop
test
jns
cmp
je
push
sbb
lcall
inc
out
xorl
dec
or
stos
dec
push
inc
fisttpll
jp
mov
sub
ret
jbe
icebp
jno
mov
jmp
sti
push
mov
add
sbb
jae
xor
or
pop
repz
fmul
cli
cmp
movb
data16
add
sbbl
fdivs
dec
sub
mov
fidivs
sub
sub
rorl
pusha
in
loop
sbb
lret
jnp
jns
outsb
mov
test
cld
mov
in
cli
addr16
xor
pop
and
sbb
jecxz
ja
ds
decl
xchg
mov
inc
mov
inc
push
add
inc
or
add
dec
adc
jge
stos
xor
push
inc
aas
add
sbb
pop
xor
xchg
les
stos
xchg
test
lock
stos
rclb
daa
jne
arpl
lods
adc
fildll
mov
jb
mov
push
gs
lods
xchg
dec
mov
and
dec
push
pop
out
dec
and
xchg
mull
lods
xchg
lcall
pop
push
and
outsl
and
js
and
rclb
repnz
and
and
fcmovnu
rcr
rorl
aas
cmpsl
adc
inc
pop
inc
mov
and
fwait
andb
je
xchg
dec
mov
push
nop
xchg
outsl
xor
xchg
mov
out
mov
repnz
fs
fistl
inc
pop
jo
xor
lods
add
mov
cmp
stos
add
and
imul
out
jno
cmp
mov
movsl
xchg
adc
bound
addr16
fiaddl
xchg
or
adc
add
sbb
ss
mov
rcll
insb
out
nop
pop
std
push
dec
add
inc
mov
inc
jg
sub
mov
push
daa
test
outsl
test
jno
mov
icebp
xchg
xchg
fsubrs
imul
les
xlat
movsl
in
add
add
dec
xchg
xor
divb
ja
and
inc
pop
pop
mov
in
sbb
and
in
out
fistps
int3
sbb
fwait
lret
call
fdiv
out
adc
bound
dec
les
pop
adc
add
xchg
aas
push
mov
lock
mov
inc
push
and
xor
nop
mov
sub
lea
outsl
pop
jmp
stc
xor
stos
push
in
cmp
minps
jnp
push
lods
call
or
push
adc
jns
hlt
mov
or
imul
or
push
js
icebp
ss
push
xchg
repnz
add
jg
cmpsb
mov
inc
or
cmp
xchg
mov
or
dec
dec
imul
fldcw
roll
aaa
inc
loope
mov
iret
dec
push
jge
jle
dec
fld
notb
xchg
inc
cmp
sbb
insl
je
fstpl
loopne
or
push
adc
cmpb
imul
aad
inc
scas
push
imul
push
mov
lret
clc
xchg
out
add
sahf
mov
cmp
xchg
fwait
js
roll
lods
hlt
jp
lea
pop
int3
mov
jmp
fldt
std
lahf
and
dec
push
jg
je
dec
jmp
loope
cmpsl
dec
or
xchg
ss
aas
in
or
sbb
and
leave
mov
aaa
sub
push
pop
inc
out
int3
lods
push
scas
mov
rolb
sub
cmp
lods
rorl
push
imul
or
mov
cltd
jne
je
sbb
lods
in
flds
test
es
ret
mov
adc
push
mov
cltd
cmpsl
sub
notb
bnd
repnz
pushl
push
popa
movswl
insl
mov
add
push
mov
or
jne
imul
and
add
lahf
es
push
mov
inc
or
xor
inc
inc
ss
dec
lahf
mov
sbb
fs
ja
push
xchg
add
icebp
xchg
test
sub
dec
mov
lea
inc
pop
mov
add
sbb
xor
or
aas
scas
adc
hlt
cmp
pop
jle
sub
jl
push
cmpsl
lret
mov
sbb
xchg
in
je
xchg
lock
pop
cwtl
push
jmp
aas
mov
adc
xchg
pop
xor
insb
rolb
scas
cs
mov
hlt
push
mov
arpl
out
imul
cmp
xor
lock
mov
nop
repnz
or
add
imul
je
add
aaa
std
lret
mov
and
mov
xor
mov
push
cltd
movsl
xor
lds
int3
dec
je
daa
add
xor
sub
push
cmpsl
mov
stos
push
es
dec
xchg
out
shlb
sbb
push
fisttpl
mov
xchg
in
lcall
pusha
add
aam
fsts
inc
push
push
xor
xor
mov
mov
leave
pop
rolb
or
mov
mov
not
jmp
pop
inc
mov
sbbb
rcr
and
xor
pop
mov
mov
push
aas
daa
bound
addr16
or
ficoml
xchg
jecxz
ljmp
mov
sbb
in
cmpb
pop
arpl
push
jp
adc
shlb
leave
das
jmp
out
cmp
jmp
add
das
insb
xlat
daa
cs
inc
xorl
dec
inc
sub
jp
push
adc
sub
bound
pop
jnp
sbb
call
or
movsl
sbb
outsb
stos
adc
pop
fwait
loop
jnp
fstpt
xor
enter
mov
out
and
add
lds
mov
fcmovnbe
movsl
xchg
cmp
xor
mov
adc
pop
imul
outsb
test
jecxz
loop
xchg
movsb
mov
add
and
insb
ss
cmpsb
shll
fstl
mov
jno
xor
inc
out
bnd
and
shlb
call
std
jle
add
lods
movsb
scas
and
dec
out
jno
push
mov
mov
sbb
push
pushw
or
lret
arpl
clc
es
lods
pusha
xchg
jmp
testb
pop
dec
xchg
inc
clc
sub
or
stos
lret
movsl
in
push
dec
ss
dec
push
adc
es
lahf
mov
dec
sbb
arpl
dec
sahf
sahf
fisttpl
dec
push
lret
lods
rcll
ljmp
aad
dec
mov
popf
jae
sbb
jge
sub
sub
sub
not
lods
and
fistl
scas
aad
jmp
fdivrl
mov
mov
push
repnz
inc
jo
cmp
push
add
fistpll
out
movl
std
popf
dec
jne
out
jl
fimuls
sbb
addr16
retw
cs
iret
pop
pop
jp
fldenv
loopne
ljmp
mov
mov
and
inc
xchg
js
int
sbb
push
insl
mov
xchg
loop
xchg
xchg
mov
inc
mov
fwait
inc
clc
mov
mov
outsb
enter
and
fld
jb
mov
outsl
xor
push
push
sbb
shl
and
roll
xor
stos
or
jno
and
jnp
cwtl
stc
mov
arpl
push
xchg
sbb
pop
cmp
imul
sub
push
xchg
and
adc
pop
jbe
jge
lret
in
lret
jae
dec
mov
add
icebp
jecxz
sbb
or
and
lahf
jo
inc
sbb
xchg
fwait
or
cmp
push
cmp
outsb
rorl
inc
out
jno
stos
mov
xor
mov
xor
adc
lock
hlt
xor
cmc
jo
fildll
shlb
fs
lahf
pop
insb
sbb
pop
aam
fstpt
daa
fadds
pop
mov
push
or
in
xlat
or
push
sbb
jmp
in
in
loop
outsl
pushf
sbbl
mov
enter
fwait
imul
test
xchg
sbb
lock
mov
sarl
int
xor
out
xchg
xchg
push
sbb
mov
adc
xor
addb
stos
lahf
mov
fcoml
sbb
ds
dec
call
and
xor
bound
fwait
sub
daa
or
outsl
enter
push
fsubr
xor
xchg
dec
out
negl
jg,pn
xor
test
lret
pop
lods
xchg
je
adc
popa
mov
inc
daa
lcall
or
xor
inc
fstps
mov
ret
je
adc
clc
fwait
in
or
repz
cmp
sub
push
and
jb
sub
inc
dec
jle
push
xchg
fsubs
js
ja
push
dec
incb
loope
ja
aam
adc
jae
add
enter
in
in
cwtl
ja
cmp
mov
push
jo
push
xor
or
lcall
xor
js
add
lret
push
dec
push
and
inc
sti
push
daa
jo
dec
cmp
dec
dec
add
cmp
cmpl
jne
cmp
dec
sub
push
outsl
xchg
pop
jmp
mov
out
sbb
mov
dec
pop
scas
and
lahf
inc
bound
add
push
aaa
mov
incb
xchg
dec
in
mov
int
cs
inc
jbe
icebp
sbb
inc
mov
dec
and
js
or
enter
scas
imul
xor
std
in
or
arpl
outsl
xchg
arpl
xchg
mov
es
hlt
adc
jae
stos
lds
jl
mov
stc
xor
imulb
shll
test
sbb
in
stc
sub
rcll
add
movsb
push
mov
pop
dec
jp
negb
add
into
mov
adc
dec
jle
mov
jge
cmp
scas
leave
mov
loope
mov
int3
ljmp
imul
jl
cmc
int3
mov
mov
add
aam
pop
jmp
outsb
fsubl
add
adc
cmp
cwtl
cmp
mov
mov
sub
outsl
mov
cmp
fidivrl
les
and
push
push
adc
mov
xchg
in
insb
pop
and
push
or
call
mov
adc
pushf
cltd
sbb
rcrl
lret
sub
xorb
in
outsb
sti
add
adc
fwait
push
ja
fwait
aas
das
add
in
cld
stc
sahf
sbb
jle
enter
xor
push
fdivrs
out
mov
mov
adc
movsl
movsl
push
cmp
stc
call
ds
push
sub
int3
aas
ds
jle
cs
xlat
roll
shrl
cmc
pop
shll
mov
pop
ret
push
jge
cmp
daa
jle
hlt
xchg
and
mov
jg
push
shr
into
mov
xchg
xor
pop
idivb
cmc
pop
sub
out
out
out
sbb
sahf
jno
lret
cmp
iret
cmp
mov
or
xlat
les
repz
or
stc
push
lcall
sub
popf
push
repnz
dec
or
mov
or
ja
xor
not
pusha
xor
orb
pop
loope
call
or
das
lret
push
jge
xchg
sbb
mov
out
adc
scas
lret
jae
les
stos
ljmp
jns
incl
nop
push
inc
in
out
shrl
jae
mov
adc
out
loop
hlt
movl
pop
and
mov
test
push
sub
insl
or
xchg
or
stc
sub
lds
dec
pop
loopne
lods
cmp
pop
add
out
imul
xchg
int3
ss
dec
imul
cmp
xor
push
push
adc
mov
or
xchg
cmp
pop
xchg
jmp
xor
xchg
insl
mov
bound
repz
pop
xor
add
scas
push
ja
xchg
bound
sbb
mov
xor
mov
popf
mov
push
push
mov
xchg
dec
call
mov
inc
das
mov
cmpsl
xchg
adc
jo
ret
call
pop
adc
xor
pmullw
jmp
jns
jno
jo
jmp
inc
aas
or
adc
mov
inc
repnz
nop
pop
adc
push
mov
and
into
pop
cmp
cmp
adc
and
cli
sbb
inc
stos
iret
or
out
sub
popa
aam
cs
in
std
loopne
cmp
out
lcall
loopne
add
fdivl
loopne
xchg
std
insl
ret
notb
scas
pop
adcb
push
xchg
mov
jmp
jle
lock
jo
push
stos
fwait
xor
cmc
jno
stos
fildll
cltd
ret
ja
fldenv
ret
push
std
stos
push
pop
xchg
and
pop
mov
or
js
in
insl
and
repnz
shlb
jp
mov
mov
xchg
pop
cmp
inc
push
addl
cmp
sarl
cmpb
call
inc
repz
push
nop
mov
jge
sub
or
mov
pusha
in
lock
jg
dec
mov
gs
lods
fs
sbb
add
pusha
fcmovu
sete
lcall
roll
or
mov
or
and
clc
xchg
add
flds
subl
inc
dec
sbb
sahf
addr16
adc
cli
pop
or
jecxz
push
and
cmpl
mov
sbb
arpl
aad
jns
sub
jl
stos
cltd
imul
pop
and
sahf
sub
dec
mov
hlt
fs
mov
cmp
sti
xor
push
push
mov
dec
push
jl
push
jge
popf
rol
push
xchg
sbb
mov
pop
xchg
sub
dec
cltd
mov
movsb
dec
enter
and
testl
xor
fs
loope
mov
xchg
push
push
lret
dec
aam
aam
push
fs
arpl
dec
pop
xchg
fmuls
mov
mov
ja
jg
dec
inc
cwtl
and
adc
jle
inc
cli
jecxz
mov
cmp
movsb
insl
cmp
movsl
xor
aad
movsb
adc
mov
nop
out
jle
pop
test
push
out
inc
cld
movsb
inc
pop
and
test
bound
repz
pop
std
cmpsb
lds
out
cwtl
mov
mov
movsb
sbb
adc
jge
int3
imul
and
call
iret
sti
sbb
lods
mov
imul
outsl
pushf
mov
cltd
mov
lcall
push
sbb
sarl
add
fimuls
push
leave
mov
cmpsb
mov
mov
mov
in
xchg
fiaddl
insb
jbe
lods
das
xor
ss
stc
mov
add
xchg
and
pop
ss
lret
jbe
cmp
daa
sbb
aam
xor
dec
inc
pop
dec
ficoml
dec
xor
loope
cwtl
xor
cmp
mov
push
cmp
fs
int3
mov
leave
xorl
data16
bound
ficompl
outsl
out
in
mov
shll
mov
push
imul
adc
dec
mov
in
fimull
ror
inc
cld
ljmp
mov
idivb
stos
inc
or
push
dec
mov
and
sbb
mov
dec
je
mov
add
inc
sbb
pop
aam
or
xchg
inc
sub
gs
mull
cwtl
jnp
inc
push
push
outsl
or
mov
jmp
push
lret
jl
xor
lahf
and
imul
insb
fwait
test
sub
sub
jae
insb
mov
movsl
jae
push
add
or
push
pop
pop
stos
div
stos
daa
adc
jo
jmp
inc
push
inc
sbb
cmp
int
jno
sarb
lret
mov
pushf
cmc
or
mov
xchg
dec
insb
push
sbb
cmp
dec
xchg
outsl
cmpps
mov
adc
in
test
jb
xor
ror
out
arpl
dec
dec
mov
fimuls
jle
xchg
jl
sahf
add
jne
fimuls
das
sub
and
hlt
and
sub
pop
cmp
sbb
mov
movsl
stos
mov
cmp
ss
in
loopne
mov
lret
jp
movsb
in
add
call
aas
xor
push
scas
push
push
sub
inc
sub
cld
in
sub
insb
jl
mov
xor
sbb
shll
jg
loop
push
ret
xor
lea
pop
jne
sbb
insl
cmp
addr16
push
mov
pop
pop
push
sti
jp
mov
test
testb
mov
in
mov
test
imul
dec
mov
mov
mov
test
ja
sub
cmp
jle
popf
inc
lods
and
cmpsl
cmp
inc
out
outsl
mov
stc
out
stos
adcl
jp
pop
pop
mov
mov
jecxz
push
jl
addr16
sarb
mov
push
js
enter
imul
daa
lock
xor
dec
pop
mov
test
movsl
and
and
test
jnp
pop
push
scas
adc
push
movb
frstor
push
out
cmp
dec
in
inc
inc
test
test
repz
xchg
mov
fld
shlb
mov
and
jne
inc
or
xchg
push
push
movsl
orl
pop
lods
int3
cld
and
fisubl
shlb
dec
sbb
fwait
lret
cmpb
adc
jg
rcr
sahf
fdivs
daa
and
cmp
sti
rclb
int3
js
clc
sbb
aad
inc
stos
outsb
outsb
cmc
mov
outsl
repnz
pop
and
mov
push
push
test
add
and
mov
push
rorl
push
loop
pop
hlt
dec
fwait
pop
add
mov
gs
lods
mov
aas
andl
hlt
insb
gs
arpl
push
or
xchg
rorb
into
mov
jecxz
outsl
stos
shl
fwait
sahf
pop
xchg
adc
mov
mov
and
cmc
sub
mov
out
dec
push
push
mov
dec
les
scas
pop
outsb
lods
icebp
jo
add
fimull
sbb
fnstcw
jns
add
mov
dec
pushf
sub
cmp
dec
and
sub
popf
or
or
outsl
xor
adc
adc
cmp
or
inc
daa
imul
mov
inc
mov
adc
dec
xchg
cmp
mov
inc
into
add
mov
das
xchg
xchg
std
push
inc
ret
outsl
or
cltd
test
lret
pop
mov
or
push
or
jl
inc
or
jmp
dec
sbb
sbb
jmp
inc
cmpl
mov
sahf
inc
mov
mov
mov
into
insb
fsubrs
roll
lcall
xchg
in
push
adc
and
dec
push
xor
jns
pop
int3
repz
adc
pop
mov
inc
jecxz
std
jle
jmp
je
dec
mov
sahf
xor
clc
rcrl
pop
out
loopne
test
std
imull
adc
add
leave
pop
out
add
icebp
mov
fisttps
iretw
inc
or
int
xchg
cltd
sbb
shr
push
push
sbb
out
incb
push
nop
jo
loopne
lock
out
and
js
pop
cmpsl
fistpll
adc
loop
out
pop
and
sub
in
cmp
fsts
sahf
int3
jnp
inc
in
repz
test
xor
or
dec
jne
xchg
push
add
xor
mov
out
jb
cmc
lods
xor
sahf
xor
and
rorb
jle
mov
xor
pop
test
cld
pushf
sbb
or
insb
push
pop
movsl
sub
push
jge
addr16
push
jae
pop
shlb
pushf
mov
jae
lock
xor
dec
stos
fdivrs
pop
mov
cmp
xchg
cmp
pop
fldt
sahf
fisttps
inc
or
hlt
icebp
mov
inc
xchg
js
push
sahf
mov
mov
adc
sub
mov
repnz
sub
cmpl
test
cmc
cli
lods
mov
mov
sbb
int
rol
enter
mov
inc
lods
mov
sub
rorl
xor
dec
ret
mov
inc
xchg
mov
sub
in
scas
xor
out
outsb
std
cmc
cmp
lret
movsl
push
pop
popa
mull
or
jns
fimull
out
mov
pusha
mov
xor
sbbb
push
jmp
outsl
mov
mov
fcoml
stos
xor
iret
add
sub
and
push
cmpsl
fxch
pop
shrb
popa
xor
ds
mov
iret
outsb
push
icebp
loopne
cli
or
fwait
jo
sub
add
mov
loope
push
add
and
decl
sub
ret
dec
inc
sbb
or
dec
xchg
stc
sub
imul
mov
repnz
dec
xor
std
pop
jp
lds
in
mov
js
xchg
mov
loopne
test
xorl
mov
outsl
iret
and
mov
lret
adc
push
adc
jbe
popf
and
adc
or
jbe
aad
xchg
cmp
sbb
stos
adc
test
das
cmp
sub
jp
mov
repnz
mov
push
jo
add
call
je
aas
ljmp
hlt
arpl
es
xor
jbe
in
ret
sbb
mov
int3
sbb
push
outsb
inc
mov
sub
data16
mov
and
add
dec
icebp
sub
loope
jo
imul
mov
xchg
sbb
mov
xchg
test
scas
icebp
push
push
data16
adc
repz
negl
sbb
push
mov
cli
popf
fstpt
mov
sbb
cmpsb
and
lds
sahf
mov
lret
jno
iret
cmp
lods
cs
stos
mov
or
mov
stc
in
test
sub
test
push
lahf
arpl
lahf
shl
jle
inc
sbb
or
movsl
outsl
dec
add
sbb
out
mov
xchg
xor
imul
fdiv
inc
inc
jl
mov
loop
mov
inc
or
adcl
into
sub
stos
jecxz
lahf
xchg
repnz
shl
cmp
insl
cmp
fs
add
loopne
es
adc
arpl
xchg
add
mov
mov
aam
mov
dec
push
in
inc
nop
nop
les
or
push
pop
lods
mov
in
xchg
and
in
stc
inc
push
jbe
aas
xchg
inc
clc
insl
call
out
mov
cmp
outsb
sbb
pop
decb
cli
stos
sahf
inc
add
mov
fildll
jne
xor
cltd
pusha
cmp
call
sbb
lea
mov
mov
int
popf
movsl
imulb
cwtl
push
add
mov
inc
xor
jbe
cltd
adc
mov
out
cmp
js
inc
and
push
in
or
push
ss
movb
pusha
loop
dec
sbb
shll
std
jp
iret
sub
lret
lret
bound
addr16
outsb
gs
sbb
and
bound
jb
jns
mov
out
clc
pushf
ja
imul
imul
xchg
loopne
lahf
daa
lahf
mov
cmp
test
out
cmpsb
rorb
xchg
pop
jnp
xchg
loopne
add
cmpsb
fnstcw
in
shlb
sbb
fistl
inc
lar
cld
addr16
test
icebp
bound
in
jecxz
push
push
jno
or
popl
jecxz
mov
test
ja
out
xchg
into
pusha
mov
sub
dec
cmpsl
xor
and
mov
sbb
bnd
fs
cmp
aas
stos
jl
call
push
or
cmpsl
in
js
push
lods
je
fnstsw
bound
mov
out
test
mov
lret
and
scas
jmp
rolb
cld
push
clc
mov
add
mov
mov
mov
stos
xchg
add
dec
insb
clc
fsubrp
sub
loop
lods
leave
jge
lret
sbb
mov
out
xchg
push
push
adc
mov
cli
fstl
mov
dec
dec
xor
in
fbld
sub
push
into
push
shll
sub
fdivrl
cli
push
adc
dec
std
jecxz
mov
or
add
call
push
dec
cmc
test
ja
lock
jl
add
lock
jb
repnz
subl
arpl
dec
sub
mov
push
repnz
ret
sub
sub
jae
sbb
outsl
sub
lcall
or
movsl
insb
popa
stc
fdivs
pop
movsb
xchg
mov
nop
mov
mov
mov
jmp
or
pop
or
popa
sub
std
sub
jmp
mov
dec
inc
out
int
das
push
les
and
xlat
sbb
push
push
in
dec
pop
mov
lods
adc
sub
inc
dec
clc
or
movsl
les
mov
pop
sahf
int
sub
gs
mov
mov
inc
xor
cmp
xchg
mov
test
test
xor
leave
outsb
movsl
fwait
aad
push
xor
rorb
push
addr16
mov
push
or
and
push
js
repnz
add
fistps
cmp
or
adc
jg
test
test
push
xchg
orl
ja
sbb
out
dec
fsts
xchg
enter
sbb
mov
psraw
adc
mov
enter
push
cltd
push
inc
fstpl
test
fisubl
push
fs
pop
sahf
push
icebp
add
adc
data16
addb
push
mov
das
clc
es
enter
arpl
mov
repnz
js
mov
cmc
and
out
ret
call
repnz
flds
leave
and
cmp
jle
rcll
push
rorl
mov
int
negb
out
cmp
out
test
daa
jo
sahf
mov
inc
and
mov
cmpsl
inc
sbb
clc
sub
cmpsb
inc
bound
fsubrl
inc
ret
test
or
fs
and
aas
sbb
xlat
into
test
xchg
stc
popa
or
mov
mull
out
or
mov
negl
lock
cmp
mov
ss
xchg
in
adc
or
push
in
js
push
bound
adc
rcrb
sub
aaa
mov
clc
aam
leave
int
imul
mov
cltd
sarl
shl
and
in
xor
sbb
cli
add
mov
pop
mov
cli
cmpsb
int3
idiv
mov
cmpsb
cmp
adc
mov
repnz
std
cmpsl
jg
xor
mov
or
sbb
jge
xchg
inc
xchg
daa
negb
aaa
sub
ljmp
fwait
mov
in
outsl
fsubl
dec
ds
lcall
xchg
inc
mov
mov
push
jle
dec
sti
mov
nop
mov
xchg
mov
repnz
icebp
pop
jnp
imul
out
cmp
xchg
sbb
xchg
cwtl
in
icebp
cmp
mov
xor
dec
mov
cmp
out
test
rcll
shrb
xorb
ret
mov
rcr
clc
loop
inc
adc
inc
faddl
insl
sbb
cs
push
push
sub
hlt
jp
jecxz
xchg
mov
fdivrp
sarl
mov
jne
sub
jmp
and
push
lods
sub
hlt
fs
jp
fildl
and
pushf
cli
jne
pop
jns
sub
jp
pop
rorl
mov
cmp
ss
dec
nop
jb
jno
inc
arpl
push
pop
mov
sbbb
std
sub
cli
orl
outsb
bound
gs
loopne
or
test
xchg
stos
cwtl
out
adc
into
je
insb
xor
sbb
or
and
pop
push
sub
in
ds
fistpl
pop
out
lea
push
rorb
lea
popa
loope
pushf
imul
leave
add
xor
jle
ss
push
mov
insb
push
lret
push
push
mov
out
out
imul
jmp
loopne
rcrl
xor
test
xchg
inc
pushf
cmp
fsubl
mov
and
adc
out
lods
shll
jmp
mov
mov
dec
mov
inc
fbstp
lock
push
xchg
jne
arpl
popa
xor
pop
dec
sub
push
inc
ds
loopne
mov
lock
dec
dec
lds
in
std
dec
mov
sbb
and
sbb
mov
js
mov
xor
sar
insl
popl
mov
adc
es
icebp
stos
cmp
sub
mov
and
int
stc
push
push
insb
in
lods
mov
mov
mov
mov
push
xchg
shlb
cli
loopne
cmp
mov
inc
dec
pusha
loopne
out
push
incl
mov
push
inc
dec
jae
xchg
inc
add
mov
mov
ss
mov
sbb
jne
push
jae
and
shlb
mov
hlt
cs
inc
pop
rorl
fs
xchg
fucom
outsb
andb
les
shlb
push
mov
xchg
test
in
cli
sub
adcb
stos
add
outsb
add
dec
jle
jo
repz
iret
xorb
xor
mov
pushf
xor
jo
jmp
movsb
mov
shll
inc
sub
sbb
cmp
call
pop
es
lret
mov
dec
and
xchg
pop
mov
div
push
lea
jmp
jecxz
xor
lods
mov
aas
add
fs
loope
push
lcall
and
or
scas
aaa
mov
xor
in
add
sbb
test
xor
push
push
pop
cmc
dec
jbe
pop
repz
pop
stc
or
pop
push
fmuls
bound
xor
mov
pop
xchg
pop
test
lea
push
out
dec
mov
shll
cmpsb
mov
das
cs
sub
inc
lret
fstl
test
sbb
jecxz
sti
adc
add
stos
fstl
ret
add
jp
sbb
ret
dec
fisttpl
js
mov
orl
mov
pop
lahf
pop
and
shlb
pop
ret
cmp
outsl
inc
test
inc
and
add
push
dec
repz
ret
xor
pop
andb
xchg
jo
mov
sbb
test
mov
ds
adc
nop
addr16
std
adc
push
daa
adc
jle
cld
xorb
in
and
mov
ja
imulb
ret
pop
jnp
jmp
lea
cmpsb
aad
xchg
insl
loop
adcl
xchg
aaa
xchg
mov
stc
mov
mov
xchg
dec
mov
mov
aas
mov
dec
xchg
adc
jl
push
mov
stos
pop
cmp
jp
push
xor
mov
sbb
gs
and
cmp
xor
mov
add
pushf
adc
nop
lock
pushf
dec
pop
jno
inc
fwait
popa
or
pop
jae
adc
adc
mov
movsl
cmp
lret
rcrb
lods
cmp
in
test
jae
add
sub
daa
dec
xor
jo
xor
jmp
loopne
in
mov
mov
shlb
addr16
xor
push
pushl
es
jg
sub
pushf
push
nop
repnz
or
mov
call
adc
jne
push
cwtl
mov
pop
pushf
mov
clc
test
and
jns
ds
outsl
pop
jnp
cmc
loop
testl
orb
mov
ret
jp,pn
pop
loope
ja
pop
push
mov
or
fwait
cmp
lret
insb
push
ds
jae
sti
popa
das
dec
out
jbe
cmp
into
test
mov
jle
add
fucomp
dec
cltd
out
mov
mov
imul
inc
mov
into
cmpsb
cs
jmp
lea
push
xchg
scas
inc
dec
movsb
popa
adc
push
out
fadd
push
mov
xor
or
hlt
dec
movsl
sub
jmp
pop
cli
mov
loopne
cwtd
test
sar
dec
dec
or
sub
jg,pn
movsb
adc
insb
das
ss
mov
addb
mov
call
xchg
jae
adc
and
notl
dec
pop
inc
bound
xchg
add
fmulp
mov
rclb
dec
cli
and
lret
adc
in
lcall
xlat
xchg
xor
bound
cmpsl
mov
pop
push
aam
bound
pushf
push
cwtl
adc
jge
dec
subl
fdivp
into
pop
pop
fnsave
es
and
sbb
hlt
in
popa
mov
or
mov
ret
out
mov
jns
xor
inc
repz
sub
imul
sbb
movsb
out
sahf
pop
in
xchg
jg
dec
mov
inc
sti
mov
pop
mov
and
pop
mov
push
mov
fxch
push
xchg
jg
lea
sahf
roll
loop
sub
bound
sahf
aaa
xor
pop
and
mov
xchg
out
mov
lret
mov
jmp
aas
pop
sahf
cld
call
nop
mov
or
out
xor
loopne
adc
in
mov
fbld
sub
call
daa
push
push
loopne
lcall
push
aas
in
mov
outsb
scas
sub
pop
mov
or
sbb
test
sbb
imul
negb
and
xor
lret
mov
fiadds
jle
enter
mov
lds
pop
cmovae
push
jmp
adc
lods
test
add
mov
xchg
dec
pop
jge
xchg
sub
call
ljmp
sbb
push
cmp
mov
mov
mov
sub
insb
or
xor
pushf
data16
in
insl
in
dec
scas
pop
lods
lcall
ds
das
sbb
imull
inc
lea
repz
fs
mov
push
xor
mov
jmp
jg
pop
adc
into
jmp
test
sub
jg
test
daa
xchg
inc
lods
sbb
mov
pop
mov
ljmp
push
sbb
and
lea
jo
mov
enter
sub
push
mov
stc
and
imul
fs
sti
mov
xchg
sbb
mov
shll
pop
jl
dec
out
clc
mov
or
imul
sub
xchg
testl
mov
push
xchg
popf
or
arpl
add
cmp
cmp
or
push
xlat
in
daa
and
shl
pop
and
clc
pushf
sbb
sub
inc
mov
lret
int3
ficoms
adc
mov
mov
int
addr16
xchg
dec
or
push
push
xchg
cli
movsl
repz
cmpsb
aas
sub
add
and
ds
xchg
fidivl
cmc
or
into
ljmp
adc
leave
push
lcall
pusha
rcrl
lret
jae
addr16
jle
ss
inc
cs
sub
adc
out
stc
sub
mov
call
mov
fbstp
gs
dec
call
lea
or
lods
push
sub
fldl
popa
int
cmp
lcall
rorb
ds
jns
xchg
cmp
xchg
pop
aaa
test
fmuls
repnz
aad
sbb
sbb
mov
push
push
pop
cli
jbe
ficompl
das
outsl
outsl
ja
mov
ja
inc
cmp
push
aam
cmpsb
push
and
repnz
stos
dec
mov
xchg
or
dec
xchg
add
or
stos
jecxz
dec
mov
jbe
add
inc
js
testl
lahf
mov
pop
pop
inc
ret
fwait
dec
pop
dec
jp
pop
sbb
mov
cld
mov
addr16
stos
call
sub
xchg
fsubl
cmp
cltd
into
pop
xorl
cltd
xlat
push
fcmovnb
inc
daa
leave
sub
fnsave
mov
mov
mov
dec
dec
pop
dec
arpl
or
xlat
imul
push
ret
loopne
xchg
sti
pop
xor
dec
jnp
pop
xor
mov
sbb
pop
repnz
jge
dec
sbb
mov
fstpt
movaps
sub
stos
dec
sbb
mov
je
lret
testb
test
in
mov
sub
dec
sbb
lcall
dec
int
lods
cmp
cltd
mov
add
das
mov
lds
mov
sub
iret
int3
std
outsb
jp
imul
fsubs
add
inc
out
out
test
das
xor
push
add
repnz
inc
jl
mov
cmpsb
push
pop
push
rorb
call
out
negb
in
dec
mov
mov
shlb
ds
dec
mov
inc
pop
test
mov
cli
jns
pop
or
lret
aas
iret
and
pusha
addr16
add
mov
pop
arpl
inc
or
cmp
int3
sub
inc
add
push
xor
dec
push
imulb
scas
sbb
dec
test
sub
into
andl
mov
ja
addl
in
jno
cmp
loope
mov
mov
or
je
jno
roll
inc
loopne
shll
lods
add
sub
mov
out
mov
xchg
xchg
aad
push
pop
cwtl
xchg
push
fidivrl
pop
cwtl
int
cltd
jp
xor
inc
hlt
out
pop
or
nop
fstps
sbb
sub
mov
fdivrs
outsl
ret
jmp
mov
daa
push
inc
dec
mov
push
sbb
dec
mov
les
aaa
popl
dec
cmp
adc
and
in
adc
fsubs
xchg
cmp
cmp
and
call
adc
mov
dec
inc
push
and
cmc
orb
mov
jb
or
add
sbb
pop
push
arpl
xchg
mov
sub
push
xor
dec
test
pop
xchg
mov
inc
cmc
out
data16
int
mov
out
sbb
cmc
xchg
aas
mov
adc
lods
or
push
xchg
mov
fsubrs
movsl
aaa
ds
das
mov
sti
lea
and
imul
xor
push
repz
popa
scas
lock
push
mov
or
js
add
mov
sbbb
scas
sbb
outsl
pop
push
ret
popa
xchg
jns
lret
push
mov
rcrb
jne
and
scas
dec
loop
jp
test
cmp
aaa
cmp
fstps
aaa
ljmp
jne
push
sub
sbbl
cmp
adc
mull
dec
out
mov
sub
clc
mov
xor
xchg
gs
mov
clc
jecxz
jmp
mov
xchg
or
andb
fs
aaa
adc
pop
sub
ja
inc
add
mov
inc
pop
insl
insb
repz
pop
imul
jno
or
test
ja
arpl
lret
test
icebp
add
insb
jbe
and
pop
sbb
jbe
imul
test
fs
loop
xchg
sti
xor
push
ja
jp
or
add
dec
in
cmp
xchg
fdivrl
push
out
aaa
ljmp
daa
mov
cmpb
add
lock
sbb
push
and
sub
loope
cmc
push
mov
and
pop
mov
lret
sub
shll
xchg
in
out
sub
pop
add
xchg
cmp
outsb
cli
stos
lret
mov
ljmp
outsl
mov
sub
sbb
pop
rcrb
and
pcmpeqw
dec
adc
jg
sub
movswl
scas
nop
xor
je
inc
mov
aad
mov
xchg
cltd
lods
sbb
adc
das
inc
and
scas
sbb
inc
lds
push
jno
add
sub
fcoms
inc
shl
rorb
lret
iret
and
pop
and
inc
addb
or
test
jle
ret
add
push
mov
cmpsb
test
mov
std
sub
mov
cmp
xchg
or
inc
clc
and
pop
mov
ss
lods
sub
sub
mov
jb
fisubrl
imul
in
int
fwait
dec
adc
push
cmp
pop
sub
sub
pop
add
jl
dec
adc
ss
lods
ja
inc
mov
or
xor
xlat
cmc
stos
mull
inc
mov
lret
inc
cmpsl
jbe
inc
jmp
dec
pop
int3
lret
rcr
push
add
mov
xor
dec
jmp
leave
xor
decb
loop
add
cmp
add
fidivrl
sahf
jbe
xchg
sbb
jae
mov
cli
fldenv
dec
fwait
imul
test
sub
popf
add
mov
out
repnz
add
pushf
inc
xor
push
inc
repz
and
or
and
faddp
movsb
out
mov
mov
add
mov
jp
insb
xchg
and
jno
or
mov
or
insb
push
dec
insb
xor
adc
and
loop
popa
or
mov
mov
rcrb
pop
and
fsubrs
jno
lahf
sahf
adc
jmp
je
leave
popf
cmp
in
and
cltd
adc
mov
cmp
and
and
push
mov
xor
mov
jmp
mov
sub
pop
ljmp
shr
push
adc
pop
mov
adc
or
es
pop
loopne
fs
stos
stos
mov
xchg
popa
in
cmp
filds
mov
fcompl
inc
jecxz
shlb
xchg
cld
push
lds
sub
pop
loop
inc
in
test
sarb
push
xor
mov
add
sbb
sbb
icebp
inc
mov
fisttpl
mov
pushf
lock
jg
mov
ficoml
push
mulb
xlat
divb
imull
or
cmpsb
lahf
mov
inc
and
pshufw
insl
add
arpl
mov
cmpsl
andl
pop
mov
fxch
mov
mov
sub
std
xor
pop
sbb
adc
lahf
adc
addr16
mov
push
int
push
rcrb
popa
sub
pop
out
adc
add
and
repz
cli
pop
xchg
pop
lret
daa
mov
sub
push
repnz
clc
add
in
or
loope
out
notb
fcomip
push
or
jl
dec
push
cmpsl
jnp
adc
cli
cmp
dec
push
jbe
int3
stos
jbe
inc
mov
mov
jp
mov
jb
loopne
xor
cmpb
xchg
add
push
jo
sbb
aas
int
mov
sbb
mov
adc
sub
inc
xor
js
lahf
xchg
dec
sub
enter
clc
jp
inc
stos
shll
mov
mov
imul
cmpsl
push
repz
fldt
mov
lods
sbb
push
popa
jnp
mov
mov
dec
pop
lods
sub
cmpsl
xlat
dec
mov
inc
dec
mov
shrl
ss
andb
add
inc
jle
stos
jmp
or
push
and
js
mov
pop
or
inc
sarl
mov
pop
jne
mov
mov
dec
dec
or
fcoml
sbb
xchg
out
or
icebp
call
and
sub
daa
aas
inc
ljmp
repz
push
cs
cli
ds
sahf
add
dec
sub
sub
cmp
movsb
iret
or
xor
pop
nop
adc
fadd
inc
cmp
js
mov
ret
repz
mov
jmp
cmp
popa
ja
rcl
sti
or
dec
xchg
add
jae
mov
out
shlb
orps
xor
fidivrs
mov
or
xor
aam
repz
fwait
push
cld
sub
push
or
xchg
or
inc
sub
jo
daa
push
mov
xor
insl
mov
mov
fisttpll
loop
xor
xchg
mov
rclb
lcall
repnz
testl
cmpb
fmul
fadd
dec
aad
sub
lret
sub
insl
out
push
mov
push
push
ret
daa
and
mov
andl
lret
push
cmp
sti
mov
adc
xchg
cmpsb
xor
cli
xchg
cmpsb
ds
in
sbb
jmp
xchg
aaa
ja
ficompl
and
bound
push
sarl
mov
sbb
call
lea
fiadds
inc
jae
add
push
sbb
fs
xlat
fdivrp
incl
idivl
push
jae
cmp
xor
pop
inc
xor
dec
jp
ret
lahf
in
int3
jp
xchg
mov
sub
sub
jp
xchg
pop
sbb
fidivl
outsl
pop
out
jge
std
mov
in
gs
outsl
xchg
sbb
mov
lods
hlt
jge
mov
test
adc
shll
stos
xchg
cmp
fnstcw
call
fcompl
sti
shrl
shr
dec
dec
add
mov
inc
xchg
pop
ret
sarl
popf
icebp
cld
es
dec
sahf
sub
fcom
das
dec
adc
sub
adc
and
pop
pusha
jle
lods
mov
dec
sbbl
gs
imul
popf
fdivl
fs
imul
int3
scas
push
into
inc
push
dec
xchg
cmp
movsl
mov
or
jg
cwtl
cmp
lcall
loopne
cmp
dec
push
mov
cmp
leave
aaa
mov
gs
sbb
shll
jnp
mov
push
pop
dec
dec
loope
add
and
cmc
adc
mov
ficomps
jae
xchg
pop
lea
cmp
cwtl
daa
mov
pop
repz
sub
push
xchg
leave
dec
or
cmpsl
mov
lcall
cmp
lods
fwait
mov
pushf
shl
mov
imul
mov
fidivs
fwait
test
pop
test
rcll
xor
cltd
fs
ljmp
xchg
mov
aam
or
movsb
and
jne
lds
cltd
and
les
mov
inc
and
adc
repz
jl
ds
pop
mov
pop
jae
out
pop
shl
sarl
jne
cli
cld
fstl
jg
cmp
mov
rcr
out
out
push
ret
mov
xor
test
mov
roll
cmp
mov
xchg
aaa
add
std
movsl
mov
hlt
push
pop
xchg
fldcw
push
mov
in
pop
xchg
fstp
add
mov
shlb
out
add
and
pop
or
jbe
lret
filds
lret
stos
dec
cmp
pop
loope
ds
nop
adc
mov
imul
fmull
ret
or
xchg
into
stos
in
cli
jo
add
sub
pop
sbb
pop
xchg
test
popf
pop
xor
pop
lds
sbb
leave
sub
cmpsb
subl
xor
shll
pusha
xor
in
jae
adc
popf
mov
pop
mov
jnp
nop
jmp
sbb
dec
aaa
std
int
sbb
sar
unpcklps
pop
call
adc
sbb
faddl
fiaddl
ret
leave
sbb
ljmp
cwtl
andb
cli
movsl
inc
add
rcr
push
insl
push
aaa
xchg
adc
enter
mov
test
inc
cmp
add
inc
lret
cmc
xchg
xchg
or
sti
dec
xchg
bound
in
fistpll
mov
pushf
loop
sbb
ss
pop
nop
jge
mov
or
es
iret
enter
lea
aam
jno
and
xchg
sbb
push
insb
jne
mov
sub
in
bound
std
xchg
sbb
add
add
pinsrw
cld
push
ret
xchg
cld
and
mov
mov
adc
inc
mov
pop
sbb
inc
inc
movsb
pusha
addr16
subb
xor
fwait
rcl
stos
lcall
push
int
mov
int
movsl
aaa
fwait
push
ror
push
mov
mov
inc
jb
mov
insb
and
inc
mov
out
jns
nop
and
jl
push
leave
shll
lahf
lahf
or
ljmp
shll
js
arpl
xlat
enter
loop
inc
testl
mov
bound
int3
addr16
adc
sub
sbb
adc
jge
insb
sub
sbb
mov
push
divl
arpl
inc
sti
aam
nop
loope
lods
cmp
push
xor
or
xchg
movsl
and
mov
push
push
out
vmovdqu
xchg
sub
pusha
std
push
in
lret
xchg
jl
xchg
xlat
or
out
xorl
scas
pop
cmp
mov
roll
xor
cmp
mov
pop
fs
and
sub
cmp
repz
ret
jno
mov
pushf
xor
sub
fnsave
es
jmp
add
sbb
movsb
jmp
sbb
jge
outsb
clc
and
xchg
mov
aam
movsb
shrl
mov
pop
mov
aam
inc
push
mov
test
mov
sub
jmp
repz
imul
daa
dec
push
dec
clc
outsl
pop
ret
pop
das
add
cli
xchg
test
adc
fistl
or
inc
inc
cmpsb
cs
xchg
sub
lock
fldenv
rcr
cmp
sbb
popf
rcr
loop
enter
std
loopne
sbb
ds
data16
sbb
mov
mov
jb
pop
gs
xchg
rorb
leave
or
sti
inc
loop
cmp
cmp
xchg
lods
out
iret
pusha
sub
jne
test
inc
dec
and
xorb
add
stc
mov
jmp
adc
ja
cltd
inc
cld
icebp
dec
xor
scas
jnp
add
xchg
lcall
xor
stc
daa
roll
iret
jno
fisubs
into
call
stc
das
mov
jg
imul
jl
ret
stos
gs
insb
xor
data16
xor
sub
repnz
mov
xchg
popa
sub
mov
sub
in
dec
mov
xor
mov
pushf
shrb
mov
divb
dec
mov
cltd
gs
imul
lods
xor
pushf
test
xor
out
jmp
and
xchg
jl
test
pusha
test
sbb
fidivrs
xor
cmpsl
arpl
pop
loopne
fisttpll
inc
jbe
ret
cmpsb
ror
lret
adc
xchg
mov
mov
sub
pop
jge
lret
inc
adc
lea
or
aam
inc
push
mov
movsb
mov
fimuls
aad
and
pop
rcll
paddusw
out
adc
push
xor
in
ja
inc
arpl
or
aam
push
insb
fnsave
jbe
fs
jno
mov
cltd
xor
jle
psraw
in
add
cld
push
pop
mov
adc
sar
nop
loopne
sahf
sub
dec
popa
mov
cmp
je
setp
sub
and
clc
jns
std
push
icebp
push
int3
imul
and
pop
jp
jb
iret
ljmp
and
xchg
les
adc
mov
pop
cmp
lock
shll
pop
nop
jno
loope
cmp
adcl
push
dec
push
sub
add
push
daa
cmc
pop
mov
scas
imul
cmpsb
push
addl
pop
inc
fmull
lret
dec
xor
cmpl
inc
mov
xor
xchg
or
add
outsl
subl
mov
pusha
lahf
out
mov
add
xchg
rclb
out
movsb
dec
mov
or
sbb
mov
popa
imul
sbb
adc
hlt
in
pushf
movsl
test
mov
and
popf
mov
dec
cmp
sbb
and
or
sbb
fs
int
jmp
fidivrl
mov
stos
in
rcll
jle
push
pushf
out
mov
lahf
pusha
and
push
pop
cmp
scas
push
mov
cmp
xchg
xor
jp
xchg
icebp
dec
aad
push
mov
pop
pop
mov
mov
fs
fcomps
push
sbb
jle
jmp
mov
mov
sbb
mov
inc
lahf
xchg
sub
sbb
adc
shlb
dec
mov
pop
lea
pop
mov
hlt
pop
arpl
ficompl
jle
mov
test
xchg
icebp
sub
jge
mov
cmp
int3
push
mov
and
mov
dec
mov
mov
leave
out
aaa
mov
fs
adc
das
mov
inc
cld
push
jecxz
adc
sub
lcall
mov
sub
sub
push
cltd
xor
jo
xchg
xor
hlt
test
orl
outsl
add
out
pop
dec
mov
inc
inc
iret
dec
sub
inc
movaps
div
jp
push
inc
adc
decl
je
idivl
les
adc
bound
dec
cmpsb
add
add
in
mov
repz
shrl
popf
jp
stos
jb
dec
mov
push
imul
loope
dec
inc
dec
push
dec
sbb
dec
jl
ljmp
nop
call
std
dec
sbb
jbe
xchg
scas
arpl
jnp
scas
push
ds
cmp
ret
or
xorl
leave
adc
push
out
dec
inc
sub
adc
out
sub
fisttps
sub
push
pushl
push
mov
inc
loopne
push
outsb
cmp
dec
cs
xchg
aam
in
mov
jmp
mov
xorl
sub
push
jnp
aad
sbbl
pop
test
mov
pop
jo
sub
out
and
mov
inc
xor
mov
cld
push
adc
xchg
adc
xor
xchg
ret
mov
dec
pusha
aam
mov
jne
or
mov
outsb
jg
jl
sbb
iret
push
les
add
stos
in
adc
pop
jmp
int
test
adc
cmpsb
dec
push
leavew
pop
cmp
mov
clc
int3
sahf
cmpsb
fcmovb
cmc
leave
cwtl
bound
inc
std
and
lea
mov
xchg
mov
scas
xchg
loope
xchg
out
setne
lret
lret
fs
jmp
lds
mov
lret
pop
and
and
jp
inc
movsl
jecxz
push
adc
fcompl
shrl
cmp
cmp
mov
xor
pushf
sbb
mov
push
dec
ffreep
pushf
pusha
enter
pause
or
xor
sti
lret
cmp
lret
push
test
ror
mov
adc
push
dec
xchg
subb
xor
add
arpl
mov
push
push
push
jno
dec
icebp
xor
aaa
xchg
ficompl
inc
daa
inc
repnz
mov
repnz
lods
lret
adc
stos
mov
rcrb
shll
cmova
cmp
int
cli
in
in
je
fs
je
out
mov
add
andb
test
jl
adc
movsl
jne
lcallw
rorl
movsl
xor
mov
sbb
xchg
nop
cmp
pop
or
mov
pop
adc
xchg
jmp
jae
jecxz
mov
loopne
pop
test
daa
out
sub
fwait
loop
push
sahf
xor
mov
mov
bound
popa
lret
pop
outsb
and
jbe
push
push
pop
mov
sbb
xchg
test
add
xchg
ror
mov
add
loopne
sti
sbbb
outsb
outsb
mov
xchg
fucomi
dec
jo
je
cmp
push
jmp
and
cmp
test
adc
dec
push
test
xchg
or
sub
int
out
cmp
in
and
insb
add
push
lcall
sbb
sbb
xchg
jns
sub
mov
into
mov
cmp
clc
cmp
dec
push
movsl
ds
dec
sbb
popf
or
push
out
in
or
bsr
fsts
pop
pop
xchg
mov
idiv
data16
js
and
xchg
dec
mov
mov
in
rcrb
dec
data16
add
scas
movsl
fwait
ret
ficomps
push
test
pop
pop
push
mov
pop
cltd
test
mov
cli
or
and
cld
daa
jg
dec
movsl
lret
fsubl
mov
repnz
xor
push
fsubrl
aad
pop
mov
popf
mov
sbb
sub
xchg
push
push
aam
pop
hlt
inc
push
fcmovnb
cmp
cmp
push
sub
and
dec
aaa
mov
dec
out
rcrb
clc
sub
pop
in
loopne
cld
mov
fmuls
in
rcll
and
cwtl
jp
inc
jmp
out
xchg
cld
push
mov
jecxz
mov
adc
scas
aad
scas
jmp
addr16
fidivrs
add
nop
dec
add
pop
sub
bound
loopne
les
int
fwait
mov
mov
fwait
mov
inc
mov
popf
fmul
sub
lods
test
icebp
cmp
mov
pop
daa
add
add
mov
mov
mov
enter
cltd
and
mov
ss
jg
out
gs
movsl
test
mov
inc
pinsrw
xchg
out
add
mov
js
pop
daa
adcb
cmp
clc
sub
test
lods
mov
push
sub
xlat
stc
mov
and
xchg
ds
lret
and
jb
and
outsl
fldenv
adc
adc
push
xor
shlb
fnstsw
sbb
sub
into
xchg
inc
xchg
mov
pop
push
cmp
fwait
sbb
or
jo
xchg
pop
sub
pop
push
lock
sub
sbb
ljmp
dec
hlt
and
and
sti
push
jmp
out
mov
xchg
inc
cli
and
sbb
insb
ljmp
out
ret
nop
es
mov
pop
cltd
mov
enter
inc
or
mov
orb
dec
inc
fdivrs
mov
dec
in
push
mov
rorl
push
cmp
push
cmp
add
add
xor
xchg
dec
mov
cmc
jl
fisubrs
adc
sbb
stos
xchg
stc
test
pop
dec
or
jmp
and
ret
mov
aad
push
lock
inc
pop
sbb
or
stc
bound
in
sbb
orb
inc
push
cli
pop
add
mov
xchg
pusha
dec
add
cmp
dec
inc
lock
pop
mov
enter
jmp
push
sbb
divb
pop
push
repnz
js
push
out
stos
inc
mov
adc
aad
xchg
rcr
push
clc
lds
leave
cmpsl
lock
aas
pop
rcll
out
fsubrl
ja
sti
sbb
repnz
outsb
movsl
cmp
jbe
dec
mov
or
adc
and
cs
addb
out
push
dec
sub
shlb
xor
ret
iret
or
call
xchg
enter
stc
xchg
sarl
lret
push
fldenv
aas
daa
or
sbb
dec
mov
mov
mov
mov
clc
and
xor
ja
push
lods
xor
sahf
and
cmp
pop
cmpsl
pop
fdivr
loop,pt
and
sub
add
aaa
mov
mov
lods
shl
lret
ret
pop
and
mov
jp
jnp
add
je
mov
pop
jns
and
xchg
imul
ret
push
fmuls
fbstp
stos
inc
and
out
or
jnp
sbb
sqrtps
pop
arpl
sbb
inc
sbb
inc
in
out
dec
out
xor
dec
pop
jo
xor
mov
and
in
les
pop
out
divl
aad
inc
mov
stc
iret
add
dec
mov
out
push
call
repnz
jle
jno
or
addl
gs
xchg
push
outsl
or
inc
sub
int
pop
stos
or
push
jae
mov
mul
mov
or
leave
mov
imull
inc
push
cmp
xchg
xchg
inc
push
orl
popa
cmp
icebp
and
js
out
call
push
pop
dec
push
pop
cwtl
push
xchg
xchg
fucom
jae
push
cmp
sti
jge
dec
xor
or
pop
jmp
imul
loopne
mov
mov
in
fstps
les
adc
fdivrs
ja
in
and
pop
movsb
dec
cmp
js
cmp
aaa
shlb
inc
popa
fs
or
in
hlt
adc
sub
pop
in
mov
dec
sbb
dec
add
sbb
sbb
pushf
jo
es
out
fwait
sub
push
mov
mov
cmp
cmp
test
xchg
push
lahf
mov
push
ret
sub
test
movsl
pusha
jae
fildll
ret
jne
or
inc
xchg
imul
mov
out
xchg
push
sti
rclb
and
inc
push
outsb
sti
mov
and
xchg
push
push
push
sub
divl
xchg
sbb
inc
inc
imul
call
push
xchg
mov
in
cmc
and
out
mov
xor
inc
ds
sarl
pop
and
mov
mov
mov
dec
xchg
push
xchg
cmpsb
mov
cmp
add
arpl
inc
lods
mov
jle
mov
popf
mov
dec
daa
adc
mov
arpl
fcoml
decb
test
clc
or
fwait
imul
cmp
stc
sub
dec
subl
out
daa
xor
sub
and
mov
sbb
xor
ret
call
add
inc
push
scas
repz
lahf
out
add
pop
arpl
mov
and
les
mov
mov
iret
xor
cmpl
pop
mov
mov
into
sub
pop
mov
ret
sbb
outsl
fmuls
add
ror
mov
data16
add
nop
push
jmp
pop
mov
xor
adc
hlt
movsl
push
mov
sbb
fnstsw
jbe
pop
xchg
into
mov
ret
ret
pop
dec
hlt
pop
subb
addb
adc
and
fstp
jo
es
push
lcall
sbb
xchg
push
pop
pusha
mov
shll
mov
into
popa
dec
add
inc
jle
fildll
insb
push
cmpsl
es
out
or
sbb
mov
sti
push
xchg
aad
push
xchg
jnp
mov
aas
in
fs
pop
xlat
out
test
dec
outsl
adc
xor
jnp
cmpsl
or
js
mov
adc
int3
loopne
xchg
cwtl
xlat
adc
enter
cmp
fdivs
sbb
mov
ret
sbb
dec
jns
fstpl
int
inc
jp
lds
cmc
push
dec
push
fldcw
clc
insl
es
push
mov
xchg
inc
jl
shll
ss
dec
mov
pop
or
ret
or
cltd
mov
rcll
call
jae
divb
les
xchg
inc
test
les
bound
ret
stos
lahf
test
add
sahf
lret
sub
xor
sub
jmp
loop
shll
push
cmpsl
mov
dec
fnstcw
sti
aam
fld
ljmp
jmp
mov
setno
jmp
int
ds
push
pop
outsl
in
data16
aad
fiadds
int3
int3
pop
jmp
lahf
orb
cmp
outsb
cmovae
push
sbb
push
pop
xchg
sbb
adcl
xchg
mov
icebp
pop
cmp
xchg
insl
sub
mov
insb
adc
outsb
jnp
iret
and
lahf
mov
mov
pop
xchg
jge
add
clc
adc
imul
sbbb
sub
call
pushf
js
test
ret
cltd
sarl
xchg
movsl
mov
jns
popa
xchg
push
xor
idiv
xorl
jnp
fs
je
out
or
lret
fiaddl
fdivl
rolb
inc
mov
in
es
dec
push
pop
xor
push
mov
fldl
sahf
popf
mov
sub
test
ds
rol
pop
stc
add
lods
and
jae
xchg
rclb
sub
pusha
xor
pushf
or
imull
fcmovnb
orb
cmp
int3
or
lret
sub
push
mov
jb
sbb
sbb
nop
mov
int3
aaa
dec
sub
mov
test
xchg
xor
mov
mov
and
or
or
test
cs
mov
push
rorl
testl
leave
pusha
call
or
mov
decb
xchg
mull
repnz
xchg
les
cmp
cli
fisubs
xor
ret
pop
push
dec
or
or
push
andb
rcrl
in
shrb
cmpsb
ret
xchg
push
cmpsb
ds
adc
add
mull
and
xchg
cmp
jo
fnstenv
push
iret
icebp
mov
fcomps
les
frstor
aas
outsb
xchg
nop
insb
pop
shl
outsl
push
inc
out
cs
mov
sbb
sarb
sbb
ljmp
dec
push
lock
into
insb
fwait
xlat
dec
inc
lret
popf
mov
adc
fisubrl
mov
out
cmp
cld
ret
add
push
cmp
xchg
or
sbb
inc
mov
test
add
dec
ja
push
fdivrp
es
sub
pusha
ficomps
or
inc
sbb
inc
mov
test
lds
in
mov
insl
pop
ret
xchg
mov
stos
jb
mov
int
xchg
dec
lahf
movsl
cld
scas
aaa
mov
dec
mov
sti
push
add
movl
insb
or
lods
xchg
adcb
jmp
add
sub
xor
adc
cli
rcrl
vandpd
in
sbb
daa
and
lods
insb
subb
or
xor
out
ret
popf
jo
or
adc
fbstp
les
mov
sbb
mov
and
popf
je
dec
lods
mov
pop
sahf
notl
adc
mov
pop
orb
inc
cmc
shll
test
rorb
out
lret
psrlq
jnp
in
mov
aaa
shl
push
movsl
mov
mov
cmc
jecxz
fisubl
push
pop
pop
sub
sub
cmp
inc
mov
testl
fmull
jp
pop
lods
ret
popf
or
xchg
out
push
sub
cs
or
jle
or
movsl
vpsubq
cld
cmp
mov
cmp
stc
das
ret
add
data16
push
inc
incl
jb
xchg
test
inc
push
xor
cmp
mov
push
leave
aas
adc
das
in
adc
out
in
mov
add
push
sub
xor
inc
mov
cmp
loope
movsb
xchg
imul
xchg
jecxz
ds
mov
lods
sub
push
lret
orl
or
mov
add
fs
mov
xchg
je
rorl
ljmp
addl
or
mov
div
repnz
out
out
inc
pop
jnp
mov
adc
aaa
ret
push
jp
mov
mov
scas
mov
scas
push
mov
and
jae
repz
push
sbb
arpl
jecxz
push
inc
mov
inc
xchg
test
insb
pushf
stos
xor
movsb
xor
xor
push
addr16
cmp
pop
mov
out
mov
add
jo
mov
or
push
xlat
mov
js
xchg
push
sub
pop
ljmp
push
or
jne
push
pop
movsl
inc
inc
ljmp
mov
xchg
jbe
and
dec
mov
cltd
pop
sahf
push
sub
mov
xchg
roll
or
fisttps
sti
in
jl
mov
aas
mov
jae
mov
lods
cltd
dec
cmp
adc
sub
push
shl
mov
mov
jno
test
adc
push
lea
int
mov
test
ljmp
mov
das
std
test
arpl
popl
insl
leave
jmp
sub
int3
push
pop
stos
cmovne
sub
dec
lcall
call
inc
mov
and
add
ret
jo
es
adc
repnz
or
out
inc
jle
xor
in
notl
sti
out
cmp
xor
fwait
std
xor
sub
into
xchg
sub
sbb
mov
in
loopne
mov
stos
mov
push
dec
push
and
push
test
cs
ret
orl
jb
push
jns
dec
ljmp
in
add
mov
das
movsb
insb
pop
cli
lods
mov
call
jecxz
scas
sahf
movsb
and
add
cmp
outsl
push
popf
rcr
addr16
int3
lds
std
xchg
in
push
iret
xchg
or
mov
pop
ret
enter
jg
jl
xor
clc
xchg
push
ljmp
in
aam
imul
jmp
out
push
and
pop
mov
adc
push
pop
dec
xor
lock
sub
push
popa
stos
mov
mov
call
mov
push
out
jl
push
aad
dec
mov
les
mov
dec
xchg
je
je
and
inc
add
lret
xor
mov
jae
lds
mov
scas
inc
pop
xchg
shll
mov
xor
loope
out
sahf
inc
in
pop
lcall
cs
cmp
adc
pop
sub
inc
in
or
shrl
or
adc
adc
lret
pushf
jne
idiv
ret
icebp
stos
mov
add
mov
or
xchg
rcll
xchg
stos
ds
lods
mov
jae
shl
add
stos
cltd
test
push
jbe
inc
push
add
jno
mov
loope
cmc
xor
pop
scas
sbb
add
cld
mov
xor
out
and
cmpsl
inc
test
pop
mov
cwtl
push
cltd
lcall
out
pop
adc
jp
mov
into
add
fnstsw
cltd
pop
aam
pop
jbe
cmp
rol
clc
data16
add
fldl
adc
and
out
cltd
push
ret
cmpsl
xor
shlb
xor
xor
loop
cld
cli
sbb
cmp
sar
loope
push
push
push
fsubs
gs
idivl
sub
and
mov
push
or
out
cmp
jo
sub
in
add
cmp
roll
xchg
daa
jne
sub
mov
xor
or
cmp
dec
add
mov
mov
jp
push
mov
repnz
in
jp
cmp
fdivrp
out
int3
dec
ds
dec
pop
and
mov
inc
add
mov
movsl
mov
xchg
aas
dec
inc
daa
nop
xor
leave
jp
push
push
repz
and
fs
xchg
mov
or
sub
in
in
mov
frstor
mov
push
test
cli
xchg
scas
pop
cltd
fcomps
sbb
sbb
mov
ljmp
das
mov
mov
or
es
pop
aaa
ss
outsl
negb
fstp
adc
xchg
ss
outsb
jno
and
repnz
mov
fmull
or
sbb
mov
orl
sub
cmp
sbb
fidivrl
stos
jns
clc
cmp
jne
cmp
lods
lahf
jne
cmp
imul
push
fnstenv
inc
mov
and
jmp
inc
das
sbb
or
je
add
inc
adc
test
push
mov
addr16
jns
xchg
mov
xchg
imul
xchg
imul
cs
xlat
ljmp
and
pop
iret
push
lret
dec
adc
dec
shrb
cmp
adc
jl
loopne
aaa
test
in
lea
inc
dec
into
adc
cmp
and
daa
and
mov
push
shl
push
stos
aaa
cs
adc
fsubr
fsub
jno
xchg
or
stos
imul
sub
inc
or
mov
out
xchg
test
mov
adc
cmp
lods
xor
cmp
jg
dec
xchg
aad
cld
rolb
scas
dec
arpl
jo
xchg
jbe
in
jb
xchg
xor
mov
fwait
ss
cltd
mov
sbb
mov
mov
push
inc
hlt
mov
mov
test
mov
int3
rcl
push
jo
push
cli
push
or
xchg
jge
lds
jns
pop
push
insl
jno
repz
jae
pop
stos
mov
cmpsl
jg
test
test
mov
cli
nop
ja
and
dec
in
pop
jno
sub
fcmovnbe
add
pop
jp
mov
ret
bound
leave
rclb
pop
jle
sub
mov
xchg
mov
cmp
or
mov
xor
cltd
or
push
imull
and
and
xor
rolb
scas
cmpsb
in
jo
jg
mov
rclb
and
loop
inc
pushf
and
andb
test
xchg
dec
adc
and
xchg
shll
imul
lcall
pop
shlb
leave
xchg
mov
sti
arpl
or
gs
xchg
loopne
lea
cltd
mov
cmp
push
notl
or
xchg
hlt
pushf
sbb
xor
lods
cmpsl
jne
je
cmp
stos
dec
lds
sbb
adc
mov
and
add
jp
add
inc
xchg
dec
mov
andb
mov
dec
dec
aam
jnp
movsb
or
xor
push
outsl
outsl
int3
inc
inc
or
mov
incl
je
add
mov
xorb
add
adc
pop
repnz
jp
addr16
in
ds
sbb
sahf
lock
movsb
inc
orb
sub
and
cmpsb
sbb
pop
and
hlt
lods
repz
push
xchg
loope
mov
mov
cs
je
mov
fidivrl
jnp
in
mov
nop
xor
push
jecxz
pop
cmp
and
lock
add
flds
inc
adc
jns
lds
jl
xchg
repz
call
ficoml
test
ja
push
mov
mov
sub
pop
jo
xor
push
mov
inc
push
pop
cltd
ficompl
xchg
aam
cwtl
loop
mov
pop
xor
shl
mov
mov
push
sub
and
push
mov
lahf
das
adc
push
adc
clc
orl
fst
ret
xchg
and
mov
mov
push
es
push
jmp
pop
or
or
xchg
sti
insb
jmp
adc
in
jge
adc
jno
mov
adc
out
xchg
or
repnz
pop
mov
jp
sub
mov
mov
jge
adc
test
mov
das
lea
std
mov
dec
scas
dec
pop
je
add
aad
hlt
lea
cmpb
mov
mov
popaw
and
rolb
pusha
div
xchg
cmc
adc
mov
movsl
cmp
test
sti
push
fs
psrlq
out
jmp
xor
xor
test
stos
rorb
cld
push
lcall
mov
push
pop
clc
xchg
push
push
jle
pop
pop
add
sub
pop
adc
xchg
inc
sti
inc
fmul
jl
dec
add
pop
or
bound
sti
scas
ja
pusha
dec
jp
outsb
dec
cli
inc
or
sahf
sbb
fstpt
cmpb
scas
inc
daa
dec
and
dec
popf
out
sub
adc
int3
rcrb
xchg
icebp
out
decl
stos
sub
test
and
icebp
mov
int3
xor
stc
in
std
pusha
adc
out
je
xorb
mov
int3
out
sub
dec
lods
add
sub
and
inc
idivl
add
scas
xor
mov
xchg
mull
cmpb
call
jnp
data16
mov
sbb
fs
pop
dec
mov
out
sbb
inc
add
or
jg
bound
cmpsb
sub
ret
or
or
mov
add
xor
nop
dec
jno
jns
lahf
adc
sbb
bnd
fldl
in
push
outsb
or
fs
dec
je
xchg
mov
mov
in
push
imull
mov
pop
fsubrl
scas
jo
out
lds
mov
pop
jbe
mov
mov
js
repz
mov
mov
jae
pop
lret
aaa
mov
add
xchg
dec
and
stos
add
cmp
dec
or
lea
pushf
jp
xchg
push
jge
cli
dec
sbb
cmp
and
jnp
aas
pop
incl
sub
inc
out
cli
mov
flds
jl
scas
cmp
ljmp
cld
push
mov
cli
incl
add
jg
pop
sub
rcll
popa
sti
stos
inc
cmp
addr16
pop
in
aas
sbb
imul
push
cmovg
inc
dec
dec
stos
repnz
xchg
leave
xchg
pusha
pop
stc
or
fldenv
addr16
orl
mov
call
les
in
or
sbb
cmp
dec
sub
sbb
icebp
in
pop
bswap
inc
mov
lahf
dec
mov
out
es
xor
or
test
mov
sbb
add
adc
daa
mov
jg
out
imul
inc
stos
dec
pusha
adc
mov
lret
push
adc
ds
movsl
and
cld
in
cmp
mov
scas
push
mov
pop
das
push
lret
test
or
xor
lds
mov
cwtl
and
and
ss
inc
ds
pop
xor
aad
jg
cld
or
jnp
mov
in
enter
mov
xchg
insl
pop
mov
xchg
jno
xchg
mov
cmp
dec
test
or
ds
sbb
inc
cmp
and
orb
mov
sub
mov
fisttps
adcb
data16
and
scas
cld
mov
out
or
das
repz
fs
cmpsb
insl
jge
negl
xor
xor
outsb
sahf
mov
int3
push
xor
or
test
fs
mov
es
push
mov
push
push
cli
gs
push
cmp
loope
pusha
push
ljmp
rcll
loop
hlt
addb
in
hlt
inc
pop
rorb
push
loope
fwait
sbb
mov
insb
lahf
es
pop
dec
pop
pop
sub
mov
sahf
jmp
test
enter
pop
jno
lret
pop
lds
push
mov
sub
aaa
popa
mov
and
fisttpl
repz
dec
js
or
imul
sub
hlt
stos
push
jnp
cmpsl
xchg
sti
adc
mov
std
cmp
roll
test
xchg
in
xor
daa
pop
stc
sbbl
adc
fildl
ret
push
pop
testl
pop
cmc
mov
inc
push
pop
rcl
sub
and
out
dec
push
sub
addr16
push
push
pop
outsb
loop
mov
jbe
push
cmp
and
out
movsb
rcl
dec
fstpl
sbb
add
dec
jae
pop
and
mov
jne
cmp
xor
xorb
jo
cmp
cmc
xchg
in
and
xchg
enter
lret
repz
sarl
dec
xor
xchg
test
clc
sbb
test
gs
jo
mov
fsubl
cli
ss
movsl
or
jns
xor
scas
sahf
ret
addb
jno
jae
shrb
mov
push
mov
push
test
jne
out
sarb
dec
adc
dec
cld
test
jmp
ss
sub
in
cmp
pop
pusha
mov
and
pop
mov
loope
sbb
mov
pop
xor
sbbb
arpl
in
sub
lods
lret
mov
mov
mov
mov
push
add
jle
ljmp
loop
int3
inc
mov
xor
jae
xor
jmp
or
and
repz
mov
rolb
loope
cmp
clc
mov
push
rclb
dec
adc
jno
and
pushf
insl
jge
cmp
ds
rolb
xchg
inc
lods
cmpsb
jmp
inc
mov
xchg
pusha
pusha
inc
out
jae
ret
jg
and
adc
popf
ljmp
cwtl
andl
or
scas
dec
push
repnz
into
adc
out
loopne
xchg
add
push
sbb
shlb
out
lret
mov
ss
aas
in
and
adc
fimuls
movsb
mov
jge
sub
call
pushf
pop
fs
mov
outsl
stos
or
mov
sub
cltd
insb
mov
mov
or
push
insb
jle
iret
les
push
test
or
fildll
jmp
push
sub
push
enter
ja
jb
movsl
push
xchg
mov
or
mov
ja
cld
xor
insl
out
xchg
inc
xchg
inc
mov
jno
nop
sbb
jp
cmp
rcrb
mov
adc
sbb
or
sarl
lea
push
js
pop
jae
and
cmp
mov
rclb
stc
pop
jge
and
cmp
shlb
std
pop
cld
jne
adcl
arpl
pop
iret
push
sarb
dec
sbb
dec
fcmovbe
mov
jmp
xor
mov
insb
cmp
lea
and
fsin
mov
jl
mov
testb
sub
cmc
add
fwait
lahf
jmp
inc
lahf
js
into
sbb
xor
cmpb
add
ss
jne
pop
pop
out
mov
cmp
loope
jmp
inc
pusha
xchg
jo
stos
mov
push
dec
or
lcall
cmp
popf
rolb
jecxz
daa
aad
or
stc
and
jecxz
cltd
jae
test
addb
orb
adc
jb
cmp
sub
mov
stc
stos
lds
inc
test
push
jns
lods
jne
je
out
popa
cmpsl
stc
sub
lds
jbe
shlb
imul
jae
jp
das
or
add
nop
dec
lahf
sub
data16
dec
pop
add
in
push
pop
jnp
lds
pushf
and
test
push
pushf
jg
mov
cli
aad
pop
add
aas
sub
mov
cltd
jbe
int3
or
add
pop
push
popa
jecxz
jne
pop
push
cmp
movb
outsb
loop
fldcw
push
and
adc
and
repnz
imul
into
xor
and
shlb
inc
mov
pop
and
push
mov
pop
arpl
lock
push
xor
xor
cwtl
mov
sahf
pusha
xchg
testl
shl
or
jmp
pop
push
adc
fsubrs
cmpsl
push
scas
mov
imul
outsl
push
into
in
aad
popf
movsl
push
mov
and
push
jbe
xlat
mov
mov
leave
jo
sbb
inc
cmp
jl
dec
mov
push
or
jne
out
fisttpl
pop
mov
shl
aas
add
js
mov
xchg
cmp
mov
js
jmp
hlt
loop
sbb
cmp
test
push
mov
adc
mov
adc
and
sahf
xchg
fdivr
add
and
or
mov
data16
fs
xor
out
mov
xor
mov
std
jg
jbe
pop
out
lock
mov
and
xlat
sub
mov
mov
cmp
xor
sbbl
jecxz
xchg
mov
notl
mov
aam
lcall
aas
xchg
add
jg
aaa
imul
pop
movsb
repnz
push
sti
aas
and
inc
mov
xchg
add
paddusw
mov
clc
xchg
cmp
stc
add
mov
sub
xchg
fisubrs
add
hlt
sub
and
or
cld
aam
in
hlt
inc
out
ficoms
es
cmp
add
mov
or
insb
or
movsl
adc
mov
xchg
popf
int3
in
inc
push
decb
pop
js
cwtl
fs
or
out
pop
push
mov
in
xchg
loopne
pop
ret
xor
pop
fildl
push
sub
cmpl
cwtl
xchg
loop
pop
popf
mov
mov
mov
cmp
adc
std
pop
xor
dec
jge
mov
mov
or
adc
daa
pop
pop
adc
sbb
cmpsb
add
adc
mov
je
popf
xorl
int3
push
push
hlt
das
pop
stos
cltd
aas
imul
adc
push
mov
and
es
mov
lock
into
sub
inc
movsb
imul
iret
aaa
adc
adc
rcrb
jb
lret
mov
ret
cmpb
sbb
add
hlt
pushf
jmp
mov
in
sbb
fistpll
cltd
loop
pop
mov
js
push
push
xor
aaa
fisttpl
xchg
and
fisubl
call
pop
push
mov
xchg
icebp
dec
xorb
cmp
push
outsl
imulb
mov
mov
mov
mov
inc
and
inc
lods
push
pop
test
dec
fnstenv
mov
jnp
test
push
jle
push
inc
ljmp
int3
lds
insb
or
cwtl
or
shlb
mov
aas
xor
push
outsb
test
shll
lock
in
jmp
jnp
sbb
fimull
jg
cmpsl
in
jae
mov
pop
enter
push
sbb
inc
les
mov
xor
aas
nop
add
cmpsl
ds
mov
in
fnstsw
js
into
aas
enter
push
clc
aas
jnp
lods
adc
movsb
insb
pop
js
insb
and
fwait
ja
mov
xchg
sub
mov
xchg
lea
cmc
push
push
daa
fstps
in
jns
shlb
and
andl
ret
ret
cmp
jp
xor
fcoms
ss
in
jle
shll
inc
push
add
ljmp
repz
nop
adc
lods
jmp
pop
sti
gs
test
cmp
mov
sbb
dec
bound
xchg
or
mov
jns
shrl
outsb
adc
push
lret
mov
loop
in
nop
andl
lcall
sbb
sbbb
test
sub
cld
and
sbb
cmpsl
mov
pop
clc
outsb
add
push
arpl
mov
imul
lods
jne
sbb
mov
mov
imul
pop
or
xor
mov
sub
and
test
aas
sbb
push
rcrl
mov
arpl
movsl
adc
lock
adc
pop
xlat
mov
pop
fcoml
and
pop
adc
addr16
rorb
dec
dec
xchg
sbb
fnstcw
andb
mov
sti
jle
stos
imul
adc
pushf
les
test
jns
jo
stc
push
roll
cmp
xchg
pop
jp
std
xchg
mov
insb
push
push
rol
cli
jp
jae
es
ss
adc
jle
dec
addb
xor
lock
add
and
js
test
in
sub
pop
leave
and
lock
and
lea
lods
sbb
pusha
fwait
icebp
aaa
imul
bound
mov
loop
rcll
repnz
notb
and
jle
ja
cmpb
xor
pop
daa
mov
rcrl
stc
in
sbb
jle
mov
push
lret
xchg
shll
ss
mov
pop
sbbb
scas
mov
shld
loopne
sti
outsb
mov
cwtl
cmp
dec
decb
dec
bound
mov
dec
stos
test
inc
ljmp
fwait
dec
or
pop
fiaddl
sar
aam
and
cli
jg
xlat
dec
mov
movsl
arpl
inc
shl
dec
push
mov
std
dec
mov
mov
icebp
in
ficomps
fwait
cmp
fcmovnb
xchg
stc
int3
lret
mov
cld
inc
popf
call
push
and
pop
outsl
mov
loope
pop
jp
cmpsl
ror
sbb
icebp
sbb
in
add
xor
dec
daa
loop
repz
shll
jnp
push
sti
mov
xor
dec
jmp
mov
lcall
adc
sbb
adc
mov
iret
out
push
push
mov
test
fs
daa
dec
and
cld
mov
lahf
popl
cmp
rcr
insl
cmc
add
enter
outsl
push
insb
mov
out
inc
or
jb
aas
jno
fdivs
das
jbe
pop
fidivl
mulb
ret
hlt
std
dec
out
push
mov
jecxz
jg
outsl
mov
shrl
xchg
jl
cmp
jge
sbb
dec
and
pop
nop
addr16
dec
push
add
push
add
cmp
sarb
jb
xchg
dec
jae
mov
in
sahf
ljmp
scas
shll
repz
stos
jno
add
sti
shrb
cmpb
adc
fdivrs
shl
popf
push
stos
push
sub
int
mov
scas
pop
adc
popf
adc
daa
xchg
pop
hlt
cs
or
shll
sbb
xchg
cmp
jecxz
imull
mov
lods
loopne
hlt
sub
jl
mov
mov
int3
pushf
xor
xor
aaa
add
sub
fwait
pop
push
into
cmp
out
add
das
xchg
fidivs
addr16
xor
jb
sbb
inc
bound
inc
addr16
dec
push
outsl
pop
hlt
xchg
xchg
inc
scas
push
bound
xchg
pop
cmc
aam
push
mov
push
stos
add
pusha
sub
xchg
jl
push
mov
xchg
fists
inc
leave
ret
push
cmp
mov
xchg
in
mov
out
cmp
jl
imul
and
xchg
push
sub
adc
adc
cmp
shll
add
arpl
rcll
je
fwait
sbb
jae
sub
and
mov
inc
mov
repz
jge
xor
loope
push
test
push
add
adc
roll
inc
ret
pop
icebp
mov
stos
or
mov
cmp
fs
add
xor
mov
idiv
mov
jl
test
dec
mov
cld
jno
stos
push
insl
sbb
jge
rcl
xor
cmp
jmp
or
fistpl
cs
or
add
lods
xor
sahf
arpl
xor
ret
fwait
scas
cmp
mov
sbb
sbb
pop
dec
xor
fnstcw
out
add
out
sbb
mov
inc
pop
dec
int
mov
sbb
aad
std
ror
pop
cmp
mov
push
mov
aad
rol
insl
lock
cmpsb
lahf
arpl
icebp
dec
mov
pop
pop
push
ret
int
add
inc
repz
mov
int
sbb
leave
out
or
leave
sbb
enter
cmp
jle
and
arpl
sbb
or
mov
mov
mov
mov
mov
xchg
sbb
jmp
pop
mov
mov
sub
add
rorl
jl
mov
sbb
or
clc
jns
das
xor
push
mov
lea
cmp
sar
ss
jle
aaa
xchg
test
cmpl
adc
mov
loopne
rorb
sbb
cmp
jo
mov
das
sahf
pop
push
jb
mov
sbb
mov
mov
aam
das
or
insb
test
les
lods
jae
lret
int3
int
test
cmpsl
mov
outsb
aad
cmp
test
sbb
pop
push
fdivrs
fwait
xchg
in
jp
mov
and
xor
addr16
mov
sbbb
ficomps
aam
or
mov
pop
jle
test
aaa
das
jo
pop
inc
add
or
repz
rorl
mov
cwtl
mov
repz
cli
incb
jo
dec
insl
mov
xor
xchg
std
xchg
ljmp
cmp
dec
sub
or
xchg
sbb
lret
inc
addb
pop
jp
scas
test
xor
lock
hlt
push
leave
ret
cmpsl
ficoml
mov
adc
push
cmp
lret
mov
mov
mov
adc
pop
add
or
xor
sub
dec
rcrl
dec
mov
add
jmp
mov
les
popa
jge
sbb
bound
daa
xor
in
jne
into
push
es
punpckhdq
sub
lods
xor
mov
and
fwait
push
aaa
jb
xchg
insb
jnp
inc
pop
and
int3
popa
mov
jl
cwtl
mov
dec
or
stc
pop
vorps
or
das
je
push
push
jns
dec
imul
addb
or
popa
push
shll
cmp
jae
incb
xchg
pop
push
gs
sbb
and
pop
pop
lock
push
and
aam
insl
rol
push
fisttpl
je
lock
lahf
iret
adc
sub
sub
pop
or
dec
inc
fcompl
and
pop
inc
jmp
jb
repz
push
ss
adc
cli
adc
loope
lret
cmpsb
dec
sbb
insl
pop
add
cmp
mov
cltd
insl
and
pop
cmpl
cld
lret
dec
pop
js
sbb
lods
xor
movsl
mov
adc
sub
adc
aas
out
mov
int
loopne
mov
jbe
adc
sub
aam
int
mov
and
lahf
xor
lods
jl
es
out
jbe
hlt
cmpsb
enter
scas
or
popa
dec
jg
in
imulb
insb
xchg
pop
sub
notb
cmpsb
cmpsl
xchg
xchg
xlat
test
repnz
and
and
or
cmpsl
xchg
call
mov
jo
add
sbb
dec
mov
pop
adcl
pop
test
xchg
mov
shlb
fisubrs
dec
xchg
es
cltd
sub
adc
decb
jae
inc
xchg
in
sub
jp
clc
mov
pop
mov
mov
jae
push
iret
in
sbb
dec
sub
jb
daa
lahf
push
in
icebp
outsl
add
aas
fistpll
scas
pop
loop
cltd
sbb
xchg
gs
xchg
cwtl
sar
test
dec
xor
stos
push
cmp
add
xor
mov
nop
lahf
mov
jge
decl
ret
rcll
sbb
shlb
aaa
sbb
js
sbb
cli
or
lcall
out
or
pop
inc
and
sub
lret
into
mov
and
outsb
faddl
mov
pushf
mov
insl
enter
imulb
ret
sti
xchg
fmuls
test
pusha
adc
sarl
mov
scas
adc
xchg
xchg
out
adc
outsb
test
js
and
mov
sub
adc
or
xor
in
out
pop
fld
fs
hlt
adc
in
push
loopne
xchg
pop
mov
dec
jp
ja
push
push
push
cmpsb
scas
adc
mov
jae
jg
inc
cmp
adc
orb
fnstsw
ret
sbb
push
jae
dec
or
iret
xchg
jb
sbb
and
push
or
pop
popf
in
mov
adc
je
add
popa
sbb
cmp
inc
mov
gs
adc
add
in
mov
popf
push
clc
out
aad
imul
push
fisttpll
jnp
in
push
out
enter
hlt
push
stos
inc
pop
cmc
xchg
xchg
mov
jns
dec
xor
scas
jns
das
jae
fidivl
shr
movzwl
pop
mov
xor
fadds
addb
xchg
adc
xchg
inc
dec
or
outsb
fdivp
fldenv
sub
push
shl
xor
in
and
nop
jno
rcrb
jmp
int
jae
jne
in
cmp
inc
clc
js
push
sbbl
adc
push
std
dec
sub
test
jno
call
andl
mov
pop
lock
adcl
jge
dec
xlat
mov
cmp
cmc
mov
aas
loopne
xor
fwait
mov
sub
cwtl
xchg
or
xor
cli
ljmp
xchg
popa
ss
fisubl
adc
stc
push
and
aaa
jno
decl
mov
loopne
or
pop
aaa
dec
push
shll
bound
bound
inc
cs
aad
dec
repnz
push
push
jnp
or
imul
pop
test
stos
in
xor
sahf
pusha
lods
out
testl
pop
push
mov
je
pop
jecxz
mov
adc
adc
cmp
ljmp
push
rolb
nop
cltd
xchg
push
jnp
push
pushf
push
pop
ljmp
jae
adc
adc
adc
xor
sub
cltd
sub
cmp
dec
xchg
lods
mov
in
dec
jp
subl
jmp
pop
mov
xchg
mov
popf
shl
xchg
pop
push
js
sub
inc
jge,pn
mov
xor
fdivp
sti
xorl
lea
push
scas
push
push
mov
and
sub
cmc
lds
popa
cmpsb
add
out
shlb
xor
out
rorb
leave
divl
sbb
jno
mov
pop
mov
std
dec
addr16
fisttps
movsl
mov
jmp
fdivrl
test
fcmovnb
cmp
dec
stos
sub
mov
push
inc
xchg
call
add
enter
nop
mov
in
sbb
lret
mov
shrb
mov
cmp
pop
push
pop
std
fcmove
data16
fildl
mov
pop
pop
or
leave
push
push
dec
mov
xor
mov
adc
es
mov
in
pop
push
jb
and
push
mov
fiaddl
push
test
cmpsl
stc
mov
scas
faddl
xchg
loopne
icebp
xchg
pop
xor
sbb
out
cmp
xor
dec
lret
in
out
jecxz
iret
out
in
jmp
sbb
dec
cmpsl
cmpb
movsl
cmpsl
scas
mov
inc
sub
pop
cld
and
push
sbb
jmp
dec
lds
sbb
inc
subb
cmpsb
aas
sub
mov
sbb
dec
mov
xchg
sets
mov
sub
adc
xchg
lret
adcl
or
inc
push
imul
outsl
imul
add
mov
lods
out
pop
call
inc
push
nop
bound
test
idiv
adc
scas
mov
dec
outsl
jmp
stos
mov
out
lds
cmp
insl
clc
mov
andb
imul
inc
idivb
mov
add
jne
push
xchg
and
stos
jnp
imulb
out
movb
and
inc
fldcw
inc
fwait
adc
out
mov
call
lds
lcall
pop
xchg
mov
ja
stos
jnp
add
push
out
mov
out
or
cli
adc
and
or
aam
sub
fisubl
mov
xor
mov
xor
lds
ljmp
and
lret
mov
cltd
dec
push
std
xchg
nop
add
pop
lds
pop
int
jge
mov
cmpsb
jno
pop
cmpsb
xchg
cs
push
into
add
out
imul
mov
cmc
inc
call
addr16
mov
aas
add
xchg
fsubrp
pop
aaa
enter
mov
fwait
pop
lea
dec
pop
loop
cmp
adc
adc
iret
cmp
cmp
adc
imul
dec
movsl
jg
and
cmp
jmp
sbbl
ret
dec
enter
ds
lock
movsl
cmp
mov
inc
pushl
mov
adc
call
in
pop
sbb
cmp
push
hlt
das
es
cld
mov
stos
adc
sub
jle
dec
loope
sub
rcrl
std
shrl
xchg
and
das
mov
jg
push
mov
xchg
sbb
mov
mov
pop
stos
dec
sti
ret
ret
sar
outsb
jle
push
xchg
sub
cli
cmp
sarl
enter
ja
push
add
cmpb
jbe
ljmp
subb
sbb
or
cmc
push
gs
inc
cmp
cmp
xor
ret
jp
bound
lret
mov
lods
pop
xchg
dec
test
ds
dec
and
fwait
movsl
hlt
mov
shll
adc
pop
out
and
jbe
mov
cmp
iret
xchg
pushf
repnz
push
lret
push
movsb
push
mov
mov
push
scas
aaa
fidivrl
inc
les
dec
shll
popa
push
adc
js
bound
mov
es
push
loopne
pop
ds
dec
jg
sub
jmp
pop
pop
insl
mov
jmp
cmp
mov
fsubs
push
xchg
adc
cmp
dec
repz
stos
sbb
aam
push
or
daa
adc
inc
call
mov
icebp
cmp
mov
sti
aad
ljmp
shlb
xor
or
sbb
sub
jl
pop
ret
insb
outsb
add
jmp
xchg
in
mov
inc
cmp
xchg
pop
ljmp
idiv
mov
inc
test
into
ret
sub
xchg
ss
jae
jg
in
push
inc
or
jno
sub
cltd
mov
dec
mov
jmp
in
and
nop
cmp
mov
out
adc
jp
je
subl
pop
hlt
imul
mov
aas
xor
cmp
roll
and
stos
inc
fs
cmp
sbb
scas
pop
jecxz
sahf
sub
cmp
cmp
sbb
jo
dec
inc
shll
sbb
push
cmp
nop
jae
sti
nopl
add
adc
jne
popa
and
pusha
jle
pop
mov
addb
int
jo
mov
or
es
insl
dec
pop
stc
test
shrl
cmpsl
fnsave
jl
repnz
pop
cwtl
inc
or
cld
adc
into
out
imul
jp
jge
loopne
gs
lahf
jmp
iret
add
lock
inc
cmp
and
js
movsb
sbb
nop
cwtl
mov
jno
repz
mov
cltd
pop
cmp
or
cmp
cs
ds
sbb
sub
ret
mov
or
loop
xor
sti
mov
mov
inc
in
pop
call
clc
jno
cmp
push
inc
into
ja
xchg
cmp
mov
adc
add
mov
lock
int3
cmpsb
addl
ret
jp
sbb
loope
adcb
jl
ret
mov
insb
mov
imul
and
xor
frstor
bound
shll
or
scas
push
xchg
jle
sub
rcll
icebp
insb
fwait
out
mov
es
dec
jmp
lods
aam
fwait
dec
inc
movsb
or
ljmp
icebp
ret
out
pushl
jnp
test
lock
lods
jno
popf
jmp
sbb
mov
sub
or
lret
js
pop
popa
fs
pop
xlat
xlat
shlb
push
adc
loopne
or
in
test
dec
repz
inc
and
add
xchg
jp
fwait
loop
push
mov
icebp
mov
mov
ljmp
aas
xor
cld
movsb
out
je
test
out
jmp
fsubl
xchg
mov
sbb
mov
loope
sti
adc
movsb
ret
lods
and
mov
sub
or
nop
mov
xchg
popf
mov
push
push
ja
pop
jne
jns
out
daa
inc
add
lods
das
adc
pop
mov
out
mov
lods
jg
rolb
gs
pop
pop
aam
dec
popf
or
pusha
dec
jmp
and
cmpsl
ja
or
cmpsb
xchg
lret
in
pop
adc
cwtl
push
das
xchg
lcall
and
xor
stos
jb
aam
nop
jns
in
push
or
bswap
pop
cli
sub
dec
push
sub
pushf
pop
pop
or
jne
adc
lock
lods
icebp
mov
jg
shl
dec
mov
negl
dec
jp
cmpsb
mov
in
cmp
repz
adc
das
fidivrl
pusha
jnp
pop
or
into
cmpsb
or
rclb
test
push
fs
cli
aam
mov
cmp
rorb
ds
mov
or
inc
pop
test
mov
insb
dec
mov
insb
std
push
frstor
sbb
push
jb
sbb
mov
test
inc
mov
sbb
dec
in
flds
into
dec
in
fcomps
movsb
sbb
scas
cmpsb
popa
lds
fcmove
jno
inc
popf
jbe
jge
andb
icebp
rcr
in
fstps
aas
fwait
mov
repz
sbb
mov
addb
jbe
es
mov
popa
mov
sub
out
es
rcl
inc
je
repnz
imul
inc
sub
repz
addr16
cwtl
daa
jmp
add
mov
insb
push
out
sbb
fnstcw
jmp
fcomps
mov
xor
cli
ret
sti
cmp
aaa
push
add
push
out
stos
inc
sub
loop
xchg
adc
mov
pop
xlat
pushf
jnp
fstpl
fistpll
or
jmp
push
push
nop
aad
popf
ljmp
mov
push
add
std
pusha
js
jle
shl
push
popl
dec
sbb
adc
fidivrl
xor
and
movsl
sbb
dec
jno
lahf
mov
mov
inc
rcll
dec
and
xchg
add
cli
push
imul
cld
add
dec
aas
add
xchg
insl
lock
cld
outsb
lcall
push
les
mov
mov
sbb
jle
punpcklwd
inc
test
jge
jle
in
jno
rcll
pop
mov
jge
sbb
mov
imul
ss
test
repnz
dec
lea
or
outsb
pop
push
add
push
or
inc
xchg
push
dec
mov
cmpsl
sar
arpl
dec
jb
decb
sbb
mov
push
test
ret
xchg
xor
inc
andl
cmovae
push
fbld
sarl
call
lret
mov
scas
push
into
sbbl
pop
je
jmp
cmp
and
gs
and
loopne
int3
scas
out
mov
daa
movsl
push
cmp
mov
popa
std
dec
cmp
and
mov
pop
sub
jae
imul
stos
add
push
cmpsb
stos
sbb
xor
push
mov
mov
das
repz
jbe
stc
fwait
push
loope
lea
adc
add
xorb
inc
xlat
mov
push
stc
adc
add
cmp
pop
mov
dec
and
jge
lods
js
mov
negl
add
outsb
ja
lcall
das
in
mov
stos
jp
xchg
sub
mov
cltd
aaa
jmp
enter
in
mov
cmp
ljmp
and
jnp
mov
out
sbb
dec
cmpsl
xor
adc
inc
sahf
inc
pop
out
cmp
ss
mov
les
orl
hlt
fwait
stos
xlat
and
mov
rcr
xchg
iret
std
jns
and
in
xor
cmp
pusha
xchg
sbb
fsubs
mov
out
call
aas
sub
mov
fistl
jg
jg
ds
lret
repnz
loop
addl
roll
xchg
shlb
inc
aad
mov
lea
dec
adc
pop
shlb
dec
test
xchg
gs
adc
mov
mov
sti
mov
sti
dec
pop
arpl
jbe
mov
sar
and
fildl
inc
pop
shld
mov
and
ret
push
shrl
ds
lods
in
mov
sub
adc
cmp
pop
push
pop
adc
jb
arpl
sub
add
jo
push
xchg
adc
ror
pop
out
gs
outsb
popf
negb
xchg
into
sbb
sbb
loopne
mov
sbb
jo
negl
fidivrl
inc
xor
push
mov
dec
and
movsb
daa
movsb
add
mov
outsb
sub
and
insl
scas
jmp
repnz
call
sbb
movsl
xchg
dec
and
jecxz
sbb
add
fsubl
iret
pop
sbb
cli
ret
negl
repz
rcrl
xchg
cmp
insl
inc
orl
sbb
lahf
pop
xor
sahf
insl
mov
or
mov
jno
in
cmp
imul
and
lds
out
sub
loop
imul
pop
insl
mov
xor
dec
in
mov
xchg
inc
jge
test
movsl
dec
out
cmp
and
jo
out
mov
sub
bound
push
mov
mov
adc
jb
shrl
push
aaa
lods
push
js
into
add
fwait
adc
pop
sbb
lock
jo
add
ret
xor
leave
mov
in
stos
movsl
xchg
sbb
pop
xchg
in
shll
lods
pushf
lcall
or
push
loopne
pop
test
inc
cwtl
pop
inc
mov
imul
mov
repnz
push
jb
aam
sub
xor
sti
inc
out
pop
cld
test
pop
xchg
add
mov
jmp
and
mov
push
mov
pop
jne
pop
sub
loop
xor
push
rcrl
xor
movl
je
popf
xchg
xor
stos
push
loop
das
inc
sbb
inc
mov
pop
jnp
pop
orl
sub
inc
out
fcmove
sbb
dec
jecxz
sbb
imul
mov
and
or
jecxz
ljmp
lret
std
andb
add
scas
mov
lds
cmp
ds
xor
ffree
into
adc
inc
out
add
sub
adc
adc
add
xchg
mov
cmc
sub
fwait
mov
cltd
outsb
data16
xchg
xor
cli
xor
in
cmc
mov
xchg
nop
sub
dec
insl
mov
lock
mov
or
dec
jle
xor
dec
stc
ja
das
xchg
fmulp
pop
fsubrs
xchg
shr
aaa
mov
sbb
pop
push
xchg
daa
and
lods
rorb
jbe
outsb
dec
arpl
int
ret
pop
jge
mov
or
lcall
int
jl
sub
sub
rorb
pop
add
cs
loope
cltd
add
xchg
jno
shll
sbb
ljmp
sub
mov
sub
adc
aam
mov
lods
sub
repnz
repz
js
jbe
test
jns
jl
xchg
dec
leave
fs
rcl
iret
mov
insl
mov
mov
call
and
jne
fisttpll
mov
fcmovne
nop
or
aad
and
xchg
xchg
and
ret
cmp
jnp
push
hlt
and
xchg
daa
mov
lcall
ret
jge
cltd
dec
cmp
mov
jmpw
movsb
jl
and
dec
push
mulb
addr16
call
xor
clc
mov
scas
jae
ret
xchg
aaa
sbb
sub
cs
xchg
ret
out
jl
pop
insb
adc
add
sbb
lret
cmp
insl
shll
pop
movsl
xor
add
sahf
loope
mov
cmpsl
imul
sub
out
mov
loop
ja
imul
repnz
mov
xchg
shlb
repnz
mov
push
xchg
cld
jle
test
js
hlt
test
aas
mov
popf
push
int3
mov
jl
mov
cld
test
cmp
into
mov
xor
scas
fldl
add
adc
jno
fidivl
into
mov
xor
cmpsb
dec
shl
dec
lcall
dec
dec
andb
sub
popa
test
inc
negb
icebp
clc
jbe
xchg
cmp
js
and
mov
in
sarl
fsubr
es
push
push
xlat
adc
pop
fsubr
cld
iret
mov
mov
adc
mov
lods
cmp
push
pop
jbe
repnz
insb
or
lret
jge
shrb
lea
mov
popa
test
cmp
loop
cmpsb
push
fistpl
pushf
ljmp
mov
jbe
pop
pop
xlat
sub
xor
xchg
sti
sub
call
mov
dec
mov
push
mov
std
and
mov
mov
mov
jbe
fcmove
mov
xlat
aas
mov
add
cmc
mov
test
mov
lahf
pop
mov
cwtl
imul
cltd
js
mov
out
lret
xchg
or
and
cltd
outsb
mull
mov
sub
push
lock
jmp
mov
xchg
mov
ret
stc
bswap
sbb
push
test
jle
sbb
sbb
out
push
lea
and
mov
mov
xchg
adc
jl
pop
data16
icebp
inc
mov
inc
xchg
add
mov
jo
jp
xor
and
aam
dec
push
out
and
mov
xchg
dec
icebp
mov
or
nop
sub
in
inc
ljmp
arpl
orl
inc
hlt
jge
stos
jge
dec
push
mov
add
xchg
fldt
test
lods
xchg
jmp
into
stos
xchg
ljmp
push
ljmp
icebp
scas
and
xor
stos
insb
jge
xchg
ret
lcall
repz
push
xchg
inc
push
aaa
push
jmp
push
lock
pop
xchg
jle
sub
sub
jnp
cld
aas
dec
cmp
sbb
or
jle
xchg
fisttpll
sbb
pop
rcrl
xlat
push
les
jle
pop
movsb
stc
pop
hlt
sub
push
mov
lods
lret
enter
mov
rorb
jno
pop
repz
cli
pusha
and
mov
stos
js
out
inc
adcb
cld
ds
or
lock
imul
mov
mov
int
jl
jecxz
jb
loop
adc
sub
sahf
popa
pop
sub
sub
mov
sti
inc
adc
push
mov
mov
xor
loopne
adc
ja
gs
sub
mov
mov
add
xchg
cmc
jb
insl
push
mov
xor
lock
loop
iret
nop
icebp
add
fld1
push
in
ljmp
rolb
fidivs
andl
adc
jb
imul
mov
hlt
clc
mov
xchg
inc
data16
sub
ja
or
cmp
loope
call
inc
adc
sbb
fcmovnu
add
loopne
lea
sub
repz
dec
and
or
cmp
xlat
xchg
sub
dec
pop
jb
jg
mov
xlat
mov
push
sub
add
xor
jno
lret
cltd
fs
aad
xor
lods
in
fistpl
sub
jecxz
sahf
or
sbbb
cld
mov
sti
out
jbe
lods
dec
lds
leave
or
ja
adc
andl
pop
lcall
add
mov
fdivrl
movsb
push
out
sub
jae
inc
inc
or
ss
sahf
or
mov
iret
inc
les
sub
mov
stos
arpl
mov
push
sub
push
push
add
and
es
cmp
mov
test
call
add
je
jno
repz
jno
cli
loopne
lcall
mov
add
stos
scas
aam
sub
clc
xorb
aas
and
lcall
push
jns
pmulhuw
cmp
jb
push
aam
jp
pop
mov
xchg
out
mov
mov
dec
mov
lret
jmp
mov
cmp
std
add
xchg
add
adcl
or
fisttpl
pop
insl
ror
loopne
push
push
xor
sub
push
sub
cmp
cmp
xor
and
ja
inc
cmpsb
jno
mov
les
cmp
xchg
daa
add
sub
pop
fcomps
sahf
sbb
push
jno
fwait
loope
lea
lods
adc
sbb
fldcw
lds
repnz
inc
jmp
mov
push
aad
or
push
and
mov
mov
add
out
xchg
in
aam
lcall
scas
jle
push
aaa
push
fnstsw
das
mov
jne
dec
dec
add
nop
aaa
das
data16
dec
mov
jne
or
xchg
leave
lock
xchg
mov
xor
out
sbb
cmp
int
fs
sub
shrl
xchg
sub
imul
shufps
mov
aad
arpl
ret
jg
stos
xor
je
lock
jne
push
add
and
inc
cmp
repnz
xor
mov
in
jg
and
repz
add
pushl
mov
or
int
add
push
lcall
push
cmp
mov
or
mov
in
dec
or
cmp
adc
jb
sbb
in
repz
sti
icebp
mov
add
dec
sub
sub
xchg
cmp
mov
sti
fsubrs
icebp
ljmp
mov
jmp
adc
push
fiadds
movsb
mov
call
loopne
aaa
or
sub
cwtl
jg
push
push
fs
inc
jnp
mov
jns
stc
into
jge
mov
xchg
xchg
mov
sub
pop
orl
repz
pop
jp
mov
and
dec
cmp
sarl
mov
push
fdivr
inc
cmp
out
sub
out
pop
mov
dec
test
sbb
je
sti
add
push
enter
mov
test
sub
hlt
cmp
fucomi
cmpsb
addr16
ja
pop
adcl
adc
mov
xorb
sbb
rcrl
in
jb
outsl
jp
cs
mov
adc
les
pusha
fadds
push
clc
push
negl
into
mov
enter
mov
fdivr
jbe
jle
loopne
inc
popf
sub
ret
sbb
ljmp
cmp
iret
jge
ja
or
jns
int
rcrb
mov
inc
test
mov
xchg
sbb
and
xchg
dec
hlt
dec
push
sub
lea
xchg
popa
imul
js
jns
fsubp
pop
nop
jb
mov
cmp
mov
inc
loope
cmpsl
mov
xor
ret
sbb
sub
rclb
scas
mov
and
jecxz
neg
gs
in
fs
arpl
mov
xchg
ljmp
jno
push
fistpl
cmp
leave
icebp
pop
push
xchg
js
frstpm(287
xchg
jmp
mov
hlt
push
aam
and
xor
pop
push
sub
inc
ret
pop
xchg
xchg
test
test
add
bound
scas
sbb
adc
xchg
lret
mov
outsl
adc
push
or
cmp
ret
jp
mov
jno
inc
or
aam
adc
mov
les
es
or
icebp
cmp
sahf
mov
jg
pusha
lock
mov
je
sti
in
fyl2x
mov
in
or
mov
xor
jnp
cmp
mov
xchg
outsb
dec
cmpsb
add
push
test
pop
loope
pop
and
push
jb
test
push
adc
fwait
insl
lods
das
sbb
and
or
and
inc
jg
sti
icebp
shll
repnz
mov
jne
pop
cmpsb
test
pop
arpl
sahf
cli
leave
add
cmp
adc
push
loopne
fiaddl
mul
fdivrp
into
mov
or
jo
push
int3
pop
lock
jno
pushf
add
inc
mov
out
imulb
enter
ret
xchg
sti
inc
scas
mov
popf
mov
and
aas
or
or
or
or
cmp
andl
add
inc
loop
dec
lahf
loopne
sub
out
jb
dec
mov
mov
cmp
or
dec
icebp
jbe
cld
dec
fnsave
jbe
rcll
inc
pop
rclb
dec
mov
imul
movsb
push
imul
push
icebp
adc
vmread
outsb
ja
divl
cmp
or
cld
dec
xchg
aaa
xor
cli
push
lea
mov
mov
inc
test
sbb
scas
inc
sub
daa
cwtl
fucomi
pop
dec
xchg
xchg
ret
cmp
xor
push
std
jge
incl
or
sub
imul
icebp
test
gs
pop
push
in
sub
bswap
into
dec
xlat
enter
or
das
cmpsb
dec
mov
fistps
inc
ja
adc
scas
jmp
pop
in
divl
push
xchg
jae
inc
loope
lock
dec
ja
lock
pop
jnp
xor
jecxz
ss
test
and
in
jl
je
xchg
out
arpl
pushf
mov
mov
out
shll
adc
and
pop
ljmp
mov
loop
fiadds
inc
hlt
sahf
cmp
mov
out
aas
adc
mov
inc
mov
aaa
test
inc
pop
and
aam
cmp
mov
lods
adc
mull
loope
je
push
rorl
ds
into
jg
inc
xor
xor
repnz
push
and
imulb
das
scas
add
out
aad
test
dec
dec
cmp
push
jb
fildl
add
pop
out
pushf
jle
pop
mov
movl
icebp
add
scas
mov
or
std
and
aas
sbb
inc
pop
push
mov
mov
pop
cmc
jp
bound
stos
insl
lahf
mov
imul
cwtl
orl
icebp
nop
arpl
sbb
stc
sbb
push
push
inc
arpl
loope
jle
fsubr
mov
jmp
cmp
inc
shll
cs
mov
add
repnz
jmp
addr16
lods
outsl
cmp
mov
outsl
test
adc
sub
leave
mov
jb
int
sbb
push
data16
out
xlat
fidivrs
negl
jmp
gs
int
insl
dec
mov
fwait
ret
das
aas
repnz
and
or
bound
push
sbb
dec
xchg
sbb
out
int
mov
aad
insb
test
or
pusha
and
sbb
mov
loop
adc
loopne
stos
mov
adc
or
mov
mov
test
sbb
lds
in
popa
pop
daa
pop
mov
and
push
mov
cltd
jmp
inc
fbstp
in
push
and
sub
rol
ljmp
fmull
leave
sbb
pop
lds
mov
out
daa
dec
outsl
cmp
lds
xchg
pop
inc
xchg
push
call
mov
inc
repz
add
fidivs
cmp
clc
std
jne
xor
push
subb
into
daa
mov
jmp
cs
mov
jae
stos
sti
push
add
lods
aaa
xchg
pop
xorl
aad
cmp
out
loope
add
aaa
imul
fbstp
pop
rorl
repnz
xor
lret
es
cli
or
fdivrs
jg
add
push
iret
jno
les
ljmp
in
int3
loope
mov
jg
divb
gs
inc
inc
out
gs
pop
arpl
outsb
mov
rcrb
inc
loopne
jmp
push
cwtl
cmp
int3
pop
loopne
and
ret
stc
jle,pt
les
stc
xchg
test
push
outsb
or
mov
mov
xor
cmpsb
insl
push
shrl
xor
loop
in
ja
dec
cmc
add
pop
add
mov
into
jecxz
cli
gs
adc
icebp
ds
nop
sbbl
pop
push
hlt
jl
hlt
flds
mov
cmp
test
nop
int
and
xchg
adc
xchg
xchg
push
rorl
in
add
push
ss
outsb
lods
sahf
adc
repnz
in
loope
xchg
les
or
push
loop
mull
mov
push
arpl
dec
jne
scas
push
jg
clc
stos
cwtl
lcall
pop
sbbb
pcmpgtb
sti
push
cmp
add
add
mov
enter
sti
leave
xor
js
es
fs
scas
lahf
fadds
insb
sub
movsb
add
xchg
aas
xchg
or
mov
push
cltd
add
lret
jne
loopne
int
add
xor
aaa
insb
add
xchg
mov
mov
xor
or
push
je
mov
aam
push
push
adc
pusha
mov
cmp
mov
loop
pop
imul
rcr
jecxz
aam
lods
adc
pusha
dec
inc
popf
xchg
jo
sub
fldenv
pop
in
mov
pop
sbb
dec
dec
push
and
lcall
fwait
jae
push
stos
rclb
mov
sbbb
fstpt
cmp
pop
cli
mov
xchg
adc
push
call
cmc
pop
cwtl
je
les
pop
mov
call
and
imul
in
mov
xchg
jg
mov
loop
frstpm(287
dec
lods
push
add
dec
sahf
add
iret
repz
out
test
xlat
lds
push
lret
mov
fwait
int
aad
in
hlt
cwtl
in
mov
aas
xchg
aas
add
in
push
arpl
push
mov
add
pop
cmp
int
in
xchg
movsb
cld
fistpll
fsubl
adc
sub
xor
inc
fdivp
clc
aad
sub
or
jnp
add
push
call
xor
dec
add
and
xchg
cltd
sbb
mov
jae
aas
bound
sbb
and
inc
and
dec
rorb
jo,pn
lret
mov
cmpl
imul
sub
pop
or
push
mov
pushf
jbe
aas
pop
les
call
mul
stc
addl
cltd
popf
add
insb
mov
pop
inc
pop
int
icebp
sbb
shlb
push
ret
jae
mulb
mov
popa
cltd
inc
lock
mov
add
imul
mov
sar
sub
mov
out
rorb
cmp
lret
sub
jle
mov
into
dec
jb
fwait
add
dec
std
loop
and
xchg
xchg
jae
les
aad
addr16
sahf
mov
sarl
dec
stos
loopne
notl
or
pop
mov
jmp
jnp
pop
imul
cmpsl
adc
movsl
or
std
push
int3
xor
loope
subl
cmp
sbb
sbb
imul
cmpsb
repz
call
or
outsl
mov
fisttpl
inc
clc
cmpsl
leave
mov
mov
sub
jg
pop
add
stc
bound
xlat
dec
mov
cmp
pop
inc
insl
shrl
push
sub
pop
test
in
cmp
push
sti
adc
dec
dec
cmp
push
sti
xlat
call
inc
xchg
gs
pop
lods
lock
xchg
mov
clc
outsl
dec
and
dec
jmp
es
xchg
push
push
pop
push
and
jle
xchg
lea
dec
jbe
cmp
in
fs
push
hlt
push
mov
orl
add
push
pop
das
inc
pop
ljmp
lea
add
pop
test
jnp
insl
and
das
xchg
mov
adc
lahf
in
mov
or
jl
jno
and
mov
sbb
lods
gs
mov
data16
mov
js
pushf
push
jge
mov
out
inc
stos
sub
cmpsl
mov
es
inc
mov
sahf
shr
lds
sbb
or
popf
add
cmpsb
fcoml
pop
xchg
icebp
idivb
sbb
cmpsl
sub
mov
aad
cmc
in
pusha
fsubr
ret
sti
push
ds
mov
js
sub
divl
iret
and
jmp
push
addr16
cld
add
inc
push
out
add
jns
call
hlt
push
jp
shrb
push
out
cltd
adc
fmuls
push
lret
rorb
lods
loop
fldcw
mov
in
and
inc
mov
mov
fimuls
fisttpll
ja
idivb
jp
sti
sub
outsb
icebp
inc
mov
fistpl
mov
sbb
jo
in
adc
sub
add
fimuls
cmp
lea
gs
daa
jl
cltd
pop
daa
movd
cmp
mov
cld
scas
mov
imul
xchg
push
nop
cmp
adc
mov
mov
mov
or
add
adc
mov
fwait
mov
xchg
repz
adc
int3
xchg
add
sbb
lods
repz
inc
mov
out
mov
pop
js
or
dec
mov
or
jl
xor
aad
add
sub
cmpsl
cmc
xorb
push
loopne
lret
inc
and
xchg
sbb
sub
rol
xchg
adc
adc
loope
jnp
lret
dec
movsl
dec
pop
xor
cli
std
pop
inc
pop
lcall
int3
pop
jno
sahf
je
or
jns
add
or
mov
mov
and
cmp
jnp
pop
mov
es
xchg
lods
decb
cltd
decb
xchg
mov
push
jmp
lret
and
add
out
in
fsubs
stos
mov
ja
insl
jge
pusha
xchg
ret
pop
fsubl
loopnew
sahf
adc
daa
enter
jb
pop
adc
cli
lret
pop
add
xor
scas
aad
add
jle
cs
stos
inc
icebp
push
mov
inc
xlat
jae
jge
jae
rorl
add
xor
lret
jno
into
cmp
out
mov
test
xor
stc
sub
jne
jb
loope
lcall
jno
mov
outsl
mov
and
lret
cmc
add
xor
les
mov
lea
mov
aad
jb
popa
cmp
inc
mov
stc
cli
enter
adc
cmp
mov
cs
jl
mov
sub
int
and
jge
addr16
add
lods
nop
cmp
shrb
sbb
mov
xchg
inc
fimull
xchg
ljmp
fisubl
pushf
out
daa
xchg
adcl
mov
int
add
jmp
lods
gs
lret
cmp
mov
mov
jmp
lods
sti
xor
movsl
inc
clc
mov
and
pusha
push
lret
clc
cmpsb
std
or
clc
xchg
cltd
jb
fcmovnbe
aam
shlb
int
arpl
out
cwtl
fcoms
or
pusha
popa
add
pop
js
in
mov
jnp
adc
xchg
jg
lds
in
adc
sar
jbe
inc
inc
add
lret
add
dec
ds
imul
scas
in
outsl
fmul
jns
xchg
cmp
in
ja
loop
subb
mov
mov
and
cmp
cmp
mov
fsub
pop
into
mov
les
call
negl
mov
pop
scas
push
fbld
dec
xchg
mov
scas
mov
cmp
xchg
mov
arpl
mov
sti
lcall
nop
imul
and
in
cmp
pop
fsubs
das
or
adc
add
xor
dec
inc
mov
stos
lret
jns
out
popf
push
icebp
jbe
add
xchg
insb
jl
add
neg
lds
aaa
adc
and
add
dec
mov
pop
xchg
jb
sub
inc
in
hlt
sbb
and
aaa
ret
scas
adc
lods
aam
add
mov
lret
jne
adc
xchg
into
decl
bound
xchg
jmp
pop
in
mov
and
jecxz
popw
xor
daa
push
or
rolb
popa
inc
sarl
mov
xchg
add
add
push
sbb
dec
scas
mov
cmp
sub
dec
push
outsb
push
push
insb
adc
mov
mov
dec
and
cmpl
test
sub
pop
mov
xchg
imul
sbb
mov
cmpsb
insl
dec
into
inc
sub
cli
sbbb
pop
push
cmp
sarb
rcll
mov
lds
sub
mov
or
xchg
jno
mov
add
into
adc
out
or
paddw
ss
loop
int
sbb
and
mov
leave
hlt
pop
fs
test
pop
and
inc
cmpsb
mov
notl
mov
fimuls
adc
xchg
mov
test
lea
out
jne
add
push
jo
enter
cmp
xchg
or
mov
sti
adc
loop
test
lock
out
shll
push
dec
and
jmp
ret
xchg
xchg
pop
adc
xlat
push
out
movhps
out
mov
dec
pop
dec
ss
adc
lcall
pop
into
popa
out
test
lcall
and
lea
mov
cmp
inc
dec
inc
and
sahf
push
iret
aad
mov
iret
test
pop
xchg
push
and
jge
mov
mov
jp
repz
sub
xchg
inc
pop
jns
or
xchg
out
stc
push
xor
jg
or
and
dec
stos
push
rclb
test
lock
cmpsl
add
mov
rolb
into
mov
jp
hlt
in
add
adc
pop
scas
pop
add
aaa
xchg
inc
imul
and
mov
rol
and
cmp
iret
notl
gs
or
jae
push
and
int3
cmp
xor
inc
popf
xor
or
mov
xor
sub
ret
xor
pop
mov
jp
xor
inc
ss
repz
pusha
xchg
cli
imul
push
pop
cmp
push
mov
fisttpll
mov
shll
push
scas
clc
pusha
ret
cmp
push
mov
in
or
and
loope
and
add
and
cmp
sbb
adc
sbb
push
lds
movsb
mov
movsb
pusha
loop
push
int3
and
mov
inc
rcll
repnz
das
mov
xchg
pop
sub
and
jecxz
jge
mov
cmp
add
xchg
push
aad
iret
jp
nop
outsb
cltd
dec
inc
xchg
or
push
pushf
push
inc
jbe
aaa
mov
mov
adc
popa
push
fadds
gs
mov
add
mov
aas
dec
das
xchg
ja
sti
adc
in
mov
popa
aaa
imul
sub
push
call
add
ret
popa
inc
xor
shl
sub
cli
mov
popa
add
out
inc
cld
in
dec
cwtl
loopne
sbb
dec
adcl
subb
nop
push
out
mov
mov
mov
aas
push
addl
jae
dec
or
leave
jp
ss
mov
fcmovne
scas
stc
pop
sahf
arpl
sub
pusha
scas
jns
sbb
xor
adc
push
lcall
sub
add
mov
push
movsl
sbbb
lahf
sbb
int3
ljmp
loope
sti
inc
xor
push
insb
pop
aam
sbb
sbb
xchg
and
dec
test
ja
stc
mov
mov
test
outsl
mov
out
lods
aam
pop
add
ljmp
xor
cmp
dec
push
popf
je
xorb
pop
sbb
xor
mov
dec
in
xchg
and
sub
mov
cmpsl
mov
div
in
cmpsb
or
outsb
flds
fcmovnbe
cmp
push
je
jo
dec
fwait
lds
les
aad
ds
js
xchg
js
fwait
inc
es
mov
sub
cmp
fsubrs
cmp
cmp
aam
shr
jge
sub
adc
imul
pop
or
jb
mov
jnp
adc
jl
rcl
fstl
mov
mov
setnp
and
stos
cmp
inc
in
test
test
sub
lods
cmpsb
das
fwait
mov
fldcw
mov
sar
mov
push
out
mov
repz
std
jne
push
into
leave
pop
lock
push
ljmp
mov
sub
lahf
sti
int
shll
jl
scas
mov
mov
or
mov
hlt
jno
push
adc
cmp
lea
push
mov
js
pop
or
movsl
jle
sahf
stos
in
xlat
fistps
adc
mov
jne
jmp
mov
push
das
sti
arpl
mov
rcrb
cmpsb
or
and
call
sti
add
ja
adc
in
inc
jmp
push
push
sub
cmp
jge
inc
nop
and
cmc
enter
jbe
addr16
icebp
pop
das
lods
xchg
sbb
ss
insb
adc
jnp
aam
fisubrs
xchg
movsl
push
popa
aaa
pushf
imul
cltd
add
jmp
mov
xchg
or
clc
push
or
movsl
sti
or
shlb
rcr
jnp
mov
add
mov
add
rcrl
aam
jbe
dec
xor
mov
adc
je
xchg
lret
fistpl
sbb
ficompl
out
and
loope
hlt
mov
inc
dec
jne
shlb
push
push
or
ret
cmpsl
outsl
mov
dec
push
loope
mov
fcomip
xor
arpl
sbb
pop
sbb
lods
or
frstor
cmp
dec
and
cmpsb
fdivrs
pop
dec
mov
dec
sbb
bound
inc
stc
out
fwait
jmp
sbb
movsl
pop
xchg
fisubrs
negl
and
call
jmp
sub
aad
insb
lock
push
fs
jmp
retw
xor
mov
and
mov
pop
lcall
jae
jecxz
xor
cwtl
or
movsb
clc
popa
xchg
loopne
add
dec
dec
mov
push
dec
sbb
adc
or
inc
cmp
mov
aas
icebp
push
pop
sbb
pusha
push
cs
add
pusha
out
pop
pop
jmp
stos
or
xor
outsb
jbe
lret
icebp
push
addr16
fsub
dec
pop
push
je
sahf
xorl
or
adc
cmc
dec
and
inc
rcl
movl
push
lret
pop
dec
xor
push
jns
pop
enter
ret
test
pop
bound
lods
call
jbe
mov
das
xchg
andb
iret
pop
push
insl
cmpsl
mov
mov
jb
cmpsl
movsb
fists
ret
jecxz
push
and
stos
xchg
in
mov
mov
arpl
or
pop
adc
inc
mov
mov
add
sbb
jmp
cld
cltd
jl,pt
aaa
pop
xchg
cmp
and
cmpsl
leave
out
fwait
inc
jbe
inc
hlt
xchg
fistpll
jno
xchg
xchg
mull
mov
iret
mov
adc
pop
addl
or
stos
inc
aam
js
jg
aam
inc
sub
and
xor
inc
loopne
inc
add
cs
xor
lret
xchg
stc
jl
push
ds
xor
pop
and
leave
std
dec
mov
xor
pop
sbb
cltd
pushf
fisubrs
xorb
mov
xor
addr16
idiv
or
aad
icebp
or
addr16
cmp
aam
outsl
sahf
ljmp
shll
inc
sbb
or
push
inc
daa
push
inc
or
test
jmp
lds
out
sub
push
jae
sbb
cmp
fs
add
xlat
inc
cs
add
xchg
rcll
lret
inc
mov
pushf
push
jp
fs
adc
imul
out
dec
subb
add
sti
into
prefetchwt1
or
scas
jo
mov
jo
push
jmp
sbb
mov
xchg
ja
rorw
roll
insb
inc
fwait
mov
enter
push
pop
cmp
test
jo
push
sub
sbb
in
mov
adc
sbb
fstps
xchg
in
sbb
lret
dec
mov
cmp
sbb
push
je
jae
xchg
icebp
add
out
mov
jbe
test
jecxz
movsb
test
mov
mov
popa
ds
insb
dec
push
jnp
mov
mov
inc
sbb
aam
ljmp
lcall
fimuls
mov
add
out
xchg
leave
mov
and
sub
cmp
add
int3
or
adc
inc
fistpll
imul
lret
pop
mov
or
add
mov
xorl
in
xor
je
ret
cli
inc
and
dec
imul
popf
out
jle
scas
xchg
pusha
hlt
cmp
push
fadd
inc
dec
inc
cmp
inc
fsts
sbb
dec
cld
in
push
dec
loopne
arpl
jmp
lahf
add
fstpl
cmp
adc
jmp
add
push
sub
shl
cmp
imul
mov
ss
aaa
cmp
pop
cwtl
or
mov
pop
in
aaa
jns
inc
aas
call
dec
dec
and
gs
nop
xchg
fistpl
mov
rcl
and
addr16
test
cli
push
sub
or
in
or
mov
mov
mov
test
mov
decb
int
adc
jmp
push
adc
xor
xchg
sub
shll
jmp
into
pop
shll
mov
or
dec
mov
dec
xchg
js
dec
int3
popf
adc
call
inc
lods
jle
rcrl
loopne
sub
cwtl
lea
mov
orb
mov
cmp
stos
cmp
and
stos
loop
ja
xor
into
mov
sub
xlat
fdiv
in
xchg
or
mov
mov
or
cli
test
pop
pop
lock
jge
negb
mov
scas
lret
add
jns
movsb
jle
sub
jmp
ret
in
add
popl
fwait
popa
int
nop
in
imul
dec
cmp
bound
clc
pop
in
sbb
mov
popf
push
push
popf
popf
add
mov
movsl
out
adcl
dec
addr16
cmp
push
xchg
and
jg
mov
mov
addr16
ret
cmovs
adc
sub
xlat
fildll
jno
fists
fnstcw
das
int3
aas
sbb
jnp
cmpsl
mov
sub
mov
pop
in
push
testl
out
mov
xor
cmp
push
lock
outsb
xchg
loopne
clc
fs
dec
xchg
add
sub
inc
in
js
test
fadds
fstps
subl
daa
pop
nop
daa
adc
adc
pop
xchg
push
orb
test
push
sbb
sbb
mov
enter
cltd
in
cmp
insb
inc
or
mov
xchg
adc
adc
xlat
mov
sarb
push
cmc
lahf
xchg
pop
xor
xor
mov
push
pop
inc
and
dec
mov
loope
addr16
clc
lods
sbb
lcall
pop
and
mov
mov
aad
xchg
outsl
ljmp
pop
jbe
sbb
inc
xchg
adc
cmpsb
push
movsb
cmp
mov
mov
inc
mov
jne
or
cld
xchg
jle
loop
inc
jnp
iret
dec
mov
push
cmpsb
and
stc
out
ficompl
aas
ds
enter
inc
add
popf
int3
xor
mov
pop
xor
mov
and
xor
xchg
ja
sub
mov
lcall
scas
repnz
add
in
cmp
adc
sarl
jg
inc
addr16
sub
notb
jae
and
inc
dec
jb
mov
mov
sbb
inc
sbb
jmp
pop
cwtl
mov
ja
push
add
sar
jo
push
je
mov
and
xchg
out
cwtl
fdivr
pusha
jne
xor
dec
and
adc
mov
fsubs
out
dec
loop
test
push
mov
loop
into
or
push
mov
inc
out
icebp
mov
add
out
mov
mov
insl
mov
insl
leave
mov
mov
push
mov
mov
out
xor
outsl
mov
fdivrl
or
mov
cmp
cmovne
sub
sarb
stos
scas
inc
outsl
sub
jno
out
xlat
jg
std
out
jle,pn
jnp
jne
iret
mov
push
cwtl
mov
push
dec
cmp
mov
addr16
push
mov
adc
mov
mov
sbb
fldl
rol
or
ss
sarb
dec
iret
int
ljmp
faddp
iret
jp
pop
dec
nop
pop
xorl
lock
fadd
fdiv
mov
jno
into
pop
imul
and
add
dec
loopne
adc
push
cwtl
xor
sub
dec
jmp
ja
and
cltd
enter
loop
cwtl
mov
or
adc
sub
mov
jo
cmp
add
sub
stc
fidivrl
pop
pushf
cmc
outsb
dec
es
fidivrl
or
sub
in
jecxz
xchg
mov
sbb
scas
call
jne
jge
push
fisttps
adc
jnp
xchg
lea
add
mov
popf
push
test
loope
xchg
dec
inc
add
pop
dec
dec
montmul
cmpsb
test
lods
mov
cmp
hlt
lcall
mov
lock
in
jg
mov
xchg
mov
imul
cmp
lahf
out
xchg
bound
xchg
daa
xor
out
mov
in
movsl
dec
loope
movsb
and
mov
cmp
xchg
cli
sub
push
dec
in
leave
inc
mov
mov
pop
push
sub
sub
add
jg
sub
scas
jns
fwait
rcrl
shrl
dec
mov
stos
arpl
scas
push
push
out
xchg
jge
xor
movsl
repz
inc
cmp
inc
int3
jnp
jae
mov
mov
in
xchg
jno
push
sti
lea
int
repz
dec
xchg
bound
jecxz
dec
push
mov
jnp
jecxz
loopne
test
jo
sarl
dec
daa
adc
repz
cmp
cmp
jns
outsl
adc
sub
test
aas
aaa
add
aas
out
xchg
int3
sbb
pushl
xlat
mov
pop
adcb
sarb
push
xor
push
ret
pusha
pop
das
rcll
mov
and
dec
popl
xchg
cli
inc
sti
js
lds
repnz
jne
mov
sbb
mov
loope
xchg
shrb
push
scas
cmpsl
pop
rcl
insl
dec
lret
xchg
cmp
les
inc
rolb
lret
repz
mov
cli
testl
lea
jmp
add
and
outsb
inc
jne
adc
mov
pusha
stc
jmp
mov
pop
jne
in
jmp
aad
cwtl
dec
push
cmp
lret
pop
xor
mov
in
mov
dec
xchg
or
leave
mov
cmp
mov
neg
mov
mov
out
mov
and
cmp
or
fstpt
enter
mov
push
sub
mov
dec
shlb
add
fistps
ja
cmpsl
inc
xor
cmp
xor
fbstp
ja
sahf
lea
mov
jne
ja
aaa
ljmp
push
adc
fistl
rdmsr
notl
testl
add
or
xor
mov
dec
mov
xchg
xchg
into
shl
or
jo
xchg
lret
inc
jecxz
rclb
loop
sbb
xor
push
push
in
inc
clc
adc
mov
ds
mov
and
cmpsb
cmp
adc
inc
push
cmp
push
push
outsl
jmp
add
in
ds
int
jne
mov
push
fisubs
mov
mov
jmp
call
mov
pop
jecxz
fcompl
push
pop
mov
mov
out
pushf
xchg
ret
mov
leave
leave
mov
and
fldcw
jp
mov
push
enter
mov
xchg
adc
dec
add
pop
dec
mov
add
pushl
cmp
mov
sahf
and
bound
mov
pop
xchg
adcb
jnp
enterw
mov
and
push
push
inc
in
pushf
push
test
cmp
jno
sbbb
repnz
iret
push
adc
inc
clc
jle
fcoml
mov
lods
or
xor
add
lock
mov
imul
scas
enter
ljmp
insl
cmp
cli
int
cld
pop
les
pop
or
mov
cli
sub
mov
jge
adc
push
inc
icebp
sbb
jge
pusha
sub
xchg
jb
sarb
mov
mov
mov
test
sbb
js
adc
or
xchg
mov
xchg
xlat
and
enter
lea
out
inc
test
pop
lret
mov
xor
xchg
and
repz
out
iret
add
out
fildl
pop
int
pop
das
mov
ss
pop
out
inc
loopne
push
ret
inc
sub
pop
jp
sbb
and
or
loope
pusha
mov
add
adc
int
gs
adc
loope
fists
popf
mov
push
fyl2x
add
stos
outsb
ret
ljmp
gs
lods
jle
xchg
repnz
lahf
push
cmp
fwait
push
sub
jno
mov
mov
jg
fwait
sbb
lcall
ja
in
adc
sub
std
cmp
add
jmp
fwait
dec
jno,pn
ret
xchg
cmp
cmp
xchg
jno
ja
sub
repnz
out
sbb
adc
test
inc
sbb
add
daa
int3
pop
jg
repnz
test
lahf
push
sti
pop
sub
mov
lea
xor
int3
sarl
inc
xor
mov
xor
xchg
je
mov
dec
stos
adc
cmpsl
push
shll
add
jo
pop
mov
in
jae
dec
movl
lods
ss
cmpsb
andl
push
leave
mov
popa
sbb
fsubrs
fistpl
inc
push
xchg
jl
mov
les
ret
cmp
push
cmp
mov
call
test
aas
or
mov
stc
and
in
dec
lods
insb
fxam
mov
pop
cmp
hlt
mov
popa
in
imul
fcmovnb
ret
bound
push
inc
push
pop
mov
gs
push
in
mov
aaa
jp
jns
xchg
pop
stos
clc
mov
adc
popl
divb
pop
dec
dec
stos
add
jp
sbb
leave
xchg
sub
aas
pop
cmc
pop
arpl
add
push
sbbl
mov
sub
imul
ja
insl
mov
mov
dec
imul
mov
arpl
or
sbb
call
fisttpl
fsubr
pop
call
xchg
push
or
addr16
sub
adc
iret
ret
cmp
popa
fdivrl
mov
je
in
ret
mov
test
sbb
adc
jmp
jae
cmp
loope
mov
mov
push
mov
in
xor
sbb
xchg
hlt
pop
and
stc
lret
jmp
ret
cmpsl
repz
outsl
xor
jno
addr16
cwtl
sbb
and
dec
pusha
lods
lret
scas
mov
sub
ljmp
aas
fisttps
xor
adc
dec
jge
mov
push
mov
imul
in
fisubrs
leave
fcoml
xor
pop
jbe
dec
sahf
or
adc
out
movsl
xor
je
pop
pop
fimuls
add
loop
jns
inc
mov
fs
pop
and
popf
jno
fsubs
jno
pop
inc
jnp
cmc
push
jecxz
icebp
adc
ret
xor
shlb
aad
or
mov
pushf
testb
push
mov
sub
imul
enter
in
pop
jge
rolb
xor
call
out
pop
xchg
lahf
bound
les
lock
mov
aas
jne
bound
jns
scas
dec
aas
jno
stos
iret
fs
fwait
sbb
adc
pop
aas
jmp
cmpsl
test
sbb
leave
add
and
cmp
mov
imul
or
sbb
and
data16
imul
mov
inc
mov
push
ds
xchg
ds
fsubrs
add
jnp
lods
sti
call
leave
and
fisubrl
jge
rclb
test
or
push
in
push
sbb
xor
jmp
xor
shrb
add
dec
aas
cld
sti
xor
mov
andb
fnstcw
mov
dec
jne
xor
scas
mov
arpl
push
mov
fiaddl
ljmp
adc
fwait
and
add
sub
sbb
or
mov
mov
int3
xchg
ret
jl
lret
jno
xchg
mov
push
cmp
scas
mov
test
lret
aaa
lea
or
gs
pop
add
repnz
ret
stos
out
cmpsb
outsl
mov
sub
push
lods
into
pop
sti
movsb
cmpsb
add
push
fwait
mov
dec
mov
jmp
sti
xchg
ljmp
push
ljmp
mov
push
mov
sbb
xor
push
push
pop
cli
dec
sbb
fcomps
push
push
mov
push
rclb
es
mov
sbb
mov
leave
in
cld
mov
popf
cwtl
mov
mov
jge
mov
scas
pusha
mov
lret
ret
cwtl
and
push
repz
jno
mov
mov
or
and
add
xor
mov
fisubrs
jo
sbb
or
xlat
int3
jp
sub
inc
cmpsb
inc
sub
icebp
mov
mov
das
or
rdmsr
pop
mov
mov
push
cmp
fs
gs
test
in
adc
inc
out
mov
adc
cwtl
and
fwait
push
out
xor
int3
mov
inc
push
adc
inc
mov
add
int
ja
leave
pop
mov
cmp
ljmp
dec
mov
scas
cmp
mov
push
mov
std
lods
lock
test
pop
js
sti
mov
lods
xchg
jo
xor
cltd
mov
mov
jnp
pop
cmp
and
mov
in
cwtl
mov
incb
inc
add
shrb
lret
lret
dec
jno
push
add
shrb
loope
negl
push
xlat
in
xor
rclb
aas
push
sbb
int3
xor
sub
dec
ror
adc
jb
mov
dec
pusha
punpckhbw
xchg
cmp
stc
cmp
xor
subl
inc
imul
movsb
adc
idiv
imulb
rcrl
mov
mov
mov
pop
mov
pop
jle
add
jb
push
cwtl
sbb
ljmp
dec
mov
pop
test
add
inc
sub
sbb
and
mov
mov
inc
es
inc
xchg
mov
push
aas
cmpsl
and
mov
adc
aaa
call
jg
sbb
div
sub
jae
xor
or
sbb
xchg
fistps
sahf
xor
insl
int3
push
or
mov
in
es
sub
les
ror
pop
das
xor
scas
out
push
xor
dec
xor
lea
adcl
push
dec
gs
scas
or
out
out
mov
imull
aad
xchg
xchg
sbb
mov
mov
call
loop
call
ret
cltd
sbb
stc
pop
xlat
adc
das
mull
jb
outsb
aaa
jecxz
in
push
sub
pop
and
push
jae
dec
pop
sub
loope
add
mov
xor
in
cmp
mov
sarb
shrb
les
lret
and
push
mov
jae
xor
mov
scas
cmpsl
popf
push
cs
int3
mov
pop
mov
xchg
cmp
mov
ret
loope
jmp
je
fiadds
sarl
loope
imul
sbb
movsb
aad
repnz
lods
jge
adc
sar
add
xchg
push
xchg
add
bound
aaa
jg
test
adc
jmp
in
dec
cmp
out
jmp
jmp
scas
mov
dec
push
aas
pop
push
adc
loop
rcr
dec
inc
dec
insl
cmc
xchg
lahf
inc
pop
cli
pop
insb
and
inc
mov
cli
mov
js
pop
sbb
pop
dec
jae
pop
mov
stc
sub
push
popf
inc
mov
dec
addr16
leave
pop
dec
ss
mov
pop
jne
repnz
sub
push
adc
hlt
sbb
enter
mov
idiv
and
mov
imul
test
dec
inc
nop
iret
push
cmpsb
fildl
lret
nop
nop
rclb
dec
bound
jns
add
jo
addl
xchg
rol
or
into
sti
js
shlb
jne
adc
push
xchg
pop
mov
movsb
adc
mov
cmp
add
aas
sbb
sbb
or
mov
push
lods
loop
xor
pusha
xchg
out
and
loopne
pop
pop
jbe
icebp
cmp
fdivs
cmp
dec
or
xor
stos
clc
jg
aaa
dec
add
or
jmp
aaa
mov
jl
pop
cltd
push
lcall
xor
dec
dec
mov
aas
add
rol
jnp
or
ds
pop
in
adc
push
mov
jp
push
jae
loope
dec
outsb
adc
rcrb
in
mov
mov
outsl
or
jnp
nop
cmp
rcrb
cs
stos
js
xchg
fmul
jno
lahf
pop
jg
jo
jle
or
cwtl
xor
xchg
pushf
dec
imul
rcrl
repnz
add
inc
mov
ds
out
and
out
jns
pop
mov
mov
scas
mov
test
add
push
push
aaa
push
xlat
lds
cmp
mov
cwtl
jmp
jp
xchg
lea
add
inc
inc
ds
scas
mov
jno
cmp
bound
lahf
repnz
cmp
into
cli
xor
pushw
sbb
nop
push
inc
int3
sub
push
mov
popf
xchg
and
mov
xchg
lret
mov
loopne
mov
cmpsb
mov
jb
inc
push
movsl
int
pop
fsubrs
ret
lods
sbb
ss
clc
repnz
test
lret
and
and
pop
or
push
scas
xor
aad
xchg
jbe
jbe
adc
ret
jne
jo
mov
mov
mov
push
movsl
in
test
add
mov
in
xchg
std
fsubl
in
add
inc
xchg
and
lods
mov
gs
orb
fdivp
pop
ja
mov
or
leave
mov
scas
adc
les
popa
add
xchg
stc
lods
ss
dec
test
xor
mov
adc
out
lds
movb
jg
shlb
incl
or
roll
test
lods
sbb
jl
and
xor
dec
repz
dec
daa
fs
lret
inc
push
mov
or
in
sbb
pop
and
xchg
inc
pop
scas
inc
jecxz
imul
mov
add
les
and
mov
add
push
cmpsl
dec
inc
int3
inc
out
rorb
mov
mov
add
pop
mov
mov
pushf
and
jae
setle
dec
inc
or
scas
xor
jno
xchg
inc
out
xor
add
mov
movsl
adc
inc
loop
push
dec
push
leave
jecxz
adc
std
push
lock
pop
std
test
cltd
jnp
jnp
inc
cwtl
into
push
lock
fdivs
into
ds
xchg
cmp
pop
xor
dec
hlt
sub
push
sbb
dec
lcall
pop
xchg
arpl
or
xlat
ss
inc
iret
and
sub
in
cli
ret
and
sub
aaa
mov
loope
xchg
push
inc
pusha
fnstsw
jecxz
clc
cli
aam
leave
jns
xchg
lahf
cmp
push
jge
xchg
add
lcall
scas
xchg
pop
pop
stc
jg
in
stos
leave
add
sbb
mov
scas
in
cmp
mov
rorb
pop
xchg
mov
sub
xchg
lods
popa
stos
pop
xchg
xor
ds
hlt
std
aam
push
dec
mov
jns
dec
add
repz
mov
and
jbe
xchg
repnz
cwtl
out
and
in
movmskps
out
pop
adc
xchg
stos
mov
lcall
adc
sbb
pop
test
shlb
ret
sti
or
inc
loope
adc
mov
test
jae
xchg
inc
dec
mov
cmp
movsb
popf
sub
add
jmp
mov
cmpsl
test
push
dec
jmp
pop
jmp
arpl
jmp
cmpsl
bnd
loope
cmpsb
mov
test
sbb
out
push
imul
movl
outsb
pop
stos
mov
stos
jno
es
cmp
cmp
and
bound
mov
add
lods
xor
push
jecxz
jmp
or
push
jns
sbb
push
lods
push
lods
add
mov
jl
xchg
ret
out
out
std
jns
enter
cmpsl
mov
popa
adc
rcrb
in
inc
lods
mov
add
cmpsb
adc
pop
inc
jnp
xchg
mov
push
push
pop
or
test
idivb
movsl
cs
adc
cmp
xchg
dec
mov
inc
dec
mov
lods
daa
and
mov
iret
ficomps
imul
sub
pop
pop
call
fwait
jbe
cld
pop
xchg
pop
pop
stc
nop
lea
jns
fcomps
shl
stos
stos
outsl
clc
mov
rolb
mov
aas
sbb
cmp
or
int
popf
push
sbb
lds
loop
std
xor
loop
ss
sbb
sub
push
int
mov
scas
pop
addb
jg
mov
sub
jno
lss
mov
ret
loopne,pt
mov
int
jl
shrb
fwait
aaa
jecxz
in
fsts
or
iret
loop
divl
fsubrl
jl
aaa
mov
mov
xchg
insl
xor
jle
addr16
int3
sub
addr16
pop
pushf
dec
sahf
fstl
popa
mov
jge
shl
sar
xor
xchg
xchg
mov
test
in
cmp
aad
insb
shrb
repnz
push
mov
andb
scas
push
sti
shl
rcll
dec
pop
lods
lret
lret
aaa
push
push
loop
sbb
mov
add
or
mov
dec
insl
icebp
cwtl
imul
mov
sbb
xor
lds
xchg
xchg
inc
sub
hlt
pop
fcom
popa
dec
jg
loop
push
mov
std
jne
add
sbb
sub
push
subl
jp
inc
mov
inc
scas
inc
nop
lret
mov
fmuls
lods
imull
roll
aam
stos
xchg
mov
cmp
es
xor
push
lea
in
pop
jmp
insl
ds
push
rorb
jp
mov
push
adc
sub
outsb
push
pop
clc
push
dec
dec
rol
shll
jnp
or
dec
and
mov
jbe
mov
push
lods
dec
insl
rcll
jo
jns
inc
insl
in
in
mov
add
cwtl
jge
or
flds
and
add
mov
les
shr
cmp
cwtl
jecxz
push
xchg
xor
sbbl
sbb
sar
and
or
push
je
stc
and
outsb
insl
gs
iret
cmp
cld
cwtl
jecxz
sahf
insb
sbb
xchg
dec
push
mov
dec
sub
adc
xor
rclb
int
lods
repnz
scas
sub
xor
stc
orl
xchg
movsl
or
cltd
nop
or
push
push
popa
push
sbb
in
shl
mov
mov
xchg
mov
xchg
push
adc
inc
clc
repnz
out
and
fidivs
jle
dec
jmp
mov
add
cmp
push
fstpl
lock
ret
mov
and
add
lods
pop
mov
mov
fcmovnu
mull
adc
push
pop
jns
sub
inc
jae
inc
push
stc
movsb
adc
and
or
dec
stos
xchg
cmp
jmp
pop
sbb
sub
addr16
mov
movsl
add
jp
lods
notb
mov
std
inc
xchg
adc
lds
adc
xor
cmpsl
mov
mov
push
pop
mov
popf
cmpsb
fwait
mov
sub
test
push
arpl
cmp
adc
lret
scas
lods
shll
stc
and
js
lret
sbb
mov
mov
lcall
sbb
stc
aaa
test
pop
pop
push
pop
ss
mov
mov
inc
sub
outsl
lock
add
out
pop
std
daa
movsb
sub
jg
mov
inc
outsl
adc
xchg
inc
fsubr
add
xchg
push
subb
sbb
and
mov
jl
inc
outsb
outsb
mov
sub
lret
dec
adc
sub
cmpsl
cltd
xor
lods
mov
out
and
ja
and
sbb
pop
int3
insl
addr16
ja
inc
push
add
and
jbe
mov
xchg
mov
loop
push
cmc
mov
dec
sub
mov
das
xor
sub
jge
push
xor
outsb
mov
xchg
or
inc
sub
cmp
cmp
lret
xchg
mov
jae
pusha
xchg
sub
jge
push
fldenv
xchg
jns
hlt
gs
fldl
inc
sahf
inc
out
aad
mov
into
jle
test
out
rorl
sbb
mov
sbb
mov
dec
jae
repz
imul
xorl
sub
xchg
out
test
push
adc
pop
stos
fcmovnbe
pop
outsb
mov
xchg
mov
add
jb
xor
or
test
loope
inc
jno
imul
aad
xchg
jbe
pop
or
add
and
movsl
xor
cs
stos
xchg
fidivrs
jnp
mov
movsl
dec
jp
and
mov
xor
cmp
out
add
xorl
and
data16
lods
rorl
pop
push
jns
out
ret
mov
dec
pop
arpl
dec
jbe
aaa
mov
jg
sbb
dec
repnz
insb
insl
xchg
push
push
inc
cmp
data16
lea
xchg
clc
lahf
mov
es
imul
jmp
dec
or
dec
push
fists
outsl
rcr
sbb
xchg
or
repz
lret
out
inc
pop
out
push
adc
mov
bound
aaa
movsl
das
hlt
ss
xor
sub
push
clc
adc
mov
and
loope
pop
bound
gs
mov
mul
sub
dec
popa
lcall
out
rcll
cmp
pop
inc
cmp
dec
jb
mov
in
dec
jns
or
aaa
aas
mov
push
push
cli
pushf
es
jge
insl
jmp
ljmp
test
imul
mov
outsl
out
hlt
pushf
lret
out
push
fyl2x
push
and
loopne
xchg
movsb
aad
xchg
and
cwtl
push
mov
sahf
adc
sbb
mov
inc
push
cltd
adc
push
popa
mov
call
call
fs
aad
and
mov
testb
dec
stos
sbb
sbb
test
aas
shlb
dec
iret
adc
sub
mov
add
mov
nop
sub
mov
pop
cmp
xchg
repnz
fiadds
rcrb
mov
xor
jo
and
pop
cmp
push
xchg
adc
mov
aam
cmp
sbb
popf
push
mov
sbb
pushf
jge
xchg
lods
mov
sbb
adc
std
mov
mov
xor
sub
les
test
jecxz
or
cld
rolb
cmp
inc
lret
sub
or
or
xor
dec
fildl
clc
jbe
mov
sbbl
xchg
or
sti
xor
or
mov
xchg
dec
jl
int
cmp
push
mov
lahf
push
push
or
and
popa
xor
icebp
push
xor
stc
push
fimuls
xlat
std
jle
inc
stos
push
mov
div
sar
add
xchg
aaa
insl
mov
or
daa
cld
xchg
push
cwtl
inc
and
adc
xchg
ds
fs
push
xor
ja
push
arpl
shrb
jle
popf
test
push
cmp
sub
in
pop
mov
incl
push
add
dec
popa
leave
dec
mov
test
loop
push
add
outsb
shrl
adc
add
test
lods
int3
dec
pop
xor
icebp
pop
push
daa
hlt
jmp
push
mov
dec
dec
repz
insb
mov
sbb
dec
mov
cmp
mov
movl
or
xor
pop
cmp
sbb
sti
js,pt
dec
mov
pusha
int3
popf
or
cmp
ret
idivl
sub
mov
jne
pushf
mov
sti
addr16
push
pop
dec
or
shrd
orl
shr
add
xchg
adc
iret
addr16
pusha
sub
idiv
inc
cmp
xor
adc
inc
pop
push
push
inc
adc
fcom
xchg
loop
add
bound
shll
in
nop
cmpsl
jmp
mov
jnp
mov
mov
ds
rcrb
bound
imul
stos
sub
lret
mov
in
inc
gs
xor
fnstenv
pop
xchg
es
ds
mov
stos
lcall
aad
or
cld
push
test
or
int3
mov
cld
lock
arpl
mov
jmp
lods
aas
in
fisubrl
lahf
jle
xchg
mov
mov
sti
jb
rcrb
cmp
cmpsl
rclb
cmpsl
mov
jbe
imul
call
in
arpl
dec
push
ja
xchg
jle
xchg
das
or
sbb
push
jmp
mov
push
lret
jno
insl
fistps
push
fs
cmp
adcb
sbb
sbb
loope
daa
sub
loopne
cmp
adc
lahf
inc
or
cltd
xchg
cmp
inc
adc
shll
mov
arpl
lods
in
addb
dec
lahf
mov
add
aaa
dec
andl
adc
in
in
stc
sbb
cld
add
imul
mov
sbb
jo,pt
and
out
pop
or
and
imul
sbb
xchg
or
xchg
popa
pop
into
int3
out
or
and
sahf
cltd
rcl
adc
pop
xor
shr
adc
popa
arpl
enter
mov
jb
xchg
jge
pop
icebp
dec
ret
dec
lea
out
inc
jae
fwait
jecxz
ljmp
adc
mov
mov
outsb
jb
rcll
fcomps
das
sbb
mov
test
ljmp
ja
in
cltd
scas
ud0
push
mov
imul
sbb
jmp
jae
fsubs
sub
imul
pop
mov
add
cmp
xchg
inc
call
mov
lret
dec
inc
dec
arpl
fmull
call
arpl
or
pop
shll
mov
jbe
xor
imul
std
push
repz
out
movsb
xlat
sbb
repz
cmp
subb
mov
fldl
leave
jmp
adc
adc
adc
dec
out
adc
arpl
mov
xor
lea
pop
add
in
jecxz
mov
push
mov
in
sbb
lea
pop
out
ljmp
xchg
and
mov
jns
inc
dec
ds
lock
cmp
and
in
insl
cmp
jecxz
stos
mov
lret
add
inc
push
inc
xchg
or
and
push
ret
mov
stos
push
aad
and
mov
pop
sub
mov
in
and
add
xchg
or
add
loopne
inc
test
fadds
xor
mov
adc
and
cltd
jbe
or
insl
cmp
push
jge
push
stos
xor
adc
dec
fdivrs
or
push
push
in
xchg
cmp
movsl
fimuls
movsl
sahf
push
and
testb
outsl
out
outsl
scas
jns
pop
repz
sarb
dec
mov
xor
sbb
shll
adc
cmp
pop
sti
push
fs
adc
int3
cmc
ljmp
jno
sbb
sub
insb
leave
scas
lret
mov
ret
shll
mov
push
out
adc
cmp
jecxz
js
and
or
adc
mov
dec
popa
lds
mov
roll
add
popa
lahf
cld
das
sti
or
sub
xor
lret
lods
or
cmpsl
inc
xor
adcl
stos
repnz
push
std
cmp
inc
jno
arpl
xor
fisttpl
sahf
push
leave
push
sbb
or
push
cltd
xchg
loope
xchg
lds
lea
bound
xchg
stos
mov
adcb
fstl
jle
fs
fwait
and
pop
fsts
int3
sti
popf
inc
cwtl
pop
cwtl
and
in
or
sahf
sbb
cmpsb
les
adcb
lret
aaa
push
or
aam
xchg
add
mov
mov
sets
js
xor
imull
push
pop
push
inc
pop
xor
fdivrl
or
xchg
sub
subl
jg
adcb
in
lods
int3
pop
pop
dec
fwait
add
sti
adc
pop
ljmp
push
xchg
xor
cmpsb
popa
lea
iret
xchg
xor
daa
mov
addr16
sbb
dec
lea
mov
ret
add
or
cltd
es
jecxz
test
cld
push
mov
lods
cltd
mov
inc
das
clc
jo
sub
pop
jl
popa
mov
jg
repnz
pop
dec
test
xor
push
inc
sar
inc
lcall
xlat
clc
cmp
aad
jle
mov
clc
inc
xchg
jmp
outsb
out
mov
outsl
jne
pop
xorl
adc
jp,pn
lcall
aam
shrb
or
mov
mov
leave
insb
mov
lcall
push
ss
push
sbb
mov
sub
push
jge
in
cmpsb
jle
add
fbld
inc
push
xchg
pop
int
xlat
pushf
add
out
adc
ds
lock
pop
jo
fwait
adc
movsb
fcmovnu
or
cmpsl
sub
jno
cmp
xchg
out
ja
mov
cmp
outsl
xor
inc
out
cmp
xor
ss
xchg
mov
mov
mov
hlt
mov
enter
lds
push
and
dec
push
sbb
pop
hlt
jne
and
sbb
sub
adc
lds
push
mov
lcall
or
mov
jl
sbb
xchg
int3
shlb
adc
xchg
iret
mov
inc
rol
stos
mov
insb
addr16
roll
jge
pop
mov
adc
or
pop
mov
push
dec
aad
jb
movsb
mov
pusha
xorl
sti
push
in
xor
inc
vmovups
ljmp
mov
push
push
mov
pop
jmp
sub
pushl
push
push
mov
xor
in
inc
cmp
cmp
icebp
sub
pop
mov
ja
xor
jmp
in
lds
aam
cmpsb
cmpsb
jo
sarl
jmp
xor
cmc
pop
arpl
mull
cltd
mov
bound
sti
jle
je
and
enter
movsb
movsb
mov
lock
adc
adc
stos
inc
or
sbb
repnz
popf
andb
in
pop
pop
subl
lret
pop
push
leave
std
mov
test
outsb
mov
stos
test
pop
mov
lcall
xor
cmp
cmp
lods
ljmp
xchg
dec
cmp
or
iret
test
jg
push
adc
in
stc
pcmpeqd
and
cmc
mov
outsb
sbb
sub
xor
lea
sub
lahf
ljmp
mov
insb
mov
ret
add
and
and
jno
xor
jno
dec
in
and
outsb
js
cmpsb
inc
int3
push
cs
jp
pop
cltd
jge
xchg
mov
mov
test
insb
inc
in
and
or
xchg
pop
dec
test
xchg
fnstcw
cmp
cmc
lahf
outsb
jge
mov
or
mov
out
xor
xchg
ss
dec
xor
iret
es
pop
pop
jp
leave
mov
out
loop
stc
popf
jecxz
loope
sahf
xchg
xorl
decl
fidivs
lds
xchg
pop
cwtl
or
rolb
lds
xchg
fs
mov
clc
sbb
outsb
cmp
lret
dec
orl
xchg
push
xchg
imul
push
mov
xor
out
mov
push
adc
sub
movsb
sarb
cmpsb
cltd
pop
nop
cltd
push
stos
mov
push
jl
and
cwtl
adc
sbb
lods
push
lock
xor
nop
xor
cmp
mov
jb
int
xchg
ficomps
jecxz
mov
mov
cmp
and
filds
sub
adc
inc
jns
add
xor
das
xor
mov
cmp
mov
rcl
cmp
adcb
xor
dec
movsl
inc
inc
mov
inc
xchg
push
mov
cmp
lock
xchg
cmp
jns
in
xlat
adc
cmp
rcl
pop
dec
jg
stc
shrb
adc
psubb
adc
fcmovnbe
arpl
ljmp
fcompl
out
roll
xor
mov
xor
mov
or
xchg
je
dec
push
aas
inc
scas
lock
pop
rolb
test
insl
add
fldcw
addr16
pop
lahf
add
jmp
pop
or
push
jns
mov
fisubl
fucom
lahf
mov
shrl
cmpsl
cmp
jmp
sbbb
fisubrs
jbe
push
sub
dec
fidivrl
popf
push
mov
pop
arpl
sub
push
es
xchg
inc
into
xor
jp
dec
popa
jo
incb
inc
in
mov
rclb
pusha
lods
ja
mov
sbb
sarl
mov
jb
xor
cwtl
fwait
mov
sti
stc
pop
jbe
stos
cmp
jg
push
fisttpl
jg
shlb
stos
aas
fistpll
inc
mov
std
inc
pop
sbb
testb
dec
or
mov
inc
cli
into
cwtl
push
mov
sbb
dec
sbb
push
fmull
and
sub
lods
sarl
enter
stos
test
js
repnz
sbb
push
fsubl
inc
or
test
jbe
cmp
popf
ja
js
cmpsb
ret
pop
cltd
scas
mov
scas
cmpsl
shlb
or
xor
cltd
push
sbb
cltd
xchg
inc
pop
data16
push
push
dec
mov
fs
adcb
outsl
and
jb
ret
xchg
jnp
popa
adc
sbb
fdivl
xchg
ds
aam
pushf
add
or
jle
sub
addr16
adc
jle
add
mov
movsl
mov
adc
aad
pop
cld
clc
ret
mov
push
add
xor
or
fdivrl
or
xor
cwtl
lds
adc
mov
push
and
push
clc
divl
daa
faddl
add
xchg
sahf
inc
jno
mov
mov
jno
fsubs
stc
sbb
cld
lods
mov
cmp
pop
cmp
js
jg
mov
jo
add
std
loop
adc
clc
fstpt
incl
or
nop
xchg
push
aas
dec
stc
sbb
fsubrl
lds
lock
jne
mov
in
lret
xor
mov
ret
outsb
sub
out
mov
into
stos
nop
sbb
movsl
rcr
stos
sub
push
and
jns
sbb
arpl
mov
pop
fsubs
enter
add
add
divb
sbb
mov
mov
pop
inc
inc
cmp
sbb
js
je
test
ss
out
inc
enter
xchg
stc
das
adc
mov
jl
inc
mov
bswap
cmp
push
iret
push
sub
jbe
popa
mov
ds
xchg
adc
dec
subl
mov
rcl
je
adc
ret
ljmp
jnp
dec
aaa
mov
mov
js
test
inc
jle
xchg
imul
sahf
jo
shr
jns
ret
jge
or
test
std
cmp
fistpll
push
stos
scas
popa
jge
sbb
pop
mov
sbb
inc
out
leave
addr16
fs
lds
mov
and
lds
es
mov
into
bound
ja
out
push
iret
div
dec
fnstcw
fstl
andb
movsb
shrl
arpl
jno
sub
loop
jp
test
and
lret
dec
adc
pop
cmp
incl
adc
xor
mov
mov
ss
xchg
or
adc
mov
xor
adc
bound
dec
fisttpll
testb
inc
push
cmpsb
or
xor
push
andl
bsf
push
xor
push
pop
hlt
std
popf
ljmp
cmpsb
ret
sbb
dec
shll
int
aaa
adc
rcll
or
test
sbbl
jo
mov
sub
addr16
popa
fs
cmp
adc
fcompl
fimull
cmp
adc
inc
ror
jg
mov
ret
xchg
aas
mov
mov
mov
loopne
push
shrl
push
or
mov
lods
add
add
testb
arpl
push
test
cwtl
cs
mov
inc
push
jno
daa
inc
arpl
dec
mov
xor
les
mov
fisubs
outsb
pop
push
push
aam
scas
mov
inc
inc
fisubs
adc
jno
pop
jae
ret
and
out
xor
cmp
or
cli
mov
outsb
pop
pause
sub
lret
inc
test
stc
xor
pop
adc
xchg
and
jns
dec
lret
cwtl
aad
cli
xchg
aam
adc
inc
push
daa
xchg
mov
fidivrl
fcompl
adc
push
data16
out
or
mov
movsl
mov
out
sti
pop
jl
fcomp
push
and
fwait
or
outsb
push
popf
repnz
in
xor
fcoms
stos
fdivrl
iret
fildl
into
jge
test
mov
sti
lea
andl
icebp
out
xchg
fnstsw
or
mov
xchg
pop
popf
dec
cs
lods
aaa
mov
sbb
lods
pop
xor
push
pop
lods
cmpsb
jno
jle
icebp
icebp
lret
or
cli
aaa
lock
adc
push
jnp
pop
jle
jecxz
xlat
scas
cmp
lods
inc
je
ljmp
add
out
and
mov
insl
dec
xchg
adc
sub
nop
out
and
sbb
xchg
repz
sub
lea
cld
xchg
mov
or
xchg
cmp
test
mov
stos
mov
add
xor
out
ljmp
dec
sub
xchg
xchg
fcmovnu
addb
pop
sbb
cld
movsl
movsl
jle
popa
leave
cmp
scas
cmpsb
jno
jno
mov
push
shl
bound
clc
movsl
cmc
cld
out
mov
xchg
jne
notl
mov
sbb
push
fwait
push
cmp
lcall
aad
mov
rcll
movl
inc
jae
sbb
mov
hlt
xchg
mov
mov
in
lret
gs
adc
pop
mov
sub
movsl
adc
push
xor
push
inc
mov
cmp
dec
jg
jmp
gs
movsl
add
jae
push
lret
add
push
jb
movd
mov
fsubrp
movsb
mov
mov
std
movsb
jmp
add
add
and
push
cmc
ljmp
fisttpl
and
sub
sbb
push
push
adc
adc
scas
repnz
lds
movsb
jp
inc
ficoml
bound
shll
sub
cmp
cmp
and
jo
cmp
fnstsw
outsl
cltd
sub
in
out
ds
shrl
and
aas
xchg
jmp
xor
cmpsb
les
adc
jle
dec
stc
scas
mov
popf
cmp
loope
lods
movsl
movsb
clc
xchg
add
adc
lea
lret
mov
idiv
adc
int3
daa
imul
movsb
cmpsb
xor
and
popf
arpl
sbb
cld
rorl
xor
mov
into
setae
xchg
dec
push
xor
faddl
xor
arpl
mov
aas
add
data16
popa
je
push
fidivrs
push
mov
dec
mov
or
jge
xor
add
mov
fwait
inc
jmp
rcr
aad
fmul
repz
and
dec
inc
dec
nop
mov
das
loope
push
mov
leave
push
mov
add
mov
push
pop
lcall
fisttpl
stc
and
and
rcl
mov
lods
mov
xor
add
or
xchg
jnp
daa
push
dec
dec
mov
fwait
cmp
in
test
xlat
ret
lret
mov
cwtl
dec
or
fistl
lods
or
gs
cmp
inc
push
jno
cmc
sub
cmpsb
iret
mov
or
mov
pop
cwtl
js
mov
cmc
ljmp
fcompl
mov
push
rcll
call
jne
adc
cltd
lret
icebp
mov
cli
bound
out
dec
inc
icebp
adc
jnp
jmp
sbb
xlat
mov
sbb
iret
sbb
cmp
fbstp
jo
add
jb
mov
lret
sbbb
in
cltd
pop
dec
cld
mov
hlt
popf
jnp
xor
ja
jb
mov
push
sub
mov
jbe
stc
outsb
jmp
xor
or
out
jmp
push
loope
dec
cmp
inc
mov
lock
inc
in
imulb
ljmp
test
ljmp
inc
xchg
mov
test
cld
jae
je
out
sub
ret
mov
pop
cmp
shll
rolb
push
mov
inc
imul
and
add
call
mov
xchg
leave
mov
call
mov
sbb
sbb
push
aam
lret
test
xchg
stc
pop
inc
shrb
arpl
pop
xchg
data16
loope,pt
dec
mov
sub
das
aad
xor
in
dec
pop
mov
andb
iret
cmp
and
inc
jne
stc
jb
sahf
add
movsb
ret
cli
cwtl
aas
push
inc
inc
pop
aam
test
sub
scas
add
add
inc
jmp
das
lret
push
xchg
xchg
mov
sti
mov
rorb
in
fildll
aas
pop
je
jg
loop
adc
jle
fcoms
dec
aaa
mov
into
jns
fwait
push
jle
mov
lss
mov
shl
int3
pusha
andb
jnp
popa
jo
jecxz
rcrl
test
dec
mov
data16
inc
nop
xor
xlat
sub
or
pop
test
cmpsb
fldt
ror
stos
mov
xchg
xor
xor
cmpsl
or
dec
xor
add
in
mov
rcr
les
aam
das
jns
sbb
imul
mov
push
lret
mul
mov
dec
mov
test
and
push
fildl
loop
adc
add
xchg
inc
sbb
in
xchg
dec
ret
pop
loope
push
ss
jge
fists
mov
push
in
sbb
sbb
push
daa
xorl
mov
xchg
add
sti
mov
out
pop
mov
rol
fwait
aaa
pop
je
pusha
adc
ret
fstl
dec
push
out
cli
jle
pushf
rcll
mov
lea
pop
nop
enter
or
sub
stc
xchg
inc
dec
lahf
and
scas
xor
add
cmp
or
pop
dec
repz
fistpll
push
cmp
aaa
cmp
push
mov
stc
jnp
jmp
fwait
test
lds
sahf
mov
lods
lcall
movsl
das
jg
sbb
inc
mov
inc
pusha
jno
ja
popa
movsl
mov
inc
mov
mov
lret
mov
xor
scas
cmpsb
dec
xor
add
popf
fists
inc
dec
psubsb
jbe
jge
fisubrs
icebp
lea
pop
fcompl
pushf
sti
or
vandnps
push
xchg
sbb
cmpsl
outsl
xchg
sub
gs
dec
add
or
and
mov
xrelease
mov
pop
cmpsb
int
sti
xor
stc
adc
pop
nop
mov
pop
sti
enter
pushf
cmp
push
cs
lds
mov
add
jl
mov
outsl
xchg
popf
int
dec
sub
std
inc
ret
cmp
or
jg
gs
shll
outsb
jns
loop
scas
dec
cmp
sub
cli
dec
lret
hlt
dec
jg
inc
mov
mov
push
mov
inc
inc
out
xchg
scas
adc
out
jmp
adc
sti
loopne
aaa
jb
pop
arpl
shll
insb
dec
pop
lods
addr16
filds
jbe
jmp
das
inc
dec
imul
xchg
xor
mov
ret
aam
lods
inc
lret
xchg
in
sub
std
frstor
lods
outsb
xlat
fstpl
jns
repnz
sahf
pop
ds
int3
pop
pusha
fcomps
pop
dec
and
popf
insl
sbb
mov
push
mov
lods
mov
dec
xor
lret
mov
push
push
fcomip
outsb
hlt
test
in
inc
cmpsl
nop
dec
test
into
test
push
mov
jo
les
xchg
arpl
sbb
jo
test
jbe
aam
shl
sub
mov
insl
in
outsb
inc
je
mov
sbb
push
inc
fcomps
xchg
stos
les
jle
cltd
mov
mov
not
jnp
scas
enter
push
pop
add
push
inc
xchg
lret
mov
jmp
sbb
or
test
mov
mov
push
je
push
aad
ja
add
shlb
roll
xchg
jnp
or
in
or
lahf
adc
push
pop
sub
inc
cmpsl
jnp
daa
popa
add
sbb
pop
mov
adc
movb
frstor
and
icebp
shll
ror
outsb
cltd
and
shll
adc
ljmp
imul
jmp
mov
jp
adc
loopne
fwait
orps
or
xchg
lret
test
stos
mov
imul
adc
ss
into
cmp
adc
mov
cmp
leave
mov
out
mov
lods
sub
out
into
xchg
pop
bound
sbb
mov
hlt
pop
and
cld
jae
mov
xchg
dec
mov
or
xor
xchg
imul
xchg
add
test
shlb
inc
hlt
sbb
js
cltd
jo
inc
rolb
call
enter
out
int3
jl
mov
mov
movb
sarl
mov
sub
push
cmp
or
push
cmc
ret
divb
loope
xchg
mov
lret
mov
mov
ficoms
mov
lret
pop
xor
mov
or
or
mov
dec
adc
jb
in
aam
lahf
pop
push
jmp
inc
dec
movsl
test
pop
dec
inc
shlb
cmp
gs
iret
fsubs
mov
or
mov
dec
xor
lock
sub
jnp
push
or
xchg
mov
mov
cmp
imul
dec
out
push
andb
and
add
mov
mov
lds
lock
xchg
test
jmp
cmp
and
int3
xor
cmp
mov
mov
push
jecxz
rcr
xor
fistpll
div
clc
rolb
lret
lods
aaa
imul
andl
and
js
shl
or
enter
mov
imul
and
add
outsl
jp
pop
and
aas
adc
lods
clc
xchg
ret
and
push
or
adc
xor
into
push
sbbb
movsb
popf
movsb
dec
fiadds
cwtl
cmc
lods
add
sub
mov
jmp
dec
mov
pop
jbe
cmp
sub
pushf
dec
mov
or
jo
enter
inc
xchg
lcall
data16
cmp
add
lds
push
aad
movsl
cwtl
cld
xchg
std
xchg
sbb
or
sbb
fcoms
xor
dec
jge
push
rorb
test
or
cmp
mov
sbb
push
popw
push
mov
movsb
shrb
aas
mov
jmp
dec
mov
push
inc
mul
dec
xor
xchg
add
jle
dec
inc
and
stos
shll
cwtl
cmp
stc
dec
cmp
or
in
mov
mov
sub
sbb
push
je
push
or
movsb
jp
xchg
and
scas
je
inc
test
sbb
mov
cmp
aam
sbbb
inc
out
addb
loop
mov
inc
dec
sbb
out
stos
push
sub
int
adc
call
sub
ds
int
mov
mov
pushl
ljmp
xor
add
gs
js
in
inc
test
lods
clc
out
mov
jo
icebp
inc
pop
enter
not
xchg
das
push
mov
push
mov
and
out
mov
std
add
movsb
dec
xor
fmul
add
enter
cmp
leave
mov
aaa
int
lcall
lock
pop
fbld
push
and
jb
shll
xorl
in
aaa
or
pushf
mov
add
es
cmp
add
jmp
pop
and
rorb
insb
pushf
sti
cmpsb
jae
out
xor
or
mov
fadds
fdivr
cmp
jnp
sub
in
add
xor
fstp
out
inc
dec
movsb
dec
loope
dec
mov
sub
out
cmpsl
push
add
or
test
inc
fucom
gs
push
ljmp
popa
cli
fldcw
mov
rcll
into
push
xchg
xchg
inc
stos
xor
in
mov
test
adc
nop
adc
sbb
adc
jmp
mov
cmp
add
jbe
lods
dec
shrb
jnp
and
mov
andl
xor
insl
pop
fidivl
scas
add
nop
ljmp
add
sti
into
ror
mov
loopne
and
xchg
sub
inc
mov
add
test
into
fsubl
jo
sub
loopne
and
fbstp
xor
ss
add
sbbb
fsubl
dec
pop
xchg
rorl
and
mov
int
rclb
push
cld
stos
inc
cmp
pop
hlt
cmp
pop
and
cli
push
cld
pop
and
mov
dec
insl
das
shll
add
rolb
and
cmp
cmp
stc
lds
and
fs
cli
xor
repz
test
lds
arpl
les
xlat
lcall
xchg
and
into
xlat
xor
pop
or
aam
jno
popa
push
jp
jb
aam
out
std
mov
sub
sbb
push
sub
arpl
jle
ja
das
scas
jae
orw
lea
sub
dec
aad
dec
outsl
mov
xchg
test
xchg
push
xorb
mov
icebp
sbb
xchg
mov
bound
fstpt
imul
inc
jecxz
jo
sahf
sahf
in
or
adc
add
lock
leave
mov
lds
movsb
enter
test
push
into
int
or
daa
aaa
fcmove
out
ret
mov
or
out
inc
pop
lods
inc
mov
sbb
clc
dec
jge
dec
test
call
scas
insb
sub
test
cmp
jno
and
cli
sbb
das
ss
xchg
das
arpl
inc
or
push
hlt
iret
push
insb
adc
inc
cmpsl
mov
cmp
fs
ret
jge
jbe
cmpxchg
xor
imul
stos
dec
out
pop
call
inc
repnz
loopne
in
push
inc
lods
sbb
or
popf
das
ds
popf
fsubrs
push
ljmp
or
sub
adc
sbb
negl
sbb
int
aas
dec
sub
mov
xchg
or
stos
xor
stc
mov
inc
xchg
dec
lods
cmp
aad
jle
into
xor
sbb
fiadds
out
push
and
jge
test
out
fs
xchg
and
mov
stos
loopne
cli
add
mov
rclb
pushf
data16
aad
jle
add
imul
mov
xchg
inc
push
cwtl
adc
cmp
push
add
sub
divl
xchg
es
pop
mov
inc
xor
sbb
sub
int
in
scas
lods
inc
insl
fsubl
sub
cs
leave
ja
ja
ss
popf
push
cmpsb
xor
enter
mov
xlat
lret
xlat
push
dec
pop
inc
mov
bound
notl
mov
daa
sbb
mov
jle
stos
mov
fisubs
jbe
mov
addr16
imulb
xlat
dec
jecxz
outsb
popa
xor
and
mov
cmpsb
mov
mov
mov
jae
push
jae
pop
arpl
inc
inc
mov
jecxz
in
cmpsl
std
imul
lret
cwtl
daa
sbb
xchg
xchg
clc
inc
mov
mov
addb
add
dec
test
call
push
out
pop
cld
and
sbb
cmp
in
and
push
inc
inc
pushf
xlat
add
sbb
jg
and
lret
xor
push
ds
inc
pop
repnz
xchg
cmp
mov
int
pop
sysexit
jg
jge
pop
jb
cmpsl
push
aaa
int3
repz
push
or
mov
pusha
adc
push
fadd
mov
fwait
leave
inc
test
es
scas
mov
xor
mov
fisttpl
mov
sub
ret
adcb
jne
xchg
loop
xchg
cmp
int3
pop
das
test
int3
inc
out
and
mov
pop
cwtl
lcall
lret
fs
ss
xchg
sub
pushf
addr16
mov
roll
mov
jp
sbb
ja
fldt
mov
sub
arpl
adc
popa
outsl
shll
cmp
adc
std
mov
inc
push
imul
aad
sbbb
or
lret
shll
sbb
addr16
sbb
out
pusha
cli
mov
sti
ja
jmp
hlt
nop
icebp
repz
cmp
loope
inc
push
cmp
into
hlt
stos
frstor
push
add
pop
jo
out
sti
and
add
xor
sbb
xchg
into
fnsave
lds
je
scas
jl
loopne
bound
push
inc
or
push
lods
mov
adc
jmp
out
inc
add
xor
mov
es
push
cmp
mov
xchg
movsl
insl
jne
rdmsr
jb
imul
mov
mov
bound
ret
push
arpl
sub
adc
popf
dec
sti
and
pop
mov
test
cmp
push
adc
arpl
push
inc
loope
sbb
and
test
dec
pusha
fdivr
jmp
push
xor
push
dec
xlat
mov
jg
and
fsubrs
cmpsl
outsl
es
bound
pushw
jne
inc
outsl
and
scas
ss
loop
cmp
ja
jns
inc
mov
outsl
mov
inc
jo
ja
jno
xchg
jg
xchg
mov
xchg
push
push
mov
push
lret
pop
jge
inc
repz
add
push
inc
decb
mov
mov
add
lret
into
sbb
cmp
ja
mov
arpl
test
stos
or
popa
xchg
lea
movsl
ljmp
daa
fisttpl
nop
jmp
sbb
imul
jno
push
subb
pop
scas
sub
incb
cmp
dec
int
das
adc
and
mov
xchg
dec
xchg
stc
shll
ljmp
cmp
sbb
mov
or
lret
push
adc
adc
in
xchg
and
fistps
mov
adc
movsl
ret
outsb
xor
sub
inc
lds
xchg
pop
sbb
mov
jne
sub
adc
jb
call
jmp
and
bndstx
mov
pop
mov
mov
nop
push
mov
mov
or
add
xchg
repnz
adc
jge
in
sub
jecxz
icebp
mov
push
fnstsw
sub
lret
outsl
and
insl
in
fisttps
xchg
add
dec
jge
lods
je
mov
out
ss
xchg
out
dec
fstps
daa
andl
sahf
imulb
mov
lahf
fists
sbb
pop
divb
dec
lcall
inc
push
jo
and
mov
imul
or
adc
and
int
push
xchg
das
mov
addl
jmp
lods
cmp
adc
dec
adc
push
ja
mov
inc
int3
lahf
pop
jo
add
add
stos
lcall
ret
jae
xchg
sahf
lret
repnz
xchg
ljmp
aam
nop
inc
enter
mov
sahf
mov
sbb
xchg
stos
xchg
fidivs
jb
sbb
xchg
and
sub
popa
jb
dec
in
mov
aas
stos
jae
add
fdivs
pop
lods
pop
rorb
sub
push
and
adc
mov
rclb
ja
inc
mov
imul
xor
stc
add
int3
xchg
sbb
lods
out
mov
add
scas
addb
pop
psrad
push
cmp
dec
xor
jp
xor
xor
daa
cld
cltd
aam
je
negb
int
shlb
mov
sbb
dec
dec
loop
ljmp
push
xchg
cmp
leave
pop
jge
insb
xor
pushf
xor
xchg
push
or
dec
jl
mov
dec
pop
mov
mov
jl
outsl
or
sbb
sti
sub
into
loope
push
movsb
sha1msg2
test
int
jecxz
js
dec
jmp
test
jnp
sti
adc
stc
ds
out
scas
xor
adc
push
fwait
dec
sbb
outsb
mov
mov
in
adc
popf
test
jb
xchg
push
pop
das
shll
iret
xchg
out
iret
mov
xlat
popa
fs
insb
mov
loop
lea
pop
mov
pop
std
dec
das
loope
mov
mov
fildll
cmpb
das
mov
iret
pop
cmpsl
mov
into
jns
inc
xchg
std
pop
pop
arpl
mov
aam
popf
movsb
sub
in
add
adc
push
ljmp
pop
mov
dec
cwtl
sub
mov
insl
imul
bound
sub
xchg
adc
in
jne
inc
and
mov
dec
movaps
pop
jno
mov
sub
inc
pop
hlt
mov
cmp
xor
pop
cmpsl
aam
push
cmpsl
add
push
sub
push
orb
daa
pop
in
out
out
into
mov
add
adc
imul
test
jne
mov
pop
add
and
fwait
mov
cwtl
imul
add
stos
dec
xchg
in
pop
pop
orl
jmp
adc
sub
ja
gs
pop
cmp
movsb
ss
push
xor
lock
and
sbb
push
xor
mov
inc
dec
adc
mov
fdivr
xor
lret
pop
imul
xor
xchg
loope
cmc
cmp
js
mov
test
jno
adc
sub
fprem1
dec
in
pushf
lock
int3
push
in
ss
fdivr
mov
jl
adc
icebp
sub
js
bound
sbb
sti
in
hlt
ljmp
mov
test
lret
sub
adc
sbb
rcrl
xor
fldenv
mov
jmp
inc
lret
lea
ss
add
adcb
or
lret
xchg
pop
lret
ds
pop
xor
xor
mov
fbld
cmp
cmpsl
mov
push
inc
jae
cmp
stos
dec
stos
test
push
or
xchg
sti
insb
adc
xlat
pop
cmpsb
pop
and
popa
loope
lahf
daa
ret
movsl
mov
lea
insl
xor
lds
or
xor
or
and
dec
sti
pop
cmp
test
xchg
sbb
xchg
nop
add
mov
jne
mov
sub
shrb
mov
stos
movsl
or
lahf
std
jg
mov
stc
push
sub
iret
sbb
mov
stos
sub
xchg
ja
das
fldcw
in
cmp
notl
gs
mov
mov
xchg
xchg
in
sbb
pop
flds
movsl
inc
cmc
xchg
sub
or
xor
mov
addr16
cmp
pop
dec
adc
mov
xlat
adc
or
ficomps
out
jbe
je
cmp
xor
cmpsb
test
aas
fucomi
cmp
aad
cmpb
insb
and
stc
mov
mov
aaa
jnp
lahf
push
jl
clc
loop
cmpsb
sub
adc
andl
fnclex
mov
shrb
aam
cmpsb
jbe
sbb
mov
push
add
pop
jnp
mov
push
out
or
pop
mulb
cmpsb
test
aaa
fs
loop
ljmp
jno
mov
mov
scas
dec
jmp
jp
movsb
enter
adcb
mov
inc
fsts
jge
mov
cli
pop
aam
scas
cmp
xchg
enter
sub
push
dec
insl
jo
int3
push
out
mov
bound
mov
jge
add
jns
mov
mov
push
fs
aaa
test
sbb
outsb
sbb
lods
into
lods
cli
mov
shlb
fbstp
call
mov
sahf
lds
xor
mov
and
fwait
ljmp
fidivl
stc
scas
mov
mov
add
or
call
mov
das
cmpsb
stc
xchg
les
hlt
push
das
inc
pop
xchg
or
test
cmp
cmc
out
inc
sbb
hlt
jne
aad
lods
mov
js
mov
mov
jp
pop
xchg
xchg
add
jle
xlat
lock
xor
push
and
adc
jecxz
xchg
das
out
inc
sahf
and
daa
shll
mov
add
jp
push
mov
sarl
cli
jecxz
into
lret
jle
mov
sub
je
fcmovbe
xor
cmp
icebp
and
sbb
dec
insl
rclb
mov
clc
inc
mov
mov
data16
jle
dec
fists
loop
popa
aaa
aaa
pop
addr16
or
add
adc
fistpl
call
or
add
add
add
mov
dec
push
in
fcmovnu
sub
pop
jne
daa
iret
jecxz
push
mov
popa
add
cmp
jae
insl
ds
outsl
xor
jae
addr16
push
lahf
mov
dec
leave
in
lahf
loopne
mov
lret
push
leave
ret
pop
push
xchg
push
stos
lds
pop
sbb
xor
les
mov
addr16
inc
pop
dec
das
lods
mov
xchg
pop
add
fcmovu
pop
dec
sbb
mov
and
ret
sub
outsb
pop
int
in
adc
xchg
adc
nop
and
subl
aad
mov
inc
lret
dec
cmc
mov
pop
mov
fnsave
imul
fs
adc
jg
pop
jmp
mov
and
repnz
pop
dec
sbb
std
jne
adc
fstpt
dec
dec
push
mov
sarl
in
sub
dec
jp
mov
fcoms
push
sub
push
aam
int
imul
int
jp
push
ret
mov
cmp
imul
add
divb
sub
xchg
into
test
or
pop
pop
mov
cs
lods
lea
mov
pushw
mov
mov
cmp
push
cmp
jno
fstp
inc
jmp
.byte
.byte
dec
jnp
inc
add
add
or
sldt
add
add
or
add
add
inc
add
incl
cmovo
sub
imulb
push
push
cli
mov
sub
ret
sub
mov
jne
test
mov
je
sbb
and
add
popf
movsl
outsb
inc
xchg
jae
dec
pop
add
and
sub
xchg
or
mov
adc
add
scas
in
fsubs
sahf
or
popf
jmp
sub
fldenvs
xchg
mov
mov
lcall
js
push
adc
clc
fstps
popf
jge
mov
lahf
dec
popa
mov
cmp
std
aas
jl
hlt
test
dec
xchg
cmp
mov
mov
cmp
nop
dec
in
adc
aas
add
pop
cwtl
fstpt
or
xchg
or
ja
add
stc
adc
xchg
cmpsl
popa
fwait
add
mov
pop
aaa
andb
push
jnp
pop
fistl
and
cli
sbb
cmp
mov
lods
mov
dec
sub
daa
cmp
movsl
adc
mov
jecxz
imul
add
ljmp
pop
mov
ret
mov
adc
lret
xlat
inc
mov
lods
out
jg
lret
xor
in
sti
xchg
push
mov
add
fistl
scas
bound
mov
repnz
xchg
bound
sub
cli
jmp
aaa
test
sub
rorb
mov
cmp
sarl
dec
inc
sti
scas
xchg
call
adc
lods
imul
add
mov
sub
xchg
jno
cmp
std
mov
jae
push
pop
out
adc
mov
inc
cmp
or
lds
lret
hlt
push
xchg
adc
dec
mov
mov
mov
call
mulb
pushf
sub
call
xchg
jo
lock
repz
adc
stc
xchg
sub
popf
sbb
add
push
jle
js
cmpsl
lods
pop
insl
stos
lahf
xlat
loop
popf
jb
es
ret
dec
and
jne
testl
sbb
sbbb
pop
subl
mov
push
aam
outsb
fmul
fdivrs
fwait
dec
iret
push
xor
sbb
loopne
cltd
jmp
push
insl
jecxz
aad
loope
adc
in
gs
push
mov
lret
dec
movaps
cmp
mov
das
pusha
bound
loop
imul
jg
cmp
mov
mov
xor
aad
in
dec
gs
icebp
das
fs
add
or
imul
fcmovu
adc
shll
mov
out
mov
lock
sub
int3
dec
outsl
stos
lcall
mov
jp
out
ds
subb
repnz
ltr
xchg
dec
sarb
push
ss
nop
push
lock
mov
add
ja
int
xor
sbb
fsubr
ret
add
in
lock
sub
nop
or
sbb
sbb
stc
add
addb
pop
in
fisttpll
gs
sub
pusha
pop
jbe
adc
addr16
fdivrp
jmp
movl
mov
ds
fcoms
lock
stc
xor
jle
sub
imul
bound
fidivrl
stc
enter
adc
xorl
push
pop
jg
sbb
into
or
repnz
jnp
loopne
and
push
and
icebp
xchg
xor
gs
push
outsb
popf
inc
jecxz
jae
in
inc
adc
mov
stos
cli
nop
imul
push
dec
mov
imull
dec
and
iret
mov
rcrl
scas
mov
aaa
fwait
inc
jp
dec
sub
aad
loope
or
xchg
lret
and
jmp
lods
cmp
call
dec
in
sarb
add
and
jmp
testl
das
push
xchg
leave
dec
push
pop
and
push
call
xchg
aaa
xchg
stc
and
sub
adc
dec
cmp
sahf
sub
dec
nop
add
and
test
jnp
dec
sbb
cmp
xor
dec
ret
out
icebp
sbb
and
rorb
fs
mov
je
mov
mov
and
dec
je
push
push
adc
cli
imul
cmp
movsb
es
out
push
movsl
or
mov
nop
pop
shlb
cwtl
add
jp
pusha
sahf
mov
je
lahf
inc
lods
mov
push
xlat
pcmpeqb
daa
sti
mov
pop
jmp
les
push
into
dec
ret
fbld
sub
fdiv
scas
sbb
jbe
repnz
mov
add
mov
adc
repnz
rcl
xor
pop
xchg
loop
movsb
cmp
jle
in
in
fwait
rolb
mov
fs
rclb
sbb
adc
leave
mov
testl
andb
movsb
f2xm1
jge
ret
pop
loop
add
out
mov
add
xchg
aam
dec
aad
in
popf
rcrb
cmp
lcall
xlat
subb
in
mov
fwait
jmp
jl
filds
mov
stos
cmpb
or
lods
sbb
xor
arpl
sub
shr
or
and
in
cmpsl
out
movsl
imul
sub
adc
mov
cmp
enter
and
mov
jae
inc
add
movsl
clc
cmp
sub
rcl
xchg
das
jge
in
xchg
pop
jecxz
int3
arpl
cs
cli
and
or
add
fldenv
push
adc
push
and
jmp
gs
mov
mov
pop
cmp
sub
mov
mov
sbb
cli
dec
test
mov
pop
lret
in
pusha
or
dec
enter
repz
xchg
push
sub
bound
sti
dec
mov
cli
xchg
mov
mov
and
movsb
mov
or
sub
fdivp
iret
leave
dec
cmp
cmc
mov
push
fwait
push
xor
pop
ja
in
testb
in
push
mov
cmp
imul
loopne
imul
aas
mov
or
push
mov
daa
adc
jae
movsb
xlat
sub
sbbl
mov
loop
rcrb
mov
mov
imul
dec
arpl
bound
push
test
push
ljmp
inc
adc
sub
or
ja
push
jno
arpl
mov
loope
out
mov
mov
xor
inc
stc
cmp
pop
pusha
clc
add
mov
cs
int
mov
mov
popa
or
test
jb
jne
mov
outsl
add
movsl
jbe
lock
add
sbb
movsl
cmp
mov
pop
popf
stos
inc
sti
int
aas
repz
divl
mov
cmp
or
sub
in
mov
mov
jo
daa
cmpsl
xor
dec
adc
outsb
stc
ficoml
imul
mov
aad
insl
mov
popa
lds
or
sub
mov
sub
sub
mov
lods
and
loopne
xchg
js
jmp
pop
xchg
je
and
jge
sbb
cmp
dec
cmp
mov
or
fisttps
lods
into
jb
popf
jae
or
mov
cmpsl
daa
sub
icebp
call
inc
ja
flds
xor
out
loopne
sub
dec
movsl
hlt
pop
sbb
pop
push
lods
xor
push
fsubrp
pop
mov
lock
inc
hlt
shlb
shl
orl
std
fisubrs
or
imul
out
enter
dec
dec
lds
pop
lock
lcall
xor
mov
aam
lds
scas
mov
mov
lds
mov
sub
or
lock
xchg
hlt
iret
in
or
xchg
test
add
add
or
add
and
sbb
fstpt
adc
jge
or
xor
insb
adc
sbb
cmpb
sbb
cmp
gs
xchg
into
jns
jo
js
pushl
and
jecxz
mov
cmp
adc
stos
cmp
jae
movsl
aam
cmp
sti
xchg
sbb
cmc
ja
in
pop
mov
push
popa
out
dec
call
pop
inc
fsts
loopne
leave
or
pop
and
movsb
xor
cs
je
and
mov
xchg
lods
out
sahf
pop
cmpsl
add
push
xor
shrb
in
idiv
sbb
jo
int
jecxz
pop
les
out
int
fwait
loop
aad
popf
inc
insb
arpl
out
mov
mov
and
sub
pop
jo
push
and
push
push
std
adc
cmp
xchg
into
and
fistps
add
push
aad
test
decb
push
fiaddl
jmp
aaa
xor
xor
nop
xor
outsl
or
and
mov
mov
sub
dec
jb
mov
test
dec
cmpsl
pop
fcmovnbe
sbb
or
std
stc
pop
sbb
sbb
xchg
imul
mov
out
jmp
xchg
push
xor
fmull
xchg
loope
pop
xchg
mov
mov
sub
rcrl
pop
gs
arpl
mov
or
inc
mov
mov
fnsave
cmp
adc
aas
arpl
inc
push
or
hlt
scas
pop
hlt
enter
mov
lock
imul
cmpb
jl
out
lret
and
sbb
mov
fucomi
push
lds
stc
jns
cltd
sub
clc
pop
mov
mov
cmp
jle
xor
aaa
push
sbb
fmuls
jb
xor
pop
mov
mov
push
mov
gs
dec
adc
xor
inc
sbb
jbe
mov
pusha
push
scas
cmp
cmpsb
xor
mov
stc
stc
test
insl
call
xchg
push
call
hlt
xor
xor
rclb
mov
mov
lds
icebp
jmp
ds
clc
push
shrl
pop
mov
xor
and
mov
jb
cmp
mov
mov
test
fisubl
dec
push
pop
in
jb
pusha
mov
popf
shrl
in
arpl
or
xchg
pop
pop
mov
pop
imul
jae
or
cmp
lods
push
lcall
sbb
cmp
loopne
movsb
fsub
subl
gs
ja
mov
add
push
movhps
cwtl
pushf
jae
test
aad
or
mov
pop
dec
dec
dec
clc
mov
ss
jne
sbb
add
movsb
scas
adc
lret
divl
fistl
inc
xchg
mov
aad
repz
outsl
jbe
cmp
cmc
add
in
pop
inc
inc
push
ret
sti
xor
jno
testl
es
iret
cmpl
and
test
jecxz
inc
pop
mov
frstor
and
fxch
or
outsl
outsl
nop
adc
inc
pusha
cmp
or
fs
bound
xchg
xchg
inc
mov
push
jp
push
or
add
pop
mov
stc
sbb
jns
xor
pop
add
mov
adc
push
jne
ret
sbb
lcall
lock
aaa
loop
scas
aas
mov
xor
cmp
mov
in
push
fistl
ss
dec
int3
fcoms
mov
sub
mov
xchg
adc
arpl
cmp
jno
inc
test
xor
pop
hlt
ret
sbb
shll
push
cmpl
loop
mov
cwtl
sub
movsb
ret
or
cmpsb
por
xor
inc
inc
stos
stos
mov
mov
mov
adc
add
ret
testb
mov
pop
inc
push
jle
iret
dec
push
mov
jecxz
cld
sarb
sbb
xchg
cmpsb
xchg
stos
push
mov
mov
in
jmp
gs
mov
sbb
sbb
mov
scas
cltd
sub
iret
sub
in
fcomi
push
jp
push
xchg
into
push
push
sub
fs
xchg
and
cltd
mov
sbb
aad
xchg
sub
add
movb
pop
jge
mov
inc
jne
xchg
pop
cmp
mov
sbb
mov
dec
push
inc
scas
cli
adc
mov
loopne
movsb
inc
out
xchg
mov
repz
mov
jo
ret
popf
fisttps
repnz
fmuls
xor
push
shlb
shll
jne
fsubs
sub
pop
mov
fsts
loopne
shl
push
inc
pop
fdiv
dec
lret
cs
dec
adc
pop
fmulp
add
push
mov
cmpsb
and
scas
jg
test
mov
sti
push
add
mov
test
xor
or
mov
mov
pop
int
and
jns
add
rcll
and
pop
jge
inc
stos
rclb
repz
sbb
pop
pop
inc
movsb
mov
or
lret
popa
in
hlt
jno
push
out
es
subl
out
xor
add
jl
push
push
mov
jae
popa
jmp
xor
fildll
cmpsb
pusha
jg
jmp
jne
das
idiv
adc
out
push
es
ljmp
dec
pusha
xchg
sub
xor
lret
lods
add
insl
cmpsb
pop
stc
int
cmp
fcompl
pop
arpl
adc
dec
xor
push
ss
xchg
adc
inc
leave
jbe
lahf
or
adc
xchg
cmp
in
mov
xchg
mov
inc
rorl
jns
mov
ret
dec
cmc
dec
xor
dec
push
mov
ret
ja
popa
push
data16
jle
and
and
ficoml
adc
or
dec
xor
mov
outsb
mov
das
movb
stos
imul
sub
mov
pop
pushf
push
int
adc
lahf
lock
push
jne
inc
clc
and
dec
mov
lock
xchg
sbb
mov
cltd
popa
pop
jnp
cmp
lret
dec
xchg
pop
ja
cld
dec
mov
jne
inc
add
jecxz
pop
xchg
mov
scas
les
ljmp
fcoml
pop
les
ficomps
jne
loope
lahf
in
xor
loope
shll
imul
lcall
add
xchg
mov
in
cmc
push
sbb
sbb
pop
inc
out
adcl
jne
clc
push
ret
xor
movsb
xchg
enter
lock
pop
xchg
xor
inc
push
out
push
mov
pushf
fs
sbb
shlb
rcll
cmp
fnsave
pushf
into
add
testb
mov
lret
add
jae
cmp
add
jnp
cmp
dec
lods
scas
pop
cmc
mov
sub
fildll
jecxz
stos
addr16
jg
lret
adc
inc
nop
mov
mov
arpl
mov
or
inc
icebp
sub
xchg
incb
pop
inc
cmp
out
lods
andl
mov
jbe
scas
push
mov
imul
popf
push
enter
push
adc
mov
cmp
mov
add
pop
pop
andb
add
xlat
ja
push
stos
mov
pusha
lcall
cld
pop
dec
pop
enter
int
inc
vpsubsb
fstpl
out
push
jbe
out
inc
adc
push
mov
adc
jmp
cmpsb
in
fwait
push
orb
pop
cld
fstpt
and
movsl
imul
push
ljmp
dec
sbb
sbb
and
or
or
sub
mov
adcb
lcall
and
movsl
dec
in
pop
mov
or
mov
imul
sub
rolb
inc
leave
fimuls
add
rorb
pop
dec
insl
out
stos
mov
or
mov
andl
aam
test
jne
mov
sbb
and
int3
in
add
push
ja
gs
mov
bound
push
or
add
pop
sti
cmc
movsb
cmp
xorb
push
add
mov
or
mov
mov
into
jg
subb
lods
lds
push
add
lods
jae
xchg
and
xor
lock
jecxz
je
xchg
outsl
mov
xchg
gs
lock
sub
jb
mov
cmp
push
add
inc
test
mov
or
dec
dec
add
enter
repz
mov
mov
xchg
jmp
outsb
nop
push
icebp
inc
sub
sub
hlt
ss
cmp
xor
xchg
inc
daa
ret
pop
and
nop
xor
xor
mov
jp
or
and
cmc
cmp
dec
imul
loop
outsl
aas
inc
jne
and
jg
jb
dec
add
dec
sub
es
push
ds
jae
jmp
mov
push
sbb
fldt
repz
inc
pop
xchg
push
push
xchg
mov
ljmp
into
cmp
xchg
mov
cli
lret
outsl
fcmovbe
inc
xor
addb
xchg
rclb
cmp
dec
jge
dec
xchg
jge
lods
cmp
leave
or
fimull
push
rorl
outsb
push
imul
pop
pushf
cmp
add
jmp
cmpsl
xchg
cltd
mov
test
out
jg
arpl
mov
stos
dec
jge
hlt
lea
inc
xlat
mov
add
es
fld
mov
xchg
test
ja
fstpt
arpl
rorl
rcrb
sub
cld
sbb
mov
lret
jle
pop
pop
sub
mov
mov
ljmp
fs
int3
test
jnp
lea
jl
insl
push
mov
mov
cs
je
imul
roll
test
cmpsl
leave
out
cmp
mov
repz
ja
sahf
or
pop
stos
jg
xchg
fs
inc
mov
movsl
dec
aam
out
sahf
sarl
sub
fisubrs
xor
jnp
call
ss
rorl
scas
jnp
mov
inc
stos
cmp
out
sub
adcl
bound
push
insl
mov
pop
xlat
mov
pop
pop
push
fwait
out
mov
xchg
push
inc
stc
vpand
or
dec
pop
mov
mov
hlt
xor
push
test
dec
int3
cmpsb
and
dec
adc
dec
cli
xor
aam
sbb
xchg
adc
fistl
rclb
cmpsb
cmpsb
jnp
dec
push
sub
cmpsl
mov
jo
imul
test
mov
and
cmp
sub
jnp
pop
xchg
lcall
cmp
mov
inc
mov
jbe
or
adc
or
xchg
scas
loope
out
jb
push
fnstenv
movsb
adc
cld
ret
cmpsl
popf
xor
fldl
mov
cmpsl
cmc
fcomps
repz
mov
out
jne
mov
jb
jno
mov
pop
cmp
mov
rcrl
cltd
push
test
push
jge
daa
movb
insl
lret
mov
push
mov
icebp
or
add
sub
xchg
cmpsl
mov
test
xchg
adc
pop
mov
mov
fs
xchg
orb
test
mov
jg
mov
loopne
movsl
cmpsl
mov
mov
mov
add
pop
in
xorb
ds
loopne
inc
insb
movlps
xor
push
out
mov
mov
or
std
dec
idiv
cmc
stos
es
push
fldt
addl
or
js
sub
mov
stos
or
sub
add
shlb
mov
inc
add
rcrb
lea
push
out
inc
js
in
cmp
mov
loop
dec
fistpl
inc
pop
sub
mulb
jne
mov
pop
addr16
scas
das
jne
mov
sti
dec
add
pop
inc
push
mov
cmpsl
push
and
dec
lahf
add
jmp
int
mov
xchg
lret
fcmovu
ss
aam
addr16
aas
cmp
mov
aas
or
pop
xchg
jns
bnd
and
cli
xor
sbb
jmp
fcompl
lret
pop
imul
fs
dec
jmp
push
test
push
js
add
int3
faddl
repz
pushf
cmpsl
pop
xor
xchg
aas
xchg
cmp
adc
pop
sub
outsb
mov
repnz
les
jae
xchg
cltd
mov
dec
mov
in
add
fsub
mov
fcompl
xor
dec
and
mov
adc
out
sub
xor
xchg
out
xchg
jo
pop
mov
sarl
push
jmp
mov
fcoms
ja
lret
mov
fisubrs
ret
pop
mov
xlat
loop
subl
fwait
sub
xchg
xchg
xchg
mov
out
ret
xchg
bnd
fldl
test
mov
jp
dec
jns
jbe
inc
adc
lods
xchg
cli
gs
ss
test
jns
arpl
pop
pop
aam
int
push
loope
pop
dec
arpl
add
out
mov
fsubs
mov
fmull
sub
fildl
les
negl
inc
pop
dec
push
shlb
imul
xchg
or
adc
jb
test
fidivs
cmp
push
call
jae
add
dec
xchg
and
leave
dec
jge
xor
xchg
add
adc
push
gs
ljmp
lret
into
imul
sub
mov
sub
dec
jmp
push
dec
loopne
push
xor
mov
idivl
push
push
faddp
cmc
sahf
icebp
push
or
in
pusha
dec
test
in
push
adc
sub
mov
xor
push
push
pop
gs
inc
imul
inc
repnz
in
adc
incl
xchg
jg
bound
dec
stos
aaa
cmp
jns
data16
addr16
sbb
dec
lret
jo
sbb
mov
pop
pop
mov
cltd
call
fbld
and
cmp
gs
pop
in
inc
sahf
xchg
sbb
push
pop
cwtl
fisttpll
push
or
inc
in
sbb
inc
ja
imulb
xchg
cwtl
jns
xor
idivl
sbb
stos
adc
aam
sbb
inc
gs
inc
inc
lahf
out
xchg
and
mov
cmpsl
sub
adc
and
hlt
jnp
idivl
jbe
push
aas
cmpsb
outsb
mov
repnz
mov
repnz
add
sahf
popf
fbstp
xor
into
jge
jo
int
dec
or
stos
aad
mov
xor
test
loope
negl
push
jmp
ljmp
cmp
or
lods
decb
xor
xor
mov
int3
xor
adc
sbb
sbb
add
mov
subb
pop
pop
cmp
push
pop
leave
jp
fsubrp
stc
hlt
ljmp
xor
push
inc
pop
f2xm1
mov
adc
es
cld
pop
shll
mov
outsb
lods
bound
ja
mov
inc
adc
cmp
and
into
xchg
shrl
jne
sub
lret
insl
sbb
jns
mov
pop
sbb
ljmp
mov
pop
into
xor
jp
arpl
lret
sbb
lods
in
dec
rep
sub
jecxz
xchg
icebp
mov
cmp
fistpll
sub
adc
cmp
sub
pushl
out
mov
fldlg2
push
in
push
jno
xchg
loop
lods
pop
xchg
aad
loop
adc
cmp
loopew
sbb
adc
pusha
rcrb
test
loopne
test
lret
cli
jnp
jecxz
test
cmp
xlat
in
or
jnp
push
mov
inc
pusha
mov
jmp
insl
bound
stc
sub
push
add
jnp
stos
lahf
aam
cmpb
shr
test
and
push
cltd
dec
fs
jae
jg
adc
push
dec
add
pop
je
jbe
sub
jbe
insb
mov
cmp
fwait
idivl
stos
addr16
fisubrl
xchg
xchg
push
adc
inc
cmpsl
cmpsl
xchg
mov
in
and
sub
inc
gs
ret
push
xlat
dec
psllq
or
cwtl
in
mulb
mov
push
xor
inc
add
ret
int
sbb
icebp
xlat
int
jae
sahf
jo
es
xchg
stos
lea
xchg
adc
jo
xchg
int
lods
aam
pop
divb
lret
pop
add
pop
int
xor
xchg
enter
dec
aas
scas
cmc
pusha
outsl
and
aaa
shrb
inc
cmpsb
movsl
in
cmp
test
xchg
js
and
or
rcrb
mov
inc
mull
mov
stos
mov
and
push
sbb
test
push
jne
jo
repnz
sahf
or
insl
add
jmp
jns
icebp
in
cwtl
and
xor
sahf
dec
pop
and
leave
aaa
sub
addl
aaa
pusha
fs
aaa
jl
and
insl
test
inc
push
pop
pop
out
mov
repz
into
jmp
mov
mulb
outsb
inc
fldcw
out
fwait
dec
dec
addr16
test
insb
test
lahf
mov
or
xlat
xchg
repnz
jno
fincstp
shrl
dec
xchg
mov
push
sbb
adc
sbb
pushf
in
mov
fistl
xor
scas
dec
push
pop
xor
dec
scas
or
mov
push
fsubrl
ret
cld
xor
inc
fldl
sbb
ljmp
and
pop
movsb
push
lret
test
int3
mov
sub
pop
cmpsl
xor
xor
das
das
dec
les
movsl
pop
xor
adc
add
ret
xchg
push
enter
mov
idivl
jp
insl
iret
cmp
fcmovnbe
outsb
adc
mov
mov
or
sbb
rcll
xchg
xchg
pop
or
and
popf
adc
pop
bound
gs
and
pushf
mov
cld
inc
mov
mul
push
add
pop
mov
inc
cmp
mov
dec
adc
fildll
dec
out
and
les
ret
xchg
mov
lods
sarl
fisubs
test
shr
sbb
adcl
es
push
rorl
retw
and
lea
and
aam
mov
clc
je
cmp
fstpt
sub
fstps
andb
inc
sub
xchg
loopne
mov
cld
mov
sti
nop
xchg
mov
int3
pop
and
jecxz
jno
sarl
cmpsl
pushf
mov
lahf
bound
pop
mov
xor
fdivp
jl
push
pop
repz
adc
std
fldenv
test
repz
fwait
and
push
dec
lds
enter
add
imul
mov
divl
or
js
add
xchg
xchg
pop
pop
jnp
push
fists
dec
dec
lods
mov
mov
xor
mov
sti
sarb
jge
inc
dec
fstps
aam
or
inc
mov
fldenv
std
mov
and
idivl
mov
jg
push
xchg
lahf
mov
sbb
push
js
push
hlt
mov
xor
or
jg
lret
or
mov
shll
aad
testb
shlb
out
pop
add
loope
je
pop
arpl
adc
popf
push
jmp
sbb
out
jbe
pop
or
hlt
or
pop
mov
adc
mov
mov
pop
adc
cltd
es
aad
xchg
inc
pop
jbe
outsl
fdivrl
ds
mov
adc
jle
fistpl
pop
mov
std
jae
scas
pop
push
add
sub
fsqrt
clc
xchg
or
fiaddl
mov
repnz
outsl
sub
pop
dec
push
xor
out
cmpsb
lock
je
mov
xor
mov
add
jbe
xchg
sti
movsb
data16
cli
test
lock
mov
dec
sbb
clc
xchg
pushf
mov
enter
outsl
sbb
cwtl
dec
js
inc
std
imul
sub
sbb
lods
fmuls
add
adcl
push
jbe
sub
out
jnp
or
jbe
jmp
hlt
pop
push
fldenv
or
arpl
sbb
hlt
sub
addr16
cwtl
mov
sbb
jl
aam
test
stc
lock
shll
mov
or
xchg
push
lahf
adc
and
push
adc
inc
and
dec
scas
dec
cmpsl
sti
cltd
popa
cmp
mov
push
movsl
pop
scas
int
pusha
adc
add
fwait
inc
mov
insb
xchg
sub
cltd
mov
dec
mov
or
add
jne
push
cmp
out
pop
jbe
movsb
pop
popf
popf
mov
cli
cwtl
dec
divb
push
cmp
xlat
mov
pushf
pop
scas
pop
gs
or
rclb
sbb
cmp
mov
call
mov
movsb
xor
fwait
jne
adc
aaa
ljmp
lret
or
push
fnstsw
pusha
inc
test
and
add
mov
movsl
das
mov
cld
xlat
push
lods
mov
and
sub
cmp
stos
pop
and
jl
pop
fbstp
iret
nop
dec
xchg
xor
cwtl
mov
add
or
xlat
je
xor
cmp
and
cmp
xchg
mov
fs
je
repnz
or
mov
mov
hlt
xor
sbb
sti
mov
or
jp
xchg
xchg
cs
repz
push
jg
mov
push
or
pusha
ss
shl
jno
lahf
std
jmp
loop
mov
stc
aaa
add
shll
jnp
out
rol
insl
sub
repz
pop
adcl
jmp
cs
nop
or
loope
test
xchg
pop
cmp
push
mov
cld
ljmp
and
sti
or
inc
hlt
adcb
jns
xor
xchg
movsb
sbb
sub
sbbl
jge
pop
outsl
mov
sbb
dec
daa
ret
and
dec
sbb
out
xchg
mov
pop
test
test
addr16
stos
loopne
push
lahf
mov
mov
push
stos
lahf
xor
xor
fisttpll
outsl
and
inc
mov
inc
stos
mov
ss
das
xchg
mov
jl
pop
adc
jo
addr16
xor
int3
inc
jae
andl
pop
adc
mov
inc
pop
mov
out
stos
rcrb
jmp
rorb
push
popf
out
mov
jge
je
inc
dec
sbb
sub
arpl
popf
je
push
notl
xchg
mov
mov
adc
pop
push
adcb
fnstenv
jge
fs
push
adc
enter
dec
jmp
cmp
fsubrl
testb
xor
fildl
js
pushl
test
in
les
bt
rcl
pop
arpl
fisubrl
lret
push
add
cmp
jae
xor
mov
std
leave
adc
add
data16
cmc
xchg
std
insb
push
stos
inc
sub
inc
mov
add
fidivrs
adc
daa
or
in
push
ss
bound
mov
mov
cld
xor
imul
adc
imulb
and
out
pop
fmuls
mov
jecxz
out
and
andl
mov
push
or
push
xchg
lea
and
mul
ret
cld
cltd
movsl
faddl
push
xor
hlt
cmc
cmp
enter
sub
daa
mov
mov
or
xchg
or
cmp
or
push
add
ret
addr16
cmpb
data16
or
or
imulb
inc
push
adc
jno
inc
cmpsb
and
jae
adc
insl
xor
lock
sbb
into
jg
jecxz
sti
jns
enter
ds
inc
adc
sub
dec
push
mov
gs
imul
sbb
mov
xchg
sbbl
add
cli
fildll
sub
sysret
cmpb
jecxz
xchg
imul
loop
inc
loopne
add
orl
xchg
out
popf
aam
imul
std
je
inc
outsl
add
cmp
pop
cmp
stc
movsl
sub
stos
dec
xor
xchg
mov
mov
jp
push
stos
xor
inc
dec
rol
mov
mov
mov
repnz
fcoms
rcl
sbb
jae
rorb
dec
jnp
push
add
test
insl
mov
faddl
mov
mov
jno
fsubl
adc
or
jp
mov
add
ds
mov
sti
cmpsl
lods
and
int
mov
ljmp
mov
mov
inc
bound
leave
aad
sti
mov
cmpsl
sbb
add
repz
cmp
lret
imul
jp
outsb
loopne
cmp
paddd
mov
add
adcl
arpl
mov
shr
loopw
stos
adc
subb
or
jmp
vshufps
adc
jne
inc
xchg
lock
push
stc
and
cli
data16
int3
or
sub
add
jmp
and
gs
int3
sti
fcomps
loop
mov
jge
test
imull
jo
out
out
mov
xor
loope
inc
pop
inc
mov
js
sbb
test
add
std
stc
out
mov
dec
cmp
hlt
stos
fmull
imul
lcall
xchg
xchg
or
movsb
xor
js
mov
div
or
pop
xor
shlb
pusha
ljmp
lret
or
ds
stos
ja
into
mov
xor
lcall
cmp
pop
push
ret
lcall
mov
push
inc
jnp
sub
push
push
inc
aaa
xor
adc
les
push
in
jbe
mov
js
adc
and
es
outsl
loop
or
dec
pop
outsb
jb
loopne
imul
js
cmp
pop
dec
xor
push
xor
and
and
sti
xorl
mov
fsubl
pop
push
out
cmc
ja
cmc
pop
clc
sti
jne
push
popf
or
mov
lock
adc
sub
and
or
jnp
or
stos
jbe
fldcw
jmp
cld
push
jge
decb
loope
es
xor
subb
shlb
xchg
cli
mov
gs
aaa
daa
mov
lcall
mov
scas
xchg
sbb
pop
loope
xor
fcoms
aaa
mov
outsl
mov
xchg
push
inc
mov
mov
jp
stc
and
iret
stc
in
cmc
xchg
dec
out
nop
push
mov
cmc
mov
inc
push
inc
add
mov
inc
insb
and
dec
pop
adc
hlt
fstl
push
sbb
xlat
dec
jb
call
lret
pop
das
push
push
pop
fs
loop
mov
cmp
test
push
nop
dec
testl
add
shll
sarl
jg
sbb
ret
lds
push
call
mov
rcrb
fcomi
or
inc
sbb
mov
outsb
add
iret
inc
or
and
scas
shll
cwtl
sub
sub
int3
stos
or
sub
jne,pt
test
iret
jle
cmp
xlat
or
fisttps
icebp
jae
sar
sahf
push
fisubl
fsts
push
xchg
xchg
inc
push
mov
sbb
nop
pop
adc
or
pusha
sti
mov
push
mov
inc
cmp
mov
lret
xchg
inc
repnz
mov
leave
mov
xchg
cs
arpl
push
jns
push
pop
iret
fdivrs
adc
clc
xor
pushf
lahf
jl
test
lahf
lock
lods
cmp
arpl
dec
ljmp
ja
mov
or
repz
es
mov
adc
out
out
mov
mull
loopne
fwait
and
xchg
xchg
movsl
lods
sbb
cmpsl
push
mov
addb
mov
cli
mov
jo
daa
test
daa
cmp
mov
out
lcall
or
jge
bound
adc
divb
xchg
loop
rcrl
pop
cmc
scas
push
sti
outsl
gs
mov
pop
lcall
dec
loope
inc
int
data16
inc
inc
test
sbb
pop
mov
and
movsl
sub
sbb
or
push
mov
in
into
cmp
cmp
pop
jae
or
xchg
or
xchg
sti
enter
aad
push
loop
mov
cmpsl
in
loop
call
xor
sarb
jns
popf
cld
push
iret
adcb
sub
mov
and
out
test
ret
test
xchg
and
ja
jns
repz
or
rcrl
adc
popf
add
out
mov
inc
daa
sbb
push
pushf
push
jp
fidivrl
mov
fcomps
call
jnp
pop
fwait
jo
out
sbb
cmpsl
in
dec
sub
jmp
sub
pusha
fwait
decb
imul
ret
xor
out
pushf
push
jb
shl
rol
leave
sbb
xor
rcll
stc
sbb
push
fisubs
lods
loopne
and
push
std
cltd
aas
inc
mov
shlb
jmp
jnp
mov
aaa
lock
inc
mov
scas
imul
push
je
xor
sbb
or
in
sbb
jmp
xchg
mov
into
loopne
sbb
xchg
jae
cmp
push
fdivl
lret
call
ret
arpl
xor
mov
lahf
add
mov
addr16
nop
pop
mov
loop
cmp
fsubs
dec
pushf
neg
and
fisttps
add
sbb
jnp
or
jnp
lahf
out
dec
mov
or
mov
dec
pop
das
sub
dec
jo
and
mov
test
insl
iret
or
movsb
int
insl
xchg
jp
lret
cmpsb
hlt
lods
popa
psubusb
ffree
fcomi
sub
lahf
aas
jecxz
les
mov
int
je
mov
jb
sahf
xchg
mov
rorb
out
jle,pt
xchg
fimull
icebp
cs
jno
mov
push
xor
or
jae
std
xchg
xchg
sub
mov
add
adc
sbb
push
aas
mov
popf
fisttpll
ret
das
push
rcl
push
pop
pop
enter
shl
adc
and
test
pop
ret
xlat
xor
test
mov
xchg
fiaddl
test
arpl
jbe
mov
sub
xor
test
stos
jmp
jle
sbb
aaa
repnz
lret
das
mov
pop
sarl
popa
inc
sub
pop
xor
fidivrl
clc
jp
add
mov
mov
add
dec
outsl
pop
dec
clc
dec
lret
fcomip
push
insb
pop
fcoms
popf
test
aad
dec
mov
mov
mov
push
mov
jmp
mov
test
sbb
cs
pop
scas
and
loopne
pop
mov
sbb
and
push
mov
mov
jb
rcrl
adc
cmpsl
inc
inc
cltd
xchg
push
lahf
js
dec
lock
mov
lcall
aad
push
mov
or
jecxz
mov
or
mov
mov
cld
add
push
cmpsb
inc
inc
aad
mov
mov
rcrl
xor
test
jmp
mov
mov
and
mov
mov
add
int3
xchg
roll
dec
dec
sbb
addr16
mov
mov
sbb
andl
movsl
enter
mov
adc
int3
js
pop
insl
mov
scas
mov
andl
push
xchg
push
test
and
fiadds
mov
sbb
lret
leave
add
mov
jmp
add
and
mov
inc
test
repz
dec
test
outsl
icebp
cmpsb
ljmp
adc
mov
and
test
jl
jmp
and
int3
adc
lret
scas
mov
iret
fwait
pop
xchg
mov
ficomps
push
stc
mov
mov
adc
arpl
jbe
pop
cli
mov
inc
push
imul
add
or
or
sbbb
fsubrl
push
lahf
hlt
les
add
inc
inc
jp
popf
leave
push
shlb
add
rorl
jl
sahf
fistpl
lock
push
dec
jnp
aam
cld
dec
or
add
inc
mov
negl
cmc
es
jbe
jne
ljmp
lea
and
ret
jne
inc
sub
push
mov
xchg
add
leave
cli
mov
aas
call
lea
adc
jmp
push
sti
pusha
inc
lret
and
or
lock
ret
jnp
dec
roll
ss
mov
sahf
sbb
adc
xorb
imul
add
mov
jg
xor
fcmove
outsl
cmpsl
push
scas
lret
mov
sbb
sub
jecxz
inc
rolb
enter
shr
les
sbb
push
sbb
cmp
cmpb
cli
dec
shrl
into
push
popf
addb
or
in
mov
orb
adc
jo
mov
jmp
cmc
sbb
andb
in
inc
das
inc
push
cmpsl
push
mov
cmp
sub
push
add
xchg
sti
mov
cmp
inc
cmp
movsb
das
sub
andl
divps
std
mov
rol
test
push
and
in
jle
mov
out
cmc
rcrl
adc
add
ret
jne
or
pop
lods
jle
lret
ret
ficoms
and
pop
push
sub
mov
sub
mov
cmc
xlat
in
xchg
mov
adc
xchg
jno
movsb
push
pusha
and
gs
jmp
inc
push
mov
sub
sub
je
leave
scas
pop
int3
mov
fwait
xchg
or
mov
cmp
push
stc
test
sti
fisubrl
add
fldcw
mov
fsub
lahf
lret
dec
sbb
dec
mov
and
data16
and
idivb
leave
sahf
cmc
enter
add
xlat
inc
rcrb
mov
fwait
cmp
lock
das
mov
in
adc
push
dec
imul
stos
cmp
imul
xor
gs
xchg
sbb
jmp
add
iret
or
sbb
test
fs
dec
jbe
inc
int
pop
out
inc
adc
sbb
cltd
sub
lcall
inc
inc
sub
jg
add
pop
cmp
push
out
mov
pop
pop
add
mov
and
dec
cmp
repnz
cmp
add
mov
mov
xchg
lahf
aam
cltd
jns
lock
push
outsb
jmp
loope
adcl
repnz
gs
xor
les
jmp
dec
jp
push
push
xchg
push
adc
inc
and
test
mov
idiv
pop
ficomps
inc
jge
pushf
lods
imul
js
pushf
fisubrl
pop
xor
iret
fisttps
in
and
add
xchg
mov
xor
dec
andl
int3
insl
cmp
iret
cmp
mov
std
push
inc
mov
cs
push
xor
cmp
pop
lahf
jno
xor
inc
mov
push
jle
pop
push
mov
xchg
mov
fldl
fcoml
lds
bound
mov
loopne
xchg
and
jg
aad
lahf
popa
cmp
mov
loope
inc
imul
repnz
or
imul
adc
mov
pop
aad
lods
sub
insb
mov
mov
sub
sub
mov
shlb
sar
icebp
xor
sbb
in
mov
cld
test
sarl
mov
mov
push
sbb
inc
in
mov
stos
enter
pushf
test
mov
jg
jmp
fidivl
ds
sub
in
inc
add
test
jne
mov
adc
sahf
cmp
xor
add
xchg
jb
pop
dec
mov
rorb
lret
dec
adc
pop
push
jp
mov
push
int3
and
insb
in
out
out
xor
pusha
aad
pop
stc
imul
sub
das
mov
ds
mov
push
dec
cmp
xchg
lea
sti
mov
push
xlat
cld
xor
mov
mov
mov
or
daa
scas
cmc
xor
mov
out
int
or
sub
and
rcrb
pop
sub
cmp
test
div
mov
add
outsl
out
inc
outsb
mov
nop
xchg
stc
xchg
mov
ret
insl
jnp
icebp
push
cli
and
lea
mov
adc
frstor
mov
int
jne
push
shlb
push
sbb
mov
mov
dec
insl
adc
mov
inc
push
mov
cmp
jne
jne
int3
aas
inc
aad
inc
in
in
ja
test
lret
pop
mov
cmp
ds
jne
rcrb
int3
cli
or
mov
and
inc
jl
mov
ret
aaa
cs
ds
lea
aam
std
mov
in
mov
xor
ret
shrl
and
add
jmp
push
idivb
sbb
inc
mov
les
cmp
xor
mov
inc
adc
loopne
outsl
aam
xor
jb
mov
mov
outsl
mov
cmp
dec
push
cwtl
pop
out
jo
and
mov
jecxz
push
xchg
push
jmp
hlt
mov
jecxz
cmpsl
add
les
test
sbb
test
mov
stos
lods
mov
fdivl
fisubl
dec
sub
notl
sbb
loopne
leave
outsl
arpl
dec
dec
sarl
inc
enter
jl
dec
les
mov
in
scas
adc
in
dec
inc
cmpsl
mov
test
stc
dec
mov
adc
and
movsl
sub
xchg
xlat
lcall
aas
push
inc
pop
sub
fs
ljmp
mov
mov
scas
fldcw
jo
pushf
push
cmpb
in
das
mov
dec
or
push
int3
xor
pop
fsubl
mov
or
xchg
xor
sub
adc
cs
out
pusha
rolb
dec
lods
jg
in
jb
inc
ss
mov
daa
xor
jmp
jae
or
movsl
jo
xor
adc
imul
cmp
outsl
xor
xchg
hlt
xchg
enter
sbb
xor
mov
jge
push
fsubl
push
rcrb
dec
inc
movsl
sbb
xor
aad
mov
popf
cmpl
cmc
xchg
testl
js
sub
fsubr
add
xchg
mov
mov
sub
xchg
mov
and
or
xchg
inc
in
mov
addr16
cmpsl
das
pop
orl
mov
sub
test
jg
dec
xchg
jnp
dec
mov
int3
inc
push
cmp
bound
cmp
jne
or
insb
ficompl
mov
xchg
dec
imul
les
mov
cmp
std
adc
push
inc
fldt
jge
xor
rol
ds
dec
into
pop
xchg
ret
cmp
jno
dec
ret
lcall
jae
dec
lea
and
fs
sbb
mov
jno
adcl
sub
es
subl
sub
imul
mov
int
push
and
pop
test
add
das
jl
jecxz
outsl
ljmp
mov
into
and
in
dec
adc
xor
scas
push
sub
fisubrs
dec
pop
lahf
mov
or
jmp
xchg
push
jo,pt
cmp
and
cmp
and
ss
push
jmp
push
push
into
jecxz
mov
repz
gs
stos
sarb
fidivrs
pop
adc
mov
in
test
mov
push
lods
fwait
cld
pop
mov
outsb
repz
dec
repz
jb
mov
push
push
inc
cs
and
pop
insb
jl
test
shrl
cmpsb
outsb
cld
loopne
js,pn
mov
jns
sub
mov
imul
inc
icebp
mov
fs
mov
lret
aaa
mov
test
ss
subb
jne
stos
and
xchg
and
rdpmc
imul
jp
mov
sub
jne
arpl
lret
in
ret
push
dec
mov
aam
adcl
ljmp
and
push
sbb
pop
ret
push
jo
es
xchg
sbb
divl
push
outsl
sbb
mov
and
mov
test
adc
loop,pt
xor
cmp
mov
roll
fwait
lods
hlt
les
jge
pop
std
adc
push
add
popf
loop
insb
dec
mov
add
dec
xor
mov
or
dec
jno
lds
inc
jne
and
ja
popf
ja
dec
scas
fwait
in
lcall
inc
ret
sub
mov
or
sbb
mov
mov
test
jb
adc
xlat
sub
mov
push
pop
or
pop
mov
cli
inc
mov
mov
push
mov
push
fiaddl
pop
inc
inc
scas
data16
jb
mov
cmp
mov
in
gs
pusha
mov
jae
pop
sbbb
cltd
and
jmp
out
subl
rolb
pop
fs
cmpsl
lds
adc
test
mov
xorl
push
add
inc
jmp
dec
push
xchg
cltd
insb
jl
sbb
add
mov
rolb
test
rolb
cmp
xor
sbb
scas
in
xchg
loope
mov
pop
cmp
xchg
push
in
in
sar
xorl
fdivp
xor
arpl
push
mov
test
xor
orl
xor
lret
mov
lret
inc
sub
xchg
pushf
adc
leave
mov
outsb
xor
ljmp
xor
stos
jle
call
push
cmp
adc
decb
dec
addr16
scas
jbe
mov
or
adc
add
dec
add
fdivl
pop
lock
cmp
cs
mov
mov
out
loopne
inc
adc
outsl
jmp
mov
call
lcall
adc
ja
mov
mov
js
dec
ret
sub
push
and
pop
pop
or
xchg
mov
jo
aaa
loope
jl
out
xor
and
sbb
pop
dec
popa
adc
add
ret
aad
jae
mov
pop
sub
push
int
mov
or
and
push
mov
loopne
sti
lret
dec
xchg
pop
jbe
and
cmpsl
push
popf
or
mov
pusha
pop
jp
lahf
leave
fildl
pop
mov
jmp
jnp
aaa
stos
in
push
clc
js
jne
jno
add
inc
xchg
adc
js
in
mov
es
jne
cltd
loop
xchg
mov
call
xor
subb
movsl
in
dec
jg
push
mov
out
inc
sahf
jo
jbe
out
pop
mov
out
mov
pop
cltd
addb
in
sbbl
lods
jo
xor
jp
repz
dec
jne
fistpl
mov
inc
andl
cli
fsubrp
clc
std
in
mov
sub
mov
mov
sub
popa
stos
dec
pop
and
int3
and
inc
mov
daa
dec
jl
fbld
into
mov
aaa
push
rep
add
lock
mov
add
wbinvd
and
leave
es
arpl
outsb
iret
inc
cwtl
push
push
loope
mov
xchg
mov
mov
adc
jl
fucomp
jl
adc
xchg
icebp
inc
cmc
cmc
or
test
je
aad
and
jo
cmpsb
pop
cmp
or
bound
add
cmp
stc
hlt
jle
outsb
fsubl
sti
insb
out
adc
mov
out
movsl
pop
push
icebp
mov
pop
inc
sbb
inc
inc
jg
std
jl
xor
sub
jge
pop
mov
inc
adc
and
jno
push
mov
push
sbb
pop
mov
movsl
pop
dec
xor
ds
lds
mov
fucom
push
inc
lret
stos
jae
data16
in
xor
jbe
adcl
push
loop
or
cli
mov
or
pop
xchg
xor
cmp
jecxz
fwait
fwait
adc
ja
add
xchg
scas
or
shrb
mov
sbb
mov
sub
pop
ljmp
inc
call
push
aam
jmp
mov
std
jle
xchg
cmp
jge
sahf
mov
imul
mov
aas
mov
sbb
xchg
sbb
sahf
add
add
mov
data16
mov
cli
test
out
pop
or
mov
jecxz
adc
push
inc
lea
ljmp
cmp
and
inc
mov
dec
cmp
inc
lods
jno
mov
scas
clc
mov
inc
jecxz
push
xor
enter
pop
nop
nop
ljmp
rorb
pop
cmp
dec
int3
xchg
rcl
idivb
mov
sub
cmc
clc
dec
mov
shrb
pop
mov
xchg
std
shll
sub
aas
mov
fldenv
pushl
js
hlt
or
add
gs
jmp
dec
pusha
cmpb
outsb
out
outsb
outsb
xor
fdivrs
aam
sub
lea
add
dec
push
test
sti
std
push
cmp
aad
sbb
scas
movsb
dec
xchg
adc
cmc
pop
xor
sub
xchg
int3
nop
mov
shll
add
rcl
push
or
mov
sarb
or
push
or
xchg
sub
ja
and
push
movsb
test
xchg
ss
sub
xor
xchg
ds
sbb
sub
out
mov
call
call
mov
fisubl
dec
aad
mov
jae
sarb
addr16
dec
mov
cli
rcrl
sub
les
jae
pop
stos
mov
sbb
or
adc
sub
and
cmp
sahf
shlb
pushf
daa
jae
movsl
aad
xchg
dec
out
mov
das
je
xor
xlat
dec
lds
aam
and
repnz
lods
lcall
xchg
enter
inc
xchg
inc
cmp
jns
loopne
psllw
xchg
adc
xlat
cmp
stos
icebp
lret
cmp
and
into
sbb
xchg
and
icebp
pop
adcl
xor
jno
jmp
mov
cli
lods
ja
lea
inc
cmp
cmp
xchg
fcmovb
out
mov
sbb
lea
or
mov
push
cmp
jno
jb
xor
mov
out
adc
imul
les
sbb
inc
cmp
inc
inc
xlat
loopne
movsl
fcoms
dec
and
jno
loope
in
imul
jns
xor
popl
loopne
and
add
leave
adc
xor
bound
or
xchg
test
cs
xor
inc
ljmp
or
rcrb
pop
bound
cmp
insb
dec
cmpsl
aaa
sbb
mov
cs
jno
pop
dec
push
into
push
dec
mov
and
aad
jno
mov
pop
into
mov
rcll
and
test
xor
cmp
cli
fidivs
filds
mov
in
dec
outsl
outsl
mov
frstor
aaa
bound
sbb
adc
sub
inc
mov
scas
test
lret
and
add
push
sub
je
sar
mov
cmpsl
fistpll
mov
gs
pop
lcall
pop
push
and
pop
and
aam
mov
decl
imul
push
out
inc
fildl
xor
jae
shrl
cmp
ja
sub
push
sarb
pop
in
and
addl
cmpsl
js
repnz
sbbl
jecxz
adc
daa
jecxz
xchg
push
cmpsl
mov
lock
mov
jl
adc
out
outsl
mov
or
ja
cmp
and
lahf
sbb
das
push
in
pop
inc
mov
shlb
inc
ja
fs
stos
std
xchg
add
std
enter
mov
mov
jno
les
pop
jg
mov
lret
push
xchg
mov
dec
das
jg
aas
jb
mov
jp
xchg
xchg
lods
cmp
jl
jno
adc
pushf
sub
adc
mov
mov
mov
xor
es
pusha
data16
dec
dec
popf
stos
lret
dec
rcr
mov
xchg
test
lock
das
push
into
xor
je
xor
arpl
cmpsb
xor
fs
pop
mov
icebp
cmp
mov
sub
cli
insl
shll
mov
aam
mov
cmpsb
mov
push
in
pop
orl
inc
jns
cmp
add
mov
pushf
adcl
mov
lds
test
divb
pop
xlat
pop
push
mov
cwtl
jb
ret
adc
pop
push
jo
lock
insb
arpl
mov
jae
mov
fistpll
xchg
in
nop
xchg
movsl
adc
rcll
iret
push
dec
rcr
inc
push
test
into
ja
repz
sub
mov
ret
popf
scas
sbb
pusha
cmp
aam
push
aad
ja
data16
data16
dec
cmp
adc
rorl
ret
add
mov
mov
xchg
mov
nop
or
inc
loop
and
pushf
loopne
jmp
mov
adc
and
fs
cs
push
mov
and
sub
fadds
nop
daa
iret
mov
pop
roll
fstl
test
inc
js
sub
clc
and
mov
inc
cmp
jl
repz
hlt
mov
stc
jno
adc
add
repz
lea
fistpl
sbb
adc
imul
push
psubsb
sub
movsl
cld
and
push
popf
aam
popf
ficomps
pop
sub
mov
lods
je
mov
sarl
mov
lock
ss
jmp
push
imul
addr16
or
testl
or
inc
dec
xor
mov
or
repnz
mov
sbb
cmp
cmc
nop
std
es
test
pop
cmpsb
sahf
fwait
sub
push
inc
js
ret
roll
add
add
xchg
dec
popf
and
push
lahf
gs
mov
push
aaa
fs
xlat
imul
insl
dec
sbbl
jl
mov
lea
lods
test
testl
inc
test
pop
popa
mov
fiaddl
xor
xor
sub
pop
mov
mov
mov
mov
jl
rcrb
sbb
push
pusha
faddp
xlat
or
push
jbe
jp
adc
leave
gs
daa
pop
lock
sbbb
xor
sub
xor
pushf
fildll
mov
in
aas
push
jno
in
pop
add
mov
mov
push
mov
icebp
leave
push
pop
bound
cli
xchg
sbb
cmpsl
push
aas
addr16
dec
sti
rorl
sti
lret
iret
insb
mov
jmp
fdiv
out
dec
arpl
push
sub
dec
imul
mov
jbe
ja
jmp
xchg
loope
dec
jle
mov
cmp
ja
mov
inc
or
stos
xchg
js
sub
shll
aam
ds
dec
mov
movb
cmpl
push
insb
addr16
ds
aaa
mov
fistps
adc
mov
or
out
dec
push
inc
fidivl
aaa
pop
dec
fildl
aaa
xor
stos
mov
icebp
pushf
stc
rcr
ret
cmc
jo
mov
sub
cs
mov
notl
and
pop
dec
js
lret
jle
rorl
mov
or
hlt
sub
sbb
fsts
inc
call
push
mov
bound
jecxz
mov
fdivrs
mov
mov
jge
jle
rclb
in
mov
aas
gs
push
testl
incl
repz
iret
sub
sbb
jge
out
jge
sub
mov
pop
mov
cli
cmpsl
dec
test
lods
out
scas
jg
in
in
divb
outsb
das
fstpl
adc
call
xchg
int
sti
jle
dec
cmp
test
and
cld
pop
mov
lret
pop
subb
subl
in
loop
push
ja
cmpb
mov
test
lea
clc
adc
inc
int3
js
push
ret
lods
add
fidivrs
jecxz
add
nop
inc
movsl
ss
stos
into
jns
sbb
in
stos
daa
shlb
sub
sbb
nop
mov
and
add
dec
or
scas
je
aaa
imull
mov
xchg
inc
pop
scas
cmpsb
jecxz
mov
jbe
jge
int3
or
mov
rcll
and
xchg
push
push
pop
call
mov
in
add
dec
sub
or
cmc
mov
sarl
jb
add
inc
jl
call
ret
dec
les
sub
pop
cmp
aaa
fs
outsl
xchg
pop
dec
or
lcall
mov
pop
sub
xlat
addr16
std
fdivl
and
je
xchg
mov
ljmp
add
jecxz
test
out
data16
mov
sahf
movsl
adc
iret
jp
iret
dec
mov
sbb
shl
fbld
mov
subb
gs
scas
stos
in
cwtl
push
sub
add
push
insb
lahf
pop
adc
xchg
lods
mov
in
and
lahf
cmp
das
je
mov
jnp
fcoml
bound
fsubrl
cmp
pop
mov
sub
sarb
les
inc
sub
call
call
mov
jmpw
cltd
lret
mov
andps
cmc
mov
mov
ret
lret
adc
sti
in
xor
xchg
adc
in
fstl
cmp
and
cmp
clc
mov
pusha
std
js
inc
jne
ret
aas
call
mov
loope
pop
cmpsb
mov
pop
mov
xorb
cwtl
movsl
fisttps
in
push
mov
ds
pop
ds
rclb
movsb
inc
adc
jnp
cltd
or
test
decl
mov
or
cmpl
fs
ljmp
ja
gs
daa
adc
test
into
repz
push
xor
fbld
inc
lea
add
dec
arpl
das
jle
lea
mov
jb
lcall
dec
add
fisubl
xlat
push
je
cli
movsl
xchg
add
notl
jecxz
ret
push
cmpb
into
or
test
lods
mov
jnp
pushf
sub
pop
pop
xchg
mov
xlat
xchg
sub
cmpsb
pusha
out
out
leave
and
adc
fwait
sahf
inc
dec
lds
pop
push
hlt
out
lods
cmc
mov
adcl
lea
dec
psrad
and
mov
fstps
pop
push
jo
lcall
push
arpl
shrb
loopne
movsl
icebp
xor
xchg
shrb
lods
sbbl
jl
lea
mov
cmpsl
in
fchs
sti
rcr
insl
and
insl
cs
cmp
inc
xchg
insb
cmp
xor
fs
insl
mov
je
ficompl
xchg
mov
ljmp
and
mov
xor
mov
mov
sub
cli
pop
jae
fs
xor
pusha
sub
cmp
xchg
inc
les
je
in
ja
pop
inc
and
jno
repnz
xchg
jb
and
xchg
mov
inc
cmc
dec
pop
cmp
xor
imull
lahf
pop
and
push
sbb
int
dec
push
mov
inc
popf
jecxz
pushf
or
cmp
out
pop
das
clc
mov
test
pop
push
mulb
es
and
idiv
lret
lods
xchg
dec
js
test
inc
and
dec
idiv
pop
jge
push
daa
xchg
mov
out
jno
inc
dec
movsb
loope
add
xchg
mov
mov
mov
cmp
insl
les
dec
or
rcll
inc
cmc
pop
cld
out
ljmp
pop
pop
xor
cwtl
jne
movsb
cmp
mov
imul
push
daa
loop
add
in
scas
xchg
test
jb
and
les
enter
das
adc
insb
dec
inc
fiaddl
inc
pop
xor
pushl
fnstsw
lret
repnz
mov
fsubs
stc
mov
and
aaa
sub
xor
inc
cs
jbe
sub
pop
dec
mov
mov
cmpsb
stc
adc
and
repz
in
lods
arpl
jmp
loope
push
jnp
scas
mov
mov
gs
cmp
out
movsb
call
or
movsl
inc
add
jb
shrb
or
rcrb
aad
test
les
cmp
cltd
nop
xchg
rcll
dec
aad
cmpsl
ja
mov
stos
data16
cwtl
orb
inc
stc
sub
ds
je
cmpsb
push
mov
push
data16
sub
jle
or
mov
or
mov
xchg
je
sbb
push
inc
inc
call
fisubl
xor
xchg
cmc
pop
daa
inc
nop
mov
mov
fsubs
insl
fcom
xchg
jecxz
in
jmp
pusha
or
dec
mov
cmpsl
adc
cmpsb
push
add
aad
fistpl
jl
sbb
cltd
sbbb
sub
fisttps
lods
cwtl
flds
pop
push
cmp
out
mov
sub
dec
dec
test
fdivrs
cmp
fidivl
and
ja
js
movsb
scas
xor
xor
add
and
mov
or
cmp
idiv
sub
sbb
or
pop
jno
adc
ror
in
lret
add
dec
push
mov
cmp
jnp
mov
movsb
in
loopne
and
and
int
fdivs
lds
and
adc
out
daa
inc
dec
xchg
rorb
lea
dec
idivl
sub
les
loope
xor
inc
jl
daa
js
cmp
push
stos
nop
inc
sbb
inc
inc
shll
pop
jg
mov
cli
pop
xchg
mov
je
imul
loope
sub
xlat
test
jnp
daa
movsb
stos
inc
fldt
jno
pusha
out
mul
xor
dec
dec
leave
ss
in
stos
jecxz
or
inc
and
xor
mov
or
into
aaa
jg
inc
cmp
and
pop
fcomi
mov
xor
sti
in
jne
push
add
pop
add
es
mov
add
cmp
cmpsb
jle
xchg
jb
lahf
cmp
xchg
cmp
cmp
cmpsl
xchg
outsl
xchg
clc
cmpl
stos
add
mov
lret
push
jle
push
daa
push
inc
jo
popf
rcrl
lods
xchg
outsb
popf
or
jno
leave
dec
je
push
adc
rorb
lret
test
cwtl
mov
aaa
mov
push
cltd
movq
mov
es
jecxz
nop
lcall
int
mov
pop
test
out
int
sbb
inc
mov
testb
fistps
sbb
iret
inc
ljmp
xchg
dec
xchg
scas
adc
pop
int
or
outsb
sub
stos
push
dec
mov
mov
inc
mov
ja
sub
idivl
aad
add
lods
ret
ljmp
mov
jl
or
pusha
jno
mov
bound
enter
or
jo
arpl
lret
mov
xchg
jp
arpl
xchg
rcl
addr16
pop
outsb
xchg
add
shlb
push
ljmp
add
fcompl
loope
cmp
mov
dec
fsubr
cs
push
dec
pop
jp
sub
dec
push
adc
dec
sarw
add
mov
jne
sbb
lea
or
fbstp
in
sbb
pop
mov
int3
cmp
and
lods
mov
jmp
xchg
inc
inc
adc
jl
pop
ja
shll
test
add
xchg
inc
insl
imul
mov
push
xchg
mov
cmp
dec
mov
push
mov
add
fsubrl
adc
sahf
and
cltd
jb
cmpsb
subb
pop
cli
leave
pop
movsb
fmull
jg
mov
xor
rcl
test
vmread
addr16
movsb
jo
pop
stos
push
sub
outsb
in
sub
mov
mov
insl
sub
and
rclb
cs
mov
orb
iret
les
mov
shlb
les
or
int3
jmp
adc
xchg
pop
das
push
repnz
cmp
repnz
test
xchg
lock
call
mov
fstps
mov
in
movsb
mov
insb
sbb
decl
insb
xchg
into
repz
test
pop
rclb
sub
xchg
lahf
js
insl
inc
scas
mov
mov
hlt
int
fwait
or
int3
mov
lock
bound
dec
mov
xchg
mov
mov
ret
popf
fdivp
add
rcrb
pop
jg
test
mov
cmp
xor
cmp
fists
je
push
shlb
cmc
push
stos
push
stc
dec
dec
fidivrs
and
mov
test
mov
adc
inc
loop
sub
mov
outsl
mov
cs
outsl
scas
sbb
and
lcall
mov
inc
sub
int3
mov
rcrb
pop
out
outsl
cld
int3
fnstenv
and
push
adc
fmuls
and
xchg
pop
lahf
pop
or
and
add
jno
sbb
or
test
hlt
aas
mov
dec
mov
cmp
cmp
or
mov
loope
movsb
sub
mov
ljmp
xchg
int
push
sub
lcall
xor
and
mov
sbb
cmp
into
pusha
js
scas
mov
in
mov
push
cli
adc
and
mov
dec
lds
mulb
jno
repz
je
leave
jg
test
cmc
push
adc
imul
test
mov
mov
leave
out
sub
inc
or
out
add
adc
dec
lret
sahf
pushf
std
pop
rcr
push
lret
out
mov
sbb
inc
jae
sbb
fdivrl
mov
mov
mov
lret
insl
or
js
ja
mov
int3
mov
lahf
loop
movaps
dec
adc
adc
mov
inc
in
leave
or
cmp
jo
stc
dec
repnz
ljmp
test
jl
xor
xchg
mov
sbb
loop
fstp
rclb
cmp
pop
dec
jb
sub
scas
push
sahf
pop
int3
in
movsl
mov
fdivrl
enter
lret
je
push
xor
fwait
ret
xchg
fsubrl
hlt
push
rcll
cmp
cmp
mov
mov
movsb
cmp
repnz
pusha
sub
mov
ret
mov
sti
pop
cs
inc
insl
pop
dec
mov
mov
lods
jb
stos
push
and
or
es
dec
cltd
or
je
sti
lahf
and
loop
adc
mov
stc
iret
out
or
sbb
cmp
pop
jmp
adc
sbb
test
jnp
push
add
fldt
push
xor
frstor
enter
adc
jns
pop
cvtpi2ps
pop
fwait
mov
jb
divl
enter
mov
dec
push
cmc
out
pushf
or
mov
jmp
dec
xlat
aaa
xor
test
dec
push
andl
dec
adcl
pop
cmp
das
add
pop
adc
xchg
mov
push
std
iret
aam
addr16
mov
cmp
stos
call
dec
aam
rcrl
push
loopne
dec
or
loopne
fstp
out
repnz
dec
mov
stc
adc
cmp
adc
ja
xorb
add
ja
mov
sbb
ljmp
out
leave
divps
pop
pop
inc
lock
jl
insl
mov
xchg
dec
ret
sbb
dec
inc
cmpsb
jp
in
inc
sbb
out
stos
mov
jl
or
movb
cmpsb
pop
popf
fdiv
adcb
jns
cmpsl
inc
insl
adc
insb
hlt
sub
xor
inc
shlb
jmp
in
outsb
mov
sub
pop
mov
mov
cmp
mov
inc
add
fwait
outsb
gs
xchg
negb
arpl
sbb
hlt
push
lret
dec
push
push
idivl
jns
push
lds
lea
clc
leave
lods
xlat
pop
loop
test
iret
out
cmp
clc
jecxz
pusha
insl
or
dec
rorb
movsb
stos
pop
in
ja
mov
lds
rcrl
cmp
mov
adcb
testb
fwait
and
lea
dec
sub
popa
mov
lret
cli
leave
sbb
stc
cmpsl
adc
aas
testl
dec
add
daa
imul
dec
xor
fidivrl
xchg
sbb
stos
popf
pop
into
adc
daa
in
cltd
add
jb
das
mov
frstor
push
ja
or
xor
int3
lcall
stos
add
ficomps
and
dec
mov
cld
mov
xchg
sbb
ds
aaa
cmp
dec
pusha
sbb
add
in
pop
js
dec
push
fsubr
inc
je,pn
add
mov
mov
pop
inc
dec
out
sub
scas
push
js
inc
hlt
cmpsb
lds
popa
or
add
faddp
clc
lret
jno
mov
pop
jne
clc
push
shr
lret
xchg
mov
xor
aaa
mov
xchg
lret
dec
mov
ret
sbb
adc
sti
sarb
mov
lea
repnz
dec
addr16
inc
out
inc
xchg
daa
xchg
xor
shll
popf
out
adc
test
int3
scas
leave
mov
add
xor
inc
je
outsb
pushf
mov
cmp
out
add
stos
mov
jecxz
lods
subl
outsl
jmp
cmpsl
and
sti
mov
lock
or
mov
jae
sti
enter
xchg
lret
movsb
pop
and
mov
cmp
xchg
fidivl
push
lods
add
out
cltd
aam
dec
xchg
push
outsl
lcall
pop
cld
cwtl
add
test
mov
shl
lret
pop
repnz
xchg
gs
cli
call
ret
out
imul
dec
jbe
out
pop
mov
test
cmp
xlat
jnp
push
or
pop
push
sub
pop
lcall
popa
hlt
jp
popf
movsl
cmc
and
mov
enter
lret
and
ja
lret
adcl
push
inc
dec
or
mov
push
das
or
cmpsl
push
shr
xchg
push
cmp
add
cmp
nop
pop
sbb
orb
sbb
lods
bound
push
lret
pop
inc
pushf
das
nop
icebp
mov
cwtl
mov
out
lea
and
pushf
mov
jl
in
mov
xor
cmp
or
nop
sarb
std
clc
cmp
movsl
imul
ret
pop
iret
ja
sub
xor
pop
sarb
adc
arpl
xor
push
insb
mov
incb
xchg
por
or
sub
ficoml
out
mov
jle
adc
int
xor
add
mov
in
rolb
pop
add
imul
cmp
jecxz
jne
xchg
lahf
jae
add
and
mov
repz
add
mov
xor
inc
and
icebp
mov
out
mov
shlb
xchg
xlat
or
fwait
pop
sub
pop
aad
push
aam
outsb
fsubs
outsb
pop
loopne
dec
sbb
inc
orl
imul
fstps
xchg
mov
xor
pop
xchg
adc
int
cwtl
int
fcmove
sub
push
insb
cmc
sbb
cmc
add
pop
fistl
arpl
out
inc
or
sub
in
push
clc
popf
stos
cmpxchg
dec
mov
das
shrl
sbbl
jns
fsubrs
leave
stos
mov
test
ds
pop
xor
pop
loope
loope
cmpb
jl
lods
aaa
cmp
fbstp
inc
sbb
and
inc
xchg
rcr
mov
jno
scas
repnz
dec
jne
lods
adc
xchg
xlat
dec
push
jmp
fistps
push
ret
inc
out
add
mov
fcmovnbe
sub
fdivs
xchg
in
bound
aam
sbb
and
fnstsw
mov
imul
push
mov
imul
sub
xchg
into
cmp
out
addr16
jge
jecxz
mov
mov
cmp
insb
dec
fwait
addr16
popf
mov
sbb
inc
xor
imul
jbe
es
dec
add
insb
xorl
and
in
lea
jmp
arpl
ret
sti
repnz
in
in
scas
int
cmp
or
xlat
sub
mov
sbb
int3
inc
sbb
adc
jno
cltd
bound
scas
xchg
cmp
iret
pusha
inc
mov
fdivs
mov
fistpll
aas
fstpt
leave
xor
loope
loopne
jmp
sbb
popf
push
out
daa
push
mov
xchg
pop
mov
or
sub
in
shll
jl
in
sub
out
ds
movsb
out
mov
mov
or
add
mov
notb
lock
dec
hlt
dec
rorb
mov
and
dec
mov
add
xor
repz
mov
and
inc
lds
sub
lret
jmp
push
or
pop
and
cli
je
xchg
popa
insl
call
jg
mov
pop
leave
das
dec
sti
push
in
rolb
repnz
inc
pop
div
jl
pop
fidivs
daa
ds
int3
mov
or
iret
push
cli
mov
ss
fcmove
xchg
repnz
pop
icebp
ds
pop
mov
test
int
mov
fists
or
fnsave
data16
rcrb
sub
add
int
out
pop
aas
call
daa
xor
fisttpl
inc
call
dec
loop
cmp
xchg
pop
xor
cmp
push
stc
push
mov
xor
inc
popf
scas
cmp
push
sbb
mov
dec
mov
into
add
adc
fsts
jle
sub
xchg
int3
push
adc
xchg
push
mov
out
pop
xor
in
je
out
cmp
cmp
pop
aaa
stos
out
mov
adc
js,pn
sbb
mov
xor
divb
bnd
jp
in
jle
pop
pop
mov
pushf
jl
mov
lcall
loope
cld
sbb
shlb
dec
inc
dec
mov
into
push
ffreep
into
cmp
and
adc
ss
rcrb
xchg
xorb
nop
lret
dec
dec
cmp
nop
sahf
sbb
stos
pop
ret
test
jo
mov
push
xor
xchg
inc
popa
xchg
divb
and
jle
xchg
in
pop
push
in
shll
ret
out
shrl
push
jb
mov
call
add
aas
jp
inc
dec
add
movsl
lods
xchg
dec
cmp
lds
lods
lret
nop
lret
adc
lahf
adc
out
xchg
fcomi
and
es
xchg
adc
subb
cli
pop
add
jb,pn
in
push
push
or
sbb
xchg
test
sbb
lock
pop
xchg
mov
stos
push
bound
fwait
jle
inc
ret
jne
jle
or
and
pop
int3
jg
test
nop
das
xlat
adc
jb
cli
popf
imul
bsr
insb
cmc
fnstsw
mov
ljmp
hlt
iret
pushf
push
popa
push
sahf
pushf
sahf
jns
xor
push
xchg
jecxz
xchg
pop
mov
jecxz
fdivrs
repnz
imul
dec
popf
push
cwtl
into
ficompl
adc
xchg
ja
push
sub
ret
jne
xchg
cmpsb
js
lock
xchg
push
lcall
outsl
push
dec
mov
and
sub
sti
xlat
mov
mov
sbb
lcall
dec
push
lods
fsubs
xor
in
idivb
inc
in
hlt
scas
stc
xchg
jecxz
push
shll
pop
xchg
nop
add
stos
mov
mov
jae
fisubrl
push
mov
inc
mov
inc
in
mov
clc
push
in
fimull
lahf
xchg
popa
add
into
mov
nop
ret
mov
movsb
in
and
lcall
adc
dec
dec
mov
decl
icebp
push
push
xchg
sbb
insb
dec
ds
cmpsb
xchg
pop
dec
cmc
cmp
loopne
jnp
push
mov
push
popf
icebp
cmp
leave
xchg
push
dec
adc
mov
imul
push
out
mov
inc
mov
jnp
test
jns
mov
imul
pusha
loopne
mov
add
lret
jmp
and
jmp
push
ret
arpl
push
fistps
jg
xchg
xchg
inc
fs
xchg
js
imul
jbe
test
add
pop
sub
mov
jle
dec
mov
adc
mov
into
jecxz
fsubrp
sub
shll
cmp
pop
mov
insb
sub
jmp
mov
adc
fdivs
cwtl
jmp
pop
js
hlt
inc
mov
out
jns
arpl
mov
mov
loope
sti
adc
imul
add
adc
cmp
pop
out
and
cmpsl
mov
icebp
rcl
jns
cmpsl
negl
imul
cmpsl
dec
inc
cli
fcomps
xchg
fadd
xchg
gs
mov
cmovne
cmpsb
mov
xchg
out
dec
fisttps
das
cmp
jmp
mov
js
andb
sub
fildl
inc
dec
lods
xlat
pop
sub
ffreep
pop
pushl
shlb
jns
ret
lret
leave
int
lret
add
push
inc
out
aad
insb
cs
fadd
daa
enter
adc
mov
xor
mov
nop
movsl
out
cwtl
pop
add
ljmp
pop
mov
and
pop
int
out
jl
or
inc
mov
addr16
and
lahf
out
out
test
mov
jb
out
adc
xor
jl
int3
mov
push
or
in
aas
adcl
or
lods
cld
aaa
mov
sbb
imul
je
jne
pop
notl
lcall
or
in
jns
push
loopne
sub
out
xor
mov
add
xchg
fxch
icebp
clc
rol
jmp
js
xchg
pop
cld
rorl
mov
dec
clc
outsb
aas
mov
and
inc
lods
mov
jnp
cwtl
cmp
pop
repz
pop
mov
or
mull
adc
xor
push
hlt
and
in
ljmp
adc
aas
xor
pop
push
or
push
ja
scas
into
cmc
out
mov
aas
mov
aas
add
mov
cmp
sub
clc
xchg
roll
loop
cmp
cmp
xor
fisttps
or
shrb
js
int
fwait
xchg
pop
mulb
add
pop
dec
sahf
popf
stos
insl
dec
mov
mov
push
mov
negb
adc
mov
xchg
test
xchg
loop
cmp
add
test
sbb
orb
pushf
ss
fs
cmpsb
jo
daa
add
cmpsl
mov
lea
enter
arpl
enter
dec
adc
xor
out
mov
ja
adcb
lret
iret
sbb
inc
cmp
and
out
ljmp
and
adcl
iret
cli
movsb
call
decb
loop
adc
ja
pop
inc
mov
stos
add
xchg
pop
jns
add
loopne
jg
ljmp
dec
mov
popf
ret
mov
push
mov
xor
ds
mov
repz
mov
jp
push
in
int3
ds
xorb
push
mov
add
rorb
mov
test
cwtl
insl
loop
jb
repnz
jge
xchg
or
mov
cwtl
dec
xchg
cmp
cmpsl
pop
outsb
out
leave
hlt
and
mov
pop
dec
out
pop
jae
cs
pop
lcall
mov
mov
repz
mov
repz
dec
inc
inc
popa
cmp
scas
push
mov
fadd
sub
ljmp
fidivrs
mov
mov
sub
aas
dec
div
push
adc
sub
popa
add
ret
inc
std
cmp
push
push
and
inc
add
out
leave
sbb
add
jg
or
leave
mov
in
lcall
lret
pop
jl
clc
sub
pop
mov
cltd
mov
adc
jp
insl
xchg
in
shrl
faddl
jns
das
pop
dec
dec
mov
xchg
stos
sub
jmp
icebp
or
push
cmpsb
xor
sar
push
jne
cltd
in
movsb
xchg
sub
sub
inc
in
cld
mov
outsb
stc
and
sub
outsb
sbb
and
lds
aam
push
xchg
repnz
sarl
pop
add
xchg
icebp
push
int
or
addr16
xchg
pop
inc
es
inc
ret
jns
adc
imul
pop
or
pop
xchg
sub
jno
cltd
xor
dec
xor
cmp
aam
lds
jnp
lods
mov
es
out
test
rolb
rclb
jno
enter
lea
push
in
sbb
movsl
mov
push
jle
jle
jno
cvtps2pi
cmp
outsl
loope
adc
adc
adcl
mov
cmpsl
and
fmull
xchg
mov
repnz
xlat
xor
xchg
cmpsb
jno
ss
pushw
xchg
lds
or
insl
adc
jp
arpl
movsl
and
xchg
cmp
jbe
dec
inc
push
push
addr16
out
stc
sahf
test
repnz
push
mov
jge
jge
cmp
fmuls
ret
cmc
js
scas
add
xchg
lcall
push
pop
sarb
aam
mov
xchg
das
add
push
pusha
jle
stos
dec
add
jmp
mov
popa
enter
sub
sub
stos
fs
push
jne
mov
lcall
jae
loop
cli
std
std
dec
push
lock
mov
filds
push
pop
and
ss
sub
daa
and
push
adc
test
cmp
mov
push
xchg
or
imul
and
mov
jge
or
jb
fisubl
je
mov
scas
inc
xchg
ret
sbb
jg
sarb
mov
xor
outsb
pop
jg
fmuls
xor
iret
xchg
sti
sub
push
push
adc
adc
mov
lock
jle
dec
xchg
out
cmp
and
mov
inc
in
add
xchg
ds
test
shrl
inc
nop
pop
sbb
jne
fwait
mov
inc
push
lahf
or
cmp
pop
lret
xor
sub
inc
sbb
dec
sub
fistl
sub
sahf
pop
not
adc
mov
out
xchg
push
sbb
clc
jae
mov
aas
imul
and
es
and
std
jb
je
imul
shr
xchg
inc
cltd
lahf
and
in
adc
pop
lret
add
pushf
adc
cmp
sbb
sbb
aas
push
add
out
fiaddl
or
dec
jnp
adcb
je
fistpll
jmp
add
pushf
cmpsl
push
repnz
fcmovnbe
je
xchg
adc
ret
xchg
movsb
mov
inc
push
addb
lret
xor
std
popa
out
cmp
lods
add
and
rcll
jge
jbe
hlt
dec
mov
cli
jno
or
jg
scas
push
ja
mov
sbb
mov
rorb
loop
aas
lahf
js
xor
in
mov
xchg
in
mov
rorl
pop
sub
fcmovne
mul
imul
out
lret
mull
repnz
xor
aam
xchg
cmpsl
mov
jb
scas
shlb
xchg
icebp
inc
ja
add
enter
adc
mov
dec
call
test
xchg
xor
xchg
pop
scas
pushf
xchg
mov
push
xchg
movsb
imul
hlt
std
sahf
jns
mov
mov
movsl
fisubrs
inc
fwait
lahf
jmp
xchg
push
xor
outsb
sarl
xor
lret
jp
sub
mov
mov
cld
mov
add
push
push
xor
outsl
push
sbb
enter
lret
mov
jne
orl
cmp
inc
dec
xchg
pop
sbb
add
test
mov
sbb
cwtl
xchg
adc
imul
sbb
cmp
inc
sbb
insb
lret
mov
arpl
add
aas
orb
loope
bound
out
push
in
movsb
ret
add
test
and
inc
ja
popa
inc
mov
pop
cmp
shll
popf
adc
lds
xor
addr16
sbb
sub
xchg
xchg
xor
jmp
jg
jbe
fcomip
sub
push
shll
repnz
scas
push
mov
scas
insb
call
punpckhwd
int
incl
loope
inc
repz
js
sti
lds
sbb
push
aad
mov
lret
shll
jne
add
mov
mov
adc
jg
ret
jnp
fucom
roll
mov
icebp
aaa
push
popf
frstor
jnp
loope
xchg
xor
and
ljmp
out
lea
cmp
lds
sar
outsl
int
cmp
xchg
seto
add
stos
mov
pop
fstpt
outsb
mov
lods
dec
cmp
mov
subb
orl
sub
data16
lods
mov
daa
cmp
and
jns
jne
aam
mov
mov
adc
cmp
sub
xor
adc
push
mov
cmp
jp
gs
aas
jae
xlat
cmc
mov
popa
xor
pop
sub
sti
es
sub
pop
rcll
xchg
dec
cwtl
out
push
push
jmp
mov
lret
jecxz
icebp
mov
inc
sub
xor
in
push
push
xchg
jno
inc
push
and
add
sbb
test
ds
scas
test
ret
and
push
lods
arpl
adc
cmp
sbb
xchg
pop
push
jo
adc
loope
shll
cmp
lods
call
jne
loope
mov
stos
mov
sarl
fnstsw
stc
loop
repnz
adc
xchg
movsl
ret
sbb
jae
cmpsb
push
jnp
out
in
pop
scas
jmp
or
sbb
cmp
in
sub
mov
out
xchg
int
das
and
xlat
scas
fadd
jae
icebp
inc
insl
or
push
mov
cmp
sub
je
xchg
sbb
aaa
sbb
imul
into
pop
lds
jmp
fimull
push
movb
and
xor
sahf
loop
sub
int
mov
jo
cmp
xor
js
ds
pop
divl
xlat
lock
rorb
xlat
xchg
adc
or
xor
inc
mov
popa
adc
xor
cmpsb
pop
divb
les
cli
ret
jnp
pop
repnz
push
mov
xor
ljmp
adc
cld
mov
sub
mov
sbb
mov
outsb
xor
push
enter
jge
outsl
jp
mov
pop
adc
xchg
dec
lret
xchg
mov
push
scas
xor
adc
imul
xor
insl
jecxz
das
sub
mov
and
and
int
cmc
mov
lret
adc
inc
mov
push
jno
push
and
sub
and
adc
pusha
fbstp
hlt
xor
jne
adc
imul
add
pop
sub
roll
fs
sub
fnstenv
in
out
cmp
mov
ja
adc
data16
mov
icebp
sub
das
arpl
xor
loopne
adc
sub
stos
nop
cmp
inc
lret
lret
mov
jl
jle
cmp
cmpl
loopne
dec
and
fidivs
push
add
mov
xchg
and
xchg
or
stc
sbb
sub
push
lahf
xchg
and
push
scas
loop
jge
cwtl
cmp
movsb
mulb
dec
aad
mov
jo
adc
je
and
inc
xchg
testb
cs
std
mov
jecxz
xchg
sbb
mov
imul
cmp
cmp
xchg
push
popf
imul
inc
pop
lcall
push
ficomps
fucomip
pop
ljmp
sbb
mov
mov
nop
or
lret
mov
pop
out
cmc
or
mov
and
mov
xchg
fstl
adc
mov
cs
adcb
fbld
xchg
mov
jmp
xchg
lock
jb
outsl
adc
iret
inc
jg
xor
imul
dec
std
add
mov
push
aad
jp
into
or
jp
loopne
fdivrs
or
stos
sub
or
notb
ja
cld
adc
sbb
sub
adc
add
getsec
stc
mov
push
or
jnp
ret
xor
scas
leave
mov
dec
in
or
test
mov
jns
scas
sbb
popf
orb
stos
icebp
loop
inc
xchg
adc
imul
movsl
fs
sub
cmpsl
inc
xchg
rorb
imul
les
popa
test
jmp
lret
leave
punpckhdq
or
cmp
frstor
jnp
inc
adc
lods
leave
stc
dec
and
add
lock
jae
ret
pop
in
jp
movsl
fisttpl
test
stos
sarb
adc
mov
xchg
aas
jo
pop
mov
pusha
out
sahf
pop
frstor
cwtl
repz
jns
dec
jp
sub
sub
pushf
dec
push
mov
fiaddl
aaa
add
test
jno
dec
dec
ja
sbb
gs
lret
mov
cltd
and
push
mov
mov
imul
idiv
jbe
shrb
aaa
and
stos
out
lcall
xor
inc
add
pop
xchg
mov
xor
dec
xchg
jge
scas
dec
dec
into
sbb
repz
jp
cmp
out
xor
es
mov
cmpsb
or
repz
cmp
cmp
push
pop
cmp
pop
dec
repz
sub
dec
mov
sub
add
addr16
cltd
jp
daa
shl
loop
sbb
ficoml
inc
or
sahf
int3
fldcw
dec
sbb
mov
lret
rorb
and
adc
sub
sub
into
mov
dec
lahf
mov
fstpt
sbb
loopne
jb
and
bound
and
popa
jmp
orl
sbb
jno,pn
int3
lock
add
pop
in
pop
xor
cmp
mov
lea
inc
in
mov
inc
add
cmp
loope
movsl
push
test
mov
xor
add
out
push
push
jbe
jecxz
dec
push
xchg
mov
outsl
inc
sti
mov
outsl
loope
jecxz
loope
ret
imul
push
cli
ja
loop
fdivl
cmc
ficoms
push
and
cld
sarl
cmp
push
mov
fisubs
cld
repz
sahf
ljmp
hlt
sub
aas
ret
and
push
mov
and
lea
sbb
jnp
xor
dec
jo
mov
lahf
cli
jp
inc
adc
mov
mov
pop
cmp
in
mov
popa
xchg
or
shrl
sahf
repnz
test
xchg
push
sub
loopne
hlt
seto
mov
or
xchg
movsl
rorb
mov
loop
mov
cmp
ss
daa
test
into
cmpsb
mov
mov
out
mov
adc
push
mov
adc
scas
loopne
sbb
sahf
es
in
pop
pop
cmpsb
pop
adc
movsb
lds
in
jge
das
cmp
movsl
dec
rcl
sub
push
icebp
lahf
cwtl
cmp
mov
aas
ljmp
in
loopne
adc
test
jae
xchg
cwtl
dec
jmp
cmp
test
jge
inc
or
push
jl
jns
pop
jle
subl
xor
or
cmp
xchg
sbb
das
jmp
jge
ret
and
add
mov
les
inc
dec
jg
imul
es
xchg
das
out
or
jnp
jno
mov
lea
sbb
xor
dec
cwtl
cmpsb
adc
xor
cmp
ret
test
or
shlb
fcmovnbe
fsub
cmp
cwtl
mov
push
xchg
dec
sbb
arpl
sub
popf
aam
test
nop
or
xchg
in
and
daa
out
les
jns
xor
fsubl
jnp
xchg
mov
or
sbb
sbb
in
pusha
lahf
cmp
pop
scas
sub
out
and
mov
cmpsb
sti
or
call
fcomps
mov
add
xchg
xchg
outsb
push
sbb
enter
cmpb
pop
in
mov
ja
push
push
sub
sbb
js
in
fs
leave
push
in
repz
fwait
bnd
outsw
mov
or
pop
loopne
pop
cld
test
subl
or
iret
lods
outsl
add
pop
adc
decb
and
movsl
or
push
push
fwait
shrl
jp
fs
mov
aam
push
sahf
xlat
sbb
shlb
push
push
sub
dec
ss
ss
xchg
or
out
subb
popf
xor
add
in
stos
popa
sub
scas
push
or
hlt
add
stc
push
stos
sbb
jbe
fcompl
adc
push
outsl
int3
mov
xchg
out
mov
stos
jno
mov
enter
xor
cmpsb
subb
outsb
mov
insb
pop
xchg
push
mov
sbb
push
dec
movsl
repz
dec
dec
cmp
inc
insb
mov
jae
xchg
mov
pop
scas
push
clc
push
fldl
xor
stc
sahf
out
mov
aam
cmc
or
ss
pop
mov
hlt
stos
aas
hlt
pop
inc
adc
add
test
sub
dec
lahf
mov
cmc
mov
pop
jns
lret
push
push
sbb
mov
subb
or
mov
xchg
inc
pop
testl
mov
mov
rcl
dec
and
rcll
add
add
lahf
xchg
mov
push
mov
or
nop
sbb
pop
loope
push
xchg
sbb
imul
shrl
shl
adc
add
jae
out
sub
repz
ljmp
scas
data16
mov
sbb
jle
arpl
in
shll
sbb
inc
cltd
subb
lcall
in
mov
fisttps
pop
or
mov
and
and
xchg
daa
in
xchg
or
mov
add
mov
arpl
cs
in
jp
fs
inc
ss
adc
pop
rolb
pop
stos
sbb
pop
jp
ss
movsl
fs
push
sub
inc
jecxz
out
push
pushf
xchg
mov
fs
adc
and
mov
ds
mov
pop
rcll
mov
lret
in
dec
mov
adc
xchg
in
pop
inc
mov
jo
lods
inc
js
xchg
inc
sbb
outsl
mov
rcrl
xchg
xorl
cmp
inc
adc
aam
fmuls
int3
lahf
mov
repz
fsubrp
sub
cmp
adc
jo
push
xor
jg
jae
hlt
inc
fnstcw
add
mov
mov
jae
pop
mov
test
push
repnz
sub
xchg
outsb
faddl
inc
inc
mov
add
movsb
test
xor
testl
jmp
in
xor
push
cmpsl
jecxz
mov
inc
xor
outsb
std
test
lods
fidivrl
jmp
leave
and
dec
ja
adc
and
cld
in
icebp
dec
jge
xchg
imull
sbb
xchg
in
and
adcb
cmc
insl
jle
mov
jns
sub
movsl
xchg
stc
and
xor
jnp
and
push
sbb
cmp
imul
in
movsl
lahf
sahf
dec
shl
xor
and
lods
movsb
and
lcall
mov
faddp
out
enter
addr16
sbb
mov
dec
pop
push
dec
movsl
fdivrs
pop
sarl
and
push
insb
mov
sub
repz
sti
and
add
mov
frstor
clc
pop
and
sti
mov
shlb
rcll
adc
fcoml
jnp
aad
pop
das
cmp
aad
pop
or
nop
xchg
lret
vcvttsd2si
sbb
enter
dec
inc
or
mov
fistpll
sub
ret
and
cltd
imul
xor
add
pop
bnd
and
shl
out
xchg
aaa
mov
xchg
jmp
test
xor
stos
in
sbb
test
jle
outsl
stc
cmp
std
cs
cmp
and
or
popf
aaa
inc
aas
inc
add
xor
pop
aad
sarl
cli
hlt
mov
daa
incl
pop
add
mov
push
sahf
add
pop
fbstp
cltd
jbe
push
jle
in
sbb
pusha
insl
mov
xor
shrl
test
pop
ficoms
subb
jl
xor
lods
push
cmp
xor
jp
and
sbb
dec
cmp
adc
or
xor
loop
jl
xchg
jmp
cli
repz
in
push
aaa
sarb
addr16
add
jle
les
std
push
mov
movsb
add
cmpl
sbb
cmp
rorb
bnd
daa
mov
ljmp
mov
daa
popa
fs
stos
sahf
jae
fisttpl
sub
push
pop
call
sub
movsl
out
call
out
sti
cmpsb
add
cmp
mov
dec
mov
jg
mov
and
pop
and
movb
mov
stc
add
push
pusha
rolb
dec
ja
pop
lea
xchg
mov
ja
test
repnz
xchg
mov
inc
cmp
pop
jno
loop
xor
std
and
bound
jbe
push
mov
xor
mov
mov
adc
popf
lock
shlb
mov
insb
aam
je
mov
mov
cmp
xor
mov
or
test
arpl
fcmovnb
or
inc
test
clc
pop
das
shlb
repz
out
movsl
test
or
out
mov
sbb
dec
lods
push
sti
repnz
ljmp
xor
in
popf
pop
sbb
int3
jecxz
xor
mov
mov
out
push
xchg
and
shlb
cli
inc
push
add
adc
pushf
les
xchg
int
mov
movsl
mov
jle
call
xor
fs
mov
mov
pop
rol
mov
xor
lods
movsb
jne
mov
mov
inc
lahf
mov
pusha
shrl
fcmovbe
adc
mov
xor
aam
jecxz
mov
daa
test
lret
sbb
std
ret
testl
insl
mov
fiaddl
or
dec
int3
and
or
in
lret
cmp
mov
pop
or
and
xor
jmp
pop
cmp
push
orb
into
test
adc
lret
in
iret
insb
repz
movsb
sbb
aas
outsl
movsl
sbb
test
sub
mov
dec
fsubr
xor
mov
and
push
jbe
push
stos
sbb
ret
dec
shll
fistps
aaa
arpl
mov
out
stos
je
fisubrl
jecxz
jb
jb
cmp
pop
jl
mov
pop
and
aas
ljmp
scas
aas
loope
mov
jge
in
cmc
mov
cmp
mov
pop
in
mov
sti
test
mov
insb
test
lods
jg
in
cwtl
xor
pop
cli
int3
pop
mov
fildl
pop
xlat
test
call
ret
sub
sub
and
pop
adc
adc
mov
xor
dec
imul
pushf
and
loope
jns
xchg
mov
mov
xor
shlb
loopne
icebp
fsubs
imul
push
fs
sti
cmp
aad
add
jb
pop
xchg
jnp
sti
je
les
sbb
xchg
pop
jecxz
xchg
xor
rcr
test
out
ficompl
pop
adc
pop
pop
jecxz
mov
out
aaa
mov
xchg
push
into
mov
add
xorl
xchg
out
inc
pushf
cmpsl
cmp
pop
cltd
jb
cmpsl
cmp
cmp
loope
repz
in
mov
jo
out
and
pushf
dec
cmpsb
rcrl
dec
addl
and
mov
les
rorb
mov
and
add
mov
inc
jl
outsb
test
adcb
ljmp
push
mov
inc
xor
pushf
stos
inc
aad
pop
adc
outsb
push
xchg
xchg
out
push
test
cmp
pop
mov
lahf
mov
test
scas
mov
push
jge
lret
xor
aas
inc
mov
mov
sub
xchg
add
fcmovnb
sub
cli
sub
jb
rcll
jbe
ja
fldl2t
mov
sbb
mov
rorb
xchg
push
les
sbb
lods
xchg
pusha
add
outsl
and
jns
shl
cwtl
mov
nop
jecxz
or
mov
mov
pop
jecxz
popa
fsts
rolb
push
test
xor
xchg
orb
daa
push
js
sti
xlat
mov
imul
aas
repnz
and
pop
loopne
xchg
xchg
icebp
xchg
push
mov
lret
movsl
out
and
mov
imul
arpl
mov
cmpb
test
mov
incl
sub
rcll
push
adc
or
popa
or
addb
imul
andb
mov
notb
and
iret
mov
sbb
arpl
inc
in
lret
jnp
dec
movsl
hlt
enter
adc
dec
sub
xchg
dec
lea
inc
cmp
jg
mov
or
aad
lea
mov
lahf
ljmp
mov
mov
int
adc
daa
push
adc
test
pusha
jecxz
out
fcoms
mov
repnz
sub
cli
int
jg,pt
lret
cmpsb
test
cmpsl
mov
and
hlt
lods
repnz
outsl
xchg
xlat
fnsave
cmp
sti
dec
mov
sbb
adc
jmp
addr16
jmp
sbb
dec
test
shrb
and
cld
sahf
sub
fstps
add
inc
mov
insl
or
shl
insb
and
or
adc
dec
push
jle
add
jle
les
push
sarb
lcall
mov
andl
jb
call
mov
pop
cmc
sub
gs
mov
cmp
inc
insb
popa
pushf
fdivs
adc
loope
adc
gs
sbb
pop
arpl
pop
andl
and
xchg
in
pop
pop
dec
or
scas
xchg
xlat
pop
les
sbb
cmp
jge
dec
xchg
aam
or
in
sub
fs
push
cs
inc
jge
fwait
add
jns
fiadds
and
das
dec
aad
inc
fcompl
outsb
sub
add
nop
repz
fdivp
outsl
jae
inc
sbb
mov
mov
mov
sub
repz
loop
int3
or
lret
stc
nop
rcll
dec
lock
inc
adc
fcomps
mov
in
add
xor
lcall
shlb
scas
push
push
mov
les
cmpsb
cmp
lods
jl
jle
push
test
dec
xor
es
jmp
das
pop
icebp
lds
lock
mov
push
mov
push
iret
push
dec
daa
and
jno
add
cwtl
aas
ret
xchg
aad
push
mov
mov
lods
fwait
pop
jnp
jg
sub
filds
dec
pusha
and
cltd
popf
push
aad
fbld
mov
aam
and
inc
pushf
mov
fdivrl
repnz
fadd
scas
mov
push
add
mov
dec
shrb
cmc
adc
or
pop
shll
test
idivl
mov
xlat
cmp
lea
push
shr
imul
bound
pop
imul
jmp
mov
fiaddl
and
jmp
dec
push
sbbb
roll
cs
shl
mov
mov
mov
jo
xor
mov
fildll
cmp
lods
inc
je
mov
dec
mov
adc
scas
xor
xchg
push
xchg
cwtl
jp
mov
clc
lea
aam
std
xchg
mov
and
or
sti
add
fistl
push
cmp
test
scas
sbbb
cmpsl
pop
cmp
fstl
jae
enter
popa
pop
je
mov
ror
pop
out
mov
js
fiaddl
adc
mov
lea
cs
or
lcall
bnd
movsb
fdivs
movsl
cltd
pushf
fmulp
add
ss
outsb
pop
xor
mov
rclb
arpl
xchg
aad
leave
stos
lret
repz
pushf
lods
pop
cld
movsb
pop
repnz
out
sbb
xchg
loop
pop
cmpsl
dec
and
cmc
shll
xor
inc
or
and
gs
shlb
mov
es
movsb
and
addb
mov
out
stc
call
in
inc
in
mov
js
das
push
xor
dec
aaa
in
jmp
fimull
mov
mov
lret
test
inc
js
lret
aam
sub
dec
stc
mov
lock
push
aad
xchg
cmp
mov
dec
fstl
sub
popa
adc
push
daa
mov
int
push
icebp
in
or
std
mov
lahf
test
adc
rcrl
cmc
mov
bound
jo
xchg
pop
test
xor
push
shl
lds
movl
pop
xorb
inc
cwtl
sbb
jno,pn
xor
cs
addr16
das
outsl
add
les
out
out
out
cmp
int3
rorl
dec
cltd
dec
mov
jmp
outsl
stos
mov
xchg
sbb
enter
mov
je
pop
data16
int
inc
pusha
sub
lret
mov
mov
or
rcll
mov
enter
addr16
mov
cmp
dec
sti
popf
jnp
jecxz
inc
mull
dec
xor
mov
imul
lcall
sbb
test
ss
mov
mov
pop
aas
sti
lret
sub
movsl
insl
jmp
scas
mov
jne
stos
fdivp
sub
int
cwtl
repz
out
outsl
das
push
bound
mov
gs
lods
into
or
push
aam
mov
shll
cli
sub
or
dec
fwait
push
scas
adc
add
mov
test
fcoms
scas
mov
lret
mov
mov
pop
call
sahf
cwtl
sbb
mov
out
nop
fwait
sarb
out
push
int
xchg
jbe
sbb
jmp
cs
shlb
add
cltd
outsb
ss
js
stc
loopne
fidivs
outsl
mov
ja
push
scas
dec
sub
imul
std
cld
and
lea
mov
rcl
adc
mov
ja
pop
decl
fdivp
mov
push
cmp
loope
inc
jge
add
adc
fldcw
ja
lods
sub
ret
fcoms
decl
sti
pop
mov
rorb
cmpsb
movlps
xor
jle
pop
jp
push
dec
negl
push
lret
cwtl
xchg
dec
push
dec
jecxz
decb
movl
fwait
sbb
sub
pop
dec
and
mov
int
mov
out
insb
ret
push
mov
pushf
test
in
sbbb
cltd
push
pop
mov
outsl
jae
mov
add
roll
loopne
pusha
imul
cmpsb
adc
sarl
iret
test
std
mov
sahf
jg
or
xor
mov
dec
mov
adc
xlat
jb
or
jbe
hlt
sub
repz
loop
mov
push
jo
mov
mov
push
mov
push
push
jb
add
jg
jge
xchg
negl
adc
sub
pop
lret
xor
movsl
pop
and
cmp
cmpsb
xlat
jge
divl
ja
dec
inc
cmp
mov
inc
fcompl
inc
sub
test
jb
in
inc
or
pop
imul
mov
int3
hlt
jp
ja
rcl
jne
pop
push
jnp
test
ds
mov
pop
loopne,pn
dec
fmull
addr16
lea
out
test
or
cmpsb
pop
aad
push
dec
cmp
push
pop
dec
lods
pop
jle
and
arpl
lret
xchg
mov
popa
cmp
mov
push
insb
xlat
rolb
dec
js
mov
sti
mov
mov
iret
neg
arpl
sarl
imul
es
negb
divl
push
and
sarb
mov
inc
jae
push
ljmp
and
fstl
lods
jne
and
fcompl
pop
and
test
in
bound
sbb
adc
test
cmp
in
xchg
jmp
push
jne
mov
xchg
and
aaa
rcll
jae
and
and
cmp
lahf
out
fmuls
mov
pop
xor
mov
ret
jge
and
sub
lret
xchg
fdiv
cmpsl
mov
push
sbb
dec
jg
test
out
xchg
lods
repz
dec
popf
mov
aaa
int3
lahf
icebp
xchg
hlt
lods
frstor
inc
inc
and
fdivr
sbb
push
pusha
xor
std
and
mov
insl
into
sub
push
lcall
push
cmpsb
dec
andb
test
xor
fldl
hlt
adc
bound
jg
test
sti
pop
adc
jecxz
jl
push
int
add
fimull
cwtl
jo
and
mov
mov
jmp
je
or
xchg
fdivrl
hlt
cmpsl
jp
push
test
xor
cmpsl
mov
lods
movl
nop
jb
pop
outsb
insb
ja
bound
add
mov
daa
sbb
cltd
add
sbb
xor
and
inc
int
inc
aam
mov
sbb
push
sub
jbe
mov
shrl
shrl
and
enter
insb
jg
jmp
cmpsb
fbstp
dec
mov
lea
lea
sbb
jge
pop
add
sbb
xchg
pusha
mov
stc
cmp
adc
rorb
lds
decb
mov
jmp
add
jbe
inc
pop
xor
mov
xorb
or
adc
jl
cltd
ds
dec
jno
adc
and
pop
out
les
filds
aaa
jno
not
mov
cmp
fnstenv
jl
arpl
sbb
mov
call
mov
scas
daa
lahf
pop
adc
movsl
lahf
jle
out
xor
out
xor
int3
xchg
jl
sub
xor
pushf
xchg
push
test
add
adc
jecxz
sub
xchg
or
add
jnp
pop
add
mov
rcrl
pushw
xchg
sbb
push
xchg
push
shll
or
inc
lea
pop
rcrb
push
mov
cmc
or
push
pop
mov
sti
adc
rclb
flds
jg
inc
mov
daa
insl
fimuls
dec
jnp
inc
cmp
sbb
repz
hlt
jbe
adc
orl
ret
js
int3
aam
push
jbe
aad
pop
mov
add
negl
jmp
pop
sti
les
push
in
pushf
adc
addr16
fsubs
xchg
inc
push
out
dec
fdivrs
adc
push
push
xor
pop
xchg
std
or
pop
jae
icebp
sub
adc
ffree
xchg
fdivrs
push
xchg
pop
out
jne
out
lds
add
mov
pop
mov
sub
loope
scas
or
jg
xchg
mov
bnd
clc
jle
das
ja
mov
rcrl
sub
test
adc
fmuls
mov
in
loopne
int3
pop
pop
add
std
adc
sub
ret
push
or
add
lock
aaa
fisttpl
mov
jecxz
ret
jb
jne
jno
into
out
or
iret
sarb
jmp
lahf
mov
sbb
push
andl
lods
dec
ss
cmp
inc
adcl
insl
xor
js
push
sbb
gs
and
arpl
xorl
pop
dec
insb
jne
sub
aam
xchg
sub
aaa
cli
hlt
popa
int3
sbb
insl
add
aaa
inc
lods
mov
ret
adc
push
lret
jmp
imul
xor
push
and
aas
dec
mov
lcall
insb
nop
mov
inc
lds
dec
sbb
inc
xchg
inc
testl
data16
fdivs
xchg
cmc
mov
mov
push
lret
cmp
sbb
into
inc
cmc
rorl
iret
sbb
cmp
sti
and
test
jg
pop
mov
dec
pop
sahf
jle
in
mov
and
pop
subb
cmp
das
lea
shll
test
rcrl
sbbl
mov
popa
loopne
cltd
lcall
or
jbe
sbb
decb
lret
inc
jno
in
popa
imulb
cmp
fucomp
xchg
pop
push
ja
pop
loop
or
xor
nop
out
inc
fdivl
pop
jne
lock
cld
lret
jnp
mov
push
int3
dec
mov
jge
call
and
aaa
sub
sti
jno
into
jae
fneni(8087
test
mov
xchg
in
and
push
adc
sbbl
cld
sbbl
pop
pop
inc
mov
and
sub
cld
mov
dec
outsb
jl
xchg
xlat
lods
fcoms
jb
jo
int3
fidivs
in
cmpsb
fcoml
lods
jmp
pop
ljmp
call
mov
arpl
push
jg
arpl
mov
jl
popf
loopne
xchg
add
xchg
jnp
or
loop
cmpsl
adc
push
gs
sahf
movsl
mov
push
cltd
sarb
ret
loop
into
lret
decb
je
xchg
add
lock
mov
in
aam
push
add
loop
inc
dec
nop
push
das
add
or
and
js
int
jbe
sub
ret
mov
jno
sub
into
in
loopne
sahf
stos
lock
pop
inc
dec
pop
dec
adc
push
jbe
cmp
test
lcall
and
mov
loop
cli
fcoms
sbb
jp
add
dec
or
mov
into
cmp
insb
ret
cli
loopne
push
jo
loop
or
push
xor
mov
inc
mov
lea
test
lods
jo
popf
shlb
sbb
sub
int
outsl
andb
dec
scas
adc
je
mov
out
sub
mov
adc
mov
sub
lret
push
fistpl
lds
or
flds
pusha
push
inc
shll
xor
insb
aas
rolb
loope
testl
dec
xchg
push
fldcw
mov
ficoml
xchg
es
subb
andl
sub
psubusw
mov
mov
push
outsb
dec
bound
rclb
test
inc
call
arpl
xchg
test
lds
fnstenv
mov
mov
push
add
cmp
loope
flds
ljmp
popa
test
mov
mov
xor
jb
in
and
out
mov
fmuls
fnstcw
and
js
int3
or
inc
cmc
jle
hlt
inc
xchg
cld
add
inc
dec
rdtsc
pushf
popa
enter
in
sbb
push
mov
mov
add
cmp
pop
fidivrl
mov
xchg
in
popa
push
xor
xchg
popf
ja
jecxz
shrb
cmpsl
add
mov
or
add
dec
repz
negl
pusha
fcomps
inc
sahf
xadd
dec
repz
int
pop
mov
js
push
or
jg
pop
aaa
inc
and
enter
pop
out
shrb
adc
sbb
or
or
into
sub
jecxz
loopne
in
xchg
xor
scas
into
adc
jecxz
clc
mov
cmpsb
mov
jl
or
cmp
fistpl
mov
imull
jp
adc
in
js
enter
mov
es
lods
mov
or
inc
mov
sarl
push
pop
push
adc
sahf
push
call
mov
xlat
jb
add
or
mov
stc
insl
mov
nop
jge
mov
mov
in
popf
enter
xor
sbb
pop
adc
cwtl
add
add
dec
mov
psraw
roll
popf
loope
xchg
xor
jae
andb
mov
lret
lea
subb
xor
mov
dec
filds
js
add
xor
idivl
inc
aam
clc
aas
push
lea
sbb
clc
xor
and
out
sub
mov
call
cmpsb
loopne
mov
dec
dec
lods
jmp
les
mov
sub
cmc
sbb
out
rorb
xchg
adc
ja
int3
ds
ret
xchg
scas
shr
sahf
std
iret
popl
mov
xlat
fidivrl
xchg
lods
adc
cmpsb
imul
jecxz
pop
int3
mov
pop
clc
icebp
xor
rorb
int3
in
xchg
mov
cmp
jbe
inc
sbb
push
mov
dec
fdivrl
push
lret
and
or
mov
bound
loope
jmp
cld
inc
jbe
mov
xchg
xchg
lods
pop
dec
inc
repz
mov
lock
lods
fisttps
insb
es
test
outsl
xchg
adc
test
cmpsl
int
ficoml
jo
out
xor
and
jae
in
pop
cwtl
and
pop
repnz
add
pop
rcll
pop
rcrl
adc
arpl
or
outsl
push
sbb
cmc
frstor
loope
ret
ja
xchg
or
mov
lahf
push
or
jae
dec
ss
das
inc
insl
cwtl
mov
mov
cmp
mov
cmp
xchg
xchg
loope
fistps
and
mov
dec
in
adc
data16
into
xlat
sub
scas
xor
xlat
mov
lods
jge
xor
jge
repnz
inc
jl
xchg
sahf
xchg
jge
jb
or
mov
mov
push
out
inc
sbb
pop
data16
sti
rorb
xchg
sbb
mov
leave
repz
adc
or
dec
pop
jmp
pop
sub
std
popf
xchg
jne
xor
inc
xor
std
dec
in
aaa
cmp
or
or
ret
in
mov
data16
mov
aaa
clc
mov
lcall
sub
mov
mov
sub
cmp
mov
adc
sarb
adc
push
inc
jno
mov
push
aam
sahf
mov
rcrl
aad
out
or
mov
and
and
sub
xchg
data16
add
cmp
lret
repz
push
cmp
enter
sbb
push
test
push
int
in
mov
leave
out
sbb
sub
or
inc
xchg
pop
inc
jo
or
pop
pop
test
out
test
jae
mov
push
pop
rorl
rclb
aas
lret
clc
push
int
sbb
sub
icebp
lods
gs
jp
and
xor
xchg
xchg
mov
icebp
icebp
es
ljmp
imul
xorb
cltd
hlt
or
pop
xchg
adc
in
sarl
xor
jne
pop
sub
jns
sbb
hlt
mov
clc
xchg
mov
xlat
fldt
sti
xor
jno
mov
test
pop
loopne
mov
jmp
pop
sub
jbe
push
lret
lds
pop
sbb
mov
pop
lds
pop
addr16
cmp
mov
loopne
push
cltd
std
adc
js
pop
jns
dec
push
jne
jmp
adc
das
adc
imul
lea
add
mov
push
bswap
outsl
pop
xchg
or
push
push
loop
pop
mov
dec
cld
sbb
jg
push
enter
cmp
cmp
add
js
mov
lahf
mov
cmpsb
or
insb
test
mov
lahf
mov
mov
adc
cld
sbb
push
lock
loop
popa
scas
stc
jl
xor
jle
es
fdivr
xor
mov
inc
mov
and
mov
fmull
andb
cmpsl
loop
pop
imul
dec
or
adc
dec
out
sar
lds
dec
xor
cmpb
fisttpl
pop
add
aaa
daa
dec
pop
js
loopne
jbe
mov
push
jae
jle
sbb
les
jb
mull
fwait
addr16
inc
or
sub
fs
ss
adc
fldt
shrb
xor
ljmp
and
add
and
icebp
les
mov
cltd
pop
int3
cwtl
jmp
xlat
je
inc
pop
jle
outsb
scas
jb
lds
cmp
rolb
gs
rcr
xchg
pushf
adc
faddp
lret
adc
dec
fnstcw
dec
xor
loopne
add
cmc
std
test
cmpsl
scas
add
cmp
mov
mov
cmp
jnp
dec
mov
popa
sahf
push
push
test
stc
lods
out
cmp
scas
stos
jecxz
and
leave
jmp
dec
andl
push
dec
push
lret
int3
sub
stos
cmp
mov
jae
mov
lds
outsl
inc
cwtl
sbb
jmp
adc
mov
dec
test
shll
inc
ss
fsubrs
jg
jp
arpl
mov
in
out
stos
arpl
jno
lret
sarl
fdivs
hlt
lods
sub
sub
stos
lods
gs
ja
addr16
fnstenv
push
push
data16
mov
mov
or
push
test
iret
xor
es
mov
out
or
xchg
lods
xchg
lock
jg
les
jecxz
mov
out
dec
scas
sub
xchg
imul
sbb
rcr
sub
cmp
in
sub
shll
or
mov
cmpsl
push
adc
mov
leave
jne
jne
ret
dec
xchg
out
adc
add
lods
dec
and
push
adc
xchg
mov
lds
xchg
push
push
imul
ljmp
das
lea
sub
lcall
int
and
in
smsw
inc
sbb
dec
testl
lock
out
test
test
rcrb
xchg
xor
jle
mov
pop
xchg
dec
aad
addb
jg
mov
repz
mov
stc
jbe
int3
adc
jecxz
in
shlb
jl
xorb
adc
pop
adc
dec
iret
and
push
cmovle
sahf
push
in
mov
orb
addw
insb
xchg
lret
mov
rcl
push
mov
rcr
inc
cmp
js
bound
adc
cltd
jns
pop
lret
repz
push
ret
lret
adc
jl
mov
xchg
leave
mov
and
and
shll
mov
xchg
sbb
icebp
xor
and
hlt
int3
and
aad
and
jns
movb
mov
xlat
sbb
test
cmp
jbe
xchg
mov
mov
fnstsw
inc
shl
cmc
pushf
sbb
clc
mov
inc
cmp
dec
mov
fcmovbe
push
xlat
mov
jno
aam
sti
das
enter
dec
test
call
int
mov
inc
cmpl
push
push
popf
js
stc
mov
mov
popa
enter
xlat
and
xor
inc
cmp
jns
stos
scas
mov
movsl
cmp
fcoms
xchg
testl
dec
mov
test
xchg
xlat
add
sbb
loopne
adc
xlat
mov
test
pop
das
xor
inc
int3
enter
xchg
in
cmpsb
fcom
mov
aas
or
mov
push
inc
aad
push
dec
popa
inc
pop
pop
mov
jmp
push
lret
jl
xor
mov
rclb
movsb
addr16
lock
arpl
push
mov
movsl
mov
jl
xchg
push
jg
mov
sahf
sbb
enter
or
and
sbb
aam
mov
mov
iret
pop
fcomi
sbbb
push
adc
iret
popl
outsb
jns
cmp
adc
lock
xor
xchg
movlps
add
stos
movsl
aas
dec
sbbb
loope
das
add
icebp
xchg
enter
xchg
repnz
push
fcoms
mov
jno
push
mov
ret
xchg
pop
out
mov
sbb
imul
enter
pop
das
mov
mov
inc
mov
mov
lahf
and
jne
fidivrs
inc
ljmp
or
mov
lret
cmc
insb
decb
adc
adc
and
popa
xchg
mov
aam
insb
lds
or
repnz
jg
jge
jp
cmp
inc
dec
lea
mov
rolb
call
mov
test
iret
test
or
es
and
xor
enter
mov
or
push
das
rolb
cmp
or
jecxz
jbe
inc
mov
out
inc
outsl
sub
mov
xchg
js
ss
shll
test
in
fldl
lods
push
sub
xchg
in
sub
stos
xchg
out
xor
xchg
xchg
shrb
dec
leave
daa
popa
xor
lods
popa
sub
adc
xor
nop
push
add
ds
fs
push
scas
das
fsubrl
jnp
xchg
cwtl
sbb
mov
loop
jle
lcall
or
ds
pop
sbb
jle
lods
dec
inc
cs
mov
xor
xchg
adc
daa
sub
repnz
xor
dec
lock
out
das
xchg
mov
xor
sbbl
pop
aam
push
jp
add
mov
lret
ja
cmpb
and
stos
orb
fisubrs
push
add
pop
push
jle
movsb
add
call
sbb
xor
mov
adc
js
xchg
cmp
push
xchg
std
stos
xchg
sbb
xor
or
loope
fidivrs
push
or
imul
xchg
out
cwtl
xor
mov
orl
xchg
mov
cmpsl
push
divl
test
mov
mov
out
cmpsb
add
xlat
jle
addl
int3
daa
fadd
jno
mov
int
daa
nop
dec
sbb
fsubrs
mov
cld
mov
adc
inc
js
test
adc
pop
inc
sub
lea
inc
xor
jae
add
sub
add
push
iret
test
dec
xchg
addr16
xor
xor
scas
xchg
pop
xor
sbb
mov
fcoml
jae
add
cltd
mov
pusha
add
inc
outsl
xor
stc
aam
lahf
sbb
inc
jecxz
pop
push
adcb
and
leave
push
das
mov
jp
dec
scas
pop
loopne
xchg
dec
ljmp
or
xor
mov
ss
xchg
cli
mov
jg
xlat
pusha
adc
pop
test
push
push
or
sbb
test
cld
aad
rorl
mov
outsl
ficompl
sbb
and
mov
xor
mov
cmp
call
sbb
insb
enter
add
mov
mov
xchg
push
ds
or
out
and
xor
or
mov
loopne
aad
ds
inc
jcxz
mov
mov
mov
adc
push
xchg
inc
xor
mov
add
pop
jp
push
data16
fnsave
xchg
push
jne
inc
lods
incl
ja
or
sub
sti
xor
jae
dec
aaa
push
fstpt
leave
cmp
dec
sub
jno,pt
dec
sub
ljmp
jl
mov
into
dec
jmp
movsb
cmp
mov
fisttpll
jb
pop
pop
faddl
sub
idivb
arpl
addr16
movsb
mov
lea
xchg
into
mov
xchg
inc
jp
rcrl
jbe
test
test
sahf
lahf
and
fldt
jecxz
hlt
mov
lds
int3
push
fildl
movl
and
cltd
xor
and
or
inc
jl
add
aam
cmp
sub
dec
lret
pop
mov
sub
sbb
sbb
xor
sub
daa
jmp
scas
sub
lods
es
xorl
lea
sub
xor
shll
int3
or
stc
jl
sub
sbb
aam
mov
cmp
sub
lret
dec
push
pusha
orb
stc
imul
dec
or
loopne
jmp
jg
xchg
sbb
repz
sti
pop
add
mul
dec
push
mov
popa
test
repz
xchg
pop
push
in
fdivrl
mov
lcall
neg
fsubrs
push
call
popf
cs
sbb
xlat
pop
fiaddl
sub
subb
sub
jns
xor
cmp
jl
xorl
in
test
jbe
and
push
mov
pop
add
out
mov
lds
mov
sub
lret
mov
push
mov
cmp
out
cmp
cmc
rolb
pop
mov
dec
outsb
or
and
into
outsl
mov
xchg
xchg
out
mov
ret
cmc
imul
js
push
cmp
popa
rolb
mov
jecxz
xor
jmp
cmp
mov
pop
cld
ja
cltd
or
rcll
in
pop
enter
xchg
fcomp
stos
mov
push
or
xchg
lods
jne
push
push
jbe
enter
loop
jl
fisubs
call
or
jle,pn
mov
cmp
jbe
es
pusha
ss
sti
add
xchg
rcll
xlat
call
cmp
sub
mov
jle
dec
fxam
mov
mov
out
cmp
dec
xor
inc
cmpsb
jg
mov
sub
dec
inc
popf
dec
sub
dec
jns
mov
push
in
fdivp
lret
or
cmp
outsb
dec
push
inc
fdivrl
and
enter
xor
scas
pushf
push
jne
dec
mov
shr
btr
daa
and
or
inc
sti
dec
cmpsl
dec
orl
icebp
addb
add
lea
bound
fwait
call
jmp
push
adc
cmpsb
mov
sbb
cmp
dec
mov
push
es
icebp
loope
jnp
mov
xlat
or
jns
inc
sahf
ffree
mov
pop
int3
lods
cmp
adc
mov
xchg
cmp
insl
mov
rcrb
mov
push
andl
pop
sbb
mov
popf
mov
push
popf
xchg
and
out
pusha
lock
sti
repnz
pop
dec
cmpsl
sarl
sti
lret
mov
adc
cmp
int3
sarl
cmp
dec
dec
fwait
jae
cld
aas
movsl
mov
iret
test
adc
rolb
cmp
stos
popl
xor
iret
imull
and
cmp
data16
fisubrs
movsb
mov
xor
dec
jbe
cs
xor
ror
lcall
cmp
pop
jo
jae
aaa
inc
dec
ja
call
cltd
lcall
fcomi
dec
jp
ljmp
push
inc
jg
repnz
in
decb
jbe
mov
xchg
or
ficomps
loope
cmp
adc
adc
in
in
cmpsl
jl
xor
ss
dec
out
mov
cs
icebp
mov
ljmp
imul
xchg
pushw
out
jl
jae
pop
xor
xchg
popf
repnz
outsb
pop
push
stc
mov
mov
cmp
and
pop
dec
or
lods
decb
jno
jbe
sub
stc
rclb
aas
mov
sub
mov
fisubl
cmp
insb
and
stos
cmp
mov
push
fistpl
pop
out
test
inc
fwait
add
xor
lcall
addr16
dec
xor
cs
fldcw
cmp
fsubl
sbb
dec
dec
jbe
dec
cltd
repz
dec
cld
mov
sbb
imul
jns
insl
mov
pop
pop
mov
sub
pop
sahf
lods
mov
orb
sbb
push
mov
movb
sahf
enter
sub
jo
stos
xor
lcall
cli
hlt
sub
dec
sbb
inc
cld
in
sub
popf
xchg
push
dec
adc
inc
push
xor
cmpsl
cltd
lods
or
mov
sti
adc
das
pop
das
xor
test
aaa
lret
xchg
into
dec
sbb
lods
and
addr16
xchg
inc
outsl
mov
out
mov
adc
mov
pop
mov
popa
mov
nop
fwait
int3
cltd
push
fcmovne
jb
in
pop
sbb
inc
out
xchg
outsb
jge
or
mov
data16
mov
mov
orb
icebp
adc
xchg
fists
mov
jb
cmpsl
push
xor
pop
nop
pop
repnz
lods
push
push
add
rcrb
cmpsl
stos
test
cs
xchg
shlb
adc
fisubs
das
in
sbbb
addb
adc
mov
pop
or
mov
movsl
scas
jno
xchg
sbb
push
mov
inc
or
flds
sub
data16
mov
inc
dec
push
imul
push
sbb
xchg
outsl
ja
xor
test
repnz
roll
push
rcr
and
dec
orb
xor
sti
iret
lods
mov
jb
outsl
decb
push
and
push
add
lahf
cmc
pusha
shll
mov
pushf
inc
ds
fldcw
or
sub
lds
push
cmp
nop
fstps
dec
xor
out
dec
sub
into
xchg
cmp
test
loope
push
loope
mov
lds
jmp
xlat
push
jne
cwtl
and
push
sbb
divb
in
push
adc
repnz
negl
adc
es
stos
mov
scas
pop
dec
mov
testl
push
or
sub
in
dec
fucomp
fmuls
and
ror
cs
inc
ja
xchg
lods
xor
mov
enter
fldcw
lock
sbb
cmp
xchg
lock
adcb
test
lret
sub
sbb
sbbl
int
jns
xor
adc
scas
inc
or
pop
out
cmc
adcb
sti
call
xlat
imul
int
shlb
xlat
rclb
adc
call
out
xor
add
or
in
aad
fwait
adc
sub
push
inc
scas
rcl
xchg
orl
aas
sbb
mov
inc
jb
subb
repnz
mov
xorl
lret
xchg
movsl
pop
push
repnz
pop
sahf
pop
pop
mov
dec
lahf
repz
into
sub
xchg
cmp
cmc
xor
xchg
or
aam
outsl
cmp
enter
int
sub
and
dec
sbb
mov
int3
insl
hlt
dec
loop
jne
lret
sbb
in
pushf
add
dec
pop
mov
inc
inc
jo
jle
outsl
fmuls
xchg
fwait
push
lods
test
orl
out
cwtl
int3
in
sub
sbb
les
ljmp
fstpl
stc
mov
cmp
pop
arpl
or
sbb
pop
mov
sub
adc
jmp
pop
jl
rcrb
sub
dec
and
pop
pop
rorl
mov
mov
mov
inc
aad
adc
cld
test
out
jne
push
mov
out
jmp
lcall
shlb
cmp
add
js
insl
mov
xorb
xor
imul
js
inc
jp
or
pusha
xchg
jp
lret
in
movsl
push
add
and
push
pop
cmc
jne
in
lret
sub
xchg
jge,pt
cmpsb
outsl
cs
dec
dec
inc
aam
xchg
test
mov
pop
loope
xor
xor
add
ret
mov
pop
mov
leave
cld
sbb
dec
dec
xchg
pop
sbbb
insb
test
inc
leave
xchg
movsl
cld
mov
push
cmp
xchg
fiadds
imul
inc
add
pop
dec
push
das
stos
cmp
cli
push
shlb
das
lahf
out
call
repnz
mulb
pop
fisttpll
fs
xor
repnz
out
adc
cmp
movsb
or
or
add
cmp
inc
aas
mov
pop
int3
dec
hlt
mov
adc
pop
mov
dec
sub
mov
mov
rorb
stos
hlt
pop
lret
sahf
subl
enter
es
stos
lods
jmp
and
mov
ret
inc
cwtl
add
icebp
jnp
fnstenv
sbb
and
ret
shrl
mov
aad
test
aam
mov
mov
call
push
and
dec
xor
daa
mov
mov
fbstp
inc
insl
xchg
and
sub
out
in
jae
lods
xchg
xchg
fsub
insl
sti
cmpsb
test
push
movsb
fisttpl
addb
adc
or
int3
xor
mov
lcall
jnp
mov
xlat
movntq
jbe
fbld
lret
popa
cmp
jns
inc
repnz
pop
pop
inc
movsl
jecxz
inc
dec
sbbl
pushf
outsl
arpl
sbb
adc
daa
mov
lods
movsl
and
out
int
dec
fnsave
sbb
or
add
add
mov
sahf
roll
cld
idivb
cmpsl
xchg
mov
jp
fsubrs
mov
xchg
adc
ds
and
rcrl
cmp
lcall
dec
cltd
add
fsubr
adc
pop
mov
and
cmc
lea
jae
lahf
fxch
cmp
or
mov
pop
les
mov
xlat
icebp
iret
xchg
or
and
lods
and
mov
popf
js
add
xchg
jg
aas
out
xchg
cmp
xor
xchg
xor
push
rorl
xor
add
mov
xor
and
mov
adc
xor
jecxz
aas
mov
imul
fstl
jne
mov
mov
fldt
ljmp
push
inc
loop
cmpsb
outsb
jo
nop
sub
dec
xchg
mov
mov
fwait
jbe
add
scas
or
insl
repnz
adc
leave
xor
jl
mov
pop
stc
push
imul
jno
xchg
cltd
pop
es
insb
jns
mov
push
je
add
pushf
adc
in
pop
pop
sbb
stos
loop
ficomps
or
mov
insb
adc
test
mov
add
dec
les
popa
in
dec
test
repnz
cwtl
dec
int3
adcb
add
outsl
call
scas
and
je
subb
mov
mov
adc
add
js
loopne
sbb
push
sti
jns
imul
mov
enter
and
cmpsl
pop
jbe
cld
das
sub
fs
dec
arpl
lret
fisttpll
cld
xor
jns
or
stc
adc
dec
sub
test
enter
lea
negl
insb
cwtl
pop
data16
jle
ror
cmpsl
pop
inc
imul
mov
push
adc
pop
and
lds
xor
mov
aam
shl
into
js
idivl
jl
jne
ss
loopne
int3
aas
push
imul
pop
in
jbe
inc
leave
jp
mov
xchg
divb
insb
pushf
jne
gs
xchg
push
int
push
and
mov
es
and
jp
jae
xor
sbb
add
addr16
pop
test
pop
and
and
leave
sub
ret
arpl
jge
inc
add
pop
test
shll
push
leave
and
sub
stc
in
rorl
rclb
and
jmp
test
fs
lods
lea
loop
movnti
popa
xor
xchg
sub
jl
jb
seta
sbbb
mov
addr16
mov
cltd
or
add
int3
lcall
mov
cmp
fbld
repnz
out
mov
mov
xor
inc
stos
dec
cltd
lock
adc
jmp
adc
jmp
mov
lret
pop
pop
xchg
in
mov
mov
ja
fcoms
xchg
adc
imul
add
inc
xor
mov
cltd
out
fimull
mov
pop
test
ret
sbb
mov
inc
mov
rclb
adc
mov
jp
dec
mov
mov
xchg
push
ljmp
dec
jg
mov
xchg
ds
ret
inc
or
andb
test
pop
inc
mov
fimuls
outsl
repnz
dec
sbb
xchg
mov
inc
lret
sar
rol
cmp
mov
fcoms
ljmp
cmpb
out
iret
mov
into
xchg
xor
jl
add
push
lock
cmp
popf
imul
cmp
xchg
jmp
dec
push
xor
pop
shll
cwtl
push
or
cmp
std
pop
sbb
out
add
nop
enter
into
xor
imul
and
dec
sbb
pop
cs
outsb
inc
ja
xor
cmp
loopne
repz
sahf
and
jne
adc
add
xchg
mov
andb
mov
xor
add
or
lods
lds
add
or
leave
mov
or
mov
addr16
incb
jno
insl
fwait
and
ja
enter
rorb
inc
xchg
add
xchg
iret
call
rorl
and
loop
push
push
hlt
xor
movsb
outsl
into
pop
out
repnz
es
jecxz
repnz
fdivp
bound
cmp
pop
cmp
jl
daa
jae
pop
cmp
mov
sbb
sarb
mov
inc
aaa
aas
mov
jp
push
mov
push
dec
xchg
lods
mov
pop
jno
xchg
sbb
or
lret
imul
dec
add
inc
out
aad
push
clc
xchg
jnp
daa
push
xor
sbbl
lahf
mov
test
cmp
pop
lea
dec
push
pushf
add
int3
jno
dec
faddp
testl
jno
repz
xorb
adc
dec
cmpl
inc
inc
pop
inc
sbb
sti
jmp
sbb
mov
sbb
pop
xchg
jp
and
push
push
popf
xchg
pop
jns
xchg
inc
stos
mov
xchg
out
xchg
ss
or
add
lea
pop
fucomp
xor
dec
fsubrs
outsb
nop
test
movsb
or
fsubrs
xchg
jb
push
xchg
pop
sub
mov
mov
clc
sub
fwait
add
add
pop
test
pusha
stos
lahf
adc
mov
ret
or
lds
add
out
insl
sub
inc
push
xlat
xor
fnsave
push
mov
fadds
adc
call
repz
les
xor
adc
pop
sbb
mov
xchg
xchg
les
hlt
adc
or
bound
mov
leave
pop
iret
mov
daa
xchg
pop
cmpsl
mov
pop
mov
mov
jns
jae
xchg
or
inc
xchg
dec
lods
mov
test
jg
inc
imul
push
ss
das
mov
mov
push
and
mov
mov
pop
push
incl
jo
inc
hlt
adc
icebp
sbb
dec
push
jmp
mov
fstpt
mov
push
cli
jnp
ret
lcall
test
mov
stos
push
lock
loop
cs
dec
cmpsb
xchg
inc
lcall
shll
mov
sbb
push
mov
mov
fcmovnb
add
dec
mov
and
enter
sub
mov
push
cmpsb
std
scas
mov
mov
jns
mov
xchg
sbb
dec
sahf
aam
mov
test
xor
jl
std
xlat
jecxz
dec
sbb
arpl
insl
js
into
nop
cmovns
sub
sbb
test
xchg
hlt
xor
cwtl
pop
push
mov
cmp
ds
and
and
mov
enter
jo
dec
push
cmp
xor
and
nop
xchg
xchg
cmpb
and
xlat
jge
jnp
inc
call
lcall
adc
mov
adc
out
jbe
push
sbbb
cmpsl
pop
xor
in
cs
lret
xor
cmp
mov
xchg
test
and
push
loope
push
ljmp
icebp
jae
xchg
jns
movsl
sbb
jecxz
mov
out
fstl
aam
and
ja
loop
movsb
pop
xchg
push
stc
fisubrl
ficompl
test
adcl
jno
mov
jae
iret
sti
je
push
push
mull
andl
xchg
pop
out
cwtl
pop
scas
and
adc
clc
add
fwait
jb
outsl
push
cltd
pop
inc
cmp
sbb
and
fs
scas
jnp
jge
cld
shrl
int
cs
sub
mov
leave
xchg
fs
popf
adc
adcb
aad
pop
and
xchg
cmpb
mov
cmpsl
test
xor
int3
call
std
hlt
dec
add
or
sub
mov
cmp
jg
pop
inc
or
into
lea
pop
sbb
dec
xchg
ja
dec
es
aaa
fisttpll
cltd
std
out
dec
lods
aaa
pop
or
and
iret
test
sbb
ss
xor
mov
mov
std
iret
cs
mov
shr
dec
loope
jne
push
in
mov
ljmp
iret
pop
roll
arpl
adc
loopne
fnstenv
mov
out
jle
xor
mov
add
adc
cltd
call
xchg
mov
adc
or
jl
ljmp
xor
imul
in
push
lods
mov
inc
pusha
cmp
push
adc
addb
and
pop
dec
rorl
outsb
int3
mov
and
add
xchg
and
xchg
stos
xchg
or
je
stos
stos
fsubrs
jns
ret
mov
mov
loopne
pop
movsl
icebp
push
repnz
push
adc
loope
mov
cmp
lods
lea
xor
cs
adc
mov
pop
mov
adc
mov
pop
loope
mov
mov
mov
sub
lods
outsl
dec
push
dec
jge
push
sub
popf
pop
clc
fistl
or
adc
inc
pop
divl
add
sbb
jl
cli
inc
jno
test
mov
testl
notl
popa
sub
mov
or
dec
cs
arpl
lds
divl
scas
push
sub
dec
popf
push
test
inc
mov
fwait
pop
int
sahf
rcl
or
cmp
lock
xchg
inc
daa
cmp
sub
rcl
nop
test
cmpsb
xchg
adc
jge
xor
cmp
add
das
ja
idivb
scas
jecxz
jbe
xchg
bound
dec
or
in
stos
int
das
fdivs
out
push
insl
dec
in
xlat
cmp
or
sbb
pop
jmp
movsb
insb
cmp
pop
enter
sub
cmp
pop
dec
mov
xchg
jno
hlt
in
cmp
imul
sub
mov
sbb
les
jle
out
dec
lods
lock
sahf
filds
fs
mov
psrlq
mov
ds
jae
in
lock
std
adc
call
sbb
aas
mov
mov
adc
xchg
in
nop
icebp
or
sahf
fs
fsubl
stos
icebp
rep
adc
aam
das
sbb
repz
ss
jns
sbb
mov
outsl
jle
cmp
rcrl
test
push
mov
push
pop
ds
repz
jecxz
stos
pusha
mov
rcrl
mov
ljmp
mov
test
iret
in
sbb
mov
mov
stos
popa
les
lret
ja
cmp
sub
mov
xchg
sub
and
clc
pop
popa
daa
mov
cld
mov
and
dec
aas
xchg
int3
or
mov
push
arpl
inc
cmc
jg
adc
movsl
lds
cli
sbb
loope
sub
data16
lret
lds
jns
push
mov
xchg
sbb
xor
xor
lock
jns
andl
ret
xor
pop
add
push
leave
mov
into
xor
lock
inc
pop
jo
mov
pop
or
scas
mov
add
nop
inc
outsb
pop
lret
add
imul
mulb
jle
mov
sub
shlb
scas
push
xchg
movsl
xchg
xchg
lahf
cmpsl
out
xor
cwtl
loop
out
mov
ret
int3
add
cmp
imul
fcmovu
imul
jp
cltd
inc
dec
pop
mov
inc
mov
or
inc
les
mov
testb
shl
out
inc
mov
cli
adc
daa
int
jg
fwait
pop
xchg
mov
dec
cvttps2pi
or
dec
test
xor
jge
lahf
xchg
adc
stos
js
mov
ljmp
adc
or
psubsw
add
sub
sub
mov
cld
lds
mov
enter
mov
mov
insl
out
lea
loopne
addr16
inc
or
sahf
xchg
lea
cmp
xchg
out
sub
clc
mov
sbb
mov
pop
lock
mov
push
aaa
or
in
fidivrl
in
movsb
cmp
pop
pop
fisttpll
ret
ficoms
pop
push
jg
movsl
leave
push
cmpsb
and
adc
jo
xchg
aaa
cmc
in
pop
cmpsb
test
sub
scas
dec
push
rcll
js
sbb
jnp
dec
mov
inc
leave
cmp
lcall
std
testl
pop
mov
mov
inc
sub
insb
jb
int
pusha
mov
mov
or
sbb
inc
sub
jne
pop
leave
push
rcll
xchg
inc
cwtl
lods
fxch
imul
lock
xor
push
test
das
dec
jp
dec
ret
cmp
stos
mov
pop
cmp
mov
test
dec
repz
adc
xchg
add
mov
mov
mov
sub
pusha
icebp
mov
test
int3
sub
or
imul
mov
pop
aaa
pop
xchg
sub
push
add
or
mov
add
lret
ret
popa
sbb
xor
mov
sbb
lds
nop
or
out
mov
dec
fimuls
mov
jbe
shll
ljmp
in
inc
stc
fs
std
adc
dec
adc
and
call
jae
cmp
sub
ljmp
cwtl
xchg
add
mov
dec
sahf
divl
ss
pop
cmp
jnp
and
notl
out
xchg
jns
arpl
or
dec
test
fists
mov
add
push
push
mov
inc
sbbb
jne
push
aaa
pop
pushw
jecxz
lret
mov
sub
out
or
insl
jl
sbb
add
es
xchg
lret
xlat
sub
fld
xchg
adc
call
push
jecxz
lahf
jnp
mov
test
sub
mov
lret
add
icebp
sahf
rcr
out
inc
ds
les
in
clc
mov
push
and
adc
mov
jne
gs
cmpsl
hlt
pop
inc
cmp
test
cmc
fisubrl
out
sub
aad
je
jle
adc
sub
iret
xchg
xchg
mov
xchg
fisttps
enter
inc
cmp
or
data16
and
call
and
addb
mov
jmp
pop
inc
pop
sub
clc
out
xchg
fcmovnbe
sahf
mov
mov
fs
push
out
pop
pop
hlt
pop
and
test
je
std
ret
xchg
xchg
sbb
insb
push
push
rcrl
mov
dec
jg
inc
pushf
mov
push
pushf
das
pop
lahf
in
imul
repz
cltd
jno
or
sub
out
mov
inc
cmp
arpl
mov
lahf
add
insl
out
jnp
mov
scas
sbb
xor
jle
subb
cmpsb
or
leave
jnp
dec
cltd
cmpsb
mov
aam
jmp
sub
insl
pop
ja
push
xchg
jbe
lds
fsubs
xchg
inc
jno
and
and
pop
outsb
add
mov
xchg
jg
push
dec
mov
sbbb
pushf
mov
into
jp
sub
int
and
sub
xor
pop
hlt
outsl
adc
adc
jg
mov
mov
subb
sbb
iret
or
shr
dec
ror
bound
inc
push
push
mov
pusha
push
repz
mov
sarl
push
and
loopne
das
pop
je
dec
in
dec
fs
pop
mov
insl
fistpll
bound
pop
cld
mov
leave
xchg
or
es
jno
out
mov
fnstsw
jnp
inc
push
pop
ret
les
leave
cltd
push
mov
hlt
lcall
outsb
testl
enter
jmp
mov
cld
aad
or
adc
mov
stc
lock
stos
and
xchg
imul
ljmp
gs
fwait
push
inc
cmp
cltd
mov
inc
mov
outsl
call
pop
mov
sbb
icebp
rorb
mov
das
lods
bound
mov
mov
cmp
mov
jmp
in
rcrl
mov
repnz
sarb
xor
mov
xor
cmp
cmp
xchg
imul
imul
xor
xor
mov
nop
sub
stos
test
fsubrs
push
and
mov
lock
inc
call
cli
xchg
arpl
cmp
repz
lret
icebp
mov
aad
xchg
mov
les
mov
cli
jnp
fiadds
dec
insb
mov
call
data16
inc
mov
jl
std
lock
sub
dec
sbb
outsb
sahf
loope
das
pop
mov
lock
in
dec
add
sarb
mov
add
push
add
xor
inc
push
fidivrl
sub
push
clc
fcoms
cmp
xor
fstpt
mov
rcl
out
lret
pop
inc
mov
cwtl
pop
jp
loope
push
hlt
aam
mov
dec
jp
into
sbb
xor
push
inc
call
cmp
xchg
xchg
mov
mov
add
shrl
sub
icebp
jo
stos
mov
sub
xor
cmp
insl
je
in
push
adc
bound
out
negb
xchg
xchg
ret
xor
lds
lods
in
dec
dec
cmp
pop
test
pop
push
ret
mov
jae
and
mov
dec
add
mov
idivb
sahf
cmp
out
cmpsb
loopne
sbb
cmp
outsl
jl
push
popa
push
and
cltd
jg
fs
shrb
mov
jb
ficompl
std
xchg
mov
stc
sbb
gs
jo
mov
mov
mov
lods
js
mov
bound
mov
sbb
and
js
ret
out
nop
popa
stc
jb
jno
repnz
movsb
popa
test
nop
lahf
mov
mov
jo
stos
pusha
jg
add
lret
pop
mov
sti
sti
jns
dec
sub
push
fsubs
mov
clc
cmp
lods
xor
lea
int
inc
add
mov
jne
xchg
imul
lcall
mov
jmp
jns
cmp
mov
pop
xchg
mov
out
rcll
test
xlat
addl
orb
data16
jbe
ljmp
sahf
mov
icebp
and
add
scas
jo
dec
data16
push
cltd
xor
jne
xor
cmp
test
insl
fs
xchg
cmp
sbb
lret
mov
and
test
push
push
test
or
sbb
rcrb
cmpsb
lds
inc
bound
mov
xorl
cmpsl
test
cltd
imul
pop
mov
test
movsl
testb
stc
push
daa
xor
sub
xchg
and
cmp
fistpl
iret
xor
push
insb
mov
inc
dec
pop
inc
inc
or
fs
adc
movsl
mov
or
fs
mov
push
pop
sub
pop
insl
mov
dec
pop
inc
insb
jge
das
and
add
mov
ficoms
pop
xor
push
decl
popa
and
add
mov
scas
jp
shll
sahf
cmpsl
pop
push
add
iret
iret
mov
iret
inc
inc
out
jg
mov
mov
xchg
fists
nop
jge
insb
in
sub
cmp
je
dec
sub
dec
movsb
lods
pushf
or
insw
push
fisttps
movsl
mov
jle
sbb
filds
imul
sbb
mov
iret
andb
fadds
adc
jne
inc
jge
and
mov
sbb
fcmovb
push
and
jbe
in
jae
shll
or
inc
mov
adc
jo
testl
movsb
or
or
out
dec
das
cltd
cs
dec
dec
frstor
push
mov
xchg
inc
pop
pop
mov
inc
jle
movsb
pop
cmp
mov
fistpl
pop
test
jae
xor
addr16
sub
lahf
push
cs
loop
mov
and
dec
xchg
xchg
fimull
pop
or
sahf
jns
cmp
outsb
mov
and
aaa
sbb
out
dec
xor
inc
or
adc
lock
mov
sub
inc
cs
push
mov
pop
imul
je
clc
xchg
mov
mov
ss
xlat
add
loope
mov
fcmovnbe
cmc
jnp
xchg
xchg
pop
insb
push
es
mov
rcrl
and
scas
jae
mov
jg
and
xor
add
push
push
out
xchg
sbb
mov
jge
inc
mull
aas
push
inc
sub
mov
add
cltd
jbe
sbb
gs
add
lds
push
cmpl
adc
mov
or
xor
jno
sti
cmp
inc
pop
xchg
int
aad
out
cwtl
inc
xor
or
fs
iret
mov
popa
test
ja
fwait
mov
test
xlat
mov
rcll
movsl
xor
push
xor
push
pop
aad
and
dec
cwtl
mov
jecxz
arpl
cmp
push
lcall
mov
pop
and
loop
addr16
loope
pop
divb
jmp
jge
loop
ljmpw
mov
jecxz
addb
pop
xchg
stos
fwait
fwait
mov
sbb
lcall
clc
add
and
jae
push
xor
inc
xchg
and
sbb
push
inc
xor
hlt
xor
stos
mov
pop
push
mov
cmc
mov
hlt
xor
fildll
jne
and
push
dec
lock
and
inc
les
pop
andb
pop
push
xor
cs
push
xchg
nop
xor
mov
shll
fisubrs
scas
xor
adc
sti
add
out
jg
jno
mov
and
mov
push
out
push
mov
add
inc
mov
iret
or
pop
popf
int
mov
dec
sub
lods
aam
jmp
fidivrl
inc
mov
sbb
jbe
sub
gs
inc
sti
and
lret
pop
cltd
outsl
adc
xchg
rclb
pop
fld
cmc
inc
pop
inc
or
scas
aam
mov
pop
cmpsl
addr16
in
rcrl
scas
mov
mov
cmp
loopne
repz
call
fists
add
mov
xchg
xchg
popa
xor
movsl
stos
aam
scas
std
push
in
inc
mov
ret
popa
cmpsb
sub
pusha
cmp
or
fistpl
add
adc
stos
mov
mov
icebp
outsl
push
jecxz
fdivs
leave
cli
pop
aas
rolb
out
iret
push
fildl
arpl
leave
mov
lcall
mov
push
sti
mov
sbb
ja
and
and
pop
out
mov
jg
sub
cmc
mov
mov
cmp
scas
pop
pop
scas
push
call
inc
js
xchg
mov
xchg
adc
add
fs
js
out
in
fadds
aad
fs
sbb
adc
adc
mov
dec
xchg
ror
cld
je
pop
mov
insl
lret
lcall
nop
sub
aad
movsb
xor
out
cwtl
mov
xlat
das
jmp
test
mov
mov
jp
iret
nop
and
xor
xchg
ror
into
sub
xor
dec
bound
inc
test
inc
sub
dec
adc
jmp
cltd
add
int3
js
movsl
adc
test
jp
wrmsr
dec
jbe
les
push
mov
incb
or
sub
fstl
addr16
mov
mov
push
movsl
mov
daa
cmpl
cmp
sbb
cwtl
dec
psrad
push
rolb
cwtl
jl
push
cmp
or
enter
xchg
mov
xchg
outsb
cmp
out
gs
test
xchg
mov
adc
pop
lea
inc
pop
jae
jecxz
push
inc
in
arpl
jge
dec
mov
jb
xor
fdivrl
out
insl
pop
push
stos
jl
enter
push
int
movsb
xlat
js
out
daa
fcmove
and
jmp
xchg
push
inc
ja
jno
jbe
out
jp
das
mov
sub
aas
pop
stos
xor
loop
ss
negl
adc
push
lret
lods
jmp
xchg
jbe
and
mov
xor
jl
bound
mov
jge
adc
lret
mov
popf
fdivrp
in
subl
lret
jae
sti
orb
mov
xchg
xchg
aas
clc
lahf
jg
cmp
inc
jb
ret
idivl
lods
mov
mov
dec
push
std
or
mov
lahf
jg
sbb
add
ljmp
int3
mov
imul
or
cmp
stos
ficoml
and
lock
jle
and
xchg
sub
cli
sti
icebp
cli
in
jne
in
cmp
and
push
pop
add
sar
dec
add
xlat
out
push
cli
adc
bound
mov
leave
dec
pop
cs
mov
sub
xchg
fs
xor
loop
push
add
add
add
decl
or
add
inc
and
or
add
inc
add
.byte
