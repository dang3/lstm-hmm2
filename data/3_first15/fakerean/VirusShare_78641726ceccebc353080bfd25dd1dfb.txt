and
add
push
add
pop
push
add
js
add
mov
add
push
add
mov
push
add
fcoml
add
push
add
add
add
push
add
es
add
cmp
add
add
arpl
add
add
mov
add
push
add
mov
push
add
out
push
add
or
add
push
add
xor
add
add
add
mov
add
add
ret
push
add
push
add
in
push
add
add
add
push
add
sub
add
add
add
add
adc
add
push
add
or
adc
add
push
add
pop
push
add
test
add
and
lods
div
push
add
add
add
adc
add
adc
add
sub
jg
add
call
add
repnz
inc
movzbl
add
lea
mov
mov
inc
mov
dec
inc
movzbl
sub
xor
add
lea
mov
and
add
dec
movzbl
add
add
xor
xor
lea
inc
imul
add
dec
inc
inc
xor
lea
imul
dec
dec
dec
jne
inc
mov
add
sub
pop
lea
imul
pop
inc
sub
pop
inc
inc
or
lea
mov
add
inc
inc
dec
or
lea
add
ret
push
movswl
inc
add
dec
dec
add
lea
movsbl
push
push
push
push
dec
sub
dec
push
add
or
lea
mov
inc
inc
dec
add
or
mov
lea
push
movzbl
dec
xor
inc
sub
push
sub
or
push
lea
movzwl
pushl
dec
call
inc
add
dec
dec
add
lea
mov
add
inc
pop
ret
xor
sbb
cmp
mov
dec
dec
push
jae
add
mov
sub
out
test
dec
xor
ja
in
mov
mov
subb
push
jecxz
bound
xor
inc
push
pop
mov
cli
ljmp
mov
jo
pop
xchg
aas
sbb
fwait
sbb
mov
js
popa
xchg
cwtl
mov
aad
pop
int
xor
jns
cwtl
adc
mov
stos
push
cmp
insl
pop
sub
jmp
sbbb
ljmp
xor
stc
ds
insl
inc
ja
adcb
xchg
add
jecxz
flds
sbb
out
cmovl
xor
fwait
and
add
mov
jg
lods
push
es
sub
cmp
pop
xchg
imul
aam
xor
les
or
call
inc
inc
notl
mov
aas
lret
mov
cmp
enter
adc
dec
sub
rcrl
add
dec
and
xchg
lret
clc
les
test
and
nop
and
movsl
add
pop
jl
stos
push
xor
adc
repnz
push
add
mov
pusha
ficoms
test
test
xchg
jle
sbb
ret
adc
cmpsb
dec
shlb
pop
mov
inc
cli
outsb
mov
dec
cmp
lahf
mov
and
inc
test
jno
mov
xchg
insl
mov
jb
xor
dec
pushf
jmp
nop
out
out
popa
gs
outsl
insb
mov
xor
jne
add
stos
test
push
test
loope
xchg
adc
mov
mov
sub
aaa
pop
push
add
pushf
shlb
sub
dec
push
adc
out
add
hlt
movsl
fcmovnb
push
mov
and
gs
or
mov
aad
jecxz
dec
hlt
mov
sub
cld
sbb
push
rorb
fsubrl
mov
ss
xor
pop
int3
mov
rcr
mov
movsb
xor
in
xor
pop
cs
mov
icebp
mov
das
xchg
cli
popa
jg
js
cmp
xor
push
bound
jp
jmp
out
pop
inc
jecxz
insb
and
fs
fwait
or
jmp
lcall
lods
mov
in
inc
dec
adc
xchg
xor
and
lods
inc
mov
mov
sbb
les
cmpsb
lods
jae
add
stos
daa
loop
xchg
fcoml
insl
shrb
mov
jae
fcoml
loope
imul
push
mov
lods
mov
or
mov
dec
or
push
sbb
mov
loop
jae
lock
push
out
insl
in
in
ds
and
repz
mov
mov
cs
mov
jns
outsl
mov
std
inc
rcll
push
ficoms
stos
mov
into
fs
int3
rcrb
sub
ret
push
scas
ljmp
cs
or
fcmove
js
mov
mov
cli
call
push
fs
test
test
jl
ret
outsb
and
faddl
iret
xchg
jmp
lods
cli
sub
call
push
ds
popa
dec
outsl
adc
xor
repz
jecxz
pop
out
cmp
pusha
inc
xor
xchg
mov
int
fs
mov
xor
sub
or
cltd
mov
sbb
hlt
pushf
mov
mov
rorb
adc
sub
cmp
sbb
lods
scas
stc
insb
pop
push
add
sbb
cwtl
mov
mov
sub
mov
jecxz
dec
aaa
rorb
aam
aam
xchg
and
iret
and
xor
stc
test
icebp
insb
cmp
scas
outsl
stc
pop
aas
fisttps
adc
fwait
scas
movsb
lea
adc
pop
cs
inc
cld
and
ss
fistpll
add
mov
pop
int3
cmp
cltd
out
pop
cmp
unpckhps
fxch
sub
xor
loope
arpl
test
inc
push
movl
cmc
add
std
inc
push
je
pop
aam
dec
rcll
fidivrs
aaa
fisubs
mov
inc
dec
js
ja
cld
xchg
cmp
xor
out
jl
clc
in
add
mov
and
xchg
and
jno
adc
je
repnz
rol
mov
stos
stc
dec
insb
push
lahf
aaa
lock
lds
or
sbb
pop
mov
call
repnz
in
je
xchg
je
or
sbb
mov
icebp
lret
sub
nop
stos
inc
jcxz
out
popf
adcl
ret
xor
cmp
repnz
sub
or
pop
push
leave
in
mov
movsb
pop
mov
in
enter
imul
or
sub
and
out
stos
nop
inc
icebp
cli
jb
lret
jno
cmp
push
mov
pop
push
test
jl
mov
icebp
pop
js
fimull
mov
test
fldenv
mov
imul
clc
jl
es
pop
or
popa
jmp
cmpsb
ficomps
add
fwait
stos
loop
push
sti
jnp
enter
mov
enter
lea
hlt
mov
add
arpl
mov
and
cmpsl
je,pn
dec
add
pop
insb
jbe
fcomip
shlb
lcall
push
test
mov
inc
xchg
adc
or
mov
add
pusha
test
scas
aam
aaa
jmp
insb
and
jb
dec
mov
mov
andl
push
mov
inc
or
ljmp
fistpll
int
enter
push
jmp
xchg
shll
xchg
cmp
xchg
sbb
adc
adc
shlb
sub
mov
ss
jns
mov
lock
jle
xchg
stc
popf
xchg
dec
arpl
jmp
out
mov
pushf
imul
aam
loopne
jp
xchg
mov
shlb
fs
je
fnstsw
mov
mov
je
jns
cmpsb
xchg
mov
popa
push
leave
mov
jb
cs
xor
aad
imul
movsl
jmp
mov
pop
add
or
sti
pop
or
fldenv
pusha
mov
js
push
int
pop
xor
or
lods
test
jae
push
mov
and
add
inc
mov
xchg
dec
ja
out
mov
cmp
mov
loop
lret
inc
sub
dec
sbb
xor
mov
jle
fnstenv
cmc
mov
lea
stos
sbb
leave
sbb
test
pop
fistpl
data16
xchg
inc
les
mov
pop
xchg
loopne
xchg
insl
fmuls
mov
popf
jnp
aas
int3
inc
enter
ja
mov
jne
fdivrp
cmp
push
add
push
das
cmp
mov
push
lock
cmp
rcrl
xor
adc
adc
into
loop
xchg
pop
pop
mov
push
or
loopne
xchg
loopne
cltd
dec
dec
imul
adc
push
jecxz
pop
jne
ss
fidivl
and
pop
sub
leave
mov
test
inc
test
cli
test
out
jle
std
dec
xchg
out
mov
adc
mov
ss
sbb
roll
rcll
pop
mov
cmp
jb
loop
out
pop
pop
fidivrs
addb
test
xchg
push
data16
fld
jle
fs
fwait
jb
scas
shl
ret
inc
add
pop
sub
sub
lcall
cli
pop
test
jns
cmp
lds
xor
test
jmp
fcoms
ret
in
mov
sbb
sub
cmpsl
test
daa
fidivl
roll
icebp
movsl
adc
mov
jl
xchg
imul
jne
sbb
cmp
mov
jp
sahf
das
jge
enter
adc
fisttpl
mov
pop
jle
sti
fists
mov
je
repz
data16
jl
bound
mov
bound
and
and
sbb
xchg
mov
out
rcrb
and
cmp
or
fldl
xor
inc
xor
xchg
add
rcrw
lret
mov
js
sysenter
pop
and
lock
scas
mov
and
or
les
sub
mov
sbb
cmpsl
mov
sbb
shr
sbb
out
aam
aam
mov
push
dec
lcall
in
and
repz
cmp
aas
mov
sbb
adc
dec
sbb
xchg
mov
test
leave
mov
or
mov
ror
test
mov
mov
loope
leave
mov
iret
rolb
call
jge
xor
sahf
pop
pop
mov
or
and
cld
mov
je
mov
dec
adc
push
js
push
lea
dec
ss
xchg
inc
scas
cmp
mov
rcrb
fnsave
push
out
lret
jle
sub
jecxz
mov
js
sbb
loope
xchg
cwtl
add
dec
mov
pusha
xorb
sub
lcall
lea
mov
push
push
xor
mov
in
test
ljmp
daa
stos
pop
in
xor
dec
push
cmp
xchg
inc
jbe
popa
dec
lods
xorb
pop
dec
ret
test
in
clc
popaw
out
mov
outsl
jns
sub
hlt
xor
pop
mov
jnp
add
sbb
mov
xchg
fld
bound
push
xchg
popf
and
lret
jae
popa
add
mov
in
lcall
sub
andl
sbb
data16
hlt
repnz
xor
pop
cmpsb
jmp
cmp
stos
jl
addr16
push
subl
sbb
xor
jp
insl
pop
js
gs
jae
pushf
insb
scas
jmp
sub
or
inc
cwtl
jb
sbb
dec
shrb
jl
lods
inc
push
cwtl
ja
inc
mov
pop
ja
inc
movsl
test
test
cwtl
cltd
aad
std
les
rcll
pusha
pop
inc
xor
jb
outsb
pop
rcrl
mov
je
ret
call
sbb
shlb
cmp
mov
in
sbb
lret
add
or
lret
insl
sbb
fdivr
rcrb
sub
pop
mov
pop
hlt
dec
cmpsb
dec
fnstsw
adc
jge
add
mov
push
scas
fdivrs
xor
lds
ret
es
aaa
mov
popf
lods
xor
push
push
negb
mov
sahf
xor
and
dec
inc
cmp
or
mov
cli
test
mov
sub
into
fwait
xlat
aad
adc
out
mov
xlat
and
cmp
jmp
sub
mov
xor
jb
and
add
icebp
daa
ja
scas
je
arpl
mov
sbb
popa
sub
test
mov
dec
pusha
adc
dec
fidivs
test
gs
cmp
inc
push
cli
fdivrs
popa
cmp
jmp
jno
add
movsb
cltd
xor
sub
jp
add
aad
aam
jecxz
scas
mov
and
pop
dec
in
cs
pop
jecxz
fmulp
in
mov
jno
shll
pusha
xor
aam
mov
xorl
sub
push
dec
sub
into
xor
dec
aas
std
ds
add
fwait
stos
sbb
dec
xor
jnp
out
les
or
push
mov
or
mov
mov
mov
dec
mov
out
dec
ss
xchg
mov
cmpsb
pop
jne
out
ret
jb
mov
sub
mov
push
lods
lret
repz
adc
pop
sub
scas
jne
push
dec
aad
movsb
pop
ficomps
cmp
push
and
data16
das
std
add
push
lret
xor
rcrb
pop
ret
subb
int
lods
push
stos
or
lcall
pop
mov
cwtl
repnz
lock
pusha
push
arpl
rcrb
in
jp
xchg
mov
dec
jnp
mov
or
js
lret
xchg
dec
loopne
popf
mov
push
pop
fldcw
andb
aaa
xchg
imul
jns
and
fwait
mov
or
out
cmp
icebp
mov
add
aam
test
pop
and
jge
dec
mov
inc
incb
inc
mov
push
inc
dec
xor
adc
or
pop
and
dec
sahf
ficomps
pop
movsb
sti
push
fidivs
icebp
sub
xor
fsubr
mov
inc
pop
pop
push
sub
sub
mov
add
cmp
add
pop
push
rolb
push
dec
add
int
sarb
push
add
js
scas
sub
and
jle
dec
xchg
mulb
fisubrs
pushf
and
mov
sub
ljmp
call
ds
or
jo
int
add
negb
scas
ljmp
fisubl
cmp
out
jbe
insb
inc
sub
mov
lcall
cmp
lds
iret
nop
add
out
movsb
fwait
mov
popa
cmpsb
push
shll
inc
sub
stos
pop
cmp
and
jb
jne
xchg
in
xor
fistps
rolb
je
test
popa
sub
add
aad
mov
xchg
push
xchg
hlt
notl
aad
shrb
icebp
fst
lahf
call
or
test
jne
cld
and
adc
out
loope
mov
push
sbb
mov
fcoms
lret
lret
cmc
jns
adc
jl
aaa
or
icebp
inc
jae
pop
stc
inc
adc
adc
pop
int3
push
sub
cmp
lahf
jmp
inc
mov
das
js
inc
roll
in
push
adc
dec
movb
scas
inc
in
hlt
mov
aam
scas
fwait
cmp
dec
xlat
push
stos
and
test
out
fs
sbb
jnp
shlb
call
sbb
push
imul
jno
movsl
adc
fwait
xchg
es
aam
out
lea
aaa
inc
ljmp
sub
adc
adc
cld
enter
mov
into
push
scas
mov
mov
push
into
inc
jecxz
mov
cli
jnp
xchg
test
jns
fmulp
mov
int
mov
iret
ljmp
stos
call
mov
push
dec
pop
imul
push
cmp
mov
adc
pop
sub
add
mov
aaa
pop
add
xor
fimull
mov
inc
into
xor
dec
mov
out
xlat
push
pop
sub
xchg
shrl
movsb
xor
pushf
push
mov
enter
mov
in
push
sub
xchg
pop
xchg
cmpsl
popf
fbstp
aaa
pop
xchg
ja
sbb
xor
in
jb
jmp
test
lret
jae
xchg
xlat
fcmovbe
or
mov
adc
and
ret
and
loop
cmc
xchg
jg
adc
lahf
sub
pop
mov
add
ficompl
in
sti
test
jae
lock
fnstenv
loop
cltd
cld
dec
enter
adc
aad
adc
cli
lret
out
cltd
inc
xor
mov
xor
jecxz
xlat
lods
pop
dec
pop
inc
push
aad
adc
cmc
mov
xchg
cwtl
loope
ljmp
adc
cmp
pop
movsb
push
in
push
jnp
fucomp
call
mov
aas
dec
icebp
sti
inc
adc
sbbb
pop
dec
cmp
shlb
insb
fwait
or
cmpsl
xor
mov
imul
cld
add
push
jbe
adc
xchg
adc
loop
dec
movsb
leave
and
iret
fadds
add
jae
call
sahf
outsl
or
jo
lea
xchg
mov
pop
out
or
jae
jb,pt
std
jb
lahf
ds
pop
jb
xchg
inc
xlat
cmc
movsl
pop
dec
mov
lret
push
daa
jl
and
cmp
fadds
and
add
ds
icebp
xor
sub
push
aas
lds
xchg
ficompl
leave
icebp
jo
jnp
push
stc
pop
pop
out
test
cmp
aas
mov
cmpsb
mov
cmpsl
lahf
pop
pop
mov
sti
xor
into
cmp
mov
clc
fistps
mov
insb
xchg
mov
loopne
sub
je
adc
stos
sbb
jo
mov
jmp
loope
les
xchg
xor
ds
or
adc
hlt
ljmp
shlb
push
jnp
and
ja
repz
fisubs
xchg
ret
das
lret
imul
fldenv
mov
mov
xchg
roll
clc
cmp
dec
inc
adc
cmpsl
xor
jns
mov
push
stos
mov
inc
aad
mov
daa
and
and
dec
push
ljmp
in
leave
call
push
test
dec
nop
push
xchg
pop
sbb
pop
cmp
jbe
mov
fs
push
cmpsb
es
stos
pop
paddw
add
jnp
sbb
scas
cli
jae
divb
mov
mov
jae
mov
movsl
data16
popf
leave
inc
push
js
jle
push
push
sub
out
jo
mov
jne
push
insb
ja
mov
add
cmpsl
test
jb
fs
pop
test
outsb
mov
sub
mov
bound
pop
xchg
clc
gs
cmpsl
test
rolb
ss
scas
fwait
add
or
cld
or
mov
push
out
mov
shl
sbb
pop
sbb
pushw
addr16
mov
bnd
in
dec
test
data16
test
clc
aad
out
dec
out
jno
xchg
jmp
xchg
push
icebp
sub
push
std
loopne
nop
repz
jbe
ds
arpl
out
lods
bound
outsl
out
rolb
insb
mov
mov
jp
dec
nop
in
loope
jmp
fmul
pop
dec
lret
sbb
js
fmull
push
repnz
imul
adc
lock
cmp
mov
inc
jbe
gs
mov
insb
pop
xchg
jo
sbbb
cmp
and
jns
jmp
mov
jmp
repnz
mov
fwait
mov
icebp
push
ja
mov
mov
in
lahf
push
je
push
adc
pop
leave
fstps
pop
sti
add
jne
mov
stc
pop
bound
fbld
mov
and
daa
mov
or
xchg
aad
or
pop
push
incb
mov
nop
rcll
addr16
loopne
sti
ss
mov
push
outsb
mov
sbb
jmp
jmp
into
dec
decl
or
rep
mov
data16
add
add
sbb
adc
mov
loopne
cltd
cs
mov
push
sbb
out
mov
mov
cs
adc
and
loopne
std
bound
or
jl
jle
leave
jecxz
add
sub
lock
imul
cs
call
jle,pt
jnp
push
repz
rolb
xor
cwtl
stc
pop
fs
inc
icebp
addr16
inc
add
cmp
dec
ds
aas
mov
aam
xchg
xchg
hlt
repz
jbe
xchg
sbb
sbb
stos
pop
jo
dec
dec
dec
cltd
cld
jno
out
sarl
mov
out
jbe
cmp
mov
pop
int3
sub
inc
push
adc
sbb
jl
addr16
stos
std
push
pop
mov
sahf
xchg
mov
cmp
test
adc
loope
dec
jne
xchg
pushf
cmp
inc
gs
mov
jbe
cmpl
aaa
dec
cmpb
adc
in
push
leave
cmp
and
push
cmc
test
mov
data16
or
adc
pop
cmp
fdivrs
frstor
ljmp
out
dec
mov
sub
pop
stos
inc
loop
push
leave
roll
int3
data16
push
sbb
in
fld
jne
popa
mov
cmp
xor
and
xor
cmp
xchg
mov
pop
lds
cmpsb
dec
pop
out
cmp
stc
stos
es
mov
lock
cmp
jae
in
adc
xchg
fidivl
imul
mov
cmp
outsl
je
jbe
in
or
test
aaa
out
and
fisttps
arpl
in
in
roll
mov
iret
pop
aas
outsb
or
ds
sti
call
call
testb
fcmovnb
pop
mov
flds
pop
hlt
mov
pop
ljmp
lcall
sahf
pop
and
sbb
push
das
xor
pushf
ds
mov
or
mov
and
or
or
and
testb
or
cmp
std
pushf
add
inc
out
jge
or
xor
sbb
mov
cmpsb
sub
jbe
or
jle
and
les
push
fidivs
fstpl
xchg
jl
imul
adc
jmp
mov
movsl
aas
arpl
call
neg
pushf
sarl
sub
jns
cmp
sub
fisubrl
icebp
xor
lret
sbb
inc
sub
insb
ficoms
pusha
lret
mov
inc
rcll
sbb
lods
repz
inc
pushf
xchg
and
mov
divb
mov
popf
jno
mov
mov
mov
pop
clc
scas
test
movsl
daa
mov
pusha
loopne
inc
inc
cmp
or
jnp
pusha
xchg
jnp
jmp
mov
sbb
inc
cmp
adc
xchg
xchg
cmp
ret
imul
repnz
xor
ljmp
xor
bound
pop
daa
lds
negl
incl
cmp
movsl
scas
adc
cmp
cmp
adc
jecxz
aaa
add
add
addr16
jl
outsb
movsb
xchg
push
pop
xchg
ss
pop
xor
addr16
fnstsw
lret
push
xchg
jae
dec
xor
jbe
imul
xor
lcall
and
jno
sub
xchg
jnp
mov
decb
sbb
cmc
fwait
in
pop
xchg
lcall
inc
sbb
dec
sub
xchg
lea
mov
dec
push
fmuls
or
cwtl
sub
fbld
pusha
repnz
jle
out
scas
aas
jo
mov
aaa
mov
adc
xor
cmc
leave
and
add
ja
xchg
pop
sbb
push
arpl
lret
cmp
sub
adc
sahf
cmc
xchg
scas
xchg
aas
outsb
in
sbb
loop
je
push
les
xor
out
les
xchg
imul
je
gs
sub
sub
adc
or
aad
pushw
outsb
mov
test
das
ja
imul
push
inc
cmp
mov
xchg
call
inc
lret
ret
movsl
popa
std
enter
cmp
or
pop
out
int3
mov
ja
arpl
mov
cmpsb
cld
cmp
mov
cmp
test
mov
mov
lret
pop
xor
scas
cmpl
shll
cmp
jnp
cwtl
andl
jmp
arpl
inc
call
inc
rcrb
inc
cwtl
cmp
and
pop
jmp
call
addr16
mov
mov
push
push
jns
jp
cmp
test
cmp
enter
rorl
lret
fnstsw
jae
lea
ja
or
pop
add
lods
adc
or
into
adc
adc
xor
and
pop
imul
das
push
cs
mov
jmp
xchg
inc
fwait
int3
xchg
pop
fldcw
mov
dec
mov
jge
xor
mov
push
xor
out
and
hlt
mov
adcb
int
cmp
dec
push
xchg
xor
or
dec
and
jle
ret
shrb
js
add
adc
mov
push
test
hlt
rolb
loope
pop
arpl
push
sub
test
pop
or
mov
cli
rol
les
xchg
dec
push
adc
notb
mov
adc
fwait
enter
sti
bound
xchg
xchg
or
scas
inc
inc
mov
cld
pushf
dec
or
test
insb
push
xor
enter
inc
sbb
push
fidivrl
loopne
mov
pop
es
pop
jmp
ret
sbb
dec
lret
mov
fists
addr16
adc
cmpsl
scas
or
pop
std
ror
or
aas
lock
add
in
ret
test
cmp
lcall
sub
nop
cmp
adc
mov
and
insl
call
mov
jp
aam
push
bound
fsubs
pop
mov
add
fdivrl
das
mov
lods
out
ljmp
lods
dec
pop
push
rolb
cltd
mov
fisttpl
push
outsl
insb
sub
pop
adc
out
sbb
test
lret
lcall
cmp
xor
lcall
aaa
nop
lods
push
inc
push
mov
push
xor
push
push
lods
into
popa
mov
hlt
add
stc
mov
hlt
pop
scas
clc
es
jbe
cld
xor
mov
cmove
sbb
scas
test
pop
jl
sbbb
xchg
push
inc
pop
push
pop
push
scas
pop
mov
nop
jg
inc
jae
jecxz
stc
cmp
rcll
sub
mov
int
fcoml
pop
ds
loope
sbb
jae
mov
mov
or
cmp
ficoms
push
xor
inc
dec
out
int3
loope
rcll
xchg
pushf
adc
fildl
pop
repnz
loopne
fcoml
imul
cmp
jg
fs
dec
out
aas
adc
dec
adc
push
xor
jno
bound
inc
push
iret
dec
push
inc
dec
stc
daa
aas
and
sbb
addr16
push
sbb
xor
inc
jmp
inc
push
xchg
inc
mov
jmp
mov
or
push
cmc
icebp
shl
inc
push
out
or
outsb
aad
xor
popa
icebp
fisttpl
insl
cmc
add
into
or
cmpsb
mov
or
push
popf
mov
fdiv
ja
ds
hlt
test
ljmp
mov
scas
cmp
out
ficomps
andb
adc
ret
xchg
xchg
or
stos
out
mov
and
jle
adc
mov
adc
rorl
insl
cmc
cmc
push
loope
pop
sub
push
inc
sbb
arpl
pop
xchg
push
jmp
or
jo
icebp
or
mov
negb
cmc
int
push
xor
mov
rolb
js
or
or
pop
push
add
jp
and
jnp
imul
dec
inc
jo
pslld
xor
push
stos
popa
dec
cmp
dec
xor
outsb
bnd
scas
dec
shlb
add
push
pop
push
aas
mov
negl
mov
dec
aad
or
mov
js
lock
addr16
imul
jmp
sbb
jno
popa
sub
bound
mov
out
or
pop
mov
add
movsl
and
imul
add
stos
nop
dec
les
jo
mov
cmpsb
imul
jno
jo
mov
pop
fcmovnbe
clc
in
mov
clc
test
xor
rcl
ds
lret
pop
leave
push
repz
popa
jo
fstp
pop
aad
jnp
xchg
loopne
lods
fdivl
loope
cmp
lcall
rcll
testb
dec
push
test
lret
or
xlat
push
mov
mov
mov
shlb
icebp
fs
pop
ds
xchg
inc
and
popf
xor
loop
adcb
int
mov
inc
dec
add
mov
addb
scas
mov
dec
push
test
add
sbb
and
push
sti
mov
test
loopne
pop
cwtl
inc
lods
xor
test
jb
or
xchg
scas
in
pop
xor
bound
sahf
outsb
inc
add
jl
xor
js
mov
inc
add
jmp
ja
test
jns
dec
js
add
jb
mov
aas
fwait
jmp
sub
lea
xor
dec
sub
or
popa
icebp
xlat
ret
xor
dec
cld
lahf
sub
imul
imul
and
pop
inc
clc
sbbl
sbb
cmp
adc
ret
sub
add
sbb
icebp
cmc
lret
and
sub
and
imul
pushf
out
mov
ret
push
adc
cltd
scas
ret
iret
jle
xchg
cs
add
fisttpll
pop
clc
aas
les
and
popa
mov
inc
or
lds
mov
cld
gs
inc
cmpsb
jo
mov
outsl
xor
repnz
push
lahf
sbb
adc
fimull
lock
insb
gs
lods
iret
fsubrs
addr16
pop
mov
sub
out
push
adc
mov
inc
aas
mov
adcl
jno
frstor
out
mov
mov
xchg
pop
sti
and
iret
xor
xchg
out
xchg
cmp
inc
fcomip
in
xchg
icebp
int3
mov
cli
push
psraw
sbb
les
int3
jo
sub
lret
cmpb
clc
cmpsl
ficomps
lods
enter
mov
sarl
and
aam
jne
in
stos
mov
and
outsb
popa
fiadds
fisttpll
imul
pop
loope
inc
aad
stos
push
mov
mov
mov
fisubs
push
mov
mov
jge
jae
mov
rcrl
xor
dec
sub
shlb
pop
inc
xchg
mov
stos
mov
jns
mov
scas
aaa
insl
popa
or
jae
push
in
cmp
cmp
xchg
jb
add
inc
and
ljmp
fiadds
mov
dec
cmp
cld
inc
mov
sbb
shlb
pop
push
gs
sub
xlat
andl
std
test
sahf
jbe
call
mov
mov
test
sahf
adc
xor
adc
sub
lcall
sub
xor
mov
dec
bts
mov
into
in
stos
rclb
xchg
xchg
push
psubusw
pop
mov
shll
pop
ret
sub
mov
add
inc
mulb
ss
cmp
pop
mov
ljmp
notb
sub
jo
ret
popa
test
xor
orl
push
out
mov
or
mov
clc
pop
fwait
sub
mov
std
incb
mov
shlb
inc
sbb
add
push
xchg
sbb
add
sahf
data16
mov
sbb
and
ret
push
sub
or
inc
mov
imul
scas
sub
sub
loopne
fnstcw
pop
pop
js
arpl
shlb
jne
pop
call
mov
jo
scas
into
es
add
outsl
add
in
mov
xor
push
push
cmp
rcrb
popa
dec
rorl
inc
loop
cmp
pop
mov
imul
addr16
pop
js
fisttpl
rolb
fincstp
in
add
add
fidivl
int
push
xchg
adc
mov
sbb
notl
mov
dec
daa
dec
pop
cwtl
and
int
andb
cmp
xchg
out
mov
addb
mov
les
stos
bswap
pop
popf
sbb
es
rolb
leave
stc
rorb
gs
add
dec
pushl
outsl
add
stc
repnz
stos
and
mov
rclb
pop
sbb
jg
cwtl
xlat
push
ja
fsubl
rcrb
dec
inc
pusha
jge
adc
std
or
pop
add
lock
mov
add
icebp
cld
les
xor
pushl
in
cmpsl
mov
cmp
xor
ljmp
push
jge
cmpsb
mov
mov
jge
mov
adcl
mov
or
into
addb
hlt
stc
icebp
or
add
dec
inc
add
and
and
xchg
ret
loopne
mov
cmp
mov
mov
roll
add
pop
mov
sub
cmp
sbb
xchg
jae
jge
scas
loope
in
dec
hlt
and
push
popf
stos
and
int
leave
mulb
addb
pop
xchg
fwait
jno
cmpsl
out
mov
mov
dec
jmp
jge
insl
pop
push
cmp
mov
or
sub
sub
sub
outsb
adc
mov
push
clc
rcll
xor
pop
stos
jo
neg
sbb
jo
mov
sub
std
in
mov
mov
aaa
shll
sbb
aam
cs
scas
das
cwtl
lods
mov
xchg
mov
sub
sub
sub
mov
sbb
fisubrs
mov
fstl
cmp
inc
movsb
cltd
inc
xor
xor
cmp
mov
out
out
cmpsb
outsl
rcll
sub
xor
sti
jp
sub
icebp
lea
lock
adc
cld
outsl
xchg
mov
sbb
cmp
xchg
addb
xlat
fimuls
push
xchg
ja
xchg
ret
pause
ljmpw
adc
mov
dec
es
pop
cmp
les
int3
shll
out
cmp
cmc
inc
addr16
leave
out
dec
cmpsb
cwtl
ja
add
xchg
and
mov
bound
ss
insb
cmp
lods
add
clc
scas
adc
push
jg
inc
inc
adc
in
ljmp
mov
sbb
shrl
repnz
mov
mulb
sbb
les
aaa
movl
inc
add
rcrl
add
in
ja
arpl
mov
jecxz
lret
repnz
jp
nop
addr16
mov
add
push
es
les
inc
push
sub
sub
roll
incl
mov
push
push
addl
cmpsb
pop
xor
adc
jns
dec
jbe
test
jmp
imul
jmp
sbb
sub
mov
dec
data16
push
adc
mov
gs
mov
jg
inc
or
scas
cmpl
adcb
cwtl
xor
in
call
sbb
xchg
mov
push
push
inc
xchg
rcr
dec
add
js
or
xchg
pop
sar
mov
int
fsubrp
or
push
iret
out
push
cmpsl
dec
add
and
xchg
mov
sbb
sbb
repz
xor
push
sub
xchg
cmp
mov
int3
in
push
aaa
ss
push
aam
out
loop
stos
and
popfw
cwtl
cmp
call
dec
mov
movsb
repnz
mov
push
add
mov
mov
xchg
jmp
pop
in
or
insl
leave
es
popl
push
jnp
insb
dec
rcll
mov
pushl
inc
punpcklbw
push
add
pop
push
test
cmpsl
pushl
push
stc
mov
xchg
enter
ja
stos
xchg
fldcw
add
stos
mov
xchg
push
mov
clc
or
std
add
cli
stos
xor
add
push
faddl
mov
stos
push
in
push
mov
fistpl
adc
mov
jbe
sub
xchg
ss
test
mov
xor
jb
xchg
xlat
mov
add
cli
jb
in
push
cltd
push
test
out
push
sbb
fucomp
xor
jo
mov
xor
push
lahf
repz
and
cmp
mov
mov
adc
add
or
cli
sub
and
xchg
jmp
pop
test
repnz
push
jl
scas
lret
addr16
xchg
jo
lods
loope
shll
jno
shrb
mov
cld
mov
jle
or
push
jecxz
push
push
or
imul
dec
jno
dec
bound
push
jecxz
jge
dec
xor
lret
sbb
arpl
lret
inc
and
int
xchg
lret
xchg
daa
repz
cmp
ret
bound
loope
jle
mov
enter
mov
jle
imul
lock
nop
mov
jno
mov
test
adc
call
mov
rcrb
sbb
pop
test
iret
flds
and
das
aam
adc
ja
sbb
jae
fcomps
popa
cmpsb
mov
int
adc
fsubs
and
xor
and
pop
cwtl
pop
jae
jmp
scas
push
movsl
hlt
clc
add
rcll
or
xchg
jae
lea
sbb
fnstcw
sub
out
in
mov
push
loope
and
push
push
stc
mov
and
sub
and
enter
push
or
mov
xchg
push
xchg
enter
mov
pop
and
adc
inc
push
mov
or
push
mov
jnp
adc
arpl
in
ja
lea
test
pop
jp
cmpsb
pop
sahf
mov
ror
stc
mov
fistpl
subb
push
mov
adc
lock
jl
aad
xchg
cmp
dec
lcall
mov
out
pop
ljmp
push
mov
in
jns
inc
decl
test
shlb
fstpl
orl
push
dec
pop
pop
lcall
imul
in
mov
mov
into
inc
and
mov
mov
fs
sbb
jno
push
sub
pop
rcll
daa
mov
aaa
xchg
leave
mov
pop
xorl
xchg
xorb
push
aam
clc
inc
jbe
loope
jecxz
pop
sub
jns
adc
sub
mov
dec
mov
jle
lods
es
scas
stos
pop
xchg
cs
mov
aam
rcrb
iret
cld
push
rolb
shrb
call
lods
arpl
lahf
inc
outsl
notb
push
mov
jo
cmp
je
add
xchg
lahf
dec
push
dec
sbbl
ret
push
ss
popf
add
in
std
out
add
xor
sub
mov
mov
push
jo
pop
fistps
stc
les
and
push
push
movsb
outsl
push
in
nop
add
lcall
cli
xlat
or
clc
inc
repnz
rcll
movsb
lds
fwait
push
pop
push
mov
addr16
call
xchg
add
inc
cmp
cmpsb
sub
loopne
je
mov
xchg
xlat
mov
add
call
or
jge
das
sti
pop
test
push
jp
mov
stos
daa
int3
rcr
inc
add
into
out
ja
lock
lret
lcall
push
mov
sub
cli
sbb
xlat
jle
loopne
jae
mov
xchg
sbb
jl
push
pop
call
sub
adc
xor
adc
and
pop
mov
lret
push
fld
or
push
leave
ja
inc
rorb
addr16
pop
xchg
jg
add
repnz
add
cwtl
sub
aam
lahf
pop
jge
jge
cld
push
cld
aaa
pop
int
shl
out
push
and
in
mov
int3
icebp
addl
pusha
scas
push
adc
pop
sbb
or
adc
add
jno
sahf
sbb
fabs
fcmove
clc
ret
cmp
test
adc
or
jg
lret
shrb
imul
rep
pop
shl
pushf
popa
in
add
mov
js
xor
add
call
dec
pop
sub
push
mov
push
or
push
aam
push
fistpll
enter
cmp
push
mov
stos
pop
imul
in
jb
push
adc
push
stos
inc
out
jecxz
dec
inc
adc
pop
daa
mov
lahf
sbb
or
adc
add
adc
or
icebp
adcl
pushf
mov
sahf
lahf
sbb
sbb
dec
and
xchg
jnp
xor
icebp
sbb
mov
cltd
push
mov
and
es
mov
je
mov
dec
stc
inc
std
and
xor
cmp
ljmp
fwait
sarb
mov
jno
nop
imul
xchg
push
cmc
movl
popa
sbb
repz
jne
arpl
sbb
pusha
push
push
repnz
dec
sub
cmp
inc
mov
adc
test
sub
adc
aad
insl
daa
in
popf
jne
cmp
arpl
xchg
sbb
jmp
xor
pop
sub
or
dec
xor
push
sub
stos
aad
bound
test
push
das
add
loop
jns
cwtl
dec
inc
das
mov
push
ja
lods
pushf
xchg
add
addr16
cmp
mov
inc
xchg
push
das
dec
mov
push
dec
loopne
xchg
jbe
mov
pop
lds
pop
inc
push
fiaddl
lods
mov
mulb
iret
sbb
adc
insl
in
xorl
push
inc
das
fxch
sub
or
mov
stos
out
xor
insb
icebp
xchg
icebp
mov
cld
in
push
jge
or
mov
adc
loope
je
mov
jge
insb
push
lret
jle
pop
jo
lret
inc
lods
out
bnd
jae
pop
fs
fsubs
repnz
push
lea
dec
push
popf
jmp
pop
ja
xchg
cmp
scas
ljmp
and
push
or
pop
in
inc
in
inc
cmp
mov
dec
das
mov
adc
xchg
fwait
leave
int3
movsb
or
std
inc
pop
or
pop
addr16
outsl
mov
or
mov
test
mov
rorb
iret
lcall
pop
inc
fwait
jmp
dec
test
into
mov
ja
sbb
dec
ret
orl
mov
inc
gs
je
pop
xchg
addb
call
fsubp
lret
fadd
pop
push
xchg
add
pop
pop
fists
scas
gs
imul
incb
cmp
fldenv
push
mov
or
mov
dec
sub
sahf
mov
ja
fs
clc
jo
or
imul
jp
push
push
imul
stos
pop
xchg
jne
inc
mov
xchg
cld
outsl
cmp
in
mov
mov
cmpsb
sbb
jne
add
faddp
pop
xchg
dec
js
cmp
push
mov
cld
enter
subl
movsb
repz
cmp
add
mov
fucom
ljmp
jp
mov
sub
dec
pop
icebp
cmp
in
sti
jnp
daa
pusha
and
aam
xchg
and
je
push
leavew
repz
aaa
mov
lret
iret
push
sub
in
std
xchg
dec
rcrb
jno
out
xchg
or
fwait
hlt
imul
pop
sbbb
xchg
iret
push
stc
dec
lret
fidivs
jo
xor
sub
or
or
inc
mov
push
dec
out
inc
inc
or
inc
xchg
sbb
nop
or
out
leave
ret
jae
xchg
xchg
sub
add
insl
pop
es
mov
mov
dec
mov
push
addr16
jns
sti
dec
icebp
call
pop
and
jmp
push
and
shlb
loop
jl
fmuls
cmp
ljmp
pushf
lods
xor
mov
sbb
mov
cltd
ss
lock
xlat
inc
or
sub
movsb
add
adc
xchg
jmp
and
les
imul
cmpsb
icebp
jne
mov
mov
aas
test
test
fwait
icebp
pop
xor
mov
xchg
and
pop
cmp
cwtl
daa
ds
cmp
xchg
fstps
xchg
into
cmp
sub
adc
adc
pop
out
aaa
dec
das
in
pop
roll
and
sub
lods
xor
jmp
popa
lea
mov
push
jns
aas
enter
stos
push
dec
pop
push
je
enter
in
mov
add
popa
xor
sbb
dec
test
aad
test
stos
test
inc
jl
jb
movsb
lea
cltd
cmp
add
out
repz
cmp
adc
push
lods
push
mov
jnp
push
stos
xchg
add
push
cmp
sahf
nop
dec
mov
dec
into
stos
popf
xor
sub
stc
test
imul
jmp
nop
scas
xlat
fidivl
dec
inc
aaa
pop
popf
inc
push
mov
mov
dec
pmullw
dec
in
std
mov
push
test
xor
outsb
int
push
jp
mov
jmp
cmp
js
inc
in
je
je
cs
jo
repnz
rcll
mov
sahf
mov
fcompl
pusha
push
shll
jb
sbb
in
inc
fiadds
or
repz
cmp
add
in
stos
cs
imul
dec
cmpb
pop
cmp
aas
push
mov
repz
adc
ja
jns
fistl
mov
inc
and
mov
in
and
insb
ljmp
popl
mov
and
and
xchg
inc
and
frstor
mov
inc
loope
aas
or
les
mov
pop
xchg
inc
mov
rcl
mov
xor
push
xchg
mov
xlat
sbb
sub
lods
fwait
xchg
inc
and
lret
fsubp
sub
dec
add
cmp
push
insb
sub
cwtl
cmp
es
stc
imul
lods
push
adc
jecxz
push
les
cli
sahf
xorb
pop
cwtl
hlt
jg
in
mov
test
insb
cwtl
out
idivl
mov
mov
push
adc
adc
idivl
ret
icebp
push
es
in
jns
or
stc
sub
rcrb
xchg
sbb
pop
daa
pop
test
mov
int
aas
xor
in
xor
mov
mov
sahf
js
adc
push
es
jmp
je
or
cmp
mov
mov
sub
or
add
mov
loop
xor
and
and
addr16
fistl
orb
pusha
adc
test
cmp
xchg
shr
lods
push
jb
mov
dec
ret
xor
sub
cmp
xor
fbstp
add
jnp
cmp
mov
repnz
pop
out
call
adc
xor
icebp
sbb
adc
lds
shll
cmpsb
incw
xor
mov
mov
ret
imul
or
cmp
rcll
pop
mov
movsl
pop
mov
adc
mov
in
mov
cmp
adc
sbb
aaa
fldenv
inc
sub
jbe
mov
iret
cmp
jmp
push
mov
outsb
mov
cmp
lret
gs
add
stos
daa
add
ret
jns
nop
dec
lahf
jae
dec
sub
mov
dec
movsb
andb
hlt
push
pop
sub
push
jmp
push
sbb
mov
outsb
mov
call
lock
mov
shll
sbb
sbb
scas
mov
iret
ds
sahf
ljmp
std
sub
xor
sub
dec
xor
lods
dec
popa
xor
fsubp
adc
in
and
outsl
out
add
sbb
push
jp
add
xchg
pop
idiv
adcl
push
or
and
call
call
insl
sbb
or
mov
cli
iret
fbld
push
out
adc
xchg
ss
mov
fcompl
push
inc
or
pop
rcrl
rolb
leave
hlt
sub
or
sub
mov
test
sub
mov
adc
dec
jle
or
and
dec
add
repnz
out
lret
mov
mov
mov
xor
rcr
daa
jg
stos
ja
fstps
pushf
jae
dec
cmpb
xchg
cwtl
lea
iret
imul
jmp
mov
js
jge
xor
pop
movsb
mov
inc
stc
popa
jnp
jmp
pop
inc
in
jp
shll
cwtl
bound
sub
fistpl
sbb
enter
add
push
movb
pop
ret
into
push
mov
sbb
dec
cmp
out
or
sbb
push
and
sbb
sbb
jb
xchg
fwait
xor
xchg
xchg
add
dec
in
cmp
mov
dec
or
push
clc
lods
pop
into
in
and
xor
xchg
into
scas
lods
xor
xor
sbbl
pop
dec
xlat
xchg
movsl
mov
out
test
dec
pusha
je
add
inc
fsubl
popl
cwtl
xor
lods
mov
jae
shlb
mov
fs
push
cld
repnz
clc
sbb
ss
inc
sbb
cmp
dec
pusha
leave
shll
xor
in
addr16
mov
pop
mov
lea
xchg
loope
ret
outsl
dec
sbb
adc
test
push
sub
scas
mov
lret
sub
mov
cmc
xor
xchg
pushf
adc
les
mov
push
or
add
sbb
sbb
std
fucomp
cmp
aam
int3
jne
jne
mov
xor
pusha
jne
cli
lret
rcll
scas
mov
inc
in
xchg
movsl
and
sub
inc
add
xchg
pop
icebp
ds
jp
pusha
lods
push
inc
lods
mov
push
jbe
popl
xchg
mov
inc
fistpl
push
not
push
cltd
icebp
daa
les
mov
xchg
dec
mov
daa
push
pop
shl
xchg
xlat
add
into
mov
icebp
sbb
mov
je
xor
out
mov
or
jb
out
jl
ja
inc
imul
and
pop
es
sbb
jno
movsl
sbb
mov
shr
in
mov
sahf
pop
jle
sbb
lea
jecxz
jbe
pop
loopne
cmc
jecxz
ds
and
pop
iret
pusha
cmc
adc
jnp
stos
mov
lock
aas
mov
jmp
jl
dec
pusha
push
sbbb
xor
inc
cmp
xchg
adc
adc
fsubs
stos
es
ss
in
js
idiv
aaa
in
fadds
sub
mov
adc
jne
sbb
mov
subb
fxch
jns
cmp
dec
cmp
pop
mov
nop
js
jne
mov
xchg
ret
fwait
mov
jne
iret
sub
cld
jbe
inc
sbb
into
add
aaa
bound
jne
add
rcll
pop
fistps
iret
and
scas
or
aas
imul
lods
loopne
lods
nop
sbb
mov
call
mov
push
jbe
test
cmpb
and
push
loopne
pushl
and
add
inc
mov
add
add
mov
or
jg
rcrl
insb
pusha
insb
int3
mov
cmp
jp
jo
lods
push
dec
jae
push
xchg
sub
mov
loop
hlt
jne
les
enter
xor
insb
mov
mov
pop
sbb
push
sahf
adc
lods
pushf
cmc
cmp
push
popa
xchg
cli
lods
mov
out
adc
int
pop
cmp
add
scas
je
aas
or
mov
sahf
inc
movsl
push
loopne
cltd
xchg
push
add
push
cmp
adc
sub
in
sub
mov
or
mov
xchg
xchg
push
imul
pop
les
into
clc
or
mov
lret
dec
loope
mov
imul
inc
mov
outsl
jle
and
push
xor
in
pop
ja
shld
mov
adc
cli
lea
jge
jmp
shl
cmpsb
cwtl
mov
out
mov
mov
jbe
jecxz
stos
mov
je
sub
and
push
into
fwait
mov
inc
in
out
cmp
sub
inc
in
mov
mov
outsb
push
test
stos
xchg
cwtl
cmp
popl
and
pop
pop
xchg
movsl
mov
and
xchg
lretw
push
stos
pop
das
cs
xchg
sbb
data16
fadds
scas
fwait
mov
sub
sar
aad
pusha
sub
lret
in
ret
add
xor
xor
sub
push
jns
fldt
rcr
add
push
or
in
jno
js
mov
mov
adc
inc
repz
fildl
lahf
sub
cmc
xchg
int3
rcl
test
loope
js
adc
test
cwtl
pmovmskb
cmp
inc
or
int
push
jne
inc
cli
mov
js
push
pop
sub
lds
dec
xchg
test
pop
mov
loope
ret
in
dec
jnp
jle
sub
sbb
hlt
push
xchg
or
mov
gs
push
loopne
fldl
cli
cltd
mov
add
jns
adc
loop
mov
sub
mov
ret
pop
out
inc
pop
insb
pop
mov
sbb
daa
xlat
or
shl
lea
push
popa
gs
aaa
jle
mov
lock
ret
ljmp
arpl
jae
out
xchg
ljmp
mov
rorb
pop
ficoms
sti
into
xchg
imull
xchg
fwait
xor
add
jmp
add
and
jp
jne
push
fstpt
mov
jp
cmc
xor
and
pop
movsb
xchg
pop
je
fadds
pop
or
xchg
inc
or
stos
repnz
insl
stos
in
out
or
ds
jmp
ss
add
cli
jae
pop
das
dec
or
xor
push
lret
push
push
aam
push
mov
cmp
imul
fmulp
dec
sub
sbb
popf
inc
mov
cwtl
adc
das
int
push
outsl
xchg
test
xor
mov
loopne
push
ja
xchg
add
fiadds
inc
add
pop
mov
scas
and
leave
mov
cli
fs
sub
jge
jg
push
mov
cmp
pop
mov
sti
adcb
loopne
sub
aas
pop
std
push
jae
add
sti
fwait
sbb
xor
mov
inc
jbe
sarb
loope
pusha
mov
mov
mov
mov
mov
mov
insb
cmp
movb
popa
daa
push
lret
repz
sbbb
mov
mull
push
sbb
push
rorb
xor
loope
and
xorb
cltd
stos
jae
jns
and
mov
outsl
es
adc
add
or
sub
aam
mov
sbb
adc
sub
movsl
in
xor
cld
pop
xor
out
in
mov
push
vucomiss
push
sub
ja
xlat
in
movsl
dec
xlat
lret
inc
cmpsl
into
rdmsr
pop
jo
arpl
call
cmc
xchg
mov
mov
and
mov
push
scas
cmp
push
sti
ss
sub
add
sarb
nop
dec
mov
pop
shl
loop
add
sbbl
aad
ja
insb
cld
stos
mov
andl
sti
add
inc
icebp
subl
adc
jge
pop
inc
dec
xor
push
pop
out
inc
es
xchg
cmpsl
pop
icebp
je
add
dec
out
push
jg
xchg
mov
fldenv
insl
xchg
ss
adc
aad
jno
push
pop
mov
aad
push
add
int
cmp
mov
mov
dec
push
push
fdivrl
shl
sub
sub
movsb
cmp
sbb
and
aaa
imul
fs
inc
aaa
sub
stos
aaa
push
xor
or
enter
push
jnp
fdivrl
arpl
or
add
out
pop
add
orl
jecxz
test
add
pop
sub
adc
pop
movsl
rorl
push
xor
jmp
mov
jecxz
inc
add
pop
pop
into
leave
es
out
cmp
sahf
rorb
nop
add
dec
sbb
bound
xchg
subl
aad
gs
pop
push
push
lcall
push
jnp
xor
sub
dec
movsl
push
std
mov
notb
adc
adc
dec
out
sub
inc
cmp
mov
jecxz
xor
mov
mov
and
cmp
divl
mov
daa
adc
sar
jnp
xlat
cld
or
and
mov
imul
test
mov
icebp
xor
fstpl
push
mov
int3
fwait
dec
shll
icebp
push
lcall
and
bound
mov
fwait
xchg
sti
mov
sub
je
mov
jle
into
and
pop
popf
lods
jg
mov
pop
ret
sti
mov
mov
test
mull
push
xchg
mov
mov
aas
incl
es
lds
adc
pop
adc
ds
rol
pop
rclb
push
aad
stos
fs
inc
push
cs
scas
in
pop
push
iret
sbb
pusha
aaa
fildll
jae
mov
dec
jae
ja
into
rclb
sbb
call
fnstsw
cmp
push
adc
cwtl
inc
fwait
push
xchg
or
mov
dec
cmp
lock
das
push
xor
mov
sub
cmp
and
mov
pop
xchg
pop
clc
mov
adc
in
fs
dec
xchg
sbb
or
xchg
test
stc
cmp
cli
push
je
icebp
stos
mov
mov
icebp
popf
and
pop
fsub
jnp
dec
inc
insl
push
outsl
enter
pop
and
and
stos
add
jl
push
mov
xor
xchg
movsl
loopne
fdivrl
shll
fisubs
lcall
jmp
mov
fists
repnz
push
push
bound
cli
lods
in
test
popf
pop
jmp
std
fdivrl
mov
mov
add
rcl
ds
aaa
push
inc
inc
pop
fldz
dec
lret
rcrl
fistpll
cmp
rcrb
cmp
xchg
cs
lea
js
idiv
xor
stc
sbb
adc
fwait
test
shrl
pop
inc
and
je
xor
cmp
mov
movsl
jl
add
out
add
xchg
repnz
int
sub
inc
lret
cmpsb
ja
loope
rcll
ss
mov
mov
and
int
fwait
pop
cs
popa
in
pop
rcr
shll
lods
sbb
sbb
decl
in
dec
mov
lea
movsl
into
push
pop
or
dec
jmp
inc
jge
xor
jmp
mov
cltd
lea
or
dec
jo
mov
popa
jmp
push
push
imul
adc
xor
pop
daa
sahf
lods
and
jg
loope
sbb
ljmp
sbb
lods
pusha
hlt
jg
data16
stos
sbb
test
in
pop
xchg
sti
dec
inc
shlb
ljmp
add
xor
mov
or
jecxz
mov
cmp
aad
jecxz
loopne
mov
and
xchg
shlb
push
addr16
aam
xor
or
push
and
push
pop
out
scas
push
inc
int
out
add
loope
inc
adc
jmp
imul
mov
push
jo
leave
ret
fwait
add
clc
dec
in
mov
rcl
lods
repnz
pusha
js
leave
cmp
sub
mov
notb
pop
cmc
lock
mov
add
adcb
pop
xchg
push
lods
pop
adc
cmpsl
ret
xor
inc
sub
dec
sbb
fmul
mov
pop
dec
fs
ss
in
or
jp
push
sub
stos
sub
push
aaa
push
inc
sub
cwtl
add
push
xchg
aaa
dec
xchg
in
mov
aaa
add
xorb
ret
add
sub
mov
mov
sub
ss
nop
dec
sbb
jae
inc
jo
negl
and
push
mov
xchg
sbb
cmp
and
adc
cmp
or
insb
lss
ret
andl
jl
sub
sbb
test
mov
dec
movsl
cwtl
pop
clc
xchg
inc
sbb
leave
mov
inc
push
inc
imulb
lock
test
dec
add
sub
dec
inc
es
gs
push
inc
loopne
mov
pop
sub
cld
jne
xchg
inc
inc
test
int
and
jnp
jo
in
lods
push
jb
mov
mov
xor
xlat
jg
ret
out
mov
lcall
push
fs
mov
clc
jne
ficomps
clc
push
or
mov
and
adc
mov
mov
and
jae
or
mov
shl
in
cmp
lock
outsl
dec
lods
dec
xchg
out
popa
test
xor
mov
adc
push
mov
pop
sti
push
std
xchg
mov
outsb
inc
jo
movd
fstl
mov
dec
pusha
std
mov
and
in
cli
outsl
lods
sarb
clc
outsb
inc
xlat
fidivs
sbb
mov
shll
fdivrl
push
mov
or
mov
inc
fbld
clc
mov
pop
pop
sub
sub
adc
rolb
push
jge
jp
adc
mov
stos
adc
jnp
cmp
cli
jns
shlb
rcr
sbb
sub
frstor
mov
mov
dec
scas
test
mov
shll
fmul
inc
gs
pop
js
mov
adc
repz
mov
scas
jl
shr
and
cltd
xchg
ret
jmp
lahf
sub
dec
xor
mov
lods
into
cmp
mov
inc
inc
pop
jg
subb
insb
jge
addr16
addr16
lea
and
mov
xchg
js
jp
insb
pcmpgtw
fs
jo
adc
push
push
leave
sub
mov
hlt
mov
xchg
and
cmp
iret
jg
fwait
dec
dec
jno
je
jo
sbb
lock
fdivrl
rclb
je
rorb
pop
cmpsl
data16
jb
push
leave
notl
push
mov
xchg
sbb
pop
insb
pop
xor
jl
out
ja
ret
cwtl
sub
mov
aaa
jl
xchg
sbb
cs
sti
dec
mov
jae
sub
xchg
insb
push
inc
xchg
movsl
or
cmp
add
dec
leave
sbbb
inc
push
lcall
fbstp
outsl
adc
push
scas
test
xchg
xor
lods
ficoms
or
pop
movnti
in
decb
outsb
mov
sub
jp
adc
cmp
int
shrl
lods
arpl
jge
cmpsl
in
out
and
mov
push
push
cmpsb
inc
sub
mov
in
jecxz
mov
inc
pop
pop
pop
adc
jns
clc
mov
or
jbe
and
flds
or
lock
mov
cs
cmpsl
cmp
pop
push
dec
out
aam
adc
pop
call
repnz
fsubl
aas
adc
insb
test
dec
fists
cmp
and
shll
mov
test
sarl
frstor
gs
adc
jp
test
jg
rorl
outsb
and
je
repnz
jbe
cltd
in
sub
mov
outsl
xor
mov
in
ss
xchg
push
popa
xchg
dec
xor
cmp
iret
lahf
push
mov
ret
pusha
xor
aam
mov
in
xor
xchg
sbb
leave
mov
popf
mov
lock
repz
push
bound
lock
daa
xchg
mov
repz
xchg
mov
jge
arpl
dec
inc
fisttpl
hlt
fmul
shl
nop
and
cmp
testl
jns
imul
adc
lea
xchg
pusha
scas
lds
mov
mov
cmp
mov
pop
or
into
fstpt
cmpsb
push
adc
jp
xor
or
cmc
inc
cli
je
popf
or
sbb
dec
sub
out
out
mov
cmc
pushl
sub
xchg
add
push
jmp
popf
mov
jno
add
push
scas
adc
sub
insl
push
pushf
jo
sbb
cmp
adc
add
xor
jns
mov
cld
mov
adc
lds
inc
scas
stos
js
xchg
pusha
push
xchg
test
mov
dec
or
lds
out
rcrl
xchg
sub
cmp
sub
mov
xorb
loop
cli
add
mov
js
idiv
repnz
sbb
je
int
sahf
mov
ficomps
mov
jns
out
psubd
or
xor
unpckhps
xlat
movsb
shll
dec
stos
dec
xchg
push
mov
movsb
lcall
inc
mov
or
lods
es
or
inc
mov
cmc
jp
ljmp
jns
out
sub
mov
jne
and
adc
jns
mov
mov
adc
mov
repz
negl
push
xchg
popa
pop
das
shrb
ds
lods
cmc
test
dec
pop
add
orb
sbb
or
cmp
mov
cmpsb
or
mov
fidivl
xor
cld
popf
and
rorb
sub
jle
arpl
jecxz
dec
push
mov
xor
push
push
add
rolb
inc
dec
cmpsb
mov
xchg
jp
iret
jae
cmpsb
hlt
or
sahf
or
xor
jno
mov
dec
push
sub
je
fildl
jb
push
pusha
fsubl
mov
addr16
aaa
mov
adcb
xchg
lods
add
lods
inc
cmpsb
pop
jecxz
ffree
add
add
in
negl
scas
jp
bswap
fbstp
and
pop
cmp
mov
and
and
inc
pop
mov
xchg
mov
push
xchg
loope
dec
pop
xchg
enter
jl
rcll
mov
sub
test
popf
loope
jp
mov
xchg
sub
or
rol
push
insb
push
sbbl
pusha
lock
push
jecxz
mov
out
test
fisubrs
lret
sub
sub
push
mov
popa
jmp
jno
fld
xchg
mov
loope
add
lret
popa
sub
xor
imul
cmp
popf
popa
push
int
das
es
aas
mov
sbb
jo
ja
test
outsb
gs
out
push
jl
xchg
dec
cmpsb
stos
fwait
cmp
dec
dec
mov
inc
dec
dec
notb
pop
xchg
out
mov
mov
imul
aam
xchg
sub
xchg
mov
dec
xchg
test
pop
sbb
cmp
je
sbb
loopne
dec
xchg
jne
push
mov
punpckhdq
mov
xchg
inc
xor
test
iret
mov
out
mov
mov
loop
xor
jnp
dec
cltd
or
movsl
cs
std
sub
cli
sub
outsb
aas
mov
adc
rcrl
bound
fistpl
cs
jnp
loopne
pop
dec
jmp
and
adc
and
int
push
fcoml
in
pop
cmp
mov
adc
pop
jle
cmp
or
xchg
gs
lock
xchg
dec
push
imul
sahf
jle
aas
push
pop
aaa
lds
lds
cltd
lcall
movsl
push
loope
enter
movsl
mov
imul
cld
leave
scas
test
sbbl
inc
xchg
sarl
and
inc
mov
cwtl
stos
jl
inc
outsb
adc
cmc
mov
inc
xor
cs
jae
xchg
pop
jmp
pop
in
sarb
xorl
xor
addb
fwait
add
inc
cmpsl
repz
popa
pop
pop
xchg
jne
jne
scas
sub
pop
insl
xor
fidivrs
pop
mov
scas
adc
mov
mov
sub
loope
jle
mov
pushl
loop
mov
sub
and
sahf
pop
lcall
pushf
sahf
int
mov
dec
pop
mov
xchg
xchg
rcrl
loope
dec
mov
and
or
jg
mov
lcall
sahf
sbb
mov
ret
jo
xlat
sbb
jl
xchg
fimuls
out
jbe
push
mov
mov
rclb
nop
test
pop
aaa
jl
jbe
lods
cwtl
cmpsb
mov
xlat
repnz
dec
lret
fiaddl
xor
xchg
mov
bound
bound
sbb
repz
lods
gs
push
xchg
xchg
out
jbe
aas
jbe
and
lock
cli
jnp
jo
fildl
scas
jb
add
addr16
adc
dec
sub
jne
mov
sbb
test
jae
lods
xor
shr
xor
sub
insb
mov
fisubrl
inc
pop
mov
add
push
xor
jp
push
adc
icebp
dec
sti
cmpsl
jmp
and
jle
cld
or
push
popa
lods
cltd
out
ret
into
or
cmp
out
mov
mov
mov
push
cltd
lods
ljmp
or
adc
mov
loop
enter
lcall
lret
leave
fcmovu
add
add
sbb
sbb
es
dec
stos
in
cmpsb
movb
aad
inc
cwtl
loope
xchg
lcall
daa
inc
sbb
adc
mov
mov
scas
insl
leave
call
les
jbe
mov
rcl
leave
out
jns
fadds
iret
mov
add
das
dec
fbld
outsl
mov
jnp
popf
mov
insb
dec
jge
popf
adc
xchg
inc
ja
xchg
inc
es
and
mov
stos
inc
icebp
imul
repnz
popa
and
pop
xchg
stos
xor
lret
es
push
push
test
cmp
iret
sbb
je
cmpsb
xchg
adc
xchg
push
rclb
in
dec
jge
out
mov
out
push
jg
cmpsl
ret
fcoml
dec
lea
dec
test
add
inc
sub
fwait
es
xchg
inc
xchg
inc
scas
pushf
into
cmp
imull
inc
sbb
mov
adc
scas
decb
out
sbb
movsb
mov
jmp
add
mov
movsl
std
fstpl
add
dec
cmp
sub
jg
xor
add
xchg
pop
dec
and
in
out
or
pusha
xchg
scas
dec
jne,pn
xchg
mov
call
stos
mov
xchg
out
test
mov
sarl
movsb
inc
dec
popf
xchg
jp
cmp
mov
cltd
mov
sub
das
notb
xchg
mov
sbb
in
mov
cmpsb
jae
les
scas
cmp
push
push
mov
mov
jbe
jne
cmpsb
aam
pop
mov
loopne
stos
in
scas
andps
icebp
push
aaa
or
sbb
jmp
fisubrs
and
jl
fcmovnb
mov
iret
cmp
adc
pop
insl
mov
cmc
push
xchg
or
ret
xchg
ss
jmp
adc
icebp
rcrb
fistl
inc
mov
jne
mov
es
xchg
lea
or
in
push
add
mov
inc
fisttps
mov
mov
stos
and
push
mov
sub
mov
add
pop
out
xor
dec
lcall
pusha
push
push
mov
leave
fldl
xor
sbb
cld
adc
sbb
subb
test
shrl
arpl
fidivrl
and
int
cmpb
or
mov
push
repz
lret
jae
leave
cs
out
mov
jnp
pop
cmp
adc
jno
leave
mov
ret
outsb
scas
arpl
push
dec
rcll
mov
mov
jp
test
and
test
inc
cli
mov
mov
mov
jb
adcb
and
insb
dec
sbb
imul
scas
ds
in
dec
xor
mov
adc
inc
push
out
int3
stos
lea
pop
inc
xor
inc
ret
int3
sti
jge
das
cmp
push
lahf
divl
adc
dec
mov
je
pop
inc
imul
cmp
mov
call
pop
pop
sub
cld
or
and
out
rorb
and
aad
xor
push
leave
xlat
xchg
push
das
test
push
mov
mov
dec
inc
lcall
adc
dec
lds
dec
ret
repnz
xor
pop
push
dec
add
stos
test
sbb
popf
shl
call
fs
addr16
adc
in
test
filds
mov
pop
stos
cmp
outsl
add
sbb
lcall
cmp
insb
test
jle
or
fsubr
add
ljmp
pop
pop
lds
mov
movsl
adc
sbb
enter
cmp
add
add
add
jne
lock
mov
int
pop
adc
pop
pop
jae
push
fists
xchg
dec
push
bound
testl
push
adc
adc
xchg
ljmp
add
mov
sub
dec
cmp
xor
lds
and
insl
xor
add
je
push
fs
sahf
jmp
inc
adc
clc
pop
addr16
lret
pop
arpl
pop
cmp
cmc
out
xchg
xor
jno
and
inc
clc
and
add
dec
jbe
repnz
xchg
mov
insb
int
add
cltd
pop
divl
int
popa
test
and
in
mov
add
push
adc
fmull
sub
mov
fnstcw
jge
dec
jo
movsb
mov
aas
or
mov
push
jmp
cmpsb
push
rorb
inc
cmp
fnstcw
xor
cmp
jge
jl
mov
jmp
fwait
int
pushf
pop
mov
jmp
dec
jns
inc
inc
in
mov
iret
mov
add
push
cmp
arpl
sbb
popa
int3
arpl
nop
mov
mov
mov
movsl
imul
adc
cmc
pop
jne
out
mov
pusha
push
mov
adc
ja
popa
repnz
lcall
test
xchg
cltd
or
jecxz
lret
inc
add
xor
inc
enter
or
ret
popa
xor
insl
rcl
xor
aaa
fyl2xp1
dec
addl
fstps
ret
je
jae
fisubl
mov
inc
or
xlat
sbb
xor
andl
jmp
xlat
sub
daa
clc
rcr
mov
mov
xor
sbb
sub
xor
das
inc
mov
push
adc
mov
xchg
cmpsl
dec
jle
cmp
inc
mov
xorl
call
inc
jp
xlat
inc
dec
fcomp
dec
adc
out
fdivl
jmp
mov
cs
jbe
nop
jg
jp
pop
push
inc
pop
jns
xor
pop
jp
shrb
mov
cmpsl
jge
inc
and
mov
sbb
hlt
outsl
fisttpll
cmp
outsb
or
jb
jg
loope
mov
out
rorl
js
jg
jge
sub
lods
in
pop
or
and
pop
mov
xchg
xchg
jae
cmp
mov
xor
cwtl
int3
pop
dec
das
stos
es
lods
sbb
sub
mov
pusha
cmp
call
xchg
sbb
stc
fstpt
or
mov
sahf
pop
ljmp
mov
pop
inc
add
pushw
out
jne
mov
push
pop
out
int3
daa
js
mov
rcr
xchg
push
stc
fildl
icebp
stc
sti
ljmp
jle
cs
addr16
inc
out
mov
sahf
pop
adc
lahf
push
sub
pop
push
inc
out
mov
shrl
iret
and
sub
pop
adc
push
cmp
ljmp
pop
xor
cmp
fsubp
stos
mov
sub
dec
aam
and
imulb
xchg
movsb
and
jp
inc
mov
mov
mov
icebp
or
imul
das
and
mov
xchg
fdivl
xlat
dec
pop
push
sbb
lret
jmp
mov
adc
adc
std
adc
push
in
pop
mov
xchg
fisttpl
mov
xlat
push
sub
cmp
aas
in
xchg
pop
mov
out
jle
push
or
lcall
push
lods
push
or
dec
sbb
mov
jo
imul
xchg
loopne
out
lcall
mov
push
adc
dec
mov
aam
mov
xchg
subb
or
or
test
mull
aas
xor
and
fisubrs
fwait
cmp
fdivrl
popa
add
mov
imul
cmp
aas
ja
cmp
sti
inc
faddl
pop
cmpsl
pop
repz
pusha
xchg
ss
mov
mov
lret
mov
push
inc
lahf
mov
stc
or
jp
mov
ljmp
push
stc
fwait
add
xor
cli
jbe
xlat
push
pop
cmp
mov
outsl
cmp
push
inc
mov
imul
pop
lahf
xchg
popa
mov
jae
lcall
jl
call
xor
out
pop
mov
or
jb
push
fsubs
roll
push
mulb
cwtl
jo
mov
jle
gs
sub
inc
pop
lods
add
test
sbbl
mov
pop
in
test
dec
jge
fmuls
test
imul
mov
mov
sbb
jmp
pop
repnz
push
bound
cmp
xchg
sbb
int
mov
dec
xchg
ficoms
add
cmpsl
push
imul
lahf
mov
sar
xchg
shlb
sbb
sub
sbb
sub
cmovbe
pop
in
mov
loopne
mov
sarl
xchg
pop
call
and
jnp
add
jnp
mov
sbb
sbb
adc
mov
inc
scas
imul
xchg
push
negb
xlat
push
inc
and
dec
popf
lods
fldcw
xchg
lret
out
adc
mov
jg
fs
mov
lret
gs
cmc
idivl
cmpsl
jne
in
sbb
xchg
arpl
pop
movsl
mov
push
mov
pop
out
dec
cmp
mov
shll
xchg
jl
cmp
out
nop
adc
loope
sub
mov
mov
mov
adc
loop
lds
int3
inc
cmp
mov
mov
pop
mov
inc
inc
mov
stos
lret
nop
pop
andb
cmp
mov
xchg
sti
rcll
icebp
xchg
sbb
out
lds
jl
repz
outsl
ret
xor
pop
ss
jmp
cwtl
fistpl
ss
adc
mov
push
outsb
fstl
or
repz
push
xchg
outsl
jg
cmp
adc
imul
xchg
aaa
adc
mov
movsl
in
inc
dec
out
push
xchg
dec
mov
xchg
jp
addl
aaa
aaa
mov
push
lock
inc
mov
in
out
in
outsb
out
int
jb
mov
aaa
cmpsb
cli
insl
adc
jo
push
jle
xchg
pop
cmc
jecxz
repnz
pusha
pop
jns
pusha
fstl
dec
mov
dec
hlt
into
fs
adc
or
and
dec
xchg
int
ret
cmp
and
repnz
cmp
in
bound
loope
shll
mov
clc
add
lahf
lods
jge
jno
adc
mov
lret
stos
xchg
mov
and
stos
xor
and
jns
ljmp
fwait
push
sbb
xor
pop
pusha
adc
js
clc
or
fidivl
fsubrl
xlat
rorb
mov
xor
test
dec
xchg
push
push
repnz
roll
mov
mov
gs
js
xchg
iret
mov
out
into
pop
ficoml
mov
push
std
pop
cmp
pop
xchg
xchg
aad
leave
push
cwtl
outsb
push
fs
std
dec
icebp
fidivrl
leave
std
jg
jecxz
inc
fisttpl
mov
fbstp
push
sti
inc
into
in
in
jge
push
lahf
fmul
arpl
jno
cs
xlat
je
inc
jnp
out
lds
mov
jecxz
mov
cmpsb
or
xchg
int
mov
testb
or
data16
jmp
std
push
add
dec
inc
lahf
cmp
push
add
mov
jmp
adc
xchg
mov
fcmovb
outsb
and
mov
jns
xchg
dec
inc
test
inc
sub
mov
addr16
lea
or
add
sub
lahf
mov
inc
movsl
push
sbb
mov
dec
rcrb
jmp
cmpsb
cwtl
sub
xor
aad
arpl
ss
xlat
lahf
lahf
in
xchg
je
dec
cmp
push
es
mov
in
inc
sub
add
adc
or
dec
icebp
fcmovnb
mov
movsl
lret
rcll
aam
pop
add
faddp
pop
ds
and
and
lds
orb
les
jecxz
mov
cmpl
lret
std
arpl
subb
repz
push
adc
pushw
aas
loop
jmp
xchg
sub
stc
mov
xor
stc
lea
cli
jb
push
orl
jno
into
out
mov
cld
mov
add
stos
xor
xchg
jle
mov
or
out
orb
cli
aas
in
cmp
xchg
cli
pop
push
push
push
mov
xor
mov
call
and
and
loopne
into
popf
xchg
push
fnstcw
jg
cs
insb
aas
shrb
mov
dec
dec
xor
push
add
mov
mov
repz
inc
fisttpl
push
cltd
cmp
inc
mov
mov
pop
inc
xchg
and
dec
dec
stos
ss
fs
and
imul
lock
es
and
fadd
out
ja
aam
dec
lea
mov
mov
sbb
js,pt
sbb
lret
jbe
movsb
adc
outsb
shrl
lcall
movsl
pop
inc
inc
lahf
and
int3
push
test
lahf
loopne
mov
insl
jno
push
subb
xor
dec
insl
shrl
insb
imul
shrl
add
mov
jns
fsts
insb
ret
out
mov
gs
shlb
mov
mov
loope
mov
mov
mov
std
dec
test
hlt
je
push
mov
dec
cmp
cmp
test
lahf
push
not
ficomps
jb
pop
mov
push
in
std
mov
and
jmp
movsl
mov
xchg
lods
fnstcw
jl
dec
outsl
add
jbe
jp
pushf
push
and
sub
hlt
stos
int3
xchg
pop
cmp
dec
mov
imul
sub
iret
inc
aaa
and
ret
loope
mov
push
movsl
or
rcl
ds
scas
lcall
mov
cwtl
sar
incb
fisubs
push
jg
loope
inc
and
cli
cmp
stc
push
lods
cli
mov
sub
jmp
iret
jno
push
movsl
rolw
lcall
enter
ret
mov
xchg
and
ja
inc
jmp
jecxz
sbb
jo
loop
ljmp
in
pop
push
into
mov
gs
sbb
mov
das
pop
or
adc
test
movsb
xchg
lods
icebp
cmp
dec
inc
xor
loopne
xor
clc
in
lahf
out
shrl
push
int3
adc
repz
or
scas
sbb
push
xchg
push
or
aad
add
pop
cmpsl
push
scas
int3
pshufw
je
in
mov
enter
les
aaa
ljmp
repz
jb
daa
scas
bound
xchg
rcl
add
inc
mov
jbe
add
scas
cmp
sti
divl
jbe
lahf
movsb
adc
jmp
adc
mov
sbb
es
push
fsubrs
inc
out
lret
cmp
ja
sbb
or
dec
enter
aaa
outsl
cli
mov
scas
and
cmc
scas
dec
or
pop
xchg
adc
sbb
leave
mov
out
dec
mov
rcr
iret
jne
and
rol
sub
aas
into
test
fdiv
mov
js
cmpsl
mov
dec
push
test
frstor
pop
jns
fadds
sbbl
lahf
es
ret
inc
ja
ljmp
js
inc
push
xchg
out
jnp
lds
push
or
and
dec
and
jecxz
fisubl
push
stos
fsubrl
push
or
test
out
xchg
movsl
daa
ret
xchg
lret
imul
mov
mov
jbe
fwait
in
dec
in
xchg
and
ficoms
pop
shll
pop
sub
xchg
outsl
daa
ss
bound
hlt
rcr
lahf
out
sbb
mov
jp
popf
rcrl
mov
lods
cmc
cmp
loope
out
xchg
lret
xchg
lods
add
pop
or
dec
mov
mov
shll
test
cli
mov
fldenv
mov
paddd
gs
aaa
lret
fsubs
jmp
sub
pop
lock
lret
mov
push
cmp
sar
test
xor
cmp
daa
sbb
ds
je
clc
in
xchg
cmc
fstpl
or
or
add
pop
xchg
cld
sub
push
scas
push
xchg
jmp
dec
cli
daa
insb
cmp
xchg
mov
int
push
jle
adc
pop
add
adc
sub
cmc
mov
push
dec
clc
jle
xchg
sbb
lods
add
imul
fwait
or
outsb
cmpsl
jmp
sbb
popf
ja
sub
lock
or
pop
lret
cltd
or
shlb
aad
cmp
repz
cmp
mov
push
ret
push
inc
and
ret
int3
inc
add
lods
or
lods
out
mov
int
loopne
jbe
callw
mov
mov
daa
sbb
cmp
mov
pop
pop
testl
sub
dec
fidivs
sbb
daa
mov
mov
in
jl
in
fadd
das
adc
scas
mov
out
adc
mov
imul
xor
inc
push
xchg
sbb
jno
jb
mov
jb
aaa
mov
pop
lods
loop
jecxz
xor
sub
lret
lcall
in
mov
and
bound
outsb
loopne
repnz
icebp
mov
loope
inc
bound
in
rep
jo
adc
jmp
test
xchg
or
mov
loopne
or
pop
sub
xchg
xchg
push
cmc
jnp
cmpl
hlt
mov
scas
jp
scas
shlb
add
pop
fisubs
std
out
xlat
adc
and
imul
adc
pop
add
insl
clc
mov
es
icebp
jns
mov
add
enter
daa
xchg
enter
bound
loopne
jecxz
inc
cmpsl
loopne
adc
test
cmp
movsb
fidivl
cmp
inc
pavgw
jns
ret
pushf
sbb
pop
inc
xor
movsb
notb
gs
cmp
jo
jp
pop
jo
sbb
repz
aaa
stc
scas
mov
mov
jnp
mov
ret
scas
sub
fmuls
and
mov
addb
dec
adc
mov
in
rcrb
mov
xchg
jbe
in
fstpl
repnz
test
mov
or
std
or
in
jmp
loopne
xchg
or
add
fsubl
mov
jg
loope
call
xchg
je
outsl
adc
inc
in
jg
jmp
shl
mov
fwait
notb
and
int3
orb
mov
add
cs
adc
pop
in
shrl
xchg
dec
cli
push
imul
or
inc
out
or
jecxz
int3
mov
inc
inc
bound
out
dec
iret
xorl
hlt
sahf
loopne
inc
cwtl
shrl
push
xchg
ds
out
pusha
aaa
sti
clc
add
add
push
lods
mov
inc
idivl
mov
test
xor
pop
lock
pop
test
das
and
in
into
jp
outsb
cmp
sbb
jecxz
icebp
xchg
sti
shr
jbe
inc
repnz
inc
inc
jle
pop
insl
mov
adc
push
jp
std
testl
jmp
das
jbe
pop
xchg
hlt
popa
sbb
in
or
sti
mov
inc
add
clc
rcl
jl
jg
inc
out
int3
bound
roll
cmp
lods
fdiv
pushf
pop
jnp
data16
push
jge
sbb
fstps
pop
imul
cmpl
fistpll
push
int3
sbb
pop
lds
jbe
mull
pop
lods
mov
lret
ljmp
insl
pop
sub
push
aad
iret
aaa
dec
outsb
iret
mov
comiss
cmpsb
or
cwtl
stc
mov
push
subb
in
notl
fimuls
test
mov
xchg
notb
fidivrs
rcll
or
pop
sbb
xor
xor
mov
inc
mov
add
and
pushf
sahf
imull
mov
push
mov
mov
fisubrl
mov
lret
out
iret
fwait
cmpl
pop
push
pop
insl
inc
ret
sbb
mov
xchg
in
in
dec
push
mov
mov
xchg
mov
jae
inc
mov
or
sarl
lret
inc
popf
aaa
pop
fidivs
mov
cmp
adc
mov
dec
or
fcmovu
or
dec
cmp
adc
scas
inc
fnstenv
jge
mov
mov
jo
xchg
jns
imul
mov
or
iret
or
fwait
gs
fnstcw
inc
into
jns
shll
subb
mov
js
push
pusha
loopne
fwait
push
mov
imul
pop
aaa
sbb
icebp
in
mov
inc
ljmp
push
jmp
repnz
es
flds
fmull
roll
mov
push
aas
mov
push
dec
mov
sarl
or
lods
mov
cmpb
sub
insl
aaa
pop
push
negl
pushf
in
and
dec
jae
push
stc
push
loope
mov
in
push
sbb
rcr
adc
jmp
cmc
push
adc
stc
insl
and
pop
loop
or
or
sbb
les
mov
inc
in
cmp
pop
and
push
mull
mov
adc
inc
out
adc
cmp
data16
xor
mov
das
lds
sbb
repz
fcmovb
fisubs
push
sbb
fiadds
decb
into
add
cmpsb
xchg
xor
add
pop
add
ret
addb
pop
das
mov
push
push
clc
arpl
xchg
mov
dec
mov
paddusw
cmp
xchg
add
mov
inc
push
push
lds
fdivs
adc
adc
out
xor
cmpsb
je
mov
loopne
fsubr
inc
mov
mov
fistl
les
cmp
push
push
fmuls
mov
pop
aas
jb
out
das
or
or
push
xchg
mov
mov
push
xchg
mulb
cltd
mov
lcall
mov
arpl
sbb
fidivrs
fcompl
dec
sub
pop
add
testl
aam
mov
and
lret
jecxz
mov
push
dec
cmp
sub
lret
sbb
aad
cmp
test
lods
js
fisubs
and
xor
dec
inc
mov
loopne
insb
scas
ss
inc
movsb
add
ss
mov
dec
loopne
into
mov
jo
pop
jns
rol
jne
push
test
mov
ret
rolb
and
out
add
mov
sub
add
rclb
mov
jnp
jmp
add
scas
dec
testb
lcall
imul
dec
mov
inc
insl
jns
adc
cwtl
mov
xor
clc
divb
xchg
andl
in
cmp
js
insb
cld
dec
das
rcl
pop
mov
popa
add
cmpsl
cli
pop
xor
xor
pop
cmp
lret
mov
sbb
inc
clc
cmpsl
push
pop
cli
movsb
mov
or
push
mov
cmp
pop
mov
sbb
ret
inc
push
adc
fisttps
cmp
adc
in
mov
push
decl
and
in
jge
fstpl
int
adc
jne
test
or
or
jb
jmp
mov
xchg
fsubr
lods
adc
fldz
xchg
cmp
cmc
jo
stos
das
push
jmp
jg
mov
data16
mov
sbb
lret
les
jecxz
mov
cli
in
call
jmp
jmp
jns
sbb
sub
xor
mov
push
mov
jne
mov
xchg
cmp
shl
push
inc
pop
pop
scas
lods
inc
add
pop
outsl
xchg
cltd
pop
nop
stc
movl
popa
pop
add
pop
mov
lahf
aaa
ficompl
jbe
inc
repz
ss
loope
sub
or
lea
insl
pop
and
jg
jnp
pop
aas
popf
jmp
rclb
mov
xchg
jb
fnstsw
aam
les
push
outsb
cmpsl
test
int
xor
mov
jb
cmpsl
lret
fsubs
xor
adc
fwait
jecxz
std
scas
cmpsb
mov
adc
mov
sar
and
add
mov
je
pop
add
rcr
sahf
sub
push
sbb
mov
sub
sbb
inc
mov
jg
cmpsl
push
rorb
lret
data16
pop
push
stc
std
jae
fnstcw
call
jne
jg
fs
sbb
cmp
jo
movsl
push
cli
cmpb
cmpsb
jmp
hlt
ds
mov
lods
mov
inc
push
lods
inc
loop
sub
xchg
int
xor
addr16
push
pop
bound
sub
call
add
mov
jb
push
inc
xchg
pop
pop
sbb
in
mov
cs
lods
in
test
js
lcall
loope
jb
mov
dec
sub
jo
repz
dec
clc
jl
push
cli
gs
dec
dec
jb
push
mov
pop
ret
or
add
push
lcall
mov
adc
out
mov
shlb
das
mov
inc
xor
fistl
aas
popf
imul
outsb
or
mov
loope
lret
adc
sahf
inc
mov
cmc
pop
cmpsb
xor
stc
lea
pop
adc
icebp
jge
push
add
ds
bound
pushf
lahf
aaa
inc
pop
jae
pop
data16
rol
mov
inc
sarl
sbb
dec
jo
adc
test
mov
mov
or
xchg
inc
cmpsl
icebp
add
das
xchg
push
sub
jne
movsb
insl
divps
mov
ret
xchg
sbb
dec
cltd
push
imul
sub
or
push
in
xchg
fimull
and
lahf
cli
cmp
hlt
out
stc
jg
ficomps
dec
push
jecxz
and
ret
dec
mov
inc
jecxz
xor
sarb
and
sub
sub
cmp
lods
pop
adc
ret
mov
and
jecxz
push
xor
outsb
mov
and
dec
sbb
jle
add
or
daa
js
and
cld
push
cli
add
xchg
cmpl
mov
mov
in
add
mov
sbb
pop
pause
and
pop
popa
xchg
cmpsl
mov
cmp
test
xlat
leave
frstor
pop
dec
not
adc
js
sub
dec
sub
and
add
pusha
cli
inc
lea
push
cmp
jns
cmpsb
or
cmp
mov
jno
insb
adc
xor
adc
and
outsb
pop
pop
mov
add
add
xchg
add
ret
fnstenv
mov
cmp
outsb
fisttps
call
and
mov
adc
dec
xchg
inc
add
in
icebp
in
lock
arpl
addr16
jge
ss
fists
ret
and
mov
cld
jo
data16
cs
out
daa
cmp
pop
leave
dec
xchg
test
push
or
jnp
xcrypt-cfb
ja
cmp
cmp
int
andb
js
mov
mov
sbb
lahf
enter
cmc
xor
jne
mov
mov
data16
in
push
dec
xor
stos
mov
mov
mov
or
pop
call
push
out
push
cmc
sbb
push
ds
mov
in
gs
pop
aad
push
test
cld
xchg
sub
pop
adc
lahf
arpl
mov
push
mov
fidivrl
rcrl
jae
movd
push
jl
push
cmp
loope
aad
loop
movsl
mov
jne
movsl
lcall
pop
sbb
in
aas
mov
mov
outsb
ss
jp
roll
mov
inc
or
xchg
in
mov
jns
jne
xor
and
and
push
mov
push
cmc
cmpb
fsubs
mov
test
ffreep
xor
pop
imul
insb
fists
clc
or
pop
gs
loopne
add
loop
imull
lods
mov
jo
push
cs
xchg
push
xlat
jns
xor
push
dec
mov
aas
mov
add
xchg
dec
inc
adcl
mov
sub
or
out
dec
and
loopne
movq
jb
mov
xchg
leave
jne
xor
popa
or
add
lret
xchg
lret
popa
mul
bound
adc
dec
loopne
xchg
sbb
pop
test
sub
mov
roll
negl
or
in
jbe
popf
inc
jo
cld
rcrb
push
jnp
cmpsl
lds
popa
add
movsl
arpl
loope
out
in
in
inc
lock
mov
addr16
stos
adc
jg
and
push
pop
popf
popa
or
mov
lsl
inc
movsl
adc
jmp
xor
imul
add
xchg
or
repz
pop
pushf
data16
loopne
cmpsb
mov
push
rcll
out
inc
cmp
ret
xor
push
fildl
insb
inc
das
jno
jbe
adc
jge
push
je
adcl
mov
xchg
adc
xchg
cmc
lcall
xrelease
lahf
mov
push
push
cmc
and
nop
pop
dec
subb
leave
xchg
aas
pop
push
and
mov
push
aad
les
push
xchg
mov
cmp
scas
ret
adc
dec
cmp
jo
or
daa
lods
xor
imul
mul
insl
pop
mov
push
mov
mov
ret
inc
dec
mov
or
das
cld
cwtl
jno
jb
lock
repnz
add
mov
pop
in
test
in
cmpsl
mov
jns
push
aam
and
jno
out
sbb
bound
test
and
sbb
adc
ret
ljmp
stc
cmp
pop
movsb
mov
or
mov
xchg
ret
pop
mov
in
lret
repnz
jnp
push
andl
mov
fs
loope
mov
int3
out
lahf
popf
jg
dec
pop
ss
or
in
jl
add
push
inc
add
and
repnz
adc
dec
shl
xchg
mov
push
sub
ret
xchg
mov
popa
les
je
in
add
and
inc
fmull
push
push
inc
pusha
enter
out
cmp
xchg
aaa
ret
xchg
mov
popf
inc
clc
cmp
inc
jmp
pop
cli
pop
rolb
cld
mov
xchg
daa
jp
pop
inc
sub
mov
enter
mov
sub
fstpt
pushf
in
cmp
insl
xor
das
fbstp
arpl
notb
fdivrs
fstpt
data16
leave
nop
dec
ret
mov
adc
xor
repz
jg
in
mov
scas
gs
movsb
or
cmpsl
xchg
adc
fsts
push
repz
jge
test
push
sub
rorb
adc
cmp
mov
repnz
sub
and
sub
jmp
lds
data16
int3
mov
jo
mov
ffree
lods
pop
imul
push
repnz
or
push
xlat
shl
fwait
adc
mov
out
and
loope
cld
push
dec
pop
jns
jmp
push
add
push
test
roll
xor
adc
xchg
sbb
inc
ret
in
adc
mov
les
adc
fs
push
popf
sbb
pop
dec
das
push
lock
jge
lahf
stos
cmpsl
loope
adc
adc
adcb
cmc
pop
mov
int3
xor
ja
iret
xchg
aas
and
jmp
lock
adc
dec
jecxz
clc
jbe
mov
in
out
lret
push
push
out
imul
in
cmp
adc
mov
add
mov
scas
arpl
cmp
data16
ja
popf
sbb
mov
cwtl
jecxz
cwtl
inc
jg
jmp
das
mov
mov
jbe
fcompl
cmp
loop
mov
fmull
cmc
sbb
xor
test
cmpsb
xchg
mov
push
popa
jo
mov
push
inc
sub
scas
ss
sarb
mov
dec
inc
mov
cli
gs
push
cmpl
loopne
sahf
push
push
adc
sbb
mov
pop
imul
sbb
stos
or
push
mov
lret
movsb
aas
dec
pop
stc
jbe
cmp
or
repnz
mov
cli
and
xor
addr16
rorb
mov
mov
jnp
sahf
ret
arpl
xchg
add
movsb
outsb
jae
movsb
dec
pop
sub
dec
dec
sbbb
or
cmpsl
fimuls
push
arpl
pop
xor
in
rorl
rcrl
fdivs
inc
in
sahf
aad
or
xor
push
fistps
xchg
push
mov
cmc
sub
and
jg
inc
mov
std
fsubs
andl
mov
adc
jmp
aad
daa
movsb
dec
jbe
mov
rolb
adc
in
lods
repnz
addl
jecxz
mov
insb
sub
leave
mov
sub
stc
in
mov
pop
inc
cmp
xor
pop
stc
movsb
lods
out
call
push
call
xchg
push
int
fwait
mov
addl
push
jle
dec
jbe
fs
pop
and
inc
inc
jecxz
popa
aas
push
pop
fildll
sub
xchg
scas
push
fistpl
insl
pop
outsl
nop
xchg
dec
push
cmpb
mov
daa
jnp
fiadds
jns
fists
arpl
je
into
testl
sub
push
mov
inc
inc
scas
testb
repz
stos
test
mov
mov
push
call
and
pop
out
adc
sbb
loopne
pop
jae
out
ds
test
cmpsb
or
adc
and
loop
mov
jp
ret
mov
xchg
push
xor
mov
in
cmpsl
imul
cmp
sbb
stc
mov
shll
push
dec
insb
cmc
adc
ffree
sbb
pop
mov
dec
aas
cmpsl
mov
inc
or
push
addb
xchg
lds
xor
stc
mov
or
push
scas
das
test
mov
dec
enter
cmp
mov
mov
ficompl
icebp
sub
rolb
adc
sbb
jae
xchg
xchg
lock
dec
int3
test
aaa
sub
fadd
fstpl
jbe
and
adc
cltd
pop
mov
add
mov
mov
das
popa
fisttpll
cld
stos
loopne
push
sbb
mov
sub
leave
scas
fwait
cmp
data16
addr16
in
jmp
pop
adc
or
xor
cmc
push
jns
cmpsl
mov
cmpsl
data16
out
aam
mov
add
cmp
bound
mull
add
iret
adc
and
mov
popf
in
xor
jge
sub
mov
sbb
pop
sub
out
dec
adc
mov
cmpsb
push
mov
test
inc
popf
popa
and
and
je
pop
push
xor
mov
movsb
and
lcall
xor
push
dec
add
mov
inc
aaa
add
rclb
mov
in
int3
popf
lret
inc
dec
dec
push
cli
push
mov
mov
mov
push
pop
movb
xchg
out
mov
pop
and
jp
in
jbe
std
popa
and
stos
adc
int
das
incb
subl
data16
cmpsl
xor
popf
and
das
daa
gs
add
call
cmc
repz
out
mov
repnz
mov
sti
jle
and
out
fimuls
mov
mov
push
in
sub
or
lea
jne
mov
jp
in
add
pop
adc
push
loop
push
add
mov
xchg
mov
jno
mov
cmp
cli
mov
sbb
dec
out
std
and
pop
icebp
clc
das
pop
stc
mov
ljmp
daa
sub
add
cmp
dec
sbb
push
pop
lods
jecxz
insb
icebp
ja
pop
flds
test
push
pop
add
sbb
xor
iret
or
in
xorb
insb
loopne
bound
push
bsr
sub
sbb
push
test
xchg
gs
rorl
movsl
clc
outsl
jl
lea
std
mov
adc
stos
pop
rolb
ljmp
mov
scas
sub
push
mov
adc
imul
hlt
jbe
and
cmpsb
mov
fisttpll
icebp
cmpsb
adcl
adc
dec
mov
cmp
mov
lahf
xchg
fcmovnb
adc
push
testl
pop
cmc
ror
gs
xor
xchg
adcb
repnz
xor
dec
outsl
cmp
mov
ffreep
cmp
mov
aas
loope
loope
rcrl
std
adc
nop
test
clc
mov
xor
mov
out
sarl
enter
add
dec
jmp
in
xor
push
sub
mov
popa
in
pop
jo
icebp
movsl
mov
roll
inc
cmc
in
cli
ja
inc
inc
out
lock
xor
push
test
cmp
mov
mov
add
adc
lods
lret
enter
gs
xlat
pushf
cmpsb
in
mov
cmp
xor
imul
lock
test
movsb
dec
dec
sbb
mov
shlb
xchg
xor
ss
mov
je
xor
jo
push
rorb
movsb
lret
mov
mov
ret
loop
sbb
cmp
imul
les
mov
xor
xchg
stos
push
xor
mov
js
push
leave
andl
sbb
push
cmc
movsb
std
inc
mov
sbb
inc
jmp
idivb
mov
inc
aas
imul
push
jb
inc
loop
leave
xor
test
pop
push
inc
dec
test
pop
ljmp
jo
int3
add
mov
mov
popa
inc
inc
cld
push
testl
iret
sbb
push
and
mov
or
lret
in
movsb
fs
jne
mov
shlb
fwait
mov
leave
sub
mov
push
mov
gs
sbb
sub
inc
add
fsubrl
mov
sbb
push
mov
sbb
push
popf
sub
repz
fs
push
lret
sbb
fldt
rorb
push
cmpsl
lock
nopl
ja
in
xlat
dec
imul
sbb
mov
cwtl
or
enter
or
cli
xor
and
mov
cmpsw
orl
pop
jl
cli
inc
sti
call
repz
scas
outsl
lret
bound
addr16
leave
pop
sub
or
dec
adc
cmp
xchg
lods
mov
xor
out
out
test
add
call
jmp
jns
or
fiadds
mov
gs
popa
pop
in
cvtdq2ps
cwtl
dec
xchg
pusha
aad
pop
ljmp
subb
shr
insb
mov
dec
sub
adc
inc
rcrl
fnstenv
aam
loope
out
jmp
or
int3
jl
dec
cmpsl
popa
dec
jle
xchg
bound
mov
mov
sbb
gs
push
pop
bsr
add
bswap
cmpsl
cmc
cmp
shlb
scas
mov
and
pcmpeqw
or
fs
jne
sbb
and
inc
or
dec
ficomps
das
aad
pusha
add
insl
sbb
add
adc
inc
mov
lret
insb
arpl
mov
insl
sbb
or
mov
mov
jecxz
cmpsb
ja
movsl
les
scas
add
stc
add
adc
push
add
scas
add
sub
adc
sub
adc
adc
jb
dec
fs
aad
pop
cld
mull
and
imul
mov
mov
je
ret
mov
xchg
mov
std
sbbl
sub
out
xchg
mov
test
dec
mov
mov
pop
jo
and
xchg
das
lcall
popf
pop
push
aas
and
mov
adc
fistpl
sbb
or
cli
or
mov
push
adc
adc
push
mov
mov
lcall
xor
mov
xchg
out
push
repnz
arpl
push
xchg
ds
adcb
lret
mov
movzwl
pop
dec
dec
push
inc
add
mov
or
lea
imul
sub
dec
add
dec
sub
lea
imul
inc
call
inc
dec
sub
sub
lea
movzwl
dec
dec
inc
inc
xor
lea
imul
dec
add
dec
sub
add
lea
mov
inc
add
dec
dec
call
xor
lea
imul
inc
call
sub
dec
add
xor
call
lea
push
mov
inc
dec
dec
add
call
sub
lea
mov
dec
dec
inc
call
inc
pop
sub
lea
add
dec
pop
dec
dec
pop
inc
xor
lea
mov
pop
add
inc
dec
sub
xor
lea
movswl
add
pop
dec
inc
pop
dec
sub
mov
lea
mov
call
inc
dec
inc
add
ret
and
lea
push
mov
add
push
inc
add
push
sub
add
push
lea
mov
push
dec
sub
mov
dec
inc
push
add
ret
push
lea
push
imul
inc
push
dec
inc
push
sub
add
lea
mov
push
inc
inc
sub
call
inc
and
lea
mov
inc
inc
inc
inc
sub
lea
imul
inc
inc
dec
jmp
dec
mov
sub
inc
movzbl
xor
lea
imul
inc
add
inc
inc
add
dec
xor
movzbl
lea
imul
dec
add
inc
inc
sub
lea
inc
mov
inc
mov
sub
dec
inc
sub
lea
imul
cmp
jb
inc
xor
inc
inc
mov
inc
sub
mov
lea
mov
inc
inc
add
inc
inc
sub
lea
mov
inc
cmp
jb
inc
mov
dec
dec
xor
add
lea
xor
movsbl
sub
pop
dec
dec
test
jbe
sub
add
lea
imul
dec
inc
inc
inc
xor
lea
mov
add
dec
inc
dec
and
lea
inc
movzbl
dec
dec
inc
dec
add
and
lea
mov
mov
dec
inc
movzbl
inc
dec
add
sub
lea
and
mov
inc
mov
dec
dec
mov
dec
or
mov
lea
movzwl
mov
inc
sub
dec
add
or
lea
dec
jne
mov
mov
inc
inc
add
add
and
lea
mov
dec
add
dec
mov
inc
sub
lea
mov
inc
dec
add
sub
mov
xor
lea
test
jbe
mov
dec
inc
inc
add
xor
lea
mov
inc
inc
dec
dec
and
lea
mov
inc
inc
sub
add
sub
sub
lea
and
movsbl
add
mov
dec
inc
movzbl
add
sub
add
lea
movsbl
and
dec
jmp
dec
or
lea
mov
inc
add
pop
ret
push
inc
inc
or
lea
mov
sub
inc
sub
sub
add
push
and
lea
push
mov
dec
push
sub
inc
push
add
and
lea
imul
inc
inc
inc
dec
or
lea
mov
inc
inc
inc
inc
or
lea
mov
inc
call
call
add
dec
inc
and
lea
movswl
inc
add
inc
inc
xor
lea
movswl
dec
dec
dec
sub
and
lea
movswl
add
sub
inc
inc
xor
lea
mov
cmp
je
inc
inc
dec
inc
or
lea
mov
inc
inc
inc
dec
and
lea
movzbl
add
inc
sub
dec
or
lea
movsbl
inc
inc
dec
inc
xor
lea
movswl
dec
dec
dec
dec
add
lea
mov
inc
add
dec
inc
or
lea
imul
inc
add
sub
sub
and
lea
imul
dec
dec
add
add
add
lea
ret
mov
inc
pop
dec
ret
push
inc
mov
dec
add
push
lea
mov
add
dec
sub
push
dec
push
dec
push
and
lea
push
imul
jmp
call
add
inc
sub
push
sub
and
xor
lea
mov
mov
mov
inc
dec
mov
sub
dec
test
je
and
lea
mov
inc
dec
add
dec
and
lea
mov
mov
add
mov
dec
inc
dec
or
repnz
lea
mov
add
inc
jmp
inc
sub
inc
or
lea
mov
inc
inc
dec
inc
pop
pop
ret
push
add
lea
movswl
inc
add
dec
add
sub
lea
imul
dec
inc
sub
dec
and
lea
mov
inc
inc
inc
dec
add
lea
mov
inc
inc
inc
dec
pop
ret
sub
xor
mov
lea
mov
mov
inc
dec
mov
dec
inc
mov
or
lea
xor
mov
dec
mov
dec
add
inc
sub
sub
lea
mov
inc
sub
cmp
jb
add
push
add
xor
push
lea
mov
push
inc
dec
mov
add
inc
xor
xor
lea
xor
movzbl
add
xor
inc
inc
push
dec
or
xor
lea
mov
mov
dec
jmp
mov
lcall
push
sbb
adc
cmpsb
inc
sub
js
cmp
outsl
fsub
mov
dec
arpl
insl
sub
pusha
xrelease
mov
subl
imul
int
ljmp
insb
add
fisubl
movsl
jnp
add
push
cmpsb
call
call
rorb
jmp
push
cmpsb
push
bound
popf
insb
xchg
sarl
inc
inc
pushf
push
loope
pop
add
shll
adc
add
insl
popa
cmp
jp
insl
and
push
inc
fbld
cltd
lock
inc
not
inc
repz
adc
and
testb
lds
bound
push
jecxz
mov
mov
cmp
fmuls
pop
jb
loop
fxch
ret
inc
andl
or
or
sub
fwait
xchg
fldl
add
ret
dec
pusha
out
sub
add
ret
out
enter
fistpl
lds
insb
jno
in
push
push
cmp
or
push
out
inc
ja
dec
cmp
or
push
data16
out
push
push
scas
clc
cld
cmpsl
jnp
adc
fnstcw
and
jmp
adc
fwait
aas
loop
cmpb
in
pop
pop
add
mov
and
pop
xchg
pop
pop
mov
out
sbb
dec
mov
jb
inc
lods
and
mov
mov
ret
jp
jno
into
adc
iret
hlt
inc
std
cli
scas
xchg
mov
xor
xchg
aaa
jbe
dec
cmp
xchg
adc
sbb
out
sbb
jl
xor
rcr
icebp
outsb
into
dec
cwtl
fwait
or
xor
shll
sbb
stos
nop
rcr
pop
scas
xor
mov
clc
push
popa
into
mov
fimuls
out
inc
adc
icebp
test
pop
mov
sbb
insl
data16
mov
in
push
sub
push
int
jno
dec
dec
and
sub
inc
sahf
adc
je
inc
in
movsb
sub
jge
push
pop
xor
xchg
jge
fdivrs
stc
and
das
popa
rol
sub
roll
cmp
cmp
mov
cmpsb
add
mov
inc
mov
roll
cld
es
test
imul
dec
adc
xchg
mov
int3
mov
int
mov
outsl
in
mov
int
mov
ja
and
mov
jmp
test
popf
loope
adc
xor
jmp
push
adc
leave
mov
jge
ret
ljmp
push
nop
push
push
call
iret
and
cli
pop
pop
inc
jbe
cmp
sub
in
in
pop
cmc
pop
pushl
sub
xchg
loop
xor
push
ss
scas
inc
in
jne
mov
adc
cltd
out
cs
iret
and
mov
lock
repnz
in
and
out
lret
adc
test
das
push
js
sti
cld
pop
lea
mov
xor
pop
jg
inc
movsb
pop
int
mov
push
inc
mov
push
test
inc
in
pop
mov
cmc
scas
jb
adc
cmp
movsl
mov
lock
jg
fstpt
repnz
jns
push
mov
mull
push
mov
int
sbb
push
loope
jge
sub
mov
icebp
fld
lea
fidivl
xchg
cmp
stos
fincstp
sbb
and
xchg
adc
xchg
lea
fs
pop
popf
sbb
mov
rcrb
mov
and
sarl
imul
jg
shr
jne
je
stos
bswap
hlt
inc
gs
out
or
sub
push
xchg
outsl
test
scas
out
hlt
cld
scas
popa
enter
std
and
es
lock
pop
xchg
jne
fcmovbe
sti
or
adc
jmp
shlb
mov
inc
xchg
jb
rolb
adc
ss
sub
aad
xor
popa
roll
jno
imul
jmp
test
enter
mov
bound
in
nop
imul
rol
ss
popa
jecxz
mov
mull
jmp
add
push
sub
mov
data16
push
cmpsb
push
sbbl
fnsave
push
loop
jae
sub
fstpt
xchg
and
add
les
push
pop
jne
stos
mov
rcll
cmp
out
movsb
mov
jmp
jo
lock
jo
iret
push
rep
imul
sti
and
jno
imull
xor
jno
cmpsl
mov
scas
or
sbb
sub
xlat
jg
ja
sarl
pop
test
push
inc
and
popf
repz
sub
push
lods
js
aas
add
cltd
sub
dec
je
xor
mov
jle
cmp
mov
mov
rcl
mov
js
ret
and
in
ds
das
add
int3
dec
add
adc
inc
mov
adc
mov
mov
sub
pop
mov
dec
dec
pop
jne
rcrb
int
dec
imul
pop
push
cmp
mov
fstl
and
imul
cld
test
not
mov
pop
mov
mov
pop
out
out
stos
stos
cmp
sahf
aam
es
dec
icebp
es
test
lods
in
incl
inc
inc
pop
pop
jnp
or
sbb
cmp
sbbb
xor
xchg
in
mov
enter
adc
mov
dec
leave
mov
ret
xchg
test
fs
jb
mov
mov
jo
repnz
je
mov
add
cld
or
mov
mov
lret
popa
mov
pop
out
fcoms
xchg
shlb
sbb
or
mov
rcl
ficoms
jmp
jne
dec
add
add
push
xchg
or
fidivs
adc
lret
lret
mov
lahf
xchg
cmp
push
mov
rcll
arpl
subb
clc
fsubr
ljmp
or
mov
jl,pt
fildl
xor
mov
mov
push
push
pop
pushf
xlat
push
add
xchg
nop
or
stos
adcb
incb
push
inc
sbbb
sarb
shll
mov
sub
ret
dec
add
xor
lret
mov
xor
lods
jle
inc
arpl
or
mov
pusha
pop
mov
xor
sti
test
arpl
mov
dec
jnp
iret
adc
adc
out
cmp
mov
insb
jge
insb
pop
mov
aas
and
ja
jle
fs
mov
pop
lea
insb
enter
in
cmpsb
cmp
imul
mov
add
lea
addr16
iret
adc
fsubs
adc
jg
mov
push
lahf
mov
add
rol
pusha
mov
xor
push
mov
icebp
cs
hlt
xchg
test
mov
xchg
mov
dec
dec
ret
fidivrs
incl
lock
dec
call
mov
test
mov
addl
das
mov
pop
mov
cmp
or
mov
pusha
fisttpll
sbb
in
flds
lods
push
xor
push
inc
adc
insb
inc
out
movsb
sub
jae
adc
daa
sbb
mov
jno
xchg
orb
dec
jbe
in
or
mov
dec
lea
lods
lds
fwait
js
pop
jno
jo
mov
push
xor
mov
cmp
lret
hlt
mov
bound
push
lahf
or
pop
subl
pop
test
in
cmp
pop
xor
fsubrp
loopne
negb
call
cmp
stos
pushl
or
in
jp
test
adc
bound
dec
je
xorl
popf
mov
xchg
push
int
icebp
loopne
dec
orl
or
dec
out
mov
xchg
jns
aam
subb
lcall
xchg
mov
maxps
aam
or
cmp
xor
popf
out
or
clc
cltd
sub
sub
stc
sbb
outsb
scas
fsqrt
mov
fisttps
pop
js
or
xor
ja
mov
arpl
movsl
mov
sbb
xchg
jmp
sti
ljmp
mov
adcl
aas
cmp
gs
add
mov
dec
jge
jg
lods
int3
dec
sbb
pop
cmp
xchg
fdivrp
int3
mov
daa
pusha
daa
xchg
jge
cmp
cmp
jo
xlat
sub
jne
jbe
ja
jl
add
pop
aad
sbbb
pop
stos
insl
sbb
jmp
add
outsl
add
mov
popf
dec
test
xchg
lret
popa
cs
ret
xchg
jmp
jecxz
aas
xchg
das
rcr
addr16
push
cmp
lods
mov
shlb
outsb
scas
pop
adc
jge
sub
test
shrl
pop
mov
leave
inc
cmp
sub
repz
bt
mov
adc
and
pushf
addb
stc
out
jmp
rorb
scas
mov
adc
push
cmp
les
jp
add
sub
mov
test
in
cli
or
ret
push
mov
lret
dec
add
xchg
and
or
nop
adc
fsubs
mov
jecxz
inc
orl
pop
test
xor
pop
cli
cwtl
out
repnz
jg
xor
mov
sub
repz
cmp
iret
scas
mov
loop
mov
fnstsw
std
inc
addr16
jns
pop
jge
rcl
stos
sbb
pop
xchg
out
jne
cmp
dec
mov
pop
call
dec
mov
mov
shl
push
lahf
push
idiv
clc
fsubr
fsubl
add
mov
cwtl
popf
je
aaa
sbb
cmpsl
lret
adc
loopne
mov
mov
cld
jl
mov
cs
addr16
les
mov
lcall
jge
cmp
shl
daa
aas
dec
loopne
xchg
daa
movsl
out
add
out
push
mov
dec
fdivrs
push
mov
lret
testl
ljmp
push
xor
sbb
pop
adc
push
mov
call
jb
mov
outsl
scas
sti
test
aaa
mov
jno
scas
adc
int
ja
jno
lods
sub
int3
subl
adc
mov
cmp
dec
ret
inc
imul
push
pop
mov
dec
and
bound
mov
xor
inc
shll
fsubrl
xor
xchg
dec
mov
test
rcrb
test
dec
mov
mov
mov
mov
dec
cmp
jb
jle
add
stos
hlt
add
popa
andl
adc
das
cmpsb
xchg
shr
test
mov
hlt
stc
fs
mov
cmpsl
aam
enter
inc
sbb
jb
add
push
test
and
sub
mov
mov
cwtl
mov
fsubs
mov
je
mov
or
and
sub
icebp
pushf
vcvtss2sd
dec
movsl
adc
xchg
jnp
data16
add
jg
lods
cs
pop
sbb
addl
arpl
push
pop
fldenv
std
fisubs
xchg
xchg
push
pop
dec
add
std
hlt
xor
or
inc
pop
jb
cs
push
xor
cmp
insl
scas
ret
mov
mov
sub
das
xchg
jl
mov
loop
imul
fwait
adc
mov
xchg
mov
mov
fmull
scas
jl
hlt
xchg
out
scas
jecxz
loope
nop
jp
fcmovb
test
cmp
sbb
push
inc
jns
scas
int
add
cmp
mov
adc
movsl
jl
mov
sbb
outsb
scas
fsubs
xchg
aam
addb
push
lds
test
push
mov
cmp
pop
push
jbe
mov
nop
es
xchg
or
out
data16
lea
fimull
cltd
fidivs
add
xchg
fiaddl
pop
jae
ds
shll
jnp
sbb
push
jne
inc
lahf
adc
cmp
mov
ja
mov
cmc
push
adc
inc
mov
test
inc
lret
xchg
outsl
lret
ficompl
mov
mov
push
pop
inc
jno
cmpsb
mov
ret
in
inc
loop
sbb
inc
or
mov
insl
gs
sub
cmc
add
test
fldcw
cmpb
xchg
xchg
xchg
sub
ficomps
out
adcb
add
imul
jo
lret
insl
sbb
rcrl
cmp
lds
call
aam
adc
cmp
movsl
fisttps
sarl
lret
xor
sub
mov
mov
dec
dec
faddp
mov
pop
dec
mov
sbb
jno
int
loope
es
mov
mov
popf
repnz
sbb
das
inc
enter
jns
arpl
and
xor
dec
cmp
es
add
ret
subl
pop
cli
jl
xor
mov
xchg
addl
add
add
push
jmp
pop
repnz
sub
fwait
xchg
or
and
test
test
pop
shlb
inc
dec
enter
xor
mov
out
cmpsl
sbb
test
enter
mov
pop
bound
out
popf
pop
sbb
notb
jno
xor
add
mov
cmp
push
cltd
mov
leave
repz
lds
push
lcall
daa
enter
xchg
ss
adc
adc
hlt
arpl
pop
mov
loopne
addr16
xor
adc
lret
sub
push
pop
pushf
in
aad
sbb
cmp
dec
ret
das
or
hlt
sarb
jge
test
mov
cli
repnz
into
mov
push
sbb
dec
xor
ljmp
sbb
push
mov
mov
rcrb
test
and
loopne
or
ja
adc
pop
cmpsb
pop
jmp
negb
or
outsl
enter
mov
in
mov
in
mov
jne
xchg
and
mov
sub
add
pop
xlat
test
sbb
mov
mov
test
push
scas
add
rcrl
mov
pop
inc
inc
adc
negb
inc
in
fs
test
lret
xor
inc
lret
ljmp
xor
mov
repz
popf
outsl
jle
mov
push
pusha
movsb
leave
pop
cld
xchg
dec
test
mov
xlat
fincstp
mov
inc
out
push
lahf
movsl
inc
mov
lods
scas
lcall
repnz
mov
cmp
hlt
inc
jl
lcall
out
mov
arpl
ja
imul
je
sbb
mov
and
cmp
loop
jecxz
sbb
sti
add
inc
mov
cltd
or
mov
and
ret
aad
popa
fst
mov
sub
xor
cmp
dec
mov
das
arpl
inc
sbb
mov
test
lret
pop
mov
inc
aad
in
push
mov
or
push
mov
out
es
jmp
dec
push
pop
push
loop
push
xchg
cmp
fcompl
cmp
dec
rclb
cmp
and
dec
stos
mov
in
or
xchg
xor
adc
aam
pushf
lret
mov
or
pop
mov
test
xchg
cmp
or
adc
aad
pushf
and
adc
fisubl
mov
rorl
addl
add
clc
loopne
push
sbb
loop
and
je
mov
cld
imul
in
push
popa
lods
cwtl
and
xchg
mov
push
xlat
inc
js
xchg
lret
test
test
lret
stos
lcall
mov
mov
aas
in
arpl
sbb
in
mov
jmp
dec
cltd
pusha
les
popf
imul
jb
scas
jl
jmp
jg
mov
inc
fsubs
aas
xchg
jbe
sub
add
mov
in
mov
sbbb
in
cwtl
aas
push
cmpsl
sub
outsb
cmp
andl
neg
cmp
inc
or
mov
outsb
imul
mov
push
scas
loope
dec
imul
sub
repz
into
jns
mov
cmpb
int3
repz
xchg
pop
mov
cli
pop
divb
push
add
cmc
js
cmp
xlat
or
sub
daa
jbe
in
mov
fldl
movsl
jl,pn
nop
jl
cmp
je
out
cld
imul
das
imul
mov
adcb
sbb
xlat
insb
xchg
fcoml
dec
in
xchg
xor
or
mov
pop
adc
adc
je
mov
adc
xor
inc
adc
inc
mov
xor
into
push
adc
xchg
mov
cmp
mov
lret
cli
fimull
iret
jmp
sub
inc
jecxz
xchg
insb
sbb
scas
cmp
or
jmp
mov
out
ret
cmp
mov
mov
aas
ret
inc
pop
and
jg
jp
mov
popf
adc
std
movsl
and
adc
jle
adc
xor
je
sbb
jnp
xchg
imul
shrb
add
jmp
call
push
sub
and
movsb
or
and
push
push
icebp
loope
jnp
test
daa
mov
inc
sbb
arpl
adc
cmp
in
aam
mov
mov
xor
mov
lods
cmp
fistl
jp
shlb
or
pop
jecxz
mov
sub
in
dec
repz
nop
or
mov
hlt
and
xchg
mov
rcrl
fldenv
xor
cmpsb
dec
fbstp
pushf
enter
push
jp
jb
mov
xor
mov
cmp
test
outsb
mov
mov
mov
ret
cmp
in
push
jne
and
clc
cwtl
mov
xor
fs
mov
dec
fdivr
or
ss
add
scas
mov
or
push
pop
movsb
add
pusha
in
es
jo
imul
mov
dec
sbb
call
mov
adc
jne
mov
mov
xchg
shll
jmp
les
dec
sbb
mov
xchg
cmp
adc
addr16
aas
jge
pop
shr
fldcw
xchg
pop
add
jmp
pop
rclb
adc
xchg
fbld
sarb
leave
pop
pop
sbb
inc
xchg
das
mov
sub
movsl
jecxz
push
pushl
add
js
lret
andb
jnp
xor
adc
daa
pop
sbb
mov
loopne
mov
aad
add
bound
loopne
in
incb
lret
repz
and
fwait
arpl
dec
lock
fldenv
idiv
jmp
pop
and
sub
inc
adc
lock
push
mov
adc
ja
mov
jmp
in
sbb
push
and
popf
scas
pop
movsb
and
mov
dec
adc
pusha
scas
sar
imul
fs
dec
and
iret
in
data16
sbb
dec
in
jg
inc
xor
ljmp
jp
push
inc
fldl
movhps
pop
mov
jg
pop
lcall
mov
fmull
decb
mov
jo
cld
js
xchg
cmpsb
xchg
jbe
out
cs
mov
mov
pop
add
add
jns
and
xor
xor
js
out
fildll
pop
sub
bound
sbb
loop,pt
mov
int3
adc
xchg
faddl
mov
aad
gs
and
outsl
sbb
mov
pop
mov
fcomps
js
pop
ds
cmp
dec
out
outsb
and
mov
fmull
or
inc
xchg
movsb
jnp
xor
mov
jae
and
scas
and
sbb
mov
loop
js
pop
jg
cli
dec
cli
outsb
mov
mov
popf
pop
mov
imul
push
call
xor
mov
jb
mov
test
push
daa
cmp
cmc
and
push
hlt
scas
std
call
stc
mov
xchg
mov
pop
test
xchg
lds
push
je
push
fcomip
es
fildl
aas
in
mov
sarl
or
in
xchg
decb
shll
add
les
ror
pop
and
jg
in
lcall
dec
cmp
jp
hlt
jl
shr
in
inc
dec
and
fcos
mov
pop
movsw
xchg
cmp
or
adc
mov
dec
out
inc
and
icebp
test
sbb
xchg
in
mov
mov
rcrb
sti
rorl
loop
mov
xchg
xor
std
movsb
jo
dec
ljmp
xchg
mov
mov
fs
jl
jb
pushf
rclb
inc
repz
mov
das
fs
adc
test
and
xchg
push
pusha
mov
push
jnp
test
push
pop
mov
fcmovnb
adcl
loop
inc
les
jp
mov
aad
or
stos
push
cmp
fst
cs
add
aam
arpl
mov
jnp
and
pop
mov
dec
mov
cmpsb
and
pop
fnsave
sub
cmp
insb
inc
ret
js
and
or
xchg
jp
and
mov
stos
stos
mov
std
mov
loope
lds
sub
ljmp
mov
pop
test
or
pop
loop
iret
add
negl
cmp
add
hlt
aaa
and
jp
insb
and
gs
fwait
mov
mov
push
lcall
cld
jl
cmpsl
cltd
icebp
dec
add
iret
xchg
jecxz
mov
out
shll
test
cld
jmp
roll
xchg
pop
lret
mov
push
mov
mov
add
sti
push
pushf
clc
add
lock
pop
xor
fildl
stos
add
xacquire
int
jbe
xor
mov
pop
repz
sbb
lcall
mov
adc
push
lret
pushf
out
pop
and
or
shlb
cmpl
movb
sahf
mov
sbb
cmp
adc
sub
stos
rol
inc
mov
int
insl
scas
push
call
xor
inc
cmp
jecxz
mov
inc
arpl
jmp
sub
inc
aas
mov
xchg
sub
jmp
outsb
lods
icebp
or
cli
cmpsb
lods
cmp
fbld
std
push
inc
or
jecxz
loope
outsb
xchg
push
pop
push
roll
ret
xor
fst
inc
mov
mov
daa
call
mov
cmp
sub
int3
popa
out
push
add
cmp
out
fptan
fldcw
outsl
test
xchg
dec
jmp
aaa
adc
subl
dec
nop
add
cmp
xchg
int3
dec
inc
dec
and
aad
jns
add
mov
vcvtsi2ssl
sub
adc
xchg
add
notl
sbb
fimuls
push
test
ss
fldl
out
sbb
rcll
in
xor
es
lahf
loope
sub
xor
scas
push
lock
daa
xor
mov
ljmp
and
scas
and
jae
fs
mov
in
jp
lods
sub
aam
push
cmp
mov
lret
int3
jl
cmp
xor
in
adc
subl
int3
movsl
lock
rcl
xchg
aad
insl
sbb
cltd
xchg
mov
fldlg2
adc
inc
jno
dec
fidivs
cmp
stc
stos
mov
stos
fnsave
movsb
das
jle
and
mov
or
cmp
jl
subb
hlt
or
jae
pop
pusha
pop
jge
xchg
sub
xor
xchg
dec
repz
add
roll
rcr
adcb
dec
adc
cmc
xor
scas
jl
mov
mov
inc
ljmp
dec
daa
jmp
repnz
nop
inc
xor
in
test
and
pop
iret
and
or
or
out
stos
lock
cmpl
das
stc
lahf
adc
rclb
cmp
mov
in
inc
fnstenv
dec
imul
xchg
mov
repz
call
mov
pop
cmp
das
inc
and
and
and
jno
aam
dec
testb
test
test
test
out
inc
xchg
ret
ret
xor
aad
idivl
orl
hlt
dec
adc
xchg
test
loopne
jnp
mov
mov
jg
mov
jg
and
fsubrp
in
imul
loopne
sbb
jnp
test
xlat
sti
and
xchg
dec
pop
jb
add
add
jg
insl
adc
inc
xor
jp
aaa
dec
cltd
jbe
test
mov
mov
sbb
jbe
jo
arpl
mov
adc
mov
notl
xor
cltd
push
pop
popa
mov
mov
mov
lret
out
cmc
cmc
fnsave
orl
xchg
outsb
call
adc
sbb
stos
ret
pop
jecxz
shrb
push
test
mov
push
mov
ret
xchg
je
lcall
jns
ss
xlat
incl
cltd
push
sbb
jo
xor
mov
mov
dec
xchg
mov
add
daa
stc
add
pushf
pop
in
add
aam
xor
add
rcll
out
repz
les
pop
or
fs
scas
mov
lret
lods
es
mov
mov
jbe
mov
pop
mov
adc
mov
xchg
sbb
nop
and
mov
std
push
mov
jno
enter
std
cmpsl
gs
fimull
push
or
dec
push
insl
xor
inc
loopne
outsl
sbbl
repz
mov
popa
adc
mov
jnp
jp
dec
or
pushf
push
jo
popl
sub
or
cmp
adc
dec
arpl
xor
dec
xchg
xchg
leave
or
lds
rorb
aam
push
xlat
sbb
cwtl
loope
std
pushf
jbe
in
inc
push
xchg
add
mov
adc
popa
outsl
mov
adc
lock
jns
sub
popa
ja
jb
mov
xor
xor
dec
xchg
sub
fadd
push
add
inc
pop
add
cmp
fwait
sbb
push
or
fnstsw
lods
popf
sbb
push
ss
out
jecxz
mov
xchg
xchg
out
out
cld
lea
or
sub
jmp
sarl
test
clc
jb
cmpsb
dec
push
xchg
jmp
sub
loopne
xor
jne
lcall
int3
pop
fdivrs
jecxz
lahf
or
push
popf
cwtl
test
xor
lods
jl
outsl
inc
rcrl
mov
sbb
push
bnd
pop
enter
pop
jge
mov
add
add
rol
outsl
mov
adc
push
dec
dec
ror
sbb
sarb
cli
test
cmp
mov
pop
gs
push
dec
loope
mov
daa
xor
mov
xchg
fdivrl
xchg
pop
ret
shrl
sbbl
pop
fwait
test
lods
push
sbb
les
pop
mov
ss
inc
add
xchg
push
imul
sarb
pop
inc
mov
cmc
mov
movsb
lock
leave
stc
sub
and
div
mov
imul
movsb
jb
fwait
jmp
lret
pop
fmull
mov
fs
mov
sub
cltd
sbb
loope
roll
xchg
jp
xchg
adc
das
dec
and
ret
jns
dec
cmp
lret
inc
mov
clc
pop
sub
mov
jo
stc
in
addl
xor
ret
enter
pushf
gs
ds
sub
push
and
mov
add
pushf
push
and
inc
jo
rolb
rclb
es
call
cli
push
push
subb
xor
mov
xor
mov
sti
fstp
int3
fs
test
daa
inc
and
push
shlb
arpl
cmp
cs
jecxz
je
cmc
test
xchg
or
adc
loope
shl
popl
and
and
dec
int3
cmp
lret
test
push
popa
push
movsb
scas
lods
fdiv
dec
les
sub
and
inc
repnz
sti
stc
jbe
inc
add
pop
xchg
outsb
nop
adc
cmp
add
clc
jp
jne
decb
jecxz
fisttpl
inc
mov
or
cld
mov
mov
mov
test
adc
jnp
daa
int3
or
push
sbb
jmp
lea
mov
jmp
cmp
mov
push
inc
dec
pushl
sbbb
cmp
aas
xchg
stc
cmp
fadd
jmp
and
xchg
lods
sub
adc
jl
frstor
dec
stc
fdivr
add
lea
ja
shll
cltd
push
aad
mov
adc
cmp
xor
cmc
mov
mov
push
int3
out
xchg
adc
xorb
mov
push
and
push
pop
loop
cmpsl
ss
inc
push
frstor
test
pop
pop
xor
rorl
inc
mov
cmp
aaa
fs
xchg
sub
jae
ffreep
xlat
fs
hlt
aaa
fmul
adc
je
xchg
mov
xchg
lret
and
mov
push
fstpt
in
mov
sub
pushl
pop
inc
mov
push
in
dec
or
adc
jle
jne
sub
jp
add
fisubrl
or
pop
std
clc
sub
cltd
leave
inc
xor
repnz
arpl
sbb
lea
push
cmp
and
ret
mov
add
daa
fsubs
mov
push
sub
ficoms
out
dec
fiadds
popa
test
ret
cs
in
mov
xor
into
ljmp
pushl
cmp
arpl
lods
popf
xlat
sub
lcall
mov
aad
mov
push
mov
adc
shlb
pop
pop
push
imul
cmpsl
enter
jg
test
bound
sbb
push
push
mov
shll
int3
jmp
lock
mov
and
divb
loope
ja
mov
scas
sub
ja
push
xor
or
cmpsl
ja,pt
mov
rol
mov
and
cs
mov
xchg
or
cltd
mov
push
push
loope
adc
cmp
mov
clc
or
dec
out
push
subl
int
mov
mov
and
jbe
insb
out
leave
bound
push
mov
inc
push
cmp
xchg
pop
test
and
dec
pop
mov
pop
mov
roll
mov
push
lods
int
mov
dec
dec
fisttpll
or
aam
sub
aad
aam
jmp
push
xor
scas
sbb
out
mov
push
stc
jo
and
cld
in
repnz
push
inc
aaa
pop
mov
icebp
stos
xchg
adc
out
xchg
lcall
ds
push
lods
add
mov
push
pop
and
andb
mov
jne
push
mov
xchg
ds
jbe
dec
imul
dec
in
in
stos
cmp
div
stc
shll
cmp
imul
xchg
mov
mov
xchg
jbe
pop
jae
rorl
test
roll
scas
xor
shll
cmpsl
fidivs
add
jl
adc
in
mov
jecxz
push
imul
jae
ret
rorb
sbb
imul
fwait
mov
xchg
movsl
sub
shll
adc
test
pop
inc
out
dec
imul
jbe
cmp
add
xchg
repz
imul
cmc
pop
jge
or
jmp
jl
mov
mov
mov
jecxz
inc
mov
sahf
test
mov
add
out
mov
call
inc
scas
sbb
jb
cmp
stos
lods
mov
in
add
xor
adc
out
shrl
inc
out
out
inc
fcoms
xchg
or
into
push
fiadds
mov
jae
sbb
xchg
xor
les
fcomps
cli
pop
es
in
pop
xor
cmp
loope
add
and
out
mov
sbb
nop
imulb
stos
adc
push
insl
movsb
orl
pop
movsb
or
or
and
fnstenv
pusha
gs
test
test
lods
push
sbb
add
adc
mov
xchg
ljmp
incb
push
stos
inc
js
jo
cmp
or
push
xchg
insb
jns
mov
loop
and
and
adc
aam
mov
std
push
nop
add
addl
out
insb
cli
mov
pop
int
ret
ss
adc
push
pop
mov
sub
cmpsb
out
arpl
cmp
inc
into
clc
mov
sub
fstps
ds
cli
fistpl
insl
les
and
push
or
dec
sarl
sub
xchg
jmp
adc
movsl
std
pop
mov
cmp
out
mov
push
cmc
into
xchg
lcall
mov
call
xor
jle
imul
movsl
and
jo
pop
hlt
sbb
idivb
push
mov
mov
mov
mov
push
fidivrs
scas
scas
and
fcoml
add
je
jle
addl
mov
adc
gs
fcmovu
cmpsl
sbb
addr16
mov
mov
adc
jae
sub
shll
dec
jle
nop
inc
je
or
xor
sub
insb
sub
cltd
ret
rcrb
mov
jp
int3
lahf
ja
loopne
add
mov
adcb
sub
adc
scas
aas
enter
dec
loop
lcall
in
sub
jmp
les
int3
push
int3
cmp
pop
enter
mov
lcall
scas
jo
bound
xchg
xchg
xchg
jg
and
jb
repz
sub
add
pop
aad
xor
scas
sub
or
mov
stos
iret
and
pusha
imul
pop
into
push
inc
std
xchg
rorb
xor
jnp
fiadds
dec
pushf
or
mov
or
test
les
push
pop
cld
fs
shrl
bound
repz
ret
push
mov
aad
and
sub
sarb
je
push
data16
cmp
inc
or
jecxz
xor
fdivrs
lods
or
add
pop
push
fwait
sub
out
arpl
xor
sbb
test
sbb
gs
or
mov
sub
stc
inc
das
aam
dec
push
mov
pusha
popf
cmpsb
dec
pop
push
clc
mov
das
bound
out
cltd
sti
inc
mov
sbb
or
add
imul
or
lock
jle
mov
testl
hlt
pop
call
push
test
sbb
pushf
or
dec
push
dec
dec
leave
push
jo
xchg
push
cmc
repz
sub
outsl
inc
inc
jge
rclb
je
cmc
stos
outsb
pop
push
jecxz
out
sar
jb
rorl
shll
add
shll
movl
das
jp
stos
adc
xor
mov
sbb
cli
push
or
jp
gs
ss
test
add
rolb
push
mov
sub
hlt
cli
xor
xchg
inc
inc
sbbb
jmp
pop
cmp
rorl
stos
fists
jo
mov
popa
jno
fcompl
jnp
push
repnz
dec
or
mov
inc
mov
popf
enter
sbb
int
lds
ds
pop
test
lock
test
pop
and
hlt
xchg
test
sbb
ljmp
jp
test
cmp
add
ljmp
or
sbb
in
sbb
mov
js
sahf
add
out
aaa
mov
jle
inc
int
pop
ja
cmpsb
and
jle
xor
rclb
ret
xchg
outsl
dec
sbb
roll
mov
int3
push
pop
xchg
jecxz
bnd
push
dec
and
pop
sbb
and
lods
push
and
mov
xchg
pusha
sub
test
mov
sub
dec
cwtl
sbb
int3
stos
sub
xor
call
adc
cli
out
inc
hlt
mov
push
scas
stos
cwtl
mov
je
out
out
cmp
dec
xchg
pop
arpl
mov
jge
pop
pusha
wbinvd
iret
mov
loop
xor
adc
je
std
sub
mov
pop
outsl
scas
dec
or
pop
push
mov
gs
leave
push
mov
rorl
push
ficoms
lods
imul
add
icebp
pushf
test
mov
repz
fldcw
xchg
stos
fdivrs
and
lcall
sbb
sbb
cltd
out
das
movsb
lea
ds
lock
jg
sbb
xorb
adc
es
shll
push
and
cltd
jae
es
jg
mov
pop
sub
sbb
push
mov
adc
gs
xchg
mov
lods
dec
loopne
push
xchg
jle
aaa
pusha
sub
ljmp
fistpll
push
in
mov
fcmovbe
fyl2xp1
fisttpl
sub
sub
gs
fldenv
hlt
test
sub
jle
lcall
mov
inc
xchg
adc
xor
jb
ficoms
cmpsl
pop
mov
sbb
addr16
sub
add
dec
scas
xor
imul
dec
or
mov
add
add
xchg
hlt
dec
push
ds
mov
psrlq
popf
cmpsb
repz
imul
aad
mov
xor
leave
cmp
push
out
into
or
ficoml
mov
jecxz
mov
out
and
inc
stc
pop
in
sti
ficoms
xlat
cmpsb
push
ret
push
push
scas
mov
dec
mov
ja
mov
xchg
mov
mov
adc
ret
pop
in
or
jns
addr16
sbb
roll
mov
mov
mov
or
nop
lcall
cwtl
pop
and
shl
pusha
sbb
pop
and
outsb
bound
adc
je
pop
pop
mov
loopne
scas
or
xchg
fwait
lea
insl
ss
cs
in
dec
sti
mov
int3
jb
fsubr
push
sahf
dec
cli
cld
jle
lock
scas
push
sbb
sbb
cmp
and
lcall
xor
movsl
je
mov
pop
xorl
push
cmc
outsb
pop
subl
xchg
and
cmp
js
and
sub
out
lds
dec
movsb
pusha
mov
jno
adc
inc
pop
push
jg
call
push
mulb
loop
sahf
repnz
cltd
push
ret
mov
mov
es
jno
xchg
mov
adc
dec
mov
fsubrs
fnstenv
mov
xor
adc
into
nop
ja,pt
lods
adc
mov
and
fisttpl
xor
or
pop
adc
and
cmc
inc
push
call
jp
pop
jns
mov
or
cmp
cmp
jbe
xchg
xchg
mov
xchg
lret
inc
sbb
add
insb
outsb
loopne
inc
or
mov
test
cmp
jecxz
insl
ret
fs
cmp
mov
loop
or
int3
ja
pop
and
inc
dec
dec
out
dec
adc
push
fwait
sub
push
test
and
aad
sbb
pusha
cmp
sub
mov
jmp
out
mov
les
je
lock
xorps
popf
mov
out
xabort
ret
imul
std
pop
ljmp
xchg
ret
fs
jne
dec
int3
mov
jns
mov
sarl
sub
pop
dec
outsb
push
jo
xchg
mov
jnp
incl
and
jmp
fisubrs
jae
mov
leave
mov
sub
or
and
data16
cld
jnp
pop
fstps
add
dec
fs
fldl
ds
ja
adc
push
in
jno
mov
mov
or
and
test
int
out
gs
lret
icebp
mov
in
in
pop
mov
jle
mov
xchg
out
xlat
enter
cmp
data16
mov
push
les
lret
jne
test
jge
dec
out
add
cmp
adc
mov
sub
xchg
push
pop
push
cmpsl
push
or
lret
push
sbb
add
ds
jl
into
rcrb
aaa
ss
das
push
jbe
stos
push
mov
es
addb
fstpl
ss
dec
rol
imul
aas
adc
sbb
cli
lds
add
pop
jmp
and
cltd
sub
repz
sbb
cmp
bnd
xchg
test
ds
fldenv
mov
sahf
mov
gs
mov
rorb
loopne
jmp
inc
mov
mov
cmp
pop
jg
and
xlat
idivl
sub
lahf
hlt
mov
fimull
or
mov
xchg
mov
or
out
sub
inc
sub
add
inc
scas
mov
mov
test
xchg
in
pop
sbb
adc
aas
rorb
push
push
push
dec
imul
lcall
cmp
cltd
or
pop
scas
mov
es
sub
sbb
das
test
add
xchg
loop
bound
mov
es
out
lahf
pop
and
sbb
std
dec
inc
dec
dec
mov
sahf
test
mov
dec
in
in
sub
ds
fidivs
adc
xlat
mov
mov
mov
jae
jg
pop
mov
aas
stos
addl
mov
in
and
aad
sub
or
mov
iret
push
add
inc
das
xchg
or
xchg
mov
and
fwait
xor
insl
cld
test
or
jae
bound
jae
push
push
xchg
cltd
cmpl
add
sbb
cli
jecxz
or
aaa
and
mov
dec
mov
cmp
daa
inc
ret
and
jmp
std
pushf
and
mov
hlt
push
xor
rcl
stos
inc
sahf
popf
and
shll
jg
pop
imul
scas
cld
fcoml
mov
popa
add
std
dec
cs
test
test
jp
cmp
ds
jnp
jne
cmp
shll
or
xchg
hlt
push
jb
mov
pusha
ret
hlt
sbb
push
inc
mov
cmp
mov
jecxz
mov
movsl
ja
mov
negl
pusha
inc
push
cmpsb
cmp
sub
outsb
or
pop
sahf
repz
pop
xchg
fbld
or
fistl
sahf
add
add
jae
filds
jecxz
push
sbb
iret
inc
push
push
sar
jmp
xlat
mov
push
test
jmp
add
loopne
pop
fnstsw
mov
notl
lcall
cmpsb
inc
pushf
insl
push
fwait
xchg
imul
test
mov
xor
cmc
insb
xor
fstl
roll
in
andl
in
push
push
mov
xorb
jae
jle
ret
test
xor
scas
adc
pop
jbe
loopne
adc
mov
lret
stos
mov
add
cmp
test
std
mov
aam
movsl
movsl
push
lcall
push
mov
push
mov
or
lahf
andb
loop
dec
dec
xor
cmc
and
je
cli
adc
cmc
push
xchg
fwait
push
fisubrs
xor
test
out
pop
dec
mov
mov
ret
ja
mov
inc
xchg
jge
sti
inc
push
ja
scas
stos
loop
notb
inc
cltd
jge
int3
roll
pop
xchg
stos
aam
mov
push
incl
pushf
sbb
cmpsl
stos
xor
cmp
pop
push
pop
jle
adc
outsb
and
test
inc
or
enter
adcb
test
inc
in
dec
xchg
jmp
mov
mov
xchg
sub
pusha
out
sbb
push
fisttps
push
imul
inc
push
mov
xlat
cmc
cmp
bound
push
cmpsb
and
sbb
sub
mov
test
in
je
xlat
push
mov
mov
aas
jl
push
enter
and
pop
jp
pop
mov
out
fcomip
aam
pusha
movsl
fistps
mull
lods
pop
je
cmp
xchg
aam
js
aas
jbe
inc
push
sub
loopne
adc
mov
scas
out
mov
subl
call
mov
data16
in
xor
push
xchg
push
inc
inc
clc
mov
jnp
bound
out
ljmp
roll
mov
xor
pop
sbb
and
inc
loop
sbb
ja
das
mov
nop
mov
push
daa
scas
int
insl
mov
mov
js
mov
adc
add
ds
sub
inc
in
inc
and
lds
insl
mov
out
add
popa
add
call
ret
iret
cmpsb
jo
inc
inc
mov
sti
cmp
imul
jge
stos
and
mov
and
jle
pop
sbbl
aas
and
notl
dec
fisubl
pop
push
lcall
inc
aad
inc
iret
jmp
scas
cmpsl
gs
jne
and
loopne
xchg
jg
stos
ss
dec
mov
xchg
clc
cmp
sub
or
adc
xlat
jmp
repnz
incb
popa
iret
sbb
in
addw
aad
pop
enter
stos
jecxz
loop
or
jle
mov
fistpl
repnz
out
out
data16
sbb
adc
lds
outsl
add
push
sbb
inc
into
add
pop
xor
popa
outsl
cmp
push
fsubr
in
pushf
cmp
push
mov
cli
sub
cld
or
and
rcrb
repnz
and
and
inc
inc
loop
or
mov
mov
bound
fdivr
push
lret
aad
orl
or
or
pop
fwait
fldcw
and
xchg
push
aam
jmp
repz
imul
or
pop
xchg
dec
lds
jnp
test
mov
xrelease
add
insb
inc
cmpsl
vcvtss2si
and
mov
ljmp
sbbb
mov
mov
cmpsb
fldl
outsb
repz
je
sub
cld
sub
push
out
push
mov
shll
cmp
cltd
dec
sahf
cmp
mov
stos
imul
ja
pop
push
shrb
pop
xor
aam
lods
or
call
xor
mov
adc
ds
scas
test
inc
movsb
mov
hlt
add
push
lods
cwtl
xor
lcall
cmpsb
inc
movsb
xlat
in
xchg
cs
sbb
lcall
and
aaa
sub
mov
out
insl
push
push
movl
std
adc
add
mov
sahf
jo
inc
sti
lods
lock
adc
mov
dec
inc
lds
dec
or
jge
inc
push
push
xchg
cmp
test
dec
mov
shl
push
inc
pusha
pop
jbe
xchg
pushf
daa
mov
xchg
fsubr
out
ret
mov
insl
sub
cmp
jg
jns
dec
sbb
and
push
push
imul
pop
rorl
pop
ds
or
push
shl
cli
mov
lods
popf
mov
and
sub
cmpsb
psubusw
je
jno
rorb
mov
leave
aam
sub
pop
xor
dec
add
pop
adc
std
add
lods
cmp
popa
int3
push
shlb
mov
adc
mov
pop
push
jb
rclb
xor
dec
testl
cmc
jp
sbb
xchg
test
mov
jmp
add
mov
dec
cmpl
addr16
xor
movsl
pop
dec
fbstp
xchg
pop
mov
popf
fmuls
mov
sub
out
dec
cwtl
cld
push
cmpsb
dec
repz
gs
add
movsb
cmp
mov
jmp
sub
ret
dec
clc
adc
pop
adc
xchg
jmp
lahf
in
loopne
cs
mov
dec
mov
mov
pushf
mov
ficompl
jmp
mov
jg
cmp
push
pop
test
cmpsl
jne
cmp
scas
mov
xchg
fsubrs
out
insb
push
lods
icebp
push
cs
dec
lahf
leave
xor
inc
jl
lcall
je
fwait
add
fcomps
popa
loop
aaa
in
add
mov
test
mov
sub
sarl
das
sti
rcll
insl
adc
retw
xor
outsb
scas
jbe
adc
add
roll
xor
jp
jae
lock
push
mov
adc
pop
ret
sub
cltd
cmp
dec
mov
out
test
loope
jmp
enter
ja
xchg
xchg
leave
pop
sub
pop
push
pop
adc
dec
jle
sti
add
aas
ret
xchg
mov
arpl
sub
adc
cs
jg
xchg
mov
mov
push
cli
in
jae
mov
mov
push
lock
xchg
cmpsb
test
add
xor
dec
inc
popa
or
add
call
or
vmovlpd
mov
jle
mov
xchg
pop
mov
js
fst
icebp
stc
mov
test
stos
xchg
sbb
aad
or
lcall
jle
movsl
icebp
dec
in
arpl
mov
pextrw
sahf
adc
xchg
jne
les
andl
xor
push
pop
test
sbb
pushf
rorl
sub
out
enter
jle
nop
aas
jle
cmp
sub
cmp
pop
jle
vpslldq
xchg
ja
addb
adc
xor
pop
sbb
pop
sbbb
pop
push
lcall
hlt
jg
ja
ds
test
sbb
test
adc
xlat
xchg
pop
arpl
xchg
cmp
sub
or
xchg
stc
in
pop
std
arpl
xor
sar
xor
xorl
mov
pop
adc
adc
add
jne
scas
sbb
lods
lahf
nop
js
icebp
add
jbe
rcll
sbb
aaa
ljmp
insb
pusha
jnp
bound
push
aaa
xor
mov
insl
sub
jl
fldl
pop
daa
mov
mov
xchg
jo
sub
popf
xor
pop
mov
lret
mov
adc
int3
mov
jl
imul
lcall
cld
mov
sti
daa
je
repz
xchg
dec
in
insb
push
in
ss
cmc
jecxz
xchg
arpl
or
cmp
out
dec
aad
xchg
dec
lahf
jne
popa
lods
sti
jle
push
cwtl
repnz
mov
addr16
push
push
push
loop,pn
adc
and
jmp
out
stos
mov
cli
jnp
xor
pop
and
out
mov
stos
jg
add
bound
add
mov
and
cltd
fmull
push
mov
rorb
in
dec
pop
push
and
or
outsl
pop
jo
mov
outsl
mov
inc
loop
lret
pushf
xor
mov
das
ljmp
subb
push
lret
xchg
pop
sbb
orb
dec
sarl
sbb
mov
pop
ds
dec
fcomp
push
pop
jl
adc
and
imull
or
loop
mov
or
stos
xlat
adc
fucomip
xchg
fiadds
fsubrl
in
jae
mov
les
dec
mov
aas
push
mov
fiadds
inc
pop
sahf
mov
pop
stos
jns
xchg
les
and
cmc
inc
push
or
cmp
lods
pop
or
mov
xchg
roll
inc
inc
lahf
rorl
les
inc
jb
stos
insb
dec
jge
xor
adc
push
mov
mov
sbbb
int3
ret
icebp
outsl
shll
pushf
das
mov
pop
xor
adc
xor
nop
mov
scas
dec
fmuls
mov
loopne
dec
dec
pop
push
ret
cld
je
pop
jne
jne
mov
in
shll
cmp
cwtl
nop
sbbb
cmc
cmp
jp
jl
mov
add
and
xor
lods
jle
inc
ret
pop
hlt
mov
or
jecxz
cld
fwait
adc
lahf
bnd
iret
insb
scas
jns
jne
arpl
push
xchg
cmp
in
xor
pop
enter
rcrb
mov
jns
data16
test
xor
testl
ds
or
out
adc
scas
sbb
jg
arpl
add
loop
sub
xchg
lock
push
outsb
mov
mov
orb
sbb
jae
or
aad
xchg
lods
addb
mov
sbb
mov
jle
dec
mov
adc
lods
push
out
mov
rolb
sub
icebp
xor
jne
out
lock
test
popf
cmp
addr16
push
jl
and
dec
bnd
jb
cmpsb
cmpsb
mov
inc
imul
popa
das
in
jecxz
fisttpl
call
xor
mov
ja
int
adc
cmpsb
add
popa
leave
out
mov
repz
push
xor
push
into
push
xor
or
mov
or
push
jns
adc
cmpsl
cmp
adc
xchg
pop
mov
xor
or
arpl
cmp
scas
xchg
fwait
push
das
mov
imul
pusha
inc
cltd
dec
rcll
lods
xchg
push
dec
call
sub
mov
ja
ret
mov
pusha
xchg
cmp
loopne
or
mov
pop
int3
cmpsb
ror
dec
stos
imul
jns
shll
lods
push
pop
jl
dec
and
pop
dec
je
into
and
add
or
pop
sub
mov
lods
dec
imul
cmp
sub
add
mov
jmp
mov
mov
mov
add
outsl
popf
inc
adc
scas
and
pop
jbe
or
pop
push
pop
or
loope
lock
xchg
mov
fdivr
cmp
fs
lcall
mov
ret
add
mov
push
and
sbb
cli
lret
mov
dec
rcl
mov
pushl
lahf
sub
enter
mov
jge
dec
or
cmpsb
sbb
inc
xchg
pushf
stos
xchg
adc
fs
mov
or
das
push
lea
or
imul
mov
pop
in
shlb
mov
dec
add
dec
test
jge
cmc
das
mov
popf
mov
xor
popf
cmp
std
rol
leave
pop
insb
and
pop
jge
pop
ret
jo
dec
ud0
insl
adc
mov
test
xor
xor
inc
adc
stos
adc
mov
out
or
cwtl
imul
cmpl
add
jmp
inc
lret
decb
pop
add
sbb
scas
testl
ss
ja
loope,pn
pop
in
popf
das
vpcmpeqw
add
cmpsl
and
xchg
sub
push
or
bound
repz
lret
mov
fadds
mov
mov
or
or
test
add
fidivl
outsl
xor
stos
pop
out
fldt
rorl
pop
mov
pop
hlt
into
inc
ror
sbb
je
faddl
addr16
scas
inc
fldpi
cmp
hlt
ret
jae
and
movsl
push
dec
xchg
popf
add
cmp
cmp
xchg
dec
xchg
stos
pop
pop
add
insl
add
ret
inc
divl
xchg
or
xchg
insl
testl
add
fdivl
leave
add
inc
fnstcw
adc
cmpsb
jg
in
or
or
and
pop
mov
xchg
cmp
dec
sbb
scas
lret
iret
ret
aaa
or
adc
xchg
lock
sbb
shl
xor
jae
shrb
xchg
mov
xchg
orl
xchg
or
cmp
shrl
test
mov
in
mov
lret
je
xchg
jmp
in
das
mov
jns
push
ret
mov
in
pop
andb
dec
push
cmp
push
or
pop
xchg
push
aaa
outsb
inc
cmp
sti
idiv
mov
movsb
test
lds
std
add
pop
sub
inc
lea
scas
daa
scas
lds
and
rcrb
add
xor
and
jae
inc
dec
fwait
inc
and
cltd
sub
loop
xlat
fwait
lret
jl
mov
je
push
out
mov
cmp
push
insl
sub
cmpl
jle,pn
sarl
dec
mov
scas
repnz
shrb
sbb
test
repz
stos
subl
mov
outsb
sarl
xchg
inc
lahf
push
popa
ss
pop
leave
fs
cmp
jle
adc
sub
or
loop
in
xor
pop
mov
leave
add
xor
sti
fcmovb
daa
pushf
sarl
pop
adc
push
sbb
stc
and
xchg
dec
ret
ja
repnz
insl
in
lea
in
mov
bswap
movsl
sarl
imul
out
xchg
and
push
rcll
lock
dec
insl
mov
sub
jne
push
push
push
rorb
sbb
popa
mov
cli
dec
and
inc
movsl
fldl
push
imul
mov
sti
mov
cmp
mov
test
inc
cli
add
clc
dec
std
rolb
push
xor
mov
or
xlat
xorl
or
mov
jb
icebp
inc
test
stos
out
xchg
push
clc
sti
pop
lods
sub
adc
lahf
inc
lcall
faddl
jns
adc
lret
adc
mov
adc
mov
mov
fcoml
mov
xchg
xchg
pop
movsl
xchg
jl
adcb
push
jnp
nop
mov
cmp
jnp
mov
sub
pushf
add
cmp
into
inc
or
lock
cmp
pop
outsb
adc
push
fisubl
xor
sbb
in
mov
mov
aas
mov
mov
xchg
add
inc
neg
fbld
or
jecxz
jg
xchg
fsts
add
aaa
loop
out
inc
in
dec
pushf
stos
mov
pusha
mov
jnp
sub
xlat
xor
jmp
out
jl
inc
mov
loopne
ret
in
push
dec
sti
testb
repnz
movsb
roll
jp
lods
mov
add
inc
sub
cmp
sub
jae
jecxz
dec
adc
xchg
dec
push
pusha
push
lret
cwtl
loop
stos
arpl
int3
test
mov
in
jg
cwtl
cmp
mov
inc
shrl
and
icebp
push
mov
daa
je
push
cwtl
xchg
xchg
add
test
inc
insb
mov
fs
test
fstps
ss
pusha
mov
nop
fs
push
popf
ds
aam
mov
xchg
sbb
add
jne
and
roll
cmpsl
xorl
cwtl
push
dec
ja
inc
xchg
push
shll
js
add
sub
push
cmpb
fs
inc
pushf
rcrb
dec
xlat
inc
mov
pop
std
mov
bound
lret
xor
subl
add
jae
sbb
and
stos
cmp
pusha
xchg
mov
rcll
outsl
and
sub
pop
mov
mull
repz
unpckhps
pop
xchg
out
ret
cmp
cmpl
clc
outsl
call
push
dec
push
mov
arpl
fwait
adc
std
cmp
int3
cmp
push
les
test
dec
inc
outsb
xchg
repz
xchg
ljmp
inc
icebp
mov
push
sar
cmp
inc
idivl
in
jbe
fisttpll
dec
sub
sbb
push
aam
rorb
incb
mov
pop
pop
xor
sar
fldenv
ret
sbb
mov
lock
fadds
test
add
mov
loope
arpl
rorb
fisubs
or
loope
je
inc
pop
sbb
outsl
push
inc
repnz
adc
fcmovne
stos
adc
add
mov
dec
xchg
xchg
cmp
pushf
pop
fistl
loopne
jmp
popf
push
aaa
mov
fwait
int
or
push
add
inc
pop
in
lea
in
insl
mov
inc
dec
ds
lar
cmp
pop
add
int3
imul
dec
ds
addl
push
mov
or
shll
adc
cmp
jmp
subl
sub
add
mov
jno
sub
cmc
mov
jbe
les
movsb
jns
push
or
xchg
adc
mov
and
ret
enter
pop
pop
nop
roll
es
dec
xchg
mov
stc
ret
out
mov
mov
pop
cmpb
push
rcl
jo
mov
add
dec
pop
xchg
stc
and
nop
mov
sub
pop
mov
lock
cmp
adc
cmpsb
add
jno
in
fstpt
gs
push
loope
ret
rcll
pop
std
bound
inc
sub
adc
dec
lahf
inc
jns
mov
lock
rcll
faddl
or
repnz
or
insb
mov
arpl
mulb
mov
mov
cmp
pop
adc
adc
sub
jg
jo
nop
jl
xchg
jnp
dec
stos
sti
inc
fists
and
in
das
pop
fcompl
dec
sbb
jmp
imul
dec
popa
repz
loopne
pop
mov
xor
cmp
xchg
into
jp
xor
cmp
and
stc
jne
in
out
fs
mov
pop
jb
and
inc
mov
sub
mov
push
fmuls
dec
call
pop
bound
mov
mov
xchg
rclb
pop
dec
mov
xchg
sarl
stc
shlb
mov
std
mov
jne
add
sub
fldcw
fwait
sbb
clc
pop
cmovg
dec
push
push
mov
sarb
popf
mov
sbb
cmp
xchg
ss
int3
scas
enter
test
or
jle
fs
fneni(8087
jle
imul
mov
jge
push
lods
mov
sti
fwait
xor
stos
sub
cltd
or
adc
out
pop
jge
jne
jmp
mov
cvtpi2ps
repz
pop
push
sub
dec
push
cltd
push
aam
out
jns
es
pushf
iret
or
pop
js
dec
daa
addr16
push
inc
inc
xchg
push
push
adc
or
shll
adc
mov
push
pop
hlt
xor
jnp
dec
imul
pop
xor
cmpxchg
lods
sub
test
push
or
dec
sbb
daa
xchg
sar
xchg
sub
pushf
pop
aaa
mov
pop
cmp
aaa
pop
mov
int3
daa
dec
sub
ja
mov
stos
je
outsb
mov
data16
pop
loope
negb
jg
dec
je
out
fstp
inc
xor
les
xchg
dec
push
outsb
popa
ss
mov
jp
rcll
cwtl
test
fmul
lcall
fistpl
mov
arpl
lret
mov
pushf
call
pop
jnp
push
adc
clc
subb
popa
in
lahf
sbb
movl
rolb
imul
jbe
mov
mov
jb
loop
and
and
cmp
das
data16
cmc
mov
adc
jns
sarl
es
int
hlt
shrb
sbb
andb
inc
jl
lock
and
mov
xchg
mov
mov
insl
cmp
in
cmp
aad
jae
mov
dec
aas
loope
xlat
xor
gs
out
dec
repz
fwait
jge
cmp
ljmp
push
insl
and
pop
push
rolb
sarb
push
mov
cmp
ror
and
mov
jmp
lods
xchg
pop
ja
push
push
ss
das
imul
shll
lods
sub
pop
movsb
jg
cmp
xor
outsl
ss
jns
xchg
and
in
jno
xchg
sbb
mov
mov
jnp
pop
rclb
push
cmc
cltd
das
add
and
fsubp
mov
je
or
dec
jbe
outsb
stc
repnz
add
sbb
push
mov
sbb
addr16
js
icebp
movsl
jmp
xchg
lcall
cs
push
pop
loop
fnstcw
sahf
cmp
or
jp
lahf
shlb
adc
jnp
scas
lods
movl
jne
rolb
ret
and
inc
and
xchg
pop
pop
pusha
jno
fimull
lret
lret
and
mov
mov
mov
jecxz
push
in
jmp
or
std
pop
int3
sti
ss
xor
mov
sarb
pop
inc
cmp
add
xchg
aam
cwtl
sub
faddp
fcos
adc
ds
pop
jmp
add
or
jb
enter
clc
test
mov
dec
out
mov
lock
out
cld
jmp
out
sub
push
dec
int
cltd
jbe
or
and
mov
add
ficomps
add
jne
xchg
add
addb
mov
xor
insl
imul
fdivrs
or
inc
cs
and
or
inc
xor
in
cmp
adc
adc
pop
jge
fwait
popa
test
pusha
xchg
add
ljmp
cmp
and
mov
in
outsb
dec
lock
push
aaa
add
dec
cmpsl
faddl
sub
and
jno
xor
fistpl
sub
imul
call
xor
movsl
or
cmpsl
push
mov
loopne
pusha
jbe
push
pop
cli
sbb
test
pop
aam
dec
dec
and
mov
jb
out
mov
mov
loopne
pop
adc
sub
jmp
gs
add
ljmp
lea
mov
mov
jp
lea
not
pop
gs
aam
push
add
iret
int
fs
inc
cmp
loope
into
inc
push
mov
xor
jb
in
pop
adcl
pusha
jne
xchg
xor
add
dec
cld
outsb
mov
pop
cwtl
stos
or
adc
stos
aas
cmp
push
inc
pop
mov
test
mov
inc
subl
dec
jp
nop
push
sti
mov
arpl
sub
gs
add
jnp
cmp
icebp
xchg
xor
pop
xlat
pop
add
lret
cmp
out
insb
fwait
les
pop
stc
dec
mov
cld
pop
mov
aaa
rclb
and
lea
inc
dec
cld
push
mov
adc
xor
jne
or
je
lock
jmp
jo
ds
imulb
enter
push
int3
jg
sub
push
outsb
outsb
cmp
or
dec
fistpll
lods
mov
in
mov
test
bound
sub
testb
sub
shll
xor
mov
push
mov
dec
mov
fdivl
dec
jl
sub
mov
mov
subb
ja
xchg
or
fwait
andl
in
dec
pushf
mov
aam
xor
repz
or
and
ja
mov
sbb
jo
outsb
shl
push
shl
dec
inc
push
enter
aad
sbb
pop
cmp
shll
and
mov
dec
out
inc
test
out
add
sbb
fcompp
xchg
data16
xor
out
into
push
jge
daa
push
sub
push
push
and
lcall
mov
jnp
std
xlat
clc
mov
pop
dec
daa
in
push
fstpt
jae
data16
mov
cltd
pop
and
adc
mov
popf
xchg
insb
or
cli
jne
jns
inc
mov
pop
dec
xor
cld
imul
push
pop
jo
pusha
mov
in
das
imul
add
jnp
xorl
xor
mov
xchg
movsb
cmp
xchg
sub
repz
xchg
jno
dec
jg
jle
adc
daa
lea
push
adc
cmp
bound
mov
lods
dec
push
dec
lcall
jns
jecxz
pop
mov
lods
repz
sbbl
pop
stos
stos
pop
mov
xor
mov
sti
fsubrs
test
aas
sbb
adc
or
add
dec
or
mov
imul
aas
popa
adc
adc
sub
ret
aad
cli
ja
push
or
ds
arpl
pop
pop
mov
ret
and
inc
setb
icebp
das
lea
data16
xor
or
sbb
jb
cmp
lret
pop
imul
pop
push
mov
adc
out
leave
fldcw
test
or
aam
fcoms
ret
sti
outsl
aam
sbb
inc
js
out
leave
mov
jne
test
pop
pop
mov
pop
inc
or
or
pushl
pusha
ds
out
inc
fldenv
jne
jecxz
je
fucom
icebp
and
jnp
popa
addr16
adc
adc
rcrb
add
push
cs
and
add
outsb
pop
ss
scas
pop
shl
xor
clc
sbb
jnp
inc
lahf
sarb
ja
mov
lret
xlat
xor
lcall
push
jnp
in
mov
lcall
or
in
mov
xchg
nop
addr16
jmp
xor
insl
xchg
sbb
test
ret
shlb
orb
push
into
pop
test
ss
dec
scas
leave
and
push
push
or
inc
mov
mov
or
mov
dec
jnp
sub
or
sti
xchg
pop
inc
cltd
xchg
sub
mov
jns
jecxz
sbb
sti
xchg
mov
add
imulb
cwtl
add
sbb
mov
cmp
call
in
jmp
and
movsb
outsb
pusha
and
cmc
cmp
dec
push
push
into
sti
adc
adc
es
jns
lret
mov
pop
mov
inc
or
std
ret
out
push
call
cmp
or
shrb
cmp
push
mov
es
nop
imul
fdivl
xchg
enter
xor
outsl
adc
add
adc
and
xchg
jecxz
adc
je
int3
jbe
cmp
xor
xchg
xor
sbb
aaa
sub
stos
std
sub
nop
sbbb
rorl
insb
out
xlat
mov
int3
gs
xchg
sarb
or
cs
xchg
outsl
insb
xor
cmpsb
pop
imul
inc
fcmovne
pushf
leave
cli
pop
jno
ficoml
sub
pop
adc
ret
cmp
sahf
into
testb
mov
insl
testl
sbb
adc
sbb
daa
rol
xchg
lods
stc
or
popf
xchg
jmp
paddsw
out
test
mov
les
lret
mov
adc
adc
jl
inc
jecxz
stc
mov
fbld
or
adc
lret
pop
xor
mov
mov
iret
push
scas
insb
in
mov
jmp
cmp
lret
xchg
mov
fs
sbb
icebp
vpsubusb
and
es
out
stos
or
dec
add
mov
pop
sbb
fwait
dec
sbb
imul
in
push
pop
mov
sti
es
ja
push
loop
into
pop
stc
mov
sbb
push
jnp
cmp
fiadds
loop
cltd
mov
mov
xchg
xor
leave
dec
sub
cwtl
mov
sbb
std
lret
xchg
call
jns
jp
jo
add
mov
push
ret
fwait
popa
xlat
decb
sbb
lret
cmc
je
jge
mov
mov
or
fnstcw
stc
test
jno
and
stc
xor
in
and
ror
into
pop
add
jb
jnp
sbb
and
mov
leave
sbb
adc
movsb
push
lret
aaa
iret
sbb
outsl
nop
and
in
xchg
loope
sub
js
ja
sbb
cmpsl
mov
inc
mov
lahf
popl
repnz
sub
sar
fs
add
or
add
jl
call
pop
push
mov
pop
pushf
push
mov
jl
jns
push
push
cmp
jl
xchg
sub
and
cmc
stc
cltd
mov
xor
int
pop
das
outsb
sbb
cmpsb
mov
push
cmp
add
xor
adc
mov
cmpsb
call
outsb
aam
and
rcrl
aas
lret
mov
pusha
dec
jl
fwait
into
fwait
popf
mov
add
cmp
push
cmp
imul
inc
mov
iret
imul
rcr
ret
inc
adc
in
stc
cmp
push
pop
add
push
data16
cmpsb
xchg
dec
sti
xlat
rolb
sbb
xchg
inc
int3
into
cmp
cmpsl
outsb
repz
into
inc
popa
cmc
fwait
cs
std
mov
loopne
mov
gs
jne
lods
movb
jl
or
jp
inc
cmp
sub
orb
pop
clc
xor
sbb
cmp
xchg
mov
arpl
cmp
or
jmp
adc
ret
push
xchg
xchg
je
add
faddl
jnp
gs
mov
and
cmp
mov
popf
mov
jle
xor
call
fwait
movsl
adc
cmp
ds
call
rclb
stos
cli
push
mov
jbe
sbb
pushf
push
test
pop
ljmp
fisubl
out
scas
rorb
sbb
xchg
addr16
divl
xchg
jae
jg
sarl
ja
adcl
cmp
loop
arpl
subl
add
dec
movsb
pop
xchg
cmc
adc
ficoms
clc
mov
add
stos
sub
mov
sbb
cmp
sahf
fistpl
scas
jecxz
lods
fldt
popl
pop
in
stos
jl
cmp
fiadds
xor
pop
mov
and
dec
pop
jmp
jno
push
in
lahf
ljmp
dec
divb
mov
enter
adc
sti
jge
mov
scas
sbb
mov
addr16
pop
mov
push
inc
xchg
add
inc
cltd
adc
pop
dec
pop
mov
cli
fisttpl
or
fwait
testb
mov
mov
xor
loope
and
fsubrl
insb
adc
mov
pop
clc
test
stc
jno
je
or
adc
cmp
or
inc
mov
jo
mov
mull
lcall
or
f2xm1
sub
out
push
stc
test
fsub
cmp
repz
xchg
adc
jbe
adc
push
xor
and
dec
nop
sub
push
dec
in
mov
jbe
or
hlt
test
xchg
push
mov
inc
push
fcoml
mov
mov
add
inc
in
repnz
cmc
out
int3
fldt
jns
mov
fs
xor
push
xor
mov
inc
lds
aas
test
inc
sbb
add
into
rcll
xchg
dec
mul
dec
popa
sbb
inc
mov
sbb
pop
ret
jmp
push
mov
xchg
sbb
xchg
cmp
push
clc
sub
repz
push
insb
lock
int
mov
stos
sarb
or
cmpsb
xlat
mov
mov
xchg
pop
mov
sub
pop
movsl
jbe
fimuls
fsubrl
mov
mov
sarb
cmc
push
nop
arpl
ss
mov
cmp
mov
cld
jmp
sti
insl
cld
mov
lahf
add
aad
adc
inc
xchg
in
mov
cld
jb
push
mov
or
mov
jmp
mov
into
sub
sarb
sbb
nop
pop
shll
cs
notl
and
xchg
and
mov
sar
scas
fwait
mov
enter
and
or
js
sbb
dec
fwait
push
test
push
stos
repz
pop
mov
and
js
repnz
shll
and
sbb
lea
stos
pop
notb
xor
rorl
aaa
hlt
lods
cwtl
imul
mov
aaa
cmp
or
mov
ja
mov
popf
test
adcb
push
mov
inc
xchg
mov
leave
lods
inc
pop
daa
call
jmp
sbb
dec
lock
cmp
cmp
push
and
fstpl
inc
mov
sbb
cmp
in
lea
xchg
xor
xor
jg
sbb
aam
fstps
dec
test
or
xchg
mov
fsubr
mov
pushf
pop
push
or
nop
and
hlt
sub
enter
jle
sub
cmp
loope
lock
mov
mov
fcmovne
inc
fldcw
dec
scas
jmp
add
sub
jbe
mov
xor
fadd
cld
ret
insb
add
test
or
pushf
dec
jne
pop
imull
or
jle
mov
cltd
jle
hlt
sbb
push
shrl
addl
repnz
dec
xchg
rcrl
pop
cmc
jl,pn
pop
xor
jns
pop
in
push
rcll
and
jge
cmc
mov
out
out
inc
sbb
pop
jg
cld
push
out
subb
in
adc
push
dec
sbb
mov
andb
or
movsb
cmp
out
pusha
jae
pop
cltd
test
mov
cmpsb
stos
mov
loopne
or
std
mov
aaa
mov
inc
ljmp
das
xor
js
sti
dec
fisttpll
mov
maskmovq
negl
stos
icebp
mov
jmp
aam
pop
ljmp
mov
or
jo
mov
push
jo
inc
std
insl
xchg
sub
loop
flds
fsubs
es
std
popa
ror
pop
adc
jb
lods
lea
jge
fwait
ror
mov
das
or
pop
call
push
jno
nop
sub
imul
xchg
sbb
cwtl
mov
loop
sub
sub
sahf
pop
jne
fwait
pcmpgtd
cmp
leave
lret
pusha
dec
aad
cmpsl
in
sub
or
fwait
dec
jno
or
ss
mov
mov
fsubrl
data16
xchg
sbb
inc
insl
cli
mov
adc
inc
std
mov
xorb
jge
pop
dec
jle
hlt
bound
jbe
scas
cmpsl
pop
subb
iret
sub
jmp
or
fs
sbb
sub
int
test
sbb
pop
jne
inc
test
insb
pop
lcall
jmp
insl
lret
adc
mov
aaa
cmpsl
shl
fcomi
shll
les
add
nop
aas
mov
outsl
lock
mov
pop
or
add
scas
and
sub
xor
push
push
sahf
lahf
mov
pop
out
repnz
adcb
mov
ss
dec
inc
or
lds
stos
xor
mov
loop
insb
pop
inc
adc
pushf
stc
mov
xor
dec
inc
add
mov
pop
cmpsb
jg
je
mov
lds
in
notl
sti
mov
xchg
filds
sbb
cmp
das
scas
jecxz
xchg
jns
mov
or
mov
pop
mov
mov
xchg
or
sbb
mov
addl
sub
xchg
lds
pop
cs
clc
pop
mov
js
and
out
xchg
add
mov
ret
and
cli
addl
xor
sbb
outsl
int3
call
add
mov
das
popf
push
dec
sbb
rorb
stos
inc
jmp
mov
clc
lds
fdivp
sub
cmpl
mov
xlat
ljmp
jae
repnz
in
mov
push
fs
or
das
pushf
cltd
or
cmp
xlat
enter
jecxz
sub
fnclex
das
cmp
sub
and
xchg
xchg
mov
aad
icebp
fisubl
gs
lods
cmp
push
mov
mov
cwtl
sbbl
int
lret
xchg
mov
xchg
xor
sbb
or
xor
ffreep
push
call
test
xchg
leave
rcll
push
xor
pop
addr16
sarb
ljmp
pop
add
cmp
lods
mov
insl
jp
pusha
mov
sti
or
xchg
jne
test
sarl
rcll
lods
mov
mov
cmc
jbe
push
xchg
inc
test
dec
arpl
mov
dec
lret
fisubrl
or
addr16
ja
out
adc
loopne
pop
int3
inc
jnp
cmp
sub
mov
mov
leave
ja
xor
int3
arpl
mov
mov
pop
idivl
popf
sub
inc
xchg
call
or
mov
xlat
in
ja
xchg
cmp
fs
hlt
sub
push
sti
and
lcall
addb
dec
fnsave
cli
std
stos
daa
mov
jbe
popa
lods
inc
mov
push
sbb
ljmp
and
sub
in
pushf
addr16
push
pusha
fdivp
ret
xor
insb
jno
push
pop
xorb
mov
push
add
js
iret
and
sub
pop
cmp
js,pn
jle
jle
jbe
repnz
jb
mov
orb
nop
push
fisttpl
into
mov
dec
ficomps
mov
fsubrs
je
ficompl
mov
xlat
jg
push
mov
xor
in
in
fwait
arpl
lcall
sbb
into
shl
mov
cmp
scas
or
daa
cmovo
cmpsl
das
jne
mov
sbb
das
add
xchg
jl
mov
mov
xor
sbb
inc
cmp
lret
jle
repz
js
shr
cmc
mov
addr16
insb
and
imul
movsb
jg
jg
leave
std
fcoms
inc
into
pop
lret
mov
call
fs
pop
cmp
jecxz
mov
jp
mov
xchg
jp
insb
push
mov
dec
mov
test
rcrl
lret
rcll
jne
hlt
xor
aam
hlt
jns
jns
addl
rorb
test
jns
mov
gs
cld
aaa
pop
inc
jae
adc
ss
stos
jmp
sub
xor
popf
out
fnstenv
fisubrl
push
testl
mov
aaa
pushf
aam
jmp
arpl
sbb
loop
outsl
fmul
add
repz
cmp
sbb
outsb
jae
movsl
out
inc
push
arpl
mov
mov
loope
popa
jp
fdivs
cmc
xchg
scas
scas
rcrl
faddl
arpl
pop
and
dec
dec
jecxz
test
mov
popf
mov
es
or
sbb
xchg
xchg
xchg
adc
dec
xchg
jno
les
loope
call
mov
mov
push
lret
je
sahf
das
xchg
lret
mov
outsb
jae
dec
sbb
movsl
mov
jae
int
pop
cmc
jbe
loop
and
scas
xlat
dec
cmp
in
sub
rcr
imul
inc
xlat
push
out
fucom
stos
stos
sub
sub
xchg
jp
data16
xor
xor
fnstsw
mov
roll
ds
pop
push
jae
mov
mov
pshufw
cmp
jmp
stc
stc
xor
inc
and
xchg
adc
cmpsb
push
test
adc
fsubr
adc
pusha
outsl
loop
dec
ret
mov
jle,pt
mov
ds
add
adc
jl
clc
inc
inc
dec
cltd
push
inc
jo
dec
cmp
cmp
sbb
pop
sub
fisttpll
out
ljmp
shr
sub
insl
jmp
sahf
sbb
loope
sar
sbb
in
mov
test
jmp
mov
sbb
pop
pop
shrl
rcll
push
xchg
xor
sub
dec
into
ret
xchg
bndldx
cmpsl
iret
cltd
cmp
mov
cmp
or
push
lds
testl
add
push
bound
scas
xchg
cltd
cli
mov
mov
and
mov
int3
push
add
add
lock
jno
lods
mov
xor
iret
bound
lea
sbbb
ficoml
push
in
sbb
mov
push
repnz
aam
push
mov
inc
push
lds
fwait
or
lret
imul
jnp
xor
scas
arpl
push
mov
add
je
dec
loope
mov
adc
insl
jo
mov
or
jbe
jg
lret
fstps
rcll
enter
add
inc
jbe
mov
dec
add
cmc
xlat
or
fsubs
pop
jp
aad
jle
cli
dec
push
xlat
icebp
jg
das
xchg
push
mov
jl
lea
fwait
clc
aas
inc
mov
mov
cmp
stos
out
out
into
mov
sub
add
loope
push
stc
cli
xchg
dec
sub
lcall
xlat
pop
jo
xor
clc
xor
pop
xchg
mov
mov
test
push
or
loopne
xchg
or
fists
int
dec
sbb
shll
cmpsb
repnz
and
daa
es
sbb
push
in
cmp
dec
adc
imul
sbb
mov
inc
shlb
xchg
pop
out
lea
adc
sbb
add
cmp
add
xor
ja
lret
dec
jp
loopne
xor
inc
stc
ret
ret
xchg
dec
xor
nop
cmc
je
enter
mov
inc
sahf
push
mov
outsb
or
ss
movsl
stos
mov
mov
or
jle
push
pop
cmpsl
fs
jp
stos
jg
push
add
scas
data16
mov
mov
mov
push
or
pop
push
orl
lods
scas
outsl
sub
ja
jne
xchg
outsb
rol
sbb
jb
pop
mov
cmp
xor
popf
sbb
adc
jb
xchg
xor
mov
out
in
out
inc
xlat
ret
adc
add
jne
inc
fiadds
dec
out
jecxz
loope
mov
adc
enter
iret
notb
repz
cs
enter
loope
xchg
std
pop
sbb
imul
add
jg
push
stc
js
sub
xor
leave
addl
test
std
xchg
dec
ficomps
ret
int3
rcrl
insl
rolb
xor
xchg
xchg
jl
pop
inc
loopne
inc
push
jb
movb
ss
inc
mov
testb
adc
pop
cmp
loopne
mov
test
inc
push
fildl
repnz
and
cmp
aaa
popf
call
out
jecxz
sub
adc
imul
lds
out
or
cmpsb
lcall
sbb
sbb
mov
pop
adc
rolb
dec
nop
mov
sub
insb
dec
pop
lock
nop
hlt
xor
adc
cmp
cmp
scas
adcb
jp
insb
jp
cmp
mov
add
push
sbb
daa
fsubl
pop
jmp
aas
out
sub
jbe
mov
fsubl
jae
sti
fs
call
and
push
sarb
inc
pushf
inc
pop
paddusw
cmpsb
dec
cltd
mov
sarl
jbe
inc
mov
ret
bound
sbb
test
adc
push
loope
mov
push
imul
inc
add
stos
or
je
push
jg
lcall
adcb
orl
sub
popf
mov
or
aaa
test
shlb
popf
test
mov
xlat
aad
and
aam
cmpsb
pop
jbe
test
xchg
loop
or
push
cmp
mov
fs
adc
mov
cmp
mov
dec
inc
jnp
mov
icebp
adc
mov
xor
jmp
sbb
mov
jbe
arpl
aam
repz
sub
and
pop
mov
mov
mov
repnz
in
pop
mov
cmp
mov
aas
inc
push
mov
push
pop
push
jne
mov
cmp
enter
inc
xchg
lds
add
fsubrs
dec
bound
add
xor
pop
mov
adc
push
loope
mov
push
jg
fisttpll
mov
lods
add
cmp
inc
push
stos
dec
mov
arpl
test
loope
cmpb
mov
push
inc
ja
repnz
cmc
xchg
in
xchg
out
loope
mov
jge
ja
mov
sub
push
cmp
sarl
enter
fwait
out
mov
lcall
hlt
add
or
loop
push
cmp
sub
adc
adc
adc
inc
rorl
cltd
ss
mov
call
jno
out
and
pop
jp
rcrl
lcall
add
fisttpll
les
enter
xchg
inc
and
leave
or
mov
fbld
pop
adc
nop
push
pop
and
popf
pop
pop
cmp
xor
cltd
push
pop
std
sti
lods
dec
mov
mov
out
pushf
lahf
fisttpl
cmp
inc
ljmp
inc
jno
lret
pop
dec
or
lahf
sub
ss
add
and
add
iret
cmp
imul
jo
adc
sbb
cmp
cmp
xchg
mov
clc
xor
inc
cmp
sub
jge
insl
pop
push
push
add
jnp
or
dec
sbb
or
xor
icebp
dec
testb
add
xchg
push
nop
out
push
mov
dec
divb
dec
testl
call
test
sarl
fimuls
ret
adc
mov
adc
test
mov
dec
enter
sbb
cmp
scas
xchg
xchg
push
mov
xchg
or
mov
pushf
loope
mov
inc
sub
pushf
sbb
mov
lret
popa
adc
mov
add
aad
stc
push
push
adc
mov
mov
es
mov
insb
aaa
ja
imul
jmp
in
mov
into
lods
add
adc
cmp
inc
fldt
aam
jo
stos
std
insl
cmp
lret
pushl
or
or
xor
mov
movsb
stc
sub
les
movsb
inc
xor
xor
cmc
pushf
and
mov
mov
xchg
idivl
inc
cmc
fistps
stos
daa
push
jb
ss
int
insl
sbb
mov
daa
mov
inc
push
mov
das
jo
xchg
fsubrl
dec
and
sbb
sub
dec
shr
mov
add
pop
outsb
cwtl
and
das
mov
int
inc
xchg
sbb
shrl
lea
fdivl
fstpl
inc
jo
ficomps
adc
nop
dec
cmp
push
jo
mov
inc
scas
sub
bnd
nop
sub
imul
xchg
test
test
mov
test
dec
cmpsl
push
mov
sbb
cmp
pop
pop
push
push
shll
mov
inc
mov
cmp
jo
ror
aas
fldt
jbe
mov
bound
vlddqu
repnz
ret
xchg
sbb
cmpsl
fidivs
shll
mov
push
and
pop
jmp
leave
imul
xchg
adc
inc
push
lock
sbb
roll
jle
rep
pushf
aam
outsb
insl
adc
push
mov
shlb
push
mov
gs
movsb
or
cmp
mov
and
sub
or
nop
cmp
mov
js
nop
or
sbb
sbb
cltd
dec
xchg
enter
push
sub
pop
in
rol
xchg
pop
jo
mov
nop
sbb
test
inc
cli
stc
sub
scas
xchg
jecxz
adc
inc
fwait
jecxz
push
sub
daa
or
enter
or
iret
lahf
cmpsb
sbb
je
push
je
clc
or
cmpsb
and
nop
jne
stc
test
enter
cmp
ja
das
pop
shrl
fnstsw
cmp
sbb
jmp
fldl
xchg
mov
outsb
push
lock
mov
add
cmp
lea
mov
addl
mulb
add
mov
adc
aam
sub
loope
icebp
push
mov
imull
and
pop
notl
fldt
jle
adc
and
pop
xchg
out
lcall
scas
nop
adc
sahf
aad
add
xor
inc
in
into
or
in
push
xchg
daa
jnp
xchg
lock
test
add
and
negl
or
outsl
imul
cmp
lods
adc
add
jb
sahf
fld1
cmovns
fdivrl
or
sti
xchg
iret
cmpsl
inc
rcll
mov
mov
insb
ja
sbbb
add
mov
repz
mov
ret
test
loop
dec
cmp
sbb
sbb
dec
incl
dec
pop
inc
imul
popf
daa
xchg
js
inc
inc
in
xchg
cmpsb
add
mov
lret
fidivs
push
xor
sbbb
xchg
rcl
out
lret
fistps
mov
jo
les
add
into
cmp
push
xor
xchg
lahf
faddl
test
cmpb
dec
inc
jae
pusha
punpcklwd
cmp
lret
aas
shlb
xchg
cmpsl
fstps
popf
ret
jg
out
push
mov
pop
int
nop
inc
jl
inc
inc
jecxz
mov
aas
add
inc
iret
scas
pop
sbbb
xor
xor
aaa
mov
sbb
xchg
out
out
lods
cli
lods
sub
mov
mov
xchg
into
pop
rcrb
jbe
push
adc
idiv
mov
ficoms
mov
pop
loopne
inc
loopne
icebp
jb
iret
in
sub
test
jne
pop
xchg
lods
cmp
dec
pop
sub
jle
mov
add
and
dec
sbb
pop
aam
scas
sbb
pop
nop
sti
pop
out
int
mov
movsb
enter
imul
enter
jno
fld
add
aaa
stc
push
xchg
mov
or
jl
hlt
push
adc
repz
xlat
gs
cs
cld
inc
cmp
loop
iret
jle
add
fst
popa
enter
stc
iret
push
xchg
cmp
ljmp
cmp
xchg
jnp
aas
pushf
les
enter
add
jmp
daa
std
orb
or
jo
stc
dec
xor
xor
dec
repz
sub
into
jns
movsl
cwtl
fistpl
inc
inc
cld
or
cli
je
fbstp
add
jno
adc
nop
out
cld
leave
loop
aad
adc
adc
enterw
or
cltd
out
in
in
mov
inc
add
test
add
mov
mov
jno
lret
rolb
cld
sub
shll
ljmp
pop
les
push
sbb
iret
imull
lods
adc
popf
xchg
mov
sub
xor
mov
loop
push
inc
mov
mov
dec
scas
movsb
lcall
test
aam
xor
mov
mov
sbb
push
xchg
xor
ror
cmpsb
mov
out
dec
fisttps
mov
outsb
aas
and
add
jb
cmp
je
jb
push
pop
add
lock
sub
cld
and
and
leave
push
cmpb
rcl
mov
or
repnz
cmpsb
mov
loope
cltd
mul
inc
shrb
adc
adc
xor
and
cmc
xrelease
push
lahf
mov
dec
lret
lcall
pop
rcll
aam
ret
test
xor
and
sbb
dec
jne
push
out
pop
jge
sub
into
loopne
in
sahf
bound
clc
adc
and
shlb
mov
shll
std
jbe
nop
pop
ret
push
sbb
bound
xchg
sub
push
inc
adcb
or
push
push
pop
add
jnp
ja
popf
cmp
ror
xor
xchg
aas
adc
xchg
sub
cmp
faddl
mov
mov
cli
loope
add
sbbb
lret
inc
xchg
insb
add
cmp
or
push
out
movsb
xlat
rcrl
hlt
mov
pop
push
sbbl
rclb
dec
or
pop
loop
mov
cmp
add
xor
push
call
lcall
xlat
jno
jge
shll
movb
cmpsl
cld
xor
add
jge
xchg
mov
xchg
faddl
ss
ret
ss
sbb
push
pop
jnp
mov
fwait
cmp
and
loop
cli
add
mov
dec
inc
std
shr
lahf
div
lock
ret
pusha
out
dec
dec
xchg
sahf
movsb
adc
mov
js
dec
in
xchg
orb
fdivrl
and
sub
xchg
or
sub
bndldx
enter
jne
in
sbb
addb
or
addb
push
cmp
jge
and
lret
dec
or
mov
jp
out
bound
loopne
or
add
inc
cmpsl
cmp
aas
leave
jl
int
outsb
lcall
push
outsb
loopne
std
pop
jne
mov
in
push
push
cmp
in
rorl
pop
push
scas
stos
loop
jae
inc
repnz
and
sbb
insl
icebp
jnp
or
inc
push
rol
loop
adc
mov
xchg
sbb
ret
push
testl
sbb
jg
jbe
push
repz
pop
bnd
sbb
jb
rolb
mov
add
outsl
or
cmp
cmp
shll
imul
cli
sahf
mov
cmp
jmp
andl
and
ret
jecxz
jae
repnz
inc
and
movsb
or
into
stc
pop
pcmpeqb
shl
test
push
sbb
jle
movsl
aad
leave
dec
and
sahf
inc
push
cmc
test
inc
outsb
shll
loope
arpl
mov
mov
cmc
dec
dec
inc
push
add
and
scas
or
cmc
fnsave
push
dec
roll
shl
sub
push
mov
daa
xchg
pop
mov
jbe
cmpb
adc
or
outsb
stos
sub
cwtl
fs
mov
dec
mov
fwait
outsl
test
add
adc
shr
andl
aaa
jl
out
jne
rcll
pop
incb
inc
mov
ljmp
in
inc
call
scas
sub
loopne
xor
stos
cmpsl
scas
cmpsl
adc
add
pop
pushf
dec
fcoml
push
scas
dec
mov
dec
movb
and
inc
xor
pushf
sbb
push
push
lods
adc
push
push
mov
leave
scas
filds
inc
outsl
add
rorl
mov
inc
das
cmp
xor
adc
js
ja
mov
adc
popa
push
adc
sub
fsubs
mov
and
rcl
inc
aad
lock
lods
mov
lret
loop
push
jns
sbb
stos
test
cmp
add
push
xchg
mov
jbe
mov
mov
mov
call
stc
push
xor
test
jne
sbb
imul
jmp
daa
jnp
adc
jns
sbb
out
mov
push
mov
cmp
add
stos
cmpsb
xor
les
stc
out
sub
and
sub
lret
sbb
daa
test
cwtl
sub
cld
imul
lcall
test
jle
push
cmp
dec
hlt
into
inc
ds
lret
push
push
jecxz
jle
adc
jle
dec
addr16
bound
icebp
fadds
fildl
or
scas
aam
or
sbb
cmp
jb
loopne
hlt
lahf
pop
imul
popf
cwtl
and
fsubrl
out
xchg
imul
xor
clc
and
in
sbb
rorl
in
arpl
jecxz
lahf
imul
int
add
fadds
jo
clc
pop
mov
xchg
inc
xchg
xchg
test
cs
repz
and
xor
fbstp
outsl
mov
fnstcw
sahf
fistpl
mov
stc
mov
sub
lret
mov
and
pop
out
ljmp
lds
push
xchg
ss
inc
arpl
jcxz
ljmp
fisttpll
adc
dec
inc
in
dec
mov
testl
scas
rcll
pushf
fldl
xchg
movsl
pop
mov
pop
in
js
and
andb
mov
jns
cmp
sbb
mov
das
shl
addr16
lock
fcomip
jne
out
xor
xchg
push
push
pop
pop
push
xchg
bound
push
jnp
xor
sub
addr16
aaa
dec
and
jbe,pt
scas
push
dec
inc
mov
dec
add
jp
dec
push
outsl
loopne
pop
icebp
cmp
scas
rolb
xchg
xchg
movsl
jbe
adc
jp
icebp
cmp
cld
out
std
aas
mov
out
movsb
mov
inc
jnp
hlt
sbb
lods
pushf
sub
sti
cld
xchg
push
and
data16
fadds
sbb
xor
pusha
and
mov
push
std
out
or
pop
dec
dec
xor
xor
movsl
add
mov
es
les
sahf
icebp
xor
aam
xor
jg
push
jl
outsl
cwtl
jne
mov
outsl
dec
jb
push
mov
std
jno
mov
fidivs
in
jge
sbb
mov
xchg
xchg
adc
jne
dec
aam
dec
add
sbb
fsubs
fldlg2
dec
dec
mov
and
adc
jmp
mov
movsb
notb
sub
push
jle
imul
fnstenv
movl
sti
add
imul
inc
lods
push
xchg
fimuls
push
jbe
fists
adc
xor
jge
adc
lods
nop
lcall
adc
cs
pop
das
push
scas
andb
pop
xchg
rcrb
test
int3
or
fdivr
jmp
jmp
aas
pop
flds
testl
xchg
mov
cltd
jl
xlat
into
push
pop
mov
enter
dec
inc
aad
inc
rorb
pop
ljmp
dec
flds
inc
inc
or
std
ds
or
jnp
mov
mov
lret
les
mov
jle
popf
test
push
mov
mov
sbb
clc
test
aaa
push
add
mov
sbb
jecxz
pop
inc
cmp
pop
add
sub
popl
flds
mov
push
insl
mov
outsl
inc
and
popa
push
adc
push
pop
fcmovnb
scas
pop
movsl
and
and
ja
jp
xor
inc
shl
dec
pop
sub
bound
rolb
jno
clc
je
cmc
mov
dec
sbb
jge
xchg
cmp
jp
jle
jns
mov
jge
pop
outsl
cld
sub
leave
mov
mov
out
sahf
mov
push
test
xlat
fwait
mov
xor
adc
lock
and
out
adc
add
xchg
scas
or
in
pusha
addb
jbe,pn
fwait
jne
push
call
fiaddl
addr16
mov
lea
mov
cmc
cwtl
jl
fisttpll
xor
shll
adc
jmp
and
outsl
xchg
and
mov
xchg
inc
and
adcl
scas
and
iret
int3
xchg
sbb
pop
test
fisubs
inc
sub
roll
jns
pop
fisubs
cmp
call
inc
fldcw
dec
lods
aaa
addb
pop
sbb
dec
mov
mov
jg
inc
scas
hlt
sbb
mov
inc
arpl
cmpl
sbb
mov
loop
or
movsb
lcall
cmp
mov
jmp
dec
sbb
adc
cmpl
insb
scas
add
xor
jg
std
icebp
das
lods
aam
push
mov
std
push
ljmp
jae
jl
stc
imul
adc
jo,pt
in
in
daa
push
std
dec
add
into
lahf
enter
xchg
jmpw
shl
cld
jmp
sub
jns
jecxz
movsl
aad
and
push
jns
inc
int
xchg
pop
mov
push
mov
inc
aas
pop
clc
test
cltd
push
subl
rcrl
subl
cs
stos
xchg
popf
push
jp
adc
mov
mov
std
jae
cmpb
rclb
adc
push
fnsave
pop
xchg
push
sub
sar
jne
mov
fisttps
inc
lahf
imul
push
cmp
mov
stc
jns
xchg
test
popa
sub
or
bound
xor
xchg
jnp
mov
hlt
xchg
fnsave
push
mov
stc
cld
lcall
test
scas
leave
xchg
test
mov
jp
fsubl
sbb
in
stc
jmp
xor
lds
fcom
dec
xor
in
testl
call
out
push
popf
dec
imul
and
rcl
mov
adc
ret
adc
ja
loop
and
mov
mov
sti
cmp
fisttpll
test
sub
imull
push
js
cwtl
shlb
sbb
js
movsl
repnz
stos
arpl
not
loope
and
sub
or
movsl
mov
in
ret
ret
pop
mov
pop
or
push
mov
addr16
or
jmp
stos
push
loope
sbb
cmpsb
xor
stc
scas
jl
xor
cs
loope
mov
push
adc
imul
mov
pop
pop
pop
mov
or
mov
mov
insb
ljmp
stos
push
mov
mov
les
out
cmpsb
xchg
mov
and
in
xchg
adc
stos
jb
sbb
hlt
add
aad
jecxz
in
xchg
jae
into
jb
test
mov
xor
push
into
push
dec
insl
push
add
xchg
cmp
inc
jbe
mov
bound
hlt
sub
icebp
mov
stos
cmpsb
jp
cmp
mov
out
add
xor
pushf
and
es
push
cltd
int
aas
sbb
inc
pop
shll
sbb
or
add
in
sbb
gs
xor
xchg
mov
xchg
addb
mov
imul
cmc
shlb
pop
dec
add
xchg
dec
mov
jns
push
movsb
push
mov
hlt
aam
dec
pop
lea
xchg
lea
push
ljmp
inc
stos
ljmp
aam
mov
and
xchg
inc
popf
jb
pop
stc
mov
or
popa
std
jae
ja
and
sti
mov
push
jb
enter
mov
movl
leave
inc
jbe
pop
out
bound
xor
decl
aam
mov
lahf
mov
sub
popf
dec
cmp
or
adc
daa
aas
mov
jnp
je
pop
inc
scas
stc
sbb
loope
xchg
aas
idivb
into
popa
loopne
adc
xor
jg
dec
mov
cmp
stos
test
nop
inc
fistpll
lock
mov
pop
lock
pop
push
sub
in
pop
pop
movsb
stos
cmc
mov
xor
and
mov
pop
dec
inc
movl
loopne
fildl
xor
mov
or
mov
daa
adc
stos
mov
lods
mov
std
fsin
inc
fists
sub
xor
mov
cmp
clc
inc
pushf
cmp
cmp
popa
inc
rcll
pop
xchg
mov
addr16
or
cmp
jmp
xor
imul
insb
sbb
jno
clc
jle
je
xor
sbb
sub
jp
xchg
add
out
dec
jns
test
rol
scas
add
add
and
sarl
or
stos
leave
lret
push
lahf
cwtl
andl
dec
sarl
add
adcl
push
aas
gs
or
mov
mov
sub
dec
push
in
cmp
inc
push
mov
inc
daa
mov
out
pusha
and
ror
ja
mov
pop
sbb
mov
mov
out
jbe
lds
je
out
fs
add
xchg
insb
jno
push
popf
xchg
sbb
sbb
jge
cmp
mov
das
int3
pop
push
fs
add
dec
dec
negb
jmp
xchg
arpl
test
sti
ret
int3
adc
push
fdivp
or
or
adc
loopne
inc
sub
inc
ret
rol
jp
sbb
mov
rol
cmpsl
add
jecxz
inc
nop
mov
xchg
into
sbb
inc
into
pop
ss
mov
adc
jae
repz
adc
jbe
iret
dec
outsl
aas
ljmp
in
adc
flds
mov
mov
movsl
jl
stos
push
and
jge
ds
sub
mov
push
vpaddusw
dec
mov
dec
jns
jmp
std
popf
jecxz
sahf
cmp
sub
jp
xchg
lahf
imul
mov
rcl
das
stos
pusha
pop
jns
subl
bnd
pop
inc
jb
les
lret
stos
lcall
icebp
jb
sub
dec
mov
sbb
cmpsb
mov
gs
mov
xchg
int3
inc
sbb
int3
jmp
and
and
inc
addb
mov
mov
jmp
jno
add
roll
das
in
mov
lods
and
or
jae
in
jle
push
jecxz
subb
mov
xchg
rclb
jmp
jnp
sti
scas
jb
pop
inc
adc
push
in
stc
mov
xor
mov
jmp
inc
inc
xchg
out
push
add
pusha
mov
fmuls
push
into
dec
push
insb
pop
sub
cmp
in
pop
popf
sbbb
fisubl
mov
push
mov
in
cmp
loope
jge
push
sub
mov
dec
adc
push
mov
addr16
test
addr16
and
ljmp
incb
mov
gs
sbb
repnz
sbb
cmp
adc
sbb
fwait
adc
jge
and
in
xchg
loope
dec
test
pop
loope
push
cwtl
divps
ja
enter
outsl
loope
cmp
sti
jl
fdivrp
mov
ja
jp
and
data16
ficoml
dec
ss
arpl
sub
xchg
scas
mov
imul
push
xchg
push
sar
out
pop
scas
sub
pop
xlat
inc
or
inc
inc
ss
pop
sub
enter
pop
push
push
pushf
cmc
push
push
cltd
cmc
jecxz
jbe
mov
lret
mov
roll
add
cmc
ljmp
xchg
sbb
mov
cmp
xchg
ret
add
fldt
lret
int3
xchg
ret
fs
jle
outsb
addr16
lea
add
sub
or
rol
outsb
xchg
movsl
push
xchg
jae
dec
jns
xor
jg
sub
xchg
in
call
push
lret
mov
pop
dec
adc
notb
cltd
pop
aad
lcall
arpl
lahf
imul
fsub
sbb
in
js
cwtl
es
jecxz
push
jno
movsb
cmp
push
aam
std
push
cmp
js
cmp
mov
hlt
iret
sub
outsb
jle
bound
sti
inc
cmp
mov
pop
jb
imul
cmc
outsb
or
xchg
or
movsl
test
inc
mov
pop
xorb
popf
pop
jle
cmc
outsb
jae
outsl
xchg
sub
gs
pop
rorb
xchg
or
jmp
icebp
mov
loope
dec
add
mov
jbe,pn
inc
jecxz
test
cmp
mov
pusha
jge
pop
jns
xor
dec
jge
cwtl
jo
or
dec
mov
mov
cmpb
inc
push
lods
and
in
hlt
jg
test
and
or
stos
je
les
rolb
enter
outsb
xor
test
rorb
sahf
jns
jnp
jne
and
sti
fistl
jb
or
nop
je
out
push
int
out
in
cmp
adc
inc
add
mov
jb
xchg
sarl
addr16
mov
aaa
push
xchg
xchg
and
mov
and
subb
push
and
daa
sarb
push
jne
inc
fmul
das
cmpsb
das
movl
fs
test
add
imul
mov
and
pop
mov
mov
incb
iret
fwait
dec
shl
pop
fwait
out
fs
push
and
pop
sub
adc
rclb
test
arpl
adc
icebp
sarb
mov
icebp
mov
mov
rol
jbe
repz
loop
nop
data16
lods
push
mov
jbe
and
sahf
xchg
ss
dec
fwait
push
adc
push
lods
xchg
dec
or
jno
jae
test
pop
je
hlt
stos
out
stos
xor
xor
jg,pt
push
aas
dec
out
mov
rol
fwait
xorb
sbb
hlt
sti
out
fdivrs
jecxz
iret
push
repnz
outsb
jecxz
xlat
jmp
shlb
push
addb
or
mov
data16
dec
into
cs
jae
or
adc
cmc
data16
inc
push
ljmp
faddl
cmp
lahf
push
repz
mov
test
sub
lea
adc
inc
testb
or
mov
mov
leave
jb
or
and
mov
sbb
sahf
les
mov
gs
sub
roll
or
mov
sahf
cmpsb
lret
pusha
inc
stos
addr16
repz
pusha
movsl
xchg
lock
and
pusha
dec
repz
add
mov
inc
mov
shrb
lods
mov
repz
int3
push
ret
xor
mov
jg
mov
xchg
sub
dec
in
mov
jbe
iret
int
test
out
movsb
dec
push
daa
pop
orl
ss
mov
lods
mov
int3
pop
dec
mov
inc
js
scas
rcrb
pop
fs
xchg
or
dec
push
cli
mov
lahf
imull
ficoml
xchg
push
scas
pop
ficoml
ja
repz
pop
not
es
xchg
xorb
ljmp
int3
dec
shlb
xor
pop
test
stos
aas
xorb
fcmovnb
outsb
fwait
adc
dec
loopne
dec
testl
dec
insb
pop
shll
or
ljmp
cmp
mov
sub
lods
jno
xor
mov
dec
sbb
sbb
xchg
sbb
scas
cmp
xchg
clc
mov
sbb
mov
cmp
inc
pop
or
stos
mov
mov
imull
sbbb
dec
and
ja
xchg
sti
cmp
movsb
push
ljmp
pop
das
imul
lea
jo
imul
imulb
sub
jle
cmp
cmp
jp
fdivl
rcll
jg
imul
leave
js
fadds
inc
lea
sub
repz
add
jo
xor
into
outsb
imul
sbb
mov
mov
cmp
subb
inc
icebp
std
sub
nop
lods
push
loopne
pusha
mov
pushf
loope
xor
sub
incb
lahf
adc
inc
inc
enter
mov
mov
outsb
inc
pop
xchg
testb
add
fidivrl
xchg
scas
or
ficoml
mov
xor
jne
cmpsb
pop
jp
mov
pusha
and
in
fwait
sti
shrb
mov
sbb
stc
int
cld
push
shll
fimull
imulb
fildl
cmp
push
icebp
rcrl
mov
push
jle
mov
out
sbb
fsts
imul
sub
addr16
and
mov
xchg
jp
pop
pushl
push
dec
bound
test
dec
jle
jecxz
leave
jae
sahf
loopne
sbb
lea
leave
inc
xchg
push
add
addb
push
out
pop
cmp
cs
imul
imul
out
popa
adc
or
jae,pn
and
xor
out
push
push
in
sbb
xor
test
int3
sbb
bound
pop
repz
cmp
lock
mov
dec
mov
mov
sub
adc
lahf
pop
out
or
fcomps
jecxz
mov
mov
push
scas
mov
test
arpl
pop
xchg
adc
das
push
push
frstor
inc
push
xlat
pop
out
cmp
xchg
subb
push
test
xchg
push
loopne
mov
lea
and
mov
xchg
push
out
push
sub
xchg
push
and
cmp
arpl
mov
dec
sti
sub
out
or
mov
cmc
mov
decl
lods
dec
xor
pop
popf
dec
fidivs
bound
das
lods
faddl
push
add
adc
pop
cmpsl
xchg
sbb
mov
aas
aad
xchg
inc
push
adc
xor
cmp
movsl
loop
or
incb
cmp
mov
call
cmp
or
shll
outsb
scas
jno
push
or
repz
sbb
cmpsb
sbb
cmp
push
dec
mulb
cmp
dec
popf
fstps
ret
jae
xchg
cmp
insb
adcb
das
inc
hlt
inc
repnz
mov
and
sbb
adc
add
push
iret
bound
xchg
mov
ljmp
ficompl
adc
inc
push
cmp
push
bound
fstps
and
mov
pusha
pop
jmp
inc
or
sbb
sbb
stc
push
lods
mov
lds
repz
xchg
fidivs
subl
fldcw
ds
push
push
cld
es
lds
mov
cwtl
repz
sub
jmp
out
sbb
test
and
xchg
and
xchg
cwtl
xor
push
lcall
mov
cmpb
dec
xor
jo
push
imul
mov
push
nop
jmp
adc
fwait
movsb
fcmovnu
and
fiadds
lock
xchg
inc
cmc
pop
hlt
mov
and
movsb
lods
stc
sub
stos
scas
sbb
dec
mov
add
repz
push
cmp
jge
cmp
psubb
adc
inc
clc
lahf
std
mov
movsl
push
in
cld
dec
cmpsl
imul
sub
insl
mov
lock
push
fwait
cmpsb
dec
repz
sub
add
lds
cmpsb
sbb
call
xlat
cli
cmp
pop
cltd
scas
jl
mov
sub
shlb
cmc
adc
in
jb
mov
lret
pop
mov
rclb
sub
in
jecxz
jge
imul
test
dec
aaa
inc
xor
lret
mov
out
mov
bound
int
mov
adc
xchg
fnstenv
out
loope
pop
sahf
xor
pop
movsl
xor
dec
dec
rcrl
in
push
xchg
mov
pusha
lock
loop
sbb
pop
xlat
add
sbb
fldl
jmp
bound
je
xchg
inc
xor
out
aas
popf
push
in
enter
arpl
mov
loope
ret
and
ret
xchg
scas
pushf
call
ret
roll
ficoml
jp
dec
mov
push
xlat
xor
fcoms
push
pop
dec
in
xchg
push
js
cmp
pop
adc
pop
mov
sahf
pop
sahf
jmp
das
mov
mov
xor
cli
and
sbb
mov
pop
movl
xlat
xchg
push
fs
insl
or
cld
xor
mov
imul
jnp
mov
cmp
push
cmp
insb
mov
push
fnsetpm(287
jg
mov
dec
scas
arpl
addr16
mov
mov
xchg
mov
jns
and
dec
popl
lahf
daa
mov
sti
cmp
int
xchg
jecxz
int
int
push
lods
mov
scas
stos
out
jge
cmpsb
cmpsb
test
enter
fcoml
and
xlat
sub
cmp
gs
push
loope
mov
mov
and
pop
push
icebp
addr16
xchg
mov
mov
pop
repz
loopne
push
and
repnz
mov
rcrb
mov
lcall
adc
jb
ficompl
dec
cs
out
jae
adc
push
pop
rol
pop
inc
loopne
push
fbstp
inc
scas
outsb
and
loopne
ror
mov
icebp
mov
push
xchg
adc
outsb
sub
and
in
and
cmp
xor
pop
dec
sub
mov
or
mov
inc
sub
iret
mov
jnp
nop
scas
out
jb
lea
sbb
cs
pop
lds
pop
popf
xor
scas
cli
test
mov
mov
mov
adc
out
cli
jge
cmpb
lods
add
loopne
pop
outsl
stos
into
cmpb
xchg
and
cld
clc
xor
in
imul
lcall
adc
lret
mov
mov
subl
mov
jo
cmp
in
inc
pop
xchg
mov
cwtl
pushf
mov
fsts
in
and
in
xor
in
mov
xlat
popf
mov
enter
xor
mov
pop
icebp
sub
cli
mov
testl
bound
jns
mov
push
fsubrl
aaa
mov
fwait
mov
fstpl
negl
loopne
mov
jle
pop
test
mov
lahf
loopne
jge
cld
std
aaa
xchg
jmp
fildl
fimull
and
or
frstor
dec
and
insb
mov
pop
push
les
loopne
fs
pop
fdivr
shll
mov
ds
movsl
cmp
jno
test
adc
js
jne
or
xor
sbb
or
mov
mov
jp
mov
sub
jg
push
or
lret
xor
mov
test
mov
push
add
add
xlat
inc
mov
dec
out
pop
dec
test
push
xor
and
jp
cwtl
push
das
push
cmp
jle
sbb
jmp
lods
inc
je
cmpsb
dec
mov
and
or
dec
mov
inc
stos
aam
clc
fbstp
mov
push
daa
sub
fcmove
sti
mov
pop
movsb
add
and
stos
mov
dec
aam
cmp
pusha
lea
test
hlt
mov
and
jg
and
cmpsl
mov
inc
xor
mov
sbb
inc
bound
xor
jo
or
pop
lock
stc
hlt
mov
and
mov
add
hlt
fdivrs
mov
fstl
pusha
mov
cld
rorb
mov
popf
mov
mov
out
das
push
int
in
outsb
aaa
add
inc
xor
outsl
add
inc
loop
jnp
or
popf
rolb
xchg
cli
push
cmp
mov
adc
orw
insl
test
inc
shll
nop
popa
mov
push
xor
add
push
in
and
or
xor
xchg
pop
std
push
popa
outsb
mov
sub
das
fnstsw
ror
pop
jp
or
mov
xchg
mov
outsb
or
adc
fmul
lds
loope
push
cmp
push
mov
cmpl
popa
mov
jns
xorl
movsb
dec
adc
popa
cs
dec
jmp
lea
sbb
mov
std
les
test
inc
mov
adc
jnp
cmc
pop
lahf
fists
push
push
add
sub
pushf
and
cmp
test
inc
adc
jnp
jbe
rolb
shl
push
push
shrl
dec
out
xor
in
les
mov
aas
out
cmc
dec
add
mov
ficomps
std
iret
iret
cld
imul
dec
es
pop
ja
daa
sub
xchg
lods
lea
imul
bound
and
jmp
mov
stos
imul
negb
mov
cmp
imul
cmp
aam
insb
or
jg
mov
inc
adc
cs
jb
je
push
push
mov
xchg
lret
leave
int
cmp
xor
sub
stos
pop
xchg
call
push
xor
mov
daa
aam
lcall
ds
add
xchg
iret
fidivs
jbe
lret
xchg
sbb
shl
in
daa
mov
jg
xchg
mov
arpl
sub
stc
push
pop
popa
jbe
sarl
pop
andnps
movsl
jg
inc
test
push
pop
sub
fmull
sub
fstps
push
dec
pop
or
test
push
or
lahf
mov
cwtl
add
pop
mov
aad
jae
pop
sbb
xor
xor
loope
cmp
pop
dec
push
enter
outsb
push
jb
jg
adc
sbb
and
inc
mov
add
cmpsb
xor
mov
add
cld
push
jecxz
mov
stc
fwait
iret
pop
pop
js
arpl
pusha
mov
push
aas
or
outsl
push
jo
mov
lret
mov
cmp
hlt
fnstsw
add
jle
testl
rcrb
cs
mov
push
and
jb
fsubl
mov
dec
lds
dec
out
xchg
bound
pop
mov
daa
push
ret
or
dec
ljmp
add
in
scas
test
loopne
pop
and
jnp
test
jno
and
enter
cmp
mov
push
jno
xchg
mov
inc
cmc
ja
gs
cmpsl
or
jecxz
dec
add
loop
xor
dec
push
out
push
and
faddl
mov
pop
add
int
int3
xchg
pop
enter
data16
daa
pushf
add
sbb
addr16
ja
fldenv
stc
int
sub
inc
push
aaa
aam
adc
jae
gs
xchg
and
cmc
sbb
das
mov
sub
fwait
aaa
add
pop
xchg
fs
and
leave
dec
inc
add
pop
pop
cmp
lock
fmuls
mov
cmpsl
insl
data16
les
sub
cs
add
leave
aam
ja
push
test
mov
outsb
xchg
ret
dec
or
xchg
andb
pop
sbb
lret
mov
outsb
xlat
scas
push
mov
sti
popa
fimuls
lods
xor
jmp
lret
sarl
arpl
sbb
add
nop
pop
orb
sbb
mov
jae
shrl
push
adc
out
out
xor
out
fnsave
enter
fs
inc
in
mov
outsl
and
pop
mov
jg
test
pop
pushf
popf
out
adcb
fwait
aad
fildll
jns
imul
push
lcall
loope
jae
stos
inc
pop
dec
sub
mov
mov
jecxz
adc
icebp
cmp
test
jl
aam
stc
ja
shll
inc
test
cmp
and
jmp
hlt
jne
imul
stc
je
clc
cmp
add
sbb
fbld
sub
call
andb
movsb
xchg
xchg
rcr
xor
repz
imul
stc
orb
push
adc
add
mov
test
sub
dec
arpl
and
and
mov
outsb
push
lcall
ja
push
jl
repnz
in
or
mov
push
lahf
pop
daa
hlt
negb
pop
push
adc
aaa
mov
mov
cli
in
shrb
ljmp
scas
adc
lods
fsubs
imulb
jbe
pop
gs
cmp
enter
outsb
pop
adc
jno
xor
int3
xchg
push
jo
cmp
sub
and
sub
sub
fistpl
fcmovnb
jb
mov
dec
insb
and
push
or
loopne
jl
sbb
bound
add
sub
out
or
mov
mov
adc
inc
jns
cmp
daa
jp
test
into
mov
pushf
xor
scas
rclb
stos
scas
cwtl
push
dec
dec
mov
pop
push
lods
rol
xchg
mov
repz
movsb
push
mov
push
iret
jmp
jmp
pop
sub
test
nop
rorb
push
mov
fisubl
out
out
scas
out
loop
cld
push
fcmovnu
dec
das
loopne
xor
xchg
adc
repz
xchg
push
inc
sbb
jl
xchg
mov
imul
sbb
jns
je
leave
mov
shr
aad
mov
insl
fcoms
pushf
and
bound
xchg
xor
or
insb
data16
cltd
or
dec
and
leave
jg
xor
sti
pop
xchg
xchg
jg
pushf
cmp
insb
inc
sti
sbb
cli
dec
std
loopne
sbb
loopne
jae
jp
adc
arpl
rcr
xchg
cmp
fucomip
jo
loopne
mov
pushf
outsb
cs
or
and
dec
xchg
pop
or
mov
lret
notl
push
cltd
jo
push
rcll
mov
xlat
cmc
mov
outsb
xor
into
icebp
bound
and
in
in
nop
cltd
inc
aas
testb
dec
jle
xor
loopw
les
cs
fdiv
mov
out
mov
rcr
shlb
data16
test
dec
pop
je
aaa
inc
mov
cmc
loop
sub
ljmp
push
push
add
fidivrs
cmp
mov
inc
inc
sbb
sbb
jo
cmp
push
dec
sub
mov
arpl
xchg
adc
dec
bound
ss
adcb
orb
push
jae
jmp
push
imul
add
mov
push
sub
in
inc
mov
fidivl
rclb
movl
ljmp
jno
push
mov
or
int
ja
stos
add
test
cmp
mov
stos
xor
es
sti
push
insb
cmp
cmpsb
push
jns
push
or
jg,pt
ja
decl
sbb
popa
or
into
lods
cwtl
inc
and
test
and
push
or
dec
mov
shll
mov
sub
xchg
outsl
fimull
adcl
test
fsubrs
pop
and
mov
jmp
dec
outsb
imul
mov
add
xor
push
aam
bound
scas
and
inc
addr16
pop
int
pop
jle
jo
push
adc
cld
in
adc
cmp
add
xor
jnp
aad
dec
jge
jmp
daa
cmpsb
fstl
or
scas
push
pop
out
sub
xchg
jno
in
bound
notb
add
ret
fsubrs
lods
jbe
jno
add
lret
dec
les
cmp
mov
add
into
mov
pop
mov
jge
lds
xchg
cmpsl
inc
les
dec
xchg
xlat
add
or
in
jge
dec
or
shrl
mov
mov
aam
mov
lret
gs
mov
or
fldenv
mov
jl
mov
jecxz
pop
adc
in
out
push
repnz
jecxz
cwtl
pop
or
test
push
fcomps
pop
or
pop
xchg
jg
fistpll
or
imul
jno
out
or
push
pop
add
mov
clc
int3
xchg
sbb
mov
cmp
lret
mov
stc
fsubl
fsubp
flds
mov
mov
mov
cmp
push
repz
ficomps
imul
jb
jne
fsubl
lock
sub
in
popa
dec
loope
into
jnp
divb
repz
mov
mov
test
xchg
xchg
jp
iret
xchg
jne
inc
out
int3
inc
int3
out
and
push
sub
incl
sub
daa
test
jae
pop
cmpsb
jge
js
sub
adc
insl
mov
pusha
insl
xchg
mov
stc
jecxz
fdiv
mov
add
fs
fwait
xor
pop
in
nop
add
shll
inc
cs
cld
cmp
loopne
js
inc
add
shrl
pop
and
push
push
mov
dec
mov
out
std
stos
nop
dec
push
fistl
fldcw
sbb
pushf
scas
push
div
notl
mov
pop
loope
shlb
loopne
inc
mov
or
push
jno
jo
idivl
sub
pushl
xor
add
into
inc
cmp
mov
cwtl
iret
xor
std
add
jp
cld
and
or
dec
les
mov
rcll
mov
push
mov
loope
pop
data16
sbb
out
inc
xchg
int3
rorb
fcoms
loop
cmpb
cli
das
cmc
jnp
push
inc
mov
sbb
dec
xorl
ja
adc
mov
in
shll
jo
loope
aaa
pop
in
jnp
out
jmp
subb
adc
xchg
add
sub
jp
mov
das
and
push
push
movsl
mov
xchg
mov
jnp
xor
mov
sub
sahf
jl
lret
loop
movsl
pop
push
fildll
cmpl
and
cmc
mul
test
rolb
lret
out
jp
insb
or
xor
jmp
adc
adc
or
mov
stc
jmp
mov
test
lods
dec
out
jnp
add
aaa
movsl
push
ds
jnp
mov
cmpsb
cli
cmc
push
add
rorb
mov
add
lahf
pop
stc
cmp
xor
rcr
cmc
outsl
lcall
xor
std
cmp
pop
test
insb
add
mov
xor
adc
aad
mov
push
fcmovnbe
rorb
out
orl
mov
gs
pop
cmc
sbb
iret
or
mov
imul
int
sub
aas
repnz
in
mov
sub
movsb
test
inc
jns
xchg
movsb
or
pop
pop
je
jge
mov
into
shr
test
repz
es
push
xor
cmp
mov
mov
jle
out
fs
sub
aaa
jecxz
adc
inc
cmp
jp
xchg
rorb
loopne
inc
das
and
xor
imul
sub
subl
aaa
inc
out
and
fldl
mov
inc
call
mov
ss
mov
aad
push
mov
jo
fwait
ret
push
xchg
fstl
loope
jae
fcomps
push
add
or
xchg
dec
push
pop
mov
xor
pop
bound
cmpsl
scas
in
stos
in
inc
es
mov
pop
mov
jno
subl
and
repnz
sbb
loope
or
xor
add
pushf
sbb
andb
in
andl
or
stos
and
push
mov
jnp
out
gs
loope
mov
or
xchg
stc
fucomp
dec
subl
popa
and
loop
push
sub
lret
dec
int
and
jb
fisubrs
fdivrl
jns
mov
popf
ljmp
sbb
push
movsb
jno
stos
push
sub
push
icebp
xlat
pop
jo
lret
push
sub
pop
les
pusha
jp
add
push
stos
sub
or
mov
pop
cltd
mov
iret
xlat
mov
xor
and
adc
stos
add
jns
xlat
mov
mov
jmp
inc
rclb
xchg
mov
aad
in
inc
add
adc
xor
ljmp
pop
mov
jl
ss
aaa
cs
rcrl
or
jmp
pop
les
xor
imul
xor
sbb
stos
sub
push
sti
je
jmp
ret
inc
insl
std
cs
jp
inc
sbb
fiaddl
adc
xchg
xchg
pop
mov
test
jno
sbb
and
mov
gs
leave
pop
push
leave
adcl
or
dec
lahf
rolb
mov
ds
out
xchg
add
jnp
cmp
mov
repz
scas
inc
jb
rorl
cmp
cli
or
je
rclb
push
and
mov
iret
jns
ds
mov
add
mov
xor
xor
mov
mov
jo
pop
out
popa
fidivrl
into
mov
and
xor
mov
jno
cwtl
mov
pop
add
stos
sbb
icebp
mov
inc
jae
pop
sub
inc
add
scas
jp
mov
sbb
xchg
adc
loopne
iret
dec
out
mov
mov
ljmp
aam
adc
xchg
test
daa
insl
shld
int
xor
rcrb
cld
xor
xor
inc
pop
aad
jnp
xchg
mov
xlat
mull
push
push
cwtl
int3
ret
sbb
ror
dec
xchg
cmp
adc
dec
gs
outsl
add
sbb
and
add
lcall
push
add
xchg
icebp
pop
movsb
push
inc
sbb
xor
dec
mov
test
pushl
fs
jnp
fldl
lods
mov
or
stc
mov
addl
push
add
jnp
es
out
xor
push
add
popf
repnz
out
dec
sbb
out
insl
jne
je
icebp
xlat
lods
rorb
xchg
jo
xor
lods
iret
cmpsb
cmc
push
aaa
cmpsl
int
push
mov
je
inc
int3
lds
ljmpw
pop
mov
scas
dec
inc
xor
scas
or
idivb
push
or
push
sbb
sub
rorl
cmpsb
mov
mov
and
push
cltd
jecxz
arpl
orb
cmp
imul
jae
jge
repz
popf
lds
leave
mov
icebp
sbb
mov
fnsave
xor
xlat
mov
out
push
enter
push
mov
pop
adc
iret
jb
arpl
das
in
push
popf
push
pushf
xchg
and
scas
call
add
push
jns
push
je
pop
sbb
cmpsb
add
push
lret
rcll
ds
sahf
es
js
jp
mov
scas
hlt
mov
imul
xor
sub
scas
xchg
je
inc
stos
cli
cs
jp
cs
out
add
jne
and
cmp
or
push
mov
push
jnp
xchg
in
fsubrl
mov
and
mov
idiv
iret
add
mov
xorl
mov
lds
in
jo
push
pop
xlat
popa
enter
adc
xchg
jne
lock
mov
jmp
or
cli
mov
xchg
jne
push
and
loop
jmp
xchg
mov
jne
xor
add
adc
xlat
mov
mov
dec
mov
adc
push
nop
push
xchg
jbe
add
xor
hlt
adc
pop
loope
aad
sbb
into
test
xchg
dec
lods
mov
and
stos
adc
out
mov
sbb
cmp
jmp
inc
mov
jmp
in
lods
and
mov
pop
inc
push
out
pushf
push
insl
xchg
pop
sbb
jae
test
in
scas
or
sahf
sub
sub
loopne
inc
pop
ds
ret
leave
mov
stos
mov
jne
popf
call
pusha
sub
outsl
mov
dec
mov
ret
sahf
outsl
int3
mov
lret
jecxz
push
or
int3
sub
cmpsl
push
js
imul
mov
xchg
mov
mov
jp
rorb
sbb
or
push
lock
xor
jae
addl
mov
pmaxub
dec
and
aaa
jle
push
pop
pop
jmp
pusha
clc
ret
insb
mov
xor
mov
lcall
fildl
int3
andnps
cmc
ret
jns
insb
sub
lds
pop
es
pop
outsb
mov
sbb
lret
in
xchg
nopl
mov
mov
cld
pop
insb
std
jle
mov
lret
int3
sbb
repnz
stos
or
jg
xor
or
pushw
test
pop
outsl
sub
in
iret
xchg
daa
pushf
adc
ret
out
push
adc
push
icebp
mov
pop
mov
in
arpl
adc
std
jg
adc
into
jb
jo
xor
push
addr16
pop
mov
inc
daa
pop
push
nop
push
mov
and
mov
fdivrl
mov
and
mov
mov
jb
test
lcall
and
push
lock
ja
mov
rcrl
test
stc
aas
popa
sbb
sbb
add
push
xchg
pushf
xchg
imul
cmpsb
lods
mov
sub
ljmp
scas
cld
jmp
popa
std
fwait
mov
fstpl
push
mov
adc
xchg
and
cmp
or
scas
lods
pop
inc
push
ja
cmpsb
jge
test
pop
sbb
fisttpl
xchg
mov
stos
scas
fsts
xchg
add
pop
data16
mov
lods
jbe
pop
xor
mov
dec
pop
and
mov
shlb
out
sbb
shl
cmp
push
cld
cli
aam
in
jmp
xor
lcall
rolb
and
loope
add
cmp
mov
push
xor
int3
push
aad
cmp
inc
lock
imul
mov
push
and
xchg
pop
maskmovq
mov
or
pop
mov
int
jne
lret
cli
fdivrl
add
dec
lods
fs
imul
cwtl
xor
push
or
insl
push
xchg
adc
sub
or
mov
push
mov
ss
xchg
mov
sar
ret
mov
dec
fwait
roll
shr
jecxz
shrb
xor
sbb
ljmp
push
insb
ss
cmpsb
and
adc
scas
cli
scas
int3
shll
and
xlat
xchg
mov
je
out
push
out
inc
outsl
dec
sbb
mov
into
or
js
jl
call
push
pop
cmpb
scas
jge
shll
inc
or
push
sbb
insl
popf
movsl
mov
js
and
fisttpl
xor
nop
mov
mov
dec
leave
lret
inc
push
sbb
push
sbb
xchg
fsubrl
je
dec
fwait
pop
out
mov
pop
sub
dec
pop
lcall
sbb
and
dec
mov
sti
int
in
mov
data16
mov
sub
and
jae
lods
popf
xor
xchg
seto
mov
lods
rcr
adc
orl
cwtl
add
mov
jo
aad
es
cwtl
push
pop
sub
mov
or
loope
sbb
loope
fwait
mov
cltd
mov
mov
xlat
add
and
pop
adc
loopne
scas
mov
xor
jb
aam
and
dec
cbtw
add
and
inc
pop
jne
mov
dec
sbb
and
dec
xchg
cltd
mov
or
inc
cmpsl
pushf
cmp
in
sti
gs
mov
std
push
and
clc
pop
sbb
lea
mov
jae
stos
sbbl
push
fisubs
cs
subb
dec
xchg
or
dec
pushf
cli
or
rcl
out
clc
je
test
hlt
inc
mov
xchg
add
and
cmp
pop
cld
cwtl
fcoml
xchg
sub
jl
cwtl
or
cmp
add
ret
mov
imul
nop
mov
roll
cli
push
cmp
loopne
cs
mov
ret
jns
lea
test
push
lahf
in
mov
xchg
push
test
cmpsb
xlat
jge
ds
sub
leave
aas
mov
jge
into
jecxz
rcrl
mov
movb
dec
mov
jbe
cmpsb
in
dec
and
push
mov
lcall
fisttpl
imul
pop
add
int
insb
cwtl
out
cmp
rcrb
jmp
mov
outsb
mov
cmpsb
mov
notl
dec
sbb
mov
insb
icebp
pop
xchg
mov
je
or
movsl
repz
fists
test
icebp
jl
or
stos
mov
dec
shrl
dec
and
jae
sbb
push
clc
fwait
mov
scas
xor
sbb
stos
arpl
sub
scas
sub
or
nop
lods
cmp
ret
mov
in
push
idivl
jecxz
adc
or
bound
jmp
jle
dec
sub
sub
cli
add
mov
stc
push
mov
cltd
in
mov
shl
mov
test
adc
xchg
add
mov
inc
and
jp
and
scas
mov
out
sub
push
jno
cltd
pushl
ss
pmulhuw
dec
pusha
pop
inc
cmp
iret
mov
jo
insb
jbe
jb
ljmp
movsl
push
outsb
pushf
loope
les
js
sbb
xor
addr16
lcall
cmp
push
sub
loop
push
xchg
jb
inc
in
dec
sti
mov
gs
mov
xor
insb
xorl
mov
movsb
lahf
inc
sti
xchg
mov
call
in
ss
cmp
mov
aas
call
add
xor
or
or
xchg
lret
int3
int
int
leave
push
cltd
aas
or
sub
mov
jmp
dec
push
push
in
inc
mov
sti
repz
xchg
lret
and
enter
insl
gs
pop
lds
movl
xor
movb
lcall
sbb
dec
addr16
inc
push
jne
into
in
daa
push
sbb
ret
xchg
pop
fcomps
clc
mov
xchg
movsl
adc
pop
push
test
call
and
mov
shll
adc
mov
sarl
mov
sbb
call
imul
sbb
xchg
adcl
jl
movsb
jmp
std
data16
ljmp
xor
arpl
loope
in
out
imul
dec
nop
aam
push
sub
xchg
mov
push
sub
fs
movsb
add
xor
and
mov
std
push
les
leave
adc
lods
xchg
dec
sahf
xor
repz
arpl
cli
or
test
lods
push
mov
mov
add
jmp
mov
ljmp
out
movl
ja
fs
pop
mov
inc
xchg
add
popf
adc
ja
cwtl
dec
adc
xor
dec
lcall
pusha
push
aad
ljmp
adc
cld
fists
bound
dec
push
ds
bound
hlt
or
stos
sbb
and
push
and
in
sbb
sub
sbb
dec
dec
jle
fdivs
xor
ds
sub
iret
clc
mov
and
js
lretw
mov
data16
push
xlat
sbbl
cs
xchg
dec
mov
sbb
dec
mov
sbb
cld
push
sti
icebp
push
mov
jb
inc
adc
fldt
repnz
jecxz
add
addb
add
add
inc
mov
andl
icebp
leave
lahf
pushf
je
loop
fcom
sahf
dec
xchg
ss
adc
push
aas
mov
xor
xlat
jne
pop
lret
push
mov
sarl
mov
insl
inc
xor
adc
cld
pop
roll
lods
mov
cmp
inc
in
gs
pop
cld
sub
fsubrp
push
adc
jb
ret
sti
and
jl
popa
loopne
xchg
es
inc
push
dec
enter
nop
sub
fldenv
add
call
mov
or
jecxz
mov
push
lret
push
lods
jecxz
mov
mov
adc
cmp
and
enter
test
cld
and
orl
inc
lods
mov
add
sub
inc
push
loop
xchg
popa
xor
imul
sbb
and
std
add
xchg
push
jns
lcall
add
cltd
test
mov
cld
ljmp
mov
bound
jae
lea
push
add
push
or
pop
jmp
sbb
xchg
mov
outsl
or
pop
lock
dec
jmp
mov
stc
mov
out
stos
jo
add
ds
and
mov
loop
iret
loop
push
mov
pop
pushf
dec
loope
mov
imul
pop
popa
xor
add
mov
sti
inc
adc
fldenv
pop
adc
add
pusha
xchg
mov
cmp
jo
adc
push
cmpsb
add
adc
push
les
mov
mov
xchg
jns
daa
mov
fidivrs
sub
mov
or
add
dec
clc
add
sbb
sti
sbb
sbb
cs
xor
xchg
sbb
lea
aam
in
mov
or
cs
in
push
pop
aas
les
dec
jmp
adc
pop
fnstenv
xchg
sbb
mov
insb
ja
xlat
dec
or
jns
sbb
imul
out
shlb
fisttpll
add
add
out
scas
in
flds
fnstenv
xchg
sbb
xchg
mov
pop
decb
xchg
and
ds
pop
mov
sbb
int
inc
pop
divl
mov
popf
mov
pop
mov
imul
mov
jnp
pop
fistpll
stos
cwtl
or
jnp
ja
dec
add
out
mov
pop
mov
jl
pop
adc
add
out
imul
aad
mov
mov
std
test
imul
push
add
xchg
sbb
xchg
pop
or
mov
and
dec
pop
mov
cwtl
adc
inc
fistps
cmc
or
int
popa
fisubl
xchg
out
fidivrs
mov
sub
cmp
pop
dec
push
sbb
mov
push
mov
and
in
jl
push
xor
cmp
int3
mov
fsubp
cmc
jne
mov
jmp
jno
xchg
cmp
and
in
and
xchg
sbb
inc
fsubp
jp
imul
sbb
mov
jmp
dec
in
push
mov
push
mov
je
in
shrl
fmull
jmp
stos
xchg
gs
das
adc
dec
int
mov
lods
arpl
jmp
pop
data16
insl
xchg
mov
insb
mov
cmp
pop
pop
pop
mov
or
int
xlat
std
xor
xor
xchg
sldt
mov
sub
jge
mov
jae
pop
scas
lahf
lds
pop
loop
jmp
mov
fistps
sahf
es
int3
cmp
and
rorl
ljmp
jno
dec
lock
shll
fsubrs
jo
and
stos
hlt
fidivs
or
mulb
cmp
or
xchg
cmpsb
shrb
xchg
sbb
adc
xor
fs
add
push
adc
out
or
mov
imul
sub
and
sbbb
jecxz
push
cs
push
loope
sti
jae
xor
jbe
xchg
dec
cmp
ss
dec
enter
mov
pushf
push
adc
es
popa
cmpsl
mov
cmpsl
or
push
and
inc
lods
push
mov
popf
rorl
cmp
int3
jae
pusha
mov
imulb
fcom
pop
or
ljmp
es
aad
dec
aam
jbe
pop
xchg
jo
mov
xor
fwait
adcb
in
sarl
pop
jge
xchg
in
or
movsb
leave
jmp
daa
mov
or
mov
pop
sbb
or
and
jo
mov
mov
or
and
mov
sub
push
and
dec
sbb
jp
jns
mov
dec
dec
test
push
fsubr
neg
icebp
in
negb
inc
cmc
xchg
lcall
ja
fsts
cmp
stc
push
mov
adc
sub
icebp
enter
push
stc
scas
inc
stc
cmpsb
mov
lret
dec
sahf
mov
mov
xor
repnz
inc
jl
aam
loope
mov
mov
out
into
jl
dec
jle
mov
xchg
adc
push
sub
out
push
pop
fdivs
push
popa
and
mov
jo
and
roll
test
lcall
cmp
or
mov
mov
push
mov
lcall
jp
out
xor
jno
mov
jb
leave
movsl
inc
stos
xlat
sub
in
push
pop
mov
sub
jmp
jbe
subb
jmp
inc
fmull
or
addr16
fwait
add
mov
int
insl
pop
andb
pop
inc
or
xlat
lahf
ja
xor
data16
scas
gs
xchg
push
jmp
arpl
cmpl
inc
pop
arpl
fstpt
cmp
stos
jo
repnz
inc
add
popa
lods
mov
inc
out
sub
mov
cmpsb
sbb
fildl
loope
mov
sub
mov
stos
adc
jb
add
sub
cmp
out
daa
adc
adcb
mov
clc
in
xor
mov
les
cwtl
mov
in
out
add
psubd
mov
imull
fnstsw
pop
les
adc
push
mov
mov
leave
mov
mov
xchg
dec
inc
mov
sub
mov
pop
push
arpl
push
shlb
xchg
popf
aad
fiaddl
test
jmp
push
popf
frstor
dec
addr16
js
lds
mov
cwtl
pop
sbb
daa
push
xchg
inc
rcrl
test
cmp
sbbl
dec
fdivrl
cmp
lods
cs
push
arpl
pop
pop
out
mov
mov
jo
sub
ficoms
mov
arpl
out
and
jae
out
loopne
test
inc
adc
pop
shrb
out
cmp
sub
sbb
scas
xor
stos
clc
in
das
negl
jbe
xchg
std
mov
das
js
xor
addr16
repz
cltd
pushf
lods
mov
add
popf
add
sub
inc
aas
pop
daa
push
scas
adc
es
mov
idivb
pushf
mov
jl
jecxz
push
cmp
popf
call
fdivrs
imul
testl
mov
call
out
test
div
or
fstl
scas
cmp
outsb
aad
je
shrl
in
nop
pop
xor
pop
mov
in
adc
xor
ljmp
aam
mov
hlt
cmp
pop
sub
hlt
or
mov
xchg
jl
add
or
xchg
loope
mov
sub
adc
in
push
adc
xorb
mov
lods
outsl
movsl
ret
jle
icebp
iret
dec
fstpt
and
jp
ret
jno
push
push
loop
ret
mov
push
jge
dec
mov
mov
jmp
add
lahf
add
push
pop
or
ja
inc
xchg
xor
call
stc
enter
dec
loope
mov
out
je
imul
int
ror
add
mov
xor
or
cmp
jle
xchg
stos
sbb
and
ret
cmpsb
je
lea
adc
jo
pop
iret
and
das
sub
out
out
loop
or
negb
ljmp
cmp
inc
push
lcall
rcrl
insb
push
jo
or
and
mov
cmp
stos
xchg
pop
fimull
xor
pop
sub
ret
jmp
xchg
test
add
sub
in
jle
sbb
movb
adc
push
outsb
mov
mov
inc
fwait
les
lahf
stos
mov
xor
iret
xlat
imul
pop
mov
jb
daa
lea
dec
pusha
jns
xchg
or
icebp
inc
ja
pop
xchg
movaps
fisubs
push
je
scas
out
movsl
mov
lods
iret
std
mov
pop
add
popa
fs
or
mov
nopl
jg
bnd
jne
adc
fst
inc
les
mov
cltd
shlb
movsb
jno
loopne
push
ret
adc
in
sbb
pop
pop
xor
xlat
sbb
add
das
test
cmp
mov
cmpsb
test
cmp
add
adc
leave
ficompl
inc
mov
pop
dec
loope
shlb
add
das
mov
inc
sbb
sub
sub
or
inc
push
cmp
dec
test
jp
enter
fstpl
into
movsb
and
cmp
add
fs
movsl
push
mov
rorb
xor
sbb
or
mov
add
and
fisttpl
das
leave
loope
push
das
mov
aaa
fnstcw
add
int
pop
cmp
xchg
jb
je
clc
sub
mov
inc
stos
push
imul
mov
popf
cmpsl
ret
insb
add
inc
xchg
jl
stos
push
or
mov
aas
inc
fadds
les
pop
sub
push
sbb
frstor
dec
sub
push
pop
or
dec
das
js
popf
add
and
pop
mov
inc
lret
sar
xor
mov
jle
ds
enter
fidivrl
stos
pop
out
push
daa
leave
cmp
in
std
jno
push
pop
mov
loopne
push
jp
aaa
cmc
lcall
pop
cli
mov
add
mov
lret
test
xchg
ds
leave
out
xchg
mov
sub
inc
cmc
sarb
repz
idiv
mov
cmp
cmp
and
mov
adcb
repz
sbb
jl
jl
insb
dec
inc
jns
jl
cmc
sub
enter
push
insl
xor
add
pop
jbe
mov
fstps
jns
inc
mov
ljmp
jp
inc
test
xor
shrl
or
dec
shrl
push
test
jg
test
pop
ret
mov
lock
jecxz
lods
cmpsl
out
jecxz
xchg
lock
push
add
fnstenv
xlat
pop
mov
jne
es
add
xor
xchg
lock
mov
fcmovnu
dec
mov
xchg
in
jb
rorb
in
jb
push
and
mov
sub
stos
jno
lds
adc
iret
cmp
jno
fwait
mov
push
add
jnp
mov
jmp
inc
jb
inc
icebp
mov
fs
pop
ror
addr16
mov
mov
imul
jns
xchg
insl
clc
sbb
mov
fisttpl
xlat
xlat
adc
xchg
popa
movsl
xchg
cwtl
scas
inc
push
in
xor
mov
and
xchg
dec
pop
sub
sti
mov
es
sub
sub
push
int3
fsubrl
rcrb
and
or
add
movsb
lahf
imul
cmpsb
cmp
imul
stos
xchg
inc
int
pop
pop
stc
pop
xor
jb
mov
cmpb
sbb
sub
orl
cwtl
pop
mov
movsb
jp
or
scas
mov
mov
enter
jno
inc
bound
jae
lret
ja
stc
mov
nop
mov
popa
add
adc
pop
adc
js
dec
jl
inc
mov
out
xchg
push
or
out
mov
cmc
ret
dec
outsl
lods
cmp
int3
loop
add
aam
daa
repz
repz
sbb
cwtl
mov
and
pop
test
call
int3
mov
test
arpl
inc
fistpll
jecxz
out
test
lret
mov
and
and
sbb
stc
test
sbb
lret
xchg
outsb
cmp
add
fisttpll
mov
add
out
aad
sub
cli
mov
lods
sti
out
mov
fimuls
adc
aam
mov
mov
jge
pop
loope
push
ret
mov
or
lods
dec
sti
clc
pusha
mov
cld
and
adc
fisubl
call
mov
ss
cwtl
jp
fnstsw
adc
mov
cwtl
adc
jmp
pop
das
fcoms
adc
mov
popl
roll
imul
lcall
outsb
dec
sbb
int
mov
imul
mov
jo
cli
cmc
or
in
cli
push
imul
cmp
mov
dec
js
jo
mov
in
jne
pop
repz
sub
insb
sahf
mov
push
mov
mov
xor
nop
movsl
push
test
insl
inc
and
mov
jle
or
imul
cwtl
sbb
ljmp
bound
aad
mov
jno
or
je
das
fidivl
dec
push
and
ret
stc
sbb
sbb
mov
imul
outsl
dec
mov
sbb
idivb
jbe
fcomip
mov
pop
sbb
adc
imul
cli
call
lret
xor
cmpsb
sub
mov
pusha
add
cmpsb
repnz
mov
stos
mov
jl
and
pop
mov
jmp
adc
inc
cmpsl
icebp
imul
enter
in
dec
popa
mov
mov
xchg
arpl
and
lcall
fcmovu
gs
xchg
xchg
in
shr
outsl
fsubl
jecxz
lret
hlt
or
cmp
fbstp
or
fldenv
jecxz
pop
jmp
mov
test
xlat
sbb
mov
mov
mov
icebp
dec
pop
sbb
mov
fwait
loop
sub
push
mov
pop
mov
mov
push
mov
in
shr
cli
jns
mov
stos
fnstcw
arpl
xlat
mov
push
cwtl
daa
or
sti
inc
or
add
cmp
loope
push
xchg
cli
jae
xchg
std
lahf
sbb
movsb
clc
std
mov
or
outsb
stos
xchg
les
inc
outsl
and
scas
cs
fstp
cmp
add
in
les
xchg
jnp
push
xchg
push
mov
call
int
sbb
jb
sbb
fincstp
imull
pushf
ja
stos
sbb
call
sub
loop
and
jg
mov
dec
inc
mov
adc
inc
mov
mov
shl
and
mov
pop
pop
das
aaa
and
cmpsl
sahf
adc
and
in
loope
xor
or
xchg
je
inc
dec
adc
mov
xor
pop
addr16
divl
dec
mov
movsb
out
jle
push
in
pop
imul
shlb
fidivl
cmp
insb
gs
das
and
call
fcoms
fsubs
popa
pop
lcall
push
negb
inc
lods
fistl
mov
jns
pop
mov
jb
inc
test
mov
movsb
in
mov
mov
mov
aad
xchg
pusha
pop
xchg
jl
push
sti
stos
bswap
in
aam
daa
icebp
jne
mov
daa
mov
mull
das
insb
in
mov
or
cmp
inc
in
push
and
inc
lret
bswap
pop
inc
mov
ret
jge
and
mov
add
jmp
movsb
add
xor
call
xchg
ficomps
mov
notb
push
pop
fs
xor
cmp
popf
pop
es
mov
cmp
or
push
adc
sub
lret
xor
int
lods
pop
push
mov
daa
mov
cli
lahf
popa
in
sbbl
push
and
shrb
mov
cmp
loope
mov
jmp
cmp
xor
nop
iret
mov
cmp
pushf
inc
jg
lods
out
ja
int
push
mov
test
mov
sbb
dec
jmp
psllq
ja
sahf
mov
std
jmp
push
xchg
inc
jp
rorb
push
adc
sbb
lret
add
cmp
jmp
lods
cmp
push
mov
mov
aad
and
addr16
pop
hlt
push
jb
movsl
sub
out
and
cmp
pop
mov
pop
aad
popa
or
sbb
in
inc
jo
cmp
test
cmp
pushf
push
xchg
push
outsl
push
adc
insb
aas
push
and
sub
leave
jg
inc
and
mov
or
sbb
imul
stc
dec
sub
and
fcomp
or
sbb
lret
out
shlb
fwait
movsl
sub
or
jno
mov
rol
lea
inc
js
jg
mov
mov
push
adc
rcrl
xchg
daa
push
push
into
repz
hlt
cmp
clc
inc
push
xor
lds
xchg
jmp
hlt
fcomp
in
out
stos
